
../repos/dvidelabs-flatcc-3b39ef7/test/json_test/test_json_parser:     file format elf32-littlearm


Disassembly of section .init:

00012a70 <.init>:
   12a70:	push	{r3, lr}
   12a74:	bl	12c04 <_start@@Base+0x3c>
   12a78:	pop	{r3, pc}

Disassembly of section .plt:

00012a7c <fopen@plt-0x14>:
   12a7c:	push	{lr}		; (str lr, [sp, #-4]!)
   12a80:	ldr	lr, [pc, #4]	; 12a8c <fopen@plt-0x4>
   12a84:	add	lr, pc, lr
   12a88:	ldr	pc, [lr, #8]!
   12a8c:	andeq	r3, r3, r4, ror r5

00012a90 <fopen@plt>:
   12a90:	add	ip, pc, #0, 12
   12a94:	add	ip, ip, #208896	; 0x33000
   12a98:	ldr	pc, [ip, #1396]!	; 0x574

00012a9c <free@plt>:
   12a9c:	add	ip, pc, #0, 12
   12aa0:	add	ip, ip, #208896	; 0x33000
   12aa4:	ldr	pc, [ip, #1388]!	; 0x56c

00012aa8 <memcpy@plt>:
   12aa8:	add	ip, pc, #0, 12
   12aac:	add	ip, ip, #208896	; 0x33000
   12ab0:	ldr	pc, [ip, #1380]!	; 0x564

00012ab4 <ftell@plt>:
   12ab4:	add	ip, pc, #0, 12
   12ab8:	add	ip, ip, #208896	; 0x33000
   12abc:	ldr	pc, [ip, #1372]!	; 0x55c

00012ac0 <rewind@plt>:
   12ac0:	add	ip, pc, #0, 12
   12ac4:	add	ip, ip, #208896	; 0x33000
   12ac8:	ldr	pc, [ip, #1364]!	; 0x554

00012acc <__isinff@plt>:
   12acc:	add	ip, pc, #0, 12
   12ad0:	add	ip, ip, #208896	; 0x33000
   12ad4:	ldr	pc, [ip, #1356]!	; 0x54c

00012ad8 <__isinf@plt>:
   12ad8:	add	ip, pc, #0, 12
   12adc:	add	ip, ip, #208896	; 0x33000
   12ae0:	ldr	pc, [ip, #1348]!	; 0x544

00012ae4 <realloc@plt>:
   12ae4:	add	ip, pc, #0, 12
   12ae8:	add	ip, ip, #208896	; 0x33000
   12aec:	ldr	pc, [ip, #1340]!	; 0x53c

00012af0 <fwrite@plt>:
   12af0:	add	ip, pc, #0, 12
   12af4:	add	ip, ip, #208896	; 0x33000
   12af8:	ldr	pc, [ip, #1332]!	; 0x534

00012afc <malloc@plt>:
   12afc:	add	ip, pc, #0, 12
   12b00:	add	ip, ip, #208896	; 0x33000
   12b04:	ldr	pc, [ip, #1324]!	; 0x52c

00012b08 <__libc_start_main@plt>:
   12b08:	add	ip, pc, #0, 12
   12b0c:	add	ip, ip, #208896	; 0x33000
   12b10:	ldr	pc, [ip, #1316]!	; 0x524

00012b14 <__gmon_start__@plt>:
   12b14:	add	ip, pc, #0, 12
   12b18:	add	ip, ip, #208896	; 0x33000
   12b1c:	ldr	pc, [ip, #1308]!	; 0x51c

00012b20 <exit@plt>:
   12b20:	add	ip, pc, #0, 12
   12b24:	add	ip, ip, #208896	; 0x33000
   12b28:	ldr	pc, [ip, #1300]!	; 0x514

00012b2c <bcmp@plt>:
   12b2c:	add	ip, pc, #0, 12
   12b30:	add	ip, ip, #208896	; 0x33000
   12b34:	ldr	pc, [ip, #1292]!	; 0x50c

00012b38 <strlen@plt>:
   12b38:	add	ip, pc, #0, 12
   12b3c:	add	ip, ip, #208896	; 0x33000
   12b40:	ldr	pc, [ip, #1284]!	; 0x504

00012b44 <fprintf@plt>:
   12b44:	add	ip, pc, #0, 12
   12b48:	add	ip, ip, #208896	; 0x33000
   12b4c:	ldr	pc, [ip, #1276]!	; 0x4fc

00012b50 <posix_memalign@plt>:
   12b50:	add	ip, pc, #0, 12
   12b54:	add	ip, ip, #208896	; 0x33000
   12b58:	ldr	pc, [ip, #1268]!	; 0x4f4

00012b5c <memset@plt>:
   12b5c:	add	ip, pc, #0, 12
   12b60:	add	ip, ip, #208896	; 0x33000
   12b64:	ldr	pc, [ip, #1260]!	; 0x4ec

00012b68 <strtod@plt>:
   12b68:	add	ip, pc, #0, 12
   12b6c:	add	ip, ip, #208896	; 0x33000
   12b70:	ldr	pc, [ip, #1252]!	; 0x4e4

00012b74 <memchr@plt>:
   12b74:	add	ip, pc, #0, 12
   12b78:	add	ip, ip, #208896	; 0x33000
   12b7c:	ldr	pc, [ip, #1244]!	; 0x4dc

00012b80 <fclose@plt>:
   12b80:	add	ip, pc, #0, 12
   12b84:	add	ip, ip, #208896	; 0x33000
   12b88:	ldr	pc, [ip, #1236]!	; 0x4d4

00012b8c <fputc@plt>:
   12b8c:	add	ip, pc, #0, 12
   12b90:	add	ip, ip, #208896	; 0x33000
   12b94:	ldr	pc, [ip, #1228]!	; 0x4cc

00012b98 <fread_unlocked@plt>:
   12b98:	add	ip, pc, #0, 12
   12b9c:	add	ip, ip, #208896	; 0x33000
   12ba0:	ldr	pc, [ip, #1220]!	; 0x4c4

00012ba4 <fseek@plt>:
   12ba4:	add	ip, pc, #0, 12
   12ba8:	add	ip, ip, #208896	; 0x33000
   12bac:	ldr	pc, [ip, #1212]!	; 0x4bc

00012bb0 <abort@plt>:
   12bb0:	add	ip, pc, #0, 12
   12bb4:	add	ip, ip, #208896	; 0x33000
   12bb8:	ldr	pc, [ip, #1204]!	; 0x4b4

00012bbc <__assert_fail@plt>:
   12bbc:	add	ip, pc, #0, 12
   12bc0:	add	ip, ip, #208896	; 0x33000
   12bc4:	ldr	pc, [ip, #1196]!	; 0x4ac

Disassembly of section .text:

00012bc8 <_start@@Base>:
   12bc8:	mov	fp, #0
   12bcc:	mov	lr, #0
   12bd0:	pop	{r1}		; (ldr r1, [sp], #4)
   12bd4:	mov	r2, sp
   12bd8:	push	{r2}		; (str r2, [sp, #-4]!)
   12bdc:	push	{r0}		; (str r0, [sp, #-4]!)
   12be0:	ldr	ip, [pc, #16]	; 12bf8 <_start@@Base+0x30>
   12be4:	push	{ip}		; (str ip, [sp, #-4]!)
   12be8:	ldr	r0, [pc, #12]	; 12bfc <_start@@Base+0x34>
   12bec:	ldr	r3, [pc, #12]	; 12c00 <_start@@Base+0x38>
   12bf0:	bl	12b08 <__libc_start_main@plt>
   12bf4:	bl	12bb0 <abort@plt>
   12bf8:	andeq	r3, r3, r0, lsl #16
   12bfc:			; <UNDEFINED> instruction: 0x000133bc
   12c00:	andeq	r3, r3, r0, lsr #15
   12c04:	ldr	r3, [pc, #20]	; 12c20 <_start@@Base+0x58>
   12c08:	ldr	r2, [pc, #20]	; 12c24 <_start@@Base+0x5c>
   12c0c:	add	r3, pc, r3
   12c10:	ldr	r2, [r3, r2]
   12c14:	cmp	r2, #0
   12c18:	bxeq	lr
   12c1c:	b	12b14 <__gmon_start__@plt>
   12c20:	andeq	r3, r3, ip, ror #7
   12c24:	andeq	r0, r0, ip, ror r0
   12c28:	ldr	r0, [pc, #24]	; 12c48 <_start@@Base+0x80>
   12c2c:	ldr	r3, [pc, #24]	; 12c4c <_start@@Base+0x84>
   12c30:	cmp	r3, r0
   12c34:	bxeq	lr
   12c38:	ldr	r3, [pc, #16]	; 12c50 <_start@@Base+0x88>
   12c3c:	cmp	r3, #0
   12c40:	bxeq	lr
   12c44:	bx	r3
   12c48:	andeq	r6, r4, r8, ror #6
   12c4c:	andeq	r6, r4, r8, ror #6
   12c50:	andeq	r0, r0, r0
   12c54:	ldr	r0, [pc, #36]	; 12c80 <_start@@Base+0xb8>
   12c58:	ldr	r1, [pc, #36]	; 12c84 <_start@@Base+0xbc>
   12c5c:	sub	r1, r1, r0
   12c60:	asr	r1, r1, #2
   12c64:	add	r1, r1, r1, lsr #31
   12c68:	asrs	r1, r1, #1
   12c6c:	bxeq	lr
   12c70:	ldr	r3, [pc, #16]	; 12c88 <_start@@Base+0xc0>
   12c74:	cmp	r3, #0
   12c78:	bxeq	lr
   12c7c:	bx	r3
   12c80:	andeq	r6, r4, r8, ror #6
   12c84:	andeq	r6, r4, r8, ror #6
   12c88:	andeq	r0, r0, r0
   12c8c:	push	{r4, lr}
   12c90:	ldr	r4, [pc, #24]	; 12cb0 <_start@@Base+0xe8>
   12c94:	ldrb	r3, [r4]
   12c98:	cmp	r3, #0
   12c9c:	popne	{r4, pc}
   12ca0:	bl	12c28 <_start@@Base+0x60>
   12ca4:	mov	r3, #1
   12ca8:	strb	r3, [r4]
   12cac:	pop	{r4, pc}
   12cb0:	andeq	r6, r4, r8, ror #6
   12cb4:	b	12c54 <_start@@Base+0x8c>

00012cb8 <verify_parse@@Base>:
   12cb8:	push	{fp, lr}
   12cbc:	mov	fp, sp
   12cc0:	cmp	r0, #0
   12cc4:	beq	12d9c <verify_parse@@Base+0xe4>
   12cc8:	ldr	r1, [r0, #4]
   12ccc:	movw	r2, #20301	; 0x4f4d
   12cd0:	movt	r2, #21326	; 0x534e
   12cd4:	cmp	r1, r2
   12cd8:	bne	12d9c <verify_parse@@Base+0xe4>
   12cdc:	ldr	r1, [r0]
   12ce0:	ldr	r2, [r0, r1]!
   12ce4:	mov	r1, r0
   12ce8:	ldrh	r2, [r1, -r2]!	; <UNPREDICTABLE>
   12cec:	cmp	r2, #5
   12cf0:	bls	12dbc <verify_parse@@Base+0x104>
   12cf4:	ldrh	r1, [r1, #4]
   12cf8:	cmp	r1, #0
   12cfc:	beq	12dbc <verify_parse@@Base+0x104>
   12d00:	add	r0, r0, r1
   12d04:	vmov.f32	s2, #112	; 0x3f800000  1.0
   12d08:	vldr	s0, [r0]
   12d0c:	vcmp.f32	s0, s2
   12d10:	vmrs	APSR_nzcv, fpscr
   12d14:	bne	12ddc <verify_parse@@Base+0x124>
   12d18:	vldr	s0, [r0, #4]
   12d1c:	vmov.f32	s2, #0	; 0x40000000  2.0
   12d20:	vcmp.f32	s0, s2
   12d24:	vmrs	APSR_nzcv, fpscr
   12d28:	bne	12dfc <verify_parse@@Base+0x144>
   12d2c:	vldr	s0, [r0, #8]
   12d30:	vmov.f32	s2, #8	; 0x40400000  3.0
   12d34:	vcmp.f32	s0, s2
   12d38:	vmrs	APSR_nzcv, fpscr
   12d3c:	bne	12e1c <verify_parse@@Base+0x164>
   12d40:	vldr	d16, [r0, #16]
   12d44:	vmov.f64	d17, #8	; 0x40400000  3.0
   12d48:	vcmp.f64	d16, d17
   12d4c:	vmrs	APSR_nzcv, fpscr
   12d50:	bne	12e3c <verify_parse@@Base+0x184>
   12d54:	ldrb	r1, [r0, #24]
   12d58:	cmp	r1, #2
   12d5c:	bne	12e5c <verify_parse@@Base+0x1a4>
   12d60:	ldrh	r1, [r0, #26]
   12d64:	cmp	r1, #5
   12d68:	bne	12e7c <verify_parse@@Base+0x1c4>
   12d6c:	ldrb	r0, [r0, #28]
   12d70:	cmp	r0, #6
   12d74:	moveq	r0, #0
   12d78:	popeq	{fp, pc}
   12d7c:	ldr	r0, [pc, #376]	; 12efc <verify_parse@@Base+0x244>
   12d80:	ldr	r1, [pc, #376]	; 12f00 <verify_parse@@Base+0x248>
   12d84:	ldr	r3, [pc, #376]	; 12f04 <verify_parse@@Base+0x24c>
   12d88:	mov	r2, #54	; 0x36
   12d8c:	add	r0, pc, r0
   12d90:	add	r1, pc, r1
   12d94:	add	r3, pc, r3
   12d98:	bl	12bbc <__assert_fail@plt>
   12d9c:	ldr	r0, [pc, #248]	; 12e9c <verify_parse@@Base+0x1e4>
   12da0:	ldr	r1, [pc, #248]	; 12ea0 <verify_parse@@Base+0x1e8>
   12da4:	ldr	r3, [pc, #248]	; 12ea4 <verify_parse@@Base+0x1ec>
   12da8:	mov	r2, #696	; 0x2b8
   12dac:	add	r0, pc, r0
   12db0:	add	r1, pc, r1
   12db4:	add	r3, pc, r3
   12db8:	bl	12bbc <__assert_fail@plt>
   12dbc:	ldr	r0, [pc, #228]	; 12ea8 <verify_parse@@Base+0x1f0>
   12dc0:	ldr	r1, [pc, #228]	; 12eac <verify_parse@@Base+0x1f4>
   12dc4:	ldr	r3, [pc, #228]	; 12eb0 <verify_parse@@Base+0x1f8>
   12dc8:	mov	r2, #45	; 0x2d
   12dcc:	add	r0, pc, r0
   12dd0:	add	r1, pc, r1
   12dd4:	add	r3, pc, r3
   12dd8:	bl	12bbc <__assert_fail@plt>
   12ddc:	ldr	r0, [pc, #208]	; 12eb4 <verify_parse@@Base+0x1fc>
   12de0:	ldr	r1, [pc, #208]	; 12eb8 <verify_parse@@Base+0x200>
   12de4:	ldr	r3, [pc, #208]	; 12ebc <verify_parse@@Base+0x204>
   12de8:	mov	r2, #46	; 0x2e
   12dec:	add	r0, pc, r0
   12df0:	add	r1, pc, r1
   12df4:	add	r3, pc, r3
   12df8:	bl	12bbc <__assert_fail@plt>
   12dfc:	ldr	r0, [pc, #188]	; 12ec0 <verify_parse@@Base+0x208>
   12e00:	ldr	r1, [pc, #188]	; 12ec4 <verify_parse@@Base+0x20c>
   12e04:	ldr	r3, [pc, #188]	; 12ec8 <verify_parse@@Base+0x210>
   12e08:	mov	r2, #47	; 0x2f
   12e0c:	add	r0, pc, r0
   12e10:	add	r1, pc, r1
   12e14:	add	r3, pc, r3
   12e18:	bl	12bbc <__assert_fail@plt>
   12e1c:	ldr	r0, [pc, #168]	; 12ecc <verify_parse@@Base+0x214>
   12e20:	ldr	r1, [pc, #168]	; 12ed0 <verify_parse@@Base+0x218>
   12e24:	ldr	r3, [pc, #168]	; 12ed4 <verify_parse@@Base+0x21c>
   12e28:	mov	r2, #48	; 0x30
   12e2c:	add	r0, pc, r0
   12e30:	add	r1, pc, r1
   12e34:	add	r3, pc, r3
   12e38:	bl	12bbc <__assert_fail@plt>
   12e3c:	ldr	r0, [pc, #148]	; 12ed8 <verify_parse@@Base+0x220>
   12e40:	ldr	r1, [pc, #148]	; 12edc <verify_parse@@Base+0x224>
   12e44:	ldr	r3, [pc, #148]	; 12ee0 <verify_parse@@Base+0x228>
   12e48:	mov	r2, #49	; 0x31
   12e4c:	add	r0, pc, r0
   12e50:	add	r1, pc, r1
   12e54:	add	r3, pc, r3
   12e58:	bl	12bbc <__assert_fail@plt>
   12e5c:	ldr	r0, [pc, #128]	; 12ee4 <verify_parse@@Base+0x22c>
   12e60:	ldr	r1, [pc, #128]	; 12ee8 <verify_parse@@Base+0x230>
   12e64:	ldr	r3, [pc, #128]	; 12eec <verify_parse@@Base+0x234>
   12e68:	mov	r2, #50	; 0x32
   12e6c:	add	r0, pc, r0
   12e70:	add	r1, pc, r1
   12e74:	add	r3, pc, r3
   12e78:	bl	12bbc <__assert_fail@plt>
   12e7c:	ldr	r0, [pc, #108]	; 12ef0 <verify_parse@@Base+0x238>
   12e80:	ldr	r1, [pc, #108]	; 12ef4 <verify_parse@@Base+0x23c>
   12e84:	ldr	r3, [pc, #108]	; 12ef8 <verify_parse@@Base+0x240>
   12e88:	mov	r2, #53	; 0x35
   12e8c:	add	r0, pc, r0
   12e90:	add	r1, pc, r1
   12e94:	add	r3, pc, r3
   12e98:	bl	12bbc <__assert_fail@plt>
   12e9c:	andeq	r0, r2, lr, asr #23
   12ea0:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   12ea4:	andeq	r0, r2, r2, ror #24
   12ea8:	strdeq	r2, [r2], -pc	; <UNPREDICTABLE>
   12eac:	andeq	r0, r2, r1, asr #20
   12eb0:	andeq	r0, r2, r6, lsr #21
   12eb4:	ldrdeq	r2, [r2], -pc	; <UNPREDICTABLE>
   12eb8:	andeq	r0, r2, r1, lsr #20
   12ebc:	andeq	r0, r2, r6, lsl #21
   12ec0:	strheq	r2, [r2], -pc	; <UNPREDICTABLE>
   12ec4:	andeq	r0, r2, r1, lsl #20
   12ec8:	andeq	r0, r2, r6, ror #20
   12ecc:	muleq	r2, pc, r0	; <UNPREDICTABLE>
   12ed0:	andeq	r0, r2, r1, ror #19
   12ed4:	andeq	r0, r2, r6, asr #20
   12ed8:	andeq	r2, r2, pc, ror r0
   12edc:	andeq	r0, r2, r1, asr #19
   12ee0:	andeq	r0, r2, r6, lsr #20
   12ee4:	andeq	r2, r2, pc, asr r0
   12ee8:	andeq	r0, r2, r1, lsr #19
   12eec:	andeq	r0, r2, r6, lsl #20
   12ef0:	andeq	r2, r2, pc, lsr r0
   12ef4:	andeq	r0, r2, r1, lsl #19
   12ef8:	andeq	r0, r2, r6, ror #19
   12efc:	andeq	r2, r2, pc, lsr r1
   12f00:	andeq	r0, r2, r1, lsl #21
   12f04:	andeq	r0, r2, r6, ror #21

00012f08 <test_parse@@Base>:
   12f08:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12f0c:	add	fp, sp, #28
   12f10:	sub	sp, sp, #316	; 0x13c
   12f14:	add	r8, sp, #12
   12f18:	mov	r0, r8
   12f1c:	bl	29880 <flatcc_builder_init@@Base>
   12f20:	ldr	r9, [pc, #1068]	; 13354 <test_parse@@Base+0x44c>
   12f24:	ldr	r9, [pc, r9]
   12f28:	ldr	r0, [r9]
   12f2c:	ldr	r1, [pc, #1060]	; 13358 <test_parse@@Base+0x450>
   12f30:	add	r1, pc, r1
   12f34:	bl	12a90 <fopen@plt>
   12f38:	cmp	r0, #0
   12f3c:	beq	130d0 <test_parse@@Base+0x1c8>
   12f40:	mov	r1, #0
   12f44:	mov	r2, #2
   12f48:	mov	r7, r0
   12f4c:	bl	12ba4 <fseek@plt>
   12f50:	mov	r0, r7
   12f54:	bl	12ab4 <ftell@plt>
   12f58:	cmp	r0, #10240	; 0x2800
   12f5c:	bhi	130c8 <test_parse@@Base+0x1c0>
   12f60:	mov	r5, r0
   12f64:	mov	r0, r7
   12f68:	bl	12ac0 <rewind@plt>
   12f6c:	cmp	r5, #0
   12f70:	mov	r0, r5
   12f74:	movweq	r0, #1
   12f78:	bl	12afc <malloc@plt>
   12f7c:	cmp	r0, #0
   12f80:	beq	130c8 <test_parse@@Base+0x1c0>
   12f84:	mov	r4, r0
   12f88:	mov	r1, #0
   12f8c:	mov	r6, r1
   12f90:	add	r0, r4, r1
   12f94:	sub	r2, r5, r1
   12f98:	mov	r1, #1
   12f9c:	mov	r3, r7
   12fa0:	bl	12b98 <fread_unlocked@plt>
   12fa4:	add	r1, r0, r6
   12fa8:	cmp	r0, #0
   12fac:	bne	12f8c <test_parse@@Base+0x84>
   12fb0:	mov	r0, r7
   12fb4:	bl	12b80 <fclose@plt>
   12fb8:	cmp	r5, r6
   12fbc:	bne	130bc <test_parse@@Base+0x1b4>
   12fc0:	vmov.i32	q8, #0	; 0x00000000
   12fc4:	sub	r0, fp, #100	; 0x64
   12fc8:	mov	r7, #0
   12fcc:	add	r6, r4, r5
   12fd0:	mov	r2, #0
   12fd4:	mov	r3, #0
   12fd8:	add	r1, r0, #12
   12fdc:	add	r0, r0, #28
   12fe0:	vst1.32	{d16-d17}, [r0]
   12fe4:	mov	r0, #1
   12fe8:	vst1.32	{d16-d17}, [r1]
   12fec:	str	r4, [fp, #-96]	; 0xffffffa0
   12ff0:	str	r8, [fp, #-100]	; 0xffffff9c
   12ff4:	str	r7, [fp, #-92]	; 0xffffffa4
   12ff8:	str	r0, [fp, #-84]	; 0xffffffac
   12ffc:	str	r4, [fp, #-64]	; 0xffffffc0
   13000:	str	r6, [fp, #-68]	; 0xffffffbc
   13004:	str	r4, [fp, #-72]	; 0xffffffb8
   13008:	mov	r0, r8
   1300c:	ldr	r1, [pc, #848]	; 13364 <test_parse@@Base+0x45c>
   13010:	add	r1, pc, r1
   13014:	bl	2a628 <flatcc_builder_start_buffer@@Base>
   13018:	cmp	r0, #0
   1301c:	bne	13058 <test_parse@@Base+0x150>
   13020:	sub	r0, fp, #100	; 0x64
   13024:	sub	r3, fp, #52	; 0x34
   13028:	mov	r1, r4
   1302c:	mov	r2, r6
   13030:	bl	13448 <main@@Base+0x8c>
   13034:	ldr	r7, [fp, #-76]	; 0xffffffb4
   13038:	cmp	r7, #0
   1303c:	bne	13058 <test_parse@@Base+0x150>
   13040:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13044:	add	r0, sp, #12
   13048:	bl	2a828 <flatcc_builder_end_buffer@@Base>
   1304c:	cmp	r0, #0
   13050:	bne	130fc <test_parse@@Base+0x1f4>
   13054:	ldr	r7, [fp, #-76]	; 0xffffffb4
   13058:	ldr	r0, [pc, #776]	; 13368 <test_parse@@Base+0x460>
   1305c:	ldr	r0, [pc, r0]
   13060:	ldr	r8, [r9]
   13064:	ldr	r5, [fp, #-96]	; 0xffffffa0
   13068:	ldr	r9, [fp, #-84]	; 0xffffffac
   1306c:	ldr	r6, [fp, #-64]	; 0xffffffc0
   13070:	ldr	sl, [r0]
   13074:	mov	r0, r7
   13078:	bl	2efa4 <flatcc_json_parser_error_string@@Base>
   1307c:	sub	r1, r6, r5
   13080:	str	r0, [sp, #4]
   13084:	mov	r0, sl
   13088:	mov	r2, r8
   1308c:	mov	r3, r9
   13090:	add	r1, r1, #1
   13094:	str	r1, [sp]
   13098:	ldr	r1, [pc, #716]	; 1336c <test_parse@@Base+0x464>
   1309c:	add	r1, pc, r1
   130a0:	bl	12b44 <fprintf@plt>
   130a4:	mvn	r5, #0
   130a8:	mov	r0, r4
   130ac:	bl	12a9c <free@plt>
   130b0:	add	r0, sp, #12
   130b4:	bl	29bf0 <flatcc_builder_clear@@Base>
   130b8:	b	130f0 <test_parse@@Base+0x1e8>
   130bc:	mov	r0, r4
   130c0:	bl	12a9c <free@plt>
   130c4:	b	130d0 <test_parse@@Base+0x1c8>
   130c8:	mov	r0, r7
   130cc:	bl	12b80 <fclose@plt>
   130d0:	ldr	r2, [r9]
   130d4:	ldr	r0, [pc, #640]	; 1335c <test_parse@@Base+0x454>
   130d8:	ldr	r0, [pc, r0]
   130dc:	ldr	r0, [r0]
   130e0:	ldr	r1, [pc, #632]	; 13360 <test_parse@@Base+0x458>
   130e4:	add	r1, pc, r1
   130e8:	bl	12b44 <fprintf@plt>
   130ec:	mvn	r5, #0
   130f0:	mov	r0, r5
   130f4:	sub	sp, fp, #28
   130f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   130fc:	str	r4, [fp, #-60]	; 0xffffffc4
   13100:	ldr	r0, [pc, #616]	; 13370 <test_parse@@Base+0x468>
   13104:	ldr	r0, [pc, r0]
   13108:	ldr	r2, [r9]
   1310c:	ldr	r3, [fp, #-84]	; 0xffffffac
   13110:	ldr	r0, [r0]
   13114:	ldr	r1, [pc, #600]	; 13374 <test_parse@@Base+0x46c>
   13118:	add	r1, pc, r1
   1311c:	bl	12b44 <fprintf@plt>
   13120:	add	r0, sp, #12
   13124:	sub	r1, fp, #56	; 0x38
   13128:	bl	2e3d4 <flatcc_builder_finalize_aligned_buffer@@Base>
   1312c:	ldr	r9, [pc, #580]	; 13378 <test_parse@@Base+0x470>
   13130:	mov	sl, r0
   13134:	ldr	r9, [pc, r9]
   13138:	ldr	r6, [fp, #-56]	; 0xffffffc8
   1313c:	ldr	r7, [r9]
   13140:	ldr	r1, [pc, #564]	; 1337c <test_parse@@Base+0x474>
   13144:	ldr	r2, [pc, #564]	; 13380 <test_parse@@Base+0x478>
   13148:	add	r1, pc, r1
   1314c:	add	r2, pc, r2
   13150:	mov	r0, r7
   13154:	bl	12b44 <fprintf@plt>
   13158:	cmp	r6, #0
   1315c:	beq	1324c <test_parse@@Base+0x344>
   13160:	mov	r9, #0
   13164:	ands	r8, r9, #15
   13168:	bne	131d4 <test_parse@@Base+0x2cc>
   1316c:	b	131ec <test_parse@@Base+0x2e4>
   13170:	ldr	r1, [pc, #528]	; 13388 <test_parse@@Base+0x480>
   13174:	mov	r0, r7
   13178:	mov	r2, r9
   1317c:	add	r1, pc, r1
   13180:	bl	12b44 <fprintf@plt>
   13184:	ldrb	r2, [sl, r9]
   13188:	ldr	r1, [pc, #544]	; 133b0 <test_parse@@Base+0x4a8>
   1318c:	mov	r0, r7
   13190:	add	r1, pc, r1
   13194:	bl	12b44 <fprintf@plt>
   13198:	ldrb	r0, [sl, r9]
   1319c:	add	r9, r9, #1
   131a0:	sub	r1, r0, #32
   131a4:	uxtb	r1, r1
   131a8:	cmp	r1, #94	; 0x5e
   131ac:	sub	r1, fp, #52	; 0x34
   131b0:	movwhi	r0, #46	; 0x2e
   131b4:	cmp	r6, r9
   131b8:	strb	r0, [r1, r8]
   131bc:	add	r0, r1, r8
   131c0:	mov	r1, #0
   131c4:	strb	r1, [r0, #1]
   131c8:	beq	1320c <test_parse@@Base+0x304>
   131cc:	ands	r8, r9, #15
   131d0:	beq	131ec <test_parse@@Base+0x2e4>
   131d4:	tst	r9, #7
   131d8:	bne	13184 <test_parse@@Base+0x27c>
   131dc:	mov	r0, #32
   131e0:	mov	r1, r7
   131e4:	bl	12b8c <fputc@plt>
   131e8:	b	13184 <test_parse@@Base+0x27c>
   131ec:	cmp	r9, #0
   131f0:	beq	13170 <test_parse@@Base+0x268>
   131f4:	ldr	r1, [pc, #392]	; 13384 <test_parse@@Base+0x47c>
   131f8:	mov	r0, r7
   131fc:	sub	r2, fp, #52	; 0x34
   13200:	add	r1, pc, r1
   13204:	bl	12b44 <fprintf@plt>
   13208:	b	13170 <test_parse@@Base+0x268>
   1320c:	ldr	r9, [pc, #376]	; 1338c <test_parse@@Base+0x484>
   13210:	tst	r6, #15
   13214:	ldr	r9, [pc, r9]
   13218:	beq	1324c <test_parse@@Base+0x344>
   1321c:	ldr	r8, [pc, #364]	; 13390 <test_parse@@Base+0x488>
   13220:	add	r6, r6, #1
   13224:	add	r8, pc, r8
   13228:	mov	r0, r8
   1322c:	mov	r1, #3
   13230:	mov	r2, #1
   13234:	mov	r3, r7
   13238:	bl	12af0 <fwrite@plt>
   1323c:	add	r0, r6, #1
   13240:	tst	r6, #15
   13244:	mov	r6, r0
   13248:	bne	13228 <test_parse@@Base+0x320>
   1324c:	ldr	r1, [pc, #320]	; 13394 <test_parse@@Base+0x48c>
   13250:	sub	r2, fp, #52	; 0x34
   13254:	mov	r0, r7
   13258:	add	r1, pc, r1
   1325c:	bl	12b44 <fprintf@plt>
   13260:	ldr	r0, [pc, #304]	; 13398 <test_parse@@Base+0x490>
   13264:	mov	r2, r5
   13268:	ldr	r0, [pc, r0]
   1326c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   13270:	ldr	r0, [r0]
   13274:	ldr	r1, [pc, #288]	; 1339c <test_parse@@Base+0x494>
   13278:	add	r1, pc, r1
   1327c:	bl	12b44 <fprintf@plt>
   13280:	mov	r0, sl
   13284:	bl	12cb8 <verify_parse@@Base>
   13288:	ldr	r5, [r9]
   1328c:	ldr	r7, [fp, #-56]	; 0xffffffc8
   13290:	ldr	r1, [pc, #264]	; 133a0 <test_parse@@Base+0x498>
   13294:	ldr	r2, [pc, #264]	; 133a4 <test_parse@@Base+0x49c>
   13298:	add	r1, pc, r1
   1329c:	add	r2, pc, r2
   132a0:	mov	r0, r5
   132a4:	bl	12b44 <fprintf@plt>
   132a8:	cmp	r7, #0
   132ac:	beq	1331c <test_parse@@Base+0x414>
   132b0:	ldr	r8, [pc, #240]	; 133a8 <test_parse@@Base+0x4a0>
   132b4:	ldr	r6, [pc, #240]	; 133ac <test_parse@@Base+0x4a4>
   132b8:	mov	r9, #0
   132bc:	add	r8, pc, r8
   132c0:	add	r6, pc, r6
   132c4:	tst	r9, #15
   132c8:	bne	13304 <test_parse@@Base+0x3fc>
   132cc:	mov	r0, r8
   132d0:	mov	r1, #4
   132d4:	mov	r2, #1
   132d8:	mov	r3, r5
   132dc:	bl	12af0 <fwrite@plt>
   132e0:	ldrb	r2, [sl, r9]
   132e4:	mov	r0, r5
   132e8:	mov	r1, r6
   132ec:	bl	12b44 <fprintf@plt>
   132f0:	add	r9, r9, #1
   132f4:	cmp	r7, r9
   132f8:	beq	1331c <test_parse@@Base+0x414>
   132fc:	tst	r9, #15
   13300:	beq	132cc <test_parse@@Base+0x3c4>
   13304:	tst	r9, #7
   13308:	bne	132e0 <test_parse@@Base+0x3d8>
   1330c:	ldr	r0, [pc, #160]	; 133b4 <test_parse@@Base+0x4ac>
   13310:	mov	r1, #3
   13314:	add	r0, pc, r0
   13318:	b	132d4 <test_parse@@Base+0x3cc>
   1331c:	ldr	r0, [pc, #148]	; 133b8 <test_parse@@Base+0x4b0>
   13320:	mov	r1, #4
   13324:	mov	r2, #1
   13328:	mov	r3, r5
   1332c:	add	r0, pc, r0
   13330:	bl	12af0 <fwrite@plt>
   13334:	add	r0, sp, #12
   13338:	bl	29a2c <flatcc_builder_reset@@Base>
   1333c:	mov	r5, #0
   13340:	cmp	sl, #0
   13344:	beq	130a8 <test_parse@@Base+0x1a0>
   13348:	mov	r0, sl
   1334c:	bl	2e514 <flatcc_builder_aligned_free@@Base>
   13350:	b	130a8 <test_parse@@Base+0x1a0>
   13354:	andeq	r3, r3, r4, asr r1
   13358:	andeq	r0, r2, lr, lsr fp
   1335c:	muleq	r3, r8, pc	; <UNPREDICTABLE>
   13360:	andeq	r0, r2, pc, lsr #15
   13364:	strdeq	r0, [r2], -ip
   13368:	andeq	r3, r3, r4, lsl r0
   1336c:	andeq	r0, r2, pc, ror r8
   13370:	andeq	r2, r3, ip, ror #30
   13374:	muleq	r2, pc, r7	; <UNPREDICTABLE>
   13378:	andeq	r2, r3, ip, asr #30
   1337c:	andeq	r0, r2, r4, lsr r9
   13380:	andeq	r0, r2, sp, lsl #15
   13384:	andeq	r0, r2, r1, lsl #17
   13388:	andeq	r0, r2, fp, lsl #18
   1338c:	andeq	r2, r3, ip, ror #28
   13390:	andeq	r0, r2, pc, lsl #17
   13394:	andeq	r0, r2, r9, lsr #16
   13398:	andeq	r2, r3, r8, lsl #28
   1339c:	andeq	r0, r2, r0, lsl #13
   133a0:	strdeq	r0, [r2], -sp
   133a4:	andeq	r0, r2, r5, asr r6
   133a8:	strdeq	r0, [r2], -r6
   133ac:	strdeq	r0, [r2], -r7
   133b0:	strdeq	r0, [r2], -pc	; <UNPREDICTABLE>
   133b4:	muleq	r2, pc, r7	; <UNPREDICTABLE>
   133b8:	muleq	r2, r4, r7

000133bc <main@@Base>:
   133bc:	push	{r4, r5, r6, sl, fp, lr}
   133c0:	add	fp, sp, #16
   133c4:	ldr	r6, [pc, #108]	; 13438 <main@@Base+0x7c>
   133c8:	mov	r5, r0
   133cc:	mov	r4, r1
   133d0:	mov	r1, #16
   133d4:	mov	r2, #1
   133d8:	ldr	r6, [pc, r6]
   133dc:	ldr	r3, [r6]
   133e0:	ldr	r0, [pc, #84]	; 1343c <main@@Base+0x80>
   133e4:	add	r0, pc, r0
   133e8:	bl	12af0 <fwrite@plt>
   133ec:	sub	r0, r5, #1
   133f0:	cmp	r0, #2
   133f4:	bcs	13418 <main@@Base+0x5c>
   133f8:	cmp	r5, #2
   133fc:	bne	13410 <main@@Base+0x54>
   13400:	ldr	r0, [r4, #4]
   13404:	ldr	r1, [pc, #52]	; 13440 <main@@Base+0x84>
   13408:	ldr	r1, [pc, r1]
   1340c:	str	r0, [r1]
   13410:	pop	{r4, r5, r6, sl, fp, lr}
   13414:	b	12f08 <test_parse@@Base>
   13418:	ldr	r3, [r6]
   1341c:	ldr	r0, [pc, #32]	; 13444 <main@@Base+0x88>
   13420:	mov	r1, #63	; 0x3f
   13424:	mov	r2, #1
   13428:	add	r0, pc, r0
   1342c:	bl	12af0 <fwrite@plt>
   13430:	mov	r0, #1
   13434:	bl	12b20 <exit@plt>
   13438:	muleq	r3, r8, ip
   1343c:	andeq	r0, r2, r5, asr #10
   13440:	andeq	r2, r3, r0, ror ip
   13444:	andeq	r0, r2, r2, lsl r5
   13448:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1344c:	add	fp, sp, #28
   13450:	sub	sp, sp, #4
   13454:	vpush	{d8-d9}
   13458:	sub	sp, sp, #80	; 0x50
   1345c:	mov	r8, r0
   13460:	mov	r0, #0
   13464:	mov	r4, r1
   13468:	mov	r1, #36	; 0x24
   1346c:	mov	sl, r3
   13470:	mov	r5, r2
   13474:	str	r0, [r3]
   13478:	ldr	r0, [r8]
   1347c:	bl	2bc04 <flatcc_builder_start_table@@Base>
   13480:	cmp	r0, #0
   13484:	beq	134b4 <main@@Base+0xf8>
   13488:	mov	r0, r8
   1348c:	mov	r1, r4
   13490:	mov	r2, r5
   13494:	mov	r3, #33	; 0x21
   13498:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   1349c:	mov	r7, r0
   134a0:	mov	r0, r7
   134a4:	sub	sp, fp, #48	; 0x30
   134a8:	vpop	{d8-d9}
   134ac:	add	sp, sp, #4
   134b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   134b4:	add	r0, sp, #48	; 0x30
   134b8:	mov	r1, r4
   134bc:	mov	r2, r5
   134c0:	mov	r3, #1
   134c4:	str	r0, [sp]
   134c8:	mov	r0, r8
   134cc:	bl	31bac <flatcc_json_parser_prepare_unions@@Base>
   134d0:	cmp	r0, r5
   134d4:	beq	13488 <main@@Base+0xcc>
   134d8:	cmp	r4, r5
   134dc:	beq	13510 <main@@Base+0x154>
   134e0:	ldrb	r0, [r4]
   134e4:	cmp	r0, #123	; 0x7b
   134e8:	bne	13510 <main@@Base+0x154>
   134ec:	add	r1, r4, #1
   134f0:	sub	r0, r5, r1
   134f4:	cmp	r0, #2
   134f8:	blt	135a8 <main@@Base+0x1ec>
   134fc:	ldrb	r0, [r1]
   13500:	cmp	r0, #32
   13504:	bls	13598 <main@@Base+0x1dc>
   13508:	mov	r4, r1
   1350c:	b	135b8 <main@@Base+0x1fc>
   13510:	mov	r0, r8
   13514:	mov	r1, r4
   13518:	mov	r2, r5
   1351c:	mov	r3, #21
   13520:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   13524:	mov	r4, r0
   13528:	ldr	r0, [r8, #24]
   1352c:	cmp	r0, #0
   13530:	bne	13488 <main@@Base+0xcc>
   13534:	ldr	r0, [r8]
   13538:	mov	r1, #3
   1353c:	bl	2c48c <flatcc_builder_check_required_field@@Base>
   13540:	cmp	r0, #0
   13544:	beq	1357c <main@@Base+0x1c0>
   13548:	ldr	r3, [sp, #48]	; 0x30
   1354c:	mov	r0, r8
   13550:	mov	r1, r4
   13554:	mov	r2, r5
   13558:	bl	31c3c <flatcc_json_parser_finalize_unions@@Base>
   1355c:	mov	r7, r0
   13560:	ldr	r0, [r8]
   13564:	bl	2c62c <flatcc_builder_end_table@@Base>
   13568:	cmp	r0, #0
   1356c:	mov	r4, r7
   13570:	str	r0, [sl]
   13574:	bne	134a0 <main@@Base+0xe4>
   13578:	b	13488 <main@@Base+0xcc>
   1357c:	mov	r0, r8
   13580:	mov	r1, r4
   13584:	mov	r2, r5
   13588:	mov	r3, #29
   1358c:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   13590:	mov	r4, r0
   13594:	b	13488 <main@@Base+0xcc>
   13598:	bne	135a8 <main@@Base+0x1ec>
   1359c:	ldrb	r0, [r4, #2]!
   135a0:	cmp	r0, #32
   135a4:	bhi	135b8 <main@@Base+0x1fc>
   135a8:	mov	r0, r8
   135ac:	mov	r2, r5
   135b0:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   135b4:	mov	r4, r0
   135b8:	cmp	r4, r5
   135bc:	mov	r2, r5
   135c0:	beq	13604 <main@@Base+0x248>
   135c4:	ldrb	r0, [r4]
   135c8:	cmp	r0, #125	; 0x7d
   135cc:	bne	13600 <main@@Base+0x244>
   135d0:	add	r1, r4, #1
   135d4:	sub	r0, r5, r1
   135d8:	cmp	r0, #2
   135dc:	blt	1d598 <main@@Base+0xa1dc>
   135e0:	ldrb	r0, [r1]
   135e4:	cmp	r0, #32
   135e8:	bhi	1d55c <main@@Base+0xa1a0>
   135ec:	bne	1d598 <main@@Base+0xa1dc>
   135f0:	ldrb	r0, [r4, #2]!
   135f4:	cmp	r0, #32
   135f8:	bhi	13528 <main@@Base+0x16c>
   135fc:	b	1d598 <main@@Base+0xa1dc>
   13600:	mov	r2, r4
   13604:	add	r0, r8, #12
   13608:	vldr	s18, [pc, #896]	; 13990 <main@@Base+0x5d4>
   1360c:	movw	lr, #29556	; 0x7374
   13610:	vmov.f32	s16, #8	; 0x40400000  3.0
   13614:	str	r5, [sp, #44]	; 0x2c
   13618:	str	r8, [sp, #40]	; 0x28
   1361c:	str	sl, [sp, #36]	; 0x24
   13620:	str	r0, [sp, #32]
   13624:	movw	r0, #13407	; 0x345f
   13628:	movt	lr, #29797	; 0x7465
   1362c:	movt	r0, #29494	; 0x7336
   13630:	sub	r0, r0, #512	; 0x200
   13634:	sub	r0, r0, #196608	; 0x30000
   13638:	str	r0, [sp, #28]
   1363c:	cmp	r2, r5
   13640:	mov	r9, r5
   13644:	beq	136a0 <main@@Base+0x2e4>
   13648:	ldrb	r0, [r2]
   1364c:	cmp	r0, #46	; 0x2e
   13650:	beq	1366c <main@@Base+0x2b0>
   13654:	cmp	r0, #34	; 0x22
   13658:	bne	13690 <main@@Base+0x2d4>
   1365c:	ldr	r0, [sp, #32]
   13660:	mov	r1, #0
   13664:	add	r9, r2, #1
   13668:	b	1369c <main@@Base+0x2e0>
   1366c:	mov	r1, r2
   13670:	mov	r0, r8
   13674:	mov	r2, r5
   13678:	mov	r3, #5
   1367c:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   13680:	movw	lr, #29556	; 0x7374
   13684:	mov	r9, r0
   13688:	movt	lr, #29797	; 0x7465
   1368c:	b	136a0 <main@@Base+0x2e4>
   13690:	ldr	r0, [sp, #32]
   13694:	mov	r1, #1
   13698:	mov	r9, r2
   1369c:	str	r1, [r0]
   136a0:	sub	r8, r5, r9
   136a4:	mov	r0, #8
   136a8:	cmp	r8, #8
   136ac:	movcc	r0, r8
   136b0:	sub	r0, r0, #1
   136b4:	cmp	r0, #7
   136b8:	bhi	14948 <main@@Base+0x158c>
   136bc:	add	r7, pc, #36	; 0x24
   136c0:	mov	sl, #0
   136c4:	mov	ip, #0
   136c8:	mov	r4, #0
   136cc:	mov	r1, #0
   136d0:	mov	r2, #0
   136d4:	mov	r3, #0
   136d8:	mov	r6, #0
   136dc:	mov	r5, #0
   136e0:	ldr	r0, [r7, r0, lsl #2]
   136e4:	add	pc, r7, r0
   136e8:	andeq	r0, r0, r4, rrx
   136ec:	andeq	r0, r0, ip, asr r0
   136f0:	andeq	r0, r0, r4, asr r0
   136f4:	andeq	r0, r0, ip, asr #32
   136f8:	andeq	r0, r0, r0, asr #32
   136fc:	andeq	r0, r0, r4, lsr r0
   13700:	andeq	r0, r0, r4, lsr #32
   13704:	andeq	r0, r0, r0, lsr #32
   13708:	ldrb	ip, [r9, #7]
   1370c:	ldrb	r0, [r9, #6]
   13710:	mov	r4, sl
   13714:	orr	r0, ip, r0, lsl #8
   13718:	mov	sl, r0
   1371c:	ldrb	r0, [r9, #5]
   13720:	mov	r1, r4
   13724:	orr	sl, sl, r0, lsl #16
   13728:	ldrb	r0, [r9, #4]
   1372c:	mov	r2, r1
   13730:	orr	sl, sl, r0, lsl #24
   13734:	ldrb	r0, [r9, #3]
   13738:	orr	r3, r0, r2
   1373c:	ldrb	r0, [r9, #2]
   13740:	orr	r6, r3, r0, lsl #8
   13744:	ldrb	r0, [r9, #1]
   13748:	orr	r5, r6, r0, lsl #16
   1374c:	ldrb	r0, [r9]
   13750:	movw	r1, #29281	; 0x7261
   13754:	movt	r1, #24946	; 0x6172
   13758:	subs	r1, sl, r1
   1375c:	orr	r0, r5, r0, lsl #24
   13760:	sbcs	r1, r0, lr
   13764:	bcs	13810 <main@@Base+0x454>
   13768:	movw	r1, #28004	; 0x6d64
   1376c:	movt	r1, #28257	; 0x6e61
   13770:	cmp	r0, r1
   13774:	bhi	13994 <main@@Base+0x5d8>
   13778:	movw	r1, #25975	; 0x6577
   1377c:	ldr	r5, [sp, #44]	; 0x2c
   13780:	movt	r1, #26220	; 0x666c
   13784:	cmp	r0, r1
   13788:	bhi	13aa8 <main@@Base+0x6ec>
   1378c:	movw	r1, #27759	; 0x6c6f
   13790:	movt	r1, #25455	; 0x636f
   13794:	eor	r2, r0, r1
   13798:	and	r1, sl, #-16777216	; 0xff000000
   1379c:	eor	r3, r1, #1912602624	; 0x72000000
   137a0:	orrs	r2, r3, r2
   137a4:	beq	14364 <main@@Base+0xfa8>
   137a8:	movw	r2, #25965	; 0x656d
   137ac:	ldr	sl, [sp, #36]	; 0x24
   137b0:	eor	r1, r1, #2030043136	; 0x79000000
   137b4:	movt	r2, #25966	; 0x656e
   137b8:	eor	r0, r0, r2
   137bc:	orrs	r0, r1, r0
   137c0:	bne	14948 <main@@Base+0x158c>
   137c4:	cmp	r8, #6
   137c8:	ldr	r8, [sp, #40]	; 0x28
   137cc:	mov	r1, r9
   137d0:	blt	15b44 <main@@Base+0x2788>
   137d4:	ldr	r1, [sp, #32]
   137d8:	mov	r2, r9
   137dc:	ldrb	r0, [r2, #5]!
   137e0:	ldr	r1, [r1]
   137e4:	cmp	r1, #0
   137e8:	beq	14ae8 <main@@Base+0x172c>
   137ec:	cmp	r0, #33	; 0x21
   137f0:	bcc	13800 <main@@Base+0x444>
   137f4:	cmp	r0, #58	; 0x3a
   137f8:	mov	r1, r9
   137fc:	bne	15b44 <main@@Base+0x2788>
   13800:	ldr	r0, [sp, #32]
   13804:	mov	r1, #0
   13808:	str	r1, [r0]
   1380c:	b	14af8 <main@@Base+0x173c>
   13810:	movw	r1, #0
   13814:	movt	r1, #26163	; 0x6633
   13818:	subs	r1, sl, r1
   1381c:	sbcs	r1, r0, lr
   13820:	bcs	13a24 <main@@Base+0x668>
   13824:	movw	r1, #29281	; 0x7261
   13828:	ldr	r5, [sp, #44]	; 0x2c
   1382c:	movt	r1, #24946	; 0x6172
   13830:	eor	r2, sl, r1
   13834:	eor	r1, r0, lr
   13838:	orrs	r2, r2, r1
   1383c:	bne	13b28 <main@@Base+0x76c>
   13840:	add	sl, r9, #8
   13844:	mov	r0, #8
   13848:	sub	ip, r5, sl
   1384c:	cmp	ip, #8
   13850:	movcc	r0, ip
   13854:	sub	r0, r0, #1
   13858:	cmp	r0, #7
   1385c:	bhi	15800 <main@@Base+0x2444>
   13860:	add	r2, pc, #36	; 0x24
   13864:	mov	r1, #0
   13868:	mov	lr, #0
   1386c:	mov	r8, #0
   13870:	mov	r6, #0
   13874:	mov	r3, #0
   13878:	mov	r4, #0
   1387c:	mov	r7, #0
   13880:	ldr	r5, [r2, r0, lsl #2]
   13884:	mov	r0, #0
   13888:	add	pc, r2, r5
   1388c:	andeq	r0, r0, r4, rrx
   13890:	andeq	r0, r0, ip, asr r0
   13894:	andeq	r0, r0, r4, asr r0
   13898:	andeq	r0, r0, ip, asr #32
   1389c:	andeq	r0, r0, r0, asr #32
   138a0:	andeq	r0, r0, r4, lsr r0
   138a4:	andeq	r0, r0, r4, lsr #32
   138a8:	andeq	r0, r0, r0, lsr #32
   138ac:	ldrb	lr, [r9, #15]
   138b0:	ldrb	r0, [r9, #14]
   138b4:	mov	r8, r1
   138b8:	orr	r0, lr, r0, lsl #8
   138bc:	mov	r1, r0
   138c0:	ldrb	r0, [r9, #13]
   138c4:	mov	r6, r8
   138c8:	orr	r1, r1, r0, lsl #16
   138cc:	ldrb	r0, [r9, #12]
   138d0:	mov	r3, r6
   138d4:	orr	r1, r1, r0, lsl #24
   138d8:	ldrb	r0, [r9, #11]
   138dc:	orr	r4, r0, r3
   138e0:	ldrb	r0, [r9, #10]
   138e4:	orr	r7, r4, r0, lsl #8
   138e8:	ldrb	r0, [r9, #9]
   138ec:	orr	r0, r7, r0, lsl #16
   138f0:	ldrb	r2, [sl]
   138f4:	movw	r7, #26227	; 0x6673
   138f8:	movt	r7, #31087	; 0x796f
   138fc:	orr	r2, r0, r2, lsl #24
   13900:	movw	r0, #26989	; 0x696d
   13904:	movt	r0, #29810	; 0x7472
   13908:	subs	r0, r0, r1
   1390c:	sbcs	r0, r7, r2
   13910:	bcc	14298 <main@@Base+0xedc>
   13914:	movw	r0, #29797	; 0x7465
   13918:	ldr	r5, [sp, #44]	; 0x2c
   1391c:	eor	r3, r2, r7
   13920:	movt	r0, #28530	; 0x6f72
   13924:	eor	r0, r1, r0
   13928:	orrs	r0, r0, r3
   1392c:	beq	14748 <main@@Base+0x138c>
   13930:	movw	r0, #27763	; 0x6c73
   13934:	movt	r0, #28527	; 0x6f6f
   13938:	eor	r0, r1, r0
   1393c:	movw	r1, #26210	; 0x6662
   13940:	movt	r1, #31087	; 0x796f
   13944:	eor	r1, r2, r1
   13948:	orrs	r0, r0, r1
   1394c:	bne	15800 <main@@Base+0x2444>
   13950:	cmp	ip, #9
   13954:	blt	15800 <main@@Base+0x2444>
   13958:	ldr	r2, [sp, #32]
   1395c:	mov	r1, r9
   13960:	ldrb	r0, [r1, #16]!
   13964:	ldr	r2, [r2]
   13968:	cmp	r2, #0
   1396c:	beq	14e0c <main@@Base+0x1a50>
   13970:	cmp	r0, #33	; 0x21
   13974:	bcc	13980 <main@@Base+0x5c4>
   13978:	cmp	r0, #58	; 0x3a
   1397c:	bne	15800 <main@@Base+0x2444>
   13980:	ldr	r0, [sp, #32]
   13984:	mov	r2, #0
   13988:	str	r2, [r0]
   1398c:	b	14e18 <main@@Base+0x1a5c>
   13990:	ldmmi	r9, {r5, r6, r7, r8, sl, sp, lr}
   13994:	movw	r1, #29555	; 0x7373
   13998:	ldr	r5, [sp, #44]	; 0x2c
   1399c:	movt	r1, #29797	; 0x7465
   139a0:	cmp	r0, r1
   139a4:	bhi	13bf4 <main@@Base+0x838>
   139a8:	movw	r3, #24430	; 0x5f6e
   139ac:	movw	r2, #29285	; 0x7265
   139b0:	movt	r3, #28276	; 0x6e74
   139b4:	movt	r2, #28769	; 0x7061
   139b8:	subs	r1, sl, r3
   139bc:	sbcs	r1, r0, r2
   139c0:	bcs	13d90 <main@@Base+0x9d4>
   139c4:	movw	r1, #28005	; 0x6d65
   139c8:	movt	r1, #28257	; 0x6e61
   139cc:	teq	r0, r1
   139d0:	bne	166d0 <main@@Base+0x3314>
   139d4:	cmp	r8, #5
   139d8:	ldr	r8, [sp, #40]	; 0x28
   139dc:	ldr	sl, [sp, #36]	; 0x24
   139e0:	mov	r1, r9
   139e4:	blt	15de4 <main@@Base+0x2a28>
   139e8:	ldr	r1, [sp, #32]
   139ec:	mov	r2, r9
   139f0:	ldrb	r0, [r2, #4]!
   139f4:	ldr	r1, [r1]
   139f8:	cmp	r1, #0
   139fc:	beq	14bc8 <main@@Base+0x180c>
   13a00:	cmp	r0, #33	; 0x21
   13a04:	bcc	13a14 <main@@Base+0x658>
   13a08:	cmp	r0, #58	; 0x3a
   13a0c:	mov	r1, r9
   13a10:	bne	15de4 <main@@Base+0x2a28>
   13a14:	ldr	r0, [sp, #32]
   13a18:	mov	r1, #0
   13a1c:	str	r1, [r0]
   13a20:	b	14bd8 <main@@Base+0x181c>
   13a24:	movw	r2, #29544	; 0x7368
   13a28:	ldr	r5, [sp, #44]	; 0x2c
   13a2c:	movt	r2, #26721	; 0x6861
   13a30:	subs	r1, sl, r2
   13a34:	sbcs	r1, r0, lr
   13a38:	bcs	13c50 <main@@Base+0x894>
   13a3c:	movw	r1, #0
   13a40:	bfc	sl, #0, #16
   13a44:	eor	r0, r0, lr
   13a48:	movt	r1, #26163	; 0x6633
   13a4c:	eor	r1, sl, r1
   13a50:	orrs	r0, r1, r0
   13a54:	bne	166d0 <main@@Base+0x3314>
   13a58:	cmp	r8, #7
   13a5c:	ldr	r8, [sp, #40]	; 0x28
   13a60:	ldr	sl, [sp, #36]	; 0x24
   13a64:	mov	r7, r9
   13a68:	blt	15470 <main@@Base+0x20b4>
   13a6c:	ldr	r2, [sp, #32]
   13a70:	mov	r1, r9
   13a74:	ldrb	r0, [r1, #6]!
   13a78:	ldr	r2, [r2]
   13a7c:	cmp	r2, #0
   13a80:	beq	14a20 <main@@Base+0x1664>
   13a84:	cmp	r0, #33	; 0x21
   13a88:	bcc	13a98 <main@@Base+0x6dc>
   13a8c:	cmp	r0, #58	; 0x3a
   13a90:	mov	r7, r9
   13a94:	bne	15470 <main@@Base+0x20b4>
   13a98:	ldr	r0, [sp, #32]
   13a9c:	mov	r2, #0
   13aa0:	str	r2, [r0]
   13aa4:	b	14a30 <main@@Base+0x1674>
   13aa8:	movw	r1, #65535	; 0xffff
   13aac:	movw	r2, #30309	; 0x7665
   13ab0:	movw	r3, #28530	; 0x6f72
   13ab4:	movt	r1, #26735	; 0x686f
   13ab8:	movt	r2, #26990	; 0x696e
   13abc:	movt	r3, #28276	; 0x6e74
   13ac0:	cmp	r0, r1
   13ac4:	bhi	13f6c <main@@Base+0xbb0>
   13ac8:	movw	r1, #25976	; 0x6578
   13acc:	movt	r1, #26220	; 0x666c
   13ad0:	teq	r0, r1
   13ad4:	bne	166d0 <main@@Base+0x3314>
   13ad8:	cmp	r8, #5
   13adc:	ldr	r8, [sp, #40]	; 0x28
   13ae0:	ldr	sl, [sp, #36]	; 0x24
   13ae4:	mov	r4, r9
   13ae8:	blt	15e38 <main@@Base+0x2a7c>
   13aec:	ldr	r2, [sp, #32]
   13af0:	mov	r1, r9
   13af4:	ldrb	r0, [r1, #4]!
   13af8:	ldr	r2, [r2]
   13afc:	cmp	r2, #0
   13b00:	beq	14c00 <main@@Base+0x1844>
   13b04:	cmp	r0, #33	; 0x21
   13b08:	bcc	13b18 <main@@Base+0x75c>
   13b0c:	cmp	r0, #58	; 0x3a
   13b10:	mov	r4, r9
   13b14:	bne	15e38 <main@@Base+0x2a7c>
   13b18:	ldr	r0, [sp, #32]
   13b1c:	mov	r2, #0
   13b20:	str	r2, [r0]
   13b24:	b	14c10 <main@@Base+0x1854>
   13b28:	movw	r2, #28788	; 0x7074
   13b2c:	movt	r2, #25965	; 0x656d
   13b30:	subs	r2, sl, r2
   13b34:	sbcs	r2, r0, lr
   13b38:	bcs	13fdc <main@@Base+0xc20>
   13b3c:	movw	r0, #28524	; 0x6f6c
   13b40:	movt	r0, #25199	; 0x626f
   13b44:	eor	r0, sl, r0
   13b48:	orrs	r0, r0, r1
   13b4c:	beq	146f8 <main@@Base+0x133c>
   13b50:	movw	r0, #29541	; 0x7365
   13b54:	movt	r0, #25185	; 0x6261
   13b58:	eor	r0, sl, r0
   13b5c:	orrs	r0, r0, r1
   13b60:	bne	166d0 <main@@Base+0x3314>
   13b64:	add	r7, r9, #8
   13b68:	ldr	r8, [sp, #40]	; 0x28
   13b6c:	ldr	sl, [sp, #36]	; 0x24
   13b70:	mov	r2, #8
   13b74:	sub	r0, r5, r7
   13b78:	cmp	r0, #8
   13b7c:	movcc	r2, r0
   13b80:	sub	r1, r2, #2
   13b84:	cmp	r1, #7
   13b88:	bcs	14c70 <main@@Base+0x18b4>
   13b8c:	ldrb	r1, [r9, #9]
   13b90:	lsl	r2, r1, #16
   13b94:	mov	r1, #0
   13b98:	ldrb	r3, [r7]
   13b9c:	orr	r2, r2, r3, lsl #24
   13ba0:	movw	r3, #0
   13ba4:	movt	r3, #13876	; 0x3634
   13ba8:	eor	r2, r2, r3
   13bac:	orrs	r1, r1, r2
   13bb0:	bne	1b848 <main@@Base+0x848c>
   13bb4:	cmp	r0, #3
   13bb8:	blt	1b848 <main@@Base+0x848c>
   13bbc:	ldr	r2, [sp, #32]
   13bc0:	mov	r1, r9
   13bc4:	ldrb	r0, [r1, #10]!
   13bc8:	ldr	r2, [r2]
   13bcc:	cmp	r2, #0
   13bd0:	beq	15218 <main@@Base+0x1e5c>
   13bd4:	cmp	r0, #33	; 0x21
   13bd8:	bcc	13be4 <main@@Base+0x828>
   13bdc:	cmp	r0, #58	; 0x3a
   13be0:	bne	1b848 <main@@Base+0x848c>
   13be4:	ldr	r0, [sp, #32]
   13be8:	mov	r2, #0
   13bec:	str	r2, [r0]
   13bf0:	b	15224 <main@@Base+0x1e68>
   13bf4:	and	r6, sl, #-16777216	; 0xff000000
   13bf8:	eor	r4, r0, lr
   13bfc:	eor	r1, r6, #872415232	; 0x34000000
   13c00:	orrs	r1, r1, r4
   13c04:	bne	14074 <main@@Base+0xcb8>
   13c08:	cmp	r8, #6
   13c0c:	mov	r7, r9
   13c10:	blt	15530 <main@@Base+0x2174>
   13c14:	ldr	r2, [sp, #32]
   13c18:	mov	r1, r9
   13c1c:	ldrb	r0, [r1, #5]!
   13c20:	ldr	r2, [r2]
   13c24:	cmp	r2, #0
   13c28:	beq	14a58 <main@@Base+0x169c>
   13c2c:	cmp	r0, #33	; 0x21
   13c30:	bcc	13c40 <main@@Base+0x884>
   13c34:	cmp	r0, #58	; 0x3a
   13c38:	mov	r7, r9
   13c3c:	bne	15530 <main@@Base+0x2174>
   13c40:	ldr	r0, [sp, #32]
   13c44:	mov	r2, #0
   13c48:	str	r2, [r0]
   13c4c:	b	14a68 <main@@Base+0x16ac>
   13c50:	eor	r2, sl, r2
   13c54:	eor	r1, r0, lr
   13c58:	orrs	r2, r2, r1
   13c5c:	bne	140c4 <main@@Base+0xd08>
   13c60:	add	sl, r9, #8
   13c64:	mov	r0, #8
   13c68:	sub	ip, r5, sl
   13c6c:	cmp	ip, #8
   13c70:	movcc	r0, ip
   13c74:	sub	r0, r0, #1
   13c78:	cmp	r0, #7
   13c7c:	bhi	15800 <main@@Base+0x2444>
   13c80:	add	r2, pc, #36	; 0x24
   13c84:	mov	r1, #0
   13c88:	mov	lr, #0
   13c8c:	mov	r8, #0
   13c90:	mov	r7, #0
   13c94:	mov	r3, #0
   13c98:	mov	r6, #0
   13c9c:	mov	r4, #0
   13ca0:	ldr	r5, [r2, r0, lsl #2]
   13ca4:	mov	r0, #0
   13ca8:	add	pc, r2, r5
   13cac:	andeq	r0, r0, r4, rrx
   13cb0:	andeq	r0, r0, ip, asr r0
   13cb4:	andeq	r0, r0, r4, asr r0
   13cb8:	andeq	r0, r0, ip, asr #32
   13cbc:	andeq	r0, r0, r0, asr #32
   13cc0:	andeq	r0, r0, r4, lsr r0
   13cc4:	andeq	r0, r0, r4, lsr #32
   13cc8:	andeq	r0, r0, r0, lsr #32
   13ccc:	ldrb	lr, [r9, #15]
   13cd0:	ldrb	r0, [r9, #14]
   13cd4:	mov	r8, r1
   13cd8:	orr	r0, lr, r0, lsl #8
   13cdc:	mov	r1, r0
   13ce0:	ldrb	r0, [r9, #13]
   13ce4:	mov	r7, r8
   13ce8:	orr	r1, r1, r0, lsl #16
   13cec:	ldrb	r0, [r9, #12]
   13cf0:	mov	r3, r7
   13cf4:	orr	r1, r1, r0, lsl #24
   13cf8:	ldrb	r0, [r9, #11]
   13cfc:	orr	r6, r0, r3
   13d00:	ldrb	r0, [r9, #10]
   13d04:	orr	r4, r6, r0, lsl #8
   13d08:	ldrb	r0, [r9, #9]
   13d0c:	orr	r0, r4, r0, lsl #16
   13d10:	ldrb	r2, [sl]
   13d14:	movw	r3, #30257	; 0x7631
   13d18:	movt	r3, #26222	; 0x666e
   13d1c:	orr	r2, r0, r2, lsl #24
   13d20:	subs	r0, r1, r3
   13d24:	movw	r0, #13407	; 0x345f
   13d28:	movt	r0, #29494	; 0x7336
   13d2c:	sbcs	r0, r2, r0
   13d30:	bcs	14674 <main@@Base+0x12b8>
   13d34:	eor	r0, r1, r3
   13d38:	ldr	r1, [sp, #28]
   13d3c:	ldr	r5, [sp, #44]	; 0x2c
   13d40:	eor	r1, r2, r1
   13d44:	orrs	r0, r0, r1
   13d48:	bne	15800 <main@@Base+0x2444>
   13d4c:	ldr	r8, [sp, #40]	; 0x28
   13d50:	cmp	ip, #9
   13d54:	blt	15a98 <main@@Base+0x26dc>
   13d58:	ldr	r2, [sp, #32]
   13d5c:	mov	r1, r9
   13d60:	ldrb	r0, [r1, #16]!
   13d64:	ldr	r2, [r2]
   13d68:	cmp	r2, #0
   13d6c:	beq	14eec <main@@Base+0x1b30>
   13d70:	cmp	r0, #33	; 0x21
   13d74:	bcc	13d80 <main@@Base+0x9c4>
   13d78:	cmp	r0, #58	; 0x3a
   13d7c:	bne	15a98 <main@@Base+0x26dc>
   13d80:	ldr	r0, [sp, #32]
   13d84:	mov	r2, #0
   13d88:	str	r2, [r0]
   13d8c:	b	14ef8 <main@@Base+0x1b3c>
   13d90:	eor	r1, sl, r3
   13d94:	eor	r2, r0, r2
   13d98:	orrs	r1, r1, r2
   13d9c:	bne	143b4 <main@@Base+0xff8>
   13da0:	add	r1, r9, #8
   13da4:	mov	r2, #8
   13da8:	ldr	sl, [sp, #36]	; 0x24
   13dac:	sub	r0, r5, r1
   13db0:	cmp	r0, #8
   13db4:	movcs	r0, r2
   13db8:	sub	r2, r0, #1
   13dbc:	cmp	r2, #7
   13dc0:	bhi	148dc <main@@Base+0x1520>
   13dc4:	add	r4, pc, #36	; 0x24
   13dc8:	mov	r8, #0
   13dcc:	mov	ip, #0
   13dd0:	mov	lr, #0
   13dd4:	mov	r7, #0
   13dd8:	mov	r3, #0
   13ddc:	mov	r6, #0
   13de0:	mov	r5, #0
   13de4:	ldr	r0, [r4, r2, lsl #2]
   13de8:	mov	r2, #0
   13dec:	add	pc, r4, r0
   13df0:	andeq	r0, r0, r4, rrx
   13df4:	andeq	r0, r0, ip, asr r0
   13df8:	andeq	r0, r0, r4, asr r0
   13dfc:	andeq	r0, r0, ip, asr #32
   13e00:	andeq	r0, r0, r0, asr #32
   13e04:	andeq	r0, r0, r4, lsr r0
   13e08:	andeq	r0, r0, r4, lsr #32
   13e0c:	andeq	r0, r0, r0, lsr #32
   13e10:	ldrb	ip, [r9, #15]
   13e14:	ldrb	r0, [r9, #14]
   13e18:	mov	lr, r8
   13e1c:	orr	r0, ip, r0, lsl #8
   13e20:	mov	r8, r0
   13e24:	ldrb	r0, [r9, #13]
   13e28:	mov	r7, lr
   13e2c:	orr	r8, r8, r0, lsl #16
   13e30:	ldrb	r0, [r9, #12]
   13e34:	mov	r3, r7
   13e38:	orr	r8, r8, r0, lsl #24
   13e3c:	ldrb	r0, [r9, #11]
   13e40:	orr	r6, r0, r3
   13e44:	ldrb	r0, [r9, #10]
   13e48:	orr	r5, r6, r0, lsl #8
   13e4c:	ldrb	r0, [r9, #9]
   13e50:	orr	r2, r5, r0, lsl #16
   13e54:	ldrb	r3, [r1]
   13e58:	movw	r0, #25445	; 0x6365
   13e5c:	ldr	r5, [sp, #44]	; 0x2c
   13e60:	movt	r0, #28769	; 0x7061
   13e64:	eor	r0, r8, r0
   13e68:	orr	r2, r2, r3, lsl #24
   13e6c:	movw	r3, #25971	; 0x6573
   13e70:	movt	r3, #24941	; 0x616d
   13e74:	eor	r2, r2, r3
   13e78:	orrs	r0, r0, r2
   13e7c:	bne	148dc <main@@Base+0x1520>
   13e80:	add	r8, r9, #16
   13e84:	mov	r1, #8
   13e88:	sub	r0, r5, r8
   13e8c:	cmp	r0, #8
   13e90:	movcc	r1, r0
   13e94:	sub	r2, r1, #1
   13e98:	cmp	r2, #7
   13e9c:	bhi	16bd4 <main@@Base+0x3818>
   13ea0:	add	r4, pc, #24
   13ea4:	mov	r1, #0
   13ea8:	mov	r3, #0
   13eac:	mov	r6, #0
   13eb0:	mov	r5, #0
   13eb4:	ldr	r7, [r4, r2, lsl #2]
   13eb8:	mov	r2, #0
   13ebc:	add	pc, r4, r7
   13ec0:	andeq	r0, r0, r4, asr #32
   13ec4:	andeq	r0, r0, ip, lsr r0
   13ec8:	andeq	r0, r0, r4, lsr r0
   13ecc:	andeq	r0, r0, r8, lsr #32
   13ed0:	andeq	r0, r0, r0, lsr #32
   13ed4:	andeq	r0, r0, r0, lsr #32
   13ed8:	andeq	r0, r0, r0, lsr #32
   13edc:	andeq	r0, r0, r0, lsr #32
   13ee0:	ldrb	r2, [r9, #20]
   13ee4:	lsl	r2, r2, #24
   13ee8:	ldrb	r3, [r9, #19]
   13eec:	orr	r3, r3, r1
   13ef0:	mov	r1, r2
   13ef4:	ldrb	r2, [r9, #18]
   13ef8:	orr	r6, r3, r2, lsl #8
   13efc:	ldrb	r2, [r9, #17]
   13f00:	orr	r5, r6, r2, lsl #16
   13f04:	ldrb	r2, [r8]
   13f08:	movw	r3, #25971	; 0x6573
   13f0c:	and	r1, r1, #-16777216	; 0xff000000
   13f10:	movt	r3, #24436	; 0x5f74
   13f14:	eor	r1, r1, #1946157056	; 0x74000000
   13f18:	orr	r2, r5, r2, lsl #24
   13f1c:	ldr	r5, [sp, #44]	; 0x2c
   13f20:	eor	r2, r2, r3
   13f24:	orrs	r1, r1, r2
   13f28:	bne	16bd4 <main@@Base+0x3818>
   13f2c:	cmp	r0, #6
   13f30:	blt	16bd4 <main@@Base+0x3818>
   13f34:	ldr	r2, [sp, #32]
   13f38:	mov	r1, r9
   13f3c:	ldrb	r0, [r1, #21]!
   13f40:	ldr	r2, [r2]
   13f44:	cmp	r2, #0
   13f48:	beq	1576c <main@@Base+0x23b0>
   13f4c:	cmp	r0, #33	; 0x21
   13f50:	bcc	13f5c <main@@Base+0xba0>
   13f54:	cmp	r0, #58	; 0x3a
   13f58:	bne	16bd4 <main@@Base+0x3818>
   13f5c:	ldr	r0, [sp, #32]
   13f60:	mov	r2, #0
   13f64:	str	r2, [r0]
   13f68:	b	15778 <main@@Base+0x23bc>
   13f6c:	subs	r1, sl, r3
   13f70:	sbcs	r1, r0, r2
   13f74:	bcs	14418 <main@@Base+0x105c>
   13f78:	movw	r1, #0
   13f7c:	bfc	r0, #0, #16
   13f80:	movt	r1, #26736	; 0x6870
   13f84:	teq	r0, r1
   13f88:	bne	166d0 <main@@Base+0x3314>
   13f8c:	cmp	r8, #3
   13f90:	ldr	r8, [sp, #40]	; 0x28
   13f94:	ldr	sl, [sp, #36]	; 0x24
   13f98:	mov	r7, r9
   13f9c:	blt	16d24 <main@@Base+0x3968>
   13fa0:	ldr	r2, [sp, #32]
   13fa4:	mov	r1, r9
   13fa8:	ldrb	r0, [r1, #2]!
   13fac:	ldr	r2, [r2]
   13fb0:	cmp	r2, #0
   13fb4:	beq	14e44 <main@@Base+0x1a88>
   13fb8:	cmp	r0, #33	; 0x21
   13fbc:	bcc	13fcc <main@@Base+0xc10>
   13fc0:	cmp	r0, #58	; 0x3a
   13fc4:	mov	r7, r9
   13fc8:	bne	16d24 <main@@Base+0x3968>
   13fcc:	ldr	r0, [sp, #32]
   13fd0:	mov	r2, #0
   13fd4:	str	r2, [r0]
   13fd8:	b	14e54 <main@@Base+0x1a98>
   13fdc:	mvn	r2, #-1711276032	; 0x9a000000
   13fe0:	subs	r2, r2, sl
   13fe4:	sbcs	r2, lr, r0
   13fe8:	bcc	1449c <main@@Base+0x10e0>
   13fec:	movw	r0, #28788	; 0x7074
   13ff0:	movt	r0, #25965	; 0x656d
   13ff4:	eor	r0, sl, r0
   13ff8:	orrs	r0, r0, r1
   13ffc:	bne	166d0 <main@@Base+0x3314>
   14000:	add	r7, r9, #8
   14004:	ldr	r8, [sp, #40]	; 0x28
   14008:	ldr	sl, [sp, #36]	; 0x24
   1400c:	mov	r1, #8
   14010:	sub	r0, r5, r7
   14014:	cmp	r0, #8
   14018:	movcc	r1, r0
   1401c:	sub	r1, r1, #1
   14020:	cmp	r1, #7
   14024:	bhi	1b848 <main@@Base+0x848c>
   14028:	ldrb	r1, [r7]
   1402c:	cmp	r1, #121	; 0x79
   14030:	bne	1b848 <main@@Base+0x848c>
   14034:	cmp	r0, #2
   14038:	blt	1b848 <main@@Base+0x848c>
   1403c:	ldr	r2, [sp, #32]
   14040:	mov	r1, r9
   14044:	ldrb	r0, [r1, #9]!
   14048:	ldr	r2, [r2]
   1404c:	cmp	r2, #0
   14050:	beq	15d24 <main@@Base+0x2968>
   14054:	cmp	r0, #33	; 0x21
   14058:	bcc	14064 <main@@Base+0xca8>
   1405c:	cmp	r0, #58	; 0x3a
   14060:	bne	1b848 <main@@Base+0x848c>
   14064:	ldr	r0, [sp, #32]
   14068:	mov	r2, #0
   1406c:	str	r2, [r0]
   14070:	b	15d30 <main@@Base+0x2974>
   14074:	teq	r0, lr
   14078:	bne	15174 <main@@Base+0x1db8>
   1407c:	cmp	r8, #5
   14080:	mov	r1, r9
   14084:	blt	161a4 <main@@Base+0x2de8>
   14088:	ldr	r1, [sp, #32]
   1408c:	mov	r2, r9
   14090:	ldrb	r0, [r2, #4]!
   14094:	ldr	r1, [r1]
   14098:	cmp	r1, #0
   1409c:	beq	14c38 <main@@Base+0x187c>
   140a0:	cmp	r0, #33	; 0x21
   140a4:	bcc	140b4 <main@@Base+0xcf8>
   140a8:	cmp	r0, #58	; 0x3a
   140ac:	mov	r1, r9
   140b0:	bne	161a4 <main@@Base+0x2de8>
   140b4:	ldr	r0, [sp, #32]
   140b8:	mov	r1, #0
   140bc:	str	r1, [r0]
   140c0:	b	14c48 <main@@Base+0x188c>
   140c4:	movw	r7, #24431	; 0x5f6f
   140c8:	movw	r3, #25460	; 0x6374
   140cc:	ldr	r8, [sp, #40]	; 0x28
   140d0:	movt	r7, #28530	; 0x6f72
   140d4:	movt	r3, #30309	; 0x7665
   140d8:	subs	r2, sl, r7
   140dc:	sbcs	r2, r0, r3
   140e0:	bcs	14514 <main@@Base+0x1158>
   140e4:	movw	r0, #29556	; 0x7374
   140e8:	movt	r0, #28261	; 0x6e65
   140ec:	eor	r0, sl, r0
   140f0:	orrs	r0, r0, r1
   140f4:	bne	166d4 <main@@Base+0x3318>
   140f8:	add	r1, r9, #8
   140fc:	mov	r2, #8
   14100:	ldr	sl, [sp, #36]	; 0x24
   14104:	sub	r0, r5, r1
   14108:	cmp	r0, #8
   1410c:	movcs	r0, r2
   14110:	sub	r2, r0, #1
   14114:	cmp	r2, #7
   14118:	bhi	148e0 <main@@Base+0x1524>
   1411c:	add	r5, pc, #36	; 0x24
   14120:	mov	r8, #0
   14124:	mov	ip, #0
   14128:	mov	lr, #0
   1412c:	mov	r7, #0
   14130:	mov	r3, #0
   14134:	mov	r6, #0
   14138:	mov	r4, #0
   1413c:	ldr	r0, [r5, r2, lsl #2]
   14140:	mov	r2, #0
   14144:	add	pc, r5, r0
   14148:	andeq	r0, r0, r4, rrx
   1414c:	andeq	r0, r0, ip, asr r0
   14150:	andeq	r0, r0, r4, asr r0
   14154:	andeq	r0, r0, ip, asr #32
   14158:	andeq	r0, r0, r0, asr #32
   1415c:	andeq	r0, r0, r4, lsr r0
   14160:	andeq	r0, r0, r4, lsr #32
   14164:	andeq	r0, r0, r0, lsr #32
   14168:	ldrb	ip, [r9, #15]
   1416c:	ldrb	r0, [r9, #14]
   14170:	mov	lr, r8
   14174:	orr	r0, ip, r0, lsl #8
   14178:	mov	r8, r0
   1417c:	ldrb	r0, [r9, #13]
   14180:	mov	r7, lr
   14184:	orr	r8, r8, r0, lsl #16
   14188:	ldrb	r0, [r9, #12]
   1418c:	mov	r3, r7
   14190:	orr	r8, r8, r0, lsl #24
   14194:	ldrb	r0, [r9, #11]
   14198:	orr	r6, r0, r3
   1419c:	ldrb	r0, [r9, #10]
   141a0:	orr	r4, r6, r0, lsl #8
   141a4:	ldrb	r0, [r9, #9]
   141a8:	orr	r2, r4, r0, lsl #16
   141ac:	ldrb	r3, [r1]
   141b0:	movw	r0, #25205	; 0x6275
   141b4:	ldr	r5, [sp, #44]	; 0x2c
   141b8:	movt	r0, #24948	; 0x6174
   141bc:	eor	r0, r8, r0
   141c0:	ldr	r8, [sp, #40]	; 0x28
   141c4:	orr	r2, r2, r3, lsl #24
   141c8:	movw	r3, #26220	; 0x666c
   141cc:	movt	r3, #25956	; 0x6564
   141d0:	eor	r2, r2, r3
   141d4:	orrs	r0, r0, r2
   141d8:	bne	148e0 <main@@Base+0x1524>
   141dc:	add	r7, r9, #16
   141e0:	mov	r1, #8
   141e4:	sub	r0, r5, r7
   141e8:	cmp	r0, #8
   141ec:	movcc	r1, r0
   141f0:	sub	r2, r1, #1
   141f4:	cmp	r2, #7
   141f8:	bhi	1b848 <main@@Base+0x848c>
   141fc:	add	r3, pc, #8
   14200:	mov	r1, #0
   14204:	ldr	r2, [r3, r2, lsl #2]
   14208:	add	pc, r3, r2
   1420c:	andeq	r0, r0, r4, lsr r0
   14210:	andeq	r0, r0, ip, lsr #32
   14214:	andeq	r0, r0, r4, lsr #32
   14218:	andeq	r0, r0, r0, lsr #32
   1421c:	andeq	r0, r0, r0, lsr #32
   14220:	andeq	r0, r0, r0, lsr #32
   14224:	andeq	r0, r0, r0, lsr #32
   14228:	andeq	r0, r0, r0, lsr #32
   1422c:	ldrb	r1, [r9, #19]
   14230:	ldrb	r2, [r9, #18]
   14234:	orr	r1, r1, r2, lsl #8
   14238:	ldrb	r2, [r9, #17]
   1423c:	orr	r1, r1, r2, lsl #16
   14240:	ldrb	r2, [r7]
   14244:	orr	r1, r1, r2, lsl #24
   14248:	movw	r2, #25970	; 0x6572
   1424c:	movt	r2, #26214	; 0x6666
   14250:	teq	r1, r2
   14254:	bne	1b848 <main@@Base+0x848c>
   14258:	cmp	r0, #5
   1425c:	blt	1b848 <main@@Base+0x848c>
   14260:	ldr	r2, [sp, #32]
   14264:	mov	r1, r9
   14268:	ldrb	r0, [r1, #20]!
   1426c:	ldr	r2, [r2]
   14270:	cmp	r2, #0
   14274:	beq	16204 <main@@Base+0x2e48>
   14278:	cmp	r0, #33	; 0x21
   1427c:	bcc	14288 <main@@Base+0xecc>
   14280:	cmp	r0, #58	; 0x3a
   14284:	bne	1b848 <main@@Base+0x848c>
   14288:	ldr	r0, [sp, #32]
   1428c:	mov	r2, #0
   14290:	str	r2, [r0]
   14294:	b	16210 <main@@Base+0x2e54>
   14298:	movw	r0, #27749	; 0x6c65
   1429c:	movw	r3, #26228	; 0x6674
   142a0:	ldr	r5, [sp, #44]	; 0x2c
   142a4:	ldr	r8, [sp, #40]	; 0x28
   142a8:	movt	r0, #24930	; 0x6162
   142ac:	movt	r3, #31087	; 0x796f
   142b0:	eor	r0, r1, r0
   142b4:	eor	r3, r2, r3
   142b8:	orrs	r0, r0, r3
   142bc:	beq	14860 <main@@Base+0x14a4>
   142c0:	movw	r0, #26990	; 0x696e
   142c4:	movt	r0, #29810	; 0x7472
   142c8:	eor	r0, r1, r0
   142cc:	eor	r1, r2, r7
   142d0:	orrs	r0, r0, r1
   142d4:	bne	15804 <main@@Base+0x2448>
   142d8:	add	r7, r9, #16
   142dc:	mov	r2, #8
   142e0:	sub	r0, r5, r7
   142e4:	cmp	r0, #8
   142e8:	movcc	r2, r0
   142ec:	sub	r1, r2, #2
   142f0:	cmp	r1, #7
   142f4:	bcs	14cc4 <main@@Base+0x1908>
   142f8:	ldrb	r1, [r9, #17]
   142fc:	ldr	sl, [sp, #36]	; 0x24
   14300:	lsl	r2, r1, #16
   14304:	mov	r1, #0
   14308:	ldrb	r3, [r7]
   1430c:	orr	r2, r2, r3, lsl #24
   14310:	movw	r3, #0
   14314:	movt	r3, #26418	; 0x6732
   14318:	eor	r3, r2, r3
   1431c:	orrs	r1, r1, r3
   14320:	bne	14a9c <main@@Base+0x16e0>
   14324:	cmp	r0, #3
   14328:	blt	1b848 <main@@Base+0x848c>
   1432c:	ldr	r2, [sp, #32]
   14330:	mov	r1, r9
   14334:	ldrb	r0, [r1, #18]!
   14338:	ldr	r2, [r2]
   1433c:	cmp	r2, #0
   14340:	beq	1524c <main@@Base+0x1e90>
   14344:	cmp	r0, #33	; 0x21
   14348:	bcc	14354 <main@@Base+0xf98>
   1434c:	cmp	r0, #58	; 0x3a
   14350:	bne	1b848 <main@@Base+0x848c>
   14354:	ldr	r0, [sp, #32]
   14358:	mov	r2, #0
   1435c:	str	r2, [r0]
   14360:	b	15258 <main@@Base+0x1e9c>
   14364:	cmp	r8, #6
   14368:	ldr	r8, [sp, #40]	; 0x28
   1436c:	ldr	sl, [sp, #36]	; 0x24
   14370:	mov	r7, r9
   14374:	blt	15b98 <main@@Base+0x27dc>
   14378:	ldr	r2, [sp, #32]
   1437c:	mov	r1, r9
   14380:	ldrb	r0, [r1, #5]!
   14384:	ldr	r2, [r2]
   14388:	cmp	r2, #0
   1438c:	beq	14b20 <main@@Base+0x1764>
   14390:	cmp	r0, #33	; 0x21
   14394:	bcc	143a4 <main@@Base+0xfe8>
   14398:	cmp	r0, #58	; 0x3a
   1439c:	mov	r7, r9
   143a0:	bne	15b98 <main@@Base+0x27dc>
   143a4:	ldr	r0, [sp, #32]
   143a8:	mov	r2, #0
   143ac:	str	r2, [r0]
   143b0:	b	14b30 <main@@Base+0x1774>
   143b4:	movw	r1, #29440	; 0x7300
   143b8:	ldr	sl, [sp, #36]	; 0x24
   143bc:	bic	r0, r0, #255	; 0xff
   143c0:	movt	r1, #28783	; 0x706f
   143c4:	teq	r0, r1
   143c8:	bne	14948 <main@@Base+0x158c>
   143cc:	cmp	r8, #4
   143d0:	ldr	r8, [sp, #40]	; 0x28
   143d4:	mov	r4, r9
   143d8:	blt	16e9c <main@@Base+0x3ae0>
   143dc:	ldr	r2, [sp, #32]
   143e0:	mov	r1, r9
   143e4:	ldrb	r0, [r1, #3]!
   143e8:	ldr	r2, [r2]
   143ec:	cmp	r2, #0
   143f0:	beq	14e7c <main@@Base+0x1ac0>
   143f4:	cmp	r0, #33	; 0x21
   143f8:	bcc	14408 <main@@Base+0x104c>
   143fc:	cmp	r0, #58	; 0x3a
   14400:	mov	r4, r9
   14404:	bne	16e9c <main@@Base+0x3ae0>
   14408:	ldr	r0, [sp, #32]
   1440c:	mov	r2, #0
   14410:	str	r2, [r0]
   14414:	b	14e8c <main@@Base+0x1ad0>
   14418:	eor	r1, sl, r3
   1441c:	eor	r2, r0, r2
   14420:	orrs	r1, r1, r2
   14424:	bne	148e8 <main@@Base+0x152c>
   14428:	add	r7, r9, #8
   1442c:	ldr	sl, [sp, #36]	; 0x24
   14430:	mov	r1, #8
   14434:	sub	r0, r5, r7
   14438:	cmp	r0, #8
   1443c:	movcc	r1, r0
   14440:	sub	r1, r1, #1
   14444:	cmp	r1, #7
   14448:	bhi	14a94 <main@@Base+0x16d8>
   1444c:	ldrb	r1, [r7]
   14450:	cmp	r1, #121	; 0x79
   14454:	bne	14a94 <main@@Base+0x16d8>
   14458:	ldr	r8, [sp, #40]	; 0x28
   1445c:	cmp	r0, #2
   14460:	blt	1b848 <main@@Base+0x848c>
   14464:	ldr	r2, [sp, #32]
   14468:	mov	r1, r9
   1446c:	ldrb	r0, [r1, #9]!
   14470:	ldr	r2, [r2]
   14474:	cmp	r2, #0
   14478:	beq	15d58 <main@@Base+0x299c>
   1447c:	cmp	r0, #33	; 0x21
   14480:	bcc	1448c <main@@Base+0x10d0>
   14484:	cmp	r0, #58	; 0x3a
   14488:	bne	1b848 <main@@Base+0x848c>
   1448c:	ldr	r0, [sp, #32]
   14490:	mov	r2, #0
   14494:	str	r2, [r0]
   14498:	b	15d64 <main@@Base+0x29a8>
   1449c:	movw	r3, #0
   144a0:	mov	r2, sl
   144a4:	movt	r3, #26163	; 0x6633
   144a8:	bfc	r2, #0, #16
   144ac:	subs	r3, r3, #65536	; 0x10000
   144b0:	eor	r2, r2, r3
   144b4:	sbc	r3, lr, #0
   144b8:	eor	r0, r0, r3
   144bc:	orrs	r0, r2, r0
   144c0:	bne	14958 <main@@Base+0x159c>
   144c4:	cmp	r8, #7
   144c8:	ldr	r8, [sp, #40]	; 0x28
   144cc:	ldr	sl, [sp, #36]	; 0x24
   144d0:	mov	r7, r9
   144d4:	blt	17d60 <main@@Base+0x49a4>
   144d8:	ldr	r2, [sp, #32]
   144dc:	mov	r1, r9
   144e0:	ldrb	r0, [r1, #6]!
   144e4:	ldr	r2, [r2]
   144e8:	cmp	r2, #0
   144ec:	beq	14eb4 <main@@Base+0x1af8>
   144f0:	cmp	r0, #33	; 0x21
   144f4:	bcc	14504 <main@@Base+0x1148>
   144f8:	cmp	r0, #58	; 0x3a
   144fc:	mov	r7, r9
   14500:	bne	17d60 <main@@Base+0x49a4>
   14504:	ldr	r0, [sp, #32]
   14508:	mov	r2, #0
   1450c:	str	r2, [r0]
   14510:	b	14ec4 <main@@Base+0x1b08>
   14514:	eor	r1, sl, r7
   14518:	eor	r0, r0, r3
   1451c:	orrs	r0, r1, r0
   14520:	bne	166d4 <main@@Base+0x3318>
   14524:	add	sl, r9, #8
   14528:	mov	r1, #8
   1452c:	sub	lr, r5, sl
   14530:	cmp	lr, #8
   14534:	movcc	r1, lr
   14538:	sub	r2, r1, #1
   1453c:	cmp	r2, #7
   14540:	bhi	15804 <main@@Base+0x2448>
   14544:	add	r0, pc, #36	; 0x24
   14548:	mov	r1, #0
   1454c:	mov	ip, #0
   14550:	mov	r8, #0
   14554:	mov	r6, #0
   14558:	mov	r3, #0
   1455c:	mov	r4, #0
   14560:	mov	r7, #0
   14564:	ldr	r5, [r0, r2, lsl #2]
   14568:	mov	r2, #0
   1456c:	add	pc, r0, r5
   14570:	andeq	r0, r0, r4, rrx
   14574:	andeq	r0, r0, ip, asr r0
   14578:	andeq	r0, r0, r4, asr r0
   1457c:	andeq	r0, r0, ip, asr #32
   14580:	andeq	r0, r0, r0, asr #32
   14584:	andeq	r0, r0, r4, lsr r0
   14588:	andeq	r0, r0, r4, lsr #32
   1458c:	andeq	r0, r0, r0, lsr #32
   14590:	ldrb	ip, [r9, #15]
   14594:	ldrb	r0, [r9, #14]
   14598:	mov	r8, r1
   1459c:	orr	r0, ip, r0, lsl #8
   145a0:	mov	r1, r0
   145a4:	ldrb	r0, [r9, #13]
   145a8:	mov	r6, r8
   145ac:	orr	r1, r1, r0, lsl #16
   145b0:	ldrb	r0, [r9, #12]
   145b4:	mov	r3, r6
   145b8:	orr	r1, r1, r0, lsl #24
   145bc:	ldrb	r0, [r9, #11]
   145c0:	orr	r4, r0, r3
   145c4:	ldrb	r0, [r9, #10]
   145c8:	orr	r7, r4, r0, lsl #8
   145cc:	ldrb	r0, [r9, #9]
   145d0:	orr	r2, r7, r0, lsl #16
   145d4:	ldrb	r3, [sl]
   145d8:	movw	r0, #27749	; 0x6c65
   145dc:	movt	r0, #30050	; 0x7562
   145e0:	eor	r0, r1, r0
   145e4:	orr	r2, r2, r3, lsl #24
   145e8:	movw	r3, #25711	; 0x646f
   145ec:	movt	r3, #26207	; 0x665f
   145f0:	eor	r3, r2, r3
   145f4:	orrs	r0, r0, r3
   145f8:	bne	14b58 <main@@Base+0x179c>
   145fc:	ldr	r5, [sp, #44]	; 0x2c
   14600:	add	r7, r9, #16
   14604:	ldr	r8, [sp, #40]	; 0x28
   14608:	mov	r1, #8
   1460c:	sub	r0, r5, r7
   14610:	cmp	r0, #8
   14614:	movcc	r1, r0
   14618:	sub	r1, r1, #1
   1461c:	cmp	r1, #7
   14620:	bhi	148d0 <main@@Base+0x1514>
   14624:	ldrb	r1, [r7]
   14628:	cmp	r1, #115	; 0x73
   1462c:	bne	148d0 <main@@Base+0x1514>
   14630:	ldr	sl, [sp, #36]	; 0x24
   14634:	cmp	r0, #2
   14638:	blt	1b848 <main@@Base+0x848c>
   1463c:	ldr	r2, [sp, #32]
   14640:	mov	r1, r9
   14644:	ldrb	r0, [r1, #17]!
   14648:	ldr	r2, [r2]
   1464c:	cmp	r2, #0
   14650:	beq	16cd0 <main@@Base+0x3914>
   14654:	cmp	r0, #33	; 0x21
   14658:	bcc	14664 <main@@Base+0x12a8>
   1465c:	cmp	r0, #58	; 0x3a
   14660:	bne	1b848 <main@@Base+0x848c>
   14664:	ldr	r0, [sp, #32]
   14668:	mov	r2, #0
   1466c:	str	r2, [r0]
   14670:	b	16cdc <main@@Base+0x3920>
   14674:	movw	r0, #30256	; 0x7630
   14678:	ldr	r5, [sp, #44]	; 0x2c
   1467c:	ldr	r8, [sp, #40]	; 0x28
   14680:	movt	r0, #26222	; 0x666e
   14684:	subs	r0, r0, r1
   14688:	movw	r0, #12895	; 0x325f
   1468c:	movt	r0, #30003	; 0x7533
   14690:	sbcs	r0, r0, r2
   14694:	movw	r0, #30257	; 0x7631
   14698:	movt	r0, #26222	; 0x666e
   1469c:	eor	r0, r1, r0
   146a0:	bcc	149b8 <main@@Base+0x15fc>
   146a4:	movw	r1, #13407	; 0x345f
   146a8:	movt	r1, #29494	; 0x7336
   146ac:	eor	r1, r2, r1
   146b0:	orrs	r0, r0, r1
   146b4:	bne	15804 <main@@Base+0x2448>
   146b8:	cmp	ip, #9
   146bc:	blt	1653c <main@@Base+0x3180>
   146c0:	ldr	r2, [sp, #32]
   146c4:	mov	r1, r9
   146c8:	ldrb	r0, [r1, #16]!
   146cc:	ldr	r2, [r2]
   146d0:	cmp	r2, #0
   146d4:	beq	153a0 <main@@Base+0x1fe4>
   146d8:	cmp	r0, #33	; 0x21
   146dc:	bcc	146e8 <main@@Base+0x132c>
   146e0:	cmp	r0, #58	; 0x3a
   146e4:	bne	1653c <main@@Base+0x3180>
   146e8:	ldr	r0, [sp, #32]
   146ec:	mov	r2, #0
   146f0:	str	r2, [r0]
   146f4:	b	153ac <main@@Base+0x1ff0>
   146f8:	cmp	r8, #9
   146fc:	ldr	r8, [sp, #40]	; 0x28
   14700:	ldr	sl, [sp, #36]	; 0x24
   14704:	mov	r7, r9
   14708:	blt	169dc <main@@Base+0x3620>
   1470c:	ldr	r2, [sp, #32]
   14710:	mov	r1, r9
   14714:	ldrb	r0, [r1, #8]!
   14718:	ldr	r2, [r2]
   1471c:	cmp	r2, #0
   14720:	beq	14cdc <main@@Base+0x1920>
   14724:	cmp	r0, #33	; 0x21
   14728:	bcc	14738 <main@@Base+0x137c>
   1472c:	cmp	r0, #58	; 0x3a
   14730:	mov	r7, r9
   14734:	bne	169dc <main@@Base+0x3620>
   14738:	ldr	r0, [sp, #32]
   1473c:	mov	r2, #0
   14740:	str	r2, [r0]
   14744:	b	14cec <main@@Base+0x1930>
   14748:	add	sl, r9, #16
   1474c:	ldr	r8, [sp, #40]	; 0x28
   14750:	mov	r1, #8
   14754:	sub	ip, r5, sl
   14758:	cmp	ip, #8
   1475c:	movcc	r1, ip
   14760:	sub	r2, r1, #1
   14764:	cmp	r2, #7
   14768:	bhi	15804 <main@@Base+0x2448>
   1476c:	add	r0, pc, #32
   14770:	mov	r1, #0
   14774:	mov	lr, #0
   14778:	mov	r6, #0
   1477c:	mov	r3, #0
   14780:	mov	r7, #0
   14784:	mov	r5, #0
   14788:	mov	r4, #0
   1478c:	ldr	r2, [r0, r2, lsl #2]
   14790:	add	pc, r0, r2
   14794:	andeq	r0, r0, ip, asr r0
   14798:	andeq	r0, r0, r4, asr r0
   1479c:	andeq	r0, r0, ip, asr #32
   147a0:	andeq	r0, r0, r4, asr #32
   147a4:	andeq	r0, r0, r8, lsr r0
   147a8:	andeq	r0, r0, r8, lsr #32
   147ac:	andeq	r0, r0, r0, lsr #32
   147b0:	andeq	r0, r0, r0, lsr #32
   147b4:	ldrb	r0, [r9, #22]
   147b8:	lsl	lr, r0, #8
   147bc:	ldrb	r0, [r9, #21]
   147c0:	mov	r6, r1
   147c4:	orr	r0, lr, r0, lsl #16
   147c8:	mov	r1, r0
   147cc:	ldrb	r0, [r9, #20]
   147d0:	mov	r3, r6
   147d4:	orr	r1, r1, r0, lsl #24
   147d8:	ldrb	r0, [r9, #19]
   147dc:	orr	r7, r0, r3
   147e0:	ldrb	r0, [r9, #18]
   147e4:	orr	r5, r7, r0, lsl #8
   147e8:	ldrb	r0, [r9, #17]
   147ec:	orr	r4, r5, r0, lsl #16
   147f0:	bic	r0, r1, #255	; 0xff
   147f4:	movw	r1, #29696	; 0x7400
   147f8:	movw	r2, #29810	; 0x7472
   147fc:	ldr	r5, [sp, #44]	; 0x2c
   14800:	movt	r1, #30051	; 0x7563
   14804:	movt	r2, #25715	; 0x6473
   14808:	eor	r0, r0, r1
   1480c:	ldrb	r1, [sl]
   14810:	orr	r1, r4, r1, lsl #24
   14814:	eor	r1, r1, r2
   14818:	orrs	r0, r0, r1
   1481c:	bne	15804 <main@@Base+0x2448>
   14820:	cmp	ip, #8
   14824:	blt	15804 <main@@Base+0x2448>
   14828:	ldr	r2, [sp, #32]
   1482c:	mov	r1, r9
   14830:	ldrb	r0, [r1, #23]!
   14834:	ldr	r2, [r2]
   14838:	cmp	r2, #0
   1483c:	beq	15280 <main@@Base+0x1ec4>
   14840:	cmp	r0, #33	; 0x21
   14844:	bcc	14850 <main@@Base+0x1494>
   14848:	cmp	r0, #58	; 0x3a
   1484c:	bne	15804 <main@@Base+0x2448>
   14850:	ldr	r0, [sp, #32]
   14854:	mov	r2, #0
   14858:	str	r2, [r0]
   1485c:	b	1528c <main@@Base+0x1ed0>
   14860:	add	r7, r9, #16
   14864:	mov	r1, #8
   14868:	sub	r0, r5, r7
   1486c:	cmp	r0, #8
   14870:	movcc	r1, r0
   14874:	sub	r1, r1, #1
   14878:	cmp	r1, #7
   1487c:	bhi	148d0 <main@@Base+0x1514>
   14880:	ldrb	r1, [r7]
   14884:	cmp	r1, #115	; 0x73
   14888:	bne	148d0 <main@@Base+0x1514>
   1488c:	ldr	sl, [sp, #36]	; 0x24
   14890:	cmp	r0, #2
   14894:	blt	1b848 <main@@Base+0x848c>
   14898:	ldr	r2, [sp, #32]
   1489c:	mov	r1, r9
   148a0:	ldrb	r0, [r1, #17]!
   148a4:	ldr	r2, [r2]
   148a8:	cmp	r2, #0
   148ac:	beq	1599c <main@@Base+0x25e0>
   148b0:	cmp	r0, #33	; 0x21
   148b4:	bcc	148c0 <main@@Base+0x1504>
   148b8:	cmp	r0, #58	; 0x3a
   148bc:	bne	1b848 <main@@Base+0x848c>
   148c0:	ldr	r0, [sp, #32]
   148c4:	mov	r2, #0
   148c8:	str	r2, [r0]
   148cc:	b	159a8 <main@@Base+0x25ec>
   148d0:	mov	r0, r8
   148d4:	mov	r1, r7
   148d8:	b	166dc <main@@Base+0x3320>
   148dc:	ldr	r8, [sp, #40]	; 0x28
   148e0:	mov	r0, r8
   148e4:	b	1c2c0 <main@@Base+0x8f04>
   148e8:	movw	r1, #28257	; 0x6e61
   148ec:	ldr	sl, [sp, #36]	; 0x24
   148f0:	movt	r1, #28001	; 0x6d61
   148f4:	teq	r0, r1
   148f8:	bne	14948 <main@@Base+0x158c>
   148fc:	cmp	r8, #5
   14900:	ldr	r8, [sp, #40]	; 0x28
   14904:	mov	r7, r9
   14908:	blt	18ae4 <main@@Base+0x5728>
   1490c:	ldr	r2, [sp, #32]
   14910:	mov	r1, r9
   14914:	ldrb	r0, [r1, #4]!
   14918:	ldr	r2, [r2]
   1491c:	cmp	r2, #0
   14920:	beq	152b4 <main@@Base+0x1ef8>
   14924:	cmp	r0, #33	; 0x21
   14928:	bcc	14938 <main@@Base+0x157c>
   1492c:	cmp	r0, #58	; 0x3a
   14930:	mov	r7, r9
   14934:	bne	18ae4 <main@@Base+0x5728>
   14938:	ldr	r0, [sp, #32]
   1493c:	mov	r2, #0
   14940:	str	r2, [r0]
   14944:	b	152c4 <main@@Base+0x1f08>
   14948:	ldr	r8, [sp, #40]	; 0x28
   1494c:	mov	r0, r8
   14950:	mov	r1, r9
   14954:	b	1c2c0 <main@@Base+0x8f04>
   14958:	and	r0, sl, #-16777216	; 0xff000000
   1495c:	eor	r0, r0, #1711276032	; 0x66000000
   14960:	orrs	r0, r0, r1
   14964:	bne	166d0 <main@@Base+0x3314>
   14968:	cmp	r8, #6
   1496c:	ldr	r8, [sp, #40]	; 0x28
   14970:	ldr	sl, [sp, #36]	; 0x24
   14974:	mov	r7, r9
   14978:	blt	18c64 <main@@Base+0x58a8>
   1497c:	ldr	r2, [sp, #32]
   14980:	mov	r1, r9
   14984:	ldrb	r0, [r1, #5]!
   14988:	ldr	r2, [r2]
   1498c:	cmp	r2, #0
   14990:	beq	152ec <main@@Base+0x1f30>
   14994:	cmp	r0, #33	; 0x21
   14998:	bcc	149a8 <main@@Base+0x15ec>
   1499c:	cmp	r0, #58	; 0x3a
   149a0:	mov	r7, r9
   149a4:	bne	18c64 <main@@Base+0x58a8>
   149a8:	ldr	r0, [sp, #32]
   149ac:	mov	r2, #0
   149b0:	str	r2, [r0]
   149b4:	b	152fc <main@@Base+0x1f40>
   149b8:	movw	r1, #13407	; 0x345f
   149bc:	movt	r1, #30006	; 0x7536
   149c0:	eor	r1, r2, r1
   149c4:	orrs	r1, r0, r1
   149c8:	beq	14c84 <main@@Base+0x18c8>
   149cc:	movw	r1, #12895	; 0x325f
   149d0:	movt	r1, #30003	; 0x7533
   149d4:	eor	r1, r2, r1
   149d8:	orrs	r0, r0, r1
   149dc:	bne	15804 <main@@Base+0x2448>
   149e0:	cmp	ip, #9
   149e4:	blt	17edc <main@@Base+0x4b20>
   149e8:	ldr	r2, [sp, #32]
   149ec:	mov	r1, r9
   149f0:	ldrb	r0, [r1, #16]!
   149f4:	ldr	r2, [r2]
   149f8:	cmp	r2, #0
   149fc:	beq	159d0 <main@@Base+0x2614>
   14a00:	cmp	r0, #33	; 0x21
   14a04:	bcc	14a10 <main@@Base+0x1654>
   14a08:	cmp	r0, #58	; 0x3a
   14a0c:	bne	17edc <main@@Base+0x4b20>
   14a10:	ldr	r0, [sp, #32]
   14a14:	mov	r2, #0
   14a18:	str	r2, [r0]
   14a1c:	b	159dc <main@@Base+0x2620>
   14a20:	cmp	r0, #34	; 0x22
   14a24:	mov	r7, r9
   14a28:	bne	15470 <main@@Base+0x20b4>
   14a2c:	add	r1, r9, #7
   14a30:	sub	r0, r5, r1
   14a34:	cmp	r0, #2
   14a38:	blt	14d28 <main@@Base+0x196c>
   14a3c:	ldrb	r0, [r1]
   14a40:	cmp	r0, #32
   14a44:	bls	14d14 <main@@Base+0x1958>
   14a48:	mov	r7, r1
   14a4c:	cmp	r7, r5
   14a50:	bne	14d40 <main@@Base+0x1984>
   14a54:	b	14d78 <main@@Base+0x19bc>
   14a58:	cmp	r0, #34	; 0x22
   14a5c:	mov	r7, r9
   14a60:	bne	15530 <main@@Base+0x2174>
   14a64:	add	r1, r9, #6
   14a68:	ldr	r6, [sp, #40]	; 0x28
   14a6c:	sub	r0, r5, r1
   14a70:	cmp	r0, #2
   14a74:	blt	14da4 <main@@Base+0x19e8>
   14a78:	ldrb	r0, [r1]
   14a7c:	cmp	r0, #32
   14a80:	bls	14d90 <main@@Base+0x19d4>
   14a84:	mov	r7, r1
   14a88:	cmp	r7, r5
   14a8c:	bne	14dbc <main@@Base+0x1a00>
   14a90:	b	14df4 <main@@Base+0x1a38>
   14a94:	ldr	r8, [sp, #40]	; 0x28
   14a98:	b	1b848 <main@@Base+0x848c>
   14a9c:	and	r1, r2, #-16777216	; 0xff000000
   14aa0:	teq	r1, #1728053248	; 0x67000000
   14aa4:	bne	1b848 <main@@Base+0x848c>
   14aa8:	cmp	r0, #2
   14aac:	blt	1b848 <main@@Base+0x848c>
   14ab0:	ldr	r2, [sp, #32]
   14ab4:	mov	r1, r9
   14ab8:	ldrb	r0, [r1, #17]!
   14abc:	ldr	r2, [r2]
   14ac0:	cmp	r2, #0
   14ac4:	beq	15cf0 <main@@Base+0x2934>
   14ac8:	cmp	r0, #33	; 0x21
   14acc:	bcc	14ad8 <main@@Base+0x171c>
   14ad0:	cmp	r0, #58	; 0x3a
   14ad4:	bne	1b848 <main@@Base+0x848c>
   14ad8:	ldr	r0, [sp, #32]
   14adc:	mov	r2, #0
   14ae0:	str	r2, [r0]
   14ae4:	b	15cfc <main@@Base+0x2940>
   14ae8:	cmp	r0, #34	; 0x22
   14aec:	mov	r1, r9
   14af0:	bne	15b44 <main@@Base+0x2788>
   14af4:	add	r2, r9, #6
   14af8:	sub	r0, r5, r2
   14afc:	cmp	r0, #2
   14b00:	blt	14f34 <main@@Base+0x1b78>
   14b04:	ldrb	r0, [r2]
   14b08:	cmp	r0, #32
   14b0c:	bls	14f20 <main@@Base+0x1b64>
   14b10:	mov	r1, r2
   14b14:	cmp	r1, r5
   14b18:	bne	14f50 <main@@Base+0x1b94>
   14b1c:	b	14f88 <main@@Base+0x1bcc>
   14b20:	cmp	r0, #34	; 0x22
   14b24:	mov	r7, r9
   14b28:	bne	15b98 <main@@Base+0x27dc>
   14b2c:	add	r1, r9, #6
   14b30:	sub	r0, r5, r1
   14b34:	cmp	r0, #2
   14b38:	blt	14fb0 <main@@Base+0x1bf4>
   14b3c:	ldrb	r0, [r1]
   14b40:	cmp	r0, #32
   14b44:	bls	14f9c <main@@Base+0x1be0>
   14b48:	mov	r7, r1
   14b4c:	cmp	r7, r5
   14b50:	bne	14fc8 <main@@Base+0x1c0c>
   14b54:	b	15000 <main@@Base+0x1c44>
   14b58:	movw	r0, #24428	; 0x5f6c
   14b5c:	lsr	r1, r1, #8
   14b60:	ldr	r5, [sp, #44]	; 0x2c
   14b64:	ldr	r8, [sp, #40]	; 0x28
   14b68:	movt	r0, #102	; 0x66
   14b6c:	orr	r1, r1, r2, lsl #24
   14b70:	eor	r0, r0, r2, lsr #8
   14b74:	movw	r2, #26483	; 0x6773
   14b78:	movt	r2, #28526	; 0x6f6e
   14b7c:	eor	r1, r1, r2
   14b80:	orrs	r0, r1, r0
   14b84:	bne	15804 <main@@Base+0x2448>
   14b88:	cmp	lr, #8
   14b8c:	blt	15804 <main@@Base+0x2448>
   14b90:	ldr	r2, [sp, #32]
   14b94:	mov	r1, r9
   14b98:	ldrb	r0, [r1, #15]!
   14b9c:	ldr	r2, [r2]
   14ba0:	cmp	r2, #0
   14ba4:	beq	15d8c <main@@Base+0x29d0>
   14ba8:	cmp	r0, #33	; 0x21
   14bac:	bcc	14bb8 <main@@Base+0x17fc>
   14bb0:	cmp	r0, #58	; 0x3a
   14bb4:	bne	15804 <main@@Base+0x2448>
   14bb8:	ldr	r0, [sp, #32]
   14bbc:	mov	r2, #0
   14bc0:	str	r2, [r0]
   14bc4:	b	15d98 <main@@Base+0x29dc>
   14bc8:	cmp	r0, #34	; 0x22
   14bcc:	mov	r1, r9
   14bd0:	bne	15de4 <main@@Base+0x2a28>
   14bd4:	add	r2, r9, #5
   14bd8:	sub	r0, r5, r2
   14bdc:	cmp	r0, #2
   14be0:	blt	1502c <main@@Base+0x1c70>
   14be4:	ldrb	r0, [r2]
   14be8:	cmp	r0, #32
   14bec:	bls	15018 <main@@Base+0x1c5c>
   14bf0:	mov	r1, r2
   14bf4:	cmp	r1, r5
   14bf8:	bne	15048 <main@@Base+0x1c8c>
   14bfc:	b	15080 <main@@Base+0x1cc4>
   14c00:	cmp	r0, #34	; 0x22
   14c04:	mov	r4, r9
   14c08:	bne	15e38 <main@@Base+0x2a7c>
   14c0c:	add	r1, r9, #5
   14c10:	sub	r0, r5, r1
   14c14:	cmp	r0, #2
   14c18:	blt	150a8 <main@@Base+0x1cec>
   14c1c:	ldrb	r0, [r1]
   14c20:	cmp	r0, #32
   14c24:	bls	15094 <main@@Base+0x1cd8>
   14c28:	mov	r4, r1
   14c2c:	cmp	r4, r5
   14c30:	bne	150c0 <main@@Base+0x1d04>
   14c34:	b	150f8 <main@@Base+0x1d3c>
   14c38:	cmp	r0, #34	; 0x22
   14c3c:	mov	r1, r9
   14c40:	bne	161a4 <main@@Base+0x2de8>
   14c44:	add	r2, r9, #5
   14c48:	sub	r0, r5, r2
   14c4c:	cmp	r0, #2
   14c50:	blt	15124 <main@@Base+0x1d68>
   14c54:	ldrb	r0, [r2]
   14c58:	cmp	r0, #32
   14c5c:	bls	15110 <main@@Base+0x1d54>
   14c60:	mov	r1, r2
   14c64:	cmp	r1, r5
   14c68:	bne	15140 <main@@Base+0x1d84>
   14c6c:	b	151c8 <main@@Base+0x1e0c>
   14c70:	cmp	r2, #1
   14c74:	mov	r1, #0
   14c78:	mov	r2, #0
   14c7c:	beq	13b98 <main@@Base+0x7dc>
   14c80:	b	1b848 <main@@Base+0x848c>
   14c84:	cmp	ip, #9
   14c88:	blt	17fcc <main@@Base+0x4c10>
   14c8c:	ldr	r2, [sp, #32]
   14c90:	mov	r1, r9
   14c94:	ldrb	r0, [r1, #16]!
   14c98:	ldr	r2, [r2]
   14c9c:	cmp	r2, #0
   14ca0:	beq	15a04 <main@@Base+0x2648>
   14ca4:	cmp	r0, #33	; 0x21
   14ca8:	bcc	14cb4 <main@@Base+0x18f8>
   14cac:	cmp	r0, #58	; 0x3a
   14cb0:	bne	17fcc <main@@Base+0x4c10>
   14cb4:	ldr	r0, [sp, #32]
   14cb8:	mov	r2, #0
   14cbc:	str	r2, [r0]
   14cc0:	b	15a10 <main@@Base+0x2654>
   14cc4:	ldr	sl, [sp, #36]	; 0x24
   14cc8:	cmp	r2, #1
   14ccc:	mov	r1, #0
   14cd0:	mov	r2, #0
   14cd4:	beq	14308 <main@@Base+0xf4c>
   14cd8:	b	1b848 <main@@Base+0x848c>
   14cdc:	cmp	r0, #34	; 0x22
   14ce0:	mov	r7, r9
   14ce4:	bne	169dc <main@@Base+0x3620>
   14ce8:	add	r1, r9, #9
   14cec:	sub	r0, r5, r1
   14cf0:	cmp	r0, #2
   14cf4:	blt	153e8 <main@@Base+0x202c>
   14cf8:	ldrb	r0, [r1]
   14cfc:	cmp	r0, #32
   14d00:	bls	153d4 <main@@Base+0x2018>
   14d04:	mov	r7, r1
   14d08:	cmp	r7, r5
   14d0c:	bne	15400 <main@@Base+0x2044>
   14d10:	b	15438 <main@@Base+0x207c>
   14d14:	bne	14d28 <main@@Base+0x196c>
   14d18:	mov	r7, r1
   14d1c:	ldrb	r0, [r7, #1]!
   14d20:	cmp	r0, #32
   14d24:	bhi	14d38 <main@@Base+0x197c>
   14d28:	mov	r0, r8
   14d2c:	mov	r2, r5
   14d30:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   14d34:	mov	r7, r0
   14d38:	cmp	r7, r5
   14d3c:	beq	14d78 <main@@Base+0x19bc>
   14d40:	ldrb	r0, [r7]
   14d44:	cmp	r0, #58	; 0x3a
   14d48:	bne	14d78 <main@@Base+0x19bc>
   14d4c:	add	r1, r7, #1
   14d50:	sub	r0, r5, r1
   14d54:	cmp	r0, #2
   14d58:	blt	15460 <main@@Base+0x20a4>
   14d5c:	ldrb	r0, [r1]
   14d60:	cmp	r0, #32
   14d64:	bls	15450 <main@@Base+0x2094>
   14d68:	mov	r7, r1
   14d6c:	cmp	r9, r7
   14d70:	bne	15478 <main@@Base+0x20bc>
   14d74:	b	1494c <main@@Base+0x1590>
   14d78:	mov	r0, r8
   14d7c:	mov	r1, r7
   14d80:	mov	r2, r5
   14d84:	mov	r3, #4
   14d88:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   14d8c:	b	1546c <main@@Base+0x20b0>
   14d90:	bne	14da4 <main@@Base+0x19e8>
   14d94:	mov	r7, r1
   14d98:	ldrb	r0, [r7, #1]!
   14d9c:	cmp	r0, #32
   14da0:	bhi	14db4 <main@@Base+0x19f8>
   14da4:	mov	r0, r6
   14da8:	mov	r2, r5
   14dac:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   14db0:	mov	r7, r0
   14db4:	cmp	r7, r5
   14db8:	beq	14df4 <main@@Base+0x1a38>
   14dbc:	ldrb	r0, [r7]
   14dc0:	cmp	r0, #58	; 0x3a
   14dc4:	bne	14df4 <main@@Base+0x1a38>
   14dc8:	add	r1, r7, #1
   14dcc:	sub	r0, r5, r1
   14dd0:	cmp	r0, #2
   14dd4:	blt	15520 <main@@Base+0x2164>
   14dd8:	ldrb	r0, [r1]
   14ddc:	cmp	r0, #32
   14de0:	bls	15510 <main@@Base+0x2154>
   14de4:	mov	r7, r1
   14de8:	cmp	r9, r7
   14dec:	bne	15538 <main@@Base+0x217c>
   14df0:	b	16648 <main@@Base+0x328c>
   14df4:	mov	r0, r6
   14df8:	mov	r1, r7
   14dfc:	mov	r2, r5
   14e00:	mov	r3, #4
   14e04:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   14e08:	b	1552c <main@@Base+0x2170>
   14e0c:	cmp	r0, #34	; 0x22
   14e10:	bne	15800 <main@@Base+0x2444>
   14e14:	add	r1, r9, #17
   14e18:	ldr	r6, [sp, #40]	; 0x28
   14e1c:	sub	r0, r5, r1
   14e20:	cmp	r0, #2
   14e24:	blt	157b4 <main@@Base+0x23f8>
   14e28:	ldrb	r0, [r1]
   14e2c:	cmp	r0, #32
   14e30:	bls	157a0 <main@@Base+0x23e4>
   14e34:	mov	r4, r1
   14e38:	cmp	r4, r5
   14e3c:	bne	157cc <main@@Base+0x2410>
   14e40:	b	15810 <main@@Base+0x2454>
   14e44:	cmp	r0, #34	; 0x22
   14e48:	mov	r7, r9
   14e4c:	bne	16d24 <main@@Base+0x3968>
   14e50:	add	r1, r9, #3
   14e54:	sub	r0, r5, r1
   14e58:	cmp	r0, #2
   14e5c:	blt	1583c <main@@Base+0x2480>
   14e60:	ldrb	r0, [r1]
   14e64:	cmp	r0, #32
   14e68:	bls	15828 <main@@Base+0x246c>
   14e6c:	mov	r7, r1
   14e70:	cmp	r7, r5
   14e74:	bne	15854 <main@@Base+0x2498>
   14e78:	b	1588c <main@@Base+0x24d0>
   14e7c:	cmp	r0, #34	; 0x22
   14e80:	mov	r4, r9
   14e84:	bne	16e9c <main@@Base+0x3ae0>
   14e88:	add	r1, r9, #4
   14e8c:	sub	r0, r5, r1
   14e90:	cmp	r0, #2
   14e94:	blt	158b8 <main@@Base+0x24fc>
   14e98:	ldrb	r0, [r1]
   14e9c:	cmp	r0, #32
   14ea0:	bls	158a4 <main@@Base+0x24e8>
   14ea4:	mov	r4, r1
   14ea8:	cmp	r4, r5
   14eac:	bne	158d0 <main@@Base+0x2514>
   14eb0:	b	15908 <main@@Base+0x254c>
   14eb4:	cmp	r0, #34	; 0x22
   14eb8:	mov	r7, r9
   14ebc:	bne	17d60 <main@@Base+0x49a4>
   14ec0:	add	r1, r9, #7
   14ec4:	sub	r0, r5, r1
   14ec8:	cmp	r0, #2
   14ecc:	blt	15934 <main@@Base+0x2578>
   14ed0:	ldrb	r0, [r1]
   14ed4:	cmp	r0, #32
   14ed8:	bls	15920 <main@@Base+0x2564>
   14edc:	mov	r7, r1
   14ee0:	cmp	r7, r5
   14ee4:	bne	1594c <main@@Base+0x2590>
   14ee8:	b	15984 <main@@Base+0x25c8>
   14eec:	cmp	r0, #34	; 0x22
   14ef0:	bne	15a98 <main@@Base+0x26dc>
   14ef4:	add	r1, r9, #17
   14ef8:	sub	r0, r5, r1
   14efc:	cmp	r0, #2
   14f00:	blt	15a4c <main@@Base+0x2690>
   14f04:	ldrb	r0, [r1]
   14f08:	cmp	r0, #32
   14f0c:	bls	15a38 <main@@Base+0x267c>
   14f10:	mov	r7, r1
   14f14:	cmp	r7, r5
   14f18:	bne	15a64 <main@@Base+0x26a8>
   14f1c:	b	15b08 <main@@Base+0x274c>
   14f20:	bne	14f34 <main@@Base+0x1b78>
   14f24:	mov	r1, r2
   14f28:	ldrb	r0, [r1, #1]!
   14f2c:	cmp	r0, #32
   14f30:	bhi	14f48 <main@@Base+0x1b8c>
   14f34:	mov	r1, r2
   14f38:	mov	r0, r8
   14f3c:	mov	r2, r5
   14f40:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   14f44:	mov	r1, r0
   14f48:	cmp	r1, r5
   14f4c:	beq	14f88 <main@@Base+0x1bcc>
   14f50:	ldrb	r0, [r1]
   14f54:	cmp	r0, #58	; 0x3a
   14f58:	bne	14f88 <main@@Base+0x1bcc>
   14f5c:	add	r2, r1, #1
   14f60:	sub	r0, r5, r2
   14f64:	cmp	r0, #2
   14f68:	blt	15b30 <main@@Base+0x2774>
   14f6c:	ldrb	r0, [r2]
   14f70:	cmp	r0, #32
   14f74:	bls	15b20 <main@@Base+0x2764>
   14f78:	mov	r1, r2
   14f7c:	cmp	r9, r1
   14f80:	bne	15b4c <main@@Base+0x2790>
   14f84:	b	1494c <main@@Base+0x1590>
   14f88:	mov	r0, r8
   14f8c:	mov	r2, r5
   14f90:	mov	r3, #4
   14f94:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   14f98:	b	15b40 <main@@Base+0x2784>
   14f9c:	bne	14fb0 <main@@Base+0x1bf4>
   14fa0:	mov	r7, r1
   14fa4:	ldrb	r0, [r7, #1]!
   14fa8:	cmp	r0, #32
   14fac:	bhi	14fc0 <main@@Base+0x1c04>
   14fb0:	mov	r0, r8
   14fb4:	mov	r2, r5
   14fb8:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   14fbc:	mov	r7, r0
   14fc0:	cmp	r7, r5
   14fc4:	beq	15000 <main@@Base+0x1c44>
   14fc8:	ldrb	r0, [r7]
   14fcc:	cmp	r0, #58	; 0x3a
   14fd0:	bne	15000 <main@@Base+0x1c44>
   14fd4:	add	r1, r7, #1
   14fd8:	sub	r0, r5, r1
   14fdc:	cmp	r0, #2
   14fe0:	blt	15b88 <main@@Base+0x27cc>
   14fe4:	ldrb	r0, [r1]
   14fe8:	cmp	r0, #32
   14fec:	bls	15b78 <main@@Base+0x27bc>
   14ff0:	mov	r7, r1
   14ff4:	cmp	r9, r7
   14ff8:	bne	15ba0 <main@@Base+0x27e4>
   14ffc:	b	1494c <main@@Base+0x1590>
   15000:	mov	r0, r8
   15004:	mov	r1, r7
   15008:	mov	r2, r5
   1500c:	mov	r3, #4
   15010:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   15014:	b	15b94 <main@@Base+0x27d8>
   15018:	bne	1502c <main@@Base+0x1c70>
   1501c:	mov	r1, r2
   15020:	ldrb	r0, [r1, #1]!
   15024:	cmp	r0, #32
   15028:	bhi	15040 <main@@Base+0x1c84>
   1502c:	mov	r1, r2
   15030:	mov	r0, r8
   15034:	mov	r2, r5
   15038:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1503c:	mov	r1, r0
   15040:	cmp	r1, r5
   15044:	beq	15080 <main@@Base+0x1cc4>
   15048:	ldrb	r0, [r1]
   1504c:	cmp	r0, #58	; 0x3a
   15050:	bne	15080 <main@@Base+0x1cc4>
   15054:	add	r2, r1, #1
   15058:	sub	r0, r5, r2
   1505c:	cmp	r0, #2
   15060:	blt	15dd0 <main@@Base+0x2a14>
   15064:	ldrb	r0, [r2]
   15068:	cmp	r0, #32
   1506c:	bls	15dc0 <main@@Base+0x2a04>
   15070:	mov	r1, r2
   15074:	cmp	r9, r1
   15078:	bne	15dec <main@@Base+0x2a30>
   1507c:	b	1494c <main@@Base+0x1590>
   15080:	mov	r0, r8
   15084:	mov	r2, r5
   15088:	mov	r3, #4
   1508c:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   15090:	b	15de0 <main@@Base+0x2a24>
   15094:	bne	150a8 <main@@Base+0x1cec>
   15098:	mov	r4, r1
   1509c:	ldrb	r0, [r4, #1]!
   150a0:	cmp	r0, #32
   150a4:	bhi	150b8 <main@@Base+0x1cfc>
   150a8:	mov	r0, r8
   150ac:	mov	r2, r5
   150b0:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   150b4:	mov	r4, r0
   150b8:	cmp	r4, r5
   150bc:	beq	150f8 <main@@Base+0x1d3c>
   150c0:	ldrb	r0, [r4]
   150c4:	cmp	r0, #58	; 0x3a
   150c8:	bne	150f8 <main@@Base+0x1d3c>
   150cc:	add	r1, r4, #1
   150d0:	sub	r0, r5, r1
   150d4:	cmp	r0, #2
   150d8:	blt	15e28 <main@@Base+0x2a6c>
   150dc:	ldrb	r0, [r1]
   150e0:	cmp	r0, #32
   150e4:	bls	15e18 <main@@Base+0x2a5c>
   150e8:	mov	r4, r1
   150ec:	cmp	r9, r4
   150f0:	bne	15e40 <main@@Base+0x2a84>
   150f4:	b	1494c <main@@Base+0x1590>
   150f8:	mov	r0, r8
   150fc:	mov	r1, r4
   15100:	mov	r2, r5
   15104:	mov	r3, #4
   15108:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   1510c:	b	15e34 <main@@Base+0x2a78>
   15110:	bne	15124 <main@@Base+0x1d68>
   15114:	mov	r1, r2
   15118:	ldrb	r0, [r1, #1]!
   1511c:	cmp	r0, #32
   15120:	bhi	15138 <main@@Base+0x1d7c>
   15124:	ldr	r0, [sp, #40]	; 0x28
   15128:	mov	r1, r2
   1512c:	mov	r2, r5
   15130:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   15134:	mov	r1, r0
   15138:	cmp	r1, r5
   1513c:	beq	151c8 <main@@Base+0x1e0c>
   15140:	ldrb	r0, [r1]
   15144:	cmp	r0, #58	; 0x3a
   15148:	bne	151c8 <main@@Base+0x1e0c>
   1514c:	add	r2, r1, #1
   15150:	sub	r0, r5, r2
   15154:	cmp	r0, #2
   15158:	blt	16190 <main@@Base+0x2dd4>
   1515c:	ldrb	r0, [r2]
   15160:	cmp	r0, #32
   15164:	bls	16180 <main@@Base+0x2dc4>
   15168:	mov	r1, r2
   1516c:	cmp	r9, r1
   15170:	bne	161ac <main@@Base+0x2df0>
   15174:	eor	r0, r6, #889192448	; 0x35000000
   15178:	orrs	r0, r0, r4
   1517c:	bne	16648 <main@@Base+0x328c>
   15180:	cmp	r8, #6
   15184:	mov	r7, r9
   15188:	blt	165e4 <main@@Base+0x3228>
   1518c:	ldr	r2, [sp, #32]
   15190:	mov	r1, r9
   15194:	ldrb	r0, [r1, #5]!
   15198:	ldr	r2, [r2]
   1519c:	cmp	r2, #0
   151a0:	beq	151dc <main@@Base+0x1e20>
   151a4:	cmp	r0, #33	; 0x21
   151a8:	bcc	151b8 <main@@Base+0x1dfc>
   151ac:	cmp	r0, #58	; 0x3a
   151b0:	mov	r7, r9
   151b4:	bne	165e4 <main@@Base+0x3228>
   151b8:	ldr	r0, [sp, #32]
   151bc:	mov	r2, #0
   151c0:	str	r2, [r0]
   151c4:	b	151ec <main@@Base+0x1e30>
   151c8:	ldr	r0, [sp, #40]	; 0x28
   151cc:	mov	r2, r5
   151d0:	mov	r3, #4
   151d4:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   151d8:	b	161a0 <main@@Base+0x2de4>
   151dc:	cmp	r0, #34	; 0x22
   151e0:	mov	r7, r9
   151e4:	bne	165e4 <main@@Base+0x3228>
   151e8:	add	r1, r9, #6
   151ec:	ldr	r6, [sp, #40]	; 0x28
   151f0:	sub	r0, r5, r1
   151f4:	cmp	r0, #2
   151f8:	blt	15338 <main@@Base+0x1f7c>
   151fc:	ldrb	r0, [r1]
   15200:	cmp	r0, #32
   15204:	bls	15324 <main@@Base+0x1f68>
   15208:	mov	r7, r1
   1520c:	cmp	r7, r5
   15210:	bne	15350 <main@@Base+0x1f94>
   15214:	b	15388 <main@@Base+0x1fcc>
   15218:	cmp	r0, #34	; 0x22
   1521c:	bne	1b848 <main@@Base+0x848c>
   15220:	add	r1, r9, #11
   15224:	sub	r0, r5, r1
   15228:	cmp	r0, #2
   1522c:	blt	1624c <main@@Base+0x2e90>
   15230:	ldrb	r0, [r1]
   15234:	cmp	r0, #32
   15238:	bls	16238 <main@@Base+0x2e7c>
   1523c:	mov	r4, r1
   15240:	cmp	r4, r5
   15244:	bne	16264 <main@@Base+0x2ea8>
   15248:	b	1629c <main@@Base+0x2ee0>
   1524c:	cmp	r0, #34	; 0x22
   15250:	bne	1b848 <main@@Base+0x848c>
   15254:	add	r1, r9, #19
   15258:	sub	r0, r5, r1
   1525c:	cmp	r0, #2
   15260:	blt	162fc <main@@Base+0x2f40>
   15264:	ldrb	r0, [r1]
   15268:	cmp	r0, #32
   1526c:	bls	162e8 <main@@Base+0x2f2c>
   15270:	mov	r4, r1
   15274:	cmp	r4, r5
   15278:	bne	16314 <main@@Base+0x2f58>
   1527c:	b	1634c <main@@Base+0x2f90>
   15280:	cmp	r0, #34	; 0x22
   15284:	bne	15804 <main@@Base+0x2448>
   15288:	add	r1, r9, #24
   1528c:	sub	r0, r5, r1
   15290:	cmp	r0, #2
   15294:	blt	16378 <main@@Base+0x2fbc>
   15298:	ldrb	r0, [r1]
   1529c:	cmp	r0, #32
   152a0:	bls	16364 <main@@Base+0x2fa8>
   152a4:	mov	r7, r1
   152a8:	cmp	r7, r5
   152ac:	bne	16390 <main@@Base+0x2fd4>
   152b0:	b	163c8 <main@@Base+0x300c>
   152b4:	cmp	r0, #34	; 0x22
   152b8:	mov	r7, r9
   152bc:	bne	18ae4 <main@@Base+0x5728>
   152c0:	add	r1, r9, #5
   152c4:	sub	r0, r5, r1
   152c8:	cmp	r0, #2
   152cc:	blt	163f4 <main@@Base+0x3038>
   152d0:	ldrb	r0, [r1]
   152d4:	cmp	r0, #32
   152d8:	bls	163e0 <main@@Base+0x3024>
   152dc:	mov	r7, r1
   152e0:	cmp	r7, r5
   152e4:	bne	1640c <main@@Base+0x3050>
   152e8:	b	16444 <main@@Base+0x3088>
   152ec:	cmp	r0, #34	; 0x22
   152f0:	mov	r7, r9
   152f4:	bne	18c64 <main@@Base+0x58a8>
   152f8:	add	r1, r9, #6
   152fc:	sub	r0, r5, r1
   15300:	cmp	r0, #2
   15304:	blt	16474 <main@@Base+0x30b8>
   15308:	ldrb	r0, [r1]
   1530c:	cmp	r0, #32
   15310:	bls	16460 <main@@Base+0x30a4>
   15314:	mov	r7, r1
   15318:	cmp	r7, r5
   1531c:	bne	1648c <main@@Base+0x30d0>
   15320:	b	164c4 <main@@Base+0x3108>
   15324:	bne	15338 <main@@Base+0x1f7c>
   15328:	mov	r7, r1
   1532c:	ldrb	r0, [r7, #1]!
   15330:	cmp	r0, #32
   15334:	bhi	15348 <main@@Base+0x1f8c>
   15338:	mov	r0, r6
   1533c:	mov	r2, r5
   15340:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   15344:	mov	r7, r0
   15348:	cmp	r7, r5
   1534c:	beq	15388 <main@@Base+0x1fcc>
   15350:	ldrb	r0, [r7]
   15354:	cmp	r0, #58	; 0x3a
   15358:	bne	15388 <main@@Base+0x1fcc>
   1535c:	add	r1, r7, #1
   15360:	sub	r0, r5, r1
   15364:	cmp	r0, #2
   15368:	blt	165d4 <main@@Base+0x3218>
   1536c:	ldrb	r0, [r1]
   15370:	cmp	r0, #32
   15374:	bls	165c4 <main@@Base+0x3208>
   15378:	mov	r7, r1
   1537c:	cmp	r9, r7
   15380:	bne	165ec <main@@Base+0x3230>
   15384:	b	16648 <main@@Base+0x328c>
   15388:	mov	r0, r6
   1538c:	mov	r1, r7
   15390:	mov	r2, r5
   15394:	mov	r3, #4
   15398:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   1539c:	b	165e0 <main@@Base+0x3224>
   153a0:	cmp	r0, #34	; 0x22
   153a4:	bne	1653c <main@@Base+0x3180>
   153a8:	add	r1, r9, #17
   153ac:	sub	r0, r5, r1
   153b0:	cmp	r0, #2
   153b4:	blt	164f0 <main@@Base+0x3134>
   153b8:	ldrb	r0, [r1]
   153bc:	cmp	r0, #32
   153c0:	bls	164dc <main@@Base+0x3120>
   153c4:	mov	r7, r1
   153c8:	cmp	r7, r5
   153cc:	bne	16508 <main@@Base+0x314c>
   153d0:	b	165ac <main@@Base+0x31f0>
   153d4:	bne	153e8 <main@@Base+0x202c>
   153d8:	mov	r7, r1
   153dc:	ldrb	r0, [r7, #1]!
   153e0:	cmp	r0, #32
   153e4:	bhi	153f8 <main@@Base+0x203c>
   153e8:	mov	r0, r8
   153ec:	mov	r2, r5
   153f0:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   153f4:	mov	r7, r0
   153f8:	cmp	r7, r5
   153fc:	beq	15438 <main@@Base+0x207c>
   15400:	ldrb	r0, [r7]
   15404:	cmp	r0, #58	; 0x3a
   15408:	bne	15438 <main@@Base+0x207c>
   1540c:	add	r1, r7, #1
   15410:	sub	r0, r5, r1
   15414:	cmp	r0, #2
   15418:	blt	169cc <main@@Base+0x3610>
   1541c:	ldrb	r0, [r1]
   15420:	cmp	r0, #32
   15424:	bls	169bc <main@@Base+0x3600>
   15428:	mov	r7, r1
   1542c:	cmp	r9, r7
   15430:	bne	169e4 <main@@Base+0x3628>
   15434:	b	1494c <main@@Base+0x1590>
   15438:	mov	r0, r8
   1543c:	mov	r1, r7
   15440:	mov	r2, r5
   15444:	mov	r3, #4
   15448:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   1544c:	b	169d8 <main@@Base+0x361c>
   15450:	bne	15460 <main@@Base+0x20a4>
   15454:	ldrb	r0, [r7, #2]!
   15458:	cmp	r0, #32
   1545c:	bhi	15470 <main@@Base+0x20b4>
   15460:	mov	r0, r8
   15464:	mov	r2, r5
   15468:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1546c:	mov	r7, r0
   15470:	cmp	r9, r7
   15474:	beq	1494c <main@@Base+0x1590>
   15478:	mov	r0, #0
   1547c:	mov	r1, r7
   15480:	mov	r2, r5
   15484:	sub	r3, fp, #56	; 0x38
   15488:	str	r0, [fp, #-56]	; 0xffffffc8
   1548c:	mov	r0, r8
   15490:	bl	311e8 <flatcc_json_parser_float@@Base>
   15494:	mov	r4, r0
   15498:	cmp	r7, r0
   1549c:	bne	154d0 <main@@Base+0x2114>
   154a0:	sub	r0, fp, #56	; 0x38
   154a4:	mov	r1, r7
   154a8:	mov	r2, r5
   154ac:	str	r0, [sp]
   154b0:	mov	r0, r8
   154b4:	ldr	r3, [pc, #4000]	; 1645c <main@@Base+0x30a0>
   154b8:	add	r3, pc, r3
   154bc:	bl	23194 <main@@Base+0xfdd8>
   154c0:	mov	r4, r0
   154c4:	cmp	r0, r7
   154c8:	cmpne	r4, r5
   154cc:	beq	13488 <main@@Base+0xcc>
   154d0:	vldr	s0, [fp, #-56]	; 0xffffffc8
   154d4:	vcmp.f32	s0, #0.0
   154d8:	vmrs	APSR_nzcv, fpscr
   154dc:	bne	154ec <main@@Base+0x2130>
   154e0:	ldrb	r0, [r8, #8]
   154e4:	tst	r0, #2
   154e8:	beq	1c2cc <main@@Base+0x8f10>
   154ec:	ldr	r0, [r8]
   154f0:	mov	r1, #27
   154f4:	mov	r2, #4
   154f8:	mov	r3, #4
   154fc:	bl	2d0a0 <flatcc_builder_table_add@@Base>
   15500:	cmp	r0, #0
   15504:	beq	13488 <main@@Base+0xcc>
   15508:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1550c:	b	1673c <main@@Base+0x3380>
   15510:	bne	15520 <main@@Base+0x2164>
   15514:	ldrb	r0, [r7, #2]!
   15518:	cmp	r0, #32
   1551c:	bhi	15530 <main@@Base+0x2174>
   15520:	ldr	r0, [sp, #40]	; 0x28
   15524:	mov	r2, r5
   15528:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1552c:	mov	r7, r0
   15530:	cmp	r9, r7
   15534:	beq	16648 <main@@Base+0x328c>
   15538:	ldr	r8, [sp, #40]	; 0x28
   1553c:	mov	r1, #4
   15540:	mov	r2, #2
   15544:	mvn	r3, #-1073741824	; 0xc0000000
   15548:	ldr	r0, [r8]
   1554c:	bl	2b6f4 <flatcc_builder_start_vector@@Base>
   15550:	cmp	r0, #0
   15554:	bne	1d5ac <main@@Base+0xa1f0>
   15558:	cmp	r7, r5
   1555c:	beq	15594 <main@@Base+0x21d8>
   15560:	ldrb	r0, [r7]
   15564:	cmp	r0, #91	; 0x5b
   15568:	bne	15594 <main@@Base+0x21d8>
   1556c:	ldr	sl, [sp, #36]	; 0x24
   15570:	add	r1, r7, #1
   15574:	sub	r0, r5, r1
   15578:	cmp	r0, #2
   1557c:	blt	155e0 <main@@Base+0x2224>
   15580:	ldrb	r0, [r1]
   15584:	cmp	r0, #32
   15588:	bls	155d0 <main@@Base+0x2214>
   1558c:	mov	r7, r1
   15590:	b	155f0 <main@@Base+0x2234>
   15594:	mov	r0, r8
   15598:	mov	r1, r7
   1559c:	mov	r2, r5
   155a0:	mov	r3, #22
   155a4:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   155a8:	ldr	sl, [sp, #36]	; 0x24
   155ac:	mov	r7, r0
   155b0:	ldr	r0, [r8]
   155b4:	bl	2c96c <flatcc_builder_end_vector@@Base>
   155b8:	cmp	r0, #0
   155bc:	str	r0, [sp, #52]	; 0x34
   155c0:	beq	1d5ac <main@@Base+0xa1f0>
   155c4:	ldr	r0, [r8]
   155c8:	mov	r1, #9
   155cc:	b	16728 <main@@Base+0x336c>
   155d0:	bne	155e0 <main@@Base+0x2224>
   155d4:	ldrb	r0, [r7, #2]!
   155d8:	cmp	r0, #32
   155dc:	bhi	155f0 <main@@Base+0x2234>
   155e0:	mov	r0, r8
   155e4:	mov	r2, r5
   155e8:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   155ec:	mov	r7, r0
   155f0:	cmp	r7, r5
   155f4:	mov	r4, r5
   155f8:	beq	1563c <main@@Base+0x2280>
   155fc:	ldrb	r0, [r7]
   15600:	cmp	r0, #93	; 0x5d
   15604:	bne	15638 <main@@Base+0x227c>
   15608:	add	r1, r7, #1
   1560c:	sub	r0, r5, r1
   15610:	cmp	r0, #2
   15614:	blt	161f4 <main@@Base+0x2e38>
   15618:	ldrb	r0, [r1]
   1561c:	cmp	r0, #32
   15620:	bhi	15758 <main@@Base+0x239c>
   15624:	bne	161f4 <main@@Base+0x2e38>
   15628:	ldrb	r0, [r7, #2]!
   1562c:	cmp	r0, #32
   15630:	bls	161f4 <main@@Base+0x2e38>
   15634:	b	155b0 <main@@Base+0x21f4>
   15638:	mov	r4, r7
   1563c:	ldr	r0, [r8]
   15640:	mov	r1, #1
   15644:	bl	2ab30 <flatcc_builder_extend_vector@@Base>
   15648:	mov	r3, r0
   1564c:	cmp	r0, #0
   15650:	beq	13488 <main@@Base+0xcc>
   15654:	mov	r0, r8
   15658:	mov	r1, r4
   1565c:	mov	r2, r5
   15660:	bl	1f1ac <main@@Base+0xbdf0>
   15664:	mov	r1, r0
   15668:	sub	r0, r5, r0
   1566c:	cmp	r0, #2
   15670:	blt	156a4 <main@@Base+0x22e8>
   15674:	ldrb	r0, [r1]
   15678:	cmp	r0, #32
   1567c:	bls	15690 <main@@Base+0x22d4>
   15680:	mov	r4, r1
   15684:	cmp	r4, r5
   15688:	bne	156bc <main@@Base+0x2300>
   1568c:	b	1572c <main@@Base+0x2370>
   15690:	bne	156a4 <main@@Base+0x22e8>
   15694:	mov	r4, r1
   15698:	ldrb	r0, [r4, #1]!
   1569c:	cmp	r0, #32
   156a0:	bhi	156b4 <main@@Base+0x22f8>
   156a4:	mov	r0, r8
   156a8:	mov	r2, r5
   156ac:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   156b0:	mov	r4, r0
   156b4:	cmp	r4, r5
   156b8:	beq	1572c <main@@Base+0x2370>
   156bc:	ldrb	r0, [r4]
   156c0:	cmp	r0, #44	; 0x2c
   156c4:	bne	15734 <main@@Base+0x2378>
   156c8:	add	r1, r4, #1
   156cc:	sub	r0, r5, r1
   156d0:	cmp	r0, #2
   156d4:	blt	15704 <main@@Base+0x2348>
   156d8:	ldrb	r0, [r1]
   156dc:	cmp	r0, #32
   156e0:	bls	156f4 <main@@Base+0x2338>
   156e4:	mov	r4, r1
   156e8:	cmp	r4, r5
   156ec:	bne	1571c <main@@Base+0x2360>
   156f0:	b	15760 <main@@Base+0x23a4>
   156f4:	bne	15704 <main@@Base+0x2348>
   156f8:	ldrb	r0, [r4, #2]!
   156fc:	cmp	r0, #32
   15700:	bhi	15714 <main@@Base+0x2358>
   15704:	mov	r0, r8
   15708:	mov	r2, r5
   1570c:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   15710:	mov	r4, r0
   15714:	cmp	r4, r5
   15718:	beq	15760 <main@@Base+0x23a4>
   1571c:	ldrb	r0, [r4]
   15720:	cmp	r0, #93	; 0x5d
   15724:	bne	1563c <main@@Base+0x2280>
   15728:	b	1573c <main@@Base+0x2380>
   1572c:	mov	r7, r5
   15730:	b	155b0 <main@@Base+0x21f4>
   15734:	cmp	r0, #93	; 0x5d
   15738:	bne	15cd8 <main@@Base+0x291c>
   1573c:	add	r1, r4, #1
   15740:	sub	r0, r5, r1
   15744:	cmp	r0, #2
   15748:	blt	161f4 <main@@Base+0x2e38>
   1574c:	ldrb	r0, [r1]
   15750:	cmp	r0, #32
   15754:	bls	161e0 <main@@Base+0x2e24>
   15758:	mov	r7, r1
   1575c:	b	155b0 <main@@Base+0x21f4>
   15760:	mov	r0, r8
   15764:	mov	r1, r5
   15768:	b	15ce0 <main@@Base+0x2924>
   1576c:	cmp	r0, #34	; 0x22
   15770:	bne	16bd4 <main@@Base+0x3818>
   15774:	add	r1, r9, #22
   15778:	sub	r0, r5, r1
   1577c:	cmp	r0, #2
   15780:	blt	16b88 <main@@Base+0x37cc>
   15784:	ldrb	r0, [r1]
   15788:	cmp	r0, #32
   1578c:	bls	16b74 <main@@Base+0x37b8>
   15790:	mov	r4, r1
   15794:	cmp	r4, r5
   15798:	bne	16ba0 <main@@Base+0x37e4>
   1579c:	b	16be4 <main@@Base+0x3828>
   157a0:	bne	157b4 <main@@Base+0x23f8>
   157a4:	mov	r4, r1
   157a8:	ldrb	r0, [r4, #1]!
   157ac:	cmp	r0, #32
   157b0:	bhi	157c4 <main@@Base+0x2408>
   157b4:	mov	r0, r6
   157b8:	mov	r2, r5
   157bc:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   157c0:	mov	r4, r0
   157c4:	cmp	r4, r5
   157c8:	beq	15810 <main@@Base+0x2454>
   157cc:	ldrb	r0, [r4]
   157d0:	cmp	r0, #58	; 0x3a
   157d4:	bne	15810 <main@@Base+0x2454>
   157d8:	add	r1, r4, #1
   157dc:	sub	r0, r5, r1
   157e0:	cmp	r0, #2
   157e4:	blt	16c20 <main@@Base+0x3864>
   157e8:	ldrb	r0, [r1]
   157ec:	cmp	r0, #32
   157f0:	bls	16c10 <main@@Base+0x3854>
   157f4:	mov	r4, r1
   157f8:	cmp	sl, r4
   157fc:	bne	16c38 <main@@Base+0x387c>
   15800:	ldr	r8, [sp, #40]	; 0x28
   15804:	mov	r0, r8
   15808:	mov	r1, sl
   1580c:	b	166dc <main@@Base+0x3320>
   15810:	mov	r0, r6
   15814:	mov	r1, r4
   15818:	mov	r2, r5
   1581c:	mov	r3, #4
   15820:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   15824:	b	16c2c <main@@Base+0x3870>
   15828:	bne	1583c <main@@Base+0x2480>
   1582c:	mov	r7, r1
   15830:	ldrb	r0, [r7, #1]!
   15834:	cmp	r0, #32
   15838:	bhi	1584c <main@@Base+0x2490>
   1583c:	mov	r0, r8
   15840:	mov	r2, r5
   15844:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   15848:	mov	r7, r0
   1584c:	cmp	r7, r5
   15850:	beq	1588c <main@@Base+0x24d0>
   15854:	ldrb	r0, [r7]
   15858:	cmp	r0, #58	; 0x3a
   1585c:	bne	1588c <main@@Base+0x24d0>
   15860:	add	r1, r7, #1
   15864:	sub	r0, r5, r1
   15868:	cmp	r0, #2
   1586c:	blt	16d14 <main@@Base+0x3958>
   15870:	ldrb	r0, [r1]
   15874:	cmp	r0, #32
   15878:	bls	16d04 <main@@Base+0x3948>
   1587c:	mov	r7, r1
   15880:	cmp	r9, r7
   15884:	bne	16d2c <main@@Base+0x3970>
   15888:	b	1494c <main@@Base+0x1590>
   1588c:	mov	r0, r8
   15890:	mov	r1, r7
   15894:	mov	r2, r5
   15898:	mov	r3, #4
   1589c:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   158a0:	b	16d20 <main@@Base+0x3964>
   158a4:	bne	158b8 <main@@Base+0x24fc>
   158a8:	mov	r4, r1
   158ac:	ldrb	r0, [r4, #1]!
   158b0:	cmp	r0, #32
   158b4:	bhi	158c8 <main@@Base+0x250c>
   158b8:	mov	r0, r8
   158bc:	mov	r2, r5
   158c0:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   158c4:	mov	r4, r0
   158c8:	cmp	r4, r5
   158cc:	beq	15908 <main@@Base+0x254c>
   158d0:	ldrb	r0, [r4]
   158d4:	cmp	r0, #58	; 0x3a
   158d8:	bne	15908 <main@@Base+0x254c>
   158dc:	add	r1, r4, #1
   158e0:	sub	r0, r5, r1
   158e4:	cmp	r0, #2
   158e8:	blt	16e8c <main@@Base+0x3ad0>
   158ec:	ldrb	r0, [r1]
   158f0:	cmp	r0, #32
   158f4:	bls	16e7c <main@@Base+0x3ac0>
   158f8:	mov	r4, r1
   158fc:	cmp	r9, r4
   15900:	bne	16ea4 <main@@Base+0x3ae8>
   15904:	b	1494c <main@@Base+0x1590>
   15908:	mov	r0, r8
   1590c:	mov	r1, r4
   15910:	mov	r2, r5
   15914:	mov	r3, #4
   15918:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   1591c:	b	16e98 <main@@Base+0x3adc>
   15920:	bne	15934 <main@@Base+0x2578>
   15924:	mov	r7, r1
   15928:	ldrb	r0, [r7, #1]!
   1592c:	cmp	r0, #32
   15930:	bhi	15944 <main@@Base+0x2588>
   15934:	mov	r0, r8
   15938:	mov	r2, r5
   1593c:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   15940:	mov	r7, r0
   15944:	cmp	r7, r5
   15948:	beq	15984 <main@@Base+0x25c8>
   1594c:	ldrb	r0, [r7]
   15950:	cmp	r0, #58	; 0x3a
   15954:	bne	15984 <main@@Base+0x25c8>
   15958:	add	r1, r7, #1
   1595c:	sub	r0, r5, r1
   15960:	cmp	r0, #2
   15964:	blt	17d50 <main@@Base+0x4994>
   15968:	ldrb	r0, [r1]
   1596c:	cmp	r0, #32
   15970:	bls	17d40 <main@@Base+0x4984>
   15974:	mov	r7, r1
   15978:	cmp	r9, r7
   1597c:	bne	17d68 <main@@Base+0x49ac>
   15980:	b	1494c <main@@Base+0x1590>
   15984:	mov	r0, r8
   15988:	mov	r1, r7
   1598c:	mov	r2, r5
   15990:	mov	r3, #4
   15994:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   15998:	b	17d5c <main@@Base+0x49a0>
   1599c:	cmp	r0, #34	; 0x22
   159a0:	bne	1b848 <main@@Base+0x848c>
   159a4:	add	r1, r9, #18
   159a8:	sub	r0, r5, r1
   159ac:	cmp	r0, #2
   159b0:	blt	17e00 <main@@Base+0x4a44>
   159b4:	ldrb	r0, [r1]
   159b8:	cmp	r0, #32
   159bc:	bls	17dec <main@@Base+0x4a30>
   159c0:	mov	r4, r1
   159c4:	cmp	r4, r5
   159c8:	bne	17e18 <main@@Base+0x4a5c>
   159cc:	b	17e5c <main@@Base+0x4aa0>
   159d0:	cmp	r0, #34	; 0x22
   159d4:	bne	17edc <main@@Base+0x4b20>
   159d8:	add	r1, r9, #17
   159dc:	sub	r0, r5, r1
   159e0:	cmp	r0, #2
   159e4:	blt	17e88 <main@@Base+0x4acc>
   159e8:	ldrb	r0, [r1]
   159ec:	cmp	r0, #32
   159f0:	bls	17e74 <main@@Base+0x4ab8>
   159f4:	mov	r7, r1
   159f8:	cmp	r7, r5
   159fc:	bne	17ea0 <main@@Base+0x4ae4>
   15a00:	b	17f4c <main@@Base+0x4b90>
   15a04:	cmp	r0, #34	; 0x22
   15a08:	bne	17fcc <main@@Base+0x4c10>
   15a0c:	add	r1, r9, #17
   15a10:	sub	r0, r5, r1
   15a14:	cmp	r0, #2
   15a18:	blt	17f78 <main@@Base+0x4bbc>
   15a1c:	ldrb	r0, [r1]
   15a20:	cmp	r0, #32
   15a24:	bls	17f64 <main@@Base+0x4ba8>
   15a28:	mov	r7, r1
   15a2c:	cmp	r7, r5
   15a30:	bne	17f90 <main@@Base+0x4bd4>
   15a34:	b	18048 <main@@Base+0x4c8c>
   15a38:	bne	15a4c <main@@Base+0x2690>
   15a3c:	mov	r7, r1
   15a40:	ldrb	r0, [r7, #1]!
   15a44:	cmp	r0, #32
   15a48:	bhi	15a5c <main@@Base+0x26a0>
   15a4c:	mov	r0, r8
   15a50:	mov	r2, r5
   15a54:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   15a58:	mov	r7, r0
   15a5c:	cmp	r7, r5
   15a60:	beq	15b08 <main@@Base+0x274c>
   15a64:	ldrb	r0, [r7]
   15a68:	cmp	r0, #58	; 0x3a
   15a6c:	bne	15b08 <main@@Base+0x274c>
   15a70:	add	r1, r7, #1
   15a74:	sub	r0, r5, r1
   15a78:	cmp	r0, #2
   15a7c:	blt	180bc <main@@Base+0x4d00>
   15a80:	ldrb	r0, [r1]
   15a84:	cmp	r0, #32
   15a88:	bls	180ac <main@@Base+0x4cf0>
   15a8c:	mov	r7, r1
   15a90:	cmp	sl, r7
   15a94:	bne	180d4 <main@@Base+0x4d18>
   15a98:	add	r4, r9, #16
   15a9c:	mov	r1, #8
   15aa0:	sub	r0, r5, r4
   15aa4:	cmp	r0, #8
   15aa8:	movcc	r1, r0
   15aac:	sub	r1, r1, #1
   15ab0:	cmp	r1, #7
   15ab4:	bhi	1803c <main@@Base+0x4c80>
   15ab8:	ldrb	r1, [r4]
   15abc:	cmp	r1, #97	; 0x61
   15ac0:	bne	1803c <main@@Base+0x4c80>
   15ac4:	ldr	sl, [sp, #36]	; 0x24
   15ac8:	cmp	r0, #2
   15acc:	blt	1c2b8 <main@@Base+0x8efc>
   15ad0:	ldr	r2, [sp, #32]
   15ad4:	mov	r1, r9
   15ad8:	ldrb	r0, [r1, #17]!
   15adc:	ldr	r2, [r2]
   15ae0:	cmp	r2, #0
   15ae4:	beq	162b4 <main@@Base+0x2ef8>
   15ae8:	cmp	r0, #33	; 0x21
   15aec:	bcc	15af8 <main@@Base+0x273c>
   15af0:	cmp	r0, #58	; 0x3a
   15af4:	bne	1c2b8 <main@@Base+0x8efc>
   15af8:	ldr	r0, [sp, #32]
   15afc:	mov	r2, #0
   15b00:	str	r2, [r0]
   15b04:	b	162c0 <main@@Base+0x2f04>
   15b08:	mov	r0, r8
   15b0c:	mov	r1, r7
   15b10:	mov	r2, r5
   15b14:	mov	r3, #4
   15b18:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   15b1c:	b	180c8 <main@@Base+0x4d0c>
   15b20:	bne	15b30 <main@@Base+0x2774>
   15b24:	ldrb	r0, [r1, #2]!
   15b28:	cmp	r0, #32
   15b2c:	bhi	15b44 <main@@Base+0x2788>
   15b30:	mov	r1, r2
   15b34:	mov	r0, r8
   15b38:	mov	r2, r5
   15b3c:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   15b40:	mov	r1, r0
   15b44:	cmp	r9, r1
   15b48:	beq	1494c <main@@Base+0x1590>
   15b4c:	mov	r0, r8
   15b50:	mov	r2, r5
   15b54:	add	r3, sp, #52	; 0x34
   15b58:	bl	13448 <main@@Base+0x8c>
   15b5c:	mov	r4, r0
   15b60:	ldr	r0, [sp, #52]	; 0x34
   15b64:	cmp	r0, #0
   15b68:	beq	13488 <main@@Base+0xcc>
   15b6c:	ldr	r0, [r8]
   15b70:	mov	r1, #12
   15b74:	b	15ec8 <main@@Base+0x2b0c>
   15b78:	bne	15b88 <main@@Base+0x27cc>
   15b7c:	ldrb	r0, [r7, #2]!
   15b80:	cmp	r0, #32
   15b84:	bhi	15b98 <main@@Base+0x27dc>
   15b88:	mov	r0, r8
   15b8c:	mov	r2, r5
   15b90:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   15b94:	mov	r7, r0
   15b98:	cmp	r9, r7
   15b9c:	beq	1494c <main@@Base+0x1590>
   15ba0:	mov	r6, #0
   15ba4:	cmp	r7, r5
   15ba8:	str	r6, [fp, #-52]	; 0xffffffcc
   15bac:	str	r6, [fp, #-56]	; 0xffffffc8
   15bb0:	strb	r6, [fp, #-60]	; 0xffffffc4
   15bb4:	str	r6, [sp, #56]	; 0x38
   15bb8:	beq	15c18 <main@@Base+0x285c>
   15bbc:	sub	r0, fp, #56	; 0x38
   15bc0:	mov	r1, r7
   15bc4:	mov	r2, r5
   15bc8:	add	r3, sp, #56	; 0x38
   15bcc:	str	r0, [sp]
   15bd0:	mov	r0, r8
   15bd4:	bl	3132c <flatcc_json_parser_integer@@Base>
   15bd8:	cmp	r0, r7
   15bdc:	beq	15c28 <main@@Base+0x286c>
   15be0:	ldr	r2, [sp, #56]	; 0x38
   15be4:	mov	r4, r0
   15be8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15bec:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15bf0:	cmp	r2, #0
   15bf4:	beq	15c38 <main@@Base+0x287c>
   15bf8:	subs	r2, r0, #129	; 0x81
   15bfc:	sbcs	r1, r1, #0
   15c00:	bcc	15c68 <main@@Base+0x28ac>
   15c04:	mov	r0, r8
   15c08:	mov	r1, r4
   15c0c:	mov	r2, r5
   15c10:	mov	r3, #8
   15c14:	b	15c54 <main@@Base+0x2898>
   15c18:	mov	r4, r5
   15c1c:	cmp	r7, r4
   15c20:	bne	15cb4 <main@@Base+0x28f8>
   15c24:	b	15c80 <main@@Base+0x28c4>
   15c28:	mov	r4, r7
   15c2c:	cmp	r7, r4
   15c30:	bne	15cb4 <main@@Base+0x28f8>
   15c34:	b	15c80 <main@@Base+0x28c4>
   15c38:	subs	r2, r0, #128	; 0x80
   15c3c:	sbcs	r1, r1, #0
   15c40:	bcc	15c70 <main@@Base+0x28b4>
   15c44:	mov	r0, r8
   15c48:	mov	r1, r4
   15c4c:	mov	r2, r5
   15c50:	mov	r3, #7
   15c54:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   15c58:	mov	r4, r0
   15c5c:	cmp	r7, r4
   15c60:	bne	15cb4 <main@@Base+0x28f8>
   15c64:	b	15c80 <main@@Base+0x28c4>
   15c68:	rsb	r6, r0, #0
   15c6c:	b	15c74 <main@@Base+0x28b8>
   15c70:	mov	r6, r0
   15c74:	strb	r6, [fp, #-60]	; 0xffffffc4
   15c78:	cmp	r7, r4
   15c7c:	bne	15cb4 <main@@Base+0x28f8>
   15c80:	sub	r0, fp, #60	; 0x3c
   15c84:	mov	r1, r7
   15c88:	mov	r2, r5
   15c8c:	str	r0, [sp]
   15c90:	mov	r0, r8
   15c94:	ldr	r3, [pc, #4088]	; 16c94 <main@@Base+0x38d8>
   15c98:	add	r3, pc, r3
   15c9c:	bl	1eacc <main@@Base+0xb710>
   15ca0:	mov	r4, r0
   15ca4:	cmp	r0, r7
   15ca8:	cmpne	r4, r5
   15cac:	beq	13488 <main@@Base+0xcc>
   15cb0:	ldrb	r6, [fp, #-60]	; 0xffffffc4
   15cb4:	uxtb	r0, r6
   15cb8:	cmp	r0, #8
   15cbc:	bne	15ccc <main@@Base+0x2910>
   15cc0:	ldrb	r0, [r8, #8]
   15cc4:	tst	r0, #2
   15cc8:	beq	1c2cc <main@@Base+0x8f10>
   15ccc:	ldr	r0, [r8]
   15cd0:	mov	r1, #6
   15cd4:	b	16b40 <main@@Base+0x3784>
   15cd8:	mov	r0, r8
   15cdc:	mov	r1, r4
   15ce0:	mov	r2, r5
   15ce4:	mov	r3, #9
   15ce8:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   15cec:	b	155ac <main@@Base+0x21f0>
   15cf0:	cmp	r0, #34	; 0x22
   15cf4:	bne	1b848 <main@@Base+0x848c>
   15cf8:	add	r1, r9, #18
   15cfc:	sub	r0, r5, r1
   15d00:	cmp	r0, #2
   15d04:	blt	181cc <main@@Base+0x4e10>
   15d08:	ldrb	r0, [r1]
   15d0c:	cmp	r0, #32
   15d10:	bls	181b8 <main@@Base+0x4dfc>
   15d14:	mov	r4, r1
   15d18:	cmp	r4, r5
   15d1c:	bne	181e4 <main@@Base+0x4e28>
   15d20:	b	18228 <main@@Base+0x4e6c>
   15d24:	cmp	r0, #34	; 0x22
   15d28:	bne	1b848 <main@@Base+0x848c>
   15d2c:	add	r1, r9, #10
   15d30:	sub	r0, r5, r1
   15d34:	cmp	r0, #2
   15d38:	blt	18254 <main@@Base+0x4e98>
   15d3c:	ldrb	r0, [r1]
   15d40:	cmp	r0, #32
   15d44:	bls	18240 <main@@Base+0x4e84>
   15d48:	mov	r4, r1
   15d4c:	cmp	r4, r5
   15d50:	bne	1826c <main@@Base+0x4eb0>
   15d54:	b	182b0 <main@@Base+0x4ef4>
   15d58:	cmp	r0, #34	; 0x22
   15d5c:	bne	1b848 <main@@Base+0x848c>
   15d60:	add	r1, r9, #10
   15d64:	sub	r0, r5, r1
   15d68:	cmp	r0, #2
   15d6c:	blt	182dc <main@@Base+0x4f20>
   15d70:	ldrb	r0, [r1]
   15d74:	cmp	r0, #32
   15d78:	bls	182c8 <main@@Base+0x4f0c>
   15d7c:	mov	r4, r1
   15d80:	cmp	r4, r5
   15d84:	bne	182f4 <main@@Base+0x4f38>
   15d88:	b	18338 <main@@Base+0x4f7c>
   15d8c:	cmp	r0, #34	; 0x22
   15d90:	bne	15804 <main@@Base+0x2448>
   15d94:	add	r1, r9, #16
   15d98:	sub	r0, r5, r1
   15d9c:	cmp	r0, #2
   15da0:	blt	185fc <main@@Base+0x5240>
   15da4:	ldrb	r0, [r1]
   15da8:	cmp	r0, #32
   15dac:	bls	185e8 <main@@Base+0x522c>
   15db0:	mov	r4, r1
   15db4:	cmp	r4, r5
   15db8:	bne	18614 <main@@Base+0x5258>
   15dbc:	b	18654 <main@@Base+0x5298>
   15dc0:	bne	15dd0 <main@@Base+0x2a14>
   15dc4:	ldrb	r0, [r1, #2]!
   15dc8:	cmp	r0, #32
   15dcc:	bhi	15de4 <main@@Base+0x2a28>
   15dd0:	mov	r1, r2
   15dd4:	mov	r0, r8
   15dd8:	mov	r2, r5
   15ddc:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   15de0:	mov	r1, r0
   15de4:	cmp	r9, r1
   15de8:	beq	1494c <main@@Base+0x1590>
   15dec:	mov	r0, r8
   15df0:	mov	r2, r5
   15df4:	add	r3, sp, #52	; 0x34
   15df8:	bl	318d8 <flatcc_json_parser_build_string@@Base>
   15dfc:	mov	r4, r0
   15e00:	ldr	r0, [sp, #52]	; 0x34
   15e04:	cmp	r0, #0
   15e08:	beq	13488 <main@@Base+0xcc>
   15e0c:	ldr	r0, [r8]
   15e10:	mov	r1, #3
   15e14:	b	15ec8 <main@@Base+0x2b0c>
   15e18:	bne	15e28 <main@@Base+0x2a6c>
   15e1c:	ldrb	r0, [r4, #2]!
   15e20:	cmp	r0, #32
   15e24:	bhi	15e38 <main@@Base+0x2a7c>
   15e28:	mov	r0, r8
   15e2c:	mov	r2, r5
   15e30:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   15e34:	mov	r4, r0
   15e38:	cmp	r9, r4
   15e3c:	beq	1494c <main@@Base+0x1590>
   15e40:	ldr	r0, [r8]
   15e44:	mov	r1, #1
   15e48:	mov	r2, #1
   15e4c:	mvn	r3, #0
   15e50:	bl	2b6f4 <flatcc_builder_start_vector@@Base>
   15e54:	cmp	r0, #0
   15e58:	bne	13488 <main@@Base+0xcc>
   15e5c:	cmp	r4, r5
   15e60:	beq	15e94 <main@@Base+0x2ad8>
   15e64:	ldrb	r0, [r4]
   15e68:	cmp	r0, #91	; 0x5b
   15e6c:	bne	15e94 <main@@Base+0x2ad8>
   15e70:	add	r1, r4, #1
   15e74:	sub	r0, r5, r1
   15e78:	cmp	r0, #2
   15e7c:	blt	15eec <main@@Base+0x2b30>
   15e80:	ldrb	r0, [r1]
   15e84:	cmp	r0, #32
   15e88:	bls	15edc <main@@Base+0x2b20>
   15e8c:	mov	r4, r1
   15e90:	b	15efc <main@@Base+0x2b40>
   15e94:	mov	r0, r8
   15e98:	mov	r1, r4
   15e9c:	mov	r2, r5
   15ea0:	mov	r3, #22
   15ea4:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   15ea8:	mov	r4, r0
   15eac:	ldr	r0, [r8]
   15eb0:	bl	2c96c <flatcc_builder_end_vector@@Base>
   15eb4:	cmp	r0, #0
   15eb8:	str	r0, [sp, #52]	; 0x34
   15ebc:	beq	13488 <main@@Base+0xcc>
   15ec0:	ldr	r0, [r8]
   15ec4:	mov	r1, #30
   15ec8:	bl	2ceec <flatcc_builder_table_add_offset@@Base>
   15ecc:	cmp	r0, #0
   15ed0:	beq	13488 <main@@Base+0xcc>
   15ed4:	ldr	r1, [sp, #52]	; 0x34
   15ed8:	b	1673c <main@@Base+0x3380>
   15edc:	bne	15eec <main@@Base+0x2b30>
   15ee0:	ldrb	r0, [r4, #2]!
   15ee4:	cmp	r0, #32
   15ee8:	bhi	15efc <main@@Base+0x2b40>
   15eec:	mov	r0, r8
   15ef0:	mov	r2, r5
   15ef4:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   15ef8:	mov	r4, r0
   15efc:	cmp	r4, r5
   15f00:	mov	r6, r5
   15f04:	beq	15f18 <main@@Base+0x2b5c>
   15f08:	ldrb	r0, [r4]
   15f0c:	cmp	r0, #93	; 0x5d
   15f10:	beq	16130 <main@@Base+0x2d74>
   15f14:	mov	r6, r4
   15f18:	mov	r0, #0
   15f1c:	mov	r1, #1
   15f20:	strb	r0, [fp, #-60]	; 0xffffffc4
   15f24:	ldr	r0, [r8]
   15f28:	bl	2ab30 <flatcc_builder_extend_vector@@Base>
   15f2c:	cmp	r0, #0
   15f30:	beq	1d5b4 <main@@Base+0xa1f8>
   15f34:	mov	r7, r0
   15f38:	mov	r4, r6
   15f3c:	mov	r6, #0
   15f40:	cmp	r4, r5
   15f44:	str	r6, [fp, #-52]	; 0xffffffcc
   15f48:	str	r6, [fp, #-56]	; 0xffffffc8
   15f4c:	strb	r6, [fp, #-60]	; 0xffffffc4
   15f50:	str	r6, [sp, #56]	; 0x38
   15f54:	beq	15f9c <main@@Base+0x2be0>
   15f58:	sub	r0, fp, #56	; 0x38
   15f5c:	mov	r1, r4
   15f60:	mov	r2, r5
   15f64:	add	r3, sp, #56	; 0x38
   15f68:	str	r0, [sp]
   15f6c:	mov	r0, r8
   15f70:	bl	3132c <flatcc_json_parser_integer@@Base>
   15f74:	cmp	r0, r4
   15f78:	beq	15fac <main@@Base+0x2bf0>
   15f7c:	mov	r1, r0
   15f80:	ldr	r0, [sp, #56]	; 0x38
   15f84:	cmp	r0, #0
   15f88:	beq	15fbc <main@@Base+0x2c00>
   15f8c:	mov	r0, r8
   15f90:	mov	r2, r5
   15f94:	mov	r3, #8
   15f98:	b	15fdc <main@@Base+0x2c20>
   15f9c:	mov	r1, r5
   15fa0:	cmp	r4, r1
   15fa4:	bne	16024 <main@@Base+0x2c68>
   15fa8:	b	15fec <main@@Base+0x2c30>
   15fac:	mov	r1, r4
   15fb0:	cmp	r4, r1
   15fb4:	bne	16024 <main@@Base+0x2c68>
   15fb8:	b	15fec <main@@Base+0x2c30>
   15fbc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15fc0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   15fc4:	subs	r3, r0, #256	; 0x100
   15fc8:	sbcs	r2, r2, #0
   15fcc:	bcc	1610c <main@@Base+0x2d50>
   15fd0:	mov	r0, r8
   15fd4:	mov	r2, r5
   15fd8:	mov	r3, #7
   15fdc:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   15fe0:	mov	r1, r0
   15fe4:	cmp	r4, r1
   15fe8:	bne	16024 <main@@Base+0x2c68>
   15fec:	sub	r0, fp, #60	; 0x3c
   15ff0:	mov	r1, r4
   15ff4:	mov	r2, r5
   15ff8:	str	r0, [sp]
   15ffc:	mov	r0, r8
   16000:	ldr	r3, [pc, #4048]	; 16fd8 <main@@Base+0x3c1c>
   16004:	add	r3, pc, r3
   16008:	bl	1ed18 <main@@Base+0xb95c>
   1600c:	mov	r1, r0
   16010:	cmp	r0, r4
   16014:	beq	1d5c0 <main@@Base+0xa204>
   16018:	cmp	r1, r5
   1601c:	beq	1d5c0 <main@@Base+0xa204>
   16020:	ldrb	r6, [fp, #-60]	; 0xffffffc4
   16024:	sub	r0, r5, r1
   16028:	strb	r6, [r7]
   1602c:	cmp	r0, #2
   16030:	blt	16064 <main@@Base+0x2ca8>
   16034:	ldrb	r0, [r1]
   16038:	cmp	r0, #32
   1603c:	bls	16050 <main@@Base+0x2c94>
   16040:	mov	r4, r1
   16044:	cmp	r4, r5
   16048:	bne	1607c <main@@Base+0x2cc0>
   1604c:	b	16120 <main@@Base+0x2d64>
   16050:	bne	16064 <main@@Base+0x2ca8>
   16054:	mov	r4, r1
   16058:	ldrb	r0, [r4, #1]!
   1605c:	cmp	r0, #32
   16060:	bhi	16074 <main@@Base+0x2cb8>
   16064:	mov	r0, r8
   16068:	mov	r2, r5
   1606c:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   16070:	mov	r4, r0
   16074:	cmp	r4, r5
   16078:	beq	16120 <main@@Base+0x2d64>
   1607c:	ldrb	r0, [r4]
   16080:	cmp	r0, #44	; 0x2c
   16084:	bne	16128 <main@@Base+0x2d6c>
   16088:	add	r1, r4, #1
   1608c:	sub	r0, r5, r1
   16090:	cmp	r0, #2
   16094:	blt	160c4 <main@@Base+0x2d08>
   16098:	ldrb	r0, [r1]
   1609c:	cmp	r0, #32
   160a0:	bls	160b4 <main@@Base+0x2cf8>
   160a4:	mov	r4, r1
   160a8:	cmp	r4, r5
   160ac:	bne	160dc <main@@Base+0x2d20>
   160b0:	b	16174 <main@@Base+0x2db8>
   160b4:	bne	160c4 <main@@Base+0x2d08>
   160b8:	ldrb	r0, [r4, #2]!
   160bc:	cmp	r0, #32
   160c0:	bhi	160d4 <main@@Base+0x2d18>
   160c4:	mov	r0, r8
   160c8:	mov	r2, r5
   160cc:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   160d0:	mov	r4, r0
   160d4:	cmp	r4, r5
   160d8:	beq	16174 <main@@Base+0x2db8>
   160dc:	ldrb	r0, [r4]
   160e0:	cmp	r0, #93	; 0x5d
   160e4:	beq	16130 <main@@Base+0x2d74>
   160e8:	mov	r0, #0
   160ec:	mov	r1, #1
   160f0:	strb	r0, [fp, #-60]	; 0xffffffc4
   160f4:	ldr	r0, [r8]
   160f8:	bl	2ab30 <flatcc_builder_extend_vector@@Base>
   160fc:	mov	r7, r0
   16100:	cmp	r0, #0
   16104:	bne	15f3c <main@@Base+0x2b80>
   16108:	b	13488 <main@@Base+0xcc>
   1610c:	mov	r6, r0
   16110:	strb	r0, [fp, #-60]	; 0xffffffc4
   16114:	cmp	r4, r1
   16118:	bne	16024 <main@@Base+0x2c68>
   1611c:	b	15fec <main@@Base+0x2c30>
   16120:	mov	r4, r5
   16124:	b	15eac <main@@Base+0x2af0>
   16128:	cmp	r0, #93	; 0x5d
   1612c:	bne	16bfc <main@@Base+0x3840>
   16130:	add	r1, r4, #1
   16134:	sub	r0, r5, r1
   16138:	cmp	r0, #2
   1613c:	blt	16164 <main@@Base+0x2da8>
   16140:	ldrb	r0, [r1]
   16144:	cmp	r0, #32
   16148:	bls	16154 <main@@Base+0x2d98>
   1614c:	mov	r4, r1
   16150:	b	15eac <main@@Base+0x2af0>
   16154:	bne	16164 <main@@Base+0x2da8>
   16158:	ldrb	r0, [r4, #2]!
   1615c:	cmp	r0, #32
   16160:	bhi	15eac <main@@Base+0x2af0>
   16164:	mov	r0, r8
   16168:	mov	r2, r5
   1616c:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   16170:	b	15ea8 <main@@Base+0x2aec>
   16174:	mov	r0, r8
   16178:	mov	r1, r5
   1617c:	b	16c04 <main@@Base+0x3848>
   16180:	bne	16190 <main@@Base+0x2dd4>
   16184:	ldrb	r0, [r1, #2]!
   16188:	cmp	r0, #32
   1618c:	bhi	161a4 <main@@Base+0x2de8>
   16190:	ldr	r0, [sp, #40]	; 0x28
   16194:	mov	r1, r2
   16198:	mov	r2, r5
   1619c:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   161a0:	mov	r1, r0
   161a4:	cmp	r9, r1
   161a8:	beq	15174 <main@@Base+0x1db8>
   161ac:	ldr	r0, [sp, #48]	; 0x30
   161b0:	mov	r2, #8
   161b4:	mov	r3, #0
   161b8:	str	r2, [sp]
   161bc:	mov	r2, r5
   161c0:	str	r0, [sp, #4]
   161c4:	ldr	r0, [pc, #4040]	; 17194 <main@@Base+0x3dd8>
   161c8:	ldr	r8, [sp, #40]	; 0x28
   161cc:	add	r0, pc, r0
   161d0:	str	r0, [sp, #8]
   161d4:	mov	r0, r8
   161d8:	bl	31cb0 <flatcc_json_parser_union@@Base>
   161dc:	b	166e4 <main@@Base+0x3328>
   161e0:	bne	161f4 <main@@Base+0x2e38>
   161e4:	ldrb	r0, [r4, #2]!
   161e8:	mov	r7, r4
   161ec:	cmp	r0, #32
   161f0:	bhi	155b0 <main@@Base+0x21f4>
   161f4:	mov	r0, r8
   161f8:	mov	r2, r5
   161fc:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   16200:	b	155ac <main@@Base+0x21f0>
   16204:	cmp	r0, #34	; 0x22
   16208:	bne	1b848 <main@@Base+0x848c>
   1620c:	add	r1, r9, #21
   16210:	sub	r0, r5, r1
   16214:	cmp	r0, #2
   16218:	blt	18680 <main@@Base+0x52c4>
   1621c:	ldrb	r0, [r1]
   16220:	cmp	r0, #32
   16224:	bls	1866c <main@@Base+0x52b0>
   16228:	mov	r4, r1
   1622c:	cmp	r4, r5
   16230:	bne	18698 <main@@Base+0x52dc>
   16234:	b	186dc <main@@Base+0x5320>
   16238:	bne	1624c <main@@Base+0x2e90>
   1623c:	mov	r4, r1
   16240:	ldrb	r0, [r4, #1]!
   16244:	cmp	r0, #32
   16248:	bhi	1625c <main@@Base+0x2ea0>
   1624c:	mov	r0, r8
   16250:	mov	r2, r5
   16254:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   16258:	mov	r4, r0
   1625c:	cmp	r4, r5
   16260:	beq	1629c <main@@Base+0x2ee0>
   16264:	ldrb	r0, [r4]
   16268:	cmp	r0, #58	; 0x3a
   1626c:	bne	1629c <main@@Base+0x2ee0>
   16270:	add	r1, r4, #1
   16274:	sub	r0, r5, r1
   16278:	cmp	r0, #2
   1627c:	blt	18804 <main@@Base+0x5448>
   16280:	ldrb	r0, [r1]
   16284:	cmp	r0, #32
   16288:	bls	187f4 <main@@Base+0x5438>
   1628c:	mov	r4, r1
   16290:	cmp	r7, r4
   16294:	bne	1881c <main@@Base+0x5460>
   16298:	b	1b848 <main@@Base+0x848c>
   1629c:	mov	r0, r8
   162a0:	mov	r1, r4
   162a4:	mov	r2, r5
   162a8:	mov	r3, #4
   162ac:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   162b0:	b	18810 <main@@Base+0x5454>
   162b4:	cmp	r0, #34	; 0x22
   162b8:	bne	1c2b8 <main@@Base+0x8efc>
   162bc:	add	r1, r9, #18
   162c0:	sub	r0, r5, r1
   162c4:	cmp	r0, #2
   162c8:	blt	18708 <main@@Base+0x534c>
   162cc:	ldrb	r0, [r1]
   162d0:	cmp	r0, #32
   162d4:	bls	186f4 <main@@Base+0x5338>
   162d8:	mov	r7, r1
   162dc:	cmp	r7, r5
   162e0:	bne	18720 <main@@Base+0x5364>
   162e4:	b	18764 <main@@Base+0x53a8>
   162e8:	bne	162fc <main@@Base+0x2f40>
   162ec:	mov	r4, r1
   162f0:	ldrb	r0, [r4, #1]!
   162f4:	cmp	r0, #32
   162f8:	bhi	1630c <main@@Base+0x2f50>
   162fc:	mov	r0, r8
   16300:	mov	r2, r5
   16304:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   16308:	mov	r4, r0
   1630c:	cmp	r4, r5
   16310:	beq	1634c <main@@Base+0x2f90>
   16314:	ldrb	r0, [r4]
   16318:	cmp	r0, #58	; 0x3a
   1631c:	bne	1634c <main@@Base+0x2f90>
   16320:	add	r1, r4, #1
   16324:	sub	r0, r5, r1
   16328:	cmp	r0, #2
   1632c:	blt	18904 <main@@Base+0x5548>
   16330:	ldrb	r0, [r1]
   16334:	cmp	r0, #32
   16338:	bls	188f4 <main@@Base+0x5538>
   1633c:	mov	r4, r1
   16340:	cmp	r7, r4
   16344:	bne	1891c <main@@Base+0x5560>
   16348:	b	1b848 <main@@Base+0x848c>
   1634c:	mov	r0, r8
   16350:	mov	r1, r4
   16354:	mov	r2, r5
   16358:	mov	r3, #4
   1635c:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   16360:	b	18910 <main@@Base+0x5554>
   16364:	bne	16378 <main@@Base+0x2fbc>
   16368:	mov	r7, r1
   1636c:	ldrb	r0, [r7, #1]!
   16370:	cmp	r0, #32
   16374:	bhi	16388 <main@@Base+0x2fcc>
   16378:	mov	r0, r8
   1637c:	mov	r2, r5
   16380:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   16384:	mov	r7, r0
   16388:	cmp	r7, r5
   1638c:	beq	163c8 <main@@Base+0x300c>
   16390:	ldrb	r0, [r7]
   16394:	cmp	r0, #58	; 0x3a
   16398:	bne	163c8 <main@@Base+0x300c>
   1639c:	add	r1, r7, #1
   163a0:	sub	r0, r5, r1
   163a4:	cmp	r0, #2
   163a8:	blt	189ac <main@@Base+0x55f0>
   163ac:	ldrb	r0, [r1]
   163b0:	cmp	r0, #32
   163b4:	bls	1899c <main@@Base+0x55e0>
   163b8:	mov	r7, r1
   163bc:	cmp	sl, r7
   163c0:	bne	189c4 <main@@Base+0x5608>
   163c4:	b	15804 <main@@Base+0x2448>
   163c8:	mov	r0, r8
   163cc:	mov	r1, r7
   163d0:	mov	r2, r5
   163d4:	mov	r3, #4
   163d8:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   163dc:	b	189b8 <main@@Base+0x55fc>
   163e0:	bne	163f4 <main@@Base+0x3038>
   163e4:	mov	r7, r1
   163e8:	ldrb	r0, [r7, #1]!
   163ec:	cmp	r0, #32
   163f0:	bhi	16404 <main@@Base+0x3048>
   163f4:	mov	r0, r8
   163f8:	mov	r2, r5
   163fc:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   16400:	mov	r7, r0
   16404:	cmp	r7, r5
   16408:	beq	16444 <main@@Base+0x3088>
   1640c:	ldrb	r0, [r7]
   16410:	cmp	r0, #58	; 0x3a
   16414:	bne	16444 <main@@Base+0x3088>
   16418:	add	r1, r7, #1
   1641c:	sub	r0, r5, r1
   16420:	cmp	r0, #2
   16424:	blt	18ad4 <main@@Base+0x5718>
   16428:	ldrb	r0, [r1]
   1642c:	cmp	r0, #32
   16430:	bls	18ac4 <main@@Base+0x5708>
   16434:	mov	r7, r1
   16438:	cmp	r9, r7
   1643c:	bne	18aec <main@@Base+0x5730>
   16440:	b	1494c <main@@Base+0x1590>
   16444:	mov	r0, r8
   16448:	mov	r1, r7
   1644c:	mov	r2, r5
   16450:	mov	r3, #4
   16454:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   16458:	b	18ae0 <main@@Base+0x5724>
   1645c:	andeq	r0, r3, ip, asr ip
   16460:	bne	16474 <main@@Base+0x30b8>
   16464:	mov	r7, r1
   16468:	ldrb	r0, [r7, #1]!
   1646c:	cmp	r0, #32
   16470:	bhi	16484 <main@@Base+0x30c8>
   16474:	mov	r0, r8
   16478:	mov	r2, r5
   1647c:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   16480:	mov	r7, r0
   16484:	cmp	r7, r5
   16488:	beq	164c4 <main@@Base+0x3108>
   1648c:	ldrb	r0, [r7]
   16490:	cmp	r0, #58	; 0x3a
   16494:	bne	164c4 <main@@Base+0x3108>
   16498:	add	r1, r7, #1
   1649c:	sub	r0, r5, r1
   164a0:	cmp	r0, #2
   164a4:	blt	18c54 <main@@Base+0x5898>
   164a8:	ldrb	r0, [r1]
   164ac:	cmp	r0, #32
   164b0:	bls	18c44 <main@@Base+0x5888>
   164b4:	mov	r7, r1
   164b8:	cmp	r9, r7
   164bc:	bne	18c6c <main@@Base+0x58b0>
   164c0:	b	1494c <main@@Base+0x1590>
   164c4:	mov	r0, r8
   164c8:	mov	r1, r7
   164cc:	mov	r2, r5
   164d0:	mov	r3, #4
   164d4:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   164d8:	b	18c60 <main@@Base+0x58a4>
   164dc:	bne	164f0 <main@@Base+0x3134>
   164e0:	mov	r7, r1
   164e4:	ldrb	r0, [r7, #1]!
   164e8:	cmp	r0, #32
   164ec:	bhi	16500 <main@@Base+0x3144>
   164f0:	mov	r0, r8
   164f4:	mov	r2, r5
   164f8:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   164fc:	mov	r7, r0
   16500:	cmp	r7, r5
   16504:	beq	165ac <main@@Base+0x31f0>
   16508:	ldrb	r0, [r7]
   1650c:	cmp	r0, #58	; 0x3a
   16510:	bne	165ac <main@@Base+0x31f0>
   16514:	add	r1, r7, #1
   16518:	sub	r0, r5, r1
   1651c:	cmp	r0, #2
   16520:	blt	18cfc <main@@Base+0x5940>
   16524:	ldrb	r0, [r1]
   16528:	cmp	r0, #32
   1652c:	bls	18cec <main@@Base+0x5930>
   16530:	mov	r7, r1
   16534:	cmp	sl, r7
   16538:	bne	18d14 <main@@Base+0x5958>
   1653c:	add	r4, r9, #16
   16540:	mov	r1, #8
   16544:	sub	r0, r5, r4
   16548:	cmp	r0, #8
   1654c:	movcc	r1, r0
   16550:	sub	r1, r1, #1
   16554:	cmp	r1, #7
   16558:	bhi	1803c <main@@Base+0x4c80>
   1655c:	ldrb	r1, [r4]
   16560:	cmp	r1, #97	; 0x61
   16564:	bne	1803c <main@@Base+0x4c80>
   16568:	ldr	sl, [sp, #36]	; 0x24
   1656c:	cmp	r0, #2
   16570:	blt	1c2b8 <main@@Base+0x8efc>
   16574:	ldr	r2, [sp, #32]
   16578:	mov	r1, r9
   1657c:	ldrb	r0, [r1, #17]!
   16580:	ldr	r2, [r2]
   16584:	cmp	r2, #0
   16588:	beq	18078 <main@@Base+0x4cbc>
   1658c:	cmp	r0, #33	; 0x21
   16590:	bcc	1659c <main@@Base+0x31e0>
   16594:	cmp	r0, #58	; 0x3a
   16598:	bne	1c2b8 <main@@Base+0x8efc>
   1659c:	ldr	r0, [sp, #32]
   165a0:	mov	r2, #0
   165a4:	str	r2, [r0]
   165a8:	b	18084 <main@@Base+0x4cc8>
   165ac:	mov	r0, r8
   165b0:	mov	r1, r7
   165b4:	mov	r2, r5
   165b8:	mov	r3, #4
   165bc:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   165c0:	b	18d08 <main@@Base+0x594c>
   165c4:	bne	165d4 <main@@Base+0x3218>
   165c8:	ldrb	r0, [r7, #2]!
   165cc:	cmp	r0, #32
   165d0:	bhi	165e4 <main@@Base+0x3228>
   165d4:	ldr	r0, [sp, #40]	; 0x28
   165d8:	mov	r2, r5
   165dc:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   165e0:	mov	r7, r0
   165e4:	cmp	r9, r7
   165e8:	beq	16648 <main@@Base+0x328c>
   165ec:	ldr	r8, [sp, #40]	; 0x28
   165f0:	mov	r1, #4
   165f4:	mov	r2, #2
   165f8:	mvn	r3, #-1073741824	; 0xc0000000
   165fc:	ldr	r0, [r8]
   16600:	bl	2b6f4 <flatcc_builder_start_vector@@Base>
   16604:	cmp	r0, #0
   16608:	bne	1d5ac <main@@Base+0xa1f0>
   1660c:	cmp	r7, r5
   16610:	beq	166f0 <main@@Base+0x3334>
   16614:	ldrb	r0, [r7]
   16618:	cmp	r0, #91	; 0x5b
   1661c:	bne	166f0 <main@@Base+0x3334>
   16620:	ldr	sl, [sp, #36]	; 0x24
   16624:	add	r1, r7, #1
   16628:	sub	r0, r5, r1
   1662c:	cmp	r0, #2
   16630:	blt	16788 <main@@Base+0x33cc>
   16634:	ldrb	r0, [r1]
   16638:	cmp	r0, #32
   1663c:	bls	16778 <main@@Base+0x33bc>
   16640:	mov	r7, r1
   16644:	b	16798 <main@@Base+0x33dc>
   16648:	movw	r0, #31088	; 0x7970
   1664c:	movt	r0, #24436	; 0x5f74
   16650:	eor	r0, sl, r0
   16654:	orrs	r0, r0, r4
   16658:	bne	166d0 <main@@Base+0x3314>
   1665c:	add	r4, r9, #8
   16660:	ldr	r8, [sp, #40]	; 0x28
   16664:	ldr	sl, [sp, #36]	; 0x24
   16668:	mov	r1, #8
   1666c:	sub	r0, r5, r4
   16670:	cmp	r0, #8
   16674:	movcc	r1, r0
   16678:	sub	r1, r1, #1
   1667c:	cmp	r1, #7
   16680:	bhi	1c2b8 <main@@Base+0x8efc>
   16684:	ldrb	r1, [r4]
   16688:	cmp	r1, #101	; 0x65
   1668c:	bne	1c2b8 <main@@Base+0x8efc>
   16690:	cmp	r0, #2
   16694:	blt	1c2b8 <main@@Base+0x8efc>
   16698:	ldr	r2, [sp, #32]
   1669c:	mov	r1, r9
   166a0:	ldrb	r0, [r1, #9]!
   166a4:	ldr	r2, [r2]
   166a8:	cmp	r2, #0
   166ac:	beq	16744 <main@@Base+0x3388>
   166b0:	cmp	r0, #33	; 0x21
   166b4:	bcc	166c0 <main@@Base+0x3304>
   166b8:	cmp	r0, #58	; 0x3a
   166bc:	bne	1c2b8 <main@@Base+0x8efc>
   166c0:	ldr	r0, [sp, #32]
   166c4:	mov	r2, #0
   166c8:	str	r2, [r0]
   166cc:	b	16750 <main@@Base+0x3394>
   166d0:	ldr	r8, [sp, #40]	; 0x28
   166d4:	mov	r0, r8
   166d8:	mov	r1, r9
   166dc:	mov	r2, r5
   166e0:	bl	2f87c <flatcc_json_parser_unmatched_symbol@@Base>
   166e4:	mov	r4, r0
   166e8:	ldr	sl, [sp, #36]	; 0x24
   166ec:	b	1c2cc <main@@Base+0x8f10>
   166f0:	mov	r0, r8
   166f4:	mov	r1, r7
   166f8:	mov	r2, r5
   166fc:	mov	r3, #22
   16700:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   16704:	ldr	sl, [sp, #36]	; 0x24
   16708:	mov	r7, r0
   1670c:	ldr	r0, [r8]
   16710:	bl	2c96c <flatcc_builder_end_vector@@Base>
   16714:	cmp	r0, #0
   16718:	str	r0, [sp, #52]	; 0x34
   1671c:	beq	1d5ac <main@@Base+0xa1f0>
   16720:	ldr	r0, [r8]
   16724:	mov	r1, #31
   16728:	bl	2ceec <flatcc_builder_table_add_offset@@Base>
   1672c:	cmp	r0, #0
   16730:	beq	1d5ac <main@@Base+0xa1f0>
   16734:	ldr	r1, [sp, #52]	; 0x34
   16738:	mov	r4, r7
   1673c:	str	r1, [r0]
   16740:	b	1c2cc <main@@Base+0x8f10>
   16744:	cmp	r0, #34	; 0x22
   16748:	bne	1c2b8 <main@@Base+0x8efc>
   1674c:	add	r1, r9, #10
   16750:	sub	r0, r5, r1
   16754:	cmp	r0, #2
   16758:	blt	16954 <main@@Base+0x3598>
   1675c:	ldrb	r0, [r1]
   16760:	cmp	r0, #32
   16764:	bls	16940 <main@@Base+0x3584>
   16768:	mov	r2, r1
   1676c:	cmp	r2, r5
   16770:	bne	1696c <main@@Base+0x35b0>
   16774:	b	169a4 <main@@Base+0x35e8>
   16778:	bne	16788 <main@@Base+0x33cc>
   1677c:	ldrb	r0, [r7, #2]!
   16780:	cmp	r0, #32
   16784:	bhi	16798 <main@@Base+0x33dc>
   16788:	mov	r0, r8
   1678c:	mov	r2, r5
   16790:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   16794:	mov	r7, r0
   16798:	cmp	r7, r5
   1679c:	mov	r4, r5
   167a0:	beq	167e4 <main@@Base+0x3428>
   167a4:	ldrb	r0, [r7]
   167a8:	cmp	r0, #93	; 0x5d
   167ac:	bne	167e0 <main@@Base+0x3424>
   167b0:	add	r1, r7, #1
   167b4:	sub	r0, r5, r1
   167b8:	cmp	r0, #2
   167bc:	blt	1a288 <main@@Base+0x6ecc>
   167c0:	ldrb	r0, [r1]
   167c4:	cmp	r0, #32
   167c8:	bhi	168ec <main@@Base+0x3530>
   167cc:	bne	1a288 <main@@Base+0x6ecc>
   167d0:	ldrb	r0, [r7, #2]!
   167d4:	cmp	r0, #32
   167d8:	bls	1a288 <main@@Base+0x6ecc>
   167dc:	b	1670c <main@@Base+0x3350>
   167e0:	mov	r4, r7
   167e4:	ldr	r0, [r8]
   167e8:	mov	r1, #1
   167ec:	bl	2ab30 <flatcc_builder_extend_vector@@Base>
   167f0:	mov	r3, r0
   167f4:	cmp	r0, #0
   167f8:	beq	13488 <main@@Base+0xcc>
   167fc:	mov	r0, r8
   16800:	mov	r1, r4
   16804:	mov	r2, r5
   16808:	bl	1f1ac <main@@Base+0xbdf0>
   1680c:	mov	r1, r0
   16810:	sub	r0, r5, r0
   16814:	cmp	r0, #2
   16818:	blt	1684c <main@@Base+0x3490>
   1681c:	ldrb	r0, [r1]
   16820:	cmp	r0, #32
   16824:	bls	16838 <main@@Base+0x347c>
   16828:	mov	r4, r1
   1682c:	cmp	r4, r5
   16830:	bne	16864 <main@@Base+0x34a8>
   16834:	b	168f4 <main@@Base+0x3538>
   16838:	bne	1684c <main@@Base+0x3490>
   1683c:	mov	r4, r1
   16840:	ldrb	r0, [r4, #1]!
   16844:	cmp	r0, #32
   16848:	bhi	1685c <main@@Base+0x34a0>
   1684c:	mov	r0, r8
   16850:	mov	r2, r5
   16854:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   16858:	mov	r4, r0
   1685c:	cmp	r4, r5
   16860:	beq	168f4 <main@@Base+0x3538>
   16864:	ldrb	r0, [r4]
   16868:	cmp	r0, #44	; 0x2c
   1686c:	bne	168fc <main@@Base+0x3540>
   16870:	add	r1, r4, #1
   16874:	sub	r0, r5, r1
   16878:	cmp	r0, #2
   1687c:	blt	168ac <main@@Base+0x34f0>
   16880:	ldrb	r0, [r1]
   16884:	cmp	r0, #32
   16888:	bls	1689c <main@@Base+0x34e0>
   1688c:	mov	r4, r1
   16890:	cmp	r4, r5
   16894:	bne	168c4 <main@@Base+0x3508>
   16898:	b	16934 <main@@Base+0x3578>
   1689c:	bne	168ac <main@@Base+0x34f0>
   168a0:	ldrb	r0, [r4, #2]!
   168a4:	cmp	r0, #32
   168a8:	bhi	168bc <main@@Base+0x3500>
   168ac:	mov	r0, r8
   168b0:	mov	r2, r5
   168b4:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   168b8:	mov	r4, r0
   168bc:	cmp	r4, r5
   168c0:	beq	16934 <main@@Base+0x3578>
   168c4:	ldrb	r0, [r4]
   168c8:	cmp	r0, #93	; 0x5d
   168cc:	bne	167e4 <main@@Base+0x3428>
   168d0:	add	r1, r4, #1
   168d4:	sub	r0, r5, r1
   168d8:	cmp	r0, #2
   168dc:	blt	1a288 <main@@Base+0x6ecc>
   168e0:	ldrb	r0, [r1]
   168e4:	cmp	r0, #32
   168e8:	bls	18e4c <main@@Base+0x5a90>
   168ec:	mov	r7, r1
   168f0:	b	1670c <main@@Base+0x3350>
   168f4:	mov	r7, r5
   168f8:	b	1670c <main@@Base+0x3350>
   168fc:	cmp	r0, #93	; 0x5d
   16900:	bne	18060 <main@@Base+0x4ca4>
   16904:	add	r1, r4, #1
   16908:	sub	r0, r5, r1
   1690c:	cmp	r0, #2
   16910:	blt	1a288 <main@@Base+0x6ecc>
   16914:	ldrb	r0, [r1]
   16918:	cmp	r0, #32
   1691c:	bls	1a268 <main@@Base+0x6eac>
   16920:	ldr	r5, [sp, #44]	; 0x2c
   16924:	ldr	r8, [sp, #40]	; 0x28
   16928:	ldr	sl, [sp, #36]	; 0x24
   1692c:	mov	r7, r1
   16930:	b	1670c <main@@Base+0x3350>
   16934:	mov	r0, r8
   16938:	mov	r1, r5
   1693c:	b	18068 <main@@Base+0x4cac>
   16940:	bne	16954 <main@@Base+0x3598>
   16944:	mov	r2, r1
   16948:	ldrb	r0, [r2, #1]!
   1694c:	cmp	r0, #32
   16950:	bhi	16964 <main@@Base+0x35a8>
   16954:	mov	r0, r8
   16958:	mov	r2, r5
   1695c:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   16960:	mov	r2, r0
   16964:	cmp	r2, r5
   16968:	beq	169a4 <main@@Base+0x35e8>
   1696c:	ldrb	r0, [r2]
   16970:	cmp	r0, #58	; 0x3a
   16974:	bne	169a4 <main@@Base+0x35e8>
   16978:	add	r1, r2, #1
   1697c:	sub	r0, r5, r1
   16980:	cmp	r0, #2
   16984:	blt	18e64 <main@@Base+0x5aa8>
   16988:	ldrb	r0, [r1]
   1698c:	cmp	r0, #32
   16990:	bls	18e54 <main@@Base+0x5a98>
   16994:	mov	r2, r1
   16998:	cmp	r4, r2
   1699c:	bne	18e7c <main@@Base+0x5ac0>
   169a0:	b	1c2b8 <main@@Base+0x8efc>
   169a4:	mov	r1, r2
   169a8:	mov	r0, r8
   169ac:	mov	r2, r5
   169b0:	mov	r3, #4
   169b4:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   169b8:	b	18e70 <main@@Base+0x5ab4>
   169bc:	bne	169cc <main@@Base+0x3610>
   169c0:	ldrb	r0, [r7, #2]!
   169c4:	cmp	r0, #32
   169c8:	bhi	169dc <main@@Base+0x3620>
   169cc:	mov	r0, r8
   169d0:	mov	r2, r5
   169d4:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   169d8:	mov	r7, r0
   169dc:	cmp	r9, r7
   169e0:	beq	1494c <main@@Base+0x1590>
   169e4:	sub	r4, r5, r7
   169e8:	mov	r0, #0
   169ec:	cmp	r4, #4
   169f0:	strb	r0, [fp, #-60]	; 0xffffffc4
   169f4:	blt	16a38 <main@@Base+0x367c>
   169f8:	ldr	r1, [pc, #4088]	; 179f8 <main@@Base+0x463c>
   169fc:	mov	r0, r7
   16a00:	mov	r2, #4
   16a04:	add	r1, pc, r1
   16a08:	bl	12b2c <bcmp@plt>
   16a0c:	cmp	r0, #0
   16a10:	beq	16a9c <main@@Base+0x36e0>
   16a14:	cmp	r4, #5
   16a18:	blt	16a38 <main@@Base+0x367c>
   16a1c:	ldr	r1, [pc, #4056]	; 179fc <main@@Base+0x4640>
   16a20:	mov	r0, r7
   16a24:	mov	r2, #5
   16a28:	add	r1, pc, r1
   16a2c:	bl	12b2c <bcmp@plt>
   16a30:	cmp	r0, #0
   16a34:	beq	16b5c <main@@Base+0x37a0>
   16a38:	mov	r6, #0
   16a3c:	cmp	r7, r5
   16a40:	str	r6, [fp, #-52]	; 0xffffffcc
   16a44:	str	r6, [fp, #-56]	; 0xffffffc8
   16a48:	str	r6, [sp, #56]	; 0x38
   16a4c:	beq	16a94 <main@@Base+0x36d8>
   16a50:	sub	r0, fp, #56	; 0x38
   16a54:	mov	r1, r7
   16a58:	mov	r2, r5
   16a5c:	add	r3, sp, #56	; 0x38
   16a60:	str	r0, [sp]
   16a64:	mov	r0, r8
   16a68:	bl	3132c <flatcc_json_parser_integer@@Base>
   16a6c:	cmp	r0, r7
   16a70:	beq	16aa8 <main@@Base+0x36ec>
   16a74:	mov	r1, r0
   16a78:	ldr	r0, [sp, #56]	; 0x38
   16a7c:	cmp	r0, #0
   16a80:	beq	16ab0 <main@@Base+0x36f4>
   16a84:	mov	r0, r8
   16a88:	mov	r2, r5
   16a8c:	mov	r3, #8
   16a90:	b	16ad0 <main@@Base+0x3714>
   16a94:	mov	r4, r5
   16a98:	b	16ad8 <main@@Base+0x371c>
   16a9c:	mov	r6, #1
   16aa0:	add	r4, r7, #4
   16aa4:	b	16ae4 <main@@Base+0x3728>
   16aa8:	mov	r4, r7
   16aac:	b	16ad8 <main@@Base+0x371c>
   16ab0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   16ab4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   16ab8:	subs	r3, r0, #256	; 0x100
   16abc:	sbcs	r2, r2, #0
   16ac0:	bcc	16b68 <main@@Base+0x37ac>
   16ac4:	mov	r0, r8
   16ac8:	mov	r2, r5
   16acc:	mov	r3, #7
   16ad0:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   16ad4:	mov	r4, r0
   16ad8:	uxtb	r6, r6
   16adc:	cmp	r6, #0
   16ae0:	movwne	r6, #1
   16ae4:	strb	r6, [fp, #-60]	; 0xffffffc4
   16ae8:	cmp	r7, r4
   16aec:	bne	16b24 <main@@Base+0x3768>
   16af0:	sub	r0, fp, #60	; 0x3c
   16af4:	mov	r1, r7
   16af8:	mov	r2, r5
   16afc:	str	r0, [sp]
   16b00:	mov	r0, r8
   16b04:	ldr	r3, [pc, #3984]	; 17a9c <main@@Base+0x46e0>
   16b08:	add	r3, pc, r3
   16b0c:	bl	22f80 <main@@Base+0xfbc4>
   16b10:	mov	r4, r0
   16b14:	cmp	r0, r7
   16b18:	cmpne	r4, r5
   16b1c:	beq	13488 <main@@Base+0xcc>
   16b20:	ldrb	r6, [fp, #-60]	; 0xffffffc4
   16b24:	cmp	r6, #1
   16b28:	bne	16b38 <main@@Base+0x377c>
   16b2c:	ldrb	r0, [r8, #8]
   16b30:	tst	r0, #2
   16b34:	beq	1c2cc <main@@Base+0x8f10>
   16b38:	ldr	r0, [r8]
   16b3c:	mov	r1, #15
   16b40:	mov	r2, #1
   16b44:	mov	r3, #1
   16b48:	bl	2d0a0 <flatcc_builder_table_add@@Base>
   16b4c:	cmp	r0, #0
   16b50:	beq	13488 <main@@Base+0xcc>
   16b54:	strb	r6, [r0]
   16b58:	b	1c2cc <main@@Base+0x8f10>
   16b5c:	mov	r6, #0
   16b60:	add	r4, r7, #5
   16b64:	b	16ae4 <main@@Base+0x3728>
   16b68:	mov	r6, r0
   16b6c:	mov	r4, r1
   16b70:	b	16ad8 <main@@Base+0x371c>
   16b74:	bne	16b88 <main@@Base+0x37cc>
   16b78:	mov	r4, r1
   16b7c:	ldrb	r0, [r4, #1]!
   16b80:	cmp	r0, #32
   16b84:	bhi	16b98 <main@@Base+0x37dc>
   16b88:	ldr	r0, [sp, #40]	; 0x28
   16b8c:	mov	r2, r5
   16b90:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   16b94:	mov	r4, r0
   16b98:	cmp	r4, r5
   16b9c:	beq	16be4 <main@@Base+0x3828>
   16ba0:	ldrb	r0, [r4]
   16ba4:	cmp	r0, #58	; 0x3a
   16ba8:	bne	16be4 <main@@Base+0x3828>
   16bac:	add	r1, r4, #1
   16bb0:	sub	r0, r5, r1
   16bb4:	cmp	r0, #2
   16bb8:	blt	18ecc <main@@Base+0x5b10>
   16bbc:	ldrb	r0, [r1]
   16bc0:	cmp	r0, #32
   16bc4:	bls	18ebc <main@@Base+0x5b00>
   16bc8:	mov	r4, r1
   16bcc:	cmp	r8, r4
   16bd0:	bne	18ee4 <main@@Base+0x5b28>
   16bd4:	ldr	r0, [sp, #40]	; 0x28
   16bd8:	mov	r1, r8
   16bdc:	mov	r8, r0
   16be0:	b	1c2c0 <main@@Base+0x8f04>
   16be4:	ldr	r0, [sp, #40]	; 0x28
   16be8:	mov	r1, r4
   16bec:	mov	r2, r5
   16bf0:	mov	r3, #4
   16bf4:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   16bf8:	b	18ed8 <main@@Base+0x5b1c>
   16bfc:	mov	r0, r8
   16c00:	mov	r1, r4
   16c04:	mov	r2, r5
   16c08:	mov	r3, #9
   16c0c:	b	15ea4 <main@@Base+0x2ae8>
   16c10:	bne	16c20 <main@@Base+0x3864>
   16c14:	ldrb	r0, [r4, #2]!
   16c18:	cmp	r0, #32
   16c1c:	bhi	16c30 <main@@Base+0x3874>
   16c20:	mov	r0, r6
   16c24:	mov	r2, r5
   16c28:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   16c2c:	mov	r4, r0
   16c30:	cmp	sl, r4
   16c34:	beq	15800 <main@@Base+0x2444>
   16c38:	ldr	r8, [sp, #40]	; 0x28
   16c3c:	mov	r1, #1
   16c40:	mov	r2, #1
   16c44:	mvn	r3, #0
   16c48:	ldr	r0, [r8]
   16c4c:	bl	2b6f4 <flatcc_builder_start_vector@@Base>
   16c50:	cmp	r0, #0
   16c54:	bne	13488 <main@@Base+0xcc>
   16c58:	ldr	sl, [sp, #36]	; 0x24
   16c5c:	cmp	r4, r5
   16c60:	beq	16c98 <main@@Base+0x38dc>
   16c64:	ldrb	r0, [r4]
   16c68:	cmp	r0, #91	; 0x5b
   16c6c:	bne	16c98 <main@@Base+0x38dc>
   16c70:	add	r1, r4, #1
   16c74:	sub	r0, r5, r1
   16c78:	cmp	r0, #2
   16c7c:	blt	18360 <main@@Base+0x4fa4>
   16c80:	ldrb	r0, [r1]
   16c84:	cmp	r0, #32
   16c88:	bls	18350 <main@@Base+0x4f94>
   16c8c:	mov	r4, r1
   16c90:	b	18370 <main@@Base+0x4fb4>
   16c94:	strdeq	r0, [r3], -ip
   16c98:	mov	r0, r8
   16c9c:	mov	r1, r4
   16ca0:	mov	r2, r5
   16ca4:	mov	r3, #22
   16ca8:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   16cac:	mov	r4, r0
   16cb0:	ldr	r0, [r8]
   16cb4:	bl	2c96c <flatcc_builder_end_vector@@Base>
   16cb8:	cmp	r0, #0
   16cbc:	str	r0, [sp, #52]	; 0x34
   16cc0:	beq	13488 <main@@Base+0xcc>
   16cc4:	ldr	r0, [r8]
   16cc8:	mov	r1, #24
   16ccc:	b	15ec8 <main@@Base+0x2b0c>
   16cd0:	cmp	r0, #34	; 0x22
   16cd4:	bne	1b848 <main@@Base+0x848c>
   16cd8:	add	r1, r9, #18
   16cdc:	sub	r0, r5, r1
   16ce0:	cmp	r0, #2
   16ce4:	blt	19014 <main@@Base+0x5c58>
   16ce8:	ldrb	r0, [r1]
   16cec:	cmp	r0, #32
   16cf0:	bls	19000 <main@@Base+0x5c44>
   16cf4:	mov	r9, r1
   16cf8:	cmp	r9, r5
   16cfc:	bne	1902c <main@@Base+0x5c70>
   16d00:	b	19070 <main@@Base+0x5cb4>
   16d04:	bne	16d14 <main@@Base+0x3958>
   16d08:	ldrb	r0, [r7, #2]!
   16d0c:	cmp	r0, #32
   16d10:	bhi	16d24 <main@@Base+0x3968>
   16d14:	mov	r0, r8
   16d18:	mov	r2, r5
   16d1c:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   16d20:	mov	r7, r0
   16d24:	cmp	r9, r7
   16d28:	beq	1494c <main@@Base+0x1590>
   16d2c:	mov	r6, #0
   16d30:	cmp	r7, r5
   16d34:	str	r6, [fp, #-52]	; 0xffffffcc
   16d38:	str	r6, [fp, #-56]	; 0xffffffc8
   16d3c:	strh	r6, [fp, #-60]	; 0xffffffc4
   16d40:	str	r6, [sp, #56]	; 0x38
   16d44:	beq	16da8 <main@@Base+0x39ec>
   16d48:	sub	r0, fp, #56	; 0x38
   16d4c:	mov	r1, r7
   16d50:	mov	r2, r5
   16d54:	add	r3, sp, #56	; 0x38
   16d58:	str	r0, [sp]
   16d5c:	mov	r0, r8
   16d60:	bl	3132c <flatcc_json_parser_integer@@Base>
   16d64:	cmp	r0, r7
   16d68:	beq	16db8 <main@@Base+0x39fc>
   16d6c:	ldr	r2, [sp, #56]	; 0x38
   16d70:	mov	r4, r0
   16d74:	ldr	r0, [fp, #-56]	; 0xffffffc8
   16d78:	ldr	r1, [fp, #-52]	; 0xffffffcc
   16d7c:	cmp	r2, #0
   16d80:	beq	16dc8 <main@@Base+0x3a0c>
   16d84:	movw	r2, #32769	; 0x8001
   16d88:	subs	r2, r0, r2
   16d8c:	sbcs	r1, r1, #0
   16d90:	bcc	16df8 <main@@Base+0x3a3c>
   16d94:	mov	r0, r8
   16d98:	mov	r1, r4
   16d9c:	mov	r2, r5
   16da0:	mov	r3, #8
   16da4:	b	16de4 <main@@Base+0x3a28>
   16da8:	mov	r4, r5
   16dac:	cmp	r7, r4
   16db0:	bne	16e44 <main@@Base+0x3a88>
   16db4:	b	16e10 <main@@Base+0x3a54>
   16db8:	mov	r4, r7
   16dbc:	cmp	r7, r4
   16dc0:	bne	16e44 <main@@Base+0x3a88>
   16dc4:	b	16e10 <main@@Base+0x3a54>
   16dc8:	subs	r2, r0, #32768	; 0x8000
   16dcc:	sbcs	r1, r1, #0
   16dd0:	bcc	16e00 <main@@Base+0x3a44>
   16dd4:	mov	r0, r8
   16dd8:	mov	r1, r4
   16ddc:	mov	r2, r5
   16de0:	mov	r3, #7
   16de4:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   16de8:	mov	r4, r0
   16dec:	cmp	r7, r4
   16df0:	bne	16e44 <main@@Base+0x3a88>
   16df4:	b	16e10 <main@@Base+0x3a54>
   16df8:	rsb	r6, r0, #0
   16dfc:	b	16e04 <main@@Base+0x3a48>
   16e00:	mov	r6, r0
   16e04:	strh	r6, [fp, #-60]	; 0xffffffc4
   16e08:	cmp	r7, r4
   16e0c:	bne	16e44 <main@@Base+0x3a88>
   16e10:	sub	r0, fp, #60	; 0x3c
   16e14:	mov	r1, r7
   16e18:	mov	r2, r5
   16e1c:	str	r0, [sp]
   16e20:	mov	r0, r8
   16e24:	ldr	r3, [pc, #4028]	; 17de8 <main@@Base+0x4a2c>
   16e28:	add	r3, pc, r3
   16e2c:	bl	1ef5c <main@@Base+0xbba0>
   16e30:	mov	r4, r0
   16e34:	cmp	r0, r7
   16e38:	cmpne	r4, r5
   16e3c:	beq	13488 <main@@Base+0xcc>
   16e40:	ldrh	r6, [fp, #-60]	; 0xffffffc4
   16e44:	uxth	r0, r6
   16e48:	cmp	r0, #100	; 0x64
   16e4c:	bne	16e5c <main@@Base+0x3aa0>
   16e50:	ldrb	r0, [r8, #8]
   16e54:	tst	r0, #2
   16e58:	beq	1c2cc <main@@Base+0x8f10>
   16e5c:	ldr	r0, [r8]
   16e60:	mov	r1, #2
   16e64:	mov	r2, #2
   16e68:	mov	r3, #2
   16e6c:	bl	2d0a0 <flatcc_builder_table_add@@Base>
   16e70:	cmp	r0, #0
   16e74:	bne	18c3c <main@@Base+0x5880>
   16e78:	b	13488 <main@@Base+0xcc>
   16e7c:	bne	16e8c <main@@Base+0x3ad0>
   16e80:	ldrb	r0, [r4, #2]!
   16e84:	cmp	r0, #32
   16e88:	bhi	16e9c <main@@Base+0x3ae0>
   16e8c:	mov	r0, r8
   16e90:	mov	r2, r5
   16e94:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   16e98:	mov	r4, r0
   16e9c:	cmp	r9, r4
   16ea0:	beq	1494c <main@@Base+0x1590>
   16ea4:	ldr	r0, [r8]
   16ea8:	mov	r1, #0
   16eac:	mov	r2, #32
   16eb0:	mov	r3, #16
   16eb4:	bl	2d0a0 <flatcc_builder_table_add@@Base>
   16eb8:	cmp	r0, #0
   16ebc:	beq	13488 <main@@Base+0xcc>
   16ec0:	cmp	r4, r5
   16ec4:	beq	16efc <main@@Base+0x3b40>
   16ec8:	mov	r9, r0
   16ecc:	ldrb	r0, [r4]
   16ed0:	cmp	r0, #123	; 0x7b
   16ed4:	bne	16efc <main@@Base+0x3b40>
   16ed8:	add	r1, r4, #1
   16edc:	sub	r0, r5, r1
   16ee0:	cmp	r0, #2
   16ee4:	blt	16f24 <main@@Base+0x3b68>
   16ee8:	ldrb	r0, [r1]
   16eec:	cmp	r0, #32
   16ef0:	bls	16f14 <main@@Base+0x3b58>
   16ef4:	mov	r4, r1
   16ef8:	b	16f34 <main@@Base+0x3b78>
   16efc:	mov	r0, r8
   16f00:	mov	r1, r4
   16f04:	mov	r2, r5
   16f08:	mov	r3, #21
   16f0c:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   16f10:	b	1c2c8 <main@@Base+0x8f0c>
   16f14:	bne	16f24 <main@@Base+0x3b68>
   16f18:	ldrb	r0, [r4, #2]!
   16f1c:	cmp	r0, #32
   16f20:	bhi	16f34 <main@@Base+0x3b78>
   16f24:	mov	r0, r8
   16f28:	mov	r2, r5
   16f2c:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   16f30:	mov	r4, r0
   16f34:	cmp	r4, r5
   16f38:	mov	r2, r5
   16f3c:	beq	16f80 <main@@Base+0x3bc4>
   16f40:	ldrb	r0, [r4]
   16f44:	cmp	r0, #125	; 0x7d
   16f48:	bne	16f7c <main@@Base+0x3bc0>
   16f4c:	add	r1, r4, #1
   16f50:	sub	r0, r5, r1
   16f54:	cmp	r0, #2
   16f58:	blt	1ad38 <main@@Base+0x797c>
   16f5c:	ldrb	r0, [r1]
   16f60:	cmp	r0, #32
   16f64:	bhi	17cd4 <main@@Base+0x4918>
   16f68:	bne	1ad38 <main@@Base+0x797c>
   16f6c:	ldrb	r0, [r4, #2]!
   16f70:	cmp	r0, #32
   16f74:	bhi	1c2cc <main@@Base+0x8f10>
   16f78:	b	1ad38 <main@@Base+0x797c>
   16f7c:	mov	r2, r4
   16f80:	add	r0, r9, #26
   16f84:	str	r9, [sp, #24]
   16f88:	str	r0, [sp, #20]
   16f8c:	cmp	r2, r5
   16f90:	mov	sl, r5
   16f94:	beq	16fec <main@@Base+0x3c30>
   16f98:	ldrb	r0, [r2]
   16f9c:	cmp	r0, #46	; 0x2e
   16fa0:	beq	16fbc <main@@Base+0x3c00>
   16fa4:	cmp	r0, #34	; 0x22
   16fa8:	bne	16fdc <main@@Base+0x3c20>
   16fac:	ldr	r0, [sp, #32]
   16fb0:	mov	r1, #0
   16fb4:	add	sl, r2, #1
   16fb8:	b	16fe8 <main@@Base+0x3c2c>
   16fbc:	mov	r1, r2
   16fc0:	mov	r0, r8
   16fc4:	mov	r2, r5
   16fc8:	mov	r3, #5
   16fcc:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   16fd0:	mov	sl, r0
   16fd4:	b	16fec <main@@Base+0x3c30>
   16fd8:	andeq	r0, r3, r0, lsr #1
   16fdc:	ldr	r0, [sp, #32]
   16fe0:	mov	r1, #1
   16fe4:	mov	sl, r2
   16fe8:	str	r1, [r0]
   16fec:	sub	ip, r5, sl
   16ff0:	mov	r0, #8
   16ff4:	cmp	ip, #8
   16ff8:	movcc	r0, ip
   16ffc:	sub	r0, r0, #1
   17000:	cmp	r0, #7
   17004:	bhi	17be0 <main@@Base+0x4824>
   17008:	add	r2, pc, #36	; 0x24
   1700c:	mov	r1, #0
   17010:	mov	lr, #0
   17014:	mov	r8, #0
   17018:	mov	r7, #0
   1701c:	mov	r3, #0
   17020:	mov	r6, #0
   17024:	mov	r5, #0
   17028:	ldr	r4, [r2, r0, lsl #2]
   1702c:	mov	r0, #0
   17030:	add	pc, r2, r4
   17034:	andeq	r0, r0, r4, rrx
   17038:	andeq	r0, r0, ip, asr r0
   1703c:	andeq	r0, r0, r4, asr r0
   17040:	andeq	r0, r0, ip, asr #32
   17044:	andeq	r0, r0, r0, asr #32
   17048:	andeq	r0, r0, r4, lsr r0
   1704c:	andeq	r0, r0, r4, lsr #32
   17050:	andeq	r0, r0, r0, lsr #32
   17054:	ldrb	lr, [sl, #7]
   17058:	ldrb	r0, [sl, #6]
   1705c:	mov	r8, r1
   17060:	orr	r0, lr, r0, lsl #8
   17064:	mov	r1, r0
   17068:	ldrb	r0, [sl, #5]
   1706c:	mov	r7, r8
   17070:	orr	r1, r1, r0, lsl #16
   17074:	ldrb	r0, [sl, #4]
   17078:	mov	r3, r7
   1707c:	orr	r1, r1, r0, lsl #24
   17080:	ldrb	r0, [sl, #3]
   17084:	orr	r6, r0, r3
   17088:	ldrb	r0, [sl, #2]
   1708c:	orr	r5, r6, r0, lsl #8
   17090:	ldrb	r0, [sl, #1]
   17094:	orr	r0, r5, r0, lsl #16
   17098:	ldrb	r2, [sl]
   1709c:	movw	r3, #29556	; 0x7374
   170a0:	movt	r3, #29797	; 0x7465
   170a4:	orr	r2, r0, r2, lsl #24
   170a8:	mvn	r0, #-855638016	; 0xcd000000
   170ac:	subs	r0, r0, r1
   170b0:	sbcs	r0, r3, r2
   170b4:	bcc	17128 <main@@Base+0x3d6c>
   170b8:	ldr	r5, [sp, #44]	; 0x2c
   170bc:	ldr	r8, [sp, #40]	; 0x28
   170c0:	and	r1, r1, #-16777216	; 0xff000000
   170c4:	eor	r0, r2, r3
   170c8:	eor	r2, r1, #822083584	; 0x31000000
   170cc:	orrs	r2, r2, r0
   170d0:	beq	171f8 <main@@Base+0x3e3c>
   170d4:	eor	r1, r1, #838860800	; 0x32000000
   170d8:	orrs	r0, r1, r0
   170dc:	bne	17be0 <main@@Base+0x4824>
   170e0:	cmp	ip, #6
   170e4:	mov	r9, sl
   170e8:	blt	176b8 <main@@Base+0x42fc>
   170ec:	ldr	r2, [sp, #32]
   170f0:	mov	r1, sl
   170f4:	ldrb	r0, [r1, #5]!
   170f8:	ldr	r2, [r2]
   170fc:	cmp	r2, #0
   17100:	beq	172e0 <main@@Base+0x3f24>
   17104:	cmp	r0, #33	; 0x21
   17108:	bcc	17118 <main@@Base+0x3d5c>
   1710c:	cmp	r0, #58	; 0x3a
   17110:	mov	r9, sl
   17114:	bne	176b8 <main@@Base+0x42fc>
   17118:	ldr	r0, [sp, #32]
   1711c:	mov	r2, #0
   17120:	str	r2, [r0]
   17124:	b	172f0 <main@@Base+0x3f34>
   17128:	ldr	r5, [sp, #44]	; 0x2c
   1712c:	ldr	r8, [sp, #40]	; 0x28
   17130:	cmn	r2, #-2013265919	; 0x88000001
   17134:	bhi	17198 <main@@Base+0x3ddc>
   17138:	and	r1, r1, #-16777216	; 0xff000000
   1713c:	eor	r0, r2, r3
   17140:	eor	r1, r1, #855638016	; 0x33000000
   17144:	orrs	r0, r1, r0
   17148:	bne	17be0 <main@@Base+0x4824>
   1714c:	cmp	ip, #6
   17150:	mov	r1, sl
   17154:	blt	179dc <main@@Base+0x4620>
   17158:	ldr	r1, [sp, #32]
   1715c:	mov	r2, sl
   17160:	ldrb	r0, [r2, #5]!
   17164:	ldr	r1, [r1]
   17168:	cmp	r1, #0
   1716c:	beq	17350 <main@@Base+0x3f94>
   17170:	cmp	r0, #33	; 0x21
   17174:	bcc	17184 <main@@Base+0x3dc8>
   17178:	cmp	r0, #58	; 0x3a
   1717c:	mov	r1, sl
   17180:	bne	179dc <main@@Base+0x4620>
   17184:	ldr	r0, [sp, #32]
   17188:	mov	r1, #0
   1718c:	str	r1, [r0]
   17190:	b	17360 <main@@Base+0x3fa4>
   17194:	andeq	r9, r0, r8, lsr r7
   17198:	lsr	r0, r2, #24
   1719c:	and	r1, r2, #-16777216	; 0xff000000
   171a0:	cmp	r0, #120	; 0x78
   171a4:	bhi	17240 <main@@Base+0x3e84>
   171a8:	teq	r1, #2013265920	; 0x78000000
   171ac:	bne	17be0 <main@@Base+0x4824>
   171b0:	cmp	ip, #2
   171b4:	mov	r7, sl
   171b8:	blt	17a2c <main@@Base+0x4670>
   171bc:	ldr	r2, [sp, #32]
   171c0:	mov	r1, sl
   171c4:	ldrb	r0, [r1, #1]!
   171c8:	ldr	r2, [r2]
   171cc:	cmp	r2, #0
   171d0:	beq	17388 <main@@Base+0x3fcc>
   171d4:	cmp	r0, #33	; 0x21
   171d8:	bcc	171e8 <main@@Base+0x3e2c>
   171dc:	cmp	r0, #58	; 0x3a
   171e0:	mov	r7, sl
   171e4:	bne	17a2c <main@@Base+0x4670>
   171e8:	ldr	r0, [sp, #32]
   171ec:	mov	r2, #0
   171f0:	str	r2, [r0]
   171f4:	b	17398 <main@@Base+0x3fdc>
   171f8:	cmp	ip, #6
   171fc:	mov	r7, sl
   17200:	blt	177f0 <main@@Base+0x4434>
   17204:	ldr	r2, [sp, #32]
   17208:	mov	r1, sl
   1720c:	ldrb	r0, [r1, #5]!
   17210:	ldr	r2, [r2]
   17214:	cmp	r2, #0
   17218:	beq	17318 <main@@Base+0x3f5c>
   1721c:	cmp	r0, #33	; 0x21
   17220:	bcc	17230 <main@@Base+0x3e74>
   17224:	cmp	r0, #58	; 0x3a
   17228:	mov	r7, sl
   1722c:	bne	177f0 <main@@Base+0x4434>
   17230:	ldr	r0, [sp, #32]
   17234:	mov	r2, #0
   17238:	str	r2, [r0]
   1723c:	b	17328 <main@@Base+0x3f6c>
   17240:	teq	r1, #2030043136	; 0x79000000
   17244:	beq	17298 <main@@Base+0x3edc>
   17248:	teq	r1, #2046820352	; 0x7a000000
   1724c:	bne	17be0 <main@@Base+0x4824>
   17250:	cmp	ip, #2
   17254:	mov	r7, sl
   17258:	blt	17acc <main@@Base+0x4710>
   1725c:	ldr	r2, [sp, #32]
   17260:	mov	r1, sl
   17264:	ldrb	r0, [r1, #1]!
   17268:	ldr	r2, [r2]
   1726c:	cmp	r2, #0
   17270:	beq	174ec <main@@Base+0x4130>
   17274:	cmp	r0, #33	; 0x21
   17278:	bcc	17288 <main@@Base+0x3ecc>
   1727c:	cmp	r0, #58	; 0x3a
   17280:	mov	r7, sl
   17284:	bne	17acc <main@@Base+0x4710>
   17288:	ldr	r0, [sp, #32]
   1728c:	mov	r2, #0
   17290:	str	r2, [r0]
   17294:	b	174fc <main@@Base+0x4140>
   17298:	cmp	ip, #2
   1729c:	mov	r7, sl
   172a0:	blt	17b6c <main@@Base+0x47b0>
   172a4:	ldr	r2, [sp, #32]
   172a8:	mov	r1, sl
   172ac:	ldrb	r0, [r1, #1]!
   172b0:	ldr	r2, [r2]
   172b4:	cmp	r2, #0
   172b8:	beq	1752c <main@@Base+0x4170>
   172bc:	cmp	r0, #33	; 0x21
   172c0:	bcc	172d0 <main@@Base+0x3f14>
   172c4:	cmp	r0, #58	; 0x3a
   172c8:	mov	r7, sl
   172cc:	bne	17b6c <main@@Base+0x47b0>
   172d0:	ldr	r0, [sp, #32]
   172d4:	mov	r2, #0
   172d8:	str	r2, [r0]
   172dc:	b	1753c <main@@Base+0x4180>
   172e0:	cmp	r0, #34	; 0x22
   172e4:	mov	r9, sl
   172e8:	bne	176b8 <main@@Base+0x42fc>
   172ec:	add	r1, sl, #6
   172f0:	sub	r0, r5, r1
   172f4:	cmp	r0, #2
   172f8:	blt	173d8 <main@@Base+0x401c>
   172fc:	ldrb	r0, [r1]
   17300:	cmp	r0, #32
   17304:	bls	173c4 <main@@Base+0x4008>
   17308:	mov	r9, r1
   1730c:	cmp	r9, r5
   17310:	bne	173f0 <main@@Base+0x4034>
   17314:	b	1744c <main@@Base+0x4090>
   17318:	cmp	r0, #34	; 0x22
   1731c:	mov	r7, sl
   17320:	bne	177f0 <main@@Base+0x4434>
   17324:	add	r1, sl, #6
   17328:	sub	r0, r5, r1
   1732c:	cmp	r0, #2
   17330:	blt	17478 <main@@Base+0x40bc>
   17334:	ldrb	r0, [r1]
   17338:	cmp	r0, #32
   1733c:	bls	17464 <main@@Base+0x40a8>
   17340:	mov	r7, r1
   17344:	cmp	r7, r5
   17348:	bne	17490 <main@@Base+0x40d4>
   1734c:	b	174d4 <main@@Base+0x4118>
   17350:	cmp	r0, #34	; 0x22
   17354:	mov	r1, sl
   17358:	bne	179dc <main@@Base+0x4620>
   1735c:	add	r2, sl, #6
   17360:	sub	r0, r5, r2
   17364:	cmp	r0, #2
   17368:	blt	17580 <main@@Base+0x41c4>
   1736c:	ldrb	r0, [r2]
   17370:	cmp	r0, #32
   17374:	bls	1756c <main@@Base+0x41b0>
   17378:	mov	r1, r2
   1737c:	cmp	r1, r5
   17380:	bne	1759c <main@@Base+0x41e0>
   17384:	b	175e0 <main@@Base+0x4224>
   17388:	cmp	r0, #34	; 0x22
   1738c:	mov	r7, sl
   17390:	bne	17a2c <main@@Base+0x4670>
   17394:	add	r1, sl, #2
   17398:	sub	r0, r5, r1
   1739c:	cmp	r0, #2
   173a0:	blt	1760c <main@@Base+0x4250>
   173a4:	ldrb	r0, [r1]
   173a8:	cmp	r0, #32
   173ac:	bls	175f4 <main@@Base+0x4238>
   173b0:	ldr	r5, [sp, #44]	; 0x2c
   173b4:	mov	r7, r1
   173b8:	cmp	r7, r5
   173bc:	bne	17624 <main@@Base+0x4268>
   173c0:	b	17664 <main@@Base+0x42a8>
   173c4:	bne	173d8 <main@@Base+0x401c>
   173c8:	mov	r9, r1
   173cc:	ldrb	r0, [r9, #1]!
   173d0:	cmp	r0, #32
   173d4:	bhi	173e8 <main@@Base+0x402c>
   173d8:	mov	r0, r8
   173dc:	mov	r2, r5
   173e0:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   173e4:	mov	r9, r0
   173e8:	cmp	r9, r5
   173ec:	beq	1744c <main@@Base+0x4090>
   173f0:	ldrb	r0, [r9]
   173f4:	cmp	r0, #58	; 0x3a
   173f8:	bne	1744c <main@@Base+0x4090>
   173fc:	add	r1, r9, #1
   17400:	sub	r0, r5, r1
   17404:	cmp	r0, #2
   17408:	blt	176a8 <main@@Base+0x42ec>
   1740c:	ldrb	r0, [r1]
   17410:	cmp	r0, #32
   17414:	bls	17690 <main@@Base+0x42d4>
   17418:	ldr	r5, [sp, #44]	; 0x2c
   1741c:	ldr	r8, [sp, #40]	; 0x28
   17420:	mov	r9, r1
   17424:	cmp	sl, r9
   17428:	bne	176c0 <main@@Base+0x4304>
   1742c:	mov	r0, r8
   17430:	mov	r1, sl
   17434:	mov	r2, r5
   17438:	bl	2f87c <flatcc_json_parser_unmatched_symbol@@Base>
   1743c:	ldr	sl, [sp, #36]	; 0x24
   17440:	ldr	r9, [sp, #24]
   17444:	mov	r1, r0
   17448:	b	17bf8 <main@@Base+0x483c>
   1744c:	mov	r0, r8
   17450:	mov	r1, r9
   17454:	mov	r2, r5
   17458:	mov	r3, #4
   1745c:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   17460:	b	176b4 <main@@Base+0x42f8>
   17464:	bne	17478 <main@@Base+0x40bc>
   17468:	mov	r7, r1
   1746c:	ldrb	r0, [r7, #1]!
   17470:	cmp	r0, #32
   17474:	bhi	17488 <main@@Base+0x40cc>
   17478:	mov	r0, r8
   1747c:	mov	r2, r5
   17480:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   17484:	mov	r7, r0
   17488:	cmp	r7, r5
   1748c:	beq	174d4 <main@@Base+0x4118>
   17490:	ldrb	r0, [r7]
   17494:	cmp	r0, #58	; 0x3a
   17498:	bne	174d4 <main@@Base+0x4118>
   1749c:	add	r1, r7, #1
   174a0:	sub	r0, r5, r1
   174a4:	cmp	r0, #2
   174a8:	blt	177e0 <main@@Base+0x4424>
   174ac:	ldrb	r0, [r1]
   174b0:	cmp	r0, #32
   174b4:	bls	177c4 <main@@Base+0x4408>
   174b8:	ldr	r5, [sp, #44]	; 0x2c
   174bc:	ldr	r8, [sp, #40]	; 0x28
   174c0:	ldr	r9, [sp, #24]
   174c4:	mov	r7, r1
   174c8:	cmp	sl, r7
   174cc:	bne	177f8 <main@@Base+0x443c>
   174d0:	b	17be0 <main@@Base+0x4824>
   174d4:	mov	r0, r8
   174d8:	mov	r1, r7
   174dc:	mov	r2, r5
   174e0:	mov	r3, #4
   174e4:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   174e8:	b	177ec <main@@Base+0x4430>
   174ec:	cmp	r0, #34	; 0x22
   174f0:	mov	r7, sl
   174f4:	bne	17acc <main@@Base+0x4710>
   174f8:	add	r1, sl, #2
   174fc:	ldr	r4, [sp, #44]	; 0x2c
   17500:	sub	r0, r4, r1
   17504:	cmp	r0, #2
   17508:	blt	1787c <main@@Base+0x44c0>
   1750c:	ldrb	r0, [r1]
   17510:	cmp	r0, #32
   17514:	bls	17864 <main@@Base+0x44a8>
   17518:	ldr	r4, [sp, #44]	; 0x2c
   1751c:	mov	r7, r1
   17520:	cmp	r7, r4
   17524:	bne	17894 <main@@Base+0x44d8>
   17528:	b	178d8 <main@@Base+0x451c>
   1752c:	cmp	r0, #34	; 0x22
   17530:	mov	r7, sl
   17534:	bne	17b6c <main@@Base+0x47b0>
   17538:	add	r1, sl, #2
   1753c:	ldr	r4, [sp, #44]	; 0x2c
   17540:	sub	r0, r4, r1
   17544:	cmp	r0, #2
   17548:	blt	17920 <main@@Base+0x4564>
   1754c:	ldrb	r0, [r1]
   17550:	cmp	r0, #32
   17554:	bls	17908 <main@@Base+0x454c>
   17558:	ldr	r4, [sp, #44]	; 0x2c
   1755c:	mov	r7, r1
   17560:	cmp	r7, r4
   17564:	bne	17938 <main@@Base+0x457c>
   17568:	b	1797c <main@@Base+0x45c0>
   1756c:	bne	17580 <main@@Base+0x41c4>
   17570:	mov	r1, r2
   17574:	ldrb	r0, [r1, #1]!
   17578:	cmp	r0, #32
   1757c:	bhi	17594 <main@@Base+0x41d8>
   17580:	mov	r1, r2
   17584:	mov	r0, r8
   17588:	mov	r2, r5
   1758c:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   17590:	mov	r1, r0
   17594:	cmp	r1, r5
   17598:	beq	175e0 <main@@Base+0x4224>
   1759c:	ldrb	r0, [r1]
   175a0:	cmp	r0, #58	; 0x3a
   175a4:	bne	175e0 <main@@Base+0x4224>
   175a8:	add	r2, r1, #1
   175ac:	sub	r0, r5, r2
   175b0:	cmp	r0, #2
   175b4:	blt	179c8 <main@@Base+0x460c>
   175b8:	ldrb	r0, [r2]
   175bc:	cmp	r0, #32
   175c0:	bls	179ac <main@@Base+0x45f0>
   175c4:	ldr	r5, [sp, #44]	; 0x2c
   175c8:	ldr	r8, [sp, #40]	; 0x28
   175cc:	ldr	r9, [sp, #24]
   175d0:	mov	r1, r2
   175d4:	cmp	sl, r1
   175d8:	bne	179e4 <main@@Base+0x4628>
   175dc:	b	17be0 <main@@Base+0x4824>
   175e0:	mov	r0, r8
   175e4:	mov	r2, r5
   175e8:	mov	r3, #4
   175ec:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   175f0:	b	179d8 <main@@Base+0x461c>
   175f4:	ldr	r5, [sp, #44]	; 0x2c
   175f8:	bne	1760c <main@@Base+0x4250>
   175fc:	mov	r7, r1
   17600:	ldrb	r0, [r7, #1]!
   17604:	cmp	r0, #32
   17608:	bhi	1761c <main@@Base+0x4260>
   1760c:	ldr	r0, [sp, #40]	; 0x28
   17610:	mov	r2, r5
   17614:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   17618:	mov	r7, r0
   1761c:	cmp	r7, r5
   17620:	beq	17664 <main@@Base+0x42a8>
   17624:	ldrb	r0, [r7]
   17628:	cmp	r0, #58	; 0x3a
   1762c:	bne	17664 <main@@Base+0x42a8>
   17630:	ldr	r8, [sp, #40]	; 0x28
   17634:	ldr	r9, [sp, #24]
   17638:	add	r1, r7, #1
   1763c:	sub	r0, r5, r1
   17640:	cmp	r0, #2
   17644:	blt	17a1c <main@@Base+0x4660>
   17648:	ldrb	r0, [r1]
   1764c:	cmp	r0, #32
   17650:	bls	17a00 <main@@Base+0x4644>
   17654:	ldr	r5, [sp, #44]	; 0x2c
   17658:	ldr	r8, [sp, #40]	; 0x28
   1765c:	mov	r7, r1
   17660:	b	17680 <main@@Base+0x42c4>
   17664:	ldr	r8, [sp, #40]	; 0x28
   17668:	mov	r1, r7
   1766c:	mov	r2, r5
   17670:	mov	r3, #4
   17674:	mov	r0, r8
   17678:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   1767c:	mov	r7, r0
   17680:	ldr	r9, [sp, #24]
   17684:	cmp	sl, r7
   17688:	bne	17a34 <main@@Base+0x4678>
   1768c:	b	17be0 <main@@Base+0x4824>
   17690:	ldr	r5, [sp, #44]	; 0x2c
   17694:	ldr	r8, [sp, #40]	; 0x28
   17698:	bne	176a8 <main@@Base+0x42ec>
   1769c:	ldrb	r0, [r9, #2]!
   176a0:	cmp	r0, #32
   176a4:	bhi	176b8 <main@@Base+0x42fc>
   176a8:	mov	r0, r8
   176ac:	mov	r2, r5
   176b0:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   176b4:	mov	r9, r0
   176b8:	cmp	sl, r9
   176bc:	beq	1742c <main@@Base+0x4070>
   176c0:	mov	r4, #0
   176c4:	cmp	r9, r5
   176c8:	str	r4, [fp, #-52]	; 0xffffffcc
   176cc:	str	r4, [fp, #-56]	; 0xffffffc8
   176d0:	strb	r4, [fp, #-60]	; 0xffffffc4
   176d4:	str	r4, [sp, #56]	; 0x38
   176d8:	beq	17734 <main@@Base+0x4378>
   176dc:	sub	r0, fp, #56	; 0x38
   176e0:	mov	r1, r9
   176e4:	mov	r2, r5
   176e8:	add	r3, sp, #56	; 0x38
   176ec:	str	r0, [sp]
   176f0:	mov	r0, r8
   176f4:	bl	3132c <flatcc_json_parser_integer@@Base>
   176f8:	cmp	r0, r9
   176fc:	beq	1773c <main@@Base+0x4380>
   17700:	ldr	r3, [sp, #56]	; 0x38
   17704:	mov	r1, r0
   17708:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1770c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   17710:	cmp	r3, #0
   17714:	beq	17744 <main@@Base+0x4388>
   17718:	subs	r3, r0, #129	; 0x81
   1771c:	sbcs	r2, r2, #0
   17720:	bcc	17768 <main@@Base+0x43ac>
   17724:	mov	r0, r8
   17728:	mov	r2, r5
   1772c:	mov	r3, #8
   17730:	b	1775c <main@@Base+0x43a0>
   17734:	mov	r1, r5
   17738:	b	17778 <main@@Base+0x43bc>
   1773c:	mov	r1, r9
   17740:	b	17778 <main@@Base+0x43bc>
   17744:	subs	r3, r0, #128	; 0x80
   17748:	sbcs	r2, r2, #0
   1774c:	bcc	17770 <main@@Base+0x43b4>
   17750:	mov	r0, r8
   17754:	mov	r2, r5
   17758:	mov	r3, #7
   1775c:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   17760:	mov	r1, r0
   17764:	b	17778 <main@@Base+0x43bc>
   17768:	rsb	r4, r0, #0
   1776c:	b	17774 <main@@Base+0x43b8>
   17770:	mov	r4, r0
   17774:	strb	r4, [fp, #-60]	; 0xffffffc4
   17778:	ldr	sl, [sp, #36]	; 0x24
   1777c:	cmp	r9, r1
   17780:	bne	177b8 <main@@Base+0x43fc>
   17784:	sub	r0, fp, #60	; 0x3c
   17788:	mov	r1, r9
   1778c:	mov	r2, r5
   17790:	str	r0, [sp]
   17794:	mov	r0, r8
   17798:	ldr	r3, [pc, #4060]	; 1877c <main@@Base+0x53c0>
   1779c:	add	r3, pc, r3
   177a0:	bl	1eacc <main@@Base+0xb710>
   177a4:	mov	r1, r0
   177a8:	cmp	r0, r9
   177ac:	cmpne	r1, r5
   177b0:	beq	17cdc <main@@Base+0x4920>
   177b4:	ldrb	r4, [fp, #-60]	; 0xffffffc4
   177b8:	ldr	r9, [sp, #24]
   177bc:	strb	r4, [r9, #24]
   177c0:	b	17bf8 <main@@Base+0x483c>
   177c4:	ldr	r5, [sp, #44]	; 0x2c
   177c8:	ldr	r8, [sp, #40]	; 0x28
   177cc:	ldr	r9, [sp, #24]
   177d0:	bne	177e0 <main@@Base+0x4424>
   177d4:	ldrb	r0, [r7, #2]!
   177d8:	cmp	r0, #32
   177dc:	bhi	177f0 <main@@Base+0x4434>
   177e0:	mov	r0, r8
   177e4:	mov	r2, r5
   177e8:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   177ec:	mov	r7, r0
   177f0:	cmp	sl, r7
   177f4:	beq	17be0 <main@@Base+0x4824>
   177f8:	mov	r0, #0
   177fc:	mov	r1, r7
   17800:	mov	r2, r5
   17804:	sub	r3, fp, #56	; 0x38
   17808:	str	r0, [fp, #-52]	; 0xffffffcc
   1780c:	str	r0, [fp, #-56]	; 0xffffffc8
   17810:	mov	r0, r8
   17814:	bl	30828 <flatcc_json_parser_double@@Base>
   17818:	ldr	sl, [sp, #36]	; 0x24
   1781c:	mov	r1, r0
   17820:	cmp	r7, r0
   17824:	bne	17858 <main@@Base+0x449c>
   17828:	sub	r0, fp, #56	; 0x38
   1782c:	mov	r1, r7
   17830:	mov	r2, r5
   17834:	str	r0, [sp]
   17838:	mov	r0, r8
   1783c:	ldr	r3, [pc, #4012]	; 187f0 <main@@Base+0x5434>
   17840:	add	r3, pc, r3
   17844:	bl	23c78 <main@@Base+0x108bc>
   17848:	mov	r1, r0
   1784c:	cmp	r0, r7
   17850:	cmpne	r1, r5
   17854:	beq	17cdc <main@@Base+0x4920>
   17858:	vldr	d16, [fp, #-56]	; 0xffffffc8
   1785c:	vstr	d16, [r9, #16]
   17860:	b	17bf8 <main@@Base+0x483c>
   17864:	ldr	r4, [sp, #44]	; 0x2c
   17868:	bne	1787c <main@@Base+0x44c0>
   1786c:	mov	r7, r1
   17870:	ldrb	r0, [r7, #1]!
   17874:	cmp	r0, #32
   17878:	bhi	1788c <main@@Base+0x44d0>
   1787c:	ldr	r0, [sp, #40]	; 0x28
   17880:	mov	r2, r4
   17884:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   17888:	mov	r7, r0
   1788c:	cmp	r7, r4
   17890:	beq	178d8 <main@@Base+0x451c>
   17894:	ldrb	r0, [r7]
   17898:	cmp	r0, #58	; 0x3a
   1789c:	bne	178d8 <main@@Base+0x451c>
   178a0:	ldr	r5, [sp, #44]	; 0x2c
   178a4:	ldr	r8, [sp, #40]	; 0x28
   178a8:	ldr	r9, [sp, #24]
   178ac:	add	r1, r7, #1
   178b0:	sub	r0, r5, r1
   178b4:	cmp	r0, #2
   178b8:	blt	17abc <main@@Base+0x4700>
   178bc:	ldrb	r0, [r1]
   178c0:	cmp	r0, #32
   178c4:	bls	17aa0 <main@@Base+0x46e4>
   178c8:	ldr	r5, [sp, #44]	; 0x2c
   178cc:	ldr	r8, [sp, #40]	; 0x28
   178d0:	mov	r7, r1
   178d4:	b	178f8 <main@@Base+0x453c>
   178d8:	ldr	r8, [sp, #40]	; 0x28
   178dc:	ldr	r5, [sp, #44]	; 0x2c
   178e0:	mov	r1, r7
   178e4:	mov	r3, #4
   178e8:	mov	r0, r8
   178ec:	mov	r2, r5
   178f0:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   178f4:	mov	r7, r0
   178f8:	ldr	r9, [sp, #24]
   178fc:	cmp	sl, r7
   17900:	bne	17ad4 <main@@Base+0x4718>
   17904:	b	17be0 <main@@Base+0x4824>
   17908:	ldr	r4, [sp, #44]	; 0x2c
   1790c:	bne	17920 <main@@Base+0x4564>
   17910:	mov	r7, r1
   17914:	ldrb	r0, [r7, #1]!
   17918:	cmp	r0, #32
   1791c:	bhi	17930 <main@@Base+0x4574>
   17920:	ldr	r0, [sp, #40]	; 0x28
   17924:	mov	r2, r4
   17928:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1792c:	mov	r7, r0
   17930:	cmp	r7, r4
   17934:	beq	1797c <main@@Base+0x45c0>
   17938:	ldrb	r0, [r7]
   1793c:	cmp	r0, #58	; 0x3a
   17940:	bne	1797c <main@@Base+0x45c0>
   17944:	ldr	r5, [sp, #44]	; 0x2c
   17948:	ldr	r8, [sp, #40]	; 0x28
   1794c:	ldr	r9, [sp, #24]
   17950:	add	r1, r7, #1
   17954:	sub	r0, r5, r1
   17958:	cmp	r0, #2
   1795c:	blt	17b5c <main@@Base+0x47a0>
   17960:	ldrb	r0, [r1]
   17964:	cmp	r0, #32
   17968:	bls	17b40 <main@@Base+0x4784>
   1796c:	ldr	r5, [sp, #44]	; 0x2c
   17970:	ldr	r8, [sp, #40]	; 0x28
   17974:	mov	r7, r1
   17978:	b	1799c <main@@Base+0x45e0>
   1797c:	ldr	r8, [sp, #40]	; 0x28
   17980:	ldr	r5, [sp, #44]	; 0x2c
   17984:	mov	r1, r7
   17988:	mov	r3, #4
   1798c:	mov	r0, r8
   17990:	mov	r2, r5
   17994:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   17998:	mov	r7, r0
   1799c:	ldr	r9, [sp, #24]
   179a0:	cmp	sl, r7
   179a4:	bne	17b74 <main@@Base+0x47b8>
   179a8:	b	17be0 <main@@Base+0x4824>
   179ac:	ldr	r5, [sp, #44]	; 0x2c
   179b0:	ldr	r8, [sp, #40]	; 0x28
   179b4:	ldr	r9, [sp, #24]
   179b8:	bne	179c8 <main@@Base+0x460c>
   179bc:	ldrb	r0, [r1, #2]!
   179c0:	cmp	r0, #32
   179c4:	bhi	179dc <main@@Base+0x4620>
   179c8:	mov	r1, r2
   179cc:	mov	r0, r8
   179d0:	mov	r2, r5
   179d4:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   179d8:	mov	r1, r0
   179dc:	cmp	sl, r1
   179e0:	beq	17be0 <main@@Base+0x4824>
   179e4:	ldr	r3, [sp, #20]
   179e8:	mov	r0, r8
   179ec:	mov	r2, r5
   179f0:	bl	1f1ac <main@@Base+0xbdf0>
   179f4:	b	17bf0 <main@@Base+0x4834>
   179f8:	andeq	sp, r1, sp, rrx
   179fc:	andeq	sp, r1, lr, asr #32
   17a00:	ldr	r5, [sp, #44]	; 0x2c
   17a04:	ldr	r8, [sp, #40]	; 0x28
   17a08:	ldr	r9, [sp, #24]
   17a0c:	bne	17a1c <main@@Base+0x4660>
   17a10:	ldrb	r0, [r7, #2]!
   17a14:	cmp	r0, #32
   17a18:	bhi	17a2c <main@@Base+0x4670>
   17a1c:	mov	r0, r8
   17a20:	mov	r2, r5
   17a24:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   17a28:	mov	r7, r0
   17a2c:	cmp	sl, r7
   17a30:	beq	17be0 <main@@Base+0x4824>
   17a34:	mov	r0, #0
   17a38:	mov	r1, r7
   17a3c:	mov	r2, r5
   17a40:	sub	r3, fp, #56	; 0x38
   17a44:	str	r0, [fp, #-56]	; 0xffffffc8
   17a48:	mov	r0, r8
   17a4c:	bl	311e8 <flatcc_json_parser_float@@Base>
   17a50:	ldr	sl, [sp, #36]	; 0x24
   17a54:	mov	r1, r0
   17a58:	cmp	r7, r0
   17a5c:	bne	17a90 <main@@Base+0x46d4>
   17a60:	sub	r0, fp, #56	; 0x38
   17a64:	mov	r1, r7
   17a68:	mov	r2, r5
   17a6c:	str	r0, [sp]
   17a70:	mov	r0, r8
   17a74:	ldr	r3, [pc, #4056]	; 18a54 <main@@Base+0x5698>
   17a78:	add	r3, pc, r3
   17a7c:	bl	23194 <main@@Base+0xfdd8>
   17a80:	mov	r1, r0
   17a84:	cmp	r0, r7
   17a88:	cmpne	r1, r5
   17a8c:	beq	17cdc <main@@Base+0x4920>
   17a90:	ldr	r0, [fp, #-56]	; 0xffffffc8
   17a94:	str	r0, [r9]
   17a98:	b	17bf8 <main@@Base+0x483c>
   17a9c:	andeq	pc, r2, r8, ror #11
   17aa0:	ldr	r5, [sp, #44]	; 0x2c
   17aa4:	ldr	r8, [sp, #40]	; 0x28
   17aa8:	ldr	r9, [sp, #24]
   17aac:	bne	17abc <main@@Base+0x4700>
   17ab0:	ldrb	r0, [r7, #2]!
   17ab4:	cmp	r0, #32
   17ab8:	bhi	17acc <main@@Base+0x4710>
   17abc:	mov	r0, r8
   17ac0:	mov	r2, r5
   17ac4:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   17ac8:	mov	r7, r0
   17acc:	cmp	sl, r7
   17ad0:	beq	17be0 <main@@Base+0x4824>
   17ad4:	mov	r0, #0
   17ad8:	mov	r1, r7
   17adc:	mov	r2, r5
   17ae0:	sub	r3, fp, #56	; 0x38
   17ae4:	str	r0, [fp, #-56]	; 0xffffffc8
   17ae8:	mov	r0, r8
   17aec:	bl	311e8 <flatcc_json_parser_float@@Base>
   17af0:	mov	r1, r0
   17af4:	cmp	r7, r0
   17af8:	bne	17b34 <main@@Base+0x4778>
   17afc:	sub	r0, fp, #56	; 0x38
   17b00:	mov	r1, r7
   17b04:	mov	r2, r5
   17b08:	str	r0, [sp]
   17b0c:	mov	r0, r8
   17b10:	ldr	r3, [pc, #4008]	; 18ac0 <main@@Base+0x5704>
   17b14:	add	r3, pc, r3
   17b18:	bl	23194 <main@@Base+0xfdd8>
   17b1c:	mov	r1, r0
   17b20:	cmp	r0, r7
   17b24:	cmpne	r1, r5
   17b28:	beq	17cdc <main@@Base+0x4920>
   17b2c:	ldr	r8, [sp, #40]	; 0x28
   17b30:	ldr	r9, [sp, #24]
   17b34:	ldr	r0, [fp, #-56]	; 0xffffffc8
   17b38:	str	r0, [r9, #8]
   17b3c:	b	17bf4 <main@@Base+0x4838>
   17b40:	ldr	r5, [sp, #44]	; 0x2c
   17b44:	ldr	r8, [sp, #40]	; 0x28
   17b48:	ldr	r9, [sp, #24]
   17b4c:	bne	17b5c <main@@Base+0x47a0>
   17b50:	ldrb	r0, [r7, #2]!
   17b54:	cmp	r0, #32
   17b58:	bhi	17b6c <main@@Base+0x47b0>
   17b5c:	mov	r0, r8
   17b60:	mov	r2, r5
   17b64:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   17b68:	mov	r7, r0
   17b6c:	cmp	sl, r7
   17b70:	beq	17be0 <main@@Base+0x4824>
   17b74:	mov	r0, #0
   17b78:	mov	r1, r7
   17b7c:	mov	r2, r5
   17b80:	sub	r3, fp, #56	; 0x38
   17b84:	str	r0, [fp, #-56]	; 0xffffffc8
   17b88:	mov	r0, r8
   17b8c:	bl	311e8 <flatcc_json_parser_float@@Base>
   17b90:	mov	r1, r0
   17b94:	cmp	r7, r0
   17b98:	bne	17bd4 <main@@Base+0x4818>
   17b9c:	sub	r0, fp, #56	; 0x38
   17ba0:	mov	r1, r7
   17ba4:	mov	r2, r5
   17ba8:	str	r0, [sp]
   17bac:	mov	r0, r8
   17bb0:	ldr	r3, [pc, #4048]	; 18b88 <main@@Base+0x57cc>
   17bb4:	add	r3, pc, r3
   17bb8:	bl	23194 <main@@Base+0xfdd8>
   17bbc:	mov	r1, r0
   17bc0:	cmp	r0, r7
   17bc4:	cmpne	r1, r5
   17bc8:	beq	17cdc <main@@Base+0x4920>
   17bcc:	ldr	r8, [sp, #40]	; 0x28
   17bd0:	ldr	r9, [sp, #24]
   17bd4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   17bd8:	str	r0, [r9, #4]
   17bdc:	b	17bf4 <main@@Base+0x4838>
   17be0:	mov	r0, r8
   17be4:	mov	r1, sl
   17be8:	mov	r2, r5
   17bec:	bl	2f87c <flatcc_json_parser_unmatched_symbol@@Base>
   17bf0:	mov	r1, r0
   17bf4:	ldr	sl, [sp, #36]	; 0x24
   17bf8:	sub	r0, r5, r1
   17bfc:	cmp	r0, #2
   17c00:	blt	17c34 <main@@Base+0x4878>
   17c04:	ldrb	r0, [r1]
   17c08:	cmp	r0, #32
   17c0c:	bls	17c20 <main@@Base+0x4864>
   17c10:	mov	r2, r1
   17c14:	cmp	r2, r5
   17c18:	bne	17c4c <main@@Base+0x4890>
   17c1c:	b	17cf8 <main@@Base+0x493c>
   17c20:	bne	17c34 <main@@Base+0x4878>
   17c24:	mov	r2, r1
   17c28:	ldrb	r0, [r2, #1]!
   17c2c:	cmp	r0, #32
   17c30:	bhi	17c44 <main@@Base+0x4888>
   17c34:	mov	r0, r8
   17c38:	mov	r2, r5
   17c3c:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   17c40:	mov	r2, r0
   17c44:	cmp	r2, r5
   17c48:	beq	17cf8 <main@@Base+0x493c>
   17c4c:	ldrb	r0, [r2]
   17c50:	cmp	r0, #44	; 0x2c
   17c54:	bne	17d00 <main@@Base+0x4944>
   17c58:	add	r1, r2, #1
   17c5c:	sub	r0, r5, r1
   17c60:	cmp	r0, #2
   17c64:	blt	17c94 <main@@Base+0x48d8>
   17c68:	ldrb	r0, [r1]
   17c6c:	cmp	r0, #32
   17c70:	bls	17c84 <main@@Base+0x48c8>
   17c74:	mov	r2, r1
   17c78:	cmp	r2, r5
   17c7c:	bne	17cac <main@@Base+0x48f0>
   17c80:	b	17d34 <main@@Base+0x4978>
   17c84:	bne	17c94 <main@@Base+0x48d8>
   17c88:	ldrb	r0, [r2, #2]!
   17c8c:	cmp	r0, #32
   17c90:	bhi	17ca4 <main@@Base+0x48e8>
   17c94:	mov	r0, r8
   17c98:	mov	r2, r5
   17c9c:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   17ca0:	mov	r2, r0
   17ca4:	cmp	r2, r5
   17ca8:	beq	17d34 <main@@Base+0x4978>
   17cac:	ldrb	r0, [r2]
   17cb0:	cmp	r0, #125	; 0x7d
   17cb4:	bne	16f8c <main@@Base+0x3bd0>
   17cb8:	add	r1, r2, #1
   17cbc:	sub	r0, r5, r1
   17cc0:	cmp	r0, #2
   17cc4:	blt	1ad38 <main@@Base+0x797c>
   17cc8:	ldrb	r0, [r1]
   17ccc:	cmp	r0, #32
   17cd0:	bls	1a004 <main@@Base+0x6c48>
   17cd4:	mov	r4, r1
   17cd8:	b	1c2cc <main@@Base+0x8f10>
   17cdc:	ldr	r8, [sp, #40]	; 0x28
   17ce0:	ldr	r5, [sp, #44]	; 0x2c
   17ce4:	mov	r3, #33	; 0x21
   17ce8:	mov	r0, r8
   17cec:	mov	r2, r5
   17cf0:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   17cf4:	b	166e4 <main@@Base+0x3328>
   17cf8:	mov	r4, r5
   17cfc:	b	1c2cc <main@@Base+0x8f10>
   17d00:	cmp	r0, #125	; 0x7d
   17d04:	bne	188e0 <main@@Base+0x5524>
   17d08:	add	r1, r2, #1
   17d0c:	sub	r0, r5, r1
   17d10:	cmp	r0, #2
   17d14:	blt	1ad38 <main@@Base+0x797c>
   17d18:	ldrb	r0, [r1]
   17d1c:	cmp	r0, #32
   17d20:	bls	1ad18 <main@@Base+0x795c>
   17d24:	ldr	r5, [sp, #44]	; 0x2c
   17d28:	ldr	r8, [sp, #40]	; 0x28
   17d2c:	mov	r4, r1
   17d30:	b	166e8 <main@@Base+0x332c>
   17d34:	mov	r0, r8
   17d38:	mov	r1, r5
   17d3c:	b	188e8 <main@@Base+0x552c>
   17d40:	bne	17d50 <main@@Base+0x4994>
   17d44:	ldrb	r0, [r7, #2]!
   17d48:	cmp	r0, #32
   17d4c:	bhi	17d60 <main@@Base+0x49a4>
   17d50:	mov	r0, r8
   17d54:	mov	r2, r5
   17d58:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   17d5c:	mov	r7, r0
   17d60:	cmp	r9, r7
   17d64:	beq	1494c <main@@Base+0x1590>
   17d68:	mov	r0, #0
   17d6c:	mov	r1, r7
   17d70:	mov	r2, r5
   17d74:	sub	r3, fp, #56	; 0x38
   17d78:	str	r0, [fp, #-56]	; 0xffffffc8
   17d7c:	mov	r0, r8
   17d80:	bl	311e8 <flatcc_json_parser_float@@Base>
   17d84:	mov	r4, r0
   17d88:	cmp	r7, r0
   17d8c:	bne	17dc0 <main@@Base+0x4a04>
   17d90:	sub	r0, fp, #56	; 0x38
   17d94:	mov	r1, r7
   17d98:	mov	r2, r5
   17d9c:	str	r0, [sp]
   17da0:	mov	r0, r8
   17da4:	ldr	r3, [pc, #4092]	; 18da8 <main@@Base+0x59ec>
   17da8:	add	r3, pc, r3
   17dac:	bl	23194 <main@@Base+0xfdd8>
   17db0:	mov	r4, r0
   17db4:	cmp	r0, r7
   17db8:	cmpne	r4, r5
   17dbc:	beq	13488 <main@@Base+0xcc>
   17dc0:	vldr	s0, [fp, #-56]	; 0xffffffc8
   17dc4:	vcmp.f32	s0, s16
   17dc8:	vmrs	APSR_nzcv, fpscr
   17dcc:	bne	17ddc <main@@Base+0x4a20>
   17dd0:	ldrb	r0, [r8, #8]
   17dd4:	tst	r0, #2
   17dd8:	beq	1c2cc <main@@Base+0x8f10>
   17ddc:	ldr	r0, [r8]
   17de0:	mov	r1, #26
   17de4:	b	154f4 <main@@Base+0x2138>
   17de8:	andeq	pc, r2, r8, lsl #5
   17dec:	bne	17e00 <main@@Base+0x4a44>
   17df0:	mov	r4, r1
   17df4:	ldrb	r0, [r4, #1]!
   17df8:	cmp	r0, #32
   17dfc:	bhi	17e10 <main@@Base+0x4a54>
   17e00:	mov	r0, r8
   17e04:	mov	r2, r5
   17e08:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   17e0c:	mov	r4, r0
   17e10:	cmp	r4, r5
   17e14:	beq	17e5c <main@@Base+0x4aa0>
   17e18:	ldrb	r0, [r4]
   17e1c:	cmp	r0, #58	; 0x3a
   17e20:	bne	17e5c <main@@Base+0x4aa0>
   17e24:	add	r1, r4, #1
   17e28:	sub	r0, r5, r1
   17e2c:	cmp	r0, #2
   17e30:	blt	19cd0 <main@@Base+0x6914>
   17e34:	ldrb	r0, [r1]
   17e38:	cmp	r0, #32
   17e3c:	bls	19cb4 <main@@Base+0x68f8>
   17e40:	ldr	r5, [sp, #44]	; 0x2c
   17e44:	ldr	r8, [sp, #40]	; 0x28
   17e48:	ldr	sl, [sp, #36]	; 0x24
   17e4c:	mov	r4, r1
   17e50:	cmp	r7, r4
   17e54:	bne	19ce8 <main@@Base+0x692c>
   17e58:	b	1b848 <main@@Base+0x848c>
   17e5c:	mov	r0, r8
   17e60:	mov	r1, r4
   17e64:	mov	r2, r5
   17e68:	mov	r3, #4
   17e6c:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   17e70:	b	19cdc <main@@Base+0x6920>
   17e74:	bne	17e88 <main@@Base+0x4acc>
   17e78:	mov	r7, r1
   17e7c:	ldrb	r0, [r7, #1]!
   17e80:	cmp	r0, #32
   17e84:	bhi	17e98 <main@@Base+0x4adc>
   17e88:	mov	r0, r8
   17e8c:	mov	r2, r5
   17e90:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   17e94:	mov	r7, r0
   17e98:	cmp	r7, r5
   17e9c:	beq	17f4c <main@@Base+0x4b90>
   17ea0:	ldrb	r0, [r7]
   17ea4:	cmp	r0, #58	; 0x3a
   17ea8:	bne	17f4c <main@@Base+0x4b90>
   17eac:	add	r1, r7, #1
   17eb0:	sub	r0, r5, r1
   17eb4:	cmp	r0, #2
   17eb8:	blt	19d88 <main@@Base+0x69cc>
   17ebc:	ldrb	r0, [r1]
   17ec0:	cmp	r0, #32
   17ec4:	bls	19d70 <main@@Base+0x69b4>
   17ec8:	ldr	r5, [sp, #44]	; 0x2c
   17ecc:	ldr	r8, [sp, #40]	; 0x28
   17ed0:	mov	r7, r1
   17ed4:	cmp	sl, r7
   17ed8:	bne	19da0 <main@@Base+0x69e4>
   17edc:	add	r4, r9, #16
   17ee0:	mov	r1, #8
   17ee4:	sub	r0, r5, r4
   17ee8:	cmp	r0, #8
   17eec:	movcc	r1, r0
   17ef0:	sub	r1, r1, #1
   17ef4:	cmp	r1, #7
   17ef8:	bhi	1803c <main@@Base+0x4c80>
   17efc:	ldrb	r1, [r4]
   17f00:	cmp	r1, #97	; 0x61
   17f04:	bne	1803c <main@@Base+0x4c80>
   17f08:	ldr	sl, [sp, #36]	; 0x24
   17f0c:	cmp	r0, #2
   17f10:	blt	1c2b8 <main@@Base+0x8efc>
   17f14:	ldr	r2, [sp, #32]
   17f18:	mov	r1, r9
   17f1c:	ldrb	r0, [r1, #17]!
   17f20:	ldr	r2, [r2]
   17f24:	cmp	r2, #0
   17f28:	beq	18780 <main@@Base+0x53c4>
   17f2c:	cmp	r0, #33	; 0x21
   17f30:	bcc	17f3c <main@@Base+0x4b80>
   17f34:	cmp	r0, #58	; 0x3a
   17f38:	bne	1c2b8 <main@@Base+0x8efc>
   17f3c:	ldr	r0, [sp, #32]
   17f40:	mov	r2, #0
   17f44:	str	r2, [r0]
   17f48:	b	1878c <main@@Base+0x53d0>
   17f4c:	mov	r0, r8
   17f50:	mov	r1, r7
   17f54:	mov	r2, r5
   17f58:	mov	r3, #4
   17f5c:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   17f60:	b	19d94 <main@@Base+0x69d8>
   17f64:	bne	17f78 <main@@Base+0x4bbc>
   17f68:	mov	r7, r1
   17f6c:	ldrb	r0, [r7, #1]!
   17f70:	cmp	r0, #32
   17f74:	bhi	17f88 <main@@Base+0x4bcc>
   17f78:	mov	r0, r8
   17f7c:	mov	r2, r5
   17f80:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   17f84:	mov	r7, r0
   17f88:	cmp	r7, r5
   17f8c:	beq	18048 <main@@Base+0x4c8c>
   17f90:	ldrb	r0, [r7]
   17f94:	cmp	r0, #58	; 0x3a
   17f98:	bne	18048 <main@@Base+0x4c8c>
   17f9c:	add	r1, r7, #1
   17fa0:	sub	r0, r5, r1
   17fa4:	cmp	r0, #2
   17fa8:	blt	19ec4 <main@@Base+0x6b08>
   17fac:	ldrb	r0, [r1]
   17fb0:	cmp	r0, #32
   17fb4:	bls	19eac <main@@Base+0x6af0>
   17fb8:	ldr	r5, [sp, #44]	; 0x2c
   17fbc:	ldr	r8, [sp, #40]	; 0x28
   17fc0:	mov	r7, r1
   17fc4:	cmp	sl, r7
   17fc8:	bne	19edc <main@@Base+0x6b20>
   17fcc:	add	r4, r9, #16
   17fd0:	mov	r1, #8
   17fd4:	sub	r0, r5, r4
   17fd8:	cmp	r0, #8
   17fdc:	movcc	r1, r0
   17fe0:	sub	r1, r1, #1
   17fe4:	cmp	r1, #7
   17fe8:	bhi	1803c <main@@Base+0x4c80>
   17fec:	ldrb	r1, [r4]
   17ff0:	cmp	r1, #97	; 0x61
   17ff4:	bne	1803c <main@@Base+0x4c80>
   17ff8:	ldr	sl, [sp, #36]	; 0x24
   17ffc:	cmp	r0, #2
   18000:	blt	1c2b8 <main@@Base+0x8efc>
   18004:	ldr	r2, [sp, #32]
   18008:	mov	r1, r9
   1800c:	ldrb	r0, [r1, #17]!
   18010:	ldr	r2, [r2]
   18014:	cmp	r2, #0
   18018:	beq	187b8 <main@@Base+0x53fc>
   1801c:	cmp	r0, #33	; 0x21
   18020:	bcc	1802c <main@@Base+0x4c70>
   18024:	cmp	r0, #58	; 0x3a
   18028:	bne	1c2b8 <main@@Base+0x8efc>
   1802c:	ldr	r0, [sp, #32]
   18030:	mov	r2, #0
   18034:	str	r2, [r0]
   18038:	b	187c4 <main@@Base+0x5408>
   1803c:	mov	r0, r8
   18040:	mov	r1, r4
   18044:	b	166dc <main@@Base+0x3320>
   18048:	mov	r0, r8
   1804c:	mov	r1, r7
   18050:	mov	r2, r5
   18054:	mov	r3, #4
   18058:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   1805c:	b	19ed0 <main@@Base+0x6b14>
   18060:	mov	r0, r8
   18064:	mov	r1, r4
   18068:	mov	r2, r5
   1806c:	mov	r3, #9
   18070:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   18074:	b	16708 <main@@Base+0x334c>
   18078:	cmp	r0, #34	; 0x22
   1807c:	bne	1c2b8 <main@@Base+0x8efc>
   18080:	add	r1, r9, #18
   18084:	sub	r0, r5, r1
   18088:	cmp	r0, #2
   1808c:	blt	19c3c <main@@Base+0x6880>
   18090:	ldrb	r0, [r1]
   18094:	cmp	r0, #32
   18098:	bls	19c28 <main@@Base+0x686c>
   1809c:	mov	r7, r1
   180a0:	cmp	r7, r5
   180a4:	bne	19c54 <main@@Base+0x6898>
   180a8:	b	19c9c <main@@Base+0x68e0>
   180ac:	bne	180bc <main@@Base+0x4d00>
   180b0:	ldrb	r0, [r7, #2]!
   180b4:	cmp	r0, #32
   180b8:	bhi	180cc <main@@Base+0x4d10>
   180bc:	mov	r0, r8
   180c0:	mov	r2, r5
   180c4:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   180c8:	mov	r7, r0
   180cc:	cmp	sl, r7
   180d0:	beq	15a98 <main@@Base+0x26dc>
   180d4:	mov	r6, #0
   180d8:	cmp	r7, r5
   180dc:	str	r6, [fp, #-52]	; 0xffffffcc
   180e0:	str	r6, [fp, #-56]	; 0xffffffc8
   180e4:	str	r6, [fp, #-60]	; 0xffffffc4
   180e8:	str	r6, [sp, #56]	; 0x38
   180ec:	beq	18154 <main@@Base+0x4d98>
   180f0:	sub	r0, fp, #56	; 0x38
   180f4:	mov	r1, r7
   180f8:	mov	r2, r5
   180fc:	add	r3, sp, #56	; 0x38
   18100:	str	r0, [sp]
   18104:	mov	r0, r8
   18108:	bl	3132c <flatcc_json_parser_integer@@Base>
   1810c:	cmp	r0, r7
   18110:	beq	18168 <main@@Base+0x4dac>
   18114:	ldr	r2, [sp, #56]	; 0x38
   18118:	mov	r4, r0
   1811c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18120:	ldr	r1, [fp, #-52]	; 0xffffffcc
   18124:	cmp	r2, #0
   18128:	beq	1817c <main@@Base+0x4dc0>
   1812c:	ldr	sl, [sp, #36]	; 0x24
   18130:	subs	r2, r0, #-2147483647	; 0x80000001
   18134:	sbcs	r1, r1, #0
   18138:	bcc	181b0 <main@@Base+0x4df4>
   1813c:	mov	r0, r8
   18140:	mov	r1, r4
   18144:	mov	r2, r5
   18148:	mov	r3, #8
   1814c:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   18150:	b	181a0 <main@@Base+0x4de4>
   18154:	ldr	sl, [sp, #36]	; 0x24
   18158:	mov	r4, r5
   1815c:	cmp	r7, r4
   18160:	bne	18aa0 <main@@Base+0x56e4>
   18164:	b	18a6c <main@@Base+0x56b0>
   18168:	ldr	sl, [sp, #36]	; 0x24
   1816c:	mov	r4, r7
   18170:	cmp	r7, r4
   18174:	bne	18aa0 <main@@Base+0x56e4>
   18178:	b	18a6c <main@@Base+0x56b0>
   1817c:	subs	r2, r0, #-2147483648	; 0x80000000
   18180:	sbcs	r1, r1, #0
   18184:	bcc	18a58 <main@@Base+0x569c>
   18188:	mov	r0, r8
   1818c:	mov	r1, r4
   18190:	mov	r2, r5
   18194:	mov	r3, #7
   18198:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   1819c:	ldr	sl, [sp, #36]	; 0x24
   181a0:	mov	r4, r0
   181a4:	cmp	r7, r4
   181a8:	bne	18aa0 <main@@Base+0x56e4>
   181ac:	b	18a6c <main@@Base+0x56b0>
   181b0:	rsb	r6, r0, #0
   181b4:	b	18a60 <main@@Base+0x56a4>
   181b8:	bne	181cc <main@@Base+0x4e10>
   181bc:	mov	r4, r1
   181c0:	ldrb	r0, [r4, #1]!
   181c4:	cmp	r0, #32
   181c8:	bhi	181dc <main@@Base+0x4e20>
   181cc:	mov	r0, r8
   181d0:	mov	r2, r5
   181d4:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   181d8:	mov	r4, r0
   181dc:	cmp	r4, r5
   181e0:	beq	18228 <main@@Base+0x4e6c>
   181e4:	ldrb	r0, [r4]
   181e8:	cmp	r0, #58	; 0x3a
   181ec:	bne	18228 <main@@Base+0x4e6c>
   181f0:	add	r1, r4, #1
   181f4:	sub	r0, r5, r1
   181f8:	cmp	r0, #2
   181fc:	blt	1a028 <main@@Base+0x6c6c>
   18200:	ldrb	r0, [r1]
   18204:	cmp	r0, #32
   18208:	bls	1a00c <main@@Base+0x6c50>
   1820c:	ldr	r5, [sp, #44]	; 0x2c
   18210:	ldr	r8, [sp, #40]	; 0x28
   18214:	ldr	sl, [sp, #36]	; 0x24
   18218:	mov	r4, r1
   1821c:	cmp	r7, r4
   18220:	bne	1a040 <main@@Base+0x6c84>
   18224:	b	1b848 <main@@Base+0x848c>
   18228:	mov	r0, r8
   1822c:	mov	r1, r4
   18230:	mov	r2, r5
   18234:	mov	r3, #4
   18238:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   1823c:	b	1a034 <main@@Base+0x6c78>
   18240:	bne	18254 <main@@Base+0x4e98>
   18244:	mov	r4, r1
   18248:	ldrb	r0, [r4, #1]!
   1824c:	cmp	r0, #32
   18250:	bhi	18264 <main@@Base+0x4ea8>
   18254:	mov	r0, r8
   18258:	mov	r2, r5
   1825c:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   18260:	mov	r4, r0
   18264:	cmp	r4, r5
   18268:	beq	182b0 <main@@Base+0x4ef4>
   1826c:	ldrb	r0, [r4]
   18270:	cmp	r0, #58	; 0x3a
   18274:	bne	182b0 <main@@Base+0x4ef4>
   18278:	add	r1, r4, #1
   1827c:	sub	r0, r5, r1
   18280:	cmp	r0, #2
   18284:	blt	1a0e0 <main@@Base+0x6d24>
   18288:	ldrb	r0, [r1]
   1828c:	cmp	r0, #32
   18290:	bls	1a0c4 <main@@Base+0x6d08>
   18294:	ldr	r5, [sp, #44]	; 0x2c
   18298:	ldr	r8, [sp, #40]	; 0x28
   1829c:	ldr	sl, [sp, #36]	; 0x24
   182a0:	mov	r4, r1
   182a4:	cmp	r7, r4
   182a8:	bne	1a0f8 <main@@Base+0x6d3c>
   182ac:	b	1b848 <main@@Base+0x848c>
   182b0:	mov	r0, r8
   182b4:	mov	r1, r4
   182b8:	mov	r2, r5
   182bc:	mov	r3, #4
   182c0:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   182c4:	b	1a0ec <main@@Base+0x6d30>
   182c8:	bne	182dc <main@@Base+0x4f20>
   182cc:	mov	r4, r1
   182d0:	ldrb	r0, [r4, #1]!
   182d4:	cmp	r0, #32
   182d8:	bhi	182ec <main@@Base+0x4f30>
   182dc:	mov	r0, r8
   182e0:	mov	r2, r5
   182e4:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   182e8:	mov	r4, r0
   182ec:	cmp	r4, r5
   182f0:	beq	18338 <main@@Base+0x4f7c>
   182f4:	ldrb	r0, [r4]
   182f8:	cmp	r0, #58	; 0x3a
   182fc:	bne	18338 <main@@Base+0x4f7c>
   18300:	add	r1, r4, #1
   18304:	sub	r0, r5, r1
   18308:	cmp	r0, #2
   1830c:	blt	1a1b8 <main@@Base+0x6dfc>
   18310:	ldrb	r0, [r1]
   18314:	cmp	r0, #32
   18318:	bls	1a19c <main@@Base+0x6de0>
   1831c:	ldr	r5, [sp, #44]	; 0x2c
   18320:	ldr	r8, [sp, #40]	; 0x28
   18324:	ldr	sl, [sp, #36]	; 0x24
   18328:	mov	r4, r1
   1832c:	cmp	r7, r4
   18330:	bne	1a1d0 <main@@Base+0x6e14>
   18334:	b	1b848 <main@@Base+0x848c>
   18338:	mov	r0, r8
   1833c:	mov	r1, r4
   18340:	mov	r2, r5
   18344:	mov	r3, #4
   18348:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   1834c:	b	1a1c4 <main@@Base+0x6e08>
   18350:	bne	18360 <main@@Base+0x4fa4>
   18354:	ldrb	r0, [r4, #2]!
   18358:	cmp	r0, #32
   1835c:	bhi	18370 <main@@Base+0x4fb4>
   18360:	mov	r0, r8
   18364:	mov	r2, r5
   18368:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1836c:	mov	r4, r0
   18370:	cmp	r4, r5
   18374:	mov	r6, r5
   18378:	beq	1838c <main@@Base+0x4fd0>
   1837c:	ldrb	r0, [r4]
   18380:	cmp	r0, #93	; 0x5d
   18384:	beq	18fd0 <main@@Base+0x5c14>
   18388:	mov	r6, r4
   1838c:	mov	r0, #0
   18390:	mov	r1, #1
   18394:	strb	r0, [fp, #-60]	; 0xffffffc4
   18398:	ldr	r0, [r8]
   1839c:	bl	2ab30 <flatcc_builder_extend_vector@@Base>
   183a0:	cmp	r0, #0
   183a4:	beq	1d5b4 <main@@Base+0xa1f8>
   183a8:	mov	r7, r0
   183ac:	mov	r4, r6
   183b0:	sub	r6, r5, r4
   183b4:	cmp	r6, #4
   183b8:	blt	183fc <main@@Base+0x5040>
   183bc:	ldr	r1, [pc, #4060]	; 193a0 <main@@Base+0x5fe4>
   183c0:	mov	r0, r4
   183c4:	mov	r2, #4
   183c8:	add	r1, pc, r1
   183cc:	bl	12b2c <bcmp@plt>
   183d0:	cmp	r0, #0
   183d4:	beq	18460 <main@@Base+0x50a4>
   183d8:	cmp	r6, #5
   183dc:	blt	183fc <main@@Base+0x5040>
   183e0:	ldr	r1, [pc, #4080]	; 193d8 <main@@Base+0x601c>
   183e4:	mov	r0, r4
   183e8:	mov	r2, #5
   183ec:	add	r1, pc, r1
   183f0:	bl	12b2c <bcmp@plt>
   183f4:	cmp	r0, #0
   183f8:	beq	185d4 <main@@Base+0x5218>
   183fc:	mov	r6, #0
   18400:	cmp	r4, r5
   18404:	str	r6, [fp, #-52]	; 0xffffffcc
   18408:	str	r6, [fp, #-56]	; 0xffffffc8
   1840c:	str	r6, [sp, #56]	; 0x38
   18410:	beq	18458 <main@@Base+0x509c>
   18414:	sub	r0, fp, #56	; 0x38
   18418:	mov	r1, r4
   1841c:	mov	r2, r5
   18420:	add	r3, sp, #56	; 0x38
   18424:	str	r0, [sp]
   18428:	mov	r0, r8
   1842c:	bl	3132c <flatcc_json_parser_integer@@Base>
   18430:	cmp	r0, r4
   18434:	beq	1846c <main@@Base+0x50b0>
   18438:	mov	r1, r0
   1843c:	ldr	r0, [sp, #56]	; 0x38
   18440:	cmp	r0, #0
   18444:	beq	18474 <main@@Base+0x50b8>
   18448:	mov	r0, r8
   1844c:	mov	r2, r5
   18450:	mov	r3, #8
   18454:	b	18494 <main@@Base+0x50d8>
   18458:	mov	r1, r5
   1845c:	b	1849c <main@@Base+0x50e0>
   18460:	mov	r0, #1
   18464:	add	r1, r4, #4
   18468:	b	184a8 <main@@Base+0x50ec>
   1846c:	mov	r1, r4
   18470:	b	1849c <main@@Base+0x50e0>
   18474:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18478:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1847c:	subs	r3, r0, #256	; 0x100
   18480:	sbcs	r2, r2, #0
   18484:	bcc	185e0 <main@@Base+0x5224>
   18488:	mov	r0, r8
   1848c:	mov	r2, r5
   18490:	mov	r3, #7
   18494:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   18498:	mov	r1, r0
   1849c:	uxtb	r0, r6
   184a0:	cmp	r0, #0
   184a4:	movwne	r0, #1
   184a8:	strb	r0, [fp, #-60]	; 0xffffffc4
   184ac:	cmp	r4, r1
   184b0:	bne	184ec <main@@Base+0x5130>
   184b4:	sub	r0, fp, #60	; 0x3c
   184b8:	mov	r1, r4
   184bc:	mov	r2, r5
   184c0:	str	r0, [sp]
   184c4:	mov	r0, r8
   184c8:	ldr	r3, [pc, #4000]	; 19470 <main@@Base+0x60b4>
   184cc:	add	r3, pc, r3
   184d0:	bl	22f80 <main@@Base+0xfbc4>
   184d4:	mov	r1, r0
   184d8:	cmp	r0, r4
   184dc:	beq	1d5c0 <main@@Base+0xa204>
   184e0:	cmp	r1, r5
   184e4:	beq	1d5c0 <main@@Base+0xa204>
   184e8:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   184ec:	strb	r0, [r7]
   184f0:	sub	r0, r5, r1
   184f4:	cmp	r0, #2
   184f8:	blt	1852c <main@@Base+0x5170>
   184fc:	ldrb	r0, [r1]
   18500:	cmp	r0, #32
   18504:	bls	18518 <main@@Base+0x515c>
   18508:	mov	r4, r1
   1850c:	cmp	r4, r5
   18510:	bne	18544 <main@@Base+0x5188>
   18514:	b	18fb4 <main@@Base+0x5bf8>
   18518:	bne	1852c <main@@Base+0x5170>
   1851c:	mov	r4, r1
   18520:	ldrb	r0, [r4, #1]!
   18524:	cmp	r0, #32
   18528:	bhi	1853c <main@@Base+0x5180>
   1852c:	mov	r0, r8
   18530:	mov	r2, r5
   18534:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   18538:	mov	r4, r0
   1853c:	cmp	r4, r5
   18540:	beq	18fb4 <main@@Base+0x5bf8>
   18544:	ldrb	r0, [r4]
   18548:	cmp	r0, #44	; 0x2c
   1854c:	bne	18fbc <main@@Base+0x5c00>
   18550:	add	r1, r4, #1
   18554:	sub	r0, r5, r1
   18558:	cmp	r0, #2
   1855c:	blt	1858c <main@@Base+0x51d0>
   18560:	ldrb	r0, [r1]
   18564:	cmp	r0, #32
   18568:	bls	1857c <main@@Base+0x51c0>
   1856c:	mov	r4, r1
   18570:	cmp	r4, r5
   18574:	bne	185a4 <main@@Base+0x51e8>
   18578:	b	190b4 <main@@Base+0x5cf8>
   1857c:	bne	1858c <main@@Base+0x51d0>
   18580:	ldrb	r0, [r4, #2]!
   18584:	cmp	r0, #32
   18588:	bhi	1859c <main@@Base+0x51e0>
   1858c:	mov	r0, r8
   18590:	mov	r2, r5
   18594:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   18598:	mov	r4, r0
   1859c:	cmp	r4, r5
   185a0:	beq	190b4 <main@@Base+0x5cf8>
   185a4:	ldrb	r0, [r4]
   185a8:	cmp	r0, #93	; 0x5d
   185ac:	beq	18fd0 <main@@Base+0x5c14>
   185b0:	mov	r0, #0
   185b4:	mov	r1, #1
   185b8:	strb	r0, [fp, #-60]	; 0xffffffc4
   185bc:	ldr	r0, [r8]
   185c0:	bl	2ab30 <flatcc_builder_extend_vector@@Base>
   185c4:	mov	r7, r0
   185c8:	cmp	r0, #0
   185cc:	bne	183b0 <main@@Base+0x4ff4>
   185d0:	b	13488 <main@@Base+0xcc>
   185d4:	mov	r0, #0
   185d8:	add	r1, r4, #5
   185dc:	b	184a8 <main@@Base+0x50ec>
   185e0:	mov	r6, r0
   185e4:	b	1849c <main@@Base+0x50e0>
   185e8:	bne	185fc <main@@Base+0x5240>
   185ec:	mov	r4, r1
   185f0:	ldrb	r0, [r4, #1]!
   185f4:	cmp	r0, #32
   185f8:	bhi	1860c <main@@Base+0x5250>
   185fc:	mov	r0, r8
   18600:	mov	r2, r5
   18604:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   18608:	mov	r4, r0
   1860c:	cmp	r4, r5
   18610:	beq	18654 <main@@Base+0x5298>
   18614:	ldrb	r0, [r4]
   18618:	cmp	r0, #58	; 0x3a
   1861c:	bne	18654 <main@@Base+0x5298>
   18620:	add	r1, r4, #1
   18624:	sub	r0, r5, r1
   18628:	cmp	r0, #2
   1862c:	blt	1a2b0 <main@@Base+0x6ef4>
   18630:	ldrb	r0, [r1]
   18634:	cmp	r0, #32
   18638:	bls	1a298 <main@@Base+0x6edc>
   1863c:	ldr	r5, [sp, #44]	; 0x2c
   18640:	ldr	r8, [sp, #40]	; 0x28
   18644:	mov	r4, r1
   18648:	cmp	sl, r4
   1864c:	bne	1a2c8 <main@@Base+0x6f0c>
   18650:	b	15804 <main@@Base+0x2448>
   18654:	mov	r0, r8
   18658:	mov	r1, r4
   1865c:	mov	r2, r5
   18660:	mov	r3, #4
   18664:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   18668:	b	1a2bc <main@@Base+0x6f00>
   1866c:	bne	18680 <main@@Base+0x52c4>
   18670:	mov	r4, r1
   18674:	ldrb	r0, [r4, #1]!
   18678:	cmp	r0, #32
   1867c:	bhi	18690 <main@@Base+0x52d4>
   18680:	mov	r0, r8
   18684:	mov	r2, r5
   18688:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1868c:	mov	r4, r0
   18690:	cmp	r4, r5
   18694:	beq	186dc <main@@Base+0x5320>
   18698:	ldrb	r0, [r4]
   1869c:	cmp	r0, #58	; 0x3a
   186a0:	bne	186dc <main@@Base+0x5320>
   186a4:	add	r1, r4, #1
   186a8:	sub	r0, r5, r1
   186ac:	cmp	r0, #2
   186b0:	blt	1a490 <main@@Base+0x70d4>
   186b4:	ldrb	r0, [r1]
   186b8:	cmp	r0, #32
   186bc:	bls	1a474 <main@@Base+0x70b8>
   186c0:	ldr	r5, [sp, #44]	; 0x2c
   186c4:	ldr	r8, [sp, #40]	; 0x28
   186c8:	ldr	sl, [sp, #36]	; 0x24
   186cc:	mov	r4, r1
   186d0:	cmp	r7, r4
   186d4:	bne	1a4a8 <main@@Base+0x70ec>
   186d8:	b	1b848 <main@@Base+0x848c>
   186dc:	mov	r0, r8
   186e0:	mov	r1, r4
   186e4:	mov	r2, r5
   186e8:	mov	r3, #4
   186ec:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   186f0:	b	1a49c <main@@Base+0x70e0>
   186f4:	bne	18708 <main@@Base+0x534c>
   186f8:	mov	r7, r1
   186fc:	ldrb	r0, [r7, #1]!
   18700:	cmp	r0, #32
   18704:	bhi	18718 <main@@Base+0x535c>
   18708:	mov	r0, r8
   1870c:	mov	r2, r5
   18710:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   18714:	mov	r7, r0
   18718:	cmp	r7, r5
   1871c:	beq	18764 <main@@Base+0x53a8>
   18720:	ldrb	r0, [r7]
   18724:	cmp	r0, #58	; 0x3a
   18728:	bne	18764 <main@@Base+0x53a8>
   1872c:	add	r1, r7, #1
   18730:	sub	r0, r5, r1
   18734:	cmp	r0, #2
   18738:	blt	1a58c <main@@Base+0x71d0>
   1873c:	ldrb	r0, [r1]
   18740:	cmp	r0, #32
   18744:	bls	1a570 <main@@Base+0x71b4>
   18748:	ldr	r5, [sp, #44]	; 0x2c
   1874c:	ldr	r8, [sp, #40]	; 0x28
   18750:	ldr	sl, [sp, #36]	; 0x24
   18754:	mov	r7, r1
   18758:	cmp	r4, r7
   1875c:	bne	1a5a4 <main@@Base+0x71e8>
   18760:	b	1c2b8 <main@@Base+0x8efc>
   18764:	mov	r0, r8
   18768:	mov	r1, r7
   1876c:	mov	r2, r5
   18770:	mov	r3, #4
   18774:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   18778:	b	1a598 <main@@Base+0x71dc>
   1877c:	andeq	lr, r2, r8, lsl #20
   18780:	cmp	r0, #34	; 0x22
   18784:	bne	1c2b8 <main@@Base+0x8efc>
   18788:	add	r1, r9, #18
   1878c:	sub	r0, r5, r1
   18790:	cmp	r0, #2
   18794:	blt	1a37c <main@@Base+0x6fc0>
   18798:	ldrb	r0, [r1]
   1879c:	cmp	r0, #32
   187a0:	bls	1a364 <main@@Base+0x6fa8>
   187a4:	ldr	r5, [sp, #44]	; 0x2c
   187a8:	mov	r7, r1
   187ac:	cmp	r7, r5
   187b0:	bne	1a394 <main@@Base+0x6fd8>
   187b4:	b	1a3d0 <main@@Base+0x7014>
   187b8:	cmp	r0, #34	; 0x22
   187bc:	bne	1c2b8 <main@@Base+0x8efc>
   187c0:	add	r1, r9, #18
   187c4:	sub	r0, r5, r1
   187c8:	cmp	r0, #2
   187cc:	blt	1a404 <main@@Base+0x7048>
   187d0:	ldrb	r0, [r1]
   187d4:	cmp	r0, #32
   187d8:	bls	1a3ec <main@@Base+0x7030>
   187dc:	ldr	r5, [sp, #44]	; 0x2c
   187e0:	mov	r7, r1
   187e4:	cmp	r7, r5
   187e8:	bne	1a41c <main@@Base+0x7060>
   187ec:	b	1a458 <main@@Base+0x709c>
   187f0:	andeq	lr, r2, r4, ror r9
   187f4:	bne	18804 <main@@Base+0x5448>
   187f8:	ldrb	r0, [r4, #2]!
   187fc:	cmp	r0, #32
   18800:	bhi	18814 <main@@Base+0x5458>
   18804:	mov	r0, r8
   18808:	mov	r2, r5
   1880c:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   18810:	mov	r4, r0
   18814:	cmp	r7, r4
   18818:	beq	1b848 <main@@Base+0x848c>
   1881c:	mov	r0, #0
   18820:	mov	r1, #3
   18824:	str	r0, [sp, #52]	; 0x34
   18828:	ldr	r0, [r8]
   1882c:	bl	2bc04 <flatcc_builder_start_table@@Base>
   18830:	cmp	r0, #0
   18834:	bne	18898 <main@@Base+0x54dc>
   18838:	cmp	r4, r5
   1883c:	beq	18874 <main@@Base+0x54b8>
   18840:	ldrb	r0, [r4]
   18844:	cmp	r0, #123	; 0x7b
   18848:	bne	18874 <main@@Base+0x54b8>
   1884c:	add	r1, r4, #1
   18850:	sub	r0, r5, r1
   18854:	cmp	r0, #2
   18858:	blt	1adb0 <main@@Base+0x79f4>
   1885c:	ldrb	r0, [r1]
   18860:	cmp	r0, #32
   18864:	bls	1ad98 <main@@Base+0x79dc>
   18868:	ldr	r5, [sp, #44]	; 0x2c
   1886c:	mov	r4, r1
   18870:	b	1adc0 <main@@Base+0x7a04>
   18874:	mov	r0, r8
   18878:	mov	r1, r4
   1887c:	mov	r2, r5
   18880:	mov	r3, #21
   18884:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   18888:	mov	r4, r0
   1888c:	ldr	r0, [r8, #24]
   18890:	cmp	r0, #0
   18894:	beq	188c8 <main@@Base+0x550c>
   18898:	mov	r0, r8
   1889c:	mov	r1, r4
   188a0:	mov	r2, r5
   188a4:	mov	r3, #33	; 0x21
   188a8:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   188ac:	mov	r4, r0
   188b0:	ldr	r0, [sp, #52]	; 0x34
   188b4:	cmp	r0, #0
   188b8:	beq	13488 <main@@Base+0xcc>
   188bc:	ldr	r0, [r8]
   188c0:	mov	r1, #35	; 0x23
   188c4:	b	15ec8 <main@@Base+0x2b0c>
   188c8:	ldr	r0, [r8]
   188cc:	bl	2c62c <flatcc_builder_end_table@@Base>
   188d0:	cmp	r0, #0
   188d4:	str	r0, [sp, #52]	; 0x34
   188d8:	bne	188bc <main@@Base+0x5500>
   188dc:	b	18898 <main@@Base+0x54dc>
   188e0:	mov	r0, r8
   188e4:	mov	r1, r2
   188e8:	mov	r2, r5
   188ec:	mov	r3, #10
   188f0:	b	16f0c <main@@Base+0x3b50>
   188f4:	bne	18904 <main@@Base+0x5548>
   188f8:	ldrb	r0, [r4, #2]!
   188fc:	cmp	r0, #32
   18900:	bhi	18914 <main@@Base+0x5558>
   18904:	mov	r0, r8
   18908:	mov	r2, r5
   1890c:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   18910:	mov	r4, r0
   18914:	cmp	r7, r4
   18918:	beq	1b848 <main@@Base+0x848c>
   1891c:	ldr	r0, [r8]
   18920:	bl	2b780 <flatcc_builder_start_offset_vector@@Base>
   18924:	cmp	r0, #0
   18928:	bne	13488 <main@@Base+0xcc>
   1892c:	cmp	r4, r5
   18930:	beq	18964 <main@@Base+0x55a8>
   18934:	ldrb	r0, [r4]
   18938:	cmp	r0, #91	; 0x5b
   1893c:	bne	18964 <main@@Base+0x55a8>
   18940:	add	r1, r4, #1
   18944:	sub	r0, r5, r1
   18948:	cmp	r0, #2
   1894c:	blt	190d8 <main@@Base+0x5d1c>
   18950:	ldrb	r0, [r1]
   18954:	cmp	r0, #32
   18958:	bls	190c8 <main@@Base+0x5d0c>
   1895c:	mov	r4, r1
   18960:	b	190e8 <main@@Base+0x5d2c>
   18964:	mov	r0, r8
   18968:	mov	r1, r4
   1896c:	mov	r2, r5
   18970:	mov	r3, #22
   18974:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   18978:	mov	r4, r0
   1897c:	ldr	r0, [r8]
   18980:	bl	2b968 <flatcc_builder_end_offset_vector@@Base>
   18984:	cmp	r0, #0
   18988:	str	r0, [sp, #52]	; 0x34
   1898c:	beq	13488 <main@@Base+0xcc>
   18990:	ldr	r0, [r8]
   18994:	mov	r1, #28
   18998:	b	15ec8 <main@@Base+0x2b0c>
   1899c:	bne	189ac <main@@Base+0x55f0>
   189a0:	ldrb	r0, [r7, #2]!
   189a4:	cmp	r0, #32
   189a8:	bhi	189bc <main@@Base+0x5600>
   189ac:	mov	r0, r8
   189b0:	mov	r2, r5
   189b4:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   189b8:	mov	r7, r0
   189bc:	cmp	sl, r7
   189c0:	beq	15804 <main@@Base+0x2448>
   189c4:	ldr	r0, [r8]
   189c8:	mov	r1, #8
   189cc:	mov	r2, #4
   189d0:	mvn	r3, #-536870912	; 0xe0000000
   189d4:	bl	2b6f4 <flatcc_builder_start_vector@@Base>
   189d8:	cmp	r0, #0
   189dc:	bne	1d5ac <main@@Base+0xa1f0>
   189e0:	ldr	sl, [sp, #36]	; 0x24
   189e4:	cmp	r7, r5
   189e8:	beq	18a1c <main@@Base+0x5660>
   189ec:	ldrb	r0, [r7]
   189f0:	cmp	r0, #91	; 0x5b
   189f4:	bne	18a1c <main@@Base+0x5660>
   189f8:	add	r1, r7, #1
   189fc:	sub	r0, r5, r1
   18a00:	cmp	r0, #2
   18a04:	blt	19258 <main@@Base+0x5e9c>
   18a08:	ldrb	r0, [r1]
   18a0c:	cmp	r0, #32
   18a10:	bls	19248 <main@@Base+0x5e8c>
   18a14:	mov	r7, r1
   18a18:	b	19268 <main@@Base+0x5eac>
   18a1c:	mov	r0, r8
   18a20:	mov	r1, r7
   18a24:	mov	r2, r5
   18a28:	mov	r3, #22
   18a2c:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   18a30:	mov	r7, r0
   18a34:	ldr	r0, [r8]
   18a38:	bl	2c96c <flatcc_builder_end_vector@@Base>
   18a3c:	cmp	r0, #0
   18a40:	str	r0, [sp, #52]	; 0x34
   18a44:	beq	1d5ac <main@@Base+0xa1f0>
   18a48:	ldr	r0, [r8]
   18a4c:	mov	r1, #29
   18a50:	b	16728 <main@@Base+0x336c>
   18a54:	andeq	lr, r2, r8, asr #14
   18a58:	ldr	sl, [sp, #36]	; 0x24
   18a5c:	mov	r6, r0
   18a60:	str	r6, [fp, #-60]	; 0xffffffc4
   18a64:	cmp	r7, r4
   18a68:	bne	18aa0 <main@@Base+0x56e4>
   18a6c:	sub	r0, fp, #60	; 0x3c
   18a70:	mov	r1, r7
   18a74:	mov	r2, r5
   18a78:	str	r0, [sp]
   18a7c:	mov	r0, r8
   18a80:	ldr	r3, [pc, #4080]	; 19a78 <main@@Base+0x66bc>
   18a84:	add	r3, pc, r3
   18a88:	bl	2336c <main@@Base+0xffb0>
   18a8c:	mov	r4, r0
   18a90:	cmp	r0, r7
   18a94:	cmpne	r4, r5
   18a98:	beq	1d604 <main@@Base+0xa248>
   18a9c:	ldr	r6, [fp, #-60]	; 0xffffffc4
   18aa0:	cmp	r6, #0
   18aa4:	bne	18ab4 <main@@Base+0x56f8>
   18aa8:	ldrb	r0, [r8, #8]
   18aac:	tst	r0, #2
   18ab0:	beq	1c2cc <main@@Base+0x8f10>
   18ab4:	ldr	r0, [r8]
   18ab8:	mov	r1, #16
   18abc:	b	1b928 <main@@Base+0x856c>
   18ac0:			; <UNDEFINED> instruction: 0x0002e6b8
   18ac4:	bne	18ad4 <main@@Base+0x5718>
   18ac8:	ldrb	r0, [r7, #2]!
   18acc:	cmp	r0, #32
   18ad0:	bhi	18ae4 <main@@Base+0x5728>
   18ad4:	mov	r0, r8
   18ad8:	mov	r2, r5
   18adc:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   18ae0:	mov	r7, r0
   18ae4:	cmp	r9, r7
   18ae8:	beq	1494c <main@@Base+0x1590>
   18aec:	mov	r6, #0
   18af0:	cmp	r7, r5
   18af4:	str	r6, [fp, #-52]	; 0xffffffcc
   18af8:	str	r6, [fp, #-56]	; 0xffffffc8
   18afc:	strh	r6, [fp, #-60]	; 0xffffffc4
   18b00:	str	r6, [sp, #56]	; 0x38
   18b04:	beq	18b68 <main@@Base+0x57ac>
   18b08:	sub	r0, fp, #56	; 0x38
   18b0c:	mov	r1, r7
   18b10:	mov	r2, r5
   18b14:	add	r3, sp, #56	; 0x38
   18b18:	str	r0, [sp]
   18b1c:	mov	r0, r8
   18b20:	bl	3132c <flatcc_json_parser_integer@@Base>
   18b24:	cmp	r0, r7
   18b28:	beq	18b78 <main@@Base+0x57bc>
   18b2c:	ldr	r2, [sp, #56]	; 0x38
   18b30:	mov	r4, r0
   18b34:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18b38:	ldr	r1, [fp, #-52]	; 0xffffffcc
   18b3c:	cmp	r2, #0
   18b40:	beq	18b8c <main@@Base+0x57d0>
   18b44:	movw	r2, #32769	; 0x8001
   18b48:	subs	r2, r0, r2
   18b4c:	sbcs	r1, r1, #0
   18b50:	bcc	18bbc <main@@Base+0x5800>
   18b54:	mov	r0, r8
   18b58:	mov	r1, r4
   18b5c:	mov	r2, r5
   18b60:	mov	r3, #8
   18b64:	b	18ba8 <main@@Base+0x57ec>
   18b68:	mov	r4, r5
   18b6c:	cmp	r7, r4
   18b70:	bne	18c08 <main@@Base+0x584c>
   18b74:	b	18bd4 <main@@Base+0x5818>
   18b78:	mov	r4, r7
   18b7c:	cmp	r7, r4
   18b80:	bne	18c08 <main@@Base+0x584c>
   18b84:	b	18bd4 <main@@Base+0x5818>
   18b88:	andeq	lr, r2, r4, lsr #12
   18b8c:	subs	r2, r0, #32768	; 0x8000
   18b90:	sbcs	r1, r1, #0
   18b94:	bcc	18bc4 <main@@Base+0x5808>
   18b98:	mov	r0, r8
   18b9c:	mov	r1, r4
   18ba0:	mov	r2, r5
   18ba4:	mov	r3, #7
   18ba8:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   18bac:	mov	r4, r0
   18bb0:	cmp	r7, r4
   18bb4:	bne	18c08 <main@@Base+0x584c>
   18bb8:	b	18bd4 <main@@Base+0x5818>
   18bbc:	rsb	r6, r0, #0
   18bc0:	b	18bc8 <main@@Base+0x580c>
   18bc4:	mov	r6, r0
   18bc8:	strh	r6, [fp, #-60]	; 0xffffffc4
   18bcc:	cmp	r7, r4
   18bd0:	bne	18c08 <main@@Base+0x584c>
   18bd4:	sub	r0, fp, #60	; 0x3c
   18bd8:	mov	r1, r7
   18bdc:	mov	r2, r5
   18be0:	str	r0, [sp]
   18be4:	mov	r0, r8
   18be8:	ldr	r3, [pc, #4040]	; 19bb8 <main@@Base+0x67fc>
   18bec:	add	r3, pc, r3
   18bf0:	bl	1ef5c <main@@Base+0xbba0>
   18bf4:	mov	r4, r0
   18bf8:	cmp	r0, r7
   18bfc:	cmpne	r4, r5
   18c00:	beq	1d604 <main@@Base+0xa248>
   18c04:	ldrh	r6, [fp, #-60]	; 0xffffffc4
   18c08:	uxth	r0, r6
   18c0c:	cmp	r0, #150	; 0x96
   18c10:	bne	18c20 <main@@Base+0x5864>
   18c14:	ldrb	r0, [r8, #8]
   18c18:	tst	r0, #2
   18c1c:	beq	1c2cc <main@@Base+0x8f10>
   18c20:	ldr	r0, [r8]
   18c24:	mov	r1, #1
   18c28:	mov	r2, #2
   18c2c:	mov	r3, #2
   18c30:	bl	2d0a0 <flatcc_builder_table_add@@Base>
   18c34:	cmp	r0, #0
   18c38:	beq	1d604 <main@@Base+0xa248>
   18c3c:	strh	r6, [r0]
   18c40:	b	1c2cc <main@@Base+0x8f10>
   18c44:	bne	18c54 <main@@Base+0x5898>
   18c48:	ldrb	r0, [r7, #2]!
   18c4c:	cmp	r0, #32
   18c50:	bhi	18c64 <main@@Base+0x58a8>
   18c54:	mov	r0, r8
   18c58:	mov	r2, r5
   18c5c:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   18c60:	mov	r7, r0
   18c64:	cmp	r9, r7
   18c68:	beq	1494c <main@@Base+0x1590>
   18c6c:	mov	r0, #0
   18c70:	mov	r1, r7
   18c74:	mov	r2, r5
   18c78:	sub	r3, fp, #56	; 0x38
   18c7c:	str	r0, [fp, #-56]	; 0xffffffc8
   18c80:	mov	r0, r8
   18c84:	bl	311e8 <flatcc_json_parser_float@@Base>
   18c88:	mov	r4, r0
   18c8c:	cmp	r7, r0
   18c90:	bne	18cc4 <main@@Base+0x5908>
   18c94:	sub	r0, fp, #56	; 0x38
   18c98:	mov	r1, r7
   18c9c:	mov	r2, r5
   18ca0:	str	r0, [sp]
   18ca4:	mov	r0, r8
   18ca8:	ldr	r3, [pc, #4072]	; 19c98 <main@@Base+0x68dc>
   18cac:	add	r3, pc, r3
   18cb0:	bl	23194 <main@@Base+0xfdd8>
   18cb4:	mov	r4, r0
   18cb8:	cmp	r0, r7
   18cbc:	cmpne	r4, r5
   18cc0:	beq	13488 <main@@Base+0xcc>
   18cc4:	vldr	s0, [fp, #-56]	; 0xffffffc8
   18cc8:	vcmp.f32	s0, s18
   18ccc:	vmrs	APSR_nzcv, fpscr
   18cd0:	bne	18ce0 <main@@Base+0x5924>
   18cd4:	ldrb	r0, [r8, #8]
   18cd8:	tst	r0, #2
   18cdc:	beq	1c2cc <main@@Base+0x8f10>
   18ce0:	ldr	r0, [r8]
   18ce4:	mov	r1, #25
   18ce8:	b	154f4 <main@@Base+0x2138>
   18cec:	bne	18cfc <main@@Base+0x5940>
   18cf0:	ldrb	r0, [r7, #2]!
   18cf4:	cmp	r0, #32
   18cf8:	bhi	18d0c <main@@Base+0x5950>
   18cfc:	mov	r0, r8
   18d00:	mov	r2, r5
   18d04:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   18d08:	mov	r7, r0
   18d0c:	cmp	sl, r7
   18d10:	beq	1653c <main@@Base+0x3180>
   18d14:	mov	r6, #0
   18d18:	cmp	r7, r5
   18d1c:	str	r6, [fp, #-52]	; 0xffffffcc
   18d20:	str	r6, [fp, #-56]	; 0xffffffc8
   18d24:	str	r6, [sp, #60]	; 0x3c
   18d28:	str	r6, [sp, #56]	; 0x38
   18d2c:	str	r6, [fp, #-60]	; 0xffffffc4
   18d30:	beq	18d8c <main@@Base+0x59d0>
   18d34:	sub	r0, fp, #56	; 0x38
   18d38:	mov	r1, r7
   18d3c:	mov	r2, r5
   18d40:	sub	r3, fp, #60	; 0x3c
   18d44:	str	r0, [sp]
   18d48:	mov	r0, r8
   18d4c:	bl	3132c <flatcc_json_parser_integer@@Base>
   18d50:	cmp	r0, r7
   18d54:	beq	18d98 <main@@Base+0x59dc>
   18d58:	sub	r9, fp, #60	; 0x3c
   18d5c:	mov	r4, r0
   18d60:	ldm	r9, {r0, r6, r9}
   18d64:	cmp	r0, #0
   18d68:	beq	18dac <main@@Base+0x59f0>
   18d6c:	subs	r0, r6, #1
   18d70:	sbcs	r0, r9, #-2147483648	; 0x80000000
   18d74:	bcc	18dd8 <main@@Base+0x5a1c>
   18d78:	mov	r0, r8
   18d7c:	mov	r1, r4
   18d80:	mov	r2, r5
   18d84:	mov	r3, #8
   18d88:	b	18dc4 <main@@Base+0x5a08>
   18d8c:	mov	r9, #0
   18d90:	mov	r4, r5
   18d94:	b	18de8 <main@@Base+0x5a2c>
   18d98:	mov	r6, #0
   18d9c:	mov	r9, #0
   18da0:	mov	r4, r7
   18da4:	b	18de8 <main@@Base+0x5a2c>
   18da8:	andeq	lr, r2, r4, asr r3
   18dac:	cmn	r9, #1
   18db0:	bgt	18de0 <main@@Base+0x5a24>
   18db4:	mov	r0, r8
   18db8:	mov	r1, r4
   18dbc:	mov	r2, r5
   18dc0:	mov	r3, #7
   18dc4:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   18dc8:	mov	r4, r0
   18dcc:	mov	r6, #0
   18dd0:	mov	r9, #0
   18dd4:	b	18de8 <main@@Base+0x5a2c>
   18dd8:	rsbs	r6, r6, #0
   18ddc:	rsc	r9, r9, #0
   18de0:	str	r6, [sp, #56]	; 0x38
   18de4:	str	r9, [sp, #60]	; 0x3c
   18de8:	ldr	sl, [sp, #36]	; 0x24
   18dec:	cmp	r7, r4
   18df0:	bne	18e2c <main@@Base+0x5a70>
   18df4:	add	r0, sp, #56	; 0x38
   18df8:	mov	r1, r7
   18dfc:	mov	r2, r5
   18e00:	str	r0, [sp]
   18e04:	mov	r0, r8
   18e08:	ldr	r3, [pc, #4088]	; 19e08 <main@@Base+0x6a4c>
   18e0c:	add	r3, pc, r3
   18e10:	bl	235b8 <main@@Base+0x101fc>
   18e14:	mov	r4, r0
   18e18:	cmp	r0, r7
   18e1c:	cmpne	r4, r5
   18e20:	beq	1d604 <main@@Base+0xa248>
   18e24:	ldr	r6, [sp, #56]	; 0x38
   18e28:	ldr	r9, [sp, #60]	; 0x3c
   18e2c:	orrs	r0, r6, r9
   18e30:	bne	18e40 <main@@Base+0x5a84>
   18e34:	ldrb	r0, [r8, #8]
   18e38:	tst	r0, #2
   18e3c:	beq	1c2cc <main@@Base+0x8f10>
   18e40:	ldr	r0, [r8]
   18e44:	mov	r1, #18
   18e48:	b	19fe8 <main@@Base+0x6c2c>
   18e4c:	beq	1a278 <main@@Base+0x6ebc>
   18e50:	b	1a288 <main@@Base+0x6ecc>
   18e54:	bne	18e64 <main@@Base+0x5aa8>
   18e58:	ldrb	r0, [r2, #2]!
   18e5c:	cmp	r0, #32
   18e60:	bhi	18e74 <main@@Base+0x5ab8>
   18e64:	mov	r0, r8
   18e68:	mov	r2, r5
   18e6c:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   18e70:	mov	r2, r0
   18e74:	cmp	r4, r2
   18e78:	beq	1c2b8 <main@@Base+0x8efc>
   18e7c:	ldr	r0, [sp, #48]	; 0x30
   18e80:	mov	r1, #8
   18e84:	mov	r3, #0
   18e88:	str	r1, [sp]
   18e8c:	mov	r1, r2
   18e90:	mov	r2, r5
   18e94:	str	r0, [sp, #4]
   18e98:	ldr	r0, [pc, #3956]	; 19e14 <main@@Base+0x6a58>
   18e9c:	add	r0, pc, r0
   18ea0:	str	r0, [sp, #8]
   18ea4:	ldr	r0, [pc, #4092]	; 19ea8 <main@@Base+0x6aec>
   18ea8:	add	r0, pc, r0
   18eac:	str	r0, [sp, #12]
   18eb0:	mov	r0, r8
   18eb4:	bl	31df0 <flatcc_json_parser_union_type@@Base>
   18eb8:	b	1c2c8 <main@@Base+0x8f0c>
   18ebc:	bne	18ecc <main@@Base+0x5b10>
   18ec0:	ldrb	r0, [r4, #2]!
   18ec4:	cmp	r0, #32
   18ec8:	bhi	18edc <main@@Base+0x5b20>
   18ecc:	ldr	r0, [sp, #40]	; 0x28
   18ed0:	mov	r2, r5
   18ed4:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   18ed8:	mov	r4, r0
   18edc:	cmp	r8, r4
   18ee0:	beq	16bd4 <main@@Base+0x3818>
   18ee4:	ldr	r8, [sp, #40]	; 0x28
   18ee8:	mov	r0, #0
   18eec:	mov	r1, #0
   18ef0:	str	r0, [sp, #52]	; 0x34
   18ef4:	ldr	r0, [r8]
   18ef8:	bl	2bc04 <flatcc_builder_start_table@@Base>
   18efc:	cmp	r0, #0
   18f00:	bne	18f68 <main@@Base+0x5bac>
   18f04:	cmp	r4, r5
   18f08:	beq	18f40 <main@@Base+0x5b84>
   18f0c:	ldrb	r0, [r4]
   18f10:	cmp	r0, #123	; 0x7b
   18f14:	bne	18f40 <main@@Base+0x5b84>
   18f18:	add	r1, r4, #1
   18f1c:	sub	r0, r5, r1
   18f20:	cmp	r0, #2
   18f24:	blt	1ba64 <main@@Base+0x86a8>
   18f28:	ldrb	r0, [r1]
   18f2c:	cmp	r0, #32
   18f30:	bls	1ba50 <main@@Base+0x8694>
   18f34:	ldr	r5, [sp, #44]	; 0x2c
   18f38:	mov	r4, r1
   18f3c:	b	1ba74 <main@@Base+0x86b8>
   18f40:	mov	r0, r8
   18f44:	mov	r1, r4
   18f48:	mov	r2, r5
   18f4c:	mov	r3, #21
   18f50:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   18f54:	mov	r4, r0
   18f58:	ldr	r0, [r8, #24]
   18f5c:	cmp	r0, #0
   18f60:	beq	18f98 <main@@Base+0x5bdc>
   18f64:	ldr	sl, [sp, #36]	; 0x24
   18f68:	mov	r0, r8
   18f6c:	mov	r1, r4
   18f70:	mov	r2, r5
   18f74:	mov	r3, #33	; 0x21
   18f78:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   18f7c:	mov	r4, r0
   18f80:	ldr	r0, [sp, #52]	; 0x34
   18f84:	cmp	r0, #0
   18f88:	beq	13488 <main@@Base+0xcc>
   18f8c:	ldr	r0, [r8]
   18f90:	mov	r1, #34	; 0x22
   18f94:	b	15ec8 <main@@Base+0x2b0c>
   18f98:	ldr	r0, [r8]
   18f9c:	bl	2c62c <flatcc_builder_end_table@@Base>
   18fa0:	ldr	sl, [sp, #36]	; 0x24
   18fa4:	cmp	r0, #0
   18fa8:	str	r0, [sp, #52]	; 0x34
   18fac:	bne	18f8c <main@@Base+0x5bd0>
   18fb0:	b	18f68 <main@@Base+0x5bac>
   18fb4:	mov	r4, r5
   18fb8:	b	16cb0 <main@@Base+0x38f4>
   18fbc:	cmp	r0, #93	; 0x5d
   18fc0:	bne	1a674 <main@@Base+0x72b8>
   18fc4:	ldr	r5, [sp, #44]	; 0x2c
   18fc8:	ldr	r8, [sp, #40]	; 0x28
   18fcc:	ldr	sl, [sp, #36]	; 0x24
   18fd0:	add	r1, r4, #1
   18fd4:	sub	r0, r5, r1
   18fd8:	cmp	r0, #2
   18fdc:	blt	190a4 <main@@Base+0x5ce8>
   18fe0:	ldrb	r0, [r1]
   18fe4:	cmp	r0, #32
   18fe8:	bls	19088 <main@@Base+0x5ccc>
   18fec:	ldr	r5, [sp, #44]	; 0x2c
   18ff0:	ldr	r8, [sp, #40]	; 0x28
   18ff4:	ldr	sl, [sp, #36]	; 0x24
   18ff8:	mov	r4, r1
   18ffc:	b	16cb0 <main@@Base+0x38f4>
   19000:	bne	19014 <main@@Base+0x5c58>
   19004:	mov	r9, r1
   19008:	ldrb	r0, [r9, #1]!
   1900c:	cmp	r0, #32
   19010:	bhi	19024 <main@@Base+0x5c68>
   19014:	mov	r0, r8
   19018:	mov	r2, r5
   1901c:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   19020:	mov	r9, r0
   19024:	cmp	r9, r5
   19028:	beq	19070 <main@@Base+0x5cb4>
   1902c:	ldrb	r0, [r9]
   19030:	cmp	r0, #58	; 0x3a
   19034:	bne	19070 <main@@Base+0x5cb4>
   19038:	add	r1, r9, #1
   1903c:	sub	r0, r5, r1
   19040:	cmp	r0, #2
   19044:	blt	1b7dc <main@@Base+0x8420>
   19048:	ldrb	r0, [r1]
   1904c:	cmp	r0, #32
   19050:	bls	1b7c0 <main@@Base+0x8404>
   19054:	ldr	r5, [sp, #44]	; 0x2c
   19058:	ldr	r8, [sp, #40]	; 0x28
   1905c:	ldr	sl, [sp, #36]	; 0x24
   19060:	mov	r9, r1
   19064:	cmp	r7, r9
   19068:	bne	1b7f4 <main@@Base+0x8438>
   1906c:	b	1b848 <main@@Base+0x848c>
   19070:	mov	r0, r8
   19074:	mov	r1, r9
   19078:	mov	r2, r5
   1907c:	mov	r3, #4
   19080:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   19084:	b	1b7e8 <main@@Base+0x842c>
   19088:	ldr	r5, [sp, #44]	; 0x2c
   1908c:	ldr	r8, [sp, #40]	; 0x28
   19090:	ldr	sl, [sp, #36]	; 0x24
   19094:	bne	190a4 <main@@Base+0x5ce8>
   19098:	ldrb	r0, [r4, #2]!
   1909c:	cmp	r0, #32
   190a0:	bhi	16cb0 <main@@Base+0x38f4>
   190a4:	mov	r0, r8
   190a8:	mov	r2, r5
   190ac:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   190b0:	b	16cac <main@@Base+0x38f0>
   190b4:	mov	r0, r8
   190b8:	mov	r1, r5
   190bc:	mov	r2, r5
   190c0:	mov	r3, #9
   190c4:	b	16ca8 <main@@Base+0x38ec>
   190c8:	bne	190d8 <main@@Base+0x5d1c>
   190cc:	ldrb	r0, [r4, #2]!
   190d0:	cmp	r0, #32
   190d4:	bhi	190e8 <main@@Base+0x5d2c>
   190d8:	mov	r0, r8
   190dc:	mov	r2, r5
   190e0:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   190e4:	mov	r4, r0
   190e8:	cmp	r4, r5
   190ec:	mov	r2, r5
   190f0:	beq	19140 <main@@Base+0x5d84>
   190f4:	ldrb	r0, [r4]
   190f8:	cmp	r0, #93	; 0x5d
   190fc:	bne	1913c <main@@Base+0x5d80>
   19100:	add	r1, r4, #1
   19104:	sub	r0, r5, r1
   19108:	cmp	r0, #2
   1910c:	blt	1d0b0 <main@@Base+0x9cf4>
   19110:	ldrb	r0, [r1]
   19114:	cmp	r0, #32
   19118:	bhi	1ad78 <main@@Base+0x79bc>
   1911c:	ldr	r5, [sp, #44]	; 0x2c
   19120:	ldr	r8, [sp, #40]	; 0x28
   19124:	ldr	sl, [sp, #36]	; 0x24
   19128:	bne	1d0b0 <main@@Base+0x9cf4>
   1912c:	ldrb	r0, [r4, #2]!
   19130:	cmp	r0, #32
   19134:	bhi	1897c <main@@Base+0x55c0>
   19138:	b	1d0b0 <main@@Base+0x9cf4>
   1913c:	mov	r2, r4
   19140:	mov	r1, r2
   19144:	mov	r0, r8
   19148:	mov	r2, r5
   1914c:	add	r3, sp, #52	; 0x34
   19150:	bl	318d8 <flatcc_json_parser_build_string@@Base>
   19154:	mov	r4, r0
   19158:	ldr	r0, [sp, #52]	; 0x34
   1915c:	cmp	r0, #0
   19160:	beq	13488 <main@@Base+0xcc>
   19164:	ldr	r0, [r8]
   19168:	mov	r1, #1
   1916c:	bl	2aed8 <flatcc_builder_extend_offset_vector@@Base>
   19170:	cmp	r0, #0
   19174:	beq	13488 <main@@Base+0xcc>
   19178:	ldr	r1, [sp, #52]	; 0x34
   1917c:	str	r1, [r0]
   19180:	sub	r0, r5, r4
   19184:	cmp	r0, #2
   19188:	blt	191bc <main@@Base+0x5e00>
   1918c:	ldrb	r0, [r4]
   19190:	cmp	r0, #32
   19194:	bls	191a8 <main@@Base+0x5dec>
   19198:	mov	r2, r4
   1919c:	cmp	r2, r5
   191a0:	bne	191d8 <main@@Base+0x5e1c>
   191a4:	b	1ad0c <main@@Base+0x7950>
   191a8:	bne	191bc <main@@Base+0x5e00>
   191ac:	mov	r2, r4
   191b0:	ldrb	r0, [r2, #1]!
   191b4:	cmp	r0, #32
   191b8:	bhi	191d0 <main@@Base+0x5e14>
   191bc:	mov	r0, r8
   191c0:	mov	r1, r4
   191c4:	mov	r2, r5
   191c8:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   191cc:	mov	r2, r0
   191d0:	cmp	r2, r5
   191d4:	beq	1ad0c <main@@Base+0x7950>
   191d8:	ldrb	r0, [r2]
   191dc:	cmp	r0, #44	; 0x2c
   191e0:	bne	1ad48 <main@@Base+0x798c>
   191e4:	add	r1, r2, #1
   191e8:	sub	r0, r5, r1
   191ec:	cmp	r0, #2
   191f0:	blt	19220 <main@@Base+0x5e64>
   191f4:	ldrb	r0, [r1]
   191f8:	cmp	r0, #32
   191fc:	bls	19210 <main@@Base+0x5e54>
   19200:	mov	r2, r1
   19204:	cmp	r2, r5
   19208:	bne	19238 <main@@Base+0x5e7c>
   1920c:	b	1ad8c <main@@Base+0x79d0>
   19210:	bne	19220 <main@@Base+0x5e64>
   19214:	ldrb	r0, [r2, #2]!
   19218:	cmp	r0, #32
   1921c:	bhi	19230 <main@@Base+0x5e74>
   19220:	mov	r0, r8
   19224:	mov	r2, r5
   19228:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1922c:	mov	r2, r0
   19230:	cmp	r2, r5
   19234:	beq	1ad8c <main@@Base+0x79d0>
   19238:	ldrb	r0, [r2]
   1923c:	cmp	r0, #93	; 0x5d
   19240:	bne	19140 <main@@Base+0x5d84>
   19244:	b	1ad58 <main@@Base+0x799c>
   19248:	bne	19258 <main@@Base+0x5e9c>
   1924c:	ldrb	r0, [r7, #2]!
   19250:	cmp	r0, #32
   19254:	bhi	19268 <main@@Base+0x5eac>
   19258:	mov	r0, r8
   1925c:	mov	r2, r5
   19260:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   19264:	mov	r7, r0
   19268:	cmp	r7, r5
   1926c:	mov	r4, r5
   19270:	beq	192c0 <main@@Base+0x5f04>
   19274:	ldrb	r0, [r7]
   19278:	cmp	r0, #93	; 0x5d
   1927c:	bne	192bc <main@@Base+0x5f00>
   19280:	add	r1, r7, #1
   19284:	sub	r0, r5, r1
   19288:	cmp	r0, #2
   1928c:	blt	1d10c <main@@Base+0x9d50>
   19290:	ldrb	r0, [r1]
   19294:	cmp	r0, #32
   19298:	bhi	1a8a0 <main@@Base+0x74e4>
   1929c:	ldr	r5, [sp, #44]	; 0x2c
   192a0:	ldr	r8, [sp, #40]	; 0x28
   192a4:	ldr	sl, [sp, #36]	; 0x24
   192a8:	bne	1d10c <main@@Base+0x9d50>
   192ac:	ldrb	r0, [r7, #2]!
   192b0:	cmp	r0, #32
   192b4:	bhi	18a34 <main@@Base+0x5678>
   192b8:	b	1d10c <main@@Base+0x9d50>
   192bc:	mov	r4, r7
   192c0:	ldr	r0, [r8]
   192c4:	mov	r1, #1
   192c8:	bl	2ab30 <flatcc_builder_extend_vector@@Base>
   192cc:	mov	r9, r0
   192d0:	cmp	r0, #0
   192d4:	beq	13488 <main@@Base+0xcc>
   192d8:	cmp	r4, r5
   192dc:	beq	19310 <main@@Base+0x5f54>
   192e0:	ldrb	r0, [r4]
   192e4:	cmp	r0, #123	; 0x7b
   192e8:	bne	19310 <main@@Base+0x5f54>
   192ec:	add	r1, r4, #1
   192f0:	sub	r0, r5, r1
   192f4:	cmp	r0, #2
   192f8:	blt	1933c <main@@Base+0x5f80>
   192fc:	ldrb	r0, [r1]
   19300:	cmp	r0, #32
   19304:	bls	1932c <main@@Base+0x5f70>
   19308:	mov	r4, r1
   1930c:	b	1934c <main@@Base+0x5f90>
   19310:	mov	r0, r8
   19314:	mov	r1, r4
   19318:	mov	r2, r5
   1931c:	mov	r3, #21
   19320:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   19324:	mov	r4, r0
   19328:	b	19b28 <main@@Base+0x676c>
   1932c:	bne	1933c <main@@Base+0x5f80>
   19330:	ldrb	r0, [r4, #2]!
   19334:	cmp	r0, #32
   19338:	bhi	1934c <main@@Base+0x5f90>
   1933c:	mov	r0, r8
   19340:	mov	r2, r5
   19344:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   19348:	mov	r4, r0
   1934c:	cmp	r4, r5
   19350:	mov	r2, r5
   19354:	beq	193a8 <main@@Base+0x5fec>
   19358:	ldrb	r0, [r4]
   1935c:	cmp	r0, #125	; 0x7d
   19360:	bne	193a4 <main@@Base+0x5fe8>
   19364:	add	r1, r4, #1
   19368:	sub	r0, r5, r1
   1936c:	cmp	r0, #2
   19370:	blt	19c18 <main@@Base+0x685c>
   19374:	ldrb	r0, [r1]
   19378:	cmp	r0, #32
   1937c:	bhi	19ae8 <main@@Base+0x672c>
   19380:	ldr	r5, [sp, #44]	; 0x2c
   19384:	ldr	r8, [sp, #40]	; 0x28
   19388:	ldr	sl, [sp, #36]	; 0x24
   1938c:	bne	19c18 <main@@Base+0x685c>
   19390:	ldrb	r0, [r4, #2]!
   19394:	cmp	r0, #32
   19398:	bls	19c18 <main@@Base+0x685c>
   1939c:	b	19b28 <main@@Base+0x676c>
   193a0:	andeq	fp, r1, r9, lsr #13
   193a4:	mov	r2, r4
   193a8:	cmp	r2, r5
   193ac:	mov	sl, r5
   193b0:	beq	19408 <main@@Base+0x604c>
   193b4:	ldrb	r0, [r2]
   193b8:	cmp	r0, #46	; 0x2e
   193bc:	beq	193dc <main@@Base+0x6020>
   193c0:	cmp	r0, #34	; 0x22
   193c4:	bne	193f8 <main@@Base+0x603c>
   193c8:	ldr	r0, [sp, #32]
   193cc:	mov	r1, #0
   193d0:	add	sl, r2, #1
   193d4:	b	19404 <main@@Base+0x6048>
   193d8:	andeq	fp, r1, sl, lsl #13
   193dc:	mov	r1, r2
   193e0:	mov	r0, r8
   193e4:	mov	r2, r5
   193e8:	mov	r3, #5
   193ec:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   193f0:	mov	sl, r0
   193f4:	b	19408 <main@@Base+0x604c>
   193f8:	ldr	r0, [sp, #32]
   193fc:	mov	r1, #1
   19400:	mov	sl, r2
   19404:	str	r1, [r0]
   19408:	sub	lr, r5, sl
   1940c:	mov	r1, #8
   19410:	cmp	lr, #8
   19414:	movcc	r1, lr
   19418:	sub	r2, r1, #1
   1941c:	cmp	r2, #7
   19420:	bhi	19908 <main@@Base+0x654c>
   19424:	add	r0, pc, #36	; 0x24
   19428:	mov	r1, #0
   1942c:	mov	ip, #0
   19430:	mov	r8, #0
   19434:	mov	r7, #0
   19438:	mov	r3, #0
   1943c:	mov	r6, #0
   19440:	mov	r4, #0
   19444:	ldr	r5, [r0, r2, lsl #2]
   19448:	mov	r2, #0
   1944c:	add	pc, r0, r5
   19450:	andeq	r0, r0, r8, rrx
   19454:	andeq	r0, r0, r0, rrx
   19458:	andeq	r0, r0, r8, asr r0
   1945c:	andeq	r0, r0, r0, asr r0
   19460:	andeq	r0, r0, r4, asr #32
   19464:	andeq	r0, r0, r8, lsr r0
   19468:	andeq	r0, r0, r8, lsr #32
   1946c:	andeq	r0, r0, r4, lsr #32
   19470:	andeq	sp, r2, r8, lsl ip
   19474:	ldrb	ip, [sl, #7]
   19478:	ldrb	r0, [sl, #6]
   1947c:	mov	r8, r1
   19480:	orr	r0, ip, r0, lsl #8
   19484:	mov	r1, r0
   19488:	ldrb	r0, [sl, #5]
   1948c:	mov	r7, r8
   19490:	orr	r1, r1, r0, lsl #16
   19494:	ldrb	r0, [sl, #4]
   19498:	mov	r3, r7
   1949c:	orr	r1, r1, r0, lsl #24
   194a0:	ldrb	r0, [sl, #3]
   194a4:	orr	r6, r0, r3
   194a8:	ldrb	r0, [sl, #2]
   194ac:	orr	r4, r6, r0, lsl #8
   194b0:	ldrb	r0, [sl, #1]
   194b4:	orr	r2, r4, r0, lsl #16
   194b8:	ldrb	r0, [sl]
   194bc:	movw	r3, #0
   194c0:	movt	r3, #26980	; 0x6964
   194c4:	orr	r2, r2, r0, lsl #24
   194c8:	mov	r0, r2
   194cc:	bfc	r0, #0, #16
   194d0:	teq	r0, r3
   194d4:	bne	19528 <main@@Base+0x616c>
   194d8:	ldr	r5, [sp, #44]	; 0x2c
   194dc:	ldr	r8, [sp, #40]	; 0x28
   194e0:	cmp	lr, #3
   194e4:	mov	r7, sl
   194e8:	blt	19764 <main@@Base+0x63a8>
   194ec:	ldr	r2, [sp, #32]
   194f0:	mov	r1, sl
   194f4:	ldrb	r0, [r1, #2]!
   194f8:	ldr	r2, [r2]
   194fc:	cmp	r2, #0
   19500:	beq	19598 <main@@Base+0x61dc>
   19504:	cmp	r0, #33	; 0x21
   19508:	bcc	19518 <main@@Base+0x615c>
   1950c:	cmp	r0, #58	; 0x3a
   19510:	mov	r7, sl
   19514:	bne	19764 <main@@Base+0x63a8>
   19518:	ldr	r0, [sp, #32]
   1951c:	mov	r2, #0
   19520:	str	r2, [r0]
   19524:	b	195a8 <main@@Base+0x61ec>
   19528:	movw	r0, #25445	; 0x6365
   1952c:	ldr	r5, [sp, #44]	; 0x2c
   19530:	ldr	r8, [sp, #40]	; 0x28
   19534:	movt	r0, #24942	; 0x616e
   19538:	eor	r0, r1, r0
   1953c:	movw	r1, #29556	; 0x7374
   19540:	movt	r1, #25705	; 0x6469
   19544:	eor	r1, r2, r1
   19548:	orrs	r0, r0, r1
   1954c:	bne	19908 <main@@Base+0x654c>
   19550:	cmp	lr, #9
   19554:	mov	r7, sl
   19558:	blt	198a0 <main@@Base+0x64e4>
   1955c:	ldr	r2, [sp, #32]
   19560:	mov	r1, sl
   19564:	ldrb	r0, [r1, #8]!
   19568:	ldr	r2, [r2]
   1956c:	cmp	r2, #0
   19570:	beq	195d8 <main@@Base+0x621c>
   19574:	cmp	r0, #33	; 0x21
   19578:	bcc	19588 <main@@Base+0x61cc>
   1957c:	cmp	r0, #58	; 0x3a
   19580:	mov	r7, sl
   19584:	bne	198a0 <main@@Base+0x64e4>
   19588:	ldr	r0, [sp, #32]
   1958c:	mov	r2, #0
   19590:	str	r2, [r0]
   19594:	b	195e8 <main@@Base+0x622c>
   19598:	cmp	r0, #34	; 0x22
   1959c:	mov	r7, sl
   195a0:	bne	19764 <main@@Base+0x63a8>
   195a4:	add	r1, sl, #3
   195a8:	sub	r0, r5, r1
   195ac:	cmp	r0, #2
   195b0:	blt	19634 <main@@Base+0x6278>
   195b4:	ldrb	r0, [r1]
   195b8:	cmp	r0, #32
   195bc:	bls	19618 <main@@Base+0x625c>
   195c0:	ldr	r5, [sp, #44]	; 0x2c
   195c4:	ldr	r8, [sp, #40]	; 0x28
   195c8:	mov	r7, r1
   195cc:	cmp	r7, r5
   195d0:	bne	1964c <main@@Base+0x6290>
   195d4:	b	1968c <main@@Base+0x62d0>
   195d8:	cmp	r0, #34	; 0x22
   195dc:	mov	r7, sl
   195e0:	bne	198a0 <main@@Base+0x64e4>
   195e4:	add	r1, sl, #9
   195e8:	ldr	r4, [sp, #44]	; 0x2c
   195ec:	sub	r0, r4, r1
   195f0:	cmp	r0, #2
   195f4:	blt	196bc <main@@Base+0x6300>
   195f8:	ldrb	r0, [r1]
   195fc:	cmp	r0, #32
   19600:	bls	196a4 <main@@Base+0x62e8>
   19604:	ldr	r4, [sp, #44]	; 0x2c
   19608:	mov	r7, r1
   1960c:	cmp	r7, r4
   19610:	bne	196d4 <main@@Base+0x6318>
   19614:	b	1971c <main@@Base+0x6360>
   19618:	ldr	r5, [sp, #44]	; 0x2c
   1961c:	ldr	r8, [sp, #40]	; 0x28
   19620:	bne	19634 <main@@Base+0x6278>
   19624:	mov	r7, r1
   19628:	ldrb	r0, [r7, #1]!
   1962c:	cmp	r0, #32
   19630:	bhi	19644 <main@@Base+0x6288>
   19634:	mov	r0, r8
   19638:	mov	r2, r5
   1963c:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   19640:	mov	r7, r0
   19644:	cmp	r7, r5
   19648:	beq	1968c <main@@Base+0x62d0>
   1964c:	ldrb	r0, [r7]
   19650:	cmp	r0, #58	; 0x3a
   19654:	bne	1968c <main@@Base+0x62d0>
   19658:	add	r1, r7, #1
   1965c:	sub	r0, r5, r1
   19660:	cmp	r0, #2
   19664:	blt	19754 <main@@Base+0x6398>
   19668:	ldrb	r0, [r1]
   1966c:	cmp	r0, #32
   19670:	bls	1973c <main@@Base+0x6380>
   19674:	ldr	r5, [sp, #44]	; 0x2c
   19678:	ldr	r8, [sp, #40]	; 0x28
   1967c:	mov	r7, r1
   19680:	cmp	sl, r7
   19684:	bne	1976c <main@@Base+0x63b0>
   19688:	b	19908 <main@@Base+0x654c>
   1968c:	mov	r0, r8
   19690:	mov	r1, r7
   19694:	mov	r2, r5
   19698:	mov	r3, #4
   1969c:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   196a0:	b	19760 <main@@Base+0x63a4>
   196a4:	ldr	r4, [sp, #44]	; 0x2c
   196a8:	bne	196bc <main@@Base+0x6300>
   196ac:	mov	r7, r1
   196b0:	ldrb	r0, [r7, #1]!
   196b4:	cmp	r0, #32
   196b8:	bhi	196cc <main@@Base+0x6310>
   196bc:	ldr	r0, [sp, #40]	; 0x28
   196c0:	mov	r2, r4
   196c4:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   196c8:	mov	r7, r0
   196cc:	cmp	r7, r4
   196d0:	beq	1971c <main@@Base+0x6360>
   196d4:	ldrb	r0, [r7]
   196d8:	cmp	r0, #58	; 0x3a
   196dc:	bne	1971c <main@@Base+0x6360>
   196e0:	ldr	r5, [sp, #44]	; 0x2c
   196e4:	ldr	r8, [sp, #40]	; 0x28
   196e8:	add	r1, r7, #1
   196ec:	sub	r0, r5, r1
   196f0:	cmp	r0, #2
   196f4:	blt	19890 <main@@Base+0x64d4>
   196f8:	ldrb	r0, [r1]
   196fc:	cmp	r0, #32
   19700:	bls	19878 <main@@Base+0x64bc>
   19704:	ldr	r5, [sp, #44]	; 0x2c
   19708:	ldr	r8, [sp, #40]	; 0x28
   1970c:	mov	r7, r1
   19710:	cmp	sl, r7
   19714:	bne	198a8 <main@@Base+0x64ec>
   19718:	b	19908 <main@@Base+0x654c>
   1971c:	ldr	r8, [sp, #40]	; 0x28
   19720:	ldr	r5, [sp, #44]	; 0x2c
   19724:	mov	r1, r7
   19728:	mov	r3, #4
   1972c:	mov	r0, r8
   19730:	mov	r2, r5
   19734:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   19738:	b	1989c <main@@Base+0x64e0>
   1973c:	ldr	r5, [sp, #44]	; 0x2c
   19740:	ldr	r8, [sp, #40]	; 0x28
   19744:	bne	19754 <main@@Base+0x6398>
   19748:	ldrb	r0, [r7, #2]!
   1974c:	cmp	r0, #32
   19750:	bhi	19764 <main@@Base+0x63a8>
   19754:	mov	r0, r8
   19758:	mov	r2, r5
   1975c:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   19760:	mov	r7, r0
   19764:	cmp	sl, r7
   19768:	beq	19908 <main@@Base+0x654c>
   1976c:	mov	r4, #0
   19770:	cmp	r7, r5
   19774:	str	r4, [fp, #-52]	; 0xffffffcc
   19778:	str	r4, [fp, #-56]	; 0xffffffc8
   1977c:	str	r4, [fp, #-60]	; 0xffffffc4
   19780:	str	r4, [sp, #56]	; 0x38
   19784:	beq	197cc <main@@Base+0x6410>
   19788:	sub	r0, fp, #56	; 0x38
   1978c:	mov	r1, r7
   19790:	mov	r2, r5
   19794:	add	r3, sp, #56	; 0x38
   19798:	str	r0, [sp]
   1979c:	mov	r0, r8
   197a0:	bl	3132c <flatcc_json_parser_integer@@Base>
   197a4:	cmp	r0, r7
   197a8:	beq	197dc <main@@Base+0x6420>
   197ac:	mov	r1, r0
   197b0:	ldr	r0, [sp, #56]	; 0x38
   197b4:	cmp	r0, #0
   197b8:	beq	197ec <main@@Base+0x6430>
   197bc:	mov	r0, r8
   197c0:	mov	r2, r5
   197c4:	mov	r3, #8
   197c8:	b	1980c <main@@Base+0x6450>
   197cc:	mov	r1, r5
   197d0:	cmp	r7, r1
   197d4:	bne	19854 <main@@Base+0x6498>
   197d8:	b	1981c <main@@Base+0x6460>
   197dc:	mov	r1, r7
   197e0:	cmp	r7, r1
   197e4:	bne	19854 <main@@Base+0x6498>
   197e8:	b	1981c <main@@Base+0x6460>
   197ec:	ldr	r0, [fp, #-52]	; 0xffffffcc
   197f0:	cmp	r0, #0
   197f4:	beq	1985c <main@@Base+0x64a0>
   197f8:	ldr	r8, [sp, #40]	; 0x28
   197fc:	ldr	r5, [sp, #44]	; 0x2c
   19800:	mov	r3, #7
   19804:	mov	r0, r8
   19808:	mov	r2, r5
   1980c:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   19810:	mov	r1, r0
   19814:	cmp	r7, r1
   19818:	bne	19854 <main@@Base+0x6498>
   1981c:	sub	r0, fp, #60	; 0x3c
   19820:	mov	r1, r7
   19824:	mov	r2, r5
   19828:	str	r0, [sp]
   1982c:	mov	r0, r8
   19830:	ldr	r3, [pc, #4044]	; 1a804 <main@@Base+0x7448>
   19834:	add	r3, pc, r3
   19838:	bl	23814 <main@@Base+0x10458>
   1983c:	mov	r1, r0
   19840:	cmp	r0, r7
   19844:	cmpne	r1, r5
   19848:	beq	19a98 <main@@Base+0x66dc>
   1984c:	ldr	r4, [fp, #-60]	; 0xffffffc4
   19850:	ldr	r8, [sp, #40]	; 0x28
   19854:	str	r4, [r9]
   19858:	b	1991c <main@@Base+0x6560>
   1985c:	ldr	r4, [fp, #-56]	; 0xffffffc8
   19860:	ldr	r5, [sp, #44]	; 0x2c
   19864:	ldr	r8, [sp, #40]	; 0x28
   19868:	str	r4, [fp, #-60]	; 0xffffffc4
   1986c:	cmp	r7, r1
   19870:	bne	19854 <main@@Base+0x6498>
   19874:	b	1981c <main@@Base+0x6460>
   19878:	ldr	r5, [sp, #44]	; 0x2c
   1987c:	ldr	r8, [sp, #40]	; 0x28
   19880:	bne	19890 <main@@Base+0x64d4>
   19884:	ldrb	r0, [r7, #2]!
   19888:	cmp	r0, #32
   1988c:	bhi	198a0 <main@@Base+0x64e4>
   19890:	mov	r0, r8
   19894:	mov	r2, r5
   19898:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1989c:	mov	r7, r0
   198a0:	cmp	sl, r7
   198a4:	beq	19908 <main@@Base+0x654c>
   198a8:	mov	r4, #0
   198ac:	cmp	r7, r5
   198b0:	str	r4, [fp, #-52]	; 0xffffffcc
   198b4:	str	r4, [fp, #-56]	; 0xffffffc8
   198b8:	str	r4, [fp, #-60]	; 0xffffffc4
   198bc:	str	r4, [sp, #56]	; 0x38
   198c0:	beq	199e0 <main@@Base+0x6624>
   198c4:	sub	r0, fp, #56	; 0x38
   198c8:	mov	r1, r7
   198cc:	mov	r2, r5
   198d0:	add	r3, sp, #56	; 0x38
   198d4:	str	r0, [sp]
   198d8:	mov	r0, r8
   198dc:	bl	3132c <flatcc_json_parser_integer@@Base>
   198e0:	cmp	r0, r7
   198e4:	beq	199f0 <main@@Base+0x6634>
   198e8:	mov	r1, r0
   198ec:	ldr	r0, [sp, #56]	; 0x38
   198f0:	cmp	r0, #0
   198f4:	beq	19a00 <main@@Base+0x6644>
   198f8:	ldr	r8, [sp, #40]	; 0x28
   198fc:	ldr	r5, [sp, #44]	; 0x2c
   19900:	mov	r3, #8
   19904:	b	19a18 <main@@Base+0x665c>
   19908:	mov	r0, r8
   1990c:	mov	r1, sl
   19910:	mov	r2, r5
   19914:	bl	2f87c <flatcc_json_parser_unmatched_symbol@@Base>
   19918:	mov	r1, r0
   1991c:	sub	r0, r5, r1
   19920:	cmp	r0, #2
   19924:	blt	19958 <main@@Base+0x659c>
   19928:	ldrb	r0, [r1]
   1992c:	cmp	r0, #32
   19930:	bls	19944 <main@@Base+0x6588>
   19934:	mov	r2, r1
   19938:	cmp	r2, r5
   1993c:	bne	19970 <main@@Base+0x65b4>
   19940:	b	19ab0 <main@@Base+0x66f4>
   19944:	bne	19958 <main@@Base+0x659c>
   19948:	mov	r2, r1
   1994c:	ldrb	r0, [r2, #1]!
   19950:	cmp	r0, #32
   19954:	bhi	19968 <main@@Base+0x65ac>
   19958:	mov	r0, r8
   1995c:	mov	r2, r5
   19960:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   19964:	mov	r2, r0
   19968:	cmp	r2, r5
   1996c:	beq	19ab0 <main@@Base+0x66f4>
   19970:	ldrb	r0, [r2]
   19974:	cmp	r0, #44	; 0x2c
   19978:	bne	19ab8 <main@@Base+0x66fc>
   1997c:	add	r1, r2, #1
   19980:	sub	r0, r5, r1
   19984:	cmp	r0, #2
   19988:	blt	199b8 <main@@Base+0x65fc>
   1998c:	ldrb	r0, [r1]
   19990:	cmp	r0, #32
   19994:	bls	199a8 <main@@Base+0x65ec>
   19998:	mov	r2, r1
   1999c:	cmp	r2, r5
   199a0:	bne	199d0 <main@@Base+0x6614>
   199a4:	b	19af8 <main@@Base+0x673c>
   199a8:	bne	199b8 <main@@Base+0x65fc>
   199ac:	ldrb	r0, [r2, #2]!
   199b0:	cmp	r0, #32
   199b4:	bhi	199c8 <main@@Base+0x660c>
   199b8:	mov	r0, r8
   199bc:	mov	r2, r5
   199c0:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   199c4:	mov	r2, r0
   199c8:	cmp	r2, r5
   199cc:	beq	19af8 <main@@Base+0x673c>
   199d0:	ldrb	r0, [r2]
   199d4:	cmp	r0, #125	; 0x7d
   199d8:	bne	193a8 <main@@Base+0x5fec>
   199dc:	b	19ac8 <main@@Base+0x670c>
   199e0:	mov	r1, r5
   199e4:	cmp	r7, r1
   199e8:	bne	19a70 <main@@Base+0x66b4>
   199ec:	b	19a30 <main@@Base+0x6674>
   199f0:	mov	r1, r7
   199f4:	cmp	r7, r1
   199f8:	bne	19a70 <main@@Base+0x66b4>
   199fc:	b	19a30 <main@@Base+0x6674>
   19a00:	ldr	r0, [fp, #-52]	; 0xffffffcc
   19a04:	cmp	r0, #0
   19a08:	beq	19a7c <main@@Base+0x66c0>
   19a0c:	ldr	r8, [sp, #40]	; 0x28
   19a10:	ldr	r5, [sp, #44]	; 0x2c
   19a14:	mov	r3, #7
   19a18:	mov	r0, r8
   19a1c:	mov	r2, r5
   19a20:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   19a24:	mov	r1, r0
   19a28:	cmp	r7, r1
   19a2c:	bne	19a70 <main@@Base+0x66b4>
   19a30:	sub	r0, fp, #60	; 0x3c
   19a34:	mov	r1, r7
   19a38:	mov	r2, r5
   19a3c:	str	r0, [sp]
   19a40:	mov	r0, r8
   19a44:	ldr	r3, [pc, #4044]	; 1aa18 <main@@Base+0x765c>
   19a48:	add	r3, pc, r3
   19a4c:	bl	23814 <main@@Base+0x10458>
   19a50:	cmp	r0, r7
   19a54:	mov	r1, r0
   19a58:	ldrne	r0, [sp, #44]	; 0x2c
   19a5c:	cmpne	r1, r0
   19a60:	beq	19a98 <main@@Base+0x66dc>
   19a64:	ldr	r4, [fp, #-60]	; 0xffffffc4
   19a68:	ldr	r5, [sp, #44]	; 0x2c
   19a6c:	ldr	r8, [sp, #40]	; 0x28
   19a70:	str	r4, [r9, #4]
   19a74:	b	1991c <main@@Base+0x6560>
   19a78:	muleq	r2, ip, r6
   19a7c:	ldr	r4, [fp, #-56]	; 0xffffffc8
   19a80:	ldr	r5, [sp, #44]	; 0x2c
   19a84:	ldr	r8, [sp, #40]	; 0x28
   19a88:	str	r4, [fp, #-60]	; 0xffffffc4
   19a8c:	cmp	r7, r1
   19a90:	bne	19a70 <main@@Base+0x66b4>
   19a94:	b	19a30 <main@@Base+0x6674>
   19a98:	ldr	r8, [sp, #40]	; 0x28
   19a9c:	ldr	r5, [sp, #44]	; 0x2c
   19aa0:	mov	r3, #33	; 0x21
   19aa4:	mov	r0, r8
   19aa8:	mov	r2, r5
   19aac:	b	19b1c <main@@Base+0x6760>
   19ab0:	mov	r4, r5
   19ab4:	b	19b24 <main@@Base+0x6768>
   19ab8:	cmp	r0, #125	; 0x7d
   19abc:	bne	19b04 <main@@Base+0x6748>
   19ac0:	ldr	r5, [sp, #44]	; 0x2c
   19ac4:	ldr	r8, [sp, #40]	; 0x28
   19ac8:	add	r1, r2, #1
   19acc:	sub	r0, r5, r1
   19ad0:	cmp	r0, #2
   19ad4:	ldr	sl, [sp, #36]	; 0x24
   19ad8:	blt	19c18 <main@@Base+0x685c>
   19adc:	ldrb	r0, [r1]
   19ae0:	cmp	r0, #32
   19ae4:	bls	19bf8 <main@@Base+0x683c>
   19ae8:	ldr	r5, [sp, #44]	; 0x2c
   19aec:	ldr	r8, [sp, #40]	; 0x28
   19af0:	mov	r4, r1
   19af4:	b	19b24 <main@@Base+0x6768>
   19af8:	mov	r0, r8
   19afc:	mov	r1, r5
   19b00:	b	19b14 <main@@Base+0x6758>
   19b04:	ldr	r8, [sp, #40]	; 0x28
   19b08:	ldr	r5, [sp, #44]	; 0x2c
   19b0c:	mov	r1, r2
   19b10:	mov	r0, r8
   19b14:	mov	r2, r5
   19b18:	mov	r3, #10
   19b1c:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   19b20:	mov	r4, r0
   19b24:	ldr	sl, [sp, #36]	; 0x24
   19b28:	sub	r0, r5, r4
   19b2c:	cmp	r0, #2
   19b30:	blt	19b64 <main@@Base+0x67a8>
   19b34:	ldrb	r0, [r4]
   19b38:	cmp	r0, #32
   19b3c:	bls	19b50 <main@@Base+0x6794>
   19b40:	mov	r7, r4
   19b44:	cmp	r7, r5
   19b48:	bne	19b80 <main@@Base+0x67c4>
   19b4c:	b	1a698 <main@@Base+0x72dc>
   19b50:	bne	19b64 <main@@Base+0x67a8>
   19b54:	mov	r7, r4
   19b58:	ldrb	r0, [r7, #1]!
   19b5c:	cmp	r0, #32
   19b60:	bhi	19b78 <main@@Base+0x67bc>
   19b64:	mov	r0, r8
   19b68:	mov	r1, r4
   19b6c:	mov	r2, r5
   19b70:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   19b74:	mov	r7, r0
   19b78:	cmp	r7, r5
   19b7c:	beq	1a698 <main@@Base+0x72dc>
   19b80:	ldrb	r0, [r7]
   19b84:	cmp	r0, #44	; 0x2c
   19b88:	bne	1a840 <main@@Base+0x7484>
   19b8c:	add	r1, r7, #1
   19b90:	sub	r0, r5, r1
   19b94:	cmp	r0, #2
   19b98:	blt	19bd0 <main@@Base+0x6814>
   19b9c:	ldrb	r0, [r1]
   19ba0:	cmp	r0, #32
   19ba4:	bls	19bbc <main@@Base+0x6800>
   19ba8:	mov	r4, r1
   19bac:	cmp	r4, r5
   19bb0:	bne	19be8 <main@@Base+0x682c>
   19bb4:	b	1a870 <main@@Base+0x74b4>
   19bb8:	ldrdeq	sp, [r2], -ip
   19bbc:	bne	19bd0 <main@@Base+0x6814>
   19bc0:	ldrb	r0, [r7, #2]!
   19bc4:	mov	r4, r7
   19bc8:	cmp	r0, #32
   19bcc:	bhi	19be0 <main@@Base+0x6824>
   19bd0:	mov	r0, r8
   19bd4:	mov	r2, r5
   19bd8:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   19bdc:	mov	r4, r0
   19be0:	cmp	r4, r5
   19be4:	beq	1a870 <main@@Base+0x74b4>
   19be8:	ldrb	r0, [r4]
   19bec:	cmp	r0, #93	; 0x5d
   19bf0:	bne	192c0 <main@@Base+0x5f04>
   19bf4:	b	1a884 <main@@Base+0x74c8>
   19bf8:	ldr	r5, [sp, #44]	; 0x2c
   19bfc:	ldr	r8, [sp, #40]	; 0x28
   19c00:	ldr	sl, [sp, #36]	; 0x24
   19c04:	bne	19c18 <main@@Base+0x685c>
   19c08:	ldrb	r0, [r2, #2]!
   19c0c:	mov	r4, r2
   19c10:	cmp	r0, #32
   19c14:	bhi	19b28 <main@@Base+0x676c>
   19c18:	mov	r0, r8
   19c1c:	mov	r2, r5
   19c20:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   19c24:	b	19324 <main@@Base+0x5f68>
   19c28:	bne	19c3c <main@@Base+0x6880>
   19c2c:	mov	r7, r1
   19c30:	ldrb	r0, [r7, #1]!
   19c34:	cmp	r0, #32
   19c38:	bhi	19c4c <main@@Base+0x6890>
   19c3c:	mov	r0, r8
   19c40:	mov	r2, r5
   19c44:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   19c48:	mov	r7, r0
   19c4c:	cmp	r7, r5
   19c50:	beq	19c9c <main@@Base+0x68e0>
   19c54:	ldrb	r0, [r7]
   19c58:	cmp	r0, #58	; 0x3a
   19c5c:	bne	19c9c <main@@Base+0x68e0>
   19c60:	add	r1, r7, #1
   19c64:	sub	r0, r5, r1
   19c68:	cmp	r0, #2
   19c6c:	blt	1b960 <main@@Base+0x85a4>
   19c70:	ldrb	r0, [r1]
   19c74:	cmp	r0, #32
   19c78:	bls	1b944 <main@@Base+0x8588>
   19c7c:	ldr	r5, [sp, #44]	; 0x2c
   19c80:	ldr	r8, [sp, #40]	; 0x28
   19c84:	ldr	sl, [sp, #36]	; 0x24
   19c88:	mov	r7, r1
   19c8c:	cmp	r4, r7
   19c90:	bne	1b978 <main@@Base+0x85bc>
   19c94:	b	1c2b8 <main@@Base+0x8efc>
   19c98:	andeq	sp, r2, ip, asr r4
   19c9c:	mov	r0, r8
   19ca0:	mov	r1, r7
   19ca4:	mov	r2, r5
   19ca8:	mov	r3, #4
   19cac:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   19cb0:	b	1b96c <main@@Base+0x85b0>
   19cb4:	ldr	r5, [sp, #44]	; 0x2c
   19cb8:	ldr	r8, [sp, #40]	; 0x28
   19cbc:	ldr	sl, [sp, #36]	; 0x24
   19cc0:	bne	19cd0 <main@@Base+0x6914>
   19cc4:	ldrb	r0, [r4, #2]!
   19cc8:	cmp	r0, #32
   19ccc:	bhi	19ce0 <main@@Base+0x6924>
   19cd0:	mov	r0, r8
   19cd4:	mov	r2, r5
   19cd8:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   19cdc:	mov	r4, r0
   19ce0:	cmp	r7, r4
   19ce4:	beq	1b848 <main@@Base+0x848c>
   19ce8:	ldr	r0, [r8]
   19cec:	bl	2b780 <flatcc_builder_start_offset_vector@@Base>
   19cf0:	cmp	r0, #0
   19cf4:	bne	13488 <main@@Base+0xcc>
   19cf8:	cmp	r4, r5
   19cfc:	beq	19d38 <main@@Base+0x697c>
   19d00:	ldrb	r0, [r4]
   19d04:	cmp	r0, #91	; 0x5b
   19d08:	bne	19d38 <main@@Base+0x697c>
   19d0c:	add	r1, r4, #1
   19d10:	sub	r0, r5, r1
   19d14:	cmp	r0, #2
   19d18:	blt	1a6b8 <main@@Base+0x72fc>
   19d1c:	ldrb	r0, [r1]
   19d20:	cmp	r0, #32
   19d24:	bls	1a6a0 <main@@Base+0x72e4>
   19d28:	ldr	r5, [sp, #44]	; 0x2c
   19d2c:	ldr	r8, [sp, #40]	; 0x28
   19d30:	mov	r4, r1
   19d34:	b	1a6c8 <main@@Base+0x730c>
   19d38:	mov	r0, r8
   19d3c:	mov	r1, r4
   19d40:	mov	r2, r5
   19d44:	mov	r3, #22
   19d48:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   19d4c:	mov	r4, r0
   19d50:	ldr	r0, [r8]
   19d54:	bl	2b968 <flatcc_builder_end_offset_vector@@Base>
   19d58:	cmp	r0, #0
   19d5c:	str	r0, [sp, #52]	; 0x34
   19d60:	beq	13488 <main@@Base+0xcc>
   19d64:	ldr	r0, [r8]
   19d68:	mov	r1, #11
   19d6c:	b	15ec8 <main@@Base+0x2b0c>
   19d70:	ldr	r5, [sp, #44]	; 0x2c
   19d74:	ldr	r8, [sp, #40]	; 0x28
   19d78:	bne	19d88 <main@@Base+0x69cc>
   19d7c:	ldrb	r0, [r7, #2]!
   19d80:	cmp	r0, #32
   19d84:	bhi	19d98 <main@@Base+0x69dc>
   19d88:	mov	r0, r8
   19d8c:	mov	r2, r5
   19d90:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   19d94:	mov	r7, r0
   19d98:	cmp	sl, r7
   19d9c:	beq	17edc <main@@Base+0x4b20>
   19da0:	mov	r6, #0
   19da4:	cmp	r7, r5
   19da8:	str	r6, [fp, #-52]	; 0xffffffcc
   19dac:	str	r6, [fp, #-56]	; 0xffffffc8
   19db0:	str	r6, [fp, #-60]	; 0xffffffc4
   19db4:	str	r6, [sp, #56]	; 0x38
   19db8:	beq	19e00 <main@@Base+0x6a44>
   19dbc:	sub	r0, fp, #56	; 0x38
   19dc0:	mov	r1, r7
   19dc4:	mov	r2, r5
   19dc8:	add	r3, sp, #56	; 0x38
   19dcc:	str	r0, [sp]
   19dd0:	mov	r0, r8
   19dd4:	bl	3132c <flatcc_json_parser_integer@@Base>
   19dd8:	cmp	r0, r7
   19ddc:	beq	19e0c <main@@Base+0x6a50>
   19de0:	mov	r1, r0
   19de4:	ldr	r0, [sp, #56]	; 0x38
   19de8:	cmp	r0, #0
   19dec:	beq	19e18 <main@@Base+0x6a5c>
   19df0:	mov	r0, r8
   19df4:	mov	r2, r5
   19df8:	mov	r3, #8
   19dfc:	b	19e38 <main@@Base+0x6a7c>
   19e00:	mov	r4, r5
   19e04:	b	19e40 <main@@Base+0x6a84>
   19e08:	andeq	sp, r2, ip, lsr #6
   19e0c:	mov	r4, r7
   19e10:	b	19e40 <main@@Base+0x6a84>
   19e14:	andeq	sp, r2, r8, lsr r2
   19e18:	ldr	r0, [fp, #-52]	; 0xffffffcc
   19e1c:	cmp	r0, #0
   19e20:	beq	1a858 <main@@Base+0x749c>
   19e24:	ldr	r8, [sp, #40]	; 0x28
   19e28:	ldr	r5, [sp, #44]	; 0x2c
   19e2c:	mov	r3, #7
   19e30:	mov	r0, r8
   19e34:	mov	r2, r5
   19e38:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   19e3c:	mov	r4, r0
   19e40:	ldr	sl, [sp, #36]	; 0x24
   19e44:	cmp	r7, r4
   19e48:	bne	19e88 <main@@Base+0x6acc>
   19e4c:	sub	r0, fp, #60	; 0x3c
   19e50:	mov	r1, r7
   19e54:	mov	r2, r5
   19e58:	str	r0, [sp]
   19e5c:	mov	r0, r8
   19e60:	ldr	r3, [pc, #4084]	; 1ae5c <main@@Base+0x7aa0>
   19e64:	add	r3, pc, r3
   19e68:	bl	23814 <main@@Base+0x10458>
   19e6c:	mov	r4, r0
   19e70:	cmp	r0, r7
   19e74:	cmpne	r4, r5
   19e78:	beq	1d604 <main@@Base+0xa248>
   19e7c:	ldr	r6, [fp, #-60]	; 0xffffffc4
   19e80:	ldr	r8, [sp, #40]	; 0x28
   19e84:	ldr	sl, [sp, #36]	; 0x24
   19e88:	cmp	r6, #0
   19e8c:	bne	19e9c <main@@Base+0x6ae0>
   19e90:	ldrb	r0, [r8, #8]
   19e94:	tst	r0, #2
   19e98:	beq	1c2cc <main@@Base+0x8f10>
   19e9c:	ldr	r0, [r8]
   19ea0:	mov	r1, #17
   19ea4:	b	1b928 <main@@Base+0x856c>
   19ea8:	andeq	r6, r0, ip, asr sl
   19eac:	ldr	r5, [sp, #44]	; 0x2c
   19eb0:	ldr	r8, [sp, #40]	; 0x28
   19eb4:	bne	19ec4 <main@@Base+0x6b08>
   19eb8:	ldrb	r0, [r7, #2]!
   19ebc:	cmp	r0, #32
   19ec0:	bhi	19ed4 <main@@Base+0x6b18>
   19ec4:	mov	r0, r8
   19ec8:	mov	r2, r5
   19ecc:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   19ed0:	mov	r7, r0
   19ed4:	cmp	sl, r7
   19ed8:	beq	17fcc <main@@Base+0x4c10>
   19edc:	mov	r6, #0
   19ee0:	cmp	r7, r5
   19ee4:	str	r6, [fp, #-52]	; 0xffffffcc
   19ee8:	str	r6, [fp, #-56]	; 0xffffffc8
   19eec:	str	r6, [sp, #60]	; 0x3c
   19ef0:	str	r6, [sp, #56]	; 0x38
   19ef4:	str	r6, [fp, #-60]	; 0xffffffc4
   19ef8:	beq	19f50 <main@@Base+0x6b94>
   19efc:	sub	r0, fp, #56	; 0x38
   19f00:	mov	r1, r7
   19f04:	mov	r2, r5
   19f08:	sub	r3, fp, #60	; 0x3c
   19f0c:	str	r0, [sp]
   19f10:	mov	r0, r8
   19f14:	bl	3132c <flatcc_json_parser_integer@@Base>
   19f18:	cmp	r0, r7
   19f1c:	beq	19f5c <main@@Base+0x6ba0>
   19f20:	mov	r1, r0
   19f24:	ldr	r0, [fp, #-60]	; 0xffffffc4
   19f28:	cmp	r0, #0
   19f2c:	beq	19f6c <main@@Base+0x6bb0>
   19f30:	mov	r0, r8
   19f34:	mov	r2, r5
   19f38:	mov	r3, #8
   19f3c:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   19f40:	mov	r4, r0
   19f44:	mov	r6, #0
   19f48:	mov	r9, #0
   19f4c:	b	19f80 <main@@Base+0x6bc4>
   19f50:	mov	r9, #0
   19f54:	mov	r4, r5
   19f58:	b	19f80 <main@@Base+0x6bc4>
   19f5c:	mov	r6, #0
   19f60:	mov	r9, #0
   19f64:	mov	r4, r7
   19f68:	b	19f80 <main@@Base+0x6bc4>
   19f6c:	ldr	r6, [fp, #-56]	; 0xffffffc8
   19f70:	ldr	r9, [fp, #-52]	; 0xffffffcc
   19f74:	mov	r4, r1
   19f78:	str	r9, [sp, #60]	; 0x3c
   19f7c:	str	r6, [sp, #56]	; 0x38
   19f80:	ldr	sl, [sp, #36]	; 0x24
   19f84:	cmp	r7, r4
   19f88:	bne	19fcc <main@@Base+0x6c10>
   19f8c:	add	r0, sp, #56	; 0x38
   19f90:	mov	r1, r7
   19f94:	mov	r2, r5
   19f98:	str	r0, [sp]
   19f9c:	mov	r0, r8
   19fa0:	ldr	r3, [pc, #3916]	; 1aef4 <main@@Base+0x7b38>
   19fa4:	add	r3, pc, r3
   19fa8:	bl	23a54 <main@@Base+0x10698>
   19fac:	mov	r4, r0
   19fb0:	cmp	r0, r7
   19fb4:	cmpne	r4, r5
   19fb8:	beq	1d604 <main@@Base+0xa248>
   19fbc:	ldr	r6, [sp, #56]	; 0x38
   19fc0:	ldr	r9, [sp, #60]	; 0x3c
   19fc4:	ldr	r8, [sp, #40]	; 0x28
   19fc8:	ldr	sl, [sp, #36]	; 0x24
   19fcc:	orrs	r0, r6, r9
   19fd0:	bne	19fe0 <main@@Base+0x6c24>
   19fd4:	ldrb	r0, [r8, #8]
   19fd8:	tst	r0, #2
   19fdc:	beq	1c2cc <main@@Base+0x8f10>
   19fe0:	ldr	r0, [r8]
   19fe4:	mov	r1, #19
   19fe8:	mov	r2, #8
   19fec:	mov	r3, #8
   19ff0:	bl	2d0a0 <flatcc_builder_table_add@@Base>
   19ff4:	cmp	r0, #0
   19ff8:	beq	1d604 <main@@Base+0xa248>
   19ffc:	stm	r0, {r6, r9}
   1a000:	b	1c2cc <main@@Base+0x8f10>
   1a004:	beq	1ad28 <main@@Base+0x796c>
   1a008:	b	1ad38 <main@@Base+0x797c>
   1a00c:	ldr	r5, [sp, #44]	; 0x2c
   1a010:	ldr	r8, [sp, #40]	; 0x28
   1a014:	ldr	sl, [sp, #36]	; 0x24
   1a018:	bne	1a028 <main@@Base+0x6c6c>
   1a01c:	ldrb	r0, [r4, #2]!
   1a020:	cmp	r0, #32
   1a024:	bhi	1a038 <main@@Base+0x6c7c>
   1a028:	mov	r0, r8
   1a02c:	mov	r2, r5
   1a030:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1a034:	mov	r4, r0
   1a038:	cmp	r7, r4
   1a03c:	beq	1b848 <main@@Base+0x848c>
   1a040:	ldr	r0, [r8]
   1a044:	bl	2b780 <flatcc_builder_start_offset_vector@@Base>
   1a048:	cmp	r0, #0
   1a04c:	bne	13488 <main@@Base+0xcc>
   1a050:	cmp	r4, r5
   1a054:	beq	1a08c <main@@Base+0x6cd0>
   1a058:	ldrb	r0, [r4]
   1a05c:	cmp	r0, #91	; 0x5b
   1a060:	bne	1a08c <main@@Base+0x6cd0>
   1a064:	add	r1, r4, #1
   1a068:	sub	r0, r5, r1
   1a06c:	cmp	r0, #2
   1a070:	blt	1a8cc <main@@Base+0x7510>
   1a074:	ldrb	r0, [r1]
   1a078:	cmp	r0, #32
   1a07c:	bls	1a8b4 <main@@Base+0x74f8>
   1a080:	ldr	r5, [sp, #44]	; 0x2c
   1a084:	mov	r4, r1
   1a088:	b	1a8dc <main@@Base+0x7520>
   1a08c:	mov	r0, r8
   1a090:	mov	r1, r4
   1a094:	mov	r2, r5
   1a098:	mov	r3, #22
   1a09c:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   1a0a0:	mov	r4, r0
   1a0a4:	ldr	r0, [r8]
   1a0a8:	bl	2b968 <flatcc_builder_end_offset_vector@@Base>
   1a0ac:	cmp	r0, #0
   1a0b0:	str	r0, [sp, #52]	; 0x34
   1a0b4:	beq	13488 <main@@Base+0xcc>
   1a0b8:	ldr	r0, [r8]
   1a0bc:	mov	r1, #10
   1a0c0:	b	15ec8 <main@@Base+0x2b0c>
   1a0c4:	ldr	r5, [sp, #44]	; 0x2c
   1a0c8:	ldr	r8, [sp, #40]	; 0x28
   1a0cc:	ldr	sl, [sp, #36]	; 0x24
   1a0d0:	bne	1a0e0 <main@@Base+0x6d24>
   1a0d4:	ldrb	r0, [r4, #2]!
   1a0d8:	cmp	r0, #32
   1a0dc:	bhi	1a0f0 <main@@Base+0x6d34>
   1a0e0:	mov	r0, r8
   1a0e4:	mov	r2, r5
   1a0e8:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1a0ec:	mov	r4, r0
   1a0f0:	cmp	r7, r4
   1a0f4:	beq	1b848 <main@@Base+0x848c>
   1a0f8:	mov	r0, #0
   1a0fc:	mov	r1, #3
   1a100:	str	r0, [sp, #52]	; 0x34
   1a104:	ldr	r0, [r8]
   1a108:	bl	2bc04 <flatcc_builder_start_table@@Base>
   1a10c:	cmp	r0, #0
   1a110:	bne	1d060 <main@@Base+0x9ca4>
   1a114:	cmp	r4, r5
   1a118:	beq	1a14c <main@@Base+0x6d90>
   1a11c:	ldrb	r0, [r4]
   1a120:	cmp	r0, #123	; 0x7b
   1a124:	bne	1a14c <main@@Base+0x6d90>
   1a128:	add	r1, r4, #1
   1a12c:	sub	r0, r5, r1
   1a130:	cmp	r0, #2
   1a134:	blt	1c700 <main@@Base+0x9344>
   1a138:	ldrb	r0, [r1]
   1a13c:	cmp	r0, #32
   1a140:	bls	1c6f0 <main@@Base+0x9334>
   1a144:	mov	r4, r1
   1a148:	b	1c710 <main@@Base+0x9354>
   1a14c:	mov	r0, r8
   1a150:	mov	r1, r4
   1a154:	mov	r2, r5
   1a158:	mov	r3, #21
   1a15c:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   1a160:	mov	r4, r0
   1a164:	ldr	r0, [r8, #24]
   1a168:	cmp	r0, #0
   1a16c:	beq	1a178 <main@@Base+0x6dbc>
   1a170:	ldr	r5, [sp, #44]	; 0x2c
   1a174:	b	1d05c <main@@Base+0x9ca0>
   1a178:	ldr	r0, [r8]
   1a17c:	bl	2c62c <flatcc_builder_end_table@@Base>
   1a180:	cmp	r0, #0
   1a184:	str	r0, [sp, #52]	; 0x34
   1a188:	beq	1d054 <main@@Base+0x9c98>
   1a18c:	ldr	r5, [sp, #44]	; 0x2c
   1a190:	ldr	r8, [sp, #40]	; 0x28
   1a194:	ldr	sl, [sp, #36]	; 0x24
   1a198:	b	1d084 <main@@Base+0x9cc8>
   1a19c:	ldr	r5, [sp, #44]	; 0x2c
   1a1a0:	ldr	r8, [sp, #40]	; 0x28
   1a1a4:	ldr	sl, [sp, #36]	; 0x24
   1a1a8:	bne	1a1b8 <main@@Base+0x6dfc>
   1a1ac:	ldrb	r0, [r4, #2]!
   1a1b0:	cmp	r0, #32
   1a1b4:	bhi	1a1c8 <main@@Base+0x6e0c>
   1a1b8:	mov	r0, r8
   1a1bc:	mov	r2, r5
   1a1c0:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1a1c4:	mov	r4, r0
   1a1c8:	cmp	r7, r4
   1a1cc:	beq	1b848 <main@@Base+0x848c>
   1a1d0:	ldr	r0, [r8]
   1a1d4:	mov	r1, #1
   1a1d8:	mov	r2, #1
   1a1dc:	mvn	r3, #0
   1a1e0:	bl	2b6f4 <flatcc_builder_start_vector@@Base>
   1a1e4:	cmp	r0, #0
   1a1e8:	bne	13488 <main@@Base+0xcc>
   1a1ec:	cmp	r4, r5
   1a1f0:	beq	1a230 <main@@Base+0x6e74>
   1a1f4:	ldrb	r0, [r4]
   1a1f8:	cmp	r0, #91	; 0x5b
   1a1fc:	bne	1a230 <main@@Base+0x6e74>
   1a200:	add	r1, r4, #1
   1a204:	sub	r0, r5, r1
   1a208:	cmp	r0, #2
   1a20c:	blt	1aa6c <main@@Base+0x76b0>
   1a210:	ldrb	r0, [r1]
   1a214:	cmp	r0, #32
   1a218:	bls	1aa54 <main@@Base+0x7698>
   1a21c:	ldr	r5, [sp, #44]	; 0x2c
   1a220:	mov	r4, r1
   1a224:	cmp	r4, r5
   1a228:	bne	1aa84 <main@@Base+0x76c8>
   1a22c:	b	1aae8 <main@@Base+0x772c>
   1a230:	mov	r0, r8
   1a234:	mov	r1, r4
   1a238:	mov	r2, r5
   1a23c:	mov	r3, #22
   1a240:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   1a244:	mov	r4, r0
   1a248:	ldr	r0, [r8]
   1a24c:	bl	2c96c <flatcc_builder_end_vector@@Base>
   1a250:	cmp	r0, #0
   1a254:	str	r0, [sp, #52]	; 0x34
   1a258:	beq	13488 <main@@Base+0xcc>
   1a25c:	ldr	r0, [r8]
   1a260:	mov	r1, #5
   1a264:	b	15ec8 <main@@Base+0x2b0c>
   1a268:	ldr	r5, [sp, #44]	; 0x2c
   1a26c:	ldr	r8, [sp, #40]	; 0x28
   1a270:	ldr	sl, [sp, #36]	; 0x24
   1a274:	bne	1a288 <main@@Base+0x6ecc>
   1a278:	ldrb	r0, [r4, #2]!
   1a27c:	mov	r7, r4
   1a280:	cmp	r0, #32
   1a284:	bhi	1670c <main@@Base+0x3350>
   1a288:	mov	r0, r8
   1a28c:	mov	r2, r5
   1a290:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1a294:	b	16708 <main@@Base+0x334c>
   1a298:	ldr	r5, [sp, #44]	; 0x2c
   1a29c:	ldr	r8, [sp, #40]	; 0x28
   1a2a0:	bne	1a2b0 <main@@Base+0x6ef4>
   1a2a4:	ldrb	r0, [r4, #2]!
   1a2a8:	cmp	r0, #32
   1a2ac:	bhi	1a2c0 <main@@Base+0x6f04>
   1a2b0:	mov	r0, r8
   1a2b4:	mov	r2, r5
   1a2b8:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1a2bc:	mov	r4, r0
   1a2c0:	cmp	sl, r4
   1a2c4:	beq	15804 <main@@Base+0x2448>
   1a2c8:	ldr	r0, [r8]
   1a2cc:	mov	r1, #8
   1a2d0:	mov	r2, #8
   1a2d4:	mvn	r3, #-536870912	; 0xe0000000
   1a2d8:	bl	2b6f4 <flatcc_builder_start_vector@@Base>
   1a2dc:	cmp	r0, #0
   1a2e0:	bne	13488 <main@@Base+0xcc>
   1a2e4:	cmp	r4, r5
   1a2e8:	beq	1a328 <main@@Base+0x6f6c>
   1a2ec:	ldrb	r0, [r4]
   1a2f0:	cmp	r0, #91	; 0x5b
   1a2f4:	bne	1a328 <main@@Base+0x6f6c>
   1a2f8:	add	r1, r4, #1
   1a2fc:	sub	r0, r5, r1
   1a300:	cmp	r0, #2
   1a304:	blt	1b50c <main@@Base+0x8150>
   1a308:	ldrb	r0, [r1]
   1a30c:	cmp	r0, #32
   1a310:	bls	1b4f4 <main@@Base+0x8138>
   1a314:	ldr	r5, [sp, #44]	; 0x2c
   1a318:	mov	r4, r1
   1a31c:	cmp	r4, r5
   1a320:	bne	1b524 <main@@Base+0x8168>
   1a324:	b	1b564 <main@@Base+0x81a8>
   1a328:	mov	r0, r8
   1a32c:	mov	r1, r4
   1a330:	mov	r2, r5
   1a334:	mov	r3, #22
   1a338:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   1a33c:	ldr	sl, [sp, #36]	; 0x24
   1a340:	mov	r4, r0
   1a344:	ldr	r0, [r8]
   1a348:	bl	2c96c <flatcc_builder_end_vector@@Base>
   1a34c:	cmp	r0, #0
   1a350:	str	r0, [sp, #52]	; 0x34
   1a354:	beq	13488 <main@@Base+0xcc>
   1a358:	ldr	r0, [r8]
   1a35c:	mov	r1, #32
   1a360:	b	15ec8 <main@@Base+0x2b0c>
   1a364:	ldr	r5, [sp, #44]	; 0x2c
   1a368:	bne	1a37c <main@@Base+0x6fc0>
   1a36c:	mov	r7, r1
   1a370:	ldrb	r0, [r7, #1]!
   1a374:	cmp	r0, #32
   1a378:	bhi	1a38c <main@@Base+0x6fd0>
   1a37c:	ldr	r0, [sp, #40]	; 0x28
   1a380:	mov	r2, r5
   1a384:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1a388:	mov	r7, r0
   1a38c:	cmp	r7, r5
   1a390:	beq	1a3d0 <main@@Base+0x7014>
   1a394:	ldrb	r0, [r7]
   1a398:	cmp	r0, #58	; 0x3a
   1a39c:	bne	1a3d0 <main@@Base+0x7014>
   1a3a0:	ldr	r8, [sp, #40]	; 0x28
   1a3a4:	add	r1, r7, #1
   1a3a8:	sub	r0, r5, r1
   1a3ac:	cmp	r0, #2
   1a3b0:	blt	1c0dc <main@@Base+0x8d20>
   1a3b4:	ldrb	r0, [r1]
   1a3b8:	cmp	r0, #32
   1a3bc:	bls	1c0c4 <main@@Base+0x8d08>
   1a3c0:	ldr	r5, [sp, #44]	; 0x2c
   1a3c4:	ldr	r8, [sp, #40]	; 0x28
   1a3c8:	mov	r7, r1
   1a3cc:	b	1c0ec <main@@Base+0x8d30>
   1a3d0:	ldr	r8, [sp, #40]	; 0x28
   1a3d4:	mov	r1, r7
   1a3d8:	mov	r2, r5
   1a3dc:	mov	r3, #4
   1a3e0:	mov	r0, r8
   1a3e4:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   1a3e8:	b	1c0e8 <main@@Base+0x8d2c>
   1a3ec:	ldr	r5, [sp, #44]	; 0x2c
   1a3f0:	bne	1a404 <main@@Base+0x7048>
   1a3f4:	mov	r7, r1
   1a3f8:	ldrb	r0, [r7, #1]!
   1a3fc:	cmp	r0, #32
   1a400:	bhi	1a414 <main@@Base+0x7058>
   1a404:	ldr	r0, [sp, #40]	; 0x28
   1a408:	mov	r2, r5
   1a40c:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1a410:	mov	r7, r0
   1a414:	cmp	r7, r5
   1a418:	beq	1a458 <main@@Base+0x709c>
   1a41c:	ldrb	r0, [r7]
   1a420:	cmp	r0, #58	; 0x3a
   1a424:	bne	1a458 <main@@Base+0x709c>
   1a428:	ldr	r8, [sp, #40]	; 0x28
   1a42c:	add	r1, r7, #1
   1a430:	sub	r0, r5, r1
   1a434:	cmp	r0, #2
   1a438:	blt	1c22c <main@@Base+0x8e70>
   1a43c:	ldrb	r0, [r1]
   1a440:	cmp	r0, #32
   1a444:	bls	1c214 <main@@Base+0x8e58>
   1a448:	ldr	r5, [sp, #44]	; 0x2c
   1a44c:	ldr	r8, [sp, #40]	; 0x28
   1a450:	mov	r7, r1
   1a454:	b	1c23c <main@@Base+0x8e80>
   1a458:	ldr	r8, [sp, #40]	; 0x28
   1a45c:	mov	r1, r7
   1a460:	mov	r2, r5
   1a464:	mov	r3, #4
   1a468:	mov	r0, r8
   1a46c:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   1a470:	b	1c238 <main@@Base+0x8e7c>
   1a474:	ldr	r5, [sp, #44]	; 0x2c
   1a478:	ldr	r8, [sp, #40]	; 0x28
   1a47c:	ldr	sl, [sp, #36]	; 0x24
   1a480:	bne	1a490 <main@@Base+0x70d4>
   1a484:	ldrb	r0, [r4, #2]!
   1a488:	cmp	r0, #32
   1a48c:	bhi	1a4a0 <main@@Base+0x70e4>
   1a490:	mov	r0, r8
   1a494:	mov	r2, r5
   1a498:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1a49c:	mov	r4, r0
   1a4a0:	cmp	r7, r4
   1a4a4:	beq	1b848 <main@@Base+0x848c>
   1a4a8:	cmp	r4, r5
   1a4ac:	beq	1a50c <main@@Base+0x7150>
   1a4b0:	ldrb	r0, [r4]
   1a4b4:	cmp	r0, #91	; 0x5b
   1a4b8:	bne	1a50c <main@@Base+0x7150>
   1a4bc:	ldr	r0, [r8]
   1a4c0:	mov	r1, #1
   1a4c4:	mov	r2, #1
   1a4c8:	mvn	r3, #0
   1a4cc:	bl	2b6f4 <flatcc_builder_start_vector@@Base>
   1a4d0:	cmp	r0, #0
   1a4d4:	bne	1d604 <main@@Base+0xa248>
   1a4d8:	ldrb	r0, [r4]
   1a4dc:	cmp	r0, #91	; 0x5b
   1a4e0:	bne	1a558 <main@@Base+0x719c>
   1a4e4:	ldr	r0, [sp, #44]	; 0x2c
   1a4e8:	add	r1, r4, #1
   1a4ec:	sub	r0, r0, r1
   1a4f0:	cmp	r0, #2
   1a4f4:	blt	1c474 <main@@Base+0x90b8>
   1a4f8:	ldrb	r0, [r1]
   1a4fc:	cmp	r0, #32
   1a500:	bls	1c464 <main@@Base+0x90a8>
   1a504:	mov	r4, r1
   1a508:	b	1c484 <main@@Base+0x90c8>
   1a50c:	ldr	r0, [r8]
   1a510:	mov	r1, #0
   1a514:	mov	r2, #0
   1a518:	mov	r3, #0
   1a51c:	bl	2a628 <flatcc_builder_start_buffer@@Base>
   1a520:	cmp	r0, #0
   1a524:	bne	13488 <main@@Base+0xcc>
   1a528:	mov	r0, r8
   1a52c:	mov	r1, r4
   1a530:	mov	r2, r5
   1a534:	add	r3, sp, #52	; 0x34
   1a538:	bl	13448 <main@@Base+0x8c>
   1a53c:	ldr	r1, [sp, #52]	; 0x34
   1a540:	mov	r4, r0
   1a544:	cmp	r1, #0
   1a548:	beq	13488 <main@@Base+0xcc>
   1a54c:	ldr	r0, [r8]
   1a550:	bl	2a828 <flatcc_builder_end_buffer@@Base>
   1a554:	b	1d484 <main@@Base+0xa0c8>
   1a558:	ldr	r0, [sp, #40]	; 0x28
   1a55c:	ldr	r2, [sp, #44]	; 0x2c
   1a560:	mov	r1, r4
   1a564:	mov	r3, #22
   1a568:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   1a56c:	b	1d470 <main@@Base+0xa0b4>
   1a570:	ldr	r5, [sp, #44]	; 0x2c
   1a574:	ldr	r8, [sp, #40]	; 0x28
   1a578:	ldr	sl, [sp, #36]	; 0x24
   1a57c:	bne	1a58c <main@@Base+0x71d0>
   1a580:	ldrb	r0, [r7, #2]!
   1a584:	cmp	r0, #32
   1a588:	bhi	1a59c <main@@Base+0x71e0>
   1a58c:	mov	r0, r8
   1a590:	mov	r2, r5
   1a594:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1a598:	mov	r7, r0
   1a59c:	cmp	r4, r7
   1a5a0:	beq	1c2b8 <main@@Base+0x8efc>
   1a5a4:	mov	r6, #0
   1a5a8:	cmp	r7, r5
   1a5ac:	str	r6, [fp, #-52]	; 0xffffffcc
   1a5b0:	str	r6, [fp, #-56]	; 0xffffffc8
   1a5b4:	str	r6, [fp, #-60]	; 0xffffffc4
   1a5b8:	str	r6, [sp, #56]	; 0x38
   1a5bc:	beq	1a61c <main@@Base+0x7260>
   1a5c0:	sub	r0, fp, #56	; 0x38
   1a5c4:	mov	r1, r7
   1a5c8:	mov	r2, r5
   1a5cc:	add	r3, sp, #56	; 0x38
   1a5d0:	str	r0, [sp]
   1a5d4:	mov	r0, r8
   1a5d8:	bl	3132c <flatcc_json_parser_integer@@Base>
   1a5dc:	cmp	r0, r7
   1a5e0:	beq	1a62c <main@@Base+0x7270>
   1a5e4:	ldr	r2, [sp, #56]	; 0x38
   1a5e8:	mov	r4, r0
   1a5ec:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a5f0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1a5f4:	cmp	r2, #0
   1a5f8:	beq	1a63c <main@@Base+0x7280>
   1a5fc:	subs	r2, r0, #-2147483647	; 0x80000001
   1a600:	sbcs	r1, r1, #0
   1a604:	bcc	1a66c <main@@Base+0x72b0>
   1a608:	ldr	r8, [sp, #40]	; 0x28
   1a60c:	ldr	r5, [sp, #44]	; 0x2c
   1a610:	mov	r1, r4
   1a614:	mov	r3, #8
   1a618:	b	1a658 <main@@Base+0x729c>
   1a61c:	mov	r4, r5
   1a620:	cmp	r7, r4
   1a624:	bne	1b90c <main@@Base+0x8550>
   1a628:	b	1b8c8 <main@@Base+0x850c>
   1a62c:	mov	r4, r7
   1a630:	cmp	r7, r4
   1a634:	bne	1b90c <main@@Base+0x8550>
   1a638:	b	1b8c8 <main@@Base+0x850c>
   1a63c:	subs	r2, r0, #-2147483648	; 0x80000000
   1a640:	sbcs	r1, r1, #0
   1a644:	bcc	1b8ac <main@@Base+0x84f0>
   1a648:	ldr	r8, [sp, #40]	; 0x28
   1a64c:	ldr	r5, [sp, #44]	; 0x2c
   1a650:	mov	r1, r4
   1a654:	mov	r3, #7
   1a658:	mov	r0, r8
   1a65c:	mov	r2, r5
   1a660:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   1a664:	mov	r4, r0
   1a668:	b	1b8bc <main@@Base+0x8500>
   1a66c:	rsb	r6, r0, #0
   1a670:	b	1b8b0 <main@@Base+0x84f4>
   1a674:	ldr	r8, [sp, #40]	; 0x28
   1a678:	ldr	r5, [sp, #44]	; 0x2c
   1a67c:	mov	r1, r4
   1a680:	mov	r3, #9
   1a684:	mov	r0, r8
   1a688:	mov	r2, r5
   1a68c:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   1a690:	ldr	sl, [sp, #36]	; 0x24
   1a694:	b	16cac <main@@Base+0x38f0>
   1a698:	mov	r7, r5
   1a69c:	b	18a34 <main@@Base+0x5678>
   1a6a0:	ldr	r5, [sp, #44]	; 0x2c
   1a6a4:	ldr	r8, [sp, #40]	; 0x28
   1a6a8:	bne	1a6b8 <main@@Base+0x72fc>
   1a6ac:	ldrb	r0, [r4, #2]!
   1a6b0:	cmp	r0, #32
   1a6b4:	bhi	1a6c8 <main@@Base+0x730c>
   1a6b8:	mov	r0, r8
   1a6bc:	mov	r2, r5
   1a6c0:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1a6c4:	mov	r4, r0
   1a6c8:	cmp	r4, r5
   1a6cc:	mov	r2, r5
   1a6d0:	beq	1a734 <main@@Base+0x7378>
   1a6d4:	ldrb	r0, [r4]
   1a6d8:	cmp	r0, #93	; 0x5d
   1a6dc:	bne	1a728 <main@@Base+0x736c>
   1a6e0:	ldr	r5, [sp, #44]	; 0x2c
   1a6e4:	ldr	r8, [sp, #40]	; 0x28
   1a6e8:	ldr	sl, [sp, #36]	; 0x24
   1a6ec:	add	r1, r4, #1
   1a6f0:	sub	r0, r5, r1
   1a6f4:	cmp	r0, #2
   1a6f8:	blt	1d2e8 <main@@Base+0x9f2c>
   1a6fc:	ldrb	r0, [r1]
   1a700:	cmp	r0, #32
   1a704:	bhi	1bd3c <main@@Base+0x8980>
   1a708:	ldr	r5, [sp, #44]	; 0x2c
   1a70c:	ldr	r8, [sp, #40]	; 0x28
   1a710:	ldr	sl, [sp, #36]	; 0x24
   1a714:	bne	1d2e8 <main@@Base+0x9f2c>
   1a718:	ldrb	r0, [r4, #2]!
   1a71c:	cmp	r0, #32
   1a720:	bhi	19d50 <main@@Base+0x6994>
   1a724:	b	1d2e8 <main@@Base+0x9f2c>
   1a728:	ldr	r5, [sp, #44]	; 0x2c
   1a72c:	ldr	r8, [sp, #40]	; 0x28
   1a730:	mov	r2, r4
   1a734:	mov	r1, r2
   1a738:	mov	r0, r8
   1a73c:	mov	r2, r5
   1a740:	add	r3, sp, #52	; 0x34
   1a744:	bl	13448 <main@@Base+0x8c>
   1a748:	mov	r4, r0
   1a74c:	ldr	r0, [sp, #52]	; 0x34
   1a750:	cmp	r0, #0
   1a754:	beq	13488 <main@@Base+0xcc>
   1a758:	ldr	r0, [r8]
   1a75c:	mov	r1, #1
   1a760:	bl	2aed8 <flatcc_builder_extend_offset_vector@@Base>
   1a764:	cmp	r0, #0
   1a768:	beq	13488 <main@@Base+0xcc>
   1a76c:	ldr	r1, [sp, #52]	; 0x34
   1a770:	str	r1, [r0]
   1a774:	sub	r0, r5, r4
   1a778:	cmp	r0, #2
   1a77c:	blt	1a7b0 <main@@Base+0x73f4>
   1a780:	ldrb	r0, [r4]
   1a784:	cmp	r0, #32
   1a788:	bls	1a79c <main@@Base+0x73e0>
   1a78c:	mov	r2, r4
   1a790:	cmp	r2, r5
   1a794:	bne	1a7cc <main@@Base+0x7410>
   1a798:	b	1bcbc <main@@Base+0x8900>
   1a79c:	bne	1a7b0 <main@@Base+0x73f4>
   1a7a0:	mov	r2, r4
   1a7a4:	ldrb	r0, [r2, #1]!
   1a7a8:	cmp	r0, #32
   1a7ac:	bhi	1a7c4 <main@@Base+0x7408>
   1a7b0:	mov	r0, r8
   1a7b4:	mov	r1, r4
   1a7b8:	mov	r2, r5
   1a7bc:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1a7c0:	mov	r2, r0
   1a7c4:	cmp	r2, r5
   1a7c8:	beq	1bcbc <main@@Base+0x8900>
   1a7cc:	ldrb	r0, [r2]
   1a7d0:	cmp	r0, #44	; 0x2c
   1a7d4:	bne	1bd0c <main@@Base+0x8950>
   1a7d8:	add	r1, r2, #1
   1a7dc:	sub	r0, r5, r1
   1a7e0:	cmp	r0, #2
   1a7e4:	blt	1a818 <main@@Base+0x745c>
   1a7e8:	ldrb	r0, [r1]
   1a7ec:	cmp	r0, #32
   1a7f0:	bls	1a808 <main@@Base+0x744c>
   1a7f4:	mov	r2, r1
   1a7f8:	cmp	r2, r5
   1a7fc:	bne	1a830 <main@@Base+0x7474>
   1a800:	b	1bd64 <main@@Base+0x89a8>
   1a804:	strdeq	ip, [r2], -ip	; <UNPREDICTABLE>
   1a808:	bne	1a818 <main@@Base+0x745c>
   1a80c:	ldrb	r0, [r2, #2]!
   1a810:	cmp	r0, #32
   1a814:	bhi	1a828 <main@@Base+0x746c>
   1a818:	mov	r0, r8
   1a81c:	mov	r2, r5
   1a820:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1a824:	mov	r2, r0
   1a828:	cmp	r2, r5
   1a82c:	beq	1bd64 <main@@Base+0x89a8>
   1a830:	ldrb	r0, [r2]
   1a834:	cmp	r0, #93	; 0x5d
   1a838:	bne	1a734 <main@@Base+0x7378>
   1a83c:	b	1bd1c <main@@Base+0x8960>
   1a840:	cmp	r0, #93	; 0x5d
   1a844:	bne	1bc8c <main@@Base+0x88d0>
   1a848:	ldr	r5, [sp, #44]	; 0x2c
   1a84c:	ldr	r8, [sp, #40]	; 0x28
   1a850:	ldr	sl, [sp, #36]	; 0x24
   1a854:	b	19280 <main@@Base+0x5ec4>
   1a858:	ldr	r6, [fp, #-56]	; 0xffffffc8
   1a85c:	ldr	r5, [sp, #44]	; 0x2c
   1a860:	ldr	r8, [sp, #40]	; 0x28
   1a864:	mov	r4, r1
   1a868:	str	r6, [fp, #-60]	; 0xffffffc4
   1a86c:	b	19e40 <main@@Base+0x6a84>
   1a870:	mov	r0, r8
   1a874:	mov	r1, r5
   1a878:	mov	r2, r5
   1a87c:	mov	r3, #9
   1a880:	b	18a2c <main@@Base+0x5670>
   1a884:	add	r1, r4, #1
   1a888:	sub	r0, r5, r1
   1a88c:	cmp	r0, #2
   1a890:	blt	1d10c <main@@Base+0x9d50>
   1a894:	ldrb	r0, [r1]
   1a898:	cmp	r0, #32
   1a89c:	bls	1d0ec <main@@Base+0x9d30>
   1a8a0:	ldr	r5, [sp, #44]	; 0x2c
   1a8a4:	ldr	r8, [sp, #40]	; 0x28
   1a8a8:	ldr	sl, [sp, #36]	; 0x24
   1a8ac:	mov	r7, r1
   1a8b0:	b	18a34 <main@@Base+0x5678>
   1a8b4:	ldr	r5, [sp, #44]	; 0x2c
   1a8b8:	ldr	r8, [sp, #40]	; 0x28
   1a8bc:	bne	1a8cc <main@@Base+0x7510>
   1a8c0:	ldrb	r0, [r4, #2]!
   1a8c4:	cmp	r0, #32
   1a8c8:	bhi	1a8dc <main@@Base+0x7520>
   1a8cc:	mov	r0, r8
   1a8d0:	mov	r2, r5
   1a8d4:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1a8d8:	mov	r4, r0
   1a8dc:	cmp	r4, r5
   1a8e0:	mov	r2, r5
   1a8e4:	beq	1a940 <main@@Base+0x7584>
   1a8e8:	ldrb	r0, [r4]
   1a8ec:	cmp	r0, #93	; 0x5d
   1a8f0:	bne	1a93c <main@@Base+0x7580>
   1a8f4:	ldr	r5, [sp, #44]	; 0x2c
   1a8f8:	ldr	r8, [sp, #40]	; 0x28
   1a8fc:	ldr	sl, [sp, #36]	; 0x24
   1a900:	add	r1, r4, #1
   1a904:	sub	r0, r5, r1
   1a908:	cmp	r0, #2
   1a90c:	blt	1d3f8 <main@@Base+0xa03c>
   1a910:	ldrb	r0, [r1]
   1a914:	cmp	r0, #32
   1a918:	bhi	1be00 <main@@Base+0x8a44>
   1a91c:	ldr	r5, [sp, #44]	; 0x2c
   1a920:	ldr	r8, [sp, #40]	; 0x28
   1a924:	ldr	sl, [sp, #36]	; 0x24
   1a928:	bne	1d3f8 <main@@Base+0xa03c>
   1a92c:	ldrb	r0, [r4, #2]!
   1a930:	cmp	r0, #32
   1a934:	bhi	1a0a4 <main@@Base+0x6ce8>
   1a938:	b	1d3f8 <main@@Base+0xa03c>
   1a93c:	mov	r2, r4
   1a940:	ldr	r5, [sp, #44]	; 0x2c
   1a944:	ldr	r8, [sp, #40]	; 0x28
   1a948:	mov	r1, r2
   1a94c:	mov	r0, r8
   1a950:	mov	r2, r5
   1a954:	add	r3, sp, #52	; 0x34
   1a958:	bl	318d8 <flatcc_json_parser_build_string@@Base>
   1a95c:	mov	r4, r0
   1a960:	ldr	r0, [sp, #52]	; 0x34
   1a964:	cmp	r0, #0
   1a968:	beq	13488 <main@@Base+0xcc>
   1a96c:	ldr	r0, [r8]
   1a970:	mov	r1, #1
   1a974:	bl	2aed8 <flatcc_builder_extend_offset_vector@@Base>
   1a978:	cmp	r0, #0
   1a97c:	beq	13488 <main@@Base+0xcc>
   1a980:	ldr	r1, [sp, #52]	; 0x34
   1a984:	str	r1, [r0]
   1a988:	sub	r0, r5, r4
   1a98c:	cmp	r0, #2
   1a990:	blt	1a9c4 <main@@Base+0x7608>
   1a994:	ldrb	r0, [r4]
   1a998:	cmp	r0, #32
   1a99c:	bls	1a9b0 <main@@Base+0x75f4>
   1a9a0:	mov	r2, r4
   1a9a4:	cmp	r2, r5
   1a9a8:	bne	1a9e0 <main@@Base+0x7624>
   1a9ac:	b	1bda0 <main@@Base+0x89e4>
   1a9b0:	bne	1a9c4 <main@@Base+0x7608>
   1a9b4:	mov	r2, r4
   1a9b8:	ldrb	r0, [r2, #1]!
   1a9bc:	cmp	r0, #32
   1a9c0:	bhi	1a9d8 <main@@Base+0x761c>
   1a9c4:	mov	r0, r8
   1a9c8:	mov	r1, r4
   1a9cc:	mov	r2, r5
   1a9d0:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1a9d4:	mov	r2, r0
   1a9d8:	cmp	r2, r5
   1a9dc:	beq	1bda0 <main@@Base+0x89e4>
   1a9e0:	ldrb	r0, [r2]
   1a9e4:	cmp	r0, #44	; 0x2c
   1a9e8:	bne	1bdd0 <main@@Base+0x8a14>
   1a9ec:	add	r1, r2, #1
   1a9f0:	sub	r0, r5, r1
   1a9f4:	cmp	r0, #2
   1a9f8:	blt	1aa2c <main@@Base+0x7670>
   1a9fc:	ldrb	r0, [r1]
   1aa00:	cmp	r0, #32
   1aa04:	bls	1aa1c <main@@Base+0x7660>
   1aa08:	mov	r2, r1
   1aa0c:	cmp	r2, r5
   1aa10:	bne	1aa44 <main@@Base+0x7688>
   1aa14:	b	1be38 <main@@Base+0x8a7c>
   1aa18:	strdeq	ip, [r2], -r4
   1aa1c:	bne	1aa2c <main@@Base+0x7670>
   1aa20:	ldrb	r0, [r2, #2]!
   1aa24:	cmp	r0, #32
   1aa28:	bhi	1aa3c <main@@Base+0x7680>
   1aa2c:	mov	r0, r8
   1aa30:	mov	r2, r5
   1aa34:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1aa38:	mov	r2, r0
   1aa3c:	cmp	r2, r5
   1aa40:	beq	1be38 <main@@Base+0x8a7c>
   1aa44:	ldrb	r0, [r2]
   1aa48:	cmp	r0, #93	; 0x5d
   1aa4c:	bne	1a948 <main@@Base+0x758c>
   1aa50:	b	1bde0 <main@@Base+0x8a24>
   1aa54:	ldr	r5, [sp, #44]	; 0x2c
   1aa58:	ldr	r8, [sp, #40]	; 0x28
   1aa5c:	bne	1aa6c <main@@Base+0x76b0>
   1aa60:	ldrb	r0, [r4, #2]!
   1aa64:	cmp	r0, #32
   1aa68:	bhi	1aa7c <main@@Base+0x76c0>
   1aa6c:	mov	r0, r8
   1aa70:	mov	r2, r5
   1aa74:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1aa78:	mov	r4, r0
   1aa7c:	cmp	r4, r5
   1aa80:	beq	1aae8 <main@@Base+0x772c>
   1aa84:	ldrb	r0, [r4]
   1aa88:	cmp	r0, #93	; 0x5d
   1aa8c:	bne	1aae4 <main@@Base+0x7728>
   1aa90:	ldr	r5, [sp, #44]	; 0x2c
   1aa94:	ldr	r8, [sp, #40]	; 0x28
   1aa98:	ldr	sl, [sp, #36]	; 0x24
   1aa9c:	add	r1, r4, #1
   1aaa0:	sub	r0, r5, r1
   1aaa4:	cmp	r0, #2
   1aaa8:	blt	1aad4 <main@@Base+0x7718>
   1aaac:	ldrb	r0, [r1]
   1aab0:	cmp	r0, #32
   1aab4:	bhi	1bdc8 <main@@Base+0x8a0c>
   1aab8:	ldr	r5, [sp, #44]	; 0x2c
   1aabc:	ldr	r8, [sp, #40]	; 0x28
   1aac0:	ldr	sl, [sp, #36]	; 0x24
   1aac4:	bne	1aad4 <main@@Base+0x7718>
   1aac8:	ldrb	r0, [r4, #2]!
   1aacc:	cmp	r0, #32
   1aad0:	bhi	1a248 <main@@Base+0x6e8c>
   1aad4:	mov	r0, r8
   1aad8:	mov	r2, r5
   1aadc:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1aae0:	b	1a244 <main@@Base+0x6e88>
   1aae4:	mov	r5, r4
   1aae8:	mov	r0, #0
   1aaec:	mov	r1, #1
   1aaf0:	strb	r0, [fp, #-60]	; 0xffffffc4
   1aaf4:	ldr	r0, [sp, #40]	; 0x28
   1aaf8:	ldr	r0, [r0]
   1aafc:	bl	2ab30 <flatcc_builder_extend_vector@@Base>
   1ab00:	cmp	r0, #0
   1ab04:	beq	1d5e0 <main@@Base+0xa224>
   1ab08:	mov	r4, r5
   1ab0c:	ldr	r5, [sp, #44]	; 0x2c
   1ab10:	ldr	r8, [sp, #40]	; 0x28
   1ab14:	mov	r7, r0
   1ab18:	mov	r6, #0
   1ab1c:	cmp	r4, r5
   1ab20:	str	r6, [fp, #-52]	; 0xffffffcc
   1ab24:	str	r6, [fp, #-56]	; 0xffffffc8
   1ab28:	strb	r6, [fp, #-60]	; 0xffffffc4
   1ab2c:	str	r6, [sp, #56]	; 0x38
   1ab30:	beq	1ab78 <main@@Base+0x77bc>
   1ab34:	sub	r0, fp, #56	; 0x38
   1ab38:	mov	r1, r4
   1ab3c:	mov	r2, r5
   1ab40:	add	r3, sp, #56	; 0x38
   1ab44:	str	r0, [sp]
   1ab48:	mov	r0, r8
   1ab4c:	bl	3132c <flatcc_json_parser_integer@@Base>
   1ab50:	cmp	r0, r4
   1ab54:	beq	1ab88 <main@@Base+0x77cc>
   1ab58:	mov	r1, r0
   1ab5c:	ldr	r0, [sp, #56]	; 0x38
   1ab60:	cmp	r0, #0
   1ab64:	beq	1ab98 <main@@Base+0x77dc>
   1ab68:	mov	r0, r8
   1ab6c:	mov	r2, r5
   1ab70:	mov	r3, #8
   1ab74:	b	1abc0 <main@@Base+0x7804>
   1ab78:	mov	r1, r5
   1ab7c:	cmp	r4, r1
   1ab80:	bne	1ac08 <main@@Base+0x784c>
   1ab84:	b	1abd0 <main@@Base+0x7814>
   1ab88:	mov	r1, r4
   1ab8c:	cmp	r4, r1
   1ab90:	bne	1ac08 <main@@Base+0x784c>
   1ab94:	b	1abd0 <main@@Base+0x7814>
   1ab98:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1ab9c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1aba0:	subs	r3, r0, #256	; 0x100
   1aba4:	sbcs	r2, r2, #0
   1aba8:	bcc	1acf0 <main@@Base+0x7934>
   1abac:	ldr	r8, [sp, #40]	; 0x28
   1abb0:	ldr	r5, [sp, #44]	; 0x2c
   1abb4:	mov	r3, #7
   1abb8:	mov	r0, r8
   1abbc:	mov	r2, r5
   1abc0:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   1abc4:	mov	r1, r0
   1abc8:	cmp	r4, r1
   1abcc:	bne	1ac08 <main@@Base+0x784c>
   1abd0:	sub	r0, fp, #60	; 0x3c
   1abd4:	mov	r1, r4
   1abd8:	mov	r2, r5
   1abdc:	str	r0, [sp]
   1abe0:	mov	r0, r8
   1abe4:	ldr	r3, [pc, #4076]	; 1bbd8 <main@@Base+0x881c>
   1abe8:	add	r3, pc, r3
   1abec:	bl	1ed18 <main@@Base+0xb95c>
   1abf0:	mov	r1, r0
   1abf4:	cmp	r0, r4
   1abf8:	cmpne	r1, r5
   1abfc:	beq	1d5bc <main@@Base+0xa200>
   1ac00:	ldrb	r6, [fp, #-60]	; 0xffffffc4
   1ac04:	ldr	r8, [sp, #40]	; 0x28
   1ac08:	sub	r0, r5, r1
   1ac0c:	strb	r6, [r7]
   1ac10:	cmp	r0, #2
   1ac14:	blt	1ac48 <main@@Base+0x788c>
   1ac18:	ldrb	r0, [r1]
   1ac1c:	cmp	r0, #32
   1ac20:	bls	1ac34 <main@@Base+0x7878>
   1ac24:	mov	r4, r1
   1ac28:	cmp	r4, r5
   1ac2c:	bne	1ac60 <main@@Base+0x78a4>
   1ac30:	b	1bd50 <main@@Base+0x8994>
   1ac34:	bne	1ac48 <main@@Base+0x788c>
   1ac38:	mov	r4, r1
   1ac3c:	ldrb	r0, [r4, #1]!
   1ac40:	cmp	r0, #32
   1ac44:	bhi	1ac58 <main@@Base+0x789c>
   1ac48:	mov	r0, r8
   1ac4c:	mov	r2, r5
   1ac50:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1ac54:	mov	r4, r0
   1ac58:	cmp	r4, r5
   1ac5c:	beq	1bd50 <main@@Base+0x8994>
   1ac60:	ldrb	r0, [r4]
   1ac64:	cmp	r0, #44	; 0x2c
   1ac68:	bne	1bd70 <main@@Base+0x89b4>
   1ac6c:	add	r1, r4, #1
   1ac70:	sub	r0, r5, r1
   1ac74:	cmp	r0, #2
   1ac78:	blt	1aca8 <main@@Base+0x78ec>
   1ac7c:	ldrb	r0, [r1]
   1ac80:	cmp	r0, #32
   1ac84:	bls	1ac98 <main@@Base+0x78dc>
   1ac88:	mov	r4, r1
   1ac8c:	cmp	r4, r5
   1ac90:	bne	1acc0 <main@@Base+0x7904>
   1ac94:	b	1bd90 <main@@Base+0x89d4>
   1ac98:	bne	1aca8 <main@@Base+0x78ec>
   1ac9c:	ldrb	r0, [r4, #2]!
   1aca0:	cmp	r0, #32
   1aca4:	bhi	1acb8 <main@@Base+0x78fc>
   1aca8:	mov	r0, r8
   1acac:	mov	r2, r5
   1acb0:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1acb4:	mov	r4, r0
   1acb8:	cmp	r4, r5
   1acbc:	beq	1bd90 <main@@Base+0x89d4>
   1acc0:	ldrb	r0, [r4]
   1acc4:	cmp	r0, #93	; 0x5d
   1acc8:	beq	1bdac <main@@Base+0x89f0>
   1accc:	mov	r0, #0
   1acd0:	mov	r1, #1
   1acd4:	strb	r0, [fp, #-60]	; 0xffffffc4
   1acd8:	ldr	r0, [r8]
   1acdc:	bl	2ab30 <flatcc_builder_extend_vector@@Base>
   1ace0:	mov	r7, r0
   1ace4:	cmp	r0, #0
   1ace8:	bne	1ab18 <main@@Base+0x775c>
   1acec:	b	13488 <main@@Base+0xcc>
   1acf0:	ldr	r5, [sp, #44]	; 0x2c
   1acf4:	ldr	r8, [sp, #40]	; 0x28
   1acf8:	mov	r6, r0
   1acfc:	strb	r0, [fp, #-60]	; 0xffffffc4
   1ad00:	cmp	r4, r1
   1ad04:	bne	1ac08 <main@@Base+0x784c>
   1ad08:	b	1abd0 <main@@Base+0x7814>
   1ad0c:	ldr	sl, [sp, #36]	; 0x24
   1ad10:	mov	r4, r5
   1ad14:	b	1897c <main@@Base+0x55c0>
   1ad18:	ldr	r5, [sp, #44]	; 0x2c
   1ad1c:	ldr	r8, [sp, #40]	; 0x28
   1ad20:	ldr	sl, [sp, #36]	; 0x24
   1ad24:	bne	1ad38 <main@@Base+0x797c>
   1ad28:	ldrb	r0, [r2, #2]!
   1ad2c:	mov	r4, r2
   1ad30:	cmp	r0, #32
   1ad34:	bhi	1c2cc <main@@Base+0x8f10>
   1ad38:	mov	r0, r8
   1ad3c:	mov	r2, r5
   1ad40:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1ad44:	b	1c2c8 <main@@Base+0x8f0c>
   1ad48:	cmp	r0, #93	; 0x5d
   1ad4c:	bne	1be14 <main@@Base+0x8a58>
   1ad50:	ldr	r5, [sp, #44]	; 0x2c
   1ad54:	ldr	r8, [sp, #40]	; 0x28
   1ad58:	add	r1, r2, #1
   1ad5c:	sub	r0, r5, r1
   1ad60:	cmp	r0, #2
   1ad64:	ldr	sl, [sp, #36]	; 0x24
   1ad68:	blt	1d0b0 <main@@Base+0x9cf4>
   1ad6c:	ldrb	r0, [r1]
   1ad70:	cmp	r0, #32
   1ad74:	bls	1d090 <main@@Base+0x9cd4>
   1ad78:	ldr	r5, [sp, #44]	; 0x2c
   1ad7c:	ldr	r8, [sp, #40]	; 0x28
   1ad80:	ldr	sl, [sp, #36]	; 0x24
   1ad84:	mov	r4, r1
   1ad88:	b	1897c <main@@Base+0x55c0>
   1ad8c:	mov	r0, r8
   1ad90:	mov	r1, r5
   1ad94:	b	1be24 <main@@Base+0x8a68>
   1ad98:	ldr	r5, [sp, #44]	; 0x2c
   1ad9c:	ldr	r8, [sp, #40]	; 0x28
   1ada0:	bne	1adb0 <main@@Base+0x79f4>
   1ada4:	ldrb	r0, [r4, #2]!
   1ada8:	cmp	r0, #32
   1adac:	bhi	1adc0 <main@@Base+0x7a04>
   1adb0:	mov	r0, r8
   1adb4:	mov	r2, r5
   1adb8:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1adbc:	mov	r4, r0
   1adc0:	cmp	r4, r5
   1adc4:	mov	r2, r5
   1adc8:	beq	1ae24 <main@@Base+0x7a68>
   1adcc:	ldrb	r0, [r4]
   1add0:	cmp	r0, #125	; 0x7d
   1add4:	bne	1ae20 <main@@Base+0x7a64>
   1add8:	ldr	r5, [sp, #44]	; 0x2c
   1addc:	ldr	r8, [sp, #40]	; 0x28
   1ade0:	ldr	sl, [sp, #36]	; 0x24
   1ade4:	add	r1, r4, #1
   1ade8:	sub	r0, r5, r1
   1adec:	cmp	r0, #2
   1adf0:	blt	1d280 <main@@Base+0x9ec4>
   1adf4:	ldrb	r0, [r1]
   1adf8:	cmp	r0, #32
   1adfc:	bhi	1bcf8 <main@@Base+0x893c>
   1ae00:	ldr	r5, [sp, #44]	; 0x2c
   1ae04:	ldr	r8, [sp, #40]	; 0x28
   1ae08:	ldr	sl, [sp, #36]	; 0x24
   1ae0c:	bne	1d280 <main@@Base+0x9ec4>
   1ae10:	ldrb	r0, [r4, #2]!
   1ae14:	cmp	r0, #32
   1ae18:	bhi	1888c <main@@Base+0x54d0>
   1ae1c:	b	1d280 <main@@Base+0x9ec4>
   1ae20:	mov	r2, r4
   1ae24:	ldr	r5, [sp, #44]	; 0x2c
   1ae28:	ldr	r8, [sp, #40]	; 0x28
   1ae2c:	cmp	r2, r5
   1ae30:	mov	r9, r5
   1ae34:	beq	1ae8c <main@@Base+0x7ad0>
   1ae38:	ldrb	r0, [r2]
   1ae3c:	cmp	r0, #46	; 0x2e
   1ae40:	beq	1ae60 <main@@Base+0x7aa4>
   1ae44:	cmp	r0, #34	; 0x22
   1ae48:	bne	1ae7c <main@@Base+0x7ac0>
   1ae4c:	ldr	r0, [sp, #32]
   1ae50:	mov	r1, #0
   1ae54:	add	r9, r2, #1
   1ae58:	b	1ae88 <main@@Base+0x7acc>
   1ae5c:	andeq	ip, r2, ip, ror #5
   1ae60:	mov	r1, r2
   1ae64:	mov	r0, r8
   1ae68:	mov	r2, r5
   1ae6c:	mov	r3, #5
   1ae70:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   1ae74:	mov	r9, r0
   1ae78:	b	1ae8c <main@@Base+0x7ad0>
   1ae7c:	ldr	r0, [sp, #32]
   1ae80:	mov	r1, #1
   1ae84:	mov	r9, r2
   1ae88:	str	r1, [r0]
   1ae8c:	sub	lr, r5, r9
   1ae90:	mov	r1, #8
   1ae94:	cmp	lr, #8
   1ae98:	movcc	r1, lr
   1ae9c:	sub	r2, r1, #1
   1aea0:	cmp	r2, #7
   1aea4:	bhi	1b030 <main@@Base+0x7c74>
   1aea8:	add	r0, pc, #36	; 0x24
   1aeac:	mov	r1, #0
   1aeb0:	mov	ip, #0
   1aeb4:	mov	r8, #0
   1aeb8:	mov	r7, #0
   1aebc:	mov	r3, #0
   1aec0:	mov	r6, #0
   1aec4:	mov	r4, #0
   1aec8:	ldr	r5, [r0, r2, lsl #2]
   1aecc:	mov	r2, #0
   1aed0:	add	pc, r0, r5
   1aed4:	andeq	r0, r0, r8, rrx
   1aed8:	andeq	r0, r0, r0, rrx
   1aedc:	andeq	r0, r0, r8, asr r0
   1aee0:	andeq	r0, r0, r0, asr r0
   1aee4:	andeq	r0, r0, r4, asr #32
   1aee8:	andeq	r0, r0, r8, lsr r0
   1aeec:	andeq	r0, r0, r8, lsr #32
   1aef0:	andeq	r0, r0, r4, lsr #32
   1aef4:	andeq	ip, r2, r4, asr #3
   1aef8:	ldrb	ip, [r9, #7]
   1aefc:	ldrb	r0, [r9, #6]
   1af00:	mov	r8, r1
   1af04:	orr	r0, ip, r0, lsl #8
   1af08:	mov	r1, r0
   1af0c:	ldrb	r0, [r9, #5]
   1af10:	mov	r7, r8
   1af14:	orr	r1, r1, r0, lsl #16
   1af18:	ldrb	r0, [r9, #4]
   1af1c:	mov	r3, r7
   1af20:	orr	r1, r1, r0, lsl #24
   1af24:	ldrb	r0, [r9, #3]
   1af28:	orr	r6, r0, r3
   1af2c:	ldrb	r0, [r9, #2]
   1af30:	orr	r4, r6, r0, lsl #8
   1af34:	ldrb	r0, [r9, #1]
   1af38:	orr	r2, r4, r0, lsl #16
   1af3c:	ldrb	r0, [r9]
   1af40:	orr	r2, r2, r0, lsl #24
   1af44:	movw	r0, #0
   1af48:	movt	r0, #25956	; 0x6564
   1af4c:	subs	r0, r1, r0
   1af50:	movw	r0, #29556	; 0x7374
   1af54:	movt	r0, #28261	; 0x6e65
   1af58:	sbcs	r0, r2, r0
   1af5c:	bcs	1afc0 <main@@Base+0x7c04>
   1af60:	movw	r0, #29793	; 0x7461
   1af64:	ldr	r5, [sp, #44]	; 0x2c
   1af68:	ldr	r8, [sp, #40]	; 0x28
   1af6c:	movt	r0, #25697	; 0x6461
   1af70:	teq	r2, r0
   1af74:	bne	1b030 <main@@Base+0x7c74>
   1af78:	cmp	lr, #5
   1af7c:	mov	r1, r9
   1af80:	blt	1b2f4 <main@@Base+0x7f38>
   1af84:	ldr	r1, [sp, #32]
   1af88:	mov	r2, r9
   1af8c:	ldrb	r0, [r2, #4]!
   1af90:	ldr	r1, [r1]
   1af94:	cmp	r1, #0
   1af98:	beq	1b0a8 <main@@Base+0x7cec>
   1af9c:	cmp	r0, #33	; 0x21
   1afa0:	bcc	1afb0 <main@@Base+0x7bf4>
   1afa4:	cmp	r0, #58	; 0x3a
   1afa8:	mov	r1, r9
   1afac:	bne	1b2f4 <main@@Base+0x7f38>
   1afb0:	ldr	r0, [sp, #32]
   1afb4:	mov	r1, #0
   1afb8:	str	r1, [r0]
   1afbc:	b	1b0b8 <main@@Base+0x7cfc>
   1afc0:	movw	r0, #29292	; 0x726c
   1afc4:	lsr	r3, r1, #8
   1afc8:	movw	r7, #29793	; 0x7461
   1afcc:	movt	r0, #117	; 0x75
   1afd0:	orr	r3, r3, r2, lsl #24
   1afd4:	movt	r7, #25697	; 0x6461
   1afd8:	eor	r0, r0, r2, lsr #8
   1afdc:	eor	r3, r3, r7
   1afe0:	orrs	r0, r3, r0
   1afe4:	bne	1b03c <main@@Base+0x7c80>
   1afe8:	cmp	lr, #8
   1afec:	mov	r1, r9
   1aff0:	blt	1b354 <main@@Base+0x7f98>
   1aff4:	ldr	r1, [sp, #32]
   1aff8:	mov	r2, r9
   1affc:	ldrb	r0, [r2, #7]!
   1b000:	ldr	r1, [r1]
   1b004:	cmp	r1, #0
   1b008:	beq	1b0dc <main@@Base+0x7d20>
   1b00c:	cmp	r0, #33	; 0x21
   1b010:	bcc	1b020 <main@@Base+0x7c64>
   1b014:	cmp	r0, #58	; 0x3a
   1b018:	mov	r1, r9
   1b01c:	bne	1b354 <main@@Base+0x7f98>
   1b020:	ldr	r0, [sp, #32]
   1b024:	mov	r1, #0
   1b028:	str	r1, [r0]
   1b02c:	b	1b0ec <main@@Base+0x7d30>
   1b030:	mov	r0, r8
   1b034:	mov	r1, r9
   1b038:	b	1b420 <main@@Base+0x8064>
   1b03c:	movw	r0, #29556	; 0x7374
   1b040:	bfc	r1, #0, #16
   1b044:	movt	r0, #28261	; 0x6e65
   1b048:	eor	r0, r2, r0
   1b04c:	movw	r2, #0
   1b050:	movt	r2, #25956	; 0x6564
   1b054:	eor	r1, r1, r2
   1b058:	orrs	r0, r1, r0
   1b05c:	bne	1b410 <main@@Base+0x8054>
   1b060:	cmp	lr, #7
   1b064:	mov	r1, r9
   1b068:	blt	1b3b4 <main@@Base+0x7ff8>
   1b06c:	ldr	r1, [sp, #32]
   1b070:	mov	r2, r9
   1b074:	ldrb	r0, [r2, #6]!
   1b078:	ldr	r1, [r1]
   1b07c:	cmp	r1, #0
   1b080:	beq	1b110 <main@@Base+0x7d54>
   1b084:	cmp	r0, #33	; 0x21
   1b088:	bcc	1b098 <main@@Base+0x7cdc>
   1b08c:	cmp	r0, #58	; 0x3a
   1b090:	mov	r1, r9
   1b094:	bne	1b3b4 <main@@Base+0x7ff8>
   1b098:	ldr	r0, [sp, #32]
   1b09c:	mov	r1, #0
   1b0a0:	str	r1, [r0]
   1b0a4:	b	1b120 <main@@Base+0x7d64>
   1b0a8:	cmp	r0, #34	; 0x22
   1b0ac:	mov	r1, r9
   1b0b0:	bne	1b2f4 <main@@Base+0x7f38>
   1b0b4:	add	r2, r9, #5
   1b0b8:	ldr	r0, [sp, #44]	; 0x2c
   1b0bc:	sub	r0, r0, r2
   1b0c0:	cmp	r0, #2
   1b0c4:	blt	1b158 <main@@Base+0x7d9c>
   1b0c8:	ldrb	r0, [r2]
   1b0cc:	cmp	r0, #32
   1b0d0:	bls	1b144 <main@@Base+0x7d88>
   1b0d4:	mov	r1, r2
   1b0d8:	b	1b16c <main@@Base+0x7db0>
   1b0dc:	cmp	r0, #34	; 0x22
   1b0e0:	mov	r1, r9
   1b0e4:	bne	1b354 <main@@Base+0x7f98>
   1b0e8:	add	r2, r9, #8
   1b0ec:	ldr	r0, [sp, #44]	; 0x2c
   1b0f0:	sub	r0, r0, r2
   1b0f4:	cmp	r0, #2
   1b0f8:	blt	1b1dc <main@@Base+0x7e20>
   1b0fc:	ldrb	r0, [r2]
   1b100:	cmp	r0, #32
   1b104:	bls	1b1c8 <main@@Base+0x7e0c>
   1b108:	mov	r1, r2
   1b10c:	b	1b1f0 <main@@Base+0x7e34>
   1b110:	cmp	r0, #34	; 0x22
   1b114:	mov	r1, r9
   1b118:	bne	1b3b4 <main@@Base+0x7ff8>
   1b11c:	add	r2, r9, #7
   1b120:	ldr	r0, [sp, #44]	; 0x2c
   1b124:	sub	r0, r0, r2
   1b128:	cmp	r0, #2
   1b12c:	blt	1b260 <main@@Base+0x7ea4>
   1b130:	ldrb	r0, [r2]
   1b134:	cmp	r0, #32
   1b138:	bls	1b24c <main@@Base+0x7e90>
   1b13c:	mov	r1, r2
   1b140:	b	1b274 <main@@Base+0x7eb8>
   1b144:	bne	1b158 <main@@Base+0x7d9c>
   1b148:	mov	r1, r2
   1b14c:	ldrb	r0, [r1, #1]!
   1b150:	cmp	r0, #32
   1b154:	bhi	1b16c <main@@Base+0x7db0>
   1b158:	mov	r1, r2
   1b15c:	ldr	r0, [sp, #40]	; 0x28
   1b160:	ldr	r2, [sp, #44]	; 0x2c
   1b164:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1b168:	mov	r1, r0
   1b16c:	ldr	r0, [sp, #44]	; 0x2c
   1b170:	cmp	r1, r0
   1b174:	beq	1b1b4 <main@@Base+0x7df8>
   1b178:	ldrb	r0, [r1]
   1b17c:	cmp	r0, #58	; 0x3a
   1b180:	bne	1b1b4 <main@@Base+0x7df8>
   1b184:	ldr	r0, [sp, #44]	; 0x2c
   1b188:	add	r2, r1, #1
   1b18c:	sub	r0, r0, r2
   1b190:	cmp	r0, #2
   1b194:	blt	1b2e0 <main@@Base+0x7f24>
   1b198:	ldrb	r0, [r2]
   1b19c:	cmp	r0, #32
   1b1a0:	bls	1b2d0 <main@@Base+0x7f14>
   1b1a4:	mov	r1, r2
   1b1a8:	cmp	r9, r1
   1b1ac:	bne	1b2fc <main@@Base+0x7f40>
   1b1b0:	b	1b410 <main@@Base+0x8054>
   1b1b4:	ldr	r0, [sp, #40]	; 0x28
   1b1b8:	ldr	r2, [sp, #44]	; 0x2c
   1b1bc:	mov	r3, #4
   1b1c0:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   1b1c4:	b	1b2f0 <main@@Base+0x7f34>
   1b1c8:	bne	1b1dc <main@@Base+0x7e20>
   1b1cc:	mov	r1, r2
   1b1d0:	ldrb	r0, [r1, #1]!
   1b1d4:	cmp	r0, #32
   1b1d8:	bhi	1b1f0 <main@@Base+0x7e34>
   1b1dc:	mov	r1, r2
   1b1e0:	ldr	r0, [sp, #40]	; 0x28
   1b1e4:	ldr	r2, [sp, #44]	; 0x2c
   1b1e8:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1b1ec:	mov	r1, r0
   1b1f0:	ldr	r0, [sp, #44]	; 0x2c
   1b1f4:	cmp	r1, r0
   1b1f8:	beq	1b238 <main@@Base+0x7e7c>
   1b1fc:	ldrb	r0, [r1]
   1b200:	cmp	r0, #58	; 0x3a
   1b204:	bne	1b238 <main@@Base+0x7e7c>
   1b208:	ldr	r0, [sp, #44]	; 0x2c
   1b20c:	add	r2, r1, #1
   1b210:	sub	r0, r0, r2
   1b214:	cmp	r0, #2
   1b218:	blt	1b340 <main@@Base+0x7f84>
   1b21c:	ldrb	r0, [r2]
   1b220:	cmp	r0, #32
   1b224:	bls	1b330 <main@@Base+0x7f74>
   1b228:	mov	r1, r2
   1b22c:	cmp	r9, r1
   1b230:	bne	1b35c <main@@Base+0x7fa0>
   1b234:	b	1b410 <main@@Base+0x8054>
   1b238:	ldr	r0, [sp, #40]	; 0x28
   1b23c:	ldr	r2, [sp, #44]	; 0x2c
   1b240:	mov	r3, #4
   1b244:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   1b248:	b	1b350 <main@@Base+0x7f94>
   1b24c:	bne	1b260 <main@@Base+0x7ea4>
   1b250:	mov	r1, r2
   1b254:	ldrb	r0, [r1, #1]!
   1b258:	cmp	r0, #32
   1b25c:	bhi	1b274 <main@@Base+0x7eb8>
   1b260:	mov	r1, r2
   1b264:	ldr	r0, [sp, #40]	; 0x28
   1b268:	ldr	r2, [sp, #44]	; 0x2c
   1b26c:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1b270:	mov	r1, r0
   1b274:	ldr	r0, [sp, #44]	; 0x2c
   1b278:	cmp	r1, r0
   1b27c:	beq	1b2bc <main@@Base+0x7f00>
   1b280:	ldrb	r0, [r1]
   1b284:	cmp	r0, #58	; 0x3a
   1b288:	bne	1b2bc <main@@Base+0x7f00>
   1b28c:	ldr	r0, [sp, #44]	; 0x2c
   1b290:	add	r2, r1, #1
   1b294:	sub	r0, r0, r2
   1b298:	cmp	r0, #2
   1b29c:	blt	1b3a0 <main@@Base+0x7fe4>
   1b2a0:	ldrb	r0, [r2]
   1b2a4:	cmp	r0, #32
   1b2a8:	bls	1b390 <main@@Base+0x7fd4>
   1b2ac:	mov	r1, r2
   1b2b0:	cmp	r9, r1
   1b2b4:	bne	1b3bc <main@@Base+0x8000>
   1b2b8:	b	1b410 <main@@Base+0x8054>
   1b2bc:	ldr	r0, [sp, #40]	; 0x28
   1b2c0:	ldr	r2, [sp, #44]	; 0x2c
   1b2c4:	mov	r3, #4
   1b2c8:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   1b2cc:	b	1b3b0 <main@@Base+0x7ff4>
   1b2d0:	bne	1b2e0 <main@@Base+0x7f24>
   1b2d4:	ldrb	r0, [r1, #2]!
   1b2d8:	cmp	r0, #32
   1b2dc:	bhi	1b2f4 <main@@Base+0x7f38>
   1b2e0:	mov	r1, r2
   1b2e4:	ldr	r0, [sp, #40]	; 0x28
   1b2e8:	ldr	r2, [sp, #44]	; 0x2c
   1b2ec:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1b2f0:	mov	r1, r0
   1b2f4:	cmp	r9, r1
   1b2f8:	beq	1b410 <main@@Base+0x8054>
   1b2fc:	mov	r0, #0
   1b300:	ldr	r2, [sp, #44]	; 0x2c
   1b304:	sub	r3, fp, #56	; 0x38
   1b308:	str	r0, [sp]
   1b30c:	ldr	r0, [sp, #40]	; 0x28
   1b310:	bl	3149c <flatcc_json_parser_build_uint8_vector_base64@@Base>
   1b314:	mov	r4, r0
   1b318:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b31c:	cmp	r0, #0
   1b320:	beq	1c6e0 <main@@Base+0x9324>
   1b324:	ldr	r0, [sp, #40]	; 0x28
   1b328:	mov	r1, #0
   1b32c:	b	1b3ec <main@@Base+0x8030>
   1b330:	bne	1b340 <main@@Base+0x7f84>
   1b334:	ldrb	r0, [r1, #2]!
   1b338:	cmp	r0, #32
   1b33c:	bhi	1b354 <main@@Base+0x7f98>
   1b340:	mov	r1, r2
   1b344:	ldr	r0, [sp, #40]	; 0x28
   1b348:	ldr	r2, [sp, #44]	; 0x2c
   1b34c:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1b350:	mov	r1, r0
   1b354:	cmp	r9, r1
   1b358:	beq	1b410 <main@@Base+0x8054>
   1b35c:	mov	r0, #1
   1b360:	ldr	r2, [sp, #44]	; 0x2c
   1b364:	sub	r3, fp, #56	; 0x38
   1b368:	str	r0, [sp]
   1b36c:	ldr	r0, [sp, #40]	; 0x28
   1b370:	bl	3149c <flatcc_json_parser_build_uint8_vector_base64@@Base>
   1b374:	mov	r4, r0
   1b378:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b37c:	cmp	r0, #0
   1b380:	beq	1c6e0 <main@@Base+0x9324>
   1b384:	ldr	r0, [sp, #40]	; 0x28
   1b388:	mov	r1, #1
   1b38c:	b	1b3ec <main@@Base+0x8030>
   1b390:	bne	1b3a0 <main@@Base+0x7fe4>
   1b394:	ldrb	r0, [r1, #2]!
   1b398:	cmp	r0, #32
   1b39c:	bhi	1b3b4 <main@@Base+0x7ff8>
   1b3a0:	mov	r1, r2
   1b3a4:	ldr	r0, [sp, #40]	; 0x28
   1b3a8:	ldr	r2, [sp, #44]	; 0x2c
   1b3ac:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1b3b0:	mov	r1, r0
   1b3b4:	cmp	r9, r1
   1b3b8:	beq	1b410 <main@@Base+0x8054>
   1b3bc:	mov	r0, #0
   1b3c0:	ldr	r2, [sp, #44]	; 0x2c
   1b3c4:	sub	r3, fp, #56	; 0x38
   1b3c8:	str	r0, [sp]
   1b3cc:	ldr	r0, [sp, #40]	; 0x28
   1b3d0:	bl	3149c <flatcc_json_parser_build_uint8_vector_base64@@Base>
   1b3d4:	mov	r4, r0
   1b3d8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b3dc:	cmp	r0, #0
   1b3e0:	beq	1c6e0 <main@@Base+0x9324>
   1b3e4:	ldr	r0, [sp, #40]	; 0x28
   1b3e8:	mov	r1, #2
   1b3ec:	ldr	r0, [r0]
   1b3f0:	bl	2ceec <flatcc_builder_table_add_offset@@Base>
   1b3f4:	cmp	r0, #0
   1b3f8:	beq	1c6e0 <main@@Base+0x9324>
   1b3fc:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1b400:	str	r1, [r0]
   1b404:	ldr	r5, [sp, #44]	; 0x2c
   1b408:	ldr	r8, [sp, #40]	; 0x28
   1b40c:	b	1b42c <main@@Base+0x8070>
   1b410:	ldr	r8, [sp, #40]	; 0x28
   1b414:	ldr	r5, [sp, #44]	; 0x2c
   1b418:	mov	r1, r9
   1b41c:	mov	r0, r8
   1b420:	mov	r2, r5
   1b424:	bl	2f87c <flatcc_json_parser_unmatched_symbol@@Base>
   1b428:	mov	r4, r0
   1b42c:	sub	r0, r5, r4
   1b430:	cmp	r0, #2
   1b434:	blt	1b468 <main@@Base+0x80ac>
   1b438:	ldrb	r0, [r4]
   1b43c:	cmp	r0, #32
   1b440:	bls	1b454 <main@@Base+0x8098>
   1b444:	mov	r2, r4
   1b448:	cmp	r2, r5
   1b44c:	bne	1b484 <main@@Base+0x80c8>
   1b450:	b	1bcb0 <main@@Base+0x88f4>
   1b454:	bne	1b468 <main@@Base+0x80ac>
   1b458:	mov	r2, r4
   1b45c:	ldrb	r0, [r2, #1]!
   1b460:	cmp	r0, #32
   1b464:	bhi	1b47c <main@@Base+0x80c0>
   1b468:	mov	r0, r8
   1b46c:	mov	r1, r4
   1b470:	mov	r2, r5
   1b474:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1b478:	mov	r2, r0
   1b47c:	cmp	r2, r5
   1b480:	beq	1bcb0 <main@@Base+0x88f4>
   1b484:	ldrb	r0, [r2]
   1b488:	cmp	r0, #44	; 0x2c
   1b48c:	bne	1bcc8 <main@@Base+0x890c>
   1b490:	add	r1, r2, #1
   1b494:	sub	r0, r5, r1
   1b498:	cmp	r0, #2
   1b49c:	blt	1b4cc <main@@Base+0x8110>
   1b4a0:	ldrb	r0, [r1]
   1b4a4:	cmp	r0, #32
   1b4a8:	bls	1b4bc <main@@Base+0x8100>
   1b4ac:	mov	r2, r1
   1b4b0:	cmp	r2, r5
   1b4b4:	bne	1b4e4 <main@@Base+0x8128>
   1b4b8:	b	1bd58 <main@@Base+0x899c>
   1b4bc:	bne	1b4cc <main@@Base+0x8110>
   1b4c0:	ldrb	r0, [r2, #2]!
   1b4c4:	cmp	r0, #32
   1b4c8:	bhi	1b4dc <main@@Base+0x8120>
   1b4cc:	mov	r0, r8
   1b4d0:	mov	r2, r5
   1b4d4:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1b4d8:	mov	r2, r0
   1b4dc:	cmp	r2, r5
   1b4e0:	beq	1bd58 <main@@Base+0x899c>
   1b4e4:	ldrb	r0, [r2]
   1b4e8:	cmp	r0, #125	; 0x7d
   1b4ec:	bne	1ae2c <main@@Base+0x7a70>
   1b4f0:	b	1bcd8 <main@@Base+0x891c>
   1b4f4:	ldr	r5, [sp, #44]	; 0x2c
   1b4f8:	ldr	r8, [sp, #40]	; 0x28
   1b4fc:	bne	1b50c <main@@Base+0x8150>
   1b500:	ldrb	r0, [r4, #2]!
   1b504:	cmp	r0, #32
   1b508:	bhi	1b51c <main@@Base+0x8160>
   1b50c:	mov	r0, r8
   1b510:	mov	r2, r5
   1b514:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1b518:	mov	r4, r0
   1b51c:	cmp	r4, r5
   1b520:	beq	1b564 <main@@Base+0x81a8>
   1b524:	ldrb	r0, [r4]
   1b528:	cmp	r0, #93	; 0x5d
   1b52c:	bne	1b560 <main@@Base+0x81a4>
   1b530:	ldr	r5, [sp, #44]	; 0x2c
   1b534:	ldr	r8, [sp, #40]	; 0x28
   1b538:	ldr	sl, [sp, #36]	; 0x24
   1b53c:	add	r1, r4, #1
   1b540:	sub	r0, r5, r1
   1b544:	cmp	r0, #2
   1b548:	blt	1d0dc <main@@Base+0x9d20>
   1b54c:	ldrb	r0, [r1]
   1b550:	cmp	r0, #32
   1b554:	bls	1d0c0 <main@@Base+0x9d04>
   1b558:	mov	r4, r1
   1b55c:	b	1d4b8 <main@@Base+0xa0fc>
   1b560:	mov	r5, r4
   1b564:	mov	r0, #0
   1b568:	mov	r1, #1
   1b56c:	str	r0, [sp, #60]	; 0x3c
   1b570:	str	r0, [sp, #56]	; 0x38
   1b574:	ldr	r0, [sp, #40]	; 0x28
   1b578:	ldr	r0, [r0]
   1b57c:	bl	2ab30 <flatcc_builder_extend_vector@@Base>
   1b580:	cmp	r0, #0
   1b584:	beq	1d5e0 <main@@Base+0xa224>
   1b588:	mov	r4, r5
   1b58c:	ldr	r5, [sp, #44]	; 0x2c
   1b590:	ldr	r8, [sp, #40]	; 0x28
   1b594:	mov	r7, r0
   1b598:	mov	r0, #0
   1b59c:	cmp	r4, r5
   1b5a0:	str	r0, [fp, #-52]	; 0xffffffcc
   1b5a4:	str	r0, [fp, #-56]	; 0xffffffc8
   1b5a8:	str	r0, [sp, #60]	; 0x3c
   1b5ac:	str	r0, [sp, #56]	; 0x38
   1b5b0:	str	r0, [fp, #-60]	; 0xffffffc4
   1b5b4:	beq	1b614 <main@@Base+0x8258>
   1b5b8:	sub	r0, fp, #56	; 0x38
   1b5bc:	mov	r1, r4
   1b5c0:	mov	r2, r5
   1b5c4:	sub	r3, fp, #60	; 0x3c
   1b5c8:	str	r0, [sp]
   1b5cc:	mov	r0, r8
   1b5d0:	bl	3132c <flatcc_json_parser_integer@@Base>
   1b5d4:	cmp	r0, r4
   1b5d8:	beq	1b628 <main@@Base+0x826c>
   1b5dc:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1b5e0:	mov	r1, r0
   1b5e4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b5e8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1b5ec:	cmp	r2, #0
   1b5f0:	beq	1b640 <main@@Base+0x8284>
   1b5f4:	rsbs	r2, r0, #0
   1b5f8:	mov	r2, #-2147483648	; 0x80000000
   1b5fc:	sbcs	r2, r2, r3
   1b600:	bcs	1b678 <main@@Base+0x82bc>
   1b604:	ldr	r8, [sp, #40]	; 0x28
   1b608:	ldr	r5, [sp, #44]	; 0x2c
   1b60c:	mov	r3, #8
   1b610:	b	1b654 <main@@Base+0x8298>
   1b614:	mov	r3, #0
   1b618:	mov	r1, r5
   1b61c:	cmp	r4, r1
   1b620:	bne	1b6d4 <main@@Base+0x8318>
   1b624:	b	1b698 <main@@Base+0x82dc>
   1b628:	mov	r0, #0
   1b62c:	mov	r3, #0
   1b630:	mov	r1, r4
   1b634:	cmp	r4, r1
   1b638:	bne	1b6d4 <main@@Base+0x8318>
   1b63c:	b	1b698 <main@@Base+0x82dc>
   1b640:	cmn	r3, #1
   1b644:	bgt	1b680 <main@@Base+0x82c4>
   1b648:	ldr	r8, [sp, #40]	; 0x28
   1b64c:	ldr	r5, [sp, #44]	; 0x2c
   1b650:	mov	r3, #7
   1b654:	mov	r0, r8
   1b658:	mov	r2, r5
   1b65c:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   1b660:	mov	r1, r0
   1b664:	mov	r0, #0
   1b668:	mov	r3, #0
   1b66c:	cmp	r4, r1
   1b670:	bne	1b6d4 <main@@Base+0x8318>
   1b674:	b	1b698 <main@@Base+0x82dc>
   1b678:	rsbs	r0, r0, #0
   1b67c:	rsc	r3, r3, #0
   1b680:	ldr	r5, [sp, #44]	; 0x2c
   1b684:	ldr	r8, [sp, #40]	; 0x28
   1b688:	str	r0, [sp, #56]	; 0x38
   1b68c:	str	r3, [sp, #60]	; 0x3c
   1b690:	cmp	r4, r1
   1b694:	bne	1b6d4 <main@@Base+0x8318>
   1b698:	add	r0, sp, #56	; 0x38
   1b69c:	mov	r1, r4
   1b6a0:	mov	r2, r5
   1b6a4:	str	r0, [sp]
   1b6a8:	mov	r0, r8
   1b6ac:	ldr	r3, [pc, #4040]	; 1c67c <main@@Base+0x92c0>
   1b6b0:	add	r3, pc, r3
   1b6b4:	bl	235b8 <main@@Base+0x101fc>
   1b6b8:	mov	r1, r0
   1b6bc:	cmp	r0, r4
   1b6c0:	cmpne	r1, r5
   1b6c4:	beq	1d5bc <main@@Base+0xa200>
   1b6c8:	ldr	r0, [sp, #56]	; 0x38
   1b6cc:	ldr	r3, [sp, #60]	; 0x3c
   1b6d0:	ldr	r8, [sp, #40]	; 0x28
   1b6d4:	stm	r7, {r0, r3}
   1b6d8:	sub	r0, r5, r1
   1b6dc:	cmp	r0, #2
   1b6e0:	blt	1b714 <main@@Base+0x8358>
   1b6e4:	ldrb	r0, [r1]
   1b6e8:	cmp	r0, #32
   1b6ec:	bls	1b700 <main@@Base+0x8344>
   1b6f0:	mov	r4, r1
   1b6f4:	cmp	r4, r5
   1b6f8:	bne	1b72c <main@@Base+0x8370>
   1b6fc:	b	1d2c0 <main@@Base+0x9f04>
   1b700:	bne	1b714 <main@@Base+0x8358>
   1b704:	mov	r4, r1
   1b708:	ldrb	r0, [r4, #1]!
   1b70c:	cmp	r0, #32
   1b710:	bhi	1b724 <main@@Base+0x8368>
   1b714:	mov	r0, r8
   1b718:	mov	r2, r5
   1b71c:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1b720:	mov	r4, r0
   1b724:	cmp	r4, r5
   1b728:	beq	1d2c0 <main@@Base+0x9f04>
   1b72c:	ldrb	r0, [r4]
   1b730:	cmp	r0, #44	; 0x2c
   1b734:	bne	1d2f8 <main@@Base+0x9f3c>
   1b738:	add	r1, r4, #1
   1b73c:	sub	r0, r5, r1
   1b740:	cmp	r0, #2
   1b744:	blt	1b774 <main@@Base+0x83b8>
   1b748:	ldrb	r0, [r1]
   1b74c:	cmp	r0, #32
   1b750:	bls	1b764 <main@@Base+0x83a8>
   1b754:	mov	r4, r1
   1b758:	cmp	r4, r5
   1b75c:	bne	1b78c <main@@Base+0x83d0>
   1b760:	b	1d348 <main@@Base+0x9f8c>
   1b764:	bne	1b774 <main@@Base+0x83b8>
   1b768:	ldrb	r0, [r4, #2]!
   1b76c:	cmp	r0, #32
   1b770:	bhi	1b784 <main@@Base+0x83c8>
   1b774:	mov	r0, r8
   1b778:	mov	r2, r5
   1b77c:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1b780:	mov	r4, r0
   1b784:	cmp	r4, r5
   1b788:	beq	1d348 <main@@Base+0x9f8c>
   1b78c:	ldrb	r0, [r4]
   1b790:	cmp	r0, #93	; 0x5d
   1b794:	beq	1d360 <main@@Base+0x9fa4>
   1b798:	mov	r0, #0
   1b79c:	mov	r1, #1
   1b7a0:	str	r0, [sp, #60]	; 0x3c
   1b7a4:	str	r0, [sp, #56]	; 0x38
   1b7a8:	ldr	r0, [r8]
   1b7ac:	bl	2ab30 <flatcc_builder_extend_vector@@Base>
   1b7b0:	mov	r7, r0
   1b7b4:	cmp	r0, #0
   1b7b8:	bne	1b598 <main@@Base+0x81dc>
   1b7bc:	b	13488 <main@@Base+0xcc>
   1b7c0:	ldr	r5, [sp, #44]	; 0x2c
   1b7c4:	ldr	r8, [sp, #40]	; 0x28
   1b7c8:	ldr	sl, [sp, #36]	; 0x24
   1b7cc:	bne	1b7dc <main@@Base+0x8420>
   1b7d0:	ldrb	r0, [r9, #2]!
   1b7d4:	cmp	r0, #32
   1b7d8:	bhi	1b7ec <main@@Base+0x8430>
   1b7dc:	mov	r0, r8
   1b7e0:	mov	r2, r5
   1b7e4:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1b7e8:	mov	r9, r0
   1b7ec:	cmp	r7, r9
   1b7f0:	beq	1b848 <main@@Base+0x848c>
   1b7f4:	ldr	r0, [r8]
   1b7f8:	mov	r1, #8
   1b7fc:	mov	r2, #8
   1b800:	mvn	r3, #-536870912	; 0xe0000000
   1b804:	bl	2b6f4 <flatcc_builder_start_vector@@Base>
   1b808:	cmp	r0, #0
   1b80c:	bne	1d5d4 <main@@Base+0xa218>
   1b810:	cmp	r9, r5
   1b814:	beq	1b854 <main@@Base+0x8498>
   1b818:	ldrb	r0, [r9]
   1b81c:	cmp	r0, #91	; 0x5b
   1b820:	bne	1b854 <main@@Base+0x8498>
   1b824:	add	r1, r9, #1
   1b828:	sub	r0, r5, r1
   1b82c:	cmp	r0, #2
   1b830:	blt	1be54 <main@@Base+0x8a98>
   1b834:	ldrb	r0, [r1]
   1b838:	cmp	r0, #32
   1b83c:	bls	1be44 <main@@Base+0x8a88>
   1b840:	mov	r9, r1
   1b844:	b	1be64 <main@@Base+0x8aa8>
   1b848:	mov	r0, r8
   1b84c:	mov	r1, r7
   1b850:	b	1c2c0 <main@@Base+0x8f04>
   1b854:	ldr	r8, [sp, #40]	; 0x28
   1b858:	mov	r1, r9
   1b85c:	mov	r2, r5
   1b860:	mov	r3, #22
   1b864:	mov	r0, r8
   1b868:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   1b86c:	mov	r9, r0
   1b870:	ldr	r0, [r8]
   1b874:	bl	2c96c <flatcc_builder_end_vector@@Base>
   1b878:	cmp	r0, #0
   1b87c:	str	r0, [sp, #52]	; 0x34
   1b880:	beq	1d5c8 <main@@Base+0xa20c>
   1b884:	ldr	r0, [r8]
   1b888:	mov	r1, #33	; 0x21
   1b88c:	bl	2ceec <flatcc_builder_table_add_offset@@Base>
   1b890:	cmp	r0, #0
   1b894:	beq	1d5c8 <main@@Base+0xa20c>
   1b898:	ldr	r1, [sp, #52]	; 0x34
   1b89c:	ldr	r5, [sp, #44]	; 0x2c
   1b8a0:	mov	r4, r9
   1b8a4:	str	r1, [r0]
   1b8a8:	b	166e8 <main@@Base+0x332c>
   1b8ac:	mov	r6, r0
   1b8b0:	ldr	r5, [sp, #44]	; 0x2c
   1b8b4:	ldr	r8, [sp, #40]	; 0x28
   1b8b8:	str	r6, [fp, #-60]	; 0xffffffc4
   1b8bc:	ldr	sl, [sp, #36]	; 0x24
   1b8c0:	cmp	r7, r4
   1b8c4:	bne	1b90c <main@@Base+0x8550>
   1b8c8:	sub	r0, fp, #60	; 0x3c
   1b8cc:	mov	r1, r7
   1b8d0:	mov	r2, r5
   1b8d4:	str	r0, [sp]
   1b8d8:	mov	r0, r8
   1b8dc:	ldr	r3, [pc, #3924]	; 1c838 <main@@Base+0x947c>
   1b8e0:	add	r3, pc, r3
   1b8e4:	bl	2336c <main@@Base+0xffb0>
   1b8e8:	cmp	r0, r7
   1b8ec:	mov	r4, r0
   1b8f0:	ldrne	r1, [sp, #44]	; 0x2c
   1b8f4:	cmpne	r4, r1
   1b8f8:	beq	1d604 <main@@Base+0xa248>
   1b8fc:	ldr	r6, [fp, #-60]	; 0xffffffc4
   1b900:	ldr	r5, [sp, #44]	; 0x2c
   1b904:	ldr	r8, [sp, #40]	; 0x28
   1b908:	ldr	sl, [sp, #36]	; 0x24
   1b90c:	cmp	r6, #0
   1b910:	bne	1b920 <main@@Base+0x8564>
   1b914:	ldrb	r0, [r8, #8]
   1b918:	tst	r0, #2
   1b91c:	beq	1c2cc <main@@Base+0x8f10>
   1b920:	ldr	r0, [r8]
   1b924:	mov	r1, #20
   1b928:	mov	r2, #4
   1b92c:	mov	r3, #4
   1b930:	bl	2d0a0 <flatcc_builder_table_add@@Base>
   1b934:	cmp	r0, #0
   1b938:	beq	1d604 <main@@Base+0xa248>
   1b93c:	str	r6, [r0]
   1b940:	b	1c2cc <main@@Base+0x8f10>
   1b944:	ldr	r5, [sp, #44]	; 0x2c
   1b948:	ldr	r8, [sp, #40]	; 0x28
   1b94c:	ldr	sl, [sp, #36]	; 0x24
   1b950:	bne	1b960 <main@@Base+0x85a4>
   1b954:	ldrb	r0, [r7, #2]!
   1b958:	cmp	r0, #32
   1b95c:	bhi	1b970 <main@@Base+0x85b4>
   1b960:	mov	r0, r8
   1b964:	mov	r2, r5
   1b968:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1b96c:	mov	r7, r0
   1b970:	cmp	r4, r7
   1b974:	beq	1c2b8 <main@@Base+0x8efc>
   1b978:	mov	r6, #0
   1b97c:	cmp	r7, r5
   1b980:	str	r6, [fp, #-52]	; 0xffffffcc
   1b984:	str	r6, [fp, #-56]	; 0xffffffc8
   1b988:	str	r6, [sp, #60]	; 0x3c
   1b98c:	str	r6, [sp, #56]	; 0x38
   1b990:	str	r6, [fp, #-60]	; 0xffffffc4
   1b994:	beq	1b9f0 <main@@Base+0x8634>
   1b998:	sub	r0, fp, #56	; 0x38
   1b99c:	mov	r1, r7
   1b9a0:	mov	r2, r5
   1b9a4:	sub	r3, fp, #60	; 0x3c
   1b9a8:	str	r0, [sp]
   1b9ac:	mov	r0, r8
   1b9b0:	bl	3132c <flatcc_json_parser_integer@@Base>
   1b9b4:	cmp	r0, r7
   1b9b8:	beq	1ba04 <main@@Base+0x8648>
   1b9bc:	sub	r9, fp, #60	; 0x3c
   1b9c0:	mov	r4, r0
   1b9c4:	ldm	r9, {r0, r6, r9}
   1b9c8:	cmp	r0, #0
   1b9cc:	beq	1ba1c <main@@Base+0x8660>
   1b9d0:	subs	r0, r6, #1
   1b9d4:	sbcs	r0, r9, #-2147483648	; 0x80000000
   1b9d8:	bcc	1bc14 <main@@Base+0x8858>
   1b9dc:	ldr	r0, [sp, #40]	; 0x28
   1b9e0:	ldr	r2, [sp, #44]	; 0x2c
   1b9e4:	mov	r1, r4
   1b9e8:	mov	r3, #8
   1b9ec:	b	1ba34 <main@@Base+0x8678>
   1b9f0:	mov	r9, #0
   1b9f4:	mov	r4, r5
   1b9f8:	cmp	r7, r4
   1b9fc:	bne	1bc68 <main@@Base+0x88ac>
   1ba00:	b	1bc2c <main@@Base+0x8870>
   1ba04:	mov	r6, #0
   1ba08:	mov	r9, #0
   1ba0c:	mov	r4, r7
   1ba10:	cmp	r7, r4
   1ba14:	bne	1bc68 <main@@Base+0x88ac>
   1ba18:	b	1bc2c <main@@Base+0x8870>
   1ba1c:	cmn	r9, #1
   1ba20:	bgt	1bc1c <main@@Base+0x8860>
   1ba24:	ldr	r0, [sp, #40]	; 0x28
   1ba28:	ldr	r2, [sp, #44]	; 0x2c
   1ba2c:	mov	r1, r4
   1ba30:	mov	r3, #7
   1ba34:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   1ba38:	mov	r4, r0
   1ba3c:	mov	r6, #0
   1ba40:	mov	r9, #0
   1ba44:	cmp	r7, r4
   1ba48:	bne	1bc68 <main@@Base+0x88ac>
   1ba4c:	b	1bc2c <main@@Base+0x8870>
   1ba50:	ldr	r5, [sp, #44]	; 0x2c
   1ba54:	bne	1ba64 <main@@Base+0x86a8>
   1ba58:	ldrb	r0, [r4, #2]!
   1ba5c:	cmp	r0, #32
   1ba60:	bhi	1ba74 <main@@Base+0x86b8>
   1ba64:	ldr	r0, [sp, #40]	; 0x28
   1ba68:	mov	r2, r5
   1ba6c:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1ba70:	mov	r4, r0
   1ba74:	cmp	r4, r5
   1ba78:	mov	r3, r5
   1ba7c:	beq	1bad0 <main@@Base+0x8714>
   1ba80:	ldrb	r0, [r4]
   1ba84:	cmp	r0, #125	; 0x7d
   1ba88:	bne	1bacc <main@@Base+0x8710>
   1ba8c:	ldr	r5, [sp, #44]	; 0x2c
   1ba90:	ldr	r8, [sp, #40]	; 0x28
   1ba94:	add	r1, r4, #1
   1ba98:	sub	r0, r5, r1
   1ba9c:	cmp	r0, #2
   1baa0:	blt	1d434 <main@@Base+0xa078>
   1baa4:	ldrb	r0, [r1]
   1baa8:	cmp	r0, #32
   1baac:	bhi	1c0a8 <main@@Base+0x8cec>
   1bab0:	ldr	r5, [sp, #44]	; 0x2c
   1bab4:	ldr	r8, [sp, #40]	; 0x28
   1bab8:	bne	1d434 <main@@Base+0xa078>
   1babc:	ldrb	r0, [r4, #2]!
   1bac0:	cmp	r0, #32
   1bac4:	bhi	18f58 <main@@Base+0x5b9c>
   1bac8:	b	1d434 <main@@Base+0xa078>
   1bacc:	mov	r3, r4
   1bad0:	ldr	r5, [sp, #44]	; 0x2c
   1bad4:	ldr	r8, [sp, #40]	; 0x28
   1bad8:	cmp	r3, r5
   1badc:	mov	r1, r5
   1bae0:	beq	1bb38 <main@@Base+0x877c>
   1bae4:	ldrb	r0, [r3]
   1bae8:	cmp	r0, #46	; 0x2e
   1baec:	beq	1bb0c <main@@Base+0x8750>
   1baf0:	cmp	r0, #34	; 0x22
   1baf4:	bne	1bb28 <main@@Base+0x876c>
   1baf8:	ldr	r0, [sp, #32]
   1bafc:	mov	r1, #0
   1bb00:	str	r1, [r0]
   1bb04:	add	r1, r3, #1
   1bb08:	b	1bb38 <main@@Base+0x877c>
   1bb0c:	mov	r1, r3
   1bb10:	mov	r0, r8
   1bb14:	mov	r2, r5
   1bb18:	mov	r3, #5
   1bb1c:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   1bb20:	mov	r1, r0
   1bb24:	b	1bb38 <main@@Base+0x877c>
   1bb28:	ldr	r0, [sp, #32]
   1bb2c:	mov	r1, #1
   1bb30:	str	r1, [r0]
   1bb34:	mov	r1, r3
   1bb38:	mov	r0, r8
   1bb3c:	mov	r2, r5
   1bb40:	bl	2f87c <flatcc_json_parser_unmatched_symbol@@Base>
   1bb44:	mov	r2, r0
   1bb48:	sub	r0, r5, r0
   1bb4c:	cmp	r0, #2
   1bb50:	blt	1bb84 <main@@Base+0x87c8>
   1bb54:	ldrb	r0, [r2]
   1bb58:	cmp	r0, #32
   1bb5c:	bls	1bb70 <main@@Base+0x87b4>
   1bb60:	mov	r3, r2
   1bb64:	cmp	r3, r5
   1bb68:	bne	1bba0 <main@@Base+0x87e4>
   1bb6c:	b	1c074 <main@@Base+0x8cb8>
   1bb70:	bne	1bb84 <main@@Base+0x87c8>
   1bb74:	mov	r3, r2
   1bb78:	ldrb	r0, [r3, #1]!
   1bb7c:	cmp	r0, #32
   1bb80:	bhi	1bb98 <main@@Base+0x87dc>
   1bb84:	mov	r1, r2
   1bb88:	mov	r0, r8
   1bb8c:	mov	r2, r5
   1bb90:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1bb94:	mov	r3, r0
   1bb98:	cmp	r3, r5
   1bb9c:	beq	1c074 <main@@Base+0x8cb8>
   1bba0:	ldrb	r0, [r3]
   1bba4:	cmp	r0, #44	; 0x2c
   1bba8:	bne	1c07c <main@@Base+0x8cc0>
   1bbac:	add	r1, r3, #1
   1bbb0:	sub	r0, r5, r1
   1bbb4:	cmp	r0, #2
   1bbb8:	blt	1bbec <main@@Base+0x8830>
   1bbbc:	ldrb	r0, [r1]
   1bbc0:	cmp	r0, #32
   1bbc4:	bls	1bbdc <main@@Base+0x8820>
   1bbc8:	mov	r3, r1
   1bbcc:	cmp	r3, r5
   1bbd0:	bne	1bc04 <main@@Base+0x8848>
   1bbd4:	b	1c0b8 <main@@Base+0x8cfc>
   1bbd8:	ldrdeq	fp, [r2], -r4
   1bbdc:	bne	1bbec <main@@Base+0x8830>
   1bbe0:	ldrb	r0, [r3, #2]!
   1bbe4:	cmp	r0, #32
   1bbe8:	bhi	1bbfc <main@@Base+0x8840>
   1bbec:	mov	r0, r8
   1bbf0:	mov	r2, r5
   1bbf4:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1bbf8:	mov	r3, r0
   1bbfc:	cmp	r3, r5
   1bc00:	beq	1c0b8 <main@@Base+0x8cfc>
   1bc04:	ldrb	r0, [r3]
   1bc08:	cmp	r0, #125	; 0x7d
   1bc0c:	bne	1bad8 <main@@Base+0x871c>
   1bc10:	b	1c08c <main@@Base+0x8cd0>
   1bc14:	rsbs	r6, r6, #0
   1bc18:	rsc	r9, r9, #0
   1bc1c:	str	r6, [sp, #56]	; 0x38
   1bc20:	str	r9, [sp, #60]	; 0x3c
   1bc24:	cmp	r7, r4
   1bc28:	bne	1bc68 <main@@Base+0x88ac>
   1bc2c:	add	r0, sp, #56	; 0x38
   1bc30:	ldr	r2, [sp, #44]	; 0x2c
   1bc34:	mov	r1, r7
   1bc38:	str	r0, [sp]
   1bc3c:	ldr	r0, [sp, #40]	; 0x28
   1bc40:	ldr	r3, [pc, #3988]	; 1cbdc <main@@Base+0x9820>
   1bc44:	add	r3, pc, r3
   1bc48:	bl	235b8 <main@@Base+0x101fc>
   1bc4c:	cmp	r0, r7
   1bc50:	mov	r4, r0
   1bc54:	ldrne	r1, [sp, #44]	; 0x2c
   1bc58:	cmpne	r4, r1
   1bc5c:	beq	1d604 <main@@Base+0xa248>
   1bc60:	ldr	r6, [sp, #56]	; 0x38
   1bc64:	ldr	r9, [sp, #60]	; 0x3c
   1bc68:	ldr	r8, [sp, #40]	; 0x28
   1bc6c:	orrs	r0, r6, r9
   1bc70:	bne	1bc80 <main@@Base+0x88c4>
   1bc74:	ldrb	r0, [r8, #8]
   1bc78:	tst	r0, #2
   1bc7c:	beq	1c45c <main@@Base+0x90a0>
   1bc80:	ldr	r0, [r8]
   1bc84:	mov	r1, #22
   1bc88:	b	1c440 <main@@Base+0x9084>
   1bc8c:	ldr	r8, [sp, #40]	; 0x28
   1bc90:	ldr	r5, [sp, #44]	; 0x2c
   1bc94:	mov	r1, r7
   1bc98:	mov	r3, #9
   1bc9c:	mov	r0, r8
   1bca0:	mov	r2, r5
   1bca4:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   1bca8:	ldr	sl, [sp, #36]	; 0x24
   1bcac:	b	18a30 <main@@Base+0x5674>
   1bcb0:	ldr	sl, [sp, #36]	; 0x24
   1bcb4:	mov	r4, r5
   1bcb8:	b	1888c <main@@Base+0x54d0>
   1bcbc:	ldr	sl, [sp, #36]	; 0x24
   1bcc0:	mov	r4, r5
   1bcc4:	b	19d50 <main@@Base+0x6994>
   1bcc8:	cmp	r0, #125	; 0x7d
   1bccc:	bne	1d11c <main@@Base+0x9d60>
   1bcd0:	ldr	r5, [sp, #44]	; 0x2c
   1bcd4:	ldr	r8, [sp, #40]	; 0x28
   1bcd8:	add	r1, r2, #1
   1bcdc:	sub	r0, r5, r1
   1bce0:	cmp	r0, #2
   1bce4:	ldr	sl, [sp, #36]	; 0x24
   1bce8:	blt	1d280 <main@@Base+0x9ec4>
   1bcec:	ldrb	r0, [r1]
   1bcf0:	cmp	r0, #32
   1bcf4:	bls	1d260 <main@@Base+0x9ea4>
   1bcf8:	ldr	r5, [sp, #44]	; 0x2c
   1bcfc:	ldr	r8, [sp, #40]	; 0x28
   1bd00:	ldr	sl, [sp, #36]	; 0x24
   1bd04:	mov	r4, r1
   1bd08:	b	1888c <main@@Base+0x54d0>
   1bd0c:	cmp	r0, #93	; 0x5d
   1bd10:	bne	1d140 <main@@Base+0x9d84>
   1bd14:	ldr	r5, [sp, #44]	; 0x2c
   1bd18:	ldr	r8, [sp, #40]	; 0x28
   1bd1c:	add	r1, r2, #1
   1bd20:	sub	r0, r5, r1
   1bd24:	cmp	r0, #2
   1bd28:	ldr	sl, [sp, #36]	; 0x24
   1bd2c:	blt	1d2e8 <main@@Base+0x9f2c>
   1bd30:	ldrb	r0, [r1]
   1bd34:	cmp	r0, #32
   1bd38:	bls	1d2c8 <main@@Base+0x9f0c>
   1bd3c:	ldr	r5, [sp, #44]	; 0x2c
   1bd40:	ldr	r8, [sp, #40]	; 0x28
   1bd44:	ldr	sl, [sp, #36]	; 0x24
   1bd48:	mov	r4, r1
   1bd4c:	b	19d50 <main@@Base+0x6994>
   1bd50:	mov	r4, r5
   1bd54:	b	1d338 <main@@Base+0x9f7c>
   1bd58:	mov	r0, r8
   1bd5c:	mov	r1, r5
   1bd60:	b	1d12c <main@@Base+0x9d70>
   1bd64:	mov	r0, r8
   1bd68:	mov	r1, r5
   1bd6c:	b	1d150 <main@@Base+0x9d94>
   1bd70:	cmp	r0, #93	; 0x5d
   1bd74:	bne	1d164 <main@@Base+0x9da8>
   1bd78:	ldr	r0, [sp, #44]	; 0x2c
   1bd7c:	add	r1, r4, #1
   1bd80:	sub	r0, r0, r1
   1bd84:	cmp	r0, #2
   1bd88:	blt	1d328 <main@@Base+0x9f6c>
   1bd8c:	b	1bdbc <main@@Base+0x8a00>
   1bd90:	mov	r0, r8
   1bd94:	mov	r1, r5
   1bd98:	mov	r2, r5
   1bd9c:	b	1d170 <main@@Base+0x9db4>
   1bda0:	ldr	sl, [sp, #36]	; 0x24
   1bda4:	mov	r4, r5
   1bda8:	b	1a0a4 <main@@Base+0x6ce8>
   1bdac:	add	r1, r4, #1
   1bdb0:	sub	r0, r5, r1
   1bdb4:	cmp	r0, #2
   1bdb8:	blt	1d328 <main@@Base+0x9f6c>
   1bdbc:	ldrb	r0, [r1]
   1bdc0:	cmp	r0, #32
   1bdc4:	bls	1d318 <main@@Base+0x9f5c>
   1bdc8:	mov	r4, r1
   1bdcc:	b	1d338 <main@@Base+0x9f7c>
   1bdd0:	cmp	r0, #93	; 0x5d
   1bdd4:	bne	1d194 <main@@Base+0x9dd8>
   1bdd8:	ldr	r5, [sp, #44]	; 0x2c
   1bddc:	ldr	r8, [sp, #40]	; 0x28
   1bde0:	add	r1, r2, #1
   1bde4:	sub	r0, r5, r1
   1bde8:	cmp	r0, #2
   1bdec:	ldr	sl, [sp, #36]	; 0x24
   1bdf0:	blt	1d3f8 <main@@Base+0xa03c>
   1bdf4:	ldrb	r0, [r1]
   1bdf8:	cmp	r0, #32
   1bdfc:	bls	1d3d8 <main@@Base+0xa01c>
   1be00:	ldr	r5, [sp, #44]	; 0x2c
   1be04:	ldr	r8, [sp, #40]	; 0x28
   1be08:	ldr	sl, [sp, #36]	; 0x24
   1be0c:	mov	r4, r1
   1be10:	b	1a0a4 <main@@Base+0x6ce8>
   1be14:	ldr	r8, [sp, #40]	; 0x28
   1be18:	ldr	r5, [sp, #44]	; 0x2c
   1be1c:	mov	r1, r2
   1be20:	mov	r0, r8
   1be24:	mov	r2, r5
   1be28:	mov	r3, #9
   1be2c:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   1be30:	ldr	sl, [sp, #36]	; 0x24
   1be34:	b	18978 <main@@Base+0x55bc>
   1be38:	mov	r0, r8
   1be3c:	mov	r1, r5
   1be40:	b	1d1a4 <main@@Base+0x9de8>
   1be44:	bne	1be54 <main@@Base+0x8a98>
   1be48:	ldrb	r0, [r9, #2]!
   1be4c:	cmp	r0, #32
   1be50:	bhi	1be64 <main@@Base+0x8aa8>
   1be54:	ldr	r0, [sp, #40]	; 0x28
   1be58:	ldr	r2, [sp, #44]	; 0x2c
   1be5c:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1be60:	mov	r9, r0
   1be64:	ldr	r7, [sp, #44]	; 0x2c
   1be68:	cmp	r9, r7
   1be6c:	beq	1bec8 <main@@Base+0x8b0c>
   1be70:	ldrb	r0, [r9]
   1be74:	cmp	r0, #93	; 0x5d
   1be78:	bne	1bec4 <main@@Base+0x8b08>
   1be7c:	ldr	r0, [sp, #44]	; 0x2c
   1be80:	ldr	r8, [sp, #40]	; 0x28
   1be84:	add	r1, r9, #1
   1be88:	sub	r0, r0, r1
   1be8c:	cmp	r0, #2
   1be90:	blt	1beb4 <main@@Base+0x8af8>
   1be94:	ldrb	r0, [r1]
   1be98:	cmp	r0, #32
   1be9c:	bhi	1d1f0 <main@@Base+0x9e34>
   1bea0:	ldr	r8, [sp, #40]	; 0x28
   1bea4:	bne	1beb4 <main@@Base+0x8af8>
   1bea8:	ldrb	r0, [r9, #2]!
   1beac:	cmp	r0, #32
   1beb0:	bhi	1b870 <main@@Base+0x84b4>
   1beb4:	ldr	r2, [sp, #44]	; 0x2c
   1beb8:	mov	r0, r8
   1bebc:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1bec0:	b	1b86c <main@@Base+0x84b0>
   1bec4:	mov	r7, r9
   1bec8:	mov	r0, #0
   1becc:	mov	r1, #1
   1bed0:	str	r0, [fp, #-52]	; 0xffffffcc
   1bed4:	str	r0, [fp, #-56]	; 0xffffffc8
   1bed8:	ldr	r0, [sp, #40]	; 0x28
   1bedc:	ldr	r0, [r0]
   1bee0:	bl	2ab30 <flatcc_builder_extend_vector@@Base>
   1bee4:	cmp	r0, #0
   1bee8:	beq	1d5e8 <main@@Base+0xa22c>
   1beec:	ldr	r5, [sp, #44]	; 0x2c
   1bef0:	ldr	r8, [sp, #40]	; 0x28
   1bef4:	mov	r4, r0
   1bef8:	mov	r9, r7
   1befc:	mov	r0, r8
   1bf00:	mov	r1, r9
   1bf04:	mov	r2, r5
   1bf08:	sub	r3, fp, #56	; 0x38
   1bf0c:	bl	30828 <flatcc_json_parser_double@@Base>
   1bf10:	mov	r7, r0
   1bf14:	cmp	r9, r0
   1bf18:	bne	1bf58 <main@@Base+0x8b9c>
   1bf1c:	sub	r0, fp, #56	; 0x38
   1bf20:	mov	r1, r9
   1bf24:	mov	r2, r5
   1bf28:	str	r0, [sp]
   1bf2c:	mov	r0, r8
   1bf30:	ldr	r3, [pc, #4008]	; 1cee0 <main@@Base+0x9b24>
   1bf34:	add	r3, pc, r3
   1bf38:	bl	23c78 <main@@Base+0x108bc>
   1bf3c:	mov	r7, r0
   1bf40:	cmp	r0, r9
   1bf44:	beq	1d5e8 <main@@Base+0xa22c>
   1bf48:	ldr	r5, [sp, #44]	; 0x2c
   1bf4c:	ldr	r8, [sp, #40]	; 0x28
   1bf50:	cmp	r7, r5
   1bf54:	beq	1d5ac <main@@Base+0xa1f0>
   1bf58:	vldr	d16, [fp, #-56]	; 0xffffffc8
   1bf5c:	sub	r0, r5, r7
   1bf60:	cmp	r0, #2
   1bf64:	vstr	d16, [r4]
   1bf68:	blt	1bfa8 <main@@Base+0x8bec>
   1bf6c:	ldrb	r0, [r7]
   1bf70:	cmp	r0, #32
   1bf74:	bls	1bf8c <main@@Base+0x8bd0>
   1bf78:	ldr	r5, [sp, #44]	; 0x2c
   1bf7c:	mov	r9, r7
   1bf80:	cmp	r9, r5
   1bf84:	bne	1bfc4 <main@@Base+0x8c08>
   1bf88:	b	1d1bc <main@@Base+0x9e00>
   1bf8c:	ldr	r5, [sp, #44]	; 0x2c
   1bf90:	ldr	r8, [sp, #40]	; 0x28
   1bf94:	bne	1bfa8 <main@@Base+0x8bec>
   1bf98:	mov	r9, r7
   1bf9c:	ldrb	r0, [r9, #1]!
   1bfa0:	cmp	r0, #32
   1bfa4:	bhi	1bfbc <main@@Base+0x8c00>
   1bfa8:	mov	r0, r8
   1bfac:	mov	r1, r7
   1bfb0:	mov	r2, r5
   1bfb4:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1bfb8:	mov	r9, r0
   1bfbc:	cmp	r9, r5
   1bfc0:	beq	1d1bc <main@@Base+0x9e00>
   1bfc4:	ldrb	r0, [r9]
   1bfc8:	cmp	r0, #44	; 0x2c
   1bfcc:	bne	1d1c8 <main@@Base+0x9e0c>
   1bfd0:	ldr	r4, [sp, #44]	; 0x2c
   1bfd4:	add	r1, r9, #1
   1bfd8:	sub	r0, r4, r1
   1bfdc:	cmp	r0, #2
   1bfe0:	ldr	r0, [sp, #40]	; 0x28
   1bfe4:	blt	1c020 <main@@Base+0x8c64>
   1bfe8:	ldrb	r0, [r1]
   1bfec:	cmp	r0, #32
   1bff0:	bls	1c008 <main@@Base+0x8c4c>
   1bff4:	ldr	r4, [sp, #44]	; 0x2c
   1bff8:	mov	r9, r1
   1bffc:	cmp	r9, r4
   1c000:	bne	1c034 <main@@Base+0x8c78>
   1c004:	b	1d1fc <main@@Base+0x9e40>
   1c008:	ldr	r4, [sp, #44]	; 0x2c
   1c00c:	ldr	r0, [sp, #40]	; 0x28
   1c010:	bne	1c020 <main@@Base+0x8c64>
   1c014:	ldrb	r2, [r9, #2]!
   1c018:	cmp	r2, #32
   1c01c:	bhi	1c02c <main@@Base+0x8c70>
   1c020:	mov	r2, r4
   1c024:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1c028:	mov	r9, r0
   1c02c:	cmp	r9, r4
   1c030:	beq	1d1fc <main@@Base+0x9e40>
   1c034:	ldrb	r0, [r9]
   1c038:	cmp	r0, #93	; 0x5d
   1c03c:	beq	1d1d0 <main@@Base+0x9e14>
   1c040:	ldr	r8, [sp, #40]	; 0x28
   1c044:	mov	r0, #0
   1c048:	mov	r1, #1
   1c04c:	str	r0, [fp, #-52]	; 0xffffffcc
   1c050:	str	r0, [fp, #-56]	; 0xffffffc8
   1c054:	ldr	r0, [r8]
   1c058:	bl	2ab30 <flatcc_builder_extend_vector@@Base>
   1c05c:	ldr	r5, [sp, #44]	; 0x2c
   1c060:	mov	r4, r0
   1c064:	cmp	r0, #0
   1c068:	mov	r7, r9
   1c06c:	bne	1befc <main@@Base+0x8b40>
   1c070:	b	1d5ac <main@@Base+0xa1f0>
   1c074:	mov	r4, r5
   1c078:	b	18f58 <main@@Base+0x5b9c>
   1c07c:	cmp	r0, #125	; 0x7d
   1c080:	bne	1d20c <main@@Base+0x9e50>
   1c084:	ldr	r5, [sp, #44]	; 0x2c
   1c088:	ldr	r8, [sp, #40]	; 0x28
   1c08c:	add	r1, r3, #1
   1c090:	sub	r0, r5, r1
   1c094:	cmp	r0, #2
   1c098:	blt	1d434 <main@@Base+0xa078>
   1c09c:	ldrb	r0, [r1]
   1c0a0:	cmp	r0, #32
   1c0a4:	bls	1d418 <main@@Base+0xa05c>
   1c0a8:	ldr	r5, [sp, #44]	; 0x2c
   1c0ac:	ldr	r8, [sp, #40]	; 0x28
   1c0b0:	mov	r4, r1
   1c0b4:	b	18f58 <main@@Base+0x5b9c>
   1c0b8:	mov	r0, r8
   1c0bc:	mov	r1, r5
   1c0c0:	b	1d21c <main@@Base+0x9e60>
   1c0c4:	ldr	r5, [sp, #44]	; 0x2c
   1c0c8:	ldr	r8, [sp, #40]	; 0x28
   1c0cc:	bne	1c0dc <main@@Base+0x8d20>
   1c0d0:	ldrb	r0, [r7, #2]!
   1c0d4:	cmp	r0, #32
   1c0d8:	bhi	1c0ec <main@@Base+0x8d30>
   1c0dc:	mov	r0, r8
   1c0e0:	mov	r2, r5
   1c0e4:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1c0e8:	mov	r7, r0
   1c0ec:	ldr	sl, [sp, #36]	; 0x24
   1c0f0:	cmp	r4, r7
   1c0f4:	beq	1c2b8 <main@@Base+0x8efc>
   1c0f8:	mov	r6, #0
   1c0fc:	cmp	r7, r5
   1c100:	str	r6, [fp, #-52]	; 0xffffffcc
   1c104:	str	r6, [fp, #-56]	; 0xffffffc8
   1c108:	str	r6, [fp, #-60]	; 0xffffffc4
   1c10c:	str	r6, [sp, #56]	; 0x38
   1c110:	beq	1c158 <main@@Base+0x8d9c>
   1c114:	sub	r0, fp, #56	; 0x38
   1c118:	ldr	r2, [sp, #44]	; 0x2c
   1c11c:	mov	r1, r7
   1c120:	add	r3, sp, #56	; 0x38
   1c124:	str	r0, [sp]
   1c128:	ldr	r0, [sp, #40]	; 0x28
   1c12c:	bl	3132c <flatcc_json_parser_integer@@Base>
   1c130:	cmp	r0, r7
   1c134:	beq	1c168 <main@@Base+0x8dac>
   1c138:	mov	r1, r0
   1c13c:	ldr	r0, [sp, #56]	; 0x38
   1c140:	cmp	r0, #0
   1c144:	beq	1c178 <main@@Base+0x8dbc>
   1c148:	ldr	r0, [sp, #40]	; 0x28
   1c14c:	ldr	r2, [sp, #44]	; 0x2c
   1c150:	mov	r3, #8
   1c154:	b	1c190 <main@@Base+0x8dd4>
   1c158:	ldr	r4, [sp, #44]	; 0x2c
   1c15c:	cmp	r7, r4
   1c160:	bne	1c1d8 <main@@Base+0x8e1c>
   1c164:	b	1c1a0 <main@@Base+0x8de4>
   1c168:	mov	r4, r7
   1c16c:	cmp	r7, r4
   1c170:	bne	1c1d8 <main@@Base+0x8e1c>
   1c174:	b	1c1a0 <main@@Base+0x8de4>
   1c178:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1c17c:	cmp	r0, #0
   1c180:	beq	1d17c <main@@Base+0x9dc0>
   1c184:	ldr	r0, [sp, #40]	; 0x28
   1c188:	ldr	r2, [sp, #44]	; 0x2c
   1c18c:	mov	r3, #7
   1c190:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   1c194:	mov	r4, r0
   1c198:	cmp	r7, r4
   1c19c:	bne	1c1d8 <main@@Base+0x8e1c>
   1c1a0:	sub	r0, fp, #60	; 0x3c
   1c1a4:	ldr	r2, [sp, #44]	; 0x2c
   1c1a8:	mov	r1, r7
   1c1ac:	str	r0, [sp]
   1c1b0:	ldr	r0, [sp, #40]	; 0x28
   1c1b4:	ldr	r3, [pc, #4092]	; 1d1b8 <main@@Base+0x9dfc>
   1c1b8:	add	r3, pc, r3
   1c1bc:	bl	23814 <main@@Base+0x10458>
   1c1c0:	cmp	r0, r7
   1c1c4:	mov	r4, r0
   1c1c8:	ldrne	r1, [sp, #44]	; 0x2c
   1c1cc:	cmpne	r4, r1
   1c1d0:	beq	1d604 <main@@Base+0xa248>
   1c1d4:	ldr	r6, [fp, #-60]	; 0xffffffc4
   1c1d8:	ldr	r8, [sp, #40]	; 0x28
   1c1dc:	cmp	r6, #0
   1c1e0:	bne	1c1f0 <main@@Base+0x8e34>
   1c1e4:	ldrb	r0, [r8, #8]
   1c1e8:	tst	r0, #2
   1c1ec:	beq	1c45c <main@@Base+0x90a0>
   1c1f0:	ldr	r0, [r8]
   1c1f4:	mov	r1, #21
   1c1f8:	mov	r2, #4
   1c1fc:	mov	r3, #4
   1c200:	bl	2d0a0 <flatcc_builder_table_add@@Base>
   1c204:	cmp	r0, #0
   1c208:	beq	1d604 <main@@Base+0xa248>
   1c20c:	str	r6, [r0]
   1c210:	b	1c458 <main@@Base+0x909c>
   1c214:	ldr	r5, [sp, #44]	; 0x2c
   1c218:	ldr	r8, [sp, #40]	; 0x28
   1c21c:	bne	1c22c <main@@Base+0x8e70>
   1c220:	ldrb	r0, [r7, #2]!
   1c224:	cmp	r0, #32
   1c228:	bhi	1c23c <main@@Base+0x8e80>
   1c22c:	mov	r0, r8
   1c230:	mov	r2, r5
   1c234:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1c238:	mov	r7, r0
   1c23c:	ldr	sl, [sp, #36]	; 0x24
   1c240:	cmp	r4, r7
   1c244:	beq	1c2b8 <main@@Base+0x8efc>
   1c248:	mov	r6, #0
   1c24c:	cmp	r7, r5
   1c250:	str	r6, [fp, #-52]	; 0xffffffcc
   1c254:	str	r6, [fp, #-56]	; 0xffffffc8
   1c258:	str	r6, [sp, #60]	; 0x3c
   1c25c:	str	r6, [sp, #56]	; 0x38
   1c260:	str	r6, [fp, #-60]	; 0xffffffc4
   1c264:	beq	1c39c <main@@Base+0x8fe0>
   1c268:	sub	r0, fp, #56	; 0x38
   1c26c:	ldr	r2, [sp, #44]	; 0x2c
   1c270:	mov	r1, r7
   1c274:	sub	r3, fp, #60	; 0x3c
   1c278:	str	r0, [sp]
   1c27c:	ldr	r0, [sp, #40]	; 0x28
   1c280:	bl	3132c <flatcc_json_parser_integer@@Base>
   1c284:	cmp	r0, r7
   1c288:	beq	1c3b0 <main@@Base+0x8ff4>
   1c28c:	mov	r1, r0
   1c290:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1c294:	cmp	r0, #0
   1c298:	beq	1c3c8 <main@@Base+0x900c>
   1c29c:	ldr	r0, [sp, #40]	; 0x28
   1c2a0:	ldr	r2, [sp, #44]	; 0x2c
   1c2a4:	mov	r3, #8
   1c2a8:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   1c2ac:	mov	r4, r0
   1c2b0:	mov	r6, #0
   1c2b4:	b	1c3a0 <main@@Base+0x8fe4>
   1c2b8:	mov	r0, r8
   1c2bc:	mov	r1, r4
   1c2c0:	mov	r2, r5
   1c2c4:	bl	2f87c <flatcc_json_parser_unmatched_symbol@@Base>
   1c2c8:	mov	r4, r0
   1c2cc:	sub	r0, r5, r4
   1c2d0:	cmp	r0, #2
   1c2d4:	blt	1c308 <main@@Base+0x8f4c>
   1c2d8:	ldrb	r0, [r4]
   1c2dc:	cmp	r0, #32
   1c2e0:	bls	1c2f4 <main@@Base+0x8f38>
   1c2e4:	mov	r2, r4
   1c2e8:	cmp	r2, r5
   1c2ec:	bne	1c324 <main@@Base+0x8f68>
   1c2f0:	b	1d530 <main@@Base+0xa174>
   1c2f4:	bne	1c308 <main@@Base+0x8f4c>
   1c2f8:	mov	r2, r4
   1c2fc:	ldrb	r0, [r2, #1]!
   1c300:	cmp	r0, #32
   1c304:	bhi	1c31c <main@@Base+0x8f60>
   1c308:	mov	r0, r8
   1c30c:	mov	r1, r4
   1c310:	mov	r2, r5
   1c314:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1c318:	mov	r2, r0
   1c31c:	cmp	r2, r5
   1c320:	beq	1d530 <main@@Base+0xa174>
   1c324:	ldrb	r0, [r2]
   1c328:	cmp	r0, #44	; 0x2c
   1c32c:	bne	1d538 <main@@Base+0xa17c>
   1c330:	add	r1, r2, #1
   1c334:	sub	r0, r5, r1
   1c338:	cmp	r0, #2
   1c33c:	blt	1c36c <main@@Base+0x8fb0>
   1c340:	ldrb	r0, [r1]
   1c344:	cmp	r0, #32
   1c348:	bls	1c35c <main@@Base+0x8fa0>
   1c34c:	mov	r2, r1
   1c350:	cmp	r2, r5
   1c354:	bne	1c384 <main@@Base+0x8fc8>
   1c358:	b	1d564 <main@@Base+0xa1a8>
   1c35c:	bne	1c36c <main@@Base+0x8fb0>
   1c360:	ldrb	r0, [r2, #2]!
   1c364:	cmp	r0, #32
   1c368:	bhi	1c37c <main@@Base+0x8fc0>
   1c36c:	mov	r0, r8
   1c370:	mov	r2, r5
   1c374:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1c378:	mov	r2, r0
   1c37c:	cmp	r2, r5
   1c380:	beq	1d564 <main@@Base+0xa1a8>
   1c384:	ldrb	r0, [r2]
   1c388:	movw	lr, #29556	; 0x7374
   1c38c:	movt	lr, #29797	; 0x7465
   1c390:	cmp	r0, #125	; 0x7d
   1c394:	bne	1363c <main@@Base+0x280>
   1c398:	b	1d540 <main@@Base+0xa184>
   1c39c:	ldr	r4, [sp, #44]	; 0x2c
   1c3a0:	mov	r9, #0
   1c3a4:	cmp	r7, r4
   1c3a8:	bne	1c420 <main@@Base+0x9064>
   1c3ac:	b	1c3e4 <main@@Base+0x9028>
   1c3b0:	mov	r6, #0
   1c3b4:	mov	r9, #0
   1c3b8:	mov	r4, r7
   1c3bc:	cmp	r7, r4
   1c3c0:	bne	1c420 <main@@Base+0x9064>
   1c3c4:	b	1c3e4 <main@@Base+0x9028>
   1c3c8:	ldr	r6, [fp, #-56]	; 0xffffffc8
   1c3cc:	ldr	r9, [fp, #-52]	; 0xffffffcc
   1c3d0:	mov	r4, r1
   1c3d4:	str	r9, [sp, #60]	; 0x3c
   1c3d8:	str	r6, [sp, #56]	; 0x38
   1c3dc:	cmp	r7, r4
   1c3e0:	bne	1c420 <main@@Base+0x9064>
   1c3e4:	add	r0, sp, #56	; 0x38
   1c3e8:	ldr	r2, [sp, #44]	; 0x2c
   1c3ec:	mov	r1, r7
   1c3f0:	str	r0, [sp]
   1c3f4:	ldr	r0, [sp, #40]	; 0x28
   1c3f8:	ldr	r3, [pc, #4052]	; 1d3d4 <main@@Base+0xa018>
   1c3fc:	add	r3, pc, r3
   1c400:	bl	23a54 <main@@Base+0x10698>
   1c404:	cmp	r0, r7
   1c408:	mov	r4, r0
   1c40c:	ldrne	r1, [sp, #44]	; 0x2c
   1c410:	cmpne	r4, r1
   1c414:	beq	1d604 <main@@Base+0xa248>
   1c418:	ldr	r6, [sp, #56]	; 0x38
   1c41c:	ldr	r9, [sp, #60]	; 0x3c
   1c420:	ldr	r8, [sp, #40]	; 0x28
   1c424:	orrs	r0, r6, r9
   1c428:	bne	1c438 <main@@Base+0x907c>
   1c42c:	ldrb	r0, [r8, #8]
   1c430:	tst	r0, #2
   1c434:	beq	1c45c <main@@Base+0x90a0>
   1c438:	ldr	r0, [r8]
   1c43c:	mov	r1, #23
   1c440:	mov	r2, #8
   1c444:	mov	r3, #8
   1c448:	bl	2d0a0 <flatcc_builder_table_add@@Base>
   1c44c:	cmp	r0, #0
   1c450:	beq	1d604 <main@@Base+0xa248>
   1c454:	stm	r0, {r6, r9}
   1c458:	ldr	r8, [sp, #40]	; 0x28
   1c45c:	ldr	r5, [sp, #44]	; 0x2c
   1c460:	b	166e8 <main@@Base+0x332c>
   1c464:	bne	1c474 <main@@Base+0x90b8>
   1c468:	ldrb	r0, [r4, #2]!
   1c46c:	cmp	r0, #32
   1c470:	bhi	1c484 <main@@Base+0x90c8>
   1c474:	ldr	r0, [sp, #40]	; 0x28
   1c478:	ldr	r2, [sp, #44]	; 0x2c
   1c47c:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1c480:	mov	r4, r0
   1c484:	ldr	r6, [sp, #44]	; 0x2c
   1c488:	cmp	r4, r6
   1c48c:	beq	1c4a0 <main@@Base+0x90e4>
   1c490:	ldrb	r0, [r4]
   1c494:	cmp	r0, #93	; 0x5d
   1c498:	beq	1d238 <main@@Base+0x9e7c>
   1c49c:	mov	r6, r4
   1c4a0:	mov	r0, #0
   1c4a4:	mov	r1, #1
   1c4a8:	strb	r0, [fp, #-60]	; 0xffffffc4
   1c4ac:	ldr	r0, [sp, #40]	; 0x28
   1c4b0:	ldr	r0, [r0]
   1c4b4:	bl	2ab30 <flatcc_builder_extend_vector@@Base>
   1c4b8:	cmp	r0, #0
   1c4bc:	beq	1d600 <main@@Base+0xa244>
   1c4c0:	mov	r8, r0
   1c4c4:	mov	r4, r6
   1c4c8:	ldr	r5, [sp, #44]	; 0x2c
   1c4cc:	mov	r6, #0
   1c4d0:	str	r6, [fp, #-52]	; 0xffffffcc
   1c4d4:	str	r6, [fp, #-56]	; 0xffffffc8
   1c4d8:	strb	r6, [fp, #-60]	; 0xffffffc4
   1c4dc:	str	r6, [sp, #56]	; 0x38
   1c4e0:	cmp	r4, r5
   1c4e4:	beq	1c52c <main@@Base+0x9170>
   1c4e8:	sub	r0, fp, #56	; 0x38
   1c4ec:	mov	r1, r4
   1c4f0:	mov	r2, r5
   1c4f4:	add	r3, sp, #56	; 0x38
   1c4f8:	str	r0, [sp]
   1c4fc:	ldr	r0, [sp, #40]	; 0x28
   1c500:	bl	3132c <flatcc_json_parser_integer@@Base>
   1c504:	cmp	r0, r4
   1c508:	beq	1c534 <main@@Base+0x9178>
   1c50c:	mov	r1, r0
   1c510:	ldr	r0, [sp, #56]	; 0x38
   1c514:	cmp	r0, #0
   1c518:	beq	1c53c <main@@Base+0x9180>
   1c51c:	ldr	r7, [sp, #40]	; 0x28
   1c520:	ldr	r5, [sp, #44]	; 0x2c
   1c524:	mov	r3, #8
   1c528:	b	1c55c <main@@Base+0x91a0>
   1c52c:	mov	r1, r5
   1c530:	b	1c584 <main@@Base+0x91c8>
   1c534:	mov	r1, r4
   1c538:	b	1c580 <main@@Base+0x91c4>
   1c53c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1c540:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1c544:	subs	r3, r0, #256	; 0x100
   1c548:	sbcs	r2, r2, #0
   1c54c:	bcc	1c578 <main@@Base+0x91bc>
   1c550:	ldr	r7, [sp, #40]	; 0x28
   1c554:	ldr	r5, [sp, #44]	; 0x2c
   1c558:	mov	r3, #7
   1c55c:	mov	r0, r7
   1c560:	mov	r2, r5
   1c564:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   1c568:	mov	r1, r0
   1c56c:	cmp	r4, r1
   1c570:	bne	1c5d4 <main@@Base+0x9218>
   1c574:	b	1c590 <main@@Base+0x91d4>
   1c578:	mov	r6, r0
   1c57c:	strb	r0, [fp, #-60]	; 0xffffffc4
   1c580:	ldr	r5, [sp, #44]	; 0x2c
   1c584:	ldr	r7, [sp, #40]	; 0x28
   1c588:	cmp	r4, r1
   1c58c:	bne	1c5d4 <main@@Base+0x9218>
   1c590:	sub	r0, fp, #60	; 0x3c
   1c594:	mov	r1, r4
   1c598:	mov	r2, r5
   1c59c:	str	r0, [sp]
   1c5a0:	mov	r0, r7
   1c5a4:	ldr	r3, [pc, #4092]	; 1d5a8 <main@@Base+0xa1ec>
   1c5a8:	add	r3, pc, r3
   1c5ac:	bl	1ed18 <main@@Base+0xb95c>
   1c5b0:	mov	r1, r0
   1c5b4:	cmp	r0, r4
   1c5b8:	beq	1d5f8 <main@@Base+0xa23c>
   1c5bc:	ldr	r0, [sp, #44]	; 0x2c
   1c5c0:	cmp	r1, r0
   1c5c4:	beq	1d5f8 <main@@Base+0xa23c>
   1c5c8:	ldrb	r6, [fp, #-60]	; 0xffffffc4
   1c5cc:	ldr	r5, [sp, #44]	; 0x2c
   1c5d0:	ldr	r7, [sp, #40]	; 0x28
   1c5d4:	sub	r0, r5, r1
   1c5d8:	strb	r6, [r8]
   1c5dc:	cmp	r0, #2
   1c5e0:	blt	1c620 <main@@Base+0x9264>
   1c5e4:	ldrb	r0, [r1]
   1c5e8:	cmp	r0, #32
   1c5ec:	bls	1c604 <main@@Base+0x9248>
   1c5f0:	ldr	r5, [sp, #44]	; 0x2c
   1c5f4:	mov	r4, r1
   1c5f8:	cmp	r4, r5
   1c5fc:	bne	1c638 <main@@Base+0x927c>
   1c600:	b	1d228 <main@@Base+0x9e6c>
   1c604:	ldr	r5, [sp, #44]	; 0x2c
   1c608:	ldr	r7, [sp, #40]	; 0x28
   1c60c:	bne	1c620 <main@@Base+0x9264>
   1c610:	mov	r4, r1
   1c614:	ldrb	r0, [r4, #1]!
   1c618:	cmp	r0, #32
   1c61c:	bhi	1c630 <main@@Base+0x9274>
   1c620:	mov	r0, r7
   1c624:	mov	r2, r5
   1c628:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1c62c:	mov	r4, r0
   1c630:	cmp	r4, r5
   1c634:	beq	1d228 <main@@Base+0x9e6c>
   1c638:	ldrb	r0, [r4]
   1c63c:	cmp	r0, #44	; 0x2c
   1c640:	bne	1d230 <main@@Base+0x9e74>
   1c644:	ldr	r5, [sp, #44]	; 0x2c
   1c648:	add	r1, r4, #1
   1c64c:	sub	r0, r5, r1
   1c650:	cmp	r0, #2
   1c654:	ldr	r0, [sp, #40]	; 0x28
   1c658:	blt	1c698 <main@@Base+0x92dc>
   1c65c:	ldrb	r0, [r1]
   1c660:	cmp	r0, #32
   1c664:	bls	1c680 <main@@Base+0x92c4>
   1c668:	ldr	r5, [sp, #44]	; 0x2c
   1c66c:	mov	r4, r1
   1c670:	cmp	r4, r5
   1c674:	bne	1c6ac <main@@Base+0x92f0>
   1c678:	b	1d290 <main@@Base+0x9ed4>
   1c67c:	andeq	sl, r2, r8, ror #21
   1c680:	ldr	r5, [sp, #44]	; 0x2c
   1c684:	ldr	r0, [sp, #40]	; 0x28
   1c688:	bne	1c698 <main@@Base+0x92dc>
   1c68c:	ldrb	r2, [r4, #2]!
   1c690:	cmp	r2, #32
   1c694:	bhi	1c6a4 <main@@Base+0x92e8>
   1c698:	mov	r2, r5
   1c69c:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1c6a0:	mov	r4, r0
   1c6a4:	cmp	r4, r5
   1c6a8:	beq	1d290 <main@@Base+0x9ed4>
   1c6ac:	ldrb	r0, [r4]
   1c6b0:	cmp	r0, #93	; 0x5d
   1c6b4:	beq	1d238 <main@@Base+0x9e7c>
   1c6b8:	mov	r0, #0
   1c6bc:	mov	r1, #1
   1c6c0:	strb	r0, [fp, #-60]	; 0xffffffc4
   1c6c4:	ldr	r0, [sp, #40]	; 0x28
   1c6c8:	ldr	r0, [r0]
   1c6cc:	bl	2ab30 <flatcc_builder_extend_vector@@Base>
   1c6d0:	mov	r8, r0
   1c6d4:	cmp	r0, #0
   1c6d8:	bne	1c4c8 <main@@Base+0x910c>
   1c6dc:	b	1d604 <main@@Base+0xa248>
   1c6e0:	ldr	r5, [sp, #44]	; 0x2c
   1c6e4:	ldr	r8, [sp, #40]	; 0x28
   1c6e8:	ldr	sl, [sp, #36]	; 0x24
   1c6ec:	b	18898 <main@@Base+0x54dc>
   1c6f0:	bne	1c700 <main@@Base+0x9344>
   1c6f4:	ldrb	r0, [r4, #2]!
   1c6f8:	cmp	r0, #32
   1c6fc:	bhi	1c710 <main@@Base+0x9354>
   1c700:	ldr	r0, [sp, #40]	; 0x28
   1c704:	ldr	r2, [sp, #44]	; 0x2c
   1c708:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1c70c:	mov	r4, r0
   1c710:	ldr	r2, [sp, #44]	; 0x2c
   1c714:	cmp	r4, r2
   1c718:	beq	1c768 <main@@Base+0x93ac>
   1c71c:	ldrb	r0, [r4]
   1c720:	cmp	r0, #125	; 0x7d
   1c724:	bne	1c764 <main@@Base+0x93a8>
   1c728:	ldr	r0, [sp, #44]	; 0x2c
   1c72c:	ldr	r8, [sp, #40]	; 0x28
   1c730:	add	r1, r4, #1
   1c734:	sub	r0, r0, r1
   1c738:	cmp	r0, #2
   1c73c:	blt	1d520 <main@@Base+0xa164>
   1c740:	ldrb	r0, [r1]
   1c744:	cmp	r0, #32
   1c748:	bhi	1d3c8 <main@@Base+0xa00c>
   1c74c:	ldr	r8, [sp, #40]	; 0x28
   1c750:	bne	1d520 <main@@Base+0xa164>
   1c754:	ldrb	r0, [r4, #2]!
   1c758:	cmp	r0, #32
   1c75c:	bhi	1a164 <main@@Base+0x6da8>
   1c760:	b	1d520 <main@@Base+0xa164>
   1c764:	mov	r2, r4
   1c768:	ldr	r5, [sp, #44]	; 0x2c
   1c76c:	cmp	r2, r5
   1c770:	mov	r9, r5
   1c774:	beq	1c7d0 <main@@Base+0x9414>
   1c778:	ldrb	r0, [r2]
   1c77c:	cmp	r0, #46	; 0x2e
   1c780:	beq	1c79c <main@@Base+0x93e0>
   1c784:	cmp	r0, #34	; 0x22
   1c788:	bne	1c7bc <main@@Base+0x9400>
   1c78c:	ldr	r0, [sp, #32]
   1c790:	mov	r1, #0
   1c794:	add	r9, r2, #1
   1c798:	b	1c7c8 <main@@Base+0x940c>
   1c79c:	ldr	r5, [sp, #44]	; 0x2c
   1c7a0:	ldr	r0, [sp, #40]	; 0x28
   1c7a4:	mov	r1, r2
   1c7a8:	mov	r3, #5
   1c7ac:	mov	r2, r5
   1c7b0:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   1c7b4:	mov	r9, r0
   1c7b8:	b	1c7d0 <main@@Base+0x9414>
   1c7bc:	ldr	r0, [sp, #32]
   1c7c0:	mov	r1, #1
   1c7c4:	mov	r9, r2
   1c7c8:	str	r1, [r0]
   1c7cc:	ldr	r5, [sp, #44]	; 0x2c
   1c7d0:	sub	lr, r5, r9
   1c7d4:	mov	r1, #8
   1c7d8:	cmp	lr, #8
   1c7dc:	movcc	r1, lr
   1c7e0:	sub	r2, r1, #1
   1c7e4:	cmp	r2, #7
   1c7e8:	bhi	1cf5c <main@@Base+0x9ba0>
   1c7ec:	add	r0, pc, #36	; 0x24
   1c7f0:	mov	r1, #0
   1c7f4:	mov	ip, #0
   1c7f8:	mov	r8, #0
   1c7fc:	mov	r7, #0
   1c800:	mov	r3, #0
   1c804:	mov	r6, #0
   1c808:	mov	r4, #0
   1c80c:	ldr	r5, [r0, r2, lsl #2]
   1c810:	mov	r2, #0
   1c814:	add	pc, r0, r5
   1c818:	andeq	r0, r0, r8, rrx
   1c81c:	andeq	r0, r0, r0, rrx
   1c820:	andeq	r0, r0, r8, asr r0
   1c824:	andeq	r0, r0, r0, asr r0
   1c828:	andeq	r0, r0, r4, asr #32
   1c82c:	andeq	r0, r0, r8, lsr r0
   1c830:	andeq	r0, r0, r8, lsr #32
   1c834:	andeq	r0, r0, r4, lsr #32
   1c838:	andeq	sl, r2, ip, asr #16
   1c83c:	ldrb	ip, [r9, #7]
   1c840:	ldrb	r0, [r9, #6]
   1c844:	mov	r8, r1
   1c848:	orr	r0, ip, r0, lsl #8
   1c84c:	mov	r1, r0
   1c850:	ldrb	r0, [r9, #5]
   1c854:	mov	r7, r8
   1c858:	orr	r1, r1, r0, lsl #16
   1c85c:	ldrb	r0, [r9, #4]
   1c860:	mov	r3, r7
   1c864:	orr	r1, r1, r0, lsl #24
   1c868:	ldrb	r0, [r9, #3]
   1c86c:	orr	r6, r0, r3
   1c870:	ldrb	r0, [r9, #2]
   1c874:	orr	r4, r6, r0, lsl #8
   1c878:	ldrb	r0, [r9, #1]
   1c87c:	orr	r2, r4, r0, lsl #16
   1c880:	ldrb	r0, [r9]
   1c884:	orr	r2, r2, r0, lsl #24
   1c888:	movw	r0, #65535	; 0xffff
   1c88c:	movt	r0, #26979	; 0x6963
   1c890:	cmp	r2, r0
   1c894:	bhi	1c8fc <main@@Base+0x9540>
   1c898:	movw	r0, #30062	; 0x756e
   1c89c:	and	r1, r1, #-16777216	; 0xff000000
   1c8a0:	movt	r0, #25455	; 0x636f
   1c8a4:	eor	r1, r1, #1946157056	; 0x74000000
   1c8a8:	eor	r0, r2, r0
   1c8ac:	orrs	r0, r1, r0
   1c8b0:	bne	1cf5c <main@@Base+0x9ba0>
   1c8b4:	cmp	lr, #6
   1c8b8:	mov	r7, r9
   1c8bc:	blt	1cc00 <main@@Base+0x9844>
   1c8c0:	ldr	r2, [sp, #32]
   1c8c4:	mov	r1, r9
   1c8c8:	ldrb	r0, [r1, #5]!
   1c8cc:	ldr	r2, [r2]
   1c8d0:	cmp	r2, #0
   1c8d4:	beq	1c9b4 <main@@Base+0x95f8>
   1c8d8:	cmp	r0, #33	; 0x21
   1c8dc:	bcc	1c8ec <main@@Base+0x9530>
   1c8e0:	cmp	r0, #58	; 0x3a
   1c8e4:	mov	r7, r9
   1c8e8:	bne	1cc00 <main@@Base+0x9844>
   1c8ec:	ldr	r0, [sp, #32]
   1c8f0:	mov	r2, #0
   1c8f4:	str	r2, [r0]
   1c8f8:	b	1c9c4 <main@@Base+0x9608>
   1c8fc:	movw	r1, #27648	; 0x6c00
   1c900:	bic	r0, r2, #255	; 0xff
   1c904:	movt	r1, #30305	; 0x7661
   1c908:	teq	r0, r1
   1c90c:	bne	1c958 <main@@Base+0x959c>
   1c910:	cmp	lr, #4
   1c914:	mov	r7, r9
   1c918:	blt	1cd74 <main@@Base+0x99b8>
   1c91c:	ldr	r2, [sp, #32]
   1c920:	mov	r1, r9
   1c924:	ldrb	r0, [r1, #3]!
   1c928:	ldr	r2, [r2]
   1c92c:	cmp	r2, #0
   1c930:	beq	1c9e8 <main@@Base+0x962c>
   1c934:	cmp	r0, #33	; 0x21
   1c938:	bcc	1c948 <main@@Base+0x958c>
   1c93c:	cmp	r0, #58	; 0x3a
   1c940:	mov	r7, r9
   1c944:	bne	1cd74 <main@@Base+0x99b8>
   1c948:	ldr	r0, [sp, #32]
   1c94c:	mov	r2, #0
   1c950:	str	r2, [r0]
   1c954:	b	1c9f8 <main@@Base+0x963c>
   1c958:	movw	r0, #0
   1c95c:	bfc	r2, #0, #16
   1c960:	movt	r0, #26980	; 0x6964
   1c964:	teq	r2, r0
   1c968:	bne	1cf5c <main@@Base+0x9ba0>
   1c96c:	cmp	lr, #3
   1c970:	mov	r1, r9
   1c974:	blt	1cf08 <main@@Base+0x9b4c>
   1c978:	ldr	r1, [sp, #32]
   1c97c:	mov	r2, r9
   1c980:	ldrb	r0, [r2, #2]!
   1c984:	ldr	r1, [r1]
   1c988:	cmp	r1, #0
   1c98c:	beq	1ca1c <main@@Base+0x9660>
   1c990:	cmp	r0, #33	; 0x21
   1c994:	bcc	1c9a4 <main@@Base+0x95e8>
   1c998:	cmp	r0, #58	; 0x3a
   1c99c:	mov	r1, r9
   1c9a0:	bne	1cf08 <main@@Base+0x9b4c>
   1c9a4:	ldr	r0, [sp, #32]
   1c9a8:	mov	r1, #0
   1c9ac:	str	r1, [r0]
   1c9b0:	b	1ca2c <main@@Base+0x9670>
   1c9b4:	cmp	r0, #34	; 0x22
   1c9b8:	mov	r7, r9
   1c9bc:	bne	1cc00 <main@@Base+0x9844>
   1c9c0:	add	r1, r9, #6
   1c9c4:	ldr	r0, [sp, #44]	; 0x2c
   1c9c8:	sub	r0, r0, r1
   1c9cc:	cmp	r0, #2
   1c9d0:	blt	1ca64 <main@@Base+0x96a8>
   1c9d4:	ldrb	r0, [r1]
   1c9d8:	cmp	r0, #32
   1c9dc:	bls	1ca50 <main@@Base+0x9694>
   1c9e0:	mov	r7, r1
   1c9e4:	b	1ca74 <main@@Base+0x96b8>
   1c9e8:	cmp	r0, #34	; 0x22
   1c9ec:	mov	r7, r9
   1c9f0:	bne	1cd74 <main@@Base+0x99b8>
   1c9f4:	add	r1, r9, #4
   1c9f8:	ldr	r0, [sp, #44]	; 0x2c
   1c9fc:	sub	r0, r0, r1
   1ca00:	cmp	r0, #2
   1ca04:	blt	1cae8 <main@@Base+0x972c>
   1ca08:	ldrb	r0, [r1]
   1ca0c:	cmp	r0, #32
   1ca10:	bls	1cad4 <main@@Base+0x9718>
   1ca14:	mov	r7, r1
   1ca18:	b	1caf8 <main@@Base+0x973c>
   1ca1c:	cmp	r0, #34	; 0x22
   1ca20:	mov	r1, r9
   1ca24:	bne	1cf08 <main@@Base+0x9b4c>
   1ca28:	add	r2, r9, #3
   1ca2c:	ldr	r0, [sp, #44]	; 0x2c
   1ca30:	sub	r0, r0, r2
   1ca34:	cmp	r0, #2
   1ca38:	blt	1cb6c <main@@Base+0x97b0>
   1ca3c:	ldrb	r0, [r2]
   1ca40:	cmp	r0, #32
   1ca44:	bls	1cb58 <main@@Base+0x979c>
   1ca48:	mov	r1, r2
   1ca4c:	b	1cb80 <main@@Base+0x97c4>
   1ca50:	bne	1ca64 <main@@Base+0x96a8>
   1ca54:	mov	r7, r1
   1ca58:	ldrb	r0, [r7, #1]!
   1ca5c:	cmp	r0, #32
   1ca60:	bhi	1ca74 <main@@Base+0x96b8>
   1ca64:	ldr	r0, [sp, #40]	; 0x28
   1ca68:	ldr	r2, [sp, #44]	; 0x2c
   1ca6c:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1ca70:	mov	r7, r0
   1ca74:	ldr	r0, [sp, #44]	; 0x2c
   1ca78:	cmp	r7, r0
   1ca7c:	beq	1cabc <main@@Base+0x9700>
   1ca80:	ldrb	r0, [r7]
   1ca84:	cmp	r0, #58	; 0x3a
   1ca88:	bne	1cabc <main@@Base+0x9700>
   1ca8c:	ldr	r0, [sp, #44]	; 0x2c
   1ca90:	add	r1, r7, #1
   1ca94:	sub	r0, r0, r1
   1ca98:	cmp	r0, #2
   1ca9c:	blt	1cbf0 <main@@Base+0x9834>
   1caa0:	ldrb	r0, [r1]
   1caa4:	cmp	r0, #32
   1caa8:	bls	1cbe0 <main@@Base+0x9824>
   1caac:	mov	r7, r1
   1cab0:	cmp	r9, r7
   1cab4:	bne	1cc08 <main@@Base+0x984c>
   1cab8:	b	1cf5c <main@@Base+0x9ba0>
   1cabc:	ldr	r0, [sp, #40]	; 0x28
   1cac0:	ldr	r2, [sp, #44]	; 0x2c
   1cac4:	mov	r1, r7
   1cac8:	mov	r3, #4
   1cacc:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   1cad0:	b	1cbfc <main@@Base+0x9840>
   1cad4:	bne	1cae8 <main@@Base+0x972c>
   1cad8:	mov	r7, r1
   1cadc:	ldrb	r0, [r7, #1]!
   1cae0:	cmp	r0, #32
   1cae4:	bhi	1caf8 <main@@Base+0x973c>
   1cae8:	ldr	r0, [sp, #40]	; 0x28
   1caec:	ldr	r2, [sp, #44]	; 0x2c
   1caf0:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1caf4:	mov	r7, r0
   1caf8:	ldr	r0, [sp, #44]	; 0x2c
   1cafc:	cmp	r7, r0
   1cb00:	beq	1cb40 <main@@Base+0x9784>
   1cb04:	ldrb	r0, [r7]
   1cb08:	cmp	r0, #58	; 0x3a
   1cb0c:	bne	1cb40 <main@@Base+0x9784>
   1cb10:	ldr	r0, [sp, #44]	; 0x2c
   1cb14:	add	r1, r7, #1
   1cb18:	sub	r0, r0, r1
   1cb1c:	cmp	r0, #2
   1cb20:	blt	1cd64 <main@@Base+0x99a8>
   1cb24:	ldrb	r0, [r1]
   1cb28:	cmp	r0, #32
   1cb2c:	bls	1cd54 <main@@Base+0x9998>
   1cb30:	mov	r7, r1
   1cb34:	cmp	r9, r7
   1cb38:	bne	1cd7c <main@@Base+0x99c0>
   1cb3c:	b	1cf5c <main@@Base+0x9ba0>
   1cb40:	ldr	r0, [sp, #40]	; 0x28
   1cb44:	ldr	r2, [sp, #44]	; 0x2c
   1cb48:	mov	r1, r7
   1cb4c:	mov	r3, #4
   1cb50:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   1cb54:	b	1cd70 <main@@Base+0x99b4>
   1cb58:	bne	1cb6c <main@@Base+0x97b0>
   1cb5c:	mov	r1, r2
   1cb60:	ldrb	r0, [r1, #1]!
   1cb64:	cmp	r0, #32
   1cb68:	bhi	1cb80 <main@@Base+0x97c4>
   1cb6c:	mov	r1, r2
   1cb70:	ldr	r0, [sp, #40]	; 0x28
   1cb74:	ldr	r2, [sp, #44]	; 0x2c
   1cb78:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1cb7c:	mov	r1, r0
   1cb80:	ldr	r0, [sp, #44]	; 0x2c
   1cb84:	cmp	r1, r0
   1cb88:	beq	1cbc8 <main@@Base+0x980c>
   1cb8c:	ldrb	r0, [r1]
   1cb90:	cmp	r0, #58	; 0x3a
   1cb94:	bne	1cbc8 <main@@Base+0x980c>
   1cb98:	ldr	r0, [sp, #44]	; 0x2c
   1cb9c:	add	r2, r1, #1
   1cba0:	sub	r0, r0, r2
   1cba4:	cmp	r0, #2
   1cba8:	blt	1cef4 <main@@Base+0x9b38>
   1cbac:	ldrb	r0, [r2]
   1cbb0:	cmp	r0, #32
   1cbb4:	bls	1cee4 <main@@Base+0x9b28>
   1cbb8:	mov	r1, r2
   1cbbc:	cmp	r9, r1
   1cbc0:	bne	1cf10 <main@@Base+0x9b54>
   1cbc4:	b	1cf5c <main@@Base+0x9ba0>
   1cbc8:	ldr	r0, [sp, #40]	; 0x28
   1cbcc:	ldr	r2, [sp, #44]	; 0x2c
   1cbd0:	mov	r3, #4
   1cbd4:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   1cbd8:	b	1cf04 <main@@Base+0x9b48>
   1cbdc:	andeq	sl, r2, r0, lsl #10
   1cbe0:	bne	1cbf0 <main@@Base+0x9834>
   1cbe4:	ldrb	r0, [r7, #2]!
   1cbe8:	cmp	r0, #32
   1cbec:	bhi	1cc00 <main@@Base+0x9844>
   1cbf0:	ldr	r0, [sp, #40]	; 0x28
   1cbf4:	ldr	r2, [sp, #44]	; 0x2c
   1cbf8:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1cbfc:	mov	r7, r0
   1cc00:	cmp	r9, r7
   1cc04:	beq	1cf5c <main@@Base+0x9ba0>
   1cc08:	ldr	r0, [sp, #44]	; 0x2c
   1cc0c:	mov	r6, #0
   1cc10:	str	r6, [fp, #-52]	; 0xffffffcc
   1cc14:	str	r6, [fp, #-56]	; 0xffffffc8
   1cc18:	strh	r6, [fp, #-60]	; 0xffffffc4
   1cc1c:	str	r6, [sp, #56]	; 0x38
   1cc20:	cmp	r7, r0
   1cc24:	beq	1cc70 <main@@Base+0x98b4>
   1cc28:	sub	r0, fp, #56	; 0x38
   1cc2c:	ldr	r2, [sp, #44]	; 0x2c
   1cc30:	mov	r1, r7
   1cc34:	add	r3, sp, #56	; 0x38
   1cc38:	str	r0, [sp]
   1cc3c:	ldr	r0, [sp, #40]	; 0x28
   1cc40:	bl	3132c <flatcc_json_parser_integer@@Base>
   1cc44:	cmp	r0, r7
   1cc48:	beq	1cc80 <main@@Base+0x98c4>
   1cc4c:	mov	r4, r0
   1cc50:	ldr	r0, [sp, #56]	; 0x38
   1cc54:	cmp	r0, #0
   1cc58:	beq	1cc90 <main@@Base+0x98d4>
   1cc5c:	ldr	r0, [sp, #40]	; 0x28
   1cc60:	ldr	r2, [sp, #44]	; 0x2c
   1cc64:	mov	r1, r4
   1cc68:	mov	r3, #8
   1cc6c:	b	1ccb4 <main@@Base+0x98f8>
   1cc70:	ldr	r4, [sp, #44]	; 0x2c
   1cc74:	cmp	r7, r4
   1cc78:	bne	1ccfc <main@@Base+0x9940>
   1cc7c:	b	1ccc4 <main@@Base+0x9908>
   1cc80:	mov	r4, r7
   1cc84:	cmp	r7, r4
   1cc88:	bne	1ccfc <main@@Base+0x9940>
   1cc8c:	b	1ccc4 <main@@Base+0x9908>
   1cc90:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1cc94:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1cc98:	subs	r2, r0, #65536	; 0x10000
   1cc9c:	sbcs	r1, r1, #0
   1cca0:	bcc	1cd40 <main@@Base+0x9984>
   1cca4:	ldr	r0, [sp, #40]	; 0x28
   1cca8:	ldr	r2, [sp, #44]	; 0x2c
   1ccac:	mov	r1, r4
   1ccb0:	mov	r3, #7
   1ccb4:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   1ccb8:	mov	r4, r0
   1ccbc:	cmp	r7, r4
   1ccc0:	bne	1ccfc <main@@Base+0x9940>
   1ccc4:	sub	r0, fp, #60	; 0x3c
   1ccc8:	ldr	r2, [sp, #44]	; 0x2c
   1cccc:	mov	r1, r7
   1ccd0:	str	r0, [sp]
   1ccd4:	ldr	r0, [sp, #40]	; 0x28
   1ccd8:	ldr	r3, [pc, #2352]	; 1d610 <main@@Base+0xa254>
   1ccdc:	add	r3, pc, r3
   1cce0:	bl	29470 <main@@Base+0x160b4>
   1cce4:	cmp	r0, r7
   1cce8:	mov	r4, r0
   1ccec:	ldrne	r0, [sp, #44]	; 0x2c
   1ccf0:	cmpne	r4, r0
   1ccf4:	beq	1d054 <main@@Base+0x9c98>
   1ccf8:	ldrh	r6, [fp, #-60]	; 0xffffffc4
   1ccfc:	movw	r0, #65535	; 0xffff
   1cd00:	tst	r6, r0
   1cd04:	bne	1cd18 <main@@Base+0x995c>
   1cd08:	ldr	r0, [sp, #40]	; 0x28
   1cd0c:	ldrb	r0, [r0, #8]
   1cd10:	tst	r0, #2
   1cd14:	beq	1cf50 <main@@Base+0x9b94>
   1cd18:	ldr	r0, [sp, #40]	; 0x28
   1cd1c:	mov	r1, #2
   1cd20:	mov	r2, #2
   1cd24:	mov	r3, #2
   1cd28:	ldr	r0, [r0]
   1cd2c:	bl	2d0a0 <flatcc_builder_table_add@@Base>
   1cd30:	cmp	r0, #0
   1cd34:	beq	1d054 <main@@Base+0x9c98>
   1cd38:	strh	r6, [r0]
   1cd3c:	b	1cf50 <main@@Base+0x9b94>
   1cd40:	mov	r6, r0
   1cd44:	strh	r0, [fp, #-60]	; 0xffffffc4
   1cd48:	cmp	r7, r4
   1cd4c:	bne	1ccfc <main@@Base+0x9940>
   1cd50:	b	1ccc4 <main@@Base+0x9908>
   1cd54:	bne	1cd64 <main@@Base+0x99a8>
   1cd58:	ldrb	r0, [r7, #2]!
   1cd5c:	cmp	r0, #32
   1cd60:	bhi	1cd74 <main@@Base+0x99b8>
   1cd64:	ldr	r0, [sp, #40]	; 0x28
   1cd68:	ldr	r2, [sp, #44]	; 0x2c
   1cd6c:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1cd70:	mov	r7, r0
   1cd74:	cmp	r9, r7
   1cd78:	beq	1cf5c <main@@Base+0x9ba0>
   1cd7c:	ldr	r0, [sp, #44]	; 0x2c
   1cd80:	mov	r6, #0
   1cd84:	str	r6, [fp, #-52]	; 0xffffffcc
   1cd88:	str	r6, [fp, #-56]	; 0xffffffc8
   1cd8c:	str	r6, [sp, #60]	; 0x3c
   1cd90:	str	r6, [sp, #56]	; 0x38
   1cd94:	str	r6, [fp, #-60]	; 0xffffffc4
   1cd98:	cmp	r7, r0
   1cd9c:	beq	1cdf8 <main@@Base+0x9a3c>
   1cda0:	sub	r0, fp, #56	; 0x38
   1cda4:	ldr	r2, [sp, #44]	; 0x2c
   1cda8:	mov	r1, r7
   1cdac:	sub	r3, fp, #60	; 0x3c
   1cdb0:	str	r0, [sp]
   1cdb4:	ldr	r0, [sp, #40]	; 0x28
   1cdb8:	bl	3132c <flatcc_json_parser_integer@@Base>
   1cdbc:	cmp	r0, r7
   1cdc0:	beq	1ce00 <main@@Base+0x9a44>
   1cdc4:	sub	r9, fp, #60	; 0x3c
   1cdc8:	mov	r4, r0
   1cdcc:	ldm	r9, {r0, r6, r9}
   1cdd0:	cmp	r0, #0
   1cdd4:	beq	1ce18 <main@@Base+0x9a5c>
   1cdd8:	subs	r0, r6, #1
   1cddc:	sbcs	r0, r9, #-2147483648	; 0x80000000
   1cde0:	bcc	1ce4c <main@@Base+0x9a90>
   1cde4:	ldr	r0, [sp, #40]	; 0x28
   1cde8:	ldr	r2, [sp, #44]	; 0x2c
   1cdec:	mov	r1, r4
   1cdf0:	mov	r3, #8
   1cdf4:	b	1ce30 <main@@Base+0x9a74>
   1cdf8:	ldr	r4, [sp, #44]	; 0x2c
   1cdfc:	b	1ce3c <main@@Base+0x9a80>
   1ce00:	mov	r6, #0
   1ce04:	mov	r9, #0
   1ce08:	mov	r4, r7
   1ce0c:	cmp	r7, r4
   1ce10:	bne	1cea0 <main@@Base+0x9ae4>
   1ce14:	b	1ce64 <main@@Base+0x9aa8>
   1ce18:	cmn	r9, #1
   1ce1c:	bgt	1ce54 <main@@Base+0x9a98>
   1ce20:	ldr	r0, [sp, #40]	; 0x28
   1ce24:	ldr	r2, [sp, #44]	; 0x2c
   1ce28:	mov	r1, r4
   1ce2c:	mov	r3, #7
   1ce30:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   1ce34:	mov	r4, r0
   1ce38:	mov	r6, #0
   1ce3c:	mov	r9, #0
   1ce40:	cmp	r7, r4
   1ce44:	bne	1cea0 <main@@Base+0x9ae4>
   1ce48:	b	1ce64 <main@@Base+0x9aa8>
   1ce4c:	rsbs	r6, r6, #0
   1ce50:	rsc	r9, r9, #0
   1ce54:	str	r6, [sp, #56]	; 0x38
   1ce58:	str	r9, [sp, #60]	; 0x3c
   1ce5c:	cmp	r7, r4
   1ce60:	bne	1cea0 <main@@Base+0x9ae4>
   1ce64:	add	r0, sp, #56	; 0x38
   1ce68:	ldr	r2, [sp, #44]	; 0x2c
   1ce6c:	mov	r1, r7
   1ce70:	str	r0, [sp]
   1ce74:	ldr	r0, [sp, #40]	; 0x28
   1ce78:	ldr	r3, [pc, #1940]	; 1d614 <main@@Base+0xa258>
   1ce7c:	add	r3, pc, r3
   1ce80:	bl	235b8 <main@@Base+0x101fc>
   1ce84:	cmp	r0, r7
   1ce88:	mov	r4, r0
   1ce8c:	ldrne	r0, [sp, #44]	; 0x2c
   1ce90:	cmpne	r4, r0
   1ce94:	beq	1d054 <main@@Base+0x9c98>
   1ce98:	ldr	r6, [sp, #56]	; 0x38
   1ce9c:	ldr	r9, [sp, #60]	; 0x3c
   1cea0:	orrs	r0, r6, r9
   1cea4:	bne	1ceb8 <main@@Base+0x9afc>
   1cea8:	ldr	r0, [sp, #40]	; 0x28
   1ceac:	ldrb	r0, [r0, #8]
   1ceb0:	tst	r0, #2
   1ceb4:	beq	1cf50 <main@@Base+0x9b94>
   1ceb8:	ldr	r0, [sp, #40]	; 0x28
   1cebc:	mov	r1, #1
   1cec0:	mov	r2, #8
   1cec4:	mov	r3, #8
   1cec8:	ldr	r0, [r0]
   1cecc:	bl	2d0a0 <flatcc_builder_table_add@@Base>
   1ced0:	cmp	r0, #0
   1ced4:	beq	1d054 <main@@Base+0x9c98>
   1ced8:	stm	r0, {r6, r9}
   1cedc:	b	1cf50 <main@@Base+0x9b94>
   1cee0:	andeq	sl, r2, r8, asr r2
   1cee4:	bne	1cef4 <main@@Base+0x9b38>
   1cee8:	ldrb	r0, [r1, #2]!
   1ceec:	cmp	r0, #32
   1cef0:	bhi	1cf08 <main@@Base+0x9b4c>
   1cef4:	mov	r1, r2
   1cef8:	ldr	r0, [sp, #40]	; 0x28
   1cefc:	ldr	r2, [sp, #44]	; 0x2c
   1cf00:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1cf04:	mov	r1, r0
   1cf08:	cmp	r9, r1
   1cf0c:	beq	1cf5c <main@@Base+0x9ba0>
   1cf10:	ldr	r0, [sp, #40]	; 0x28
   1cf14:	ldr	r2, [sp, #44]	; 0x2c
   1cf18:	add	r3, sp, #64	; 0x40
   1cf1c:	bl	318d8 <flatcc_json_parser_build_string@@Base>
   1cf20:	mov	r4, r0
   1cf24:	ldr	r0, [sp, #64]	; 0x40
   1cf28:	cmp	r0, #0
   1cf2c:	beq	1d054 <main@@Base+0x9c98>
   1cf30:	ldr	r0, [sp, #40]	; 0x28
   1cf34:	mov	r1, #0
   1cf38:	ldr	r0, [r0]
   1cf3c:	bl	2ceec <flatcc_builder_table_add_offset@@Base>
   1cf40:	cmp	r0, #0
   1cf44:	beq	1d054 <main@@Base+0x9c98>
   1cf48:	ldr	r1, [sp, #64]	; 0x40
   1cf4c:	str	r1, [r0]
   1cf50:	ldr	r5, [sp, #44]	; 0x2c
   1cf54:	ldr	r8, [sp, #40]	; 0x28
   1cf58:	b	1cf78 <main@@Base+0x9bbc>
   1cf5c:	ldr	r8, [sp, #40]	; 0x28
   1cf60:	ldr	r5, [sp, #44]	; 0x2c
   1cf64:	mov	r1, r9
   1cf68:	mov	r0, r8
   1cf6c:	mov	r2, r5
   1cf70:	bl	2f87c <flatcc_json_parser_unmatched_symbol@@Base>
   1cf74:	mov	r4, r0
   1cf78:	sub	r0, r5, r4
   1cf7c:	cmp	r0, #2
   1cf80:	blt	1cfb4 <main@@Base+0x9bf8>
   1cf84:	ldrb	r0, [r4]
   1cf88:	cmp	r0, #32
   1cf8c:	bls	1cfa0 <main@@Base+0x9be4>
   1cf90:	mov	r2, r4
   1cf94:	cmp	r2, r5
   1cf98:	bne	1cfd0 <main@@Base+0x9c14>
   1cf9c:	b	1d358 <main@@Base+0x9f9c>
   1cfa0:	bne	1cfb4 <main@@Base+0x9bf8>
   1cfa4:	mov	r2, r4
   1cfa8:	ldrb	r0, [r2, #1]!
   1cfac:	cmp	r0, #32
   1cfb0:	bhi	1cfc8 <main@@Base+0x9c0c>
   1cfb4:	mov	r0, r8
   1cfb8:	mov	r1, r4
   1cfbc:	mov	r2, r5
   1cfc0:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1cfc4:	mov	r2, r0
   1cfc8:	cmp	r2, r5
   1cfcc:	beq	1d358 <main@@Base+0x9f9c>
   1cfd0:	ldrb	r0, [r2]
   1cfd4:	cmp	r0, #44	; 0x2c
   1cfd8:	bne	1d39c <main@@Base+0x9fe0>
   1cfdc:	add	r1, r2, #1
   1cfe0:	sub	r0, r5, r1
   1cfe4:	cmp	r0, #2
   1cfe8:	blt	1d024 <main@@Base+0x9c68>
   1cfec:	ldrb	r0, [r1]
   1cff0:	cmp	r0, #32
   1cff4:	bls	1d00c <main@@Base+0x9c50>
   1cff8:	ldr	r5, [sp, #44]	; 0x2c
   1cffc:	mov	r2, r1
   1d000:	cmp	r2, r5
   1d004:	bne	1d03c <main@@Base+0x9c80>
   1d008:	b	1d408 <main@@Base+0xa04c>
   1d00c:	ldr	r5, [sp, #44]	; 0x2c
   1d010:	ldr	r8, [sp, #40]	; 0x28
   1d014:	bne	1d024 <main@@Base+0x9c68>
   1d018:	ldrb	r0, [r2, #2]!
   1d01c:	cmp	r0, #32
   1d020:	bhi	1d034 <main@@Base+0x9c78>
   1d024:	mov	r0, r8
   1d028:	mov	r2, r5
   1d02c:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1d030:	mov	r2, r0
   1d034:	cmp	r2, r5
   1d038:	beq	1d408 <main@@Base+0xa04c>
   1d03c:	ldrb	r0, [r2]
   1d040:	cmp	r0, #125	; 0x7d
   1d044:	bne	1c76c <main@@Base+0x93b0>
   1d048:	add	r1, r2, #1
   1d04c:	sub	r0, r5, r1
   1d050:	b	1d3b0 <main@@Base+0x9ff4>
   1d054:	ldr	r5, [sp, #44]	; 0x2c
   1d058:	ldr	r8, [sp, #40]	; 0x28
   1d05c:	ldr	sl, [sp, #36]	; 0x24
   1d060:	mov	r0, r8
   1d064:	mov	r1, r4
   1d068:	mov	r2, r5
   1d06c:	mov	r3, #33	; 0x21
   1d070:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   1d074:	mov	r4, r0
   1d078:	ldr	r0, [sp, #52]	; 0x34
   1d07c:	cmp	r0, #0
   1d080:	beq	13488 <main@@Base+0xcc>
   1d084:	ldr	r0, [r8]
   1d088:	mov	r1, #14
   1d08c:	b	15ec8 <main@@Base+0x2b0c>
   1d090:	ldr	r5, [sp, #44]	; 0x2c
   1d094:	ldr	r8, [sp, #40]	; 0x28
   1d098:	ldr	sl, [sp, #36]	; 0x24
   1d09c:	bne	1d0b0 <main@@Base+0x9cf4>
   1d0a0:	ldrb	r0, [r2, #2]!
   1d0a4:	mov	r4, r2
   1d0a8:	cmp	r0, #32
   1d0ac:	bhi	1897c <main@@Base+0x55c0>
   1d0b0:	mov	r0, r8
   1d0b4:	mov	r2, r5
   1d0b8:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1d0bc:	b	18978 <main@@Base+0x55bc>
   1d0c0:	ldr	r5, [sp, #44]	; 0x2c
   1d0c4:	ldr	r8, [sp, #40]	; 0x28
   1d0c8:	ldr	sl, [sp, #36]	; 0x24
   1d0cc:	bne	1d0dc <main@@Base+0x9d20>
   1d0d0:	ldrb	r0, [r4, #2]!
   1d0d4:	cmp	r0, #32
   1d0d8:	bhi	1a344 <main@@Base+0x6f88>
   1d0dc:	mov	r0, r8
   1d0e0:	mov	r2, r5
   1d0e4:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1d0e8:	b	1a340 <main@@Base+0x6f84>
   1d0ec:	ldr	r5, [sp, #44]	; 0x2c
   1d0f0:	ldr	r8, [sp, #40]	; 0x28
   1d0f4:	ldr	sl, [sp, #36]	; 0x24
   1d0f8:	bne	1d10c <main@@Base+0x9d50>
   1d0fc:	ldrb	r0, [r4, #2]!
   1d100:	mov	r7, r4
   1d104:	cmp	r0, #32
   1d108:	bhi	18a34 <main@@Base+0x5678>
   1d10c:	mov	r0, r8
   1d110:	mov	r2, r5
   1d114:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1d118:	b	18a30 <main@@Base+0x5674>
   1d11c:	ldr	r8, [sp, #40]	; 0x28
   1d120:	ldr	r5, [sp, #44]	; 0x2c
   1d124:	mov	r1, r2
   1d128:	mov	r0, r8
   1d12c:	mov	r2, r5
   1d130:	mov	r3, #10
   1d134:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   1d138:	ldr	sl, [sp, #36]	; 0x24
   1d13c:	b	18888 <main@@Base+0x54cc>
   1d140:	ldr	r8, [sp, #40]	; 0x28
   1d144:	ldr	r5, [sp, #44]	; 0x2c
   1d148:	mov	r1, r2
   1d14c:	mov	r0, r8
   1d150:	mov	r2, r5
   1d154:	mov	r3, #9
   1d158:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   1d15c:	ldr	sl, [sp, #36]	; 0x24
   1d160:	b	19d4c <main@@Base+0x6990>
   1d164:	ldr	r0, [sp, #40]	; 0x28
   1d168:	ldr	r2, [sp, #44]	; 0x2c
   1d16c:	mov	r1, r4
   1d170:	mov	r3, #9
   1d174:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   1d178:	b	1d334 <main@@Base+0x9f78>
   1d17c:	ldr	r6, [fp, #-56]	; 0xffffffc8
   1d180:	mov	r4, r1
   1d184:	str	r6, [fp, #-60]	; 0xffffffc4
   1d188:	cmp	r7, r4
   1d18c:	bne	1c1d8 <main@@Base+0x8e1c>
   1d190:	b	1c1a0 <main@@Base+0x8de4>
   1d194:	ldr	r8, [sp, #40]	; 0x28
   1d198:	ldr	r5, [sp, #44]	; 0x2c
   1d19c:	mov	r1, r2
   1d1a0:	mov	r0, r8
   1d1a4:	mov	r2, r5
   1d1a8:	mov	r3, #9
   1d1ac:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   1d1b0:	ldr	sl, [sp, #36]	; 0x24
   1d1b4:	b	1a0a0 <main@@Base+0x6ce4>
   1d1b8:	andeq	r9, r2, r4, lsr #31
   1d1bc:	ldr	r9, [sp, #44]	; 0x2c
   1d1c0:	ldr	r8, [sp, #40]	; 0x28
   1d1c4:	b	1b870 <main@@Base+0x84b4>
   1d1c8:	cmp	r0, #93	; 0x5d
   1d1cc:	bne	1d444 <main@@Base+0xa088>
   1d1d0:	ldr	r0, [sp, #44]	; 0x2c
   1d1d4:	add	r1, r9, #1
   1d1d8:	sub	r0, r0, r1
   1d1dc:	cmp	r0, #2
   1d1e0:	blt	1d4f0 <main@@Base+0xa134>
   1d1e4:	ldrb	r0, [r1]
   1d1e8:	cmp	r0, #32
   1d1ec:	bls	1d4e0 <main@@Base+0xa124>
   1d1f0:	ldr	r8, [sp, #40]	; 0x28
   1d1f4:	mov	r9, r1
   1d1f8:	b	1b870 <main@@Base+0x84b4>
   1d1fc:	ldr	r1, [sp, #44]	; 0x2c
   1d200:	ldr	r0, [sp, #40]	; 0x28
   1d204:	mov	r2, r1
   1d208:	b	1d450 <main@@Base+0xa094>
   1d20c:	ldr	r8, [sp, #40]	; 0x28
   1d210:	ldr	r5, [sp, #44]	; 0x2c
   1d214:	mov	r1, r3
   1d218:	mov	r0, r8
   1d21c:	mov	r2, r5
   1d220:	mov	r3, #10
   1d224:	b	18f50 <main@@Base+0x5b94>
   1d228:	ldr	r4, [sp, #44]	; 0x2c
   1d22c:	b	1d474 <main@@Base+0xa0b8>
   1d230:	cmp	r0, #93	; 0x5d
   1d234:	bne	1d45c <main@@Base+0xa0a0>
   1d238:	ldr	r0, [sp, #44]	; 0x2c
   1d23c:	add	r1, r4, #1
   1d240:	sub	r0, r0, r1
   1d244:	cmp	r0, #2
   1d248:	blt	1d2b0 <main@@Base+0x9ef4>
   1d24c:	ldrb	r0, [r1]
   1d250:	cmp	r0, #32
   1d254:	bls	1d2a0 <main@@Base+0x9ee4>
   1d258:	mov	r4, r1
   1d25c:	b	1d474 <main@@Base+0xa0b8>
   1d260:	ldr	r5, [sp, #44]	; 0x2c
   1d264:	ldr	r8, [sp, #40]	; 0x28
   1d268:	ldr	sl, [sp, #36]	; 0x24
   1d26c:	bne	1d280 <main@@Base+0x9ec4>
   1d270:	ldrb	r0, [r2, #2]!
   1d274:	mov	r4, r2
   1d278:	cmp	r0, #32
   1d27c:	bhi	1888c <main@@Base+0x54d0>
   1d280:	mov	r0, r8
   1d284:	mov	r2, r5
   1d288:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1d28c:	b	18888 <main@@Base+0x54cc>
   1d290:	ldr	r1, [sp, #44]	; 0x2c
   1d294:	ldr	r0, [sp, #40]	; 0x28
   1d298:	mov	r2, r1
   1d29c:	b	1d468 <main@@Base+0xa0ac>
   1d2a0:	bne	1d2b0 <main@@Base+0x9ef4>
   1d2a4:	ldrb	r0, [r4, #2]!
   1d2a8:	cmp	r0, #32
   1d2ac:	bhi	1d474 <main@@Base+0xa0b8>
   1d2b0:	ldr	r0, [sp, #40]	; 0x28
   1d2b4:	ldr	r2, [sp, #44]	; 0x2c
   1d2b8:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1d2bc:	b	1d470 <main@@Base+0xa0b4>
   1d2c0:	mov	r4, r5
   1d2c4:	b	1d4b8 <main@@Base+0xa0fc>
   1d2c8:	ldr	r5, [sp, #44]	; 0x2c
   1d2cc:	ldr	r8, [sp, #40]	; 0x28
   1d2d0:	ldr	sl, [sp, #36]	; 0x24
   1d2d4:	bne	1d2e8 <main@@Base+0x9f2c>
   1d2d8:	ldrb	r0, [r2, #2]!
   1d2dc:	mov	r4, r2
   1d2e0:	cmp	r0, #32
   1d2e4:	bhi	19d50 <main@@Base+0x6994>
   1d2e8:	mov	r0, r8
   1d2ec:	mov	r2, r5
   1d2f0:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1d2f4:	b	19d4c <main@@Base+0x6990>
   1d2f8:	cmp	r0, #93	; 0x5d
   1d2fc:	bne	1d4a0 <main@@Base+0xa0e4>
   1d300:	ldr	r0, [sp, #44]	; 0x2c
   1d304:	add	r1, r4, #1
   1d308:	sub	r0, r0, r1
   1d30c:	cmp	r0, #2
   1d310:	blt	1d38c <main@@Base+0x9fd0>
   1d314:	b	1d370 <main@@Base+0x9fb4>
   1d318:	bne	1d328 <main@@Base+0x9f6c>
   1d31c:	ldrb	r0, [r4, #2]!
   1d320:	cmp	r0, #32
   1d324:	bhi	1d338 <main@@Base+0x9f7c>
   1d328:	ldr	r0, [sp, #40]	; 0x28
   1d32c:	ldr	r2, [sp, #44]	; 0x2c
   1d330:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1d334:	mov	r4, r0
   1d338:	ldr	r5, [sp, #44]	; 0x2c
   1d33c:	ldr	r8, [sp, #40]	; 0x28
   1d340:	ldr	sl, [sp, #36]	; 0x24
   1d344:	b	1a248 <main@@Base+0x6e8c>
   1d348:	mov	r0, r8
   1d34c:	mov	r1, r5
   1d350:	mov	r2, r5
   1d354:	b	1d4ac <main@@Base+0xa0f0>
   1d358:	mov	r4, r5
   1d35c:	b	1a164 <main@@Base+0x6da8>
   1d360:	add	r1, r4, #1
   1d364:	sub	r0, r5, r1
   1d368:	cmp	r0, #2
   1d36c:	blt	1d38c <main@@Base+0x9fd0>
   1d370:	ldrb	r0, [r1]
   1d374:	cmp	r0, #32
   1d378:	bhi	1b558 <main@@Base+0x819c>
   1d37c:	bne	1d38c <main@@Base+0x9fd0>
   1d380:	ldrb	r0, [r4, #2]!
   1d384:	cmp	r0, #32
   1d388:	bhi	1d4b8 <main@@Base+0xa0fc>
   1d38c:	ldr	r0, [sp, #40]	; 0x28
   1d390:	ldr	r2, [sp, #44]	; 0x2c
   1d394:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1d398:	b	1d4b4 <main@@Base+0xa0f8>
   1d39c:	cmp	r0, #125	; 0x7d
   1d3a0:	bne	1d4c8 <main@@Base+0xa10c>
   1d3a4:	ldr	r0, [sp, #44]	; 0x2c
   1d3a8:	add	r1, r2, #1
   1d3ac:	sub	r0, r0, r1
   1d3b0:	ldr	r8, [sp, #40]	; 0x28
   1d3b4:	cmp	r0, #2
   1d3b8:	blt	1d520 <main@@Base+0xa164>
   1d3bc:	ldrb	r0, [r1]
   1d3c0:	cmp	r0, #32
   1d3c4:	bls	1d508 <main@@Base+0xa14c>
   1d3c8:	ldr	r8, [sp, #40]	; 0x28
   1d3cc:	mov	r4, r1
   1d3d0:	b	1a164 <main@@Base+0x6da8>
   1d3d4:	andeq	r9, r2, r8, ror sp
   1d3d8:	ldr	r5, [sp, #44]	; 0x2c
   1d3dc:	ldr	r8, [sp, #40]	; 0x28
   1d3e0:	ldr	sl, [sp, #36]	; 0x24
   1d3e4:	bne	1d3f8 <main@@Base+0xa03c>
   1d3e8:	ldrb	r0, [r2, #2]!
   1d3ec:	mov	r4, r2
   1d3f0:	cmp	r0, #32
   1d3f4:	bhi	1a0a4 <main@@Base+0x6ce8>
   1d3f8:	mov	r0, r8
   1d3fc:	mov	r2, r5
   1d400:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1d404:	b	1a0a0 <main@@Base+0x6ce4>
   1d408:	ldr	r8, [sp, #40]	; 0x28
   1d40c:	mov	r1, r5
   1d410:	mov	r2, r5
   1d414:	b	1d4d4 <main@@Base+0xa118>
   1d418:	ldr	r5, [sp, #44]	; 0x2c
   1d41c:	ldr	r8, [sp, #40]	; 0x28
   1d420:	bne	1d434 <main@@Base+0xa078>
   1d424:	ldrb	r0, [r3, #2]!
   1d428:	mov	r4, r3
   1d42c:	cmp	r0, #32
   1d430:	bhi	18f58 <main@@Base+0x5b9c>
   1d434:	mov	r0, r8
   1d438:	mov	r2, r5
   1d43c:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1d440:	b	18f54 <main@@Base+0x5b98>
   1d444:	ldr	r0, [sp, #40]	; 0x28
   1d448:	ldr	r2, [sp, #44]	; 0x2c
   1d44c:	mov	r1, r9
   1d450:	mov	r3, #9
   1d454:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   1d458:	b	1d4fc <main@@Base+0xa140>
   1d45c:	ldr	r0, [sp, #40]	; 0x28
   1d460:	ldr	r2, [sp, #44]	; 0x2c
   1d464:	mov	r1, r4
   1d468:	mov	r3, #9
   1d46c:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   1d470:	mov	r4, r0
   1d474:	ldr	r8, [sp, #40]	; 0x28
   1d478:	ldr	r0, [r8]
   1d47c:	bl	2c96c <flatcc_builder_end_vector@@Base>
   1d480:	ldr	r5, [sp, #44]	; 0x2c
   1d484:	ldr	sl, [sp, #36]	; 0x24
   1d488:	cmp	r0, #0
   1d48c:	str	r0, [sp, #52]	; 0x34
   1d490:	beq	13488 <main@@Base+0xcc>
   1d494:	ldr	r0, [r8]
   1d498:	mov	r1, #13
   1d49c:	b	15ec8 <main@@Base+0x2b0c>
   1d4a0:	ldr	r0, [sp, #40]	; 0x28
   1d4a4:	ldr	r2, [sp, #44]	; 0x2c
   1d4a8:	mov	r1, r4
   1d4ac:	mov	r3, #9
   1d4b0:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   1d4b4:	mov	r4, r0
   1d4b8:	ldr	r5, [sp, #44]	; 0x2c
   1d4bc:	ldr	r8, [sp, #40]	; 0x28
   1d4c0:	ldr	sl, [sp, #36]	; 0x24
   1d4c4:	b	1a344 <main@@Base+0x6f88>
   1d4c8:	ldr	r8, [sp, #40]	; 0x28
   1d4cc:	mov	r1, r2
   1d4d0:	ldr	r2, [sp, #44]	; 0x2c
   1d4d4:	mov	r0, r8
   1d4d8:	mov	r3, #10
   1d4dc:	b	1a15c <main@@Base+0x6da0>
   1d4e0:	bne	1d4f0 <main@@Base+0xa134>
   1d4e4:	ldrb	r0, [r9, #2]!
   1d4e8:	cmp	r0, #32
   1d4ec:	bhi	1d500 <main@@Base+0xa144>
   1d4f0:	ldr	r0, [sp, #40]	; 0x28
   1d4f4:	ldr	r2, [sp, #44]	; 0x2c
   1d4f8:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1d4fc:	mov	r9, r0
   1d500:	ldr	r8, [sp, #40]	; 0x28
   1d504:	b	1b870 <main@@Base+0x84b4>
   1d508:	ldr	r8, [sp, #40]	; 0x28
   1d50c:	bne	1d520 <main@@Base+0xa164>
   1d510:	ldrb	r0, [r2, #2]!
   1d514:	mov	r4, r2
   1d518:	cmp	r0, #32
   1d51c:	bhi	1a164 <main@@Base+0x6da8>
   1d520:	ldr	r2, [sp, #44]	; 0x2c
   1d524:	mov	r0, r8
   1d528:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1d52c:	b	1a160 <main@@Base+0x6da4>
   1d530:	mov	r4, r5
   1d534:	b	13528 <main@@Base+0x16c>
   1d538:	cmp	r0, #125	; 0x7d
   1d53c:	bne	1d570 <main@@Base+0xa1b4>
   1d540:	add	r1, r2, #1
   1d544:	sub	r0, r5, r1
   1d548:	cmp	r0, #2
   1d54c:	blt	1d598 <main@@Base+0xa1dc>
   1d550:	ldrb	r0, [r1]
   1d554:	cmp	r0, #32
   1d558:	bls	1d584 <main@@Base+0xa1c8>
   1d55c:	mov	r4, r1
   1d560:	b	13528 <main@@Base+0x16c>
   1d564:	mov	r0, r8
   1d568:	mov	r1, r5
   1d56c:	b	1d578 <main@@Base+0xa1bc>
   1d570:	mov	r0, r8
   1d574:	mov	r1, r2
   1d578:	mov	r2, r5
   1d57c:	mov	r3, #10
   1d580:	b	13520 <main@@Base+0x164>
   1d584:	bne	1d598 <main@@Base+0xa1dc>
   1d588:	ldrb	r0, [r2, #2]!
   1d58c:	mov	r4, r2
   1d590:	cmp	r0, #32
   1d594:	bhi	13528 <main@@Base+0x16c>
   1d598:	mov	r0, r8
   1d59c:	mov	r2, r5
   1d5a0:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1d5a4:	b	13524 <main@@Base+0x168>
   1d5a8:	ldrdeq	r9, [r2], -r8
   1d5ac:	mov	r4, r7
   1d5b0:	b	13488 <main@@Base+0xcc>
   1d5b4:	mov	r4, r6
   1d5b8:	b	13488 <main@@Base+0xcc>
   1d5bc:	ldr	r8, [sp, #40]	; 0x28
   1d5c0:	mov	r4, r1
   1d5c4:	b	13488 <main@@Base+0xcc>
   1d5c8:	ldr	r5, [sp, #44]	; 0x2c
   1d5cc:	mov	r4, r9
   1d5d0:	b	13488 <main@@Base+0xcc>
   1d5d4:	ldr	r8, [sp, #40]	; 0x28
   1d5d8:	mov	r4, r9
   1d5dc:	b	13488 <main@@Base+0xcc>
   1d5e0:	mov	r4, r5
   1d5e4:	b	1d604 <main@@Base+0xa248>
   1d5e8:	ldr	r5, [sp, #44]	; 0x2c
   1d5ec:	ldr	r8, [sp, #40]	; 0x28
   1d5f0:	mov	r4, r7
   1d5f4:	b	13488 <main@@Base+0xcc>
   1d5f8:	mov	r4, r1
   1d5fc:	b	1d604 <main@@Base+0xa248>
   1d600:	mov	r4, r6
   1d604:	ldr	r5, [sp, #44]	; 0x2c
   1d608:	ldr	r8, [sp, #40]	; 0x28
   1d60c:	b	13488 <main@@Base+0xcc>
   1d610:	andeq	r9, r2, ip, ror #12
   1d614:	ldrdeq	r9, [r2], -r8
   1d618:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d61c:	add	fp, sp, #28
   1d620:	sub	sp, sp, #12
   1d624:	mov	r5, r1
   1d628:	sub	r1, r2, r1
   1d62c:	cmp	r1, #8
   1d630:	movcs	r1, #8
   1d634:	sub	r1, r1, #1
   1d638:	cmp	r1, #7
   1d63c:	bhi	1d7b0 <main@@Base+0xa3f4>
   1d640:	str	r3, [sp, #8]
   1d644:	add	r4, pc, #36	; 0x24
   1d648:	mov	r9, #0
   1d64c:	mov	ip, #0
   1d650:	mov	lr, #0
   1d654:	mov	sl, #0
   1d658:	mov	r6, #0
   1d65c:	mov	r7, #0
   1d660:	mov	r3, #0
   1d664:	ldr	r8, [r4, r1, lsl #2]
   1d668:	mov	r1, #0
   1d66c:	add	pc, r4, r8
   1d670:	andeq	r0, r0, r4, rrx
   1d674:	andeq	r0, r0, ip, asr r0
   1d678:	andeq	r0, r0, r4, asr r0
   1d67c:	andeq	r0, r0, ip, asr #32
   1d680:	andeq	r0, r0, r0, asr #32
   1d684:	andeq	r0, r0, r4, lsr r0
   1d688:	andeq	r0, r0, r4, lsr #32
   1d68c:	andeq	r0, r0, r0, lsr #32
   1d690:	ldrb	ip, [r5, #7]
   1d694:	ldrb	r1, [r5, #6]
   1d698:	mov	lr, r9
   1d69c:	orr	r1, ip, r1, lsl #8
   1d6a0:	mov	r9, r1
   1d6a4:	ldrb	r1, [r5, #5]
   1d6a8:	mov	sl, lr
   1d6ac:	orr	r9, r9, r1, lsl #16
   1d6b0:	ldrb	r1, [r5, #4]
   1d6b4:	mov	r6, sl
   1d6b8:	orr	r9, r9, r1, lsl #24
   1d6bc:	ldrb	r1, [r5, #3]
   1d6c0:	orr	r7, r1, r6
   1d6c4:	ldrb	r1, [r5, #2]
   1d6c8:	orr	r3, r7, r1, lsl #8
   1d6cc:	ldrb	r1, [r5, #1]
   1d6d0:	orr	r1, r3, r1, lsl #16
   1d6d4:	ldrb	r7, [r5]
   1d6d8:	ldr	r3, [fp, #12]
   1d6dc:	ldr	r8, [fp, #8]
   1d6e0:	orr	r4, r1, r7, lsl #24
   1d6e4:	movw	r7, #25957	; 0x6565
   1d6e8:	mvn	r1, #-1845493760	; 0x92000000
   1d6ec:	movt	r7, #18290	; 0x4772
   1d6f0:	subs	r1, r1, r9
   1d6f4:	sbcs	r1, r7, r4
   1d6f8:	bcc	1d730 <main@@Base+0xa374>
   1d6fc:	movw	r1, #30053	; 0x7565
   1d700:	movt	r1, #17004	; 0x426c
   1d704:	teq	r4, r1
   1d708:	bne	1d7b0 <main@@Base+0xa3f4>
   1d70c:	str	r3, [sp]
   1d710:	mov	r1, r5
   1d714:	mov	r3, #4
   1d718:	bl	2f6a4 <flatcc_json_parser_match_constant@@Base>
   1d71c:	cmp	r0, r5
   1d720:	beq	1d7b0 <main@@Base+0xa3f4>
   1d724:	mov	r1, #0
   1d728:	mov	r2, #8
   1d72c:	b	1d79c <main@@Base+0xa3e0>
   1d730:	movw	r6, #25600	; 0x6400
   1d734:	bic	r1, r4, #255	; 0xff
   1d738:	movt	r6, #21093	; 0x5265
   1d73c:	teq	r1, r6
   1d740:	bne	1d768 <main@@Base+0xa3ac>
   1d744:	str	r3, [sp]
   1d748:	mov	r1, r5
   1d74c:	mov	r3, #3
   1d750:	bl	2f6a4 <flatcc_json_parser_match_constant@@Base>
   1d754:	cmp	r0, r5
   1d758:	beq	1d7b0 <main@@Base+0xa3f4>
   1d75c:	mov	r1, #0
   1d760:	mov	r2, #1
   1d764:	b	1d79c <main@@Base+0xa3e0>
   1d768:	eor	r1, r4, r7
   1d76c:	and	r7, r9, #-16777216	; 0xff000000
   1d770:	eor	r7, r7, #1845493760	; 0x6e000000
   1d774:	orrs	r1, r7, r1
   1d778:	bne	1d7b0 <main@@Base+0xa3f4>
   1d77c:	str	r3, [sp]
   1d780:	mov	r1, r5
   1d784:	mov	r3, #5
   1d788:	bl	2f6a4 <flatcc_json_parser_match_constant@@Base>
   1d78c:	cmp	r0, r5
   1d790:	beq	1d7b0 <main@@Base+0xa3f4>
   1d794:	mov	r1, #0
   1d798:	mov	r2, #2
   1d79c:	str	r2, [r8]
   1d7a0:	str	r1, [r8, #4]
   1d7a4:	mov	r5, r0
   1d7a8:	ldr	r2, [sp, #8]
   1d7ac:	str	r1, [r2]
   1d7b0:	mov	r0, r5
   1d7b4:	sub	sp, fp, #28
   1d7b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d7bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d7c0:	add	fp, sp, #28
   1d7c4:	sub	sp, sp, #20
   1d7c8:	sub	sl, r2, r1
   1d7cc:	cmp	sl, #8
   1d7d0:	mov	r7, sl
   1d7d4:	movcs	r7, #8
   1d7d8:	sub	r7, r7, #1
   1d7dc:	cmp	r7, #7
   1d7e0:	bhi	1dbe4 <main@@Base+0xa828>
   1d7e4:	str	r0, [sp, #16]
   1d7e8:	str	r3, [sp, #12]
   1d7ec:	mov	r4, #0
   1d7f0:	mov	lr, #0
   1d7f4:	mov	r6, #0
   1d7f8:	mov	r3, #0
   1d7fc:	mov	r5, #0
   1d800:	mov	r8, #0
   1d804:	mov	r9, #0
   1d808:	ldr	r0, [fp, #12]
   1d80c:	str	r0, [sp, #8]
   1d810:	ldr	r0, [fp, #8]
   1d814:	str	r0, [sp, #4]
   1d818:	add	ip, pc, #8
   1d81c:	ldr	r0, [ip, r7, lsl #2]
   1d820:	mov	r7, #0
   1d824:	add	pc, ip, r0
   1d828:	andeq	r0, r0, r4, rrx
   1d82c:	andeq	r0, r0, ip, asr r0
   1d830:	andeq	r0, r0, r4, asr r0
   1d834:	andeq	r0, r0, ip, asr #32
   1d838:	andeq	r0, r0, r0, asr #32
   1d83c:	andeq	r0, r0, r4, lsr r0
   1d840:	andeq	r0, r0, r4, lsr #32
   1d844:	andeq	r0, r0, r0, lsr #32
   1d848:	ldrb	lr, [r1, #7]
   1d84c:	ldrb	r0, [r1, #6]
   1d850:	mov	r7, r4
   1d854:	orr	r0, lr, r0, lsl #8
   1d858:	mov	r4, r0
   1d85c:	ldrb	r0, [r1, #5]
   1d860:	mov	r6, r7
   1d864:	orr	r4, r4, r0, lsl #16
   1d868:	ldrb	r0, [r1, #4]
   1d86c:	mov	r3, r6
   1d870:	orr	r4, r4, r0, lsl #24
   1d874:	ldrb	r0, [r1, #3]
   1d878:	orr	r5, r0, r3
   1d87c:	ldrb	r0, [r1, #2]
   1d880:	orr	r8, r5, r0, lsl #8
   1d884:	ldrb	r0, [r1, #1]
   1d888:	orr	r9, r8, r0, lsl #16
   1d88c:	ldrb	r0, [r1]
   1d890:	movw	lr, #30061	; 0x756d
   1d894:	movw	r3, #30815	; 0x785f
   1d898:	movt	lr, #25966	; 0x656e
   1d89c:	movt	r3, #26725	; 0x6865
   1d8a0:	orr	r6, r9, r0, lsl #24
   1d8a4:	subs	r0, r4, lr
   1d8a8:	sbcs	r0, r6, r3
   1d8ac:	bcs	1d914 <main@@Base+0xa558>
   1d8b0:	movw	r3, #27759	; 0x6c6f
   1d8b4:	mvn	r0, #-1912602624	; 0x8e000000
   1d8b8:	bic	r7, r6, #255	; 0xff
   1d8bc:	movt	r3, #17263	; 0x436f
   1d8c0:	subs	r0, r0, r4
   1d8c4:	sbcs	r0, r3, r6
   1d8c8:	bcc	1d970 <main@@Base+0xa5b4>
   1d8cc:	cmp	sl, #4
   1d8d0:	blt	1dbe4 <main@@Base+0xa828>
   1d8d4:	movw	r0, #30976	; 0x7900
   1d8d8:	movt	r0, #16750	; 0x416e
   1d8dc:	teq	r7, r0
   1d8e0:	bne	1dbe4 <main@@Base+0xa828>
   1d8e4:	ldrb	r0, [r1, #3]
   1d8e8:	mov	r3, r1
   1d8ec:	cmp	r0, #46	; 0x2e
   1d8f0:	addeq	r3, r3, #4
   1d8f4:	cmp	r3, r1
   1d8f8:	beq	1dbe4 <main@@Base+0xa828>
   1d8fc:	mov	r1, r3
   1d900:	ldr	r0, [sp, #16]
   1d904:	ldr	r3, [sp, #12]
   1d908:	sub	sp, fp, #28
   1d90c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d910:	b	22b44 <main@@Base+0xf788>
   1d914:	add	r0, r3, #64512	; 0xfc00
   1d918:	add	r7, r0, #17301504	; 0x1080000
   1d91c:	subs	r0, r4, lr
   1d920:	sbcs	r0, r6, r7
   1d924:	bcs	1d9b8 <main@@Base+0xa5fc>
   1d928:	cmp	sl, #9
   1d92c:	blt	1dbe4 <main@@Base+0xa828>
   1d930:	eor	r0, r4, lr
   1d934:	eor	r3, r6, r3
   1d938:	orrs	r0, r0, r3
   1d93c:	bne	1dbe4 <main@@Base+0xa828>
   1d940:	ldrb	r0, [r1, #8]
   1d944:	mov	r3, r1
   1d948:	cmp	r0, #46	; 0x2e
   1d94c:	addeq	r3, r3, #9
   1d950:	cmp	r3, r1
   1d954:	beq	1dbe4 <main@@Base+0xa828>
   1d958:	mov	r1, r3
   1d95c:	ldr	r0, [sp, #16]
   1d960:	ldr	r3, [sp, #12]
   1d964:	sub	sp, fp, #28
   1d968:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d96c:	b	240c8 <main@@Base+0x10d0c>
   1d970:	movw	r0, #28416	; 0x6f00
   1d974:	movt	r0, #18031	; 0x466f
   1d978:	teq	r7, r0
   1d97c:	bne	1da14 <main@@Base+0xa658>
   1d980:	cmp	sl, #4
   1d984:	blt	1dbe4 <main@@Base+0xa828>
   1d988:	ldrb	r0, [r1, #3]
   1d98c:	mov	r3, r1
   1d990:	cmp	r0, #46	; 0x2e
   1d994:	addeq	r3, r3, #4
   1d998:	cmp	r3, r1
   1d99c:	beq	1dbe4 <main@@Base+0xa828>
   1d9a0:	mov	r1, r3
   1d9a4:	ldr	r0, [sp, #16]
   1d9a8:	ldr	r3, [sp, #12]
   1d9ac:	sub	sp, fp, #28
   1d9b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d9b4:	b	23e60 <main@@Base+0x10aa4>
   1d9b8:	sub	r0, r3, #4352	; 0x1100
   1d9bc:	subs	r3, r4, lr
   1d9c0:	sub	r0, r0, #-100663296	; 0xfa000000
   1d9c4:	sbcs	r0, r6, r0
   1d9c8:	bcs	1da60 <main@@Base+0xa6a4>
   1d9cc:	cmp	sl, #9
   1d9d0:	blt	1dbe4 <main@@Base+0xa828>
   1d9d4:	eor	r0, r4, lr
   1d9d8:	eor	r3, r6, r7
   1d9dc:	orrs	r0, r0, r3
   1d9e0:	bne	1dbe4 <main@@Base+0xa828>
   1d9e4:	ldrb	r0, [r1, #8]
   1d9e8:	mov	r3, r1
   1d9ec:	cmp	r0, #46	; 0x2e
   1d9f0:	addeq	r3, r3, #9
   1d9f4:	cmp	r3, r1
   1d9f8:	beq	1dbe4 <main@@Base+0xa828>
   1d9fc:	mov	r1, r3
   1da00:	ldr	r0, [sp, #16]
   1da04:	ldr	r3, [sp, #12]
   1da08:	sub	sp, fp, #28
   1da0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1da10:	b	24278 <main@@Base+0x10ebc>
   1da14:	cmp	sl, #6
   1da18:	blt	1dbe4 <main@@Base+0xa828>
   1da1c:	and	r0, r4, #-16777216	; 0xff000000
   1da20:	eor	r3, r6, r3
   1da24:	eor	r0, r0, #1912602624	; 0x72000000
   1da28:	orrs	r0, r0, r3
   1da2c:	bne	1dbe4 <main@@Base+0xa828>
   1da30:	ldrb	r0, [r1, #5]
   1da34:	mov	r3, r1
   1da38:	cmp	r0, #46	; 0x2e
   1da3c:	addeq	r3, r3, #6
   1da40:	cmp	r3, r1
   1da44:	beq	1dbe4 <main@@Base+0xa828>
   1da48:	mov	r1, r3
   1da4c:	ldr	r0, [sp, #16]
   1da50:	ldr	r3, [sp, #12]
   1da54:	sub	sp, fp, #28
   1da58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1da5c:	b	1d618 <main@@Base+0xa25c>
   1da60:	movw	r0, #29817	; 0x7479
   1da64:	movw	r3, #29797	; 0x7465
   1da68:	movt	r0, #28016	; 0x6d70
   1da6c:	movt	r3, #28271	; 0x6e6f
   1da70:	eor	r0, r4, r0
   1da74:	eor	r3, r6, r3
   1da78:	orrs	r0, r0, r3
   1da7c:	beq	1dad0 <main@@Base+0xa714>
   1da80:	movw	r3, #26463	; 0x675f
   1da84:	eor	r0, r4, lr
   1da88:	movt	r3, #28261	; 0x6e65
   1da8c:	eor	r3, r6, r3
   1da90:	orrs	r0, r0, r3
   1da94:	bne	1dbe4 <main@@Base+0xa828>
   1da98:	cmp	sl, #9
   1da9c:	blt	1dbe4 <main@@Base+0xa828>
   1daa0:	ldrb	r0, [r1, #8]
   1daa4:	mov	r3, r1
   1daa8:	cmp	r0, #46	; 0x2e
   1daac:	addeq	r3, r3, #9
   1dab0:	cmp	r3, r1
   1dab4:	beq	1dbe4 <main@@Base+0xa828>
   1dab8:	mov	r1, r3
   1dabc:	ldr	r0, [sp, #16]
   1dac0:	ldr	r3, [sp, #12]
   1dac4:	sub	sp, fp, #28
   1dac8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1dacc:	b	2446c <main@@Base+0x110b0>
   1dad0:	add	ip, r1, #8
   1dad4:	sub	r5, r2, ip
   1dad8:	cmp	r5, #8
   1dadc:	mov	r0, r5
   1dae0:	movcs	r0, #8
   1dae4:	sub	r3, r0, #1
   1dae8:	cmp	r3, #7
   1daec:	bhi	1dbe4 <main@@Base+0xa828>
   1daf0:	add	r0, pc, #20
   1daf4:	mov	r8, #0
   1daf8:	mov	r4, #0
   1dafc:	mov	r7, #0
   1db00:	ldr	r6, [r0, r3, lsl #2]
   1db04:	mov	r3, #0
   1db08:	add	pc, r0, r6
   1db0c:	andeq	r0, r0, r8, lsr r0
   1db10:	andeq	r0, r0, r0, lsr r0
   1db14:	andeq	r0, r0, r8, lsr #32
   1db18:	andeq	r0, r0, r0, lsr #32
   1db1c:	andeq	r0, r0, r0, lsr #32
   1db20:	andeq	r0, r0, r0, lsr #32
   1db24:	andeq	r0, r0, r0, lsr #32
   1db28:	andeq	r0, r0, r0, lsr #32
   1db2c:	ldrb	r3, [r1, #11]
   1db30:	mov	r8, #0
   1db34:	ldrb	r0, [r1, #10]
   1db38:	orr	r4, r3, r0, lsl #8
   1db3c:	ldrb	r0, [r1, #9]
   1db40:	orr	r7, r4, r0, lsl #16
   1db44:	cmp	r5, #5
   1db48:	blt	1dbe4 <main@@Base+0xa828>
   1db4c:	ldrb	r0, [ip]
   1db50:	orr	r0, r7, r0, lsl #24
   1db54:	eor	r0, r0, lr
   1db58:	orrs	r0, r8, r0
   1db5c:	bne	1dbe4 <main@@Base+0xa828>
   1db60:	ldrb	r0, [r1, #12]
   1db64:	mov	r5, ip
   1db68:	cmp	r0, #46	; 0x2e
   1db6c:	addeq	r5, r1, #13
   1db70:	cmp	r5, ip
   1db74:	beq	1dbe4 <main@@Base+0xa828>
   1db78:	sub	r0, r2, r5
   1db7c:	cmp	r0, #8
   1db80:	movcs	r0, #8
   1db84:	sub	r0, r0, #1
   1db88:	cmp	r0, #7
   1db8c:	bhi	1dbe0 <main@@Base+0xa824>
   1db90:	ldrb	r0, [r5]
   1db94:	cmp	r0, #120	; 0x78
   1db98:	bne	1dbe0 <main@@Base+0xa824>
   1db9c:	ldr	r0, [sp, #8]
   1dba0:	mov	r1, r5
   1dba4:	mov	r3, #1
   1dba8:	str	r0, [sp]
   1dbac:	ldr	r0, [sp, #16]
   1dbb0:	bl	2f6a4 <flatcc_json_parser_match_constant@@Base>
   1dbb4:	cmp	r0, r5
   1dbb8:	mov	r1, r5
   1dbbc:	beq	1dbe4 <main@@Base+0xa828>
   1dbc0:	ldr	r2, [sp, #4]
   1dbc4:	mov	r1, #0
   1dbc8:	str	r1, [r2]
   1dbcc:	str	r1, [r2, #4]
   1dbd0:	ldr	r2, [sp, #12]
   1dbd4:	str	r1, [r2]
   1dbd8:	mov	r1, r0
   1dbdc:	b	1dbe4 <main@@Base+0xa828>
   1dbe0:	mov	r1, r5
   1dbe4:	mov	r0, r1
   1dbe8:	sub	sp, fp, #28
   1dbec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1dbf0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1dbf4:	add	fp, sp, #28
   1dbf8:	sub	sp, sp, #28
   1dbfc:	mov	r8, r2
   1dc00:	sub	r2, r2, r1
   1dc04:	cmp	r2, #8
   1dc08:	movcs	r2, #8
   1dc0c:	sub	r2, r2, #1
   1dc10:	cmp	r2, #7
   1dc14:	bhi	1eac0 <main@@Base+0xb704>
   1dc18:	str	r0, [sp, #24]
   1dc1c:	mov	r0, #0
   1dc20:	mov	ip, #0
   1dc24:	mov	lr, #0
   1dc28:	mov	sl, #0
   1dc2c:	mov	r6, #0
   1dc30:	mov	r5, #0
   1dc34:	ldr	r7, [fp, #12]
   1dc38:	str	r7, [sp, #20]
   1dc3c:	ldr	r7, [fp, #8]
   1dc40:	str	r7, [sp, #16]
   1dc44:	add	r4, pc, #12
   1dc48:	mov	r7, #0
   1dc4c:	ldr	r9, [r4, r2, lsl #2]
   1dc50:	mov	r2, #0
   1dc54:	add	pc, r4, r9
   1dc58:	andeq	r0, r0, r4, rrx
   1dc5c:	andeq	r0, r0, ip, asr r0
   1dc60:	andeq	r0, r0, r4, asr r0
   1dc64:	andeq	r0, r0, ip, asr #32
   1dc68:	andeq	r0, r0, r0, asr #32
   1dc6c:	andeq	r0, r0, r4, lsr r0
   1dc70:	andeq	r0, r0, r4, lsr #32
   1dc74:	andeq	r0, r0, r0, lsr #32
   1dc78:	ldrb	ip, [r1, #7]
   1dc7c:	ldrb	r2, [r1, #6]
   1dc80:	mov	lr, r0
   1dc84:	orr	r2, ip, r2, lsl #8
   1dc88:	mov	r0, r2
   1dc8c:	ldrb	r2, [r1, #5]
   1dc90:	mov	sl, lr
   1dc94:	orr	r0, r0, r2, lsl #16
   1dc98:	ldrb	r2, [r1, #4]
   1dc9c:	mov	r6, sl
   1dca0:	orr	r0, r0, r2, lsl #24
   1dca4:	ldrb	r2, [r1, #3]
   1dca8:	orr	r7, r2, r6
   1dcac:	ldrb	r2, [r1, #2]
   1dcb0:	orr	r5, r7, r2, lsl #8
   1dcb4:	ldrb	r2, [r1, #1]
   1dcb8:	orr	r2, r5, r2, lsl #16
   1dcbc:	ldrb	r7, [r1]
   1dcc0:	movw	r6, #18273	; 0x4761
   1dcc4:	movt	r6, #19833	; 0x4d79
   1dcc8:	orr	r2, r2, r7, lsl #24
   1dccc:	movw	r7, #11844	; 0x2e44
   1dcd0:	movt	r7, #28005	; 0x6d65
   1dcd4:	subs	r7, r7, r0
   1dcd8:	sbcs	r7, r6, r2
   1dcdc:	bcc	1de40 <main@@Base+0xaa84>
   1dce0:	movw	r7, #31022	; 0x792e
   1dce4:	movt	r7, #24947	; 0x6173
   1dce8:	eor	r0, r0, r7
   1dcec:	movw	r7, #28276	; 0x6e74
   1dcf0:	movt	r7, #18017	; 0x4661
   1dcf4:	eor	r2, r2, r7
   1dcf8:	orrs	r0, r0, r2
   1dcfc:	bne	1eac0 <main@@Base+0xb704>
   1dd00:	add	lr, r1, #8
   1dd04:	sub	r0, r8, lr
   1dd08:	cmp	r0, #8
   1dd0c:	movcs	r0, #8
   1dd10:	sub	r0, r0, #1
   1dd14:	cmp	r0, #7
   1dd18:	bhi	1eac0 <main@@Base+0xb704>
   1dd1c:	str	r3, [sp, #12]
   1dd20:	add	r5, pc, #36	; 0x24
   1dd24:	mov	sl, #0
   1dd28:	mov	ip, #0
   1dd2c:	mov	r9, #0
   1dd30:	mov	r6, #0
   1dd34:	mov	r7, #0
   1dd38:	mov	r4, #0
   1dd3c:	mov	r3, #0
   1dd40:	ldr	r2, [r5, r0, lsl #2]
   1dd44:	mov	r0, #0
   1dd48:	add	pc, r5, r2
   1dd4c:	andeq	r0, r0, r4, rrx
   1dd50:	andeq	r0, r0, ip, asr r0
   1dd54:	andeq	r0, r0, r4, asr r0
   1dd58:	andeq	r0, r0, ip, asr #32
   1dd5c:	andeq	r0, r0, r0, asr #32
   1dd60:	andeq	r0, r0, r4, lsr r0
   1dd64:	andeq	r0, r0, r4, lsr #32
   1dd68:	andeq	r0, r0, r0, lsr #32
   1dd6c:	ldrb	ip, [r1, #15]
   1dd70:	ldrb	r0, [r1, #14]
   1dd74:	mov	r9, sl
   1dd78:	orr	r0, ip, r0, lsl #8
   1dd7c:	mov	sl, r0
   1dd80:	ldrb	r0, [r1, #13]
   1dd84:	mov	r6, r9
   1dd88:	orr	sl, sl, r0, lsl #16
   1dd8c:	ldrb	r0, [r1, #12]
   1dd90:	mov	r7, r6
   1dd94:	orr	sl, sl, r0, lsl #24
   1dd98:	ldrb	r0, [r1, #11]
   1dd9c:	orr	r4, r0, r7
   1dda0:	ldrb	r0, [r1, #10]
   1dda4:	orr	r3, r4, r0, lsl #8
   1dda8:	ldrb	r0, [r1, #9]
   1ddac:	orr	r0, r3, r0, lsl #16
   1ddb0:	ldrb	r3, [lr]
   1ddb4:	movw	r2, #29797	; 0x7465
   1ddb8:	movt	r2, #24931	; 0x6163
   1ddbc:	eor	r2, sl, r2
   1ddc0:	orr	r0, r0, r3, lsl #24
   1ddc4:	movw	r3, #24946	; 0x6172
   1ddc8:	movt	r3, #17256	; 0x4368
   1ddcc:	eor	r0, r0, r3
   1ddd0:	orrs	r0, r2, r0
   1ddd4:	bne	1eac0 <main@@Base+0xb704>
   1ddd8:	add	r0, r1, #16
   1dddc:	sub	r2, r8, r0
   1dde0:	cmp	r2, #8
   1dde4:	mov	r3, r2
   1dde8:	movcs	r3, #8
   1ddec:	sub	r3, r3, #1
   1ddf0:	cmp	r3, #7
   1ddf4:	bhi	1eac0 <main@@Base+0xb704>
   1ddf8:	cmp	r2, #2
   1ddfc:	blt	1eac0 <main@@Base+0xb704>
   1de00:	ldrb	r2, [r0]
   1de04:	cmp	r2, #114	; 0x72
   1de08:	bne	1eac0 <main@@Base+0xb704>
   1de0c:	ldrb	r2, [r1, #17]
   1de10:	ldr	r3, [sp, #12]
   1de14:	cmp	r2, #46	; 0x2e
   1de18:	mov	r2, r0
   1de1c:	addeq	r2, r1, #18
   1de20:	cmp	r2, r0
   1de24:	beq	1eac0 <main@@Base+0xb704>
   1de28:	ldr	r0, [sp, #24]
   1de2c:	mov	r1, r2
   1de30:	mov	r2, r8
   1de34:	sub	sp, fp, #28
   1de38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1de3c:	b	245b8 <main@@Base+0x111fc>
   1de40:	movw	r7, #11855	; 0x2e4f
   1de44:	eor	r2, r2, r6
   1de48:	movt	r7, #28005	; 0x6d65
   1de4c:	eor	r7, r0, r7
   1de50:	orrs	r7, r7, r2
   1de54:	beq	1dff0 <main@@Base+0xac34>
   1de58:	movw	r7, #11845	; 0x2e45
   1de5c:	movt	r7, #28005	; 0x6d65
   1de60:	eor	r0, r0, r7
   1de64:	orrs	r0, r0, r2
   1de68:	bne	1eac0 <main@@Base+0xb704>
   1de6c:	add	lr, r1, #8
   1de70:	sub	r0, r8, lr
   1de74:	cmp	r0, #8
   1de78:	movcs	r0, #8
   1de7c:	sub	r2, r0, #1
   1de80:	cmp	r2, #7
   1de84:	bhi	1eac0 <main@@Base+0xb704>
   1de88:	str	r3, [sp, #12]
   1de8c:	add	r5, pc, #36	; 0x24
   1de90:	mov	r0, #0
   1de94:	mov	ip, #0
   1de98:	mov	r9, #0
   1de9c:	mov	r7, #0
   1dea0:	mov	r6, #0
   1dea4:	mov	r4, #0
   1dea8:	mov	r3, #0
   1deac:	ldr	sl, [r5, r2, lsl #2]
   1deb0:	mov	r2, #0
   1deb4:	add	pc, r5, sl
   1deb8:	andeq	r0, r0, r4, rrx
   1debc:	andeq	r0, r0, ip, asr r0
   1dec0:	andeq	r0, r0, r4, asr r0
   1dec4:	andeq	r0, r0, ip, asr #32
   1dec8:	andeq	r0, r0, r0, asr #32
   1decc:	andeq	r0, r0, r4, lsr r0
   1ded0:	andeq	r0, r0, r4, lsr #32
   1ded4:	andeq	r0, r0, r0, lsr #32
   1ded8:	ldrb	ip, [r1, #15]
   1dedc:	ldrb	r2, [r1, #14]
   1dee0:	mov	r9, r0
   1dee4:	orr	r2, ip, r2, lsl #8
   1dee8:	mov	r0, r2
   1deec:	ldrb	r2, [r1, #13]
   1def0:	mov	r7, r9
   1def4:	orr	r0, r0, r2, lsl #16
   1def8:	ldrb	r2, [r1, #12]
   1defc:	mov	r6, r7
   1df00:	orr	r0, r0, r2, lsl #24
   1df04:	ldrb	r2, [r1, #11]
   1df08:	orr	r4, r2, r6
   1df0c:	ldrb	r2, [r1, #10]
   1df10:	orr	r3, r4, r2, lsl #8
   1df14:	ldrb	r2, [r1, #9]
   1df18:	orr	r2, r3, r2, lsl #16
   1df1c:	ldrb	r3, [lr]
   1df20:	movw	r6, #11880	; 0x2e68
   1df24:	movt	r6, #27749	; 0x6c65
   1df28:	subs	r7, r0, r6
   1df2c:	orr	r2, r2, r3, lsl #24
   1df30:	movw	r3, #28016	; 0x6d70
   1df34:	movt	r3, #30817	; 0x7861
   1df38:	sbcs	r7, r2, r3
   1df3c:	bcs	1e3bc <main@@Base+0xb000>
   1df40:	ldr	lr, [sp, #12]
   1df44:	subs	r7, r6, #37	; 0x25
   1df48:	sbc	r5, r3, #0
   1df4c:	subs	r7, r0, r7
   1df50:	sbcs	r7, r2, r5
   1df54:	bcs	1e4d8 <main@@Base+0xb11c>
   1df58:	subs	r7, r6, #39	; 0x27
   1df5c:	sbc	r3, r3, #0
   1df60:	eor	r0, r0, r7
   1df64:	eor	r2, r2, r3
   1df68:	orrs	r0, r0, r2
   1df6c:	bne	1eac0 <main@@Base+0xb704>
   1df70:	add	r0, r1, #16
   1df74:	sub	r6, r8, r0
   1df78:	cmp	r6, #8
   1df7c:	mov	r2, r6
   1df80:	movcs	r2, #8
   1df84:	sub	r3, r2, #2
   1df88:	cmp	r3, #7
   1df8c:	bcs	1e9a4 <main@@Base+0xb5e8>
   1df90:	ldrb	r2, [r1, #17]
   1df94:	mov	r3, #0
   1df98:	lsl	r7, r2, #16
   1df9c:	cmp	r6, #3
   1dfa0:	blt	1eac0 <main@@Base+0xb704>
   1dfa4:	ldrb	r2, [r0]
   1dfa8:	orr	r2, r7, r2, lsl #24
   1dfac:	eor	r2, r2, #7929856	; 0x790000
   1dfb0:	eor	r2, r2, #1845493760	; 0x6e000000
   1dfb4:	orrs	r2, r3, r2
   1dfb8:	bne	1eac0 <main@@Base+0xb704>
   1dfbc:	ldrb	r2, [r1, #18]
   1dfc0:	cmp	r2, #46	; 0x2e
   1dfc4:	mov	r2, r0
   1dfc8:	addeq	r2, r1, #19
   1dfcc:	cmp	r2, r0
   1dfd0:	beq	1eac0 <main@@Base+0xb704>
   1dfd4:	ldr	r0, [sp, #24]
   1dfd8:	mov	r1, r2
   1dfdc:	mov	r2, r8
   1dfe0:	mov	r3, lr
   1dfe4:	sub	sp, fp, #28
   1dfe8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1dfec:	b	22b44 <main@@Base+0xf788>
   1dff0:	add	lr, r1, #8
   1dff4:	sub	r0, r8, lr
   1dff8:	cmp	r0, #8
   1dffc:	movcs	r0, #8
   1e000:	sub	r0, r0, #1
   1e004:	cmp	r0, #7
   1e008:	bhi	1eac0 <main@@Base+0xb704>
   1e00c:	str	r3, [sp, #12]
   1e010:	add	r5, pc, #36	; 0x24
   1e014:	mov	sl, #0
   1e018:	mov	ip, #0
   1e01c:	mov	r9, #0
   1e020:	mov	r7, #0
   1e024:	mov	r6, #0
   1e028:	mov	r4, #0
   1e02c:	mov	r3, #0
   1e030:	ldr	r2, [r5, r0, lsl #2]
   1e034:	mov	r0, #0
   1e038:	add	pc, r5, r2
   1e03c:	andeq	r0, r0, r4, rrx
   1e040:	andeq	r0, r0, ip, asr r0
   1e044:	andeq	r0, r0, r4, asr r0
   1e048:	andeq	r0, r0, ip, asr #32
   1e04c:	andeq	r0, r0, r0, asr #32
   1e050:	andeq	r0, r0, r4, lsr r0
   1e054:	andeq	r0, r0, r4, lsr #32
   1e058:	andeq	r0, r0, r0, lsr #32
   1e05c:	ldrb	ip, [r1, #15]
   1e060:	ldrb	r0, [r1, #14]
   1e064:	mov	r9, sl
   1e068:	orr	r0, ip, r0, lsl #8
   1e06c:	mov	sl, r0
   1e070:	ldrb	r0, [r1, #13]
   1e074:	mov	r7, r9
   1e078:	orr	sl, sl, r0, lsl #16
   1e07c:	ldrb	r0, [r1, #12]
   1e080:	mov	r6, r7
   1e084:	orr	sl, sl, r0, lsl #24
   1e088:	ldrb	r0, [r1, #11]
   1e08c:	orr	r4, r0, r6
   1e090:	ldrb	r0, [r1, #10]
   1e094:	orr	r3, r4, r0, lsl #8
   1e098:	ldrb	r0, [r1, #9]
   1e09c:	orr	r0, r3, r0, lsl #16
   1e0a0:	ldrb	r3, [lr]
   1e0a4:	movw	r2, #28005	; 0x6d65
   1e0a8:	movt	r2, #20065	; 0x4e61
   1e0ac:	eor	r2, sl, r2
   1e0b0:	orr	r0, r0, r3, lsl #24
   1e0b4:	movw	r3, #25970	; 0x6572
   1e0b8:	movt	r3, #29800	; 0x7468
   1e0bc:	eor	r0, r0, r3
   1e0c0:	orrs	r0, r2, r0
   1e0c4:	bne	1eac0 <main@@Base+0xb704>
   1e0c8:	add	lr, r1, #16
   1e0cc:	sub	r0, r8, lr
   1e0d0:	cmp	r0, #8
   1e0d4:	movcs	r0, #8
   1e0d8:	sub	r0, r0, #1
   1e0dc:	cmp	r0, #7
   1e0e0:	bhi	1eac0 <main@@Base+0xb704>
   1e0e4:	add	r5, pc, #36	; 0x24
   1e0e8:	mov	sl, #0
   1e0ec:	mov	ip, #0
   1e0f0:	mov	r9, #0
   1e0f4:	mov	r7, #0
   1e0f8:	mov	r6, #0
   1e0fc:	mov	r4, #0
   1e100:	mov	r3, #0
   1e104:	ldr	r2, [r5, r0, lsl #2]
   1e108:	mov	r0, #0
   1e10c:	add	pc, r5, r2
   1e110:	andeq	r0, r0, r4, rrx
   1e114:	andeq	r0, r0, ip, asr r0
   1e118:	andeq	r0, r0, r4, asr r0
   1e11c:	andeq	r0, r0, ip, asr #32
   1e120:	andeq	r0, r0, r0, asr #32
   1e124:	andeq	r0, r0, r4, lsr r0
   1e128:	andeq	r0, r0, r4, lsr #32
   1e12c:	andeq	r0, r0, r0, lsr #32
   1e130:	ldrb	ip, [r1, #23]
   1e134:	ldrb	r0, [r1, #22]
   1e138:	mov	r9, sl
   1e13c:	orr	r0, ip, r0, lsl #8
   1e140:	mov	sl, r0
   1e144:	ldrb	r0, [r1, #21]
   1e148:	mov	r7, r9
   1e14c:	orr	sl, sl, r0, lsl #16
   1e150:	ldrb	r0, [r1, #20]
   1e154:	mov	r6, r7
   1e158:	orr	sl, sl, r0, lsl #24
   1e15c:	ldrb	r0, [r1, #19]
   1e160:	orr	r4, r0, r6
   1e164:	ldrb	r0, [r1, #18]
   1e168:	orr	r3, r4, r0, lsl #8
   1e16c:	ldrb	r0, [r1, #17]
   1e170:	orr	r0, r3, r0, lsl #16
   1e174:	ldrb	r3, [lr]
   1e178:	movw	r2, #18034	; 0x4672
   1e17c:	movt	r2, #25902	; 0x652e
   1e180:	eor	r2, sl, r2
   1e184:	orr	r0, r0, r3, lsl #24
   1e188:	movw	r3, #24931	; 0x6163
   1e18c:	movt	r3, #21360	; 0x5370
   1e190:	eor	r0, r0, r3
   1e194:	orrs	r0, r2, r0
   1e198:	bne	1eac0 <main@@Base+0xb704>
   1e19c:	add	lr, r1, #24
   1e1a0:	sub	r0, r8, lr
   1e1a4:	cmp	r0, #8
   1e1a8:	movcs	r0, #8
   1e1ac:	sub	r0, r0, #1
   1e1b0:	cmp	r0, #7
   1e1b4:	bhi	1eac0 <main@@Base+0xb704>
   1e1b8:	add	r5, pc, #36	; 0x24
   1e1bc:	mov	sl, #0
   1e1c0:	mov	ip, #0
   1e1c4:	mov	r9, #0
   1e1c8:	mov	r7, #0
   1e1cc:	mov	r6, #0
   1e1d0:	mov	r4, #0
   1e1d4:	mov	r3, #0
   1e1d8:	ldr	r2, [r5, r0, lsl #2]
   1e1dc:	mov	r0, #0
   1e1e0:	add	pc, r5, r2
   1e1e4:	andeq	r0, r0, r4, rrx
   1e1e8:	andeq	r0, r0, ip, asr r0
   1e1ec:	andeq	r0, r0, r4, asr r0
   1e1f0:	andeq	r0, r0, ip, asr #32
   1e1f4:	andeq	r0, r0, r0, asr #32
   1e1f8:	andeq	r0, r0, r4, lsr r0
   1e1fc:	andeq	r0, r0, r4, lsr #32
   1e200:	andeq	r0, r0, r0, lsr #32
   1e204:	ldrb	ip, [r1, #31]
   1e208:	ldrb	r0, [r1, #30]
   1e20c:	mov	r9, sl
   1e210:	orr	r0, ip, r0, lsl #8
   1e214:	mov	sl, r0
   1e218:	ldrb	r0, [r1, #29]
   1e21c:	mov	r7, r9
   1e220:	orr	sl, sl, r0, lsl #16
   1e224:	ldrb	r0, [r1, #28]
   1e228:	mov	r6, r7
   1e22c:	orr	sl, sl, r0, lsl #24
   1e230:	ldrb	r0, [r1, #27]
   1e234:	orr	r4, r0, r6
   1e238:	ldrb	r0, [r1, #26]
   1e23c:	orr	r3, r4, r0, lsl #8
   1e240:	ldrb	r0, [r1, #25]
   1e244:	orr	r0, r3, r0, lsl #16
   1e248:	ldrb	r3, [lr]
   1e24c:	movw	r2, #30052	; 0x7564
   1e250:	movt	r2, #25452	; 0x636c
   1e254:	eor	r2, sl, r2
   1e258:	orr	r0, r0, r3, lsl #24
   1e25c:	movw	r3, #18798	; 0x496e
   1e260:	movt	r3, #28525	; 0x6f6d
   1e264:	eor	r0, r0, r3
   1e268:	orrs	r0, r2, r0
   1e26c:	bne	1eac0 <main@@Base+0xb704>
   1e270:	add	r0, r1, #32
   1e274:	sub	r2, r8, r0
   1e278:	cmp	r2, #8
   1e27c:	mov	r3, r2
   1e280:	movcs	r3, #8
   1e284:	sub	r3, r3, #1
   1e288:	cmp	r3, #7
   1e28c:	bhi	1eac0 <main@@Base+0xb704>
   1e290:	cmp	r2, #2
   1e294:	blt	1eac0 <main@@Base+0xb704>
   1e298:	ldrb	r2, [r0]
   1e29c:	cmp	r2, #101	; 0x65
   1e2a0:	bne	1eac0 <main@@Base+0xb704>
   1e2a4:	ldrb	r2, [r1, #33]	; 0x21
   1e2a8:	ldr	r9, [sp, #12]
   1e2ac:	mov	r7, r0
   1e2b0:	cmp	r2, #46	; 0x2e
   1e2b4:	addeq	r7, r1, #34	; 0x22
   1e2b8:	cmp	r7, r0
   1e2bc:	beq	1eac0 <main@@Base+0xb704>
   1e2c0:	sub	r0, r8, r7
   1e2c4:	cmp	r0, #8
   1e2c8:	movcs	r0, #8
   1e2cc:	sub	r0, r0, #1
   1e2d0:	cmp	r0, #7
   1e2d4:	bhi	1eabc <main@@Base+0xb700>
   1e2d8:	add	r6, pc, #36	; 0x24
   1e2dc:	mov	sl, #0
   1e2e0:	mov	ip, #0
   1e2e4:	mov	lr, #0
   1e2e8:	mov	r1, #0
   1e2ec:	mov	r2, #0
   1e2f0:	mov	r3, #0
   1e2f4:	mov	r5, #0
   1e2f8:	mov	r4, #0
   1e2fc:	ldr	r0, [r6, r0, lsl #2]
   1e300:	add	pc, r6, r0
   1e304:	andeq	r0, r0, r4, rrx
   1e308:	andeq	r0, r0, ip, asr r0
   1e30c:	andeq	r0, r0, r4, asr r0
   1e310:	andeq	r0, r0, ip, asr #32
   1e314:	andeq	r0, r0, r0, asr #32
   1e318:	andeq	r0, r0, r4, lsr r0
   1e31c:	andeq	r0, r0, r4, lsr #32
   1e320:	andeq	r0, r0, r0, lsr #32
   1e324:	ldrb	ip, [r7, #7]
   1e328:	ldrb	r0, [r7, #6]
   1e32c:	mov	lr, sl
   1e330:	orr	r0, ip, r0, lsl #8
   1e334:	mov	sl, r0
   1e338:	ldrb	r0, [r7, #5]
   1e33c:	mov	r1, lr
   1e340:	orr	sl, sl, r0, lsl #16
   1e344:	ldrb	r0, [r7, #4]
   1e348:	mov	r2, r1
   1e34c:	orr	sl, sl, r0, lsl #24
   1e350:	ldrb	r0, [r7, #3]
   1e354:	orr	r3, r0, r2
   1e358:	ldrb	r0, [r7, #2]
   1e35c:	orr	r5, r3, r0, lsl #8
   1e360:	ldrb	r0, [r7, #1]
   1e364:	orr	r4, r5, r0, lsl #16
   1e368:	ldrb	r0, [r7]
   1e36c:	movw	r1, #28416	; 0x6f00
   1e370:	movt	r1, #18031	; 0x466f
   1e374:	orr	r6, r4, r0, lsl #24
   1e378:	ldr	r4, [sp, #24]
   1e37c:	bic	r0, r6, #255	; 0xff
   1e380:	teq	r0, r1
   1e384:	bne	1e9cc <main@@Base+0xb610>
   1e388:	ldr	r0, [sp, #20]
   1e38c:	mov	r1, r7
   1e390:	mov	r2, r8
   1e394:	mov	r3, #3
   1e398:	str	r0, [sp]
   1e39c:	mov	r0, r4
   1e3a0:	bl	2f6a4 <flatcc_json_parser_match_constant@@Base>
   1e3a4:	cmp	r0, r7
   1e3a8:	beq	1e9cc <main@@Base+0xb610>
   1e3ac:	mov	r1, r0
   1e3b0:	mov	r3, #0
   1e3b4:	mov	r2, #17
   1e3b8:	b	1ea60 <main@@Base+0xb6a4>
   1e3bc:	eor	r5, r0, r6
   1e3c0:	eor	r7, r2, r3
   1e3c4:	orrs	r5, r5, r7
   1e3c8:	bne	1e5d0 <main@@Base+0xb214>
   1e3cc:	add	ip, r1, #16
   1e3d0:	sub	r2, r8, ip
   1e3d4:	cmp	r2, #8
   1e3d8:	mov	r0, r2
   1e3dc:	movcs	r0, #8
   1e3e0:	sub	r0, r0, #1
   1e3e4:	cmp	r0, #7
   1e3e8:	bhi	1eac0 <main@@Base+0xb704>
   1e3ec:	add	r5, pc, #32
   1e3f0:	mov	r9, #0
   1e3f4:	mov	lr, #0
   1e3f8:	mov	sl, #0
   1e3fc:	mov	r3, #0
   1e400:	mov	r4, #0
   1e404:	mov	r7, #0
   1e408:	ldr	r6, [r5, r0, lsl #2]
   1e40c:	mov	r0, #0
   1e410:	add	pc, r5, r6
   1e414:	andeq	r0, r0, ip, asr r0
   1e418:	andeq	r0, r0, r4, asr r0
   1e41c:	andeq	r0, r0, ip, asr #32
   1e420:	andeq	r0, r0, r4, asr #32
   1e424:	andeq	r0, r0, r8, lsr r0
   1e428:	andeq	r0, r0, r8, lsr #32
   1e42c:	andeq	r0, r0, r0, lsr #32
   1e430:	andeq	r0, r0, r0, lsr #32
   1e434:	ldrb	r0, [r1, #22]
   1e438:	lsl	lr, r0, #8
   1e43c:	ldrb	r0, [r1, #21]
   1e440:	mov	sl, r9
   1e444:	orr	r0, lr, r0, lsl #16
   1e448:	mov	r9, r0
   1e44c:	ldrb	r0, [r1, #20]
   1e450:	mov	r3, sl
   1e454:	orr	r9, r9, r0, lsl #24
   1e458:	ldrb	r0, [r1, #19]
   1e45c:	orr	r4, r0, r3
   1e460:	ldrb	r0, [r1, #18]
   1e464:	orr	r7, r4, r0, lsl #8
   1e468:	ldrb	r0, [r1, #17]
   1e46c:	orr	r0, r7, r0, lsl #16
   1e470:	cmp	r2, #8
   1e474:	blt	1eac0 <main@@Base+0xb704>
   1e478:	ldrb	r2, [ip]
   1e47c:	movw	r3, #27904	; 0x6d00
   1e480:	movt	r3, #28277	; 0x6e75
   1e484:	eor	r3, r9, r3
   1e488:	orr	r0, r0, r2, lsl #24
   1e48c:	movw	r2, #24421	; 0x5f65
   1e490:	movt	r2, #25959	; 0x6567
   1e494:	add	r2, r2, #1114112	; 0x110000
   1e498:	eor	r0, r0, r2
   1e49c:	orrs	r0, r3, r0
   1e4a0:	bne	1eac0 <main@@Base+0xb704>
   1e4a4:	ldrb	r0, [r1, #23]
   1e4a8:	ldr	r3, [sp, #12]
   1e4ac:	mov	r2, ip
   1e4b0:	cmp	r0, #46	; 0x2e
   1e4b4:	addeq	r2, r1, #24
   1e4b8:	cmp	r2, ip
   1e4bc:	beq	1eac0 <main@@Base+0xb704>
   1e4c0:	ldr	r0, [sp, #24]
   1e4c4:	mov	r1, r2
   1e4c8:	mov	r2, r8
   1e4cc:	sub	sp, fp, #28
   1e4d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e4d4:	b	240c8 <main@@Base+0x10d0c>
   1e4d8:	movw	r7, #11846	; 0x2e46
   1e4dc:	eor	r2, r2, r3
   1e4e0:	movt	r7, #27749	; 0x6c65
   1e4e4:	eor	r7, r0, r7
   1e4e8:	orrs	r3, r7, r2
   1e4ec:	beq	1e830 <main@@Base+0xb474>
   1e4f0:	movw	r3, #11843	; 0x2e43
   1e4f4:	movt	r3, #27749	; 0x6c65
   1e4f8:	eor	r0, r0, r3
   1e4fc:	orrs	r0, r0, r2
   1e500:	bne	1eac0 <main@@Base+0xb704>
   1e504:	add	r0, r1, #16
   1e508:	sub	r2, r8, r0
   1e50c:	cmp	r2, #8
   1e510:	mov	r3, r2
   1e514:	movcs	r3, #8
   1e518:	sub	r7, r3, #1
   1e51c:	cmp	r7, #7
   1e520:	bhi	1eac0 <main@@Base+0xb704>
   1e524:	add	r4, pc, #20
   1e528:	mov	ip, #0
   1e52c:	mov	r5, #0
   1e530:	mov	r6, #0
   1e534:	ldr	r3, [r4, r7, lsl #2]
   1e538:	mov	r7, #0
   1e53c:	add	pc, r4, r3
   1e540:	andeq	r0, r0, r8, lsr r0
   1e544:	andeq	r0, r0, r0, lsr r0
   1e548:	andeq	r0, r0, r8, lsr #32
   1e54c:	andeq	r0, r0, r0, lsr #32
   1e550:	andeq	r0, r0, r0, lsr #32
   1e554:	andeq	r0, r0, r0, lsr #32
   1e558:	andeq	r0, r0, r0, lsr #32
   1e55c:	andeq	r0, r0, r0, lsr #32
   1e560:	ldrb	r7, [r1, #19]
   1e564:	mov	ip, #0
   1e568:	ldrb	r3, [r1, #18]
   1e56c:	orr	r5, r7, r3, lsl #8
   1e570:	ldrb	r3, [r1, #17]
   1e574:	orr	r6, r5, r3, lsl #16
   1e578:	cmp	r2, #5
   1e57c:	blt	1eac0 <main@@Base+0xb704>
   1e580:	ldrb	r2, [r0]
   1e584:	movw	r3, #28530	; 0x6f72
   1e588:	movt	r3, #28524	; 0x6f6c
   1e58c:	orr	r2, r6, r2, lsl #24
   1e590:	eor	r2, r2, r3
   1e594:	orrs	r2, ip, r2
   1e598:	bne	1eac0 <main@@Base+0xb704>
   1e59c:	ldrb	r2, [r1, #20]
   1e5a0:	cmp	r2, #46	; 0x2e
   1e5a4:	mov	r2, r0
   1e5a8:	addeq	r2, r1, #21
   1e5ac:	cmp	r2, r0
   1e5b0:	beq	1eac0 <main@@Base+0xb704>
   1e5b4:	ldr	r0, [sp, #24]
   1e5b8:	mov	r1, r2
   1e5bc:	mov	r2, r8
   1e5c0:	mov	r3, lr
   1e5c4:	sub	sp, fp, #28
   1e5c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e5cc:	b	1d618 <main@@Base+0xa25c>
   1e5d0:	add	r5, r6, #6
   1e5d4:	subs	r4, r0, r5
   1e5d8:	sbcs	r2, r2, r3
   1e5dc:	bcs	1e700 <main@@Base+0xb344>
   1e5e0:	add	r2, r6, #1
   1e5e4:	eor	r0, r0, r2
   1e5e8:	orrs	r0, r0, r7
   1e5ec:	bne	1eac0 <main@@Base+0xb704>
   1e5f0:	add	ip, r1, #16
   1e5f4:	sub	r2, r8, ip
   1e5f8:	cmp	r2, #8
   1e5fc:	mov	r0, r2
   1e600:	movcs	r0, #8
   1e604:	sub	r0, r0, #1
   1e608:	cmp	r0, #7
   1e60c:	bhi	1eac0 <main@@Base+0xb704>
   1e610:	add	r7, pc, #32
   1e614:	mov	lr, #0
   1e618:	mov	r9, #0
   1e61c:	mov	sl, #0
   1e620:	mov	r3, #0
   1e624:	mov	r5, #0
   1e628:	mov	r4, #0
   1e62c:	ldr	r6, [r7, r0, lsl #2]
   1e630:	mov	r0, #0
   1e634:	add	pc, r7, r6
   1e638:	andeq	r0, r0, ip, asr r0
   1e63c:	andeq	r0, r0, r4, asr r0
   1e640:	andeq	r0, r0, ip, asr #32
   1e644:	andeq	r0, r0, r4, asr #32
   1e648:	andeq	r0, r0, r8, lsr r0
   1e64c:	andeq	r0, r0, r8, lsr #32
   1e650:	andeq	r0, r0, r0, lsr #32
   1e654:	andeq	r0, r0, r0, lsr #32
   1e658:	ldrb	r0, [r1, #22]
   1e65c:	lsl	r9, r0, #8
   1e660:	ldrb	r0, [r1, #21]
   1e664:	mov	sl, lr
   1e668:	orr	r0, r9, r0, lsl #16
   1e66c:	mov	lr, r0
   1e670:	ldrb	r0, [r1, #20]
   1e674:	mov	r3, sl
   1e678:	orr	lr, lr, r0, lsl #24
   1e67c:	ldrb	r0, [r1, #19]
   1e680:	orr	r0, r0, r3
   1e684:	ldrb	r3, [r1, #18]
   1e688:	orr	r5, r0, r3, lsl #8
   1e68c:	ldrb	r0, [r1, #17]
   1e690:	orr	r4, r5, r0, lsl #16
   1e694:	cmp	r2, #8
   1e698:	blt	1eac0 <main@@Base+0xb704>
   1e69c:	ldrb	r2, [ip]
   1e6a0:	movw	r0, #24421	; 0x5f65
   1e6a4:	movw	r3, #27904	; 0x6d00
   1e6a8:	movt	r0, #25959	; 0x6567
   1e6ac:	movt	r3, #28277	; 0x6e75
   1e6b0:	add	r0, r0, #851968	; 0xd0000
   1e6b4:	eor	r3, lr, r3
   1e6b8:	orr	r2, r4, r2, lsl #24
   1e6bc:	add	r0, r0, #150994944	; 0x9000000
   1e6c0:	eor	r0, r2, r0
   1e6c4:	orrs	r0, r3, r0
   1e6c8:	bne	1eac0 <main@@Base+0xb704>
   1e6cc:	ldrb	r0, [r1, #23]
   1e6d0:	ldr	r3, [sp, #12]
   1e6d4:	mov	r2, ip
   1e6d8:	cmp	r0, #46	; 0x2e
   1e6dc:	addeq	r2, r1, #24
   1e6e0:	cmp	r2, ip
   1e6e4:	beq	1eac0 <main@@Base+0xb704>
   1e6e8:	ldr	r0, [sp, #24]
   1e6ec:	mov	r1, r2
   1e6f0:	mov	r2, r8
   1e6f4:	sub	sp, fp, #28
   1e6f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e6fc:	b	24278 <main@@Base+0x10ebc>
   1e700:	eor	r0, r0, r5
   1e704:	orrs	r0, r0, r7
   1e708:	bne	1eac0 <main@@Base+0xb704>
   1e70c:	add	lr, r1, #16
   1e710:	sub	r2, r8, lr
   1e714:	cmp	r2, #8
   1e718:	mov	r0, r2
   1e71c:	movcs	r0, #8
   1e720:	sub	r0, r0, #1
   1e724:	cmp	r0, #7
   1e728:	bhi	1eac0 <main@@Base+0xb704>
   1e72c:	add	r5, pc, #40	; 0x28
   1e730:	mov	sl, #0
   1e734:	mov	r9, #0
   1e738:	mov	r7, #0
   1e73c:	mov	r6, #0
   1e740:	mov	r4, #0
   1e744:	mov	ip, #0
   1e748:	ldr	r3, [r5, r0, lsl #2]
   1e74c:	mov	r0, #0
   1e750:	str	r0, [sp, #8]
   1e754:	mov	r0, #0
   1e758:	add	pc, r5, r3
   1e75c:	andeq	r0, r0, ip, rrx
   1e760:	andeq	r0, r0, r4, rrx
   1e764:	andeq	r0, r0, ip, asr r0
   1e768:	andeq	r0, r0, r4, asr r0
   1e76c:	andeq	r0, r0, r8, asr #32
   1e770:	andeq	r0, r0, ip, lsr r0
   1e774:	andeq	r0, r0, r8, lsr #32
   1e778:	andeq	r0, r0, r0, lsr #32
   1e77c:	ldrb	r0, [r1, #23]
   1e780:	str	r0, [sp, #8]
   1e784:	ldrb	r0, [r1, #22]
   1e788:	ldr	r3, [sp, #8]
   1e78c:	mov	r9, sl
   1e790:	orr	r0, r3, r0, lsl #8
   1e794:	mov	sl, r0
   1e798:	ldrb	r0, [r1, #21]
   1e79c:	mov	r7, r9
   1e7a0:	orr	sl, sl, r0, lsl #16
   1e7a4:	ldrb	r0, [r1, #20]
   1e7a8:	mov	r6, r7
   1e7ac:	orr	sl, sl, r0, lsl #24
   1e7b0:	ldrb	r0, [r1, #19]
   1e7b4:	orr	r4, r0, r6
   1e7b8:	ldrb	r0, [r1, #18]
   1e7bc:	orr	r0, r4, r0, lsl #8
   1e7c0:	ldrb	r3, [r1, #17]
   1e7c4:	orr	ip, r0, r3, lsl #16
   1e7c8:	ldrb	r0, [lr]
   1e7cc:	cmp	r2, #8
   1e7d0:	orr	r6, ip, r0, lsl #24
   1e7d4:	movw	ip, #27904	; 0x6d00
   1e7d8:	movt	ip, #28277	; 0x6e75
   1e7dc:	blt	1e8b0 <main@@Base+0xb4f4>
   1e7e0:	movw	r2, #24421	; 0x5f65
   1e7e4:	bic	r0, sl, #255	; 0xff
   1e7e8:	movt	r2, #25959	; 0x6567
   1e7ec:	eor	r0, r0, ip
   1e7f0:	eor	r2, r6, r2
   1e7f4:	orrs	r0, r0, r2
   1e7f8:	bne	1e8b0 <main@@Base+0xb4f4>
   1e7fc:	ldrb	r0, [r1, #23]
   1e800:	mov	r2, lr
   1e804:	cmp	r0, #46	; 0x2e
   1e808:	addeq	r2, r1, #24
   1e80c:	cmp	r2, lr
   1e810:	beq	1e8b0 <main@@Base+0xb4f4>
   1e814:	ldr	r0, [sp, #24]
   1e818:	ldr	r3, [sp, #12]
   1e81c:	mov	r1, r2
   1e820:	mov	r2, r8
   1e824:	sub	sp, fp, #28
   1e828:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e82c:	b	2446c <main@@Base+0x110b0>
   1e830:	add	r0, r1, #16
   1e834:	sub	r6, r8, r0
   1e838:	cmp	r6, #8
   1e83c:	mov	r2, r6
   1e840:	movcs	r2, #8
   1e844:	sub	r3, r2, #2
   1e848:	cmp	r3, #7
   1e84c:	bcs	1e9b8 <main@@Base+0xb5fc>
   1e850:	ldrb	r2, [r1, #17]
   1e854:	mov	r3, #0
   1e858:	lsl	r7, r2, #16
   1e85c:	cmp	r6, #3
   1e860:	blt	1eac0 <main@@Base+0xb704>
   1e864:	ldrb	r2, [r0]
   1e868:	orr	r2, r7, r2, lsl #24
   1e86c:	eor	r2, r2, #7274496	; 0x6f0000
   1e870:	eor	r2, r2, #1862270976	; 0x6f000000
   1e874:	orrs	r2, r3, r2
   1e878:	bne	1eac0 <main@@Base+0xb704>
   1e87c:	ldrb	r2, [r1, #18]
   1e880:	cmp	r2, #46	; 0x2e
   1e884:	mov	r2, r0
   1e888:	addeq	r2, r1, #19
   1e88c:	cmp	r2, r0
   1e890:	beq	1eac0 <main@@Base+0xb704>
   1e894:	ldr	r0, [sp, #24]
   1e898:	mov	r1, r2
   1e89c:	mov	r2, r8
   1e8a0:	mov	r3, lr
   1e8a4:	sub	sp, fp, #28
   1e8a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e8ac:	b	23e60 <main@@Base+0x10aa4>
   1e8b0:	movw	r0, #31077	; 0x7965
   1e8b4:	movw	r2, #25965	; 0x656d
   1e8b8:	movt	r0, #28788	; 0x7074
   1e8bc:	movt	r2, #28532	; 0x6f74
   1e8c0:	eor	r0, sl, r0
   1e8c4:	eor	r2, r6, r2
   1e8c8:	orrs	r0, r0, r2
   1e8cc:	bne	1eac0 <main@@Base+0xb704>
   1e8d0:	add	r0, r1, #24
   1e8d4:	sub	r6, r8, r0
   1e8d8:	cmp	r6, #8
   1e8dc:	mov	r2, r6
   1e8e0:	movcs	r2, #8
   1e8e4:	sub	r3, r2, #3
   1e8e8:	cmp	r3, #6
   1e8ec:	bcs	1ea74 <main@@Base+0xb6b8>
   1e8f0:	ldrb	r2, [r1, #26]
   1e8f4:	ldr	r4, [sp, #12]
   1e8f8:	mov	r3, #0
   1e8fc:	lsl	r2, r2, #8
   1e900:	ldrb	r7, [r1, #25]
   1e904:	orr	r7, r2, r7, lsl #16
   1e908:	cmp	r6, #4
   1e90c:	blt	1eac0 <main@@Base+0xb704>
   1e910:	ldrb	r2, [r0]
   1e914:	orr	r2, r7, r2, lsl #24
   1e918:	eor	r2, r2, ip
   1e91c:	orrs	r2, r3, r2
   1e920:	bne	1eac0 <main@@Base+0xb704>
   1e924:	ldrb	r2, [r1, #27]
   1e928:	mov	r6, r0
   1e92c:	cmp	r2, #46	; 0x2e
   1e930:	addeq	r6, r1, #28
   1e934:	cmp	r6, r0
   1e938:	beq	1eac0 <main@@Base+0xb704>
   1e93c:	sub	r0, r8, r6
   1e940:	cmp	r0, #8
   1e944:	movcs	r0, #8
   1e948:	sub	r0, r0, #1
   1e94c:	cmp	r0, #7
   1e950:	bhi	1ea94 <main@@Base+0xb6d8>
   1e954:	ldrb	r0, [r6]
   1e958:	cmp	r0, #120	; 0x78
   1e95c:	bne	1ea94 <main@@Base+0xb6d8>
   1e960:	ldr	r0, [sp, #20]
   1e964:	mov	r1, r6
   1e968:	mov	r2, r8
   1e96c:	mov	r3, #1
   1e970:	str	r0, [sp]
   1e974:	ldr	r0, [sp, #24]
   1e978:	bl	2f6a4 <flatcc_json_parser_match_constant@@Base>
   1e97c:	cmp	r0, r6
   1e980:	mov	r1, r6
   1e984:	beq	1eac0 <main@@Base+0xb704>
   1e988:	ldr	r2, [sp, #16]
   1e98c:	mov	r1, #0
   1e990:	str	r1, [r2]
   1e994:	str	r1, [r2, #4]
   1e998:	str	r1, [r4]
   1e99c:	mov	r1, r0
   1e9a0:	b	1eac0 <main@@Base+0xb704>
   1e9a4:	mov	r3, #0
   1e9a8:	cmp	r2, #1
   1e9ac:	mov	r7, #0
   1e9b0:	beq	1df9c <main@@Base+0xabe0>
   1e9b4:	b	1eac0 <main@@Base+0xb704>
   1e9b8:	mov	r3, #0
   1e9bc:	cmp	r2, #1
   1e9c0:	mov	r7, #0
   1e9c4:	beq	1e85c <main@@Base+0xb4a0>
   1e9c8:	b	1eac0 <main@@Base+0xb704>
   1e9cc:	movw	r0, #25942	; 0x6556
   1e9d0:	movw	r1, #25452	; 0x636c
   1e9d4:	movt	r0, #30052	; 0x7564
   1e9d8:	movt	r1, #18798	; 0x496e
   1e9dc:	eor	r0, sl, r0
   1e9e0:	eor	r1, r6, r1
   1e9e4:	orrs	r0, r0, r1
   1e9e8:	bne	1eabc <main@@Base+0xb700>
   1e9ec:	add	r6, r7, #8
   1e9f0:	sub	r1, r8, r6
   1e9f4:	cmp	r1, #8
   1e9f8:	movcs	r1, #8
   1e9fc:	sub	r0, r1, #2
   1ea00:	cmp	r0, #7
   1ea04:	bcs	1eaac <main@@Base+0xb6f0>
   1ea08:	ldrb	r0, [r7, #9]
   1ea0c:	lsl	r1, r0, #16
   1ea10:	mov	r0, #0
   1ea14:	ldrb	r2, [r6]
   1ea18:	orr	r1, r1, r2, lsl #24
   1ea1c:	eor	r1, r1, #23855104	; 0x16c0000
   1ea20:	eor	r1, r1, #1610612736	; 0x60000000
   1ea24:	orrs	r0, r0, r1
   1ea28:	bne	1eabc <main@@Base+0xb700>
   1ea2c:	ldr	r0, [sp, #20]
   1ea30:	mov	r1, r6
   1ea34:	mov	r2, r8
   1ea38:	mov	r3, #2
   1ea3c:	str	r0, [sp]
   1ea40:	mov	r0, r4
   1ea44:	bl	2f6a4 <flatcc_json_parser_match_constant@@Base>
   1ea48:	cmp	r0, r6
   1ea4c:	mov	r1, r7
   1ea50:	beq	1eac0 <main@@Base+0xb704>
   1ea54:	mov	r2, #0
   1ea58:	mov	r3, #0
   1ea5c:	mov	r1, r0
   1ea60:	ldr	r0, [sp, #16]
   1ea64:	strd	r2, [r0]
   1ea68:	mov	r0, #0
   1ea6c:	str	r0, [r9]
   1ea70:	b	1eac0 <main@@Base+0xb704>
   1ea74:	ldr	r4, [sp, #12]
   1ea78:	mov	r3, #0
   1ea7c:	cmp	r2, #1
   1ea80:	beq	1ea9c <main@@Base+0xb6e0>
   1ea84:	cmp	r2, #2
   1ea88:	mov	r2, #0
   1ea8c:	beq	1e900 <main@@Base+0xb544>
   1ea90:	b	1eac0 <main@@Base+0xb704>
   1ea94:	mov	r1, r6
   1ea98:	b	1eac0 <main@@Base+0xb704>
   1ea9c:	mov	r7, #0
   1eaa0:	cmp	r6, #4
   1eaa4:	bge	1e910 <main@@Base+0xb554>
   1eaa8:	b	1eac0 <main@@Base+0xb704>
   1eaac:	cmp	r1, #1
   1eab0:	mov	r0, #0
   1eab4:	mov	r1, #0
   1eab8:	beq	1ea14 <main@@Base+0xb658>
   1eabc:	mov	r1, r7
   1eac0:	mov	r0, r1
   1eac4:	sub	sp, fp, #28
   1eac8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1eacc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ead0:	add	fp, sp, #28
   1ead4:	sub	sp, sp, #44	; 0x2c
   1ead8:	mov	r6, r2
   1eadc:	ldr	r2, [fp, #8]
   1eae0:	mov	r5, r0
   1eae4:	mov	r0, #0
   1eae8:	mov	sl, r3
   1eaec:	cmp	r1, r6
   1eaf0:	strb	r0, [r2]
   1eaf4:	beq	1eb38 <main@@Base+0xb77c>
   1eaf8:	ldrb	r0, [r1]
   1eafc:	cmp	r0, #46	; 0x2e
   1eb00:	beq	1eb18 <main@@Base+0xb75c>
   1eb04:	cmp	r0, #34	; 0x22
   1eb08:	bne	1eb30 <main@@Base+0xb774>
   1eb0c:	mov	r0, #0
   1eb10:	add	r1, r1, #1
   1eb14:	b	1eb34 <main@@Base+0xb778>
   1eb18:	mov	r0, r5
   1eb1c:	mov	r2, r6
   1eb20:	mov	r3, #5
   1eb24:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   1eb28:	mov	r1, r0
   1eb2c:	b	1eb38 <main@@Base+0xb77c>
   1eb30:	mov	r0, #1
   1eb34:	str	r0, [r5, #12]
   1eb38:	ldr	r0, [r5, #12]
   1eb3c:	cmp	r0, #0
   1eb40:	beq	1eb54 <main@@Base+0xb798>
   1eb44:	mov	r7, r1
   1eb48:	cmp	r7, r6
   1eb4c:	bne	1eb98 <main@@Base+0xb7dc>
   1eb50:	b	1ecd8 <main@@Base+0xb91c>
   1eb54:	sub	r0, r6, r1
   1eb58:	cmp	r0, #2
   1eb5c:	blt	1eb80 <main@@Base+0xb7c4>
   1eb60:	ldrb	r0, [r1]
   1eb64:	cmp	r0, #32
   1eb68:	bhi	1eb44 <main@@Base+0xb788>
   1eb6c:	bne	1eb80 <main@@Base+0xb7c4>
   1eb70:	mov	r7, r1
   1eb74:	ldrb	r0, [r7, #1]!
   1eb78:	cmp	r0, #32
   1eb7c:	bhi	1eb90 <main@@Base+0xb7d4>
   1eb80:	mov	r0, r5
   1eb84:	mov	r2, r6
   1eb88:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1eb8c:	mov	r7, r0
   1eb90:	cmp	r7, r6
   1eb94:	beq	1ecd8 <main@@Base+0xb91c>
   1eb98:	add	r0, sl, #4
   1eb9c:	mov	r1, #0
   1eba0:	mov	r2, #0
   1eba4:	add	r8, sp, #32
   1eba8:	add	r9, sp, #28
   1ebac:	str	sl, [sp, #12]
   1ebb0:	str	r1, [sp, #20]
   1ebb4:	str	r0, [sp, #8]
   1ebb8:	ldr	r4, [sl]
   1ebbc:	mov	sl, r0
   1ebc0:	str	r2, [sp, #16]
   1ebc4:	add	r0, sp, #24
   1ebc8:	mov	r1, r7
   1ebcc:	mov	r2, r6
   1ebd0:	mov	r3, r9
   1ebd4:	str	r8, [sp]
   1ebd8:	str	r0, [sp, #4]
   1ebdc:	mov	r0, r5
   1ebe0:	blx	r4
   1ebe4:	cmp	r0, r6
   1ebe8:	beq	1ecd8 <main@@Base+0xb91c>
   1ebec:	mov	r4, r0
   1ebf0:	cmp	r0, r7
   1ebf4:	bne	1ec08 <main@@Base+0xb84c>
   1ebf8:	ldr	r4, [sl], #4
   1ebfc:	cmp	r4, #0
   1ec00:	bne	1ebc4 <main@@Base+0xb808>
   1ec04:	b	1ece0 <main@@Base+0xb924>
   1ec08:	ldr	r7, [sp, #20]
   1ec0c:	cmp	r7, #0
   1ec10:	beq	1ec20 <main@@Base+0xb864>
   1ec14:	ldr	r0, [r5, #12]
   1ec18:	cmp	r0, #0
   1ec1c:	bne	1ed04 <main@@Base+0xb948>
   1ec20:	ldr	r2, [sp, #28]
   1ec24:	ldr	r0, [sp, #32]
   1ec28:	ldr	r1, [sp, #36]	; 0x24
   1ec2c:	cmp	r2, #0
   1ec30:	beq	1ec58 <main@@Base+0xb89c>
   1ec34:	ldr	sl, [sp, #12]
   1ec38:	subs	r2, r0, #129	; 0x81
   1ec3c:	sbcs	r1, r1, #0
   1ec40:	bcc	1ec8c <main@@Base+0xb8d0>
   1ec44:	mov	r0, r5
   1ec48:	mov	r1, r4
   1ec4c:	mov	r2, r6
   1ec50:	mov	r3, #8
   1ec54:	b	1ec78 <main@@Base+0xb8bc>
   1ec58:	ldr	sl, [sp, #12]
   1ec5c:	subs	r2, r0, #128	; 0x80
   1ec60:	sbcs	r1, r1, #0
   1ec64:	bcc	1ec94 <main@@Base+0xb8d8>
   1ec68:	mov	r0, r5
   1ec6c:	mov	r1, r4
   1ec70:	mov	r2, r6
   1ec74:	mov	r3, #7
   1ec78:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   1ec7c:	ldr	r2, [sp, #16]
   1ec80:	cmp	r0, r6
   1ec84:	bne	1eca4 <main@@Base+0xb8e8>
   1ec88:	b	1ecd8 <main@@Base+0xb91c>
   1ec8c:	rsb	r2, r0, #0
   1ec90:	b	1ec98 <main@@Base+0xb8dc>
   1ec94:	mov	r2, r0
   1ec98:	mov	r0, r4
   1ec9c:	cmp	r0, r6
   1eca0:	beq	1ecd8 <main@@Base+0xb91c>
   1eca4:	ldr	r0, [fp, #8]
   1eca8:	add	r7, r7, #1
   1ecac:	str	r7, [sp, #20]
   1ecb0:	mov	r7, r4
   1ecb4:	mov	r1, r0
   1ecb8:	ldrb	r0, [r0]
   1ecbc:	add	r0, r0, r2
   1ecc0:	strb	r0, [r1]
   1ecc4:	ldr	r0, [sp, #24]
   1ecc8:	cmp	r0, #0
   1eccc:	ldr	r0, [sp, #8]
   1ecd0:	bne	1ebb8 <main@@Base+0xb7fc>
   1ecd4:	b	1ecf8 <main@@Base+0xb93c>
   1ecd8:	mov	r4, r6
   1ecdc:	b	1ecf8 <main@@Base+0xb93c>
   1ece0:	mov	r0, r5
   1ece4:	mov	r1, r7
   1ece8:	mov	r2, r6
   1ecec:	mov	r3, #23
   1ecf0:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   1ecf4:	mov	r4, r0
   1ecf8:	mov	r0, r4
   1ecfc:	sub	sp, fp, #28
   1ed00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ed04:	mov	r0, r5
   1ed08:	mov	r1, r4
   1ed0c:	mov	r2, r6
   1ed10:	mov	r3, #14
   1ed14:	b	1ecf0 <main@@Base+0xb934>
   1ed18:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ed1c:	add	fp, sp, #28
   1ed20:	sub	sp, sp, #44	; 0x2c
   1ed24:	mov	r6, r2
   1ed28:	ldr	r2, [fp, #8]
   1ed2c:	mov	r5, r0
   1ed30:	mov	r0, #0
   1ed34:	mov	sl, r3
   1ed38:	cmp	r1, r6
   1ed3c:	strb	r0, [r2]
   1ed40:	beq	1ed84 <main@@Base+0xb9c8>
   1ed44:	ldrb	r0, [r1]
   1ed48:	cmp	r0, #46	; 0x2e
   1ed4c:	beq	1ed64 <main@@Base+0xb9a8>
   1ed50:	cmp	r0, #34	; 0x22
   1ed54:	bne	1ed7c <main@@Base+0xb9c0>
   1ed58:	mov	r0, #0
   1ed5c:	add	r1, r1, #1
   1ed60:	b	1ed80 <main@@Base+0xb9c4>
   1ed64:	mov	r0, r5
   1ed68:	mov	r2, r6
   1ed6c:	mov	r3, #5
   1ed70:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   1ed74:	mov	r1, r0
   1ed78:	b	1ed84 <main@@Base+0xb9c8>
   1ed7c:	mov	r0, #1
   1ed80:	str	r0, [r5, #12]
   1ed84:	ldr	r0, [r5, #12]
   1ed88:	cmp	r0, #0
   1ed8c:	beq	1eda0 <main@@Base+0xb9e4>
   1ed90:	mov	r7, r1
   1ed94:	cmp	r7, r6
   1ed98:	bne	1ede4 <main@@Base+0xba28>
   1ed9c:	b	1ef1c <main@@Base+0xbb60>
   1eda0:	sub	r0, r6, r1
   1eda4:	cmp	r0, #2
   1eda8:	blt	1edcc <main@@Base+0xba10>
   1edac:	ldrb	r0, [r1]
   1edb0:	cmp	r0, #32
   1edb4:	bhi	1ed90 <main@@Base+0xb9d4>
   1edb8:	bne	1edcc <main@@Base+0xba10>
   1edbc:	mov	r7, r1
   1edc0:	ldrb	r0, [r7, #1]!
   1edc4:	cmp	r0, #32
   1edc8:	bhi	1eddc <main@@Base+0xba20>
   1edcc:	mov	r0, r5
   1edd0:	mov	r2, r6
   1edd4:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1edd8:	mov	r7, r0
   1eddc:	cmp	r7, r6
   1ede0:	beq	1ef1c <main@@Base+0xbb60>
   1ede4:	mov	r1, #0
   1ede8:	add	r0, sl, #4
   1edec:	add	r8, sp, #32
   1edf0:	add	r9, sp, #28
   1edf4:	str	sl, [sp, #12]
   1edf8:	str	r1, [sp, #16]
   1edfc:	mov	r1, #0
   1ee00:	str	r0, [sp, #8]
   1ee04:	str	r1, [sp, #20]
   1ee08:	ldr	r4, [sl]
   1ee0c:	mov	sl, r0
   1ee10:	add	r0, sp, #24
   1ee14:	mov	r1, r7
   1ee18:	mov	r2, r6
   1ee1c:	mov	r3, r9
   1ee20:	str	r8, [sp]
   1ee24:	str	r0, [sp, #4]
   1ee28:	mov	r0, r5
   1ee2c:	blx	r4
   1ee30:	cmp	r0, r6
   1ee34:	beq	1ef1c <main@@Base+0xbb60>
   1ee38:	mov	r4, r0
   1ee3c:	cmp	r0, r7
   1ee40:	bne	1ee54 <main@@Base+0xba98>
   1ee44:	ldr	r4, [sl], #4
   1ee48:	cmp	r4, #0
   1ee4c:	bne	1ee10 <main@@Base+0xba54>
   1ee50:	b	1ef24 <main@@Base+0xbb68>
   1ee54:	ldr	r7, [sp, #20]
   1ee58:	cmp	r7, #0
   1ee5c:	beq	1ee6c <main@@Base+0xbab0>
   1ee60:	ldr	r0, [r5, #12]
   1ee64:	cmp	r0, #0
   1ee68:	bne	1ef48 <main@@Base+0xbb8c>
   1ee6c:	ldr	r0, [sp, #28]
   1ee70:	cmp	r0, #0
   1ee74:	beq	1ee9c <main@@Base+0xbae0>
   1ee78:	mov	r0, r5
   1ee7c:	mov	r1, r4
   1ee80:	mov	r2, r6
   1ee84:	mov	r3, #8
   1ee88:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   1ee8c:	ldr	sl, [sp, #12]
   1ee90:	cmp	r0, r6
   1ee94:	bne	1eee4 <main@@Base+0xbb28>
   1ee98:	b	1ef1c <main@@Base+0xbb60>
   1ee9c:	ldr	r0, [sp, #32]
   1eea0:	ldr	r1, [sp, #36]	; 0x24
   1eea4:	ldr	sl, [sp, #12]
   1eea8:	subs	r2, r0, #256	; 0x100
   1eeac:	sbcs	r1, r1, #0
   1eeb0:	bcc	1eed4 <main@@Base+0xbb18>
   1eeb4:	mov	r0, r5
   1eeb8:	mov	r1, r4
   1eebc:	mov	r2, r6
   1eec0:	mov	r3, #7
   1eec4:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   1eec8:	cmp	r0, r6
   1eecc:	bne	1eee4 <main@@Base+0xbb28>
   1eed0:	b	1ef1c <main@@Base+0xbb60>
   1eed4:	str	r0, [sp, #16]
   1eed8:	mov	r0, r4
   1eedc:	cmp	r0, r6
   1eee0:	beq	1ef1c <main@@Base+0xbb60>
   1eee4:	ldr	r0, [fp, #8]
   1eee8:	ldr	r2, [sp, #16]
   1eeec:	add	r7, r7, #1
   1eef0:	str	r7, [sp, #20]
   1eef4:	mov	r7, r4
   1eef8:	mov	r1, r0
   1eefc:	ldrb	r0, [r0]
   1ef00:	add	r0, r0, r2
   1ef04:	strb	r0, [r1]
   1ef08:	ldr	r0, [sp, #24]
   1ef0c:	cmp	r0, #0
   1ef10:	ldr	r0, [sp, #8]
   1ef14:	bne	1ee08 <main@@Base+0xba4c>
   1ef18:	b	1ef3c <main@@Base+0xbb80>
   1ef1c:	mov	r4, r6
   1ef20:	b	1ef3c <main@@Base+0xbb80>
   1ef24:	mov	r0, r5
   1ef28:	mov	r1, r7
   1ef2c:	mov	r2, r6
   1ef30:	mov	r3, #23
   1ef34:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   1ef38:	mov	r4, r0
   1ef3c:	mov	r0, r4
   1ef40:	sub	sp, fp, #28
   1ef44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ef48:	mov	r0, r5
   1ef4c:	mov	r1, r4
   1ef50:	mov	r2, r6
   1ef54:	mov	r3, #14
   1ef58:	b	1ef34 <main@@Base+0xbb78>
   1ef5c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ef60:	add	fp, sp, #28
   1ef64:	sub	sp, sp, #44	; 0x2c
   1ef68:	mov	r6, r2
   1ef6c:	ldr	r2, [fp, #8]
   1ef70:	mov	r5, r0
   1ef74:	mov	r0, #0
   1ef78:	mov	sl, r3
   1ef7c:	cmp	r1, r6
   1ef80:	strh	r0, [r2]
   1ef84:	beq	1efc8 <main@@Base+0xbc0c>
   1ef88:	ldrb	r0, [r1]
   1ef8c:	cmp	r0, #46	; 0x2e
   1ef90:	beq	1efa8 <main@@Base+0xbbec>
   1ef94:	cmp	r0, #34	; 0x22
   1ef98:	bne	1efc0 <main@@Base+0xbc04>
   1ef9c:	mov	r0, #0
   1efa0:	add	r1, r1, #1
   1efa4:	b	1efc4 <main@@Base+0xbc08>
   1efa8:	mov	r0, r5
   1efac:	mov	r2, r6
   1efb0:	mov	r3, #5
   1efb4:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   1efb8:	mov	r1, r0
   1efbc:	b	1efc8 <main@@Base+0xbc0c>
   1efc0:	mov	r0, #1
   1efc4:	str	r0, [r5, #12]
   1efc8:	ldr	r0, [r5, #12]
   1efcc:	cmp	r0, #0
   1efd0:	beq	1efe4 <main@@Base+0xbc28>
   1efd4:	mov	r7, r1
   1efd8:	cmp	r7, r6
   1efdc:	bne	1f028 <main@@Base+0xbc6c>
   1efe0:	b	1f16c <main@@Base+0xbdb0>
   1efe4:	sub	r0, r6, r1
   1efe8:	cmp	r0, #2
   1efec:	blt	1f010 <main@@Base+0xbc54>
   1eff0:	ldrb	r0, [r1]
   1eff4:	cmp	r0, #32
   1eff8:	bhi	1efd4 <main@@Base+0xbc18>
   1effc:	bne	1f010 <main@@Base+0xbc54>
   1f000:	mov	r7, r1
   1f004:	ldrb	r0, [r7, #1]!
   1f008:	cmp	r0, #32
   1f00c:	bhi	1f020 <main@@Base+0xbc64>
   1f010:	mov	r0, r5
   1f014:	mov	r2, r6
   1f018:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1f01c:	mov	r7, r0
   1f020:	cmp	r7, r6
   1f024:	beq	1f16c <main@@Base+0xbdb0>
   1f028:	add	r0, sl, #4
   1f02c:	mov	r1, #0
   1f030:	mov	r2, #0
   1f034:	add	r8, sp, #32
   1f038:	add	r9, sp, #28
   1f03c:	str	sl, [sp, #12]
   1f040:	str	r1, [sp, #20]
   1f044:	str	r0, [sp, #8]
   1f048:	ldr	r4, [sl]
   1f04c:	mov	sl, r0
   1f050:	str	r2, [sp, #16]
   1f054:	add	r0, sp, #24
   1f058:	mov	r1, r7
   1f05c:	mov	r2, r6
   1f060:	mov	r3, r9
   1f064:	str	r8, [sp]
   1f068:	str	r0, [sp, #4]
   1f06c:	mov	r0, r5
   1f070:	blx	r4
   1f074:	cmp	r0, r6
   1f078:	beq	1f16c <main@@Base+0xbdb0>
   1f07c:	mov	r4, r0
   1f080:	cmp	r0, r7
   1f084:	bne	1f098 <main@@Base+0xbcdc>
   1f088:	ldr	r4, [sl], #4
   1f08c:	cmp	r4, #0
   1f090:	bne	1f054 <main@@Base+0xbc98>
   1f094:	b	1f174 <main@@Base+0xbdb8>
   1f098:	ldr	r7, [sp, #20]
   1f09c:	cmp	r7, #0
   1f0a0:	beq	1f0b0 <main@@Base+0xbcf4>
   1f0a4:	ldr	r0, [r5, #12]
   1f0a8:	cmp	r0, #0
   1f0ac:	bne	1f198 <main@@Base+0xbddc>
   1f0b0:	ldr	r2, [sp, #28]
   1f0b4:	ldr	r0, [sp, #32]
   1f0b8:	ldr	r1, [sp, #36]	; 0x24
   1f0bc:	cmp	r2, #0
   1f0c0:	beq	1f0ec <main@@Base+0xbd30>
   1f0c4:	ldr	sl, [sp, #12]
   1f0c8:	movw	r2, #32769	; 0x8001
   1f0cc:	subs	r2, r0, r2
   1f0d0:	sbcs	r1, r1, #0
   1f0d4:	bcc	1f120 <main@@Base+0xbd64>
   1f0d8:	mov	r0, r5
   1f0dc:	mov	r1, r4
   1f0e0:	mov	r2, r6
   1f0e4:	mov	r3, #8
   1f0e8:	b	1f10c <main@@Base+0xbd50>
   1f0ec:	ldr	sl, [sp, #12]
   1f0f0:	subs	r2, r0, #32768	; 0x8000
   1f0f4:	sbcs	r1, r1, #0
   1f0f8:	bcc	1f128 <main@@Base+0xbd6c>
   1f0fc:	mov	r0, r5
   1f100:	mov	r1, r4
   1f104:	mov	r2, r6
   1f108:	mov	r3, #7
   1f10c:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   1f110:	ldr	r2, [sp, #16]
   1f114:	cmp	r0, r6
   1f118:	bne	1f138 <main@@Base+0xbd7c>
   1f11c:	b	1f16c <main@@Base+0xbdb0>
   1f120:	rsb	r2, r0, #0
   1f124:	b	1f12c <main@@Base+0xbd70>
   1f128:	mov	r2, r0
   1f12c:	mov	r0, r4
   1f130:	cmp	r0, r6
   1f134:	beq	1f16c <main@@Base+0xbdb0>
   1f138:	ldr	r0, [fp, #8]
   1f13c:	add	r7, r7, #1
   1f140:	str	r7, [sp, #20]
   1f144:	mov	r7, r4
   1f148:	mov	r1, r0
   1f14c:	ldrh	r0, [r0]
   1f150:	add	r0, r0, r2
   1f154:	strh	r0, [r1]
   1f158:	ldr	r0, [sp, #24]
   1f15c:	cmp	r0, #0
   1f160:	ldr	r0, [sp, #8]
   1f164:	bne	1f048 <main@@Base+0xbc8c>
   1f168:	b	1f18c <main@@Base+0xbdd0>
   1f16c:	mov	r4, r6
   1f170:	b	1f18c <main@@Base+0xbdd0>
   1f174:	mov	r0, r5
   1f178:	mov	r1, r7
   1f17c:	mov	r2, r6
   1f180:	mov	r3, #23
   1f184:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   1f188:	mov	r4, r0
   1f18c:	mov	r0, r4
   1f190:	sub	sp, fp, #28
   1f194:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f198:	mov	r0, r5
   1f19c:	mov	r1, r4
   1f1a0:	mov	r2, r6
   1f1a4:	mov	r3, #14
   1f1a8:	b	1f184 <main@@Base+0xbdc8>
   1f1ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f1b0:	add	fp, sp, #28
   1f1b4:	sub	sp, sp, #28
   1f1b8:	mov	r7, r2
   1f1bc:	mov	r5, r0
   1f1c0:	cmp	r1, r2
   1f1c4:	beq	1f1fc <main@@Base+0xbe40>
   1f1c8:	ldrb	r0, [r1]
   1f1cc:	cmp	r0, #123	; 0x7b
   1f1d0:	bne	1f1fc <main@@Base+0xbe40>
   1f1d4:	add	r2, r1, #1
   1f1d8:	mov	r9, r3
   1f1dc:	sub	r0, r7, r2
   1f1e0:	cmp	r0, #2
   1f1e4:	blt	1f224 <main@@Base+0xbe68>
   1f1e8:	ldrb	r0, [r2]
   1f1ec:	cmp	r0, #32
   1f1f0:	bls	1f214 <main@@Base+0xbe58>
   1f1f4:	mov	r1, r2
   1f1f8:	b	1f238 <main@@Base+0xbe7c>
   1f1fc:	mov	r0, r5
   1f200:	mov	r2, r7
   1f204:	mov	r3, #21
   1f208:	sub	sp, fp, #28
   1f20c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f210:	b	2efd0 <flatcc_json_parser_set_error@@Base>
   1f214:	bne	1f224 <main@@Base+0xbe68>
   1f218:	ldrb	r0, [r1, #2]!
   1f21c:	cmp	r0, #32
   1f220:	bhi	1f238 <main@@Base+0xbe7c>
   1f224:	mov	r1, r2
   1f228:	mov	r0, r5
   1f22c:	mov	r2, r7
   1f230:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1f234:	mov	r1, r0
   1f238:	cmp	r1, r7
   1f23c:	mov	r2, r7
   1f240:	beq	1f278 <main@@Base+0xbebc>
   1f244:	ldrb	r0, [r1]
   1f248:	cmp	r0, #125	; 0x7d
   1f24c:	bne	1f274 <main@@Base+0xbeb8>
   1f250:	add	r2, r1, #1
   1f254:	sub	r0, r7, r2
   1f258:	cmp	r0, #2
   1f25c:	blt	1f8a0 <main@@Base+0xc4e4>
   1f260:	ldrb	r0, [r2]
   1f264:	cmp	r0, #32
   1f268:	bls	1f890 <main@@Base+0xc4d4>
   1f26c:	mov	r1, r2
   1f270:	b	1f8f8 <main@@Base+0xc53c>
   1f274:	mov	r2, r1
   1f278:	mov	sl, #1627389952	; 0x61000000
   1f27c:	cmp	r2, r7
   1f280:	mov	r4, r7
   1f284:	beq	1f2d0 <main@@Base+0xbf14>
   1f288:	ldrb	r0, [r2]
   1f28c:	cmp	r0, #46	; 0x2e
   1f290:	beq	1f2a8 <main@@Base+0xbeec>
   1f294:	cmp	r0, #34	; 0x22
   1f298:	bne	1f2c4 <main@@Base+0xbf08>
   1f29c:	mov	r0, #0
   1f2a0:	add	r4, r2, #1
   1f2a4:	b	1f2cc <main@@Base+0xbf10>
   1f2a8:	mov	r1, r2
   1f2ac:	mov	r0, r5
   1f2b0:	mov	r2, r7
   1f2b4:	mov	r3, #5
   1f2b8:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   1f2bc:	mov	r4, r0
   1f2c0:	b	1f2d0 <main@@Base+0xbf14>
   1f2c4:	mov	r0, #1
   1f2c8:	mov	r4, r2
   1f2cc:	str	r0, [r5, #12]
   1f2d0:	sub	r0, r7, r4
   1f2d4:	mov	r1, #8
   1f2d8:	cmp	r0, #8
   1f2dc:	movcc	r1, r0
   1f2e0:	sub	r1, r1, #1
   1f2e4:	cmp	r1, #7
   1f2e8:	bhi	1f6c8 <main@@Base+0xc30c>
   1f2ec:	ldrb	r1, [r4]
   1f2f0:	teq	sl, r1, lsl #24
   1f2f4:	beq	1f344 <main@@Base+0xbf88>
   1f2f8:	lsl	r1, r1, #24
   1f2fc:	teq	r1, #1644167168	; 0x62000000
   1f300:	bne	1f6c8 <main@@Base+0xc30c>
   1f304:	cmp	r0, #2
   1f308:	mov	r8, r4
   1f30c:	blt	1f50c <main@@Base+0xc150>
   1f310:	mov	r1, r4
   1f314:	ldr	r2, [r5, #12]
   1f318:	ldrb	r0, [r1, #1]!
   1f31c:	cmp	r2, #0
   1f320:	beq	1f384 <main@@Base+0xbfc8>
   1f324:	cmp	r0, #33	; 0x21
   1f328:	bcc	1f338 <main@@Base+0xbf7c>
   1f32c:	cmp	r0, #58	; 0x3a
   1f330:	mov	r8, r4
   1f334:	bne	1f50c <main@@Base+0xc150>
   1f338:	mov	r0, #0
   1f33c:	str	r0, [r5, #12]
   1f340:	b	1f394 <main@@Base+0xbfd8>
   1f344:	cmp	r0, #2
   1f348:	mov	r6, r4
   1f34c:	blt	1f648 <main@@Base+0xc28c>
   1f350:	mov	r1, r4
   1f354:	ldr	r2, [r5, #12]
   1f358:	ldrb	r0, [r1, #1]!
   1f35c:	cmp	r2, #0
   1f360:	beq	1f3bc <main@@Base+0xc000>
   1f364:	cmp	r0, #33	; 0x21
   1f368:	bcc	1f378 <main@@Base+0xbfbc>
   1f36c:	cmp	r0, #58	; 0x3a
   1f370:	mov	r6, r4
   1f374:	bne	1f648 <main@@Base+0xc28c>
   1f378:	mov	r0, #0
   1f37c:	str	r0, [r5, #12]
   1f380:	b	1f3cc <main@@Base+0xc010>
   1f384:	cmp	r0, #34	; 0x22
   1f388:	mov	r8, r4
   1f38c:	bne	1f50c <main@@Base+0xc150>
   1f390:	add	r1, r4, #2
   1f394:	sub	r0, r7, r1
   1f398:	cmp	r0, #2
   1f39c:	blt	1f408 <main@@Base+0xc04c>
   1f3a0:	ldrb	r0, [r1]
   1f3a4:	cmp	r0, #32
   1f3a8:	bls	1f3f4 <main@@Base+0xc038>
   1f3ac:	mov	r8, r1
   1f3b0:	cmp	r8, r7
   1f3b4:	bne	1f420 <main@@Base+0xc064>
   1f3b8:	b	1f458 <main@@Base+0xc09c>
   1f3bc:	cmp	r0, #34	; 0x22
   1f3c0:	mov	r6, r4
   1f3c4:	bne	1f648 <main@@Base+0xc28c>
   1f3c8:	add	r1, r4, #2
   1f3cc:	sub	r0, r7, r1
   1f3d0:	cmp	r0, #2
   1f3d4:	blt	1f484 <main@@Base+0xc0c8>
   1f3d8:	ldrb	r0, [r1]
   1f3dc:	cmp	r0, #32
   1f3e0:	bls	1f470 <main@@Base+0xc0b4>
   1f3e4:	mov	r6, r1
   1f3e8:	cmp	r6, r7
   1f3ec:	bne	1f49c <main@@Base+0xc0e0>
   1f3f0:	b	1f4d4 <main@@Base+0xc118>
   1f3f4:	bne	1f408 <main@@Base+0xc04c>
   1f3f8:	mov	r8, r1
   1f3fc:	ldrb	r0, [r8, #1]!
   1f400:	cmp	r0, #32
   1f404:	bhi	1f418 <main@@Base+0xc05c>
   1f408:	mov	r0, r5
   1f40c:	mov	r2, r7
   1f410:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1f414:	mov	r8, r0
   1f418:	cmp	r8, r7
   1f41c:	beq	1f458 <main@@Base+0xc09c>
   1f420:	ldrb	r0, [r8]
   1f424:	cmp	r0, #58	; 0x3a
   1f428:	bne	1f458 <main@@Base+0xc09c>
   1f42c:	add	r1, r8, #1
   1f430:	sub	r0, r7, r1
   1f434:	cmp	r0, #2
   1f438:	blt	1f4fc <main@@Base+0xc140>
   1f43c:	ldrb	r0, [r1]
   1f440:	cmp	r0, #32
   1f444:	bls	1f4ec <main@@Base+0xc130>
   1f448:	mov	r8, r1
   1f44c:	cmp	r4, r8
   1f450:	bne	1f514 <main@@Base+0xc158>
   1f454:	b	1f6c8 <main@@Base+0xc30c>
   1f458:	mov	r0, r5
   1f45c:	mov	r1, r8
   1f460:	mov	r2, r7
   1f464:	mov	r3, #4
   1f468:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   1f46c:	b	1f508 <main@@Base+0xc14c>
   1f470:	bne	1f484 <main@@Base+0xc0c8>
   1f474:	mov	r6, r1
   1f478:	ldrb	r0, [r6, #1]!
   1f47c:	cmp	r0, #32
   1f480:	bhi	1f494 <main@@Base+0xc0d8>
   1f484:	mov	r0, r5
   1f488:	mov	r2, r7
   1f48c:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1f490:	mov	r6, r0
   1f494:	cmp	r6, r7
   1f498:	beq	1f4d4 <main@@Base+0xc118>
   1f49c:	ldrb	r0, [r6]
   1f4a0:	cmp	r0, #58	; 0x3a
   1f4a4:	bne	1f4d4 <main@@Base+0xc118>
   1f4a8:	add	r1, r6, #1
   1f4ac:	sub	r0, r7, r1
   1f4b0:	cmp	r0, #2
   1f4b4:	blt	1f638 <main@@Base+0xc27c>
   1f4b8:	ldrb	r0, [r1]
   1f4bc:	cmp	r0, #32
   1f4c0:	bls	1f628 <main@@Base+0xc26c>
   1f4c4:	mov	r6, r1
   1f4c8:	cmp	r4, r6
   1f4cc:	bne	1f650 <main@@Base+0xc294>
   1f4d0:	b	1f6c8 <main@@Base+0xc30c>
   1f4d4:	mov	r0, r5
   1f4d8:	mov	r1, r6
   1f4dc:	mov	r2, r7
   1f4e0:	mov	r3, #4
   1f4e4:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   1f4e8:	b	1f644 <main@@Base+0xc288>
   1f4ec:	bne	1f4fc <main@@Base+0xc140>
   1f4f0:	ldrb	r0, [r8, #2]!
   1f4f4:	cmp	r0, #32
   1f4f8:	bhi	1f50c <main@@Base+0xc150>
   1f4fc:	mov	r0, r5
   1f500:	mov	r2, r7
   1f504:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1f508:	mov	r8, r0
   1f50c:	cmp	r4, r8
   1f510:	beq	1f6c8 <main@@Base+0xc30c>
   1f514:	mov	r4, #0
   1f518:	cmp	r8, r7
   1f51c:	str	r4, [sp, #20]
   1f520:	str	r4, [sp, #16]
   1f524:	strb	r4, [sp, #10]
   1f528:	str	r4, [sp, #12]
   1f52c:	beq	1f588 <main@@Base+0xc1cc>
   1f530:	add	r0, sp, #16
   1f534:	mov	r1, r8
   1f538:	mov	r2, r7
   1f53c:	add	r3, sp, #12
   1f540:	str	r0, [sp]
   1f544:	mov	r0, r5
   1f548:	bl	3132c <flatcc_json_parser_integer@@Base>
   1f54c:	cmp	r0, r8
   1f550:	beq	1f598 <main@@Base+0xc1dc>
   1f554:	ldr	r3, [sp, #12]
   1f558:	mov	r1, r0
   1f55c:	ldr	r0, [sp, #16]
   1f560:	ldr	r2, [sp, #20]
   1f564:	cmp	r3, #0
   1f568:	beq	1f5a8 <main@@Base+0xc1ec>
   1f56c:	subs	r3, r0, #129	; 0x81
   1f570:	sbcs	r2, r2, #0
   1f574:	bcc	1f5d4 <main@@Base+0xc218>
   1f578:	mov	r0, r5
   1f57c:	mov	r2, r7
   1f580:	mov	r3, #8
   1f584:	b	1f5c0 <main@@Base+0xc204>
   1f588:	mov	r1, r7
   1f58c:	cmp	r8, r1
   1f590:	bne	1f620 <main@@Base+0xc264>
   1f594:	b	1f5ec <main@@Base+0xc230>
   1f598:	mov	r1, r8
   1f59c:	cmp	r8, r1
   1f5a0:	bne	1f620 <main@@Base+0xc264>
   1f5a4:	b	1f5ec <main@@Base+0xc230>
   1f5a8:	subs	r3, r0, #128	; 0x80
   1f5ac:	sbcs	r2, r2, #0
   1f5b0:	bcc	1f5dc <main@@Base+0xc220>
   1f5b4:	mov	r0, r5
   1f5b8:	mov	r2, r7
   1f5bc:	mov	r3, #7
   1f5c0:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   1f5c4:	mov	r1, r0
   1f5c8:	cmp	r8, r1
   1f5cc:	bne	1f620 <main@@Base+0xc264>
   1f5d0:	b	1f5ec <main@@Base+0xc230>
   1f5d4:	rsb	r4, r0, #0
   1f5d8:	b	1f5e0 <main@@Base+0xc224>
   1f5dc:	mov	r4, r0
   1f5e0:	strb	r4, [sp, #10]
   1f5e4:	cmp	r8, r1
   1f5e8:	bne	1f620 <main@@Base+0xc264>
   1f5ec:	add	r0, sp, #10
   1f5f0:	mov	r1, r8
   1f5f4:	mov	r2, r7
   1f5f8:	str	r0, [sp]
   1f5fc:	mov	r0, r5
   1f600:	ldr	r3, [pc, #764]	; 1f904 <main@@Base+0xc548>
   1f604:	add	r3, pc, r3
   1f608:	bl	1eacc <main@@Base+0xb710>
   1f60c:	mov	r1, r0
   1f610:	cmp	r0, r8
   1f614:	cmpne	r1, r7
   1f618:	beq	1f840 <main@@Base+0xc484>
   1f61c:	ldrb	r4, [sp, #10]
   1f620:	strb	r4, [r9, #2]
   1f624:	b	1f6dc <main@@Base+0xc320>
   1f628:	bne	1f638 <main@@Base+0xc27c>
   1f62c:	ldrb	r0, [r6, #2]!
   1f630:	cmp	r0, #32
   1f634:	bhi	1f648 <main@@Base+0xc28c>
   1f638:	mov	r0, r5
   1f63c:	mov	r2, r7
   1f640:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1f644:	mov	r6, r0
   1f648:	cmp	r4, r6
   1f64c:	beq	1f6c8 <main@@Base+0xc30c>
   1f650:	mov	r4, #0
   1f654:	cmp	r6, r7
   1f658:	str	r4, [sp, #20]
   1f65c:	str	r4, [sp, #16]
   1f660:	strh	r4, [sp, #10]
   1f664:	str	r4, [sp, #12]
   1f668:	beq	1f7a0 <main@@Base+0xc3e4>
   1f66c:	add	r0, sp, #16
   1f670:	mov	r1, r6
   1f674:	mov	r2, r7
   1f678:	add	r3, sp, #12
   1f67c:	str	r0, [sp]
   1f680:	mov	r0, r5
   1f684:	bl	3132c <flatcc_json_parser_integer@@Base>
   1f688:	cmp	r0, r6
   1f68c:	beq	1f7b0 <main@@Base+0xc3f4>
   1f690:	ldr	r3, [sp, #12]
   1f694:	mov	r1, r0
   1f698:	ldr	r0, [sp, #16]
   1f69c:	ldr	r2, [sp, #20]
   1f6a0:	cmp	r3, #0
   1f6a4:	beq	1f7c0 <main@@Base+0xc404>
   1f6a8:	movw	r3, #32769	; 0x8001
   1f6ac:	subs	r3, r0, r3
   1f6b0:	sbcs	r2, r2, #0
   1f6b4:	bcc	1f7ec <main@@Base+0xc430>
   1f6b8:	mov	r0, r5
   1f6bc:	mov	r2, r7
   1f6c0:	mov	r3, #8
   1f6c4:	b	1f7d8 <main@@Base+0xc41c>
   1f6c8:	mov	r0, r5
   1f6cc:	mov	r1, r4
   1f6d0:	mov	r2, r7
   1f6d4:	bl	2f87c <flatcc_json_parser_unmatched_symbol@@Base>
   1f6d8:	mov	r1, r0
   1f6dc:	sub	r0, r7, r1
   1f6e0:	cmp	r0, #2
   1f6e4:	blt	1f718 <main@@Base+0xc35c>
   1f6e8:	ldrb	r0, [r1]
   1f6ec:	cmp	r0, #32
   1f6f0:	bls	1f704 <main@@Base+0xc348>
   1f6f4:	mov	r2, r1
   1f6f8:	cmp	r2, r7
   1f6fc:	bne	1f730 <main@@Base+0xc374>
   1f700:	b	1f850 <main@@Base+0xc494>
   1f704:	bne	1f718 <main@@Base+0xc35c>
   1f708:	mov	r2, r1
   1f70c:	ldrb	r0, [r2, #1]!
   1f710:	cmp	r0, #32
   1f714:	bhi	1f728 <main@@Base+0xc36c>
   1f718:	mov	r0, r5
   1f71c:	mov	r2, r7
   1f720:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1f724:	mov	r2, r0
   1f728:	cmp	r2, r7
   1f72c:	beq	1f850 <main@@Base+0xc494>
   1f730:	ldrb	r0, [r2]
   1f734:	cmp	r0, #44	; 0x2c
   1f738:	bne	1f858 <main@@Base+0xc49c>
   1f73c:	add	r1, r2, #1
   1f740:	sub	r0, r7, r1
   1f744:	cmp	r0, #2
   1f748:	blt	1f778 <main@@Base+0xc3bc>
   1f74c:	ldrb	r0, [r1]
   1f750:	cmp	r0, #32
   1f754:	bls	1f768 <main@@Base+0xc3ac>
   1f758:	mov	r2, r1
   1f75c:	cmp	r2, r7
   1f760:	bne	1f790 <main@@Base+0xc3d4>
   1f764:	b	1f884 <main@@Base+0xc4c8>
   1f768:	bne	1f778 <main@@Base+0xc3bc>
   1f76c:	ldrb	r0, [r2, #2]!
   1f770:	cmp	r0, #32
   1f774:	bhi	1f788 <main@@Base+0xc3cc>
   1f778:	mov	r0, r5
   1f77c:	mov	r2, r7
   1f780:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1f784:	mov	r2, r0
   1f788:	cmp	r2, r7
   1f78c:	beq	1f884 <main@@Base+0xc4c8>
   1f790:	ldrb	r0, [r2]
   1f794:	cmp	r0, #125	; 0x7d
   1f798:	bne	1f27c <main@@Base+0xbec0>
   1f79c:	b	1f860 <main@@Base+0xc4a4>
   1f7a0:	mov	r1, r7
   1f7a4:	cmp	r6, r1
   1f7a8:	bne	1f838 <main@@Base+0xc47c>
   1f7ac:	b	1f804 <main@@Base+0xc448>
   1f7b0:	mov	r1, r6
   1f7b4:	cmp	r6, r1
   1f7b8:	bne	1f838 <main@@Base+0xc47c>
   1f7bc:	b	1f804 <main@@Base+0xc448>
   1f7c0:	subs	r3, r0, #32768	; 0x8000
   1f7c4:	sbcs	r2, r2, #0
   1f7c8:	bcc	1f7f4 <main@@Base+0xc438>
   1f7cc:	mov	r0, r5
   1f7d0:	mov	r2, r7
   1f7d4:	mov	r3, #7
   1f7d8:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   1f7dc:	mov	r1, r0
   1f7e0:	cmp	r6, r1
   1f7e4:	bne	1f838 <main@@Base+0xc47c>
   1f7e8:	b	1f804 <main@@Base+0xc448>
   1f7ec:	rsb	r4, r0, #0
   1f7f0:	b	1f7f8 <main@@Base+0xc43c>
   1f7f4:	mov	r4, r0
   1f7f8:	strh	r4, [sp, #10]
   1f7fc:	cmp	r6, r1
   1f800:	bne	1f838 <main@@Base+0xc47c>
   1f804:	add	r0, sp, #10
   1f808:	mov	r1, r6
   1f80c:	mov	r2, r7
   1f810:	str	r0, [sp]
   1f814:	mov	r0, r5
   1f818:	ldr	r3, [pc, #232]	; 1f908 <main@@Base+0xc54c>
   1f81c:	add	r3, pc, r3
   1f820:	bl	1ef5c <main@@Base+0xbba0>
   1f824:	mov	r1, r0
   1f828:	cmp	r0, r6
   1f82c:	cmpne	r1, r7
   1f830:	beq	1f840 <main@@Base+0xc484>
   1f834:	ldrh	r4, [sp, #10]
   1f838:	strh	r4, [r9]
   1f83c:	b	1f6dc <main@@Base+0xc320>
   1f840:	mov	r0, r5
   1f844:	mov	r2, r7
   1f848:	mov	r3, #33	; 0x21
   1f84c:	b	1f8c8 <main@@Base+0xc50c>
   1f850:	mov	r1, r7
   1f854:	b	1f8f8 <main@@Base+0xc53c>
   1f858:	cmp	r0, #125	; 0x7d
   1f85c:	bne	1f8b8 <main@@Base+0xc4fc>
   1f860:	add	r3, r2, #1
   1f864:	sub	r0, r7, r3
   1f868:	cmp	r0, #2
   1f86c:	blt	1f8e4 <main@@Base+0xc528>
   1f870:	ldrb	r0, [r3]
   1f874:	cmp	r0, #32
   1f878:	bls	1f8d0 <main@@Base+0xc514>
   1f87c:	mov	r1, r3
   1f880:	b	1f8f8 <main@@Base+0xc53c>
   1f884:	mov	r0, r5
   1f888:	mov	r1, r7
   1f88c:	b	1f8c0 <main@@Base+0xc504>
   1f890:	bne	1f8a0 <main@@Base+0xc4e4>
   1f894:	ldrb	r0, [r1, #2]!
   1f898:	cmp	r0, #32
   1f89c:	bhi	1f8f8 <main@@Base+0xc53c>
   1f8a0:	mov	r1, r2
   1f8a4:	mov	r0, r5
   1f8a8:	mov	r2, r7
   1f8ac:	sub	sp, fp, #28
   1f8b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f8b4:	b	2f080 <flatcc_json_parser_space_ext@@Base>
   1f8b8:	mov	r0, r5
   1f8bc:	mov	r1, r2
   1f8c0:	mov	r2, r7
   1f8c4:	mov	r3, #10
   1f8c8:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   1f8cc:	b	1f8f4 <main@@Base+0xc538>
   1f8d0:	bne	1f8e4 <main@@Base+0xc528>
   1f8d4:	ldrb	r0, [r2, #2]!
   1f8d8:	mov	r1, r2
   1f8dc:	cmp	r0, #32
   1f8e0:	bhi	1f8f8 <main@@Base+0xc53c>
   1f8e4:	mov	r0, r5
   1f8e8:	mov	r1, r3
   1f8ec:	mov	r2, r7
   1f8f0:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1f8f4:	mov	r1, r0
   1f8f8:	mov	r0, r1
   1f8fc:	sub	sp, fp, #28
   1f900:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f904:	andeq	r6, r2, r0, ror #23
   1f908:	ldrdeq	r6, [r2], -r4
   1f90c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f910:	add	fp, sp, #28
   1f914:	sub	sp, sp, #68	; 0x44
   1f918:	ldr	r9, [fp, #8]
   1f91c:	mov	r5, r0
   1f920:	mov	r0, #0
   1f924:	mov	r8, r2
   1f928:	mov	r4, r1
   1f92c:	cmp	r3, #4
   1f930:	str	r0, [r9]
   1f934:	bhi	1f994 <main@@Base+0xc5d8>
   1f938:	add	r0, pc, #4
   1f93c:	ldr	r1, [r0, r3, lsl #2]
   1f940:	add	pc, r0, r1
   1f944:	andeq	r0, r0, r4, lsl r0
   1f948:	andeq	r0, r0, r8, ror r0
   1f94c:	muleq	r0, r0, r0
   1f950:	andeq	r0, r0, r4, ror #1
   1f954:	andeq	r0, r0, r8, lsr r1
   1f958:	sub	r0, r8, r4
   1f95c:	cmp	r0, #4
   1f960:	blt	1f980 <main@@Base+0xc5c4>
   1f964:	ldr	r1, [pc, #4072]	; 20954 <main@@Base+0xd598>
   1f968:	mov	r0, r4
   1f96c:	mov	r2, #4
   1f970:	add	r1, pc, r1
   1f974:	bl	12b2c <bcmp@plt>
   1f978:	cmp	r0, #0
   1f97c:	beq	1fb34 <main@@Base+0xc778>
   1f980:	mov	r0, r5
   1f984:	mov	r1, r4
   1f988:	mov	r2, r8
   1f98c:	mov	r3, #26
   1f990:	b	1f9b0 <main@@Base+0xc5f4>
   1f994:	ldrb	r0, [r5, #8]
   1f998:	tst	r0, #1
   1f99c:	bne	1fb1c <main@@Base+0xc760>
   1f9a0:	mov	r0, r5
   1f9a4:	mov	r1, r4
   1f9a8:	mov	r2, r8
   1f9ac:	mov	r3, #15
   1f9b0:	sub	sp, fp, #28
   1f9b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f9b8:	b	2efd0 <flatcc_json_parser_set_error@@Base>
   1f9bc:	mov	r0, r5
   1f9c0:	mov	r1, r4
   1f9c4:	mov	r2, r8
   1f9c8:	mov	r3, r9
   1f9cc:	bl	13448 <main@@Base+0x8c>
   1f9d0:	b	22ac4 <main@@Base+0xf708>
   1f9d4:	mov	r0, #0
   1f9d8:	mov	r1, #4
   1f9dc:	str	r0, [r9]
   1f9e0:	ldr	r0, [r5]
   1f9e4:	bl	2bc04 <flatcc_builder_start_table@@Base>
   1f9e8:	cmp	r0, #0
   1f9ec:	bne	22ab0 <main@@Base+0xf6f4>
   1f9f0:	cmp	r4, r8
   1f9f4:	beq	1faf4 <main@@Base+0xc738>
   1f9f8:	ldrb	r0, [r4]
   1f9fc:	cmp	r0, #123	; 0x7b
   1fa00:	bne	1faf4 <main@@Base+0xc738>
   1fa04:	add	r1, r4, #1
   1fa08:	sub	r0, r8, r1
   1fa0c:	cmp	r0, #2
   1fa10:	blt	1fba0 <main@@Base+0xc7e4>
   1fa14:	ldrb	r0, [r1]
   1fa18:	cmp	r0, #32
   1fa1c:	bls	1fb90 <main@@Base+0xc7d4>
   1fa20:	mov	r4, r1
   1fa24:	b	1fbb0 <main@@Base+0xc7f4>
   1fa28:	mov	r0, #0
   1fa2c:	mov	r1, #0
   1fa30:	str	r0, [r9]
   1fa34:	ldr	r0, [r5]
   1fa38:	bl	2bc04 <flatcc_builder_start_table@@Base>
   1fa3c:	cmp	r0, #0
   1fa40:	bne	22ab0 <main@@Base+0xf6f4>
   1fa44:	cmp	r4, r8
   1fa48:	beq	1faf4 <main@@Base+0xc738>
   1fa4c:	ldrb	r0, [r4]
   1fa50:	cmp	r0, #123	; 0x7b
   1fa54:	bne	1faf4 <main@@Base+0xc738>
   1fa58:	add	r1, r4, #1
   1fa5c:	sub	r0, r8, r1
   1fa60:	cmp	r0, #2
   1fa64:	blt	207bc <main@@Base+0xd400>
   1fa68:	ldrb	r0, [r1]
   1fa6c:	cmp	r0, #32
   1fa70:	bls	207ac <main@@Base+0xd3f0>
   1fa74:	mov	r4, r1
   1fa78:	b	207cc <main@@Base+0xd410>
   1fa7c:	mov	r0, #0
   1fa80:	mov	r1, #4
   1fa84:	str	r0, [r9]
   1fa88:	ldr	r0, [r5]
   1fa8c:	bl	2bc04 <flatcc_builder_start_table@@Base>
   1fa90:	cmp	r0, #0
   1fa94:	bne	22ab0 <main@@Base+0xf6f4>
   1fa98:	sub	r0, fp, #36	; 0x24
   1fa9c:	mov	r1, r4
   1faa0:	mov	r2, r8
   1faa4:	mov	r3, #1
   1faa8:	str	r0, [sp]
   1faac:	mov	r0, r5
   1fab0:	bl	31bac <flatcc_json_parser_prepare_unions@@Base>
   1fab4:	cmp	r0, r8
   1fab8:	beq	22ab0 <main@@Base+0xf6f4>
   1fabc:	cmp	r4, r8
   1fac0:	beq	1fb3c <main@@Base+0xc780>
   1fac4:	ldrb	r0, [r4]
   1fac8:	cmp	r0, #123	; 0x7b
   1facc:	bne	1fb3c <main@@Base+0xc780>
   1fad0:	add	r1, r4, #1
   1fad4:	sub	r0, r8, r1
   1fad8:	cmp	r0, #2
   1fadc:	blt	209a4 <main@@Base+0xd5e8>
   1fae0:	ldrb	r0, [r1]
   1fae4:	cmp	r0, #32
   1fae8:	bls	20994 <main@@Base+0xd5d8>
   1faec:	mov	r4, r1
   1faf0:	b	209b4 <main@@Base+0xd5f8>
   1faf4:	mov	r0, r5
   1faf8:	mov	r1, r4
   1fafc:	mov	r2, r8
   1fb00:	mov	r3, #21
   1fb04:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   1fb08:	mov	r4, r0
   1fb0c:	ldr	r0, [r5, #24]
   1fb10:	cmp	r0, #0
   1fb14:	bne	22ab0 <main@@Base+0xf6f4>
   1fb18:	b	1fb78 <main@@Base+0xc7bc>
   1fb1c:	mov	r0, r5
   1fb20:	mov	r1, r4
   1fb24:	mov	r2, r8
   1fb28:	sub	sp, fp, #28
   1fb2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1fb30:	b	2fadc <flatcc_json_parser_generic_json@@Base>
   1fb34:	add	r4, r4, #4
   1fb38:	b	22af8 <main@@Base+0xf73c>
   1fb3c:	mov	r0, r5
   1fb40:	mov	r1, r4
   1fb44:	mov	r2, r8
   1fb48:	mov	r3, #21
   1fb4c:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   1fb50:	mov	r4, r0
   1fb54:	ldr	r0, [r5, #24]
   1fb58:	cmp	r0, #0
   1fb5c:	bne	22ab0 <main@@Base+0xf6f4>
   1fb60:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1fb64:	mov	r0, r5
   1fb68:	mov	r1, r4
   1fb6c:	mov	r2, r8
   1fb70:	bl	31c3c <flatcc_json_parser_finalize_unions@@Base>
   1fb74:	mov	r4, r0
   1fb78:	ldr	r0, [r5]
   1fb7c:	bl	2c62c <flatcc_builder_end_table@@Base>
   1fb80:	cmp	r0, #0
   1fb84:	str	r0, [r9]
   1fb88:	bne	22ac8 <main@@Base+0xf70c>
   1fb8c:	b	22ab0 <main@@Base+0xf6f4>
   1fb90:	bne	1fba0 <main@@Base+0xc7e4>
   1fb94:	ldrb	r0, [r4, #2]!
   1fb98:	cmp	r0, #32
   1fb9c:	bhi	1fbb0 <main@@Base+0xc7f4>
   1fba0:	mov	r0, r5
   1fba4:	mov	r2, r8
   1fba8:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1fbac:	mov	r4, r0
   1fbb0:	cmp	r4, r8
   1fbb4:	mov	r2, r8
   1fbb8:	beq	1fbcc <main@@Base+0xc810>
   1fbbc:	ldrb	r0, [r4]
   1fbc0:	cmp	r0, #125	; 0x7d
   1fbc4:	beq	207e4 <main@@Base+0xd428>
   1fbc8:	mov	r2, r4
   1fbcc:	str	r5, [sp, #44]	; 0x2c
   1fbd0:	str	r9, [sp, #40]	; 0x28
   1fbd4:	cmp	r2, r8
   1fbd8:	mov	sl, r8
   1fbdc:	beq	1fc28 <main@@Base+0xc86c>
   1fbe0:	ldrb	r0, [r2]
   1fbe4:	cmp	r0, #46	; 0x2e
   1fbe8:	beq	1fc00 <main@@Base+0xc844>
   1fbec:	cmp	r0, #34	; 0x22
   1fbf0:	bne	1fc1c <main@@Base+0xc860>
   1fbf4:	mov	r0, #0
   1fbf8:	add	sl, r2, #1
   1fbfc:	b	1fc24 <main@@Base+0xc868>
   1fc00:	mov	r1, r2
   1fc04:	mov	r0, r5
   1fc08:	mov	r2, r8
   1fc0c:	mov	r3, #5
   1fc10:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   1fc14:	mov	sl, r0
   1fc18:	b	1fc28 <main@@Base+0xc86c>
   1fc1c:	mov	r0, #1
   1fc20:	mov	sl, r2
   1fc24:	str	r0, [r5, #12]
   1fc28:	sub	lr, r8, sl
   1fc2c:	mov	r0, #8
   1fc30:	cmp	lr, #8
   1fc34:	movcc	r0, lr
   1fc38:	sub	r1, r0, #1
   1fc3c:	cmp	r1, #7
   1fc40:	bhi	205f8 <main@@Base+0xd23c>
   1fc44:	add	r5, pc, #28
   1fc48:	mov	r0, #0
   1fc4c:	mov	r2, #0
   1fc50:	mov	r3, #0
   1fc54:	mov	r7, #0
   1fc58:	mov	r6, #0
   1fc5c:	ldr	r4, [r5, r1, lsl #2]
   1fc60:	mov	r1, #0
   1fc64:	add	pc, r5, r4
   1fc68:	andeq	r0, r0, r0, asr r0
   1fc6c:	andeq	r0, r0, r8, asr #32
   1fc70:	andeq	r0, r0, r0, asr #32
   1fc74:	andeq	r0, r0, r8, lsr r0
   1fc78:	andeq	r0, r0, r8, lsr #32
   1fc7c:	andeq	r0, r0, r0, lsr #32
   1fc80:	andeq	r0, r0, r0, lsr #32
   1fc84:	andeq	r0, r0, r0, lsr #32
   1fc88:	ldrb	r1, [sl, #5]
   1fc8c:	lsl	r1, r1, #16
   1fc90:	ldrb	r2, [sl, #4]
   1fc94:	orr	r1, r1, r2, lsl #24
   1fc98:	mov	r2, r0
   1fc9c:	mov	r0, r1
   1fca0:	ldrb	r1, [sl, #3]
   1fca4:	orr	r3, r1, r2
   1fca8:	ldrb	r1, [sl, #2]
   1fcac:	orr	r7, r3, r1, lsl #8
   1fcb0:	ldrb	r1, [sl, #1]
   1fcb4:	orr	r6, r7, r1, lsl #16
   1fcb8:	ldrb	r1, [sl]
   1fcbc:	movw	r3, #29234	; 0x7232
   1fcc0:	lsr	r2, r0, #16
   1fcc4:	movt	r3, #27759	; 0x6c6f
   1fcc8:	orr	r9, r6, r1, lsl #24
   1fccc:	movw	r1, #25455	; 0x636f
   1fcd0:	orr	r2, r2, r9, lsl #16
   1fcd4:	eor	r1, r1, r9, lsr #16
   1fcd8:	eor	r2, r2, r3
   1fcdc:	orrs	r1, r2, r1
   1fce0:	bne	1fd2c <main@@Base+0xc970>
   1fce4:	cmp	lr, #7
   1fce8:	mov	r7, sl
   1fcec:	blt	1ff38 <main@@Base+0xcb7c>
   1fcf0:	ldr	r2, [sp, #44]	; 0x2c
   1fcf4:	mov	r1, sl
   1fcf8:	ldrb	r0, [r1, #6]!
   1fcfc:	ldr	r2, [r2, #12]
   1fd00:	cmp	r2, #0
   1fd04:	beq	1fd90 <main@@Base+0xc9d4>
   1fd08:	cmp	r0, #33	; 0x21
   1fd0c:	bcc	1fd1c <main@@Base+0xc960>
   1fd10:	cmp	r0, #58	; 0x3a
   1fd14:	mov	r7, sl
   1fd18:	bne	1ff38 <main@@Base+0xcb7c>
   1fd1c:	ldr	r0, [sp, #44]	; 0x2c
   1fd20:	mov	r2, #0
   1fd24:	str	r2, [r0, #12]
   1fd28:	b	1fda0 <main@@Base+0xc9e4>
   1fd2c:	movw	r1, #27759	; 0x6c6f
   1fd30:	and	r0, r0, #-16777216	; 0xff000000
   1fd34:	movt	r1, #25455	; 0x636f
   1fd38:	eor	r0, r0, #1912602624	; 0x72000000
   1fd3c:	eor	r1, r9, r1
   1fd40:	orrs	r0, r0, r1
   1fd44:	bne	20138 <main@@Base+0xcd7c>
   1fd48:	cmp	lr, #6
   1fd4c:	mov	r7, sl
   1fd50:	blt	200b0 <main@@Base+0xccf4>
   1fd54:	ldr	r2, [sp, #44]	; 0x2c
   1fd58:	mov	r1, sl
   1fd5c:	ldrb	r0, [r1, #5]!
   1fd60:	ldr	r2, [r2, #12]
   1fd64:	cmp	r2, #0
   1fd68:	beq	1fdc8 <main@@Base+0xca0c>
   1fd6c:	cmp	r0, #33	; 0x21
   1fd70:	bcc	1fd80 <main@@Base+0xc9c4>
   1fd74:	cmp	r0, #58	; 0x3a
   1fd78:	mov	r7, sl
   1fd7c:	bne	200b0 <main@@Base+0xccf4>
   1fd80:	ldr	r0, [sp, #44]	; 0x2c
   1fd84:	mov	r2, #0
   1fd88:	str	r2, [r0, #12]
   1fd8c:	b	1fdd8 <main@@Base+0xca1c>
   1fd90:	cmp	r0, #34	; 0x22
   1fd94:	mov	r7, sl
   1fd98:	bne	1ff38 <main@@Base+0xcb7c>
   1fd9c:	add	r1, sl, #7
   1fda0:	sub	r0, r8, r1
   1fda4:	cmp	r0, #2
   1fda8:	blt	1fe14 <main@@Base+0xca58>
   1fdac:	ldrb	r0, [r1]
   1fdb0:	cmp	r0, #32
   1fdb4:	bls	1fe00 <main@@Base+0xca44>
   1fdb8:	mov	r7, r1
   1fdbc:	cmp	r7, r8
   1fdc0:	bne	1fe34 <main@@Base+0xca78>
   1fdc4:	b	1fe6c <main@@Base+0xcab0>
   1fdc8:	cmp	r0, #34	; 0x22
   1fdcc:	mov	r7, sl
   1fdd0:	bne	200b0 <main@@Base+0xccf4>
   1fdd4:	add	r1, sl, #6
   1fdd8:	sub	r0, r8, r1
   1fddc:	cmp	r0, #2
   1fde0:	blt	1fe9c <main@@Base+0xcae0>
   1fde4:	ldrb	r0, [r1]
   1fde8:	cmp	r0, #32
   1fdec:	bls	1fe88 <main@@Base+0xcacc>
   1fdf0:	mov	r7, r1
   1fdf4:	cmp	r7, r8
   1fdf8:	bne	1febc <main@@Base+0xcb00>
   1fdfc:	b	1fef4 <main@@Base+0xcb38>
   1fe00:	bne	1fe14 <main@@Base+0xca58>
   1fe04:	mov	r7, r1
   1fe08:	ldrb	r0, [r7, #1]!
   1fe0c:	cmp	r0, #32
   1fe10:	bhi	1fe2c <main@@Base+0xca70>
   1fe14:	ldr	r0, [sp, #44]	; 0x2c
   1fe18:	mov	r2, r8
   1fe1c:	mov	r4, lr
   1fe20:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1fe24:	mov	lr, r4
   1fe28:	mov	r7, r0
   1fe2c:	cmp	r7, r8
   1fe30:	beq	1fe6c <main@@Base+0xcab0>
   1fe34:	ldrb	r0, [r7]
   1fe38:	cmp	r0, #58	; 0x3a
   1fe3c:	bne	1fe6c <main@@Base+0xcab0>
   1fe40:	add	r1, r7, #1
   1fe44:	sub	r0, r8, r1
   1fe48:	cmp	r0, #2
   1fe4c:	blt	1ff20 <main@@Base+0xcb64>
   1fe50:	ldrb	r0, [r1]
   1fe54:	cmp	r0, #32
   1fe58:	bls	1ff10 <main@@Base+0xcb54>
   1fe5c:	mov	r7, r1
   1fe60:	cmp	sl, r7
   1fe64:	bne	1ff40 <main@@Base+0xcb84>
   1fe68:	b	20138 <main@@Base+0xcd7c>
   1fe6c:	ldr	r0, [sp, #44]	; 0x2c
   1fe70:	mov	r1, r7
   1fe74:	mov	r2, r8
   1fe78:	mov	r3, #4
   1fe7c:	mov	r4, lr
   1fe80:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   1fe84:	b	1ff30 <main@@Base+0xcb74>
   1fe88:	bne	1fe9c <main@@Base+0xcae0>
   1fe8c:	mov	r7, r1
   1fe90:	ldrb	r0, [r7, #1]!
   1fe94:	cmp	r0, #32
   1fe98:	bhi	1feb4 <main@@Base+0xcaf8>
   1fe9c:	ldr	r0, [sp, #44]	; 0x2c
   1fea0:	mov	r2, r8
   1fea4:	mov	r4, lr
   1fea8:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1feac:	mov	lr, r4
   1feb0:	mov	r7, r0
   1feb4:	cmp	r7, r8
   1feb8:	beq	1fef4 <main@@Base+0xcb38>
   1febc:	ldrb	r0, [r7]
   1fec0:	cmp	r0, #58	; 0x3a
   1fec4:	bne	1fef4 <main@@Base+0xcb38>
   1fec8:	add	r1, r7, #1
   1fecc:	sub	r0, r8, r1
   1fed0:	cmp	r0, #2
   1fed4:	blt	20098 <main@@Base+0xccdc>
   1fed8:	ldrb	r0, [r1]
   1fedc:	cmp	r0, #32
   1fee0:	bls	20088 <main@@Base+0xcccc>
   1fee4:	mov	r7, r1
   1fee8:	cmp	sl, r7
   1feec:	bne	200b8 <main@@Base+0xccfc>
   1fef0:	b	20138 <main@@Base+0xcd7c>
   1fef4:	ldr	r0, [sp, #44]	; 0x2c
   1fef8:	mov	r1, r7
   1fefc:	mov	r2, r8
   1ff00:	mov	r3, #4
   1ff04:	mov	r4, lr
   1ff08:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   1ff0c:	b	200a8 <main@@Base+0xccec>
   1ff10:	bne	1ff20 <main@@Base+0xcb64>
   1ff14:	ldrb	r0, [r7, #2]!
   1ff18:	cmp	r0, #32
   1ff1c:	bhi	1ff38 <main@@Base+0xcb7c>
   1ff20:	ldr	r0, [sp, #44]	; 0x2c
   1ff24:	mov	r2, r8
   1ff28:	mov	r4, lr
   1ff2c:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   1ff30:	mov	lr, r4
   1ff34:	mov	r7, r0
   1ff38:	cmp	sl, r7
   1ff3c:	beq	20138 <main@@Base+0xcd7c>
   1ff40:	mov	r6, #0
   1ff44:	cmp	r7, r8
   1ff48:	str	r6, [sp, #52]	; 0x34
   1ff4c:	str	r6, [sp, #48]	; 0x30
   1ff50:	strb	r6, [fp, #-36]	; 0xffffffdc
   1ff54:	str	r6, [fp, #-32]	; 0xffffffe0
   1ff58:	beq	1ffc0 <main@@Base+0xcc04>
   1ff5c:	add	r0, sp, #48	; 0x30
   1ff60:	mov	r1, r7
   1ff64:	mov	r2, r8
   1ff68:	sub	r3, fp, #32
   1ff6c:	str	r0, [sp]
   1ff70:	ldr	r5, [sp, #44]	; 0x2c
   1ff74:	mov	r0, r5
   1ff78:	bl	3132c <flatcc_json_parser_integer@@Base>
   1ff7c:	ldr	r9, [sp, #40]	; 0x28
   1ff80:	cmp	r0, r7
   1ff84:	beq	1ffd8 <main@@Base+0xcc1c>
   1ff88:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1ff8c:	mov	r4, r0
   1ff90:	ldr	r0, [sp, #48]	; 0x30
   1ff94:	ldr	r1, [sp, #52]	; 0x34
   1ff98:	cmp	r2, #0
   1ff9c:	beq	1ffe8 <main@@Base+0xcc2c>
   1ffa0:	subs	r2, r0, #129	; 0x81
   1ffa4:	sbcs	r1, r1, #0
   1ffa8:	bcc	20018 <main@@Base+0xcc5c>
   1ffac:	mov	r0, r5
   1ffb0:	mov	r1, r4
   1ffb4:	mov	r2, r8
   1ffb8:	mov	r3, #8
   1ffbc:	b	20004 <main@@Base+0xcc48>
   1ffc0:	ldr	r5, [sp, #44]	; 0x2c
   1ffc4:	ldr	r9, [sp, #40]	; 0x28
   1ffc8:	mov	r4, r8
   1ffcc:	cmp	r7, r4
   1ffd0:	bne	20064 <main@@Base+0xcca8>
   1ffd4:	b	20030 <main@@Base+0xcc74>
   1ffd8:	mov	r4, r7
   1ffdc:	cmp	r7, r4
   1ffe0:	bne	20064 <main@@Base+0xcca8>
   1ffe4:	b	20030 <main@@Base+0xcc74>
   1ffe8:	subs	r2, r0, #128	; 0x80
   1ffec:	sbcs	r1, r1, #0
   1fff0:	bcc	20020 <main@@Base+0xcc64>
   1fff4:	mov	r0, r5
   1fff8:	mov	r1, r4
   1fffc:	mov	r2, r8
   20000:	mov	r3, #7
   20004:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   20008:	mov	r4, r0
   2000c:	cmp	r7, r4
   20010:	bne	20064 <main@@Base+0xcca8>
   20014:	b	20030 <main@@Base+0xcc74>
   20018:	rsb	r6, r0, #0
   2001c:	b	20024 <main@@Base+0xcc68>
   20020:	mov	r6, r0
   20024:	strb	r6, [fp, #-36]	; 0xffffffdc
   20028:	cmp	r7, r4
   2002c:	bne	20064 <main@@Base+0xcca8>
   20030:	sub	r0, fp, #36	; 0x24
   20034:	mov	r1, r7
   20038:	mov	r2, r8
   2003c:	str	r0, [sp]
   20040:	mov	r0, r5
   20044:	ldr	r3, [pc, #4076]	; 21038 <main@@Base+0xdc7c>
   20048:	add	r3, pc, r3
   2004c:	bl	1eacc <main@@Base+0xb710>
   20050:	mov	r4, r0
   20054:	cmp	r0, r7
   20058:	cmpne	r4, r8
   2005c:	beq	22ab0 <main@@Base+0xf6f4>
   20060:	ldrb	r6, [fp, #-36]	; 0xffffffdc
   20064:	uxtb	r0, r6
   20068:	cmp	r0, #2
   2006c:	bne	2007c <main@@Base+0xccc0>
   20070:	ldrb	r0, [r5, #8]
   20074:	tst	r0, #2
   20078:	beq	206d0 <main@@Base+0xd314>
   2007c:	ldr	r0, [r5]
   20080:	mov	r1, #1
   20084:	b	206b8 <main@@Base+0xd2fc>
   20088:	bne	20098 <main@@Base+0xccdc>
   2008c:	ldrb	r0, [r7, #2]!
   20090:	cmp	r0, #32
   20094:	bhi	200b0 <main@@Base+0xccf4>
   20098:	ldr	r0, [sp, #44]	; 0x2c
   2009c:	mov	r2, r8
   200a0:	mov	r4, lr
   200a4:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   200a8:	mov	lr, r4
   200ac:	mov	r7, r0
   200b0:	cmp	sl, r7
   200b4:	beq	20138 <main@@Base+0xcd7c>
   200b8:	mov	r6, #0
   200bc:	cmp	r7, r8
   200c0:	str	r6, [sp, #52]	; 0x34
   200c4:	str	r6, [sp, #48]	; 0x30
   200c8:	strb	r6, [fp, #-36]	; 0xffffffdc
   200cc:	str	r6, [fp, #-32]	; 0xffffffe0
   200d0:	beq	201f0 <main@@Base+0xce34>
   200d4:	add	r0, sp, #48	; 0x30
   200d8:	mov	r1, r7
   200dc:	mov	r2, r8
   200e0:	sub	r3, fp, #32
   200e4:	str	r0, [sp]
   200e8:	ldr	r5, [sp, #44]	; 0x2c
   200ec:	mov	r0, r5
   200f0:	bl	3132c <flatcc_json_parser_integer@@Base>
   200f4:	ldr	r9, [sp, #40]	; 0x28
   200f8:	cmp	r0, r7
   200fc:	beq	20240 <main@@Base+0xce84>
   20100:	ldr	r2, [fp, #-32]	; 0xffffffe0
   20104:	mov	r4, r0
   20108:	ldr	r0, [sp, #48]	; 0x30
   2010c:	ldr	r1, [sp, #52]	; 0x34
   20110:	cmp	r2, #0
   20114:	beq	20288 <main@@Base+0xcecc>
   20118:	subs	r2, r0, #129	; 0x81
   2011c:	sbcs	r1, r1, #0
   20120:	bcc	202b8 <main@@Base+0xcefc>
   20124:	mov	r0, r5
   20128:	mov	r1, r4
   2012c:	mov	r2, r8
   20130:	mov	r3, #8
   20134:	b	202a4 <main@@Base+0xcee8>
   20138:	movw	r1, #12800	; 0x3200
   2013c:	bic	r0, r9, #255	; 0xff
   20140:	movt	r1, #30051	; 0x7563
   20144:	teq	r0, r1
   20148:	bne	20194 <main@@Base+0xcdd8>
   2014c:	ldr	r5, [sp, #44]	; 0x2c
   20150:	ldr	r9, [sp, #40]	; 0x28
   20154:	cmp	lr, #4
   20158:	mov	r7, sl
   2015c:	blt	20440 <main@@Base+0xd084>
   20160:	mov	r1, sl
   20164:	ldr	r2, [r5, #12]
   20168:	ldrb	r0, [r1, #3]!
   2016c:	cmp	r2, #0
   20170:	beq	20208 <main@@Base+0xce4c>
   20174:	cmp	r0, #33	; 0x21
   20178:	bcc	20188 <main@@Base+0xcdcc>
   2017c:	cmp	r0, #58	; 0x3a
   20180:	mov	r7, sl
   20184:	bne	20440 <main@@Base+0xd084>
   20188:	mov	r0, #0
   2018c:	str	r0, [r5, #12]
   20190:	b	20218 <main@@Base+0xce5c>
   20194:	movw	r0, #0
   20198:	bfc	r9, #0, #16
   2019c:	ldr	r5, [sp, #44]	; 0x2c
   201a0:	movt	r0, #30051	; 0x7563
   201a4:	teq	r9, r0
   201a8:	ldr	r9, [sp, #40]	; 0x28
   201ac:	bne	205f8 <main@@Base+0xd23c>
   201b0:	cmp	lr, #3
   201b4:	mov	r7, sl
   201b8:	blt	2058c <main@@Base+0xd1d0>
   201bc:	mov	r1, sl
   201c0:	ldr	r2, [r5, #12]
   201c4:	ldrb	r0, [r1, #2]!
   201c8:	cmp	r2, #0
   201cc:	beq	20250 <main@@Base+0xce94>
   201d0:	cmp	r0, #33	; 0x21
   201d4:	bcc	201e4 <main@@Base+0xce28>
   201d8:	cmp	r0, #58	; 0x3a
   201dc:	mov	r7, sl
   201e0:	bne	2058c <main@@Base+0xd1d0>
   201e4:	mov	r0, #0
   201e8:	str	r0, [r5, #12]
   201ec:	b	20260 <main@@Base+0xcea4>
   201f0:	ldr	r5, [sp, #44]	; 0x2c
   201f4:	ldr	r9, [sp, #40]	; 0x28
   201f8:	mov	r4, r8
   201fc:	cmp	r7, r4
   20200:	bne	20380 <main@@Base+0xcfc4>
   20204:	b	2034c <main@@Base+0xcf90>
   20208:	cmp	r0, #34	; 0x22
   2020c:	mov	r7, sl
   20210:	bne	20440 <main@@Base+0xd084>
   20214:	add	r1, sl, #4
   20218:	sub	r0, r8, r1
   2021c:	cmp	r0, #2
   20220:	blt	202d4 <main@@Base+0xcf18>
   20224:	ldrb	r0, [r1]
   20228:	cmp	r0, #32
   2022c:	bls	202c0 <main@@Base+0xcf04>
   20230:	mov	r7, r1
   20234:	cmp	r7, r8
   20238:	bne	202ec <main@@Base+0xcf30>
   2023c:	b	20324 <main@@Base+0xcf68>
   20240:	mov	r4, r7
   20244:	cmp	r7, r4
   20248:	bne	20380 <main@@Base+0xcfc4>
   2024c:	b	2034c <main@@Base+0xcf90>
   20250:	cmp	r0, #34	; 0x22
   20254:	mov	r7, sl
   20258:	bne	2058c <main@@Base+0xd1d0>
   2025c:	add	r1, sl, #3
   20260:	sub	r0, r8, r1
   20264:	cmp	r0, #2
   20268:	blt	203b8 <main@@Base+0xcffc>
   2026c:	ldrb	r0, [r1]
   20270:	cmp	r0, #32
   20274:	bls	203a4 <main@@Base+0xcfe8>
   20278:	mov	r7, r1
   2027c:	cmp	r7, r8
   20280:	bne	203d0 <main@@Base+0xd014>
   20284:	b	20408 <main@@Base+0xd04c>
   20288:	subs	r2, r0, #128	; 0x80
   2028c:	sbcs	r1, r1, #0
   20290:	bcc	2033c <main@@Base+0xcf80>
   20294:	mov	r0, r5
   20298:	mov	r1, r4
   2029c:	mov	r2, r8
   202a0:	mov	r3, #7
   202a4:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   202a8:	mov	r4, r0
   202ac:	cmp	r7, r4
   202b0:	bne	20380 <main@@Base+0xcfc4>
   202b4:	b	2034c <main@@Base+0xcf90>
   202b8:	rsb	r6, r0, #0
   202bc:	b	20340 <main@@Base+0xcf84>
   202c0:	bne	202d4 <main@@Base+0xcf18>
   202c4:	mov	r7, r1
   202c8:	ldrb	r0, [r7, #1]!
   202cc:	cmp	r0, #32
   202d0:	bhi	202e4 <main@@Base+0xcf28>
   202d4:	mov	r0, r5
   202d8:	mov	r2, r8
   202dc:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   202e0:	mov	r7, r0
   202e4:	cmp	r7, r8
   202e8:	beq	20324 <main@@Base+0xcf68>
   202ec:	ldrb	r0, [r7]
   202f0:	cmp	r0, #58	; 0x3a
   202f4:	bne	20324 <main@@Base+0xcf68>
   202f8:	add	r1, r7, #1
   202fc:	sub	r0, r8, r1
   20300:	cmp	r0, #2
   20304:	blt	20430 <main@@Base+0xd074>
   20308:	ldrb	r0, [r1]
   2030c:	cmp	r0, #32
   20310:	bls	20420 <main@@Base+0xd064>
   20314:	mov	r7, r1
   20318:	cmp	sl, r7
   2031c:	bne	20448 <main@@Base+0xd08c>
   20320:	b	205f8 <main@@Base+0xd23c>
   20324:	mov	r0, r5
   20328:	mov	r1, r7
   2032c:	mov	r2, r8
   20330:	mov	r3, #4
   20334:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   20338:	b	2043c <main@@Base+0xd080>
   2033c:	mov	r6, r0
   20340:	strb	r6, [fp, #-36]	; 0xffffffdc
   20344:	cmp	r7, r4
   20348:	bne	20380 <main@@Base+0xcfc4>
   2034c:	sub	r0, fp, #36	; 0x24
   20350:	mov	r1, r7
   20354:	mov	r2, r8
   20358:	str	r0, [sp]
   2035c:	mov	r0, r5
   20360:	ldr	r3, [pc, #3988]	; 212fc <main@@Base+0xdf40>
   20364:	add	r3, pc, r3
   20368:	bl	1eacc <main@@Base+0xb710>
   2036c:	mov	r4, r0
   20370:	cmp	r0, r7
   20374:	cmpne	r4, r8
   20378:	beq	22ab0 <main@@Base+0xf6f4>
   2037c:	ldrb	r6, [fp, #-36]	; 0xffffffdc
   20380:	uxtb	r0, r6
   20384:	cmp	r0, #2
   20388:	bne	20398 <main@@Base+0xcfdc>
   2038c:	ldrb	r0, [r5, #8]
   20390:	tst	r0, #2
   20394:	beq	206d0 <main@@Base+0xd314>
   20398:	ldr	r0, [r5]
   2039c:	mov	r1, #0
   203a0:	b	206b8 <main@@Base+0xd2fc>
   203a4:	bne	203b8 <main@@Base+0xcffc>
   203a8:	mov	r7, r1
   203ac:	ldrb	r0, [r7, #1]!
   203b0:	cmp	r0, #32
   203b4:	bhi	203c8 <main@@Base+0xd00c>
   203b8:	mov	r0, r5
   203bc:	mov	r2, r8
   203c0:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   203c4:	mov	r7, r0
   203c8:	cmp	r7, r8
   203cc:	beq	20408 <main@@Base+0xd04c>
   203d0:	ldrb	r0, [r7]
   203d4:	cmp	r0, #58	; 0x3a
   203d8:	bne	20408 <main@@Base+0xd04c>
   203dc:	add	r1, r7, #1
   203e0:	sub	r0, r8, r1
   203e4:	cmp	r0, #2
   203e8:	blt	2057c <main@@Base+0xd1c0>
   203ec:	ldrb	r0, [r1]
   203f0:	cmp	r0, #32
   203f4:	bls	2056c <main@@Base+0xd1b0>
   203f8:	mov	r7, r1
   203fc:	cmp	sl, r7
   20400:	bne	20594 <main@@Base+0xd1d8>
   20404:	b	205f8 <main@@Base+0xd23c>
   20408:	mov	r0, r5
   2040c:	mov	r1, r7
   20410:	mov	r2, r8
   20414:	mov	r3, #4
   20418:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   2041c:	b	20588 <main@@Base+0xd1cc>
   20420:	bne	20430 <main@@Base+0xd074>
   20424:	ldrb	r0, [r7, #2]!
   20428:	cmp	r0, #32
   2042c:	bhi	20440 <main@@Base+0xd084>
   20430:	mov	r0, r5
   20434:	mov	r2, r8
   20438:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   2043c:	mov	r7, r0
   20440:	cmp	sl, r7
   20444:	beq	205f8 <main@@Base+0xd23c>
   20448:	mov	r6, #0
   2044c:	cmp	r7, r8
   20450:	str	r6, [sp, #52]	; 0x34
   20454:	str	r6, [sp, #48]	; 0x30
   20458:	strb	r6, [fp, #-36]	; 0xffffffdc
   2045c:	str	r6, [fp, #-32]	; 0xffffffe0
   20460:	beq	204ac <main@@Base+0xd0f0>
   20464:	add	r0, sp, #48	; 0x30
   20468:	mov	r1, r7
   2046c:	mov	r2, r8
   20470:	sub	r3, fp, #32
   20474:	str	r0, [sp]
   20478:	mov	r0, r5
   2047c:	bl	3132c <flatcc_json_parser_integer@@Base>
   20480:	cmp	r0, r7
   20484:	beq	204bc <main@@Base+0xd100>
   20488:	mov	r4, r0
   2048c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   20490:	cmp	r0, #0
   20494:	beq	204cc <main@@Base+0xd110>
   20498:	mov	r0, r5
   2049c:	mov	r1, r4
   204a0:	mov	r2, r8
   204a4:	mov	r3, #8
   204a8:	b	204f0 <main@@Base+0xd134>
   204ac:	mov	r4, r8
   204b0:	cmp	r7, r4
   204b4:	bne	20534 <main@@Base+0xd178>
   204b8:	b	20500 <main@@Base+0xd144>
   204bc:	mov	r4, r7
   204c0:	cmp	r7, r4
   204c4:	bne	20534 <main@@Base+0xd178>
   204c8:	b	20500 <main@@Base+0xd144>
   204cc:	ldr	r0, [sp, #48]	; 0x30
   204d0:	ldr	r1, [sp, #52]	; 0x34
   204d4:	subs	r2, r0, #256	; 0x100
   204d8:	sbcs	r1, r1, #0
   204dc:	bcc	20558 <main@@Base+0xd19c>
   204e0:	mov	r0, r5
   204e4:	mov	r1, r4
   204e8:	mov	r2, r8
   204ec:	mov	r3, #7
   204f0:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   204f4:	mov	r4, r0
   204f8:	cmp	r7, r4
   204fc:	bne	20534 <main@@Base+0xd178>
   20500:	sub	r0, fp, #36	; 0x24
   20504:	mov	r1, r7
   20508:	mov	r2, r8
   2050c:	str	r0, [sp]
   20510:	mov	r0, r5
   20514:	ldr	r3, [pc, #3972]	; 214a0 <main@@Base+0xe0e4>
   20518:	add	r3, pc, r3
   2051c:	bl	1ed18 <main@@Base+0xb95c>
   20520:	mov	r4, r0
   20524:	cmp	r0, r7
   20528:	cmpne	r4, r8
   2052c:	beq	22ab0 <main@@Base+0xf6f4>
   20530:	ldrb	r6, [fp, #-36]	; 0xffffffdc
   20534:	uxtb	r0, r6
   20538:	cmp	r0, #2
   2053c:	bne	2054c <main@@Base+0xd190>
   20540:	ldrb	r0, [r5, #8]
   20544:	tst	r0, #2
   20548:	beq	206d0 <main@@Base+0xd314>
   2054c:	ldr	r0, [r5]
   20550:	mov	r1, #3
   20554:	b	206b8 <main@@Base+0xd2fc>
   20558:	mov	r6, r0
   2055c:	strb	r0, [fp, #-36]	; 0xffffffdc
   20560:	cmp	r7, r4
   20564:	bne	20534 <main@@Base+0xd178>
   20568:	b	20500 <main@@Base+0xd144>
   2056c:	bne	2057c <main@@Base+0xd1c0>
   20570:	ldrb	r0, [r7, #2]!
   20574:	cmp	r0, #32
   20578:	bhi	2058c <main@@Base+0xd1d0>
   2057c:	mov	r0, r5
   20580:	mov	r2, r8
   20584:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   20588:	mov	r7, r0
   2058c:	cmp	sl, r7
   20590:	beq	205f8 <main@@Base+0xd23c>
   20594:	mov	r6, #0
   20598:	cmp	r7, r8
   2059c:	str	r6, [sp, #52]	; 0x34
   205a0:	str	r6, [sp, #48]	; 0x30
   205a4:	strb	r6, [fp, #-36]	; 0xffffffdc
   205a8:	str	r6, [fp, #-32]	; 0xffffffe0
   205ac:	beq	20610 <main@@Base+0xd254>
   205b0:	add	r0, sp, #48	; 0x30
   205b4:	mov	r1, r7
   205b8:	mov	r2, r8
   205bc:	sub	r3, fp, #32
   205c0:	str	r0, [sp]
   205c4:	mov	r0, r5
   205c8:	bl	3132c <flatcc_json_parser_integer@@Base>
   205cc:	cmp	r0, r7
   205d0:	beq	20620 <main@@Base+0xd264>
   205d4:	mov	r4, r0
   205d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   205dc:	cmp	r0, #0
   205e0:	beq	20630 <main@@Base+0xd274>
   205e4:	mov	r0, r5
   205e8:	mov	r1, r4
   205ec:	mov	r2, r8
   205f0:	mov	r3, #8
   205f4:	b	20654 <main@@Base+0xd298>
   205f8:	mov	r0, r5
   205fc:	mov	r1, sl
   20600:	mov	r2, r8
   20604:	bl	2f87c <flatcc_json_parser_unmatched_symbol@@Base>
   20608:	mov	r4, r0
   2060c:	b	206d0 <main@@Base+0xd314>
   20610:	mov	r4, r8
   20614:	cmp	r7, r4
   20618:	bne	20698 <main@@Base+0xd2dc>
   2061c:	b	20664 <main@@Base+0xd2a8>
   20620:	mov	r4, r7
   20624:	cmp	r7, r4
   20628:	bne	20698 <main@@Base+0xd2dc>
   2062c:	b	20664 <main@@Base+0xd2a8>
   20630:	ldr	r0, [sp, #48]	; 0x30
   20634:	ldr	r1, [sp, #52]	; 0x34
   20638:	subs	r2, r0, #256	; 0x100
   2063c:	sbcs	r1, r1, #0
   20640:	bcc	20798 <main@@Base+0xd3dc>
   20644:	mov	r0, r5
   20648:	mov	r1, r4
   2064c:	mov	r2, r8
   20650:	mov	r3, #7
   20654:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   20658:	mov	r4, r0
   2065c:	cmp	r7, r4
   20660:	bne	20698 <main@@Base+0xd2dc>
   20664:	sub	r0, fp, #36	; 0x24
   20668:	mov	r1, r7
   2066c:	mov	r2, r8
   20670:	str	r0, [sp]
   20674:	mov	r0, r5
   20678:	ldr	r3, [pc, #4064]	; 21660 <main@@Base+0xe2a4>
   2067c:	add	r3, pc, r3
   20680:	bl	1ed18 <main@@Base+0xb95c>
   20684:	mov	r4, r0
   20688:	cmp	r0, r7
   2068c:	cmpne	r4, r8
   20690:	beq	22ab0 <main@@Base+0xf6f4>
   20694:	ldrb	r6, [fp, #-36]	; 0xffffffdc
   20698:	uxtb	r0, r6
   2069c:	cmp	r0, #2
   206a0:	bne	206b0 <main@@Base+0xd2f4>
   206a4:	ldrb	r0, [r5, #8]
   206a8:	tst	r0, #2
   206ac:	beq	206d0 <main@@Base+0xd314>
   206b0:	ldr	r0, [r5]
   206b4:	mov	r1, #2
   206b8:	mov	r2, #1
   206bc:	mov	r3, #1
   206c0:	bl	2d0a0 <flatcc_builder_table_add@@Base>
   206c4:	cmp	r0, #0
   206c8:	beq	22ab0 <main@@Base+0xf6f4>
   206cc:	strb	r6, [r0]
   206d0:	sub	r0, r8, r4
   206d4:	cmp	r0, #2
   206d8:	blt	2070c <main@@Base+0xd350>
   206dc:	ldrb	r0, [r4]
   206e0:	cmp	r0, #32
   206e4:	bls	206f8 <main@@Base+0xd33c>
   206e8:	mov	r2, r4
   206ec:	cmp	r2, r8
   206f0:	bne	20728 <main@@Base+0xd36c>
   206f4:	b	20940 <main@@Base+0xd584>
   206f8:	bne	2070c <main@@Base+0xd350>
   206fc:	mov	r2, r4
   20700:	ldrb	r0, [r2, #1]!
   20704:	cmp	r0, #32
   20708:	bhi	20720 <main@@Base+0xd364>
   2070c:	mov	r0, r5
   20710:	mov	r1, r4
   20714:	mov	r2, r8
   20718:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   2071c:	mov	r2, r0
   20720:	cmp	r2, r8
   20724:	beq	20940 <main@@Base+0xd584>
   20728:	ldrb	r0, [r2]
   2072c:	cmp	r0, #44	; 0x2c
   20730:	bne	229fc <main@@Base+0xf640>
   20734:	add	r1, r2, #1
   20738:	sub	r0, r8, r1
   2073c:	cmp	r0, #2
   20740:	blt	20770 <main@@Base+0xd3b4>
   20744:	ldrb	r0, [r1]
   20748:	cmp	r0, #32
   2074c:	bls	20760 <main@@Base+0xd3a4>
   20750:	mov	r2, r1
   20754:	cmp	r2, r8
   20758:	bne	20788 <main@@Base+0xd3cc>
   2075c:	b	20948 <main@@Base+0xd58c>
   20760:	bne	20770 <main@@Base+0xd3b4>
   20764:	ldrb	r0, [r2, #2]!
   20768:	cmp	r0, #32
   2076c:	bhi	20780 <main@@Base+0xd3c4>
   20770:	mov	r0, r5
   20774:	mov	r2, r8
   20778:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   2077c:	mov	r2, r0
   20780:	cmp	r2, r8
   20784:	beq	20948 <main@@Base+0xd58c>
   20788:	ldrb	r0, [r2]
   2078c:	cmp	r0, #125	; 0x7d
   20790:	bne	1fbd4 <main@@Base+0xc818>
   20794:	b	22a04 <main@@Base+0xf648>
   20798:	mov	r6, r0
   2079c:	strb	r0, [fp, #-36]	; 0xffffffdc
   207a0:	cmp	r7, r4
   207a4:	bne	20698 <main@@Base+0xd2dc>
   207a8:	b	20664 <main@@Base+0xd2a8>
   207ac:	bne	207bc <main@@Base+0xd400>
   207b0:	ldrb	r0, [r4, #2]!
   207b4:	cmp	r0, #32
   207b8:	bhi	207cc <main@@Base+0xd410>
   207bc:	mov	r0, r5
   207c0:	mov	r2, r8
   207c4:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   207c8:	mov	r4, r0
   207cc:	cmp	r4, r8
   207d0:	mov	r3, r8
   207d4:	beq	20818 <main@@Base+0xd45c>
   207d8:	ldrb	r0, [r4]
   207dc:	cmp	r0, #125	; 0x7d
   207e0:	bne	20814 <main@@Base+0xd458>
   207e4:	add	r1, r4, #1
   207e8:	sub	r0, r8, r1
   207ec:	cmp	r0, #2
   207f0:	blt	22a88 <main@@Base+0xf6cc>
   207f4:	ldrb	r0, [r1]
   207f8:	cmp	r0, #32
   207fc:	bhi	22a20 <main@@Base+0xf664>
   20800:	bne	22a88 <main@@Base+0xf6cc>
   20804:	ldrb	r0, [r4, #2]!
   20808:	cmp	r0, #32
   2080c:	bhi	1fb0c <main@@Base+0xc750>
   20810:	b	22a88 <main@@Base+0xf6cc>
   20814:	mov	r3, r4
   20818:	mov	r4, #0
   2081c:	mov	r7, #1
   20820:	cmp	r3, r8
   20824:	mov	r1, r8
   20828:	beq	20868 <main@@Base+0xd4ac>
   2082c:	ldrb	r0, [r3]
   20830:	cmp	r0, #46	; 0x2e
   20834:	beq	20850 <main@@Base+0xd494>
   20838:	cmp	r0, #34	; 0x22
   2083c:	movne	r1, r3
   20840:	strne	r7, [r5, #12]
   20844:	streq	r4, [r5, #12]
   20848:	addeq	r1, r3, #1
   2084c:	b	20868 <main@@Base+0xd4ac>
   20850:	mov	r1, r3
   20854:	mov	r0, r5
   20858:	mov	r2, r8
   2085c:	mov	r3, #5
   20860:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   20864:	mov	r1, r0
   20868:	mov	r0, r5
   2086c:	mov	r2, r8
   20870:	bl	2f87c <flatcc_json_parser_unmatched_symbol@@Base>
   20874:	mov	r2, r0
   20878:	sub	r0, r8, r0
   2087c:	cmp	r0, #2
   20880:	blt	208b4 <main@@Base+0xd4f8>
   20884:	ldrb	r0, [r2]
   20888:	cmp	r0, #32
   2088c:	bls	208a0 <main@@Base+0xd4e4>
   20890:	mov	r3, r2
   20894:	cmp	r3, r8
   20898:	bne	208d0 <main@@Base+0xd514>
   2089c:	b	20940 <main@@Base+0xd584>
   208a0:	bne	208b4 <main@@Base+0xd4f8>
   208a4:	mov	r3, r2
   208a8:	ldrb	r0, [r3, #1]!
   208ac:	cmp	r0, #32
   208b0:	bhi	208c8 <main@@Base+0xd50c>
   208b4:	mov	r1, r2
   208b8:	mov	r0, r5
   208bc:	mov	r2, r8
   208c0:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   208c4:	mov	r3, r0
   208c8:	cmp	r3, r8
   208cc:	beq	20940 <main@@Base+0xd584>
   208d0:	ldrb	r0, [r3]
   208d4:	cmp	r0, #44	; 0x2c
   208d8:	bne	20958 <main@@Base+0xd59c>
   208dc:	add	r1, r3, #1
   208e0:	sub	r0, r8, r1
   208e4:	cmp	r0, #2
   208e8:	blt	20918 <main@@Base+0xd55c>
   208ec:	ldrb	r0, [r1]
   208f0:	cmp	r0, #32
   208f4:	bls	20908 <main@@Base+0xd54c>
   208f8:	mov	r3, r1
   208fc:	cmp	r3, r8
   20900:	bne	20930 <main@@Base+0xd574>
   20904:	b	20948 <main@@Base+0xd58c>
   20908:	bne	20918 <main@@Base+0xd55c>
   2090c:	ldrb	r0, [r3, #2]!
   20910:	cmp	r0, #32
   20914:	bhi	20928 <main@@Base+0xd56c>
   20918:	mov	r0, r5
   2091c:	mov	r2, r8
   20920:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   20924:	mov	r3, r0
   20928:	cmp	r3, r8
   2092c:	beq	20948 <main@@Base+0xd58c>
   20930:	ldrb	r0, [r3]
   20934:	cmp	r0, #125	; 0x7d
   20938:	bne	20820 <main@@Base+0xd464>
   2093c:	b	20960 <main@@Base+0xd5a4>
   20940:	mov	r4, r8
   20944:	b	1fb0c <main@@Base+0xc750>
   20948:	mov	r0, r5
   2094c:	mov	r1, r8
   20950:	b	22a44 <main@@Base+0xf688>
   20954:	andeq	r6, r1, r5, rrx
   20958:	cmp	r0, #125	; 0x7d
   2095c:	bne	229f0 <main@@Base+0xf634>
   20960:	add	r1, r3, #1
   20964:	sub	r0, r8, r1
   20968:	cmp	r0, #2
   2096c:	blt	22a88 <main@@Base+0xf6cc>
   20970:	ldrb	r0, [r1]
   20974:	cmp	r0, #32
   20978:	bhi	22a20 <main@@Base+0xf664>
   2097c:	bne	22a88 <main@@Base+0xf6cc>
   20980:	ldrb	r0, [r3, #2]!
   20984:	mov	r4, r3
   20988:	cmp	r0, #32
   2098c:	bhi	1fb0c <main@@Base+0xc750>
   20990:	b	22a88 <main@@Base+0xf6cc>
   20994:	bne	209a4 <main@@Base+0xd5e8>
   20998:	ldrb	r0, [r4, #2]!
   2099c:	cmp	r0, #32
   209a0:	bhi	209b4 <main@@Base+0xd5f8>
   209a4:	mov	r0, r5
   209a8:	mov	r2, r8
   209ac:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   209b0:	mov	r4, r0
   209b4:	cmp	r4, r8
   209b8:	mov	r2, r8
   209bc:	beq	20a00 <main@@Base+0xd644>
   209c0:	ldrb	r0, [r4]
   209c4:	cmp	r0, #125	; 0x7d
   209c8:	bne	209fc <main@@Base+0xd640>
   209cc:	add	r1, r4, #1
   209d0:	sub	r0, r8, r1
   209d4:	cmp	r0, #2
   209d8:	blt	22a64 <main@@Base+0xf6a8>
   209dc:	ldrb	r0, [r1]
   209e0:	cmp	r0, #32
   209e4:	bhi	229dc <main@@Base+0xf620>
   209e8:	bne	22a64 <main@@Base+0xf6a8>
   209ec:	ldrb	r0, [r4, #2]!
   209f0:	cmp	r0, #32
   209f4:	bhi	1fb54 <main@@Base+0xc798>
   209f8:	b	22a64 <main@@Base+0xf6a8>
   209fc:	mov	r2, r4
   20a00:	add	r0, r5, #12
   20a04:	str	r0, [sp, #32]
   20a08:	movw	r0, #24436	; 0x5f74
   20a0c:	movt	r0, #29299	; 0x7273
   20a10:	add	r0, r0, #65536	; 0x10000
   20a14:	add	r0, r0, #16777216	; 0x1000000
   20a18:	str	r0, [sp, #28]
   20a1c:	str	r8, [sp, #36]	; 0x24
   20a20:	str	r5, [sp, #44]	; 0x2c
   20a24:	str	r9, [sp, #40]	; 0x28
   20a28:	cmp	r2, r8
   20a2c:	mov	sl, r8
   20a30:	beq	20a84 <main@@Base+0xd6c8>
   20a34:	ldrb	r0, [r2]
   20a38:	cmp	r0, #46	; 0x2e
   20a3c:	beq	20a58 <main@@Base+0xd69c>
   20a40:	cmp	r0, #34	; 0x22
   20a44:	bne	20a74 <main@@Base+0xd6b8>
   20a48:	ldr	r0, [sp, #32]
   20a4c:	mov	r1, #0
   20a50:	add	sl, r2, #1
   20a54:	b	20a80 <main@@Base+0xd6c4>
   20a58:	mov	r1, r2
   20a5c:	mov	r0, r5
   20a60:	mov	r2, r8
   20a64:	mov	r3, #5
   20a68:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   20a6c:	mov	sl, r0
   20a70:	b	20a84 <main@@Base+0xd6c8>
   20a74:	ldr	r0, [sp, #32]
   20a78:	mov	r1, #1
   20a7c:	mov	sl, r2
   20a80:	str	r1, [r0]
   20a84:	sub	lr, r8, sl
   20a88:	mov	r0, #8
   20a8c:	cmp	lr, #8
   20a90:	movcc	r0, lr
   20a94:	sub	r0, r0, #1
   20a98:	cmp	r0, #7
   20a9c:	bhi	21220 <main@@Base+0xde64>
   20aa0:	add	r7, pc, #36	; 0x24
   20aa4:	mov	r9, #0
   20aa8:	mov	ip, #0
   20aac:	mov	r6, #0
   20ab0:	mov	r1, #0
   20ab4:	mov	r2, #0
   20ab8:	mov	r3, #0
   20abc:	mov	r5, #0
   20ac0:	mov	r4, #0
   20ac4:	ldr	r0, [r7, r0, lsl #2]
   20ac8:	add	pc, r7, r0
   20acc:	andeq	r0, r0, r4, rrx
   20ad0:	andeq	r0, r0, ip, asr r0
   20ad4:	andeq	r0, r0, r4, asr r0
   20ad8:	andeq	r0, r0, ip, asr #32
   20adc:	andeq	r0, r0, r0, asr #32
   20ae0:	andeq	r0, r0, r4, lsr r0
   20ae4:	andeq	r0, r0, r4, lsr #32
   20ae8:	andeq	r0, r0, r0, lsr #32
   20aec:	ldrb	ip, [sl, #7]
   20af0:	ldrb	r0, [sl, #6]
   20af4:	mov	r6, r9
   20af8:	orr	r0, ip, r0, lsl #8
   20afc:	mov	r9, r0
   20b00:	ldrb	r0, [sl, #5]
   20b04:	mov	r1, r6
   20b08:	orr	r9, r9, r0, lsl #16
   20b0c:	ldrb	r0, [sl, #4]
   20b10:	mov	r2, r1
   20b14:	orr	r9, r9, r0, lsl #24
   20b18:	ldrb	r0, [sl, #3]
   20b1c:	orr	r3, r0, r2
   20b20:	ldrb	r0, [sl, #2]
   20b24:	orr	r5, r3, r0, lsl #8
   20b28:	ldrb	r0, [sl, #1]
   20b2c:	orr	r4, r5, r0, lsl #16
   20b30:	movw	r2, #30976	; 0x7900
   20b34:	movt	r2, #24942	; 0x616e
   20b38:	add	r0, r2, #95	; 0x5f
   20b3c:	eor	r1, r9, r0
   20b40:	ldrb	r0, [sl]
   20b44:	orr	r4, r4, r0, lsl #24
   20b48:	movw	r0, #28281	; 0x6e79
   20b4c:	movt	r0, #28001	; 0x6d61
   20b50:	eor	r0, r4, r0
   20b54:	orrs	r1, r1, r0
   20b58:	bne	20c24 <main@@Base+0xd868>
   20b5c:	ldr	r8, [sp, #36]	; 0x24
   20b60:	add	r4, sl, #8
   20b64:	ldr	r5, [sp, #44]	; 0x2c
   20b68:	ldr	r9, [sp, #40]	; 0x28
   20b6c:	mov	r1, #8
   20b70:	sub	r0, r8, r4
   20b74:	cmp	r0, #8
   20b78:	movcc	r1, r0
   20b7c:	sub	r2, r1, #1
   20b80:	cmp	r2, #7
   20b84:	bhi	20f1c <main@@Base+0xdb60>
   20b88:	add	r3, pc, #8
   20b8c:	mov	r1, #0
   20b90:	ldr	r2, [r3, r2, lsl #2]
   20b94:	add	pc, r3, r2
   20b98:	andeq	r0, r0, r4, lsr r0
   20b9c:	andeq	r0, r0, ip, lsr #32
   20ba0:	andeq	r0, r0, r4, lsr #32
   20ba4:	andeq	r0, r0, r0, lsr #32
   20ba8:	andeq	r0, r0, r0, lsr #32
   20bac:	andeq	r0, r0, r0, lsr #32
   20bb0:	andeq	r0, r0, r0, lsr #32
   20bb4:	andeq	r0, r0, r0, lsr #32
   20bb8:	ldrb	r1, [sl, #11]
   20bbc:	ldrb	r2, [sl, #10]
   20bc0:	orr	r1, r1, r2, lsl #8
   20bc4:	ldrb	r2, [sl, #9]
   20bc8:	orr	r1, r1, r2, lsl #16
   20bcc:	ldrb	r2, [r4]
   20bd0:	orr	r1, r1, r2, lsl #24
   20bd4:	movw	r2, #28773	; 0x7065
   20bd8:	movt	r2, #29817	; 0x7479
   20bdc:	teq	r1, r2
   20be0:	bne	20f1c <main@@Base+0xdb60>
   20be4:	cmp	r0, #5
   20be8:	blt	20f1c <main@@Base+0xdb60>
   20bec:	ldr	r2, [sp, #32]
   20bf0:	mov	r1, sl
   20bf4:	ldrb	r0, [r1, #12]!
   20bf8:	ldr	r2, [r2]
   20bfc:	cmp	r2, #0
   20c00:	beq	20cbc <main@@Base+0xd900>
   20c04:	cmp	r0, #33	; 0x21
   20c08:	bcc	20c14 <main@@Base+0xd858>
   20c0c:	cmp	r0, #58	; 0x3a
   20c10:	bne	20f1c <main@@Base+0xdb60>
   20c14:	ldr	r0, [sp, #32]
   20c18:	mov	r2, #0
   20c1c:	str	r2, [r0]
   20c20:	b	20cc8 <main@@Base+0xd90c>
   20c24:	ldr	r8, [sp, #36]	; 0x24
   20c28:	bic	r1, r9, #255	; 0xff
   20c2c:	eor	r1, r1, r2
   20c30:	orrs	r0, r1, r0
   20c34:	bne	20d58 <main@@Base+0xd99c>
   20c38:	cmp	lr, #8
   20c3c:	mov	r1, sl
   20c40:	blt	21064 <main@@Base+0xdca8>
   20c44:	ldr	r1, [sp, #32]
   20c48:	mov	r2, sl
   20c4c:	ldrb	r0, [r2, #7]!
   20c50:	ldr	r1, [r1]
   20c54:	cmp	r1, #0
   20c58:	beq	20c80 <main@@Base+0xd8c4>
   20c5c:	cmp	r0, #33	; 0x21
   20c60:	bcc	20c70 <main@@Base+0xd8b4>
   20c64:	cmp	r0, #58	; 0x3a
   20c68:	mov	r1, sl
   20c6c:	bne	21064 <main@@Base+0xdca8>
   20c70:	ldr	r0, [sp, #32]
   20c74:	mov	r1, #0
   20c78:	str	r1, [r0]
   20c7c:	b	20c90 <main@@Base+0xd8d4>
   20c80:	cmp	r0, #34	; 0x22
   20c84:	mov	r1, sl
   20c88:	bne	21064 <main@@Base+0xdca8>
   20c8c:	add	r2, sl, #8
   20c90:	sub	r0, r8, r2
   20c94:	mov	r5, lr
   20c98:	cmp	r0, #2
   20c9c:	blt	20d04 <main@@Base+0xd948>
   20ca0:	ldrb	r0, [r2]
   20ca4:	cmp	r0, #32
   20ca8:	bls	20cf0 <main@@Base+0xd934>
   20cac:	mov	r1, r2
   20cb0:	cmp	r1, r8
   20cb4:	bne	20d24 <main@@Base+0xd968>
   20cb8:	b	20e38 <main@@Base+0xda7c>
   20cbc:	cmp	r0, #34	; 0x22
   20cc0:	bne	20f1c <main@@Base+0xdb60>
   20cc4:	add	r1, sl, #13
   20cc8:	sub	r0, r8, r1
   20ccc:	cmp	r0, #2
   20cd0:	blt	20ed0 <main@@Base+0xdb14>
   20cd4:	ldrb	r0, [r1]
   20cd8:	cmp	r0, #32
   20cdc:	bls	20ebc <main@@Base+0xdb00>
   20ce0:	mov	r2, r1
   20ce4:	cmp	r2, r8
   20ce8:	bne	20ee8 <main@@Base+0xdb2c>
   20cec:	b	20f28 <main@@Base+0xdb6c>
   20cf0:	bne	20d04 <main@@Base+0xd948>
   20cf4:	mov	r1, r2
   20cf8:	ldrb	r0, [r1, #1]!
   20cfc:	cmp	r0, #32
   20d00:	bhi	20d1c <main@@Base+0xd960>
   20d04:	ldr	r0, [sp, #44]	; 0x2c
   20d08:	mov	r1, r2
   20d0c:	mov	r2, r8
   20d10:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   20d14:	mov	lr, r5
   20d18:	mov	r1, r0
   20d1c:	cmp	r1, r8
   20d20:	beq	20e38 <main@@Base+0xda7c>
   20d24:	ldrb	r0, [r1]
   20d28:	cmp	r0, #58	; 0x3a
   20d2c:	bne	20e38 <main@@Base+0xda7c>
   20d30:	add	r2, r1, #1
   20d34:	sub	r0, r8, r2
   20d38:	cmp	r0, #2
   20d3c:	blt	2104c <main@@Base+0xdc90>
   20d40:	ldrb	r0, [r2]
   20d44:	cmp	r0, #32
   20d48:	bls	2103c <main@@Base+0xdc80>
   20d4c:	mov	r1, r2
   20d50:	cmp	sl, r1
   20d54:	bne	2106c <main@@Base+0xdcb0>
   20d58:	lsr	r1, r9, #16
   20d5c:	movw	r2, #27000	; 0x6978
   20d60:	movw	r0, #28786	; 0x7072
   20d64:	orr	r1, r1, r4, lsl #16
   20d68:	movt	r2, #25958	; 0x6566
   20d6c:	eor	r0, r0, r4, lsr #16
   20d70:	eor	r1, r1, r2
   20d74:	orrs	r0, r1, r0
   20d78:	bne	20dcc <main@@Base+0xda10>
   20d7c:	ldr	r5, [sp, #44]	; 0x2c
   20d80:	ldr	r9, [sp, #40]	; 0x28
   20d84:	cmp	lr, #7
   20d88:	mov	r1, sl
   20d8c:	blt	2113c <main@@Base+0xdd80>
   20d90:	ldr	r1, [sp, #32]
   20d94:	mov	r2, sl
   20d98:	ldrb	r0, [r2, #6]!
   20d9c:	ldr	r1, [r1]
   20da0:	cmp	r1, #0
   20da4:	beq	20e4c <main@@Base+0xda90>
   20da8:	cmp	r0, #33	; 0x21
   20dac:	bcc	20dbc <main@@Base+0xda00>
   20db0:	cmp	r0, #58	; 0x3a
   20db4:	mov	r1, sl
   20db8:	bne	2113c <main@@Base+0xdd80>
   20dbc:	ldr	r0, [sp, #32]
   20dc0:	mov	r1, #0
   20dc4:	str	r1, [r0]
   20dc8:	b	20e5c <main@@Base+0xdaa0>
   20dcc:	movw	r0, #30313	; 0x7669
   20dd0:	and	r1, r9, #-16777216	; 0xff000000
   20dd4:	ldr	r5, [sp, #44]	; 0x2c
   20dd8:	ldr	r9, [sp, #40]	; 0x28
   20ddc:	movt	r0, #28015	; 0x6d6f
   20de0:	eor	r1, r1, #1694498816	; 0x65000000
   20de4:	eor	r0, r4, r0
   20de8:	orrs	r0, r1, r0
   20dec:	bne	21220 <main@@Base+0xde64>
   20df0:	cmp	lr, #6
   20df4:	mov	r4, sl
   20df8:	blt	211a0 <main@@Base+0xdde4>
   20dfc:	ldr	r2, [sp, #32]
   20e00:	mov	r1, sl
   20e04:	ldrb	r0, [r1, #5]!
   20e08:	ldr	r2, [r2]
   20e0c:	cmp	r2, #0
   20e10:	beq	20e84 <main@@Base+0xdac8>
   20e14:	cmp	r0, #33	; 0x21
   20e18:	bcc	20e28 <main@@Base+0xda6c>
   20e1c:	cmp	r0, #58	; 0x3a
   20e20:	mov	r4, sl
   20e24:	bne	211a0 <main@@Base+0xdde4>
   20e28:	ldr	r0, [sp, #32]
   20e2c:	mov	r2, #0
   20e30:	str	r2, [r0]
   20e34:	b	20e94 <main@@Base+0xdad8>
   20e38:	ldr	r0, [sp, #44]	; 0x2c
   20e3c:	mov	r2, r8
   20e40:	mov	r3, #4
   20e44:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   20e48:	b	2105c <main@@Base+0xdca0>
   20e4c:	cmp	r0, #34	; 0x22
   20e50:	mov	r1, sl
   20e54:	bne	2113c <main@@Base+0xdd80>
   20e58:	add	r2, sl, #7
   20e5c:	sub	r0, r8, r2
   20e60:	cmp	r0, #2
   20e64:	blt	20f54 <main@@Base+0xdb98>
   20e68:	ldrb	r0, [r2]
   20e6c:	cmp	r0, #32
   20e70:	bls	20f40 <main@@Base+0xdb84>
   20e74:	mov	r1, r2
   20e78:	cmp	r1, r8
   20e7c:	bne	20f70 <main@@Base+0xdbb4>
   20e80:	b	20fa8 <main@@Base+0xdbec>
   20e84:	cmp	r0, #34	; 0x22
   20e88:	mov	r4, sl
   20e8c:	bne	211a0 <main@@Base+0xdde4>
   20e90:	add	r1, sl, #6
   20e94:	sub	r0, r8, r1
   20e98:	cmp	r0, #2
   20e9c:	blt	20fd0 <main@@Base+0xdc14>
   20ea0:	ldrb	r0, [r1]
   20ea4:	cmp	r0, #32
   20ea8:	bls	20fbc <main@@Base+0xdc00>
   20eac:	mov	r4, r1
   20eb0:	cmp	r4, r8
   20eb4:	bne	20fe8 <main@@Base+0xdc2c>
   20eb8:	b	21020 <main@@Base+0xdc64>
   20ebc:	bne	20ed0 <main@@Base+0xdb14>
   20ec0:	mov	r2, r1
   20ec4:	ldrb	r0, [r2, #1]!
   20ec8:	cmp	r0, #32
   20ecc:	bhi	20ee0 <main@@Base+0xdb24>
   20ed0:	mov	r0, r5
   20ed4:	mov	r2, r8
   20ed8:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   20edc:	mov	r2, r0
   20ee0:	cmp	r2, r8
   20ee4:	beq	20f28 <main@@Base+0xdb6c>
   20ee8:	ldrb	r0, [r2]
   20eec:	cmp	r0, #58	; 0x3a
   20ef0:	bne	20f28 <main@@Base+0xdb6c>
   20ef4:	add	r1, r2, #1
   20ef8:	sub	r0, r8, r1
   20efc:	cmp	r0, #2
   20f00:	blt	210b4 <main@@Base+0xdcf8>
   20f04:	ldrb	r0, [r1]
   20f08:	cmp	r0, #32
   20f0c:	bls	210a4 <main@@Base+0xdce8>
   20f10:	mov	r2, r1
   20f14:	cmp	r4, r2
   20f18:	bne	210cc <main@@Base+0xdd10>
   20f1c:	mov	r0, r5
   20f20:	mov	r1, r4
   20f24:	b	21228 <main@@Base+0xde6c>
   20f28:	mov	r1, r2
   20f2c:	mov	r0, r5
   20f30:	mov	r2, r8
   20f34:	mov	r3, #4
   20f38:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   20f3c:	b	210c0 <main@@Base+0xdd04>
   20f40:	bne	20f54 <main@@Base+0xdb98>
   20f44:	mov	r1, r2
   20f48:	ldrb	r0, [r1, #1]!
   20f4c:	cmp	r0, #32
   20f50:	bhi	20f68 <main@@Base+0xdbac>
   20f54:	mov	r1, r2
   20f58:	mov	r0, r5
   20f5c:	mov	r2, r8
   20f60:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   20f64:	mov	r1, r0
   20f68:	cmp	r1, r8
   20f6c:	beq	20fa8 <main@@Base+0xdbec>
   20f70:	ldrb	r0, [r1]
   20f74:	cmp	r0, #58	; 0x3a
   20f78:	bne	20fa8 <main@@Base+0xdbec>
   20f7c:	add	r2, r1, #1
   20f80:	sub	r0, r8, r2
   20f84:	cmp	r0, #2
   20f88:	blt	21128 <main@@Base+0xdd6c>
   20f8c:	ldrb	r0, [r2]
   20f90:	cmp	r0, #32
   20f94:	bls	21118 <main@@Base+0xdd5c>
   20f98:	mov	r1, r2
   20f9c:	cmp	sl, r1
   20fa0:	bne	21144 <main@@Base+0xdd88>
   20fa4:	b	21220 <main@@Base+0xde64>
   20fa8:	mov	r0, r5
   20fac:	mov	r2, r8
   20fb0:	mov	r3, #4
   20fb4:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   20fb8:	b	21138 <main@@Base+0xdd7c>
   20fbc:	bne	20fd0 <main@@Base+0xdc14>
   20fc0:	mov	r4, r1
   20fc4:	ldrb	r0, [r4, #1]!
   20fc8:	cmp	r0, #32
   20fcc:	bhi	20fe0 <main@@Base+0xdc24>
   20fd0:	mov	r0, r5
   20fd4:	mov	r2, r8
   20fd8:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   20fdc:	mov	r4, r0
   20fe0:	cmp	r4, r8
   20fe4:	beq	21020 <main@@Base+0xdc64>
   20fe8:	ldrb	r0, [r4]
   20fec:	cmp	r0, #58	; 0x3a
   20ff0:	bne	21020 <main@@Base+0xdc64>
   20ff4:	add	r1, r4, #1
   20ff8:	sub	r0, r8, r1
   20ffc:	cmp	r0, #2
   21000:	blt	21190 <main@@Base+0xddd4>
   21004:	ldrb	r0, [r1]
   21008:	cmp	r0, #32
   2100c:	bls	21180 <main@@Base+0xddc4>
   21010:	mov	r4, r1
   21014:	cmp	sl, r4
   21018:	bne	211a8 <main@@Base+0xddec>
   2101c:	b	21220 <main@@Base+0xde64>
   21020:	mov	r0, r5
   21024:	mov	r1, r4
   21028:	mov	r2, r8
   2102c:	mov	r3, #4
   21030:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   21034:	b	2119c <main@@Base+0xdde0>
   21038:			; <UNDEFINED> instruction: 0x000261b4
   2103c:	bne	2104c <main@@Base+0xdc90>
   21040:	ldrb	r0, [r1, #2]!
   21044:	cmp	r0, #32
   21048:	bhi	21064 <main@@Base+0xdca8>
   2104c:	ldr	r0, [sp, #44]	; 0x2c
   21050:	mov	r1, r2
   21054:	mov	r2, r8
   21058:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   2105c:	mov	lr, r5
   21060:	mov	r1, r0
   21064:	cmp	sl, r1
   21068:	beq	20d58 <main@@Base+0xd99c>
   2106c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   21070:	mov	r2, #3
   21074:	mov	r3, #0
   21078:	str	r2, [sp]
   2107c:	mov	r2, r8
   21080:	str	r0, [sp, #4]
   21084:	ldr	r0, [pc, #4092]	; 22088 <main@@Base+0xeccc>
   21088:	add	r0, pc, r0
   2108c:	str	r0, [sp, #8]
   21090:	ldr	r5, [sp, #44]	; 0x2c
   21094:	mov	r0, r5
   21098:	bl	323cc <flatcc_json_parser_union_vector@@Base>
   2109c:	ldr	r9, [sp, #40]	; 0x28
   210a0:	b	21230 <main@@Base+0xde74>
   210a4:	bne	210b4 <main@@Base+0xdcf8>
   210a8:	ldrb	r0, [r2, #2]!
   210ac:	cmp	r0, #32
   210b0:	bhi	210c4 <main@@Base+0xdd08>
   210b4:	mov	r0, r5
   210b8:	mov	r2, r8
   210bc:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   210c0:	mov	r2, r0
   210c4:	cmp	r4, r2
   210c8:	beq	20f1c <main@@Base+0xdb60>
   210cc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   210d0:	mov	r1, #3
   210d4:	mov	r3, #0
   210d8:	str	r1, [sp]
   210dc:	mov	r1, r2
   210e0:	mov	r2, r8
   210e4:	str	r0, [sp, #4]
   210e8:	ldr	r0, [pc, #3996]	; 2208c <main@@Base+0xecd0>
   210ec:	add	r0, pc, r0
   210f0:	str	r0, [sp, #8]
   210f4:	ldr	r0, [pc, #3988]	; 22090 <main@@Base+0xecd4>
   210f8:	add	r0, pc, r0
   210fc:	str	r0, [sp, #12]
   21100:	ldr	r0, [pc, #4088]	; 22100 <main@@Base+0xed44>
   21104:	add	r0, pc, r0
   21108:	str	r0, [sp, #16]
   2110c:	mov	r0, r5
   21110:	bl	328c8 <flatcc_json_parser_union_type_vector@@Base>
   21114:	b	21230 <main@@Base+0xde74>
   21118:	bne	21128 <main@@Base+0xdd6c>
   2111c:	ldrb	r0, [r1, #2]!
   21120:	cmp	r0, #32
   21124:	bhi	2113c <main@@Base+0xdd80>
   21128:	mov	r1, r2
   2112c:	mov	r0, r5
   21130:	mov	r2, r8
   21134:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   21138:	mov	r1, r0
   2113c:	cmp	sl, r1
   21140:	beq	21220 <main@@Base+0xde64>
   21144:	mov	r0, r5
   21148:	mov	r2, r8
   2114c:	sub	r3, fp, #32
   21150:	bl	248b4 <main@@Base+0x114f8>
   21154:	ldr	r6, [fp, #-32]	; 0xffffffe0
   21158:	mov	r4, r0
   2115c:	cmp	r6, #0
   21160:	beq	22ab0 <main@@Base+0xf6f4>
   21164:	ldr	r0, [r5]
   21168:	mov	r1, #0
   2116c:	bl	2ceec <flatcc_builder_table_add_offset@@Base>
   21170:	cmp	r0, #0
   21174:	beq	22ab0 <main@@Base+0xf6f4>
   21178:	str	r6, [r0]
   2117c:	b	21234 <main@@Base+0xde78>
   21180:	bne	21190 <main@@Base+0xddd4>
   21184:	ldrb	r0, [r4, #2]!
   21188:	cmp	r0, #32
   2118c:	bhi	211a0 <main@@Base+0xdde4>
   21190:	mov	r0, r5
   21194:	mov	r2, r8
   21198:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   2119c:	mov	r4, r0
   211a0:	cmp	sl, r4
   211a4:	beq	21220 <main@@Base+0xde64>
   211a8:	mov	r0, #0
   211ac:	mov	r1, #10
   211b0:	str	r0, [fp, #-32]	; 0xffffffe0
   211b4:	ldr	r0, [r5]
   211b8:	bl	2bc04 <flatcc_builder_start_table@@Base>
   211bc:	cmp	r0, #0
   211c0:	bne	22a98 <main@@Base+0xf6dc>
   211c4:	add	r0, sp, #48	; 0x30
   211c8:	mov	r1, r4
   211cc:	mov	r2, r8
   211d0:	mov	r3, #5
   211d4:	str	r0, [sp]
   211d8:	mov	r0, r5
   211dc:	bl	31bac <flatcc_json_parser_prepare_unions@@Base>
   211e0:	cmp	r0, r8
   211e4:	beq	22a98 <main@@Base+0xf6dc>
   211e8:	cmp	r4, r8
   211ec:	beq	21300 <main@@Base+0xdf44>
   211f0:	ldrb	r0, [r4]
   211f4:	cmp	r0, #123	; 0x7b
   211f8:	bne	21300 <main@@Base+0xdf44>
   211fc:	add	r1, r4, #1
   21200:	sub	r0, r8, r1
   21204:	cmp	r0, #2
   21208:	blt	21380 <main@@Base+0xdfc4>
   2120c:	ldrb	r0, [r1]
   21210:	cmp	r0, #32
   21214:	bls	21370 <main@@Base+0xdfb4>
   21218:	mov	r4, r1
   2121c:	b	21390 <main@@Base+0xdfd4>
   21220:	mov	r0, r5
   21224:	mov	r1, sl
   21228:	mov	r2, r8
   2122c:	bl	2f87c <flatcc_json_parser_unmatched_symbol@@Base>
   21230:	mov	r4, r0
   21234:	sub	r0, r8, r4
   21238:	cmp	r0, #2
   2123c:	blt	21270 <main@@Base+0xdeb4>
   21240:	ldrb	r0, [r4]
   21244:	cmp	r0, #32
   21248:	bls	2125c <main@@Base+0xdea0>
   2124c:	mov	r2, r4
   21250:	cmp	r2, r8
   21254:	bne	2128c <main@@Base+0xded0>
   21258:	b	229b0 <main@@Base+0xf5f4>
   2125c:	bne	21270 <main@@Base+0xdeb4>
   21260:	mov	r2, r4
   21264:	ldrb	r0, [r2, #1]!
   21268:	cmp	r0, #32
   2126c:	bhi	21284 <main@@Base+0xdec8>
   21270:	mov	r0, r5
   21274:	mov	r1, r4
   21278:	mov	r2, r8
   2127c:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   21280:	mov	r2, r0
   21284:	cmp	r2, r8
   21288:	beq	229b0 <main@@Base+0xf5f4>
   2128c:	ldrb	r0, [r2]
   21290:	cmp	r0, #44	; 0x2c
   21294:	bne	229b8 <main@@Base+0xf5fc>
   21298:	add	r1, r2, #1
   2129c:	sub	r0, r8, r1
   212a0:	cmp	r0, #2
   212a4:	blt	212d4 <main@@Base+0xdf18>
   212a8:	ldrb	r0, [r1]
   212ac:	cmp	r0, #32
   212b0:	bls	212c4 <main@@Base+0xdf08>
   212b4:	mov	r2, r1
   212b8:	cmp	r2, r8
   212bc:	bne	212ec <main@@Base+0xdf30>
   212c0:	b	229e4 <main@@Base+0xf628>
   212c4:	bne	212d4 <main@@Base+0xdf18>
   212c8:	ldrb	r0, [r2, #2]!
   212cc:	cmp	r0, #32
   212d0:	bhi	212e4 <main@@Base+0xdf28>
   212d4:	mov	r0, r5
   212d8:	mov	r2, r8
   212dc:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   212e0:	mov	r2, r0
   212e4:	cmp	r2, r8
   212e8:	beq	229e4 <main@@Base+0xf628>
   212ec:	ldrb	r0, [r2]
   212f0:	cmp	r0, #125	; 0x7d
   212f4:	bne	20a28 <main@@Base+0xd66c>
   212f8:	b	229c0 <main@@Base+0xf604>
   212fc:	andeq	r5, r2, r8, lsr #29
   21300:	mov	r0, r5
   21304:	mov	r1, r4
   21308:	mov	r2, r8
   2130c:	mov	r3, #21
   21310:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   21314:	mov	r4, r0
   21318:	ldr	r0, [r5, #24]
   2131c:	cmp	r0, #0
   21320:	bne	22a98 <main@@Base+0xf6dc>
   21324:	ldr	r3, [sp, #48]	; 0x30
   21328:	mov	r0, r5
   2132c:	mov	r1, r4
   21330:	mov	r2, r8
   21334:	bl	31c3c <flatcc_json_parser_finalize_unions@@Base>
   21338:	mov	r4, r0
   2133c:	ldr	r0, [r5]
   21340:	bl	2c62c <flatcc_builder_end_table@@Base>
   21344:	cmp	r0, #0
   21348:	str	r0, [fp, #-32]	; 0xffffffe0
   2134c:	beq	22a98 <main@@Base+0xf6dc>
   21350:	mov	r7, r0
   21354:	ldr	r0, [r5]
   21358:	mov	r1, #1
   2135c:	bl	2ceec <flatcc_builder_table_add_offset@@Base>
   21360:	cmp	r0, #0
   21364:	beq	22ab0 <main@@Base+0xf6f4>
   21368:	str	r7, [r0]
   2136c:	b	21234 <main@@Base+0xde78>
   21370:	bne	21380 <main@@Base+0xdfc4>
   21374:	ldrb	r0, [r4, #2]!
   21378:	cmp	r0, #32
   2137c:	bhi	21390 <main@@Base+0xdfd4>
   21380:	mov	r0, r5
   21384:	mov	r2, r8
   21388:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   2138c:	mov	r4, r0
   21390:	cmp	r4, r8
   21394:	mov	r2, r8
   21398:	beq	213dc <main@@Base+0xe020>
   2139c:	ldrb	r0, [r4]
   213a0:	cmp	r0, #125	; 0x7d
   213a4:	bne	213d8 <main@@Base+0xe01c>
   213a8:	add	r1, r4, #1
   213ac:	sub	r0, r8, r1
   213b0:	cmp	r0, #2
   213b4:	blt	229a0 <main@@Base+0xf5e4>
   213b8:	ldrb	r0, [r1]
   213bc:	cmp	r0, #32
   213c0:	bhi	22910 <main@@Base+0xf554>
   213c4:	bne	229a0 <main@@Base+0xf5e4>
   213c8:	ldrb	r0, [r4, #2]!
   213cc:	cmp	r0, #32
   213d0:	bhi	21318 <main@@Base+0xdf5c>
   213d4:	b	229a0 <main@@Base+0xf5e4>
   213d8:	mov	r2, r4
   213dc:	cmp	r2, r8
   213e0:	mov	r9, r8
   213e4:	beq	21438 <main@@Base+0xe07c>
   213e8:	ldrb	r0, [r2]
   213ec:	cmp	r0, #46	; 0x2e
   213f0:	beq	2140c <main@@Base+0xe050>
   213f4:	cmp	r0, #34	; 0x22
   213f8:	bne	21428 <main@@Base+0xe06c>
   213fc:	ldr	r0, [sp, #32]
   21400:	mov	r1, #0
   21404:	add	r9, r2, #1
   21408:	b	21434 <main@@Base+0xe078>
   2140c:	ldr	r0, [sp, #44]	; 0x2c
   21410:	mov	r1, r2
   21414:	mov	r2, r8
   21418:	mov	r3, #5
   2141c:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   21420:	mov	r9, r0
   21424:	b	21438 <main@@Base+0xe07c>
   21428:	ldr	r0, [sp, #32]
   2142c:	mov	r1, #1
   21430:	mov	r9, r2
   21434:	str	r1, [r0]
   21438:	sub	ip, r8, r9
   2143c:	mov	r0, #8
   21440:	cmp	ip, #8
   21444:	movcc	r0, ip
   21448:	sub	r0, r0, #1
   2144c:	cmp	r0, #7
   21450:	bhi	21eec <main@@Base+0xeb30>
   21454:	add	r2, pc, #36	; 0x24
   21458:	mov	r1, #0
   2145c:	mov	lr, #0
   21460:	mov	r8, #0
   21464:	mov	r7, #0
   21468:	mov	r3, #0
   2146c:	mov	r6, #0
   21470:	mov	r5, #0
   21474:	ldr	r4, [r2, r0, lsl #2]
   21478:	mov	r0, #0
   2147c:	add	pc, r2, r4
   21480:	andeq	r0, r0, r8, rrx
   21484:	andeq	r0, r0, r0, rrx
   21488:	andeq	r0, r0, r8, asr r0
   2148c:	andeq	r0, r0, r0, asr r0
   21490:	andeq	r0, r0, r4, asr #32
   21494:	andeq	r0, r0, r8, lsr r0
   21498:	andeq	r0, r0, r8, lsr #32
   2149c:	andeq	r0, r0, r4, lsr #32
   214a0:	andeq	r5, r2, r4, lsl #26
   214a4:	ldrb	lr, [r9, #7]
   214a8:	ldrb	r0, [r9, #6]
   214ac:	mov	r8, r1
   214b0:	orr	r0, lr, r0, lsl #8
   214b4:	mov	r1, r0
   214b8:	ldrb	r0, [r9, #5]
   214bc:	mov	r7, r8
   214c0:	orr	r1, r1, r0, lsl #16
   214c4:	ldrb	r0, [r9, #4]
   214c8:	mov	r3, r7
   214cc:	orr	r1, r1, r0, lsl #24
   214d0:	ldrb	r0, [r9, #3]
   214d4:	orr	r6, r0, r3
   214d8:	ldrb	r0, [r9, #2]
   214dc:	orr	r5, r6, r0, lsl #8
   214e0:	ldrb	r0, [r9, #1]
   214e4:	orr	r0, r5, r0, lsl #16
   214e8:	ldrb	r2, [r9]
   214ec:	orr	r2, r0, r2, lsl #24
   214f0:	movw	r0, #29797	; 0x7465
   214f4:	movt	r0, #24931	; 0x6163
   214f8:	subs	r0, r1, r0
   214fc:	movw	r0, #24946	; 0x6172
   21500:	movt	r0, #25448	; 0x6368
   21504:	sbcs	r0, r2, r0
   21508:	bcs	21664 <main@@Base+0xe2a8>
   2150c:	movw	r0, #29817	; 0x7479
   21510:	movw	r3, #28005	; 0x6d65
   21514:	ldr	r8, [sp, #36]	; 0x24
   21518:	movt	r0, #28511	; 0x6f5f
   2151c:	movt	r3, #25441	; 0x6361
   21520:	eor	r0, r1, r0
   21524:	eor	r3, r2, r3
   21528:	orrs	r0, r0, r3
   2152c:	beq	2196c <main@@Base+0xe5b0>
   21530:	movw	r0, #28265	; 0x6e69
   21534:	movw	r7, #29793	; 0x7461
   21538:	movt	r0, #26479	; 0x676f
   2153c:	movt	r7, #24942	; 0x616e
   21540:	eor	r0, r1, r0
   21544:	eor	r2, r2, r7
   21548:	orrs	r0, r0, r2
   2154c:	bne	219f4 <main@@Base+0xe638>
   21550:	add	sl, r9, #8
   21554:	mov	r1, #8
   21558:	sub	ip, r8, sl
   2155c:	cmp	ip, #8
   21560:	movcc	r1, ip
   21564:	sub	r1, r1, #1
   21568:	cmp	r1, #7
   2156c:	bhi	2279c <main@@Base+0xf3e0>
   21570:	add	r0, pc, #32
   21574:	mov	r4, #0
   21578:	mov	lr, #0
   2157c:	mov	r3, #0
   21580:	mov	r6, #0
   21584:	mov	r5, #0
   21588:	mov	r7, #0
   2158c:	ldr	r2, [r0, r1, lsl #2]
   21590:	mov	r1, #0
   21594:	add	pc, r0, r2
   21598:	andeq	r0, r0, ip, asr r0
   2159c:	andeq	r0, r0, r4, asr r0
   215a0:	andeq	r0, r0, ip, asr #32
   215a4:	andeq	r0, r0, r4, asr #32
   215a8:	andeq	r0, r0, r8, lsr r0
   215ac:	andeq	r0, r0, r8, lsr #32
   215b0:	andeq	r0, r0, r0, lsr #32
   215b4:	andeq	r0, r0, r0, lsr #32
   215b8:	ldrb	r0, [r9, #14]
   215bc:	lsl	lr, r0, #8
   215c0:	ldrb	r0, [r9, #13]
   215c4:	mov	r1, r4
   215c8:	orr	r0, lr, r0, lsl #16
   215cc:	mov	r4, r0
   215d0:	ldrb	r0, [r9, #12]
   215d4:	mov	r3, r1
   215d8:	orr	r4, r4, r0, lsl #24
   215dc:	ldrb	r0, [r9, #11]
   215e0:	orr	r6, r0, r3
   215e4:	ldrb	r0, [r9, #10]
   215e8:	orr	r5, r6, r0, lsl #8
   215ec:	ldrb	r0, [r9, #9]
   215f0:	orr	r7, r5, r0, lsl #16
   215f4:	ldrb	r0, [sl]
   215f8:	movw	r3, #25856	; 0x6500
   215fc:	bic	r2, r4, #255	; 0xff
   21600:	movt	r3, #31088	; 0x7970
   21604:	eor	r2, r2, r3
   21608:	orr	r1, r7, r0, lsl #24
   2160c:	ldr	r0, [sp, #28]
   21610:	eor	r0, r1, r0
   21614:	orrs	r0, r2, r0
   21618:	bne	21b50 <main@@Base+0xe794>
   2161c:	ldr	r8, [sp, #36]	; 0x24
   21620:	cmp	ip, #8
   21624:	blt	2279c <main@@Base+0xf3e0>
   21628:	ldr	r2, [sp, #32]
   2162c:	mov	r1, r9
   21630:	ldrb	r0, [r1, #15]!
   21634:	ldr	r2, [r2]
   21638:	cmp	r2, #0
   2163c:	beq	21d14 <main@@Base+0xe958>
   21640:	cmp	r0, #33	; 0x21
   21644:	bcc	21650 <main@@Base+0xe294>
   21648:	cmp	r0, #58	; 0x3a
   2164c:	bne	2279c <main@@Base+0xf3e0>
   21650:	ldr	r0, [sp, #32]
   21654:	mov	r2, #0
   21658:	str	r2, [r0]
   2165c:	b	21d20 <main@@Base+0xe964>
   21660:	andeq	r5, r2, ip, lsr #23
   21664:	movw	r0, #26720	; 0x6860
   21668:	ldr	r8, [sp, #36]	; 0x24
   2166c:	movt	r0, #24419	; 0x5f63
   21670:	subs	r0, r0, r1
   21674:	movw	r0, #26990	; 0x696e
   21678:	movt	r0, #28001	; 0x6d61
   2167c:	sbcs	r0, r0, r2
   21680:	bcc	217b8 <main@@Base+0xe3fc>
   21684:	movw	r0, #29797	; 0x7465
   21688:	movt	r0, #24931	; 0x6163
   2168c:	eor	r0, r1, r0
   21690:	movw	r1, #24946	; 0x6172
   21694:	movt	r1, #25448	; 0x6368
   21698:	eor	r1, r2, r1
   2169c:	orrs	r0, r0, r1
   216a0:	bne	21eec <main@@Base+0xeb30>
   216a4:	add	sl, r9, #8
   216a8:	mov	r1, #8
   216ac:	sub	ip, r8, sl
   216b0:	cmp	ip, #8
   216b4:	movcc	r1, ip
   216b8:	sub	r2, r1, #1
   216bc:	cmp	r2, #7
   216c0:	bhi	2279c <main@@Base+0xf3e0>
   216c4:	add	r0, pc, #32
   216c8:	mov	r1, #0
   216cc:	mov	lr, #0
   216d0:	mov	r4, #0
   216d4:	mov	r3, #0
   216d8:	mov	r6, #0
   216dc:	mov	r5, #0
   216e0:	mov	r7, #0
   216e4:	ldr	r2, [r0, r2, lsl #2]
   216e8:	add	pc, r0, r2
   216ec:	andeq	r0, r0, ip, asr r0
   216f0:	andeq	r0, r0, r4, asr r0
   216f4:	andeq	r0, r0, ip, asr #32
   216f8:	andeq	r0, r0, r4, asr #32
   216fc:	andeq	r0, r0, r8, lsr r0
   21700:	andeq	r0, r0, r8, lsr #32
   21704:	andeq	r0, r0, r0, lsr #32
   21708:	andeq	r0, r0, r0, lsr #32
   2170c:	ldrb	r0, [r9, #14]
   21710:	lsl	lr, r0, #8
   21714:	ldrb	r0, [r9, #13]
   21718:	mov	r4, r1
   2171c:	orr	r0, lr, r0, lsl #16
   21720:	mov	r1, r0
   21724:	ldrb	r0, [r9, #12]
   21728:	mov	r3, r4
   2172c:	orr	r1, r1, r0, lsl #24
   21730:	ldrb	r0, [r9, #11]
   21734:	orr	r6, r0, r3
   21738:	ldrb	r0, [r9, #10]
   2173c:	orr	r5, r6, r0, lsl #8
   21740:	ldrb	r0, [r9, #9]
   21744:	orr	r7, r5, r0, lsl #16
   21748:	bic	r0, r1, #255	; 0xff
   2174c:	movw	r1, #25856	; 0x6500
   21750:	movw	r2, #24436	; 0x5f74
   21754:	movt	r1, #31088	; 0x7970
   21758:	movt	r2, #29299	; 0x7273
   2175c:	eor	r0, r0, r1
   21760:	ldrb	r1, [sl]
   21764:	orr	r1, r7, r1, lsl #24
   21768:	eor	r2, r1, r2
   2176c:	orrs	r0, r0, r2
   21770:	bne	21ba8 <main@@Base+0xe7ec>
   21774:	ldr	r8, [sp, #36]	; 0x24
   21778:	cmp	ip, #8
   2177c:	blt	2279c <main@@Base+0xf3e0>
   21780:	ldr	r2, [sp, #32]
   21784:	mov	r1, r9
   21788:	ldrb	r0, [r1, #15]!
   2178c:	ldr	r2, [r2]
   21790:	cmp	r2, #0
   21794:	beq	21da0 <main@@Base+0xe9e4>
   21798:	cmp	r0, #33	; 0x21
   2179c:	bcc	217a8 <main@@Base+0xe3ec>
   217a0:	cmp	r0, #58	; 0x3a
   217a4:	bne	2279c <main@@Base+0xf3e0>
   217a8:	ldr	r0, [sp, #32]
   217ac:	mov	r2, #0
   217b0:	str	r2, [r0]
   217b4:	b	21dac <main@@Base+0xe9f0>
   217b8:	movw	r0, #26979	; 0x6963
   217bc:	movw	r3, #25701	; 0x6465
   217c0:	movt	r0, #24427	; 0x5f6b
   217c4:	movt	r3, #29545	; 0x7369
   217c8:	eor	r0, r1, r0
   217cc:	eor	r3, r2, r3
   217d0:	orrs	r0, r0, r3
   217d4:	beq	21a4c <main@@Base+0xe690>
   217d8:	movw	r0, #26721	; 0x6861
   217dc:	movt	r0, #24419	; 0x5f63
   217e0:	eor	r0, r1, r0
   217e4:	movw	r1, #26990	; 0x696e
   217e8:	movt	r1, #28001	; 0x6d61
   217ec:	eor	r1, r2, r1
   217f0:	orrs	r0, r0, r1
   217f4:	bne	21eec <main@@Base+0xeb30>
   217f8:	add	r7, r9, #8
   217fc:	mov	r1, #8
   21800:	sub	lr, r8, r7
   21804:	cmp	lr, #8
   21808:	movcc	r1, lr
   2180c:	sub	r2, r1, #1
   21810:	cmp	r2, #7
   21814:	bhi	22818 <main@@Base+0xf45c>
   21818:	str	r7, [sp, #24]
   2181c:	add	r0, pc, #36	; 0x24
   21820:	mov	r1, #0
   21824:	mov	ip, #0
   21828:	mov	sl, #0
   2182c:	mov	r6, #0
   21830:	mov	r3, #0
   21834:	mov	r7, #0
   21838:	mov	r5, #0
   2183c:	ldr	r4, [r0, r2, lsl #2]
   21840:	mov	r2, #0
   21844:	add	pc, r0, r4
   21848:	andeq	r0, r0, r4, rrx
   2184c:	andeq	r0, r0, ip, asr r0
   21850:	andeq	r0, r0, r4, asr r0
   21854:	andeq	r0, r0, ip, asr #32
   21858:	andeq	r0, r0, r0, asr #32
   2185c:	andeq	r0, r0, r4, lsr r0
   21860:	andeq	r0, r0, r4, lsr #32
   21864:	andeq	r0, r0, r0, lsr #32
   21868:	ldrb	ip, [r9, #15]
   2186c:	ldrb	r0, [r9, #14]
   21870:	mov	sl, r1
   21874:	orr	r0, ip, r0, lsl #8
   21878:	mov	r1, r0
   2187c:	ldrb	r0, [r9, #13]
   21880:	mov	r6, sl
   21884:	orr	r1, r1, r0, lsl #16
   21888:	ldrb	r0, [r9, #12]
   2188c:	mov	r3, r6
   21890:	orr	r1, r1, r0, lsl #24
   21894:	ldrb	r0, [r9, #11]
   21898:	orr	r7, r0, r3
   2189c:	ldrb	r0, [r9, #10]
   218a0:	orr	r5, r7, r0, lsl #8
   218a4:	ldrb	r0, [r9, #9]
   218a8:	orr	r2, r5, r0, lsl #16
   218ac:	ldr	r7, [sp, #24]
   218b0:	movw	r0, #24436	; 0x5f74
   218b4:	movt	r0, #25970	; 0x6572
   218b8:	eor	r0, r1, r0
   218bc:	ldrb	r3, [r7]
   218c0:	orr	r2, r2, r3, lsl #24
   218c4:	movw	r3, #25460	; 0x6374
   218c8:	movt	r3, #29281	; 0x7261
   218cc:	eor	r3, r2, r3
   218d0:	orrs	r0, r0, r3
   218d4:	bne	21c00 <main@@Base+0xe844>
   218d8:	ldr	r8, [sp, #36]	; 0x24
   218dc:	add	r7, r9, #16
   218e0:	mov	r2, #8
   218e4:	sub	r0, r8, r7
   218e8:	cmp	r0, #8
   218ec:	movcc	r2, r0
   218f0:	sub	r1, r2, #3
   218f4:	cmp	r1, #6
   218f8:	bcs	21d84 <main@@Base+0xe9c8>
   218fc:	ldrb	r1, [r9, #18]
   21900:	lsl	r1, r1, #8
   21904:	ldrb	r2, [r9, #17]
   21908:	orr	r1, r1, r2, lsl #16
   2190c:	ldrb	r2, [r7]
   21910:	bic	r1, r1, #255	; 0xff
   21914:	orr	r1, r1, r2, lsl #24
   21918:	movw	r2, #25856	; 0x6500
   2191c:	movt	r2, #31088	; 0x7970
   21920:	teq	r1, r2
   21924:	bne	22818 <main@@Base+0xf45c>
   21928:	cmp	r0, #4
   2192c:	blt	22818 <main@@Base+0xf45c>
   21930:	ldr	r2, [sp, #32]
   21934:	mov	r1, r9
   21938:	ldrb	r0, [r1, #19]!
   2193c:	ldr	r2, [r2]
   21940:	cmp	r2, #0
   21944:	beq	2211c <main@@Base+0xed60>
   21948:	ldr	r8, [sp, #36]	; 0x24
   2194c:	cmp	r0, #33	; 0x21
   21950:	bcc	2195c <main@@Base+0xe5a0>
   21954:	cmp	r0, #58	; 0x3a
   21958:	bne	22818 <main@@Base+0xf45c>
   2195c:	ldr	r0, [sp, #32]
   21960:	mov	r2, #0
   21964:	str	r2, [r0]
   21968:	b	2212c <main@@Base+0xed70>
   2196c:	add	r7, r9, #8
   21970:	mov	r2, #8
   21974:	sub	r0, r8, r7
   21978:	cmp	r0, #8
   2197c:	movcc	r2, r0
   21980:	sub	r1, r2, #2
   21984:	cmp	r1, #7
   21988:	bcs	21c70 <main@@Base+0xe8b4>
   2198c:	ldrb	r1, [r9, #9]
   21990:	lsl	r2, r1, #16
   21994:	mov	r1, #0
   21998:	ldrb	r3, [r7]
   2199c:	orr	r2, r2, r3, lsl #24
   219a0:	movw	r3, #0
   219a4:	movt	r3, #28773	; 0x7065
   219a8:	eor	r2, r2, r3
   219ac:	orrs	r1, r1, r2
   219b0:	bne	22818 <main@@Base+0xf45c>
   219b4:	cmp	r0, #3
   219b8:	blt	22818 <main@@Base+0xf45c>
   219bc:	ldr	r2, [sp, #32]
   219c0:	mov	r1, r9
   219c4:	ldrb	r0, [r1, #10]!
   219c8:	ldr	r2, [r2]
   219cc:	cmp	r2, #0
   219d0:	beq	21d4c <main@@Base+0xe990>
   219d4:	cmp	r0, #33	; 0x21
   219d8:	bcc	219e4 <main@@Base+0xe628>
   219dc:	cmp	r0, #58	; 0x3a
   219e0:	bne	22818 <main@@Base+0xf45c>
   219e4:	ldr	r0, [sp, #32]
   219e8:	mov	r2, #0
   219ec:	str	r2, [r0]
   219f0:	b	21d58 <main@@Base+0xe99c>
   219f4:	and	r0, r1, #-16777216	; 0xff000000
   219f8:	eor	r0, r0, #1862270976	; 0x6f000000
   219fc:	orrs	r0, r0, r3
   21a00:	bne	21eec <main@@Base+0xeb30>
   21a04:	cmp	ip, #6
   21a08:	mov	r1, r9
   21a0c:	blt	222ec <main@@Base+0xef30>
   21a10:	ldr	r1, [sp, #32]
   21a14:	mov	r2, r9
   21a18:	ldrb	r0, [r2, #5]!
   21a1c:	ldr	r1, [r1]
   21a20:	cmp	r1, #0
   21a24:	beq	21cd8 <main@@Base+0xe91c>
   21a28:	cmp	r0, #33	; 0x21
   21a2c:	bcc	21a3c <main@@Base+0xe680>
   21a30:	cmp	r0, #58	; 0x3a
   21a34:	mov	r1, r9
   21a38:	bne	222ec <main@@Base+0xef30>
   21a3c:	ldr	r0, [sp, #32]
   21a40:	mov	r1, #0
   21a44:	str	r1, [r0]
   21a48:	b	21ce8 <main@@Base+0xe92c>
   21a4c:	add	sl, r9, #8
   21a50:	mov	r1, #8
   21a54:	sub	r0, r8, sl
   21a58:	cmp	r0, #8
   21a5c:	movcc	r1, r0
   21a60:	sub	r2, r1, #1
   21a64:	cmp	r2, #7
   21a68:	bhi	2279c <main@@Base+0xf3e0>
   21a6c:	add	r7, pc, #28
   21a70:	mov	ip, #0
   21a74:	mov	r3, #0
   21a78:	mov	r6, #0
   21a7c:	mov	r5, #0
   21a80:	mov	r4, #0
   21a84:	ldr	r1, [r7, r2, lsl #2]
   21a88:	mov	r2, #0
   21a8c:	add	pc, r7, r1
   21a90:	andeq	r0, r0, r0, asr r0
   21a94:	andeq	r0, r0, r8, asr #32
   21a98:	andeq	r0, r0, r0, asr #32
   21a9c:	andeq	r0, r0, r8, lsr r0
   21aa0:	andeq	r0, r0, r8, lsr #32
   21aa4:	andeq	r0, r0, r0, lsr #32
   21aa8:	andeq	r0, r0, r0, lsr #32
   21aac:	andeq	r0, r0, r0, lsr #32
   21ab0:	ldrb	r1, [r9, #13]
   21ab4:	lsl	r2, r1, #16
   21ab8:	ldrb	r1, [r9, #12]
   21abc:	mov	r3, ip
   21ac0:	orr	r1, r2, r1, lsl #24
   21ac4:	mov	ip, r1
   21ac8:	ldrb	r1, [r9, #11]
   21acc:	orr	r6, r1, r3
   21ad0:	ldrb	r1, [r9, #10]
   21ad4:	orr	r5, r6, r1, lsl #8
   21ad8:	ldrb	r1, [r9, #9]
   21adc:	orr	r4, r5, r1, lsl #16
   21ae0:	ldrb	r1, [sl]
   21ae4:	movw	r7, #28773	; 0x7065
   21ae8:	lsr	r3, ip, #16
   21aec:	movt	r7, #29817	; 0x7479
   21af0:	orr	r2, r4, r1, lsl #24
   21af4:	movw	r1, #27487	; 0x6b5f
   21af8:	orr	r3, r3, r2, lsl #16
   21afc:	eor	r1, r1, r2, lsr #16
   21b00:	eor	r3, r3, r7
   21b04:	orrs	r1, r3, r1
   21b08:	bne	21c84 <main@@Base+0xe8c8>
   21b0c:	ldr	r8, [sp, #36]	; 0x24
   21b10:	cmp	r0, #7
   21b14:	blt	2279c <main@@Base+0xf3e0>
   21b18:	ldr	r2, [sp, #32]
   21b1c:	mov	r1, r9
   21b20:	ldrb	r0, [r1, #14]!
   21b24:	ldr	r2, [r2]
   21b28:	cmp	r2, #0
   21b2c:	beq	21dd8 <main@@Base+0xea1c>
   21b30:	cmp	r0, #33	; 0x21
   21b34:	bcc	21b40 <main@@Base+0xe784>
   21b38:	cmp	r0, #58	; 0x3a
   21b3c:	bne	2279c <main@@Base+0xf3e0>
   21b40:	ldr	r0, [sp, #32]
   21b44:	mov	r2, #0
   21b48:	str	r2, [r0]
   21b4c:	b	21de4 <main@@Base+0xea28>
   21b50:	movw	r0, #0
   21b54:	ldr	r8, [sp, #36]	; 0x24
   21b58:	bfc	r1, #0, #16
   21b5c:	movt	r0, #29556	; 0x7374
   21b60:	teq	r1, r0
   21b64:	bne	2279c <main@@Base+0xf3e0>
   21b68:	cmp	ip, #3
   21b6c:	blt	2279c <main@@Base+0xf3e0>
   21b70:	ldr	r2, [sp, #32]
   21b74:	mov	r1, r9
   21b78:	ldrb	r0, [r1, #10]!
   21b7c:	ldr	r2, [r2]
   21b80:	cmp	r2, #0
   21b84:	beq	21e14 <main@@Base+0xea58>
   21b88:	cmp	r0, #33	; 0x21
   21b8c:	bcc	21b98 <main@@Base+0xe7dc>
   21b90:	cmp	r0, #58	; 0x3a
   21b94:	bne	2279c <main@@Base+0xf3e0>
   21b98:	ldr	r0, [sp, #32]
   21b9c:	mov	r2, #0
   21ba0:	str	r2, [r0]
   21ba4:	b	21e20 <main@@Base+0xea64>
   21ba8:	movw	r0, #0
   21bac:	ldr	r8, [sp, #36]	; 0x24
   21bb0:	bfc	r1, #0, #16
   21bb4:	movt	r0, #29299	; 0x7273
   21bb8:	teq	r1, r0
   21bbc:	bne	2279c <main@@Base+0xf3e0>
   21bc0:	cmp	ip, #3
   21bc4:	blt	2279c <main@@Base+0xf3e0>
   21bc8:	ldr	r2, [sp, #32]
   21bcc:	mov	r1, r9
   21bd0:	ldrb	r0, [r1, #10]!
   21bd4:	ldr	r2, [r2]
   21bd8:	cmp	r2, #0
   21bdc:	beq	21e50 <main@@Base+0xea94>
   21be0:	cmp	r0, #33	; 0x21
   21be4:	bcc	21bf0 <main@@Base+0xe834>
   21be8:	cmp	r0, #58	; 0x3a
   21bec:	bne	2279c <main@@Base+0xf3e0>
   21bf0:	ldr	r0, [sp, #32]
   21bf4:	mov	r2, #0
   21bf8:	str	r2, [r0]
   21bfc:	b	21e5c <main@@Base+0xeaa0>
   21c00:	movw	r0, #29281	; 0x7261
   21c04:	lsr	r1, r1, #16
   21c08:	ldr	r8, [sp, #36]	; 0x24
   21c0c:	eor	r0, r0, r2, lsr #16
   21c10:	orr	r1, r1, r2, lsl #16
   21c14:	movw	r2, #25970	; 0x6572
   21c18:	movt	r2, #25460	; 0x6374
   21c1c:	eor	r1, r1, r2
   21c20:	orrs	r0, r1, r0
   21c24:	bne	22818 <main@@Base+0xf45c>
   21c28:	cmp	lr, #7
   21c2c:	blt	22818 <main@@Base+0xf45c>
   21c30:	ldr	r2, [sp, #32]
   21c34:	mov	r1, r9
   21c38:	ldrb	r0, [r1, #14]!
   21c3c:	ldr	r2, [r2]
   21c40:	cmp	r2, #0
   21c44:	beq	2201c <main@@Base+0xec60>
   21c48:	ldr	r8, [sp, #36]	; 0x24
   21c4c:	ldr	r7, [sp, #24]
   21c50:	cmp	r0, #33	; 0x21
   21c54:	bcc	21c60 <main@@Base+0xe8a4>
   21c58:	cmp	r0, #58	; 0x3a
   21c5c:	bne	22818 <main@@Base+0xf45c>
   21c60:	ldr	r0, [sp, #32]
   21c64:	mov	r2, #0
   21c68:	str	r2, [r0]
   21c6c:	b	22030 <main@@Base+0xec74>
   21c70:	cmp	r2, #1
   21c74:	mov	r1, #0
   21c78:	mov	r2, #0
   21c7c:	beq	21998 <main@@Base+0xe5dc>
   21c80:	b	22818 <main@@Base+0xf45c>
   21c84:	ldr	r8, [sp, #36]	; 0x24
   21c88:	and	r1, r2, #-16777216	; 0xff000000
   21c8c:	teq	r1, #1795162112	; 0x6b000000
   21c90:	bne	2279c <main@@Base+0xf3e0>
   21c94:	cmp	r0, #2
   21c98:	blt	2279c <main@@Base+0xf3e0>
   21c9c:	ldr	r2, [sp, #32]
   21ca0:	mov	r1, r9
   21ca4:	ldrb	r0, [r1, #9]!
   21ca8:	ldr	r2, [r2]
   21cac:	cmp	r2, #0
   21cb0:	beq	22054 <main@@Base+0xec98>
   21cb4:	ldr	r8, [sp, #36]	; 0x24
   21cb8:	cmp	r0, #33	; 0x21
   21cbc:	bcc	21cc8 <main@@Base+0xe90c>
   21cc0:	cmp	r0, #58	; 0x3a
   21cc4:	bne	2279c <main@@Base+0xf3e0>
   21cc8:	ldr	r0, [sp, #32]
   21ccc:	mov	r2, #0
   21cd0:	str	r2, [r0]
   21cd4:	b	22064 <main@@Base+0xeca8>
   21cd8:	cmp	r0, #34	; 0x22
   21cdc:	mov	r1, r9
   21ce0:	bne	222ec <main@@Base+0xef30>
   21ce4:	add	r2, r9, #6
   21ce8:	sub	r0, r8, r2
   21cec:	cmp	r0, #2
   21cf0:	blt	21e98 <main@@Base+0xeadc>
   21cf4:	ldrb	r0, [r2]
   21cf8:	cmp	r0, #32
   21cfc:	bls	21e80 <main@@Base+0xeac4>
   21d00:	ldr	r8, [sp, #36]	; 0x24
   21d04:	mov	r1, r2
   21d08:	cmp	r1, r8
   21d0c:	bne	21eb4 <main@@Base+0xeaf8>
   21d10:	b	21ef8 <main@@Base+0xeb3c>
   21d14:	cmp	r0, #34	; 0x22
   21d18:	bne	2279c <main@@Base+0xf3e0>
   21d1c:	add	r1, r9, #16
   21d20:	sub	r0, r8, r1
   21d24:	cmp	r0, #2
   21d28:	blt	21f24 <main@@Base+0xeb68>
   21d2c:	ldrb	r0, [r1]
   21d30:	cmp	r0, #32
   21d34:	bls	21f0c <main@@Base+0xeb50>
   21d38:	ldr	r8, [sp, #36]	; 0x24
   21d3c:	mov	r2, r1
   21d40:	cmp	r2, r8
   21d44:	bne	21f3c <main@@Base+0xeb80>
   21d48:	b	21f78 <main@@Base+0xebbc>
   21d4c:	cmp	r0, #34	; 0x22
   21d50:	bne	22818 <main@@Base+0xf45c>
   21d54:	add	r1, r9, #11
   21d58:	sub	r0, r8, r1
   21d5c:	cmp	r0, #2
   21d60:	blt	21fa8 <main@@Base+0xebec>
   21d64:	ldrb	r0, [r1]
   21d68:	cmp	r0, #32
   21d6c:	bls	21f90 <main@@Base+0xebd4>
   21d70:	ldr	r8, [sp, #36]	; 0x24
   21d74:	mov	r2, r1
   21d78:	cmp	r2, r8
   21d7c:	bne	21fc0 <main@@Base+0xec04>
   21d80:	b	21ffc <main@@Base+0xec40>
   21d84:	mov	r1, #0
   21d88:	cmp	r2, #1
   21d8c:	beq	22014 <main@@Base+0xec58>
   21d90:	ldr	r8, [sp, #36]	; 0x24
   21d94:	cmp	r2, #2
   21d98:	beq	21904 <main@@Base+0xe548>
   21d9c:	b	22818 <main@@Base+0xf45c>
   21da0:	cmp	r0, #34	; 0x22
   21da4:	bne	2279c <main@@Base+0xf3e0>
   21da8:	add	r1, r9, #16
   21dac:	sub	r0, r8, r1
   21db0:	cmp	r0, #2
   21db4:	blt	220ac <main@@Base+0xecf0>
   21db8:	ldrb	r0, [r1]
   21dbc:	cmp	r0, #32
   21dc0:	bls	22094 <main@@Base+0xecd8>
   21dc4:	ldr	r8, [sp, #36]	; 0x24
   21dc8:	mov	r2, r1
   21dcc:	cmp	r2, r8
   21dd0:	bne	220c4 <main@@Base+0xed08>
   21dd4:	b	22104 <main@@Base+0xed48>
   21dd8:	cmp	r0, #34	; 0x22
   21ddc:	bne	2279c <main@@Base+0xf3e0>
   21de0:	add	r1, r9, #15
   21de4:	ldr	r4, [sp, #36]	; 0x24
   21de8:	sub	r0, r4, r1
   21dec:	cmp	r0, #2
   21df0:	blt	22168 <main@@Base+0xedac>
   21df4:	ldrb	r0, [r1]
   21df8:	cmp	r0, #32
   21dfc:	bls	22150 <main@@Base+0xed94>
   21e00:	ldr	r4, [sp, #36]	; 0x24
   21e04:	mov	r2, r1
   21e08:	cmp	r2, r4
   21e0c:	bne	22180 <main@@Base+0xedc4>
   21e10:	b	221b4 <main@@Base+0xedf8>
   21e14:	cmp	r0, #34	; 0x22
   21e18:	bne	2279c <main@@Base+0xf3e0>
   21e1c:	add	r1, r9, #11
   21e20:	ldr	r4, [sp, #36]	; 0x24
   21e24:	sub	r0, r4, r1
   21e28:	cmp	r0, #2
   21e2c:	blt	221e4 <main@@Base+0xee28>
   21e30:	ldrb	r0, [r1]
   21e34:	cmp	r0, #32
   21e38:	bls	221cc <main@@Base+0xee10>
   21e3c:	ldr	r4, [sp, #36]	; 0x24
   21e40:	mov	r2, r1
   21e44:	cmp	r2, r4
   21e48:	bne	221fc <main@@Base+0xee40>
   21e4c:	b	22230 <main@@Base+0xee74>
   21e50:	cmp	r0, #34	; 0x22
   21e54:	bne	2279c <main@@Base+0xf3e0>
   21e58:	add	r1, r9, #11
   21e5c:	ldr	r0, [sp, #36]	; 0x24
   21e60:	sub	r0, r0, r1
   21e64:	cmp	r0, #2
   21e68:	blt	2225c <main@@Base+0xeea0>
   21e6c:	ldrb	r0, [r1]
   21e70:	cmp	r0, #32
   21e74:	bls	22248 <main@@Base+0xee8c>
   21e78:	mov	r2, r1
   21e7c:	b	2226c <main@@Base+0xeeb0>
   21e80:	ldr	r8, [sp, #36]	; 0x24
   21e84:	bne	21e98 <main@@Base+0xeadc>
   21e88:	mov	r1, r2
   21e8c:	ldrb	r0, [r1, #1]!
   21e90:	cmp	r0, #32
   21e94:	bhi	21eac <main@@Base+0xeaf0>
   21e98:	ldr	r0, [sp, #44]	; 0x2c
   21e9c:	mov	r1, r2
   21ea0:	mov	r2, r8
   21ea4:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   21ea8:	mov	r1, r0
   21eac:	cmp	r1, r8
   21eb0:	beq	21ef8 <main@@Base+0xeb3c>
   21eb4:	ldrb	r0, [r1]
   21eb8:	cmp	r0, #58	; 0x3a
   21ebc:	bne	21ef8 <main@@Base+0xeb3c>
   21ec0:	add	r2, r1, #1
   21ec4:	sub	r0, r8, r2
   21ec8:	cmp	r0, #2
   21ecc:	blt	222d8 <main@@Base+0xef1c>
   21ed0:	ldrb	r0, [r2]
   21ed4:	cmp	r0, #32
   21ed8:	bls	222c4 <main@@Base+0xef08>
   21edc:	ldr	r8, [sp, #36]	; 0x24
   21ee0:	mov	r1, r2
   21ee4:	cmp	r9, r1
   21ee8:	bne	222f4 <main@@Base+0xef38>
   21eec:	ldr	r5, [sp, #44]	; 0x2c
   21ef0:	mov	r1, r9
   21ef4:	b	22820 <main@@Base+0xf464>
   21ef8:	ldr	r0, [sp, #44]	; 0x2c
   21efc:	mov	r2, r8
   21f00:	mov	r3, #4
   21f04:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   21f08:	b	222e8 <main@@Base+0xef2c>
   21f0c:	ldr	r8, [sp, #36]	; 0x24
   21f10:	bne	21f24 <main@@Base+0xeb68>
   21f14:	mov	r2, r1
   21f18:	ldrb	r0, [r2, #1]!
   21f1c:	cmp	r0, #32
   21f20:	bhi	21f34 <main@@Base+0xeb78>
   21f24:	ldr	r0, [sp, #44]	; 0x2c
   21f28:	mov	r2, r8
   21f2c:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   21f30:	mov	r2, r0
   21f34:	cmp	r2, r8
   21f38:	beq	21f78 <main@@Base+0xebbc>
   21f3c:	ldrb	r0, [r2]
   21f40:	cmp	r0, #58	; 0x3a
   21f44:	bne	21f78 <main@@Base+0xebbc>
   21f48:	add	r1, r2, #1
   21f4c:	sub	r0, r8, r1
   21f50:	cmp	r0, #2
   21f54:	blt	2233c <main@@Base+0xef80>
   21f58:	ldrb	r0, [r1]
   21f5c:	cmp	r0, #32
   21f60:	bls	22328 <main@@Base+0xef6c>
   21f64:	ldr	r8, [sp, #36]	; 0x24
   21f68:	mov	r2, r1
   21f6c:	cmp	sl, r2
   21f70:	bne	22354 <main@@Base+0xef98>
   21f74:	b	2279c <main@@Base+0xf3e0>
   21f78:	ldr	r0, [sp, #44]	; 0x2c
   21f7c:	mov	r1, r2
   21f80:	mov	r2, r8
   21f84:	mov	r3, #4
   21f88:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   21f8c:	b	22348 <main@@Base+0xef8c>
   21f90:	ldr	r8, [sp, #36]	; 0x24
   21f94:	bne	21fa8 <main@@Base+0xebec>
   21f98:	mov	r2, r1
   21f9c:	ldrb	r0, [r2, #1]!
   21fa0:	cmp	r0, #32
   21fa4:	bhi	21fb8 <main@@Base+0xebfc>
   21fa8:	ldr	r0, [sp, #44]	; 0x2c
   21fac:	mov	r2, r8
   21fb0:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   21fb4:	mov	r2, r0
   21fb8:	cmp	r2, r8
   21fbc:	beq	21ffc <main@@Base+0xec40>
   21fc0:	ldrb	r0, [r2]
   21fc4:	cmp	r0, #58	; 0x3a
   21fc8:	bne	21ffc <main@@Base+0xec40>
   21fcc:	add	r1, r2, #1
   21fd0:	sub	r0, r8, r1
   21fd4:	cmp	r0, #2
   21fd8:	blt	2239c <main@@Base+0xefe0>
   21fdc:	ldrb	r0, [r1]
   21fe0:	cmp	r0, #32
   21fe4:	bls	22388 <main@@Base+0xefcc>
   21fe8:	ldr	r8, [sp, #36]	; 0x24
   21fec:	mov	r2, r1
   21ff0:	cmp	r7, r2
   21ff4:	bne	223b4 <main@@Base+0xeff8>
   21ff8:	b	22818 <main@@Base+0xf45c>
   21ffc:	ldr	r0, [sp, #44]	; 0x2c
   22000:	mov	r1, r2
   22004:	mov	r2, r8
   22008:	mov	r3, #4
   2200c:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   22010:	b	223a8 <main@@Base+0xefec>
   22014:	ldr	r8, [sp, #36]	; 0x24
   22018:	b	2190c <main@@Base+0xe550>
   2201c:	ldr	r8, [sp, #36]	; 0x24
   22020:	ldr	r7, [sp, #24]
   22024:	cmp	r0, #34	; 0x22
   22028:	bne	22818 <main@@Base+0xf45c>
   2202c:	add	r1, r9, #15
   22030:	ldr	r0, [sp, #36]	; 0x24
   22034:	sub	r0, r0, r1
   22038:	cmp	r0, #2
   2203c:	blt	223fc <main@@Base+0xf040>
   22040:	ldrb	r0, [r1]
   22044:	cmp	r0, #32
   22048:	bls	223e8 <main@@Base+0xf02c>
   2204c:	mov	r2, r1
   22050:	b	2240c <main@@Base+0xf050>
   22054:	ldr	r8, [sp, #36]	; 0x24
   22058:	cmp	r0, #34	; 0x22
   2205c:	bne	2279c <main@@Base+0xf3e0>
   22060:	add	r1, r9, #10
   22064:	ldr	r0, [sp, #36]	; 0x24
   22068:	sub	r0, r0, r1
   2206c:	cmp	r0, #2
   22070:	blt	22478 <main@@Base+0xf0bc>
   22074:	ldrb	r0, [r1]
   22078:	cmp	r0, #32
   2207c:	bls	22464 <main@@Base+0xf0a8>
   22080:	mov	r2, r1
   22084:	b	22488 <main@@Base+0xf0cc>
   22088:			; <UNDEFINED> instruction: 0xffffe87c
   2208c:	andeq	r5, r2, r8, asr #2
   22090:			; <UNDEFINED> instruction: 0xffffe80c
   22094:	ldr	r8, [sp, #36]	; 0x24
   22098:	bne	220ac <main@@Base+0xecf0>
   2209c:	mov	r2, r1
   220a0:	ldrb	r0, [r2, #1]!
   220a4:	cmp	r0, #32
   220a8:	bhi	220bc <main@@Base+0xed00>
   220ac:	ldr	r0, [sp, #44]	; 0x2c
   220b0:	mov	r2, r8
   220b4:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   220b8:	mov	r2, r0
   220bc:	cmp	r2, r8
   220c0:	beq	22104 <main@@Base+0xed48>
   220c4:	ldrb	r0, [r2]
   220c8:	cmp	r0, #58	; 0x3a
   220cc:	bne	22104 <main@@Base+0xed48>
   220d0:	add	r1, r2, #1
   220d4:	sub	r0, r8, r1
   220d8:	cmp	r0, #2
   220dc:	blt	224f4 <main@@Base+0xf138>
   220e0:	ldrb	r0, [r1]
   220e4:	cmp	r0, #32
   220e8:	bls	224e0 <main@@Base+0xf124>
   220ec:	ldr	r8, [sp, #36]	; 0x24
   220f0:	mov	r2, r1
   220f4:	cmp	sl, r2
   220f8:	bne	2250c <main@@Base+0xf150>
   220fc:	b	2279c <main@@Base+0xf3e0>
   22100:	muleq	r0, r4, r7
   22104:	ldr	r0, [sp, #44]	; 0x2c
   22108:	mov	r1, r2
   2210c:	mov	r2, r8
   22110:	mov	r3, #4
   22114:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   22118:	b	22500 <main@@Base+0xf144>
   2211c:	ldr	r8, [sp, #36]	; 0x24
   22120:	cmp	r0, #34	; 0x22
   22124:	bne	22818 <main@@Base+0xf45c>
   22128:	add	r1, r9, #20
   2212c:	ldr	r0, [sp, #36]	; 0x24
   22130:	sub	r0, r0, r1
   22134:	cmp	r0, #2
   22138:	blt	22570 <main@@Base+0xf1b4>
   2213c:	ldrb	r0, [r1]
   22140:	cmp	r0, #32
   22144:	bls	2255c <main@@Base+0xf1a0>
   22148:	mov	r2, r1
   2214c:	b	22580 <main@@Base+0xf1c4>
   22150:	ldr	r4, [sp, #36]	; 0x24
   22154:	bne	22168 <main@@Base+0xedac>
   22158:	mov	r2, r1
   2215c:	ldrb	r0, [r2, #1]!
   22160:	cmp	r0, #32
   22164:	bhi	22178 <main@@Base+0xedbc>
   22168:	ldr	r0, [sp, #44]	; 0x2c
   2216c:	mov	r2, r4
   22170:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   22174:	mov	r2, r0
   22178:	cmp	r2, r4
   2217c:	beq	221b4 <main@@Base+0xedf8>
   22180:	ldrb	r0, [r2]
   22184:	cmp	r0, #58	; 0x3a
   22188:	bne	221b4 <main@@Base+0xedf8>
   2218c:	ldr	r0, [sp, #36]	; 0x24
   22190:	add	r1, r2, #1
   22194:	sub	r0, r0, r1
   22198:	cmp	r0, #2
   2219c:	blt	2263c <main@@Base+0xf280>
   221a0:	ldrb	r0, [r1]
   221a4:	cmp	r0, #32
   221a8:	bls	2262c <main@@Base+0xf270>
   221ac:	mov	r2, r1
   221b0:	b	2264c <main@@Base+0xf290>
   221b4:	mov	r1, r2
   221b8:	ldr	r0, [sp, #44]	; 0x2c
   221bc:	ldr	r2, [sp, #36]	; 0x24
   221c0:	mov	r3, #4
   221c4:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   221c8:	b	22648 <main@@Base+0xf28c>
   221cc:	ldr	r4, [sp, #36]	; 0x24
   221d0:	bne	221e4 <main@@Base+0xee28>
   221d4:	mov	r2, r1
   221d8:	ldrb	r0, [r2, #1]!
   221dc:	cmp	r0, #32
   221e0:	bhi	221f4 <main@@Base+0xee38>
   221e4:	ldr	r0, [sp, #44]	; 0x2c
   221e8:	mov	r2, r4
   221ec:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   221f0:	mov	r2, r0
   221f4:	cmp	r2, r4
   221f8:	beq	22230 <main@@Base+0xee74>
   221fc:	ldrb	r0, [r2]
   22200:	cmp	r0, #58	; 0x3a
   22204:	bne	22230 <main@@Base+0xee74>
   22208:	ldr	r0, [sp, #36]	; 0x24
   2220c:	add	r1, r2, #1
   22210:	sub	r0, r0, r1
   22214:	cmp	r0, #2
   22218:	blt	225e8 <main@@Base+0xf22c>
   2221c:	ldrb	r0, [r1]
   22220:	cmp	r0, #32
   22224:	bls	225d8 <main@@Base+0xf21c>
   22228:	mov	r2, r1
   2222c:	b	225f8 <main@@Base+0xf23c>
   22230:	mov	r1, r2
   22234:	ldr	r0, [sp, #44]	; 0x2c
   22238:	ldr	r2, [sp, #36]	; 0x24
   2223c:	mov	r3, #4
   22240:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   22244:	b	225f4 <main@@Base+0xf238>
   22248:	bne	2225c <main@@Base+0xeea0>
   2224c:	mov	r2, r1
   22250:	ldrb	r0, [r2, #1]!
   22254:	cmp	r0, #32
   22258:	bhi	2226c <main@@Base+0xeeb0>
   2225c:	ldr	r0, [sp, #44]	; 0x2c
   22260:	ldr	r2, [sp, #36]	; 0x24
   22264:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   22268:	mov	r2, r0
   2226c:	ldr	r0, [sp, #36]	; 0x24
   22270:	cmp	r2, r0
   22274:	beq	222ac <main@@Base+0xeef0>
   22278:	ldrb	r0, [r2]
   2227c:	cmp	r0, #58	; 0x3a
   22280:	bne	222ac <main@@Base+0xeef0>
   22284:	ldr	r0, [sp, #36]	; 0x24
   22288:	add	r1, r2, #1
   2228c:	sub	r0, r0, r1
   22290:	cmp	r0, #2
   22294:	blt	2269c <main@@Base+0xf2e0>
   22298:	ldrb	r0, [r1]
   2229c:	cmp	r0, #32
   222a0:	bls	2268c <main@@Base+0xf2d0>
   222a4:	mov	r2, r1
   222a8:	b	226ac <main@@Base+0xf2f0>
   222ac:	mov	r1, r2
   222b0:	ldr	r0, [sp, #44]	; 0x2c
   222b4:	ldr	r2, [sp, #36]	; 0x24
   222b8:	mov	r3, #4
   222bc:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   222c0:	b	226a8 <main@@Base+0xf2ec>
   222c4:	ldr	r8, [sp, #36]	; 0x24
   222c8:	bne	222d8 <main@@Base+0xef1c>
   222cc:	ldrb	r0, [r1, #2]!
   222d0:	cmp	r0, #32
   222d4:	bhi	222ec <main@@Base+0xef30>
   222d8:	ldr	r0, [sp, #44]	; 0x2c
   222dc:	mov	r1, r2
   222e0:	mov	r2, r8
   222e4:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   222e8:	mov	r1, r0
   222ec:	cmp	r9, r1
   222f0:	beq	21eec <main@@Base+0xeb30>
   222f4:	ldr	r0, [sp, #48]	; 0x30
   222f8:	mov	r2, #7
   222fc:	mov	r3, #3
   22300:	str	r2, [sp]
   22304:	mov	r2, r8
   22308:	str	r0, [sp, #4]
   2230c:	ldr	r0, [pc, #2052]	; 22b18 <main@@Base+0xf75c>
   22310:	add	r0, pc, r0
   22314:	str	r0, [sp, #8]
   22318:	ldr	r5, [sp, #44]	; 0x2c
   2231c:	mov	r0, r5
   22320:	bl	31cb0 <flatcc_json_parser_union@@Base>
   22324:	b	2282c <main@@Base+0xf470>
   22328:	ldr	r8, [sp, #36]	; 0x24
   2232c:	bne	2233c <main@@Base+0xef80>
   22330:	ldrb	r0, [r2, #2]!
   22334:	cmp	r0, #32
   22338:	bhi	2234c <main@@Base+0xef90>
   2233c:	ldr	r0, [sp, #44]	; 0x2c
   22340:	mov	r2, r8
   22344:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   22348:	mov	r2, r0
   2234c:	cmp	sl, r2
   22350:	beq	2279c <main@@Base+0xf3e0>
   22354:	ldr	r0, [sp, #48]	; 0x30
   22358:	mov	r1, #3
   2235c:	mov	r3, #1
   22360:	str	r1, [sp]
   22364:	mov	r1, r2
   22368:	mov	r2, r8
   2236c:	str	r0, [sp, #4]
   22370:	ldr	r0, [pc, #1932]	; 22b04 <main@@Base+0xf748>
   22374:	add	r0, pc, r0
   22378:	str	r0, [sp, #8]
   2237c:	ldr	r0, [pc, #1924]	; 22b08 <main@@Base+0xf74c>
   22380:	add	r0, pc, r0
   22384:	b	22804 <main@@Base+0xf448>
   22388:	ldr	r8, [sp, #36]	; 0x24
   2238c:	bne	2239c <main@@Base+0xefe0>
   22390:	ldrb	r0, [r2, #2]!
   22394:	cmp	r0, #32
   22398:	bhi	223ac <main@@Base+0xeff0>
   2239c:	ldr	r0, [sp, #44]	; 0x2c
   223a0:	mov	r2, r8
   223a4:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   223a8:	mov	r2, r0
   223ac:	cmp	r7, r2
   223b0:	beq	22818 <main@@Base+0xf45c>
   223b4:	ldr	r0, [sp, #48]	; 0x30
   223b8:	mov	r1, #7
   223bc:	mov	r3, #3
   223c0:	str	r1, [sp]
   223c4:	mov	r1, r2
   223c8:	mov	r2, r8
   223cc:	str	r0, [sp, #4]
   223d0:	ldr	r0, [pc, #1848]	; 22b10 <main@@Base+0xf754>
   223d4:	add	r0, pc, r0
   223d8:	str	r0, [sp, #8]
   223dc:	ldr	r0, [pc, #1840]	; 22b14 <main@@Base+0xf758>
   223e0:	add	r0, pc, r0
   223e4:	b	22804 <main@@Base+0xf448>
   223e8:	bne	223fc <main@@Base+0xf040>
   223ec:	mov	r2, r1
   223f0:	ldrb	r0, [r2, #1]!
   223f4:	cmp	r0, #32
   223f8:	bhi	2240c <main@@Base+0xf050>
   223fc:	ldr	r0, [sp, #44]	; 0x2c
   22400:	ldr	r2, [sp, #36]	; 0x24
   22404:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   22408:	mov	r2, r0
   2240c:	ldr	r0, [sp, #36]	; 0x24
   22410:	cmp	r2, r0
   22414:	beq	2244c <main@@Base+0xf090>
   22418:	ldrb	r0, [r2]
   2241c:	cmp	r0, #58	; 0x3a
   22420:	bne	2244c <main@@Base+0xf090>
   22424:	ldr	r0, [sp, #36]	; 0x24
   22428:	add	r1, r2, #1
   2242c:	sub	r0, r0, r1
   22430:	cmp	r0, #2
   22434:	blt	22700 <main@@Base+0xf344>
   22438:	ldrb	r0, [r1]
   2243c:	cmp	r0, #32
   22440:	bls	226f0 <main@@Base+0xf334>
   22444:	mov	r2, r1
   22448:	b	22710 <main@@Base+0xf354>
   2244c:	mov	r1, r2
   22450:	ldr	r0, [sp, #44]	; 0x2c
   22454:	ldr	r2, [sp, #36]	; 0x24
   22458:	mov	r3, #4
   2245c:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   22460:	b	2270c <main@@Base+0xf350>
   22464:	bne	22478 <main@@Base+0xf0bc>
   22468:	mov	r2, r1
   2246c:	ldrb	r0, [r2, #1]!
   22470:	cmp	r0, #32
   22474:	bhi	22488 <main@@Base+0xf0cc>
   22478:	ldr	r0, [sp, #44]	; 0x2c
   2247c:	ldr	r2, [sp, #36]	; 0x24
   22480:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   22484:	mov	r2, r0
   22488:	ldr	r0, [sp, #36]	; 0x24
   2248c:	cmp	r2, r0
   22490:	beq	224c8 <main@@Base+0xf10c>
   22494:	ldrb	r0, [r2]
   22498:	cmp	r0, #58	; 0x3a
   2249c:	bne	224c8 <main@@Base+0xf10c>
   224a0:	ldr	r0, [sp, #36]	; 0x24
   224a4:	add	r1, r2, #1
   224a8:	sub	r0, r0, r1
   224ac:	cmp	r0, #2
   224b0:	blt	22758 <main@@Base+0xf39c>
   224b4:	ldrb	r0, [r1]
   224b8:	cmp	r0, #32
   224bc:	bls	22748 <main@@Base+0xf38c>
   224c0:	mov	r2, r1
   224c4:	b	22768 <main@@Base+0xf3ac>
   224c8:	mov	r1, r2
   224cc:	ldr	r0, [sp, #44]	; 0x2c
   224d0:	ldr	r2, [sp, #36]	; 0x24
   224d4:	mov	r3, #4
   224d8:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   224dc:	b	22764 <main@@Base+0xf3a8>
   224e0:	ldr	r8, [sp, #36]	; 0x24
   224e4:	bne	224f4 <main@@Base+0xf138>
   224e8:	ldrb	r0, [r2, #2]!
   224ec:	cmp	r0, #32
   224f0:	bhi	22504 <main@@Base+0xf148>
   224f4:	ldr	r0, [sp, #44]	; 0x2c
   224f8:	mov	r2, r8
   224fc:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   22500:	mov	r2, r0
   22504:	cmp	sl, r2
   22508:	beq	2279c <main@@Base+0xf3e0>
   2250c:	ldr	r0, [sp, #48]	; 0x30
   22510:	mov	r1, #9
   22514:	mov	r3, #4
   22518:	str	r1, [sp]
   2251c:	mov	r1, r2
   22520:	mov	r2, r8
   22524:	str	r0, [sp, #4]
   22528:	ldr	r0, [pc, #1516]	; 22b1c <main@@Base+0xf760>
   2252c:	add	r0, pc, r0
   22530:	str	r0, [sp, #8]
   22534:	ldr	r0, [pc, #1508]	; 22b20 <main@@Base+0xf764>
   22538:	add	r0, pc, r0
   2253c:	str	r0, [sp, #12]
   22540:	ldr	r0, [pc, #1500]	; 22b24 <main@@Base+0xf768>
   22544:	add	r0, pc, r0
   22548:	str	r0, [sp, #16]
   2254c:	ldr	r5, [sp, #44]	; 0x2c
   22550:	mov	r0, r5
   22554:	bl	328c8 <flatcc_json_parser_union_type_vector@@Base>
   22558:	b	2282c <main@@Base+0xf470>
   2255c:	bne	22570 <main@@Base+0xf1b4>
   22560:	mov	r2, r1
   22564:	ldrb	r0, [r2, #1]!
   22568:	cmp	r0, #32
   2256c:	bhi	22580 <main@@Base+0xf1c4>
   22570:	ldr	r0, [sp, #44]	; 0x2c
   22574:	ldr	r2, [sp, #36]	; 0x24
   22578:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   2257c:	mov	r2, r0
   22580:	ldr	r0, [sp, #36]	; 0x24
   22584:	cmp	r2, r0
   22588:	beq	225c0 <main@@Base+0xf204>
   2258c:	ldrb	r0, [r2]
   22590:	cmp	r0, #58	; 0x3a
   22594:	bne	225c0 <main@@Base+0xf204>
   22598:	ldr	r0, [sp, #36]	; 0x24
   2259c:	add	r1, r2, #1
   225a0:	sub	r0, r0, r1
   225a4:	cmp	r0, #2
   225a8:	blt	227b8 <main@@Base+0xf3fc>
   225ac:	ldrb	r0, [r1]
   225b0:	cmp	r0, #32
   225b4:	bls	227a8 <main@@Base+0xf3ec>
   225b8:	mov	r2, r1
   225bc:	b	227c8 <main@@Base+0xf40c>
   225c0:	mov	r1, r2
   225c4:	ldr	r0, [sp, #44]	; 0x2c
   225c8:	ldr	r2, [sp, #36]	; 0x24
   225cc:	mov	r3, #4
   225d0:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   225d4:	b	227c4 <main@@Base+0xf408>
   225d8:	bne	225e8 <main@@Base+0xf22c>
   225dc:	ldrb	r0, [r2, #2]!
   225e0:	cmp	r0, #32
   225e4:	bhi	225f8 <main@@Base+0xf23c>
   225e8:	ldr	r0, [sp, #44]	; 0x2c
   225ec:	ldr	r2, [sp, #36]	; 0x24
   225f0:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   225f4:	mov	r2, r0
   225f8:	ldr	r8, [sp, #36]	; 0x24
   225fc:	cmp	sl, r2
   22600:	beq	2279c <main@@Base+0xf3e0>
   22604:	ldr	r0, [sp, #48]	; 0x30
   22608:	mov	r1, #3
   2260c:	mov	r3, #1
   22610:	str	r1, [sp]
   22614:	mov	r1, r2
   22618:	mov	r2, r8
   2261c:	str	r0, [sp, #4]
   22620:	ldr	r0, [pc, #1252]	; 22b0c <main@@Base+0xf750>
   22624:	add	r0, pc, r0
   22628:	b	22314 <main@@Base+0xef58>
   2262c:	bne	2263c <main@@Base+0xf280>
   22630:	ldrb	r0, [r2, #2]!
   22634:	cmp	r0, #32
   22638:	bhi	2264c <main@@Base+0xf290>
   2263c:	ldr	r0, [sp, #44]	; 0x2c
   22640:	ldr	r2, [sp, #36]	; 0x24
   22644:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   22648:	mov	r2, r0
   2264c:	ldr	r8, [sp, #36]	; 0x24
   22650:	cmp	sl, r2
   22654:	beq	2279c <main@@Base+0xf3e0>
   22658:	ldr	r0, [sp, #48]	; 0x30
   2265c:	mov	r1, #5
   22660:	mov	r3, #2
   22664:	str	r1, [sp]
   22668:	mov	r1, r2
   2266c:	mov	r2, r8
   22670:	str	r0, [sp, #4]
   22674:	ldr	r0, [pc, #1212]	; 22b38 <main@@Base+0xf77c>
   22678:	add	r0, pc, r0
   2267c:	str	r0, [sp, #8]
   22680:	ldr	r0, [pc, #1204]	; 22b3c <main@@Base+0xf780>
   22684:	add	r0, pc, r0
   22688:	b	22804 <main@@Base+0xf448>
   2268c:	bne	2269c <main@@Base+0xf2e0>
   22690:	ldrb	r0, [r2, #2]!
   22694:	cmp	r0, #32
   22698:	bhi	226ac <main@@Base+0xf2f0>
   2269c:	ldr	r0, [sp, #44]	; 0x2c
   226a0:	ldr	r2, [sp, #36]	; 0x24
   226a4:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   226a8:	mov	r2, r0
   226ac:	ldr	r8, [sp, #36]	; 0x24
   226b0:	cmp	sl, r2
   226b4:	beq	2279c <main@@Base+0xf3e0>
   226b8:	ldr	r0, [sp, #48]	; 0x30
   226bc:	mov	r1, #9
   226c0:	mov	r3, #4
   226c4:	str	r1, [sp]
   226c8:	mov	r1, r2
   226cc:	mov	r2, r8
   226d0:	str	r0, [sp, #4]
   226d4:	ldr	r0, [pc, #1100]	; 22b28 <main@@Base+0xf76c>
   226d8:	add	r0, pc, r0
   226dc:	str	r0, [sp, #8]
   226e0:	ldr	r5, [sp, #44]	; 0x2c
   226e4:	mov	r0, r5
   226e8:	bl	323cc <flatcc_json_parser_union_vector@@Base>
   226ec:	b	2282c <main@@Base+0xf470>
   226f0:	bne	22700 <main@@Base+0xf344>
   226f4:	ldrb	r0, [r2, #2]!
   226f8:	cmp	r0, #32
   226fc:	bhi	22710 <main@@Base+0xf354>
   22700:	ldr	r0, [sp, #44]	; 0x2c
   22704:	ldr	r2, [sp, #36]	; 0x24
   22708:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   2270c:	mov	r2, r0
   22710:	ldr	r7, [sp, #24]
   22714:	ldr	r8, [sp, #36]	; 0x24
   22718:	cmp	r7, r2
   2271c:	beq	22818 <main@@Base+0xf45c>
   22720:	ldr	r0, [sp, #48]	; 0x30
   22724:	mov	r1, #1
   22728:	mov	r3, #0
   2272c:	str	r1, [sp]
   22730:	mov	r1, r2
   22734:	mov	r2, r8
   22738:	str	r0, [sp, #4]
   2273c:	ldr	r0, [pc, #1008]	; 22b34 <main@@Base+0xf778>
   22740:	add	r0, pc, r0
   22744:	b	22314 <main@@Base+0xef58>
   22748:	bne	22758 <main@@Base+0xf39c>
   2274c:	ldrb	r0, [r2, #2]!
   22750:	cmp	r0, #32
   22754:	bhi	22768 <main@@Base+0xf3ac>
   22758:	ldr	r0, [sp, #44]	; 0x2c
   2275c:	ldr	r2, [sp, #36]	; 0x24
   22760:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   22764:	mov	r2, r0
   22768:	ldr	r8, [sp, #36]	; 0x24
   2276c:	cmp	sl, r2
   22770:	beq	2279c <main@@Base+0xf3e0>
   22774:	ldr	r0, [sp, #48]	; 0x30
   22778:	mov	r1, #5
   2277c:	mov	r3, #2
   22780:	str	r1, [sp]
   22784:	mov	r1, r2
   22788:	mov	r2, r8
   2278c:	str	r0, [sp, #4]
   22790:	ldr	r0, [pc, #936]	; 22b40 <main@@Base+0xf784>
   22794:	add	r0, pc, r0
   22798:	b	22314 <main@@Base+0xef58>
   2279c:	ldr	r5, [sp, #44]	; 0x2c
   227a0:	mov	r1, sl
   227a4:	b	22820 <main@@Base+0xf464>
   227a8:	bne	227b8 <main@@Base+0xf3fc>
   227ac:	ldrb	r0, [r2, #2]!
   227b0:	cmp	r0, #32
   227b4:	bhi	227c8 <main@@Base+0xf40c>
   227b8:	ldr	r0, [sp, #44]	; 0x2c
   227bc:	ldr	r2, [sp, #36]	; 0x24
   227c0:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   227c4:	mov	r2, r0
   227c8:	ldr	r8, [sp, #36]	; 0x24
   227cc:	cmp	r7, r2
   227d0:	beq	22818 <main@@Base+0xf45c>
   227d4:	ldr	r0, [sp, #48]	; 0x30
   227d8:	mov	r1, #1
   227dc:	mov	r3, #0
   227e0:	str	r1, [sp]
   227e4:	mov	r1, r2
   227e8:	mov	r2, r8
   227ec:	str	r0, [sp, #4]
   227f0:	ldr	r0, [pc, #820]	; 22b2c <main@@Base+0xf770>
   227f4:	add	r0, pc, r0
   227f8:	str	r0, [sp, #8]
   227fc:	ldr	r0, [pc, #812]	; 22b30 <main@@Base+0xf774>
   22800:	add	r0, pc, r0
   22804:	str	r0, [sp, #12]
   22808:	ldr	r5, [sp, #44]	; 0x2c
   2280c:	mov	r0, r5
   22810:	bl	31df0 <flatcc_json_parser_union_type@@Base>
   22814:	b	2282c <main@@Base+0xf470>
   22818:	ldr	r5, [sp, #44]	; 0x2c
   2281c:	mov	r1, r7
   22820:	mov	r0, r5
   22824:	mov	r2, r8
   22828:	bl	2f87c <flatcc_json_parser_unmatched_symbol@@Base>
   2282c:	ldr	r9, [sp, #40]	; 0x28
   22830:	mov	r1, r0
   22834:	sub	r0, r8, r0
   22838:	cmp	r0, #2
   2283c:	blt	22870 <main@@Base+0xf4b4>
   22840:	ldrb	r0, [r1]
   22844:	cmp	r0, #32
   22848:	bls	2285c <main@@Base+0xf4a0>
   2284c:	mov	r2, r1
   22850:	cmp	r2, r8
   22854:	bne	22888 <main@@Base+0xf4cc>
   22858:	b	22918 <main@@Base+0xf55c>
   2285c:	bne	22870 <main@@Base+0xf4b4>
   22860:	mov	r2, r1
   22864:	ldrb	r0, [r2, #1]!
   22868:	cmp	r0, #32
   2286c:	bhi	22880 <main@@Base+0xf4c4>
   22870:	mov	r0, r5
   22874:	mov	r2, r8
   22878:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   2287c:	mov	r2, r0
   22880:	cmp	r2, r8
   22884:	beq	22918 <main@@Base+0xf55c>
   22888:	ldrb	r0, [r2]
   2288c:	cmp	r0, #44	; 0x2c
   22890:	bne	22920 <main@@Base+0xf564>
   22894:	add	r1, r2, #1
   22898:	sub	r0, r8, r1
   2289c:	cmp	r0, #2
   228a0:	blt	228d0 <main@@Base+0xf514>
   228a4:	ldrb	r0, [r1]
   228a8:	cmp	r0, #32
   228ac:	bls	228c0 <main@@Base+0xf504>
   228b0:	mov	r2, r1
   228b4:	cmp	r2, r8
   228b8:	bne	228e8 <main@@Base+0xf52c>
   228bc:	b	22958 <main@@Base+0xf59c>
   228c0:	bne	228d0 <main@@Base+0xf514>
   228c4:	ldrb	r0, [r2, #2]!
   228c8:	cmp	r0, #32
   228cc:	bhi	228e0 <main@@Base+0xf524>
   228d0:	mov	r0, r5
   228d4:	mov	r2, r8
   228d8:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   228dc:	mov	r2, r0
   228e0:	cmp	r2, r8
   228e4:	beq	22958 <main@@Base+0xf59c>
   228e8:	ldrb	r0, [r2]
   228ec:	cmp	r0, #125	; 0x7d
   228f0:	bne	213dc <main@@Base+0xe020>
   228f4:	add	r1, r2, #1
   228f8:	sub	r0, r8, r1
   228fc:	cmp	r0, #2
   22900:	blt	229a0 <main@@Base+0xf5e4>
   22904:	ldrb	r0, [r1]
   22908:	cmp	r0, #32
   2290c:	bls	22978 <main@@Base+0xf5bc>
   22910:	mov	r4, r1
   22914:	b	21318 <main@@Base+0xdf5c>
   22918:	mov	r4, r8
   2291c:	b	21318 <main@@Base+0xdf5c>
   22920:	cmp	r0, #125	; 0x7d
   22924:	bne	22964 <main@@Base+0xf5a8>
   22928:	add	r1, r2, #1
   2292c:	sub	r0, r8, r1
   22930:	cmp	r0, #2
   22934:	blt	229a0 <main@@Base+0xf5e4>
   22938:	ldrb	r0, [r1]
   2293c:	cmp	r0, #32
   22940:	bls	22980 <main@@Base+0xf5c4>
   22944:	ldr	r8, [sp, #36]	; 0x24
   22948:	ldr	r5, [sp, #44]	; 0x2c
   2294c:	ldr	r9, [sp, #40]	; 0x28
   22950:	mov	r4, r1
   22954:	b	21318 <main@@Base+0xdf5c>
   22958:	mov	r0, r5
   2295c:	mov	r1, r8
   22960:	b	2296c <main@@Base+0xf5b0>
   22964:	mov	r0, r5
   22968:	mov	r1, r2
   2296c:	mov	r2, r8
   22970:	mov	r3, #10
   22974:	b	21310 <main@@Base+0xdf54>
   22978:	beq	22990 <main@@Base+0xf5d4>
   2297c:	b	229a0 <main@@Base+0xf5e4>
   22980:	ldr	r8, [sp, #36]	; 0x24
   22984:	ldr	r5, [sp, #44]	; 0x2c
   22988:	ldr	r9, [sp, #40]	; 0x28
   2298c:	bne	229a0 <main@@Base+0xf5e4>
   22990:	ldrb	r0, [r2, #2]!
   22994:	mov	r4, r2
   22998:	cmp	r0, #32
   2299c:	bhi	21318 <main@@Base+0xdf5c>
   229a0:	mov	r0, r5
   229a4:	mov	r2, r8
   229a8:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   229ac:	b	21314 <main@@Base+0xdf58>
   229b0:	mov	r4, r8
   229b4:	b	1fb54 <main@@Base+0xc798>
   229b8:	cmp	r0, #125	; 0x7d
   229bc:	bne	22a28 <main@@Base+0xf66c>
   229c0:	add	r1, r2, #1
   229c4:	sub	r0, r8, r1
   229c8:	cmp	r0, #2
   229cc:	blt	22a64 <main@@Base+0xf6a8>
   229d0:	ldrb	r0, [r1]
   229d4:	cmp	r0, #32
   229d8:	bls	22a50 <main@@Base+0xf694>
   229dc:	mov	r4, r1
   229e0:	b	1fb54 <main@@Base+0xc798>
   229e4:	mov	r0, r5
   229e8:	mov	r1, r8
   229ec:	b	22a30 <main@@Base+0xf674>
   229f0:	mov	r0, r5
   229f4:	mov	r1, r3
   229f8:	b	22a44 <main@@Base+0xf688>
   229fc:	cmp	r0, #125	; 0x7d
   22a00:	bne	22a3c <main@@Base+0xf680>
   22a04:	add	r1, r2, #1
   22a08:	sub	r0, r8, r1
   22a0c:	cmp	r0, #2
   22a10:	blt	22a88 <main@@Base+0xf6cc>
   22a14:	ldrb	r0, [r1]
   22a18:	cmp	r0, #32
   22a1c:	bls	22a74 <main@@Base+0xf6b8>
   22a20:	mov	r4, r1
   22a24:	b	1fb0c <main@@Base+0xc750>
   22a28:	mov	r0, r5
   22a2c:	mov	r1, r2
   22a30:	mov	r2, r8
   22a34:	mov	r3, #10
   22a38:	b	1fb4c <main@@Base+0xc790>
   22a3c:	mov	r0, r5
   22a40:	mov	r1, r2
   22a44:	mov	r2, r8
   22a48:	mov	r3, #10
   22a4c:	b	1fb04 <main@@Base+0xc748>
   22a50:	bne	22a64 <main@@Base+0xf6a8>
   22a54:	ldrb	r0, [r2, #2]!
   22a58:	mov	r4, r2
   22a5c:	cmp	r0, #32
   22a60:	bhi	1fb54 <main@@Base+0xc798>
   22a64:	mov	r0, r5
   22a68:	mov	r2, r8
   22a6c:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   22a70:	b	1fb50 <main@@Base+0xc794>
   22a74:	bne	22a88 <main@@Base+0xf6cc>
   22a78:	ldrb	r0, [r2, #2]!
   22a7c:	mov	r4, r2
   22a80:	cmp	r0, #32
   22a84:	bhi	1fb0c <main@@Base+0xc750>
   22a88:	mov	r0, r5
   22a8c:	mov	r2, r8
   22a90:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   22a94:	b	1fb08 <main@@Base+0xc74c>
   22a98:	mov	r0, r5
   22a9c:	mov	r1, r4
   22aa0:	mov	r2, r8
   22aa4:	mov	r3, #33	; 0x21
   22aa8:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   22aac:	mov	r4, r0
   22ab0:	mov	r0, r5
   22ab4:	mov	r1, r4
   22ab8:	mov	r2, r8
   22abc:	mov	r3, #33	; 0x21
   22ac0:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   22ac4:	mov	r4, r0
   22ac8:	ldr	r0, [r5, #24]
   22acc:	cmp	r0, #0
   22ad0:	bne	22af8 <main@@Base+0xf73c>
   22ad4:	ldr	r0, [r9]
   22ad8:	cmp	r0, #0
   22adc:	bne	22af8 <main@@Base+0xf73c>
   22ae0:	mov	r0, r5
   22ae4:	mov	r1, r4
   22ae8:	mov	r2, r8
   22aec:	mov	r3, #33	; 0x21
   22af0:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   22af4:	mov	r4, r0
   22af8:	mov	r0, r4
   22afc:	sub	sp, fp, #28
   22b00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22b04:	andeq	r3, r2, r8, asr #30
   22b08:	andeq	r5, r0, r8, asr fp
   22b0c:			; <UNDEFINED> instruction: 0x000058b4
   22b10:	strdeq	r3, [r2], -r8
   22b14:	strdeq	r5, [r0], -r8
   22b18:	andeq	r5, r0, r8, asr #23
   22b1c:			; <UNDEFINED> instruction: 0x00023db0
   22b20:	andeq	r5, r0, r0, lsr #19
   22b24:	muleq	r0, r4, r8
   22b28:	andeq	r5, r0, r0, lsl #16
   22b2c:	strdeq	r3, [r2], -r8
   22b30:	ldrdeq	r5, [r0], -r8
   22b34:	muleq	r0, r8, r7
   22b38:	andeq	r3, r2, r4, lsl #25
   22b3c:	andeq	r5, r0, r4, asr r8
   22b40:	andeq	r5, r0, r4, asr #14
   22b44:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22b48:	add	fp, sp, #28
   22b4c:	sub	sp, sp, #20
   22b50:	mov	r8, r1
   22b54:	sub	r1, r2, r1
   22b58:	cmp	r1, #8
   22b5c:	movcs	r1, #8
   22b60:	sub	r1, r1, #1
   22b64:	cmp	r1, #7
   22b68:	bhi	22d70 <main@@Base+0xf9b4>
   22b6c:	str	r2, [sp, #16]
   22b70:	str	r0, [sp, #12]
   22b74:	add	r4, pc, #40	; 0x28
   22b78:	mov	lr, r3
   22b7c:	mov	sl, #0
   22b80:	mov	ip, #0
   22b84:	mov	r5, #0
   22b88:	mov	r2, #0
   22b8c:	mov	r3, #0
   22b90:	mov	r7, #0
   22b94:	mov	r6, #0
   22b98:	ldr	r0, [r4, r1, lsl #2]
   22b9c:	mov	r1, #0
   22ba0:	add	pc, r4, r0
   22ba4:	andeq	r0, r0, r4, rrx
   22ba8:	andeq	r0, r0, ip, asr r0
   22bac:	andeq	r0, r0, r4, asr r0
   22bb0:	andeq	r0, r0, ip, asr #32
   22bb4:	andeq	r0, r0, r0, asr #32
   22bb8:	andeq	r0, r0, r4, lsr r0
   22bbc:	andeq	r0, r0, r4, lsr #32
   22bc0:	andeq	r0, r0, r0, lsr #32
   22bc4:	ldrb	ip, [r8, #7]
   22bc8:	ldrb	r0, [r8, #6]
   22bcc:	mov	r5, sl
   22bd0:	orr	r0, ip, r0, lsl #8
   22bd4:	mov	sl, r0
   22bd8:	ldrb	r0, [r8, #5]
   22bdc:	mov	r1, r5
   22be0:	orr	sl, sl, r0, lsl #16
   22be4:	ldrb	r0, [r8, #4]
   22be8:	mov	r2, r1
   22bec:	orr	sl, sl, r0, lsl #24
   22bf0:	ldrb	r0, [r8, #3]
   22bf4:	orr	r3, r0, r2
   22bf8:	ldrb	r0, [r8, #2]
   22bfc:	orr	r7, r3, r0, lsl #8
   22c00:	ldrb	r0, [r8, #1]
   22c04:	orr	r6, r7, r0, lsl #16
   22c08:	ldrb	r0, [r8]
   22c0c:	movw	r1, #28275	; 0x6e73
   22c10:	ldr	r5, [fp, #12]
   22c14:	ldr	r7, [fp, #8]
   22c18:	movt	r1, #19823	; 0x4d6f
   22c1c:	orr	r9, r6, r0, lsl #24
   22c20:	movw	r0, #29184	; 0x7200
   22c24:	movt	r0, #29797	; 0x7465
   22c28:	subs	r2, sl, r0
   22c2c:	sbcs	r2, r9, r1
   22c30:	bcs	22c78 <main@@Base+0xf8bc>
   22c34:	movw	r1, #29696	; 0x7400
   22c38:	bic	r0, r9, #255	; 0xff
   22c3c:	movt	r1, #16748	; 0x416c
   22c40:	teq	r0, r1
   22c44:	bne	22d70 <main@@Base+0xf9b4>
   22c48:	ldr	r0, [sp, #12]
   22c4c:	ldr	r2, [sp, #16]
   22c50:	mov	r1, r8
   22c54:	mov	r3, #3
   22c58:	mov	r4, lr
   22c5c:	str	r5, [sp]
   22c60:	bl	2f6a4 <flatcc_json_parser_match_constant@@Base>
   22c64:	cmp	r0, r8
   22c68:	beq	22d70 <main@@Base+0xf9b4>
   22c6c:	mov	r1, #0
   22c70:	mov	r2, #4
   22c74:	b	22cb8 <main@@Base+0xf8fc>
   22c78:	add	r2, r0, #50	; 0x32
   22c7c:	eor	r1, r9, r1
   22c80:	eor	r2, sl, r2
   22c84:	orrs	r2, r2, r1
   22c88:	bne	22cc8 <main@@Base+0xf90c>
   22c8c:	ldr	r0, [sp, #12]
   22c90:	ldr	r2, [sp, #16]
   22c94:	mov	r1, r8
   22c98:	mov	r3, #8
   22c9c:	mov	r4, lr
   22ca0:	str	r5, [sp]
   22ca4:	bl	2f6a4 <flatcc_json_parser_match_constant@@Base>
   22ca8:	cmp	r0, r8
   22cac:	beq	22d70 <main@@Base+0xf9b4>
   22cb0:	mov	r1, #0
   22cb4:	mov	r2, #3
   22cb8:	str	r2, [r7]
   22cbc:	str	r1, [r7, #4]
   22cc0:	str	r1, [r4]
   22cc4:	b	22d6c <main@@Base+0xf9b0>
   22cc8:	ldr	r6, [sp, #16]
   22ccc:	ldr	r7, [sp, #12]
   22cd0:	bic	r2, sl, #255	; 0xff
   22cd4:	eor	r0, r2, r0
   22cd8:	orrs	r0, r0, r1
   22cdc:	bne	22d20 <main@@Base+0xf964>
   22ce0:	mov	r0, r7
   22ce4:	mov	r1, r8
   22ce8:	mov	r2, r6
   22cec:	mov	r3, #7
   22cf0:	str	r5, [sp]
   22cf4:	mov	r4, lr
   22cf8:	bl	2f6a4 <flatcc_json_parser_match_constant@@Base>
   22cfc:	mov	lr, r4
   22d00:	cmp	r0, r8
   22d04:	beq	22d20 <main@@Base+0xf964>
   22d08:	ldr	r3, [fp, #8]
   22d0c:	mov	r2, #1
   22d10:	mov	r1, #0
   22d14:	str	r2, [r3]
   22d18:	str	r1, [r3, #4]
   22d1c:	b	22d68 <main@@Base+0xf9ac>
   22d20:	movw	r0, #20037	; 0x4e45
   22d24:	movt	r0, #20047	; 0x4e4f
   22d28:	teq	r9, r0
   22d2c:	bne	22d7c <main@@Base+0xf9c0>
   22d30:	mov	r0, r7
   22d34:	mov	r1, r8
   22d38:	mov	r2, r6
   22d3c:	mov	r3, #4
   22d40:	str	r5, [sp]
   22d44:	mov	r4, lr
   22d48:	bl	2f6a4 <flatcc_json_parser_match_constant@@Base>
   22d4c:	mov	lr, r4
   22d50:	cmp	r0, r8
   22d54:	beq	22d7c <main@@Base+0xf9c0>
   22d58:	ldr	r2, [fp, #8]
   22d5c:	mov	r1, #0
   22d60:	str	r1, [r2]
   22d64:	str	r1, [r2, #4]
   22d68:	str	r1, [lr]
   22d6c:	mov	r8, r0
   22d70:	mov	r0, r8
   22d74:	sub	sp, fp, #28
   22d78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22d7c:	movw	r0, #28016	; 0x6d70
   22d80:	movw	r1, #29556	; 0x7374
   22d84:	movt	r0, #21353	; 0x5369
   22d88:	movt	r1, #21605	; 0x5465
   22d8c:	eor	r0, sl, r0
   22d90:	eor	r1, r9, r1
   22d94:	orrs	r0, r0, r1
   22d98:	bne	22d70 <main@@Base+0xf9b4>
   22d9c:	str	lr, [sp, #8]
   22da0:	add	lr, r8, #8
   22da4:	sub	r0, r6, lr
   22da8:	cmp	r0, #8
   22dac:	movcs	r0, #8
   22db0:	sub	r0, r0, #1
   22db4:	cmp	r0, #7
   22db8:	bhi	22d70 <main@@Base+0xf9b4>
   22dbc:	add	r4, pc, #36	; 0x24
   22dc0:	mov	sl, #0
   22dc4:	mov	ip, #0
   22dc8:	mov	r9, #0
   22dcc:	mov	r3, #0
   22dd0:	mov	r2, #0
   22dd4:	mov	r6, #0
   22dd8:	mov	r7, #0
   22ddc:	ldr	r1, [r4, r0, lsl #2]
   22de0:	mov	r0, #0
   22de4:	add	pc, r4, r1
   22de8:	andeq	r0, r0, r4, rrx
   22dec:	andeq	r0, r0, ip, asr r0
   22df0:	andeq	r0, r0, r4, asr r0
   22df4:	andeq	r0, r0, ip, asr #32
   22df8:	andeq	r0, r0, r0, asr #32
   22dfc:	andeq	r0, r0, r4, lsr r0
   22e00:	andeq	r0, r0, r4, lsr #32
   22e04:	andeq	r0, r0, r0, lsr #32
   22e08:	ldrb	ip, [r8, #15]
   22e0c:	ldrb	r0, [r8, #14]
   22e10:	mov	r9, sl
   22e14:	orr	r0, ip, r0, lsl #8
   22e18:	mov	sl, r0
   22e1c:	ldrb	r0, [r8, #13]
   22e20:	orr	sl, sl, r0, lsl #16
   22e24:	mov	r0, r9
   22e28:	ldrb	r1, [r8, #12]
   22e2c:	mov	r3, r0
   22e30:	orr	sl, sl, r1, lsl #24
   22e34:	ldrb	r0, [r8, #11]
   22e38:	orr	r2, r0, r3
   22e3c:	ldrb	r0, [r8, #10]
   22e40:	orr	r6, r2, r0, lsl #8
   22e44:	ldrb	r0, [r8, #9]
   22e48:	orr	r7, r6, r0, lsl #16
   22e4c:	ldrb	r1, [lr]
   22e50:	movw	r0, #25943	; 0x6557
   22e54:	movw	r2, #21601	; 0x5461
   22e58:	movt	r0, #25196	; 0x626c
   22e5c:	movt	r2, #27749	; 0x6c65
   22e60:	eor	r0, sl, r0
   22e64:	orr	r1, r7, r1, lsl #24
   22e68:	eor	r1, r1, r2
   22e6c:	orrs	r0, r0, r1
   22e70:	bne	22d70 <main@@Base+0xf9b4>
   22e74:	ldr	r0, [sp, #16]
   22e78:	add	r9, r8, #16
   22e7c:	sub	r0, r0, r9
   22e80:	cmp	r0, #8
   22e84:	movcs	r0, #8
   22e88:	sub	r0, r0, #1
   22e8c:	cmp	r0, #7
   22e90:	bhi	22d70 <main@@Base+0xf9b4>
   22e94:	add	r4, pc, #32
   22e98:	mov	lr, #0
   22e9c:	mov	ip, #0
   22ea0:	mov	r2, #0
   22ea4:	mov	r3, #0
   22ea8:	mov	r7, #0
   22eac:	mov	r6, #0
   22eb0:	ldr	r1, [r4, r0, lsl #2]
   22eb4:	mov	r0, #0
   22eb8:	add	pc, r4, r1
   22ebc:	andeq	r0, r0, ip, asr r0
   22ec0:	andeq	r0, r0, r4, asr r0
   22ec4:	andeq	r0, r0, ip, asr #32
   22ec8:	andeq	r0, r0, r4, asr #32
   22ecc:	andeq	r0, r0, r8, lsr r0
   22ed0:	andeq	r0, r0, r8, lsr #32
   22ed4:	andeq	r0, r0, r0, lsr #32
   22ed8:	andeq	r0, r0, r0, lsr #32
   22edc:	ldrb	r0, [r8, #22]
   22ee0:	lsl	ip, r0, #8
   22ee4:	ldrb	r0, [r8, #21]
   22ee8:	orr	r1, ip, r0, lsl #16
   22eec:	mov	r0, lr
   22ef0:	mov	lr, r1
   22ef4:	ldrb	r1, [r8, #20]
   22ef8:	mov	r2, r0
   22efc:	orr	lr, lr, r1, lsl #24
   22f00:	ldrb	r0, [r8, #19]
   22f04:	orr	r3, r0, r2
   22f08:	ldrb	r0, [r8, #18]
   22f0c:	orr	r7, r3, r0, lsl #8
   22f10:	ldrb	r0, [r8, #17]
   22f14:	orr	r6, r7, r0, lsl #16
   22f18:	ldrb	r1, [r9]
   22f1c:	movw	r0, #27904	; 0x6d00
   22f20:	movw	r2, #26693	; 0x6845
   22f24:	movt	r0, #28277	; 0x6e75
   22f28:	movt	r2, #26996	; 0x6974
   22f2c:	eor	r0, lr, r0
   22f30:	orr	r1, r6, r1, lsl #24
   22f34:	eor	r1, r1, r2
   22f38:	orrs	r0, r0, r1
   22f3c:	bne	22d70 <main@@Base+0xf9b4>
   22f40:	ldr	r0, [sp, #12]
   22f44:	ldr	r2, [sp, #16]
   22f48:	mov	r1, r9
   22f4c:	mov	r3, #7
   22f50:	str	r5, [sp]
   22f54:	bl	2f6a4 <flatcc_json_parser_match_constant@@Base>
   22f58:	ldr	r3, [fp, #8]
   22f5c:	cmp	r0, r9
   22f60:	beq	22d70 <main@@Base+0xf9b4>
   22f64:	mov	r2, #2
   22f68:	mov	r1, #0
   22f6c:	str	r2, [r3]
   22f70:	str	r1, [r3, #4]
   22f74:	ldr	r2, [sp, #8]
   22f78:	str	r1, [r2]
   22f7c:	b	22d6c <main@@Base+0xf9b0>
   22f80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22f84:	add	fp, sp, #28
   22f88:	sub	sp, sp, #44	; 0x2c
   22f8c:	mov	r6, r2
   22f90:	ldr	r2, [fp, #8]
   22f94:	mov	r5, r0
   22f98:	mov	r0, #0
   22f9c:	mov	r8, r3
   22fa0:	cmp	r1, r6
   22fa4:	strb	r0, [r2]
   22fa8:	beq	22fec <main@@Base+0xfc30>
   22fac:	ldrb	r0, [r1]
   22fb0:	cmp	r0, #46	; 0x2e
   22fb4:	beq	22fcc <main@@Base+0xfc10>
   22fb8:	cmp	r0, #34	; 0x22
   22fbc:	bne	22fe4 <main@@Base+0xfc28>
   22fc0:	mov	r0, #0
   22fc4:	add	r1, r1, #1
   22fc8:	b	22fe8 <main@@Base+0xfc2c>
   22fcc:	mov	r0, r5
   22fd0:	mov	r2, r6
   22fd4:	mov	r3, #5
   22fd8:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   22fdc:	mov	r1, r0
   22fe0:	b	22fec <main@@Base+0xfc30>
   22fe4:	mov	r0, #1
   22fe8:	str	r0, [r5, #12]
   22fec:	ldr	r0, [r5, #12]
   22ff0:	cmp	r0, #0
   22ff4:	beq	23008 <main@@Base+0xfc4c>
   22ff8:	mov	r7, r1
   22ffc:	cmp	r7, r6
   23000:	bne	2304c <main@@Base+0xfc90>
   23004:	b	23154 <main@@Base+0xfd98>
   23008:	sub	r0, r6, r1
   2300c:	cmp	r0, #2
   23010:	blt	23034 <main@@Base+0xfc78>
   23014:	ldrb	r0, [r1]
   23018:	cmp	r0, #32
   2301c:	bhi	22ff8 <main@@Base+0xfc3c>
   23020:	bne	23034 <main@@Base+0xfc78>
   23024:	mov	r7, r1
   23028:	ldrb	r0, [r7, #1]!
   2302c:	cmp	r0, #32
   23030:	bhi	23044 <main@@Base+0xfc88>
   23034:	mov	r0, r5
   23038:	mov	r2, r6
   2303c:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   23040:	mov	r7, r0
   23044:	cmp	r7, r6
   23048:	beq	23154 <main@@Base+0xfd98>
   2304c:	mov	r1, #0
   23050:	add	r0, r8, #4
   23054:	add	sl, sp, #32
   23058:	add	r9, sp, #28
   2305c:	str	r8, [sp, #12]
   23060:	str	r1, [sp, #16]
   23064:	mov	r1, #0
   23068:	str	r0, [sp, #8]
   2306c:	str	r1, [sp, #20]
   23070:	ldr	r4, [r8]
   23074:	mov	r8, r0
   23078:	add	r0, sp, #24
   2307c:	mov	r1, r7
   23080:	mov	r2, r6
   23084:	mov	r3, r9
   23088:	str	sl, [sp]
   2308c:	str	r0, [sp, #4]
   23090:	mov	r0, r5
   23094:	blx	r4
   23098:	cmp	r0, r6
   2309c:	beq	23154 <main@@Base+0xfd98>
   230a0:	mov	r4, r0
   230a4:	cmp	r0, r7
   230a8:	bne	230bc <main@@Base+0xfd00>
   230ac:	ldr	r4, [r8], #4
   230b0:	cmp	r4, #0
   230b4:	bne	23078 <main@@Base+0xfcbc>
   230b8:	b	2315c <main@@Base+0xfda0>
   230bc:	ldr	r7, [sp, #20]
   230c0:	cmp	r7, #0
   230c4:	beq	230d4 <main@@Base+0xfd18>
   230c8:	ldr	r0, [r5, #12]
   230cc:	cmp	r0, #0
   230d0:	bne	23180 <main@@Base+0xfdc4>
   230d4:	ldr	r0, [sp, #28]
   230d8:	cmp	r0, #0
   230dc:	beq	230f8 <main@@Base+0xfd3c>
   230e0:	mov	r0, r5
   230e4:	mov	r1, r4
   230e8:	mov	r2, r6
   230ec:	mov	r3, #8
   230f0:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   230f4:	b	23110 <main@@Base+0xfd54>
   230f8:	ldr	r0, [sp, #32]
   230fc:	ldr	r1, [sp, #36]	; 0x24
   23100:	orrs	r0, r0, r1
   23104:	movwne	r0, #1
   23108:	str	r0, [sp, #16]
   2310c:	mov	r0, r4
   23110:	ldr	r8, [sp, #12]
   23114:	cmp	r0, r6
   23118:	beq	23154 <main@@Base+0xfd98>
   2311c:	ldr	r0, [fp, #8]
   23120:	ldr	r2, [sp, #16]
   23124:	add	r7, r7, #1
   23128:	str	r7, [sp, #20]
   2312c:	mov	r7, r4
   23130:	mov	r1, r0
   23134:	ldrb	r0, [r0]
   23138:	add	r0, r0, r2
   2313c:	strb	r0, [r1]
   23140:	ldr	r0, [sp, #24]
   23144:	cmp	r0, #0
   23148:	ldr	r0, [sp, #8]
   2314c:	bne	23070 <main@@Base+0xfcb4>
   23150:	b	23174 <main@@Base+0xfdb8>
   23154:	mov	r4, r6
   23158:	b	23174 <main@@Base+0xfdb8>
   2315c:	mov	r0, r5
   23160:	mov	r1, r7
   23164:	mov	r2, r6
   23168:	mov	r3, #23
   2316c:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   23170:	mov	r4, r0
   23174:	mov	r0, r4
   23178:	sub	sp, fp, #28
   2317c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23180:	mov	r0, r5
   23184:	mov	r1, r4
   23188:	mov	r2, r6
   2318c:	mov	r3, #14
   23190:	b	2316c <main@@Base+0xfdb0>
   23194:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23198:	add	fp, sp, #28
   2319c:	sub	sp, sp, #44	; 0x2c
   231a0:	mov	r4, r2
   231a4:	ldr	r2, [fp, #8]
   231a8:	mov	r5, r0
   231ac:	mov	r0, #0
   231b0:	mov	r6, r3
   231b4:	cmp	r1, r4
   231b8:	str	r0, [r2]
   231bc:	beq	23200 <main@@Base+0xfe44>
   231c0:	ldrb	r0, [r1]
   231c4:	cmp	r0, #46	; 0x2e
   231c8:	beq	231e0 <main@@Base+0xfe24>
   231cc:	cmp	r0, #34	; 0x22
   231d0:	bne	231f8 <main@@Base+0xfe3c>
   231d4:	mov	r0, #0
   231d8:	add	r1, r1, #1
   231dc:	b	231fc <main@@Base+0xfe40>
   231e0:	mov	r0, r5
   231e4:	mov	r2, r4
   231e8:	mov	r3, #5
   231ec:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   231f0:	mov	r1, r0
   231f4:	b	23200 <main@@Base+0xfe44>
   231f8:	mov	r0, #1
   231fc:	str	r0, [r5, #12]
   23200:	ldr	r0, [r5, #12]
   23204:	cmp	r0, #0
   23208:	beq	2321c <main@@Base+0xfe60>
   2320c:	mov	r7, r1
   23210:	cmp	r7, r4
   23214:	bne	23260 <main@@Base+0xfea4>
   23218:	b	2332c <main@@Base+0xff70>
   2321c:	sub	r0, r4, r1
   23220:	cmp	r0, #2
   23224:	blt	23248 <main@@Base+0xfe8c>
   23228:	ldrb	r0, [r1]
   2322c:	cmp	r0, #32
   23230:	bhi	2320c <main@@Base+0xfe50>
   23234:	bne	23248 <main@@Base+0xfe8c>
   23238:	mov	r7, r1
   2323c:	ldrb	r0, [r7, #1]!
   23240:	cmp	r0, #32
   23244:	bhi	23258 <main@@Base+0xfe9c>
   23248:	mov	r0, r5
   2324c:	mov	r2, r4
   23250:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   23254:	mov	r7, r0
   23258:	cmp	r7, r4
   2325c:	beq	2332c <main@@Base+0xff70>
   23260:	add	r9, r6, #4
   23264:	mov	r0, #0
   23268:	add	sl, sp, #32
   2326c:	add	r8, sp, #28
   23270:	str	r6, [sp, #16]
   23274:	str	r0, [sp, #20]
   23278:	str	r9, [sp, #12]
   2327c:	ldr	r6, [r6]
   23280:	add	r0, sp, #24
   23284:	mov	r1, r7
   23288:	mov	r2, r4
   2328c:	mov	r3, r8
   23290:	str	sl, [sp]
   23294:	str	r0, [sp, #4]
   23298:	mov	r0, r5
   2329c:	blx	r6
   232a0:	cmp	r0, r4
   232a4:	beq	2332c <main@@Base+0xff70>
   232a8:	cmp	r0, r7
   232ac:	bne	232c0 <main@@Base+0xff04>
   232b0:	ldr	r6, [r9], #4
   232b4:	cmp	r6, #0
   232b8:	bne	23280 <main@@Base+0xfec4>
   232bc:	b	23334 <main@@Base+0xff78>
   232c0:	ldr	r1, [sp, #20]
   232c4:	mov	r7, r0
   232c8:	cmp	r1, #0
   232cc:	beq	232dc <main@@Base+0xff20>
   232d0:	ldr	r0, [r5, #12]
   232d4:	cmp	r0, #0
   232d8:	bne	23358 <main@@Base+0xff9c>
   232dc:	add	r1, r1, #1
   232e0:	ldr	r0, [sp, #32]
   232e4:	str	r1, [sp, #20]
   232e8:	ldr	r1, [sp, #36]	; 0x24
   232ec:	bl	33714 <flatcc_json_parser_struct_as_root@@Base+0x658>
   232f0:	vmov	s2, r0
   232f4:	ldr	r2, [fp, #8]
   232f8:	ldr	r1, [sp, #28]
   232fc:	ldr	r6, [sp, #16]
   23300:	ldr	r9, [sp, #12]
   23304:	vldr	s0, [r2]
   23308:	cmp	r1, #0
   2330c:	vneg.f32	s4, s2
   23310:	vseleq.f32	s2, s2, s4
   23314:	vadd.f32	s0, s0, s2
   23318:	vstr	s0, [r2]
   2331c:	ldr	r0, [sp, #24]
   23320:	cmp	r0, #0
   23324:	bne	2327c <main@@Base+0xfec0>
   23328:	b	2334c <main@@Base+0xff90>
   2332c:	mov	r7, r4
   23330:	b	2334c <main@@Base+0xff90>
   23334:	mov	r0, r5
   23338:	mov	r1, r7
   2333c:	mov	r2, r4
   23340:	mov	r3, #23
   23344:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   23348:	mov	r7, r0
   2334c:	mov	r0, r7
   23350:	sub	sp, fp, #28
   23354:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23358:	mov	r0, r5
   2335c:	mov	r1, r7
   23360:	mov	r2, r4
   23364:	mov	r3, #14
   23368:	b	23344 <main@@Base+0xff88>
   2336c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23370:	add	fp, sp, #28
   23374:	sub	sp, sp, #44	; 0x2c
   23378:	mov	r6, r2
   2337c:	ldr	r2, [fp, #8]
   23380:	mov	r5, r0
   23384:	mov	r0, #0
   23388:	mov	sl, r3
   2338c:	cmp	r1, r6
   23390:	str	r0, [r2]
   23394:	beq	233d8 <main@@Base+0x1001c>
   23398:	ldrb	r0, [r1]
   2339c:	cmp	r0, #46	; 0x2e
   233a0:	beq	233b8 <main@@Base+0xfffc>
   233a4:	cmp	r0, #34	; 0x22
   233a8:	bne	233d0 <main@@Base+0x10014>
   233ac:	mov	r0, #0
   233b0:	add	r1, r1, #1
   233b4:	b	233d4 <main@@Base+0x10018>
   233b8:	mov	r0, r5
   233bc:	mov	r2, r6
   233c0:	mov	r3, #5
   233c4:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   233c8:	mov	r1, r0
   233cc:	b	233d8 <main@@Base+0x1001c>
   233d0:	mov	r0, #1
   233d4:	str	r0, [r5, #12]
   233d8:	ldr	r0, [r5, #12]
   233dc:	cmp	r0, #0
   233e0:	beq	233f4 <main@@Base+0x10038>
   233e4:	mov	r7, r1
   233e8:	cmp	r7, r6
   233ec:	bne	23438 <main@@Base+0x1007c>
   233f0:	b	23578 <main@@Base+0x101bc>
   233f4:	sub	r0, r6, r1
   233f8:	cmp	r0, #2
   233fc:	blt	23420 <main@@Base+0x10064>
   23400:	ldrb	r0, [r1]
   23404:	cmp	r0, #32
   23408:	bhi	233e4 <main@@Base+0x10028>
   2340c:	bne	23420 <main@@Base+0x10064>
   23410:	mov	r7, r1
   23414:	ldrb	r0, [r7, #1]!
   23418:	cmp	r0, #32
   2341c:	bhi	23430 <main@@Base+0x10074>
   23420:	mov	r0, r5
   23424:	mov	r2, r6
   23428:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   2342c:	mov	r7, r0
   23430:	cmp	r7, r6
   23434:	beq	23578 <main@@Base+0x101bc>
   23438:	add	r0, sl, #4
   2343c:	mov	r1, #0
   23440:	mov	r2, #0
   23444:	add	r8, sp, #32
   23448:	add	r9, sp, #28
   2344c:	str	sl, [sp, #12]
   23450:	str	r1, [sp, #20]
   23454:	str	r0, [sp, #8]
   23458:	ldr	r4, [sl]
   2345c:	mov	sl, r0
   23460:	str	r2, [sp, #16]
   23464:	add	r0, sp, #24
   23468:	mov	r1, r7
   2346c:	mov	r2, r6
   23470:	mov	r3, r9
   23474:	str	r8, [sp]
   23478:	str	r0, [sp, #4]
   2347c:	mov	r0, r5
   23480:	blx	r4
   23484:	cmp	r0, r6
   23488:	beq	23578 <main@@Base+0x101bc>
   2348c:	mov	r4, r0
   23490:	cmp	r0, r7
   23494:	bne	234a8 <main@@Base+0x100ec>
   23498:	ldr	r4, [sl], #4
   2349c:	cmp	r4, #0
   234a0:	bne	23464 <main@@Base+0x100a8>
   234a4:	b	23580 <main@@Base+0x101c4>
   234a8:	ldr	r7, [sp, #20]
   234ac:	cmp	r7, #0
   234b0:	beq	234c0 <main@@Base+0x10104>
   234b4:	ldr	r0, [r5, #12]
   234b8:	cmp	r0, #0
   234bc:	bne	235a4 <main@@Base+0x101e8>
   234c0:	ldr	r2, [sp, #28]
   234c4:	ldr	r0, [sp, #32]
   234c8:	ldr	r1, [sp, #36]	; 0x24
   234cc:	cmp	r2, #0
   234d0:	beq	234f8 <main@@Base+0x1013c>
   234d4:	ldr	sl, [sp, #12]
   234d8:	subs	r2, r0, #-2147483647	; 0x80000001
   234dc:	sbcs	r1, r1, #0
   234e0:	bcc	2352c <main@@Base+0x10170>
   234e4:	mov	r0, r5
   234e8:	mov	r1, r4
   234ec:	mov	r2, r6
   234f0:	mov	r3, #8
   234f4:	b	23518 <main@@Base+0x1015c>
   234f8:	ldr	sl, [sp, #12]
   234fc:	subs	r2, r0, #-2147483648	; 0x80000000
   23500:	sbcs	r1, r1, #0
   23504:	bcc	23534 <main@@Base+0x10178>
   23508:	mov	r0, r5
   2350c:	mov	r1, r4
   23510:	mov	r2, r6
   23514:	mov	r3, #7
   23518:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   2351c:	ldr	r2, [sp, #16]
   23520:	cmp	r0, r6
   23524:	bne	23544 <main@@Base+0x10188>
   23528:	b	23578 <main@@Base+0x101bc>
   2352c:	rsb	r2, r0, #0
   23530:	b	23538 <main@@Base+0x1017c>
   23534:	mov	r2, r0
   23538:	mov	r0, r4
   2353c:	cmp	r0, r6
   23540:	beq	23578 <main@@Base+0x101bc>
   23544:	ldr	r0, [fp, #8]
   23548:	add	r7, r7, #1
   2354c:	str	r7, [sp, #20]
   23550:	mov	r7, r4
   23554:	mov	r1, r0
   23558:	ldr	r0, [r0]
   2355c:	add	r0, r0, r2
   23560:	str	r0, [r1]
   23564:	ldr	r0, [sp, #24]
   23568:	cmp	r0, #0
   2356c:	ldr	r0, [sp, #8]
   23570:	bne	23458 <main@@Base+0x1009c>
   23574:	b	23598 <main@@Base+0x101dc>
   23578:	mov	r4, r6
   2357c:	b	23598 <main@@Base+0x101dc>
   23580:	mov	r0, r5
   23584:	mov	r1, r7
   23588:	mov	r2, r6
   2358c:	mov	r3, #23
   23590:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   23594:	mov	r4, r0
   23598:	mov	r0, r4
   2359c:	sub	sp, fp, #28
   235a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   235a4:	mov	r0, r5
   235a8:	mov	r1, r4
   235ac:	mov	r2, r6
   235b0:	mov	r3, #14
   235b4:	b	23590 <main@@Base+0x101d4>
   235b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   235bc:	add	fp, sp, #28
   235c0:	sub	sp, sp, #52	; 0x34
   235c4:	mov	r6, r2
   235c8:	ldr	r2, [fp, #8]
   235cc:	mov	r5, r0
   235d0:	mov	r0, #0
   235d4:	mov	sl, r3
   235d8:	cmp	r1, r6
   235dc:	str	r0, [r2]
   235e0:	str	r0, [r2, #4]
   235e4:	beq	23628 <main@@Base+0x1026c>
   235e8:	ldrb	r0, [r1]
   235ec:	cmp	r0, #46	; 0x2e
   235f0:	beq	23608 <main@@Base+0x1024c>
   235f4:	cmp	r0, #34	; 0x22
   235f8:	bne	23620 <main@@Base+0x10264>
   235fc:	mov	r0, #0
   23600:	add	r1, r1, #1
   23604:	b	23624 <main@@Base+0x10268>
   23608:	mov	r0, r5
   2360c:	mov	r2, r6
   23610:	mov	r3, #5
   23614:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   23618:	mov	r1, r0
   2361c:	b	23628 <main@@Base+0x1026c>
   23620:	mov	r0, #1
   23624:	str	r0, [r5, #12]
   23628:	ldr	r0, [r5, #12]
   2362c:	cmp	r0, #0
   23630:	beq	23644 <main@@Base+0x10288>
   23634:	mov	r7, r1
   23638:	cmp	r7, r6
   2363c:	bne	23688 <main@@Base+0x102cc>
   23640:	b	237d4 <main@@Base+0x10418>
   23644:	sub	r0, r6, r1
   23648:	cmp	r0, #2
   2364c:	blt	23670 <main@@Base+0x102b4>
   23650:	ldrb	r0, [r1]
   23654:	cmp	r0, #32
   23658:	bhi	23634 <main@@Base+0x10278>
   2365c:	bne	23670 <main@@Base+0x102b4>
   23660:	mov	r7, r1
   23664:	ldrb	r0, [r7, #1]!
   23668:	cmp	r0, #32
   2366c:	bhi	23680 <main@@Base+0x102c4>
   23670:	mov	r0, r5
   23674:	mov	r2, r6
   23678:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   2367c:	mov	r7, r0
   23680:	cmp	r7, r6
   23684:	beq	237d4 <main@@Base+0x10418>
   23688:	add	r0, sl, #4
   2368c:	mov	r1, #0
   23690:	mov	r3, #0
   23694:	add	r8, sp, #40	; 0x28
   23698:	add	r9, sp, #36	; 0x24
   2369c:	mov	r2, #0
   236a0:	str	sl, [sp, #16]
   236a4:	str	r1, [sp, #28]
   236a8:	str	r0, [sp, #12]
   236ac:	ldr	r4, [sl]
   236b0:	mov	sl, r0
   236b4:	str	r2, [sp, #20]
   236b8:	str	r3, [sp, #24]
   236bc:	add	r0, sp, #32
   236c0:	mov	r1, r7
   236c4:	mov	r2, r6
   236c8:	mov	r3, r9
   236cc:	str	r8, [sp]
   236d0:	str	r0, [sp, #4]
   236d4:	mov	r0, r5
   236d8:	blx	r4
   236dc:	cmp	r0, r6
   236e0:	beq	237d4 <main@@Base+0x10418>
   236e4:	mov	r4, r0
   236e8:	cmp	r0, r7
   236ec:	bne	23700 <main@@Base+0x10344>
   236f0:	ldr	r4, [sl], #4
   236f4:	cmp	r4, #0
   236f8:	bne	236bc <main@@Base+0x10300>
   236fc:	b	237dc <main@@Base+0x10420>
   23700:	ldr	r7, [sp, #28]
   23704:	cmp	r7, #0
   23708:	beq	23718 <main@@Base+0x1035c>
   2370c:	ldr	r0, [r5, #12]
   23710:	cmp	r0, #0
   23714:	bne	23800 <main@@Base+0x10444>
   23718:	add	r2, sp, #36	; 0x24
   2371c:	ldm	r2, {r0, r1, r2}
   23720:	cmp	r0, #0
   23724:	beq	2374c <main@@Base+0x10390>
   23728:	ldr	sl, [sp, #16]
   2372c:	subs	r0, r1, #1
   23730:	sbcs	r0, r2, #-2147483648	; 0x80000000
   23734:	bcc	23784 <main@@Base+0x103c8>
   23738:	mov	r0, r5
   2373c:	mov	r1, r4
   23740:	mov	r2, r6
   23744:	mov	r3, #8
   23748:	b	2376c <main@@Base+0x103b0>
   2374c:	ldr	sl, [sp, #16]
   23750:	cmn	r2, #1
   23754:	mov	r0, r4
   23758:	bgt	23778 <main@@Base+0x103bc>
   2375c:	mov	r0, r5
   23760:	mov	r1, r4
   23764:	mov	r2, r6
   23768:	mov	r3, #7
   2376c:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   23770:	ldr	r1, [sp, #24]
   23774:	ldr	r2, [sp, #20]
   23778:	cmp	r0, r6
   2377c:	bne	23798 <main@@Base+0x103dc>
   23780:	b	237d4 <main@@Base+0x10418>
   23784:	rsbs	r1, r1, #0
   23788:	mov	r0, r4
   2378c:	rsc	r2, r2, #0
   23790:	cmp	r0, r6
   23794:	beq	237d4 <main@@Base+0x10418>
   23798:	ldr	r0, [fp, #8]
   2379c:	add	r7, r7, #1
   237a0:	str	r7, [sp, #28]
   237a4:	mov	r7, r0
   237a8:	ldm	r0, {r0, r3}
   237ac:	adds	r0, r0, r1
   237b0:	adc	r3, r3, r2
   237b4:	stm	r7, {r0, r3}
   237b8:	mov	r3, r1
   237bc:	mov	r7, r4
   237c0:	ldr	r0, [sp, #32]
   237c4:	cmp	r0, #0
   237c8:	ldr	r0, [sp, #12]
   237cc:	bne	236ac <main@@Base+0x102f0>
   237d0:	b	237f4 <main@@Base+0x10438>
   237d4:	mov	r4, r6
   237d8:	b	237f4 <main@@Base+0x10438>
   237dc:	mov	r0, r5
   237e0:	mov	r1, r7
   237e4:	mov	r2, r6
   237e8:	mov	r3, #23
   237ec:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   237f0:	mov	r4, r0
   237f4:	mov	r0, r4
   237f8:	sub	sp, fp, #28
   237fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23800:	mov	r0, r5
   23804:	mov	r1, r4
   23808:	mov	r2, r6
   2380c:	mov	r3, #14
   23810:	b	237ec <main@@Base+0x10430>
   23814:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23818:	add	fp, sp, #28
   2381c:	sub	sp, sp, #44	; 0x2c
   23820:	mov	r6, r2
   23824:	ldr	r2, [fp, #8]
   23828:	mov	r5, r0
   2382c:	mov	r0, #0
   23830:	mov	sl, r3
   23834:	cmp	r1, r6
   23838:	str	r0, [r2]
   2383c:	beq	23880 <main@@Base+0x104c4>
   23840:	ldrb	r0, [r1]
   23844:	cmp	r0, #46	; 0x2e
   23848:	beq	23860 <main@@Base+0x104a4>
   2384c:	cmp	r0, #34	; 0x22
   23850:	bne	23878 <main@@Base+0x104bc>
   23854:	mov	r0, #0
   23858:	add	r1, r1, #1
   2385c:	b	2387c <main@@Base+0x104c0>
   23860:	mov	r0, r5
   23864:	mov	r2, r6
   23868:	mov	r3, #5
   2386c:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   23870:	mov	r1, r0
   23874:	b	23880 <main@@Base+0x104c4>
   23878:	mov	r0, #1
   2387c:	str	r0, [r5, #12]
   23880:	ldr	r0, [r5, #12]
   23884:	cmp	r0, #0
   23888:	beq	2389c <main@@Base+0x104e0>
   2388c:	mov	r7, r1
   23890:	cmp	r7, r6
   23894:	bne	238e0 <main@@Base+0x10524>
   23898:	b	23a14 <main@@Base+0x10658>
   2389c:	sub	r0, r6, r1
   238a0:	cmp	r0, #2
   238a4:	blt	238c8 <main@@Base+0x1050c>
   238a8:	ldrb	r0, [r1]
   238ac:	cmp	r0, #32
   238b0:	bhi	2388c <main@@Base+0x104d0>
   238b4:	bne	238c8 <main@@Base+0x1050c>
   238b8:	mov	r7, r1
   238bc:	ldrb	r0, [r7, #1]!
   238c0:	cmp	r0, #32
   238c4:	bhi	238d8 <main@@Base+0x1051c>
   238c8:	mov	r0, r5
   238cc:	mov	r2, r6
   238d0:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   238d4:	mov	r7, r0
   238d8:	cmp	r7, r6
   238dc:	beq	23a14 <main@@Base+0x10658>
   238e0:	mov	r1, #0
   238e4:	add	r0, sl, #4
   238e8:	add	r8, sp, #32
   238ec:	add	r9, sp, #28
   238f0:	str	sl, [sp, #12]
   238f4:	str	r1, [sp, #16]
   238f8:	mov	r1, #0
   238fc:	str	r0, [sp, #8]
   23900:	str	r1, [sp, #20]
   23904:	ldr	r4, [sl]
   23908:	mov	sl, r0
   2390c:	add	r0, sp, #24
   23910:	mov	r1, r7
   23914:	mov	r2, r6
   23918:	mov	r3, r9
   2391c:	str	r8, [sp]
   23920:	str	r0, [sp, #4]
   23924:	mov	r0, r5
   23928:	blx	r4
   2392c:	cmp	r0, r6
   23930:	beq	23a14 <main@@Base+0x10658>
   23934:	mov	r4, r0
   23938:	cmp	r0, r7
   2393c:	bne	23950 <main@@Base+0x10594>
   23940:	ldr	r4, [sl], #4
   23944:	cmp	r4, #0
   23948:	bne	2390c <main@@Base+0x10550>
   2394c:	b	23a1c <main@@Base+0x10660>
   23950:	ldr	r7, [sp, #20]
   23954:	cmp	r7, #0
   23958:	beq	23968 <main@@Base+0x105ac>
   2395c:	ldr	r0, [r5, #12]
   23960:	cmp	r0, #0
   23964:	bne	23a40 <main@@Base+0x10684>
   23968:	ldr	r0, [sp, #28]
   2396c:	cmp	r0, #0
   23970:	beq	23998 <main@@Base+0x105dc>
   23974:	mov	r0, r5
   23978:	mov	r1, r4
   2397c:	mov	r2, r6
   23980:	mov	r3, #8
   23984:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   23988:	ldr	sl, [sp, #12]
   2398c:	cmp	r0, r6
   23990:	bne	239dc <main@@Base+0x10620>
   23994:	b	23a14 <main@@Base+0x10658>
   23998:	ldr	r0, [sp, #36]	; 0x24
   2399c:	ldr	sl, [sp, #12]
   239a0:	cmp	r0, #0
   239a4:	beq	239c8 <main@@Base+0x1060c>
   239a8:	mov	r0, r5
   239ac:	mov	r1, r4
   239b0:	mov	r2, r6
   239b4:	mov	r3, #7
   239b8:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   239bc:	cmp	r0, r6
   239c0:	bne	239dc <main@@Base+0x10620>
   239c4:	b	23a14 <main@@Base+0x10658>
   239c8:	ldr	r0, [sp, #32]
   239cc:	str	r0, [sp, #16]
   239d0:	mov	r0, r4
   239d4:	cmp	r0, r6
   239d8:	beq	23a14 <main@@Base+0x10658>
   239dc:	ldr	r0, [fp, #8]
   239e0:	ldr	r2, [sp, #16]
   239e4:	add	r7, r7, #1
   239e8:	str	r7, [sp, #20]
   239ec:	mov	r7, r4
   239f0:	mov	r1, r0
   239f4:	ldr	r0, [r0]
   239f8:	add	r0, r0, r2
   239fc:	str	r0, [r1]
   23a00:	ldr	r0, [sp, #24]
   23a04:	cmp	r0, #0
   23a08:	ldr	r0, [sp, #8]
   23a0c:	bne	23904 <main@@Base+0x10548>
   23a10:	b	23a34 <main@@Base+0x10678>
   23a14:	mov	r4, r6
   23a18:	b	23a34 <main@@Base+0x10678>
   23a1c:	mov	r0, r5
   23a20:	mov	r1, r7
   23a24:	mov	r2, r6
   23a28:	mov	r3, #23
   23a2c:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   23a30:	mov	r4, r0
   23a34:	mov	r0, r4
   23a38:	sub	sp, fp, #28
   23a3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23a40:	mov	r0, r5
   23a44:	mov	r1, r4
   23a48:	mov	r2, r6
   23a4c:	mov	r3, #14
   23a50:	b	23a2c <main@@Base+0x10670>
   23a54:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23a58:	add	fp, sp, #28
   23a5c:	sub	sp, sp, #52	; 0x34
   23a60:	mov	r6, r2
   23a64:	ldr	r2, [fp, #8]
   23a68:	mov	r5, r0
   23a6c:	mov	r0, #0
   23a70:	mov	r8, r3
   23a74:	cmp	r1, r6
   23a78:	str	r0, [r2]
   23a7c:	str	r0, [r2, #4]
   23a80:	beq	23ac4 <main@@Base+0x10708>
   23a84:	ldrb	r0, [r1]
   23a88:	cmp	r0, #46	; 0x2e
   23a8c:	beq	23aa4 <main@@Base+0x106e8>
   23a90:	cmp	r0, #34	; 0x22
   23a94:	bne	23abc <main@@Base+0x10700>
   23a98:	mov	r0, #0
   23a9c:	add	r1, r1, #1
   23aa0:	b	23ac0 <main@@Base+0x10704>
   23aa4:	mov	r0, r5
   23aa8:	mov	r2, r6
   23aac:	mov	r3, #5
   23ab0:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   23ab4:	mov	r1, r0
   23ab8:	b	23ac4 <main@@Base+0x10708>
   23abc:	mov	r0, #1
   23ac0:	str	r0, [r5, #12]
   23ac4:	ldr	r0, [r5, #12]
   23ac8:	cmp	r0, #0
   23acc:	beq	23ae0 <main@@Base+0x10724>
   23ad0:	mov	r7, r1
   23ad4:	cmp	r7, r6
   23ad8:	bne	23b24 <main@@Base+0x10768>
   23adc:	b	23c38 <main@@Base+0x1087c>
   23ae0:	sub	r0, r6, r1
   23ae4:	cmp	r0, #2
   23ae8:	blt	23b0c <main@@Base+0x10750>
   23aec:	ldrb	r0, [r1]
   23af0:	cmp	r0, #32
   23af4:	bhi	23ad0 <main@@Base+0x10714>
   23af8:	bne	23b0c <main@@Base+0x10750>
   23afc:	mov	r7, r1
   23b00:	ldrb	r0, [r7, #1]!
   23b04:	cmp	r0, #32
   23b08:	bhi	23b1c <main@@Base+0x10760>
   23b0c:	mov	r0, r5
   23b10:	mov	r2, r6
   23b14:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   23b18:	mov	r7, r0
   23b1c:	cmp	r7, r6
   23b20:	beq	23c38 <main@@Base+0x1087c>
   23b24:	mov	r1, #0
   23b28:	add	r0, r8, #4
   23b2c:	add	sl, sp, #40	; 0x28
   23b30:	add	r9, sp, #36	; 0x24
   23b34:	str	r8, [sp, #16]
   23b38:	str	r1, [sp, #24]
   23b3c:	mov	r1, #0
   23b40:	str	r0, [sp, #12]
   23b44:	str	r1, [sp, #20]
   23b48:	mov	r1, #0
   23b4c:	str	r1, [sp, #28]
   23b50:	ldr	r4, [r8]
   23b54:	mov	r8, r0
   23b58:	add	r0, sp, #32
   23b5c:	mov	r1, r7
   23b60:	mov	r2, r6
   23b64:	mov	r3, r9
   23b68:	str	sl, [sp]
   23b6c:	str	r0, [sp, #4]
   23b70:	mov	r0, r5
   23b74:	blx	r4
   23b78:	cmp	r0, r6
   23b7c:	beq	23c38 <main@@Base+0x1087c>
   23b80:	mov	r4, r0
   23b84:	cmp	r0, r7
   23b88:	bne	23b9c <main@@Base+0x107e0>
   23b8c:	ldr	r4, [r8], #4
   23b90:	cmp	r4, #0
   23b94:	bne	23b58 <main@@Base+0x1079c>
   23b98:	b	23c40 <main@@Base+0x10884>
   23b9c:	ldr	r7, [sp, #28]
   23ba0:	cmp	r7, #0
   23ba4:	beq	23bb4 <main@@Base+0x107f8>
   23ba8:	ldr	r0, [r5, #12]
   23bac:	cmp	r0, #0
   23bb0:	bne	23c64 <main@@Base+0x108a8>
   23bb4:	ldr	r0, [sp, #36]	; 0x24
   23bb8:	cmp	r0, #0
   23bbc:	beq	23bd8 <main@@Base+0x1081c>
   23bc0:	mov	r0, r5
   23bc4:	mov	r1, r4
   23bc8:	mov	r2, r6
   23bcc:	mov	r3, #8
   23bd0:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   23bd4:	b	23bec <main@@Base+0x10830>
   23bd8:	ldr	r0, [sp, #40]	; 0x28
   23bdc:	str	r0, [sp, #24]
   23be0:	ldr	r0, [sp, #44]	; 0x2c
   23be4:	str	r0, [sp, #20]
   23be8:	mov	r0, r4
   23bec:	ldr	r8, [sp, #16]
   23bf0:	cmp	r0, r6
   23bf4:	beq	23c38 <main@@Base+0x1087c>
   23bf8:	ldr	r0, [fp, #8]
   23bfc:	add	r7, r7, #1
   23c00:	ldr	r3, [sp, #24]
   23c04:	str	r7, [sp, #28]
   23c08:	mov	r7, r4
   23c0c:	mov	r2, r0
   23c10:	ldrd	r0, [r0]
   23c14:	adds	r0, r0, r3
   23c18:	ldr	r3, [sp, #20]
   23c1c:	adc	r1, r1, r3
   23c20:	strd	r0, [r2]
   23c24:	ldr	r0, [sp, #32]
   23c28:	cmp	r0, #0
   23c2c:	ldr	r0, [sp, #12]
   23c30:	bne	23b50 <main@@Base+0x10794>
   23c34:	b	23c58 <main@@Base+0x1089c>
   23c38:	mov	r4, r6
   23c3c:	b	23c58 <main@@Base+0x1089c>
   23c40:	mov	r0, r5
   23c44:	mov	r1, r7
   23c48:	mov	r2, r6
   23c4c:	mov	r3, #23
   23c50:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   23c54:	mov	r4, r0
   23c58:	mov	r0, r4
   23c5c:	sub	sp, fp, #28
   23c60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23c64:	mov	r0, r5
   23c68:	mov	r1, r4
   23c6c:	mov	r2, r6
   23c70:	mov	r3, #14
   23c74:	b	23c50 <main@@Base+0x10894>
   23c78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23c7c:	add	fp, sp, #28
   23c80:	sub	sp, sp, #44	; 0x2c
   23c84:	mov	r4, r2
   23c88:	ldr	r2, [fp, #8]
   23c8c:	mov	r5, r0
   23c90:	mov	r0, #0
   23c94:	mov	r9, r3
   23c98:	cmp	r1, r4
   23c9c:	str	r0, [r2]
   23ca0:	str	r0, [r2, #4]
   23ca4:	beq	23ce8 <main@@Base+0x1092c>
   23ca8:	ldrb	r0, [r1]
   23cac:	cmp	r0, #46	; 0x2e
   23cb0:	beq	23cc8 <main@@Base+0x1090c>
   23cb4:	cmp	r0, #34	; 0x22
   23cb8:	bne	23ce0 <main@@Base+0x10924>
   23cbc:	mov	r0, #0
   23cc0:	add	r1, r1, #1
   23cc4:	b	23ce4 <main@@Base+0x10928>
   23cc8:	mov	r0, r5
   23ccc:	mov	r2, r4
   23cd0:	mov	r3, #5
   23cd4:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   23cd8:	mov	r1, r0
   23cdc:	b	23ce8 <main@@Base+0x1092c>
   23ce0:	mov	r0, #1
   23ce4:	str	r0, [r5, #12]
   23ce8:	ldr	r0, [r5, #12]
   23cec:	cmp	r0, #0
   23cf0:	beq	23d04 <main@@Base+0x10948>
   23cf4:	mov	r7, r1
   23cf8:	cmp	r7, r4
   23cfc:	bne	23d48 <main@@Base+0x1098c>
   23d00:	b	23e20 <main@@Base+0x10a64>
   23d04:	sub	r0, r4, r1
   23d08:	cmp	r0, #2
   23d0c:	blt	23d30 <main@@Base+0x10974>
   23d10:	ldrb	r0, [r1]
   23d14:	cmp	r0, #32
   23d18:	bhi	23cf4 <main@@Base+0x10938>
   23d1c:	bne	23d30 <main@@Base+0x10974>
   23d20:	mov	r7, r1
   23d24:	ldrb	r0, [r7, #1]!
   23d28:	cmp	r0, #32
   23d2c:	bhi	23d40 <main@@Base+0x10984>
   23d30:	mov	r0, r5
   23d34:	mov	r2, r4
   23d38:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   23d3c:	mov	r7, r0
   23d40:	cmp	r7, r4
   23d44:	beq	23e20 <main@@Base+0x10a64>
   23d48:	add	r0, r9, #4
   23d4c:	mov	r1, #0
   23d50:	add	sl, sp, #32
   23d54:	add	r8, sp, #28
   23d58:	str	r9, [sp, #16]
   23d5c:	str	r1, [sp, #20]
   23d60:	str	r0, [sp, #12]
   23d64:	ldr	r6, [r9]
   23d68:	mov	r9, r0
   23d6c:	add	r0, sp, #24
   23d70:	mov	r1, r7
   23d74:	mov	r2, r4
   23d78:	mov	r3, r8
   23d7c:	str	sl, [sp]
   23d80:	str	r0, [sp, #4]
   23d84:	mov	r0, r5
   23d88:	blx	r6
   23d8c:	cmp	r0, r4
   23d90:	beq	23e20 <main@@Base+0x10a64>
   23d94:	cmp	r0, r7
   23d98:	bne	23dac <main@@Base+0x109f0>
   23d9c:	ldr	r6, [r9], #4
   23da0:	cmp	r6, #0
   23da4:	bne	23d6c <main@@Base+0x109b0>
   23da8:	b	23e28 <main@@Base+0x10a6c>
   23dac:	ldr	r1, [sp, #20]
   23db0:	mov	r7, r0
   23db4:	cmp	r1, #0
   23db8:	beq	23dc8 <main@@Base+0x10a0c>
   23dbc:	ldr	r0, [r5, #12]
   23dc0:	cmp	r0, #0
   23dc4:	bne	23e4c <main@@Base+0x10a90>
   23dc8:	add	r1, r1, #1
   23dcc:	ldr	r0, [sp, #32]
   23dd0:	str	r1, [sp, #20]
   23dd4:	ldr	r1, [sp, #36]	; 0x24
   23dd8:	bl	334dc <flatcc_json_parser_struct_as_root@@Base+0x420>
   23ddc:	ldr	r2, [fp, #8]
   23de0:	vmov	d17, r0, r1
   23de4:	ldr	r3, [sp, #28]
   23de8:	ldr	r9, [sp, #16]
   23dec:	mov	r6, r2
   23df0:	vldr	d16, [r2]
   23df4:	eor	r2, r1, #-2147483648	; 0x80000000
   23df8:	cmp	r3, #0
   23dfc:	vmov	d18, r0, r2
   23e00:	vseleq.f64	d17, d17, d18
   23e04:	vadd.f64	d16, d16, d17
   23e08:	vstr	d16, [r6]
   23e0c:	ldr	r0, [sp, #24]
   23e10:	cmp	r0, #0
   23e14:	ldr	r0, [sp, #12]
   23e18:	bne	23d64 <main@@Base+0x109a8>
   23e1c:	b	23e40 <main@@Base+0x10a84>
   23e20:	mov	r7, r4
   23e24:	b	23e40 <main@@Base+0x10a84>
   23e28:	mov	r0, r5
   23e2c:	mov	r1, r7
   23e30:	mov	r2, r4
   23e34:	mov	r3, #23
   23e38:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   23e3c:	mov	r7, r0
   23e40:	mov	r0, r7
   23e44:	sub	sp, fp, #28
   23e48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23e4c:	mov	r0, r5
   23e50:	mov	r1, r7
   23e54:	mov	r2, r4
   23e58:	mov	r3, #14
   23e5c:	b	23e38 <main@@Base+0x10a7c>
   23e60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23e64:	add	fp, sp, #28
   23e68:	sub	sp, sp, #12
   23e6c:	mov	sl, r1
   23e70:	sub	r1, r2, r1
   23e74:	cmp	r1, #8
   23e78:	movcs	r1, #8
   23e7c:	sub	r1, r1, #1
   23e80:	cmp	r1, #7
   23e84:	bhi	240bc <main@@Base+0x10d00>
   23e88:	str	r3, [sp, #8]
   23e8c:	add	r3, pc, #36	; 0x24
   23e90:	mov	r8, #0
   23e94:	mov	ip, #0
   23e98:	mov	lr, #0
   23e9c:	mov	r5, #0
   23ea0:	mov	r6, #0
   23ea4:	mov	r7, #0
   23ea8:	mov	r4, #0
   23eac:	ldr	r9, [r3, r1, lsl #2]
   23eb0:	mov	r1, #0
   23eb4:	add	pc, r3, r9
   23eb8:	andeq	r0, r0, r4, rrx
   23ebc:	andeq	r0, r0, ip, asr r0
   23ec0:	andeq	r0, r0, r4, asr r0
   23ec4:	andeq	r0, r0, ip, asr #32
   23ec8:	andeq	r0, r0, r0, asr #32
   23ecc:	andeq	r0, r0, r4, lsr r0
   23ed0:	andeq	r0, r0, r4, lsr #32
   23ed4:	andeq	r0, r0, r0, lsr #32
   23ed8:	ldrb	ip, [sl, #7]
   23edc:	ldrb	r1, [sl, #6]
   23ee0:	mov	lr, r8
   23ee4:	orr	r1, ip, r1, lsl #8
   23ee8:	mov	r8, r1
   23eec:	ldrb	r1, [sl, #5]
   23ef0:	mov	r5, lr
   23ef4:	orr	r8, r8, r1, lsl #16
   23ef8:	ldrb	r1, [sl, #4]
   23efc:	mov	r6, r5
   23f00:	orr	r8, r8, r1, lsl #24
   23f04:	ldrb	r1, [sl, #3]
   23f08:	orr	r7, r1, r6
   23f0c:	ldrb	r1, [sl, #2]
   23f10:	orr	r4, r7, r1, lsl #8
   23f14:	ldrb	r1, [sl, #1]
   23f18:	orr	r1, r4, r1, lsl #16
   23f1c:	ldrb	r7, [sl]
   23f20:	movw	r3, #28276	; 0x6e74
   23f24:	ldr	r6, [fp, #12]
   23f28:	movt	r3, #29285	; 0x7265
   23f2c:	eor	r3, r8, r3
   23f30:	orr	r1, r1, r7, lsl #24
   23f34:	movw	r7, #20577	; 0x5061
   23f38:	movt	r7, #18798	; 0x496e
   23f3c:	eor	r7, r1, r7
   23f40:	orrs	r3, r3, r7
   23f44:	bne	24070 <main@@Base+0x10cb4>
   23f48:	add	r8, sl, #8
   23f4c:	sub	r1, r2, r8
   23f50:	cmp	r1, #8
   23f54:	movcs	r1, #8
   23f58:	sub	r1, r1, #1
   23f5c:	cmp	r1, #7
   23f60:	bhi	240bc <main@@Base+0x10d00>
   23f64:	str	r0, [sp, #4]
   23f68:	add	r3, pc, #36	; 0x24
   23f6c:	mov	r6, #0
   23f70:	mov	r0, #0
   23f74:	mov	r9, #0
   23f78:	mov	r7, #0
   23f7c:	mov	r5, #0
   23f80:	mov	r4, #0
   23f84:	mov	ip, #0
   23f88:	ldr	lr, [r3, r1, lsl #2]
   23f8c:	mov	r1, #0
   23f90:	add	pc, r3, lr
   23f94:	andeq	r0, r0, r4, rrx
   23f98:	andeq	r0, r0, ip, asr r0
   23f9c:	andeq	r0, r0, r4, asr r0
   23fa0:	andeq	r0, r0, ip, asr #32
   23fa4:	andeq	r0, r0, r0, asr #32
   23fa8:	andeq	r0, r0, r4, lsr r0
   23fac:	andeq	r0, r0, r4, lsr #32
   23fb0:	andeq	r0, r0, r0, lsr #32
   23fb4:	ldrb	r0, [sl, #15]
   23fb8:	ldrb	r1, [sl, #14]
   23fbc:	mov	r9, r6
   23fc0:	orr	r0, r0, r1, lsl #8
   23fc4:	mov	r6, r0
   23fc8:	ldrb	r0, [sl, #13]
   23fcc:	mov	r7, r9
   23fd0:	orr	r6, r6, r0, lsl #16
   23fd4:	ldrb	r0, [sl, #12]
   23fd8:	mov	r5, r7
   23fdc:	orr	r6, r6, r0, lsl #24
   23fe0:	ldrb	r0, [sl, #11]
   23fe4:	orr	r1, r0, r5
   23fe8:	ldrb	r0, [sl, #10]
   23fec:	orr	r4, r1, r0, lsl #8
   23ff0:	ldrb	r0, [sl, #9]
   23ff4:	orr	ip, r4, r0, lsl #16
   23ff8:	ldrb	r1, [r8]
   23ffc:	movw	r0, #24931	; 0x6163
   24000:	movw	r3, #28005	; 0x6d65
   24004:	movt	r0, #29552	; 0x7370
   24008:	movt	r3, #20065	; 0x4e61
   2400c:	eor	r0, r6, r0
   24010:	orr	r1, ip, r1, lsl #24
   24014:	eor	r1, r1, r3
   24018:	orrs	r0, r0, r1
   2401c:	bne	240bc <main@@Base+0x10d00>
   24020:	add	r6, sl, #16
   24024:	sub	r0, r2, r6
   24028:	cmp	r0, #8
   2402c:	movcs	r0, #8
   24030:	sub	r0, r0, #1
   24034:	cmp	r0, #7
   24038:	bhi	240bc <main@@Base+0x10d00>
   2403c:	ldrb	r0, [r6]
   24040:	cmp	r0, #101	; 0x65
   24044:	bne	240bc <main@@Base+0x10d00>
   24048:	ldr	r0, [fp, #12]
   2404c:	mov	r1, r6
   24050:	mov	r3, #1
   24054:	mov	r8, #1
   24058:	str	r0, [sp]
   2405c:	ldr	r0, [sp, #4]
   24060:	bl	2f6a4 <flatcc_json_parser_match_constant@@Base>
   24064:	cmp	r0, r6
   24068:	bne	2409c <main@@Base+0x10ce0>
   2406c:	b	240bc <main@@Base+0x10d00>
   24070:	movw	r3, #20037	; 0x4e45
   24074:	movt	r3, #20047	; 0x4e4f
   24078:	teq	r1, r3
   2407c:	bne	240bc <main@@Base+0x10d00>
   24080:	mov	r1, sl
   24084:	mov	r3, #4
   24088:	str	r6, [sp]
   2408c:	bl	2f6a4 <flatcc_json_parser_match_constant@@Base>
   24090:	cmp	r0, sl
   24094:	beq	240bc <main@@Base+0x10d00>
   24098:	mov	r8, #0
   2409c:	mov	sl, r0
   240a0:	ldr	r0, [fp, #8]
   240a4:	mov	r1, #0
   240a8:	str	r8, [r0]
   240ac:	str	r1, [r0, #4]
   240b0:	mov	r0, #0
   240b4:	ldr	r1, [sp, #8]
   240b8:	str	r0, [r1]
   240bc:	mov	r0, sl
   240c0:	sub	sp, fp, #28
   240c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   240c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   240cc:	add	fp, sp, #28
   240d0:	sub	sp, sp, #12
   240d4:	mov	r5, r1
   240d8:	sub	r1, r2, r1
   240dc:	cmp	r1, #8
   240e0:	movcs	r1, #8
   240e4:	sub	r1, r1, #1
   240e8:	cmp	r1, #7
   240ec:	bhi	2426c <main@@Base+0x10eb0>
   240f0:	str	r3, [sp, #8]
   240f4:	add	r6, pc, #36	; 0x24
   240f8:	mov	lr, #0
   240fc:	mov	ip, #0
   24100:	mov	r9, #0
   24104:	mov	sl, #0
   24108:	mov	r4, #0
   2410c:	mov	r3, #0
   24110:	mov	r7, #0
   24114:	ldr	r8, [r6, r1, lsl #2]
   24118:	mov	r1, #0
   2411c:	add	pc, r6, r8
   24120:	andeq	r0, r0, r4, rrx
   24124:	andeq	r0, r0, ip, asr r0
   24128:	andeq	r0, r0, r4, asr r0
   2412c:	andeq	r0, r0, ip, asr #32
   24130:	andeq	r0, r0, r0, asr #32
   24134:	andeq	r0, r0, r4, lsr r0
   24138:	andeq	r0, r0, r4, lsr #32
   2413c:	andeq	r0, r0, r0, lsr #32
   24140:	ldrb	ip, [r5, #7]
   24144:	ldrb	r1, [r5, #6]
   24148:	mov	r9, lr
   2414c:	orr	r1, ip, r1, lsl #8
   24150:	mov	lr, r1
   24154:	ldrb	r1, [r5, #5]
   24158:	mov	sl, r9
   2415c:	orr	lr, lr, r1, lsl #16
   24160:	ldrb	r1, [r5, #4]
   24164:	orr	lr, lr, r1, lsl #24
   24168:	mov	r1, sl
   2416c:	ldrb	r3, [r5, #3]
   24170:	orr	r4, r3, r1
   24174:	ldrb	r1, [r5, #2]
   24178:	orr	r3, r4, r1, lsl #8
   2417c:	ldrb	r1, [r5, #1]
   24180:	orr	r7, r3, r1, lsl #16
   24184:	ldrb	r1, [r5]
   24188:	ldr	r3, [fp, #12]
   2418c:	ldr	r8, [fp, #8]
   24190:	orr	r1, r7, r1, lsl #24
   24194:	movw	r7, #30769	; 0x7831
   24198:	movt	r7, #26725	; 0x6865
   2419c:	cmp	r1, r7
   241a0:	bhi	241d0 <main@@Base+0x10e14>
   241a4:	teq	r1, r7
   241a8:	bne	2426c <main@@Base+0x10eb0>
   241ac:	str	r3, [sp]
   241b0:	mov	r1, r5
   241b4:	mov	r3, #4
   241b8:	bl	2f6a4 <flatcc_json_parser_match_constant@@Base>
   241bc:	cmp	r0, r5
   241c0:	beq	2426c <main@@Base+0x10eb0>
   241c4:	mov	r1, #0
   241c8:	mov	r2, #3
   241cc:	b	24258 <main@@Base+0x10e9c>
   241d0:	lsr	r4, lr, #16
   241d4:	movw	r6, #25959	; 0x6567
   241d8:	movw	r7, #26725	; 0x6865
   241dc:	orr	r4, r4, r1, lsl #16
   241e0:	movt	r6, #30830	; 0x786e
   241e4:	eor	r7, r7, r1, lsr #16
   241e8:	eor	r6, r4, r6
   241ec:	orrs	r7, r6, r7
   241f0:	bne	24224 <main@@Base+0x10e68>
   241f4:	str	r3, [sp]
   241f8:	mov	r1, r5
   241fc:	mov	r3, #6
   24200:	bl	2f6a4 <flatcc_json_parser_match_constant@@Base>
   24204:	cmp	r0, r5
   24208:	beq	2426c <main@@Base+0x10eb0>
   2420c:	mvn	r2, #1
   24210:	mvn	r1, #0
   24214:	str	r2, [r8]
   24218:	str	r1, [r8, #4]
   2421c:	mov	r1, #1
   24220:	b	24260 <main@@Base+0x10ea4>
   24224:	movw	r7, #30770	; 0x7832
   24228:	movt	r7, #26725	; 0x6865
   2422c:	teq	r1, r7
   24230:	bne	2426c <main@@Base+0x10eb0>
   24234:	str	r3, [sp]
   24238:	mov	r1, r5
   2423c:	mov	r3, #4
   24240:	bl	2f6a4 <flatcc_json_parser_match_constant@@Base>
   24244:	cmp	r0, r5
   24248:	beq	2426c <main@@Base+0x10eb0>
   2424c:	movw	r2, #48815	; 0xbeaf
   24250:	mov	r1, #0
   24254:	movt	r2, #32431	; 0x7eaf
   24258:	str	r2, [r8]
   2425c:	str	r1, [r8, #4]
   24260:	ldr	r2, [sp, #8]
   24264:	mov	r5, r0
   24268:	str	r1, [r2]
   2426c:	mov	r0, r5
   24270:	sub	sp, fp, #28
   24274:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24278:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2427c:	add	fp, sp, #28
   24280:	sub	sp, sp, #12
   24284:	mov	r8, r1
   24288:	sub	r1, r2, r1
   2428c:	cmp	r1, #8
   24290:	movcs	r1, #8
   24294:	sub	r1, r1, #1
   24298:	cmp	r1, #7
   2429c:	bhi	24460 <main@@Base+0x110a4>
   242a0:	str	r3, [sp, #8]
   242a4:	add	r5, pc, #36	; 0x24
   242a8:	mov	sl, #0
   242ac:	mov	ip, #0
   242b0:	mov	lr, #0
   242b4:	mov	r4, #0
   242b8:	mov	r6, #0
   242bc:	mov	r7, #0
   242c0:	mov	r3, #0
   242c4:	ldr	r9, [r5, r1, lsl #2]
   242c8:	mov	r1, #0
   242cc:	add	pc, r5, r9
   242d0:	andeq	r0, r0, r4, rrx
   242d4:	andeq	r0, r0, ip, asr r0
   242d8:	andeq	r0, r0, r4, asr r0
   242dc:	andeq	r0, r0, ip, asr #32
   242e0:	andeq	r0, r0, r0, asr #32
   242e4:	andeq	r0, r0, r4, lsr r0
   242e8:	andeq	r0, r0, r4, lsr #32
   242ec:	andeq	r0, r0, r0, lsr #32
   242f0:	ldrb	ip, [r8, #7]
   242f4:	ldrb	r1, [r8, #6]
   242f8:	mov	lr, sl
   242fc:	orr	r1, ip, r1, lsl #8
   24300:	mov	sl, r1
   24304:	ldrb	r1, [r8, #5]
   24308:	mov	r4, lr
   2430c:	orr	sl, sl, r1, lsl #16
   24310:	ldrb	r1, [r8, #4]
   24314:	mov	r6, r4
   24318:	orr	sl, sl, r1, lsl #24
   2431c:	ldrb	r1, [r8, #3]
   24320:	orr	r7, r1, r6
   24324:	ldrb	r1, [r8, #2]
   24328:	orr	r3, r7, r1, lsl #8
   2432c:	ldrb	r1, [r8, #1]
   24330:	orr	r1, r3, r1, lsl #16
   24334:	ldrb	r7, [r8]
   24338:	ldr	r3, [fp, #12]
   2433c:	ldr	r5, [fp, #8]
   24340:	orr	r4, r1, r7, lsl #24
   24344:	movw	r1, #29745	; 0x7431
   24348:	movt	r1, #26990	; 0x696e
   2434c:	cmp	r4, r1
   24350:	bhi	24380 <main@@Base+0x10fc4>
   24354:	teq	r4, r1
   24358:	bne	24460 <main@@Base+0x110a4>
   2435c:	str	r3, [sp]
   24360:	mov	r1, r8
   24364:	mov	r3, #4
   24368:	bl	2f6a4 <flatcc_json_parser_match_constant@@Base>
   2436c:	cmp	r0, r8
   24370:	beq	24460 <main@@Base+0x110a4>
   24374:	mov	r1, #0
   24378:	mov	r2, #2
   2437c:	b	243cc <main@@Base+0x11010>
   24380:	movw	r6, #0
   24384:	movw	r1, #29806	; 0x746e
   24388:	movt	r6, #25959	; 0x6567
   2438c:	movt	r1, #26990	; 0x696e
   24390:	subs	r7, sl, r6
   24394:	sbcs	r7, r4, r1
   24398:	bcs	243d8 <main@@Base+0x1101c>
   2439c:	movw	r1, #29746	; 0x7432
   243a0:	movt	r1, #26990	; 0x696e
   243a4:	teq	r4, r1
   243a8:	bne	24460 <main@@Base+0x110a4>
   243ac:	str	r3, [sp]
   243b0:	mov	r1, r8
   243b4:	mov	r3, #4
   243b8:	bl	2f6a4 <flatcc_json_parser_match_constant@@Base>
   243bc:	cmp	r0, r8
   243c0:	beq	24460 <main@@Base+0x110a4>
   243c4:	mov	r1, #0
   243c8:	mov	r2, #42	; 0x2a
   243cc:	str	r2, [r5]
   243d0:	str	r1, [r5, #4]
   243d4:	b	24454 <main@@Base+0x11098>
   243d8:	eor	r1, r4, r1
   243dc:	add	r7, r6, #12800	; 0x3200
   243e0:	bic	r4, sl, #255	; 0xff
   243e4:	eor	r7, r4, r7
   243e8:	orrs	r7, r7, r1
   243ec:	bne	24418 <main@@Base+0x1105c>
   243f0:	str	r3, [sp]
   243f4:	mov	r1, r8
   243f8:	mov	r3, #7
   243fc:	bl	2f6a4 <flatcc_json_parser_match_constant@@Base>
   24400:	cmp	r0, r8
   24404:	beq	24460 <main@@Base+0x110a4>
   24408:	mvn	r2, #1
   2440c:	mvn	r1, #0
   24410:	orr	r2, r2, #1
   24414:	b	24448 <main@@Base+0x1108c>
   24418:	bfc	sl, #0, #16
   2441c:	eor	r7, sl, r6
   24420:	orrs	r1, r7, r1
   24424:	bne	24460 <main@@Base+0x110a4>
   24428:	str	r3, [sp]
   2442c:	mov	r1, r8
   24430:	mov	r3, #6
   24434:	bl	2f6a4 <flatcc_json_parser_match_constant@@Base>
   24438:	cmp	r0, r8
   2443c:	beq	24460 <main@@Base+0x110a4>
   24440:	mvn	r1, #0
   24444:	mvn	r2, #1
   24448:	str	r2, [r5]
   2444c:	str	r1, [r5, #4]
   24450:	mov	r1, #1
   24454:	ldr	r2, [sp, #8]
   24458:	mov	r8, r0
   2445c:	str	r1, [r2]
   24460:	mov	r0, r8
   24464:	sub	sp, fp, #28
   24468:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2446c:	push	{r4, r5, r6, r7, fp, lr}
   24470:	add	fp, sp, #16
   24474:	sub	sp, sp, #8
   24478:	mov	r5, r1
   2447c:	sub	r1, r2, r1
   24480:	mov	r4, r3
   24484:	cmp	r1, #8
   24488:	movcs	r1, #8
   2448c:	sub	r3, r1, #1
   24490:	cmp	r3, #7
   24494:	bhi	245ac <main@@Base+0x111f0>
   24498:	add	r7, pc, #8
   2449c:	mov	r1, #0
   244a0:	ldr	r3, [r7, r3, lsl #2]
   244a4:	add	pc, r7, r3
   244a8:	andeq	r0, r0, r8, lsr r0
   244ac:	andeq	r0, r0, r0, lsr r0
   244b0:	andeq	r0, r0, r8, lsr #32
   244b4:	andeq	r0, r0, r0, lsr #32
   244b8:	andeq	r0, r0, r0, lsr #32
   244bc:	andeq	r0, r0, r0, lsr #32
   244c0:	andeq	r0, r0, r0, lsr #32
   244c4:	andeq	r0, r0, r0, lsr #32
   244c8:	ldrb	r3, [r5, #3]
   244cc:	orr	r1, r3, r1
   244d0:	ldrb	r3, [r5, #2]
   244d4:	orr	r1, r1, r3, lsl #8
   244d8:	ldrb	r3, [r5, #1]
   244dc:	orr	r1, r1, r3, lsl #16
   244e0:	ldrb	r6, [r5]
   244e4:	ldr	r3, [fp, #12]
   244e8:	ldr	r7, [fp, #8]
   244ec:	orr	r1, r1, r6, lsl #24
   244f0:	movw	r6, #26417	; 0x6731
   244f4:	movt	r6, #28261	; 0x6e65
   244f8:	cmp	r1, r6
   244fc:	bhi	2452c <main@@Base+0x11170>
   24500:	teq	r1, r6
   24504:	bne	245ac <main@@Base+0x111f0>
   24508:	str	r3, [sp]
   2450c:	mov	r1, r5
   24510:	mov	r3, #4
   24514:	bl	2f6a4 <flatcc_json_parser_match_constant@@Base>
   24518:	cmp	r0, r5
   2451c:	beq	245ac <main@@Base+0x111f0>
   24520:	mvn	r1, #0
   24524:	mvn	r2, #11
   24528:	b	24598 <main@@Base+0x111dc>
   2452c:	movw	r6, #26418	; 0x6732
   24530:	movt	r6, #28261	; 0x6e65
   24534:	teq	r1, r6
   24538:	beq	24574 <main@@Base+0x111b8>
   2453c:	movw	r6, #26419	; 0x6733
   24540:	movt	r6, #28261	; 0x6e65
   24544:	teq	r1, r6
   24548:	bne	245ac <main@@Base+0x111f0>
   2454c:	str	r3, [sp]
   24550:	mov	r1, r5
   24554:	mov	r3, #4
   24558:	bl	2f6a4 <flatcc_json_parser_match_constant@@Base>
   2455c:	cmp	r0, r5
   24560:	beq	245ac <main@@Base+0x111f0>
   24564:	mvn	r2, #11
   24568:	mvn	r1, #0
   2456c:	orr	r2, r2, #2
   24570:	b	24598 <main@@Base+0x111dc>
   24574:	str	r3, [sp]
   24578:	mov	r1, r5
   2457c:	mov	r3, #4
   24580:	bl	2f6a4 <flatcc_json_parser_match_constant@@Base>
   24584:	cmp	r0, r5
   24588:	beq	245ac <main@@Base+0x111f0>
   2458c:	mvn	r2, #11
   24590:	mvn	r1, #0
   24594:	orr	r2, r2, #1
   24598:	str	r2, [r7]
   2459c:	str	r1, [r7, #4]
   245a0:	mov	r1, #1
   245a4:	mov	r5, r0
   245a8:	str	r1, [r4]
   245ac:	mov	r0, r5
   245b0:	sub	sp, fp, #16
   245b4:	pop	{r4, r5, r6, r7, fp, pc}
   245b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   245bc:	add	fp, sp, #28
   245c0:	sub	sp, sp, #12
   245c4:	mov	sl, r1
   245c8:	sub	r1, r2, r1
   245cc:	cmp	r1, #8
   245d0:	movcs	r1, #8
   245d4:	sub	r7, r1, #1
   245d8:	cmp	r7, #7
   245dc:	bhi	2485c <main@@Base+0x114a0>
   245e0:	str	r3, [sp, #8]
   245e4:	add	r1, pc, #36	; 0x24
   245e8:	mov	r9, #0
   245ec:	mov	ip, #0
   245f0:	mov	lr, #0
   245f4:	mov	r6, #0
   245f8:	mov	r4, #0
   245fc:	mov	r5, #0
   24600:	mov	r8, #0
   24604:	ldr	r3, [r1, r7, lsl #2]
   24608:	mov	r7, #0
   2460c:	add	pc, r1, r3
   24610:	andeq	r0, r0, r4, rrx
   24614:	andeq	r0, r0, ip, asr r0
   24618:	andeq	r0, r0, r4, asr r0
   2461c:	andeq	r0, r0, ip, asr #32
   24620:	andeq	r0, r0, r0, asr #32
   24624:	andeq	r0, r0, r4, lsr r0
   24628:	andeq	r0, r0, r4, lsr #32
   2462c:	andeq	r0, r0, r0, lsr #32
   24630:	ldrb	ip, [sl, #7]
   24634:	ldrb	r1, [sl, #6]
   24638:	mov	lr, r9
   2463c:	orr	r1, ip, r1, lsl #8
   24640:	mov	r9, r1
   24644:	ldrb	r1, [sl, #5]
   24648:	mov	r6, lr
   2464c:	orr	r9, r9, r1, lsl #16
   24650:	ldrb	r1, [sl, #4]
   24654:	mov	r7, r6
   24658:	orr	r9, r9, r1, lsl #24
   2465c:	ldrb	r1, [sl, #3]
   24660:	orr	r4, r1, r7
   24664:	ldrb	r1, [sl, #2]
   24668:	orr	r5, r4, r1, lsl #8
   2466c:	ldrb	r1, [sl, #1]
   24670:	orr	r8, r5, r1, lsl #16
   24674:	ldrb	r1, [sl]
   24678:	ldr	lr, [fp, #12]
   2467c:	ldr	r5, [fp, #8]
   24680:	orr	r6, r8, r1, lsl #24
   24684:	movw	r1, #20036	; 0x4e44
   24688:	movt	r1, #20047	; 0x4e4f
   2468c:	cmp	r6, r1
   24690:	bhi	246f0 <main@@Base+0x11334>
   24694:	movw	r7, #28160	; 0x6e00
   24698:	movw	r4, #28523	; 0x6f6b
   2469c:	and	r3, r9, #-16777216	; 0xff000000
   246a0:	movt	r7, #18017	; 0x4661
   246a4:	movt	r4, #17007	; 0x426f
   246a8:	subs	r1, r9, r7
   246ac:	sbcs	r1, r6, r4
   246b0:	bcs	2473c <main@@Base+0x11380>
   246b4:	movw	r1, #27756	; 0x6c6c
   246b8:	eor	r3, r3, #1694498816	; 0x65000000
   246bc:	movt	r1, #16997	; 0x4265
   246c0:	eor	r1, r6, r1
   246c4:	orrs	r1, r3, r1
   246c8:	bne	2485c <main@@Base+0x114a0>
   246cc:	mov	r1, sl
   246d0:	mov	r3, #5
   246d4:	str	lr, [sp]
   246d8:	bl	2f6a4 <flatcc_json_parser_match_constant@@Base>
   246dc:	cmp	r0, sl
   246e0:	beq	2485c <main@@Base+0x114a0>
   246e4:	mov	r1, #0
   246e8:	mov	r2, #9
   246ec:	b	24848 <main@@Base+0x1148c>
   246f0:	movw	r7, #26725	; 0x6865
   246f4:	mvn	r1, #-1912602624	; 0x8e000000
   246f8:	movt	r7, #20340	; 0x4f74
   246fc:	subs	r1, r1, r9
   24700:	sbcs	r1, r7, r6
   24704:	bcc	24778 <main@@Base+0x113bc>
   24708:	movw	r1, #20037	; 0x4e45
   2470c:	movt	r1, #20047	; 0x4e4f
   24710:	teq	r6, r1
   24714:	bne	2485c <main@@Base+0x114a0>
   24718:	mov	r1, sl
   2471c:	mov	r3, #4
   24720:	str	lr, [sp]
   24724:	bl	2f6a4 <flatcc_json_parser_match_constant@@Base>
   24728:	cmp	r0, sl
   2472c:	beq	2485c <main@@Base+0x114a0>
   24730:	mov	r1, #0
   24734:	str	r1, [r5]
   24738:	b	2484c <main@@Base+0x11490>
   2473c:	movw	r1, #19553	; 0x4c61
   24740:	eor	r3, r3, #1845493760	; 0x6e000000
   24744:	movt	r1, #19829	; 0x4d75
   24748:	eor	r1, r6, r1
   2474c:	orrs	r1, r3, r1
   24750:	bne	247cc <main@@Base+0x11410>
   24754:	mov	r1, sl
   24758:	mov	r3, #5
   2475c:	str	lr, [sp]
   24760:	bl	2f6a4 <flatcc_json_parser_match_constant@@Base>
   24764:	cmp	r0, sl
   24768:	beq	2485c <main@@Base+0x114a0>
   2476c:	mov	r1, #0
   24770:	mov	r2, #2
   24774:	b	24848 <main@@Base+0x1148c>
   24778:	movw	r4, #25964	; 0x656c
   2477c:	movw	ip, #28789	; 0x7075
   24780:	movt	r4, #28282	; 0x6e7a
   24784:	movt	ip, #21089	; 0x5261
   24788:	subs	r1, r9, r4
   2478c:	sbcs	r1, r6, ip
   24790:	bcs	24804 <main@@Base+0x11448>
   24794:	and	r3, r9, #-16777216	; 0xff000000
   24798:	eor	r1, r6, r7
   2479c:	eor	r3, r3, #1912602624	; 0x72000000
   247a0:	orrs	r1, r3, r1
   247a4:	bne	2485c <main@@Base+0x114a0>
   247a8:	mov	r1, sl
   247ac:	mov	r3, #5
   247b0:	str	lr, [sp]
   247b4:	bl	2f6a4 <flatcc_json_parser_match_constant@@Base>
   247b8:	cmp	r0, sl
   247bc:	beq	2485c <main@@Base+0x114a0>
   247c0:	mov	r1, #0
   247c4:	mov	r2, #11
   247c8:	b	24848 <main@@Base+0x1148c>
   247cc:	bic	r3, r9, #255	; 0xff
   247d0:	eor	r1, r6, r4
   247d4:	eor	r3, r3, r7
   247d8:	orrs	r1, r3, r1
   247dc:	bne	2485c <main@@Base+0x114a0>
   247e0:	mov	r1, sl
   247e4:	mov	r3, #7
   247e8:	str	lr, [sp]
   247ec:	bl	2f6a4 <flatcc_json_parser_match_constant@@Base>
   247f0:	cmp	r0, sl
   247f4:	beq	2485c <main@@Base+0x114a0>
   247f8:	mov	r1, #0
   247fc:	mov	r2, #10
   24800:	b	24848 <main@@Base+0x1148c>
   24804:	lsr	r3, r9, #16
   24808:	movw	r7, #25956	; 0x6564
   2480c:	movw	r1, #21870	; 0x556e
   24810:	orr	r3, r3, r6, lsl #16
   24814:	movt	r7, #30067	; 0x7573
   24818:	eor	r1, r1, r6, lsr #16
   2481c:	eor	r3, r3, r7
   24820:	orrs	r1, r3, r1
   24824:	bne	24868 <main@@Base+0x114ac>
   24828:	mov	r1, sl
   2482c:	mov	r3, #6
   24830:	str	lr, [sp]
   24834:	bl	2f6a4 <flatcc_json_parser_match_constant@@Base>
   24838:	cmp	r0, sl
   2483c:	beq	2485c <main@@Base+0x114a0>
   24840:	mov	r1, #0
   24844:	mov	r2, #255	; 0xff
   24848:	str	r2, [r5]
   2484c:	str	r1, [r5, #4]
   24850:	mov	sl, r0
   24854:	ldr	r2, [sp, #8]
   24858:	str	r1, [r2]
   2485c:	mov	r0, sl
   24860:	sub	sp, fp, #28
   24864:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24868:	eor	r1, r9, r4
   2486c:	eor	r3, r6, ip
   24870:	orrs	r1, r1, r3
   24874:	bne	2485c <main@@Base+0x114a0>
   24878:	mov	r1, sl
   2487c:	mov	r3, #8
   24880:	str	lr, [sp]
   24884:	mov	r4, #8
   24888:	bl	2f6a4 <flatcc_json_parser_match_constant@@Base>
   2488c:	cmp	r0, sl
   24890:	beq	2485c <main@@Base+0x114a0>
   24894:	mov	r1, #0
   24898:	str	r4, [r5]
   2489c:	b	2484c <main@@Base+0x11490>
   248a0:	cmp	r0, #5
   248a4:	mov	r1, #0
   248a8:	movwcc	r1, #1
   248ac:	mov	r0, r1
   248b0:	bx	lr
   248b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   248b8:	add	fp, sp, #28
   248bc:	sub	sp, sp, #60	; 0x3c
   248c0:	mov	r9, r0
   248c4:	mov	r0, #0
   248c8:	mov	r4, r1
   248cc:	mov	r1, #3
   248d0:	mov	r6, r3
   248d4:	mov	r8, r2
   248d8:	str	r0, [r3]
   248dc:	ldr	r0, [r9]
   248e0:	bl	2bc04 <flatcc_builder_start_table@@Base>
   248e4:	cmp	r0, #0
   248e8:	bne	24948 <main@@Base+0x1158c>
   248ec:	cmp	r4, r8
   248f0:	beq	24924 <main@@Base+0x11568>
   248f4:	ldrb	r0, [r4]
   248f8:	cmp	r0, #123	; 0x7b
   248fc:	bne	24924 <main@@Base+0x11568>
   24900:	add	r1, r4, #1
   24904:	sub	r0, r8, r1
   24908:	cmp	r0, #2
   2490c:	blt	24994 <main@@Base+0x115d8>
   24910:	ldrb	r0, [r1]
   24914:	cmp	r0, #32
   24918:	bls	24984 <main@@Base+0x115c8>
   2491c:	mov	r4, r1
   24920:	b	249a4 <main@@Base+0x115e8>
   24924:	mov	r0, r9
   24928:	mov	r1, r4
   2492c:	mov	r2, r8
   24930:	mov	r3, #21
   24934:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   24938:	mov	r4, r0
   2493c:	ldr	r0, [r9, #24]
   24940:	cmp	r0, #0
   24944:	beq	2496c <main@@Base+0x115b0>
   24948:	mov	r0, r9
   2494c:	mov	r1, r4
   24950:	mov	r2, r8
   24954:	mov	r3, #33	; 0x21
   24958:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   2495c:	mov	r4, r0
   24960:	mov	r0, r4
   24964:	sub	sp, fp, #28
   24968:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2496c:	ldr	r0, [r9]
   24970:	bl	2c62c <flatcc_builder_end_table@@Base>
   24974:	cmp	r0, #0
   24978:	str	r0, [r6]
   2497c:	bne	24960 <main@@Base+0x115a4>
   24980:	b	24948 <main@@Base+0x1158c>
   24984:	bne	24994 <main@@Base+0x115d8>
   24988:	ldrb	r0, [r4, #2]!
   2498c:	cmp	r0, #32
   24990:	bhi	249a4 <main@@Base+0x115e8>
   24994:	mov	r0, r9
   24998:	mov	r2, r8
   2499c:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   249a0:	mov	r4, r0
   249a4:	cmp	r4, r8
   249a8:	mov	r2, r8
   249ac:	beq	249f0 <main@@Base+0x11634>
   249b0:	ldrb	r0, [r4]
   249b4:	cmp	r0, #125	; 0x7d
   249b8:	bne	249ec <main@@Base+0x11630>
   249bc:	add	r1, r4, #1
   249c0:	sub	r0, r8, r1
   249c4:	cmp	r0, #2
   249c8:	blt	27d58 <main@@Base+0x1499c>
   249cc:	ldrb	r0, [r1]
   249d0:	cmp	r0, #32
   249d4:	bhi	27d1c <main@@Base+0x14960>
   249d8:	bne	27d58 <main@@Base+0x1499c>
   249dc:	ldrb	r0, [r4, #2]!
   249e0:	cmp	r0, #32
   249e4:	bhi	2493c <main@@Base+0x11580>
   249e8:	b	27d58 <main@@Base+0x1499c>
   249ec:	mov	r2, r4
   249f0:	add	r0, r9, #12
   249f4:	movw	r1, #25186	; 0x6262
   249f8:	str	r9, [sp, #16]
   249fc:	str	r6, [sp, #24]
   24a00:	str	r0, [sp, #20]
   24a04:	movw	r0, #257	; 0x101
   24a08:	movt	r1, #25186	; 0x6262
   24a0c:	movt	r0, #257	; 0x101
   24a10:	add	r0, r1, r0
   24a14:	str	r0, [sp, #12]
   24a18:	movw	r0, #514	; 0x202
   24a1c:	movt	r0, #514	; 0x202
   24a20:	add	r0, r1, r0
   24a24:	str	r0, [sp, #8]
   24a28:	cmp	r2, r8
   24a2c:	mov	sl, r8
   24a30:	beq	24a84 <main@@Base+0x116c8>
   24a34:	ldrb	r0, [r2]
   24a38:	cmp	r0, #46	; 0x2e
   24a3c:	beq	24a58 <main@@Base+0x1169c>
   24a40:	cmp	r0, #34	; 0x22
   24a44:	bne	24a74 <main@@Base+0x116b8>
   24a48:	ldr	r0, [sp, #20]
   24a4c:	mov	r1, #0
   24a50:	add	sl, r2, #1
   24a54:	b	24a80 <main@@Base+0x116c4>
   24a58:	mov	r1, r2
   24a5c:	mov	r0, r9
   24a60:	mov	r2, r8
   24a64:	mov	r3, #5
   24a68:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   24a6c:	mov	sl, r0
   24a70:	b	24a84 <main@@Base+0x116c8>
   24a74:	ldr	r0, [sp, #20]
   24a78:	mov	r1, #1
   24a7c:	mov	sl, r2
   24a80:	str	r1, [r0]
   24a84:	sub	r0, r8, sl
   24a88:	mov	r1, #8
   24a8c:	cmp	r0, #8
   24a90:	movcs	r0, r1
   24a94:	sub	r1, r0, #1
   24a98:	cmp	r1, #7
   24a9c:	bhi	24d34 <main@@Base+0x11978>
   24aa0:	add	r6, pc, #36	; 0x24
   24aa4:	mov	r0, #0
   24aa8:	mov	ip, #0
   24aac:	mov	lr, #0
   24ab0:	mov	r2, #0
   24ab4:	mov	r3, #0
   24ab8:	mov	r7, #0
   24abc:	mov	r5, #0
   24ac0:	mov	r4, #0
   24ac4:	ldr	r1, [r6, r1, lsl #2]
   24ac8:	add	pc, r6, r1
   24acc:	andeq	r0, r0, r4, rrx
   24ad0:	andeq	r0, r0, ip, asr r0
   24ad4:	andeq	r0, r0, r4, asr r0
   24ad8:	andeq	r0, r0, ip, asr #32
   24adc:	andeq	r0, r0, r0, asr #32
   24ae0:	andeq	r0, r0, r4, lsr r0
   24ae4:	andeq	r0, r0, r4, lsr #32
   24ae8:	andeq	r0, r0, r0, lsr #32
   24aec:	ldrb	ip, [sl, #7]
   24af0:	ldrb	r1, [sl, #6]
   24af4:	mov	lr, r0
   24af8:	orr	r1, ip, r1, lsl #8
   24afc:	mov	r0, r1
   24b00:	ldrb	r1, [sl, #5]
   24b04:	mov	r2, lr
   24b08:	orr	r0, r0, r1, lsl #16
   24b0c:	ldrb	r1, [sl, #4]
   24b10:	mov	r3, r2
   24b14:	orr	r0, r0, r1, lsl #24
   24b18:	ldrb	r1, [sl, #3]
   24b1c:	orr	r7, r1, r3
   24b20:	ldrb	r1, [sl, #2]
   24b24:	orr	r5, r7, r1, lsl #8
   24b28:	ldrb	r1, [sl, #1]
   24b2c:	orr	r4, r5, r1, lsl #16
   24b30:	movw	r1, #28526	; 0x6f6e
   24b34:	movw	r2, #29556	; 0x7374
   24b38:	movt	r1, #27251	; 0x6a73
   24b3c:	movt	r2, #29797	; 0x7465
   24b40:	eor	r0, r0, r1
   24b44:	ldrb	r1, [sl]
   24b48:	orr	r1, r4, r1, lsl #24
   24b4c:	eor	r1, r1, r2
   24b50:	orrs	r0, r0, r1
   24b54:	bne	24d34 <main@@Base+0x11978>
   24b58:	add	r1, sl, #8
   24b5c:	mov	r2, #8
   24b60:	sub	r0, r8, r1
   24b64:	cmp	r0, #8
   24b68:	movcs	r0, r2
   24b6c:	sub	r2, r0, #1
   24b70:	cmp	r2, #7
   24b74:	bhi	24d40 <main@@Base+0x11984>
   24b78:	add	r5, pc, #36	; 0x24
   24b7c:	mov	r9, #0
   24b80:	mov	ip, #0
   24b84:	mov	lr, #0
   24b88:	mov	r7, #0
   24b8c:	mov	r3, #0
   24b90:	mov	r6, #0
   24b94:	mov	r4, #0
   24b98:	ldr	r0, [r5, r2, lsl #2]
   24b9c:	mov	r2, #0
   24ba0:	add	pc, r5, r0
   24ba4:	andeq	r0, r0, r4, rrx
   24ba8:	andeq	r0, r0, ip, asr r0
   24bac:	andeq	r0, r0, r4, asr r0
   24bb0:	andeq	r0, r0, ip, asr #32
   24bb4:	andeq	r0, r0, r0, asr #32
   24bb8:	andeq	r0, r0, r4, lsr r0
   24bbc:	andeq	r0, r0, r4, lsr #32
   24bc0:	andeq	r0, r0, r0, lsr #32
   24bc4:	ldrb	ip, [sl, #15]
   24bc8:	ldrb	r0, [sl, #14]
   24bcc:	mov	lr, r9
   24bd0:	orr	r0, ip, r0, lsl #8
   24bd4:	mov	r9, r0
   24bd8:	ldrb	r0, [sl, #13]
   24bdc:	mov	r7, lr
   24be0:	orr	r9, r9, r0, lsl #16
   24be4:	ldrb	r0, [sl, #12]
   24be8:	mov	r3, r7
   24bec:	orr	r9, r9, r0, lsl #24
   24bf0:	ldrb	r0, [sl, #11]
   24bf4:	orr	r6, r0, r3
   24bf8:	ldrb	r0, [sl, #10]
   24bfc:	orr	r4, r6, r0, lsl #8
   24c00:	ldrb	r0, [sl, #9]
   24c04:	orr	r2, r4, r0, lsl #16
   24c08:	ldrb	r3, [r1]
   24c0c:	movw	r0, #28769	; 0x7061
   24c10:	movt	r0, #27000	; 0x6978
   24c14:	eor	r0, r9, r0
   24c18:	orr	r2, r2, r3, lsl #24
   24c1c:	movw	r3, #25958	; 0x6566
   24c20:	movt	r3, #28786	; 0x7072
   24c24:	eor	r2, r2, r3
   24c28:	orrs	r0, r0, r2
   24c2c:	bne	24d40 <main@@Base+0x11984>
   24c30:	add	ip, sl, #16
   24c34:	mov	r0, #8
   24c38:	sub	r9, r8, ip
   24c3c:	cmp	r9, #8
   24c40:	movcc	r0, r9
   24c44:	sub	r1, r0, #1
   24c48:	cmp	r1, #7
   24c4c:	bhi	250a8 <main@@Base+0x11cec>
   24c50:	add	r4, pc, #28
   24c54:	mov	r0, #0
   24c58:	mov	r2, #0
   24c5c:	mov	r3, #0
   24c60:	mov	r6, #0
   24c64:	mov	r5, #0
   24c68:	ldr	r7, [r4, r1, lsl #2]
   24c6c:	mov	r1, #0
   24c70:	add	pc, r4, r7
   24c74:	andeq	r0, r0, r0, asr r0
   24c78:	andeq	r0, r0, r8, asr #32
   24c7c:	andeq	r0, r0, r0, asr #32
   24c80:	andeq	r0, r0, r8, lsr r0
   24c84:	andeq	r0, r0, r8, lsr #32
   24c88:	andeq	r0, r0, r0, lsr #32
   24c8c:	andeq	r0, r0, r0, lsr #32
   24c90:	andeq	r0, r0, r0, lsr #32
   24c94:	ldrb	r1, [sl, #21]
   24c98:	lsl	r1, r1, #16
   24c9c:	ldrb	r2, [sl, #20]
   24ca0:	orr	r1, r1, r2, lsl #24
   24ca4:	mov	r2, r0
   24ca8:	mov	r0, r1
   24cac:	ldrb	r1, [sl, #19]
   24cb0:	orr	r3, r1, r2
   24cb4:	ldrb	r1, [sl, #18]
   24cb8:	orr	r6, r3, r1, lsl #8
   24cbc:	ldrb	r1, [sl, #17]
   24cc0:	orr	r5, r6, r1, lsl #16
   24cc4:	mov	r6, r0
   24cc8:	movw	r1, #0
   24ccc:	movw	r3, #26990	; 0x696e
   24cd0:	bfc	r6, #0, #16
   24cd4:	movt	r1, #26418	; 0x6732
   24cd8:	movt	r3, #29299	; 0x7273
   24cdc:	eor	r2, r6, r1
   24ce0:	ldrb	r1, [ip]
   24ce4:	orr	r1, r5, r1, lsl #24
   24ce8:	eor	r5, r1, r3
   24cec:	orrs	r2, r2, r5
   24cf0:	bne	24d4c <main@@Base+0x11990>
   24cf4:	cmp	r9, #7
   24cf8:	blt	250a8 <main@@Base+0x11cec>
   24cfc:	ldr	r2, [sp, #20]
   24d00:	mov	r1, sl
   24d04:	ldrb	r0, [r1, #22]!
   24d08:	ldr	r2, [r2]
   24d0c:	cmp	r2, #0
   24d10:	beq	24da8 <main@@Base+0x119ec>
   24d14:	cmp	r0, #33	; 0x21
   24d18:	bcc	24d24 <main@@Base+0x11968>
   24d1c:	cmp	r0, #58	; 0x3a
   24d20:	bne	250a8 <main@@Base+0x11cec>
   24d24:	ldr	r0, [sp, #20]
   24d28:	mov	r2, #0
   24d2c:	str	r2, [r0]
   24d30:	b	24db4 <main@@Base+0x119f8>
   24d34:	mov	r0, r9
   24d38:	mov	r1, sl
   24d3c:	b	250b4 <main@@Base+0x11cf8>
   24d40:	ldr	r9, [sp, #16]
   24d44:	mov	r0, r9
   24d48:	b	250b4 <main@@Base+0x11cf8>
   24d4c:	cmp	r9, #6
   24d50:	blt	2504c <main@@Base+0x11c90>
   24d54:	movw	r2, #26990	; 0x696e
   24d58:	and	r0, r0, #-16777216	; 0xff000000
   24d5c:	movt	r2, #29299	; 0x7273
   24d60:	eor	r0, r0, #1728053248	; 0x67000000
   24d64:	eor	r1, r1, r2
   24d68:	orrs	r0, r0, r1
   24d6c:	bne	2504c <main@@Base+0x11c90>
   24d70:	ldr	r2, [sp, #20]
   24d74:	mov	r1, sl
   24d78:	ldrb	r0, [r1, #21]!
   24d7c:	ldr	r2, [r2]
   24d80:	cmp	r2, #0
   24d84:	beq	24dd8 <main@@Base+0x11a1c>
   24d88:	cmp	r0, #33	; 0x21
   24d8c:	bcc	24d98 <main@@Base+0x119dc>
   24d90:	cmp	r0, #58	; 0x3a
   24d94:	bne	2504c <main@@Base+0x11c90>
   24d98:	ldr	r0, [sp, #20]
   24d9c:	mov	r2, #0
   24da0:	str	r2, [r0]
   24da4:	b	24de4 <main@@Base+0x11a28>
   24da8:	cmp	r0, #34	; 0x22
   24dac:	bne	250a8 <main@@Base+0x11cec>
   24db0:	add	r1, sl, #23
   24db4:	ldr	r5, [sp, #16]
   24db8:	sub	r0, r8, r1
   24dbc:	cmp	r0, #2
   24dc0:	blt	24e18 <main@@Base+0x11a5c>
   24dc4:	ldrb	r0, [r1]
   24dc8:	cmp	r0, #32
   24dcc:	bls	24e04 <main@@Base+0x11a48>
   24dd0:	mov	r4, r1
   24dd4:	b	24e30 <main@@Base+0x11a74>
   24dd8:	cmp	r0, #34	; 0x22
   24ddc:	bne	2504c <main@@Base+0x11c90>
   24de0:	add	r1, sl, #22
   24de4:	sub	r0, r8, r1
   24de8:	cmp	r0, #2
   24dec:	blt	24e98 <main@@Base+0x11adc>
   24df0:	ldrb	r0, [r1]
   24df4:	cmp	r0, #32
   24df8:	bls	24e84 <main@@Base+0x11ac8>
   24dfc:	mov	r4, r1
   24e00:	b	24eb0 <main@@Base+0x11af4>
   24e04:	bne	24e18 <main@@Base+0x11a5c>
   24e08:	mov	r4, r1
   24e0c:	ldrb	r0, [r4, #1]!
   24e10:	cmp	r0, #32
   24e14:	bhi	24e30 <main@@Base+0x11a74>
   24e18:	mov	r0, r5
   24e1c:	mov	r2, r8
   24e20:	mov	r4, ip
   24e24:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   24e28:	mov	ip, r4
   24e2c:	mov	r4, r0
   24e30:	mov	r6, ip
   24e34:	cmp	r4, r8
   24e38:	beq	24e6c <main@@Base+0x11ab0>
   24e3c:	ldrb	r0, [r4]
   24e40:	cmp	r0, #58	; 0x3a
   24e44:	bne	24e6c <main@@Base+0x11ab0>
   24e48:	add	r1, r4, #1
   24e4c:	sub	r0, r8, r1
   24e50:	cmp	r0, #2
   24e54:	blt	24f14 <main@@Base+0x11b58>
   24e58:	ldrb	r0, [r1]
   24e5c:	cmp	r0, #32
   24e60:	bls	24f04 <main@@Base+0x11b48>
   24e64:	mov	r4, r1
   24e68:	b	24f24 <main@@Base+0x11b68>
   24e6c:	mov	r0, r5
   24e70:	mov	r1, r4
   24e74:	mov	r2, r8
   24e78:	mov	r3, #4
   24e7c:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   24e80:	b	24f20 <main@@Base+0x11b64>
   24e84:	bne	24e98 <main@@Base+0x11adc>
   24e88:	mov	r4, r1
   24e8c:	ldrb	r0, [r4, #1]!
   24e90:	cmp	r0, #32
   24e94:	bhi	24eb0 <main@@Base+0x11af4>
   24e98:	ldr	r0, [sp, #16]
   24e9c:	mov	r2, r8
   24ea0:	mov	r4, ip
   24ea4:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   24ea8:	mov	ip, r4
   24eac:	mov	r4, r0
   24eb0:	mov	r7, ip
   24eb4:	cmp	r4, r8
   24eb8:	beq	24eec <main@@Base+0x11b30>
   24ebc:	ldrb	r0, [r4]
   24ec0:	cmp	r0, #58	; 0x3a
   24ec4:	bne	24eec <main@@Base+0x11b30>
   24ec8:	add	r1, r4, #1
   24ecc:	sub	r0, r8, r1
   24ed0:	cmp	r0, #2
   24ed4:	blt	24fdc <main@@Base+0x11c20>
   24ed8:	ldrb	r0, [r1]
   24edc:	cmp	r0, #32
   24ee0:	bls	24fcc <main@@Base+0x11c10>
   24ee4:	mov	r4, r1
   24ee8:	b	24fec <main@@Base+0x11c30>
   24eec:	ldr	r0, [sp, #16]
   24ef0:	mov	r1, r4
   24ef4:	mov	r2, r8
   24ef8:	mov	r3, #4
   24efc:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   24f00:	b	24fe8 <main@@Base+0x11c2c>
   24f04:	bne	24f14 <main@@Base+0x11b58>
   24f08:	ldrb	r0, [r4, #2]!
   24f0c:	cmp	r0, #32
   24f10:	bhi	24f24 <main@@Base+0x11b68>
   24f14:	mov	r0, r5
   24f18:	mov	r2, r8
   24f1c:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   24f20:	mov	r4, r0
   24f24:	mov	ip, r6
   24f28:	cmp	r6, r4
   24f2c:	beq	250a8 <main@@Base+0x11cec>
   24f30:	ldr	r9, [sp, #16]
   24f34:	mov	r1, #2
   24f38:	ldr	r0, [r9]
   24f3c:	bl	2bc04 <flatcc_builder_start_table@@Base>
   24f40:	cmp	r0, #0
   24f44:	bne	27d6c <main@@Base+0x149b0>
   24f48:	cmp	r4, r8
   24f4c:	beq	24f84 <main@@Base+0x11bc8>
   24f50:	ldrb	r0, [r4]
   24f54:	cmp	r0, #123	; 0x7b
   24f58:	bne	24f84 <main@@Base+0x11bc8>
   24f5c:	ldr	r6, [sp, #24]
   24f60:	add	r1, r4, #1
   24f64:	sub	r0, r8, r1
   24f68:	cmp	r0, #2
   24f6c:	blt	25290 <main@@Base+0x11ed4>
   24f70:	ldrb	r0, [r1]
   24f74:	cmp	r0, #32
   24f78:	bls	25280 <main@@Base+0x11ec4>
   24f7c:	mov	r4, r1
   24f80:	b	252a0 <main@@Base+0x11ee4>
   24f84:	mov	r0, r9
   24f88:	mov	r1, r4
   24f8c:	mov	r2, r8
   24f90:	mov	r3, #21
   24f94:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   24f98:	ldr	r6, [sp, #24]
   24f9c:	mov	r4, r0
   24fa0:	ldr	r0, [r9, #24]
   24fa4:	cmp	r0, #0
   24fa8:	bne	27d6c <main@@Base+0x149b0>
   24fac:	ldr	r0, [r9]
   24fb0:	bl	2c62c <flatcc_builder_end_table@@Base>
   24fb4:	cmp	r0, #0
   24fb8:	beq	27d6c <main@@Base+0x149b0>
   24fbc:	mov	r7, r0
   24fc0:	ldr	r0, [r9]
   24fc4:	mov	r1, #1
   24fc8:	b	271f8 <main@@Base+0x13e3c>
   24fcc:	bne	24fdc <main@@Base+0x11c20>
   24fd0:	ldrb	r0, [r4, #2]!
   24fd4:	cmp	r0, #32
   24fd8:	bhi	24fec <main@@Base+0x11c30>
   24fdc:	ldr	r0, [sp, #16]
   24fe0:	mov	r2, r8
   24fe4:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   24fe8:	mov	r4, r0
   24fec:	mov	ip, r7
   24ff0:	cmp	r7, r4
   24ff4:	beq	2504c <main@@Base+0x11c90>
   24ff8:	ldr	r9, [sp, #16]
   24ffc:	mov	r1, #9
   25000:	ldr	r0, [r9]
   25004:	bl	2bc04 <flatcc_builder_start_table@@Base>
   25008:	cmp	r0, #0
   2500c:	bne	27d6c <main@@Base+0x149b0>
   25010:	cmp	r4, r8
   25014:	beq	2518c <main@@Base+0x11dd0>
   25018:	ldrb	r0, [r4]
   2501c:	cmp	r0, #123	; 0x7b
   25020:	bne	2518c <main@@Base+0x11dd0>
   25024:	ldr	r6, [sp, #24]
   25028:	add	r1, r4, #1
   2502c:	sub	r0, r8, r1
   25030:	cmp	r0, #2
   25034:	blt	25b20 <main@@Base+0x12764>
   25038:	ldrb	r0, [r1]
   2503c:	cmp	r0, #32
   25040:	bls	25b10 <main@@Base+0x12754>
   25044:	mov	r4, r1
   25048:	b	25b30 <main@@Base+0x12774>
   2504c:	movw	r0, #0
   25050:	movt	r0, #26418	; 0x6732
   25054:	add	r0, r0, #65536	; 0x10000
   25058:	eor	r0, r6, r0
   2505c:	orrs	r0, r0, r5
   25060:	bne	250a8 <main@@Base+0x11cec>
   25064:	cmp	r9, #7
   25068:	ldr	r9, [sp, #16]
   2506c:	blt	250ac <main@@Base+0x11cf0>
   25070:	ldr	r2, [sp, #20]
   25074:	mov	r1, sl
   25078:	ldrb	r0, [r1, #22]!
   2507c:	ldr	r2, [r2]
   25080:	cmp	r2, #0
   25084:	beq	251d4 <main@@Base+0x11e18>
   25088:	cmp	r0, #33	; 0x21
   2508c:	bcc	25098 <main@@Base+0x11cdc>
   25090:	cmp	r0, #58	; 0x3a
   25094:	bne	250ac <main@@Base+0x11cf0>
   25098:	ldr	r0, [sp, #20]
   2509c:	mov	r2, #0
   250a0:	str	r2, [r0]
   250a4:	b	251e0 <main@@Base+0x11e24>
   250a8:	ldr	r9, [sp, #16]
   250ac:	mov	r0, r9
   250b0:	mov	r1, ip
   250b4:	mov	r2, r8
   250b8:	bl	2f87c <flatcc_json_parser_unmatched_symbol@@Base>
   250bc:	ldr	r6, [sp, #24]
   250c0:	mov	r4, r0
   250c4:	sub	r0, r8, r4
   250c8:	cmp	r0, #2
   250cc:	blt	25100 <main@@Base+0x11d44>
   250d0:	ldrb	r0, [r4]
   250d4:	cmp	r0, #32
   250d8:	bls	250ec <main@@Base+0x11d30>
   250dc:	mov	r2, r4
   250e0:	cmp	r2, r8
   250e4:	bne	2511c <main@@Base+0x11d60>
   250e8:	b	27cf0 <main@@Base+0x14934>
   250ec:	bne	25100 <main@@Base+0x11d44>
   250f0:	mov	r2, r4
   250f4:	ldrb	r0, [r2, #1]!
   250f8:	cmp	r0, #32
   250fc:	bhi	25114 <main@@Base+0x11d58>
   25100:	mov	r0, r9
   25104:	mov	r1, r4
   25108:	mov	r2, r8
   2510c:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   25110:	mov	r2, r0
   25114:	cmp	r2, r8
   25118:	beq	27cf0 <main@@Base+0x14934>
   2511c:	ldrb	r0, [r2]
   25120:	cmp	r0, #44	; 0x2c
   25124:	bne	27cf8 <main@@Base+0x1493c>
   25128:	add	r1, r2, #1
   2512c:	sub	r0, r8, r1
   25130:	cmp	r0, #2
   25134:	blt	25164 <main@@Base+0x11da8>
   25138:	ldrb	r0, [r1]
   2513c:	cmp	r0, #32
   25140:	bls	25154 <main@@Base+0x11d98>
   25144:	mov	r2, r1
   25148:	cmp	r2, r8
   2514c:	bne	2517c <main@@Base+0x11dc0>
   25150:	b	27d24 <main@@Base+0x14968>
   25154:	bne	25164 <main@@Base+0x11da8>
   25158:	ldrb	r0, [r2, #2]!
   2515c:	cmp	r0, #32
   25160:	bhi	25174 <main@@Base+0x11db8>
   25164:	mov	r0, r9
   25168:	mov	r2, r8
   2516c:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   25170:	mov	r2, r0
   25174:	cmp	r2, r8
   25178:	beq	27d24 <main@@Base+0x14968>
   2517c:	ldrb	r0, [r2]
   25180:	cmp	r0, #125	; 0x7d
   25184:	bne	24a28 <main@@Base+0x1166c>
   25188:	b	27d00 <main@@Base+0x14944>
   2518c:	mov	r0, r9
   25190:	mov	r1, r4
   25194:	mov	r2, r8
   25198:	mov	r3, #21
   2519c:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   251a0:	ldr	r6, [sp, #24]
   251a4:	mov	r4, r0
   251a8:	ldr	r0, [r9, #24]
   251ac:	cmp	r0, #0
   251b0:	bne	27d6c <main@@Base+0x149b0>
   251b4:	ldr	r0, [r9]
   251b8:	bl	2c62c <flatcc_builder_end_table@@Base>
   251bc:	cmp	r0, #0
   251c0:	beq	27d6c <main@@Base+0x149b0>
   251c4:	mov	r7, r0
   251c8:	ldr	r0, [r9]
   251cc:	mov	r1, #0
   251d0:	b	271f8 <main@@Base+0x13e3c>
   251d4:	cmp	r0, #34	; 0x22
   251d8:	bne	250ac <main@@Base+0x11cf0>
   251dc:	add	r1, sl, #23
   251e0:	sub	r0, r8, r1
   251e4:	cmp	r0, #2
   251e8:	blt	25214 <main@@Base+0x11e58>
   251ec:	ldrb	r0, [r1]
   251f0:	cmp	r0, #32
   251f4:	bls	25200 <main@@Base+0x11e44>
   251f8:	mov	r4, r1
   251fc:	b	2522c <main@@Base+0x11e70>
   25200:	bne	25214 <main@@Base+0x11e58>
   25204:	mov	r4, r1
   25208:	ldrb	r0, [r4, #1]!
   2520c:	cmp	r0, #32
   25210:	bhi	2522c <main@@Base+0x11e70>
   25214:	mov	r0, r9
   25218:	mov	r2, r8
   2521c:	mov	r4, ip
   25220:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   25224:	mov	ip, r4
   25228:	mov	r4, r0
   2522c:	mov	r5, ip
   25230:	cmp	r4, r8
   25234:	beq	25268 <main@@Base+0x11eac>
   25238:	ldrb	r0, [r4]
   2523c:	cmp	r0, #58	; 0x3a
   25240:	bne	25268 <main@@Base+0x11eac>
   25244:	add	r1, r4, #1
   25248:	sub	r0, r8, r1
   2524c:	cmp	r0, #2
   25250:	blt	27148 <main@@Base+0x13d8c>
   25254:	ldrb	r0, [r1]
   25258:	cmp	r0, #32
   2525c:	bls	27138 <main@@Base+0x13d7c>
   25260:	mov	r4, r1
   25264:	b	27158 <main@@Base+0x13d9c>
   25268:	mov	r0, r9
   2526c:	mov	r1, r4
   25270:	mov	r2, r8
   25274:	mov	r3, #4
   25278:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   2527c:	b	27154 <main@@Base+0x13d98>
   25280:	bne	25290 <main@@Base+0x11ed4>
   25284:	ldrb	r0, [r4, #2]!
   25288:	cmp	r0, #32
   2528c:	bhi	252a0 <main@@Base+0x11ee4>
   25290:	mov	r0, r9
   25294:	mov	r2, r8
   25298:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   2529c:	mov	r4, r0
   252a0:	cmp	r4, r8
   252a4:	mov	r2, r8
   252a8:	beq	252ec <main@@Base+0x11f30>
   252ac:	ldrb	r0, [r4]
   252b0:	cmp	r0, #125	; 0x7d
   252b4:	bne	252e8 <main@@Base+0x11f2c>
   252b8:	add	r1, r4, #1
   252bc:	sub	r0, r8, r1
   252c0:	cmp	r0, #2
   252c4:	blt	27c58 <main@@Base+0x1489c>
   252c8:	ldrb	r0, [r1]
   252cc:	cmp	r0, #32
   252d0:	bhi	27238 <main@@Base+0x13e7c>
   252d4:	bne	27c58 <main@@Base+0x1489c>
   252d8:	ldrb	r0, [r4, #2]!
   252dc:	cmp	r0, #32
   252e0:	bls	27c58 <main@@Base+0x1489c>
   252e4:	b	24fa0 <main@@Base+0x11be4>
   252e8:	mov	r2, r4
   252ec:	cmp	r2, r8
   252f0:	mov	r1, r8
   252f4:	beq	2534c <main@@Base+0x11f90>
   252f8:	ldrb	r0, [r2]
   252fc:	cmp	r0, #46	; 0x2e
   25300:	beq	25320 <main@@Base+0x11f64>
   25304:	cmp	r0, #34	; 0x22
   25308:	bne	2533c <main@@Base+0x11f80>
   2530c:	ldr	r0, [sp, #20]
   25310:	mov	r1, #0
   25314:	str	r1, [r0]
   25318:	add	r1, r2, #1
   2531c:	b	2534c <main@@Base+0x11f90>
   25320:	mov	r1, r2
   25324:	mov	r0, r9
   25328:	mov	r2, r8
   2532c:	mov	r3, #5
   25330:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   25334:	mov	r1, r0
   25338:	b	2534c <main@@Base+0x11f90>
   2533c:	ldr	r0, [sp, #20]
   25340:	mov	r1, #1
   25344:	str	r1, [r0]
   25348:	mov	r1, r2
   2534c:	sub	r0, r8, r1
   25350:	mov	r2, #8
   25354:	cmp	r0, #8
   25358:	movcs	r0, r2
   2535c:	sub	r2, r0, #1
   25360:	cmp	r2, #7
   25364:	bhi	25550 <main@@Base+0x12194>
   25368:	add	r5, pc, #36	; 0x24
   2536c:	mov	r9, #0
   25370:	mov	ip, #0
   25374:	mov	lr, #0
   25378:	mov	sl, #0
   2537c:	mov	r3, #0
   25380:	mov	r7, #0
   25384:	mov	r4, #0
   25388:	ldr	r0, [r5, r2, lsl #2]
   2538c:	mov	r2, #0
   25390:	add	pc, r5, r0
   25394:	andeq	r0, r0, r4, rrx
   25398:	andeq	r0, r0, ip, asr r0
   2539c:	andeq	r0, r0, r4, asr r0
   253a0:	andeq	r0, r0, ip, asr #32
   253a4:	andeq	r0, r0, r0, asr #32
   253a8:	andeq	r0, r0, r4, lsr r0
   253ac:	andeq	r0, r0, r4, lsr #32
   253b0:	andeq	r0, r0, r0, lsr #32
   253b4:	ldrb	ip, [r1, #7]
   253b8:	ldrb	r0, [r1, #6]
   253bc:	mov	lr, r9
   253c0:	orr	r0, ip, r0, lsl #8
   253c4:	mov	r9, r0
   253c8:	ldrb	r0, [r1, #5]
   253cc:	mov	sl, lr
   253d0:	orr	r9, r9, r0, lsl #16
   253d4:	ldrb	r0, [r1, #4]
   253d8:	mov	r3, sl
   253dc:	orr	r9, r9, r0, lsl #24
   253e0:	ldrb	r0, [r1, #3]
   253e4:	orr	r7, r0, r3
   253e8:	ldrb	r0, [r1, #2]
   253ec:	orr	r4, r7, r0, lsl #8
   253f0:	ldrb	r0, [r1, #1]
   253f4:	orr	r2, r4, r0, lsl #16
   253f8:	ldrb	r3, [r1]
   253fc:	movw	r0, #25186	; 0x6262
   25400:	movt	r0, #24418	; 0x5f62
   25404:	eor	r0, r9, r0
   25408:	ldr	r9, [sp, #16]
   2540c:	orr	r2, r2, r3, lsl #24
   25410:	movw	r3, #24929	; 0x6161
   25414:	movt	r3, #24929	; 0x6161
   25418:	eor	r2, r2, r3
   2541c:	orrs	r0, r0, r2
   25420:	bne	25550 <main@@Base+0x12194>
   25424:	add	r4, r1, #8
   25428:	mov	r0, #8
   2542c:	sub	lr, r8, r4
   25430:	cmp	lr, #8
   25434:	movcc	r0, lr
   25438:	sub	r0, r0, #1
   2543c:	cmp	r0, #7
   25440:	bhi	2595c <main@@Base+0x125a0>
   25444:	str	r4, [sp, #4]
   25448:	add	r4, pc, #36	; 0x24
   2544c:	mov	r2, #0
   25450:	mov	ip, #0
   25454:	mov	sl, #0
   25458:	mov	r6, #0
   2545c:	mov	r7, #0
   25460:	mov	r5, #0
   25464:	mov	r3, #0
   25468:	ldr	r9, [r4, r0, lsl #2]
   2546c:	mov	r0, #0
   25470:	add	pc, r4, r9
   25474:	andeq	r0, r0, r4, rrx
   25478:	andeq	r0, r0, ip, asr r0
   2547c:	andeq	r0, r0, r4, asr r0
   25480:	andeq	r0, r0, ip, asr #32
   25484:	andeq	r0, r0, r0, asr #32
   25488:	andeq	r0, r0, r4, lsr r0
   2548c:	andeq	r0, r0, r4, lsr #32
   25490:	andeq	r0, r0, r0, lsr #32
   25494:	ldrb	ip, [r1, #15]
   25498:	ldrb	r0, [r1, #14]
   2549c:	mov	sl, r2
   254a0:	orr	r0, ip, r0, lsl #8
   254a4:	mov	r2, r0
   254a8:	ldrb	r0, [r1, #13]
   254ac:	mov	r6, sl
   254b0:	orr	r2, r2, r0, lsl #16
   254b4:	ldrb	r0, [r1, #12]
   254b8:	mov	r7, r6
   254bc:	orr	r2, r2, r0, lsl #24
   254c0:	ldrb	r0, [r1, #11]
   254c4:	orr	r5, r0, r7
   254c8:	ldrb	r0, [r1, #10]
   254cc:	orr	r3, r5, r0, lsl #8
   254d0:	ldrb	r0, [r1, #9]
   254d4:	orr	r0, r3, r0, lsl #16
   254d8:	ldr	r4, [sp, #4]
   254dc:	movw	r7, #29440	; 0x7300
   254e0:	bic	r3, r2, #255	; 0xff
   254e4:	movt	r7, #25968	; 0x6570
   254e8:	eor	r3, r3, r7
   254ec:	ldrb	r7, [r4]
   254f0:	orr	r0, r0, r7, lsl #24
   254f4:	movw	r7, #29556	; 0x7374
   254f8:	movt	r7, #25183	; 0x625f
   254fc:	eor	r0, r0, r7
   25500:	orrs	r3, r3, r0
   25504:	bne	25558 <main@@Base+0x1219c>
   25508:	ldr	r9, [sp, #16]
   2550c:	ldr	r6, [sp, #24]
   25510:	cmp	lr, #8
   25514:	blt	2595c <main@@Base+0x125a0>
   25518:	ldr	r3, [sp, #20]
   2551c:	mov	r2, r1
   25520:	ldrb	r0, [r2, #15]!
   25524:	ldr	r3, [r3]
   25528:	cmp	r3, #0
   2552c:	beq	255b4 <main@@Base+0x121f8>
   25530:	cmp	r0, #33	; 0x21
   25534:	bcc	25540 <main@@Base+0x12184>
   25538:	cmp	r0, #58	; 0x3a
   2553c:	bne	2595c <main@@Base+0x125a0>
   25540:	ldr	r0, [sp, #20]
   25544:	mov	r1, #0
   25548:	str	r1, [r0]
   2554c:	b	255c0 <main@@Base+0x12204>
   25550:	mov	r0, r9
   25554:	b	25964 <main@@Base+0x125a8>
   25558:	movw	r3, #29791	; 0x745f
   2555c:	ldr	r9, [sp, #16]
   25560:	ldr	r6, [sp, #24]
   25564:	movt	r3, #24946	; 0x6172
   25568:	eor	r2, r2, r3
   2556c:	orrs	r0, r2, r0
   25570:	bne	2595c <main@@Base+0x125a0>
   25574:	cmp	lr, #9
   25578:	blt	2595c <main@@Base+0x125a0>
   2557c:	ldr	r3, [sp, #20]
   25580:	mov	r2, r1
   25584:	ldrb	r0, [r2, #16]!
   25588:	ldr	r3, [r3]
   2558c:	cmp	r3, #0
   25590:	beq	255e8 <main@@Base+0x1222c>
   25594:	cmp	r0, #33	; 0x21
   25598:	bcc	255a4 <main@@Base+0x121e8>
   2559c:	cmp	r0, #58	; 0x3a
   255a0:	bne	2595c <main@@Base+0x125a0>
   255a4:	ldr	r0, [sp, #20]
   255a8:	mov	r1, #0
   255ac:	str	r1, [r0]
   255b0:	b	255f4 <main@@Base+0x12238>
   255b4:	cmp	r0, #34	; 0x22
   255b8:	bne	2595c <main@@Base+0x125a0>
   255bc:	add	r2, r1, #16
   255c0:	sub	r0, r8, r2
   255c4:	cmp	r0, #2
   255c8:	blt	25630 <main@@Base+0x12274>
   255cc:	ldrb	r0, [r2]
   255d0:	cmp	r0, #32
   255d4:	bls	2561c <main@@Base+0x12260>
   255d8:	mov	r7, r2
   255dc:	cmp	r7, r8
   255e0:	bne	2564c <main@@Base+0x12290>
   255e4:	b	25684 <main@@Base+0x122c8>
   255e8:	cmp	r0, #34	; 0x22
   255ec:	bne	2595c <main@@Base+0x125a0>
   255f0:	add	r2, r1, #17
   255f4:	sub	r0, r8, r2
   255f8:	cmp	r0, #2
   255fc:	blt	256b0 <main@@Base+0x122f4>
   25600:	ldrb	r0, [r2]
   25604:	cmp	r0, #32
   25608:	bls	2569c <main@@Base+0x122e0>
   2560c:	mov	r7, r2
   25610:	cmp	r7, r8
   25614:	bne	256cc <main@@Base+0x12310>
   25618:	b	25710 <main@@Base+0x12354>
   2561c:	bne	25630 <main@@Base+0x12274>
   25620:	mov	r7, r2
   25624:	ldrb	r0, [r7, #1]!
   25628:	cmp	r0, #32
   2562c:	bhi	25644 <main@@Base+0x12288>
   25630:	mov	r1, r2
   25634:	mov	r0, r9
   25638:	mov	r2, r8
   2563c:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   25640:	mov	r7, r0
   25644:	cmp	r7, r8
   25648:	beq	25684 <main@@Base+0x122c8>
   2564c:	ldrb	r0, [r7]
   25650:	cmp	r0, #58	; 0x3a
   25654:	bne	25684 <main@@Base+0x122c8>
   25658:	add	r1, r7, #1
   2565c:	sub	r0, r8, r1
   25660:	cmp	r0, #2
   25664:	blt	25738 <main@@Base+0x1237c>
   25668:	ldrb	r0, [r1]
   2566c:	cmp	r0, #32
   25670:	bls	25728 <main@@Base+0x1236c>
   25674:	mov	r7, r1
   25678:	cmp	r4, r7
   2567c:	bne	25750 <main@@Base+0x12394>
   25680:	b	2595c <main@@Base+0x125a0>
   25684:	mov	r0, r9
   25688:	mov	r1, r7
   2568c:	mov	r2, r8
   25690:	mov	r3, #4
   25694:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   25698:	b	25744 <main@@Base+0x12388>
   2569c:	bne	256b0 <main@@Base+0x122f4>
   256a0:	mov	r7, r2
   256a4:	ldrb	r0, [r7, #1]!
   256a8:	cmp	r0, #32
   256ac:	bhi	256c4 <main@@Base+0x12308>
   256b0:	mov	r1, r2
   256b4:	mov	r0, r9
   256b8:	mov	r2, r8
   256bc:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   256c0:	mov	r7, r0
   256c4:	cmp	r7, r8
   256c8:	beq	25710 <main@@Base+0x12354>
   256cc:	ldrb	r0, [r7]
   256d0:	cmp	r0, #58	; 0x3a
   256d4:	bne	25710 <main@@Base+0x12354>
   256d8:	add	r1, r7, #1
   256dc:	sub	r0, r8, r1
   256e0:	cmp	r0, #2
   256e4:	blt	258d0 <main@@Base+0x12514>
   256e8:	ldrb	r0, [r1]
   256ec:	cmp	r0, #32
   256f0:	bls	258b4 <main@@Base+0x124f8>
   256f4:	ldr	r9, [sp, #16]
   256f8:	ldr	r6, [sp, #24]
   256fc:	ldr	r4, [sp, #4]
   25700:	mov	r7, r1
   25704:	cmp	r4, r7
   25708:	bne	258e8 <main@@Base+0x1252c>
   2570c:	b	2595c <main@@Base+0x125a0>
   25710:	mov	r0, r9
   25714:	mov	r1, r7
   25718:	mov	r2, r8
   2571c:	mov	r3, #4
   25720:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   25724:	b	258dc <main@@Base+0x12520>
   25728:	bne	25738 <main@@Base+0x1237c>
   2572c:	ldrb	r0, [r7, #2]!
   25730:	cmp	r0, #32
   25734:	bhi	25748 <main@@Base+0x1238c>
   25738:	mov	r0, r9
   2573c:	mov	r2, r8
   25740:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   25744:	mov	r7, r0
   25748:	cmp	r4, r7
   2574c:	beq	2595c <main@@Base+0x125a0>
   25750:	mov	r5, #0
   25754:	cmp	r7, r8
   25758:	str	r5, [fp, #-36]	; 0xffffffdc
   2575c:	str	r5, [fp, #-40]	; 0xffffffd8
   25760:	str	r5, [sp, #36]	; 0x24
   25764:	str	r5, [sp, #32]
   25768:	str	r5, [sp, #44]	; 0x2c
   2576c:	beq	257cc <main@@Base+0x12410>
   25770:	sub	r0, fp, #40	; 0x28
   25774:	mov	r1, r7
   25778:	mov	r2, r8
   2577c:	add	r3, sp, #44	; 0x2c
   25780:	str	r0, [sp]
   25784:	mov	r0, r9
   25788:	bl	3132c <flatcc_json_parser_integer@@Base>
   2578c:	cmp	r0, r7
   25790:	beq	257e0 <main@@Base+0x12424>
   25794:	mov	r4, r0
   25798:	ldr	r0, [sp, #44]	; 0x2c
   2579c:	ldr	r5, [fp, #-40]	; 0xffffffd8
   257a0:	ldr	sl, [fp, #-36]	; 0xffffffdc
   257a4:	cmp	r0, #0
   257a8:	beq	257f8 <main@@Base+0x1243c>
   257ac:	subs	r0, r5, #1
   257b0:	sbcs	r0, sl, #-2147483648	; 0x80000000
   257b4:	bcc	2582c <main@@Base+0x12470>
   257b8:	mov	r0, r9
   257bc:	mov	r1, r4
   257c0:	mov	r2, r8
   257c4:	mov	r3, #8
   257c8:	b	25810 <main@@Base+0x12454>
   257cc:	mov	sl, #0
   257d0:	mov	r4, r8
   257d4:	cmp	r7, r4
   257d8:	bne	2587c <main@@Base+0x124c0>
   257dc:	b	25844 <main@@Base+0x12488>
   257e0:	mov	r5, #0
   257e4:	mov	sl, #0
   257e8:	mov	r4, r7
   257ec:	cmp	r7, r4
   257f0:	bne	2587c <main@@Base+0x124c0>
   257f4:	b	25844 <main@@Base+0x12488>
   257f8:	cmn	sl, #1
   257fc:	bgt	25834 <main@@Base+0x12478>
   25800:	mov	r0, r9
   25804:	mov	r1, r4
   25808:	mov	r2, r8
   2580c:	mov	r3, #7
   25810:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   25814:	mov	r4, r0
   25818:	mov	r5, #0
   2581c:	mov	sl, #0
   25820:	cmp	r7, r4
   25824:	bne	2587c <main@@Base+0x124c0>
   25828:	b	25844 <main@@Base+0x12488>
   2582c:	rsbs	r5, r5, #0
   25830:	rsc	sl, sl, #0
   25834:	str	r5, [sp, #32]
   25838:	str	sl, [sp, #36]	; 0x24
   2583c:	cmp	r7, r4
   25840:	bne	2587c <main@@Base+0x124c0>
   25844:	add	r0, sp, #32
   25848:	mov	r1, r7
   2584c:	mov	r2, r8
   25850:	str	r0, [sp]
   25854:	mov	r0, r9
   25858:	ldr	r3, [pc, #4084]	; 26854 <main@@Base+0x13498>
   2585c:	add	r3, pc, r3
   25860:	bl	235b8 <main@@Base+0x101fc>
   25864:	mov	r4, r0
   25868:	cmp	r0, r7
   2586c:	cmpne	r4, r8
   25870:	beq	27d68 <main@@Base+0x149ac>
   25874:	ldr	r5, [sp, #32]
   25878:	ldr	sl, [sp, #36]	; 0x24
   2587c:	orrs	r0, r5, sl
   25880:	bne	25890 <main@@Base+0x124d4>
   25884:	ldrb	r0, [r9, #8]
   25888:	tst	r0, #2
   2588c:	beq	25970 <main@@Base+0x125b4>
   25890:	ldr	r0, [r9]
   25894:	mov	r1, #0
   25898:	mov	r2, #8
   2589c:	mov	r3, #8
   258a0:	bl	2d0a0 <flatcc_builder_table_add@@Base>
   258a4:	cmp	r0, #0
   258a8:	beq	27d68 <main@@Base+0x149ac>
   258ac:	stm	r0, {r5, sl}
   258b0:	b	25970 <main@@Base+0x125b4>
   258b4:	ldr	r9, [sp, #16]
   258b8:	ldr	r6, [sp, #24]
   258bc:	ldr	r4, [sp, #4]
   258c0:	bne	258d0 <main@@Base+0x12514>
   258c4:	ldrb	r0, [r7, #2]!
   258c8:	cmp	r0, #32
   258cc:	bhi	258e0 <main@@Base+0x12524>
   258d0:	mov	r0, r9
   258d4:	mov	r2, r8
   258d8:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   258dc:	mov	r7, r0
   258e0:	cmp	r4, r7
   258e4:	beq	2595c <main@@Base+0x125a0>
   258e8:	mov	r5, #0
   258ec:	cmp	r7, r8
   258f0:	str	r5, [fp, #-36]	; 0xffffffdc
   258f4:	str	r5, [fp, #-40]	; 0xffffffd8
   258f8:	str	r5, [sp, #44]	; 0x2c
   258fc:	str	r5, [sp, #32]
   25900:	beq	25a38 <main@@Base+0x1267c>
   25904:	sub	r0, fp, #40	; 0x28
   25908:	mov	r1, r7
   2590c:	mov	r2, r8
   25910:	add	r3, sp, #32
   25914:	str	r0, [sp]
   25918:	mov	r0, r9
   2591c:	bl	3132c <flatcc_json_parser_integer@@Base>
   25920:	cmp	r0, r7
   25924:	beq	25a48 <main@@Base+0x1268c>
   25928:	mov	r4, r0
   2592c:	ldr	r0, [sp, #32]
   25930:	cmp	r0, #0
   25934:	beq	25a58 <main@@Base+0x1269c>
   25938:	mov	r0, r9
   2593c:	mov	r1, r4
   25940:	mov	r2, r8
   25944:	mov	r3, #8
   25948:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   2594c:	mov	r4, r0
   25950:	cmp	r7, r4
   25954:	bne	25ad8 <main@@Base+0x1271c>
   25958:	b	25a9c <main@@Base+0x126e0>
   2595c:	mov	r0, r9
   25960:	mov	r1, r4
   25964:	mov	r2, r8
   25968:	bl	2f87c <flatcc_json_parser_unmatched_symbol@@Base>
   2596c:	mov	r4, r0
   25970:	sub	r0, r8, r4
   25974:	cmp	r0, #2
   25978:	blt	259ac <main@@Base+0x125f0>
   2597c:	ldrb	r0, [r4]
   25980:	cmp	r0, #32
   25984:	bls	25998 <main@@Base+0x125dc>
   25988:	mov	r2, r4
   2598c:	cmp	r2, r8
   25990:	bne	259c8 <main@@Base+0x1260c>
   25994:	b	2720c <main@@Base+0x13e50>
   25998:	bne	259ac <main@@Base+0x125f0>
   2599c:	mov	r2, r4
   259a0:	ldrb	r0, [r2, #1]!
   259a4:	cmp	r0, #32
   259a8:	bhi	259c0 <main@@Base+0x12604>
   259ac:	mov	r0, r9
   259b0:	mov	r1, r4
   259b4:	mov	r2, r8
   259b8:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   259bc:	mov	r2, r0
   259c0:	cmp	r2, r8
   259c4:	beq	2720c <main@@Base+0x13e50>
   259c8:	ldrb	r0, [r2]
   259cc:	cmp	r0, #44	; 0x2c
   259d0:	bne	27214 <main@@Base+0x13e58>
   259d4:	add	r1, r2, #1
   259d8:	sub	r0, r8, r1
   259dc:	cmp	r0, #2
   259e0:	blt	25a10 <main@@Base+0x12654>
   259e4:	ldrb	r0, [r1]
   259e8:	cmp	r0, #32
   259ec:	bls	25a00 <main@@Base+0x12644>
   259f0:	mov	r2, r1
   259f4:	cmp	r2, r8
   259f8:	bne	25a28 <main@@Base+0x1266c>
   259fc:	b	27240 <main@@Base+0x13e84>
   25a00:	bne	25a10 <main@@Base+0x12654>
   25a04:	ldrb	r0, [r2, #2]!
   25a08:	cmp	r0, #32
   25a0c:	bhi	25a20 <main@@Base+0x12664>
   25a10:	mov	r0, r9
   25a14:	mov	r2, r8
   25a18:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   25a1c:	mov	r2, r0
   25a20:	cmp	r2, r8
   25a24:	beq	27240 <main@@Base+0x13e84>
   25a28:	ldrb	r0, [r2]
   25a2c:	cmp	r0, #125	; 0x7d
   25a30:	bne	252ec <main@@Base+0x11f30>
   25a34:	b	2721c <main@@Base+0x13e60>
   25a38:	mov	r4, r8
   25a3c:	cmp	r7, r4
   25a40:	bne	25ad8 <main@@Base+0x1271c>
   25a44:	b	25a9c <main@@Base+0x126e0>
   25a48:	mov	r4, r7
   25a4c:	cmp	r7, r4
   25a50:	bne	25ad8 <main@@Base+0x1271c>
   25a54:	b	25a9c <main@@Base+0x126e0>
   25a58:	ldr	r0, [fp, #-36]	; 0xffffffdc
   25a5c:	cmp	r0, #0
   25a60:	beq	25a84 <main@@Base+0x126c8>
   25a64:	ldr	r9, [sp, #16]
   25a68:	mov	r1, r4
   25a6c:	mov	r2, r8
   25a70:	mov	r3, #7
   25a74:	mov	r0, r9
   25a78:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   25a7c:	mov	r4, r0
   25a80:	b	25a90 <main@@Base+0x126d4>
   25a84:	ldr	r5, [fp, #-40]	; 0xffffffd8
   25a88:	ldr	r9, [sp, #16]
   25a8c:	str	r5, [sp, #44]	; 0x2c
   25a90:	ldr	r6, [sp, #24]
   25a94:	cmp	r7, r4
   25a98:	bne	25ad8 <main@@Base+0x1271c>
   25a9c:	add	r0, sp, #44	; 0x2c
   25aa0:	mov	r1, r7
   25aa4:	mov	r2, r8
   25aa8:	str	r0, [sp]
   25aac:	mov	r0, r9
   25ab0:	ldr	r3, [pc, #4084]	; 26aac <main@@Base+0x136f0>
   25ab4:	add	r3, pc, r3
   25ab8:	bl	23814 <main@@Base+0x10458>
   25abc:	mov	r4, r0
   25ac0:	cmp	r0, r7
   25ac4:	cmpne	r4, r8
   25ac8:	beq	27d68 <main@@Base+0x149ac>
   25acc:	ldr	r5, [sp, #44]	; 0x2c
   25ad0:	ldr	r9, [sp, #16]
   25ad4:	ldr	r6, [sp, #24]
   25ad8:	cmp	r5, #0
   25adc:	bne	25aec <main@@Base+0x12730>
   25ae0:	ldrb	r0, [r9, #8]
   25ae4:	tst	r0, #2
   25ae8:	beq	25970 <main@@Base+0x125b4>
   25aec:	ldr	r0, [r9]
   25af0:	mov	r1, #1
   25af4:	mov	r2, #4
   25af8:	mov	r3, #4
   25afc:	bl	2d0a0 <flatcc_builder_table_add@@Base>
   25b00:	cmp	r0, #0
   25b04:	beq	27d68 <main@@Base+0x149ac>
   25b08:	str	r5, [r0]
   25b0c:	b	25970 <main@@Base+0x125b4>
   25b10:	bne	25b20 <main@@Base+0x12764>
   25b14:	ldrb	r0, [r4, #2]!
   25b18:	cmp	r0, #32
   25b1c:	bhi	25b30 <main@@Base+0x12774>
   25b20:	mov	r0, r9
   25b24:	mov	r2, r8
   25b28:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   25b2c:	mov	r4, r0
   25b30:	cmp	r4, r8
   25b34:	mov	r2, r8
   25b38:	beq	25b7c <main@@Base+0x127c0>
   25b3c:	ldrb	r0, [r4]
   25b40:	cmp	r0, #125	; 0x7d
   25b44:	bne	25b78 <main@@Base+0x127bc>
   25b48:	add	r1, r4, #1
   25b4c:	sub	r0, r8, r1
   25b50:	cmp	r0, #2
   25b54:	blt	27c94 <main@@Base+0x148d8>
   25b58:	ldrb	r0, [r1]
   25b5c:	cmp	r0, #32
   25b60:	bhi	27278 <main@@Base+0x13ebc>
   25b64:	bne	27c94 <main@@Base+0x148d8>
   25b68:	ldrb	r0, [r4, #2]!
   25b6c:	cmp	r0, #32
   25b70:	bhi	251a8 <main@@Base+0x11dec>
   25b74:	b	27c94 <main@@Base+0x148d8>
   25b78:	mov	r2, r4
   25b7c:	cmp	r2, r8
   25b80:	mov	sl, r8
   25b84:	beq	25bd8 <main@@Base+0x1281c>
   25b88:	ldrb	r0, [r2]
   25b8c:	cmp	r0, #46	; 0x2e
   25b90:	beq	25bac <main@@Base+0x127f0>
   25b94:	cmp	r0, #34	; 0x22
   25b98:	bne	25bc8 <main@@Base+0x1280c>
   25b9c:	ldr	r0, [sp, #20]
   25ba0:	mov	r1, #0
   25ba4:	add	sl, r2, #1
   25ba8:	b	25bd4 <main@@Base+0x12818>
   25bac:	mov	r1, r2
   25bb0:	mov	r0, r9
   25bb4:	mov	r2, r8
   25bb8:	mov	r3, #5
   25bbc:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   25bc0:	mov	sl, r0
   25bc4:	b	25bd8 <main@@Base+0x1281c>
   25bc8:	ldr	r0, [sp, #20]
   25bcc:	mov	r1, #1
   25bd0:	mov	sl, r2
   25bd4:	str	r1, [r0]
   25bd8:	sub	r9, r8, sl
   25bdc:	mov	r0, #8
   25be0:	cmp	r9, #8
   25be4:	movcc	r0, r9
   25be8:	sub	r1, r0, #1
   25bec:	cmp	r1, #7
   25bf0:	bhi	26254 <main@@Base+0x12e98>
   25bf4:	add	r6, pc, #36	; 0x24
   25bf8:	mov	r0, #0
   25bfc:	mov	ip, #0
   25c00:	mov	lr, #0
   25c04:	mov	r2, #0
   25c08:	mov	r3, #0
   25c0c:	mov	r7, #0
   25c10:	mov	r5, #0
   25c14:	mov	r4, #0
   25c18:	ldr	r1, [r6, r1, lsl #2]
   25c1c:	add	pc, r6, r1
   25c20:	andeq	r0, r0, r4, rrx
   25c24:	andeq	r0, r0, ip, asr r0
   25c28:	andeq	r0, r0, r4, asr r0
   25c2c:	andeq	r0, r0, ip, asr #32
   25c30:	andeq	r0, r0, r0, asr #32
   25c34:	andeq	r0, r0, r4, lsr r0
   25c38:	andeq	r0, r0, r4, lsr #32
   25c3c:	andeq	r0, r0, r0, lsr #32
   25c40:	ldrb	ip, [sl, #7]
   25c44:	ldrb	r1, [sl, #6]
   25c48:	mov	lr, r0
   25c4c:	orr	r1, ip, r1, lsl #8
   25c50:	mov	r0, r1
   25c54:	ldrb	r1, [sl, #5]
   25c58:	mov	r2, lr
   25c5c:	orr	r0, r0, r1, lsl #16
   25c60:	ldrb	r1, [sl, #4]
   25c64:	mov	r3, r2
   25c68:	orr	r0, r0, r1, lsl #24
   25c6c:	ldrb	r1, [sl, #3]
   25c70:	orr	r7, r1, r3
   25c74:	ldrb	r1, [sl, #2]
   25c78:	orr	r5, r7, r1, lsl #8
   25c7c:	ldrb	r1, [sl, #1]
   25c80:	orr	r4, r5, r1, lsl #16
   25c84:	ldrb	r1, [sl]
   25c88:	orr	r7, r4, r1, lsl #24
   25c8c:	movw	r1, #25442	; 0x6362
   25c90:	movt	r1, #25443	; 0x6363
   25c94:	cmp	r7, r1
   25c98:	bhi	25d28 <main@@Base+0x1296c>
   25c9c:	movw	r1, #13108	; 0x3334
   25ca0:	movt	r1, #12594	; 0x3132
   25ca4:	eor	r5, r0, r1
   25ca8:	movw	r1, #24929	; 0x6161
   25cac:	movt	r1, #24929	; 0x6161
   25cb0:	eor	r0, r7, r1
   25cb4:	orrs	r0, r5, r0
   25cb8:	bne	25d90 <main@@Base+0x129d4>
   25cbc:	add	r7, sl, #8
   25cc0:	mov	r1, #8
   25cc4:	sub	r0, r8, r7
   25cc8:	cmp	r0, #8
   25ccc:	movcc	r1, r0
   25cd0:	sub	r1, r1, #1
   25cd4:	cmp	r1, #7
   25cd8:	bhi	26f7c <main@@Base+0x13bc0>
   25cdc:	ldrb	r1, [r7]
   25ce0:	cmp	r1, #53	; 0x35
   25ce4:	bne	26f7c <main@@Base+0x13bc0>
   25ce8:	cmp	r0, #2
   25cec:	blt	26f7c <main@@Base+0x13bc0>
   25cf0:	ldr	r2, [sp, #20]
   25cf4:	mov	r1, sl
   25cf8:	ldrb	r0, [r1, #9]!
   25cfc:	ldr	r2, [r2]
   25d00:	cmp	r2, #0
   25d04:	beq	25fc4 <main@@Base+0x12c08>
   25d08:	cmp	r0, #33	; 0x21
   25d0c:	bcc	25d18 <main@@Base+0x1295c>
   25d10:	cmp	r0, #58	; 0x3a
   25d14:	bne	26f7c <main@@Base+0x13bc0>
   25d18:	ldr	r0, [sp, #20]
   25d1c:	mov	r2, #0
   25d20:	str	r2, [r0]
   25d24:	b	25fd0 <main@@Base+0x12c14>
   25d28:	movw	r1, #13108	; 0x3334
   25d2c:	movt	r1, #12594	; 0x3132
   25d30:	eor	r5, r0, r1
   25d34:	ldr	r0, [sp, #12]
   25d38:	eor	r0, r7, r0
   25d3c:	orrs	r0, r5, r0
   25d40:	bne	25de0 <main@@Base+0x12a24>
   25d44:	cmp	r9, #9
   25d48:	ldr	r9, [sp, #16]
   25d4c:	mov	r7, sl
   25d50:	blt	26438 <main@@Base+0x1307c>
   25d54:	ldr	r2, [sp, #20]
   25d58:	mov	r1, sl
   25d5c:	ldrb	r0, [r1, #8]!
   25d60:	ldr	r2, [r2]
   25d64:	cmp	r2, #0
   25d68:	beq	25e38 <main@@Base+0x12a7c>
   25d6c:	cmp	r0, #33	; 0x21
   25d70:	bcc	25d80 <main@@Base+0x129c4>
   25d74:	cmp	r0, #58	; 0x3a
   25d78:	mov	r7, sl
   25d7c:	bne	26438 <main@@Base+0x1307c>
   25d80:	ldr	r0, [sp, #20]
   25d84:	mov	r2, #0
   25d88:	str	r2, [r0]
   25d8c:	b	25e48 <main@@Base+0x12a8c>
   25d90:	teq	r7, r1
   25d94:	bne	2605c <main@@Base+0x12ca0>
   25d98:	cmp	r9, #5
   25d9c:	mov	r1, sl
   25da0:	blt	266fc <main@@Base+0x13340>
   25da4:	ldr	r1, [sp, #20]
   25da8:	mov	r2, sl
   25dac:	ldrb	r0, [r2, #4]!
   25db0:	ldr	r1, [r1]
   25db4:	cmp	r1, #0
   25db8:	beq	25e70 <main@@Base+0x12ab4>
   25dbc:	cmp	r0, #33	; 0x21
   25dc0:	bcc	25dd0 <main@@Base+0x12a14>
   25dc4:	cmp	r0, #58	; 0x3a
   25dc8:	mov	r1, sl
   25dcc:	bne	266fc <main@@Base+0x13340>
   25dd0:	ldr	r0, [sp, #20]
   25dd4:	mov	r1, #0
   25dd8:	str	r1, [r0]
   25ddc:	b	25e80 <main@@Base+0x12ac4>
   25de0:	movw	r0, #25443	; 0x6363
   25de4:	movt	r0, #25443	; 0x6363
   25de8:	teq	r7, r0
   25dec:	bne	261f8 <main@@Base+0x12e3c>
   25df0:	cmp	r9, #5
   25df4:	mov	r1, sl
   25df8:	blt	26758 <main@@Base+0x1339c>
   25dfc:	ldr	r1, [sp, #20]
   25e00:	mov	r2, sl
   25e04:	ldrb	r0, [r2, #4]!
   25e08:	ldr	r1, [r1]
   25e0c:	cmp	r1, #0
   25e10:	beq	25ea8 <main@@Base+0x12aec>
   25e14:	cmp	r0, #33	; 0x21
   25e18:	bcc	25e28 <main@@Base+0x12a6c>
   25e1c:	cmp	r0, #58	; 0x3a
   25e20:	mov	r1, sl
   25e24:	bne	26758 <main@@Base+0x1339c>
   25e28:	ldr	r0, [sp, #20]
   25e2c:	mov	r1, #0
   25e30:	str	r1, [r0]
   25e34:	b	25eb8 <main@@Base+0x12afc>
   25e38:	cmp	r0, #34	; 0x22
   25e3c:	mov	r7, sl
   25e40:	bne	26438 <main@@Base+0x1307c>
   25e44:	add	r1, sl, #9
   25e48:	sub	r0, r8, r1
   25e4c:	cmp	r0, #2
   25e50:	blt	25ef4 <main@@Base+0x12b38>
   25e54:	ldrb	r0, [r1]
   25e58:	cmp	r0, #32
   25e5c:	bls	25ee0 <main@@Base+0x12b24>
   25e60:	mov	r7, r1
   25e64:	cmp	r7, r8
   25e68:	bne	25f0c <main@@Base+0x12b50>
   25e6c:	b	25fac <main@@Base+0x12bf0>
   25e70:	cmp	r0, #34	; 0x22
   25e74:	mov	r1, sl
   25e78:	bne	266fc <main@@Base+0x13340>
   25e7c:	add	r2, sl, #5
   25e80:	sub	r0, r8, r2
   25e84:	cmp	r0, #2
   25e88:	blt	2600c <main@@Base+0x12c50>
   25e8c:	ldrb	r0, [r2]
   25e90:	cmp	r0, #32
   25e94:	bls	25ff8 <main@@Base+0x12c3c>
   25e98:	mov	r1, r2
   25e9c:	cmp	r1, r8
   25ea0:	bne	26028 <main@@Base+0x12c6c>
   25ea4:	b	26110 <main@@Base+0x12d54>
   25ea8:	cmp	r0, #34	; 0x22
   25eac:	mov	r1, sl
   25eb0:	bne	26758 <main@@Base+0x1339c>
   25eb4:	add	r2, sl, #5
   25eb8:	sub	r0, r8, r2
   25ebc:	cmp	r0, #2
   25ec0:	blt	261a8 <main@@Base+0x12dec>
   25ec4:	ldrb	r0, [r2]
   25ec8:	cmp	r0, #32
   25ecc:	bls	26194 <main@@Base+0x12dd8>
   25ed0:	mov	r1, r2
   25ed4:	cmp	r1, r8
   25ed8:	bne	261c4 <main@@Base+0x12e08>
   25edc:	b	26264 <main@@Base+0x12ea8>
   25ee0:	bne	25ef4 <main@@Base+0x12b38>
   25ee4:	mov	r7, r1
   25ee8:	ldrb	r0, [r7, #1]!
   25eec:	cmp	r0, #32
   25ef0:	bhi	25f04 <main@@Base+0x12b48>
   25ef4:	mov	r0, r9
   25ef8:	mov	r2, r8
   25efc:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   25f00:	mov	r7, r0
   25f04:	cmp	r7, r8
   25f08:	beq	25fac <main@@Base+0x12bf0>
   25f0c:	ldrb	r0, [r7]
   25f10:	cmp	r0, #58	; 0x3a
   25f14:	bne	25fac <main@@Base+0x12bf0>
   25f18:	add	r1, r7, #1
   25f1c:	sub	r0, r8, r1
   25f20:	cmp	r0, #2
   25f24:	blt	26428 <main@@Base+0x1306c>
   25f28:	ldrb	r0, [r1]
   25f2c:	cmp	r0, #32
   25f30:	bls	26418 <main@@Base+0x1305c>
   25f34:	mov	r7, r1
   25f38:	cmp	sl, r7
   25f3c:	bne	26440 <main@@Base+0x13084>
   25f40:	add	r7, sl, #8
   25f44:	mov	r1, #8
   25f48:	sub	r0, r8, r7
   25f4c:	cmp	r0, #8
   25f50:	movcc	r1, r0
   25f54:	sub	r1, r1, #1
   25f58:	cmp	r1, #7
   25f5c:	bhi	26f80 <main@@Base+0x13bc4>
   25f60:	ldrb	r1, [r7]
   25f64:	cmp	r1, #53	; 0x35
   25f68:	bne	26f80 <main@@Base+0x13bc4>
   25f6c:	cmp	r0, #2
   25f70:	blt	26f7c <main@@Base+0x13bc0>
   25f74:	ldr	r2, [sp, #20]
   25f78:	mov	r1, sl
   25f7c:	ldrb	r0, [r1, #9]!
   25f80:	ldr	r2, [r2]
   25f84:	cmp	r2, #0
   25f88:	beq	265a8 <main@@Base+0x131ec>
   25f8c:	cmp	r0, #33	; 0x21
   25f90:	bcc	25f9c <main@@Base+0x12be0>
   25f94:	cmp	r0, #58	; 0x3a
   25f98:	bne	26f7c <main@@Base+0x13bc0>
   25f9c:	ldr	r0, [sp, #20]
   25fa0:	mov	r2, #0
   25fa4:	str	r2, [r0]
   25fa8:	b	265b4 <main@@Base+0x131f8>
   25fac:	mov	r0, r9
   25fb0:	mov	r1, r7
   25fb4:	mov	r2, r8
   25fb8:	mov	r3, #4
   25fbc:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   25fc0:	b	26434 <main@@Base+0x13078>
   25fc4:	cmp	r0, #34	; 0x22
   25fc8:	bne	26f7c <main@@Base+0x13bc0>
   25fcc:	add	r1, sl, #10
   25fd0:	sub	r0, r8, r1
   25fd4:	cmp	r0, #2
   25fd8:	blt	265f0 <main@@Base+0x13234>
   25fdc:	ldrb	r0, [r1]
   25fe0:	cmp	r0, #32
   25fe4:	bls	265dc <main@@Base+0x13220>
   25fe8:	mov	r9, r1
   25fec:	cmp	r9, r8
   25ff0:	bne	26608 <main@@Base+0x1324c>
   25ff4:	b	26640 <main@@Base+0x13284>
   25ff8:	bne	2600c <main@@Base+0x12c50>
   25ffc:	mov	r1, r2
   26000:	ldrb	r0, [r1, #1]!
   26004:	cmp	r0, #32
   26008:	bhi	26020 <main@@Base+0x12c64>
   2600c:	ldr	r0, [sp, #16]
   26010:	mov	r1, r2
   26014:	mov	r2, r8
   26018:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   2601c:	mov	r1, r0
   26020:	cmp	r1, r8
   26024:	beq	26110 <main@@Base+0x12d54>
   26028:	ldrb	r0, [r1]
   2602c:	cmp	r0, #58	; 0x3a
   26030:	bne	26110 <main@@Base+0x12d54>
   26034:	add	r2, r1, #1
   26038:	sub	r0, r8, r2
   2603c:	cmp	r0, #2
   26040:	blt	266e8 <main@@Base+0x1332c>
   26044:	ldrb	r0, [r2]
   26048:	cmp	r0, #32
   2604c:	bls	266d8 <main@@Base+0x1331c>
   26050:	mov	r1, r2
   26054:	cmp	sl, r1
   26058:	bne	26704 <main@@Base+0x13348>
   2605c:	movw	r1, #25186	; 0x6262
   26060:	movt	r1, #25186	; 0x6262
   26064:	eor	r0, r7, r1
   26068:	orrs	r0, r5, r0
   2606c:	bne	260bc <main@@Base+0x12d00>
   26070:	cmp	r9, #9
   26074:	ldr	r9, [sp, #16]
   26078:	mov	r7, sl
   2607c:	blt	267b4 <main@@Base+0x133f8>
   26080:	ldr	r2, [sp, #20]
   26084:	mov	r1, sl
   26088:	ldrb	r0, [r1, #8]!
   2608c:	ldr	r2, [r2]
   26090:	cmp	r2, #0
   26094:	beq	26124 <main@@Base+0x12d68>
   26098:	cmp	r0, #33	; 0x21
   2609c:	bcc	260ac <main@@Base+0x12cf0>
   260a0:	cmp	r0, #58	; 0x3a
   260a4:	mov	r7, sl
   260a8:	bne	267b4 <main@@Base+0x133f8>
   260ac:	ldr	r0, [sp, #20]
   260b0:	mov	r2, #0
   260b4:	str	r2, [r0]
   260b8:	b	26134 <main@@Base+0x12d78>
   260bc:	teq	r7, r1
   260c0:	bne	26254 <main@@Base+0x12e98>
   260c4:	cmp	r9, #5
   260c8:	ldr	r9, [sp, #16]
   260cc:	mov	r1, sl
   260d0:	blt	26cd0 <main@@Base+0x13914>
   260d4:	ldr	r1, [sp, #20]
   260d8:	mov	r2, sl
   260dc:	ldrb	r0, [r2, #4]!
   260e0:	ldr	r1, [r1]
   260e4:	cmp	r1, #0
   260e8:	beq	2615c <main@@Base+0x12da0>
   260ec:	cmp	r0, #33	; 0x21
   260f0:	bcc	26100 <main@@Base+0x12d44>
   260f4:	cmp	r0, #58	; 0x3a
   260f8:	mov	r1, sl
   260fc:	bne	26cd0 <main@@Base+0x13914>
   26100:	ldr	r0, [sp, #20]
   26104:	mov	r1, #0
   26108:	str	r1, [r0]
   2610c:	b	2616c <main@@Base+0x12db0>
   26110:	ldr	r0, [sp, #16]
   26114:	mov	r2, r8
   26118:	mov	r3, #4
   2611c:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   26120:	b	266f8 <main@@Base+0x1333c>
   26124:	cmp	r0, #34	; 0x22
   26128:	mov	r7, sl
   2612c:	bne	267b4 <main@@Base+0x133f8>
   26130:	add	r1, sl, #9
   26134:	sub	r0, r8, r1
   26138:	cmp	r0, #2
   2613c:	blt	262c4 <main@@Base+0x12f08>
   26140:	ldrb	r0, [r1]
   26144:	cmp	r0, #32
   26148:	bls	262b0 <main@@Base+0x12ef4>
   2614c:	mov	r7, r1
   26150:	cmp	r7, r8
   26154:	bne	262dc <main@@Base+0x12f20>
   26158:	b	26318 <main@@Base+0x12f5c>
   2615c:	cmp	r0, #34	; 0x22
   26160:	mov	r1, sl
   26164:	bne	26cd0 <main@@Base+0x13914>
   26168:	add	r2, sl, #5
   2616c:	sub	r0, r8, r2
   26170:	cmp	r0, #2
   26174:	blt	2666c <main@@Base+0x132b0>
   26178:	ldrb	r0, [r2]
   2617c:	cmp	r0, #32
   26180:	bls	26658 <main@@Base+0x1329c>
   26184:	mov	r1, r2
   26188:	cmp	r1, r8
   2618c:	bne	26688 <main@@Base+0x132cc>
   26190:	b	266c4 <main@@Base+0x13308>
   26194:	bne	261a8 <main@@Base+0x12dec>
   26198:	mov	r1, r2
   2619c:	ldrb	r0, [r1, #1]!
   261a0:	cmp	r0, #32
   261a4:	bhi	261bc <main@@Base+0x12e00>
   261a8:	ldr	r0, [sp, #16]
   261ac:	mov	r1, r2
   261b0:	mov	r2, r8
   261b4:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   261b8:	mov	r1, r0
   261bc:	cmp	r1, r8
   261c0:	beq	26264 <main@@Base+0x12ea8>
   261c4:	ldrb	r0, [r1]
   261c8:	cmp	r0, #58	; 0x3a
   261cc:	bne	26264 <main@@Base+0x12ea8>
   261d0:	add	r2, r1, #1
   261d4:	sub	r0, r8, r2
   261d8:	cmp	r0, #2
   261dc:	blt	26744 <main@@Base+0x13388>
   261e0:	ldrb	r0, [r2]
   261e4:	cmp	r0, #32
   261e8:	bls	26734 <main@@Base+0x13378>
   261ec:	mov	r1, r2
   261f0:	cmp	sl, r1
   261f4:	bne	26760 <main@@Base+0x133a4>
   261f8:	ldr	r0, [sp, #8]
   261fc:	eor	r0, r7, r0
   26200:	orrs	r0, r5, r0
   26204:	bne	26254 <main@@Base+0x12e98>
   26208:	cmp	r9, #9
   2620c:	ldr	r9, [sp, #16]
   26210:	mov	r7, sl
   26214:	blt	26938 <main@@Base+0x1357c>
   26218:	ldr	r2, [sp, #20]
   2621c:	mov	r1, sl
   26220:	ldrb	r0, [r1, #8]!
   26224:	ldr	r2, [r2]
   26228:	cmp	r2, #0
   2622c:	beq	26278 <main@@Base+0x12ebc>
   26230:	cmp	r0, #33	; 0x21
   26234:	bcc	26244 <main@@Base+0x12e88>
   26238:	cmp	r0, #58	; 0x3a
   2623c:	mov	r7, sl
   26240:	bne	26938 <main@@Base+0x1357c>
   26244:	ldr	r0, [sp, #20]
   26248:	mov	r2, #0
   2624c:	str	r2, [r0]
   26250:	b	26288 <main@@Base+0x12ecc>
   26254:	ldr	r9, [sp, #16]
   26258:	mov	r0, r9
   2625c:	mov	r1, sl
   26260:	b	26f88 <main@@Base+0x13bcc>
   26264:	ldr	r0, [sp, #16]
   26268:	mov	r2, r8
   2626c:	mov	r3, #4
   26270:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   26274:	b	26754 <main@@Base+0x13398>
   26278:	cmp	r0, #34	; 0x22
   2627c:	mov	r7, sl
   26280:	bne	26938 <main@@Base+0x1357c>
   26284:	add	r1, sl, #9
   26288:	sub	r0, r8, r1
   2628c:	cmp	r0, #2
   26290:	blt	26344 <main@@Base+0x12f88>
   26294:	ldrb	r0, [r1]
   26298:	cmp	r0, #32
   2629c:	bls	26330 <main@@Base+0x12f74>
   262a0:	mov	r7, r1
   262a4:	cmp	r7, r8
   262a8:	bne	2635c <main@@Base+0x12fa0>
   262ac:	b	26400 <main@@Base+0x13044>
   262b0:	bne	262c4 <main@@Base+0x12f08>
   262b4:	mov	r7, r1
   262b8:	ldrb	r0, [r7, #1]!
   262bc:	cmp	r0, #32
   262c0:	bhi	262d4 <main@@Base+0x12f18>
   262c4:	mov	r0, r9
   262c8:	mov	r2, r8
   262cc:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   262d0:	mov	r7, r0
   262d4:	cmp	r7, r8
   262d8:	beq	26318 <main@@Base+0x12f5c>
   262dc:	ldrb	r0, [r7]
   262e0:	cmp	r0, #58	; 0x3a
   262e4:	bne	26318 <main@@Base+0x12f5c>
   262e8:	add	r1, r7, #1
   262ec:	sub	r0, r8, r1
   262f0:	cmp	r0, #2
   262f4:	blt	267a4 <main@@Base+0x133e8>
   262f8:	ldrb	r0, [r1]
   262fc:	cmp	r0, #32
   26300:	bls	26790 <main@@Base+0x133d4>
   26304:	ldr	r9, [sp, #16]
   26308:	mov	r7, r1
   2630c:	cmp	sl, r7
   26310:	bne	267bc <main@@Base+0x13400>
   26314:	b	26258 <main@@Base+0x12e9c>
   26318:	mov	r0, r9
   2631c:	mov	r1, r7
   26320:	mov	r2, r8
   26324:	mov	r3, #4
   26328:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   2632c:	b	267b0 <main@@Base+0x133f4>
   26330:	bne	26344 <main@@Base+0x12f88>
   26334:	mov	r7, r1
   26338:	ldrb	r0, [r7, #1]!
   2633c:	cmp	r0, #32
   26340:	bhi	26354 <main@@Base+0x12f98>
   26344:	mov	r0, r9
   26348:	mov	r2, r8
   2634c:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   26350:	mov	r7, r0
   26354:	cmp	r7, r8
   26358:	beq	26400 <main@@Base+0x13044>
   2635c:	ldrb	r0, [r7]
   26360:	cmp	r0, #58	; 0x3a
   26364:	bne	26400 <main@@Base+0x13044>
   26368:	add	r1, r7, #1
   2636c:	sub	r0, r8, r1
   26370:	cmp	r0, #2
   26374:	blt	26928 <main@@Base+0x1356c>
   26378:	ldrb	r0, [r1]
   2637c:	cmp	r0, #32
   26380:	bls	26914 <main@@Base+0x13558>
   26384:	ldr	r9, [sp, #16]
   26388:	mov	r7, r1
   2638c:	cmp	sl, r7
   26390:	bne	26940 <main@@Base+0x13584>
   26394:	add	r7, sl, #8
   26398:	mov	r1, #8
   2639c:	sub	r0, r8, r7
   263a0:	cmp	r0, #8
   263a4:	movcc	r1, r0
   263a8:	sub	r1, r1, #1
   263ac:	cmp	r1, #7
   263b0:	bhi	26f80 <main@@Base+0x13bc4>
   263b4:	ldrb	r1, [r7]
   263b8:	cmp	r1, #53	; 0x35
   263bc:	bne	26f80 <main@@Base+0x13bc4>
   263c0:	cmp	r0, #2
   263c4:	blt	26f7c <main@@Base+0x13bc0>
   263c8:	ldr	r2, [sp, #20]
   263cc:	mov	r1, sl
   263d0:	ldrb	r0, [r1, #9]!
   263d4:	ldr	r2, [r2]
   263d8:	cmp	r2, #0
   263dc:	beq	26ab0 <main@@Base+0x136f4>
   263e0:	cmp	r0, #33	; 0x21
   263e4:	bcc	263f0 <main@@Base+0x13034>
   263e8:	cmp	r0, #58	; 0x3a
   263ec:	bne	26f7c <main@@Base+0x13bc0>
   263f0:	ldr	r0, [sp, #20]
   263f4:	mov	r2, #0
   263f8:	str	r2, [r0]
   263fc:	b	26abc <main@@Base+0x13700>
   26400:	mov	r0, r9
   26404:	mov	r1, r7
   26408:	mov	r2, r8
   2640c:	mov	r3, #4
   26410:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   26414:	b	26934 <main@@Base+0x13578>
   26418:	bne	26428 <main@@Base+0x1306c>
   2641c:	ldrb	r0, [r7, #2]!
   26420:	cmp	r0, #32
   26424:	bhi	26438 <main@@Base+0x1307c>
   26428:	mov	r0, r9
   2642c:	mov	r2, r8
   26430:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   26434:	mov	r7, r0
   26438:	cmp	sl, r7
   2643c:	beq	25f40 <main@@Base+0x12b84>
   26440:	mov	r5, #0
   26444:	cmp	r7, r8
   26448:	str	r5, [fp, #-36]	; 0xffffffdc
   2644c:	str	r5, [fp, #-40]	; 0xffffffd8
   26450:	str	r5, [sp, #36]	; 0x24
   26454:	str	r5, [sp, #32]
   26458:	str	r5, [sp, #44]	; 0x2c
   2645c:	beq	264c0 <main@@Base+0x13104>
   26460:	sub	r0, fp, #40	; 0x28
   26464:	mov	r1, r7
   26468:	mov	r2, r8
   2646c:	add	r3, sp, #44	; 0x2c
   26470:	str	r0, [sp]
   26474:	mov	r0, r9
   26478:	bl	3132c <flatcc_json_parser_integer@@Base>
   2647c:	ldr	r6, [sp, #24]
   26480:	cmp	r0, r7
   26484:	beq	264d8 <main@@Base+0x1311c>
   26488:	mov	r4, r0
   2648c:	ldr	r0, [sp, #44]	; 0x2c
   26490:	ldr	r5, [fp, #-40]	; 0xffffffd8
   26494:	ldr	sl, [fp, #-36]	; 0xffffffdc
   26498:	cmp	r0, #0
   2649c:	beq	264f0 <main@@Base+0x13134>
   264a0:	subs	r0, r5, #1
   264a4:	sbcs	r0, sl, #-2147483648	; 0x80000000
   264a8:	bcc	26524 <main@@Base+0x13168>
   264ac:	mov	r0, r9
   264b0:	mov	r1, r4
   264b4:	mov	r2, r8
   264b8:	mov	r3, #8
   264bc:	b	26508 <main@@Base+0x1314c>
   264c0:	ldr	r6, [sp, #24]
   264c4:	mov	sl, #0
   264c8:	mov	r4, r8
   264cc:	cmp	r7, r4
   264d0:	bne	26574 <main@@Base+0x131b8>
   264d4:	b	2653c <main@@Base+0x13180>
   264d8:	mov	r5, #0
   264dc:	mov	sl, #0
   264e0:	mov	r4, r7
   264e4:	cmp	r7, r4
   264e8:	bne	26574 <main@@Base+0x131b8>
   264ec:	b	2653c <main@@Base+0x13180>
   264f0:	cmn	sl, #1
   264f4:	bgt	2652c <main@@Base+0x13170>
   264f8:	mov	r0, r9
   264fc:	mov	r1, r4
   26500:	mov	r2, r8
   26504:	mov	r3, #7
   26508:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   2650c:	mov	r4, r0
   26510:	mov	r5, #0
   26514:	mov	sl, #0
   26518:	cmp	r7, r4
   2651c:	bne	26574 <main@@Base+0x131b8>
   26520:	b	2653c <main@@Base+0x13180>
   26524:	rsbs	r5, r5, #0
   26528:	rsc	sl, sl, #0
   2652c:	str	r5, [sp, #32]
   26530:	str	sl, [sp, #36]	; 0x24
   26534:	cmp	r7, r4
   26538:	bne	26574 <main@@Base+0x131b8>
   2653c:	add	r0, sp, #32
   26540:	mov	r1, r7
   26544:	mov	r2, r8
   26548:	str	r0, [sp]
   2654c:	mov	r0, r9
   26550:	ldr	r3, [pc, #4092]	; 27554 <main@@Base+0x14198>
   26554:	add	r3, pc, r3
   26558:	bl	235b8 <main@@Base+0x101fc>
   2655c:	mov	r4, r0
   26560:	cmp	r0, r7
   26564:	cmpne	r4, r8
   26568:	beq	27d6c <main@@Base+0x149b0>
   2656c:	ldr	r5, [sp, #32]
   26570:	ldr	sl, [sp, #36]	; 0x24
   26574:	orrs	r0, r5, sl
   26578:	bne	26588 <main@@Base+0x131cc>
   2657c:	ldrb	r0, [r9, #8]
   26580:	tst	r0, #2
   26584:	beq	26f98 <main@@Base+0x13bdc>
   26588:	ldr	r0, [r9]
   2658c:	mov	r1, #5
   26590:	mov	r2, #8
   26594:	mov	r3, #8
   26598:	bl	2d0a0 <flatcc_builder_table_add@@Base>
   2659c:	cmp	r0, #0
   265a0:	bne	26aa4 <main@@Base+0x136e8>
   265a4:	b	27d6c <main@@Base+0x149b0>
   265a8:	cmp	r0, #34	; 0x22
   265ac:	bne	26f7c <main@@Base+0x13bc0>
   265b0:	add	r1, sl, #10
   265b4:	sub	r0, r8, r1
   265b8:	cmp	r0, #2
   265bc:	blt	26af8 <main@@Base+0x1373c>
   265c0:	ldrb	r0, [r1]
   265c4:	cmp	r0, #32
   265c8:	bls	26ae4 <main@@Base+0x13728>
   265cc:	mov	r9, r1
   265d0:	cmp	r9, r8
   265d4:	bne	26b10 <main@@Base+0x13754>
   265d8:	b	26b48 <main@@Base+0x1378c>
   265dc:	bne	265f0 <main@@Base+0x13234>
   265e0:	mov	r9, r1
   265e4:	ldrb	r0, [r9, #1]!
   265e8:	cmp	r0, #32
   265ec:	bhi	26600 <main@@Base+0x13244>
   265f0:	ldr	r0, [sp, #16]
   265f4:	mov	r2, r8
   265f8:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   265fc:	mov	r9, r0
   26600:	cmp	r9, r8
   26604:	beq	26640 <main@@Base+0x13284>
   26608:	ldrb	r0, [r9]
   2660c:	cmp	r0, #58	; 0x3a
   26610:	bne	26640 <main@@Base+0x13284>
   26614:	add	r1, r9, #1
   26618:	sub	r0, r8, r1
   2661c:	cmp	r0, #2
   26620:	blt	26b70 <main@@Base+0x137b4>
   26624:	ldrb	r0, [r1]
   26628:	cmp	r0, #32
   2662c:	bls	26b60 <main@@Base+0x137a4>
   26630:	mov	r9, r1
   26634:	cmp	r7, r9
   26638:	bne	26b88 <main@@Base+0x137cc>
   2663c:	b	26f7c <main@@Base+0x13bc0>
   26640:	ldr	r0, [sp, #16]
   26644:	mov	r1, r9
   26648:	mov	r2, r8
   2664c:	mov	r3, #4
   26650:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   26654:	b	26b7c <main@@Base+0x137c0>
   26658:	bne	2666c <main@@Base+0x132b0>
   2665c:	mov	r1, r2
   26660:	ldrb	r0, [r1, #1]!
   26664:	cmp	r0, #32
   26668:	bhi	26680 <main@@Base+0x132c4>
   2666c:	mov	r1, r2
   26670:	mov	r0, r9
   26674:	mov	r2, r8
   26678:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   2667c:	mov	r1, r0
   26680:	cmp	r1, r8
   26684:	beq	266c4 <main@@Base+0x13308>
   26688:	ldrb	r0, [r1]
   2668c:	cmp	r0, #58	; 0x3a
   26690:	bne	266c4 <main@@Base+0x13308>
   26694:	add	r2, r1, #1
   26698:	sub	r0, r8, r2
   2669c:	cmp	r0, #2
   266a0:	blt	26cbc <main@@Base+0x13900>
   266a4:	ldrb	r0, [r2]
   266a8:	cmp	r0, #32
   266ac:	bls	26ca8 <main@@Base+0x138ec>
   266b0:	ldr	r9, [sp, #16]
   266b4:	mov	r1, r2
   266b8:	cmp	sl, r1
   266bc:	bne	26cd8 <main@@Base+0x1391c>
   266c0:	b	26258 <main@@Base+0x12e9c>
   266c4:	mov	r0, r9
   266c8:	mov	r2, r8
   266cc:	mov	r3, #4
   266d0:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   266d4:	b	26ccc <main@@Base+0x13910>
   266d8:	bne	266e8 <main@@Base+0x1332c>
   266dc:	ldrb	r0, [r1, #2]!
   266e0:	cmp	r0, #32
   266e4:	bhi	266fc <main@@Base+0x13340>
   266e8:	ldr	r0, [sp, #16]
   266ec:	mov	r1, r2
   266f0:	mov	r2, r8
   266f4:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   266f8:	mov	r1, r0
   266fc:	cmp	sl, r1
   26700:	beq	2605c <main@@Base+0x12ca0>
   26704:	ldr	r9, [sp, #16]
   26708:	mov	r2, r8
   2670c:	add	r3, sp, #28
   26710:	mov	r0, r9
   26714:	bl	318d8 <flatcc_json_parser_build_string@@Base>
   26718:	mov	r4, r0
   2671c:	ldr	r0, [sp, #28]
   26720:	cmp	r0, #0
   26724:	beq	27d6c <main@@Base+0x149b0>
   26728:	ldr	r0, [r9]
   2672c:	mov	r1, #0
   26730:	b	26d00 <main@@Base+0x13944>
   26734:	bne	26744 <main@@Base+0x13388>
   26738:	ldrb	r0, [r1, #2]!
   2673c:	cmp	r0, #32
   26740:	bhi	26758 <main@@Base+0x1339c>
   26744:	ldr	r0, [sp, #16]
   26748:	mov	r1, r2
   2674c:	mov	r2, r8
   26750:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   26754:	mov	r1, r0
   26758:	cmp	sl, r1
   2675c:	beq	261f8 <main@@Base+0x12e3c>
   26760:	ldr	r9, [sp, #16]
   26764:	mov	r2, r8
   26768:	add	r3, sp, #28
   2676c:	mov	r0, r9
   26770:	bl	318d8 <flatcc_json_parser_build_string@@Base>
   26774:	mov	r4, r0
   26778:	ldr	r0, [sp, #28]
   2677c:	cmp	r0, #0
   26780:	beq	27d6c <main@@Base+0x149b0>
   26784:	ldr	r0, [r9]
   26788:	mov	r1, #4
   2678c:	b	26d00 <main@@Base+0x13944>
   26790:	ldr	r9, [sp, #16]
   26794:	bne	267a4 <main@@Base+0x133e8>
   26798:	ldrb	r0, [r7, #2]!
   2679c:	cmp	r0, #32
   267a0:	bhi	267b4 <main@@Base+0x133f8>
   267a4:	mov	r0, r9
   267a8:	mov	r2, r8
   267ac:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   267b0:	mov	r7, r0
   267b4:	cmp	sl, r7
   267b8:	beq	26258 <main@@Base+0x12e9c>
   267bc:	mov	r5, #0
   267c0:	cmp	r7, r8
   267c4:	str	r5, [fp, #-36]	; 0xffffffdc
   267c8:	str	r5, [fp, #-40]	; 0xffffffd8
   267cc:	str	r5, [sp, #36]	; 0x24
   267d0:	str	r5, [sp, #32]
   267d4:	str	r5, [sp, #44]	; 0x2c
   267d8:	beq	2683c <main@@Base+0x13480>
   267dc:	sub	r0, fp, #40	; 0x28
   267e0:	mov	r1, r7
   267e4:	mov	r2, r8
   267e8:	add	r3, sp, #44	; 0x2c
   267ec:	str	r0, [sp]
   267f0:	mov	r0, r9
   267f4:	bl	3132c <flatcc_json_parser_integer@@Base>
   267f8:	ldr	r6, [sp, #24]
   267fc:	cmp	r0, r7
   26800:	beq	26858 <main@@Base+0x1349c>
   26804:	mov	r4, r0
   26808:	ldr	r0, [sp, #44]	; 0x2c
   2680c:	ldr	r5, [fp, #-40]	; 0xffffffd8
   26810:	ldr	sl, [fp, #-36]	; 0xffffffdc
   26814:	cmp	r0, #0
   26818:	beq	26870 <main@@Base+0x134b4>
   2681c:	subs	r0, r5, #1
   26820:	sbcs	r0, sl, #-2147483648	; 0x80000000
   26824:	bcc	268a4 <main@@Base+0x134e8>
   26828:	mov	r0, r9
   2682c:	mov	r1, r4
   26830:	mov	r2, r8
   26834:	mov	r3, #8
   26838:	b	26888 <main@@Base+0x134cc>
   2683c:	ldr	r6, [sp, #24]
   26840:	mov	sl, #0
   26844:	mov	r4, r8
   26848:	cmp	r7, r4
   2684c:	bne	268f4 <main@@Base+0x13538>
   26850:	b	268bc <main@@Base+0x13500>
   26854:	andeq	r0, r2, r8, ror #19
   26858:	mov	r5, #0
   2685c:	mov	sl, #0
   26860:	mov	r4, r7
   26864:	cmp	r7, r4
   26868:	bne	268f4 <main@@Base+0x13538>
   2686c:	b	268bc <main@@Base+0x13500>
   26870:	cmn	sl, #1
   26874:	bgt	268ac <main@@Base+0x134f0>
   26878:	mov	r0, r9
   2687c:	mov	r1, r4
   26880:	mov	r2, r8
   26884:	mov	r3, #7
   26888:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   2688c:	mov	r4, r0
   26890:	mov	r5, #0
   26894:	mov	sl, #0
   26898:	cmp	r7, r4
   2689c:	bne	268f4 <main@@Base+0x13538>
   268a0:	b	268bc <main@@Base+0x13500>
   268a4:	rsbs	r5, r5, #0
   268a8:	rsc	sl, sl, #0
   268ac:	str	r5, [sp, #32]
   268b0:	str	sl, [sp, #36]	; 0x24
   268b4:	cmp	r7, r4
   268b8:	bne	268f4 <main@@Base+0x13538>
   268bc:	add	r0, sp, #32
   268c0:	mov	r1, r7
   268c4:	mov	r2, r8
   268c8:	str	r0, [sp]
   268cc:	mov	r0, r9
   268d0:	ldr	r3, [pc, #4076]	; 278c4 <main@@Base+0x14508>
   268d4:	add	r3, pc, r3
   268d8:	bl	235b8 <main@@Base+0x101fc>
   268dc:	mov	r4, r0
   268e0:	cmp	r0, r7
   268e4:	cmpne	r4, r8
   268e8:	beq	27d68 <main@@Base+0x149ac>
   268ec:	ldr	r5, [sp, #32]
   268f0:	ldr	sl, [sp, #36]	; 0x24
   268f4:	orrs	r0, r5, sl
   268f8:	bne	26908 <main@@Base+0x1354c>
   268fc:	ldrb	r0, [r9, #8]
   26900:	tst	r0, #2
   26904:	beq	26f98 <main@@Base+0x13bdc>
   26908:	ldr	r0, [r9]
   2690c:	mov	r1, #3
   26910:	b	26a90 <main@@Base+0x136d4>
   26914:	ldr	r9, [sp, #16]
   26918:	bne	26928 <main@@Base+0x1356c>
   2691c:	ldrb	r0, [r7, #2]!
   26920:	cmp	r0, #32
   26924:	bhi	26938 <main@@Base+0x1357c>
   26928:	mov	r0, r9
   2692c:	mov	r2, r8
   26930:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   26934:	mov	r7, r0
   26938:	cmp	sl, r7
   2693c:	beq	26394 <main@@Base+0x12fd8>
   26940:	mov	r5, #0
   26944:	cmp	r7, r8
   26948:	str	r5, [fp, #-36]	; 0xffffffdc
   2694c:	str	r5, [fp, #-40]	; 0xffffffd8
   26950:	str	r5, [sp, #36]	; 0x24
   26954:	str	r5, [sp, #32]
   26958:	str	r5, [sp, #44]	; 0x2c
   2695c:	beq	269c0 <main@@Base+0x13604>
   26960:	sub	r0, fp, #40	; 0x28
   26964:	mov	r1, r7
   26968:	mov	r2, r8
   2696c:	add	r3, sp, #44	; 0x2c
   26970:	str	r0, [sp]
   26974:	mov	r0, r9
   26978:	bl	3132c <flatcc_json_parser_integer@@Base>
   2697c:	ldr	r6, [sp, #24]
   26980:	cmp	r0, r7
   26984:	beq	269d8 <main@@Base+0x1361c>
   26988:	mov	r4, r0
   2698c:	ldr	r0, [sp, #44]	; 0x2c
   26990:	ldr	r5, [fp, #-40]	; 0xffffffd8
   26994:	ldr	sl, [fp, #-36]	; 0xffffffdc
   26998:	cmp	r0, #0
   2699c:	beq	269f0 <main@@Base+0x13634>
   269a0:	subs	r0, r5, #1
   269a4:	sbcs	r0, sl, #-2147483648	; 0x80000000
   269a8:	bcc	26a24 <main@@Base+0x13668>
   269ac:	mov	r0, r9
   269b0:	mov	r1, r4
   269b4:	mov	r2, r8
   269b8:	mov	r3, #8
   269bc:	b	26a08 <main@@Base+0x1364c>
   269c0:	ldr	r6, [sp, #24]
   269c4:	mov	sl, #0
   269c8:	mov	r4, r8
   269cc:	cmp	r7, r4
   269d0:	bne	26a74 <main@@Base+0x136b8>
   269d4:	b	26a3c <main@@Base+0x13680>
   269d8:	mov	r5, #0
   269dc:	mov	sl, #0
   269e0:	mov	r4, r7
   269e4:	cmp	r7, r4
   269e8:	bne	26a74 <main@@Base+0x136b8>
   269ec:	b	26a3c <main@@Base+0x13680>
   269f0:	cmn	sl, #1
   269f4:	bgt	26a2c <main@@Base+0x13670>
   269f8:	mov	r0, r9
   269fc:	mov	r1, r4
   26a00:	mov	r2, r8
   26a04:	mov	r3, #7
   26a08:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   26a0c:	mov	r4, r0
   26a10:	mov	r5, #0
   26a14:	mov	sl, #0
   26a18:	cmp	r7, r4
   26a1c:	bne	26a74 <main@@Base+0x136b8>
   26a20:	b	26a3c <main@@Base+0x13680>
   26a24:	rsbs	r5, r5, #0
   26a28:	rsc	sl, sl, #0
   26a2c:	str	r5, [sp, #32]
   26a30:	str	sl, [sp, #36]	; 0x24
   26a34:	cmp	r7, r4
   26a38:	bne	26a74 <main@@Base+0x136b8>
   26a3c:	add	r0, sp, #32
   26a40:	mov	r1, r7
   26a44:	mov	r2, r8
   26a48:	str	r0, [sp]
   26a4c:	mov	r0, r9
   26a50:	ldr	r3, [pc, #3964]	; 279d4 <main@@Base+0x14618>
   26a54:	add	r3, pc, r3
   26a58:	bl	235b8 <main@@Base+0x101fc>
   26a5c:	mov	r4, r0
   26a60:	cmp	r0, r7
   26a64:	cmpne	r4, r8
   26a68:	beq	27d68 <main@@Base+0x149ac>
   26a6c:	ldr	r5, [sp, #32]
   26a70:	ldr	sl, [sp, #36]	; 0x24
   26a74:	orrs	r0, r5, sl
   26a78:	bne	26a88 <main@@Base+0x136cc>
   26a7c:	ldrb	r0, [r9, #8]
   26a80:	tst	r0, #2
   26a84:	beq	26f98 <main@@Base+0x13bdc>
   26a88:	ldr	r0, [r9]
   26a8c:	mov	r1, #7
   26a90:	mov	r2, #8
   26a94:	mov	r3, #8
   26a98:	bl	2d0a0 <flatcc_builder_table_add@@Base>
   26a9c:	cmp	r0, #0
   26aa0:	beq	27d68 <main@@Base+0x149ac>
   26aa4:	stm	r0, {r5, sl}
   26aa8:	b	26f98 <main@@Base+0x13bdc>
   26aac:	muleq	r2, ip, r7
   26ab0:	cmp	r0, #34	; 0x22
   26ab4:	bne	26f7c <main@@Base+0x13bc0>
   26ab8:	add	r1, sl, #10
   26abc:	sub	r0, r8, r1
   26ac0:	cmp	r0, #2
   26ac4:	blt	26d44 <main@@Base+0x13988>
   26ac8:	ldrb	r0, [r1]
   26acc:	cmp	r0, #32
   26ad0:	bls	26d30 <main@@Base+0x13974>
   26ad4:	mov	r9, r1
   26ad8:	cmp	r9, r8
   26adc:	bne	26d5c <main@@Base+0x139a0>
   26ae0:	b	26d94 <main@@Base+0x139d8>
   26ae4:	bne	26af8 <main@@Base+0x1373c>
   26ae8:	mov	r9, r1
   26aec:	ldrb	r0, [r9, #1]!
   26af0:	cmp	r0, #32
   26af4:	bhi	26b08 <main@@Base+0x1374c>
   26af8:	ldr	r0, [sp, #16]
   26afc:	mov	r2, r8
   26b00:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   26b04:	mov	r9, r0
   26b08:	cmp	r9, r8
   26b0c:	beq	26b48 <main@@Base+0x1378c>
   26b10:	ldrb	r0, [r9]
   26b14:	cmp	r0, #58	; 0x3a
   26b18:	bne	26b48 <main@@Base+0x1378c>
   26b1c:	add	r1, r9, #1
   26b20:	sub	r0, r8, r1
   26b24:	cmp	r0, #2
   26b28:	blt	26dbc <main@@Base+0x13a00>
   26b2c:	ldrb	r0, [r1]
   26b30:	cmp	r0, #32
   26b34:	bls	26dac <main@@Base+0x139f0>
   26b38:	mov	r9, r1
   26b3c:	cmp	r7, r9
   26b40:	bne	26dd4 <main@@Base+0x13a18>
   26b44:	b	26f7c <main@@Base+0x13bc0>
   26b48:	ldr	r0, [sp, #16]
   26b4c:	mov	r1, r9
   26b50:	mov	r2, r8
   26b54:	mov	r3, #4
   26b58:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   26b5c:	b	26dc8 <main@@Base+0x13a0c>
   26b60:	bne	26b70 <main@@Base+0x137b4>
   26b64:	ldrb	r0, [r9, #2]!
   26b68:	cmp	r0, #32
   26b6c:	bhi	26b80 <main@@Base+0x137c4>
   26b70:	ldr	r0, [sp, #16]
   26b74:	mov	r2, r8
   26b78:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   26b7c:	mov	r9, r0
   26b80:	cmp	r7, r9
   26b84:	beq	26f7c <main@@Base+0x13bc0>
   26b88:	mov	r5, #0
   26b8c:	cmp	r9, r8
   26b90:	str	r5, [fp, #-36]	; 0xffffffdc
   26b94:	str	r5, [fp, #-40]	; 0xffffffd8
   26b98:	str	r5, [sp, #44]	; 0x2c
   26b9c:	str	r5, [sp, #32]
   26ba0:	beq	26bec <main@@Base+0x13830>
   26ba4:	sub	r0, fp, #40	; 0x28
   26ba8:	mov	r1, r9
   26bac:	mov	r2, r8
   26bb0:	add	r3, sp, #32
   26bb4:	str	r0, [sp]
   26bb8:	ldr	r0, [sp, #16]
   26bbc:	bl	3132c <flatcc_json_parser_integer@@Base>
   26bc0:	cmp	r0, r9
   26bc4:	beq	26bfc <main@@Base+0x13840>
   26bc8:	mov	r4, r0
   26bcc:	ldr	r0, [sp, #32]
   26bd0:	cmp	r0, #0
   26bd4:	beq	26c0c <main@@Base+0x13850>
   26bd8:	ldr	r0, [sp, #16]
   26bdc:	mov	r1, r4
   26be0:	mov	r2, r8
   26be4:	mov	r3, #8
   26be8:	b	26c28 <main@@Base+0x1386c>
   26bec:	mov	r4, r8
   26bf0:	cmp	r9, r4
   26bf4:	bne	26c6c <main@@Base+0x138b0>
   26bf8:	b	26c38 <main@@Base+0x1387c>
   26bfc:	mov	r4, r9
   26c00:	cmp	r9, r4
   26c04:	bne	26c6c <main@@Base+0x138b0>
   26c08:	b	26c38 <main@@Base+0x1387c>
   26c0c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   26c10:	cmp	r0, #0
   26c14:	beq	26d1c <main@@Base+0x13960>
   26c18:	ldr	r0, [sp, #16]
   26c1c:	mov	r1, r4
   26c20:	mov	r2, r8
   26c24:	mov	r3, #7
   26c28:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   26c2c:	mov	r4, r0
   26c30:	cmp	r9, r4
   26c34:	bne	26c6c <main@@Base+0x138b0>
   26c38:	add	r0, sp, #44	; 0x2c
   26c3c:	mov	r1, r9
   26c40:	mov	r2, r8
   26c44:	str	r0, [sp]
   26c48:	ldr	r0, [sp, #16]
   26c4c:	ldr	r3, [pc, #4076]	; 27c40 <main@@Base+0x14884>
   26c50:	add	r3, pc, r3
   26c54:	bl	23814 <main@@Base+0x10458>
   26c58:	mov	r4, r0
   26c5c:	cmp	r0, r9
   26c60:	cmpne	r4, r8
   26c64:	beq	27d68 <main@@Base+0x149ac>
   26c68:	ldr	r5, [sp, #44]	; 0x2c
   26c6c:	ldr	r9, [sp, #16]
   26c70:	cmp	r5, #0
   26c74:	bne	26c84 <main@@Base+0x138c8>
   26c78:	ldrb	r0, [r9, #8]
   26c7c:	tst	r0, #2
   26c80:	beq	26f94 <main@@Base+0x13bd8>
   26c84:	ldr	r0, [r9]
   26c88:	mov	r1, #1
   26c8c:	mov	r2, #4
   26c90:	mov	r3, #4
   26c94:	bl	2d0a0 <flatcc_builder_table_add@@Base>
   26c98:	cmp	r0, #0
   26c9c:	beq	27d68 <main@@Base+0x149ac>
   26ca0:	str	r5, [r0]
   26ca4:	b	26f94 <main@@Base+0x13bd8>
   26ca8:	ldr	r9, [sp, #16]
   26cac:	bne	26cbc <main@@Base+0x13900>
   26cb0:	ldrb	r0, [r1, #2]!
   26cb4:	cmp	r0, #32
   26cb8:	bhi	26cd0 <main@@Base+0x13914>
   26cbc:	mov	r1, r2
   26cc0:	mov	r0, r9
   26cc4:	mov	r2, r8
   26cc8:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   26ccc:	mov	r1, r0
   26cd0:	cmp	sl, r1
   26cd4:	beq	26258 <main@@Base+0x12e9c>
   26cd8:	mov	r0, r9
   26cdc:	mov	r2, r8
   26ce0:	add	r3, sp, #28
   26ce4:	bl	318d8 <flatcc_json_parser_build_string@@Base>
   26ce8:	mov	r4, r0
   26cec:	ldr	r0, [sp, #28]
   26cf0:	cmp	r0, #0
   26cf4:	beq	27d6c <main@@Base+0x149b0>
   26cf8:	ldr	r0, [r9]
   26cfc:	mov	r1, #2
   26d00:	bl	2ceec <flatcc_builder_table_add_offset@@Base>
   26d04:	ldr	r6, [sp, #24]
   26d08:	cmp	r0, #0
   26d0c:	beq	27d6c <main@@Base+0x149b0>
   26d10:	ldr	r1, [sp, #28]
   26d14:	str	r1, [r0]
   26d18:	b	26f98 <main@@Base+0x13bdc>
   26d1c:	ldr	r5, [fp, #-40]	; 0xffffffd8
   26d20:	str	r5, [sp, #44]	; 0x2c
   26d24:	cmp	r9, r4
   26d28:	bne	26c6c <main@@Base+0x138b0>
   26d2c:	b	26c38 <main@@Base+0x1387c>
   26d30:	bne	26d44 <main@@Base+0x13988>
   26d34:	mov	r9, r1
   26d38:	ldrb	r0, [r9, #1]!
   26d3c:	cmp	r0, #32
   26d40:	bhi	26d54 <main@@Base+0x13998>
   26d44:	ldr	r0, [sp, #16]
   26d48:	mov	r2, r8
   26d4c:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   26d50:	mov	r9, r0
   26d54:	cmp	r9, r8
   26d58:	beq	26d94 <main@@Base+0x139d8>
   26d5c:	ldrb	r0, [r9]
   26d60:	cmp	r0, #58	; 0x3a
   26d64:	bne	26d94 <main@@Base+0x139d8>
   26d68:	add	r1, r9, #1
   26d6c:	sub	r0, r8, r1
   26d70:	cmp	r0, #2
   26d74:	blt	26f00 <main@@Base+0x13b44>
   26d78:	ldrb	r0, [r1]
   26d7c:	cmp	r0, #32
   26d80:	bls	26ef0 <main@@Base+0x13b34>
   26d84:	mov	r9, r1
   26d88:	cmp	r7, r9
   26d8c:	bne	26f18 <main@@Base+0x13b5c>
   26d90:	b	26f7c <main@@Base+0x13bc0>
   26d94:	ldr	r0, [sp, #16]
   26d98:	mov	r1, r9
   26d9c:	mov	r2, r8
   26da0:	mov	r3, #4
   26da4:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   26da8:	b	26f0c <main@@Base+0x13b50>
   26dac:	bne	26dbc <main@@Base+0x13a00>
   26db0:	ldrb	r0, [r9, #2]!
   26db4:	cmp	r0, #32
   26db8:	bhi	26dcc <main@@Base+0x13a10>
   26dbc:	ldr	r0, [sp, #16]
   26dc0:	mov	r2, r8
   26dc4:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   26dc8:	mov	r9, r0
   26dcc:	cmp	r7, r9
   26dd0:	beq	26f7c <main@@Base+0x13bc0>
   26dd4:	mov	r5, #0
   26dd8:	cmp	r9, r8
   26ddc:	str	r5, [fp, #-36]	; 0xffffffdc
   26de0:	str	r5, [fp, #-40]	; 0xffffffd8
   26de4:	str	r5, [sp, #44]	; 0x2c
   26de8:	str	r5, [sp, #32]
   26dec:	beq	26e38 <main@@Base+0x13a7c>
   26df0:	sub	r0, fp, #40	; 0x28
   26df4:	mov	r1, r9
   26df8:	mov	r2, r8
   26dfc:	add	r3, sp, #32
   26e00:	str	r0, [sp]
   26e04:	ldr	r0, [sp, #16]
   26e08:	bl	3132c <flatcc_json_parser_integer@@Base>
   26e0c:	cmp	r0, r9
   26e10:	beq	26e48 <main@@Base+0x13a8c>
   26e14:	mov	r4, r0
   26e18:	ldr	r0, [sp, #32]
   26e1c:	cmp	r0, #0
   26e20:	beq	26e58 <main@@Base+0x13a9c>
   26e24:	ldr	r0, [sp, #16]
   26e28:	mov	r1, r4
   26e2c:	mov	r2, r8
   26e30:	mov	r3, #8
   26e34:	b	26e74 <main@@Base+0x13ab8>
   26e38:	mov	r4, r8
   26e3c:	cmp	r9, r4
   26e40:	bne	26eb8 <main@@Base+0x13afc>
   26e44:	b	26e84 <main@@Base+0x13ac8>
   26e48:	mov	r4, r9
   26e4c:	cmp	r9, r4
   26e50:	bne	26eb8 <main@@Base+0x13afc>
   26e54:	b	26e84 <main@@Base+0x13ac8>
   26e58:	ldr	r0, [fp, #-36]	; 0xffffffdc
   26e5c:	cmp	r0, #0
   26e60:	beq	26edc <main@@Base+0x13b20>
   26e64:	ldr	r0, [sp, #16]
   26e68:	mov	r1, r4
   26e6c:	mov	r2, r8
   26e70:	mov	r3, #7
   26e74:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   26e78:	mov	r4, r0
   26e7c:	cmp	r9, r4
   26e80:	bne	26eb8 <main@@Base+0x13afc>
   26e84:	add	r0, sp, #44	; 0x2c
   26e88:	mov	r1, r9
   26e8c:	mov	r2, r8
   26e90:	str	r0, [sp]
   26e94:	ldr	r0, [sp, #16]
   26e98:	ldr	r3, [pc, #3816]	; 27d88 <main@@Base+0x149cc>
   26e9c:	add	r3, pc, r3
   26ea0:	bl	23814 <main@@Base+0x10458>
   26ea4:	mov	r4, r0
   26ea8:	cmp	r0, r9
   26eac:	cmpne	r4, r8
   26eb0:	beq	27d68 <main@@Base+0x149ac>
   26eb4:	ldr	r5, [sp, #44]	; 0x2c
   26eb8:	cmp	r5, #0
   26ebc:	bne	26ed0 <main@@Base+0x13b14>
   26ec0:	ldr	r0, [sp, #16]
   26ec4:	ldrb	r0, [r0, #8]
   26ec8:	tst	r0, #2
   26ecc:	beq	2711c <main@@Base+0x13d60>
   26ed0:	ldr	r0, [sp, #16]
   26ed4:	mov	r1, #6
   26ed8:	b	27100 <main@@Base+0x13d44>
   26edc:	ldr	r5, [fp, #-40]	; 0xffffffd8
   26ee0:	str	r5, [sp, #44]	; 0x2c
   26ee4:	cmp	r9, r4
   26ee8:	bne	26eb8 <main@@Base+0x13afc>
   26eec:	b	26e84 <main@@Base+0x13ac8>
   26ef0:	bne	26f00 <main@@Base+0x13b44>
   26ef4:	ldrb	r0, [r9, #2]!
   26ef8:	cmp	r0, #32
   26efc:	bhi	26f10 <main@@Base+0x13b54>
   26f00:	ldr	r0, [sp, #16]
   26f04:	mov	r2, r8
   26f08:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   26f0c:	mov	r9, r0
   26f10:	cmp	r7, r9
   26f14:	beq	26f7c <main@@Base+0x13bc0>
   26f18:	mov	r5, #0
   26f1c:	cmp	r9, r8
   26f20:	str	r5, [fp, #-36]	; 0xffffffdc
   26f24:	str	r5, [fp, #-40]	; 0xffffffd8
   26f28:	str	r5, [sp, #44]	; 0x2c
   26f2c:	str	r5, [sp, #32]
   26f30:	beq	27060 <main@@Base+0x13ca4>
   26f34:	sub	r0, fp, #40	; 0x28
   26f38:	mov	r1, r9
   26f3c:	mov	r2, r8
   26f40:	add	r3, sp, #32
   26f44:	str	r0, [sp]
   26f48:	ldr	r0, [sp, #16]
   26f4c:	bl	3132c <flatcc_json_parser_integer@@Base>
   26f50:	cmp	r0, r9
   26f54:	beq	27070 <main@@Base+0x13cb4>
   26f58:	mov	r4, r0
   26f5c:	ldr	r0, [sp, #32]
   26f60:	cmp	r0, #0
   26f64:	beq	27080 <main@@Base+0x13cc4>
   26f68:	ldr	r0, [sp, #16]
   26f6c:	mov	r1, r4
   26f70:	mov	r2, r8
   26f74:	mov	r3, #8
   26f78:	b	2709c <main@@Base+0x13ce0>
   26f7c:	ldr	r9, [sp, #16]
   26f80:	mov	r0, r9
   26f84:	mov	r1, r7
   26f88:	mov	r2, r8
   26f8c:	bl	2f87c <flatcc_json_parser_unmatched_symbol@@Base>
   26f90:	mov	r4, r0
   26f94:	ldr	r6, [sp, #24]
   26f98:	sub	r0, r8, r4
   26f9c:	cmp	r0, #2
   26fa0:	blt	26fd4 <main@@Base+0x13c18>
   26fa4:	ldrb	r0, [r4]
   26fa8:	cmp	r0, #32
   26fac:	bls	26fc0 <main@@Base+0x13c04>
   26fb0:	mov	r2, r4
   26fb4:	cmp	r2, r8
   26fb8:	bne	26ff0 <main@@Base+0x13c34>
   26fbc:	b	2724c <main@@Base+0x13e90>
   26fc0:	bne	26fd4 <main@@Base+0x13c18>
   26fc4:	mov	r2, r4
   26fc8:	ldrb	r0, [r2, #1]!
   26fcc:	cmp	r0, #32
   26fd0:	bhi	26fe8 <main@@Base+0x13c2c>
   26fd4:	mov	r0, r9
   26fd8:	mov	r1, r4
   26fdc:	mov	r2, r8
   26fe0:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   26fe4:	mov	r2, r0
   26fe8:	cmp	r2, r8
   26fec:	beq	2724c <main@@Base+0x13e90>
   26ff0:	ldrb	r0, [r2]
   26ff4:	cmp	r0, #44	; 0x2c
   26ff8:	bne	27254 <main@@Base+0x13e98>
   26ffc:	add	r1, r2, #1
   27000:	sub	r0, r8, r1
   27004:	cmp	r0, #2
   27008:	blt	27038 <main@@Base+0x13c7c>
   2700c:	ldrb	r0, [r1]
   27010:	cmp	r0, #32
   27014:	bls	27028 <main@@Base+0x13c6c>
   27018:	mov	r2, r1
   2701c:	cmp	r2, r8
   27020:	bne	27050 <main@@Base+0x13c94>
   27024:	b	27280 <main@@Base+0x13ec4>
   27028:	bne	27038 <main@@Base+0x13c7c>
   2702c:	ldrb	r0, [r2, #2]!
   27030:	cmp	r0, #32
   27034:	bhi	27048 <main@@Base+0x13c8c>
   27038:	mov	r0, r9
   2703c:	mov	r2, r8
   27040:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   27044:	mov	r2, r0
   27048:	cmp	r2, r8
   2704c:	beq	27280 <main@@Base+0x13ec4>
   27050:	ldrb	r0, [r2]
   27054:	cmp	r0, #125	; 0x7d
   27058:	bne	25b7c <main@@Base+0x127c0>
   2705c:	b	2725c <main@@Base+0x13ea0>
   27060:	mov	r4, r8
   27064:	cmp	r9, r4
   27068:	bne	270e0 <main@@Base+0x13d24>
   2706c:	b	270ac <main@@Base+0x13cf0>
   27070:	mov	r4, r9
   27074:	cmp	r9, r4
   27078:	bne	270e0 <main@@Base+0x13d24>
   2707c:	b	270ac <main@@Base+0x13cf0>
   27080:	ldr	r0, [fp, #-36]	; 0xffffffdc
   27084:	cmp	r0, #0
   27088:	beq	27124 <main@@Base+0x13d68>
   2708c:	ldr	r0, [sp, #16]
   27090:	mov	r1, r4
   27094:	mov	r2, r8
   27098:	mov	r3, #7
   2709c:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   270a0:	mov	r4, r0
   270a4:	cmp	r9, r4
   270a8:	bne	270e0 <main@@Base+0x13d24>
   270ac:	add	r0, sp, #44	; 0x2c
   270b0:	mov	r1, r9
   270b4:	mov	r2, r8
   270b8:	str	r0, [sp]
   270bc:	ldr	r0, [sp, #16]
   270c0:	ldr	r3, [pc, #3268]	; 27d8c <main@@Base+0x149d0>
   270c4:	add	r3, pc, r3
   270c8:	bl	23814 <main@@Base+0x10458>
   270cc:	mov	r4, r0
   270d0:	cmp	r0, r9
   270d4:	cmpne	r4, r8
   270d8:	beq	27d68 <main@@Base+0x149ac>
   270dc:	ldr	r5, [sp, #44]	; 0x2c
   270e0:	cmp	r5, #0
   270e4:	bne	270f8 <main@@Base+0x13d3c>
   270e8:	ldr	r0, [sp, #16]
   270ec:	ldrb	r0, [r0, #8]
   270f0:	tst	r0, #2
   270f4:	beq	2711c <main@@Base+0x13d60>
   270f8:	ldr	r0, [sp, #16]
   270fc:	mov	r1, #8
   27100:	mov	r2, #4
   27104:	mov	r3, #4
   27108:	ldr	r0, [r0]
   2710c:	bl	2d0a0 <flatcc_builder_table_add@@Base>
   27110:	cmp	r0, #0
   27114:	beq	27d68 <main@@Base+0x149ac>
   27118:	str	r5, [r0]
   2711c:	ldr	r9, [sp, #16]
   27120:	b	26f94 <main@@Base+0x13bd8>
   27124:	ldr	r5, [fp, #-40]	; 0xffffffd8
   27128:	str	r5, [sp, #44]	; 0x2c
   2712c:	cmp	r9, r4
   27130:	bne	270e0 <main@@Base+0x13d24>
   27134:	b	270ac <main@@Base+0x13cf0>
   27138:	bne	27148 <main@@Base+0x13d8c>
   2713c:	ldrb	r0, [r4, #2]!
   27140:	cmp	r0, #32
   27144:	bhi	27158 <main@@Base+0x13d9c>
   27148:	mov	r0, r9
   2714c:	mov	r2, r8
   27150:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   27154:	mov	r4, r0
   27158:	mov	ip, r5
   2715c:	cmp	r5, r4
   27160:	beq	250ac <main@@Base+0x11cf0>
   27164:	ldr	r0, [r9]
   27168:	mov	r1, #2
   2716c:	bl	2bc04 <flatcc_builder_start_table@@Base>
   27170:	cmp	r0, #0
   27174:	bne	27d6c <main@@Base+0x149b0>
   27178:	cmp	r4, r8
   2717c:	beq	271b4 <main@@Base+0x13df8>
   27180:	ldrb	r0, [r4]
   27184:	cmp	r0, #123	; 0x7b
   27188:	bne	271b4 <main@@Base+0x13df8>
   2718c:	ldr	r6, [sp, #24]
   27190:	add	r1, r4, #1
   27194:	sub	r0, r8, r1
   27198:	cmp	r0, #2
   2719c:	blt	2729c <main@@Base+0x13ee0>
   271a0:	ldrb	r0, [r1]
   271a4:	cmp	r0, #32
   271a8:	bls	2728c <main@@Base+0x13ed0>
   271ac:	mov	r4, r1
   271b0:	b	272ac <main@@Base+0x13ef0>
   271b4:	mov	r0, r9
   271b8:	mov	r1, r4
   271bc:	mov	r2, r8
   271c0:	mov	r3, #21
   271c4:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   271c8:	ldr	r6, [sp, #24]
   271cc:	mov	r4, r0
   271d0:	ldr	r0, [r9, #24]
   271d4:	cmp	r0, #0
   271d8:	bne	27d6c <main@@Base+0x149b0>
   271dc:	ldr	r0, [r9]
   271e0:	bl	2c62c <flatcc_builder_end_table@@Base>
   271e4:	cmp	r0, #0
   271e8:	beq	27d6c <main@@Base+0x149b0>
   271ec:	mov	r7, r0
   271f0:	ldr	r0, [r9]
   271f4:	mov	r1, #2
   271f8:	bl	2ceec <flatcc_builder_table_add_offset@@Base>
   271fc:	cmp	r0, #0
   27200:	beq	24948 <main@@Base+0x1158c>
   27204:	str	r7, [r0]
   27208:	b	250c4 <main@@Base+0x11d08>
   2720c:	mov	r4, r8
   27210:	b	24fa0 <main@@Base+0x11be4>
   27214:	cmp	r0, #125	; 0x7d
   27218:	bne	27bbc <main@@Base+0x14800>
   2721c:	add	r1, r2, #1
   27220:	sub	r0, r8, r1
   27224:	cmp	r0, #2
   27228:	blt	27c58 <main@@Base+0x1489c>
   2722c:	ldrb	r0, [r1]
   27230:	cmp	r0, #32
   27234:	bls	27c44 <main@@Base+0x14888>
   27238:	mov	r4, r1
   2723c:	b	24fa0 <main@@Base+0x11be4>
   27240:	mov	r0, r9
   27244:	mov	r1, r8
   27248:	b	27bc4 <main@@Base+0x14808>
   2724c:	mov	r4, r8
   27250:	b	251a8 <main@@Base+0x11dec>
   27254:	cmp	r0, #125	; 0x7d
   27258:	bne	27c68 <main@@Base+0x148ac>
   2725c:	add	r1, r2, #1
   27260:	sub	r0, r8, r1
   27264:	cmp	r0, #2
   27268:	blt	27c94 <main@@Base+0x148d8>
   2726c:	ldrb	r0, [r1]
   27270:	cmp	r0, #32
   27274:	bls	27c80 <main@@Base+0x148c4>
   27278:	mov	r4, r1
   2727c:	b	251a8 <main@@Base+0x11dec>
   27280:	mov	r0, r9
   27284:	mov	r1, r8
   27288:	b	27c70 <main@@Base+0x148b4>
   2728c:	bne	2729c <main@@Base+0x13ee0>
   27290:	ldrb	r0, [r4, #2]!
   27294:	cmp	r0, #32
   27298:	bhi	272ac <main@@Base+0x13ef0>
   2729c:	mov	r0, r9
   272a0:	mov	r2, r8
   272a4:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   272a8:	mov	r4, r0
   272ac:	cmp	r4, r8
   272b0:	mov	r2, r8
   272b4:	beq	272f8 <main@@Base+0x13f3c>
   272b8:	ldrb	r0, [r4]
   272bc:	cmp	r0, #125	; 0x7d
   272c0:	bne	272f4 <main@@Base+0x13f38>
   272c4:	add	r1, r4, #1
   272c8:	sub	r0, r8, r1
   272cc:	cmp	r0, #2
   272d0:	blt	27ce0 <main@@Base+0x14924>
   272d4:	ldrb	r0, [r1]
   272d8:	cmp	r0, #32
   272dc:	bhi	27c38 <main@@Base+0x1487c>
   272e0:	bne	27ce0 <main@@Base+0x14924>
   272e4:	ldrb	r0, [r4, #2]!
   272e8:	cmp	r0, #32
   272ec:	bls	27ce0 <main@@Base+0x14924>
   272f0:	b	271d0 <main@@Base+0x13e14>
   272f4:	mov	r2, r4
   272f8:	cmp	r2, r8
   272fc:	mov	r1, r8
   27300:	beq	27358 <main@@Base+0x13f9c>
   27304:	ldrb	r0, [r2]
   27308:	cmp	r0, #46	; 0x2e
   2730c:	beq	2732c <main@@Base+0x13f70>
   27310:	cmp	r0, #34	; 0x22
   27314:	bne	27348 <main@@Base+0x13f8c>
   27318:	ldr	r0, [sp, #20]
   2731c:	mov	r1, #0
   27320:	str	r1, [r0]
   27324:	add	r1, r2, #1
   27328:	b	27358 <main@@Base+0x13f9c>
   2732c:	mov	r1, r2
   27330:	mov	r0, r9
   27334:	mov	r2, r8
   27338:	mov	r3, #5
   2733c:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   27340:	mov	r1, r0
   27344:	b	27358 <main@@Base+0x13f9c>
   27348:	ldr	r0, [sp, #20]
   2734c:	mov	r1, #1
   27350:	str	r1, [r0]
   27354:	mov	r1, r2
   27358:	sub	r0, r8, r1
   2735c:	mov	r2, #8
   27360:	cmp	r0, #8
   27364:	movcs	r0, r2
   27368:	sub	r2, r0, #1
   2736c:	cmp	r2, #7
   27370:	bhi	27600 <main@@Base+0x14244>
   27374:	add	r5, pc, #36	; 0x24
   27378:	mov	r9, #0
   2737c:	mov	ip, #0
   27380:	mov	lr, #0
   27384:	mov	sl, #0
   27388:	mov	r3, #0
   2738c:	mov	r7, #0
   27390:	mov	r4, #0
   27394:	ldr	r0, [r5, r2, lsl #2]
   27398:	mov	r2, #0
   2739c:	add	pc, r5, r0
   273a0:	andeq	r0, r0, r4, rrx
   273a4:	andeq	r0, r0, ip, asr r0
   273a8:	andeq	r0, r0, r4, asr r0
   273ac:	andeq	r0, r0, ip, asr #32
   273b0:	andeq	r0, r0, r0, asr #32
   273b4:	andeq	r0, r0, r4, lsr r0
   273b8:	andeq	r0, r0, r4, lsr #32
   273bc:	andeq	r0, r0, r0, lsr #32
   273c0:	ldrb	ip, [r1, #7]
   273c4:	ldrb	r0, [r1, #6]
   273c8:	mov	lr, r9
   273cc:	orr	r0, ip, r0, lsl #8
   273d0:	mov	r9, r0
   273d4:	ldrb	r0, [r1, #5]
   273d8:	mov	sl, lr
   273dc:	orr	r9, r9, r0, lsl #16
   273e0:	ldrb	r0, [r1, #4]
   273e4:	mov	r3, sl
   273e8:	orr	r9, r9, r0, lsl #24
   273ec:	ldrb	r0, [r1, #3]
   273f0:	orr	r7, r0, r3
   273f4:	ldrb	r0, [r1, #2]
   273f8:	orr	r4, r7, r0, lsl #8
   273fc:	ldrb	r0, [r1, #1]
   27400:	orr	r2, r4, r0, lsl #16
   27404:	ldrb	r3, [r1]
   27408:	movw	r0, #25186	; 0x6262
   2740c:	movt	r0, #24418	; 0x5f62
   27410:	eor	r0, r9, r0
   27414:	ldr	r9, [sp, #16]
   27418:	orr	r2, r2, r3, lsl #24
   2741c:	movw	r3, #24929	; 0x6161
   27420:	movt	r3, #24929	; 0x6161
   27424:	eor	r2, r2, r3
   27428:	orrs	r0, r0, r2
   2742c:	bne	27600 <main@@Base+0x14244>
   27430:	add	r4, r1, #8
   27434:	mov	r0, #8
   27438:	sub	lr, r8, r4
   2743c:	cmp	lr, #8
   27440:	movcc	r0, lr
   27444:	sub	r0, r0, #1
   27448:	cmp	r0, #7
   2744c:	bhi	27740 <main@@Base+0x14384>
   27450:	str	r4, [sp, #4]
   27454:	add	r4, pc, #36	; 0x24
   27458:	mov	r2, #0
   2745c:	mov	ip, #0
   27460:	mov	sl, #0
   27464:	mov	r6, #0
   27468:	mov	r7, #0
   2746c:	mov	r5, #0
   27470:	mov	r3, #0
   27474:	ldr	r9, [r4, r0, lsl #2]
   27478:	mov	r0, #0
   2747c:	add	pc, r4, r9
   27480:	andeq	r0, r0, r4, rrx
   27484:	andeq	r0, r0, ip, asr r0
   27488:	andeq	r0, r0, r4, asr r0
   2748c:	andeq	r0, r0, ip, asr #32
   27490:	andeq	r0, r0, r0, asr #32
   27494:	andeq	r0, r0, r4, lsr r0
   27498:	andeq	r0, r0, r4, lsr #32
   2749c:	andeq	r0, r0, r0, lsr #32
   274a0:	ldrb	ip, [r1, #15]
   274a4:	ldrb	r0, [r1, #14]
   274a8:	mov	sl, r2
   274ac:	orr	r0, ip, r0, lsl #8
   274b0:	mov	r2, r0
   274b4:	ldrb	r0, [r1, #13]
   274b8:	mov	r6, sl
   274bc:	orr	r2, r2, r0, lsl #16
   274c0:	ldrb	r0, [r1, #12]
   274c4:	mov	r7, r6
   274c8:	orr	r2, r2, r0, lsl #24
   274cc:	ldrb	r0, [r1, #11]
   274d0:	orr	r5, r0, r7
   274d4:	ldrb	r0, [r1, #10]
   274d8:	orr	r3, r5, r0, lsl #8
   274dc:	ldrb	r0, [r1, #9]
   274e0:	orr	r0, r3, r0, lsl #16
   274e4:	ldr	r4, [sp, #4]
   274e8:	movw	r3, #29791	; 0x745f
   274ec:	movt	r3, #24946	; 0x6172
   274f0:	eor	r3, r2, r3
   274f4:	ldrb	r7, [r4]
   274f8:	orr	r0, r0, r7, lsl #24
   274fc:	movw	r7, #29556	; 0x7374
   27500:	movt	r7, #25183	; 0x625f
   27504:	eor	r0, r0, r7
   27508:	orrs	r3, r3, r0
   2750c:	bne	27608 <main@@Base+0x1424c>
   27510:	add	r9, r1, #16
   27514:	ldr	r6, [sp, #24]
   27518:	mov	r2, #8
   2751c:	sub	ip, r8, r9
   27520:	cmp	ip, #8
   27524:	movcc	r2, ip
   27528:	sub	r3, r2, #1
   2752c:	cmp	r3, #7
   27530:	bhi	277cc <main@@Base+0x14410>
   27534:	add	r4, pc, #28
   27538:	mov	lr, #0
   2753c:	mov	r7, #0
   27540:	mov	r2, #0
   27544:	mov	r5, #0
   27548:	ldr	r0, [r4, r3, lsl #2]
   2754c:	mov	r3, #0
   27550:	add	pc, r4, r0
   27554:	andeq	pc, r1, r0, lsr #26
   27558:	andeq	r0, r0, r4, asr #32
   2755c:	andeq	r0, r0, ip, lsr r0
   27560:	andeq	r0, r0, r4, lsr r0
   27564:	andeq	r0, r0, r8, lsr #32
   27568:	andeq	r0, r0, r0, lsr #32
   2756c:	andeq	r0, r0, r0, lsr #32
   27570:	andeq	r0, r0, r0, lsr #32
   27574:	andeq	r0, r0, r0, lsr #32
   27578:	ldrb	r0, [r1, #20]
   2757c:	lsl	r3, r0, #24
   27580:	ldrb	r0, [r1, #19]
   27584:	orr	r7, r0, lr
   27588:	mov	lr, r3
   2758c:	ldrb	r0, [r1, #18]
   27590:	orr	r2, r7, r0, lsl #8
   27594:	ldrb	r0, [r1, #17]
   27598:	orr	r5, r2, r0, lsl #16
   2759c:	ldrb	r0, [r9]
   275a0:	movw	r2, #25968	; 0x6570
   275a4:	movt	r2, #29556	; 0x7374
   275a8:	orr	r0, r5, r0, lsl #24
   275ac:	eor	r0, r0, r2
   275b0:	and	r2, lr, #-16777216	; 0xff000000
   275b4:	eor	r2, r2, #1929379840	; 0x73000000
   275b8:	orrs	r0, r2, r0
   275bc:	bne	277cc <main@@Base+0x14410>
   275c0:	cmp	ip, #6
   275c4:	blt	277cc <main@@Base+0x14410>
   275c8:	ldr	r3, [sp, #20]
   275cc:	mov	r2, r1
   275d0:	ldrb	r0, [r2, #21]!
   275d4:	ldr	r3, [r3]
   275d8:	cmp	r3, #0
   275dc:	beq	2769c <main@@Base+0x142e0>
   275e0:	cmp	r0, #33	; 0x21
   275e4:	bcc	275f0 <main@@Base+0x14234>
   275e8:	cmp	r0, #58	; 0x3a
   275ec:	bne	277cc <main@@Base+0x14410>
   275f0:	ldr	r0, [sp, #20]
   275f4:	mov	r1, #0
   275f8:	str	r1, [r0]
   275fc:	b	276a8 <main@@Base+0x142ec>
   27600:	mov	r0, r9
   27604:	b	277d8 <main@@Base+0x1441c>
   27608:	movw	r3, #29440	; 0x7300
   2760c:	ldr	r9, [sp, #16]
   27610:	ldr	r6, [sp, #24]
   27614:	bic	r2, r2, #255	; 0xff
   27618:	movt	r3, #25968	; 0x6570
   2761c:	eor	r2, r2, r3
   27620:	orrs	r0, r2, r0
   27624:	bne	27740 <main@@Base+0x14384>
   27628:	cmp	lr, #8
   2762c:	blt	27740 <main@@Base+0x14384>
   27630:	ldr	r3, [sp, #20]
   27634:	mov	r2, r1
   27638:	ldrb	r0, [r2, #15]!
   2763c:	ldr	r3, [r3]
   27640:	cmp	r3, #0
   27644:	beq	27668 <main@@Base+0x142ac>
   27648:	cmp	r0, #33	; 0x21
   2764c:	bcc	27658 <main@@Base+0x1429c>
   27650:	cmp	r0, #58	; 0x3a
   27654:	bne	27740 <main@@Base+0x14384>
   27658:	ldr	r0, [sp, #20]
   2765c:	mov	r1, #0
   27660:	str	r1, [r0]
   27664:	b	27674 <main@@Base+0x142b8>
   27668:	cmp	r0, #34	; 0x22
   2766c:	bne	27740 <main@@Base+0x14384>
   27670:	add	r2, r1, #16
   27674:	sub	r0, r8, r2
   27678:	cmp	r0, #2
   2767c:	blt	276e4 <main@@Base+0x14328>
   27680:	ldrb	r0, [r2]
   27684:	cmp	r0, #32
   27688:	bls	276d0 <main@@Base+0x14314>
   2768c:	mov	r7, r2
   27690:	cmp	r7, r8
   27694:	bne	27700 <main@@Base+0x14344>
   27698:	b	2774c <main@@Base+0x14390>
   2769c:	cmp	r0, #34	; 0x22
   276a0:	bne	277cc <main@@Base+0x14410>
   276a4:	add	r2, r1, #22
   276a8:	sub	r0, r8, r2
   276ac:	cmp	r0, #2
   276b0:	blt	27778 <main@@Base+0x143bc>
   276b4:	ldrb	r0, [r2]
   276b8:	cmp	r0, #32
   276bc:	bls	27764 <main@@Base+0x143a8>
   276c0:	mov	r7, r2
   276c4:	cmp	r7, r8
   276c8:	bne	27794 <main@@Base+0x143d8>
   276cc:	b	278ac <main@@Base+0x144f0>
   276d0:	bne	276e4 <main@@Base+0x14328>
   276d4:	mov	r7, r2
   276d8:	ldrb	r0, [r7, #1]!
   276dc:	cmp	r0, #32
   276e0:	bhi	276f8 <main@@Base+0x1433c>
   276e4:	mov	r1, r2
   276e8:	mov	r0, r9
   276ec:	mov	r2, r8
   276f0:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   276f4:	mov	r7, r0
   276f8:	cmp	r7, r8
   276fc:	beq	2774c <main@@Base+0x14390>
   27700:	ldrb	r0, [r7]
   27704:	cmp	r0, #58	; 0x3a
   27708:	bne	2774c <main@@Base+0x14390>
   2770c:	add	r1, r7, #1
   27710:	sub	r0, r8, r1
   27714:	cmp	r0, #2
   27718:	blt	278e4 <main@@Base+0x14528>
   2771c:	ldrb	r0, [r1]
   27720:	cmp	r0, #32
   27724:	bls	278c8 <main@@Base+0x1450c>
   27728:	ldr	r9, [sp, #16]
   2772c:	ldr	r6, [sp, #24]
   27730:	ldr	r4, [sp, #4]
   27734:	mov	r7, r1
   27738:	cmp	r4, r7
   2773c:	bne	278fc <main@@Base+0x14540>
   27740:	mov	r0, r9
   27744:	mov	r1, r4
   27748:	b	277d8 <main@@Base+0x1441c>
   2774c:	mov	r0, r9
   27750:	mov	r1, r7
   27754:	mov	r2, r8
   27758:	mov	r3, #4
   2775c:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   27760:	b	278f0 <main@@Base+0x14534>
   27764:	bne	27778 <main@@Base+0x143bc>
   27768:	mov	r7, r2
   2776c:	ldrb	r0, [r7, #1]!
   27770:	cmp	r0, #32
   27774:	bhi	2778c <main@@Base+0x143d0>
   27778:	ldr	r0, [sp, #16]
   2777c:	mov	r1, r2
   27780:	mov	r2, r8
   27784:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   27788:	mov	r7, r0
   2778c:	cmp	r7, r8
   27790:	beq	278ac <main@@Base+0x144f0>
   27794:	ldrb	r0, [r7]
   27798:	cmp	r0, #58	; 0x3a
   2779c:	bne	278ac <main@@Base+0x144f0>
   277a0:	add	r1, r7, #1
   277a4:	sub	r0, r8, r1
   277a8:	cmp	r0, #2
   277ac:	blt	27a80 <main@@Base+0x146c4>
   277b0:	ldrb	r0, [r1]
   277b4:	cmp	r0, #32
   277b8:	bls	27a6c <main@@Base+0x146b0>
   277bc:	ldr	r6, [sp, #24]
   277c0:	mov	r7, r1
   277c4:	cmp	r9, r7
   277c8:	bne	27a98 <main@@Base+0x146dc>
   277cc:	ldr	r0, [sp, #16]
   277d0:	mov	r1, r9
   277d4:	mov	r9, r0
   277d8:	mov	r2, r8
   277dc:	bl	2f87c <flatcc_json_parser_unmatched_symbol@@Base>
   277e0:	mov	r4, r0
   277e4:	sub	r0, r8, r4
   277e8:	cmp	r0, #2
   277ec:	blt	27820 <main@@Base+0x14464>
   277f0:	ldrb	r0, [r4]
   277f4:	cmp	r0, #32
   277f8:	bls	2780c <main@@Base+0x14450>
   277fc:	mov	r2, r4
   27800:	cmp	r2, r8
   27804:	bne	2783c <main@@Base+0x14480>
   27808:	b	27bd4 <main@@Base+0x14818>
   2780c:	bne	27820 <main@@Base+0x14464>
   27810:	mov	r2, r4
   27814:	ldrb	r0, [r2, #1]!
   27818:	cmp	r0, #32
   2781c:	bhi	27834 <main@@Base+0x14478>
   27820:	mov	r0, r9
   27824:	mov	r1, r4
   27828:	mov	r2, r8
   2782c:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   27830:	mov	r2, r0
   27834:	cmp	r2, r8
   27838:	beq	27bd4 <main@@Base+0x14818>
   2783c:	ldrb	r0, [r2]
   27840:	cmp	r0, #44	; 0x2c
   27844:	bne	27bdc <main@@Base+0x14820>
   27848:	add	r1, r2, #1
   2784c:	sub	r0, r8, r1
   27850:	cmp	r0, #2
   27854:	blt	27884 <main@@Base+0x144c8>
   27858:	ldrb	r0, [r1]
   2785c:	cmp	r0, #32
   27860:	bls	27874 <main@@Base+0x144b8>
   27864:	mov	r2, r1
   27868:	cmp	r2, r8
   2786c:	bne	2789c <main@@Base+0x144e0>
   27870:	b	27c10 <main@@Base+0x14854>
   27874:	bne	27884 <main@@Base+0x144c8>
   27878:	ldrb	r0, [r2, #2]!
   2787c:	cmp	r0, #32
   27880:	bhi	27894 <main@@Base+0x144d8>
   27884:	mov	r0, r9
   27888:	mov	r2, r8
   2788c:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   27890:	mov	r2, r0
   27894:	cmp	r2, r8
   27898:	beq	27c10 <main@@Base+0x14854>
   2789c:	ldrb	r0, [r2]
   278a0:	cmp	r0, #125	; 0x7d
   278a4:	bne	272f8 <main@@Base+0x13f3c>
   278a8:	b	27c1c <main@@Base+0x14860>
   278ac:	ldr	r0, [sp, #16]
   278b0:	mov	r1, r7
   278b4:	mov	r2, r8
   278b8:	mov	r3, #4
   278bc:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   278c0:	b	27a8c <main@@Base+0x146d0>
   278c4:	muleq	r1, r4, r9
   278c8:	ldr	r9, [sp, #16]
   278cc:	ldr	r6, [sp, #24]
   278d0:	ldr	r4, [sp, #4]
   278d4:	bne	278e4 <main@@Base+0x14528>
   278d8:	ldrb	r0, [r7, #2]!
   278dc:	cmp	r0, #32
   278e0:	bhi	278f4 <main@@Base+0x14538>
   278e4:	mov	r0, r9
   278e8:	mov	r2, r8
   278ec:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   278f0:	mov	r7, r0
   278f4:	cmp	r4, r7
   278f8:	beq	27740 <main@@Base+0x14384>
   278fc:	mov	r6, #0
   27900:	cmp	r7, r8
   27904:	str	r6, [fp, #-36]	; 0xffffffdc
   27908:	str	r6, [fp, #-40]	; 0xffffffd8
   2790c:	str	r6, [sp, #36]	; 0x24
   27910:	str	r6, [sp, #32]
   27914:	str	r6, [sp, #44]	; 0x2c
   27918:	beq	27978 <main@@Base+0x145bc>
   2791c:	sub	r0, fp, #40	; 0x28
   27920:	mov	r1, r7
   27924:	mov	r2, r8
   27928:	add	r3, sp, #44	; 0x2c
   2792c:	str	r0, [sp]
   27930:	mov	r0, r9
   27934:	bl	3132c <flatcc_json_parser_integer@@Base>
   27938:	cmp	r0, r7
   2793c:	beq	2798c <main@@Base+0x145d0>
   27940:	mov	r4, r0
   27944:	ldr	r0, [sp, #44]	; 0x2c
   27948:	ldr	r6, [fp, #-40]	; 0xffffffd8
   2794c:	ldr	r5, [fp, #-36]	; 0xffffffdc
   27950:	cmp	r0, #0
   27954:	beq	2799c <main@@Base+0x145e0>
   27958:	subs	r0, r6, #1
   2795c:	sbcs	r0, r5, #-2147483648	; 0x80000000
   27960:	bcc	279d8 <main@@Base+0x1461c>
   27964:	ldr	r9, [sp, #16]
   27968:	mov	r1, r4
   2796c:	mov	r2, r8
   27970:	mov	r3, #8
   27974:	b	279b4 <main@@Base+0x145f8>
   27978:	mov	r5, #0
   2797c:	mov	r4, r8
   27980:	cmp	r7, r4
   27984:	bne	27a30 <main@@Base+0x14674>
   27988:	b	279f4 <main@@Base+0x14638>
   2798c:	mov	r6, #0
   27990:	mov	r5, #0
   27994:	mov	r4, r7
   27998:	b	279e8 <main@@Base+0x1462c>
   2799c:	cmn	r5, #1
   279a0:	bgt	279e0 <main@@Base+0x14624>
   279a4:	ldr	r9, [sp, #16]
   279a8:	mov	r1, r4
   279ac:	mov	r2, r8
   279b0:	mov	r3, #7
   279b4:	mov	r0, r9
   279b8:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   279bc:	mov	r4, r0
   279c0:	mov	r6, #0
   279c4:	mov	r5, #0
   279c8:	cmp	r7, r4
   279cc:	bne	27a30 <main@@Base+0x14674>
   279d0:	b	279f4 <main@@Base+0x14638>
   279d4:	andeq	pc, r1, r8, lsr r8	; <UNPREDICTABLE>
   279d8:	rsbs	r6, r6, #0
   279dc:	rsc	r5, r5, #0
   279e0:	str	r6, [sp, #32]
   279e4:	str	r5, [sp, #36]	; 0x24
   279e8:	ldr	r9, [sp, #16]
   279ec:	cmp	r7, r4
   279f0:	bne	27a30 <main@@Base+0x14674>
   279f4:	add	r0, sp, #32
   279f8:	mov	r1, r7
   279fc:	mov	r2, r8
   27a00:	str	r0, [sp]
   27a04:	mov	r0, r9
   27a08:	ldr	r3, [pc, #900]	; 27d94 <main@@Base+0x149d8>
   27a0c:	add	r3, pc, r3
   27a10:	bl	235b8 <main@@Base+0x101fc>
   27a14:	mov	r4, r0
   27a18:	cmp	r0, r7
   27a1c:	cmpne	r4, r8
   27a20:	beq	27d68 <main@@Base+0x149ac>
   27a24:	ldr	r6, [sp, #32]
   27a28:	ldr	r5, [sp, #36]	; 0x24
   27a2c:	ldr	r9, [sp, #16]
   27a30:	orrs	r0, r6, r5
   27a34:	bne	27a44 <main@@Base+0x14688>
   27a38:	ldrb	r0, [r9, #8]
   27a3c:	tst	r0, #2
   27a40:	beq	27ba8 <main@@Base+0x147ec>
   27a44:	ldr	r0, [r9]
   27a48:	mov	r1, #0
   27a4c:	mov	r2, #8
   27a50:	mov	r3, #8
   27a54:	bl	2d0a0 <flatcc_builder_table_add@@Base>
   27a58:	cmp	r0, #0
   27a5c:	beq	27d68 <main@@Base+0x149ac>
   27a60:	str	r6, [r0]
   27a64:	str	r5, [r0, #4]
   27a68:	b	27ba8 <main@@Base+0x147ec>
   27a6c:	ldr	r6, [sp, #24]
   27a70:	bne	27a80 <main@@Base+0x146c4>
   27a74:	ldrb	r0, [r7, #2]!
   27a78:	cmp	r0, #32
   27a7c:	bhi	27a90 <main@@Base+0x146d4>
   27a80:	ldr	r0, [sp, #16]
   27a84:	mov	r2, r8
   27a88:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   27a8c:	mov	r7, r0
   27a90:	cmp	r9, r7
   27a94:	beq	277cc <main@@Base+0x14410>
   27a98:	mov	r5, #0
   27a9c:	cmp	r7, r8
   27aa0:	str	r5, [fp, #-36]	; 0xffffffdc
   27aa4:	str	r5, [fp, #-40]	; 0xffffffd8
   27aa8:	str	r5, [sp, #44]	; 0x2c
   27aac:	str	r5, [sp, #32]
   27ab0:	beq	27afc <main@@Base+0x14740>
   27ab4:	sub	r0, fp, #40	; 0x28
   27ab8:	mov	r1, r7
   27abc:	mov	r2, r8
   27ac0:	add	r3, sp, #32
   27ac4:	str	r0, [sp]
   27ac8:	ldr	r0, [sp, #16]
   27acc:	bl	3132c <flatcc_json_parser_integer@@Base>
   27ad0:	cmp	r0, r7
   27ad4:	beq	27b04 <main@@Base+0x14748>
   27ad8:	mov	r4, r0
   27adc:	ldr	r0, [sp, #32]
   27ae0:	cmp	r0, #0
   27ae4:	beq	27b0c <main@@Base+0x14750>
   27ae8:	ldr	r0, [sp, #16]
   27aec:	mov	r1, r4
   27af0:	mov	r2, r8
   27af4:	mov	r3, #8
   27af8:	b	27b28 <main@@Base+0x1476c>
   27afc:	mov	r4, r8
   27b00:	b	27b30 <main@@Base+0x14774>
   27b04:	mov	r4, r7
   27b08:	b	27b30 <main@@Base+0x14774>
   27b0c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   27b10:	cmp	r0, #0
   27b14:	beq	27bb0 <main@@Base+0x147f4>
   27b18:	ldr	r0, [sp, #16]
   27b1c:	mov	r1, r4
   27b20:	mov	r2, r8
   27b24:	mov	r3, #7
   27b28:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   27b2c:	mov	r4, r0
   27b30:	ldr	r9, [sp, #16]
   27b34:	cmp	r7, r4
   27b38:	bne	27b74 <main@@Base+0x147b8>
   27b3c:	add	r0, sp, #44	; 0x2c
   27b40:	mov	r1, r7
   27b44:	mov	r2, r8
   27b48:	str	r0, [sp]
   27b4c:	mov	r0, r9
   27b50:	ldr	r3, [pc, #568]	; 27d90 <main@@Base+0x149d4>
   27b54:	add	r3, pc, r3
   27b58:	bl	23814 <main@@Base+0x10458>
   27b5c:	mov	r4, r0
   27b60:	cmp	r0, r7
   27b64:	cmpne	r4, r8
   27b68:	beq	27d68 <main@@Base+0x149ac>
   27b6c:	ldr	r5, [sp, #44]	; 0x2c
   27b70:	ldr	r9, [sp, #16]
   27b74:	cmp	r5, #0
   27b78:	bne	27b88 <main@@Base+0x147cc>
   27b7c:	ldrb	r0, [r9, #8]
   27b80:	tst	r0, #2
   27b84:	beq	27ba8 <main@@Base+0x147ec>
   27b88:	ldr	r0, [r9]
   27b8c:	mov	r1, #1
   27b90:	mov	r2, #4
   27b94:	mov	r3, #4
   27b98:	bl	2d0a0 <flatcc_builder_table_add@@Base>
   27b9c:	cmp	r0, #0
   27ba0:	beq	27d68 <main@@Base+0x149ac>
   27ba4:	str	r5, [r0]
   27ba8:	ldr	r6, [sp, #24]
   27bac:	b	277e4 <main@@Base+0x14428>
   27bb0:	ldr	r5, [fp, #-40]	; 0xffffffd8
   27bb4:	str	r5, [sp, #44]	; 0x2c
   27bb8:	b	27b30 <main@@Base+0x14774>
   27bbc:	mov	r0, r9
   27bc0:	mov	r1, r2
   27bc4:	mov	r2, r8
   27bc8:	mov	r3, #10
   27bcc:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   27bd0:	b	24f9c <main@@Base+0x11be0>
   27bd4:	mov	r4, r8
   27bd8:	b	271d0 <main@@Base+0x13e14>
   27bdc:	cmp	r0, #125	; 0x7d
   27be0:	bne	27ca4 <main@@Base+0x148e8>
   27be4:	add	r1, r2, #1
   27be8:	sub	r0, r8, r1
   27bec:	cmp	r0, #2
   27bf0:	blt	27ce0 <main@@Base+0x14924>
   27bf4:	ldrb	r0, [r1]
   27bf8:	cmp	r0, #32
   27bfc:	bls	27cc4 <main@@Base+0x14908>
   27c00:	ldr	r9, [sp, #16]
   27c04:	ldr	r6, [sp, #24]
   27c08:	mov	r4, r1
   27c0c:	b	271d0 <main@@Base+0x13e14>
   27c10:	mov	r0, r9
   27c14:	mov	r1, r8
   27c18:	b	27cac <main@@Base+0x148f0>
   27c1c:	add	r1, r2, #1
   27c20:	sub	r0, r8, r1
   27c24:	cmp	r0, #2
   27c28:	blt	27ce0 <main@@Base+0x14924>
   27c2c:	ldrb	r0, [r1]
   27c30:	cmp	r0, #32
   27c34:	bls	27cbc <main@@Base+0x14900>
   27c38:	mov	r4, r1
   27c3c:	b	271d0 <main@@Base+0x13e14>
   27c40:	andeq	pc, r1, ip, lsl #12
   27c44:	bne	27c58 <main@@Base+0x1489c>
   27c48:	ldrb	r0, [r2, #2]!
   27c4c:	mov	r4, r2
   27c50:	cmp	r0, #32
   27c54:	bhi	24fa0 <main@@Base+0x11be4>
   27c58:	mov	r0, r9
   27c5c:	mov	r2, r8
   27c60:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   27c64:	b	24f9c <main@@Base+0x11be0>
   27c68:	mov	r0, r9
   27c6c:	mov	r1, r2
   27c70:	mov	r2, r8
   27c74:	mov	r3, #10
   27c78:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   27c7c:	b	251a4 <main@@Base+0x11de8>
   27c80:	bne	27c94 <main@@Base+0x148d8>
   27c84:	ldrb	r0, [r2, #2]!
   27c88:	mov	r4, r2
   27c8c:	cmp	r0, #32
   27c90:	bhi	251a8 <main@@Base+0x11dec>
   27c94:	mov	r0, r9
   27c98:	mov	r2, r8
   27c9c:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   27ca0:	b	251a4 <main@@Base+0x11de8>
   27ca4:	mov	r0, r9
   27ca8:	mov	r1, r2
   27cac:	mov	r2, r8
   27cb0:	mov	r3, #10
   27cb4:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   27cb8:	b	271cc <main@@Base+0x13e10>
   27cbc:	beq	27cd0 <main@@Base+0x14914>
   27cc0:	b	27ce0 <main@@Base+0x14924>
   27cc4:	ldr	r9, [sp, #16]
   27cc8:	ldr	r6, [sp, #24]
   27ccc:	bne	27ce0 <main@@Base+0x14924>
   27cd0:	ldrb	r0, [r2, #2]!
   27cd4:	mov	r4, r2
   27cd8:	cmp	r0, #32
   27cdc:	bhi	271d0 <main@@Base+0x13e14>
   27ce0:	mov	r0, r9
   27ce4:	mov	r2, r8
   27ce8:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   27cec:	b	271cc <main@@Base+0x13e10>
   27cf0:	mov	r4, r8
   27cf4:	b	2493c <main@@Base+0x11580>
   27cf8:	cmp	r0, #125	; 0x7d
   27cfc:	bne	27d30 <main@@Base+0x14974>
   27d00:	add	r1, r2, #1
   27d04:	sub	r0, r8, r1
   27d08:	cmp	r0, #2
   27d0c:	blt	27d58 <main@@Base+0x1499c>
   27d10:	ldrb	r0, [r1]
   27d14:	cmp	r0, #32
   27d18:	bls	27d44 <main@@Base+0x14988>
   27d1c:	mov	r4, r1
   27d20:	b	2493c <main@@Base+0x11580>
   27d24:	mov	r0, r9
   27d28:	mov	r1, r8
   27d2c:	b	27d38 <main@@Base+0x1497c>
   27d30:	mov	r0, r9
   27d34:	mov	r1, r2
   27d38:	mov	r2, r8
   27d3c:	mov	r3, #10
   27d40:	b	24934 <main@@Base+0x11578>
   27d44:	bne	27d58 <main@@Base+0x1499c>
   27d48:	ldrb	r0, [r2, #2]!
   27d4c:	mov	r4, r2
   27d50:	cmp	r0, #32
   27d54:	bhi	2493c <main@@Base+0x11580>
   27d58:	mov	r0, r9
   27d5c:	mov	r2, r8
   27d60:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   27d64:	b	24938 <main@@Base+0x1157c>
   27d68:	ldr	r9, [sp, #16]
   27d6c:	mov	r0, r9
   27d70:	mov	r1, r4
   27d74:	mov	r2, r8
   27d78:	mov	r3, #33	; 0x21
   27d7c:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   27d80:	mov	r4, r0
   27d84:	b	24948 <main@@Base+0x1158c>
   27d88:	andeq	pc, r1, r4, ror #7
   27d8c:	ldrdeq	pc, [r1], -r4
   27d90:	andeq	lr, r1, r0, asr r7
   27d94:	andeq	lr, r1, r4, lsr #17
   27d98:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27d9c:	add	fp, sp, #28
   27da0:	push	{r3}		; (str r3, [sp, #-4]!)
   27da4:	sub	r7, r2, r1
   27da8:	cmp	r7, #8
   27dac:	movcs	r7, #8
   27db0:	sub	r7, r7, #1
   27db4:	cmp	r7, #7
   27db8:	bhi	27ed4 <main@@Base+0x14b18>
   27dbc:	add	r6, pc, #36	; 0x24
   27dc0:	mov	ip, #0
   27dc4:	mov	r3, #0
   27dc8:	mov	r8, #0
   27dcc:	mov	r9, #0
   27dd0:	mov	sl, #0
   27dd4:	mov	r4, #0
   27dd8:	mov	r5, #0
   27ddc:	ldr	lr, [r6, r7, lsl #2]
   27de0:	mov	r7, #0
   27de4:	add	pc, r6, lr
   27de8:	andeq	r0, r0, r4, rrx
   27dec:	andeq	r0, r0, ip, asr r0
   27df0:	andeq	r0, r0, r4, asr r0
   27df4:	andeq	r0, r0, ip, asr #32
   27df8:	andeq	r0, r0, r0, asr #32
   27dfc:	andeq	r0, r0, r4, lsr r0
   27e00:	andeq	r0, r0, r4, lsr #32
   27e04:	andeq	r0, r0, r0, lsr #32
   27e08:	ldrb	r3, [r1, #7]
   27e0c:	ldrb	r7, [r1, #6]
   27e10:	mov	r8, ip
   27e14:	orr	r3, r3, r7, lsl #8
   27e18:	mov	ip, r3
   27e1c:	ldrb	r3, [r1, #5]
   27e20:	mov	r9, r8
   27e24:	orr	ip, ip, r3, lsl #16
   27e28:	ldrb	r3, [r1, #4]
   27e2c:	mov	sl, r9
   27e30:	orr	ip, ip, r3, lsl #24
   27e34:	ldrb	r3, [r1, #3]
   27e38:	orr	r7, r3, sl
   27e3c:	ldrb	r3, [r1, #2]
   27e40:	orr	r4, r7, r3, lsl #8
   27e44:	ldrb	r3, [r1, #1]
   27e48:	orr	r5, r4, r3, lsl #16
   27e4c:	ldrb	r7, [r1]
   27e50:	movw	r3, #29797	; 0x7465
   27e54:	movw	r6, #24946	; 0x6172
   27e58:	movt	r3, #24931	; 0x6163
   27e5c:	movt	r6, #17256	; 0x4368
   27e60:	eor	r3, ip, r3
   27e64:	orr	r7, r5, r7, lsl #24
   27e68:	eor	r7, r7, r6
   27e6c:	orrs	r3, r3, r7
   27e70:	bne	27ed4 <main@@Base+0x14b18>
   27e74:	add	lr, r1, #8
   27e78:	sub	r7, r2, lr
   27e7c:	cmp	r7, #8
   27e80:	mov	r3, r7
   27e84:	movcs	r3, #8
   27e88:	sub	r3, r3, #1
   27e8c:	cmp	r3, #7
   27e90:	bhi	27ed4 <main@@Base+0x14b18>
   27e94:	cmp	r7, #2
   27e98:	blt	27ed4 <main@@Base+0x14b18>
   27e9c:	ldrb	r3, [lr]
   27ea0:	cmp	r3, #114	; 0x72
   27ea4:	bne	27ed4 <main@@Base+0x14b18>
   27ea8:	ldrb	r3, [r1, #9]
   27eac:	mov	ip, lr
   27eb0:	cmp	r3, #46	; 0x2e
   27eb4:	addeq	ip, r1, #10
   27eb8:	cmp	ip, lr
   27ebc:	beq	27ed4 <main@@Base+0x14b18>
   27ec0:	ldr	r3, [sp]
   27ec4:	mov	r1, ip
   27ec8:	sub	sp, fp, #28
   27ecc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27ed0:	b	245b8 <main@@Base+0x111fc>
   27ed4:	mov	r0, r1
   27ed8:	sub	sp, fp, #28
   27edc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27ee0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27ee4:	add	fp, sp, #28
   27ee8:	sub	sp, sp, #36	; 0x24
   27eec:	ldr	r7, [fp, #8]
   27ef0:	mov	r9, r0
   27ef4:	mov	r0, #0
   27ef8:	mov	r8, r2
   27efc:	mov	r4, r1
   27f00:	cmp	r3, #11
   27f04:	str	r0, [r7]
   27f08:	bhi	27f60 <main@@Base+0x14ba4>
   27f0c:	add	r0, pc, #4
   27f10:	ldr	r1, [r0, r3, lsl #2]
   27f14:	add	pc, r0, r1
   27f18:	andeq	r0, r0, r8, lsl #1
   27f1c:	andeq	r0, r0, r8, rrx
   27f20:	andeq	r0, r0, ip, asr #1
   27f24:	andeq	r0, r0, r8, rrx
   27f28:	andeq	r0, r0, r8, rrx
   27f2c:	andeq	r0, r0, r8, rrx
   27f30:	andeq	r0, r0, r8, rrx
   27f34:	andeq	r0, r0, r8, rrx
   27f38:	andeq	r0, r0, r0, lsr #2
   27f3c:	andeq	r0, r0, r0, lsr r0
   27f40:	andeq	r0, r0, r0, lsr r0
   27f44:	andeq	r0, r0, r0, asr r0
   27f48:	mov	r0, r9
   27f4c:	mov	r1, r4
   27f50:	mov	r2, r8
   27f54:	mov	r3, r7
   27f58:	bl	28e0c <main@@Base+0x15a50>
   27f5c:	b	28130 <main@@Base+0x14d74>
   27f60:	cmp	r3, #255	; 0xff
   27f64:	bne	27f80 <main@@Base+0x14bc4>
   27f68:	mov	r0, r9
   27f6c:	mov	r1, r4
   27f70:	mov	r2, r8
   27f74:	mov	r3, r7
   27f78:	bl	318d8 <flatcc_json_parser_build_string@@Base>
   27f7c:	b	28130 <main@@Base+0x14d74>
   27f80:	ldrb	r0, [r9, #8]
   27f84:	tst	r0, #1
   27f88:	bne	28094 <main@@Base+0x14cd8>
   27f8c:	mov	r0, r9
   27f90:	mov	r1, r4
   27f94:	mov	r2, r8
   27f98:	mov	r3, #15
   27f9c:	b	27fd8 <main@@Base+0x14c1c>
   27fa0:	sub	r0, r8, r4
   27fa4:	cmp	r0, #4
   27fa8:	blt	27fc8 <main@@Base+0x14c0c>
   27fac:	ldr	r1, [pc, #3616]	; 28dd4 <main@@Base+0x15a18>
   27fb0:	mov	r0, r4
   27fb4:	mov	r2, #4
   27fb8:	add	r1, pc, r1
   27fbc:	bl	12b2c <bcmp@plt>
   27fc0:	cmp	r0, #0
   27fc4:	beq	28170 <main@@Base+0x14db4>
   27fc8:	mov	r0, r9
   27fcc:	mov	r1, r4
   27fd0:	mov	r2, r8
   27fd4:	mov	r3, #26
   27fd8:	sub	sp, fp, #28
   27fdc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27fe0:	b	2efd0 <flatcc_json_parser_set_error@@Base>
   27fe4:	mov	r0, #0
   27fe8:	mov	r1, #1
   27fec:	str	r0, [r7]
   27ff0:	ldr	r0, [r9]
   27ff4:	bl	2bc04 <flatcc_builder_start_table@@Base>
   27ff8:	cmp	r0, #0
   27ffc:	bne	2811c <main@@Base+0x14d60>
   28000:	cmp	r4, r8
   28004:	beq	280f8 <main@@Base+0x14d3c>
   28008:	ldrb	r0, [r4]
   2800c:	cmp	r0, #123	; 0x7b
   28010:	bne	280f8 <main@@Base+0x14d3c>
   28014:	add	r1, r4, #1
   28018:	sub	r0, r8, r1
   2801c:	cmp	r0, #2
   28020:	blt	286dc <main@@Base+0x15320>
   28024:	ldrb	r0, [r1]
   28028:	cmp	r0, #32
   2802c:	bls	286cc <main@@Base+0x15310>
   28030:	mov	r4, r1
   28034:	b	286ec <main@@Base+0x15330>
   28038:	mov	r0, #0
   2803c:	mov	r1, #2
   28040:	mov	r2, #2
   28044:	str	r0, [r7]
   28048:	ldr	r0, [r9]
   2804c:	bl	2a964 <flatcc_builder_start_struct@@Base>
   28050:	cmp	r0, #0
   28054:	beq	280ec <main@@Base+0x14d30>
   28058:	cmp	r4, r8
   2805c:	beq	280ac <main@@Base+0x14cf0>
   28060:	ldrb	r1, [r4]
   28064:	cmp	r1, #123	; 0x7b
   28068:	bne	280ac <main@@Base+0x14cf0>
   2806c:	add	r1, r4, #1
   28070:	str	r0, [sp, #4]
   28074:	sub	r0, r8, r1
   28078:	cmp	r0, #2
   2807c:	blt	281a0 <main@@Base+0x14de4>
   28080:	ldrb	r0, [r1]
   28084:	cmp	r0, #32
   28088:	bls	28190 <main@@Base+0x14dd4>
   2808c:	mov	r4, r1
   28090:	b	281b0 <main@@Base+0x14df4>
   28094:	mov	r0, r9
   28098:	mov	r1, r4
   2809c:	mov	r2, r8
   280a0:	sub	sp, fp, #28
   280a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   280a8:	b	2fadc <flatcc_json_parser_generic_json@@Base>
   280ac:	mov	r0, r9
   280b0:	mov	r1, r4
   280b4:	mov	r2, r8
   280b8:	mov	r3, #21
   280bc:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   280c0:	mov	r4, r0
   280c4:	cmp	r4, r8
   280c8:	mov	r1, r8
   280cc:	beq	280f0 <main@@Base+0x14d34>
   280d0:	ldr	r0, [r9]
   280d4:	bl	2aa4c <flatcc_builder_end_struct@@Base>
   280d8:	cmp	r0, #0
   280dc:	mov	r1, r4
   280e0:	str	r0, [r7]
   280e4:	bne	28134 <main@@Base+0x14d78>
   280e8:	b	280f0 <main@@Base+0x14d34>
   280ec:	mov	r1, r4
   280f0:	mov	r0, r9
   280f4:	b	28124 <main@@Base+0x14d68>
   280f8:	mov	r0, r9
   280fc:	mov	r1, r4
   28100:	mov	r2, r8
   28104:	mov	r3, #21
   28108:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   2810c:	mov	r4, r0
   28110:	ldr	r0, [r9, #24]
   28114:	cmp	r0, #0
   28118:	beq	28178 <main@@Base+0x14dbc>
   2811c:	mov	r0, r9
   28120:	mov	r1, r4
   28124:	mov	r2, r8
   28128:	mov	r3, #33	; 0x21
   2812c:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   28130:	mov	r4, r0
   28134:	ldr	r0, [r9, #24]
   28138:	cmp	r0, #0
   2813c:	bne	28164 <main@@Base+0x14da8>
   28140:	ldr	r0, [r7]
   28144:	cmp	r0, #0
   28148:	bne	28164 <main@@Base+0x14da8>
   2814c:	mov	r0, r9
   28150:	mov	r1, r4
   28154:	mov	r2, r8
   28158:	mov	r3, #33	; 0x21
   2815c:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   28160:	mov	r4, r0
   28164:	mov	r0, r4
   28168:	sub	sp, fp, #28
   2816c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28170:	add	r4, r4, #4
   28174:	b	28164 <main@@Base+0x14da8>
   28178:	ldr	r0, [r9]
   2817c:	bl	2c62c <flatcc_builder_end_table@@Base>
   28180:	cmp	r0, #0
   28184:	str	r0, [r7]
   28188:	bne	28134 <main@@Base+0x14d78>
   2818c:	b	2811c <main@@Base+0x14d60>
   28190:	bne	281a0 <main@@Base+0x14de4>
   28194:	ldrb	r0, [r4, #2]!
   28198:	cmp	r0, #32
   2819c:	bhi	281b0 <main@@Base+0x14df4>
   281a0:	mov	r0, r9
   281a4:	mov	r2, r8
   281a8:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   281ac:	mov	r4, r0
   281b0:	cmp	r4, r8
   281b4:	mov	r2, r8
   281b8:	beq	281fc <main@@Base+0x14e40>
   281bc:	ldrb	r0, [r4]
   281c0:	cmp	r0, #125	; 0x7d
   281c4:	bne	281f8 <main@@Base+0x14e3c>
   281c8:	add	r1, r4, #1
   281cc:	sub	r0, r8, r1
   281d0:	cmp	r0, #2
   281d4:	blt	28d74 <main@@Base+0x159b8>
   281d8:	ldrb	r0, [r1]
   281dc:	cmp	r0, #32
   281e0:	bhi	286b8 <main@@Base+0x152fc>
   281e4:	bne	28d74 <main@@Base+0x159b8>
   281e8:	ldrb	r0, [r4, #2]!
   281ec:	cmp	r0, #32
   281f0:	bhi	280c4 <main@@Base+0x14d08>
   281f4:	b	28d74 <main@@Base+0x159b8>
   281f8:	mov	r2, r4
   281fc:	str	r9, [sp, #12]
   28200:	cmp	r2, r8
   28204:	mov	r1, r8
   28208:	beq	28254 <main@@Base+0x14e98>
   2820c:	ldrb	r0, [r2]
   28210:	cmp	r0, #46	; 0x2e
   28214:	beq	2822c <main@@Base+0x14e70>
   28218:	cmp	r0, #34	; 0x22
   2821c:	bne	28248 <main@@Base+0x14e8c>
   28220:	mov	r0, #0
   28224:	add	r1, r2, #1
   28228:	b	28250 <main@@Base+0x14e94>
   2822c:	mov	r1, r2
   28230:	mov	r0, r9
   28234:	mov	r2, r8
   28238:	mov	r3, #5
   2823c:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   28240:	mov	r1, r0
   28244:	b	28254 <main@@Base+0x14e98>
   28248:	mov	r0, #1
   2824c:	mov	r1, r2
   28250:	str	r0, [r9, #12]
   28254:	sub	r0, r8, r1
   28258:	mov	r2, #8
   2825c:	cmp	r0, #8
   28260:	movcs	r0, r2
   28264:	sub	r2, r0, #1
   28268:	cmp	r2, #7
   2826c:	bhi	283b8 <main@@Base+0x14ffc>
   28270:	add	r5, pc, #40	; 0x28
   28274:	mov	r9, r7
   28278:	mov	sl, #0
   2827c:	mov	ip, #0
   28280:	mov	lr, #0
   28284:	mov	r4, #0
   28288:	mov	r3, #0
   2828c:	mov	r6, #0
   28290:	mov	r7, #0
   28294:	ldr	r0, [r5, r2, lsl #2]
   28298:	mov	r2, #0
   2829c:	add	pc, r5, r0
   282a0:	andeq	r0, r0, r4, rrx
   282a4:	andeq	r0, r0, ip, asr r0
   282a8:	andeq	r0, r0, r4, asr r0
   282ac:	andeq	r0, r0, ip, asr #32
   282b0:	andeq	r0, r0, r0, asr #32
   282b4:	andeq	r0, r0, r4, lsr r0
   282b8:	andeq	r0, r0, r4, lsr #32
   282bc:	andeq	r0, r0, r0, lsr #32
   282c0:	ldrb	ip, [r1, #7]
   282c4:	ldrb	r0, [r1, #6]
   282c8:	mov	lr, sl
   282cc:	orr	r0, ip, r0, lsl #8
   282d0:	mov	sl, r0
   282d4:	ldrb	r0, [r1, #5]
   282d8:	mov	r4, lr
   282dc:	orr	sl, sl, r0, lsl #16
   282e0:	ldrb	r0, [r1, #4]
   282e4:	mov	r3, r4
   282e8:	orr	sl, sl, r0, lsl #24
   282ec:	ldrb	r0, [r1, #3]
   282f0:	orr	r6, r0, r3
   282f4:	ldrb	r0, [r1, #2]
   282f8:	orr	r7, r6, r0, lsl #8
   282fc:	ldrb	r0, [r1, #1]
   28300:	orr	r2, r7, r0, lsl #16
   28304:	ldrb	r3, [r1]
   28308:	movw	r0, #25966	; 0x656e
   2830c:	mov	r7, r9
   28310:	ldr	r9, [sp, #12]
   28314:	movt	r0, #24428	; 0x5f6c
   28318:	eor	r0, sl, r0
   2831c:	orr	r2, r2, r3, lsl #24
   28320:	movw	r3, #26994	; 0x6972
   28324:	movt	r3, #26721	; 0x6861
   28328:	eor	r2, r2, r3
   2832c:	orrs	r0, r0, r2
   28330:	bne	283b8 <main@@Base+0x14ffc>
   28334:	add	r4, r1, #8
   28338:	mov	r3, #8
   2833c:	sub	r0, r8, r4
   28340:	cmp	r0, #8
   28344:	movcc	r3, r0
   28348:	sub	r2, r3, #3
   2834c:	cmp	r2, #6
   28350:	bcs	283c0 <main@@Base+0x15004>
   28354:	ldrb	r2, [r1, #10]
   28358:	lsl	r2, r2, #8
   2835c:	ldrb	r3, [r1, #9]
   28360:	orr	r2, r2, r3, lsl #16
   28364:	ldrb	r3, [r4]
   28368:	bic	r2, r2, #255	; 0xff
   2836c:	orr	r2, r2, r3, lsl #24
   28370:	movw	r3, #26624	; 0x6800
   28374:	movt	r3, #26484	; 0x6774
   28378:	teq	r2, r3
   2837c:	bne	28470 <main@@Base+0x150b4>
   28380:	cmp	r0, #4
   28384:	blt	28470 <main@@Base+0x150b4>
   28388:	mov	r2, r1
   2838c:	ldr	r3, [r9, #12]
   28390:	ldrb	r0, [r2, #11]!
   28394:	cmp	r3, #0
   28398:	beq	283d8 <main@@Base+0x1501c>
   2839c:	cmp	r0, #33	; 0x21
   283a0:	bcc	283ac <main@@Base+0x14ff0>
   283a4:	cmp	r0, #58	; 0x3a
   283a8:	bne	28470 <main@@Base+0x150b4>
   283ac:	mov	r0, #0
   283b0:	str	r0, [r9, #12]
   283b4:	b	283e4 <main@@Base+0x15028>
   283b8:	mov	r0, r9
   283bc:	b	28478 <main@@Base+0x150bc>
   283c0:	mov	r2, #0
   283c4:	cmp	r3, #1
   283c8:	beq	28364 <main@@Base+0x14fa8>
   283cc:	cmp	r3, #2
   283d0:	beq	2835c <main@@Base+0x14fa0>
   283d4:	b	28470 <main@@Base+0x150b4>
   283d8:	cmp	r0, #34	; 0x22
   283dc:	bne	28470 <main@@Base+0x150b4>
   283e0:	add	r2, r1, #12
   283e4:	sub	r0, r8, r2
   283e8:	cmp	r0, #2
   283ec:	blt	28420 <main@@Base+0x15064>
   283f0:	ldrb	r0, [r2]
   283f4:	cmp	r0, #32
   283f8:	bls	2840c <main@@Base+0x15050>
   283fc:	mov	r5, r2
   28400:	cmp	r5, r8
   28404:	bne	2843c <main@@Base+0x15080>
   28408:	b	28548 <main@@Base+0x1518c>
   2840c:	bne	28420 <main@@Base+0x15064>
   28410:	mov	r5, r2
   28414:	ldrb	r0, [r5, #1]!
   28418:	cmp	r0, #32
   2841c:	bhi	28434 <main@@Base+0x15078>
   28420:	mov	r1, r2
   28424:	mov	r0, r9
   28428:	mov	r2, r8
   2842c:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   28430:	mov	r5, r0
   28434:	cmp	r5, r8
   28438:	beq	28548 <main@@Base+0x1518c>
   2843c:	ldrb	r0, [r5]
   28440:	cmp	r0, #58	; 0x3a
   28444:	bne	28548 <main@@Base+0x1518c>
   28448:	add	r1, r5, #1
   2844c:	sub	r0, r8, r1
   28450:	cmp	r0, #2
   28454:	blt	28570 <main@@Base+0x151b4>
   28458:	ldrb	r0, [r1]
   2845c:	cmp	r0, #32
   28460:	bls	28560 <main@@Base+0x151a4>
   28464:	mov	r5, r1
   28468:	cmp	r4, r5
   2846c:	bne	28588 <main@@Base+0x151cc>
   28470:	mov	r0, r9
   28474:	mov	r1, r4
   28478:	mov	r2, r8
   2847c:	bl	2f87c <flatcc_json_parser_unmatched_symbol@@Base>
   28480:	mov	r1, r0
   28484:	sub	r0, r8, r1
   28488:	cmp	r0, #2
   2848c:	blt	284c0 <main@@Base+0x15104>
   28490:	ldrb	r0, [r1]
   28494:	cmp	r0, #32
   28498:	bls	284ac <main@@Base+0x150f0>
   2849c:	mov	r2, r1
   284a0:	cmp	r2, r8
   284a4:	bne	284d8 <main@@Base+0x1511c>
   284a8:	b	2868c <main@@Base+0x152d0>
   284ac:	bne	284c0 <main@@Base+0x15104>
   284b0:	mov	r2, r1
   284b4:	ldrb	r0, [r2, #1]!
   284b8:	cmp	r0, #32
   284bc:	bhi	284d0 <main@@Base+0x15114>
   284c0:	mov	r0, r9
   284c4:	mov	r2, r8
   284c8:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   284cc:	mov	r2, r0
   284d0:	cmp	r2, r8
   284d4:	beq	2868c <main@@Base+0x152d0>
   284d8:	ldrb	r0, [r2]
   284dc:	cmp	r0, #44	; 0x2c
   284e0:	bne	28694 <main@@Base+0x152d8>
   284e4:	add	r1, r2, #1
   284e8:	sub	r0, r8, r1
   284ec:	cmp	r0, #2
   284f0:	blt	28520 <main@@Base+0x15164>
   284f4:	ldrb	r0, [r1]
   284f8:	cmp	r0, #32
   284fc:	bls	28510 <main@@Base+0x15154>
   28500:	mov	r2, r1
   28504:	cmp	r2, r8
   28508:	bne	28538 <main@@Base+0x1517c>
   2850c:	b	286c0 <main@@Base+0x15304>
   28510:	bne	28520 <main@@Base+0x15164>
   28514:	ldrb	r0, [r2, #2]!
   28518:	cmp	r0, #32
   2851c:	bhi	28530 <main@@Base+0x15174>
   28520:	mov	r0, r9
   28524:	mov	r2, r8
   28528:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   2852c:	mov	r2, r0
   28530:	cmp	r2, r8
   28534:	beq	286c0 <main@@Base+0x15304>
   28538:	ldrb	r0, [r2]
   2853c:	cmp	r0, #125	; 0x7d
   28540:	bne	28200 <main@@Base+0x14e44>
   28544:	b	2869c <main@@Base+0x152e0>
   28548:	mov	r0, r9
   2854c:	mov	r1, r5
   28550:	mov	r2, r8
   28554:	mov	r3, #4
   28558:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   2855c:	b	2857c <main@@Base+0x151c0>
   28560:	bne	28570 <main@@Base+0x151b4>
   28564:	ldrb	r0, [r5, #2]!
   28568:	cmp	r0, #32
   2856c:	bhi	28580 <main@@Base+0x151c4>
   28570:	mov	r0, r9
   28574:	mov	r2, r8
   28578:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   2857c:	mov	r5, r0
   28580:	cmp	r4, r5
   28584:	beq	28470 <main@@Base+0x150b4>
   28588:	mov	r4, #0
   2858c:	cmp	r5, r8
   28590:	str	r4, [sp, #28]
   28594:	str	r4, [sp, #24]
   28598:	strh	r4, [sp, #16]
   2859c:	str	r4, [sp, #20]
   285a0:	beq	285e8 <main@@Base+0x1522c>
   285a4:	add	r0, sp, #24
   285a8:	mov	r1, r5
   285ac:	mov	r2, r8
   285b0:	add	r3, sp, #20
   285b4:	str	r0, [sp]
   285b8:	mov	r0, r9
   285bc:	bl	3132c <flatcc_json_parser_integer@@Base>
   285c0:	cmp	r0, r5
   285c4:	beq	285f8 <main@@Base+0x1523c>
   285c8:	mov	r1, r0
   285cc:	ldr	r0, [sp, #20]
   285d0:	cmp	r0, #0
   285d4:	beq	28608 <main@@Base+0x1524c>
   285d8:	mov	r0, r9
   285dc:	mov	r2, r8
   285e0:	mov	r3, #8
   285e4:	b	28628 <main@@Base+0x1526c>
   285e8:	mov	r1, r8
   285ec:	cmp	r5, r1
   285f0:	bne	2866c <main@@Base+0x152b0>
   285f4:	b	28638 <main@@Base+0x1527c>
   285f8:	mov	r1, r5
   285fc:	cmp	r5, r1
   28600:	bne	2866c <main@@Base+0x152b0>
   28604:	b	28638 <main@@Base+0x1527c>
   28608:	ldr	r0, [sp, #24]
   2860c:	ldr	r2, [sp, #28]
   28610:	subs	r3, r0, #65536	; 0x10000
   28614:	sbcs	r2, r2, #0
   28618:	bcc	28678 <main@@Base+0x152bc>
   2861c:	mov	r0, r9
   28620:	mov	r2, r8
   28624:	mov	r3, #7
   28628:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   2862c:	mov	r1, r0
   28630:	cmp	r5, r1
   28634:	bne	2866c <main@@Base+0x152b0>
   28638:	add	r0, sp, #16
   2863c:	mov	r1, r5
   28640:	mov	r2, r8
   28644:	str	r0, [sp]
   28648:	mov	r0, r9
   2864c:	ldr	r3, [pc, #1928]	; 28ddc <main@@Base+0x15a20>
   28650:	add	r3, pc, r3
   28654:	bl	29470 <main@@Base+0x160b4>
   28658:	mov	r1, r0
   2865c:	cmp	r0, r5
   28660:	cmpne	r1, r8
   28664:	beq	28dbc <main@@Base+0x15a00>
   28668:	ldrh	r4, [sp, #16]
   2866c:	ldr	r0, [sp, #4]
   28670:	strh	r4, [r0]
   28674:	b	28484 <main@@Base+0x150c8>
   28678:	mov	r4, r0
   2867c:	strh	r0, [sp, #16]
   28680:	cmp	r5, r1
   28684:	bne	2866c <main@@Base+0x152b0>
   28688:	b	28638 <main@@Base+0x1527c>
   2868c:	mov	r1, r8
   28690:	b	280f0 <main@@Base+0x14d34>
   28694:	cmp	r0, #125	; 0x7d
   28698:	bne	28d4c <main@@Base+0x15990>
   2869c:	add	r1, r2, #1
   286a0:	sub	r0, r8, r1
   286a4:	cmp	r0, #2
   286a8:	blt	28d74 <main@@Base+0x159b8>
   286ac:	ldrb	r0, [r1]
   286b0:	cmp	r0, #32
   286b4:	bls	28d60 <main@@Base+0x159a4>
   286b8:	mov	r4, r1
   286bc:	b	280c4 <main@@Base+0x14d08>
   286c0:	mov	r0, r9
   286c4:	mov	r1, r8
   286c8:	b	28d54 <main@@Base+0x15998>
   286cc:	bne	286dc <main@@Base+0x15320>
   286d0:	ldrb	r0, [r4, #2]!
   286d4:	cmp	r0, #32
   286d8:	bhi	286ec <main@@Base+0x15330>
   286dc:	mov	r0, r9
   286e0:	mov	r2, r8
   286e4:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   286e8:	mov	r4, r0
   286ec:	cmp	r4, r8
   286f0:	mov	r2, r8
   286f4:	beq	28738 <main@@Base+0x1537c>
   286f8:	ldrb	r0, [r4]
   286fc:	cmp	r0, #125	; 0x7d
   28700:	bne	28734 <main@@Base+0x15378>
   28704:	add	r1, r4, #1
   28708:	sub	r0, r8, r1
   2870c:	cmp	r0, #2
   28710:	blt	28dac <main@@Base+0x159f0>
   28714:	ldrb	r0, [r1]
   28718:	cmp	r0, #32
   2871c:	bhi	28d38 <main@@Base+0x1597c>
   28720:	bne	28dac <main@@Base+0x159f0>
   28724:	ldrb	r0, [r4, #2]!
   28728:	cmp	r0, #32
   2872c:	bhi	28110 <main@@Base+0x14d54>
   28730:	b	28dac <main@@Base+0x159f0>
   28734:	mov	r2, r4
   28738:	str	r7, [sp, #8]
   2873c:	cmp	r2, r8
   28740:	mov	r1, r8
   28744:	beq	28790 <main@@Base+0x153d4>
   28748:	ldrb	r0, [r2]
   2874c:	cmp	r0, #46	; 0x2e
   28750:	beq	28768 <main@@Base+0x153ac>
   28754:	cmp	r0, #34	; 0x22
   28758:	bne	28784 <main@@Base+0x153c8>
   2875c:	mov	r0, #0
   28760:	add	r1, r2, #1
   28764:	b	2878c <main@@Base+0x153d0>
   28768:	mov	r1, r2
   2876c:	mov	r0, r9
   28770:	mov	r2, r8
   28774:	mov	r3, #5
   28778:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   2877c:	mov	r1, r0
   28780:	b	28790 <main@@Base+0x153d4>
   28784:	mov	r0, #1
   28788:	mov	r1, r2
   2878c:	str	r0, [r9, #12]
   28790:	sub	r0, r8, r1
   28794:	mov	r2, #8
   28798:	cmp	r0, #8
   2879c:	movcs	r0, r2
   287a0:	sub	r2, r0, #1
   287a4:	cmp	r2, #7
   287a8:	bhi	289d0 <main@@Base+0x15614>
   287ac:	add	r0, pc, #36	; 0x24
   287b0:	mov	lr, #0
   287b4:	mov	ip, #0
   287b8:	mov	r4, #0
   287bc:	mov	r3, #0
   287c0:	mov	r6, #0
   287c4:	mov	r5, #0
   287c8:	mov	r7, #0
   287cc:	ldr	sl, [r0, r2, lsl #2]
   287d0:	mov	r2, #0
   287d4:	add	pc, r0, sl
   287d8:	andeq	r0, r0, r4, rrx
   287dc:	andeq	r0, r0, ip, asr r0
   287e0:	andeq	r0, r0, r4, asr r0
   287e4:	andeq	r0, r0, ip, asr #32
   287e8:	andeq	r0, r0, r0, asr #32
   287ec:	andeq	r0, r0, r4, lsr r0
   287f0:	andeq	r0, r0, r4, lsr #32
   287f4:	andeq	r0, r0, r0, lsr #32
   287f8:	ldrb	ip, [r1, #7]
   287fc:	ldrb	r0, [r1, #6]
   28800:	mov	r2, lr
   28804:	orr	r0, ip, r0, lsl #8
   28808:	mov	lr, r0
   2880c:	ldrb	r0, [r1, #5]
   28810:	mov	r4, r2
   28814:	orr	lr, lr, r0, lsl #16
   28818:	ldrb	r0, [r1, #4]
   2881c:	mov	r3, r4
   28820:	orr	lr, lr, r0, lsl #24
   28824:	ldrb	r0, [r1, #3]
   28828:	orr	r6, r0, r3
   2882c:	ldrb	r0, [r1, #2]
   28830:	orr	r5, r6, r0, lsl #8
   28834:	ldrb	r0, [r1, #1]
   28838:	orr	r7, r5, r0, lsl #16
   2883c:	ldrb	r2, [r1]
   28840:	movw	r0, #24948	; 0x6174
   28844:	movw	r3, #28530	; 0x6f72
   28848:	movt	r0, #25695	; 0x645f
   2884c:	movt	r3, #29559	; 0x7377
   28850:	eor	r0, lr, r0
   28854:	orr	r2, r7, r2, lsl #24
   28858:	eor	r2, r2, r3
   2885c:	orrs	r0, r0, r2
   28860:	bne	289d0 <main@@Base+0x15614>
   28864:	add	lr, r1, #8
   28868:	mov	r2, #8
   2886c:	sub	r0, r8, lr
   28870:	cmp	r0, #8
   28874:	movcs	r0, r2
   28878:	sub	r2, r0, #1
   2887c:	cmp	r2, #7
   28880:	bhi	289d8 <main@@Base+0x1561c>
   28884:	add	r0, pc, #40	; 0x28
   28888:	mov	sl, #0
   2888c:	mov	r3, #0
   28890:	mov	r4, #0
   28894:	mov	r6, #0
   28898:	mov	r5, #0
   2889c:	mov	r7, #0
   288a0:	ldr	ip, [r0, r2, lsl #2]
   288a4:	mov	r2, #0
   288a8:	str	r2, [sp, #4]
   288ac:	mov	r2, #0
   288b0:	add	pc, r0, ip
   288b4:	andeq	r0, r0, ip, rrx
   288b8:	andeq	r0, r0, r4, rrx
   288bc:	andeq	r0, r0, ip, asr r0
   288c0:	andeq	r0, r0, r4, asr r0
   288c4:	andeq	r0, r0, r8, asr #32
   288c8:	andeq	r0, r0, ip, lsr r0
   288cc:	andeq	r0, r0, r8, lsr #32
   288d0:	andeq	r0, r0, r0, lsr #32
   288d4:	ldrb	r0, [r1, #15]
   288d8:	str	r0, [sp, #4]
   288dc:	ldrb	r0, [r1, #14]
   288e0:	ldr	r2, [sp, #4]
   288e4:	orr	r0, r2, r0, lsl #8
   288e8:	mov	r2, sl
   288ec:	mov	sl, r0
   288f0:	ldrb	r0, [r1, #13]
   288f4:	mov	r3, r2
   288f8:	orr	sl, sl, r0, lsl #16
   288fc:	ldrb	r0, [r1, #12]
   28900:	mov	r4, r3
   28904:	orr	sl, sl, r0, lsl #24
   28908:	ldrb	r0, [r1, #11]
   2890c:	orr	r6, r0, r4
   28910:	ldrb	r0, [r1, #10]
   28914:	orr	r5, r6, r0, lsl #8
   28918:	ldrb	r0, [r1, #9]
   2891c:	orr	r7, r5, r0, lsl #16
   28920:	ldrb	r2, [lr]
   28924:	movw	r0, #24941	; 0x616d
   28928:	movw	r3, #25451	; 0x636b
   2892c:	movt	r0, #24420	; 0x5f64
   28930:	movt	r3, #29793	; 0x7461
   28934:	eor	r0, sl, r0
   28938:	orr	r2, r7, r2, lsl #24
   2893c:	eor	r2, r2, r3
   28940:	orrs	r0, r0, r2
   28944:	bne	289d8 <main@@Base+0x1561c>
   28948:	add	r4, r1, #16
   2894c:	mov	r3, #8
   28950:	sub	r0, r8, r4
   28954:	cmp	r0, #8
   28958:	movcc	r3, r0
   2895c:	sub	r2, r3, #3
   28960:	cmp	r2, #6
   28964:	bcs	28ab8 <main@@Base+0x156fc>
   28968:	ldrb	r2, [r1, #18]
   2896c:	ldr	r7, [sp, #8]
   28970:	lsl	r2, r2, #8
   28974:	ldrb	r3, [r1, #17]
   28978:	orr	r2, r2, r3, lsl #16
   2897c:	ldrb	r3, [r4]
   28980:	bic	r2, r2, #255	; 0xff
   28984:	orr	r2, r2, r3, lsl #24
   28988:	movw	r3, #25856	; 0x6500
   2898c:	movt	r3, #24935	; 0x6167
   28990:	teq	r2, r3
   28994:	bne	28b6c <main@@Base+0x157b0>
   28998:	cmp	r0, #4
   2899c:	blt	28b6c <main@@Base+0x157b0>
   289a0:	mov	r2, r1
   289a4:	ldr	r3, [r9, #12]
   289a8:	ldrb	r0, [r2, #19]!
   289ac:	cmp	r3, #0
   289b0:	beq	28ad4 <main@@Base+0x15718>
   289b4:	cmp	r0, #33	; 0x21
   289b8:	bcc	289c4 <main@@Base+0x15608>
   289bc:	cmp	r0, #58	; 0x3a
   289c0:	bne	28b6c <main@@Base+0x157b0>
   289c4:	mov	r0, #0
   289c8:	str	r0, [r9, #12]
   289cc:	b	28ae0 <main@@Base+0x15724>
   289d0:	mov	r0, r9
   289d4:	b	289e0 <main@@Base+0x15624>
   289d8:	mov	r0, r9
   289dc:	mov	r1, lr
   289e0:	mov	r2, r8
   289e4:	bl	2f87c <flatcc_json_parser_unmatched_symbol@@Base>
   289e8:	ldr	r7, [sp, #8]
   289ec:	mov	r4, r0
   289f0:	sub	r0, r8, r4
   289f4:	cmp	r0, #2
   289f8:	blt	28a2c <main@@Base+0x15670>
   289fc:	ldrb	r0, [r4]
   28a00:	cmp	r0, #32
   28a04:	bls	28a18 <main@@Base+0x1565c>
   28a08:	mov	r2, r4
   28a0c:	cmp	r2, r8
   28a10:	bne	28a48 <main@@Base+0x1568c>
   28a14:	b	28d0c <main@@Base+0x15950>
   28a18:	bne	28a2c <main@@Base+0x15670>
   28a1c:	mov	r2, r4
   28a20:	ldrb	r0, [r2, #1]!
   28a24:	cmp	r0, #32
   28a28:	bhi	28a40 <main@@Base+0x15684>
   28a2c:	mov	r0, r9
   28a30:	mov	r1, r4
   28a34:	mov	r2, r8
   28a38:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   28a3c:	mov	r2, r0
   28a40:	cmp	r2, r8
   28a44:	beq	28d0c <main@@Base+0x15950>
   28a48:	ldrb	r0, [r2]
   28a4c:	cmp	r0, #44	; 0x2c
   28a50:	bne	28d14 <main@@Base+0x15958>
   28a54:	add	r1, r2, #1
   28a58:	sub	r0, r8, r1
   28a5c:	cmp	r0, #2
   28a60:	blt	28a90 <main@@Base+0x156d4>
   28a64:	ldrb	r0, [r1]
   28a68:	cmp	r0, #32
   28a6c:	bls	28a80 <main@@Base+0x156c4>
   28a70:	mov	r2, r1
   28a74:	cmp	r2, r8
   28a78:	bne	28aa8 <main@@Base+0x156ec>
   28a7c:	b	28d40 <main@@Base+0x15984>
   28a80:	bne	28a90 <main@@Base+0x156d4>
   28a84:	ldrb	r0, [r2, #2]!
   28a88:	cmp	r0, #32
   28a8c:	bhi	28aa0 <main@@Base+0x156e4>
   28a90:	mov	r0, r9
   28a94:	mov	r2, r8
   28a98:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   28a9c:	mov	r2, r0
   28aa0:	cmp	r2, r8
   28aa4:	beq	28d40 <main@@Base+0x15984>
   28aa8:	ldrb	r0, [r2]
   28aac:	cmp	r0, #125	; 0x7d
   28ab0:	bne	2873c <main@@Base+0x15380>
   28ab4:	b	28d1c <main@@Base+0x15960>
   28ab8:	ldr	r7, [sp, #8]
   28abc:	mov	r2, #0
   28ac0:	cmp	r3, #1
   28ac4:	beq	2897c <main@@Base+0x155c0>
   28ac8:	cmp	r3, #2
   28acc:	beq	28974 <main@@Base+0x155b8>
   28ad0:	b	28b6c <main@@Base+0x157b0>
   28ad4:	cmp	r0, #34	; 0x22
   28ad8:	bne	28b6c <main@@Base+0x157b0>
   28adc:	add	r2, r1, #20
   28ae0:	sub	r0, r8, r2
   28ae4:	cmp	r0, #2
   28ae8:	blt	28b1c <main@@Base+0x15760>
   28aec:	ldrb	r0, [r2]
   28af0:	cmp	r0, #32
   28af4:	bls	28b08 <main@@Base+0x1574c>
   28af8:	mov	r6, r2
   28afc:	cmp	r6, r8
   28b00:	bne	28b38 <main@@Base+0x1577c>
   28b04:	b	28b80 <main@@Base+0x157c4>
   28b08:	bne	28b1c <main@@Base+0x15760>
   28b0c:	mov	r6, r2
   28b10:	ldrb	r0, [r6, #1]!
   28b14:	cmp	r0, #32
   28b18:	bhi	28b30 <main@@Base+0x15774>
   28b1c:	mov	r1, r2
   28b20:	mov	r0, r9
   28b24:	mov	r2, r8
   28b28:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   28b2c:	mov	r6, r0
   28b30:	cmp	r6, r8
   28b34:	beq	28b80 <main@@Base+0x157c4>
   28b38:	ldrb	r0, [r6]
   28b3c:	cmp	r0, #58	; 0x3a
   28b40:	bne	28b80 <main@@Base+0x157c4>
   28b44:	add	r1, r6, #1
   28b48:	sub	r0, r8, r1
   28b4c:	cmp	r0, #2
   28b50:	blt	28ba8 <main@@Base+0x157ec>
   28b54:	ldrb	r0, [r1]
   28b58:	cmp	r0, #32
   28b5c:	bls	28b98 <main@@Base+0x157dc>
   28b60:	mov	r6, r1
   28b64:	cmp	r4, r6
   28b68:	bne	28bc0 <main@@Base+0x15804>
   28b6c:	mov	r0, r9
   28b70:	mov	r1, r4
   28b74:	mov	r2, r8
   28b78:	bl	2f87c <flatcc_json_parser_unmatched_symbol@@Base>
   28b7c:	b	289ec <main@@Base+0x15630>
   28b80:	mov	r0, r9
   28b84:	mov	r1, r6
   28b88:	mov	r2, r8
   28b8c:	mov	r3, #4
   28b90:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   28b94:	b	28bb4 <main@@Base+0x157f8>
   28b98:	bne	28ba8 <main@@Base+0x157ec>
   28b9c:	ldrb	r0, [r6, #2]!
   28ba0:	cmp	r0, #32
   28ba4:	bhi	28bb8 <main@@Base+0x157fc>
   28ba8:	mov	r0, r9
   28bac:	mov	r2, r8
   28bb0:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   28bb4:	mov	r6, r0
   28bb8:	cmp	r4, r6
   28bbc:	beq	28b6c <main@@Base+0x157b0>
   28bc0:	mov	r5, #0
   28bc4:	cmp	r6, r8
   28bc8:	str	r5, [sp, #28]
   28bcc:	str	r5, [sp, #24]
   28bd0:	str	r5, [sp, #16]
   28bd4:	str	r5, [sp, #20]
   28bd8:	beq	28c38 <main@@Base+0x1587c>
   28bdc:	add	r0, sp, #24
   28be0:	mov	r1, r6
   28be4:	mov	r2, r8
   28be8:	add	r3, sp, #20
   28bec:	str	r0, [sp]
   28bf0:	mov	r0, r9
   28bf4:	bl	3132c <flatcc_json_parser_integer@@Base>
   28bf8:	cmp	r0, r6
   28bfc:	beq	28c48 <main@@Base+0x1588c>
   28c00:	ldr	r2, [sp, #20]
   28c04:	mov	r4, r0
   28c08:	ldr	r0, [sp, #24]
   28c0c:	ldr	r1, [sp, #28]
   28c10:	cmp	r2, #0
   28c14:	beq	28c58 <main@@Base+0x1589c>
   28c18:	subs	r2, r0, #-2147483647	; 0x80000001
   28c1c:	sbcs	r1, r1, #0
   28c20:	bcc	28c88 <main@@Base+0x158cc>
   28c24:	mov	r0, r9
   28c28:	mov	r1, r4
   28c2c:	mov	r2, r8
   28c30:	mov	r3, #8
   28c34:	b	28c74 <main@@Base+0x158b8>
   28c38:	mov	r4, r8
   28c3c:	cmp	r6, r4
   28c40:	bne	28cd4 <main@@Base+0x15918>
   28c44:	b	28ca0 <main@@Base+0x158e4>
   28c48:	mov	r4, r6
   28c4c:	cmp	r6, r4
   28c50:	bne	28cd4 <main@@Base+0x15918>
   28c54:	b	28ca0 <main@@Base+0x158e4>
   28c58:	subs	r2, r0, #-2147483648	; 0x80000000
   28c5c:	sbcs	r1, r1, #0
   28c60:	bcc	28c90 <main@@Base+0x158d4>
   28c64:	mov	r0, r9
   28c68:	mov	r1, r4
   28c6c:	mov	r2, r8
   28c70:	mov	r3, #7
   28c74:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   28c78:	mov	r4, r0
   28c7c:	cmp	r6, r4
   28c80:	bne	28cd4 <main@@Base+0x15918>
   28c84:	b	28ca0 <main@@Base+0x158e4>
   28c88:	rsb	r5, r0, #0
   28c8c:	b	28c94 <main@@Base+0x158d8>
   28c90:	mov	r5, r0
   28c94:	str	r5, [sp, #16]
   28c98:	cmp	r6, r4
   28c9c:	bne	28cd4 <main@@Base+0x15918>
   28ca0:	add	r0, sp, #16
   28ca4:	mov	r1, r6
   28ca8:	mov	r2, r8
   28cac:	str	r0, [sp]
   28cb0:	mov	r0, r9
   28cb4:	ldr	r3, [pc, #284]	; 28dd8 <main@@Base+0x15a1c>
   28cb8:	add	r3, pc, r3
   28cbc:	bl	2336c <main@@Base+0xffb0>
   28cc0:	mov	r4, r0
   28cc4:	cmp	r0, r6
   28cc8:	cmpne	r4, r8
   28ccc:	beq	28dcc <main@@Base+0x15a10>
   28cd0:	ldr	r5, [sp, #16]
   28cd4:	cmp	r5, #0
   28cd8:	bne	28ce8 <main@@Base+0x1592c>
   28cdc:	ldrb	r0, [r9, #8]
   28ce0:	tst	r0, #2
   28ce4:	beq	289f0 <main@@Base+0x15634>
   28ce8:	ldr	r0, [r9]
   28cec:	mov	r1, #0
   28cf0:	mov	r2, #4
   28cf4:	mov	r3, #4
   28cf8:	bl	2d0a0 <flatcc_builder_table_add@@Base>
   28cfc:	cmp	r0, #0
   28d00:	beq	28dcc <main@@Base+0x15a10>
   28d04:	str	r5, [r0]
   28d08:	b	289f0 <main@@Base+0x15634>
   28d0c:	mov	r4, r8
   28d10:	b	28110 <main@@Base+0x14d54>
   28d14:	cmp	r0, #125	; 0x7d
   28d18:	bne	28d84 <main@@Base+0x159c8>
   28d1c:	add	r1, r2, #1
   28d20:	sub	r0, r8, r1
   28d24:	cmp	r0, #2
   28d28:	blt	28dac <main@@Base+0x159f0>
   28d2c:	ldrb	r0, [r1]
   28d30:	cmp	r0, #32
   28d34:	bls	28d98 <main@@Base+0x159dc>
   28d38:	mov	r4, r1
   28d3c:	b	28110 <main@@Base+0x14d54>
   28d40:	mov	r0, r9
   28d44:	mov	r1, r8
   28d48:	b	28d8c <main@@Base+0x159d0>
   28d4c:	mov	r0, r9
   28d50:	mov	r1, r2
   28d54:	mov	r2, r8
   28d58:	mov	r3, #10
   28d5c:	b	280bc <main@@Base+0x14d00>
   28d60:	bne	28d74 <main@@Base+0x159b8>
   28d64:	ldrb	r0, [r2, #2]!
   28d68:	mov	r4, r2
   28d6c:	cmp	r0, #32
   28d70:	bhi	280c4 <main@@Base+0x14d08>
   28d74:	mov	r0, r9
   28d78:	mov	r2, r8
   28d7c:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   28d80:	b	280c0 <main@@Base+0x14d04>
   28d84:	mov	r0, r9
   28d88:	mov	r1, r2
   28d8c:	mov	r2, r8
   28d90:	mov	r3, #10
   28d94:	b	28108 <main@@Base+0x14d4c>
   28d98:	bne	28dac <main@@Base+0x159f0>
   28d9c:	ldrb	r0, [r2, #2]!
   28da0:	mov	r4, r2
   28da4:	cmp	r0, #32
   28da8:	bhi	28110 <main@@Base+0x14d54>
   28dac:	mov	r0, r9
   28db0:	mov	r2, r8
   28db4:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   28db8:	b	2810c <main@@Base+0x14d50>
   28dbc:	mov	r0, r9
   28dc0:	mov	r2, r8
   28dc4:	mov	r3, #33	; 0x21
   28dc8:	b	280bc <main@@Base+0x14d00>
   28dcc:	ldr	r7, [sp, #8]
   28dd0:	b	2811c <main@@Base+0x14d60>
   28dd4:	andeq	sp, r0, sp, lsl sl
   28dd8:	andeq	sp, r1, r4, asr r6
   28ddc:	andeq	sp, r1, r8, asr #25
   28de0:	add	r0, r0, #1
   28de4:	uxtb	r1, r0
   28de8:	cmp	r1, #12
   28dec:	movhi	r0, #0
   28df0:	bxhi	lr
   28df4:	ldr	r1, [pc, #12]	; 28e08 <main@@Base+0x15a4c>
   28df8:	sxtb	r0, r0
   28dfc:	add	r1, pc, r1
   28e00:	ldr	r0, [r1, r0, lsl #2]
   28e04:	bx	lr
   28e08:	andeq	sl, r0, ip, asr #25
   28e0c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   28e10:	add	fp, sp, #28
   28e14:	sub	sp, sp, #36	; 0x24
   28e18:	mov	r9, r0
   28e1c:	mov	r0, #0
   28e20:	mov	sl, r2
   28e24:	mov	r6, r1
   28e28:	mov	r1, #4
   28e2c:	mov	r2, #4
   28e30:	str	r3, [sp, #12]
   28e34:	str	r0, [r3]
   28e38:	ldr	r0, [r9]
   28e3c:	bl	2a964 <flatcc_builder_start_struct@@Base>
   28e40:	cmp	r0, #0
   28e44:	beq	28ec8 <main@@Base+0x15b0c>
   28e48:	cmp	r6, sl
   28e4c:	beq	28e84 <main@@Base+0x15ac8>
   28e50:	ldrb	r1, [r6]
   28e54:	cmp	r1, #123	; 0x7b
   28e58:	bne	28e84 <main@@Base+0x15ac8>
   28e5c:	add	r1, r6, #1
   28e60:	str	r0, [sp, #8]
   28e64:	sub	r0, sl, r1
   28e68:	cmp	r0, #2
   28e6c:	blt	28efc <main@@Base+0x15b40>
   28e70:	ldrb	r0, [r1]
   28e74:	cmp	r0, #32
   28e78:	bls	28eec <main@@Base+0x15b30>
   28e7c:	mov	r6, r1
   28e80:	b	28f0c <main@@Base+0x15b50>
   28e84:	mov	r0, r9
   28e88:	mov	r1, r6
   28e8c:	mov	r2, sl
   28e90:	mov	r3, #21
   28e94:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   28e98:	mov	r6, r0
   28e9c:	cmp	r6, sl
   28ea0:	mov	r1, sl
   28ea4:	beq	28ecc <main@@Base+0x15b10>
   28ea8:	ldr	r0, [r9]
   28eac:	bl	2aa4c <flatcc_builder_end_struct@@Base>
   28eb0:	ldr	r1, [sp, #12]
   28eb4:	cmp	r0, #0
   28eb8:	str	r0, [r1]
   28ebc:	mov	r1, r6
   28ec0:	bne	28ee0 <main@@Base+0x15b24>
   28ec4:	b	28ecc <main@@Base+0x15b10>
   28ec8:	mov	r1, r6
   28ecc:	mov	r0, r9
   28ed0:	mov	r2, sl
   28ed4:	mov	r3, #33	; 0x21
   28ed8:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   28edc:	mov	r6, r0
   28ee0:	mov	r0, r6
   28ee4:	sub	sp, fp, #28
   28ee8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28eec:	bne	28efc <main@@Base+0x15b40>
   28ef0:	ldrb	r0, [r6, #2]!
   28ef4:	cmp	r0, #32
   28ef8:	bhi	28f0c <main@@Base+0x15b50>
   28efc:	mov	r0, r9
   28f00:	mov	r2, sl
   28f04:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   28f08:	mov	r6, r0
   28f0c:	cmp	r6, sl
   28f10:	mov	r2, sl
   28f14:	beq	28f58 <main@@Base+0x15b9c>
   28f18:	ldrb	r0, [r6]
   28f1c:	cmp	r0, #125	; 0x7d
   28f20:	bne	28f54 <main@@Base+0x15b98>
   28f24:	add	r1, r6, #1
   28f28:	sub	r0, sl, r1
   28f2c:	cmp	r0, #2
   28f30:	blt	2944c <main@@Base+0x16090>
   28f34:	ldrb	r0, [r1]
   28f38:	cmp	r0, #32
   28f3c:	bhi	29410 <main@@Base+0x16054>
   28f40:	bne	2944c <main@@Base+0x16090>
   28f44:	ldrb	r0, [r6, #2]!
   28f48:	cmp	r0, #32
   28f4c:	bhi	28e9c <main@@Base+0x15ae0>
   28f50:	b	2944c <main@@Base+0x16090>
   28f54:	mov	r2, r6
   28f58:	cmp	r2, sl
   28f5c:	mov	r1, sl
   28f60:	beq	28fac <main@@Base+0x15bf0>
   28f64:	ldrb	r0, [r2]
   28f68:	cmp	r0, #46	; 0x2e
   28f6c:	beq	28f84 <main@@Base+0x15bc8>
   28f70:	cmp	r0, #34	; 0x22
   28f74:	bne	28fa0 <main@@Base+0x15be4>
   28f78:	mov	r0, #0
   28f7c:	add	r1, r2, #1
   28f80:	b	28fa8 <main@@Base+0x15bec>
   28f84:	mov	r1, r2
   28f88:	mov	r0, r9
   28f8c:	mov	r2, sl
   28f90:	mov	r3, #5
   28f94:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   28f98:	mov	r1, r0
   28f9c:	b	28fac <main@@Base+0x15bf0>
   28fa0:	mov	r0, #1
   28fa4:	mov	r1, r2
   28fa8:	str	r0, [r9, #12]
   28fac:	sub	r0, sl, r1
   28fb0:	mov	r2, #8
   28fb4:	cmp	r0, #8
   28fb8:	movcs	r0, r2
   28fbc:	sub	r2, r0, #1
   28fc0:	cmp	r2, #7
   28fc4:	bhi	29100 <main@@Base+0x15d44>
   28fc8:	add	r5, pc, #36	; 0x24
   28fcc:	mov	r8, #0
   28fd0:	mov	ip, #0
   28fd4:	mov	lr, #0
   28fd8:	mov	r6, #0
   28fdc:	mov	r3, #0
   28fe0:	mov	r7, #0
   28fe4:	mov	r4, #0
   28fe8:	ldr	r0, [r5, r2, lsl #2]
   28fec:	mov	r2, #0
   28ff0:	add	pc, r5, r0
   28ff4:	andeq	r0, r0, r4, rrx
   28ff8:	andeq	r0, r0, ip, asr r0
   28ffc:	andeq	r0, r0, r4, asr r0
   29000:	andeq	r0, r0, ip, asr #32
   29004:	andeq	r0, r0, r0, asr #32
   29008:	andeq	r0, r0, r4, lsr r0
   2900c:	andeq	r0, r0, r4, lsr #32
   29010:	andeq	r0, r0, r0, lsr #32
   29014:	ldrb	ip, [r1, #7]
   29018:	ldrb	r0, [r1, #6]
   2901c:	mov	lr, r8
   29020:	orr	r0, ip, r0, lsl #8
   29024:	mov	r8, r0
   29028:	ldrb	r0, [r1, #5]
   2902c:	mov	r6, lr
   29030:	orr	r8, r8, r0, lsl #16
   29034:	ldrb	r0, [r1, #4]
   29038:	mov	r3, r6
   2903c:	orr	r8, r8, r0, lsl #24
   29040:	ldrb	r0, [r1, #3]
   29044:	orr	r7, r0, r3
   29048:	ldrb	r0, [r1, #2]
   2904c:	orr	r4, r7, r0, lsl #8
   29050:	ldrb	r0, [r1, #1]
   29054:	orr	r2, r4, r0, lsl #16
   29058:	ldrb	r3, [r1]
   2905c:	movw	r0, #29285	; 0x7265
   29060:	movt	r0, #29535	; 0x735f
   29064:	eor	r0, r8, r0
   29068:	orr	r2, r2, r3, lsl #24
   2906c:	movw	r3, #28523	; 0x6f6b
   29070:	movt	r3, #25199	; 0x626f
   29074:	eor	r2, r2, r3
   29078:	orrs	r0, r0, r2
   2907c:	bne	29100 <main@@Base+0x15d44>
   29080:	add	r8, r1, #8
   29084:	mov	r3, #8
   29088:	sub	r0, sl, r8
   2908c:	cmp	r0, #8
   29090:	movcc	r3, r0
   29094:	sub	r2, r3, #2
   29098:	cmp	r2, #7
   2909c:	bcs	29108 <main@@Base+0x15d4c>
   290a0:	ldrb	r2, [r1, #9]
   290a4:	lsl	r3, r2, #16
   290a8:	mov	r2, #0
   290ac:	ldrb	r7, [r8]
   290b0:	orr	r3, r3, r7, lsl #24
   290b4:	movw	r7, #0
   290b8:	movt	r7, #24932	; 0x6164
   290bc:	eor	r3, r3, r7
   290c0:	orrs	r2, r2, r3
   290c4:	bne	291b4 <main@@Base+0x15df8>
   290c8:	cmp	r0, #3
   290cc:	blt	291b4 <main@@Base+0x15df8>
   290d0:	mov	r2, r1
   290d4:	ldr	r3, [r9, #12]
   290d8:	ldrb	r0, [r2, #10]!
   290dc:	cmp	r3, #0
   290e0:	beq	2911c <main@@Base+0x15d60>
   290e4:	cmp	r0, #33	; 0x21
   290e8:	bcc	290f4 <main@@Base+0x15d38>
   290ec:	cmp	r0, #58	; 0x3a
   290f0:	bne	291b4 <main@@Base+0x15df8>
   290f4:	mov	r0, #0
   290f8:	str	r0, [r9, #12]
   290fc:	b	29128 <main@@Base+0x15d6c>
   29100:	mov	r0, r9
   29104:	b	291bc <main@@Base+0x15e00>
   29108:	cmp	r3, #1
   2910c:	mov	r2, #0
   29110:	mov	r3, #0
   29114:	beq	290ac <main@@Base+0x15cf0>
   29118:	b	291b4 <main@@Base+0x15df8>
   2911c:	cmp	r0, #34	; 0x22
   29120:	bne	291b4 <main@@Base+0x15df8>
   29124:	add	r2, r1, #11
   29128:	sub	r0, sl, r2
   2912c:	cmp	r0, #2
   29130:	blt	29164 <main@@Base+0x15da8>
   29134:	ldrb	r0, [r2]
   29138:	cmp	r0, #32
   2913c:	bls	29150 <main@@Base+0x15d94>
   29140:	mov	r7, r2
   29144:	cmp	r7, sl
   29148:	bne	29180 <main@@Base+0x15dc4>
   2914c:	b	2928c <main@@Base+0x15ed0>
   29150:	bne	29164 <main@@Base+0x15da8>
   29154:	mov	r7, r2
   29158:	ldrb	r0, [r7, #1]!
   2915c:	cmp	r0, #32
   29160:	bhi	29178 <main@@Base+0x15dbc>
   29164:	mov	r1, r2
   29168:	mov	r0, r9
   2916c:	mov	r2, sl
   29170:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   29174:	mov	r7, r0
   29178:	cmp	r7, sl
   2917c:	beq	2928c <main@@Base+0x15ed0>
   29180:	ldrb	r0, [r7]
   29184:	cmp	r0, #58	; 0x3a
   29188:	bne	2928c <main@@Base+0x15ed0>
   2918c:	add	r1, r7, #1
   29190:	sub	r0, sl, r1
   29194:	cmp	r0, #2
   29198:	blt	292b4 <main@@Base+0x15ef8>
   2919c:	ldrb	r0, [r1]
   291a0:	cmp	r0, #32
   291a4:	bls	292a4 <main@@Base+0x15ee8>
   291a8:	mov	r7, r1
   291ac:	cmp	r8, r7
   291b0:	bne	292cc <main@@Base+0x15f10>
   291b4:	mov	r0, r9
   291b8:	mov	r1, r8
   291bc:	mov	r2, sl
   291c0:	bl	2f87c <flatcc_json_parser_unmatched_symbol@@Base>
   291c4:	mov	r1, r0
   291c8:	sub	r0, sl, r1
   291cc:	cmp	r0, #2
   291d0:	blt	29204 <main@@Base+0x15e48>
   291d4:	ldrb	r0, [r1]
   291d8:	cmp	r0, #32
   291dc:	bls	291f0 <main@@Base+0x15e34>
   291e0:	mov	r2, r1
   291e4:	cmp	r2, sl
   291e8:	bne	2921c <main@@Base+0x15e60>
   291ec:	b	293e4 <main@@Base+0x16028>
   291f0:	bne	29204 <main@@Base+0x15e48>
   291f4:	mov	r2, r1
   291f8:	ldrb	r0, [r2, #1]!
   291fc:	cmp	r0, #32
   29200:	bhi	29214 <main@@Base+0x15e58>
   29204:	mov	r0, r9
   29208:	mov	r2, sl
   2920c:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   29210:	mov	r2, r0
   29214:	cmp	r2, sl
   29218:	beq	293e4 <main@@Base+0x16028>
   2921c:	ldrb	r0, [r2]
   29220:	cmp	r0, #44	; 0x2c
   29224:	bne	293ec <main@@Base+0x16030>
   29228:	add	r1, r2, #1
   2922c:	sub	r0, sl, r1
   29230:	cmp	r0, #2
   29234:	blt	29264 <main@@Base+0x15ea8>
   29238:	ldrb	r0, [r1]
   2923c:	cmp	r0, #32
   29240:	bls	29254 <main@@Base+0x15e98>
   29244:	mov	r2, r1
   29248:	cmp	r2, sl
   2924c:	bne	2927c <main@@Base+0x15ec0>
   29250:	b	29418 <main@@Base+0x1605c>
   29254:	bne	29264 <main@@Base+0x15ea8>
   29258:	ldrb	r0, [r2, #2]!
   2925c:	cmp	r0, #32
   29260:	bhi	29274 <main@@Base+0x15eb8>
   29264:	mov	r0, r9
   29268:	mov	r2, sl
   2926c:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   29270:	mov	r2, r0
   29274:	cmp	r2, sl
   29278:	beq	29418 <main@@Base+0x1605c>
   2927c:	ldrb	r0, [r2]
   29280:	cmp	r0, #125	; 0x7d
   29284:	bne	28f58 <main@@Base+0x15b9c>
   29288:	b	293f4 <main@@Base+0x16038>
   2928c:	mov	r0, r9
   29290:	mov	r1, r7
   29294:	mov	r2, sl
   29298:	mov	r3, #4
   2929c:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   292a0:	b	292c0 <main@@Base+0x15f04>
   292a4:	bne	292b4 <main@@Base+0x15ef8>
   292a8:	ldrb	r0, [r7, #2]!
   292ac:	cmp	r0, #32
   292b0:	bhi	292c4 <main@@Base+0x15f08>
   292b4:	mov	r0, r9
   292b8:	mov	r2, sl
   292bc:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   292c0:	mov	r7, r0
   292c4:	cmp	r8, r7
   292c8:	beq	291b4 <main@@Base+0x15df8>
   292cc:	mov	r6, #0
   292d0:	cmp	r7, sl
   292d4:	str	r6, [sp, #28]
   292d8:	str	r6, [sp, #24]
   292dc:	str	r6, [sp, #16]
   292e0:	str	r6, [sp, #20]
   292e4:	beq	29340 <main@@Base+0x15f84>
   292e8:	add	r0, sp, #24
   292ec:	mov	r1, r7
   292f0:	mov	r2, sl
   292f4:	add	r3, sp, #20
   292f8:	str	r0, [sp]
   292fc:	mov	r0, r9
   29300:	bl	3132c <flatcc_json_parser_integer@@Base>
   29304:	cmp	r0, r7
   29308:	beq	29350 <main@@Base+0x15f94>
   2930c:	ldr	r3, [sp, #20]
   29310:	mov	r1, r0
   29314:	ldr	r0, [sp, #24]
   29318:	ldr	r2, [sp, #28]
   2931c:	cmp	r3, #0
   29320:	beq	29360 <main@@Base+0x15fa4>
   29324:	subs	r3, r0, #-2147483647	; 0x80000001
   29328:	sbcs	r2, r2, #0
   2932c:	bcc	2938c <main@@Base+0x15fd0>
   29330:	mov	r0, r9
   29334:	mov	r2, sl
   29338:	mov	r3, #8
   2933c:	b	29378 <main@@Base+0x15fbc>
   29340:	mov	r1, sl
   29344:	cmp	r7, r1
   29348:	bne	293d8 <main@@Base+0x1601c>
   2934c:	b	293a4 <main@@Base+0x15fe8>
   29350:	mov	r1, r7
   29354:	cmp	r7, r1
   29358:	bne	293d8 <main@@Base+0x1601c>
   2935c:	b	293a4 <main@@Base+0x15fe8>
   29360:	subs	r3, r0, #-2147483648	; 0x80000000
   29364:	sbcs	r2, r2, #0
   29368:	bcc	29394 <main@@Base+0x15fd8>
   2936c:	mov	r0, r9
   29370:	mov	r2, sl
   29374:	mov	r3, #7
   29378:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   2937c:	mov	r1, r0
   29380:	cmp	r7, r1
   29384:	bne	293d8 <main@@Base+0x1601c>
   29388:	b	293a4 <main@@Base+0x15fe8>
   2938c:	rsb	r6, r0, #0
   29390:	b	29398 <main@@Base+0x15fdc>
   29394:	mov	r6, r0
   29398:	str	r6, [sp, #16]
   2939c:	cmp	r7, r1
   293a0:	bne	293d8 <main@@Base+0x1601c>
   293a4:	add	r0, sp, #16
   293a8:	mov	r1, r7
   293ac:	mov	r2, sl
   293b0:	str	r0, [sp]
   293b4:	mov	r0, r9
   293b8:	ldr	r3, [pc, #172]	; 2946c <main@@Base+0x160b0>
   293bc:	add	r3, pc, r3
   293c0:	bl	2336c <main@@Base+0xffb0>
   293c4:	mov	r1, r0
   293c8:	cmp	r0, r7
   293cc:	cmpne	r1, sl
   293d0:	beq	2945c <main@@Base+0x160a0>
   293d4:	ldr	r6, [sp, #16]
   293d8:	ldr	r0, [sp, #8]
   293dc:	str	r6, [r0]
   293e0:	b	291c8 <main@@Base+0x15e0c>
   293e4:	mov	r1, sl
   293e8:	b	28ecc <main@@Base+0x15b10>
   293ec:	cmp	r0, #125	; 0x7d
   293f0:	bne	29424 <main@@Base+0x16068>
   293f4:	add	r1, r2, #1
   293f8:	sub	r0, sl, r1
   293fc:	cmp	r0, #2
   29400:	blt	2944c <main@@Base+0x16090>
   29404:	ldrb	r0, [r1]
   29408:	cmp	r0, #32
   2940c:	bls	29438 <main@@Base+0x1607c>
   29410:	mov	r6, r1
   29414:	b	28e9c <main@@Base+0x15ae0>
   29418:	mov	r0, r9
   2941c:	mov	r1, sl
   29420:	b	2942c <main@@Base+0x16070>
   29424:	mov	r0, r9
   29428:	mov	r1, r2
   2942c:	mov	r2, sl
   29430:	mov	r3, #10
   29434:	b	28e94 <main@@Base+0x15ad8>
   29438:	bne	2944c <main@@Base+0x16090>
   2943c:	ldrb	r0, [r2, #2]!
   29440:	mov	r6, r2
   29444:	cmp	r0, #32
   29448:	bhi	28e9c <main@@Base+0x15ae0>
   2944c:	mov	r0, r9
   29450:	mov	r2, sl
   29454:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   29458:	b	28e98 <main@@Base+0x15adc>
   2945c:	mov	r0, r9
   29460:	mov	r2, sl
   29464:	mov	r3, #33	; 0x21
   29468:	b	28e94 <main@@Base+0x15ad8>
   2946c:	andeq	ip, r1, r8, ror #30
   29470:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   29474:	add	fp, sp, #28
   29478:	sub	sp, sp, #44	; 0x2c
   2947c:	mov	r6, r2
   29480:	ldr	r2, [fp, #8]
   29484:	mov	r5, r0
   29488:	mov	r0, #0
   2948c:	mov	sl, r3
   29490:	cmp	r1, r6
   29494:	strh	r0, [r2]
   29498:	beq	294dc <main@@Base+0x16120>
   2949c:	ldrb	r0, [r1]
   294a0:	cmp	r0, #46	; 0x2e
   294a4:	beq	294bc <main@@Base+0x16100>
   294a8:	cmp	r0, #34	; 0x22
   294ac:	bne	294d4 <main@@Base+0x16118>
   294b0:	mov	r0, #0
   294b4:	add	r1, r1, #1
   294b8:	b	294d8 <main@@Base+0x1611c>
   294bc:	mov	r0, r5
   294c0:	mov	r2, r6
   294c4:	mov	r3, #5
   294c8:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   294cc:	mov	r1, r0
   294d0:	b	294dc <main@@Base+0x16120>
   294d4:	mov	r0, #1
   294d8:	str	r0, [r5, #12]
   294dc:	ldr	r0, [r5, #12]
   294e0:	cmp	r0, #0
   294e4:	beq	294f8 <main@@Base+0x1613c>
   294e8:	mov	r7, r1
   294ec:	cmp	r7, r6
   294f0:	bne	2953c <main@@Base+0x16180>
   294f4:	b	29674 <main@@Base+0x162b8>
   294f8:	sub	r0, r6, r1
   294fc:	cmp	r0, #2
   29500:	blt	29524 <main@@Base+0x16168>
   29504:	ldrb	r0, [r1]
   29508:	cmp	r0, #32
   2950c:	bhi	294e8 <main@@Base+0x1612c>
   29510:	bne	29524 <main@@Base+0x16168>
   29514:	mov	r7, r1
   29518:	ldrb	r0, [r7, #1]!
   2951c:	cmp	r0, #32
   29520:	bhi	29534 <main@@Base+0x16178>
   29524:	mov	r0, r5
   29528:	mov	r2, r6
   2952c:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   29530:	mov	r7, r0
   29534:	cmp	r7, r6
   29538:	beq	29674 <main@@Base+0x162b8>
   2953c:	mov	r1, #0
   29540:	add	r0, sl, #4
   29544:	add	r8, sp, #32
   29548:	add	r9, sp, #28
   2954c:	str	sl, [sp, #12]
   29550:	str	r1, [sp, #16]
   29554:	mov	r1, #0
   29558:	str	r0, [sp, #8]
   2955c:	str	r1, [sp, #20]
   29560:	ldr	r4, [sl]
   29564:	mov	sl, r0
   29568:	add	r0, sp, #24
   2956c:	mov	r1, r7
   29570:	mov	r2, r6
   29574:	mov	r3, r9
   29578:	str	r8, [sp]
   2957c:	str	r0, [sp, #4]
   29580:	mov	r0, r5
   29584:	blx	r4
   29588:	cmp	r0, r6
   2958c:	beq	29674 <main@@Base+0x162b8>
   29590:	mov	r4, r0
   29594:	cmp	r0, r7
   29598:	bne	295ac <main@@Base+0x161f0>
   2959c:	ldr	r4, [sl], #4
   295a0:	cmp	r4, #0
   295a4:	bne	29568 <main@@Base+0x161ac>
   295a8:	b	2967c <main@@Base+0x162c0>
   295ac:	ldr	r7, [sp, #20]
   295b0:	cmp	r7, #0
   295b4:	beq	295c4 <main@@Base+0x16208>
   295b8:	ldr	r0, [r5, #12]
   295bc:	cmp	r0, #0
   295c0:	bne	296a0 <main@@Base+0x162e4>
   295c4:	ldr	r0, [sp, #28]
   295c8:	cmp	r0, #0
   295cc:	beq	295f4 <main@@Base+0x16238>
   295d0:	mov	r0, r5
   295d4:	mov	r1, r4
   295d8:	mov	r2, r6
   295dc:	mov	r3, #8
   295e0:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   295e4:	ldr	sl, [sp, #12]
   295e8:	cmp	r0, r6
   295ec:	bne	2963c <main@@Base+0x16280>
   295f0:	b	29674 <main@@Base+0x162b8>
   295f4:	ldr	r0, [sp, #32]
   295f8:	ldr	r1, [sp, #36]	; 0x24
   295fc:	ldr	sl, [sp, #12]
   29600:	subs	r2, r0, #65536	; 0x10000
   29604:	sbcs	r1, r1, #0
   29608:	bcc	2962c <main@@Base+0x16270>
   2960c:	mov	r0, r5
   29610:	mov	r1, r4
   29614:	mov	r2, r6
   29618:	mov	r3, #7
   2961c:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   29620:	cmp	r0, r6
   29624:	bne	2963c <main@@Base+0x16280>
   29628:	b	29674 <main@@Base+0x162b8>
   2962c:	str	r0, [sp, #16]
   29630:	mov	r0, r4
   29634:	cmp	r0, r6
   29638:	beq	29674 <main@@Base+0x162b8>
   2963c:	ldr	r0, [fp, #8]
   29640:	ldr	r2, [sp, #16]
   29644:	add	r7, r7, #1
   29648:	str	r7, [sp, #20]
   2964c:	mov	r7, r4
   29650:	mov	r1, r0
   29654:	ldrh	r0, [r0]
   29658:	add	r0, r0, r2
   2965c:	strh	r0, [r1]
   29660:	ldr	r0, [sp, #24]
   29664:	cmp	r0, #0
   29668:	ldr	r0, [sp, #8]
   2966c:	bne	29560 <main@@Base+0x161a4>
   29670:	b	29694 <main@@Base+0x162d8>
   29674:	mov	r4, r6
   29678:	b	29694 <main@@Base+0x162d8>
   2967c:	mov	r0, r5
   29680:	mov	r1, r7
   29684:	mov	r2, r6
   29688:	mov	r3, #23
   2968c:	bl	2efd0 <flatcc_json_parser_set_error@@Base>
   29690:	mov	r4, r0
   29694:	mov	r0, r4
   29698:	sub	sp, fp, #28
   2969c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   296a0:	mov	r0, r5
   296a4:	mov	r1, r4
   296a8:	mov	r2, r6
   296ac:	mov	r3, #14
   296b0:	b	2968c <main@@Base+0x162d0>

000296b4 <flatcc_builder_default_alloc@@Base>:
   296b4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   296b8:	add	fp, sp, #24
   296bc:	mov	r4, r1
   296c0:	cmp	r2, #0
   296c4:	beq	29710 <flatcc_builder_default_alloc@@Base+0x5c>
   296c8:	ldr	r0, [fp, #8]
   296cc:	mov	r8, r3
   296d0:	sub	r1, r0, #1
   296d4:	cmp	r1, #6
   296d8:	bhi	29740 <flatcc_builder_default_alloc@@Base+0x8c>
   296dc:	add	r3, pc, #8
   296e0:	mov	r0, #256	; 0x100
   296e4:	ldr	r1, [r3, r1, lsl #2]
   296e8:	add	pc, r3, r1
   296ec:	andeq	r0, r0, r8, rrx
   296f0:	andeq	r0, r0, r4, asr r0
   296f4:	andeq	r0, r0, r4, asr r0
   296f8:	andeq	r0, r0, ip, lsl r0
   296fc:	andeq	r0, r0, ip, asr r0
   29700:	andeq	r0, r0, r4, asr r0
   29704:	andeq	r0, r0, r4, rrx
   29708:	mov	r0, #288	; 0x120
   2970c:	b	29754 <flatcc_builder_default_alloc@@Base+0xa0>
   29710:	ldr	r0, [r4]
   29714:	cmp	r0, #0
   29718:	beq	29734 <flatcc_builder_default_alloc@@Base+0x80>
   2971c:	bl	12a9c <free@plt>
   29720:	mov	r6, #0
   29724:	mov	r0, r6
   29728:	str	r6, [r4]
   2972c:	str	r6, [r4, #4]
   29730:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   29734:	mov	r6, #0
   29738:	mov	r0, r6
   2973c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   29740:	mov	r0, #32
   29744:	b	29754 <flatcc_builder_default_alloc@@Base+0xa0>
   29748:	mov	r0, r2
   2974c:	b	29754 <flatcc_builder_default_alloc@@Base+0xa0>
   29750:	mov	r0, #64	; 0x40
   29754:	mov	r7, r0
   29758:	lsl	r0, r0, #1
   2975c:	cmp	r7, r2
   29760:	bcc	29754 <flatcc_builder_default_alloc@@Base+0xa0>
   29764:	ldr	r0, [r4, #4]
   29768:	mov	r6, #0
   2976c:	cmp	r0, r2
   29770:	lsrcs	r0, r0, #1
   29774:	cmpcs	r0, r7
   29778:	bcs	297bc <flatcc_builder_default_alloc@@Base+0x108>
   2977c:	ldr	r0, [r4]
   29780:	mov	r1, r7
   29784:	bl	12ae4 <realloc@plt>
   29788:	cmp	r0, #0
   2978c:	beq	297c4 <flatcc_builder_default_alloc@@Base+0x110>
   29790:	mov	r5, r0
   29794:	cmp	r8, #0
   29798:	beq	297b8 <flatcc_builder_default_alloc@@Base+0x104>
   2979c:	ldr	r1, [r4, #4]
   297a0:	cmp	r7, r1
   297a4:	bls	297b8 <flatcc_builder_default_alloc@@Base+0x104>
   297a8:	add	r0, r5, r1
   297ac:	sub	r2, r7, r1
   297b0:	mov	r1, #0
   297b4:	bl	12b5c <memset@plt>
   297b8:	stm	r4, {r5, r7}
   297bc:	mov	r0, r6
   297c0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   297c4:	mvn	r6, #0
   297c8:	mov	r0, r6
   297cc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000297d0 <flatcc_builder_flush_vtable_cache@@Base>:
   297d0:	push	{r4, r5, fp, lr}
   297d4:	add	fp, sp, #8
   297d8:	mov	r4, r0
   297dc:	ldr	r0, [r0, #116]	; 0x74
   297e0:	cmp	r0, #0
   297e4:	popeq	{r4, r5, fp, pc}
   297e8:	ldr	r0, [r4, #92]	; 0x5c
   297ec:	ldr	r2, [r4, #96]	; 0x60
   297f0:	mov	r1, #0
   297f4:	mov	r5, #0
   297f8:	bl	12b5c <memset@plt>
   297fc:	mov	r0, #16
   29800:	str	r5, [r4, #120]	; 0x78
   29804:	str	r0, [r4, #124]	; 0x7c
   29808:	pop	{r4, r5, fp, pc}

0002980c <flatcc_builder_custom_init@@Base>:
   2980c:	push	{r4, r5, r6, r7, fp, lr}
   29810:	add	fp, sp, #16
   29814:	mov	r6, r2
   29818:	mov	r7, r1
   2981c:	mov	r1, #0
   29820:	mov	r2, #232	; 0xe8
   29824:	mov	r5, r3
   29828:	mov	r4, r0
   2982c:	bl	12b5c <memset@plt>
   29830:	ldr	r0, [fp, #8]
   29834:	cmp	r7, #0
   29838:	bne	29850 <flatcc_builder_custom_init@@Base+0x44>
   2983c:	mov	r1, #1
   29840:	add	r6, r4, #188	; 0xbc
   29844:	str	r1, [r4, #184]	; 0xb8
   29848:	ldr	r7, [pc, #40]	; 29878 <flatcc_builder_custom_init@@Base+0x6c>
   2984c:	ldr	r7, [pc, r7]
   29850:	ldr	r1, [pc, #36]	; 2987c <flatcc_builder_custom_init@@Base+0x70>
   29854:	cmp	r5, #0
   29858:	ldr	r1, [pc, r1]
   2985c:	str	r6, [r4, #36]	; 0x24
   29860:	str	r0, [r4, #40]	; 0x28
   29864:	mov	r0, #0
   29868:	movne	r1, r5
   2986c:	str	r7, [r4, #44]	; 0x2c
   29870:	str	r1, [r4, #48]	; 0x30
   29874:	pop	{r4, r5, r6, r7, fp, pc}
   29878:	andeq	ip, r1, r8, lsr r8
   2987c:	andeq	ip, r1, r4, lsr #16

00029880 <flatcc_builder_init@@Base>:
   29880:	push	{r4, r5, fp, lr}
   29884:	add	fp, sp, #8
   29888:	mov	r1, #0
   2988c:	mov	r2, #232	; 0xe8
   29890:	mov	r4, r0
   29894:	mov	r5, #0
   29898:	bl	12b5c <memset@plt>
   2989c:	mov	r0, #1
   298a0:	str	r0, [r4, #184]	; 0xb8
   298a4:	add	r0, r4, #188	; 0xbc
   298a8:	ldr	r1, [pc, #32]	; 298d0 <flatcc_builder_init@@Base+0x50>
   298ac:	ldr	r1, [pc, r1]
   298b0:	ldr	r2, [pc, #28]	; 298d4 <flatcc_builder_init@@Base+0x54>
   298b4:	ldr	r2, [pc, r2]
   298b8:	str	r0, [r4, #36]	; 0x24
   298bc:	mov	r0, #0
   298c0:	str	r5, [r4, #40]	; 0x28
   298c4:	str	r2, [r4, #44]	; 0x2c
   298c8:	str	r1, [r4, #48]	; 0x30
   298cc:	pop	{r4, r5, fp, pc}
   298d0:	ldrdeq	ip, [r1], -r0
   298d4:	ldrdeq	ip, [r1], -r0

000298d8 <flatcc_builder_custom_reset@@Base>:
   298d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   298dc:	add	fp, sp, #28
   298e0:	sub	sp, sp, #4
   298e4:	mov	r9, r2
   298e8:	mov	r8, r1
   298ec:	mov	sl, r0
   298f0:	add	r7, r0, #52	; 0x34
   298f4:	mov	r5, #0
   298f8:	b	29918 <flatcc_builder_custom_reset@@Base+0x40>
   298fc:	ldr	r0, [r6, #56]	; 0x38
   29900:	cmp	r0, #0
   29904:	bne	29a00 <flatcc_builder_custom_reset@@Base+0x128>
   29908:	add	r5, r5, #1
   2990c:	add	r7, r7, #8
   29910:	cmp	r5, #8
   29914:	beq	2996c <flatcc_builder_custom_reset@@Base+0x94>
   29918:	add	r6, sl, r5, lsl #3
   2991c:	ldr	r0, [r6, #52]	; 0x34
   29920:	cmp	r0, #0
   29924:	beq	298fc <flatcc_builder_custom_reset@@Base+0x24>
   29928:	cmp	r9, #0
   2992c:	cmpne	r5, #5
   29930:	beq	2995c <flatcc_builder_custom_reset@@Base+0x84>
   29934:	ldr	r0, [sl, #40]	; 0x28
   29938:	ldr	r4, [sl, #48]	; 0x30
   2993c:	mov	r1, r7
   29940:	mov	r2, #1
   29944:	mov	r3, #1
   29948:	str	r5, [sp]
   2994c:	blx	r4
   29950:	cmp	r0, #0
   29954:	bne	299f0 <flatcc_builder_custom_reset@@Base+0x118>
   29958:	ldr	r0, [r6, #52]	; 0x34
   2995c:	ldr	r2, [r6, #56]	; 0x38
   29960:	mov	r1, #0
   29964:	bl	12b5c <memset@plt>
   29968:	b	29908 <flatcc_builder_custom_reset@@Base+0x30>
   2996c:	mov	r0, #0
   29970:	vmov.i32	q8, #0	; 0x00000000
   29974:	mov	r5, #0
   29978:	str	r0, [sl, #120]	; 0x78
   2997c:	ldr	r1, [sl, #124]	; 0x7c
   29980:	cmp	r1, #0
   29984:	movne	r1, #16
   29988:	strne	r1, [sl, #124]	; 0x7c
   2998c:	add	r1, sl, #148	; 0x94
   29990:	str	r0, [sl, #136]	; 0x88
   29994:	str	r0, [sl, #140]	; 0x8c
   29998:	strh	r0, [sl, #128]	; 0x80
   2999c:	str	r0, [sl, #32]
   299a0:	cmp	r8, #0
   299a4:	vst1.32	{d16-d17}, [r1]
   299a8:	ldr	r2, [sl, #60]	; 0x3c
   299ac:	ldr	r1, [sl, #52]	; 0x34
   299b0:	ldr	r3, [sl, #76]	; 0x4c
   299b4:	str	r2, [sl, #16]
   299b8:	str	r0, [sl, #20]
   299bc:	str	r0, [sl, #24]
   299c0:	movne	r0, #0
   299c4:	str	r3, [sl]
   299c8:	str	r1, [sl, #4]
   299cc:	strne	r0, [sl, #172]	; 0xac
   299d0:	strne	r0, [sl, #176]	; 0xb0
   299d4:	strne	r0, [sl, #180]	; 0xb4
   299d8:	ldr	r0, [sl, #184]	; 0xb8
   299dc:	cmp	r0, #0
   299e0:	beq	299f4 <flatcc_builder_custom_reset@@Base+0x11c>
   299e4:	add	r0, sl, #188	; 0xbc
   299e8:	bl	2e574 <flatcc_emitter_reset@@Base>
   299ec:	b	299f4 <flatcc_builder_custom_reset@@Base+0x11c>
   299f0:	mvn	r5, #0
   299f4:	mov	r0, r5
   299f8:	sub	sp, fp, #28
   299fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   29a00:	ldr	r0, [pc, #24]	; 29a20 <flatcc_builder_custom_reset@@Base+0x148>
   29a04:	ldr	r1, [pc, #24]	; 29a24 <flatcc_builder_custom_reset@@Base+0x14c>
   29a08:	ldr	r3, [pc, #24]	; 29a28 <flatcc_builder_custom_reset@@Base+0x150>
   29a0c:	movw	r2, #434	; 0x1b2
   29a10:	add	r0, pc, r0
   29a14:	add	r1, pc, r1
   29a18:	add	r3, pc, r3
   29a1c:	bl	12bbc <__assert_fail@plt>
   29a20:	andeq	sl, r0, ip, ror #5
   29a24:	strdeq	sl, [r0], -sl	; <UNPREDICTABLE>
   29a28:	andeq	sl, r0, r3, asr r3

00029a2c <flatcc_builder_reset@@Base>:
   29a2c:	push	{r4, sl, fp, lr}
   29a30:	add	fp, sp, #8
   29a34:	mov	r4, r0
   29a38:	ldr	r0, [r0, #52]	; 0x34
   29a3c:	ldr	r2, [r4, #56]	; 0x38
   29a40:	cmp	r0, #0
   29a44:	beq	29a54 <flatcc_builder_reset@@Base+0x28>
   29a48:	mov	r1, #0
   29a4c:	bl	12b5c <memset@plt>
   29a50:	b	29a5c <flatcc_builder_reset@@Base+0x30>
   29a54:	cmp	r2, #0
   29a58:	bne	29bc4 <flatcc_builder_reset@@Base+0x198>
   29a5c:	ldr	r0, [r4, #60]	; 0x3c
   29a60:	ldr	r2, [r4, #64]	; 0x40
   29a64:	cmp	r0, #0
   29a68:	beq	29a78 <flatcc_builder_reset@@Base+0x4c>
   29a6c:	mov	r1, #0
   29a70:	bl	12b5c <memset@plt>
   29a74:	b	29a80 <flatcc_builder_reset@@Base+0x54>
   29a78:	cmp	r2, #0
   29a7c:	bne	29bc4 <flatcc_builder_reset@@Base+0x198>
   29a80:	ldr	r0, [r4, #68]	; 0x44
   29a84:	ldr	r2, [r4, #72]	; 0x48
   29a88:	cmp	r0, #0
   29a8c:	beq	29a9c <flatcc_builder_reset@@Base+0x70>
   29a90:	mov	r1, #0
   29a94:	bl	12b5c <memset@plt>
   29a98:	b	29aa4 <flatcc_builder_reset@@Base+0x78>
   29a9c:	cmp	r2, #0
   29aa0:	bne	29bc4 <flatcc_builder_reset@@Base+0x198>
   29aa4:	ldr	r0, [r4, #76]	; 0x4c
   29aa8:	ldr	r2, [r4, #80]	; 0x50
   29aac:	cmp	r0, #0
   29ab0:	beq	29ac0 <flatcc_builder_reset@@Base+0x94>
   29ab4:	mov	r1, #0
   29ab8:	bl	12b5c <memset@plt>
   29abc:	b	29ac8 <flatcc_builder_reset@@Base+0x9c>
   29ac0:	cmp	r2, #0
   29ac4:	bne	29bc4 <flatcc_builder_reset@@Base+0x198>
   29ac8:	ldr	r0, [r4, #84]	; 0x54
   29acc:	ldr	r2, [r4, #88]	; 0x58
   29ad0:	cmp	r0, #0
   29ad4:	beq	29ae4 <flatcc_builder_reset@@Base+0xb8>
   29ad8:	mov	r1, #0
   29adc:	bl	12b5c <memset@plt>
   29ae0:	b	29aec <flatcc_builder_reset@@Base+0xc0>
   29ae4:	cmp	r2, #0
   29ae8:	bne	29bc4 <flatcc_builder_reset@@Base+0x198>
   29aec:	ldr	r0, [r4, #92]	; 0x5c
   29af0:	ldr	r2, [r4, #96]	; 0x60
   29af4:	cmp	r0, #0
   29af8:	beq	29b08 <flatcc_builder_reset@@Base+0xdc>
   29afc:	mov	r1, #0
   29b00:	bl	12b5c <memset@plt>
   29b04:	b	29b10 <flatcc_builder_reset@@Base+0xe4>
   29b08:	cmp	r2, #0
   29b0c:	bne	29bc4 <flatcc_builder_reset@@Base+0x198>
   29b10:	ldr	r0, [r4, #100]	; 0x64
   29b14:	ldr	r2, [r4, #104]	; 0x68
   29b18:	cmp	r0, #0
   29b1c:	beq	29b2c <flatcc_builder_reset@@Base+0x100>
   29b20:	mov	r1, #0
   29b24:	bl	12b5c <memset@plt>
   29b28:	b	29b34 <flatcc_builder_reset@@Base+0x108>
   29b2c:	cmp	r2, #0
   29b30:	bne	29bc4 <flatcc_builder_reset@@Base+0x198>
   29b34:	ldr	r0, [r4, #108]	; 0x6c
   29b38:	ldr	r2, [r4, #112]	; 0x70
   29b3c:	cmp	r0, #0
   29b40:	beq	29b50 <flatcc_builder_reset@@Base+0x124>
   29b44:	mov	r1, #0
   29b48:	bl	12b5c <memset@plt>
   29b4c:	b	29b58 <flatcc_builder_reset@@Base+0x12c>
   29b50:	cmp	r2, #0
   29b54:	bne	29bc4 <flatcc_builder_reset@@Base+0x198>
   29b58:	mov	r0, #0
   29b5c:	str	r0, [r4, #120]	; 0x78
   29b60:	ldr	r1, [r4, #124]	; 0x7c
   29b64:	cmp	r1, #0
   29b68:	movne	r1, #16
   29b6c:	strne	r1, [r4, #124]	; 0x7c
   29b70:	vmov.i32	q8, #0	; 0x00000000
   29b74:	add	r1, r4, #148	; 0x94
   29b78:	str	r0, [r4, #136]	; 0x88
   29b7c:	str	r0, [r4, #140]	; 0x8c
   29b80:	strh	r0, [r4, #128]	; 0x80
   29b84:	str	r0, [r4, #32]
   29b88:	vst1.32	{d16-d17}, [r1]
   29b8c:	ldr	r1, [r4, #184]	; 0xb8
   29b90:	ldr	r2, [r4, #60]	; 0x3c
   29b94:	ldr	r3, [r4, #76]	; 0x4c
   29b98:	ldr	ip, [r4, #52]	; 0x34
   29b9c:	cmp	r1, #0
   29ba0:	str	r2, [r4, #16]
   29ba4:	str	r0, [r4, #20]
   29ba8:	str	r0, [r4, #24]
   29bac:	stm	r4, {r3, ip}
   29bb0:	beq	29bbc <flatcc_builder_reset@@Base+0x190>
   29bb4:	add	r0, r4, #188	; 0xbc
   29bb8:	bl	2e574 <flatcc_emitter_reset@@Base>
   29bbc:	mov	r0, #0
   29bc0:	pop	{r4, sl, fp, pc}
   29bc4:	ldr	r0, [pc, #24]	; 29be4 <flatcc_builder_reset@@Base+0x1b8>
   29bc8:	ldr	r1, [pc, #24]	; 29be8 <flatcc_builder_reset@@Base+0x1bc>
   29bcc:	ldr	r3, [pc, #24]	; 29bec <flatcc_builder_reset@@Base+0x1c0>
   29bd0:	movw	r2, #434	; 0x1b2
   29bd4:	add	r0, pc, r0
   29bd8:	add	r1, pc, r1
   29bdc:	add	r3, pc, r3
   29be0:	bl	12bbc <__assert_fail@plt>
   29be4:	andeq	sl, r0, r8, lsr #2
   29be8:	andeq	sl, r0, r6, lsr r1
   29bec:	andeq	sl, r0, pc, lsl #3

00029bf0 <flatcc_builder_clear@@Base>:
   29bf0:	push	{r4, sl, fp, lr}
   29bf4:	add	fp, sp, #8
   29bf8:	sub	sp, sp, #8
   29bfc:	mov	r4, r0
   29c00:	ldr	r0, [r0, #40]	; 0x28
   29c04:	mov	r1, #0
   29c08:	mov	r2, #0
   29c0c:	mov	r3, #0
   29c10:	ldr	ip, [r4, #48]	; 0x30
   29c14:	str	r1, [sp]
   29c18:	add	r1, r4, #52	; 0x34
   29c1c:	blx	ip
   29c20:	ldr	r0, [r4, #40]	; 0x28
   29c24:	ldr	ip, [r4, #48]	; 0x30
   29c28:	mov	r1, #1
   29c2c:	mov	r2, #0
   29c30:	mov	r3, #0
   29c34:	str	r1, [sp]
   29c38:	add	r1, r4, #60	; 0x3c
   29c3c:	blx	ip
   29c40:	ldr	r0, [r4, #40]	; 0x28
   29c44:	ldr	ip, [r4, #48]	; 0x30
   29c48:	mov	r1, #2
   29c4c:	mov	r2, #0
   29c50:	mov	r3, #0
   29c54:	str	r1, [sp]
   29c58:	add	r1, r4, #68	; 0x44
   29c5c:	blx	ip
   29c60:	ldr	r0, [r4, #40]	; 0x28
   29c64:	ldr	ip, [r4, #48]	; 0x30
   29c68:	mov	r1, #3
   29c6c:	mov	r2, #0
   29c70:	mov	r3, #0
   29c74:	str	r1, [sp]
   29c78:	add	r1, r4, #76	; 0x4c
   29c7c:	blx	ip
   29c80:	ldr	r0, [r4, #40]	; 0x28
   29c84:	ldr	ip, [r4, #48]	; 0x30
   29c88:	mov	r1, #4
   29c8c:	mov	r2, #0
   29c90:	mov	r3, #0
   29c94:	str	r1, [sp]
   29c98:	add	r1, r4, #84	; 0x54
   29c9c:	blx	ip
   29ca0:	ldr	r0, [r4, #40]	; 0x28
   29ca4:	ldr	ip, [r4, #48]	; 0x30
   29ca8:	mov	r1, #5
   29cac:	mov	r2, #0
   29cb0:	mov	r3, #0
   29cb4:	str	r1, [sp]
   29cb8:	add	r1, r4, #92	; 0x5c
   29cbc:	blx	ip
   29cc0:	ldr	r0, [r4, #40]	; 0x28
   29cc4:	ldr	ip, [r4, #48]	; 0x30
   29cc8:	mov	r1, #6
   29ccc:	mov	r2, #0
   29cd0:	mov	r3, #0
   29cd4:	str	r1, [sp]
   29cd8:	add	r1, r4, #100	; 0x64
   29cdc:	blx	ip
   29ce0:	ldr	r0, [r4, #40]	; 0x28
   29ce4:	ldr	ip, [r4, #48]	; 0x30
   29ce8:	mov	r1, #7
   29cec:	mov	r2, #0
   29cf0:	mov	r3, #0
   29cf4:	str	r1, [sp]
   29cf8:	add	r1, r4, #108	; 0x6c
   29cfc:	blx	ip
   29d00:	ldr	r0, [r4, #184]	; 0xb8
   29d04:	cmp	r0, #0
   29d08:	beq	29d14 <flatcc_builder_clear@@Base+0x124>
   29d0c:	add	r0, r4, #188	; 0xbc
   29d10:	bl	2e640 <flatcc_emitter_clear@@Base>
   29d14:	mov	r0, r4
   29d18:	mov	r1, #0
   29d1c:	mov	r2, #232	; 0xe8
   29d20:	sub	sp, fp, #8
   29d24:	pop	{r4, sl, fp, lr}
   29d28:	b	12b5c <memset@plt>

00029d2c <flatcc_builder_enter_user_frame_ptr@@Base>:
   29d2c:	push	{r4, r5, r6, r7, fp, lr}
   29d30:	add	fp, sp, #16
   29d34:	sub	sp, sp, #8
   29d38:	mov	r4, r0
   29d3c:	ldr	r0, [r0, #112]	; 0x70
   29d40:	add	r1, r1, #7
   29d44:	ldr	r7, [r4, #228]	; 0xe4
   29d48:	bic	r5, r1, #3
   29d4c:	add	r6, r4, #108	; 0x6c
   29d50:	add	r2, r7, r5
   29d54:	cmp	r2, r0
   29d58:	bls	29d80 <flatcc_builder_enter_user_frame_ptr@@Base+0x54>
   29d5c:	ldr	r0, [r4, #40]	; 0x28
   29d60:	ldr	ip, [r4, #48]	; 0x30
   29d64:	mov	r1, #7
   29d68:	mov	r3, #0
   29d6c:	str	r1, [sp]
   29d70:	mov	r1, r6
   29d74:	blx	ip
   29d78:	cmp	r0, #0
   29d7c:	bne	29dcc <flatcc_builder_enter_user_frame_ptr@@Base+0xa0>
   29d80:	ldr	r0, [r6]
   29d84:	adds	r6, r0, r7
   29d88:	beq	29dbc <flatcc_builder_enter_user_frame_ptr@@Base+0x90>
   29d8c:	mov	r0, r6
   29d90:	mov	r1, #0
   29d94:	mov	r2, r5
   29d98:	bl	12b5c <memset@plt>
   29d9c:	ldr	r0, [r4, #224]	; 0xe0
   29da0:	str	r0, [r6], #4
   29da4:	ldr	r0, [r4, #228]	; 0xe4
   29da8:	add	r1, r0, #4
   29dac:	add	r0, r0, r5
   29db0:	str	r1, [r4, #224]	; 0xe0
   29db4:	str	r0, [r4, #228]	; 0xe4
   29db8:	b	29dc0 <flatcc_builder_enter_user_frame_ptr@@Base+0x94>
   29dbc:	mov	r6, #0
   29dc0:	mov	r0, r6
   29dc4:	sub	sp, fp, #16
   29dc8:	pop	{r4, r5, r6, r7, fp, pc}
   29dcc:	ldr	r0, [pc, #24]	; 29dec <flatcc_builder_enter_user_frame_ptr@@Base+0xc0>
   29dd0:	ldr	r1, [pc, #24]	; 29df0 <flatcc_builder_enter_user_frame_ptr@@Base+0xc4>
   29dd4:	ldr	r3, [pc, #24]	; 29df4 <flatcc_builder_enter_user_frame_ptr@@Base+0xc8>
   29dd8:	mov	r2, #308	; 0x134
   29ddc:	add	r0, pc, r0
   29de0:	add	r1, pc, r1
   29de4:	add	r3, pc, r3
   29de8:	bl	12bbc <__assert_fail@plt>
   29dec:	andeq	fp, r0, pc, ror #1
   29df0:	andeq	r9, r0, lr, lsr #30
   29df4:	andeq	sl, r0, r1, lsr #30

00029df8 <flatcc_builder_enter_user_frame@@Base>:
   29df8:	push	{r4, r5, r6, r7, fp, lr}
   29dfc:	add	fp, sp, #16
   29e00:	sub	sp, sp, #8
   29e04:	mov	r4, r0
   29e08:	ldr	r0, [r0, #112]	; 0x70
   29e0c:	add	r1, r1, #7
   29e10:	ldr	r7, [r4, #228]	; 0xe4
   29e14:	bic	r5, r1, #3
   29e18:	add	r6, r4, #108	; 0x6c
   29e1c:	add	r2, r7, r5
   29e20:	cmp	r2, r0
   29e24:	bls	29e4c <flatcc_builder_enter_user_frame@@Base+0x54>
   29e28:	ldr	r0, [r4, #40]	; 0x28
   29e2c:	ldr	ip, [r4, #48]	; 0x30
   29e30:	mov	r1, #7
   29e34:	mov	r3, #0
   29e38:	str	r1, [sp]
   29e3c:	mov	r1, r6
   29e40:	blx	ip
   29e44:	cmp	r0, #0
   29e48:	bne	29e98 <flatcc_builder_enter_user_frame@@Base+0xa0>
   29e4c:	ldr	r0, [r6]
   29e50:	adds	r6, r0, r7
   29e54:	beq	29e8c <flatcc_builder_enter_user_frame@@Base+0x94>
   29e58:	mov	r0, r6
   29e5c:	mov	r1, #0
   29e60:	mov	r2, r5
   29e64:	bl	12b5c <memset@plt>
   29e68:	ldr	r0, [r4, #224]	; 0xe0
   29e6c:	str	r0, [r6]
   29e70:	ldr	r1, [r4, #228]	; 0xe4
   29e74:	add	r0, r1, #4
   29e78:	add	r1, r1, r5
   29e7c:	str	r0, [r4, #224]	; 0xe0
   29e80:	str	r1, [r4, #228]	; 0xe4
   29e84:	sub	sp, fp, #16
   29e88:	pop	{r4, r5, r6, r7, fp, pc}
   29e8c:	mov	r0, #0
   29e90:	sub	sp, fp, #16
   29e94:	pop	{r4, r5, r6, r7, fp, pc}
   29e98:	ldr	r0, [pc, #24]	; 29eb8 <flatcc_builder_enter_user_frame@@Base+0xc0>
   29e9c:	ldr	r1, [pc, #24]	; 29ebc <flatcc_builder_enter_user_frame@@Base+0xc4>
   29ea0:	ldr	r3, [pc, #24]	; 29ec0 <flatcc_builder_enter_user_frame@@Base+0xc8>
   29ea4:	mov	r2, #308	; 0x134
   29ea8:	add	r0, pc, r0
   29eac:	add	r1, pc, r1
   29eb0:	add	r3, pc, r3
   29eb4:	bl	12bbc <__assert_fail@plt>
   29eb8:	andeq	fp, r0, r3, lsr #32
   29ebc:	andeq	r9, r0, r2, ror #28
   29ec0:	andeq	sl, r0, r5, asr lr

00029ec4 <flatcc_builder_exit_user_frame@@Base>:
   29ec4:	push	{fp, lr}
   29ec8:	mov	fp, sp
   29ecc:	ldr	r1, [r0, #224]	; 0xe0
   29ed0:	cmp	r1, #0
   29ed4:	subne	r2, r1, #4
   29ed8:	strne	r2, [r0, #228]	; 0xe4
   29edc:	ldrne	r2, [r0, #108]	; 0x6c
   29ee0:	addne	r1, r2, r1
   29ee4:	ldrne	r1, [r1, #-4]
   29ee8:	strne	r1, [r0, #224]	; 0xe0
   29eec:	movne	r0, r1
   29ef0:	popne	{fp, pc}
   29ef4:	ldr	r0, [pc, #24]	; 29f14 <flatcc_builder_exit_user_frame@@Base+0x50>
   29ef8:	ldr	r1, [pc, #24]	; 29f18 <flatcc_builder_exit_user_frame@@Base+0x54>
   29efc:	ldr	r3, [pc, #24]	; 29f1c <flatcc_builder_exit_user_frame@@Base+0x58>
   29f00:	movw	r2, #542	; 0x21e
   29f04:	add	r0, pc, r0
   29f08:	add	r1, pc, r1
   29f0c:	add	r3, pc, r3
   29f10:	bl	12bbc <__assert_fail@plt>
   29f14:	andeq	r9, r0, r5, lsr #29
   29f18:	andeq	r9, r0, r6, lsl #28
   29f1c:			; <UNDEFINED> instruction: 0x00009eb6

00029f20 <flatcc_builder_exit_user_frame_at@@Base>:
   29f20:	push	{fp, lr}
   29f24:	mov	fp, sp
   29f28:	ldr	r2, [r0, #224]	; 0xe0
   29f2c:	cmp	r2, r1
   29f30:	bcc	29f7c <flatcc_builder_exit_user_frame_at@@Base+0x5c>
   29f34:	cmp	r1, #0
   29f38:	str	r1, [r0, #224]	; 0xe0
   29f3c:	subne	r2, r1, #4
   29f40:	strne	r2, [r0, #228]	; 0xe4
   29f44:	ldrne	r2, [r0, #108]	; 0x6c
   29f48:	addne	r1, r2, r1
   29f4c:	ldrne	r1, [r1, #-4]
   29f50:	strne	r1, [r0, #224]	; 0xe0
   29f54:	movne	r0, r1
   29f58:	popne	{fp, pc}
   29f5c:	ldr	r0, [pc, #68]	; 29fa8 <flatcc_builder_exit_user_frame_at@@Base+0x88>
   29f60:	ldr	r1, [pc, #68]	; 29fac <flatcc_builder_exit_user_frame_at@@Base+0x8c>
   29f64:	ldr	r3, [pc, #68]	; 29fb0 <flatcc_builder_exit_user_frame_at@@Base+0x90>
   29f68:	movw	r2, #542	; 0x21e
   29f6c:	add	r0, pc, r0
   29f70:	add	r1, pc, r1
   29f74:	add	r3, pc, r3
   29f78:	bl	12bbc <__assert_fail@plt>
   29f7c:	ldr	r0, [pc, #24]	; 29f9c <flatcc_builder_exit_user_frame_at@@Base+0x7c>
   29f80:	ldr	r1, [pc, #24]	; 29fa0 <flatcc_builder_exit_user_frame_at@@Base+0x80>
   29f84:	ldr	r3, [pc, #24]	; 29fa4 <flatcc_builder_exit_user_frame_at@@Base+0x84>
   29f88:	movw	r2, #551	; 0x227
   29f8c:	add	r0, pc, r0
   29f90:	add	r1, pc, r1
   29f94:	add	r3, pc, r3
   29f98:	bl	12bbc <__assert_fail@plt>
   29f9c:	andeq	r9, r0, r0, ror lr
   29fa0:	andeq	r9, r0, lr, ror sp
   29fa4:	andeq	r9, r0, r7, lsl #29
   29fa8:	andeq	r9, r0, sp, lsr lr
   29fac:	muleq	r0, lr, sp
   29fb0:	andeq	r9, r0, lr, asr #28

00029fb4 <flatcc_builder_get_current_user_frame@@Base>:
   29fb4:	ldr	r0, [r0, #224]	; 0xe0
   29fb8:	bx	lr

00029fbc <flatcc_builder_get_user_frame_ptr@@Base>:
   29fbc:	ldr	r0, [r0, #108]	; 0x6c
   29fc0:	add	r0, r0, r1
   29fc4:	bx	lr

00029fc8 <flatcc_builder_embed_buffer@@Base>:
   29fc8:	push	{r4, r5, r6, r7, fp, lr}
   29fcc:	add	fp, sp, #16
   29fd0:	sub	sp, sp, #88	; 0x58
   29fd4:	mov	r4, r0
   29fd8:	ldr	r0, [fp, #8]
   29fdc:	mov	r5, r3
   29fe0:	mov	r7, r2
   29fe4:	mov	r2, r1
   29fe8:	sub	r1, fp, #18
   29fec:	strh	r0, [fp, #-18]	; 0xffffffee
   29ff0:	mov	r0, r4
   29ff4:	ldr	r3, [r4, #152]	; 0x98
   29ff8:	cmp	r3, #0
   29ffc:	movwne	r3, #1
   2a000:	bl	2a154 <flatcc_builder_embed_buffer@@Base+0x18c>
   2a004:	ldr	r1, [fp, #12]
   2a008:	ldrh	r3, [fp, #-18]	; 0xffffffee
   2a00c:	ldr	r0, [r4, #136]	; 0x88
   2a010:	mov	r2, #0
   2a014:	str	r2, [sp, #12]
   2a018:	str	r2, [sp, #8]
   2a01c:	and	r1, r1, #2
   2a020:	sub	r3, r3, #1
   2a024:	add	r1, r5, r1, lsl #1
   2a028:	sub	r1, r0, r1
   2a02c:	and	r3, r1, r3
   2a030:	add	r1, r3, r5
   2a034:	str	r1, [fp, #-24]	; 0xffffffe8
   2a038:	ldr	r1, [r4, #152]	; 0x98
   2a03c:	cmp	r1, #0
   2a040:	mov	r1, #0
   2a044:	beq	2a064 <flatcc_builder_embed_buffer@@Base+0x9c>
   2a048:	mov	r1, #4
   2a04c:	sub	r2, fp, #24
   2a050:	str	r1, [sp, #20]
   2a054:	str	r2, [sp, #16]
   2a058:	mov	r2, #1
   2a05c:	str	r1, [sp, #8]
   2a060:	str	r2, [sp, #12]
   2a064:	cmp	r5, #0
   2a068:	beq	2a08c <flatcc_builder_embed_buffer@@Base+0xc4>
   2a06c:	add	r6, sp, #8
   2a070:	add	r1, r1, r5
   2a074:	add	r6, r6, r2, lsl #3
   2a078:	add	r2, r2, #1
   2a07c:	str	r1, [sp, #8]
   2a080:	str	r7, [r6, #8]
   2a084:	str	r5, [r6, #12]
   2a088:	str	r2, [sp, #12]
   2a08c:	cmp	r3, #0
   2a090:	beq	2a0bc <flatcc_builder_embed_buffer@@Base+0xf4>
   2a094:	add	r1, r1, r3
   2a098:	add	r7, sp, #8
   2a09c:	str	r1, [sp, #8]
   2a0a0:	add	r7, r7, r2, lsl #3
   2a0a4:	add	r2, r2, #1
   2a0a8:	ldr	r6, [pc, #136]	; 2a138 <flatcc_builder_embed_buffer@@Base+0x170>
   2a0ac:	ldr	r6, [pc, r6]
   2a0b0:	str	r6, [r7, #8]
   2a0b4:	str	r3, [r7, #12]
   2a0b8:	str	r2, [sp, #12]
   2a0bc:	cmp	r1, #0
   2a0c0:	ble	2a118 <flatcc_builder_embed_buffer@@Base+0x150>
   2a0c4:	sub	r5, r0, r1
   2a0c8:	ldr	r0, [r4, #36]	; 0x24
   2a0cc:	ldr	r7, [r4, #44]	; 0x2c
   2a0d0:	str	r1, [sp]
   2a0d4:	add	r1, sp, #8
   2a0d8:	add	r1, r1, #8
   2a0dc:	mov	r3, r5
   2a0e0:	blx	r7
   2a0e4:	cmp	r0, #0
   2a0e8:	streq	r5, [r4, #136]	; 0x88
   2a0ec:	moveq	r0, r5
   2a0f0:	subeq	sp, fp, #16
   2a0f4:	popeq	{r4, r5, r6, r7, fp, pc}
   2a0f8:	ldr	r0, [pc, #72]	; 2a148 <flatcc_builder_embed_buffer@@Base+0x180>
   2a0fc:	ldr	r1, [pc, #72]	; 2a14c <flatcc_builder_embed_buffer@@Base+0x184>
   2a100:	ldr	r3, [pc, #72]	; 2a150 <flatcc_builder_embed_buffer@@Base+0x188>
   2a104:	movw	r2, #651	; 0x28b
   2a108:	add	r0, pc, r0
   2a10c:	add	r1, pc, r1
   2a110:	add	r3, pc, r3
   2a114:	bl	12bbc <__assert_fail@plt>
   2a118:	ldr	r0, [pc, #28]	; 2a13c <flatcc_builder_embed_buffer@@Base+0x174>
   2a11c:	ldr	r1, [pc, #28]	; 2a140 <flatcc_builder_embed_buffer@@Base+0x178>
   2a120:	ldr	r3, [pc, #28]	; 2a144 <flatcc_builder_embed_buffer@@Base+0x17c>
   2a124:	movw	r2, #647	; 0x287
   2a128:	add	r0, pc, r0
   2a12c:	add	r1, pc, r1
   2a130:	add	r3, pc, r3
   2a134:	bl	12bbc <__assert_fail@plt>
   2a138:	andeq	fp, r1, r0, asr #31
   2a13c:	andeq	sl, r0, r3, lsr #27
   2a140:	andeq	r9, r0, r2, ror #23
   2a144:	andeq	sl, r0, sl, asr ip
   2a148:	andeq	sl, r0, r3, asr #27
   2a14c:	andeq	r9, r0, r2, lsl #24
   2a150:	andeq	sl, r0, sl, ror ip
   2a154:	push	{r4, sl, fp, lr}
   2a158:	add	fp, sp, #8
   2a15c:	sub	sp, sp, #80	; 0x50
   2a160:	cmp	r2, #0
   2a164:	bne	2a174 <flatcc_builder_embed_buffer@@Base+0x1ac>
   2a168:	ldrh	r2, [r0, #132]	; 0x84
   2a16c:	cmp	r2, #0
   2a170:	movweq	r2, #1
   2a174:	ldrh	r4, [r1]
   2a178:	cmp	r4, #4
   2a17c:	movwcc	r4, #4
   2a180:	cmpcs	r4, r2
   2a184:	bcs	2a194 <flatcc_builder_embed_buffer@@Base+0x1cc>
   2a188:	cmp	r4, r2
   2a18c:	movcc	r4, r2
   2a190:	strh	r4, [r1]
   2a194:	cmp	r3, #0
   2a198:	bne	2a20c <flatcc_builder_embed_buffer@@Base+0x244>
   2a19c:	ldr	r4, [r0, #140]	; 0x8c
   2a1a0:	sub	r1, r2, #1
   2a1a4:	ands	r1, r4, r1
   2a1a8:	beq	2a20c <flatcc_builder_embed_buffer@@Base+0x244>
   2a1ac:	mov	r2, #1
   2a1b0:	str	r1, [sp, #20]
   2a1b4:	str	r1, [sp, #8]
   2a1b8:	cmn	r1, #1
   2a1bc:	str	r2, [sp, #12]
   2a1c0:	ldr	r2, [pc, #172]	; 2a274 <flatcc_builder_embed_buffer@@Base+0x2ac>
   2a1c4:	ldr	r2, [pc, r2]
   2a1c8:	str	r2, [sp, #16]
   2a1cc:	add	r2, r1, r4
   2a1d0:	str	r2, [r0, #140]	; 0x8c
   2a1d4:	ble	2a214 <flatcc_builder_embed_buffer@@Base+0x24c>
   2a1d8:	ldr	r2, [r0, #36]	; 0x24
   2a1dc:	ldr	ip, [r0, #44]	; 0x2c
   2a1e0:	add	r0, sp, #8
   2a1e4:	str	r1, [sp]
   2a1e8:	mov	r3, r4
   2a1ec:	add	r1, r0, #8
   2a1f0:	mov	r0, r2
   2a1f4:	mov	r2, #1
   2a1f8:	blx	ip
   2a1fc:	cmp	r0, #0
   2a200:	bne	2a234 <flatcc_builder_embed_buffer@@Base+0x26c>
   2a204:	cmn	r4, #1
   2a208:	beq	2a254 <flatcc_builder_embed_buffer@@Base+0x28c>
   2a20c:	sub	sp, fp, #8
   2a210:	pop	{r4, sl, fp, pc}
   2a214:	ldr	r0, [pc, #92]	; 2a278 <flatcc_builder_embed_buffer@@Base+0x2b0>
   2a218:	ldr	r1, [pc, #92]	; 2a27c <flatcc_builder_embed_buffer@@Base+0x2b4>
   2a21c:	ldr	r3, [pc, #92]	; 2a280 <flatcc_builder_embed_buffer@@Base+0x2b8>
   2a220:	movw	r2, #673	; 0x2a1
   2a224:	add	r0, pc, r0
   2a228:	add	r1, pc, r1
   2a22c:	add	r3, pc, r3
   2a230:	bl	12bbc <__assert_fail@plt>
   2a234:	ldr	r0, [pc, #72]	; 2a284 <flatcc_builder_embed_buffer@@Base+0x2bc>
   2a238:	ldr	r1, [pc, #72]	; 2a288 <flatcc_builder_embed_buffer@@Base+0x2c0>
   2a23c:	ldr	r3, [pc, #72]	; 2a28c <flatcc_builder_embed_buffer@@Base+0x2c4>
   2a240:	movw	r2, #677	; 0x2a5
   2a244:	add	r0, pc, r0
   2a248:	add	r1, pc, r1
   2a24c:	add	r3, pc, r3
   2a250:	bl	12bbc <__assert_fail@plt>
   2a254:	ldr	r0, [pc, #52]	; 2a290 <flatcc_builder_embed_buffer@@Base+0x2c8>
   2a258:	ldr	r1, [pc, #52]	; 2a294 <flatcc_builder_embed_buffer@@Base+0x2cc>
   2a25c:	ldr	r3, [pc, #52]	; 2a298 <flatcc_builder_embed_buffer@@Base+0x2d0>
   2a260:	movw	r2, #702	; 0x2be
   2a264:	add	r0, pc, r0
   2a268:	add	r1, pc, r1
   2a26c:	add	r3, pc, r3
   2a270:	bl	12bbc <__assert_fail@plt>
   2a274:	andeq	fp, r1, r8, lsr #29
   2a278:	andeq	sl, r0, r7, lsr #25
   2a27c:	andeq	r9, r0, r6, ror #21
   2a280:	andeq	sl, r0, sl, lsl ip
   2a284:	andeq	sl, r0, r7, lsl #25
   2a288:	andeq	r9, r0, r6, asr #21
   2a28c:	strdeq	sl, [r0], -sl	; <UNPREDICTABLE>
   2a290:	andeq	sl, r0, r7, ror #24
   2a294:	andeq	r9, r0, r6, lsr #21
   2a298:	ldrdeq	sl, [r0], -ip

0002a29c <flatcc_builder_create_buffer@@Base>:
   2a29c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a2a0:	add	fp, sp, #28
   2a2a4:	sub	sp, sp, #100	; 0x64
   2a2a8:	ldr	sl, [fp, #12]
   2a2ac:	mov	r4, r0
   2a2b0:	ldr	r0, [fp, #8]
   2a2b4:	mov	r7, r1
   2a2b8:	mov	r5, #0
   2a2bc:	mov	r6, r3
   2a2c0:	sub	r1, fp, #30
   2a2c4:	str	r5, [sp, #12]
   2a2c8:	and	r9, sl, #1
   2a2cc:	strh	r0, [fp, #-30]	; 0xffffffe2
   2a2d0:	mov	r0, r4
   2a2d4:	mov	r3, r9
   2a2d8:	bl	2a154 <flatcc_builder_embed_buffer@@Base+0x18c>
   2a2dc:	ldrh	r0, [r4, #128]	; 0x80
   2a2e0:	ldrh	r1, [fp, #-30]	; 0xffffffe2
   2a2e4:	str	r6, [sp, #8]
   2a2e8:	cmp	r0, r1
   2a2ec:	strhcc	r1, [r4, #128]	; 0x80
   2a2f0:	cmp	r7, #0
   2a2f4:	beq	2a310 <flatcc_builder_create_buffer@@Base+0x74>
   2a2f8:	ldr	r5, [r7]
   2a2fc:	cmp	r5, #0
   2a300:	str	r5, [sp, #12]
   2a304:	movwne	r5, #1
   2a308:	lsl	r7, r5, #2
   2a30c:	b	2a314 <flatcc_builder_create_buffer@@Base+0x78>
   2a310:	mov	r7, #0
   2a314:	ldr	r0, [r4, #136]	; 0x88
   2a318:	and	r2, sl, #2
   2a31c:	mov	r3, #0
   2a320:	sub	r6, r1, #1
   2a324:	ands	ip, sl, #3
   2a328:	mov	sl, #4
   2a32c:	mov	r1, #4
   2a330:	str	r3, [sp, #20]
   2a334:	str	r3, [sp, #16]
   2a338:	sub	r2, r0, r2, lsl #1
   2a33c:	sub	r2, r2, r7
   2a340:	sub	r2, r2, #4
   2a344:	beq	2a368 <flatcc_builder_create_buffer@@Base+0xcc>
   2a348:	mov	r1, #4
   2a34c:	sub	r3, fp, #40	; 0x28
   2a350:	str	r1, [sp, #28]
   2a354:	str	r3, [sp, #24]
   2a358:	str	r1, [sp, #16]
   2a35c:	mov	r3, #1
   2a360:	mov	r1, #8
   2a364:	str	r3, [sp, #20]
   2a368:	add	lr, sp, #16
   2a36c:	and	r6, r2, r6
   2a370:	sub	r8, fp, #36	; 0x24
   2a374:	str	r1, [sp, #16]
   2a378:	cmp	r5, #0
   2a37c:	add	r2, lr, r3, lsl #3
   2a380:	str	r8, [r2, #8]
   2a384:	str	sl, [r2, #12]
   2a388:	add	r2, r3, #1
   2a38c:	str	r2, [sp, #20]
   2a390:	beq	2a3b4 <flatcc_builder_create_buffer@@Base+0x118>
   2a394:	add	r2, lr, r2, lsl #3
   2a398:	add	r1, r1, r7
   2a39c:	add	r5, sp, #12
   2a3a0:	str	r1, [sp, #16]
   2a3a4:	str	r5, [r2, #8]
   2a3a8:	str	r7, [r2, #12]
   2a3ac:	orr	r2, r3, #2
   2a3b0:	str	r2, [sp, #20]
   2a3b4:	cmp	r6, #0
   2a3b8:	beq	2a3e0 <flatcc_builder_create_buffer@@Base+0x144>
   2a3bc:	add	r1, r1, r6
   2a3c0:	add	r3, lr, r2, lsl #3
   2a3c4:	add	r2, r2, #1
   2a3c8:	str	r1, [sp, #16]
   2a3cc:	ldr	r5, [pc, #220]	; 2a4b0 <flatcc_builder_create_buffer@@Base+0x214>
   2a3d0:	ldr	r5, [pc, r5]
   2a3d4:	str	r5, [r3, #8]
   2a3d8:	str	r6, [r3, #12]
   2a3dc:	str	r2, [sp, #20]
   2a3e0:	sub	r7, r0, r1
   2a3e4:	cmp	ip, #0
   2a3e8:	mov	r6, #144	; 0x90
   2a3ec:	ldr	r3, [sp, #8]
   2a3f0:	mov	r0, r7
   2a3f4:	addne	r0, r0, #4
   2a3f8:	cmp	r9, #0
   2a3fc:	movweq	r6, #140	; 0x8c
   2a400:	cmp	r1, #0
   2a404:	ldr	r6, [r4, r6]
   2a408:	sub	r3, r3, r0
   2a40c:	str	r3, [fp, #-36]	; 0xffffffdc
   2a410:	sub	r0, r6, r0
   2a414:	str	r0, [fp, #-40]	; 0xffffffd8
   2a418:	ble	2a470 <flatcc_builder_create_buffer@@Base+0x1d4>
   2a41c:	ldr	r0, [r4, #36]	; 0x24
   2a420:	ldr	r6, [r4, #44]	; 0x2c
   2a424:	str	r1, [sp]
   2a428:	add	r1, lr, #8
   2a42c:	mov	r3, r7
   2a430:	blx	r6
   2a434:	cmp	r0, #0
   2a438:	bne	2a490 <flatcc_builder_create_buffer@@Base+0x1f4>
   2a43c:	cmp	r7, #0
   2a440:	str	r7, [r4, #136]	; 0x88
   2a444:	movne	r0, r7
   2a448:	subne	sp, fp, #28
   2a44c:	popne	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2a450:	ldr	r0, [pc, #116]	; 2a4cc <flatcc_builder_create_buffer@@Base+0x230>
   2a454:	ldr	r1, [pc, #116]	; 2a4d0 <flatcc_builder_create_buffer@@Base+0x234>
   2a458:	ldr	r3, [pc, #116]	; 2a4d4 <flatcc_builder_create_buffer@@Base+0x238>
   2a45c:	mov	r2, #772	; 0x304
   2a460:	add	r0, pc, r0
   2a464:	add	r1, pc, r1
   2a468:	add	r3, pc, r3
   2a46c:	bl	12bbc <__assert_fail@plt>
   2a470:	ldr	r0, [pc, #60]	; 2a4b4 <flatcc_builder_create_buffer@@Base+0x218>
   2a474:	ldr	r1, [pc, #60]	; 2a4b8 <flatcc_builder_create_buffer@@Base+0x21c>
   2a478:	ldr	r3, [pc, #60]	; 2a4bc <flatcc_builder_create_buffer@@Base+0x220>
   2a47c:	movw	r2, #647	; 0x287
   2a480:	add	r0, pc, r0
   2a484:	add	r1, pc, r1
   2a488:	add	r3, pc, r3
   2a48c:	bl	12bbc <__assert_fail@plt>
   2a490:	ldr	r0, [pc, #40]	; 2a4c0 <flatcc_builder_create_buffer@@Base+0x224>
   2a494:	ldr	r1, [pc, #40]	; 2a4c4 <flatcc_builder_create_buffer@@Base+0x228>
   2a498:	ldr	r3, [pc, #40]	; 2a4c8 <flatcc_builder_create_buffer@@Base+0x22c>
   2a49c:	movw	r2, #651	; 0x28b
   2a4a0:	add	r0, pc, r0
   2a4a4:	add	r1, pc, r1
   2a4a8:	add	r3, pc, r3
   2a4ac:	bl	12bbc <__assert_fail@plt>
   2a4b0:	muleq	r1, ip, ip
   2a4b4:	andeq	sl, r0, fp, asr #20
   2a4b8:	andeq	r9, r0, sl, lsl #17
   2a4bc:	andeq	sl, r0, r2, lsl #18
   2a4c0:	andeq	sl, r0, fp, lsr #20
   2a4c4:	andeq	r9, r0, sl, ror #16
   2a4c8:	andeq	sl, r0, r2, ror #17
   2a4cc:	andeq	sl, r0, fp, ror #20
   2a4d0:	andeq	r9, r0, sl, lsr #17
   2a4d4:	strdeq	r9, [r0], -r8

0002a4d8 <flatcc_builder_create_struct@@Base>:
   2a4d8:	push	{r4, r5, r6, sl, fp, lr}
   2a4dc:	add	fp, sp, #16
   2a4e0:	sub	sp, sp, #80	; 0x50
   2a4e4:	cmp	r3, #0
   2a4e8:	beq	2a5c0 <flatcc_builder_create_struct@@Base+0xe8>
   2a4ec:	mov	r5, r0
   2a4f0:	ldrh	r0, [r0, #128]	; 0x80
   2a4f4:	mov	r4, #0
   2a4f8:	cmp	r0, r3
   2a4fc:	strhcc	r3, [r5, #128]	; 0x80
   2a500:	sub	r3, r3, #1
   2a504:	cmp	r2, #0
   2a508:	ldr	r0, [r5, #136]	; 0x88
   2a50c:	str	r4, [sp, #12]
   2a510:	str	r4, [sp, #8]
   2a514:	movne	r4, #1
   2a518:	strne	r2, [sp, #20]
   2a51c:	strne	r1, [sp, #16]
   2a520:	strne	r2, [sp, #8]
   2a524:	strne	r4, [sp, #12]
   2a528:	sub	r6, r0, r2
   2a52c:	and	r3, r6, r3
   2a530:	cmp	r3, #0
   2a534:	beq	2a560 <flatcc_builder_create_struct@@Base+0x88>
   2a538:	add	r2, r3, r2
   2a53c:	add	r1, sp, #8
   2a540:	str	r2, [sp, #8]
   2a544:	add	r1, r1, r4, lsl #3
   2a548:	add	r4, r4, #1
   2a54c:	ldr	r6, [pc, #172]	; 2a600 <flatcc_builder_create_struct@@Base+0x128>
   2a550:	ldr	r6, [pc, r6]
   2a554:	str	r6, [r1, #8]
   2a558:	str	r3, [r1, #12]
   2a55c:	str	r4, [sp, #12]
   2a560:	cmp	r2, #0
   2a564:	ble	2a5e0 <flatcc_builder_create_struct@@Base+0x108>
   2a568:	sub	r6, r0, r2
   2a56c:	ldr	r0, [r5, #36]	; 0x24
   2a570:	ldr	ip, [r5, #44]	; 0x2c
   2a574:	add	r1, sp, #8
   2a578:	str	r2, [sp]
   2a57c:	mov	r2, r4
   2a580:	add	r1, r1, #8
   2a584:	mov	r3, r6
   2a588:	blx	ip
   2a58c:	cmp	r0, #0
   2a590:	streq	r6, [r5, #136]	; 0x88
   2a594:	moveq	r0, r6
   2a598:	subeq	sp, fp, #16
   2a59c:	popeq	{r4, r5, r6, sl, fp, pc}
   2a5a0:	ldr	r0, [pc, #116]	; 2a61c <flatcc_builder_create_struct@@Base+0x144>
   2a5a4:	ldr	r1, [pc, #116]	; 2a620 <flatcc_builder_create_struct@@Base+0x148>
   2a5a8:	ldr	r3, [pc, #116]	; 2a624 <flatcc_builder_create_struct@@Base+0x14c>
   2a5ac:	movw	r2, #651	; 0x28b
   2a5b0:	add	r0, pc, r0
   2a5b4:	add	r1, pc, r1
   2a5b8:	add	r3, pc, r3
   2a5bc:	bl	12bbc <__assert_fail@plt>
   2a5c0:	ldr	r0, [pc, #60]	; 2a604 <flatcc_builder_create_struct@@Base+0x12c>
   2a5c4:	ldr	r1, [pc, #60]	; 2a608 <flatcc_builder_create_struct@@Base+0x130>
   2a5c8:	ldr	r3, [pc, #60]	; 2a60c <flatcc_builder_create_struct@@Base+0x134>
   2a5cc:	movw	r2, #783	; 0x30f
   2a5d0:	add	r0, pc, r0
   2a5d4:	add	r1, pc, r1
   2a5d8:	add	r3, pc, r3
   2a5dc:	bl	12bbc <__assert_fail@plt>
   2a5e0:	ldr	r0, [pc, #40]	; 2a610 <flatcc_builder_create_struct@@Base+0x138>
   2a5e4:	ldr	r1, [pc, #40]	; 2a614 <flatcc_builder_create_struct@@Base+0x13c>
   2a5e8:	ldr	r3, [pc, #40]	; 2a618 <flatcc_builder_create_struct@@Base+0x140>
   2a5ec:	movw	r2, #647	; 0x287
   2a5f0:	add	r0, pc, r0
   2a5f4:	add	r1, pc, r1
   2a5f8:	add	r3, pc, r3
   2a5fc:	bl	12bbc <__assert_fail@plt>
   2a600:	andeq	fp, r1, ip, lsl fp
   2a604:	andeq	r9, r0, r3, lsl r9
   2a608:	andeq	r9, r0, sl, lsr r7
   2a60c:	andeq	r9, r0, r6, lsl r9
   2a610:	ldrdeq	sl, [r0], -fp
   2a614:	andeq	r9, r0, sl, lsl r7
   2a618:	muleq	r0, r2, r7
   2a61c:	andeq	sl, r0, fp, lsl r9
   2a620:	andeq	r9, r0, sl, asr r7
   2a624:	ldrdeq	sl, [r0], -r2

0002a628 <flatcc_builder_start_buffer@@Base>:
   2a628:	push	{r4, r5, r6, r7, fp, lr}
   2a62c:	add	fp, sp, #16
   2a630:	mov	r5, r1
   2a634:	ldrh	r1, [r0, #128]	; 0x80
   2a638:	mov	r6, r3
   2a63c:	mov	r7, r2
   2a640:	mov	r4, r0
   2a644:	bl	2a6e8 <flatcc_builder_start_buffer@@Base+0xc0>
   2a648:	mov	r1, r0
   2a64c:	mvn	r0, #0
   2a650:	cmp	r1, #0
   2a654:	popne	{r4, r5, r6, r7, fp, pc}
   2a658:	mov	r0, #1
   2a65c:	cmp	r5, #0
   2a660:	strh	r0, [r4, #128]	; 0x80
   2a664:	ldrh	r1, [r4, #132]	; 0x84
   2a668:	ldr	r2, [r4, #32]
   2a66c:	strh	r1, [r2, #34]	; 0x22
   2a670:	strh	r7, [r4, #132]	; 0x84
   2a674:	ldrh	r1, [r4, #164]	; 0xa4
   2a678:	ldr	r2, [r4, #32]
   2a67c:	strh	r1, [r2, #32]
   2a680:	strh	r6, [r4, #164]	; 0xa4
   2a684:	ldr	r1, [r4, #32]
   2a688:	ldr	r2, [r4, #144]	; 0x90
   2a68c:	str	r2, [r1, #20]
   2a690:	ldr	r1, [r4, #32]
   2a694:	ldr	r2, [r4, #152]	; 0x98
   2a698:	str	r2, [r1, #28]
   2a69c:	ldr	r3, [r4, #148]	; 0x94
   2a6a0:	ldr	r1, [r4, #32]
   2a6a4:	ldr	r2, [r4, #136]	; 0x88
   2a6a8:	ldr	r7, [r4, #168]	; 0xa8
   2a6ac:	add	r6, r3, #1
   2a6b0:	str	r2, [r4, #144]	; 0x90
   2a6b4:	str	r6, [r4, #148]	; 0x94
   2a6b8:	str	r3, [r4, #152]	; 0x98
   2a6bc:	str	r7, [r1, #16]
   2a6c0:	ldr	r1, [pc, #28]	; 2a6e4 <flatcc_builder_start_buffer@@Base+0xbc>
   2a6c4:	ldr	r1, [pc, r1]
   2a6c8:	movne	r1, r5
   2a6cc:	ldr	r1, [r1]
   2a6d0:	str	r1, [r4, #168]	; 0xa8
   2a6d4:	ldr	r1, [r4, #32]
   2a6d8:	strh	r0, [r1, #14]
   2a6dc:	mov	r0, #0
   2a6e0:	pop	{r4, r5, r6, r7, fp, pc}
   2a6e4:	andeq	fp, r1, r8, lsr #19
   2a6e8:	push	{r4, r5, r6, r7, fp, lr}
   2a6ec:	add	fp, sp, #16
   2a6f0:	sub	sp, sp, #8
   2a6f4:	mov	r5, r1
   2a6f8:	ldr	r1, [r0, #156]	; 0x9c
   2a6fc:	ldr	r2, [r0, #160]	; 0xa0
   2a700:	mov	r4, r0
   2a704:	add	r0, r1, #1
   2a708:	cmp	r1, r2
   2a70c:	str	r0, [r4, #156]	; 0x9c
   2a710:	bge	2a724 <flatcc_builder_start_buffer@@Base+0xfc>
   2a714:	ldr	r0, [r4, #32]
   2a718:	add	r0, r0, #36	; 0x24
   2a71c:	str	r0, [r4, #32]
   2a720:	b	2a7b8 <flatcc_builder_start_buffer@@Base+0x190>
   2a724:	ldr	r2, [r4, #176]	; 0xb0
   2a728:	mvn	r6, #0
   2a72c:	cmp	r2, #1
   2a730:	cmpge	r1, r2
   2a734:	bge	2a7f0 <flatcc_builder_start_buffer@@Base+0x1c8>
   2a738:	add	r7, r0, r0, lsl #3
   2a73c:	ldr	r0, [r4, #88]	; 0x58
   2a740:	lsl	r2, r7, #2
   2a744:	cmp	r2, r0
   2a748:	bls	2a770 <flatcc_builder_start_buffer@@Base+0x148>
   2a74c:	ldr	r0, [r4, #40]	; 0x28
   2a750:	ldr	ip, [r4, #48]	; 0x30
   2a754:	mov	r3, #4
   2a758:	add	r1, r4, #84	; 0x54
   2a75c:	str	r3, [sp]
   2a760:	mov	r3, #0
   2a764:	blx	ip
   2a768:	cmp	r0, #0
   2a76c:	bne	2a7fc <flatcc_builder_start_buffer@@Base+0x1d4>
   2a770:	ldr	r1, [r4, #84]	; 0x54
   2a774:	mvn	r0, #35	; 0x23
   2a778:	add	r0, r0, r7, lsl #2
   2a77c:	adds	r0, r0, r1
   2a780:	str	r0, [r4, #32]
   2a784:	beq	2a7f0 <flatcc_builder_start_buffer@@Base+0x1c8>
   2a788:	ldr	r1, [r4, #88]	; 0x58
   2a78c:	movw	r3, #36409	; 0x8e39
   2a790:	ldr	r2, [r4, #176]	; 0xb0
   2a794:	movt	r3, #14563	; 0x38e3
   2a798:	umull	r1, r3, r1, r3
   2a79c:	cmp	r2, r3, lsr #3
   2a7a0:	lsr	r1, r3, #3
   2a7a4:	mov	r3, r1
   2a7a8:	movlt	r3, r2
   2a7ac:	cmp	r2, #0
   2a7b0:	movle	r3, r1
   2a7b4:	str	r3, [r4, #160]	; 0xa0
   2a7b8:	ldr	r1, [r4, #20]
   2a7bc:	mvn	r3, #3
   2a7c0:	mov	r6, #0
   2a7c4:	str	r1, [r0, #8]
   2a7c8:	ldrh	r2, [r4, #130]	; 0x82
   2a7cc:	strh	r2, [r0, #12]
   2a7d0:	strh	r5, [r4, #130]	; 0x82
   2a7d4:	ldr	r2, [r4, #28]
   2a7d8:	stm	r0, {r2, r3}
   2a7dc:	add	r0, r1, r2
   2a7e0:	str	r6, [r4, #20]
   2a7e4:	add	r0, r0, #7
   2a7e8:	bic	r0, r0, #7
   2a7ec:	str	r0, [r4, #28]
   2a7f0:	mov	r0, r6
   2a7f4:	sub	sp, fp, #16
   2a7f8:	pop	{r4, r5, r6, r7, fp, pc}
   2a7fc:	ldr	r0, [pc, #24]	; 2a81c <flatcc_builder_start_buffer@@Base+0x1f4>
   2a800:	ldr	r1, [pc, #24]	; 2a820 <flatcc_builder_start_buffer@@Base+0x1f8>
   2a804:	ldr	r3, [pc, #24]	; 2a824 <flatcc_builder_start_buffer@@Base+0x1fc>
   2a808:	mov	r2, #308	; 0x134
   2a80c:	add	r0, pc, r0
   2a810:	add	r1, pc, r1
   2a814:	add	r3, pc, r3
   2a818:	bl	12bbc <__assert_fail@plt>
   2a81c:			; <UNDEFINED> instruction: 0x0000a6bf
   2a820:	strdeq	r9, [r0], -lr
   2a824:	strdeq	sl, [r0], -r1

0002a828 <flatcc_builder_end_buffer@@Base>:
   2a828:	push	{r4, r5, r6, sl, fp, lr}
   2a82c:	add	fp, sp, #16
   2a830:	sub	sp, sp, #8
   2a834:	mov	r4, r0
   2a838:	ldr	r0, [r0, #32]
   2a83c:	ldrh	r0, [r0, #14]
   2a840:	cmp	r0, #1
   2a844:	bne	2a938 <flatcc_builder_end_buffer@@Base+0x110>
   2a848:	mov	r3, r1
   2a84c:	ldr	r1, [r4, #152]	; 0x98
   2a850:	ldrh	r0, [r4, #164]	; 0xa4
   2a854:	ldrh	r2, [r4, #132]	; 0x84
   2a858:	cmp	r1, #0
   2a85c:	ldrh	r1, [r4, #128]	; 0x80
   2a860:	and	r0, r0, #2
   2a864:	orrne	r0, r0, #1
   2a868:	cmp	r1, r2
   2a86c:	movcc	r1, r2
   2a870:	strhcc	r2, [r4, #128]	; 0x80
   2a874:	str	r0, [sp, #4]
   2a878:	mov	r0, r4
   2a87c:	str	r1, [sp]
   2a880:	add	r1, r4, #168	; 0xa8
   2a884:	bl	2a29c <flatcc_builder_create_buffer@@Base>
   2a888:	mov	r6, r0
   2a88c:	cmp	r0, #0
   2a890:	beq	2a92c <flatcc_builder_end_buffer@@Base+0x104>
   2a894:	ldr	r1, [r4, #32]
   2a898:	ldr	r0, [r4, #16]
   2a89c:	ldr	r2, [r4, #20]
   2a8a0:	ldr	r3, [r1, #20]
   2a8a4:	str	r3, [r4, #144]	; 0x90
   2a8a8:	ldr	r3, [r1, #28]
   2a8ac:	str	r3, [r4, #152]	; 0x98
   2a8b0:	ldr	r3, [r1, #16]
   2a8b4:	str	r3, [r4, #168]	; 0xa8
   2a8b8:	ldrh	r1, [r1, #32]
   2a8bc:	strh	r1, [r4, #164]	; 0xa4
   2a8c0:	mov	r1, #0
   2a8c4:	bl	12b5c <memset@plt>
   2a8c8:	ldr	r0, [r4, #32]
   2a8cc:	ldr	r1, [r4, #60]	; 0x3c
   2a8d0:	ldr	r2, [r4, #64]	; 0x40
   2a8d4:	ldr	r3, [r0, #8]
   2a8d8:	str	r3, [r4, #20]
   2a8dc:	ldr	r3, [r0]
   2a8e0:	str	r3, [r4, #28]
   2a8e4:	add	r1, r1, r3
   2a8e8:	ldr	r5, [r0, #4]
   2a8ec:	str	r1, [r4, #16]
   2a8f0:	sub	r1, r2, r3
   2a8f4:	cmp	r1, r5
   2a8f8:	movhi	r1, r5
   2a8fc:	str	r1, [r4, #24]
   2a900:	ldrh	r1, [r4, #130]	; 0x82
   2a904:	ldrh	r2, [r4, #128]	; 0x80
   2a908:	cmp	r2, r1
   2a90c:	strhcc	r1, [r4, #128]	; 0x80
   2a910:	ldrh	r1, [r0, #12]
   2a914:	sub	r0, r0, #36	; 0x24
   2a918:	str	r0, [r4, #32]
   2a91c:	strh	r1, [r4, #130]	; 0x82
   2a920:	ldr	r0, [r4, #156]	; 0x9c
   2a924:	sub	r0, r0, #1
   2a928:	str	r0, [r4, #156]	; 0x9c
   2a92c:	mov	r0, r6
   2a930:	sub	sp, fp, #16
   2a934:	pop	{r4, r5, r6, sl, fp, pc}
   2a938:	ldr	r0, [pc, #24]	; 2a958 <flatcc_builder_end_buffer@@Base+0x130>
   2a93c:	ldr	r1, [pc, #24]	; 2a95c <flatcc_builder_end_buffer@@Base+0x134>
   2a940:	ldr	r3, [pc, #24]	; 2a960 <flatcc_builder_end_buffer@@Base+0x138>
   2a944:	movw	r2, #838	; 0x346
   2a948:	add	r0, pc, r0
   2a94c:	add	r1, pc, r1
   2a950:	add	r3, pc, r3
   2a954:	bl	12bbc <__assert_fail@plt>
   2a958:	andeq	r9, r0, ip, lsl #12
   2a95c:	andeq	r9, r0, r2, asr #7
   2a960:	andeq	r9, r0, r0, lsr r6

0002a964 <flatcc_builder_start_struct@@Base>:
   2a964:	push	{r4, r5, r6, r7, fp, lr}
   2a968:	add	fp, sp, #16
   2a96c:	sub	sp, sp, #8
   2a970:	mov	r6, r1
   2a974:	mov	r1, r2
   2a978:	mov	r4, r0
   2a97c:	bl	2a6e8 <flatcc_builder_start_buffer@@Base+0xc0>
   2a980:	mov	r5, #0
   2a984:	cmp	r0, #0
   2a988:	bne	2aa38 <flatcc_builder_start_struct@@Base+0xd4>
   2a98c:	ldr	r2, [r4, #32]
   2a990:	mov	r0, #2
   2a994:	mvn	r7, #3
   2a998:	strh	r0, [r2, #14]
   2a99c:	ldr	r1, [r4, #28]
   2a9a0:	ldr	r3, [r4, #64]	; 0x40
   2a9a4:	ldr	r0, [r4, #60]	; 0x3c
   2a9a8:	sub	r3, r3, r1
   2a9ac:	add	r0, r0, r1
   2a9b0:	cmn	r3, #4
   2a9b4:	str	r0, [r4, #16]
   2a9b8:	movcs	r3, r7
   2a9bc:	str	r3, [r4, #24]
   2a9c0:	str	r7, [r2, #4]
   2a9c4:	ldr	r7, [r4, #20]
   2a9c8:	add	r2, r7, r6
   2a9cc:	cmp	r2, r3
   2a9d0:	str	r2, [r4, #20]
   2a9d4:	bcc	2aa34 <flatcc_builder_start_struct@@Base+0xd0>
   2a9d8:	ldr	r0, [r4, #40]	; 0x28
   2a9dc:	ldr	r6, [r4, #48]	; 0x30
   2a9e0:	add	r1, r1, r2
   2a9e4:	mov	r3, #1
   2a9e8:	str	r3, [sp]
   2a9ec:	add	r2, r1, #1
   2a9f0:	add	r1, r4, #60	; 0x3c
   2a9f4:	mov	r3, #1
   2a9f8:	blx	r6
   2a9fc:	cmp	r0, #0
   2aa00:	bne	2aa38 <flatcc_builder_start_struct@@Base+0xd4>
   2aa04:	ldr	r1, [r4, #28]
   2aa08:	ldr	r0, [r4, #60]	; 0x3c
   2aa0c:	ldr	r3, [r4, #64]	; 0x40
   2aa10:	ldr	r2, [r4, #32]
   2aa14:	add	r0, r0, r1
   2aa18:	sub	r1, r3, r1
   2aa1c:	mvn	r3, #3
   2aa20:	cmn	r1, #4
   2aa24:	str	r0, [r4, #16]
   2aa28:	movcs	r1, r3
   2aa2c:	str	r1, [r4, #24]
   2aa30:	str	r3, [r2, #4]
   2aa34:	add	r5, r0, r7
   2aa38:	mov	r0, r5
   2aa3c:	sub	sp, fp, #16
   2aa40:	pop	{r4, r5, r6, r7, fp, pc}

0002aa44 <flatcc_builder_struct_edit@@Base>:
   2aa44:	ldr	r0, [r0, #16]
   2aa48:	bx	lr

0002aa4c <flatcc_builder_end_struct@@Base>:
   2aa4c:	push	{r4, r5, fp, lr}
   2aa50:	add	fp, sp, #8
   2aa54:	mov	r4, r0
   2aa58:	ldr	r0, [r0, #32]
   2aa5c:	ldrh	r0, [r0, #14]
   2aa60:	cmp	r0, #2
   2aa64:	bne	2ab04 <flatcc_builder_end_struct@@Base+0xb8>
   2aa68:	ldrh	r3, [r4, #130]	; 0x82
   2aa6c:	ldr	r1, [r4, #16]
   2aa70:	ldr	r2, [r4, #20]
   2aa74:	mov	r0, r4
   2aa78:	bl	2a4d8 <flatcc_builder_create_struct@@Base>
   2aa7c:	mov	r5, r0
   2aa80:	cmp	r0, #0
   2aa84:	beq	2aafc <flatcc_builder_end_struct@@Base+0xb0>
   2aa88:	ldr	r0, [r4, #16]
   2aa8c:	ldr	r2, [r4, #20]
   2aa90:	mov	r1, #0
   2aa94:	bl	12b5c <memset@plt>
   2aa98:	ldr	r0, [r4, #32]
   2aa9c:	ldr	r1, [r4, #60]	; 0x3c
   2aaa0:	ldr	ip, [r4, #64]	; 0x40
   2aaa4:	ldr	r3, [r0, #8]
   2aaa8:	str	r3, [r4, #20]
   2aaac:	ldr	r3, [r0]
   2aab0:	str	r3, [r4, #28]
   2aab4:	add	r1, r1, r3
   2aab8:	ldr	r2, [r0, #4]
   2aabc:	str	r1, [r4, #16]
   2aac0:	sub	r1, ip, r3
   2aac4:	cmp	r1, r2
   2aac8:	movhi	r1, r2
   2aacc:	str	r1, [r4, #24]
   2aad0:	ldrh	r1, [r4, #130]	; 0x82
   2aad4:	ldrh	r2, [r4, #128]	; 0x80
   2aad8:	cmp	r2, r1
   2aadc:	strhcc	r1, [r4, #128]	; 0x80
   2aae0:	ldrh	r1, [r0, #12]
   2aae4:	sub	r0, r0, #36	; 0x24
   2aae8:	str	r0, [r4, #32]
   2aaec:	strh	r1, [r4, #130]	; 0x82
   2aaf0:	ldr	r0, [r4, #156]	; 0x9c
   2aaf4:	sub	r0, r0, #1
   2aaf8:	str	r0, [r4, #156]	; 0x9c
   2aafc:	mov	r0, r5
   2ab00:	pop	{r4, r5, fp, pc}
   2ab04:	ldr	r0, [pc, #24]	; 2ab24 <flatcc_builder_end_struct@@Base+0xd8>
   2ab08:	ldr	r1, [pc, #24]	; 2ab28 <flatcc_builder_end_struct@@Base+0xdc>
   2ab0c:	ldr	r3, [pc, #24]	; 2ab2c <flatcc_builder_end_struct@@Base+0xe0>
   2ab10:	mov	r2, #872	; 0x368
   2ab14:	add	r0, pc, r0
   2ab18:	add	r1, pc, r1
   2ab1c:	add	r3, pc, r3
   2ab20:	bl	12bbc <__assert_fail@plt>
   2ab24:	andeq	r9, r0, r5, asr #9
   2ab28:	strdeq	r9, [r0], -r6
   2ab2c:	andeq	r9, r0, r9, ror #9

0002ab30 <flatcc_builder_extend_vector@@Base>:
   2ab30:	push	{r4, r5, fp, lr}
   2ab34:	add	fp, sp, #8
   2ab38:	sub	sp, sp, #8
   2ab3c:	mov	r4, r0
   2ab40:	ldr	r0, [r0, #32]
   2ab44:	ldr	r2, [r0, #20]
   2ab48:	adds	r2, r2, r1
   2ab4c:	bcs	2ac04 <flatcc_builder_extend_vector@@Base+0xd4>
   2ab50:	ldr	r3, [r0, #24]
   2ab54:	cmp	r2, r3
   2ab58:	bhi	2ac04 <flatcc_builder_extend_vector@@Base+0xd4>
   2ab5c:	str	r2, [r0, #20]
   2ab60:	ldr	r2, [r4, #32]
   2ab64:	ldr	r5, [r4, #20]
   2ab68:	ldr	r0, [r4, #24]
   2ab6c:	ldr	r2, [r2, #16]
   2ab70:	mla	r1, r2, r1, r5
   2ab74:	cmp	r1, r0
   2ab78:	str	r1, [r4, #20]
   2ab7c:	bcs	2ab88 <flatcc_builder_extend_vector@@Base+0x58>
   2ab80:	ldr	r0, [r4, #16]
   2ab84:	b	2abf8 <flatcc_builder_extend_vector@@Base+0xc8>
   2ab88:	ldr	r2, [r4, #28]
   2ab8c:	ldr	r0, [r4, #40]	; 0x28
   2ab90:	ldr	ip, [r4, #48]	; 0x30
   2ab94:	mov	r3, #1
   2ab98:	str	r3, [sp]
   2ab9c:	mov	r3, #1
   2aba0:	add	r1, r1, r2
   2aba4:	add	r2, r1, #1
   2aba8:	add	r1, r4, #60	; 0x3c
   2abac:	blx	ip
   2abb0:	mov	r1, r0
   2abb4:	mov	r0, #0
   2abb8:	cmp	r1, #0
   2abbc:	beq	2abc8 <flatcc_builder_extend_vector@@Base+0x98>
   2abc0:	sub	sp, fp, #8
   2abc4:	pop	{r4, r5, fp, pc}
   2abc8:	ldr	r1, [r4, #28]
   2abcc:	ldr	r0, [r4, #60]	; 0x3c
   2abd0:	ldr	r3, [r4, #64]	; 0x40
   2abd4:	ldr	r2, [r4, #32]
   2abd8:	add	r0, r0, r1
   2abdc:	sub	r1, r3, r1
   2abe0:	mvn	r3, #3
   2abe4:	cmn	r1, #4
   2abe8:	str	r0, [r4, #16]
   2abec:	movcs	r1, r3
   2abf0:	str	r1, [r4, #24]
   2abf4:	str	r3, [r2, #4]
   2abf8:	add	r0, r0, r5
   2abfc:	sub	sp, fp, #8
   2ac00:	pop	{r4, r5, fp, pc}
   2ac04:	ldr	r0, [pc, #24]	; 2ac24 <flatcc_builder_extend_vector@@Base+0xf4>
   2ac08:	ldr	r1, [pc, #24]	; 2ac28 <flatcc_builder_extend_vector@@Base+0xf8>
   2ac0c:	ldr	r3, [pc, #24]	; 2ac2c <flatcc_builder_extend_vector@@Base+0xfc>
   2ac10:	mov	r2, #892	; 0x37c
   2ac14:	add	r0, pc, r0
   2ac18:	add	r1, pc, r1
   2ac1c:	add	r3, pc, r3
   2ac20:	bl	12bbc <__assert_fail@plt>
   2ac24:	andeq	sl, r0, r0, asr #3
   2ac28:	strdeq	r9, [r0], -r6
   2ac2c:	ldrdeq	sl, [r0], -r3

0002ac30 <flatcc_builder_vector_push@@Base>:
   2ac30:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2ac34:	add	fp, sp, #24
   2ac38:	sub	sp, sp, #8
   2ac3c:	mov	r5, r0
   2ac40:	ldr	r0, [r0, #32]
   2ac44:	mov	r8, r1
   2ac48:	ldrh	r1, [r0, #14]
   2ac4c:	cmp	r1, #4
   2ac50:	bne	2ad28 <flatcc_builder_vector_push@@Base+0xf8>
   2ac54:	ldr	r1, [r0, #20]
   2ac58:	ldr	r2, [r0, #24]
   2ac5c:	cmp	r1, r2
   2ac60:	bhi	2ad48 <flatcc_builder_vector_push@@Base+0x118>
   2ac64:	add	r1, r1, #1
   2ac68:	str	r1, [r0, #20]
   2ac6c:	ldr	r1, [r5, #32]
   2ac70:	ldr	r4, [r5, #20]
   2ac74:	ldr	r0, [r5, #24]
   2ac78:	ldr	r6, [r1, #16]
   2ac7c:	add	r1, r4, r6
   2ac80:	cmp	r1, r0
   2ac84:	str	r1, [r5, #20]
   2ac88:	bcs	2acac <flatcc_builder_vector_push@@Base+0x7c>
   2ac8c:	ldr	r0, [r5, #16]
   2ac90:	adds	r7, r0, r4
   2ac94:	beq	2ad18 <flatcc_builder_vector_push@@Base+0xe8>
   2ac98:	mov	r0, r7
   2ac9c:	mov	r1, r8
   2aca0:	mov	r2, r6
   2aca4:	bl	12aa8 <memcpy@plt>
   2aca8:	b	2ad1c <flatcc_builder_vector_push@@Base+0xec>
   2acac:	ldr	r2, [r5, #28]
   2acb0:	ldr	r0, [r5, #40]	; 0x28
   2acb4:	ldr	r7, [r5, #48]	; 0x30
   2acb8:	mov	r3, #1
   2acbc:	str	r3, [sp]
   2acc0:	mov	r3, #1
   2acc4:	add	r1, r1, r2
   2acc8:	add	r2, r1, #1
   2accc:	add	r1, r5, #60	; 0x3c
   2acd0:	blx	r7
   2acd4:	mov	r7, #0
   2acd8:	cmp	r0, #0
   2acdc:	bne	2ad1c <flatcc_builder_vector_push@@Base+0xec>
   2ace0:	ldr	r1, [r5, #28]
   2ace4:	ldr	r0, [r5, #60]	; 0x3c
   2ace8:	ldr	r3, [r5, #64]	; 0x40
   2acec:	ldr	r2, [r5, #32]
   2acf0:	add	r0, r0, r1
   2acf4:	sub	r1, r3, r1
   2acf8:	mvn	r3, #3
   2acfc:	cmn	r1, #4
   2ad00:	str	r0, [r5, #16]
   2ad04:	movcs	r1, r3
   2ad08:	str	r1, [r5, #24]
   2ad0c:	str	r3, [r2, #4]
   2ad10:	adds	r7, r0, r4
   2ad14:	bne	2ac98 <flatcc_builder_vector_push@@Base+0x68>
   2ad18:	mov	r7, #0
   2ad1c:	mov	r0, r7
   2ad20:	sub	sp, fp, #24
   2ad24:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2ad28:	ldr	r0, [pc, #56]	; 2ad68 <flatcc_builder_vector_push@@Base+0x138>
   2ad2c:	ldr	r1, [pc, #56]	; 2ad6c <flatcc_builder_vector_push@@Base+0x13c>
   2ad30:	ldr	r3, [pc, #56]	; 2ad70 <flatcc_builder_vector_push@@Base+0x140>
   2ad34:	movw	r2, #907	; 0x38b
   2ad38:	add	r0, pc, r0
   2ad3c:	add	r1, pc, r1
   2ad40:	add	r3, pc, r3
   2ad44:	bl	12bbc <__assert_fail@plt>
   2ad48:	ldr	r0, [pc, #36]	; 2ad74 <flatcc_builder_vector_push@@Base+0x144>
   2ad4c:	ldr	r1, [pc, #36]	; 2ad78 <flatcc_builder_vector_push@@Base+0x148>
   2ad50:	ldr	r3, [pc, #36]	; 2ad7c <flatcc_builder_vector_push@@Base+0x14c>
   2ad54:	mov	r2, #908	; 0x38c
   2ad58:	add	r0, pc, r0
   2ad5c:	add	r1, pc, r1
   2ad60:	add	r3, pc, r3
   2ad64:	bl	12bbc <__assert_fail@plt>
   2ad68:	andeq	r9, r0, r0, lsl r3
   2ad6c:	ldrdeq	r8, [r0], -r2
   2ad70:	andeq	r9, r0, r4, lsr r3
   2ad74:	andeq	r9, r0, pc, asr r3
   2ad78:			; <UNDEFINED> instruction: 0x00008fb2
   2ad7c:	andeq	r9, r0, r4, lsl r3

0002ad80 <flatcc_builder_append_vector@@Base>:
   2ad80:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2ad84:	add	fp, sp, #24
   2ad88:	sub	sp, sp, #8
   2ad8c:	mov	r6, r0
   2ad90:	ldr	r0, [r0, #32]
   2ad94:	mov	r8, r1
   2ad98:	ldrh	r1, [r0, #14]
   2ad9c:	cmp	r1, #4
   2ada0:	bne	2aea0 <flatcc_builder_append_vector@@Base+0x120>
   2ada4:	ldr	r1, [r0, #20]
   2ada8:	mov	r5, r2
   2adac:	adds	r1, r1, r2
   2adb0:	bcs	2ae80 <flatcc_builder_append_vector@@Base+0x100>
   2adb4:	ldr	r2, [r0, #24]
   2adb8:	cmp	r1, r2
   2adbc:	bhi	2ae80 <flatcc_builder_append_vector@@Base+0x100>
   2adc0:	str	r1, [r0, #20]
   2adc4:	ldr	r1, [r6, #32]
   2adc8:	ldr	r4, [r6, #20]
   2adcc:	ldr	r0, [r6, #24]
   2add0:	ldr	r9, [r1, #16]
   2add4:	mla	r1, r9, r5, r4
   2add8:	cmp	r1, r0
   2addc:	str	r1, [r6, #20]
   2ade0:	bcs	2ae04 <flatcc_builder_append_vector@@Base+0x84>
   2ade4:	ldr	r0, [r6, #16]
   2ade8:	adds	r7, r0, r4
   2adec:	beq	2ae70 <flatcc_builder_append_vector@@Base+0xf0>
   2adf0:	mul	r2, r9, r5
   2adf4:	mov	r0, r7
   2adf8:	mov	r1, r8
   2adfc:	bl	12aa8 <memcpy@plt>
   2ae00:	b	2ae74 <flatcc_builder_append_vector@@Base+0xf4>
   2ae04:	ldr	r2, [r6, #28]
   2ae08:	ldr	r0, [r6, #40]	; 0x28
   2ae0c:	ldr	r7, [r6, #48]	; 0x30
   2ae10:	mov	r3, #1
   2ae14:	str	r3, [sp]
   2ae18:	mov	r3, #1
   2ae1c:	add	r1, r1, r2
   2ae20:	add	r2, r1, #1
   2ae24:	add	r1, r6, #60	; 0x3c
   2ae28:	blx	r7
   2ae2c:	mov	r7, #0
   2ae30:	cmp	r0, #0
   2ae34:	bne	2ae74 <flatcc_builder_append_vector@@Base+0xf4>
   2ae38:	ldr	r1, [r6, #28]
   2ae3c:	ldr	r0, [r6, #60]	; 0x3c
   2ae40:	ldr	r3, [r6, #64]	; 0x40
   2ae44:	ldr	r2, [r6, #32]
   2ae48:	add	r0, r0, r1
   2ae4c:	sub	r1, r3, r1
   2ae50:	mvn	r3, #3
   2ae54:	cmn	r1, #4
   2ae58:	str	r0, [r6, #16]
   2ae5c:	movcs	r1, r3
   2ae60:	str	r1, [r6, #24]
   2ae64:	str	r3, [r2, #4]
   2ae68:	adds	r7, r0, r4
   2ae6c:	bne	2adf0 <flatcc_builder_append_vector@@Base+0x70>
   2ae70:	mov	r7, #0
   2ae74:	mov	r0, r7
   2ae78:	sub	sp, fp, #24
   2ae7c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2ae80:	ldr	r0, [pc, #68]	; 2aecc <flatcc_builder_append_vector@@Base+0x14c>
   2ae84:	ldr	r1, [pc, #68]	; 2aed0 <flatcc_builder_append_vector@@Base+0x150>
   2ae88:	ldr	r3, [pc, #68]	; 2aed4 <flatcc_builder_append_vector@@Base+0x154>
   2ae8c:	mov	r2, #892	; 0x37c
   2ae90:	add	r0, pc, r0
   2ae94:	add	r1, pc, r1
   2ae98:	add	r3, pc, r3
   2ae9c:	bl	12bbc <__assert_fail@plt>
   2aea0:	ldr	r0, [pc, #24]	; 2aec0 <flatcc_builder_append_vector@@Base+0x140>
   2aea4:	ldr	r1, [pc, #24]	; 2aec4 <flatcc_builder_append_vector@@Base+0x144>
   2aea8:	ldr	r3, [pc, #24]	; 2aec8 <flatcc_builder_append_vector@@Base+0x148>
   2aeac:	movw	r2, #915	; 0x393
   2aeb0:	add	r0, pc, r0
   2aeb4:	add	r1, pc, r1
   2aeb8:	add	r3, pc, r3
   2aebc:	bl	12bbc <__assert_fail@plt>
   2aec0:	muleq	r0, r8, r1
   2aec4:	andeq	r8, r0, sl, asr lr
   2aec8:	andeq	r9, r0, ip, lsr r2
   2aecc:	andeq	r9, r0, r4, asr #30
   2aed0:	andeq	r8, r0, sl, ror lr
   2aed4:	andeq	r9, r0, r7, asr pc

0002aed8 <flatcc_builder_extend_offset_vector@@Base>:
   2aed8:	push	{r4, r5, fp, lr}
   2aedc:	add	fp, sp, #8
   2aee0:	sub	sp, sp, #8
   2aee4:	mov	r4, r0
   2aee8:	ldr	r0, [r0, #32]
   2aeec:	ldr	r2, [r0, #20]
   2aef0:	adds	r2, r2, r1
   2aef4:	cmpcc	r2, #1073741824	; 0x40000000
   2aef8:	bcc	2af1c <flatcc_builder_extend_offset_vector@@Base+0x44>
   2aefc:	ldr	r0, [pc, #184]	; 2afbc <flatcc_builder_extend_offset_vector@@Base+0xe4>
   2af00:	ldr	r1, [pc, #184]	; 2afc0 <flatcc_builder_extend_offset_vector@@Base+0xe8>
   2af04:	ldr	r3, [pc, #184]	; 2afc4 <flatcc_builder_extend_offset_vector@@Base+0xec>
   2af08:	mov	r2, #892	; 0x37c
   2af0c:	add	r0, pc, r0
   2af10:	add	r1, pc, r1
   2af14:	add	r3, pc, r3
   2af18:	bl	12bbc <__assert_fail@plt>
   2af1c:	str	r2, [r0, #20]
   2af20:	ldr	r5, [r4, #20]
   2af24:	ldr	r0, [r4, #24]
   2af28:	add	r1, r5, r1, lsl #2
   2af2c:	cmp	r1, r0
   2af30:	str	r1, [r4, #20]
   2af34:	bcs	2af40 <flatcc_builder_extend_offset_vector@@Base+0x68>
   2af38:	ldr	r0, [r4, #16]
   2af3c:	b	2afb0 <flatcc_builder_extend_offset_vector@@Base+0xd8>
   2af40:	ldr	r2, [r4, #28]
   2af44:	ldr	r0, [r4, #40]	; 0x28
   2af48:	ldr	ip, [r4, #48]	; 0x30
   2af4c:	mov	r3, #1
   2af50:	str	r3, [sp]
   2af54:	mov	r3, #1
   2af58:	add	r1, r1, r2
   2af5c:	add	r2, r1, #1
   2af60:	add	r1, r4, #60	; 0x3c
   2af64:	blx	ip
   2af68:	mov	r1, r0
   2af6c:	mov	r0, #0
   2af70:	cmp	r1, #0
   2af74:	beq	2af80 <flatcc_builder_extend_offset_vector@@Base+0xa8>
   2af78:	sub	sp, fp, #8
   2af7c:	pop	{r4, r5, fp, pc}
   2af80:	ldr	r1, [r4, #28]
   2af84:	ldr	r0, [r4, #60]	; 0x3c
   2af88:	ldr	r3, [r4, #64]	; 0x40
   2af8c:	ldr	r2, [r4, #32]
   2af90:	add	r0, r0, r1
   2af94:	sub	r1, r3, r1
   2af98:	mvn	r3, #3
   2af9c:	cmn	r1, #4
   2afa0:	str	r0, [r4, #16]
   2afa4:	movcs	r1, r3
   2afa8:	str	r1, [r4, #24]
   2afac:	str	r3, [r2, #4]
   2afb0:	add	r0, r0, r5
   2afb4:	sub	sp, fp, #8
   2afb8:	pop	{r4, r5, fp, pc}
   2afbc:	andeq	r9, r0, r8, asr #29
   2afc0:	strdeq	r8, [r0], -lr
   2afc4:	ldrdeq	r9, [r0], -fp

0002afc8 <flatcc_builder_offset_vector_push@@Base>:
   2afc8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2afcc:	add	fp, sp, #24
   2afd0:	sub	sp, sp, #8
   2afd4:	mov	r6, r0
   2afd8:	ldr	r0, [r0, #32]
   2afdc:	mov	r8, r1
   2afe0:	ldrh	r1, [r0, #14]
   2afe4:	cmp	r1, #5
   2afe8:	bne	2b09c <flatcc_builder_offset_vector_push@@Base+0xd4>
   2afec:	ldr	r1, [r0, #20]
   2aff0:	mov	r5, #0
   2aff4:	cmn	r1, #-1073741823	; 0xc0000001
   2aff8:	beq	2b090 <flatcc_builder_offset_vector_push@@Base+0xc8>
   2affc:	add	r1, r1, #1
   2b000:	str	r1, [r0, #20]
   2b004:	ldr	r7, [r6, #20]
   2b008:	ldr	r0, [r6, #24]
   2b00c:	add	r1, r7, #4
   2b010:	cmp	r1, r0
   2b014:	str	r1, [r6, #20]
   2b018:	bcs	2b024 <flatcc_builder_offset_vector_push@@Base+0x5c>
   2b01c:	ldr	r0, [r6, #16]
   2b020:	b	2b084 <flatcc_builder_offset_vector_push@@Base+0xbc>
   2b024:	ldr	r1, [r6, #28]
   2b028:	ldr	r0, [r6, #40]	; 0x28
   2b02c:	ldr	r4, [r6, #48]	; 0x30
   2b030:	mov	r2, #1
   2b034:	mov	r3, #1
   2b038:	str	r2, [sp]
   2b03c:	add	r1, r7, r1
   2b040:	add	r2, r1, #5
   2b044:	add	r1, r6, #60	; 0x3c
   2b048:	blx	r4
   2b04c:	cmp	r0, #0
   2b050:	bne	2b090 <flatcc_builder_offset_vector_push@@Base+0xc8>
   2b054:	ldr	r1, [r6, #28]
   2b058:	ldr	r0, [r6, #60]	; 0x3c
   2b05c:	ldr	r3, [r6, #64]	; 0x40
   2b060:	ldr	r2, [r6, #32]
   2b064:	add	r0, r0, r1
   2b068:	sub	r1, r3, r1
   2b06c:	mvn	r3, #3
   2b070:	cmn	r1, #4
   2b074:	str	r0, [r6, #16]
   2b078:	movcs	r1, r3
   2b07c:	str	r1, [r6, #24]
   2b080:	str	r3, [r2, #4]
   2b084:	adds	r0, r0, r7
   2b088:	movne	r5, r0
   2b08c:	strne	r8, [r0]
   2b090:	mov	r0, r5
   2b094:	sub	sp, fp, #24
   2b098:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2b09c:	ldr	r0, [pc, #24]	; 2b0bc <flatcc_builder_offset_vector_push@@Base+0xf4>
   2b0a0:	ldr	r1, [pc, #24]	; 2b0c0 <flatcc_builder_offset_vector_push@@Base+0xf8>
   2b0a4:	ldr	r3, [pc, #24]	; 2b0c4 <flatcc_builder_offset_vector_push@@Base+0xfc>
   2b0a8:	movw	r2, #934	; 0x3a6
   2b0ac:	add	r0, pc, r0
   2b0b0:	add	r1, pc, r1
   2b0b4:	add	r3, pc, r3
   2b0b8:	bl	12bbc <__assert_fail@plt>
   2b0bc:	muleq	r0, r5, r0
   2b0c0:	andeq	r8, r0, lr, asr ip
   2b0c4:	andeq	r9, r0, r0, asr #1

0002b0c8 <flatcc_builder_append_offset_vector@@Base>:
   2b0c8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2b0cc:	add	fp, sp, #24
   2b0d0:	sub	sp, sp, #8
   2b0d4:	mov	r6, r0
   2b0d8:	ldr	r0, [r0, #32]
   2b0dc:	mov	r8, r1
   2b0e0:	ldrh	r1, [r0, #14]
   2b0e4:	cmp	r1, #5
   2b0e8:	bne	2b1d8 <flatcc_builder_append_offset_vector@@Base+0x110>
   2b0ec:	ldr	r1, [r0, #20]
   2b0f0:	mov	r5, r2
   2b0f4:	adds	r1, r1, r2
   2b0f8:	cmpcc	r1, #1073741824	; 0x40000000
   2b0fc:	bcc	2b120 <flatcc_builder_append_offset_vector@@Base+0x58>
   2b100:	ldr	r0, [pc, #252]	; 2b204 <flatcc_builder_append_offset_vector@@Base+0x13c>
   2b104:	ldr	r1, [pc, #252]	; 2b208 <flatcc_builder_append_offset_vector@@Base+0x140>
   2b108:	ldr	r3, [pc, #252]	; 2b20c <flatcc_builder_append_offset_vector@@Base+0x144>
   2b10c:	mov	r2, #892	; 0x37c
   2b110:	add	r0, pc, r0
   2b114:	add	r1, pc, r1
   2b118:	add	r3, pc, r3
   2b11c:	bl	12bbc <__assert_fail@plt>
   2b120:	str	r1, [r0, #20]
   2b124:	ldr	r4, [r6, #20]
   2b128:	ldr	r0, [r6, #24]
   2b12c:	add	r1, r4, r5, lsl #2
   2b130:	cmp	r1, r0
   2b134:	str	r1, [r6, #20]
   2b138:	bcs	2b15c <flatcc_builder_append_offset_vector@@Base+0x94>
   2b13c:	ldr	r0, [r6, #16]
   2b140:	adds	r7, r0, r4
   2b144:	beq	2b1c8 <flatcc_builder_append_offset_vector@@Base+0x100>
   2b148:	lsl	r2, r5, #2
   2b14c:	mov	r0, r7
   2b150:	mov	r1, r8
   2b154:	bl	12aa8 <memcpy@plt>
   2b158:	b	2b1cc <flatcc_builder_append_offset_vector@@Base+0x104>
   2b15c:	ldr	r2, [r6, #28]
   2b160:	ldr	r0, [r6, #40]	; 0x28
   2b164:	ldr	r7, [r6, #48]	; 0x30
   2b168:	mov	r3, #1
   2b16c:	str	r3, [sp]
   2b170:	mov	r3, #1
   2b174:	add	r1, r1, r2
   2b178:	add	r2, r1, #1
   2b17c:	add	r1, r6, #60	; 0x3c
   2b180:	blx	r7
   2b184:	mov	r7, #0
   2b188:	cmp	r0, #0
   2b18c:	bne	2b1cc <flatcc_builder_append_offset_vector@@Base+0x104>
   2b190:	ldr	r1, [r6, #28]
   2b194:	ldr	r0, [r6, #60]	; 0x3c
   2b198:	ldr	r3, [r6, #64]	; 0x40
   2b19c:	ldr	r2, [r6, #32]
   2b1a0:	add	r0, r0, r1
   2b1a4:	sub	r1, r3, r1
   2b1a8:	mvn	r3, #3
   2b1ac:	cmn	r1, #4
   2b1b0:	str	r0, [r6, #16]
   2b1b4:	movcs	r1, r3
   2b1b8:	str	r1, [r6, #24]
   2b1bc:	str	r3, [r2, #4]
   2b1c0:	adds	r7, r0, r4
   2b1c4:	bne	2b148 <flatcc_builder_append_offset_vector@@Base+0x80>
   2b1c8:	mov	r7, #0
   2b1cc:	mov	r0, r7
   2b1d0:	sub	sp, fp, #24
   2b1d4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2b1d8:	ldr	r0, [pc, #24]	; 2b1f8 <flatcc_builder_append_offset_vector@@Base+0x130>
   2b1dc:	ldr	r1, [pc, #24]	; 2b1fc <flatcc_builder_append_offset_vector@@Base+0x134>
   2b1e0:	ldr	r3, [pc, #24]	; 2b200 <flatcc_builder_append_offset_vector@@Base+0x138>
   2b1e4:	mov	r2, #948	; 0x3b4
   2b1e8:	add	r0, pc, r0
   2b1ec:	add	r1, pc, r1
   2b1f0:	add	r3, pc, r3
   2b1f4:	bl	12bbc <__assert_fail@plt>
   2b1f8:	andeq	r8, r0, r9, asr pc
   2b1fc:	andeq	r8, r0, r2, lsr #22
   2b200:	andeq	r8, r0, r6, ror #31
   2b204:	andeq	r9, r0, r4, asr #25
   2b208:	strdeq	r8, [r0], -sl
   2b20c:	ldrdeq	r9, [r0], -r7

0002b210 <flatcc_builder_extend_string@@Base>:
   2b210:	push	{r4, r5, fp, lr}
   2b214:	add	fp, sp, #8
   2b218:	sub	sp, sp, #8
   2b21c:	mov	r4, r0
   2b220:	ldr	r0, [r0, #32]
   2b224:	ldrh	r2, [r0, #14]
   2b228:	cmp	r2, #6
   2b22c:	bne	2b2dc <flatcc_builder_extend_string@@Base+0xcc>
   2b230:	ldr	r2, [r0, #20]
   2b234:	adds	r2, r2, r1
   2b238:	bcs	2b2fc <flatcc_builder_extend_string@@Base+0xec>
   2b23c:	str	r2, [r0, #20]
   2b240:	ldr	r5, [r4, #20]
   2b244:	ldr	r0, [r4, #24]
   2b248:	add	r1, r5, r1
   2b24c:	cmp	r1, r0
   2b250:	str	r1, [r4, #20]
   2b254:	bcs	2b260 <flatcc_builder_extend_string@@Base+0x50>
   2b258:	ldr	r0, [r4, #16]
   2b25c:	b	2b2d0 <flatcc_builder_extend_string@@Base+0xc0>
   2b260:	ldr	r2, [r4, #28]
   2b264:	ldr	r0, [r4, #40]	; 0x28
   2b268:	ldr	ip, [r4, #48]	; 0x30
   2b26c:	mov	r3, #1
   2b270:	str	r3, [sp]
   2b274:	mov	r3, #1
   2b278:	add	r1, r1, r2
   2b27c:	add	r2, r1, #1
   2b280:	add	r1, r4, #60	; 0x3c
   2b284:	blx	ip
   2b288:	mov	r1, r0
   2b28c:	mov	r0, #0
   2b290:	cmp	r1, #0
   2b294:	beq	2b2a0 <flatcc_builder_extend_string@@Base+0x90>
   2b298:	sub	sp, fp, #8
   2b29c:	pop	{r4, r5, fp, pc}
   2b2a0:	ldr	r1, [r4, #28]
   2b2a4:	ldr	r0, [r4, #60]	; 0x3c
   2b2a8:	ldr	r3, [r4, #64]	; 0x40
   2b2ac:	ldr	r2, [r4, #32]
   2b2b0:	add	r0, r0, r1
   2b2b4:	sub	r1, r3, r1
   2b2b8:	mvn	r3, #3
   2b2bc:	cmn	r1, #4
   2b2c0:	str	r0, [r4, #16]
   2b2c4:	movcs	r1, r3
   2b2c8:	str	r1, [r4, #24]
   2b2cc:	str	r3, [r2, #4]
   2b2d0:	add	r0, r0, r5
   2b2d4:	sub	sp, fp, #8
   2b2d8:	pop	{r4, r5, fp, pc}
   2b2dc:	ldr	r0, [pc, #56]	; 2b31c <flatcc_builder_extend_string@@Base+0x10c>
   2b2e0:	ldr	r1, [pc, #56]	; 2b320 <flatcc_builder_extend_string@@Base+0x110>
   2b2e4:	ldr	r3, [pc, #56]	; 2b324 <flatcc_builder_extend_string@@Base+0x114>
   2b2e8:	movw	r2, #957	; 0x3bd
   2b2ec:	add	r0, pc, r0
   2b2f0:	add	r1, pc, r1
   2b2f4:	add	r3, pc, r3
   2b2f8:	bl	12bbc <__assert_fail@plt>
   2b2fc:	ldr	r0, [pc, #36]	; 2b328 <flatcc_builder_extend_string@@Base+0x118>
   2b300:	ldr	r1, [pc, #36]	; 2b32c <flatcc_builder_extend_string@@Base+0x11c>
   2b304:	ldr	r3, [pc, #36]	; 2b330 <flatcc_builder_extend_string@@Base+0x120>
   2b308:	mov	r2, #892	; 0x37c
   2b30c:	add	r0, pc, r0
   2b310:	add	r1, pc, r1
   2b314:	add	r3, pc, r3
   2b318:	bl	12bbc <__assert_fail@plt>
   2b31c:	andeq	r8, r0, lr, asr pc
   2b320:	andeq	r8, r0, lr, lsl sl
   2b324:	andeq	r8, r0, r2, lsl #31
   2b328:	andeq	r9, r0, r8, asr #21
   2b32c:	strdeq	r8, [r0], -lr
   2b330:	ldrdeq	r9, [r0], -fp

0002b334 <flatcc_builder_append_string@@Base>:
   2b334:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2b338:	add	fp, sp, #24
   2b33c:	sub	sp, sp, #8
   2b340:	mov	r6, r0
   2b344:	ldr	r0, [r0, #32]
   2b348:	mov	r8, r1
   2b34c:	ldrh	r1, [r0, #14]
   2b350:	cmp	r1, #6
   2b354:	bne	2b420 <flatcc_builder_append_string@@Base+0xec>
   2b358:	ldr	r1, [r0, #20]
   2b35c:	mov	r4, r2
   2b360:	adds	r1, r1, r2
   2b364:	bcs	2b440 <flatcc_builder_append_string@@Base+0x10c>
   2b368:	str	r1, [r0, #20]
   2b36c:	ldr	r5, [r6, #20]
   2b370:	ldr	r0, [r6, #24]
   2b374:	add	r1, r5, r4
   2b378:	cmp	r1, r0
   2b37c:	str	r1, [r6, #20]
   2b380:	bcs	2b3a4 <flatcc_builder_append_string@@Base+0x70>
   2b384:	ldr	r0, [r6, #16]
   2b388:	adds	r7, r0, r5
   2b38c:	beq	2b410 <flatcc_builder_append_string@@Base+0xdc>
   2b390:	mov	r0, r7
   2b394:	mov	r1, r8
   2b398:	mov	r2, r4
   2b39c:	bl	12aa8 <memcpy@plt>
   2b3a0:	b	2b414 <flatcc_builder_append_string@@Base+0xe0>
   2b3a4:	ldr	r2, [r6, #28]
   2b3a8:	ldr	r0, [r6, #40]	; 0x28
   2b3ac:	ldr	r7, [r6, #48]	; 0x30
   2b3b0:	mov	r3, #1
   2b3b4:	str	r3, [sp]
   2b3b8:	mov	r3, #1
   2b3bc:	add	r1, r1, r2
   2b3c0:	add	r2, r1, #1
   2b3c4:	add	r1, r6, #60	; 0x3c
   2b3c8:	blx	r7
   2b3cc:	mov	r7, #0
   2b3d0:	cmp	r0, #0
   2b3d4:	bne	2b414 <flatcc_builder_append_string@@Base+0xe0>
   2b3d8:	ldr	r1, [r6, #28]
   2b3dc:	ldr	r0, [r6, #60]	; 0x3c
   2b3e0:	ldr	r3, [r6, #64]	; 0x40
   2b3e4:	ldr	r2, [r6, #32]
   2b3e8:	add	r0, r0, r1
   2b3ec:	sub	r1, r3, r1
   2b3f0:	mvn	r3, #3
   2b3f4:	cmn	r1, #4
   2b3f8:	str	r0, [r6, #16]
   2b3fc:	movcs	r1, r3
   2b400:	str	r1, [r6, #24]
   2b404:	str	r3, [r2, #4]
   2b408:	adds	r7, r0, r5
   2b40c:	bne	2b390 <flatcc_builder_append_string@@Base+0x5c>
   2b410:	mov	r7, #0
   2b414:	mov	r0, r7
   2b418:	sub	sp, fp, #24
   2b41c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2b420:	ldr	r0, [pc, #56]	; 2b460 <flatcc_builder_append_string@@Base+0x12c>
   2b424:	ldr	r1, [pc, #56]	; 2b464 <flatcc_builder_append_string@@Base+0x130>
   2b428:	ldr	r3, [pc, #56]	; 2b468 <flatcc_builder_append_string@@Base+0x134>
   2b42c:	movw	r2, #966	; 0x3c6
   2b430:	add	r0, pc, r0
   2b434:	add	r1, pc, r1
   2b438:	add	r3, pc, r3
   2b43c:	bl	12bbc <__assert_fail@plt>
   2b440:	ldr	r0, [pc, #36]	; 2b46c <flatcc_builder_append_string@@Base+0x138>
   2b444:	ldr	r1, [pc, #36]	; 2b470 <flatcc_builder_append_string@@Base+0x13c>
   2b448:	ldr	r3, [pc, #36]	; 2b474 <flatcc_builder_append_string@@Base+0x140>
   2b44c:	mov	r2, #892	; 0x37c
   2b450:	add	r0, pc, r0
   2b454:	add	r1, pc, r1
   2b458:	add	r3, pc, r3
   2b45c:	bl	12bbc <__assert_fail@plt>
   2b460:	andeq	r8, r0, sl, lsl lr
   2b464:	ldrdeq	r8, [r0], -sl
   2b468:	andeq	r8, r0, sp, ror lr
   2b46c:	andeq	r9, r0, r4, lsl #19
   2b470:			; <UNDEFINED> instruction: 0x000088ba
   2b474:	muleq	r0, r7, r9

0002b478 <flatcc_builder_append_string_str@@Base>:
   2b478:	push	{r4, r5, fp, lr}
   2b47c:	add	fp, sp, #8
   2b480:	mov	r5, r0
   2b484:	mov	r0, r1
   2b488:	mov	r4, r1
   2b48c:	bl	12b38 <strlen@plt>
   2b490:	mov	r2, r0
   2b494:	mov	r0, r5
   2b498:	mov	r1, r4
   2b49c:	pop	{r4, r5, fp, lr}
   2b4a0:	b	2b334 <flatcc_builder_append_string@@Base>

0002b4a4 <flatcc_builder_append_string_strn@@Base>:
   2b4a4:	push	{r4, r5, r6, sl, fp, lr}
   2b4a8:	add	fp, sp, #16
   2b4ac:	mov	r6, r0
   2b4b0:	mov	r5, r1
   2b4b4:	mov	r0, r1
   2b4b8:	mov	r1, #0
   2b4bc:	mov	r4, r2
   2b4c0:	bl	12b74 <memchr@plt>
   2b4c4:	cmp	r0, #0
   2b4c8:	mov	r1, r5
   2b4cc:	subne	r4, r0, r5
   2b4d0:	mov	r0, r6
   2b4d4:	mov	r2, r4
   2b4d8:	pop	{r4, r5, r6, sl, fp, lr}
   2b4dc:	b	2b334 <flatcc_builder_append_string@@Base>

0002b4e0 <flatcc_builder_truncate_vector@@Base>:
   2b4e0:	push	{fp, lr}
   2b4e4:	mov	fp, sp
   2b4e8:	ldr	r2, [r0, #32]
   2b4ec:	ldrh	r3, [r2, #14]
   2b4f0:	cmp	r3, #4
   2b4f4:	bne	2b53c <flatcc_builder_truncate_vector@@Base+0x5c>
   2b4f8:	ldr	r3, [r2, #20]
   2b4fc:	cmp	r3, r1
   2b500:	bcc	2b55c <flatcc_builder_truncate_vector@@Base+0x7c>
   2b504:	sub	r3, r3, r1
   2b508:	str	r3, [r2, #20]
   2b50c:	ldr	r2, [r0, #32]
   2b510:	ldr	r3, [r0, #20]
   2b514:	ldr	ip, [r0, #16]
   2b518:	ldr	r2, [r2, #16]
   2b51c:	mls	r3, r2, r1, r3
   2b520:	mul	r2, r2, r1
   2b524:	mov	r1, #0
   2b528:	str	r3, [r0, #20]
   2b52c:	add	r0, ip, r3
   2b530:	bl	12b5c <memset@plt>
   2b534:	mov	r0, #0
   2b538:	pop	{fp, pc}
   2b53c:	ldr	r0, [pc, #56]	; 2b57c <flatcc_builder_truncate_vector@@Base+0x9c>
   2b540:	ldr	r1, [pc, #56]	; 2b580 <flatcc_builder_truncate_vector@@Base+0xa0>
   2b544:	ldr	r3, [pc, #56]	; 2b584 <flatcc_builder_truncate_vector@@Base+0xa4>
   2b548:	movw	r2, #985	; 0x3d9
   2b54c:	add	r0, pc, r0
   2b550:	add	r1, pc, r1
   2b554:	add	r3, pc, r3
   2b558:	bl	12bbc <__assert_fail@plt>
   2b55c:	ldr	r0, [pc, #36]	; 2b588 <flatcc_builder_truncate_vector@@Base+0xa8>
   2b560:	ldr	r1, [pc, #36]	; 2b58c <flatcc_builder_truncate_vector@@Base+0xac>
   2b564:	ldr	r3, [pc, #36]	; 2b590 <flatcc_builder_truncate_vector@@Base+0xb0>
   2b568:	movw	r2, #986	; 0x3da
   2b56c:	add	r0, pc, r0
   2b570:	add	r1, pc, r1
   2b574:	add	r3, pc, r3
   2b578:	bl	12bbc <__assert_fail@plt>
   2b57c:	strdeq	r8, [r0], -ip
   2b580:			; <UNDEFINED> instruction: 0x000087be
   2b584:	andeq	r8, r0, lr, lsr #27
   2b588:	ldrdeq	r8, [r0], -r5
   2b58c:	muleq	r0, lr, r7
   2b590:	andeq	r8, r0, lr, lsl #27

0002b594 <flatcc_builder_truncate_offset_vector@@Base>:
   2b594:	push	{fp, lr}
   2b598:	mov	fp, sp
   2b59c:	ldr	r2, [r0, #32]
   2b5a0:	ldrh	r3, [r2, #14]
   2b5a4:	cmp	r3, #5
   2b5a8:	bne	2b5f0 <flatcc_builder_truncate_offset_vector@@Base+0x5c>
   2b5ac:	ldr	r3, [r2, #20]
   2b5b0:	cmp	r3, r1
   2b5b4:	bcc	2b610 <flatcc_builder_truncate_offset_vector@@Base+0x7c>
   2b5b8:	sub	r3, r3, r1
   2b5bc:	str	r3, [r2, #20]
   2b5c0:	ldr	r2, [r0, #32]
   2b5c4:	ldr	r3, [r0, #20]
   2b5c8:	ldr	ip, [r0, #16]
   2b5cc:	ldr	r2, [r2, #16]
   2b5d0:	mls	r3, r2, r1, r3
   2b5d4:	mul	r2, r2, r1
   2b5d8:	mov	r1, #0
   2b5dc:	str	r3, [r0, #20]
   2b5e0:	add	r0, ip, r3
   2b5e4:	bl	12b5c <memset@plt>
   2b5e8:	mov	r0, #0
   2b5ec:	pop	{fp, pc}
   2b5f0:	ldr	r0, [pc, #56]	; 2b630 <flatcc_builder_truncate_offset_vector@@Base+0x9c>
   2b5f4:	ldr	r1, [pc, #56]	; 2b634 <flatcc_builder_truncate_offset_vector@@Base+0xa0>
   2b5f8:	ldr	r3, [pc, #56]	; 2b638 <flatcc_builder_truncate_offset_vector@@Base+0xa4>
   2b5fc:	movw	r2, #994	; 0x3e2
   2b600:	add	r0, pc, r0
   2b604:	add	r1, pc, r1
   2b608:	add	r3, pc, r3
   2b60c:	bl	12bbc <__assert_fail@plt>
   2b610:	ldr	r0, [pc, #36]	; 2b63c <flatcc_builder_truncate_offset_vector@@Base+0xa8>
   2b614:	ldr	r1, [pc, #36]	; 2b640 <flatcc_builder_truncate_offset_vector@@Base+0xac>
   2b618:	ldr	r3, [pc, #36]	; 2b644 <flatcc_builder_truncate_offset_vector@@Base+0xb0>
   2b61c:	movw	r2, #995	; 0x3e3
   2b620:	add	r0, pc, r0
   2b624:	add	r1, pc, r1
   2b628:	add	r3, pc, r3
   2b62c:	bl	12bbc <__assert_fail@plt>
   2b630:	andeq	r8, r0, r1, asr #22
   2b634:	andeq	r8, r0, sl, lsl #14
   2b638:	andeq	r8, r0, sp, asr sp
   2b63c:	andeq	r8, r0, fp, lsl #27
   2b640:	andeq	r8, r0, sl, ror #13
   2b644:	andeq	r8, r0, sp, lsr sp

0002b648 <flatcc_builder_truncate_string@@Base>:
   2b648:	push	{fp, lr}
   2b64c:	mov	fp, sp
   2b650:	mov	r2, r1
   2b654:	ldr	r1, [r0, #32]
   2b658:	ldrh	r3, [r1, #14]
   2b65c:	cmp	r3, #6
   2b660:	bne	2b69c <flatcc_builder_truncate_string@@Base+0x54>
   2b664:	ldr	r3, [r1, #20]
   2b668:	cmp	r3, r2
   2b66c:	bcc	2b6bc <flatcc_builder_truncate_string@@Base+0x74>
   2b670:	sub	r3, r3, r2
   2b674:	str	r3, [r1, #20]
   2b678:	ldr	r3, [r0, #20]
   2b67c:	ldr	r1, [r0, #16]
   2b680:	sub	r3, r3, r2
   2b684:	str	r3, [r0, #20]
   2b688:	add	r0, r1, r3
   2b68c:	mov	r1, #0
   2b690:	bl	12b5c <memset@plt>
   2b694:	mov	r0, #0
   2b698:	pop	{fp, pc}
   2b69c:	ldr	r0, [pc, #56]	; 2b6dc <flatcc_builder_truncate_string@@Base+0x94>
   2b6a0:	ldr	r1, [pc, #56]	; 2b6e0 <flatcc_builder_truncate_string@@Base+0x98>
   2b6a4:	ldr	r3, [pc, #56]	; 2b6e4 <flatcc_builder_truncate_string@@Base+0x9c>
   2b6a8:	movw	r2, #1003	; 0x3eb
   2b6ac:	add	r0, pc, r0
   2b6b0:	add	r1, pc, r1
   2b6b4:	add	r3, pc, r3
   2b6b8:	bl	12bbc <__assert_fail@plt>
   2b6bc:	ldr	r0, [pc, #36]	; 2b6e8 <flatcc_builder_truncate_string@@Base+0xa0>
   2b6c0:	ldr	r1, [pc, #36]	; 2b6ec <flatcc_builder_truncate_string@@Base+0xa4>
   2b6c4:	ldr	r3, [pc, #36]	; 2b6f0 <flatcc_builder_truncate_string@@Base+0xa8>
   2b6c8:	mov	r2, #1004	; 0x3ec
   2b6cc:	add	r0, pc, r0
   2b6d0:	add	r1, pc, r1
   2b6d4:	add	r3, pc, r3
   2b6d8:	bl	12bbc <__assert_fail@plt>
   2b6dc:	muleq	r0, lr, fp
   2b6e0:	andeq	r8, r0, lr, asr r6
   2b6e4:	andeq	r8, r0, r2, lsr sp
   2b6e8:	andeq	r8, r0, r9, asr sp
   2b6ec:	andeq	r8, r0, lr, lsr r6
   2b6f0:	andeq	r8, r0, r2, lsl sp

0002b6f4 <flatcc_builder_start_vector@@Base>:
   2b6f4:	push	{r4, r5, r6, r7, fp, lr}
   2b6f8:	add	fp, sp, #16
   2b6fc:	mov	r7, #4
   2b700:	cmp	r2, #4
   2b704:	mov	r6, r1
   2b708:	mov	r5, r3
   2b70c:	mov	r4, r0
   2b710:	movls	r2, r7
   2b714:	mov	r1, r2
   2b718:	bl	2a6e8 <flatcc_builder_start_buffer@@Base+0xc0>
   2b71c:	mov	r1, r0
   2b720:	mvn	r0, #0
   2b724:	cmp	r1, #0
   2b728:	popne	{r4, r5, r6, r7, fp, pc}
   2b72c:	ldr	r0, [r4, #32]
   2b730:	str	r6, [r0, #16]
   2b734:	mov	r0, #0
   2b738:	ldr	r1, [r4, #32]
   2b73c:	str	r0, [r1, #20]
   2b740:	ldr	r1, [r4, #32]
   2b744:	str	r5, [r1, #24]
   2b748:	ldr	r1, [r4, #32]
   2b74c:	strh	r7, [r1, #14]
   2b750:	ldr	r2, [r4, #28]
   2b754:	ldr	r3, [r4, #60]	; 0x3c
   2b758:	ldr	r7, [r4, #64]	; 0x40
   2b75c:	add	r3, r3, r2
   2b760:	sub	r2, r7, r2
   2b764:	str	r3, [r4, #16]
   2b768:	mvn	r3, #3
   2b76c:	cmn	r2, #4
   2b770:	movcs	r2, r3
   2b774:	str	r2, [r4, #24]
   2b778:	str	r3, [r1, #4]
   2b77c:	pop	{r4, r5, r6, r7, fp, pc}

0002b780 <flatcc_builder_start_offset_vector@@Base>:
   2b780:	push	{r4, r5, fp, lr}
   2b784:	add	fp, sp, #8
   2b788:	mov	r1, #4
   2b78c:	mov	r4, r0
   2b790:	mov	r5, #4
   2b794:	bl	2a6e8 <flatcc_builder_start_buffer@@Base+0xc0>
   2b798:	mov	r1, r0
   2b79c:	mvn	r0, #0
   2b7a0:	cmp	r1, #0
   2b7a4:	popne	{r4, r5, fp, pc}
   2b7a8:	ldr	r0, [r4, #32]
   2b7ac:	mov	r2, #5
   2b7b0:	str	r5, [r0, #16]
   2b7b4:	mov	r0, #0
   2b7b8:	ldr	r1, [r4, #32]
   2b7bc:	str	r0, [r1, #20]
   2b7c0:	ldr	r1, [r4, #32]
   2b7c4:	strh	r2, [r1, #14]
   2b7c8:	ldr	r2, [r4, #28]
   2b7cc:	ldr	r3, [r4, #60]	; 0x3c
   2b7d0:	ldr	r5, [r4, #64]	; 0x40
   2b7d4:	add	r3, r3, r2
   2b7d8:	sub	r2, r5, r2
   2b7dc:	str	r3, [r4, #16]
   2b7e0:	mvn	r3, #3
   2b7e4:	cmn	r2, #4
   2b7e8:	movcs	r2, r3
   2b7ec:	str	r2, [r4, #24]
   2b7f0:	str	r3, [r1, #4]
   2b7f4:	pop	{r4, r5, fp, pc}

0002b7f8 <flatcc_builder_create_offset_vector@@Base>:
   2b7f8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2b7fc:	add	fp, sp, #24
   2b800:	sub	sp, sp, #8
   2b804:	mov	r8, r1
   2b808:	mov	r1, #4
   2b80c:	mov	r6, r2
   2b810:	mov	r4, r0
   2b814:	mov	r7, #4
   2b818:	bl	2a6e8 <flatcc_builder_start_buffer@@Base+0xc0>
   2b81c:	cmp	r0, #0
   2b820:	beq	2b830 <flatcc_builder_create_offset_vector@@Base+0x38>
   2b824:	mov	r0, #0
   2b828:	sub	sp, fp, #24
   2b82c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2b830:	ldr	r0, [r4, #32]
   2b834:	mov	r1, #0
   2b838:	str	r7, [r0, #16]
   2b83c:	ldr	r0, [r4, #32]
   2b840:	str	r1, [r0, #20]
   2b844:	mov	r1, #5
   2b848:	ldr	r0, [r4, #32]
   2b84c:	strh	r1, [r0, #14]
   2b850:	ldr	r1, [r4, #28]
   2b854:	ldr	r2, [r4, #60]	; 0x3c
   2b858:	ldr	r3, [r4, #64]	; 0x40
   2b85c:	add	r2, r2, r1
   2b860:	sub	r1, r3, r1
   2b864:	str	r2, [r4, #16]
   2b868:	mvn	r2, #3
   2b86c:	cmn	r1, #4
   2b870:	movcs	r1, r2
   2b874:	str	r1, [r4, #24]
   2b878:	str	r2, [r0, #4]
   2b87c:	ldr	r1, [r0, #20]
   2b880:	adds	r1, r1, r6
   2b884:	cmpcc	r1, #1073741824	; 0x40000000
   2b888:	bcc	2b8ac <flatcc_builder_create_offset_vector@@Base+0xb4>
   2b88c:	ldr	r0, [pc, #200]	; 2b95c <flatcc_builder_create_offset_vector@@Base+0x164>
   2b890:	ldr	r1, [pc, #200]	; 2b960 <flatcc_builder_create_offset_vector@@Base+0x168>
   2b894:	ldr	r3, [pc, #200]	; 2b964 <flatcc_builder_create_offset_vector@@Base+0x16c>
   2b898:	mov	r2, #892	; 0x37c
   2b89c:	add	r0, pc, r0
   2b8a0:	add	r1, pc, r1
   2b8a4:	add	r3, pc, r3
   2b8a8:	bl	12bbc <__assert_fail@plt>
   2b8ac:	str	r1, [r0, #20]
   2b8b0:	ldr	r7, [r4, #20]
   2b8b4:	ldr	r0, [r4, #24]
   2b8b8:	add	r1, r7, r6, lsl #2
   2b8bc:	cmp	r1, r0
   2b8c0:	str	r1, [r4, #20]
   2b8c4:	bcs	2b8d8 <flatcc_builder_create_offset_vector@@Base+0xe0>
   2b8c8:	ldr	r0, [r4, #16]
   2b8cc:	adds	r0, r0, r7
   2b8d0:	bne	2b940 <flatcc_builder_create_offset_vector@@Base+0x148>
   2b8d4:	b	2b824 <flatcc_builder_create_offset_vector@@Base+0x2c>
   2b8d8:	ldr	r2, [r4, #28]
   2b8dc:	ldr	r0, [r4, #40]	; 0x28
   2b8e0:	ldr	r5, [r4, #48]	; 0x30
   2b8e4:	mov	r3, #1
   2b8e8:	str	r3, [sp]
   2b8ec:	mov	r3, #1
   2b8f0:	add	r1, r1, r2
   2b8f4:	add	r2, r1, #1
   2b8f8:	add	r1, r4, #60	; 0x3c
   2b8fc:	blx	r5
   2b900:	cmp	r0, #0
   2b904:	bne	2b824 <flatcc_builder_create_offset_vector@@Base+0x2c>
   2b908:	ldr	r1, [r4, #28]
   2b90c:	ldr	r0, [r4, #60]	; 0x3c
   2b910:	ldr	r3, [r4, #64]	; 0x40
   2b914:	ldr	r2, [r4, #32]
   2b918:	add	r0, r0, r1
   2b91c:	sub	r1, r3, r1
   2b920:	mvn	r3, #3
   2b924:	cmn	r1, #4
   2b928:	str	r0, [r4, #16]
   2b92c:	movcs	r1, r3
   2b930:	str	r1, [r4, #24]
   2b934:	str	r3, [r2, #4]
   2b938:	adds	r0, r0, r7
   2b93c:	beq	2b824 <flatcc_builder_create_offset_vector@@Base+0x2c>
   2b940:	lsl	r2, r6, #2
   2b944:	mov	r1, r8
   2b948:	bl	12aa8 <memcpy@plt>
   2b94c:	mov	r0, r4
   2b950:	sub	sp, fp, #24
   2b954:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   2b958:	b	2b968 <flatcc_builder_end_offset_vector@@Base>
   2b95c:	andeq	r9, r0, r8, lsr r5
   2b960:	andeq	r8, r0, lr, ror #8
   2b964:	andeq	r9, r0, fp, asr #10

0002b968 <flatcc_builder_end_offset_vector@@Base>:
   2b968:	push	{r4, r5, fp, lr}
   2b96c:	add	fp, sp, #8
   2b970:	mov	r4, r0
   2b974:	ldr	r0, [r0, #32]
   2b978:	ldrh	r1, [r0, #14]
   2b97c:	cmp	r1, #5
   2b980:	bne	2ba20 <flatcc_builder_end_offset_vector@@Base+0xb8>
   2b984:	ldr	r2, [r0, #20]
   2b988:	ldr	r1, [r4, #16]
   2b98c:	mov	r0, r4
   2b990:	mov	r3, #0
   2b994:	bl	2ca84 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   2b998:	mov	r5, r0
   2b99c:	cmp	r0, #0
   2b9a0:	beq	2ba18 <flatcc_builder_end_offset_vector@@Base+0xb0>
   2b9a4:	ldr	r0, [r4, #16]
   2b9a8:	ldr	r2, [r4, #20]
   2b9ac:	mov	r1, #0
   2b9b0:	bl	12b5c <memset@plt>
   2b9b4:	ldr	r0, [r4, #32]
   2b9b8:	ldr	r1, [r4, #60]	; 0x3c
   2b9bc:	ldr	ip, [r4, #64]	; 0x40
   2b9c0:	ldr	r3, [r0, #8]
   2b9c4:	str	r3, [r4, #20]
   2b9c8:	ldr	r3, [r0]
   2b9cc:	str	r3, [r4, #28]
   2b9d0:	add	r1, r1, r3
   2b9d4:	ldr	r2, [r0, #4]
   2b9d8:	str	r1, [r4, #16]
   2b9dc:	sub	r1, ip, r3
   2b9e0:	cmp	r1, r2
   2b9e4:	movhi	r1, r2
   2b9e8:	str	r1, [r4, #24]
   2b9ec:	ldrh	r1, [r4, #130]	; 0x82
   2b9f0:	ldrh	r2, [r4, #128]	; 0x80
   2b9f4:	cmp	r2, r1
   2b9f8:	strhcc	r1, [r4, #128]	; 0x80
   2b9fc:	ldrh	r1, [r0, #12]
   2ba00:	sub	r0, r0, #36	; 0x24
   2ba04:	str	r0, [r4, #32]
   2ba08:	strh	r1, [r4, #130]	; 0x82
   2ba0c:	ldr	r0, [r4, #156]	; 0x9c
   2ba10:	sub	r0, r0, #1
   2ba14:	str	r0, [r4, #156]	; 0x9c
   2ba18:	mov	r0, r5
   2ba1c:	pop	{r4, r5, fp, pc}
   2ba20:	ldr	r0, [pc, #24]	; 2ba40 <flatcc_builder_end_offset_vector@@Base+0xd8>
   2ba24:	ldr	r1, [pc, #24]	; 2ba44 <flatcc_builder_end_offset_vector@@Base+0xdc>
   2ba28:	ldr	r3, [pc, #24]	; 2ba48 <flatcc_builder_end_offset_vector@@Base+0xe0>
   2ba2c:	movw	r2, #1480	; 0x5c8
   2ba30:	add	r0, pc, r0
   2ba34:	add	r1, pc, r1
   2ba38:	add	r3, pc, r3
   2ba3c:	bl	12bbc <__assert_fail@plt>
   2ba40:	andeq	r8, r0, r1, lsl r7
   2ba44:	ldrdeq	r8, [r0], -sl
   2ba48:	andeq	r8, r0, r8, lsr sp

0002ba4c <flatcc_builder_start_string@@Base>:
   2ba4c:	push	{r4, r5, fp, lr}
   2ba50:	add	fp, sp, #8
   2ba54:	mov	r1, #1
   2ba58:	mov	r4, r0
   2ba5c:	mov	r5, #1
   2ba60:	bl	2a6e8 <flatcc_builder_start_buffer@@Base+0xc0>
   2ba64:	mov	r1, r0
   2ba68:	mvn	r0, #0
   2ba6c:	cmp	r1, #0
   2ba70:	popne	{r4, r5, fp, pc}
   2ba74:	ldr	r0, [r4, #32]
   2ba78:	mov	r2, #6
   2ba7c:	str	r5, [r0, #16]
   2ba80:	mov	r0, #0
   2ba84:	ldr	r1, [r4, #32]
   2ba88:	str	r0, [r1, #20]
   2ba8c:	ldr	r1, [r4, #32]
   2ba90:	strh	r2, [r1, #14]
   2ba94:	ldr	r2, [r4, #28]
   2ba98:	ldr	r3, [r4, #60]	; 0x3c
   2ba9c:	ldr	r5, [r4, #64]	; 0x40
   2baa0:	add	r3, r3, r2
   2baa4:	sub	r2, r5, r2
   2baa8:	str	r3, [r4, #16]
   2baac:	mvn	r3, #3
   2bab0:	cmn	r2, #4
   2bab4:	movcs	r2, r3
   2bab8:	str	r2, [r4, #24]
   2babc:	str	r3, [r1, #4]
   2bac0:	pop	{r4, r5, fp, pc}

0002bac4 <flatcc_builder_reserve_table@@Base>:
   2bac4:	push	{r4, r5, r6, sl, fp, lr}
   2bac8:	add	fp, sp, #16
   2bacc:	sub	sp, sp, #8
   2bad0:	cmn	r1, #1
   2bad4:	ble	2bbac <flatcc_builder_reserve_table@@Base+0xe8>
   2bad8:	mov	r4, r0
   2badc:	ldr	r0, [r0, #32]
   2bae0:	mov	r5, r1
   2bae4:	ldr	r1, [r4, #56]	; 0x38
   2bae8:	ldrh	r2, [r0, #28]
   2baec:	ldr	r0, [r0, #16]
   2baf0:	add	r6, r0, r2, lsl #1
   2baf4:	add	r0, r6, r5, lsl #1
   2baf8:	add	r2, r0, #4
   2bafc:	cmp	r2, r1
   2bb00:	bls	2bb28 <flatcc_builder_reserve_table@@Base+0x64>
   2bb04:	ldr	r0, [r4, #40]	; 0x28
   2bb08:	ldr	ip, [r4, #48]	; 0x30
   2bb0c:	mov	r3, #0
   2bb10:	add	r1, r4, #52	; 0x34
   2bb14:	str	r3, [sp]
   2bb18:	mov	r3, #1
   2bb1c:	blx	ip
   2bb20:	cmp	r0, #0
   2bb24:	bne	2bbcc <flatcc_builder_reserve_table@@Base+0x108>
   2bb28:	ldr	r0, [r4, #52]	; 0x34
   2bb2c:	adds	r0, r0, r6
   2bb30:	str	r0, [r4, #4]
   2bb34:	beq	2bba0 <flatcc_builder_reserve_table@@Base+0xdc>
   2bb38:	add	r0, r0, #4
   2bb3c:	lsl	r1, r5, #1
   2bb40:	str	r0, [r4, #4]
   2bb44:	ldr	r0, [r4, #32]
   2bb48:	ldr	r3, [r4, #80]	; 0x50
   2bb4c:	ldr	r5, [r0, #20]
   2bb50:	orr	r0, r1, #1
   2bb54:	add	r2, r5, r0
   2bb58:	cmp	r2, r3
   2bb5c:	bls	2bb84 <flatcc_builder_reserve_table@@Base+0xc0>
   2bb60:	ldr	r0, [r4, #40]	; 0x28
   2bb64:	ldr	r6, [r4, #48]	; 0x30
   2bb68:	mov	r3, #3
   2bb6c:	add	r1, r4, #76	; 0x4c
   2bb70:	str	r3, [sp]
   2bb74:	mov	r3, #0
   2bb78:	blx	r6
   2bb7c:	cmp	r0, #0
   2bb80:	bne	2bbcc <flatcc_builder_reserve_table@@Base+0x108>
   2bb84:	ldr	r0, [r4, #76]	; 0x4c
   2bb88:	adds	r0, r0, r5
   2bb8c:	str	r0, [r4]
   2bb90:	mov	r0, #0
   2bb94:	mvneq	r0, #0
   2bb98:	sub	sp, fp, #16
   2bb9c:	pop	{r4, r5, r6, sl, fp, pc}
   2bba0:	mvn	r0, #0
   2bba4:	sub	sp, fp, #16
   2bba8:	pop	{r4, r5, r6, sl, fp, pc}
   2bbac:	ldr	r0, [pc, #56]	; 2bbec <flatcc_builder_reserve_table@@Base+0x128>
   2bbb0:	ldr	r1, [pc, #56]	; 2bbf0 <flatcc_builder_reserve_table@@Base+0x12c>
   2bbb4:	ldr	r3, [pc, #56]	; 2bbf4 <flatcc_builder_reserve_table@@Base+0x130>
   2bbb8:	movw	r2, #1065	; 0x429
   2bbbc:	add	r0, pc, r0
   2bbc0:	add	r1, pc, r1
   2bbc4:	add	r3, pc, r3
   2bbc8:	bl	12bbc <__assert_fail@plt>
   2bbcc:	ldr	r0, [pc, #36]	; 2bbf8 <flatcc_builder_reserve_table@@Base+0x134>
   2bbd0:	ldr	r1, [pc, #36]	; 2bbfc <flatcc_builder_reserve_table@@Base+0x138>
   2bbd4:	ldr	r3, [pc, #36]	; 2bc00 <flatcc_builder_reserve_table@@Base+0x13c>
   2bbd8:	mov	r2, #308	; 0x134
   2bbdc:	add	r0, pc, r0
   2bbe0:	add	r1, pc, r1
   2bbe4:	add	r3, pc, r3
   2bbe8:	bl	12bbc <__assert_fail@plt>
   2bbec:	andeq	r8, r0, ip, asr #17
   2bbf0:	andeq	r8, r0, lr, asr #2
   2bbf4:	andeq	r8, r0, r3, lsl #17
   2bbf8:	andeq	r9, r0, pc, ror #5
   2bbfc:	andeq	r8, r0, lr, lsr #2
   2bc00:	andeq	r9, r0, r1, lsr #2

0002bc04 <flatcc_builder_start_table@@Base>:
   2bc04:	push	{r4, r5, r6, r7, fp, lr}
   2bc08:	add	fp, sp, #16
   2bc0c:	sub	sp, sp, #8
   2bc10:	mov	r6, r1
   2bc14:	mov	r1, #4
   2bc18:	mov	r4, r0
   2bc1c:	bl	2a6e8 <flatcc_builder_start_buffer@@Base+0xc0>
   2bc20:	mvn	r5, #0
   2bc24:	cmp	r0, #0
   2bc28:	beq	2bc38 <flatcc_builder_start_table@@Base+0x34>
   2bc2c:	mov	r0, r5
   2bc30:	sub	sp, fp, #16
   2bc34:	pop	{r4, r5, r6, r7, fp, pc}
   2bc38:	mov	r1, r4
   2bc3c:	ldr	r2, [r4, #4]
   2bc40:	ldr	r3, [r4, #32]
   2bc44:	ldr	r0, [r1, #52]!	; 0x34
   2bc48:	sub	r0, r2, r0
   2bc4c:	str	r0, [r3, #16]
   2bc50:	ldr	r0, [r4]
   2bc54:	ldr	r3, [r4, #76]	; 0x4c
   2bc58:	ldr	r2, [r4, #32]
   2bc5c:	sub	r0, r0, r3
   2bc60:	mov	r3, #0
   2bc64:	str	r0, [r2, #20]
   2bc68:	ldr	r0, [r4, #12]
   2bc6c:	ldr	r2, [r4, #32]
   2bc70:	str	r0, [r2, #24]
   2bc74:	ldr	r0, [r4, #32]
   2bc78:	ldrh	r2, [r4, #8]
   2bc7c:	strh	r2, [r0, #28]
   2bc80:	movw	r0, #15186	; 0x3b52
   2bc84:	strh	r3, [r4, #8]
   2bc88:	mov	r2, #3
   2bc8c:	movt	r0, #12137	; 0x2f69
   2bc90:	str	r0, [r4, #12]
   2bc94:	ldr	r0, [r4, #32]
   2bc98:	strh	r2, [r0, #14]
   2bc9c:	ldrh	r2, [r0, #28]
   2bca0:	ldr	r0, [r0, #16]
   2bca4:	add	r7, r0, r2, lsl #1
   2bca8:	add	r0, r7, r6, lsl #1
   2bcac:	add	r2, r0, #4
   2bcb0:	ldr	r0, [r4, #56]	; 0x38
   2bcb4:	cmp	r2, r0
   2bcb8:	bls	2bcd8 <flatcc_builder_start_table@@Base+0xd4>
   2bcbc:	ldr	r0, [r4, #40]	; 0x28
   2bcc0:	ldr	ip, [r4, #48]	; 0x30
   2bcc4:	str	r3, [sp]
   2bcc8:	mov	r3, #1
   2bccc:	blx	ip
   2bcd0:	cmp	r0, #0
   2bcd4:	bne	2bd7c <flatcc_builder_start_table@@Base+0x178>
   2bcd8:	ldr	r0, [r4, #52]	; 0x34
   2bcdc:	adds	r0, r0, r7
   2bce0:	str	r0, [r4, #4]
   2bce4:	beq	2bc2c <flatcc_builder_start_table@@Base+0x28>
   2bce8:	add	r0, r0, #4
   2bcec:	lsl	r1, r6, #1
   2bcf0:	str	r0, [r4, #4]
   2bcf4:	ldr	r0, [r4, #32]
   2bcf8:	ldr	r3, [r4, #80]	; 0x50
   2bcfc:	ldr	r6, [r0, #20]
   2bd00:	orr	r0, r1, #1
   2bd04:	add	r2, r6, r0
   2bd08:	cmp	r2, r3
   2bd0c:	bls	2bd34 <flatcc_builder_start_table@@Base+0x130>
   2bd10:	ldr	r0, [r4, #40]	; 0x28
   2bd14:	ldr	r7, [r4, #48]	; 0x30
   2bd18:	mov	r3, #3
   2bd1c:	add	r1, r4, #76	; 0x4c
   2bd20:	str	r3, [sp]
   2bd24:	mov	r3, #0
   2bd28:	blx	r7
   2bd2c:	cmp	r0, #0
   2bd30:	bne	2bd7c <flatcc_builder_start_table@@Base+0x178>
   2bd34:	ldr	r0, [r4, #76]	; 0x4c
   2bd38:	adds	r0, r0, r6
   2bd3c:	str	r0, [r4]
   2bd40:	beq	2bc2c <flatcc_builder_start_table@@Base+0x28>
   2bd44:	ldr	r0, [r4, #28]
   2bd48:	ldr	r2, [r4, #60]	; 0x3c
   2bd4c:	ldr	r3, [r4, #64]	; 0x40
   2bd50:	ldr	r1, [r4, #32]
   2bd54:	mov	r5, #0
   2bd58:	add	r2, r2, r0
   2bd5c:	sub	r0, r3, r0
   2bd60:	str	r2, [r4, #16]
   2bd64:	movw	r2, #65532	; 0xfffc
   2bd68:	cmp	r0, r2
   2bd6c:	movcs	r0, r2
   2bd70:	str	r0, [r4, #24]
   2bd74:	str	r2, [r1, #4]
   2bd78:	b	2bc2c <flatcc_builder_start_table@@Base+0x28>
   2bd7c:	ldr	r0, [pc, #24]	; 2bd9c <flatcc_builder_start_table@@Base+0x198>
   2bd80:	ldr	r1, [pc, #24]	; 2bda0 <flatcc_builder_start_table@@Base+0x19c>
   2bd84:	ldr	r3, [pc, #24]	; 2bda4 <flatcc_builder_start_table@@Base+0x1a0>
   2bd88:	mov	r2, #308	; 0x134
   2bd8c:	add	r0, pc, r0
   2bd90:	add	r1, pc, r1
   2bd94:	add	r3, pc, r3
   2bd98:	bl	12bbc <__assert_fail@plt>
   2bd9c:	andeq	r9, r0, pc, lsr r1
   2bda0:	andeq	r7, r0, lr, ror pc
   2bda4:	andeq	r8, r0, r1, ror pc

0002bda8 <flatcc_builder_create_vtable@@Base>:
   2bda8:	push	{r4, r5, fp, lr}
   2bdac:	add	fp, sp, #8
   2bdb0:	sub	sp, sp, #80	; 0x50
   2bdb4:	mov	r3, r2
   2bdb8:	mov	r2, #0
   2bdbc:	mov	r4, r0
   2bdc0:	cmp	r3, #0
   2bdc4:	str	r2, [sp, #12]
   2bdc8:	str	r2, [sp, #8]
   2bdcc:	movne	r2, #1
   2bdd0:	strne	r3, [sp, #20]
   2bdd4:	strne	r1, [sp, #16]
   2bdd8:	strne	r3, [sp, #8]
   2bddc:	strne	r2, [sp, #12]
   2bde0:	ldr	r0, [r4, #152]	; 0x98
   2bde4:	cmp	r0, #0
   2bde8:	bne	2bdf8 <flatcc_builder_create_vtable@@Base+0x50>
   2bdec:	ldr	r0, [r4, #180]	; 0xb4
   2bdf0:	cmp	r0, #0
   2bdf4:	beq	2be54 <flatcc_builder_create_vtable@@Base+0xac>
   2bdf8:	cmp	r3, #0
   2bdfc:	beq	2be98 <flatcc_builder_create_vtable@@Base+0xf0>
   2be00:	ldr	r0, [r4, #136]	; 0x88
   2be04:	ldr	ip, [r4, #44]	; 0x2c
   2be08:	add	r1, sp, #8
   2be0c:	add	r1, r1, #8
   2be10:	sub	r5, r0, r3
   2be14:	ldr	r0, [r4, #36]	; 0x24
   2be18:	str	r3, [sp]
   2be1c:	mov	r3, r5
   2be20:	blx	ip
   2be24:	cmp	r0, #0
   2be28:	bne	2beb8 <flatcc_builder_create_vtable@@Base+0x110>
   2be2c:	cmp	r5, #0
   2be30:	str	r5, [r4, #136]	; 0x88
   2be34:	beq	2be48 <flatcc_builder_create_vtable@@Base+0xa0>
   2be38:	add	r1, r5, #1
   2be3c:	mov	r0, r1
   2be40:	sub	sp, fp, #8
   2be44:	pop	{r4, r5, fp, pc}
   2be48:	mov	r0, #0
   2be4c:	sub	sp, fp, #8
   2be50:	pop	{r4, r5, fp, pc}
   2be54:	ldr	r5, [r4, #140]	; 0x8c
   2be58:	ldr	r0, [r4, #36]	; 0x24
   2be5c:	ldr	ip, [r4, #44]	; 0x2c
   2be60:	add	r1, r5, r3
   2be64:	str	r1, [r4, #140]	; 0x8c
   2be68:	add	r1, sp, #8
   2be6c:	str	r3, [sp]
   2be70:	mov	r3, r5
   2be74:	add	r1, r1, #8
   2be78:	blx	ip
   2be7c:	cmp	r0, #0
   2be80:	bne	2bed8 <flatcc_builder_create_vtable@@Base+0x130>
   2be84:	adds	r1, r5, #1
   2be88:	mov	r0, #0
   2be8c:	movcc	r0, r1
   2be90:	sub	sp, fp, #8
   2be94:	pop	{r4, r5, fp, pc}
   2be98:	ldr	r0, [pc, #100]	; 2bf04 <flatcc_builder_create_vtable@@Base+0x15c>
   2be9c:	ldr	r1, [pc, #100]	; 2bf08 <flatcc_builder_create_vtable@@Base+0x160>
   2bea0:	ldr	r3, [pc, #100]	; 2bf0c <flatcc_builder_create_vtable@@Base+0x164>
   2bea4:	movw	r2, #647	; 0x287
   2bea8:	add	r0, pc, r0
   2beac:	add	r1, pc, r1
   2beb0:	add	r3, pc, r3
   2beb4:	bl	12bbc <__assert_fail@plt>
   2beb8:	ldr	r0, [pc, #80]	; 2bf10 <flatcc_builder_create_vtable@@Base+0x168>
   2bebc:	ldr	r1, [pc, #80]	; 2bf14 <flatcc_builder_create_vtable@@Base+0x16c>
   2bec0:	ldr	r3, [pc, #80]	; 2bf18 <flatcc_builder_create_vtable@@Base+0x170>
   2bec4:	movw	r2, #651	; 0x28b
   2bec8:	add	r0, pc, r0
   2becc:	add	r1, pc, r1
   2bed0:	add	r3, pc, r3
   2bed4:	bl	12bbc <__assert_fail@plt>
   2bed8:	ldr	r0, [pc, #24]	; 2bef8 <flatcc_builder_create_vtable@@Base+0x150>
   2bedc:	ldr	r1, [pc, #24]	; 2befc <flatcc_builder_create_vtable@@Base+0x154>
   2bee0:	ldr	r3, [pc, #24]	; 2bf00 <flatcc_builder_create_vtable@@Base+0x158>
   2bee4:	movw	r2, #677	; 0x2a5
   2bee8:	add	r0, pc, r0
   2beec:	add	r1, pc, r1
   2bef0:	add	r3, pc, r3
   2bef4:	bl	12bbc <__assert_fail@plt>
   2bef8:	andeq	r8, r0, r3, ror #31
   2befc:	andeq	r7, r0, r2, lsr #28
   2bf00:	andeq	r8, r0, r6, asr pc
   2bf04:	andeq	r9, r0, r3, lsr #32
   2bf08:	andeq	r7, r0, r2, ror #28
   2bf0c:	ldrdeq	r8, [r0], -sl
   2bf10:	andeq	r9, r0, r3
   2bf14:	andeq	r7, r0, r2, asr #28
   2bf18:			; <UNDEFINED> instruction: 0x00008eba

0002bf1c <flatcc_builder_create_cached_vtable@@Base>:
   2bf1c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2bf20:	add	fp, sp, #28
   2bf24:	sub	sp, sp, #20
   2bf28:	mov	sl, r0
   2bf2c:	ldr	r0, [r0, #116]	; 0x74
   2bf30:	mov	r8, r3
   2bf34:	mov	r5, r2
   2bf38:	str	r1, [sp, #16]
   2bf3c:	cmp	r0, #0
   2bf40:	beq	2bfe4 <flatcc_builder_create_cached_vtable@@Base+0xc8>
   2bf44:	ldr	r1, [sl, #92]	; 0x5c
   2bf48:	rsb	r0, r0, #32
   2bf4c:	lsr	r0, r8, r0
   2bf50:	add	r6, r1, r0, lsl #2
   2bf54:	cmp	r6, #0
   2bf58:	beq	2c0a8 <flatcc_builder_create_cached_vtable@@Base+0x18c>
   2bf5c:	ldr	r7, [r6]
   2bf60:	str	r6, [sp, #12]
   2bf64:	cmp	r7, #0
   2bf68:	beq	2c0b0 <flatcc_builder_create_cached_vtable@@Base+0x194>
   2bf6c:	ldr	r4, [sl, #68]	; 0x44
   2bf70:	ldr	r8, [sl, #100]	; 0x64
   2bf74:	mov	r0, #0
   2bf78:	str	r0, [sp, #8]
   2bf7c:	b	2bf90 <flatcc_builder_create_cached_vtable@@Base+0x74>
   2bf80:	ldr	r7, [r9, #12]!
   2bf84:	mov	r6, r9
   2bf88:	cmp	r7, #0
   2bf8c:	beq	2c0a0 <flatcc_builder_create_cached_vtable@@Base+0x184>
   2bf90:	add	r9, r8, r7
   2bf94:	mov	r1, r4
   2bf98:	ldr	r0, [r9, #8]
   2bf9c:	ldrh	r0, [r1, r0]!	; <UNPREDICTABLE>
   2bfa0:	cmp	r0, r5
   2bfa4:	bne	2bf80 <flatcc_builder_create_cached_vtable@@Base+0x64>
   2bfa8:	ldr	r0, [sp, #16]
   2bfac:	mov	r2, r5
   2bfb0:	bl	12b2c <bcmp@plt>
   2bfb4:	cmp	r0, #0
   2bfb8:	bne	2bf80 <flatcc_builder_create_cached_vtable@@Base+0x64>
   2bfbc:	ldr	r0, [sl, #152]	; 0x98
   2bfc0:	ldr	r1, [r9, #4]
   2bfc4:	cmp	r1, r0
   2bfc8:	beq	2c214 <flatcc_builder_create_cached_vtable@@Base+0x2f8>
   2bfcc:	mov	r6, r9
   2bfd0:	mov	r0, r9
   2bfd4:	ldr	r7, [r6, #12]!
   2bfd8:	cmp	r7, #0
   2bfdc:	bne	2bf78 <flatcc_builder_create_cached_vtable@@Base+0x5c>
   2bfe0:	b	2c0b4 <flatcc_builder_create_cached_vtable@@Base+0x198>
   2bfe4:	ldr	r0, [sl, #124]	; 0x7c
   2bfe8:	cmp	r0, #0
   2bfec:	bne	2c260 <flatcc_builder_create_cached_vtable@@Base+0x344>
   2bff0:	ldr	r0, [sl, #104]	; 0x68
   2bff4:	add	r7, sl, #100	; 0x64
   2bff8:	cmp	r0, #15
   2bffc:	bhi	2c028 <flatcc_builder_create_cached_vtable@@Base+0x10c>
   2c000:	ldr	r0, [sl, #40]	; 0x28
   2c004:	ldr	r6, [sl, #48]	; 0x30
   2c008:	mov	r1, #6
   2c00c:	mov	r2, #16
   2c010:	mov	r3, #0
   2c014:	str	r1, [sp]
   2c018:	mov	r1, r7
   2c01c:	blx	r6
   2c020:	cmp	r0, #0
   2c024:	bne	2c240 <flatcc_builder_create_cached_vtable@@Base+0x324>
   2c028:	ldr	r0, [r7]
   2c02c:	mov	r7, #0
   2c030:	cmp	r0, #0
   2c034:	beq	2c154 <flatcc_builder_create_cached_vtable@@Base+0x238>
   2c038:	mov	r0, #16
   2c03c:	mov	r2, #5
   2c040:	add	r1, sl, #92	; 0x5c
   2c044:	mov	r3, #1
   2c048:	mov	r4, #256	; 0x100
   2c04c:	str	r0, [sl, #124]	; 0x7c
   2c050:	ldr	r0, [sl, #40]	; 0x28
   2c054:	ldr	r6, [sl, #48]	; 0x30
   2c058:	str	r2, [sp]
   2c05c:	mov	r2, #256	; 0x100
   2c060:	blx	r6
   2c064:	cmp	r0, #0
   2c068:	bne	2c154 <flatcc_builder_create_cached_vtable@@Base+0x238>
   2c06c:	ldr	r0, [sl, #96]	; 0x60
   2c070:	mov	r1, r4
   2c074:	lsl	r4, r4, #1
   2c078:	cmp	r0, r1, lsl #1
   2c07c:	bcs	2c070 <flatcc_builder_create_cached_vtable@@Base+0x154>
   2c080:	lsr	r1, r1, #2
   2c084:	mvn	r0, #0
   2c088:	mov	r2, #1
   2c08c:	add	r0, r0, #1
   2c090:	cmp	r1, r2, lsl r0
   2c094:	bhi	2c08c <flatcc_builder_create_cached_vtable@@Base+0x170>
   2c098:	str	r0, [sl, #116]	; 0x74
   2c09c:	b	2bf44 <flatcc_builder_create_cached_vtable@@Base+0x28>
   2c0a0:	ldr	r9, [sp, #8]
   2c0a4:	b	2c0b4 <flatcc_builder_create_cached_vtable@@Base+0x198>
   2c0a8:	mov	r7, #0
   2c0ac:	b	2c154 <flatcc_builder_create_cached_vtable@@Base+0x238>
   2c0b0:	mov	r9, #0
   2c0b4:	ldr	r4, [sl, #124]	; 0x7c
   2c0b8:	ldr	r0, [sl, #104]	; 0x68
   2c0bc:	add	r7, sl, #100	; 0x64
   2c0c0:	add	r2, r4, #16
   2c0c4:	cmp	r2, r0
   2c0c8:	bls	2c0f0 <flatcc_builder_create_cached_vtable@@Base+0x1d4>
   2c0cc:	ldr	r0, [sl, #40]	; 0x28
   2c0d0:	ldr	r6, [sl, #48]	; 0x30
   2c0d4:	mov	r1, #6
   2c0d8:	mov	r3, #0
   2c0dc:	str	r1, [sp]
   2c0e0:	mov	r1, r7
   2c0e4:	blx	r6
   2c0e8:	cmp	r0, #0
   2c0ec:	bne	2c240 <flatcc_builder_create_cached_vtable@@Base+0x324>
   2c0f0:	ldr	r0, [r7]
   2c0f4:	mov	r7, #0
   2c0f8:	adds	r4, r0, r4
   2c0fc:	beq	2c154 <flatcc_builder_create_cached_vtable@@Base+0x238>
   2c100:	ldr	r0, [sl, #124]	; 0x7c
   2c104:	ldr	r1, [sl, #152]	; 0x98
   2c108:	add	r2, r0, #16
   2c10c:	str	r2, [sl, #124]	; 0x7c
   2c110:	ldr	r2, [sp, #12]
   2c114:	str	r1, [r4, #4]
   2c118:	ldr	r1, [r2]
   2c11c:	str	r1, [r4, #12]
   2c120:	ldr	r1, [sp, #16]
   2c124:	str	r0, [r2]
   2c128:	mov	r0, sl
   2c12c:	mov	r2, r5
   2c130:	bl	2bda8 <flatcc_builder_create_vtable@@Base>
   2c134:	cmp	r0, #0
   2c138:	str	r0, [r4]
   2c13c:	beq	2c154 <flatcc_builder_create_cached_vtable@@Base+0x238>
   2c140:	cmp	r9, #0
   2c144:	beq	2c160 <flatcc_builder_create_cached_vtable@@Base+0x244>
   2c148:	ldr	r0, [r9, #8]
   2c14c:	str	r0, [r4, #8]
   2c150:	ldr	r7, [r4]
   2c154:	mov	r0, r7
   2c158:	sub	sp, fp, #28
   2c15c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c160:	ldr	r6, [sl, #120]	; 0x78
   2c164:	ldr	r0, [sl, #172]	; 0xac
   2c168:	add	r2, r6, r5
   2c16c:	cmp	r0, #0
   2c170:	beq	2c1ac <flatcc_builder_create_cached_vtable@@Base+0x290>
   2c174:	cmp	r0, r2
   2c178:	bcs	2c1ac <flatcc_builder_create_cached_vtable@@Base+0x290>
   2c17c:	ldr	r0, [sl, #116]	; 0x74
   2c180:	cmp	r0, #0
   2c184:	beq	2c150 <flatcc_builder_create_cached_vtable@@Base+0x234>
   2c188:	ldr	r0, [sl, #92]	; 0x5c
   2c18c:	ldr	r2, [sl, #96]	; 0x60
   2c190:	mov	r1, #0
   2c194:	mov	r5, #0
   2c198:	bl	12b5c <memset@plt>
   2c19c:	mov	r0, #16
   2c1a0:	str	r5, [sl, #120]	; 0x78
   2c1a4:	str	r0, [sl, #124]	; 0x7c
   2c1a8:	b	2c150 <flatcc_builder_create_cached_vtable@@Base+0x234>
   2c1ac:	ldr	r0, [sl, #72]	; 0x48
   2c1b0:	add	r7, sl, #68	; 0x44
   2c1b4:	cmp	r2, r0
   2c1b8:	bls	2c1e0 <flatcc_builder_create_cached_vtable@@Base+0x2c4>
   2c1bc:	ldr	r0, [sl, #40]	; 0x28
   2c1c0:	ldr	ip, [sl, #48]	; 0x30
   2c1c4:	mov	r1, #2
   2c1c8:	mov	r3, #0
   2c1cc:	str	r1, [sp]
   2c1d0:	mov	r1, r7
   2c1d4:	blx	ip
   2c1d8:	cmp	r0, #0
   2c1dc:	bne	2c240 <flatcc_builder_create_cached_vtable@@Base+0x324>
   2c1e0:	ldr	r0, [r7]
   2c1e4:	adds	r0, r0, r6
   2c1e8:	beq	2c20c <flatcc_builder_create_cached_vtable@@Base+0x2f0>
   2c1ec:	ldr	r1, [sl, #120]	; 0x78
   2c1f0:	mov	r2, r5
   2c1f4:	str	r1, [r4, #8]
   2c1f8:	add	r1, r1, r5
   2c1fc:	str	r1, [sl, #120]	; 0x78
   2c200:	ldr	r1, [sp, #16]
   2c204:	bl	12aa8 <memcpy@plt>
   2c208:	b	2c150 <flatcc_builder_create_cached_vtable@@Base+0x234>
   2c20c:	mvn	r7, #0
   2c210:	b	2c154 <flatcc_builder_create_cached_vtable@@Base+0x238>
   2c214:	ldr	r0, [sp, #12]
   2c218:	cmp	r6, r0
   2c21c:	beq	2c238 <flatcc_builder_create_cached_vtable@@Base+0x31c>
   2c220:	mov	r1, r0
   2c224:	ldr	r0, [r9, #12]
   2c228:	str	r0, [r6]
   2c22c:	ldr	r0, [r1]
   2c230:	str	r0, [r9, #12]
   2c234:	str	r7, [r1]
   2c238:	ldr	r7, [r9]
   2c23c:	b	2c154 <flatcc_builder_create_cached_vtable@@Base+0x238>
   2c240:	ldr	r0, [pc, #68]	; 2c28c <flatcc_builder_create_cached_vtable@@Base+0x370>
   2c244:	ldr	r1, [pc, #68]	; 2c290 <flatcc_builder_create_cached_vtable@@Base+0x374>
   2c248:	ldr	r3, [pc, #68]	; 2c294 <flatcc_builder_create_cached_vtable@@Base+0x378>
   2c24c:	mov	r2, #308	; 0x134
   2c250:	add	r0, pc, r0
   2c254:	add	r1, pc, r1
   2c258:	add	r3, pc, r3
   2c25c:	bl	12bbc <__assert_fail@plt>
   2c260:	ldr	r0, [pc, #24]	; 2c280 <flatcc_builder_create_cached_vtable@@Base+0x364>
   2c264:	ldr	r1, [pc, #24]	; 2c284 <flatcc_builder_create_cached_vtable@@Base+0x368>
   2c268:	ldr	r3, [pc, #24]	; 2c288 <flatcc_builder_create_cached_vtable@@Base+0x36c>
   2c26c:	movw	r2, #342	; 0x156
   2c270:	add	r0, pc, r0
   2c274:	add	r1, pc, r1
   2c278:	add	r3, pc, r3
   2c27c:	bl	12bbc <__assert_fail@plt>
   2c280:	andeq	r8, r0, pc, lsl ip
   2c284:	muleq	r0, sl, sl
   2c288:	andeq	r8, r0, r6, lsr #24
   2c28c:	andeq	r8, r0, fp, ror ip
   2c290:			; <UNDEFINED> instruction: 0x00007aba
   2c294:	andeq	r8, r0, sp, lsr #21

0002c298 <flatcc_builder_create_table@@Base>:
   2c298:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2c29c:	add	fp, sp, #24
   2c2a0:	sub	sp, sp, #80	; 0x50
   2c2a4:	ldr	r5, [fp, #12]
   2c2a8:	cmn	r5, #1
   2c2ac:	ble	2c3f8 <flatcc_builder_create_table@@Base+0x160>
   2c2b0:	ldr	ip, [fp, #16]
   2c2b4:	tst	ip, #1
   2c2b8:	beq	2c418 <flatcc_builder_create_table@@Base+0x180>
   2c2bc:	mov	r8, r0
   2c2c0:	ldrh	r0, [r0, #128]	; 0x80
   2c2c4:	cmp	r3, #4
   2c2c8:	movls	r3, #4
   2c2cc:	cmp	r0, r3
   2c2d0:	strhcc	r3, [r8, #128]	; 0x80
   2c2d4:	cmp	r5, #1
   2c2d8:	ldr	r0, [r8, #136]	; 0x88
   2c2dc:	sub	r4, r0, r2
   2c2e0:	sub	r0, r3, #1
   2c2e4:	and	r0, r4, r0
   2c2e8:	sub	r4, r4, #4
   2c2ec:	add	r3, ip, r0
   2c2f0:	sub	r3, r4, r3
   2c2f4:	add	r3, r3, #1
   2c2f8:	str	r3, [fp, #-28]	; 0xffffffe4
   2c2fc:	blt	2c32c <flatcc_builder_create_table@@Base+0x94>
   2c300:	ldr	r3, [fp, #8]
   2c304:	sub	ip, r4, r0
   2c308:	mvn	r4, #3
   2c30c:	sub	r4, r4, ip
   2c310:	ldrh	r6, [r3], #2
   2c314:	subs	r5, r5, #1
   2c318:	ldr	r7, [r6, r1]
   2c31c:	add	r7, r4, r7
   2c320:	sub	r7, r7, r6
   2c324:	str	r7, [r6, r1]
   2c328:	bne	2c310 <flatcc_builder_create_table@@Base+0x78>
   2c32c:	mov	r4, #4
   2c330:	sub	r3, fp, #28
   2c334:	cmp	r2, #0
   2c338:	str	r4, [sp, #16]
   2c33c:	str	r3, [sp, #12]
   2c340:	mov	r3, #1
   2c344:	str	r4, [sp, #4]
   2c348:	addne	r4, r2, #4
   2c34c:	str	r3, [sp, #8]
   2c350:	movne	r3, #2
   2c354:	strne	r2, [sp, #24]
   2c358:	strne	r1, [sp, #20]
   2c35c:	strne	r3, [sp, #8]
   2c360:	strne	r4, [sp, #4]
   2c364:	cmp	r0, #0
   2c368:	beq	2c394 <flatcc_builder_create_table@@Base+0xfc>
   2c36c:	add	r4, r4, r0
   2c370:	add	r1, sp, #4
   2c374:	str	r4, [sp, #4]
   2c378:	add	r1, r1, r3, lsl #3
   2c37c:	add	r3, r3, #1
   2c380:	ldr	r2, [pc, #208]	; 2c458 <flatcc_builder_create_table@@Base+0x1c0>
   2c384:	ldr	r2, [pc, r2]
   2c388:	str	r2, [r1, #8]
   2c38c:	str	r0, [r1, #12]
   2c390:	str	r3, [sp, #8]
   2c394:	cmp	r4, #0
   2c398:	ble	2c438 <flatcc_builder_create_table@@Base+0x1a0>
   2c39c:	ldr	r0, [r8, #136]	; 0x88
   2c3a0:	ldr	r7, [r8, #44]	; 0x2c
   2c3a4:	add	r1, sp, #4
   2c3a8:	mov	r2, r3
   2c3ac:	add	r1, r1, #8
   2c3b0:	sub	r5, r0, r4
   2c3b4:	ldr	r0, [r8, #36]	; 0x24
   2c3b8:	str	r4, [sp]
   2c3bc:	mov	r3, r5
   2c3c0:	blx	r7
   2c3c4:	cmp	r0, #0
   2c3c8:	streq	r5, [r8, #136]	; 0x88
   2c3cc:	moveq	r0, r5
   2c3d0:	subeq	sp, fp, #24
   2c3d4:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   2c3d8:	ldr	r0, [pc, #160]	; 2c480 <flatcc_builder_create_table@@Base+0x1e8>
   2c3dc:	ldr	r1, [pc, #160]	; 2c484 <flatcc_builder_create_table@@Base+0x1ec>
   2c3e0:	ldr	r3, [pc, #160]	; 2c488 <flatcc_builder_create_table@@Base+0x1f0>
   2c3e4:	movw	r2, #651	; 0x28b
   2c3e8:	add	r0, pc, r0
   2c3ec:	add	r1, pc, r1
   2c3f0:	add	r3, pc, r3
   2c3f4:	bl	12bbc <__assert_fail@plt>
   2c3f8:	ldr	r0, [pc, #92]	; 2c45c <flatcc_builder_create_table@@Base+0x1c4>
   2c3fc:	ldr	r1, [pc, #92]	; 2c460 <flatcc_builder_create_table@@Base+0x1c8>
   2c400:	ldr	r3, [pc, #92]	; 2c464 <flatcc_builder_create_table@@Base+0x1cc>
   2c404:	movw	r2, #1237	; 0x4d5
   2c408:	add	r0, pc, r0
   2c40c:	add	r1, pc, r1
   2c410:	add	r3, pc, r3
   2c414:	bl	12bbc <__assert_fail@plt>
   2c418:	ldr	r0, [pc, #72]	; 2c468 <flatcc_builder_create_table@@Base+0x1d0>
   2c41c:	ldr	r1, [pc, #72]	; 2c46c <flatcc_builder_create_table@@Base+0x1d4>
   2c420:	ldr	r3, [pc, #72]	; 2c470 <flatcc_builder_create_table@@Base+0x1d8>
   2c424:	movw	r2, #1243	; 0x4db
   2c428:	add	r0, pc, r0
   2c42c:	add	r1, pc, r1
   2c430:	add	r3, pc, r3
   2c434:	bl	12bbc <__assert_fail@plt>
   2c438:	ldr	r0, [pc, #52]	; 2c474 <flatcc_builder_create_table@@Base+0x1dc>
   2c43c:	ldr	r1, [pc, #52]	; 2c478 <flatcc_builder_create_table@@Base+0x1e0>
   2c440:	ldr	r3, [pc, #52]	; 2c47c <flatcc_builder_create_table@@Base+0x1e4>
   2c444:	movw	r2, #647	; 0x287
   2c448:	add	r0, pc, r0
   2c44c:	add	r1, pc, r1
   2c450:	add	r3, pc, r3
   2c454:	bl	12bbc <__assert_fail@plt>
   2c458:	andeq	r9, r1, r8, ror #25
   2c45c:	andeq	r8, r0, r9, ror r0
   2c460:	andeq	r7, r0, r2, lsl #18
   2c464:	andeq	r8, r0, r3, lsl #1
   2c468:	andeq	r8, r0, r7, lsl #2
   2c46c:	andeq	r7, r0, r2, ror #17
   2c470:	andeq	r8, r0, r3, rrx
   2c474:	andeq	r8, r0, r3, lsl #21
   2c478:	andeq	r7, r0, r2, asr #17
   2c47c:	andeq	r8, r0, sl, lsr r9
   2c480:	andeq	r8, r0, r3, ror #21
   2c484:	andeq	r7, r0, r2, lsr #18
   2c488:	muleq	r0, sl, r9

0002c48c <flatcc_builder_check_required_field@@Base>:
   2c48c:	push	{fp, lr}
   2c490:	mov	fp, sp
   2c494:	ldr	r2, [r0, #32]
   2c498:	ldrh	r2, [r2, #14]
   2c49c:	cmp	r2, #3
   2c4a0:	bne	2c4d0 <flatcc_builder_check_required_field@@Base+0x44>
   2c4a4:	ldrh	r3, [r0, #8]
   2c4a8:	mov	r2, #0
   2c4ac:	cmp	r3, r1
   2c4b0:	bls	2c4c8 <flatcc_builder_check_required_field@@Base+0x3c>
   2c4b4:	ldr	r0, [r0, #4]
   2c4b8:	add	r0, r0, r1, lsl #1
   2c4bc:	ldrh	r2, [r0]
   2c4c0:	cmp	r2, #0
   2c4c4:	movwne	r2, #1
   2c4c8:	mov	r0, r2
   2c4cc:	pop	{fp, pc}
   2c4d0:	ldr	r0, [pc, #24]	; 2c4f0 <flatcc_builder_check_required_field@@Base+0x64>
   2c4d4:	ldr	r1, [pc, #24]	; 2c4f4 <flatcc_builder_check_required_field@@Base+0x68>
   2c4d8:	ldr	r3, [pc, #24]	; 2c4f8 <flatcc_builder_check_required_field@@Base+0x6c>
   2c4dc:	movw	r2, #1272	; 0x4f8
   2c4e0:	add	r0, pc, r0
   2c4e4:	add	r1, pc, r1
   2c4e8:	add	r3, pc, r3
   2c4ec:	bl	12bbc <__assert_fail@plt>
   2c4f0:	andeq	r8, r0, sl, asr r0
   2c4f4:	andeq	r7, r0, sl, lsr #16
   2c4f8:	andeq	r8, r0, sp, ror r0

0002c4fc <flatcc_builder_check_union_field@@Base>:
   2c4fc:	push	{fp, lr}
   2c500:	mov	fp, sp
   2c504:	mov	r2, r0
   2c508:	ldr	r0, [r0, #32]
   2c50c:	ldrh	r0, [r0, #14]
   2c510:	cmp	r0, #3
   2c514:	bne	2c574 <flatcc_builder_check_union_field@@Base+0x78>
   2c518:	mov	r0, #0
   2c51c:	cmp	r1, #0
   2c520:	beq	2c560 <flatcc_builder_check_union_field@@Base+0x64>
   2c524:	ldrh	r3, [r2, #8]
   2c528:	cmp	r3, r1
   2c52c:	popls	{fp, pc}
   2c530:	ldr	r0, [r2, #4]
   2c534:	add	r0, r0, r1, lsl #1
   2c538:	ldrh	r1, [r0, #-2]
   2c53c:	cmp	r1, #0
   2c540:	beq	2c564 <flatcc_builder_check_union_field@@Base+0x68>
   2c544:	ldr	r2, [r2, #16]
   2c548:	ldrh	r0, [r0]
   2c54c:	ldrb	r1, [r2, r1]
   2c550:	cmp	r1, #0
   2c554:	beq	2c568 <flatcc_builder_check_union_field@@Base+0x6c>
   2c558:	cmp	r0, #0
   2c55c:	movwne	r0, #1
   2c560:	pop	{fp, pc}
   2c564:	ldrh	r0, [r0]
   2c568:	clz	r0, r0
   2c56c:	lsr	r0, r0, #5
   2c570:	pop	{fp, pc}
   2c574:	ldr	r0, [pc, #24]	; 2c594 <flatcc_builder_check_union_field@@Base+0x98>
   2c578:	ldr	r1, [pc, #24]	; 2c598 <flatcc_builder_check_union_field@@Base+0x9c>
   2c57c:	ldr	r3, [pc, #24]	; 2c59c <flatcc_builder_check_union_field@@Base+0xa0>
   2c580:	movw	r2, #1279	; 0x4ff
   2c584:	add	r0, pc, r0
   2c588:	add	r1, pc, r1
   2c58c:	add	r3, pc, r3
   2c590:	bl	12bbc <__assert_fail@plt>
   2c594:			; <UNDEFINED> instruction: 0x00007fb6
   2c598:	andeq	r7, r0, r6, lsl #15
   2c59c:	andeq	r8, r0, ip, lsr #32

0002c5a0 <flatcc_builder_check_required@@Base>:
   2c5a0:	push	{fp, lr}
   2c5a4:	mov	fp, sp
   2c5a8:	mov	r3, r0
   2c5ac:	ldr	r0, [r0, #32]
   2c5b0:	ldrh	r0, [r0, #14]
   2c5b4:	cmp	r0, #3
   2c5b8:	bne	2c600 <flatcc_builder_check_required@@Base+0x60>
   2c5bc:	ldrh	ip, [r3, #8]
   2c5c0:	mov	r0, #0
   2c5c4:	cmp	ip, r2
   2c5c8:	poplt	{fp, pc}
   2c5cc:	cmp	r2, #1
   2c5d0:	blt	2c5f8 <flatcc_builder_check_required@@Base+0x58>
   2c5d4:	ldr	ip, [r3, #4]
   2c5d8:	ldrh	r3, [r1]
   2c5dc:	add	r3, ip, r3, lsl #1
   2c5e0:	ldrh	r3, [r3]
   2c5e4:	cmp	r3, #0
   2c5e8:	beq	2c5fc <flatcc_builder_check_required@@Base+0x5c>
   2c5ec:	add	r1, r1, #2
   2c5f0:	subs	r2, r2, #1
   2c5f4:	bne	2c5d8 <flatcc_builder_check_required@@Base+0x38>
   2c5f8:	mov	r0, #1
   2c5fc:	pop	{fp, pc}
   2c600:	ldr	r0, [pc, #24]	; 2c620 <flatcc_builder_check_required@@Base+0x80>
   2c604:	ldr	r1, [pc, #24]	; 2c624 <flatcc_builder_check_required@@Base+0x84>
   2c608:	ldr	r3, [pc, #24]	; 2c628 <flatcc_builder_check_required@@Base+0x88>
   2c60c:	movw	r2, #1297	; 0x511
   2c610:	add	r0, pc, r0
   2c614:	add	r1, pc, r1
   2c618:	add	r3, pc, r3
   2c61c:	bl	12bbc <__assert_fail@plt>
   2c620:	andeq	r7, r0, sl, lsr #30
   2c624:	strdeq	r7, [r0], -sl
   2c628:	strdeq	r7, [r0], -r0

0002c62c <flatcc_builder_end_table@@Base>:
   2c62c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2c630:	add	fp, sp, #24
   2c634:	sub	sp, sp, #16
   2c638:	mov	r4, r0
   2c63c:	ldr	r0, [r0, #32]
   2c640:	ldrh	r0, [r0, #14]
   2c644:	cmp	r0, #3
   2c648:	bne	2c7c4 <flatcc_builder_end_table@@Base+0x198>
   2c64c:	ldrh	r0, [r4, #8]
   2c650:	ldr	r5, [r4, #4]
   2c654:	mov	r1, #4
   2c658:	movw	r2, #31153	; 0x79b1
   2c65c:	movt	r2, #40503	; 0x9e37
   2c660:	add	r0, r1, r0, lsl #1
   2c664:	strh	r0, [r5, #-4]!
   2c668:	ldrh	r1, [r4, #20]
   2c66c:	uxth	r6, r0
   2c670:	add	r1, r1, #4
   2c674:	strh	r1, [r5, #2]
   2c678:	uxth	r1, r1
   2c67c:	ldr	r0, [r4, #12]
   2c680:	eor	r0, r0, r6
   2c684:	mul	r0, r0, r2
   2c688:	eor	r0, r0, r1
   2c68c:	mov	r1, r5
   2c690:	mul	r3, r0, r2
   2c694:	mov	r0, r4
   2c698:	mov	r2, r6
   2c69c:	str	r3, [r4, #12]
   2c6a0:	bl	2bf1c <flatcc_builder_create_cached_vtable@@Base>
   2c6a4:	cmp	r0, #0
   2c6a8:	beq	2c7b4 <flatcc_builder_end_table@@Base+0x188>
   2c6ac:	mov	r7, r0
   2c6b0:	mov	r0, r5
   2c6b4:	mov	r1, #0
   2c6b8:	mov	r2, r6
   2c6bc:	mov	r8, #0
   2c6c0:	bl	12b5c <memset@plt>
   2c6c4:	ldr	r5, [r4, #32]
   2c6c8:	ldr	r0, [r4, #76]	; 0x4c
   2c6cc:	ldr	r6, [r4]
   2c6d0:	ldrh	r3, [r4, #130]	; 0x82
   2c6d4:	ldr	r1, [r4, #16]
   2c6d8:	ldr	r2, [r4, #20]
   2c6dc:	ldr	r5, [r5, #20]
   2c6e0:	add	r0, r0, r5
   2c6e4:	sub	r6, r6, r0
   2c6e8:	asr	r6, r6, #1
   2c6ec:	stm	sp, {r0, r6, r7}
   2c6f0:	mov	r0, r4
   2c6f4:	bl	2c298 <flatcc_builder_create_table@@Base>
   2c6f8:	cmp	r0, #0
   2c6fc:	beq	2c7b8 <flatcc_builder_end_table@@Base+0x18c>
   2c700:	ldr	r1, [r4, #32]
   2c704:	mov	r5, r0
   2c708:	ldr	r0, [r4, #16]
   2c70c:	ldr	r2, [r4, #20]
   2c710:	ldr	r3, [r4, #52]	; 0x34
   2c714:	ldr	r7, [r1, #24]
   2c718:	str	r7, [r4, #12]
   2c71c:	ldrh	r7, [r1, #28]
   2c720:	strh	r7, [r4, #8]
   2c724:	ldr	r7, [r1, #16]
   2c728:	add	r3, r3, r7
   2c72c:	str	r3, [r4, #4]
   2c730:	ldr	r3, [r4, #76]	; 0x4c
   2c734:	ldr	r1, [r1, #20]
   2c738:	add	r1, r3, r1
   2c73c:	str	r1, [r4]
   2c740:	mov	r1, #0
   2c744:	bl	12b5c <memset@plt>
   2c748:	ldr	r0, [r4, #32]
   2c74c:	ldr	r1, [r4, #60]	; 0x3c
   2c750:	ldr	r2, [r4, #64]	; 0x40
   2c754:	mov	r8, r5
   2c758:	ldr	r3, [r0, #8]
   2c75c:	str	r3, [r4, #20]
   2c760:	ldr	r3, [r0]
   2c764:	str	r3, [r4, #28]
   2c768:	add	r1, r1, r3
   2c76c:	ldr	r7, [r0, #4]
   2c770:	str	r1, [r4, #16]
   2c774:	sub	r1, r2, r3
   2c778:	cmp	r1, r7
   2c77c:	movhi	r1, r7
   2c780:	str	r1, [r4, #24]
   2c784:	ldrh	r1, [r4, #130]	; 0x82
   2c788:	ldrh	r2, [r4, #128]	; 0x80
   2c78c:	cmp	r2, r1
   2c790:	strhcc	r1, [r4, #128]	; 0x80
   2c794:	ldrh	r1, [r0, #12]
   2c798:	sub	r0, r0, #36	; 0x24
   2c79c:	str	r0, [r4, #32]
   2c7a0:	strh	r1, [r4, #130]	; 0x82
   2c7a4:	ldr	r0, [r4, #156]	; 0x9c
   2c7a8:	sub	r0, r0, #1
   2c7ac:	str	r0, [r4, #156]	; 0x9c
   2c7b0:	b	2c7b8 <flatcc_builder_end_table@@Base+0x18c>
   2c7b4:	mov	r8, #0
   2c7b8:	mov	r0, r8
   2c7bc:	sub	sp, fp, #24
   2c7c0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2c7c4:	ldr	r0, [pc, #24]	; 2c7e4 <flatcc_builder_end_table@@Base+0x1b8>
   2c7c8:	ldr	r1, [pc, #24]	; 2c7e8 <flatcc_builder_end_table@@Base+0x1bc>
   2c7cc:	ldr	r3, [pc, #24]	; 2c7ec <flatcc_builder_end_table@@Base+0x1c0>
   2c7d0:	movw	r2, #1317	; 0x525
   2c7d4:	add	r0, pc, r0
   2c7d8:	add	r1, pc, r1
   2c7dc:	add	r3, pc, r3
   2c7e0:	bl	12bbc <__assert_fail@plt>
   2c7e4:	andeq	r7, r0, r6, ror #26
   2c7e8:	andeq	r7, r0, r6, lsr r5
   2c7ec:	andeq	r7, r0, r6, lsl #29

0002c7f0 <flatcc_builder_create_vector@@Base>:
   2c7f0:	push	{r4, r5, r6, r7, fp, lr}
   2c7f4:	add	fp, sp, #16
   2c7f8:	sub	sp, sp, #80	; 0x50
   2c7fc:	mov	r7, r0
   2c800:	ldr	r0, [fp, #12]
   2c804:	cmp	r2, r0
   2c808:	bhi	2c904 <flatcc_builder_create_vector@@Base+0x114>
   2c80c:	ldr	r0, [fp, #8]
   2c810:	mov	r4, r2
   2c814:	ldrh	r2, [r7, #128]	; 0x80
   2c818:	mov	r5, #4
   2c81c:	cmp	r0, #4
   2c820:	movls	r0, r5
   2c824:	cmp	r2, r0
   2c828:	sub	r2, fp, #20
   2c82c:	strhcc	r0, [r7, #128]	; 0x80
   2c830:	str	r4, [fp, #-20]	; 0xffffffec
   2c834:	sub	r0, r0, #1
   2c838:	ldr	ip, [r7, #136]	; 0x88
   2c83c:	str	r5, [sp, #16]
   2c840:	str	r2, [sp, #12]
   2c844:	mov	r2, #1
   2c848:	str	r5, [sp, #4]
   2c84c:	str	r2, [sp, #8]
   2c850:	mls	r6, r3, r4, ip
   2c854:	mul	r3, r3, r4
   2c858:	cmp	r3, #0
   2c85c:	and	r0, r6, r0
   2c860:	movne	r2, #2
   2c864:	addne	r5, r3, #4
   2c868:	strne	r3, [sp, #24]
   2c86c:	strne	r1, [sp, #20]
   2c870:	strne	r2, [sp, #8]
   2c874:	strne	r5, [sp, #4]
   2c878:	cmp	r0, #0
   2c87c:	beq	2c8a8 <flatcc_builder_create_vector@@Base+0xb8>
   2c880:	add	r5, r5, r0
   2c884:	add	r1, sp, #4
   2c888:	str	r5, [sp, #4]
   2c88c:	add	r1, r1, r2, lsl #3
   2c890:	add	r2, r2, #1
   2c894:	ldr	r3, [pc, #168]	; 2c944 <flatcc_builder_create_vector@@Base+0x154>
   2c898:	ldr	r3, [pc, r3]
   2c89c:	str	r3, [r1, #8]
   2c8a0:	str	r0, [r1, #12]
   2c8a4:	str	r2, [sp, #8]
   2c8a8:	cmp	r5, #0
   2c8ac:	ble	2c924 <flatcc_builder_create_vector@@Base+0x134>
   2c8b0:	ldr	r0, [r7, #36]	; 0x24
   2c8b4:	ldr	r6, [r7, #44]	; 0x2c
   2c8b8:	add	r1, sp, #4
   2c8bc:	sub	r4, ip, r5
   2c8c0:	str	r5, [sp]
   2c8c4:	add	r1, r1, #8
   2c8c8:	mov	r3, r4
   2c8cc:	blx	r6
   2c8d0:	cmp	r0, #0
   2c8d4:	streq	r4, [r7, #136]	; 0x88
   2c8d8:	moveq	r0, r4
   2c8dc:	subeq	sp, fp, #16
   2c8e0:	popeq	{r4, r5, r6, r7, fp, pc}
   2c8e4:	ldr	r0, [pc, #116]	; 2c960 <flatcc_builder_create_vector@@Base+0x170>
   2c8e8:	ldr	r1, [pc, #116]	; 2c964 <flatcc_builder_create_vector@@Base+0x174>
   2c8ec:	ldr	r3, [pc, #116]	; 2c968 <flatcc_builder_create_vector@@Base+0x178>
   2c8f0:	movw	r2, #651	; 0x28b
   2c8f4:	add	r0, pc, r0
   2c8f8:	add	r1, pc, r1
   2c8fc:	add	r3, pc, r3
   2c900:	bl	12bbc <__assert_fail@plt>
   2c904:	ldr	r0, [pc, #60]	; 2c948 <flatcc_builder_create_vector@@Base+0x158>
   2c908:	ldr	r1, [pc, #60]	; 2c94c <flatcc_builder_create_vector@@Base+0x15c>
   2c90c:	ldr	r3, [pc, #60]	; 2c950 <flatcc_builder_create_vector@@Base+0x160>
   2c910:	movw	r2, #1365	; 0x555
   2c914:	add	r0, pc, r0
   2c918:	add	r1, pc, r1
   2c91c:	add	r3, pc, r3
   2c920:	bl	12bbc <__assert_fail@plt>
   2c924:	ldr	r0, [pc, #40]	; 2c954 <flatcc_builder_create_vector@@Base+0x164>
   2c928:	ldr	r1, [pc, #40]	; 2c958 <flatcc_builder_create_vector@@Base+0x168>
   2c92c:	ldr	r3, [pc, #40]	; 2c95c <flatcc_builder_create_vector@@Base+0x16c>
   2c930:	movw	r2, #647	; 0x287
   2c934:	add	r0, pc, r0
   2c938:	add	r1, pc, r1
   2c93c:	add	r3, pc, r3
   2c940:	bl	12bbc <__assert_fail@plt>
   2c944:	ldrdeq	r9, [r1], -r4
   2c948:	muleq	r0, r0, sp
   2c94c:	strdeq	r7, [r0], -r6
   2c950:	muleq	r0, fp, sp
   2c954:	muleq	r0, r7, r5
   2c958:	ldrdeq	r7, [r0], -r6
   2c95c:	andeq	r8, r0, lr, asr #8
   2c960:	ldrdeq	r8, [r0], -r7
   2c964:	andeq	r7, r0, r6, lsl r4
   2c968:	andeq	r8, r0, lr, lsl #9

0002c96c <flatcc_builder_end_vector@@Base>:
   2c96c:	push	{r4, r5, fp, lr}
   2c970:	add	fp, sp, #8
   2c974:	sub	sp, sp, #8
   2c978:	mov	r4, r0
   2c97c:	ldr	r0, [r0, #32]
   2c980:	ldrh	r1, [r0, #14]
   2c984:	cmp	r1, #4
   2c988:	bne	2ca3c <flatcc_builder_end_vector@@Base+0xd0>
   2c98c:	ldr	r3, [r0, #16]
   2c990:	ldr	r2, [r0, #20]
   2c994:	ldr	r0, [r0, #24]
   2c998:	ldr	r1, [r4, #16]
   2c99c:	ldrh	r5, [r4, #130]	; 0x82
   2c9a0:	str	r0, [sp, #4]
   2c9a4:	mov	r0, r4
   2c9a8:	str	r5, [sp]
   2c9ac:	bl	2c7f0 <flatcc_builder_create_vector@@Base>
   2c9b0:	mov	r5, r0
   2c9b4:	cmp	r0, #0
   2c9b8:	beq	2ca30 <flatcc_builder_end_vector@@Base+0xc4>
   2c9bc:	ldr	r0, [r4, #16]
   2c9c0:	ldr	r2, [r4, #20]
   2c9c4:	mov	r1, #0
   2c9c8:	bl	12b5c <memset@plt>
   2c9cc:	ldr	r0, [r4, #32]
   2c9d0:	ldr	r1, [r4, #60]	; 0x3c
   2c9d4:	ldr	ip, [r4, #64]	; 0x40
   2c9d8:	ldr	r3, [r0, #8]
   2c9dc:	str	r3, [r4, #20]
   2c9e0:	ldr	r3, [r0]
   2c9e4:	str	r3, [r4, #28]
   2c9e8:	add	r1, r1, r3
   2c9ec:	ldr	r2, [r0, #4]
   2c9f0:	str	r1, [r4, #16]
   2c9f4:	sub	r1, ip, r3
   2c9f8:	cmp	r1, r2
   2c9fc:	movhi	r1, r2
   2ca00:	str	r1, [r4, #24]
   2ca04:	ldrh	r1, [r4, #130]	; 0x82
   2ca08:	ldrh	r2, [r4, #128]	; 0x80
   2ca0c:	cmp	r2, r1
   2ca10:	strhcc	r1, [r4, #128]	; 0x80
   2ca14:	ldrh	r1, [r0, #12]
   2ca18:	sub	r0, r0, #36	; 0x24
   2ca1c:	str	r0, [r4, #32]
   2ca20:	strh	r1, [r4, #130]	; 0x82
   2ca24:	ldr	r0, [r4, #156]	; 0x9c
   2ca28:	sub	r0, r0, #1
   2ca2c:	str	r0, [r4, #156]	; 0x9c
   2ca30:	mov	r0, r5
   2ca34:	sub	sp, fp, #8
   2ca38:	pop	{r4, r5, fp, pc}
   2ca3c:	ldr	r0, [pc, #24]	; 2ca5c <flatcc_builder_end_vector@@Base+0xf0>
   2ca40:	ldr	r1, [pc, #24]	; 2ca60 <flatcc_builder_end_vector@@Base+0xf4>
   2ca44:	ldr	r3, [pc, #24]	; 2ca64 <flatcc_builder_end_vector@@Base+0xf8>
   2ca48:	movw	r2, #1400	; 0x578
   2ca4c:	add	r0, pc, r0
   2ca50:	add	r1, pc, r1
   2ca54:	add	r3, pc, r3
   2ca58:	bl	12bbc <__assert_fail@plt>
   2ca5c:	strdeq	r7, [r0], -ip
   2ca60:			; <UNDEFINED> instruction: 0x000072be
   2ca64:	ldrdeq	r7, [r0], -r9

0002ca68 <flatcc_builder_vector_count@@Base>:
   2ca68:	ldr	r0, [r0, #32]
   2ca6c:	ldr	r0, [r0, #20]
   2ca70:	bx	lr

0002ca74 <flatcc_builder_vector_edit@@Base>:
   2ca74:	ldr	r0, [r0, #16]
   2ca78:	bx	lr

0002ca7c <flatcc_builder_create_offset_vector_direct@@Base>:
   2ca7c:	mov	r3, #0
   2ca80:	b	2ca84 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   2ca84:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2ca88:	add	fp, sp, #24
   2ca8c:	sub	sp, sp, #80	; 0x50
   2ca90:	mov	r6, #0
   2ca94:	cmn	r2, #-1073741823	; 0xc0000001
   2ca98:	bhi	2cbf8 <flatcc_builder_create_offset_vector_direct@@Base+0x17c>
   2ca9c:	mov	r8, r0
   2caa0:	ldrh	r0, [r0, #128]	; 0x80
   2caa4:	mov	r5, #4
   2caa8:	sub	r7, fp, #28
   2caac:	mov	r4, #1
   2cab0:	cmp	r0, #3
   2cab4:	movls	r0, #4
   2cab8:	strhls	r0, [r8, #128]	; 0x80
   2cabc:	str	r2, [fp, #-28]	; 0xffffffe4
   2cac0:	ldr	ip, [r8, #136]	; 0x88
   2cac4:	str	r5, [sp, #16]
   2cac8:	str	r7, [sp, #12]
   2cacc:	mov	r7, #0
   2cad0:	str	r5, [sp, #4]
   2cad4:	str	r4, [sp, #8]
   2cad8:	cmp	r7, r2, lsl #2
   2cadc:	and	r6, ip, #3
   2cae0:	beq	2cb00 <flatcc_builder_create_offset_vector_direct@@Base+0x84>
   2cae4:	lsl	r7, r2, #2
   2cae8:	mov	r4, #2
   2caec:	add	r5, r7, #4
   2caf0:	str	r7, [sp, #24]
   2caf4:	str	r1, [sp, #20]
   2caf8:	str	r4, [sp, #8]
   2cafc:	str	r5, [sp, #4]
   2cb00:	cmp	r6, #0
   2cb04:	beq	2cb30 <flatcc_builder_create_offset_vector_direct@@Base+0xb4>
   2cb08:	add	r5, r5, r6
   2cb0c:	add	r7, sp, #4
   2cb10:	str	r5, [sp, #4]
   2cb14:	add	r7, r7, r4, lsl #3
   2cb18:	add	r4, r4, #1
   2cb1c:	ldr	r0, [pc, #352]	; 2cc84 <flatcc_builder_create_offset_vector_direct@@Base+0x208>
   2cb20:	ldr	r0, [pc, r0]
   2cb24:	str	r0, [r7, #8]
   2cb28:	str	r6, [r7, #12]
   2cb2c:	str	r4, [sp, #8]
   2cb30:	cmp	r2, #0
   2cb34:	beq	2cbc0 <flatcc_builder_create_offset_vector_direct@@Base+0x144>
   2cb38:	sub	r0, r5, ip
   2cb3c:	mov	r6, r3
   2cb40:	sub	r0, r0, #4
   2cb44:	b	2cb5c <flatcc_builder_create_offset_vector_direct@@Base+0xe0>
   2cb48:	sub	r0, r0, #4
   2cb4c:	add	r1, r1, #4
   2cb50:	add	r6, r6, #1
   2cb54:	subs	r2, r2, #1
   2cb58:	beq	2cbbc <flatcc_builder_create_offset_vector_direct@@Base+0x140>
   2cb5c:	ldr	r7, [r1]
   2cb60:	cmp	r7, #0
   2cb64:	beq	2cb88 <flatcc_builder_create_offset_vector_direct@@Base+0x10c>
   2cb68:	add	r7, r0, r7
   2cb6c:	cmp	r3, #0
   2cb70:	str	r7, [r1]
   2cb74:	beq	2cb48 <flatcc_builder_create_offset_vector_direct@@Base+0xcc>
   2cb78:	ldrb	r7, [r6]
   2cb7c:	cmp	r7, #0
   2cb80:	bne	2cb48 <flatcc_builder_create_offset_vector_direct@@Base+0xcc>
   2cb84:	b	2cc04 <flatcc_builder_create_offset_vector_direct@@Base+0x188>
   2cb88:	cmp	r3, #0
   2cb8c:	beq	2cc24 <flatcc_builder_create_offset_vector_direct@@Base+0x1a8>
   2cb90:	ldrb	r7, [r6]
   2cb94:	cmp	r7, #0
   2cb98:	beq	2cb48 <flatcc_builder_create_offset_vector_direct@@Base+0xcc>
   2cb9c:	ldr	r0, [pc, #240]	; 2cc94 <flatcc_builder_create_offset_vector_direct@@Base+0x218>
   2cba0:	ldr	r1, [pc, #240]	; 2cc98 <flatcc_builder_create_offset_vector_direct@@Base+0x21c>
   2cba4:	ldr	r3, [pc, #240]	; 2cc9c <flatcc_builder_create_offset_vector_direct@@Base+0x220>
   2cba8:	movw	r2, #1461	; 0x5b5
   2cbac:	add	r0, pc, r0
   2cbb0:	add	r1, pc, r1
   2cbb4:	add	r3, pc, r3
   2cbb8:	bl	12bbc <__assert_fail@plt>
   2cbbc:	ldr	ip, [r8, #136]	; 0x88
   2cbc0:	cmp	r5, #0
   2cbc4:	ble	2cc44 <flatcc_builder_create_offset_vector_direct@@Base+0x1c8>
   2cbc8:	ldr	r0, [r8, #36]	; 0x24
   2cbcc:	ldr	r7, [r8, #44]	; 0x2c
   2cbd0:	add	r1, sp, #4
   2cbd4:	sub	r6, ip, r5
   2cbd8:	mov	r2, r4
   2cbdc:	str	r5, [sp]
   2cbe0:	add	r1, r1, #8
   2cbe4:	mov	r3, r6
   2cbe8:	blx	r7
   2cbec:	cmp	r0, #0
   2cbf0:	bne	2cc64 <flatcc_builder_create_offset_vector_direct@@Base+0x1e8>
   2cbf4:	str	r6, [r8, #136]	; 0x88
   2cbf8:	mov	r0, r6
   2cbfc:	sub	sp, fp, #24
   2cc00:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2cc04:	ldr	r0, [pc, #124]	; 2cc88 <flatcc_builder_create_offset_vector_direct@@Base+0x20c>
   2cc08:	ldr	r1, [pc, #124]	; 2cc8c <flatcc_builder_create_offset_vector_direct@@Base+0x210>
   2cc0c:	ldr	r3, [pc, #124]	; 2cc90 <flatcc_builder_create_offset_vector_direct@@Base+0x214>
   2cc10:	movw	r2, #1457	; 0x5b1
   2cc14:	add	r0, pc, r0
   2cc18:	add	r1, pc, r1
   2cc1c:	add	r3, pc, r3
   2cc20:	bl	12bbc <__assert_fail@plt>
   2cc24:	ldr	r0, [pc, #116]	; 2cca0 <flatcc_builder_create_offset_vector_direct@@Base+0x224>
   2cc28:	ldr	r1, [pc, #116]	; 2cca4 <flatcc_builder_create_offset_vector_direct@@Base+0x228>
   2cc2c:	ldr	r3, [pc, #116]	; 2cca8 <flatcc_builder_create_offset_vector_direct@@Base+0x22c>
   2cc30:	movw	r2, #1463	; 0x5b7
   2cc34:	add	r0, pc, r0
   2cc38:	add	r1, pc, r1
   2cc3c:	add	r3, pc, r3
   2cc40:	bl	12bbc <__assert_fail@plt>
   2cc44:	ldr	r0, [pc, #96]	; 2ccac <flatcc_builder_create_offset_vector_direct@@Base+0x230>
   2cc48:	ldr	r1, [pc, #96]	; 2ccb0 <flatcc_builder_create_offset_vector_direct@@Base+0x234>
   2cc4c:	ldr	r3, [pc, #96]	; 2ccb4 <flatcc_builder_create_offset_vector_direct@@Base+0x238>
   2cc50:	movw	r2, #647	; 0x287
   2cc54:	add	r0, pc, r0
   2cc58:	add	r1, pc, r1
   2cc5c:	add	r3, pc, r3
   2cc60:	bl	12bbc <__assert_fail@plt>
   2cc64:	ldr	r0, [pc, #76]	; 2ccb8 <flatcc_builder_create_offset_vector_direct@@Base+0x23c>
   2cc68:	ldr	r1, [pc, #76]	; 2ccbc <flatcc_builder_create_offset_vector_direct@@Base+0x240>
   2cc6c:	ldr	r3, [pc, #76]	; 2ccc0 <flatcc_builder_create_offset_vector_direct@@Base+0x244>
   2cc70:	movw	r2, #651	; 0x28b
   2cc74:	add	r0, pc, r0
   2cc78:	add	r1, pc, r1
   2cc7c:	add	r3, pc, r3
   2cc80:	bl	12bbc <__assert_fail@plt>
   2cc84:	andeq	r9, r1, ip, asr #10
   2cc88:	andeq	r8, r0, fp, lsr #5
   2cc8c:	strdeq	r7, [r0], -r6
   2cc90:			; <UNDEFINED> instruction: 0x000082b1
   2cc94:	andeq	r8, r0, r4, lsr #7
   2cc98:	andeq	r7, r0, lr, asr r1
   2cc9c:	andeq	r8, r0, r9, lsl r3
   2cca0:	muleq	r0, r7, r2
   2cca4:	ldrdeq	r7, [r0], -r6
   2cca8:	muleq	r0, r1, r2
   2ccac:	andeq	r8, r0, r7, ror r2
   2ccb0:	strheq	r7, [r0], -r6
   2ccb4:	andeq	r8, r0, lr, lsr #2
   2ccb8:	andeq	r8, r0, r7, asr r2
   2ccbc:	muleq	r0, r6, r0
   2ccc0:	andeq	r8, r0, lr, lsl #2

0002ccc4 <flatcc_builder_end_offset_vector_for_unions@@Base>:
   2ccc4:	push	{r4, r5, fp, lr}
   2ccc8:	add	fp, sp, #8
   2cccc:	mov	r4, r0
   2ccd0:	ldr	r0, [r0, #32]
   2ccd4:	mov	r3, r1
   2ccd8:	ldrh	r1, [r0, #14]
   2ccdc:	cmp	r1, #5
   2cce0:	bne	2cd7c <flatcc_builder_end_offset_vector_for_unions@@Base+0xb8>
   2cce4:	ldr	r2, [r0, #20]
   2cce8:	ldr	r1, [r4, #16]
   2ccec:	mov	r0, r4
   2ccf0:	bl	2ca84 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   2ccf4:	mov	r5, r0
   2ccf8:	cmp	r0, #0
   2ccfc:	beq	2cd74 <flatcc_builder_end_offset_vector_for_unions@@Base+0xb0>
   2cd00:	ldr	r0, [r4, #16]
   2cd04:	ldr	r2, [r4, #20]
   2cd08:	mov	r1, #0
   2cd0c:	bl	12b5c <memset@plt>
   2cd10:	ldr	r0, [r4, #32]
   2cd14:	ldr	r1, [r4, #60]	; 0x3c
   2cd18:	ldr	ip, [r4, #64]	; 0x40
   2cd1c:	ldr	r3, [r0, #8]
   2cd20:	str	r3, [r4, #20]
   2cd24:	ldr	r3, [r0]
   2cd28:	str	r3, [r4, #28]
   2cd2c:	add	r1, r1, r3
   2cd30:	ldr	r2, [r0, #4]
   2cd34:	str	r1, [r4, #16]
   2cd38:	sub	r1, ip, r3
   2cd3c:	cmp	r1, r2
   2cd40:	movhi	r1, r2
   2cd44:	str	r1, [r4, #24]
   2cd48:	ldrh	r1, [r4, #130]	; 0x82
   2cd4c:	ldrh	r2, [r4, #128]	; 0x80
   2cd50:	cmp	r2, r1
   2cd54:	strhcc	r1, [r4, #128]	; 0x80
   2cd58:	ldrh	r1, [r0, #12]
   2cd5c:	sub	r0, r0, #36	; 0x24
   2cd60:	str	r0, [r4, #32]
   2cd64:	strh	r1, [r4, #130]	; 0x82
   2cd68:	ldr	r0, [r4, #156]	; 0x9c
   2cd6c:	sub	r0, r0, #1
   2cd70:	str	r0, [r4, #156]	; 0x9c
   2cd74:	mov	r0, r5
   2cd78:	pop	{r4, r5, fp, pc}
   2cd7c:	ldr	r0, [pc, #24]	; 2cd9c <flatcc_builder_end_offset_vector_for_unions@@Base+0xd8>
   2cd80:	ldr	r1, [pc, #24]	; 2cda0 <flatcc_builder_end_offset_vector_for_unions@@Base+0xdc>
   2cd84:	ldr	r3, [pc, #24]	; 2cda4 <flatcc_builder_end_offset_vector_for_unions@@Base+0xe0>
   2cd88:	movw	r2, #1493	; 0x5d5
   2cd8c:	add	r0, pc, r0
   2cd90:	add	r1, pc, r1
   2cd94:	add	r3, pc, r3
   2cd98:	bl	12bbc <__assert_fail@plt>
   2cd9c:			; <UNDEFINED> instruction: 0x000073b5
   2cda0:	andeq	r6, r0, lr, ror pc
   2cda4:	andeq	r7, r0, r6, lsr #20

0002cda8 <flatcc_builder_offset_vector_edit@@Base>:
   2cda8:	ldr	r0, [r0, #16]
   2cdac:	bx	lr

0002cdb0 <flatcc_builder_offset_vector_count@@Base>:
   2cdb0:	ldr	r0, [r0, #32]
   2cdb4:	ldr	r0, [r0, #20]
   2cdb8:	bx	lr

0002cdbc <flatcc_builder_table_add_union@@Base>:
   2cdbc:	push	{r4, r5, r6, r7, fp, lr}
   2cdc0:	add	fp, sp, #16
   2cdc4:	mov	r5, r0
   2cdc8:	ldr	r0, [r0, #32]
   2cdcc:	ldrh	r0, [r0, #14]
   2cdd0:	cmp	r0, #3
   2cdd4:	bne	2ce5c <flatcc_builder_table_add_union@@Base+0xa0>
   2cdd8:	mov	r7, r3
   2cddc:	mov	r4, r2
   2cde0:	mov	r6, r1
   2cde4:	cmp	r3, #0
   2cde8:	beq	2cdf8 <flatcc_builder_table_add_union@@Base+0x3c>
   2cdec:	uxtb	r0, r4
   2cdf0:	cmp	r0, #0
   2cdf4:	beq	2ce7c <flatcc_builder_table_add_union@@Base+0xc0>
   2cdf8:	cmp	r7, #0
   2cdfc:	beq	2ce18 <flatcc_builder_table_add_union@@Base+0x5c>
   2ce00:	mov	r0, r5
   2ce04:	mov	r1, r6
   2ce08:	bl	2ceec <flatcc_builder_table_add_offset@@Base>
   2ce0c:	cmp	r0, #0
   2ce10:	beq	2ce9c <flatcc_builder_table_add_union@@Base+0xe0>
   2ce14:	str	r7, [r0]
   2ce18:	sub	r1, r6, #1
   2ce1c:	mov	r0, r5
   2ce20:	mov	r2, #1
   2ce24:	mov	r3, #1
   2ce28:	bl	2d0a0 <flatcc_builder_table_add@@Base>
   2ce2c:	cmp	r0, #0
   2ce30:	strbne	r4, [r0]
   2ce34:	movne	r0, #0
   2ce38:	popne	{r4, r5, r6, r7, fp, pc}
   2ce3c:	ldr	r0, [pc, #156]	; 2cee0 <flatcc_builder_table_add_union@@Base+0x124>
   2ce40:	ldr	r1, [pc, #156]	; 2cee4 <flatcc_builder_table_add_union@@Base+0x128>
   2ce44:	ldr	r3, [pc, #156]	; 2cee8 <flatcc_builder_table_add_union@@Base+0x12c>
   2ce48:	movw	r2, #1526	; 0x5f6
   2ce4c:	add	r0, pc, r0
   2ce50:	add	r1, pc, r1
   2ce54:	add	r3, pc, r3
   2ce58:	bl	12bbc <__assert_fail@plt>
   2ce5c:	ldr	r0, [pc, #88]	; 2cebc <flatcc_builder_table_add_union@@Base+0x100>
   2ce60:	ldr	r1, [pc, #88]	; 2cec0 <flatcc_builder_table_add_union@@Base+0x104>
   2ce64:	ldr	r3, [pc, #88]	; 2cec4 <flatcc_builder_table_add_union@@Base+0x108>
   2ce68:	movw	r2, #1518	; 0x5ee
   2ce6c:	add	r0, pc, r0
   2ce70:	add	r1, pc, r1
   2ce74:	add	r3, pc, r3
   2ce78:	bl	12bbc <__assert_fail@plt>
   2ce7c:	ldr	r0, [pc, #68]	; 2cec8 <flatcc_builder_table_add_union@@Base+0x10c>
   2ce80:	ldr	r1, [pc, #68]	; 2cecc <flatcc_builder_table_add_union@@Base+0x110>
   2ce84:	ldr	r3, [pc, #68]	; 2ced0 <flatcc_builder_table_add_union@@Base+0x114>
   2ce88:	movw	r2, #1519	; 0x5ef
   2ce8c:	add	r0, pc, r0
   2ce90:	add	r1, pc, r1
   2ce94:	add	r3, pc, r3
   2ce98:	bl	12bbc <__assert_fail@plt>
   2ce9c:	ldr	r0, [pc, #48]	; 2ced4 <flatcc_builder_table_add_union@@Base+0x118>
   2cea0:	ldr	r1, [pc, #48]	; 2ced8 <flatcc_builder_table_add_union@@Base+0x11c>
   2cea4:	ldr	r3, [pc, #48]	; 2cedc <flatcc_builder_table_add_union@@Base+0x120>
   2cea8:	movw	r2, #1522	; 0x5f2
   2ceac:	add	r0, pc, r0
   2ceb0:	add	r1, pc, r1
   2ceb4:	add	r3, pc, r3
   2ceb8:	bl	12bbc <__assert_fail@plt>
   2cebc:	andeq	r7, r0, lr, asr #13
   2cec0:	muleq	r0, lr, lr
   2cec4:			; <UNDEFINED> instruction: 0x000079b8
   2cec8:	strdeq	r7, [r0], -r8
   2cecc:	andeq	r6, r0, lr, ror lr
   2ced0:	muleq	r0, r8, r9
   2ced4:	strdeq	r7, [r0], -sl
   2ced8:	andeq	r6, r0, lr, asr lr
   2cedc:	andeq	r7, r0, r8, ror r9
   2cee0:	andeq	r7, r0, r4, ror #20
   2cee4:			; <UNDEFINED> instruction: 0x00006ebe
   2cee8:	ldrdeq	r7, [r0], -r8

0002ceec <flatcc_builder_table_add_offset@@Base>:
   2ceec:	push	{r4, r5, r6, r7, fp, lr}
   2cef0:	add	fp, sp, #16
   2cef4:	sub	sp, sp, #8
   2cef8:	mov	r4, r0
   2cefc:	ldr	r0, [r0, #32]
   2cf00:	ldrh	r0, [r0, #14]
   2cf04:	cmp	r0, #3
   2cf08:	bne	2d01c <flatcc_builder_table_add_offset@@Base+0x130>
   2cf0c:	movw	r0, #32765	; 0x7ffd
   2cf10:	mov	r5, r1
   2cf14:	cmp	r1, r0
   2cf18:	bcs	2d03c <flatcc_builder_table_add_offset@@Base+0x150>
   2cf1c:	ldr	r0, [r4, #4]
   2cf20:	add	r1, r0, r5, lsl #1
   2cf24:	ldrh	r1, [r1]
   2cf28:	cmp	r1, #0
   2cf2c:	bne	2d05c <flatcc_builder_table_add_offset@@Base+0x170>
   2cf30:	ldr	r2, [r4, #20]
   2cf34:	ldr	r1, [r4, #12]
   2cf38:	ldr	r3, [r4, #24]
   2cf3c:	add	r2, r2, #3
   2cf40:	eor	r1, r1, r5
   2cf44:	bic	r6, r2, #3
   2cf48:	movw	r2, #31153	; 0x79b1
   2cf4c:	movt	r2, #40503	; 0x9e37
   2cf50:	add	r7, r6, #4
   2cf54:	cmp	r7, r3
   2cf58:	str	r7, [r4, #20]
   2cf5c:	mul	r1, r1, r2
   2cf60:	eor	r1, r1, #4
   2cf64:	mul	r1, r1, r2
   2cf68:	str	r1, [r4, #12]
   2cf6c:	bls	2cfe0 <flatcc_builder_table_add_offset@@Base+0xf4>
   2cf70:	ldr	r1, [r4, #28]
   2cf74:	ldr	r0, [r4, #40]	; 0x28
   2cf78:	ldr	ip, [r4, #48]	; 0x30
   2cf7c:	mov	r2, #1
   2cf80:	mov	r3, #1
   2cf84:	str	r2, [sp]
   2cf88:	add	r2, r1, r7
   2cf8c:	add	r1, r4, #60	; 0x3c
   2cf90:	blx	ip
   2cf94:	mov	r1, r0
   2cf98:	mov	r0, #0
   2cf9c:	cmp	r1, #0
   2cfa0:	beq	2cfac <flatcc_builder_table_add_offset@@Base+0xc0>
   2cfa4:	sub	sp, fp, #16
   2cfa8:	pop	{r4, r5, r6, r7, fp, pc}
   2cfac:	ldr	r0, [r4, #28]
   2cfb0:	ldr	r2, [r4, #60]	; 0x3c
   2cfb4:	ldr	r3, [r4, #64]	; 0x40
   2cfb8:	ldr	r1, [r4, #32]
   2cfbc:	add	r2, r2, r0
   2cfc0:	sub	r0, r3, r0
   2cfc4:	str	r2, [r4, #16]
   2cfc8:	movw	r2, #65532	; 0xfffc
   2cfcc:	cmp	r0, r2
   2cfd0:	movcs	r0, r2
   2cfd4:	str	r0, [r4, #24]
   2cfd8:	str	r2, [r1, #4]
   2cfdc:	ldr	r0, [r4, #4]
   2cfe0:	uxth	r1, r5
   2cfe4:	add	r0, r0, r1, lsl #1
   2cfe8:	strh	r7, [r0]
   2cfec:	ldrh	r0, [r4, #8]
   2cff0:	cmp	r0, r1
   2cff4:	addls	r0, r5, #1
   2cff8:	strhls	r0, [r4, #8]
   2cffc:	ldr	r0, [r4]
   2d000:	add	r1, r0, #2
   2d004:	str	r1, [r4]
   2d008:	strh	r6, [r0]
   2d00c:	ldr	r0, [r4, #16]
   2d010:	add	r0, r0, r6
   2d014:	sub	sp, fp, #16
   2d018:	pop	{r4, r5, r6, r7, fp, pc}
   2d01c:	ldr	r0, [pc, #88]	; 2d07c <flatcc_builder_table_add_offset@@Base+0x190>
   2d020:	ldr	r1, [pc, #88]	; 2d080 <flatcc_builder_table_add_offset@@Base+0x194>
   2d024:	ldr	r3, [pc, #88]	; 2d084 <flatcc_builder_table_add_offset@@Base+0x198>
   2d028:	movw	r2, #1811	; 0x713
   2d02c:	add	r0, pc, r0
   2d030:	add	r1, pc, r1
   2d034:	add	r3, pc, r3
   2d038:	bl	12bbc <__assert_fail@plt>
   2d03c:	ldr	r0, [pc, #68]	; 2d088 <flatcc_builder_table_add_offset@@Base+0x19c>
   2d040:	ldr	r1, [pc, #68]	; 2d08c <flatcc_builder_table_add_offset@@Base+0x1a0>
   2d044:	ldr	r3, [pc, #68]	; 2d090 <flatcc_builder_table_add_offset@@Base+0x1a4>
   2d048:	movw	r2, #1812	; 0x714
   2d04c:	add	r0, pc, r0
   2d050:	add	r1, pc, r1
   2d054:	add	r3, pc, r3
   2d058:	bl	12bbc <__assert_fail@plt>
   2d05c:	ldr	r0, [pc, #48]	; 2d094 <flatcc_builder_table_add_offset@@Base+0x1a8>
   2d060:	ldr	r1, [pc, #48]	; 2d098 <flatcc_builder_table_add_offset@@Base+0x1ac>
   2d064:	ldr	r3, [pc, #48]	; 2d09c <flatcc_builder_table_add_offset@@Base+0x1b0>
   2d068:	movw	r2, #1819	; 0x71b
   2d06c:	add	r0, pc, r0
   2d070:	add	r1, pc, r1
   2d074:	add	r3, pc, r3
   2d078:	bl	12bbc <__assert_fail@plt>
   2d07c:	andeq	r7, r0, lr, lsl #10
   2d080:	ldrdeq	r6, [r0], -lr
   2d084:	strdeq	r7, [r0], -sl
   2d088:	andeq	r7, r0, r2, ror #22
   2d08c:			; <UNDEFINED> instruction: 0x00006cbe
   2d090:	ldrdeq	r7, [r0], -sl
   2d094:	andeq	r7, r0, pc, asr lr
   2d098:	muleq	r0, lr, ip
   2d09c:			; <UNDEFINED> instruction: 0x00007bba

0002d0a0 <flatcc_builder_table_add@@Base>:
   2d0a0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2d0a4:	add	fp, sp, #24
   2d0a8:	sub	sp, sp, #8
   2d0ac:	mov	r4, r0
   2d0b0:	ldr	r0, [r0, #32]
   2d0b4:	ldrh	r0, [r0, #14]
   2d0b8:	cmp	r0, #3
   2d0bc:	bne	2d1dc <flatcc_builder_table_add@@Base+0x13c>
   2d0c0:	movw	r0, #32765	; 0x7ffd
   2d0c4:	mov	r8, r1
   2d0c8:	cmp	r1, r0
   2d0cc:	bcs	2d1fc <flatcc_builder_table_add@@Base+0x15c>
   2d0d0:	ldrh	r0, [r4, #130]	; 0x82
   2d0d4:	cmp	r0, r3
   2d0d8:	strhcc	r3, [r4, #130]	; 0x82
   2d0dc:	ldr	r0, [r4, #4]
   2d0e0:	add	r1, r0, r8, lsl #1
   2d0e4:	ldrh	r1, [r1]
   2d0e8:	cmp	r1, #0
   2d0ec:	bne	2d21c <flatcc_builder_table_add@@Base+0x17c>
   2d0f0:	ldr	r1, [r4, #12]
   2d0f4:	movw	r7, #31153	; 0x79b1
   2d0f8:	ldr	r6, [r4, #20]
   2d0fc:	ldr	r5, [r4, #24]
   2d100:	movt	r7, #40503	; 0x9e37
   2d104:	eor	r1, r1, r8
   2d108:	mul	r1, r1, r7
   2d10c:	eor	r1, r1, r2
   2d110:	mul	r1, r1, r7
   2d114:	str	r1, [r4, #12]
   2d118:	add	r1, r3, r6
   2d11c:	rsb	r3, r3, #0
   2d120:	sub	r1, r1, #1
   2d124:	and	r6, r1, r3
   2d128:	add	r1, r6, r2
   2d12c:	cmp	r1, r5
   2d130:	str	r1, [r4, #20]
   2d134:	bcc	2d1ac <flatcc_builder_table_add@@Base+0x10c>
   2d138:	ldr	r2, [r4, #28]
   2d13c:	ldr	r0, [r4, #40]	; 0x28
   2d140:	ldr	r7, [r4, #48]	; 0x30
   2d144:	mov	r3, #1
   2d148:	str	r3, [sp]
   2d14c:	mov	r3, #1
   2d150:	add	r1, r1, r2
   2d154:	add	r2, r1, #1
   2d158:	add	r1, r4, #60	; 0x3c
   2d15c:	blx	r7
   2d160:	mov	r1, r0
   2d164:	mov	r0, #0
   2d168:	cmp	r1, #0
   2d16c:	beq	2d178 <flatcc_builder_table_add@@Base+0xd8>
   2d170:	sub	sp, fp, #24
   2d174:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2d178:	ldr	r0, [r4, #28]
   2d17c:	ldr	r2, [r4, #60]	; 0x3c
   2d180:	ldr	r3, [r4, #64]	; 0x40
   2d184:	ldr	r1, [r4, #32]
   2d188:	add	r2, r2, r0
   2d18c:	sub	r0, r3, r0
   2d190:	str	r2, [r4, #16]
   2d194:	movw	r2, #65532	; 0xfffc
   2d198:	cmp	r0, r2
   2d19c:	movcs	r0, r2
   2d1a0:	str	r0, [r4, #24]
   2d1a4:	str	r2, [r1, #4]
   2d1a8:	ldr	r0, [r4, #4]
   2d1ac:	uxth	r1, r8
   2d1b0:	add	r2, r6, #4
   2d1b4:	add	r0, r0, r1, lsl #1
   2d1b8:	strh	r2, [r0]
   2d1bc:	ldrh	r0, [r4, #8]
   2d1c0:	cmp	r0, r1
   2d1c4:	addls	r0, r8, #1
   2d1c8:	strhls	r0, [r4, #8]
   2d1cc:	ldr	r0, [r4, #16]
   2d1d0:	add	r0, r0, r6
   2d1d4:	sub	sp, fp, #24
   2d1d8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2d1dc:	ldr	r0, [pc, #88]	; 2d23c <flatcc_builder_table_add@@Base+0x19c>
   2d1e0:	ldr	r1, [pc, #88]	; 2d240 <flatcc_builder_table_add@@Base+0x1a0>
   2d1e4:	ldr	r3, [pc, #88]	; 2d244 <flatcc_builder_table_add@@Base+0x1a4>
   2d1e8:	movw	r2, #1773	; 0x6ed
   2d1ec:	add	r0, pc, r0
   2d1f0:	add	r1, pc, r1
   2d1f4:	add	r3, pc, r3
   2d1f8:	bl	12bbc <__assert_fail@plt>
   2d1fc:	ldr	r0, [pc, #68]	; 2d248 <flatcc_builder_table_add@@Base+0x1a8>
   2d200:	ldr	r1, [pc, #68]	; 2d24c <flatcc_builder_table_add@@Base+0x1ac>
   2d204:	ldr	r3, [pc, #68]	; 2d250 <flatcc_builder_table_add@@Base+0x1b0>
   2d208:	movw	r2, #1774	; 0x6ee
   2d20c:	add	r0, pc, r0
   2d210:	add	r1, pc, r1
   2d214:	add	r3, pc, r3
   2d218:	bl	12bbc <__assert_fail@plt>
   2d21c:	ldr	r0, [pc, #48]	; 2d254 <flatcc_builder_table_add@@Base+0x1b4>
   2d220:	ldr	r1, [pc, #48]	; 2d258 <flatcc_builder_table_add@@Base+0x1b8>
   2d224:	ldr	r3, [pc, #48]	; 2d25c <flatcc_builder_table_add@@Base+0x1bc>
   2d228:	movw	r2, #1784	; 0x6f8
   2d22c:	add	r0, pc, r0
   2d230:	add	r1, pc, r1
   2d234:	add	r3, pc, r3
   2d238:	bl	12bbc <__assert_fail@plt>
   2d23c:	andeq	r7, r0, lr, asr #6
   2d240:	andeq	r6, r0, lr, lsl fp
   2d244:	andeq	r7, r0, r0, ror r9
   2d248:	andeq	r7, r0, r2, lsr #19
   2d24c:	strdeq	r6, [r0], -lr
   2d250:	andeq	r7, r0, r0, asr r9
   2d254:	muleq	r0, pc, ip	; <UNPREDICTABLE>
   2d258:	ldrdeq	r6, [r0], -lr
   2d25c:	andeq	r7, r0, r0, lsr r9

0002d260 <flatcc_builder_table_add_union_vector@@Base>:
   2d260:	push	{r4, r5, r6, r7, fp, lr}
   2d264:	add	fp, sp, #16
   2d268:	mov	r6, r0
   2d26c:	ldr	r0, [r0, #32]
   2d270:	ldrh	r0, [r0, #14]
   2d274:	cmp	r0, #3
   2d278:	bne	2d2e4 <flatcc_builder_table_add_union_vector@@Base+0x84>
   2d27c:	mov	r5, r1
   2d280:	clz	r1, r3
   2d284:	cmp	r2, #0
   2d288:	mov	r0, r2
   2d28c:	mov	r4, r3
   2d290:	mov	r7, r2
   2d294:	movwne	r0, #1
   2d298:	lsr	r1, r1, #5
   2d29c:	teq	r1, r0
   2d2a0:	beq	2d304 <flatcc_builder_table_add_union_vector@@Base+0xa4>
   2d2a4:	cmp	r7, #0
   2d2a8:	beq	2d2dc <flatcc_builder_table_add_union_vector@@Base+0x7c>
   2d2ac:	sub	r1, r5, #1
   2d2b0:	mov	r0, r6
   2d2b4:	bl	2ceec <flatcc_builder_table_add_offset@@Base>
   2d2b8:	cmp	r0, #0
   2d2bc:	beq	2d324 <flatcc_builder_table_add_union_vector@@Base+0xc4>
   2d2c0:	str	r7, [r0]
   2d2c4:	mov	r0, r6
   2d2c8:	mov	r1, r5
   2d2cc:	bl	2ceec <flatcc_builder_table_add_offset@@Base>
   2d2d0:	cmp	r0, #0
   2d2d4:	beq	2d344 <flatcc_builder_table_add_union_vector@@Base+0xe4>
   2d2d8:	str	r4, [r0]
   2d2dc:	mov	r0, #0
   2d2e0:	pop	{r4, r5, r6, r7, fp, pc}
   2d2e4:	ldr	r0, [pc, #120]	; 2d364 <flatcc_builder_table_add_union_vector@@Base+0x104>
   2d2e8:	ldr	r1, [pc, #120]	; 2d368 <flatcc_builder_table_add_union_vector@@Base+0x108>
   2d2ec:	ldr	r3, [pc, #120]	; 2d36c <flatcc_builder_table_add_union_vector@@Base+0x10c>
   2d2f0:	mov	r2, #1536	; 0x600
   2d2f4:	add	r0, pc, r0
   2d2f8:	add	r1, pc, r1
   2d2fc:	add	r3, pc, r3
   2d300:	bl	12bbc <__assert_fail@plt>
   2d304:	ldr	r0, [pc, #100]	; 2d370 <flatcc_builder_table_add_union_vector@@Base+0x110>
   2d308:	ldr	r1, [pc, #100]	; 2d374 <flatcc_builder_table_add_union_vector@@Base+0x114>
   2d30c:	ldr	r3, [pc, #100]	; 2d378 <flatcc_builder_table_add_union_vector@@Base+0x118>
   2d310:	movw	r2, #1537	; 0x601
   2d314:	add	r0, pc, r0
   2d318:	add	r1, pc, r1
   2d31c:	add	r3, pc, r3
   2d320:	bl	12bbc <__assert_fail@plt>
   2d324:	ldr	r0, [pc, #80]	; 2d37c <flatcc_builder_table_add_union_vector@@Base+0x11c>
   2d328:	ldr	r1, [pc, #80]	; 2d380 <flatcc_builder_table_add_union_vector@@Base+0x120>
   2d32c:	ldr	r3, [pc, #80]	; 2d384 <flatcc_builder_table_add_union_vector@@Base+0x124>
   2d330:	movw	r2, #1540	; 0x604
   2d334:	add	r0, pc, r0
   2d338:	add	r1, pc, r1
   2d33c:	add	r3, pc, r3
   2d340:	bl	12bbc <__assert_fail@plt>
   2d344:	ldr	r0, [pc, #60]	; 2d388 <flatcc_builder_table_add_union_vector@@Base+0x128>
   2d348:	ldr	r1, [pc, #60]	; 2d38c <flatcc_builder_table_add_union_vector@@Base+0x12c>
   2d34c:	ldr	r3, [pc, #60]	; 2d390 <flatcc_builder_table_add_union_vector@@Base+0x130>
   2d350:	movw	r2, #1544	; 0x608
   2d354:	add	r0, pc, r0
   2d358:	add	r1, pc, r1
   2d35c:	add	r3, pc, r3
   2d360:	bl	12bbc <__assert_fail@plt>
   2d364:	andeq	r7, r0, r6, asr #4
   2d368:	andeq	r6, r0, r6, lsl sl
   2d36c:	andeq	r7, r0, r0, asr #11
   2d370:	andeq	r7, r0, fp, lsl #12
   2d374:	strdeq	r6, [r0], -r6	; <UNPREDICTABLE>
   2d378:	andeq	r7, r0, r0, lsr #11
   2d37c:	andeq	r7, r0, r2, ror r5
   2d380:	ldrdeq	r6, [r0], -r6	; <UNPREDICTABLE>
   2d384:	andeq	r7, r0, r0, lsl #11
   2d388:	andeq	r7, r0, r2, asr r5
   2d38c:			; <UNDEFINED> instruction: 0x000069b6
   2d390:	andeq	r7, r0, r0, ror #10

0002d394 <flatcc_builder_create_union_vector@@Base>:
   2d394:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d398:	add	fp, sp, #28
   2d39c:	sub	sp, sp, #12
   2d3a0:	mov	r6, #0
   2d3a4:	mov	r4, r1
   2d3a8:	mov	r8, r0
   2d3ac:	mov	sl, r3
   2d3b0:	mov	r9, r2
   2d3b4:	mov	r7, #4
   2d3b8:	str	r6, [r0]
   2d3bc:	str	r6, [r0, #4]
   2d3c0:	mov	r0, r1
   2d3c4:	mov	r1, #4
   2d3c8:	bl	2a6e8 <flatcc_builder_start_buffer@@Base+0xc0>
   2d3cc:	cmp	r0, #0
   2d3d0:	beq	2d3dc <flatcc_builder_create_union_vector@@Base+0x48>
   2d3d4:	sub	sp, fp, #28
   2d3d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d3dc:	ldr	r0, [r4, #32]
   2d3e0:	mov	r1, #5
   2d3e4:	str	r7, [r0, #16]
   2d3e8:	ldr	r0, [r4, #32]
   2d3ec:	str	r6, [r0, #20]
   2d3f0:	ldr	r0, [r4, #32]
   2d3f4:	strh	r1, [r0, #14]
   2d3f8:	ldr	r1, [r4, #28]
   2d3fc:	ldr	r2, [r4, #60]	; 0x3c
   2d400:	ldr	r3, [r4, #64]	; 0x40
   2d404:	add	r2, r2, r1
   2d408:	sub	r1, r3, r1
   2d40c:	str	r2, [r4, #16]
   2d410:	mvn	r2, #3
   2d414:	cmn	r1, #4
   2d418:	movcs	r1, r2
   2d41c:	str	r1, [r4, #24]
   2d420:	str	r2, [r0, #4]
   2d424:	ldr	r1, [r0, #20]
   2d428:	adds	r1, r1, sl
   2d42c:	cmpcc	r1, #1073741824	; 0x40000000
   2d430:	bcc	2d454 <flatcc_builder_create_union_vector@@Base+0xc0>
   2d434:	ldr	r0, [pc, #644]	; 2d6c0 <flatcc_builder_create_union_vector@@Base+0x32c>
   2d438:	ldr	r1, [pc, #644]	; 2d6c4 <flatcc_builder_create_union_vector@@Base+0x330>
   2d43c:	ldr	r3, [pc, #644]	; 2d6c8 <flatcc_builder_create_union_vector@@Base+0x334>
   2d440:	mov	r2, #892	; 0x37c
   2d444:	add	r0, pc, r0
   2d448:	add	r1, pc, r1
   2d44c:	add	r3, pc, r3
   2d450:	bl	12bbc <__assert_fail@plt>
   2d454:	str	r1, [r0, #20]
   2d458:	ldr	r7, [r4, #20]
   2d45c:	ldr	r0, [r4, #24]
   2d460:	add	r1, r7, sl, lsl #2
   2d464:	cmp	r1, r0
   2d468:	str	r1, [r4, #20]
   2d46c:	bcs	2d480 <flatcc_builder_create_union_vector@@Base+0xec>
   2d470:	ldr	r1, [r4, #16]
   2d474:	adds	r2, r1, r7
   2d478:	bne	2d4e8 <flatcc_builder_create_union_vector@@Base+0x154>
   2d47c:	b	2d3d4 <flatcc_builder_create_union_vector@@Base+0x40>
   2d480:	ldr	r2, [r4, #28]
   2d484:	ldr	r0, [r4, #40]	; 0x28
   2d488:	ldr	r6, [r4, #48]	; 0x30
   2d48c:	mov	r3, #1
   2d490:	str	r3, [sp]
   2d494:	mov	r3, #1
   2d498:	add	r1, r1, r2
   2d49c:	add	r2, r1, #1
   2d4a0:	add	r1, r4, #60	; 0x3c
   2d4a4:	blx	r6
   2d4a8:	cmp	r0, #0
   2d4ac:	bne	2d3d4 <flatcc_builder_create_union_vector@@Base+0x40>
   2d4b0:	ldr	r0, [r4, #28]
   2d4b4:	ldr	r1, [r4, #60]	; 0x3c
   2d4b8:	ldr	r3, [r4, #64]	; 0x40
   2d4bc:	ldr	r2, [r4, #32]
   2d4c0:	add	r1, r1, r0
   2d4c4:	sub	r0, r3, r0
   2d4c8:	mvn	r3, #3
   2d4cc:	cmn	r0, #4
   2d4d0:	str	r1, [r4, #16]
   2d4d4:	movcs	r0, r3
   2d4d8:	str	r0, [r4, #24]
   2d4dc:	str	r3, [r2, #4]
   2d4e0:	adds	r2, r1, r7
   2d4e4:	beq	2d3d4 <flatcc_builder_create_union_vector@@Base+0x40>
   2d4e8:	ldr	r7, [r4, #20]
   2d4ec:	add	r2, r7, sl
   2d4f0:	cmp	r2, r0
   2d4f4:	str	r2, [r4, #20]
   2d4f8:	bcc	2d55c <flatcc_builder_create_union_vector@@Base+0x1c8>
   2d4fc:	ldr	r1, [r4, #28]
   2d500:	ldr	r0, [r4, #40]	; 0x28
   2d504:	ldr	r6, [r4, #48]	; 0x30
   2d508:	mov	r3, #1
   2d50c:	str	r3, [sp]
   2d510:	mov	r3, #1
   2d514:	add	r1, r2, r1
   2d518:	add	r2, r1, #1
   2d51c:	add	r1, r4, #60	; 0x3c
   2d520:	blx	r6
   2d524:	cmp	r0, #0
   2d528:	bne	2d3d4 <flatcc_builder_create_union_vector@@Base+0x40>
   2d52c:	ldr	r0, [r4, #28]
   2d530:	ldr	r1, [r4, #60]	; 0x3c
   2d534:	ldr	r3, [r4, #64]	; 0x40
   2d538:	ldr	r2, [r4, #32]
   2d53c:	add	r1, r1, r0
   2d540:	sub	r0, r3, r0
   2d544:	mvn	r3, #3
   2d548:	cmn	r0, #4
   2d54c:	str	r1, [r4, #16]
   2d550:	movcs	r0, r3
   2d554:	str	r0, [r4, #24]
   2d558:	str	r3, [r2, #4]
   2d55c:	adds	r5, r1, r7
   2d560:	beq	2d3d4 <flatcc_builder_create_union_vector@@Base+0x40>
   2d564:	cmp	sl, #0
   2d568:	beq	2d5f0 <flatcc_builder_create_union_vector@@Base+0x25c>
   2d56c:	and	ip, sl, #1
   2d570:	mov	r0, #0
   2d574:	cmp	sl, #1
   2d578:	str	r5, [sp, #8]
   2d57c:	beq	2d5d4 <flatcc_builder_create_union_vector@@Base+0x240>
   2d580:	ldr	r0, [sp, #8]
   2d584:	sub	lr, sl, ip
   2d588:	add	r2, r1, #4
   2d58c:	add	r6, r9, #8
   2d590:	add	r7, r0, #1
   2d594:	mov	r0, #0
   2d598:	ldrb	r3, [r6, #-8]
   2d59c:	add	r5, r7, r0
   2d5a0:	strb	r3, [r5, #-1]
   2d5a4:	add	r3, r9, r0, lsl #3
   2d5a8:	ldr	r5, [r3, #4]
   2d5ac:	str	r5, [r2, #-4]
   2d5b0:	ldrb	r5, [r6]
   2d5b4:	add	r6, r6, #16
   2d5b8:	strb	r5, [r7, r0]
   2d5bc:	add	r0, r0, #2
   2d5c0:	ldr	r3, [r3, #12]
   2d5c4:	cmp	lr, r0
   2d5c8:	str	r3, [r2]
   2d5cc:	add	r2, r2, #8
   2d5d0:	bne	2d598 <flatcc_builder_create_union_vector@@Base+0x204>
   2d5d4:	ldr	r5, [sp, #8]
   2d5d8:	cmp	ip, #0
   2d5dc:	beq	2d5f0 <flatcc_builder_create_union_vector@@Base+0x25c>
   2d5e0:	ldrb	r2, [r9, r0, lsl #3]!
   2d5e4:	strb	r2, [r5, r0]
   2d5e8:	ldr	r2, [r9, #4]
   2d5ec:	str	r2, [r1, r0, lsl #2]
   2d5f0:	mov	r0, r4
   2d5f4:	mov	r2, sl
   2d5f8:	mov	r3, r5
   2d5fc:	bl	2ca84 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   2d600:	mov	r7, r0
   2d604:	mov	r6, #0
   2d608:	cmp	r0, #0
   2d60c:	beq	2d638 <flatcc_builder_create_union_vector@@Base+0x2a4>
   2d610:	mvn	r0, #0
   2d614:	mov	r1, #1
   2d618:	mov	r2, sl
   2d61c:	mov	r3, #1
   2d620:	str	r1, [sp]
   2d624:	str	r0, [sp, #4]
   2d628:	mov	r0, r4
   2d62c:	mov	r1, r5
   2d630:	bl	2c7f0 <flatcc_builder_create_vector@@Base>
   2d634:	b	2d63c <flatcc_builder_create_union_vector@@Base+0x2a8>
   2d638:	mov	r0, #0
   2d63c:	orr	r1, r6, r7
   2d640:	stm	r8, {r0, r1}
   2d644:	mov	r1, #0
   2d648:	ldr	r0, [r4, #16]
   2d64c:	ldr	r2, [r4, #20]
   2d650:	bl	12b5c <memset@plt>
   2d654:	ldr	r0, [r4, #32]
   2d658:	ldr	r1, [r4, #60]	; 0x3c
   2d65c:	ldr	r2, [r4, #64]	; 0x40
   2d660:	ldr	r3, [r0, #8]
   2d664:	str	r3, [r4, #20]
   2d668:	ldr	r3, [r0]
   2d66c:	str	r3, [r4, #28]
   2d670:	add	r1, r1, r3
   2d674:	ldr	r7, [r0, #4]
   2d678:	str	r1, [r4, #16]
   2d67c:	sub	r1, r2, r3
   2d680:	cmp	r1, r7
   2d684:	movhi	r1, r7
   2d688:	str	r1, [r4, #24]
   2d68c:	ldrh	r1, [r4, #130]	; 0x82
   2d690:	ldrh	r2, [r4, #128]	; 0x80
   2d694:	cmp	r2, r1
   2d698:	strhcc	r1, [r4, #128]	; 0x80
   2d69c:	ldrh	r1, [r0, #12]
   2d6a0:	sub	r0, r0, #36	; 0x24
   2d6a4:	str	r0, [r4, #32]
   2d6a8:	strh	r1, [r4, #130]	; 0x82
   2d6ac:	ldr	r0, [r4, #156]	; 0x9c
   2d6b0:	sub	r0, r0, #1
   2d6b4:	str	r0, [r4, #156]	; 0x9c
   2d6b8:	sub	sp, fp, #28
   2d6bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d6c0:	muleq	r0, r0, r9
   2d6c4:	andeq	r6, r0, r6, asr #17
   2d6c8:	andeq	r7, r0, r3, lsr #19

0002d6cc <flatcc_builder_create_union_vector_direct@@Base>:
   2d6cc:	push	{r4, r5, r6, r7, fp, lr}
   2d6d0:	add	fp, sp, #16
   2d6d4:	sub	sp, sp, #8
   2d6d8:	ldr	r7, [fp, #8]
   2d6dc:	mov	r5, r2
   2d6e0:	mov	r4, r0
   2d6e4:	mov	r0, #0
   2d6e8:	mov	r6, r1
   2d6ec:	str	r0, [r4]
   2d6f0:	str	r0, [r4, #4]
   2d6f4:	mov	r0, r1
   2d6f8:	mov	r1, r3
   2d6fc:	mov	r3, r5
   2d700:	mov	r2, r7
   2d704:	bl	2ca84 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   2d708:	cmp	r0, #0
   2d70c:	str	r0, [r4, #4]
   2d710:	beq	2d73c <flatcc_builder_create_union_vector_direct@@Base+0x70>
   2d714:	mvn	r0, #0
   2d718:	mov	r1, #1
   2d71c:	mov	r2, r7
   2d720:	mov	r3, #1
   2d724:	str	r1, [sp]
   2d728:	str	r0, [sp, #4]
   2d72c:	mov	r0, r6
   2d730:	mov	r1, r5
   2d734:	bl	2c7f0 <flatcc_builder_create_vector@@Base>
   2d738:	str	r0, [r4]
   2d73c:	sub	sp, fp, #16
   2d740:	pop	{r4, r5, r6, r7, fp, pc}

0002d744 <flatcc_builder_start_union_vector@@Base>:
   2d744:	push	{r4, sl, fp, lr}
   2d748:	add	fp, sp, #8
   2d74c:	mov	r1, #4
   2d750:	mov	r4, r0
   2d754:	bl	2a6e8 <flatcc_builder_start_buffer@@Base+0xc0>
   2d758:	mov	r1, r0
   2d75c:	mvn	r0, #0
   2d760:	cmp	r1, #0
   2d764:	popne	{r4, sl, fp, pc}
   2d768:	ldr	r0, [r4, #32]
   2d76c:	mov	r1, #8
   2d770:	mov	r2, #7
   2d774:	str	r1, [r0, #16]
   2d778:	mov	r0, #0
   2d77c:	ldr	r1, [r4, #32]
   2d780:	str	r0, [r1, #20]
   2d784:	ldr	r1, [r4, #32]
   2d788:	strh	r2, [r1, #14]
   2d78c:	ldr	r2, [r4, #28]
   2d790:	ldr	r3, [r4, #60]	; 0x3c
   2d794:	ldr	ip, [r4, #64]	; 0x40
   2d798:	add	r3, r3, r2
   2d79c:	sub	r2, ip, r2
   2d7a0:	str	r3, [r4, #16]
   2d7a4:	mvn	r3, #3
   2d7a8:	cmn	r2, #4
   2d7ac:	movcs	r2, r3
   2d7b0:	str	r2, [r4, #24]
   2d7b4:	str	r3, [r1, #4]
   2d7b8:	pop	{r4, sl, fp, pc}

0002d7bc <flatcc_builder_end_union_vector@@Base>:
   2d7bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d7c0:	add	fp, sp, #28
   2d7c4:	sub	sp, sp, #20
   2d7c8:	mov	r4, r0
   2d7cc:	mov	r0, #0
   2d7d0:	mov	r8, r1
   2d7d4:	str	r0, [r4]
   2d7d8:	str	r0, [r4, #4]
   2d7dc:	ldr	r0, [r1, #32]
   2d7e0:	ldrh	r1, [r0, #14]
   2d7e4:	cmp	r1, #7
   2d7e8:	bne	2d9ec <flatcc_builder_end_union_vector@@Base+0x230>
   2d7ec:	ldr	r9, [r0, #20]
   2d7f0:	ldr	r5, [r8, #20]
   2d7f4:	ldr	r2, [r8, #24]
   2d7f8:	add	r0, r9, r9, lsl #2
   2d7fc:	add	r1, r5, r0
   2d800:	cmp	r1, r2
   2d804:	str	r1, [r8, #20]
   2d808:	bcs	2d81c <flatcc_builder_end_union_vector@@Base+0x60>
   2d80c:	ldr	r0, [r8, #16]
   2d810:	adds	r1, r0, r5
   2d814:	bne	2d884 <flatcc_builder_end_union_vector@@Base+0xc8>
   2d818:	b	2d9e4 <flatcc_builder_end_union_vector@@Base+0x228>
   2d81c:	ldr	r2, [r8, #28]
   2d820:	ldr	r0, [r8, #40]	; 0x28
   2d824:	ldr	r7, [r8, #48]	; 0x30
   2d828:	mov	r3, #1
   2d82c:	str	r3, [sp]
   2d830:	mov	r3, #1
   2d834:	add	r1, r1, r2
   2d838:	add	r2, r1, #1
   2d83c:	add	r1, r8, #60	; 0x3c
   2d840:	blx	r7
   2d844:	cmp	r0, #0
   2d848:	bne	2d9e4 <flatcc_builder_end_union_vector@@Base+0x228>
   2d84c:	ldr	r1, [r8, #28]
   2d850:	ldr	r0, [r8, #60]	; 0x3c
   2d854:	ldr	r3, [r8, #64]	; 0x40
   2d858:	ldr	r2, [r8, #32]
   2d85c:	add	r0, r0, r1
   2d860:	sub	r1, r3, r1
   2d864:	mvn	r3, #3
   2d868:	cmn	r1, #4
   2d86c:	str	r0, [r8, #16]
   2d870:	movcs	r1, r3
   2d874:	str	r1, [r8, #24]
   2d878:	str	r3, [r2, #4]
   2d87c:	adds	r1, r0, r5
   2d880:	beq	2d9e4 <flatcc_builder_end_union_vector@@Base+0x228>
   2d884:	add	sl, r1, r9, lsl #2
   2d888:	cmp	r9, #0
   2d88c:	beq	2d91c <flatcc_builder_end_union_vector@@Base+0x160>
   2d890:	and	r2, r9, #1
   2d894:	cmp	r9, #1
   2d898:	str	r4, [sp, #12]
   2d89c:	str	r2, [sp, #16]
   2d8a0:	mov	r2, #0
   2d8a4:	beq	2d8fc <flatcc_builder_end_union_vector@@Base+0x140>
   2d8a8:	ldr	r2, [sp, #16]
   2d8ac:	add	r5, r5, #4
   2d8b0:	add	r6, r0, #8
   2d8b4:	sub	lr, r9, r2
   2d8b8:	mov	r2, #0
   2d8bc:	ldrb	r7, [r6, #-8]
   2d8c0:	mov	r4, sl
   2d8c4:	add	r3, r0, r2, lsl #3
   2d8c8:	strb	r7, [r4, r2]!
   2d8cc:	add	r7, r0, r5
   2d8d0:	add	r2, r2, #2
   2d8d4:	ldr	ip, [r3, #4]
   2d8d8:	cmp	lr, r2
   2d8dc:	str	ip, [r7, #-4]
   2d8e0:	ldrb	r7, [r6]
   2d8e4:	add	r6, r6, #16
   2d8e8:	strb	r7, [r4, #1]
   2d8ec:	ldr	r3, [r3, #12]
   2d8f0:	str	r3, [r0, r5]
   2d8f4:	add	r5, r5, #8
   2d8f8:	bne	2d8bc <flatcc_builder_end_union_vector@@Base+0x100>
   2d8fc:	ldr	r3, [sp, #16]
   2d900:	ldr	r4, [sp, #12]
   2d904:	cmp	r3, #0
   2d908:	beq	2d91c <flatcc_builder_end_union_vector@@Base+0x160>
   2d90c:	ldrb	r3, [r0, r2, lsl #3]!
   2d910:	strb	r3, [sl, r2]
   2d914:	ldr	r0, [r0, #4]
   2d918:	str	r0, [r1, r2, lsl #2]
   2d91c:	mov	r0, r8
   2d920:	mov	r2, r9
   2d924:	mov	r3, sl
   2d928:	bl	2ca84 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   2d92c:	mov	r5, r0
   2d930:	mov	r6, #0
   2d934:	cmp	r0, #0
   2d938:	beq	2d964 <flatcc_builder_end_union_vector@@Base+0x1a8>
   2d93c:	mvn	r0, #0
   2d940:	mov	r1, #1
   2d944:	mov	r2, r9
   2d948:	mov	r3, #1
   2d94c:	str	r1, [sp]
   2d950:	str	r0, [sp, #4]
   2d954:	mov	r0, r8
   2d958:	mov	r1, sl
   2d95c:	bl	2c7f0 <flatcc_builder_create_vector@@Base>
   2d960:	b	2d968 <flatcc_builder_end_union_vector@@Base+0x1ac>
   2d964:	mov	r0, #0
   2d968:	orr	r1, r6, r5
   2d96c:	stm	r4, {r0, r1}
   2d970:	mov	r1, #0
   2d974:	ldr	r0, [r8, #16]
   2d978:	ldr	r2, [r8, #20]
   2d97c:	bl	12b5c <memset@plt>
   2d980:	ldr	r0, [r8, #32]
   2d984:	ldr	r1, [r8, #60]	; 0x3c
   2d988:	ldr	r2, [r8, #64]	; 0x40
   2d98c:	ldr	r3, [r0, #8]
   2d990:	str	r3, [r8, #20]
   2d994:	ldr	r3, [r0]
   2d998:	str	r3, [r8, #28]
   2d99c:	add	r1, r1, r3
   2d9a0:	ldr	r7, [r0, #4]
   2d9a4:	str	r1, [r8, #16]
   2d9a8:	sub	r1, r2, r3
   2d9ac:	cmp	r1, r7
   2d9b0:	movhi	r1, r7
   2d9b4:	str	r1, [r8, #24]
   2d9b8:	ldrh	r1, [r8, #130]	; 0x82
   2d9bc:	ldrh	r2, [r8, #128]	; 0x80
   2d9c0:	cmp	r2, r1
   2d9c4:	strhcc	r1, [r8, #128]	; 0x80
   2d9c8:	ldrh	r1, [r0, #12]
   2d9cc:	sub	r0, r0, #36	; 0x24
   2d9d0:	str	r0, [r8, #32]
   2d9d4:	strh	r1, [r8, #130]	; 0x82
   2d9d8:	ldr	r0, [r8, #156]	; 0x9c
   2d9dc:	sub	r0, r0, #1
   2d9e0:	str	r0, [r8, #156]	; 0x9c
   2d9e4:	sub	sp, fp, #28
   2d9e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d9ec:	ldr	r0, [pc, #24]	; 2da0c <flatcc_builder_end_union_vector@@Base+0x250>
   2d9f0:	ldr	r1, [pc, #24]	; 2da10 <flatcc_builder_end_union_vector@@Base+0x254>
   2d9f4:	ldr	r3, [pc, #24]	; 2da14 <flatcc_builder_end_union_vector@@Base+0x258>
   2d9f8:	movw	r2, #1617	; 0x651
   2d9fc:	add	r0, pc, r0
   2da00:	add	r1, pc, r1
   2da04:	add	r3, pc, r3
   2da08:	bl	12bbc <__assert_fail@plt>
   2da0c:	andeq	r6, r0, fp, asr #30
   2da10:	andeq	r6, r0, lr, lsl #6
   2da14:	andeq	r6, r0, r5, ror pc

0002da18 <flatcc_builder_union_vector_count@@Base>:
   2da18:	ldr	r0, [r0, #32]
   2da1c:	ldr	r0, [r0, #20]
   2da20:	bx	lr

0002da24 <flatcc_builder_union_vector_edit@@Base>:
   2da24:	ldr	r0, [r0, #16]
   2da28:	bx	lr

0002da2c <flatcc_builder_extend_union_vector@@Base>:
   2da2c:	push	{r4, r5, fp, lr}
   2da30:	add	fp, sp, #8
   2da34:	sub	sp, sp, #8
   2da38:	mov	r4, r0
   2da3c:	ldr	r0, [r0, #32]
   2da40:	ldr	r2, [r0, #20]
   2da44:	adds	r2, r2, r1
   2da48:	cmpcc	r2, #536870912	; 0x20000000
   2da4c:	bcc	2da70 <flatcc_builder_extend_union_vector@@Base+0x44>
   2da50:	ldr	r0, [pc, #184]	; 2db10 <flatcc_builder_extend_union_vector@@Base+0xe4>
   2da54:	ldr	r1, [pc, #184]	; 2db14 <flatcc_builder_extend_union_vector@@Base+0xe8>
   2da58:	ldr	r3, [pc, #184]	; 2db18 <flatcc_builder_extend_union_vector@@Base+0xec>
   2da5c:	mov	r2, #892	; 0x37c
   2da60:	add	r0, pc, r0
   2da64:	add	r1, pc, r1
   2da68:	add	r3, pc, r3
   2da6c:	bl	12bbc <__assert_fail@plt>
   2da70:	str	r2, [r0, #20]
   2da74:	ldr	r5, [r4, #20]
   2da78:	ldr	r0, [r4, #24]
   2da7c:	add	r1, r5, r1, lsl #3
   2da80:	cmp	r1, r0
   2da84:	str	r1, [r4, #20]
   2da88:	bcs	2da94 <flatcc_builder_extend_union_vector@@Base+0x68>
   2da8c:	ldr	r0, [r4, #16]
   2da90:	b	2db04 <flatcc_builder_extend_union_vector@@Base+0xd8>
   2da94:	ldr	r2, [r4, #28]
   2da98:	ldr	r0, [r4, #40]	; 0x28
   2da9c:	ldr	ip, [r4, #48]	; 0x30
   2daa0:	mov	r3, #1
   2daa4:	str	r3, [sp]
   2daa8:	mov	r3, #1
   2daac:	add	r1, r1, r2
   2dab0:	add	r2, r1, #1
   2dab4:	add	r1, r4, #60	; 0x3c
   2dab8:	blx	ip
   2dabc:	mov	r1, r0
   2dac0:	mov	r0, #0
   2dac4:	cmp	r1, #0
   2dac8:	beq	2dad4 <flatcc_builder_extend_union_vector@@Base+0xa8>
   2dacc:	sub	sp, fp, #8
   2dad0:	pop	{r4, r5, fp, pc}
   2dad4:	ldr	r1, [r4, #28]
   2dad8:	ldr	r0, [r4, #60]	; 0x3c
   2dadc:	ldr	r3, [r4, #64]	; 0x40
   2dae0:	ldr	r2, [r4, #32]
   2dae4:	add	r0, r0, r1
   2dae8:	sub	r1, r3, r1
   2daec:	mvn	r3, #3
   2daf0:	cmn	r1, #4
   2daf4:	str	r0, [r4, #16]
   2daf8:	movcs	r1, r3
   2dafc:	str	r1, [r4, #24]
   2db00:	str	r3, [r2, #4]
   2db04:	add	r0, r0, r5
   2db08:	sub	sp, fp, #8
   2db0c:	pop	{r4, r5, fp, pc}
   2db10:	andeq	r7, r0, r4, ror r3
   2db14:	andeq	r6, r0, sl, lsr #5
   2db18:	andeq	r7, r0, r7, lsl #7

0002db1c <flatcc_builder_truncate_union_vector@@Base>:
   2db1c:	push	{fp, lr}
   2db20:	mov	fp, sp
   2db24:	ldr	r2, [r0, #32]
   2db28:	ldrh	r3, [r2, #14]
   2db2c:	cmp	r3, #7
   2db30:	bne	2db78 <flatcc_builder_truncate_union_vector@@Base+0x5c>
   2db34:	ldr	r3, [r2, #20]
   2db38:	cmp	r3, r1
   2db3c:	bcc	2db98 <flatcc_builder_truncate_union_vector@@Base+0x7c>
   2db40:	sub	r3, r3, r1
   2db44:	str	r3, [r2, #20]
   2db48:	ldr	r2, [r0, #32]
   2db4c:	ldr	r3, [r0, #20]
   2db50:	ldr	ip, [r0, #16]
   2db54:	ldr	r2, [r2, #16]
   2db58:	mls	r3, r2, r1, r3
   2db5c:	mul	r2, r2, r1
   2db60:	mov	r1, #0
   2db64:	str	r3, [r0, #20]
   2db68:	add	r0, ip, r3
   2db6c:	bl	12b5c <memset@plt>
   2db70:	mov	r0, #0
   2db74:	pop	{fp, pc}
   2db78:	ldr	r0, [pc, #56]	; 2dbb8 <flatcc_builder_truncate_union_vector@@Base+0x9c>
   2db7c:	ldr	r1, [pc, #56]	; 2dbbc <flatcc_builder_truncate_union_vector@@Base+0xa0>
   2db80:	ldr	r3, [pc, #56]	; 2dbc0 <flatcc_builder_truncate_union_vector@@Base+0xa4>
   2db84:	movw	r2, #1665	; 0x681
   2db88:	add	r0, pc, r0
   2db8c:	add	r1, pc, r1
   2db90:	add	r3, pc, r3
   2db94:	bl	12bbc <__assert_fail@plt>
   2db98:	ldr	r0, [pc, #36]	; 2dbc4 <flatcc_builder_truncate_union_vector@@Base+0xa8>
   2db9c:	ldr	r1, [pc, #36]	; 2dbc8 <flatcc_builder_truncate_union_vector@@Base+0xac>
   2dba0:	ldr	r3, [pc, #36]	; 2dbcc <flatcc_builder_truncate_union_vector@@Base+0xb0>
   2dba4:	movw	r2, #1666	; 0x682
   2dba8:	add	r0, pc, r0
   2dbac:	add	r1, pc, r1
   2dbb0:	add	r3, pc, r3
   2dbb4:	bl	12bbc <__assert_fail@plt>
   2dbb8:			; <UNDEFINED> instruction: 0x00006dbf
   2dbbc:	andeq	r6, r0, r2, lsl #3
   2dbc0:	andeq	r6, r0, ip, lsr lr
   2dbc4:	andeq	r6, r0, r3, lsl #16
   2dbc8:	andeq	r6, r0, r2, ror #2
   2dbcc:	andeq	r6, r0, ip, lsl lr

0002dbd0 <flatcc_builder_union_vector_push@@Base>:
   2dbd0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2dbd4:	add	fp, sp, #24
   2dbd8:	sub	sp, sp, #8
   2dbdc:	mov	r7, r0
   2dbe0:	ldr	r0, [r0, #32]
   2dbe4:	mov	r9, r1
   2dbe8:	ldrh	r1, [r0, #14]
   2dbec:	cmp	r1, #7
   2dbf0:	bne	2dcac <flatcc_builder_union_vector_push@@Base+0xdc>
   2dbf4:	ldr	r1, [r0, #20]
   2dbf8:	mov	r6, #0
   2dbfc:	cmn	r1, #-536870911	; 0xe0000001
   2dc00:	beq	2dca0 <flatcc_builder_union_vector_push@@Base+0xd0>
   2dc04:	add	r1, r1, #1
   2dc08:	mov	r8, r2
   2dc0c:	str	r1, [r0, #20]
   2dc10:	ldr	r4, [r7, #20]
   2dc14:	ldr	r0, [r7, #24]
   2dc18:	add	r1, r4, #8
   2dc1c:	cmp	r1, r0
   2dc20:	str	r1, [r7, #20]
   2dc24:	bcs	2dc30 <flatcc_builder_union_vector_push@@Base+0x60>
   2dc28:	ldr	r0, [r7, #16]
   2dc2c:	b	2dc90 <flatcc_builder_union_vector_push@@Base+0xc0>
   2dc30:	ldr	r1, [r7, #28]
   2dc34:	ldr	r0, [r7, #40]	; 0x28
   2dc38:	ldr	r5, [r7, #48]	; 0x30
   2dc3c:	mov	r2, #1
   2dc40:	mov	r3, #1
   2dc44:	str	r2, [sp]
   2dc48:	add	r1, r4, r1
   2dc4c:	add	r2, r1, #9
   2dc50:	add	r1, r7, #60	; 0x3c
   2dc54:	blx	r5
   2dc58:	cmp	r0, #0
   2dc5c:	bne	2dca0 <flatcc_builder_union_vector_push@@Base+0xd0>
   2dc60:	ldr	r1, [r7, #28]
   2dc64:	ldr	r0, [r7, #60]	; 0x3c
   2dc68:	ldr	r3, [r7, #64]	; 0x40
   2dc6c:	ldr	r2, [r7, #32]
   2dc70:	add	r0, r0, r1
   2dc74:	sub	r1, r3, r1
   2dc78:	mvn	r3, #3
   2dc7c:	cmn	r1, #4
   2dc80:	str	r0, [r7, #16]
   2dc84:	movcs	r1, r3
   2dc88:	str	r1, [r7, #24]
   2dc8c:	str	r3, [r2, #4]
   2dc90:	adds	r0, r0, r4
   2dc94:	movne	r6, r0
   2dc98:	strne	r9, [r0]
   2dc9c:	strne	r8, [r0, #4]
   2dca0:	mov	r0, r6
   2dca4:	sub	sp, fp, #24
   2dca8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2dcac:	ldr	r0, [pc, #24]	; 2dccc <flatcc_builder_union_vector_push@@Base+0xfc>
   2dcb0:	ldr	r1, [pc, #24]	; 2dcd0 <flatcc_builder_union_vector_push@@Base+0x100>
   2dcb4:	ldr	r3, [pc, #24]	; 2dcd4 <flatcc_builder_union_vector_push@@Base+0x104>
   2dcb8:	movw	r2, #1677	; 0x68d
   2dcbc:	add	r0, pc, r0
   2dcc0:	add	r1, pc, r1
   2dcc4:	add	r3, pc, r3
   2dcc8:	bl	12bbc <__assert_fail@plt>
   2dccc:	andeq	r6, r0, fp, lsl #25
   2dcd0:	andeq	r6, r0, lr, asr #32
   2dcd4:	andeq	r6, r0, sp, asr #26

0002dcd8 <flatcc_builder_append_union_vector@@Base>:
   2dcd8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2dcdc:	add	fp, sp, #24
   2dce0:	sub	sp, sp, #8
   2dce4:	mov	r6, r0
   2dce8:	ldr	r0, [r0, #32]
   2dcec:	mov	r8, r1
   2dcf0:	ldrh	r1, [r0, #14]
   2dcf4:	cmp	r1, #7
   2dcf8:	bne	2dde8 <flatcc_builder_append_union_vector@@Base+0x110>
   2dcfc:	ldr	r1, [r0, #20]
   2dd00:	mov	r5, r2
   2dd04:	adds	r1, r1, r2
   2dd08:	cmpcc	r1, #536870912	; 0x20000000
   2dd0c:	bcc	2dd30 <flatcc_builder_append_union_vector@@Base+0x58>
   2dd10:	ldr	r0, [pc, #252]	; 2de14 <flatcc_builder_append_union_vector@@Base+0x13c>
   2dd14:	ldr	r1, [pc, #252]	; 2de18 <flatcc_builder_append_union_vector@@Base+0x140>
   2dd18:	ldr	r3, [pc, #252]	; 2de1c <flatcc_builder_append_union_vector@@Base+0x144>
   2dd1c:	mov	r2, #892	; 0x37c
   2dd20:	add	r0, pc, r0
   2dd24:	add	r1, pc, r1
   2dd28:	add	r3, pc, r3
   2dd2c:	bl	12bbc <__assert_fail@plt>
   2dd30:	str	r1, [r0, #20]
   2dd34:	ldr	r4, [r6, #20]
   2dd38:	ldr	r0, [r6, #24]
   2dd3c:	add	r1, r4, r5, lsl #3
   2dd40:	cmp	r1, r0
   2dd44:	str	r1, [r6, #20]
   2dd48:	bcs	2dd6c <flatcc_builder_append_union_vector@@Base+0x94>
   2dd4c:	ldr	r0, [r6, #16]
   2dd50:	adds	r7, r0, r4
   2dd54:	beq	2ddd8 <flatcc_builder_append_union_vector@@Base+0x100>
   2dd58:	lsl	r2, r5, #3
   2dd5c:	mov	r0, r7
   2dd60:	mov	r1, r8
   2dd64:	bl	12aa8 <memcpy@plt>
   2dd68:	b	2dddc <flatcc_builder_append_union_vector@@Base+0x104>
   2dd6c:	ldr	r2, [r6, #28]
   2dd70:	ldr	r0, [r6, #40]	; 0x28
   2dd74:	ldr	r7, [r6, #48]	; 0x30
   2dd78:	mov	r3, #1
   2dd7c:	str	r3, [sp]
   2dd80:	mov	r3, #1
   2dd84:	add	r1, r1, r2
   2dd88:	add	r2, r1, #1
   2dd8c:	add	r1, r6, #60	; 0x3c
   2dd90:	blx	r7
   2dd94:	mov	r7, #0
   2dd98:	cmp	r0, #0
   2dd9c:	bne	2dddc <flatcc_builder_append_union_vector@@Base+0x104>
   2dda0:	ldr	r1, [r6, #28]
   2dda4:	ldr	r0, [r6, #60]	; 0x3c
   2dda8:	ldr	r3, [r6, #64]	; 0x40
   2ddac:	ldr	r2, [r6, #32]
   2ddb0:	add	r0, r0, r1
   2ddb4:	sub	r1, r3, r1
   2ddb8:	mvn	r3, #3
   2ddbc:	cmn	r1, #4
   2ddc0:	str	r0, [r6, #16]
   2ddc4:	movcs	r1, r3
   2ddc8:	str	r1, [r6, #24]
   2ddcc:	str	r3, [r2, #4]
   2ddd0:	adds	r7, r0, r4
   2ddd4:	bne	2dd58 <flatcc_builder_append_union_vector@@Base+0x80>
   2ddd8:	mov	r7, #0
   2dddc:	mov	r0, r7
   2dde0:	sub	sp, fp, #24
   2dde4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2dde8:	ldr	r0, [pc, #24]	; 2de08 <flatcc_builder_append_union_vector@@Base+0x130>
   2ddec:	ldr	r1, [pc, #24]	; 2de0c <flatcc_builder_append_union_vector@@Base+0x134>
   2ddf0:	ldr	r3, [pc, #24]	; 2de10 <flatcc_builder_append_union_vector@@Base+0x138>
   2ddf4:	movw	r2, #1692	; 0x69c
   2ddf8:	add	r0, pc, r0
   2ddfc:	add	r1, pc, r1
   2de00:	add	r3, pc, r3
   2de04:	bl	12bbc <__assert_fail@plt>
   2de08:	andeq	r6, r0, pc, asr #22
   2de0c:	andeq	r5, r0, r2, lsl pc
   2de10:	andeq	r6, r0, lr, ror ip
   2de14:	strheq	r7, [r0], -r4
   2de18:	andeq	r5, r0, sl, ror #31
   2de1c:	andeq	r7, r0, r7, asr #1

0002de20 <flatcc_builder_create_string@@Base>:
   2de20:	push	{r4, r5, r6, sl, fp, lr}
   2de24:	add	fp, sp, #16
   2de28:	sub	sp, sp, #80	; 0x50
   2de2c:	str	r2, [fp, #-20]	; 0xffffffec
   2de30:	mvn	r5, r2
   2de34:	mov	r6, r0
   2de38:	sub	r3, fp, #20
   2de3c:	cmp	r2, #0
   2de40:	add	lr, sp, #4
   2de44:	ldr	ip, [r0, #136]	; 0x88
   2de48:	mov	r0, #4
   2de4c:	str	r0, [sp, #16]
   2de50:	str	r3, [sp, #12]
   2de54:	str	r0, [sp, #4]
   2de58:	mov	r3, #1
   2de5c:	addne	r0, r2, #4
   2de60:	str	r3, [sp, #8]
   2de64:	strne	r2, [sp, #24]
   2de68:	strne	r1, [sp, #20]
   2de6c:	movne	r3, #2
   2de70:	strne	r3, [sp, #8]
   2de74:	strne	r0, [sp, #4]
   2de78:	add	r5, ip, r5
   2de7c:	and	r5, r5, #3
   2de80:	add	r5, r5, #1
   2de84:	add	r1, r0, r5
   2de88:	add	r0, lr, r3, lsl #3
   2de8c:	str	r1, [sp, #4]
   2de90:	cmp	r1, #0
   2de94:	ldr	r2, [pc, #132]	; 2df20 <flatcc_builder_create_string@@Base+0x100>
   2de98:	ldr	r2, [pc, r2]
   2de9c:	str	r2, [r0, #8]
   2dea0:	add	r2, r3, #1
   2dea4:	str	r5, [r0, #12]
   2dea8:	str	r2, [sp, #8]
   2deac:	ble	2df00 <flatcc_builder_create_string@@Base+0xe0>
   2deb0:	ldr	r0, [r6, #36]	; 0x24
   2deb4:	ldr	r4, [r6, #44]	; 0x2c
   2deb8:	sub	r5, ip, r1
   2debc:	str	r1, [sp]
   2dec0:	add	r1, lr, #8
   2dec4:	mov	r3, r5
   2dec8:	blx	r4
   2decc:	cmp	r0, #0
   2ded0:	streq	r5, [r6, #136]	; 0x88
   2ded4:	moveq	r0, r5
   2ded8:	subeq	sp, fp, #16
   2dedc:	popeq	{r4, r5, r6, sl, fp, pc}
   2dee0:	ldr	r0, [pc, #72]	; 2df30 <flatcc_builder_create_string@@Base+0x110>
   2dee4:	ldr	r1, [pc, #72]	; 2df34 <flatcc_builder_create_string@@Base+0x114>
   2dee8:	ldr	r3, [pc, #72]	; 2df38 <flatcc_builder_create_string@@Base+0x118>
   2deec:	movw	r2, #651	; 0x28b
   2def0:	add	r0, pc, r0
   2def4:	add	r1, pc, r1
   2def8:	add	r3, pc, r3
   2defc:	bl	12bbc <__assert_fail@plt>
   2df00:	ldr	r0, [pc, #28]	; 2df24 <flatcc_builder_create_string@@Base+0x104>
   2df04:	ldr	r1, [pc, #28]	; 2df28 <flatcc_builder_create_string@@Base+0x108>
   2df08:	ldr	r3, [pc, #28]	; 2df2c <flatcc_builder_create_string@@Base+0x10c>
   2df0c:	movw	r2, #647	; 0x287
   2df10:	add	r0, pc, r0
   2df14:	add	r1, pc, r1
   2df18:	add	r3, pc, r3
   2df1c:	bl	12bbc <__assert_fail@plt>
   2df20:	ldrdeq	r8, [r1], -r4
   2df24:			; <UNDEFINED> instruction: 0x00006fbb
   2df28:	strdeq	r5, [r0], -sl
   2df2c:	andeq	r6, r0, r2, ror lr
   2df30:	ldrdeq	r6, [r0], -fp
   2df34:	andeq	r5, r0, sl, lsl lr
   2df38:	muleq	r0, r2, lr

0002df3c <flatcc_builder_create_string_str@@Base>:
   2df3c:	push	{r4, r5, fp, lr}
   2df40:	add	fp, sp, #8
   2df44:	mov	r5, r0
   2df48:	mov	r0, r1
   2df4c:	mov	r4, r1
   2df50:	bl	12b38 <strlen@plt>
   2df54:	mov	r2, r0
   2df58:	mov	r0, r5
   2df5c:	mov	r1, r4
   2df60:	pop	{r4, r5, fp, lr}
   2df64:	b	2de20 <flatcc_builder_create_string@@Base>

0002df68 <flatcc_builder_create_string_strn@@Base>:
   2df68:	push	{r4, r5, r6, sl, fp, lr}
   2df6c:	add	fp, sp, #16
   2df70:	mov	r6, r0
   2df74:	mov	r5, r1
   2df78:	mov	r0, r1
   2df7c:	mov	r1, #0
   2df80:	mov	r4, r2
   2df84:	bl	12b74 <memchr@plt>
   2df88:	cmp	r0, #0
   2df8c:	mov	r1, r5
   2df90:	subne	r4, r0, r5
   2df94:	mov	r0, r6
   2df98:	mov	r2, r4
   2df9c:	pop	{r4, r5, r6, sl, fp, lr}
   2dfa0:	b	2de20 <flatcc_builder_create_string@@Base>

0002dfa4 <flatcc_builder_end_string@@Base>:
   2dfa4:	push	{r4, r5, fp, lr}
   2dfa8:	add	fp, sp, #8
   2dfac:	mov	r4, r0
   2dfb0:	ldr	r0, [r0, #32]
   2dfb4:	ldrh	r1, [r0, #14]
   2dfb8:	cmp	r1, #6
   2dfbc:	bne	2e064 <flatcc_builder_end_string@@Base+0xc0>
   2dfc0:	ldr	r2, [r0, #20]
   2dfc4:	ldr	r0, [r4, #20]
   2dfc8:	cmp	r2, r0
   2dfcc:	bne	2e084 <flatcc_builder_end_string@@Base+0xe0>
   2dfd0:	ldr	r1, [r4, #16]
   2dfd4:	mov	r0, r4
   2dfd8:	bl	2de20 <flatcc_builder_create_string@@Base>
   2dfdc:	mov	r5, r0
   2dfe0:	cmp	r0, #0
   2dfe4:	beq	2e05c <flatcc_builder_end_string@@Base+0xb8>
   2dfe8:	ldr	r0, [r4, #16]
   2dfec:	ldr	r2, [r4, #20]
   2dff0:	mov	r1, #0
   2dff4:	bl	12b5c <memset@plt>
   2dff8:	ldr	r0, [r4, #32]
   2dffc:	ldr	r1, [r4, #60]	; 0x3c
   2e000:	ldr	ip, [r4, #64]	; 0x40
   2e004:	ldr	r3, [r0, #8]
   2e008:	str	r3, [r4, #20]
   2e00c:	ldr	r3, [r0]
   2e010:	str	r3, [r4, #28]
   2e014:	add	r1, r1, r3
   2e018:	ldr	r2, [r0, #4]
   2e01c:	str	r1, [r4, #16]
   2e020:	sub	r1, ip, r3
   2e024:	cmp	r1, r2
   2e028:	movhi	r1, r2
   2e02c:	str	r1, [r4, #24]
   2e030:	ldrh	r1, [r4, #130]	; 0x82
   2e034:	ldrh	r2, [r4, #128]	; 0x80
   2e038:	cmp	r2, r1
   2e03c:	strhcc	r1, [r4, #128]	; 0x80
   2e040:	ldrh	r1, [r0, #12]
   2e044:	sub	r0, r0, #36	; 0x24
   2e048:	str	r0, [r4, #32]
   2e04c:	strh	r1, [r4, #130]	; 0x82
   2e050:	ldr	r0, [r4, #156]	; 0x9c
   2e054:	sub	r0, r0, #1
   2e058:	str	r0, [r4, #156]	; 0x9c
   2e05c:	mov	r0, r5
   2e060:	pop	{r4, r5, fp, pc}
   2e064:	ldr	r0, [pc, #56]	; 2e0a4 <flatcc_builder_end_string@@Base+0x100>
   2e068:	ldr	r1, [pc, #56]	; 2e0a8 <flatcc_builder_end_string@@Base+0x104>
   2e06c:	ldr	r3, [pc, #56]	; 2e0ac <flatcc_builder_end_string@@Base+0x108>
   2e070:	movw	r2, #1732	; 0x6c4
   2e074:	add	r0, pc, r0
   2e078:	add	r1, pc, r1
   2e07c:	add	r3, pc, r3
   2e080:	bl	12bbc <__assert_fail@plt>
   2e084:	ldr	r0, [pc, #36]	; 2e0b0 <flatcc_builder_end_string@@Base+0x10c>
   2e088:	ldr	r1, [pc, #36]	; 2e0b4 <flatcc_builder_end_string@@Base+0x110>
   2e08c:	ldr	r3, [pc, #36]	; 2e0b8 <flatcc_builder_end_string@@Base+0x114>
   2e090:	movw	r2, #1733	; 0x6c5
   2e094:	add	r0, pc, r0
   2e098:	add	r1, pc, r1
   2e09c:	add	r3, pc, r3
   2e0a0:	bl	12bbc <__assert_fail@plt>
   2e0a4:	ldrdeq	r6, [r0], -r6	; <UNPREDICTABLE>
   2e0a8:	muleq	r0, r6, ip
   2e0ac:	andeq	r6, r0, r1, lsl #21
   2e0b0:	andeq	r6, r0, ip, lsr #21
   2e0b4:	andeq	r5, r0, r6, ror ip
   2e0b8:	andeq	r6, r0, r1, ror #20

0002e0bc <flatcc_builder_string_edit@@Base>:
   2e0bc:	ldr	r0, [r0, #16]
   2e0c0:	bx	lr

0002e0c4 <flatcc_builder_string_len@@Base>:
   2e0c4:	ldr	r0, [r0, #32]
   2e0c8:	ldr	r0, [r0, #20]
   2e0cc:	bx	lr

0002e0d0 <flatcc_builder_table_edit@@Base>:
   2e0d0:	push	{fp, lr}
   2e0d4:	mov	fp, sp
   2e0d8:	ldr	r2, [r0, #32]
   2e0dc:	ldrh	r2, [r2, #14]
   2e0e0:	cmp	r2, #3
   2e0e4:	ldreq	r2, [r0, #16]
   2e0e8:	ldreq	r0, [r0, #20]
   2e0ec:	addeq	r0, r2, r0
   2e0f0:	subeq	r0, r0, r1
   2e0f4:	popeq	{fp, pc}
   2e0f8:	ldr	r0, [pc, #24]	; 2e118 <flatcc_builder_table_edit@@Base+0x48>
   2e0fc:	ldr	r1, [pc, #24]	; 2e11c <flatcc_builder_table_edit@@Base+0x4c>
   2e100:	ldr	r3, [pc, #24]	; 2e120 <flatcc_builder_table_edit@@Base+0x50>
   2e104:	movw	r2, #1794	; 0x702
   2e108:	add	r0, pc, r0
   2e10c:	add	r1, pc, r1
   2e110:	add	r3, pc, r3
   2e114:	bl	12bbc <__assert_fail@plt>
   2e118:	andeq	r6, r0, r2, lsr r4
   2e11c:	andeq	r5, r0, r2, lsl #24
   2e120:	andeq	r6, r0, r2, ror #21

0002e124 <flatcc_builder_table_add_copy@@Base>:
   2e124:	push	{r4, r5, r6, sl, fp, lr}
   2e128:	add	fp, sp, #16
   2e12c:	mov	r4, r3
   2e130:	ldr	r3, [fp, #8]
   2e134:	mov	r5, r2
   2e138:	mov	r2, r4
   2e13c:	bl	2d0a0 <flatcc_builder_table_add@@Base>
   2e140:	mov	r6, r0
   2e144:	cmp	r0, #0
   2e148:	beq	2e15c <flatcc_builder_table_add_copy@@Base+0x38>
   2e14c:	mov	r0, r6
   2e150:	mov	r1, r5
   2e154:	mov	r2, r4
   2e158:	bl	12aa8 <memcpy@plt>
   2e15c:	mov	r0, r6
   2e160:	pop	{r4, r5, r6, sl, fp, pc}

0002e164 <flatcc_builder_push_buffer_alignment@@Base>:
   2e164:	ldrh	r1, [r0, #128]	; 0x80
   2e168:	mov	r2, #4
   2e16c:	strh	r2, [r0, #128]	; 0x80
   2e170:	mov	r0, r1
   2e174:	bx	lr

0002e178 <flatcc_builder_pop_buffer_alignment@@Base>:
   2e178:	ldrh	r2, [r0, #128]	; 0x80
   2e17c:	cmp	r2, r1
   2e180:	strhcc	r1, [r0, #128]	; 0x80
   2e184:	bx	lr

0002e188 <flatcc_builder_get_buffer_alignment@@Base>:
   2e188:	ldrh	r0, [r0, #128]	; 0x80
   2e18c:	bx	lr

0002e190 <flatcc_builder_set_vtable_clustering@@Base>:
   2e190:	clz	r1, r1
   2e194:	lsr	r1, r1, #5
   2e198:	str	r1, [r0, #180]	; 0xb4
   2e19c:	bx	lr

0002e1a0 <flatcc_builder_set_block_align@@Base>:
   2e1a0:	strh	r1, [r0, #132]	; 0x84
   2e1a4:	bx	lr

0002e1a8 <flatcc_builder_get_level@@Base>:
   2e1a8:	ldr	r0, [r0, #156]	; 0x9c
   2e1ac:	bx	lr

0002e1b0 <flatcc_builder_set_max_level@@Base>:
   2e1b0:	str	r1, [r0, #176]	; 0xb0
   2e1b4:	ldr	r2, [r0, #160]	; 0xa0
   2e1b8:	cmp	r2, r1
   2e1bc:	strlt	r1, [r0, #160]	; 0xa0
   2e1c0:	bx	lr

0002e1c4 <flatcc_builder_get_buffer_size@@Base>:
   2e1c4:	ldr	r1, [r0, #136]	; 0x88
   2e1c8:	ldr	r0, [r0, #140]	; 0x8c
   2e1cc:	sub	r0, r0, r1
   2e1d0:	bx	lr

0002e1d4 <flatcc_builder_get_buffer_start@@Base>:
   2e1d4:	ldr	r0, [r0, #136]	; 0x88
   2e1d8:	bx	lr

0002e1dc <flatcc_builder_get_buffer_end@@Base>:
   2e1dc:	ldr	r0, [r0, #140]	; 0x8c
   2e1e0:	bx	lr

0002e1e4 <flatcc_builder_set_vtable_cache_limit@@Base>:
   2e1e4:	str	r1, [r0, #172]	; 0xac
   2e1e8:	bx	lr

0002e1ec <flatcc_builder_set_identifier@@Base>:
   2e1ec:	ldr	r2, [pc, #20]	; 2e208 <flatcc_builder_set_identifier@@Base+0x1c>
   2e1f0:	cmp	r1, #0
   2e1f4:	ldr	r2, [pc, r2]
   2e1f8:	movne	r2, r1
   2e1fc:	ldr	r1, [r2]
   2e200:	str	r1, [r0, #168]	; 0xa8
   2e204:	bx	lr
   2e208:	andeq	r7, r1, r8, ror lr

0002e20c <flatcc_builder_get_type@@Base>:
   2e20c:	ldr	r0, [r0, #32]
   2e210:	cmp	r0, #0
   2e214:	ldrhne	r0, [r0, #14]
   2e218:	moveq	r0, #0
   2e21c:	bx	lr

0002e220 <flatcc_builder_get_type_at@@Base>:
   2e220:	mov	r2, r0
   2e224:	mov	r0, #0
   2e228:	cmp	r1, #1
   2e22c:	blt	2e250 <flatcc_builder_get_type_at@@Base+0x30>
   2e230:	ldr	r3, [r2, #156]	; 0x9c
   2e234:	cmp	r3, r1
   2e238:	bxlt	lr
   2e23c:	sub	r0, r1, r3
   2e240:	ldr	r1, [r2, #32]
   2e244:	add	r0, r0, r0, lsl #3
   2e248:	add	r0, r1, r0, lsl #2
   2e24c:	ldrh	r0, [r0, #14]
   2e250:	bx	lr

0002e254 <flatcc_builder_get_direct_buffer@@Base>:
   2e254:	ldr	r2, [r0, #184]	; 0xb8
   2e258:	cmp	r2, #0
   2e25c:	beq	2e270 <flatcc_builder_get_direct_buffer@@Base+0x1c>
   2e260:	ldr	r2, [r0, #188]	; 0xbc
   2e264:	ldr	r3, [r0, #192]	; 0xc0
   2e268:	cmp	r2, r3
   2e26c:	beq	2e288 <flatcc_builder_get_direct_buffer@@Base+0x34>
   2e270:	cmp	r1, #0
   2e274:	moveq	r0, #0
   2e278:	bxeq	lr
   2e27c:	mov	r0, #0
   2e280:	str	r0, [r1]
   2e284:	bx	lr
   2e288:	cmp	r1, #0
   2e28c:	ldrne	r2, [r0, #212]	; 0xd4
   2e290:	strne	r2, [r1]
   2e294:	ldr	r0, [r0, #196]	; 0xc4
   2e298:	bx	lr

0002e29c <flatcc_builder_copy_buffer@@Base>:
   2e29c:	push	{fp, lr}
   2e2a0:	mov	fp, sp
   2e2a4:	ldr	r3, [r0, #184]	; 0xb8
   2e2a8:	cmp	r3, #0
   2e2ac:	beq	2e2e0 <flatcc_builder_copy_buffer@@Base+0x44>
   2e2b0:	add	r0, r0, #188	; 0xbc
   2e2b4:	bl	2e9ec <flatcc_emitter_copy_buffer@@Base>
   2e2b8:	cmp	r0, #0
   2e2bc:	popne	{fp, pc}
   2e2c0:	ldr	r0, [pc, #32]	; 2e2e8 <flatcc_builder_copy_buffer@@Base+0x4c>
   2e2c4:	ldr	r1, [pc, #32]	; 2e2ec <flatcc_builder_copy_buffer@@Base+0x50>
   2e2c8:	ldr	r3, [pc, #32]	; 2e2f0 <flatcc_builder_copy_buffer@@Base+0x54>
   2e2cc:	movw	r2, #1926	; 0x786
   2e2d0:	add	r0, pc, r0
   2e2d4:	add	r1, pc, r1
   2e2d8:	add	r3, pc, r3
   2e2dc:	bl	12bbc <__assert_fail@plt>
   2e2e0:	mov	r0, #0
   2e2e4:	pop	{fp, pc}
   2e2e8:	andeq	r5, r0, r9, lsr #25
   2e2ec:	andeq	r5, r0, sl, lsr sl
   2e2f0:	andeq	r6, r0, r5, lsr #19

0002e2f4 <flatcc_builder_finalize_buffer@@Base>:
   2e2f4:	push	{r4, r5, r6, sl, fp, lr}
   2e2f8:	add	fp, sp, #16
   2e2fc:	mov	r5, r0
   2e300:	ldr	r0, [r0, #136]	; 0x88
   2e304:	cmp	r1, #0
   2e308:	ldr	r2, [r5, #140]	; 0x8c
   2e30c:	sub	r4, r2, r0
   2e310:	mov	r0, r4
   2e314:	strne	r4, [r1]
   2e318:	bl	12afc <malloc@plt>
   2e31c:	cmp	r0, #0
   2e320:	beq	2e370 <flatcc_builder_finalize_buffer@@Base+0x7c>
   2e324:	mov	r6, r0
   2e328:	ldr	r0, [r5, #184]	; 0xb8
   2e32c:	cmp	r0, #0
   2e330:	beq	2e390 <flatcc_builder_finalize_buffer@@Base+0x9c>
   2e334:	add	r0, r5, #188	; 0xbc
   2e338:	mov	r1, r6
   2e33c:	mov	r2, r4
   2e340:	bl	2e9ec <flatcc_emitter_copy_buffer@@Base>
   2e344:	cmp	r0, #0
   2e348:	movne	r0, r6
   2e34c:	popne	{r4, r5, r6, sl, fp, pc}
   2e350:	ldr	r0, [pc, #88]	; 2e3b0 <flatcc_builder_finalize_buffer@@Base+0xbc>
   2e354:	ldr	r1, [pc, #88]	; 2e3b4 <flatcc_builder_finalize_buffer@@Base+0xc0>
   2e358:	ldr	r3, [pc, #88]	; 2e3b8 <flatcc_builder_finalize_buffer@@Base+0xc4>
   2e35c:	movw	r2, #1926	; 0x786
   2e360:	add	r0, pc, r0
   2e364:	add	r1, pc, r1
   2e368:	add	r3, pc, r3
   2e36c:	bl	12bbc <__assert_fail@plt>
   2e370:	ldr	r0, [pc, #80]	; 2e3c8 <flatcc_builder_finalize_buffer@@Base+0xd4>
   2e374:	ldr	r1, [pc, #80]	; 2e3cc <flatcc_builder_finalize_buffer@@Base+0xd8>
   2e378:	ldr	r3, [pc, #80]	; 2e3d0 <flatcc_builder_finalize_buffer@@Base+0xdc>
   2e37c:	movw	r2, #1944	; 0x798
   2e380:	add	r0, pc, r0
   2e384:	add	r1, pc, r1
   2e388:	add	r3, pc, r3
   2e38c:	bl	12bbc <__assert_fail@plt>
   2e390:	ldr	r0, [pc, #36]	; 2e3bc <flatcc_builder_finalize_buffer@@Base+0xc8>
   2e394:	ldr	r1, [pc, #36]	; 2e3c0 <flatcc_builder_finalize_buffer@@Base+0xcc>
   2e398:	ldr	r3, [pc, #36]	; 2e3c4 <flatcc_builder_finalize_buffer@@Base+0xd0>
   2e39c:	movw	r2, #1948	; 0x79c
   2e3a0:	add	r0, pc, r0
   2e3a4:	add	r1, pc, r1
   2e3a8:	add	r3, pc, r3
   2e3ac:	bl	12bbc <__assert_fail@plt>
   2e3b0:	andeq	r5, r0, r9, lsl ip
   2e3b4:	andeq	r5, r0, sl, lsr #19
   2e3b8:	andeq	r6, r0, r5, lsl r9
   2e3bc:	andeq	r6, r0, fp, lsr #22
   2e3c0:	andeq	r5, r0, sl, ror #18
   2e3c4:	andeq	r6, r0, sl, lsl r9
   2e3c8:	andeq	r6, r0, fp, asr #22
   2e3cc:	andeq	r5, r0, sl, lsl #19
   2e3d0:	andeq	r6, r0, sl, lsr r9

0002e3d4 <flatcc_builder_finalize_aligned_buffer@@Base>:
   2e3d4:	push	{r4, r5, r6, r7, fp, lr}
   2e3d8:	add	fp, sp, #16
   2e3dc:	sub	sp, sp, #8
   2e3e0:	mov	r5, r0
   2e3e4:	mov	r4, r1
   2e3e8:	ldr	r0, [r0, #136]	; 0x88
   2e3ec:	ldr	r1, [r5, #140]	; 0x8c
   2e3f0:	cmp	r4, #0
   2e3f4:	sub	r0, r1, r0
   2e3f8:	mov	r1, #0
   2e3fc:	strne	r0, [r4]
   2e400:	ldrh	r2, [r5, #128]	; 0x80
   2e404:	str	r1, [sp, #4]
   2e408:	add	r0, r0, r2
   2e40c:	cmp	r2, #4
   2e410:	mov	r1, r2
   2e414:	rsb	r2, r2, #0
   2e418:	sub	r0, r0, #1
   2e41c:	movls	r1, #4
   2e420:	and	r7, r0, r2
   2e424:	add	r0, sp, #4
   2e428:	mov	r2, r7
   2e42c:	bl	12b50 <posix_memalign@plt>
   2e430:	ldr	r6, [sp, #4]
   2e434:	cmp	r0, #0
   2e438:	cmpne	r6, #0
   2e43c:	bne	2e48c <flatcc_builder_finalize_aligned_buffer@@Base+0xb8>
   2e440:	cmp	r6, #0
   2e444:	beq	2e494 <flatcc_builder_finalize_aligned_buffer@@Base+0xc0>
   2e448:	ldr	r0, [r5, #184]	; 0xb8
   2e44c:	cmp	r0, #0
   2e450:	beq	2e48c <flatcc_builder_finalize_aligned_buffer@@Base+0xb8>
   2e454:	add	r0, r5, #188	; 0xbc
   2e458:	mov	r1, r6
   2e45c:	mov	r2, r7
   2e460:	bl	2e9ec <flatcc_emitter_copy_buffer@@Base>
   2e464:	cmp	r0, #0
   2e468:	bne	2e4a0 <flatcc_builder_finalize_aligned_buffer@@Base+0xcc>
   2e46c:	ldr	r0, [pc, #56]	; 2e4ac <flatcc_builder_finalize_aligned_buffer@@Base+0xd8>
   2e470:	ldr	r1, [pc, #56]	; 2e4b0 <flatcc_builder_finalize_aligned_buffer@@Base+0xdc>
   2e474:	ldr	r3, [pc, #56]	; 2e4b4 <flatcc_builder_finalize_aligned_buffer@@Base+0xe0>
   2e478:	movw	r2, #1926	; 0x786
   2e47c:	add	r0, pc, r0
   2e480:	add	r1, pc, r1
   2e484:	add	r3, pc, r3
   2e488:	bl	12bbc <__assert_fail@plt>
   2e48c:	mov	r0, r6
   2e490:	bl	12a9c <free@plt>
   2e494:	mov	r6, #0
   2e498:	cmp	r4, #0
   2e49c:	strne	r6, [r4]
   2e4a0:	mov	r0, r6
   2e4a4:	sub	sp, fp, #16
   2e4a8:	pop	{r4, r5, r6, r7, fp, pc}
   2e4ac:	strdeq	r5, [r0], -sp
   2e4b0:	andeq	r5, r0, lr, lsl #17
   2e4b4:	strdeq	r6, [r0], -r9

0002e4b8 <flatcc_builder_aligned_alloc@@Base>:
   2e4b8:	push	{fp, lr}
   2e4bc:	mov	fp, sp
   2e4c0:	sub	sp, sp, #8
   2e4c4:	mov	r2, r1
   2e4c8:	mov	r1, r0
   2e4cc:	mov	r0, #0
   2e4d0:	cmp	r1, #4
   2e4d4:	str	r0, [sp, #4]
   2e4d8:	add	r0, sp, #4
   2e4dc:	movls	r1, #4
   2e4e0:	bl	12b50 <posix_memalign@plt>
   2e4e4:	mov	r1, r0
   2e4e8:	ldr	r0, [sp, #4]
   2e4ec:	cmp	r1, #0
   2e4f0:	cmpne	r0, #0
   2e4f4:	bne	2e500 <flatcc_builder_aligned_alloc@@Base+0x48>
   2e4f8:	mov	sp, fp
   2e4fc:	pop	{fp, pc}
   2e500:	bl	12a9c <free@plt>
   2e504:	mov	r0, #0
   2e508:	str	r0, [sp, #4]
   2e50c:	mov	sp, fp
   2e510:	pop	{fp, pc}

0002e514 <flatcc_builder_aligned_free@@Base>:
   2e514:	b	12a9c <free@plt>

0002e518 <flatcc_builder_get_emit_context@@Base>:
   2e518:	ldr	r0, [r0, #36]	; 0x24
   2e51c:	bx	lr

0002e520 <flatcc_emitter_recycle_page@@Base>:
   2e520:	ldr	r3, [r0]
   2e524:	mov	r2, r0
   2e528:	mvn	r0, #0
   2e52c:	cmp	r3, r1
   2e530:	beq	2e570 <flatcc_emitter_recycle_page@@Base+0x50>
   2e534:	ldr	r2, [r2, #4]
   2e538:	cmp	r2, r1
   2e53c:	bxeq	lr
   2e540:	ldr	r0, [r1, #2944]	; 0xb80
   2e544:	ldr	r2, [r1, #2948]	; 0xb84
   2e548:	str	r2, [r0, #2948]	; 0xb84
   2e54c:	ldr	r2, [r1, #2948]	; 0xb84
   2e550:	str	r0, [r2, #2944]	; 0xb80
   2e554:	ldr	r0, [r3, #2948]	; 0xb84
   2e558:	str	r3, [r1, #2944]	; 0xb80
   2e55c:	str	r0, [r1, #2948]	; 0xb84
   2e560:	str	r1, [r0, #2944]	; 0xb80
   2e564:	ldr	r0, [r1, #2944]	; 0xb80
   2e568:	str	r1, [r0, #2948]	; 0xb84
   2e56c:	mov	r0, #0
   2e570:	bx	lr

0002e574 <flatcc_emitter_reset@@Base>:
   2e574:	push	{r4, sl, fp, lr}
   2e578:	add	fp, sp, #8
   2e57c:	ldr	r1, [r0]
   2e580:	cmp	r1, #0
   2e584:	beq	2e63c <flatcc_emitter_reset@@Base+0xc8>
   2e588:	mov	r4, r0
   2e58c:	add	r2, r1, #1472	; 0x5c0
   2e590:	mov	r0, #1472	; 0x5c0
   2e594:	mov	r3, #0
   2e598:	stmib	r4, {r1, r2}
   2e59c:	str	r0, [r4, #12]
   2e5a0:	str	r2, [r4, #16]
   2e5a4:	str	r0, [r4, #20]
   2e5a8:	movw	r0, #64064	; 0xfa40
   2e5ac:	movt	r0, #65535	; 0xffff
   2e5b0:	str	r0, [r1, #2952]	; 0xb88
   2e5b4:	ldr	r2, [r4, #32]
   2e5b8:	ldr	r0, [r4, #24]
   2e5bc:	cmp	r2, #0
   2e5c0:	moveq	r2, r0
   2e5c4:	streq	r0, [r4, #32]
   2e5c8:	str	r3, [r4, #24]
   2e5cc:	add	r2, r2, r2, lsl #1
   2e5d0:	lsr	r2, r2, #2
   2e5d4:	add	r0, r2, r0, lsr #2
   2e5d8:	str	r0, [r4, #32]
   2e5dc:	ldr	r2, [r4, #28]
   2e5e0:	cmp	r2, r0, lsl #1
   2e5e4:	bls	2e63c <flatcc_emitter_reset@@Base+0xc8>
   2e5e8:	mov	r2, r1
   2e5ec:	ldr	r0, [r2, #2944]!	; 0xb80
   2e5f0:	cmp	r0, r1
   2e5f4:	popeq	{r4, sl, fp, pc}
   2e5f8:	ldr	r3, [r0, #2944]	; 0xb80
   2e5fc:	str	r3, [r2]
   2e600:	ldr	r2, [r0, #2944]	; 0xb80
   2e604:	str	r1, [r2, #2948]	; 0xb84
   2e608:	bl	12a9c <free@plt>
   2e60c:	ldr	r0, [r4, #28]
   2e610:	ldr	r1, [r4, #32]
   2e614:	sub	r0, r0, #2944	; 0xb80
   2e618:	cmp	r0, r1, lsl #1
   2e61c:	str	r0, [r4, #28]
   2e620:	bls	2e63c <flatcc_emitter_reset@@Base+0xc8>
   2e624:	ldr	r1, [r4, #4]
   2e628:	ldr	r3, [r4]
   2e62c:	mov	r2, r1
   2e630:	ldr	r0, [r2, #2944]!	; 0xb80
   2e634:	cmp	r0, r3
   2e638:	bne	2e5f8 <flatcc_emitter_reset@@Base+0x84>
   2e63c:	pop	{r4, sl, fp, pc}

0002e640 <flatcc_emitter_clear@@Base>:
   2e640:	push	{r4, r5, r6, sl, fp, lr}
   2e644:	add	fp, sp, #16
   2e648:	ldr	r5, [r0]
   2e64c:	cmp	r5, #0
   2e650:	beq	2e6a0 <flatcc_emitter_clear@@Base+0x60>
   2e654:	mov	r4, r0
   2e658:	ldr	r0, [r5, #2948]	; 0xb84
   2e65c:	mov	r6, #0
   2e660:	str	r6, [r0, #2944]	; 0xb80
   2e664:	ldr	r0, [r5, #2944]	; 0xb80
   2e668:	cmp	r0, #0
   2e66c:	beq	2e680 <flatcc_emitter_clear@@Base+0x40>
   2e670:	mov	r5, r0
   2e674:	ldr	r0, [r0, #2948]	; 0xb84
   2e678:	bl	12a9c <free@plt>
   2e67c:	b	2e664 <flatcc_emitter_clear@@Base+0x24>
   2e680:	mov	r0, r5
   2e684:	bl	12a9c <free@plt>
   2e688:	vmov.i32	q8, #0	; 0x00000000
   2e68c:	add	r0, r4, #16
   2e690:	vst1.32	{d16-d17}, [r0]
   2e694:	mov	r0, #32
   2e698:	vst1.32	{d16-d17}, [r4], r0
   2e69c:	str	r6, [r4]
   2e6a0:	pop	{r4, r5, r6, sl, fp, pc}

0002e6a4 <flatcc_emitter@@Base>:
   2e6a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e6a8:	add	fp, sp, #28
   2e6ac:	sub	sp, sp, #4
   2e6b0:	mov	r6, r0
   2e6b4:	mov	r7, r1
   2e6b8:	ldr	r0, [r0, #24]
   2e6bc:	ldr	r1, [fp, #8]
   2e6c0:	mov	r4, r2
   2e6c4:	cmn	r3, #1
   2e6c8:	mov	r9, r6
   2e6cc:	add	r0, r0, r1
   2e6d0:	str	r0, [r6, #24]
   2e6d4:	ble	2e828 <flatcc_emitter@@Base+0x184>
   2e6d8:	ldr	r0, [r9, #20]!
   2e6dc:	cmp	r0, r1
   2e6e0:	bcs	2e988 <flatcc_emitter@@Base+0x2e4>
   2e6e4:	mov	r8, #0
   2e6e8:	cmp	r4, #0
   2e6ec:	beq	2e9e0 <flatcc_emitter@@Base+0x33c>
   2e6f0:	movw	sl, #64064	; 0xfa40
   2e6f4:	movt	sl, #65535	; 0xffff
   2e6f8:	ldr	r8, [r7, #4]
   2e6fc:	cmp	r8, #0
   2e700:	beq	2e814 <flatcc_emitter@@Base+0x170>
   2e704:	ldr	r9, [r7]
   2e708:	b	2e744 <flatcc_emitter@@Base+0xa0>
   2e70c:	mov	r5, r8
   2e710:	ldr	r0, [r6, #16]
   2e714:	mov	r1, r9
   2e718:	mov	r2, r5
   2e71c:	bl	12aa8 <memcpy@plt>
   2e720:	ldr	r0, [r6, #16]
   2e724:	ldr	r1, [r6, #20]
   2e728:	add	r9, r9, r5
   2e72c:	subs	r8, r8, r5
   2e730:	add	r2, r0, r5
   2e734:	sub	r0, r1, r5
   2e738:	str	r2, [r6, #16]
   2e73c:	str	r0, [r6, #20]
   2e740:	beq	2e814 <flatcc_emitter@@Base+0x170>
   2e744:	cmp	r8, r0
   2e748:	mov	r5, r8
   2e74c:	bls	2e710 <flatcc_emitter@@Base+0x6c>
   2e750:	mov	r5, r0
   2e754:	cmp	r5, #0
   2e758:	beq	2e7a4 <flatcc_emitter@@Base+0x100>
   2e75c:	b	2e710 <flatcc_emitter@@Base+0x6c>
   2e760:	ldr	r1, [r6]
   2e764:	str	r1, [r0, #2944]	; 0xb80
   2e768:	str	r5, [r0, #2948]	; 0xb84
   2e76c:	str	r0, [r1, #2948]	; 0xb84
   2e770:	str	r0, [r5, #2944]	; 0xb80
   2e774:	mov	r5, #2944	; 0xb80
   2e778:	str	r0, [r6, #4]
   2e77c:	str	r0, [r6, #16]
   2e780:	str	r5, [r6, #20]
   2e784:	ldr	r1, [r0, #2948]	; 0xb84
   2e788:	ldr	r1, [r1, #2952]	; 0xb88
   2e78c:	add	r1, r1, #2944	; 0xb80
   2e790:	str	r1, [r0, #2952]	; 0xb88
   2e794:	cmp	r8, r5
   2e798:	bls	2e70c <flatcc_emitter@@Base+0x68>
   2e79c:	cmp	r5, #0
   2e7a0:	bne	2e710 <flatcc_emitter@@Base+0x6c>
   2e7a4:	ldr	r5, [r6, #4]
   2e7a8:	cmp	r5, #0
   2e7ac:	beq	2e7c0 <flatcc_emitter@@Base+0x11c>
   2e7b0:	ldr	r0, [r5, #2944]	; 0xb80
   2e7b4:	ldr	r1, [r6]
   2e7b8:	cmp	r0, r1
   2e7bc:	bne	2e774 <flatcc_emitter@@Base+0xd0>
   2e7c0:	movw	r0, #2956	; 0xb8c
   2e7c4:	bl	12afc <malloc@plt>
   2e7c8:	cmp	r0, #0
   2e7cc:	beq	2e998 <flatcc_emitter@@Base+0x2f4>
   2e7d0:	ldr	r1, [r6, #28]
   2e7d4:	cmp	r5, #0
   2e7d8:	add	r1, r1, #2944	; 0xb80
   2e7dc:	str	r1, [r6, #28]
   2e7e0:	bne	2e760 <flatcc_emitter@@Base+0xbc>
   2e7e4:	add	r1, r0, #1472	; 0x5c0
   2e7e8:	mov	r5, #1472	; 0x5c0
   2e7ec:	str	r0, [r6]
   2e7f0:	stmib	r6, {r0, r1, r5}
   2e7f4:	str	r1, [r6, #16]
   2e7f8:	str	r5, [r6, #20]
   2e7fc:	str	r0, [r0, #2944]	; 0xb80
   2e800:	str	r0, [r0, #2948]	; 0xb84
   2e804:	str	sl, [r0, #2952]	; 0xb88
   2e808:	cmp	r8, r5
   2e80c:	bhi	2e79c <flatcc_emitter@@Base+0xf8>
   2e810:	b	2e70c <flatcc_emitter@@Base+0x68>
   2e814:	subs	r4, r4, #1
   2e818:	add	r7, r7, #8
   2e81c:	bne	2e6f8 <flatcc_emitter@@Base+0x54>
   2e820:	mov	r8, #0
   2e824:	b	2e9e0 <flatcc_emitter@@Base+0x33c>
   2e828:	ldr	r0, [r9, #12]!
   2e82c:	cmp	r0, r1
   2e830:	bcs	2e9a0 <flatcc_emitter@@Base+0x2fc>
   2e834:	mov	r8, #0
   2e838:	cmp	r4, #0
   2e83c:	beq	2e9e0 <flatcc_emitter@@Base+0x33c>
   2e840:	add	r0, r7, r4, lsl #3
   2e844:	ldr	sl, [r0, #-4]
   2e848:	sub	r1, r0, #8
   2e84c:	str	r1, [sp]
   2e850:	cmp	sl, #0
   2e854:	beq	2e978 <flatcc_emitter@@Base+0x2d4>
   2e858:	ldr	r0, [sp]
   2e85c:	ldr	r0, [r0]
   2e860:	add	r7, r0, sl
   2e864:	ldr	r1, [r9]
   2e868:	cmp	sl, r1
   2e86c:	bhi	2e8ac <flatcc_emitter@@Base+0x208>
   2e870:	b	2e948 <flatcc_emitter@@Base+0x2a4>
   2e874:	ldr	r1, [r5, #2952]	; 0xb88
   2e878:	sub	r1, r1, #2944	; 0xb80
   2e87c:	str	r1, [r0, #2952]	; 0xb88
   2e880:	mov	r1, #2944	; 0xb80
   2e884:	add	r2, r0, #2944	; 0xb80
   2e888:	str	r0, [r6]
   2e88c:	str	r2, [r6, #8]
   2e890:	str	r1, [r6, #12]
   2e894:	ldr	r2, [r0, #2944]	; 0xb80
   2e898:	ldr	r2, [r2, #2952]	; 0xb88
   2e89c:	sub	r2, r2, #2944	; 0xb80
   2e8a0:	str	r2, [r0, #2952]	; 0xb88
   2e8a4:	cmp	sl, r1
   2e8a8:	bls	2e948 <flatcc_emitter@@Base+0x2a4>
   2e8ac:	cmp	r1, #0
   2e8b0:	mov	r5, r1
   2e8b4:	bne	2e94c <flatcc_emitter@@Base+0x2a8>
   2e8b8:	ldr	r5, [r6]
   2e8bc:	cmp	r5, #0
   2e8c0:	beq	2e8d4 <flatcc_emitter@@Base+0x230>
   2e8c4:	ldr	r0, [r5, #2948]	; 0xb84
   2e8c8:	ldr	r1, [r6, #4]
   2e8cc:	cmp	r0, r1
   2e8d0:	bne	2e874 <flatcc_emitter@@Base+0x1d0>
   2e8d4:	movw	r0, #2956	; 0xb8c
   2e8d8:	bl	12afc <malloc@plt>
   2e8dc:	cmp	r0, #0
   2e8e0:	beq	2e998 <flatcc_emitter@@Base+0x2f4>
   2e8e4:	ldr	r1, [r6, #28]
   2e8e8:	cmp	r5, #0
   2e8ec:	add	r1, r1, #2944	; 0xb80
   2e8f0:	str	r1, [r6, #28]
   2e8f4:	beq	2e910 <flatcc_emitter@@Base+0x26c>
   2e8f8:	ldr	r1, [r6, #4]
   2e8fc:	str	r5, [r0, #2944]	; 0xb80
   2e900:	str	r1, [r0, #2948]	; 0xb84
   2e904:	str	r0, [r5, #2948]	; 0xb84
   2e908:	str	r0, [r1, #2944]	; 0xb80
   2e90c:	b	2e880 <flatcc_emitter@@Base+0x1dc>
   2e910:	add	r2, r0, #1472	; 0x5c0
   2e914:	mov	r1, #1472	; 0x5c0
   2e918:	str	r0, [r6]
   2e91c:	stmib	r6, {r0, r2}
   2e920:	str	r1, [r6, #12]
   2e924:	str	r2, [r6, #16]
   2e928:	movw	r2, #64064	; 0xfa40
   2e92c:	str	r1, [r6, #20]
   2e930:	str	r0, [r0, #2944]	; 0xb80
   2e934:	str	r0, [r0, #2948]	; 0xb84
   2e938:	movt	r2, #65535	; 0xffff
   2e93c:	str	r2, [r0, #2952]	; 0xb88
   2e940:	cmp	sl, r1
   2e944:	bhi	2e8ac <flatcc_emitter@@Base+0x208>
   2e948:	mov	r5, sl
   2e94c:	sub	r0, r1, r5
   2e950:	sub	r7, r7, r5
   2e954:	mov	r2, r5
   2e958:	str	r0, [r6, #12]
   2e95c:	mov	r1, r7
   2e960:	ldr	r0, [r6, #8]
   2e964:	sub	r0, r0, r5
   2e968:	str	r0, [r6, #8]
   2e96c:	bl	12aa8 <memcpy@plt>
   2e970:	subs	sl, sl, r5
   2e974:	bne	2e864 <flatcc_emitter@@Base+0x1c0>
   2e978:	ldr	r0, [sp]
   2e97c:	subs	r4, r4, #1
   2e980:	bne	2e844 <flatcc_emitter@@Base+0x1a0>
   2e984:	b	2e9e0 <flatcc_emitter@@Base+0x33c>
   2e988:	ldr	r5, [r6, #16]
   2e98c:	add	r2, r5, r1
   2e990:	str	r2, [r6, #16]
   2e994:	b	2e9ac <flatcc_emitter@@Base+0x308>
   2e998:	mvn	r8, #0
   2e99c:	b	2e9e0 <flatcc_emitter@@Base+0x33c>
   2e9a0:	ldr	r2, [r6, #8]
   2e9a4:	sub	r5, r2, r1
   2e9a8:	str	r5, [r6, #8]
   2e9ac:	sub	r0, r0, r1
   2e9b0:	mov	r8, #0
   2e9b4:	cmp	r4, #0
   2e9b8:	str	r0, [r9]
   2e9bc:	beq	2e9e0 <flatcc_emitter@@Base+0x33c>
   2e9c0:	ldm	r7, {r1, r2}
   2e9c4:	mov	r0, r5
   2e9c8:	bl	12aa8 <memcpy@plt>
   2e9cc:	ldr	r0, [r7, #4]
   2e9d0:	add	r7, r7, #8
   2e9d4:	subs	r4, r4, #1
   2e9d8:	add	r5, r5, r0
   2e9dc:	bne	2e9c0 <flatcc_emitter@@Base+0x31c>
   2e9e0:	mov	r0, r8
   2e9e4:	sub	sp, fp, #28
   2e9e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0002e9ec <flatcc_emitter_copy_buffer@@Base>:
   2e9ec:	push	{r4, r5, r6, sl, fp, lr}
   2e9f0:	add	fp, sp, #16
   2e9f4:	mov	r3, r2
   2e9f8:	ldr	r2, [r0, #24]
   2e9fc:	mov	r5, #0
   2ea00:	cmp	r2, r3
   2ea04:	bhi	2ea8c <flatcc_emitter_copy_buffer@@Base+0xa0>
   2ea08:	mov	r4, r0
   2ea0c:	ldr	r0, [r0]
   2ea10:	cmp	r0, #0
   2ea14:	beq	2ea8c <flatcc_emitter_copy_buffer@@Base+0xa0>
   2ea18:	mov	r6, r1
   2ea1c:	ldr	r1, [r4, #4]
   2ea20:	cmp	r0, r1
   2ea24:	beq	2ea94 <flatcc_emitter_copy_buffer@@Base+0xa8>
   2ea28:	ldr	r0, [r4, #12]
   2ea2c:	ldr	r1, [r4, #8]
   2ea30:	rsb	r5, r0, #2944	; 0xb80
   2ea34:	mov	r0, r6
   2ea38:	mov	r2, r5
   2ea3c:	bl	12aa8 <memcpy@plt>
   2ea40:	ldm	r4, {r0, r1}
   2ea44:	add	r5, r6, r5
   2ea48:	ldr	r6, [r0, #2944]	; 0xb80
   2ea4c:	cmp	r6, r1
   2ea50:	beq	2ea78 <flatcc_emitter_copy_buffer@@Base+0x8c>
   2ea54:	mov	r0, r5
   2ea58:	mov	r1, r6
   2ea5c:	mov	r2, #2944	; 0xb80
   2ea60:	bl	12aa8 <memcpy@plt>
   2ea64:	ldr	r6, [r6, #2944]	; 0xb80
   2ea68:	ldr	r0, [r4, #4]
   2ea6c:	add	r5, r5, #2944	; 0xb80
   2ea70:	cmp	r6, r0
   2ea74:	bne	2ea54 <flatcc_emitter_copy_buffer@@Base+0x68>
   2ea78:	ldr	r0, [r4, #20]
   2ea7c:	mov	r1, r6
   2ea80:	rsb	r2, r0, #2944	; 0xb80
   2ea84:	mov	r0, r5
   2ea88:	bl	12aa8 <memcpy@plt>
   2ea8c:	mov	r0, r5
   2ea90:	pop	{r4, r5, r6, sl, fp, pc}
   2ea94:	ldr	r1, [r4, #8]
   2ea98:	mov	r0, r6
   2ea9c:	bl	12aa8 <memcpy@plt>
   2eaa0:	mov	r0, r6
   2eaa4:	pop	{r4, r5, r6, sl, fp, pc}

0002eaa8 <grisu3_diy_fp_encode_double@@Base>:
   2eaa8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2eaac:	add	fp, sp, #28
   2eab0:	sub	sp, sp, #12
   2eab4:	ldr	lr, [fp, #8]
   2eab8:	orr	r7, r0, r1
   2eabc:	cmp	lr, #0
   2eac0:	movwne	lr, #1
   2eac4:	cmp	r7, #0
   2eac8:	beq	2eeb4 <grisu3_diy_fp_encode_double@@Base+0x40c>
   2eacc:	mov	ip, #0
   2ead0:	cmp	ip, r1, lsr #22
   2ead4:	bne	2eaf4 <grisu3_diy_fp_encode_double@@Base+0x4c>
   2ead8:	mov	ip, #0
   2eadc:	lsl	r1, r1, #10
   2eae0:	sub	ip, ip, #10
   2eae4:	orr	r1, r1, r0, lsr #22
   2eae8:	lsl	r0, r0, #10
   2eaec:	cmp	r1, #4194304	; 0x400000
   2eaf0:	bcc	2eadc <grisu3_diy_fp_encode_double@@Base+0x34>
   2eaf4:	sub	r5, r2, r3
   2eaf8:	mvn	r2, #0
   2eafc:	cmp	r1, #0
   2eb00:	bmi	2ecb4 <grisu3_diy_fp_encode_double@@Base+0x20c>
   2eb04:	lsl	r1, r1, #1
   2eb08:	lsl	r4, r0, #1
   2eb0c:	sub	ip, ip, #1
   2eb10:	orr	r1, r1, r0, lsr #31
   2eb14:	subs	r0, r2, r0, lsl #1
   2eb18:	sbcs	r0, r2, r1
   2eb1c:	mov	r0, r4
   2eb20:	blt	2eb04 <grisu3_diy_fp_encode_double@@Base+0x5c>
   2eb24:	cmn	r5, #348	; 0x15c
   2eb28:	blt	2ecc0 <grisu3_diy_fp_encode_double@@Base+0x218>
   2eb2c:	cmp	r5, #348	; 0x15c
   2eb30:	bge	2eed4 <grisu3_diy_fp_encode_double@@Base+0x42c>
   2eb34:	add	r0, r5, #348	; 0x15c
   2eb38:	ldr	r9, [pc, #1044]	; 2ef54 <grisu3_diy_fp_encode_double@@Base+0x4ac>
   2eb3c:	asr	r6, r0, #31
   2eb40:	add	r0, r0, r6, lsr #29
   2eb44:	mvn	r6, #14
   2eb48:	and	r6, r6, r0, lsl #1
   2eb4c:	add	r9, pc, r9
   2eb50:	ldr	r8, [r9, r6]!
   2eb54:	ldrsh	r7, [r9, #10]
   2eb58:	cmp	r5, r7
   2eb5c:	blt	2eef4 <grisu3_diy_fp_encode_double@@Base+0x44c>
   2eb60:	add	r6, r7, #8
   2eb64:	cmp	r6, r5
   2eb68:	ble	2ef14 <grisu3_diy_fp_encode_double@@Base+0x46c>
   2eb6c:	lsl	r6, lr, #2
   2eb70:	rsb	r0, ip, #0
   2eb74:	cmp	r5, r7
   2eb78:	lsl	sl, r6, r0
   2eb7c:	beq	2ec04 <grisu3_diy_fp_encode_double@@Base+0x15c>
   2eb80:	mvn	r0, r7
   2eb84:	str	sl, [sp, #4]
   2eb88:	str	r3, [sp, #8]
   2eb8c:	add	r5, r5, r0
   2eb90:	cmp	r5, #7
   2eb94:	bcs	2ef34 <grisu3_diy_fp_encode_double@@Base+0x48c>
   2eb98:	ldr	r0, [pc, #952]	; 2ef58 <grisu3_diy_fp_encode_double@@Base+0x4b0>
   2eb9c:	add	r0, pc, r0
   2eba0:	ldr	r6, [r0, r5, lsl #4]!
   2eba4:	ldr	lr, [r0, #4]
   2eba8:	ldr	r0, [r0, #8]
   2ebac:	umull	sl, r7, r6, r1
   2ebb0:	str	r0, [sp]
   2ebb4:	umull	r3, r0, lr, r4
   2ebb8:	umaal	r7, r0, lr, r1
   2ebbc:	umull	r1, r6, r6, r4
   2ebc0:	mov	r1, #0
   2ebc4:	adds	r6, sl, r6
   2ebc8:	ldr	sl, [sp, #4]
   2ebcc:	adc	r1, r1, #0
   2ebd0:	adds	r3, r6, r3
   2ebd4:	adc	r1, r1, #0
   2ebd8:	adds	r3, r3, #-2147483648	; 0x80000000
   2ebdc:	adcs	r4, r7, r1
   2ebe0:	adc	r1, r0, #0
   2ebe4:	ldr	r0, [sp, #8]
   2ebe8:	add	r0, r0, r5
   2ebec:	add	r0, r0, #1
   2ebf0:	cmp	r0, #19
   2ebf4:	ldr	r0, [sp]
   2ebf8:	addgt	sl, sl, #4
   2ebfc:	add	r0, ip, r0
   2ec00:	add	ip, r0, #64	; 0x40
   2ec04:	ldr	r0, [r9, #4]
   2ec08:	umull	r3, r7, r4, r8
   2ec0c:	umull	r3, r5, r1, r8
   2ec10:	mov	lr, #0
   2ec14:	umull	r4, r6, r4, r0
   2ec18:	adds	r3, r3, r7
   2ec1c:	adc	r7, lr, #0
   2ec20:	umaal	r5, r6, r1, r0
   2ec24:	mov	r1, #9
   2ec28:	adds	r3, r3, r4
   2ec2c:	adc	r4, r7, #0
   2ec30:	adds	r0, r3, #-2147483648	; 0x80000000
   2ec34:	adcs	r4, r5, r4
   2ec38:	adc	r3, r6, #0
   2ec3c:	cmp	sl, #0
   2ec40:	orr	r0, r4, r3
   2ec44:	movweq	r1, #8
   2ec48:	cmp	r0, #0
   2ec4c:	beq	2eeb4 <grisu3_diy_fp_encode_double@@Base+0x40c>
   2ec50:	ldrsh	r0, [r9, #8]
   2ec54:	cmp	lr, r3, lsr #22
   2ec58:	add	r0, r0, ip
   2ec5c:	add	r5, r0, #64	; 0x40
   2ec60:	mov	r0, r5
   2ec64:	bne	2ec80 <grisu3_diy_fp_encode_double@@Base+0x1d8>
   2ec68:	lsl	r3, r3, #10
   2ec6c:	sub	r0, r0, #10
   2ec70:	orr	r3, r3, r4, lsr #22
   2ec74:	lsl	r4, r4, #10
   2ec78:	cmp	r3, #4194304	; 0x400000
   2ec7c:	bcc	2ec68 <grisu3_diy_fp_encode_double@@Base+0x1c0>
   2ec80:	add	r7, r1, sl
   2ec84:	subs	r1, r2, r4
   2ec88:	sbcs	r1, r2, r3
   2ec8c:	bge	2ece0 <grisu3_diy_fp_encode_double@@Base+0x238>
   2ec90:	lsl	r1, r3, #1
   2ec94:	subs	r6, r2, r4, lsl #1
   2ec98:	sub	r0, r0, #1
   2ec9c:	orr	r3, r1, r4, lsr #31
   2eca0:	lsl	r1, r4, #1
   2eca4:	mov	r4, r1
   2eca8:	sbcs	r6, r2, r3
   2ecac:	blt	2ec90 <grisu3_diy_fp_encode_double@@Base+0x1e8>
   2ecb0:	b	2ece4 <grisu3_diy_fp_encode_double@@Base+0x23c>
   2ecb4:	mov	r4, r0
   2ecb8:	cmn	r5, #348	; 0x15c
   2ecbc:	bge	2eb2c <grisu3_diy_fp_encode_double@@Base+0x84>
   2ecc0:	ldr	r0, [pc, #660]	; 2ef5c <grisu3_diy_fp_encode_double@@Base+0x4b4>
   2ecc4:	ldr	r1, [pc, #660]	; 2ef60 <grisu3_diy_fp_encode_double@@Base+0x4b8>
   2ecc8:	ldr	r3, [pc, #660]	; 2ef64 <grisu3_diy_fp_encode_double@@Base+0x4bc>
   2eccc:	mov	r2, #80	; 0x50
   2ecd0:	add	r0, pc, r0
   2ecd4:	add	r1, pc, r1
   2ecd8:	add	r3, pc, r3
   2ecdc:	bl	12bbc <__assert_fail@plt>
   2ece0:	mov	r1, r4
   2ece4:	movw	lr, #64462	; 0xfbce
   2ece8:	sub	r2, r5, r0
   2ecec:	mov	r5, #0
   2ecf0:	movt	lr, #65535	; 0xffff
   2ecf4:	lsl	ip, r7, r2
   2ecf8:	add	r2, r0, #64	; 0x40
   2ecfc:	add	r4, lr, #63	; 0x3f
   2ed00:	cmp	r2, r4
   2ed04:	bgt	2ed54 <grisu3_diy_fp_encode_double@@Base+0x2ac>
   2ed08:	mvn	r4, #1072	; 0x430
   2ed0c:	mov	r5, #64	; 0x40
   2ed10:	cmp	r2, r4
   2ed14:	blt	2ed24 <grisu3_diy_fp_encode_double@@Base+0x27c>
   2ed18:	sub	r5, lr, r0
   2ed1c:	cmp	r5, #61	; 0x3d
   2ed20:	blt	2ed54 <grisu3_diy_fp_encode_double@@Base+0x2ac>
   2ed24:	sub	r2, r5, #62	; 0x3e
   2ed28:	mov	r4, #9
   2ed2c:	add	ip, r4, ip, asr r2
   2ed30:	lsr	r1, r1, r2
   2ed34:	rsb	r4, r5, #94	; 0x5e
   2ed38:	add	r0, r2, r0
   2ed3c:	orr	r1, r1, r3, lsl r4
   2ed40:	subs	r4, r5, #94	; 0x5e
   2ed44:	mov	r5, #62	; 0x3e
   2ed48:	lsrpl	r1, r3, r4
   2ed4c:	lsr	r3, r3, r2
   2ed50:	movwpl	r3, #0
   2ed54:	lsr	r2, r1, r5
   2ed58:	rsb	r4, r5, #32
   2ed5c:	lsr	r6, r3, r5
   2ed60:	add	r0, r0, r5
   2ed64:	orr	r2, r2, r3, lsl r4
   2ed68:	subs	r4, r5, #32
   2ed6c:	lsrpl	r2, r3, r4
   2ed70:	sub	r3, r5, #1
   2ed74:	mov	r4, #1
   2ed78:	movwpl	r6, #0
   2ed7c:	lsl	r4, r4, r3
   2ed80:	subs	r3, r5, #33	; 0x21
   2ed84:	movwpl	r4, #0
   2ed88:	add	r3, ip, r4, lsl #3
   2ed8c:	cmp	r5, r3
   2ed90:	blt	2edb0 <grisu3_diy_fp_encode_double@@Base+0x308>
   2ed94:	adds	r2, r2, #1
   2ed98:	adc	r6, r6, #0
   2ed9c:	tst	r6, #2097152	; 0x200000
   2eda0:	beq	2edb0 <grisu3_diy_fp_encode_double@@Base+0x308>
   2eda4:	lsrs	r6, r6, #1
   2eda8:	rrx	r2, r2
   2edac:	add	r0, r0, #1
   2edb0:	and	r1, r4, r1
   2edb4:	cmp	r6, #2097152	; 0x200000
   2edb8:	bcc	2eddc <grisu3_diy_fp_encode_double@@Base+0x334>
   2edbc:	mov	r5, #0
   2edc0:	lsrs	r7, r6, #1
   2edc4:	rrx	r2, r2
   2edc8:	cmp	r5, r6, lsr #22
   2edcc:	add	r0, r0, #1
   2edd0:	mov	r6, r7
   2edd4:	bne	2edc0 <grisu3_diy_fp_encode_double@@Base+0x318>
   2edd8:	b	2ede0 <grisu3_diy_fp_encode_double@@Base+0x338>
   2eddc:	mov	r7, r6
   2ede0:	ldr	r8, [fp, #12]
   2ede4:	vmov.i32	d16, #0	; 0x00000000
   2ede8:	lsl	r9, r4, #3
   2edec:	lsl	r1, r1, #3
   2edf0:	cmp	r0, lr
   2edf4:	blt	2ee88 <grisu3_diy_fp_encode_double@@Base+0x3e0>
   2edf8:	and	r4, r7, #1048576	; 0x100000
   2edfc:	mov	r5, #1
   2ee00:	cmp	r0, lr
   2ee04:	eor	r5, r5, r4, lsr #20
   2ee08:	beq	2ee4c <grisu3_diy_fp_encode_double@@Base+0x3a4>
   2ee0c:	cmp	r4, #0
   2ee10:	bne	2ee4c <grisu3_diy_fp_encode_double@@Base+0x3a4>
   2ee14:	mov	r4, #1
   2ee18:	lsl	r5, r7, #1
   2ee1c:	sub	r0, r0, #1
   2ee20:	orr	r6, r5, r2, lsr #31
   2ee24:	ands	r5, r7, #524288	; 0x80000
   2ee28:	lsl	r2, r2, #1
   2ee2c:	eor	r5, r4, r5, lsr #19
   2ee30:	bne	2ee40 <grisu3_diy_fp_encode_double@@Base+0x398>
   2ee34:	cmp	r0, lr
   2ee38:	mov	r7, r6
   2ee3c:	bgt	2ee18 <grisu3_diy_fp_encode_double@@Base+0x370>
   2ee40:	cmp	r0, lr
   2ee44:	beq	2ee58 <grisu3_diy_fp_encode_double@@Base+0x3b0>
   2ee48:	b	2ee68 <grisu3_diy_fp_encode_double@@Base+0x3c0>
   2ee4c:	mov	r6, r7
   2ee50:	cmp	r0, lr
   2ee54:	bne	2ee68 <grisu3_diy_fp_encode_double@@Base+0x3c0>
   2ee58:	cmp	r5, #0
   2ee5c:	mov	r7, #0
   2ee60:	mov	r5, #0
   2ee64:	bne	2ee78 <grisu3_diy_fp_encode_double@@Base+0x3d0>
   2ee68:	movw	r7, #1075	; 0x433
   2ee6c:	add	r0, r0, r7
   2ee70:	mov	r7, #0
   2ee74:	lsl	r5, r0, #20
   2ee78:	bfc	r6, #20, #12
   2ee7c:	orr	r0, r7, r2
   2ee80:	orr	r2, r5, r6
   2ee84:	vmov	d16, r0, r2
   2ee88:	cmp	r1, r3
   2ee8c:	sub	r3, r9, ip
   2ee90:	mov	r2, #0
   2ee94:	mov	r0, #0
   2ee98:	vstr	d16, [r8]
   2ee9c:	movwge	r2, #1
   2eea0:	cmp	r3, r1
   2eea4:	movwge	r0, #1
   2eea8:	orr	r0, r2, r0
   2eeac:	sub	sp, fp, #28
   2eeb0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2eeb4:	ldr	r0, [pc, #220]	; 2ef98 <grisu3_diy_fp_encode_double@@Base+0x4f0>
   2eeb8:	ldr	r1, [pc, #220]	; 2ef9c <grisu3_diy_fp_encode_double@@Base+0x4f4>
   2eebc:	ldr	r3, [pc, #220]	; 2efa0 <grisu3_diy_fp_encode_double@@Base+0x4f8>
   2eec0:	mov	r2, #260	; 0x104
   2eec4:	add	r0, pc, r0
   2eec8:	add	r1, pc, r1
   2eecc:	add	r3, pc, r3
   2eed0:	bl	12bbc <__assert_fail@plt>
   2eed4:	ldr	r0, [pc, #140]	; 2ef68 <grisu3_diy_fp_encode_double@@Base+0x4c0>
   2eed8:	ldr	r1, [pc, #140]	; 2ef6c <grisu3_diy_fp_encode_double@@Base+0x4c4>
   2eedc:	ldr	r3, [pc, #140]	; 2ef70 <grisu3_diy_fp_encode_double@@Base+0x4c8>
   2eee0:	mov	r2, #81	; 0x51
   2eee4:	add	r0, pc, r0
   2eee8:	add	r1, pc, r1
   2eeec:	add	r3, pc, r3
   2eef0:	bl	12bbc <__assert_fail@plt>
   2eef4:	ldr	r0, [pc, #120]	; 2ef74 <grisu3_diy_fp_encode_double@@Base+0x4cc>
   2eef8:	ldr	r1, [pc, #120]	; 2ef78 <grisu3_diy_fp_encode_double@@Base+0x4d0>
   2eefc:	ldr	r3, [pc, #120]	; 2ef7c <grisu3_diy_fp_encode_double@@Base+0x4d4>
   2ef00:	mov	r2, #88	; 0x58
   2ef04:	add	r0, pc, r0
   2ef08:	add	r1, pc, r1
   2ef0c:	add	r3, pc, r3
   2ef10:	bl	12bbc <__assert_fail@plt>
   2ef14:	ldr	r0, [pc, #100]	; 2ef80 <grisu3_diy_fp_encode_double@@Base+0x4d8>
   2ef18:	ldr	r1, [pc, #100]	; 2ef84 <grisu3_diy_fp_encode_double@@Base+0x4dc>
   2ef1c:	ldr	r3, [pc, #100]	; 2ef88 <grisu3_diy_fp_encode_double@@Base+0x4e0>
   2ef20:	mov	r2, #89	; 0x59
   2ef24:	add	r0, pc, r0
   2ef28:	add	r1, pc, r1
   2ef2c:	add	r3, pc, r3
   2ef30:	bl	12bbc <__assert_fail@plt>
   2ef34:	ldr	r0, [pc, #80]	; 2ef8c <grisu3_diy_fp_encode_double@@Base+0x4e4>
   2ef38:	ldr	r1, [pc, #80]	; 2ef90 <grisu3_diy_fp_encode_double@@Base+0x4e8>
   2ef3c:	ldr	r3, [pc, #80]	; 2ef94 <grisu3_diy_fp_encode_double@@Base+0x4ec>
   2ef40:	mov	r2, #185	; 0xb9
   2ef44:	add	r0, pc, r0
   2ef48:	add	r1, pc, r1
   2ef4c:	add	r3, pc, r3
   2ef50:	bl	12bbc <__assert_fail@plt>
   2ef54:	andeq	r6, r0, r4, lsl #9
   2ef58:	andeq	r6, r0, r4, asr #7
   2ef5c:	andeq	r7, r0, ip, lsr #1
   2ef60:	andeq	r6, r0, r8, lsl #21
   2ef64:	andeq	r7, r0, r3, asr #1
   2ef68:	strdeq	r6, [r0], -r0
   2ef6c:	andeq	r6, r0, r4, ror r8
   2ef70:	andeq	r6, r0, pc, lsr #29
   2ef74:	strdeq	r6, [r0], -fp
   2ef78:	andeq	r6, r0, r4, asr r8
   2ef7c:	andeq	r6, r0, pc, lsl #29
   2ef80:	andeq	r6, r0, sl, ror #29
   2ef84:	andeq	r6, r0, r4, lsr r8
   2ef88:	andeq	r6, r0, pc, ror #28
   2ef8c:	strdeq	r6, [r0], -ip
   2ef90:	andeq	r6, r0, r4, lsl r8
   2ef94:	andeq	r6, r0, lr, ror r8
   2ef98:	andeq	r6, r0, r9, lsl #28
   2ef9c:	andeq	r6, r0, lr, lsl #28
   2efa0:	andeq	r6, r0, r7, ror lr

0002efa4 <flatcc_json_parser_error_string@@Base>:
   2efa4:	cmp	r0, #34	; 0x22
   2efa8:	bhi	2efbc <flatcc_json_parser_error_string@@Base+0x18>
   2efac:	ldr	r1, [pc, #20]	; 2efc8 <flatcc_json_parser_error_string@@Base+0x24>
   2efb0:	add	r1, pc, r1
   2efb4:	ldr	r0, [r1, r0, lsl #2]
   2efb8:	bx	lr
   2efbc:	ldr	r0, [pc, #8]	; 2efcc <flatcc_json_parser_error_string@@Base+0x28>
   2efc0:	add	r0, pc, r0
   2efc4:	bx	lr
   2efc8:	andeq	r6, r1, ip, asr #29
   2efcc:	ldrdeq	r6, [r0], -r0

0002efd0 <flatcc_json_parser_set_error@@Base>:
   2efd0:	mov	ip, r2
   2efd4:	ldr	r2, [r0, #24]
   2efd8:	cmp	r2, #0
   2efdc:	beq	2efe8 <flatcc_json_parser_set_error@@Base+0x18>
   2efe0:	mov	r0, ip
   2efe4:	bx	lr
   2efe8:	str	r1, [r0, #36]	; 0x24
   2efec:	ldr	r2, [r0, #4]
   2eff0:	sub	r1, r1, r2
   2eff4:	add	r1, r1, #1
   2eff8:	str	r1, [r0, #20]
   2effc:	str	r3, [r0, #24]
   2f000:	mov	r0, ip
   2f004:	bx	lr

0002f008 <flatcc_json_parser_string_part@@Base>:
   2f008:	cmp	r1, r2
   2f00c:	beq	2f038 <flatcc_json_parser_string_part@@Base+0x30>
   2f010:	ldrb	r3, [r1]
   2f014:	cmp	r3, #32
   2f018:	bcc	2f06c <flatcc_json_parser_string_part@@Base+0x64>
   2f01c:	cmp	r3, #34	; 0x22
   2f020:	cmpne	r3, #92	; 0x5c
   2f024:	beq	2f064 <flatcc_json_parser_string_part@@Base+0x5c>
   2f028:	add	r1, r1, #1
   2f02c:	cmp	r2, r1
   2f030:	bne	2f010 <flatcc_json_parser_string_part@@Base+0x8>
   2f034:	mov	r1, r2
   2f038:	ldr	r3, [r0, #24]
   2f03c:	cmp	r3, #0
   2f040:	bne	2f060 <flatcc_json_parser_string_part@@Base+0x58>
   2f044:	mov	ip, #20
   2f048:	str	r1, [r0, #36]	; 0x24
   2f04c:	ldr	r3, [r0, #4]
   2f050:	sub	r1, r1, r3
   2f054:	add	r1, r1, #1
   2f058:	str	r1, [r0, #20]
   2f05c:	str	ip, [r0, #24]
   2f060:	mov	r1, r2
   2f064:	mov	r0, r1
   2f068:	bx	lr
   2f06c:	ldr	r3, [r0, #24]
   2f070:	cmp	r3, #0
   2f074:	bne	2f060 <flatcc_json_parser_string_part@@Base+0x58>
   2f078:	mov	ip, #17
   2f07c:	b	2f048 <flatcc_json_parser_string_part@@Base+0x40>

0002f080 <flatcc_json_parser_space_ext@@Base>:
   2f080:	mov	ip, r2
   2f084:	cmp	r1, r2
   2f088:	beq	2f190 <flatcc_json_parser_space_ext@@Base+0x110>
   2f08c:	ldrb	r3, [r1]
   2f090:	cmp	r3, #32
   2f094:	bne	2f0c0 <flatcc_json_parser_space_ext@@Base+0x40>
   2f098:	add	r1, r1, #1
   2f09c:	cmp	r1, ip
   2f0a0:	bne	2f08c <flatcc_json_parser_space_ext@@Base+0xc>
   2f0a4:	b	2f190 <flatcc_json_parser_space_ext@@Base+0x110>
   2f0a8:	add	r1, r1, r3
   2f0ac:	add	r1, r1, #1
   2f0b0:	str	r1, [r0, #4]
   2f0b4:	ldr	r2, [r0, #16]
   2f0b8:	add	r2, r2, #1
   2f0bc:	str	r2, [r0, #16]
   2f0c0:	cmp	r1, ip
   2f0c4:	bne	2f0d8 <flatcc_json_parser_space_ext@@Base+0x58>
   2f0c8:	b	2f190 <flatcc_json_parser_space_ext@@Base+0x110>
   2f0cc:	add	r1, r1, #1
   2f0d0:	cmp	r1, ip
   2f0d4:	beq	2f190 <flatcc_json_parser_space_ext@@Base+0x110>
   2f0d8:	ldrb	r3, [r1]
   2f0dc:	cmp	r3, #32
   2f0e0:	movhi	r0, r1
   2f0e4:	bxhi	lr
   2f0e8:	sub	r3, r3, #9
   2f0ec:	cmp	r3, #23
   2f0f0:	bhi	2f184 <flatcc_json_parser_space_ext@@Base+0x104>
   2f0f4:	add	r2, pc, #4
   2f0f8:	ldr	r3, [r2, r3, lsl #2]
   2f0fc:	add	pc, r2, r3
   2f100:			; <UNDEFINED> instruction: 0xffffffcc
   2f104:			; <UNDEFINED> instruction: 0xffffffac
   2f108:	andeq	r0, r0, r4, lsl #1
   2f10c:	andeq	r0, r0, r4, lsl #1
   2f110:	andeq	r0, r0, r0, rrx
   2f114:	andeq	r0, r0, r4, lsl #1
   2f118:	andeq	r0, r0, r4, lsl #1
   2f11c:	andeq	r0, r0, r4, lsl #1
   2f120:	andeq	r0, r0, r4, lsl #1
   2f124:	andeq	r0, r0, r4, lsl #1
   2f128:	andeq	r0, r0, r4, lsl #1
   2f12c:	andeq	r0, r0, r4, lsl #1
   2f130:	andeq	r0, r0, r4, lsl #1
   2f134:	andeq	r0, r0, r4, lsl #1
   2f138:	andeq	r0, r0, r4, lsl #1
   2f13c:	andeq	r0, r0, r4, lsl #1
   2f140:	andeq	r0, r0, r4, lsl #1
   2f144:	andeq	r0, r0, r4, lsl #1
   2f148:	andeq	r0, r0, r4, lsl #1
   2f14c:	andeq	r0, r0, r4, lsl #1
   2f150:	andeq	r0, r0, r4, lsl #1
   2f154:	andeq	r0, r0, r4, lsl #1
   2f158:	andeq	r0, r0, r4, lsl #1
   2f15c:			; <UNDEFINED> instruction: 0xffffff9c
   2f160:	sub	r2, ip, r1
   2f164:	mov	r3, #0
   2f168:	cmp	r2, #2
   2f16c:	blt	2f0a8 <flatcc_json_parser_space_ext@@Base+0x28>
   2f170:	ldrb	r2, [r1, #1]
   2f174:	sub	r2, r2, #10
   2f178:	clz	r2, r2
   2f17c:	lsr	r3, r2, #5
   2f180:	b	2f0a8 <flatcc_json_parser_space_ext@@Base+0x28>
   2f184:	ldr	r2, [r0, #24]
   2f188:	cmp	r2, #0
   2f18c:	beq	2f198 <flatcc_json_parser_space_ext@@Base+0x118>
   2f190:	mov	r0, ip
   2f194:	bx	lr
   2f198:	str	r1, [r0, #36]	; 0x24
   2f19c:	mov	r2, #5
   2f1a0:	ldr	r3, [r0, #4]
   2f1a4:	sub	r1, r1, r3
   2f1a8:	add	r1, r1, #1
   2f1ac:	str	r1, [r0, #20]
   2f1b0:	str	r2, [r0, #24]
   2f1b4:	mov	r0, ip
   2f1b8:	bx	lr

0002f1bc <flatcc_json_parser_string_escape@@Base>:
   2f1bc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2f1c0:	add	fp, sp, #24
   2f1c4:	sub	r7, r2, r1
   2f1c8:	cmp	r7, #2
   2f1cc:	blt	2f3d4 <flatcc_json_parser_string_escape@@Base+0x218>
   2f1d0:	ldrb	r6, [r1]
   2f1d4:	cmp	r6, #92	; 0x5c
   2f1d8:	bne	2f3d4 <flatcc_json_parser_string_escape@@Base+0x218>
   2f1dc:	ldrb	r6, [r1, #1]
   2f1e0:	sub	r6, r6, #34	; 0x22
   2f1e4:	cmp	r6, #86	; 0x56
   2f1e8:	bhi	2f3d4 <flatcc_json_parser_string_escape@@Base+0x218>
   2f1ec:	add	r5, pc, #4
   2f1f0:	ldr	r6, [r5, r6, lsl #2]
   2f1f4:	add	pc, r5, r6
   2f1f8:	andeq	r0, r0, ip, asr r1
   2f1fc:	ldrdeq	r0, [r0], -ip
   2f200:	ldrdeq	r0, [r0], -ip
   2f204:	ldrdeq	r0, [r0], -ip
   2f208:	ldrdeq	r0, [r0], -ip
   2f20c:	ldrdeq	r0, [r0], -ip
   2f210:	ldrdeq	r0, [r0], -ip
   2f214:	ldrdeq	r0, [r0], -ip
   2f218:	ldrdeq	r0, [r0], -ip
   2f21c:	ldrdeq	r0, [r0], -ip
   2f220:	ldrdeq	r0, [r0], -ip
   2f224:	ldrdeq	r0, [r0], -ip
   2f228:	ldrdeq	r0, [r0], -ip
   2f22c:	andeq	r0, r0, r4, ror #2
   2f230:	ldrdeq	r0, [r0], -ip
   2f234:	ldrdeq	r0, [r0], -ip
   2f238:	ldrdeq	r0, [r0], -ip
   2f23c:	ldrdeq	r0, [r0], -ip
   2f240:	ldrdeq	r0, [r0], -ip
   2f244:	ldrdeq	r0, [r0], -ip
   2f248:	ldrdeq	r0, [r0], -ip
   2f24c:	ldrdeq	r0, [r0], -ip
   2f250:	ldrdeq	r0, [r0], -ip
   2f254:	ldrdeq	r0, [r0], -ip
   2f258:	ldrdeq	r0, [r0], -ip
   2f25c:	ldrdeq	r0, [r0], -ip
   2f260:	ldrdeq	r0, [r0], -ip
   2f264:	ldrdeq	r0, [r0], -ip
   2f268:	ldrdeq	r0, [r0], -ip
   2f26c:	ldrdeq	r0, [r0], -ip
   2f270:	ldrdeq	r0, [r0], -ip
   2f274:	ldrdeq	r0, [r0], -ip
   2f278:	ldrdeq	r0, [r0], -ip
   2f27c:	ldrdeq	r0, [r0], -ip
   2f280:	ldrdeq	r0, [r0], -ip
   2f284:	ldrdeq	r0, [r0], -ip
   2f288:	ldrdeq	r0, [r0], -ip
   2f28c:	ldrdeq	r0, [r0], -ip
   2f290:	ldrdeq	r0, [r0], -ip
   2f294:	ldrdeq	r0, [r0], -ip
   2f298:	ldrdeq	r0, [r0], -ip
   2f29c:	ldrdeq	r0, [r0], -ip
   2f2a0:	ldrdeq	r0, [r0], -ip
   2f2a4:	ldrdeq	r0, [r0], -ip
   2f2a8:	ldrdeq	r0, [r0], -ip
   2f2ac:	ldrdeq	r0, [r0], -ip
   2f2b0:	ldrdeq	r0, [r0], -ip
   2f2b4:	ldrdeq	r0, [r0], -ip
   2f2b8:	ldrdeq	r0, [r0], -ip
   2f2bc:	ldrdeq	r0, [r0], -ip
   2f2c0:	ldrdeq	r0, [r0], -ip
   2f2c4:	ldrdeq	r0, [r0], -ip
   2f2c8:	ldrdeq	r0, [r0], -ip
   2f2cc:	ldrdeq	r0, [r0], -ip
   2f2d0:	ldrdeq	r0, [r0], -ip
   2f2d4:	ldrdeq	r0, [r0], -ip
   2f2d8:	ldrdeq	r0, [r0], -ip
   2f2dc:	ldrdeq	r0, [r0], -ip
   2f2e0:	andeq	r0, r0, ip, ror #2
   2f2e4:	ldrdeq	r0, [r0], -ip
   2f2e8:	ldrdeq	r0, [r0], -ip
   2f2ec:	ldrdeq	r0, [r0], -ip
   2f2f0:	ldrdeq	r0, [r0], -ip
   2f2f4:	ldrdeq	r0, [r0], -ip
   2f2f8:	andeq	r0, r0, r4, ror r1
   2f2fc:	ldrdeq	r0, [r0], -ip
   2f300:	ldrdeq	r0, [r0], -ip
   2f304:	ldrdeq	r0, [r0], -ip
   2f308:	andeq	r0, r0, ip, ror r1
   2f30c:	ldrdeq	r0, [r0], -ip
   2f310:	ldrdeq	r0, [r0], -ip
   2f314:	ldrdeq	r0, [r0], -ip
   2f318:	ldrdeq	r0, [r0], -ip
   2f31c:	ldrdeq	r0, [r0], -ip
   2f320:	ldrdeq	r0, [r0], -ip
   2f324:	ldrdeq	r0, [r0], -ip
   2f328:	andeq	r0, r0, r4, lsl #3
   2f32c:	ldrdeq	r0, [r0], -ip
   2f330:	ldrdeq	r0, [r0], -ip
   2f334:	ldrdeq	r0, [r0], -ip
   2f338:	andeq	r0, r0, ip, lsl #3
   2f33c:	ldrdeq	r0, [r0], -ip
   2f340:	muleq	r0, r4, r1
   2f344:	andeq	r0, r0, r8, lsr #3
   2f348:	ldrdeq	r0, [r0], -ip
   2f34c:	ldrdeq	r0, [r0], -ip
   2f350:	andeq	r0, r0, ip, asr #3
   2f354:	movw	r0, #8705	; 0x2201
   2f358:	b	2f390 <flatcc_json_parser_string_escape@@Base+0x1d4>
   2f35c:	movw	r0, #12033	; 0x2f01
   2f360:	b	2f390 <flatcc_json_parser_string_escape@@Base+0x1d4>
   2f364:	movw	r0, #23553	; 0x5c01
   2f368:	b	2f390 <flatcc_json_parser_string_escape@@Base+0x1d4>
   2f36c:	movw	r0, #2049	; 0x801
   2f370:	b	2f390 <flatcc_json_parser_string_escape@@Base+0x1d4>
   2f374:	movw	r0, #3073	; 0xc01
   2f378:	b	2f390 <flatcc_json_parser_string_escape@@Base+0x1d4>
   2f37c:	movw	r0, #2561	; 0xa01
   2f380:	b	2f390 <flatcc_json_parser_string_escape@@Base+0x1d4>
   2f384:	movw	r0, #3329	; 0xd01
   2f388:	b	2f390 <flatcc_json_parser_string_escape@@Base+0x1d4>
   2f38c:	movw	r0, #2305	; 0x901
   2f390:	add	r2, r1, #2
   2f394:	strh	r0, [r3]
   2f398:	mov	r0, r2
   2f39c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2f3a0:	cmp	r7, #5
   2f3a4:	ble	2f3d4 <flatcc_json_parser_string_escape@@Base+0x218>
   2f3a8:	ldrb	r7, [r1, #2]
   2f3ac:	sub	r6, r7, #48	; 0x30
   2f3b0:	uxtb	r6, r6
   2f3b4:	cmp	r6, #9
   2f3b8:	bhi	2f430 <flatcc_json_parser_string_escape@@Base+0x274>
   2f3bc:	lsl	ip, r7, #12
   2f3c0:	b	2f450 <flatcc_json_parser_string_escape@@Base+0x294>
   2f3c4:	mov	r6, #1
   2f3c8:	cmp	r7, #3
   2f3cc:	strb	r6, [r3]
   2f3d0:	bgt	2f414 <flatcc_json_parser_string_escape@@Base+0x258>
   2f3d4:	mov	r7, #0
   2f3d8:	strb	r7, [r3]
   2f3dc:	ldr	r3, [r0, #24]
   2f3e0:	cmp	r3, #0
   2f3e4:	beq	2f3f0 <flatcc_json_parser_string_escape@@Base+0x234>
   2f3e8:	mov	r0, r2
   2f3ec:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2f3f0:	str	r1, [r0, #36]	; 0x24
   2f3f4:	mov	r3, #18
   2f3f8:	ldr	r7, [r0, #4]
   2f3fc:	sub	r1, r1, r7
   2f400:	add	r1, r1, #1
   2f404:	str	r1, [r0, #20]
   2f408:	str	r3, [r0, #24]
   2f40c:	mov	r0, r2
   2f410:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2f414:	ldrb	r7, [r1, #2]
   2f418:	sub	r6, r7, #48	; 0x30
   2f41c:	uxtb	r6, r6
   2f420:	cmp	r6, #9
   2f424:	bhi	2f46c <flatcc_json_parser_string_escape@@Base+0x2b0>
   2f428:	lsl	r7, r7, #4
   2f42c:	b	2f488 <flatcc_json_parser_string_escape@@Base+0x2cc>
   2f430:	orr	r6, r7, #32
   2f434:	sub	r6, r6, #97	; 0x61
   2f438:	uxtb	r6, r6
   2f43c:	cmp	r6, #5
   2f440:	bhi	2f3d4 <flatcc_json_parser_string_escape@@Base+0x218>
   2f444:	movw	r6, #36864	; 0x9000
   2f448:	movt	r6, #65535	; 0xffff
   2f44c:	add	ip, r6, r7, lsl #12
   2f450:	ldrb	lr, [r1, #3]
   2f454:	sub	r4, lr, #48	; 0x30
   2f458:	uxtb	r4, r4
   2f45c:	cmp	r4, #10
   2f460:	bcs	2f4c8 <flatcc_json_parser_string_escape@@Base+0x30c>
   2f464:	mov	r8, #53248	; 0xd000
   2f468:	b	2f4e0 <flatcc_json_parser_string_escape@@Base+0x324>
   2f46c:	orr	r6, r7, #32
   2f470:	sub	r6, r6, #97	; 0x61
   2f474:	uxtb	r6, r6
   2f478:	cmp	r6, #5
   2f47c:	bhi	2f3d4 <flatcc_json_parser_string_escape@@Base+0x218>
   2f480:	mvn	r6, #111	; 0x6f
   2f484:	add	r7, r6, r7, lsl #4
   2f488:	ldrb	r5, [r1, #3]
   2f48c:	sub	r6, r5, #48	; 0x30
   2f490:	uxtb	r4, r6
   2f494:	cmp	r4, #10
   2f498:	bcc	2f4b4 <flatcc_json_parser_string_escape@@Base+0x2f8>
   2f49c:	orr	r6, r5, #32
   2f4a0:	sub	r5, r6, #97	; 0x61
   2f4a4:	uxtb	r5, r5
   2f4a8:	cmp	r5, #5
   2f4ac:	bhi	2f3d4 <flatcc_json_parser_string_escape@@Base+0x218>
   2f4b0:	sub	r6, r6, #87	; 0x57
   2f4b4:	orr	r0, r6, r7
   2f4b8:	add	r2, r1, #4
   2f4bc:	strb	r0, [r3, #1]
   2f4c0:	mov	r0, r2
   2f4c4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2f4c8:	orr	lr, lr, #32
   2f4cc:	mov	r8, #43264	; 0xa900
   2f4d0:	sub	r4, lr, #97	; 0x61
   2f4d4:	uxtb	r4, r4
   2f4d8:	cmp	r4, #6
   2f4dc:	bcs	2f3d4 <flatcc_json_parser_string_escape@@Base+0x218>
   2f4e0:	ldrb	r5, [r1, #4]
   2f4e4:	sub	r4, r5, #48	; 0x30
   2f4e8:	uxtb	r4, r4
   2f4ec:	cmp	r4, #10
   2f4f0:	bcs	2f4fc <flatcc_json_parser_string_escape@@Base+0x340>
   2f4f4:	mov	r9, #64768	; 0xfd00
   2f4f8:	b	2f514 <flatcc_json_parser_string_escape@@Base+0x358>
   2f4fc:	orr	r5, r5, #32
   2f500:	movw	r9, #64144	; 0xfa90
   2f504:	sub	r4, r5, #97	; 0x61
   2f508:	uxtb	r4, r4
   2f50c:	cmp	r4, #6
   2f510:	bcs	2f3d4 <flatcc_json_parser_string_escape@@Base+0x218>
   2f514:	ldrb	r7, [r1, #5]
   2f518:	sub	r4, r7, #48	; 0x30
   2f51c:	uxtb	r4, r4
   2f520:	cmp	r4, #10
   2f524:	bcs	2f534 <flatcc_json_parser_string_escape@@Base+0x378>
   2f528:	mvn	r0, #86	; 0x56
   2f52c:	add	r4, r0, #39	; 0x27
   2f530:	b	2f54c <flatcc_json_parser_string_escape@@Base+0x390>
   2f534:	orr	r7, r7, #32
   2f538:	movw	r4, #65449	; 0xffa9
   2f53c:	sub	r6, r7, #97	; 0x61
   2f540:	uxtb	r6, r6
   2f544:	cmp	r6, #6
   2f548:	bcs	2f3d4 <flatcc_json_parser_string_escape@@Base+0x218>
   2f54c:	add	r0, r8, lr, lsl #8
   2f550:	add	r2, r9, r5, lsl #4
   2f554:	orr	r0, r0, ip
   2f558:	orr	r0, r0, r2
   2f55c:	add	r2, r4, r7
   2f560:	orr	r0, r0, r2
   2f564:	uxth	r7, r0
   2f568:	cmp	r7, #127	; 0x7f
   2f56c:	bhi	2f57c <flatcc_json_parser_string_escape@@Base+0x3c0>
   2f570:	mov	r2, #1
   2f574:	strb	r2, [r3]
   2f578:	b	2f5cc <flatcc_json_parser_string_escape@@Base+0x410>
   2f57c:	mov	r2, #0
   2f580:	cmp	r2, r7, lsr #11
   2f584:	bne	2f5a0 <flatcc_json_parser_string_escape@@Base+0x3e4>
   2f588:	mov	r7, #192	; 0xc0
   2f58c:	mov	r2, #2
   2f590:	orr	r7, r7, r0, lsr #6
   2f594:	strb	r2, [r3]
   2f598:	strb	r7, [r3, #1]
   2f59c:	b	2f5c4 <flatcc_json_parser_string_escape@@Base+0x408>
   2f5a0:	mov	r6, #224	; 0xe0
   2f5a4:	mov	r2, #3
   2f5a8:	orr	r6, r6, r7, lsr #12
   2f5ac:	strb	r2, [r3]
   2f5b0:	lsr	r7, r7, #6
   2f5b4:	strb	r6, [r3, #1]
   2f5b8:	mov	r6, #2
   2f5bc:	bfi	r7, r6, #6, #26
   2f5c0:	strb	r7, [r3, #2]
   2f5c4:	mvn	r7, #-67108863	; 0xfc000001
   2f5c8:	bfi	r0, r7, #6, #26
   2f5cc:	strb	r0, [r3, r2]
   2f5d0:	add	r2, r1, #6
   2f5d4:	mov	r0, r2
   2f5d8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0002f5dc <flatcc_json_parser_skip_constant@@Base>:
   2f5dc:	push	{r4, r5, r6, sl, fp, lr}
   2f5e0:	add	fp, sp, #16
   2f5e4:	cmp	r1, r2
   2f5e8:	beq	2f69c <flatcc_json_parser_skip_constant@@Base+0xc0>
   2f5ec:	mov	r4, r2
   2f5f0:	mov	r5, r0
   2f5f4:	ldrsb	r0, [r1]
   2f5f8:	mov	r6, r1
   2f5fc:	cmp	r0, #0
   2f600:	bmi	2f614 <flatcc_json_parser_skip_constant@@Base+0x38>
   2f604:	uxtb	r0, r0
   2f608:	cmp	r0, #95	; 0x5f
   2f60c:	cmpne	r0, #46	; 0x2e
   2f610:	bne	2f624 <flatcc_json_parser_skip_constant@@Base+0x48>
   2f614:	add	r1, r6, #1
   2f618:	cmp	r1, r4
   2f61c:	bne	2f5f4 <flatcc_json_parser_skip_constant@@Base+0x18>
   2f620:	b	2f694 <flatcc_json_parser_skip_constant@@Base+0xb8>
   2f624:	sub	r1, r0, #48	; 0x30
   2f628:	uxtb	r1, r1
   2f62c:	cmp	r1, #9
   2f630:	bls	2f614 <flatcc_json_parser_skip_constant@@Base+0x38>
   2f634:	orr	r1, r0, #32
   2f638:	sub	r1, r1, #97	; 0x61
   2f63c:	uxtb	r1, r1
   2f640:	cmp	r1, #25
   2f644:	bls	2f614 <flatcc_json_parser_skip_constant@@Base+0x38>
   2f648:	sub	r1, r4, r6
   2f64c:	cmp	r1, #2
   2f650:	blt	2f670 <flatcc_json_parser_skip_constant@@Base+0x94>
   2f654:	cmp	r0, #32
   2f658:	bhi	2f68c <flatcc_json_parser_skip_constant@@Base+0xb0>
   2f65c:	bne	2f670 <flatcc_json_parser_skip_constant@@Base+0x94>
   2f660:	mov	r1, r6
   2f664:	ldrb	r0, [r1, #1]!
   2f668:	cmp	r0, #32
   2f66c:	bhi	2f618 <flatcc_json_parser_skip_constant@@Base+0x3c>
   2f670:	mov	r0, r5
   2f674:	mov	r1, r6
   2f678:	mov	r2, r4
   2f67c:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   2f680:	mov	r1, r0
   2f684:	cmp	r0, r6
   2f688:	bne	2f618 <flatcc_json_parser_skip_constant@@Base+0x3c>
   2f68c:	mov	r0, r6
   2f690:	pop	{r4, r5, r6, sl, fp, pc}
   2f694:	mov	r0, r4
   2f698:	pop	{r4, r5, r6, sl, fp, pc}
   2f69c:	mov	r0, r1
   2f6a0:	pop	{r4, r5, r6, sl, fp, pc}

0002f6a4 <flatcc_json_parser_match_constant@@Base>:
   2f6a4:	push	{r4, r5, r6, r7, fp, lr}
   2f6a8:	add	fp, sp, #16
   2f6ac:	ldr	r7, [fp, #8]
   2f6b0:	mov	r4, r1
   2f6b4:	sub	r1, r2, r1
   2f6b8:	cmp	r1, r3
   2f6bc:	ble	2f7bc <flatcc_json_parser_match_constant@@Base+0x118>
   2f6c0:	ldr	r1, [r0, #12]
   2f6c4:	mov	r5, r2
   2f6c8:	add	r6, r4, r3
   2f6cc:	cmp	r1, #0
   2f6d0:	beq	2f754 <flatcc_json_parser_match_constant@@Base+0xb0>
   2f6d4:	sub	r1, r5, r6
   2f6d8:	cmp	r1, #2
   2f6dc:	blt	2f704 <flatcc_json_parser_match_constant@@Base+0x60>
   2f6e0:	ldrb	r1, [r6]
   2f6e4:	mov	r2, r6
   2f6e8:	cmp	r1, #32
   2f6ec:	bhi	2f714 <flatcc_json_parser_match_constant@@Base+0x70>
   2f6f0:	bne	2f704 <flatcc_json_parser_match_constant@@Base+0x60>
   2f6f4:	mov	r2, r6
   2f6f8:	ldrb	r1, [r2, #1]!
   2f6fc:	cmp	r1, #32
   2f700:	bhi	2f714 <flatcc_json_parser_match_constant@@Base+0x70>
   2f704:	mov	r1, r6
   2f708:	mov	r2, r5
   2f70c:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   2f710:	mov	r2, r0
   2f714:	cmp	r2, r5
   2f718:	beq	2f7d0 <flatcc_json_parser_match_constant@@Base+0x12c>
   2f71c:	cmp	r2, r6
   2f720:	beq	2f7e0 <flatcc_json_parser_match_constant@@Base+0x13c>
   2f724:	ldrsb	r0, [r2]
   2f728:	cmp	r0, #95	; 0x5f
   2f72c:	beq	2f74c <flatcc_json_parser_match_constant@@Base+0xa8>
   2f730:	cmn	r0, #1
   2f734:	ble	2f74c <flatcc_json_parser_match_constant@@Base+0xa8>
   2f738:	orr	r0, r0, #32
   2f73c:	sub	r0, r0, #97	; 0x61
   2f740:	uxtb	r0, r0
   2f744:	cmp	r0, #25
   2f748:	bhi	2f7e0 <flatcc_json_parser_match_constant@@Base+0x13c>
   2f74c:	mov	r0, #1
   2f750:	b	2f864 <flatcc_json_parser_match_constant@@Base+0x1c0>
   2f754:	ldrb	r1, [r6]
   2f758:	cmp	r1, #92	; 0x5c
   2f75c:	beq	2f808 <flatcc_json_parser_match_constant@@Base+0x164>
   2f760:	cmp	r1, #34	; 0x22
   2f764:	beq	2f798 <flatcc_json_parser_match_constant@@Base+0xf4>
   2f768:	cmp	r1, #32
   2f76c:	bne	2f7bc <flatcc_json_parser_match_constant@@Base+0x118>
   2f770:	add	r1, r4, r3
   2f774:	add	r1, r1, #1
   2f778:	cmp	r5, r1
   2f77c:	beq	2f7d0 <flatcc_json_parser_match_constant@@Base+0x12c>
   2f780:	ldrb	r2, [r1], #1
   2f784:	cmp	r2, #32
   2f788:	beq	2f778 <flatcc_json_parser_match_constant@@Base+0xd4>
   2f78c:	cmp	r2, #34	; 0x22
   2f790:	bne	2f870 <flatcc_json_parser_match_constant@@Base+0x1cc>
   2f794:	sub	r6, r1, #1
   2f798:	mvn	r2, r6
   2f79c:	add	r1, r6, #1
   2f7a0:	cmp	r2, #2
   2f7a4:	blt	2f854 <flatcc_json_parser_match_constant@@Base+0x1b0>
   2f7a8:	ldrb	r2, [r1]
   2f7ac:	cmp	r2, #32
   2f7b0:	bls	2f840 <flatcc_json_parser_match_constant@@Base+0x19c>
   2f7b4:	mov	r2, r1
   2f7b8:	b	2f860 <flatcc_json_parser_match_constant@@Base+0x1bc>
   2f7bc:	mov	r0, #0
   2f7c0:	mov	r2, r4
   2f7c4:	str	r0, [r7]
   2f7c8:	mov	r0, r2
   2f7cc:	pop	{r4, r5, r6, r7, fp, pc}
   2f7d0:	mov	r0, #0
   2f7d4:	str	r0, [r7]
   2f7d8:	mov	r0, r5
   2f7dc:	pop	{r4, r5, r6, r7, fp, pc}
   2f7e0:	mov	r0, #0
   2f7e4:	str	r0, [r7]
   2f7e8:	ldrb	r0, [r2]
   2f7ec:	cmp	r0, #44	; 0x2c
   2f7f0:	cmpne	r0, #93	; 0x5d
   2f7f4:	beq	2f7c8 <flatcc_json_parser_match_constant@@Base+0x124>
   2f7f8:	cmp	r0, #125	; 0x7d
   2f7fc:	movne	r2, r4
   2f800:	mov	r0, r2
   2f804:	pop	{r4, r5, r6, r7, fp, pc}
   2f808:	mov	r1, #0
   2f80c:	str	r1, [r7]
   2f810:	ldr	r1, [r0, #24]
   2f814:	cmp	r1, #0
   2f818:	bne	2f7d8 <flatcc_json_parser_match_constant@@Base+0x134>
   2f81c:	str	r6, [r0, #36]	; 0x24
   2f820:	mov	r1, #18
   2f824:	ldr	r2, [r0, #4]
   2f828:	sub	r2, r6, r2
   2f82c:	add	r2, r2, #1
   2f830:	str	r2, [r0, #20]
   2f834:	str	r1, [r0, #24]
   2f838:	mov	r0, r5
   2f83c:	pop	{r4, r5, r6, r7, fp, pc}
   2f840:	bne	2f854 <flatcc_json_parser_match_constant@@Base+0x1b0>
   2f844:	ldrb	r2, [r6, #2]!
   2f848:	cmp	r2, #32
   2f84c:	mov	r2, r6
   2f850:	bhi	2f860 <flatcc_json_parser_match_constant@@Base+0x1bc>
   2f854:	mov	r2, #0
   2f858:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   2f85c:	mov	r2, r0
   2f860:	mov	r0, #0
   2f864:	str	r0, [r7]
   2f868:	mov	r0, r2
   2f86c:	pop	{r4, r5, r6, r7, fp, pc}
   2f870:	mov	r0, #1
   2f874:	sub	r2, r1, #1
   2f878:	b	2f864 <flatcc_json_parser_match_constant@@Base+0x1c0>

0002f87c <flatcc_json_parser_unmatched_symbol@@Base>:
   2f87c:	push	{r4, r5, fp, lr}
   2f880:	add	fp, sp, #8
   2f884:	mov	r5, r0
   2f888:	ldrb	r0, [r0, #8]
   2f88c:	mov	r4, r2
   2f890:	tst	r0, #1
   2f894:	bne	2f8b8 <flatcc_json_parser_unmatched_symbol@@Base+0x3c>
   2f898:	ldr	r0, [r5, #24]
   2f89c:	cmp	r0, #0
   2f8a0:	bne	2fa7c <flatcc_json_parser_unmatched_symbol@@Base+0x200>
   2f8a4:	str	r1, [r5, #36]	; 0x24
   2f8a8:	mov	r0, #13
   2f8ac:	ldr	r2, [r5, #4]
   2f8b0:	sub	r1, r1, r2
   2f8b4:	b	2fa94 <flatcc_json_parser_unmatched_symbol@@Base+0x218>
   2f8b8:	ldr	r0, [r5, #12]
   2f8bc:	cmp	r0, #0
   2f8c0:	beq	2f958 <flatcc_json_parser_unmatched_symbol@@Base+0xdc>
   2f8c4:	cmp	r1, r4
   2f8c8:	beq	2f9ac <flatcc_json_parser_unmatched_symbol@@Base+0x130>
   2f8cc:	ldrb	r2, [r1]
   2f8d0:	cmp	r2, #33	; 0x21
   2f8d4:	bcc	2f9ac <flatcc_json_parser_unmatched_symbol@@Base+0x130>
   2f8d8:	add	r1, r1, #1
   2f8dc:	uxtb	r0, r2
   2f8e0:	cmp	r0, #46	; 0x2e
   2f8e4:	cmpne	r0, #95	; 0x5f
   2f8e8:	bne	2f904 <flatcc_json_parser_unmatched_symbol@@Base+0x88>
   2f8ec:	cmp	r4, r1
   2f8f0:	beq	2f9a0 <flatcc_json_parser_unmatched_symbol@@Base+0x124>
   2f8f4:	ldrb	r2, [r1], #1
   2f8f8:	cmp	r2, #33	; 0x21
   2f8fc:	bcs	2f8dc <flatcc_json_parser_unmatched_symbol@@Base+0x60>
   2f900:	b	2f934 <flatcc_json_parser_unmatched_symbol@@Base+0xb8>
   2f904:	sxtb	r3, r2
   2f908:	cmp	r3, #0
   2f90c:	bmi	2f8ec <flatcc_json_parser_unmatched_symbol@@Base+0x70>
   2f910:	sub	r3, r2, #48	; 0x30
   2f914:	uxtb	r3, r3
   2f918:	cmp	r3, #9
   2f91c:	bls	2f8ec <flatcc_json_parser_unmatched_symbol@@Base+0x70>
   2f920:	orr	r2, r2, #32
   2f924:	sub	r2, r2, #97	; 0x61
   2f928:	uxtb	r2, r2
   2f92c:	cmp	r2, #26
   2f930:	bcc	2f8ec <flatcc_json_parser_unmatched_symbol@@Base+0x70>
   2f934:	sub	r1, r1, #1
   2f938:	cmp	r0, #46	; 0x2e
   2f93c:	bne	2f9ac <flatcc_json_parser_unmatched_symbol@@Base+0x130>
   2f940:	ldr	r0, [r5, #24]
   2f944:	mov	r2, r4
   2f948:	cmp	r0, #0
   2f94c:	bne	2f9e8 <flatcc_json_parser_unmatched_symbol@@Base+0x16c>
   2f950:	mov	r0, #5
   2f954:	b	2f9cc <flatcc_json_parser_unmatched_symbol@@Base+0x150>
   2f958:	cmp	r1, r4
   2f95c:	bne	2f978 <flatcc_json_parser_unmatched_symbol@@Base+0xfc>
   2f960:	b	2f9b8 <flatcc_json_parser_unmatched_symbol@@Base+0x13c>
   2f964:	cmp	r0, #34	; 0x22
   2f968:	beq	2f998 <flatcc_json_parser_unmatched_symbol@@Base+0x11c>
   2f96c:	add	r1, r1, #1
   2f970:	cmp	r1, r4
   2f974:	beq	2f9b4 <flatcc_json_parser_unmatched_symbol@@Base+0x138>
   2f978:	ldrb	r0, [r1]
   2f97c:	cmp	r0, #92	; 0x5c
   2f980:	bne	2f964 <flatcc_json_parser_unmatched_symbol@@Base+0xe8>
   2f984:	sub	r0, r4, r1
   2f988:	cmp	r0, #2
   2f98c:	blt	2f9b8 <flatcc_json_parser_unmatched_symbol@@Base+0x13c>
   2f990:	add	r1, r1, #1
   2f994:	b	2f96c <flatcc_json_parser_unmatched_symbol@@Base+0xf0>
   2f998:	add	r2, r1, #1
   2f99c:	b	2f9e8 <flatcc_json_parser_unmatched_symbol@@Base+0x16c>
   2f9a0:	mov	r1, r4
   2f9a4:	cmp	r0, #46	; 0x2e
   2f9a8:	beq	2f940 <flatcc_json_parser_unmatched_symbol@@Base+0xc4>
   2f9ac:	mov	r2, r1
   2f9b0:	b	2f9e8 <flatcc_json_parser_unmatched_symbol@@Base+0x16c>
   2f9b4:	mov	r1, r4
   2f9b8:	ldr	r0, [r5, #24]
   2f9bc:	mov	r2, r4
   2f9c0:	cmp	r0, #0
   2f9c4:	bne	2f9e8 <flatcc_json_parser_unmatched_symbol@@Base+0x16c>
   2f9c8:	mov	r0, #20
   2f9cc:	str	r1, [r5, #36]	; 0x24
   2f9d0:	ldr	r2, [r5, #4]
   2f9d4:	sub	r1, r1, r2
   2f9d8:	mov	r2, r4
   2f9dc:	add	r1, r1, #1
   2f9e0:	str	r1, [r5, #20]
   2f9e4:	str	r0, [r5, #24]
   2f9e8:	sub	r0, r4, r2
   2f9ec:	cmp	r0, #2
   2f9f0:	blt	2fa24 <flatcc_json_parser_unmatched_symbol@@Base+0x1a8>
   2f9f4:	ldrb	r0, [r2]
   2f9f8:	cmp	r0, #32
   2f9fc:	bls	2fa10 <flatcc_json_parser_unmatched_symbol@@Base+0x194>
   2fa00:	mov	r3, r2
   2fa04:	cmp	r3, r4
   2fa08:	bne	2fa40 <flatcc_json_parser_unmatched_symbol@@Base+0x1c4>
   2fa0c:	b	2fa70 <flatcc_json_parser_unmatched_symbol@@Base+0x1f4>
   2fa10:	bne	2fa24 <flatcc_json_parser_unmatched_symbol@@Base+0x1a8>
   2fa14:	mov	r3, r2
   2fa18:	ldrb	r0, [r3, #1]!
   2fa1c:	cmp	r0, #32
   2fa20:	bhi	2fa38 <flatcc_json_parser_unmatched_symbol@@Base+0x1bc>
   2fa24:	mov	r1, r2
   2fa28:	mov	r0, r5
   2fa2c:	mov	r2, r4
   2fa30:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   2fa34:	mov	r3, r0
   2fa38:	cmp	r3, r4
   2fa3c:	beq	2fa70 <flatcc_json_parser_unmatched_symbol@@Base+0x1f4>
   2fa40:	ldrb	r0, [r3]
   2fa44:	cmp	r0, #58	; 0x3a
   2fa48:	bne	2fa70 <flatcc_json_parser_unmatched_symbol@@Base+0x1f4>
   2fa4c:	add	r1, r3, #1
   2fa50:	sub	r0, r4, r1
   2fa54:	cmp	r0, #2
   2fa58:	blt	2fab8 <flatcc_json_parser_unmatched_symbol@@Base+0x23c>
   2fa5c:	ldrb	r0, [r1]
   2fa60:	cmp	r0, #32
   2fa64:	bls	2faa8 <flatcc_json_parser_unmatched_symbol@@Base+0x22c>
   2fa68:	mov	r3, r1
   2fa6c:	b	2fac8 <flatcc_json_parser_unmatched_symbol@@Base+0x24c>
   2fa70:	ldr	r0, [r5, #24]
   2fa74:	cmp	r0, #0
   2fa78:	beq	2fa84 <flatcc_json_parser_unmatched_symbol@@Base+0x208>
   2fa7c:	mov	r0, r4
   2fa80:	pop	{r4, r5, fp, pc}
   2fa84:	str	r3, [r5, #36]	; 0x24
   2fa88:	mov	r0, #4
   2fa8c:	ldr	r1, [r5, #4]
   2fa90:	sub	r1, r3, r1
   2fa94:	add	r1, r1, #1
   2fa98:	str	r1, [r5, #20]
   2fa9c:	str	r0, [r5, #24]
   2faa0:	mov	r0, r4
   2faa4:	pop	{r4, r5, fp, pc}
   2faa8:	bne	2fab8 <flatcc_json_parser_unmatched_symbol@@Base+0x23c>
   2faac:	ldrb	r0, [r3, #2]!
   2fab0:	cmp	r0, #32
   2fab4:	bhi	2fac8 <flatcc_json_parser_unmatched_symbol@@Base+0x24c>
   2fab8:	mov	r0, r5
   2fabc:	mov	r2, r4
   2fac0:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   2fac4:	mov	r3, r0
   2fac8:	mov	r0, r5
   2facc:	mov	r1, r3
   2fad0:	mov	r2, r4
   2fad4:	pop	{r4, r5, fp, lr}
   2fad8:	b	2fadc <flatcc_json_parser_generic_json@@Base>

0002fadc <flatcc_json_parser_generic_json@@Base>:
   2fadc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2fae0:	add	fp, sp, #28
   2fae4:	sub	sp, sp, #540	; 0x21c
   2fae8:	mov	r7, r1
   2faec:	cmp	r1, r2
   2faf0:	beq	3072c <flatcc_json_parser_generic_json@@Base+0xc50>
   2faf4:	mov	r5, r0
   2faf8:	add	r0, r2, #1
   2fafc:	add	r1, sp, #24
   2fb00:	mov	r6, r2
   2fb04:	mov	r8, #0
   2fb08:	str	r0, [sp, #4]
   2fb0c:	add	r0, r5, #36	; 0x24
   2fb10:	sub	sl, r1, #1
   2fb14:	add	r9, r5, #24
   2fb18:	str	r0, [sp, #16]
   2fb1c:	add	r0, r5, #20
   2fb20:	str	r0, [sp, #12]
   2fb24:	add	r0, r5, #4
   2fb28:	str	r0, [sp, #8]
   2fb2c:	mov	r0, r1
   2fb30:	cmp	r8, #0
   2fb34:	beq	2fda4 <flatcc_json_parser_generic_json@@Base+0x2c8>
   2fb38:	ldrb	r0, [r0, #-1]
   2fb3c:	cmp	r0, #125	; 0x7d
   2fb40:	bne	2fda4 <flatcc_json_parser_generic_json@@Base+0x2c8>
   2fb44:	ldrb	r0, [r7]
   2fb48:	cmp	r0, #46	; 0x2e
   2fb4c:	beq	2fba8 <flatcc_json_parser_generic_json@@Base+0xcc>
   2fb50:	cmp	r0, #34	; 0x22
   2fb54:	bne	2fbf4 <flatcc_json_parser_generic_json@@Base+0x118>
   2fb58:	mov	r0, #0
   2fb5c:	mov	r2, r6
   2fb60:	str	r0, [r5, #12]
   2fb64:	add	r0, r7, #1
   2fb68:	cmp	r0, r6
   2fb6c:	bne	2fb88 <flatcc_json_parser_generic_json@@Base+0xac>
   2fb70:	b	2fcc4 <flatcc_json_parser_generic_json@@Base+0x1e8>
   2fb74:	cmp	r1, #34	; 0x22
   2fb78:	beq	2fc9c <flatcc_json_parser_generic_json@@Base+0x1c0>
   2fb7c:	add	r0, r0, #1
   2fb80:	cmp	r0, r6
   2fb84:	beq	2fca4 <flatcc_json_parser_generic_json@@Base+0x1c8>
   2fb88:	ldrb	r1, [r0]
   2fb8c:	cmp	r1, #92	; 0x5c
   2fb90:	bne	2fb74 <flatcc_json_parser_generic_json@@Base+0x98>
   2fb94:	sub	r1, r6, r0
   2fb98:	cmp	r1, #2
   2fb9c:	blt	2fcc0 <flatcc_json_parser_generic_json@@Base+0x1e4>
   2fba0:	add	r0, r0, #1
   2fba4:	b	2fb7c <flatcc_json_parser_generic_json@@Base+0xa0>
   2fba8:	ldr	r0, [r9]
   2fbac:	cmp	r0, #0
   2fbb0:	bne	2fbdc <flatcc_json_parser_generic_json@@Base+0x100>
   2fbb4:	mov	r0, #5
   2fbb8:	ldr	r1, [sp, #12]
   2fbbc:	str	r0, [r9]
   2fbc0:	ldr	r0, [sp, #8]
   2fbc4:	ldr	r0, [r0]
   2fbc8:	sub	r0, r7, r0
   2fbcc:	add	r0, r0, #1
   2fbd0:	str	r0, [r1]
   2fbd4:	ldr	r0, [sp, #16]
   2fbd8:	str	r7, [r0]
   2fbdc:	ldr	r0, [r5, #12]
   2fbe0:	mov	r2, r6
   2fbe4:	mov	r1, r6
   2fbe8:	cmp	r0, #0
   2fbec:	bne	2fd00 <flatcc_json_parser_generic_json@@Base+0x224>
   2fbf0:	b	2fcc4 <flatcc_json_parser_generic_json@@Base+0x1e8>
   2fbf4:	mov	r0, #1
   2fbf8:	cmp	r7, r6
   2fbfc:	mov	r1, r6
   2fc00:	str	r0, [r5, #12]
   2fc04:	beq	2fd00 <flatcc_json_parser_generic_json@@Base+0x224>
   2fc08:	ldrb	r2, [r7]
   2fc0c:	cmp	r2, #33	; 0x21
   2fc10:	bcc	2fc94 <flatcc_json_parser_generic_json@@Base+0x1b8>
   2fc14:	add	r1, r7, #1
   2fc18:	uxtb	r0, r2
   2fc1c:	cmp	r0, #46	; 0x2e
   2fc20:	cmpne	r0, #95	; 0x5f
   2fc24:	bne	2fc40 <flatcc_json_parser_generic_json@@Base+0x164>
   2fc28:	cmp	r6, r1
   2fc2c:	beq	2fcac <flatcc_json_parser_generic_json@@Base+0x1d0>
   2fc30:	ldrb	r2, [r1], #1
   2fc34:	cmp	r2, #33	; 0x21
   2fc38:	bcs	2fc18 <flatcc_json_parser_generic_json@@Base+0x13c>
   2fc3c:	b	2fc70 <flatcc_json_parser_generic_json@@Base+0x194>
   2fc40:	sxtb	r3, r2
   2fc44:	cmp	r3, #0
   2fc48:	bmi	2fc28 <flatcc_json_parser_generic_json@@Base+0x14c>
   2fc4c:	sub	r3, r2, #48	; 0x30
   2fc50:	uxtb	r3, r3
   2fc54:	cmp	r3, #9
   2fc58:	bls	2fc28 <flatcc_json_parser_generic_json@@Base+0x14c>
   2fc5c:	orr	r2, r2, #32
   2fc60:	sub	r2, r2, #97	; 0x61
   2fc64:	uxtb	r2, r2
   2fc68:	cmp	r2, #26
   2fc6c:	bcc	2fc28 <flatcc_json_parser_generic_json@@Base+0x14c>
   2fc70:	sub	r2, r1, #1
   2fc74:	cmp	r0, #46	; 0x2e
   2fc78:	bne	2fcb8 <flatcc_json_parser_generic_json@@Base+0x1dc>
   2fc7c:	ldr	r0, [r9]
   2fc80:	mov	r1, r6
   2fc84:	cmp	r0, #0
   2fc88:	bne	2fd00 <flatcc_json_parser_generic_json@@Base+0x224>
   2fc8c:	mov	r0, #5
   2fc90:	b	2fcd8 <flatcc_json_parser_generic_json@@Base+0x1fc>
   2fc94:	mov	r1, r7
   2fc98:	b	2fd00 <flatcc_json_parser_generic_json@@Base+0x224>
   2fc9c:	add	r1, r0, #1
   2fca0:	b	2fd00 <flatcc_json_parser_generic_json@@Base+0x224>
   2fca4:	mov	r2, r6
   2fca8:	b	2fcc4 <flatcc_json_parser_generic_json@@Base+0x1e8>
   2fcac:	mov	r2, r6
   2fcb0:	cmp	r0, #46	; 0x2e
   2fcb4:	beq	2fc7c <flatcc_json_parser_generic_json@@Base+0x1a0>
   2fcb8:	mov	r1, r2
   2fcbc:	b	2fd00 <flatcc_json_parser_generic_json@@Base+0x224>
   2fcc0:	mov	r2, r0
   2fcc4:	ldr	r0, [r9]
   2fcc8:	mov	r1, r6
   2fccc:	cmp	r0, #0
   2fcd0:	bne	2fd00 <flatcc_json_parser_generic_json@@Base+0x224>
   2fcd4:	mov	r0, #20
   2fcd8:	str	r0, [r9]
   2fcdc:	ldr	r0, [sp, #8]
   2fce0:	ldr	r1, [sp, #12]
   2fce4:	ldr	r0, [r0]
   2fce8:	sub	r0, r2, r0
   2fcec:	add	r0, r0, #1
   2fcf0:	str	r0, [r1]
   2fcf4:	ldr	r0, [sp, #16]
   2fcf8:	mov	r1, r6
   2fcfc:	str	r2, [r0]
   2fd00:	sub	r0, r6, r1
   2fd04:	cmp	r0, #2
   2fd08:	blt	2fd3c <flatcc_json_parser_generic_json@@Base+0x260>
   2fd0c:	ldrb	r0, [r1]
   2fd10:	cmp	r0, #32
   2fd14:	bls	2fd28 <flatcc_json_parser_generic_json@@Base+0x24c>
   2fd18:	mov	r7, r1
   2fd1c:	cmp	r7, r6
   2fd20:	bne	2fd54 <flatcc_json_parser_generic_json@@Base+0x278>
   2fd24:	b	307b0 <flatcc_json_parser_generic_json@@Base+0xcd4>
   2fd28:	bne	2fd3c <flatcc_json_parser_generic_json@@Base+0x260>
   2fd2c:	mov	r7, r1
   2fd30:	ldrb	r0, [r7, #1]!
   2fd34:	cmp	r0, #32
   2fd38:	bhi	2fd4c <flatcc_json_parser_generic_json@@Base+0x270>
   2fd3c:	mov	r0, r5
   2fd40:	mov	r2, r6
   2fd44:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   2fd48:	mov	r7, r0
   2fd4c:	cmp	r7, r6
   2fd50:	beq	307b0 <flatcc_json_parser_generic_json@@Base+0xcd4>
   2fd54:	ldrb	r0, [r7]
   2fd58:	cmp	r0, #58	; 0x3a
   2fd5c:	bne	307c8 <flatcc_json_parser_generic_json@@Base+0xcec>
   2fd60:	add	r1, r7, #1
   2fd64:	sub	r0, r6, r1
   2fd68:	cmp	r0, #2
   2fd6c:	blt	2fd94 <flatcc_json_parser_generic_json@@Base+0x2b8>
   2fd70:	ldrb	r2, [r1]
   2fd74:	cmp	r2, #32
   2fd78:	bls	2fd84 <flatcc_json_parser_generic_json@@Base+0x2a8>
   2fd7c:	mov	r7, r1
   2fd80:	b	2fda8 <flatcc_json_parser_generic_json@@Base+0x2cc>
   2fd84:	bne	2fd94 <flatcc_json_parser_generic_json@@Base+0x2b8>
   2fd88:	ldrb	r2, [r7, #2]!
   2fd8c:	cmp	r2, #32
   2fd90:	bhi	2fda8 <flatcc_json_parser_generic_json@@Base+0x2cc>
   2fd94:	mov	r0, r5
   2fd98:	mov	r2, r6
   2fd9c:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   2fda0:	mov	r7, r0
   2fda4:	ldrb	r2, [r7]
   2fda8:	sub	r0, r2, #48	; 0x30
   2fdac:	cmp	r0, #10
   2fdb0:	bcs	2fe4c <flatcc_json_parser_generic_json@@Base+0x370>
   2fdb4:	cmp	r7, r6
   2fdb8:	beq	30304 <flatcc_json_parser_generic_json@@Base+0x828>
   2fdbc:	cmp	r2, #45	; 0x2d
   2fdc0:	bne	2fdd4 <flatcc_json_parser_generic_json@@Base+0x2f8>
   2fdc4:	add	r7, r7, #1
   2fdc8:	cmp	r7, r6
   2fdcc:	beq	302e0 <flatcc_json_parser_generic_json@@Base+0x804>
   2fdd0:	ldrb	r2, [r7]
   2fdd4:	cmp	r2, #48	; 0x30
   2fdd8:	bne	2fe68 <flatcc_json_parser_generic_json@@Base+0x38c>
   2fddc:	add	r4, r7, #1
   2fde0:	cmp	r4, r6
   2fde4:	mov	r1, r6
   2fde8:	beq	302f8 <flatcc_json_parser_generic_json@@Base+0x81c>
   2fdec:	ldrb	r0, [r4]
   2fdf0:	cmp	r0, #46	; 0x2e
   2fdf4:	bne	3017c <flatcc_json_parser_generic_json@@Base+0x6a0>
   2fdf8:	mov	r0, r4
   2fdfc:	ldrb	r1, [r0, #1]!
   2fe00:	sub	r1, r1, #48	; 0x30
   2fe04:	uxtb	r1, r1
   2fe08:	cmp	r1, #10
   2fe0c:	bcc	30148 <flatcc_json_parser_generic_json@@Base+0x66c>
   2fe10:	ldr	r1, [r9]
   2fe14:	cmp	r1, #0
   2fe18:	bne	30304 <flatcc_json_parser_generic_json@@Base+0x828>
   2fe1c:	mov	r1, #6
   2fe20:	ldr	r2, [sp, #12]
   2fe24:	mov	r4, r6
   2fe28:	str	r1, [r9]
   2fe2c:	ldr	r1, [sp, #8]
   2fe30:	ldr	r1, [r1]
   2fe34:	sub	r1, r0, r1
   2fe38:	add	r1, r1, #1
   2fe3c:	str	r1, [r2]
   2fe40:	ldr	r1, [sp, #16]
   2fe44:	str	r0, [r1]
   2fe48:	b	30308 <flatcc_json_parser_generic_json@@Base+0x82c>
   2fe4c:	cmp	r2, #90	; 0x5a
   2fe50:	bgt	2feb0 <flatcc_json_parser_generic_json@@Base+0x3d4>
   2fe54:	cmp	r2, #34	; 0x22
   2fe58:	beq	2ff28 <flatcc_json_parser_generic_json@@Base+0x44c>
   2fe5c:	cmp	r2, #45	; 0x2d
   2fe60:	beq	2fdb4 <flatcc_json_parser_generic_json@@Base+0x2d8>
   2fe64:	b	3008c <flatcc_json_parser_generic_json@@Base+0x5b0>
   2fe68:	sub	r0, r2, #49	; 0x31
   2fe6c:	uxtb	r0, r0
   2fe70:	cmp	r0, #8
   2fe74:	bls	2ff00 <flatcc_json_parser_generic_json@@Base+0x424>
   2fe78:	ldr	r0, [r9]
   2fe7c:	cmp	r0, #0
   2fe80:	bne	30304 <flatcc_json_parser_generic_json@@Base+0x828>
   2fe84:	mov	r0, #6
   2fe88:	ldr	r1, [sp, #12]
   2fe8c:	str	r0, [r9]
   2fe90:	ldr	r0, [sp, #8]
   2fe94:	ldr	r0, [r0]
   2fe98:	sub	r0, r7, r0
   2fe9c:	add	r0, r0, #1
   2fea0:	str	r0, [r1]
   2fea4:	ldr	r0, [sp, #16]
   2fea8:	str	r7, [r0]
   2feac:	b	30304 <flatcc_json_parser_generic_json@@Base+0x828>
   2feb0:	cmp	r2, #91	; 0x5b
   2feb4:	beq	3004c <flatcc_json_parser_generic_json@@Base+0x570>
   2feb8:	cmp	r2, #123	; 0x7b
   2febc:	bne	3008c <flatcc_json_parser_generic_json@@Base+0x5b0>
   2fec0:	cmp	r8, #512	; 0x200
   2fec4:	beq	307dc <flatcc_json_parser_generic_json@@Base+0xd00>
   2fec8:	add	r0, sp, #24
   2fecc:	mov	r1, #125	; 0x7d
   2fed0:	strb	r1, [r0, r8]
   2fed4:	add	r1, r7, #1
   2fed8:	sub	r0, r6, r1
   2fedc:	cmp	r0, #2
   2fee0:	blt	3065c <flatcc_json_parser_generic_json@@Base+0xb80>
   2fee4:	ldrb	r0, [r1]
   2fee8:	cmp	r0, #32
   2feec:	bls	3064c <flatcc_json_parser_generic_json@@Base+0xb70>
   2fef0:	mov	r7, r1
   2fef4:	cmp	r7, r6
   2fef8:	bne	30674 <flatcc_json_parser_generic_json@@Base+0xb98>
   2fefc:	b	307a0 <flatcc_json_parser_generic_json@@Base+0xcc4>
   2ff00:	add	r0, r7, #1
   2ff04:	cmp	r6, r0
   2ff08:	beq	302f4 <flatcc_json_parser_generic_json@@Base+0x818>
   2ff0c:	ldrb	r1, [r0], #1
   2ff10:	sub	r1, r1, #48	; 0x30
   2ff14:	uxtb	r1, r1
   2ff18:	cmp	r1, #10
   2ff1c:	bcc	2ff04 <flatcc_json_parser_generic_json@@Base+0x428>
   2ff20:	sub	r4, r0, #1
   2ff24:	b	2fde0 <flatcc_json_parser_generic_json@@Base+0x304>
   2ff28:	cmp	r7, r6
   2ff2c:	beq	30610 <flatcc_json_parser_generic_json@@Base+0xb34>
   2ff30:	add	r0, r7, #1
   2ff34:	mov	r1, r6
   2ff38:	add	r4, sp, #20
   2ff3c:	mov	r7, #17
   2ff40:	cmp	r0, r6
   2ff44:	bne	2ff74 <flatcc_json_parser_generic_json@@Base+0x498>
   2ff48:	b	30700 <flatcc_json_parser_generic_json@@Base+0xc24>
   2ff4c:	ldr	r1, [r9]
   2ff50:	cmp	r1, #0
   2ff54:	mov	r1, r6
   2ff58:	beq	2ffe0 <flatcc_json_parser_generic_json@@Base+0x504>
   2ff5c:	mov	r0, r5
   2ff60:	mov	r2, r6
   2ff64:	mov	r3, r4
   2ff68:	bl	2f1bc <flatcc_json_parser_string_escape@@Base>
   2ff6c:	cmp	r0, r6
   2ff70:	beq	306fc <flatcc_json_parser_generic_json@@Base+0xc20>
   2ff74:	ldrb	r1, [r0]
   2ff78:	cmp	r1, #34	; 0x22
   2ff7c:	beq	306dc <flatcc_json_parser_generic_json@@Base+0xc00>
   2ff80:	cmp	r1, #32
   2ff84:	bcc	2ff4c <flatcc_json_parser_generic_json@@Base+0x470>
   2ff88:	rsb	r0, r0, #0
   2ff8c:	uxtb	r2, r1
   2ff90:	cmp	r2, #34	; 0x22
   2ff94:	cmpne	r2, #92	; 0x5c
   2ff98:	beq	2ffc4 <flatcc_json_parser_generic_json@@Base+0x4e8>
   2ff9c:	add	r1, r6, r0
   2ffa0:	cmp	r1, #1
   2ffa4:	beq	3000c <flatcc_json_parser_generic_json@@Base+0x530>
   2ffa8:	rsb	r1, r0, #0
   2ffac:	sub	r0, r0, #1
   2ffb0:	ldrb	r1, [r1, #1]
   2ffb4:	cmp	r1, #32
   2ffb8:	bcs	2ff8c <flatcc_json_parser_generic_json@@Base+0x4b0>
   2ffbc:	rsb	r0, r0, #0
   2ffc0:	b	2ff4c <flatcc_json_parser_generic_json@@Base+0x470>
   2ffc4:	adds	r1, r6, r0
   2ffc8:	mov	r1, r6
   2ffcc:	beq	2ff5c <flatcc_json_parser_generic_json@@Base+0x480>
   2ffd0:	rsb	r1, r0, #0
   2ffd4:	cmp	r2, #34	; 0x22
   2ffd8:	bne	2ff5c <flatcc_json_parser_generic_json@@Base+0x480>
   2ffdc:	b	306e0 <flatcc_json_parser_generic_json@@Base+0xc04>
   2ffe0:	ldr	r1, [sp, #8]
   2ffe4:	str	r7, [r9]
   2ffe8:	ldr	r2, [sp, #12]
   2ffec:	ldr	r1, [r1]
   2fff0:	sub	r1, r0, r1
   2fff4:	add	r1, r1, #1
   2fff8:	str	r1, [r2]
   2fffc:	ldr	r1, [sp, #16]
   30000:	str	r0, [r1]
   30004:	mov	r1, r6
   30008:	b	2ff5c <flatcc_json_parser_generic_json@@Base+0x480>
   3000c:	ldr	r0, [r9]
   30010:	mov	r1, r6
   30014:	cmp	r0, #0
   30018:	bne	2ff5c <flatcc_json_parser_generic_json@@Base+0x480>
   3001c:	mov	r0, #20
   30020:	ldr	r1, [sp, #4]
   30024:	str	r0, [r9]
   30028:	ldr	r0, [sp, #8]
   3002c:	ldr	r0, [r0]
   30030:	sub	r0, r1, r0
   30034:	ldr	r1, [sp, #12]
   30038:	str	r0, [r1]
   3003c:	ldr	r0, [sp, #16]
   30040:	mov	r1, r6
   30044:	str	r6, [r0]
   30048:	b	2ff5c <flatcc_json_parser_generic_json@@Base+0x480>
   3004c:	cmp	r8, #512	; 0x200
   30050:	beq	307dc <flatcc_json_parser_generic_json@@Base+0xd00>
   30054:	add	r0, sp, #24
   30058:	mov	r1, #93	; 0x5d
   3005c:	strb	r1, [r0, r8]
   30060:	add	r1, r7, #1
   30064:	sub	r0, r6, r1
   30068:	cmp	r0, #2
   3006c:	blt	3069c <flatcc_json_parser_generic_json@@Base+0xbc0>
   30070:	ldrb	r0, [r1]
   30074:	cmp	r0, #32
   30078:	bls	3068c <flatcc_json_parser_generic_json@@Base+0xbb0>
   3007c:	mov	r7, r1
   30080:	cmp	r7, r6
   30084:	bne	306b4 <flatcc_json_parser_generic_json@@Base+0xbd8>
   30088:	b	307a0 <flatcc_json_parser_generic_json@@Base+0xcc4>
   3008c:	cmp	r7, r6
   30090:	mov	r4, r6
   30094:	beq	3013c <flatcc_json_parser_generic_json@@Base+0x660>
   30098:	mov	r4, r7
   3009c:	sxtb	r0, r2
   300a0:	cmp	r0, #0
   300a4:	bmi	300b8 <flatcc_json_parser_generic_json@@Base+0x5dc>
   300a8:	uxtb	r0, r2
   300ac:	cmp	r0, #95	; 0x5f
   300b0:	cmpne	r0, #46	; 0x2e
   300b4:	bne	300d0 <flatcc_json_parser_generic_json@@Base+0x5f4>
   300b8:	add	r0, r4, #1
   300bc:	cmp	r0, r6
   300c0:	beq	30138 <flatcc_json_parser_generic_json@@Base+0x65c>
   300c4:	ldrb	r2, [r0]
   300c8:	mov	r4, r0
   300cc:	b	3009c <flatcc_json_parser_generic_json@@Base+0x5c0>
   300d0:	sub	r1, r2, #48	; 0x30
   300d4:	uxtb	r1, r1
   300d8:	cmp	r1, #9
   300dc:	bls	300b8 <flatcc_json_parser_generic_json@@Base+0x5dc>
   300e0:	orr	r1, r2, #32
   300e4:	sub	r1, r1, #97	; 0x61
   300e8:	uxtb	r1, r1
   300ec:	cmp	r1, #25
   300f0:	bls	300b8 <flatcc_json_parser_generic_json@@Base+0x5dc>
   300f4:	sub	r1, r6, r4
   300f8:	cmp	r1, #2
   300fc:	blt	3011c <flatcc_json_parser_generic_json@@Base+0x640>
   30100:	cmp	r0, #32
   30104:	bhi	3013c <flatcc_json_parser_generic_json@@Base+0x660>
   30108:	bne	3011c <flatcc_json_parser_generic_json@@Base+0x640>
   3010c:	mov	r0, r4
   30110:	ldrb	r1, [r0, #1]!
   30114:	cmp	r1, #32
   30118:	bhi	300bc <flatcc_json_parser_generic_json@@Base+0x5e0>
   3011c:	mov	r0, r5
   30120:	mov	r1, r4
   30124:	mov	r2, r6
   30128:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   3012c:	cmp	r0, r4
   30130:	bne	300bc <flatcc_json_parser_generic_json@@Base+0x5e0>
   30134:	b	3013c <flatcc_json_parser_generic_json@@Base+0x660>
   30138:	mov	r4, r6
   3013c:	cmp	r7, r4
   30140:	bne	30308 <flatcc_json_parser_generic_json@@Base+0x82c>
   30144:	b	307f0 <flatcc_json_parser_generic_json@@Base+0xd14>
   30148:	add	r4, r4, #2
   3014c:	mov	r1, r6
   30150:	cmp	r4, r6
   30154:	beq	302f8 <flatcc_json_parser_generic_json@@Base+0x81c>
   30158:	ldrb	r0, [r4]
   3015c:	sub	r1, r0, #48	; 0x30
   30160:	uxtb	r1, r1
   30164:	cmp	r1, #9
   30168:	bhi	3017c <flatcc_json_parser_generic_json@@Base+0x6a0>
   3016c:	add	r4, r4, #1
   30170:	cmp	r6, r4
   30174:	bne	30158 <flatcc_json_parser_generic_json@@Base+0x67c>
   30178:	b	302f4 <flatcc_json_parser_generic_json@@Base+0x818>
   3017c:	cmp	r4, r6
   30180:	mov	r1, r6
   30184:	beq	302f8 <flatcc_json_parser_generic_json@@Base+0x81c>
   30188:	orr	r1, r0, #32
   3018c:	cmp	r1, #101	; 0x65
   30190:	bne	301f0 <flatcc_json_parser_generic_json@@Base+0x714>
   30194:	add	r0, r4, #1
   30198:	cmp	r0, r6
   3019c:	beq	302e0 <flatcc_json_parser_generic_json@@Base+0x804>
   301a0:	ldrb	r1, [r0]
   301a4:	cmp	r1, #45	; 0x2d
   301a8:	cmpne	r1, #43	; 0x2b
   301ac:	addeq	r0, r4, #2
   301b0:	cmp	r0, r6
   301b4:	beq	2fe10 <flatcc_json_parser_generic_json@@Base+0x334>
   301b8:	ldrb	r1, [r0]
   301bc:	sub	r1, r1, #48	; 0x30
   301c0:	uxtb	r1, r1
   301c4:	cmp	r1, #9
   301c8:	bhi	2fe10 <flatcc_json_parser_generic_json@@Base+0x334>
   301cc:	add	r1, r0, #1
   301d0:	cmp	r6, r1
   301d4:	beq	302f4 <flatcc_json_parser_generic_json@@Base+0x818>
   301d8:	ldrb	r0, [r1], #1
   301dc:	sub	r2, r0, #48	; 0x30
   301e0:	uxtb	r2, r2
   301e4:	cmp	r2, #10
   301e8:	bcc	301d0 <flatcc_json_parser_generic_json@@Base+0x6f4>
   301ec:	sub	r4, r1, #1
   301f0:	cmp	r4, r6
   301f4:	mov	r1, r6
   301f8:	beq	302f8 <flatcc_json_parser_generic_json@@Base+0x81c>
   301fc:	sub	r1, r0, #9
   30200:	cmp	r1, #49	; 0x31
   30204:	bhi	30714 <flatcc_json_parser_generic_json@@Base+0xc38>
   30208:	add	r0, pc, #8
   3020c:	ldr	r2, [r0, r1, lsl #2]
   30210:	mov	r1, r4
   30214:	add	pc, r0, r2
   30218:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   3021c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   30220:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   30224:	andeq	r0, r0, r0, ror #1
   30228:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   3022c:	andeq	r0, r0, r0, ror #1
   30230:	andeq	r0, r0, r0, ror #1
   30234:	andeq	r0, r0, r0, ror #1
   30238:	andeq	r0, r0, r0, ror #1
   3023c:	andeq	r0, r0, r0, ror #1
   30240:	andeq	r0, r0, r0, ror #1
   30244:	andeq	r0, r0, r0, ror #1
   30248:	andeq	r0, r0, r0, ror #1
   3024c:	andeq	r0, r0, r0, ror #1
   30250:	andeq	r0, r0, r0, ror #1
   30254:	andeq	r0, r0, r0, ror #1
   30258:	andeq	r0, r0, r0, ror #1
   3025c:	andeq	r0, r0, r0, ror #1
   30260:	andeq	r0, r0, r0, ror #1
   30264:	andeq	r0, r0, r0, ror #1
   30268:	andeq	r0, r0, r0, ror #1
   3026c:	andeq	r0, r0, r0, ror #1
   30270:	andeq	r0, r0, r0, ror #1
   30274:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   30278:	andeq	r0, r0, r0, ror #1
   3027c:	andeq	r0, r0, r0, ror #1
   30280:	andeq	r0, r0, r0, ror #1
   30284:	andeq	r0, r0, r0, ror #1
   30288:	andeq	r0, r0, r0, ror #1
   3028c:	andeq	r0, r0, r0, ror #1
   30290:	andeq	r0, r0, r0, ror #1
   30294:	andeq	r0, r0, r0, ror #1
   30298:	andeq	r0, r0, r0, ror #1
   3029c:	andeq	r0, r0, r0, ror #1
   302a0:	andeq	r0, r0, r0, ror #1
   302a4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   302a8:	andeq	r0, r0, r0, ror #1
   302ac:	andeq	r0, r0, r0, ror #1
   302b0:	andeq	r0, r0, r0, ror #1
   302b4:	andeq	r0, r0, r0, ror #1
   302b8:	andeq	r0, r0, r0, ror #1
   302bc:	andeq	r0, r0, r0, ror #1
   302c0:	andeq	r0, r0, r0, ror #1
   302c4:	andeq	r0, r0, r0, ror #1
   302c8:	andeq	r0, r0, r0, ror #1
   302cc:	andeq	r0, r0, r0, ror #1
   302d0:	andeq	r0, r0, r0, ror #1
   302d4:	andeq	r0, r0, r0, ror #1
   302d8:	andeq	r0, r0, r0, ror #1
   302dc:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   302e0:	ldr	r0, [r9]
   302e4:	cmp	r0, #0
   302e8:	bne	30304 <flatcc_json_parser_generic_json@@Base+0x828>
   302ec:	mov	r0, #6
   302f0:	b	30620 <flatcc_json_parser_generic_json@@Base+0xb44>
   302f4:	mov	r1, r6
   302f8:	ldr	r0, [r9]
   302fc:	cmp	r0, #0
   30300:	beq	305e0 <flatcc_json_parser_generic_json@@Base+0xb04>
   30304:	mov	r4, r6
   30308:	subs	r1, r4, r6
   3030c:	mov	r2, r8
   30310:	movwne	r1, #1
   30314:	cmp	r8, #0
   30318:	movwne	r2, #1
   3031c:	beq	30734 <flatcc_json_parser_generic_json@@Base+0xc58>
   30320:	cmp	r4, r6
   30324:	beq	30744 <flatcc_json_parser_generic_json@@Base+0xc68>
   30328:	ldrb	r1, [sl, r8]
   3032c:	sub	r0, r6, r4
   30330:	cmp	r1, #93	; 0x5d
   30334:	bne	30354 <flatcc_json_parser_generic_json@@Base+0x878>
   30338:	cmp	r0, #2
   3033c:	blt	30384 <flatcc_json_parser_generic_json@@Base+0x8a8>
   30340:	ldrb	r0, [r4]
   30344:	cmp	r0, #32
   30348:	bls	30370 <flatcc_json_parser_generic_json@@Base+0x894>
   3034c:	mov	r7, r4
   30350:	b	30398 <flatcc_json_parser_generic_json@@Base+0x8bc>
   30354:	cmp	r0, #2
   30358:	blt	303e4 <flatcc_json_parser_generic_json@@Base+0x908>
   3035c:	ldrb	r0, [r4]
   30360:	cmp	r0, #32
   30364:	bls	303d0 <flatcc_json_parser_generic_json@@Base+0x8f4>
   30368:	mov	r7, r4
   3036c:	b	303f8 <flatcc_json_parser_generic_json@@Base+0x91c>
   30370:	bne	30384 <flatcc_json_parser_generic_json@@Base+0x8a8>
   30374:	mov	r7, r4
   30378:	ldrb	r0, [r7, #1]!
   3037c:	cmp	r0, #32
   30380:	bhi	30398 <flatcc_json_parser_generic_json@@Base+0x8bc>
   30384:	mov	r0, r5
   30388:	mov	r1, r4
   3038c:	mov	r2, r6
   30390:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   30394:	mov	r7, r0
   30398:	cmp	r7, r6
   3039c:	mov	r4, r6
   303a0:	beq	305b4 <flatcc_json_parser_generic_json@@Base+0xad8>
   303a4:	ldrb	r0, [r7]
   303a8:	cmp	r0, #44	; 0x2c
   303ac:	beq	30458 <flatcc_json_parser_generic_json@@Base+0x97c>
   303b0:	cmp	r0, #93	; 0x5d
   303b4:	beq	3056c <flatcc_json_parser_generic_json@@Base+0xa90>
   303b8:	ldr	r0, [r9]
   303bc:	mov	r4, r6
   303c0:	cmp	r0, #0
   303c4:	bne	305b4 <flatcc_json_parser_generic_json@@Base+0xad8>
   303c8:	mov	r0, #9
   303cc:	b	3042c <flatcc_json_parser_generic_json@@Base+0x950>
   303d0:	bne	303e4 <flatcc_json_parser_generic_json@@Base+0x908>
   303d4:	mov	r7, r4
   303d8:	ldrb	r0, [r7, #1]!
   303dc:	cmp	r0, #32
   303e0:	bhi	303f8 <flatcc_json_parser_generic_json@@Base+0x91c>
   303e4:	mov	r0, r5
   303e8:	mov	r1, r4
   303ec:	mov	r2, r6
   303f0:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   303f4:	mov	r7, r0
   303f8:	cmp	r7, r6
   303fc:	mov	r4, r6
   30400:	beq	305b4 <flatcc_json_parser_generic_json@@Base+0xad8>
   30404:	ldrb	r0, [r7]
   30408:	cmp	r0, #44	; 0x2c
   3040c:	beq	30498 <flatcc_json_parser_generic_json@@Base+0x9bc>
   30410:	cmp	r0, #125	; 0x7d
   30414:	beq	3056c <flatcc_json_parser_generic_json@@Base+0xa90>
   30418:	ldr	r0, [r9]
   3041c:	mov	r4, r6
   30420:	cmp	r0, #0
   30424:	bne	305b4 <flatcc_json_parser_generic_json@@Base+0xad8>
   30428:	mov	r0, #10
   3042c:	str	r0, [r9]
   30430:	ldr	r0, [sp, #8]
   30434:	ldr	r1, [sp, #12]
   30438:	mov	r4, r6
   3043c:	ldr	r0, [r0]
   30440:	sub	r0, r7, r0
   30444:	add	r0, r0, #1
   30448:	str	r0, [r1]
   3044c:	ldr	r0, [sp, #16]
   30450:	str	r7, [r0]
   30454:	b	305b4 <flatcc_json_parser_generic_json@@Base+0xad8>
   30458:	add	r1, r7, #1
   3045c:	sub	r0, r6, r1
   30460:	cmp	r0, #2
   30464:	blt	30510 <flatcc_json_parser_generic_json@@Base+0xa34>
   30468:	ldrb	r0, [r1]
   3046c:	cmp	r0, #32
   30470:	bls	30500 <flatcc_json_parser_generic_json@@Base+0xa24>
   30474:	mov	r7, r1
   30478:	cmp	r7, r6
   3047c:	bne	30528 <flatcc_json_parser_generic_json@@Base+0xa4c>
   30480:	ldr	r0, [r9]
   30484:	mov	r4, r6
   30488:	cmp	r0, #0
   3048c:	bne	305b4 <flatcc_json_parser_generic_json@@Base+0xad8>
   30490:	mov	r0, #9
   30494:	b	304d4 <flatcc_json_parser_generic_json@@Base+0x9f8>
   30498:	add	r1, r7, #1
   3049c:	sub	r0, r6, r1
   304a0:	cmp	r0, #2
   304a4:	blt	30548 <flatcc_json_parser_generic_json@@Base+0xa6c>
   304a8:	ldrb	r0, [r1]
   304ac:	cmp	r0, #32
   304b0:	bls	30538 <flatcc_json_parser_generic_json@@Base+0xa5c>
   304b4:	mov	r7, r1
   304b8:	cmp	r7, r6
   304bc:	bne	30560 <flatcc_json_parser_generic_json@@Base+0xa84>
   304c0:	ldr	r0, [r9]
   304c4:	mov	r4, r6
   304c8:	cmp	r0, #0
   304cc:	bne	305b4 <flatcc_json_parser_generic_json@@Base+0xad8>
   304d0:	mov	r0, #10
   304d4:	str	r0, [r9]
   304d8:	ldr	r0, [sp, #8]
   304dc:	ldr	r1, [sp, #4]
   304e0:	mov	r4, r6
   304e4:	ldr	r0, [r0]
   304e8:	sub	r0, r1, r0
   304ec:	ldr	r1, [sp, #12]
   304f0:	str	r0, [r1]
   304f4:	ldr	r0, [sp, #16]
   304f8:	str	r6, [r0]
   304fc:	b	305b4 <flatcc_json_parser_generic_json@@Base+0xad8>
   30500:	bne	30510 <flatcc_json_parser_generic_json@@Base+0xa34>
   30504:	ldrb	r0, [r7, #2]!
   30508:	cmp	r0, #32
   3050c:	bhi	30520 <flatcc_json_parser_generic_json@@Base+0xa44>
   30510:	mov	r0, r5
   30514:	mov	r2, r6
   30518:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   3051c:	mov	r7, r0
   30520:	cmp	r7, r6
   30524:	beq	30480 <flatcc_json_parser_generic_json@@Base+0x9a4>
   30528:	ldrb	r0, [r7]
   3052c:	cmp	r0, #93	; 0x5d
   30530:	beq	3056c <flatcc_json_parser_generic_json@@Base+0xa90>
   30534:	b	306c8 <flatcc_json_parser_generic_json@@Base+0xbec>
   30538:	bne	30548 <flatcc_json_parser_generic_json@@Base+0xa6c>
   3053c:	ldrb	r0, [r7, #2]!
   30540:	cmp	r0, #32
   30544:	bhi	30558 <flatcc_json_parser_generic_json@@Base+0xa7c>
   30548:	mov	r0, r5
   3054c:	mov	r2, r6
   30550:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   30554:	mov	r7, r0
   30558:	cmp	r7, r6
   3055c:	beq	304c0 <flatcc_json_parser_generic_json@@Base+0x9e4>
   30560:	ldrb	r0, [r7]
   30564:	cmp	r0, #125	; 0x7d
   30568:	bne	306c8 <flatcc_json_parser_generic_json@@Base+0xbec>
   3056c:	add	r1, r7, #1
   30570:	sub	r0, r6, r1
   30574:	cmp	r0, #2
   30578:	blt	305a4 <flatcc_json_parser_generic_json@@Base+0xac8>
   3057c:	ldrb	r0, [r1]
   30580:	cmp	r0, #32
   30584:	bls	30590 <flatcc_json_parser_generic_json@@Base+0xab4>
   30588:	mov	r4, r1
   3058c:	b	305b4 <flatcc_json_parser_generic_json@@Base+0xad8>
   30590:	bne	305a4 <flatcc_json_parser_generic_json@@Base+0xac8>
   30594:	ldrb	r0, [r7, #2]!
   30598:	mov	r4, r7
   3059c:	cmp	r0, #32
   305a0:	bhi	305b4 <flatcc_json_parser_generic_json@@Base+0xad8>
   305a4:	mov	r0, r5
   305a8:	mov	r2, r6
   305ac:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   305b0:	mov	r4, r0
   305b4:	subs	r1, r4, r6
   305b8:	sub	r0, r8, #1
   305bc:	movwne	r1, #1
   305c0:	subs	r2, r8, #1
   305c4:	movwne	r2, #1
   305c8:	cmp	r8, #1
   305cc:	beq	30748 <flatcc_json_parser_generic_json@@Base+0xc6c>
   305d0:	cmp	r4, r6
   305d4:	mov	r8, r0
   305d8:	bne	30328 <flatcc_json_parser_generic_json@@Base+0x84c>
   305dc:	b	30748 <flatcc_json_parser_generic_json@@Base+0xc6c>
   305e0:	mov	r0, #6
   305e4:	str	r0, [r9]
   305e8:	ldr	r0, [sp, #8]
   305ec:	ldr	r2, [sp, #12]
   305f0:	mov	r4, r6
   305f4:	ldr	r0, [r0]
   305f8:	sub	r0, r1, r0
   305fc:	add	r0, r0, #1
   30600:	str	r0, [r2]
   30604:	ldr	r0, [sp, #16]
   30608:	str	r1, [r0]
   3060c:	b	30308 <flatcc_json_parser_generic_json@@Base+0x82c>
   30610:	ldr	r0, [r9]
   30614:	cmp	r0, #0
   30618:	bne	30304 <flatcc_json_parser_generic_json@@Base+0x828>
   3061c:	mov	r0, #16
   30620:	str	r0, [r9]
   30624:	ldr	r0, [sp, #8]
   30628:	ldr	r1, [sp, #4]
   3062c:	mov	r4, r6
   30630:	ldr	r0, [r0]
   30634:	sub	r0, r1, r0
   30638:	ldr	r1, [sp, #12]
   3063c:	str	r0, [r1]
   30640:	ldr	r0, [sp, #16]
   30644:	str	r6, [r0]
   30648:	b	30308 <flatcc_json_parser_generic_json@@Base+0x82c>
   3064c:	bne	3065c <flatcc_json_parser_generic_json@@Base+0xb80>
   30650:	ldrb	r0, [r7, #2]!
   30654:	cmp	r0, #32
   30658:	bhi	3066c <flatcc_json_parser_generic_json@@Base+0xb90>
   3065c:	mov	r0, r5
   30660:	mov	r2, r6
   30664:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   30668:	mov	r7, r0
   3066c:	cmp	r7, r6
   30670:	beq	307a0 <flatcc_json_parser_generic_json@@Base+0xcc4>
   30674:	ldrb	r0, [r7]
   30678:	add	r8, r8, #1
   3067c:	cmp	r0, #125	; 0x7d
   30680:	mov	r4, r7
   30684:	bne	306c8 <flatcc_json_parser_generic_json@@Base+0xbec>
   30688:	b	30308 <flatcc_json_parser_generic_json@@Base+0x82c>
   3068c:	bne	3069c <flatcc_json_parser_generic_json@@Base+0xbc0>
   30690:	ldrb	r0, [r7, #2]!
   30694:	cmp	r0, #32
   30698:	bhi	306ac <flatcc_json_parser_generic_json@@Base+0xbd0>
   3069c:	mov	r0, r5
   306a0:	mov	r2, r6
   306a4:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   306a8:	mov	r7, r0
   306ac:	cmp	r7, r6
   306b0:	beq	307a0 <flatcc_json_parser_generic_json@@Base+0xcc4>
   306b4:	ldrb	r0, [r7]
   306b8:	add	r8, r8, #1
   306bc:	cmp	r0, #93	; 0x5d
   306c0:	mov	r4, r7
   306c4:	beq	30308 <flatcc_json_parser_generic_json@@Base+0x82c>
   306c8:	add	r0, sp, #24
   306cc:	cmp	r7, r6
   306d0:	add	r0, r0, r8
   306d4:	bne	2fb30 <flatcc_json_parser_generic_json@@Base+0x54>
   306d8:	b	307a0 <flatcc_json_parser_generic_json@@Base+0xcc4>
   306dc:	mov	r1, r0
   306e0:	cmp	r1, r6
   306e4:	beq	30700 <flatcc_json_parser_generic_json@@Base+0xc24>
   306e8:	ldrb	r0, [r1]
   306ec:	cmp	r0, #34	; 0x22
   306f0:	bne	30700 <flatcc_json_parser_generic_json@@Base+0xc24>
   306f4:	add	r4, r1, #1
   306f8:	b	30308 <flatcc_json_parser_generic_json@@Base+0x82c>
   306fc:	mov	r1, r6
   30700:	ldr	r0, [r9]
   30704:	cmp	r0, #0
   30708:	bne	30304 <flatcc_json_parser_generic_json@@Base+0x828>
   3070c:	mov	r0, #20
   30710:	b	305e4 <flatcc_json_parser_generic_json@@Base+0xb08>
   30714:	cmp	r0, #93	; 0x5d
   30718:	beq	30308 <flatcc_json_parser_generic_json@@Base+0x82c>
   3071c:	cmp	r0, #125	; 0x7d
   30720:	mov	r1, r4
   30724:	beq	30308 <flatcc_json_parser_generic_json@@Base+0x82c>
   30728:	b	302f8 <flatcc_json_parser_generic_json@@Base+0x81c>
   3072c:	mov	r4, r7
   30730:	b	307a4 <flatcc_json_parser_generic_json@@Base+0xcc8>
   30734:	mov	r0, r8
   30738:	cmp	r1, #0
   3073c:	beq	30750 <flatcc_json_parser_generic_json@@Base+0xc74>
   30740:	b	307a4 <flatcc_json_parser_generic_json@@Base+0xcc8>
   30744:	mov	r0, r8
   30748:	cmp	r1, #0
   3074c:	bne	307a4 <flatcc_json_parser_generic_json@@Base+0xcc8>
   30750:	cmp	r2, #0
   30754:	beq	307a4 <flatcc_json_parser_generic_json@@Base+0xcc8>
   30758:	ldr	r1, [r9]
   3075c:	cmp	r1, #0
   30760:	bne	307a0 <flatcc_json_parser_generic_json@@Base+0xcc4>
   30764:	add	r1, sp, #24
   30768:	add	r0, r1, r0
   3076c:	mov	r1, #10
   30770:	ldrb	r0, [r0, #-1]
   30774:	cmp	r0, #93	; 0x5d
   30778:	movweq	r1, #9
   3077c:	str	r1, [r9]
   30780:	ldr	r0, [sp, #8]
   30784:	ldr	r1, [sp, #4]
   30788:	ldr	r0, [r0]
   3078c:	sub	r0, r1, r0
   30790:	ldr	r1, [sp, #12]
   30794:	str	r0, [r1]
   30798:	ldr	r0, [sp, #16]
   3079c:	str	r6, [r0]
   307a0:	mov	r4, r6
   307a4:	mov	r0, r4
   307a8:	sub	sp, fp, #28
   307ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   307b0:	ldr	r0, [r9]
   307b4:	cmp	r0, #0
   307b8:	bne	307a0 <flatcc_json_parser_generic_json@@Base+0xcc4>
   307bc:	mov	r0, #10
   307c0:	str	r0, [r9]
   307c4:	b	30780 <flatcc_json_parser_generic_json@@Base+0xca4>
   307c8:	ldr	r0, [r9]
   307cc:	cmp	r0, #0
   307d0:	bne	307a0 <flatcc_json_parser_generic_json@@Base+0xcc4>
   307d4:	mov	r0, #4
   307d8:	b	30800 <flatcc_json_parser_generic_json@@Base+0xd24>
   307dc:	ldr	r0, [r9]
   307e0:	cmp	r0, #0
   307e4:	bne	307a0 <flatcc_json_parser_generic_json@@Base+0xcc4>
   307e8:	mov	r0, #2
   307ec:	b	30800 <flatcc_json_parser_generic_json@@Base+0xd24>
   307f0:	ldr	r0, [r9]
   307f4:	cmp	r0, #0
   307f8:	bne	307a0 <flatcc_json_parser_generic_json@@Base+0xcc4>
   307fc:	mov	r0, #5
   30800:	str	r0, [r9]
   30804:	ldr	r0, [sp, #8]
   30808:	ldr	r1, [sp, #12]
   3080c:	ldr	r0, [r0]
   30810:	sub	r0, r7, r0
   30814:	add	r0, r0, #1
   30818:	str	r0, [r1]
   3081c:	ldr	r0, [sp, #16]
   30820:	str	r7, [r0]
   30824:	b	307a0 <flatcc_json_parser_generic_json@@Base+0xcc4>

00030828 <flatcc_json_parser_double@@Base>:
   30828:	push	{r4, r5, r6, r7, fp, lr}
   3082c:	add	fp, sp, #16
   30830:	mov	r5, r0
   30834:	mov	r0, #0
   30838:	mov	r6, r1
   3083c:	cmp	r1, r2
   30840:	str	r0, [r3]
   30844:	str	r0, [r3, #4]
   30848:	beq	308ec <flatcc_json_parser_double@@Base+0xc4>
   3084c:	mov	r0, r6
   30850:	mov	r4, r2
   30854:	mov	r7, r3
   30858:	ldrb	r1, [r0], #1
   3085c:	cmp	r1, #45	; 0x2d
   30860:	movne	r0, r6
   30864:	sub	r2, r2, r0
   30868:	cmp	r2, #2
   3086c:	blt	308ac <flatcc_json_parser_double@@Base+0x84>
   30870:	sub	r1, r1, #45	; 0x2d
   30874:	clz	r1, r1
   30878:	lsr	r1, r1, #5
   3087c:	ldrb	r1, [r6, r1]
   30880:	cmp	r1, #46	; 0x2e
   30884:	beq	3089c <flatcc_json_parser_double@@Base+0x74>
   30888:	cmp	r1, #48	; 0x30
   3088c:	bne	308ac <flatcc_json_parser_double@@Base+0x84>
   30890:	ldrb	r0, [r0, #1]
   30894:	cmp	r0, #48	; 0x30
   30898:	bne	308ac <flatcc_json_parser_double@@Base+0x84>
   3089c:	ldr	r0, [r5, #24]
   308a0:	cmp	r0, #0
   308a4:	bne	30918 <flatcc_json_parser_double@@Base+0xf0>
   308a8:	b	308fc <flatcc_json_parser_double@@Base+0xd4>
   308ac:	sub	r1, r4, r6
   308b0:	mov	r0, r6
   308b4:	mov	r2, r7
   308b8:	bl	30920 <flatcc_json_parser_double@@Base+0xf8>
   308bc:	cmp	r0, #0
   308c0:	cmpne	r0, r6
   308c4:	bne	3091c <flatcc_json_parser_double@@Base+0xf4>
   308c8:	vldr	d0, [r7]
   308cc:	bl	12ad8 <__isinf@plt>
   308d0:	ldr	r1, [r5, #24]
   308d4:	cmp	r0, #0
   308d8:	beq	308f4 <flatcc_json_parser_double@@Base+0xcc>
   308dc:	cmp	r1, #0
   308e0:	bne	30918 <flatcc_json_parser_double@@Base+0xf0>
   308e4:	mov	r0, #7
   308e8:	b	30900 <flatcc_json_parser_double@@Base+0xd8>
   308ec:	mov	r0, r6
   308f0:	pop	{r4, r5, r6, r7, fp, pc}
   308f4:	cmp	r1, #0
   308f8:	bne	30918 <flatcc_json_parser_double@@Base+0xf0>
   308fc:	mov	r0, #6
   30900:	str	r6, [r5, #36]	; 0x24
   30904:	ldr	r1, [r5, #4]
   30908:	sub	r1, r6, r1
   3090c:	add	r1, r1, #1
   30910:	str	r1, [r5, #20]
   30914:	str	r0, [r5, #24]
   30918:	mov	r0, r4
   3091c:	pop	{r4, r5, r6, r7, fp, pc}
   30920:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   30924:	add	fp, sp, #28
   30928:	sub	sp, sp, #36	; 0x24
   3092c:	cmp	r1, #1000	; 0x3e8
   30930:	mov	r3, r1
   30934:	mov	r5, #0
   30938:	mov	r9, r0
   3093c:	movge	r3, #1000	; 0x3e8
   30940:	str	r5, [r2]
   30944:	str	r5, [r2, #4]
   30948:	add	ip, r0, r3
   3094c:	add	lr, ip, #1
   30950:	cmp	lr, r0
   30954:	beq	309c8 <flatcc_json_parser_double@@Base+0x1a0>
   30958:	ldrb	r0, [r9]
   3095c:	mov	r4, r9
   30960:	cmp	r0, #45	; 0x2d
   30964:	bne	3097c <flatcc_json_parser_double@@Base+0x154>
   30968:	cmp	r3, #0
   3096c:	beq	30d18 <flatcc_json_parser_double@@Base+0x4f0>
   30970:	add	r4, r9, #1
   30974:	mov	r5, #1
   30978:	ldrb	r0, [r4]
   3097c:	cmp	r0, #48	; 0x30
   30980:	bne	309b0 <flatcc_json_parser_double@@Base+0x188>
   30984:	add	r6, r4, #1
   30988:	cmp	r4, ip
   3098c:	beq	30a1c <flatcc_json_parser_double@@Base+0x1f4>
   30990:	ldrb	r1, [r6]
   30994:	orr	r0, r1, #32
   30998:	cmp	r0, #120	; 0x78
   3099c:	bne	309e8 <flatcc_json_parser_double@@Base+0x1c0>
   309a0:	mov	r0, #0
   309a4:	str	r0, [r2]
   309a8:	str	r0, [r2, #4]
   309ac:	b	309c8 <flatcc_json_parser_double@@Base+0x1a0>
   309b0:	sub	r1, r0, #49	; 0x31
   309b4:	uxtb	r1, r1
   309b8:	cmp	r1, #9
   309bc:	bcc	309d0 <flatcc_json_parser_double@@Base+0x1a8>
   309c0:	cmp	r5, #0
   309c4:	movne	r9, #0
   309c8:	mov	r2, r9
   309cc:	b	30d1c <flatcc_json_parser_double@@Base+0x4f4>
   309d0:	sub	r0, r0, #48	; 0x30
   309d4:	add	r6, r4, #1
   309d8:	asr	r1, r0, #31
   309dc:	cmp	r6, lr
   309e0:	bne	30a2c <flatcc_json_parser_double@@Base+0x204>
   309e4:	b	30d18 <flatcc_json_parser_double@@Base+0x4f0>
   309e8:	cmp	r1, #48	; 0x30
   309ec:	mov	r0, #0
   309f0:	mov	r1, #0
   309f4:	bne	30a24 <flatcc_json_parser_double@@Base+0x1fc>
   309f8:	sub	r0, ip, #1
   309fc:	mov	r1, r4
   30a00:	cmp	r0, r4
   30a04:	beq	30a18 <flatcc_json_parser_double@@Base+0x1f0>
   30a08:	ldrb	r7, [r1, #2]
   30a0c:	add	r4, r1, #1
   30a10:	cmp	r7, #48	; 0x30
   30a14:	beq	309fc <flatcc_json_parser_double@@Base+0x1d4>
   30a18:	add	r6, r1, #2
   30a1c:	mov	r0, #0
   30a20:	mov	r1, #0
   30a24:	cmp	r6, lr
   30a28:	beq	30d18 <flatcc_json_parser_double@@Base+0x4f0>
   30a2c:	mov	sl, #10
   30a30:	mov	r7, r6
   30a34:	str	r2, [sp, #20]
   30a38:	ldrb	r8, [r7]
   30a3c:	sub	r2, r8, #48	; 0x30
   30a40:	uxtb	r4, r2
   30a44:	mov	r2, #0
   30a48:	cmp	r4, #9
   30a4c:	bhi	30a8c <flatcc_json_parser_double@@Base+0x264>
   30a50:	movw	r4, #39320	; 0x9998
   30a54:	movt	r4, #39321	; 0x9999
   30a58:	subs	r4, r4, r0
   30a5c:	movw	r4, #39321	; 0x9999
   30a60:	movt	r4, #6553	; 0x1999
   30a64:	sbcs	r4, r4, r1
   30a68:	bcc	30a9c <flatcc_json_parser_double@@Base+0x274>
   30a6c:	add	r1, r1, r1, lsl #2
   30a70:	add	r7, r7, #1
   30a74:	lsl	r1, r1, #1
   30a78:	umlal	r8, r1, r0, sl
   30a7c:	subs	r0, r8, #48	; 0x30
   30a80:	sbc	r1, r1, #0
   30a84:	cmp	lr, r7
   30a88:	bne	30a38 <flatcc_json_parser_double@@Base+0x210>
   30a8c:	mov	r8, r0
   30a90:	mov	sl, r1
   30a94:	mov	r0, #0
   30a98:	b	30ab8 <flatcc_json_parser_double@@Base+0x290>
   30a9c:	adds	r4, r0, #1
   30aa0:	adc	sl, r1, #0
   30aa4:	cmp	r8, #52	; 0x34
   30aa8:	mov	r8, r4
   30aac:	movls	r8, r0
   30ab0:	movls	sl, r1
   30ab4:	mov	r0, #1
   30ab8:	cmp	r7, lr
   30abc:	str	r0, [sp, #24]
   30ac0:	beq	30d1c <flatcc_json_parser_double@@Base+0x4f4>
   30ac4:	sub	r0, r7, r6
   30ac8:	mov	r6, #0
   30acc:	str	r0, [sp, #16]
   30ad0:	sub	r0, r3, r7
   30ad4:	add	r0, r9, r0
   30ad8:	ldrb	r1, [r7]
   30adc:	cmp	r1, #48	; 0x30
   30ae0:	bne	30b04 <flatcc_json_parser_double@@Base+0x2dc>
   30ae4:	add	r1, r7, #1
   30ae8:	cmp	r7, ip
   30aec:	sub	r0, r0, #1
   30af0:	add	r6, r6, #1
   30af4:	mov	r7, r1
   30af8:	bne	30ad8 <flatcc_json_parser_double@@Base+0x2b0>
   30afc:	mov	r7, r1
   30b00:	b	30b50 <flatcc_json_parser_double@@Base+0x328>
   30b04:	sub	r1, r1, #49	; 0x31
   30b08:	uxtb	r1, r1
   30b0c:	cmp	r1, #8
   30b10:	bhi	30b50 <flatcc_json_parser_double@@Base+0x328>
   30b14:	mvn	r2, #0
   30b18:	mov	r1, r2
   30b1c:	cmp	r0, #0
   30b20:	beq	30b40 <flatcc_json_parser_double@@Base+0x318>
   30b24:	ldrb	r2, [r7, -r1]
   30b28:	sub	r0, r0, #1
   30b2c:	sub	r2, r2, #48	; 0x30
   30b30:	uxtb	r4, r2
   30b34:	sub	r2, r1, #1
   30b38:	cmp	r4, #10
   30b3c:	bcc	30b18 <flatcc_json_parser_double@@Base+0x2f0>
   30b40:	mov	r0, #1
   30b44:	sub	r6, r6, r1
   30b48:	sub	r7, r7, r1
   30b4c:	str	r0, [sp, #24]
   30b50:	mov	r2, #0
   30b54:	cmp	r7, lr
   30b58:	beq	30d1c <flatcc_json_parser_double@@Base+0x4f4>
   30b5c:	ldrb	r0, [r7]
   30b60:	cmp	r0, #46	; 0x2e
   30b64:	bne	30cf0 <flatcc_json_parser_double@@Base+0x4c8>
   30b68:	mov	r4, r7
   30b6c:	ldrb	r0, [r4, #1]!
   30b70:	sub	r1, r0, #48	; 0x30
   30b74:	uxtb	r1, r1
   30b78:	cmp	r1, #9
   30b7c:	bhi	30d1c <flatcc_json_parser_double@@Base+0x4f4>
   30b80:	cmp	r7, ip
   30b84:	beq	30c2c <flatcc_json_parser_double@@Base+0x404>
   30b88:	sub	r1, r3, r7
   30b8c:	str	r4, [sp, #8]
   30b90:	add	r1, r1, r9
   30b94:	sub	r1, r1, #1
   30b98:	str	r1, [sp, #12]
   30b9c:	mov	r1, #0
   30ba0:	mov	r3, r1
   30ba4:	movw	r1, #39320	; 0x9998
   30ba8:	movt	r1, #39321	; 0x9999
   30bac:	subs	r1, r1, r8
   30bb0:	movw	r1, #39321	; 0x9999
   30bb4:	movt	r1, #6553	; 0x1999
   30bb8:	sbcs	r1, r1, sl
   30bbc:	bcc	30c3c <flatcc_json_parser_double@@Base+0x414>
   30bc0:	add	r1, sl, sl, lsl #2
   30bc4:	uxtb	r0, r0
   30bc8:	mov	r4, #10
   30bcc:	lsl	r1, r1, #1
   30bd0:	umlal	r0, r1, r8, r4
   30bd4:	add	r4, r7, r3
   30bd8:	subs	r8, r0, #48	; 0x30
   30bdc:	ldr	r0, [sp, #12]
   30be0:	sbc	sl, r1, #0
   30be4:	cmp	r0, r3
   30be8:	beq	30c1c <flatcc_json_parser_double@@Base+0x3f4>
   30bec:	ldrb	r0, [r4, #2]
   30bf0:	str	sl, [sp, #28]
   30bf4:	mov	sl, r8
   30bf8:	mov	r8, r5
   30bfc:	add	r1, r3, #1
   30c00:	sub	r5, r0, #48	; 0x30
   30c04:	uxtb	r5, r5
   30c08:	cmp	r5, #10
   30c0c:	mov	r5, r8
   30c10:	mov	r8, sl
   30c14:	ldr	sl, [sp, #28]
   30c18:	bcc	30ba0 <flatcc_json_parser_double@@Base+0x378>
   30c1c:	mvn	r0, r3
   30c20:	add	r7, r4, #2
   30c24:	add	r6, r0, r6
   30c28:	b	30c74 <flatcc_json_parser_double@@Base+0x44c>
   30c2c:	mov	r7, r4
   30c30:	cmp	r7, lr
   30c34:	bne	30c80 <flatcc_json_parser_double@@Base+0x458>
   30c38:	b	30d1c <flatcc_json_parser_double@@Base+0x4f4>
   30c3c:	add	r1, r7, r3
   30c40:	sub	r6, r6, r3
   30c44:	add	r7, r1, #1
   30c48:	ldr	r1, [sp, #24]
   30c4c:	cmp	r1, #0
   30c50:	bne	30c74 <flatcc_json_parser_double@@Base+0x44c>
   30c54:	uxtb	r0, r0
   30c58:	adds	r1, r8, #1
   30c5c:	adc	r3, sl, #0
   30c60:	cmp	r0, #52	; 0x34
   30c64:	mov	r0, #1
   30c68:	movhi	r8, r1
   30c6c:	movhi	sl, r3
   30c70:	str	r0, [sp, #24]
   30c74:	ldr	r4, [sp, #8]
   30c78:	cmp	r7, lr
   30c7c:	beq	30d1c <flatcc_json_parser_double@@Base+0x4f4>
   30c80:	ldr	r1, [sp, #16]
   30c84:	sub	r0, r7, r4
   30c88:	add	r1, r0, r1
   30c8c:	str	r1, [sp, #16]
   30c90:	ldrb	r0, [r7]
   30c94:	cmp	r0, #48	; 0x30
   30c98:	bne	30cb0 <flatcc_json_parser_double@@Base+0x488>
   30c9c:	add	r7, r7, #1
   30ca0:	add	r6, r6, #1
   30ca4:	cmp	lr, r7
   30ca8:	bne	30c90 <flatcc_json_parser_double@@Base+0x468>
   30cac:	b	30cf0 <flatcc_json_parser_double@@Base+0x4c8>
   30cb0:	sub	r0, r0, #49	; 0x31
   30cb4:	uxtb	r0, r0
   30cb8:	cmp	r0, #8
   30cbc:	bhi	30cf0 <flatcc_json_parser_double@@Base+0x4c8>
   30cc0:	mov	r0, r7
   30cc4:	cmp	ip, r7
   30cc8:	beq	30ce4 <flatcc_json_parser_double@@Base+0x4bc>
   30ccc:	ldrb	r1, [r0, #1]
   30cd0:	add	r7, r0, #1
   30cd4:	sub	r1, r1, #48	; 0x30
   30cd8:	uxtb	r1, r1
   30cdc:	cmp	r1, #10
   30ce0:	bcc	30cc0 <flatcc_json_parser_double@@Base+0x498>
   30ce4:	add	r7, r0, #1
   30ce8:	mov	r0, #1
   30cec:	str	r0, [sp, #24]
   30cf0:	cmp	r7, lr
   30cf4:	beq	30d1c <flatcc_json_parser_double@@Base+0x4f4>
   30cf8:	ldrb	r0, [r7]
   30cfc:	mov	r4, #0
   30d00:	orr	r0, r0, #32
   30d04:	cmp	r0, #101	; 0x65
   30d08:	bne	30d28 <flatcc_json_parser_double@@Base+0x500>
   30d0c:	sub	r0, lr, r7
   30d10:	cmp	r0, #2
   30d14:	bge	30d94 <flatcc_json_parser_double@@Base+0x56c>
   30d18:	mov	r2, #0
   30d1c:	mov	r0, r2
   30d20:	sub	sp, fp, #28
   30d24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   30d28:	mov	r0, #0
   30d2c:	cmp	r7, lr
   30d30:	mov	r2, #0
   30d34:	beq	30d1c <flatcc_json_parser_double@@Base+0x4f4>
   30d38:	vmov.i32	d16, #0	; 0x00000000
   30d3c:	cmp	r4, #0
   30d40:	rsbne	r0, r0, #0
   30d44:	orrs	r1, r8, sl
   30d48:	beq	30d70 <flatcc_json_parser_double@@Base+0x548>
   30d4c:	ldr	r2, [sp, #16]
   30d50:	add	r1, r2, r6
   30d54:	add	r4, r1, r0
   30d58:	cmn	r4, #324	; 0x144
   30d5c:	blt	30d70 <flatcc_json_parser_double@@Base+0x548>
   30d60:	movw	r0, #310	; 0x136
   30d64:	cmp	r4, r0
   30d68:	ble	30dc8 <flatcc_json_parser_double@@Base+0x5a0>
   30d6c:	vldr	d16, [pc, #964]	; 31138 <flatcc_json_parser_double@@Base+0x910>
   30d70:	ldr	r4, [sp, #20]
   30d74:	vstr	d16, [r4]
   30d78:	cmp	r5, #0
   30d7c:	beq	30d8c <flatcc_json_parser_double@@Base+0x564>
   30d80:	vldr	d16, [r4]
   30d84:	vneg.f64	d16, d16
   30d88:	vstr	d16, [r4]
   30d8c:	mov	r2, r7
   30d90:	b	30d1c <flatcc_json_parser_double@@Base+0x4f4>
   30d94:	mov	r3, r7
   30d98:	ldrb	r0, [r3, #1]!
   30d9c:	cmp	r0, #45	; 0x2d
   30da0:	beq	30ec8 <flatcc_json_parser_double@@Base+0x6a0>
   30da4:	mov	r4, #0
   30da8:	cmp	r0, #43	; 0x2b
   30dac:	bne	30ed8 <flatcc_json_parser_double@@Base+0x6b0>
   30db0:	add	r3, r7, #2
   30db4:	mov	r2, #0
   30db8:	cmp	r3, lr
   30dbc:	beq	30d1c <flatcc_json_parser_double@@Base+0x4f4>
   30dc0:	mov	r4, #0
   30dc4:	b	30ed8 <flatcc_json_parser_double@@Base+0x6b0>
   30dc8:	mov	r0, #0
   30dcc:	mov	r6, r2
   30dd0:	cmp	r0, sl, lsr #21
   30dd4:	bne	30f30 <flatcc_json_parser_double@@Base+0x708>
   30dd8:	cmp	r4, #22
   30ddc:	bhi	30f30 <flatcc_json_parser_double@@Base+0x708>
   30de0:	mov	r0, r8
   30de4:	mov	r1, sl
   30de8:	bl	334dc <flatcc_json_parser_struct_as_root@@Base+0x420>
   30dec:	vmov	d16, r0, r1
   30df0:	sub	r2, r4, r6
   30df4:	add	r0, r2, #22
   30df8:	cmp	r0, #44	; 0x2c
   30dfc:	bhi	30d70 <flatcc_json_parser_double@@Base+0x548>
   30e00:	add	r1, pc, #4
   30e04:	ldr	r0, [r1, r0, lsl #2]
   30e08:	add	pc, r1, r0
   30e0c:	strheq	r0, [r0], -r4
   30e10:	andeq	r0, r0, r4, ror r1
   30e14:	andeq	r0, r0, ip, ror r1
   30e18:	andeq	r0, r0, r4, lsl #3
   30e1c:	andeq	r0, r0, ip, lsl #3
   30e20:	muleq	r0, r4, r1
   30e24:	muleq	r0, ip, r1
   30e28:	andeq	r0, r0, r4, lsr #3
   30e2c:	andeq	r0, r0, ip, lsr #3
   30e30:			; <UNDEFINED> instruction: 0x000001b4
   30e34:			; <UNDEFINED> instruction: 0x000001bc
   30e38:	andeq	r0, r0, r4, asr #3
   30e3c:	andeq	r0, r0, ip, asr #3
   30e40:	ldrdeq	r0, [r0], -r4
   30e44:	ldrdeq	r0, [r0], -ip
   30e48:	andeq	r0, r0, r4, ror #3
   30e4c:	andeq	r0, r0, ip, ror #3
   30e50:	strdeq	r0, [r0], -r4
   30e54:	strdeq	r0, [r0], -ip
   30e58:	andeq	r0, r0, r4, lsl #4
   30e5c:	andeq	r0, r0, ip, lsl #4
   30e60:	andeq	r0, r0, r4, lsl r2
   30e64:			; <UNDEFINED> instruction: 0xffffff64
   30e68:	andeq	r0, r0, r0, lsr #4
   30e6c:	andeq	r0, r0, ip, lsr #4
   30e70:	andeq	r0, r0, r8, lsr r2
   30e74:	andeq	r0, r0, r4, asr #4
   30e78:	andeq	r0, r0, r0, asr r2
   30e7c:	andeq	r0, r0, ip, asr r2
   30e80:	andeq	r0, r0, r8, ror #4
   30e84:	andeq	r0, r0, r4, ror r2
   30e88:	andeq	r0, r0, r0, lsl #5
   30e8c:	andeq	r0, r0, ip, lsl #5
   30e90:	muleq	r0, r8, r2
   30e94:	andeq	r0, r0, r4, lsr #5
   30e98:			; <UNDEFINED> instruction: 0x000002b0
   30e9c:			; <UNDEFINED> instruction: 0x000002bc
   30ea0:	andeq	r0, r0, r8, asr #5
   30ea4:	ldrdeq	r0, [r0], -r4
   30ea8:	andeq	r0, r0, r0, ror #5
   30eac:	andeq	r0, r0, ip, ror #5
   30eb0:	strdeq	r0, [r0], -r8
   30eb4:	andeq	r0, r0, r4, lsl #6
   30eb8:	andeq	r0, r0, r0, lsl r3
   30ebc:	andeq	r0, r0, ip, lsl r3
   30ec0:	vldr	d17, [pc, #792]	; 311e0 <flatcc_json_parser_double@@Base+0x9b8>
   30ec4:	b	31024 <flatcc_json_parser_double@@Base+0x7fc>
   30ec8:	add	r3, r7, #2
   30ecc:	mov	r4, #1
   30ed0:	cmp	r3, lr
   30ed4:	beq	30d18 <flatcc_json_parser_double@@Base+0x4f0>
   30ed8:	ldrb	r0, [r3]
   30edc:	mov	r2, #0
   30ee0:	sub	r0, r0, #48	; 0x30
   30ee4:	uxtb	r1, r0
   30ee8:	cmp	r1, #9
   30eec:	bhi	30d1c <flatcc_json_parser_double@@Base+0x4f4>
   30ef0:	cmp	r3, ip
   30ef4:	beq	30f28 <flatcc_json_parser_double@@Base+0x700>
   30ef8:	ldrb	r1, [r3, #1]
   30efc:	sub	r2, r1, #48	; 0x30
   30f00:	uxtb	r2, r2
   30f04:	cmp	r2, #9
   30f08:	bhi	30f28 <flatcc_json_parser_double@@Base+0x700>
   30f0c:	cmp	r0, #32768	; 0x8000
   30f10:	add	r3, r3, #1
   30f14:	addlt	r0, r0, r0, lsl #2
   30f18:	addlt	r0, r1, r0, lsl #1
   30f1c:	sublt	r0, r0, #48	; 0x30
   30f20:	cmp	ip, r3
   30f24:	bne	30ef8 <flatcc_json_parser_double@@Base+0x6d0>
   30f28:	add	r7, r3, #1
   30f2c:	b	30d2c <flatcc_json_parser_double@@Base+0x504>
   30f30:	ldr	r0, [sp, #24]
   30f34:	ldr	r3, [sp, #20]
   30f38:	mov	r2, r4
   30f3c:	mov	r1, sl
   30f40:	str	r0, [sp]
   30f44:	str	r3, [sp, #4]
   30f48:	mov	r4, r3
   30f4c:	mov	r0, r8
   30f50:	mov	r3, r6
   30f54:	bl	2eaa8 <grisu3_diy_fp_encode_double@@Base>
   30f58:	cmp	r0, #0
   30f5c:	bne	30d78 <flatcc_json_parser_double@@Base+0x550>
   30f60:	add	r1, sp, #32
   30f64:	mov	r0, r9
   30f68:	bl	12b68 <strtod@plt>
   30f6c:	vstr	d0, [r4]
   30f70:	ldr	r0, [sp, #32]
   30f74:	cmp	r0, r7
   30f78:	movcc	r7, r0
   30f7c:	b	30d8c <flatcc_json_parser_double@@Base+0x564>
   30f80:	vldr	d17, [pc, #440]	; 31140 <flatcc_json_parser_double@@Base+0x918>
   30f84:	b	31024 <flatcc_json_parser_double@@Base+0x7fc>
   30f88:	vldr	d17, [pc, #440]	; 31148 <flatcc_json_parser_double@@Base+0x920>
   30f8c:	b	31024 <flatcc_json_parser_double@@Base+0x7fc>
   30f90:	vldr	d17, [pc, #440]	; 31150 <flatcc_json_parser_double@@Base+0x928>
   30f94:	b	31024 <flatcc_json_parser_double@@Base+0x7fc>
   30f98:	vldr	d17, [pc, #440]	; 31158 <flatcc_json_parser_double@@Base+0x930>
   30f9c:	b	31024 <flatcc_json_parser_double@@Base+0x7fc>
   30fa0:	vldr	d17, [pc, #440]	; 31160 <flatcc_json_parser_double@@Base+0x938>
   30fa4:	b	31024 <flatcc_json_parser_double@@Base+0x7fc>
   30fa8:	vldr	d17, [pc, #440]	; 31168 <flatcc_json_parser_double@@Base+0x940>
   30fac:	b	31024 <flatcc_json_parser_double@@Base+0x7fc>
   30fb0:	vldr	d17, [pc, #440]	; 31170 <flatcc_json_parser_double@@Base+0x948>
   30fb4:	b	31024 <flatcc_json_parser_double@@Base+0x7fc>
   30fb8:	vldr	d17, [pc, #440]	; 31178 <flatcc_json_parser_double@@Base+0x950>
   30fbc:	b	31024 <flatcc_json_parser_double@@Base+0x7fc>
   30fc0:	vldr	d17, [pc, #440]	; 31180 <flatcc_json_parser_double@@Base+0x958>
   30fc4:	b	31024 <flatcc_json_parser_double@@Base+0x7fc>
   30fc8:	vldr	d17, [pc, #440]	; 31188 <flatcc_json_parser_double@@Base+0x960>
   30fcc:	b	31024 <flatcc_json_parser_double@@Base+0x7fc>
   30fd0:	vldr	d17, [pc, #440]	; 31190 <flatcc_json_parser_double@@Base+0x968>
   30fd4:	b	31024 <flatcc_json_parser_double@@Base+0x7fc>
   30fd8:	vldr	d17, [pc, #440]	; 31198 <flatcc_json_parser_double@@Base+0x970>
   30fdc:	b	31024 <flatcc_json_parser_double@@Base+0x7fc>
   30fe0:	vldr	d17, [pc, #440]	; 311a0 <flatcc_json_parser_double@@Base+0x978>
   30fe4:	b	31024 <flatcc_json_parser_double@@Base+0x7fc>
   30fe8:	vldr	d17, [pc, #440]	; 311a8 <flatcc_json_parser_double@@Base+0x980>
   30fec:	b	31024 <flatcc_json_parser_double@@Base+0x7fc>
   30ff0:	vldr	d17, [pc, #440]	; 311b0 <flatcc_json_parser_double@@Base+0x988>
   30ff4:	b	31024 <flatcc_json_parser_double@@Base+0x7fc>
   30ff8:	vldr	d17, [pc, #440]	; 311b8 <flatcc_json_parser_double@@Base+0x990>
   30ffc:	b	31024 <flatcc_json_parser_double@@Base+0x7fc>
   31000:	vldr	d17, [pc, #440]	; 311c0 <flatcc_json_parser_double@@Base+0x998>
   31004:	b	31024 <flatcc_json_parser_double@@Base+0x7fc>
   31008:	vldr	d17, [pc, #440]	; 311c8 <flatcc_json_parser_double@@Base+0x9a0>
   3100c:	b	31024 <flatcc_json_parser_double@@Base+0x7fc>
   31010:	vldr	d17, [pc, #440]	; 311d0 <flatcc_json_parser_double@@Base+0x9a8>
   31014:	b	31024 <flatcc_json_parser_double@@Base+0x7fc>
   31018:	vldr	d17, [pc, #440]	; 311d8 <flatcc_json_parser_double@@Base+0x9b0>
   3101c:	b	31024 <flatcc_json_parser_double@@Base+0x7fc>
   31020:	vmov.f64	d17, #36	; 0x41200000  10.0
   31024:	vdiv.f64	d16, d16, d17
   31028:	b	30d70 <flatcc_json_parser_double@@Base+0x548>
   3102c:	vmov.f64	d17, #36	; 0x41200000  10.0
   31030:	vmul.f64	d16, d16, d17
   31034:	b	30d70 <flatcc_json_parser_double@@Base+0x548>
   31038:	vldr	d17, [pc, #408]	; 311d8 <flatcc_json_parser_double@@Base+0x9b0>
   3103c:	vmul.f64	d16, d16, d17
   31040:	b	30d70 <flatcc_json_parser_double@@Base+0x548>
   31044:	vldr	d17, [pc, #388]	; 311d0 <flatcc_json_parser_double@@Base+0x9a8>
   31048:	vmul.f64	d16, d16, d17
   3104c:	b	30d70 <flatcc_json_parser_double@@Base+0x548>
   31050:	vldr	d17, [pc, #368]	; 311c8 <flatcc_json_parser_double@@Base+0x9a0>
   31054:	vmul.f64	d16, d16, d17
   31058:	b	30d70 <flatcc_json_parser_double@@Base+0x548>
   3105c:	vldr	d17, [pc, #348]	; 311c0 <flatcc_json_parser_double@@Base+0x998>
   31060:	vmul.f64	d16, d16, d17
   31064:	b	30d70 <flatcc_json_parser_double@@Base+0x548>
   31068:	vldr	d17, [pc, #328]	; 311b8 <flatcc_json_parser_double@@Base+0x990>
   3106c:	vmul.f64	d16, d16, d17
   31070:	b	30d70 <flatcc_json_parser_double@@Base+0x548>
   31074:	vldr	d17, [pc, #308]	; 311b0 <flatcc_json_parser_double@@Base+0x988>
   31078:	vmul.f64	d16, d16, d17
   3107c:	b	30d70 <flatcc_json_parser_double@@Base+0x548>
   31080:	vldr	d17, [pc, #288]	; 311a8 <flatcc_json_parser_double@@Base+0x980>
   31084:	vmul.f64	d16, d16, d17
   31088:	b	30d70 <flatcc_json_parser_double@@Base+0x548>
   3108c:	vldr	d17, [pc, #268]	; 311a0 <flatcc_json_parser_double@@Base+0x978>
   31090:	vmul.f64	d16, d16, d17
   31094:	b	30d70 <flatcc_json_parser_double@@Base+0x548>
   31098:	vldr	d17, [pc, #248]	; 31198 <flatcc_json_parser_double@@Base+0x970>
   3109c:	vmul.f64	d16, d16, d17
   310a0:	b	30d70 <flatcc_json_parser_double@@Base+0x548>
   310a4:	vldr	d17, [pc, #228]	; 31190 <flatcc_json_parser_double@@Base+0x968>
   310a8:	vmul.f64	d16, d16, d17
   310ac:	b	30d70 <flatcc_json_parser_double@@Base+0x548>
   310b0:	vldr	d17, [pc, #208]	; 31188 <flatcc_json_parser_double@@Base+0x960>
   310b4:	vmul.f64	d16, d16, d17
   310b8:	b	30d70 <flatcc_json_parser_double@@Base+0x548>
   310bc:	vldr	d17, [pc, #188]	; 31180 <flatcc_json_parser_double@@Base+0x958>
   310c0:	vmul.f64	d16, d16, d17
   310c4:	b	30d70 <flatcc_json_parser_double@@Base+0x548>
   310c8:	vldr	d17, [pc, #168]	; 31178 <flatcc_json_parser_double@@Base+0x950>
   310cc:	vmul.f64	d16, d16, d17
   310d0:	b	30d70 <flatcc_json_parser_double@@Base+0x548>
   310d4:	vldr	d17, [pc, #148]	; 31170 <flatcc_json_parser_double@@Base+0x948>
   310d8:	vmul.f64	d16, d16, d17
   310dc:	b	30d70 <flatcc_json_parser_double@@Base+0x548>
   310e0:	vldr	d17, [pc, #128]	; 31168 <flatcc_json_parser_double@@Base+0x940>
   310e4:	vmul.f64	d16, d16, d17
   310e8:	b	30d70 <flatcc_json_parser_double@@Base+0x548>
   310ec:	vldr	d17, [pc, #108]	; 31160 <flatcc_json_parser_double@@Base+0x938>
   310f0:	vmul.f64	d16, d16, d17
   310f4:	b	30d70 <flatcc_json_parser_double@@Base+0x548>
   310f8:	vldr	d17, [pc, #88]	; 31158 <flatcc_json_parser_double@@Base+0x930>
   310fc:	vmul.f64	d16, d16, d17
   31100:	b	30d70 <flatcc_json_parser_double@@Base+0x548>
   31104:	vldr	d17, [pc, #68]	; 31150 <flatcc_json_parser_double@@Base+0x928>
   31108:	vmul.f64	d16, d16, d17
   3110c:	b	30d70 <flatcc_json_parser_double@@Base+0x548>
   31110:	vldr	d17, [pc, #48]	; 31148 <flatcc_json_parser_double@@Base+0x920>
   31114:	vmul.f64	d16, d16, d17
   31118:	b	30d70 <flatcc_json_parser_double@@Base+0x548>
   3111c:	vldr	d17, [pc, #28]	; 31140 <flatcc_json_parser_double@@Base+0x918>
   31120:	vmul.f64	d16, d16, d17
   31124:	b	30d70 <flatcc_json_parser_double@@Base+0x548>
   31128:	vldr	d17, [pc, #176]	; 311e0 <flatcc_json_parser_double@@Base+0x9b8>
   3112c:	vmul.f64	d16, d16, d17
   31130:	b	30d70 <flatcc_json_parser_double@@Base+0x548>
   31134:	nop	{0}
   31138:	andeq	r0, r0, r0
   3113c:	svcvc	0x00f00000	; IMB
   31140:	usatle	lr, #2, r0, asr #30
   31144:	strbmi	r1, [fp], #-2788	; 0xfffff51c
   31148:	ldmvc	r5!, {r6, sl, fp, pc}
   3114c:	ldrmi	sl, [r5], #-3869	; 0xfffff0e3
   31150:	addsvs	r3, r1, r0, lsl #26
   31154:	mvnmi	r5, #228, 16	; 0xe40000
   31158:	strbvs	ip, [lr, -r0, lsl #16]
   3115c:			; <UNDEFINED> instruction: 0x43abc16d
   31160:	ldrbhi	sl, [r8]
   31164:	cmnmi	r6, #1459617792	; 0x57000000
   31168:	strbcc	r8, [r0, r0]!
   3116c:	movtmi	ip, #4985	; 0x1379
   31170:	ldrtcs	r0, [r4], -r0
   31174:	movwmi	r6, #52213	; 0xcbf5
   31178:	cdpne	0, 9, cr0, cr0, cr0, {0}
   3117c:	sbcsmi	fp, r6, #196, 24	; 0xc400
   31180:	strb	r0, [r0, #-0]
   31184:	adcmi	r3, r2, #156	; 0x9c
   31188:	andge	r0, r0, #0
   3118c:	rsbmi	r1, sp, #148, 20	; 0x94000
   31190:	stmda	r0, {}	; <UNPREDICTABLE>
   31194:	eorsmi	r4, r7, #7733248	; 0x760000
   31198:	andcs	r0, r0, r0
   3119c:	andmi	sl, r2, #95	; 0x5f
   311a0:	andeq	r0, r0, r0
   311a4:	bicmi	ip, sp, r5, ror #26
   311a8:	andeq	r0, r0, r0
   311ac:	orrsmi	sp, r7, r4, lsl #15
   311b0:	andeq	r0, r0, r0
   311b4:	ldrdmi	r1, [r3, #-32]!	; 0xffffffe0
   311b8:	andeq	r0, r0, r0
   311bc:	smlawbmi	lr, r0, r4, r8
   311c0:	andeq	r0, r0, r0
   311c4:	rscsmi	r6, r8, r0, lsl #20
   311c8:	andeq	r0, r0, r0
   311cc:	sbcmi	r8, r3, r0, lsl #16
   311d0:	andeq	r0, r0, r0
   311d4:	addmi	r4, pc, r0
   311d8:	andeq	r0, r0, r0
   311dc:	subsmi	r0, r9, r0
   311e0:			; <UNDEFINED> instruction: 0x064dd592
   311e4:	strmi	pc, [r0], #207	; 0xcf

000311e8 <flatcc_json_parser_float@@Base>:
   311e8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   311ec:	add	fp, sp, #24
   311f0:	vpush	{d8-d9}
   311f4:	sub	sp, sp, #8
   311f8:	mov	r8, r0
   311fc:	mov	r0, #0
   31200:	mov	r6, r1
   31204:	cmp	r1, r2
   31208:	str	r0, [r3]
   3120c:	beq	312e4 <flatcc_json_parser_float@@Base+0xfc>
   31210:	mov	r0, r6
   31214:	mov	r5, r2
   31218:	mov	r7, r3
   3121c:	ldrb	r1, [r0], #1
   31220:	cmp	r1, #45	; 0x2d
   31224:	movne	r0, r6
   31228:	sub	r2, r2, r0
   3122c:	cmp	r2, #2
   31230:	blt	31270 <flatcc_json_parser_float@@Base+0x88>
   31234:	sub	r1, r1, #45	; 0x2d
   31238:	clz	r1, r1
   3123c:	lsr	r1, r1, #5
   31240:	ldrb	r1, [r6, r1]
   31244:	cmp	r1, #46	; 0x2e
   31248:	beq	31260 <flatcc_json_parser_float@@Base+0x78>
   3124c:	cmp	r1, #48	; 0x30
   31250:	bne	31270 <flatcc_json_parser_float@@Base+0x88>
   31254:	ldrb	r0, [r0, #1]
   31258:	cmp	r0, #48	; 0x30
   3125c:	bne	31270 <flatcc_json_parser_float@@Base+0x88>
   31260:	ldr	r0, [r8, #24]
   31264:	cmp	r0, #0
   31268:	bne	31310 <flatcc_json_parser_float@@Base+0x128>
   3126c:	b	312f4 <flatcc_json_parser_float@@Base+0x10c>
   31270:	sub	r1, r5, r6
   31274:	mov	r2, sp
   31278:	mov	r0, r6
   3127c:	bl	30920 <flatcc_json_parser_double@@Base+0xf8>
   31280:	vldr	d16, [sp]
   31284:	mov	r4, r0
   31288:	add	r0, pc, #148	; 0x94
   3128c:	vcmpe.f64	d16, #0.0
   31290:	vcvt.f32.f64	s16, d16
   31294:	vmrs	APSR_nzcv, fpscr
   31298:	addmi	r0, r0, #4
   3129c:	vldr	s18, [r0]
   312a0:	vmov.f32	s0, s16
   312a4:	bl	12acc <__isinff@plt>
   312a8:	cmp	r0, #0
   312ac:	vseleq.f32	s0, s16, s18
   312b0:	movne	r4, r6
   312b4:	cmp	r4, #0
   312b8:	cmpne	r4, r6
   312bc:	vstr	s0, [r7]
   312c0:	bne	31314 <flatcc_json_parser_float@@Base+0x12c>
   312c4:	bl	12acc <__isinff@plt>
   312c8:	ldr	r1, [r8, #24]
   312cc:	cmp	r0, #0
   312d0:	beq	312ec <flatcc_json_parser_float@@Base+0x104>
   312d4:	cmp	r1, #0
   312d8:	bne	31310 <flatcc_json_parser_float@@Base+0x128>
   312dc:	mov	r0, #7
   312e0:	b	312f8 <flatcc_json_parser_float@@Base+0x110>
   312e4:	mov	r4, r6
   312e8:	b	31314 <flatcc_json_parser_float@@Base+0x12c>
   312ec:	cmp	r1, #0
   312f0:	bne	31310 <flatcc_json_parser_float@@Base+0x128>
   312f4:	mov	r0, #6
   312f8:	str	r6, [r8, #36]	; 0x24
   312fc:	ldr	r1, [r8, #4]
   31300:	sub	r1, r6, r1
   31304:	add	r1, r1, #1
   31308:	str	r1, [r8, #20]
   3130c:	str	r0, [r8, #24]
   31310:	mov	r4, r5
   31314:	mov	r0, r4
   31318:	sub	sp, fp, #40	; 0x28
   3131c:	vpop	{d8-d9}
   31320:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   31324:	svcvc	0x00800000
   31328:			; <UNDEFINED> instruction: 0xff800000

0003132c <flatcc_json_parser_integer@@Base>:
   3132c:	push	{r4, r5, r6, r7, fp, lr}
   31330:	add	fp, sp, #16
   31334:	mov	ip, r1
   31338:	cmp	r1, r2
   3133c:	beq	31428 <flatcc_json_parser_integer@@Base+0xfc>
   31340:	ldrb	r1, [ip]
   31344:	mov	r4, #0
   31348:	sub	r1, r1, #45	; 0x2d
   3134c:	clz	r1, r1
   31350:	lsr	r1, r1, #5
   31354:	str	r1, [r3]
   31358:	add	r1, ip, r1
   3135c:	cmp	r1, r2
   31360:	beq	31414 <flatcc_json_parser_integer@@Base+0xe8>
   31364:	mov	lr, #10
   31368:	mov	r5, #0
   3136c:	ldrb	r6, [r1]
   31370:	sub	r7, r6, #48	; 0x30
   31374:	uxtb	r7, r7
   31378:	cmp	r7, #9
   3137c:	bhi	31430 <flatcc_json_parser_integer@@Base+0x104>
   31380:	add	r7, r5, r5, lsl #2
   31384:	lsl	r7, r7, #1
   31388:	umlal	r6, r7, r4, lr
   3138c:	subs	r6, r6, #48	; 0x30
   31390:	sbc	r7, r7, #0
   31394:	subs	r4, r6, r4
   31398:	sbcs	r4, r7, r5
   3139c:	bcc	31440 <flatcc_json_parser_integer@@Base+0x114>
   313a0:	add	r1, r1, #1
   313a4:	mov	r4, r6
   313a8:	mov	r5, r7
   313ac:	cmp	r2, r1
   313b0:	bne	3136c <flatcc_json_parser_integer@@Base+0x40>
   313b4:	mov	r3, #0
   313b8:	mov	r1, r2
   313bc:	mov	r4, r6
   313c0:	mov	r5, r7
   313c4:	cmp	r1, ip
   313c8:	beq	31428 <flatcc_json_parser_integer@@Base+0xfc>
   313cc:	cmp	r3, #0
   313d0:	beq	3145c <flatcc_json_parser_integer@@Base+0x130>
   313d4:	ldrb	r3, [r1]
   313d8:	cmp	r3, #46	; 0x2e
   313dc:	cmpne	r3, #101	; 0x65
   313e0:	bne	31454 <flatcc_json_parser_integer@@Base+0x128>
   313e4:	ldr	r3, [r0, #24]
   313e8:	cmp	r3, #0
   313ec:	bne	3144c <flatcc_json_parser_integer@@Base+0x120>
   313f0:	str	r1, [r0, #36]	; 0x24
   313f4:	mov	r3, #12
   313f8:	ldr	r7, [r0, #4]
   313fc:	sub	r1, r1, r7
   31400:	add	r1, r1, #1
   31404:	str	r1, [r0, #20]
   31408:	str	r3, [r0, #24]
   3140c:	mov	r0, r2
   31410:	pop	{r4, r5, r6, r7, fp, pc}
   31414:	mov	r1, r2
   31418:	mov	r5, #0
   3141c:	mov	r3, #0
   31420:	cmp	r1, ip
   31424:	bne	313cc <flatcc_json_parser_integer@@Base+0xa0>
   31428:	mov	r0, ip
   3142c:	pop	{r4, r5, r6, r7, fp, pc}
   31430:	mov	r3, #1
   31434:	cmp	r1, ip
   31438:	bne	313cc <flatcc_json_parser_integer@@Base+0xa0>
   3143c:	b	31428 <flatcc_json_parser_integer@@Base+0xfc>
   31440:	ldr	r7, [r0, #24]
   31444:	cmp	r7, #0
   31448:	beq	31470 <flatcc_json_parser_integer@@Base+0x144>
   3144c:	mov	r0, r2
   31450:	pop	{r4, r5, r6, r7, fp, pc}
   31454:	cmp	r3, #69	; 0x45
   31458:	beq	313e4 <flatcc_json_parser_integer@@Base+0xb8>
   3145c:	ldr	r0, [fp, #8]
   31460:	mov	ip, r1
   31464:	strd	r4, [r0]
   31468:	mov	r0, ip
   3146c:	pop	{r4, r5, r6, r7, fp, pc}
   31470:	str	r1, [r0, #36]	; 0x24
   31474:	cmp	r3, #0
   31478:	mov	r7, #8
   3147c:	ldr	r3, [r0, #4]
   31480:	movweq	r7, #7
   31484:	sub	r1, r1, r3
   31488:	add	r1, r1, #1
   3148c:	str	r1, [r0, #20]
   31490:	str	r7, [r0, #24]
   31494:	mov	r0, r2
   31498:	pop	{r4, r5, r6, r7, fp, pc}

0003149c <flatcc_json_parser_build_uint8_vector_base64@@Base>:
   3149c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   314a0:	add	fp, sp, #28
   314a4:	sub	sp, sp, #28
   314a8:	ldr	r9, [fp, #8]
   314ac:	mov	r6, r3
   314b0:	mov	r4, r2
   314b4:	mov	r5, r0
   314b8:	cmp	r1, r2
   314bc:	beq	31504 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x68>
   314c0:	ldrb	r0, [r1]
   314c4:	cmp	r0, #34	; 0x22
   314c8:	bne	31504 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x68>
   314cc:	add	sl, r1, #1
   314d0:	cmp	sl, r4
   314d4:	beq	3152c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x90>
   314d8:	mov	r7, sl
   314dc:	ldrb	r1, [r7]
   314e0:	cmp	r1, #32
   314e4:	bcc	31748 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2ac>
   314e8:	cmp	r1, #34	; 0x22
   314ec:	cmpne	r1, #92	; 0x5c
   314f0:	beq	315a0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x104>
   314f4:	add	r7, r7, #1
   314f8:	cmp	r4, r7
   314fc:	bne	314dc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x40>
   31500:	b	3152c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x90>
   31504:	ldr	r0, [r5, #24]
   31508:	cmp	r0, #0
   3150c:	bne	3152c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x90>
   31510:	str	r1, [r5, #36]	; 0x24
   31514:	mov	r0, #16
   31518:	ldr	r2, [r5, #4]
   3151c:	sub	r1, r1, r2
   31520:	add	r1, r1, #1
   31524:	str	r1, [r5, #20]
   31528:	str	r0, [r5, #24]
   3152c:	ldr	r0, [r5, #24]
   31530:	cmp	r0, #0
   31534:	mov	r0, r4
   31538:	bne	3155c <flatcc_json_parser_build_uint8_vector_base64@@Base+0xc0>
   3153c:	str	r4, [r5, #36]	; 0x24
   31540:	mov	r0, #20
   31544:	ldr	r1, [r5, #4]
   31548:	sub	r1, r4, r1
   3154c:	add	r1, r1, #1
   31550:	str	r1, [r5, #20]
   31554:	str	r0, [r5, #24]
   31558:	mov	r0, r4
   3155c:	mov	r1, #0
   31560:	str	r1, [r6]
   31564:	ldr	r1, [r5, #24]
   31568:	cmp	r1, #0
   3156c:	bne	31594 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xf8>
   31570:	str	r0, [r5, #36]	; 0x24
   31574:	cmp	r9, #0
   31578:	mov	r1, #31
   3157c:	ldr	r2, [r5, #4]
   31580:	movwne	r1, #32
   31584:	sub	r0, r0, r2
   31588:	add	r0, r0, #1
   3158c:	str	r0, [r5, #20]
   31590:	str	r1, [r5, #24]
   31594:	mov	r0, r4
   31598:	sub	sp, fp, #28
   3159c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   315a0:	cmp	r4, r7
   315a4:	mov	r0, r4
   315a8:	beq	3155c <flatcc_json_parser_build_uint8_vector_base64@@Base+0xc0>
   315ac:	cmp	r1, #34	; 0x22
   315b0:	bne	315dc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x140>
   315b4:	sub	r1, r7, sl
   315b8:	and	r0, r1, #3
   315bc:	str	r1, [sp, #20]
   315c0:	lsr	r1, r1, #2
   315c4:	add	r8, r1, r1, lsl #1
   315c8:	cmp	r0, #2
   315cc:	beq	315e4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x148>
   315d0:	cmp	r0, #3
   315d4:	addeq	r8, r8, #2
   315d8:	b	315e8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x14c>
   315dc:	mov	r0, r7
   315e0:	b	3155c <flatcc_json_parser_build_uint8_vector_base64@@Base+0xc0>
   315e4:	add	r8, r8, #1
   315e8:	ldr	r0, [r5]
   315ec:	mov	r1, #1
   315f0:	mov	r2, #1
   315f4:	mvn	r3, #0
   315f8:	bl	2b6f4 <flatcc_builder_start_vector@@Base>
   315fc:	cmp	r0, #0
   31600:	beq	31638 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x19c>
   31604:	mov	r0, #0
   31608:	str	r0, [r6]
   3160c:	ldr	r0, [r5, #24]
   31610:	cmp	r0, #0
   31614:	bne	31594 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xf8>
   31618:	mov	r0, #33	; 0x21
   3161c:	str	r7, [r5, #36]	; 0x24
   31620:	ldr	r1, [r5, #4]
   31624:	sub	r1, r7, r1
   31628:	add	r1, r1, #1
   3162c:	str	r1, [r5, #20]
   31630:	str	r0, [r5, #24]
   31634:	b	31594 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xf8>
   31638:	ldr	r0, [r5]
   3163c:	mov	r1, r8
   31640:	bl	2ab30 <flatcc_builder_extend_vector@@Base>
   31644:	cmp	r0, #0
   31648:	beq	31604 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x168>
   3164c:	ldr	r2, [pc, #636]	; 318d0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x434>
   31650:	mov	r1, r8
   31654:	ldr	r8, [pc, #632]	; 318d4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x438>
   31658:	str	r0, [sp]
   3165c:	str	r0, [sp, #12]
   31660:	ldr	r0, [sp, #20]
   31664:	cmp	r9, #0
   31668:	add	lr, sp, #24
   3166c:	mov	ip, sl
   31670:	str	r1, [sp, #4]
   31674:	add	r2, pc, r2
   31678:	add	r8, pc, r8
   3167c:	movne	r8, r2
   31680:	cmp	r1, #0
   31684:	mvneq	r1, #0
   31688:	str	r1, [sp, #16]
   3168c:	mov	r1, #0
   31690:	str	r0, [sp, #8]
   31694:	cmp	r0, r1
   31698:	bne	316b4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x218>
   3169c:	b	3176c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2d0>
   316a0:	add	r1, r1, #1
   316a4:	cmp	r1, #4
   316a8:	bcs	316e0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x244>
   316ac:	cmp	r0, r1
   316b0:	beq	3176c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2d0>
   316b4:	ldrb	r2, [ip, r1]
   316b8:	ldrb	r3, [r8, r2]
   316bc:	cmp	r3, #64	; 0x40
   316c0:	strb	r3, [lr, r1]
   316c4:	bcc	316a0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x204>
   316c8:	cmp	r3, #65	; 0x41
   316cc:	bne	317b8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x31c>
   316d0:	sub	r1, r1, #1
   316d4:	sub	r0, r0, #1
   316d8:	add	ip, ip, #1
   316dc:	b	316a0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x204>
   316e0:	ldr	lr, [sp, #16]
   316e4:	cmp	lr, #3
   316e8:	bcc	3184c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3b0>
   316ec:	ldrb	r2, [sp, #25]
   316f0:	ldrb	r1, [sp, #24]
   316f4:	subs	lr, lr, #3
   316f8:	sub	r0, r0, #4
   316fc:	add	ip, ip, #4
   31700:	str	lr, [sp, #16]
   31704:	add	lr, sp, #24
   31708:	lsr	r3, r2, #4
   3170c:	orr	r1, r3, r1, lsl #2
   31710:	ldr	r3, [sp, #12]
   31714:	strb	r1, [r3]
   31718:	ldrb	r1, [sp, #26]
   3171c:	lsr	r1, r1, #2
   31720:	orr	r1, r1, r2, lsl #4
   31724:	strb	r1, [r3, #1]
   31728:	ldrb	r1, [sp, #26]
   3172c:	ldrb	r2, [sp, #27]
   31730:	orr	r1, r2, r1, lsl #6
   31734:	strb	r1, [r3, #2]
   31738:	add	r3, r3, #3
   3173c:	str	r3, [sp, #12]
   31740:	bne	3168c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1f0>
   31744:	b	31838 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x39c>
   31748:	ldr	r0, [r5, #24]
   3174c:	cmp	r0, #0
   31750:	mov	r0, r4
   31754:	bne	3155c <flatcc_json_parser_build_uint8_vector_base64@@Base+0xc0>
   31758:	str	r7, [r5, #36]	; 0x24
   3175c:	mov	r0, #17
   31760:	ldr	r1, [r5, #4]
   31764:	sub	r1, r7, r1
   31768:	b	3154c <flatcc_json_parser_build_uint8_vector_base64@@Base+0xb0>
   3176c:	mov	r1, r0
   31770:	mov	r3, r0
   31774:	ldr	r2, [sp, #16]
   31778:	sub	r0, r0, r3
   3177c:	cmp	r1, #0
   31780:	beq	31838 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x39c>
   31784:	cmp	r1, #3
   31788:	beq	317f8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x35c>
   3178c:	cmp	r1, #2
   31790:	bne	3184c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3b0>
   31794:	ldrb	r1, [sp, #25]
   31798:	tst	r1, #15
   3179c:	bne	3184c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3b0>
   317a0:	ldrb	r2, [sp, #24]
   317a4:	lsl	r2, r2, #2
   317a8:	orr	r1, r2, r1, lsr #4
   317ac:	ldr	r2, [sp, #12]
   317b0:	strb	r1, [r2], #1
   317b4:	b	31834 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x398>
   317b8:	cmp	r3, #66	; 0x42
   317bc:	bne	318b4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x418>
   317c0:	add	r2, r1, #1
   317c4:	mov	r3, r2
   317c8:	cmp	r2, r0
   317cc:	bcs	31774 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2d8>
   317d0:	cmp	r3, #7
   317d4:	bhi	31774 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2d8>
   317d8:	ldrb	r2, [ip, r3]
   317dc:	ldrb	r2, [r8, r2]
   317e0:	sub	r2, r2, #65	; 0x41
   317e4:	uxtb	lr, r2
   317e8:	add	r2, r3, #1
   317ec:	cmp	lr, #2
   317f0:	bcc	317c4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x328>
   317f4:	b	31774 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2d8>
   317f8:	cmp	r2, #2
   317fc:	bcc	3184c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3b0>
   31800:	ldrb	r1, [sp, #26]
   31804:	ands	r2, r1, #3
   31808:	bne	3184c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3b0>
   3180c:	ldrb	r3, [sp, #25]
   31810:	ldrb	ip, [sp, #24]
   31814:	lsl	r2, r3, #4
   31818:	orr	r1, r2, r1, lsr #2
   3181c:	ldr	r2, [sp, #12]
   31820:	strb	r1, [r2, #1]
   31824:	lsr	r1, r3, #4
   31828:	orr	r1, r1, ip, lsl #2
   3182c:	strb	r1, [r2]
   31830:	add	r2, r2, #2
   31834:	str	r2, [sp, #12]
   31838:	cmp	r0, #0
   3183c:	beq	31860 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3c4>
   31840:	mov	r1, r0
   31844:	ldr	r0, [sp, #20]
   31848:	b	31854 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3b8>
   3184c:	ldr	r0, [sp, #20]
   31850:	ldr	r1, [sp, #8]
   31854:	sub	r0, r0, r1
   31858:	add	r0, sl, r0
   3185c:	b	3155c <flatcc_json_parser_build_uint8_vector_base64@@Base+0xc0>
   31860:	ldr	r0, [sp]
   31864:	ldr	r1, [sp, #12]
   31868:	sub	r0, r1, r0
   3186c:	ldr	r1, [sp, #4]
   31870:	cmp	r1, r0
   31874:	bls	3188c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3f0>
   31878:	sub	r1, r1, r0
   3187c:	ldr	r0, [r5]
   31880:	bl	2b4e0 <flatcc_builder_truncate_vector@@Base>
   31884:	cmp	r0, #0
   31888:	bne	31604 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x168>
   3188c:	ldr	r0, [r5]
   31890:	bl	2c96c <flatcc_builder_end_vector@@Base>
   31894:	cmp	r0, #0
   31898:	str	r0, [r6]
   3189c:	beq	31604 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x168>
   318a0:	ldrb	r0, [r7]
   318a4:	cmp	r0, #34	; 0x22
   318a8:	bne	318bc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x420>
   318ac:	add	r4, r7, #1
   318b0:	b	31594 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xf8>
   318b4:	mov	r3, r1
   318b8:	b	31774 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2d8>
   318bc:	ldr	r0, [r5, #24]
   318c0:	cmp	r0, #0
   318c4:	bne	31594 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xf8>
   318c8:	mov	r0, #20
   318cc:	b	3161c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x180>
   318d0:	andeq	r3, r0, ip, asr #31
   318d4:	andeq	r3, r0, r8, asr #29

000318d8 <flatcc_json_parser_build_string@@Base>:
   318d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   318dc:	add	fp, sp, #28
   318e0:	sub	sp, sp, #4
   318e4:	mov	sl, r3
   318e8:	mov	r4, r2
   318ec:	mov	r5, r0
   318f0:	cmp	r1, r2
   318f4:	beq	31944 <flatcc_json_parser_build_string@@Base+0x6c>
   318f8:	ldrb	r0, [r1]
   318fc:	cmp	r0, #34	; 0x22
   31900:	bne	31944 <flatcc_json_parser_build_string@@Base+0x6c>
   31904:	add	r1, r1, #1
   31908:	mov	r6, r4
   3190c:	cmp	r1, r4
   31910:	beq	31974 <flatcc_json_parser_build_string@@Base+0x9c>
   31914:	mov	r6, r1
   31918:	ldrb	r0, [r6]
   3191c:	cmp	r0, #32
   31920:	bcc	31b70 <flatcc_json_parser_build_string@@Base+0x298>
   31924:	cmp	r0, #34	; 0x22
   31928:	cmpne	r0, #92	; 0x5c
   3192c:	beq	31a90 <flatcc_json_parser_build_string@@Base+0x1b8>
   31930:	add	r6, r6, #1
   31934:	cmp	r4, r6
   31938:	bne	31918 <flatcc_json_parser_build_string@@Base+0x40>
   3193c:	mov	r6, r1
   31940:	b	31974 <flatcc_json_parser_build_string@@Base+0x9c>
   31944:	ldr	r0, [r5, #24]
   31948:	mov	r6, r4
   3194c:	cmp	r0, #0
   31950:	bne	31974 <flatcc_json_parser_build_string@@Base+0x9c>
   31954:	str	r1, [r5, #36]	; 0x24
   31958:	mov	r0, #16
   3195c:	mov	r6, r4
   31960:	ldr	r2, [r5, #4]
   31964:	sub	r1, r1, r2
   31968:	add	r1, r1, #1
   3196c:	str	r1, [r5, #20]
   31970:	str	r0, [r5, #24]
   31974:	ldr	r0, [r5, #24]
   31978:	cmp	r0, #0
   3197c:	bne	3199c <flatcc_json_parser_build_string@@Base+0xc4>
   31980:	str	r4, [r5, #36]	; 0x24
   31984:	mov	r0, #20
   31988:	ldr	r1, [r5, #4]
   3198c:	sub	r1, r4, r1
   31990:	add	r1, r1, #1
   31994:	str	r1, [r5, #20]
   31998:	str	r0, [r5, #24]
   3199c:	mov	r7, r4
   319a0:	ldr	r0, [r5]
   319a4:	bl	2ba4c <flatcc_builder_start_string@@Base>
   319a8:	cmp	r0, #0
   319ac:	beq	319c8 <flatcc_json_parser_build_string@@Base+0xf0>
   319b0:	mov	r4, r7
   319b4:	mov	r0, #0
   319b8:	str	r0, [sl]
   319bc:	mov	r0, r4
   319c0:	sub	sp, fp, #28
   319c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   319c8:	ldr	r0, [r5]
   319cc:	sub	r2, r7, r6
   319d0:	mov	r1, r6
   319d4:	bl	2b334 <flatcc_builder_append_string@@Base>
   319d8:	cmp	r0, #0
   319dc:	beq	319b0 <flatcc_json_parser_build_string@@Base+0xd8>
   319e0:	cmp	r7, r4
   319e4:	mov	r6, r4
   319e8:	beq	31b14 <flatcc_json_parser_build_string@@Base+0x23c>
   319ec:	mov	r8, sp
   319f0:	add	r9, r8, #1
   319f4:	ldrb	r0, [r7]
   319f8:	cmp	r0, #34	; 0x22
   319fc:	beq	31b10 <flatcc_json_parser_build_string@@Base+0x238>
   31a00:	mov	r0, r5
   31a04:	mov	r1, r7
   31a08:	mov	r2, r4
   31a0c:	mov	r3, r8
   31a10:	bl	2f1bc <flatcc_json_parser_string_escape@@Base>
   31a14:	mov	r6, r0
   31a18:	ldr	r0, [r5]
   31a1c:	ldrb	r2, [sp]
   31a20:	mov	r1, r9
   31a24:	bl	2b334 <flatcc_builder_append_string@@Base>
   31a28:	cmp	r0, #0
   31a2c:	beq	31b68 <flatcc_json_parser_build_string@@Base+0x290>
   31a30:	cmp	r6, r4
   31a34:	beq	31ab8 <flatcc_json_parser_build_string@@Base+0x1e0>
   31a38:	mov	r7, r6
   31a3c:	ldrb	r0, [r7]
   31a40:	cmp	r0, #32
   31a44:	bcc	31adc <flatcc_json_parser_build_string@@Base+0x204>
   31a48:	cmp	r0, #34	; 0x22
   31a4c:	cmpne	r0, #92	; 0x5c
   31a50:	beq	31a64 <flatcc_json_parser_build_string@@Base+0x18c>
   31a54:	add	r7, r7, #1
   31a58:	cmp	r4, r7
   31a5c:	bne	31a3c <flatcc_json_parser_build_string@@Base+0x164>
   31a60:	b	31ab8 <flatcc_json_parser_build_string@@Base+0x1e0>
   31a64:	cmp	r4, r7
   31a68:	beq	31b08 <flatcc_json_parser_build_string@@Base+0x230>
   31a6c:	ldr	r0, [r5]
   31a70:	sub	r2, r7, r6
   31a74:	mov	r1, r6
   31a78:	bl	2b334 <flatcc_builder_append_string@@Base>
   31a7c:	cmp	r0, #0
   31a80:	beq	319b0 <flatcc_json_parser_build_string@@Base+0xd8>
   31a84:	cmp	r4, r7
   31a88:	bne	319f4 <flatcc_json_parser_build_string@@Base+0x11c>
   31a8c:	b	31b08 <flatcc_json_parser_build_string@@Base+0x230>
   31a90:	cmp	r4, r6
   31a94:	beq	31b7c <flatcc_json_parser_build_string@@Base+0x2a4>
   31a98:	cmp	r0, #34	; 0x22
   31a9c:	bne	31ab0 <flatcc_json_parser_build_string@@Base+0x1d8>
   31aa0:	ldr	r0, [r5]
   31aa4:	sub	r2, r6, r1
   31aa8:	bl	2de20 <flatcc_builder_create_string@@Base>
   31aac:	b	31b1c <flatcc_json_parser_build_string@@Base+0x244>
   31ab0:	mov	r7, r6
   31ab4:	b	31b80 <flatcc_json_parser_build_string@@Base+0x2a8>
   31ab8:	ldr	r0, [r5, #24]
   31abc:	mov	r6, r4
   31ac0:	cmp	r0, #0
   31ac4:	bne	31b14 <flatcc_json_parser_build_string@@Base+0x23c>
   31ac8:	str	r4, [r5, #36]	; 0x24
   31acc:	mov	r0, #20
   31ad0:	ldr	r1, [r5, #4]
   31ad4:	sub	r1, r4, r1
   31ad8:	b	31afc <flatcc_json_parser_build_string@@Base+0x224>
   31adc:	ldr	r0, [r5, #24]
   31ae0:	mov	r6, r4
   31ae4:	cmp	r0, #0
   31ae8:	bne	31b14 <flatcc_json_parser_build_string@@Base+0x23c>
   31aec:	str	r7, [r5, #36]	; 0x24
   31af0:	mov	r0, #17
   31af4:	ldr	r1, [r5, #4]
   31af8:	sub	r1, r7, r1
   31afc:	add	r1, r1, #1
   31b00:	str	r1, [r5, #20]
   31b04:	str	r0, [r5, #24]
   31b08:	mov	r6, r4
   31b0c:	b	31b14 <flatcc_json_parser_build_string@@Base+0x23c>
   31b10:	mov	r6, r7
   31b14:	ldr	r0, [r5]
   31b18:	bl	2dfa4 <flatcc_builder_end_string@@Base>
   31b1c:	cmp	r6, r4
   31b20:	str	r0, [sl]
   31b24:	beq	31b3c <flatcc_json_parser_build_string@@Base+0x264>
   31b28:	ldrb	r0, [r6]
   31b2c:	cmp	r0, #34	; 0x22
   31b30:	bne	31b3c <flatcc_json_parser_build_string@@Base+0x264>
   31b34:	add	r4, r6, #1
   31b38:	b	319bc <flatcc_json_parser_build_string@@Base+0xe4>
   31b3c:	ldr	r0, [r5, #24]
   31b40:	cmp	r0, #0
   31b44:	bne	319bc <flatcc_json_parser_build_string@@Base+0xe4>
   31b48:	str	r6, [r5, #36]	; 0x24
   31b4c:	mov	r0, #20
   31b50:	ldr	r1, [r5, #4]
   31b54:	sub	r1, r6, r1
   31b58:	add	r1, r1, #1
   31b5c:	str	r1, [r5, #20]
   31b60:	str	r0, [r5, #24]
   31b64:	b	319bc <flatcc_json_parser_build_string@@Base+0xe4>
   31b68:	mov	r4, r6
   31b6c:	b	319b4 <flatcc_json_parser_build_string@@Base+0xdc>
   31b70:	ldr	r0, [r5, #24]
   31b74:	cmp	r0, #0
   31b78:	beq	31b88 <flatcc_json_parser_build_string@@Base+0x2b0>
   31b7c:	mov	r7, r4
   31b80:	mov	r6, r1
   31b84:	b	319a0 <flatcc_json_parser_build_string@@Base+0xc8>
   31b88:	str	r6, [r5, #36]	; 0x24
   31b8c:	mov	r0, #17
   31b90:	mov	r7, r4
   31b94:	ldr	r2, [r5, #4]
   31b98:	sub	r2, r6, r2
   31b9c:	add	r2, r2, #1
   31ba0:	str	r2, [r5, #20]
   31ba4:	str	r0, [r5, #24]
   31ba8:	b	31b80 <flatcc_json_parser_build_string@@Base+0x2a8>

00031bac <flatcc_json_parser_prepare_unions@@Base>:
   31bac:	push	{r4, r5, r6, r7, fp, lr}
   31bb0:	add	fp, sp, #16
   31bb4:	mov	r6, r0
   31bb8:	add	r0, r3, r3, lsl #1
   31bbc:	mov	r5, r1
   31bc0:	mov	r1, #8
   31bc4:	mov	r7, r3
   31bc8:	mov	r4, r2
   31bcc:	add	r1, r1, r0, lsl #3
   31bd0:	ldr	r0, [r6]
   31bd4:	bl	29df8 <flatcc_builder_enter_user_frame@@Base>
   31bd8:	mov	r1, r0
   31bdc:	ldr	r0, [fp, #8]
   31be0:	cmp	r1, #0
   31be4:	str	r1, [r0]
   31be8:	beq	31c04 <flatcc_json_parser_prepare_unions@@Base+0x58>
   31bec:	ldr	r0, [r6]
   31bf0:	bl	29fbc <flatcc_builder_get_user_frame_ptr@@Base>
   31bf4:	mov	r4, r5
   31bf8:	str	r7, [r0]
   31bfc:	mov	r0, r4
   31c00:	pop	{r4, r5, r6, r7, fp, pc}
   31c04:	ldr	r0, [r6, #24]
   31c08:	cmp	r0, #0
   31c0c:	beq	31c18 <flatcc_json_parser_prepare_unions@@Base+0x6c>
   31c10:	mov	r0, r4
   31c14:	pop	{r4, r5, r6, r7, fp, pc}
   31c18:	str	r5, [r6, #36]	; 0x24
   31c1c:	mov	r0, #33	; 0x21
   31c20:	ldr	r1, [r6, #4]
   31c24:	sub	r1, r5, r1
   31c28:	add	r1, r1, #1
   31c2c:	str	r1, [r6, #20]
   31c30:	str	r0, [r6, #24]
   31c34:	mov	r0, r4
   31c38:	pop	{r4, r5, r6, r7, fp, pc}

00031c3c <flatcc_json_parser_finalize_unions@@Base>:
   31c3c:	push	{r4, r5, r6, r7, fp, lr}
   31c40:	add	fp, sp, #16
   31c44:	mov	r6, r0
   31c48:	ldr	r0, [r0]
   31c4c:	mov	r7, r1
   31c50:	mov	r1, r3
   31c54:	mov	r5, r3
   31c58:	mov	r4, r2
   31c5c:	bl	29fbc <flatcc_builder_get_user_frame_ptr@@Base>
   31c60:	ldr	r0, [r0, #4]
   31c64:	cmp	r0, #0
   31c68:	beq	31c98 <flatcc_json_parser_finalize_unions@@Base+0x5c>
   31c6c:	ldr	r0, [r6, #24]
   31c70:	cmp	r0, #0
   31c74:	bne	31c9c <flatcc_json_parser_finalize_unions@@Base+0x60>
   31c78:	str	r7, [r6, #36]	; 0x24
   31c7c:	mov	r0, #27
   31c80:	ldr	r1, [r6, #4]
   31c84:	sub	r1, r7, r1
   31c88:	add	r1, r1, #1
   31c8c:	str	r1, [r6, #20]
   31c90:	str	r0, [r6, #24]
   31c94:	b	31c9c <flatcc_json_parser_finalize_unions@@Base+0x60>
   31c98:	mov	r4, r7
   31c9c:	ldr	r0, [r6]
   31ca0:	mov	r1, r5
   31ca4:	bl	29f20 <flatcc_builder_exit_user_frame_at@@Base>
   31ca8:	mov	r0, r4
   31cac:	pop	{r4, r5, r6, r7, fp, pc}

00031cb0 <flatcc_json_parser_union@@Base>:
   31cb0:	push	{r4, r5, r6, r7, fp, lr}
   31cb4:	add	fp, sp, #16
   31cb8:	sub	sp, sp, #16
   31cbc:	mov	r6, r1
   31cc0:	mov	r5, r0
   31cc4:	ldr	r0, [r0]
   31cc8:	ldr	r1, [fp, #12]
   31ccc:	mov	r7, r3
   31cd0:	mov	r4, r2
   31cd4:	bl	29fbc <flatcc_builder_get_user_frame_ptr@@Base>
   31cd8:	add	r2, r0, #8
   31cdc:	add	r3, r7, r7, lsl #1
   31ce0:	mov	r1, r2
   31ce4:	ldr	r7, [r1, r3, lsl #3]!
   31ce8:	cmp	r7, #0
   31cec:	beq	31d1c <flatcc_json_parser_union@@Base+0x6c>
   31cf0:	ldr	r0, [r5, #24]
   31cf4:	cmp	r0, #0
   31cf8:	bne	31ddc <flatcc_json_parser_union@@Base+0x12c>
   31cfc:	mov	r0, #28
   31d00:	str	r6, [r5, #36]	; 0x24
   31d04:	ldr	r1, [r5, #4]
   31d08:	sub	r1, r6, r1
   31d0c:	add	r1, r1, #1
   31d10:	str	r1, [r5, #20]
   31d14:	str	r0, [r5, #24]
   31d18:	b	31ddc <flatcc_json_parser_union@@Base+0x12c>
   31d1c:	add	r2, r2, r3, lsl #3
   31d20:	ldrb	r3, [r2, #12]
   31d24:	cmp	r3, #0
   31d28:	beq	31d98 <flatcc_json_parser_union@@Base+0xe8>
   31d2c:	ldrb	r3, [r2, #13]
   31d30:	cmp	r3, #0
   31d34:	strb	r3, [sp, #8]
   31d38:	beq	31dd0 <flatcc_json_parser_union@@Base+0x120>
   31d3c:	ldr	r1, [r0, #4]
   31d40:	ldr	r7, [fp, #16]
   31d44:	mov	r2, r4
   31d48:	sub	r1, r1, #1
   31d4c:	str	r1, [r0, #4]
   31d50:	add	r0, sp, #8
   31d54:	mov	r1, r6
   31d58:	add	r0, r0, #4
   31d5c:	str	r0, [sp]
   31d60:	mov	r0, r5
   31d64:	blx	r7
   31d68:	cmp	r0, r4
   31d6c:	beq	31ddc <flatcc_json_parser_union@@Base+0x12c>
   31d70:	mov	r6, r0
   31d74:	ldr	r1, [fp, #8]
   31d78:	ldr	r0, [r5]
   31d7c:	ldr	r2, [sp, #8]
   31d80:	ldr	r3, [sp, #12]
   31d84:	bl	2cdbc <flatcc_builder_table_add_union@@Base>
   31d88:	cmp	r0, #0
   31d8c:	bne	31cf0 <flatcc_json_parser_union@@Base+0x40>
   31d90:	mov	r4, r6
   31d94:	b	31ddc <flatcc_json_parser_union@@Base+0x12c>
   31d98:	ldr	r3, [r0, #4]
   31d9c:	add	r3, r3, #1
   31da0:	str	r3, [r0, #4]
   31da4:	ldr	r0, [r5, #16]
   31da8:	str	r0, [r2, #8]
   31dac:	ldr	r0, [r5, #4]
   31db0:	str	r0, [r2, #4]
   31db4:	str	r6, [r1]
   31db8:	mov	r0, r5
   31dbc:	mov	r1, r6
   31dc0:	mov	r2, r4
   31dc4:	bl	2fadc <flatcc_json_parser_generic_json@@Base>
   31dc8:	mov	r4, r0
   31dcc:	b	31ddc <flatcc_json_parser_union@@Base+0x12c>
   31dd0:	ldr	r0, [r5, #24]
   31dd4:	cmp	r0, #0
   31dd8:	beq	31de8 <flatcc_json_parser_union@@Base+0x138>
   31ddc:	mov	r0, r4
   31de0:	sub	sp, fp, #16
   31de4:	pop	{r4, r5, r6, r7, fp, pc}
   31de8:	mov	r0, #25
   31dec:	b	31d00 <flatcc_json_parser_union@@Base+0x50>

00031df0 <flatcc_json_parser_union_type@@Base>:
   31df0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   31df4:	add	fp, sp, #28
   31df8:	sub	sp, sp, #20
   31dfc:	mov	r8, r1
   31e00:	mov	r5, r0
   31e04:	ldr	r0, [r0]
   31e08:	ldr	r1, [fp, #12]
   31e0c:	mov	r6, r3
   31e10:	mov	r4, r2
   31e14:	bl	29fbc <flatcc_builder_get_user_frame_ptr@@Base>
   31e18:	add	r3, r6, r6, lsl #1
   31e1c:	add	r2, r0, #8
   31e20:	mov	r9, r0
   31e24:	add	sl, r2, r3, lsl #3
   31e28:	mov	r0, sl
   31e2c:	ldrb	r1, [r0, #12]!
   31e30:	cmp	r1, #0
   31e34:	beq	31e64 <flatcc_json_parser_union_type@@Base+0x74>
   31e38:	ldr	r0, [r5, #24]
   31e3c:	cmp	r0, #0
   31e40:	bne	32140 <flatcc_json_parser_union_type@@Base+0x350>
   31e44:	str	r8, [r5, #36]	; 0x24
   31e48:	mov	r0, #28
   31e4c:	ldr	r1, [r5, #4]
   31e50:	sub	r1, r8, r1
   31e54:	add	r1, r1, #1
   31e58:	str	r1, [r5, #20]
   31e5c:	str	r0, [r5, #24]
   31e60:	b	32140 <flatcc_json_parser_union_type@@Base+0x350>
   31e64:	mov	r1, #1
   31e68:	mov	r6, #0
   31e6c:	mov	lr, sl
   31e70:	cmp	r8, r4
   31e74:	str	r3, [sp, #4]
   31e78:	str	r2, [sp, #8]
   31e7c:	strb	r1, [r0]
   31e80:	strb	r6, [lr, #13]!
   31e84:	beq	32044 <flatcc_json_parser_union_type@@Base+0x254>
   31e88:	mov	r2, r8
   31e8c:	ldrb	ip, [r2], #1
   31e90:	cmp	ip, #45	; 0x2d
   31e94:	movne	r2, r8
   31e98:	cmp	r2, r4
   31e9c:	beq	31f4c <flatcc_json_parser_union_type@@Base+0x15c>
   31ea0:	mov	r6, #0
   31ea4:	mov	r0, #10
   31ea8:	mov	r7, #0
   31eac:	ldrb	r1, [r2]
   31eb0:	sub	r3, r1, #48	; 0x30
   31eb4:	uxtb	r3, r3
   31eb8:	cmp	r3, #9
   31ebc:	bhi	31fd8 <flatcc_json_parser_union_type@@Base+0x1e8>
   31ec0:	add	r3, r7, r7, lsl #2
   31ec4:	lsl	r3, r3, #1
   31ec8:	umlal	r1, r3, r6, r0
   31ecc:	subs	r1, r1, #48	; 0x30
   31ed0:	sbc	r3, r3, #0
   31ed4:	subs	r6, r1, r6
   31ed8:	sbcs	r7, r3, r7
   31edc:	bcc	31fe8 <flatcc_json_parser_union_type@@Base+0x1f8>
   31ee0:	add	r2, r2, #1
   31ee4:	mov	r6, r1
   31ee8:	mov	r7, r3
   31eec:	cmp	r4, r2
   31ef0:	bne	31eac <flatcc_json_parser_union_type@@Base+0xbc>
   31ef4:	mov	r0, #0
   31ef8:	mov	r2, r4
   31efc:	mov	r6, r1
   31f00:	mov	r7, r3
   31f04:	cmp	r2, r8
   31f08:	beq	32044 <flatcc_json_parser_union_type@@Base+0x254>
   31f0c:	cmp	r0, #0
   31f10:	beq	31f64 <flatcc_json_parser_union_type@@Base+0x174>
   31f14:	ldrb	r0, [r2]
   31f18:	cmp	r0, #46	; 0x2e
   31f1c:	beq	31f2c <flatcc_json_parser_union_type@@Base+0x13c>
   31f20:	cmp	r0, #101	; 0x65
   31f24:	cmpne	r0, #69	; 0x45
   31f28:	bne	31f64 <flatcc_json_parser_union_type@@Base+0x174>
   31f2c:	ldr	r0, [r5, #24]
   31f30:	mov	r6, #0
   31f34:	mov	r7, #0
   31f38:	cmp	r0, #0
   31f3c:	mov	r0, r4
   31f40:	bne	32028 <flatcc_json_parser_union_type@@Base+0x238>
   31f44:	mov	r0, #12
   31f48:	b	32004 <flatcc_json_parser_union_type@@Base+0x214>
   31f4c:	mov	r2, r4
   31f50:	mov	r7, #0
   31f54:	mov	r0, #0
   31f58:	cmp	r2, r8
   31f5c:	bne	31f0c <flatcc_json_parser_union_type@@Base+0x11c>
   31f60:	b	32044 <flatcc_json_parser_union_type@@Base+0x254>
   31f64:	mov	r0, r2
   31f68:	cmp	r0, r8
   31f6c:	beq	32044 <flatcc_json_parser_union_type@@Base+0x254>
   31f70:	cmp	ip, #45	; 0x2d
   31f74:	bne	31f90 <flatcc_json_parser_union_type@@Base+0x1a0>
   31f78:	ldr	r1, [r5, #24]
   31f7c:	mov	r2, r4
   31f80:	cmp	r1, #0
   31f84:	bne	3203c <flatcc_json_parser_union_type@@Base+0x24c>
   31f88:	mov	r1, #8
   31f8c:	b	31fb0 <flatcc_json_parser_union_type@@Base+0x1c0>
   31f90:	subs	r1, r6, #256	; 0x100
   31f94:	sbcs	r1, r7, #0
   31f98:	bcc	32034 <flatcc_json_parser_union_type@@Base+0x244>
   31f9c:	ldr	r1, [r5, #24]
   31fa0:	mov	r2, r4
   31fa4:	cmp	r1, #0
   31fa8:	bne	3203c <flatcc_json_parser_union_type@@Base+0x24c>
   31fac:	mov	r1, #7
   31fb0:	str	r0, [r5, #36]	; 0x24
   31fb4:	ldr	r2, [r5, #4]
   31fb8:	sub	r0, r0, r2
   31fbc:	mov	r2, r4
   31fc0:	add	r0, r0, #1
   31fc4:	str	r0, [r5, #20]
   31fc8:	str	r1, [r5, #24]
   31fcc:	cmp	r2, r8
   31fd0:	bne	32068 <flatcc_json_parser_union_type@@Base+0x278>
   31fd4:	b	32044 <flatcc_json_parser_union_type@@Base+0x254>
   31fd8:	mov	r0, #1
   31fdc:	cmp	r2, r8
   31fe0:	bne	31f0c <flatcc_json_parser_union_type@@Base+0x11c>
   31fe4:	b	32044 <flatcc_json_parser_union_type@@Base+0x254>
   31fe8:	ldr	r0, [r5, #24]
   31fec:	mov	r6, #0
   31ff0:	mov	r7, #0
   31ff4:	cmp	r0, #0
   31ff8:	mov	r0, r4
   31ffc:	bne	32028 <flatcc_json_parser_union_type@@Base+0x238>
   32000:	mov	r0, #8
   32004:	str	r2, [r5, #36]	; 0x24
   32008:	mov	r6, #0
   3200c:	mov	r7, #0
   32010:	ldr	r1, [r5, #4]
   32014:	sub	r1, r2, r1
   32018:	add	r1, r1, #1
   3201c:	str	r1, [r5, #20]
   32020:	str	r0, [r5, #24]
   32024:	mov	r0, r4
   32028:	cmp	r0, r8
   3202c:	bne	31f70 <flatcc_json_parser_union_type@@Base+0x180>
   32030:	b	32044 <flatcc_json_parser_union_type@@Base+0x254>
   32034:	mov	r2, r0
   32038:	strb	r6, [lr]
   3203c:	cmp	r2, r8
   32040:	bne	32068 <flatcc_json_parser_union_type@@Base+0x278>
   32044:	ldr	r3, [fp, #16]
   32048:	mov	r0, r5
   3204c:	mov	r1, r8
   32050:	mov	r2, r4
   32054:	str	lr, [sp]
   32058:	mov	r6, lr
   3205c:	bl	32178 <flatcc_json_parser_union_type@@Base+0x388>
   32060:	mov	lr, r6
   32064:	mov	r2, r0
   32068:	ldr	r0, [sp, #8]
   3206c:	ldr	r1, [sp, #4]
   32070:	ldr	r1, [r0, r1, lsl #3]
   32074:	cmp	r1, #0
   32078:	beq	32118 <flatcc_json_parser_union_type@@Base+0x328>
   3207c:	ldr	r0, [r9, #4]
   32080:	str	r2, [sp, #8]
   32084:	cmp	r0, #0
   32088:	beq	3214c <flatcc_json_parser_union_type@@Base+0x35c>
   3208c:	sub	r0, r0, #1
   32090:	ldr	r6, [fp, #20]
   32094:	mov	r2, r4
   32098:	str	r0, [r9, #4]
   3209c:	ldr	r0, [sl, #8]
   320a0:	ldr	r8, [r5, #4]
   320a4:	ldr	r7, [r5, #16]
   320a8:	str	r0, [r5, #16]
   320ac:	ldr	r0, [sl, #4]
   320b0:	str	r0, [r5, #4]
   320b4:	add	r0, sp, #12
   320b8:	ldrb	r3, [lr]
   320bc:	add	r0, r0, #4
   320c0:	str	r0, [sp]
   320c4:	mov	r0, r5
   320c8:	strb	r3, [sp, #12]
   320cc:	blx	r6
   320d0:	cmp	r0, r4
   320d4:	beq	32140 <flatcc_json_parser_union_type@@Base+0x350>
   320d8:	ldr	r1, [fp, #8]
   320dc:	ldr	r0, [r5]
   320e0:	ldr	r2, [sp, #12]
   320e4:	ldr	r3, [sp, #16]
   320e8:	bl	2cdbc <flatcc_builder_table_add_union@@Base>
   320ec:	cmp	r0, #0
   320f0:	beq	32134 <flatcc_json_parser_union_type@@Base+0x344>
   320f4:	ldr	r0, [r5, #24]
   320f8:	cmp	r0, #0
   320fc:	bne	32140 <flatcc_json_parser_union_type@@Base+0x350>
   32100:	ldr	r2, [sp, #8]
   32104:	mov	r0, #28
   32108:	str	r2, [r5, #36]	; 0x24
   3210c:	ldr	r1, [r5, #4]
   32110:	sub	r1, r2, r1
   32114:	b	31e54 <flatcc_json_parser_union_type@@Base+0x64>
   32118:	ldrb	r0, [lr]
   3211c:	ldr	r1, [r9, #4]
   32120:	mov	r4, r2
   32124:	cmp	r0, #0
   32128:	addne	r1, r1, #1
   3212c:	str	r1, [r9, #4]
   32130:	b	32140 <flatcc_json_parser_union_type@@Base+0x350>
   32134:	ldr	r4, [sp, #8]
   32138:	str	r8, [r5, #4]
   3213c:	str	r7, [r5, #16]
   32140:	mov	r0, r4
   32144:	sub	sp, fp, #28
   32148:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3214c:	ldr	r0, [pc, #24]	; 3216c <flatcc_json_parser_union_type@@Base+0x37c>
   32150:	ldr	r1, [pc, #24]	; 32170 <flatcc_json_parser_union_type@@Base+0x380>
   32154:	ldr	r3, [pc, #24]	; 32174 <flatcc_json_parser_union_type@@Base+0x384>
   32158:	movw	r2, #965	; 0x3c5
   3215c:	add	r0, pc, r0
   32160:	add	r1, pc, r1
   32164:	add	r3, pc, r3
   32168:	bl	12bbc <__assert_fail@plt>
   3216c:	andeq	r3, r0, ip, lsr r9
   32170:	andeq	r3, r0, r7, asr #18
   32174:	andeq	r3, r0, r4, lsr #19
   32178:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3217c:	add	fp, sp, #28
   32180:	sub	sp, sp, #44	; 0x2c
   32184:	mov	r4, r2
   32188:	mov	r2, r1
   3218c:	ldr	r1, [fp, #8]
   32190:	mov	r5, r0
   32194:	mov	r0, #0
   32198:	cmp	r2, r4
   3219c:	strb	r0, [r1]
   321a0:	beq	32204 <flatcc_json_parser_union_type@@Base+0x414>
   321a4:	ldrb	r0, [r2]
   321a8:	cmp	r0, #46	; 0x2e
   321ac:	beq	321c8 <flatcc_json_parser_union_type@@Base+0x3d8>
   321b0:	cmp	r0, #34	; 0x22
   321b4:	bne	321fc <flatcc_json_parser_union_type@@Base+0x40c>
   321b8:	mov	r0, #0
   321bc:	add	r1, r2, #1
   321c0:	str	r0, [r5, #12]
   321c4:	b	32208 <flatcc_json_parser_union_type@@Base+0x418>
   321c8:	ldr	r0, [r5, #24]
   321cc:	mov	r1, r4
   321d0:	cmp	r0, #0
   321d4:	bne	32208 <flatcc_json_parser_union_type@@Base+0x418>
   321d8:	str	r2, [r5, #36]	; 0x24
   321dc:	mov	r0, #5
   321e0:	ldr	r1, [r5, #4]
   321e4:	sub	r1, r2, r1
   321e8:	add	r1, r1, #1
   321ec:	str	r1, [r5, #20]
   321f0:	str	r0, [r5, #24]
   321f4:	mov	r1, r4
   321f8:	b	32208 <flatcc_json_parser_union_type@@Base+0x418>
   321fc:	mov	r0, #1
   32200:	str	r0, [r5, #12]
   32204:	mov	r1, r2
   32208:	ldr	r0, [r5, #12]
   3220c:	cmp	r0, #0
   32210:	beq	32224 <flatcc_json_parser_union_type@@Base+0x434>
   32214:	mov	r7, r1
   32218:	cmp	r7, r4
   3221c:	bne	32270 <flatcc_json_parser_union_type@@Base+0x480>
   32220:	b	3236c <flatcc_json_parser_union_type@@Base+0x57c>
   32224:	sub	r0, r4, r1
   32228:	cmp	r0, #2
   3222c:	blt	32250 <flatcc_json_parser_union_type@@Base+0x460>
   32230:	ldrb	r0, [r1]
   32234:	cmp	r0, #32
   32238:	bhi	32214 <flatcc_json_parser_union_type@@Base+0x424>
   3223c:	bne	32250 <flatcc_json_parser_union_type@@Base+0x460>
   32240:	mov	r7, r1
   32244:	ldrb	r0, [r7, #1]!
   32248:	cmp	r0, #32
   3224c:	bhi	32268 <flatcc_json_parser_union_type@@Base+0x478>
   32250:	mov	r0, r5
   32254:	mov	r2, r4
   32258:	mov	r6, r3
   3225c:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   32260:	mov	r3, r6
   32264:	mov	r7, r0
   32268:	cmp	r7, r4
   3226c:	beq	3236c <flatcc_json_parser_union_type@@Base+0x57c>
   32270:	add	r9, r3, #4
   32274:	mov	r6, #0
   32278:	add	sl, sp, #32
   3227c:	add	r8, sp, #28
   32280:	str	r3, [sp, #16]
   32284:	str	r9, [sp, #12]
   32288:	str	r6, [sp, #20]
   3228c:	mov	r6, r3
   32290:	ldr	r6, [r3]
   32294:	add	r0, sp, #24
   32298:	mov	r1, r7
   3229c:	mov	r2, r4
   322a0:	mov	r3, r8
   322a4:	str	sl, [sp]
   322a8:	str	r0, [sp, #4]
   322ac:	mov	r0, r5
   322b0:	blx	r6
   322b4:	cmp	r0, r4
   322b8:	beq	3236c <flatcc_json_parser_union_type@@Base+0x57c>
   322bc:	cmp	r0, r7
   322c0:	bne	322d4 <flatcc_json_parser_union_type@@Base+0x4e4>
   322c4:	ldr	r6, [r9], #4
   322c8:	cmp	r6, #0
   322cc:	bne	32294 <flatcc_json_parser_union_type@@Base+0x4a4>
   322d0:	b	32344 <flatcc_json_parser_union_type@@Base+0x554>
   322d4:	ldr	r6, [sp, #20]
   322d8:	cmp	r6, #0
   322dc:	beq	322ec <flatcc_json_parser_union_type@@Base+0x4fc>
   322e0:	ldr	r1, [r5, #12]
   322e4:	cmp	r1, #0
   322e8:	bne	323a0 <flatcc_json_parser_union_type@@Base+0x5b0>
   322ec:	ldr	r1, [sp, #28]
   322f0:	cmp	r1, #0
   322f4:	bne	32378 <flatcc_json_parser_union_type@@Base+0x588>
   322f8:	ldr	r1, [sp, #32]
   322fc:	ldr	r2, [sp, #36]	; 0x24
   32300:	subs	r3, r1, #256	; 0x100
   32304:	sbcs	r2, r2, #0
   32308:	bcs	3238c <flatcc_json_parser_union_type@@Base+0x59c>
   3230c:	ldr	r2, [fp, #8]
   32310:	ldr	r9, [sp, #12]
   32314:	add	r6, r6, #1
   32318:	mov	r7, r0
   3231c:	mov	r3, r2
   32320:	ldrb	r2, [r2]
   32324:	add	r1, r2, r1
   32328:	strb	r1, [r3]
   3232c:	ldr	r3, [sp, #16]
   32330:	ldr	r1, [sp, #24]
   32334:	cmp	r1, #0
   32338:	bne	32288 <flatcc_json_parser_union_type@@Base+0x498>
   3233c:	sub	sp, fp, #28
   32340:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32344:	ldr	r0, [r5, #24]
   32348:	cmp	r0, #0
   3234c:	bne	3236c <flatcc_json_parser_union_type@@Base+0x57c>
   32350:	str	r7, [r5, #36]	; 0x24
   32354:	mov	r0, #23
   32358:	ldr	r1, [r5, #4]
   3235c:	sub	r1, r7, r1
   32360:	add	r1, r1, #1
   32364:	str	r1, [r5, #20]
   32368:	str	r0, [r5, #24]
   3236c:	mov	r0, r4
   32370:	sub	sp, fp, #28
   32374:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32378:	ldr	r1, [r5, #24]
   3237c:	cmp	r1, #0
   32380:	bne	3236c <flatcc_json_parser_union_type@@Base+0x57c>
   32384:	mov	r1, #8
   32388:	b	323b0 <flatcc_json_parser_union_type@@Base+0x5c0>
   3238c:	ldr	r1, [r5, #24]
   32390:	cmp	r1, #0
   32394:	bne	3236c <flatcc_json_parser_union_type@@Base+0x57c>
   32398:	mov	r1, #7
   3239c:	b	323b0 <flatcc_json_parser_union_type@@Base+0x5c0>
   323a0:	ldr	r1, [r5, #24]
   323a4:	cmp	r1, #0
   323a8:	bne	3236c <flatcc_json_parser_union_type@@Base+0x57c>
   323ac:	mov	r1, #14
   323b0:	str	r0, [r5, #36]	; 0x24
   323b4:	ldr	r2, [r5, #4]
   323b8:	sub	r0, r0, r2
   323bc:	add	r0, r0, #1
   323c0:	str	r0, [r5, #20]
   323c4:	str	r1, [r5, #24]
   323c8:	b	3236c <flatcc_json_parser_union_type@@Base+0x57c>

000323cc <flatcc_json_parser_union_vector@@Base>:
   323cc:	push	{r4, r5, r6, r7, fp, lr}
   323d0:	add	fp, sp, #16
   323d4:	sub	sp, sp, #16
   323d8:	mov	r6, r1
   323dc:	mov	r5, r0
   323e0:	ldr	r0, [r0]
   323e4:	ldr	r1, [fp, #12]
   323e8:	mov	r7, r3
   323ec:	mov	r4, r2
   323f0:	bl	29fbc <flatcc_builder_get_user_frame_ptr@@Base>
   323f4:	add	r2, r0, #8
   323f8:	add	r3, r7, r7, lsl #1
   323fc:	mov	r1, r2
   32400:	ldr	r7, [r1, r3, lsl #3]!
   32404:	cmp	r7, #0
   32408:	beq	32440 <flatcc_json_parser_union_vector@@Base+0x74>
   3240c:	ldr	r0, [r5, #24]
   32410:	cmp	r0, #0
   32414:	bne	32434 <flatcc_json_parser_union_vector@@Base+0x68>
   32418:	str	r6, [r5, #36]	; 0x24
   3241c:	mov	r0, #28
   32420:	ldr	r1, [r5, #4]
   32424:	sub	r1, r6, r1
   32428:	add	r1, r1, #1
   3242c:	str	r1, [r5, #20]
   32430:	str	r0, [r5, #24]
   32434:	mov	r0, r4
   32438:	sub	sp, fp, #16
   3243c:	pop	{r4, r5, r6, r7, fp, pc}
   32440:	add	r2, r2, r3, lsl #3
   32444:	ldr	r3, [r0, #4]
   32448:	ldrb	r7, [r2, #12]
   3244c:	cmp	r7, #0
   32450:	beq	3248c <flatcc_json_parser_union_vector@@Base+0xc0>
   32454:	sub	r3, r3, #1
   32458:	ldr	r1, [fp, #16]
   3245c:	ldr	r7, [fp, #8]
   32460:	str	r3, [r0, #4]
   32464:	ldr	r0, [r2, #16]
   32468:	ldr	r3, [r2, #20]
   3246c:	mov	r2, r4
   32470:	stm	sp, {r0, r7}
   32474:	str	r1, [sp, #8]
   32478:	mov	r0, r5
   3247c:	mov	r1, r6
   32480:	bl	324c0 <flatcc_json_parser_union_vector@@Base+0xf4>
   32484:	sub	sp, fp, #16
   32488:	pop	{r4, r5, r6, r7, fp, pc}
   3248c:	add	r3, r3, #1
   32490:	str	r3, [r0, #4]
   32494:	ldr	r0, [r5, #16]
   32498:	str	r0, [r2, #8]
   3249c:	ldr	r0, [r5, #4]
   324a0:	str	r0, [r2, #4]
   324a4:	str	r6, [r1]
   324a8:	mov	r0, r5
   324ac:	mov	r1, r6
   324b0:	mov	r2, r4
   324b4:	sub	sp, fp, #16
   324b8:	pop	{r4, r5, r6, r7, fp, lr}
   324bc:	b	2fadc <flatcc_json_parser_generic_json@@Base>
   324c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   324c4:	add	fp, sp, #28
   324c8:	sub	sp, sp, #12
   324cc:	mov	r5, r0
   324d0:	mov	r0, #0
   324d4:	mov	r8, r3
   324d8:	mov	r6, r2
   324dc:	mov	r7, r1
   324e0:	str	r0, [sp, #8]
   324e4:	ldr	r0, [r5]
   324e8:	bl	2b780 <flatcc_builder_start_offset_vector@@Base>
   324ec:	cmp	r0, #0
   324f0:	beq	32514 <flatcc_json_parser_union_vector@@Base+0x148>
   324f4:	ldr	r0, [r5, #24]
   324f8:	cmp	r0, #0
   324fc:	bne	32590 <flatcc_json_parser_union_vector@@Base+0x1c4>
   32500:	str	r7, [r5, #36]	; 0x24
   32504:	mov	r0, #33	; 0x21
   32508:	ldr	r1, [r5, #4]
   3250c:	sub	r1, r7, r1
   32510:	b	32584 <flatcc_json_parser_union_vector@@Base+0x1b8>
   32514:	ldr	sl, [fp, #8]
   32518:	cmp	r7, r6
   3251c:	beq	32550 <flatcc_json_parser_union_vector@@Base+0x184>
   32520:	ldrb	r0, [r7]
   32524:	cmp	r0, #91	; 0x5b
   32528:	bne	32550 <flatcc_json_parser_union_vector@@Base+0x184>
   3252c:	add	r1, r7, #1
   32530:	sub	r0, r6, r1
   32534:	cmp	r0, #2
   32538:	blt	32624 <flatcc_json_parser_union_vector@@Base+0x258>
   3253c:	ldrb	r0, [r1]
   32540:	cmp	r0, #32
   32544:	bls	32614 <flatcc_json_parser_union_vector@@Base+0x248>
   32548:	mov	r7, r1
   3254c:	b	32634 <flatcc_json_parser_union_vector@@Base+0x268>
   32550:	ldr	r0, [r5, #24]
   32554:	mov	r9, r6
   32558:	cmp	r0, #0
   3255c:	beq	3259c <flatcc_json_parser_union_vector@@Base+0x1d0>
   32560:	cmp	sl, #0
   32564:	beq	325c4 <flatcc_json_parser_union_vector@@Base+0x1f8>
   32568:	ldr	r0, [r5, #24]
   3256c:	cmp	r0, #0
   32570:	bne	32590 <flatcc_json_parser_union_vector@@Base+0x1c4>
   32574:	str	r9, [r5, #36]	; 0x24
   32578:	mov	r0, #30
   3257c:	ldr	r1, [r5, #4]
   32580:	sub	r1, r9, r1
   32584:	add	r1, r1, #1
   32588:	str	r1, [r5, #20]
   3258c:	str	r0, [r5, #24]
   32590:	mov	r0, r6
   32594:	sub	sp, fp, #28
   32598:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3259c:	str	r7, [r5, #36]	; 0x24
   325a0:	mov	r0, #22
   325a4:	mov	r9, r6
   325a8:	ldr	r1, [r5, #4]
   325ac:	sub	r1, r7, r1
   325b0:	add	r1, r1, #1
   325b4:	str	r1, [r5, #20]
   325b8:	str	r0, [r5, #24]
   325bc:	cmp	sl, #0
   325c0:	bne	32568 <flatcc_json_parser_union_vector@@Base+0x19c>
   325c4:	ldr	r0, [r5]
   325c8:	mov	r1, r8
   325cc:	bl	29fbc <flatcc_builder_get_user_frame_ptr@@Base>
   325d0:	mov	r1, r0
   325d4:	ldr	r0, [r5]
   325d8:	bl	2ccc4 <flatcc_builder_end_offset_vector_for_unions@@Base>
   325dc:	cmp	r0, #0
   325e0:	str	r0, [sp, #8]
   325e4:	beq	3260c <flatcc_json_parser_union_vector@@Base+0x240>
   325e8:	ldr	r1, [fp, #12]
   325ec:	ldr	r0, [r5]
   325f0:	bl	2ceec <flatcc_builder_table_add_offset@@Base>
   325f4:	cmp	r0, #0
   325f8:	beq	3260c <flatcc_json_parser_union_vector@@Base+0x240>
   325fc:	ldr	r1, [sp, #8]
   32600:	mov	r6, r9
   32604:	str	r1, [r0]
   32608:	b	32590 <flatcc_json_parser_union_vector@@Base+0x1c4>
   3260c:	mov	r7, r9
   32610:	b	324f4 <flatcc_json_parser_union_vector@@Base+0x128>
   32614:	bne	32624 <flatcc_json_parser_union_vector@@Base+0x258>
   32618:	ldrb	r0, [r7, #2]!
   3261c:	cmp	r0, #32
   32620:	bhi	32634 <flatcc_json_parser_union_vector@@Base+0x268>
   32624:	mov	r0, r5
   32628:	mov	r2, r6
   3262c:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   32630:	mov	r7, r0
   32634:	cmp	r7, r6
   32638:	mov	r4, r6
   3263c:	beq	3267c <flatcc_json_parser_union_vector@@Base+0x2b0>
   32640:	ldrb	r0, [r7]
   32644:	cmp	r0, #93	; 0x5d
   32648:	bne	32678 <flatcc_json_parser_union_vector@@Base+0x2ac>
   3264c:	add	r1, r7, #1
   32650:	sub	r0, r6, r1
   32654:	cmp	r0, #2
   32658:	blt	327ec <flatcc_json_parser_union_vector@@Base+0x420>
   3265c:	ldrb	r0, [r1]
   32660:	cmp	r0, #32
   32664:	bls	327d8 <flatcc_json_parser_union_vector@@Base+0x40c>
   32668:	mov	r9, r1
   3266c:	cmp	sl, #0
   32670:	bne	32568 <flatcc_json_parser_union_vector@@Base+0x19c>
   32674:	b	325c4 <flatcc_json_parser_union_vector@@Base+0x1f8>
   32678:	mov	r4, r7
   3267c:	cmp	sl, #0
   32680:	beq	327b8 <flatcc_json_parser_union_vector@@Base+0x3ec>
   32684:	add	r0, r6, #1
   32688:	mov	sl, #0
   3268c:	add	r9, sp, #8
   32690:	str	r0, [sp, #4]
   32694:	ldr	r0, [r5]
   32698:	mov	r1, r8
   3269c:	bl	29fbc <flatcc_builder_get_user_frame_ptr@@Base>
   326a0:	ldrb	r3, [r0, -sl]
   326a4:	ldr	r7, [fp, #16]
   326a8:	mov	r0, r5
   326ac:	mov	r1, r4
   326b0:	mov	r2, r6
   326b4:	str	r9, [sp]
   326b8:	blx	r7
   326bc:	cmp	r0, r6
   326c0:	beq	32590 <flatcc_json_parser_union_vector@@Base+0x1c4>
   326c4:	mov	r7, r0
   326c8:	ldr	r0, [r5]
   326cc:	mov	r1, #1
   326d0:	bl	2aed8 <flatcc_builder_extend_offset_vector@@Base>
   326d4:	cmp	r0, #0
   326d8:	beq	324f4 <flatcc_json_parser_union_vector@@Base+0x128>
   326dc:	ldr	r1, [sp, #8]
   326e0:	str	r1, [r0]
   326e4:	sub	r0, r6, r7
   326e8:	cmp	r0, #2
   326ec:	blt	32720 <flatcc_json_parser_union_vector@@Base+0x354>
   326f0:	ldrb	r0, [r7]
   326f4:	cmp	r0, #32
   326f8:	bls	3270c <flatcc_json_parser_union_vector@@Base+0x340>
   326fc:	mov	r4, r7
   32700:	cmp	r4, r6
   32704:	bne	3273c <flatcc_json_parser_union_vector@@Base+0x370>
   32708:	b	32888 <flatcc_json_parser_union_vector@@Base+0x4bc>
   3270c:	bne	32720 <flatcc_json_parser_union_vector@@Base+0x354>
   32710:	mov	r4, r7
   32714:	ldrb	r0, [r4, #1]!
   32718:	cmp	r0, #32
   3271c:	bhi	32734 <flatcc_json_parser_union_vector@@Base+0x368>
   32720:	mov	r0, r5
   32724:	mov	r1, r7
   32728:	mov	r2, r6
   3272c:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   32730:	mov	r4, r0
   32734:	cmp	r4, r6
   32738:	beq	32888 <flatcc_json_parser_union_vector@@Base+0x4bc>
   3273c:	ldrb	r0, [r4]
   32740:	cmp	r0, #44	; 0x2c
   32744:	bne	32808 <flatcc_json_parser_union_vector@@Base+0x43c>
   32748:	add	r1, r4, #1
   3274c:	sub	r0, r6, r1
   32750:	cmp	r0, #2
   32754:	blt	32784 <flatcc_json_parser_union_vector@@Base+0x3b8>
   32758:	ldrb	r0, [r1]
   3275c:	cmp	r0, #32
   32760:	bls	32774 <flatcc_json_parser_union_vector@@Base+0x3a8>
   32764:	mov	r4, r1
   32768:	cmp	r4, r6
   3276c:	bne	3279c <flatcc_json_parser_union_vector@@Base+0x3d0>
   32770:	b	32834 <flatcc_json_parser_union_vector@@Base+0x468>
   32774:	bne	32784 <flatcc_json_parser_union_vector@@Base+0x3b8>
   32778:	ldrb	r0, [r4, #2]!
   3277c:	cmp	r0, #32
   32780:	bhi	32794 <flatcc_json_parser_union_vector@@Base+0x3c8>
   32784:	mov	r0, r5
   32788:	mov	r2, r6
   3278c:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   32790:	mov	r4, r0
   32794:	cmp	r4, r6
   32798:	beq	32834 <flatcc_json_parser_union_vector@@Base+0x468>
   3279c:	ldrb	r0, [r4]
   327a0:	cmp	r0, #93	; 0x5d
   327a4:	beq	32810 <flatcc_json_parser_union_vector@@Base+0x444>
   327a8:	ldr	r0, [fp, #8]
   327ac:	sub	sl, sl, #1
   327b0:	adds	r0, r0, sl
   327b4:	bne	32694 <flatcc_json_parser_union_vector@@Base+0x2c8>
   327b8:	ldr	r0, [r5, #24]
   327bc:	cmp	r0, #0
   327c0:	bne	32590 <flatcc_json_parser_union_vector@@Base+0x1c4>
   327c4:	str	r4, [r5, #36]	; 0x24
   327c8:	mov	r0, #30
   327cc:	ldr	r1, [r5, #4]
   327d0:	sub	r1, r4, r1
   327d4:	b	32584 <flatcc_json_parser_union_vector@@Base+0x1b8>
   327d8:	bne	327ec <flatcc_json_parser_union_vector@@Base+0x420>
   327dc:	ldrb	r0, [r7, #2]!
   327e0:	mov	r9, r7
   327e4:	cmp	r0, #32
   327e8:	bhi	32560 <flatcc_json_parser_union_vector@@Base+0x194>
   327ec:	mov	r0, r5
   327f0:	mov	r2, r6
   327f4:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   327f8:	mov	r9, r0
   327fc:	cmp	sl, #0
   32800:	bne	32568 <flatcc_json_parser_union_vector@@Base+0x19c>
   32804:	b	325c4 <flatcc_json_parser_union_vector@@Base+0x1f8>
   32808:	cmp	r0, #93	; 0x5d
   3280c:	bne	3285c <flatcc_json_parser_union_vector@@Base+0x490>
   32810:	add	r1, r4, #1
   32814:	sub	r0, r6, r1
   32818:	cmp	r0, #2
   3281c:	blt	328a4 <flatcc_json_parser_union_vector@@Base+0x4d8>
   32820:	ldrb	r0, [r1]
   32824:	cmp	r0, #32
   32828:	bls	32890 <flatcc_json_parser_union_vector@@Base+0x4c4>
   3282c:	mov	r9, r1
   32830:	b	328b4 <flatcc_json_parser_union_vector@@Base+0x4e8>
   32834:	ldr	r0, [r5, #24]
   32838:	mov	r9, r6
   3283c:	cmp	r0, #0
   32840:	bne	328b4 <flatcc_json_parser_union_vector@@Base+0x4e8>
   32844:	str	r6, [r5, #36]	; 0x24
   32848:	ldr	r2, [sp, #4]
   3284c:	mov	r0, #9
   32850:	ldr	r1, [r5, #4]
   32854:	sub	r1, r2, r1
   32858:	b	32880 <flatcc_json_parser_union_vector@@Base+0x4b4>
   3285c:	ldr	r0, [r5, #24]
   32860:	mov	r9, r6
   32864:	cmp	r0, #0
   32868:	bne	328b4 <flatcc_json_parser_union_vector@@Base+0x4e8>
   3286c:	str	r4, [r5, #36]	; 0x24
   32870:	mov	r0, #9
   32874:	ldr	r1, [r5, #4]
   32878:	sub	r1, r4, r1
   3287c:	add	r1, r1, #1
   32880:	str	r1, [r5, #20]
   32884:	str	r0, [r5, #24]
   32888:	mov	r9, r6
   3288c:	b	328b4 <flatcc_json_parser_union_vector@@Base+0x4e8>
   32890:	bne	328a4 <flatcc_json_parser_union_vector@@Base+0x4d8>
   32894:	ldrb	r0, [r4, #2]!
   32898:	mov	r9, r4
   3289c:	cmp	r0, #32
   328a0:	bhi	328b4 <flatcc_json_parser_union_vector@@Base+0x4e8>
   328a4:	mov	r0, r5
   328a8:	mov	r2, r6
   328ac:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   328b0:	mov	r9, r0
   328b4:	ldr	r0, [fp, #8]
   328b8:	add	r0, r0, sl
   328bc:	cmp	r0, #1
   328c0:	bne	32568 <flatcc_json_parser_union_vector@@Base+0x19c>
   328c4:	b	325c4 <flatcc_json_parser_union_vector@@Base+0x1f8>

000328c8 <flatcc_json_parser_union_type_vector@@Base>:
   328c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   328cc:	add	fp, sp, #28
   328d0:	sub	sp, sp, #28
   328d4:	mov	r7, r1
   328d8:	mov	r5, r0
   328dc:	ldr	r0, [r0]
   328e0:	ldr	r1, [fp, #12]
   328e4:	mov	r4, r3
   328e8:	mov	r8, r2
   328ec:	bl	29fbc <flatcc_builder_get_user_frame_ptr@@Base>
   328f0:	add	r6, r4, r4, lsl #1
   328f4:	add	r0, r0, #8
   328f8:	add	r4, r0, r6, lsl #3
   328fc:	mov	r0, r4
   32900:	ldrb	r1, [r0, #12]!
   32904:	cmp	r1, #0
   32908:	beq	3292c <flatcc_json_parser_union_type_vector@@Base+0x64>
   3290c:	ldr	r0, [r5, #24]
   32910:	cmp	r0, #0
   32914:	bne	3297c <flatcc_json_parser_union_type_vector@@Base+0xb4>
   32918:	str	r7, [r5, #36]	; 0x24
   3291c:	mov	r0, #28
   32920:	ldr	r1, [r5, #4]
   32924:	sub	r1, r7, r1
   32928:	b	32970 <flatcc_json_parser_union_type_vector@@Base+0xa8>
   3292c:	mov	r1, #1
   32930:	mov	r2, #1
   32934:	mvn	r3, #0
   32938:	strb	r1, [r0]
   3293c:	mov	r1, #1
   32940:	ldr	r0, [r5]
   32944:	bl	2b6f4 <flatcc_builder_start_vector@@Base>
   32948:	cmp	r0, #0
   3294c:	beq	32988 <flatcc_json_parser_union_type_vector@@Base+0xc0>
   32950:	mov	sl, r7
   32954:	ldr	r0, [r5, #24]
   32958:	cmp	r0, #0
   3295c:	bne	3297c <flatcc_json_parser_union_type_vector@@Base+0xb4>
   32960:	str	sl, [r5, #36]	; 0x24
   32964:	mov	r0, #33	; 0x21
   32968:	ldr	r1, [r5, #4]
   3296c:	sub	r1, sl, r1
   32970:	add	r1, r1, #1
   32974:	str	r1, [r5, #20]
   32978:	str	r0, [r5, #24]
   3297c:	mov	r0, r8
   32980:	sub	sp, fp, #28
   32984:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32988:	cmp	r7, r8
   3298c:	beq	329c0 <flatcc_json_parser_union_type_vector@@Base+0xf8>
   32990:	ldrb	r0, [r7]
   32994:	cmp	r0, #91	; 0x5b
   32998:	bne	329c0 <flatcc_json_parser_union_type_vector@@Base+0xf8>
   3299c:	add	r1, r7, #1
   329a0:	sub	r0, r8, r1
   329a4:	cmp	r0, #2
   329a8:	blt	32a04 <flatcc_json_parser_union_type_vector@@Base+0x13c>
   329ac:	ldrb	r0, [r1]
   329b0:	cmp	r0, #32
   329b4:	bls	329f4 <flatcc_json_parser_union_type_vector@@Base+0x12c>
   329b8:	mov	r7, r1
   329bc:	b	32a14 <flatcc_json_parser_union_type_vector@@Base+0x14c>
   329c0:	ldr	r0, [r5, #24]
   329c4:	cmp	r0, #0
   329c8:	mov	r0, r8
   329cc:	bne	32ea8 <flatcc_json_parser_union_type_vector@@Base+0x5e0>
   329d0:	str	r7, [r5, #36]	; 0x24
   329d4:	mov	r0, #22
   329d8:	ldr	r1, [r5, #4]
   329dc:	sub	r1, r7, r1
   329e0:	add	r1, r1, #1
   329e4:	str	r1, [r5, #20]
   329e8:	str	r0, [r5, #24]
   329ec:	mov	r0, r8
   329f0:	b	32ea8 <flatcc_json_parser_union_type_vector@@Base+0x5e0>
   329f4:	bne	32a04 <flatcc_json_parser_union_type_vector@@Base+0x13c>
   329f8:	ldrb	r0, [r7, #2]!
   329fc:	cmp	r0, #32
   32a00:	bhi	32a14 <flatcc_json_parser_union_type_vector@@Base+0x14c>
   32a04:	mov	r0, r5
   32a08:	mov	r2, r8
   32a0c:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   32a10:	mov	r7, r0
   32a14:	cmp	r7, r8
   32a18:	mov	sl, r8
   32a1c:	beq	32a64 <flatcc_json_parser_union_type_vector@@Base+0x19c>
   32a20:	ldrb	r0, [r7]
   32a24:	cmp	r0, #93	; 0x5d
   32a28:	bne	32a60 <flatcc_json_parser_union_type_vector@@Base+0x198>
   32a2c:	add	r1, r7, #1
   32a30:	sub	r0, r8, r1
   32a34:	cmp	r0, #2
   32a38:	blt	32e9c <flatcc_json_parser_union_type_vector@@Base+0x5d4>
   32a3c:	ldrb	r0, [r1]
   32a40:	cmp	r0, #32
   32a44:	bhi	32e0c <flatcc_json_parser_union_type_vector@@Base+0x544>
   32a48:	bne	32e9c <flatcc_json_parser_union_type_vector@@Base+0x5d4>
   32a4c:	ldrb	r0, [r7, #2]!
   32a50:	cmp	r0, #32
   32a54:	mov	r0, r7
   32a58:	bls	32e9c <flatcc_json_parser_union_type_vector@@Base+0x5d4>
   32a5c:	b	32ea8 <flatcc_json_parser_union_type_vector@@Base+0x5e0>
   32a60:	mov	sl, r7
   32a64:	ldr	r0, [r5]
   32a68:	mov	r1, #1
   32a6c:	bl	2ab30 <flatcc_builder_extend_vector@@Base>
   32a70:	cmp	r0, #0
   32a74:	beq	32954 <flatcc_json_parser_union_type_vector@@Base+0x8c>
   32a78:	mov	r1, r0
   32a7c:	add	r0, r8, #1
   32a80:	str	r4, [sp, #16]
   32a84:	str	r0, [sp, #12]
   32a88:	mov	r9, #0
   32a8c:	cmp	sl, r8
   32a90:	mov	r4, r8
   32a94:	str	r1, [sp, #20]
   32a98:	strb	r9, [sp, #27]
   32a9c:	beq	32c8c <flatcc_json_parser_union_type_vector@@Base+0x3c4>
   32aa0:	mov	r2, sl
   32aa4:	mov	r9, #0
   32aa8:	ldrb	ip, [r2], #1
   32aac:	cmp	ip, #45	; 0x2d
   32ab0:	movne	r2, sl
   32ab4:	cmp	r2, r8
   32ab8:	beq	32b24 <flatcc_json_parser_union_type_vector@@Base+0x25c>
   32abc:	mov	r7, #0
   32ac0:	mov	r0, #0
   32ac4:	mov	r4, #10
   32ac8:	ldrb	r1, [r2]
   32acc:	sub	r3, r1, #48	; 0x30
   32ad0:	uxtb	r3, r3
   32ad4:	cmp	r3, #9
   32ad8:	bhi	32b38 <flatcc_json_parser_union_type_vector@@Base+0x270>
   32adc:	add	r3, r0, r0, lsl #2
   32ae0:	lsl	r3, r3, #1
   32ae4:	umlal	r1, r3, r7, r4
   32ae8:	subs	r1, r1, #48	; 0x30
   32aec:	sbc	r3, r3, #0
   32af0:	subs	r7, r1, r7
   32af4:	sbcs	r0, r3, r0
   32af8:	bcc	32ba4 <flatcc_json_parser_union_type_vector@@Base+0x2dc>
   32afc:	add	r2, r2, #1
   32b00:	mov	r7, r1
   32b04:	mov	r0, r3
   32b08:	cmp	r8, r2
   32b0c:	bne	32ac8 <flatcc_json_parser_union_type_vector@@Base+0x200>
   32b10:	mov	lr, #0
   32b14:	mov	r2, r8
   32b18:	mov	r7, r1
   32b1c:	mov	r0, r3
   32b20:	b	32b3c <flatcc_json_parser_union_type_vector@@Base+0x274>
   32b24:	mov	r2, r8
   32b28:	mov	r7, #0
   32b2c:	mov	r0, #0
   32b30:	mov	lr, #0
   32b34:	b	32b3c <flatcc_json_parser_union_type_vector@@Base+0x274>
   32b38:	mov	lr, #1
   32b3c:	cmp	r2, sl
   32b40:	mov	r4, sl
   32b44:	beq	32c8c <flatcc_json_parser_union_type_vector@@Base+0x3c4>
   32b48:	cmp	lr, #0
   32b4c:	beq	32b9c <flatcc_json_parser_union_type_vector@@Base+0x2d4>
   32b50:	ldrb	r1, [r2]
   32b54:	cmp	r1, #46	; 0x2e
   32b58:	beq	32b68 <flatcc_json_parser_union_type_vector@@Base+0x2a0>
   32b5c:	cmp	r1, #101	; 0x65
   32b60:	cmpne	r1, #69	; 0x45
   32b64:	bne	32b9c <flatcc_json_parser_union_type_vector@@Base+0x2d4>
   32b68:	ldr	r0, [r5, #24]
   32b6c:	mov	r7, #0
   32b70:	mov	r4, r8
   32b74:	cmp	r0, #0
   32b78:	mov	r0, #0
   32b7c:	bne	32be4 <flatcc_json_parser_union_type_vector@@Base+0x31c>
   32b80:	str	r2, [r5, #36]	; 0x24
   32b84:	ldr	r0, [r5, #4]
   32b88:	sub	r0, r2, r0
   32b8c:	add	r0, r0, #1
   32b90:	str	r0, [r5, #20]
   32b94:	mov	r0, #12
   32b98:	b	32bd4 <flatcc_json_parser_union_type_vector@@Base+0x30c>
   32b9c:	mov	r4, r2
   32ba0:	b	32be4 <flatcc_json_parser_union_type_vector@@Base+0x31c>
   32ba4:	ldr	r0, [r5, #24]
   32ba8:	mov	r7, #0
   32bac:	mov	r4, r8
   32bb0:	cmp	r0, #0
   32bb4:	mov	r0, #0
   32bb8:	bne	32be4 <flatcc_json_parser_union_type_vector@@Base+0x31c>
   32bbc:	str	r2, [r5, #36]	; 0x24
   32bc0:	ldr	r0, [r5, #4]
   32bc4:	sub	r0, r2, r0
   32bc8:	add	r0, r0, #1
   32bcc:	str	r0, [r5, #20]
   32bd0:	mov	r0, #8
   32bd4:	str	r0, [r5, #24]
   32bd8:	mov	r7, #0
   32bdc:	mov	r0, #0
   32be0:	mov	r4, r8
   32be4:	mov	r9, #0
   32be8:	cmp	r4, sl
   32bec:	beq	32c20 <flatcc_json_parser_union_type_vector@@Base+0x358>
   32bf0:	cmp	ip, #45	; 0x2d
   32bf4:	bne	32c30 <flatcc_json_parser_union_type_vector@@Base+0x368>
   32bf8:	ldr	r0, [r5, #24]
   32bfc:	cmp	r0, #0
   32c00:	bne	32c48 <flatcc_json_parser_union_type_vector@@Base+0x380>
   32c04:	str	r4, [r5, #36]	; 0x24
   32c08:	ldr	r0, [r5, #4]
   32c0c:	sub	r0, r4, r0
   32c10:	add	r0, r0, #1
   32c14:	str	r0, [r5, #20]
   32c18:	mov	r0, #8
   32c1c:	b	32c84 <flatcc_json_parser_union_type_vector@@Base+0x3bc>
   32c20:	mov	r4, sl
   32c24:	cmp	sl, r4
   32c28:	bne	32cc8 <flatcc_json_parser_union_type_vector@@Base+0x400>
   32c2c:	b	32c94 <flatcc_json_parser_union_type_vector@@Base+0x3cc>
   32c30:	subs	r1, r7, #256	; 0x100
   32c34:	sbcs	r0, r0, #0
   32c38:	bcc	32c58 <flatcc_json_parser_union_type_vector@@Base+0x390>
   32c3c:	ldr	r0, [r5, #24]
   32c40:	cmp	r0, #0
   32c44:	beq	32c6c <flatcc_json_parser_union_type_vector@@Base+0x3a4>
   32c48:	mov	r4, r8
   32c4c:	cmp	sl, r4
   32c50:	bne	32cc8 <flatcc_json_parser_union_type_vector@@Base+0x400>
   32c54:	b	32c94 <flatcc_json_parser_union_type_vector@@Base+0x3cc>
   32c58:	mov	r9, r7
   32c5c:	strb	r7, [sp, #27]
   32c60:	cmp	sl, r4
   32c64:	bne	32cc8 <flatcc_json_parser_union_type_vector@@Base+0x400>
   32c68:	b	32c94 <flatcc_json_parser_union_type_vector@@Base+0x3cc>
   32c6c:	str	r4, [r5, #36]	; 0x24
   32c70:	ldr	r0, [r5, #4]
   32c74:	sub	r0, r4, r0
   32c78:	add	r0, r0, #1
   32c7c:	str	r0, [r5, #20]
   32c80:	mov	r0, #7
   32c84:	str	r0, [r5, #24]
   32c88:	mov	r4, r8
   32c8c:	cmp	sl, r4
   32c90:	bne	32cc8 <flatcc_json_parser_union_type_vector@@Base+0x400>
   32c94:	ldr	r3, [fp, #16]
   32c98:	add	r0, sp, #27
   32c9c:	mov	r1, sl
   32ca0:	mov	r2, r8
   32ca4:	str	r0, [sp]
   32ca8:	mov	r0, r5
   32cac:	bl	32178 <flatcc_json_parser_union_type@@Base+0x388>
   32cb0:	mov	r4, r0
   32cb4:	cmp	r0, sl
   32cb8:	beq	32e60 <flatcc_json_parser_union_type_vector@@Base+0x598>
   32cbc:	cmp	r4, r8
   32cc0:	beq	32e60 <flatcc_json_parser_union_type_vector@@Base+0x598>
   32cc4:	ldrb	r9, [sp, #27]
   32cc8:	ldr	r1, [fp, #24]
   32ccc:	uxtb	r0, r9
   32cd0:	blx	r1
   32cd4:	cmp	r0, #0
   32cd8:	bne	32cf0 <flatcc_json_parser_union_type_vector@@Base+0x428>
   32cdc:	ldrb	r0, [r5, #8]
   32ce0:	tst	r0, #1
   32ce4:	beq	32e68 <flatcc_json_parser_union_type_vector@@Base+0x5a0>
   32ce8:	mov	r9, #0
   32cec:	strb	r9, [sp, #27]
   32cf0:	ldr	r0, [sp, #20]
   32cf4:	strb	r9, [r0]
   32cf8:	sub	r0, r8, r4
   32cfc:	cmp	r0, #2
   32d00:	blt	32d34 <flatcc_json_parser_union_type_vector@@Base+0x46c>
   32d04:	ldrb	r0, [r4]
   32d08:	cmp	r0, #32
   32d0c:	bls	32d20 <flatcc_json_parser_union_type_vector@@Base+0x458>
   32d10:	mov	sl, r4
   32d14:	cmp	sl, r8
   32d18:	bne	32d50 <flatcc_json_parser_union_type_vector@@Base+0x488>
   32d1c:	b	32ddc <flatcc_json_parser_union_type_vector@@Base+0x514>
   32d20:	bne	32d34 <flatcc_json_parser_union_type_vector@@Base+0x46c>
   32d24:	mov	sl, r4
   32d28:	ldrb	r0, [sl, #1]!
   32d2c:	cmp	r0, #32
   32d30:	bhi	32d48 <flatcc_json_parser_union_type_vector@@Base+0x480>
   32d34:	mov	r0, r5
   32d38:	mov	r1, r4
   32d3c:	mov	r2, r8
   32d40:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   32d44:	mov	sl, r0
   32d48:	cmp	sl, r8
   32d4c:	beq	32ddc <flatcc_json_parser_union_type_vector@@Base+0x514>
   32d50:	ldrb	r0, [sl]
   32d54:	ldr	r4, [sp, #16]
   32d58:	cmp	r0, #44	; 0x2c
   32d5c:	bne	32de8 <flatcc_json_parser_union_type_vector@@Base+0x520>
   32d60:	add	r1, sl, #1
   32d64:	sub	r0, r8, r1
   32d68:	cmp	r0, #2
   32d6c:	blt	32d9c <flatcc_json_parser_union_type_vector@@Base+0x4d4>
   32d70:	ldrb	r0, [r1]
   32d74:	cmp	r0, #32
   32d78:	bls	32d8c <flatcc_json_parser_union_type_vector@@Base+0x4c4>
   32d7c:	mov	sl, r1
   32d80:	cmp	sl, r8
   32d84:	bne	32db4 <flatcc_json_parser_union_type_vector@@Base+0x4ec>
   32d88:	b	32e14 <flatcc_json_parser_union_type_vector@@Base+0x54c>
   32d8c:	bne	32d9c <flatcc_json_parser_union_type_vector@@Base+0x4d4>
   32d90:	ldrb	r0, [sl, #2]!
   32d94:	cmp	r0, #32
   32d98:	bhi	32dac <flatcc_json_parser_union_type_vector@@Base+0x4e4>
   32d9c:	mov	r0, r5
   32da0:	mov	r2, r8
   32da4:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   32da8:	mov	sl, r0
   32dac:	cmp	sl, r8
   32db0:	beq	32e14 <flatcc_json_parser_union_type_vector@@Base+0x54c>
   32db4:	ldrb	r0, [sl]
   32db8:	cmp	r0, #93	; 0x5d
   32dbc:	beq	32df0 <flatcc_json_parser_union_type_vector@@Base+0x528>
   32dc0:	ldr	r0, [r5]
   32dc4:	mov	r1, #1
   32dc8:	bl	2ab30 <flatcc_builder_extend_vector@@Base>
   32dcc:	mov	r1, r0
   32dd0:	cmp	r0, #0
   32dd4:	bne	32a88 <flatcc_json_parser_union_type_vector@@Base+0x1c0>
   32dd8:	b	32954 <flatcc_json_parser_union_type_vector@@Base+0x8c>
   32ddc:	ldr	r4, [sp, #16]
   32de0:	mov	r0, r8
   32de4:	b	32ea8 <flatcc_json_parser_union_type_vector@@Base+0x5e0>
   32de8:	cmp	r0, #93	; 0x5d
   32dec:	bne	32e3c <flatcc_json_parser_union_type_vector@@Base+0x574>
   32df0:	add	r1, sl, #1
   32df4:	sub	r0, r8, r1
   32df8:	cmp	r0, #2
   32dfc:	blt	32e9c <flatcc_json_parser_union_type_vector@@Base+0x5d4>
   32e00:	ldrb	r0, [r1]
   32e04:	cmp	r0, #32
   32e08:	bls	32e88 <flatcc_json_parser_union_type_vector@@Base+0x5c0>
   32e0c:	mov	r0, r1
   32e10:	b	32ea8 <flatcc_json_parser_union_type_vector@@Base+0x5e0>
   32e14:	ldr	r0, [r5, #24]
   32e18:	cmp	r0, #0
   32e1c:	mov	r0, r8
   32e20:	bne	32ea8 <flatcc_json_parser_union_type_vector@@Base+0x5e0>
   32e24:	str	r8, [r5, #36]	; 0x24
   32e28:	ldr	r2, [sp, #12]
   32e2c:	mov	r0, #9
   32e30:	ldr	r1, [r5, #4]
   32e34:	sub	r1, r2, r1
   32e38:	b	329e4 <flatcc_json_parser_union_type_vector@@Base+0x11c>
   32e3c:	ldr	r0, [r5, #24]
   32e40:	cmp	r0, #0
   32e44:	mov	r0, r8
   32e48:	bne	32ea8 <flatcc_json_parser_union_type_vector@@Base+0x5e0>
   32e4c:	str	sl, [r5, #36]	; 0x24
   32e50:	mov	r0, #9
   32e54:	ldr	r1, [r5, #4]
   32e58:	sub	r1, sl, r1
   32e5c:	b	329e0 <flatcc_json_parser_union_type_vector@@Base+0x118>
   32e60:	mov	sl, r4
   32e64:	b	32954 <flatcc_json_parser_union_type_vector@@Base+0x8c>
   32e68:	ldr	r0, [r5, #24]
   32e6c:	cmp	r0, #0
   32e70:	bne	3297c <flatcc_json_parser_union_type_vector@@Base+0xb4>
   32e74:	str	r4, [r5, #36]	; 0x24
   32e78:	mov	r0, #15
   32e7c:	ldr	r1, [r5, #4]
   32e80:	sub	r1, r4, r1
   32e84:	b	32970 <flatcc_json_parser_union_type_vector@@Base+0xa8>
   32e88:	bne	32e9c <flatcc_json_parser_union_type_vector@@Base+0x5d4>
   32e8c:	ldrb	r0, [sl, #2]!
   32e90:	cmp	r0, #32
   32e94:	mov	r0, sl
   32e98:	bhi	32ea8 <flatcc_json_parser_union_type_vector@@Base+0x5e0>
   32e9c:	mov	r0, r5
   32ea0:	mov	r2, r8
   32ea4:	bl	2f080 <flatcc_json_parser_space_ext@@Base>
   32ea8:	mov	sl, r0
   32eac:	ldr	r0, [r5]
   32eb0:	bl	2ca68 <flatcc_builder_vector_count@@Base>
   32eb4:	str	r0, [r4, #16]
   32eb8:	mov	r7, r0
   32ebc:	ldr	r0, [r5]
   32ec0:	mov	r1, r7
   32ec4:	bl	29df8 <flatcc_builder_enter_user_frame@@Base>
   32ec8:	mov	r9, r0
   32ecc:	ldr	r0, [r5]
   32ed0:	mov	r1, r9
   32ed4:	bl	29fbc <flatcc_builder_get_user_frame_ptr@@Base>
   32ed8:	mov	r4, r0
   32edc:	ldr	r0, [r5]
   32ee0:	bl	2ca74 <flatcc_builder_vector_edit@@Base>
   32ee4:	mov	r1, r0
   32ee8:	mov	r0, r4
   32eec:	mov	r2, r7
   32ef0:	bl	12aa8 <memcpy@plt>
   32ef4:	ldr	r0, [r5]
   32ef8:	bl	2c96c <flatcc_builder_end_vector@@Base>
   32efc:	cmp	r0, #0
   32f00:	beq	32954 <flatcc_json_parser_union_type_vector@@Base+0x8c>
   32f04:	ldr	r1, [fp, #8]
   32f08:	mov	r4, r0
   32f0c:	ldr	r0, [r5]
   32f10:	sub	r1, r1, #1
   32f14:	bl	2ceec <flatcc_builder_table_add_offset@@Base>
   32f18:	cmp	r0, #0
   32f1c:	beq	32954 <flatcc_json_parser_union_type_vector@@Base+0x8c>
   32f20:	str	r4, [r0]
   32f24:	ldr	r1, [fp, #12]
   32f28:	ldr	r0, [r5]
   32f2c:	bl	29fbc <flatcc_builder_get_user_frame_ptr@@Base>
   32f30:	add	r2, r0, #8
   32f34:	mov	r3, r2
   32f38:	ldr	r1, [r3, r6, lsl #3]!
   32f3c:	str	r9, [r3, #20]
   32f40:	ldr	r3, [r0, #4]
   32f44:	cmp	r1, #0
   32f48:	beq	32fac <flatcc_json_parser_union_type_vector@@Base+0x6e4>
   32f4c:	cmp	r3, #0
   32f50:	beq	32fbc <flatcc_json_parser_union_type_vector@@Base+0x6f4>
   32f54:	sub	r3, r3, #1
   32f58:	ldr	ip, [fp, #20]
   32f5c:	str	r3, [r0, #4]
   32f60:	add	r0, r2, r6, lsl #3
   32f64:	mov	r3, r9
   32f68:	ldr	r6, [r5, #4]
   32f6c:	ldr	r4, [r5, #16]
   32f70:	ldr	r2, [r0, #8]
   32f74:	str	r2, [r5, #16]
   32f78:	mov	r2, r8
   32f7c:	ldr	r0, [r0, #4]
   32f80:	str	r0, [r5, #4]
   32f84:	ldr	r0, [fp, #8]
   32f88:	str	r7, [sp]
   32f8c:	stmib	sp, {r0, ip}
   32f90:	mov	r0, r5
   32f94:	bl	324c0 <flatcc_json_parser_union_vector@@Base+0xf4>
   32f98:	cmp	r0, r8
   32f9c:	beq	3297c <flatcc_json_parser_union_type_vector@@Base+0xb4>
   32fa0:	str	r6, [r5, #4]
   32fa4:	str	r4, [r5, #16]
   32fa8:	b	32fb4 <flatcc_json_parser_union_type_vector@@Base+0x6ec>
   32fac:	add	r1, r3, #1
   32fb0:	str	r1, [r0, #4]
   32fb4:	mov	r8, sl
   32fb8:	b	3297c <flatcc_json_parser_union_type_vector@@Base+0xb4>
   32fbc:	ldr	r0, [pc, #24]	; 32fdc <flatcc_json_parser_union_type_vector@@Base+0x714>
   32fc0:	ldr	r1, [pc, #24]	; 32fe0 <flatcc_json_parser_union_type_vector@@Base+0x718>
   32fc4:	ldr	r3, [pc, #24]	; 32fe4 <flatcc_json_parser_union_type_vector@@Base+0x71c>
   32fc8:	movw	r2, #1122	; 0x462
   32fcc:	add	r0, pc, r0
   32fd0:	add	r1, pc, r1
   32fd4:	add	r3, pc, r3
   32fd8:	bl	12bbc <__assert_fail@plt>
   32fdc:	andeq	r2, r0, ip, asr #21
   32fe0:	ldrdeq	r2, [r0], -r7
   32fe4:	andeq	r2, r0, r0, lsl #24

00032fe8 <flatcc_json_parser_table_as_root@@Base>:
   32fe8:	push	{r4, r5, r6, r7, fp, lr}
   32fec:	add	fp, sp, #16
   32ff0:	sub	sp, sp, #48	; 0x30
   32ff4:	cmp	r1, #0
   32ff8:	vmov.i32	q8, #0	; 0x00000000
   32ffc:	add	r5, sp, #4
   33000:	mov	r6, r0
   33004:	add	r7, r2, r3
   33008:	mov	r4, r2
   3300c:	movne	r5, r1
   33010:	mov	r1, #1
   33014:	add	r0, r5, #12
   33018:	vst1.32	{d16-d17}, [r0]
   3301c:	add	r0, r5, #28
   33020:	vst1.32	{d16-d17}, [r0]
   33024:	ldr	r0, [fp, #8]
   33028:	str	r2, [r5, #4]
   3302c:	str	r6, [r5]
   33030:	str	r0, [r5, #8]
   33034:	str	r1, [r5, #16]
   33038:	mov	r1, #2
   3303c:	str	r2, [r5, #28]
   33040:	str	r7, [r5, #32]
   33044:	str	r2, [r5, #36]	; 0x24
   33048:	mov	r2, #0
   3304c:	and	r3, r1, r0, lsr #1
   33050:	ldr	r1, [fp, #12]
   33054:	mov	r0, r6
   33058:	bl	2a628 <flatcc_builder_start_buffer@@Base>
   3305c:	mov	r1, r0
   33060:	mvn	r0, #0
   33064:	cmp	r1, #0
   33068:	bne	33090 <flatcc_json_parser_table_as_root@@Base+0xa8>
   3306c:	ldr	ip, [fp, #16]
   33070:	mov	r3, sp
   33074:	mov	r0, r5
   33078:	mov	r1, r4
   3307c:	mov	r2, r7
   33080:	blx	ip
   33084:	ldr	r0, [r5, #24]
   33088:	cmp	r0, #0
   3308c:	beq	33098 <flatcc_json_parser_table_as_root@@Base+0xb0>
   33090:	sub	sp, fp, #16
   33094:	pop	{r4, r5, r6, r7, fp, pc}
   33098:	ldr	r1, [sp]
   3309c:	mov	r0, r6
   330a0:	bl	2a828 <flatcc_builder_end_buffer@@Base>
   330a4:	cmp	r0, #0
   330a8:	mvn	r0, #0
   330ac:	movne	r0, #0
   330b0:	strne	r4, [r5, #40]	; 0x28
   330b4:	sub	sp, fp, #16
   330b8:	pop	{r4, r5, r6, r7, fp, pc}

000330bc <flatcc_json_parser_struct_as_root@@Base>:
   330bc:	push	{r4, r5, r6, r7, fp, lr}
   330c0:	add	fp, sp, #16
   330c4:	sub	sp, sp, #48	; 0x30
   330c8:	cmp	r1, #0
   330cc:	vmov.i32	q8, #0	; 0x00000000
   330d0:	add	r5, sp, #4
   330d4:	mov	r6, r0
   330d8:	add	r7, r2, r3
   330dc:	mov	r4, r2
   330e0:	movne	r5, r1
   330e4:	mov	r1, #1
   330e8:	add	r0, r5, #12
   330ec:	vst1.32	{d16-d17}, [r0]
   330f0:	add	r0, r5, #28
   330f4:	vst1.32	{d16-d17}, [r0]
   330f8:	ldr	r0, [fp, #8]
   330fc:	str	r2, [r5, #4]
   33100:	str	r6, [r5]
   33104:	str	r0, [r5, #8]
   33108:	str	r1, [r5, #16]
   3310c:	mov	r1, #2
   33110:	str	r2, [r5, #28]
   33114:	str	r7, [r5, #32]
   33118:	str	r2, [r5, #36]	; 0x24
   3311c:	mov	r2, #0
   33120:	and	r3, r1, r0, lsr #1
   33124:	ldr	r1, [fp, #12]
   33128:	mov	r0, r6
   3312c:	bl	2a628 <flatcc_builder_start_buffer@@Base>
   33130:	mov	r1, r0
   33134:	mvn	r0, #0
   33138:	cmp	r1, #0
   3313c:	bne	33164 <flatcc_json_parser_struct_as_root@@Base+0xa8>
   33140:	ldr	ip, [fp, #16]
   33144:	mov	r3, sp
   33148:	mov	r0, r5
   3314c:	mov	r1, r4
   33150:	mov	r2, r7
   33154:	blx	ip
   33158:	ldr	r0, [r5, #24]
   3315c:	cmp	r0, #0
   33160:	beq	3316c <flatcc_json_parser_struct_as_root@@Base+0xb0>
   33164:	sub	sp, fp, #16
   33168:	pop	{r4, r5, r6, r7, fp, pc}
   3316c:	ldr	r1, [sp]
   33170:	mov	r0, r6
   33174:	bl	2a828 <flatcc_builder_end_buffer@@Base>
   33178:	cmp	r0, #0
   3317c:	mvn	r0, #0
   33180:	movne	r0, #0
   33184:	strne	r4, [r5, #40]	; 0x28
   33188:	sub	sp, fp, #16
   3318c:	pop	{r4, r5, r6, r7, fp, pc}
   33190:	eor	r1, r1, #-2147483648	; 0x80000000
   33194:	b	3319c <flatcc_json_parser_struct_as_root@@Base+0xe0>
   33198:	eor	r3, r3, #-2147483648	; 0x80000000
   3319c:	push	{r4, r5, lr}
   331a0:	lsl	r4, r1, #1
   331a4:	lsl	r5, r3, #1
   331a8:	teq	r4, r5
   331ac:	teqeq	r0, r2
   331b0:	orrsne	ip, r4, r0
   331b4:	orrsne	ip, r5, r2
   331b8:	mvnsne	ip, r4, asr #21
   331bc:	mvnsne	ip, r5, asr #21
   331c0:	beq	333ac <flatcc_json_parser_struct_as_root@@Base+0x2f0>
   331c4:	lsr	r4, r4, #21
   331c8:	rsbs	r5, r4, r5, lsr #21
   331cc:	rsblt	r5, r5, #0
   331d0:	ble	331f0 <flatcc_json_parser_struct_as_root@@Base+0x134>
   331d4:	add	r4, r4, r5
   331d8:	eor	r2, r0, r2
   331dc:	eor	r3, r1, r3
   331e0:	eor	r0, r2, r0
   331e4:	eor	r1, r3, r1
   331e8:	eor	r2, r0, r2
   331ec:	eor	r3, r1, r3
   331f0:	cmp	r5, #54	; 0x36
   331f4:	pophi	{r4, r5, pc}
   331f8:	tst	r1, #-2147483648	; 0x80000000
   331fc:	lsl	r1, r1, #12
   33200:	mov	ip, #1048576	; 0x100000
   33204:	orr	r1, ip, r1, lsr #12
   33208:	beq	33214 <flatcc_json_parser_struct_as_root@@Base+0x158>
   3320c:	rsbs	r0, r0, #0
   33210:	rsc	r1, r1, #0
   33214:	tst	r3, #-2147483648	; 0x80000000
   33218:	lsl	r3, r3, #12
   3321c:	orr	r3, ip, r3, lsr #12
   33220:	beq	3322c <flatcc_json_parser_struct_as_root@@Base+0x170>
   33224:	rsbs	r2, r2, #0
   33228:	rsc	r3, r3, #0
   3322c:	teq	r4, r5
   33230:	beq	33394 <flatcc_json_parser_struct_as_root@@Base+0x2d8>
   33234:	sub	r4, r4, #1
   33238:	rsbs	lr, r5, #32
   3323c:	blt	33258 <flatcc_json_parser_struct_as_root@@Base+0x19c>
   33240:	lsl	ip, r2, lr
   33244:	adds	r0, r0, r2, lsr r5
   33248:	adc	r1, r1, #0
   3324c:	adds	r0, r0, r3, lsl lr
   33250:	adcs	r1, r1, r3, asr r5
   33254:	b	33274 <flatcc_json_parser_struct_as_root@@Base+0x1b8>
   33258:	sub	r5, r5, #32
   3325c:	add	lr, lr, #32
   33260:	cmp	r2, #1
   33264:	lsl	ip, r3, lr
   33268:	orrcs	ip, ip, #2
   3326c:	adds	r0, r0, r3, asr r5
   33270:	adcs	r1, r1, r3, asr #31
   33274:	and	r5, r1, #-2147483648	; 0x80000000
   33278:	bpl	33288 <flatcc_json_parser_struct_as_root@@Base+0x1cc>
   3327c:	rsbs	ip, ip, #0
   33280:	rscs	r0, r0, #0
   33284:	rsc	r1, r1, #0
   33288:	cmp	r1, #1048576	; 0x100000
   3328c:	bcc	332cc <flatcc_json_parser_struct_as_root@@Base+0x210>
   33290:	cmp	r1, #2097152	; 0x200000
   33294:	bcc	332b4 <flatcc_json_parser_struct_as_root@@Base+0x1f8>
   33298:	lsrs	r1, r1, #1
   3329c:	rrxs	r0, r0
   332a0:	rrx	ip, ip
   332a4:	add	r4, r4, #1
   332a8:	lsl	r2, r4, #21
   332ac:	cmn	r2, #4194304	; 0x400000
   332b0:	bcs	3340c <flatcc_json_parser_struct_as_root@@Base+0x350>
   332b4:	cmp	ip, #-2147483648	; 0x80000000
   332b8:	lsrseq	ip, r0, #1
   332bc:	adcs	r0, r0, #0
   332c0:	adc	r1, r1, r4, lsl #20
   332c4:	orr	r1, r1, r5
   332c8:	pop	{r4, r5, pc}
   332cc:	lsls	ip, ip, #1
   332d0:	adcs	r0, r0, r0
   332d4:	adc	r1, r1, r1
   332d8:	tst	r1, #1048576	; 0x100000
   332dc:	sub	r4, r4, #1
   332e0:	bne	332b4 <flatcc_json_parser_struct_as_root@@Base+0x1f8>
   332e4:	teq	r1, #0
   332e8:	moveq	r1, r0
   332ec:	moveq	r0, #0
   332f0:	clz	r3, r1
   332f4:	addeq	r3, r3, #32
   332f8:	sub	r3, r3, #11
   332fc:	subs	r2, r3, #32
   33300:	bge	33324 <flatcc_json_parser_struct_as_root@@Base+0x268>
   33304:	adds	r2, r2, #12
   33308:	ble	33320 <flatcc_json_parser_struct_as_root@@Base+0x264>
   3330c:	add	ip, r2, #20
   33310:	rsb	r2, r2, #12
   33314:	lsl	r0, r1, ip
   33318:	lsr	r1, r1, r2
   3331c:	b	33334 <flatcc_json_parser_struct_as_root@@Base+0x278>
   33320:	add	r2, r2, #20
   33324:	rsble	ip, r2, #32
   33328:	lsl	r1, r1, r2
   3332c:	orrle	r1, r1, r0, lsr ip
   33330:	lslle	r0, r0, r2
   33334:	subs	r4, r4, r3
   33338:	addge	r1, r1, r4, lsl #20
   3333c:	orrge	r1, r1, r5
   33340:	popge	{r4, r5, pc}
   33344:	mvn	r4, r4
   33348:	subs	r4, r4, #31
   3334c:	bge	33388 <flatcc_json_parser_struct_as_root@@Base+0x2cc>
   33350:	adds	r4, r4, #12
   33354:	bgt	33370 <flatcc_json_parser_struct_as_root@@Base+0x2b4>
   33358:	add	r4, r4, #20
   3335c:	rsb	r2, r4, #32
   33360:	lsr	r0, r0, r4
   33364:	orr	r0, r0, r1, lsl r2
   33368:	orr	r1, r5, r1, lsr r4
   3336c:	pop	{r4, r5, pc}
   33370:	rsb	r4, r4, #12
   33374:	rsb	r2, r4, #32
   33378:	lsr	r0, r0, r2
   3337c:	orr	r0, r0, r1, lsl r4
   33380:	mov	r1, r5
   33384:	pop	{r4, r5, pc}
   33388:	lsr	r0, r1, r4
   3338c:	mov	r1, r5
   33390:	pop	{r4, r5, pc}
   33394:	teq	r4, #0
   33398:	eor	r3, r3, #1048576	; 0x100000
   3339c:	eoreq	r1, r1, #1048576	; 0x100000
   333a0:	addeq	r4, r4, #1
   333a4:	subne	r5, r5, #1
   333a8:	b	33234 <flatcc_json_parser_struct_as_root@@Base+0x178>
   333ac:	mvns	ip, r4, asr #21
   333b0:	mvnsne	ip, r5, asr #21
   333b4:	beq	3341c <flatcc_json_parser_struct_as_root@@Base+0x360>
   333b8:	teq	r4, r5
   333bc:	teqeq	r0, r2
   333c0:	beq	333d4 <flatcc_json_parser_struct_as_root@@Base+0x318>
   333c4:	orrs	ip, r4, r0
   333c8:	moveq	r1, r3
   333cc:	moveq	r0, r2
   333d0:	pop	{r4, r5, pc}
   333d4:	teq	r1, r3
   333d8:	movne	r1, #0
   333dc:	movne	r0, #0
   333e0:	popne	{r4, r5, pc}
   333e4:	lsrs	ip, r4, #21
   333e8:	bne	333fc <flatcc_json_parser_struct_as_root@@Base+0x340>
   333ec:	lsls	r0, r0, #1
   333f0:	adcs	r1, r1, r1
   333f4:	orrcs	r1, r1, #-2147483648	; 0x80000000
   333f8:	pop	{r4, r5, pc}
   333fc:	adds	r4, r4, #4194304	; 0x400000
   33400:	addcc	r1, r1, #1048576	; 0x100000
   33404:	popcc	{r4, r5, pc}
   33408:	and	r5, r1, #-2147483648	; 0x80000000
   3340c:	orr	r1, r5, #2130706432	; 0x7f000000
   33410:	orr	r1, r1, #15728640	; 0xf00000
   33414:	mov	r0, #0
   33418:	pop	{r4, r5, pc}
   3341c:	mvns	ip, r4, asr #21
   33420:	movne	r1, r3
   33424:	movne	r0, r2
   33428:	mvnseq	ip, r5, asr #21
   3342c:	movne	r3, r1
   33430:	movne	r2, r0
   33434:	orrs	r4, r0, r1, lsl #12
   33438:	orrseq	r5, r2, r3, lsl #12
   3343c:	teqeq	r1, r3
   33440:	orrne	r1, r1, #524288	; 0x80000
   33444:	pop	{r4, r5, pc}
   33448:	teq	r0, #0
   3344c:	moveq	r1, #0
   33450:	bxeq	lr
   33454:	push	{r4, r5, lr}
   33458:	mov	r4, #1024	; 0x400
   3345c:	add	r4, r4, #50	; 0x32
   33460:	mov	r5, #0
   33464:	mov	r1, #0
   33468:	b	332e4 <flatcc_json_parser_struct_as_root@@Base+0x228>
   3346c:	teq	r0, #0
   33470:	moveq	r1, #0
   33474:	bxeq	lr
   33478:	push	{r4, r5, lr}
   3347c:	mov	r4, #1024	; 0x400
   33480:	add	r4, r4, #50	; 0x32
   33484:	ands	r5, r0, #-2147483648	; 0x80000000
   33488:	rsbmi	r0, r0, #0
   3348c:	mov	r1, #0
   33490:	b	332e4 <flatcc_json_parser_struct_as_root@@Base+0x228>
   33494:	lsls	r2, r0, #1
   33498:	asr	r1, r2, #3
   3349c:	rrx	r1, r1
   334a0:	lsl	r0, r2, #28
   334a4:	andsne	r3, r2, #-16777216	; 0xff000000
   334a8:	teqne	r3, #-16777216	; 0xff000000
   334ac:	eorne	r1, r1, #939524096	; 0x38000000
   334b0:	bxne	lr
   334b4:	bics	r2, r2, #-16777216	; 0xff000000
   334b8:	bxeq	lr
   334bc:	teq	r3, #-16777216	; 0xff000000
   334c0:	orreq	r1, r1, #524288	; 0x80000
   334c4:	bxeq	lr
   334c8:	push	{r4, r5, lr}
   334cc:	mov	r4, #896	; 0x380
   334d0:	and	r5, r1, #-2147483648	; 0x80000000
   334d4:	bic	r1, r1, #-2147483648	; 0x80000000
   334d8:	b	332e4 <flatcc_json_parser_struct_as_root@@Base+0x228>
   334dc:	orrs	r2, r0, r1
   334e0:	bxeq	lr
   334e4:	push	{r4, r5, lr}
   334e8:	mov	r5, #0
   334ec:	b	3350c <flatcc_json_parser_struct_as_root@@Base+0x450>
   334f0:	orrs	r2, r0, r1
   334f4:	bxeq	lr
   334f8:	push	{r4, r5, lr}
   334fc:	ands	r5, r1, #-2147483648	; 0x80000000
   33500:	bpl	3350c <flatcc_json_parser_struct_as_root@@Base+0x450>
   33504:	rsbs	r0, r0, #0
   33508:	rsc	r1, r1, #0
   3350c:	mov	r4, #1024	; 0x400
   33510:	add	r4, r4, #50	; 0x32
   33514:	lsrs	ip, r1, #22
   33518:	beq	33288 <flatcc_json_parser_struct_as_root@@Base+0x1cc>
   3351c:	mov	r2, #3
   33520:	lsrs	ip, ip, #3
   33524:	addne	r2, r2, #3
   33528:	lsrs	ip, ip, #3
   3352c:	addne	r2, r2, #3
   33530:	add	r2, r2, ip, lsr #3
   33534:	rsb	r3, r2, #32
   33538:	lsl	ip, r0, r3
   3353c:	lsr	r0, r0, r2
   33540:	orr	r0, r0, r1, lsl r3
   33544:	lsr	r1, r1, r2
   33548:	add	r4, r4, r2
   3354c:	b	33288 <flatcc_json_parser_struct_as_root@@Base+0x1cc>
   33550:	eor	r0, r0, #-2147483648	; 0x80000000
   33554:	b	3355c <flatcc_json_parser_struct_as_root@@Base+0x4a0>
   33558:	eor	r1, r1, #-2147483648	; 0x80000000
   3355c:	lsls	r2, r0, #1
   33560:	lslsne	r3, r1, #1
   33564:	teqne	r2, r3
   33568:	mvnsne	ip, r2, asr #24
   3356c:	mvnsne	ip, r3, asr #24
   33570:	beq	33668 <flatcc_json_parser_struct_as_root@@Base+0x5ac>
   33574:	lsr	r2, r2, #24
   33578:	rsbs	r3, r2, r3, lsr #24
   3357c:	addgt	r2, r2, r3
   33580:	eorgt	r1, r0, r1
   33584:	eorgt	r0, r1, r0
   33588:	eorgt	r1, r0, r1
   3358c:	rsblt	r3, r3, #0
   33590:	cmp	r3, #25
   33594:	bxhi	lr
   33598:	tst	r0, #-2147483648	; 0x80000000
   3359c:	orr	r0, r0, #8388608	; 0x800000
   335a0:	bic	r0, r0, #-16777216	; 0xff000000
   335a4:	rsbne	r0, r0, #0
   335a8:	tst	r1, #-2147483648	; 0x80000000
   335ac:	orr	r1, r1, #8388608	; 0x800000
   335b0:	bic	r1, r1, #-16777216	; 0xff000000
   335b4:	rsbne	r1, r1, #0
   335b8:	teq	r2, r3
   335bc:	beq	33650 <flatcc_json_parser_struct_as_root@@Base+0x594>
   335c0:	sub	r2, r2, #1
   335c4:	adds	r0, r0, r1, asr r3
   335c8:	rsb	r3, r3, #32
   335cc:	lsl	r1, r1, r3
   335d0:	and	r3, r0, #-2147483648	; 0x80000000
   335d4:	bpl	335e0 <flatcc_json_parser_struct_as_root@@Base+0x524>
   335d8:	rsbs	r1, r1, #0
   335dc:	rsc	r0, r0, #0
   335e0:	cmp	r0, #8388608	; 0x800000
   335e4:	bcc	33618 <flatcc_json_parser_struct_as_root@@Base+0x55c>
   335e8:	cmp	r0, #16777216	; 0x1000000
   335ec:	bcc	33604 <flatcc_json_parser_struct_as_root@@Base+0x548>
   335f0:	lsrs	r0, r0, #1
   335f4:	rrx	r1, r1
   335f8:	add	r2, r2, #1
   335fc:	cmp	r2, #254	; 0xfe
   33600:	bcs	336bc <flatcc_json_parser_struct_as_root@@Base+0x600>
   33604:	cmp	r1, #-2147483648	; 0x80000000
   33608:	adc	r0, r0, r2, lsl #23
   3360c:	biceq	r0, r0, #1
   33610:	orr	r0, r0, r3
   33614:	bx	lr
   33618:	lsls	r1, r1, #1
   3361c:	adc	r0, r0, r0
   33620:	tst	r0, #8388608	; 0x800000
   33624:	sub	r2, r2, #1
   33628:	bne	33604 <flatcc_json_parser_struct_as_root@@Base+0x548>
   3362c:	clz	ip, r0
   33630:	sub	ip, ip, #8
   33634:	subs	r2, r2, ip
   33638:	lsl	r0, r0, ip
   3363c:	addge	r0, r0, r2, lsl #23
   33640:	rsblt	r2, r2, #0
   33644:	orrge	r0, r0, r3
   33648:	orrlt	r0, r3, r0, lsr r2
   3364c:	bx	lr
   33650:	teq	r2, #0
   33654:	eor	r1, r1, #8388608	; 0x800000
   33658:	eoreq	r0, r0, #8388608	; 0x800000
   3365c:	addeq	r2, r2, #1
   33660:	subne	r3, r3, #1
   33664:	b	335c0 <flatcc_json_parser_struct_as_root@@Base+0x504>
   33668:	lsl	r3, r1, #1
   3366c:	mvns	ip, r2, asr #24
   33670:	mvnsne	ip, r3, asr #24
   33674:	beq	336c8 <flatcc_json_parser_struct_as_root@@Base+0x60c>
   33678:	teq	r2, r3
   3367c:	beq	3368c <flatcc_json_parser_struct_as_root@@Base+0x5d0>
   33680:	teq	r2, #0
   33684:	moveq	r0, r1
   33688:	bx	lr
   3368c:	teq	r0, r1
   33690:	movne	r0, #0
   33694:	bxne	lr
   33698:	tst	r2, #-16777216	; 0xff000000
   3369c:	bne	336ac <flatcc_json_parser_struct_as_root@@Base+0x5f0>
   336a0:	lsls	r0, r0, #1
   336a4:	orrcs	r0, r0, #-2147483648	; 0x80000000
   336a8:	bx	lr
   336ac:	adds	r2, r2, #33554432	; 0x2000000
   336b0:	addcc	r0, r0, #8388608	; 0x800000
   336b4:	bxcc	lr
   336b8:	and	r3, r0, #-2147483648	; 0x80000000
   336bc:	orr	r0, r3, #2130706432	; 0x7f000000
   336c0:	orr	r0, r0, #8388608	; 0x800000
   336c4:	bx	lr
   336c8:	mvns	r2, r2, asr #24
   336cc:	movne	r0, r1
   336d0:	mvnseq	r3, r3, asr #24
   336d4:	movne	r1, r0
   336d8:	lsls	r2, r0, #9
   336dc:	lslseq	r3, r1, #9
   336e0:	teqeq	r0, r1
   336e4:	orrne	r0, r0, #4194304	; 0x400000
   336e8:	bx	lr
   336ec:	mov	r3, #0
   336f0:	b	336fc <flatcc_json_parser_struct_as_root@@Base+0x640>
   336f4:	ands	r3, r0, #-2147483648	; 0x80000000
   336f8:	rsbmi	r0, r0, #0
   336fc:	movs	ip, r0
   33700:	bxeq	lr
   33704:	orr	r3, r3, #1258291200	; 0x4b000000
   33708:	mov	r1, r0
   3370c:	mov	r0, #0
   33710:	b	33754 <flatcc_json_parser_struct_as_root@@Base+0x698>
   33714:	orrs	r2, r0, r1
   33718:	bxeq	lr
   3371c:	mov	r3, #0
   33720:	b	3373c <flatcc_json_parser_struct_as_root@@Base+0x680>
   33724:	orrs	r2, r0, r1
   33728:	bxeq	lr
   3372c:	ands	r3, r1, #-2147483648	; 0x80000000
   33730:	bpl	3373c <flatcc_json_parser_struct_as_root@@Base+0x680>
   33734:	rsbs	r0, r0, #0
   33738:	rsc	r1, r1, #0
   3373c:	movs	ip, r1
   33740:	moveq	ip, r0
   33744:	moveq	r1, r0
   33748:	moveq	r0, #0
   3374c:	orr	r3, r3, #1526726656	; 0x5b000000
   33750:	subeq	r3, r3, #268435456	; 0x10000000
   33754:	sub	r3, r3, #8388608	; 0x800000
   33758:	clz	r2, ip
   3375c:	subs	r2, r2, #8
   33760:	sub	r3, r3, r2, lsl #23
   33764:	blt	33784 <flatcc_json_parser_struct_as_root@@Base+0x6c8>
   33768:	add	r3, r3, r1, lsl r2
   3376c:	lsl	ip, r0, r2
   33770:	rsb	r2, r2, #32
   33774:	cmp	ip, #-2147483648	; 0x80000000
   33778:	adc	r0, r3, r0, lsr r2
   3377c:	biceq	r0, r0, #1
   33780:	bx	lr
   33784:	add	r2, r2, #32
   33788:	lsl	ip, r1, r2
   3378c:	rsb	r2, r2, #32
   33790:	orrs	r0, r0, ip, lsl #1
   33794:	adc	r0, r3, r1, lsr r2
   33798:	biceq	r0, r0, ip, lsr #31
   3379c:	bx	lr

000337a0 <__libc_csu_init@@Base>:
   337a0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   337a4:	mov	r7, r0
   337a8:	ldr	r6, [pc, #72]	; 337f8 <__libc_csu_init@@Base+0x58>
   337ac:	ldr	r5, [pc, #72]	; 337fc <__libc_csu_init@@Base+0x5c>
   337b0:	add	r6, pc, r6
   337b4:	add	r5, pc, r5
   337b8:	sub	r6, r6, r5
   337bc:	mov	r8, r1
   337c0:	mov	r9, r2
   337c4:	bl	12a70 <fopen@plt-0x20>
   337c8:	asrs	r6, r6, #2
   337cc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   337d0:	mov	r4, #0
   337d4:	add	r4, r4, #1
   337d8:	ldr	r3, [r5], #4
   337dc:	mov	r2, r9
   337e0:	mov	r1, r8
   337e4:	mov	r0, r7
   337e8:	blx	r3
   337ec:	cmp	r6, r4
   337f0:	bne	337d4 <__libc_csu_init@@Base+0x34>
   337f4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   337f8:	andeq	r2, r1, r8, asr #13
   337fc:	andeq	r2, r1, r0, asr #13

00033800 <__libc_csu_fini@@Base>:
   33800:	bx	lr

Disassembly of section .fini:

00033804 <.fini>:
   33804:	push	{r3, lr}
   33808:	pop	{r3, pc}
