
../repos/myhtml/libmyhtml.so.4.0.6:     file format elf32-littlearm


Disassembly of section .init:

0000fb4c <.init>:
    fb4c:	push	{r3, lr}
    fb50:	bl	11048 <mythread_init@plt+0xc>
    fb54:	pop	{r3, pc}

Disassembly of section .plt:

0000fb58 <pthread_mutex_unlock@plt-0x14>:
    fb58:	push	{lr}		; (str lr, [sp, #-4]!)
    fb5c:	ldr	lr, [pc, #4]	; fb68 <pthread_mutex_unlock@plt-0x4>
    fb60:	add	lr, pc, lr
    fb64:	ldr	pc, [lr, #8]!
    fb68:	mulseq	r0, r8, r4

0000fb6c <pthread_mutex_unlock@plt>:
    fb6c:	add	ip, pc, #1048576	; 0x100000
    fb70:	add	ip, ip, #36864	; 0x9000
    fb74:	ldr	pc, [ip, #1176]!	; 0x498

0000fb78 <myhtml_get_nodes_by_attribute_value_recursion@plt>:
    fb78:	add	ip, pc, #1048576	; 0x100000
    fb7c:	add	ip, ip, #36864	; 0x9000
    fb80:	ldr	pc, [ip, #1168]!	; 0x490

0000fb84 <mycore_realloc@plt>:
    fb84:	add	ip, pc, #1048576	; 0x100000
    fb88:	add	ip, ip, #36864	; 0x9000
    fb8c:	ldr	pc, [ip, #1160]!	; 0x488

0000fb90 <calloc@plt>:
    fb90:	add	ip, pc, #1048576	; 0x100000
    fb94:	add	ip, ip, #36864	; 0x9000
    fb98:	ldr	pc, [ip, #1152]!	; 0x480

0000fb9c <mycore_strcmp@plt>:
    fb9c:	add	ip, pc, #1048576	; 0x100000
    fba0:	add	ip, ip, #36864	; 0x9000
    fba4:	ldr	pc, [ip, #1144]!	; 0x478

0000fba8 <myhtml_tree_node_insert_root@plt>:
    fba8:	add	ip, pc, #1048576	; 0x100000
    fbac:	add	ip, ip, #36864	; 0x9000
    fbb0:	ldr	pc, [ip, #1136]!	; 0x470

0000fbb4 <mythread_queue_list_entry_delete@plt>:
    fbb4:	add	ip, pc, #1048576	; 0x100000
    fbb8:	add	ip, ip, #36864	; 0x9000
    fbbc:	ldr	pc, [ip, #1128]!	; 0x468

0000fbc0 <myencoding_string_append_chunk@plt>:
    fbc0:	add	ip, pc, #1048576	; 0x100000
    fbc4:	add	ip, ip, #36864	; 0x9000
    fbc8:	ldr	pc, [ip, #1120]!	; 0x460

0000fbcc <myhtml_token_release_and_check_doctype_attributes@plt>:
    fbcc:	add	ip, pc, #1048576	; 0x100000
    fbd0:	add	ip, ip, #36864	; 0x9000
    fbd4:	ldr	pc, [ip, #1112]!	; 0x458

0000fbd8 <myhtml_token_doctype_check_xhtml_1_1@plt>:
    fbd8:	add	ip, pc, #1048576	; 0x100000
    fbdc:	add	ip, ip, #36864	; 0x9000
    fbe0:	ldr	pc, [ip, #1104]!	; 0x450

0000fbe4 <myencoding_detect_unicode@plt>:
    fbe4:	add	ip, pc, #1048576	; 0x100000
    fbe8:	add	ip, ip, #36864	; 0x9000
    fbec:	ldr	pc, [ip, #1096]!	; 0x448

0000fbf0 <myhtml_tree_element_in_scope_by_node@plt>:
    fbf0:	add	ip, pc, #1048576	; 0x100000
    fbf4:	add	ip, ip, #36864	; 0x9000
    fbf8:	ldr	pc, [ip, #1088]!	; 0x440

0000fbfc <mythread_nanosleep_clean@plt>:
    fbfc:	add	ip, pc, #1048576	; 0x100000
    fc00:	add	ip, ip, #36864	; 0x9000
    fc04:	ldr	pc, [ip, #1080]!	; 0x438

0000fc08 <myhtml_tree_node_insert_html_element@plt>:
    fc08:	add	ip, pc, #1048576	; 0x100000
    fc0c:	add	ip, ip, #36864	; 0x9000
    fc10:	ldr	pc, [ip, #1072]!	; 0x430

0000fc14 <myhtml_tree_token_list_destroy@plt>:
    fc14:	add	ip, pc, #1048576	; 0x100000
    fc18:	add	ip, ip, #36864	; 0x9000
    fc1c:	ldr	pc, [ip, #1064]!	; 0x428

0000fc20 <mcobject_async_init@plt>:
    fc20:	add	ip, pc, #1048576	; 0x100000
    fc24:	add	ip, ip, #36864	; 0x9000
    fc28:	ldr	pc, [ip, #1056]!	; 0x420

0000fc2c <myhtml_tree_temp_tag_name_append@plt>:
    fc2c:	add	ip, pc, #1048576	; 0x100000
    fc30:	add	ip, ip, #36864	; 0x9000
    fc34:	ldr	pc, [ip, #1048]!	; 0x418

0000fc38 <myhtml_tokenizer_fragment_init@plt>:
    fc38:	add	ip, pc, #1048576	; 0x100000
    fc3c:	add	ip, ip, #36864	; 0x9000
    fc40:	ldr	pc, [ip, #1040]!	; 0x410

0000fc44 <mythread_nanosleep_create@plt>:
    fc44:	add	ip, pc, #1048576	; 0x100000
    fc48:	add	ip, ip, #36864	; 0x9000
    fc4c:	ldr	pc, [ip, #1032]!	; 0x408

0000fc50 <myhtml_tree_open_elements_find_by_tag_idx_reverse@plt>:
    fc50:	add	ip, pc, #1048576	; 0x100000
    fc54:	add	ip, ip, #36864	; 0x9000
    fc58:	ldr	pc, [ip, #1024]!	; 0x400

0000fc5c <myhtml_tokenizer_state_init@plt>:
    fc5c:	add	ip, pc, #1048576	; 0x100000
    fc60:	add	ip, ip, #36864	; 0x9000
    fc64:	ldr	pc, [ip, #1016]!	; 0x3f8

0000fc68 <myencoding_codepoint_to_lowercase_ascii_utf_8@plt>:
    fc68:	add	ip, pc, #1048576	; 0x100000
    fc6c:	add	ip, ip, #36864	; 0x9000
    fc70:	ldr	pc, [ip, #1008]!	; 0x3f0

0000fc74 <mycore_ustrcasecmp_without_checks_by_secondary@plt>:
    fc74:	add	ip, pc, #1048576	; 0x100000
    fc78:	add	ip, ip, #36864	; 0x9000
    fc7c:	ldr	pc, [ip, #1000]!	; 0x3e8

0000fc80 <myhtml_tree_wait_for_last_done_token@plt>:
    fc80:	add	ip, pc, #1048576	; 0x100000
    fc84:	add	ip, ip, #36864	; 0x9000
    fc88:	ldr	pc, [ip, #992]!	; 0x3e0

0000fc8c <mythread_queue_get_prev_node@plt>:
    fc8c:	add	ip, pc, #1048576	; 0x100000
    fc90:	add	ip, ip, #36864	; 0x9000
    fc94:	ldr	pc, [ip, #984]!	; 0x3d8

0000fc98 <myhtml_insertion_mode_in_foreign_content_end_other@plt>:
    fc98:	add	ip, pc, #1048576	; 0x100000
    fc9c:	add	ip, ip, #36864	; 0x9000
    fca0:	ldr	pc, [ip, #976]!	; 0x3d0

0000fca4 <setbuf@plt>:
    fca4:	add	ip, pc, #1048576	; 0x100000
    fca8:	add	ip, ip, #36864	; 0x9000
    fcac:	ldr	pc, [ip, #968]!	; 0x3c8

0000fcb0 <mycore_utils_avl_tree_find_min@plt>:
    fcb0:	add	ip, pc, #1048576	; 0x100000
    fcb4:	add	ip, ip, #36864	; 0x9000
    fcb8:	ldr	pc, [ip, #960]!	; 0x3c0

0000fcbc <myhtml_insertion_mode_in_body_other_end_tag@plt>:
    fcbc:	add	ip, pc, #1048576	; 0x100000
    fcc0:	add	ip, ip, #36864	; 0x9000
    fcc4:	ldr	pc, [ip, #952]!	; 0x3b8

0000fcc8 <myhtml_stream_buffer_destroy@plt>:
    fcc8:	add	ip, pc, #1048576	; 0x100000
    fccc:	add	ip, ip, #36864	; 0x9000
    fcd0:	ldr	pc, [ip, #944]!	; 0x3b0

0000fcd4 <myhtml_token_attr_match_case@plt>:
    fcd4:	add	ip, pc, #1048576	; 0x100000
    fcd8:	add	ip, ip, #36864	; 0x9000
    fcdc:	ldr	pc, [ip, #936]!	; 0x3a8

0000fce0 <__cxa_finalize@plt>:
    fce0:	add	ip, pc, #1048576	; 0x100000
    fce4:	add	ip, ip, #36864	; 0x9000
    fce8:	ldr	pc, [ip, #928]!	; 0x3a0

0000fcec <mycore_utils_avl_tree_node_rotate_right@plt>:
    fcec:	add	ip, pc, #1048576	; 0x100000
    fcf0:	add	ip, ip, #36864	; 0x9000
    fcf4:	ldr	pc, [ip, #920]!	; 0x398

0000fcf8 <mcobject_async_create@plt>:
    fcf8:	add	ip, pc, #1048576	; 0x100000
    fcfc:	add	ip, ip, #36864	; 0x9000
    fd00:	ldr	pc, [ip, #912]!	; 0x390

0000fd04 <mythread_queue_clean@plt>:
    fd04:	add	ip, pc, #1048576	; 0x100000
    fd08:	add	ip, ip, #36864	; 0x9000
    fd0c:	ldr	pc, [ip, #904]!	; 0x388

0000fd10 <mcsync_mutex_destroy@plt>:
    fd10:	add	ip, pc, #1048576	; 0x100000
    fd14:	add	ip, ip, #36864	; 0x9000
    fd18:	ldr	pc, [ip, #896]!	; 0x380

0000fd1c <myhtml_parser_worker@plt>:
    fd1c:	add	ip, pc, #1048576	; 0x100000
    fd20:	add	ip, ip, #36864	; 0x9000
    fd24:	ldr	pc, [ip, #888]!	; 0x378

0000fd28 <mythread_thread_create@plt>:
    fd28:	add	ip, pc, #1048576	; 0x100000
    fd2c:	add	ip, ip, #36864	; 0x9000
    fd30:	ldr	pc, [ip, #880]!	; 0x370

0000fd34 <mcsync_create@plt>:
    fd34:	add	ip, pc, #1048576	; 0x100000
    fd38:	add	ip, ip, #36864	; 0x9000
    fd3c:	ldr	pc, [ip, #872]!	; 0x368

0000fd40 <myhtml_insertion_mode_in_template@plt>:
    fd40:	add	ip, pc, #1048576	; 0x100000
    fd44:	add	ip, ip, #36864	; 0x9000
    fd48:	ldr	pc, [ip, #864]!	; 0x360

0000fd4c <mycore_utils_avl_tree_node_balance_factor@plt>:
    fd4c:	add	ip, pc, #1048576	; 0x100000
    fd50:	add	ip, ip, #36864	; 0x9000
    fd54:	ldr	pc, [ip, #856]!	; 0x358

0000fd58 <fopen@plt>:
    fd58:	add	ip, pc, #1048576	; 0x100000
    fd5c:	add	ip, ip, #36864	; 0x9000
    fd60:	ldr	pc, [ip, #848]!	; 0x350

0000fd64 <mcobject_async_mem_malloc@plt>:
    fd64:	add	ip, pc, #1048576	; 0x100000
    fd68:	add	ip, ip, #36864	; 0x9000
    fd6c:	ldr	pc, [ip, #840]!	; 0x348

0000fd70 <mcobject_destroy@plt>:
    fd70:	add	ip, pc, #1048576	; 0x100000
    fd74:	add	ip, ip, #36864	; 0x9000
    fd78:	ldr	pc, [ip, #832]!	; 0x340

0000fd7c <pthread_attr_destroy@plt>:
    fd7c:	add	ip, pc, #1048576	; 0x100000
    fd80:	add	ip, ip, #36864	; 0x9000
    fd84:	ldr	pc, [ip, #824]!	; 0x338

0000fd88 <myhtml_clean@plt>:
    fd88:	add	ip, pc, #1048576	; 0x100000
    fd8c:	add	ip, ip, #36864	; 0x9000
    fd90:	ldr	pc, [ip, #816]!	; 0x330

0000fd94 <myhtml_get_nodes_by_attribute_value_recursion_by_key@plt>:
    fd94:	add	ip, pc, #1048576	; 0x100000
    fd98:	add	ip, ip, #36864	; 0x9000
    fd9c:	ldr	pc, [ip, #808]!	; 0x328

0000fda0 <pthread_mutex_destroy@plt>:
    fda0:	add	ip, pc, #1048576	; 0x100000
    fda4:	add	ip, ip, #36864	; 0x9000
    fda8:	ldr	pc, [ip, #800]!	; 0x320

0000fdac <fflush@plt>:
    fdac:	add	ip, pc, #1048576	; 0x100000
    fdb0:	add	ip, ip, #36864	; 0x9000
    fdb4:	ldr	pc, [ip, #792]!	; 0x318

0000fdb8 <mythread_create@plt>:
    fdb8:	add	ip, pc, #1048576	; 0x100000
    fdbc:	add	ip, ip, #36864	; 0x9000
    fdc0:	ldr	pc, [ip, #784]!	; 0x310

0000fdc4 <myhtml_insertion_mode_in_foreign_content@plt>:
    fdc4:	add	ip, pc, #1048576	; 0x100000
    fdc8:	add	ip, ip, #36864	; 0x9000
    fdcc:	ldr	pc, [ip, #776]!	; 0x308

0000fdd0 <myhtml_tree_generate_all_implied_end_tags@plt>:
    fdd0:	add	ip, pc, #1048576	; 0x100000
    fdd4:	add	ip, ip, #36864	; 0x9000
    fdd8:	ldr	pc, [ip, #768]!	; 0x300

0000fddc <myencoding_string_append_lowercase_ascii@plt>:
    fddc:	add	ip, pc, #1048576	; 0x100000
    fde0:	add	ip, ip, #36864	; 0x9000
    fde4:	ldr	pc, [ip, #760]!	; 0x2f8

0000fde8 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@plt>:
    fde8:	add	ip, pc, #1048576	; 0x100000
    fdec:	add	ip, ip, #36864	; 0x9000
    fdf0:	ldr	pc, [ip, #752]!	; 0x2f0

0000fdf4 <myhread_increase_id_by_entry_id@plt>:
    fdf4:	add	ip, pc, #1048576	; 0x100000
    fdf8:	add	ip, ip, #36864	; 0x9000
    fdfc:	ldr	pc, [ip, #744]!	; 0x2e8

0000fe00 <myhtml_tree_incomming_buffer_make_data@plt>:
    fe00:	add	ip, pc, #1048576	; 0x100000
    fe04:	add	ip, ip, #36864	; 0x9000
    fe08:	ldr	pc, [ip, #736]!	; 0x2e0

0000fe0c <_myhtml_token_create_copy_srt@plt>:
    fe0c:	add	ip, pc, #1048576	; 0x100000
    fe10:	add	ip, ip, #36864	; 0x9000
    fe14:	ldr	pc, [ip, #728]!	; 0x2d8

0000fe18 <memmove@plt>:
    fe18:	add	ip, pc, #1048576	; 0x100000
    fe1c:	add	ip, ip, #36864	; 0x9000
    fe20:	ldr	pc, [ip, #720]!	; 0x2d0

0000fe24 <mythread_thread_attr_init@plt>:
    fe24:	add	ip, pc, #1048576	; 0x100000
    fe28:	add	ip, ip, #36864	; 0x9000
    fe2c:	ldr	pc, [ip, #712]!	; 0x2c8

0000fe30 <myhtml_insertion_mode_in_foreign_content_start_other@plt>:
    fe30:	add	ip, pc, #1048576	; 0x100000
    fe34:	add	ip, ip, #36864	; 0x9000
    fe38:	ldr	pc, [ip, #704]!	; 0x2c0

0000fe3c <myhtml_rules_tree_dispatcher@plt>:
    fe3c:	add	ip, pc, #1048576	; 0x100000
    fe40:	add	ip, ip, #36864	; 0x9000
    fe44:	ldr	pc, [ip, #696]!	; 0x2b8

0000fe48 <myhtml_get_nodes_by_attribute_key_recursion@plt>:
    fe48:	add	ip, pc, #1048576	; 0x100000
    fe4c:	add	ip, ip, #36864	; 0x9000
    fe50:	ldr	pc, [ip, #688]!	; 0x2b0

0000fe54 <free@plt>:
    fe54:	add	ip, pc, #1048576	; 0x100000
    fe58:	add	ip, ip, #36864	; 0x9000
    fe5c:	ldr	pc, [ip, #680]!	; 0x2a8

0000fe60 <mchar_async_cache_malloc@plt>:
    fe60:	add	ip, pc, #1048576	; 0x100000
    fe64:	add	ip, ip, #36864	; 0x9000
    fe68:	ldr	pc, [ip, #672]!	; 0x2a0

0000fe6c <mythread_function_see_opt@plt>:
    fe6c:	add	ip, pc, #1048576	; 0x100000
    fe70:	add	ip, ip, #36864	; 0x9000
    fe74:	ldr	pc, [ip, #664]!	; 0x298

0000fe78 <myencoding_detect_utf_16@plt>:
    fe78:	add	ip, pc, #1048576	; 0x100000
    fe7c:	add	ip, ip, #36864	; 0x9000
    fe80:	ldr	pc, [ip, #656]!	; 0x290

0000fe84 <mcobject_chunk_malloc@plt>:
    fe84:	add	ip, pc, #1048576	; 0x100000
    fe88:	add	ip, ip, #36864	; 0x9000
    fe8c:	ldr	pc, [ip, #648]!	; 0x288

0000fe90 <myhtml_insertion_fix_split_for_text_begin_ws@plt>:
    fe90:	add	ip, pc, #1048576	; 0x100000
    fe94:	add	ip, ip, #36864	; 0x9000
    fe98:	ldr	pc, [ip, #640]!	; 0x280

0000fe9c <mcsync_mutex_unlock@plt>:
    fe9c:	add	ip, pc, #1048576	; 0x100000
    fea0:	add	ip, ip, #36864	; 0x9000
    fea4:	ldr	pc, [ip, #632]!	; 0x278

0000fea8 <pthread_mutex_lock@plt>:
    fea8:	add	ip, pc, #1048576	; 0x100000
    feac:	add	ip, ip, #36864	; 0x9000
    feb0:	ldr	pc, [ip, #624]!	; 0x270

0000feb4 <mycore_calloc@plt>:
    feb4:	add	ip, pc, #1048576	; 0x100000
    feb8:	add	ip, ip, #36864	; 0x9000
    febc:	ldr	pc, [ip, #616]!	; 0x268

0000fec0 <nanosleep@plt>:
    fec0:	add	ip, pc, #1048576	; 0x100000
    fec4:	add	ip, ip, #36864	; 0x9000
    fec8:	ldr	pc, [ip, #608]!	; 0x260

0000fecc <myhtml_token_node_clone@plt>:
    fecc:	add	ip, pc, #1048576	; 0x100000
    fed0:	add	ip, ip, #36864	; 0x9000
    fed4:	ldr	pc, [ip, #600]!	; 0x258

0000fed8 <myhtml_get_nodes_by_tag_id_in_scope@plt>:
    fed8:	add	ip, pc, #1048576	; 0x100000
    fedc:	add	ip, ip, #36864	; 0x9000
    fee0:	ldr	pc, [ip, #592]!	; 0x250

0000fee4 <mchar_sync_chunk_insert_after@plt>:
    fee4:	add	ip, pc, #1048576	; 0x100000
    fee8:	add	ip, ip, #36864	; 0x9000
    feec:	ldr	pc, [ip, #584]!	; 0x248

0000fef0 <ferror@plt>:
    fef0:	add	ip, pc, #1048576	; 0x100000
    fef4:	add	ip, ip, #36864	; 0x9000
    fef8:	ldr	pc, [ip, #576]!	; 0x240

0000fefc <memcpy@plt>:
    fefc:	add	ip, pc, #1048576	; 0x100000
    ff00:	add	ip, ip, #36864	; 0x9000
    ff04:	ldr	pc, [ip, #568]!	; 0x238

0000ff08 <myencoding_name_entry_by_name@plt>:
    ff08:	add	ip, pc, #1048576	; 0x100000
    ff0c:	add	ip, ip, #36864	; 0x9000
    ff10:	ldr	pc, [ip, #560]!	; 0x230

0000ff14 <myhtml_token_adjust_mathml_attributes@plt>:
    ff14:	add	ip, pc, #1048576	; 0x100000
    ff18:	add	ip, ip, #36864	; 0x9000
    ff1c:	ldr	pc, [ip, #552]!	; 0x228

0000ff20 <mcobject_free@plt>:
    ff20:	add	ip, pc, #1048576	; 0x100000
    ff24:	add	ip, ip, #36864	; 0x9000
    ff28:	ldr	pc, [ip, #544]!	; 0x220

0000ff2c <myhtml_tree_node_insert_text@plt>:
    ff2c:	add	ip, pc, #1048576	; 0x100000
    ff30:	add	ip, ip, #36864	; 0x9000
    ff34:	ldr	pc, [ip, #536]!	; 0x218

0000ff38 <myhtml_tag_set_category@plt>:
    ff38:	add	ip, pc, #1048576	; 0x100000
    ff3c:	add	ip, ip, #36864	; 0x9000
    ff40:	ldr	pc, [ip, #528]!	; 0x210

0000ff44 <mcsync_spin_destroy@plt>:
    ff44:	add	ip, pc, #1048576	; 0x100000
    ff48:	add	ip, ip, #36864	; 0x9000
    ff4c:	ldr	pc, [ip, #520]!	; 0x208

0000ff50 <myhtml_tree_template_insertion_append@plt>:
    ff50:	add	ip, pc, #1048576	; 0x100000
    ff54:	add	ip, ip, #36864	; 0x9000
    ff58:	ldr	pc, [ip, #512]!	; 0x200

0000ff5c <mchar_async_realloc@plt>:
    ff5c:	add	ip, pc, #1048576	; 0x100000
    ff60:	add	ip, ip, #36864	; 0x9000
    ff64:	ldr	pc, [ip, #504]!	; 0x1f8

0000ff68 <pthread_mutex_init@plt>:
    ff68:	add	ip, pc, #1048576	; 0x100000
    ff6c:	add	ip, ip, #36864	; 0x9000
    ff70:	ldr	pc, [ip, #496]!	; 0x1f0

0000ff74 <myhtml_tokenizer_state_bogus_comment@plt>:
    ff74:	add	ip, pc, #1048576	; 0x100000
    ff78:	add	ip, ip, #36864	; 0x9000
    ff7c:	ldr	pc, [ip, #488]!	; 0x1e8

0000ff80 <myhtml_tree_node_create@plt>:
    ff80:	add	ip, pc, #1048576	; 0x100000
    ff84:	add	ip, ip, #36864	; 0x9000
    ff88:	ldr	pc, [ip, #480]!	; 0x1e0

0000ff8c <myhtml_tree_node_delete_recursive@plt>:
    ff8c:	add	ip, pc, #1048576	; 0x100000
    ff90:	add	ip, ip, #36864	; 0x9000
    ff94:	ldr	pc, [ip, #472]!	; 0x1d8

0000ff98 <myhtml_tag_static_get_by_id@plt>:
    ff98:	add	ip, pc, #1048576	; 0x100000
    ff9c:	add	ip, ip, #36864	; 0x9000
    ffa0:	ldr	pc, [ip, #464]!	; 0x1d0

0000ffa4 <myhtml_token_attr_clean@plt>:
    ffa4:	add	ip, pc, #1048576	; 0x100000
    ffa8:	add	ip, ip, #36864	; 0x9000
    ffac:	ldr	pc, [ip, #456]!	; 0x1c8

0000ffb0 <myhtml_tag_add@plt>:
    ffb0:	add	ip, pc, #1048576	; 0x100000
    ffb4:	add	ip, ip, #36864	; 0x9000
    ffb8:	ldr	pc, [ip, #448]!	; 0x1c0

0000ffbc <mcobject_create@plt>:
    ffbc:	add	ip, pc, #1048576	; 0x100000
    ffc0:	add	ip, ip, #36864	; 0x9000
    ffc4:	ldr	pc, [ip, #440]!	; 0x1b8

0000ffc8 <myhtml_queue_add@plt>:
    ffc8:	add	ip, pc, #1048576	; 0x100000
    ffcc:	add	ip, ip, #36864	; 0x9000
    ffd0:	ldr	pc, [ip, #432]!	; 0x1b0

0000ffd4 <pthread_mutex_trylock@plt>:
    ffd4:	add	ip, pc, #1048576	; 0x100000
    ffd8:	add	ip, ip, #36864	; 0x9000
    ffdc:	ldr	pc, [ip, #424]!	; 0x1a8

0000ffe0 <myhtml_tree_is_mathml_integration_point@plt>:
    ffe0:	add	ip, pc, #1048576	; 0x100000
    ffe4:	add	ip, ip, #36864	; 0x9000
    ffe8:	ldr	pc, [ip, #416]!	; 0x1a0

0000ffec <mcobject_async_free@plt>:
    ffec:	add	ip, pc, #1048576	; 0x100000
    fff0:	add	ip, ip, #36864	; 0x9000
    fff4:	ldr	pc, [ip, #408]!	; 0x198

0000fff8 <myhtml_insertion_mode_in_head@plt>:
    fff8:	add	ip, pc, #1048576	; 0x100000
    fffc:	add	ip, ip, #36864	; 0x9000
   10000:	ldr	pc, [ip, #400]!	; 0x190

00010004 <ftell@plt>:
   10004:	add	ip, pc, #1048576	; 0x100000
   10008:	add	ip, ip, #36864	; 0x9000
   1000c:	ldr	pc, [ip, #392]!	; 0x188

00010010 <memcmp@plt>:
   10010:	add	ip, pc, #1048576	; 0x100000
   10014:	add	ip, ip, #36864	; 0x9000
   10018:	ldr	pc, [ip, #384]!	; 0x180

0001001c <mycore_utils_mhash_hash@plt>:
   1001c:	add	ip, pc, #1048576	; 0x100000
   10020:	add	ip, ip, #36864	; 0x9000
   10024:	ldr	pc, [ip, #376]!	; 0x178

00010028 <myencoding_prescan_stream_to_determine_encoding_skip_name@plt>:
   10028:	add	ip, pc, #1048576	; 0x100000
   1002c:	add	ip, ip, #36864	; 0x9000
   10030:	ldr	pc, [ip, #368]!	; 0x170

00010034 <mycore_incoming_buffer_add@plt>:
   10034:	add	ip, pc, #1048576	; 0x100000
   10038:	add	ip, ip, #36864	; 0x9000
   1003c:	ldr	pc, [ip, #360]!	; 0x168

00010040 <mythread_nanosleep_sleep@plt>:
   10040:	add	ip, pc, #1048576	; 0x100000
   10044:	add	ip, ip, #36864	; 0x9000
   10048:	ldr	pc, [ip, #352]!	; 0x160

0001004c <mctree_insert_before@plt>:
   1004c:	add	ip, pc, #1048576	; 0x100000
   10050:	add	ip, ip, #36864	; 0x9000
   10054:	ldr	pc, [ip, #344]!	; 0x158

00010058 <mctree_destroy@plt>:
   10058:	add	ip, pc, #1048576	; 0x100000
   1005c:	add	ip, ip, #36864	; 0x9000
   10060:	ldr	pc, [ip, #336]!	; 0x150

00010064 <myhtml_tokenizer_chunk@plt>:
   10064:	add	ip, pc, #1048576	; 0x100000
   10068:	add	ip, ip, #36864	; 0x9000
   1006c:	ldr	pc, [ip, #328]!	; 0x148

00010070 <myhtml_tree_active_formatting_append@plt>:
   10070:	add	ip, pc, #1048576	; 0x100000
   10074:	add	ip, ip, #36864	; 0x9000
   10078:	ldr	pc, [ip, #320]!	; 0x140

0001007c <myhtml_tree_active_formatting_destroy@plt>:
   1007c:	add	ip, pc, #1048576	; 0x100000
   10080:	add	ip, ip, #36864	; 0x9000
   10084:	ldr	pc, [ip, #312]!	; 0x138

00010088 <mythread_suspend@plt>:
   10088:	add	ip, pc, #1048576	; 0x100000
   1008c:	add	ip, ip, #36864	; 0x9000
   10090:	ldr	pc, [ip, #304]!	; 0x130

00010094 <myhtml_tokenizer_state_destroy@plt>:
   10094:	add	ip, pc, #1048576	; 0x100000
   10098:	add	ip, ip, #36864	; 0x9000
   1009c:	ldr	pc, [ip, #296]!	; 0x128

000100a0 <mycore_incoming_buffer_find_by_position@plt>:
   100a0:	add	ip, pc, #1048576	; 0x100000
   100a4:	add	ip, ip, #36864	; 0x9000
   100a8:	ldr	pc, [ip, #288]!	; 0x120

000100ac <mcobject_async_chunk_malloc@plt>:
   100ac:	add	ip, pc, #1048576	; 0x100000
   100b0:	add	ip, ip, #36864	; 0x9000
   100b4:	ldr	pc, [ip, #280]!	; 0x118

000100b8 <myhtml_insertion_fix_emit_for_text_begin_ws@plt>:
   100b8:	add	ip, pc, #1048576	; 0x100000
   100bc:	add	ip, ip, #36864	; 0x9000
   100c0:	ldr	pc, [ip, #272]!	; 0x110

000100c4 <myhtml_tree_active_formatting_find@plt>:
   100c4:	add	ip, pc, #1048576	; 0x100000
   100c8:	add	ip, ip, #36864	; 0x9000
   100cc:	ldr	pc, [ip, #264]!	; 0x108

000100d0 <mythread_queue_list_destroy@plt>:
   100d0:	add	ip, pc, #1048576	; 0x100000
   100d4:	add	ip, ip, #36864	; 0x9000
   100d8:	ldr	pc, [ip, #256]!	; 0x100

000100dc <myhtml_tree_open_elements_pop_until_by_node@plt>:
   100dc:	add	ip, pc, #1048576	; 0x100000
   100e0:	add	ip, ip, #36864	; 0x9000
   100e4:	ldr	pc, [ip, #248]!	; 0xf8

000100e8 <myhtml_stream_buffer_entry_destroy@plt>:
   100e8:	add	ip, pc, #1048576	; 0x100000
   100ec:	add	ip, ip, #36864	; 0x9000
   100f0:	ldr	pc, [ip, #240]!	; 0xf0

000100f4 <myhtml_tokenizer_begin@plt>:
   100f4:	add	ip, pc, #1048576	; 0x100000
   100f8:	add	ip, ip, #36864	; 0x9000
   100fc:	ldr	pc, [ip, #232]!	; 0xe8

00010100 <mchar_async_create@plt>:
   10100:	add	ip, pc, #1048576	; 0x100000
   10104:	add	ip, ip, #36864	; 0x9000
   10108:	ldr	pc, [ip, #224]!	; 0xe0

0001010c <mycore_string_copy@plt>:
   1010c:	add	ip, pc, #1048576	; 0x100000
   10110:	add	ip, ip, #36864	; 0x9000
   10114:	ldr	pc, [ip, #216]!	; 0xd8

00010118 <myhtml_insertion_mode_in_table@plt>:
   10118:	add	ip, pc, #1048576	; 0x100000
   1011c:	add	ip, ip, #36864	; 0x9000
   10120:	ldr	pc, [ip, #208]!	; 0xd0

00010124 <mythread_queue_list_entry_push@plt>:
   10124:	add	ip, pc, #1048576	; 0x100000
   10128:	add	ip, ip, #36864	; 0x9000
   1012c:	ldr	pc, [ip, #200]!	; 0xc8

00010130 <mythread_queue_get_current_node@plt>:
   10130:	add	ip, pc, #1048576	; 0x100000
   10134:	add	ip, ip, #36864	; 0x9000
   10138:	ldr	pc, [ip, #192]!	; 0xc0

0001013c <mcobject_async_chunk_up@plt>:
   1013c:	add	ip, pc, #1048576	; 0x100000
   10140:	add	ip, ip, #36864	; 0x9000
   10144:	ldr	pc, [ip, #184]!	; 0xb8

00010148 <myhtml_tree_open_elements_pop@plt>:
   10148:	add	ip, pc, #1048576	; 0x100000
   1014c:	add	ip, ip, #36864	; 0x9000
   10150:	ldr	pc, [ip, #176]!	; 0xb0

00010154 <mcsync_destroy@plt>:
   10154:	add	ip, pc, #1048576	; 0x100000
   10158:	add	ip, ip, #36864	; 0x9000
   1015c:	ldr	pc, [ip, #168]!	; 0xa8

00010160 <myencoding_result_clean@plt>:
   10160:	add	ip, pc, #1048576	; 0x100000
   10164:	add	ip, ip, #36864	; 0x9000
   10168:	ldr	pc, [ip, #160]!	; 0xa0

0001016c <myhtml_string_append_with_preprocessing@plt>:
   1016c:	add	ip, pc, #1048576	; 0x100000
   10170:	add	ip, ip, #36864	; 0x9000
   10174:	ldr	pc, [ip, #152]!	; 0x98

00010178 <myhtml_token_adjust_svg_attributes@plt>:
   10178:	add	ip, pc, #1048576	; 0x100000
   1017c:	add	ip, ip, #36864	; 0x9000
   10180:	ldr	pc, [ip, #144]!	; 0x90

00010184 <realloc@plt>:
   10184:	add	ip, pc, #1048576	; 0x100000
   10188:	add	ip, ip, #36864	; 0x9000
   1018c:	ldr	pc, [ip, #136]!	; 0x88

00010190 <mycore_incoming_buffer_convert_one_escaped_to_code_point@plt>:
   10190:	add	ip, pc, #1048576	; 0x100000
   10194:	add	ip, ip, #36864	; 0x9000
   10198:	ldr	pc, [ip, #128]!	; 0x80

0001019c <myhtml_tree_is_html_integration_point@plt>:
   1019c:	add	ip, pc, #1048576	; 0x100000
   101a0:	add	ip, ip, #36864	; 0x9000
   101a4:	ldr	pc, [ip, #120]!	; 0x78

000101a8 <myhtml_namespace_name_entry_by_name@plt>:
   101a8:	add	ip, pc, #1048576	; 0x100000
   101ac:	add	ip, ip, #36864	; 0x9000
   101b0:	ldr	pc, [ip, #112]!	; 0x70

000101b4 <myencoding_detect_bom@plt>:
   101b4:	add	ip, pc, #1048576	; 0x100000
   101b8:	add	ip, ip, #36864	; 0x9000
   101bc:	ldr	pc, [ip, #104]!	; 0x68

000101c0 <myhtml_tree_list_append@plt>:
   101c0:	add	ip, pc, #1048576	; 0x100000
   101c4:	add	ip, ip, #36864	; 0x9000
   101c8:	ldr	pc, [ip, #96]!	; 0x60

000101cc <myhtml_tokenizer_calc_current_namespace@plt>:
   101cc:	add	ip, pc, #1048576	; 0x100000
   101d0:	add	ip, ip, #36864	; 0x9000
   101d4:	ldr	pc, [ip, #88]!	; 0x58

000101d8 <myhtml_tree_open_elements_remove@plt>:
   101d8:	add	ip, pc, #1048576	; 0x100000
   101dc:	add	ip, ip, #36864	; 0x9000
   101e0:	ldr	pc, [ip, #80]!	; 0x50

000101e4 <mctree_insert_child@plt>:
   101e4:	add	ip, pc, #1048576	; 0x100000
   101e8:	add	ip, ip, #36864	; 0x9000
   101ec:	ldr	pc, [ip, #72]!	; 0x48

000101f0 <mcsimple_clean@plt>:
   101f0:	add	ip, pc, #1048576	; 0x100000
   101f4:	add	ip, ip, #36864	; 0x9000
   101f8:	ldr	pc, [ip, #64]!	; 0x40

000101fc <myhtml_tree_node_insert_comment@plt>:
   101fc:	add	ip, pc, #1048576	; 0x100000
   10200:	add	ip, ip, #36864	; 0x9000
   10204:	ldr	pc, [ip, #56]!	; 0x38

00010208 <myhtml_tokenizer_end@plt>:
   10208:	add	ip, pc, #1048576	; 0x100000
   1020c:	add	ip, ip, #36864	; 0x9000
   10210:	ldr	pc, [ip, #48]!	; 0x30

00010214 <myhtml_tree_temp_tag_name_clean@plt>:
   10214:	add	ip, pc, #1048576	; 0x100000
   10218:	add	ip, ip, #36864	; 0x9000
   1021c:	ldr	pc, [ip, #40]!	; 0x28

00010220 <myhtml_tree_list_clean@plt>:
   10220:	add	ip, pc, #1048576	; 0x100000
   10224:	add	ip, ip, #36864	; 0x9000
   10228:	ldr	pc, [ip, #32]!

0001022c <mchar_async_node_add@plt>:
   1022c:	add	ip, pc, #1048576	; 0x100000
   10230:	add	ip, ip, #36864	; 0x9000
   10234:	ldr	pc, [ip, #24]!

00010238 <mycore_strncasecmp@plt>:
   10238:	add	ip, pc, #1048576	; 0x100000
   1023c:	add	ip, ip, #36864	; 0x9000
   10240:	ldr	pc, [ip, #16]!

00010244 <myhtml_tokenizer_post@plt>:
   10244:	add	ip, pc, #1048576	; 0x100000
   10248:	add	ip, ip, #36864	; 0x9000
   1024c:	ldr	pc, [ip, #8]!

00010250 <myhtml_tree_list_insert_by_index@plt>:
   10250:	add	ip, pc, #1048576	; 0x100000
   10254:	add	ip, ip, #36864	; 0x9000
   10258:	ldr	pc, [ip, #0]!

0001025c <mcsimple_create@plt>:
   1025c:	add	ip, pc, #1048576	; 0x100000
   10260:	add	ip, ip, #8, 20	; 0x8000
   10264:	ldr	pc, [ip, #4088]!	; 0xff8

00010268 <mythread_queue_destroy@plt>:
   10268:	add	ip, pc, #1048576	; 0x100000
   1026c:	add	ip, ip, #8, 20	; 0x8000
   10270:	ldr	pc, [ip, #4080]!	; 0xff0

00010274 <mycore_string_raw_copy@plt>:
   10274:	add	ip, pc, #1048576	; 0x100000
   10278:	add	ip, ip, #8, 20	; 0x8000
   1027c:	ldr	pc, [ip, #4072]!	; 0xfe8

00010280 <mycore_string_stay_only_whitespace@plt>:
   10280:	add	ip, pc, #1048576	; 0x100000
   10284:	add	ip, ip, #8, 20	; 0x8000
   10288:	ldr	pc, [ip, #4064]!	; 0xfe0

0001028c <mctree_clean@plt>:
   1028c:	add	ip, pc, #1048576	; 0x100000
   10290:	add	ip, ip, #8, 20	; 0x8000
   10294:	ldr	pc, [ip, #4056]!	; 0xfd8

00010298 <myhtml_collection_create@plt>:
   10298:	add	ip, pc, #1048576	; 0x100000
   1029c:	add	ip, ip, #8, 20	; 0x8000
   102a0:	ldr	pc, [ip, #4048]!	; 0xfd0

000102a4 <myhtml_rules_stop_parsing@plt>:
   102a4:	add	ip, pc, #1048576	; 0x100000
   102a8:	add	ip, ip, #8, 20	; 0x8000
   102ac:	ldr	pc, [ip, #4040]!	; 0xfc8

000102b0 <myhtml_get_nodes_by_tag_id@plt>:
   102b0:	add	ip, pc, #1048576	; 0x100000
   102b4:	add	ip, ip, #8, 20	; 0x8000
   102b8:	ldr	pc, [ip, #4032]!	; 0xfc0

000102bc <myhtml_serialization_tree_buffer@plt>:
   102bc:	add	ip, pc, #1048576	; 0x100000
   102c0:	add	ip, ip, #8, 20	; 0x8000
   102c4:	ldr	pc, [ip, #4024]!	; 0xfb8

000102c8 <myhtml_token_set_replacement_character_for_null_token@plt>:
   102c8:	add	ip, pc, #1048576	; 0x100000
   102cc:	add	ip, ip, #8, 20	; 0x8000
   102d0:	ldr	pc, [ip, #4016]!	; 0xfb0

000102d4 <fwrite@plt>:
   102d4:	add	ip, pc, #1048576	; 0x100000
   102d8:	add	ip, ip, #8, 20	; 0x8000
   102dc:	ldr	pc, [ip, #4008]!	; 0xfa8

000102e0 <myencoding_prescan_stream_to_determine_encoding_skip_other@plt>:
   102e0:	add	ip, pc, #1048576	; 0x100000
   102e4:	add	ip, ip, #8, 20	; 0x8000
   102e8:	ldr	pc, [ip, #4000]!	; 0xfa0

000102ec <myhtml_tree_node_insert_by_mode@plt>:
   102ec:	add	ip, pc, #1048576	; 0x100000
   102f0:	add	ip, ip, #8, 20	; 0x8000
   102f4:	ldr	pc, [ip, #3992]!	; 0xf98

000102f8 <myhtml_tree_node_insert_after@plt>:
   102f8:	add	ip, pc, #1048576	; 0x100000
   102fc:	add	ip, ip, #8, 20	; 0x8000
   10300:	ldr	pc, [ip, #3984]!	; 0xf90

00010304 <myhtml_data_process_state_end@plt>:
   10304:	add	ip, pc, #1048576	; 0x100000
   10308:	add	ip, ip, #8, 20	; 0x8000
   1030c:	ldr	pc, [ip, #3976]!	; 0xf88

00010310 <myhtml_serialization_reallocate@plt>:
   10310:	add	ip, pc, #1048576	; 0x100000
   10314:	add	ip, ip, #8, 20	; 0x8000
   10318:	ldr	pc, [ip, #3968]!	; 0xf80

0001031c <mycore_string_append_with_replacement_null_characters@plt>:
   1031c:	add	ip, pc, #1048576	; 0x100000
   10320:	add	ip, ip, #8, 20	; 0x8000
   10324:	ldr	pc, [ip, #3960]!	; 0xf78

00010328 <myhtml_tree_clear_stack_back_table_body_context@plt>:
   10328:	add	ip, pc, #1048576	; 0x100000
   1032c:	add	ip, ip, #8, 20	; 0x8000
   10330:	ldr	pc, [ip, #3952]!	; 0xf70

00010334 <mcsimple_destroy@plt>:
   10334:	add	ip, pc, #1048576	; 0x100000
   10338:	add	ip, ip, #8, 20	; 0x8000
   1033c:	ldr	pc, [ip, #3944]!	; 0xf68

00010340 <myhtml_token_doctype_check_html_4_01@plt>:
   10340:	add	ip, pc, #1048576	; 0x100000
   10344:	add	ip, ip, #8, 20	; 0x8000
   10348:	ldr	pc, [ip, #3936]!	; 0xf60

0001034c <__mtree_insert_to_start@plt>:
   1034c:	add	ip, pc, #1048576	; 0x100000
   10350:	add	ip, ip, #8, 20	; 0x8000
   10354:	ldr	pc, [ip, #3928]!	; 0xf58

00010358 <myhtml_insertion_mode_in_select@plt>:
   10358:	add	ip, pc, #1048576	; 0x100000
   1035c:	add	ip, ip, #8, 20	; 0x8000
   10360:	ldr	pc, [ip, #3920]!	; 0xf50

00010364 <fread@plt>:
   10364:	add	ip, pc, #1048576	; 0x100000
   10368:	add	ip, ip, #8, 20	; 0x8000
   1036c:	ldr	pc, [ip, #3912]!	; 0xf48

00010370 <pthread_create@plt>:
   10370:	add	ip, pc, #1048576	; 0x100000
   10374:	add	ip, ip, #8, 20	; 0x8000
   10378:	ldr	pc, [ip, #3904]!	; 0xf40

0001037c <myencoding_prescan_stream_to_determine_encoding_check_meta@plt>:
   1037c:	add	ip, pc, #1048576	; 0x100000
   10380:	add	ip, ip, #8, 20	; 0x8000
   10384:	ldr	pc, [ip, #3896]!	; 0xf38

00010388 <myhtml_tree_node_insert_before@plt>:
   10388:	add	ip, pc, #1048576	; 0x100000
   1038c:	add	ip, ip, #8, 20	; 0x8000
   10390:	ldr	pc, [ip, #3888]!	; 0xf30

00010394 <myhtml_parser_token_data_to_string_charef@plt>:
   10394:	add	ip, pc, #1048576	; 0x100000
   10398:	add	ip, ip, #8, 20	; 0x8000
   1039c:	ldr	pc, [ip, #3880]!	; 0xf28

000103a0 <mythread_thread_attr_clean@plt>:
   103a0:	add	ip, pc, #1048576	; 0x100000
   103a4:	add	ip, ip, #8, 20	; 0x8000
   103a8:	ldr	pc, [ip, #3872]!	; 0xf20

000103ac <myhtml_tree_clear_stack_back_table_row_context@plt>:
   103ac:	add	ip, pc, #1048576	; 0x100000
   103b0:	add	ip, ip, #8, 20	; 0x8000
   103b4:	ldr	pc, [ip, #3864]!	; 0xf18

000103b8 <myhtml_tree_template_insertion_clean@plt>:
   103b8:	add	ip, pc, #1048576	; 0x100000
   103bc:	add	ip, ip, #8, 20	; 0x8000
   103c0:	ldr	pc, [ip, #3856]!	; 0xf10

000103c4 <myhtml_tokenizer_chunk_process@plt>:
   103c4:	add	ip, pc, #1048576	; 0x100000
   103c8:	add	ip, ip, #8, 20	; 0x8000
   103cc:	ldr	pc, [ip, #3848]!	; 0xf08

000103d0 <myhtml_stream_create@plt>:
   103d0:	add	ip, pc, #1048576	; 0x100000
   103d4:	add	ip, ip, #8, 20	; 0x8000
   103d8:	ldr	pc, [ip, #3840]!	; 0xf00

000103dc <myhtml_tree_tags_close_p@plt>:
   103dc:	add	ip, pc, #1048576	; 0x100000
   103e0:	add	ip, ip, #8, 20	; 0x8000
   103e4:	ldr	pc, [ip, #3832]!	; 0xef8

000103e8 <mcsimple_init@plt>:
   103e8:	add	ip, pc, #1048576	; 0x100000
   103ec:	add	ip, ip, #8, 20	; 0x8000
   103f0:	ldr	pc, [ip, #3824]!	; 0xef0

000103f4 <myencoding_string_append@plt>:
   103f4:	add	ip, pc, #1048576	; 0x100000
   103f8:	add	ip, ip, #8, 20	; 0x8000
   103fc:	ldr	pc, [ip, #3816]!	; 0xee8

00010400 <myhtml_stream_buffer_clean@plt>:
   10400:	add	ip, pc, #1048576	; 0x100000
   10404:	add	ip, ip, #8, 20	; 0x8000
   10408:	ldr	pc, [ip, #3808]!	; 0xee0

0001040c <mycore_utils_avl_tree_rotate_for_delete@plt>:
   1040c:	add	ip, pc, #1048576	; 0x100000
   10410:	add	ip, ip, #8, 20	; 0x8000
   10414:	ldr	pc, [ip, #3800]!	; 0xed8

00010418 <myhtml_token_merged_two_token_string@plt>:
   10418:	add	ip, pc, #1048576	; 0x100000
   1041c:	add	ip, ip, #8, 20	; 0x8000
   10420:	ldr	pc, [ip, #3792]!	; 0xed0

00010424 <myhtml_attribute_value@plt>:
   10424:	add	ip, pc, #1048576	; 0x100000
   10428:	add	ip, ip, #8, 20	; 0x8000
   1042c:	ldr	pc, [ip, #3784]!	; 0xec8

00010430 <myhtml_token_strict_doctype_by_token@plt>:
   10430:	add	ip, pc, #1048576	; 0x100000
   10434:	add	ip, ip, #8, 20	; 0x8000
   10438:	ldr	pc, [ip, #3776]!	; 0xec0

0001043c <mchar_async_init@plt>:
   1043c:	add	ip, pc, #1048576	; 0x100000
   10440:	add	ip, ip, #8, 20	; 0x8000
   10444:	ldr	pc, [ip, #3768]!	; 0xeb8

00010448 <mycore_string_crop_whitespace_from_begin@plt>:
   10448:	add	ip, pc, #1048576	; 0x100000
   1044c:	add	ip, ip, #8, 20	; 0x8000
   10450:	ldr	pc, [ip, #3760]!	; 0xeb0

00010454 <mythread_resume@plt>:
   10454:	add	ip, pc, #1048576	; 0x100000
   10458:	add	ip, ip, #8, 20	; 0x8000
   1045c:	ldr	pc, [ip, #3752]!	; 0xea8

00010460 <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@plt>:
   10460:	add	ip, pc, #1048576	; 0x100000
   10464:	add	ip, ip, #8, 20	; 0x8000
   10468:	ldr	pc, [ip, #3744]!	; 0xea0

0001046c <myhtml_tokenizer_doctype_public_identifier_dsq@plt>:
   1046c:	add	ip, pc, #1048576	; 0x100000
   10470:	add	ip, ip, #8, 20	; 0x8000
   10474:	ldr	pc, [ip, #3736]!	; 0xe98

00010478 <myhtml_create_stream_and_batch@plt>:
   10478:	add	ip, pc, #1048576	; 0x100000
   1047c:	add	ip, ip, #8, 20	; 0x8000
   10480:	ldr	pc, [ip, #3728]!	; 0xe90

00010484 <myhtml_data_process_entry_clean@plt>:
   10484:	add	ip, pc, #1048576	; 0x100000
   10488:	add	ip, ip, #8, 20	; 0x8000
   1048c:	ldr	pc, [ip, #3720]!	; 0xe88

00010490 <mcsync_spin_init@plt>:
   10490:	add	ip, pc, #1048576	; 0x100000
   10494:	add	ip, ip, #8, 20	; 0x8000
   10498:	ldr	pc, [ip, #3712]!	; 0xe80

0001049c <malloc@plt>:
   1049c:	add	ip, pc, #1048576	; 0x100000
   104a0:	add	ip, ip, #8, 20	; 0x8000
   104a4:	ldr	pc, [ip, #3704]!	; 0xe78

000104a8 <mythread_check_status@plt>:
   104a8:	add	ip, pc, #1048576	; 0x100000
   104ac:	add	ip, ip, #8, 20	; 0x8000
   104b0:	ldr	pc, [ip, #3696]!	; 0xe70

000104b4 <myhtml_token_doctype_check_html_4_0@plt>:
   104b4:	add	ip, pc, #1048576	; 0x100000
   104b8:	add	ip, ip, #8, 20	; 0x8000
   104bc:	ldr	pc, [ip, #3688]!	; 0xe68

000104c0 <mycore_strcasecmp@plt>:
   104c0:	add	ip, pc, #1048576	; 0x100000
   104c4:	add	ip, ip, #8, 20	; 0x8000
   104c8:	ldr	pc, [ip, #3680]!	; 0xe60

000104cc <mythread_queue_node_malloc_round@plt>:
   104cc:	add	ip, pc, #1048576	; 0x100000
   104d0:	add	ip, ip, #8, 20	; 0x8000
   104d4:	ldr	pc, [ip, #3672]!	; 0xe58

000104d8 <myhtml_tree_active_formatting_reconstruction@plt>:
   104d8:	add	ip, pc, #1048576	; 0x100000
   104dc:	add	ip, ip, #8, 20	; 0x8000
   104e0:	ldr	pc, [ip, #3664]!	; 0xe50

000104e4 <myhtml_token_set_done@plt>:
   104e4:	add	ip, pc, #1048576	; 0x100000
   104e8:	add	ip, ip, #8, 20	; 0x8000
   104ec:	ldr	pc, [ip, #3656]!	; 0xe48

000104f0 <mcsync_spin_create@plt>:
   104f0:	add	ip, pc, #1048576	; 0x100000
   104f4:	add	ip, ip, #8, 20	; 0x8000
   104f8:	ldr	pc, [ip, #3648]!	; 0xe40

000104fc <mythread_thread_join@plt>:
   104fc:	add	ip, pc, #1048576	; 0x100000
   10500:	add	ip, ip, #8, 20	; 0x8000
   10504:	ldr	pc, [ip, #3640]!	; 0xe38

00010508 <myhtml_token_attr_remove@plt>:
   10508:	add	ip, pc, #1048576	; 0x100000
   1050c:	add	ip, ip, #8, 20	; 0x8000
   10510:	ldr	pc, [ip, #3632]!	; 0xe30

00010514 <myhtml_token_node_attr_copy@plt>:
   10514:	add	ip, pc, #1048576	; 0x100000
   10518:	add	ip, ip, #8, 20	; 0x8000
   1051c:	ldr	pc, [ip, #3624]!	; 0xe28

00010520 <mythread_quit@plt>:
   10520:	add	ip, pc, #1048576	; 0x100000
   10524:	add	ip, ip, #8, 20	; 0x8000
   10528:	ldr	pc, [ip, #3616]!	; 0xe20

0001052c <myhtml_batch_create@plt>:
   1052c:	add	ip, pc, #1048576	; 0x100000
   10530:	add	ip, ip, #8, 20	; 0x8000
   10534:	ldr	pc, [ip, #3608]!	; 0xe18

00010538 <myhtml_parse_chunk_fragment@plt>:
   10538:	add	ip, pc, #1048576	; 0x100000
   1053c:	add	ip, ip, #8, 20	; 0x8000
   10540:	ldr	pc, [ip, #3600]!	; 0xe10

00010544 <mcsync_spin_lock@plt>:
   10544:	add	ip, pc, #1048576	; 0x100000
   10548:	add	ip, ip, #8, 20	; 0x8000
   1054c:	ldr	pc, [ip, #3592]!	; 0xe08

00010550 <myhtml_token_clean@plt>:
   10550:	add	ip, pc, #1048576	; 0x100000
   10554:	add	ip, ip, #8, 20	; 0x8000
   10558:	ldr	pc, [ip, #3584]!	; 0xe00

0001055c <mythread_queue_list_get_count@plt>:
   1055c:	add	ip, pc, #1048576	; 0x100000
   10560:	add	ip, ip, #8, 20	; 0x8000
   10564:	ldr	pc, [ip, #3576]!	; 0xdf8

00010568 <mythread_queue_list_see_for_done_by_thread@plt>:
   10568:	add	ip, pc, #1048576	; 0x100000
   1056c:	add	ip, ip, #8, 20	; 0x8000
   10570:	ldr	pc, [ip, #3568]!	; 0xdf0

00010574 <__gmon_start__@plt>:
   10574:	add	ip, pc, #1048576	; 0x100000
   10578:	add	ip, ip, #8, 20	; 0x8000
   1057c:	ldr	pc, [ip, #3560]!	; 0xde8

00010580 <myhtml_tokenizer_pause@plt>:
   10580:	add	ip, pc, #1048576	; 0x100000
   10584:	add	ip, ip, #8, 20	; 0x8000
   10588:	ldr	pc, [ip, #3552]!	; 0xde0

0001058c <myhtml_tokenizer_set_first_settings@plt>:
   1058c:	add	ip, pc, #1048576	; 0x100000
   10590:	add	ip, ip, #8, 20	; 0x8000
   10594:	ldr	pc, [ip, #3544]!	; 0xdd8

00010598 <myhtml_tree_temp_tag_name_init@plt>:
   10598:	add	ip, pc, #1048576	; 0x100000
   1059c:	add	ip, ip, #8, 20	; 0x8000
   105a0:	ldr	pc, [ip, #3536]!	; 0xdd0

000105a4 <mycore_string_init@plt>:
   105a4:	add	ip, pc, #1048576	; 0x100000
   105a8:	add	ip, ip, #8, 20	; 0x8000
   105ac:	ldr	pc, [ip, #3528]!	; 0xdc8

000105b0 <myhtml_tree_node_find_parent_by_tag_id@plt>:
   105b0:	add	ip, pc, #1048576	; 0x100000
   105b4:	add	ip, ip, #8, 20	; 0x8000
   105b8:	ldr	pc, [ip, #3520]!	; 0xdc0

000105bc <myhtml_tree_current_node@plt>:
   105bc:	add	ip, pc, #1048576	; 0x100000
   105c0:	add	ip, ip, #8, 20	; 0x8000
   105c4:	ldr	pc, [ip, #3512]!	; 0xdb8

000105c8 <mythread_mutex_close@plt>:
   105c8:	add	ip, pc, #1048576	; 0x100000
   105cc:	add	ip, ip, #8, 20	; 0x8000
   105d0:	ldr	pc, [ip, #3504]!	; 0xdb0

000105d4 <myhtml_insertion_mode_in_body@plt>:
   105d4:	add	ip, pc, #1048576	; 0x100000
   105d8:	add	ip, ip, #8, 20	; 0x8000
   105dc:	ldr	pc, [ip, #3496]!	; 0xda8

000105e0 <myhtml_tree_active_formatting_between_last_marker@plt>:
   105e0:	add	ip, pc, #1048576	; 0x100000
   105e4:	add	ip, ip, #8, 20	; 0x8000
   105e8:	ldr	pc, [ip, #3488]!	; 0xda0

000105ec <mctree_create@plt>:
   105ec:	add	ip, pc, #1048576	; 0x100000
   105f0:	add	ip, ip, #8, 20	; 0x8000
   105f4:	ldr	pc, [ip, #3480]!	; 0xd98

000105f8 <myhtml_token_doctype_check_xhtml_1_0@plt>:
   105f8:	add	ip, pc, #1048576	; 0x100000
   105fc:	add	ip, ip, #8, 20	; 0x8000
   10600:	ldr	pc, [ip, #3472]!	; 0xd90

00010604 <strlen@plt>:
   10604:	add	ip, pc, #1048576	; 0x100000
   10608:	add	ip, ip, #8, 20	; 0x8000
   1060c:	ldr	pc, [ip, #3464]!	; 0xd88

00010610 <myhtml_token_node_wait_for_done@plt>:
   10610:	add	ip, pc, #1048576	; 0x100000
   10614:	add	ip, ip, #8, 20	; 0x8000
   10618:	ldr	pc, [ip, #3456]!	; 0xd80

0001061c <mycore_string_append_lowercase@plt>:
   1061c:	add	ip, pc, #1048576	; 0x100000
   10620:	add	ip, ip, #8, 20	; 0x8000
   10624:	ldr	pc, [ip, #3448]!	; 0xd78

00010628 <myhtml_token_node_attr_copy_with_check@plt>:
   10628:	add	ip, pc, #1048576	; 0x100000
   1062c:	add	ip, ip, #8, 20	; 0x8000
   10630:	ldr	pc, [ip, #3440]!	; 0xd70

00010634 <myhtml_encoding_set@plt>:
   10634:	add	ip, pc, #1048576	; 0x100000
   10638:	add	ip, ip, #8, 20	; 0x8000
   1063c:	ldr	pc, [ip, #3432]!	; 0xd68

00010640 <mythread_queue_init@plt>:
   10640:	add	ip, pc, #1048576	; 0x100000
   10644:	add	ip, ip, #8, 20	; 0x8000
   10648:	ldr	pc, [ip, #3424]!	; 0xd60

0001064c <myhtml_tree_node_add_child@plt>:
   1064c:	add	ip, pc, #1048576	; 0x100000
   10650:	add	ip, ip, #8, 20	; 0x8000
   10654:	ldr	pc, [ip, #3416]!	; 0xd58

00010658 <mycore_utils_avl_tree_node_set_height@plt>:
   10658:	add	ip, pc, #1048576	; 0x100000
   1065c:	add	ip, ip, #8, 20	; 0x8000
   10660:	ldr	pc, [ip, #3408]!	; 0xd50

00010664 <myhtml_tree_clean@plt>:
   10664:	add	ip, pc, #1048576	; 0x100000
   10668:	add	ip, ip, #8, 20	; 0x8000
   1066c:	ldr	pc, [ip, #3400]!	; 0xd48

00010670 <myhtml_tree_generate_implied_end_tags@plt>:
   10670:	add	ip, pc, #1048576	; 0x100000
   10674:	add	ip, ip, #8, 20	; 0x8000
   10678:	ldr	pc, [ip, #3392]!	; 0xd40

0001067c <mchar_async_node_clean@plt>:
   1067c:	add	ip, pc, #1048576	; 0x100000
   10680:	add	ip, ip, #8, 20	; 0x8000
   10684:	ldr	pc, [ip, #3384]!	; 0xd38

00010688 <myhtml_tree_list_destroy@plt>:
   10688:	add	ip, pc, #1048576	; 0x100000
   1068c:	add	ip, ip, #8, 20	; 0x8000
   10690:	ldr	pc, [ip, #3376]!	; 0xd30

00010694 <myhtml_serialization_node_callback@plt>:
   10694:	add	ip, pc, #1048576	; 0x100000
   10698:	add	ip, ip, #8, 20	; 0x8000
   1069c:	ldr	pc, [ip, #3368]!	; 0xd28

000106a0 <myencoding_detect_by_trigram@plt>:
   106a0:	add	ip, pc, #1048576	; 0x100000
   106a4:	add	ip, ip, #8, 20	; 0x8000
   106a8:	ldr	pc, [ip, #3360]!	; 0xd20

000106ac <mchar_async_free@plt>:
   106ac:	add	ip, pc, #1048576	; 0x100000
   106b0:	add	ip, ip, #8, 20	; 0x8000
   106b4:	ldr	pc, [ip, #3352]!	; 0xd18

000106b8 <mchar_async_cache_clean@plt>:
   106b8:	add	ip, pc, #1048576	; 0x100000
   106bc:	add	ip, ip, #8, 20	; 0x8000
   106c0:	ldr	pc, [ip, #3344]!	; 0xd10

000106c4 <myhtml_tree_reset_insertion_mode_appropriately@plt>:
   106c4:	add	ip, pc, #1048576	; 0x100000
   106c8:	add	ip, ip, #8, 20	; 0x8000
   106cc:	ldr	pc, [ip, #3336]!	; 0xd08

000106d0 <mcsimple_malloc@plt>:
   106d0:	add	ip, pc, #1048576	; 0x100000
   106d4:	add	ip, ip, #8, 20	; 0x8000
   106d8:	ldr	pc, [ip, #3328]!	; 0xd00

000106dc <mctree_search_lowercase@plt>:
   106dc:	add	ip, pc, #1048576	; 0x100000
   106e0:	add	ip, ip, #8, 20	; 0x8000
   106e4:	ldr	pc, [ip, #3320]!	; 0xcf8

000106e8 <myhtml_data_process@plt>:
   106e8:	add	ip, pc, #1048576	; 0x100000
   106ec:	add	ip, ip, #8, 20	; 0x8000
   106f0:	ldr	pc, [ip, #3312]!	; 0xcf0

000106f4 <myhtml_token_attr_copy@plt>:
   106f4:	add	ip, pc, #1048576	; 0x100000
   106f8:	add	ip, ip, #8, 20	; 0x8000
   106fc:	ldr	pc, [ip, #3304]!	; 0xce8

00010700 <myhtml_tree_node_insert_by_node@plt>:
   10700:	add	ip, pc, #1048576	; 0x100000
   10704:	add	ip, ip, #8, 20	; 0x8000
   10708:	ldr	pc, [ip, #3296]!	; 0xce0

0001070c <mcobject_init@plt>:
   1070c:	add	ip, pc, #1048576	; 0x100000
   10710:	add	ip, ip, #8, 20	; 0x8000
   10714:	ldr	pc, [ip, #3288]!	; 0xcd8

00010718 <myhtml_token_destroy@plt>:
   10718:	add	ip, pc, #1048576	; 0x100000
   1071c:	add	ip, ip, #8, 20	; 0x8000
   10720:	ldr	pc, [ip, #3280]!	; 0xcd0

00010724 <myhtml_destroy_marker@plt>:
   10724:	add	ip, pc, #1048576	; 0x100000
   10728:	add	ip, ip, #8, 20	; 0x8000
   1072c:	ldr	pc, [ip, #3272]!	; 0xcc8

00010730 <pthread_attr_init@plt>:
   10730:	add	ip, pc, #1048576	; 0x100000
   10734:	add	ip, ip, #8, 20	; 0x8000
   10738:	ldr	pc, [ip, #3264]!	; 0xcc0

0001073c <myhtml_attribute_free@plt>:
   1073c:	add	ip, pc, #1048576	; 0x100000
   10740:	add	ip, ip, #8, 20	; 0x8000
   10744:	ldr	pc, [ip, #3256]!	; 0xcb8

00010748 <myhtml_serialization_node_buffer@plt>:
   10748:	add	ip, pc, #1048576	; 0x100000
   1074c:	add	ip, ip, #8, 20	; 0x8000
   10750:	ldr	pc, [ip, #3248]!	; 0xcb0

00010754 <myhtml_charef_find_by_pos@plt>:
   10754:	add	ip, pc, #1048576	; 0x100000
   10758:	add	ip, ip, #8, 20	; 0x8000
   1075c:	ldr	pc, [ip, #3240]!	; 0xca8

00010760 <myhtml_insertion_fix_for_null_char_drop_all@plt>:
   10760:	add	ip, pc, #1048576	; 0x100000
   10764:	add	ip, ip, #8, 20	; 0x8000
   10768:	ldr	pc, [ip, #3232]!	; 0xca0

0001076c <mythread_queue_list_create@plt>:
   1076c:	add	ip, pc, #1048576	; 0x100000
   10770:	add	ip, ip, #8, 20	; 0x8000
   10774:	ldr	pc, [ip, #3224]!	; 0xc98

00010778 <myhtml_token_attr_delete_all@plt>:
   10778:	add	ip, pc, #1048576	; 0x100000
   1077c:	add	ip, ip, #8, 20	; 0x8000
   10780:	ldr	pc, [ip, #3216]!	; 0xc90

00010784 <myhtml_token_node_attr_append_with_convert_encoding@plt>:
   10784:	add	ip, pc, #1048576	; 0x100000
   10788:	add	ip, ip, #8, 20	; 0x8000
   1078c:	ldr	pc, [ip, #3208]!	; 0xc88

00010790 <myhtml_tree_open_elements_find_by_tag_idx@plt>:
   10790:	add	ip, pc, #1048576	; 0x100000
   10794:	add	ip, ip, #8, 20	; 0x8000
   10798:	ldr	pc, [ip, #3200]!	; 0xc80

0001079c <myhtml_stream_buffer_entry_init@plt>:
   1079c:	add	ip, pc, #1048576	; 0x100000
   107a0:	add	ip, ip, #8, 20	; 0x8000
   107a4:	ldr	pc, [ip, #3192]!	; 0xc78

000107a8 <myhtml_tree_active_formatting_append_with_check@plt>:
   107a8:	add	ip, pc, #1048576	; 0x100000
   107ac:	add	ip, ip, #8, 20	; 0x8000
   107b0:	ldr	pc, [ip, #3184]!	; 0xc70

000107b4 <myhtml_tree_active_formatting_clean@plt>:
   107b4:	add	ip, pc, #1048576	; 0x100000
   107b8:	add	ip, ip, #8, 20	; 0x8000
   107bc:	ldr	pc, [ip, #3176]!	; 0xc68

000107c0 <myencoding_get_function_by_id@plt>:
   107c0:	add	ip, pc, #1048576	; 0x100000
   107c4:	add	ip, ip, #8, 20	; 0x8000
   107c8:	ldr	pc, [ip, #3168]!	; 0xc60

000107cc <myencoding_extracting_character_encoding_from_charset_with_found@plt>:
   107cc:	add	ip, pc, #1048576	; 0x100000
   107d0:	add	ip, ip, #8, 20	; 0x8000
   107d4:	ldr	pc, [ip, #3160]!	; 0xc58

000107d8 <myhtml_tree_active_formatting_remove_by_index@plt>:
   107d8:	add	ip, pc, #1048576	; 0x100000
   107dc:	add	ip, ip, #8, 20	; 0x8000
   107e0:	ldr	pc, [ip, #3152]!	; 0xc50

000107e4 <mcsync_lock@plt>:
   107e4:	add	ip, pc, #1048576	; 0x100000
   107e8:	add	ip, ip, #8, 20	; 0x8000
   107ec:	ldr	pc, [ip, #3144]!	; 0xc48

000107f0 <myhtml_tree_list_init@plt>:
   107f0:	add	ip, pc, #1048576	; 0x100000
   107f4:	add	ip, ip, #8, 20	; 0x8000
   107f8:	ldr	pc, [ip, #3136]!	; 0xc40

000107fc <mcsync_init@plt>:
   107fc:	add	ip, pc, #1048576	; 0x100000
   10800:	add	ip, ip, #8, 20	; 0x8000
   10804:	ldr	pc, [ip, #3128]!	; 0xc38

00010808 <myhtml_tree_active_formatting_is_marker@plt>:
   10808:	add	ip, pc, #1048576	; 0x100000
   1080c:	add	ip, ip, #8, 20	; 0x8000
   10810:	ldr	pc, [ip, #3120]!	; 0xc30

00010814 <mcobject_async_node_clean@plt>:
   10814:	add	ip, pc, #1048576	; 0x100000
   10818:	add	ip, ip, #8, 20	; 0x8000
   1081c:	ldr	pc, [ip, #3112]!	; 0xc28

00010820 <mchar_async_cache_destroy@plt>:
   10820:	add	ip, pc, #1048576	; 0x100000
   10824:	add	ip, ip, #8, 20	; 0x8000
   10828:	ldr	pc, [ip, #3104]!	; 0xc20

0001082c <myhtml_tree_adoption_agency_algorithm@plt>:
   1082c:	add	ip, pc, #1048576	; 0x100000
   10830:	add	ip, ip, #8, 20	; 0x8000
   10834:	ldr	pc, [ip, #3096]!	; 0xc18

00010838 <myhtml_tree_active_formatting_remove@plt>:
   10838:	add	ip, pc, #1048576	; 0x100000
   1083c:	add	ip, ip, #8, 20	; 0x8000
   10840:	ldr	pc, [ip, #3088]!	; 0xc10

00010844 <memset@plt>:
   10844:	add	ip, pc, #1048576	; 0x100000
   10848:	add	ip, ip, #8, 20	; 0x8000
   1084c:	ldr	pc, [ip, #3080]!	; 0xc08

00010850 <myhread_entry_create@plt>:
   10850:	add	ip, pc, #1048576	; 0x100000
   10854:	add	ip, ip, #8, 20	; 0x8000
   10858:	ldr	pc, [ip, #3072]!	; 0xc00

0001085c <mcsync_mutex_create@plt>:
   1085c:	add	ip, pc, #1048576	; 0x100000
   10860:	add	ip, ip, #8, 20	; 0x8000
   10864:	ldr	pc, [ip, #3064]!	; 0xbf8

00010868 <mycore_string_append@plt>:
   10868:	add	ip, pc, #1048576	; 0x100000
   1086c:	add	ip, ip, #8, 20	; 0x8000
   10870:	ldr	pc, [ip, #3056]!	; 0xbf0

00010874 <mcobject_async_chunk_malloc_without_lock@plt>:
   10874:	add	ip, pc, #1048576	; 0x100000
   10878:	add	ip, ip, #8, 20	; 0x8000
   1087c:	ldr	pc, [ip, #3048]!	; 0xbe8

00010880 <strncpy@plt>:
   10880:	add	ip, pc, #1048576	; 0x100000
   10884:	add	ip, ip, #8, 20	; 0x8000
   10888:	ldr	pc, [ip, #3040]!	; 0xbe0

0001088c <pthread_cancel@plt>:
   1088c:	add	ip, pc, #1048576	; 0x100000
   10890:	add	ip, ip, #8, 20	; 0x8000
   10894:	ldr	pc, [ip, #3032]!	; 0xbd8

00010898 <myhtml_token_attr_create@plt>:
   10898:	add	ip, pc, #1048576	; 0x100000
   1089c:	add	ip, ip, #8, 20	; 0x8000
   108a0:	ldr	pc, [ip, #3024]!	; 0xbd0

000108a4 <mchar_async_malloc@plt>:
   108a4:	add	ip, pc, #1048576	; 0x100000
   108a8:	add	ip, ip, #8, 20	; 0x8000
   108ac:	ldr	pc, [ip, #3016]!	; 0xbc8

000108b0 <myhtml_tag_static_search@plt>:
   108b0:	add	ip, pc, #1048576	; 0x100000
   108b4:	add	ip, ip, #8, 20	; 0x8000
   108b8:	ldr	pc, [ip, #3008]!	; 0xbc0

000108bc <myhtml_data_process_end@plt>:
   108bc:	add	ip, pc, #1048576	; 0x100000
   108c0:	add	ip, ip, #8, 20	; 0x8000
   108c4:	ldr	pc, [ip, #3000]!	; 0xbb8

000108c8 <myhtml_stream_buffer_add_entry@plt>:
   108c8:	add	ip, pc, #1048576	; 0x100000
   108cc:	add	ip, ip, #8, 20	; 0x8000
   108d0:	ldr	pc, [ip, #2992]!	; 0xbb0

000108d4 <myhtml_tree_temp_tag_name_destroy@plt>:
   108d4:	add	ip, pc, #1048576	; 0x100000
   108d8:	add	ip, ip, #8, 20	; 0x8000
   108dc:	ldr	pc, [ip, #2984]!	; 0xba8

000108e0 <myhtml_tree_open_elements_pop_until@plt>:
   108e0:	add	ip, pc, #1048576	; 0x100000
   108e4:	add	ip, ip, #8, 20	; 0x8000
   108e8:	ldr	pc, [ip, #2976]!	; 0xba0

000108ec <mctree_insert@plt>:
   108ec:	add	ip, pc, #1048576	; 0x100000
   108f0:	add	ip, ip, #8, 20	; 0x8000
   108f4:	ldr	pc, [ip, #2968]!	; 0xb98

000108f8 <mycore_string_realloc@plt>:
   108f8:	add	ip, pc, #1048576	; 0x100000
   108fc:	add	ip, ip, #8, 20	; 0x8000
   10900:	ldr	pc, [ip, #2960]!	; 0xb90

00010904 <myhtml_tree_node_insert@plt>:
   10904:	add	ip, pc, #1048576	; 0x100000
   10908:	add	ip, ip, #8, 20	; 0x8000
   1090c:	ldr	pc, [ip, #2952]!	; 0xb88

00010910 <mythread_queue_list_entry_wait_for_done@plt>:
   10910:	add	ip, pc, #1048576	; 0x100000
   10914:	add	ip, ip, #8, 20	; 0x8000
   10918:	ldr	pc, [ip, #2944]!	; 0xb80

0001091c <myhtml_tree_open_elements_append@plt>:
   1091c:	add	ip, pc, #1048576	; 0x100000
   10920:	add	ip, ip, #8, 20	; 0x8000
   10924:	ldr	pc, [ip, #2936]!	; 0xb78

00010928 <mcsimple_init_list_entries@plt>:
   10928:	add	ip, pc, #1048576	; 0x100000
   1092c:	add	ip, ip, #8, 20	; 0x8000
   10930:	ldr	pc, [ip, #2928]!	; 0xb70

00010934 <mythread_queue_list_entry_clean@plt>:
   10934:	add	ip, pc, #1048576	; 0x100000
   10938:	add	ip, ip, #8, 20	; 0x8000
   1093c:	ldr	pc, [ip, #2920]!	; 0xb68

00010940 <mythread_destroy@plt>:
   10940:	add	ip, pc, #1048576	; 0x100000
   10944:	add	ip, ip, #8, 20	; 0x8000
   10948:	ldr	pc, [ip, #2912]!	; 0xb60

0001094c <myhtml_tree_token_list_init@plt>:
   1094c:	add	ip, pc, #1048576	; 0x100000
   10950:	add	ip, ip, #8, 20	; 0x8000
   10954:	ldr	pc, [ip, #2904]!	; 0xb58

00010958 <myhtml_tree_list_append_after_index@plt>:
   10958:	add	ip, pc, #1048576	; 0x100000
   1095c:	add	ip, ip, #8, 20	; 0x8000
   10960:	ldr	pc, [ip, #2896]!	; 0xb50

00010964 <mchar_async_chunk_malloc@plt>:
   10964:	add	ip, pc, #1048576	; 0x100000
   10968:	add	ip, ip, #8, 20	; 0x8000
   1096c:	ldr	pc, [ip, #2888]!	; 0xb48

00010970 <myhtml_tree_template_insertion_pop@plt>:
   10970:	add	ip, pc, #1048576	; 0x100000
   10974:	add	ip, ip, #8, 20	; 0x8000
   10978:	ldr	pc, [ip, #2880]!	; 0xb40

0001097c <__mtree_search_to_start@plt>:
   1097c:	add	ip, pc, #1048576	; 0x100000
   10980:	add	ip, ip, #8, 20	; 0x8000
   10984:	ldr	pc, [ip, #2872]!	; 0xb38

00010988 <mythread_thread_destroy@plt>:
   10988:	add	ip, pc, #1048576	; 0x100000
   1098c:	add	ip, ip, #8, 20	; 0x8000
   10990:	ldr	pc, [ip, #2864]!	; 0xb30

00010994 <fclose@plt>:
   10994:	add	ip, pc, #1048576	; 0x100000
   10998:	add	ip, ip, #8, 20	; 0x8000
   1099c:	ldr	pc, [ip, #2856]!	; 0xb28

000109a0 <myhtml_token_node_create@plt>:
   109a0:	add	ip, pc, #1048576	; 0x100000
   109a4:	add	ip, ip, #8, 20	; 0x8000
   109a8:	ldr	pc, [ip, #2848]!	; 0xb20

000109ac <mycore_utils_avl_tree_node_balance@plt>:
   109ac:	add	ip, pc, #1048576	; 0x100000
   109b0:	add	ip, ip, #8, 20	; 0x8000
   109b4:	ldr	pc, [ip, #2840]!	; 0xb18

000109b8 <myhtml_tag_get_by_id@plt>:
   109b8:	add	ip, pc, #1048576	; 0x100000
   109bc:	add	ip, ip, #8, 20	; 0x8000
   109c0:	ldr	pc, [ip, #2832]!	; 0xb10

000109c4 <myhtml_tree_appropriate_place_inserting_in_tree@plt>:
   109c4:	add	ip, pc, #1048576	; 0x100000
   109c8:	add	ip, ip, #8, 20	; 0x8000
   109cc:	ldr	pc, [ip, #2824]!	; 0xb08

000109d0 <myhtml_parse_chunk@plt>:
   109d0:	add	ip, pc, #1048576	; 0x100000
   109d4:	add	ip, ip, #8, 20	; 0x8000
   109d8:	ldr	pc, [ip, #2816]!	; 0xb00

000109dc <mycore_utils_mhash_rebuld@plt>:
   109dc:	add	ip, pc, #1048576	; 0x100000
   109e0:	add	ip, ip, #8, 20	; 0x8000
   109e4:	ldr	pc, [ip, #2808]!	; 0xaf8

000109e8 <myhtml_charef_get_first_position@plt>:
   109e8:	add	ip, pc, #1048576	; 0x100000
   109ec:	add	ip, ip, #8, 20	; 0x8000
   109f0:	ldr	pc, [ip, #2800]!	; 0xaf0

000109f4 <mcobject_malloc@plt>:
   109f4:	add	ip, pc, #1048576	; 0x100000
   109f8:	add	ip, ip, #8, 20	; 0x8000
   109fc:	ldr	pc, [ip, #2792]!	; 0xae8

00010a00 <myencoding_detect_unicode_has_end@plt>:
   10a00:	add	ip, pc, #1048576	; 0x100000
   10a04:	add	ip, ip, #8, 20	; 0x8000
   10a08:	ldr	pc, [ip, #2784]!	; 0xae0

00010a0c <mcsync_spin_clean@plt>:
   10a0c:	add	ip, pc, #1048576	; 0x100000
   10a10:	add	ip, ip, #8, 20	; 0x8000
   10a14:	ldr	pc, [ip, #2776]!	; 0xad8

00010a18 <mythread_queue_create@plt>:
   10a18:	add	ip, pc, #1048576	; 0x100000
   10a1c:	add	ip, ip, #8, 20	; 0x8000
   10a20:	ldr	pc, [ip, #2768]!	; 0xad0

00010a24 <mcobject_async_node_add@plt>:
   10a24:	add	ip, pc, #1048576	; 0x100000
   10a28:	add	ip, ip, #8, 20	; 0x8000
   10a2c:	ldr	pc, [ip, #2760]!	; 0xac8

00010a30 <myhtml_tokenizer_doctype_system_identifier_dsq@plt>:
   10a30:	add	ip, pc, #1048576	; 0x100000
   10a34:	add	ip, ip, #8, 20	; 0x8000
   10a38:	ldr	pc, [ip, #2752]!	; 0xac0

00010a3c <myhtml_is_html_node@plt>:
   10a3c:	add	ip, pc, #1048576	; 0x100000
   10a40:	add	ip, ip, #8, 20	; 0x8000
   10a44:	ldr	pc, [ip, #2744]!	; 0xab8

00010a48 <myhtml_init_marker@plt>:
   10a48:	add	ip, pc, #1048576	; 0x100000
   10a4c:	add	ip, ip, #8, 20	; 0x8000
   10a50:	ldr	pc, [ip, #2736]!	; 0xab0

00010a54 <myhtml_tree_active_formatting_init@plt>:
   10a54:	add	ip, pc, #1048576	; 0x100000
   10a58:	add	ip, ip, #8, 20	; 0x8000
   10a5c:	ldr	pc, [ip, #2728]!	; 0xaa8

00010a60 <myhtml_parser_token_data_to_string@plt>:
   10a60:	add	ip, pc, #1048576	; 0x100000
   10a64:	add	ip, ip, #8, 20	; 0x8000
   10a68:	ldr	pc, [ip, #2720]!	; 0xaa0

00010a6c <mythread_stop@plt>:
   10a6c:	add	ip, pc, #1048576	; 0x100000
   10a70:	add	ip, ip, #8, 20	; 0x8000
   10a74:	ldr	pc, [ip, #2712]!	; 0xa98

00010a78 <mythread_option_set@plt>:
   10a78:	add	ip, pc, #1048576	; 0x100000
   10a7c:	add	ip, ip, #8, 20	; 0x8000
   10a80:	ldr	pc, [ip, #2704]!	; 0xa90

00010a84 <myhtml_tag_name_by_id@plt>:
   10a84:	add	ip, pc, #1048576	; 0x100000
   10a88:	add	ip, ip, #8, 20	; 0x8000
   10a8c:	ldr	pc, [ip, #2696]!	; 0xa88

00010a90 <mythread_mutex_create@plt>:
   10a90:	add	ip, pc, #1048576	; 0x100000
   10a94:	add	ip, ip, #8, 20	; 0x8000
   10a98:	ldr	pc, [ip, #2688]!	; 0xa80

00010a9c <myhtml_attribute_key@plt>:
   10a9c:	add	ip, pc, #1048576	; 0x100000
   10aa0:	add	ip, ip, #8, 20	; 0x8000
   10aa4:	ldr	pc, [ip, #2680]!	; 0xa78

00010aa8 <mchar_sync_chunk_find_by_size@plt>:
   10aa8:	add	ip, pc, #1048576	; 0x100000
   10aac:	add	ip, ip, #8, 20	; 0x8000
   10ab0:	ldr	pc, [ip, #2672]!	; 0xa70

00010ab4 <mcobject_async_destroy@plt>:
   10ab4:	add	ip, pc, #1048576	; 0x100000
   10ab8:	add	ip, ip, #8, 20	; 0x8000
   10abc:	ldr	pc, [ip, #2664]!	; 0xa68

00010ac0 <myhtml_token_attr_compare@plt>:
   10ac0:	add	ip, pc, #1048576	; 0x100000
   10ac4:	add	ip, ip, #8, 20	; 0x8000
   10ac8:	ldr	pc, [ip, #2656]!	; 0xa60

00010acc <_myhtml_get_nodes_by_attribute_value@plt>:
   10acc:	add	ip, pc, #1048576	; 0x100000
   10ad0:	add	ip, ip, #8, 20	; 0x8000
   10ad4:	ldr	pc, [ip, #2648]!	; 0xa58

00010ad8 <myhtml_tokenizer_set_state@plt>:
   10ad8:	add	ip, pc, #1048576	; 0x100000
   10adc:	add	ip, ip, #8, 20	; 0x8000
   10ae0:	ldr	pc, [ip, #2640]!	; 0xa50

00010ae4 <mcsync_mutex_init@plt>:
   10ae4:	add	ip, pc, #1048576	; 0x100000
   10ae8:	add	ip, ip, #8, 20	; 0x8000
   10aec:	ldr	pc, [ip, #2632]!	; 0xa48

00010af0 <myhtml_tag_init@plt>:
   10af0:	add	ip, pc, #1048576	; 0x100000
   10af4:	add	ip, ip, #8, 20	; 0x8000
   10af8:	ldr	pc, [ip, #2624]!	; 0xa40

00010afc <pthread_join@plt>:
   10afc:	add	ip, pc, #1048576	; 0x100000
   10b00:	add	ip, ip, #8, 20	; 0x8000
   10b04:	ldr	pc, [ip, #2616]!	; 0xa38

00010b08 <myhtml_tag_get_by_name@plt>:
   10b08:	add	ip, pc, #1048576	; 0x100000
   10b0c:	add	ip, ip, #8, 20	; 0x8000
   10b10:	ldr	pc, [ip, #2608]!	; 0xa30

00010b14 <myhtml_stream_buffer_current_entry@plt>:
   10b14:	add	ip, pc, #1048576	; 0x100000
   10b18:	add	ip, ip, #8, 20	; 0x8000
   10b1c:	ldr	pc, [ip, #2600]!	; 0xa28

00010b20 <myencoding_prescan_stream_to_determine_encoding_with_found@plt>:
   10b20:	add	ip, pc, #1048576	; 0x100000
   10b24:	add	ip, ip, #8, 20	; 0x8000
   10b28:	ldr	pc, [ip, #2592]!	; 0xa20

00010b2c <myhtml_tokenizer_chunk_with_stream_buffer@plt>:
   10b2c:	add	ip, pc, #1048576	; 0x100000
   10b30:	add	ip, ip, #8, 20	; 0x8000
   10b34:	ldr	pc, [ip, #2584]!	; 0xa18

00010b38 <mchar_async_chunk_malloc_without_lock@plt>:
   10b38:	add	ip, pc, #1048576	; 0x100000
   10b3c:	add	ip, ip, #8, 20	; 0x8000
   10b40:	ldr	pc, [ip, #2576]!	; 0xa10

00010b44 <myhtml_tree_open_elements_init@plt>:
   10b44:	add	ip, pc, #1048576	; 0x100000
   10b48:	add	ip, ip, #8, 20	; 0x8000
   10b4c:	ldr	pc, [ip, #2568]!	; 0xa08

00010b50 <mcobject_async_malloc@plt>:
   10b50:	add	ip, pc, #1048576	; 0x100000
   10b54:	add	ip, ip, #8, 20	; 0x8000
   10b58:	ldr	pc, [ip, #2560]!	; 0xa00

00010b5c <mchar_async_clean@plt>:
   10b5c:	add	ip, pc, #1048576	; 0x100000
   10b60:	add	ip, ip, #8, 20	; 0x8000
   10b64:	ldr	pc, [ip, #2552]!	; 0x9f8

00010b68 <myencoding_decode_shared_utf_16@plt>:
   10b68:	add	ip, pc, #1048576	; 0x100000
   10b6c:	add	ip, ip, #8, 20	; 0x8000
   10b70:	ldr	pc, [ip, #2544]!	; 0x9f0

00010b74 <myhtml_token_adjust_foreign_attributes@plt>:
   10b74:	add	ip, pc, #1048576	; 0x100000
   10b78:	add	ip, ip, #8, 20	; 0x8000
   10b7c:	ldr	pc, [ip, #2536]!	; 0x9e8

00010b80 <myhtml_rules_init@plt>:
   10b80:	add	ip, pc, #1048576	; 0x100000
   10b84:	add	ip, ip, #8, 20	; 0x8000
   10b88:	ldr	pc, [ip, #2528]!	; 0x9e0

00010b8c <myencoding_decode_gb18030@plt>:
   10b8c:	add	ip, pc, #1048576	; 0x100000
   10b90:	add	ip, ip, #8, 20	; 0x8000
   10b94:	ldr	pc, [ip, #2520]!	; 0x9d8

00010b98 <mythread_nanosleep_destroy@plt>:
   10b98:	add	ip, pc, #1048576	; 0x100000
   10b9c:	add	ip, ip, #8, 20	; 0x8000
   10ba0:	ldr	pc, [ip, #2512]!	; 0x9d0

00010ba4 <mycore_utils_avl_tree_node_rotate_left@plt>:
   10ba4:	add	ip, pc, #1048576	; 0x100000
   10ba8:	add	ip, ip, #8, 20	; 0x8000
   10bac:	ldr	pc, [ip, #2504]!	; 0x9c8

00010bb0 <myhtml_string_before_append_any_preprocessing@plt>:
   10bb0:	add	ip, pc, #1048576	; 0x100000
   10bb4:	add	ip, ip, #8, 20	; 0x8000
   10bb8:	ldr	pc, [ip, #2496]!	; 0x9c0

00010bbc <myhtml_tokenizer_end_state_doctype_public_identifier_double_quoted@plt>:
   10bbc:	add	ip, pc, #1048576	; 0x100000
   10bc0:	add	ip, ip, #8, 20	; 0x8000
   10bc4:	ldr	pc, [ip, #2488]!	; 0x9b8

00010bc8 <mchar_async_cache_init@plt>:
   10bc8:	add	ip, pc, #1048576	; 0x100000
   10bcc:	add	ip, ip, #8, 20	; 0x8000
   10bd0:	ldr	pc, [ip, #2480]!	; 0x9b0

00010bd4 <myhtml_check_tag_parser@plt>:
   10bd4:	add	ip, pc, #1048576	; 0x100000
   10bd8:	add	ip, ip, #8, 20	; 0x8000
   10bdc:	ldr	pc, [ip, #2472]!	; 0x9a8

00010be0 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@plt>:
   10be0:	add	ip, pc, #1048576	; 0x100000
   10be4:	add	ip, ip, #8, 20	; 0x8000
   10be8:	ldr	pc, [ip, #2464]!	; 0x9a0

00010bec <mchar_async_node_delete@plt>:
   10bec:	add	ip, pc, #1048576	; 0x100000
   10bf0:	add	ip, ip, #8, 20	; 0x8000
   10bf4:	ldr	pc, [ip, #2456]!	; 0x998

00010bf8 <mchar_async_crop_first_chars_without_cache@plt>:
   10bf8:	add	ip, pc, #1048576	; 0x100000
   10bfc:	add	ip, ip, #8, 20	; 0x8000
   10c00:	ldr	pc, [ip, #2448]!	; 0x990

00010c04 <_myhtml_tokenizer_state_andata_end_tag_name@plt>:
   10c04:	add	ip, pc, #1048576	; 0x100000
   10c08:	add	ip, ip, #8, 20	; 0x8000
   10c0c:	ldr	pc, [ip, #2440]!	; 0x988

00010c10 <mchar_async_cache_add@plt>:
   10c10:	add	ip, pc, #1048576	; 0x100000
   10c14:	add	ip, ip, #8, 20	; 0x8000
   10c18:	ldr	pc, [ip, #2432]!	; 0x980

00010c1c <myencoding_string_append_chunk_lowercase_ascii@plt>:
   10c1c:	add	ip, pc, #1048576	; 0x100000
   10c20:	add	ip, ip, #8, 20	; 0x8000
   10c24:	ldr	pc, [ip, #2424]!	; 0x978

00010c28 <mycore_malloc@plt>:
   10c28:	add	ip, pc, #1048576	; 0x100000
   10c2c:	add	ip, ip, #8, 20	; 0x8000
   10c30:	ldr	pc, [ip, #2416]!	; 0x970

00010c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>:
   10c34:	add	ip, pc, #1048576	; 0x100000
   10c38:	add	ip, ip, #8, 20	; 0x8000
   10c3c:	ldr	pc, [ip, #2408]!	; 0x968

00010c40 <mythread_queue_node_malloc_limit@plt>:
   10c40:	add	ip, pc, #1048576	; 0x100000
   10c44:	add	ip, ip, #8, 20	; 0x8000
   10c48:	ldr	pc, [ip, #2400]!	; 0x960

00010c4c <myhtml_tree_node_insert_by_token@plt>:
   10c4c:	add	ip, pc, #1048576	; 0x100000
   10c50:	add	ip, ip, #8, 20	; 0x8000
   10c54:	ldr	pc, [ip, #2392]!	; 0x958

00010c58 <mctree_insert_after@plt>:
   10c58:	add	ip, pc, #1048576	; 0x100000
   10c5c:	add	ip, ip, #8, 20	; 0x8000
   10c60:	ldr	pc, [ip, #2384]!	; 0x950

00010c64 <myencoding_by_name@plt>:
   10c64:	add	ip, pc, #1048576	; 0x100000
   10c68:	add	ip, ip, #8, 20	; 0x8000
   10c6c:	ldr	pc, [ip, #2376]!	; 0x948

00010c70 <myhtml_tree_template_insertion_init@plt>:
   10c70:	add	ip, pc, #1048576	; 0x100000
   10c74:	add	ip, ip, #8, 20	; 0x8000
   10c78:	ldr	pc, [ip, #2368]!	; 0x940

00010c7c <myhtml_tree_open_elements_destroy@plt>:
   10c7c:	add	ip, pc, #1048576	; 0x100000
   10c80:	add	ip, ip, #8, 20	; 0x8000
   10c84:	ldr	pc, [ip, #2360]!	; 0x938

00010c88 <myencoding_prescan_stream_to_determine_encoding_get_attr@plt>:
   10c88:	add	ip, pc, #1048576	; 0x100000
   10c8c:	add	ip, ip, #8, 20	; 0x8000
   10c90:	ldr	pc, [ip, #2352]!	; 0x930

00010c94 <myhtml_tree_node_free@plt>:
   10c94:	add	ip, pc, #1048576	; 0x100000
   10c98:	add	ip, ip, #8, 20	; 0x8000
   10c9c:	ldr	pc, [ip, #2344]!	; 0x928

00010ca0 <mythread_mutex_post@plt>:
   10ca0:	add	ip, pc, #1048576	; 0x100000
   10ca4:	add	ip, ip, #8, 20	; 0x8000
   10ca8:	ldr	pc, [ip, #2336]!	; 0x920

00010cac <mycore_string_clean@plt>:
   10cac:	add	ip, pc, #1048576	; 0x100000
   10cb0:	add	ip, ip, #8, 20	; 0x8000
   10cb4:	ldr	pc, [ip, #2328]!	; 0x918

00010cb8 <mythread_queue_list_entry_make_batch@plt>:
   10cb8:	add	ip, pc, #1048576	; 0x100000
   10cbc:	add	ip, ip, #8, 20	; 0x8000
   10cc0:	ldr	pc, [ip, #2320]!	; 0x910

00010cc4 <myhtml_tag_create@plt>:
   10cc4:	add	ip, pc, #1048576	; 0x100000
   10cc8:	add	ip, ip, #8, 20	; 0x8000
   10ccc:	ldr	pc, [ip, #2312]!	; 0x908

00010cd0 <myhtml_tree_close_cell@plt>:
   10cd0:	add	ip, pc, #1048576	; 0x100000
   10cd4:	add	ip, ip, #8, 20	; 0x8000
   10cd8:	ldr	pc, [ip, #2304]!	; 0x900

00010cdc <myhtml_tree_adjusted_current_node@plt>:
   10cdc:	add	ip, pc, #1048576	; 0x100000
   10ce0:	add	ip, ip, #8, 20	; 0x8000
   10ce4:	ldr	pc, [ip, #2296]!	; 0x8f8

00010ce8 <myencoding_detect_russian_has_end@plt>:
   10ce8:	add	ip, pc, #1048576	; 0x100000
   10cec:	add	ip, ip, #8, 20	; 0x8000
   10cf0:	ldr	pc, [ip, #2288]!	; 0x8f0

00010cf4 <myhtml_rules_check_for_first_newline@plt>:
   10cf4:	add	ip, pc, #1048576	; 0x100000
   10cf8:	add	ip, ip, #8, 20	; 0x8000
   10cfc:	ldr	pc, [ip, #2280]!	; 0x8e8

00010d00 <myhtml_stream_buffer_init@plt>:
   10d00:	add	ip, pc, #1048576	; 0x100000
   10d04:	add	ip, ip, #8, 20	; 0x8000
   10d08:	ldr	pc, [ip, #2272]!	; 0x8e0

00010d0c <mythread_queue_node_clean@plt>:
   10d0c:	add	ip, pc, #1048576	; 0x100000
   10d10:	add	ip, ip, #8, 20	; 0x8000
   10d14:	ldr	pc, [ip, #2264]!	; 0x8d8

00010d18 <myhtml_tree_node_insert_foreign_element@plt>:
   10d18:	add	ip, pc, #1048576	; 0x100000
   10d1c:	add	ip, ip, #8, 20	; 0x8000
   10d20:	ldr	pc, [ip, #2256]!	; 0x8d0

00010d24 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@plt>:
   10d24:	add	ip, pc, #1048576	; 0x100000
   10d28:	add	ip, ip, #8, 20	; 0x8000
   10d2c:	ldr	pc, [ip, #2248]!	; 0x8c8

00010d30 <mythread_mutex_wait@plt>:
   10d30:	add	ip, pc, #1048576	; 0x100000
   10d34:	add	ip, ip, #8, 20	; 0x8000
   10d38:	ldr	pc, [ip, #2240]!	; 0x8c0

00010d3c <mchar_async_destroy@plt>:
   10d3c:	add	ip, pc, #1048576	; 0x100000
   10d40:	add	ip, ip, #8, 20	; 0x8000
   10d44:	ldr	pc, [ip, #2232]!	; 0x8b8

00010d48 <mycore_utils_mhash_add_with_choice@plt>:
   10d48:	add	ip, pc, #1048576	; 0x100000
   10d4c:	add	ip, ip, #8, 20	; 0x8000
   10d50:	ldr	pc, [ip, #2224]!	; 0x8b0

00010d54 <myhtml_tree_node_delete@plt>:
   10d54:	add	ip, pc, #1048576	; 0x100000
   10d58:	add	ip, ip, #8, 20	; 0x8000
   10d5c:	ldr	pc, [ip, #2216]!	; 0x8a8

00010d60 <mycore_free@plt>:
   10d60:	add	ip, pc, #1048576	; 0x100000
   10d64:	add	ip, ip, #8, 20	; 0x8000
   10d68:	ldr	pc, [ip, #2208]!	; 0x8a0

00010d6c <mythread_queue_list_wait_for_done@plt>:
   10d6c:	add	ip, pc, #1048576	; 0x100000
   10d70:	add	ip, ip, #8, 20	; 0x8000
   10d74:	ldr	pc, [ip, #2200]!	; 0x898

00010d78 <mycore_string_whitespace_from_begin@plt>:
   10d78:	add	ip, pc, #1048576	; 0x100000
   10d7c:	add	ip, ip, #8, 20	; 0x8000
   10d80:	ldr	pc, [ip, #2192]!	; 0x890

00010d84 <myhtml_tree_node_remove@plt>:
   10d84:	add	ip, pc, #1048576	; 0x100000
   10d88:	add	ip, ip, #8, 20	; 0x8000
   10d8c:	ldr	pc, [ip, #2184]!	; 0x888

00010d90 <myhtml_collection_check_size@plt>:
   10d90:	add	ip, pc, #1048576	; 0x100000
   10d94:	add	ip, ip, #8, 20	; 0x8000
   10d98:	ldr	pc, [ip, #2176]!	; 0x880

00010d9c <myhtml_tokenizer_end_state_doctype_system_identifier_double_quoted@plt>:
   10d9c:	add	ip, pc, #1048576	; 0x100000
   10da0:	add	ip, ip, #8, 20	; 0x8000
   10da4:	ldr	pc, [ip, #2168]!	; 0x878

00010da8 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>:
   10da8:	add	ip, pc, #1048576	; 0x100000
   10dac:	add	ip, ip, #8, 20	; 0x8000
   10db0:	ldr	pc, [ip, #2160]!	; 0x870

00010db4 <myhtml_tree_open_elements_clean@plt>:
   10db4:	add	ip, pc, #1048576	; 0x100000
   10db8:	add	ip, ip, #8, 20	; 0x8000
   10dbc:	ldr	pc, [ip, #2152]!	; 0x868

00010dc0 <myhtml_tree_node_insert_doctype@plt>:
   10dc0:	add	ip, pc, #1048576	; 0x100000
   10dc4:	add	ip, ip, #8, 20	; 0x8000
   10dc8:	ldr	pc, [ip, #2144]!	; 0x860

00010dcc <myhtml_tree_template_insertion_destroy@plt>:
   10dcc:	add	ip, pc, #1048576	; 0x100000
   10dd0:	add	ip, ip, #8, 20	; 0x8000
   10dd4:	ldr	pc, [ip, #2136]!	; 0x858

00010dd8 <myhtml_tag_destroy@plt>:
   10dd8:	add	ip, pc, #1048576	; 0x100000
   10ddc:	add	ip, ip, #8, 20	; 0x8000
   10de0:	ldr	pc, [ip, #2128]!	; 0x850

00010de4 <mcsync_mutex_clean@plt>:
   10de4:	add	ip, pc, #1048576	; 0x100000
   10de8:	add	ip, ip, #8, 20	; 0x8000
   10dec:	ldr	pc, [ip, #2120]!	; 0x848

00010df0 <myhtml_tree_active_formatting_up_to_last_marker@plt>:
   10df0:	add	ip, pc, #1048576	; 0x100000
   10df4:	add	ip, ip, #8, 20	; 0x8000
   10df8:	ldr	pc, [ip, #2112]!	; 0x840

00010dfc <myhtml_serialization_tree_callback@plt>:
   10dfc:	add	ip, pc, #1048576	; 0x100000
   10e00:	add	ip, ip, #8, 20	; 0x8000
   10e04:	ldr	pc, [ip, #2104]!	; 0x838

00010e08 <myhtml_stream_buffer_create@plt>:
   10e08:	add	ip, pc, #1048576	; 0x100000
   10e0c:	add	ip, ip, #8, 20	; 0x8000
   10e10:	ldr	pc, [ip, #2096]!	; 0x830

00010e14 <myhtml_tree_appropriate_place_inserting@plt>:
   10e14:	add	ip, pc, #1048576	; 0x100000
   10e18:	add	ip, ip, #8, 20	; 0x8000
   10e1c:	ldr	pc, [ip, #2088]!	; 0x828

00010e20 <myencoding_codepoint_to_ascii_utf_8@plt>:
   10e20:	add	ip, pc, #1048576	; 0x100000
   10e24:	add	ip, ip, #8, 20	; 0x8000
   10e28:	ldr	pc, [ip, #2080]!	; 0x820

00010e2c <myhtml_token_attr_remove_by_name@plt>:
   10e2c:	add	ip, pc, #1048576	; 0x100000
   10e30:	add	ip, ip, #8, 20	; 0x8000
   10e34:	ldr	pc, [ip, #2072]!	; 0x818

00010e38 <mycore_utils_mhash_rebuild_add_entry@plt>:
   10e38:	add	ip, pc, #1048576	; 0x100000
   10e3c:	add	ip, ip, #8, 20	; 0x8000
   10e40:	ldr	pc, [ip, #2064]!	; 0x810

00010e44 <myhtml_token_attr_by_name@plt>:
   10e44:	add	ip, pc, #1048576	; 0x100000
   10e48:	add	ip, ip, #8, 20	; 0x8000
   10e4c:	ldr	pc, [ip, #2056]!	; 0x808

00010e50 <mcsync_unlock@plt>:
   10e50:	add	ip, pc, #1048576	; 0x100000
   10e54:	add	ip, ip, #8, 20	; 0x8000
   10e58:	ldr	pc, [ip, #2048]!	; 0x800

00010e5c <myhtml_tree_token_list_append@plt>:
   10e5c:	add	ip, pc, #1048576	; 0x100000
   10e60:	add	ip, ip, #8, 20	; 0x8000
   10e64:	ldr	pc, [ip, #2040]!	; 0x7f8

00010e68 <mycore_utils_avl_tree_node_create_root@plt>:
   10e68:	add	ip, pc, #1048576	; 0x100000
   10e6c:	add	ip, ip, #8, 20	; 0x8000
   10e70:	ldr	pc, [ip, #2032]!	; 0x7f0

00010e74 <mythread_queue_list_entry_make_stream@plt>:
   10e74:	add	ip, pc, #1048576	; 0x100000
   10e78:	add	ip, ip, #8, 20	; 0x8000
   10e7c:	ldr	pc, [ip, #2024]!	; 0x7e8

00010e80 <mycore_strncmp@plt>:
   10e80:	add	ip, pc, #1048576	; 0x100000
   10e84:	add	ip, ip, #8, 20	; 0x8000
   10e88:	ldr	pc, [ip, #2016]!	; 0x7e0

00010e8c <mycore_utils_mhash_create_entry@plt>:
   10e8c:	add	ip, pc, #1048576	; 0x100000
   10e90:	add	ip, ip, #8, 20	; 0x8000
   10e94:	ldr	pc, [ip, #2008]!	; 0x7d8

00010e98 <myhtml_tree_element_in_scope@plt>:
   10e98:	add	ip, pc, #1048576	; 0x100000
   10e9c:	add	ip, ip, #8, 20	; 0x8000
   10ea0:	ldr	pc, [ip, #2000]!	; 0x7d0

00010ea4 <myencoding_index_gb18030_ranges_code_point@plt>:
   10ea4:	add	ip, pc, #1048576	; 0x100000
   10ea8:	add	ip, ip, #8, 20	; 0x8000
   10eac:	ldr	pc, [ip, #1992]!	; 0x7c8

00010eb0 <__mtree_search_lowercase_to_start@plt>:
   10eb0:	add	ip, pc, #1048576	; 0x100000
   10eb4:	add	ip, ip, #8, 20	; 0x8000
   10eb8:	ldr	pc, [ip, #1984]!	; 0x7c0

00010ebc <fseek@plt>:
   10ebc:	add	ip, pc, #1048576	; 0x100000
   10ec0:	add	ip, ip, #8, 20	; 0x8000
   10ec4:	ldr	pc, [ip, #1976]!	; 0x7b8

00010ec8 <myhtml_node_clone@plt>:
   10ec8:	add	ip, pc, #1048576	; 0x100000
   10ecc:	add	ip, ip, #8, 20	; 0x8000
   10ed0:	ldr	pc, [ip, #1968]!	; 0x7b0

00010ed4 <myhtml_tree_generic_raw_text_element_parsing_algorithm@plt>:
   10ed4:	add	ip, pc, #1048576	; 0x100000
   10ed8:	add	ip, ip, #8, 20	; 0x8000
   10edc:	ldr	pc, [ip, #1960]!	; 0x7a8

00010ee0 <myencoding_detect_russian@plt>:
   10ee0:	add	ip, pc, #1048576	; 0x100000
   10ee4:	add	ip, ip, #8, 20	; 0x8000
   10ee8:	ldr	pc, [ip, #1952]!	; 0x7a0

00010eec <pthread_attr_setdetachstate@plt>:
   10eec:	add	ip, pc, #1048576	; 0x100000
   10ef0:	add	ip, ip, #8, 20	; 0x8000
   10ef4:	ldr	pc, [ip, #1944]!	; 0x798

00010ef8 <mchar_async_cache_delete@plt>:
   10ef8:	add	ip, pc, #1048576	; 0x100000
   10efc:	add	ip, ip, #8, 20	; 0x8000
   10f00:	ldr	pc, [ip, #1936]!	; 0x790

00010f04 <mcobject_clean@plt>:
   10f04:	add	ip, pc, #1048576	; 0x100000
   10f08:	add	ip, ip, #8, 20	; 0x8000
   10f0c:	ldr	pc, [ip, #1928]!	; 0x788

00010f10 <myhtml_token_node_clean@plt>:
   10f10:	add	ip, pc, #1048576	; 0x100000
   10f14:	add	ip, ip, #8, 20	; 0x8000
   10f18:	ldr	pc, [ip, #1920]!	; 0x780

00010f1c <myhtml_token_delete@plt>:
   10f1c:	add	ip, pc, #1048576	; 0x100000
   10f20:	add	ip, ip, #8, 20	; 0x8000
   10f24:	ldr	pc, [ip, #1912]!	; 0x778

00010f28 <strncmp@plt>:
   10f28:	add	ip, pc, #1048576	; 0x100000
   10f2c:	add	ip, ip, #8, 20	; 0x8000
   10f30:	ldr	pc, [ip, #1904]!	; 0x770

00010f34 <mcsimple_get_by_absolute_position@plt>:
   10f34:	add	ip, pc, #1048576	; 0x100000
   10f38:	add	ip, ip, #8, 20	; 0x8000
   10f3c:	ldr	pc, [ip, #1896]!	; 0x768

00010f40 <mcsync_mutex_try_lock@plt>:
   10f40:	add	ip, pc, #1048576	; 0x100000
   10f44:	add	ip, ip, #8, 20	; 0x8000
   10f48:	ldr	pc, [ip, #1888]!	; 0x760

00010f4c <mycore_utils_avl_tree_node_height@plt>:
   10f4c:	add	ip, pc, #1048576	; 0x100000
   10f50:	add	ip, ip, #8, 20	; 0x8000
   10f54:	ldr	pc, [ip, #1880]!	; 0x758

00010f58 <mycore_utils_avl_tree_node_clean@plt>:
   10f58:	add	ip, pc, #1048576	; 0x100000
   10f5c:	add	ip, ip, #8, 20	; 0x8000
   10f60:	ldr	pc, [ip, #1872]!	; 0x750

00010f64 <myhtml_tree_clear_stack_back_table_context@plt>:
   10f64:	add	ip, pc, #1048576	; 0x100000
   10f68:	add	ip, ip, #8, 20	; 0x8000
   10f6c:	ldr	pc, [ip, #1864]!	; 0x748

00010f70 <myhtml_tree_node_clone@plt>:
   10f70:	add	ip, pc, #1048576	; 0x100000
   10f74:	add	ip, ip, #8, 20	; 0x8000
   10f78:	ldr	pc, [ip, #1856]!	; 0x740

00010f7c <myhtml_tree_token_list_clean@plt>:
   10f7c:	add	ip, pc, #1048576	; 0x100000
   10f80:	add	ip, ip, #8, 20	; 0x8000
   10f84:	ldr	pc, [ip, #1848]!	; 0x738

00010f88 <myhtml_parser_stream@plt>:
   10f88:	add	ip, pc, #1048576	; 0x100000
   10f8c:	add	ip, ip, #8, 20	; 0x8000
   10f90:	ldr	pc, [ip, #1840]!	; 0x730

00010f94 <myhtml_token_create@plt>:
   10f94:	add	ip, pc, #1048576	; 0x100000
   10f98:	add	ip, ip, #8, 20	; 0x8000
   10f9c:	ldr	pc, [ip, #1832]!	; 0x728

00010fa0 <myhtml_parser_token_data_to_string_lowercase@plt>:
   10fa0:	add	ip, pc, #1048576	; 0x100000
   10fa4:	add	ip, ip, #8, 20	; 0x8000
   10fa8:	ldr	pc, [ip, #1824]!	; 0x720

00010fac <myencoding_detect_utf_8@plt>:
   10fac:	add	ip, pc, #1048576	; 0x100000
   10fb0:	add	ip, ip, #8, 20	; 0x8000
   10fb4:	ldr	pc, [ip, #1816]!	; 0x718

00010fb8 <mcsync_spin_unlock@plt>:
   10fb8:	add	ip, pc, #1048576	; 0x100000
   10fbc:	add	ip, ip, #8, 20	; 0x8000
   10fc0:	ldr	pc, [ip, #1808]!	; 0x710

00010fc4 <myhtml_string_append_lowercase_with_preprocessing@plt>:
   10fc4:	add	ip, pc, #1048576	; 0x100000
   10fc8:	add	ip, ip, #8, 20	; 0x8000
   10fcc:	ldr	pc, [ip, #1800]!	; 0x708

00010fd0 <mcsync_mutex_lock@plt>:
   10fd0:	add	ip, pc, #1048576	; 0x100000
   10fd4:	add	ip, ip, #8, 20	; 0x8000
   10fd8:	ldr	pc, [ip, #1792]!	; 0x700

00010fdc <myhtml_tree_open_elements_find@plt>:
   10fdc:	add	ip, pc, #1048576	; 0x100000
   10fe0:	add	ip, ip, #8, 20	; 0x8000
   10fe4:	ldr	pc, [ip, #1784]!	; 0x6f8

00010fe8 <mcobject_async_clean@plt>:
   10fe8:	add	ip, pc, #1048576	; 0x100000
   10fec:	add	ip, ip, #8, 20	; 0x8000
   10ff0:	ldr	pc, [ip, #1776]!	; 0x6f0

00010ff4 <mchar_async_mem_malloc@plt>:
   10ff4:	add	ip, pc, #1048576	; 0x100000
   10ff8:	add	ip, ip, #8, 20	; 0x8000
   10ffc:	ldr	pc, [ip, #1768]!	; 0x6e8

00011000 <myhtml_data_process_string_append_char@plt>:
   11000:	add	ip, pc, #1048576	; 0x100000
   11004:	add	ip, ip, #8, 20	; 0x8000
   11008:	ldr	pc, [ip, #1760]!	; 0x6e0

0001100c <myhtml_tag_clean@plt>:
   1100c:	add	ip, pc, #1048576	; 0x100000
   11010:	add	ip, ip, #8, 20	; 0x8000
   11014:	ldr	pc, [ip, #1752]!	; 0x6d8

00011018 <mythread_thread_attr_destroy@plt>:
   11018:	add	ip, pc, #1048576	; 0x100000
   1101c:	add	ip, ip, #8, 20	; 0x8000
   11020:	ldr	pc, [ip, #1744]!	; 0x6d0

00011024 <mycore_string_clean_all@plt>:
   11024:	add	ip, pc, #1048576	; 0x100000
   11028:	add	ip, ip, #8, 20	; 0x8000
   1102c:	ldr	pc, [ip, #1736]!	; 0x6c8

00011030 <myhtml_tree_node_clean@plt>:
   11030:	add	ip, pc, #1048576	; 0x100000
   11034:	add	ip, ip, #8, 20	; 0x8000
   11038:	ldr	pc, [ip, #1728]!	; 0x6c0

0001103c <mythread_init@plt>:
   1103c:	add	ip, pc, #1048576	; 0x100000
   11040:	add	ip, ip, #8, 20	; 0x8000
   11044:	ldr	pc, [ip, #1720]!	; 0x6b8

Disassembly of section .text:

00011048 <mycore_incoming_buffer_add@@Base-0x124>:
   11048:	ldr	r3, [pc, #20]	; 11064 <mythread_init@plt+0x28>
   1104c:	ldr	r2, [pc, #20]	; 11068 <mythread_init@plt+0x2c>
   11050:	add	r3, pc, r3
   11054:	ldr	r2, [r3, r2]
   11058:	cmp	r2, #0
   1105c:	bxeq	lr
   11060:	b	10574 <__gmon_start__@plt>
   11064:	andseq	r7, r0, r8, lsr #31
   11068:	andeq	r0, r0, r0, ror r8
   1106c:	ldr	r0, [pc, #44]	; 110a0 <mythread_init@plt+0x64>
   11070:	ldr	r3, [pc, #44]	; 110a4 <mythread_init@plt+0x68>
   11074:	add	r0, pc, r0
   11078:	add	r3, pc, r3
   1107c:	cmp	r3, r0
   11080:	ldr	r3, [pc, #32]	; 110a8 <mythread_init@plt+0x6c>
   11084:	add	r3, pc, r3
   11088:	bxeq	lr
   1108c:	ldr	r2, [pc, #24]	; 110ac <mythread_init@plt+0x70>
   11090:	ldr	r3, [r3, r2]
   11094:	cmp	r3, #0
   11098:	bxeq	lr
   1109c:	bx	r3
   110a0:	andseq	r8, r0, r0, asr r9
   110a4:	andseq	r8, r0, ip, asr #18
   110a8:	andseq	r7, r0, r4, ror pc
   110ac:	andeq	r0, r0, ip, lsr r7
   110b0:	ldr	r0, [pc, #56]	; 110f0 <mythread_init@plt+0xb4>
   110b4:	ldr	r3, [pc, #56]	; 110f4 <mythread_init@plt+0xb8>
   110b8:	add	r0, pc, r0
   110bc:	add	r3, pc, r3
   110c0:	sub	r1, r3, r0
   110c4:	ldr	r3, [pc, #44]	; 110f8 <mythread_init@plt+0xbc>
   110c8:	asr	r1, r1, #2
   110cc:	add	r3, pc, r3
   110d0:	add	r1, r1, r1, lsr #31
   110d4:	asrs	r1, r1, #1
   110d8:	bxeq	lr
   110dc:	ldr	r2, [pc, #24]	; 110fc <mythread_init@plt+0xc0>
   110e0:	ldr	r3, [r3, r2]
   110e4:	cmp	r3, #0
   110e8:	bxeq	lr
   110ec:	bx	r3
   110f0:	andseq	r8, r0, ip, lsl #18
   110f4:	andseq	r8, r0, r8, lsl #18
   110f8:	andseq	r7, r0, ip, lsr #30
   110fc:	andeq	r0, r0, r0, lsl #19
   11100:	ldr	r3, [pc, #76]	; 11154 <mythread_init@plt+0x118>
   11104:	ldr	r2, [pc, #76]	; 11158 <mythread_init@plt+0x11c>
   11108:	add	r3, pc, r3
   1110c:	add	r2, pc, r2
   11110:	ldrb	r3, [r3]
   11114:	cmp	r3, #0
   11118:	bxne	lr
   1111c:	ldr	r3, [pc, #56]	; 1115c <mythread_init@plt+0x120>
   11120:	push	{r4, lr}
   11124:	ldr	r3, [r2, r3]
   11128:	cmp	r3, #0
   1112c:	beq	1113c <mythread_init@plt+0x100>
   11130:	ldr	r3, [pc, #40]	; 11160 <mythread_init@plt+0x124>
   11134:	ldr	r0, [pc, r3]
   11138:	bl	fce0 <__cxa_finalize@plt>
   1113c:	bl	1106c <mythread_init@plt+0x30>
   11140:	ldr	r3, [pc, #28]	; 11164 <mythread_init@plt+0x128>
   11144:	mov	r2, #1
   11148:	add	r3, pc, r3
   1114c:	strb	r2, [r3]
   11150:	pop	{r4, pc}
   11154:			; <UNDEFINED> instruction: 0x001088bc
   11158:	andseq	r7, r0, ip, ror #29
   1115c:	andeq	r0, r0, r8, lsr #14
   11160:	andseq	r8, r0, ip, lsl #17
   11164:	andseq	r8, r0, ip, ror r8
   11168:	b	110b0 <mythread_init@plt+0x74>

0001116c <mycore_incoming_buffer_add@@Base>:
   1116c:	mov	ip, r1
   11170:	mov	r1, #0
   11174:	strd	r4, [sp, #-16]!
   11178:	mov	r4, r0
   1117c:	mov	r0, ip
   11180:	str	r6, [sp, #8]
   11184:	mov	r5, r3
   11188:	mov	r6, r2
   1118c:	str	lr, [sp, #12]
   11190:	bl	109f4 <mcobject_malloc@plt>
   11194:	mov	r3, #0
   11198:	mov	r1, r0
   1119c:	str	r6, [r0]
   111a0:	cmp	r4, r3
   111a4:	stmib	r0, {r3, r5}
   111a8:	streq	r4, [r0, #12]
   111ac:	beq	111c0 <mycore_incoming_buffer_add@@Base+0x54>
   111b0:	ldrd	r2, [r4, #8]
   111b4:	add	r3, r3, r2
   111b8:	str	r3, [r0, #12]
   111bc:	str	r0, [r4, #20]
   111c0:	mov	r3, #0
   111c4:	ldr	r6, [sp, #8]
   111c8:	mov	r0, r1
   111cc:	str	r4, [r1, #16]
   111d0:	ldrd	r4, [sp]
   111d4:	add	sp, sp, #12
   111d8:	str	r3, [r1, #20]
   111dc:	pop	{pc}		; (ldr pc, [sp], #4)

000111e0 <mycore_incoming_buffer_clean@@Base>:
   111e0:	mov	r3, #0
   111e4:	str	r3, [r0]
   111e8:	str	r3, [r0, #4]
   111ec:	str	r3, [r0, #8]
   111f0:	str	r3, [r0, #12]
   111f4:	str	r3, [r0, #16]
   111f8:	str	r3, [r0, #20]
   111fc:	bx	lr

00011200 <mycore_incoming_buffer_split@@Base>:
   11200:	mov	r3, r1
   11204:	mov	r1, #0
   11208:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1120c:	mov	r4, r0
   11210:	mov	r0, r3
   11214:	ldr	r5, [r4, #12]
   11218:	strd	r6, [sp, #8]
   1121c:	mov	r6, r2
   11220:	mov	r7, #0
   11224:	str	r8, [sp, #16]
   11228:	str	lr, [sp, #20]
   1122c:	bl	109f4 <mcobject_malloc@plt>
   11230:	ldr	lr, [r4]
   11234:	sub	r1, r6, r5
   11238:	ldr	r2, [r4, #8]
   1123c:	ldr	ip, [r4, #12]
   11240:	add	lr, lr, r1
   11244:	ldr	r8, [sp, #16]
   11248:	add	r5, r5, r2
   1124c:	str	lr, [r0]
   11250:	sub	r2, r5, r6
   11254:	add	ip, ip, r1
   11258:	str	r2, [r0, #4]
   1125c:	str	r2, [r0, #8]
   11260:	str	ip, [r0, #12]
   11264:	str	r4, [r0, #16]
   11268:	str	r7, [r0, #20]
   1126c:	str	r1, [r4, #4]
   11270:	str	r1, [r4, #8]
   11274:	str	r0, [r4, #20]
   11278:	ldrd	r4, [sp]
   1127c:	ldrd	r6, [sp, #8]
   11280:	add	sp, sp, #20
   11284:	pop	{pc}		; (ldr pc, [sp], #4)

00011288 <mycore_incoming_buffer_find_by_position@@Base>:
   11288:	ldr	r3, [r0, #12]
   1128c:	cmp	r3, r1
   11290:	bcc	112c0 <mycore_incoming_buffer_find_by_position@@Base+0x38>
   11294:	bls	112bc <mycore_incoming_buffer_find_by_position@@Base+0x34>
   11298:	ldr	r0, [r0, #16]
   1129c:	cmp	r0, #0
   112a0:	beq	11310 <mycore_incoming_buffer_find_by_position@@Base+0x88>
   112a4:	ldr	r3, [r0, #12]
   112a8:	cmp	r3, r1
   112ac:	bls	112bc <mycore_incoming_buffer_find_by_position@@Base+0x34>
   112b0:	ldr	r0, [r0, #16]
   112b4:	cmp	r0, #0
   112b8:	bne	112a4 <mycore_incoming_buffer_find_by_position@@Base+0x1c>
   112bc:	bx	lr
   112c0:	ldr	r2, [r0, #8]
   112c4:	add	r3, r3, r2
   112c8:	cmp	r1, r3
   112cc:	bls	112bc <mycore_incoming_buffer_find_by_position@@Base+0x34>
   112d0:	ldr	r0, [r0, #20]
   112d4:	cmp	r0, #0
   112d8:	beq	1130c <mycore_incoming_buffer_find_by_position@@Base+0x84>
   112dc:	ldrd	r2, [r0, #8]
   112e0:	add	r3, r3, r2
   112e4:	cmp	r3, r1
   112e8:	bcs	11308 <mycore_incoming_buffer_find_by_position@@Base+0x80>
   112ec:	ldr	r0, [r0, #20]
   112f0:	cmp	r0, #0
   112f4:	beq	112bc <mycore_incoming_buffer_find_by_position@@Base+0x34>
   112f8:	ldrd	r2, [r0, #8]
   112fc:	add	r3, r3, r2
   11300:	cmp	r3, r1
   11304:	bcc	112ec <mycore_incoming_buffer_find_by_position@@Base+0x64>
   11308:	bx	lr
   1130c:	bx	lr
   11310:	bx	lr

00011314 <mycore_incoming_buffer_data@@Base>:
   11314:	ldr	r0, [r0]
   11318:	bx	lr

0001131c <mycore_incoming_buffer_length@@Base>:
   1131c:	ldr	r0, [r0, #4]
   11320:	bx	lr

00011324 <mycore_incoming_buffer_size@@Base>:
   11324:	ldr	r0, [r0, #8]
   11328:	bx	lr

0001132c <mycore_incoming_buffer_offset@@Base>:
   1132c:	ldr	r0, [r0, #12]
   11330:	bx	lr

00011334 <mycore_incoming_buffer_relative_begin@@Base>:
   11334:	ldr	r0, [r0, #12]
   11338:	sub	r0, r1, r0
   1133c:	bx	lr

00011340 <mycore_incoming_buffer_available_length@@Base>:
   11340:	ldr	r3, [r0, #8]
   11344:	add	r0, r1, r2
   11348:	cmp	r0, r3
   1134c:	subhi	r2, r3, r1
   11350:	mov	r0, r2
   11354:	bx	lr

00011358 <mycore_incoming_buffer_next@@Base>:
   11358:	ldr	r0, [r0, #20]
   1135c:	bx	lr

00011360 <mycore_incoming_buffer_prev@@Base>:
   11360:	ldr	r0, [r0, #16]
   11364:	bx	lr

00011368 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base>:
   11368:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1136c:	ldr	r3, [r1]
   11370:	str	lr, [sp, #20]
   11374:	ldr	lr, [r0]
   11378:	strd	r6, [sp, #8]
   1137c:	mov	r6, r0
   11380:	str	r8, [sp, #16]
   11384:	ldr	r2, [lr, #8]
   11388:	cmp	r3, r2
   1138c:	bcc	113a0 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0x38>
   11390:	mov	r2, #0
   11394:	ldr	lr, [lr, #20]
   11398:	mov	r3, r2
   1139c:	str	r2, [r1]
   113a0:	ldr	r4, [pc, #128]	; 11428 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0xc0>
   113a4:	mov	r0, #0
   113a8:	mov	ip, r0
   113ac:	mov	r8, r0
   113b0:	ldr	r7, [lr]
   113b4:	add	r4, pc, r4
   113b8:	ldrb	r2, [r7, r3]
   113bc:	add	r3, r3, #1
   113c0:	ldrb	r5, [r4, r2]
   113c4:	add	r2, r4, r2
   113c8:	cmp	r5, #255	; 0xff
   113cc:	cmpne	ip, #6
   113d0:	add	ip, ip, #1
   113d4:	beq	11410 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0xa8>
   113d8:	str	r3, [r1]
   113dc:	ldr	r5, [lr, #8]
   113e0:	ldrb	r2, [r2, #256]	; 0x100
   113e4:	cmp	r3, r5
   113e8:	orr	r0, r2, r0, lsl #4
   113ec:	bcc	113b8 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0x50>
   113f0:	ldr	r2, [lr, #20]
   113f4:	mov	r3, #0
   113f8:	cmp	r2, r3
   113fc:	beq	11410 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0xa8>
   11400:	ldr	r7, [lr]
   11404:	mov	lr, r2
   11408:	str	r8, [r1]
   1140c:	b	113b8 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0x50>
   11410:	ldrd	r4, [sp]
   11414:	ldr	r8, [sp, #16]
   11418:	str	lr, [r6]
   1141c:	ldrd	r6, [sp, #8]
   11420:	add	sp, sp, #20
   11424:	pop	{pc}		; (ldr pc, [sp], #4)
   11428:	andeq	pc, r1, r4, lsr #22

0001142c <mycore_incoming_buffer_escaped_case_cmp@@Base>:
   1142c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   11430:	mov	r5, r3
   11434:	ldr	r3, [r0]
   11438:	ldr	ip, [r5]
   1143c:	strd	r6, [sp, #8]
   11440:	str	lr, [sp, #32]
   11444:	ldr	lr, [r3, #8]
   11448:	strd	r8, [sp, #16]
   1144c:	strd	sl, [sp, #24]
   11450:	sub	sp, sp, #12
   11454:	str	r3, [sp, #4]
   11458:	cmp	ip, lr
   1145c:	bcc	11480 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x54>
   11460:	ldr	r3, [r3, #20]
   11464:	cmp	r3, #0
   11468:	moveq	r0, r2
   1146c:	beq	11570 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x144>
   11470:	mov	lr, #0
   11474:	str	r3, [sp, #4]
   11478:	mov	ip, lr
   1147c:	str	lr, [r5]
   11480:	cmp	r2, #0
   11484:	mov	sl, r1
   11488:	ldr	r1, [r3]
   1148c:	mov	r7, r2
   11490:	mov	r8, r0
   11494:	beq	115a0 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x174>
   11498:	ldr	r6, [pc, #264]	; 115a8 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x17c>
   1149c:	mov	r4, #0
   114a0:	add	r9, sp, #4
   114a4:	ldr	fp, [pc, #256]	; 115ac <mycore_incoming_buffer_escaped_case_cmp@@Base+0x180>
   114a8:	add	r6, pc, r6
   114ac:	add	fp, pc, fp
   114b0:	b	11510 <mycore_incoming_buffer_escaped_case_cmp@@Base+0xe4>
   114b4:	ldrb	lr, [sl, r4]
   114b8:	add	ip, ip, #1
   114bc:	ldrb	r2, [r0, #512]	; 0x200
   114c0:	add	lr, r6, lr
   114c4:	ldrb	r0, [lr, #512]	; 0x200
   114c8:	cmp	r2, r0
   114cc:	bne	11568 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x13c>
   114d0:	str	ip, [r5]
   114d4:	ldr	r2, [r3, #8]
   114d8:	mov	r0, #0
   114dc:	add	r4, r4, #1
   114e0:	cmp	r2, ip
   114e4:	bhi	11508 <mycore_incoming_buffer_escaped_case_cmp@@Base+0xdc>
   114e8:	ldr	r2, [r3, #20]
   114ec:	mov	ip, r0
   114f0:	cmp	r2, r0
   114f4:	beq	11568 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x13c>
   114f8:	mov	r3, r2
   114fc:	ldr	r1, [r2]
   11500:	str	r0, [r5]
   11504:	str	r2, [sp, #4]
   11508:	cmp	r7, r4
   1150c:	beq	1158c <mycore_incoming_buffer_escaped_case_cmp@@Base+0x160>
   11510:	ldrb	r2, [r1, ip]
   11514:	cmp	r2, #92	; 0x5c
   11518:	add	r0, r6, r2
   1151c:	bne	114b4 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x88>
   11520:	add	ip, ip, #1
   11524:	mov	r1, r5
   11528:	mov	r0, r9
   1152c:	str	ip, [r5]
   11530:	bl	10190 <mycore_incoming_buffer_convert_one_escaped_to_code_point@plt>
   11534:	cmp	r0, #255	; 0xff
   11538:	add	r3, fp, r0
   1153c:	bhi	11594 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x168>
   11540:	ldrb	r2, [sl, r4]
   11544:	ldrb	r1, [r3, #512]	; 0x200
   11548:	ldr	r3, [sp, #4]
   1154c:	add	r2, fp, r2
   11550:	ldrb	r2, [r2, #512]	; 0x200
   11554:	cmp	r1, r2
   11558:	bne	11568 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x13c>
   1155c:	ldr	r1, [r3]
   11560:	ldr	ip, [r5]
   11564:	b	114d4 <mycore_incoming_buffer_escaped_case_cmp@@Base+0xa8>
   11568:	sub	r0, r7, r4
   1156c:	str	r3, [r8]
   11570:	add	sp, sp, #12
   11574:	ldrd	r4, [sp]
   11578:	ldrd	r6, [sp, #8]
   1157c:	ldrd	r8, [sp, #16]
   11580:	ldrd	sl, [sp, #24]
   11584:	add	sp, sp, #32
   11588:	pop	{pc}		; (ldr pc, [sp], #4)
   1158c:	mov	r0, #0
   11590:	b	1156c <mycore_incoming_buffer_escaped_case_cmp@@Base+0x140>
   11594:	sub	r0, r7, r4
   11598:	ldr	r3, [sp, #4]
   1159c:	b	1156c <mycore_incoming_buffer_escaped_case_cmp@@Base+0x140>
   115a0:	mov	r0, r2
   115a4:	b	1156c <mycore_incoming_buffer_escaped_case_cmp@@Base+0x140>
   115a8:	andeq	pc, r1, r0, lsr sl	; <UNPREDICTABLE>
   115ac:	andeq	pc, r1, ip, lsr #20

000115b0 <mycore_string_clean@@Base>:
   115b0:	mov	r3, #0
   115b4:	str	r3, [r0, #8]
   115b8:	bx	lr

000115bc <mycore_string_init@@Base>:
   115bc:	strd	r4, [sp, #-24]!	; 0xffffffe8
   115c0:	mov	r4, r2
   115c4:	mov	r5, r3
   115c8:	mov	r2, r3
   115cc:	strd	r6, [sp, #8]
   115d0:	mov	r6, r1
   115d4:	mov	r7, r0
   115d8:	str	r8, [sp, #16]
   115dc:	str	lr, [sp, #20]
   115e0:	bl	108a4 <mchar_async_malloc@plt>
   115e4:	stm	r4, {r0, r5}
   115e8:	mov	r0, r4
   115ec:	str	r7, [r4, #12]
   115f0:	str	r6, [r4, #16]
   115f4:	bl	10cac <mycore_string_clean@plt>
   115f8:	ldr	r0, [r4]
   115fc:	ldrd	r4, [sp]
   11600:	ldrd	r6, [sp, #8]
   11604:	ldr	r8, [sp, #16]
   11608:	add	sp, sp, #20
   1160c:	pop	{pc}		; (ldr pc, [sp], #4)

00011610 <mycore_string_clean_all@@Base>:
   11610:	mov	r3, #0
   11614:	str	r3, [r0]
   11618:	str	r3, [r0, #4]
   1161c:	str	r3, [r0, #8]
   11620:	str	r3, [r0, #12]
   11624:	str	r3, [r0, #16]
   11628:	bx	lr

0001162c <mycore_string_destroy@@Base>:
   1162c:	strd	r4, [sp, #-16]!
   11630:	subs	r4, r0, #0
   11634:	str	r6, [sp, #8]
   11638:	str	lr, [sp, #12]
   1163c:	beq	1166c <mycore_string_destroy@@Base+0x40>
   11640:	ldr	r2, [r4]
   11644:	mov	r5, r1
   11648:	cmp	r2, #0
   1164c:	beq	11664 <mycore_string_destroy@@Base+0x38>
   11650:	ldr	r0, [r4, #12]
   11654:	cmp	r0, #0
   11658:	beq	11664 <mycore_string_destroy@@Base+0x38>
   1165c:	ldr	r1, [r4, #16]
   11660:	bl	106ac <mchar_async_free@plt>
   11664:	cmp	r5, #0
   11668:	bne	11680 <mycore_string_destroy@@Base+0x54>
   1166c:	mov	r0, r4
   11670:	ldrd	r4, [sp]
   11674:	ldr	r6, [sp, #8]
   11678:	add	sp, sp, #12
   1167c:	pop	{pc}		; (ldr pc, [sp], #4)
   11680:	mov	r0, r4
   11684:	mov	r4, #0
   11688:	bl	10d60 <mycore_free@plt>
   1168c:	b	1166c <mycore_string_destroy@@Base+0x40>

00011690 <mycore_string_raw_clean@@Base>:
   11690:	mov	r3, #0
   11694:	str	r3, [r0, #8]
   11698:	bx	lr

0001169c <mycore_string_raw_clean_all@@Base>:
   1169c:	mov	r3, #0
   116a0:	str	r3, [r0]
   116a4:	str	r3, [r0, #4]
   116a8:	str	r3, [r0, #8]
   116ac:	bx	lr

000116b0 <mycore_string_raw_destroy@@Base>:
   116b0:	strd	r4, [sp, #-16]!
   116b4:	subs	r4, r0, #0
   116b8:	str	r6, [sp, #8]
   116bc:	str	lr, [sp, #12]
   116c0:	beq	116e8 <mycore_string_raw_destroy@@Base+0x38>
   116c4:	ldr	r0, [r4]
   116c8:	mov	r5, r1
   116cc:	cmp	r0, #0
   116d0:	beq	116e0 <mycore_string_raw_destroy@@Base+0x30>
   116d4:	bl	10d60 <mycore_free@plt>
   116d8:	mov	r3, #0
   116dc:	str	r3, [r4]
   116e0:	cmp	r5, #0
   116e4:	bne	116fc <mycore_string_raw_destroy@@Base+0x4c>
   116e8:	mov	r0, r4
   116ec:	ldrd	r4, [sp]
   116f0:	ldr	r6, [sp, #8]
   116f4:	add	sp, sp, #12
   116f8:	pop	{pc}		; (ldr pc, [sp], #4)
   116fc:	mov	r0, r4
   11700:	mov	r4, #0
   11704:	bl	10d60 <mycore_free@plt>
   11708:	b	116e8 <mycore_string_raw_destroy@@Base+0x38>

0001170c <mycore_string_realloc@@Base>:
   1170c:	strd	r4, [sp, #-12]!
   11710:	subs	r4, r0, #0
   11714:	moveq	r0, r4
   11718:	str	lr, [sp, #8]
   1171c:	sub	sp, sp, #12
   11720:	beq	11744 <mycore_string_realloc@@Base+0x38>
   11724:	mov	r5, r1
   11728:	str	r1, [sp]
   1172c:	ldr	r2, [r4]
   11730:	ldr	r3, [r4, #8]
   11734:	ldrd	r0, [r4, #12]
   11738:	bl	ff5c <mchar_async_realloc@plt>
   1173c:	cmp	r0, #0
   11740:	stmne	r4, {r0, r5}
   11744:	add	sp, sp, #12
   11748:	ldrd	r4, [sp]
   1174c:	add	sp, sp, #8
   11750:	pop	{pc}		; (ldr pc, [sp], #4)

00011754 <mycore_string_data_alloc@@Base>:
   11754:	b	108a4 <mchar_async_malloc@plt>

00011758 <mycore_string_data_realloc@@Base>:
   11758:	b	ff5c <mchar_async_realloc@plt>

0001175c <mycore_string_data_free@@Base>:
   1175c:	b	106ac <mchar_async_free@plt>

00011760 <mycore_string_data@@Base>:
   11760:	cmp	r0, #0
   11764:	ldrne	r0, [r0]
   11768:	bx	lr

0001176c <mycore_string_length@@Base>:
   1176c:	cmp	r0, #0
   11770:	ldrne	r0, [r0, #8]
   11774:	bx	lr

00011778 <mycore_string_size@@Base>:
   11778:	cmp	r0, #0
   1177c:	ldrne	r0, [r0, #4]
   11780:	bx	lr

00011784 <mycore_string_data_set@@Base>:
   11784:	subs	r3, r0, #0
   11788:	movne	r0, r1
   1178c:	moveq	r0, r3
   11790:	strne	r1, [r3]
   11794:	bx	lr

00011798 <mycore_string_size_set@@Base>:
   11798:	subs	r3, r0, #0
   1179c:	movne	r0, r1
   117a0:	moveq	r0, r3
   117a4:	strne	r1, [r3, #4]
   117a8:	bx	lr

000117ac <mycore_string_length_set@@Base>:
   117ac:	subs	r3, r0, #0
   117b0:	movne	r0, r1
   117b4:	moveq	r0, r3
   117b8:	strne	r1, [r3, #8]
   117bc:	bx	lr

000117c0 <mycore_string_append@@Base>:
   117c0:	add	r3, r2, #1
   117c4:	strd	r4, [sp, #-16]!
   117c8:	mov	r5, r2
   117cc:	ldmib	r0, {r2, ip}
   117d0:	mov	r4, r0
   117d4:	str	r6, [sp, #8]
   117d8:	mov	r6, r1
   117dc:	str	lr, [sp, #12]
   117e0:	add	r1, r3, ip
   117e4:	cmp	r1, r2
   117e8:	bcs	11828 <mycore_string_append@@Base+0x68>
   117ec:	ldr	r0, [r4]
   117f0:	mov	r1, r6
   117f4:	mov	r2, r5
   117f8:	add	r0, r0, ip
   117fc:	bl	fefc <memcpy@plt>
   11800:	ldr	r3, [r4]
   11804:	mov	r2, #0
   11808:	ldr	r1, [r4, #8]
   1180c:	add	r5, r5, r1
   11810:	str	r5, [r4, #8]
   11814:	strb	r2, [r3, r5]
   11818:	ldrd	r4, [sp]
   1181c:	ldr	r6, [sp, #8]
   11820:	add	sp, sp, #12
   11824:	pop	{pc}		; (ldr pc, [sp], #4)
   11828:	bl	108f8 <mycore_string_realloc@plt>
   1182c:	ldr	ip, [r4, #8]
   11830:	b	117ec <mycore_string_append@@Base+0x2c>

00011834 <mycore_string_append_one@@Base>:
   11834:	strd	r4, [sp, #-16]!
   11838:	mov	r5, r1
   1183c:	mov	r4, r0
   11840:	ldr	r3, [r0, #4]
   11844:	ldr	r1, [r0, #8]
   11848:	str	r6, [sp, #8]
   1184c:	str	lr, [sp, #12]
   11850:	add	r2, r1, #2
   11854:	cmp	r2, r3
   11858:	bcs	1188c <mycore_string_append_one@@Base+0x58>
   1185c:	ldr	r3, [r4]
   11860:	mov	r0, #0
   11864:	strb	r5, [r3, r1]
   11868:	ldr	r2, [r4]
   1186c:	ldr	r3, [r4, #8]
   11870:	add	r3, r3, #1
   11874:	str	r3, [r4, #8]
   11878:	strb	r0, [r2, r3]
   1187c:	ldrd	r4, [sp]
   11880:	ldr	r6, [sp, #8]
   11884:	add	sp, sp, #12
   11888:	pop	{pc}		; (ldr pc, [sp], #4)
   1188c:	add	r1, r1, #3
   11890:	bl	108f8 <mycore_string_realloc@plt>
   11894:	ldr	r1, [r4, #8]
   11898:	b	1185c <mycore_string_append_one@@Base+0x28>

0001189c <mycore_string_append_lowercase@@Base>:
   1189c:	ldr	ip, [r0, #8]
   118a0:	add	r3, r2, #1
   118a4:	strd	r4, [sp, #-16]!
   118a8:	mov	r4, r1
   118ac:	mov	r5, r0
   118b0:	str	r6, [sp, #8]
   118b4:	mov	r6, r2
   118b8:	ldr	r2, [r0, #4]
   118bc:	str	lr, [sp, #12]
   118c0:	add	r1, r3, ip
   118c4:	cmp	r1, r2
   118c8:	bcs	11930 <mycore_string_append_lowercase@@Base+0x94>
   118cc:	ldr	r2, [r5]
   118d0:	cmp	r6, #0
   118d4:	add	r2, r2, ip
   118d8:	beq	1190c <mycore_string_append_lowercase@@Base+0x70>
   118dc:	ldr	lr, [pc, #88]	; 1193c <mycore_string_append_lowercase@@Base+0xa0>
   118e0:	add	ip, r4, r6
   118e4:	sub	r1, r4, #1
   118e8:	sub	ip, ip, #1
   118ec:	sub	r3, r2, #1
   118f0:	add	lr, pc, lr
   118f4:	ldrb	r0, [r1, #1]!
   118f8:	ldrb	r0, [lr, r0]
   118fc:	cmp	ip, r1
   11900:	strb	r0, [r3, #1]!
   11904:	bne	118f4 <mycore_string_append_lowercase@@Base+0x58>
   11908:	add	r2, r2, r6
   1190c:	mov	r3, #0
   11910:	strb	r3, [r2]
   11914:	ldr	r2, [r5, #8]
   11918:	add	r2, r2, r6
   1191c:	ldr	r6, [sp, #8]
   11920:	str	r2, [r5, #8]
   11924:	ldrd	r4, [sp]
   11928:	add	sp, sp, #12
   1192c:	pop	{pc}		; (ldr pc, [sp], #4)
   11930:	bl	108f8 <mycore_string_realloc@plt>
   11934:	ldr	ip, [r5, #8]
   11938:	b	118cc <mycore_string_append_lowercase@@Base+0x30>
   1193c:	andeq	pc, r1, r8, ror #17

00011940 <mycore_string_copy@@Base>:
   11940:	mov	r3, r1
   11944:	ldr	r1, [r1]
   11948:	ldr	r2, [r3, #8]
   1194c:	b	10868 <mycore_string_append@plt>

00011950 <mycore_string_raw_copy@@Base>:
   11950:	mov	ip, #0
   11954:	add	r3, r0, r2
   11958:	cmp	r2, ip
   1195c:	strb	ip, [r0, r2]
   11960:	beq	11978 <mycore_string_raw_copy@@Base+0x28>
   11964:	add	r2, r1, r2
   11968:	ldrb	r0, [r2, #-1]!
   1196c:	cmp	r2, r1
   11970:	strb	r0, [r3, #-1]!
   11974:	bne	11968 <mycore_string_raw_copy@@Base+0x18>
   11978:	mov	r0, #0
   1197c:	bx	lr

00011980 <mycore_string_raw_set_replacement_character@@Base>:
   11980:	mov	r3, r0
   11984:	str	r4, [sp, #-8]!
   11988:	mvn	r4, #16
   1198c:	ldr	r2, [r3]
   11990:	mvn	ip, #66	; 0x42
   11994:	mov	r0, #3
   11998:	str	lr, [sp, #4]
   1199c:	mvn	lr, #64	; 0x40
   119a0:	strb	r4, [r2, r1]
   119a4:	ldr	r2, [r3]
   119a8:	add	r2, r2, r1
   119ac:	strb	lr, [r2, #1]
   119b0:	ldr	r3, [r3]
   119b4:	add	r3, r3, r1
   119b8:	strb	ip, [r3, #2]
   119bc:	ldr	r4, [sp]
   119c0:	add	sp, sp, #4
   119c4:	pop	{pc}		; (ldr pc, [sp], #4)

000119c8 <mycore_string_append_with_replacement_null_characters@@Base>:
   119c8:	ldr	ip, [r0, #8]
   119cc:	add	r3, r2, #1
   119d0:	strd	r4, [sp, #-32]!	; 0xffffffe0
   119d4:	mov	r5, r1
   119d8:	mov	r4, r0
   119dc:	strd	r6, [sp, #8]
   119e0:	strd	r8, [sp, #16]
   119e4:	mov	r9, r2
   119e8:	ldr	r2, [r0, #4]
   119ec:	add	r1, r3, ip
   119f0:	str	sl, [sp, #24]
   119f4:	str	lr, [sp, #28]
   119f8:	cmp	r1, r2
   119fc:	bcs	11ac4 <mycore_string_append_with_replacement_null_characters@@Base+0xfc>
   11a00:	cmp	r9, #0
   11a04:	ldr	r1, [r4]
   11a08:	beq	11ad4 <mycore_string_append_with_replacement_null_characters@@Base+0x10c>
   11a0c:	add	r9, r5, r9
   11a10:	mvn	r8, #16
   11a14:	sub	r5, r5, #1
   11a18:	sub	r9, r9, #1
   11a1c:	mvn	r7, #64	; 0x40
   11a20:	mvn	r6, #66	; 0x42
   11a24:	ldrb	r3, [r5, #1]!
   11a28:	cmp	r3, #0
   11a2c:	beq	11a70 <mycore_string_append_with_replacement_null_characters@@Base+0xa8>
   11a30:	ldr	r2, [r4, #8]
   11a34:	cmp	r9, r5
   11a38:	strb	r3, [r1, r2]
   11a3c:	ldr	r3, [r4, #8]
   11a40:	add	r3, r3, #1
   11a44:	str	r3, [r4, #8]
   11a48:	bne	11a24 <mycore_string_append_with_replacement_null_characters@@Base+0x5c>
   11a4c:	ldr	r1, [r4]
   11a50:	mov	r2, #0
   11a54:	strb	r2, [r1, r3]
   11a58:	ldrd	r4, [sp]
   11a5c:	ldrd	r6, [sp, #8]
   11a60:	ldrd	r8, [sp, #16]
   11a64:	ldr	sl, [sp, #24]
   11a68:	add	sp, sp, #28
   11a6c:	pop	{pc}		; (ldr pc, [sp], #4)
   11a70:	ldr	r1, [r4, #4]
   11a74:	mov	r0, r4
   11a78:	add	r1, r1, #5
   11a7c:	bl	108f8 <mycore_string_realloc@plt>
   11a80:	ldr	r1, [r4]
   11a84:	cmp	r9, r5
   11a88:	ldr	r3, [r4, #8]
   11a8c:	strb	r8, [r1, r3]
   11a90:	ldr	r3, [r4, #8]
   11a94:	add	r3, r3, #1
   11a98:	str	r3, [r4, #8]
   11a9c:	strb	r7, [r1, r3]
   11aa0:	ldr	r3, [r4, #8]
   11aa4:	add	r3, r3, #1
   11aa8:	str	r3, [r4, #8]
   11aac:	strb	r6, [r1, r3]
   11ab0:	ldr	r3, [r4, #8]
   11ab4:	add	r3, r3, #1
   11ab8:	str	r3, [r4, #8]
   11abc:	bne	11a24 <mycore_string_append_with_replacement_null_characters@@Base+0x5c>
   11ac0:	b	11a4c <mycore_string_append_with_replacement_null_characters@@Base+0x84>
   11ac4:	bl	108f8 <mycore_string_realloc@plt>
   11ac8:	cmp	r9, #0
   11acc:	ldr	r1, [r4]
   11ad0:	bne	11a0c <mycore_string_append_with_replacement_null_characters@@Base+0x44>
   11ad4:	ldr	r3, [r4, #8]
   11ad8:	b	11a50 <mycore_string_append_with_replacement_null_characters@@Base+0x88>

00011adc <mycore_string_stay_only_whitespace@@Base>:
   11adc:	strd	r4, [sp, #-20]!	; 0xffffffec
   11ae0:	strd	r6, [sp, #8]
   11ae4:	ldr	r5, [r0, #8]
   11ae8:	str	lr, [sp, #16]
   11aec:	ldr	r4, [r0]
   11af0:	cmp	r5, #0
   11af4:	beq	11b78 <mycore_string_stay_only_whitespace@@Base+0x9c>
   11af8:	sub	ip, r4, #1
   11afc:	mov	lr, #0
   11b00:	b	11b1c <mycore_string_stay_only_whitespace@@Base+0x40>
   11b04:	strb	r1, [r4, lr]
   11b08:	add	lr, lr, #1
   11b0c:	ldr	r5, [r0, #8]
   11b10:	cmp	r2, r5
   11b14:	bcs	11b64 <mycore_string_stay_only_whitespace@@Base+0x88>
   11b18:	mov	ip, r6
   11b1c:	ldrb	r1, [ip, #1]
   11b20:	add	r3, ip, #2
   11b24:	add	r6, ip, #1
   11b28:	sub	r2, r3, r4
   11b2c:	sub	r7, r1, #12
   11b30:	sub	r3, r1, #9
   11b34:	cmp	r7, #1
   11b38:	cmphi	r3, #1
   11b3c:	movls	r3, #1
   11b40:	movhi	r3, #0
   11b44:	cmp	r1, #32
   11b48:	orreq	r3, r3, #1
   11b4c:	cmp	r3, #0
   11b50:	bne	11b04 <mycore_string_stay_only_whitespace@@Base+0x28>
   11b54:	add	ip, ip, #2
   11b58:	sub	ip, ip, r4
   11b5c:	cmp	r5, ip
   11b60:	bhi	11b18 <mycore_string_stay_only_whitespace@@Base+0x3c>
   11b64:	ldrd	r4, [sp]
   11b68:	str	lr, [r0, #8]
   11b6c:	ldrd	r6, [sp, #8]
   11b70:	add	sp, sp, #16
   11b74:	pop	{pc}		; (ldr pc, [sp], #4)
   11b78:	mov	lr, r5
   11b7c:	b	11b64 <mycore_string_stay_only_whitespace@@Base+0x88>

00011b80 <mycore_string_crop_whitespace_from_begin@@Base>:
   11b80:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11b84:	mov	r4, r0
   11b88:	strd	r6, [sp, #8]
   11b8c:	ldr	r7, [r0, #8]
   11b90:	str	r8, [sp, #16]
   11b94:	str	lr, [sp, #20]
   11b98:	ldr	r0, [r0]
   11b9c:	cmp	r7, #0
   11ba0:	beq	11c5c <mycore_string_crop_whitespace_from_begin@@Base+0xdc>
   11ba4:	ldrb	r2, [r0]
   11ba8:	sub	r3, r2, #9
   11bac:	sub	r1, r2, #12
   11bb0:	cmp	r3, #1
   11bb4:	cmphi	r1, #1
   11bb8:	movhi	r3, #1
   11bbc:	movls	r3, #0
   11bc0:	cmp	r2, #32
   11bc4:	moveq	r3, #0
   11bc8:	andne	r3, r3, #1
   11bcc:	cmp	r3, #0
   11bd0:	bne	11c5c <mycore_string_crop_whitespace_from_begin@@Base+0xdc>
   11bd4:	sub	lr, r7, #1
   11bd8:	mov	r2, r0
   11bdc:	add	lr, lr, r0
   11be0:	rsb	r6, r0, #1
   11be4:	b	11c18 <mycore_string_crop_whitespace_from_begin@@Base+0x98>
   11be8:	ldrb	r1, [r2, #1]!
   11bec:	sub	r3, r1, #9
   11bf0:	sub	ip, r1, #12
   11bf4:	cmp	r3, #1
   11bf8:	cmphi	ip, #1
   11bfc:	movhi	r3, #1
   11c00:	movls	r3, #0
   11c04:	cmp	r1, #32
   11c08:	moveq	r3, #0
   11c0c:	andne	r3, r3, #1
   11c10:	cmp	r3, #0
   11c14:	bne	11c24 <mycore_string_crop_whitespace_from_begin@@Base+0xa4>
   11c18:	cmp	lr, r2
   11c1c:	add	r5, r6, r2
   11c20:	bne	11be8 <mycore_string_crop_whitespace_from_begin@@Base+0x68>
   11c24:	cmp	r5, #0
   11c28:	beq	11c40 <mycore_string_crop_whitespace_from_begin@@Base+0xc0>
   11c2c:	mov	r1, r5
   11c30:	bl	10bf8 <mchar_async_crop_first_chars_without_cache@plt>
   11c34:	ldr	r7, [r4, #8]
   11c38:	str	r0, [r4]
   11c3c:	sub	r7, r7, r5
   11c40:	mov	r0, r5
   11c44:	ldr	r8, [sp, #16]
   11c48:	str	r7, [r4, #8]
   11c4c:	ldrd	r4, [sp]
   11c50:	ldrd	r6, [sp, #8]
   11c54:	add	sp, sp, #20
   11c58:	pop	{pc}		; (ldr pc, [sp], #4)
   11c5c:	mov	r5, #0
   11c60:	b	11c40 <mycore_string_crop_whitespace_from_begin@@Base+0xc0>

00011c64 <mycore_string_whitespace_from_begin@@Base>:
   11c64:	mov	r3, r0
   11c68:	ldr	r0, [r0, #8]
   11c6c:	str	r4, [sp, #-8]!
   11c70:	str	lr, [sp, #4]
   11c74:	ldr	lr, [r3]
   11c78:	cmp	r0, #0
   11c7c:	beq	11d00 <mycore_string_whitespace_from_begin@@Base+0x9c>
   11c80:	ldrb	r2, [lr]
   11c84:	sub	r3, r2, #9
   11c88:	sub	r1, r2, #12
   11c8c:	cmp	r3, #1
   11c90:	cmphi	r1, #1
   11c94:	movhi	r3, #1
   11c98:	movls	r3, #0
   11c9c:	cmp	r2, #32
   11ca0:	moveq	r3, #0
   11ca4:	andne	r3, r3, #1
   11ca8:	cmp	r3, #0
   11cac:	bne	11d0c <mycore_string_whitespace_from_begin@@Base+0xa8>
   11cb0:	mov	r2, lr
   11cb4:	sub	r0, r0, #1
   11cb8:	add	lr, lr, r0
   11cbc:	rsb	r4, r2, #1
   11cc0:	b	11cf4 <mycore_string_whitespace_from_begin@@Base+0x90>
   11cc4:	ldrb	r1, [r2, #1]!
   11cc8:	sub	r3, r1, #9
   11ccc:	sub	ip, r1, #12
   11cd0:	cmp	r3, #1
   11cd4:	cmphi	ip, #1
   11cd8:	movhi	r3, #1
   11cdc:	movls	r3, #0
   11ce0:	cmp	r1, #32
   11ce4:	moveq	r3, #0
   11ce8:	andne	r3, r3, #1
   11cec:	cmp	r3, #0
   11cf0:	bne	11d00 <mycore_string_whitespace_from_begin@@Base+0x9c>
   11cf4:	cmp	r2, lr
   11cf8:	add	r0, r4, r2
   11cfc:	bne	11cc4 <mycore_string_whitespace_from_begin@@Base+0x60>
   11d00:	ldr	r4, [sp]
   11d04:	add	sp, sp, #4
   11d08:	pop	{pc}		; (ldr pc, [sp], #4)
   11d0c:	mov	r0, #0
   11d10:	b	11d00 <mycore_string_whitespace_from_begin@@Base+0x9c>

00011d14 <mythread_create@@Base>:
   11d14:	mov	r1, #40	; 0x28
   11d18:	mov	r0, #1
   11d1c:	b	feb4 <mycore_calloc@plt>

00011d20 <mythread_init@@Base>:
   11d20:	cmp	r2, #0
   11d24:	strd	r4, [sp, #-16]!
   11d28:	moveq	r5, #1
   11d2c:	str	r6, [sp, #8]
   11d30:	str	lr, [sp, #12]
   11d34:	bne	11d4c <mythread_init@@Base+0x2c>
   11d38:	mov	r0, r5
   11d3c:	ldrd	r4, [sp]
   11d40:	ldr	r6, [sp, #8]
   11d44:	add	sp, sp, #12
   11d48:	pop	{pc}		; (ldr pc, [sp], #4)
   11d4c:	mov	r4, r0
   11d50:	mov	ip, r1
   11d54:	mov	r5, #0
   11d58:	mov	r0, r2
   11d5c:	mov	r1, #40	; 0x28
   11d60:	str	r5, [r4, #4]
   11d64:	str	r2, [r4, #8]
   11d68:	str	r3, [r4, #12]
   11d6c:	str	ip, [r4, #32]
   11d70:	bl	feb4 <mycore_calloc@plt>
   11d74:	cmp	r0, r5
   11d78:	str	r0, [r4]
   11d7c:	moveq	r5, #2
   11d80:	beq	11d38 <mythread_init@@Base+0x18>
   11d84:	mov	r0, r4
   11d88:	bl	fe24 <mythread_thread_attr_init@plt>
   11d8c:	cmp	r0, r5
   11d90:	str	r0, [r4, #20]
   11d94:	moveq	r5, #12
   11d98:	beq	11d38 <mythread_init@@Base+0x18>
   11d9c:	mov	r0, r4
   11da0:	bl	fc44 <mythread_nanosleep_create@plt>
   11da4:	str	r0, [r4, #24]
   11da8:	b	11d38 <mythread_init@@Base+0x18>

00011dac <mythread_clean@@Base>:
   11dac:	str	r4, [sp, #-8]!
   11db0:	mov	r4, r0
   11db4:	ldr	r1, [r0, #20]
   11db8:	str	lr, [sp, #4]
   11dbc:	bl	103a0 <mythread_thread_attr_clean@plt>
   11dc0:	ldr	r0, [r4, #24]
   11dc4:	bl	fbfc <mythread_nanosleep_clean@plt>
   11dc8:	mov	r3, #0
   11dcc:	str	r3, [r4, #28]
   11dd0:	ldr	r4, [sp]
   11dd4:	add	sp, sp, #4
   11dd8:	pop	{pc}		; (ldr pc, [sp], #4)

00011ddc <myhread_entry_create@@Base>:
   11ddc:	strd	r4, [sp, #-32]!	; 0xffffffe0
   11de0:	strd	r6, [sp, #8]
   11de4:	str	sl, [sp, #24]
   11de8:	str	lr, [sp, #28]
   11dec:	ldr	lr, [r0, #4]
   11df0:	strd	r8, [sp, #16]
   11df4:	mov	r8, #0
   11df8:	ldr	sl, [r0, #8]
   11dfc:	str	r8, [r0, #28]
   11e00:	cmp	lr, sl
   11e04:	movcs	r8, #15
   11e08:	bcs	11e98 <myhread_entry_create@@Base+0xbc>
   11e0c:	ldr	r9, [r0]
   11e10:	add	r6, lr, lr, lsl #2
   11e14:	mov	r4, r0
   11e18:	mov	r7, r1
   11e1c:	lsl	r6, r6, #3
   11e20:	add	r5, r9, r6
   11e24:	str	lr, [r5, #4]
   11e28:	str	r2, [r5, #8]
   11e2c:	str	sl, [r5, #12]
   11e30:	str	r3, [r5, #16]
   11e34:	str	r8, [r5, #20]
   11e38:	str	r0, [r5, #32]
   11e3c:	bl	fc44 <mythread_nanosleep_create@plt>
   11e40:	str	r0, [r5, #28]
   11e44:	mov	r0, r4
   11e48:	bl	10a90 <mythread_mutex_create@plt>
   11e4c:	cmp	r0, r8
   11e50:	str	r0, [r5, #24]
   11e54:	moveq	r8, #71	; 0x47
   11e58:	beq	11e98 <myhread_entry_create@@Base+0xbc>
   11e5c:	mov	r1, r0
   11e60:	mov	r0, r4
   11e64:	bl	10d30 <mythread_mutex_wait@plt>
   11e68:	subs	r8, r0, #0
   11e6c:	bne	11eb4 <myhread_entry_create@@Base+0xd8>
   11e70:	mov	r1, r7
   11e74:	add	r2, r5, #4
   11e78:	mov	r0, r4
   11e7c:	bl	fd28 <mythread_thread_create@plt>
   11e80:	cmp	r0, #0
   11e84:	str	r0, [r9, r6]
   11e88:	beq	11ec8 <myhread_entry_create@@Base+0xec>
   11e8c:	ldr	r3, [r4, #4]
   11e90:	add	r3, r3, #1
   11e94:	str	r3, [r4, #4]
   11e98:	mov	r0, r8
   11e9c:	ldrd	r4, [sp]
   11ea0:	ldrd	r6, [sp, #8]
   11ea4:	ldrd	r8, [sp, #16]
   11ea8:	ldr	sl, [sp, #24]
   11eac:	add	sp, sp, #28
   11eb0:	pop	{pc}		; (ldr pc, [sp], #4)
   11eb4:	mov	r0, r4
   11eb8:	ldr	r1, [r5, #24]
   11ebc:	mov	r8, #72	; 0x48
   11ec0:	bl	105c8 <mythread_mutex_close@plt>
   11ec4:	b	11e98 <myhread_entry_create@@Base+0xbc>
   11ec8:	mov	r0, r4
   11ecc:	ldr	r1, [r5, #24]
   11ed0:	mov	r8, #1
   11ed4:	bl	105c8 <mythread_mutex_close@plt>
   11ed8:	b	11e98 <myhread_entry_create@@Base+0xbc>

00011edc <myhread_increase_id_by_entry_id@@Base>:
   11edc:	ldr	r0, [r0, #12]
   11ee0:	add	r0, r1, r0
   11ee4:	bx	lr

00011ee8 <mythread_join@@Base>:
   11ee8:	ldr	r3, [r0, #4]
   11eec:	cmp	r3, #0
   11ef0:	beq	11fb8 <mythread_join@@Base+0xd0>
   11ef4:	cmp	r1, #0
   11ef8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11efc:	mov	r4, r0
   11f00:	movne	r5, #0
   11f04:	strd	r6, [sp, #8]
   11f08:	mov	r7, r1
   11f0c:	str	r8, [sp, #16]
   11f10:	mov	r8, r2
   11f14:	str	lr, [sp, #20]
   11f18:	bne	11f2c <mythread_join@@Base+0x44>
   11f1c:	b	11f80 <mythread_join@@Base+0x98>
   11f20:	ldr	r3, [r4, #4]
   11f24:	cmp	r3, r5
   11f28:	bls	11f78 <mythread_join@@Base+0x90>
   11f2c:	ldr	r1, [r4]
   11f30:	add	r6, r5, r5, lsl #2
   11f34:	mov	r2, r8
   11f38:	mov	r0, r4
   11f3c:	add	r5, r5, #1
   11f40:	add	r1, r1, r6, lsl #3
   11f44:	blx	r7
   11f48:	ldr	r3, [r4]
   11f4c:	mov	r0, r4
   11f50:	ldr	r1, [r3, r6, lsl #3]
   11f54:	bl	104fc <mythread_thread_join@plt>
   11f58:	cmp	r0, #0
   11f5c:	beq	11f20 <mythread_join@@Base+0x38>
   11f60:	mov	r0, #1
   11f64:	ldrd	r4, [sp]
   11f68:	ldrd	r6, [sp, #8]
   11f6c:	ldr	r8, [sp, #16]
   11f70:	add	sp, sp, #20
   11f74:	pop	{pc}		; (ldr pc, [sp], #4)
   11f78:	mov	r0, #0
   11f7c:	b	11f64 <mythread_join@@Base+0x7c>
   11f80:	mov	r6, r1
   11f84:	b	11f94 <mythread_join@@Base+0xac>
   11f88:	ldr	r3, [r4, #4]
   11f8c:	cmp	r6, r3
   11f90:	bcs	11f78 <mythread_join@@Base+0x90>
   11f94:	ldr	r3, [r4]
   11f98:	mov	r0, r4
   11f9c:	add	r6, r6, #1
   11fa0:	ldr	r1, [r3, r7]
   11fa4:	add	r7, r7, #40	; 0x28
   11fa8:	bl	104fc <mythread_thread_join@plt>
   11fac:	cmp	r0, #0
   11fb0:	beq	11f88 <mythread_join@@Base+0xa0>
   11fb4:	b	11f60 <mythread_join@@Base+0x78>
   11fb8:	mov	r0, #0
   11fbc:	bx	lr

00011fc0 <mythread_check_status@@Base>:
   11fc0:	ldr	ip, [r0, #4]
   11fc4:	cmp	ip, #0
   11fc8:	beq	1200c <mythread_check_status@@Base+0x4c>
   11fcc:	ldr	r3, [r0]
   11fd0:	ldr	r0, [r3, #20]
   11fd4:	cmp	r0, #0
   11fd8:	bne	12008 <mythread_check_status@@Base+0x48>
   11fdc:	mov	r2, r0
   11fe0:	b	11ff0 <mythread_check_status@@Base+0x30>
   11fe4:	ldr	r1, [r3, #20]
   11fe8:	cmp	r1, #0
   11fec:	bne	12004 <mythread_check_status@@Base+0x44>
   11ff0:	add	r2, r2, #1
   11ff4:	add	r3, r3, #40	; 0x28
   11ff8:	cmp	ip, r2
   11ffc:	bne	11fe4 <mythread_check_status@@Base+0x24>
   12000:	bx	lr
   12004:	mov	r0, r1
   12008:	bx	lr
   1200c:	mov	r0, ip
   12010:	bx	lr

00012014 <mythread_option@@Base>:
   12014:	ldr	r0, [r0, #36]	; 0x24
   12018:	bx	lr

0001201c <mythread_option_set@@Base>:
   1201c:	str	r1, [r0, #36]	; 0x24
   12020:	bx	lr

00012024 <mythread_quit@@Base>:
   12024:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12028:	mov	r4, r0
   1202c:	strd	r6, [sp, #8]
   12030:	mov	r7, r1
   12034:	mov	r1, #2
   12038:	str	r8, [sp, #16]
   1203c:	mov	r8, r2
   12040:	str	lr, [sp, #20]
   12044:	bl	10a78 <mythread_option_set@plt>
   12048:	ldr	r3, [r4, #4]
   1204c:	cmp	r3, #0
   12050:	beq	120d4 <mythread_quit@@Base+0xb0>
   12054:	cmp	r7, #0
   12058:	movne	r5, #0
   1205c:	bne	12084 <mythread_quit@@Base+0x60>
   12060:	b	120dc <mythread_quit@@Base+0xb8>
   12064:	ldr	r3, [r4]
   12068:	ldr	r1, [r3, r6, lsl #3]
   1206c:	bl	10988 <mythread_thread_destroy@plt>
   12070:	cmp	r0, #0
   12074:	bne	120bc <mythread_quit@@Base+0x98>
   12078:	ldr	r3, [r4, #4]
   1207c:	cmp	r3, r5
   12080:	bls	120d4 <mythread_quit@@Base+0xb0>
   12084:	ldr	r1, [r4]
   12088:	add	r6, r5, r5, lsl #2
   1208c:	mov	r2, r8
   12090:	mov	r0, r4
   12094:	add	r5, r5, #1
   12098:	add	r1, r1, r6, lsl #3
   1209c:	blx	r7
   120a0:	ldr	r3, [r4]
   120a4:	mov	r0, r4
   120a8:	ldr	r1, [r3, r6, lsl #3]
   120ac:	bl	104fc <mythread_thread_join@plt>
   120b0:	cmp	r0, #0
   120b4:	mov	r0, r4
   120b8:	beq	12064 <mythread_quit@@Base+0x40>
   120bc:	mov	r0, #1
   120c0:	ldrd	r4, [sp]
   120c4:	ldrd	r6, [sp, #8]
   120c8:	ldr	r8, [sp, #16]
   120cc:	add	sp, sp, #20
   120d0:	pop	{pc}		; (ldr pc, [sp], #4)
   120d4:	mov	r0, #0
   120d8:	b	120c0 <mythread_quit@@Base+0x9c>
   120dc:	mov	r5, r7
   120e0:	b	12108 <mythread_quit@@Base+0xe4>
   120e4:	ldr	r3, [r4]
   120e8:	ldr	r1, [r3, r7]
   120ec:	add	r7, r7, #40	; 0x28
   120f0:	bl	10988 <mythread_thread_destroy@plt>
   120f4:	cmp	r0, #0
   120f8:	bne	120bc <mythread_quit@@Base+0x98>
   120fc:	ldr	r3, [r4, #4]
   12100:	cmp	r5, r3
   12104:	bcs	120d4 <mythread_quit@@Base+0xb0>
   12108:	ldr	r3, [r4]
   1210c:	mov	r0, r4
   12110:	add	r5, r5, #1
   12114:	ldr	r1, [r3, r7]
   12118:	bl	104fc <mythread_thread_join@plt>
   1211c:	cmp	r0, #0
   12120:	mov	r0, r4
   12124:	beq	120e4 <mythread_quit@@Base+0xc0>
   12128:	b	120bc <mythread_quit@@Base+0x98>

0001212c <mythread_stop@@Base>:
   1212c:	strd	r4, [sp, #-16]!
   12130:	str	r6, [sp, #8]
   12134:	ldr	r6, [r0, #36]	; 0x24
   12138:	str	lr, [sp, #12]
   1213c:	ands	r6, r6, #4
   12140:	beq	12158 <mythread_stop@@Base+0x2c>
   12144:	ldrd	r4, [sp]
   12148:	mov	r0, #0
   1214c:	ldr	r6, [sp, #8]
   12150:	add	sp, sp, #12
   12154:	pop	{pc}		; (ldr pc, [sp], #4)
   12158:	mov	r4, r0
   1215c:	mov	r1, #4
   12160:	bl	10a78 <mythread_option_set@plt>
   12164:	ldr	r2, [r4, #4]
   12168:	cmp	r2, #0
   1216c:	beq	12144 <mythread_stop@@Base+0x18>
   12170:	ldr	r3, [r4]
   12174:	mov	r5, r6
   12178:	add	r1, r3, r5
   1217c:	ldr	r1, [r1, #16]
   12180:	tst	r1, #4
   12184:	bne	121a8 <mythread_stop@@Base+0x7c>
   12188:	ldr	r0, [r4, #24]
   1218c:	bl	10040 <mythread_nanosleep_sleep@plt>
   12190:	ldr	r3, [r4]
   12194:	add	r2, r3, r5
   12198:	ldr	r2, [r2, #16]
   1219c:	tst	r2, #4
   121a0:	beq	12188 <mythread_stop@@Base+0x5c>
   121a4:	ldr	r2, [r4, #4]
   121a8:	add	r6, r6, #1
   121ac:	add	r5, r5, #40	; 0x28
   121b0:	cmp	r6, r2
   121b4:	bcc	12178 <mythread_stop@@Base+0x4c>
   121b8:	b	12144 <mythread_stop@@Base+0x18>

000121bc <mythread_suspend@@Base>:
   121bc:	strd	r4, [sp, #-16]!
   121c0:	str	r6, [sp, #8]
   121c4:	ldr	r6, [r0, #36]	; 0x24
   121c8:	str	lr, [sp, #12]
   121cc:	ands	r6, r6, #1
   121d0:	beq	121e8 <mythread_suspend@@Base+0x2c>
   121d4:	ldrd	r4, [sp]
   121d8:	mov	r0, #0
   121dc:	ldr	r6, [sp, #8]
   121e0:	add	sp, sp, #12
   121e4:	pop	{pc}		; (ldr pc, [sp], #4)
   121e8:	mov	r4, r0
   121ec:	mov	r1, #1
   121f0:	bl	10a78 <mythread_option_set@plt>
   121f4:	ldr	r1, [r4, #4]
   121f8:	cmp	r1, #0
   121fc:	beq	121d4 <mythread_suspend@@Base+0x18>
   12200:	ldr	r2, [r4]
   12204:	mov	r5, r6
   12208:	add	r3, r2, r5
   1220c:	ldr	r0, [r3, #16]
   12210:	tst	r0, #4
   12214:	bne	12254 <mythread_suspend@@Base+0x98>
   12218:	ldr	r3, [r3, #16]
   1221c:	tst	r3, #1
   12220:	beq	12234 <mythread_suspend@@Base+0x78>
   12224:	b	12254 <mythread_suspend@@Base+0x98>
   12228:	ldr	r3, [r3, #16]
   1222c:	tst	r3, #1
   12230:	bne	12250 <mythread_suspend@@Base+0x94>
   12234:	ldr	r0, [r4, #24]
   12238:	bl	10040 <mythread_nanosleep_sleep@plt>
   1223c:	ldr	r2, [r4]
   12240:	add	r3, r2, r5
   12244:	ldr	r1, [r3, #16]
   12248:	tst	r1, #4
   1224c:	beq	12228 <mythread_suspend@@Base+0x6c>
   12250:	ldr	r1, [r4, #4]
   12254:	add	r6, r6, #1
   12258:	add	r5, r5, #40	; 0x28
   1225c:	cmp	r6, r1
   12260:	bcc	12208 <mythread_suspend@@Base+0x4c>
   12264:	b	121d4 <mythread_suspend@@Base+0x18>

00012268 <mythread_resume@@Base>:
   12268:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1226c:	strd	r6, [sp, #8]
   12270:	ldr	r7, [r0, #36]	; 0x24
   12274:	str	r8, [sp, #16]
   12278:	str	lr, [sp, #20]
   1227c:	ands	r7, r7, #1
   12280:	bne	12308 <mythread_resume@@Base+0xa0>
   12284:	mov	r6, r0
   12288:	mov	r8, r1
   1228c:	bl	10a78 <mythread_option_set@plt>
   12290:	ldr	r1, [r6, #4]
   12294:	cmp	r1, #0
   12298:	beq	122f0 <mythread_resume@@Base+0x88>
   1229c:	mov	r4, r7
   122a0:	mov	r5, r7
   122a4:	b	122b0 <mythread_resume@@Base+0x48>
   122a8:	cmp	r5, r1
   122ac:	bcs	122f0 <mythread_resume@@Base+0x88>
   122b0:	ldr	r3, [r6]
   122b4:	add	r5, r5, #1
   122b8:	add	r3, r3, r4
   122bc:	add	r4, r4, #40	; 0x28
   122c0:	ldr	r2, [r3, #16]
   122c4:	tst	r2, #4
   122c8:	beq	122a8 <mythread_resume@@Base+0x40>
   122cc:	mov	r0, r6
   122d0:	str	r8, [r3, #16]
   122d4:	ldr	r1, [r3, #24]
   122d8:	bl	10ca0 <mythread_mutex_post@plt>
   122dc:	cmp	r0, #0
   122e0:	bne	12314 <mythread_resume@@Base+0xac>
   122e4:	ldr	r1, [r6, #4]
   122e8:	cmp	r5, r1
   122ec:	bcc	122b0 <mythread_resume@@Base+0x48>
   122f0:	mov	r0, r7
   122f4:	ldrd	r4, [sp]
   122f8:	ldrd	r6, [sp, #8]
   122fc:	ldr	r8, [sp, #16]
   12300:	add	sp, sp, #20
   12304:	pop	{pc}		; (ldr pc, [sp], #4)
   12308:	bl	10a78 <mythread_option_set@plt>
   1230c:	mov	r7, #0
   12310:	b	122f0 <mythread_resume@@Base+0x88>
   12314:	mov	r7, #1
   12318:	b	122f0 <mythread_resume@@Base+0x88>

0001231c <mythread_destroy@@Base>:
   1231c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12320:	subs	r4, r0, #0
   12324:	strd	r6, [sp, #8]
   12328:	str	r8, [sp, #16]
   1232c:	str	lr, [sp, #20]
   12330:	beq	12388 <mythread_destroy@@Base+0x6c>
   12334:	mov	r5, r3
   12338:	ldr	r3, [r4]
   1233c:	cmp	r3, #0
   12340:	beq	1236c <mythread_destroy@@Base+0x50>
   12344:	mov	r6, r1
   12348:	mov	r7, r2
   1234c:	mov	r1, #2
   12350:	bl	10454 <mythread_resume@plt>
   12354:	mov	r2, r7
   12358:	mov	r1, r6
   1235c:	mov	r0, r4
   12360:	bl	10520 <mythread_quit@plt>
   12364:	ldr	r0, [r4]
   12368:	bl	10d60 <mycore_free@plt>
   1236c:	mov	r0, r4
   12370:	ldr	r1, [r4, #20]
   12374:	bl	11018 <mythread_thread_attr_destroy@plt>
   12378:	ldr	r0, [r4, #24]
   1237c:	bl	10b98 <mythread_nanosleep_destroy@plt>
   12380:	cmp	r5, #0
   12384:	bne	123a0 <mythread_destroy@@Base+0x84>
   12388:	mov	r0, r4
   1238c:	ldrd	r4, [sp]
   12390:	ldrd	r6, [sp, #8]
   12394:	ldr	r8, [sp, #16]
   12398:	add	sp, sp, #20
   1239c:	pop	{pc}		; (ldr pc, [sp], #4)
   123a0:	mov	r0, r4
   123a4:	mov	r4, #0
   123a8:	bl	10d60 <mycore_free@plt>
   123ac:	b	12388 <mythread_destroy@@Base+0x6c>

000123b0 <mythread_entry_join@@Base>:
   123b0:	subs	r3, r1, #0
   123b4:	str	r4, [sp, #-8]!
   123b8:	mov	r4, r0
   123bc:	ldr	r0, [r0, #32]
   123c0:	str	lr, [sp, #4]
   123c4:	beq	123d4 <mythread_entry_join@@Base+0x24>
   123c8:	mov	r1, r4
   123cc:	blx	r3
   123d0:	ldr	r0, [r4, #32]
   123d4:	ldr	r1, [r4]
   123d8:	bl	104fc <mythread_thread_join@plt>
   123dc:	adds	r0, r0, #0
   123e0:	ldr	r4, [sp]
   123e4:	add	sp, sp, #4
   123e8:	movne	r0, #1
   123ec:	pop	{pc}		; (ldr pc, [sp], #4)

000123f0 <mythread_entry_quit@@Base>:
   123f0:	subs	r3, r1, #0
   123f4:	str	r4, [sp, #-8]!
   123f8:	mov	r4, r0
   123fc:	ldr	r0, [r0, #32]
   12400:	str	lr, [sp, #4]
   12404:	beq	12414 <mythread_entry_quit@@Base+0x24>
   12408:	mov	r1, r4
   1240c:	blx	r3
   12410:	ldr	r0, [r4, #32]
   12414:	ldr	r1, [r4]
   12418:	bl	104fc <mythread_thread_join@plt>
   1241c:	cmp	r0, #0
   12420:	movne	r0, #1
   12424:	bne	1243c <mythread_entry_quit@@Base+0x4c>
   12428:	ldr	r1, [r4]
   1242c:	ldr	r0, [r4, #32]
   12430:	bl	10988 <mythread_thread_destroy@plt>
   12434:	adds	r0, r0, #0
   12438:	movne	r0, #1
   1243c:	ldr	r4, [sp]
   12440:	add	sp, sp, #4
   12444:	pop	{pc}		; (ldr pc, [sp], #4)

00012448 <mythread_entry_stop@@Base>:
   12448:	ldr	r3, [r0, #16]
   1244c:	tst	r3, #4
   12450:	bne	1249c <mythread_entry_stop@@Base+0x54>
   12454:	mov	r3, #4
   12458:	str	r4, [sp, #-8]!
   1245c:	mov	r4, r0
   12460:	str	lr, [sp, #4]
   12464:	str	r3, [r0, #16]
   12468:	ldr	r3, [r0, #16]
   1246c:	tst	r3, #4
   12470:	bne	1248c <mythread_entry_stop@@Base+0x44>
   12474:	ldr	r3, [r4, #32]
   12478:	ldr	r0, [r3, #24]
   1247c:	bl	10040 <mythread_nanosleep_sleep@plt>
   12480:	ldr	r3, [r4, #16]
   12484:	tst	r3, #4
   12488:	beq	12474 <mythread_entry_stop@@Base+0x2c>
   1248c:	ldr	r4, [sp]
   12490:	add	sp, sp, #4
   12494:	mov	r0, #0
   12498:	pop	{pc}		; (ldr pc, [sp], #4)
   1249c:	mov	r0, #0
   124a0:	bx	lr

000124a4 <mythread_entry_suspend@@Base>:
   124a4:	ldr	r3, [r0, #16]
   124a8:	tst	r3, #1
   124ac:	bne	12508 <mythread_entry_suspend@@Base+0x64>
   124b0:	mov	r3, #1
   124b4:	str	r3, [r0, #16]
   124b8:	ldr	r3, [r0, #16]
   124bc:	tst	r3, #4
   124c0:	bne	12508 <mythread_entry_suspend@@Base+0x64>
   124c4:	str	r4, [sp, #-8]!
   124c8:	mov	r4, r0
   124cc:	str	lr, [sp, #4]
   124d0:	b	124ec <mythread_entry_suspend@@Base+0x48>
   124d4:	ldr	r3, [r4, #32]
   124d8:	ldr	r0, [r3, #24]
   124dc:	bl	10040 <mythread_nanosleep_sleep@plt>
   124e0:	ldr	r3, [r4, #16]
   124e4:	tst	r3, #4
   124e8:	bne	124f8 <mythread_entry_suspend@@Base+0x54>
   124ec:	ldr	r3, [r4, #16]
   124f0:	tst	r3, #1
   124f4:	beq	124d4 <mythread_entry_suspend@@Base+0x30>
   124f8:	ldr	r4, [sp]
   124fc:	add	sp, sp, #4
   12500:	mov	r0, #0
   12504:	pop	{pc}		; (ldr pc, [sp], #4)
   12508:	mov	r0, #0
   1250c:	bx	lr

00012510 <mythread_entry_resume@@Base>:
   12510:	ldr	r2, [r0, #16]
   12514:	mov	r3, r0
   12518:	tst	r2, #1
   1251c:	beq	1252c <mythread_entry_resume@@Base+0x1c>
   12520:	mov	r0, #0
   12524:	str	r1, [r3, #16]
   12528:	bx	lr
   1252c:	ldr	r0, [r0, #16]
   12530:	ands	r0, r0, #4
   12534:	bne	12540 <mythread_entry_resume@@Base+0x30>
   12538:	str	r1, [r3, #16]
   1253c:	bx	lr
   12540:	str	r4, [sp, #-8]!
   12544:	ldr	r0, [r3, #32]
   12548:	str	lr, [sp, #4]
   1254c:	str	r1, [r3, #16]
   12550:	ldr	r1, [r3, #24]
   12554:	bl	10ca0 <mythread_mutex_post@plt>
   12558:	adds	r0, r0, #0
   1255c:	ldr	r4, [sp]
   12560:	add	sp, sp, #4
   12564:	movne	r0, #1
   12568:	pop	{pc}		; (ldr pc, [sp], #4)

0001256c <mythread_entry_status@@Base>:
   1256c:	ldr	r0, [r0, #20]
   12570:	bx	lr

00012574 <mythread_entry_mythread@@Base>:
   12574:	ldr	r0, [r0, #32]
   12578:	bx	lr

0001257c <mythread_callback_quit@@Base>:
   1257c:	ldr	r3, [r1, #16]
   12580:	tst	r3, #2
   12584:	bxne	lr
   12588:	strd	r4, [sp, #-16]!
   1258c:	mov	r4, r1
   12590:	mov	r5, r0
   12594:	str	r6, [sp, #8]
   12598:	str	lr, [sp, #12]
   1259c:	ldr	r0, [r5, #24]
   125a0:	bl	10040 <mythread_nanosleep_sleep@plt>
   125a4:	ldr	r3, [r4, #16]
   125a8:	tst	r3, #2
   125ac:	beq	1259c <mythread_callback_quit@@Base+0x20>
   125b0:	ldrd	r4, [sp]
   125b4:	ldr	r6, [sp, #8]
   125b8:	add	sp, sp, #12
   125bc:	pop	{pc}		; (ldr pc, [sp], #4)

000125c0 <mythread_queue_create@@Base>:
   125c0:	mov	r1, #28
   125c4:	mov	r0, #1
   125c8:	b	feb4 <mycore_calloc@plt>

000125cc <mythread_queue_init@@Base>:
   125cc:	cmp	r1, #32
   125d0:	mov	r3, #512	; 0x200
   125d4:	strd	r4, [sp, #-16]!
   125d8:	movcs	r2, r1
   125dc:	mov	r4, r0
   125e0:	str	r6, [sp, #8]
   125e4:	movcc	r2, #32
   125e8:	mov	r0, r3
   125ec:	str	lr, [sp, #12]
   125f0:	mov	r1, #4
   125f4:	str	r3, [r4, #8]
   125f8:	str	r2, [r4, #20]
   125fc:	bl	feb4 <mycore_calloc@plt>
   12600:	cmp	r0, #0
   12604:	str	r0, [r4]
   12608:	moveq	r3, #61	; 0x3d
   1260c:	beq	12644 <mythread_queue_init@@Base+0x78>
   12610:	mov	r5, r0
   12614:	ldr	r6, [r4, #4]
   12618:	ldr	r0, [r4, #20]
   1261c:	add	r0, r0, r0, lsl #1
   12620:	lsl	r0, r0, #2
   12624:	bl	10c28 <mycore_malloc@plt>
   12628:	ldr	r3, [r4]
   1262c:	ldr	r2, [r4, #4]
   12630:	str	r0, [r5, r6, lsl #2]
   12634:	ldr	r2, [r3, r2, lsl #2]
   12638:	cmp	r2, #0
   1263c:	movne	r3, #0
   12640:	beq	12658 <mythread_queue_init@@Base+0x8c>
   12644:	ldrd	r4, [sp]
   12648:	mov	r0, r3
   1264c:	ldr	r6, [sp, #8]
   12650:	add	sp, sp, #12
   12654:	pop	{pc}		; (ldr pc, [sp], #4)
   12658:	mov	r0, r3
   1265c:	bl	10d60 <mycore_free@plt>
   12660:	mov	r3, #62	; 0x3e
   12664:	str	r0, [r4]
   12668:	b	12644 <mythread_queue_init@@Base+0x78>

0001266c <mythread_queue_clean@@Base>:
   1266c:	mov	r3, #0
   12670:	str	r3, [r0, #4]
   12674:	str	r3, [r0, #12]
   12678:	str	r3, [r0, #24]
   1267c:	str	r3, [r0, #16]
   12680:	bx	lr

00012684 <mythread_queue_destroy@@Base>:
   12684:	strd	r4, [sp, #-16]!
   12688:	subs	r5, r0, #0
   1268c:	str	r6, [sp, #8]
   12690:	str	lr, [sp, #12]
   12694:	beq	126d8 <mythread_queue_destroy@@Base+0x54>
   12698:	ldr	r3, [r5]
   1269c:	cmp	r3, #0
   126a0:	beq	126d0 <mythread_queue_destroy@@Base+0x4c>
   126a4:	mov	r4, #0
   126a8:	b	126b0 <mythread_queue_destroy@@Base+0x2c>
   126ac:	ldr	r3, [r5]
   126b0:	ldr	r0, [r3, r4, lsl #2]
   126b4:	add	r4, r4, #1
   126b8:	bl	10d60 <mycore_free@plt>
   126bc:	ldr	r3, [r5, #4]
   126c0:	cmp	r3, r4
   126c4:	bcs	126ac <mythread_queue_destroy@@Base+0x28>
   126c8:	ldr	r0, [r5]
   126cc:	bl	10d60 <mycore_free@plt>
   126d0:	mov	r0, r5
   126d4:	bl	10d60 <mycore_free@plt>
   126d8:	ldrd	r4, [sp]
   126dc:	mov	r0, #0
   126e0:	ldr	r6, [sp, #8]
   126e4:	add	sp, sp, #12
   126e8:	pop	{pc}		; (ldr pc, [sp], #4)

000126ec <mythread_queue_node_clean@@Base>:
   126ec:	mov	r3, #0
   126f0:	str	r3, [r0]
   126f4:	str	r3, [r0, #4]
   126f8:	str	r3, [r0, #8]
   126fc:	bx	lr

00012700 <mythread_queue_get_prev_node@@Base>:
   12700:	ldr	r0, [r0, #8]
   12704:	bx	lr

00012708 <mythread_queue_get_current_node@@Base>:
   12708:	ldr	r2, [r0]
   1270c:	ldr	r1, [r0, #4]
   12710:	ldr	r3, [r0, #12]
   12714:	ldr	r0, [r2, r1, lsl #2]
   12718:	add	r3, r3, r3, lsl #1
   1271c:	add	r0, r0, r3, lsl #2
   12720:	bx	lr

00012724 <mythread_queue_get_first_node@@Base>:
   12724:	ldr	r3, [r0]
   12728:	ldr	r0, [r3]
   1272c:	bx	lr

00012730 <mythread_queue_count_used_node@@Base>:
   12730:	ldr	r0, [r0, #16]
   12734:	bx	lr

00012738 <mythread_queue_list_create@@Base>:
   12738:	mov	r1, #12
   1273c:	mov	r0, #1
   12740:	b	feb4 <mycore_calloc@plt>

00012744 <mythread_queue_list_destroy@@Base>:
   12744:	cmp	r0, #0
   12748:	beq	12750 <mythread_queue_list_destroy@@Base+0xc>
   1274c:	b	10d60 <mycore_free@plt>
   12750:	bx	lr

00012754 <mythread_queue_list_get_count@@Base>:
   12754:	ldr	r0, [r0, #8]
   12758:	bx	lr

0001275c <mythread_queue_list_wait_for_done@@Base>:
   1275c:	cmp	r1, #0
   12760:	bxeq	lr
   12764:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12768:	ldr	r4, [r1]
   1276c:	strd	r6, [sp, #8]
   12770:	str	r8, [sp, #16]
   12774:	str	lr, [sp, #20]
   12778:	cmp	r4, #0
   1277c:	beq	127e4 <mythread_queue_list_wait_for_done@@Base+0x88>
   12780:	ldr	r1, [r0, #4]
   12784:	mov	r6, r0
   12788:	cmp	r1, #0
   1278c:	beq	127f8 <mythread_queue_list_wait_for_done@@Base+0x9c>
   12790:	ldrd	r2, [r4]
   12794:	mov	r7, #0
   12798:	lsl	r5, r7, #2
   1279c:	ldr	ip, [r3, r7, lsl #2]
   127a0:	ldr	r0, [r2, #16]
   127a4:	cmp	ip, r0
   127a8:	bcs	127cc <mythread_queue_list_wait_for_done@@Base+0x70>
   127ac:	ldr	r0, [r6, #24]
   127b0:	bl	10040 <mythread_nanosleep_sleep@plt>
   127b4:	ldrd	r2, [r4]
   127b8:	ldr	r0, [r3, r5]
   127bc:	ldr	r1, [r2, #16]
   127c0:	cmp	r0, r1
   127c4:	bcc	127ac <mythread_queue_list_wait_for_done@@Base+0x50>
   127c8:	ldr	r1, [r6, #4]
   127cc:	add	r7, r7, #1
   127d0:	cmp	r1, r7
   127d4:	bhi	12798 <mythread_queue_list_wait_for_done@@Base+0x3c>
   127d8:	ldr	r4, [r4, #12]
   127dc:	cmp	r4, #0
   127e0:	bne	12788 <mythread_queue_list_wait_for_done@@Base+0x2c>
   127e4:	ldrd	r4, [sp]
   127e8:	ldrd	r6, [sp, #8]
   127ec:	ldr	r8, [sp, #16]
   127f0:	add	sp, sp, #20
   127f4:	pop	{pc}		; (ldr pc, [sp], #4)
   127f8:	ldr	r4, [r4, #12]
   127fc:	cmp	r4, #0
   12800:	beq	127e4 <mythread_queue_list_wait_for_done@@Base+0x88>
   12804:	ldr	r4, [r4, #12]
   12808:	cmp	r4, #0
   1280c:	bne	12788 <mythread_queue_list_wait_for_done@@Base+0x2c>
   12810:	b	127e4 <mythread_queue_list_wait_for_done@@Base+0x88>

00012814 <mythread_queue_node_malloc@@Base>:
   12814:	ldr	r3, [r1, #12]
   12818:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1281c:	mov	r4, r1
   12820:	ldr	r1, [r1, #20]
   12824:	strd	r6, [sp, #8]
   12828:	mov	r6, r2
   1282c:	str	r8, [sp, #16]
   12830:	add	r3, r3, #1
   12834:	str	lr, [sp, #20]
   12838:	ldr	r2, [r4, #4]
   1283c:	cmp	r3, r1
   12840:	str	r3, [r4, #12]
   12844:	bcs	1287c <mythread_queue_node_malloc@@Base+0x68>
   12848:	ldr	r1, [r4]
   1284c:	add	r3, r3, r3, lsl #1
   12850:	ldr	r5, [r1, r2, lsl #2]
   12854:	add	r5, r5, r3, lsl #2
   12858:	ldr	r3, [r4, #16]
   1285c:	add	r3, r3, #1
   12860:	str	r3, [r4, #16]
   12864:	mov	r0, r5
   12868:	ldrd	r4, [sp]
   1286c:	ldrd	r6, [sp, #8]
   12870:	ldr	r8, [sp, #16]
   12874:	add	sp, sp, #20
   12878:	pop	{pc}		; (ldr pc, [sp], #4)
   1287c:	ldr	r1, [r4, #8]
   12880:	add	r3, r2, #1
   12884:	str	r3, [r4, #4]
   12888:	cmp	r3, r1
   1288c:	bcc	128fc <mythread_queue_node_malloc@@Base+0xe8>
   12890:	cmp	r0, #0
   12894:	beq	128a4 <mythread_queue_node_malloc@@Base+0x90>
   12898:	ldr	r1, [r0, #16]
   1289c:	bl	10d6c <mythread_queue_list_wait_for_done@plt>
   128a0:	ldr	r1, [r4, #8]
   128a4:	add	r7, r1, #512	; 0x200
   128a8:	lsl	r1, r7, #2
   128ac:	ldr	r0, [r4]
   128b0:	bl	fb84 <mycore_realloc@plt>
   128b4:	subs	r5, r0, #0
   128b8:	beq	12940 <mythread_queue_node_malloc@@Base+0x12c>
   128bc:	ldr	r0, [r4, #4]
   128c0:	mov	r1, #0
   128c4:	sub	r2, r7, r0
   128c8:	add	r0, r5, r0, lsl #2
   128cc:	lsl	r2, r2, #2
   128d0:	bl	10844 <memset@plt>
   128d4:	ldr	r3, [r4, #4]
   128d8:	str	r5, [r4]
   128dc:	str	r7, [r4, #8]
   128e0:	add	r7, r5, r3, lsl #2
   128e4:	ldr	r5, [r5, r3, lsl #2]
   128e8:	cmp	r5, #0
   128ec:	beq	12904 <mythread_queue_node_malloc@@Base+0xf0>
   128f0:	mov	r3, #0
   128f4:	str	r3, [r4, #12]
   128f8:	b	12858 <mythread_queue_node_malloc@@Base+0x44>
   128fc:	ldr	r5, [r4]
   12900:	b	128e0 <mythread_queue_node_malloc@@Base+0xcc>
   12904:	ldr	r0, [r4, #20]
   12908:	add	r0, r0, r0, lsl #1
   1290c:	lsl	r0, r0, #2
   12910:	bl	10c28 <mycore_malloc@plt>
   12914:	ldr	r3, [r4]
   12918:	ldr	r2, [r4, #4]
   1291c:	str	r0, [r7]
   12920:	ldr	r5, [r3, r2, lsl #2]
   12924:	cmp	r5, #0
   12928:	bne	128f0 <mythread_queue_node_malloc@@Base+0xdc>
   1292c:	cmp	r6, #0
   12930:	beq	12950 <mythread_queue_node_malloc@@Base+0x13c>
   12934:	mov	r3, #62	; 0x3e
   12938:	str	r3, [r6]
   1293c:	b	12864 <mythread_queue_node_malloc@@Base+0x50>
   12940:	cmp	r6, #0
   12944:	movne	r3, #61	; 0x3d
   12948:	strne	r3, [r6]
   1294c:	bne	12864 <mythread_queue_node_malloc@@Base+0x50>
   12950:	mov	r5, #0
   12954:	b	12864 <mythread_queue_node_malloc@@Base+0x50>

00012958 <mythread_queue_node_malloc_limit@@Base>:
   12958:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1295c:	mov	r4, r1
   12960:	ldr	r1, [r1, #12]
   12964:	ldr	ip, [r4, #16]
   12968:	strd	r6, [sp, #8]
   1296c:	str	r8, [sp, #16]
   12970:	add	r1, r1, #1
   12974:	str	lr, [sp, #20]
   12978:	mov	lr, r0
   1297c:	cmp	ip, r2
   12980:	str	r1, [r4, #12]
   12984:	bcc	129e4 <mythread_queue_node_malloc_limit@@Base+0x8c>
   12988:	ldr	r3, [r4, #16]
   1298c:	cmp	r0, #0
   12990:	add	r3, r3, #1
   12994:	str	r3, [r4, #16]
   12998:	beq	129a4 <mythread_queue_node_malloc_limit@@Base+0x4c>
   1299c:	ldr	r1, [r0, #16]
   129a0:	bl	10d6c <mythread_queue_list_wait_for_done@plt>
   129a4:	ldr	r2, [r4]
   129a8:	mov	r3, #0
   129ac:	ldr	r5, [r2]
   129b0:	str	r3, [r4, #4]
   129b4:	str	r3, [r4, #12]
   129b8:	str	r3, [r4, #24]
   129bc:	str	r3, [r4, #16]
   129c0:	ldr	r3, [r4, #16]
   129c4:	add	r3, r3, #1
   129c8:	str	r3, [r4, #16]
   129cc:	mov	r0, r5
   129d0:	ldrd	r4, [sp]
   129d4:	ldrd	r6, [sp, #8]
   129d8:	ldr	r8, [sp, #16]
   129dc:	add	sp, sp, #20
   129e0:	pop	{pc}		; (ldr pc, [sp], #4)
   129e4:	mov	r6, r3
   129e8:	ldr	r2, [r4, #4]
   129ec:	ldr	r3, [r4, #20]
   129f0:	cmp	r1, r3
   129f4:	bcs	12a0c <mythread_queue_node_malloc_limit@@Base+0xb4>
   129f8:	ldr	r3, [r4]
   129fc:	add	r1, r1, r1, lsl #1
   12a00:	ldr	r5, [r3, r2, lsl #2]
   12a04:	add	r5, r5, r1, lsl #2
   12a08:	b	129c0 <mythread_queue_node_malloc_limit@@Base+0x68>
   12a0c:	ldr	r3, [r4, #8]
   12a10:	add	r2, r2, #1
   12a14:	str	r2, [r4, #4]
   12a18:	cmp	r2, r3
   12a1c:	bcc	12a74 <mythread_queue_node_malloc_limit@@Base+0x11c>
   12a20:	cmp	r0, #0
   12a24:	beq	12a34 <mythread_queue_node_malloc_limit@@Base+0xdc>
   12a28:	ldr	r1, [r0, #16]
   12a2c:	bl	10d6c <mythread_queue_list_wait_for_done@plt>
   12a30:	ldr	r3, [r4, #8]
   12a34:	add	r7, r3, #512	; 0x200
   12a38:	lsl	r1, r7, #2
   12a3c:	ldr	r0, [r4]
   12a40:	bl	fb84 <mycore_realloc@plt>
   12a44:	subs	r5, r0, #0
   12a48:	beq	12ad0 <mythread_queue_node_malloc_limit@@Base+0x178>
   12a4c:	ldr	r0, [r4, #4]
   12a50:	mov	r1, #0
   12a54:	sub	r2, r7, r0
   12a58:	add	r0, r5, r0, lsl #2
   12a5c:	lsl	r2, r2, #2
   12a60:	bl	10844 <memset@plt>
   12a64:	str	r5, [r4]
   12a68:	str	r7, [r4, #8]
   12a6c:	ldr	r2, [r4, #4]
   12a70:	b	12a78 <mythread_queue_node_malloc_limit@@Base+0x120>
   12a74:	ldr	r5, [r4]
   12a78:	add	r7, r5, r2, lsl #2
   12a7c:	ldr	r5, [r5, r2, lsl #2]
   12a80:	cmp	r5, #0
   12a84:	beq	12a94 <mythread_queue_node_malloc_limit@@Base+0x13c>
   12a88:	mov	r3, #0
   12a8c:	str	r3, [r4, #12]
   12a90:	b	129c0 <mythread_queue_node_malloc_limit@@Base+0x68>
   12a94:	ldr	r0, [r4, #20]
   12a98:	add	r0, r0, r0, lsl #1
   12a9c:	lsl	r0, r0, #2
   12aa0:	bl	10c28 <mycore_malloc@plt>
   12aa4:	ldr	r3, [r4]
   12aa8:	ldr	r2, [r4, #4]
   12aac:	str	r0, [r7]
   12ab0:	ldr	r5, [r3, r2, lsl #2]
   12ab4:	cmp	r5, #0
   12ab8:	bne	12a88 <mythread_queue_node_malloc_limit@@Base+0x130>
   12abc:	cmp	r6, #0
   12ac0:	beq	12ae0 <mythread_queue_node_malloc_limit@@Base+0x188>
   12ac4:	mov	r3, #62	; 0x3e
   12ac8:	str	r3, [r6]
   12acc:	b	129cc <mythread_queue_node_malloc_limit@@Base+0x74>
   12ad0:	cmp	r6, #0
   12ad4:	movne	r3, #61	; 0x3d
   12ad8:	strne	r3, [r6]
   12adc:	bne	129cc <mythread_queue_node_malloc_limit@@Base+0x74>
   12ae0:	mov	r5, #0
   12ae4:	b	129cc <mythread_queue_node_malloc_limit@@Base+0x74>

00012ae8 <mythread_queue_list_see_for_done@@Base>:
   12ae8:	cmp	r1, #0
   12aec:	beq	12b74 <mythread_queue_list_see_for_done@@Base+0x8c>
   12af0:	str	r4, [sp, #-8]!
   12af4:	ldr	r4, [r1]
   12af8:	str	lr, [sp, #4]
   12afc:	cmp	r4, #0
   12b00:	beq	12b5c <mythread_queue_list_see_for_done@@Base+0x74>
   12b04:	ldr	ip, [r0, #4]
   12b08:	cmp	ip, #0
   12b0c:	beq	12b50 <mythread_queue_list_see_for_done@@Base+0x68>
   12b10:	ldr	lr, [r4]
   12b14:	ldr	r2, [r4, #4]
   12b18:	ldr	r1, [r2]
   12b1c:	ldr	r3, [lr, #16]
   12b20:	cmp	r1, r3
   12b24:	bcc	12b64 <mythread_queue_list_see_for_done@@Base+0x7c>
   12b28:	add	r2, r2, #4
   12b2c:	mov	r3, #0
   12b30:	b	12b44 <mythread_queue_list_see_for_done@@Base+0x5c>
   12b34:	ldr	r0, [r2], #4
   12b38:	ldr	r1, [lr, #16]
   12b3c:	cmp	r0, r1
   12b40:	bcc	12b64 <mythread_queue_list_see_for_done@@Base+0x7c>
   12b44:	add	r3, r3, #1
   12b48:	cmp	r3, ip
   12b4c:	bne	12b34 <mythread_queue_list_see_for_done@@Base+0x4c>
   12b50:	ldr	r4, [r4, #12]
   12b54:	cmp	r4, #0
   12b58:	bne	12b08 <mythread_queue_list_see_for_done@@Base+0x20>
   12b5c:	mov	r0, #1
   12b60:	b	12b68 <mythread_queue_list_see_for_done@@Base+0x80>
   12b64:	mov	r0, #0
   12b68:	ldr	r4, [sp]
   12b6c:	add	sp, sp, #4
   12b70:	pop	{pc}		; (ldr pc, [sp], #4)
   12b74:	mov	r0, #1
   12b78:	bx	lr

00012b7c <mythread_queue_list_see_for_done_by_thread@@Base>:
   12b7c:	cmp	r1, #0
   12b80:	beq	12bd4 <mythread_queue_list_see_for_done_by_thread@@Base+0x58>
   12b84:	ldr	r3, [r1]
   12b88:	cmp	r3, #0
   12b8c:	beq	12bd4 <mythread_queue_list_see_for_done_by_thread@@Base+0x58>
   12b90:	ldr	ip, [r3]
   12b94:	lsl	r0, r2, #2
   12b98:	ldr	r1, [r3, #4]
   12b9c:	ldr	r1, [r1, r2, lsl #2]
   12ba0:	ldr	r2, [ip, #16]
   12ba4:	cmp	r1, r2
   12ba8:	bcs	12bc8 <mythread_queue_list_see_for_done_by_thread@@Base+0x4c>
   12bac:	b	12bdc <mythread_queue_list_see_for_done_by_thread@@Base+0x60>
   12bb0:	ldr	r2, [r3]
   12bb4:	ldr	r1, [r3, #4]
   12bb8:	ldr	r1, [r1, r0]
   12bbc:	ldr	r2, [r2, #16]
   12bc0:	cmp	r1, r2
   12bc4:	bcc	12bdc <mythread_queue_list_see_for_done_by_thread@@Base+0x60>
   12bc8:	ldr	r3, [r3, #12]
   12bcc:	cmp	r3, #0
   12bd0:	bne	12bb0 <mythread_queue_list_see_for_done_by_thread@@Base+0x34>
   12bd4:	mov	r0, #1
   12bd8:	bx	lr
   12bdc:	mov	r0, #0
   12be0:	bx	lr

00012be4 <mythread_queue_list_entry_delete@@Base>:
   12be4:	strd	r4, [sp, #-32]!	; 0xffffffe0
   12be8:	mov	r4, r0
   12bec:	strd	r6, [sp, #8]
   12bf0:	mov	r6, r3
   12bf4:	strd	r8, [sp, #16]
   12bf8:	subs	r8, r1, #0
   12bfc:	ldrb	r7, [sp, #32]
   12c00:	str	sl, [sp, #24]
   12c04:	mov	sl, r2
   12c08:	str	lr, [sp, #28]
   12c0c:	beq	12c30 <mythread_queue_list_entry_delete@@Base+0x4c>
   12c10:	add	r9, r0, r8, lsl #2
   12c14:	mov	r5, r0
   12c18:	ldr	r3, [r5], #4
   12c1c:	subs	r0, r3, #0
   12c20:	beq	12c28 <mythread_queue_list_entry_delete@@Base+0x44>
   12c24:	bl	10088 <mythread_suspend@plt>
   12c28:	cmp	r5, r9
   12c2c:	bne	12c18 <mythread_queue_list_entry_delete@@Base+0x34>
   12c30:	ldrd	r2, [r6, #12]
   12c34:	ldr	r1, [sl]
   12c38:	cmp	r3, #0
   12c3c:	strne	r2, [r3, #12]
   12c40:	cmp	r2, #0
   12c44:	strne	r3, [r2, #16]
   12c48:	cmp	r1, r6
   12c4c:	streq	r2, [sl]
   12c50:	ldr	r2, [sl, #4]
   12c54:	cmp	r2, r6
   12c58:	streq	r3, [sl, #4]
   12c5c:	cmp	r8, #0
   12c60:	ldr	r3, [sl, #8]
   12c64:	sub	r3, r3, #1
   12c68:	str	r3, [sl, #8]
   12c6c:	beq	12c94 <mythread_queue_list_entry_delete@@Base+0xb0>
   12c70:	add	r8, r4, r8, lsl #2
   12c74:	ldr	r3, [r4], #4
   12c78:	mov	r1, #0
   12c7c:	cmp	r3, r1
   12c80:	mov	r0, r3
   12c84:	beq	12c8c <mythread_queue_list_entry_delete@@Base+0xa8>
   12c88:	bl	10454 <mythread_resume@plt>
   12c8c:	cmp	r4, r8
   12c90:	bne	12c74 <mythread_queue_list_entry_delete@@Base+0x90>
   12c94:	cmp	r7, #0
   12c98:	bne	12cd0 <mythread_queue_list_entry_delete@@Base+0xec>
   12c9c:	ldr	r0, [r6, #4]
   12ca0:	cmp	r0, #0
   12ca4:	beq	12cac <mythread_queue_list_entry_delete@@Base+0xc8>
   12ca8:	bl	10d60 <mycore_free@plt>
   12cac:	mov	r0, r6
   12cb0:	bl	10d60 <mycore_free@plt>
   12cb4:	ldrd	r4, [sp]
   12cb8:	mov	r0, #0
   12cbc:	ldrd	r6, [sp, #8]
   12cc0:	ldrd	r8, [sp, #16]
   12cc4:	ldr	sl, [sp, #24]
   12cc8:	add	sp, sp, #28
   12ccc:	pop	{pc}		; (ldr pc, [sp], #4)
   12cd0:	ldr	r0, [r6]
   12cd4:	cmp	r0, #0
   12cd8:	beq	12c9c <mythread_queue_list_entry_delete@@Base+0xb8>
   12cdc:	bl	10268 <mythread_queue_destroy@plt>
   12ce0:	b	12c9c <mythread_queue_list_entry_delete@@Base+0xb8>

00012ce4 <mythread_queue_list_entry_clean@@Base>:
   12ce4:	cmp	r0, #0
   12ce8:	beq	12cf4 <mythread_queue_list_entry_clean@@Base+0x10>
   12cec:	ldr	r0, [r0]
   12cf0:	b	fd04 <mythread_queue_clean@plt>
   12cf4:	bx	lr

00012cf8 <mythread_queue_list_entry_wait_for_done@@Base>:
   12cf8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12cfc:	subs	r4, r1, #0
   12d00:	strd	r6, [sp, #8]
   12d04:	str	r8, [sp, #16]
   12d08:	str	lr, [sp, #20]
   12d0c:	beq	12d68 <mythread_queue_list_entry_wait_for_done@@Base+0x70>
   12d10:	ldr	r1, [r4, #8]
   12d14:	cmp	r1, #0
   12d18:	beq	12d68 <mythread_queue_list_entry_wait_for_done@@Base+0x70>
   12d1c:	ldrd	r2, [r4]
   12d20:	mov	r6, r0
   12d24:	mov	r7, #0
   12d28:	lsl	r5, r7, #2
   12d2c:	ldr	ip, [r3, r7, lsl #2]
   12d30:	ldr	r0, [r2, #16]
   12d34:	cmp	ip, r0
   12d38:	bcs	12d5c <mythread_queue_list_entry_wait_for_done@@Base+0x64>
   12d3c:	ldr	r0, [r6, #24]
   12d40:	bl	10040 <mythread_nanosleep_sleep@plt>
   12d44:	ldrd	r2, [r4]
   12d48:	ldr	ip, [r3, r5]
   12d4c:	ldr	r1, [r2, #16]
   12d50:	cmp	ip, r1
   12d54:	bcc	12d3c <mythread_queue_list_entry_wait_for_done@@Base+0x44>
   12d58:	ldr	r1, [r4, #8]
   12d5c:	add	r7, r7, #1
   12d60:	cmp	r7, r1
   12d64:	bcc	12d28 <mythread_queue_list_entry_wait_for_done@@Base+0x30>
   12d68:	ldrd	r4, [sp]
   12d6c:	ldrd	r6, [sp, #8]
   12d70:	ldr	r8, [sp, #16]
   12d74:	add	sp, sp, #20
   12d78:	pop	{pc}		; (ldr pc, [sp], #4)

00012d7c <mythread_queue_node_malloc_round@@Base>:
   12d7c:	strd	r4, [sp, #-16]!
   12d80:	ldr	r4, [r1]
   12d84:	ldr	r3, [r4, #12]
   12d88:	str	r6, [sp, #8]
   12d8c:	str	lr, [sp, #12]
   12d90:	ldr	lr, [r4, #20]
   12d94:	add	r3, r3, #1
   12d98:	str	r3, [r4, #12]
   12d9c:	cmp	r3, lr
   12da0:	bcc	12df0 <mythread_queue_node_malloc_round@@Base+0x74>
   12da4:	ldr	r3, [r4, #16]
   12da8:	cmp	r0, #0
   12dac:	mov	r5, r1
   12db0:	add	r3, r3, #1
   12db4:	str	r3, [r4, #16]
   12db8:	beq	12dc0 <mythread_queue_node_malloc_round@@Base+0x44>
   12dbc:	bl	10910 <mythread_queue_list_entry_wait_for_done@plt>
   12dc0:	mov	r0, r5
   12dc4:	bl	10934 <mythread_queue_list_entry_clean@plt>
   12dc8:	ldr	r3, [r4, #12]
   12dcc:	add	r3, r3, r3, lsl #1
   12dd0:	ldr	r2, [r4]
   12dd4:	ldr	r1, [r4, #4]
   12dd8:	ldrd	r4, [sp]
   12ddc:	ldr	r6, [sp, #8]
   12de0:	add	sp, sp, #12
   12de4:	ldr	r0, [r2, r1, lsl #2]
   12de8:	add	r0, r0, r3, lsl #2
   12dec:	pop	{pc}		; (ldr pc, [sp], #4)
   12df0:	ldr	r2, [r4, #16]
   12df4:	add	r2, r2, #1
   12df8:	str	r2, [r4, #16]
   12dfc:	b	12dcc <mythread_queue_node_malloc_round@@Base+0x50>

00012e00 <mythread_queue_list_entry_see_for_done@@Base>:
   12e00:	cmp	r0, #0
   12e04:	beq	12e68 <mythread_queue_list_entry_see_for_done@@Base+0x68>
   12e08:	ldr	ip, [r0, #8]
   12e0c:	cmp	ip, #0
   12e10:	beq	12e68 <mythread_queue_list_entry_see_for_done@@Base+0x68>
   12e14:	push	{lr}		; (str lr, [sp, #-4]!)
   12e18:	ldr	lr, [r0]
   12e1c:	ldr	r2, [r0, #4]
   12e20:	ldr	r1, [r2]
   12e24:	ldr	r3, [lr, #16]
   12e28:	cmp	r1, r3
   12e2c:	bcc	12e60 <mythread_queue_list_entry_see_for_done@@Base+0x60>
   12e30:	add	r2, r2, #4
   12e34:	mov	r3, #0
   12e38:	b	12e4c <mythread_queue_list_entry_see_for_done@@Base+0x4c>
   12e3c:	ldr	r0, [r2], #4
   12e40:	ldr	r1, [lr, #16]
   12e44:	cmp	r0, r1
   12e48:	bcc	12e60 <mythread_queue_list_entry_see_for_done@@Base+0x60>
   12e4c:	add	r3, r3, #1
   12e50:	cmp	r3, ip
   12e54:	bne	12e3c <mythread_queue_list_entry_see_for_done@@Base+0x3c>
   12e58:	mov	r0, #1
   12e5c:	pop	{pc}		; (ldr pc, [sp], #4)
   12e60:	mov	r0, #0
   12e64:	pop	{pc}		; (ldr pc, [sp], #4)
   12e68:	mov	r0, #1
   12e6c:	bx	lr

00012e70 <mythread_queue_list_entry_make_batch@@Base>:
   12e70:	cmp	r1, #0
   12e74:	beq	12ea8 <mythread_queue_list_entry_make_batch@@Base+0x38>
   12e78:	ldr	ip, [r0, #4]
   12e7c:	ldr	r0, [r0, #12]
   12e80:	cmp	r0, ip
   12e84:	bhi	12ea8 <mythread_queue_list_entry_make_batch@@Base+0x38>
   12e88:	ldr	r2, [r1, #4]
   12e8c:	mov	r3, #0
   12e90:	add	r2, r2, r0, lsl #2
   12e94:	str	r3, [r2], #4
   12e98:	add	r3, r3, #1
   12e9c:	add	r1, r0, r3
   12ea0:	cmp	r1, ip
   12ea4:	bls	12e94 <mythread_queue_list_entry_make_batch@@Base+0x24>
   12ea8:	bx	lr

00012eac <mythread_queue_list_entry_make_stream@@Base>:
   12eac:	cmp	r1, #0
   12eb0:	beq	12ee0 <mythread_queue_list_entry_make_stream@@Base+0x34>
   12eb4:	ldr	ip, [r0, #4]
   12eb8:	ldr	r3, [r0, #12]
   12ebc:	cmp	r3, ip
   12ec0:	bhi	12ee0 <mythread_queue_list_entry_make_stream@@Base+0x34>
   12ec4:	ldr	r2, [r1, #4]
   12ec8:	mov	r1, #0
   12ecc:	add	r2, r2, r3, lsl #2
   12ed0:	add	r3, r3, #1
   12ed4:	str	r1, [r2], #4
   12ed8:	cmp	r3, ip
   12edc:	bls	12ed0 <mythread_queue_list_entry_make_stream@@Base+0x24>
   12ee0:	bx	lr

00012ee4 <mythread_queue_list_entry_push@@Base>:
   12ee4:	strd	r4, [sp, #-32]!	; 0xffffffe0
   12ee8:	mov	r5, r0
   12eec:	strd	r6, [sp, #8]
   12ef0:	mov	r7, r1
   12ef4:	strd	r8, [sp, #16]
   12ef8:	mov	r9, r2
   12efc:	str	sl, [sp, #24]
   12f00:	mov	sl, r3
   12f04:	ldr	r8, [sp, #36]	; 0x24
   12f08:	str	lr, [sp, #28]
   12f0c:	ldr	r4, [sp, #32]
   12f10:	cmp	r8, #0
   12f14:	beq	13040 <mythread_queue_list_entry_push@@Base+0x15c>
   12f18:	mov	r3, #0
   12f1c:	mov	r1, #20
   12f20:	mov	r0, #1
   12f24:	str	r3, [r8]
   12f28:	bl	feb4 <mycore_calloc@plt>
   12f2c:	subs	r6, r0, #0
   12f30:	beq	13030 <mythread_queue_list_entry_push@@Base+0x14c>
   12f34:	cmp	r4, #0
   12f38:	str	r4, [r6, #8]
   12f3c:	streq	r4, [r6, #4]
   12f40:	bne	13008 <mythread_queue_list_entry_push@@Base+0x124>
   12f44:	cmp	r7, #0
   12f48:	str	sl, [r6]
   12f4c:	beq	12f98 <mythread_queue_list_entry_push@@Base+0xb4>
   12f50:	add	r8, r5, r7, lsl #2
   12f54:	mov	r4, r5
   12f58:	b	12f78 <mythread_queue_list_entry_push@@Base+0x94>
   12f5c:	bl	10e74 <mythread_queue_list_entry_make_stream@plt>
   12f60:	ldr	r3, [r4, #-4]
   12f64:	subs	r0, r3, #0
   12f68:	beq	12f70 <mythread_queue_list_entry_push@@Base+0x8c>
   12f6c:	bl	10088 <mythread_suspend@plt>
   12f70:	cmp	r4, r8
   12f74:	beq	12f98 <mythread_queue_list_entry_push@@Base+0xb4>
   12f78:	ldr	r3, [r4], #4
   12f7c:	mov	r1, r6
   12f80:	ldr	r2, [r3, #32]
   12f84:	mov	r0, r3
   12f88:	cmp	r2, #1
   12f8c:	bne	12f5c <mythread_queue_list_entry_push@@Base+0x78>
   12f90:	bl	10cb8 <mythread_queue_list_entry_make_batch@plt>
   12f94:	b	12f60 <mythread_queue_list_entry_push@@Base+0x7c>
   12f98:	ldr	r3, [r9]
   12f9c:	cmp	r3, #0
   12fa0:	ldrne	r3, [r9, #4]
   12fa4:	streq	r6, [r9]
   12fa8:	strne	r6, [r3, #12]
   12fac:	strne	r3, [r6, #16]
   12fb0:	cmp	r7, #0
   12fb4:	ldr	r3, [r9, #8]
   12fb8:	str	r6, [r9, #4]
   12fbc:	add	r3, r3, #1
   12fc0:	str	r3, [r9, #8]
   12fc4:	beq	12fec <mythread_queue_list_entry_push@@Base+0x108>
   12fc8:	add	r7, r5, r7, lsl #2
   12fcc:	ldr	r3, [r5], #4
   12fd0:	mov	r1, #0
   12fd4:	cmp	r3, r1
   12fd8:	mov	r0, r3
   12fdc:	beq	12fe4 <mythread_queue_list_entry_push@@Base+0x100>
   12fe0:	bl	10454 <mythread_resume@plt>
   12fe4:	cmp	r7, r5
   12fe8:	bne	12fcc <mythread_queue_list_entry_push@@Base+0xe8>
   12fec:	mov	r0, r6
   12ff0:	ldrd	r4, [sp]
   12ff4:	ldrd	r6, [sp, #8]
   12ff8:	ldrd	r8, [sp, #16]
   12ffc:	ldr	sl, [sp, #24]
   13000:	add	sp, sp, #28
   13004:	pop	{pc}		; (ldr pc, [sp], #4)
   13008:	mov	r0, r4
   1300c:	mov	r1, #4
   13010:	bl	feb4 <mycore_calloc@plt>
   13014:	cmp	r0, #0
   13018:	str	r0, [r6, #4]
   1301c:	bne	12f44 <mythread_queue_list_entry_push@@Base+0x60>
   13020:	mov	r0, r6
   13024:	bl	10d60 <mycore_free@plt>
   13028:	cmp	r8, #0
   1302c:	beq	13054 <mythread_queue_list_entry_push@@Base+0x170>
   13030:	mov	r3, #60	; 0x3c
   13034:	mov	r6, #0
   13038:	str	r3, [r8]
   1303c:	b	12fec <mythread_queue_list_entry_push@@Base+0x108>
   13040:	mov	r1, #20
   13044:	mov	r0, #1
   13048:	bl	feb4 <mycore_calloc@plt>
   1304c:	subs	r6, r0, #0
   13050:	bne	12f34 <mythread_queue_list_entry_push@@Base+0x50>
   13054:	mov	r6, #0
   13058:	b	12fec <mythread_queue_list_entry_push@@Base+0x108>

0001305c <mythread_function_see_opt@@Base>:
   1305c:	strd	r4, [sp, #-16]!
   13060:	ldr	r5, [r0, #28]
   13064:	str	r6, [sp, #8]
   13068:	str	lr, [sp, #12]
   1306c:	sub	sp, sp, #8
   13070:	str	r1, [sp, #4]
   13074:	ldr	r1, [r5, #16]
   13078:	ldr	ip, [r1, #8]
   1307c:	cmp	ip, r3
   13080:	movne	r6, #0
   13084:	bne	130b0 <mythread_function_see_opt@@Base+0x54>
   13088:	ldr	r3, [sp, #4]
   1308c:	mov	r4, r0
   13090:	tst	r3, #4
   13094:	bne	130c8 <mythread_function_see_opt@@Base+0x6c>
   13098:	ldr	r3, [sp, #4]
   1309c:	tst	r3, #2
   130a0:	bne	130fc <mythread_function_see_opt@@Base+0xa0>
   130a4:	ldr	r0, [sp, #24]
   130a8:	mov	r6, #0
   130ac:	bl	10040 <mythread_nanosleep_sleep@plt>
   130b0:	mov	r0, r6
   130b4:	add	sp, sp, #8
   130b8:	ldrd	r4, [sp]
   130bc:	ldr	r6, [sp, #8]
   130c0:	add	sp, sp, #12
   130c4:	pop	{pc}		; (ldr pc, [sp], #4)
   130c8:	mov	r0, r5
   130cc:	bl	10568 <mythread_queue_list_see_for_done_by_thread@plt>
   130d0:	cmp	r0, #0
   130d4:	beq	130a4 <mythread_function_see_opt@@Base+0x48>
   130d8:	mov	r3, #4
   130dc:	mov	r0, r5
   130e0:	ldr	r1, [r4, #20]
   130e4:	str	r3, [r4, #12]
   130e8:	bl	10d30 <mythread_mutex_wait@plt>
   130ec:	mov	r3, #0
   130f0:	mov	r6, r3
   130f4:	str	r3, [r4, #12]
   130f8:	b	130b0 <mythread_function_see_opt@@Base+0x54>
   130fc:	mov	r0, r5
   13100:	bl	10568 <mythread_queue_list_see_for_done_by_thread@plt>
   13104:	subs	r6, r0, #0
   13108:	beq	130a4 <mythread_function_see_opt@@Base+0x48>
   1310c:	mov	r0, r5
   13110:	ldr	r1, [r4, #20]
   13114:	bl	105c8 <mythread_mutex_close@plt>
   13118:	ldr	r0, [r4, #24]
   1311c:	bl	10b98 <mythread_nanosleep_destroy@plt>
   13120:	mov	r3, #2
   13124:	str	r3, [r4, #12]
   13128:	b	130b0 <mythread_function_see_opt@@Base+0x54>

0001312c <mythread_function_queue_batch@@Base>:
   1312c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   13130:	strd	r6, [sp, #8]
   13134:	mov	r7, r0
   13138:	strd	r8, [sp, #16]
   1313c:	strd	sl, [sp, #24]
   13140:	mov	sl, #1
   13144:	ldr	r8, [r0, #28]
   13148:	str	lr, [sp, #32]
   1314c:	sub	sp, sp, #20
   13150:	ldr	r1, [r0]
   13154:	mov	r0, r8
   13158:	ldr	r9, [r8, #16]
   1315c:	bl	fdf4 <myhread_increase_id_by_entry_id@plt>
   13160:	mov	r4, r0
   13164:	mov	r0, r8
   13168:	ldr	r1, [r7, #20]
   1316c:	lsl	r6, r4, #2
   13170:	str	r4, [sp, #12]
   13174:	bl	10d30 <mythread_mutex_wait@plt>
   13178:	ldr	r3, [r8, #36]	; 0x24
   1317c:	tst	r3, #1
   13180:	bne	1326c <mythread_function_queue_batch@@Base+0x140>
   13184:	ldr	r4, [r9]
   13188:	cmp	r4, #0
   1318c:	beq	132a4 <mythread_function_queue_batch@@Base+0x178>
   13190:	mov	fp, #0
   13194:	ldm	r4, {r3, r5}
   13198:	ldr	r1, [r5, r6]
   1319c:	ldr	r2, [r3, #16]
   131a0:	cmp	r1, r2
   131a4:	bcs	1324c <mythread_function_queue_batch@@Base+0x120>
   131a8:	ldr	r1, [r5, r6]
   131ac:	ldr	r2, [r3, #20]
   131b0:	ldr	lr, [r5, r6]
   131b4:	ldr	ip, [r3, #20]
   131b8:	udiv	r2, r1, r2
   131bc:	ldr	r1, [r3]
   131c0:	ldr	r0, [r7]
   131c4:	udiv	r3, lr, ip
   131c8:	ldr	r1, [r1, r2, lsl #2]
   131cc:	mls	r3, ip, r3, lr
   131d0:	add	r3, r3, r3, lsl #1
   131d4:	add	r1, r1, r3, lsl #2
   131d8:	ldr	r3, [r7, #4]
   131dc:	blx	r3
   131e0:	ldr	r3, [r5, r6]
   131e4:	ldr	r2, [r8, #4]
   131e8:	ldr	r4, [r4, #12]
   131ec:	add	r3, r3, r2
   131f0:	cmp	r4, #0
   131f4:	str	r3, [r5, r6]
   131f8:	bne	13194 <mythread_function_queue_batch@@Base+0x68>
   131fc:	ldr	r3, [r9, #8]
   13200:	cmp	r3, fp
   13204:	bne	13178 <mythread_function_queue_batch@@Base+0x4c>
   13208:	ldr	ip, [r7, #24]
   1320c:	mov	r3, fp
   13210:	mov	r0, r7
   13214:	ldr	r2, [sp, #12]
   13218:	ldr	r1, [r8, #36]	; 0x24
   1321c:	str	ip, [sp]
   13220:	bl	fe6c <mythread_function_see_opt@plt>
   13224:	cmp	r0, #0
   13228:	beq	13178 <mythread_function_queue_batch@@Base+0x4c>
   1322c:	mov	r0, #0
   13230:	add	sp, sp, #20
   13234:	ldrd	r4, [sp]
   13238:	ldrd	r6, [sp, #8]
   1323c:	ldrd	r8, [sp, #16]
   13240:	ldrd	sl, [sp, #24]
   13244:	add	sp, sp, #32
   13248:	pop	{pc}		; (ldr pc, [sp], #4)
   1324c:	ldr	r4, [r4, #12]
   13250:	add	fp, fp, #1
   13254:	cmp	r4, #0
   13258:	bne	13194 <mythread_function_queue_batch@@Base+0x68>
   1325c:	ldr	r3, [r9, #8]
   13260:	cmp	r3, fp
   13264:	bne	13178 <mythread_function_queue_batch@@Base+0x4c>
   13268:	b	13208 <mythread_function_queue_batch@@Base+0xdc>
   1326c:	str	sl, [r7, #12]
   13270:	ldr	r3, [r8, #36]	; 0x24
   13274:	tst	r3, #1
   13278:	beq	13290 <mythread_function_queue_batch@@Base+0x164>
   1327c:	ldr	r0, [r7, #24]
   13280:	bl	10040 <mythread_nanosleep_sleep@plt>
   13284:	ldr	r3, [r8, #36]	; 0x24
   13288:	tst	r3, #1
   1328c:	bne	1327c <mythread_function_queue_batch@@Base+0x150>
   13290:	ldr	r4, [r9]
   13294:	mov	r3, #0
   13298:	str	r3, [r7, #12]
   1329c:	cmp	r4, #0
   132a0:	bne	13190 <mythread_function_queue_batch@@Base+0x64>
   132a4:	ldr	r3, [r9, #8]
   132a8:	mov	fp, r4
   132ac:	cmp	r3, fp
   132b0:	bne	13178 <mythread_function_queue_batch@@Base+0x4c>
   132b4:	b	13208 <mythread_function_queue_batch@@Base+0xdc>

000132b8 <mythread_function_queue_stream@@Base>:
   132b8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   132bc:	strd	r6, [sp, #8]
   132c0:	mov	r7, r0
   132c4:	strd	r8, [sp, #16]
   132c8:	strd	sl, [sp, #24]
   132cc:	mov	sl, #1
   132d0:	ldr	r8, [r0, #28]
   132d4:	str	lr, [sp, #32]
   132d8:	sub	sp, sp, #20
   132dc:	ldr	r1, [r0]
   132e0:	mov	r0, r8
   132e4:	ldr	r9, [r8, #16]
   132e8:	bl	fdf4 <myhread_increase_id_by_entry_id@plt>
   132ec:	mov	r4, r0
   132f0:	mov	r0, r8
   132f4:	ldr	r1, [r7, #20]
   132f8:	lsl	r6, r4, #2
   132fc:	str	r4, [sp, #12]
   13300:	bl	10d30 <mythread_mutex_wait@plt>
   13304:	ldr	r3, [r8, #36]	; 0x24
   13308:	tst	r3, #1
   1330c:	bne	133f4 <mythread_function_queue_stream@@Base+0x13c>
   13310:	ldr	r4, [r9]
   13314:	cmp	r4, #0
   13318:	beq	1342c <mythread_function_queue_stream@@Base+0x174>
   1331c:	mov	fp, #0
   13320:	ldm	r4, {r3, r5}
   13324:	ldr	r1, [r5, r6]
   13328:	ldr	r2, [r3, #16]
   1332c:	cmp	r1, r2
   13330:	bcs	133d4 <mythread_function_queue_stream@@Base+0x11c>
   13334:	ldr	r1, [r5, r6]
   13338:	ldr	r2, [r3, #20]
   1333c:	ldr	lr, [r5, r6]
   13340:	ldr	ip, [r3, #20]
   13344:	udiv	r2, r1, r2
   13348:	ldr	r1, [r3]
   1334c:	ldr	r0, [r7]
   13350:	udiv	r3, lr, ip
   13354:	ldr	r1, [r1, r2, lsl #2]
   13358:	mls	r3, ip, r3, lr
   1335c:	add	r3, r3, r3, lsl #1
   13360:	add	r1, r1, r3, lsl #2
   13364:	ldr	r3, [r7, #4]
   13368:	blx	r3
   1336c:	ldr	r3, [r5, r6]
   13370:	ldr	r4, [r4, #12]
   13374:	add	r3, r3, #1
   13378:	cmp	r4, #0
   1337c:	str	r3, [r5, r6]
   13380:	bne	13320 <mythread_function_queue_stream@@Base+0x68>
   13384:	ldr	r3, [r9, #8]
   13388:	cmp	r3, fp
   1338c:	bne	13304 <mythread_function_queue_stream@@Base+0x4c>
   13390:	ldr	ip, [r7, #24]
   13394:	mov	r3, fp
   13398:	mov	r0, r7
   1339c:	ldr	r2, [sp, #12]
   133a0:	ldr	r1, [r8, #36]	; 0x24
   133a4:	str	ip, [sp]
   133a8:	bl	fe6c <mythread_function_see_opt@plt>
   133ac:	cmp	r0, #0
   133b0:	beq	13304 <mythread_function_queue_stream@@Base+0x4c>
   133b4:	mov	r0, #0
   133b8:	add	sp, sp, #20
   133bc:	ldrd	r4, [sp]
   133c0:	ldrd	r6, [sp, #8]
   133c4:	ldrd	r8, [sp, #16]
   133c8:	ldrd	sl, [sp, #24]
   133cc:	add	sp, sp, #32
   133d0:	pop	{pc}		; (ldr pc, [sp], #4)
   133d4:	ldr	r4, [r4, #12]
   133d8:	add	fp, fp, #1
   133dc:	cmp	r4, #0
   133e0:	bne	13320 <mythread_function_queue_stream@@Base+0x68>
   133e4:	ldr	r3, [r9, #8]
   133e8:	cmp	r3, fp
   133ec:	bne	13304 <mythread_function_queue_stream@@Base+0x4c>
   133f0:	b	13390 <mythread_function_queue_stream@@Base+0xd8>
   133f4:	str	sl, [r7, #12]
   133f8:	ldr	r3, [r8, #36]	; 0x24
   133fc:	tst	r3, #1
   13400:	beq	13418 <mythread_function_queue_stream@@Base+0x160>
   13404:	ldr	r0, [r7, #24]
   13408:	bl	10040 <mythread_nanosleep_sleep@plt>
   1340c:	ldr	r3, [r8, #36]	; 0x24
   13410:	tst	r3, #1
   13414:	bne	13404 <mythread_function_queue_stream@@Base+0x14c>
   13418:	ldr	r4, [r9]
   1341c:	mov	r3, #0
   13420:	str	r3, [r7, #12]
   13424:	cmp	r4, #0
   13428:	bne	1331c <mythread_function_queue_stream@@Base+0x64>
   1342c:	ldr	r3, [r9, #8]
   13430:	mov	fp, r4
   13434:	cmp	r3, fp
   13438:	bne	13304 <mythread_function_queue_stream@@Base+0x4c>
   1343c:	b	13390 <mythread_function_queue_stream@@Base+0xd8>

00013440 <mythread_function@@Base>:
   13440:	strd	r4, [sp, #-16]!
   13444:	mov	r4, r0
   13448:	ldr	r1, [r0, #20]
   1344c:	ldr	r5, [r0, #28]
   13450:	str	r6, [sp, #8]
   13454:	str	lr, [sp, #12]
   13458:	mov	r0, r5
   1345c:	bl	10d30 <mythread_mutex_wait@plt>
   13460:	b	13494 <mythread_function@@Base+0x54>
   13464:	orr	r3, r3, #4
   13468:	mov	r0, r5
   1346c:	ldr	r1, [r4, #20]
   13470:	str	r3, [r4, #12]
   13474:	bl	10d30 <mythread_mutex_wait@plt>
   13478:	ldr	r3, [r5, #36]	; 0x24
   1347c:	tst	r3, #2
   13480:	bne	134e4 <mythread_function@@Base+0xa4>
   13484:	ldr	r3, [r4, #12]
   13488:	ands	r3, r3, #2
   1348c:	bne	134e4 <mythread_function@@Base+0xa4>
   13490:	str	r3, [r4, #12]
   13494:	mov	r1, r4
   13498:	ldm	r4, {r0, r3}
   1349c:	blx	r3
   134a0:	ldr	r3, [r4, #12]
   134a4:	orr	r3, r3, #8
   134a8:	str	r3, [r4, #12]
   134ac:	ldr	r3, [r4, #12]
   134b0:	tst	r3, #1
   134b4:	ldr	r3, [r4, #12]
   134b8:	beq	13464 <mythread_function@@Base+0x24>
   134bc:	tst	r3, #1
   134c0:	beq	13478 <mythread_function@@Base+0x38>
   134c4:	ldr	r0, [r4, #24]
   134c8:	bl	10040 <mythread_nanosleep_sleep@plt>
   134cc:	ldr	r3, [r4, #12]
   134d0:	tst	r3, #1
   134d4:	bne	134c4 <mythread_function@@Base+0x84>
   134d8:	ldr	r3, [r5, #36]	; 0x24
   134dc:	tst	r3, #2
   134e0:	beq	13484 <mythread_function@@Base+0x44>
   134e4:	mov	r0, r5
   134e8:	ldr	r1, [r4, #20]
   134ec:	bl	105c8 <mythread_mutex_close@plt>
   134f0:	ldr	r0, [r4, #24]
   134f4:	bl	10b98 <mythread_nanosleep_destroy@plt>
   134f8:	mov	r3, #2
   134fc:	ldr	r6, [sp, #8]
   13500:	mov	r0, #0
   13504:	str	r3, [r4, #12]
   13508:	ldrd	r4, [sp]
   1350c:	add	sp, sp, #12
   13510:	pop	{pc}		; (ldr pc, [sp], #4)

00013514 <mycore_power@@Base>:
   13514:	cmp	r1, #0
   13518:	mov	r3, r0
   1351c:	mov	r0, #1
   13520:	beq	1353c <mycore_power@@Base+0x28>
   13524:	tst	r1, #1
   13528:	mulne	r0, r3, r0
   1352c:	lsrs	r1, r1, #1
   13530:	mul	r3, r3, r3
   13534:	bne	13524 <mycore_power@@Base+0x10>
   13538:	bx	lr
   1353c:	bx	lr

00013540 <mycore_strncasecmp@@Base>:
   13540:	cmp	r1, #0
   13544:	cmpne	r0, #0
   13548:	beq	135d4 <mycore_strncasecmp@@Base+0x94>
   1354c:	cmp	r2, #0
   13550:	beq	135f4 <mycore_strncasecmp@@Base+0xb4>
   13554:	ldr	r3, [pc, #168]	; 13604 <mycore_strncasecmp@@Base+0xc4>
   13558:	strd	r4, [sp, #-16]!
   1355c:	str	r6, [sp, #8]
   13560:	str	lr, [sp, #12]
   13564:	ldrb	ip, [r0]
   13568:	add	r3, pc, r3
   1356c:	ldrb	lr, [r1]
   13570:	ldrb	ip, [r3, ip]
   13574:	ldrb	r3, [r3, lr]
   13578:	cmp	ip, r3
   1357c:	bne	135fc <mycore_strncasecmp@@Base+0xbc>
   13580:	ldr	ip, [pc, #128]	; 13608 <mycore_strncasecmp@@Base+0xc8>
   13584:	mov	r3, r1
   13588:	sub	lr, r2, #1
   1358c:	add	r1, r1, lr
   13590:	rsb	r5, r3, #1
   13594:	add	ip, pc, ip
   13598:	b	135b4 <mycore_strncasecmp@@Base+0x74>
   1359c:	ldrb	r4, [r0, #1]!
   135a0:	ldrb	lr, [r3, #1]!
   135a4:	ldrb	r4, [ip, r4]
   135a8:	ldrb	lr, [ip, lr]
   135ac:	cmp	r4, lr
   135b0:	bne	135e0 <mycore_strncasecmp@@Base+0xa0>
   135b4:	cmp	r3, r1
   135b8:	add	r6, r5, r3
   135bc:	bne	1359c <mycore_strncasecmp@@Base+0x5c>
   135c0:	mov	r0, #0
   135c4:	ldrd	r4, [sp]
   135c8:	ldr	r6, [sp, #8]
   135cc:	add	sp, sp, #12
   135d0:	pop	{pc}		; (ldr pc, [sp], #4)
   135d4:	subs	r0, r0, r1
   135d8:	movne	r0, #1
   135dc:	bx	lr
   135e0:	sub	r0, r2, r6
   135e4:	ldrd	r4, [sp]
   135e8:	ldr	r6, [sp, #8]
   135ec:	add	sp, sp, #12
   135f0:	pop	{pc}		; (ldr pc, [sp], #4)
   135f4:	mov	r0, r2
   135f8:	bx	lr
   135fc:	mov	r0, r2
   13600:	b	135c4 <mycore_strncasecmp@@Base+0x84>
   13604:	andeq	sp, r1, r0, ror sp
   13608:	andeq	sp, r1, r4, asr #26

0001360c <mycore_strcasecmp@@Base>:
   1360c:	cmp	r1, #0
   13610:	cmpne	r0, #0
   13614:	bne	13624 <mycore_strcasecmp@@Base+0x18>
   13618:	subs	r0, r0, r1
   1361c:	movne	r0, #1
   13620:	bx	lr
   13624:	ldr	r3, [pc, #136]	; 136b4 <mycore_strcasecmp@@Base+0xa8>
   13628:	strd	r4, [sp, #-12]!
   1362c:	ldrb	ip, [r1]
   13630:	str	lr, [sp, #8]
   13634:	ldrb	r2, [r0]
   13638:	add	r3, pc, r3
   1363c:	ldrb	ip, [r3, ip]
   13640:	ldrb	lr, [r3, r2]
   13644:	cmp	lr, ip
   13648:	bne	136a4 <mycore_strcasecmp@@Base+0x98>
   1364c:	cmp	r2, #0
   13650:	beq	136ac <mycore_strcasecmp@@Base+0xa0>
   13654:	mov	r2, r3
   13658:	rsb	r4, r0, #1
   1365c:	b	13668 <mycore_strcasecmp@@Base+0x5c>
   13660:	cmp	r3, #0
   13664:	beq	13694 <mycore_strcasecmp@@Base+0x88>
   13668:	add	r5, r4, r0
   1366c:	ldrb	ip, [r1, #1]!
   13670:	ldrb	r3, [r0, #1]!
   13674:	ldrb	ip, [r2, ip]
   13678:	ldrb	lr, [r2, r3]
   1367c:	cmp	lr, ip
   13680:	beq	13660 <mycore_strcasecmp@@Base+0x54>
   13684:	add	r0, r5, #1
   13688:	ldrd	r4, [sp]
   1368c:	add	sp, sp, #8
   13690:	pop	{pc}		; (ldr pc, [sp], #4)
   13694:	ldrd	r4, [sp]
   13698:	add	sp, sp, #8
   1369c:	mov	r0, r3
   136a0:	pop	{pc}		; (ldr pc, [sp], #4)
   136a4:	mov	r0, #1
   136a8:	b	13688 <mycore_strcasecmp@@Base+0x7c>
   136ac:	mov	r0, r2
   136b0:	b	13688 <mycore_strcasecmp@@Base+0x7c>
   136b4:	andeq	sp, r1, r0, lsr #25

000136b8 <mycore_strncmp@@Base>:
   136b8:	cmp	r1, #0
   136bc:	cmpne	r0, #0
   136c0:	beq	13724 <mycore_strncmp@@Base+0x6c>
   136c4:	cmp	r2, #0
   136c8:	beq	13740 <mycore_strncmp@@Base+0x88>
   136cc:	ldrb	ip, [r1]
   136d0:	ldrb	r3, [r0]
   136d4:	cmp	ip, r3
   136d8:	bne	13740 <mycore_strncmp@@Base+0x88>
   136dc:	mov	r3, r1
   136e0:	sub	ip, r2, #1
   136e4:	strd	r4, [sp, #-12]!
   136e8:	add	r1, r1, ip
   136ec:	rsb	r4, r3, #1
   136f0:	str	lr, [sp, #8]
   136f4:	b	13708 <mycore_strncmp@@Base+0x50>
   136f8:	ldrb	lr, [r0, #1]!
   136fc:	ldrb	ip, [r3, #1]!
   13700:	cmp	lr, ip
   13704:	bne	13730 <mycore_strncmp@@Base+0x78>
   13708:	cmp	r3, r1
   1370c:	add	r5, r4, r3
   13710:	bne	136f8 <mycore_strncmp@@Base+0x40>
   13714:	ldrd	r4, [sp]
   13718:	add	sp, sp, #8
   1371c:	mov	r0, #0
   13720:	pop	{pc}		; (ldr pc, [sp], #4)
   13724:	subs	r0, r0, r1
   13728:	movne	r0, #1
   1372c:	bx	lr
   13730:	sub	r0, r2, r5
   13734:	ldrd	r4, [sp]
   13738:	add	sp, sp, #8
   1373c:	pop	{pc}		; (ldr pc, [sp], #4)
   13740:	mov	r0, r2
   13744:	bx	lr

00013748 <mycore_strcmp@@Base>:
   13748:	cmp	r1, #0
   1374c:	cmpne	r0, #0
   13750:	bne	13760 <mycore_strcmp@@Base+0x18>
   13754:	subs	r0, r0, r1
   13758:	movne	r0, #1
   1375c:	bx	lr
   13760:	ldrb	r3, [r0]
   13764:	ldrb	r2, [r1]
   13768:	cmp	r2, r3
   1376c:	bne	137b0 <mycore_strcmp@@Base+0x68>
   13770:	cmp	r2, #0
   13774:	beq	137b8 <mycore_strcmp@@Base+0x70>
   13778:	rsb	ip, r0, #1
   1377c:	push	{lr}		; (str lr, [sp, #-4]!)
   13780:	b	1378c <mycore_strcmp@@Base+0x44>
   13784:	cmp	r3, #0
   13788:	beq	137a8 <mycore_strcmp@@Base+0x60>
   1378c:	add	lr, ip, r0
   13790:	ldrb	r3, [r1, #1]!
   13794:	ldrb	r2, [r0, #1]!
   13798:	cmp	r3, r2
   1379c:	beq	13784 <mycore_strcmp@@Base+0x3c>
   137a0:	add	r0, lr, #1
   137a4:	pop	{pc}		; (ldr pc, [sp], #4)
   137a8:	mov	r0, r3
   137ac:	pop	{pc}		; (ldr pc, [sp], #4)
   137b0:	mov	r0, #1
   137b4:	bx	lr
   137b8:	mov	r0, r2
   137bc:	bx	lr

000137c0 <mycore_strcmp_ws@@Base>:
   137c0:	clz	r3, r1
   137c4:	cmp	r0, #0
   137c8:	lsr	r3, r3, #5
   137cc:	moveq	r3, #1
   137d0:	cmp	r3, #0
   137d4:	beq	137e4 <mycore_strcmp_ws@@Base+0x24>
   137d8:	subs	r0, r0, r1
   137dc:	movne	r0, #1
   137e0:	bx	lr
   137e4:	ldrb	r2, [r0]
   137e8:	ldrb	ip, [r1]
   137ec:	cmp	ip, r2
   137f0:	bne	1387c <mycore_strcmp_ws@@Base+0xbc>
   137f4:	sub	r2, ip, #9
   137f8:	strd	r4, [sp, #-12]!
   137fc:	str	lr, [sp, #8]
   13800:	sub	lr, ip, #12
   13804:	cmp	lr, #1
   13808:	cmphi	r2, #1
   1380c:	movls	r2, #1
   13810:	movhi	r2, #0
   13814:	tst	ip, #223	; 0xdf
   13818:	moveq	r2, #1
   1381c:	cmp	r2, #0
   13820:	bne	13864 <mycore_strcmp_ws@@Base+0xa4>
   13824:	rsb	r4, r0, #1
   13828:	ldrb	r2, [r1, #1]!
   1382c:	add	r5, r4, r0
   13830:	ldrb	ip, [r0, #1]!
   13834:	sub	r3, r2, #12
   13838:	sub	lr, r2, #9
   1383c:	cmp	r2, ip
   13840:	bne	13874 <mycore_strcmp_ws@@Base+0xb4>
   13844:	cmp	lr, #1
   13848:	cmphi	r3, #1
   1384c:	movls	r3, #1
   13850:	movhi	r3, #0
   13854:	tst	r2, #223	; 0xdf
   13858:	moveq	r3, #1
   1385c:	cmp	r3, #0
   13860:	beq	13828 <mycore_strcmp_ws@@Base+0x68>
   13864:	mov	r0, #0
   13868:	ldrd	r4, [sp]
   1386c:	add	sp, sp, #8
   13870:	pop	{pc}		; (ldr pc, [sp], #4)
   13874:	add	r0, r5, #1
   13878:	b	13868 <mycore_strcmp_ws@@Base+0xa8>
   1387c:	mov	r0, #1
   13880:	bx	lr

00013884 <mycore_ustrcasecmp_without_checks_by_secondary@@Base>:
   13884:	ldrb	r2, [r0]
   13888:	cmp	r2, #0
   1388c:	beq	138f8 <mycore_ustrcasecmp_without_checks_by_secondary@@Base+0x74>
   13890:	ldr	r3, [pc, #112]	; 13908 <mycore_ustrcasecmp_without_checks_by_secondary@@Base+0x84>
   13894:	ldrb	ip, [r1]
   13898:	add	r3, pc, r3
   1389c:	ldrb	r2, [r3, r2]
   138a0:	ldrb	r3, [r3, ip]
   138a4:	cmp	r2, r3
   138a8:	bne	13900 <mycore_ustrcasecmp_without_checks_by_secondary@@Base+0x7c>
   138ac:	ldrb	r3, [r0, #1]!
   138b0:	ldr	r2, [pc, #84]	; 1390c <mycore_ustrcasecmp_without_checks_by_secondary@@Base+0x88>
   138b4:	cmp	r3, #0
   138b8:	add	r2, pc, r2
   138bc:	beq	138f8 <mycore_ustrcasecmp_without_checks_by_secondary@@Base+0x74>
   138c0:	push	{lr}		; (str lr, [sp, #-4]!)
   138c4:	b	138d4 <mycore_ustrcasecmp_without_checks_by_secondary@@Base+0x50>
   138c8:	ldrb	r3, [r0, #1]!
   138cc:	cmp	r3, #0
   138d0:	beq	138f0 <mycore_ustrcasecmp_without_checks_by_secondary@@Base+0x6c>
   138d4:	ldrb	lr, [r1, #1]!
   138d8:	ldrb	ip, [r2, r3]
   138dc:	ldrb	r3, [r2, lr]
   138e0:	cmp	ip, r3
   138e4:	beq	138c8 <mycore_ustrcasecmp_without_checks_by_secondary@@Base+0x44>
   138e8:	mov	r0, #0
   138ec:	pop	{pc}		; (ldr pc, [sp], #4)
   138f0:	mov	r0, #1
   138f4:	pop	{pc}		; (ldr pc, [sp], #4)
   138f8:	mov	r0, #1
   138fc:	bx	lr
   13900:	mov	r0, #0
   13904:	bx	lr
   13908:	andeq	sp, r1, r0, asr #20
   1390c:	andeq	sp, r1, r0, lsr #20

00013910 <mycore_utils_avl_tree_create@@Base>:
   13910:	mov	r1, #4
   13914:	mov	r0, #1
   13918:	b	feb4 <mycore_calloc@plt>

0001391c <mycore_utils_avl_tree_init@@Base>:
   1391c:	str	r4, [sp, #-8]!
   13920:	mov	r4, r0
   13924:	str	lr, [sp, #4]
   13928:	bl	ffbc <mcobject_create@plt>
   1392c:	cmp	r0, #0
   13930:	str	r0, [r4]
   13934:	moveq	r0, #2
   13938:	beq	13950 <mycore_utils_avl_tree_init@@Base+0x34>
   1393c:	mov	r2, #24
   13940:	mov	r1, #256	; 0x100
   13944:	bl	1070c <mcobject_init@plt>
   13948:	adds	r0, r0, #0
   1394c:	movne	r0, #1
   13950:	ldr	r4, [sp]
   13954:	add	sp, sp, #4
   13958:	pop	{pc}		; (ldr pc, [sp], #4)

0001395c <mycore_utils_avl_tree_clean@@Base>:
   1395c:	ldr	r0, [r0]
   13960:	b	10f04 <mcobject_clean@plt>

00013964 <mycore_utils_avl_tree_destroy@@Base>:
   13964:	strd	r4, [sp, #-16]!
   13968:	subs	r4, r0, #0
   1396c:	str	r6, [sp, #8]
   13970:	str	lr, [sp, #12]
   13974:	beq	13990 <mycore_utils_avl_tree_destroy@@Base+0x2c>
   13978:	mov	r5, r1
   1397c:	mov	r1, #1
   13980:	ldr	r0, [r4]
   13984:	bl	fd70 <mcobject_destroy@plt>
   13988:	cmp	r5, #0
   1398c:	bne	139a4 <mycore_utils_avl_tree_destroy@@Base+0x40>
   13990:	mov	r0, r4
   13994:	ldrd	r4, [sp]
   13998:	ldr	r6, [sp, #8]
   1399c:	add	sp, sp, #12
   139a0:	pop	{pc}		; (ldr pc, [sp], #4)
   139a4:	mov	r0, r4
   139a8:	mov	r4, #0
   139ac:	bl	10d60 <mycore_free@plt>
   139b0:	b	13990 <mycore_utils_avl_tree_destroy@@Base+0x2c>

000139b4 <mycore_utils_avl_tree_node_create_root@@Base>:
   139b4:	strd	r4, [sp, #-16]!
   139b8:	mov	r4, r1
   139bc:	mov	r1, #0
   139c0:	ldr	r0, [r0]
   139c4:	mov	r5, r2
   139c8:	str	r6, [sp, #8]
   139cc:	str	lr, [sp, #12]
   139d0:	bl	109f4 <mcobject_malloc@plt>
   139d4:	mov	r1, #0
   139d8:	str	r1, [r0, #8]
   139dc:	str	r1, [r0, #12]
   139e0:	str	r1, [r0, #16]
   139e4:	str	r1, [r0, #20]
   139e8:	ldr	r6, [sp, #8]
   139ec:	str	r5, [r0]
   139f0:	str	r4, [r0, #4]
   139f4:	ldrd	r4, [sp]
   139f8:	add	sp, sp, #12
   139fc:	pop	{pc}		; (ldr pc, [sp], #4)

00013a00 <mycore_utils_avl_tree_node_clean@@Base>:
   13a00:	mov	r3, #0
   13a04:	str	r3, [r0]
   13a08:	str	r3, [r0, #4]
   13a0c:	str	r3, [r0, #8]
   13a10:	str	r3, [r0, #12]
   13a14:	str	r3, [r0, #16]
   13a18:	str	r3, [r0, #20]
   13a1c:	bx	lr

00013a20 <mycore_utils_avl_tree_node_height@@Base>:
   13a20:	cmp	r0, #0
   13a24:	ldrshne	r0, [r0, #20]
   13a28:	bx	lr

00013a2c <mycore_utils_avl_tree_node_balance_factor@@Base>:
   13a2c:	strd	r4, [sp, #-16]!
   13a30:	mov	r5, r0
   13a34:	ldr	r0, [r0, #12]
   13a38:	str	r6, [sp, #8]
   13a3c:	str	lr, [sp, #12]
   13a40:	bl	10f4c <mycore_utils_avl_tree_node_height@plt>
   13a44:	mov	r4, r0
   13a48:	ldr	r0, [r5, #8]
   13a4c:	bl	10f4c <mycore_utils_avl_tree_node_height@plt>
   13a50:	sub	r0, r4, r0
   13a54:	ldrd	r4, [sp]
   13a58:	sxth	r0, r0
   13a5c:	ldr	r6, [sp, #8]
   13a60:	add	sp, sp, #12
   13a64:	pop	{pc}		; (ldr pc, [sp], #4)

00013a68 <mycore_utils_avl_tree_node_set_height@@Base>:
   13a68:	strd	r4, [sp, #-16]!
   13a6c:	mov	r5, r0
   13a70:	ldr	r0, [r0, #8]
   13a74:	str	r6, [sp, #8]
   13a78:	str	lr, [sp, #12]
   13a7c:	bl	10f4c <mycore_utils_avl_tree_node_height@plt>
   13a80:	mov	r4, r0
   13a84:	ldr	r0, [r5, #12]
   13a88:	bl	10f4c <mycore_utils_avl_tree_node_height@plt>
   13a8c:	cmp	r4, r0
   13a90:	ldr	r6, [sp, #8]
   13a94:	movge	r0, r4
   13a98:	add	r0, r0, #1
   13a9c:	strh	r0, [r5, #20]
   13aa0:	ldrd	r4, [sp]
   13aa4:	add	sp, sp, #12
   13aa8:	pop	{pc}		; (ldr pc, [sp], #4)

00013aac <mycore_utils_avl_tree_node_rotate_right@@Base>:
   13aac:	str	r4, [sp, #-8]!
   13ab0:	ldr	r4, [r0, #8]
   13ab4:	ldr	r1, [r0, #16]
   13ab8:	ldr	r2, [r4, #12]
   13abc:	str	lr, [sp, #4]
   13ac0:	str	r1, [r4, #16]
   13ac4:	cmp	r2, #0
   13ac8:	strne	r0, [r2, #16]
   13acc:	str	r2, [r0, #8]
   13ad0:	str	r4, [r0, #16]
   13ad4:	str	r0, [r4, #12]
   13ad8:	bl	10658 <mycore_utils_avl_tree_node_set_height@plt>
   13adc:	mov	r0, r4
   13ae0:	bl	10658 <mycore_utils_avl_tree_node_set_height@plt>
   13ae4:	mov	r0, r4
   13ae8:	ldr	r4, [sp]
   13aec:	add	sp, sp, #4
   13af0:	pop	{pc}		; (ldr pc, [sp], #4)

00013af4 <mycore_utils_avl_tree_node_rotate_left@@Base>:
   13af4:	str	r4, [sp, #-8]!
   13af8:	ldr	r4, [r0, #12]
   13afc:	ldr	r1, [r0, #16]
   13b00:	ldr	r2, [r4, #8]
   13b04:	str	lr, [sp, #4]
   13b08:	str	r1, [r4, #16]
   13b0c:	cmp	r2, #0
   13b10:	strne	r0, [r2, #16]
   13b14:	str	r2, [r0, #12]
   13b18:	str	r4, [r0, #16]
   13b1c:	str	r0, [r4, #8]
   13b20:	bl	10658 <mycore_utils_avl_tree_node_set_height@plt>
   13b24:	mov	r0, r4
   13b28:	bl	10658 <mycore_utils_avl_tree_node_set_height@plt>
   13b2c:	mov	r0, r4
   13b30:	ldr	r4, [sp]
   13b34:	add	sp, sp, #4
   13b38:	pop	{pc}		; (ldr pc, [sp], #4)

00013b3c <mycore_utils_avl_tree_node_balance@@Base>:
   13b3c:	strd	r4, [sp, #-16]!
   13b40:	mov	r5, r0
   13b44:	ldr	r0, [r0, #8]
   13b48:	str	r6, [sp, #8]
   13b4c:	mov	r6, r1
   13b50:	str	lr, [sp, #12]
   13b54:	bl	10f4c <mycore_utils_avl_tree_node_height@plt>
   13b58:	mov	r4, r0
   13b5c:	ldr	r0, [r5, #12]
   13b60:	bl	10f4c <mycore_utils_avl_tree_node_height@plt>
   13b64:	cmp	r4, r0
   13b68:	sub	r3, r0, r4
   13b6c:	movlt	r4, r0
   13b70:	cmn	r3, #2
   13b74:	add	r4, r4, #1
   13b78:	strh	r4, [r5, #20]
   13b7c:	beq	13bcc <mycore_utils_avl_tree_node_balance@@Base+0x90>
   13b80:	cmp	r3, #2
   13b84:	bne	13c10 <mycore_utils_avl_tree_node_balance@@Base+0xd4>
   13b88:	ldr	r0, [r5, #12]
   13b8c:	bl	fd4c <mycore_utils_avl_tree_node_balance_factor@plt>
   13b90:	cmp	r0, #0
   13b94:	blt	13c40 <mycore_utils_avl_tree_node_balance@@Base+0x104>
   13b98:	ldr	r4, [r5, #16]
   13b9c:	cmp	r4, #0
   13ba0:	beq	13c80 <mycore_utils_avl_tree_node_balance@@Base+0x144>
   13ba4:	ldr	r3, [r4, #12]
   13ba8:	mov	r0, r5
   13bac:	cmp	r3, r5
   13bb0:	beq	13c5c <mycore_utils_avl_tree_node_balance@@Base+0x120>
   13bb4:	bl	10ba4 <mycore_utils_avl_tree_node_rotate_left@plt>
   13bb8:	str	r0, [r4, #8]
   13bbc:	ldrd	r4, [sp]
   13bc0:	ldr	r6, [sp, #8]
   13bc4:	add	sp, sp, #12
   13bc8:	pop	{pc}		; (ldr pc, [sp], #4)
   13bcc:	ldr	r0, [r5, #8]
   13bd0:	bl	fd4c <mycore_utils_avl_tree_node_balance_factor@plt>
   13bd4:	cmp	r0, #0
   13bd8:	bgt	13c30 <mycore_utils_avl_tree_node_balance@@Base+0xf4>
   13bdc:	ldr	r4, [r5, #16]
   13be0:	cmp	r4, #0
   13be4:	beq	13c68 <mycore_utils_avl_tree_node_balance@@Base+0x12c>
   13be8:	ldr	r3, [r4, #12]
   13bec:	mov	r0, r5
   13bf0:	cmp	r3, r5
   13bf4:	beq	13c50 <mycore_utils_avl_tree_node_balance@@Base+0x114>
   13bf8:	bl	fcec <mycore_utils_avl_tree_node_rotate_right@plt>
   13bfc:	str	r0, [r4, #8]
   13c00:	ldrd	r4, [sp]
   13c04:	ldr	r6, [sp, #8]
   13c08:	add	sp, sp, #12
   13c0c:	pop	{pc}		; (ldr pc, [sp], #4)
   13c10:	ldr	r0, [r5, #16]
   13c14:	cmp	r0, #0
   13c18:	streq	r5, [r6]
   13c1c:	ldreq	r0, [r5, #16]
   13c20:	ldrd	r4, [sp]
   13c24:	ldr	r6, [sp, #8]
   13c28:	add	sp, sp, #12
   13c2c:	pop	{pc}		; (ldr pc, [sp], #4)
   13c30:	ldr	r0, [r5, #8]
   13c34:	bl	10ba4 <mycore_utils_avl_tree_node_rotate_left@plt>
   13c38:	str	r0, [r5, #8]
   13c3c:	b	13bdc <mycore_utils_avl_tree_node_balance@@Base+0xa0>
   13c40:	ldr	r0, [r5, #12]
   13c44:	bl	fcec <mycore_utils_avl_tree_node_rotate_right@plt>
   13c48:	str	r0, [r5, #12]
   13c4c:	b	13b98 <mycore_utils_avl_tree_node_balance@@Base+0x5c>
   13c50:	bl	fcec <mycore_utils_avl_tree_node_rotate_right@plt>
   13c54:	str	r0, [r4, #12]
   13c58:	b	13c20 <mycore_utils_avl_tree_node_balance@@Base+0xe4>
   13c5c:	bl	10ba4 <mycore_utils_avl_tree_node_rotate_left@plt>
   13c60:	str	r0, [r4, #12]
   13c64:	b	13c20 <mycore_utils_avl_tree_node_balance@@Base+0xe4>
   13c68:	mov	r0, r5
   13c6c:	ldrd	r4, [sp]
   13c70:	ldr	r6, [sp, #8]
   13c74:	ldr	lr, [sp, #12]
   13c78:	add	sp, sp, #16
   13c7c:	b	fcec <mycore_utils_avl_tree_node_rotate_right@plt>
   13c80:	mov	r0, r5
   13c84:	ldrd	r4, [sp]
   13c88:	ldr	r6, [sp, #8]
   13c8c:	ldr	lr, [sp, #12]
   13c90:	add	sp, sp, #16
   13c94:	b	10ba4 <mycore_utils_avl_tree_node_rotate_left@plt>

00013c98 <mycore_utils_avl_tree_add@@Base>:
   13c98:	strd	r4, [sp, #-24]!	; 0xffffffe8
   13c9c:	mov	r5, r2
   13ca0:	ldr	r4, [r1]
   13ca4:	strd	r6, [sp, #8]
   13ca8:	mov	r7, r1
   13cac:	str	r8, [sp, #16]
   13cb0:	mov	r8, r3
   13cb4:	str	lr, [sp, #20]
   13cb8:	cmp	r4, #0
   13cbc:	beq	13d58 <mycore_utils_avl_tree_add@@Base+0xc0>
   13cc0:	mov	r1, #0
   13cc4:	ldr	r0, [r0]
   13cc8:	bl	109f4 <mcobject_malloc@plt>
   13ccc:	mov	r6, r0
   13cd0:	bl	10f58 <mycore_utils_avl_tree_node_clean@plt>
   13cd4:	b	13ce8 <mycore_utils_avl_tree_add@@Base+0x50>
   13cd8:	ldr	r1, [r4, #8]
   13cdc:	cmp	r1, #0
   13ce0:	beq	13d44 <mycore_utils_avl_tree_add@@Base+0xac>
   13ce4:	mov	r4, r1
   13ce8:	ldr	r1, [r4, #4]
   13cec:	cmp	r1, r5
   13cf0:	beq	13d3c <mycore_utils_avl_tree_add@@Base+0xa4>
   13cf4:	bhi	13cd8 <mycore_utils_avl_tree_add@@Base+0x40>
   13cf8:	ldr	r1, [r4, #12]
   13cfc:	cmp	r1, #0
   13d00:	bne	13ce4 <mycore_utils_avl_tree_add@@Base+0x4c>
   13d04:	str	r6, [r4, #12]
   13d08:	str	r8, [r6]
   13d0c:	str	r5, [r6, #4]
   13d10:	str	r4, [r6, #16]
   13d14:	mov	r0, r6
   13d18:	mov	r1, r7
   13d1c:	bl	109ac <mycore_utils_avl_tree_node_balance@plt>
   13d20:	subs	r6, r0, #0
   13d24:	bne	13d14 <mycore_utils_avl_tree_add@@Base+0x7c>
   13d28:	ldrd	r4, [sp]
   13d2c:	ldrd	r6, [sp, #8]
   13d30:	ldr	r8, [sp, #16]
   13d34:	add	sp, sp, #20
   13d38:	pop	{pc}		; (ldr pc, [sp], #4)
   13d3c:	str	r8, [r4]
   13d40:	b	13d28 <mycore_utils_avl_tree_add@@Base+0x90>
   13d44:	str	r6, [r4, #8]
   13d48:	str	r8, [r6]
   13d4c:	str	r5, [r6, #4]
   13d50:	str	r4, [r6, #16]
   13d54:	b	13d14 <mycore_utils_avl_tree_add@@Base+0x7c>
   13d58:	mov	r2, r3
   13d5c:	mov	r1, r5
   13d60:	bl	10e68 <mycore_utils_avl_tree_node_create_root@plt>
   13d64:	str	r0, [r7]
   13d68:	b	13d28 <mycore_utils_avl_tree_add@@Base+0x90>

00013d6c <mycore_utils_avl_tree_find_min@@Base>:
   13d6c:	cmp	r0, #0
   13d70:	bne	13d7c <mycore_utils_avl_tree_find_min@@Base+0x10>
   13d74:	b	13d8c <mycore_utils_avl_tree_find_min@@Base+0x20>
   13d78:	mov	r0, r3
   13d7c:	ldr	r3, [r0, #12]
   13d80:	cmp	r3, #0
   13d84:	bne	13d78 <mycore_utils_avl_tree_find_min@@Base+0xc>
   13d88:	bx	lr
   13d8c:	bx	lr

00013d90 <mycore_utils_avl_tree_rotate_for_delete@@Base>:
   13d90:	cmp	r1, #0
   13d94:	mov	ip, r0
   13d98:	str	r4, [sp, #-8]!
   13d9c:	mov	r4, r2
   13da0:	ldr	r3, [r0, #16]
   13da4:	str	lr, [sp, #4]
   13da8:	beq	13e5c <mycore_utils_avl_tree_rotate_for_delete@@Base+0xcc>
   13dac:	ldr	r2, [r0, #8]
   13db0:	cmp	r2, r1
   13db4:	beq	13e38 <mycore_utils_avl_tree_rotate_for_delete@@Base+0xa8>
   13db8:	ldr	r0, [r1, #16]
   13dbc:	mov	lr, #0
   13dc0:	str	lr, [r0, #12]
   13dc4:	ldr	r0, [ip, #12]
   13dc8:	str	r2, [r1, #8]
   13dcc:	ldr	r2, [ip, #8]
   13dd0:	str	r0, [r1, #12]
   13dd4:	mov	r0, r1
   13dd8:	str	r3, [r1, #16]
   13ddc:	ldr	r3, [ip, #12]
   13de0:	cmp	r2, lr
   13de4:	strne	r1, [r2, #16]
   13de8:	cmp	r3, #0
   13dec:	beq	13df4 <mycore_utils_avl_tree_rotate_for_delete@@Base+0x64>
   13df0:	str	r1, [r3, #16]
   13df4:	ldr	r3, [ip, #16]
   13df8:	cmp	r3, #0
   13dfc:	streq	r1, [r4]
   13e00:	beq	13e14 <mycore_utils_avl_tree_rotate_for_delete@@Base+0x84>
   13e04:	ldr	r2, [r3, #8]
   13e08:	cmp	r2, ip
   13e0c:	streq	r1, [r3, #8]
   13e10:	strne	r1, [r3, #12]
   13e14:	cmp	r0, #0
   13e18:	beq	13e2c <mycore_utils_avl_tree_rotate_for_delete@@Base+0x9c>
   13e1c:	mov	r1, r4
   13e20:	bl	109ac <mycore_utils_avl_tree_node_balance@plt>
   13e24:	cmp	r0, #0
   13e28:	bne	13e1c <mycore_utils_avl_tree_rotate_for_delete@@Base+0x8c>
   13e2c:	ldr	r4, [sp]
   13e30:	add	sp, sp, #4
   13e34:	pop	{pc}		; (ldr pc, [sp], #4)
   13e38:	ldr	r2, [ip, #12]
   13e3c:	ldr	r0, [r1, #8]
   13e40:	strd	r2, [r1, #12]
   13e44:	ldr	r3, [ip, #12]
   13e48:	cmp	r0, #0
   13e4c:	moveq	r0, r1
   13e50:	cmp	r3, #0
   13e54:	bne	13df0 <mycore_utils_avl_tree_rotate_for_delete@@Base+0x60>
   13e58:	b	13df4 <mycore_utils_avl_tree_rotate_for_delete@@Base+0x64>
   13e5c:	ldr	r2, [r0, #12]
   13e60:	cmp	r3, #0
   13e64:	streq	r2, [r4]
   13e68:	beq	13e2c <mycore_utils_avl_tree_rotate_for_delete@@Base+0x9c>
   13e6c:	ldr	r1, [r3, #8]
   13e70:	cmp	r1, r0
   13e74:	mov	r0, r3
   13e78:	streq	r2, [r3, #8]
   13e7c:	strne	r2, [r3, #12]
   13e80:	b	13e1c <mycore_utils_avl_tree_rotate_for_delete@@Base+0x8c>

00013e84 <mycore_utils_avl_tree_delete@@Base>:
   13e84:	strd	r4, [sp, #-16]!
   13e88:	ldr	r4, [r1]
   13e8c:	str	r6, [sp, #8]
   13e90:	str	lr, [sp, #12]
   13e94:	cmp	r4, #0
   13e98:	beq	13ed0 <mycore_utils_avl_tree_delete@@Base+0x4c>
   13e9c:	ldr	r3, [r4, #4]
   13ea0:	cmp	r2, r3
   13ea4:	bne	13eb8 <mycore_utils_avl_tree_delete@@Base+0x34>
   13ea8:	b	13ee4 <mycore_utils_avl_tree_delete@@Base+0x60>
   13eac:	ldr	r3, [r4, #4]
   13eb0:	cmp	r3, r2
   13eb4:	beq	13ee4 <mycore_utils_avl_tree_delete@@Base+0x60>
   13eb8:	ldr	ip, [r4, #8]
   13ebc:	cmp	r2, r3
   13ec0:	ldr	r4, [r4, #12]
   13ec4:	movcc	r4, ip
   13ec8:	cmp	r4, #0
   13ecc:	bne	13eac <mycore_utils_avl_tree_delete@@Base+0x28>
   13ed0:	mov	r0, r4
   13ed4:	ldrd	r4, [sp]
   13ed8:	ldr	r6, [sp, #8]
   13edc:	add	sp, sp, #12
   13ee0:	pop	{pc}		; (ldr pc, [sp], #4)
   13ee4:	mov	r6, r0
   13ee8:	ldr	r0, [r4, #8]
   13eec:	mov	r5, r1
   13ef0:	bl	fcb0 <mycore_utils_avl_tree_find_min@plt>
   13ef4:	mov	r1, r0
   13ef8:	mov	r2, r5
   13efc:	mov	r0, r4
   13f00:	bl	1040c <mycore_utils_avl_tree_rotate_for_delete@plt>
   13f04:	ldr	r5, [r4]
   13f08:	mov	r1, r4
   13f0c:	ldr	r0, [r6]
   13f10:	bl	ff20 <mcobject_free@plt>
   13f14:	mov	r4, r5
   13f18:	b	13ed0 <mycore_utils_avl_tree_delete@@Base+0x4c>

00013f1c <mycore_utils_avl_tree_search_by_type@@Base>:
   13f1c:	subs	r0, r1, #0
   13f20:	beq	13f58 <mycore_utils_avl_tree_search_by_type@@Base+0x3c>
   13f24:	ldr	r3, [r0, #4]
   13f28:	cmp	r2, r3
   13f2c:	bne	13f40 <mycore_utils_avl_tree_search_by_type@@Base+0x24>
   13f30:	b	13f5c <mycore_utils_avl_tree_search_by_type@@Base+0x40>
   13f34:	ldr	r3, [r0, #4]
   13f38:	cmp	r3, r2
   13f3c:	beq	13f58 <mycore_utils_avl_tree_search_by_type@@Base+0x3c>
   13f40:	ldr	r1, [r0, #8]
   13f44:	cmp	r2, r3
   13f48:	ldr	r0, [r0, #12]
   13f4c:	movcc	r0, r1
   13f50:	cmp	r0, #0
   13f54:	bne	13f34 <mycore_utils_avl_tree_search_by_type@@Base+0x18>
   13f58:	bx	lr
   13f5c:	bx	lr

00013f60 <mycore_utils_avl_tree_list_all_nodes@@Base>:
   13f60:	strd	r4, [sp, #-24]!	; 0xffffffe8
   13f64:	subs	r4, r1, #0
   13f68:	strd	r6, [sp, #8]
   13f6c:	str	r8, [sp, #16]
   13f70:	str	lr, [sp, #20]
   13f74:	beq	13fb0 <mycore_utils_avl_tree_list_all_nodes@@Base+0x50>
   13f78:	mov	r7, r0
   13f7c:	mov	r6, r2
   13f80:	mov	r5, r3
   13f84:	mov	r0, r4
   13f88:	mov	r1, r5
   13f8c:	blx	r6
   13f90:	mov	r3, r5
   13f94:	mov	r2, r6
   13f98:	ldr	r1, [r4, #8]
   13f9c:	mov	r0, r7
   13fa0:	bl	13f60 <mycore_utils_avl_tree_list_all_nodes@@Base>
   13fa4:	ldr	r4, [r4, #12]
   13fa8:	cmp	r4, #0
   13fac:	bne	13f84 <mycore_utils_avl_tree_list_all_nodes@@Base+0x24>
   13fb0:	ldrd	r4, [sp]
   13fb4:	ldrd	r6, [sp, #8]
   13fb8:	ldr	r8, [sp, #16]
   13fbc:	add	sp, sp, #20
   13fc0:	pop	{pc}		; (ldr pc, [sp], #4)

00013fc4 <mchar_async_create@@Base>:
   13fc4:	mov	r1, #84	; 0x54
   13fc8:	mov	r0, #1
   13fcc:	b	feb4 <mycore_calloc@plt>

00013fd0 <mchar_async_mem_malloc@@Base>:
   13fd0:	strd	r4, [sp, #-12]!
   13fd4:	subs	r4, r2, #0
   13fd8:	str	lr, [sp, #8]
   13fdc:	sub	sp, sp, #12
   13fe0:	beq	14008 <mchar_async_mem_malloc@@Base+0x38>
   13fe4:	mov	r5, r0
   13fe8:	ldr	r0, [r4]
   13fec:	cmp	r0, #0
   13ff0:	beq	14018 <mchar_async_mem_malloc@@Base+0x48>
   13ff4:	ldr	r2, [r4, #8]
   13ff8:	cmp	r2, r3
   13ffc:	bcc	1403c <mchar_async_mem_malloc@@Base+0x6c>
   14000:	mov	r3, #0
   14004:	str	r3, [r4, #4]
   14008:	add	sp, sp, #12
   1400c:	ldrd	r4, [sp]
   14010:	add	sp, sp, #8
   14014:	pop	{pc}		; (ldr pc, [sp], #4)
   14018:	ldr	r2, [r5]
   1401c:	cmp	r2, r3
   14020:	movcs	r3, r2
   14024:	strcs	r2, [r4, #8]
   14028:	mov	r0, r3
   1402c:	strcc	r3, [r4, #8]
   14030:	bl	10c28 <mycore_malloc@plt>
   14034:	str	r0, [r4]
   14038:	b	14000 <mchar_async_mem_malloc@@Base+0x30>
   1403c:	str	r3, [sp, #4]
   14040:	bl	10d60 <mycore_free@plt>
   14044:	ldr	r2, [r5]
   14048:	ldr	r3, [sp, #4]
   1404c:	add	r3, r3, r2
   14050:	mov	r0, r3
   14054:	str	r3, [r4, #8]
   14058:	bl	10c28 <mycore_malloc@plt>
   1405c:	str	r0, [r4]
   14060:	b	14000 <mchar_async_mem_malloc@@Base+0x30>

00014064 <mchar_sync_chunk_find_by_size@@Base>:
   14064:	ldr	r3, [r0]
   14068:	ldr	r0, [r3, #12]
   1406c:	cmp	r0, #0
   14070:	beq	1409c <mchar_sync_chunk_find_by_size@@Base+0x38>
   14074:	ldr	r3, [r0, #8]
   14078:	cmp	r1, r3
   1407c:	bhi	14090 <mchar_sync_chunk_find_by_size@@Base+0x2c>
   14080:	b	140a0 <mchar_sync_chunk_find_by_size@@Base+0x3c>
   14084:	ldr	r3, [r0, #8]
   14088:	cmp	r3, r1
   1408c:	bcs	1409c <mchar_sync_chunk_find_by_size@@Base+0x38>
   14090:	ldr	r0, [r0, #12]
   14094:	cmp	r0, #0
   14098:	bne	14084 <mchar_sync_chunk_find_by_size@@Base+0x20>
   1409c:	bx	lr
   140a0:	bx	lr

000140a4 <mchar_sync_chunk_insert_after@@Base>:
   140a4:	ldr	r3, [r0, #12]
   140a8:	cmp	r3, r1
   140ac:	beq	140e8 <mchar_sync_chunk_insert_after@@Base+0x44>
   140b0:	ldr	r2, [r1, #12]
   140b4:	ldr	ip, [r1, #16]
   140b8:	cmp	ip, #0
   140bc:	beq	140cc <mchar_sync_chunk_insert_after@@Base+0x28>
   140c0:	str	r2, [ip, #12]
   140c4:	ldr	r3, [r0, #12]
   140c8:	ldr	r2, [r1, #12]
   140cc:	cmp	r2, #0
   140d0:	strne	ip, [r2, #16]
   140d4:	cmp	r3, #0
   140d8:	strne	r1, [r3, #16]
   140dc:	str	r3, [r1, #12]
   140e0:	str	r0, [r1, #16]
   140e4:	str	r1, [r0, #12]
   140e8:	bx	lr

000140ec <mchar_async_crop_first_chars_without_cache@@Base>:
   140ec:	cmp	r0, #0
   140f0:	beq	14104 <mchar_async_crop_first_chars_without_cache@@Base+0x18>
   140f4:	ldr	r3, [r0, #-4]
   140f8:	add	r0, r0, r1
   140fc:	sub	r3, r3, r1
   14100:	str	r3, [r0, #-4]
   14104:	bx	lr

00014108 <mchar_async_get_size_by_data@@Base>:
   14108:	cmp	r0, #0
   1410c:	ldrne	r0, [r0, #-4]
   14110:	bx	lr

00014114 <mchar_async_cache_init@@Base>:
   14114:	mov	r2, #1
   14118:	mov	r3, #1024	; 0x400
   1411c:	strd	r4, [sp, #-16]!
   14120:	mov	r5, r0
   14124:	mov	r4, #0
   14128:	str	r6, [sp, #8]
   1412c:	mov	r0, #20480	; 0x5000
   14130:	str	lr, [sp, #12]
   14134:	str	r3, [r5, #4]
   14138:	str	r2, [r5, #8]
   1413c:	str	r4, [r5, #12]
   14140:	str	r4, [r5, #16]
   14144:	bl	10c28 <mycore_malloc@plt>
   14148:	cmp	r0, r4
   1414c:	str	r0, [r5]
   14150:	moveq	r4, #2
   14154:	beq	14188 <mchar_async_cache_init@@Base+0x74>
   14158:	ldr	r3, [r5, #4]
   1415c:	str	r4, [r0]
   14160:	str	r4, [r0, #4]
   14164:	str	r4, [r0, #8]
   14168:	str	r4, [r0, #12]
   1416c:	lsl	r0, r3, #2
   14170:	str	r4, [r5, #24]
   14174:	str	r3, [r5, #28]
   14178:	bl	10c28 <mycore_malloc@plt>
   1417c:	cmp	r0, r4
   14180:	str	r0, [r5, #20]
   14184:	beq	1419c <mchar_async_cache_init@@Base+0x88>
   14188:	mov	r0, r4
   1418c:	ldrd	r4, [sp]
   14190:	ldr	r6, [sp, #8]
   14194:	add	sp, sp, #12
   14198:	pop	{pc}		; (ldr pc, [sp], #4)
   1419c:	ldr	r0, [r5]
   141a0:	mov	r4, #2
   141a4:	bl	10d60 <mycore_free@plt>
   141a8:	str	r0, [r5]
   141ac:	b	14188 <mchar_async_cache_init@@Base+0x74>

000141b0 <mchar_async_cache_clean@@Base>:
   141b0:	ldr	r2, [r0]
   141b4:	mov	r3, #0
   141b8:	mov	r1, #1
   141bc:	str	r1, [r0, #8]
   141c0:	str	r3, [r0, #12]
   141c4:	str	r3, [r0, #16]
   141c8:	cmp	r2, r3
   141cc:	str	r3, [r0, #24]
   141d0:	beq	141e4 <mchar_async_cache_clean@@Base+0x34>
   141d4:	str	r3, [r2]
   141d8:	str	r3, [r2, #4]
   141dc:	str	r3, [r2, #8]
   141e0:	str	r3, [r2, #12]
   141e4:	bx	lr

000141e8 <mchar_async_node_clean@@Base>:
   141e8:	ldr	r3, [r0, #60]	; 0x3c
   141ec:	cmp	r3, r1
   141f0:	bls	1423c <mchar_async_node_clean@@Base+0x54>
   141f4:	ldr	ip, [r0, #56]	; 0x38
   141f8:	add	r1, r1, r1, lsl #3
   141fc:	lsl	r1, r1, #2
   14200:	ldr	r3, [ip, r1]
   14204:	add	r0, ip, r1
   14208:	ldr	r2, [r3, #16]
   1420c:	cmp	r2, #0
   14210:	bne	1421c <mchar_async_node_clean@@Base+0x34>
   14214:	b	14240 <mchar_async_node_clean@@Base+0x58>
   14218:	mov	r2, r3
   1421c:	ldr	r3, [r2, #16]
   14220:	cmp	r3, #0
   14224:	bne	14218 <mchar_async_node_clean@@Base+0x30>
   14228:	str	r2, [ip, r1]
   1422c:	mov	r3, #0
   14230:	add	r0, r0, #4
   14234:	str	r3, [r2, #4]
   14238:	b	106b8 <mchar_async_cache_clean@plt>
   1423c:	bx	lr
   14240:	mov	r2, r3
   14244:	b	1422c <mchar_async_node_clean@@Base+0x44>

00014248 <mchar_async_cache_destroy@@Base>:
   14248:	strd	r4, [sp, #-16]!
   1424c:	subs	r4, r0, #0
   14250:	str	r6, [sp, #8]
   14254:	str	lr, [sp, #12]
   14258:	beq	14288 <mchar_async_cache_destroy@@Base+0x40>
   1425c:	ldr	r0, [r4]
   14260:	mov	r5, r1
   14264:	cmp	r0, #0
   14268:	beq	14270 <mchar_async_cache_destroy@@Base+0x28>
   1426c:	bl	10d60 <mycore_free@plt>
   14270:	ldr	r0, [r4, #20]
   14274:	cmp	r0, #0
   14278:	beq	14280 <mchar_async_cache_destroy@@Base+0x38>
   1427c:	bl	10d60 <mycore_free@plt>
   14280:	cmp	r5, #0
   14284:	bne	1429c <mchar_async_cache_destroy@@Base+0x54>
   14288:	mov	r0, r4
   1428c:	ldrd	r4, [sp]
   14290:	ldr	r6, [sp, #8]
   14294:	add	sp, sp, #12
   14298:	pop	{pc}		; (ldr pc, [sp], #4)
   1429c:	mov	r0, r4
   142a0:	mov	r4, #0
   142a4:	bl	10d60 <mycore_free@plt>
   142a8:	b	14288 <mchar_async_cache_destroy@@Base+0x40>

000142ac <mchar_async_destroy@@Base>:
   142ac:	strd	r4, [sp, #-32]!	; 0xffffffe0
   142b0:	strd	r6, [sp, #8]
   142b4:	subs	r6, r0, #0
   142b8:	strd	r8, [sp, #16]
   142bc:	str	sl, [sp, #24]
   142c0:	str	lr, [sp, #28]
   142c4:	beq	14400 <mchar_async_destroy@@Base+0x154>
   142c8:	ldr	r0, [r6, #56]	; 0x38
   142cc:	mov	r8, r1
   142d0:	cmp	r0, #0
   142d4:	beq	1431c <mchar_async_destroy@@Base+0x70>
   142d8:	ldr	r3, [r6, #60]	; 0x3c
   142dc:	cmp	r3, #0
   142e0:	beq	14310 <mchar_async_destroy@@Base+0x64>
   142e4:	mov	r4, #0
   142e8:	add	r3, r4, r4, lsl #3
   142ec:	mov	r1, #0
   142f0:	add	r4, r4, #1
   142f4:	add	r0, r0, r3, lsl #2
   142f8:	add	r0, r0, #4
   142fc:	bl	10820 <mchar_async_cache_destroy@plt>
   14300:	ldr	r0, [r6, #56]	; 0x38
   14304:	ldr	r3, [r6, #60]	; 0x3c
   14308:	cmp	r3, r4
   1430c:	bhi	142e8 <mchar_async_destroy@@Base+0x3c>
   14310:	bl	10d60 <mycore_free@plt>
   14314:	mov	r3, #0
   14318:	str	r3, [r6, #56]	; 0x38
   1431c:	ldr	r0, [r6, #68]	; 0x44
   14320:	cmp	r0, #0
   14324:	beq	1432c <mchar_async_destroy@@Base+0x80>
   14328:	bl	10d60 <mycore_free@plt>
   1432c:	ldr	r0, [r6, #4]
   14330:	cmp	r0, #0
   14334:	beq	143d0 <mchar_async_destroy@@Base+0x124>
   14338:	ldr	r3, [r6, #12]
   1433c:	cmp	r3, #0
   14340:	beq	143c4 <mchar_async_destroy@@Base+0x118>
   14344:	mov	r9, #0
   14348:	b	14358 <mchar_async_destroy@@Base+0xac>
   1434c:	add	r9, r9, #1
   14350:	cmp	r9, r3
   14354:	bcs	143c4 <mchar_async_destroy@@Base+0x118>
   14358:	ldr	r2, [r0, r9, lsl #2]
   1435c:	lsl	r7, r9, #2
   14360:	cmp	r2, #0
   14364:	beq	1434c <mchar_async_destroy@@Base+0xa0>
   14368:	ldr	r1, [r6, #16]
   1436c:	cmp	r1, #0
   14370:	beq	143a8 <mchar_async_destroy@@Base+0xfc>
   14374:	mov	r4, #0
   14378:	mov	r5, r4
   1437c:	ldr	r3, [r2, r4]
   14380:	subs	r0, r3, #0
   14384:	beq	1441c <mchar_async_destroy@@Base+0x170>
   14388:	bl	10d60 <mycore_free@plt>
   1438c:	ldr	r3, [r6, #4]
   14390:	add	r5, r5, #1
   14394:	add	r4, r4, #20
   14398:	ldr	r1, [r6, #16]
   1439c:	ldr	r2, [r3, r7]
   143a0:	cmp	r5, r1
   143a4:	bcc	1437c <mchar_async_destroy@@Base+0xd0>
   143a8:	mov	r0, r2
   143ac:	bl	10d60 <mycore_free@plt>
   143b0:	ldr	r0, [r6, #4]
   143b4:	ldr	r3, [r6, #12]
   143b8:	add	r9, r9, #1
   143bc:	cmp	r9, r3
   143c0:	bcc	14358 <mchar_async_destroy@@Base+0xac>
   143c4:	bl	10d60 <mycore_free@plt>
   143c8:	mov	r3, #0
   143cc:	str	r3, [r6, #4]
   143d0:	mov	r1, #0
   143d4:	add	r0, r6, #24
   143d8:	bl	10820 <mchar_async_cache_destroy@plt>
   143dc:	mov	r1, #1
   143e0:	ldr	r0, [r6, #80]	; 0x50
   143e4:	bl	10154 <mcsync_destroy@plt>
   143e8:	mov	r2, #84	; 0x54
   143ec:	mov	r1, #0
   143f0:	mov	r0, r6
   143f4:	bl	10844 <memset@plt>
   143f8:	cmp	r8, #0
   143fc:	bne	14440 <mchar_async_destroy@@Base+0x194>
   14400:	mov	r0, r6
   14404:	ldrd	r4, [sp]
   14408:	ldrd	r6, [sp, #8]
   1440c:	ldrd	r8, [sp, #16]
   14410:	ldr	sl, [sp, #24]
   14414:	add	sp, sp, #28
   14418:	pop	{pc}		; (ldr pc, [sp], #4)
   1441c:	add	r5, r5, #1
   14420:	add	r4, r4, #20
   14424:	cmp	r5, r1
   14428:	bcc	1437c <mchar_async_destroy@@Base+0xd0>
   1442c:	mov	r0, r2
   14430:	bl	10d60 <mycore_free@plt>
   14434:	ldr	r0, [r6, #4]
   14438:	ldr	r3, [r6, #12]
   1443c:	b	143b8 <mchar_async_destroy@@Base+0x10c>
   14440:	mov	r0, r6
   14444:	mov	r6, #0
   14448:	bl	10d60 <mycore_free@plt>
   1444c:	b	14400 <mchar_async_destroy@@Base+0x154>

00014450 <mchar_async_cache_malloc@@Base>:
   14450:	ldr	r3, [r0, #24]
   14454:	cmp	r3, #0
   14458:	bne	144bc <mchar_async_cache_malloc@@Base+0x6c>
   1445c:	ldmib	r0, {r1, r3}
   14460:	add	r2, r3, #1
   14464:	cmp	r2, r1
   14468:	str	r2, [r0, #8]
   1446c:	bcs	14478 <mchar_async_cache_malloc@@Base+0x28>
   14470:	mov	r0, r3
   14474:	bx	lr
   14478:	lsl	r3, r1, #1
   1447c:	str	r4, [sp, #-8]!
   14480:	mov	r4, r0
   14484:	ldr	r0, [r0]
   14488:	add	r1, r3, r1, lsl #3
   1448c:	str	lr, [sp, #4]
   14490:	str	r3, [r4, #4]
   14494:	lsl	r1, r1, #2
   14498:	bl	fb84 <mycore_realloc@plt>
   1449c:	ldr	r3, [r4, #8]
   144a0:	cmp	r0, #0
   144a4:	strne	r0, [r4]
   144a8:	ldr	r4, [sp]
   144ac:	add	sp, sp, #4
   144b0:	sub	r3, r3, #1
   144b4:	mov	r0, r3
   144b8:	pop	{pc}		; (ldr pc, [sp], #4)
   144bc:	ldr	r2, [r0, #20]
   144c0:	sub	r3, r3, #1
   144c4:	str	r3, [r0, #24]
   144c8:	ldr	r3, [r2, r3, lsl #2]
   144cc:	mov	r0, r3
   144d0:	bx	lr

000144d4 <mchar_async_cache_delete@@Base>:
   144d4:	strd	r4, [sp, #-32]!	; 0xffffffe0
   144d8:	ldr	r4, [r0, #12]
   144dc:	strd	r6, [sp, #8]
   144e0:	strd	r8, [sp, #16]
   144e4:	str	sl, [sp, #24]
   144e8:	str	lr, [sp, #28]
   144ec:	cmp	r4, #0
   144f0:	ldr	lr, [r0]
   144f4:	lslne	r2, r4, #2
   144f8:	bne	14510 <mchar_async_cache_delete@@Base+0x3c>
   144fc:	b	14620 <mchar_async_cache_delete@@Base+0x14c>
   14500:	ldr	r4, [r3, #12]
   14504:	cmp	r4, #0
   14508:	lsl	r2, r4, #2
   1450c:	beq	14620 <mchar_async_cache_delete@@Base+0x14c>
   14510:	add	r3, r2, r4
   14514:	add	r3, lr, r3, lsl #2
   14518:	ldr	ip, [r3, #4]
   1451c:	cmp	ip, r1
   14520:	bcc	14500 <mchar_async_cache_delete@@Base+0x2c>
   14524:	b	1452c <mchar_async_cache_delete@@Base+0x58>
   14528:	mov	r4, r6
   1452c:	add	r2, r2, r4
   14530:	add	r3, lr, r2, lsl #2
   14534:	ldr	r6, [r3, #12]
   14538:	lsl	r2, r6, #2
   1453c:	add	ip, r2, r6
   14540:	add	r5, lr, ip, lsl #2
   14544:	ldr	ip, [r5, #4]
   14548:	cmp	ip, r1
   1454c:	beq	14528 <mchar_async_cache_delete@@Base+0x54>
   14550:	ldr	r1, [r3, #8]
   14554:	ldr	r2, [r3, #16]
   14558:	cmp	r2, #0
   1455c:	beq	14640 <mchar_async_cache_delete@@Base+0x16c>
   14560:	add	ip, r2, r2, lsl #2
   14564:	add	ip, lr, ip, lsl #2
   14568:	ldr	r7, [ip, #8]
   1456c:	cmp	r7, r4
   14570:	beq	146a0 <mchar_async_cache_delete@@Base+0x1cc>
   14574:	cmp	r1, #0
   14578:	streq	r6, [ip, #12]
   1457c:	streq	r2, [r5, #16]
   14580:	beq	145cc <mchar_async_cache_delete@@Base+0xf8>
   14584:	add	r9, r1, r1, lsl #2
   14588:	cmp	r6, #0
   1458c:	add	r9, lr, r9, lsl #2
   14590:	beq	145c4 <mchar_async_cache_delete@@Base+0xf0>
   14594:	ldr	r7, [r9, #12]
   14598:	b	145a0 <mchar_async_cache_delete@@Base+0xcc>
   1459c:	mov	r7, r8
   145a0:	add	r3, r7, r7, lsl #2
   145a4:	add	r3, lr, r3, lsl #2
   145a8:	ldr	r8, [r3, #12]
   145ac:	cmp	r8, #0
   145b0:	bne	1459c <mchar_async_cache_delete@@Base+0xc8>
   145b4:	cmp	r7, #0
   145b8:	strne	r6, [r3, #12]
   145bc:	streq	r6, [r9, #12]
   145c0:	strne	r7, [r5, #16]
   145c4:	str	r1, [ip, #12]
   145c8:	str	r2, [r9, #16]
   145cc:	mov	r5, r0
   145d0:	ldr	r0, [r0, #20]
   145d4:	ldr	r3, [r5, #24]
   145d8:	str	r4, [r0, r3, lsl #2]
   145dc:	ldr	r3, [r5, #24]
   145e0:	ldr	r2, [r5, #28]
   145e4:	add	r3, r3, #1
   145e8:	cmp	r3, r2
   145ec:	str	r3, [r5, #24]
   145f0:	bcc	14610 <mchar_async_cache_delete@@Base+0x13c>
   145f4:	lsl	r1, r2, #3
   145f8:	lsl	r6, r2, #1
   145fc:	bl	fb84 <mycore_realloc@plt>
   14600:	cmp	r0, #0
   14604:	beq	14620 <mchar_async_cache_delete@@Base+0x14c>
   14608:	str	r0, [r5, #20]
   1460c:	str	r6, [r5, #28]
   14610:	ldr	r3, [r5, #16]
   14614:	sub	r3, r3, #1
   14618:	str	r3, [r5, #16]
   1461c:	b	14624 <mchar_async_cache_delete@@Base+0x150>
   14620:	mov	r4, #0
   14624:	mov	r0, r4
   14628:	ldrd	r4, [sp]
   1462c:	ldrd	r6, [sp, #8]
   14630:	ldrd	r8, [sp, #16]
   14634:	ldr	sl, [sp, #24]
   14638:	add	sp, sp, #28
   1463c:	pop	{pc}		; (ldr pc, [sp], #4)
   14640:	cmp	r1, #0
   14644:	streq	r6, [r0, #12]
   14648:	streq	r1, [r5, #16]
   1464c:	beq	145cc <mchar_async_cache_delete@@Base+0xf8>
   14650:	add	r7, r1, r1, lsl #2
   14654:	cmp	r6, #0
   14658:	add	r7, lr, r7, lsl #2
   1465c:	beq	14690 <mchar_async_cache_delete@@Base+0x1bc>
   14660:	ldr	r2, [r7, #12]
   14664:	b	1466c <mchar_async_cache_delete@@Base+0x198>
   14668:	mov	r2, ip
   1466c:	add	r3, r2, r2, lsl #2
   14670:	add	r3, lr, r3, lsl #2
   14674:	ldr	ip, [r3, #12]
   14678:	cmp	ip, #0
   1467c:	bne	14668 <mchar_async_cache_delete@@Base+0x194>
   14680:	cmp	r2, #0
   14684:	strne	r6, [r3, #12]
   14688:	streq	r6, [r7, #12]
   1468c:	strne	r2, [r5, #16]
   14690:	mov	r3, #0
   14694:	str	r1, [r0, #12]
   14698:	str	r3, [r7, #16]
   1469c:	b	145cc <mchar_async_cache_delete@@Base+0xf8>
   146a0:	cmp	r6, #0
   146a4:	beq	146fc <mchar_async_cache_delete@@Base+0x228>
   146a8:	cmp	r1, #0
   146ac:	beq	146f0 <mchar_async_cache_delete@@Base+0x21c>
   146b0:	ldr	r8, [r5, #8]
   146b4:	b	146bc <mchar_async_cache_delete@@Base+0x1e8>
   146b8:	mov	r8, r9
   146bc:	add	r7, r8, r8, lsl #2
   146c0:	add	r7, lr, r7, lsl #2
   146c4:	ldr	r9, [r7, #8]
   146c8:	cmp	r9, #0
   146cc:	bne	146b8 <mchar_async_cache_delete@@Base+0x1e4>
   146d0:	cmp	r8, #0
   146d4:	streq	r1, [r5, #8]
   146d8:	beq	146f0 <mchar_async_cache_delete@@Base+0x21c>
   146dc:	str	r1, [r7, #8]
   146e0:	ldr	r3, [r3, #8]
   146e4:	add	r3, r3, r3, lsl #2
   146e8:	add	lr, lr, r3, lsl #2
   146ec:	str	r8, [lr, #16]
   146f0:	str	r6, [ip, #8]
   146f4:	str	r2, [r5, #16]
   146f8:	b	145cc <mchar_async_cache_delete@@Base+0xf8>
   146fc:	str	r1, [ip, #8]
   14700:	ldr	r3, [r3, #8]
   14704:	add	r3, r3, r3, lsl #2
   14708:	add	lr, lr, r3, lsl #2
   1470c:	str	r2, [lr, #16]
   14710:	b	145cc <mchar_async_cache_delete@@Base+0xf8>

00014714 <mchar_async_chunk_malloc_without_lock@@Base>:
   14714:	strd	r4, [sp, #-32]!	; 0xffffffe0
   14718:	mov	r4, r0
   1471c:	strd	r6, [sp, #8]
   14720:	ldr	r6, [r0, #40]	; 0x28
   14724:	strd	r8, [sp, #16]
   14728:	mov	r9, r2
   1472c:	str	sl, [sp, #24]
   14730:	str	lr, [sp, #28]
   14734:	cmp	r6, #0
   14738:	bne	147e0 <mchar_async_chunk_malloc_without_lock@@Base+0xcc>
   1473c:	mov	r8, r1
   14740:	ldr	r7, [r0, #4]
   14744:	ldr	r3, [r0, #16]
   14748:	ldr	r2, [r0, #20]
   1474c:	ldr	r5, [r0, #12]
   14750:	cmp	r2, r3
   14754:	bcc	147d0 <mchar_async_chunk_malloc_without_lock@@Base+0xbc>
   14758:	ldr	r1, [r0, #8]
   1475c:	add	r3, r5, #1
   14760:	str	r3, [r0, #12]
   14764:	cmp	r3, r1
   14768:	bcs	1480c <mchar_async_chunk_malloc_without_lock@@Base+0xf8>
   1476c:	ldr	r3, [r7, r5, lsl #2]
   14770:	lsl	r5, r5, #2
   14774:	cmp	r3, #0
   14778:	beq	1484c <mchar_async_chunk_malloc_without_lock@@Base+0x138>
   1477c:	ldr	r5, [r4, #12]
   14780:	mov	r2, #1
   14784:	sub	r5, r5, #-1073741823	; 0xc0000001
   14788:	mov	r0, r4
   1478c:	ldr	r5, [r7, r5, lsl #2]
   14790:	mov	r3, r9
   14794:	mov	r1, r8
   14798:	str	r2, [r4, #20]
   1479c:	add	r4, r5, r6
   147a0:	mov	r2, r4
   147a4:	bl	10ff4 <mchar_async_mem_malloc@plt>
   147a8:	ldr	r3, [r5, r6]
   147ac:	cmp	r3, #0
   147b0:	beq	14804 <mchar_async_chunk_malloc_without_lock@@Base+0xf0>
   147b4:	mov	r0, r4
   147b8:	ldrd	r4, [sp]
   147bc:	ldrd	r6, [sp, #8]
   147c0:	ldrd	r8, [sp, #16]
   147c4:	ldr	sl, [sp, #24]
   147c8:	add	sp, sp, #28
   147cc:	pop	{pc}		; (ldr pc, [sp], #4)
   147d0:	add	r6, r2, r2, lsl #2
   147d4:	add	r2, r2, #1
   147d8:	lsl	r6, r6, #2
   147dc:	b	14784 <mchar_async_chunk_malloc_without_lock@@Base+0x70>
   147e0:	mov	r1, r2
   147e4:	add	r0, r0, #24
   147e8:	bl	10ef8 <mchar_async_cache_delete@plt>
   147ec:	cmp	r0, #0
   147f0:	beq	14804 <mchar_async_chunk_malloc_without_lock@@Base+0xf0>
   147f4:	ldr	r3, [r4, #24]
   147f8:	add	r0, r0, r0, lsl #2
   147fc:	ldr	r4, [r3, r0, lsl #2]
   14800:	b	147b4 <mchar_async_chunk_malloc_without_lock@@Base+0xa0>
   14804:	mov	r4, #0
   14808:	b	147b4 <mchar_async_chunk_malloc_without_lock@@Base+0xa0>
   1480c:	lsl	r3, r1, #1
   14810:	mov	r0, r7
   14814:	lsl	r1, r1, #3
   14818:	str	r3, [r4, #8]
   1481c:	bl	fb84 <mycore_realloc@plt>
   14820:	subs	r7, r0, #0
   14824:	beq	14804 <mchar_async_chunk_malloc_without_lock@@Base+0xf0>
   14828:	ldr	r2, [r4, #8]
   1482c:	mov	r1, r6
   14830:	ldr	r0, [r4, #12]
   14834:	sub	r2, r2, r0
   14838:	add	r0, r7, r0, lsl #2
   1483c:	lsl	r2, r2, #2
   14840:	bl	10844 <memset@plt>
   14844:	str	r7, [r4, #4]
   14848:	b	1476c <mchar_async_chunk_malloc_without_lock@@Base+0x58>
   1484c:	mov	r1, #20
   14850:	ldr	r0, [r4, #16]
   14854:	bl	feb4 <mycore_calloc@plt>
   14858:	cmp	r0, #0
   1485c:	beq	14804 <mchar_async_chunk_malloc_without_lock@@Base+0xf0>
   14860:	ldr	r7, [r4, #4]
   14864:	str	r0, [r7, r5]
   14868:	b	1477c <mchar_async_chunk_malloc_without_lock@@Base+0x68>

0001486c <mchar_async_chunk_malloc@@Base>:
   1486c:	strd	r4, [sp, #-16]!
   14870:	mov	r4, r0
   14874:	mov	r5, r1
   14878:	ldr	r0, [r0, #80]	; 0x50
   1487c:	str	r6, [sp, #8]
   14880:	mov	r6, r2
   14884:	str	lr, [sp, #12]
   14888:	bl	107e4 <mcsync_lock@plt>
   1488c:	mov	r2, r6
   14890:	mov	r1, r5
   14894:	mov	r0, r4
   14898:	bl	10b38 <mchar_async_chunk_malloc_without_lock@plt>
   1489c:	mov	r5, r0
   148a0:	ldr	r0, [r4, #80]	; 0x50
   148a4:	bl	10e50 <mcsync_unlock@plt>
   148a8:	mov	r0, r5
   148ac:	ldrd	r4, [sp]
   148b0:	ldr	r6, [sp, #8]
   148b4:	add	sp, sp, #12
   148b8:	pop	{pc}		; (ldr pc, [sp], #4)

000148bc <mchar_async_clean@@Base>:
   148bc:	mov	r3, #1
   148c0:	strd	r4, [sp, #-32]!	; 0xffffffe0
   148c4:	mov	r5, r0
   148c8:	mov	r4, #0
   148cc:	add	r0, r0, #24
   148d0:	strd	r6, [sp, #8]
   148d4:	strd	r8, [sp, #16]
   148d8:	str	sl, [sp, #24]
   148dc:	str	lr, [sp, #28]
   148e0:	str	r3, [r5, #12]
   148e4:	str	r4, [r5, #20]
   148e8:	bl	106b8 <mchar_async_cache_clean@plt>
   148ec:	ldr	r3, [r5, #60]	; 0x3c
   148f0:	cmp	r3, r4
   148f4:	beq	14950 <mchar_async_clean@@Base+0x94>
   148f8:	mov	r6, r4
   148fc:	mov	r9, r4
   14900:	b	14918 <mchar_async_clean@@Base+0x5c>
   14904:	ldr	r3, [r5, #60]	; 0x3c
   14908:	add	r4, r4, #36	; 0x24
   1490c:	str	r9, [r0, #16]
   14910:	cmp	r3, r6
   14914:	bls	14950 <mchar_async_clean@@Base+0x94>
   14918:	ldr	r7, [r5, #56]	; 0x38
   1491c:	add	r6, r6, #1
   14920:	add	r8, r7, r4
   14924:	add	r0, r8, #4
   14928:	bl	106b8 <mchar_async_cache_clean@plt>
   1492c:	mov	r1, r8
   14930:	mov	r0, r5
   14934:	ldr	r2, [r5]
   14938:	bl	10964 <mchar_async_chunk_malloc@plt>
   1493c:	cmp	r0, #0
   14940:	str	r0, [r7, r4]
   14944:	bne	14904 <mchar_async_clean@@Base+0x48>
   14948:	mov	r0, #2
   1494c:	b	14954 <mchar_async_clean@@Base+0x98>
   14950:	mov	r0, #0
   14954:	ldrd	r4, [sp]
   14958:	ldrd	r6, [sp, #8]
   1495c:	ldrd	r8, [sp, #16]
   14960:	ldr	sl, [sp, #24]
   14964:	add	sp, sp, #28
   14968:	pop	{pc}		; (ldr pc, [sp], #4)

0001496c <mchar_async_init@@Base>:
   1496c:	cmp	r2, #4096	; 0x1000
   14970:	mov	r3, #1024	; 0x400
   14974:	strd	r4, [sp, #-16]!
   14978:	movcc	r2, #4096	; 0x1000
   1497c:	mov	r4, r0
   14980:	str	r6, [sp, #8]
   14984:	mov	r0, r3
   14988:	str	lr, [sp, #12]
   1498c:	str	r2, [r4]
   14990:	str	r3, [r4, #8]
   14994:	str	r1, [r4, #16]
   14998:	mov	r1, #4
   1499c:	bl	feb4 <mycore_calloc@plt>
   149a0:	cmp	r0, #0
   149a4:	str	r0, [r4, #4]
   149a8:	beq	14a7c <mchar_async_init@@Base+0x110>
   149ac:	mov	r5, r0
   149b0:	mov	r1, #20
   149b4:	ldr	r0, [r4, #16]
   149b8:	bl	feb4 <mycore_calloc@plt>
   149bc:	ldr	r3, [r4, #4]
   149c0:	str	r0, [r5]
   149c4:	ldr	r2, [r3]
   149c8:	cmp	r2, #0
   149cc:	beq	14a84 <mchar_async_init@@Base+0x118>
   149d0:	add	r0, r4, #24
   149d4:	bl	10bc8 <mchar_async_cache_init@plt>
   149d8:	subs	r5, r0, #0
   149dc:	bne	14a50 <mchar_async_init@@Base+0xe4>
   149e0:	mov	r3, #64	; 0x40
   149e4:	mov	r1, #36	; 0x24
   149e8:	str	r5, [r4, #60]	; 0x3c
   149ec:	mov	r0, r3
   149f0:	str	r3, [r4, #64]	; 0x40
   149f4:	bl	feb4 <mycore_calloc@plt>
   149f8:	cmp	r0, #0
   149fc:	str	r0, [r4, #56]	; 0x38
   14a00:	beq	14a68 <mchar_async_init@@Base+0xfc>
   14a04:	ldr	r3, [r4, #64]	; 0x40
   14a08:	str	r5, [r4, #72]	; 0x48
   14a0c:	lsl	r0, r3, #2
   14a10:	str	r3, [r4, #76]	; 0x4c
   14a14:	bl	10c28 <mycore_malloc@plt>
   14a18:	cmp	r0, #0
   14a1c:	str	r0, [r4, #68]	; 0x44
   14a20:	beq	14a68 <mchar_async_init@@Base+0xfc>
   14a24:	mov	r0, r4
   14a28:	bl	10b5c <mchar_async_clean@plt>
   14a2c:	bl	fd34 <mcsync_create@plt>
   14a30:	cmp	r0, #0
   14a34:	str	r0, [r4, #80]	; 0x50
   14a38:	beq	14a7c <mchar_async_init@@Base+0x110>
   14a3c:	ldrd	r4, [sp]
   14a40:	ldr	r6, [sp, #8]
   14a44:	ldr	lr, [sp, #12]
   14a48:	add	sp, sp, #16
   14a4c:	b	107fc <mcsync_init@plt>
   14a50:	ldr	r3, [r4, #4]
   14a54:	ldr	r0, [r3]
   14a58:	bl	10d60 <mycore_free@plt>
   14a5c:	ldr	r0, [r4, #4]
   14a60:	bl	10d60 <mycore_free@plt>
   14a64:	str	r0, [r4, #4]
   14a68:	mov	r0, r5
   14a6c:	ldrd	r4, [sp]
   14a70:	ldr	r6, [sp, #8]
   14a74:	add	sp, sp, #12
   14a78:	pop	{pc}		; (ldr pc, [sp], #4)
   14a7c:	mov	r5, #2
   14a80:	b	14a68 <mchar_async_init@@Base+0xfc>
   14a84:	mov	r0, r3
   14a88:	mov	r5, #2
   14a8c:	bl	10d60 <mycore_free@plt>
   14a90:	str	r0, [r4, #4]
   14a94:	b	14a68 <mchar_async_init@@Base+0xfc>

00014a98 <mchar_async_node_add@@Base>:
   14a98:	strd	r4, [sp, #-36]!	; 0xffffffdc
   14a9c:	mov	r4, r0
   14aa0:	mov	r5, r1
   14aa4:	ldr	r0, [r0, #80]	; 0x50
   14aa8:	strd	r6, [sp, #8]
   14aac:	strd	r8, [sp, #16]
   14ab0:	strd	sl, [sp, #24]
   14ab4:	str	lr, [sp, #32]
   14ab8:	sub	sp, sp, #4
   14abc:	bl	107e4 <mcsync_lock@plt>
   14ac0:	subs	r6, r0, #0
   14ac4:	bne	14b54 <mchar_async_node_add@@Base+0xbc>
   14ac8:	ldr	r3, [r4, #72]	; 0x48
   14acc:	cmp	r3, #0
   14ad0:	bne	14b40 <mchar_async_node_add@@Base+0xa8>
   14ad4:	ldr	r7, [r4, #60]	; 0x3c
   14ad8:	ldr	r3, [r4, #64]	; 0x40
   14adc:	cmp	r7, r3
   14ae0:	addcc	r3, r7, #1
   14ae4:	strcc	r3, [r4, #60]	; 0x3c
   14ae8:	bcs	14bc8 <mchar_async_node_add@@Base+0x130>
   14aec:	ldr	r9, [r4, #56]	; 0x38
   14af0:	add	r8, r7, r7, lsl #3
   14af4:	lsl	r8, r8, #2
   14af8:	add	sl, r9, r8
   14afc:	add	r0, sl, #4
   14b00:	bl	10bc8 <mchar_async_cache_init@plt>
   14b04:	subs	fp, r0, #0
   14b08:	beq	14b70 <mchar_async_node_add@@Base+0xd8>
   14b0c:	cmp	r5, #0
   14b10:	ldr	r0, [r4, #80]	; 0x50
   14b14:	movne	r3, #2
   14b18:	strne	r3, [r5]
   14b1c:	bl	10e50 <mcsync_unlock@plt>
   14b20:	mov	r0, r6
   14b24:	add	sp, sp, #4
   14b28:	ldrd	r4, [sp]
   14b2c:	ldrd	r6, [sp, #8]
   14b30:	ldrd	r8, [sp, #16]
   14b34:	ldrd	sl, [sp, #24]
   14b38:	add	sp, sp, #32
   14b3c:	pop	{pc}		; (ldr pc, [sp], #4)
   14b40:	ldr	r2, [r4, #68]	; 0x44
   14b44:	sub	r3, r3, #1
   14b48:	str	r3, [r4, #72]	; 0x48
   14b4c:	ldr	r7, [r2, r3, lsl #2]
   14b50:	b	14aec <mchar_async_node_add@@Base+0x54>
   14b54:	cmp	r5, #0
   14b58:	moveq	r6, r5
   14b5c:	beq	14b20 <mchar_async_node_add@@Base+0x88>
   14b60:	mov	r3, #96	; 0x60
   14b64:	mov	r6, #0
   14b68:	str	r3, [r5]
   14b6c:	b	14b20 <mchar_async_node_add@@Base+0x88>
   14b70:	mov	r1, sl
   14b74:	mov	r0, r4
   14b78:	ldr	r2, [r4]
   14b7c:	bl	10b38 <mchar_async_chunk_malloc_without_lock@plt>
   14b80:	cmp	r0, #0
   14b84:	str	r0, [r9, r8]
   14b88:	beq	14bac <mchar_async_node_add@@Base+0x114>
   14b8c:	str	fp, [r0, #12]
   14b90:	mov	r6, r7
   14b94:	str	fp, [r0, #16]
   14b98:	ldr	r0, [r4, #80]	; 0x50
   14b9c:	bl	10e50 <mcsync_unlock@plt>
   14ba0:	cmp	r5, #0
   14ba4:	strne	fp, [r5]
   14ba8:	b	14b20 <mchar_async_node_add@@Base+0x88>
   14bac:	cmp	r5, #0
   14bb0:	movne	r3, #2
   14bb4:	strne	r3, [r5]
   14bb8:	ldr	r0, [r4, #80]	; 0x50
   14bbc:	mov	r6, #0
   14bc0:	bl	10e50 <mcsync_unlock@plt>
   14bc4:	b	14b20 <mchar_async_node_add@@Base+0x88>
   14bc8:	cmp	r5, #0
   14bcc:	beq	14bb8 <mchar_async_node_add@@Base+0x120>
   14bd0:	mov	r3, #98	; 0x62
   14bd4:	str	r3, [r5]
   14bd8:	b	14bb8 <mchar_async_node_add@@Base+0x120>

00014bdc <mchar_async_cache_add@@Base>:
   14bdc:	ldr	r3, [r0, #16]
   14be0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   14be4:	mov	r5, r2
   14be8:	ldr	r4, [r0, #12]
   14bec:	strd	r6, [sp, #8]
   14bf0:	mov	r6, r0
   14bf4:	mov	r7, r1
   14bf8:	str	r8, [sp, #16]
   14bfc:	add	r3, r3, #1
   14c00:	str	lr, [sp, #20]
   14c04:	cmp	r4, #0
   14c08:	str	r3, [r0, #16]
   14c0c:	beq	14c88 <mchar_async_cache_add@@Base+0xac>
   14c10:	bl	fe60 <mchar_async_cache_malloc@plt>
   14c14:	ldr	r2, [r6]
   14c18:	b	14c30 <mchar_async_cache_add@@Base+0x54>
   14c1c:	bhi	14cc8 <mchar_async_cache_add@@Base+0xec>
   14c20:	ldr	ip, [r3, #12]
   14c24:	cmp	ip, #0
   14c28:	beq	14d1c <mchar_async_cache_add@@Base+0x140>
   14c2c:	mov	r4, ip
   14c30:	add	r3, r4, r4, lsl #2
   14c34:	add	r3, r2, r3, lsl #2
   14c38:	ldr	ip, [r3, #4]
   14c3c:	cmp	ip, r5
   14c40:	bne	14c1c <mchar_async_cache_add@@Base+0x40>
   14c44:	add	r1, r0, r0, lsl #2
   14c48:	ldr	lr, [r3, #12]
   14c4c:	lsl	r1, r1, #2
   14c50:	add	ip, r2, r1
   14c54:	cmp	lr, #0
   14c58:	str	lr, [ip, #12]
   14c5c:	beq	14c70 <mchar_async_cache_add@@Base+0x94>
   14c60:	ldr	lr, [r3, #12]
   14c64:	add	lr, lr, lr, lsl #2
   14c68:	add	lr, r2, lr, lsl #2
   14c6c:	str	r0, [lr, #16]
   14c70:	mov	lr, #0
   14c74:	str	r0, [r3, #12]
   14c78:	stmib	ip, {r5, lr}
   14c7c:	str	r4, [ip, #16]
   14c80:	str	r7, [r2, r1]
   14c84:	b	14cb4 <mchar_async_cache_add@@Base+0xd8>
   14c88:	ldr	r8, [r0]
   14c8c:	bl	fe60 <mchar_async_cache_malloc@plt>
   14c90:	add	r3, r0, r0, lsl #2
   14c94:	str	r0, [r6, #12]
   14c98:	lsl	r3, r3, #2
   14c9c:	add	r2, r8, r3
   14ca0:	str	r5, [r2, #4]
   14ca4:	str	r4, [r2, #8]
   14ca8:	str	r4, [r2, #12]
   14cac:	str	r4, [r2, #16]
   14cb0:	str	r7, [r8, r3]
   14cb4:	ldrd	r4, [sp]
   14cb8:	ldrd	r6, [sp, #8]
   14cbc:	ldr	r8, [sp, #16]
   14cc0:	add	sp, sp, #20
   14cc4:	pop	{pc}		; (ldr pc, [sp], #4)
   14cc8:	ldr	lr, [r3, #16]
   14ccc:	add	r1, r0, r0, lsl #2
   14cd0:	lsl	r1, r1, #2
   14cd4:	add	ip, r2, r1
   14cd8:	cmp	lr, #0
   14cdc:	beq	14cf8 <mchar_async_cache_add@@Base+0x11c>
   14ce0:	add	r6, lr, lr, lsl #2
   14ce4:	add	r6, r2, r6, lsl #2
   14ce8:	ldr	r8, [r6, #8]
   14cec:	cmp	r8, r4
   14cf0:	streq	r0, [r6, #8]
   14cf4:	beq	14cfc <mchar_async_cache_add@@Base+0x120>
   14cf8:	str	r0, [r6, #12]
   14cfc:	str	lr, [ip, #16]
   14d00:	mov	lr, #0
   14d04:	str	r0, [r3, #16]
   14d08:	str	r5, [ip, #4]
   14d0c:	str	lr, [ip, #8]
   14d10:	str	r4, [ip, #12]
   14d14:	str	r7, [r2, r1]
   14d18:	b	14cb4 <mchar_async_cache_add@@Base+0xd8>
   14d1c:	add	r1, r0, r0, lsl #2
   14d20:	str	r0, [r3, #12]
   14d24:	lsl	r3, r1, #2
   14d28:	add	r1, r2, r3
   14d2c:	stmib	r1, {r5, ip}
   14d30:	str	ip, [r1, #12]
   14d34:	str	r4, [r1, #16]
   14d38:	str	r7, [r2, r3]
   14d3c:	b	14cb4 <mchar_async_cache_add@@Base+0xd8>

00014d40 <mchar_async_node_delete@@Base>:
   14d40:	strd	r4, [sp, #-24]!	; 0xffffffe8
   14d44:	mov	r5, r0
   14d48:	ldr	r0, [r0, #80]	; 0x50
   14d4c:	strd	r6, [sp, #8]
   14d50:	mov	r7, r1
   14d54:	str	r8, [sp, #16]
   14d58:	str	lr, [sp, #20]
   14d5c:	bl	107e4 <mcsync_lock@plt>
   14d60:	ldr	r3, [r5, #60]	; 0x3c
   14d64:	cmp	r3, r7
   14d68:	bls	14e44 <mchar_async_node_delete@@Base+0x104>
   14d6c:	ldr	r2, [r5, #56]	; 0x38
   14d70:	add	r3, r7, r7, lsl #3
   14d74:	lsl	r3, r3, #2
   14d78:	add	r8, r2, r3
   14d7c:	ldr	r4, [r2, r3]
   14d80:	b	14d88 <mchar_async_node_delete@@Base+0x48>
   14d84:	mov	r4, r3
   14d88:	ldr	r3, [r4, #12]
   14d8c:	cmp	r3, #0
   14d90:	bne	14d84 <mchar_async_node_delete@@Base+0x44>
   14d94:	add	r6, r5, #24
   14d98:	mov	r1, r4
   14d9c:	mov	r0, r6
   14da0:	ldr	r2, [r4, #8]
   14da4:	bl	10c10 <mchar_async_cache_add@plt>
   14da8:	ldr	r4, [r4, #16]
   14dac:	cmp	r4, #0
   14db0:	bne	14d98 <mchar_async_node_delete@@Base+0x58>
   14db4:	ldr	r3, [r8, #4]
   14db8:	cmp	r3, #0
   14dbc:	beq	14dcc <mchar_async_node_delete@@Base+0x8c>
   14dc0:	mov	r1, r4
   14dc4:	add	r0, r8, #4
   14dc8:	bl	10820 <mchar_async_cache_destroy@plt>
   14dcc:	mov	r0, r8
   14dd0:	mov	r2, #36	; 0x24
   14dd4:	mov	r1, #0
   14dd8:	bl	10844 <memset@plt>
   14ddc:	ldr	r3, [r5, #72]	; 0x48
   14de0:	ldr	r4, [r5, #76]	; 0x4c
   14de4:	cmp	r3, r4
   14de8:	bcs	14e1c <mchar_async_node_delete@@Base+0xdc>
   14dec:	ldr	r0, [r5, #68]	; 0x44
   14df0:	str	r7, [r0, r3, lsl #2]
   14df4:	ldr	r3, [r5, #72]	; 0x48
   14df8:	ldr	r0, [r5, #80]	; 0x50
   14dfc:	add	r3, r3, #1
   14e00:	str	r3, [r5, #72]	; 0x48
   14e04:	ldrd	r4, [sp]
   14e08:	ldrd	r6, [sp, #8]
   14e0c:	ldr	r8, [sp, #16]
   14e10:	ldr	lr, [sp, #20]
   14e14:	add	sp, sp, #24
   14e18:	b	10e50 <mcsync_unlock@plt>
   14e1c:	lsl	r1, r4, #2
   14e20:	ldr	r0, [r5, #68]	; 0x44
   14e24:	bl	fb84 <mycore_realloc@plt>
   14e28:	cmp	r0, #0
   14e2c:	beq	14e4c <mchar_async_node_delete@@Base+0x10c>
   14e30:	lsl	r4, r4, #1
   14e34:	str	r0, [r5, #68]	; 0x44
   14e38:	ldr	r3, [r5, #72]	; 0x48
   14e3c:	str	r4, [r5, #76]	; 0x4c
   14e40:	b	14df0 <mchar_async_node_delete@@Base+0xb0>
   14e44:	ldr	r0, [r5, #80]	; 0x50
   14e48:	b	14e04 <mchar_async_node_delete@@Base+0xc4>
   14e4c:	ldr	r0, [r5, #68]	; 0x44
   14e50:	ldr	r3, [r5, #72]	; 0x48
   14e54:	b	14df0 <mchar_async_node_delete@@Base+0xb0>

00014e58 <mchar_async_malloc@@Base>:
   14e58:	strd	r4, [sp, #-32]!	; 0xffffffe0
   14e5c:	subs	r5, r2, #0
   14e60:	moveq	r0, r5
   14e64:	strd	r6, [sp, #8]
   14e68:	strd	r8, [sp, #16]
   14e6c:	str	sl, [sp, #24]
   14e70:	str	lr, [sp, #28]
   14e74:	beq	14ed0 <mchar_async_malloc@@Base+0x78>
   14e78:	ldr	r8, [r0, #56]	; 0x38
   14e7c:	add	r1, r1, r1, lsl #3
   14e80:	mov	r7, r0
   14e84:	lsl	r4, r1, #2
   14e88:	add	sl, r8, r4
   14e8c:	ldr	r6, [r8, r4]
   14e90:	ldr	r3, [sl, #20]
   14e94:	cmp	r3, #0
   14e98:	bne	14f28 <mchar_async_malloc@@Base+0xd0>
   14e9c:	ldr	r3, [r6, #4]
   14ea0:	add	r9, r5, #4
   14ea4:	ldr	r2, [r6, #8]
   14ea8:	add	r0, r3, r9
   14eac:	add	r1, r3, #4
   14eb0:	cmp	r2, r0
   14eb4:	bcc	14ee8 <mchar_async_malloc@@Base+0x90>
   14eb8:	ldr	r2, [r6]
   14ebc:	add	r0, r2, r1
   14ec0:	str	r5, [r2, r3]
   14ec4:	ldr	r1, [r6, #4]
   14ec8:	add	r1, r1, r9
   14ecc:	str	r1, [r6, #4]
   14ed0:	ldrd	r4, [sp]
   14ed4:	ldrd	r6, [sp, #8]
   14ed8:	ldrd	r8, [sp, #16]
   14edc:	ldr	sl, [sp, #24]
   14ee0:	add	sp, sp, #28
   14ee4:	pop	{pc}		; (ldr pc, [sp], #4)
   14ee8:	cmp	r2, r1
   14eec:	bhi	14f4c <mchar_async_malloc@@Base+0xf4>
   14ef0:	mov	r1, r9
   14ef4:	mov	r0, sl
   14ef8:	bl	10aa8 <mchar_sync_chunk_find_by_size@plt>
   14efc:	subs	r6, r0, #0
   14f00:	beq	14f7c <mchar_async_malloc@@Base+0x124>
   14f04:	mov	r3, #0
   14f08:	str	r3, [r6, #4]
   14f0c:	mov	r1, r6
   14f10:	ldr	r0, [r8, r4]
   14f14:	bl	fee4 <mchar_sync_chunk_insert_after@plt>
   14f18:	ldr	r3, [r6, #4]
   14f1c:	str	r6, [r8, r4]
   14f20:	add	r1, r3, #4
   14f24:	b	14eb8 <mchar_async_malloc@@Base+0x60>
   14f28:	mov	r1, r5
   14f2c:	add	r0, sl, #4
   14f30:	bl	10ef8 <mchar_async_cache_delete@plt>
   14f34:	cmp	r0, #0
   14f38:	beq	14e9c <mchar_async_malloc@@Base+0x44>
   14f3c:	ldr	r3, [sl, #4]
   14f40:	add	r0, r0, r0, lsl #2
   14f44:	ldr	r0, [r3, r0, lsl #2]
   14f48:	b	14ed0 <mchar_async_malloc@@Base+0x78>
   14f4c:	sub	r2, r2, #4
   14f50:	subs	ip, r2, r3
   14f54:	beq	14ef0 <mchar_async_malloc@@Base+0x98>
   14f58:	ldr	lr, [r6]
   14f5c:	mov	r2, ip
   14f60:	add	r0, sl, #4
   14f64:	str	ip, [lr, r3]
   14f68:	add	r1, lr, r1
   14f6c:	ldr	r3, [r6, #8]
   14f70:	str	r3, [r6, #4]
   14f74:	bl	10c10 <mchar_async_cache_add@plt>
   14f78:	b	14ef0 <mchar_async_malloc@@Base+0x98>
   14f7c:	ldr	r2, [r7]
   14f80:	mov	r1, sl
   14f84:	mov	r0, r7
   14f88:	cmp	r2, r9
   14f8c:	addcc	r2, r2, r9
   14f90:	bl	10964 <mchar_async_chunk_malloc@plt>
   14f94:	mov	r6, r0
   14f98:	b	14f0c <mchar_async_malloc@@Base+0xb4>

00014f9c <mchar_async_realloc@@Base>:
   14f9c:	subs	ip, r2, #0
   14fa0:	strd	r4, [sp, #-32]!	; 0xffffffe0
   14fa4:	strd	r6, [sp, #8]
   14fa8:	strd	r8, [sp, #16]
   14fac:	str	sl, [sp, #24]
   14fb0:	str	lr, [sp, #28]
   14fb4:	ldr	r2, [sp, #32]
   14fb8:	beq	15048 <mchar_async_realloc@@Base+0xac>
   14fbc:	ldr	r7, [ip, #-4]
   14fc0:	cmp	r7, r2
   14fc4:	bcs	15048 <mchar_async_realloc@@Base+0xac>
   14fc8:	ldr	r9, [r0, #56]	; 0x38
   14fcc:	add	lr, r1, r1, lsl #3
   14fd0:	lsl	lr, lr, #2
   14fd4:	ldr	r8, [r9, lr]
   14fd8:	add	r6, r9, lr
   14fdc:	ldr	r4, [r8, #4]
   14fe0:	cmp	r4, r7
   14fe4:	bcc	14ffc <mchar_async_realloc@@Base+0x60>
   14fe8:	ldr	sl, [r8]
   14fec:	sub	r4, r4, r7
   14ff0:	add	sl, sl, r4
   14ff4:	cmp	ip, sl
   14ff8:	beq	15050 <mchar_async_realloc@@Base+0xb4>
   14ffc:	mov	r5, r3
   15000:	mov	r8, ip
   15004:	bl	108a4 <mchar_async_malloc@plt>
   15008:	subs	r4, r0, #0
   1500c:	beq	1502c <mchar_async_realloc@@Base+0x90>
   15010:	mov	r2, r5
   15014:	mov	r1, r8
   15018:	bl	fefc <memcpy@plt>
   1501c:	mov	r2, r7
   15020:	mov	r1, r8
   15024:	add	r0, r6, #4
   15028:	bl	10c10 <mchar_async_cache_add@plt>
   1502c:	mov	r0, r4
   15030:	ldrd	r4, [sp]
   15034:	ldrd	r6, [sp, #8]
   15038:	ldrd	r8, [sp, #16]
   1503c:	ldr	sl, [sp, #24]
   15040:	add	sp, sp, #28
   15044:	pop	{pc}		; (ldr pc, [sp], #4)
   15048:	mov	r4, ip
   1504c:	b	1502c <mchar_async_realloc@@Base+0x90>
   15050:	ldr	r5, [r8, #8]
   15054:	add	r8, r4, r2
   15058:	cmp	r5, r8
   1505c:	bcc	14ffc <mchar_async_realloc@@Base+0x60>
   15060:	str	r2, [ip, #-4]
   15064:	mov	r4, ip
   15068:	ldr	r3, [r9, lr]
   1506c:	str	r8, [r3, #4]
   15070:	b	1502c <mchar_async_realloc@@Base+0x90>

00015074 <mchar_async_crop_first_chars@@Base>:
   15074:	cmp	r2, #0
   15078:	str	r4, [sp, #-8]!
   1507c:	str	lr, [sp, #4]
   15080:	beq	150e4 <mchar_async_crop_first_chars@@Base+0x70>
   15084:	ldr	ip, [r2, #-4]
   15088:	add	r4, r2, r3
   1508c:	add	lr, r3, #4
   15090:	cmp	lr, #4
   15094:	sub	ip, ip, r3
   15098:	str	ip, [r4, #-4]
   1509c:	bhi	150b0 <mchar_async_crop_first_chars@@Base+0x3c>
   150a0:	mov	r0, r4
   150a4:	ldr	r4, [sp]
   150a8:	add	sp, sp, #4
   150ac:	pop	{pc}		; (ldr pc, [sp], #4)
   150b0:	mov	ip, r2
   150b4:	sub	r2, r3, #4
   150b8:	add	r3, r1, r1, lsl #3
   150bc:	mov	r1, ip
   150c0:	str	r2, [ip, #-4]
   150c4:	ldr	r0, [r0, #56]	; 0x38
   150c8:	add	r0, r0, r3, lsl #2
   150cc:	add	r0, r0, #4
   150d0:	bl	10c10 <mchar_async_cache_add@plt>
   150d4:	mov	r0, r4
   150d8:	ldr	r4, [sp]
   150dc:	add	sp, sp, #4
   150e0:	pop	{pc}		; (ldr pc, [sp], #4)
   150e4:	mov	r4, r2
   150e8:	b	150a0 <mchar_async_crop_first_chars@@Base+0x2c>

000150ec <mchar_async_free@@Base>:
   150ec:	cmp	r2, #0
   150f0:	beq	15110 <mchar_async_free@@Base+0x24>
   150f4:	ldr	r3, [r0, #56]	; 0x38
   150f8:	add	r0, r1, r1, lsl #3
   150fc:	mov	r1, r2
   15100:	ldr	r2, [r2, #-4]
   15104:	add	r0, r3, r0, lsl #2
   15108:	add	r0, r0, #4
   1510c:	b	10c10 <mchar_async_cache_add@plt>
   15110:	bx	lr

00015114 <mcobject_create@@Base>:
   15114:	mov	r1, #24
   15118:	mov	r0, #1
   1511c:	b	feb4 <mycore_calloc@plt>

00015120 <mcobject_init@@Base>:
   15120:	mov	r3, #0
   15124:	str	r4, [sp, #-8]!
   15128:	mov	r4, r0
   1512c:	lsl	r0, r1, #2
   15130:	str	lr, [sp, #4]
   15134:	str	r3, [r4]
   15138:	str	r1, [r4, #8]
   1513c:	str	r3, [r4, #12]
   15140:	str	r2, [r4, #16]
   15144:	str	r1, [r4, #20]
   15148:	bl	10c28 <mycore_malloc@plt>
   1514c:	mov	r3, r0
   15150:	cmp	r0, #0
   15154:	moveq	r0, #85	; 0x55
   15158:	movne	r0, #0
   1515c:	str	r3, [r4, #4]
   15160:	ldr	r4, [sp]
   15164:	add	sp, sp, #4
   15168:	pop	{pc}		; (ldr pc, [sp], #4)

0001516c <mcobject_clean@@Base>:
   1516c:	strd	r4, [sp, #-16]!
   15170:	ldr	r4, [r0]
   15174:	str	r6, [sp, #8]
   15178:	str	lr, [sp, #12]
   1517c:	cmp	r4, #0
   15180:	movne	r6, r0
   15184:	bne	15190 <mcobject_clean@@Base+0x24>
   15188:	b	151e8 <mcobject_clean@@Base+0x7c>
   1518c:	mov	r4, r3
   15190:	ldr	r3, [r4, #12]
   15194:	cmp	r3, #0
   15198:	bne	1518c <mcobject_clean@@Base+0x20>
   1519c:	b	151bc <mcobject_clean@@Base+0x50>
   151a0:	mov	r0, r3
   151a4:	bl	10d60 <mycore_free@plt>
   151a8:	mov	r0, r4
   151ac:	bl	10d60 <mycore_free@plt>
   151b0:	cmp	r5, #0
   151b4:	beq	151dc <mcobject_clean@@Base+0x70>
   151b8:	mov	r4, r5
   151bc:	ldr	r3, [r4]
   151c0:	mov	r0, r4
   151c4:	ldr	r5, [r4, #16]
   151c8:	cmp	r3, #0
   151cc:	bne	151a0 <mcobject_clean@@Base+0x34>
   151d0:	bl	10d60 <mycore_free@plt>
   151d4:	cmp	r5, #0
   151d8:	bne	151b8 <mcobject_clean@@Base+0x4c>
   151dc:	mov	r3, #0
   151e0:	str	r3, [r6]
   151e4:	str	r3, [r6, #12]
   151e8:	ldrd	r4, [sp]
   151ec:	ldr	r6, [sp, #8]
   151f0:	add	sp, sp, #12
   151f4:	pop	{pc}		; (ldr pc, [sp], #4)

000151f8 <mcobject_destroy@@Base>:
   151f8:	strd	r4, [sp, #-16]!
   151fc:	subs	r4, r0, #0
   15200:	str	r6, [sp, #8]
   15204:	str	lr, [sp, #12]
   15208:	beq	15234 <mcobject_destroy@@Base+0x3c>
   1520c:	mov	r5, r1
   15210:	bl	10f04 <mcobject_clean@plt>
   15214:	ldr	r0, [r4, #4]
   15218:	cmp	r0, #0
   1521c:	beq	1522c <mcobject_destroy@@Base+0x34>
   15220:	bl	10d60 <mycore_free@plt>
   15224:	mov	r3, #0
   15228:	str	r3, [r4, #4]
   1522c:	cmp	r5, #0
   15230:	bne	15248 <mcobject_destroy@@Base+0x50>
   15234:	mov	r0, r4
   15238:	ldrd	r4, [sp]
   1523c:	ldr	r6, [sp, #8]
   15240:	add	sp, sp, #12
   15244:	pop	{pc}		; (ldr pc, [sp], #4)
   15248:	mov	r0, r4
   1524c:	mov	r4, #0
   15250:	bl	10d60 <mycore_free@plt>
   15254:	b	15234 <mcobject_destroy@@Base+0x3c>

00015258 <mcobject_chunk_malloc@@Base>:
   15258:	strd	r4, [sp, #-16]!
   1525c:	subs	r5, r1, #0
   15260:	movne	r3, #0
   15264:	str	r6, [sp, #8]
   15268:	str	lr, [sp, #12]
   1526c:	strne	r3, [r5]
   15270:	ldr	r3, [r0]
   15274:	cmp	r3, #0
   15278:	beq	152a4 <mcobject_chunk_malloc@@Base+0x4c>
   1527c:	ldr	r3, [r3, #12]
   15280:	cmp	r3, #0
   15284:	beq	152a4 <mcobject_chunk_malloc@@Base+0x4c>
   15288:	mov	r2, #0
   1528c:	str	r3, [r0]
   15290:	str	r2, [r3, #4]
   15294:	ldrd	r4, [sp]
   15298:	ldr	r6, [sp, #8]
   1529c:	add	sp, sp, #12
   152a0:	pop	{pc}		; (ldr pc, [sp], #4)
   152a4:	mov	r4, r0
   152a8:	mov	r1, #20
   152ac:	mov	r0, #1
   152b0:	bl	feb4 <mycore_calloc@plt>
   152b4:	subs	r6, r0, #0
   152b8:	beq	15304 <mcobject_chunk_malloc@@Base+0xac>
   152bc:	ldr	r3, [r4, #16]
   152c0:	ldr	r0, [r4, #20]
   152c4:	mul	r0, r0, r3
   152c8:	bl	10c28 <mycore_malloc@plt>
   152cc:	cmp	r0, #0
   152d0:	str	r0, [r6]
   152d4:	beq	15324 <mcobject_chunk_malloc@@Base+0xcc>
   152d8:	ldr	r3, [r4]
   152dc:	ldr	r2, [r4, #20]
   152e0:	cmp	r3, #0
   152e4:	strne	r3, [r6, #16]
   152e8:	str	r2, [r6, #8]
   152ec:	strne	r6, [r3, #12]
   152f0:	str	r6, [r4]
   152f4:	ldrd	r4, [sp]
   152f8:	ldr	r6, [sp, #8]
   152fc:	add	sp, sp, #12
   15300:	pop	{pc}		; (ldr pc, [sp], #4)
   15304:	cmp	r5, #0
   15308:	beq	15294 <mcobject_chunk_malloc@@Base+0x3c>
   1530c:	mov	r3, #86	; 0x56
   15310:	ldr	r6, [sp, #8]
   15314:	str	r3, [r5]
   15318:	ldrd	r4, [sp]
   1531c:	add	sp, sp, #12
   15320:	pop	{pc}		; (ldr pc, [sp], #4)
   15324:	cmp	r5, #0
   15328:	mov	r0, r6
   1532c:	ldr	r6, [sp, #8]
   15330:	movne	r3, #87	; 0x57
   15334:	ldr	lr, [sp, #12]
   15338:	strne	r3, [r5]
   1533c:	ldrd	r4, [sp]
   15340:	add	sp, sp, #16
   15344:	b	10d60 <mycore_free@plt>

00015348 <mcobject_malloc@@Base>:
   15348:	ldr	r3, [r0, #12]
   1534c:	cmp	r3, #0
   15350:	bne	153d0 <mcobject_malloc@@Base+0x88>
   15354:	ldr	r3, [r0]
   15358:	strd	r4, [sp, #-12]!
   1535c:	mov	r5, r1
   15360:	mov	r4, r0
   15364:	str	lr, [sp, #8]
   15368:	sub	sp, sp, #12
   1536c:	cmp	r3, #0
   15370:	beq	15380 <mcobject_malloc@@Base+0x38>
   15374:	ldmib	r3, {r1, r2}
   15378:	cmp	r1, r2
   1537c:	bcc	1539c <mcobject_malloc@@Base+0x54>
   15380:	add	r1, sp, #4
   15384:	mov	r0, r4
   15388:	bl	fe84 <mcobject_chunk_malloc@plt>
   1538c:	ldr	r3, [sp, #4]
   15390:	cmp	r3, #0
   15394:	bne	153f8 <mcobject_malloc@@Base+0xb0>
   15398:	ldr	r3, [r4]
   1539c:	cmp	r5, #0
   153a0:	movne	r2, #0
   153a4:	ldr	r1, [r3]
   153a8:	strne	r2, [r5]
   153ac:	ldr	r0, [r3, #4]
   153b0:	ldr	ip, [r4, #16]
   153b4:	add	r2, r0, #1
   153b8:	mla	r0, ip, r0, r1
   153bc:	str	r2, [r3, #4]
   153c0:	add	sp, sp, #12
   153c4:	ldrd	r4, [sp]
   153c8:	add	sp, sp, #8
   153cc:	pop	{pc}		; (ldr pc, [sp], #4)
   153d0:	cmp	r1, #0
   153d4:	beq	153e4 <mcobject_malloc@@Base+0x9c>
   153d8:	mov	r3, #0
   153dc:	str	r3, [r1]
   153e0:	ldr	r3, [r0, #12]
   153e4:	sub	r3, r3, #1
   153e8:	ldr	r2, [r0, #4]
   153ec:	str	r3, [r0, #12]
   153f0:	ldr	r0, [r2, r3, lsl #2]
   153f4:	bx	lr
   153f8:	cmp	r5, #0
   153fc:	mov	r0, #0
   15400:	strne	r3, [r5]
   15404:	b	153c0 <mcobject_malloc@@Base+0x78>

00015408 <mcobject_free@@Base>:
   15408:	ldrd	r2, [r0, #8]
   1540c:	strd	r4, [sp, #-16]!
   15410:	mov	r4, r0
   15414:	ldr	r0, [r0, #4]
   15418:	str	r6, [sp, #8]
   1541c:	mov	r6, r1
   15420:	str	lr, [sp, #12]
   15424:	cmp	r3, r2
   15428:	bcs	1544c <mcobject_free@@Base+0x44>
   1542c:	add	r2, r3, #1
   15430:	str	r6, [r0, r3, lsl #2]
   15434:	mov	r0, #0
   15438:	str	r2, [r4, #12]
   1543c:	ldrd	r4, [sp]
   15440:	ldr	r6, [sp, #8]
   15444:	add	sp, sp, #12
   15448:	pop	{pc}		; (ldr pc, [sp], #4)
   1544c:	lsl	r1, r2, #3
   15450:	lsl	r5, r2, #1
   15454:	bl	fb84 <mycore_realloc@plt>
   15458:	cmp	r0, #0
   1545c:	beq	1546c <mcobject_free@@Base+0x64>
   15460:	stmib	r4, {r0, r5}
   15464:	ldr	r3, [r4, #12]
   15468:	b	1542c <mcobject_free@@Base+0x24>
   1546c:	mov	r0, #88	; 0x58
   15470:	b	1543c <mcobject_free@@Base+0x34>

00015474 <mcobject_async_create@@Base>:
   15474:	mov	r1, #72	; 0x48
   15478:	mov	r0, #1
   1547c:	b	feb4 <mycore_calloc@plt>

00015480 <mcobject_async_chunk_up@@Base>:
   15480:	strd	r4, [sp, #-16]!
   15484:	mov	r3, #0
   15488:	ldr	r5, [r0, #24]
   1548c:	str	r6, [sp, #8]
   15490:	ldr	r6, [r0, #32]
   15494:	str	lr, [sp, #12]
   15498:	str	r3, [r0, #40]	; 0x28
   1549c:	ldr	r3, [r5, r6, lsl #2]
   154a0:	cmp	r3, #0
   154a4:	beq	154bc <mcobject_async_chunk_up@@Base+0x3c>
   154a8:	mov	r0, #0
   154ac:	ldrd	r4, [sp]
   154b0:	ldr	r6, [sp, #8]
   154b4:	add	sp, sp, #12
   154b8:	pop	{pc}		; (ldr pc, [sp], #4)
   154bc:	mov	r4, r0
   154c0:	mov	r1, #20
   154c4:	ldr	r0, [r0, #36]	; 0x24
   154c8:	bl	feb4 <mycore_calloc@plt>
   154cc:	ldr	r3, [r4, #24]
   154d0:	ldr	r2, [r4, #32]
   154d4:	str	r0, [r5, r6, lsl #2]
   154d8:	ldr	r3, [r3, r2, lsl #2]
   154dc:	cmp	r3, #0
   154e0:	bne	154a8 <mcobject_async_chunk_up@@Base+0x28>
   154e4:	mov	r0, #2
   154e8:	b	154ac <mcobject_async_chunk_up@@Base+0x2c>

000154ec <mcobject_async_destroy@@Base>:
   154ec:	strd	r4, [sp, #-32]!	; 0xffffffe0
   154f0:	strd	r6, [sp, #8]
   154f4:	subs	r6, r0, #0
   154f8:	strd	r8, [sp, #16]
   154fc:	str	sl, [sp, #24]
   15500:	str	lr, [sp, #28]
   15504:	beq	15638 <mcobject_async_destroy@@Base+0x14c>
   15508:	ldr	r2, [r6, #44]	; 0x2c
   1550c:	mov	r8, r1
   15510:	cmp	r2, #0
   15514:	beq	15558 <mcobject_async_destroy@@Base+0x6c>
   15518:	ldr	r1, [r6, #48]	; 0x30
   1551c:	cmp	r1, #0
   15520:	beq	15550 <mcobject_async_destroy@@Base+0x64>
   15524:	mov	r4, #0
   15528:	add	r3, r2, r4, lsl #4
   1552c:	ldr	r3, [r3, #4]
   15530:	subs	r0, r3, #0
   15534:	beq	15678 <mcobject_async_destroy@@Base+0x18c>
   15538:	bl	10d60 <mycore_free@plt>
   1553c:	add	r4, r4, #1
   15540:	ldr	r2, [r6, #44]	; 0x2c
   15544:	ldr	r1, [r6, #48]	; 0x30
   15548:	cmp	r4, r1
   1554c:	bcc	15528 <mcobject_async_destroy@@Base+0x3c>
   15550:	mov	r0, r2
   15554:	bl	10d60 <mycore_free@plt>
   15558:	ldr	r0, [r6, #56]	; 0x38
   1555c:	cmp	r0, #0
   15560:	beq	15568 <mcobject_async_destroy@@Base+0x7c>
   15564:	bl	10d60 <mycore_free@plt>
   15568:	ldr	r0, [r6, #24]
   1556c:	cmp	r0, #0
   15570:	beq	15604 <mcobject_async_destroy@@Base+0x118>
   15574:	ldr	r3, [r6, #32]
   15578:	cmp	r3, #0
   1557c:	beq	15600 <mcobject_async_destroy@@Base+0x114>
   15580:	mov	r9, #0
   15584:	b	15594 <mcobject_async_destroy@@Base+0xa8>
   15588:	add	r9, r9, #1
   1558c:	cmp	r9, r3
   15590:	bcs	15600 <mcobject_async_destroy@@Base+0x114>
   15594:	ldr	r2, [r0, r9, lsl #2]
   15598:	lsl	r7, r9, #2
   1559c:	cmp	r2, #0
   155a0:	beq	15588 <mcobject_async_destroy@@Base+0x9c>
   155a4:	ldr	r1, [r6, #36]	; 0x24
   155a8:	cmp	r1, #0
   155ac:	beq	155e4 <mcobject_async_destroy@@Base+0xf8>
   155b0:	mov	r4, #0
   155b4:	mov	r5, r4
   155b8:	ldr	r3, [r2, r4]
   155bc:	subs	r0, r3, #0
   155c0:	beq	15654 <mcobject_async_destroy@@Base+0x168>
   155c4:	bl	10d60 <mycore_free@plt>
   155c8:	ldr	r3, [r6, #24]
   155cc:	add	r5, r5, #1
   155d0:	add	r4, r4, #20
   155d4:	ldr	r1, [r6, #36]	; 0x24
   155d8:	ldr	r2, [r3, r7]
   155dc:	cmp	r5, r1
   155e0:	bcc	155b8 <mcobject_async_destroy@@Base+0xcc>
   155e4:	mov	r0, r2
   155e8:	bl	10d60 <mycore_free@plt>
   155ec:	ldr	r0, [r6, #24]
   155f0:	ldr	r3, [r6, #32]
   155f4:	add	r9, r9, #1
   155f8:	cmp	r9, r3
   155fc:	bcc	15594 <mcobject_async_destroy@@Base+0xa8>
   15600:	bl	10d60 <mycore_free@plt>
   15604:	ldr	r0, [r6, #12]
   15608:	cmp	r0, #0
   1560c:	beq	15614 <mcobject_async_destroy@@Base+0x128>
   15610:	bl	10d60 <mycore_free@plt>
   15614:	mov	r1, #1
   15618:	ldr	r0, [r6, #68]	; 0x44
   1561c:	bl	10154 <mcsync_destroy@plt>
   15620:	mov	r2, #72	; 0x48
   15624:	mov	r1, #0
   15628:	mov	r0, r6
   1562c:	bl	10844 <memset@plt>
   15630:	cmp	r8, #0
   15634:	bne	15688 <mcobject_async_destroy@@Base+0x19c>
   15638:	mov	r0, r6
   1563c:	ldrd	r4, [sp]
   15640:	ldrd	r6, [sp, #8]
   15644:	ldrd	r8, [sp, #16]
   15648:	ldr	sl, [sp, #24]
   1564c:	add	sp, sp, #28
   15650:	pop	{pc}		; (ldr pc, [sp], #4)
   15654:	add	r5, r5, #1
   15658:	add	r4, r4, #20
   1565c:	cmp	r5, r1
   15660:	bcc	155b8 <mcobject_async_destroy@@Base+0xcc>
   15664:	mov	r0, r2
   15668:	bl	10d60 <mycore_free@plt>
   1566c:	ldr	r0, [r6, #24]
   15670:	ldr	r3, [r6, #32]
   15674:	b	155f4 <mcobject_async_destroy@@Base+0x108>
   15678:	add	r4, r4, #1
   1567c:	cmp	r4, r1
   15680:	bcc	15528 <mcobject_async_destroy@@Base+0x3c>
   15684:	b	15550 <mcobject_async_destroy@@Base+0x64>
   15688:	mov	r0, r6
   1568c:	mov	r6, #0
   15690:	bl	10d60 <mycore_free@plt>
   15694:	b	15638 <mcobject_async_destroy@@Base+0x14c>

00015698 <mcobject_async_mem_malloc@@Base>:
   15698:	strd	r4, [sp, #-16]!
   1569c:	mov	r4, r1
   156a0:	mov	r5, r2
   156a4:	str	r6, [sp, #8]
   156a8:	mov	r6, r0
   156ac:	ldr	r0, [r1]
   156b0:	str	lr, [sp, #12]
   156b4:	cmp	r0, #0
   156b8:	beq	15728 <mcobject_async_mem_malloc@@Base+0x90>
   156bc:	ldr	r3, [r1, #8]
   156c0:	cmp	r3, r2
   156c4:	movcs	r3, #0
   156c8:	movcs	r0, r3
   156cc:	strcs	r3, [r1, #4]
   156d0:	bcc	156e4 <mcobject_async_mem_malloc@@Base+0x4c>
   156d4:	ldrd	r4, [sp]
   156d8:	ldr	r6, [sp, #8]
   156dc:	add	sp, sp, #12
   156e0:	pop	{pc}		; (ldr pc, [sp], #4)
   156e4:	bl	10d60 <mycore_free@plt>
   156e8:	ldr	r2, [r6]
   156ec:	ldr	r0, [r6, #8]
   156f0:	add	r5, r5, r2
   156f4:	mul	r0, r0, r5
   156f8:	str	r5, [r4, #8]
   156fc:	bl	10c28 <mycore_malloc@plt>
   15700:	str	r0, [r4]
   15704:	mov	r3, #0
   15708:	ldr	r6, [sp, #8]
   1570c:	cmp	r0, r3
   15710:	str	r3, [r4, #4]
   15714:	movne	r0, r3
   15718:	moveq	r0, #2
   1571c:	ldrd	r4, [sp]
   15720:	add	sp, sp, #12
   15724:	pop	{pc}		; (ldr pc, [sp], #4)
   15728:	ldr	r3, [r6]
   1572c:	ldr	r0, [r6, #8]
   15730:	cmp	r3, r2
   15734:	addcc	r3, r3, r2
   15738:	mul	r0, r0, r3
   1573c:	str	r3, [r1, #8]
   15740:	bl	10c28 <mycore_malloc@plt>
   15744:	str	r0, [r4]
   15748:	b	15704 <mcobject_async_mem_malloc@@Base+0x6c>

0001574c <mcobject_async_chunk_malloc_without_lock@@Base>:
   1574c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   15750:	ldr	r5, [r0, #20]
   15754:	strd	r6, [sp, #8]
   15758:	subs	r6, r2, #0
   1575c:	movne	r3, #0
   15760:	strd	r8, [sp, #16]
   15764:	str	sl, [sp, #24]
   15768:	str	lr, [sp, #28]
   1576c:	strne	r3, [r6]
   15770:	cmp	r5, #0
   15774:	bne	15858 <mcobject_async_chunk_malloc_without_lock@@Base+0x10c>
   15778:	mov	r7, r1
   1577c:	mov	r4, r0
   15780:	ldr	r2, [r0, #32]
   15784:	ldr	r1, [r0, #36]	; 0x24
   15788:	ldr	r3, [r0, #40]	; 0x28
   1578c:	cmp	r3, r1
   15790:	bcc	157f8 <mcobject_async_chunk_malloc_without_lock@@Base+0xac>
   15794:	ldr	r3, [r0, #28]
   15798:	cmp	r3, r2
   1579c:	bhi	157d8 <mcobject_async_chunk_malloc_without_lock@@Base+0x8c>
   157a0:	lsl	r1, r3, #3
   157a4:	ldr	r0, [r0, #24]
   157a8:	lsl	r8, r3, #1
   157ac:	bl	fb84 <mycore_realloc@plt>
   157b0:	subs	r9, r0, #0
   157b4:	beq	1588c <mcobject_async_chunk_malloc_without_lock@@Base+0x140>
   157b8:	ldr	r0, [r4, #32]
   157bc:	mov	r1, r5
   157c0:	sub	r2, r8, r0
   157c4:	add	r0, r9, r0, lsl #2
   157c8:	lsl	r2, r2, #2
   157cc:	bl	10844 <memset@plt>
   157d0:	str	r9, [r4, #24]
   157d4:	str	r8, [r4, #28]
   157d8:	mov	r0, r4
   157dc:	bl	1013c <mcobject_async_chunk_up@plt>
   157e0:	cmp	r0, #0
   157e4:	bne	1588c <mcobject_async_chunk_malloc_without_lock@@Base+0x140>
   157e8:	ldr	r2, [r4, #32]
   157ec:	ldr	r3, [r4, #40]	; 0x28
   157f0:	add	r2, r2, #1
   157f4:	str	r2, [r4, #32]
   157f8:	ldr	ip, [r4, #24]
   157fc:	sub	r2, r2, #-1073741823	; 0xc0000001
   15800:	add	r0, r3, r3, lsl #2
   15804:	mov	r1, #0
   15808:	add	r3, r3, #1
   1580c:	cmp	r6, #0
   15810:	ldr	r5, [ip, r2, lsl #2]
   15814:	mov	r2, r7
   15818:	str	r3, [r4, #40]	; 0x28
   1581c:	add	r5, r5, r0, lsl #2
   15820:	mov	r0, r4
   15824:	str	r1, [r5, #12]
   15828:	str	r1, [r5, #16]
   1582c:	mov	r1, r5
   15830:	beq	15884 <mcobject_async_chunk_malloc_without_lock@@Base+0x138>
   15834:	bl	fd64 <mcobject_async_mem_malloc@plt>
   15838:	str	r0, [r6]
   1583c:	mov	r0, r5
   15840:	ldrd	r4, [sp]
   15844:	ldrd	r6, [sp, #8]
   15848:	ldrd	r8, [sp, #16]
   1584c:	ldr	sl, [sp, #24]
   15850:	add	sp, sp, #28
   15854:	pop	{pc}		; (ldr pc, [sp], #4)
   15858:	ldr	r3, [r0, #12]
   1585c:	sub	r5, r5, #1
   15860:	mov	r2, #0
   15864:	ldr	r1, [r3, r5, lsl #2]
   15868:	str	r5, [r0, #20]
   1586c:	str	r2, [r1, #12]
   15870:	ldr	r0, [r3, r5, lsl #2]
   15874:	str	r2, [r1, #4]
   15878:	str	r2, [r0, #16]
   1587c:	ldr	r5, [r3, r5, lsl #2]
   15880:	b	1583c <mcobject_async_chunk_malloc_without_lock@@Base+0xf0>
   15884:	bl	fd64 <mcobject_async_mem_malloc@plt>
   15888:	b	1583c <mcobject_async_chunk_malloc_without_lock@@Base+0xf0>
   1588c:	cmp	r6, #0
   15890:	moveq	r5, r6
   15894:	beq	1583c <mcobject_async_chunk_malloc_without_lock@@Base+0xf0>
   15898:	mov	r3, #2
   1589c:	mov	r5, #0
   158a0:	str	r3, [r6]
   158a4:	b	1583c <mcobject_async_chunk_malloc_without_lock@@Base+0xf0>

000158a8 <mcobject_async_chunk_malloc@@Base>:
   158a8:	strd	r4, [sp, #-16]!
   158ac:	mov	r4, r0
   158b0:	mov	r5, r2
   158b4:	ldr	r0, [r0, #68]	; 0x44
   158b8:	str	r6, [sp, #8]
   158bc:	mov	r6, r1
   158c0:	str	lr, [sp, #12]
   158c4:	bl	107e4 <mcsync_lock@plt>
   158c8:	cmp	r0, #0
   158cc:	bne	15900 <mcobject_async_chunk_malloc@@Base+0x58>
   158d0:	mov	r1, r6
   158d4:	mov	r2, r5
   158d8:	mov	r0, r4
   158dc:	bl	10874 <mcobject_async_chunk_malloc_without_lock@plt>
   158e0:	mov	r6, r0
   158e4:	ldr	r0, [r4, #68]	; 0x44
   158e8:	bl	10e50 <mcsync_unlock@plt>
   158ec:	mov	r0, r6
   158f0:	ldrd	r4, [sp]
   158f4:	ldr	r6, [sp, #8]
   158f8:	add	sp, sp, #12
   158fc:	pop	{pc}		; (ldr pc, [sp], #4)
   15900:	cmp	r5, #0
   15904:	moveq	r6, r5
   15908:	beq	158ec <mcobject_async_chunk_malloc@@Base+0x44>
   1590c:	mov	r3, #1
   15910:	mov	r6, #0
   15914:	str	r3, [r5]
   15918:	b	158ec <mcobject_async_chunk_malloc@@Base+0x44>

0001591c <mcobject_async_clean@@Base>:
   1591c:	ldr	r3, [r0, #24]
   15920:	strd	r4, [sp, #-24]!	; 0xffffffe8
   15924:	mov	r4, #0
   15928:	ldr	ip, [r0, #48]	; 0x30
   1592c:	ldr	r3, [r3]
   15930:	strd	r6, [sp, #8]
   15934:	str	r8, [sp, #16]
   15938:	str	lr, [sp, #20]
   1593c:	str	r4, [r0, #20]
   15940:	subs	r3, r3, r4
   15944:	str	r4, [r0, #40]	; 0x28
   15948:	movne	r3, #1
   1594c:	cmp	ip, r4
   15950:	str	r3, [r0, #32]
   15954:	beq	159b0 <mcobject_async_clean@@Base+0x94>
   15958:	ldr	r6, [r0, #44]	; 0x2c
   1595c:	mov	r5, r0
   15960:	mov	r7, r4
   15964:	add	r1, r6, r4, lsl #4
   15968:	mov	r2, #0
   1596c:	mov	r0, r5
   15970:	ldr	r3, [r6, r4, lsl #4]
   15974:	str	r7, [r1, #12]
   15978:	cmp	r3, r2
   1597c:	beq	159a4 <mcobject_async_clean@@Base+0x88>
   15980:	ldr	r1, [r5]
   15984:	bl	100ac <mcobject_async_chunk_malloc@plt>
   15988:	ldr	ip, [r5, #48]	; 0x30
   1598c:	str	r0, [r6, r4, lsl #4]
   15990:	add	r4, r4, #1
   15994:	cmp	r4, ip
   15998:	bcs	159b0 <mcobject_async_clean@@Base+0x94>
   1599c:	ldr	r6, [r5, #44]	; 0x2c
   159a0:	b	15964 <mcobject_async_clean@@Base+0x48>
   159a4:	add	r4, r4, #1
   159a8:	cmp	r4, ip
   159ac:	bcc	15964 <mcobject_async_clean@@Base+0x48>
   159b0:	ldrd	r4, [sp]
   159b4:	ldrd	r6, [sp, #8]
   159b8:	ldr	r8, [sp, #16]
   159bc:	add	sp, sp, #20
   159c0:	pop	{pc}		; (ldr pc, [sp], #4)

000159c4 <mcobject_async_init@@Base>:
   159c4:	add	ip, r3, #4
   159c8:	strd	r4, [sp, #-16]!
   159cc:	mov	r4, r0
   159d0:	mov	r5, #0
   159d4:	str	r6, [sp, #8]
   159d8:	str	lr, [sp, #12]
   159dc:	strd	r2, [r0]
   159e0:	mov	r2, #128	; 0x80
   159e4:	str	ip, [r0, #8]
   159e8:	str	r5, [r0, #32]
   159ec:	str	r1, [r0, #36]	; 0x24
   159f0:	mov	r0, r2
   159f4:	mov	r1, #4
   159f8:	str	r2, [r4, #28]
   159fc:	bl	feb4 <mycore_calloc@plt>
   15a00:	cmp	r0, r5
   15a04:	str	r0, [r4, #24]
   15a08:	moveq	r0, #2
   15a0c:	beq	15aa8 <mcobject_async_init@@Base+0xe4>
   15a10:	mov	r0, r4
   15a14:	bl	1013c <mcobject_async_chunk_up@plt>
   15a18:	ldr	r3, [r4, #36]	; 0x24
   15a1c:	mov	r1, #4
   15a20:	mov	r0, r3
   15a24:	str	r3, [r4, #16]
   15a28:	bl	feb4 <mycore_calloc@plt>
   15a2c:	cmp	r0, r5
   15a30:	str	r0, [r4, #12]
   15a34:	moveq	r0, #3
   15a38:	beq	15aa8 <mcobject_async_init@@Base+0xe4>
   15a3c:	mov	r3, #64	; 0x40
   15a40:	mov	r1, #16
   15a44:	str	r5, [r4, #48]	; 0x30
   15a48:	mov	r0, r3
   15a4c:	str	r3, [r4, #52]	; 0x34
   15a50:	bl	feb4 <mycore_calloc@plt>
   15a54:	cmp	r0, r5
   15a58:	str	r0, [r4, #44]	; 0x2c
   15a5c:	beq	15ab8 <mcobject_async_init@@Base+0xf4>
   15a60:	ldr	r3, [r4, #52]	; 0x34
   15a64:	str	r5, [r4, #60]	; 0x3c
   15a68:	lsl	r0, r3, #2
   15a6c:	str	r3, [r4, #64]	; 0x40
   15a70:	bl	10c28 <mycore_malloc@plt>
   15a74:	cmp	r0, #0
   15a78:	str	r0, [r4, #56]	; 0x38
   15a7c:	beq	15ab8 <mcobject_async_init@@Base+0xf4>
   15a80:	mov	r0, r4
   15a84:	bl	10fe8 <mcobject_async_clean@plt>
   15a88:	bl	fd34 <mcsync_create@plt>
   15a8c:	cmp	r0, #0
   15a90:	str	r0, [r4, #68]	; 0x44
   15a94:	moveq	r0, #1
   15a98:	beq	15aa8 <mcobject_async_init@@Base+0xe4>
   15a9c:	bl	107fc <mcsync_init@plt>
   15aa0:	adds	r0, r0, #0
   15aa4:	movne	r0, #1
   15aa8:	ldrd	r4, [sp]
   15aac:	ldr	r6, [sp, #8]
   15ab0:	add	sp, sp, #12
   15ab4:	pop	{pc}		; (ldr pc, [sp], #4)
   15ab8:	ldrd	r4, [sp]
   15abc:	mov	r0, #4
   15ac0:	ldr	r6, [sp, #8]
   15ac4:	add	sp, sp, #12
   15ac8:	pop	{pc}		; (ldr pc, [sp], #4)

00015acc <mcobject_async_node_add@@Base>:
   15acc:	strd	r4, [sp, #-24]!	; 0xffffffe8
   15ad0:	mov	r5, r1
   15ad4:	mov	r4, r0
   15ad8:	ldr	r0, [r0, #68]	; 0x44
   15adc:	strd	r6, [sp, #8]
   15ae0:	str	r8, [sp, #16]
   15ae4:	str	lr, [sp, #20]
   15ae8:	bl	107e4 <mcsync_lock@plt>
   15aec:	cmp	r5, #0
   15af0:	movne	r3, #0
   15af4:	strne	r3, [r5]
   15af8:	ldr	r3, [r4, #60]	; 0x3c
   15afc:	cmp	r3, #0
   15b00:	beq	15b88 <mcobject_async_node_add@@Base+0xbc>
   15b04:	ldr	r2, [r4, #56]	; 0x38
   15b08:	sub	r3, r3, #1
   15b0c:	str	r3, [r4, #60]	; 0x3c
   15b10:	ldr	r6, [r2, r3, lsl #2]
   15b14:	mov	r2, r5
   15b18:	mov	r0, r4
   15b1c:	ldr	r1, [r4]
   15b20:	ldr	r8, [r4, #44]	; 0x2c
   15b24:	bl	10874 <mcobject_async_chunk_malloc_without_lock@plt>
   15b28:	cmp	r5, #0
   15b2c:	add	r7, r8, r6, lsl #4
   15b30:	str	r0, [r8, r6, lsl #4]
   15b34:	beq	15bc8 <mcobject_async_node_add@@Base+0xfc>
   15b38:	ldr	r3, [r5]
   15b3c:	cmp	r3, #0
   15b40:	bne	15ba0 <mcobject_async_node_add@@Base+0xd4>
   15b44:	ldr	r2, [r4]
   15b48:	str	r3, [r0, #12]
   15b4c:	str	r3, [r0, #16]
   15b50:	lsl	r0, r2, #2
   15b54:	strd	r2, [r7, #8]
   15b58:	bl	10c28 <mycore_malloc@plt>
   15b5c:	cmp	r0, #0
   15b60:	str	r0, [r7, #4]
   15b64:	beq	15bb0 <mcobject_async_node_add@@Base+0xe4>
   15b68:	ldr	r0, [r4, #68]	; 0x44
   15b6c:	bl	10e50 <mcsync_unlock@plt>
   15b70:	mov	r0, r6
   15b74:	ldrd	r4, [sp]
   15b78:	ldrd	r6, [sp, #8]
   15b7c:	ldr	r8, [sp, #16]
   15b80:	add	sp, sp, #20
   15b84:	pop	{pc}		; (ldr pc, [sp], #4)
   15b88:	ldr	r6, [r4, #48]	; 0x30
   15b8c:	ldr	r2, [r4, #52]	; 0x34
   15b90:	cmp	r6, r2
   15b94:	addcc	r3, r6, #1
   15b98:	strcc	r3, [r4, #48]	; 0x30
   15b9c:	bcc	15b14 <mcobject_async_node_add@@Base+0x48>
   15ba0:	ldr	r0, [r4, #68]	; 0x44
   15ba4:	mov	r6, #0
   15ba8:	bl	10e50 <mcsync_unlock@plt>
   15bac:	b	15b70 <mcobject_async_node_add@@Base+0xa4>
   15bb0:	mov	r3, #3
   15bb4:	ldr	r0, [r4, #68]	; 0x44
   15bb8:	mov	r6, #0
   15bbc:	str	r3, [r5]
   15bc0:	bl	10e50 <mcsync_unlock@plt>
   15bc4:	b	15b70 <mcobject_async_node_add@@Base+0xa4>
   15bc8:	ldr	r3, [r4]
   15bcc:	str	r5, [r0, #12]
   15bd0:	str	r5, [r0, #16]
   15bd4:	lsl	r0, r3, #2
   15bd8:	str	r3, [r7, #8]
   15bdc:	str	r5, [r7, #12]
   15be0:	bl	10c28 <mycore_malloc@plt>
   15be4:	cmp	r0, #0
   15be8:	str	r0, [r7, #4]
   15bec:	bne	15b68 <mcobject_async_node_add@@Base+0x9c>
   15bf0:	b	15ba0 <mcobject_async_node_add@@Base+0xd4>

00015bf4 <mcobject_async_node_clean@@Base>:
   15bf4:	ldr	r3, [r0, #48]	; 0x30
   15bf8:	cmp	r3, r1
   15bfc:	bls	15c50 <mcobject_async_node_clean@@Base+0x5c>
   15c00:	ldr	r0, [r0, #44]	; 0x2c
   15c04:	mov	r2, #0
   15c08:	ldr	r3, [r0, r1, lsl #4]
   15c0c:	add	ip, r0, r1, lsl #4
   15c10:	str	r2, [ip, #12]
   15c14:	cmp	r3, r2
   15c18:	beq	15c50 <mcobject_async_node_clean@@Base+0x5c>
   15c1c:	ldr	r2, [r3, #16]
   15c20:	cmp	r2, #0
   15c24:	bne	15c34 <mcobject_async_node_clean@@Base+0x40>
   15c28:	mov	r2, r3
   15c2c:	b	15c44 <mcobject_async_node_clean@@Base+0x50>
   15c30:	mov	r2, r3
   15c34:	ldr	r3, [r2, #16]
   15c38:	cmp	r3, #0
   15c3c:	bne	15c30 <mcobject_async_node_clean@@Base+0x3c>
   15c40:	str	r2, [r0, r1, lsl #4]
   15c44:	mov	r3, #0
   15c48:	str	r3, [r2, #4]
   15c4c:	str	r3, [ip, #12]
   15c50:	bx	lr

00015c54 <mcobject_async_node_all_clean@@Base>:
   15c54:	ldr	r3, [r0, #48]	; 0x30
   15c58:	cmp	r3, #0
   15c5c:	bxeq	lr
   15c60:	strd	r4, [sp, #-16]!
   15c64:	mov	r5, r0
   15c68:	mov	r4, #0
   15c6c:	str	r6, [sp, #8]
   15c70:	str	lr, [sp, #12]
   15c74:	mov	r1, r4
   15c78:	mov	r0, r5
   15c7c:	bl	10814 <mcobject_async_node_clean@plt>
   15c80:	ldr	r3, [r5, #48]	; 0x30
   15c84:	add	r4, r4, #1
   15c88:	cmp	r3, r4
   15c8c:	bhi	15c74 <mcobject_async_node_all_clean@@Base+0x20>
   15c90:	ldrd	r4, [sp]
   15c94:	ldr	r6, [sp, #8]
   15c98:	add	sp, sp, #12
   15c9c:	pop	{pc}		; (ldr pc, [sp], #4)

00015ca0 <mcobject_async_node_delete@@Base>:
   15ca0:	strd	r4, [sp, #-32]!	; 0xffffffe0
   15ca4:	mov	r5, r0
   15ca8:	ldr	r0, [r0, #68]	; 0x44
   15cac:	strd	r6, [sp, #8]
   15cb0:	mov	r7, r1
   15cb4:	strd	r8, [sp, #16]
   15cb8:	str	sl, [sp, #24]
   15cbc:	str	lr, [sp, #28]
   15cc0:	bl	107e4 <mcsync_lock@plt>
   15cc4:	ldr	r3, [r5, #48]	; 0x30
   15cc8:	cmp	r3, r7
   15ccc:	bls	15dd4 <mcobject_async_node_delete@@Base+0x134>
   15cd0:	ldr	r9, [r5, #44]	; 0x2c
   15cd4:	add	r8, r9, r7, lsl #4
   15cd8:	ldr	r4, [r9, r7, lsl #4]
   15cdc:	b	15ce4 <mcobject_async_node_delete@@Base+0x44>
   15ce0:	mov	r4, r3
   15ce4:	ldr	r3, [r4, #12]
   15ce8:	cmp	r3, #0
   15cec:	bne	15ce0 <mcobject_async_node_delete@@Base+0x40>
   15cf0:	ldr	r0, [r5, #12]
   15cf4:	ldr	r6, [r5, #16]
   15cf8:	ldr	r3, [r5, #20]
   15cfc:	b	15d18 <mcobject_async_node_delete@@Base+0x78>
   15d00:	str	r4, [r0, r3, lsl #2]
   15d04:	add	r3, r3, #1
   15d08:	ldr	r4, [r4, #16]
   15d0c:	str	r3, [r5, #20]
   15d10:	cmp	r4, #0
   15d14:	beq	15d44 <mcobject_async_node_delete@@Base+0xa4>
   15d18:	cmp	r3, r6
   15d1c:	bcc	15d00 <mcobject_async_node_delete@@Base+0x60>
   15d20:	lsl	r6, r6, #1
   15d24:	lsl	r1, r6, #2
   15d28:	bl	fb84 <mycore_realloc@plt>
   15d2c:	cmp	r0, #0
   15d30:	beq	15dd4 <mcobject_async_node_delete@@Base+0x134>
   15d34:	str	r0, [r5, #12]
   15d38:	str	r6, [r5, #16]
   15d3c:	ldr	r3, [r5, #20]
   15d40:	b	15d00 <mcobject_async_node_delete@@Base+0x60>
   15d44:	ldr	r0, [r8, #4]
   15d48:	cmp	r0, #0
   15d4c:	beq	15d54 <mcobject_async_node_delete@@Base+0xb4>
   15d50:	bl	10d60 <mycore_free@plt>
   15d54:	mov	r3, #0
   15d58:	str	r3, [r9, r7, lsl #4]
   15d5c:	str	r3, [r8, #4]
   15d60:	str	r3, [r8, #8]
   15d64:	str	r3, [r8, #12]
   15d68:	ldr	r3, [r5, #60]	; 0x3c
   15d6c:	ldr	r4, [r5, #64]	; 0x40
   15d70:	cmp	r3, r4
   15d74:	bcs	15dac <mcobject_async_node_delete@@Base+0x10c>
   15d78:	ldr	r0, [r5, #56]	; 0x38
   15d7c:	str	r7, [r0, r3, lsl #2]
   15d80:	ldr	r3, [r5, #60]	; 0x3c
   15d84:	ldr	r0, [r5, #68]	; 0x44
   15d88:	add	r3, r3, #1
   15d8c:	str	r3, [r5, #60]	; 0x3c
   15d90:	ldrd	r4, [sp]
   15d94:	ldrd	r6, [sp, #8]
   15d98:	ldrd	r8, [sp, #16]
   15d9c:	ldr	sl, [sp, #24]
   15da0:	ldr	lr, [sp, #28]
   15da4:	add	sp, sp, #32
   15da8:	b	10e50 <mcsync_unlock@plt>
   15dac:	lsl	r1, r4, #2
   15db0:	ldr	r0, [r5, #56]	; 0x38
   15db4:	bl	fb84 <mycore_realloc@plt>
   15db8:	cmp	r0, #0
   15dbc:	beq	15ddc <mcobject_async_node_delete@@Base+0x13c>
   15dc0:	lsl	r4, r4, #1
   15dc4:	str	r0, [r5, #56]	; 0x38
   15dc8:	ldr	r3, [r5, #60]	; 0x3c
   15dcc:	str	r4, [r5, #64]	; 0x40
   15dd0:	b	15d7c <mcobject_async_node_delete@@Base+0xdc>
   15dd4:	ldr	r0, [r5, #68]	; 0x44
   15dd8:	b	15d90 <mcobject_async_node_delete@@Base+0xf0>
   15ddc:	ldr	r0, [r5, #56]	; 0x38
   15de0:	ldr	r3, [r5, #60]	; 0x3c
   15de4:	b	15d7c <mcobject_async_node_delete@@Base+0xdc>

00015de8 <mcobject_async_malloc@@Base>:
   15de8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   15dec:	strd	r6, [sp, #8]
   15df0:	ldr	r7, [r0, #44]	; 0x2c
   15df4:	str	r8, [sp, #16]
   15df8:	str	lr, [sp, #20]
   15dfc:	sub	sp, sp, #8
   15e00:	add	r3, r7, r1, lsl #4
   15e04:	ldr	lr, [r3, #12]
   15e08:	cmp	lr, #0
   15e0c:	bne	15e90 <mcobject_async_malloc@@Base+0xa8>
   15e10:	ldr	r4, [r7, r1, lsl #4]
   15e14:	mov	r6, r1
   15e18:	mov	r5, r0
   15e1c:	mov	r8, r2
   15e20:	ldmib	r4, {r1, r3}
   15e24:	cmp	r1, r3
   15e28:	bcc	15e44 <mcobject_async_malloc@@Base+0x5c>
   15e2c:	ldr	r4, [r4, #12]
   15e30:	cmp	r4, #0
   15e34:	beq	15eb0 <mcobject_async_malloc@@Base+0xc8>
   15e38:	mov	r1, lr
   15e3c:	str	r4, [r7, r6, lsl #4]
   15e40:	str	lr, [r4, #4]
   15e44:	cmp	r8, #0
   15e48:	ldr	r0, [r4]
   15e4c:	movne	r3, #0
   15e50:	strne	r3, [r8]
   15e54:	ldr	r3, [r5, #8]
   15e58:	mul	r3, r3, r1
   15e5c:	str	r6, [r0, r3]
   15e60:	add	r3, r3, #4
   15e64:	ldr	r2, [r4, #4]
   15e68:	add	r2, r2, #1
   15e6c:	str	r2, [r4, #4]
   15e70:	add	r4, r0, r3
   15e74:	mov	r0, r4
   15e78:	add	sp, sp, #8
   15e7c:	ldrd	r4, [sp]
   15e80:	ldrd	r6, [sp, #8]
   15e84:	ldr	r8, [sp, #16]
   15e88:	add	sp, sp, #20
   15e8c:	pop	{pc}		; (ldr pc, [sp], #4)
   15e90:	cmp	r2, #0
   15e94:	sub	lr, lr, #1
   15e98:	movne	r1, #0
   15e9c:	strne	r1, [r2]
   15ea0:	ldr	r2, [r3, #4]
   15ea4:	ldr	r4, [r2, lr, lsl #2]
   15ea8:	str	lr, [r3, #12]
   15eac:	b	15e74 <mcobject_async_malloc@@Base+0x8c>
   15eb0:	add	r2, sp, #4
   15eb4:	ldr	r1, [r0]
   15eb8:	bl	100ac <mcobject_async_chunk_malloc@plt>
   15ebc:	ldr	r3, [sp, #4]
   15ec0:	cmp	r3, #0
   15ec4:	bne	15ee4 <mcobject_async_malloc@@Base+0xfc>
   15ec8:	ldr	r3, [r7, r6, lsl #4]
   15ecc:	mov	r4, r0
   15ed0:	ldr	r1, [r0, #4]
   15ed4:	str	r3, [r0, #16]
   15ed8:	str	r0, [r3, #12]
   15edc:	str	r0, [r7, r6, lsl #4]
   15ee0:	b	15e44 <mcobject_async_malloc@@Base+0x5c>
   15ee4:	cmp	r8, #0
   15ee8:	strne	r3, [r8]
   15eec:	b	15e74 <mcobject_async_malloc@@Base+0x8c>

00015ef0 <mcobject_async_free@@Base>:
   15ef0:	ldr	r3, [r1, #-4]
   15ef4:	ldr	r2, [r0, #48]	; 0x30
   15ef8:	cmp	r2, r3
   15efc:	bls	15f64 <mcobject_async_free@@Base+0x74>
   15f00:	strd	r4, [sp, #-16]!
   15f04:	mov	r5, r1
   15f08:	ldr	r4, [r0, #44]	; 0x2c
   15f0c:	add	r4, r4, r3, lsl #4
   15f10:	ldmib	r4, {r0, r2, r3}
   15f14:	str	r6, [sp, #8]
   15f18:	str	lr, [sp, #12]
   15f1c:	cmp	r3, r2
   15f20:	bcs	15f44 <mcobject_async_free@@Base+0x54>
   15f24:	add	r2, r3, #1
   15f28:	str	r5, [r0, r3, lsl #2]
   15f2c:	mov	r0, #0
   15f30:	str	r2, [r4, #12]
   15f34:	ldrd	r4, [sp]
   15f38:	ldr	r6, [sp, #8]
   15f3c:	add	sp, sp, #12
   15f40:	pop	{pc}		; (ldr pc, [sp], #4)
   15f44:	lsl	r1, r2, #3
   15f48:	lsl	r6, r2, #1
   15f4c:	bl	fb84 <mycore_realloc@plt>
   15f50:	cmp	r0, #0
   15f54:	beq	15f6c <mcobject_async_free@@Base+0x7c>
   15f58:	stmib	r4, {r0, r6}
   15f5c:	ldr	r3, [r4, #12]
   15f60:	b	15f24 <mcobject_async_free@@Base+0x34>
   15f64:	mov	r0, #5
   15f68:	bx	lr
   15f6c:	mov	r0, #6
   15f70:	b	15f34 <mcobject_async_free@@Base+0x44>

00015f74 <mcsimple_create@@Base>:
   15f74:	mov	r1, #28
   15f78:	mov	r0, #1
   15f7c:	b	feb4 <mycore_calloc@plt>

00015f80 <mcsimple_clean@@Base>:
   15f80:	mov	r3, #0
   15f84:	str	r3, [r0, #12]
   15f88:	str	r3, [r0, #24]
   15f8c:	bx	lr

00015f90 <mcsimple_destroy@@Base>:
   15f90:	strd	r4, [sp, #-16]!
   15f94:	subs	r5, r0, #0
   15f98:	str	r6, [sp, #8]
   15f9c:	str	lr, [sp, #12]
   15fa0:	beq	15ff8 <mcsimple_destroy@@Base+0x68>
   15fa4:	ldr	r2, [r5, #4]
   15fa8:	mov	r6, r1
   15fac:	cmp	r2, #0
   15fb0:	beq	15ff0 <mcsimple_destroy@@Base+0x60>
   15fb4:	ldr	r1, [r5, #16]
   15fb8:	cmp	r1, #0
   15fbc:	beq	15fe8 <mcsimple_destroy@@Base+0x58>
   15fc0:	mov	r4, #0
   15fc4:	ldr	r3, [r2, r4, lsl #2]
   15fc8:	subs	r0, r3, #0
   15fcc:	beq	1600c <mcsimple_destroy@@Base+0x7c>
   15fd0:	bl	10d60 <mycore_free@plt>
   15fd4:	add	r4, r4, #1
   15fd8:	ldr	r2, [r5, #4]
   15fdc:	ldr	r1, [r5, #16]
   15fe0:	cmp	r4, r1
   15fe4:	bcc	15fc4 <mcsimple_destroy@@Base+0x34>
   15fe8:	mov	r0, r2
   15fec:	bl	10d60 <mycore_free@plt>
   15ff0:	cmp	r6, #0
   15ff4:	bne	1601c <mcsimple_destroy@@Base+0x8c>
   15ff8:	mov	r0, r5
   15ffc:	ldrd	r4, [sp]
   16000:	ldr	r6, [sp, #8]
   16004:	add	sp, sp, #12
   16008:	pop	{pc}		; (ldr pc, [sp], #4)
   1600c:	add	r4, r4, #1
   16010:	cmp	r4, r1
   16014:	bcc	15fc4 <mcsimple_destroy@@Base+0x34>
   16018:	b	15fe8 <mcsimple_destroy@@Base+0x58>
   1601c:	mov	r0, r5
   16020:	mov	r5, #0
   16024:	bl	10d60 <mycore_free@plt>
   16028:	b	15ff8 <mcsimple_destroy@@Base+0x68>

0001602c <mcsimple_init_list_entries@@Base>:
   1602c:	ldr	r3, [r0, #8]
   16030:	strd	r4, [sp, #-24]!	; 0xffffffe8
   16034:	mov	r5, r1
   16038:	mov	r4, r0
   1603c:	ldr	r2, [r0, #12]
   16040:	strd	r6, [sp, #8]
   16044:	str	r8, [sp, #16]
   16048:	str	lr, [sp, #20]
   1604c:	ldr	r7, [r0, #4]
   16050:	cmp	r2, r3
   16054:	lslcc	r5, r1, #2
   16058:	bcs	16084 <mcsimple_init_list_entries@@Base+0x58>
   1605c:	ldr	r0, [r7, r5]
   16060:	mov	r3, #0
   16064:	str	r3, [r4, #24]
   16068:	cmp	r0, r3
   1606c:	beq	160c8 <mcsimple_init_list_entries@@Base+0x9c>
   16070:	ldrd	r4, [sp]
   16074:	ldrd	r6, [sp, #8]
   16078:	ldr	r8, [sp, #16]
   1607c:	add	sp, sp, #20
   16080:	pop	{pc}		; (ldr pc, [sp], #4)
   16084:	mov	r0, r7
   16088:	lsl	r1, r3, #2
   1608c:	add	r6, r3, #128	; 0x80
   16090:	bl	fb84 <mycore_realloc@plt>
   16094:	cmp	r0, #0
   16098:	beq	16070 <mcsimple_init_list_entries@@Base+0x44>
   1609c:	ldr	r2, [r4, #8]
   160a0:	lsl	r5, r5, #2
   160a4:	mov	r1, #0
   160a8:	str	r0, [r4, #4]
   160ac:	add	r0, r0, r5
   160b0:	sub	r2, r6, r2
   160b4:	lsl	r2, r2, #2
   160b8:	bl	10844 <memset@plt>
   160bc:	str	r6, [r4, #8]
   160c0:	ldr	r7, [r4, #4]
   160c4:	b	1605c <mcsimple_init_list_entries@@Base+0x30>
   160c8:	ldr	r3, [r4, #16]
   160cc:	ldr	r0, [r4, #20]
   160d0:	add	r3, r3, #1
   160d4:	str	r3, [r4, #16]
   160d8:	bl	10c28 <mycore_malloc@plt>
   160dc:	ldr	r3, [r4, #4]
   160e0:	str	r0, [r7, r5]
   160e4:	ldr	r0, [r3, r5]
   160e8:	b	16070 <mcsimple_init_list_entries@@Base+0x44>

000160ec <mcsimple_init@@Base>:
   160ec:	mov	ip, #0
   160f0:	strd	r4, [sp, #-16]!
   160f4:	mov	r4, r0
   160f8:	str	r6, [sp, #8]
   160fc:	mov	r5, r2
   16100:	mov	r6, r3
   16104:	str	lr, [sp, #12]
   16108:	str	r3, [r0]
   1610c:	str	r1, [r0, #8]
   16110:	str	ip, [r0, #12]
   16114:	str	ip, [r0, #16]
   16118:	mov	r0, r1
   1611c:	mov	r1, #4
   16120:	bl	feb4 <mycore_calloc@plt>
   16124:	cmp	r0, #0
   16128:	str	r0, [r4, #4]
   1612c:	beq	16154 <mcsimple_init@@Base+0x68>
   16130:	mul	r5, r5, r6
   16134:	mov	r0, r4
   16138:	ldr	r6, [sp, #8]
   1613c:	ldr	lr, [sp, #12]
   16140:	str	r5, [r4, #20]
   16144:	ldr	r1, [r4, #12]
   16148:	ldrd	r4, [sp]
   1614c:	add	sp, sp, #16
   16150:	b	10928 <mcsimple_init_list_entries@plt>
   16154:	ldrd	r4, [sp]
   16158:	ldr	r6, [sp, #8]
   1615c:	add	sp, sp, #12
   16160:	pop	{pc}		; (ldr pc, [sp], #4)

00016164 <mcsimple_malloc@@Base>:
   16164:	str	r4, [sp, #-8]!
   16168:	mov	r4, r0
   1616c:	ldrd	r2, [r0, #20]
   16170:	ldr	r1, [r0, #12]
   16174:	str	lr, [sp, #4]
   16178:	cmp	r3, r2
   1617c:	bcs	161a4 <mcsimple_malloc@@Base+0x40>
   16180:	ldr	r2, [r4]
   16184:	ldr	r0, [r4, #4]
   16188:	add	r2, r2, r3
   1618c:	ldr	r0, [r0, r1, lsl #2]
   16190:	str	r2, [r4, #24]
   16194:	add	r0, r0, r3
   16198:	ldr	r4, [sp]
   1619c:	add	sp, sp, #4
   161a0:	pop	{pc}		; (ldr pc, [sp], #4)
   161a4:	add	r3, r1, #1
   161a8:	mov	r1, r3
   161ac:	str	r3, [r0, #12]
   161b0:	bl	10928 <mcsimple_init_list_entries@plt>
   161b4:	cmp	r0, #0
   161b8:	beq	16198 <mcsimple_malloc@@Base+0x34>
   161bc:	ldr	r1, [r4, #12]
   161c0:	ldr	r3, [r4, #24]
   161c4:	b	16180 <mcsimple_malloc@@Base+0x1c>

000161c8 <mcsimple_get_by_absolute_position@@Base>:
   161c8:	ldr	r3, [r0]
   161cc:	ldr	ip, [r0, #16]
   161d0:	ldr	r2, [r0, #20]
   161d4:	mul	r1, r3, r1
   161d8:	udiv	r3, r1, r2
   161dc:	cmp	ip, r3
   161e0:	bls	161f8 <mcsimple_get_by_absolute_position@@Base+0x30>
   161e4:	ldr	r0, [r0, #4]
   161e8:	mls	r1, r2, r3, r1
   161ec:	ldr	r0, [r0, r3, lsl #2]
   161f0:	add	r0, r0, r1
   161f4:	bx	lr
   161f8:	mov	r0, #0
   161fc:	bx	lr

00016200 <mcsync_create@@Base>:
   16200:	mov	r1, #8
   16204:	mov	r0, #1
   16208:	b	feb4 <mycore_calloc@plt>

0001620c <mcsync_init@@Base>:
   1620c:	strd	r4, [sp, #-16]!
   16210:	mov	r4, r0
   16214:	str	r6, [sp, #8]
   16218:	str	lr, [sp, #12]
   1621c:	bl	104f0 <mcsync_spin_create@plt>
   16220:	cmp	r0, #0
   16224:	str	r0, [r4]
   16228:	beq	16274 <mcsync_init@@Base+0x68>
   1622c:	bl	10490 <mcsync_spin_init@plt>
   16230:	subs	r5, r0, #0
   16234:	bne	16268 <mcsync_init@@Base+0x5c>
   16238:	bl	1085c <mcsync_mutex_create@plt>
   1623c:	cmp	r0, #0
   16240:	str	r0, [r4, #4]
   16244:	beq	16274 <mcsync_init@@Base+0x68>
   16248:	bl	10ae4 <mcsync_mutex_init@plt>
   1624c:	subs	r5, r0, #0
   16250:	bne	1627c <mcsync_init@@Base+0x70>
   16254:	mov	r0, r5
   16258:	ldrd	r4, [sp]
   1625c:	ldr	r6, [sp, #8]
   16260:	add	sp, sp, #12
   16264:	pop	{pc}		; (ldr pc, [sp], #4)
   16268:	ldr	r0, [r4]
   1626c:	bl	ff44 <mcsync_spin_destroy@plt>
   16270:	b	16254 <mcsync_init@@Base+0x48>
   16274:	mov	r5, #1
   16278:	b	16254 <mcsync_init@@Base+0x48>
   1627c:	ldr	r0, [r4]
   16280:	bl	ff44 <mcsync_spin_destroy@plt>
   16284:	ldr	r0, [r4, #4]
   16288:	bl	fd10 <mcsync_mutex_destroy@plt>
   1628c:	b	16254 <mcsync_init@@Base+0x48>

00016290 <mcsync_clean@@Base>:
   16290:	str	r4, [sp, #-8]!
   16294:	mov	r4, r0
   16298:	ldr	r0, [r0]
   1629c:	str	lr, [sp, #4]
   162a0:	bl	10a0c <mcsync_spin_clean@plt>
   162a4:	ldr	r0, [r4, #4]
   162a8:	ldr	r4, [sp]
   162ac:	ldr	lr, [sp, #4]
   162b0:	add	sp, sp, #8
   162b4:	b	10de4 <mcsync_mutex_clean@plt>

000162b8 <mcsync_destroy@@Base>:
   162b8:	strd	r4, [sp, #-16]!
   162bc:	subs	r4, r0, #0
   162c0:	str	r6, [sp, #8]
   162c4:	str	lr, [sp, #12]
   162c8:	beq	162e8 <mcsync_destroy@@Base+0x30>
   162cc:	ldr	r0, [r4]
   162d0:	mov	r5, r1
   162d4:	bl	ff44 <mcsync_spin_destroy@plt>
   162d8:	ldr	r0, [r4, #4]
   162dc:	bl	fd10 <mcsync_mutex_destroy@plt>
   162e0:	cmp	r5, #0
   162e4:	bne	162fc <mcsync_destroy@@Base+0x44>
   162e8:	mov	r0, r4
   162ec:	ldrd	r4, [sp]
   162f0:	ldr	r6, [sp, #8]
   162f4:	add	sp, sp, #12
   162f8:	pop	{pc}		; (ldr pc, [sp], #4)
   162fc:	mov	r0, r4
   16300:	mov	r4, #0
   16304:	bl	10d60 <mycore_free@plt>
   16308:	b	162e8 <mcsync_destroy@@Base+0x30>

0001630c <mcsync_lock@@Base>:
   1630c:	ldr	r0, [r0]
   16310:	b	10544 <mcsync_spin_lock@plt>

00016314 <mcsync_unlock@@Base>:
   16314:	ldr	r0, [r0]
   16318:	b	10fb8 <mcsync_spin_unlock@plt>

0001631c <mctree_create@@Base>:
   1631c:	strd	r4, [sp, #-16]!
   16320:	mov	r5, r0
   16324:	mov	r0, #16
   16328:	str	r6, [sp, #8]
   1632c:	str	lr, [sp, #12]
   16330:	bl	10c28 <mycore_malloc@plt>
   16334:	subs	r4, r0, #0
   16338:	beq	16368 <mctree_create@@Base+0x4c>
   1633c:	add	r3, r5, #512	; 0x200
   16340:	add	r2, r5, #1
   16344:	mov	r0, r3
   16348:	mov	r1, #28
   1634c:	strd	r2, [r4, #4]
   16350:	bl	feb4 <mycore_calloc@plt>
   16354:	cmp	r0, #0
   16358:	mov	r3, r0
   1635c:	str	r0, [r4]
   16360:	strne	r5, [r4, #12]
   16364:	beq	1637c <mctree_create@@Base+0x60>
   16368:	mov	r0, r4
   1636c:	ldrd	r4, [sp]
   16370:	ldr	r6, [sp, #8]
   16374:	add	sp, sp, #12
   16378:	pop	{pc}		; (ldr pc, [sp], #4)
   1637c:	mov	r0, r4
   16380:	mov	r4, r3
   16384:	bl	10d60 <mycore_free@plt>
   16388:	b	16368 <mctree_create@@Base+0x4c>

0001638c <mctree_clean@@Base>:
   1638c:	mov	r3, r0
   16390:	mov	r1, #0
   16394:	ldr	r0, [r0]
   16398:	ldr	r2, [r3, #8]
   1639c:	ldr	ip, [r3, #12]
   163a0:	rsb	r2, r2, r2, lsl #3
   163a4:	add	ip, ip, #1
   163a8:	lsl	r2, r2, #2
   163ac:	str	ip, [r3, #4]
   163b0:	b	10844 <memset@plt>

000163b4 <mctree_destroy@@Base>:
   163b4:	str	r4, [sp, #-8]!
   163b8:	subs	r4, r0, #0
   163bc:	str	lr, [sp, #4]
   163c0:	beq	163dc <mctree_destroy@@Base+0x28>
   163c4:	ldr	r0, [r4]
   163c8:	cmp	r0, #0
   163cc:	beq	163d4 <mctree_destroy@@Base+0x20>
   163d0:	bl	10d60 <mycore_free@plt>
   163d4:	mov	r0, r4
   163d8:	bl	10d60 <mycore_free@plt>
   163dc:	ldr	r4, [sp]
   163e0:	add	sp, sp, #4
   163e4:	mov	r0, #0
   163e8:	pop	{pc}		; (ldr pc, [sp], #4)

000163ec <__mtree_search_lowercase_to_start@@Base>:
   163ec:	strd	r4, [sp, #-24]!	; 0xffffffe8
   163f0:	subs	r4, r1, #0
   163f4:	strd	r6, [sp, #8]
   163f8:	str	r8, [sp, #16]
   163fc:	str	lr, [sp, #20]
   16400:	ldr	r7, [r0]
   16404:	beq	16464 <__mtree_search_lowercase_to_start@@Base+0x78>
   16408:	mov	r8, r2
   1640c:	mov	r6, r3
   16410:	b	16434 <__mtree_search_lowercase_to_start@@Base+0x48>
   16414:	ldr	r4, [r5, #20]
   16418:	rsb	r3, r4, r4, lsl #3
   1641c:	add	r3, r7, r3, lsl #2
   16420:	ldr	r3, [r3, #4]
   16424:	cmp	r3, r6
   16428:	bhi	16464 <__mtree_search_lowercase_to_start@@Base+0x78>
   1642c:	cmp	r4, #0
   16430:	beq	16464 <__mtree_search_lowercase_to_start@@Base+0x78>
   16434:	rsb	r1, r4, r4, lsl #3
   16438:	add	r5, r7, r1, lsl #2
   1643c:	ldr	r3, [r5, #4]
   16440:	cmp	r3, r6
   16444:	beq	1647c <__mtree_search_lowercase_to_start@@Base+0x90>
   16448:	bcc	16414 <__mtree_search_lowercase_to_start@@Base+0x28>
   1644c:	ldr	r4, [r5, #16]
   16450:	rsb	r3, r4, r4, lsl #3
   16454:	add	r3, r7, r3, lsl #2
   16458:	ldr	r3, [r3, #4]
   1645c:	cmp	r3, r6
   16460:	bcs	1642c <__mtree_search_lowercase_to_start@@Base+0x40>
   16464:	mov	r0, #0
   16468:	ldrd	r4, [sp]
   1646c:	ldrd	r6, [sp, #8]
   16470:	ldr	r8, [sp, #16]
   16474:	add	sp, sp, #20
   16478:	pop	{pc}		; (ldr pc, [sp], #4)
   1647c:	mov	r2, r6
   16480:	mov	r0, r8
   16484:	ldr	r1, [r7, r1, lsl #2]
   16488:	bl	10238 <mycore_strncasecmp@plt>
   1648c:	cmp	r0, #0
   16490:	beq	1649c <__mtree_search_lowercase_to_start@@Base+0xb0>
   16494:	ldr	r4, [r5, #24]
   16498:	b	1642c <__mtree_search_lowercase_to_start@@Base+0x40>
   1649c:	mov	r0, r4
   164a0:	b	16468 <__mtree_search_lowercase_to_start@@Base+0x7c>

000164a4 <__mtree_search_to_start@@Base>:
   164a4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   164a8:	subs	r4, r1, #0
   164ac:	strd	r6, [sp, #8]
   164b0:	str	r8, [sp, #16]
   164b4:	str	lr, [sp, #20]
   164b8:	ldr	r7, [r0]
   164bc:	beq	16528 <__mtree_search_to_start@@Base+0x84>
   164c0:	mov	r8, r2
   164c4:	mov	r6, r3
   164c8:	b	164f0 <__mtree_search_to_start@@Base+0x4c>
   164cc:	bcs	16540 <__mtree_search_to_start@@Base+0x9c>
   164d0:	ldr	r4, [r5, #20]
   164d4:	rsb	r3, r4, r4, lsl #3
   164d8:	add	r3, r7, r3, lsl #2
   164dc:	ldr	r3, [r3, #4]
   164e0:	cmp	r3, r6
   164e4:	bhi	16528 <__mtree_search_to_start@@Base+0x84>
   164e8:	cmp	r4, #0
   164ec:	beq	16528 <__mtree_search_to_start@@Base+0x84>
   164f0:	rsb	r1, r4, r4, lsl #3
   164f4:	add	r5, r7, r1, lsl #2
   164f8:	ldr	r3, [r5, #4]
   164fc:	cmp	r3, r6
   16500:	bne	164cc <__mtree_search_to_start@@Base+0x28>
   16504:	mov	r2, r6
   16508:	mov	r0, r8
   1650c:	ldr	r1, [r7, r1, lsl #2]
   16510:	bl	10010 <memcmp@plt>
   16514:	cmp	r0, #0
   16518:	beq	1655c <__mtree_search_to_start@@Base+0xb8>
   1651c:	ldr	r4, [r5, #24]
   16520:	cmp	r4, #0
   16524:	bne	164f0 <__mtree_search_to_start@@Base+0x4c>
   16528:	mov	r0, #0
   1652c:	ldrd	r4, [sp]
   16530:	ldrd	r6, [sp, #8]
   16534:	ldr	r8, [sp, #16]
   16538:	add	sp, sp, #20
   1653c:	pop	{pc}		; (ldr pc, [sp], #4)
   16540:	ldr	r4, [r5, #16]
   16544:	rsb	r3, r4, r4, lsl #3
   16548:	add	r3, r7, r3, lsl #2
   1654c:	ldr	r3, [r3, #4]
   16550:	cmp	r3, r6
   16554:	bcs	164e8 <__mtree_search_to_start@@Base+0x44>
   16558:	b	16528 <__mtree_search_to_start@@Base+0x84>
   1655c:	mov	r0, r4
   16560:	b	1652c <__mtree_search_to_start@@Base+0x88>

00016564 <mctree_insert_child@@Base>:
   16564:	strd	r4, [sp, #-24]!	; 0xffffffe8
   16568:	rsb	r1, r1, r1, lsl #3
   1656c:	ldr	r5, [r0, #4]
   16570:	ldr	r4, [r0, #8]
   16574:	strd	r6, [sp, #8]
   16578:	str	lr, [sp, #20]
   1657c:	ldr	lr, [r0]
   16580:	rsb	r6, r5, r5, lsl #3
   16584:	add	ip, r5, #1
   16588:	str	r8, [sp, #16]
   1658c:	ldr	r7, [sp, #24]
   16590:	lsl	r6, r6, #2
   16594:	cmp	ip, r4
   16598:	add	r1, lr, r1, lsl #2
   1659c:	add	r4, lr, r6
   165a0:	str	r5, [r1, #24]
   165a4:	str	r2, [lr, r6]
   165a8:	stmib	r4, {r3, r7}
   165ac:	str	ip, [r0, #4]
   165b0:	bcs	165f4 <mctree_insert_child@@Base+0x90>
   165b4:	rsb	ip, ip, ip, lsl #3
   165b8:	mov	r3, #0
   165bc:	mov	r0, r5
   165c0:	ldrd	r4, [sp]
   165c4:	lsl	ip, ip, #2
   165c8:	ldrd	r6, [sp, #8]
   165cc:	add	r2, lr, ip
   165d0:	ldr	r8, [sp, #16]
   165d4:	add	sp, sp, #20
   165d8:	str	r3, [lr, ip]
   165dc:	str	r3, [r2, #8]
   165e0:	str	r3, [r2, #12]
   165e4:	str	r3, [r2, #16]
   165e8:	str	r3, [r2, #20]
   165ec:	str	r3, [r2, #24]
   165f0:	pop	{pc}		; (ldr pc, [sp], #4)
   165f4:	add	r3, r5, #4096	; 0x1000
   165f8:	mov	r4, r0
   165fc:	add	r3, r3, #1
   16600:	add	r1, r6, #114688	; 0x1c000
   16604:	mov	r0, lr
   16608:	add	r1, r1, #28
   1660c:	str	r3, [r4, #8]
   16610:	bl	fb84 <mycore_realloc@plt>
   16614:	mov	lr, r0
   16618:	str	r0, [r4]
   1661c:	ldr	ip, [r4, #4]
   16620:	b	165b4 <mctree_insert_child@@Base+0x50>

00016624 <mctree_insert_after@@Base>:
   16624:	strd	r4, [sp, #-32]!	; 0xffffffe0
   16628:	ldr	r4, [r0, #4]
   1662c:	strd	r6, [sp, #8]
   16630:	rsb	r6, r1, r1, lsl #3
   16634:	str	lr, [sp, #28]
   16638:	ldr	lr, [r0]
   1663c:	strd	r8, [sp, #16]
   16640:	rsb	r7, r4, r4, lsl #3
   16644:	str	sl, [sp, #24]
   16648:	ldr	r9, [sp, #32]
   1664c:	lsl	r7, r7, #2
   16650:	add	r6, lr, r6, lsl #2
   16654:	add	r5, lr, r7
   16658:	ldr	ip, [r6, #20]
   1665c:	cmp	ip, #0
   16660:	beq	16674 <mctree_insert_after@@Base+0x50>
   16664:	rsb	r8, ip, ip, lsl #3
   16668:	add	r8, lr, r8, lsl #2
   1666c:	str	r4, [r8, #16]
   16670:	str	ip, [r5, #20]
   16674:	ldr	r8, [r0, #8]
   16678:	add	ip, r4, #1
   1667c:	str	r4, [r6, #20]
   16680:	stm	r5, {r2, r3, r9}
   16684:	cmp	ip, r8
   16688:	str	r1, [r5, #16]
   1668c:	str	ip, [r0, #4]
   16690:	bcs	166d8 <mctree_insert_after@@Base+0xb4>
   16694:	rsb	ip, ip, ip, lsl #3
   16698:	mov	r3, #0
   1669c:	mov	r0, r4
   166a0:	ldrd	r4, [sp]
   166a4:	lsl	ip, ip, #2
   166a8:	ldrd	r6, [sp, #8]
   166ac:	add	r2, lr, ip
   166b0:	ldrd	r8, [sp, #16]
   166b4:	str	r3, [lr, ip]
   166b8:	ldr	sl, [sp, #24]
   166bc:	add	sp, sp, #28
   166c0:	str	r3, [r2, #8]
   166c4:	str	r3, [r2, #12]
   166c8:	str	r3, [r2, #16]
   166cc:	str	r3, [r2, #20]
   166d0:	str	r3, [r2, #24]
   166d4:	pop	{pc}		; (ldr pc, [sp], #4)
   166d8:	add	r3, r4, #4096	; 0x1000
   166dc:	mov	r5, r0
   166e0:	add	r3, r3, #1
   166e4:	add	r1, r7, #114688	; 0x1c000
   166e8:	mov	r0, lr
   166ec:	add	r1, r1, #28
   166f0:	str	r3, [r5, #8]
   166f4:	bl	fb84 <mycore_realloc@plt>
   166f8:	mov	lr, r0
   166fc:	str	r0, [r5]
   16700:	ldr	ip, [r5, #4]
   16704:	b	16694 <mctree_insert_after@@Base+0x70>

00016708 <mctree_insert_before@@Base>:
   16708:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1670c:	ldr	r4, [r0, #4]
   16710:	strd	r6, [sp, #8]
   16714:	rsb	r6, r1, r1, lsl #3
   16718:	str	lr, [sp, #28]
   1671c:	ldr	lr, [r0]
   16720:	strd	r8, [sp, #16]
   16724:	rsb	r7, r4, r4, lsl #3
   16728:	str	sl, [sp, #24]
   1672c:	ldr	r9, [sp, #32]
   16730:	lsl	r7, r7, #2
   16734:	add	r6, lr, r6, lsl #2
   16738:	add	r5, lr, r7
   1673c:	ldr	ip, [r6, #16]
   16740:	cmp	ip, #0
   16744:	beq	16758 <mctree_insert_before@@Base+0x50>
   16748:	rsb	r8, ip, ip, lsl #3
   1674c:	add	r8, lr, r8, lsl #2
   16750:	str	r4, [r8, #20]
   16754:	str	ip, [r5, #16]
   16758:	ldr	r8, [r0, #8]
   1675c:	add	ip, r4, #1
   16760:	str	r4, [r6, #16]
   16764:	stm	r5, {r2, r3, r9}
   16768:	cmp	ip, r8
   1676c:	str	r1, [r5, #20]
   16770:	str	ip, [r0, #4]
   16774:	bcs	167bc <mctree_insert_before@@Base+0xb4>
   16778:	rsb	ip, ip, ip, lsl #3
   1677c:	mov	r3, #0
   16780:	mov	r0, r4
   16784:	ldrd	r4, [sp]
   16788:	lsl	ip, ip, #2
   1678c:	ldrd	r6, [sp, #8]
   16790:	add	r2, lr, ip
   16794:	ldrd	r8, [sp, #16]
   16798:	str	r3, [lr, ip]
   1679c:	ldr	sl, [sp, #24]
   167a0:	add	sp, sp, #28
   167a4:	str	r3, [r2, #8]
   167a8:	str	r3, [r2, #12]
   167ac:	str	r3, [r2, #16]
   167b0:	str	r3, [r2, #20]
   167b4:	str	r3, [r2, #24]
   167b8:	pop	{pc}		; (ldr pc, [sp], #4)
   167bc:	add	r3, r4, #4096	; 0x1000
   167c0:	mov	r5, r0
   167c4:	add	r3, r3, #1
   167c8:	add	r1, r7, #114688	; 0x1c000
   167cc:	mov	r0, lr
   167d0:	add	r1, r1, #28
   167d4:	str	r3, [r5, #8]
   167d8:	bl	fb84 <mycore_realloc@plt>
   167dc:	mov	lr, r0
   167e0:	str	r0, [r5]
   167e4:	ldr	ip, [r5, #4]
   167e8:	b	16778 <mctree_insert_before@@Base+0x70>

000167ec <__mtree_insert_to_start@@Base>:
   167ec:	strd	r4, [sp, #-28]!	; 0xffffffe4
   167f0:	subs	r4, r1, #0
   167f4:	ldr	r5, [r0]
   167f8:	strd	r6, [sp, #8]
   167fc:	strd	r8, [sp, #16]
   16800:	str	lr, [sp, #24]
   16804:	sub	sp, sp, #12
   16808:	beq	1699c <__mtree_insert_to_start@@Base+0x1b0>
   1680c:	lsl	r1, r4, #3
   16810:	mov	r6, r3
   16814:	mov	r7, r2
   16818:	mov	r8, r0
   1681c:	sub	r3, r1, r4
   16820:	add	r3, r5, r3, lsl #2
   16824:	ldr	r2, [r3, #4]
   16828:	b	16858 <__mtree_insert_to_start@@Base+0x6c>
   1682c:	bls	168a0 <__mtree_insert_to_start@@Base+0xb4>
   16830:	ldr	r3, [r9, #20]
   16834:	cmp	r3, #0
   16838:	beq	16910 <__mtree_insert_to_start@@Base+0x124>
   1683c:	rsb	r2, r3, r3, lsl #3
   16840:	add	r2, r5, r2, lsl #2
   16844:	ldr	r2, [r2, #4]
   16848:	cmp	r2, r6
   1684c:	bhi	16910 <__mtree_insert_to_start@@Base+0x124>
   16850:	mov	r4, r3
   16854:	lsl	r1, r4, #3
   16858:	sub	r1, r1, r4
   1685c:	cmp	r6, r2
   16860:	add	r9, r5, r1, lsl #2
   16864:	bne	1682c <__mtree_insert_to_start@@Base+0x40>
   16868:	mov	r2, r6
   1686c:	mov	r0, r7
   16870:	ldr	r1, [r5, r1, lsl #2]
   16874:	bl	10010 <memcmp@plt>
   16878:	cmp	r0, #0
   1687c:	beq	1694c <__mtree_insert_to_start@@Base+0x160>
   16880:	ldr	r3, [r9, #24]
   16884:	cmp	r3, #0
   16888:	beq	16960 <__mtree_insert_to_start@@Base+0x174>
   1688c:	rsb	r2, r3, r3, lsl #3
   16890:	mov	r4, r3
   16894:	add	r3, r5, r2, lsl #2
   16898:	ldr	r2, [r3, #4]
   1689c:	b	16854 <__mtree_insert_to_start@@Base+0x68>
   168a0:	ldr	r3, [r9, #16]
   168a4:	cmp	r3, #0
   168a8:	beq	168c0 <__mtree_insert_to_start@@Base+0xd4>
   168ac:	rsb	r2, r3, r3, lsl #3
   168b0:	add	r2, r5, r2, lsl #2
   168b4:	ldr	r2, [r2, #4]
   168b8:	cmp	r2, r6
   168bc:	bcs	16850 <__mtree_insert_to_start@@Base+0x64>
   168c0:	ldr	r3, [sp, #44]	; 0x2c
   168c4:	cmp	r3, #0
   168c8:	beq	168dc <__mtree_insert_to_start@@Base+0xf0>
   168cc:	add	r2, sp, #40	; 0x28
   168d0:	mov	r1, r6
   168d4:	mov	r0, r7
   168d8:	blx	r3
   168dc:	ldr	ip, [sp, #40]	; 0x28
   168e0:	mov	r3, r6
   168e4:	mov	r2, r7
   168e8:	mov	r1, r4
   168ec:	mov	r0, r8
   168f0:	str	ip, [sp]
   168f4:	bl	1004c <mctree_insert_before@plt>
   168f8:	add	sp, sp, #12
   168fc:	ldrd	r4, [sp]
   16900:	ldrd	r6, [sp, #8]
   16904:	ldrd	r8, [sp, #16]
   16908:	add	sp, sp, #24
   1690c:	pop	{pc}		; (ldr pc, [sp], #4)
   16910:	ldr	r3, [sp, #44]	; 0x2c
   16914:	cmp	r3, #0
   16918:	beq	1692c <__mtree_insert_to_start@@Base+0x140>
   1691c:	add	r2, sp, #40	; 0x28
   16920:	mov	r1, r6
   16924:	mov	r0, r7
   16928:	blx	r3
   1692c:	ldr	ip, [sp, #40]	; 0x28
   16930:	mov	r3, r6
   16934:	mov	r2, r7
   16938:	mov	r1, r4
   1693c:	mov	r0, r8
   16940:	str	ip, [sp]
   16944:	bl	10c58 <mctree_insert_after@plt>
   16948:	b	168f8 <__mtree_insert_to_start@@Base+0x10c>
   1694c:	ldr	r3, [sp, #40]	; 0x28
   16950:	mov	r0, r4
   16954:	cmp	r3, #0
   16958:	strne	r3, [r9, #8]
   1695c:	b	168f8 <__mtree_insert_to_start@@Base+0x10c>
   16960:	ldr	r3, [sp, #44]	; 0x2c
   16964:	cmp	r3, #0
   16968:	beq	1697c <__mtree_insert_to_start@@Base+0x190>
   1696c:	add	r2, sp, #40	; 0x28
   16970:	mov	r1, r6
   16974:	mov	r0, r7
   16978:	blx	r3
   1697c:	ldr	ip, [sp, #40]	; 0x28
   16980:	mov	r3, r6
   16984:	mov	r2, r7
   16988:	mov	r1, r4
   1698c:	mov	r0, r8
   16990:	str	ip, [sp]
   16994:	bl	101e4 <mctree_insert_child@plt>
   16998:	b	168f8 <__mtree_insert_to_start@@Base+0x10c>
   1699c:	mov	r0, r4
   169a0:	b	168f8 <__mtree_insert_to_start@@Base+0x10c>

000169a4 <mctree_insert@@Base>:
   169a4:	strd	r4, [sp, #-20]!	; 0xffffffec
   169a8:	subs	r5, r2, #0
   169ac:	strd	r6, [sp, #8]
   169b0:	str	lr, [sp, #16]
   169b4:	sub	sp, sp, #20
   169b8:	str	r3, [sp, #12]
   169bc:	beq	16a4c <mctree_insert@@Base+0xa8>
   169c0:	mov	r6, r1
   169c4:	add	r2, r1, r5
   169c8:	ldr	r1, [pc, #176]	; 16a80 <mctree_insert@@Base+0xdc>
   169cc:	mov	r7, r0
   169d0:	ldrb	r2, [r2, #-1]
   169d4:	ldrb	lr, [r6]
   169d8:	add	r1, pc, r1
   169dc:	ldr	ip, [r0, #12]
   169e0:	ldrb	r2, [r1, r2]
   169e4:	ldrb	r4, [r1, lr]
   169e8:	ldr	r1, [r0]
   169ec:	add	r2, r2, r4
   169f0:	udiv	r4, r2, ip
   169f4:	mls	r4, ip, r4, r2
   169f8:	add	r4, r4, #1
   169fc:	rsb	r2, r4, r4, lsl #3
   16a00:	add	r2, r1, r2, lsl #2
   16a04:	ldr	r1, [r2, #24]
   16a08:	cmp	r1, #0
   16a0c:	bne	16a64 <mctree_insert@@Base+0xc0>
   16a10:	ldr	r3, [sp, #40]	; 0x28
   16a14:	cmp	r3, #0
   16a18:	beq	16a2c <mctree_insert@@Base+0x88>
   16a1c:	add	r2, sp, #12
   16a20:	mov	r1, r5
   16a24:	mov	r0, r6
   16a28:	blx	r3
   16a2c:	ldr	ip, [sp, #12]
   16a30:	mov	r3, r5
   16a34:	mov	r2, r6
   16a38:	mov	r1, r4
   16a3c:	mov	r0, r7
   16a40:	str	ip, [sp]
   16a44:	bl	101e4 <mctree_insert_child@plt>
   16a48:	mov	r5, r0
   16a4c:	mov	r0, r5
   16a50:	add	sp, sp, #20
   16a54:	ldrd	r4, [sp]
   16a58:	ldrd	r6, [sp, #8]
   16a5c:	add	sp, sp, #16
   16a60:	pop	{pc}		; (ldr pc, [sp], #4)
   16a64:	ldr	ip, [sp, #40]	; 0x28
   16a68:	mov	r2, r6
   16a6c:	stm	sp, {r3, ip}
   16a70:	mov	r3, r5
   16a74:	bl	1034c <__mtree_insert_to_start@plt>
   16a78:	mov	r5, r0
   16a7c:	b	16a4c <mctree_insert@@Base+0xa8>
   16a80:	andeq	sl, r1, r0, lsl #20

00016a84 <mctree_search@@Base>:
   16a84:	subs	r3, r2, #0
   16a88:	bne	16a94 <mctree_search@@Base+0x10>
   16a8c:	mov	r0, #0
   16a90:	bx	lr
   16a94:	add	ip, r1, r3
   16a98:	strd	r4, [sp, #-12]!
   16a9c:	ldr	r4, [pc, #104]	; 16b0c <mctree_search@@Base+0x88>
   16aa0:	ldr	r5, [r0, #12]
   16aa4:	str	lr, [sp, #8]
   16aa8:	ldrb	lr, [ip, #-1]
   16aac:	add	r4, pc, r4
   16ab0:	ldrb	ip, [r1]
   16ab4:	ldrb	lr, [r4, lr]
   16ab8:	ldrb	ip, [r4, ip]
   16abc:	ldr	r4, [r0]
   16ac0:	add	lr, lr, ip
   16ac4:	udiv	ip, lr, r5
   16ac8:	mls	ip, r5, ip, lr
   16acc:	add	ip, ip, #1
   16ad0:	rsb	ip, ip, ip, lsl #3
   16ad4:	add	ip, r4, ip, lsl #2
   16ad8:	ldr	ip, [ip, #24]
   16adc:	cmp	ip, #0
   16ae0:	bne	16af4 <mctree_search@@Base+0x70>
   16ae4:	ldrd	r4, [sp]
   16ae8:	add	sp, sp, #8
   16aec:	mov	r0, #0
   16af0:	pop	{pc}		; (ldr pc, [sp], #4)
   16af4:	mov	r2, r1
   16af8:	mov	r1, ip
   16afc:	ldrd	r4, [sp]
   16b00:	ldr	lr, [sp, #8]
   16b04:	add	sp, sp, #12
   16b08:	b	1097c <__mtree_search_to_start@plt>
   16b0c:	andeq	sl, r1, ip, lsr #18

00016b10 <mctree_search_lowercase@@Base>:
   16b10:	subs	r3, r2, #0
   16b14:	bne	16b20 <mctree_search_lowercase@@Base+0x10>
   16b18:	mov	r0, #0
   16b1c:	bx	lr
   16b20:	add	ip, r1, r3
   16b24:	strd	r4, [sp, #-12]!
   16b28:	ldr	r4, [pc, #104]	; 16b98 <mctree_search_lowercase@@Base+0x88>
   16b2c:	ldr	r5, [r0, #12]
   16b30:	str	lr, [sp, #8]
   16b34:	ldrb	lr, [ip, #-1]
   16b38:	add	r4, pc, r4
   16b3c:	ldrb	ip, [r1]
   16b40:	ldrb	lr, [r4, lr]
   16b44:	ldrb	ip, [r4, ip]
   16b48:	ldr	r4, [r0]
   16b4c:	add	lr, lr, ip
   16b50:	udiv	ip, lr, r5
   16b54:	mls	ip, r5, ip, lr
   16b58:	add	ip, ip, #1
   16b5c:	rsb	ip, ip, ip, lsl #3
   16b60:	add	ip, r4, ip, lsl #2
   16b64:	ldr	ip, [ip, #24]
   16b68:	cmp	ip, #0
   16b6c:	bne	16b80 <mctree_search_lowercase@@Base+0x70>
   16b70:	ldrd	r4, [sp]
   16b74:	add	sp, sp, #8
   16b78:	mov	r0, #0
   16b7c:	pop	{pc}		; (ldr pc, [sp], #4)
   16b80:	mov	r2, r1
   16b84:	mov	r1, ip
   16b88:	ldrd	r4, [sp]
   16b8c:	ldr	lr, [sp, #8]
   16b90:	add	sp, sp, #12
   16b94:	b	10eb0 <__mtree_search_lowercase_to_start@plt>
   16b98:	andeq	sl, r1, r0, lsr #17

00016b9c <mycore_utils_mhash_hash@@Base>:
   16b9c:	cmp	r1, #0
   16ba0:	beq	16be4 <mycore_utils_mhash_hash@@Base+0x48>
   16ba4:	add	r1, r0, r1
   16ba8:	mov	r3, #0
   16bac:	sub	r0, r0, #1
   16bb0:	sub	r1, r1, #1
   16bb4:	ldrb	ip, [r0, #1]!
   16bb8:	add	r3, ip, r3
   16bbc:	cmp	r1, r0
   16bc0:	add	r3, r3, r3, lsl #10
   16bc4:	eor	r3, r3, r3, lsr #6
   16bc8:	bne	16bb4 <mycore_utils_mhash_hash@@Base+0x18>
   16bcc:	add	r3, r3, r3, lsl #3
   16bd0:	eor	r3, r3, r3, lsr #11
   16bd4:	add	r3, r3, r3, lsl #15
   16bd8:	udiv	r1, r3, r2
   16bdc:	mls	r0, r2, r1, r3
   16be0:	bx	lr
   16be4:	mov	r0, r1
   16be8:	bx	lr

00016bec <mycore_utils_mhash_create@@Base>:
   16bec:	mov	r1, #24
   16bf0:	mov	r0, #1
   16bf4:	b	feb4 <mycore_calloc@plt>

00016bf8 <mycore_utils_mhash_init@@Base>:
   16bf8:	strd	r4, [sp, #-20]!	; 0xffffffec
   16bfc:	mov	r5, r0
   16c00:	strd	r6, [sp, #8]
   16c04:	mov	r6, r1
   16c08:	mov	r7, r2
   16c0c:	str	lr, [sp, #16]
   16c10:	sub	sp, sp, #12
   16c14:	bl	10100 <mchar_async_create@plt>
   16c18:	cmp	r0, #0
   16c1c:	str	r0, [r5]
   16c20:	beq	16ca8 <mycore_utils_mhash_init@@Base+0xb0>
   16c24:	mov	r2, #4096	; 0x1000
   16c28:	mov	r1, #128	; 0x80
   16c2c:	bl	1043c <mchar_async_init@plt>
   16c30:	cmp	r0, #0
   16c34:	mov	r4, r0
   16c38:	str	r0, [sp, #4]
   16c3c:	beq	16c58 <mycore_utils_mhash_init@@Base+0x60>
   16c40:	mov	r0, r4
   16c44:	add	sp, sp, #12
   16c48:	ldrd	r4, [sp]
   16c4c:	ldrd	r6, [sp, #8]
   16c50:	add	sp, sp, #16
   16c54:	pop	{pc}		; (ldr pc, [sp], #4)
   16c58:	add	r1, sp, #4
   16c5c:	ldr	r0, [r5]
   16c60:	bl	1022c <mchar_async_node_add@plt>
   16c64:	ldr	r4, [sp, #4]
   16c68:	str	r0, [r5, #4]
   16c6c:	cmp	r4, #0
   16c70:	bne	16c40 <mycore_utils_mhash_init@@Base+0x48>
   16c74:	cmp	r6, #128	; 0x80
   16c78:	mov	r1, #4
   16c7c:	movcc	r6, #128	; 0x80
   16c80:	mov	r0, r6
   16c84:	bl	feb4 <mycore_calloc@plt>
   16c88:	cmp	r0, #0
   16c8c:	str	r0, [r5, #8]
   16c90:	beq	16ca8 <mycore_utils_mhash_init@@Base+0xb0>
   16c94:	cmp	r7, #0
   16c98:	str	r6, [r5, #12]
   16c9c:	moveq	r7, #1
   16ca0:	str	r7, [r5, #20]
   16ca4:	b	16c40 <mycore_utils_mhash_init@@Base+0x48>
   16ca8:	mov	r4, #2
   16cac:	b	16c40 <mycore_utils_mhash_init@@Base+0x48>

00016cb0 <mycore_utils_mhash_clean@@Base>:
   16cb0:	str	r4, [sp, #-8]!
   16cb4:	mov	r4, r0
   16cb8:	ldr	r0, [r0]
   16cbc:	str	lr, [sp, #4]
   16cc0:	bl	10b5c <mchar_async_clean@plt>
   16cc4:	mov	r1, #0
   16cc8:	ldr	lr, [sp, #4]
   16ccc:	ldr	r2, [r4, #12]
   16cd0:	ldr	r0, [r4, #8]
   16cd4:	ldr	r4, [sp]
   16cd8:	add	sp, sp, #8
   16cdc:	lsl	r2, r2, #2
   16ce0:	b	10844 <memset@plt>

00016ce4 <mycore_utils_mhash_destroy@@Base>:
   16ce4:	strd	r4, [sp, #-16]!
   16ce8:	subs	r4, r0, #0
   16cec:	str	r6, [sp, #8]
   16cf0:	str	lr, [sp, #12]
   16cf4:	beq	16d1c <mycore_utils_mhash_destroy@@Base+0x38>
   16cf8:	ldr	r0, [r4, #8]
   16cfc:	mov	r5, r1
   16d00:	cmp	r0, #0
   16d04:	beq	16d14 <mycore_utils_mhash_destroy@@Base+0x30>
   16d08:	bl	10d60 <mycore_free@plt>
   16d0c:	mov	r3, #0
   16d10:	str	r3, [r4, #8]
   16d14:	cmp	r5, #0
   16d18:	bne	16d30 <mycore_utils_mhash_destroy@@Base+0x4c>
   16d1c:	mov	r0, r4
   16d20:	ldrd	r4, [sp]
   16d24:	ldr	r6, [sp, #8]
   16d28:	add	sp, sp, #12
   16d2c:	pop	{pc}		; (ldr pc, [sp], #4)
   16d30:	mov	r0, #0
   16d34:	mov	r4, r0
   16d38:	bl	10d60 <mycore_free@plt>
   16d3c:	b	16d1c <mycore_utils_mhash_destroy@@Base+0x38>

00016d40 <mycore_utils_mhash_create_entry@@Base>:
   16d40:	strd	r4, [sp, #-24]!	; 0xffffffe8
   16d44:	mov	r5, r0
   16d48:	ldr	r0, [r0]
   16d4c:	strd	r6, [sp, #8]
   16d50:	mov	r6, r2
   16d54:	mov	r2, #16
   16d58:	str	r8, [sp, #16]
   16d5c:	mov	r8, r1
   16d60:	mov	r7, r3
   16d64:	ldr	r1, [r5, #4]
   16d68:	str	lr, [sp, #20]
   16d6c:	bl	108a4 <mchar_async_malloc@plt>
   16d70:	mov	r4, r0
   16d74:	add	r2, r6, #1
   16d78:	ldrd	r0, [r5]
   16d7c:	bl	108a4 <mchar_async_malloc@plt>
   16d80:	cmp	r0, #0
   16d84:	str	r0, [r4]
   16d88:	beq	16dc4 <mycore_utils_mhash_create_entry@@Base+0x84>
   16d8c:	mov	r2, r6
   16d90:	mov	r1, r8
   16d94:	bl	fefc <memcpy@plt>
   16d98:	ldr	r2, [r4]
   16d9c:	mov	r3, #0
   16da0:	strb	r3, [r2, r6]
   16da4:	strd	r6, [r4, #4]
   16da8:	str	r3, [r4, #12]
   16dac:	mov	r0, r4
   16db0:	ldrd	r4, [sp]
   16db4:	ldrd	r6, [sp, #8]
   16db8:	ldr	r8, [sp, #16]
   16dbc:	add	sp, sp, #20
   16dc0:	pop	{pc}		; (ldr pc, [sp], #4)
   16dc4:	mov	r2, r4
   16dc8:	mov	r4, r0
   16dcc:	ldrd	r0, [r5]
   16dd0:	bl	106ac <mchar_async_free@plt>
   16dd4:	b	16dac <mycore_utils_mhash_create_entry@@Base+0x6c>

00016dd8 <mycore_utils_mhash_search@@Base>:
   16dd8:	cmp	r2, #0
   16ddc:	cmpne	r1, #0
   16de0:	strd	r4, [sp, #-16]!
   16de4:	str	r6, [sp, #8]
   16de8:	str	lr, [sp, #12]
   16dec:	beq	16e64 <mycore_utils_mhash_search@@Base+0x8c>
   16df0:	mov	r4, r0
   16df4:	mov	r6, r1
   16df8:	mov	r5, r2
   16dfc:	mov	r1, r2
   16e00:	ldr	r2, [r4, #12]
   16e04:	mov	r0, r6
   16e08:	bl	1001c <mycore_utils_mhash_hash@plt>
   16e0c:	ldr	r3, [r4, #8]
   16e10:	ldr	r4, [r3, r0, lsl #2]
   16e14:	cmp	r4, #0
   16e18:	bne	16e2c <mycore_utils_mhash_search@@Base+0x54>
   16e1c:	b	16e64 <mycore_utils_mhash_search@@Base+0x8c>
   16e20:	ldr	r4, [r4, #12]
   16e24:	cmp	r4, #0
   16e28:	beq	16e64 <mycore_utils_mhash_search@@Base+0x8c>
   16e2c:	ldr	r3, [r4, #4]
   16e30:	cmp	r3, r5
   16e34:	bne	16e20 <mycore_utils_mhash_search@@Base+0x48>
   16e38:	mov	r2, r5
   16e3c:	mov	r1, r6
   16e40:	ldr	r0, [r4]
   16e44:	bl	10f28 <strncmp@plt>
   16e48:	cmp	r0, #0
   16e4c:	bne	16e20 <mycore_utils_mhash_search@@Base+0x48>
   16e50:	mov	r0, r4
   16e54:	ldrd	r4, [sp]
   16e58:	ldr	r6, [sp, #8]
   16e5c:	add	sp, sp, #12
   16e60:	pop	{pc}		; (ldr pc, [sp], #4)
   16e64:	mov	r4, #0
   16e68:	b	16e50 <mycore_utils_mhash_search@@Base+0x78>

00016e6c <mycore_utils_mhash_entry_by_id@@Base>:
   16e6c:	ldr	r3, [r0, #12]
   16e70:	cmp	r3, r1
   16e74:	ldrhi	r3, [r0, #8]
   16e78:	ldrhi	r0, [r3, r1, lsl #2]
   16e7c:	movls	r0, #0
   16e80:	bx	lr

00016e84 <mycore_utils_mhash_get_table_size@@Base>:
   16e84:	ldr	r0, [r0, #12]
   16e88:	bx	lr

00016e8c <mycore_utils_mhash_rebuild_add_entry@@Base>:
   16e8c:	clz	ip, r2
   16e90:	cmp	r1, #0
   16e94:	lsr	ip, ip, #5
   16e98:	moveq	ip, #1
   16e9c:	cmp	ip, #0
   16ea0:	bne	16f18 <mycore_utils_mhash_rebuild_add_entry@@Base+0x8c>
   16ea4:	strd	r4, [sp, #-16]!
   16ea8:	mov	r5, r0
   16eac:	mov	r4, r3
   16eb0:	str	r6, [sp, #8]
   16eb4:	str	lr, [sp, #12]
   16eb8:	mov	lr, r1
   16ebc:	mov	r1, r2
   16ec0:	mov	r0, lr
   16ec4:	str	ip, [r3, #12]
   16ec8:	ldr	r2, [r5, #12]
   16ecc:	bl	1001c <mycore_utils_mhash_hash@plt>
   16ed0:	ldr	r3, [r5, #8]
   16ed4:	mov	r2, r0
   16ed8:	ldr	r1, [r3, r0, lsl #2]
   16edc:	cmp	r1, #0
   16ee0:	moveq	r0, r4
   16ee4:	streq	r4, [r3, r2, lsl #2]
   16ee8:	bne	16ef4 <mycore_utils_mhash_rebuild_add_entry@@Base+0x68>
   16eec:	b	16f08 <mycore_utils_mhash_rebuild_add_entry@@Base+0x7c>
   16ef0:	mov	r1, r2
   16ef4:	ldr	r2, [r1, #12]
   16ef8:	cmp	r2, #0
   16efc:	bne	16ef0 <mycore_utils_mhash_rebuild_add_entry@@Base+0x64>
   16f00:	mov	r0, r4
   16f04:	str	r4, [r1, #12]
   16f08:	ldrd	r4, [sp]
   16f0c:	ldr	r6, [sp, #8]
   16f10:	add	sp, sp, #12
   16f14:	pop	{pc}		; (ldr pc, [sp], #4)
   16f18:	mov	r0, #0
   16f1c:	bx	lr

00016f20 <mycore_utils_mhash_rebuld@@Base>:
   16f20:	strd	r4, [sp, #-24]!	; 0xffffffe8
   16f24:	mov	r5, r0
   16f28:	mov	r1, #4
   16f2c:	ldr	r4, [r0, #12]
   16f30:	strd	r6, [sp, #8]
   16f34:	str	r8, [sp, #16]
   16f38:	str	lr, [sp, #20]
   16f3c:	ldr	r8, [r0, #8]
   16f40:	lsl	r3, r4, #1
   16f44:	mov	r0, r3
   16f48:	str	r3, [r5, #12]
   16f4c:	bl	feb4 <mycore_calloc@plt>
   16f50:	cmp	r0, #0
   16f54:	str	r0, [r5, #8]
   16f58:	beq	16fc8 <mycore_utils_mhash_rebuld@@Base+0xa8>
   16f5c:	ldr	r3, [r5, #12]
   16f60:	cmp	r3, #0
   16f64:	subne	r7, r8, #4
   16f68:	movne	r6, #0
   16f6c:	beq	16fa8 <mycore_utils_mhash_rebuld@@Base+0x88>
   16f70:	ldr	r4, [r7, #4]!
   16f74:	cmp	r4, #0
   16f78:	beq	16f9c <mycore_utils_mhash_rebuld@@Base+0x7c>
   16f7c:	mov	r3, r4
   16f80:	mov	r0, r5
   16f84:	ldm	r4, {r1, r2}
   16f88:	bl	10e38 <mycore_utils_mhash_rebuild_add_entry@plt>
   16f8c:	ldr	r4, [r4, #12]
   16f90:	cmp	r4, #0
   16f94:	bne	16f7c <mycore_utils_mhash_rebuld@@Base+0x5c>
   16f98:	ldr	r3, [r5, #12]
   16f9c:	add	r6, r6, #1
   16fa0:	cmp	r6, r3
   16fa4:	bcc	16f70 <mycore_utils_mhash_rebuld@@Base+0x50>
   16fa8:	mov	r0, r8
   16fac:	bl	10d60 <mycore_free@plt>
   16fb0:	ldr	r0, [r5, #8]
   16fb4:	ldrd	r4, [sp]
   16fb8:	ldrd	r6, [sp, #8]
   16fbc:	ldr	r8, [sp, #16]
   16fc0:	add	sp, sp, #20
   16fc4:	pop	{pc}		; (ldr pc, [sp], #4)
   16fc8:	str	r8, [r5, #8]
   16fcc:	str	r4, [r5, #12]
   16fd0:	b	16fb4 <mycore_utils_mhash_rebuld@@Base+0x94>

00016fd4 <mycore_utils_mhash_add_with_choice@@Base>:
   16fd4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   16fd8:	clz	r5, r2
   16fdc:	cmp	r1, #0
   16fe0:	lsr	r5, r5, #5
   16fe4:	moveq	r5, #1
   16fe8:	strd	r6, [sp, #8]
   16fec:	strd	r8, [sp, #16]
   16ff0:	cmp	r5, #0
   16ff4:	strd	sl, [sp, #24]
   16ff8:	movne	r6, #0
   16ffc:	str	lr, [sp, #32]
   17000:	sub	sp, sp, #4
   17004:	bne	17080 <mycore_utils_mhash_add_with_choice@@Base+0xac>
   17008:	mov	r8, r0
   1700c:	mov	r7, r1
   17010:	mov	r6, r2
   17014:	mov	r1, r2
   17018:	ldr	r2, [r8, #12]
   1701c:	mov	r0, r7
   17020:	bl	1001c <mycore_utils_mhash_hash@plt>
   17024:	ldr	r3, [r8, #8]
   17028:	lsl	fp, r0, #2
   1702c:	mov	sl, r0
   17030:	ldr	r4, [r3, r0, lsl #2]
   17034:	add	r9, r3, fp
   17038:	cmp	r4, #0
   1703c:	bne	17058 <mycore_utils_mhash_add_with_choice@@Base+0x84>
   17040:	b	170d0 <mycore_utils_mhash_add_with_choice@@Base+0xfc>
   17044:	ldr	r3, [r4, #12]
   17048:	cmp	r3, #0
   1704c:	beq	170a0 <mycore_utils_mhash_add_with_choice@@Base+0xcc>
   17050:	add	r5, r5, #1
   17054:	mov	r4, r3
   17058:	ldr	r3, [r4, #4]
   1705c:	cmp	r3, r6
   17060:	bne	17044 <mycore_utils_mhash_add_with_choice@@Base+0x70>
   17064:	mov	r2, r6
   17068:	mov	r1, r7
   1706c:	ldr	r0, [r4]
   17070:	bl	10f28 <strncmp@plt>
   17074:	cmp	r0, #0
   17078:	bne	17044 <mycore_utils_mhash_add_with_choice@@Base+0x70>
   1707c:	mov	r6, r4
   17080:	mov	r0, r6
   17084:	add	sp, sp, #4
   17088:	ldrd	r4, [sp]
   1708c:	ldrd	r6, [sp, #8]
   17090:	ldrd	r8, [sp, #16]
   17094:	ldrd	sl, [sp, #24]
   17098:	add	sp, sp, #32
   1709c:	pop	{pc}		; (ldr pc, [sp], #4)
   170a0:	mov	r2, r6
   170a4:	mov	r1, r7
   170a8:	mov	r0, r8
   170ac:	bl	10e8c <mycore_utils_mhash_create_entry@plt>
   170b0:	ldr	r3, [r8, #20]
   170b4:	mov	r6, r0
   170b8:	str	r0, [r4, #12]
   170bc:	cmp	r3, r5
   170c0:	bcs	17080 <mycore_utils_mhash_add_with_choice@@Base+0xac>
   170c4:	mov	r0, r8
   170c8:	bl	109dc <mycore_utils_mhash_rebuld@plt>
   170cc:	b	17080 <mycore_utils_mhash_add_with_choice@@Base+0xac>
   170d0:	ldr	r3, [r8, #12]
   170d4:	ldr	r2, [r8, #16]
   170d8:	sub	r3, r3, r3, lsr #2
   170dc:	cmp	r2, r3
   170e0:	bcs	17108 <mycore_utils_mhash_add_with_choice@@Base+0x134>
   170e4:	mov	r2, r6
   170e8:	mov	r3, #0
   170ec:	mov	r1, r7
   170f0:	mov	r0, r8
   170f4:	bl	10e8c <mycore_utils_mhash_create_entry@plt>
   170f8:	ldr	r3, [r8, #8]
   170fc:	str	r0, [r9]
   17100:	ldr	r6, [r3, sl, lsl #2]
   17104:	b	17080 <mycore_utils_mhash_add_with_choice@@Base+0xac>
   17108:	mov	r0, r8
   1710c:	bl	109dc <mycore_utils_mhash_rebuld@plt>
   17110:	ldr	r3, [r8, #8]
   17114:	add	r9, r3, fp
   17118:	b	170e4 <mycore_utils_mhash_add_with_choice@@Base+0x110>

0001711c <mycore_utils_mhash_add@@Base>:
   1711c:	str	r4, [sp, #-8]!
   17120:	mov	r4, r3
   17124:	str	lr, [sp, #4]
   17128:	bl	10d48 <mycore_utils_mhash_add_with_choice@plt>
   1712c:	cmp	r0, #0
   17130:	strne	r4, [r0, #8]
   17134:	ldr	r4, [sp]
   17138:	add	sp, sp, #4
   1713c:	pop	{pc}		; (ldr pc, [sp], #4)

00017140 <myencoding_detect_by_trigram@@Base>:
   17140:	strd	r4, [sp, #-36]!	; 0xffffffdc
   17144:	strd	r6, [sp, #8]
   17148:	subs	r7, r2, #3
   1714c:	strd	r8, [sp, #16]
   17150:	mov	r8, r0
   17154:	strd	sl, [sp, #24]
   17158:	str	lr, [sp, #32]
   1715c:	sub	sp, sp, #20
   17160:	ldr	lr, [sp, #56]	; 0x38
   17164:	str	r3, [sp, #8]
   17168:	str	r2, [sp, #12]
   1716c:	beq	17248 <myencoding_detect_by_trigram@@Base+0x108>
   17170:	mov	sl, #0
   17174:	mov	r0, sl
   17178:	str	sl, [sp, #4]
   1717c:	b	1718c <myencoding_detect_by_trigram@@Base+0x4c>
   17180:	add	r0, r0, #1
   17184:	cmp	r0, r7
   17188:	bcs	17220 <myencoding_detect_by_trigram@@Base+0xe0>
   1718c:	ldrsb	r3, [r1, r0]
   17190:	add	ip, r1, r0
   17194:	cmp	r3, #0
   17198:	bge	17180 <myencoding_detect_by_trigram@@Base+0x40>
   1719c:	cmp	lr, #0
   171a0:	beq	17180 <myencoding_detect_by_trigram@@Base+0x40>
   171a4:	ldrb	r4, [ip]
   171a8:	mov	r2, #0
   171ac:	ldr	r3, [sp, #8]
   171b0:	b	171c0 <myencoding_detect_by_trigram@@Base+0x80>
   171b4:	cmp	lr, r2
   171b8:	add	r3, r3, #8
   171bc:	beq	17180 <myencoding_detect_by_trigram@@Base+0x40>
   171c0:	ldrb	r5, [r3]
   171c4:	add	r2, r2, #1
   171c8:	cmp	r5, r4
   171cc:	bne	171b4 <myencoding_detect_by_trigram@@Base+0x74>
   171d0:	ldrb	r6, [r3, #1]
   171d4:	ldrb	r5, [ip, #1]
   171d8:	cmp	r6, r5
   171dc:	bne	171b4 <myencoding_detect_by_trigram@@Base+0x74>
   171e0:	ldrb	r6, [r3, #2]
   171e4:	ldrb	r5, [ip, #2]
   171e8:	cmp	r6, r5
   171ec:	bne	171b4 <myencoding_detect_by_trigram@@Base+0x74>
   171f0:	ldr	r2, [sp, #4]
   171f4:	ldr	r3, [r3, #4]
   171f8:	add	r2, r2, #1
   171fc:	str	r2, [sp, #4]
   17200:	add	sl, sl, r3
   17204:	ldr	r3, [sp, #12]
   17208:	ldr	r2, [sp, #60]	; 0x3c
   1720c:	cmp	sl, r2
   17210:	movcs	r0, r3
   17214:	add	r0, r0, #1
   17218:	cmp	r0, r7
   1721c:	bcc	1718c <myencoding_detect_by_trigram@@Base+0x4c>
   17220:	ldr	r3, [sp, #4]
   17224:	mov	r0, r8
   17228:	stm	r8, {r3, sl}
   1722c:	add	sp, sp, #20
   17230:	ldrd	r4, [sp]
   17234:	ldrd	r6, [sp, #8]
   17238:	ldrd	r8, [sp, #16]
   1723c:	ldrd	sl, [sp, #24]
   17240:	add	sp, sp, #32
   17244:	pop	{pc}		; (ldr pc, [sp], #4)
   17248:	mov	sl, r7
   1724c:	str	r7, [sp, #4]
   17250:	b	17220 <myencoding_detect_by_trigram@@Base+0xe0>

00017254 <myencoding_detect_russian_has_end@@Base>:
   17254:	ldr	r3, [r0, #4]
   17258:	cmp	r3, r2
   1725c:	bcs	17274 <myencoding_detect_russian_has_end@@Base+0x20>
   17260:	ldr	r0, [r0]
   17264:	cmp	r0, r1
   17268:	movcc	r0, #0
   1726c:	movcs	r0, #1
   17270:	bx	lr
   17274:	mov	r0, #1
   17278:	bx	lr

0001727c <myencoding_detect_unicode_has_end@@Base>:
   1727c:	ldr	r3, [r0, #4]
   17280:	ldr	r0, [r0, #8]
   17284:	cmp	r3, #0
   17288:	bne	17298 <myencoding_detect_unicode_has_end@@Base+0x1c>
   1728c:	clz	r0, r0
   17290:	lsr	r0, r0, #5
   17294:	bx	lr
   17298:	cmp	r0, #0
   1729c:	beq	172bc <myencoding_detect_unicode_has_end@@Base+0x40>
   172a0:	mov	r2, #100	; 0x64
   172a4:	mul	r0, r2, r0
   172a8:	udiv	r0, r0, r3
   172ac:	cmp	r0, r1
   172b0:	movcs	r0, #0
   172b4:	movcc	r0, #1
   172b8:	bx	lr
   172bc:	mov	r0, #1
   172c0:	bx	lr

000172c4 <myencoding_detect_utf_8@@Base>:
   172c4:	cmp	r2, #0
   172c8:	strd	r4, [sp, #-16]!
   172cc:	mov	r5, r0
   172d0:	str	r6, [sp, #8]
   172d4:	str	lr, [sp, #12]
   172d8:	beq	173f4 <myencoding_detect_utf_8@@Base+0x130>
   172dc:	mov	lr, #0
   172e0:	mov	r6, lr
   172e4:	mov	ip, lr
   172e8:	mov	r3, lr
   172ec:	ldrb	r0, [r1, r3]
   172f0:	tst	r0, #128	; 0x80
   172f4:	addeq	r3, r3, #1
   172f8:	addeq	ip, ip, #1
   172fc:	bne	17324 <myencoding_detect_utf_8@@Base+0x60>
   17300:	cmp	r3, r2
   17304:	bcc	172ec <myencoding_detect_utf_8@@Base+0x28>
   17308:	mov	r0, r5
   1730c:	str	ip, [r5]
   17310:	stmib	r5, {r6, lr}
   17314:	ldrd	r4, [sp]
   17318:	ldr	r6, [sp, #8]
   1731c:	add	sp, sp, #12
   17320:	pop	{pc}		; (ldr pc, [sp], #4)
   17324:	and	r4, r0, #224	; 0xe0
   17328:	cmp	r4, #192	; 0xc0
   1732c:	beq	17378 <myencoding_detect_utf_8@@Base+0xb4>
   17330:	and	r4, r0, #240	; 0xf0
   17334:	cmp	r4, #224	; 0xe0
   17338:	beq	173a8 <myencoding_detect_utf_8@@Base+0xe4>
   1733c:	and	r0, r0, #248	; 0xf8
   17340:	cmp	r0, #240	; 0xf0
   17344:	addne	r3, r3, #1
   17348:	addne	lr, lr, #1
   1734c:	bne	17300 <myencoding_detect_utf_8@@Base+0x3c>
   17350:	add	r0, r3, #4
   17354:	cmp	r2, r0
   17358:	bls	17308 <myencoding_detect_utf_8@@Base+0x44>
   1735c:	add	r3, r1, r3
   17360:	ldrb	r4, [r3, #3]
   17364:	tst	r4, #128	; 0x80
   17368:	bne	173dc <myencoding_detect_utf_8@@Base+0x118>
   1736c:	add	lr, lr, #1
   17370:	mov	r3, r0
   17374:	b	172ec <myencoding_detect_utf_8@@Base+0x28>
   17378:	add	r0, r3, #2
   1737c:	cmp	r2, r0
   17380:	bls	17308 <myencoding_detect_utf_8@@Base+0x44>
   17384:	add	r3, r1, r3
   17388:	ldrb	r3, [r3, #1]
   1738c:	tst	r3, #128	; 0x80
   17390:	beq	1736c <myencoding_detect_utf_8@@Base+0xa8>
   17394:	tst	r3, #64	; 0x40
   17398:	addeq	r6, r6, #1
   1739c:	moveq	r3, r0
   173a0:	beq	172ec <myencoding_detect_utf_8@@Base+0x28>
   173a4:	b	1736c <myencoding_detect_utf_8@@Base+0xa8>
   173a8:	add	r0, r3, #3
   173ac:	cmp	r2, r0
   173b0:	bls	17308 <myencoding_detect_utf_8@@Base+0x44>
   173b4:	add	r3, r1, r3
   173b8:	ldrb	r4, [r3, #2]
   173bc:	tst	r4, #128	; 0x80
   173c0:	beq	1736c <myencoding_detect_utf_8@@Base+0xa8>
   173c4:	tst	r4, #64	; 0x40
   173c8:	bne	1736c <myencoding_detect_utf_8@@Base+0xa8>
   173cc:	ldrb	r3, [r3, #1]
   173d0:	tst	r3, #128	; 0x80
   173d4:	beq	1736c <myencoding_detect_utf_8@@Base+0xa8>
   173d8:	b	17394 <myencoding_detect_utf_8@@Base+0xd0>
   173dc:	tst	r4, #64	; 0x40
   173e0:	bne	1736c <myencoding_detect_utf_8@@Base+0xa8>
   173e4:	ldrb	r4, [r3, #2]
   173e8:	tst	r4, #128	; 0x80
   173ec:	beq	1736c <myencoding_detect_utf_8@@Base+0xa8>
   173f0:	b	173c4 <myencoding_detect_utf_8@@Base+0x100>
   173f4:	mov	lr, r2
   173f8:	mov	r6, r2
   173fc:	mov	ip, r2
   17400:	b	17308 <myencoding_detect_utf_8@@Base+0x44>

00017404 <myencoding_detect_utf_16@@Base>:
   17404:	cmp	r2, #0
   17408:	strd	r4, [sp, #-12]!
   1740c:	mov	r4, r0
   17410:	str	lr, [sp, #8]
   17414:	beq	17498 <myencoding_detect_utf_16@@Base+0x94>
   17418:	add	lr, r1, r2
   1741c:	mov	r2, #0
   17420:	sub	r3, r1, #1
   17424:	sub	lr, lr, #1
   17428:	mov	r5, r2
   1742c:	rsb	r1, r1, #1
   17430:	b	1744c <myencoding_detect_utf_16@@Base+0x48>
   17434:	ldrb	r0, [r3, #1]
   17438:	sub	r0, r0, #32
   1743c:	cmp	r0, #94	; 0x5e
   17440:	addls	r5, r5, #1
   17444:	cmp	lr, r3
   17448:	beq	1747c <myencoding_detect_utf_16@@Base+0x78>
   1744c:	add	ip, r1, r3
   17450:	ldrb	r0, [r3, #1]!
   17454:	cmp	r0, #0
   17458:	bne	17444 <myencoding_detect_utf_16@@Base+0x40>
   1745c:	tst	ip, #1
   17460:	beq	17434 <myencoding_detect_utf_16@@Base+0x30>
   17464:	ldrb	r0, [r3, #-1]
   17468:	sub	r0, r0, #32
   1746c:	cmp	r0, #94	; 0x5e
   17470:	addls	r2, r2, #1
   17474:	cmp	lr, r3
   17478:	bne	1744c <myencoding_detect_utf_16@@Base+0x48>
   1747c:	mov	r3, #0
   17480:	mov	r0, r4
   17484:	str	r3, [r4]
   17488:	stmib	r4, {r2, r5}
   1748c:	ldrd	r4, [sp]
   17490:	add	sp, sp, #8
   17494:	pop	{pc}		; (ldr pc, [sp], #4)
   17498:	mov	r5, r2
   1749c:	b	1747c <myencoding_detect_utf_16@@Base+0x78>

000174a0 <myencoding_detect_bom@@Base>:
   174a0:	cmp	r1, #2
   174a4:	bls	174d8 <myencoding_detect_bom@@Base+0x38>
   174a8:	ldrb	r3, [r0]
   174ac:	cmp	r3, #239	; 0xef
   174b0:	beq	174e4 <myencoding_detect_bom@@Base+0x44>
   174b4:	cmp	r3, #254	; 0xfe
   174b8:	beq	1750c <myencoding_detect_bom@@Base+0x6c>
   174bc:	cmp	r3, #255	; 0xff
   174c0:	bne	174d0 <myencoding_detect_bom@@Base+0x30>
   174c4:	ldrb	r3, [r0, #1]
   174c8:	cmp	r3, #254	; 0xfe
   174cc:	beq	17528 <myencoding_detect_bom@@Base+0x88>
   174d0:	mov	r0, #0
   174d4:	bx	lr
   174d8:	bne	174d0 <myencoding_detect_bom@@Base+0x30>
   174dc:	ldrb	r3, [r0]
   174e0:	b	174b4 <myencoding_detect_bom@@Base+0x14>
   174e4:	ldrb	r3, [r0, #1]
   174e8:	cmp	r3, #187	; 0xbb
   174ec:	bne	174d0 <myencoding_detect_bom@@Base+0x30>
   174f0:	ldrb	r3, [r0, #2]
   174f4:	cmp	r3, #191	; 0xbf
   174f8:	bne	174d0 <myencoding_detect_bom@@Base+0x30>
   174fc:	mov	r3, #0
   17500:	mov	r0, #1
   17504:	str	r3, [r2]
   17508:	bx	lr
   1750c:	ldrb	r3, [r0, #1]
   17510:	cmp	r3, #255	; 0xff
   17514:	bne	174d0 <myencoding_detect_bom@@Base+0x30>
   17518:	mov	r3, #5
   1751c:	mov	r0, #1
   17520:	str	r3, [r2]
   17524:	bx	lr
   17528:	mov	r3, #4
   1752c:	mov	r0, #1
   17530:	str	r3, [r2]
   17534:	bx	lr

00017538 <myencoding_detect_and_cut_bom@@Base>:
   17538:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1753c:	mov	r5, r0
   17540:	mov	r4, r1
   17544:	strd	r6, [sp, #8]
   17548:	mov	r6, r3
   1754c:	mov	r7, r2
   17550:	str	r8, [sp, #16]
   17554:	str	lr, [sp, #20]
   17558:	bl	101b4 <myencoding_detect_bom@plt>
   1755c:	cmp	r0, #0
   17560:	beq	17588 <myencoding_detect_and_cut_bom@@Base+0x50>
   17564:	ldr	r3, [r7]
   17568:	cmp	r3, #0
   1756c:	ldr	r3, [sp, #24]
   17570:	addeq	r5, r5, #3
   17574:	subeq	r4, r4, #3
   17578:	addne	r5, r5, #2
   1757c:	subne	r4, r4, #2
   17580:	str	r5, [r6]
   17584:	str	r4, [r3]
   17588:	ldrd	r4, [sp]
   1758c:	ldrd	r6, [sp, #8]
   17590:	ldr	r8, [sp, #16]
   17594:	add	sp, sp, #20
   17598:	pop	{pc}		; (ldr pc, [sp], #4)

0001759c <myencoding_detect_unicode@@Base>:
   1759c:	mov	r3, #0
   175a0:	strd	r4, [sp, #-20]!	; 0xffffffec
   175a4:	mov	r5, r0
   175a8:	strd	r6, [sp, #8]
   175ac:	mov	r7, r2
   175b0:	mov	r6, r1
   175b4:	str	lr, [sp, #16]
   175b8:	sub	sp, sp, #36	; 0x24
   175bc:	mov	r2, r1
   175c0:	add	r4, sp, #20
   175c4:	mov	r1, r0
   175c8:	str	r3, [r7]
   175cc:	mov	r0, r4
   175d0:	bl	fe78 <myencoding_detect_utf_16@plt>
   175d4:	ldr	r3, [sp, #28]
   175d8:	cmp	r3, #0
   175dc:	bne	17648 <myencoding_detect_unicode@@Base+0xac>
   175e0:	ldr	r3, [sp, #24]
   175e4:	cmp	r3, #2
   175e8:	movhi	r3, #4
   175ec:	movhi	r0, #1
   175f0:	strhi	r3, [r7]
   175f4:	bhi	17634 <myencoding_detect_unicode@@Base+0x98>
   175f8:	mov	r1, r5
   175fc:	mov	r5, sp
   17600:	mov	r2, r6
   17604:	mov	r0, r5
   17608:	bl	10fac <myencoding_detect_utf_8@plt>
   1760c:	ldrd	r2, [sp]
   17610:	mov	r0, r4
   17614:	mov	r1, #10
   17618:	ldr	ip, [r5, #8]
   1761c:	strd	r2, [sp, #20]
   17620:	str	ip, [r4, #8]
   17624:	bl	10a00 <myencoding_detect_unicode_has_end@plt>
   17628:	cmp	r0, #0
   1762c:	movne	r3, #0
   17630:	strne	r3, [r7]
   17634:	add	sp, sp, #36	; 0x24
   17638:	ldrd	r4, [sp]
   1763c:	ldrd	r6, [sp, #8]
   17640:	add	sp, sp, #16
   17644:	pop	{pc}		; (ldr pc, [sp], #4)
   17648:	cmp	r3, #2
   1764c:	bls	175f8 <myencoding_detect_unicode@@Base+0x5c>
   17650:	ldr	r3, [sp, #24]
   17654:	cmp	r3, #0
   17658:	moveq	r3, #5
   1765c:	moveq	r0, #1
   17660:	streq	r3, [r7]
   17664:	bne	175f8 <myencoding_detect_unicode@@Base+0x5c>
   17668:	b	17634 <myencoding_detect_unicode@@Base+0x98>

0001766c <myencoding_detect_russian@@Base>:
   1766c:	ldr	r3, [pc, #580]	; 178b8 <myencoding_detect_russian@@Base+0x24c>
   17670:	mov	ip, #1000	; 0x3e8
   17674:	strd	r4, [sp, #-36]!	; 0xffffffdc
   17678:	mov	r5, r2
   1767c:	mov	r2, #0
   17680:	strd	r6, [sp, #8]
   17684:	mov	r6, r0
   17688:	mov	r7, r1
   1768c:	strd	r8, [sp, #16]
   17690:	movw	r8, #34464	; 0x86a0
   17694:	movt	r8, #1
   17698:	strd	sl, [sp, #24]
   1769c:	str	lr, [sp, #32]
   176a0:	sub	sp, sp, #28
   176a4:	add	r3, pc, r3
   176a8:	add	r4, sp, #16
   176ac:	str	r2, [r5]
   176b0:	mov	r2, r1
   176b4:	mov	r1, r0
   176b8:	mov	r0, r4
   176bc:	str	ip, [sp]
   176c0:	str	r8, [sp, #4]
   176c4:	bl	106a0 <myencoding_detect_by_trigram@plt>
   176c8:	mov	r2, r8
   176cc:	mov	r0, r4
   176d0:	mov	r1, #50	; 0x32
   176d4:	bl	10ce8 <myencoding_detect_russian_has_end@plt>
   176d8:	cmp	r0, #0
   176dc:	movne	r3, #32
   176e0:	strne	r3, [r5]
   176e4:	bne	1789c <myencoding_detect_russian@@Base+0x230>
   176e8:	ldr	fp, [sp, #20]
   176ec:	mov	r1, #1000	; 0x3e8
   176f0:	movw	r9, #34464	; 0x86a0
   176f4:	movt	r9, #1
   176f8:	add	sl, sp, #8
   176fc:	mov	r0, sl
   17700:	mov	r2, r7
   17704:	cmp	fp, #0
   17708:	movne	r3, #32
   1770c:	strne	r3, [r5]
   17710:	ldr	r3, [pc, #420]	; 178bc <myencoding_detect_russian@@Base+0x250>
   17714:	stm	sp, {r1, r9}
   17718:	mov	r1, r6
   1771c:	add	r3, pc, r3
   17720:	bl	106a0 <myencoding_detect_by_trigram@plt>
   17724:	mov	r2, r9
   17728:	ldrd	r8, [sp, #8]
   1772c:	mov	r1, #50	; 0x32
   17730:	mov	r0, r4
   17734:	strd	r8, [sp, #16]
   17738:	bl	10ce8 <myencoding_detect_russian_has_end@plt>
   1773c:	cmp	r0, #0
   17740:	movne	r3, #27
   17744:	strne	r3, [r5]
   17748:	bne	1789c <myencoding_detect_russian@@Base+0x230>
   1774c:	ldr	r3, [sp, #20]
   17750:	cmp	r3, fp
   17754:	bls	17764 <myencoding_detect_russian@@Base+0xf8>
   17758:	mov	fp, r3
   1775c:	mov	r3, #27
   17760:	str	r3, [r5]
   17764:	ldr	r3, [pc, #340]	; 178c0 <myencoding_detect_russian@@Base+0x254>
   17768:	mov	ip, #1000	; 0x3e8
   1776c:	movw	r9, #34464	; 0x86a0
   17770:	movt	r9, #1
   17774:	mov	r2, r7
   17778:	mov	r1, r6
   1777c:	mov	r0, sl
   17780:	str	ip, [sp]
   17784:	str	r9, [sp, #4]
   17788:	add	r3, pc, r3
   1778c:	bl	106a0 <myencoding_detect_by_trigram@plt>
   17790:	mov	r2, r9
   17794:	ldrd	r8, [sp, #8]
   17798:	mov	r1, #50	; 0x32
   1779c:	mov	r0, r4
   177a0:	strd	r8, [sp, #16]
   177a4:	bl	10ce8 <myencoding_detect_russian_has_end@plt>
   177a8:	cmp	r0, #0
   177ac:	movne	r3, #22
   177b0:	strne	r3, [r5]
   177b4:	bne	1789c <myencoding_detect_russian@@Base+0x230>
   177b8:	ldr	r3, [sp, #20]
   177bc:	cmp	r3, fp
   177c0:	bls	177d0 <myencoding_detect_russian@@Base+0x164>
   177c4:	mov	fp, r3
   177c8:	mov	r3, #22
   177cc:	str	r3, [r5]
   177d0:	ldr	r3, [pc, #236]	; 178c4 <myencoding_detect_russian@@Base+0x258>
   177d4:	mov	ip, #1000	; 0x3e8
   177d8:	movw	r9, #34464	; 0x86a0
   177dc:	movt	r9, #1
   177e0:	mov	r2, r7
   177e4:	mov	r1, r6
   177e8:	mov	r0, sl
   177ec:	str	ip, [sp]
   177f0:	str	r9, [sp, #4]
   177f4:	add	r3, pc, r3
   177f8:	bl	106a0 <myencoding_detect_by_trigram@plt>
   177fc:	mov	r2, r9
   17800:	ldrd	r8, [sp, #8]
   17804:	mov	r1, #50	; 0x32
   17808:	mov	r0, r4
   1780c:	strd	r8, [sp, #16]
   17810:	bl	10ce8 <myencoding_detect_russian_has_end@plt>
   17814:	cmp	r0, #0
   17818:	movne	r3, #41	; 0x29
   1781c:	strne	r3, [r5]
   17820:	bne	1789c <myencoding_detect_russian@@Base+0x230>
   17824:	ldr	r3, [sp, #20]
   17828:	cmp	r3, fp
   1782c:	bls	1783c <myencoding_detect_russian@@Base+0x1d0>
   17830:	mov	fp, r3
   17834:	mov	r3, #41	; 0x29
   17838:	str	r3, [r5]
   1783c:	ldr	r3, [pc, #132]	; 178c8 <myencoding_detect_russian@@Base+0x25c>
   17840:	mov	ip, #1000	; 0x3e8
   17844:	movw	r9, #34464	; 0x86a0
   17848:	movt	r9, #1
   1784c:	mov	r2, r7
   17850:	mov	r1, r6
   17854:	mov	r0, sl
   17858:	str	ip, [sp]
   1785c:	str	r9, [sp, #4]
   17860:	add	r3, pc, r3
   17864:	bl	106a0 <myencoding_detect_by_trigram@plt>
   17868:	ldrd	r6, [sp, #8]
   1786c:	mov	r2, r9
   17870:	mov	r0, r4
   17874:	mov	r1, #50	; 0x32
   17878:	strd	r6, [sp, #16]
   1787c:	bl	10ce8 <myencoding_detect_russian_has_end@plt>
   17880:	cmp	r0, #0
   17884:	bne	17894 <myencoding_detect_russian@@Base+0x228>
   17888:	ldr	r3, [sp, #20]
   1788c:	cmp	r3, fp
   17890:	bls	1789c <myencoding_detect_russian@@Base+0x230>
   17894:	mov	r3, #12
   17898:	str	r3, [r5]
   1789c:	add	sp, sp, #28
   178a0:	ldrd	r4, [sp]
   178a4:	ldrd	r6, [sp, #8]
   178a8:	ldrd	r8, [sp, #16]
   178ac:	ldrd	sl, [sp, #24]
   178b0:	add	sp, sp, #32
   178b4:	pop	{pc}		; (ldr pc, [sp], #4)
   178b8:	andeq	fp, r1, r4, lsr #31
   178bc:	muleq	r1, ip, lr
   178c0:	andeq	pc, r1, r0, lsr #27
   178c4:	andeq	r9, r1, r4, ror #29
   178c8:	andeq	r1, r2, r8, lsr ip

000178cc <myencoding_detect@@Base>:
   178cc:	mov	r3, #0
   178d0:	strd	r4, [sp, #-16]!
   178d4:	mov	r4, r2
   178d8:	str	r6, [sp, #8]
   178dc:	mov	r5, r0
   178e0:	mov	r6, r1
   178e4:	str	lr, [sp, #12]
   178e8:	str	r3, [r2]
   178ec:	bl	fbe4 <myencoding_detect_unicode@plt>
   178f0:	cmp	r0, #0
   178f4:	beq	17908 <myencoding_detect@@Base+0x3c>
   178f8:	ldrd	r4, [sp]
   178fc:	ldr	r6, [sp, #8]
   17900:	add	sp, sp, #12
   17904:	pop	{pc}		; (ldr pc, [sp], #4)
   17908:	mov	r2, r4
   1790c:	mov	r1, r6
   17910:	ldr	r6, [sp, #8]
   17914:	mov	r0, r5
   17918:	ldrd	r4, [sp]
   1791c:	ldr	lr, [sp, #12]
   17920:	add	sp, sp, #16
   17924:	b	10ee0 <myencoding_detect_russian@plt>

00017928 <myencoding_name_entry_by_name@@Base>:
   17928:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1792c:	mov	r5, r1
   17930:	movw	r3, #11575	; 0x2d37
   17934:	movt	r3, #14546	; 0x38d2
   17938:	add	r2, r0, r5
   1793c:	ldr	r1, [pc, #184]	; 179fc <myencoding_name_entry_by_name@@Base+0xd4>
   17940:	strd	r6, [sp, #8]
   17944:	mov	r6, r0
   17948:	str	r8, [sp, #16]
   1794c:	str	lr, [sp, #20]
   17950:	ldrb	ip, [r0]
   17954:	movw	r0, #419	; 0x1a3
   17958:	add	r1, pc, r1
   1795c:	ldrb	r2, [r2, #-1]
   17960:	ldr	r7, [pc, #152]	; 17a00 <myencoding_name_entry_by_name@@Base+0xd8>
   17964:	ldrb	r4, [r1, ip]
   17968:	ldrb	r2, [r1, r2]
   1796c:	add	r7, pc, r7
   17970:	smulbb	r4, r2, r4
   17974:	mul	r2, r5, r4
   17978:	umull	r1, r3, r3, r2
   1797c:	sub	r4, r2, r3
   17980:	add	r4, r3, r4, lsr #1
   17984:	lsr	r4, r4, #8
   17988:	mls	r4, r0, r4, r2
   1798c:	add	r4, r4, #1
   17990:	rsb	r4, r4, r4, lsl #3
   17994:	add	r4, r7, r4, lsl #2
   17998:	ldr	r0, [r4, #8]
   1799c:	cmp	r0, #0
   179a0:	beq	179dc <myencoding_name_entry_by_name@@Base+0xb4>
   179a4:	ldr	r3, [r4, #12]
   179a8:	cmp	r3, r5
   179ac:	beq	179bc <myencoding_name_entry_by_name@@Base+0x94>
   179b0:	bhi	179dc <myencoding_name_entry_by_name@@Base+0xb4>
   179b4:	ldr	r4, [r4, #20]
   179b8:	b	17990 <myencoding_name_entry_by_name@@Base+0x68>
   179bc:	mov	r2, r5
   179c0:	mov	r1, r6
   179c4:	bl	10238 <mycore_strncasecmp@plt>
   179c8:	cmp	r0, #0
   179cc:	beq	179f4 <myencoding_name_entry_by_name@@Base+0xcc>
   179d0:	ldr	r4, [r4, #20]
   179d4:	cmp	r4, #0
   179d8:	bne	17990 <myencoding_name_entry_by_name@@Base+0x68>
   179dc:	mov	r0, #0
   179e0:	ldrd	r4, [sp]
   179e4:	ldrd	r6, [sp, #8]
   179e8:	ldr	r8, [sp, #16]
   179ec:	add	sp, sp, #20
   179f0:	pop	{pc}		; (ldr pc, [sp], #4)
   179f4:	mov	r0, r4
   179f8:	b	179e0 <myencoding_name_entry_by_name@@Base+0xb8>
   179fc:	andeq	r9, r1, r0, lsl #23
   17a00:	ldrdeq	r9, [pc], -r0

00017a04 <myencoding_by_name@@Base>:
   17a04:	str	r4, [sp, #-8]!
   17a08:	mov	r4, r2
   17a0c:	str	lr, [sp, #4]
   17a10:	bl	ff08 <myencoding_name_entry_by_name@plt>
   17a14:	cmp	r0, #0
   17a18:	beq	17a30 <myencoding_by_name@@Base+0x2c>
   17a1c:	cmp	r4, #0
   17a20:	ldrne	r3, [r0, #16]
   17a24:	moveq	r0, #1
   17a28:	movne	r0, #1
   17a2c:	strne	r3, [r4]
   17a30:	ldr	r4, [sp]
   17a34:	add	sp, sp, #4
   17a38:	pop	{pc}		; (ldr pc, [sp], #4)

00017a3c <myencoding_name_by_id@@Base>:
   17a3c:	cmp	r0, #41	; 0x29
   17a40:	bhi	17a70 <myencoding_name_by_id@@Base+0x34>
   17a44:	cmp	r1, #0
   17a48:	beq	17a60 <myencoding_name_by_id@@Base+0x24>
   17a4c:	ldr	r3, [pc, #60]	; 17a90 <myencoding_name_by_id@@Base+0x54>
   17a50:	add	r3, pc, r3
   17a54:	add	r3, r3, r0, lsl #3
   17a58:	ldr	r3, [r3, #4]
   17a5c:	str	r3, [r1]
   17a60:	ldr	r3, [pc, #44]	; 17a94 <myencoding_name_by_id@@Base+0x58>
   17a64:	add	r3, pc, r3
   17a68:	ldr	r0, [r3, r0, lsl #3]
   17a6c:	bx	lr
   17a70:	cmp	r1, #0
   17a74:	beq	17a88 <myencoding_name_by_id@@Base+0x4c>
   17a78:	mov	r3, #0
   17a7c:	mov	r0, r3
   17a80:	str	r3, [r1]
   17a84:	bx	lr
   17a88:	mov	r0, r1
   17a8c:	bx	lr
   17a90:	muleq	pc, r4, r1	; <UNPREDICTABLE>
   17a94:	andeq	r9, pc, r0, lsl #3

00017a98 <myencoding_extracting_character_encoding_from_charset_with_found@@Base>:
   17a98:	strd	r4, [sp, #-36]!	; 0xffffffdc
   17a9c:	mov	ip, #2
   17aa0:	strd	r6, [sp, #8]
   17aa4:	subs	r7, r3, #0
   17aa8:	strd	r8, [sp, #16]
   17aac:	movne	r3, #0
   17ab0:	strd	sl, [sp, #24]
   17ab4:	str	lr, [sp, #32]
   17ab8:	sub	sp, sp, #4
   17abc:	ldr	r8, [sp, #40]	; 0x28
   17ac0:	str	ip, [r2]
   17ac4:	strne	r3, [r7]
   17ac8:	cmp	r8, #0
   17acc:	movne	r3, #0
   17ad0:	strne	r3, [r8]
   17ad4:	cmp	r1, #7
   17ad8:	bls	17bcc <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x134>
   17adc:	ldr	r5, [pc, #596]	; 17d38 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x2a0>
   17ae0:	mov	sl, r1
   17ae4:	mov	r4, r0
   17ae8:	mov	r6, r2
   17aec:	mov	fp, #0
   17af0:	mov	r9, #7
   17af4:	add	r5, pc, r5
   17af8:	b	17b10 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x78>
   17afc:	mov	r1, fp
   17b00:	add	fp, fp, #1
   17b04:	add	r9, r1, #8
   17b08:	cmp	r9, sl
   17b0c:	bcs	17bcc <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x134>
   17b10:	add	r1, r4, fp
   17b14:	mov	r0, r5
   17b18:	bl	fc74 <mycore_ustrcasecmp_without_checks_by_secondary@plt>
   17b1c:	cmp	r0, #0
   17b20:	subne	r0, r9, #1
   17b24:	addne	r0, r4, r0
   17b28:	beq	17afc <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x64>
   17b2c:	b	17b34 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x9c>
   17b30:	mov	r9, r1
   17b34:	ldrb	r2, [r0, #1]!
   17b38:	add	r1, r9, #1
   17b3c:	sub	r3, r2, #9
   17b40:	sub	ip, r2, #12
   17b44:	cmp	r3, #1
   17b48:	cmphi	ip, #1
   17b4c:	movhi	r3, #1
   17b50:	movls	r3, #0
   17b54:	cmp	r2, #32
   17b58:	moveq	r3, #0
   17b5c:	andne	r3, r3, #1
   17b60:	cmp	r3, #0
   17b64:	bne	17bec <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x154>
   17b68:	cmp	r1, sl
   17b6c:	bcc	17b30 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x98>
   17b70:	ldrb	r2, [r4, r1]
   17b74:	add	fp, r9, #2
   17b78:	cmp	r2, #61	; 0x3d
   17b7c:	bne	17b04 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x6c>
   17b80:	cmp	fp, sl
   17b84:	addcc	r1, r4, fp
   17b88:	bcs	17bcc <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x134>
   17b8c:	mov	r0, r1
   17b90:	ldrb	r2, [r1], #1
   17b94:	sub	r3, r2, #9
   17b98:	sub	ip, r2, #12
   17b9c:	cmp	r3, #1
   17ba0:	cmphi	ip, #1
   17ba4:	movhi	r3, #1
   17ba8:	movls	r3, #0
   17bac:	cmp	r2, #32
   17bb0:	moveq	r3, #0
   17bb4:	andne	r3, r3, #1
   17bb8:	cmp	r3, #0
   17bbc:	bne	17bf8 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x160>
   17bc0:	add	fp, fp, #1
   17bc4:	cmp	sl, fp
   17bc8:	bhi	17b8c <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xf4>
   17bcc:	mov	r0, #0
   17bd0:	add	sp, sp, #4
   17bd4:	ldrd	r4, [sp]
   17bd8:	ldrd	r6, [sp, #8]
   17bdc:	ldrd	r8, [sp, #16]
   17be0:	ldrd	sl, [sp, #24]
   17be4:	add	sp, sp, #32
   17be8:	pop	{pc}		; (ldr pc, [sp], #4)
   17bec:	mov	fp, r1
   17bf0:	mov	r1, r9
   17bf4:	b	17b78 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xe0>
   17bf8:	cmp	sl, fp
   17bfc:	bls	17bcc <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x134>
   17c00:	cmp	r2, #34	; 0x22
   17c04:	beq	17ca8 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x210>
   17c08:	cmp	r2, #39	; 0x27
   17c0c:	beq	17c5c <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x1c4>
   17c10:	cmp	r2, #59	; 0x3b
   17c14:	subne	r3, sl, #1
   17c18:	addne	r1, r4, fp
   17c1c:	addne	r3, r4, r3
   17c20:	rsbne	r2, r4, #1
   17c24:	bne	17c38 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x1a0>
   17c28:	b	17d30 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x298>
   17c2c:	ldrb	lr, [r1, #1]!
   17c30:	cmp	lr, #59	; 0x3b
   17c34:	beq	17cf4 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x25c>
   17c38:	cmp	r3, r1
   17c3c:	add	ip, r2, r1
   17c40:	bne	17c2c <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x194>
   17c44:	cmp	r7, #0
   17c48:	sub	r1, ip, fp
   17c4c:	strne	r0, [r7]
   17c50:	cmp	r8, #0
   17c54:	bne	17d08 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x270>
   17c58:	b	17d0c <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x274>
   17c5c:	add	fp, fp, #1
   17c60:	cmp	sl, fp
   17c64:	bls	17bcc <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x134>
   17c68:	ldrb	r3, [r4, fp]
   17c6c:	add	r0, r4, fp
   17c70:	cmp	r3, #39	; 0x27
   17c74:	subne	sl, sl, #1
   17c78:	rsbne	r2, r4, #1
   17c7c:	movne	r3, r0
   17c80:	addne	r4, r4, sl
   17c84:	bne	17c98 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x200>
   17c88:	b	17d30 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x298>
   17c8c:	ldrb	r1, [r3, #1]!
   17c90:	cmp	r1, #39	; 0x27
   17c94:	beq	17cf4 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x25c>
   17c98:	cmp	r4, r3
   17c9c:	add	ip, r2, r3
   17ca0:	bne	17c8c <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x1f4>
   17ca4:	b	17bcc <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x134>
   17ca8:	add	fp, fp, #1
   17cac:	cmp	sl, fp
   17cb0:	bls	17bcc <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x134>
   17cb4:	ldrb	r3, [r4, fp]
   17cb8:	add	r0, r4, fp
   17cbc:	cmp	r3, #34	; 0x22
   17cc0:	subne	sl, sl, #1
   17cc4:	rsbne	r2, r4, #1
   17cc8:	movne	r3, r0
   17ccc:	addne	r4, r4, sl
   17cd0:	bne	17ce4 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x24c>
   17cd4:	b	17d30 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x298>
   17cd8:	ldrb	r1, [r3, #1]!
   17cdc:	cmp	r1, #34	; 0x22
   17ce0:	beq	17cf4 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x25c>
   17ce4:	cmp	r4, r3
   17ce8:	add	ip, r2, r3
   17cec:	bne	17cd8 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x240>
   17cf0:	b	17bcc <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x134>
   17cf4:	sub	r1, ip, fp
   17cf8:	cmp	r7, #0
   17cfc:	strne	r0, [r7]
   17d00:	cmp	r8, #0
   17d04:	beq	17d0c <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x274>
   17d08:	str	r1, [r8]
   17d0c:	mov	r2, r6
   17d10:	add	sp, sp, #4
   17d14:	ldrd	r4, [sp]
   17d18:	ldrd	r6, [sp, #8]
   17d1c:	ldrd	r8, [sp, #16]
   17d20:	ldrd	sl, [sp, #24]
   17d24:	ldr	lr, [sp, #32]
   17d28:	add	sp, sp, #36	; 0x24
   17d2c:	b	10c64 <myencoding_by_name@plt>
   17d30:	mov	r1, #0
   17d34:	b	17cf8 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x260>
   17d38:	andeq	r3, r2, r4, lsl r9

00017d3c <myencoding_extracting_character_encoding_from_charset@@Base>:
   17d3c:	mov	ip, #0
   17d40:	push	{lr}		; (str lr, [sp, #-4]!)
   17d44:	sub	sp, sp, #12
   17d48:	mov	r3, ip
   17d4c:	str	ip, [sp]
   17d50:	bl	107cc <myencoding_extracting_character_encoding_from_charset_with_found@plt>
   17d54:	add	sp, sp, #12
   17d58:	pop	{pc}		; (ldr pc, [sp], #4)

00017d5c <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@@Base>:
   17d5c:	strd	r4, [sp, #-12]!
   17d60:	ldr	ip, [r3]
   17d64:	str	lr, [sp, #8]
   17d68:	ldr	r4, [r1]
   17d6c:	sub	ip, r4, ip
   17d70:	cmp	r4, r2
   17d74:	str	ip, [r3, #4]
   17d78:	bcs	17e14 <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@@Base+0xb8>
   17d7c:	ldrb	ip, [r0, r4]
   17d80:	add	lr, r0, r4
   17d84:	cmp	ip, #32
   17d88:	cmpne	ip, #47	; 0x2f
   17d8c:	sub	r5, ip, #9
   17d90:	movne	r3, #1
   17d94:	moveq	r3, #0
   17d98:	cmp	r5, #1
   17d9c:	movls	r3, #0
   17da0:	andhi	r3, r3, #1
   17da4:	sub	r5, ip, #12
   17da8:	cmp	r5, #1
   17dac:	movls	r3, #0
   17db0:	andhi	r3, r3, #1
   17db4:	cmp	r3, #0
   17db8:	bne	17e28 <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@@Base+0xcc>
   17dbc:	add	r2, r0, r2
   17dc0:	rsb	r0, r0, #1
   17dc4:	sub	r5, r2, #1
   17dc8:	b	17e08 <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@@Base+0xac>
   17dcc:	ldrb	ip, [lr, #1]!
   17dd0:	cmp	ip, #32
   17dd4:	cmpne	ip, #47	; 0x2f
   17dd8:	sub	r2, ip, #9
   17ddc:	movne	r3, #1
   17de0:	moveq	r3, #0
   17de4:	cmp	r2, #1
   17de8:	movls	r3, #0
   17dec:	andhi	r3, r3, #1
   17df0:	sub	r2, ip, #12
   17df4:	cmp	r2, #1
   17df8:	movls	r3, #0
   17dfc:	andhi	r3, r3, #1
   17e00:	cmp	r3, #0
   17e04:	bne	17e28 <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@@Base+0xcc>
   17e08:	cmp	r5, lr
   17e0c:	add	r4, r0, lr
   17e10:	bne	17dcc <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@@Base+0x70>
   17e14:	str	r4, [r1]
   17e18:	mov	r0, #0
   17e1c:	ldrd	r4, [sp]
   17e20:	add	sp, sp, #8
   17e24:	pop	{pc}		; (ldr pc, [sp], #4)
   17e28:	cmp	ip, #61	; 0x3d
   17e2c:	bne	17e14 <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@@Base+0xb8>
   17e30:	add	r4, r4, #1
   17e34:	mov	r0, #1
   17e38:	str	r4, [r1]
   17e3c:	ldrd	r4, [sp]
   17e40:	add	sp, sp, #8
   17e44:	pop	{pc}		; (ldr pc, [sp], #4)

00017e48 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base>:
   17e48:	cmp	r1, r2
   17e4c:	strd	r4, [sp, #-20]!	; 0xffffffec
   17e50:	strd	r6, [sp, #8]
   17e54:	str	lr, [sp, #16]
   17e58:	bcs	17edc <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x94>
   17e5c:	ldrb	lr, [r0, r1]
   17e60:	add	r4, r0, r1
   17e64:	sub	ip, lr, #9
   17e68:	sub	r5, lr, #12
   17e6c:	cmp	ip, #1
   17e70:	cmphi	r5, #1
   17e74:	movhi	ip, #1
   17e78:	movls	ip, #0
   17e7c:	cmp	lr, #32
   17e80:	moveq	ip, #0
   17e84:	andne	ip, ip, #1
   17e88:	cmp	ip, #0
   17e8c:	bne	17efc <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0xb4>
   17e90:	add	r6, r0, r2
   17e94:	rsb	r7, r0, #1
   17e98:	sub	r6, r6, #1
   17e9c:	b	17ed0 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x88>
   17ea0:	ldrb	lr, [r4, #1]!
   17ea4:	sub	ip, lr, #9
   17ea8:	sub	r5, lr, #12
   17eac:	cmp	ip, #1
   17eb0:	cmphi	r5, #1
   17eb4:	movhi	ip, #1
   17eb8:	movls	ip, #0
   17ebc:	cmp	lr, #32
   17ec0:	moveq	ip, #0
   17ec4:	andne	ip, ip, #1
   17ec8:	cmp	ip, #0
   17ecc:	bne	17efc <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0xb4>
   17ed0:	cmp	r6, r4
   17ed4:	add	r1, r7, r4
   17ed8:	bne	17ea0 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x58>
   17edc:	ldr	r2, [sp, #20]
   17ee0:	mov	r3, #1
   17ee4:	strb	r3, [r2]
   17ee8:	ldrd	r4, [sp]
   17eec:	mov	r0, r1
   17ef0:	ldrd	r6, [sp, #8]
   17ef4:	add	sp, sp, #16
   17ef8:	pop	{pc}		; (ldr pc, [sp], #4)
   17efc:	cmp	lr, #39	; 0x27
   17f00:	add	r4, r1, #1
   17f04:	beq	17fe8 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x1a0>
   17f08:	cmp	lr, #62	; 0x3e
   17f0c:	beq	17f84 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x13c>
   17f10:	cmp	lr, #34	; 0x22
   17f14:	beq	17f98 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x150>
   17f18:	sub	r4, r1, #1
   17f1c:	mov	lr, r1
   17f20:	str	r1, [r3, #8]
   17f24:	add	r4, r0, r4
   17f28:	b	17f38 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0xf0>
   17f2c:	cmp	r2, r5
   17f30:	mov	lr, r5
   17f34:	bls	18040 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x1f8>
   17f38:	ldrb	r0, [r4, #1]!
   17f3c:	add	r5, lr, #1
   17f40:	cmp	r0, #32
   17f44:	cmpne	r0, #62	; 0x3e
   17f48:	sub	r6, r0, #9
   17f4c:	moveq	ip, #1
   17f50:	movne	ip, #0
   17f54:	cmp	r6, #1
   17f58:	orrls	ip, ip, #1
   17f5c:	sub	r0, r0, #12
   17f60:	cmp	r0, #1
   17f64:	movhi	r0, ip
   17f68:	orrls	r0, ip, #1
   17f6c:	cmp	r0, #0
   17f70:	beq	17f2c <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0xe4>
   17f74:	sub	lr, lr, r1
   17f78:	mov	r1, r5
   17f7c:	str	lr, [r3, #12]
   17f80:	b	17ee8 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0xa0>
   17f84:	ldr	r2, [sp, #20]
   17f88:	mov	r3, #1
   17f8c:	mov	r1, r4
   17f90:	strb	r3, [r2]
   17f94:	b	17ee8 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0xa0>
   17f98:	cmp	r2, r4
   17f9c:	str	r4, [r3, #8]
   17fa0:	bls	1804c <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x204>
   17fa4:	ldrb	r1, [r0, r4]
   17fa8:	add	ip, r0, r4
   17fac:	cmp	r1, #34	; 0x22
   17fb0:	addne	r2, r0, r2
   17fb4:	rsbne	r7, r0, #1
   17fb8:	subne	lr, r2, #1
   17fbc:	bne	17fd0 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x188>
   17fc0:	b	18058 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x210>
   17fc4:	ldrb	r2, [ip, #1]!
   17fc8:	cmp	r2, #34	; 0x22
   17fcc:	beq	18030 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x1e8>
   17fd0:	cmp	lr, ip
   17fd4:	add	r1, r7, ip
   17fd8:	bne	17fc4 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x17c>
   17fdc:	sub	r4, r1, r4
   17fe0:	str	r4, [r3, #12]
   17fe4:	b	17ee8 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0xa0>
   17fe8:	cmp	r2, r4
   17fec:	str	r4, [r3, #8]
   17ff0:	bls	1804c <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x204>
   17ff4:	ldrb	r1, [r0, r4]
   17ff8:	add	ip, r0, r4
   17ffc:	cmp	r1, #39	; 0x27
   18000:	addne	r2, r0, r2
   18004:	rsbne	r7, r0, #1
   18008:	subne	lr, r2, #1
   1800c:	bne	18020 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x1d8>
   18010:	b	18058 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x210>
   18014:	ldrb	r2, [ip, #1]!
   18018:	cmp	r2, #39	; 0x27
   1801c:	beq	18030 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x1e8>
   18020:	cmp	lr, ip
   18024:	add	r1, r7, ip
   18028:	bne	18014 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x1cc>
   1802c:	b	17fdc <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x194>
   18030:	sub	r4, r1, r4
   18034:	add	r1, r1, #1
   18038:	str	r4, [r3, #12]
   1803c:	b	17ee8 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0xa0>
   18040:	sub	r4, r5, r1
   18044:	mov	r1, r5
   18048:	b	17fe0 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x198>
   1804c:	mov	r1, r4
   18050:	mov	r4, #0
   18054:	b	17fe0 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x198>
   18058:	mov	r1, r4
   1805c:	mov	r4, #0
   18060:	b	18034 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x1ec>

00018064 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base>:
   18064:	strd	r4, [sp, #-20]!	; 0xffffffec
   18068:	mov	r4, r3
   1806c:	mov	r3, #0
   18070:	cmp	r2, r1
   18074:	strd	r6, [sp, #8]
   18078:	str	lr, [sp, #16]
   1807c:	sub	sp, sp, #20
   18080:	str	r3, [r4]
   18084:	str	r3, [r4, #4]
   18088:	str	r3, [r4, #8]
   1808c:	str	r3, [r4, #12]
   18090:	str	r3, [r4, #16]
   18094:	bls	18138 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0xd4>
   18098:	mov	r6, r2
   1809c:	ldrb	r2, [r0, r1]
   180a0:	mov	r5, r0
   180a4:	add	r0, r0, r1
   180a8:	cmp	r2, #32
   180ac:	cmpne	r2, #47	; 0x2f
   180b0:	sub	ip, r2, #9
   180b4:	movne	r3, #1
   180b8:	moveq	r3, #0
   180bc:	cmp	ip, #1
   180c0:	movls	r3, #0
   180c4:	andhi	r3, r3, #1
   180c8:	sub	ip, r2, #12
   180cc:	cmp	ip, #1
   180d0:	movls	r3, #0
   180d4:	andhi	r3, r3, #1
   180d8:	cmp	r3, #0
   180dc:	bne	1833c <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2d8>
   180e0:	add	lr, r5, r6
   180e4:	rsb	r7, r5, #1
   180e8:	sub	lr, lr, #1
   180ec:	b	1812c <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0xc8>
   180f0:	ldrb	r2, [r0, #1]!
   180f4:	cmp	r2, #32
   180f8:	cmpne	r2, #47	; 0x2f
   180fc:	sub	ip, r2, #9
   18100:	movne	r3, #1
   18104:	moveq	r3, #0
   18108:	cmp	ip, #1
   1810c:	movls	r3, #0
   18110:	andhi	r3, r3, #1
   18114:	sub	ip, r2, #12
   18118:	cmp	ip, #1
   1811c:	movls	r3, #0
   18120:	andhi	r3, r3, #1
   18124:	cmp	r3, #0
   18128:	bne	1815c <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0xf8>
   1812c:	cmp	lr, r0
   18130:	add	r1, r7, r0
   18134:	bne	180f0 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x8c>
   18138:	ldr	r2, [sp, #40]	; 0x28
   1813c:	mov	r3, #1
   18140:	strb	r3, [r2]
   18144:	mov	r0, r1
   18148:	add	sp, sp, #20
   1814c:	ldrd	r4, [sp]
   18150:	ldrd	r6, [sp, #8]
   18154:	add	sp, sp, #16
   18158:	pop	{pc}		; (ldr pc, [sp], #4)
   1815c:	cmp	r2, #62	; 0x3e
   18160:	str	r1, [sp, #12]
   18164:	beq	18348 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2e4>
   18168:	cmp	r6, r1
   1816c:	str	r1, [r4]
   18170:	bls	18330 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2cc>
   18174:	sub	r3, r1, #1
   18178:	mov	r0, r1
   1817c:	add	r3, r5, r3
   18180:	ldrb	r2, [r3, #1]!
   18184:	add	lr, r0, #1
   18188:	sub	r2, r2, #9
   1818c:	cmp	r2, #53	; 0x35
   18190:	addls	pc, pc, r2, lsl #2
   18194:	b	18320 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2bc>
   18198:	b	18270 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x20c>
   1819c:	b	18270 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x20c>
   181a0:	b	18320 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2bc>
   181a4:	b	18270 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x20c>
   181a8:	b	18270 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x20c>
   181ac:	b	18320 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2bc>
   181b0:	b	18320 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2bc>
   181b4:	b	18320 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2bc>
   181b8:	b	18320 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2bc>
   181bc:	b	18320 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2bc>
   181c0:	b	18320 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2bc>
   181c4:	b	18320 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2bc>
   181c8:	b	18320 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2bc>
   181cc:	b	18320 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2bc>
   181d0:	b	18320 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2bc>
   181d4:	b	18320 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2bc>
   181d8:	b	18320 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2bc>
   181dc:	b	18320 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2bc>
   181e0:	b	18320 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2bc>
   181e4:	b	18320 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2bc>
   181e8:	b	18320 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2bc>
   181ec:	b	18320 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2bc>
   181f0:	b	18320 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2bc>
   181f4:	b	18270 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x20c>
   181f8:	b	18320 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2bc>
   181fc:	b	18320 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2bc>
   18200:	b	18320 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2bc>
   18204:	b	18320 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2bc>
   18208:	b	18320 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2bc>
   1820c:	b	18320 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2bc>
   18210:	b	18320 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2bc>
   18214:	b	18320 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2bc>
   18218:	b	18320 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2bc>
   1821c:	b	18320 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2bc>
   18220:	b	18320 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2bc>
   18224:	b	18320 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2bc>
   18228:	b	18320 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2bc>
   1822c:	b	18320 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2bc>
   18230:	b	182e0 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x27c>
   18234:	b	18320 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2bc>
   18238:	b	18320 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2bc>
   1823c:	b	18320 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2bc>
   18240:	b	18320 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2bc>
   18244:	b	18320 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2bc>
   18248:	b	18320 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2bc>
   1824c:	b	18320 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2bc>
   18250:	b	18320 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2bc>
   18254:	b	18320 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2bc>
   18258:	b	18320 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2bc>
   1825c:	b	18320 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2bc>
   18260:	b	18320 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2bc>
   18264:	b	18320 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2bc>
   18268:	b	182a4 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x240>
   1826c:	b	182e0 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x27c>
   18270:	mov	r3, r4
   18274:	mov	r2, r6
   18278:	str	lr, [sp, #12]
   1827c:	add	r1, sp, #12
   18280:	mov	r0, r5
   18284:	bl	10460 <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@plt>
   18288:	cmp	r0, #0
   1828c:	bne	182fc <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x298>
   18290:	mov	r3, #1
   18294:	ldr	r1, [sp, #12]
   18298:	ldr	r2, [sp, #40]	; 0x28
   1829c:	strb	r3, [r2]
   182a0:	b	18144 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0xe0>
   182a4:	sub	r3, r0, #1
   182a8:	cmp	r3, r1
   182ac:	beq	18270 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x20c>
   182b0:	ldr	r2, [sp, #40]	; 0x28
   182b4:	sub	ip, r0, r1
   182b8:	mov	r3, r4
   182bc:	mov	r1, lr
   182c0:	mov	r0, r5
   182c4:	str	r2, [sp]
   182c8:	mov	r2, r6
   182cc:	str	ip, [r4, #4]
   182d0:	str	lr, [sp, #12]
   182d4:	bl	fde8 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@plt>
   182d8:	mov	r1, r0
   182dc:	b	18144 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0xe0>
   182e0:	ldr	r2, [sp, #40]	; 0x28
   182e4:	sub	r0, r0, r1
   182e8:	mov	r3, #1
   182ec:	mov	r1, lr
   182f0:	strb	r3, [r2]
   182f4:	str	r0, [r4, #4]
   182f8:	b	18144 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0xe0>
   182fc:	ldr	r1, [sp, #40]	; 0x28
   18300:	mov	r3, r4
   18304:	mov	r2, r6
   18308:	mov	r0, r5
   1830c:	str	r1, [sp]
   18310:	ldr	r1, [sp, #12]
   18314:	bl	fde8 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@plt>
   18318:	mov	r1, r0
   1831c:	b	18144 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0xe0>
   18320:	cmp	r6, lr
   18324:	mov	r0, lr
   18328:	bne	18180 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x11c>
   1832c:	str	r6, [sp, #12]
   18330:	mov	r3, r4
   18334:	mov	r2, r6
   18338:	b	1827c <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x218>
   1833c:	cmp	r2, #62	; 0x3e
   18340:	strne	r1, [r4]
   18344:	bne	18174 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x110>
   18348:	ldr	r2, [sp, #40]	; 0x28
   1834c:	mov	r3, #1
   18350:	add	r1, r1, r3
   18354:	strb	r3, [r2]
   18358:	b	18144 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0xe0>

0001835c <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base>:
   1835c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   18360:	mov	ip, #0
   18364:	mov	r5, r1
   18368:	strd	r6, [sp, #8]
   1836c:	mov	r4, r2
   18370:	mov	r6, r0
   18374:	strd	r8, [sp, #16]
   18378:	mov	r9, r3
   1837c:	mov	r7, ip
   18380:	ldr	r3, [pc, #532]	; 1859c <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x240>
   18384:	mov	r8, ip
   18388:	strd	sl, [sp, #24]
   1838c:	ldr	fp, [pc, #524]	; 185a0 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x244>
   18390:	str	lr, [sp, #32]
   18394:	sub	sp, sp, #44	; 0x2c
   18398:	ldr	sl, [pc, #516]	; 185a4 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x248>
   1839c:	add	r3, pc, r3
   183a0:	add	fp, pc, fp
   183a4:	str	r3, [sp, #8]
   183a8:	str	ip, [sp, #12]
   183ac:	add	sl, pc, sl
   183b0:	strb	ip, [sp, #19]
   183b4:	b	183cc <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x70>
   183b8:	cmp	r3, #7
   183bc:	beq	18424 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0xc8>
   183c0:	ldrb	r3, [sp, #19]
   183c4:	cmp	r3, #0
   183c8:	bne	1847c <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x120>
   183cc:	ldr	r1, [r5]
   183d0:	cmp	r1, r4
   183d4:	bcs	1847c <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x120>
   183d8:	add	r0, sp, #19
   183dc:	add	r3, sp, #20
   183e0:	mov	r2, r4
   183e4:	str	r0, [sp]
   183e8:	mov	r0, r6
   183ec:	bl	10c88 <myencoding_prescan_stream_to_determine_encoding_get_attr@plt>
   183f0:	ldr	r3, [sp, #24]
   183f4:	str	r0, [r5]
   183f8:	cmp	r3, #10
   183fc:	bne	183b8 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x5c>
   18400:	ldr	r1, [sp, #20]
   18404:	mov	r0, sl
   18408:	add	r1, r6, r1
   1840c:	bl	fc74 <mycore_ustrcasecmp_without_checks_by_secondary@plt>
   18410:	cmp	r0, #0
   18414:	bne	1855c <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x200>
   18418:	ldr	r3, [sp, #24]
   1841c:	cmp	r3, #7
   18420:	bne	183c0 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x64>
   18424:	ldr	r1, [sp, #20]
   18428:	mov	r0, fp
   1842c:	add	r1, r6, r1
   18430:	bl	fc74 <mycore_ustrcasecmp_without_checks_by_secondary@plt>
   18434:	cmp	r0, #0
   18438:	beq	184d0 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x174>
   1843c:	tst	r7, #2
   18440:	bne	183c0 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x64>
   18444:	ldr	r0, [sp, #28]
   18448:	mov	r2, r9
   1844c:	orr	r7, r7, #2
   18450:	ldr	r3, [sp, #80]	; 0x50
   18454:	ldr	r1, [sp, #84]	; 0x54
   18458:	add	r0, r6, r0
   1845c:	str	r1, [sp]
   18460:	ldr	r1, [sp, #32]
   18464:	bl	107cc <myencoding_extracting_character_encoding_from_charset_with_found@plt>
   18468:	ldrb	r3, [sp, #19]
   1846c:	cmp	r0, #0
   18470:	movne	r8, #2
   18474:	cmp	r3, #0
   18478:	beq	183cc <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x70>
   1847c:	cmp	r8, #0
   18480:	beq	18534 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x1d8>
   18484:	ldr	r3, [sp, #12]
   18488:	eor	r3, r3, #1
   1848c:	cmp	r8, #2
   18490:	movne	r8, #0
   18494:	andeq	r8, r3, #1
   18498:	cmp	r8, #0
   1849c:	bne	18534 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x1d8>
   184a0:	ldr	r3, [r9]
   184a4:	sub	r2, r3, #4
   184a8:	cmp	r2, #1
   184ac:	movls	r0, #1
   184b0:	strls	r8, [r9]
   184b4:	bls	18540 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x1e4>
   184b8:	cmp	r3, #6
   184bc:	moveq	r3, #33	; 0x21
   184c0:	moveq	r0, #1
   184c4:	movne	r0, #1
   184c8:	streq	r3, [r9]
   184cc:	b	18540 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x1e4>
   184d0:	ldr	r3, [sp, #24]
   184d4:	cmp	r3, #7
   184d8:	bne	183c0 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x64>
   184dc:	ldr	r0, [sp, #8]
   184e0:	ldr	r1, [sp, #20]
   184e4:	add	r1, r6, r1
   184e8:	bl	fc74 <mycore_ustrcasecmp_without_checks_by_secondary@plt>
   184ec:	cmp	r0, #0
   184f0:	beq	183c0 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x64>
   184f4:	tst	r7, #4
   184f8:	bne	183c0 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x64>
   184fc:	ldr	r0, [sp, #28]
   18500:	mov	r2, r9
   18504:	orr	r7, r7, #4
   18508:	mov	r8, #1
   1850c:	ldr	r1, [sp, #32]
   18510:	ldr	r3, [sp, #80]	; 0x50
   18514:	add	r0, r6, r0
   18518:	cmp	r3, #0
   1851c:	strne	r0, [r3]
   18520:	ldr	r3, [sp, #84]	; 0x54
   18524:	cmp	r3, #0
   18528:	strne	r1, [r3]
   1852c:	bl	10c64 <myencoding_by_name@plt>
   18530:	b	183c0 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x64>
   18534:	mov	r3, #2
   18538:	mov	r0, #0
   1853c:	str	r3, [r9]
   18540:	add	sp, sp, #44	; 0x2c
   18544:	ldrd	r4, [sp]
   18548:	ldrd	r6, [sp, #8]
   1854c:	ldrd	r8, [sp, #16]
   18550:	ldrd	sl, [sp, #24]
   18554:	add	sp, sp, #32
   18558:	pop	{pc}		; (ldr pc, [sp], #4)
   1855c:	tst	r7, #1
   18560:	bne	183c0 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x64>
   18564:	ldr	r3, [sp, #32]
   18568:	orr	r7, r7, #1
   1856c:	cmp	r3, #12
   18570:	bne	183c0 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x64>
   18574:	ldr	r0, [pc, #44]	; 185a8 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x24c>
   18578:	ldr	r1, [sp, #28]
   1857c:	add	r0, pc, r0
   18580:	add	r1, r6, r1
   18584:	bl	fc74 <mycore_ustrcasecmp_without_checks_by_secondary@plt>
   18588:	ldr	r3, [sp, #12]
   1858c:	cmp	r0, #0
   18590:	movne	r3, r0
   18594:	str	r3, [sp, #12]
   18598:	b	183c0 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x64>
   1859c:	andeq	r3, r2, ip, rrx
   185a0:	andeq	r3, r2, ip, lsl #1
   185a4:	andeq	r3, r2, r4, rrx
   185a8:	andeq	r2, r2, r0, lsr #29

000185ac <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base>:
   185ac:	cmp	r1, r2
   185b0:	bcs	186bc <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0x110>
   185b4:	strd	r4, [sp, #-20]!	; 0xffffffec
   185b8:	strd	r6, [sp, #8]
   185bc:	str	lr, [sp, #16]
   185c0:	sub	sp, sp, #36	; 0x24
   185c4:	add	lr, r0, r1
   185c8:	ldrb	ip, [r0, r1]
   185cc:	sub	r3, ip, #9
   185d0:	sub	r4, ip, #12
   185d4:	cmp	r3, #1
   185d8:	cmphi	r4, #1
   185dc:	movhi	r3, #1
   185e0:	movls	r3, #0
   185e4:	cmp	ip, #32
   185e8:	moveq	r3, #0
   185ec:	andne	r3, r3, #1
   185f0:	cmp	r3, #0
   185f4:	bne	1865c <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0xb0>
   185f8:	add	r5, r2, r0
   185fc:	rsb	r6, r0, #1
   18600:	sub	r5, r5, #1
   18604:	b	18638 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0x8c>
   18608:	ldrb	ip, [lr, #1]!
   1860c:	sub	r3, ip, #9
   18610:	sub	r4, ip, #12
   18614:	cmp	r3, #1
   18618:	cmphi	r4, #1
   1861c:	movhi	r3, #1
   18620:	movls	r3, #0
   18624:	cmp	ip, #32
   18628:	moveq	r3, #0
   1862c:	andne	r3, r3, #1
   18630:	cmp	r3, #0
   18634:	bne	1865c <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0xb0>
   18638:	cmp	lr, r5
   1863c:	add	r1, r6, lr
   18640:	bne	18608 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0x5c>
   18644:	mov	r0, r1
   18648:	add	sp, sp, #36	; 0x24
   1864c:	ldrd	r4, [sp]
   18650:	ldrd	r6, [sp, #8]
   18654:	add	sp, sp, #16
   18658:	pop	{pc}		; (ldr pc, [sp], #4)
   1865c:	cmp	ip, #62	; 0x3e
   18660:	beq	186b4 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0x108>
   18664:	mov	r3, #0
   18668:	mov	r6, r0
   1866c:	mov	r4, r2
   18670:	add	r7, sp, #12
   18674:	add	r5, sp, #11
   18678:	strb	r3, [sp, #11]
   1867c:	mov	r3, r7
   18680:	mov	r2, r4
   18684:	str	r5, [sp]
   18688:	mov	r0, r6
   1868c:	bl	10c88 <myencoding_prescan_stream_to_determine_encoding_get_attr@plt>
   18690:	ldrb	r3, [sp, #11]
   18694:	mov	r1, r0
   18698:	eor	r3, r3, #1
   1869c:	cmp	r4, r0
   186a0:	movls	r3, #0
   186a4:	andhi	r3, r3, #1
   186a8:	cmp	r3, #0
   186ac:	bne	1867c <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0xd0>
   186b0:	b	18644 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0x98>
   186b4:	add	r1, r1, #1
   186b8:	b	18644 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0x98>
   186bc:	mov	r0, r1
   186c0:	bx	lr

000186c4 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base>:
   186c4:	strd	r4, [sp, #-12]!
   186c8:	mov	ip, r0
   186cc:	add	r4, r0, r1
   186d0:	str	lr, [sp, #8]
   186d4:	mov	r3, r2
   186d8:	mov	lr, r1
   186dc:	ldrb	r5, [r0, r1]
   186e0:	cmp	r5, #47	; 0x2f
   186e4:	beq	187b0 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0xec>
   186e8:	cmp	r5, #33	; 0x21
   186ec:	beq	1875c <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x98>
   186f0:	cmp	r5, #63	; 0x3f
   186f4:	bne	18804 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x140>
   186f8:	add	r1, r1, #1
   186fc:	cmp	r2, r1
   18700:	bls	18724 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x60>
   18704:	ldrb	r0, [r0, r1]
   18708:	add	r2, ip, r1
   1870c:	cmp	r0, #62	; 0x3e
   18710:	subeq	r3, r3, #1
   18714:	addeq	r3, ip, r3
   18718:	rsbeq	ip, ip, #1
   1871c:	beq	18740 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x7c>
   18720:	add	r1, r1, #1
   18724:	ldrd	r4, [sp]
   18728:	add	sp, sp, #8
   1872c:	mov	r0, r1
   18730:	pop	{pc}		; (ldr pc, [sp], #4)
   18734:	ldrb	r0, [r2, #1]!
   18738:	cmp	r0, #62	; 0x3e
   1873c:	bne	18720 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x5c>
   18740:	cmp	r2, r3
   18744:	add	r1, ip, r2
   18748:	bne	18734 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x70>
   1874c:	ldrd	r4, [sp]
   18750:	add	sp, sp, #8
   18754:	mov	r0, r1
   18758:	pop	{pc}		; (ldr pc, [sp], #4)
   1875c:	add	r2, r1, #3
   18760:	add	r1, r1, #1
   18764:	cmp	r2, r3
   18768:	bcc	18814 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x150>
   1876c:	cmp	r3, r1
   18770:	bls	18724 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x60>
   18774:	ldrb	r0, [ip, r1]
   18778:	add	r2, ip, r1
   1877c:	cmp	r0, #62	; 0x3e
   18780:	subeq	r3, r3, #1
   18784:	addeq	r3, ip, r3
   18788:	rsbeq	ip, ip, #1
   1878c:	beq	187a0 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0xdc>
   18790:	b	18884 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x1c0>
   18794:	ldrb	r0, [r2, #1]!
   18798:	cmp	r0, #62	; 0x3e
   1879c:	bne	18720 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x5c>
   187a0:	cmp	r2, r3
   187a4:	add	r1, ip, r2
   187a8:	bne	18794 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0xd0>
   187ac:	b	18724 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x60>
   187b0:	add	r1, r1, #1
   187b4:	cmp	r1, r2
   187b8:	bcs	18724 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x60>
   187bc:	ldr	ip, [pc, #200]	; 1888c <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x1c8>
   187c0:	ldrb	lr, [r0, r1]
   187c4:	add	ip, pc, ip
   187c8:	add	ip, ip, lr
   187cc:	ldrb	ip, [ip, #256]	; 0x100
   187d0:	cmp	ip, #1
   187d4:	movne	r2, r4
   187d8:	beq	18804 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x140>
   187dc:	ldrb	r0, [r2, #1]!
   187e0:	add	r1, r1, #1
   187e4:	cmp	r0, #62	; 0x3e
   187e8:	bne	18724 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x60>
   187ec:	cmp	r3, r1
   187f0:	bhi	187dc <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x118>
   187f4:	ldrd	r4, [sp]
   187f8:	add	sp, sp, #8
   187fc:	mov	r0, r1
   18800:	pop	{pc}		; (ldr pc, [sp], #4)
   18804:	ldrd	r4, [sp]
   18808:	ldr	lr, [sp, #8]
   1880c:	add	sp, sp, #12
   18810:	b	10028 <myencoding_prescan_stream_to_determine_encoding_skip_name@plt>
   18814:	ldrb	r2, [r0, r1]
   18818:	cmp	r2, #45	; 0x2d
   1881c:	bne	1876c <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0xa8>
   18820:	add	lr, lr, #2
   18824:	ldrb	r2, [r0, lr]
   18828:	cmp	r2, #45	; 0x2d
   1882c:	beq	1883c <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x178>
   18830:	cmp	r3, r1
   18834:	movhi	r1, lr
   18838:	b	18724 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x60>
   1883c:	cmp	r3, r1
   18840:	bls	18724 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x60>
   18844:	mov	r2, r4
   18848:	b	1885c <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x198>
   1884c:	add	r1, r1, #1
   18850:	add	r2, r2, #1
   18854:	cmp	r3, r1
   18858:	bls	18724 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x60>
   1885c:	ldrb	r0, [r2, #1]
   18860:	cmp	r0, #62	; 0x3e
   18864:	beq	1884c <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x188>
   18868:	ldrb	r0, [r2]
   1886c:	cmp	r0, #45	; 0x2d
   18870:	bne	1884c <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x188>
   18874:	ldrb	r0, [r2, #-1]
   18878:	cmp	r0, #45	; 0x2d
   1887c:	bne	1884c <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x188>
   18880:	b	18720 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x5c>
   18884:	add	r1, lr, #2
   18888:	b	18724 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x60>
   1888c:	andeq	r8, r1, r4, lsl sp

00018890 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base>:
   18890:	strd	r4, [sp, #-32]!	; 0xffffffe0
   18894:	mov	ip, #2
   18898:	strd	r6, [sp, #8]
   1889c:	subs	r7, r2, #0
   188a0:	movne	r2, #0
   188a4:	strd	r8, [sp, #16]
   188a8:	str	sl, [sp, #24]
   188ac:	str	lr, [sp, #28]
   188b0:	sub	sp, sp, #16
   188b4:	strne	r2, [r7]
   188b8:	cmp	r3, #0
   188bc:	movne	r2, #0
   188c0:	str	ip, [sp, #8]
   188c4:	strne	r2, [r3]
   188c8:	cmp	r1, #0
   188cc:	mov	r2, #0
   188d0:	beq	18954 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0xc4>
   188d4:	ldr	r8, [pc, #284]	; 189f8 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x168>
   188d8:	mov	r4, r0
   188dc:	mov	r6, r3
   188e0:	mov	r5, r1
   188e4:	mov	r0, r2
   188e8:	add	sl, sp, #8
   188ec:	add	r9, sp, #12
   188f0:	add	r8, pc, r8
   188f4:	b	18900 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x70>
   188f8:	cmp	r5, r0
   188fc:	bls	18954 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0xc4>
   18900:	ldrb	r3, [r4, r0]
   18904:	cmp	r3, #60	; 0x3c
   18908:	addne	r0, r0, #1
   1890c:	bne	188f8 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x68>
   18910:	add	r3, r0, #5
   18914:	cmp	r3, r5
   18918:	bcs	18954 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0xc4>
   1891c:	add	r0, r0, #1
   18920:	ldrb	r3, [r4, r0]
   18924:	add	r1, r4, r0
   18928:	str	r0, [sp, #12]
   1892c:	cmp	r3, #77	; 0x4d
   18930:	beq	18974 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0xe4>
   18934:	cmp	r3, #109	; 0x6d
   18938:	beq	18974 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0xe4>
   1893c:	mov	r1, r0
   18940:	mov	r2, r5
   18944:	mov	r0, r4
   18948:	bl	102e0 <myencoding_prescan_stream_to_determine_encoding_skip_other@plt>
   1894c:	cmp	r5, r0
   18950:	bhi	18900 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x70>
   18954:	ldr	r0, [sp, #8]
   18958:	add	sp, sp, #16
   1895c:	ldrd	r4, [sp]
   18960:	ldrd	r6, [sp, #8]
   18964:	ldrd	r8, [sp, #16]
   18968:	ldr	sl, [sp, #24]
   1896c:	add	sp, sp, #28
   18970:	pop	{pc}		; (ldr pc, [sp], #4)
   18974:	mov	r0, r8
   18978:	bl	fc74 <mycore_ustrcasecmp_without_checks_by_secondary@plt>
   1897c:	cmp	r0, #0
   18980:	beq	189f0 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x160>
   18984:	ldr	r1, [sp, #12]
   18988:	add	r0, r1, #4
   1898c:	ldrb	r3, [r4, r0]
   18990:	cmp	r3, #32
   18994:	cmpne	r3, #47	; 0x2f
   18998:	sub	ip, r3, #9
   1899c:	moveq	r2, #1
   189a0:	movne	r2, #0
   189a4:	cmp	ip, #1
   189a8:	orrls	r2, r2, #1
   189ac:	sub	r3, r3, #12
   189b0:	cmp	r3, #1
   189b4:	movhi	r3, r2
   189b8:	orrls	r3, r2, #1
   189bc:	cmp	r3, #0
   189c0:	beq	188f8 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x68>
   189c4:	add	ip, r1, #5
   189c8:	mov	r3, sl
   189cc:	str	r7, [sp]
   189d0:	mov	r2, r5
   189d4:	mov	r1, r9
   189d8:	str	r6, [sp, #4]
   189dc:	mov	r0, r4
   189e0:	str	ip, [sp, #12]
   189e4:	bl	1037c <myencoding_prescan_stream_to_determine_encoding_check_meta@plt>
   189e8:	cmp	r0, #0
   189ec:	bne	18954 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0xc4>
   189f0:	ldr	r0, [sp, #12]
   189f4:	b	188f8 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x68>
   189f8:	andeq	r2, r2, r4, asr #22

000189fc <myencoding_prescan_stream_to_determine_encoding@@Base>:
   189fc:	mov	r3, #0
   18a00:	mov	r2, r3
   18a04:	b	10b20 <myencoding_prescan_stream_to_determine_encoding_with_found@plt>

00018a08 <myencoding_decode_ibm866@@Base>:
   18a08:	tst	r0, #128	; 0x80
   18a0c:	moveq	r3, r0
   18a10:	beq	18a24 <myencoding_decode_ibm866@@Base+0x1c>
   18a14:	ldr	r3, [pc, #20]	; 18a30 <myencoding_decode_ibm866@@Base+0x28>
   18a18:	sub	r0, r0, #128	; 0x80
   18a1c:	add	r3, pc, r3
   18a20:	ldr	r3, [r3, r0, lsl #2]
   18a24:	mov	r0, #0
   18a28:	str	r3, [r1, #12]
   18a2c:	bx	lr
   18a30:	andeq	r3, r2, ip, ror r5

00018a34 <myencoding_decode_iso_8859_2@@Base>:
   18a34:	tst	r0, #128	; 0x80
   18a38:	moveq	r3, r0
   18a3c:	beq	18a4c <myencoding_decode_iso_8859_2@@Base+0x18>
   18a40:	ldr	r3, [pc, #16]	; 18a58 <myencoding_decode_iso_8859_2@@Base+0x24>
   18a44:	add	r3, pc, r3
   18a48:	ldr	r3, [r3, r0, lsl #2]
   18a4c:	mov	r0, #0
   18a50:	str	r3, [r1, #12]
   18a54:	bx	lr
   18a58:	andeq	r3, r2, r4, asr r5

00018a5c <myencoding_decode_iso_8859_3@@Base>:
   18a5c:	tst	r0, #128	; 0x80
   18a60:	moveq	r3, r0
   18a64:	beq	18a78 <myencoding_decode_iso_8859_3@@Base+0x1c>
   18a68:	ldr	r3, [pc, #20]	; 18a84 <myencoding_decode_iso_8859_3@@Base+0x28>
   18a6c:	add	r3, pc, r3
   18a70:	add	r0, r3, r0, lsl #2
   18a74:	ldr	r3, [r0, #512]	; 0x200
   18a78:	mov	r0, #0
   18a7c:	str	r3, [r1, #12]
   18a80:	bx	lr
   18a84:	andeq	r3, r2, ip, lsr #10

00018a88 <myencoding_decode_iso_8859_4@@Base>:
   18a88:	tst	r0, #128	; 0x80
   18a8c:	moveq	r3, r0
   18a90:	beq	18aa4 <myencoding_decode_iso_8859_4@@Base+0x1c>
   18a94:	ldr	r3, [pc, #20]	; 18ab0 <myencoding_decode_iso_8859_4@@Base+0x28>
   18a98:	add	r3, pc, r3
   18a9c:	add	r0, r3, r0, lsl #2
   18aa0:	ldr	r3, [r0, #1024]	; 0x400
   18aa4:	mov	r0, #0
   18aa8:	str	r3, [r1, #12]
   18aac:	bx	lr
   18ab0:	andeq	r3, r2, r0, lsl #10

00018ab4 <myencoding_decode_iso_8859_5@@Base>:
   18ab4:	tst	r0, #128	; 0x80
   18ab8:	moveq	r3, r0
   18abc:	beq	18ad0 <myencoding_decode_iso_8859_5@@Base+0x1c>
   18ac0:	ldr	r3, [pc, #20]	; 18adc <myencoding_decode_iso_8859_5@@Base+0x28>
   18ac4:	add	r3, pc, r3
   18ac8:	add	r0, r3, r0, lsl #2
   18acc:	ldr	r3, [r0, #1536]	; 0x600
   18ad0:	mov	r0, #0
   18ad4:	str	r3, [r1, #12]
   18ad8:	bx	lr
   18adc:	ldrdeq	r3, [r2], -r4

00018ae0 <myencoding_decode_iso_8859_6@@Base>:
   18ae0:	tst	r0, #128	; 0x80
   18ae4:	moveq	r3, r0
   18ae8:	beq	18afc <myencoding_decode_iso_8859_6@@Base+0x1c>
   18aec:	ldr	r3, [pc, #20]	; 18b08 <myencoding_decode_iso_8859_6@@Base+0x28>
   18af0:	add	r3, pc, r3
   18af4:	add	r0, r3, r0, lsl #2
   18af8:	ldr	r3, [r0, #2048]	; 0x800
   18afc:	mov	r0, #0
   18b00:	str	r3, [r1, #12]
   18b04:	bx	lr
   18b08:	andeq	r3, r2, r8, lsr #9

00018b0c <myencoding_decode_iso_8859_7@@Base>:
   18b0c:	tst	r0, #128	; 0x80
   18b10:	moveq	r3, r0
   18b14:	beq	18b28 <myencoding_decode_iso_8859_7@@Base+0x1c>
   18b18:	ldr	r3, [pc, #20]	; 18b34 <myencoding_decode_iso_8859_7@@Base+0x28>
   18b1c:	add	r3, pc, r3
   18b20:	add	r0, r3, r0, lsl #2
   18b24:	ldr	r3, [r0, #2560]	; 0xa00
   18b28:	mov	r0, #0
   18b2c:	str	r3, [r1, #12]
   18b30:	bx	lr
   18b34:	andeq	r3, r2, ip, ror r4

00018b38 <myencoding_decode_iso_8859_8@@Base>:
   18b38:	tst	r0, #128	; 0x80
   18b3c:	moveq	r3, r0
   18b40:	beq	18b54 <myencoding_decode_iso_8859_8@@Base+0x1c>
   18b44:	ldr	r3, [pc, #20]	; 18b60 <myencoding_decode_iso_8859_8@@Base+0x28>
   18b48:	add	r3, pc, r3
   18b4c:	add	r0, r3, r0, lsl #2
   18b50:	ldr	r3, [r0, #3072]	; 0xc00
   18b54:	mov	r0, #0
   18b58:	str	r3, [r1, #12]
   18b5c:	bx	lr
   18b60:	andeq	r3, r2, r0, asr r4

00018b64 <myencoding_decode_iso_8859_10@@Base>:
   18b64:	tst	r0, #128	; 0x80
   18b68:	moveq	r3, r0
   18b6c:	beq	18b84 <myencoding_decode_iso_8859_10@@Base+0x20>
   18b70:	ldr	r3, [pc, #24]	; 18b90 <myencoding_decode_iso_8859_10@@Base+0x2c>
   18b74:	sub	r0, r0, #128	; 0x80
   18b78:	add	r3, pc, r3
   18b7c:	add	r0, r3, r0, lsl #2
   18b80:	ldr	r3, [r0, #-4088]	; 0xfffff008
   18b84:	mov	r0, #0
   18b88:	str	r3, [r1, #12]
   18b8c:	bx	lr
   18b90:	andeq	r5, r2, r8, lsl r4

00018b94 <myencoding_decode_iso_8859_13@@Base>:
   18b94:	tst	r0, #128	; 0x80
   18b98:	moveq	r3, r0
   18b9c:	beq	18bb0 <myencoding_decode_iso_8859_13@@Base+0x1c>
   18ba0:	ldr	r3, [pc, #20]	; 18bbc <myencoding_decode_iso_8859_13@@Base+0x28>
   18ba4:	add	r3, pc, r3
   18ba8:	add	r0, r3, r0, lsl #2
   18bac:	ldr	r3, [r0, #-4088]	; 0xfffff008
   18bb0:	mov	r0, #0
   18bb4:	str	r3, [r1, #12]
   18bb8:	bx	lr
   18bbc:	andeq	r5, r2, ip, ror #7

00018bc0 <myencoding_decode_iso_8859_14@@Base>:
   18bc0:	tst	r0, #128	; 0x80
   18bc4:	moveq	r3, r0
   18bc8:	beq	18bdc <myencoding_decode_iso_8859_14@@Base+0x1c>
   18bcc:	ldr	r3, [pc, #20]	; 18be8 <myencoding_decode_iso_8859_14@@Base+0x28>
   18bd0:	add	r3, pc, r3
   18bd4:	add	r0, r3, r0, lsl #2
   18bd8:	ldr	r3, [r0, #-3576]	; 0xfffff208
   18bdc:	mov	r0, #0
   18be0:	str	r3, [r1, #12]
   18be4:	bx	lr
   18be8:	andeq	r5, r2, r0, asr #7

00018bec <myencoding_decode_iso_8859_15@@Base>:
   18bec:	tst	r0, #128	; 0x80
   18bf0:	moveq	r3, r0
   18bf4:	beq	18c08 <myencoding_decode_iso_8859_15@@Base+0x1c>
   18bf8:	ldr	r3, [pc, #20]	; 18c14 <myencoding_decode_iso_8859_15@@Base+0x28>
   18bfc:	add	r3, pc, r3
   18c00:	add	r0, r3, r0, lsl #2
   18c04:	ldr	r3, [r0, #-3064]	; 0xfffff408
   18c08:	mov	r0, #0
   18c0c:	str	r3, [r1, #12]
   18c10:	bx	lr
   18c14:	muleq	r2, r4, r3

00018c18 <myencoding_decode_iso_8859_16@@Base>:
   18c18:	tst	r0, #128	; 0x80
   18c1c:	moveq	r3, r0
   18c20:	beq	18c34 <myencoding_decode_iso_8859_16@@Base+0x1c>
   18c24:	ldr	r3, [pc, #20]	; 18c40 <myencoding_decode_iso_8859_16@@Base+0x28>
   18c28:	add	r3, pc, r3
   18c2c:	add	r0, r3, r0, lsl #2
   18c30:	ldr	r3, [r0, #-2552]	; 0xfffff608
   18c34:	mov	r0, #0
   18c38:	str	r3, [r1, #12]
   18c3c:	bx	lr
   18c40:	andeq	r5, r2, r8, ror #6

00018c44 <myencoding_decode_koi8_r@@Base>:
   18c44:	tst	r0, #128	; 0x80
   18c48:	moveq	r3, r0
   18c4c:	beq	18c60 <myencoding_decode_koi8_r@@Base+0x1c>
   18c50:	ldr	r3, [pc, #20]	; 18c6c <myencoding_decode_koi8_r@@Base+0x28>
   18c54:	add	r3, pc, r3
   18c58:	add	r0, r3, r0, lsl #2
   18c5c:	ldr	r3, [r0, #-2040]	; 0xfffff808
   18c60:	mov	r0, #0
   18c64:	str	r3, [r1, #12]
   18c68:	bx	lr
   18c6c:	andeq	r5, r2, ip, lsr r3

00018c70 <myencoding_decode_koi8_u@@Base>:
   18c70:	tst	r0, #128	; 0x80
   18c74:	moveq	r3, r0
   18c78:	beq	18c8c <myencoding_decode_koi8_u@@Base+0x1c>
   18c7c:	ldr	r3, [pc, #20]	; 18c98 <myencoding_decode_koi8_u@@Base+0x28>
   18c80:	add	r3, pc, r3
   18c84:	add	r0, r3, r0, lsl #2
   18c88:	ldr	r3, [r0, #-1528]	; 0xfffffa08
   18c8c:	mov	r0, #0
   18c90:	str	r3, [r1, #12]
   18c94:	bx	lr
   18c98:	andeq	r5, r2, r0, lsl r3

00018c9c <myencoding_decode_macintosh@@Base>:
   18c9c:	tst	r0, #128	; 0x80
   18ca0:	moveq	r3, r0
   18ca4:	beq	18cb8 <myencoding_decode_macintosh@@Base+0x1c>
   18ca8:	ldr	r3, [pc, #20]	; 18cc4 <myencoding_decode_macintosh@@Base+0x28>
   18cac:	add	r3, pc, r3
   18cb0:	add	r0, r3, r0, lsl #2
   18cb4:	ldr	r3, [r0, #-1016]	; 0xfffffc08
   18cb8:	mov	r0, #0
   18cbc:	str	r3, [r1, #12]
   18cc0:	bx	lr
   18cc4:	andeq	r5, r2, r4, ror #5

00018cc8 <myencoding_decode_windows_874@@Base>:
   18cc8:	tst	r0, #128	; 0x80
   18ccc:	moveq	r3, r0
   18cd0:	beq	18ce4 <myencoding_decode_windows_874@@Base+0x1c>
   18cd4:	ldr	r3, [pc, #20]	; 18cf0 <myencoding_decode_windows_874@@Base+0x28>
   18cd8:	add	r3, pc, r3
   18cdc:	add	r0, r3, r0, lsl #2
   18ce0:	ldr	r3, [r0, #-504]	; 0xfffffe08
   18ce4:	mov	r0, #0
   18ce8:	str	r3, [r1, #12]
   18cec:	bx	lr
   18cf0:			; <UNDEFINED> instruction: 0x000252b8

00018cf4 <myencoding_decode_windows_1250@@Base>:
   18cf4:	tst	r0, #128	; 0x80
   18cf8:	moveq	r3, r0
   18cfc:	beq	18d10 <myencoding_decode_windows_1250@@Base+0x1c>
   18d00:	ldr	r3, [pc, #20]	; 18d1c <myencoding_decode_windows_1250@@Base+0x28>
   18d04:	add	r3, pc, r3
   18d08:	add	r0, r3, r0, lsl #2
   18d0c:	ldr	r3, [r0, #8]
   18d10:	mov	r0, #0
   18d14:	str	r3, [r1, #12]
   18d18:	bx	lr
   18d1c:	andeq	r5, r2, ip, lsl #5

00018d20 <myencoding_decode_windows_1251@@Base>:
   18d20:	tst	r0, #128	; 0x80
   18d24:	moveq	r3, r0
   18d28:	beq	18d3c <myencoding_decode_windows_1251@@Base+0x1c>
   18d2c:	ldr	r3, [pc, #20]	; 18d48 <myencoding_decode_windows_1251@@Base+0x28>
   18d30:	add	r3, pc, r3
   18d34:	add	r0, r3, r0, lsl #2
   18d38:	ldr	r3, [r0, #520]	; 0x208
   18d3c:	mov	r0, #0
   18d40:	str	r3, [r1, #12]
   18d44:	bx	lr
   18d48:	andeq	r5, r2, r0, ror #4

00018d4c <myencoding_decode_windows_1252@@Base>:
   18d4c:	tst	r0, #128	; 0x80
   18d50:	moveq	r3, r0
   18d54:	beq	18d68 <myencoding_decode_windows_1252@@Base+0x1c>
   18d58:	ldr	r3, [pc, #20]	; 18d74 <myencoding_decode_windows_1252@@Base+0x28>
   18d5c:	add	r3, pc, r3
   18d60:	add	r0, r3, r0, lsl #2
   18d64:	ldr	r3, [r0, #1032]	; 0x408
   18d68:	mov	r0, #0
   18d6c:	str	r3, [r1, #12]
   18d70:	bx	lr
   18d74:	andeq	r5, r2, r4, lsr r2

00018d78 <myencoding_decode_windows_1253@@Base>:
   18d78:	tst	r0, #128	; 0x80
   18d7c:	moveq	r3, r0
   18d80:	beq	18d94 <myencoding_decode_windows_1253@@Base+0x1c>
   18d84:	ldr	r3, [pc, #20]	; 18da0 <myencoding_decode_windows_1253@@Base+0x28>
   18d88:	add	r3, pc, r3
   18d8c:	add	r0, r3, r0, lsl #2
   18d90:	ldr	r3, [r0, #1544]	; 0x608
   18d94:	mov	r0, #0
   18d98:	str	r3, [r1, #12]
   18d9c:	bx	lr
   18da0:	andeq	r5, r2, r8, lsl #4

00018da4 <myencoding_decode_windows_1254@@Base>:
   18da4:	tst	r0, #128	; 0x80
   18da8:	moveq	r3, r0
   18dac:	beq	18dc0 <myencoding_decode_windows_1254@@Base+0x1c>
   18db0:	ldr	r3, [pc, #20]	; 18dcc <myencoding_decode_windows_1254@@Base+0x28>
   18db4:	add	r3, pc, r3
   18db8:	add	r0, r3, r0, lsl #2
   18dbc:	ldr	r3, [r0, #2056]	; 0x808
   18dc0:	mov	r0, #0
   18dc4:	str	r3, [r1, #12]
   18dc8:	bx	lr
   18dcc:	ldrdeq	r5, [r2], -ip

00018dd0 <myencoding_decode_windows_1255@@Base>:
   18dd0:	tst	r0, #128	; 0x80
   18dd4:	moveq	r3, r0
   18dd8:	beq	18dec <myencoding_decode_windows_1255@@Base+0x1c>
   18ddc:	ldr	r3, [pc, #20]	; 18df8 <myencoding_decode_windows_1255@@Base+0x28>
   18de0:	add	r3, pc, r3
   18de4:	add	r0, r3, r0, lsl #2
   18de8:	ldr	r3, [r0, #2568]	; 0xa08
   18dec:	mov	r0, #0
   18df0:	str	r3, [r1, #12]
   18df4:	bx	lr
   18df8:			; <UNDEFINED> instruction: 0x000251b0

00018dfc <myencoding_decode_windows_1256@@Base>:
   18dfc:	tst	r0, #128	; 0x80
   18e00:	moveq	r3, r0
   18e04:	beq	18e18 <myencoding_decode_windows_1256@@Base+0x1c>
   18e08:	ldr	r3, [pc, #20]	; 18e24 <myencoding_decode_windows_1256@@Base+0x28>
   18e0c:	add	r3, pc, r3
   18e10:	add	r0, r3, r0, lsl #2
   18e14:	ldr	r3, [r0, #3080]	; 0xc08
   18e18:	mov	r0, #0
   18e1c:	str	r3, [r1, #12]
   18e20:	bx	lr
   18e24:	andeq	r5, r2, r4, lsl #3

00018e28 <myencoding_decode_windows_1257@@Base>:
   18e28:	tst	r0, #128	; 0x80
   18e2c:	moveq	r3, r0
   18e30:	beq	18e48 <myencoding_decode_windows_1257@@Base+0x20>
   18e34:	ldr	r3, [pc, #24]	; 18e54 <myencoding_decode_windows_1257@@Base+0x2c>
   18e38:	sub	r0, r0, #128	; 0x80
   18e3c:	add	r3, pc, r3
   18e40:	add	r0, r3, r0, lsl #2
   18e44:	ldr	r3, [r0, #-4080]	; 0xfffff010
   18e48:	mov	r0, #0
   18e4c:	str	r3, [r1, #12]
   18e50:	bx	lr
   18e54:	andeq	r7, r2, ip, asr #2

00018e58 <myencoding_decode_windows_1258@@Base>:
   18e58:	tst	r0, #128	; 0x80
   18e5c:	moveq	r3, r0
   18e60:	beq	18e74 <myencoding_decode_windows_1258@@Base+0x1c>
   18e64:	ldr	r3, [pc, #20]	; 18e80 <myencoding_decode_windows_1258@@Base+0x28>
   18e68:	add	r3, pc, r3
   18e6c:	add	r0, r3, r0, lsl #2
   18e70:	ldr	r3, [r0, #-4080]	; 0xfffff010
   18e74:	mov	r0, #0
   18e78:	str	r3, [r1, #12]
   18e7c:	bx	lr
   18e80:	andeq	r7, r2, r0, lsr #2

00018e84 <myencoding_decode_x_mac_cyrillic@@Base>:
   18e84:	tst	r0, #128	; 0x80
   18e88:	moveq	r3, r0
   18e8c:	beq	18ea0 <myencoding_decode_x_mac_cyrillic@@Base+0x1c>
   18e90:	ldr	r3, [pc, #20]	; 18eac <myencoding_decode_x_mac_cyrillic@@Base+0x28>
   18e94:	add	r3, pc, r3
   18e98:	add	r0, r3, r0, lsl #2
   18e9c:	ldr	r3, [r0, #-3568]	; 0xfffff210
   18ea0:	mov	r0, #0
   18ea4:	str	r3, [r1, #12]
   18ea8:	bx	lr
   18eac:	strdeq	r7, [r2], -r4

00018eb0 <myencoding_decode_big5@@Base>:
   18eb0:	mov	r3, r0
   18eb4:	ldr	r0, [r1]
   18eb8:	cmp	r0, #0
   18ebc:	beq	18fb4 <myencoding_decode_big5@@Base+0x104>
   18ec0:	add	r2, r3, #95	; 0x5f
   18ec4:	cmp	r3, #127	; 0x7f
   18ec8:	str	r4, [sp, #-8]!
   18ecc:	uxtb	r2, r2
   18ed0:	sub	ip, r3, #64	; 0x40
   18ed4:	str	lr, [sp, #4]
   18ed8:	mov	lr, #0
   18edc:	movcc	r4, #64	; 0x40
   18ee0:	movcs	r4, #98	; 0x62
   18ee4:	cmp	r2, #93	; 0x5d
   18ee8:	cmphi	ip, #62	; 0x3e
   18eec:	str	lr, [r1]
   18ef0:	bls	18f04 <myencoding_decode_big5@@Base+0x54>
   18ef4:	mov	r0, #1
   18ef8:	ldr	r4, [sp]
   18efc:	add	sp, sp, #4
   18f00:	pop	{pc}		; (ldr pc, [sp], #4)
   18f04:	sub	r3, r3, #20224	; 0x4f00
   18f08:	mov	r2, #157	; 0x9d
   18f0c:	sub	r3, r3, #29
   18f10:	mla	r3, r2, r0, r3
   18f14:	sub	r3, r3, r4
   18f18:	sub	r2, r3, #1120	; 0x460
   18f1c:	sub	r2, r2, #13
   18f20:	cmp	r2, #33	; 0x21
   18f24:	addls	pc, pc, r2, lsl #2
   18f28:	b	1902c <myencoding_decode_big5@@Base+0x17c>
   18f2c:	b	19018 <myencoding_decode_big5@@Base+0x168>
   18f30:	b	1902c <myencoding_decode_big5@@Base+0x17c>
   18f34:	b	19004 <myencoding_decode_big5@@Base+0x154>
   18f38:	b	1902c <myencoding_decode_big5@@Base+0x17c>
   18f3c:	b	1902c <myencoding_decode_big5@@Base+0x17c>
   18f40:	b	1902c <myencoding_decode_big5@@Base+0x17c>
   18f44:	b	1902c <myencoding_decode_big5@@Base+0x17c>
   18f48:	b	1902c <myencoding_decode_big5@@Base+0x17c>
   18f4c:	b	1902c <myencoding_decode_big5@@Base+0x17c>
   18f50:	b	1902c <myencoding_decode_big5@@Base+0x17c>
   18f54:	b	1902c <myencoding_decode_big5@@Base+0x17c>
   18f58:	b	1902c <myencoding_decode_big5@@Base+0x17c>
   18f5c:	b	1902c <myencoding_decode_big5@@Base+0x17c>
   18f60:	b	1902c <myencoding_decode_big5@@Base+0x17c>
   18f64:	b	1902c <myencoding_decode_big5@@Base+0x17c>
   18f68:	b	1902c <myencoding_decode_big5@@Base+0x17c>
   18f6c:	b	1902c <myencoding_decode_big5@@Base+0x17c>
   18f70:	b	1902c <myencoding_decode_big5@@Base+0x17c>
   18f74:	b	1902c <myencoding_decode_big5@@Base+0x17c>
   18f78:	b	1902c <myencoding_decode_big5@@Base+0x17c>
   18f7c:	b	1902c <myencoding_decode_big5@@Base+0x17c>
   18f80:	b	1902c <myencoding_decode_big5@@Base+0x17c>
   18f84:	b	1902c <myencoding_decode_big5@@Base+0x17c>
   18f88:	b	1902c <myencoding_decode_big5@@Base+0x17c>
   18f8c:	b	1902c <myencoding_decode_big5@@Base+0x17c>
   18f90:	b	1902c <myencoding_decode_big5@@Base+0x17c>
   18f94:	b	1902c <myencoding_decode_big5@@Base+0x17c>
   18f98:	b	1902c <myencoding_decode_big5@@Base+0x17c>
   18f9c:	b	1902c <myencoding_decode_big5@@Base+0x17c>
   18fa0:	b	1902c <myencoding_decode_big5@@Base+0x17c>
   18fa4:	b	1902c <myencoding_decode_big5@@Base+0x17c>
   18fa8:	b	18ff0 <myencoding_decode_big5@@Base+0x140>
   18fac:	b	1902c <myencoding_decode_big5@@Base+0x17c>
   18fb0:	b	18fdc <myencoding_decode_big5@@Base+0x12c>
   18fb4:	tst	r3, #128	; 0x80
   18fb8:	beq	18fd4 <myencoding_decode_big5@@Base+0x124>
   18fbc:	add	r2, r3, #127	; 0x7f
   18fc0:	uxtb	r2, r2
   18fc4:	cmp	r2, #125	; 0x7d
   18fc8:	bls	1905c <myencoding_decode_big5@@Base+0x1ac>
   18fcc:	mov	r0, #1
   18fd0:	bx	lr
   18fd4:	str	r3, [r1, #12]
   18fd8:	bx	lr
   18fdc:	mov	r2, #234	; 0xea
   18fe0:	mov	r3, #780	; 0x30c
   18fe4:	mov	r0, #0
   18fe8:	strd	r2, [r1, #12]
   18fec:	b	18ef8 <myencoding_decode_big5@@Base+0x48>
   18ff0:	mov	r2, #234	; 0xea
   18ff4:	mov	r3, #772	; 0x304
   18ff8:	mov	r0, #0
   18ffc:	strd	r2, [r1, #12]
   19000:	b	18ef8 <myencoding_decode_big5@@Base+0x48>
   19004:	mov	r2, #202	; 0xca
   19008:	mov	r3, #780	; 0x30c
   1900c:	mov	r0, #0
   19010:	strd	r2, [r1, #12]
   19014:	b	18ef8 <myencoding_decode_big5@@Base+0x48>
   19018:	mov	r2, #202	; 0xca
   1901c:	mov	r3, #772	; 0x304
   19020:	mov	r0, #0
   19024:	strd	r2, [r1, #12]
   19028:	b	18ef8 <myencoding_decode_big5@@Base+0x48>
   1902c:	cmp	r3, #0
   19030:	beq	18ef4 <myencoding_decode_big5@@Base+0x44>
   19034:	ldr	r2, [pc, #44]	; 19068 <myencoding_decode_big5@@Base+0x1b8>
   19038:	mov	ip, #0
   1903c:	mov	r0, ip
   19040:	ldr	r4, [sp]
   19044:	add	sp, sp, #4
   19048:	str	ip, [r1, #16]
   1904c:	add	r2, pc, r2
   19050:	ldr	r3, [r2, r3, lsl #2]
   19054:	str	r3, [r1, #12]
   19058:	pop	{pc}		; (ldr pc, [sp], #4)
   1905c:	mov	r0, #2
   19060:	str	r3, [r1]
   19064:	bx	lr
   19068:	andeq	r9, r6, r4, lsr r3

0001906c <myencoding_decode_euc_jp@@Base>:
   1906c:	ldr	r2, [r1]
   19070:	mov	r3, r0
   19074:	cmp	r2, #142	; 0x8e
   19078:	beq	190e8 <myencoding_decode_euc_jp@@Base+0x7c>
   1907c:	cmp	r2, #143	; 0x8f
   19080:	beq	190bc <myencoding_decode_euc_jp@@Base+0x50>
   19084:	cmp	r2, #0
   19088:	bne	19114 <myencoding_decode_euc_jp@@Base+0xa8>
   1908c:	tst	r3, #128	; 0x80
   19090:	beq	190dc <myencoding_decode_euc_jp@@Base+0x70>
   19094:	add	r0, r3, #114	; 0x72
   19098:	add	r2, r3, #95	; 0x5f
   1909c:	uxtb	r0, r0
   190a0:	uxtb	r2, r2
   190a4:	cmp	r2, #93	; 0x5d
   190a8:	cmphi	r0, #1
   190ac:	movls	r0, #2
   190b0:	movhi	r0, #1
   190b4:	strls	r3, [r1]
   190b8:	bx	lr
   190bc:	add	r2, r0, #95	; 0x5f
   190c0:	uxtb	r2, r2
   190c4:	cmp	r2, #93	; 0x5d
   190c8:	bls	19178 <myencoding_decode_euc_jp@@Base+0x10c>
   190cc:	mov	r2, #0
   190d0:	tst	r3, #128	; 0x80
   190d4:	str	r2, [r1]
   190d8:	bne	19094 <myencoding_decode_euc_jp@@Base+0x28>
   190dc:	mov	r0, #0
   190e0:	str	r3, [r1, #12]
   190e4:	bx	lr
   190e8:	add	r2, r0, #95	; 0x5f
   190ec:	uxtb	r2, r2
   190f0:	cmp	r2, #62	; 0x3e
   190f4:	bhi	190cc <myencoding_decode_euc_jp@@Base+0x60>
   190f8:	add	r3, r0, #65024	; 0xfe00
   190fc:	mov	r2, #0
   19100:	add	r3, r3, #192	; 0xc0
   19104:	mov	r0, r2
   19108:	str	r2, [r1]
   1910c:	str	r3, [r1, #12]
   19110:	bx	lr
   19114:	mov	r0, #0
   19118:	sub	ip, r2, #161	; 0xa1
   1911c:	cmp	ip, #93	; 0x5d
   19120:	str	r0, [r1]
   19124:	bhi	1908c <myencoding_decode_euc_jp@@Base+0x20>
   19128:	add	r0, r3, #95	; 0x5f
   1912c:	uxtb	r0, r0
   19130:	cmp	r0, #93	; 0x5d
   19134:	bhi	1908c <myencoding_decode_euc_jp@@Base+0x20>
   19138:	ldr	r0, [r1, #20]
   1913c:	sub	r3, r3, #15232	; 0x3b80
   19140:	mov	ip, #94	; 0x5e
   19144:	sub	r3, r3, #63	; 0x3f
   19148:	mla	r2, ip, r2, r3
   1914c:	cmp	r0, #0
   19150:	beq	1918c <myencoding_decode_euc_jp@@Base+0x120>
   19154:	ldr	r3, [pc, #64]	; 1919c <myencoding_decode_euc_jp@@Base+0x130>
   19158:	add	r3, pc, r3
   1915c:	ldr	r3, [r3, r2, lsl #2]
   19160:	mov	r2, #0
   19164:	clz	r0, r3
   19168:	str	r3, [r1, #12]
   1916c:	lsr	r0, r0, #5
   19170:	str	r2, [r1, #20]
   19174:	bx	lr
   19178:	mov	r2, #1
   1917c:	mov	r0, #2
   19180:	str	r3, [r1]
   19184:	str	r2, [r1, #20]
   19188:	bx	lr
   1918c:	ldr	r3, [pc, #12]	; 191a0 <myencoding_decode_euc_jp@@Base+0x134>
   19190:	add	r3, pc, r3
   19194:	ldr	r3, [r3, r2, lsl #2]
   19198:	b	19160 <myencoding_decode_euc_jp@@Base+0xf4>
   1919c:			; <UNDEFINED> instruction: 0x00026bb8
   191a0:	muleq	r2, r0, r5

000191a4 <myencoding_decode_iso_2022_jp@@Base>:
   191a4:	ldr	r2, [r1, #4]
   191a8:	mov	r3, r0
   191ac:	cmp	r2, #7
   191b0:	addls	pc, pc, r2, lsl #2
   191b4:	b	1938c <myencoding_decode_iso_2022_jp@@Base+0x1e8>
   191b8:	b	19254 <myencoding_decode_iso_2022_jp@@Base+0xb0>
   191bc:	b	1928c <myencoding_decode_iso_2022_jp@@Base+0xe8>
   191c0:	b	1938c <myencoding_decode_iso_2022_jp@@Base+0x1e8>
   191c4:	b	192bc <myencoding_decode_iso_2022_jp@@Base+0x118>
   191c8:	b	192ec <myencoding_decode_iso_2022_jp@@Base+0x148>
   191cc:	b	19318 <myencoding_decode_iso_2022_jp@@Base+0x174>
   191d0:	b	19368 <myencoding_decode_iso_2022_jp@@Base+0x1c4>
   191d4:	b	191d8 <myencoding_decode_iso_2022_jp@@Base+0x34>
   191d8:	ldr	r2, [r1]
   191dc:	mov	r0, #0
   191e0:	str	r0, [r1]
   191e4:	str	r0, [r1, #4]
   191e8:	cmp	r2, #40	; 0x28
   191ec:	movne	r0, #0
   191f0:	moveq	r0, #1
   191f4:	cmp	r3, #66	; 0x42
   191f8:	cmpeq	r2, #40	; 0x28
   191fc:	beq	19374 <myencoding_decode_iso_2022_jp@@Base+0x1d0>
   19200:	cmp	r3, #74	; 0x4a
   19204:	movne	ip, #0
   19208:	andeq	ip, r0, #1
   1920c:	cmp	ip, #0
   19210:	bne	193b4 <myencoding_decode_iso_2022_jp@@Base+0x210>
   19214:	cmp	r3, #73	; 0x49
   19218:	movne	r0, #0
   1921c:	andeq	r0, r0, #1
   19220:	cmp	r0, #0
   19224:	beq	19404 <myencoding_decode_iso_2022_jp@@Base+0x260>
   19228:	mov	r3, #2
   1922c:	mov	r0, r3
   19230:	str	r3, [r1, #4]
   19234:	ldr	r3, [r1, #20]
   19238:	mov	r2, #1
   1923c:	str	r0, [r1, #8]
   19240:	str	r2, [r1, #20]
   19244:	cmp	r3, #0
   19248:	movne	r0, r2
   1924c:	moveq	r0, #2
   19250:	bx	lr
   19254:	cmp	r0, #27
   19258:	beq	19394 <myencoding_decode_iso_2022_jp@@Base+0x1f0>
   1925c:	mvn	r0, r3
   19260:	sub	r2, r3, #14
   19264:	ubfx	r0, r0, #7, #1
   19268:	cmp	r2, #1
   1926c:	movls	r2, #0
   19270:	andhi	r2, r0, #1
   19274:	cmp	r2, #0
   19278:	bne	193c4 <myencoding_decode_iso_2022_jp@@Base+0x220>
   1927c:	mov	r3, #0
   19280:	mov	r0, #1
   19284:	str	r3, [r1, #20]
   19288:	bx	lr
   1928c:	cmp	r0, #27
   19290:	beq	19394 <myencoding_decode_iso_2022_jp@@Base+0x1f0>
   19294:	cmp	r0, #92	; 0x5c
   19298:	beq	193ec <myencoding_decode_iso_2022_jp@@Base+0x248>
   1929c:	cmp	r0, #126	; 0x7e
   192a0:	bne	1925c <myencoding_decode_iso_2022_jp@@Base+0xb8>
   192a4:	mov	r3, #0
   192a8:	movw	r2, #8254	; 0x203e
   192ac:	mov	r0, r3
   192b0:	str	r2, [r1, #12]
   192b4:	str	r3, [r1, #20]
   192b8:	bx	lr
   192bc:	cmp	r0, #27
   192c0:	beq	19394 <myencoding_decode_iso_2022_jp@@Base+0x1f0>
   192c4:	sub	r2, r0, #33	; 0x21
   192c8:	cmp	r2, #62	; 0x3e
   192cc:	bhi	1927c <myencoding_decode_iso_2022_jp@@Base+0xd8>
   192d0:	add	r3, r0, #65280	; 0xff00
   192d4:	mov	r2, #0
   192d8:	add	r3, r3, #64	; 0x40
   192dc:	mov	r0, r2
   192e0:	str	r3, [r1, #12]
   192e4:	str	r2, [r1, #20]
   192e8:	bx	lr
   192ec:	cmp	r0, #27
   192f0:	beq	19394 <myencoding_decode_iso_2022_jp@@Base+0x1f0>
   192f4:	sub	r2, r0, #33	; 0x21
   192f8:	cmp	r2, #93	; 0x5d
   192fc:	bhi	1927c <myencoding_decode_iso_2022_jp@@Base+0xd8>
   19300:	mov	r2, #0
   19304:	mov	ip, #5
   19308:	mov	r0, #2
   1930c:	stm	r1, {r3, ip}
   19310:	str	r2, [r1, #20]
   19314:	bx	lr
   19318:	cmp	r0, #27
   1931c:	beq	19428 <myencoding_decode_iso_2022_jp@@Base+0x284>
   19320:	sub	r2, r0, #33	; 0x21
   19324:	cmp	r2, #93	; 0x5d
   19328:	bhi	193a4 <myencoding_decode_iso_2022_jp@@Base+0x200>
   1932c:	ldr	r2, [r1]
   19330:	sub	r0, r0, #3120	; 0xc30
   19334:	mov	ip, #94	; 0x5e
   19338:	sub	r0, r0, #15
   1933c:	push	{lr}		; (str lr, [sp, #-4]!)
   19340:	mov	lr, #4
   19344:	ldr	r3, [pc, #236]	; 19438 <myencoding_decode_iso_2022_jp@@Base+0x294>
   19348:	str	lr, [r1, #4]
   1934c:	mla	r2, ip, r2, r0
   19350:	add	r3, pc, r3
   19354:	ldr	r3, [r3, r2, lsl #2]
   19358:	clz	r0, r3
   1935c:	str	r3, [r1, #12]
   19360:	lsr	r0, r0, #5
   19364:	pop	{pc}		; (ldr pc, [sp], #4)
   19368:	sub	r2, r0, #36	; 0x24
   1936c:	tst	r2, #251	; 0xfb
   19370:	beq	193d8 <myencoding_decode_iso_2022_jp@@Base+0x234>
   19374:	ldr	r3, [r1, #8]
   19378:	mov	r2, #0
   1937c:	mov	r0, #1
   19380:	str	r3, [r1, #4]
   19384:	str	r2, [r1, #20]
   19388:	bx	lr
   1938c:	mov	r0, #0
   19390:	bx	lr
   19394:	mov	r3, #6
   19398:	mov	r0, #2
   1939c:	str	r3, [r1, #4]
   193a0:	bx	lr
   193a4:	mov	r3, #4
   193a8:	mov	r0, #1
   193ac:	str	r3, [r1, #4]
   193b0:	bx	lr
   193b4:	mov	r3, #1
   193b8:	mov	r0, r3
   193bc:	str	r3, [r1, #4]
   193c0:	b	19234 <myencoding_decode_iso_2022_jp@@Base+0x90>
   193c4:	mov	r2, #0
   193c8:	str	r3, [r1, #12]
   193cc:	mov	r0, r2
   193d0:	str	r2, [r1, #20]
   193d4:	bx	lr
   193d8:	mov	r2, #7
   193dc:	mov	r0, #2
   193e0:	str	r3, [r1]
   193e4:	str	r2, [r1, #4]
   193e8:	bx	lr
   193ec:	mov	r3, #0
   193f0:	mov	r2, #165	; 0xa5
   193f4:	mov	r0, r3
   193f8:	str	r2, [r1, #12]
   193fc:	str	r3, [r1, #20]
   19400:	bx	lr
   19404:	cmp	r2, #36	; 0x24
   19408:	bne	19374 <myencoding_decode_iso_2022_jp@@Base+0x1d0>
   1940c:	and	r3, r3, #253	; 0xfd
   19410:	cmp	r3, #64	; 0x40
   19414:	bne	19374 <myencoding_decode_iso_2022_jp@@Base+0x1d0>
   19418:	mov	r3, #4
   1941c:	mov	r0, r3
   19420:	str	r3, [r1, #4]
   19424:	b	19234 <myencoding_decode_iso_2022_jp@@Base+0x90>
   19428:	mov	r3, #6
   1942c:	mov	r0, #3
   19430:	str	r3, [r1, #4]
   19434:	bx	lr
   19438:	ldrdeq	pc, [r2], -r0

0001943c <myencoding_decode_x_user_defined@@Base>:
   1943c:	tst	r0, #128	; 0x80
   19440:	moveq	r3, r0
   19444:	addne	r3, r0, #63232	; 0xf700
   19448:	mov	r0, #0
   1944c:	str	r3, [r1, #12]
   19450:	bx	lr

00019454 <myencoding_decode_utf_8@@Base>:
   19454:	mov	r3, r0
   19458:	ldr	r0, [r1, #20]
   1945c:	cmp	r0, #0
   19460:	bne	194c4 <myencoding_decode_utf_8@@Base+0x70>
   19464:	tst	r3, #128	; 0x80
   19468:	beq	194bc <myencoding_decode_utf_8@@Base+0x68>
   1946c:	add	r2, r3, #62	; 0x3e
   19470:	uxtb	r2, r2
   19474:	cmp	r2, #29
   19478:	bls	194a4 <myencoding_decode_utf_8@@Base+0x50>
   1947c:	add	r2, r3, #32
   19480:	uxtb	r2, r2
   19484:	cmp	r2, #15
   19488:	bls	19594 <myencoding_decode_utf_8@@Base+0x140>
   1948c:	add	r2, r3, #16
   19490:	uxtb	r2, r2
   19494:	cmp	r2, #4
   19498:	bls	19564 <myencoding_decode_utf_8@@Base+0x110>
   1949c:	mov	r0, #1
   194a0:	bx	lr
   194a4:	mov	r2, #1
   194a8:	sub	r3, r3, #192	; 0xc0
   194ac:	mov	r0, #6
   194b0:	str	r2, [r1, #20]
   194b4:	lsl	r3, r3, r0
   194b8:	mov	r0, #2
   194bc:	str	r3, [r1, #12]
   194c0:	bx	lr
   194c4:	ldr	r2, [r1]
   194c8:	cmp	r3, r2
   194cc:	bcs	194dc <myencoding_decode_utf_8@@Base+0x88>
   194d0:	ldr	r2, [r1, #4]
   194d4:	cmp	r3, r2
   194d8:	bhi	19540 <myencoding_decode_utf_8@@Base+0xec>
   194dc:	ldr	ip, [r1, #8]
   194e0:	mov	r2, #191	; 0xbf
   194e4:	sub	r3, r3, #128	; 0x80
   194e8:	str	r4, [sp, #-8]!
   194ec:	mov	r4, #128	; 0x80
   194f0:	str	lr, [sp, #4]
   194f4:	ldr	lr, [r1, #12]
   194f8:	str	r4, [r1]
   194fc:	add	ip, ip, #1
   19500:	cmp	r0, ip
   19504:	stmib	r1, {r2, ip}
   19508:	sub	r2, r0, ip
   1950c:	movne	r0, #2
   19510:	add	r2, r2, r2, lsl #1
   19514:	lsl	r2, r2, #1
   19518:	add	r3, lr, r3, lsl r2
   1951c:	str	r3, [r1, #12]
   19520:	bne	19534 <myencoding_decode_utf_8@@Base+0xe0>
   19524:	mov	r3, #0
   19528:	mov	r0, r3
   1952c:	str	r3, [r1, #8]
   19530:	str	r3, [r1, #20]
   19534:	ldr	r4, [sp]
   19538:	add	sp, sp, #4
   1953c:	pop	{pc}		; (ldr pc, [sp], #4)
   19540:	mov	r3, #0
   19544:	mov	ip, #128	; 0x80
   19548:	mov	r2, #191	; 0xbf
   1954c:	mov	r0, #5
   19550:	str	ip, [r1]
   19554:	strd	r2, [r1, #4]
   19558:	str	r3, [r1, #12]
   1955c:	str	r3, [r1, #20]
   19560:	bx	lr
   19564:	cmp	r3, #240	; 0xf0
   19568:	moveq	r2, #144	; 0x90
   1956c:	streq	r2, [r1]
   19570:	beq	19580 <myencoding_decode_utf_8@@Base+0x12c>
   19574:	cmp	r3, #244	; 0xf4
   19578:	moveq	r2, #143	; 0x8f
   1957c:	streq	r2, [r1, #4]
   19580:	mov	r2, #2
   19584:	sub	r3, r3, #240	; 0xf0
   19588:	mov	r0, #12
   1958c:	str	r2, [r1, #20]
   19590:	b	194b4 <myencoding_decode_utf_8@@Base+0x60>
   19594:	cmp	r3, #224	; 0xe0
   19598:	moveq	r2, #160	; 0xa0
   1959c:	streq	r2, [r1]
   195a0:	beq	195b0 <myencoding_decode_utf_8@@Base+0x15c>
   195a4:	cmp	r3, #237	; 0xed
   195a8:	moveq	r2, #159	; 0x9f
   195ac:	streq	r2, [r1, #4]
   195b0:	mov	r2, #2
   195b4:	sub	r3, r3, #224	; 0xe0
   195b8:	mov	r0, #12
   195bc:	str	r2, [r1, #20]
   195c0:	b	194b4 <myencoding_decode_utf_8@@Base+0x60>

000195c4 <myencoding_decode_shift_jis@@Base>:
   195c4:	mov	r3, r0
   195c8:	ldr	r0, [r1]
   195cc:	cmp	r0, #0
   195d0:	beq	1967c <myencoding_decode_shift_jis@@Base+0xb8>
   195d4:	cmp	r3, #127	; 0x7f
   195d8:	eor	ip, r3, #128	; 0x80
   195dc:	str	r4, [sp, #-8]!
   195e0:	movcc	r4, #64	; 0x40
   195e4:	movcs	r4, #65	; 0x41
   195e8:	str	lr, [sp, #4]
   195ec:	cmp	r0, #160	; 0xa0
   195f0:	sub	lr, r3, #64	; 0x40
   195f4:	movcc	r2, #129	; 0x81
   195f8:	movcs	r2, #193	; 0xc1
   195fc:	cmp	ip, #124	; 0x7c
   19600:	cmphi	lr, #62	; 0x3e
   19604:	bls	19620 <myencoding_decode_shift_jis@@Base+0x5c>
   19608:	mov	r3, #0
   1960c:	mov	r0, #1
   19610:	str	r3, [r1, #12]
   19614:	ldr	r4, [sp]
   19618:	add	sp, sp, #4
   1961c:	pop	{pc}		; (ldr pc, [sp], #4)
   19620:	sub	r0, r0, r2
   19624:	sub	r3, r3, r4
   19628:	mov	r2, #188	; 0xbc
   1962c:	mlas	lr, r0, r2, r3
   19630:	beq	19608 <myencoding_decode_shift_jis@@Base+0x44>
   19634:	ldr	r3, [pc, #144]	; 196cc <myencoding_decode_shift_jis@@Base+0x108>
   19638:	add	r3, pc, r3
   1963c:	ldr	r0, [r3, lr, lsl #2]
   19640:	cmp	r0, #0
   19644:	str	r0, [r1, #12]
   19648:	movne	r0, #0
   1964c:	bne	19614 <myencoding_decode_shift_jis@@Base+0x50>
   19650:	sub	r3, lr, #8832	; 0x2280
   19654:	movw	ip, #1692	; 0x69c
   19658:	ldr	r4, [sp]
   1965c:	sub	r3, r3, #4
   19660:	add	sp, sp, #4
   19664:	cmp	r3, ip
   19668:	addls	r2, lr, #48384	; 0xbd00
   1966c:	movhi	r0, #1
   19670:	addls	r2, r2, #124	; 0x7c
   19674:	strls	r2, [r1, #12]
   19678:	pop	{pc}		; (ldr pc, [sp], #4)
   1967c:	cmp	r3, #128	; 0x80
   19680:	bls	196c4 <myencoding_decode_shift_jis@@Base+0x100>
   19684:	add	r2, r3, #95	; 0x5f
   19688:	uxtb	r2, r2
   1968c:	cmp	r2, #62	; 0x3e
   19690:	bls	196bc <myencoding_decode_shift_jis@@Base+0xf8>
   19694:	add	r0, r3, #127	; 0x7f
   19698:	add	r2, r3, #32
   1969c:	uxtb	r0, r0
   196a0:	uxtb	r2, r2
   196a4:	cmp	r2, #28
   196a8:	cmphi	r0, #30
   196ac:	movls	r0, #2
   196b0:	movhi	r0, #1
   196b4:	strls	r3, [r1]
   196b8:	bx	lr
   196bc:	add	r3, r3, #65024	; 0xfe00
   196c0:	add	r3, r3, #192	; 0xc0
   196c4:	str	r3, [r1, #12]
   196c8:	bx	lr
   196cc:	andeq	pc, r2, r8, ror #1

000196d0 <myencoding_decode_euc_kr@@Base>:
   196d0:	push	{lr}		; (str lr, [sp, #-4]!)
   196d4:	ldr	lr, [r1]
   196d8:	cmp	lr, #0
   196dc:	beq	19734 <myencoding_decode_euc_kr@@Base+0x64>
   196e0:	sub	r2, r0, #65	; 0x41
   196e4:	mov	ip, #0
   196e8:	uxtb	r2, r2
   196ec:	cmp	r2, #189	; 0xbd
   196f0:	str	ip, [r1]
   196f4:	bls	1970c <myencoding_decode_euc_kr@@Base+0x3c>
   196f8:	ldr	r3, [r1, #12]
   196fc:	clz	lr, r3
   19700:	lsr	lr, lr, #5
   19704:	mov	r0, lr
   19708:	pop	{pc}		; (ldr pc, [sp], #4)
   1970c:	sub	r0, r0, #24320	; 0x5f00
   19710:	mov	r2, #190	; 0xbe
   19714:	sub	r0, r0, #255	; 0xff
   19718:	mlas	r3, r2, lr, r0
   1971c:	beq	196f8 <myencoding_decode_euc_kr@@Base+0x28>
   19720:	ldr	r2, [pc, #56]	; 19760 <myencoding_decode_euc_kr@@Base+0x90>
   19724:	add	r2, pc, r2
   19728:	ldr	r3, [r2, r3, lsl #2]
   1972c:	str	r3, [r1, #12]
   19730:	b	196fc <myencoding_decode_euc_kr@@Base+0x2c>
   19734:	tst	r0, #128	; 0x80
   19738:	streq	r0, [r1, #12]
   1973c:	beq	19704 <myencoding_decode_euc_kr@@Base+0x34>
   19740:	add	r3, r0, #127	; 0x7f
   19744:	uxtb	r3, r3
   19748:	cmp	r3, #125	; 0x7d
   1974c:	movls	lr, #2
   19750:	movhi	lr, #1
   19754:	strls	r0, [r1]
   19758:	mov	r0, lr
   1975c:	pop	{pc}		; (ldr pc, [sp], #4)
   19760:	andeq	r1, r5, ip, asr #12

00019764 <myencoding_decode_iso_8859_8_i@@Base>:
   19764:	tst	r0, #128	; 0x80
   19768:	moveq	r3, r0
   1976c:	beq	19780 <myencoding_decode_iso_8859_8_i@@Base+0x1c>
   19770:	ldr	r3, [pc, #20]	; 1978c <myencoding_decode_iso_8859_8_i@@Base+0x28>
   19774:	add	r3, pc, r3
   19778:	add	r0, r3, r0, lsl #2
   1977c:	ldr	r3, [r0, #3072]	; 0xc00
   19780:	mov	r0, #0
   19784:	str	r3, [r1, #12]
   19788:	bx	lr
   1978c:	andeq	r2, r2, r4, lsr #16

00019790 <myencoding_get_function_by_id@@Base>:
   19790:	ldr	r3, [pc, #8]	; 197a0 <myencoding_get_function_by_id@@Base+0x10>
   19794:	add	r3, pc, r3
   19798:	ldr	r0, [r3, r0, lsl #2]
   1979c:	bx	lr
   197a0:	andeq	pc, pc, r8, asr #13

000197a4 <myencoding_index_gb18030_ranges_code_point@@Base>:
   197a4:	movw	r3, #57927	; 0xe247
   197a8:	movt	r3, #18
   197ac:	cmp	r0, r3
   197b0:	sub	r2, r0, #39168	; 0x9900
   197b4:	movls	r3, #0
   197b8:	movhi	r3, #1
   197bc:	sub	r2, r2, #252	; 0xfc
   197c0:	movw	r1, #18507	; 0x484b
   197c4:	movt	r1, #2
   197c8:	cmp	r2, r1
   197cc:	orrls	r3, r3, #1
   197d0:	cmp	r3, #0
   197d4:	bne	19824 <myencoding_index_gb18030_ranges_code_point@@Base+0x80>
   197d8:	movw	r3, #7457	; 0x1d21
   197dc:	cmp	r0, r3
   197e0:	beq	1982c <myencoding_index_gb18030_ranges_code_point@@Base+0x88>
   197e4:	ldr	ip, [pc, #76]	; 19838 <myencoding_index_gb18030_ranges_code_point@@Base+0x94>
   197e8:	mov	r3, #207	; 0xcf
   197ec:	add	ip, pc, ip
   197f0:	sub	r1, ip, #2544	; 0x9f0
   197f4:	b	19800 <myencoding_index_gb18030_ranges_code_point@@Base+0x5c>
   197f8:	cmp	r3, #0
   197fc:	beq	19834 <myencoding_index_gb18030_ranges_code_point@@Base+0x90>
   19800:	sub	r3, r3, #1
   19804:	ldr	r2, [r1, r3, lsl #3]
   19808:	cmp	r0, r2
   1980c:	bcc	197f8 <myencoding_index_gb18030_ranges_code_point@@Base+0x54>
   19810:	add	ip, ip, r3, lsl #3
   19814:	ldr	r2, [ip, #-2540]	; 0xfffff614
   19818:	sub	r3, r2, r3
   1981c:	add	r0, r3, r0
   19820:	bx	lr
   19824:	mov	r0, #0
   19828:	bx	lr
   1982c:	movw	r0, #59335	; 0xe7c7
   19830:	bx	lr
   19834:	bx	lr
   19838:	muleq	r2, ip, r7

0001983c <myencoding_decode_gb18030@@Base>:
   1983c:	ldr	r2, [r1, #8]
   19840:	mov	r3, r0
   19844:	str	r4, [sp, #-8]!
   19848:	str	lr, [sp, #4]
   1984c:	cmp	r2, #0
   19850:	beq	1988c <myencoding_decode_gb18030@@Base+0x50>
   19854:	mov	r4, r1
   19858:	sub	r1, r0, #48	; 0x30
   1985c:	cmp	r1, #9
   19860:	bls	198f4 <myencoding_decode_gb18030@@Base+0xb8>
   19864:	ldr	r0, [r4, #12]
   19868:	clz	r0, r0
   1986c:	mov	r3, #0
   19870:	lsr	r0, r0, #5
   19874:	str	r3, [r4]
   19878:	str	r3, [r4, #4]
   1987c:	str	r3, [r4, #8]
   19880:	ldr	r4, [sp]
   19884:	add	sp, sp, #4
   19888:	pop	{pc}		; (ldr pc, [sp], #4)
   1988c:	ldr	ip, [r1, #4]
   19890:	cmp	ip, #0
   19894:	beq	198c8 <myencoding_decode_gb18030@@Base+0x8c>
   19898:	add	r0, r0, #127	; 0x7f
   1989c:	uxtb	r0, r0
   198a0:	cmp	r0, #125	; 0x7d
   198a4:	movls	r0, #2
   198a8:	strls	r3, [r1, #8]
   198ac:	bls	19880 <myencoding_decode_gb18030@@Base+0x44>
   198b0:	ldr	r4, [sp]
   198b4:	add	sp, sp, #4
   198b8:	mov	r0, #1
   198bc:	str	r2, [r1]
   198c0:	str	r2, [r1, #4]
   198c4:	pop	{pc}		; (ldr pc, [sp], #4)
   198c8:	ldr	r0, [r1]
   198cc:	cmp	r0, #0
   198d0:	bne	19928 <myencoding_decode_gb18030@@Base+0xec>
   198d4:	tst	r3, #128	; 0x80
   198d8:	beq	19990 <myencoding_decode_gb18030@@Base+0x154>
   198dc:	cmp	r3, #128	; 0x80
   198e0:	beq	1998c <myencoding_decode_gb18030@@Base+0x150>
   198e4:	cmp	r3, #255	; 0xff
   198e8:	bne	19998 <myencoding_decode_gb18030@@Base+0x15c>
   198ec:	mov	r0, #1
   198f0:	b	19880 <myencoding_decode_gb18030@@Base+0x44>
   198f4:	movw	r0, #16718	; 0x414e
   198f8:	movt	r0, #65510	; 0xffe6
   198fc:	add	r0, r3, r0
   19900:	ldm	r4, {r1, r3}
   19904:	add	r1, r1, r1, lsl #2
   19908:	add	r3, r3, r1, lsl #1
   1990c:	rsb	r3, r3, r3, lsl #6
   19910:	add	r3, r2, r3, lsl #1
   19914:	add	r3, r3, r3, lsl #2
   19918:	add	r0, r0, r3, lsl #1
   1991c:	bl	10ea4 <myencoding_index_gb18030_ranges_code_point@plt>
   19920:	str	r0, [r4, #12]
   19924:	b	19868 <myencoding_decode_gb18030@@Base+0x2c>
   19928:	sub	r2, r3, #48	; 0x30
   1992c:	cmp	r2, #9
   19930:	movls	r0, #2
   19934:	strls	r3, [r1, #4]
   19938:	bls	19880 <myencoding_decode_gb18030@@Base+0x44>
   1993c:	cmp	r3, #127	; 0x7f
   19940:	sub	lr, r3, #64	; 0x40
   19944:	str	ip, [r1]
   19948:	eor	r2, r3, #128	; 0x80
   1994c:	movcc	r4, #64	; 0x40
   19950:	movcs	r4, #65	; 0x41
   19954:	cmp	r2, #126	; 0x7e
   19958:	cmphi	lr, #62	; 0x3e
   1995c:	bhi	198ec <myencoding_decode_gb18030@@Base+0xb0>
   19960:	sub	r3, r3, r4
   19964:	mov	r2, #190	; 0xbe
   19968:	ldr	lr, [pc, #52]	; 199a4 <myencoding_decode_gb18030@@Base+0x168>
   1996c:	mla	r3, r2, r0, r3
   19970:	mov	r0, ip
   19974:	sub	r3, r3, #24320	; 0x5f00
   19978:	add	lr, pc, lr
   1997c:	sub	r3, r3, #190	; 0xbe
   19980:	ldr	r3, [lr, r3, lsl #2]
   19984:	str	r3, [r1, #12]
   19988:	b	19880 <myencoding_decode_gb18030@@Base+0x44>
   1998c:	movw	r3, #8364	; 0x20ac
   19990:	str	r3, [r1, #12]
   19994:	b	19880 <myencoding_decode_gb18030@@Base+0x44>
   19998:	mov	r0, #2
   1999c:	str	r3, [r1]
   199a0:	b	19880 <myencoding_decode_gb18030@@Base+0x44>
   199a4:	andeq	r9, r3, r8, ror #27

000199a8 <myencoding_decode_gbk@@Base>:
   199a8:	b	10b8c <myencoding_decode_gb18030@plt>

000199ac <myencoding_decode_shared_utf_16@@Base>:
   199ac:	ldr	r3, [r1]
   199b0:	cmp	r3, #0
   199b4:	moveq	r2, #2
   199b8:	streq	r0, [r1]
   199bc:	beq	19a38 <myencoding_decode_shared_utf_16@@Base+0x8c>
   199c0:	ldr	r2, [r1, #4]
   199c4:	ldr	ip, [r1, #20]
   199c8:	cmp	ip, #0
   199cc:	addne	r3, r0, r3, lsl #8
   199d0:	addeq	r3, r3, r0, lsl #8
   199d4:	mov	r0, #0
   199d8:	cmp	r2, r0
   199dc:	str	r0, [r1]
   199e0:	beq	19a14 <myencoding_decode_shared_utf_16@@Base+0x68>
   199e4:	push	{lr}		; (str lr, [sp, #-4]!)
   199e8:	sub	lr, r3, #56320	; 0xdc00
   199ec:	cmp	lr, #1024	; 0x400
   199f0:	str	r0, [r1, #4]
   199f4:	bcs	19a40 <myencoding_decode_shared_utf_16@@Base+0x94>
   199f8:	add	r3, r3, r2, lsl #10
   199fc:	mov	r2, r0
   19a00:	mov	r0, r2
   19a04:	sub	r3, r3, #56360960	; 0x35c0000
   19a08:	sub	r3, r3, #252928	; 0x3dc00
   19a0c:	str	r3, [r1, #12]
   19a10:	pop	{pc}		; (ldr pc, [sp], #4)
   19a14:	sub	r0, r3, #55296	; 0xd800
   19a18:	cmp	r0, #1024	; 0x400
   19a1c:	movcc	r2, #2
   19a20:	strcc	r3, [r1, #4]
   19a24:	bcc	19a38 <myencoding_decode_shared_utf_16@@Base+0x8c>
   19a28:	sub	r0, r3, #56320	; 0xdc00
   19a2c:	cmp	r0, #1024	; 0x400
   19a30:	movcc	r2, #1
   19a34:	strcs	r3, [r1, #12]
   19a38:	mov	r0, r2
   19a3c:	bx	lr
   19a40:	ubfx	r0, r3, #8, #8
   19a44:	cmp	ip, #0
   19a48:	uxtb	r3, r3
   19a4c:	mov	r2, #5
   19a50:	strne	r3, [r1, #16]
   19a54:	strne	r0, [r1, #12]
   19a58:	streq	r0, [r1, #16]
   19a5c:	mov	r0, r2
   19a60:	streq	r3, [r1, #12]
   19a64:	pop	{pc}		; (ldr pc, [sp], #4)

00019a68 <myencoding_decode_utf_16be@@Base>:
   19a68:	ldr	r3, [r1, #20]
   19a6c:	cmp	r3, #0
   19a70:	moveq	r3, #1
   19a74:	streq	r3, [r1, #20]
   19a78:	b	10b68 <myencoding_decode_shared_utf_16@plt>

00019a7c <myencoding_decode_utf_16le@@Base>:
   19a7c:	ldr	r3, [r1, #20]
   19a80:	cmp	r3, #0
   19a84:	movne	r3, #0
   19a88:	strne	r3, [r1, #20]
   19a8c:	b	10b68 <myencoding_decode_shared_utf_16@plt>

00019a90 <myencoding_result_clean@@Base>:
   19a90:	mov	r3, #0
   19a94:	str	r3, [r0]
   19a98:	str	r3, [r0, #4]
   19a9c:	str	r3, [r0, #8]
   19aa0:	str	r3, [r0, #12]
   19aa4:	str	r3, [r0, #16]
   19aa8:	str	r3, [r0, #20]
   19aac:	bx	lr

00019ab0 <myencoding_codepoint_ascii_length@@Base>:
   19ab0:	cmp	r0, #127	; 0x7f
   19ab4:	bls	19ae8 <myencoding_codepoint_ascii_length@@Base+0x38>
   19ab8:	cmp	r0, #2048	; 0x800
   19abc:	bcc	19af8 <myencoding_codepoint_ascii_length@@Base+0x48>
   19ac0:	cmp	r0, #65536	; 0x10000
   19ac4:	bcc	19af0 <myencoding_codepoint_ascii_length@@Base+0x40>
   19ac8:	cmp	r0, #2097152	; 0x200000
   19acc:	bcc	19b00 <myencoding_codepoint_ascii_length@@Base+0x50>
   19ad0:	cmn	r0, #-67108863	; 0xfc000001
   19ad4:	bls	19b08 <myencoding_codepoint_ascii_length@@Base+0x58>
   19ad8:	cmp	r0, #0
   19adc:	movlt	r0, #0
   19ae0:	movge	r0, #6
   19ae4:	bx	lr
   19ae8:	mov	r0, #1
   19aec:	bx	lr
   19af0:	mov	r0, #3
   19af4:	bx	lr
   19af8:	mov	r0, #2
   19afc:	bx	lr
   19b00:	mov	r0, #4
   19b04:	bx	lr
   19b08:	mov	r0, #5
   19b0c:	bx	lr

00019b10 <myencoding_ascii_utf_8_length@@Base>:
   19b10:	tst	r0, #128	; 0x80
   19b14:	beq	19b58 <myencoding_ascii_utf_8_length@@Base+0x48>
   19b18:	and	r3, r0, #224	; 0xe0
   19b1c:	cmp	r3, #192	; 0xc0
   19b20:	beq	19b68 <myencoding_ascii_utf_8_length@@Base+0x58>
   19b24:	and	r3, r0, #240	; 0xf0
   19b28:	cmp	r3, #224	; 0xe0
   19b2c:	beq	19b60 <myencoding_ascii_utf_8_length@@Base+0x50>
   19b30:	and	r3, r0, #248	; 0xf8
   19b34:	cmp	r3, #240	; 0xf0
   19b38:	beq	19b70 <myencoding_ascii_utf_8_length@@Base+0x60>
   19b3c:	and	r3, r0, #252	; 0xfc
   19b40:	cmp	r3, #248	; 0xf8
   19b44:	beq	19b78 <myencoding_ascii_utf_8_length@@Base+0x68>
   19b48:	cmp	r0, #252	; 0xfc
   19b4c:	movne	r0, #0
   19b50:	moveq	r0, #6
   19b54:	bx	lr
   19b58:	mov	r0, #1
   19b5c:	bx	lr
   19b60:	mov	r0, #3
   19b64:	bx	lr
   19b68:	mov	r0, #2
   19b6c:	bx	lr
   19b70:	mov	r0, #4
   19b74:	bx	lr
   19b78:	mov	r0, #5
   19b7c:	bx	lr

00019b80 <myencoding_codepoint_to_ascii_utf_8@@Base>:
   19b80:	cmp	r0, #127	; 0x7f
   19b84:	mov	r3, r0
   19b88:	bls	19bbc <myencoding_codepoint_to_ascii_utf_8@@Base+0x3c>
   19b8c:	cmp	r0, #2048	; 0x800
   19b90:	bcc	19c00 <myencoding_codepoint_to_ascii_utf_8@@Base+0x80>
   19b94:	cmp	r0, #65536	; 0x10000
   19b98:	str	r4, [sp, #-8]!
   19b9c:	str	lr, [sp, #4]
   19ba0:	bcc	19bc8 <myencoding_codepoint_to_ascii_utf_8@@Base+0x48>
   19ba4:	cmp	r0, #2097152	; 0x200000
   19ba8:	movcs	r0, #0
   19bac:	bcc	19c24 <myencoding_codepoint_to_ascii_utf_8@@Base+0xa4>
   19bb0:	ldr	r4, [sp]
   19bb4:	add	sp, sp, #4
   19bb8:	pop	{pc}		; (ldr pc, [sp], #4)
   19bbc:	mov	r0, #1
   19bc0:	strb	r3, [r1]
   19bc4:	bx	lr
   19bc8:	mvn	r0, #31
   19bcc:	ubfx	ip, r3, #6, #6
   19bd0:	and	lr, r3, #63	; 0x3f
   19bd4:	mvn	r2, #127	; 0x7f
   19bd8:	orr	r3, r0, r3, lsr #12
   19bdc:	ldr	r4, [sp]
   19be0:	orr	ip, r2, ip
   19be4:	orr	r2, r2, lr
   19be8:	add	sp, sp, #4
   19bec:	mov	r0, #3
   19bf0:	strb	r3, [r1]
   19bf4:	strb	ip, [r1, #1]
   19bf8:	strb	r2, [r1, #2]
   19bfc:	pop	{pc}		; (ldr pc, [sp], #4)
   19c00:	and	r2, r0, #63	; 0x3f
   19c04:	mvn	ip, #63	; 0x3f
   19c08:	mvn	r2, r2, lsl #25
   19c0c:	mov	r0, #2
   19c10:	orr	r3, ip, r3, lsr #6
   19c14:	mvn	r2, r2, lsr #25
   19c18:	strb	r3, [r1]
   19c1c:	strb	r2, [r1, #1]
   19c20:	bx	lr
   19c24:	mvn	r0, #15
   19c28:	ubfx	lr, r3, #12, #6
   19c2c:	mvn	r2, #127	; 0x7f
   19c30:	ubfx	r4, r3, #6, #6
   19c34:	and	ip, r3, #63	; 0x3f
   19c38:	orr	r3, r0, r3, lsr #18
   19c3c:	orr	lr, r2, lr
   19c40:	orr	ip, r2, ip
   19c44:	orr	r2, r2, r4
   19c48:	mov	r0, #4
   19c4c:	strb	r3, [r1]
   19c50:	strb	lr, [r1, #1]
   19c54:	strb	r2, [r1, #2]
   19c58:	strb	ip, [r1, #3]
   19c5c:	b	19bb0 <myencoding_codepoint_to_ascii_utf_8@@Base+0x30>

00019c60 <myencoding_codepoint_to_lowercase_ascii_utf_8@@Base>:
   19c60:	cmp	r0, #127	; 0x7f
   19c64:	mov	r3, r0
   19c68:	bls	19c9c <myencoding_codepoint_to_lowercase_ascii_utf_8@@Base+0x3c>
   19c6c:	cmp	r0, #2048	; 0x800
   19c70:	bcc	19cf0 <myencoding_codepoint_to_lowercase_ascii_utf_8@@Base+0x90>
   19c74:	cmp	r0, #65536	; 0x10000
   19c78:	str	r4, [sp, #-8]!
   19c7c:	str	lr, [sp, #4]
   19c80:	bcc	19cb8 <myencoding_codepoint_to_lowercase_ascii_utf_8@@Base+0x58>
   19c84:	cmp	r0, #2097152	; 0x200000
   19c88:	movcs	r0, #0
   19c8c:	bcc	19d14 <myencoding_codepoint_to_lowercase_ascii_utf_8@@Base+0xb4>
   19c90:	ldr	r4, [sp]
   19c94:	add	sp, sp, #4
   19c98:	pop	{pc}		; (ldr pc, [sp], #4)
   19c9c:	ldr	r2, [pc, #172]	; 19d50 <myencoding_codepoint_to_lowercase_ascii_utf_8@@Base+0xf0>
   19ca0:	mov	r0, #1
   19ca4:	add	r2, pc, r2
   19ca8:	add	r3, r2, r3
   19cac:	ldrb	r3, [r3, #-888]	; 0xfffffc88
   19cb0:	strb	r3, [r1]
   19cb4:	bx	lr
   19cb8:	mvn	r0, #31
   19cbc:	ubfx	ip, r3, #6, #6
   19cc0:	and	lr, r3, #63	; 0x3f
   19cc4:	mvn	r2, #127	; 0x7f
   19cc8:	orr	r3, r0, r3, lsr #12
   19ccc:	ldr	r4, [sp]
   19cd0:	orr	ip, r2, ip
   19cd4:	orr	r2, r2, lr
   19cd8:	add	sp, sp, #4
   19cdc:	mov	r0, #3
   19ce0:	strb	r3, [r1]
   19ce4:	strb	ip, [r1, #1]
   19ce8:	strb	r2, [r1, #2]
   19cec:	pop	{pc}		; (ldr pc, [sp], #4)
   19cf0:	and	r2, r0, #63	; 0x3f
   19cf4:	mvn	ip, #63	; 0x3f
   19cf8:	mvn	r2, r2, lsl #25
   19cfc:	mov	r0, #2
   19d00:	orr	r3, ip, r3, lsr #6
   19d04:	mvn	r2, r2, lsr #25
   19d08:	strb	r3, [r1]
   19d0c:	strb	r2, [r1, #1]
   19d10:	bx	lr
   19d14:	mvn	r0, #15
   19d18:	ubfx	lr, r3, #12, #6
   19d1c:	mvn	r2, #127	; 0x7f
   19d20:	ubfx	r4, r3, #6, #6
   19d24:	and	ip, r3, #63	; 0x3f
   19d28:	orr	r3, r0, r3, lsr #18
   19d2c:	orr	lr, r2, lr
   19d30:	orr	ip, r2, ip
   19d34:	orr	r2, r2, r4
   19d38:	mov	r0, #4
   19d3c:	strb	r3, [r1]
   19d40:	strb	lr, [r1, #1]
   19d44:	strb	r2, [r1, #2]
   19d48:	strb	ip, [r1, #3]
   19d4c:	b	19c90 <myencoding_codepoint_to_lowercase_ascii_utf_8@@Base+0x30>
   19d50:	andeq	r6, r2, r4, ror #5

00019d54 <myencoding_ascii_utf_8_to_codepoint@@Base>:
   19d54:	ldrb	r3, [r0]
   19d58:	mov	r2, r0
   19d5c:	tst	r3, #128	; 0x80
   19d60:	beq	19d90 <myencoding_ascii_utf_8_to_codepoint@@Base+0x3c>
   19d64:	and	r0, r3, #224	; 0xe0
   19d68:	cmp	r0, #192	; 0xc0
   19d6c:	beq	19dd4 <myencoding_ascii_utf_8_to_codepoint@@Base+0x80>
   19d70:	and	r0, r3, #240	; 0xf0
   19d74:	cmp	r0, #224	; 0xe0
   19d78:	beq	19d9c <myencoding_ascii_utf_8_to_codepoint@@Base+0x48>
   19d7c:	and	r0, r3, #248	; 0xf8
   19d80:	cmp	r0, #240	; 0xf0
   19d84:	beq	19df8 <myencoding_ascii_utf_8_to_codepoint@@Base+0xa4>
   19d88:	mov	r0, #0
   19d8c:	bx	lr
   19d90:	mov	r0, #1
   19d94:	str	r3, [r1]
   19d98:	bx	lr
   19d9c:	lsl	r3, r3, #12
   19da0:	mov	r0, #3
   19da4:	and	r3, r3, #126976	; 0x1f000
   19da8:	str	r3, [r1]
   19dac:	ldrb	ip, [r2, #1]
   19db0:	lsl	ip, ip, #6
   19db4:	and	ip, ip, #8128	; 0x1fc0
   19db8:	orr	r3, ip, r3
   19dbc:	str	r3, [r1]
   19dc0:	ldrb	r2, [r2, #2]
   19dc4:	and	r2, r2, #127	; 0x7f
   19dc8:	orr	r3, r2, r3
   19dcc:	str	r3, [r1]
   19dd0:	bx	lr
   19dd4:	lsl	r3, r3, #6
   19dd8:	mov	r0, #2
   19ddc:	and	r3, r3, #4032	; 0xfc0
   19de0:	str	r3, [r1]
   19de4:	ldrb	r2, [r2, #1]
   19de8:	and	r2, r2, #127	; 0x7f
   19dec:	orr	r3, r2, r3
   19df0:	str	r3, [r1]
   19df4:	bx	lr
   19df8:	lsl	r3, r3, #18
   19dfc:	mov	r0, #4
   19e00:	and	r3, r3, #3932160	; 0x3c0000
   19e04:	str	r3, [r1]
   19e08:	ldrb	ip, [r2, #1]
   19e0c:	lsl	ip, ip, #12
   19e10:	and	ip, ip, #520192	; 0x7f000
   19e14:	orr	ip, ip, r3
   19e18:	str	ip, [r1]
   19e1c:	ldrb	r3, [r2, #2]
   19e20:	lsl	r3, r3, #6
   19e24:	and	r3, r3, #8128	; 0x1fc0
   19e28:	orr	r3, r3, ip
   19e2c:	str	r3, [r1]
   19e30:	ldrb	r2, [r2, #3]
   19e34:	and	r2, r2, #127	; 0x7f
   19e38:	orr	r3, r2, r3
   19e3c:	str	r3, [r1]
   19e40:	bx	lr

00019e44 <myencoding_codepoint_to_ascii_utf_16@@Base>:
   19e44:	lsrs	r3, r0, #16
   19e48:	ubfxeq	r2, r0, #8, #8
   19e4c:	uxtbeq	r3, r0
   19e50:	moveq	r0, #2
   19e54:	beq	19e84 <myencoding_codepoint_to_ascii_utf_16@@Base+0x40>
   19e58:	sub	r3, r0, #65536	; 0x10000
   19e5c:	mov	r0, #4
   19e60:	ubfx	r2, r3, #0, #10
   19e64:	lsr	r3, r3, #10
   19e68:	orr	r2, r2, #56320	; 0xdc00
   19e6c:	lsr	ip, r2, #8
   19e70:	orr	r3, r3, #55296	; 0xd800
   19e74:	strb	r2, [r1, #3]
   19e78:	ubfx	r2, r3, #8, #8
   19e7c:	uxtb	r3, r3
   19e80:	strb	ip, [r1, #2]
   19e84:	strb	r2, [r1]
   19e88:	strb	r3, [r1, #1]
   19e8c:	bx	lr

00019e90 <myencoding_convert_to_ascii_utf_8@@Base>:
   19e90:	strd	r4, [sp, #-36]!	; 0xffffffdc
   19e94:	mov	r5, r0
   19e98:	mov	r4, r3
   19e9c:	strd	r6, [sp, #8]
   19ea0:	mov	r7, r2
   19ea4:	strd	r8, [sp, #16]
   19ea8:	mov	r9, r1
   19eac:	ldr	r1, [r0]
   19eb0:	strd	sl, [sp, #24]
   19eb4:	str	lr, [sp, #32]
   19eb8:	sub	sp, sp, #36	; 0x24
   19ebc:	cmp	r1, #0
   19ec0:	beq	19fa4 <myencoding_convert_to_ascii_utf_8@@Base+0x114>
   19ec4:	mov	r2, #0
   19ec8:	mov	r3, #0
   19ecc:	add	r8, sp, #8
   19ed0:	mov	r0, r4
   19ed4:	strd	r2, [r8, #8]
   19ed8:	strd	r2, [sp, #8]
   19edc:	strd	r2, [r8, #16]
   19ee0:	bl	107c0 <myencoding_get_function_by_id@plt>
   19ee4:	cmp	r7, #0
   19ee8:	mov	sl, r0
   19eec:	beq	19fc4 <myencoding_convert_to_ascii_utf_8@@Base+0x134>
   19ef0:	lsr	fp, r7, #1
   19ef4:	add	r7, r9, r7
   19ef8:	sub	r4, r9, #1
   19efc:	sub	r7, r7, #1
   19f00:	add	fp, fp, #6
   19f04:	mov	r1, r8
   19f08:	ldrb	r0, [r4, #1]
   19f0c:	add	r6, r4, #1
   19f10:	blx	sl
   19f14:	cmp	r0, #0
   19f18:	bne	19f74 <myencoding_convert_to_ascii_utf_8@@Base+0xe4>
   19f1c:	ldr	ip, [r5]
   19f20:	ldmib	r5, {r0, r3}
   19f24:	add	r2, r3, fp
   19f28:	add	lr, r3, #6
   19f2c:	cmp	lr, r0
   19f30:	mov	r1, r2
   19f34:	str	r2, [sp, #4]
   19f38:	bcc	19f5c <myencoding_convert_to_ascii_utf_8@@Base+0xcc>
   19f3c:	mov	r0, ip
   19f40:	bl	fb84 <mycore_realloc@plt>
   19f44:	subs	ip, r0, #0
   19f48:	beq	19fc4 <myencoding_convert_to_ascii_utf_8@@Base+0x134>
   19f4c:	ldr	r2, [sp, #4]
   19f50:	str	ip, [r5]
   19f54:	ldr	r3, [r5, #8]
   19f58:	str	r2, [r5, #4]
   19f5c:	add	r1, ip, r3
   19f60:	ldr	r0, [sp, #20]
   19f64:	bl	10e20 <myencoding_codepoint_to_ascii_utf_8@plt>
   19f68:	ldr	r3, [r5, #8]
   19f6c:	add	r0, r3, r0
   19f70:	str	r0, [r5, #8]
   19f74:	add	r0, r4, #2
   19f78:	cmp	r6, r7
   19f7c:	mov	r4, r6
   19f80:	sub	r0, r0, r9
   19f84:	bne	19f04 <myencoding_convert_to_ascii_utf_8@@Base+0x74>
   19f88:	add	sp, sp, #36	; 0x24
   19f8c:	ldrd	r4, [sp]
   19f90:	ldrd	r6, [sp, #8]
   19f94:	ldrd	r8, [sp, #16]
   19f98:	ldrd	sl, [sp, #24]
   19f9c:	add	sp, sp, #32
   19fa0:	pop	{pc}		; (ldr pc, [sp], #4)
   19fa4:	add	r3, r2, #1
   19fa8:	mov	r0, r3
   19fac:	str	r3, [r5, #4]
   19fb0:	str	r1, [r5, #8]
   19fb4:	bl	10c28 <mycore_malloc@plt>
   19fb8:	cmp	r0, #0
   19fbc:	str	r0, [r5]
   19fc0:	bne	19ec4 <myencoding_convert_to_ascii_utf_8@@Base+0x34>
   19fc4:	mov	r0, #0
   19fc8:	b	19f88 <myencoding_convert_to_ascii_utf_8@@Base+0xf8>

00019fcc <myencoding_string_append_chunk@@Base>:
   19fcc:	strd	r4, [sp, #-24]!	; 0xffffffe8
   19fd0:	mov	r5, r3
   19fd4:	mov	r4, r0
   19fd8:	ldr	r0, [sp, #24]
   19fdc:	strd	r6, [sp, #8]
   19fe0:	mov	r7, r2
   19fe4:	mov	r6, r1
   19fe8:	str	r8, [sp, #16]
   19fec:	str	lr, [sp, #20]
   19ff0:	bl	107c0 <myencoding_get_function_by_id@plt>
   19ff4:	cmp	r5, #0
   19ff8:	subne	r3, r5, #1
   19ffc:	movne	r8, r0
   1a000:	subne	r5, r7, #1
   1a004:	addne	r7, r7, r3
   1a008:	bne	1a034 <myencoding_string_append_chunk@@Base+0x68>
   1a00c:	b	1a068 <myencoding_string_append_chunk@@Base+0x9c>
   1a010:	ldr	r1, [r4]
   1a014:	ldr	r0, [r6, #12]
   1a018:	add	r1, r1, r3
   1a01c:	bl	10e20 <myencoding_codepoint_to_ascii_utf_8@plt>
   1a020:	ldr	r3, [r4, #8]
   1a024:	add	r0, r3, r0
   1a028:	str	r0, [r4, #8]
   1a02c:	cmp	r7, r5
   1a030:	beq	1a068 <myencoding_string_append_chunk@@Base+0x9c>
   1a034:	mov	r1, r6
   1a038:	ldrb	r0, [r5, #1]!
   1a03c:	blx	r8
   1a040:	cmp	r0, #0
   1a044:	bne	1a02c <myencoding_string_append_chunk@@Base+0x60>
   1a048:	ldrd	r2, [r4, #4]
   1a04c:	add	r1, r3, #5
   1a050:	cmp	r1, r2
   1a054:	bcc	1a010 <myencoding_string_append_chunk@@Base+0x44>
   1a058:	mov	r0, r4
   1a05c:	bl	108f8 <mycore_string_realloc@plt>
   1a060:	ldr	r3, [r4, #8]
   1a064:	b	1a010 <myencoding_string_append_chunk@@Base+0x44>
   1a068:	ldr	r3, [r4, #4]
   1a06c:	ldr	r1, [r4, #8]
   1a070:	cmp	r1, r3
   1a074:	bcs	1a098 <myencoding_string_append_chunk@@Base+0xcc>
   1a078:	ldr	r3, [r4]
   1a07c:	mov	r2, #0
   1a080:	strb	r2, [r3, r1]
   1a084:	ldrd	r4, [sp]
   1a088:	ldrd	r6, [sp, #8]
   1a08c:	ldr	r8, [sp, #16]
   1a090:	add	sp, sp, #20
   1a094:	pop	{pc}		; (ldr pc, [sp], #4)
   1a098:	add	r1, r1, #1
   1a09c:	mov	r0, r4
   1a0a0:	bl	108f8 <mycore_string_realloc@plt>
   1a0a4:	ldr	r1, [r4, #8]
   1a0a8:	b	1a078 <myencoding_string_append_chunk@@Base+0xac>

0001a0ac <myencoding_string_append@@Base>:
   1a0ac:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1a0b0:	mov	r5, r0
   1a0b4:	strd	r6, [sp, #8]
   1a0b8:	mov	r6, r3
   1a0bc:	mov	r7, r1
   1a0c0:	str	r8, [sp, #16]
   1a0c4:	mov	r8, r2
   1a0c8:	str	lr, [sp, #20]
   1a0cc:	sub	sp, sp, #32
   1a0d0:	add	r4, sp, #8
   1a0d4:	mov	r0, r4
   1a0d8:	bl	10160 <myencoding_result_clean@plt>
   1a0dc:	mov	r3, r8
   1a0e0:	mov	r2, r7
   1a0e4:	str	r6, [sp]
   1a0e8:	mov	r1, r4
   1a0ec:	mov	r0, r5
   1a0f0:	bl	fbc0 <myencoding_string_append_chunk@plt>
   1a0f4:	add	sp, sp, #32
   1a0f8:	ldrd	r4, [sp]
   1a0fc:	ldrd	r6, [sp, #8]
   1a100:	ldr	r8, [sp, #16]
   1a104:	add	sp, sp, #20
   1a108:	pop	{pc}		; (ldr pc, [sp], #4)

0001a10c <myencoding_string_append_one@@Base>:
   1a10c:	strd	r4, [sp, #-16]!
   1a110:	mov	r4, r0
   1a114:	mov	r0, r3
   1a118:	mov	r5, r1
   1a11c:	str	r6, [sp, #8]
   1a120:	mov	r6, r2
   1a124:	str	lr, [sp, #12]
   1a128:	bl	107c0 <myencoding_get_function_by_id@plt>
   1a12c:	mov	r3, r0
   1a130:	mov	r1, r5
   1a134:	mov	r0, r6
   1a138:	blx	r3
   1a13c:	cmp	r0, #0
   1a140:	bne	1a17c <myencoding_string_append_one@@Base+0x70>
   1a144:	ldrd	r2, [r4, #4]
   1a148:	add	r1, r3, #5
   1a14c:	cmp	r1, r2
   1a150:	bcs	1a18c <myencoding_string_append_one@@Base+0x80>
   1a154:	ldr	r1, [r4]
   1a158:	ldr	r0, [r5, #12]
   1a15c:	add	r1, r1, r3
   1a160:	bl	10e20 <myencoding_codepoint_to_ascii_utf_8@plt>
   1a164:	ldr	r2, [r4]
   1a168:	mov	r1, #0
   1a16c:	ldr	r3, [r4, #8]
   1a170:	add	r0, r0, r3
   1a174:	str	r0, [r4, #8]
   1a178:	strb	r1, [r2, r0]
   1a17c:	ldrd	r4, [sp]
   1a180:	ldr	r6, [sp, #8]
   1a184:	add	sp, sp, #12
   1a188:	pop	{pc}		; (ldr pc, [sp], #4)
   1a18c:	mov	r0, r4
   1a190:	bl	108f8 <mycore_string_realloc@plt>
   1a194:	ldr	r3, [r4, #8]
   1a198:	b	1a154 <myencoding_string_append_one@@Base+0x48>

0001a19c <myencoding_string_append_chunk_lowercase_ascii@@Base>:
   1a19c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1a1a0:	mov	r5, r3
   1a1a4:	mov	r4, r0
   1a1a8:	ldr	r0, [sp, #32]
   1a1ac:	strd	r6, [sp, #8]
   1a1b0:	mov	r6, r1
   1a1b4:	mov	r7, r2
   1a1b8:	strd	r8, [sp, #16]
   1a1bc:	str	sl, [sp, #24]
   1a1c0:	str	lr, [sp, #28]
   1a1c4:	bl	107c0 <myencoding_get_function_by_id@plt>
   1a1c8:	cmp	r5, #0
   1a1cc:	beq	1a268 <myencoding_string_append_chunk_lowercase_ascii@@Base+0xcc>
   1a1d0:	ldr	r9, [pc, #216]	; 1a2b0 <myencoding_string_append_chunk_lowercase_ascii@@Base+0x114>
   1a1d4:	sub	r3, r5, #1
   1a1d8:	mov	r8, r0
   1a1dc:	sub	r5, r7, #1
   1a1e0:	add	r7, r7, r3
   1a1e4:	add	r9, pc, r9
   1a1e8:	b	1a22c <myencoding_string_append_chunk_lowercase_ascii@@Base+0x90>
   1a1ec:	ldr	r3, [r4]
   1a1f0:	ldr	r0, [r6, #12]
   1a1f4:	add	r1, r3, r1
   1a1f8:	bl	10e20 <myencoding_codepoint_to_ascii_utf_8@plt>
   1a1fc:	cmp	r0, #1
   1a200:	bne	1a218 <myencoding_string_append_chunk_lowercase_ascii@@Base+0x7c>
   1a204:	ldrb	r1, [r5]
   1a208:	ldr	r2, [r4]
   1a20c:	ldr	r3, [r4, #8]
   1a210:	ldrb	r1, [r9, r1]
   1a214:	strb	r1, [r2, r3]
   1a218:	ldr	r3, [r4, #8]
   1a21c:	add	r3, r3, r0
   1a220:	str	r3, [r4, #8]
   1a224:	cmp	r7, r5
   1a228:	beq	1a268 <myencoding_string_append_chunk_lowercase_ascii@@Base+0xcc>
   1a22c:	mov	r1, r6
   1a230:	ldrb	r0, [r5, #1]!
   1a234:	blx	r8
   1a238:	cmp	r0, #0
   1a23c:	bne	1a224 <myencoding_string_append_chunk_lowercase_ascii@@Base+0x88>
   1a240:	ldr	r3, [r4, #4]
   1a244:	ldr	r1, [r4, #8]
   1a248:	add	r2, r1, #5
   1a24c:	cmp	r2, r3
   1a250:	bcc	1a1ec <myencoding_string_append_chunk_lowercase_ascii@@Base+0x50>
   1a254:	add	r1, r1, #6
   1a258:	mov	r0, r4
   1a25c:	bl	108f8 <mycore_string_realloc@plt>
   1a260:	ldr	r1, [r4, #8]
   1a264:	b	1a1ec <myencoding_string_append_chunk_lowercase_ascii@@Base+0x50>
   1a268:	ldr	r3, [r4, #4]
   1a26c:	ldr	r1, [r4, #8]
   1a270:	cmp	r1, r3
   1a274:	bcs	1a29c <myencoding_string_append_chunk_lowercase_ascii@@Base+0x100>
   1a278:	ldr	r3, [r4]
   1a27c:	mov	r2, #0
   1a280:	strb	r2, [r3, r1]
   1a284:	ldrd	r4, [sp]
   1a288:	ldrd	r6, [sp, #8]
   1a28c:	ldrd	r8, [sp, #16]
   1a290:	ldr	sl, [sp, #24]
   1a294:	add	sp, sp, #28
   1a298:	pop	{pc}		; (ldr pc, [sp], #4)
   1a29c:	add	r1, r1, #1
   1a2a0:	mov	r0, r4
   1a2a4:	bl	108f8 <mycore_string_realloc@plt>
   1a2a8:	ldr	r1, [r4, #8]
   1a2ac:	b	1a278 <myencoding_string_append_chunk_lowercase_ascii@@Base+0xdc>
   1a2b0:			; <UNDEFINED> instruction: 0x0007b6b4

0001a2b4 <myencoding_string_append_lowercase_ascii@@Base>:
   1a2b4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1a2b8:	mov	r5, r0
   1a2bc:	strd	r6, [sp, #8]
   1a2c0:	mov	r6, r3
   1a2c4:	mov	r7, r1
   1a2c8:	str	r8, [sp, #16]
   1a2cc:	mov	r8, r2
   1a2d0:	str	lr, [sp, #20]
   1a2d4:	sub	sp, sp, #32
   1a2d8:	add	r4, sp, #8
   1a2dc:	mov	r0, r4
   1a2e0:	bl	10160 <myencoding_result_clean@plt>
   1a2e4:	mov	r3, r8
   1a2e8:	mov	r2, r7
   1a2ec:	str	r6, [sp]
   1a2f0:	mov	r1, r4
   1a2f4:	mov	r0, r5
   1a2f8:	bl	10c1c <myencoding_string_append_chunk_lowercase_ascii@plt>
   1a2fc:	add	sp, sp, #32
   1a300:	ldrd	r4, [sp]
   1a304:	ldrd	r6, [sp, #8]
   1a308:	ldr	r8, [sp, #16]
   1a30c:	add	sp, sp, #20
   1a310:	pop	{pc}		; (ldr pc, [sp], #4)

0001a314 <myhtml_callback_before_token_done@@Base>:
   1a314:	ldr	r0, [r0, #220]	; 0xdc
   1a318:	bx	lr

0001a31c <myhtml_callback_after_token_done@@Base>:
   1a31c:	ldr	r0, [r0, #224]	; 0xe0
   1a320:	bx	lr

0001a324 <myhtml_callback_before_token_done_set@@Base>:
   1a324:	str	r1, [r0, #220]	; 0xdc
   1a328:	str	r2, [r0, #228]	; 0xe4
   1a32c:	bx	lr

0001a330 <myhtml_callback_after_token_done_set@@Base>:
   1a330:	str	r1, [r0, #224]	; 0xe0
   1a334:	str	r2, [r0, #232]	; 0xe8
   1a338:	bx	lr

0001a33c <myhtml_callback_tree_node_insert@@Base>:
   1a33c:	ldr	r0, [r0, #236]	; 0xec
   1a340:	bx	lr

0001a344 <myhtml_callback_tree_node_remove@@Base>:
   1a344:	ldr	r0, [r0, #240]	; 0xf0
   1a348:	bx	lr

0001a34c <myhtml_callback_tree_node_insert_set@@Base>:
   1a34c:	str	r1, [r0, #236]	; 0xec
   1a350:	str	r2, [r0, #244]	; 0xf4
   1a354:	bx	lr

0001a358 <myhtml_callback_tree_node_remove_set@@Base>:
   1a358:	str	r1, [r0, #240]	; 0xf0
   1a35c:	str	r2, [r0, #248]	; 0xf8
   1a360:	bx	lr

0001a364 <myhtml_charef_find@@Base>:
   1a364:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1a368:	strd	r6, [sp, #8]
   1a36c:	ldr	r7, [pc, #196]	; 1a438 <myhtml_charef_find@@Base+0xd4>
   1a370:	str	r8, [sp, #16]
   1a374:	str	lr, [sp, #20]
   1a378:	ldrb	lr, [r0]
   1a37c:	add	r7, pc, r7
   1a380:	lsl	r6, lr, #1
   1a384:	add	ip, r6, lr
   1a388:	ldrb	r5, [r7, ip, lsl #3]
   1a38c:	add	ip, r7, ip, lsl #3
   1a390:	cmp	r5, #0
   1a394:	beq	1a3d4 <myhtml_charef_find@@Base+0x70>
   1a398:	ldr	r4, [r1]
   1a39c:	ldrb	r8, [r0, r4]
   1a3a0:	cmp	r8, r5
   1a3a4:	beq	1a3b4 <myhtml_charef_find@@Base+0x50>
   1a3a8:	bls	1a3d4 <myhtml_charef_find@@Base+0x70>
   1a3ac:	add	lr, lr, #1
   1a3b0:	b	1a380 <myhtml_charef_find@@Base+0x1c>
   1a3b4:	ldr	r5, [ip, #4]
   1a3b8:	add	r4, r4, #1
   1a3bc:	str	r4, [r1]
   1a3c0:	cmp	r5, #0
   1a3c4:	cmpne	r4, r2
   1a3c8:	bcs	1a418 <myhtml_charef_find@@Base+0xb4>
   1a3cc:	mov	lr, r5
   1a3d0:	b	1a380 <myhtml_charef_find@@Base+0x1c>
   1a3d4:	cmp	r3, #0
   1a3d8:	beq	1a3f4 <myhtml_charef_find@@Base+0x90>
   1a3dc:	ldr	r2, [pc, #88]	; 1a43c <myhtml_charef_find@@Base+0xd8>
   1a3e0:	add	r1, r6, lr
   1a3e4:	add	r2, pc, r2
   1a3e8:	add	r2, r2, r1, lsl #3
   1a3ec:	ldr	r2, [r2, #20]
   1a3f0:	str	r2, [r3]
   1a3f4:	ldr	r0, [pc, #68]	; 1a440 <myhtml_charef_find@@Base+0xdc>
   1a3f8:	add	lr, r6, lr
   1a3fc:	add	r0, pc, r0
   1a400:	add	r0, r0, lr, lsl #3
   1a404:	ldrd	r4, [sp]
   1a408:	ldrd	r6, [sp, #8]
   1a40c:	ldr	r8, [sp, #16]
   1a410:	add	sp, sp, #20
   1a414:	pop	{pc}		; (ldr pc, [sp], #4)
   1a418:	cmp	r3, #0
   1a41c:	ldr	r0, [pc, #32]	; 1a444 <myhtml_charef_find@@Base+0xe0>
   1a420:	add	lr, r6, lr
   1a424:	ldrne	r2, [ip, #20]
   1a428:	add	r0, pc, r0
   1a42c:	add	r0, r0, lr, lsl #3
   1a430:	strne	r2, [r3]
   1a434:	b	1a404 <myhtml_charef_find@@Base+0xa0>
   1a438:	andeq	fp, r7, ip, lsl r6
   1a43c:			; <UNDEFINED> instruction: 0x0007b5b4
   1a440:	muleq	r7, ip, r5
   1a444:	andeq	fp, r7, r0, ror r5

0001a448 <myhtml_charef_get_first_position@@Base>:
   1a448:	ldr	r3, [pc, #12]	; 1a45c <myhtml_charef_get_first_position@@Base+0x14>
   1a44c:	add	r0, r0, r0, lsl #1
   1a450:	add	r3, pc, r3
   1a454:	add	r0, r3, r0, lsl #3
   1a458:	bx	lr
   1a45c:	andeq	fp, r7, r8, asr #10

0001a460 <myhtml_charef_find_by_pos@@Base>:
   1a460:	ldr	ip, [r2]
   1a464:	strd	r4, [sp, #-20]!	; 0xffffffec
   1a468:	strd	r6, [sp, #8]
   1a46c:	str	lr, [sp, #16]
   1a470:	ldr	r7, [sp, #20]
   1a474:	ldrb	ip, [r1, ip]
   1a478:	cmp	ip, #38	; 0x26
   1a47c:	beq	1a530 <myhtml_charef_find_by_pos@@Base+0xd0>
   1a480:	ldr	r6, [pc, #312]	; 1a5c0 <myhtml_charef_find_by_pos@@Base+0x160>
   1a484:	mov	ip, #0
   1a488:	str	ip, [r7, #12]
   1a48c:	add	r6, pc, r6
   1a490:	add	ip, r0, r0, lsl #1
   1a494:	ldrb	r4, [r6, ip, lsl #3]
   1a498:	add	lr, r6, ip, lsl #3
   1a49c:	cmp	r4, #0
   1a4a0:	beq	1a504 <myhtml_charef_find_by_pos@@Base+0xa4>
   1a4a4:	ldr	ip, [r2]
   1a4a8:	ldrb	r5, [r1, ip]
   1a4ac:	cmp	r5, r4
   1a4b0:	beq	1a4c0 <myhtml_charef_find_by_pos@@Base+0x60>
   1a4b4:	bls	1a504 <myhtml_charef_find_by_pos@@Base+0xa4>
   1a4b8:	add	r0, r0, #1
   1a4bc:	b	1a490 <myhtml_charef_find_by_pos@@Base+0x30>
   1a4c0:	cmp	r5, #59	; 0x3b
   1a4c4:	beq	1a56c <myhtml_charef_find_by_pos@@Base+0x10c>
   1a4c8:	ldr	r0, [lr, #4]
   1a4cc:	add	ip, ip, #1
   1a4d0:	str	ip, [r2]
   1a4d4:	cmp	r0, #0
   1a4d8:	beq	1a580 <myhtml_charef_find_by_pos@@Base+0x120>
   1a4dc:	cmp	ip, r3
   1a4e0:	ldr	r4, [lr, #20]
   1a4e4:	bcs	1a590 <myhtml_charef_find_by_pos@@Base+0x130>
   1a4e8:	ldrb	r5, [r1, ip]
   1a4ec:	cmp	r5, #38	; 0x26
   1a4f0:	beq	1a5a4 <myhtml_charef_find_by_pos@@Base+0x144>
   1a4f4:	cmp	r4, #0
   1a4f8:	strne	lr, [r7, #4]
   1a4fc:	strne	ip, [r7, #8]
   1a500:	b	1a490 <myhtml_charef_find_by_pos@@Base+0x30>
   1a504:	ldr	r0, [r7, #4]
   1a508:	mov	r3, #1
   1a50c:	str	r3, [r7, #12]
   1a510:	cmp	r0, #0
   1a514:	beq	1a554 <myhtml_charef_find_by_pos@@Base+0xf4>
   1a518:	ldr	r3, [r7, #8]
   1a51c:	str	r3, [r2]
   1a520:	ldrd	r4, [sp]
   1a524:	ldrd	r6, [sp, #8]
   1a528:	add	sp, sp, #16
   1a52c:	pop	{pc}		; (ldr pc, [sp], #4)
   1a530:	ldr	r0, [r7]
   1a534:	mov	r3, #1
   1a538:	str	r3, [r7, #12]
   1a53c:	ldr	r3, [r0, #20]
   1a540:	cmp	r3, #0
   1a544:	bne	1a520 <myhtml_charef_find_by_pos@@Base+0xc0>
   1a548:	ldr	r0, [r7, #4]
   1a54c:	cmp	r0, #0
   1a550:	bne	1a518 <myhtml_charef_find_by_pos@@Base+0xb8>
   1a554:	ldr	r0, [pc, #104]	; 1a5c4 <myhtml_charef_find_by_pos@@Base+0x164>
   1a558:	ldrd	r4, [sp]
   1a55c:	ldrd	r6, [sp, #8]
   1a560:	add	sp, sp, #16
   1a564:	add	r0, pc, r0
   1a568:	pop	{pc}		; (ldr pc, [sp], #4)
   1a56c:	mov	r3, #1
   1a570:	mov	r0, lr
   1a574:	str	lr, [r7]
   1a578:	str	r3, [r7, #12]
   1a57c:	b	1a520 <myhtml_charef_find_by_pos@@Base+0xc0>
   1a580:	mov	r3, #1
   1a584:	mov	r0, lr
   1a588:	str	r3, [r7, #12]
   1a58c:	b	1a520 <myhtml_charef_find_by_pos@@Base+0xc0>
   1a590:	cmp	r4, #0
   1a594:	mov	r0, lr
   1a598:	str	lr, [r7]
   1a59c:	stmibne	r7, {r0, ip}
   1a5a0:	b	1a520 <myhtml_charef_find_by_pos@@Base+0xc0>
   1a5a4:	mov	r3, #1
   1a5a8:	cmp	r4, #0
   1a5ac:	str	lr, [r7]
   1a5b0:	mov	r0, lr
   1a5b4:	str	r3, [r7, #12]
   1a5b8:	beq	1a548 <myhtml_charef_find_by_pos@@Base+0xe8>
   1a5bc:	b	1a520 <myhtml_charef_find_by_pos@@Base+0xc0>
   1a5c0:	andeq	fp, r7, ip, lsl #10
   1a5c4:	andeq	fp, r7, r4, lsr r4

0001a5c8 <myhtml_data_process_state_ampersand_data@@Base>:
   1a5c8:	mov	ip, r0
   1a5cc:	strd	r4, [sp, #-28]!	; 0xffffffe4
   1a5d0:	mov	r4, r0
   1a5d4:	ldr	r0, [ip, #44]!	; 0x2c
   1a5d8:	mov	r5, r3
   1a5dc:	ldr	r0, [r0, #4]
   1a5e0:	strd	r6, [sp, #8]
   1a5e4:	mov	r7, r2
   1a5e8:	mov	r6, r1
   1a5ec:	strd	r8, [sp, #16]
   1a5f0:	mov	r1, r2
   1a5f4:	str	lr, [sp, #24]
   1a5f8:	sub	sp, sp, #20
   1a5fc:	add	r2, sp, #12
   1a600:	ldr	r9, [pc, #652]	; 1a894 <myhtml_data_process_state_ampersand_data@@Base+0x2cc>
   1a604:	str	ip, [sp]
   1a608:	str	r3, [sp, #12]
   1a60c:	ldr	r3, [sp, #48]	; 0x30
   1a610:	bl	10754 <myhtml_charef_find_by_pos@plt>
   1a614:	ldr	r3, [r4, #56]	; 0x38
   1a618:	add	r9, pc, r9
   1a61c:	cmp	r3, #0
   1a620:	beq	1a758 <myhtml_data_process_state_ampersand_data@@Base+0x190>
   1a624:	ldr	r3, [pc, #620]	; 1a898 <myhtml_data_process_state_ampersand_data@@Base+0x2d0>
   1a628:	mov	r8, r0
   1a62c:	ldr	r2, [sp, #12]
   1a630:	ldr	r3, [r9, r3]
   1a634:	str	r3, [r4]
   1a638:	ldrb	r3, [r7, r2]
   1a63c:	cmp	r3, #59	; 0x3b
   1a640:	addeq	r2, r2, #1
   1a644:	streq	r2, [sp, #12]
   1a648:	beq	1a6c8 <myhtml_data_process_state_ampersand_data@@Base+0x100>
   1a64c:	ldrb	r1, [r4, #60]	; 0x3c
   1a650:	cmp	r1, #0
   1a654:	beq	1a6c8 <myhtml_data_process_state_ampersand_data@@Base+0x100>
   1a658:	cmp	r3, #61	; 0x3d
   1a65c:	beq	1a674 <myhtml_data_process_state_ampersand_data@@Base+0xac>
   1a660:	ldr	r1, [pc, #564]	; 1a89c <myhtml_data_process_state_ampersand_data@@Base+0x2d4>
   1a664:	add	r1, pc, r1
   1a668:	ldr	r3, [r1, r3, lsl #2]
   1a66c:	cmp	r3, #255	; 0xff
   1a670:	beq	1a6c8 <myhtml_data_process_state_ampersand_data@@Base+0x100>
   1a674:	sub	r2, r2, r5
   1a678:	add	r1, r7, r5
   1a67c:	ldr	r3, [r4, #32]
   1a680:	mov	r0, r6
   1a684:	bl	10bb0 <myhtml_string_before_append_any_preprocessing@plt>
   1a688:	ldr	r2, [sp, #12]
   1a68c:	add	r5, r5, r0
   1a690:	cmp	r2, r5
   1a694:	beq	1a73c <myhtml_data_process_state_ampersand_data@@Base+0x174>
   1a698:	ldr	r0, [r4, #4]
   1a69c:	add	r1, r7, r5
   1a6a0:	sub	r2, r2, r5
   1a6a4:	ldrb	ip, [r4, #61]	; 0x3d
   1a6a8:	cmp	r0, #0
   1a6ac:	bne	1a870 <myhtml_data_process_state_ampersand_data@@Base+0x2a8>
   1a6b0:	mov	r3, ip
   1a6b4:	mov	r0, r6
   1a6b8:	bl	1016c <myhtml_string_append_with_preprocessing@plt>
   1a6bc:	str	r0, [r4, #32]
   1a6c0:	ldr	r5, [sp, #12]
   1a6c4:	b	1a73c <myhtml_data_process_state_ampersand_data@@Base+0x174>
   1a6c8:	ldr	r3, [r8, #20]
   1a6cc:	cmp	r3, #0
   1a6d0:	beq	1a7f8 <myhtml_data_process_state_ampersand_data@@Base+0x230>
   1a6d4:	add	r5, r8, #12
   1a6d8:	mov	r7, #0
   1a6dc:	ldr	r3, [r6, #4]
   1a6e0:	ldr	r1, [r6, #8]
   1a6e4:	add	r1, r1, #5
   1a6e8:	cmp	r1, r3
   1a6ec:	bcs	1a7bc <myhtml_data_process_state_ampersand_data@@Base+0x1f4>
   1a6f0:	ldr	r1, [r6]
   1a6f4:	add	r7, r7, #1
   1a6f8:	ldr	r3, [r4, #36]	; 0x24
   1a6fc:	ldr	r0, [r5], #4
   1a700:	add	r1, r1, r3
   1a704:	bl	10e20 <myencoding_codepoint_to_ascii_utf_8@plt>
   1a708:	ldr	r3, [r4, #36]	; 0x24
   1a70c:	ldr	r2, [r8, #20]
   1a710:	add	r0, r0, r3
   1a714:	cmp	r2, r7
   1a718:	str	r0, [r4, #36]	; 0x24
   1a71c:	bhi	1a6dc <myhtml_data_process_state_ampersand_data@@Base+0x114>
   1a720:	ldr	r3, [r6]
   1a724:	mov	r2, #0
   1a728:	str	r0, [r6, #8]
   1a72c:	strb	r2, [r3, r0]
   1a730:	ldr	r5, [sp, #12]
   1a734:	mov	r2, #0
   1a738:	str	r2, [r4, #48]	; 0x30
   1a73c:	mov	r0, r5
   1a740:	add	sp, sp, #20
   1a744:	ldrd	r4, [sp]
   1a748:	ldrd	r6, [sp, #8]
   1a74c:	ldrd	r8, [sp, #16]
   1a750:	add	sp, sp, #24
   1a754:	pop	{pc}		; (ldr pc, [sp], #4)
   1a758:	ldr	r2, [sp, #12]
   1a75c:	add	r1, r7, r5
   1a760:	mov	r0, r6
   1a764:	ldr	r3, [r4, #32]
   1a768:	sub	r2, r2, r5
   1a76c:	bl	10bb0 <myhtml_string_before_append_any_preprocessing@plt>
   1a770:	ldr	r2, [sp, #12]
   1a774:	add	r5, r5, r0
   1a778:	cmp	r2, r5
   1a77c:	beq	1a73c <myhtml_data_process_state_ampersand_data@@Base+0x174>
   1a780:	ldr	r0, [r4, #4]
   1a784:	add	r1, r7, r5
   1a788:	sub	r2, r2, r5
   1a78c:	ldrb	ip, [r4, #61]	; 0x3d
   1a790:	cmp	r0, #0
   1a794:	beq	1a6b0 <myhtml_data_process_state_ampersand_data@@Base+0xe8>
   1a798:	mov	r3, r2
   1a79c:	mov	r2, r1
   1a7a0:	stm	sp, {r0, ip}
   1a7a4:	add	r1, r4, #8
   1a7a8:	mov	r0, r6
   1a7ac:	bl	10da8 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1a7b0:	str	r0, [r4, #32]
   1a7b4:	ldr	r5, [sp, #12]
   1a7b8:	b	1a73c <myhtml_data_process_state_ampersand_data@@Base+0x174>
   1a7bc:	mov	r0, r6
   1a7c0:	add	r7, r7, #1
   1a7c4:	bl	108f8 <mycore_string_realloc@plt>
   1a7c8:	ldr	r1, [r6]
   1a7cc:	ldr	r3, [r4, #36]	; 0x24
   1a7d0:	ldr	r0, [r5], #4
   1a7d4:	add	r1, r1, r3
   1a7d8:	bl	10e20 <myencoding_codepoint_to_ascii_utf_8@plt>
   1a7dc:	ldr	r3, [r4, #36]	; 0x24
   1a7e0:	ldr	r2, [r8, #20]
   1a7e4:	add	r0, r0, r3
   1a7e8:	cmp	r7, r2
   1a7ec:	str	r0, [r4, #36]	; 0x24
   1a7f0:	bcc	1a6dc <myhtml_data_process_state_ampersand_data@@Base+0x114>
   1a7f4:	b	1a720 <myhtml_data_process_state_ampersand_data@@Base+0x158>
   1a7f8:	sub	r2, r2, r5
   1a7fc:	add	r1, r7, r5
   1a800:	ldr	r3, [r4, #32]
   1a804:	mov	r0, r6
   1a808:	bl	10bb0 <myhtml_string_before_append_any_preprocessing@plt>
   1a80c:	ldr	r2, [sp, #12]
   1a810:	add	r5, r5, r0
   1a814:	cmp	r2, r5
   1a818:	beq	1a734 <myhtml_data_process_state_ampersand_data@@Base+0x16c>
   1a81c:	ldr	r0, [r4, #4]
   1a820:	add	r1, r7, r5
   1a824:	sub	r2, r2, r5
   1a828:	ldrb	ip, [r4, #61]	; 0x3d
   1a82c:	cmp	r0, #0
   1a830:	bne	1a84c <myhtml_data_process_state_ampersand_data@@Base+0x284>
   1a834:	mov	r3, ip
   1a838:	mov	r0, r6
   1a83c:	bl	1016c <myhtml_string_append_with_preprocessing@plt>
   1a840:	str	r0, [r4, #32]
   1a844:	ldr	r5, [sp, #12]
   1a848:	b	1a734 <myhtml_data_process_state_ampersand_data@@Base+0x16c>
   1a84c:	mov	r3, r2
   1a850:	mov	r2, r1
   1a854:	stm	sp, {r0, ip}
   1a858:	add	r1, r4, #8
   1a85c:	mov	r0, r6
   1a860:	bl	10da8 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1a864:	str	r0, [r4, #32]
   1a868:	ldr	r5, [sp, #12]
   1a86c:	b	1a734 <myhtml_data_process_state_ampersand_data@@Base+0x16c>
   1a870:	mov	r3, r2
   1a874:	mov	r2, r1
   1a878:	stm	sp, {r0, ip}
   1a87c:	add	r1, r4, #8
   1a880:	mov	r0, r6
   1a884:	bl	10da8 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1a888:	str	r0, [r4, #32]
   1a88c:	ldr	r5, [sp, #12]
   1a890:	b	1a73c <myhtml_data_process_state_ampersand_data@@Base+0x174>
   1a894:	andeq	lr, pc, r0, ror #19
   1a898:	andeq	r0, r0, ip, lsr #19
   1a89c:	andeq	r3, lr, r4, lsr #13

0001a8a0 <myhtml_data_process_entry_clean@@Base>:
   1a8a0:	mov	r2, #60	; 0x3c
   1a8a4:	mov	r1, #0
   1a8a8:	strd	r4, [sp, #-16]!
   1a8ac:	mov	r5, r0
   1a8b0:	ldr	r4, [pc, #44]	; 1a8e4 <myhtml_data_process_entry_clean@@Base+0x44>
   1a8b4:	add	r0, r0, #4
   1a8b8:	str	r6, [sp, #8]
   1a8bc:	str	lr, [sp, #12]
   1a8c0:	bl	10844 <memset@plt>
   1a8c4:	ldr	r3, [pc, #28]	; 1a8e8 <myhtml_data_process_entry_clean@@Base+0x48>
   1a8c8:	add	r4, pc, r4
   1a8cc:	ldr	r6, [sp, #8]
   1a8d0:	ldr	r3, [r4, r3]
   1a8d4:	str	r3, [r5]
   1a8d8:	ldrd	r4, [sp]
   1a8dc:	add	sp, sp, #12
   1a8e0:	pop	{pc}		; (ldr pc, [sp], #4)
   1a8e4:	andeq	lr, pc, r0, lsr r7	; <UNPREDICTABLE>
   1a8e8:	andeq	r0, r0, ip, lsr #19

0001a8ec <myhtml_data_process_string_append_char@@Base>:
   1a8ec:	ldrd	r2, [r0, #4]
   1a8f0:	strd	r4, [sp, #-16]!
   1a8f4:	mov	r5, r1
   1a8f8:	mov	r4, r0
   1a8fc:	str	r6, [sp, #8]
   1a900:	str	lr, [sp, #12]
   1a904:	add	r1, r3, #2
   1a908:	cmp	r1, r2
   1a90c:	bcs	1a940 <myhtml_data_process_string_append_char@@Base+0x54>
   1a910:	ldr	r2, [r4]
   1a914:	mov	r1, #0
   1a918:	strb	r5, [r2, r3]
   1a91c:	ldr	r2, [r4]
   1a920:	ldr	r3, [r4, #8]
   1a924:	add	r3, r3, #1
   1a928:	str	r3, [r4, #8]
   1a92c:	strb	r1, [r2, r3]
   1a930:	ldrd	r4, [sp]
   1a934:	ldr	r6, [sp, #8]
   1a938:	add	sp, sp, #12
   1a93c:	pop	{pc}		; (ldr pc, [sp], #4)
   1a940:	bl	108f8 <mycore_string_realloc@plt>
   1a944:	ldr	r3, [r4, #8]
   1a948:	b	1a910 <myhtml_data_process_string_append_char@@Base+0x24>

0001a94c <myhtml_data_process_state_data@@Base>:
   1a94c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1a950:	mov	r5, r3
   1a954:	strd	r6, [sp, #8]
   1a958:	mov	r6, r2
   1a95c:	mov	r7, r0
   1a960:	strd	r8, [sp, #16]
   1a964:	mov	r8, r1
   1a968:	add	r1, r2, r3
   1a96c:	str	sl, [sp, #24]
   1a970:	str	lr, [sp, #28]
   1a974:	sub	sp, sp, #8
   1a978:	ldr	ip, [sp, #40]	; 0x28
   1a97c:	ldr	r9, [pc, #380]	; 1ab00 <myhtml_data_process_state_data@@Base+0x1b4>
   1a980:	cmp	r3, ip
   1a984:	add	r9, pc, r9
   1a988:	bcs	1aae4 <myhtml_data_process_state_data@@Base+0x198>
   1a98c:	ldrb	r3, [r2, r3]
   1a990:	cmp	r3, #38	; 0x26
   1a994:	addne	r3, r5, #1
   1a998:	movne	r4, r5
   1a99c:	addne	r3, r2, r3
   1a9a0:	bne	1a9b4 <myhtml_data_process_state_data@@Base+0x68>
   1a9a4:	b	1aaf0 <myhtml_data_process_state_data@@Base+0x1a4>
   1a9a8:	ldrb	r2, [r3], #1
   1a9ac:	cmp	r2, #38	; 0x26
   1a9b0:	beq	1aa28 <myhtml_data_process_state_data@@Base+0xdc>
   1a9b4:	add	r4, r4, #1
   1a9b8:	mov	sl, r3
   1a9bc:	cmp	ip, r4
   1a9c0:	bne	1a9a8 <myhtml_data_process_state_data@@Base+0x5c>
   1a9c4:	sub	r2, r4, r5
   1a9c8:	mov	r0, r8
   1a9cc:	ldr	r3, [r7, #32]
   1a9d0:	bl	10bb0 <myhtml_string_before_append_any_preprocessing@plt>
   1a9d4:	add	r0, r5, r0
   1a9d8:	cmp	r0, r4
   1a9dc:	beq	1aa08 <myhtml_data_process_state_data@@Base+0xbc>
   1a9e0:	ldr	ip, [r7, #4]
   1a9e4:	add	r1, r6, r0
   1a9e8:	sub	r2, r4, r0
   1a9ec:	ldrb	lr, [r7, #61]	; 0x3d
   1a9f0:	cmp	ip, #0
   1a9f4:	bne	1aa94 <myhtml_data_process_state_data@@Base+0x148>
   1a9f8:	mov	r3, lr
   1a9fc:	mov	r0, r8
   1aa00:	bl	1016c <myhtml_string_append_with_preprocessing@plt>
   1aa04:	str	r0, [r7, #32]
   1aa08:	mov	r0, r4
   1aa0c:	add	sp, sp, #8
   1aa10:	ldrd	r4, [sp]
   1aa14:	ldrd	r6, [sp, #8]
   1aa18:	ldrd	r8, [sp, #16]
   1aa1c:	ldr	sl, [sp, #24]
   1aa20:	add	sp, sp, #28
   1aa24:	pop	{pc}		; (ldr pc, [sp], #4)
   1aa28:	sub	r2, r4, r5
   1aa2c:	mov	r0, r8
   1aa30:	ldr	r3, [r7, #32]
   1aa34:	bl	10bb0 <myhtml_string_before_append_any_preprocessing@plt>
   1aa38:	add	r0, r5, r0
   1aa3c:	cmp	r0, r4
   1aa40:	beq	1aa6c <myhtml_data_process_state_data@@Base+0x120>
   1aa44:	ldr	ip, [r7, #4]
   1aa48:	add	r1, r6, r0
   1aa4c:	sub	r2, r4, r0
   1aa50:	ldrb	r0, [r7, #61]	; 0x3d
   1aa54:	cmp	ip, #0
   1aa58:	bne	1aab4 <myhtml_data_process_state_data@@Base+0x168>
   1aa5c:	mov	r3, r0
   1aa60:	mov	r0, r8
   1aa64:	bl	1016c <myhtml_string_append_with_preprocessing@plt>
   1aa68:	str	r0, [r7, #32]
   1aa6c:	ldr	r3, [pc, #144]	; 1ab04 <myhtml_data_process_state_data@@Base+0x1b8>
   1aa70:	mov	r0, r8
   1aa74:	add	r4, r4, #1
   1aa78:	ldr	r2, [r8, #8]
   1aa7c:	str	r2, [r7, #36]	; 0x24
   1aa80:	ldr	r3, [r9, r3]
   1aa84:	str	r3, [r7]
   1aa88:	ldrb	r1, [sl]
   1aa8c:	bl	11000 <myhtml_data_process_string_append_char@plt>
   1aa90:	b	1aa08 <myhtml_data_process_state_data@@Base+0xbc>
   1aa94:	mov	r3, r2
   1aa98:	mov	r0, r8
   1aa9c:	stm	sp, {ip, lr}
   1aaa0:	mov	r2, r1
   1aaa4:	add	r1, r7, #8
   1aaa8:	bl	10da8 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1aaac:	str	r0, [r7, #32]
   1aab0:	b	1aa08 <myhtml_data_process_state_data@@Base+0xbc>
   1aab4:	add	r5, r7, #8
   1aab8:	mov	r3, r2
   1aabc:	str	ip, [sp]
   1aac0:	mov	r2, r1
   1aac4:	mov	r1, r5
   1aac8:	str	r0, [sp, #4]
   1aacc:	mov	r0, r8
   1aad0:	bl	10da8 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1aad4:	str	r0, [r7, #32]
   1aad8:	mov	r0, r5
   1aadc:	bl	10160 <myencoding_result_clean@plt>
   1aae0:	b	1aa6c <myhtml_data_process_state_data@@Base+0x120>
   1aae4:	mov	r4, r3
   1aae8:	mov	r2, #0
   1aaec:	b	1a9c8 <myhtml_data_process_state_data@@Base+0x7c>
   1aaf0:	mov	r4, r5
   1aaf4:	mov	sl, r1
   1aaf8:	mov	r2, #0
   1aafc:	b	1aa2c <myhtml_data_process_state_data@@Base+0xe0>
   1ab00:	andeq	lr, pc, r4, ror r6	; <UNPREDICTABLE>
   1ab04:	andeq	r0, r0, r0, ror r9

0001ab08 <myhtml_data_process_state_ampersand@@Base>:
   1ab08:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1ab0c:	mov	r4, r3
   1ab10:	mov	r5, r0
   1ab14:	strd	r6, [sp, #8]
   1ab18:	mov	r6, r2
   1ab1c:	str	r8, [sp, #16]
   1ab20:	mov	r8, r1
   1ab24:	str	lr, [sp, #20]
   1ab28:	ldrb	r1, [r2, r3]
   1ab2c:	ldr	r7, [pc, #216]	; 1ac0c <myhtml_data_process_state_ampersand@@Base+0x104>
   1ab30:	cmp	r1, #35	; 0x23
   1ab34:	add	r7, pc, r7
   1ab38:	beq	1aba0 <myhtml_data_process_state_ampersand@@Base+0x98>
   1ab3c:	mov	r3, #0
   1ab40:	str	r3, [r0, #48]	; 0x30
   1ab44:	ldrb	r0, [r2, r4]
   1ab48:	bl	109e8 <myhtml_charef_get_first_position@plt>
   1ab4c:	str	r0, [r5, #44]	; 0x2c
   1ab50:	ldrb	r3, [r0]
   1ab54:	cmp	r3, #0
   1ab58:	bne	1ab80 <myhtml_data_process_state_ampersand@@Base+0x78>
   1ab5c:	ldr	r3, [pc, #172]	; 1ac10 <myhtml_data_process_state_ampersand@@Base+0x108>
   1ab60:	mov	r0, r4
   1ab64:	ldr	r3, [r7, r3]
   1ab68:	str	r3, [r5]
   1ab6c:	ldrd	r4, [sp]
   1ab70:	ldrd	r6, [sp, #8]
   1ab74:	ldr	r8, [sp, #16]
   1ab78:	add	sp, sp, #20
   1ab7c:	pop	{pc}		; (ldr pc, [sp], #4)
   1ab80:	ldr	r3, [pc, #140]	; 1ac14 <myhtml_data_process_state_ampersand@@Base+0x10c>
   1ab84:	mov	r0, r8
   1ab88:	ldr	r3, [r7, r3]
   1ab8c:	str	r3, [r5]
   1ab90:	ldrb	r1, [r6, r4]
   1ab94:	bl	11000 <myhtml_data_process_string_append_char@plt>
   1ab98:	add	r0, r4, #1
   1ab9c:	b	1ab6c <myhtml_data_process_state_ampersand@@Base+0x64>
   1aba0:	mov	r0, r8
   1aba4:	bl	11000 <myhtml_data_process_string_append_char@plt>
   1aba8:	ldr	r2, [sp, #24]
   1abac:	add	r0, r4, #1
   1abb0:	mov	r3, #0
   1abb4:	str	r3, [r5, #40]	; 0x28
   1abb8:	cmp	r2, r0
   1abbc:	bls	1abfc <myhtml_data_process_state_ampersand@@Base+0xf4>
   1abc0:	ldrb	r1, [r6, r0]
   1abc4:	and	r3, r1, #223	; 0xdf
   1abc8:	cmp	r3, #88	; 0x58
   1abcc:	beq	1abe0 <myhtml_data_process_state_ampersand@@Base+0xd8>
   1abd0:	ldr	r3, [pc, #64]	; 1ac18 <myhtml_data_process_state_ampersand@@Base+0x110>
   1abd4:	ldr	r3, [r7, r3]
   1abd8:	str	r3, [r5]
   1abdc:	b	1ab6c <myhtml_data_process_state_ampersand@@Base+0x64>
   1abe0:	mov	r0, r8
   1abe4:	bl	11000 <myhtml_data_process_string_append_char@plt>
   1abe8:	ldr	r3, [pc, #44]	; 1ac1c <myhtml_data_process_state_ampersand@@Base+0x114>
   1abec:	add	r0, r4, #2
   1abf0:	ldr	r3, [r7, r3]
   1abf4:	str	r3, [r5]
   1abf8:	b	1ab6c <myhtml_data_process_state_ampersand@@Base+0x64>
   1abfc:	ldr	r3, [pc, #28]	; 1ac20 <myhtml_data_process_state_ampersand@@Base+0x118>
   1ac00:	ldr	r3, [r7, r3]
   1ac04:	str	r3, [r5]
   1ac08:	b	1ab6c <myhtml_data_process_state_ampersand@@Base+0x64>
   1ac0c:	andeq	lr, pc, r4, asr #9
   1ac10:	andeq	r0, r0, ip, lsr #19
   1ac14:	andeq	r0, r0, r4, asr #16
   1ac18:	muleq	r0, r4, r9
   1ac1c:	andeq	r0, r0, r0, ror r7
   1ac20:	andeq	r0, r0, r8, ror #14

0001ac24 <myhtml_data_process_state_ampersand_hash@@Base>:
   1ac24:	strd	r4, [sp, #-16]!
   1ac28:	str	r6, [sp, #8]
   1ac2c:	str	lr, [sp, #12]
   1ac30:	ldrb	r2, [r2, r3]
   1ac34:	ldr	r5, [pc, #88]	; 1ac94 <myhtml_data_process_state_ampersand_hash@@Base+0x70>
   1ac38:	and	ip, r2, #223	; 0xdf
   1ac3c:	cmp	ip, #88	; 0x58
   1ac40:	add	r5, pc, r5
   1ac44:	beq	1ac68 <myhtml_data_process_state_ampersand_hash@@Base+0x44>
   1ac48:	ldr	r2, [pc, #72]	; 1ac98 <myhtml_data_process_state_ampersand_hash@@Base+0x74>
   1ac4c:	ldr	r2, [r5, r2]
   1ac50:	str	r2, [r0]
   1ac54:	ldrd	r4, [sp]
   1ac58:	mov	r0, r3
   1ac5c:	ldr	r6, [sp, #8]
   1ac60:	add	sp, sp, #12
   1ac64:	pop	{pc}		; (ldr pc, [sp], #4)
   1ac68:	mov	ip, r1
   1ac6c:	mov	r6, r0
   1ac70:	mov	r1, r2
   1ac74:	mov	r0, ip
   1ac78:	mov	r4, r3
   1ac7c:	bl	11000 <myhtml_data_process_string_append_char@plt>
   1ac80:	ldr	r2, [pc, #20]	; 1ac9c <myhtml_data_process_state_ampersand_hash@@Base+0x78>
   1ac84:	add	r3, r4, #1
   1ac88:	ldr	r2, [r5, r2]
   1ac8c:	str	r2, [r6]
   1ac90:	b	1ac54 <myhtml_data_process_state_ampersand_hash@@Base+0x30>
   1ac94:			; <UNDEFINED> instruction: 0x000fe3b8
   1ac98:	muleq	r0, r4, r9
   1ac9c:	andeq	r0, r0, r0, ror r7

0001aca0 <myhtml_data_process_state_end@@Base>:
   1aca0:	strd	r4, [sp, #-16]!
   1aca4:	mov	r4, r1
   1aca8:	mov	r5, r0
   1acac:	ldr	r1, [r1, #8]
   1acb0:	ldr	r3, [r4, #4]
   1acb4:	str	r6, [sp, #8]
   1acb8:	str	lr, [sp, #12]
   1acbc:	add	r1, r1, #5
   1acc0:	cmp	r1, r3
   1acc4:	bcs	1ad40 <myhtml_data_process_state_end@@Base+0xa0>
   1acc8:	ldr	r0, [r5, #40]	; 0x28
   1accc:	cmp	r0, #159	; 0x9f
   1acd0:	bhi	1ad1c <myhtml_data_process_state_end@@Base+0x7c>
   1acd4:	ldr	r3, [pc, #112]	; 1ad4c <myhtml_data_process_state_end@@Base+0xac>
   1acd8:	add	r3, pc, r3
   1acdc:	add	r0, r3, r0, lsl #2
   1ace0:	ldr	r0, [r0, #1024]	; 0x400
   1ace4:	str	r0, [r5, #40]	; 0x28
   1ace8:	ldr	r1, [r4]
   1acec:	ldr	r5, [r5, #36]	; 0x24
   1acf0:	add	r1, r1, r5
   1acf4:	bl	10e20 <myencoding_codepoint_to_ascii_utf_8@plt>
   1acf8:	ldr	r3, [r4]
   1acfc:	add	r0, r5, r0
   1ad00:	mov	r2, #0
   1ad04:	str	r0, [r4, #8]
   1ad08:	strb	r2, [r3, r0]
   1ad0c:	ldrd	r4, [sp]
   1ad10:	ldr	r6, [sp, #8]
   1ad14:	add	sp, sp, #12
   1ad18:	pop	{pc}		; (ldr pc, [sp], #4)
   1ad1c:	sub	r3, r0, #55296	; 0xd800
   1ad20:	cmp	r3, #2048	; 0x800
   1ad24:	bcc	1ad30 <myhtml_data_process_state_end@@Base+0x90>
   1ad28:	cmp	r0, #1114112	; 0x110000
   1ad2c:	bcc	1ace8 <myhtml_data_process_state_end@@Base+0x48>
   1ad30:	movw	r3, #65533	; 0xfffd
   1ad34:	mov	r0, r3
   1ad38:	str	r3, [r5, #40]	; 0x28
   1ad3c:	b	1ace8 <myhtml_data_process_state_end@@Base+0x48>
   1ad40:	mov	r0, r4
   1ad44:	bl	108f8 <mycore_string_realloc@plt>
   1ad48:	b	1acc8 <myhtml_data_process_state_end@@Base+0x28>
   1ad4c:	andeq	r3, lr, r0, lsr r0

0001ad50 <myhtml_data_process_state_ampersand_hash_data@@Base>:
   1ad50:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1ad54:	mov	r5, r3
   1ad58:	add	r3, r2, r3
   1ad5c:	strd	r6, [sp, #8]
   1ad60:	mov	r7, r2
   1ad64:	mov	r6, r0
   1ad68:	strd	r8, [sp, #16]
   1ad6c:	mov	r8, r1
   1ad70:	strd	sl, [sp, #24]
   1ad74:	str	lr, [sp, #32]
   1ad78:	sub	sp, sp, #20
   1ad7c:	ldr	lr, [sp, #56]	; 0x38
   1ad80:	str	r3, [sp, #8]
   1ad84:	ldr	r3, [pc, #368]	; 1aefc <myhtml_data_process_state_ampersand_hash_data@@Base+0x1ac>
   1ad88:	cmp	r5, lr
   1ad8c:	add	r3, pc, r3
   1ad90:	str	r3, [sp, #12]
   1ad94:	bcs	1aef0 <myhtml_data_process_state_ampersand_hash_data@@Base+0x1a0>
   1ad98:	ldr	r3, [pc, #352]	; 1af00 <myhtml_data_process_state_ampersand_hash_data@@Base+0x1b0>
   1ad9c:	ldrb	r2, [r2, r5]
   1ada0:	add	r3, pc, r3
   1ada4:	add	r3, r3, r2
   1ada8:	ldrb	ip, [r3, #1664]	; 0x680
   1adac:	cmp	ip, #255	; 0xff
   1adb0:	beq	1aed0 <myhtml_data_process_state_ampersand_hash_data@@Base+0x180>
   1adb4:	ldr	fp, [pc, #328]	; 1af04 <myhtml_data_process_state_ampersand_hash_data@@Base+0x1b4>
   1adb8:	add	r0, r5, #1
   1adbc:	movw	sl, #65535	; 0xffff
   1adc0:	movt	sl, #16
   1adc4:	add	r0, r7, r0
   1adc8:	mov	r2, r5
   1adcc:	ldr	r3, [r6, #40]	; 0x28
   1add0:	add	fp, pc, fp
   1add4:	b	1adf0 <myhtml_data_process_state_ampersand_hash_data@@Base+0xa0>
   1add8:	ldrb	ip, [r1]
   1addc:	add	ip, fp, ip
   1ade0:	ldrb	ip, [ip, #1664]	; 0x680
   1ade4:	cmp	ip, #255	; 0xff
   1ade8:	beq	1ae7c <myhtml_data_process_state_ampersand_hash_data@@Base+0x12c>
   1adec:	mov	r2, r4
   1adf0:	add	r9, r3, r3, lsl #2
   1adf4:	cmp	r3, sl
   1adf8:	add	r4, r2, #1
   1adfc:	mov	r1, r0
   1ae00:	add	r0, r0, #1
   1ae04:	addls	r3, ip, r9, lsl #1
   1ae08:	strls	r3, [r6, #40]	; 0x28
   1ae0c:	cmp	lr, r4
   1ae10:	bne	1add8 <myhtml_data_process_state_ampersand_hash_data@@Base+0x88>
   1ae14:	sub	r2, r4, r5
   1ae18:	ldr	r1, [sp, #8]
   1ae1c:	mov	r0, r8
   1ae20:	ldr	r3, [r6, #32]
   1ae24:	bl	10bb0 <myhtml_string_before_append_any_preprocessing@plt>
   1ae28:	add	r0, r5, r0
   1ae2c:	cmp	r0, r4
   1ae30:	beq	1ae5c <myhtml_data_process_state_ampersand_hash_data@@Base+0x10c>
   1ae34:	ldr	ip, [r6, #4]
   1ae38:	add	r1, r7, r0
   1ae3c:	sub	r2, r4, r0
   1ae40:	ldrb	lr, [r6, #61]	; 0x3d
   1ae44:	cmp	ip, #0
   1ae48:	bne	1aeb0 <myhtml_data_process_state_ampersand_hash_data@@Base+0x160>
   1ae4c:	mov	r3, lr
   1ae50:	mov	r0, r8
   1ae54:	bl	1016c <myhtml_string_append_with_preprocessing@plt>
   1ae58:	str	r0, [r6, #32]
   1ae5c:	mov	r0, r4
   1ae60:	add	sp, sp, #20
   1ae64:	ldrd	r4, [sp]
   1ae68:	ldrd	r6, [sp, #8]
   1ae6c:	ldrd	r8, [sp, #16]
   1ae70:	ldrd	sl, [sp, #24]
   1ae74:	add	sp, sp, #32
   1ae78:	pop	{pc}		; (ldr pc, [sp], #4)
   1ae7c:	ldr	r3, [pc, #132]	; 1af08 <myhtml_data_process_state_ampersand_hash_data@@Base+0x1b8>
   1ae80:	cmp	r5, r4
   1ae84:	ldr	r0, [sp, #12]
   1ae88:	ldr	r3, [r0, r3]
   1ae8c:	str	r3, [r6]
   1ae90:	beq	1aee4 <myhtml_data_process_state_ampersand_hash_data@@Base+0x194>
   1ae94:	ldrb	r3, [r1]
   1ae98:	mov	r0, r6
   1ae9c:	mov	r1, r8
   1aea0:	cmp	r3, #59	; 0x3b
   1aea4:	addeq	r4, r2, #2
   1aea8:	bl	10304 <myhtml_data_process_state_end@plt>
   1aeac:	b	1ae5c <myhtml_data_process_state_ampersand_hash_data@@Base+0x10c>
   1aeb0:	mov	r3, r2
   1aeb4:	mov	r0, r8
   1aeb8:	stm	sp, {ip, lr}
   1aebc:	mov	r2, r1
   1aec0:	add	r1, r6, #8
   1aec4:	bl	10da8 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1aec8:	str	r0, [r6, #32]
   1aecc:	b	1ae5c <myhtml_data_process_state_ampersand_hash_data@@Base+0x10c>
   1aed0:	ldr	r3, [pc, #48]	; 1af08 <myhtml_data_process_state_ampersand_hash_data@@Base+0x1b8>
   1aed4:	mov	r4, r5
   1aed8:	ldr	r2, [sp, #12]
   1aedc:	ldr	r3, [r2, r3]
   1aee0:	str	r3, [r0]
   1aee4:	mov	r2, #0
   1aee8:	ldr	r1, [sp, #8]
   1aeec:	b	1ae1c <myhtml_data_process_state_ampersand_hash_data@@Base+0xcc>
   1aef0:	mov	r4, r5
   1aef4:	mov	r2, #0
   1aef8:	b	1ae18 <myhtml_data_process_state_ampersand_hash_data@@Base+0xc8>
   1aefc:	andeq	lr, pc, ip, ror #4
   1af00:	andeq	r2, lr, r8, ror #30
   1af04:	andeq	r2, lr, r8, lsr pc
   1af08:	andeq	r0, r0, ip, lsr #19

0001af0c <myhtml_data_process_state_ampersand_hash_x_data@@Base>:
   1af0c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1af10:	mov	r5, r0
   1af14:	strd	r6, [sp, #8]
   1af18:	mov	r6, r3
   1af1c:	add	r3, r2, r3
   1af20:	strd	r8, [sp, #16]
   1af24:	mov	r7, r2
   1af28:	mov	r8, r1
   1af2c:	strd	sl, [sp, #24]
   1af30:	str	lr, [sp, #32]
   1af34:	sub	sp, sp, #20
   1af38:	ldr	lr, [sp, #56]	; 0x38
   1af3c:	str	r3, [sp, #8]
   1af40:	ldr	r3, [pc, #396]	; 1b0d4 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x1c8>
   1af44:	cmp	r6, lr
   1af48:	add	r3, pc, r3
   1af4c:	str	r3, [sp, #12]
   1af50:	bcs	1b0c8 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x1bc>
   1af54:	ldr	r3, [pc, #380]	; 1b0d8 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x1cc>
   1af58:	ldrb	r2, [r2, r6]
   1af5c:	add	r3, pc, r3
   1af60:	add	r3, r3, r2
   1af64:	ldrb	r3, [r3, #1920]	; 0x780
   1af68:	cmp	r3, #255	; 0xff
   1af6c:	beq	1b0a8 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x19c>
   1af70:	ldr	fp, [pc, #356]	; 1b0dc <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x1d0>
   1af74:	add	ip, r6, #1
   1af78:	movw	r9, #65535	; 0xffff
   1af7c:	movt	r9, #16
   1af80:	add	ip, r7, ip
   1af84:	ldr	sl, [pc, #340]	; 1b0e0 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x1d4>
   1af88:	mov	r2, r6
   1af8c:	ldr	r3, [r0, #40]	; 0x28
   1af90:	add	fp, pc, fp
   1af94:	add	sl, pc, sl
   1af98:	b	1afb4 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0xa8>
   1af9c:	ldrb	r0, [r1]
   1afa0:	add	r0, sl, r0
   1afa4:	ldrb	r0, [r0, #1920]	; 0x780
   1afa8:	cmp	r0, #255	; 0xff
   1afac:	beq	1b054 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x148>
   1afb0:	mov	r2, r4
   1afb4:	cmp	r3, r9
   1afb8:	mov	r1, ip
   1afbc:	lsl	r0, r3, #4
   1afc0:	add	r4, r2, #1
   1afc4:	add	ip, ip, #1
   1afc8:	bhi	1afe4 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0xd8>
   1afcc:	str	r0, [r5, #40]	; 0x28
   1afd0:	ldrb	r3, [r7, r2]
   1afd4:	add	r3, fp, r3
   1afd8:	ldrb	r3, [r3, #1920]	; 0x780
   1afdc:	orr	r3, r3, r0
   1afe0:	str	r3, [r5, #40]	; 0x28
   1afe4:	cmp	lr, r4
   1afe8:	bne	1af9c <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x90>
   1afec:	sub	r2, r4, r6
   1aff0:	ldr	r1, [sp, #8]
   1aff4:	mov	r0, r8
   1aff8:	ldr	r3, [r5, #32]
   1affc:	bl	10bb0 <myhtml_string_before_append_any_preprocessing@plt>
   1b000:	add	r0, r6, r0
   1b004:	cmp	r0, r4
   1b008:	beq	1b034 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x128>
   1b00c:	ldr	ip, [r5, #4]
   1b010:	add	r1, r7, r0
   1b014:	sub	r2, r4, r0
   1b018:	ldrb	lr, [r5, #61]	; 0x3d
   1b01c:	cmp	ip, #0
   1b020:	bne	1b088 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x17c>
   1b024:	mov	r3, lr
   1b028:	mov	r0, r8
   1b02c:	bl	1016c <myhtml_string_append_with_preprocessing@plt>
   1b030:	str	r0, [r5, #32]
   1b034:	mov	r0, r4
   1b038:	add	sp, sp, #20
   1b03c:	ldrd	r4, [sp]
   1b040:	ldrd	r6, [sp, #8]
   1b044:	ldrd	r8, [sp, #16]
   1b048:	ldrd	sl, [sp, #24]
   1b04c:	add	sp, sp, #32
   1b050:	pop	{pc}		; (ldr pc, [sp], #4)
   1b054:	ldr	r3, [pc, #136]	; 1b0e4 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x1d8>
   1b058:	cmp	r6, r4
   1b05c:	ldr	r0, [sp, #12]
   1b060:	ldr	r3, [r0, r3]
   1b064:	str	r3, [r5]
   1b068:	beq	1b0bc <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x1b0>
   1b06c:	ldrb	r3, [r1]
   1b070:	mov	r0, r5
   1b074:	mov	r1, r8
   1b078:	cmp	r3, #59	; 0x3b
   1b07c:	addeq	r4, r2, #2
   1b080:	bl	10304 <myhtml_data_process_state_end@plt>
   1b084:	b	1b034 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x128>
   1b088:	mov	r3, r2
   1b08c:	mov	r0, r8
   1b090:	stm	sp, {ip, lr}
   1b094:	mov	r2, r1
   1b098:	add	r1, r5, #8
   1b09c:	bl	10da8 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1b0a0:	str	r0, [r5, #32]
   1b0a4:	b	1b034 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x128>
   1b0a8:	ldr	r3, [pc, #52]	; 1b0e4 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x1d8>
   1b0ac:	mov	r4, r6
   1b0b0:	ldr	r2, [sp, #12]
   1b0b4:	ldr	r3, [r2, r3]
   1b0b8:	str	r3, [r0]
   1b0bc:	mov	r2, #0
   1b0c0:	ldr	r1, [sp, #8]
   1b0c4:	b	1aff4 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0xe8>
   1b0c8:	mov	r4, r6
   1b0cc:	mov	r2, #0
   1b0d0:	b	1aff0 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0xe4>
   1b0d4:	strheq	lr, [pc], -r0
   1b0d8:	andeq	r2, lr, ip, lsr #27
   1b0dc:	andeq	r2, lr, r8, ror sp
   1b0e0:	andeq	r2, lr, r4, ror sp
   1b0e4:	andeq	r0, r0, ip, lsr #19

0001b0e8 <myhtml_data_process@@Base>:
   1b0e8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1b0ec:	subs	r4, r3, #0
   1b0f0:	strd	r6, [sp, #8]
   1b0f4:	str	r8, [sp, #16]
   1b0f8:	str	lr, [sp, #20]
   1b0fc:	sub	sp, sp, #8
   1b100:	beq	1b138 <myhtml_data_process@@Base+0x50>
   1b104:	mov	r8, r2
   1b108:	mov	r7, r1
   1b10c:	mov	r5, r0
   1b110:	mov	r3, #0
   1b114:	mov	r2, r8
   1b118:	mov	r1, r7
   1b11c:	str	r4, [sp]
   1b120:	mov	r0, r5
   1b124:	ldr	r6, [r5]
   1b128:	blx	r6
   1b12c:	cmp	r4, r0
   1b130:	mov	r3, r0
   1b134:	bhi	1b114 <myhtml_data_process@@Base+0x2c>
   1b138:	add	sp, sp, #8
   1b13c:	ldrd	r4, [sp]
   1b140:	ldrd	r6, [sp, #8]
   1b144:	ldr	r8, [sp, #16]
   1b148:	add	sp, sp, #20
   1b14c:	pop	{pc}		; (ldr pc, [sp], #4)

0001b150 <myhtml_data_process_end@@Base>:
   1b150:	ldr	r3, [pc, #348]	; 1b2b4 <myhtml_data_process_end@@Base+0x164>
   1b154:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1b158:	ldr	r2, [pc, #344]	; 1b2b8 <myhtml_data_process_end@@Base+0x168>
   1b15c:	ldr	ip, [r0]
   1b160:	add	r3, pc, r3
   1b164:	strd	r6, [sp, #8]
   1b168:	str	r8, [sp, #16]
   1b16c:	str	lr, [sp, #20]
   1b170:	ldr	r2, [r3, r2]
   1b174:	cmp	ip, r2
   1b178:	beq	1b1b0 <myhtml_data_process_end@@Base+0x60>
   1b17c:	ldr	r2, [pc, #312]	; 1b2bc <myhtml_data_process_end@@Base+0x16c>
   1b180:	ldr	r2, [r3, r2]
   1b184:	cmp	ip, r2
   1b188:	beq	1b22c <myhtml_data_process_end@@Base+0xdc>
   1b18c:	ldr	r2, [pc, #300]	; 1b2c0 <myhtml_data_process_end@@Base+0x170>
   1b190:	ldr	r3, [r3, r2]
   1b194:	cmp	ip, r3
   1b198:	beq	1b244 <myhtml_data_process_end@@Base+0xf4>
   1b19c:	ldrd	r4, [sp]
   1b1a0:	ldrd	r6, [sp, #8]
   1b1a4:	ldr	r8, [sp, #16]
   1b1a8:	add	sp, sp, #20
   1b1ac:	pop	{pc}		; (ldr pc, [sp], #4)
   1b1b0:	ldr	r4, [r0, #48]	; 0x30
   1b1b4:	cmp	r4, #0
   1b1b8:	beq	1b17c <myhtml_data_process_end@@Base+0x2c>
   1b1bc:	ldr	r3, [r4, #20]
   1b1c0:	mov	r7, r1
   1b1c4:	mov	r5, r0
   1b1c8:	cmp	r3, #0
   1b1cc:	beq	1b270 <myhtml_data_process_end@@Base+0x120>
   1b1d0:	add	r6, r4, #12
   1b1d4:	mov	r8, #0
   1b1d8:	ldrd	r2, [r7, #4]
   1b1dc:	add	r1, r3, #5
   1b1e0:	cmp	r1, r2
   1b1e4:	bcs	1b278 <myhtml_data_process_end@@Base+0x128>
   1b1e8:	ldr	r1, [r7]
   1b1ec:	add	r8, r8, #1
   1b1f0:	ldr	r3, [r5, #36]	; 0x24
   1b1f4:	ldr	r0, [r6], #4
   1b1f8:	add	r1, r1, r3
   1b1fc:	bl	10e20 <myencoding_codepoint_to_ascii_utf_8@plt>
   1b200:	ldr	r3, [r5, #36]	; 0x24
   1b204:	ldr	r2, [r4, #20]
   1b208:	add	r0, r0, r3
   1b20c:	cmp	r2, r8
   1b210:	str	r0, [r5, #36]	; 0x24
   1b214:	bhi	1b1d8 <myhtml_data_process_end@@Base+0x88>
   1b218:	ldr	r3, [r7]
   1b21c:	mov	r2, #0
   1b220:	str	r0, [r7, #8]
   1b224:	strb	r2, [r3, r0]
   1b228:	b	1b19c <myhtml_data_process_end@@Base+0x4c>
   1b22c:	ldr	r3, [r1, #8]
   1b230:	ldr	r2, [r0, #36]	; 0x24
   1b234:	sub	r3, r3, r2
   1b238:	cmp	r3, #2
   1b23c:	beq	1b19c <myhtml_data_process_end@@Base+0x4c>
   1b240:	b	1b258 <myhtml_data_process_end@@Base+0x108>
   1b244:	ldr	r3, [r1, #8]
   1b248:	ldr	r2, [r0, #36]	; 0x24
   1b24c:	sub	r3, r3, r2
   1b250:	cmp	r3, #3
   1b254:	beq	1b19c <myhtml_data_process_end@@Base+0x4c>
   1b258:	ldrd	r4, [sp]
   1b25c:	ldrd	r6, [sp, #8]
   1b260:	ldr	r8, [sp, #16]
   1b264:	ldr	lr, [sp, #20]
   1b268:	add	sp, sp, #24
   1b26c:	b	10304 <myhtml_data_process_state_end@plt>
   1b270:	ldr	r0, [r0, #36]	; 0x24
   1b274:	b	1b218 <myhtml_data_process_end@@Base+0xc8>
   1b278:	mov	r0, r7
   1b27c:	add	r8, r8, #1
   1b280:	bl	108f8 <mycore_string_realloc@plt>
   1b284:	ldr	r1, [r7]
   1b288:	ldr	r3, [r5, #36]	; 0x24
   1b28c:	ldr	r0, [r6], #4
   1b290:	add	r1, r1, r3
   1b294:	bl	10e20 <myencoding_codepoint_to_ascii_utf_8@plt>
   1b298:	ldr	r3, [r5, #36]	; 0x24
   1b29c:	ldr	r2, [r4, #20]
   1b2a0:	add	r0, r0, r3
   1b2a4:	cmp	r8, r2
   1b2a8:	str	r0, [r5, #36]	; 0x24
   1b2ac:	bcc	1b1d8 <myhtml_data_process_end@@Base+0x88>
   1b2b0:	b	1b218 <myhtml_data_process_end@@Base+0xc8>
   1b2b4:	muleq	pc, r8, lr	; <UNPREDICTABLE>
   1b2b8:	andeq	r0, r0, r4, asr #16
   1b2bc:	muleq	r0, r4, r9
   1b2c0:	andeq	r0, r0, r0, ror r7

0001b2c4 <myhtml_get_nodes_by_attribute_value_recursion_eq_i@@Base>:
   1b2c4:	ldr	r3, [r0, #8]
   1b2c8:	cmp	r3, r2
   1b2cc:	beq	1b2d8 <myhtml_get_nodes_by_attribute_value_recursion_eq_i@@Base+0x14>
   1b2d0:	mov	r0, #0
   1b2d4:	bx	lr
   1b2d8:	str	r4, [sp, #-8]!
   1b2dc:	ldr	r0, [r0]
   1b2e0:	str	lr, [sp, #4]
   1b2e4:	bl	10238 <mycore_strncasecmp@plt>
   1b2e8:	clz	r0, r0
   1b2ec:	ldr	r4, [sp]
   1b2f0:	add	sp, sp, #4
   1b2f4:	lsr	r0, r0, #5
   1b2f8:	pop	{pc}		; (ldr pc, [sp], #4)

0001b2fc <myhtml_get_nodes_by_attribute_value_recursion_end_i@@Base>:
   1b2fc:	ldr	r3, [r0, #8]
   1b300:	cmp	r3, r2
   1b304:	bcs	1b310 <myhtml_get_nodes_by_attribute_value_recursion_end_i@@Base+0x14>
   1b308:	mov	r0, #0
   1b30c:	bx	lr
   1b310:	ldr	r0, [r0]
   1b314:	sub	r3, r3, r2
   1b318:	str	r4, [sp, #-8]!
   1b31c:	str	lr, [sp, #4]
   1b320:	add	r0, r0, r3
   1b324:	bl	10238 <mycore_strncasecmp@plt>
   1b328:	clz	r0, r0
   1b32c:	ldr	r4, [sp]
   1b330:	add	sp, sp, #4
   1b334:	lsr	r0, r0, #5
   1b338:	pop	{pc}		; (ldr pc, [sp], #4)

0001b33c <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated_i@@Base>:
   1b33c:	strd	r4, [sp, #-16]!
   1b340:	str	r6, [sp, #8]
   1b344:	str	lr, [sp, #12]
   1b348:	ldr	lr, [r0, #8]
   1b34c:	cmp	lr, r2
   1b350:	bcc	1b37c <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated_i@@Base+0x40>
   1b354:	mov	r4, r2
   1b358:	mov	r5, r1
   1b35c:	ldr	r6, [r0]
   1b360:	beq	1b3b0 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated_i@@Base+0x74>
   1b364:	mov	r1, r5
   1b368:	mov	r2, r4
   1b36c:	mov	r0, r6
   1b370:	bl	10238 <mycore_strncasecmp@plt>
   1b374:	cmp	r0, #0
   1b378:	beq	1b390 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated_i@@Base+0x54>
   1b37c:	mov	r0, #0
   1b380:	ldrd	r4, [sp]
   1b384:	ldr	r6, [sp, #8]
   1b388:	add	sp, sp, #12
   1b38c:	pop	{pc}		; (ldr pc, [sp], #4)
   1b390:	ldrb	r0, [r6, r4]
   1b394:	ldrd	r4, [sp]
   1b398:	ldr	r6, [sp, #8]
   1b39c:	add	sp, sp, #12
   1b3a0:	sub	r0, r0, #45	; 0x2d
   1b3a4:	clz	r0, r0
   1b3a8:	lsr	r0, r0, #5
   1b3ac:	pop	{pc}		; (ldr pc, [sp], #4)
   1b3b0:	mov	r0, r6
   1b3b4:	bl	10238 <mycore_strncasecmp@plt>
   1b3b8:	cmp	r0, #0
   1b3bc:	bne	1b364 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated_i@@Base+0x28>
   1b3c0:	mov	r0, #1
   1b3c4:	b	1b380 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated_i@@Base+0x44>

0001b3c8 <myhtml_get_nodes_by_attribute_value_recursion_eq@@Base>:
   1b3c8:	ldr	r3, [r0, #8]
   1b3cc:	cmp	r3, r2
   1b3d0:	beq	1b3dc <myhtml_get_nodes_by_attribute_value_recursion_eq@@Base+0x14>
   1b3d4:	mov	r0, #0
   1b3d8:	bx	lr
   1b3dc:	str	r4, [sp, #-8]!
   1b3e0:	ldr	r0, [r0]
   1b3e4:	str	lr, [sp, #4]
   1b3e8:	bl	10e80 <mycore_strncmp@plt>
   1b3ec:	clz	r0, r0
   1b3f0:	ldr	r4, [sp]
   1b3f4:	add	sp, sp, #4
   1b3f8:	lsr	r0, r0, #5
   1b3fc:	pop	{pc}		; (ldr pc, [sp], #4)

0001b400 <myhtml_get_nodes_by_attribute_value_recursion_end@@Base>:
   1b400:	ldr	r3, [r0, #8]
   1b404:	cmp	r3, r2
   1b408:	bcs	1b414 <myhtml_get_nodes_by_attribute_value_recursion_end@@Base+0x14>
   1b40c:	mov	r0, #0
   1b410:	bx	lr
   1b414:	ldr	r0, [r0]
   1b418:	sub	r3, r3, r2
   1b41c:	str	r4, [sp, #-8]!
   1b420:	str	lr, [sp, #4]
   1b424:	add	r0, r0, r3
   1b428:	bl	10e80 <mycore_strncmp@plt>
   1b42c:	clz	r0, r0
   1b430:	ldr	r4, [sp]
   1b434:	add	sp, sp, #4
   1b438:	lsr	r0, r0, #5
   1b43c:	pop	{pc}		; (ldr pc, [sp], #4)

0001b440 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated@@Base>:
   1b440:	strd	r4, [sp, #-16]!
   1b444:	str	r6, [sp, #8]
   1b448:	str	lr, [sp, #12]
   1b44c:	ldr	lr, [r0, #8]
   1b450:	cmp	lr, r2
   1b454:	bcc	1b480 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated@@Base+0x40>
   1b458:	mov	r4, r2
   1b45c:	mov	r5, r1
   1b460:	ldr	r6, [r0]
   1b464:	beq	1b4b4 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated@@Base+0x74>
   1b468:	mov	r1, r5
   1b46c:	mov	r2, r4
   1b470:	mov	r0, r6
   1b474:	bl	10e80 <mycore_strncmp@plt>
   1b478:	cmp	r0, #0
   1b47c:	beq	1b494 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated@@Base+0x54>
   1b480:	mov	r0, #0
   1b484:	ldrd	r4, [sp]
   1b488:	ldr	r6, [sp, #8]
   1b48c:	add	sp, sp, #12
   1b490:	pop	{pc}		; (ldr pc, [sp], #4)
   1b494:	ldrb	r0, [r6, r4]
   1b498:	ldrd	r4, [sp]
   1b49c:	ldr	r6, [sp, #8]
   1b4a0:	add	sp, sp, #12
   1b4a4:	sub	r0, r0, #45	; 0x2d
   1b4a8:	clz	r0, r0
   1b4ac:	lsr	r0, r0, #5
   1b4b0:	pop	{pc}		; (ldr pc, [sp], #4)
   1b4b4:	mov	r0, r6
   1b4b8:	bl	10e80 <mycore_strncmp@plt>
   1b4bc:	cmp	r0, #0
   1b4c0:	bne	1b468 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated@@Base+0x28>
   1b4c4:	mov	r0, #1
   1b4c8:	b	1b484 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated@@Base+0x44>

0001b4cc <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base>:
   1b4cc:	ldr	r3, [r0, #8]
   1b4d0:	cmp	r3, r2
   1b4d4:	bcs	1b4e0 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x14>
   1b4d8:	mov	r0, #0
   1b4dc:	bx	lr
   1b4e0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1b4e4:	ldr	r5, [r0]
   1b4e8:	strd	r6, [sp, #8]
   1b4ec:	mov	r6, r0
   1b4f0:	mov	r7, r1
   1b4f4:	str	r8, [sp, #16]
   1b4f8:	mov	r8, r2
   1b4fc:	str	lr, [sp, #20]
   1b500:	mov	r0, r5
   1b504:	bl	10238 <mycore_strncasecmp@plt>
   1b508:	cmp	r0, #0
   1b50c:	ldr	lr, [r6, #8]
   1b510:	bne	1b564 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x98>
   1b514:	cmp	r8, lr
   1b518:	bcs	1b560 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x94>
   1b51c:	ldrb	r2, [r5, r8]
   1b520:	sub	r3, r2, #9
   1b524:	sub	r1, r2, #12
   1b528:	cmp	r1, #1
   1b52c:	cmphi	r3, #1
   1b530:	movls	r3, #1
   1b534:	movhi	r3, #0
   1b538:	cmp	r2, #32
   1b53c:	orreq	r3, r3, #1
   1b540:	cmp	r3, #0
   1b544:	beq	1b564 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x98>
   1b548:	mov	r0, #1
   1b54c:	ldrd	r4, [sp]
   1b550:	ldrd	r6, [sp, #8]
   1b554:	ldr	r8, [sp, #16]
   1b558:	add	sp, sp, #20
   1b55c:	pop	{pc}		; (ldr pc, [sp], #4)
   1b560:	beq	1b548 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x7c>
   1b564:	sub	r3, lr, #1
   1b568:	cmp	r8, r3
   1b56c:	movls	r4, #1
   1b570:	bls	1b58c <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0xc0>
   1b574:	b	1b624 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x158>
   1b578:	ldr	lr, [r6, #8]
   1b57c:	add	r4, r4, #1
   1b580:	sub	r3, lr, r4
   1b584:	cmp	r8, r3
   1b588:	bhi	1b624 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x158>
   1b58c:	ldrb	ip, [r5], #1
   1b590:	mov	r2, r8
   1b594:	mov	r1, r7
   1b598:	sub	r3, ip, #9
   1b59c:	sub	r0, ip, #12
   1b5a0:	cmp	r0, #1
   1b5a4:	cmphi	r3, #1
   1b5a8:	mov	r0, r5
   1b5ac:	movls	r3, #1
   1b5b0:	movhi	r3, #0
   1b5b4:	cmp	ip, #32
   1b5b8:	orreq	r3, r3, #1
   1b5bc:	cmp	r3, #0
   1b5c0:	beq	1b57c <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0xb0>
   1b5c4:	bl	10238 <mycore_strncasecmp@plt>
   1b5c8:	cmp	r0, #0
   1b5cc:	bne	1b578 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0xac>
   1b5d0:	cmp	r4, r8
   1b5d4:	bls	1b604 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x138>
   1b5d8:	ldrb	r2, [r5, r8]
   1b5dc:	sub	r3, r2, #12
   1b5e0:	sub	r1, r2, #9
   1b5e4:	cmp	r1, #1
   1b5e8:	cmphi	r3, #1
   1b5ec:	movls	r3, #1
   1b5f0:	movhi	r3, #0
   1b5f4:	cmp	r2, #32
   1b5f8:	orreq	r3, r3, #1
   1b5fc:	cmp	r3, #0
   1b600:	bne	1b548 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x7c>
   1b604:	ldr	lr, [r6, #8]
   1b608:	sub	r3, lr, r4
   1b60c:	cmp	r8, r3
   1b610:	beq	1b548 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x7c>
   1b614:	add	r4, r4, #1
   1b618:	sub	r3, lr, r4
   1b61c:	cmp	r8, r3
   1b620:	bls	1b58c <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0xc0>
   1b624:	mov	r0, #0
   1b628:	b	1b54c <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x80>

0001b62c <myhtml_get_nodes_by_attribute_value_recursion_begin_i@@Base>:
   1b62c:	ldr	r3, [r0, #8]
   1b630:	cmp	r3, r2
   1b634:	bcs	1b640 <myhtml_get_nodes_by_attribute_value_recursion_begin_i@@Base+0x14>
   1b638:	mov	r0, #0
   1b63c:	bx	lr
   1b640:	str	r4, [sp, #-8]!
   1b644:	ldr	r0, [r0]
   1b648:	str	lr, [sp, #4]
   1b64c:	bl	10238 <mycore_strncasecmp@plt>
   1b650:	clz	r0, r0
   1b654:	ldr	r4, [sp]
   1b658:	add	sp, sp, #4
   1b65c:	lsr	r0, r0, #5
   1b660:	pop	{pc}		; (ldr pc, [sp], #4)

0001b664 <myhtml_get_nodes_by_attribute_value_recursion_contain_i@@Base>:
   1b664:	ldr	r3, [r0, #8]
   1b668:	cmp	r3, r2
   1b66c:	bcc	1b6e4 <myhtml_get_nodes_by_attribute_value_recursion_contain_i@@Base+0x80>
   1b670:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1b674:	mov	r5, r2
   1b678:	mov	r4, #0
   1b67c:	strd	r6, [sp, #8]
   1b680:	mov	r7, r1
   1b684:	mov	r6, r0
   1b688:	str	r8, [sp, #16]
   1b68c:	str	lr, [sp, #20]
   1b690:	ldr	r8, [r0]
   1b694:	b	1b6a8 <myhtml_get_nodes_by_attribute_value_recursion_contain_i@@Base+0x44>
   1b698:	ldr	r3, [r6, #8]
   1b69c:	sub	r3, r3, r4
   1b6a0:	cmp	r5, r3
   1b6a4:	bhi	1b6dc <myhtml_get_nodes_by_attribute_value_recursion_contain_i@@Base+0x78>
   1b6a8:	add	r0, r8, r4
   1b6ac:	mov	r2, r5
   1b6b0:	mov	r1, r7
   1b6b4:	add	r4, r4, #1
   1b6b8:	bl	10238 <mycore_strncasecmp@plt>
   1b6bc:	cmp	r0, #0
   1b6c0:	bne	1b698 <myhtml_get_nodes_by_attribute_value_recursion_contain_i@@Base+0x34>
   1b6c4:	mov	r0, #1
   1b6c8:	ldrd	r4, [sp]
   1b6cc:	ldrd	r6, [sp, #8]
   1b6d0:	ldr	r8, [sp, #16]
   1b6d4:	add	sp, sp, #20
   1b6d8:	pop	{pc}		; (ldr pc, [sp], #4)
   1b6dc:	mov	r0, #0
   1b6e0:	b	1b6c8 <myhtml_get_nodes_by_attribute_value_recursion_contain_i@@Base+0x64>
   1b6e4:	mov	r0, #0
   1b6e8:	bx	lr

0001b6ec <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base>:
   1b6ec:	ldr	r3, [r0, #8]
   1b6f0:	cmp	r3, r2
   1b6f4:	bcs	1b700 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x14>
   1b6f8:	mov	r0, #0
   1b6fc:	bx	lr
   1b700:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1b704:	ldr	r5, [r0]
   1b708:	strd	r6, [sp, #8]
   1b70c:	mov	r6, r0
   1b710:	mov	r7, r1
   1b714:	str	r8, [sp, #16]
   1b718:	mov	r8, r2
   1b71c:	str	lr, [sp, #20]
   1b720:	mov	r0, r5
   1b724:	bl	10e80 <mycore_strncmp@plt>
   1b728:	cmp	r0, #0
   1b72c:	ldr	lr, [r6, #8]
   1b730:	bne	1b784 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x98>
   1b734:	cmp	r8, lr
   1b738:	bcs	1b780 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x94>
   1b73c:	ldrb	r2, [r5, r8]
   1b740:	sub	r3, r2, #9
   1b744:	sub	r1, r2, #12
   1b748:	cmp	r1, #1
   1b74c:	cmphi	r3, #1
   1b750:	movls	r3, #1
   1b754:	movhi	r3, #0
   1b758:	cmp	r2, #32
   1b75c:	orreq	r3, r3, #1
   1b760:	cmp	r3, #0
   1b764:	beq	1b784 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x98>
   1b768:	mov	r0, #1
   1b76c:	ldrd	r4, [sp]
   1b770:	ldrd	r6, [sp, #8]
   1b774:	ldr	r8, [sp, #16]
   1b778:	add	sp, sp, #20
   1b77c:	pop	{pc}		; (ldr pc, [sp], #4)
   1b780:	beq	1b768 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x7c>
   1b784:	sub	r3, lr, #1
   1b788:	cmp	r8, r3
   1b78c:	movls	r4, #1
   1b790:	bls	1b7ac <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0xc0>
   1b794:	b	1b844 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x158>
   1b798:	ldr	lr, [r6, #8]
   1b79c:	add	r4, r4, #1
   1b7a0:	sub	r3, lr, r4
   1b7a4:	cmp	r8, r3
   1b7a8:	bhi	1b844 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x158>
   1b7ac:	ldrb	ip, [r5], #1
   1b7b0:	mov	r2, r8
   1b7b4:	mov	r1, r7
   1b7b8:	sub	r3, ip, #9
   1b7bc:	sub	r0, ip, #12
   1b7c0:	cmp	r0, #1
   1b7c4:	cmphi	r3, #1
   1b7c8:	mov	r0, r5
   1b7cc:	movls	r3, #1
   1b7d0:	movhi	r3, #0
   1b7d4:	cmp	ip, #32
   1b7d8:	orreq	r3, r3, #1
   1b7dc:	cmp	r3, #0
   1b7e0:	beq	1b79c <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0xb0>
   1b7e4:	bl	10e80 <mycore_strncmp@plt>
   1b7e8:	cmp	r0, #0
   1b7ec:	bne	1b798 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0xac>
   1b7f0:	cmp	r4, r8
   1b7f4:	bls	1b824 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x138>
   1b7f8:	ldrb	r2, [r5, r8]
   1b7fc:	sub	r3, r2, #12
   1b800:	sub	r1, r2, #9
   1b804:	cmp	r1, #1
   1b808:	cmphi	r3, #1
   1b80c:	movls	r3, #1
   1b810:	movhi	r3, #0
   1b814:	cmp	r2, #32
   1b818:	orreq	r3, r3, #1
   1b81c:	cmp	r3, #0
   1b820:	bne	1b768 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x7c>
   1b824:	ldr	lr, [r6, #8]
   1b828:	sub	r3, lr, r4
   1b82c:	cmp	r8, r3
   1b830:	beq	1b768 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x7c>
   1b834:	add	r4, r4, #1
   1b838:	sub	r3, lr, r4
   1b83c:	cmp	r8, r3
   1b840:	bls	1b7ac <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0xc0>
   1b844:	mov	r0, #0
   1b848:	b	1b76c <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x80>

0001b84c <myhtml_get_nodes_by_attribute_value_recursion_begin@@Base>:
   1b84c:	ldr	r3, [r0, #8]
   1b850:	cmp	r3, r2
   1b854:	bcs	1b860 <myhtml_get_nodes_by_attribute_value_recursion_begin@@Base+0x14>
   1b858:	mov	r0, #0
   1b85c:	bx	lr
   1b860:	str	r4, [sp, #-8]!
   1b864:	ldr	r0, [r0]
   1b868:	str	lr, [sp, #4]
   1b86c:	bl	10e80 <mycore_strncmp@plt>
   1b870:	clz	r0, r0
   1b874:	ldr	r4, [sp]
   1b878:	add	sp, sp, #4
   1b87c:	lsr	r0, r0, #5
   1b880:	pop	{pc}		; (ldr pc, [sp], #4)

0001b884 <myhtml_get_nodes_by_attribute_value_recursion_contain@@Base>:
   1b884:	ldr	r3, [r0, #8]
   1b888:	cmp	r3, r2
   1b88c:	bcc	1b904 <myhtml_get_nodes_by_attribute_value_recursion_contain@@Base+0x80>
   1b890:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1b894:	mov	r5, r2
   1b898:	mov	r4, #0
   1b89c:	strd	r6, [sp, #8]
   1b8a0:	mov	r7, r1
   1b8a4:	mov	r6, r0
   1b8a8:	str	r8, [sp, #16]
   1b8ac:	str	lr, [sp, #20]
   1b8b0:	ldr	r8, [r0]
   1b8b4:	b	1b8c8 <myhtml_get_nodes_by_attribute_value_recursion_contain@@Base+0x44>
   1b8b8:	ldr	r3, [r6, #8]
   1b8bc:	sub	r3, r3, r4
   1b8c0:	cmp	r5, r3
   1b8c4:	bhi	1b8fc <myhtml_get_nodes_by_attribute_value_recursion_contain@@Base+0x78>
   1b8c8:	add	r0, r8, r4
   1b8cc:	mov	r2, r5
   1b8d0:	mov	r1, r7
   1b8d4:	add	r4, r4, #1
   1b8d8:	bl	10e80 <mycore_strncmp@plt>
   1b8dc:	cmp	r0, #0
   1b8e0:	bne	1b8b8 <myhtml_get_nodes_by_attribute_value_recursion_contain@@Base+0x34>
   1b8e4:	mov	r0, #1
   1b8e8:	ldrd	r4, [sp]
   1b8ec:	ldrd	r6, [sp, #8]
   1b8f0:	ldr	r8, [sp, #16]
   1b8f4:	add	sp, sp, #20
   1b8f8:	pop	{pc}		; (ldr pc, [sp], #4)
   1b8fc:	mov	r0, #0
   1b900:	b	1b8e8 <myhtml_get_nodes_by_attribute_value_recursion_contain@@Base+0x64>
   1b904:	mov	r0, #0
   1b908:	bx	lr

0001b90c <myhtml_init_marker@@Base>:
   1b90c:	str	r4, [sp, #-8]!
   1b910:	mov	r4, r0
   1b914:	mov	r0, #44	; 0x2c
   1b918:	str	lr, [sp, #4]
   1b91c:	bl	10c28 <mycore_malloc@plt>
   1b920:	cmp	r0, #0
   1b924:	str	r0, [r4, #36]	; 0x24
   1b928:	beq	1b93c <myhtml_init_marker@@Base+0x30>
   1b92c:	ldr	r4, [sp]
   1b930:	ldr	lr, [sp, #4]
   1b934:	add	sp, sp, #8
   1b938:	b	11030 <myhtml_tree_node_clean@plt>
   1b93c:	ldr	r4, [sp]
   1b940:	add	sp, sp, #4
   1b944:	pop	{pc}		; (ldr pc, [sp], #4)

0001b948 <myhtml_destroy_marker@@Base>:
   1b948:	ldr	r0, [r0, #36]	; 0x24
   1b94c:	cmp	r0, #0
   1b950:	beq	1b958 <myhtml_destroy_marker@@Base+0x10>
   1b954:	b	10d60 <mycore_free@plt>
   1b958:	bx	lr

0001b95c <myhtml_stream_create@@Base>:
   1b95c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1b960:	subs	r4, r2, #0
   1b964:	strd	r6, [sp, #8]
   1b968:	str	r8, [sp, #16]
   1b96c:	str	lr, [sp, #20]
   1b970:	bne	1b998 <myhtml_stream_create@@Base+0x3c>
   1b974:	mov	r3, r4
   1b978:	str	r4, [r0]
   1b97c:	str	r4, [r1]
   1b980:	ldrd	r4, [sp]
   1b984:	mov	r0, r3
   1b988:	ldrd	r6, [sp, #8]
   1b98c:	ldr	r8, [sp, #16]
   1b990:	add	sp, sp, #20
   1b994:	pop	{pc}		; (ldr pc, [sp], #4)
   1b998:	mov	r7, r1
   1b99c:	mov	r6, r3
   1b9a0:	mov	r5, r0
   1b9a4:	bl	fdb8 <mythread_create@plt>
   1b9a8:	cmp	r0, #0
   1b9ac:	mov	r2, r4
   1b9b0:	str	r0, [r5]
   1b9b4:	moveq	r3, #9
   1b9b8:	mov	r1, #0
   1b9bc:	streq	r3, [r7]
   1b9c0:	mov	r3, r6
   1b9c4:	bl	1103c <mythread_init@plt>
   1b9c8:	cmp	r0, #0
   1b9cc:	mov	r3, r0
   1b9d0:	str	r0, [r7]
   1b9d4:	beq	1b980 <myhtml_stream_create@@Base+0x24>
   1b9d8:	mov	r2, #0
   1b9dc:	mov	r3, #1
   1b9e0:	ldr	r0, [r5]
   1b9e4:	mov	r1, r2
   1b9e8:	bl	10940 <mythread_destroy@plt>
   1b9ec:	ldr	r3, [r7]
   1b9f0:	str	r0, [r5]
   1b9f4:	b	1b980 <myhtml_stream_create@@Base+0x24>

0001b9f8 <myhtml_batch_create@@Base>:
   1b9f8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1b9fc:	subs	r4, r2, #0
   1ba00:	strd	r6, [sp, #8]
   1ba04:	str	r8, [sp, #16]
   1ba08:	str	lr, [sp, #20]
   1ba0c:	bne	1ba34 <myhtml_batch_create@@Base+0x3c>
   1ba10:	mov	r3, r4
   1ba14:	str	r4, [r0, #4]
   1ba18:	str	r4, [r1]
   1ba1c:	ldrd	r4, [sp]
   1ba20:	mov	r0, r3
   1ba24:	ldrd	r6, [sp, #8]
   1ba28:	ldr	r8, [sp, #16]
   1ba2c:	add	sp, sp, #20
   1ba30:	pop	{pc}		; (ldr pc, [sp], #4)
   1ba34:	mov	r5, r0
   1ba38:	mov	r6, r1
   1ba3c:	mov	r7, r3
   1ba40:	bl	fdb8 <mythread_create@plt>
   1ba44:	ldr	r2, [r5]
   1ba48:	mov	r1, r0
   1ba4c:	str	r0, [r5, #4]
   1ba50:	cmp	r2, #0
   1ba54:	beq	1ba9c <myhtml_batch_create@@Base+0xa4>
   1ba58:	mov	r3, r7
   1ba5c:	mov	r0, r1
   1ba60:	mov	r2, r4
   1ba64:	mov	r1, #1
   1ba68:	bl	1103c <mythread_init@plt>
   1ba6c:	cmp	r0, #0
   1ba70:	mov	r3, r0
   1ba74:	str	r0, [r6]
   1ba78:	beq	1ba1c <myhtml_batch_create@@Base+0x24>
   1ba7c:	mov	r2, #0
   1ba80:	mov	r3, #1
   1ba84:	ldr	r0, [r5, #4]
   1ba88:	mov	r1, r2
   1ba8c:	bl	10940 <mythread_destroy@plt>
   1ba90:	ldr	r3, [r6]
   1ba94:	str	r0, [r5, #4]
   1ba98:	b	1ba1c <myhtml_batch_create@@Base+0x24>
   1ba9c:	mov	r3, #1
   1baa0:	mov	r1, r2
   1baa4:	mov	r0, r2
   1baa8:	bl	10940 <mythread_destroy@plt>
   1baac:	mov	r3, #9
   1bab0:	str	r0, [r5]
   1bab4:	ldr	r1, [r5, #4]
   1bab8:	str	r3, [r6]
   1babc:	b	1ba58 <myhtml_batch_create@@Base+0x60>

0001bac0 <myhtml_create_stream_and_batch@@Base>:
   1bac0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1bac4:	mov	r5, r1
   1bac8:	mov	r3, #0
   1bacc:	strd	r6, [sp, #8]
   1bad0:	mov	r7, r2
   1bad4:	mov	r2, r5
   1bad8:	str	r8, [sp, #16]
   1badc:	mov	r6, r0
   1bae0:	str	lr, [sp, #20]
   1bae4:	sub	sp, sp, #8
   1bae8:	add	r4, sp, #4
   1baec:	mov	r1, r4
   1baf0:	bl	103d0 <myhtml_stream_create@plt>
   1baf4:	subs	r8, r0, #0
   1baf8:	beq	1bb18 <myhtml_create_stream_and_batch@@Base+0x58>
   1bafc:	ldr	r0, [sp, #4]
   1bb00:	add	sp, sp, #8
   1bb04:	ldrd	r4, [sp]
   1bb08:	ldrd	r6, [sp, #8]
   1bb0c:	ldr	r8, [sp, #16]
   1bb10:	add	sp, sp, #20
   1bb14:	pop	{pc}		; (ldr pc, [sp], #4)
   1bb18:	mov	r3, r5
   1bb1c:	mov	r2, r7
   1bb20:	mov	r1, r4
   1bb24:	mov	r0, r6
   1bb28:	bl	1052c <myhtml_batch_create@plt>
   1bb2c:	cmp	r0, #0
   1bb30:	beq	1bafc <myhtml_create_stream_and_batch@@Base+0x3c>
   1bb34:	mov	r3, #1
   1bb38:	mov	r2, r8
   1bb3c:	ldr	r0, [r6]
   1bb40:	mov	r1, r8
   1bb44:	bl	10940 <mythread_destroy@plt>
   1bb48:	str	r0, [r6]
   1bb4c:	ldr	r0, [sp, #4]
   1bb50:	b	1bb00 <myhtml_create_stream_and_batch@@Base+0x40>

0001bb54 <myhtml_create@@Base>:
   1bb54:	mov	r1, #40	; 0x28
   1bb58:	mov	r0, #1
   1bb5c:	b	feb4 <mycore_calloc@plt>

0001bb60 <myhtml_clean@@Base>:
   1bb60:	bx	lr

0001bb64 <myhtml_init@@Base>:
   1bb64:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1bb68:	mov	r5, r0
   1bb6c:	strd	r6, [sp, #8]
   1bb70:	mov	r6, r1
   1bb74:	ldr	r7, [pc, #552]	; 1bda4 <myhtml_init@@Base+0x240>
   1bb78:	str	r8, [sp, #16]
   1bb7c:	mov	r8, r2
   1bb80:	str	lr, [sp, #20]
   1bb84:	sub	sp, sp, #8
   1bb88:	str	r1, [r0, #32]
   1bb8c:	bl	10a48 <myhtml_init_marker@plt>
   1bb90:	mov	r0, r5
   1bb94:	add	r7, pc, r7
   1bb98:	bl	fc5c <myhtml_tokenizer_state_init@plt>
   1bb9c:	subs	r4, r0, #0
   1bba0:	str	r0, [sp, #4]
   1bba4:	beq	1bbc4 <myhtml_init@@Base+0x60>
   1bba8:	mov	r0, r4
   1bbac:	add	sp, sp, #8
   1bbb0:	ldrd	r4, [sp]
   1bbb4:	ldrd	r6, [sp, #8]
   1bbb8:	ldr	r8, [sp, #16]
   1bbbc:	add	sp, sp, #20
   1bbc0:	pop	{pc}		; (ldr pc, [sp], #4)
   1bbc4:	mov	r0, r5
   1bbc8:	bl	10b80 <myhtml_rules_init@plt>
   1bbcc:	cmp	r0, #0
   1bbd0:	mov	r4, r0
   1bbd4:	str	r0, [sp, #4]
   1bbd8:	bne	1bba8 <myhtml_init@@Base+0x44>
   1bbdc:	cmp	r8, #0
   1bbe0:	bne	1bc74 <myhtml_init@@Base+0x110>
   1bbe4:	cmp	r6, #1
   1bbe8:	beq	1bd58 <myhtml_init@@Base+0x1f4>
   1bbec:	cmp	r6, #2
   1bbf0:	movne	r2, #1
   1bbf4:	movne	r6, #2
   1bbf8:	bne	1bc94 <myhtml_init@@Base+0x130>
   1bbfc:	mov	r8, #1
   1bc00:	mov	r2, #0
   1bc04:	mov	r1, #1
   1bc08:	mov	r0, r5
   1bc0c:	bl	10478 <myhtml_create_stream_and_batch@plt>
   1bc10:	cmp	r0, #0
   1bc14:	mov	r4, r0
   1bc18:	str	r0, [sp, #4]
   1bc1c:	bne	1bba8 <myhtml_init@@Base+0x44>
   1bc20:	add	r0, sp, #4
   1bc24:	ldr	r4, [r5]
   1bc28:	bl	1076c <mythread_queue_list_create@plt>
   1bc2c:	ldr	r2, [pc, #372]	; 1bda8 <myhtml_init@@Base+0x244>
   1bc30:	mov	r3, #4
   1bc34:	ldr	r1, [pc, #368]	; 1bdac <myhtml_init@@Base+0x248>
   1bc38:	str	r0, [r4, #16]
   1bc3c:	ldr	r0, [r5]
   1bc40:	ldr	r2, [r7, r2]
   1bc44:	ldr	r1, [r7, r1]
   1bc48:	bl	10850 <myhread_entry_create@plt>
   1bc4c:	ldrd	r2, [r5]
   1bc50:	mov	r1, #0
   1bc54:	mov	r4, r0
   1bc58:	cmp	r0, r1
   1bc5c:	str	r0, [sp, #4]
   1bc60:	strd	r2, [r5, #8]
   1bc64:	str	r1, [r5, #16]
   1bc68:	str	r8, [r5, #20]
   1bc6c:	bne	1bba8 <myhtml_init@@Base+0x44>
   1bc70:	b	1bd94 <myhtml_init@@Base+0x230>
   1bc74:	cmp	r6, #1
   1bc78:	beq	1bd54 <myhtml_init@@Base+0x1f0>
   1bc7c:	cmp	r6, #2
   1bc80:	beq	1bc00 <myhtml_init@@Base+0x9c>
   1bc84:	cmp	r8, #2
   1bc88:	movcs	r6, r8
   1bc8c:	movcc	r6, #2
   1bc90:	sub	r2, r6, #1
   1bc94:	mov	r1, #1
   1bc98:	mov	r0, r5
   1bc9c:	bl	10478 <myhtml_create_stream_and_batch@plt>
   1bca0:	cmp	r0, #0
   1bca4:	mov	r4, r0
   1bca8:	str	r0, [sp, #4]
   1bcac:	bne	1bba8 <myhtml_init@@Base+0x44>
   1bcb0:	add	r0, sp, #4
   1bcb4:	ldr	r4, [r5]
   1bcb8:	bl	1076c <mythread_queue_list_create@plt>
   1bcbc:	ldm	r5, {r1, ip}
   1bcc0:	mov	r3, #4
   1bcc4:	ldr	r2, [pc, #228]	; 1bdb0 <myhtml_init@@Base+0x24c>
   1bcc8:	str	r0, [r4, #16]
   1bccc:	mov	r0, r1
   1bcd0:	ldr	lr, [r1, #16]
   1bcd4:	ldr	r1, [pc, #208]	; 1bdac <myhtml_init@@Base+0x248>
   1bcd8:	str	lr, [ip, #16]
   1bcdc:	ldr	r2, [r7, r2]
   1bce0:	ldr	r1, [r7, r1]
   1bce4:	bl	10850 <myhread_entry_create@plt>
   1bce8:	cmp	r0, #0
   1bcec:	mov	r4, r0
   1bcf0:	str	r0, [sp, #4]
   1bcf4:	bne	1bba8 <myhtml_init@@Base+0x44>
   1bcf8:	ldr	r0, [r5, #4]
   1bcfc:	ldr	r3, [r0, #8]
   1bd00:	cmp	r3, #0
   1bd04:	beq	1bd7c <myhtml_init@@Base+0x218>
   1bd08:	ldr	r2, [pc, #164]	; 1bdb4 <myhtml_init@@Base+0x250>
   1bd0c:	ldr	r3, [pc, #164]	; 1bdb8 <myhtml_init@@Base+0x254>
   1bd10:	ldr	r8, [r7, r2]
   1bd14:	ldr	r7, [r7, r3]
   1bd18:	b	1bd2c <myhtml_init@@Base+0x1c8>
   1bd1c:	ldr	r0, [r5, #4]
   1bd20:	ldr	r3, [r0, #8]
   1bd24:	cmp	r3, r4
   1bd28:	bls	1bd7c <myhtml_init@@Base+0x218>
   1bd2c:	mov	r3, #4
   1bd30:	mov	r2, r8
   1bd34:	mov	r1, r7
   1bd38:	add	r4, r4, #1
   1bd3c:	bl	10850 <myhread_entry_create@plt>
   1bd40:	cmp	r0, #0
   1bd44:	str	r0, [sp, #4]
   1bd48:	beq	1bd1c <myhtml_init@@Base+0x1b8>
   1bd4c:	mov	r4, r0
   1bd50:	b	1bba8 <myhtml_init@@Base+0x44>
   1bd54:	mov	r6, r8
   1bd58:	mov	r2, #0
   1bd5c:	mov	r0, r5
   1bd60:	mov	r1, r2
   1bd64:	bl	10478 <myhtml_create_stream_and_batch@plt>
   1bd68:	cmp	r0, #0
   1bd6c:	mov	r4, r0
   1bd70:	str	r0, [sp, #4]
   1bd74:	bne	1bba8 <myhtml_init@@Base+0x44>
   1bd78:	ldr	r0, [r5, #4]
   1bd7c:	mov	r2, #0
   1bd80:	str	r0, [r5, #12]
   1bd84:	ldr	r3, [r5]
   1bd88:	str	r3, [r5, #8]
   1bd8c:	str	r2, [r5, #16]
   1bd90:	str	r6, [r5, #20]
   1bd94:	mov	r0, r5
   1bd98:	bl	fd88 <myhtml_clean@plt>
   1bd9c:	ldr	r4, [sp, #4]
   1bda0:	b	1bba8 <myhtml_init@@Base+0x44>
   1bda4:	andeq	sp, pc, r4, ror #8
   1bda8:	andeq	r0, r0, r4, asr #14
   1bdac:	andeq	r0, r0, r8, lsr r7
   1bdb0:	andeq	r0, r0, r0, asr #19
   1bdb4:	andeq	r0, r0, ip, asr #14
   1bdb8:	andeq	r0, r0, ip, lsr #14

0001bdbc <myhtml_destroy@@Base>:
   1bdbc:	strd	r4, [sp, #-16]!
   1bdc0:	subs	r4, r0, #0
   1bdc4:	str	r6, [sp, #8]
   1bdc8:	ldr	r6, [pc, #240]	; 1bec0 <myhtml_destroy@@Base+0x104>
   1bdcc:	str	lr, [sp, #12]
   1bdd0:	add	r6, pc, r6
   1bdd4:	beq	1be68 <myhtml_destroy@@Base+0xac>
   1bdd8:	bl	10724 <myhtml_destroy_marker@plt>
   1bddc:	ldr	r0, [r4]
   1bde0:	cmp	r0, #0
   1bde4:	beq	1be48 <myhtml_destroy@@Base+0x8c>
   1bde8:	ldr	r5, [r0, #16]
   1bdec:	cmp	r5, #0
   1bdf0:	beq	1be7c <myhtml_destroy@@Base+0xc0>
   1bdf4:	mov	r1, r5
   1bdf8:	bl	10d6c <mythread_queue_list_wait_for_done@plt>
   1bdfc:	ldr	r1, [pc, #192]	; 1bec4 <myhtml_destroy@@Base+0x108>
   1be00:	mov	r3, #1
   1be04:	mov	r2, #0
   1be08:	ldr	r0, [r4]
   1be0c:	ldr	r6, [r6, r1]
   1be10:	mov	r1, r6
   1be14:	bl	10940 <mythread_destroy@plt>
   1be18:	ldr	r3, [r4, #4]
   1be1c:	str	r0, [r4]
   1be20:	cmp	r3, #0
   1be24:	beq	1be40 <myhtml_destroy@@Base+0x84>
   1be28:	mov	r0, r3
   1be2c:	mov	r1, r6
   1be30:	mov	r3, #1
   1be34:	mov	r2, #0
   1be38:	bl	10940 <mythread_destroy@plt>
   1be3c:	str	r0, [r4, #4]
   1be40:	mov	r0, r5
   1be44:	bl	100d0 <mythread_queue_list_destroy@plt>
   1be48:	mov	r0, r4
   1be4c:	bl	10094 <myhtml_tokenizer_state_destroy@plt>
   1be50:	ldr	r0, [r4, #28]
   1be54:	cmp	r0, #0
   1be58:	beq	1be60 <myhtml_destroy@@Base+0xa4>
   1be5c:	bl	10d60 <mycore_free@plt>
   1be60:	mov	r0, r4
   1be64:	bl	10d60 <mycore_free@plt>
   1be68:	ldrd	r4, [sp]
   1be6c:	mov	r0, #0
   1be70:	ldr	r6, [sp, #8]
   1be74:	add	sp, sp, #12
   1be78:	pop	{pc}		; (ldr pc, [sp], #4)
   1be7c:	ldr	r1, [pc, #64]	; 1bec4 <myhtml_destroy@@Base+0x108>
   1be80:	mov	r3, #1
   1be84:	mov	r2, r5
   1be88:	ldr	r6, [r6, r1]
   1be8c:	mov	r1, r6
   1be90:	bl	10940 <mythread_destroy@plt>
   1be94:	ldr	r3, [r4, #4]
   1be98:	str	r0, [r4]
   1be9c:	cmp	r3, #0
   1bea0:	beq	1be48 <myhtml_destroy@@Base+0x8c>
   1bea4:	mov	r0, r3
   1bea8:	mov	r2, r5
   1beac:	mov	r1, r6
   1beb0:	mov	r3, #1
   1beb4:	bl	10940 <mythread_destroy@plt>
   1beb8:	str	r0, [r4, #4]
   1bebc:	b	1be48 <myhtml_destroy@@Base+0x8c>
   1bec0:	andeq	sp, pc, r8, lsr #4
   1bec4:	andeq	r0, r0, r0, ror #16

0001bec8 <myhtml_parse_chunk@@Base>:
   1bec8:	ldr	r3, [r0, #180]	; 0xb4
   1becc:	str	r4, [sp, #-8]!
   1bed0:	mov	r4, r0
   1bed4:	str	lr, [sp, #4]
   1bed8:	sub	sp, sp, #8
   1bedc:	tst	r3, #32
   1bee0:	bne	1befc <myhtml_parse_chunk@@Base+0x34>
   1bee4:	mov	r0, r4
   1bee8:	add	sp, sp, #8
   1beec:	ldr	r4, [sp]
   1bef0:	ldr	lr, [sp, #4]
   1bef4:	add	sp, sp, #8
   1bef8:	b	10064 <myhtml_tokenizer_chunk@plt>
   1befc:	stm	sp, {r1, r2}
   1bf00:	bl	10664 <myhtml_tree_clean@plt>
   1bf04:	ldm	sp, {r1, r2}
   1bf08:	b	1bee4 <myhtml_parse_chunk@@Base+0x1c>

0001bf0c <myhtml_parse_chunk_fragment@@Base>:
   1bf0c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1bf10:	mov	r4, r3
   1bf14:	mov	r5, r0
   1bf18:	ldr	r3, [r0, #180]	; 0xb4
   1bf1c:	strd	r6, [sp, #8]
   1bf20:	mov	r7, r1
   1bf24:	str	r8, [sp, #16]
   1bf28:	mov	r8, r2
   1bf2c:	str	lr, [sp, #20]
   1bf30:	ldr	r6, [sp, #24]
   1bf34:	tst	r3, #32
   1bf38:	bne	1bf88 <myhtml_parse_chunk_fragment@@Base+0x7c>
   1bf3c:	cmp	r4, #0
   1bf40:	mov	r0, r5
   1bf44:	moveq	r4, #42	; 0x2a
   1bf48:	cmp	r6, #0
   1bf4c:	movne	r2, r6
   1bf50:	moveq	r2, #1
   1bf54:	mov	r1, r4
   1bf58:	bl	fc38 <myhtml_tokenizer_fragment_init@plt>
   1bf5c:	cmp	r0, #0
   1bf60:	beq	1bf90 <myhtml_parse_chunk_fragment@@Base+0x84>
   1bf64:	mov	r2, r8
   1bf68:	mov	r1, r7
   1bf6c:	ldrd	r6, [sp, #8]
   1bf70:	mov	r0, r5
   1bf74:	ldrd	r4, [sp]
   1bf78:	ldr	r8, [sp, #16]
   1bf7c:	ldr	lr, [sp, #20]
   1bf80:	add	sp, sp, #24
   1bf84:	b	10064 <myhtml_tokenizer_chunk@plt>
   1bf88:	bl	10664 <myhtml_tree_clean@plt>
   1bf8c:	b	1bf3c <myhtml_parse_chunk_fragment@@Base+0x30>
   1bf90:	ldrd	r4, [sp]
   1bf94:	movw	r0, #37165	; 0x912d
   1bf98:	ldrd	r6, [sp, #8]
   1bf9c:	ldr	r8, [sp, #16]
   1bfa0:	add	sp, sp, #20
   1bfa4:	pop	{pc}		; (ldr pc, [sp], #4)

0001bfa8 <myhtml_parse_chunk_single@@Base>:
   1bfa8:	ldr	r3, [r0, #180]	; 0xb4
   1bfac:	tst	r3, #16
   1bfb0:	bne	1bfc0 <myhtml_parse_chunk_single@@Base+0x18>
   1bfb4:	ldr	r3, [r0, #180]	; 0xb4
   1bfb8:	orr	r3, r3, #16
   1bfbc:	str	r3, [r0, #180]	; 0xb4
   1bfc0:	b	109d0 <myhtml_parse_chunk@plt>

0001bfc4 <myhtml_parse_chunk_fragment_single@@Base>:
   1bfc4:	push	{lr}		; (str lr, [sp, #-4]!)
   1bfc8:	ldr	lr, [r0, #180]	; 0xb4
   1bfcc:	ldr	ip, [sp, #4]
   1bfd0:	tst	lr, #16
   1bfd4:	bne	1bfe4 <myhtml_parse_chunk_fragment_single@@Base+0x20>
   1bfd8:	ldr	lr, [r0, #180]	; 0xb4
   1bfdc:	orr	lr, lr, #16
   1bfe0:	str	lr, [r0, #180]	; 0xb4
   1bfe4:	str	ip, [sp, #4]
   1bfe8:	pop	{lr}		; (ldr lr, [sp], #4)
   1bfec:	b	10538 <myhtml_parse_chunk_fragment@plt>

0001bff0 <myhtml_parse_chunk_end@@Base>:
   1bff0:	b	10208 <myhtml_tokenizer_end@plt>

0001bff4 <myhtml_encoding_set@@Base>:
   1bff4:	cmp	r1, #41	; 0x29
   1bff8:	strls	r1, [r0, #200]	; 0xc8
   1bffc:	strls	r1, [r0, #204]	; 0xcc
   1c000:	bx	lr

0001c004 <myhtml_parse@@Base>:
   1c004:	ldr	ip, [r0, #180]	; 0xb4
   1c008:	strd	r4, [sp, #-16]!
   1c00c:	mov	r4, r0
   1c010:	mov	r5, r2
   1c014:	str	r6, [sp, #8]
   1c018:	mov	r6, r3
   1c01c:	str	lr, [sp, #12]
   1c020:	sub	sp, sp, #8
   1c024:	tst	ip, #32
   1c028:	bne	1c07c <myhtml_parse@@Base+0x78>
   1c02c:	mov	r0, r4
   1c030:	bl	10634 <myhtml_encoding_set@plt>
   1c034:	mov	r2, r6
   1c038:	mov	r1, r5
   1c03c:	mov	r0, r4
   1c040:	bl	100f4 <myhtml_tokenizer_begin@plt>
   1c044:	cmp	r0, #0
   1c048:	beq	1c060 <myhtml_parse@@Base+0x5c>
   1c04c:	add	sp, sp, #8
   1c050:	ldrd	r4, [sp]
   1c054:	ldr	r6, [sp, #8]
   1c058:	add	sp, sp, #12
   1c05c:	pop	{pc}		; (ldr pc, [sp], #4)
   1c060:	mov	r0, r4
   1c064:	add	sp, sp, #8
   1c068:	ldrd	r4, [sp]
   1c06c:	ldr	r6, [sp, #8]
   1c070:	ldr	lr, [sp, #12]
   1c074:	add	sp, sp, #16
   1c078:	b	10208 <myhtml_tokenizer_end@plt>
   1c07c:	str	r1, [sp, #4]
   1c080:	bl	10664 <myhtml_tree_clean@plt>
   1c084:	ldr	r1, [sp, #4]
   1c088:	b	1c02c <myhtml_parse@@Base+0x28>

0001c08c <myhtml_parse_fragment@@Base>:
   1c08c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1c090:	mov	r4, r0
   1c094:	strd	r6, [sp, #8]
   1c098:	mov	r7, r2
   1c09c:	strd	r8, [sp, #16]
   1c0a0:	mov	r8, r3
   1c0a4:	mov	r9, r1
   1c0a8:	ldr	r3, [r0, #180]	; 0xb4
   1c0ac:	str	sl, [sp, #24]
   1c0b0:	str	lr, [sp, #28]
   1c0b4:	ldr	r5, [sp, #32]
   1c0b8:	tst	r3, #32
   1c0bc:	ldr	r6, [sp, #36]	; 0x24
   1c0c0:	bne	1c148 <myhtml_parse_fragment@@Base+0xbc>
   1c0c4:	cmp	r5, #0
   1c0c8:	mov	r0, r4
   1c0cc:	moveq	r5, #42	; 0x2a
   1c0d0:	cmp	r6, #0
   1c0d4:	movne	r2, r6
   1c0d8:	moveq	r2, #1
   1c0dc:	mov	r1, r5
   1c0e0:	bl	fc38 <myhtml_tokenizer_fragment_init@plt>
   1c0e4:	cmp	r0, #0
   1c0e8:	beq	1c150 <myhtml_parse_fragment@@Base+0xc4>
   1c0ec:	mov	r1, r9
   1c0f0:	mov	r0, r4
   1c0f4:	bl	10634 <myhtml_encoding_set@plt>
   1c0f8:	mov	r2, r8
   1c0fc:	mov	r1, r7
   1c100:	mov	r0, r4
   1c104:	bl	100f4 <myhtml_tokenizer_begin@plt>
   1c108:	cmp	r0, #0
   1c10c:	beq	1c128 <myhtml_parse_fragment@@Base+0x9c>
   1c110:	ldrd	r4, [sp]
   1c114:	ldrd	r6, [sp, #8]
   1c118:	ldrd	r8, [sp, #16]
   1c11c:	ldr	sl, [sp, #24]
   1c120:	add	sp, sp, #28
   1c124:	pop	{pc}		; (ldr pc, [sp], #4)
   1c128:	mov	r0, r4
   1c12c:	ldrd	r4, [sp]
   1c130:	ldrd	r6, [sp, #8]
   1c134:	ldrd	r8, [sp, #16]
   1c138:	ldr	sl, [sp, #24]
   1c13c:	ldr	lr, [sp, #28]
   1c140:	add	sp, sp, #32
   1c144:	b	10208 <myhtml_tokenizer_end@plt>
   1c148:	bl	10664 <myhtml_tree_clean@plt>
   1c14c:	b	1c0c4 <myhtml_parse_fragment@@Base+0x38>
   1c150:	movw	r0, #37165	; 0x912d
   1c154:	b	1c110 <myhtml_parse_fragment@@Base+0x84>

0001c158 <myhtml_parse_single@@Base>:
   1c158:	ldr	ip, [r0, #180]	; 0xb4
   1c15c:	strd	r4, [sp, #-16]!
   1c160:	mov	r4, r0
   1c164:	mov	r5, r2
   1c168:	str	r6, [sp, #8]
   1c16c:	mov	r6, r3
   1c170:	str	lr, [sp, #12]
   1c174:	sub	sp, sp, #8
   1c178:	tst	ip, #32
   1c17c:	bne	1c1dc <myhtml_parse_single@@Base+0x84>
   1c180:	ldr	r3, [r4, #180]	; 0xb4
   1c184:	mov	r0, r4
   1c188:	orr	r3, r3, #16
   1c18c:	str	r3, [r4, #180]	; 0xb4
   1c190:	bl	10634 <myhtml_encoding_set@plt>
   1c194:	mov	r2, r6
   1c198:	mov	r1, r5
   1c19c:	mov	r0, r4
   1c1a0:	bl	100f4 <myhtml_tokenizer_begin@plt>
   1c1a4:	cmp	r0, #0
   1c1a8:	beq	1c1c0 <myhtml_parse_single@@Base+0x68>
   1c1ac:	add	sp, sp, #8
   1c1b0:	ldrd	r4, [sp]
   1c1b4:	ldr	r6, [sp, #8]
   1c1b8:	add	sp, sp, #12
   1c1bc:	pop	{pc}		; (ldr pc, [sp], #4)
   1c1c0:	mov	r0, r4
   1c1c4:	add	sp, sp, #8
   1c1c8:	ldrd	r4, [sp]
   1c1cc:	ldr	r6, [sp, #8]
   1c1d0:	ldr	lr, [sp, #12]
   1c1d4:	add	sp, sp, #16
   1c1d8:	b	10208 <myhtml_tokenizer_end@plt>
   1c1dc:	str	r1, [sp, #4]
   1c1e0:	bl	10664 <myhtml_tree_clean@plt>
   1c1e4:	ldr	r1, [sp, #4]
   1c1e8:	b	1c180 <myhtml_parse_single@@Base+0x28>

0001c1ec <myhtml_parse_fragment_single@@Base>:
   1c1ec:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1c1f0:	mov	r4, r0
   1c1f4:	strd	r6, [sp, #8]
   1c1f8:	mov	r7, r2
   1c1fc:	strd	r8, [sp, #16]
   1c200:	mov	r8, r3
   1c204:	mov	r9, r1
   1c208:	ldr	r3, [r0, #180]	; 0xb4
   1c20c:	str	sl, [sp, #24]
   1c210:	str	lr, [sp, #28]
   1c214:	ldr	r5, [sp, #32]
   1c218:	tst	r3, #32
   1c21c:	ldr	r6, [sp, #36]	; 0x24
   1c220:	bne	1c2b4 <myhtml_parse_fragment_single@@Base+0xc8>
   1c224:	ldr	r3, [r4, #180]	; 0xb4
   1c228:	cmp	r5, #0
   1c22c:	mov	r0, r4
   1c230:	moveq	r5, #42	; 0x2a
   1c234:	cmp	r6, #0
   1c238:	movne	r2, r6
   1c23c:	moveq	r2, #1
   1c240:	mov	r1, r5
   1c244:	orr	r3, r3, #16
   1c248:	str	r3, [r4, #180]	; 0xb4
   1c24c:	bl	fc38 <myhtml_tokenizer_fragment_init@plt>
   1c250:	cmp	r0, #0
   1c254:	beq	1c2bc <myhtml_parse_fragment_single@@Base+0xd0>
   1c258:	mov	r1, r9
   1c25c:	mov	r0, r4
   1c260:	bl	10634 <myhtml_encoding_set@plt>
   1c264:	mov	r2, r8
   1c268:	mov	r1, r7
   1c26c:	mov	r0, r4
   1c270:	bl	100f4 <myhtml_tokenizer_begin@plt>
   1c274:	cmp	r0, #0
   1c278:	beq	1c294 <myhtml_parse_fragment_single@@Base+0xa8>
   1c27c:	ldrd	r4, [sp]
   1c280:	ldrd	r6, [sp, #8]
   1c284:	ldrd	r8, [sp, #16]
   1c288:	ldr	sl, [sp, #24]
   1c28c:	add	sp, sp, #28
   1c290:	pop	{pc}		; (ldr pc, [sp], #4)
   1c294:	mov	r0, r4
   1c298:	ldrd	r4, [sp]
   1c29c:	ldrd	r6, [sp, #8]
   1c2a0:	ldrd	r8, [sp, #16]
   1c2a4:	ldr	sl, [sp, #24]
   1c2a8:	ldr	lr, [sp, #28]
   1c2ac:	add	sp, sp, #32
   1c2b0:	b	10208 <myhtml_tokenizer_end@plt>
   1c2b4:	bl	10664 <myhtml_tree_clean@plt>
   1c2b8:	b	1c224 <myhtml_parse_fragment_single@@Base+0x38>
   1c2bc:	movw	r0, #37165	; 0x912d
   1c2c0:	b	1c27c <myhtml_parse_fragment_single@@Base+0x90>

0001c2c4 <myhtml_encoding_get@@Base>:
   1c2c4:	ldr	r0, [r0, #200]	; 0xc8
   1c2c8:	bx	lr

0001c2cc <myhtml_node_first@@Base>:
   1c2cc:	ldr	r3, [r0, #88]	; 0x58
   1c2d0:	ldr	r0, [r0, #84]	; 0x54
   1c2d4:	cmp	r3, #0
   1c2d8:	beq	1c2f8 <myhtml_node_first@@Base+0x2c>
   1c2dc:	cmp	r0, #0
   1c2e0:	beq	1c2f4 <myhtml_node_first@@Base+0x28>
   1c2e4:	ldr	r0, [r0, #20]
   1c2e8:	cmp	r0, #0
   1c2ec:	beq	1c2f4 <myhtml_node_first@@Base+0x28>
   1c2f0:	ldr	r0, [r0, #20]
   1c2f4:	bx	lr
   1c2f8:	cmp	r0, #0
   1c2fc:	bne	1c2f0 <myhtml_node_first@@Base+0x24>
   1c300:	b	1c2f4 <myhtml_node_first@@Base+0x28>

0001c304 <myhtml_node_next@@Base>:
   1c304:	ldr	r0, [r0, #16]
   1c308:	bx	lr

0001c30c <myhtml_node_prev@@Base>:
   1c30c:	ldr	r0, [r0, #12]
   1c310:	bx	lr

0001c314 <myhtml_node_parent@@Base>:
   1c314:	ldr	r0, [r0, #24]
   1c318:	bx	lr

0001c31c <myhtml_node_child@@Base>:
   1c31c:	ldr	r0, [r0, #20]
   1c320:	bx	lr

0001c324 <myhtml_node_last_child@@Base>:
   1c324:	ldr	r0, [r0, #28]
   1c328:	bx	lr

0001c32c <myhtml_node_create@@Base>:
   1c32c:	strd	r4, [sp, #-16]!
   1c330:	mov	r5, r1
   1c334:	mov	r4, r2
   1c338:	str	r6, [sp, #8]
   1c33c:	str	lr, [sp, #12]
   1c340:	bl	ff80 <myhtml_tree_node_create@plt>
   1c344:	ldr	r6, [sp, #8]
   1c348:	str	r5, [r0, #4]
   1c34c:	str	r4, [r0, #8]
   1c350:	ldrd	r4, [sp]
   1c354:	add	sp, sp, #12
   1c358:	pop	{pc}		; (ldr pc, [sp], #4)

0001c35c <myhtml_node_remove@@Base>:
   1c35c:	b	10d84 <myhtml_tree_node_remove@plt>

0001c360 <myhtml_node_delete@@Base>:
   1c360:	b	10d54 <myhtml_tree_node_delete@plt>

0001c364 <myhtml_node_delete_recursive@@Base>:
   1c364:	b	ff8c <myhtml_tree_node_delete_recursive@plt>

0001c368 <myhtml_node_free@@Base>:
   1c368:	b	10c94 <myhtml_tree_node_free@plt>

0001c36c <myhtml_node_insert_before@@Base>:
   1c36c:	cmp	r1, #0
   1c370:	cmpne	r0, #0
   1c374:	beq	1c398 <myhtml_node_insert_before@@Base+0x2c>
   1c378:	str	r4, [sp, #-8]!
   1c37c:	mov	r4, r1
   1c380:	str	lr, [sp, #4]
   1c384:	bl	10388 <myhtml_tree_node_insert_before@plt>
   1c388:	mov	r0, r4
   1c38c:	ldr	r4, [sp]
   1c390:	add	sp, sp, #4
   1c394:	pop	{pc}		; (ldr pc, [sp], #4)
   1c398:	mov	r0, #0
   1c39c:	bx	lr

0001c3a0 <myhtml_node_insert_after@@Base>:
   1c3a0:	cmp	r1, #0
   1c3a4:	cmpne	r0, #0
   1c3a8:	beq	1c3cc <myhtml_node_insert_after@@Base+0x2c>
   1c3ac:	str	r4, [sp, #-8]!
   1c3b0:	mov	r4, r1
   1c3b4:	str	lr, [sp, #4]
   1c3b8:	bl	102f8 <myhtml_tree_node_insert_after@plt>
   1c3bc:	mov	r0, r4
   1c3c0:	ldr	r4, [sp]
   1c3c4:	add	sp, sp, #4
   1c3c8:	pop	{pc}		; (ldr pc, [sp], #4)
   1c3cc:	mov	r0, #0
   1c3d0:	bx	lr

0001c3d4 <myhtml_node_append_child@@Base>:
   1c3d4:	cmp	r1, #0
   1c3d8:	cmpne	r0, #0
   1c3dc:	beq	1c400 <myhtml_node_append_child@@Base+0x2c>
   1c3e0:	str	r4, [sp, #-8]!
   1c3e4:	mov	r4, r1
   1c3e8:	str	lr, [sp, #4]
   1c3ec:	bl	1064c <myhtml_tree_node_add_child@plt>
   1c3f0:	mov	r0, r4
   1c3f4:	ldr	r4, [sp]
   1c3f8:	add	sp, sp, #4
   1c3fc:	pop	{pc}		; (ldr pc, [sp], #4)
   1c400:	mov	r0, #0
   1c404:	bx	lr

0001c408 <myhtml_node_insert_to_appropriate_place@@Base>:
   1c408:	clz	r3, r1
   1c40c:	cmp	r0, #0
   1c410:	strd	r4, [sp, #-12]!
   1c414:	lsr	r3, r3, #5
   1c418:	moveq	r4, #1
   1c41c:	str	lr, [sp, #8]
   1c420:	sub	sp, sp, #12
   1c424:	movne	r4, r3
   1c428:	cmp	r4, #0
   1c42c:	movne	r0, #0
   1c430:	bne	1c464 <myhtml_node_insert_to_appropriate_place@@Base+0x5c>
   1c434:	ldr	r3, [r0, #40]	; 0x28
   1c438:	mov	r2, #1
   1c43c:	mov	r5, r1
   1c440:	add	r1, sp, #4
   1c444:	strb	r2, [r3, #188]	; 0xbc
   1c448:	bl	109c4 <myhtml_tree_appropriate_place_inserting_in_tree@plt>
   1c44c:	ldr	r3, [r0, #40]	; 0x28
   1c450:	mov	r1, r5
   1c454:	ldr	r2, [sp, #4]
   1c458:	strb	r4, [r3, #188]	; 0xbc
   1c45c:	bl	102ec <myhtml_tree_node_insert_by_mode@plt>
   1c460:	mov	r0, r5
   1c464:	add	sp, sp, #12
   1c468:	ldrd	r4, [sp]
   1c46c:	add	sp, sp, #8
   1c470:	pop	{pc}		; (ldr pc, [sp], #4)

0001c474 <myhtml_node_text_set@@Base>:
   1c474:	clz	ip, r0
   1c478:	lsr	ip, ip, #5
   1c47c:	cmp	r3, #41	; 0x29
   1c480:	orrhi	ip, ip, #1
   1c484:	cmp	ip, #0
   1c488:	bne	1c5cc <myhtml_node_text_set@@Base+0x158>
   1c48c:	ldr	ip, [r0, #32]
   1c490:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1c494:	mov	r4, r0
   1c498:	mov	r5, r3
   1c49c:	strd	r6, [sp, #8]
   1c4a0:	mov	r6, r2
   1c4a4:	str	r8, [sp, #16]
   1c4a8:	mov	r8, r1
   1c4ac:	str	lr, [sp, #20]
   1c4b0:	cmp	ip, #0
   1c4b4:	ldr	r7, [r0, #40]	; 0x28
   1c4b8:	beq	1c568 <myhtml_node_text_set@@Base+0xf4>
   1c4bc:	ldr	r2, [ip, #4]
   1c4c0:	cmp	r2, #0
   1c4c4:	beq	1c59c <myhtml_node_text_set@@Base+0x128>
   1c4c8:	ldr	r3, [ip, #8]
   1c4cc:	cmp	r3, r6
   1c4d0:	movcs	r3, #0
   1c4d4:	strcs	r3, [ip, #12]
   1c4d8:	bcc	1c530 <myhtml_node_text_set@@Base+0xbc>
   1c4dc:	cmp	r5, #0
   1c4e0:	add	r0, ip, #4
   1c4e4:	bne	1c51c <myhtml_node_text_set@@Base+0xa8>
   1c4e8:	mov	r2, r6
   1c4ec:	mov	r1, r8
   1c4f0:	bl	10868 <mycore_string_append@plt>
   1c4f4:	ldr	r3, [r4, #32]
   1c4f8:	mov	r2, #0
   1c4fc:	add	r0, r3, #4
   1c500:	str	r2, [r3, #24]
   1c504:	str	r2, [r3, #28]
   1c508:	ldrd	r4, [sp]
   1c50c:	ldrd	r6, [sp, #8]
   1c510:	ldr	r8, [sp, #16]
   1c514:	add	sp, sp, #20
   1c518:	pop	{pc}		; (ldr pc, [sp], #4)
   1c51c:	mov	r3, r5
   1c520:	mov	r2, r6
   1c524:	mov	r1, r8
   1c528:	bl	103f4 <myencoding_string_append@plt>
   1c52c:	b	1c4f4 <myhtml_node_text_set@@Base+0x80>
   1c530:	ldr	r0, [r7, #4]
   1c534:	ldr	r1, [ip, #20]
   1c538:	bl	106ac <mchar_async_free@plt>
   1c53c:	ldr	r2, [r4, #32]
   1c540:	mov	r3, r6
   1c544:	ldr	r0, [r7, #4]
   1c548:	ldr	r1, [r7, #52]	; 0x34
   1c54c:	add	r2, r2, #4
   1c550:	bl	105a4 <mycore_string_init@plt>
   1c554:	ldr	ip, [r4, #32]
   1c558:	cmp	r5, #0
   1c55c:	add	r0, ip, #4
   1c560:	beq	1c4e8 <myhtml_node_text_set@@Base+0x74>
   1c564:	b	1c51c <myhtml_node_text_set@@Base+0xa8>
   1c568:	ldr	r0, [r7, #8]
   1c56c:	ldr	r1, [r7, #40]	; 0x28
   1c570:	bl	109a0 <myhtml_token_node_create@plt>
   1c574:	cmp	r0, #0
   1c578:	mov	ip, r0
   1c57c:	str	r0, [r4, #32]
   1c580:	beq	1c5c4 <myhtml_node_text_set@@Base+0x150>
   1c584:	ldr	r3, [r0, #48]	; 0x30
   1c588:	ldr	r2, [ip, #4]
   1c58c:	orr	r3, r3, #4
   1c590:	cmp	r2, #0
   1c594:	str	r3, [r0, #48]	; 0x30
   1c598:	bne	1c4c8 <myhtml_node_text_set@@Base+0x54>
   1c59c:	add	r2, ip, #4
   1c5a0:	add	r3, r6, #2
   1c5a4:	ldr	r0, [r7, #4]
   1c5a8:	ldr	r1, [r7, #52]	; 0x34
   1c5ac:	bl	105a4 <mycore_string_init@plt>
   1c5b0:	ldr	ip, [r4, #32]
   1c5b4:	cmp	r5, #0
   1c5b8:	add	r0, ip, #4
   1c5bc:	beq	1c4e8 <myhtml_node_text_set@@Base+0x74>
   1c5c0:	b	1c51c <myhtml_node_text_set@@Base+0xa8>
   1c5c4:	mov	r0, #0
   1c5c8:	b	1c508 <myhtml_node_text_set@@Base+0x94>
   1c5cc:	mov	r0, #0
   1c5d0:	bx	lr

0001c5d4 <myhtml_node_text_set_with_charef@@Base>:
   1c5d4:	clz	ip, r0
   1c5d8:	lsr	ip, ip, #5
   1c5dc:	cmp	r3, #41	; 0x29
   1c5e0:	orrhi	ip, ip, #1
   1c5e4:	cmp	ip, #0
   1c5e8:	bne	1c728 <myhtml_node_text_set_with_charef@@Base+0x154>
   1c5ec:	ldr	ip, [r0, #32]
   1c5f0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1c5f4:	mov	r4, r0
   1c5f8:	ldr	r5, [r0, #40]	; 0x28
   1c5fc:	strd	r6, [sp, #8]
   1c600:	mov	r7, r2
   1c604:	mov	r6, r3
   1c608:	str	r8, [sp, #16]
   1c60c:	mov	r8, r1
   1c610:	cmp	ip, #0
   1c614:	str	lr, [sp, #20]
   1c618:	sub	sp, sp, #64	; 0x40
   1c61c:	beq	1c6d4 <myhtml_node_text_set_with_charef@@Base+0x100>
   1c620:	ldr	r2, [ip, #4]
   1c624:	cmp	r2, #0
   1c628:	beq	1c708 <myhtml_node_text_set_with_charef@@Base+0x134>
   1c62c:	ldr	r3, [ip, #8]
   1c630:	cmp	r3, r7
   1c634:	movcs	r3, #0
   1c638:	strcs	r3, [ip, #12]
   1c63c:	bcc	1c6ac <myhtml_node_text_set_with_charef@@Base+0xd8>
   1c640:	mov	r5, sp
   1c644:	mov	r0, r5
   1c648:	bl	10484 <myhtml_data_process_entry_clean@plt>
   1c64c:	add	r0, sp, #8
   1c650:	str	r6, [sp, #4]
   1c654:	bl	10160 <myencoding_result_clean@plt>
   1c658:	ldr	r1, [r4, #32]
   1c65c:	mov	r3, r7
   1c660:	mov	r2, r8
   1c664:	mov	r0, r5
   1c668:	add	r1, r1, #4
   1c66c:	bl	106e8 <myhtml_data_process@plt>
   1c670:	ldr	r1, [r4, #32]
   1c674:	mov	r0, r5
   1c678:	add	r1, r1, #4
   1c67c:	bl	108bc <myhtml_data_process_end@plt>
   1c680:	ldr	r3, [r4, #32]
   1c684:	mov	r2, #0
   1c688:	add	r0, r3, #4
   1c68c:	str	r2, [r3, #24]
   1c690:	str	r2, [r3, #28]
   1c694:	add	sp, sp, #64	; 0x40
   1c698:	ldrd	r4, [sp]
   1c69c:	ldrd	r6, [sp, #8]
   1c6a0:	ldr	r8, [sp, #16]
   1c6a4:	add	sp, sp, #20
   1c6a8:	pop	{pc}		; (ldr pc, [sp], #4)
   1c6ac:	ldr	r0, [r5, #4]
   1c6b0:	ldr	r1, [ip, #20]
   1c6b4:	bl	106ac <mchar_async_free@plt>
   1c6b8:	ldr	r2, [r4, #32]
   1c6bc:	mov	r3, r7
   1c6c0:	ldr	r0, [r5, #4]
   1c6c4:	ldr	r1, [r5, #52]	; 0x34
   1c6c8:	add	r2, r2, #4
   1c6cc:	bl	105a4 <mycore_string_init@plt>
   1c6d0:	b	1c640 <myhtml_node_text_set_with_charef@@Base+0x6c>
   1c6d4:	ldr	r0, [r5, #8]
   1c6d8:	ldr	r1, [r5, #40]	; 0x28
   1c6dc:	bl	109a0 <myhtml_token_node_create@plt>
   1c6e0:	cmp	r0, #0
   1c6e4:	mov	ip, r0
   1c6e8:	str	r0, [r4, #32]
   1c6ec:	beq	1c720 <myhtml_node_text_set_with_charef@@Base+0x14c>
   1c6f0:	ldr	r3, [r0, #48]	; 0x30
   1c6f4:	ldr	r2, [ip, #4]
   1c6f8:	orr	r3, r3, #4
   1c6fc:	cmp	r2, #0
   1c700:	str	r3, [r0, #48]	; 0x30
   1c704:	bne	1c62c <myhtml_node_text_set_with_charef@@Base+0x58>
   1c708:	add	r2, ip, #4
   1c70c:	add	r3, r7, #2
   1c710:	ldr	r0, [r5, #4]
   1c714:	ldr	r1, [r5, #52]	; 0x34
   1c718:	bl	105a4 <mycore_string_init@plt>
   1c71c:	b	1c640 <myhtml_node_text_set_with_charef@@Base+0x6c>
   1c720:	mov	r0, #0
   1c724:	b	1c694 <myhtml_node_text_set_with_charef@@Base+0xc0>
   1c728:	mov	r0, #0
   1c72c:	bx	lr

0001c730 <myhtml_node_token@@Base>:
   1c730:	ldr	r0, [r0, #32]
   1c734:	bx	lr

0001c738 <myhtml_node_namespace@@Base>:
   1c738:	ldr	r0, [r0, #8]
   1c73c:	bx	lr

0001c740 <myhtml_node_namespace_set@@Base>:
   1c740:	str	r1, [r0, #8]
   1c744:	bx	lr

0001c748 <myhtml_node_tag_id@@Base>:
   1c748:	ldr	r0, [r0, #4]
   1c74c:	bx	lr

0001c750 <myhtml_tag_name_by_id@@Base>:
   1c750:	str	r4, [sp, #-8]!
   1c754:	subs	r4, r2, #0
   1c758:	movne	r3, #0
   1c75c:	str	lr, [sp, #4]
   1c760:	strne	r3, [r4]
   1c764:	cmp	r0, #0
   1c768:	beq	1c7a0 <myhtml_tag_name_by_id@@Base+0x50>
   1c76c:	ldr	r0, [r0, #28]
   1c770:	cmp	r0, #0
   1c774:	beq	1c7a0 <myhtml_tag_name_by_id@@Base+0x50>
   1c778:	bl	109b8 <myhtml_tag_get_by_id@plt>
   1c77c:	cmp	r0, #0
   1c780:	beq	1c7a0 <myhtml_tag_name_by_id@@Base+0x50>
   1c784:	cmp	r4, #0
   1c788:	ldrne	r3, [r0, #8]
   1c78c:	ldr	r0, [r0, #4]
   1c790:	strne	r3, [r4]
   1c794:	ldr	r4, [sp]
   1c798:	add	sp, sp, #4
   1c79c:	pop	{pc}		; (ldr pc, [sp], #4)
   1c7a0:	ldr	r4, [sp]
   1c7a4:	add	sp, sp, #4
   1c7a8:	mov	r0, #0
   1c7ac:	pop	{pc}		; (ldr pc, [sp], #4)

0001c7b0 <myhtml_tag_id_by_name@@Base>:
   1c7b0:	cmp	r0, #0
   1c7b4:	beq	1c7e8 <myhtml_tag_id_by_name@@Base+0x38>
   1c7b8:	ldr	r0, [r0, #28]
   1c7bc:	cmp	r0, #0
   1c7c0:	beq	1c7e8 <myhtml_tag_id_by_name@@Base+0x38>
   1c7c4:	str	r4, [sp, #-8]!
   1c7c8:	str	lr, [sp, #4]
   1c7cc:	bl	10b08 <myhtml_tag_get_by_name@plt>
   1c7d0:	cmp	r0, #0
   1c7d4:	ldr	r4, [sp]
   1c7d8:	add	sp, sp, #4
   1c7dc:	moveq	r0, #0
   1c7e0:	ldrne	r0, [r0]
   1c7e4:	pop	{pc}		; (ldr pc, [sp], #4)
   1c7e8:	mov	r0, #0
   1c7ec:	bx	lr

0001c7f0 <myhtml_node_is_close_self@@Base>:
   1c7f0:	ldr	r0, [r0, #32]
   1c7f4:	cmp	r0, #0
   1c7f8:	ldrne	r0, [r0, #48]	; 0x30
   1c7fc:	ubfxne	r0, r0, #1, #1
   1c800:	bx	lr

0001c804 <myhtml_node_is_void_element@@Base>:
   1c804:	ldr	r3, [r0, #4]
   1c808:	sub	r3, r3, #10
   1c80c:	cmp	r3, #132	; 0x84
   1c810:	addls	pc, pc, r3, lsl #2
   1c814:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c818:	b	1ca2c <myhtml_node_is_void_element@@Base+0x228>
   1c81c:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c820:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c824:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c828:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c82c:	b	1ca2c <myhtml_node_is_void_element@@Base+0x228>
   1c830:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c834:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c838:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c83c:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c840:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c844:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c848:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c84c:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c850:	b	1ca2c <myhtml_node_is_void_element@@Base+0x228>
   1c854:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c858:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c85c:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c860:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c864:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c868:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c86c:	b	1ca2c <myhtml_node_is_void_element@@Base+0x228>
   1c870:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c874:	b	1ca2c <myhtml_node_is_void_element@@Base+0x228>
   1c878:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c87c:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c880:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c884:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c888:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c88c:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c890:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c894:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c898:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c89c:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c8a0:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c8a4:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c8a8:	b	1ca2c <myhtml_node_is_void_element@@Base+0x228>
   1c8ac:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c8b0:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c8b4:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c8b8:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c8bc:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c8c0:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c8c4:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c8c8:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c8cc:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c8d0:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c8d4:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c8d8:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c8dc:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c8e0:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c8e4:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c8e8:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c8ec:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c8f0:	b	1ca2c <myhtml_node_is_void_element@@Base+0x228>
   1c8f4:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c8f8:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c8fc:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c900:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c904:	b	1ca2c <myhtml_node_is_void_element@@Base+0x228>
   1c908:	b	1ca2c <myhtml_node_is_void_element@@Base+0x228>
   1c90c:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c910:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c914:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c918:	b	1ca2c <myhtml_node_is_void_element@@Base+0x228>
   1c91c:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c920:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c924:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c928:	b	1ca2c <myhtml_node_is_void_element@@Base+0x228>
   1c92c:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c930:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c934:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c938:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c93c:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c940:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c944:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c948:	b	1ca2c <myhtml_node_is_void_element@@Base+0x228>
   1c94c:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c950:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c954:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c958:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c95c:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c960:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c964:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c968:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c96c:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c970:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c974:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c978:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c97c:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c980:	b	1ca2c <myhtml_node_is_void_element@@Base+0x228>
   1c984:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c988:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c98c:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c990:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c994:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c998:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c99c:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c9a0:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c9a4:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c9a8:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c9ac:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c9b0:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c9b4:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c9b8:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c9bc:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c9c0:	b	1ca2c <myhtml_node_is_void_element@@Base+0x228>
   1c9c4:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c9c8:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c9cc:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c9d0:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c9d4:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c9d8:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c9dc:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c9e0:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c9e4:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c9e8:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c9ec:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c9f0:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c9f4:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c9f8:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1c9fc:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1ca00:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1ca04:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1ca08:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1ca0c:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1ca10:	b	1ca2c <myhtml_node_is_void_element@@Base+0x228>
   1ca14:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1ca18:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1ca1c:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1ca20:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1ca24:	b	1ca34 <myhtml_node_is_void_element@@Base+0x230>
   1ca28:	b	1ca2c <myhtml_node_is_void_element@@Base+0x228>
   1ca2c:	mov	r0, #1
   1ca30:	bx	lr
   1ca34:	mov	r0, #0
   1ca38:	bx	lr

0001ca3c <myhtml_node_attribute_first@@Base>:
   1ca3c:	ldr	r0, [r0, #32]
   1ca40:	cmp	r0, #0
   1ca44:	ldrne	r0, [r0, #40]	; 0x28
   1ca48:	bx	lr

0001ca4c <myhtml_node_attribute_last@@Base>:
   1ca4c:	ldr	r0, [r0, #32]
   1ca50:	cmp	r0, #0
   1ca54:	ldrne	r0, [r0, #44]	; 0x2c
   1ca58:	bx	lr

0001ca5c <myhtml_node_text@@Base>:
   1ca5c:	ldr	r3, [r0, #32]
   1ca60:	cmp	r3, #0
   1ca64:	beq	1ca74 <myhtml_node_text@@Base+0x18>
   1ca68:	ldr	r2, [r3, #12]
   1ca6c:	cmp	r2, #0
   1ca70:	bne	1ca8c <myhtml_node_text@@Base+0x30>
   1ca74:	cmp	r1, #0
   1ca78:	beq	1caa8 <myhtml_node_text@@Base+0x4c>
   1ca7c:	mov	r3, #0
   1ca80:	mov	r0, r3
   1ca84:	str	r3, [r1]
   1ca88:	bx	lr
   1ca8c:	ldr	r0, [r3, #4]
   1ca90:	cmp	r0, #0
   1ca94:	beq	1ca74 <myhtml_node_text@@Base+0x18>
   1ca98:	cmp	r1, #0
   1ca9c:	beq	1caac <myhtml_node_text@@Base+0x50>
   1caa0:	str	r2, [r1]
   1caa4:	bx	lr
   1caa8:	mov	r0, r1
   1caac:	bx	lr

0001cab0 <myhtml_node_string@@Base>:
   1cab0:	cmp	r0, #0
   1cab4:	beq	1cac4 <myhtml_node_string@@Base+0x14>
   1cab8:	ldr	r0, [r0, #32]
   1cabc:	cmp	r0, #0
   1cac0:	addne	r0, r0, #4
   1cac4:	bx	lr

0001cac8 <myhtml_node_raw_position@@Base>:
   1cac8:	cmp	r1, #0
   1cacc:	mov	r3, r0
   1cad0:	beq	1caf8 <myhtml_node_raw_position@@Base+0x30>
   1cad4:	ldr	r1, [r1, #32]
   1cad8:	cmp	r1, #0
   1cadc:	beq	1caf8 <myhtml_node_raw_position@@Base+0x30>
   1cae0:	ldr	r2, [r1, #24]
   1cae4:	mov	r0, r3
   1cae8:	ldr	r1, [r1, #28]
   1caec:	str	r2, [r3]
   1caf0:	str	r1, [r3, #4]
   1caf4:	bx	lr
   1caf8:	mov	r2, r1
   1cafc:	mov	r0, r3
   1cb00:	str	r2, [r3]
   1cb04:	str	r1, [r3, #4]
   1cb08:	bx	lr

0001cb0c <myhtml_node_element_position@@Base>:
   1cb0c:	cmp	r1, #0
   1cb10:	mov	r3, r0
   1cb14:	beq	1cb3c <myhtml_node_element_position@@Base+0x30>
   1cb18:	ldr	r1, [r1, #32]
   1cb1c:	cmp	r1, #0
   1cb20:	beq	1cb3c <myhtml_node_element_position@@Base+0x30>
   1cb24:	ldr	r2, [r1, #32]
   1cb28:	mov	r0, r3
   1cb2c:	ldr	r1, [r1, #36]	; 0x24
   1cb30:	str	r2, [r3]
   1cb34:	str	r1, [r3, #4]
   1cb38:	bx	lr
   1cb3c:	mov	r2, r1
   1cb40:	mov	r0, r3
   1cb44:	str	r2, [r3]
   1cb48:	str	r1, [r3, #4]
   1cb4c:	bx	lr

0001cb50 <myhtml_node_set_data@@Base>:
   1cb50:	str	r1, [r0, #36]	; 0x24
   1cb54:	bx	lr

0001cb58 <myhtml_node_get_data@@Base>:
   1cb58:	ldr	r0, [r0, #36]	; 0x24
   1cb5c:	bx	lr

0001cb60 <myhtml_node_tree@@Base>:
   1cb60:	ldr	r0, [r0, #40]	; 0x28
   1cb64:	bx	lr

0001cb68 <myhtml_attribute_next@@Base>:
   1cb68:	ldr	r0, [r0]
   1cb6c:	bx	lr

0001cb70 <myhtml_attribute_prev@@Base>:
   1cb70:	ldr	r0, [r0, #4]
   1cb74:	bx	lr

0001cb78 <myhtml_attribute_namespace@@Base>:
   1cb78:	ldr	r0, [r0, #64]	; 0x40
   1cb7c:	bx	lr

0001cb80 <myhtml_attribute_namespace_set@@Base>:
   1cb80:	str	r1, [r0, #64]	; 0x40
   1cb84:	bx	lr

0001cb88 <myhtml_attribute_key@@Base>:
   1cb88:	ldr	r3, [r0, #8]
   1cb8c:	cmp	r3, #0
   1cb90:	beq	1cba0 <myhtml_attribute_key@@Base+0x18>
   1cb94:	ldr	r2, [r0, #16]
   1cb98:	cmp	r2, #0
   1cb9c:	bne	1cbc0 <myhtml_attribute_key@@Base+0x38>
   1cba0:	cmp	r1, #0
   1cba4:	moveq	r3, r1
   1cba8:	beq	1cbb8 <myhtml_attribute_key@@Base+0x30>
   1cbac:	mov	r2, #0
   1cbb0:	mov	r3, r2
   1cbb4:	str	r2, [r1]
   1cbb8:	mov	r0, r3
   1cbbc:	bx	lr
   1cbc0:	cmp	r1, #0
   1cbc4:	bne	1cbb4 <myhtml_attribute_key@@Base+0x2c>
   1cbc8:	b	1cbb8 <myhtml_attribute_key@@Base+0x30>

0001cbcc <myhtml_attribute_value@@Base>:
   1cbcc:	ldr	r3, [r0, #28]
   1cbd0:	cmp	r3, #0
   1cbd4:	beq	1cbe4 <myhtml_attribute_value@@Base+0x18>
   1cbd8:	ldr	r2, [r0, #36]	; 0x24
   1cbdc:	cmp	r2, #0
   1cbe0:	bne	1cc04 <myhtml_attribute_value@@Base+0x38>
   1cbe4:	cmp	r1, #0
   1cbe8:	moveq	r3, r1
   1cbec:	beq	1cbfc <myhtml_attribute_value@@Base+0x30>
   1cbf0:	mov	r2, #0
   1cbf4:	mov	r3, r2
   1cbf8:	str	r2, [r1]
   1cbfc:	mov	r0, r3
   1cc00:	bx	lr
   1cc04:	cmp	r1, #0
   1cc08:	bne	1cbf8 <myhtml_attribute_value@@Base+0x2c>
   1cc0c:	b	1cbfc <myhtml_attribute_value@@Base+0x30>

0001cc10 <myhtml_attribute_key_string@@Base>:
   1cc10:	cmp	r0, #0
   1cc14:	addne	r0, r0, #8
   1cc18:	bx	lr

0001cc1c <myhtml_attribute_value_string@@Base>:
   1cc1c:	cmp	r0, #0
   1cc20:	addne	r0, r0, #28
   1cc24:	bx	lr

0001cc28 <myhtml_attribute_by_key@@Base>:
   1cc28:	cmp	r0, #0
   1cc2c:	beq	1cc40 <myhtml_attribute_by_key@@Base+0x18>
   1cc30:	ldr	r0, [r0, #32]
   1cc34:	cmp	r0, #0
   1cc38:	beq	1cc40 <myhtml_attribute_by_key@@Base+0x18>
   1cc3c:	b	10e44 <myhtml_token_attr_by_name@plt>
   1cc40:	mov	r0, #0
   1cc44:	bx	lr

0001cc48 <myhtml_attribute_add@@Base>:
   1cc48:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1cc4c:	subs	r4, r0, #0
   1cc50:	strd	r6, [sp, #8]
   1cc54:	str	r8, [sp, #16]
   1cc58:	str	lr, [sp, #20]
   1cc5c:	sub	sp, sp, #16
   1cc60:	beq	1ccf0 <myhtml_attribute_add@@Base+0xa8>
   1cc64:	mov	r7, r1
   1cc68:	ldr	r1, [r4, #32]
   1cc6c:	mov	r5, r3
   1cc70:	mov	r8, r2
   1cc74:	ldr	r6, [r4, #40]	; 0x28
   1cc78:	cmp	r1, #0
   1cc7c:	ldr	r0, [r6, #8]
   1cc80:	ldr	ip, [r6, #40]	; 0x28
   1cc84:	beq	1ccc0 <myhtml_attribute_add@@Base+0x78>
   1cc88:	str	ip, [sp, #8]
   1cc8c:	mov	r3, r8
   1cc90:	mov	r2, r7
   1cc94:	ldr	lr, [sp, #40]	; 0x28
   1cc98:	ldr	ip, [sp, #44]	; 0x2c
   1cc9c:	stm	sp, {r5, lr}
   1cca0:	str	ip, [sp, #12]
   1cca4:	bl	10784 <myhtml_token_node_attr_append_with_convert_encoding@plt>
   1cca8:	add	sp, sp, #16
   1ccac:	ldrd	r4, [sp]
   1ccb0:	ldrd	r6, [sp, #8]
   1ccb4:	ldr	r8, [sp, #16]
   1ccb8:	add	sp, sp, #20
   1ccbc:	pop	{pc}		; (ldr pc, [sp], #4)
   1ccc0:	mov	r1, ip
   1ccc4:	bl	109a0 <myhtml_token_node_create@plt>
   1ccc8:	cmp	r0, #0
   1cccc:	mov	r1, r0
   1ccd0:	str	r0, [r4, #32]
   1ccd4:	beq	1ccf0 <myhtml_attribute_add@@Base+0xa8>
   1ccd8:	ldr	r3, [r0, #48]	; 0x30
   1ccdc:	ldr	r0, [r6, #8]
   1cce0:	ldr	ip, [r6, #40]	; 0x28
   1cce4:	orr	r3, r3, #4
   1cce8:	str	r3, [r1, #48]	; 0x30
   1ccec:	b	1cc88 <myhtml_attribute_add@@Base+0x40>
   1ccf0:	mov	r0, #0
   1ccf4:	b	1cca8 <myhtml_attribute_add@@Base+0x60>

0001ccf8 <myhtml_attribute_remove@@Base>:
   1ccf8:	cmp	r0, #0
   1ccfc:	beq	1cd10 <myhtml_attribute_remove@@Base+0x18>
   1cd00:	ldr	r0, [r0, #32]
   1cd04:	cmp	r0, #0
   1cd08:	beq	1cd10 <myhtml_attribute_remove@@Base+0x18>
   1cd0c:	b	10508 <myhtml_token_attr_remove@plt>
   1cd10:	mov	r0, #0
   1cd14:	bx	lr

0001cd18 <myhtml_attribute_remove_by_key@@Base>:
   1cd18:	cmp	r0, #0
   1cd1c:	beq	1cd30 <myhtml_attribute_remove_by_key@@Base+0x18>
   1cd20:	ldr	r0, [r0, #32]
   1cd24:	cmp	r0, #0
   1cd28:	beq	1cd30 <myhtml_attribute_remove_by_key@@Base+0x18>
   1cd2c:	b	10e2c <myhtml_token_attr_remove_by_name@plt>
   1cd30:	mov	r0, #0
   1cd34:	bx	lr

0001cd38 <myhtml_attribute_free@@Base>:
   1cd38:	ldr	r2, [r1, #8]
   1cd3c:	strd	r4, [sp, #-16]!
   1cd40:	mov	r4, r1
   1cd44:	mov	r5, r0
   1cd48:	str	r6, [sp, #8]
   1cd4c:	str	lr, [sp, #12]
   1cd50:	cmp	r2, #0
   1cd54:	beq	1cd60 <myhtml_attribute_free@@Base+0x28>
   1cd58:	ldrd	r0, [r1, #20]
   1cd5c:	bl	106ac <mchar_async_free@plt>
   1cd60:	ldr	r2, [r4, #28]
   1cd64:	cmp	r2, #0
   1cd68:	beq	1cd74 <myhtml_attribute_free@@Base+0x3c>
   1cd6c:	ldrd	r0, [r4, #40]	; 0x28
   1cd70:	bl	106ac <mchar_async_free@plt>
   1cd74:	ldr	r3, [r5, #8]
   1cd78:	mov	r1, r4
   1cd7c:	ldrd	r4, [sp]
   1cd80:	ldr	r6, [sp, #8]
   1cd84:	ldr	r0, [r3, #8]
   1cd88:	ldr	lr, [sp, #12]
   1cd8c:	add	sp, sp, #16
   1cd90:	b	ffec <mcobject_async_free@plt>

0001cd94 <myhtml_attribute_delete@@Base>:
   1cd94:	cmp	r1, #0
   1cd98:	bxeq	lr
   1cd9c:	ldr	r3, [r1, #32]
   1cda0:	cmp	r3, #0
   1cda4:	bxeq	lr
   1cda8:	mov	r1, r2
   1cdac:	strd	r4, [sp, #-16]!
   1cdb0:	mov	r4, r2
   1cdb4:	mov	r5, r0
   1cdb8:	mov	r0, r3
   1cdbc:	str	r6, [sp, #8]
   1cdc0:	str	lr, [sp, #12]
   1cdc4:	bl	10508 <myhtml_token_attr_remove@plt>
   1cdc8:	mov	r1, r4
   1cdcc:	mov	r0, r5
   1cdd0:	ldrd	r4, [sp]
   1cdd4:	ldr	r6, [sp, #8]
   1cdd8:	ldr	lr, [sp, #12]
   1cddc:	add	sp, sp, #16
   1cde0:	b	1073c <myhtml_attribute_free@plt>

0001cde4 <myhtml_attribute_key_raw_position@@Base>:
   1cde4:	cmp	r1, #0
   1cde8:	ldrne	r2, [r1, #48]	; 0x30
   1cdec:	moveq	r2, r1
   1cdf0:	ldrne	r1, [r1, #52]	; 0x34
   1cdf4:	str	r2, [r0]
   1cdf8:	str	r1, [r0, #4]
   1cdfc:	bx	lr

0001ce00 <myhtml_attribute_value_raw_position@@Base>:
   1ce00:	cmp	r1, #0
   1ce04:	ldrne	r2, [r1, #56]	; 0x38
   1ce08:	moveq	r2, r1
   1ce0c:	ldrne	r1, [r1, #60]	; 0x3c
   1ce10:	str	r2, [r0]
   1ce14:	str	r1, [r0, #4]
   1ce18:	bx	lr

0001ce1c <myhtml_collection_create@@Base>:
   1ce1c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1ce20:	mov	r5, r1
   1ce24:	strd	r6, [sp, #8]
   1ce28:	mov	r6, r0
   1ce2c:	mov	r0, #12
   1ce30:	str	r8, [sp, #16]
   1ce34:	str	lr, [sp, #20]
   1ce38:	bl	10c28 <mycore_malloc@plt>
   1ce3c:	subs	r4, r0, #0
   1ce40:	beq	1ce80 <myhtml_collection_create@@Base+0x64>
   1ce44:	mov	r7, #0
   1ce48:	lsl	r0, r6, #2
   1ce4c:	strd	r6, [r4, #4]
   1ce50:	bl	10c28 <mycore_malloc@plt>
   1ce54:	cmp	r0, r7
   1ce58:	str	r0, [r4]
   1ce5c:	beq	1ce98 <myhtml_collection_create@@Base+0x7c>
   1ce60:	cmp	r5, #0
   1ce64:	strne	r7, [r5]
   1ce68:	mov	r0, r4
   1ce6c:	ldrd	r4, [sp]
   1ce70:	ldrd	r6, [sp, #8]
   1ce74:	ldr	r8, [sp, #16]
   1ce78:	add	sp, sp, #20
   1ce7c:	pop	{pc}		; (ldr pc, [sp], #4)
   1ce80:	cmp	r5, #0
   1ce84:	beq	1cea8 <myhtml_collection_create@@Base+0x8c>
   1ce88:	mov	r3, #2
   1ce8c:	mov	r4, #0
   1ce90:	str	r3, [r5]
   1ce94:	b	1ce68 <myhtml_collection_create@@Base+0x4c>
   1ce98:	mov	r0, r4
   1ce9c:	bl	10d60 <mycore_free@plt>
   1cea0:	cmp	r5, r7
   1cea4:	bne	1ce88 <myhtml_collection_create@@Base+0x6c>
   1cea8:	mov	r4, #0
   1ceac:	b	1ce68 <myhtml_collection_create@@Base+0x4c>

0001ceb0 <myhtml_collection_check_size@@Base>:
   1ceb0:	ldr	ip, [r0, #4]
   1ceb4:	ldr	r3, [r0, #8]
   1ceb8:	add	r1, r1, r3
   1cebc:	cmp	r1, ip
   1cec0:	bcs	1cecc <myhtml_collection_check_size@@Base+0x1c>
   1cec4:	mov	r0, #0
   1cec8:	bx	lr
   1cecc:	strd	r4, [sp, #-16]!
   1ced0:	add	r5, r2, #1
   1ced4:	mov	r4, r0
   1ced8:	add	r5, r5, r1
   1cedc:	ldr	r0, [r0]
   1cee0:	lsl	r1, r5, #2
   1cee4:	str	r6, [sp, #8]
   1cee8:	str	lr, [sp, #12]
   1ceec:	bl	fb84 <mycore_realloc@plt>
   1cef0:	subs	r3, r0, #0
   1cef4:	beq	1cf10 <myhtml_collection_check_size@@Base+0x60>
   1cef8:	mov	r0, #0
   1cefc:	stm	r4, {r3, r5}
   1cf00:	ldrd	r4, [sp]
   1cf04:	ldr	r6, [sp, #8]
   1cf08:	add	sp, sp, #12
   1cf0c:	pop	{pc}		; (ldr pc, [sp], #4)
   1cf10:	mov	r0, #2
   1cf14:	b	1cf00 <myhtml_collection_check_size@@Base+0x50>

0001cf18 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base>:
   1cf18:	strd	r4, [sp, #-16]!
   1cf1c:	subs	r4, r0, #0
   1cf20:	mov	r5, r1
   1cf24:	str	r6, [sp, #8]
   1cf28:	mov	r6, r2
   1cf2c:	str	lr, [sp, #12]
   1cf30:	beq	1cf64 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0x4c>
   1cf34:	ldr	r3, [r4, #4]
   1cf38:	cmp	r3, r6
   1cf3c:	beq	1cf90 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0x78>
   1cf40:	ldr	r3, [r4, #20]
   1cf44:	mov	r2, r6
   1cf48:	mov	r1, r5
   1cf4c:	subs	r0, r3, #0
   1cf50:	beq	1cf78 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0x60>
   1cf54:	bl	1cf18 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base>
   1cf58:	ldr	r4, [r4, #16]
   1cf5c:	cmp	r4, #0
   1cf60:	bne	1cf34 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0x1c>
   1cf64:	mov	r0, #0
   1cf68:	ldrd	r4, [sp]
   1cf6c:	ldr	r6, [sp, #8]
   1cf70:	add	sp, sp, #12
   1cf74:	pop	{pc}		; (ldr pc, [sp], #4)
   1cf78:	ldr	r4, [r4, #16]
   1cf7c:	cmp	r4, #0
   1cf80:	beq	1cf64 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0x4c>
   1cf84:	ldr	r3, [r4, #4]
   1cf88:	cmp	r3, r6
   1cf8c:	bne	1cf40 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0x28>
   1cf90:	ldr	r1, [r5]
   1cf94:	ldmib	r5, {r0, r2}
   1cf98:	add	r3, r2, #1
   1cf9c:	str	r4, [r1, r2, lsl #2]
   1cfa0:	cmp	r3, r0
   1cfa4:	str	r3, [r5, #8]
   1cfa8:	bcc	1cf40 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0x28>
   1cfac:	mov	r2, #0
   1cfb0:	mov	r1, #1024	; 0x400
   1cfb4:	mov	r0, r5
   1cfb8:	bl	10d90 <myhtml_collection_check_size@plt>
   1cfbc:	cmp	r0, #0
   1cfc0:	beq	1cf40 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0x28>
   1cfc4:	b	1cf68 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0x50>

0001cfc8 <myhtml_get_nodes_by_tag_id_in_scope@@Base>:
   1cfc8:	strd	r4, [sp, #-20]!	; 0xffffffec
   1cfcc:	strd	r6, [sp, #8]
   1cfd0:	subs	r6, r2, #0
   1cfd4:	str	lr, [sp, #16]
   1cfd8:	sub	sp, sp, #12
   1cfdc:	ldr	r5, [sp, #32]
   1cfe0:	beq	1d078 <myhtml_get_nodes_by_tag_id_in_scope@@Base+0xb0>
   1cfe4:	mov	r4, r1
   1cfe8:	mov	r1, #0
   1cfec:	cmp	r4, r1
   1cff0:	mov	r7, r3
   1cff4:	str	r1, [sp, #4]
   1cff8:	beq	1d054 <myhtml_get_nodes_by_tag_id_in_scope@@Base+0x8c>
   1cffc:	ldr	r0, [r6, #20]
   1d000:	cmp	r0, #0
   1d004:	moveq	r3, r0
   1d008:	beq	1d020 <myhtml_get_nodes_by_tag_id_in_scope@@Base+0x58>
   1d00c:	mov	r2, r7
   1d010:	mov	r1, r4
   1d014:	bl	10be0 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@plt>
   1d018:	mov	r3, r0
   1d01c:	str	r0, [sp, #4]
   1d020:	ldr	r2, [r4]
   1d024:	mov	r0, #0
   1d028:	cmp	r5, r0
   1d02c:	ldr	r1, [r4, #8]
   1d030:	str	r0, [r2, r1, lsl #2]
   1d034:	mov	r0, r4
   1d038:	beq	1d040 <myhtml_get_nodes_by_tag_id_in_scope@@Base+0x78>
   1d03c:	str	r3, [r5]
   1d040:	add	sp, sp, #12
   1d044:	ldrd	r4, [sp]
   1d048:	ldrd	r6, [sp, #8]
   1d04c:	add	sp, sp, #16
   1d050:	pop	{pc}		; (ldr pc, [sp], #4)
   1d054:	add	r1, sp, #4
   1d058:	mov	r0, #1024	; 0x400
   1d05c:	bl	10298 <myhtml_collection_create@plt>
   1d060:	ldr	r3, [sp, #4]
   1d064:	cmp	r3, #0
   1d068:	beq	1d080 <myhtml_get_nodes_by_tag_id_in_scope@@Base+0xb8>
   1d06c:	cmp	r5, #0
   1d070:	bne	1d03c <myhtml_get_nodes_by_tag_id_in_scope@@Base+0x74>
   1d074:	b	1d040 <myhtml_get_nodes_by_tag_id_in_scope@@Base+0x78>
   1d078:	mov	r0, r6
   1d07c:	b	1d040 <myhtml_get_nodes_by_tag_id_in_scope@@Base+0x78>
   1d080:	mov	r4, r0
   1d084:	b	1cffc <myhtml_get_nodes_by_tag_id_in_scope@@Base+0x34>

0001d088 <myhtml_get_nodes_by_name_in_scope@@Base>:
   1d088:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1d08c:	mov	r4, r0
   1d090:	ldr	r0, [r0, #28]
   1d094:	strd	r6, [sp, #8]
   1d098:	mov	r6, r1
   1d09c:	mov	r7, r2
   1d0a0:	mov	r1, r3
   1d0a4:	ldr	r2, [sp, #24]
   1d0a8:	str	r8, [sp, #16]
   1d0ac:	str	lr, [sp, #20]
   1d0b0:	ldr	r5, [sp, #28]
   1d0b4:	bl	10b08 <myhtml_tag_get_by_name@plt>
   1d0b8:	subs	r3, r0, #0
   1d0bc:	beq	1d0ec <myhtml_get_nodes_by_name_in_scope@@Base+0x64>
   1d0c0:	mov	r2, r7
   1d0c4:	mov	r1, r6
   1d0c8:	ldr	r3, [r3]
   1d0cc:	mov	r0, r4
   1d0d0:	str	r5, [sp, #24]
   1d0d4:	ldrd	r4, [sp]
   1d0d8:	ldrd	r6, [sp, #8]
   1d0dc:	ldr	r8, [sp, #16]
   1d0e0:	ldr	lr, [sp, #20]
   1d0e4:	add	sp, sp, #24
   1d0e8:	b	fed8 <myhtml_get_nodes_by_tag_id_in_scope@plt>
   1d0ec:	ldrd	r4, [sp]
   1d0f0:	ldrd	r6, [sp, #8]
   1d0f4:	ldr	r8, [sp, #16]
   1d0f8:	add	sp, sp, #20
   1d0fc:	pop	{pc}		; (ldr pc, [sp], #4)

0001d100 <myhtml_get_nodes_by_tag_id@@Base>:
   1d100:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1d104:	mov	r5, r2
   1d108:	strd	r6, [sp, #8]
   1d10c:	subs	r6, r1, #0
   1d110:	mov	r7, r0
   1d114:	str	r8, [sp, #16]
   1d118:	mov	r8, r3
   1d11c:	str	lr, [sp, #20]
   1d120:	beq	1d1f8 <myhtml_get_nodes_by_tag_id@@Base+0xf8>
   1d124:	ldr	r4, [r7, #96]	; 0x60
   1d128:	cmp	r4, #0
   1d12c:	bne	1d144 <myhtml_get_nodes_by_tag_id@@Base+0x44>
   1d130:	b	1d1ac <myhtml_get_nodes_by_tag_id@@Base+0xac>
   1d134:	ldr	r3, [r4, #20]
   1d138:	cmp	r3, #0
   1d13c:	beq	1d188 <myhtml_get_nodes_by_tag_id@@Base+0x88>
   1d140:	mov	r4, r3
   1d144:	ldr	r3, [r4, #4]
   1d148:	cmp	r3, r5
   1d14c:	bne	1d134 <myhtml_get_nodes_by_tag_id@@Base+0x34>
   1d150:	mov	r2, #1024	; 0x400
   1d154:	mov	r1, #1
   1d158:	mov	r0, r6
   1d15c:	bl	10d90 <myhtml_collection_check_size@plt>
   1d160:	cmp	r0, #0
   1d164:	bne	1d1e8 <myhtml_get_nodes_by_tag_id@@Base+0xe8>
   1d168:	ldr	r1, [r6]
   1d16c:	ldr	r3, [r6, #8]
   1d170:	add	r2, r3, #1
   1d174:	str	r4, [r1, r3, lsl #2]
   1d178:	ldr	r3, [r4, #20]
   1d17c:	str	r2, [r6, #8]
   1d180:	cmp	r3, #0
   1d184:	bne	1d140 <myhtml_get_nodes_by_tag_id@@Base+0x40>
   1d188:	ldr	r2, [r7, #96]	; 0x60
   1d18c:	cmp	r2, r4
   1d190:	beq	1d1ac <myhtml_get_nodes_by_tag_id@@Base+0xac>
   1d194:	ldr	r3, [r4, #16]
   1d198:	cmp	r3, #0
   1d19c:	bne	1d140 <myhtml_get_nodes_by_tag_id@@Base+0x40>
   1d1a0:	ldr	r4, [r4, #24]
   1d1a4:	cmp	r2, r4
   1d1a8:	bne	1d194 <myhtml_get_nodes_by_tag_id@@Base+0x94>
   1d1ac:	mov	r2, #1024	; 0x400
   1d1b0:	mov	r1, #1
   1d1b4:	mov	r0, r6
   1d1b8:	bl	10d90 <myhtml_collection_check_size@plt>
   1d1bc:	cmp	r0, #0
   1d1c0:	bne	1d1e8 <myhtml_get_nodes_by_tag_id@@Base+0xe8>
   1d1c4:	ldr	r3, [r6]
   1d1c8:	ldr	r2, [r6, #8]
   1d1cc:	str	r0, [r3, r2, lsl #2]
   1d1d0:	mov	r0, r6
   1d1d4:	ldrd	r4, [sp]
   1d1d8:	ldrd	r6, [sp, #8]
   1d1dc:	ldr	r8, [sp, #16]
   1d1e0:	add	sp, sp, #20
   1d1e4:	pop	{pc}		; (ldr pc, [sp], #4)
   1d1e8:	cmp	r8, #0
   1d1ec:	movne	r3, #2
   1d1f0:	strne	r3, [r8]
   1d1f4:	b	1d1d0 <myhtml_get_nodes_by_tag_id@@Base+0xd0>
   1d1f8:	mov	r0, #1024	; 0x400
   1d1fc:	bl	10298 <myhtml_collection_create@plt>
   1d200:	subs	r6, r0, #0
   1d204:	bne	1d124 <myhtml_get_nodes_by_tag_id@@Base+0x24>
   1d208:	b	1d1d0 <myhtml_get_nodes_by_tag_id@@Base+0xd0>

0001d20c <myhtml_get_nodes_by_name@@Base>:
   1d20c:	strd	r4, [sp, #-16]!
   1d210:	mov	r4, r0
   1d214:	mov	r0, r2
   1d218:	mov	r5, r1
   1d21c:	mov	r2, r3
   1d220:	mov	r1, r0
   1d224:	ldr	r0, [r4, #28]
   1d228:	str	r6, [sp, #8]
   1d22c:	str	lr, [sp, #12]
   1d230:	ldr	r6, [sp, #16]
   1d234:	bl	10b08 <myhtml_tag_get_by_name@plt>
   1d238:	subs	r2, r0, #0
   1d23c:	beq	1d264 <myhtml_get_nodes_by_name@@Base+0x58>
   1d240:	mov	r3, r6
   1d244:	mov	r1, r5
   1d248:	ldr	r2, [r2]
   1d24c:	mov	r0, r4
   1d250:	ldrd	r4, [sp]
   1d254:	ldr	r6, [sp, #8]
   1d258:	ldr	lr, [sp, #12]
   1d25c:	add	sp, sp, #16
   1d260:	b	102b0 <myhtml_get_nodes_by_tag_id@plt>
   1d264:	ldrd	r4, [sp]
   1d268:	ldr	r6, [sp, #8]
   1d26c:	add	sp, sp, #12
   1d270:	pop	{pc}		; (ldr pc, [sp], #4)

0001d274 <myhtml_get_nodes_by_attribute_key_recursion@@Base>:
   1d274:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1d278:	strd	r6, [sp, #8]
   1d27c:	subs	r7, r0, #0
   1d280:	strd	r8, [sp, #16]
   1d284:	str	sl, [sp, #24]
   1d288:	str	lr, [sp, #28]
   1d28c:	beq	1d2f0 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x7c>
   1d290:	mov	r6, r3
   1d294:	mov	r8, r2
   1d298:	mov	r9, r1
   1d29c:	mov	r5, r7
   1d2a0:	b	1d2b4 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x40>
   1d2a4:	ldr	r3, [r5, #20]
   1d2a8:	cmp	r3, #0
   1d2ac:	beq	1d2d8 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x64>
   1d2b0:	mov	r5, r3
   1d2b4:	ldr	r3, [r5, #32]
   1d2b8:	cmp	r3, #0
   1d2bc:	beq	1d2a4 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x30>
   1d2c0:	ldr	r4, [r3, #40]	; 0x28
   1d2c4:	cmp	r4, #0
   1d2c8:	bne	1d360 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0xec>
   1d2cc:	ldr	r3, [r5, #20]
   1d2d0:	cmp	r3, #0
   1d2d4:	bne	1d2b0 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x3c>
   1d2d8:	ldr	r3, [r5, #16]
   1d2dc:	cmp	r3, #0
   1d2e0:	bne	1d2b0 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x3c>
   1d2e4:	ldr	r5, [r5, #24]
   1d2e8:	cmp	r7, r5
   1d2ec:	bne	1d2d8 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x64>
   1d2f0:	mov	r0, #0
   1d2f4:	ldrd	r4, [sp]
   1d2f8:	ldrd	r6, [sp, #8]
   1d2fc:	ldrd	r8, [sp, #16]
   1d300:	ldr	sl, [sp, #24]
   1d304:	add	sp, sp, #28
   1d308:	pop	{pc}		; (ldr pc, [sp], #4)
   1d30c:	mov	r2, r6
   1d310:	mov	r1, r8
   1d314:	ldr	r0, [r4, #8]
   1d318:	bl	10238 <mycore_strncasecmp@plt>
   1d31c:	subs	r2, r0, #0
   1d320:	bne	1d354 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0xe0>
   1d324:	ldm	r9, {r0, ip}
   1d328:	ldr	r1, [r9, #8]
   1d32c:	add	r3, r1, #1
   1d330:	str	r5, [r0, r1, lsl #2]
   1d334:	cmp	r3, ip
   1d338:	str	r3, [r9, #8]
   1d33c:	bcc	1d354 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0xe0>
   1d340:	mov	r1, #1024	; 0x400
   1d344:	mov	r0, r9
   1d348:	bl	10d90 <myhtml_collection_check_size@plt>
   1d34c:	cmp	r0, #0
   1d350:	bne	1d2f4 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x80>
   1d354:	ldr	r4, [r4]
   1d358:	cmp	r4, #0
   1d35c:	beq	1d2a4 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x30>
   1d360:	ldr	r0, [r4, #16]
   1d364:	cmp	r0, r6
   1d368:	bne	1d354 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0xe0>
   1d36c:	b	1d30c <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x98>

0001d370 <myhtml_get_nodes_by_attribute_key@@Base>:
   1d370:	strd	r4, [sp, #-20]!	; 0xffffffec
   1d374:	subs	r5, r1, #0
   1d378:	mov	r4, r2
   1d37c:	strd	r6, [sp, #8]
   1d380:	mov	r7, r0
   1d384:	str	lr, [sp, #16]
   1d388:	sub	sp, sp, #12
   1d38c:	ldr	r6, [sp, #36]	; 0x24
   1d390:	beq	1d3d4 <myhtml_get_nodes_by_attribute_key@@Base+0x64>
   1d394:	cmp	r4, #0
   1d398:	mov	r2, r3
   1d39c:	ldreq	r4, [r7, #96]	; 0x60
   1d3a0:	mov	r1, r5
   1d3a4:	ldr	r3, [sp, #32]
   1d3a8:	mov	r0, r4
   1d3ac:	bl	fe48 <myhtml_get_nodes_by_attribute_key_recursion@plt>
   1d3b0:	cmp	r0, #0
   1d3b4:	cmpne	r6, #0
   1d3b8:	strne	r0, [r6]
   1d3bc:	mov	r0, r5
   1d3c0:	add	sp, sp, #12
   1d3c4:	ldrd	r4, [sp]
   1d3c8:	ldrd	r6, [sp, #8]
   1d3cc:	add	sp, sp, #16
   1d3d0:	pop	{pc}		; (ldr pc, [sp], #4)
   1d3d4:	mov	r1, r6
   1d3d8:	mov	r0, #1024	; 0x400
   1d3dc:	str	r3, [sp, #4]
   1d3e0:	bl	10298 <myhtml_collection_create@plt>
   1d3e4:	cmp	r6, #0
   1d3e8:	ldr	r3, [sp, #4]
   1d3ec:	beq	1d3fc <myhtml_get_nodes_by_attribute_key@@Base+0x8c>
   1d3f0:	ldr	r2, [r6]
   1d3f4:	cmp	r2, #0
   1d3f8:	bne	1d3bc <myhtml_get_nodes_by_attribute_key@@Base+0x4c>
   1d3fc:	subs	r5, r0, #0
   1d400:	bne	1d394 <myhtml_get_nodes_by_attribute_key@@Base+0x24>
   1d404:	b	1d3bc <myhtml_get_nodes_by_attribute_key@@Base+0x4c>

0001d408 <myhtml_get_nodes_by_attribute_value_recursion@@Base>:
   1d408:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1d40c:	strd	r6, [sp, #8]
   1d410:	str	sl, [sp, #24]
   1d414:	subs	sl, r0, #0
   1d418:	strd	r8, [sp, #16]
   1d41c:	str	lr, [sp, #28]
   1d420:	ldr	r9, [sp, #32]
   1d424:	beq	1d488 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x80>
   1d428:	mov	r8, r3
   1d42c:	mov	r7, r2
   1d430:	mov	r5, r1
   1d434:	mov	r6, sl
   1d438:	b	1d44c <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x44>
   1d43c:	ldr	r3, [r6, #20]
   1d440:	cmp	r3, #0
   1d444:	beq	1d470 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x68>
   1d448:	mov	r6, r3
   1d44c:	ldr	r3, [r6, #32]
   1d450:	cmp	r3, #0
   1d454:	beq	1d43c <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x34>
   1d458:	ldr	r4, [r3, #40]	; 0x28
   1d45c:	cmp	r4, #0
   1d460:	bne	1d4c8 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0xc0>
   1d464:	ldr	r3, [r6, #20]
   1d468:	cmp	r3, #0
   1d46c:	bne	1d448 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x40>
   1d470:	ldr	r3, [r6, #16]
   1d474:	cmp	r3, #0
   1d478:	bne	1d448 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x40>
   1d47c:	ldr	r6, [r6, #24]
   1d480:	cmp	sl, r6
   1d484:	bne	1d470 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x68>
   1d488:	mov	r0, #0
   1d48c:	ldrd	r4, [sp]
   1d490:	ldrd	r6, [sp, #8]
   1d494:	ldrd	r8, [sp, #16]
   1d498:	ldr	sl, [sp, #24]
   1d49c:	add	sp, sp, #28
   1d4a0:	pop	{pc}		; (ldr pc, [sp], #4)
   1d4a4:	mov	r2, #0
   1d4a8:	mov	r1, #1024	; 0x400
   1d4ac:	mov	r0, r5
   1d4b0:	bl	10d90 <myhtml_collection_check_size@plt>
   1d4b4:	cmp	r0, #0
   1d4b8:	bne	1d48c <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x84>
   1d4bc:	ldr	r4, [r4]
   1d4c0:	cmp	r4, #0
   1d4c4:	beq	1d43c <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x34>
   1d4c8:	mov	r2, r9
   1d4cc:	mov	r1, r8
   1d4d0:	add	r0, r4, #28
   1d4d4:	blx	r7
   1d4d8:	cmp	r0, #0
   1d4dc:	beq	1d4bc <myhtml_get_nodes_by_attribute_value_recursion@@Base+0xb4>
   1d4e0:	ldr	r2, [r5]
   1d4e4:	ldmib	r5, {r0, r3}
   1d4e8:	add	r1, r3, #1
   1d4ec:	str	r6, [r2, r3, lsl #2]
   1d4f0:	cmp	r1, r0
   1d4f4:	str	r1, [r5, #8]
   1d4f8:	bcc	1d4bc <myhtml_get_nodes_by_attribute_value_recursion@@Base+0xb4>
   1d4fc:	b	1d4a4 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x9c>

0001d500 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base>:
   1d500:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1d504:	strd	r6, [sp, #8]
   1d508:	subs	r7, r0, #0
   1d50c:	strd	r8, [sp, #16]
   1d510:	strd	sl, [sp, #24]
   1d514:	str	lr, [sp, #32]
   1d518:	sub	sp, sp, #4
   1d51c:	ldr	r6, [sp, #40]	; 0x28
   1d520:	beq	1d584 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x84>
   1d524:	mov	r9, r3
   1d528:	mov	sl, r2
   1d52c:	mov	r8, r1
   1d530:	mov	r5, r7
   1d534:	b	1d548 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x48>
   1d538:	ldr	r3, [r5, #20]
   1d53c:	cmp	r3, #0
   1d540:	beq	1d56c <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x6c>
   1d544:	mov	r5, r3
   1d548:	ldr	r3, [r5, #32]
   1d54c:	cmp	r3, #0
   1d550:	beq	1d538 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x38>
   1d554:	ldr	r4, [r3, #40]	; 0x28
   1d558:	cmp	r4, #0
   1d55c:	bne	1d614 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x114>
   1d560:	ldr	r3, [r5, #20]
   1d564:	cmp	r3, #0
   1d568:	bne	1d544 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x44>
   1d56c:	ldr	r3, [r5, #16]
   1d570:	cmp	r3, #0
   1d574:	bne	1d544 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x44>
   1d578:	ldr	r5, [r5, #24]
   1d57c:	cmp	r7, r5
   1d580:	bne	1d56c <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x6c>
   1d584:	mov	r0, #0
   1d588:	add	sp, sp, #4
   1d58c:	ldrd	r4, [sp]
   1d590:	ldrd	r6, [sp, #8]
   1d594:	ldrd	r8, [sp, #16]
   1d598:	ldrd	sl, [sp, #24]
   1d59c:	add	sp, sp, #32
   1d5a0:	pop	{pc}		; (ldr pc, [sp], #4)
   1d5a4:	mov	r2, r6
   1d5a8:	mov	r1, r9
   1d5ac:	ldr	r0, [r4, #8]
   1d5b0:	bl	10238 <mycore_strncasecmp@plt>
   1d5b4:	subs	fp, r0, #0
   1d5b8:	add	r0, r4, #28
   1d5bc:	ldr	r1, [sp, #44]	; 0x2c
   1d5c0:	ldr	r2, [sp, #48]	; 0x30
   1d5c4:	bne	1d608 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x108>
   1d5c8:	blx	sl
   1d5cc:	cmp	r0, #0
   1d5d0:	beq	1d608 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x108>
   1d5d4:	ldr	r1, [r8]
   1d5d8:	ldmib	r8, {r0, r2}
   1d5dc:	add	r3, r2, #1
   1d5e0:	str	r5, [r1, r2, lsl #2]
   1d5e4:	cmp	r3, r0
   1d5e8:	str	r3, [r8, #8]
   1d5ec:	bcc	1d608 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x108>
   1d5f0:	mov	r2, fp
   1d5f4:	mov	r1, #1024	; 0x400
   1d5f8:	mov	r0, r8
   1d5fc:	bl	10d90 <myhtml_collection_check_size@plt>
   1d600:	cmp	r0, #0
   1d604:	bne	1d588 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x88>
   1d608:	ldr	r4, [r4]
   1d60c:	cmp	r4, #0
   1d610:	beq	1d538 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x38>
   1d614:	ldr	r0, [r4, #16]
   1d618:	cmp	r0, r6
   1d61c:	bne	1d608 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x108>
   1d620:	b	1d5a4 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0xa4>

0001d624 <_myhtml_get_nodes_by_attribute_value@@Base>:
   1d624:	strd	r4, [sp, #-28]!	; 0xffffffe4
   1d628:	subs	r5, r1, #0
   1d62c:	mov	r4, r2
   1d630:	strd	r6, [sp, #8]
   1d634:	mov	r2, r3
   1d638:	strd	r8, [sp, #16]
   1d63c:	mov	r9, r0
   1d640:	str	lr, [sp, #24]
   1d644:	sub	sp, sp, #28
   1d648:	ldr	r8, [sp, #56]	; 0x38
   1d64c:	ldr	r7, [sp, #60]	; 0x3c
   1d650:	ldr	r6, [sp, #72]	; 0x48
   1d654:	beq	1d6d0 <_myhtml_get_nodes_by_attribute_value@@Base+0xac>
   1d658:	cmp	r4, #0
   1d65c:	ldreq	r4, [r9, #96]	; 0x60
   1d660:	cmp	r8, #0
   1d664:	cmpne	r7, #0
   1d668:	bne	1d6ac <_myhtml_get_nodes_by_attribute_value@@Base+0x88>
   1d66c:	ldr	r3, [sp, #68]	; 0x44
   1d670:	mov	r0, r4
   1d674:	mov	r1, r5
   1d678:	str	r3, [sp]
   1d67c:	ldr	r3, [sp, #64]	; 0x40
   1d680:	bl	fb78 <myhtml_get_nodes_by_attribute_value_recursion@plt>
   1d684:	cmp	r0, #0
   1d688:	cmpne	r6, #0
   1d68c:	strne	r0, [r6]
   1d690:	mov	r0, r5
   1d694:	add	sp, sp, #28
   1d698:	ldrd	r4, [sp]
   1d69c:	ldrd	r6, [sp, #8]
   1d6a0:	ldrd	r8, [sp, #16]
   1d6a4:	add	sp, sp, #24
   1d6a8:	pop	{pc}		; (ldr pc, [sp], #4)
   1d6ac:	ldr	ip, [sp, #64]	; 0x40
   1d6b0:	mov	r3, r8
   1d6b4:	mov	r0, r4
   1d6b8:	mov	r1, r5
   1d6bc:	stm	sp, {r7, ip}
   1d6c0:	ldr	ip, [sp, #68]	; 0x44
   1d6c4:	str	ip, [sp, #8]
   1d6c8:	bl	fd94 <myhtml_get_nodes_by_attribute_value_recursion_by_key@plt>
   1d6cc:	b	1d684 <_myhtml_get_nodes_by_attribute_value@@Base+0x60>
   1d6d0:	mov	r1, r6
   1d6d4:	mov	r0, #1024	; 0x400
   1d6d8:	str	r3, [sp, #20]
   1d6dc:	bl	10298 <myhtml_collection_create@plt>
   1d6e0:	cmp	r6, #0
   1d6e4:	ldr	r2, [sp, #20]
   1d6e8:	beq	1d6f8 <_myhtml_get_nodes_by_attribute_value@@Base+0xd4>
   1d6ec:	ldr	r3, [r6]
   1d6f0:	cmp	r3, #0
   1d6f4:	bne	1d690 <_myhtml_get_nodes_by_attribute_value@@Base+0x6c>
   1d6f8:	subs	r5, r0, #0
   1d6fc:	bne	1d658 <_myhtml_get_nodes_by_attribute_value@@Base+0x34>
   1d700:	b	1d690 <_myhtml_get_nodes_by_attribute_value@@Base+0x6c>

0001d704 <myhtml_get_nodes_by_attribute_value@@Base>:
   1d704:	cmp	r3, #0
   1d708:	ldr	r3, [pc, #28]	; 1d72c <myhtml_get_nodes_by_attribute_value@@Base+0x28>
   1d70c:	add	r3, pc, r3
   1d710:	bne	1d720 <myhtml_get_nodes_by_attribute_value@@Base+0x1c>
   1d714:	ldr	ip, [pc, #20]	; 1d730 <myhtml_get_nodes_by_attribute_value@@Base+0x2c>
   1d718:	ldr	r3, [r3, ip]
   1d71c:	b	10acc <_myhtml_get_nodes_by_attribute_value@plt>
   1d720:	ldr	ip, [pc, #12]	; 1d734 <myhtml_get_nodes_by_attribute_value@@Base+0x30>
   1d724:	ldr	r3, [r3, ip]
   1d728:	b	10acc <_myhtml_get_nodes_by_attribute_value@plt>
   1d72c:	andeq	fp, pc, ip, ror #17
   1d730:	andeq	r0, r0, r4, lsr #17
   1d734:	andeq	r0, r0, ip, ror r8

0001d738 <myhtml_get_nodes_by_attribute_value_whitespace_separated@@Base>:
   1d738:	cmp	r3, #0
   1d73c:	ldr	r3, [pc, #28]	; 1d760 <myhtml_get_nodes_by_attribute_value_whitespace_separated@@Base+0x28>
   1d740:	add	r3, pc, r3
   1d744:	bne	1d754 <myhtml_get_nodes_by_attribute_value_whitespace_separated@@Base+0x1c>
   1d748:	ldr	ip, [pc, #20]	; 1d764 <myhtml_get_nodes_by_attribute_value_whitespace_separated@@Base+0x2c>
   1d74c:	ldr	r3, [r3, ip]
   1d750:	b	10acc <_myhtml_get_nodes_by_attribute_value@plt>
   1d754:	ldr	ip, [pc, #12]	; 1d768 <myhtml_get_nodes_by_attribute_value_whitespace_separated@@Base+0x30>
   1d758:	ldr	r3, [r3, ip]
   1d75c:	b	10acc <_myhtml_get_nodes_by_attribute_value@plt>
   1d760:			; <UNDEFINED> instruction: 0x000fb8b8
   1d764:	andeq	r0, r0, r0, lsr #18
   1d768:	andeq	r0, r0, r0, lsl r7

0001d76c <myhtml_get_nodes_by_attribute_value_begin@@Base>:
   1d76c:	cmp	r3, #0
   1d770:	ldr	r3, [pc, #28]	; 1d794 <myhtml_get_nodes_by_attribute_value_begin@@Base+0x28>
   1d774:	add	r3, pc, r3
   1d778:	bne	1d788 <myhtml_get_nodes_by_attribute_value_begin@@Base+0x1c>
   1d77c:	ldr	ip, [pc, #20]	; 1d798 <myhtml_get_nodes_by_attribute_value_begin@@Base+0x2c>
   1d780:	ldr	r3, [r3, ip]
   1d784:	b	10acc <_myhtml_get_nodes_by_attribute_value@plt>
   1d788:	ldr	ip, [pc, #12]	; 1d79c <myhtml_get_nodes_by_attribute_value_begin@@Base+0x30>
   1d78c:	ldr	r3, [r3, ip]
   1d790:	b	10acc <_myhtml_get_nodes_by_attribute_value@plt>
   1d794:	andeq	fp, pc, r4, lsl #17
   1d798:	andeq	r0, r0, ip, asr r7
   1d79c:	andeq	r0, r0, ip, ror #14

0001d7a0 <myhtml_get_nodes_by_attribute_value_end@@Base>:
   1d7a0:	cmp	r3, #0
   1d7a4:	ldr	r3, [pc, #28]	; 1d7c8 <myhtml_get_nodes_by_attribute_value_end@@Base+0x28>
   1d7a8:	add	r3, pc, r3
   1d7ac:	bne	1d7bc <myhtml_get_nodes_by_attribute_value_end@@Base+0x1c>
   1d7b0:	ldr	ip, [pc, #20]	; 1d7cc <myhtml_get_nodes_by_attribute_value_end@@Base+0x2c>
   1d7b4:	ldr	r3, [r3, ip]
   1d7b8:	b	10acc <_myhtml_get_nodes_by_attribute_value@plt>
   1d7bc:	ldr	ip, [pc, #12]	; 1d7d0 <myhtml_get_nodes_by_attribute_value_end@@Base+0x30>
   1d7c0:	ldr	r3, [r3, ip]
   1d7c4:	b	10acc <_myhtml_get_nodes_by_attribute_value@plt>
   1d7c8:	andeq	fp, pc, r0, asr r8	; <UNPREDICTABLE>
   1d7cc:	andeq	r0, r0, ip, ror #15
   1d7d0:	andeq	r0, r0, r8, ror r9

0001d7d4 <myhtml_get_nodes_by_attribute_value_contain@@Base>:
   1d7d4:	cmp	r3, #0
   1d7d8:	ldr	r3, [pc, #28]	; 1d7fc <myhtml_get_nodes_by_attribute_value_contain@@Base+0x28>
   1d7dc:	add	r3, pc, r3
   1d7e0:	bne	1d7f0 <myhtml_get_nodes_by_attribute_value_contain@@Base+0x1c>
   1d7e4:	ldr	ip, [pc, #20]	; 1d800 <myhtml_get_nodes_by_attribute_value_contain@@Base+0x2c>
   1d7e8:	ldr	r3, [r3, ip]
   1d7ec:	b	10acc <_myhtml_get_nodes_by_attribute_value@plt>
   1d7f0:	ldr	ip, [pc, #12]	; 1d804 <myhtml_get_nodes_by_attribute_value_contain@@Base+0x30>
   1d7f4:	ldr	r3, [r3, ip]
   1d7f8:	b	10acc <_myhtml_get_nodes_by_attribute_value@plt>
   1d7fc:	andeq	fp, pc, ip, lsl r8	; <UNPREDICTABLE>
   1d800:	andeq	r0, r0, r0, lsl #17
   1d804:	andeq	r0, r0, r0, ror #14

0001d808 <myhtml_get_nodes_by_attribute_value_hyphen_separated@@Base>:
   1d808:	cmp	r3, #0
   1d80c:	ldr	r3, [pc, #28]	; 1d830 <myhtml_get_nodes_by_attribute_value_hyphen_separated@@Base+0x28>
   1d810:	add	r3, pc, r3
   1d814:	bne	1d824 <myhtml_get_nodes_by_attribute_value_hyphen_separated@@Base+0x1c>
   1d818:	ldr	ip, [pc, #20]	; 1d834 <myhtml_get_nodes_by_attribute_value_hyphen_separated@@Base+0x2c>
   1d81c:	ldr	r3, [r3, ip]
   1d820:	b	10acc <_myhtml_get_nodes_by_attribute_value@plt>
   1d824:	ldr	ip, [pc, #12]	; 1d838 <myhtml_get_nodes_by_attribute_value_hyphen_separated@@Base+0x30>
   1d828:	ldr	r3, [r3, ip]
   1d82c:	b	10acc <_myhtml_get_nodes_by_attribute_value@plt>
   1d830:	andeq	fp, pc, r8, ror #15
   1d834:	andeq	r0, r0, r8, ror #16
   1d838:	strdeq	r0, [r0], -ip

0001d83c <myhtml_collection_clean@@Base>:
   1d83c:	cmp	r0, #0
   1d840:	movne	r3, #0
   1d844:	strne	r3, [r0, #8]
   1d848:	bx	lr

0001d84c <myhtml_collection_destroy@@Base>:
   1d84c:	str	r4, [sp, #-8]!
   1d850:	subs	r4, r0, #0
   1d854:	str	lr, [sp, #4]
   1d858:	beq	1d874 <myhtml_collection_destroy@@Base+0x28>
   1d85c:	ldr	r0, [r4]
   1d860:	cmp	r0, #0
   1d864:	beq	1d86c <myhtml_collection_destroy@@Base+0x20>
   1d868:	bl	10d60 <mycore_free@plt>
   1d86c:	mov	r0, r4
   1d870:	bl	10d60 <mycore_free@plt>
   1d874:	ldr	r4, [sp]
   1d878:	add	sp, sp, #4
   1d87c:	mov	r0, #0
   1d880:	pop	{pc}		; (ldr pc, [sp], #4)

0001d884 <myhtml_queue_add@@Base>:
   1d884:	ldr	r3, [r0, #184]	; 0xb8
   1d888:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1d88c:	mov	r4, r0
   1d890:	ldr	r5, [r0, #68]	; 0x44
   1d894:	strd	r6, [sp, #8]
   1d898:	mov	r7, r1
   1d89c:	mov	r6, r2
   1d8a0:	str	r8, [sp, #16]
   1d8a4:	tst	r3, #4
   1d8a8:	str	lr, [sp, #20]
   1d8ac:	beq	1d8c4 <myhtml_queue_add@@Base+0x40>
   1d8b0:	cmp	r2, #0
   1d8b4:	beq	1d9c8 <myhtml_queue_add@@Base+0x144>
   1d8b8:	ldr	r3, [r2]
   1d8bc:	cmp	r3, #1
   1d8c0:	beq	1d9d8 <myhtml_queue_add@@Base+0x154>
   1d8c4:	ldr	r3, [r4, #180]	; 0xb4
   1d8c8:	tst	r3, #16
   1d8cc:	bne	1d964 <myhtml_queue_add@@Base+0xe0>
   1d8d0:	ldr	r3, [r4]
   1d8d4:	cmp	r5, #0
   1d8d8:	strne	r6, [r5, #4]
   1d8dc:	ldr	r1, [r4, #20]
   1d8e0:	ldr	r0, [r3]
   1d8e4:	bl	104cc <mythread_queue_node_malloc_round@plt>
   1d8e8:	ldr	r1, [r4, #20]
   1d8ec:	ldr	r3, [r1]
   1d8f0:	ldr	r3, [r3, #12]
   1d8f4:	str	r0, [r4, #68]	; 0x44
   1d8f8:	cmp	r3, #0
   1d8fc:	beq	1da04 <myhtml_queue_add@@Base+0x180>
   1d900:	cmp	r0, #0
   1d904:	beq	1d9b0 <myhtml_queue_add@@Base+0x12c>
   1d908:	cmp	r5, #0
   1d90c:	cmpne	r6, #0
   1d910:	str	r4, [r0]
   1d914:	str	r5, [r0, #8]
   1d918:	bne	1d9b8 <myhtml_queue_add@@Base+0x134>
   1d91c:	ldr	r3, [r4, #8]
   1d920:	mov	r0, r3
   1d924:	ldr	r1, [r3, #12]
   1d928:	bl	109a0 <myhtml_token_node_create@plt>
   1d92c:	cmp	r0, #0
   1d930:	mov	r3, r0
   1d934:	str	r0, [r4, #64]	; 0x40
   1d938:	beq	1d9b0 <myhtml_queue_add@@Base+0x12c>
   1d93c:	ldr	r1, [r4, #192]	; 0xc0
   1d940:	mov	r0, #0
   1d944:	add	r1, r7, r1
   1d948:	str	r1, [r3, #24]
   1d94c:	str	r1, [r3, #32]
   1d950:	ldrd	r4, [sp]
   1d954:	ldrd	r6, [sp, #8]
   1d958:	ldr	r8, [sp, #16]
   1d95c:	add	sp, sp, #20
   1d960:	pop	{pc}		; (ldr pc, [sp], #4)
   1d964:	cmp	r5, #0
   1d968:	cmpne	r6, #0
   1d96c:	beq	1d98c <myhtml_queue_add@@Base+0x108>
   1d970:	mov	r1, r5
   1d974:	mov	r0, #0
   1d978:	str	r6, [r5, #4]
   1d97c:	bl	fd1c <myhtml_parser_worker@plt>
   1d980:	mov	r1, r5
   1d984:	mov	r0, #0
   1d988:	bl	10f88 <myhtml_parser_stream@plt>
   1d98c:	ldr	r0, [r4]
   1d990:	mov	r3, #0
   1d994:	mov	r2, #4
   1d998:	ldr	r1, [r4, #24]
   1d99c:	ldr	r0, [r0]
   1d9a0:	bl	10c40 <mythread_queue_node_malloc_limit@plt>
   1d9a4:	cmp	r0, #0
   1d9a8:	str	r0, [r4, #68]	; 0x44
   1d9ac:	bne	1d908 <myhtml_queue_add@@Base+0x84>
   1d9b0:	mov	r0, #2
   1d9b4:	b	1d950 <myhtml_queue_add@@Base+0xcc>
   1d9b8:	mov	r1, r6
   1d9bc:	mov	r0, r4
   1d9c0:	bl	101cc <myhtml_tokenizer_calc_current_namespace@plt>
   1d9c4:	b	1d91c <myhtml_queue_add@@Base+0x98>
   1d9c8:	ldr	r3, [r0, #180]	; 0xb4
   1d9cc:	tst	r3, #16
   1d9d0:	bne	1d98c <myhtml_queue_add@@Base+0x108>
   1d9d4:	b	1d8d0 <myhtml_queue_add@@Base+0x4c>
   1d9d8:	ldr	r3, [r2, #48]	; 0x30
   1d9dc:	tst	r3, #8
   1d9e0:	beq	1d8c4 <myhtml_queue_add@@Base+0x40>
   1d9e4:	mov	r0, r2
   1d9e8:	bl	10f10 <myhtml_token_node_clean@plt>
   1d9ec:	ldr	r1, [r4, #192]	; 0xc0
   1d9f0:	mov	r0, #0
   1d9f4:	add	r1, r7, r1
   1d9f8:	str	r1, [r6, #24]
   1d9fc:	str	r1, [r6, #32]
   1da00:	b	1d950 <myhtml_queue_add@@Base+0xcc>
   1da04:	ldr	r3, [r4]
   1da08:	ldr	r0, [r3, #4]
   1da0c:	bl	10cb8 <mythread_queue_list_entry_make_batch@plt>
   1da10:	ldr	r3, [r4]
   1da14:	ldr	r1, [r4, #20]
   1da18:	ldr	r0, [r3]
   1da1c:	bl	10e74 <mythread_queue_list_entry_make_stream@plt>
   1da20:	ldr	r0, [r4, #68]	; 0x44
   1da24:	b	1d900 <myhtml_queue_add@@Base+0x7c>

0001da28 <myhtml_utils_strcmp@@Base>:
   1da28:	cmp	r2, #0
   1da2c:	beq	1da80 <myhtml_utils_strcmp@@Base+0x58>
   1da30:	add	r2, r1, r2
   1da34:	sub	r0, r0, #1
   1da38:	push	{lr}		; (str lr, [sp, #-4]!)
   1da3c:	sub	r1, r1, #1
   1da40:	sub	lr, r2, #1
   1da44:	b	1da50 <myhtml_utils_strcmp@@Base+0x28>
   1da48:	cmp	r1, lr
   1da4c:	beq	1da78 <myhtml_utils_strcmp@@Base+0x50>
   1da50:	ldrb	r3, [r1, #1]!
   1da54:	sub	ip, r3, #65	; 0x41
   1da58:	mov	r2, r3
   1da5c:	cmp	ip, #25
   1da60:	orrls	r2, r3, #96	; 0x60
   1da64:	ldrb	r3, [r0, #1]!
   1da68:	cmp	r3, r2
   1da6c:	beq	1da48 <myhtml_utils_strcmp@@Base+0x20>
   1da70:	mov	r0, #0
   1da74:	pop	{pc}		; (ldr pc, [sp], #4)
   1da78:	mov	r0, #1
   1da7c:	pop	{pc}		; (ldr pc, [sp], #4)
   1da80:	mov	r0, #1
   1da84:	bx	lr

0001da88 <myhtml_is_html_node@@Base>:
   1da88:	cmp	r0, #0
   1da8c:	beq	1daa0 <myhtml_is_html_node@@Base+0x18>
   1da90:	ldr	r3, [r0, #4]
   1da94:	cmp	r3, r1
   1da98:	movne	r0, #0
   1da9c:	beq	1daa4 <myhtml_is_html_node@@Base+0x1c>
   1daa0:	bx	lr
   1daa4:	ldr	r0, [r0, #8]
   1daa8:	sub	r0, r0, #1
   1daac:	clz	r0, r0
   1dab0:	lsr	r0, r0, #5
   1dab4:	bx	lr

0001dab8 <myhtml_version@@Base>:
   1dab8:	ldr	r3, [pc, #32]	; 1dae0 <myhtml_version@@Base+0x28>
   1dabc:	strd	r4, [sp, #-8]!
   1dac0:	add	r3, pc, r3
   1dac4:	ldrd	r4, [r3]
   1dac8:	ldr	r3, [r3, #8]
   1dacc:	strd	r4, [r0]
   1dad0:	ldrd	r4, [sp]
   1dad4:	add	sp, sp, #8
   1dad8:	str	r3, [r0, #8]
   1dadc:	bx	lr
   1dae0:	andeq	r0, lr, r8, asr #21

0001dae4 <myhtml_node_clone@@Base>:
   1dae4:	strd	r4, [sp, #-28]!	; 0xffffffe4
   1dae8:	mov	r5, r1
   1daec:	strd	r6, [sp, #8]
   1daf0:	mov	r6, r0
   1daf4:	strd	r8, [sp, #16]
   1daf8:	str	lr, [sp, #24]
   1dafc:	sub	sp, sp, #12
   1db00:	bl	ff80 <myhtml_tree_node_create@plt>
   1db04:	ldr	r7, [r5, #4]
   1db08:	mov	r4, r0
   1db0c:	cmp	r7, #251	; 0xfb
   1db10:	bhi	1db68 <myhtml_node_clone@@Base+0x84>
   1db14:	ldr	r0, [r6, #8]
   1db18:	ldr	r1, [r5, #32]
   1db1c:	ldrd	r2, [r6, #40]	; 0x28
   1db20:	bl	fecc <myhtml_token_node_clone@plt>
   1db24:	ldr	r3, [r5, #8]
   1db28:	cmp	r0, #0
   1db2c:	str	r7, [r4, #4]
   1db30:	str	r3, [r4, #8]
   1db34:	str	r0, [r4, #32]
   1db38:	beq	1db4c <myhtml_node_clone@@Base+0x68>
   1db3c:	ldr	r3, [r0, #48]	; 0x30
   1db40:	str	r7, [r0]
   1db44:	orr	r3, r3, #4
   1db48:	str	r3, [r0, #48]	; 0x30
   1db4c:	mov	r0, r4
   1db50:	add	sp, sp, #12
   1db54:	ldrd	r4, [sp]
   1db58:	ldrd	r6, [sp, #8]
   1db5c:	ldrd	r8, [sp, #16]
   1db60:	add	sp, sp, #24
   1db64:	pop	{pc}		; (ldr pc, [sp], #4)
   1db68:	mov	r1, r7
   1db6c:	ldr	r0, [r6, #28]
   1db70:	bl	109b8 <myhtml_tag_get_by_id@plt>
   1db74:	mov	r9, r0
   1db78:	ldr	r1, [r5, #4]
   1db7c:	ldr	r3, [r5, #40]	; 0x28
   1db80:	ldr	r0, [r3, #28]
   1db84:	bl	109b8 <myhtml_tag_get_by_id@plt>
   1db88:	cmp	r9, #0
   1db8c:	mov	r8, r0
   1db90:	beq	1dbd0 <myhtml_node_clone@@Base+0xec>
   1db94:	ldmib	r0, {r1, r2}
   1db98:	ldr	r3, [r9, #8]
   1db9c:	cmp	r3, r2
   1dba0:	beq	1dbc0 <myhtml_node_clone@@Base+0xdc>
   1dba4:	mov	ip, #1
   1dba8:	mov	r3, #0
   1dbac:	ldr	r0, [r6, #28]
   1dbb0:	str	ip, [sp]
   1dbb4:	bl	ffb0 <myhtml_tag_add@plt>
   1dbb8:	mov	r7, r0
   1dbbc:	b	1db14 <myhtml_node_clone@@Base+0x30>
   1dbc0:	ldr	r0, [r9, #4]
   1dbc4:	bl	10e80 <mycore_strncmp@plt>
   1dbc8:	cmp	r0, #0
   1dbcc:	beq	1db14 <myhtml_node_clone@@Base+0x30>
   1dbd0:	ldmib	r8, {r1, r2}
   1dbd4:	b	1dba4 <myhtml_node_clone@@Base+0xc0>

0001dbd8 <myhtml_node_clone_deep@@Base>:
   1dbd8:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1dbdc:	strd	r6, [sp, #8]
   1dbe0:	subs	r7, r1, #0
   1dbe4:	strd	r8, [sp, #16]
   1dbe8:	mov	r8, r0
   1dbec:	str	sl, [sp, #24]
   1dbf0:	str	lr, [sp, #28]
   1dbf4:	beq	1dc10 <myhtml_node_clone_deep@@Base+0x38>
   1dbf8:	ldr	r3, [r7, #40]	; 0x28
   1dbfc:	cmp	r3, #0
   1dc00:	beq	1dc10 <myhtml_node_clone_deep@@Base+0x38>
   1dc04:	ldr	r3, [r3, #84]	; 0x54
   1dc08:	cmp	r3, r7
   1dc0c:	beq	1dcc0 <myhtml_node_clone_deep@@Base+0xe8>
   1dc10:	mov	r4, r7
   1dc14:	mov	r1, r4
   1dc18:	mov	r0, r8
   1dc1c:	bl	10ec8 <myhtml_node_clone@plt>
   1dc20:	subs	r9, r0, #0
   1dc24:	beq	1dca0 <myhtml_node_clone_deep@@Base+0xc8>
   1dc28:	ldr	r4, [r4, #20]
   1dc2c:	cmp	r4, #0
   1dc30:	beq	1dca4 <myhtml_node_clone_deep@@Base+0xcc>
   1dc34:	mov	r5, r9
   1dc38:	b	1dc44 <myhtml_node_clone_deep@@Base+0x6c>
   1dc3c:	mov	r5, r6
   1dc40:	mov	r4, r3
   1dc44:	mov	r1, r4
   1dc48:	mov	r0, r8
   1dc4c:	bl	10ec8 <myhtml_node_clone@plt>
   1dc50:	subs	r6, r0, #0
   1dc54:	beq	1dca0 <myhtml_node_clone_deep@@Base+0xc8>
   1dc58:	mov	r1, r6
   1dc5c:	mov	r0, r5
   1dc60:	bl	1064c <myhtml_tree_node_add_child@plt>
   1dc64:	ldr	r3, [r4, #20]
   1dc68:	cmp	r3, #0
   1dc6c:	bne	1dc3c <myhtml_node_clone_deep@@Base+0x64>
   1dc70:	cmp	r7, r4
   1dc74:	bne	1dc8c <myhtml_node_clone_deep@@Base+0xb4>
   1dc78:	b	1dca4 <myhtml_node_clone_deep@@Base+0xcc>
   1dc7c:	ldr	r4, [r4, #24]
   1dc80:	ldr	r5, [r5, #24]
   1dc84:	cmp	r7, r4
   1dc88:	beq	1dca4 <myhtml_node_clone_deep@@Base+0xcc>
   1dc8c:	ldr	r3, [r4, #16]
   1dc90:	cmp	r3, #0
   1dc94:	beq	1dc7c <myhtml_node_clone_deep@@Base+0xa4>
   1dc98:	mov	r6, r5
   1dc9c:	b	1dc3c <myhtml_node_clone_deep@@Base+0x64>
   1dca0:	mov	r9, #0
   1dca4:	mov	r0, r9
   1dca8:	ldrd	r4, [sp]
   1dcac:	ldrd	r6, [sp, #8]
   1dcb0:	ldrd	r8, [sp, #16]
   1dcb4:	ldr	sl, [sp, #24]
   1dcb8:	add	sp, sp, #28
   1dcbc:	pop	{pc}		; (ldr pc, [sp], #4)
   1dcc0:	ldr	r4, [r7, #20]
   1dcc4:	b	1dc14 <myhtml_node_clone_deep@@Base+0x3c>

0001dcc8 <myhtml_namespace_name_entry_by_name@@Base>:
   1dcc8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1dccc:	movw	r3, #27595	; 0x6bcb
   1dcd0:	movt	r3, #44840	; 0xaf28
   1dcd4:	strd	r6, [sp, #8]
   1dcd8:	mov	r7, r1
   1dcdc:	mov	r6, r0
   1dce0:	add	r2, r0, r7
   1dce4:	ldr	r1, [pc, #176]	; 1dd9c <myhtml_namespace_name_entry_by_name@@Base+0xd4>
   1dce8:	mov	ip, #19
   1dcec:	str	r8, [sp, #16]
   1dcf0:	str	lr, [sp, #20]
   1dcf4:	ldrb	r2, [r2, #-1]
   1dcf8:	ldrb	r0, [r0]
   1dcfc:	add	r1, pc, r1
   1dd00:	ldr	r5, [pc, #152]	; 1dda0 <myhtml_namespace_name_entry_by_name@@Base+0xd8>
   1dd04:	ldrb	r2, [r1, r2]
   1dd08:	ldrb	r0, [r1, r0]
   1dd0c:	add	r5, pc, r5
   1dd10:	smulbb	r0, r2, r0
   1dd14:	mul	r2, r7, r0
   1dd18:	umull	r1, r3, r3, r2
   1dd1c:	sub	r0, r2, r3
   1dd20:	add	r0, r3, r0, lsr #1
   1dd24:	lsr	r0, r0, #4
   1dd28:	mls	r0, ip, r0, r2
   1dd2c:	add	r0, r0, #1
   1dd30:	add	r3, r0, r0, lsl #2
   1dd34:	ldr	r0, [r5, r3, lsl #2]
   1dd38:	add	r4, r5, r3, lsl #2
   1dd3c:	cmp	r0, #0
   1dd40:	beq	1dd7c <myhtml_namespace_name_entry_by_name@@Base+0xb4>
   1dd44:	ldr	r3, [r4, #4]
   1dd48:	cmp	r3, r7
   1dd4c:	beq	1dd5c <myhtml_namespace_name_entry_by_name@@Base+0x94>
   1dd50:	bhi	1dd7c <myhtml_namespace_name_entry_by_name@@Base+0xb4>
   1dd54:	ldr	r0, [r4, #12]
   1dd58:	b	1dd30 <myhtml_namespace_name_entry_by_name@@Base+0x68>
   1dd5c:	mov	r2, r7
   1dd60:	mov	r1, r6
   1dd64:	bl	10238 <mycore_strncasecmp@plt>
   1dd68:	cmp	r0, #0
   1dd6c:	beq	1dd94 <myhtml_namespace_name_entry_by_name@@Base+0xcc>
   1dd70:	ldr	r0, [r4, #12]
   1dd74:	cmp	r0, #0
   1dd78:	bne	1dd30 <myhtml_namespace_name_entry_by_name@@Base+0x68>
   1dd7c:	mov	r0, #0
   1dd80:	ldrd	r4, [sp]
   1dd84:	ldrd	r6, [sp, #8]
   1dd88:	ldr	r8, [sp, #16]
   1dd8c:	add	sp, sp, #20
   1dd90:	pop	{pc}		; (ldr pc, [sp], #4)
   1dd94:	mov	r0, r4
   1dd98:	b	1dd80 <myhtml_namespace_name_entry_by_name@@Base+0xb8>
   1dd9c:	muleq	lr, r8, r8
   1dda0:	andeq	r6, pc, r8, lsr r6	; <UNPREDICTABLE>

0001dda4 <myhtml_namespace_id_by_name@@Base>:
   1dda4:	str	r4, [sp, #-8]!
   1dda8:	mov	r4, r2
   1ddac:	str	lr, [sp, #4]
   1ddb0:	bl	101a8 <myhtml_namespace_name_entry_by_name@plt>
   1ddb4:	cmp	r0, #0
   1ddb8:	beq	1ddd0 <myhtml_namespace_id_by_name@@Base+0x2c>
   1ddbc:	cmp	r4, #0
   1ddc0:	ldrne	r3, [r0, #8]
   1ddc4:	moveq	r0, #1
   1ddc8:	movne	r0, #1
   1ddcc:	strne	r3, [r4]
   1ddd0:	ldr	r4, [sp]
   1ddd4:	add	sp, sp, #4
   1ddd8:	pop	{pc}		; (ldr pc, [sp], #4)

0001dddc <myhtml_namespace_name_by_id@@Base>:
   1dddc:	cmp	r0, #7
   1dde0:	strd	r4, [sp, #-16]!
   1dde4:	str	r6, [sp, #8]
   1dde8:	str	lr, [sp, #12]
   1ddec:	bhi	1de2c <myhtml_namespace_name_by_id@@Base+0x50>
   1ddf0:	ldr	r4, [pc, #80]	; 1de48 <myhtml_namespace_name_by_id@@Base+0x6c>
   1ddf4:	cmp	r1, #0
   1ddf8:	add	r4, pc, r4
   1ddfc:	add	r4, r4, #256	; 0x100
   1de00:	add	r4, r4, r0, lsl #3
   1de04:	beq	1de18 <myhtml_namespace_name_by_id@@Base+0x3c>
   1de08:	mov	r5, r1
   1de0c:	mov	r0, r4
   1de10:	bl	10604 <strlen@plt>
   1de14:	str	r0, [r5]
   1de18:	mov	r0, r4
   1de1c:	ldrd	r4, [sp]
   1de20:	ldr	r6, [sp, #8]
   1de24:	add	sp, sp, #12
   1de28:	pop	{pc}		; (ldr pc, [sp], #4)
   1de2c:	cmp	r1, #0
   1de30:	moveq	r4, r1
   1de34:	beq	1de18 <myhtml_namespace_name_by_id@@Base+0x3c>
   1de38:	mov	r3, #0
   1de3c:	mov	r4, r3
   1de40:	str	r3, [r1]
   1de44:	b	1de18 <myhtml_namespace_name_by_id@@Base+0x3c>
   1de48:	muleq	lr, ip, r7

0001de4c <myhtml_namespace_url_by_id@@Base>:
   1de4c:	cmp	r0, #7
   1de50:	bhi	1de94 <myhtml_namespace_url_by_id@@Base+0x48>
   1de54:	cmp	r1, #0
   1de58:	lsleq	r2, r0, #1
   1de5c:	beq	1de7c <myhtml_namespace_url_by_id@@Base+0x30>
   1de60:	ldr	r3, [pc, #76]	; 1deb4 <myhtml_namespace_url_by_id@@Base+0x68>
   1de64:	lsl	r2, r0, #1
   1de68:	add	ip, r2, r0
   1de6c:	add	r3, pc, r3
   1de70:	add	r3, r3, ip, lsl #2
   1de74:	ldr	r3, [r3, #404]	; 0x194
   1de78:	str	r3, [r1]
   1de7c:	ldr	r3, [pc, #52]	; 1deb8 <myhtml_namespace_url_by_id@@Base+0x6c>
   1de80:	add	r0, r2, r0
   1de84:	add	r3, pc, r3
   1de88:	add	r3, r3, r0, lsl #2
   1de8c:	ldr	r0, [r3, #400]	; 0x190
   1de90:	bx	lr
   1de94:	cmp	r1, #0
   1de98:	beq	1deac <myhtml_namespace_url_by_id@@Base+0x60>
   1de9c:	mov	r3, #0
   1dea0:	mov	r0, r3
   1dea4:	str	r3, [r1]
   1dea8:	bx	lr
   1deac:	mov	r0, r1
   1deb0:	bx	lr
   1deb4:	ldrdeq	r6, [pc], -r8
   1deb8:	andeq	r6, pc, r0, asr #9

0001debc <myhtml_namespace_id_by_url@@Base>:
   1debc:	mov	r0, #0
   1dec0:	bx	lr

0001dec4 <myhtml_string_append_with_preprocessing@@Base>:
   1dec4:	ldr	ip, [r0, #8]
   1dec8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1decc:	mov	r5, r1
   1ded0:	mov	r4, r0
   1ded4:	strd	r6, [sp, #8]
   1ded8:	strd	sl, [sp, #24]
   1dedc:	mov	sl, r3
   1dee0:	ldr	r3, [r0, #4]
   1dee4:	strd	r8, [sp, #16]
   1dee8:	mov	r9, r2
   1deec:	add	r2, r2, #1
   1def0:	add	r1, r2, ip
   1def4:	str	lr, [sp, #32]
   1def8:	sub	sp, sp, #4
   1defc:	cmp	r1, r3
   1df00:	bcs	1e014 <myhtml_string_append_with_preprocessing@@Base+0x150>
   1df04:	cmp	r9, #0
   1df08:	ldr	r3, [r4]
   1df0c:	beq	1e05c <myhtml_string_append_with_preprocessing@@Base+0x198>
   1df10:	mov	r1, #0
   1df14:	mvn	r8, #16
   1df18:	mvn	r7, #64	; 0x40
   1df1c:	mvn	r6, #66	; 0x42
   1df20:	ldrb	r2, [r5, r1]
   1df24:	add	fp, r1, #1
   1df28:	cmp	r2, #13
   1df2c:	beq	1df90 <myhtml_string_append_with_preprocessing@@Base+0xcc>
   1df30:	cmp	r2, #0
   1df34:	moveq	r0, sl
   1df38:	orrne	r0, sl, #1
   1df3c:	mov	r1, fp
   1df40:	cmp	r0, #0
   1df44:	beq	1dfc8 <myhtml_string_append_with_preprocessing@@Base+0x104>
   1df48:	ldr	r0, [r4, #8]
   1df4c:	strb	r2, [r3, r0]
   1df50:	ldr	ip, [r4, #8]
   1df54:	add	ip, ip, #1
   1df58:	cmp	r9, r1
   1df5c:	str	ip, [r4, #8]
   1df60:	bhi	1df20 <myhtml_string_append_with_preprocessing@@Base+0x5c>
   1df64:	ldr	r3, [r4]
   1df68:	mov	r2, #0
   1df6c:	mov	r0, r2
   1df70:	strb	r2, [r3, ip]
   1df74:	add	sp, sp, #4
   1df78:	ldrd	r4, [sp]
   1df7c:	ldrd	r6, [sp, #8]
   1df80:	ldrd	r8, [sp, #16]
   1df84:	ldrd	sl, [sp, #24]
   1df88:	add	sp, sp, #32
   1df8c:	pop	{pc}		; (ldr pc, [sp], #4)
   1df90:	ldr	r2, [r4, #8]
   1df94:	mov	r0, #10
   1df98:	cmp	r9, fp
   1df9c:	strb	r0, [r3, r2]
   1dfa0:	bls	1e01c <myhtml_string_append_with_preprocessing@@Base+0x158>
   1dfa4:	ldrb	r2, [r5, fp]
   1dfa8:	ldr	ip, [r4, #8]
   1dfac:	cmp	r2, r0
   1dfb0:	addeq	r1, r1, #2
   1dfb4:	add	ip, ip, #1
   1dfb8:	beq	1df58 <myhtml_string_append_with_preprocessing@@Base+0x94>
   1dfbc:	mov	r1, fp
   1dfc0:	str	ip, [r4, #8]
   1dfc4:	b	1df20 <myhtml_string_append_with_preprocessing@@Base+0x5c>
   1dfc8:	ldr	r1, [r4, #4]
   1dfcc:	mov	r0, r4
   1dfd0:	add	r1, r1, #5
   1dfd4:	bl	108f8 <mycore_string_realloc@plt>
   1dfd8:	ldr	r3, [r4]
   1dfdc:	mov	r1, fp
   1dfe0:	ldr	r2, [r4, #8]
   1dfe4:	strb	r8, [r3, r2]
   1dfe8:	ldr	r2, [r4, #8]
   1dfec:	add	r2, r2, #1
   1dff0:	str	r2, [r4, #8]
   1dff4:	strb	r7, [r3, r2]
   1dff8:	ldr	r2, [r4, #8]
   1dffc:	add	r2, r2, #1
   1e000:	str	r2, [r4, #8]
   1e004:	strb	r6, [r3, r2]
   1e008:	ldr	ip, [r4, #8]
   1e00c:	add	ip, ip, #1
   1e010:	b	1df58 <myhtml_string_append_with_preprocessing@@Base+0x94>
   1e014:	bl	108f8 <mycore_string_realloc@plt>
   1e018:	b	1df04 <myhtml_string_append_with_preprocessing@@Base+0x40>
   1e01c:	ldr	r2, [r4, #4]
   1e020:	ldr	r1, [r4, #8]
   1e024:	add	r3, r1, #1
   1e028:	cmp	r3, r2
   1e02c:	str	r3, [r4, #8]
   1e030:	bcs	1e048 <myhtml_string_append_with_preprocessing@@Base+0x184>
   1e034:	ldr	r2, [r4]
   1e038:	mov	r1, #0
   1e03c:	strb	r1, [r2, r3]
   1e040:	ldr	r0, [r4, #8]
   1e044:	b	1df74 <myhtml_string_append_with_preprocessing@@Base+0xb0>
   1e048:	add	r1, r1, #3
   1e04c:	mov	r0, r4
   1e050:	bl	108f8 <mycore_string_realloc@plt>
   1e054:	ldr	r3, [r4, #8]
   1e058:	b	1e034 <myhtml_string_append_with_preprocessing@@Base+0x170>
   1e05c:	ldr	ip, [r4, #8]
   1e060:	b	1df68 <myhtml_string_append_with_preprocessing@@Base+0xa4>

0001e064 <myhtml_string_append_lowercase_with_preprocessing@@Base>:
   1e064:	ldr	ip, [r0, #8]
   1e068:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1e06c:	mov	r5, r1
   1e070:	mov	r4, r0
   1e074:	strd	r6, [sp, #8]
   1e078:	mov	r6, r2
   1e07c:	add	r2, r2, #1
   1e080:	strd	r8, [sp, #16]
   1e084:	mov	r9, r3
   1e088:	ldr	r3, [r0, #4]
   1e08c:	add	r1, r2, ip
   1e090:	strd	sl, [sp, #24]
   1e094:	str	lr, [sp, #32]
   1e098:	sub	sp, sp, #4
   1e09c:	cmp	r1, r3
   1e0a0:	bcs	1e1c0 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x15c>
   1e0a4:	cmp	r6, #0
   1e0a8:	ldr	r3, [r4]
   1e0ac:	beq	1e208 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x1a4>
   1e0b0:	ldr	sl, [pc, #344]	; 1e210 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x1ac>
   1e0b4:	mov	r1, #0
   1e0b8:	mvn	r8, #16
   1e0bc:	mvn	r7, #64	; 0x40
   1e0c0:	add	sl, pc, sl
   1e0c4:	ldrb	r2, [r5, r1]
   1e0c8:	add	fp, r1, #1
   1e0cc:	cmp	r2, #13
   1e0d0:	beq	1e138 <myhtml_string_append_lowercase_with_preprocessing@@Base+0xd4>
   1e0d4:	cmp	r2, #0
   1e0d8:	moveq	r0, r9
   1e0dc:	orrne	r0, r9, #1
   1e0e0:	mov	r1, fp
   1e0e4:	cmp	r0, #0
   1e0e8:	beq	1e170 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x10c>
   1e0ec:	ldrb	r0, [sl, r2]
   1e0f0:	ldr	r2, [r4, #8]
   1e0f4:	strb	r0, [r3, r2]
   1e0f8:	ldr	ip, [r4, #8]
   1e0fc:	add	ip, ip, #1
   1e100:	cmp	r6, r1
   1e104:	str	ip, [r4, #8]
   1e108:	bhi	1e0c4 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x60>
   1e10c:	ldr	r3, [r4]
   1e110:	mov	r2, #0
   1e114:	mov	r0, r2
   1e118:	strb	r2, [r3, ip]
   1e11c:	add	sp, sp, #4
   1e120:	ldrd	r4, [sp]
   1e124:	ldrd	r6, [sp, #8]
   1e128:	ldrd	r8, [sp, #16]
   1e12c:	ldrd	sl, [sp, #24]
   1e130:	add	sp, sp, #32
   1e134:	pop	{pc}		; (ldr pc, [sp], #4)
   1e138:	ldr	r2, [r4, #8]
   1e13c:	mov	r0, #10
   1e140:	cmp	r6, fp
   1e144:	strb	r0, [r3, r2]
   1e148:	bls	1e1c8 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x164>
   1e14c:	ldrb	r2, [r5, fp]
   1e150:	ldr	ip, [r4, #8]
   1e154:	cmp	r2, r0
   1e158:	addeq	r1, r1, #2
   1e15c:	add	ip, ip, #1
   1e160:	beq	1e100 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x9c>
   1e164:	mov	r1, fp
   1e168:	str	ip, [r4, #8]
   1e16c:	b	1e0c4 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x60>
   1e170:	ldr	r1, [r4, #4]
   1e174:	mov	r0, r4
   1e178:	add	r1, r1, #5
   1e17c:	bl	108f8 <mycore_string_realloc@plt>
   1e180:	ldr	r3, [r4]
   1e184:	mvn	r0, #66	; 0x42
   1e188:	mov	r1, fp
   1e18c:	ldr	r2, [r4, #8]
   1e190:	strb	r8, [r3, r2]
   1e194:	ldr	r2, [r4, #8]
   1e198:	add	r2, r2, #1
   1e19c:	str	r2, [r4, #8]
   1e1a0:	strb	r7, [r3, r2]
   1e1a4:	ldr	r2, [r4, #8]
   1e1a8:	add	r2, r2, #1
   1e1ac:	str	r2, [r4, #8]
   1e1b0:	strb	r0, [r3, r2]
   1e1b4:	ldr	ip, [r4, #8]
   1e1b8:	add	ip, ip, #1
   1e1bc:	b	1e100 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x9c>
   1e1c0:	bl	108f8 <mycore_string_realloc@plt>
   1e1c4:	b	1e0a4 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x40>
   1e1c8:	ldr	r2, [r4, #4]
   1e1cc:	ldr	r1, [r4, #8]
   1e1d0:	add	r3, r1, #1
   1e1d4:	cmp	r3, r2
   1e1d8:	str	r3, [r4, #8]
   1e1dc:	bcs	1e1f4 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x190>
   1e1e0:	ldr	r2, [r4]
   1e1e4:	mov	r1, #0
   1e1e8:	strb	r1, [r2, r3]
   1e1ec:	ldr	r0, [r4, #8]
   1e1f0:	b	1e11c <myhtml_string_append_lowercase_with_preprocessing@@Base+0xb8>
   1e1f4:	add	r1, r1, #3
   1e1f8:	mov	r0, r4
   1e1fc:	bl	108f8 <mycore_string_realloc@plt>
   1e200:	ldr	r3, [r4, #8]
   1e204:	b	1e1e0 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x17c>
   1e208:	ldr	ip, [r4, #8]
   1e20c:	b	1e110 <myhtml_string_append_lowercase_with_preprocessing@@Base+0xac>
   1e210:	andeq	r0, lr, ip, lsl #14

0001e214 <myhtml_string_before_append_any_preprocessing@@Base>:
   1e214:	cmp	r2, #0
   1e218:	cmpne	r3, #0
   1e21c:	beq	1e234 <myhtml_string_before_append_any_preprocessing@@Base+0x20>
   1e220:	ldrb	r0, [r1]
   1e224:	sub	r0, r0, #10
   1e228:	clz	r0, r0
   1e22c:	lsr	r0, r0, #5
   1e230:	bx	lr
   1e234:	mov	r0, #0
   1e238:	bx	lr

0001e23c <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base>:
   1e23c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1e240:	mov	r4, r0
   1e244:	strd	r6, [sp, #8]
   1e248:	mov	r6, r1
   1e24c:	mov	r7, r3
   1e250:	ldr	r1, [r0, #8]
   1e254:	add	r3, r3, #1
   1e258:	strd	r8, [sp, #16]
   1e25c:	mov	r8, r2
   1e260:	ldr	r2, [r0, #4]
   1e264:	strd	sl, [sp, #24]
   1e268:	str	lr, [sp, #32]
   1e26c:	sub	sp, sp, #12
   1e270:	add	r1, r3, r1
   1e274:	ldrb	sl, [sp, #52]	; 0x34
   1e278:	cmp	r1, r2
   1e27c:	bcs	1e3f8 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x1bc>
   1e280:	ldr	r0, [sp, #48]	; 0x30
   1e284:	bl	107c0 <myencoding_get_function_by_id@plt>
   1e288:	cmp	r7, #0
   1e28c:	mov	r9, r0
   1e290:	movne	fp, #0
   1e294:	bne	1e2b4 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x78>
   1e298:	b	1e398 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x15c>
   1e29c:	ldr	r2, [r4, #8]
   1e2a0:	add	r3, r3, r2
   1e2a4:	str	r3, [r4, #8]
   1e2a8:	cmp	r7, r5
   1e2ac:	mov	fp, r5
   1e2b0:	bls	1e398 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x15c>
   1e2b4:	mov	r1, r6
   1e2b8:	ldrb	r0, [r8, fp]
   1e2bc:	add	r5, fp, #1
   1e2c0:	blx	r9
   1e2c4:	cmp	r0, #0
   1e2c8:	bne	1e2a8 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x6c>
   1e2cc:	ldr	r3, [r4, #4]
   1e2d0:	ldr	r1, [r4, #8]
   1e2d4:	add	r2, r1, #5
   1e2d8:	cmp	r2, r3
   1e2dc:	bcs	1e384 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x148>
   1e2e0:	ldr	r3, [r4]
   1e2e4:	ldr	r0, [r6, #12]
   1e2e8:	add	r1, r3, r1
   1e2ec:	bl	10e20 <myencoding_codepoint_to_ascii_utf_8@plt>
   1e2f0:	cmp	r0, #1
   1e2f4:	mov	r3, r0
   1e2f8:	bne	1e29c <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x60>
   1e2fc:	ldr	r0, [r4]
   1e300:	ldr	r2, [r4, #8]
   1e304:	ldrb	r1, [r0, r2]
   1e308:	cmp	r1, #13
   1e30c:	beq	1e3d4 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x198>
   1e310:	cmp	r1, #0
   1e314:	moveq	r1, sl
   1e318:	orrne	r1, sl, #1
   1e31c:	cmp	r1, #0
   1e320:	bne	1e2a0 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x64>
   1e324:	ldr	r1, [r4, #4]
   1e328:	mov	r0, r4
   1e32c:	str	r3, [sp, #4]
   1e330:	add	r1, r1, #5
   1e334:	bl	108f8 <mycore_string_realloc@plt>
   1e338:	ldr	r1, [r4]
   1e33c:	mvn	r3, #16
   1e340:	ldr	r2, [r4, #8]
   1e344:	strb	r3, [r1, r2]
   1e348:	mvn	r3, #64	; 0x40
   1e34c:	ldr	r1, [r4]
   1e350:	ldr	r2, [r4, #8]
   1e354:	add	r2, r2, #1
   1e358:	str	r2, [r4, #8]
   1e35c:	strb	r3, [r1, r2]
   1e360:	mvn	r3, #66	; 0x42
   1e364:	ldr	r1, [r4]
   1e368:	ldr	r2, [r4, #8]
   1e36c:	add	r2, r2, #1
   1e370:	str	r2, [r4, #8]
   1e374:	strb	r3, [r1, r2]
   1e378:	ldr	r3, [sp, #4]
   1e37c:	ldr	r2, [r4, #8]
   1e380:	b	1e2a0 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x64>
   1e384:	add	r1, r1, #6
   1e388:	mov	r0, r4
   1e38c:	bl	108f8 <mycore_string_realloc@plt>
   1e390:	ldr	r1, [r4, #8]
   1e394:	b	1e2e0 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0xa4>
   1e398:	ldr	r3, [r4, #4]
   1e39c:	ldr	r1, [r4, #8]
   1e3a0:	cmp	r1, r3
   1e3a4:	bcs	1e400 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x1c4>
   1e3a8:	ldr	r2, [r4]
   1e3ac:	mov	r3, #0
   1e3b0:	mov	r0, r3
   1e3b4:	strb	r3, [r2, r1]
   1e3b8:	add	sp, sp, #12
   1e3bc:	ldrd	r4, [sp]
   1e3c0:	ldrd	r6, [sp, #8]
   1e3c4:	ldrd	r8, [sp, #16]
   1e3c8:	ldrd	sl, [sp, #24]
   1e3cc:	add	sp, sp, #32
   1e3d0:	pop	{pc}		; (ldr pc, [sp], #4)
   1e3d4:	mov	r1, #10
   1e3d8:	cmp	r7, r5
   1e3dc:	strb	r1, [r0, r2]
   1e3e0:	bls	1e414 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x1d8>
   1e3e4:	ldrb	r1, [r8, r5]
   1e3e8:	ldr	r2, [r4, #8]
   1e3ec:	cmp	r1, #10
   1e3f0:	addeq	r5, fp, #2
   1e3f4:	b	1e2a0 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x64>
   1e3f8:	bl	108f8 <mycore_string_realloc@plt>
   1e3fc:	b	1e280 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x44>
   1e400:	add	r1, r1, #1
   1e404:	mov	r0, r4
   1e408:	bl	108f8 <mycore_string_realloc@plt>
   1e40c:	ldr	r1, [r4, #8]
   1e410:	b	1e3a8 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x16c>
   1e414:	ldr	r2, [r4, #4]
   1e418:	ldr	r1, [r4, #8]
   1e41c:	add	r3, r1, #1
   1e420:	cmp	r3, r2
   1e424:	str	r3, [r4, #8]
   1e428:	bcs	1e440 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x204>
   1e42c:	ldr	r2, [r4]
   1e430:	mov	r1, #0
   1e434:	strb	r1, [r2, r3]
   1e438:	ldr	r0, [r4, #8]
   1e43c:	b	1e3b8 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x17c>
   1e440:	add	r1, r1, #3
   1e444:	mov	r0, r4
   1e448:	bl	108f8 <mycore_string_realloc@plt>
   1e44c:	ldr	r3, [r4, #8]
   1e450:	b	1e42c <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x1f0>

0001e454 <myhtml_string_append_with_convert_encoding_with_preprocessing@@Base>:
   1e454:	strd	r4, [sp, #-28]!	; 0xffffffe4
   1e458:	strd	r6, [sp, #8]
   1e45c:	mov	r7, r3
   1e460:	mov	r6, r0
   1e464:	strd	r8, [sp, #16]
   1e468:	mov	r8, r1
   1e46c:	mov	r9, r2
   1e470:	str	lr, [sp, #24]
   1e474:	sub	sp, sp, #36	; 0x24
   1e478:	ldrb	r5, [sp, #64]	; 0x40
   1e47c:	add	r4, sp, #8
   1e480:	mov	r0, r4
   1e484:	bl	10160 <myencoding_result_clean@plt>
   1e488:	mov	r3, r9
   1e48c:	mov	r2, r8
   1e490:	str	r7, [sp]
   1e494:	mov	r1, r4
   1e498:	mov	r0, r6
   1e49c:	str	r5, [sp, #4]
   1e4a0:	bl	10da8 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1e4a4:	add	sp, sp, #36	; 0x24
   1e4a8:	ldrd	r4, [sp]
   1e4ac:	ldrd	r6, [sp, #8]
   1e4b0:	ldrd	r8, [sp, #16]
   1e4b4:	add	sp, sp, #24
   1e4b8:	pop	{pc}		; (ldr pc, [sp], #4)

0001e4bc <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base>:
   1e4bc:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1e4c0:	mov	r4, r0
   1e4c4:	strd	r6, [sp, #8]
   1e4c8:	mov	r6, r1
   1e4cc:	mov	r7, r3
   1e4d0:	ldr	r1, [r0, #8]
   1e4d4:	add	r3, r3, #1
   1e4d8:	strd	r8, [sp, #16]
   1e4dc:	mov	r8, r2
   1e4e0:	ldr	r2, [r0, #4]
   1e4e4:	strd	sl, [sp, #24]
   1e4e8:	str	lr, [sp, #32]
   1e4ec:	sub	sp, sp, #12
   1e4f0:	add	r1, r3, r1
   1e4f4:	ldrb	sl, [sp, #52]	; 0x34
   1e4f8:	cmp	r1, r2
   1e4fc:	bcs	1e678 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x1bc>
   1e500:	ldr	r0, [sp, #48]	; 0x30
   1e504:	bl	107c0 <myencoding_get_function_by_id@plt>
   1e508:	cmp	r7, #0
   1e50c:	mov	r9, r0
   1e510:	movne	fp, #0
   1e514:	bne	1e534 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x78>
   1e518:	b	1e618 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x15c>
   1e51c:	ldr	r2, [r4, #8]
   1e520:	add	r3, r3, r2
   1e524:	str	r3, [r4, #8]
   1e528:	cmp	r7, r5
   1e52c:	mov	fp, r5
   1e530:	bls	1e618 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x15c>
   1e534:	mov	r1, r6
   1e538:	ldrb	r0, [r8, fp]
   1e53c:	add	r5, fp, #1
   1e540:	blx	r9
   1e544:	cmp	r0, #0
   1e548:	bne	1e528 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x6c>
   1e54c:	ldr	r3, [r4, #4]
   1e550:	ldr	r1, [r4, #8]
   1e554:	add	r2, r1, #5
   1e558:	cmp	r2, r3
   1e55c:	bcs	1e604 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x148>
   1e560:	ldr	r3, [r4]
   1e564:	ldr	r0, [r6, #12]
   1e568:	add	r1, r3, r1
   1e56c:	bl	fc68 <myencoding_codepoint_to_lowercase_ascii_utf_8@plt>
   1e570:	cmp	r0, #1
   1e574:	mov	r3, r0
   1e578:	bne	1e51c <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x60>
   1e57c:	ldr	r0, [r4]
   1e580:	ldr	r2, [r4, #8]
   1e584:	ldrb	r1, [r0, r2]
   1e588:	cmp	r1, #13
   1e58c:	beq	1e654 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x198>
   1e590:	cmp	r1, #0
   1e594:	moveq	r1, sl
   1e598:	orrne	r1, sl, #1
   1e59c:	cmp	r1, #0
   1e5a0:	bne	1e520 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x64>
   1e5a4:	ldr	r1, [r4, #4]
   1e5a8:	mov	r0, r4
   1e5ac:	str	r3, [sp, #4]
   1e5b0:	add	r1, r1, #5
   1e5b4:	bl	108f8 <mycore_string_realloc@plt>
   1e5b8:	ldr	r1, [r4]
   1e5bc:	mvn	r3, #16
   1e5c0:	ldr	r2, [r4, #8]
   1e5c4:	strb	r3, [r1, r2]
   1e5c8:	mvn	r3, #64	; 0x40
   1e5cc:	ldr	r1, [r4]
   1e5d0:	ldr	r2, [r4, #8]
   1e5d4:	add	r2, r2, #1
   1e5d8:	str	r2, [r4, #8]
   1e5dc:	strb	r3, [r1, r2]
   1e5e0:	mvn	r3, #66	; 0x42
   1e5e4:	ldr	r1, [r4]
   1e5e8:	ldr	r2, [r4, #8]
   1e5ec:	add	r2, r2, #1
   1e5f0:	str	r2, [r4, #8]
   1e5f4:	strb	r3, [r1, r2]
   1e5f8:	ldr	r3, [sp, #4]
   1e5fc:	ldr	r2, [r4, #8]
   1e600:	b	1e520 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x64>
   1e604:	add	r1, r1, #6
   1e608:	mov	r0, r4
   1e60c:	bl	108f8 <mycore_string_realloc@plt>
   1e610:	ldr	r1, [r4, #8]
   1e614:	b	1e560 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0xa4>
   1e618:	ldr	r3, [r4, #4]
   1e61c:	ldr	r1, [r4, #8]
   1e620:	cmp	r1, r3
   1e624:	bcs	1e680 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x1c4>
   1e628:	ldr	r2, [r4]
   1e62c:	mov	r3, #0
   1e630:	mov	r0, r3
   1e634:	strb	r3, [r2, r1]
   1e638:	add	sp, sp, #12
   1e63c:	ldrd	r4, [sp]
   1e640:	ldrd	r6, [sp, #8]
   1e644:	ldrd	r8, [sp, #16]
   1e648:	ldrd	sl, [sp, #24]
   1e64c:	add	sp, sp, #32
   1e650:	pop	{pc}		; (ldr pc, [sp], #4)
   1e654:	mov	r1, #10
   1e658:	cmp	r7, r5
   1e65c:	strb	r1, [r0, r2]
   1e660:	bls	1e694 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x1d8>
   1e664:	ldrb	r1, [r8, r5]
   1e668:	ldr	r2, [r4, #8]
   1e66c:	cmp	r1, #10
   1e670:	addeq	r5, fp, #2
   1e674:	b	1e520 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x64>
   1e678:	bl	108f8 <mycore_string_realloc@plt>
   1e67c:	b	1e500 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x44>
   1e680:	add	r1, r1, #1
   1e684:	mov	r0, r4
   1e688:	bl	108f8 <mycore_string_realloc@plt>
   1e68c:	ldr	r1, [r4, #8]
   1e690:	b	1e628 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x16c>
   1e694:	ldr	r2, [r4, #4]
   1e698:	ldr	r1, [r4, #8]
   1e69c:	add	r3, r1, #1
   1e6a0:	cmp	r3, r2
   1e6a4:	str	r3, [r4, #8]
   1e6a8:	bcs	1e6c0 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x204>
   1e6ac:	ldr	r2, [r4]
   1e6b0:	mov	r1, #0
   1e6b4:	strb	r1, [r2, r3]
   1e6b8:	ldr	r0, [r4, #8]
   1e6bc:	b	1e638 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x17c>
   1e6c0:	add	r1, r1, #3
   1e6c4:	mov	r0, r4
   1e6c8:	bl	108f8 <mycore_string_realloc@plt>
   1e6cc:	ldr	r3, [r4, #8]
   1e6d0:	b	1e6ac <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x1f0>

0001e6d4 <myhtml_string_append_lowercase_with_convert_encoding_with_preprocessing@@Base>:
   1e6d4:	strd	r4, [sp, #-28]!	; 0xffffffe4
   1e6d8:	strd	r6, [sp, #8]
   1e6dc:	mov	r7, r3
   1e6e0:	mov	r6, r0
   1e6e4:	strd	r8, [sp, #16]
   1e6e8:	mov	r8, r1
   1e6ec:	mov	r9, r2
   1e6f0:	str	lr, [sp, #24]
   1e6f4:	sub	sp, sp, #36	; 0x24
   1e6f8:	ldrb	r5, [sp, #64]	; 0x40
   1e6fc:	add	r4, sp, #8
   1e700:	mov	r0, r4
   1e704:	bl	10160 <myencoding_result_clean@plt>
   1e708:	mov	r3, r9
   1e70c:	mov	r2, r8
   1e710:	str	r7, [sp]
   1e714:	mov	r1, r4
   1e718:	mov	r0, r6
   1e71c:	str	r5, [sp, #4]
   1e720:	bl	10d24 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@plt>
   1e724:	add	sp, sp, #36	; 0x24
   1e728:	ldrd	r4, [sp]
   1e72c:	ldrd	r6, [sp, #8]
   1e730:	ldrd	r8, [sp, #16]
   1e734:	add	sp, sp, #24
   1e738:	pop	{pc}		; (ldr pc, [sp], #4)

0001e73c <myhtml_parser_stream@@Base>:
   1e73c:	ldr	r0, [r1]
   1e740:	ldr	r3, [r0, #184]	; 0xb8
   1e744:	tst	r3, #1
   1e748:	bxne	lr
   1e74c:	str	r4, [sp, #-8]!
   1e750:	mov	r4, r1
   1e754:	str	lr, [sp, #4]
   1e758:	b	1e760 <myhtml_parser_stream@@Base+0x24>
   1e75c:	ldr	r0, [r4]
   1e760:	ldr	r1, [r4, #4]
   1e764:	bl	fe3c <myhtml_rules_tree_dispatcher@plt>
   1e768:	cmp	r0, #0
   1e76c:	bne	1e75c <myhtml_parser_stream@@Base+0x20>
   1e770:	ldr	r4, [sp]
   1e774:	add	sp, sp, #4
   1e778:	pop	{pc}		; (ldr pc, [sp], #4)

0001e77c <myhtml_parser_token_data_to_string_lowercase@@Base>:
   1e77c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1e780:	mov	r4, r3
   1e784:	strd	r6, [sp, #8]
   1e788:	strd	r8, [sp, #16]
   1e78c:	mov	r8, r1
   1e790:	mov	r1, r3
   1e794:	strd	sl, [sp, #24]
   1e798:	mov	fp, r0
   1e79c:	mov	sl, r2
   1e7a0:	str	lr, [sp, #32]
   1e7a4:	sub	sp, sp, #20
   1e7a8:	ldr	r0, [r0, #80]	; 0x50
   1e7ac:	ldr	r7, [sp, #56]	; 0x38
   1e7b0:	bl	100a0 <mycore_incoming_buffer_find_by_position@plt>
   1e7b4:	ldrd	r2, [r0, #8]
   1e7b8:	mov	r5, r0
   1e7bc:	sub	r4, r4, r3
   1e7c0:	add	r3, r4, r7
   1e7c4:	cmp	r3, r2
   1e7c8:	addhi	r3, sl, #8
   1e7cc:	movhi	r9, #0
   1e7d0:	strhi	r3, [sp, #12]
   1e7d4:	bhi	1e808 <myhtml_parser_token_data_to_string_lowercase@@Base+0x8c>
   1e7d8:	b	1e8ac <myhtml_parser_token_data_to_string_lowercase@@Base+0x130>
   1e7dc:	mov	r1, r4
   1e7e0:	mov	r3, ip
   1e7e4:	bl	10fc4 <myhtml_string_append_lowercase_with_preprocessing@plt>
   1e7e8:	mov	r9, r0
   1e7ec:	ldr	r5, [r5, #20]
   1e7f0:	mov	r4, #0
   1e7f4:	cmp	r5, r4
   1e7f8:	beq	1e88c <myhtml_parser_token_data_to_string_lowercase@@Base+0x110>
   1e7fc:	ldr	r2, [r5, #8]
   1e800:	cmp	r2, r7
   1e804:	bcs	1e8d8 <myhtml_parser_token_data_to_string_lowercase@@Base+0x15c>
   1e808:	ldr	r1, [r5]
   1e80c:	sub	r6, r2, r4
   1e810:	sub	ip, r4, r2
   1e814:	mov	r3, r9
   1e818:	mov	r2, r6
   1e81c:	mov	r0, r8
   1e820:	add	r7, r7, ip
   1e824:	add	r1, r1, r4
   1e828:	bl	10bb0 <myhtml_string_before_append_any_preprocessing@plt>
   1e82c:	cmp	r6, #0
   1e830:	mov	r2, r0
   1e834:	add	r4, r4, r0
   1e838:	beq	1e7ec <myhtml_parser_token_data_to_string_lowercase@@Base+0x70>
   1e83c:	ldr	ip, [fp, #200]	; 0xc8
   1e840:	sub	r2, r6, r2
   1e844:	mov	r0, r8
   1e848:	mov	r3, r2
   1e84c:	ldr	lr, [r5]
   1e850:	ldr	r1, [sp, #12]
   1e854:	cmp	ip, #0
   1e858:	ldrb	ip, [sl, #61]	; 0x3d
   1e85c:	add	r4, lr, r4
   1e860:	beq	1e7dc <myhtml_parser_token_data_to_string_lowercase@@Base+0x60>
   1e864:	ldr	lr, [sl, #4]
   1e868:	mov	r2, r4
   1e86c:	mov	r4, #0
   1e870:	str	lr, [sp]
   1e874:	str	ip, [sp, #4]
   1e878:	bl	10d24 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@plt>
   1e87c:	ldr	r5, [r5, #20]
   1e880:	mov	r9, r0
   1e884:	cmp	r5, r4
   1e888:	bne	1e7fc <myhtml_parser_token_data_to_string_lowercase@@Base+0x80>
   1e88c:	ldr	r0, [r8, #8]
   1e890:	add	sp, sp, #20
   1e894:	ldrd	r4, [sp]
   1e898:	ldrd	r6, [sp, #8]
   1e89c:	ldrd	r8, [sp, #16]
   1e8a0:	ldrd	sl, [sp, #24]
   1e8a4:	add	sp, sp, #32
   1e8a8:	pop	{pc}		; (ldr pc, [sp], #4)
   1e8ac:	ldr	r3, [fp, #200]	; 0xc8
   1e8b0:	ldr	r1, [r5]
   1e8b4:	ldrb	r0, [sl, #61]	; 0x3d
   1e8b8:	cmp	r3, #0
   1e8bc:	add	r1, r1, r4
   1e8c0:	bne	1e920 <myhtml_parser_token_data_to_string_lowercase@@Base+0x1a4>
   1e8c4:	mov	r3, r0
   1e8c8:	mov	r2, r7
   1e8cc:	mov	r0, r8
   1e8d0:	bl	10fc4 <myhtml_string_append_lowercase_with_preprocessing@plt>
   1e8d4:	b	1e88c <myhtml_parser_token_data_to_string_lowercase@@Base+0x110>
   1e8d8:	mov	r3, r9
   1e8dc:	mov	r2, r7
   1e8e0:	ldr	r1, [r5]
   1e8e4:	mov	r0, r8
   1e8e8:	bl	10bb0 <myhtml_string_before_append_any_preprocessing@plt>
   1e8ec:	cmp	r7, #0
   1e8f0:	beq	1e88c <myhtml_parser_token_data_to_string_lowercase@@Base+0x110>
   1e8f4:	ldr	r3, [fp, #200]	; 0xc8
   1e8f8:	sub	r2, r7, r0
   1e8fc:	ldr	r1, [r5]
   1e900:	ldrb	ip, [sl, #61]	; 0x3d
   1e904:	cmp	r3, #0
   1e908:	add	r1, r1, r0
   1e90c:	bne	1e944 <myhtml_parser_token_data_to_string_lowercase@@Base+0x1c8>
   1e910:	mov	r3, ip
   1e914:	mov	r0, r8
   1e918:	bl	10fc4 <myhtml_string_append_lowercase_with_preprocessing@plt>
   1e91c:	b	1e88c <myhtml_parser_token_data_to_string_lowercase@@Base+0x110>
   1e920:	ldr	ip, [sl, #4]
   1e924:	mov	r2, r1
   1e928:	mov	r3, r7
   1e92c:	add	r1, sl, #8
   1e930:	str	ip, [sp]
   1e934:	str	r0, [sp, #4]
   1e938:	mov	r0, r8
   1e93c:	bl	10d24 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@plt>
   1e940:	b	1e88c <myhtml_parser_token_data_to_string_lowercase@@Base+0x110>
   1e944:	ldr	lr, [sl, #4]
   1e948:	mov	r3, r2
   1e94c:	mov	r0, r8
   1e950:	mov	r2, r1
   1e954:	add	r1, sl, #8
   1e958:	str	lr, [sp]
   1e95c:	str	ip, [sp, #4]
   1e960:	bl	10d24 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@plt>
   1e964:	b	1e88c <myhtml_parser_token_data_to_string_lowercase@@Base+0x110>

0001e968 <myhtml_parser_token_data_to_string@@Base>:
   1e968:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1e96c:	mov	r4, r3
   1e970:	strd	r6, [sp, #8]
   1e974:	strd	r8, [sp, #16]
   1e978:	mov	r8, r1
   1e97c:	mov	r1, r3
   1e980:	strd	sl, [sp, #24]
   1e984:	mov	fp, r0
   1e988:	mov	sl, r2
   1e98c:	str	lr, [sp, #32]
   1e990:	sub	sp, sp, #20
   1e994:	ldr	r0, [r0, #80]	; 0x50
   1e998:	ldr	r7, [sp, #56]	; 0x38
   1e99c:	bl	100a0 <mycore_incoming_buffer_find_by_position@plt>
   1e9a0:	ldrd	r2, [r0, #8]
   1e9a4:	mov	r5, r0
   1e9a8:	sub	r4, r4, r3
   1e9ac:	add	r3, r4, r7
   1e9b0:	cmp	r3, r2
   1e9b4:	addhi	r3, sl, #8
   1e9b8:	movhi	r9, #0
   1e9bc:	strhi	r3, [sp, #12]
   1e9c0:	bhi	1e9f4 <myhtml_parser_token_data_to_string@@Base+0x8c>
   1e9c4:	b	1ea98 <myhtml_parser_token_data_to_string@@Base+0x130>
   1e9c8:	mov	r1, r4
   1e9cc:	mov	r3, ip
   1e9d0:	bl	1016c <myhtml_string_append_with_preprocessing@plt>
   1e9d4:	mov	r9, r0
   1e9d8:	ldr	r5, [r5, #20]
   1e9dc:	mov	r4, #0
   1e9e0:	cmp	r5, r4
   1e9e4:	beq	1ea78 <myhtml_parser_token_data_to_string@@Base+0x110>
   1e9e8:	ldr	r2, [r5, #8]
   1e9ec:	cmp	r2, r7
   1e9f0:	bcs	1eac4 <myhtml_parser_token_data_to_string@@Base+0x15c>
   1e9f4:	ldr	r1, [r5]
   1e9f8:	sub	r6, r2, r4
   1e9fc:	sub	ip, r4, r2
   1ea00:	mov	r3, r9
   1ea04:	mov	r2, r6
   1ea08:	mov	r0, r8
   1ea0c:	add	r7, r7, ip
   1ea10:	add	r1, r1, r4
   1ea14:	bl	10bb0 <myhtml_string_before_append_any_preprocessing@plt>
   1ea18:	cmp	r6, #0
   1ea1c:	mov	r2, r0
   1ea20:	add	r4, r4, r0
   1ea24:	beq	1e9d8 <myhtml_parser_token_data_to_string@@Base+0x70>
   1ea28:	ldr	ip, [fp, #200]	; 0xc8
   1ea2c:	sub	r2, r6, r2
   1ea30:	mov	r0, r8
   1ea34:	mov	r3, r2
   1ea38:	ldr	lr, [r5]
   1ea3c:	ldr	r1, [sp, #12]
   1ea40:	cmp	ip, #0
   1ea44:	ldrb	ip, [sl, #61]	; 0x3d
   1ea48:	add	r4, lr, r4
   1ea4c:	beq	1e9c8 <myhtml_parser_token_data_to_string@@Base+0x60>
   1ea50:	ldr	lr, [sl, #4]
   1ea54:	mov	r2, r4
   1ea58:	mov	r4, #0
   1ea5c:	str	lr, [sp]
   1ea60:	str	ip, [sp, #4]
   1ea64:	bl	10da8 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1ea68:	ldr	r5, [r5, #20]
   1ea6c:	mov	r9, r0
   1ea70:	cmp	r5, r4
   1ea74:	bne	1e9e8 <myhtml_parser_token_data_to_string@@Base+0x80>
   1ea78:	ldr	r0, [r8, #8]
   1ea7c:	add	sp, sp, #20
   1ea80:	ldrd	r4, [sp]
   1ea84:	ldrd	r6, [sp, #8]
   1ea88:	ldrd	r8, [sp, #16]
   1ea8c:	ldrd	sl, [sp, #24]
   1ea90:	add	sp, sp, #32
   1ea94:	pop	{pc}		; (ldr pc, [sp], #4)
   1ea98:	ldr	r3, [fp, #200]	; 0xc8
   1ea9c:	ldr	r1, [r5]
   1eaa0:	ldrb	r0, [sl, #61]	; 0x3d
   1eaa4:	cmp	r3, #0
   1eaa8:	add	r1, r1, r4
   1eaac:	bne	1eb0c <myhtml_parser_token_data_to_string@@Base+0x1a4>
   1eab0:	mov	r3, r0
   1eab4:	mov	r2, r7
   1eab8:	mov	r0, r8
   1eabc:	bl	1016c <myhtml_string_append_with_preprocessing@plt>
   1eac0:	b	1ea78 <myhtml_parser_token_data_to_string@@Base+0x110>
   1eac4:	mov	r3, r9
   1eac8:	mov	r2, r7
   1eacc:	ldr	r1, [r5]
   1ead0:	mov	r0, r8
   1ead4:	bl	10bb0 <myhtml_string_before_append_any_preprocessing@plt>
   1ead8:	cmp	r7, #0
   1eadc:	beq	1ea78 <myhtml_parser_token_data_to_string@@Base+0x110>
   1eae0:	ldr	r3, [fp, #200]	; 0xc8
   1eae4:	sub	r2, r7, r0
   1eae8:	ldr	r1, [r5]
   1eaec:	ldrb	ip, [sl, #61]	; 0x3d
   1eaf0:	cmp	r3, #0
   1eaf4:	add	r1, r1, r0
   1eaf8:	bne	1eb30 <myhtml_parser_token_data_to_string@@Base+0x1c8>
   1eafc:	mov	r3, ip
   1eb00:	mov	r0, r8
   1eb04:	bl	1016c <myhtml_string_append_with_preprocessing@plt>
   1eb08:	b	1ea78 <myhtml_parser_token_data_to_string@@Base+0x110>
   1eb0c:	ldr	ip, [sl, #4]
   1eb10:	mov	r2, r1
   1eb14:	mov	r3, r7
   1eb18:	add	r1, sl, #8
   1eb1c:	str	ip, [sp]
   1eb20:	str	r0, [sp, #4]
   1eb24:	mov	r0, r8
   1eb28:	bl	10da8 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1eb2c:	b	1ea78 <myhtml_parser_token_data_to_string@@Base+0x110>
   1eb30:	ldr	lr, [sl, #4]
   1eb34:	mov	r3, r2
   1eb38:	mov	r0, r8
   1eb3c:	mov	r2, r1
   1eb40:	add	r1, sl, #8
   1eb44:	str	lr, [sp]
   1eb48:	str	ip, [sp, #4]
   1eb4c:	bl	10da8 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1eb50:	b	1ea78 <myhtml_parser_token_data_to_string@@Base+0x110>

0001eb54 <myhtml_parser_token_data_to_string_charef@@Base>:
   1eb54:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1eb58:	mov	r5, r3
   1eb5c:	ldr	r0, [r0, #80]	; 0x50
   1eb60:	strd	r6, [sp, #8]
   1eb64:	mov	r7, r1
   1eb68:	mov	r1, r3
   1eb6c:	str	r8, [sp, #16]
   1eb70:	mov	r8, r2
   1eb74:	str	lr, [sp, #20]
   1eb78:	ldr	r6, [sp, #24]
   1eb7c:	bl	100a0 <mycore_incoming_buffer_find_by_position@plt>
   1eb80:	ldr	r3, [r0, #8]
   1eb84:	mov	r4, r0
   1eb88:	ldr	r2, [r0, #12]
   1eb8c:	sub	r2, r5, r2
   1eb90:	add	r1, r2, r6
   1eb94:	cmp	r1, r3
   1eb98:	bhi	1ebac <myhtml_parser_token_data_to_string_charef@@Base+0x58>
   1eb9c:	b	1ec18 <myhtml_parser_token_data_to_string_charef@@Base+0xc4>
   1eba0:	ldr	r3, [r4, #8]
   1eba4:	cmp	r3, r6
   1eba8:	bcs	1ec00 <myhtml_parser_token_data_to_string_charef@@Base+0xac>
   1ebac:	ldr	ip, [r4]
   1ebb0:	sub	lr, r2, r3
   1ebb4:	mov	r1, r7
   1ebb8:	sub	r3, r3, r2
   1ebbc:	mov	r0, r8
   1ebc0:	add	r6, r6, lr
   1ebc4:	add	r2, ip, r2
   1ebc8:	bl	106e8 <myhtml_data_process@plt>
   1ebcc:	ldr	r4, [r4, #20]
   1ebd0:	mov	r2, #0
   1ebd4:	cmp	r4, r2
   1ebd8:	bne	1eba0 <myhtml_parser_token_data_to_string_charef@@Base+0x4c>
   1ebdc:	mov	r0, r8
   1ebe0:	mov	r1, r7
   1ebe4:	bl	108bc <myhtml_data_process_end@plt>
   1ebe8:	ldr	r0, [r7, #8]
   1ebec:	ldrd	r4, [sp]
   1ebf0:	ldrd	r6, [sp, #8]
   1ebf4:	ldr	r8, [sp, #16]
   1ebf8:	add	sp, sp, #20
   1ebfc:	pop	{pc}		; (ldr pc, [sp], #4)
   1ec00:	mov	r3, r6
   1ec04:	mov	r1, r7
   1ec08:	ldr	r2, [r4]
   1ec0c:	mov	r0, r8
   1ec10:	bl	106e8 <myhtml_data_process@plt>
   1ec14:	b	1ebdc <myhtml_parser_token_data_to_string_charef@@Base+0x88>
   1ec18:	ldr	ip, [r4]
   1ec1c:	mov	r3, r6
   1ec20:	mov	r1, r7
   1ec24:	mov	r0, r8
   1ec28:	add	r2, ip, r2
   1ec2c:	bl	106e8 <myhtml_data_process@plt>
   1ec30:	mov	r0, r8
   1ec34:	mov	r1, r7
   1ec38:	bl	108bc <myhtml_data_process_end@plt>
   1ec3c:	ldr	r0, [r7, #8]
   1ec40:	b	1ebec <myhtml_parser_token_data_to_string_charef@@Base+0x98>

0001ec44 <myhtml_parser_worker@@Base>:
   1ec44:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1ec48:	ldr	r5, [r1]
   1ec4c:	ldr	r2, [r5, #184]	; 0xb8
   1ec50:	ldr	r3, [r5, #220]	; 0xdc
   1ec54:	strd	r6, [sp, #8]
   1ec58:	strd	r8, [sp, #16]
   1ec5c:	tst	r2, #3
   1ec60:	str	sl, [sp, #24]
   1ec64:	str	lr, [sp, #28]
   1ec68:	sub	sp, sp, #72	; 0x48
   1ec6c:	ldr	r8, [r1, #4]
   1ec70:	beq	1ec80 <myhtml_parser_worker@@Base+0x3c>
   1ec74:	ldr	r2, [r5, #184]	; 0xb8
   1ec78:	tst	r2, #2
   1ec7c:	bne	1eea0 <myhtml_parser_worker@@Base+0x25c>
   1ec80:	ldr	r2, [r5]
   1ec84:	ldr	r1, [r5, #144]	; 0x90
   1ec88:	ldr	r2, [r2, #4]
   1ec8c:	cmp	r2, #0
   1ec90:	ldrne	r2, [r2, #12]
   1ec94:	addne	r0, r0, r2
   1ec98:	cmp	r3, #0
   1ec9c:	ldr	r9, [r1, r0, lsl #2]
   1eca0:	beq	1ecb8 <myhtml_parser_worker@@Base+0x74>
   1eca4:	mov	r1, r8
   1eca8:	mov	r0, r5
   1ecac:	ldr	r2, [r5, #228]	; 0xe4
   1ecb0:	blx	r3
   1ecb4:	str	r0, [r5, #228]	; 0xe4
   1ecb8:	mov	r4, r8
   1ecbc:	ldr	r3, [r4], #4
   1ecc0:	sub	r3, r3, #1
   1ecc4:	cmp	r3, #1
   1ecc8:	bls	1ee18 <myhtml_parser_worker@@Base+0x1d4>
   1eccc:	ldr	r3, [r8, #40]	; 0x28
   1ecd0:	mov	r0, r4
   1ecd4:	cmp	r3, #0
   1ecd8:	beq	1ee94 <myhtml_parser_worker@@Base+0x250>
   1ecdc:	bl	11024 <mycore_string_clean_all@plt>
   1ece0:	ldr	r4, [r8, #40]	; 0x28
   1ece4:	cmp	r4, #0
   1ece8:	beq	1edac <myhtml_parser_worker@@Base+0x168>
   1ecec:	add	r6, sp, #8
   1ecf0:	mov	sl, #1
   1ecf4:	ldr	r3, [r4, #52]	; 0x34
   1ecf8:	mov	r0, r6
   1ecfc:	add	r7, r4, #8
   1ed00:	cmp	r3, #0
   1ed04:	beq	1ee0c <myhtml_parser_worker@@Base+0x1c8>
   1ed08:	bl	10484 <myhtml_data_process_entry_clean@plt>
   1ed0c:	ldr	r3, [r4, #52]	; 0x34
   1ed10:	mov	r2, r7
   1ed14:	mov	r1, r9
   1ed18:	ldr	r0, [r5, #4]
   1ed1c:	ldr	ip, [r5, #200]	; 0xc8
   1ed20:	add	r3, r3, #1
   1ed24:	str	ip, [sp, #12]
   1ed28:	bl	105a4 <mycore_string_init@plt>
   1ed2c:	mov	r1, r7
   1ed30:	mov	r2, r6
   1ed34:	ldr	r3, [r4, #48]	; 0x30
   1ed38:	mov	r0, r5
   1ed3c:	ldr	ip, [r4, #52]	; 0x34
   1ed40:	str	ip, [sp]
   1ed44:	bl	10fa0 <myhtml_parser_token_data_to_string_lowercase@plt>
   1ed48:	ldr	r3, [r4, #60]	; 0x3c
   1ed4c:	mov	r0, r6
   1ed50:	add	r7, r4, #28
   1ed54:	cmp	r3, #0
   1ed58:	beq	1edf4 <myhtml_parser_worker@@Base+0x1b0>
   1ed5c:	bl	10484 <myhtml_data_process_entry_clean@plt>
   1ed60:	ldr	r3, [r4, #60]	; 0x3c
   1ed64:	mov	r2, r7
   1ed68:	mov	r1, r9
   1ed6c:	ldr	r0, [r5, #4]
   1ed70:	ldr	ip, [r5, #200]	; 0xc8
   1ed74:	add	r3, r3, #1
   1ed78:	str	ip, [sp, #12]
   1ed7c:	strb	sl, [sp, #68]	; 0x44
   1ed80:	bl	105a4 <mycore_string_init@plt>
   1ed84:	mov	r1, r7
   1ed88:	mov	r2, r6
   1ed8c:	ldr	r3, [r4, #56]	; 0x38
   1ed90:	mov	r0, r5
   1ed94:	ldr	ip, [r4, #60]	; 0x3c
   1ed98:	str	ip, [sp]
   1ed9c:	bl	10394 <myhtml_parser_token_data_to_string_charef@plt>
   1eda0:	ldr	r4, [r4]
   1eda4:	cmp	r4, #0
   1eda8:	bne	1ecf4 <myhtml_parser_worker@@Base+0xb0>
   1edac:	ldr	r3, [r8, #48]	; 0x30
   1edb0:	ldr	r4, [r5, #224]	; 0xe0
   1edb4:	orr	r3, r3, #4
   1edb8:	cmp	r4, #0
   1edbc:	str	r3, [r8, #48]	; 0x30
   1edc0:	beq	1edd8 <myhtml_parser_worker@@Base+0x194>
   1edc4:	mov	r1, r8
   1edc8:	mov	r0, r5
   1edcc:	ldr	r2, [r5, #232]	; 0xe8
   1edd0:	blx	r4
   1edd4:	str	r0, [r5, #232]	; 0xe8
   1edd8:	add	sp, sp, #72	; 0x48
   1eddc:	ldrd	r4, [sp]
   1ede0:	ldrd	r6, [sp, #8]
   1ede4:	ldrd	r8, [sp, #16]
   1ede8:	ldr	sl, [sp, #24]
   1edec:	add	sp, sp, #28
   1edf0:	pop	{pc}		; (ldr pc, [sp], #4)
   1edf4:	mov	r0, r7
   1edf8:	bl	11024 <mycore_string_clean_all@plt>
   1edfc:	ldr	r4, [r4]
   1ee00:	cmp	r4, #0
   1ee04:	bne	1ecf4 <myhtml_parser_worker@@Base+0xb0>
   1ee08:	b	1edac <myhtml_parser_worker@@Base+0x168>
   1ee0c:	mov	r0, r7
   1ee10:	bl	11024 <mycore_string_clean_all@plt>
   1ee14:	b	1ed48 <myhtml_parser_worker@@Base+0x104>
   1ee18:	ldr	r3, [r8, #28]
   1ee1c:	mov	r2, r4
   1ee20:	mov	r1, r9
   1ee24:	add	r6, sp, #8
   1ee28:	ldr	r0, [r5, #4]
   1ee2c:	add	r3, r3, #1
   1ee30:	bl	105a4 <mycore_string_init@plt>
   1ee34:	mov	r3, #0
   1ee38:	mov	r0, r6
   1ee3c:	str	r3, [r8, #40]	; 0x28
   1ee40:	str	r3, [r8, #44]	; 0x2c
   1ee44:	bl	10484 <myhtml_data_process_entry_clean@plt>
   1ee48:	ldr	r2, [r8, #48]	; 0x30
   1ee4c:	ldr	r3, [r5, #200]	; 0xc8
   1ee50:	tst	r2, #512	; 0x200
   1ee54:	str	r3, [sp, #12]
   1ee58:	bne	1eec0 <myhtml_parser_worker@@Base+0x27c>
   1ee5c:	ldr	r3, [r8, #24]
   1ee60:	ldr	r2, [r8, #48]	; 0x30
   1ee64:	ldr	r1, [r8, #28]
   1ee68:	tst	r2, #16
   1ee6c:	bne	1ee7c <myhtml_parser_worker@@Base+0x238>
   1ee70:	ldr	r2, [r8, #48]	; 0x30
   1ee74:	tst	r2, #256	; 0x100
   1ee78:	beq	1eee8 <myhtml_parser_worker@@Base+0x2a4>
   1ee7c:	mov	r2, r6
   1ee80:	mov	r0, r5
   1ee84:	str	r1, [sp]
   1ee88:	mov	r1, r4
   1ee8c:	bl	10394 <myhtml_parser_token_data_to_string_charef@plt>
   1ee90:	b	1edac <myhtml_parser_worker@@Base+0x168>
   1ee94:	str	r3, [r8, #44]	; 0x2c
   1ee98:	bl	11024 <mycore_string_clean_all@plt>
   1ee9c:	b	1edac <myhtml_parser_worker@@Base+0x168>
   1eea0:	cmp	r3, #0
   1eea4:	beq	1edac <myhtml_parser_worker@@Base+0x168>
   1eea8:	mov	r1, r8
   1eeac:	mov	r0, r5
   1eeb0:	ldr	r2, [r5, #228]	; 0xe4
   1eeb4:	blx	r3
   1eeb8:	str	r0, [r5, #228]	; 0xe4
   1eebc:	b	1edac <myhtml_parser_worker@@Base+0x168>
   1eec0:	mov	lr, #1
   1eec4:	mov	r2, r6
   1eec8:	ldr	r3, [r8, #24]
   1eecc:	mov	r1, r4
   1eed0:	mov	r0, r5
   1eed4:	ldr	ip, [r8, #28]
   1eed8:	str	ip, [sp]
   1eedc:	strb	lr, [sp, #69]	; 0x45
   1eee0:	bl	10394 <myhtml_parser_token_data_to_string_charef@plt>
   1eee4:	b	1edac <myhtml_parser_worker@@Base+0x168>
   1eee8:	mov	r2, r6
   1eeec:	mov	r0, r5
   1eef0:	str	r1, [sp]
   1eef4:	mov	r1, r4
   1eef8:	bl	10a60 <myhtml_parser_token_data_to_string@plt>
   1eefc:	b	1edac <myhtml_parser_worker@@Base+0x168>

0001ef00 <myhtml_parser_worker_stream@@Base>:
   1ef00:	strd	r4, [sp, #-16]!
   1ef04:	mov	r4, r0
   1ef08:	mov	r5, r1
   1ef0c:	str	r6, [sp, #8]
   1ef10:	str	lr, [sp, #12]
   1ef14:	bl	fd1c <myhtml_parser_worker@plt>
   1ef18:	mov	r1, r5
   1ef1c:	mov	r0, r4
   1ef20:	ldrd	r4, [sp]
   1ef24:	ldr	r6, [sp, #8]
   1ef28:	ldr	lr, [sp, #12]
   1ef2c:	add	sp, sp, #16
   1ef30:	b	10f88 <myhtml_parser_stream@plt>

0001ef34 <myhtml_insertion_mode_text@@Base>:
   1ef34:	ldr	r3, [r1, #48]	; 0x30
   1ef38:	strd	r4, [sp, #-16]!
   1ef3c:	mov	r5, r0
   1ef40:	str	r6, [sp, #8]
   1ef44:	str	lr, [sp, #12]
   1ef48:	ands	r4, r3, #1
   1ef4c:	beq	1ef70 <myhtml_insertion_mode_text@@Base+0x3c>
   1ef50:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   1ef54:	ldr	r3, [r5, #172]	; 0xac
   1ef58:	mov	r0, #0
   1ef5c:	ldr	r6, [sp, #8]
   1ef60:	str	r3, [r5, #168]	; 0xa8
   1ef64:	ldrd	r4, [sp]
   1ef68:	add	sp, sp, #12
   1ef6c:	pop	{pc}		; (ldr pc, [sp], #4)
   1ef70:	ldr	r3, [r1]
   1ef74:	cmp	r3, #251	; 0xfb
   1ef78:	beq	1ef94 <myhtml_insertion_mode_text@@Base+0x60>
   1ef7c:	bl	ff2c <myhtml_tree_node_insert_text@plt>
   1ef80:	mov	r0, r4
   1ef84:	ldrd	r4, [sp]
   1ef88:	ldr	r6, [sp, #8]
   1ef8c:	add	sp, sp, #12
   1ef90:	pop	{pc}		; (ldr pc, [sp], #4)
   1ef94:	bl	105bc <myhtml_tree_current_node@plt>
   1ef98:	ldr	r3, [r0, #4]
   1ef9c:	cmp	r3, #112	; 0x70
   1efa0:	bne	1efb0 <myhtml_insertion_mode_text@@Base+0x7c>
   1efa4:	ldr	r3, [r0]
   1efa8:	orr	r3, r3, #8
   1efac:	str	r3, [r0]
   1efb0:	mov	r0, r5
   1efb4:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   1efb8:	ldr	r3, [r5, #172]	; 0xac
   1efbc:	mov	r0, #1
   1efc0:	ldr	r6, [sp, #8]
   1efc4:	str	r3, [r5, #168]	; 0xa8
   1efc8:	ldrd	r4, [sp]
   1efcc:	add	sp, sp, #12
   1efd0:	pop	{pc}		; (ldr pc, [sp], #4)

0001efd4 <myhtml_insertion_fix_emit_for_text_begin_ws@@Base>:
   1efd4:	str	r4, [sp, #-8]!
   1efd8:	mov	r4, r1
   1efdc:	str	lr, [sp, #4]
   1efe0:	bl	10610 <myhtml_token_node_wait_for_done@plt>
   1efe4:	add	r0, r4, #4
   1efe8:	ldr	r4, [sp]
   1efec:	ldr	lr, [sp, #4]
   1eff0:	add	sp, sp, #8
   1eff4:	b	10448 <mycore_string_crop_whitespace_from_begin@plt>

0001eff8 <myhtml_insertion_mode_initial@@Base>:
   1eff8:	strd	r4, [sp, #-16]!
   1effc:	mov	r5, r0
   1f000:	ldr	r4, [r1]
   1f004:	str	r6, [sp, #8]
   1f008:	str	lr, [sp, #12]
   1f00c:	cmp	r4, #2
   1f010:	beq	1f048 <myhtml_insertion_mode_initial@@Base+0x50>
   1f014:	cmp	r4, #3
   1f018:	mov	r6, r1
   1f01c:	beq	1f098 <myhtml_insertion_mode_initial@@Base+0xa0>
   1f020:	cmp	r4, #1
   1f024:	beq	1f064 <myhtml_insertion_mode_initial@@Base+0x6c>
   1f028:	mov	r3, #1
   1f02c:	mov	r0, r3
   1f030:	str	r3, [r5, #168]	; 0xa8
   1f034:	str	r3, [r5, #176]	; 0xb0
   1f038:	ldrd	r4, [sp]
   1f03c:	ldr	r6, [sp, #8]
   1f040:	add	sp, sp, #12
   1f044:	pop	{pc}		; (ldr pc, [sp], #4)
   1f048:	ldr	r2, [r0, #84]	; 0x54
   1f04c:	bl	101fc <myhtml_tree_node_insert_comment@plt>
   1f050:	ldrd	r4, [sp]
   1f054:	mov	r0, #0
   1f058:	ldr	r6, [sp, #8]
   1f05c:	add	sp, sp, #12
   1f060:	pop	{pc}		; (ldr pc, [sp], #4)
   1f064:	ldr	r3, [r1, #48]	; 0x30
   1f068:	tst	r3, #8
   1f06c:	movne	r0, #0
   1f070:	bne	1f038 <myhtml_insertion_mode_initial@@Base+0x40>
   1f074:	ldr	r0, [r5, #8]
   1f078:	bl	100b8 <myhtml_insertion_fix_emit_for_text_begin_ws@plt>
   1f07c:	mov	r0, r4
   1f080:	str	r4, [r5, #168]	; 0xa8
   1f084:	str	r4, [r5, #176]	; 0xb0
   1f088:	ldrd	r4, [sp]
   1f08c:	ldr	r6, [sp, #8]
   1f090:	add	sp, sp, #12
   1f094:	pop	{pc}		; (ldr pc, [sp], #4)
   1f098:	ldr	r0, [r0, #8]
   1f09c:	bl	10610 <myhtml_token_node_wait_for_done@plt>
   1f0a0:	add	r2, r5, #108	; 0x6c
   1f0a4:	mov	r1, r6
   1f0a8:	ldr	r0, [r5, #8]
   1f0ac:	bl	fbcc <myhtml_token_release_and_check_doctype_attributes@plt>
   1f0b0:	ldr	r3, [r5, #184]	; 0xb8
   1f0b4:	tst	r3, #8
   1f0b8:	beq	1f0fc <myhtml_insertion_mode_initial@@Base+0x104>
   1f0bc:	ldrb	r3, [r5, #108]	; 0x6c
   1f0c0:	cmp	r3, #0
   1f0c4:	bne	1f0e0 <myhtml_insertion_mode_initial@@Base+0xe8>
   1f0c8:	ldr	r3, [r5, #116]	; 0x74
   1f0cc:	cmp	r3, #0
   1f0d0:	beq	1f10c <myhtml_insertion_mode_initial@@Base+0x114>
   1f0d4:	ldr	r3, [r5, #120]	; 0x78
   1f0d8:	cmp	r3, #0
   1f0dc:	beq	1f10c <myhtml_insertion_mode_initial@@Base+0x114>
   1f0e0:	mov	r3, #1
   1f0e4:	ldr	r6, [sp, #8]
   1f0e8:	mov	r0, #0
   1f0ec:	str	r3, [r5, #168]	; 0xa8
   1f0f0:	ldrd	r4, [sp]
   1f0f4:	add	sp, sp, #12
   1f0f8:	pop	{pc}		; (ldr pc, [sp], #4)
   1f0fc:	mov	r1, r6
   1f100:	mov	r0, r5
   1f104:	bl	10dc0 <myhtml_tree_node_insert_doctype@plt>
   1f108:	b	1f0bc <myhtml_insertion_mode_initial@@Base+0xc4>
   1f10c:	mov	r3, #1
   1f110:	str	r3, [r5, #176]	; 0xb0
   1f114:	b	1f0e0 <myhtml_insertion_mode_initial@@Base+0xe8>

0001f118 <myhtml_insertion_mode_before_html@@Base>:
   1f118:	ldr	r3, [r1, #48]	; 0x30
   1f11c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1f120:	ldr	r5, [r1]
   1f124:	strd	r6, [sp, #8]
   1f128:	mov	r6, r0
   1f12c:	str	r8, [sp, #16]
   1f130:	ands	r4, r3, #1
   1f134:	str	lr, [sp, #20]
   1f138:	beq	1f1ac <myhtml_insertion_mode_before_html@@Base+0x94>
   1f13c:	cmp	r5, #61	; 0x3d
   1f140:	beq	1f18c <myhtml_insertion_mode_before_html@@Base+0x74>
   1f144:	bhi	1f1e0 <myhtml_insertion_mode_before_html@@Base+0xc8>
   1f148:	sub	r0, r5, #23
   1f14c:	cmp	r0, #1
   1f150:	bls	1f18c <myhtml_insertion_mode_before_html@@Base+0x74>
   1f154:	mov	r0, #0
   1f158:	ldrd	r4, [sp]
   1f15c:	ldrd	r6, [sp, #8]
   1f160:	ldr	r8, [sp, #16]
   1f164:	add	sp, sp, #20
   1f168:	pop	{pc}		; (ldr pc, [sp], #4)
   1f16c:	cmp	r5, #1
   1f170:	bne	1f18c <myhtml_insertion_mode_before_html@@Base+0x74>
   1f174:	ldr	r3, [r1, #48]	; 0x30
   1f178:	ands	r7, r3, #8
   1f17c:	movne	r0, r4
   1f180:	bne	1f158 <myhtml_insertion_mode_before_html@@Base+0x40>
   1f184:	ldr	r0, [r6, #8]
   1f188:	bl	100b8 <myhtml_insertion_fix_emit_for_text_begin_ws@plt>
   1f18c:	mov	r2, #1
   1f190:	mov	r1, #0
   1f194:	mov	r0, r6
   1f198:	bl	fba8 <myhtml_tree_node_insert_root@plt>
   1f19c:	mov	r3, #2
   1f1a0:	mov	r0, #1
   1f1a4:	str	r3, [r6, #168]	; 0xa8
   1f1a8:	b	1f158 <myhtml_insertion_mode_before_html@@Base+0x40>
   1f1ac:	cmp	r5, #2
   1f1b0:	beq	1f1ec <myhtml_insertion_mode_before_html@@Base+0xd4>
   1f1b4:	bls	1f16c <myhtml_insertion_mode_before_html@@Base+0x54>
   1f1b8:	cmp	r5, #3
   1f1bc:	beq	1f154 <myhtml_insertion_mode_before_html@@Base+0x3c>
   1f1c0:	cmp	r5, #65	; 0x41
   1f1c4:	bne	1f18c <myhtml_insertion_mode_before_html@@Base+0x74>
   1f1c8:	mov	r2, #1
   1f1cc:	bl	fba8 <myhtml_tree_node_insert_root@plt>
   1f1d0:	mov	r3, #2
   1f1d4:	mov	r0, r4
   1f1d8:	str	r3, [r6, #168]	; 0xa8
   1f1dc:	b	1f158 <myhtml_insertion_mode_before_html@@Base+0x40>
   1f1e0:	cmp	r5, #65	; 0x41
   1f1e4:	bne	1f154 <myhtml_insertion_mode_before_html@@Base+0x3c>
   1f1e8:	b	1f18c <myhtml_insertion_mode_before_html@@Base+0x74>
   1f1ec:	ldr	r2, [r0, #84]	; 0x54
   1f1f0:	bl	101fc <myhtml_tree_node_insert_comment@plt>
   1f1f4:	mov	r0, r4
   1f1f8:	b	1f158 <myhtml_insertion_mode_before_html@@Base+0x40>

0001f1fc <myhtml_insertion_fix_split_for_text_begin_ws@@Base>:
   1f1fc:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1f200:	mov	r4, r1
   1f204:	mov	r5, r0
   1f208:	ldr	r0, [r0, #8]
   1f20c:	strd	r6, [sp, #8]
   1f210:	str	r8, [sp, #16]
   1f214:	str	lr, [sp, #20]
   1f218:	bl	10610 <myhtml_token_node_wait_for_done@plt>
   1f21c:	add	r0, r4, #4
   1f220:	bl	10d78 <mycore_string_whitespace_from_begin@plt>
   1f224:	subs	r7, r0, #0
   1f228:	moveq	r6, r7
   1f22c:	beq	1f294 <myhtml_insertion_fix_split_for_text_begin_ws@@Base+0x98>
   1f230:	ldr	r0, [r5, #8]
   1f234:	ldr	r1, [r5, #40]	; 0x28
   1f238:	bl	109a0 <myhtml_token_node_create@plt>
   1f23c:	subs	r6, r0, #0
   1f240:	beq	1f294 <myhtml_insertion_fix_split_for_text_begin_ws@@Base+0x98>
   1f244:	add	r8, r6, #4
   1f248:	add	r3, r7, #2
   1f24c:	ldr	r0, [r5, #4]
   1f250:	mov	r2, r8
   1f254:	ldr	r1, [r5, #52]	; 0x34
   1f258:	bl	105a4 <mycore_string_init@plt>
   1f25c:	mov	r2, r7
   1f260:	mov	r0, r8
   1f264:	ldr	r1, [r4, #4]
   1f268:	bl	10868 <mycore_string_append@plt>
   1f26c:	ldr	r3, [r6, #48]	; 0x30
   1f270:	mov	r1, r7
   1f274:	ldr	r0, [r4, #4]
   1f278:	orr	r3, r3, #4
   1f27c:	str	r3, [r6, #48]	; 0x30
   1f280:	bl	10bf8 <mchar_async_crop_first_chars_without_cache@plt>
   1f284:	ldr	r3, [r4, #12]
   1f288:	str	r0, [r4, #4]
   1f28c:	sub	r7, r3, r7
   1f290:	str	r7, [r4, #12]
   1f294:	mov	r0, r6
   1f298:	ldrd	r4, [sp]
   1f29c:	ldrd	r6, [sp, #8]
   1f2a0:	ldr	r8, [sp, #16]
   1f2a4:	add	sp, sp, #20
   1f2a8:	pop	{pc}		; (ldr pc, [sp], #4)

0001f2ac <myhtml_insertion_fix_for_null_char_drop_all@@Base>:
   1f2ac:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1f2b0:	ldr	r0, [r0, #8]
   1f2b4:	strd	r6, [sp, #8]
   1f2b8:	mov	r6, r1
   1f2bc:	str	r8, [sp, #16]
   1f2c0:	str	lr, [sp, #20]
   1f2c4:	bl	10610 <myhtml_token_node_wait_for_done@plt>
   1f2c8:	ldr	r5, [r6, #12]
   1f2cc:	cmp	r5, #0
   1f2d0:	beq	1f304 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x58>
   1f2d4:	mov	lr, #0
   1f2d8:	mov	r7, lr
   1f2dc:	ldr	r8, [r6, #4]
   1f2e0:	ldrb	r3, [r8, lr]
   1f2e4:	cmp	r3, #0
   1f2e8:	addeq	ip, lr, #1
   1f2ec:	addne	lr, lr, #1
   1f2f0:	moveq	r2, lr
   1f2f4:	addeq	ip, r8, ip
   1f2f8:	beq	1f328 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x7c>
   1f2fc:	cmp	r5, lr
   1f300:	bhi	1f2dc <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x30>
   1f304:	ldrd	r4, [sp]
   1f308:	ldrd	r6, [sp, #8]
   1f30c:	ldr	r8, [sp, #16]
   1f310:	add	sp, sp, #20
   1f314:	pop	{pc}		; (ldr pc, [sp], #4)
   1f318:	ldrb	r0, [ip], #1
   1f31c:	cmp	r0, #0
   1f320:	bne	1f354 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0xa8>
   1f324:	mov	r2, r3
   1f328:	add	r3, r2, #1
   1f32c:	mov	r1, ip
   1f330:	cmp	r5, r3
   1f334:	bhi	1f318 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x6c>
   1f338:	ldr	r0, [r6, #12]
   1f33c:	mov	r4, r3
   1f340:	mov	r2, #0
   1f344:	add	r0, lr, r0
   1f348:	sub	r3, r0, r3
   1f34c:	str	r3, [r6, #12]
   1f350:	b	1f398 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0xec>
   1f354:	ldr	r0, [r6, #12]
   1f358:	add	r0, lr, r0
   1f35c:	sub	r0, r0, r3
   1f360:	str	r0, [r6, #12]
   1f364:	ldrb	r0, [r1]
   1f368:	cmp	r0, #0
   1f36c:	beq	1f3b8 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x10c>
   1f370:	add	r0, r8, r3
   1f374:	b	1f388 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0xdc>
   1f378:	ldrb	ip, [r0, #1]!
   1f37c:	cmp	ip, #0
   1f380:	beq	1f394 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0xe8>
   1f384:	mov	r3, r4
   1f388:	add	r4, r3, #1
   1f38c:	cmp	r5, r4
   1f390:	bhi	1f378 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0xcc>
   1f394:	sub	r2, r3, r2
   1f398:	sub	r0, lr, r7
   1f39c:	add	r7, r7, #1
   1f3a0:	add	r0, r8, r0
   1f3a4:	bl	fe18 <memmove@plt>
   1f3a8:	mov	lr, r4
   1f3ac:	cmp	r5, lr
   1f3b0:	bhi	1f2dc <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x30>
   1f3b4:	b	1f304 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x58>
   1f3b8:	mov	r4, r3
   1f3bc:	mov	r2, r0
   1f3c0:	b	1f398 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0xec>

0001f3c4 <myhtml_insertion_mode_in_body_other_end_tag@@Base>:
   1f3c4:	ldr	r3, [r0, #128]	; 0x80
   1f3c8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1f3cc:	ldr	r4, [r3, #4]
   1f3d0:	strd	r6, [sp, #8]
   1f3d4:	str	r8, [sp, #16]
   1f3d8:	str	lr, [sp, #20]
   1f3dc:	cmp	r4, #0
   1f3e0:	beq	1f444 <myhtml_insertion_mode_in_body_other_end_tag@@Base+0x80>
   1f3e4:	mov	r6, r0
   1f3e8:	mov	r7, r1
   1f3ec:	b	1f3fc <myhtml_insertion_mode_in_body_other_end_tag@@Base+0x38>
   1f3f0:	cmp	r4, #0
   1f3f4:	beq	1f444 <myhtml_insertion_mode_in_body_other_end_tag@@Base+0x80>
   1f3f8:	ldr	r3, [r6, #128]	; 0x80
   1f3fc:	sub	r4, r4, #1
   1f400:	ldr	r3, [r3]
   1f404:	ldr	r2, [r7]
   1f408:	ldr	r5, [r3, r4, lsl #2]
   1f40c:	ldr	r3, [r5, #4]
   1f410:	cmp	r3, r2
   1f414:	mov	r1, r3
   1f418:	bne	1f428 <myhtml_insertion_mode_in_body_other_end_tag@@Base+0x64>
   1f41c:	ldr	r2, [r5, #8]
   1f420:	cmp	r2, #1
   1f424:	beq	1f45c <myhtml_insertion_mode_in_body_other_end_tag@@Base+0x98>
   1f428:	ldr	r0, [r6, #28]
   1f42c:	bl	109b8 <myhtml_tag_get_by_id@plt>
   1f430:	ldr	r3, [r5, #8]
   1f434:	add	r3, r3, #4
   1f438:	ldr	r3, [r0, r3, lsl #2]
   1f43c:	tst	r3, #2
   1f440:	beq	1f3f0 <myhtml_insertion_mode_in_body_other_end_tag@@Base+0x2c>
   1f444:	ldrd	r4, [sp]
   1f448:	mov	r0, #0
   1f44c:	ldrd	r6, [sp, #8]
   1f450:	ldr	r8, [sp, #16]
   1f454:	add	sp, sp, #20
   1f458:	pop	{pc}		; (ldr pc, [sp], #4)
   1f45c:	mov	r0, r6
   1f460:	bl	10670 <myhtml_tree_generate_implied_end_tags@plt>
   1f464:	mov	r0, r6
   1f468:	bl	105bc <myhtml_tree_current_node@plt>
   1f46c:	mov	r1, r5
   1f470:	mov	r0, r6
   1f474:	mov	r2, #0
   1f478:	bl	100dc <myhtml_tree_open_elements_pop_until_by_node@plt>
   1f47c:	b	1f444 <myhtml_insertion_mode_in_body_other_end_tag@@Base+0x80>

0001f480 <myhtml_insertion_mode_in_foreign_content_end_other@@Base>:
   1f480:	ldr	r3, [r0, #128]	; 0x80
   1f484:	strd	r4, [sp, #-16]!
   1f488:	ldr	r1, [r3, #4]
   1f48c:	str	r6, [sp, #8]
   1f490:	mov	r6, r0
   1f494:	str	lr, [sp, #12]
   1f498:	cmp	r1, #0
   1f49c:	beq	1f544 <myhtml_insertion_mode_in_foreign_content_end_other@@Base+0xc4>
   1f4a0:	ldr	r0, [r3, #4]
   1f4a4:	ldr	r3, [r3]
   1f4a8:	subs	ip, r0, #1
   1f4ac:	beq	1f544 <myhtml_insertion_mode_in_foreign_content_end_other@@Base+0xc4>
   1f4b0:	ldr	r1, [r3, ip, lsl #2]
   1f4b4:	lsl	ip, ip, #2
   1f4b8:	ldr	r5, [r2]
   1f4bc:	ldr	lr, [r1, #4]
   1f4c0:	cmp	r5, lr
   1f4c4:	beq	1f570 <myhtml_insertion_mode_in_foreign_content_end_other@@Base+0xf0>
   1f4c8:	add	ip, r3, ip
   1f4cc:	sub	r1, r0, #2
   1f4d0:	ldr	ip, [ip, #-4]
   1f4d4:	ldr	ip, [ip, #8]
   1f4d8:	cmp	ip, #1
   1f4dc:	beq	1f544 <myhtml_insertion_mode_in_foreign_content_end_other@@Base+0xc4>
   1f4e0:	cmp	r1, #0
   1f4e4:	beq	1f544 <myhtml_insertion_mode_in_foreign_content_end_other@@Base+0xc4>
   1f4e8:	ldr	r1, [r3, r1, lsl #2]
   1f4ec:	ldr	ip, [r1, #4]
   1f4f0:	cmp	r5, ip
   1f4f4:	beq	1f570 <myhtml_insertion_mode_in_foreign_content_end_other@@Base+0xf0>
   1f4f8:	sub	ip, r0, #3
   1f4fc:	ldr	r1, [r3, ip, lsl #2]
   1f500:	ldr	r1, [r1, #8]
   1f504:	cmp	r1, #1
   1f508:	beq	1f544 <myhtml_insertion_mode_in_foreign_content_end_other@@Base+0xc4>
   1f50c:	sub	r0, r0, #-1073741821	; 0xc0000003
   1f510:	add	r3, r3, r0, lsl #2
   1f514:	b	1f538 <myhtml_insertion_mode_in_foreign_content_end_other@@Base+0xb8>
   1f518:	ldr	r1, [r3]
   1f51c:	ldr	r4, [r1, #4]
   1f520:	cmp	r5, r4
   1f524:	beq	1f570 <myhtml_insertion_mode_in_foreign_content_end_other@@Base+0xf0>
   1f528:	ldr	lr, [r3, #-4]!
   1f52c:	ldr	lr, [lr, #8]
   1f530:	cmp	lr, #1
   1f534:	beq	1f544 <myhtml_insertion_mode_in_foreign_content_end_other@@Base+0xc4>
   1f538:	cmp	ip, #0
   1f53c:	sub	ip, ip, #1
   1f540:	bne	1f518 <myhtml_insertion_mode_in_foreign_content_end_other@@Base+0x98>
   1f544:	ldr	r3, [r6]
   1f548:	mov	r1, r2
   1f54c:	mov	r0, r6
   1f550:	ldr	r2, [r6, #168]	; 0xa8
   1f554:	ldrd	r4, [sp]
   1f558:	ldr	r3, [r3, #28]
   1f55c:	ldr	r6, [sp, #8]
   1f560:	ldr	lr, [sp, #12]
   1f564:	add	sp, sp, #16
   1f568:	ldr	r3, [r3, r2, lsl #2]
   1f56c:	bx	r3
   1f570:	mov	r0, r6
   1f574:	mov	r2, #0
   1f578:	bl	100dc <myhtml_tree_open_elements_pop_until_by_node@plt>
   1f57c:	ldrd	r4, [sp]
   1f580:	mov	r0, #0
   1f584:	ldr	r6, [sp, #8]
   1f588:	add	sp, sp, #12
   1f58c:	pop	{pc}		; (ldr pc, [sp], #4)

0001f590 <myhtml_insertion_mode_in_foreign_content_start_other@@Base>:
   1f590:	strd	r4, [sp, #-16]!
   1f594:	mov	r4, r1
   1f598:	mov	r5, r0
   1f59c:	str	r6, [sp, #8]
   1f5a0:	str	lr, [sp, #12]
   1f5a4:	bl	10cdc <myhtml_tree_adjusted_current_node@plt>
   1f5a8:	mov	r6, r0
   1f5ac:	mov	r1, r4
   1f5b0:	ldr	r0, [r5, #8]
   1f5b4:	bl	10610 <myhtml_token_node_wait_for_done@plt>
   1f5b8:	ldr	r3, [r6, #8]
   1f5bc:	cmp	r3, #2
   1f5c0:	beq	1f620 <myhtml_insertion_mode_in_foreign_content_start_other@@Base+0x90>
   1f5c4:	cmp	r3, #3
   1f5c8:	beq	1f62c <myhtml_insertion_mode_in_foreign_content_start_other@@Base+0x9c>
   1f5cc:	mov	r0, r4
   1f5d0:	bl	10b74 <myhtml_token_adjust_foreign_attributes@plt>
   1f5d4:	mov	r1, r4
   1f5d8:	mov	r0, r5
   1f5dc:	bl	10d18 <myhtml_tree_node_insert_foreign_element@plt>
   1f5e0:	ldr	r2, [r4, #48]	; 0x30
   1f5e4:	ldr	r3, [r6, #8]
   1f5e8:	tst	r2, #2
   1f5ec:	str	r3, [r0, #8]
   1f5f0:	beq	1f60c <myhtml_insertion_mode_in_foreign_content_start_other@@Base+0x7c>
   1f5f4:	ldr	r2, [r4]
   1f5f8:	mov	r0, r5
   1f5fc:	cmp	r2, #112	; 0x70
   1f600:	cmpeq	r3, #3
   1f604:	beq	1f638 <myhtml_insertion_mode_in_foreign_content_start_other@@Base+0xa8>
   1f608:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   1f60c:	ldrd	r4, [sp]
   1f610:	mov	r0, #0
   1f614:	ldr	r6, [sp, #8]
   1f618:	add	sp, sp, #12
   1f61c:	pop	{pc}		; (ldr pc, [sp], #4)
   1f620:	mov	r0, r4
   1f624:	bl	ff14 <myhtml_token_adjust_mathml_attributes@plt>
   1f628:	b	1f5cc <myhtml_insertion_mode_in_foreign_content_start_other@@Base+0x3c>
   1f62c:	mov	r0, r4
   1f630:	bl	10178 <myhtml_token_adjust_svg_attributes@plt>
   1f634:	b	1f5cc <myhtml_insertion_mode_in_foreign_content_start_other@@Base+0x3c>
   1f638:	bl	105bc <myhtml_tree_current_node@plt>
   1f63c:	mov	r1, r0
   1f640:	mov	r2, r4
   1f644:	ldr	r6, [sp, #8]
   1f648:	mov	r0, r5
   1f64c:	ldrd	r4, [sp]
   1f650:	ldr	lr, [sp, #12]
   1f654:	add	sp, sp, #16
   1f658:	b	fc98 <myhtml_insertion_mode_in_foreign_content_end_other@plt>

0001f65c <myhtml_insertion_mode_in_foreign_content@@Base>:
   1f65c:	ldr	r3, [r1, #48]	; 0x30
   1f660:	strd	r4, [sp, #-16]!
   1f664:	mov	r4, r1
   1f668:	mov	r5, r0
   1f66c:	str	r6, [sp, #8]
   1f670:	str	lr, [sp, #12]
   1f674:	tst	r3, #1
   1f678:	bne	1f904 <myhtml_insertion_mode_in_foreign_content@@Base+0x2a8>
   1f67c:	ldr	r2, [r1]
   1f680:	sub	r3, r2, #1
   1f684:	cmp	r3, #139	; 0x8b
   1f688:	addls	pc, pc, r3, lsl #2
   1f68c:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f690:	b	1f9bc <myhtml_insertion_mode_in_foreign_content@@Base+0x360>
   1f694:	b	1f94c <myhtml_insertion_mode_in_foreign_content@@Base+0x2f0>
   1f698:	b	1f8c0 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1f69c:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f6a0:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f6a4:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f6a8:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f6ac:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f6b0:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f6b4:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f6b8:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f6bc:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f6c0:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f6c4:	b	1f8d4 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1f6c8:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f6cc:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f6d0:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f6d4:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f6d8:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f6dc:	b	1f8d4 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1f6e0:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f6e4:	b	1f8d4 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1f6e8:	b	1f8d4 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1f6ec:	b	1f8d4 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1f6f0:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f6f4:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f6f8:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f6fc:	b	1f8d4 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1f700:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f704:	b	1f8d4 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1f708:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f70c:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f710:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f714:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f718:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f71c:	b	1f8d4 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1f720:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f724:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f728:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f72c:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f730:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f734:	b	1f8d4 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1f738:	b	1f8d4 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1f73c:	b	1f8d4 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1f740:	b	1f8d4 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1f744:	b	1f8d4 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1f748:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f74c:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f750:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f754:	b	1f8d4 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1f758:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f75c:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f760:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f764:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f768:	b	1f8d4 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1f76c:	b	1f8d4 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1f770:	b	1f8d4 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1f774:	b	1f8d4 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1f778:	b	1f8d4 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1f77c:	b	1f8d4 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1f780:	b	1f8d4 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1f784:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f788:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f78c:	b	1f8d4 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1f790:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f794:	b	1f8d4 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1f798:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f79c:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f7a0:	b	1f8d4 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1f7a4:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f7a8:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f7ac:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f7b0:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f7b4:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f7b8:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f7bc:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f7c0:	b	1f8d4 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1f7c4:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f7c8:	b	1f8d4 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1f7cc:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f7d0:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f7d4:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f7d8:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f7dc:	b	1f8d4 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1f7e0:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f7e4:	b	1f8d4 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1f7e8:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f7ec:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f7f0:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f7f4:	b	1f8d4 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1f7f8:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f7fc:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f800:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f804:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f808:	b	1f8d4 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1f80c:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f810:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f814:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f818:	b	1f8d4 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1f81c:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f820:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f824:	b	1f8d4 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1f828:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f82c:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f830:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f834:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f838:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f83c:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f840:	b	1f8d4 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1f844:	b	1f8d4 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1f848:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f84c:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f850:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f854:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f858:	b	1f8d4 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1f85c:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f860:	b	1f8d4 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1f864:	b	1f8d4 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1f868:	b	1f8d4 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1f86c:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f870:	b	1f8d4 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1f874:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f878:	b	1f8d4 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1f87c:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f880:	b	1f8d4 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1f884:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f888:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f88c:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f890:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f894:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f898:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f89c:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f8a0:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f8a4:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f8a8:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f8ac:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1f8b0:	b	1f8d4 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1f8b4:	b	1f8d4 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1f8b8:	b	1f8d4 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1f8bc:	b	1f8d4 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1f8c0:	mov	r0, #0
   1f8c4:	ldrd	r4, [sp]
   1f8c8:	ldr	r6, [sp, #8]
   1f8cc:	add	sp, sp, #12
   1f8d0:	pop	{pc}		; (ldr pc, [sp], #4)
   1f8d4:	cmp	r2, #50	; 0x32
   1f8d8:	beq	1fa20 <myhtml_insertion_mode_in_foreign_content@@Base+0x3c4>
   1f8dc:	ldr	r3, [r5, #88]	; 0x58
   1f8e0:	cmp	r3, #0
   1f8e4:	beq	1f994 <myhtml_insertion_mode_in_foreign_content@@Base+0x338>
   1f8e8:	mov	r1, r4
   1f8ec:	mov	r0, r5
   1f8f0:	ldrd	r4, [sp]
   1f8f4:	ldr	r6, [sp, #8]
   1f8f8:	ldr	lr, [sp, #12]
   1f8fc:	add	sp, sp, #16
   1f900:	b	fe30 <myhtml_insertion_mode_in_foreign_content_start_other@plt>
   1f904:	bl	105bc <myhtml_tree_current_node@plt>
   1f908:	ldr	r3, [r4]
   1f90c:	cmp	r3, #112	; 0x70
   1f910:	bne	1f92c <myhtml_insertion_mode_in_foreign_content@@Base+0x2d0>
   1f914:	ldr	r3, [r0, #4]
   1f918:	cmp	r3, #112	; 0x70
   1f91c:	bne	1f92c <myhtml_insertion_mode_in_foreign_content@@Base+0x2d0>
   1f920:	ldr	r3, [r0, #8]
   1f924:	cmp	r3, #3
   1f928:	beq	1f9f8 <myhtml_insertion_mode_in_foreign_content@@Base+0x39c>
   1f92c:	mov	r2, r4
   1f930:	mov	r1, r0
   1f934:	ldr	r6, [sp, #8]
   1f938:	mov	r0, r5
   1f93c:	ldrd	r4, [sp]
   1f940:	ldr	lr, [sp, #12]
   1f944:	add	sp, sp, #16
   1f948:	b	fc98 <myhtml_insertion_mode_in_foreign_content_end_other@plt>
   1f94c:	mov	r2, #0
   1f950:	bl	101fc <myhtml_tree_node_insert_comment@plt>
   1f954:	ldrd	r4, [sp]
   1f958:	mov	r0, #0
   1f95c:	ldr	r6, [sp, #8]
   1f960:	add	sp, sp, #12
   1f964:	pop	{pc}		; (ldr pc, [sp], #4)
   1f968:	bl	ffe0 <myhtml_tree_is_mathml_integration_point@plt>
   1f96c:	cmp	r0, #0
   1f970:	mov	r1, r4
   1f974:	mov	r0, r5
   1f978:	bne	1f9b4 <myhtml_insertion_mode_in_foreign_content@@Base+0x358>
   1f97c:	bl	1019c <myhtml_tree_is_html_integration_point@plt>
   1f980:	cmp	r0, #0
   1f984:	bne	1f9b4 <myhtml_insertion_mode_in_foreign_content@@Base+0x358>
   1f988:	ldr	r3, [r4, #8]
   1f98c:	cmp	r3, #1
   1f990:	beq	1f9b4 <myhtml_insertion_mode_in_foreign_content@@Base+0x358>
   1f994:	mov	r0, r5
   1f998:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   1f99c:	mov	r0, r5
   1f9a0:	bl	105bc <myhtml_tree_current_node@plt>
   1f9a4:	subs	r4, r0, #0
   1f9a8:	mov	r0, r5
   1f9ac:	mov	r1, r4
   1f9b0:	bne	1f968 <myhtml_insertion_mode_in_foreign_content@@Base+0x30c>
   1f9b4:	mov	r0, #1
   1f9b8:	b	1f8c4 <myhtml_insertion_mode_in_foreign_content@@Base+0x268>
   1f9bc:	ldr	r3, [r1, #48]	; 0x30
   1f9c0:	tst	r3, #2048	; 0x800
   1f9c4:	bne	1fa08 <myhtml_insertion_mode_in_foreign_content@@Base+0x3ac>
   1f9c8:	mov	r1, r4
   1f9cc:	mov	r0, r5
   1f9d0:	bl	ff2c <myhtml_tree_node_insert_text@plt>
   1f9d4:	ldr	r0, [r4, #48]	; 0x30
   1f9d8:	ands	r0, r0, #8
   1f9dc:	bne	1f8c0 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1f9e0:	ldr	r3, [r5, #180]	; 0xb4
   1f9e4:	ldr	r2, [r5, #180]	; 0xb4
   1f9e8:	and	r3, r3, #2
   1f9ec:	eor	r3, r3, r2
   1f9f0:	str	r3, [r5, #180]	; 0xb4
   1f9f4:	b	1f8c4 <myhtml_insertion_mode_in_foreign_content@@Base+0x268>
   1f9f8:	mov	r0, r5
   1f9fc:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   1fa00:	mov	r0, #0
   1fa04:	b	1f8c4 <myhtml_insertion_mode_in_foreign_content@@Base+0x268>
   1fa08:	ldr	r0, [r0, #8]
   1fa0c:	bl	10610 <myhtml_token_node_wait_for_done@plt>
   1fa10:	mov	r1, r4
   1fa14:	mov	r0, r5
   1fa18:	bl	102c8 <myhtml_token_set_replacement_character_for_null_token@plt>
   1fa1c:	b	1f9c8 <myhtml_insertion_mode_in_foreign_content@@Base+0x36c>
   1fa20:	ldr	r0, [r0, #8]
   1fa24:	bl	10610 <myhtml_token_node_wait_for_done@plt>
   1fa28:	ldr	r1, [pc, #80]	; 1fa80 <myhtml_insertion_mode_in_foreign_content@@Base+0x424>
   1fa2c:	mov	r2, #5
   1fa30:	mov	r0, r4
   1fa34:	add	r1, pc, r1
   1fa38:	bl	10e44 <myhtml_token_attr_by_name@plt>
   1fa3c:	cmp	r0, #0
   1fa40:	bne	1f8dc <myhtml_insertion_mode_in_foreign_content@@Base+0x280>
   1fa44:	ldr	r1, [pc, #56]	; 1fa84 <myhtml_insertion_mode_in_foreign_content@@Base+0x428>
   1fa48:	mov	r2, #4
   1fa4c:	mov	r0, r4
   1fa50:	add	r1, pc, r1
   1fa54:	bl	10e44 <myhtml_token_attr_by_name@plt>
   1fa58:	cmp	r0, #0
   1fa5c:	bne	1f8dc <myhtml_insertion_mode_in_foreign_content@@Base+0x280>
   1fa60:	ldr	r1, [pc, #32]	; 1fa88 <myhtml_insertion_mode_in_foreign_content@@Base+0x42c>
   1fa64:	mov	r2, #4
   1fa68:	mov	r0, r4
   1fa6c:	add	r1, pc, r1
   1fa70:	bl	10e44 <myhtml_token_attr_by_name@plt>
   1fa74:	cmp	r0, #0
   1fa78:	bne	1f8dc <myhtml_insertion_mode_in_foreign_content@@Base+0x280>
   1fa7c:	b	1f8e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1fa80:	muleq	sp, r8, lr
   1fa84:	andeq	lr, sp, r4, lsl #29
   1fa88:	andeq	lr, sp, r0, ror lr

0001fa8c <myhtml_rules_stop_parsing@@Base>:
   1fa8c:	bx	lr

0001fa90 <myhtml_insertion_mode_in_template@@Base>:
   1fa90:	mov	ip, r0
   1fa94:	ldr	r2, [r1]
   1fa98:	ldr	r3, [r1, #48]	; 0x30
   1fa9c:	ands	r3, r3, #1
   1faa0:	beq	1fab4 <myhtml_insertion_mode_in_template@@Base+0x24>
   1faa4:	cmp	r2, #128	; 0x80
   1faa8:	beq	1fca8 <myhtml_insertion_mode_in_template@@Base+0x218>
   1faac:	mov	r0, #0
   1fab0:	bx	lr
   1fab4:	cmp	r2, #92	; 0x5c
   1fab8:	beq	1fcbc <myhtml_insertion_mode_in_template@@Base+0x22c>
   1fabc:	str	r4, [sp, #-8]!
   1fac0:	mov	r4, r0
   1fac4:	str	lr, [sp, #4]
   1fac8:	bls	1fb3c <myhtml_insertion_mode_in_template@@Base+0xac>
   1facc:	cmp	r2, #130	; 0x82
   1fad0:	beq	1fc64 <myhtml_insertion_mode_in_template@@Base+0x1d4>
   1fad4:	bls	1fc08 <myhtml_insertion_mode_in_template@@Base+0x178>
   1fad8:	cmp	r2, #134	; 0x86
   1fadc:	beq	1fc24 <myhtml_insertion_mode_in_template@@Base+0x194>
   1fae0:	bls	1fbdc <myhtml_insertion_mode_in_template@@Base+0x14c>
   1fae4:	cmp	r2, #135	; 0x87
   1fae8:	beq	1fc88 <myhtml_insertion_mode_in_template@@Base+0x1f8>
   1faec:	cmp	r2, #251	; 0xfb
   1faf0:	bne	1fb94 <myhtml_insertion_mode_in_template@@Base+0x104>
   1faf4:	mov	r1, #128	; 0x80
   1faf8:	mov	r2, #1
   1fafc:	bl	10790 <myhtml_tree_open_elements_find_by_tag_idx@plt>
   1fb00:	subs	r1, r0, #0
   1fb04:	beq	1fcac <myhtml_insertion_mode_in_template@@Base+0x21c>
   1fb08:	mov	r2, #0
   1fb0c:	mov	r0, r4
   1fb10:	bl	100dc <myhtml_tree_open_elements_pop_until_by_node@plt>
   1fb14:	mov	r0, r4
   1fb18:	bl	10df0 <myhtml_tree_active_formatting_up_to_last_marker@plt>
   1fb1c:	mov	r0, r4
   1fb20:	bl	10970 <myhtml_tree_template_insertion_pop@plt>
   1fb24:	mov	r0, r4
   1fb28:	bl	106c4 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   1fb2c:	mov	r0, #1
   1fb30:	ldr	r4, [sp]
   1fb34:	add	sp, sp, #4
   1fb38:	pop	{pc}		; (ldr pc, [sp], #4)
   1fb3c:	cmp	r2, #19
   1fb40:	beq	1fc24 <myhtml_insertion_mode_in_template@@Base+0x194>
   1fb44:	bls	1fbb8 <myhtml_insertion_mode_in_template@@Base+0x128>
   1fb48:	cmp	r2, #32
   1fb4c:	beq	1fc64 <myhtml_insertion_mode_in_template@@Base+0x1d4>
   1fb50:	bhi	1fb84 <myhtml_insertion_mode_in_template@@Base+0xf4>
   1fb54:	cmp	r2, #27
   1fb58:	beq	1fc64 <myhtml_insertion_mode_in_template@@Base+0x1d4>
   1fb5c:	cmp	r2, #31
   1fb60:	bne	1fb94 <myhtml_insertion_mode_in_template@@Base+0x104>
   1fb64:	bl	10970 <myhtml_tree_template_insertion_pop@plt>
   1fb68:	mov	r0, r4
   1fb6c:	mov	r1, #11
   1fb70:	bl	ff50 <myhtml_tree_template_insertion_append@plt>
   1fb74:	mov	r3, #11
   1fb78:	mov	r0, #1
   1fb7c:	str	r3, [r4, #168]	; 0xa8
   1fb80:	b	1fb30 <myhtml_insertion_mode_in_template@@Base+0xa0>
   1fb84:	cmp	r2, #78	; 0x4e
   1fb88:	beq	1fc24 <myhtml_insertion_mode_in_template@@Base+0x194>
   1fb8c:	cmp	r2, #86	; 0x56
   1fb90:	beq	1fc24 <myhtml_insertion_mode_in_template@@Base+0x194>
   1fb94:	mov	r0, r4
   1fb98:	bl	10970 <myhtml_tree_template_insertion_pop@plt>
   1fb9c:	mov	r0, r4
   1fba0:	mov	r1, #6
   1fba4:	bl	ff50 <myhtml_tree_template_insertion_append@plt>
   1fba8:	mov	r3, #6
   1fbac:	mov	r0, #1
   1fbb0:	str	r3, [r4, #168]	; 0xa8
   1fbb4:	b	1fb30 <myhtml_insertion_mode_in_template@@Base+0xa0>
   1fbb8:	cmp	r2, #0
   1fbbc:	beq	1fb94 <myhtml_insertion_mode_in_template@@Base+0x104>
   1fbc0:	cmp	r2, #3
   1fbc4:	bhi	1fc4c <myhtml_insertion_mode_in_template@@Base+0x1bc>
   1fbc8:	mov	r0, ip
   1fbcc:	ldr	r4, [sp]
   1fbd0:	ldr	lr, [sp, #4]
   1fbd4:	add	sp, sp, #8
   1fbd8:	b	105d4 <myhtml_insertion_mode_in_body@plt>
   1fbdc:	cmp	r2, #131	; 0x83
   1fbe0:	bne	1fc5c <myhtml_insertion_mode_in_template@@Base+0x1cc>
   1fbe4:	mov	r0, r4
   1fbe8:	bl	10970 <myhtml_tree_template_insertion_pop@plt>
   1fbec:	mov	r0, r4
   1fbf0:	mov	r1, #13
   1fbf4:	bl	ff50 <myhtml_tree_template_insertion_append@plt>
   1fbf8:	mov	r3, #13
   1fbfc:	mov	r0, #1
   1fc00:	str	r3, [r4, #168]	; 0xa8
   1fc04:	b	1fb30 <myhtml_insertion_mode_in_template@@Base+0xa0>
   1fc08:	cmp	r2, #126	; 0x7e
   1fc0c:	beq	1fc64 <myhtml_insertion_mode_in_template@@Base+0x1d4>
   1fc10:	bls	1fc38 <myhtml_insertion_mode_in_template@@Base+0x1a8>
   1fc14:	cmp	r2, #127	; 0x7f
   1fc18:	beq	1fbe4 <myhtml_insertion_mode_in_template@@Base+0x154>
   1fc1c:	cmp	r2, #128	; 0x80
   1fc20:	bne	1fb94 <myhtml_insertion_mode_in_template@@Base+0x104>
   1fc24:	mov	r0, ip
   1fc28:	ldr	r4, [sp]
   1fc2c:	ldr	lr, [sp, #4]
   1fc30:	add	sp, sp, #8
   1fc34:	b	fff8 <myhtml_insertion_mode_in_head@plt>
   1fc38:	cmp	r2, #112	; 0x70
   1fc3c:	beq	1fc24 <myhtml_insertion_mode_in_template@@Base+0x194>
   1fc40:	cmp	r2, #120	; 0x78
   1fc44:	bne	1fb94 <myhtml_insertion_mode_in_template@@Base+0x104>
   1fc48:	b	1fc24 <myhtml_insertion_mode_in_template@@Base+0x194>
   1fc4c:	sub	r2, r2, #15
   1fc50:	cmp	r2, #1
   1fc54:	bhi	1fb94 <myhtml_insertion_mode_in_template@@Base+0x104>
   1fc58:	b	1fc24 <myhtml_insertion_mode_in_template@@Base+0x194>
   1fc5c:	cmp	r2, #132	; 0x84
   1fc60:	bne	1fb94 <myhtml_insertion_mode_in_template@@Base+0x104>
   1fc64:	mov	r0, r4
   1fc68:	bl	10970 <myhtml_tree_template_insertion_pop@plt>
   1fc6c:	mov	r0, r4
   1fc70:	mov	r1, #8
   1fc74:	bl	ff50 <myhtml_tree_template_insertion_append@plt>
   1fc78:	mov	r3, #8
   1fc7c:	mov	r0, #1
   1fc80:	str	r3, [r4, #168]	; 0xa8
   1fc84:	b	1fb30 <myhtml_insertion_mode_in_template@@Base+0xa0>
   1fc88:	bl	10970 <myhtml_tree_template_insertion_pop@plt>
   1fc8c:	mov	r0, r4
   1fc90:	mov	r1, #12
   1fc94:	bl	ff50 <myhtml_tree_template_insertion_append@plt>
   1fc98:	mov	r3, #12
   1fc9c:	mov	r0, #1
   1fca0:	str	r3, [r4, #168]	; 0xa8
   1fca4:	b	1fb30 <myhtml_insertion_mode_in_template@@Base+0xa0>
   1fca8:	b	105d4 <myhtml_insertion_mode_in_body@plt>
   1fcac:	mov	r0, r4
   1fcb0:	bl	102a4 <myhtml_rules_stop_parsing@plt>
   1fcb4:	mov	r0, #0
   1fcb8:	b	1fb30 <myhtml_insertion_mode_in_template@@Base+0xa0>
   1fcbc:	b	fff8 <myhtml_insertion_mode_in_head@plt>

0001fcc0 <myhtml_insertion_mode_in_body@@Base>:
   1fcc0:	ldr	r3, [r1, #48]	; 0x30
   1fcc4:	strd	r4, [sp, #-28]!	; 0xffffffe4
   1fcc8:	mov	r5, r1
   1fccc:	mov	r4, r0
   1fcd0:	ldr	r1, [r1]
   1fcd4:	strd	r6, [sp, #8]
   1fcd8:	strd	r8, [sp, #16]
   1fcdc:	tst	r3, #1
   1fce0:	str	lr, [sp, #24]
   1fce4:	sub	sp, sp, #12
   1fce8:	beq	1ff1c <myhtml_insertion_mode_in_body@@Base+0x25c>
   1fcec:	sub	r3, r1, #4
   1fcf0:	cmp	r3, #135	; 0x87
   1fcf4:	addls	pc, pc, r3, lsl #2
   1fcf8:	b	20794 <myhtml_insertion_mode_in_body@@Base+0xad4>
   1fcfc:	b	20468 <myhtml_insertion_mode_in_body@@Base+0x7a8>
   1fd00:	b	20794 <myhtml_insertion_mode_in_body@@Base+0xad4>
   1fd04:	b	20794 <myhtml_insertion_mode_in_body@@Base+0xad4>
   1fd08:	b	206b4 <myhtml_insertion_mode_in_body@@Base+0x9f4>
   1fd0c:	b	20794 <myhtml_insertion_mode_in_body@@Base+0xad4>
   1fd10:	b	2065c <myhtml_insertion_mode_in_body@@Base+0x99c>
   1fd14:	b	20794 <myhtml_insertion_mode_in_body@@Base+0xad4>
   1fd18:	b	206b4 <myhtml_insertion_mode_in_body@@Base+0x9f4>
   1fd1c:	b	206b4 <myhtml_insertion_mode_in_body@@Base+0x9f4>
   1fd20:	b	20794 <myhtml_insertion_mode_in_body@@Base+0xad4>
   1fd24:	b	20468 <myhtml_insertion_mode_in_body@@Base+0x7a8>
   1fd28:	b	20794 <myhtml_insertion_mode_in_body@@Base+0xad4>
   1fd2c:	b	20794 <myhtml_insertion_mode_in_body@@Base+0xad4>
   1fd30:	b	20794 <myhtml_insertion_mode_in_body@@Base+0xad4>
   1fd34:	b	20794 <myhtml_insertion_mode_in_body@@Base+0xad4>
   1fd38:	b	20794 <myhtml_insertion_mode_in_body@@Base+0xad4>
   1fd3c:	b	20468 <myhtml_insertion_mode_in_body@@Base+0x7a8>
   1fd40:	b	20794 <myhtml_insertion_mode_in_body@@Base+0xad4>
   1fd44:	b	206b4 <myhtml_insertion_mode_in_body@@Base+0x9f4>
   1fd48:	b	20610 <myhtml_insertion_mode_in_body@@Base+0x950>
   1fd4c:	b	205b4 <myhtml_insertion_mode_in_body@@Base+0x8f4>
   1fd50:	b	206b4 <myhtml_insertion_mode_in_body@@Base+0x9f4>
   1fd54:	b	20794 <myhtml_insertion_mode_in_body@@Base+0xad4>
   1fd58:	b	20794 <myhtml_insertion_mode_in_body@@Base+0xad4>
   1fd5c:	b	206b4 <myhtml_insertion_mode_in_body@@Base+0x9f4>
   1fd60:	b	20794 <myhtml_insertion_mode_in_body@@Base+0xad4>
   1fd64:	b	20468 <myhtml_insertion_mode_in_body@@Base+0x7a8>
   1fd68:	b	20794 <myhtml_insertion_mode_in_body@@Base+0xad4>
   1fd6c:	b	20794 <myhtml_insertion_mode_in_body@@Base+0xad4>
   1fd70:	b	20794 <myhtml_insertion_mode_in_body@@Base+0xad4>
   1fd74:	b	20794 <myhtml_insertion_mode_in_body@@Base+0xad4>
   1fd78:	b	20794 <myhtml_insertion_mode_in_body@@Base+0xad4>
   1fd7c:	b	20770 <myhtml_insertion_mode_in_body@@Base+0xab0>
   1fd80:	b	20794 <myhtml_insertion_mode_in_body@@Base+0xad4>
   1fd84:	b	206b4 <myhtml_insertion_mode_in_body@@Base+0x9f4>
   1fd88:	b	20794 <myhtml_insertion_mode_in_body@@Base+0xad4>
   1fd8c:	b	206b4 <myhtml_insertion_mode_in_body@@Base+0x9f4>
   1fd90:	b	206b4 <myhtml_insertion_mode_in_body@@Base+0x9f4>
   1fd94:	b	206b4 <myhtml_insertion_mode_in_body@@Base+0x9f4>
   1fd98:	b	206b4 <myhtml_insertion_mode_in_body@@Base+0x9f4>
   1fd9c:	b	20770 <myhtml_insertion_mode_in_body@@Base+0xab0>
   1fda0:	b	20468 <myhtml_insertion_mode_in_body@@Base+0x7a8>
   1fda4:	b	20794 <myhtml_insertion_mode_in_body@@Base+0xad4>
   1fda8:	b	206b4 <myhtml_insertion_mode_in_body@@Base+0x9f4>
   1fdac:	b	206b4 <myhtml_insertion_mode_in_body@@Base+0x9f4>
   1fdb0:	b	206b4 <myhtml_insertion_mode_in_body@@Base+0x9f4>
   1fdb4:	b	20468 <myhtml_insertion_mode_in_body@@Base+0x7a8>
   1fdb8:	b	206b4 <myhtml_insertion_mode_in_body@@Base+0x9f4>
   1fdbc:	b	20700 <myhtml_insertion_mode_in_body@@Base+0xa40>
   1fdc0:	b	20794 <myhtml_insertion_mode_in_body@@Base+0xad4>
   1fdc4:	b	20794 <myhtml_insertion_mode_in_body@@Base+0xad4>
   1fdc8:	b	20548 <myhtml_insertion_mode_in_body@@Base+0x888>
   1fdcc:	b	20548 <myhtml_insertion_mode_in_body@@Base+0x888>
   1fdd0:	b	20548 <myhtml_insertion_mode_in_body@@Base+0x888>
   1fdd4:	b	20548 <myhtml_insertion_mode_in_body@@Base+0x888>
   1fdd8:	b	20548 <myhtml_insertion_mode_in_body@@Base+0x888>
   1fddc:	b	20548 <myhtml_insertion_mode_in_body@@Base+0x888>
   1fde0:	b	20794 <myhtml_insertion_mode_in_body@@Base+0xad4>
   1fde4:	b	206b4 <myhtml_insertion_mode_in_body@@Base+0x9f4>
   1fde8:	b	206b4 <myhtml_insertion_mode_in_body@@Base+0x9f4>
   1fdec:	b	20794 <myhtml_insertion_mode_in_body@@Base+0xad4>
   1fdf0:	b	204fc <myhtml_insertion_mode_in_body@@Base+0x83c>
   1fdf4:	b	20468 <myhtml_insertion_mode_in_body@@Base+0x7a8>
   1fdf8:	b	20794 <myhtml_insertion_mode_in_body@@Base+0xad4>
   1fdfc:	b	20794 <myhtml_insertion_mode_in_body@@Base+0xad4>
   1fe00:	b	20794 <myhtml_insertion_mode_in_body@@Base+0xad4>
   1fe04:	b	20794 <myhtml_insertion_mode_in_body@@Base+0xad4>
   1fe08:	b	20794 <myhtml_insertion_mode_in_body@@Base+0xad4>
   1fe0c:	b	20794 <myhtml_insertion_mode_in_body@@Base+0xad4>
   1fe10:	b	20794 <myhtml_insertion_mode_in_body@@Base+0xad4>
   1fe14:	b	20794 <myhtml_insertion_mode_in_body@@Base+0xad4>
   1fe18:	b	20794 <myhtml_insertion_mode_in_body@@Base+0xad4>
   1fe1c:	b	20794 <myhtml_insertion_mode_in_body@@Base+0xad4>
   1fe20:	b	204a8 <myhtml_insertion_mode_in_body@@Base+0x7e8>
   1fe24:	b	20794 <myhtml_insertion_mode_in_body@@Base+0xad4>
   1fe28:	b	206b4 <myhtml_insertion_mode_in_body@@Base+0x9f4>
   1fe2c:	b	206b4 <myhtml_insertion_mode_in_body@@Base+0x9f4>
   1fe30:	b	20794 <myhtml_insertion_mode_in_body@@Base+0xad4>
   1fe34:	b	20794 <myhtml_insertion_mode_in_body@@Base+0xad4>
   1fe38:	b	2065c <myhtml_insertion_mode_in_body@@Base+0x99c>
   1fe3c:	b	206b4 <myhtml_insertion_mode_in_body@@Base+0x9f4>
   1fe40:	b	20794 <myhtml_insertion_mode_in_body@@Base+0xad4>
   1fe44:	b	20794 <myhtml_insertion_mode_in_body@@Base+0xad4>
   1fe48:	b	20794 <myhtml_insertion_mode_in_body@@Base+0xad4>
   1fe4c:	b	20794 <myhtml_insertion_mode_in_body@@Base+0xad4>
   1fe50:	b	206b4 <myhtml_insertion_mode_in_body@@Base+0x9f4>
   1fe54:	b	20468 <myhtml_insertion_mode_in_body@@Base+0x7a8>
   1fe58:	b	20794 <myhtml_insertion_mode_in_body@@Base+0xad4>
   1fe5c:	b	20794 <myhtml_insertion_mode_in_body@@Base+0xad4>
   1fe60:	b	20794 <myhtml_insertion_mode_in_body@@Base+0xad4>
   1fe64:	b	2065c <myhtml_insertion_mode_in_body@@Base+0x99c>
   1fe68:	b	206b4 <myhtml_insertion_mode_in_body@@Base+0x9f4>
   1fe6c:	b	20794 <myhtml_insertion_mode_in_body@@Base+0xad4>
   1fe70:	b	20794 <myhtml_insertion_mode_in_body@@Base+0xad4>
   1fe74:	b	20794 <myhtml_insertion_mode_in_body@@Base+0xad4>
   1fe78:	b	2047c <myhtml_insertion_mode_in_body@@Base+0x7bc>
   1fe7c:	b	20794 <myhtml_insertion_mode_in_body@@Base+0xad4>
   1fe80:	b	20794 <myhtml_insertion_mode_in_body@@Base+0xad4>
   1fe84:	b	206b4 <myhtml_insertion_mode_in_body@@Base+0x9f4>
   1fe88:	b	20794 <myhtml_insertion_mode_in_body@@Base+0xad4>
   1fe8c:	b	20794 <myhtml_insertion_mode_in_body@@Base+0xad4>
   1fe90:	b	20794 <myhtml_insertion_mode_in_body@@Base+0xad4>
   1fe94:	b	20794 <myhtml_insertion_mode_in_body@@Base+0xad4>
   1fe98:	b	20794 <myhtml_insertion_mode_in_body@@Base+0xad4>
   1fe9c:	b	20794 <myhtml_insertion_mode_in_body@@Base+0xad4>
   1fea0:	b	20794 <myhtml_insertion_mode_in_body@@Base+0xad4>
   1fea4:	b	20468 <myhtml_insertion_mode_in_body@@Base+0x7a8>
   1fea8:	b	20794 <myhtml_insertion_mode_in_body@@Base+0xad4>
   1feac:	b	20794 <myhtml_insertion_mode_in_body@@Base+0xad4>
   1feb0:	b	206b4 <myhtml_insertion_mode_in_body@@Base+0x9f4>
   1feb4:	b	20794 <myhtml_insertion_mode_in_body@@Base+0xad4>
   1feb8:	b	20468 <myhtml_insertion_mode_in_body@@Base+0x7a8>
   1febc:	b	20794 <myhtml_insertion_mode_in_body@@Base+0xad4>
   1fec0:	b	20794 <myhtml_insertion_mode_in_body@@Base+0xad4>
   1fec4:	b	20468 <myhtml_insertion_mode_in_body@@Base+0x7a8>
   1fec8:	b	20468 <myhtml_insertion_mode_in_body@@Base+0x7a8>
   1fecc:	b	20794 <myhtml_insertion_mode_in_body@@Base+0xad4>
   1fed0:	b	20794 <myhtml_insertion_mode_in_body@@Base+0xad4>
   1fed4:	b	206b4 <myhtml_insertion_mode_in_body@@Base+0x9f4>
   1fed8:	b	20794 <myhtml_insertion_mode_in_body@@Base+0xad4>
   1fedc:	b	20794 <myhtml_insertion_mode_in_body@@Base+0xad4>
   1fee0:	b	20794 <myhtml_insertion_mode_in_body@@Base+0xad4>
   1fee4:	b	20794 <myhtml_insertion_mode_in_body@@Base+0xad4>
   1fee8:	b	20794 <myhtml_insertion_mode_in_body@@Base+0xad4>
   1feec:	b	20444 <myhtml_insertion_mode_in_body@@Base+0x784>
   1fef0:	b	20794 <myhtml_insertion_mode_in_body@@Base+0xad4>
   1fef4:	b	20794 <myhtml_insertion_mode_in_body@@Base+0xad4>
   1fef8:	b	20794 <myhtml_insertion_mode_in_body@@Base+0xad4>
   1fefc:	b	20794 <myhtml_insertion_mode_in_body@@Base+0xad4>
   1ff00:	b	20794 <myhtml_insertion_mode_in_body@@Base+0xad4>
   1ff04:	b	20794 <myhtml_insertion_mode_in_body@@Base+0xad4>
   1ff08:	b	20794 <myhtml_insertion_mode_in_body@@Base+0xad4>
   1ff0c:	b	20794 <myhtml_insertion_mode_in_body@@Base+0xad4>
   1ff10:	b	20468 <myhtml_insertion_mode_in_body@@Base+0x7a8>
   1ff14:	b	20468 <myhtml_insertion_mode_in_body@@Base+0x7a8>
   1ff18:	b	206b4 <myhtml_insertion_mode_in_body@@Base+0x9f4>
   1ff1c:	sub	r1, r1, #1
   1ff20:	cmp	r1, #250	; 0xfa
   1ff24:	addls	pc, pc, r1, lsl #2
   1ff28:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   1ff2c:	b	20d6c <myhtml_insertion_mode_in_body@@Base+0x10ac>
   1ff30:	b	20dc8 <myhtml_insertion_mode_in_body@@Base+0x1108>
   1ff34:	b	20428 <myhtml_insertion_mode_in_body@@Base+0x768>
   1ff38:	b	207b4 <myhtml_insertion_mode_in_body@@Base+0xaf4>
   1ff3c:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   1ff40:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   1ff44:	b	203f4 <myhtml_insertion_mode_in_body@@Base+0x734>
   1ff48:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   1ff4c:	b	20bc8 <myhtml_insertion_mode_in_body@@Base+0xf08>
   1ff50:	b	20bac <myhtml_insertion_mode_in_body@@Base+0xeec>
   1ff54:	b	203f4 <myhtml_insertion_mode_in_body@@Base+0x734>
   1ff58:	b	203f4 <myhtml_insertion_mode_in_body@@Base+0x734>
   1ff5c:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   1ff60:	b	20808 <myhtml_insertion_mode_in_body@@Base+0xb48>
   1ff64:	b	20444 <myhtml_insertion_mode_in_body@@Base+0x784>
   1ff68:	b	20444 <myhtml_insertion_mode_in_body@@Base+0x784>
   1ff6c:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   1ff70:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   1ff74:	b	20444 <myhtml_insertion_mode_in_body@@Base+0x784>
   1ff78:	b	20808 <myhtml_insertion_mode_in_body@@Base+0xb48>
   1ff7c:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   1ff80:	b	203f4 <myhtml_insertion_mode_in_body@@Base+0x734>
   1ff84:	b	20920 <myhtml_insertion_mode_in_body@@Base+0xc60>
   1ff88:	b	20bac <myhtml_insertion_mode_in_body@@Base+0xeec>
   1ff8c:	b	209d4 <myhtml_insertion_mode_in_body@@Base+0xd14>
   1ff90:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   1ff94:	b	20428 <myhtml_insertion_mode_in_body@@Base+0x768>
   1ff98:	b	203f4 <myhtml_insertion_mode_in_body@@Base+0x734>
   1ff9c:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   1ffa0:	b	20808 <myhtml_insertion_mode_in_body@@Base+0xb48>
   1ffa4:	b	20428 <myhtml_insertion_mode_in_body@@Base+0x768>
   1ffa8:	b	20428 <myhtml_insertion_mode_in_body@@Base+0x768>
   1ffac:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   1ffb0:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   1ffb4:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   1ffb8:	b	20a68 <myhtml_insertion_mode_in_body@@Base+0xda8>
   1ffbc:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   1ffc0:	b	203f4 <myhtml_insertion_mode_in_body@@Base+0x734>
   1ffc4:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   1ffc8:	b	203f4 <myhtml_insertion_mode_in_body@@Base+0x734>
   1ffcc:	b	203f4 <myhtml_insertion_mode_in_body@@Base+0x734>
   1ffd0:	b	203f4 <myhtml_insertion_mode_in_body@@Base+0x734>
   1ffd4:	b	203f4 <myhtml_insertion_mode_in_body@@Base+0x734>
   1ffd8:	b	20a68 <myhtml_insertion_mode_in_body@@Base+0xda8>
   1ffdc:	b	20808 <myhtml_insertion_mode_in_body@@Base+0xb48>
   1ffe0:	b	20bac <myhtml_insertion_mode_in_body@@Base+0xeec>
   1ffe4:	b	203f4 <myhtml_insertion_mode_in_body@@Base+0x734>
   1ffe8:	b	203f4 <myhtml_insertion_mode_in_body@@Base+0x734>
   1ffec:	b	203f4 <myhtml_insertion_mode_in_body@@Base+0x734>
   1fff0:	b	20808 <myhtml_insertion_mode_in_body@@Base+0xb48>
   1fff4:	b	203f4 <myhtml_insertion_mode_in_body@@Base+0x734>
   1fff8:	b	20bec <myhtml_insertion_mode_in_body@@Base+0xf2c>
   1fffc:	b	20428 <myhtml_insertion_mode_in_body@@Base+0x768>
   20000:	b	20c60 <myhtml_insertion_mode_in_body@@Base+0xfa0>
   20004:	b	20cd0 <myhtml_insertion_mode_in_body@@Base+0x1010>
   20008:	b	20cd0 <myhtml_insertion_mode_in_body@@Base+0x1010>
   2000c:	b	20cd0 <myhtml_insertion_mode_in_body@@Base+0x1010>
   20010:	b	20cd0 <myhtml_insertion_mode_in_body@@Base+0x1010>
   20014:	b	20cd0 <myhtml_insertion_mode_in_body@@Base+0x1010>
   20018:	b	20cd0 <myhtml_insertion_mode_in_body@@Base+0x1010>
   2001c:	b	20428 <myhtml_insertion_mode_in_body@@Base+0x768>
   20020:	b	203f4 <myhtml_insertion_mode_in_body@@Base+0x734>
   20024:	b	203f4 <myhtml_insertion_mode_in_body@@Base+0x734>
   20028:	b	20d24 <myhtml_insertion_mode_in_body@@Base+0x1064>
   2002c:	b	21098 <myhtml_insertion_mode_in_body@@Base+0x13d8>
   20030:	b	20808 <myhtml_insertion_mode_in_body@@Base+0xb48>
   20034:	b	2085c <myhtml_insertion_mode_in_body@@Base+0xb9c>
   20038:	b	2110c <myhtml_insertion_mode_in_body@@Base+0x144c>
   2003c:	b	20bac <myhtml_insertion_mode_in_body@@Base+0xeec>
   20040:	b	208b4 <myhtml_insertion_mode_in_body@@Base+0xbf4>
   20044:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   20048:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   2004c:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   20050:	b	20bac <myhtml_insertion_mode_in_body@@Base+0xeec>
   20054:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   20058:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   2005c:	b	20318 <myhtml_insertion_mode_in_body@@Base+0x658>
   20060:	b	20444 <myhtml_insertion_mode_in_body@@Base+0x784>
   20064:	b	20fb0 <myhtml_insertion_mode_in_body@@Base+0x12f0>
   20068:	b	203f4 <myhtml_insertion_mode_in_body@@Base+0x734>
   2006c:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   20070:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   20074:	b	20bc8 <myhtml_insertion_mode_in_body@@Base+0xf08>
   20078:	b	20ff4 <myhtml_insertion_mode_in_body@@Base+0x1334>
   2007c:	b	2111c <myhtml_insertion_mode_in_body@@Base+0x145c>
   20080:	b	20444 <myhtml_insertion_mode_in_body@@Base+0x784>
   20084:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   20088:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   2008c:	b	203f4 <myhtml_insertion_mode_in_body@@Base+0x734>
   20090:	b	21064 <myhtml_insertion_mode_in_body@@Base+0x13a4>
   20094:	b	20898 <myhtml_insertion_mode_in_body@@Base+0xbd8>
   20098:	b	20444 <myhtml_insertion_mode_in_body@@Base+0x784>
   2009c:	b	2088c <myhtml_insertion_mode_in_body@@Base+0xbcc>
   200a0:	b	20bc8 <myhtml_insertion_mode_in_body@@Base+0xf08>
   200a4:	b	203f4 <myhtml_insertion_mode_in_body@@Base+0x734>
   200a8:	b	21034 <myhtml_insertion_mode_in_body@@Base+0x1374>
   200ac:	b	21034 <myhtml_insertion_mode_in_body@@Base+0x1374>
   200b0:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   200b4:	b	203f4 <myhtml_insertion_mode_in_body@@Base+0x734>
   200b8:	b	20ddc <myhtml_insertion_mode_in_body@@Base+0x111c>
   200bc:	b	20df4 <myhtml_insertion_mode_in_body@@Base+0x1134>
   200c0:	b	20fb0 <myhtml_insertion_mode_in_body@@Base+0x12f0>
   200c4:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   200c8:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   200cc:	b	20e34 <myhtml_insertion_mode_in_body@@Base+0x1174>
   200d0:	b	20e68 <myhtml_insertion_mode_in_body@@Base+0x11a8>
   200d4:	b	20e68 <myhtml_insertion_mode_in_body@@Base+0x11a8>
   200d8:	b	20e34 <myhtml_insertion_mode_in_body@@Base+0x1174>
   200dc:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   200e0:	b	20808 <myhtml_insertion_mode_in_body@@Base+0xb48>
   200e4:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   200e8:	b	20444 <myhtml_insertion_mode_in_body@@Base+0x784>
   200ec:	b	203f4 <myhtml_insertion_mode_in_body@@Base+0x734>
   200f0:	b	20e94 <myhtml_insertion_mode_in_body@@Base+0x11d4>
   200f4:	b	20808 <myhtml_insertion_mode_in_body@@Base+0xb48>
   200f8:	b	20ddc <myhtml_insertion_mode_in_body@@Base+0x111c>
   200fc:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   20100:	b	20808 <myhtml_insertion_mode_in_body@@Base+0xb48>
   20104:	b	20808 <myhtml_insertion_mode_in_body@@Base+0xb48>
   20108:	b	20444 <myhtml_insertion_mode_in_body@@Base+0x784>
   2010c:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   20110:	b	203f4 <myhtml_insertion_mode_in_body@@Base+0x734>
   20114:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   20118:	b	20ee8 <myhtml_insertion_mode_in_body@@Base+0x1228>
   2011c:	b	20f2c <myhtml_insertion_mode_in_body@@Base+0x126c>
   20120:	b	20428 <myhtml_insertion_mode_in_body@@Base+0x768>
   20124:	b	20428 <myhtml_insertion_mode_in_body@@Base+0x768>
   20128:	b	20444 <myhtml_insertion_mode_in_body@@Base+0x784>
   2012c:	b	20f68 <myhtml_insertion_mode_in_body@@Base+0x12a8>
   20130:	b	20428 <myhtml_insertion_mode_in_body@@Base+0x768>
   20134:	b	20428 <myhtml_insertion_mode_in_body@@Base+0x768>
   20138:	b	20428 <myhtml_insertion_mode_in_body@@Base+0x768>
   2013c:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   20140:	b	20444 <myhtml_insertion_mode_in_body@@Base+0x784>
   20144:	b	20428 <myhtml_insertion_mode_in_body@@Base+0x768>
   20148:	b	20ddc <myhtml_insertion_mode_in_body@@Base+0x111c>
   2014c:	b	20808 <myhtml_insertion_mode_in_body@@Base+0xb48>
   20150:	b	20808 <myhtml_insertion_mode_in_body@@Base+0xb48>
   20154:	b	203f4 <myhtml_insertion_mode_in_body@@Base+0x734>
   20158:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   2015c:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   20160:	b	20bac <myhtml_insertion_mode_in_body@@Base+0xeec>
   20164:	b	20830 <myhtml_insertion_mode_in_body@@Base+0xb70>
   20168:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   2016c:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   20170:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   20174:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   20178:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   2017c:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   20180:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   20184:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   20188:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   2018c:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   20190:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   20194:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   20198:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   2019c:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   201a0:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   201a4:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   201a8:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   201ac:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   201b0:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   201b4:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   201b8:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   201bc:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   201c0:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   201c4:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   201c8:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   201cc:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   201d0:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   201d4:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   201d8:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   201dc:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   201e0:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   201e4:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   201e8:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   201ec:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   201f0:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   201f4:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   201f8:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   201fc:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   20200:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   20204:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   20208:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   2020c:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   20210:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   20214:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   20218:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   2021c:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   20220:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   20224:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   20228:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   2022c:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   20230:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   20234:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   20238:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   2023c:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   20240:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   20244:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   20248:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   2024c:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   20250:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   20254:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   20258:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   2025c:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   20260:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   20264:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   20268:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   2026c:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   20270:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   20274:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   20278:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   2027c:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   20280:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   20284:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   20288:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   2028c:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   20290:	b	20b5c <myhtml_insertion_mode_in_body@@Base+0xe9c>
   20294:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   20298:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   2029c:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   202a0:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   202a4:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   202a8:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   202ac:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   202b0:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   202b4:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   202b8:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   202bc:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   202c0:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   202c4:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   202c8:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   202cc:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   202d0:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   202d4:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   202d8:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   202dc:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   202e0:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   202e4:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   202e8:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   202ec:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   202f0:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   202f4:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   202f8:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   202fc:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   20300:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   20304:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   20308:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   2030c:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   20310:	b	2113c <myhtml_insertion_mode_in_body@@Base+0x147c>
   20314:	b	20a28 <myhtml_insertion_mode_in_body@@Base+0xd68>
   20318:	ldr	r3, [r0, #128]	; 0x80
   2031c:	ldr	r2, [r0, #180]	; 0xb4
   20320:	ldr	r1, [r0, #180]	; 0xb4
   20324:	and	r2, r2, #2
   20328:	eor	r2, r2, r1
   2032c:	str	r2, [r0, #180]	; 0xb4
   20330:	ldr	r7, [r3, #4]
   20334:	cmp	r7, #0
   20338:	bne	20390 <myhtml_insertion_mode_in_body@@Base+0x6d0>
   2033c:	b	203f4 <myhtml_insertion_mode_in_body@@Base+0x734>
   20340:	ldr	r3, [r6, #8]
   20344:	add	r2, r3, #4
   20348:	ldr	r2, [r8, r2, lsl #2]
   2034c:	tst	r2, #2
   20350:	beq	20384 <myhtml_insertion_mode_in_body@@Base+0x6c4>
   20354:	ldr	r1, [r6, #4]
   20358:	cmp	r1, #7
   2035c:	cmpne	r1, #42	; 0x2a
   20360:	movne	r2, #1
   20364:	moveq	r2, #0
   20368:	cmp	r1, #99	; 0x63
   2036c:	moveq	r2, #0
   20370:	andne	r2, r2, #1
   20374:	cmp	r2, #0
   20378:	bne	203f4 <myhtml_insertion_mode_in_body@@Base+0x734>
   2037c:	cmp	r3, #1
   20380:	bne	203f4 <myhtml_insertion_mode_in_body@@Base+0x734>
   20384:	cmp	r7, #0
   20388:	beq	203f4 <myhtml_insertion_mode_in_body@@Base+0x734>
   2038c:	ldr	r3, [r4, #128]	; 0x80
   20390:	sub	r7, r7, #1
   20394:	ldr	r3, [r3]
   20398:	ldr	r0, [r4, #28]
   2039c:	ldr	r6, [r3, r7, lsl #2]
   203a0:	ldr	r1, [r6, #4]
   203a4:	bl	109b8 <myhtml_tag_get_by_id@plt>
   203a8:	mov	r8, r0
   203ac:	mov	r1, #77	; 0x4d
   203b0:	mov	r0, r6
   203b4:	bl	10a3c <myhtml_is_html_node@plt>
   203b8:	cmp	r0, #0
   203bc:	beq	20340 <myhtml_insertion_mode_in_body@@Base+0x680>
   203c0:	mov	r2, #1
   203c4:	mov	r1, #77	; 0x4d
   203c8:	mov	r0, r4
   203cc:	bl	10670 <myhtml_tree_generate_implied_end_tags@plt>
   203d0:	mov	r0, r4
   203d4:	bl	105bc <myhtml_tree_current_node@plt>
   203d8:	mov	r1, #77	; 0x4d
   203dc:	bl	10a3c <myhtml_is_html_node@plt>
   203e0:	mov	r3, #0
   203e4:	mov	r2, #1
   203e8:	mov	r1, #77	; 0x4d
   203ec:	mov	r0, r4
   203f0:	bl	108e0 <myhtml_tree_open_elements_pop_until@plt>
   203f4:	mov	r3, #32
   203f8:	mov	r2, #1
   203fc:	mov	r1, #99	; 0x63
   20400:	mov	r0, r4
   20404:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   20408:	cmp	r0, #0
   2040c:	beq	2041c <myhtml_insertion_mode_in_body@@Base+0x75c>
   20410:	mov	r1, r5
   20414:	mov	r0, r4
   20418:	bl	103dc <myhtml_tree_tags_close_p@plt>
   2041c:	mov	r1, r5
   20420:	mov	r0, r4
   20424:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   20428:	mov	r0, #0
   2042c:	add	sp, sp, #12
   20430:	ldrd	r4, [sp]
   20434:	ldrd	r6, [sp, #8]
   20438:	ldrd	r8, [sp, #16]
   2043c:	add	sp, sp, #24
   20440:	pop	{pc}		; (ldr pc, [sp], #4)
   20444:	mov	r1, r5
   20448:	mov	r0, r4
   2044c:	add	sp, sp, #12
   20450:	ldrd	r4, [sp]
   20454:	ldrd	r6, [sp, #8]
   20458:	ldrd	r8, [sp, #16]
   2045c:	ldr	lr, [sp, #24]
   20460:	add	sp, sp, #28
   20464:	b	fff8 <myhtml_insertion_mode_in_head@plt>
   20468:	mov	r2, r1
   2046c:	mov	r1, r5
   20470:	bl	1082c <myhtml_tree_adoption_agency_algorithm@plt>
   20474:	mov	r0, #0
   20478:	b	2042c <myhtml_insertion_mode_in_body@@Base+0x76c>
   2047c:	mov	r3, #32
   20480:	mov	r2, #1
   20484:	mov	r1, #99	; 0x63
   20488:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   2048c:	cmp	r0, #0
   20490:	beq	2126c <myhtml_insertion_mode_in_body@@Base+0x15ac>
   20494:	mov	r0, r4
   20498:	mov	r1, r5
   2049c:	bl	103dc <myhtml_tree_tags_close_p@plt>
   204a0:	mov	r0, #0
   204a4:	b	2042c <myhtml_insertion_mode_in_body@@Base+0x76c>
   204a8:	mov	r3, #16
   204ac:	mov	r2, #1
   204b0:	mov	r1, #77	; 0x4d
   204b4:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   204b8:	cmp	r0, #0
   204bc:	beq	20428 <myhtml_insertion_mode_in_body@@Base+0x768>
   204c0:	mov	r2, #1
   204c4:	mov	r1, #77	; 0x4d
   204c8:	mov	r0, r4
   204cc:	bl	10670 <myhtml_tree_generate_implied_end_tags@plt>
   204d0:	mov	r0, r4
   204d4:	bl	105bc <myhtml_tree_current_node@plt>
   204d8:	mov	r1, #77	; 0x4d
   204dc:	bl	10a3c <myhtml_is_html_node@plt>
   204e0:	mov	r0, r4
   204e4:	mov	r3, #0
   204e8:	mov	r2, #1
   204ec:	mov	r1, #77	; 0x4d
   204f0:	bl	108e0 <myhtml_tree_open_elements_pop_until@plt>
   204f4:	mov	r0, #0
   204f8:	b	2042c <myhtml_insertion_mode_in_body@@Base+0x76c>
   204fc:	mov	r3, #8
   20500:	mov	r2, #1
   20504:	mov	r1, #23
   20508:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   2050c:	cmp	r0, #0
   20510:	beq	20428 <myhtml_insertion_mode_in_body@@Base+0x768>
   20514:	ldr	r1, [r4, #128]	; 0x80
   20518:	ldr	r3, [r1, #4]
   2051c:	cmp	r3, #0
   20520:	beq	20538 <myhtml_insertion_mode_in_body@@Base+0x878>
   20524:	mov	r3, #0
   20528:	ldr	r2, [r1, #4]
   2052c:	add	r3, r3, #1
   20530:	cmp	r2, r3
   20534:	bhi	20528 <myhtml_insertion_mode_in_body@@Base+0x868>
   20538:	mov	r3, #18
   2053c:	mov	r0, #1
   20540:	str	r3, [r4, #168]	; 0xa8
   20544:	b	2042c <myhtml_insertion_mode_in_body@@Base+0x76c>
   20548:	ldr	r3, [r0, #128]	; 0x80
   2054c:	ldr	r7, [r3]
   20550:	ldr	r6, [r3, #4]
   20554:	cmp	r6, #0
   20558:	beq	20428 <myhtml_insertion_mode_in_body@@Base+0x768>
   2055c:	add	r8, r7, r6, lsl #2
   20560:	b	2056c <myhtml_insertion_mode_in_body@@Base+0x8ac>
   20564:	cmp	r6, #0
   20568:	beq	20428 <myhtml_insertion_mode_in_body@@Base+0x768>
   2056c:	ldr	r3, [r8, #-4]!
   20570:	sub	r6, r6, #1
   20574:	ldr	r0, [r4, #28]
   20578:	ldr	r1, [r3, #4]
   2057c:	bl	109b8 <myhtml_tag_get_by_id@plt>
   20580:	ldr	r2, [r8]
   20584:	ldr	r3, [r2, #4]
   20588:	sub	r3, r3, #55	; 0x37
   2058c:	cmp	r3, #5
   20590:	ldr	r3, [r2, #8]
   20594:	bhi	205a0 <myhtml_insertion_mode_in_body@@Base+0x8e0>
   20598:	cmp	r3, #1
   2059c:	beq	21150 <myhtml_insertion_mode_in_body@@Base+0x1490>
   205a0:	add	r3, r3, #4
   205a4:	ldr	r3, [r0, r3, lsl #2]
   205a8:	tst	r3, #8
   205ac:	beq	20564 <myhtml_insertion_mode_in_body@@Base+0x8a4>
   205b0:	b	20428 <myhtml_insertion_mode_in_body@@Base+0x768>
   205b4:	ldr	r3, [r5, #40]	; 0x28
   205b8:	mov	r6, #0
   205bc:	cmp	r3, #0
   205c0:	movne	r3, #0
   205c4:	strne	r3, [r5, #40]	; 0x28
   205c8:	ldr	r3, [r5, #44]	; 0x2c
   205cc:	cmp	r3, #0
   205d0:	movne	r3, #0
   205d4:	strne	r3, [r5, #44]	; 0x2c
   205d8:	bl	104d8 <myhtml_tree_active_formatting_reconstruction@plt>
   205dc:	mov	r1, r5
   205e0:	mov	r0, r4
   205e4:	str	r6, [r5, #48]	; 0x30
   205e8:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   205ec:	mov	r0, r4
   205f0:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   205f4:	ldr	r3, [r4, #180]	; 0xb4
   205f8:	mov	r0, #0
   205fc:	ldr	r2, [r4, #180]	; 0xb4
   20600:	and	r3, r3, #2
   20604:	eor	r3, r3, r2
   20608:	str	r3, [r4, #180]	; 0xb4
   2060c:	b	2042c <myhtml_insertion_mode_in_body@@Base+0x76c>
   20610:	mov	r3, #8
   20614:	mov	r2, #1
   20618:	mov	r1, #23
   2061c:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   20620:	cmp	r0, #0
   20624:	beq	20428 <myhtml_insertion_mode_in_body@@Base+0x768>
   20628:	ldr	r1, [r4, #128]	; 0x80
   2062c:	ldr	r3, [r1, #4]
   20630:	cmp	r3, #0
   20634:	beq	2064c <myhtml_insertion_mode_in_body@@Base+0x98c>
   20638:	mov	r3, #0
   2063c:	ldr	r2, [r1, #4]
   20640:	add	r3, r3, #1
   20644:	cmp	r2, r3
   20648:	bhi	2063c <myhtml_insertion_mode_in_body@@Base+0x97c>
   2064c:	mov	r3, #18
   20650:	mov	r0, #0
   20654:	str	r3, [r4, #168]	; 0xa8
   20658:	b	2042c <myhtml_insertion_mode_in_body@@Base+0x76c>
   2065c:	mov	r3, #8
   20660:	mov	r2, #1
   20664:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   20668:	cmp	r0, #0
   2066c:	beq	20428 <myhtml_insertion_mode_in_body@@Base+0x768>
   20670:	mov	r2, #0
   20674:	mov	r0, r4
   20678:	mov	r1, r2
   2067c:	bl	10670 <myhtml_tree_generate_implied_end_tags@plt>
   20680:	mov	r0, r4
   20684:	bl	105bc <myhtml_tree_current_node@plt>
   20688:	ldr	r1, [r5]
   2068c:	bl	10a3c <myhtml_is_html_node@plt>
   20690:	mov	r3, #0
   20694:	mov	r2, #1
   20698:	ldr	r1, [r5]
   2069c:	mov	r0, r4
   206a0:	bl	108e0 <myhtml_tree_open_elements_pop_until@plt>
   206a4:	mov	r0, r4
   206a8:	bl	10df0 <myhtml_tree_active_formatting_up_to_last_marker@plt>
   206ac:	mov	r0, #0
   206b0:	b	2042c <myhtml_insertion_mode_in_body@@Base+0x76c>
   206b4:	mov	r3, #8
   206b8:	mov	r2, #1
   206bc:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   206c0:	cmp	r0, #0
   206c4:	beq	20428 <myhtml_insertion_mode_in_body@@Base+0x768>
   206c8:	mov	r2, #0
   206cc:	mov	r0, r4
   206d0:	mov	r1, r2
   206d4:	bl	10670 <myhtml_tree_generate_implied_end_tags@plt>
   206d8:	mov	r0, r4
   206dc:	bl	105bc <myhtml_tree_current_node@plt>
   206e0:	ldr	r1, [r5]
   206e4:	bl	10a3c <myhtml_is_html_node@plt>
   206e8:	mov	r0, r4
   206ec:	mov	r3, #0
   206f0:	ldr	r1, [r5]
   206f4:	mov	r2, #1
   206f8:	bl	108e0 <myhtml_tree_open_elements_pop_until@plt>
   206fc:	b	20428 <myhtml_insertion_mode_in_body@@Base+0x768>
   20700:	mov	r3, #0
   20704:	mov	r2, #1
   20708:	mov	r1, #128	; 0x80
   2070c:	bl	10790 <myhtml_tree_open_elements_find_by_tag_idx@plt>
   20710:	subs	r5, r0, #0
   20714:	beq	2121c <myhtml_insertion_mode_in_body@@Base+0x155c>
   20718:	mov	r3, #8
   2071c:	mov	r2, #1
   20720:	mov	r1, #52	; 0x34
   20724:	mov	r0, r4
   20728:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   2072c:	cmp	r0, #0
   20730:	beq	20428 <myhtml_insertion_mode_in_body@@Base+0x768>
   20734:	mov	r2, #0
   20738:	mov	r0, r4
   2073c:	mov	r1, r2
   20740:	bl	10670 <myhtml_tree_generate_implied_end_tags@plt>
   20744:	mov	r0, r4
   20748:	bl	105bc <myhtml_tree_current_node@plt>
   2074c:	mov	r1, #52	; 0x34
   20750:	bl	10a3c <myhtml_is_html_node@plt>
   20754:	mov	r0, r4
   20758:	mov	r3, #0
   2075c:	mov	r2, #1
   20760:	mov	r1, #52	; 0x34
   20764:	bl	108e0 <myhtml_tree_open_elements_pop_until@plt>
   20768:	mov	r0, #0
   2076c:	b	2042c <myhtml_insertion_mode_in_body@@Base+0x76c>
   20770:	mov	r3, #8
   20774:	mov	r2, #1
   20778:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   2077c:	cmp	r0, #0
   20780:	beq	20428 <myhtml_insertion_mode_in_body@@Base+0x768>
   20784:	mov	r2, #1
   20788:	mov	r0, r4
   2078c:	ldr	r1, [r5]
   20790:	b	206d4 <myhtml_insertion_mode_in_body@@Base+0xa14>
   20794:	mov	r1, r5
   20798:	add	sp, sp, #12
   2079c:	ldrd	r4, [sp]
   207a0:	ldrd	r6, [sp, #8]
   207a4:	ldrd	r8, [sp, #16]
   207a8:	ldr	lr, [sp, #24]
   207ac:	add	sp, sp, #28
   207b0:	b	fcbc <myhtml_insertion_mode_in_body_other_end_tag@plt>
   207b4:	mov	r2, #0
   207b8:	mov	r1, #4
   207bc:	bl	105e0 <myhtml_tree_active_formatting_between_last_marker@plt>
   207c0:	cmp	r0, #0
   207c4:	beq	20808 <myhtml_insertion_mode_in_body@@Base+0xb48>
   207c8:	mov	r2, #4
   207cc:	mov	r1, r5
   207d0:	mov	r0, r4
   207d4:	bl	1082c <myhtml_tree_adoption_agency_algorithm@plt>
   207d8:	mov	r2, #0
   207dc:	mov	r1, #4
   207e0:	mov	r0, r4
   207e4:	bl	105e0 <myhtml_tree_active_formatting_between_last_marker@plt>
   207e8:	subs	r6, r0, #0
   207ec:	beq	20808 <myhtml_insertion_mode_in_body@@Base+0xb48>
   207f0:	mov	r1, r6
   207f4:	mov	r0, r4
   207f8:	bl	101d8 <myhtml_tree_open_elements_remove@plt>
   207fc:	mov	r1, r6
   20800:	mov	r0, r4
   20804:	bl	10838 <myhtml_tree_active_formatting_remove@plt>
   20808:	mov	r0, r4
   2080c:	bl	104d8 <myhtml_tree_active_formatting_reconstruction@plt>
   20810:	mov	r1, r5
   20814:	mov	r0, r4
   20818:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   2081c:	mov	r1, r0
   20820:	mov	r0, r4
   20824:	bl	107a8 <myhtml_tree_active_formatting_append_with_check@plt>
   20828:	mov	r0, #0
   2082c:	b	2042c <myhtml_insertion_mode_in_body@@Base+0x76c>
   20830:	mov	r3, #32
   20834:	mov	r2, #1
   20838:	mov	r1, #99	; 0x63
   2083c:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   20840:	cmp	r0, #0
   20844:	beq	20854 <myhtml_insertion_mode_in_body@@Base+0xb94>
   20848:	mov	r1, r5
   2084c:	mov	r0, r4
   20850:	bl	103dc <myhtml_tree_tags_close_p@plt>
   20854:	mov	r0, r4
   20858:	bl	104d8 <myhtml_tree_active_formatting_reconstruction@plt>
   2085c:	ldr	r3, [r4, #180]	; 0xb4
   20860:	mov	ip, #4
   20864:	mov	r1, r5
   20868:	mov	r0, r4
   2086c:	ldr	r2, [r4, #180]	; 0xb4
   20870:	str	ip, [r4, #164]	; 0xa4
   20874:	and	r3, r3, #2
   20878:	eor	r3, r3, r2
   2087c:	str	r3, [r4, #180]	; 0xb4
   20880:	bl	10ed4 <myhtml_tree_generic_raw_text_element_parsing_algorithm@plt>
   20884:	mov	r0, #0
   20888:	b	2042c <myhtml_insertion_mode_in_body@@Base+0x76c>
   2088c:	ldr	r3, [r0, #180]	; 0xb4
   20890:	tst	r3, #1
   20894:	beq	21048 <myhtml_insertion_mode_in_body@@Base+0x1388>
   20898:	mov	r3, #4
   2089c:	mov	r1, r5
   208a0:	mov	r0, r4
   208a4:	str	r3, [r4, #164]	; 0xa4
   208a8:	bl	10ed4 <myhtml_tree_generic_raw_text_element_parsing_algorithm@plt>
   208ac:	mov	r0, #0
   208b0:	b	2042c <myhtml_insertion_mode_in_body@@Base+0x76c>
   208b4:	bl	104d8 <myhtml_tree_active_formatting_reconstruction@plt>
   208b8:	mov	r1, r5
   208bc:	mov	r0, r4
   208c0:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   208c4:	mov	r0, r4
   208c8:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   208cc:	mov	r1, r5
   208d0:	ldr	r0, [r4, #8]
   208d4:	bl	10610 <myhtml_token_node_wait_for_done@plt>
   208d8:	ldr	r0, [pc, #2656]	; 21340 <myhtml_insertion_mode_in_body@@Base+0x1680>
   208dc:	mov	r2, #6
   208e0:	mov	r1, r5
   208e4:	mov	r3, #4
   208e8:	add	r0, pc, r0
   208ec:	stm	sp, {r0, r2}
   208f0:	ldr	r2, [pc, #2636]	; 21344 <myhtml_insertion_mode_in_body@@Base+0x1684>
   208f4:	ldr	r0, [r4, #8]
   208f8:	add	r2, pc, r2
   208fc:	bl	fcd4 <myhtml_token_attr_match_case@plt>
   20900:	cmp	r0, #0
   20904:	bne	20428 <myhtml_insertion_mode_in_body@@Base+0x768>
   20908:	ldr	r3, [r4, #180]	; 0xb4
   2090c:	ldr	r2, [r4, #180]	; 0xb4
   20910:	and	r3, r3, #2
   20914:	eor	r3, r3, r2
   20918:	str	r3, [r4, #180]	; 0xb4
   2091c:	b	2042c <myhtml_insertion_mode_in_body@@Base+0x76c>
   20920:	ldr	r3, [r0, #128]	; 0x80
   20924:	ldr	r2, [r3, #4]
   20928:	cmp	r2, #1
   2092c:	bls	20428 <myhtml_insertion_mode_in_body@@Base+0x768>
   20930:	ldr	r3, [r3]
   20934:	ldr	r3, [r3, #4]
   20938:	ldr	r2, [r3, #4]
   2093c:	cmp	r2, #23
   20940:	bne	20428 <myhtml_insertion_mode_in_body@@Base+0x768>
   20944:	ldr	r2, [r3, #8]
   20948:	cmp	r2, #1
   2094c:	bne	20428 <myhtml_insertion_mode_in_body@@Base+0x768>
   20950:	mov	r3, #0
   20954:	mov	r1, #128	; 0x80
   20958:	bl	10790 <myhtml_tree_open_elements_find_by_tag_idx@plt>
   2095c:	subs	r7, r0, #0
   20960:	bne	20428 <myhtml_insertion_mode_in_body@@Base+0x768>
   20964:	ldr	r2, [r4, #128]	; 0x80
   20968:	ldr	r3, [r4, #180]	; 0xb4
   2096c:	ldr	r1, [r4, #180]	; 0xb4
   20970:	and	r3, r3, #2
   20974:	eor	r3, r3, r1
   20978:	str	r3, [r4, #180]	; 0xb4
   2097c:	ldr	r3, [r2, #4]
   20980:	cmp	r3, #1
   20984:	bls	20428 <myhtml_insertion_mode_in_body@@Base+0x768>
   20988:	ldr	r3, [r2]
   2098c:	ldr	r6, [r3, #4]
   20990:	ldr	r0, [r6, #32]
   20994:	cmp	r0, #0
   20998:	streq	r5, [r6, #32]
   2099c:	beq	2042c <myhtml_insertion_mode_in_body@@Base+0x76c>
   209a0:	mov	r1, r5
   209a4:	ldr	r0, [r4, #8]
   209a8:	bl	10610 <myhtml_token_node_wait_for_done@plt>
   209ac:	ldr	r0, [r4, #8]
   209b0:	ldr	r1, [r6, #32]
   209b4:	bl	10610 <myhtml_token_node_wait_for_done@plt>
   209b8:	mov	r1, r5
   209bc:	ldr	r0, [r4, #8]
   209c0:	ldr	r2, [r6, #32]
   209c4:	ldr	r3, [r4, #44]	; 0x2c
   209c8:	bl	10628 <myhtml_token_node_attr_copy_with_check@plt>
   209cc:	mov	r0, r7
   209d0:	b	2042c <myhtml_insertion_mode_in_body@@Base+0x76c>
   209d4:	mov	r3, #8
   209d8:	mov	r2, #1
   209dc:	mov	r1, #25
   209e0:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   209e4:	cmp	r0, #0
   209e8:	beq	20a10 <myhtml_insertion_mode_in_body@@Base+0xd50>
   209ec:	mov	r2, #0
   209f0:	mov	r0, r4
   209f4:	mov	r1, r2
   209f8:	bl	10670 <myhtml_tree_generate_implied_end_tags@plt>
   209fc:	mov	r3, #0
   20a00:	mov	r2, #1
   20a04:	mov	r1, #25
   20a08:	mov	r0, r4
   20a0c:	bl	108e0 <myhtml_tree_open_elements_pop_until@plt>
   20a10:	mov	r0, r4
   20a14:	bl	104d8 <myhtml_tree_active_formatting_reconstruction@plt>
   20a18:	mov	r1, r5
   20a1c:	mov	r0, r4
   20a20:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   20a24:	b	205f4 <myhtml_insertion_mode_in_body@@Base+0x934>
   20a28:	ldr	r3, [r0, #140]	; 0x8c
   20a2c:	ldr	r3, [r3, #4]
   20a30:	cmp	r3, #0
   20a34:	bne	21300 <myhtml_insertion_mode_in_body@@Base+0x1640>
   20a38:	ldr	r1, [r0, #128]	; 0x80
   20a3c:	ldr	r2, [r1, #4]
   20a40:	cmp	r2, #0
   20a44:	beq	20a58 <myhtml_insertion_mode_in_body@@Base+0xd98>
   20a48:	ldr	r2, [r1, #4]
   20a4c:	add	r3, r3, #1
   20a50:	cmp	r2, r3
   20a54:	bhi	20a48 <myhtml_insertion_mode_in_body@@Base+0xd88>
   20a58:	mov	r0, r4
   20a5c:	bl	102a4 <myhtml_rules_stop_parsing@plt>
   20a60:	mov	r0, #0
   20a64:	b	2042c <myhtml_insertion_mode_in_body@@Base+0x76c>
   20a68:	ldr	r3, [r0, #128]	; 0x80
   20a6c:	ldr	r2, [r0, #180]	; 0xb4
   20a70:	ldr	r1, [r0, #180]	; 0xb4
   20a74:	and	r2, r2, #2
   20a78:	eor	r2, r2, r1
   20a7c:	str	r2, [r0, #180]	; 0xb4
   20a80:	ldr	r7, [r3, #4]
   20a84:	cmp	r7, #0
   20a88:	bne	20aec <myhtml_insertion_mode_in_body@@Base+0xe2c>
   20a8c:	b	203f4 <myhtml_insertion_mode_in_body@@Base+0x734>
   20a90:	bl	10a3c <myhtml_is_html_node@plt>
   20a94:	cmp	r0, #0
   20a98:	bne	212c8 <myhtml_insertion_mode_in_body@@Base+0x1608>
   20a9c:	ldr	r3, [r6, #8]
   20aa0:	add	r2, r3, #4
   20aa4:	ldr	r2, [r8, r2, lsl #2]
   20aa8:	tst	r2, #2
   20aac:	beq	20ae0 <myhtml_insertion_mode_in_body@@Base+0xe20>
   20ab0:	ldr	r1, [r6, #4]
   20ab4:	cmp	r1, #7
   20ab8:	cmpne	r1, #42	; 0x2a
   20abc:	movne	r2, #1
   20ac0:	moveq	r2, #0
   20ac4:	cmp	r1, #99	; 0x63
   20ac8:	moveq	r2, #0
   20acc:	andne	r2, r2, #1
   20ad0:	cmp	r2, #0
   20ad4:	bne	203f4 <myhtml_insertion_mode_in_body@@Base+0x734>
   20ad8:	cmp	r3, #1
   20adc:	bne	203f4 <myhtml_insertion_mode_in_body@@Base+0x734>
   20ae0:	cmp	r7, #0
   20ae4:	beq	203f4 <myhtml_insertion_mode_in_body@@Base+0x734>
   20ae8:	ldr	r3, [r4, #128]	; 0x80
   20aec:	sub	r7, r7, #1
   20af0:	ldr	r3, [r3]
   20af4:	ldr	r0, [r4, #28]
   20af8:	ldr	r6, [r3, r7, lsl #2]
   20afc:	ldr	r1, [r6, #4]
   20b00:	bl	109b8 <myhtml_tag_get_by_id@plt>
   20b04:	mov	r8, r0
   20b08:	mov	r1, #36	; 0x24
   20b0c:	mov	r0, r6
   20b10:	bl	10a3c <myhtml_is_html_node@plt>
   20b14:	subs	r9, r0, #0
   20b18:	mov	r1, #44	; 0x2c
   20b1c:	mov	r0, r6
   20b20:	beq	20a90 <myhtml_insertion_mode_in_body@@Base+0xdd0>
   20b24:	mov	r2, #1
   20b28:	mov	r1, #36	; 0x24
   20b2c:	mov	r0, r4
   20b30:	bl	10670 <myhtml_tree_generate_implied_end_tags@plt>
   20b34:	mov	r0, r4
   20b38:	bl	105bc <myhtml_tree_current_node@plt>
   20b3c:	mov	r1, #36	; 0x24
   20b40:	bl	10a3c <myhtml_is_html_node@plt>
   20b44:	mov	r3, #0
   20b48:	mov	r2, #1
   20b4c:	mov	r1, #36	; 0x24
   20b50:	mov	r0, r4
   20b54:	bl	108e0 <myhtml_tree_open_elements_pop_until@plt>
   20b58:	b	203f4 <myhtml_insertion_mode_in_body@@Base+0x734>
   20b5c:	bl	104d8 <myhtml_tree_active_formatting_reconstruction@plt>
   20b60:	mov	r1, r5
   20b64:	ldr	r0, [r4, #8]
   20b68:	bl	10610 <myhtml_token_node_wait_for_done@plt>
   20b6c:	mov	r0, r5
   20b70:	bl	ff14 <myhtml_token_adjust_mathml_attributes@plt>
   20b74:	mov	r0, r5
   20b78:	bl	10b74 <myhtml_token_adjust_foreign_attributes@plt>
   20b7c:	mov	r1, r5
   20b80:	mov	r0, r4
   20b84:	bl	10d18 <myhtml_tree_node_insert_foreign_element@plt>
   20b88:	ldr	r3, [r5, #48]	; 0x30
   20b8c:	mov	r2, #2
   20b90:	str	r2, [r0, #8]
   20b94:	tst	r3, #2
   20b98:	beq	20428 <myhtml_insertion_mode_in_body@@Base+0x768>
   20b9c:	mov	r0, r4
   20ba0:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   20ba4:	mov	r0, #0
   20ba8:	b	2042c <myhtml_insertion_mode_in_body@@Base+0x76c>
   20bac:	bl	104d8 <myhtml_tree_active_formatting_reconstruction@plt>
   20bb0:	mov	r1, r5
   20bb4:	mov	r0, r4
   20bb8:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   20bbc:	mov	r0, r4
   20bc0:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   20bc4:	b	205f4 <myhtml_insertion_mode_in_body@@Base+0x934>
   20bc8:	bl	104d8 <myhtml_tree_active_formatting_reconstruction@plt>
   20bcc:	mov	r1, r5
   20bd0:	mov	r0, r4
   20bd4:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   20bd8:	ldr	r3, [r4]
   20bdc:	mov	r0, r4
   20be0:	ldr	r1, [r3, #36]	; 0x24
   20be4:	bl	10070 <myhtml_tree_active_formatting_append@plt>
   20be8:	b	205f4 <myhtml_insertion_mode_in_body@@Base+0x934>
   20bec:	mov	r3, #0
   20bf0:	mov	r2, #1
   20bf4:	mov	r1, #128	; 0x80
   20bf8:	bl	10790 <myhtml_tree_open_elements_find_by_tag_idx@plt>
   20bfc:	ldr	r3, [r4, #104]	; 0x68
   20c00:	mov	r6, r0
   20c04:	cmp	r3, #0
   20c08:	beq	21320 <myhtml_insertion_mode_in_body@@Base+0x1660>
   20c0c:	cmp	r0, #0
   20c10:	beq	20428 <myhtml_insertion_mode_in_body@@Base+0x768>
   20c14:	mov	r3, #32
   20c18:	mov	r2, #1
   20c1c:	mov	r1, #99	; 0x63
   20c20:	mov	r0, r4
   20c24:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   20c28:	cmp	r0, #0
   20c2c:	beq	2041c <myhtml_insertion_mode_in_body@@Base+0x75c>
   20c30:	mov	r1, r5
   20c34:	mov	r0, r4
   20c38:	bl	103dc <myhtml_tree_tags_close_p@plt>
   20c3c:	mov	r1, r5
   20c40:	mov	r0, r4
   20c44:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   20c48:	mov	r3, r0
   20c4c:	cmp	r6, #0
   20c50:	moveq	r0, r6
   20c54:	streq	r3, [r4, #104]	; 0x68
   20c58:	bne	20428 <myhtml_insertion_mode_in_body@@Base+0x768>
   20c5c:	b	2042c <myhtml_insertion_mode_in_body@@Base+0x76c>
   20c60:	ldr	r3, [r0, #128]	; 0x80
   20c64:	ldr	r2, [r3, #4]
   20c68:	cmp	r2, #1
   20c6c:	bls	20428 <myhtml_insertion_mode_in_body@@Base+0x768>
   20c70:	ldr	r3, [r3]
   20c74:	ldr	r0, [r3, #4]
   20c78:	ldr	r3, [r0, #4]
   20c7c:	cmp	r3, #23
   20c80:	bne	20428 <myhtml_insertion_mode_in_body@@Base+0x768>
   20c84:	ldr	r6, [r0, #8]
   20c88:	cmp	r6, #1
   20c8c:	bne	20428 <myhtml_insertion_mode_in_body@@Base+0x768>
   20c90:	ldr	r3, [r4, #180]	; 0xb4
   20c94:	tst	r3, #2
   20c98:	beq	20428 <myhtml_insertion_mode_in_body@@Base+0x768>
   20c9c:	bl	10d84 <myhtml_tree_node_remove@plt>
   20ca0:	mov	r3, r6
   20ca4:	mov	r2, r6
   20ca8:	mov	r1, #65	; 0x41
   20cac:	mov	r0, r4
   20cb0:	bl	108e0 <myhtml_tree_open_elements_pop_until@plt>
   20cb4:	mov	r1, r5
   20cb8:	mov	r0, r4
   20cbc:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   20cc0:	mov	r3, #19
   20cc4:	mov	r0, #0
   20cc8:	str	r3, [r4, #168]	; 0xa8
   20ccc:	b	2042c <myhtml_insertion_mode_in_body@@Base+0x76c>
   20cd0:	mov	r3, #32
   20cd4:	mov	r2, #1
   20cd8:	mov	r1, #99	; 0x63
   20cdc:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   20ce0:	cmp	r0, #0
   20ce4:	beq	20cf4 <myhtml_insertion_mode_in_body@@Base+0x1034>
   20ce8:	mov	r1, r5
   20cec:	mov	r0, r4
   20cf0:	bl	103dc <myhtml_tree_tags_close_p@plt>
   20cf4:	mov	r0, r4
   20cf8:	bl	105bc <myhtml_tree_current_node@plt>
   20cfc:	ldr	r3, [r0, #4]
   20d00:	sub	r3, r3, #55	; 0x37
   20d04:	cmp	r3, #5
   20d08:	bhi	2041c <myhtml_insertion_mode_in_body@@Base+0x75c>
   20d0c:	ldr	r3, [r0, #8]
   20d10:	cmp	r3, #1
   20d14:	bne	2041c <myhtml_insertion_mode_in_body@@Base+0x75c>
   20d18:	mov	r0, r4
   20d1c:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   20d20:	b	2041c <myhtml_insertion_mode_in_body@@Base+0x75c>
   20d24:	mov	r3, #32
   20d28:	mov	r2, #1
   20d2c:	mov	r1, #99	; 0x63
   20d30:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   20d34:	cmp	r0, #0
   20d38:	beq	20d48 <myhtml_insertion_mode_in_body@@Base+0x1088>
   20d3c:	mov	r1, r5
   20d40:	mov	r0, r4
   20d44:	bl	103dc <myhtml_tree_tags_close_p@plt>
   20d48:	mov	r0, r4
   20d4c:	bl	105bc <myhtml_tree_current_node@plt>
   20d50:	mov	r1, #85	; 0x55
   20d54:	bl	10a3c <myhtml_is_html_node@plt>
   20d58:	cmp	r0, #0
   20d5c:	beq	20bb0 <myhtml_insertion_mode_in_body@@Base+0xef0>
   20d60:	mov	r0, r4
   20d64:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   20d68:	b	20bb0 <myhtml_insertion_mode_in_body@@Base+0xef0>
   20d6c:	ldr	r3, [r5, #48]	; 0x30
   20d70:	tst	r3, #2048	; 0x800
   20d74:	beq	21280 <myhtml_insertion_mode_in_body@@Base+0x15c0>
   20d78:	mov	r1, r5
   20d7c:	bl	10760 <myhtml_insertion_fix_for_null_char_drop_all@plt>
   20d80:	ldr	r3, [r5, #12]
   20d84:	cmp	r3, #0
   20d88:	beq	20428 <myhtml_insertion_mode_in_body@@Base+0x768>
   20d8c:	mov	r0, r4
   20d90:	bl	104d8 <myhtml_tree_active_formatting_reconstruction@plt>
   20d94:	mov	r1, r5
   20d98:	mov	r0, r4
   20d9c:	bl	ff2c <myhtml_tree_node_insert_text@plt>
   20da0:	ldr	r3, [r5, #48]	; 0x30
   20da4:	ands	r3, r3, #8
   20da8:	bne	20428 <myhtml_insertion_mode_in_body@@Base+0x768>
   20dac:	ldr	r2, [r4, #180]	; 0xb4
   20db0:	mov	r0, r3
   20db4:	ldr	r1, [r4, #180]	; 0xb4
   20db8:	and	r3, r2, #2
   20dbc:	eor	r3, r3, r1
   20dc0:	str	r3, [r4, #180]	; 0xb4
   20dc4:	b	2042c <myhtml_insertion_mode_in_body@@Base+0x76c>
   20dc8:	mov	r1, r5
   20dcc:	mov	r2, #0
   20dd0:	bl	101fc <myhtml_tree_node_insert_comment@plt>
   20dd4:	mov	r0, #0
   20dd8:	b	2042c <myhtml_insertion_mode_in_body@@Base+0x76c>
   20ddc:	mov	r1, r5
   20de0:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   20de4:	mov	r0, r4
   20de8:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   20dec:	mov	r0, #0
   20df0:	b	2042c <myhtml_insertion_mode_in_body@@Base+0x76c>
   20df4:	mov	r3, #32
   20df8:	mov	r2, #1
   20dfc:	mov	r1, #99	; 0x63
   20e00:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   20e04:	cmp	r0, #0
   20e08:	beq	20e18 <myhtml_insertion_mode_in_body@@Base+0x1158>
   20e0c:	mov	r1, r5
   20e10:	mov	r0, r4
   20e14:	bl	103dc <myhtml_tree_tags_close_p@plt>
   20e18:	mov	r1, r5
   20e1c:	mov	r0, r4
   20e20:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   20e24:	mov	r3, #6
   20e28:	mov	r0, #0
   20e2c:	str	r3, [r4, #164]	; 0xa4
   20e30:	b	2042c <myhtml_insertion_mode_in_body@@Base+0x76c>
   20e34:	mov	r3, #8
   20e38:	mov	r2, #1
   20e3c:	mov	r1, #109	; 0x6d
   20e40:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   20e44:	cmp	r0, #0
   20e48:	beq	20e5c <myhtml_insertion_mode_in_body@@Base+0x119c>
   20e4c:	mov	r2, #0
   20e50:	mov	r0, r4
   20e54:	mov	r1, r2
   20e58:	bl	10670 <myhtml_tree_generate_implied_end_tags@plt>
   20e5c:	mov	r0, r4
   20e60:	bl	105bc <myhtml_tree_current_node@plt>
   20e64:	b	2041c <myhtml_insertion_mode_in_body@@Base+0x75c>
   20e68:	mov	r3, #8
   20e6c:	mov	r2, #1
   20e70:	mov	r1, #109	; 0x6d
   20e74:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   20e78:	cmp	r0, #0
   20e7c:	beq	20e5c <myhtml_insertion_mode_in_body@@Base+0x119c>
   20e80:	mov	r2, #1
   20e84:	mov	r1, #108	; 0x6c
   20e88:	mov	r0, r4
   20e8c:	bl	10670 <myhtml_tree_generate_implied_end_tags@plt>
   20e90:	b	20e5c <myhtml_insertion_mode_in_body@@Base+0x119c>
   20e94:	bl	104d8 <myhtml_tree_active_formatting_reconstruction@plt>
   20e98:	mov	r1, r5
   20e9c:	mov	r0, r4
   20ea0:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   20ea4:	ldr	r2, [r4, #168]	; 0xa8
   20ea8:	ldr	r3, [r4, #180]	; 0xb4
   20eac:	ldr	r1, [r4, #180]	; 0xb4
   20eb0:	bic	r0, r2, #2
   20eb4:	sub	r2, r2, #12
   20eb8:	cmp	r0, #8
   20ebc:	cmpne	r2, #2
   20ec0:	and	r3, r3, #2
   20ec4:	movls	r0, #1
   20ec8:	movhi	r0, #0
   20ecc:	movls	r0, #0
   20ed0:	eor	r3, r3, r1
   20ed4:	str	r3, [r4, #180]	; 0xb4
   20ed8:	movls	r3, #16
   20edc:	movhi	r3, #15
   20ee0:	str	r3, [r4, #168]	; 0xa8
   20ee4:	b	2042c <myhtml_insertion_mode_in_body@@Base+0x76c>
   20ee8:	bl	104d8 <myhtml_tree_active_formatting_reconstruction@plt>
   20eec:	mov	r1, r5
   20ef0:	ldr	r0, [r4, #8]
   20ef4:	bl	10610 <myhtml_token_node_wait_for_done@plt>
   20ef8:	mov	r0, r5
   20efc:	bl	10178 <myhtml_token_adjust_svg_attributes@plt>
   20f00:	mov	r0, r5
   20f04:	bl	10b74 <myhtml_token_adjust_foreign_attributes@plt>
   20f08:	mov	r1, r5
   20f0c:	mov	r0, r4
   20f10:	bl	10d18 <myhtml_tree_node_insert_foreign_element@plt>
   20f14:	ldr	r3, [r5, #48]	; 0x30
   20f18:	mov	r2, #3
   20f1c:	str	r2, [r0, #8]
   20f20:	tst	r3, #2
   20f24:	beq	20428 <myhtml_insertion_mode_in_body@@Base+0x768>
   20f28:	b	20b9c <myhtml_insertion_mode_in_body@@Base+0xedc>
   20f2c:	ldr	r3, [r0, #176]	; 0xb0
   20f30:	tst	r3, #1
   20f34:	beq	212a0 <myhtml_insertion_mode_in_body@@Base+0x15e0>
   20f38:	mov	r1, r5
   20f3c:	mov	r0, r4
   20f40:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   20f44:	ldr	r3, [r4, #180]	; 0xb4
   20f48:	mov	r1, #8
   20f4c:	mov	r0, #0
   20f50:	ldr	r2, [r4, #180]	; 0xb4
   20f54:	str	r1, [r4, #168]	; 0xa8
   20f58:	and	r3, r3, #2
   20f5c:	eor	r3, r3, r2
   20f60:	str	r3, [r4, #180]	; 0xb4
   20f64:	b	2042c <myhtml_insertion_mode_in_body@@Base+0x76c>
   20f68:	mov	r1, r5
   20f6c:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   20f70:	ldr	r3, [r4, #180]	; 0xb4
   20f74:	mov	r2, #2
   20f78:	mov	r1, #7
   20f7c:	mov	r0, #0
   20f80:	str	r2, [r4, #164]	; 0xa4
   20f84:	ldr	r2, [r4, #168]	; 0xa8
   20f88:	str	r1, [r4, #168]	; 0xa8
   20f8c:	orr	r3, r3, #192	; 0xc0
   20f90:	str	r3, [r4, #180]	; 0xb4
   20f94:	ldr	r3, [r4, #180]	; 0xb4
   20f98:	str	r2, [r4, #172]	; 0xac
   20f9c:	ldr	r2, [r4, #180]	; 0xb4
   20fa0:	and	r3, r3, #2
   20fa4:	eor	r3, r3, r2
   20fa8:	str	r3, [r4, #180]	; 0xb4
   20fac:	b	2042c <myhtml_insertion_mode_in_body@@Base+0x76c>
   20fb0:	mov	r3, #32
   20fb4:	mov	r2, #1
   20fb8:	mov	r1, #99	; 0x63
   20fbc:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   20fc0:	cmp	r0, #0
   20fc4:	beq	20fd4 <myhtml_insertion_mode_in_body@@Base+0x1314>
   20fc8:	mov	r1, r5
   20fcc:	mov	r0, r4
   20fd0:	bl	103dc <myhtml_tree_tags_close_p@plt>
   20fd4:	mov	r1, r5
   20fd8:	mov	r0, r4
   20fdc:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   20fe0:	ldr	r3, [r4, #180]	; 0xb4
   20fe4:	mov	r0, #0
   20fe8:	orr	r3, r3, #192	; 0xc0
   20fec:	str	r3, [r4, #180]	; 0xb4
   20ff0:	b	20908 <myhtml_insertion_mode_in_body@@Base+0xc48>
   20ff4:	mov	r3, #32
   20ff8:	mov	r2, #1
   20ffc:	mov	r1, #99	; 0x63
   21000:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   21004:	cmp	r0, #0
   21008:	beq	21018 <myhtml_insertion_mode_in_body@@Base+0x1358>
   2100c:	mov	r1, r5
   21010:	mov	r0, r4
   21014:	bl	103dc <myhtml_tree_tags_close_p@plt>
   21018:	mov	r0, r4
   2101c:	bl	105bc <myhtml_tree_current_node@plt>
   21020:	mov	r1, #85	; 0x55
   21024:	bl	10a3c <myhtml_is_html_node@plt>
   21028:	cmp	r0, #0
   2102c:	beq	2041c <myhtml_insertion_mode_in_body@@Base+0x75c>
   21030:	b	20d18 <myhtml_insertion_mode_in_body@@Base+0x1058>
   21034:	bl	105bc <myhtml_tree_current_node@plt>
   21038:	mov	r1, #97	; 0x61
   2103c:	bl	10a3c <myhtml_is_html_node@plt>
   21040:	cmp	r0, #0
   21044:	bne	21130 <myhtml_insertion_mode_in_body@@Base+0x1470>
   21048:	mov	r0, r4
   2104c:	bl	104d8 <myhtml_tree_active_formatting_reconstruction@plt>
   21050:	mov	r1, r5
   21054:	mov	r0, r4
   21058:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   2105c:	mov	r0, #0
   21060:	b	2042c <myhtml_insertion_mode_in_body@@Base+0x76c>
   21064:	bl	104d8 <myhtml_tree_active_formatting_reconstruction@plt>
   21068:	mov	r3, #8
   2106c:	mov	r2, #1
   21070:	mov	r1, #90	; 0x5a
   21074:	mov	r0, r4
   21078:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   2107c:	cmp	r0, #0
   21080:	beq	20810 <myhtml_insertion_mode_in_body@@Base+0xb50>
   21084:	mov	r2, #90	; 0x5a
   21088:	mov	r1, r5
   2108c:	mov	r0, r4
   21090:	bl	1082c <myhtml_tree_adoption_agency_algorithm@plt>
   21094:	b	20808 <myhtml_insertion_mode_in_body@@Base+0xb48>
   21098:	mov	r3, #0
   2109c:	mov	r2, #1
   210a0:	mov	r1, #128	; 0x80
   210a4:	bl	10790 <myhtml_tree_open_elements_find_by_tag_idx@plt>
   210a8:	subs	r6, r0, #0
   210ac:	bne	20428 <myhtml_insertion_mode_in_body@@Base+0x768>
   210b0:	ldr	r3, [r4, #128]	; 0x80
   210b4:	ldr	r2, [r3, #4]
   210b8:	cmp	r2, #0
   210bc:	beq	20428 <myhtml_insertion_mode_in_body@@Base+0x768>
   210c0:	ldr	r3, [r3]
   210c4:	ldr	r7, [r3]
   210c8:	ldr	r0, [r7, #32]
   210cc:	cmp	r0, #0
   210d0:	streq	r5, [r7, #32]
   210d4:	beq	2042c <myhtml_insertion_mode_in_body@@Base+0x76c>
   210d8:	mov	r1, r5
   210dc:	ldr	r0, [r4, #8]
   210e0:	bl	10610 <myhtml_token_node_wait_for_done@plt>
   210e4:	ldr	r0, [r4, #8]
   210e8:	ldr	r1, [r7, #32]
   210ec:	bl	10610 <myhtml_token_node_wait_for_done@plt>
   210f0:	mov	r1, r5
   210f4:	ldr	r0, [r4, #8]
   210f8:	ldr	r2, [r7, #32]
   210fc:	ldr	r3, [r4, #44]	; 0x2c
   21100:	bl	10628 <myhtml_token_node_attr_copy_with_check@plt>
   21104:	mov	r0, r6
   21108:	b	2042c <myhtml_insertion_mode_in_body@@Base+0x76c>
   2110c:	mov	r3, #69	; 0x45
   21110:	mov	r0, #1
   21114:	str	r3, [r5]
   21118:	b	2042c <myhtml_insertion_mode_in_body@@Base+0x76c>
   2111c:	bl	105bc <myhtml_tree_current_node@plt>
   21120:	mov	r1, #85	; 0x55
   21124:	bl	10a3c <myhtml_is_html_node@plt>
   21128:	cmp	r0, #0
   2112c:	beq	21048 <myhtml_insertion_mode_in_body@@Base+0x1388>
   21130:	mov	r0, r4
   21134:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   21138:	b	21048 <myhtml_insertion_mode_in_body@@Base+0x1388>
   2113c:	bl	104d8 <myhtml_tree_active_formatting_reconstruction@plt>
   21140:	mov	r1, r5
   21144:	mov	r0, r4
   21148:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   2114c:	b	20428 <myhtml_insertion_mode_in_body@@Base+0x768>
   21150:	mov	r2, #0
   21154:	mov	r0, r4
   21158:	mov	r1, r2
   2115c:	bl	10670 <myhtml_tree_generate_implied_end_tags@plt>
   21160:	mov	r0, r4
   21164:	bl	105bc <myhtml_tree_current_node@plt>
   21168:	ldr	r1, [r5]
   2116c:	bl	10a3c <myhtml_is_html_node@plt>
   21170:	ldr	r3, [r4, #128]	; 0x80
   21174:	ldr	r2, [r3, #4]
   21178:	cmp	r2, #0
   2117c:	beq	20428 <myhtml_insertion_mode_in_body@@Base+0x768>
   21180:	ldr	r2, [r3, #4]
   21184:	sub	r2, r2, #1
   21188:	str	r2, [r3, #4]
   2118c:	ldr	r2, [r3, #4]
   21190:	ldr	r2, [r7, r2, lsl #2]
   21194:	ldr	r2, [r2, #4]
   21198:	cmp	r2, #55	; 0x37
   2119c:	beq	21204 <myhtml_insertion_mode_in_body@@Base+0x1544>
   211a0:	ldr	r2, [r3, #4]
   211a4:	ldr	r2, [r7, r2, lsl #2]
   211a8:	ldr	r2, [r2, #4]
   211ac:	cmp	r2, #56	; 0x38
   211b0:	beq	21204 <myhtml_insertion_mode_in_body@@Base+0x1544>
   211b4:	ldr	r2, [r3, #4]
   211b8:	ldr	r2, [r7, r2, lsl #2]
   211bc:	ldr	r2, [r2, #4]
   211c0:	cmp	r2, #57	; 0x39
   211c4:	beq	21204 <myhtml_insertion_mode_in_body@@Base+0x1544>
   211c8:	ldr	r2, [r3, #4]
   211cc:	ldr	r2, [r7, r2, lsl #2]
   211d0:	ldr	r2, [r2, #4]
   211d4:	cmp	r2, #58	; 0x3a
   211d8:	beq	21204 <myhtml_insertion_mode_in_body@@Base+0x1544>
   211dc:	ldr	r2, [r3, #4]
   211e0:	ldr	r2, [r7, r2, lsl #2]
   211e4:	ldr	r2, [r2, #4]
   211e8:	cmp	r2, #59	; 0x3b
   211ec:	beq	21204 <myhtml_insertion_mode_in_body@@Base+0x1544>
   211f0:	ldr	r2, [r3, #4]
   211f4:	ldr	r2, [r7, r2, lsl #2]
   211f8:	ldr	r2, [r2, #4]
   211fc:	cmp	r2, #60	; 0x3c
   21200:	bne	21174 <myhtml_insertion_mode_in_body@@Base+0x14b4>
   21204:	ldr	r2, [r3, #4]
   21208:	ldr	r2, [r7, r2, lsl #2]
   2120c:	ldr	r2, [r2, #8]
   21210:	cmp	r2, #1
   21214:	bne	21174 <myhtml_insertion_mode_in_body@@Base+0x14b4>
   21218:	b	20428 <myhtml_insertion_mode_in_body@@Base+0x768>
   2121c:	ldr	r6, [r4, #104]	; 0x68
   21220:	str	r5, [r4, #104]	; 0x68
   21224:	cmp	r6, #0
   21228:	beq	20428 <myhtml_insertion_mode_in_body@@Base+0x768>
   2122c:	mov	r1, #8
   21230:	mov	r0, r6
   21234:	bl	fbf0 <myhtml_tree_element_in_scope_by_node@plt>
   21238:	cmp	r0, #0
   2123c:	beq	20428 <myhtml_insertion_mode_in_body@@Base+0x768>
   21240:	mov	r2, r5
   21244:	mov	r1, r5
   21248:	mov	r0, r4
   2124c:	bl	10670 <myhtml_tree_generate_implied_end_tags@plt>
   21250:	mov	r0, r4
   21254:	bl	105bc <myhtml_tree_current_node@plt>
   21258:	mov	r0, r4
   2125c:	mov	r1, r6
   21260:	bl	101d8 <myhtml_tree_open_elements_remove@plt>
   21264:	mov	r0, r5
   21268:	b	2042c <myhtml_insertion_mode_in_body@@Base+0x76c>
   2126c:	mov	r2, #1
   21270:	mov	r1, #99	; 0x63
   21274:	mov	r0, r4
   21278:	bl	10904 <myhtml_tree_node_insert@plt>
   2127c:	b	20494 <myhtml_insertion_mode_in_body@@Base+0x7d4>
   21280:	bl	104d8 <myhtml_tree_active_formatting_reconstruction@plt>
   21284:	mov	r1, r5
   21288:	mov	r0, r4
   2128c:	bl	ff2c <myhtml_tree_node_insert_text@plt>
   21290:	ldr	r3, [r5, #48]	; 0x30
   21294:	ands	r0, r3, #8
   21298:	bne	20428 <myhtml_insertion_mode_in_body@@Base+0x768>
   2129c:	b	20908 <myhtml_insertion_mode_in_body@@Base+0xc48>
   212a0:	mov	r3, #32
   212a4:	mov	r2, #1
   212a8:	mov	r1, #99	; 0x63
   212ac:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   212b0:	cmp	r0, #0
   212b4:	beq	20f38 <myhtml_insertion_mode_in_body@@Base+0x1278>
   212b8:	mov	r1, r5
   212bc:	mov	r0, r4
   212c0:	bl	103dc <myhtml_tree_tags_close_p@plt>
   212c4:	b	20f38 <myhtml_insertion_mode_in_body@@Base+0x1278>
   212c8:	mov	r2, #1
   212cc:	mov	r1, #44	; 0x2c
   212d0:	mov	r0, r4
   212d4:	bl	10670 <myhtml_tree_generate_implied_end_tags@plt>
   212d8:	mov	r0, r4
   212dc:	bl	105bc <myhtml_tree_current_node@plt>
   212e0:	mov	r1, #44	; 0x2c
   212e4:	bl	10a3c <myhtml_is_html_node@plt>
   212e8:	mov	r3, r9
   212ec:	mov	r2, #1
   212f0:	mov	r1, #44	; 0x2c
   212f4:	mov	r0, r4
   212f8:	bl	108e0 <myhtml_tree_open_elements_pop_until@plt>
   212fc:	b	203f4 <myhtml_insertion_mode_in_body@@Base+0x734>
   21300:	mov	r1, r5
   21304:	add	sp, sp, #12
   21308:	ldrd	r4, [sp]
   2130c:	ldrd	r6, [sp, #8]
   21310:	ldrd	r8, [sp, #16]
   21314:	ldr	lr, [sp, #24]
   21318:	add	sp, sp, #28
   2131c:	b	fd40 <myhtml_insertion_mode_in_template@plt>
   21320:	mov	r3, #32
   21324:	mov	r2, #1
   21328:	mov	r1, #99	; 0x63
   2132c:	mov	r0, r4
   21330:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   21334:	cmp	r0, #0
   21338:	bne	20c30 <myhtml_insertion_mode_in_body@@Base+0xf70>
   2133c:	b	20c3c <myhtml_insertion_mode_in_body@@Base+0xf7c>
   21340:	strdeq	sp, [sp], -ip
   21344:	andeq	sl, r1, ip, lsr #22

00021348 <myhtml_insertion_mode_before_head@@Base>:
   21348:	ldr	r2, [r1, #48]	; 0x30
   2134c:	strd	r4, [sp, #-16]!
   21350:	ldr	r5, [r1]
   21354:	str	r6, [sp, #8]
   21358:	mov	r6, r0
   2135c:	str	lr, [sp, #12]
   21360:	ands	r4, r2, #1
   21364:	beq	213d0 <myhtml_insertion_mode_before_head@@Base+0x88>
   21368:	cmp	r5, #61	; 0x3d
   2136c:	beq	213ac <myhtml_insertion_mode_before_head@@Base+0x64>
   21370:	bhi	213f8 <myhtml_insertion_mode_before_head@@Base+0xb0>
   21374:	sub	r2, r5, #23
   21378:	cmp	r2, #1
   2137c:	bls	213ac <myhtml_insertion_mode_before_head@@Base+0x64>
   21380:	mov	r4, #0
   21384:	mov	r0, r4
   21388:	ldrd	r4, [sp]
   2138c:	ldr	r6, [sp, #8]
   21390:	add	sp, sp, #12
   21394:	pop	{pc}		; (ldr pc, [sp], #4)
   21398:	ldr	r3, [r1, #48]	; 0x30
   2139c:	tst	r3, #8
   213a0:	bne	21384 <myhtml_insertion_mode_before_head@@Base+0x3c>
   213a4:	ldr	r0, [r0, #8]
   213a8:	bl	100b8 <myhtml_insertion_fix_emit_for_text_begin_ws@plt>
   213ac:	mov	r2, #1
   213b0:	mov	r1, #61	; 0x3d
   213b4:	mov	r0, r6
   213b8:	mov	r4, #1
   213bc:	bl	10904 <myhtml_tree_node_insert@plt>
   213c0:	mov	r3, #3
   213c4:	str	r0, [r6, #92]	; 0x5c
   213c8:	str	r3, [r6, #168]	; 0xa8
   213cc:	b	21384 <myhtml_insertion_mode_before_head@@Base+0x3c>
   213d0:	cmp	r5, #3
   213d4:	beq	21384 <myhtml_insertion_mode_before_head@@Base+0x3c>
   213d8:	bhi	21404 <myhtml_insertion_mode_before_head@@Base+0xbc>
   213dc:	cmp	r5, #1
   213e0:	beq	21398 <myhtml_insertion_mode_before_head@@Base+0x50>
   213e4:	cmp	r5, #2
   213e8:	bne	213ac <myhtml_insertion_mode_before_head@@Base+0x64>
   213ec:	mov	r2, r4
   213f0:	bl	101fc <myhtml_tree_node_insert_comment@plt>
   213f4:	b	21384 <myhtml_insertion_mode_before_head@@Base+0x3c>
   213f8:	cmp	r5, #65	; 0x41
   213fc:	bne	21380 <myhtml_insertion_mode_before_head@@Base+0x38>
   21400:	b	213ac <myhtml_insertion_mode_before_head@@Base+0x64>
   21404:	cmp	r5, #61	; 0x3d
   21408:	beq	21428 <myhtml_insertion_mode_before_head@@Base+0xe0>
   2140c:	cmp	r5, #65	; 0x41
   21410:	bne	213ac <myhtml_insertion_mode_before_head@@Base+0x64>
   21414:	ldrd	r4, [sp]
   21418:	ldr	r6, [sp, #8]
   2141c:	ldr	lr, [sp, #12]
   21420:	add	sp, sp, #16
   21424:	b	105d4 <myhtml_insertion_mode_in_body@plt>
   21428:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   2142c:	mov	r3, #3
   21430:	str	r0, [r6, #92]	; 0x5c
   21434:	str	r3, [r6, #168]	; 0xa8
   21438:	b	21384 <myhtml_insertion_mode_before_head@@Base+0x3c>

0002143c <myhtml_insertion_mode_in_head@@Base>:
   2143c:	ldr	r3, [r1, #48]	; 0x30
   21440:	strd	r4, [sp, #-20]!	; 0xffffffec
   21444:	ldr	r4, [r1]
   21448:	strd	r6, [sp, #8]
   2144c:	mov	r6, r0
   21450:	str	lr, [sp, #16]
   21454:	sub	sp, sp, #12
   21458:	tst	r3, #1
   2145c:	beq	214f0 <myhtml_insertion_mode_in_head@@Base+0xb4>
   21460:	cmp	r4, #61	; 0x3d
   21464:	beq	21748 <myhtml_insertion_mode_in_head@@Base+0x30c>
   21468:	bls	21724 <myhtml_insertion_mode_in_head@@Base+0x2e8>
   2146c:	cmp	r4, #65	; 0x41
   21470:	beq	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   21474:	cmp	r4, #128	; 0x80
   21478:	bne	2171c <myhtml_insertion_mode_in_head@@Base+0x2e0>
   2147c:	mov	r3, #0
   21480:	mov	r2, #1
   21484:	mov	r1, r4
   21488:	bl	fc50 <myhtml_tree_open_elements_find_by_tag_idx_reverse@plt>
   2148c:	cmp	r0, #0
   21490:	beq	214dc <myhtml_insertion_mode_in_head@@Base+0xa0>
   21494:	mov	r2, #0
   21498:	mov	r0, r6
   2149c:	mov	r1, r2
   214a0:	bl	fdd0 <myhtml_tree_generate_all_implied_end_tags@plt>
   214a4:	mov	r0, r6
   214a8:	bl	105bc <myhtml_tree_current_node@plt>
   214ac:	mov	r1, r4
   214b0:	mov	r3, #0
   214b4:	mov	r2, #1
   214b8:	mov	r0, r6
   214bc:	bl	108e0 <myhtml_tree_open_elements_pop_until@plt>
   214c0:	mov	r0, r6
   214c4:	bl	10df0 <myhtml_tree_active_formatting_up_to_last_marker@plt>
   214c8:	mov	r0, r6
   214cc:	bl	10970 <myhtml_tree_template_insertion_pop@plt>
   214d0:	mov	r0, r6
   214d4:	bl	106c4 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   214d8:	mov	r0, #0
   214dc:	add	sp, sp, #12
   214e0:	ldrd	r4, [sp]
   214e4:	ldrd	r6, [sp, #8]
   214e8:	add	sp, sp, #16
   214ec:	pop	{pc}		; (ldr pc, [sp], #4)
   214f0:	sub	r4, r4, #1
   214f4:	mov	r5, r1
   214f8:	cmp	r4, #133	; 0x85
   214fc:	addls	pc, pc, r4, lsl #2
   21500:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   21504:	b	217b4 <myhtml_insertion_mode_in_head@@Base+0x378>
   21508:	b	217cc <myhtml_insertion_mode_in_head@@Base+0x390>
   2150c:	b	2171c <myhtml_insertion_mode_in_head@@Base+0x2e0>
   21510:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   21514:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   21518:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   2151c:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   21520:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   21524:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   21528:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   2152c:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   21530:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   21534:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   21538:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   2153c:	b	2175c <myhtml_insertion_mode_in_head@@Base+0x320>
   21540:	b	2175c <myhtml_insertion_mode_in_head@@Base+0x320>
   21544:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   21548:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   2154c:	b	2175c <myhtml_insertion_mode_in_head@@Base+0x320>
   21550:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   21554:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   21558:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   2155c:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   21560:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   21564:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   21568:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   2156c:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   21570:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   21574:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   21578:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   2157c:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   21580:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   21584:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   21588:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   2158c:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   21590:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   21594:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   21598:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   2159c:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   215a0:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   215a4:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   215a8:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   215ac:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   215b0:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   215b4:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   215b8:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   215bc:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   215c0:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   215c4:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   215c8:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   215cc:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   215d0:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   215d4:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   215d8:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   215dc:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   215e0:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   215e4:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   215e8:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   215ec:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   215f0:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   215f4:	b	2171c <myhtml_insertion_mode_in_head@@Base+0x2e0>
   215f8:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   215fc:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   21600:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   21604:	b	2186c <myhtml_insertion_mode_in_head@@Base+0x430>
   21608:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   2160c:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   21610:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   21614:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   21618:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   2161c:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   21620:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   21624:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   21628:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   2162c:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   21630:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   21634:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   21638:	b	2175c <myhtml_insertion_mode_in_head@@Base+0x320>
   2163c:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   21640:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   21644:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   21648:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   2164c:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   21650:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   21654:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   21658:	b	2175c <myhtml_insertion_mode_in_head@@Base+0x320>
   2165c:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   21660:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   21664:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   21668:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   2166c:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   21670:	b	21770 <myhtml_insertion_mode_in_head@@Base+0x334>
   21674:	b	21790 <myhtml_insertion_mode_in_head@@Base+0x354>
   21678:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   2167c:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   21680:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   21684:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   21688:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   2168c:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   21690:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   21694:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   21698:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   2169c:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   216a0:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   216a4:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   216a8:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   216ac:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   216b0:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   216b4:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   216b8:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   216bc:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   216c0:	b	217dc <myhtml_insertion_mode_in_head@@Base+0x3a0>
   216c4:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   216c8:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   216cc:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   216d0:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   216d4:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   216d8:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   216dc:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   216e0:	b	21770 <myhtml_insertion_mode_in_head@@Base+0x334>
   216e4:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   216e8:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   216ec:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   216f0:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   216f4:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   216f8:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   216fc:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   21700:	b	21874 <myhtml_insertion_mode_in_head@@Base+0x438>
   21704:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   21708:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   2170c:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   21710:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   21714:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   21718:	b	2184c <myhtml_insertion_mode_in_head@@Base+0x410>
   2171c:	mov	r0, #0
   21720:	b	214dc <myhtml_insertion_mode_in_head@@Base+0xa0>
   21724:	sub	r4, r4, #23
   21728:	cmp	r4, #1
   2172c:	bhi	2171c <myhtml_insertion_mode_in_head@@Base+0x2e0>
   21730:	mov	r0, r6
   21734:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   21738:	mov	r3, #5
   2173c:	mov	r0, #1
   21740:	str	r3, [r6, #168]	; 0xa8
   21744:	b	214dc <myhtml_insertion_mode_in_head@@Base+0xa0>
   21748:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   2174c:	mov	r3, #5
   21750:	mov	r0, #0
   21754:	str	r3, [r6, #168]	; 0xa8
   21758:	b	214dc <myhtml_insertion_mode_in_head@@Base+0xa0>
   2175c:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   21760:	mov	r0, r6
   21764:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   21768:	mov	r0, #0
   2176c:	b	214dc <myhtml_insertion_mode_in_head@@Base+0xa0>
   21770:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   21774:	ldr	r3, [r6, #168]	; 0xa8
   21778:	mov	r2, #7
   2177c:	mov	r1, #4
   21780:	mov	r0, #0
   21784:	str	r1, [r6, #164]	; 0xa4
   21788:	strd	r2, [r6, #168]	; 0xa8
   2178c:	b	214dc <myhtml_insertion_mode_in_head@@Base+0xa0>
   21790:	ldr	r0, [r0, #180]	; 0xb4
   21794:	ands	r4, r0, #1
   21798:	mov	r0, r6
   2179c:	bne	21770 <myhtml_insertion_mode_in_head@@Base+0x334>
   217a0:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   217a4:	mov	r3, #4
   217a8:	mov	r0, r4
   217ac:	str	r3, [r6, #168]	; 0xa8
   217b0:	b	214dc <myhtml_insertion_mode_in_head@@Base+0xa0>
   217b4:	ldr	r3, [r1, #48]	; 0x30
   217b8:	tst	r3, #8
   217bc:	beq	218b8 <myhtml_insertion_mode_in_head@@Base+0x47c>
   217c0:	bl	ff2c <myhtml_tree_node_insert_text@plt>
   217c4:	mov	r0, #0
   217c8:	b	214dc <myhtml_insertion_mode_in_head@@Base+0xa0>
   217cc:	mov	r2, #0
   217d0:	bl	101fc <myhtml_tree_node_insert_comment@plt>
   217d4:	mov	r0, #0
   217d8:	b	214dc <myhtml_insertion_mode_in_head@@Base+0xa0>
   217dc:	add	r2, sp, #4
   217e0:	mov	r1, #0
   217e4:	bl	10e14 <myhtml_tree_appropriate_place_inserting@plt>
   217e8:	mov	r7, r0
   217ec:	mov	r0, r6
   217f0:	bl	ff80 <myhtml_tree_node_create@plt>
   217f4:	mov	r4, r0
   217f8:	mov	r3, #112	; 0x70
   217fc:	ldr	r2, [sp, #4]
   21800:	mov	r1, #1
   21804:	mov	r0, r7
   21808:	str	r3, [r4, #4]
   2180c:	mov	r3, #3
   21810:	str	r3, [r4]
   21814:	str	r1, [r4, #8]
   21818:	mov	r1, r4
   2181c:	str	r5, [r4, #32]
   21820:	bl	102ec <myhtml_tree_node_insert_by_mode@plt>
   21824:	mov	r1, r4
   21828:	mov	r0, r6
   2182c:	bl	1091c <myhtml_tree_open_elements_append@plt>
   21830:	ldr	r3, [r6, #168]	; 0xa8
   21834:	mov	r2, #7
   21838:	mov	r1, #5
   2183c:	mov	r0, #0
   21840:	str	r1, [r6, #164]	; 0xa4
   21844:	strd	r2, [r6, #168]	; 0xa8
   21848:	b	214dc <myhtml_insertion_mode_in_head@@Base+0xa0>
   2184c:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   21850:	ldr	r3, [r6, #168]	; 0xa8
   21854:	mov	r2, #7
   21858:	mov	r1, #2
   2185c:	mov	r0, #0
   21860:	str	r1, [r6, #164]	; 0xa4
   21864:	strd	r2, [r6, #168]	; 0xa8
   21868:	b	214dc <myhtml_insertion_mode_in_head@@Base+0xa0>
   2186c:	bl	105d4 <myhtml_insertion_mode_in_body@plt>
   21870:	b	214dc <myhtml_insertion_mode_in_head@@Base+0xa0>
   21874:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   21878:	ldr	r3, [r6]
   2187c:	mov	r0, r6
   21880:	ldr	r1, [r3, #36]	; 0x24
   21884:	bl	10070 <myhtml_tree_active_formatting_append@plt>
   21888:	ldr	r3, [r6, #180]	; 0xb4
   2188c:	mov	r2, #17
   21890:	mov	r0, r6
   21894:	mov	r1, r2
   21898:	ldr	ip, [r6, #180]	; 0xb4
   2189c:	str	r2, [r6, #168]	; 0xa8
   218a0:	and	r3, r3, #2
   218a4:	eor	r3, r3, ip
   218a8:	str	r3, [r6, #180]	; 0xb4
   218ac:	bl	ff50 <myhtml_tree_template_insertion_append@plt>
   218b0:	mov	r0, #0
   218b4:	b	214dc <myhtml_insertion_mode_in_head@@Base+0xa0>
   218b8:	bl	fe90 <myhtml_insertion_fix_split_for_text_begin_ws@plt>
   218bc:	subs	r1, r0, #0
   218c0:	beq	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>
   218c4:	mov	r0, r6
   218c8:	bl	ff2c <myhtml_tree_node_insert_text@plt>
   218cc:	b	21730 <myhtml_insertion_mode_in_head@@Base+0x2f4>

000218d0 <myhtml_insertion_mode_in_head_noscript@@Base>:
   218d0:	str	r4, [sp, #-8]!
   218d4:	mov	r4, r0
   218d8:	ldr	r2, [r1, #48]	; 0x30
   218dc:	str	lr, [sp, #4]
   218e0:	ldr	r3, [r1]
   218e4:	tst	r2, #1
   218e8:	beq	21938 <myhtml_insertion_mode_in_head_noscript@@Base+0x68>
   218ec:	cmp	r3, #24
   218f0:	beq	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   218f4:	cmp	r3, #93	; 0x5d
   218f8:	bne	21b28 <myhtml_insertion_mode_in_head_noscript@@Base+0x258>
   218fc:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   21900:	mov	r3, #3
   21904:	mov	r0, #0
   21908:	str	r3, [r4, #168]	; 0xa8
   2190c:	ldr	r4, [sp]
   21910:	add	sp, sp, #4
   21914:	pop	{pc}		; (ldr pc, [sp], #4)
   21918:	mov	r0, r4
   2191c:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   21920:	mov	r3, #3
   21924:	mov	r0, #1
   21928:	str	r3, [r4, #168]	; 0xa8
   2192c:	ldr	r4, [sp]
   21930:	add	sp, sp, #4
   21934:	pop	{pc}		; (ldr pc, [sp], #4)
   21938:	sub	r3, r3, #1
   2193c:	cmp	r3, #119	; 0x77
   21940:	addls	pc, pc, r3, lsl #2
   21944:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   21948:	b	21b48 <myhtml_insertion_mode_in_head_noscript@@Base+0x278>
   2194c:	b	21b38 <myhtml_insertion_mode_in_head_noscript@@Base+0x268>
   21950:	b	21b28 <myhtml_insertion_mode_in_head_noscript@@Base+0x258>
   21954:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   21958:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   2195c:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   21960:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   21964:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   21968:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   2196c:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   21970:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   21974:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   21978:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   2197c:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   21980:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   21984:	b	21b38 <myhtml_insertion_mode_in_head_noscript@@Base+0x268>
   21988:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   2198c:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   21990:	b	21b38 <myhtml_insertion_mode_in_head_noscript@@Base+0x268>
   21994:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   21998:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   2199c:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   219a0:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   219a4:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   219a8:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   219ac:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   219b0:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   219b4:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   219b8:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   219bc:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   219c0:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   219c4:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   219c8:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   219cc:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   219d0:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   219d4:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   219d8:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   219dc:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   219e0:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   219e4:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   219e8:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   219ec:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   219f0:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   219f4:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   219f8:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   219fc:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   21a00:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   21a04:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   21a08:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   21a0c:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   21a10:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   21a14:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   21a18:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   21a1c:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   21a20:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   21a24:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   21a28:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   21a2c:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   21a30:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   21a34:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   21a38:	b	21b28 <myhtml_insertion_mode_in_head_noscript@@Base+0x258>
   21a3c:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   21a40:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   21a44:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   21a48:	b	21b68 <myhtml_insertion_mode_in_head_noscript@@Base+0x298>
   21a4c:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   21a50:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   21a54:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   21a58:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   21a5c:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   21a60:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   21a64:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   21a68:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   21a6c:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   21a70:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   21a74:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   21a78:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   21a7c:	b	21b38 <myhtml_insertion_mode_in_head_noscript@@Base+0x268>
   21a80:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   21a84:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   21a88:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   21a8c:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   21a90:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   21a94:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   21a98:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   21a9c:	b	21b38 <myhtml_insertion_mode_in_head_noscript@@Base+0x268>
   21aa0:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   21aa4:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   21aa8:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   21aac:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   21ab0:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   21ab4:	b	21b38 <myhtml_insertion_mode_in_head_noscript@@Base+0x268>
   21ab8:	b	21b28 <myhtml_insertion_mode_in_head_noscript@@Base+0x258>
   21abc:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   21ac0:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   21ac4:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   21ac8:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   21acc:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   21ad0:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   21ad4:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   21ad8:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   21adc:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   21ae0:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   21ae4:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   21ae8:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   21aec:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   21af0:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   21af4:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   21af8:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   21afc:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   21b00:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   21b04:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   21b08:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   21b0c:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   21b10:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   21b14:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   21b18:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   21b1c:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   21b20:	b	21918 <myhtml_insertion_mode_in_head_noscript@@Base+0x48>
   21b24:	b	21b38 <myhtml_insertion_mode_in_head_noscript@@Base+0x268>
   21b28:	ldr	r4, [sp]
   21b2c:	add	sp, sp, #4
   21b30:	mov	r0, #0
   21b34:	pop	{pc}		; (ldr pc, [sp], #4)
   21b38:	ldr	r4, [sp]
   21b3c:	ldr	lr, [sp, #4]
   21b40:	add	sp, sp, #8
   21b44:	b	fff8 <myhtml_insertion_mode_in_head@plt>
   21b48:	ldr	r3, [r1, #48]	; 0x30
   21b4c:	tst	r3, #8
   21b50:	bne	21b38 <myhtml_insertion_mode_in_head_noscript@@Base+0x268>
   21b54:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   21b58:	mov	r3, #3
   21b5c:	mov	r0, #1
   21b60:	str	r3, [r4, #168]	; 0xa8
   21b64:	b	2190c <myhtml_insertion_mode_in_head_noscript@@Base+0x3c>
   21b68:	ldr	r4, [sp]
   21b6c:	ldr	lr, [sp, #4]
   21b70:	add	sp, sp, #8
   21b74:	b	105d4 <myhtml_insertion_mode_in_body@plt>

00021b78 <myhtml_insertion_mode_after_head@@Base>:
   21b78:	strd	r4, [sp, #-16]!
   21b7c:	mov	r5, r0
   21b80:	ldr	r2, [r1, #48]	; 0x30
   21b84:	ldr	r3, [r1]
   21b88:	str	r6, [sp, #8]
   21b8c:	str	lr, [sp, #12]
   21b90:	tst	r2, #1
   21b94:	beq	21c14 <myhtml_insertion_mode_after_head@@Base+0x9c>
   21b98:	cmp	r3, #65	; 0x41
   21b9c:	beq	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21ba0:	bls	21e40 <myhtml_insertion_mode_after_head@@Base+0x2c8>
   21ba4:	cmp	r3, #128	; 0x80
   21ba8:	bne	21e4c <myhtml_insertion_mode_after_head@@Base+0x2d4>
   21bac:	ldrd	r4, [sp]
   21bb0:	ldr	r6, [sp, #8]
   21bb4:	ldr	lr, [sp, #12]
   21bb8:	add	sp, sp, #16
   21bbc:	b	fff8 <myhtml_insertion_mode_in_head@plt>
   21bc0:	ldr	r3, [r1, #48]	; 0x30
   21bc4:	tst	r3, #8
   21bc8:	bne	21ee0 <myhtml_insertion_mode_after_head@@Base+0x368>
   21bcc:	bl	fe90 <myhtml_insertion_fix_split_for_text_begin_ws@plt>
   21bd0:	subs	r1, r0, #0
   21bd4:	beq	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21bd8:	mov	r0, r5
   21bdc:	bl	ff2c <myhtml_tree_node_insert_text@plt>
   21be0:	mov	r2, #1
   21be4:	mov	r1, #23
   21be8:	mov	r0, r5
   21bec:	bl	10904 <myhtml_tree_node_insert@plt>
   21bf0:	mov	r2, #6
   21bf4:	mov	r3, #1
   21bf8:	str	r0, [r5, #100]	; 0x64
   21bfc:	str	r2, [r5, #168]	; 0xa8
   21c00:	ldrd	r4, [sp]
   21c04:	mov	r0, r3
   21c08:	ldr	r6, [sp, #8]
   21c0c:	add	sp, sp, #12
   21c10:	pop	{pc}		; (ldr pc, [sp], #4)
   21c14:	sub	r3, r3, #1
   21c18:	mov	r4, r1
   21c1c:	cmp	r3, #133	; 0x85
   21c20:	addls	pc, pc, r3, lsl #2
   21c24:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21c28:	b	21bc0 <myhtml_insertion_mode_after_head@@Base+0x48>
   21c2c:	b	21ed0 <myhtml_insertion_mode_after_head@@Base+0x358>
   21c30:	b	21e4c <myhtml_insertion_mode_after_head@@Base+0x2d4>
   21c34:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21c38:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21c3c:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21c40:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21c44:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21c48:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21c4c:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21c50:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21c54:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21c58:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21c5c:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21c60:	b	21ea8 <myhtml_insertion_mode_after_head@@Base+0x330>
   21c64:	b	21ea8 <myhtml_insertion_mode_after_head@@Base+0x330>
   21c68:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21c6c:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21c70:	b	21ea8 <myhtml_insertion_mode_after_head@@Base+0x330>
   21c74:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21c78:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21c7c:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21c80:	b	21e7c <myhtml_insertion_mode_after_head@@Base+0x304>
   21c84:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21c88:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21c8c:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21c90:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21c94:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21c98:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21c9c:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21ca0:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21ca4:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21ca8:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21cac:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21cb0:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21cb4:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21cb8:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21cbc:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21cc0:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21cc4:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21cc8:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21ccc:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21cd0:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21cd4:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21cd8:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21cdc:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21ce0:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21ce4:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21ce8:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21cec:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21cf0:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21cf4:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21cf8:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21cfc:	b	21e68 <myhtml_insertion_mode_after_head@@Base+0x2f0>
   21d00:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21d04:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21d08:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21d0c:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21d10:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21d14:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21d18:	b	21e4c <myhtml_insertion_mode_after_head@@Base+0x2d4>
   21d1c:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21d20:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21d24:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21d28:	b	21e54 <myhtml_insertion_mode_after_head@@Base+0x2dc>
   21d2c:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21d30:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21d34:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21d38:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21d3c:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21d40:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21d44:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21d48:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21d4c:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21d50:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21d54:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21d58:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21d5c:	b	21ea8 <myhtml_insertion_mode_after_head@@Base+0x330>
   21d60:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21d64:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21d68:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21d6c:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21d70:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21d74:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21d78:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21d7c:	b	21ea8 <myhtml_insertion_mode_after_head@@Base+0x330>
   21d80:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21d84:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21d88:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21d8c:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21d90:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21d94:	b	21ea8 <myhtml_insertion_mode_after_head@@Base+0x330>
   21d98:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21d9c:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21da0:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21da4:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21da8:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21dac:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21db0:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21db4:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21db8:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21dbc:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21dc0:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21dc4:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21dc8:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21dcc:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21dd0:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21dd4:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21dd8:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21ddc:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21de0:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21de4:	b	21ea8 <myhtml_insertion_mode_after_head@@Base+0x330>
   21de8:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21dec:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21df0:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21df4:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21df8:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21dfc:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21e00:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21e04:	b	21ea8 <myhtml_insertion_mode_after_head@@Base+0x330>
   21e08:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21e0c:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21e10:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21e14:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21e18:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21e1c:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21e20:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21e24:	b	21ea8 <myhtml_insertion_mode_after_head@@Base+0x330>
   21e28:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21e2c:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21e30:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21e34:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21e38:	b	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21e3c:	b	21ea8 <myhtml_insertion_mode_after_head@@Base+0x330>
   21e40:	sub	r3, r3, #23
   21e44:	cmp	r3, #1
   21e48:	bls	21be0 <myhtml_insertion_mode_after_head@@Base+0x68>
   21e4c:	mov	r3, #0
   21e50:	b	21c00 <myhtml_insertion_mode_after_head@@Base+0x88>
   21e54:	ldrd	r4, [sp]
   21e58:	ldr	r6, [sp, #8]
   21e5c:	ldr	lr, [sp, #12]
   21e60:	add	sp, sp, #16
   21e64:	b	105d4 <myhtml_insertion_mode_in_body@plt>
   21e68:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   21e6c:	mov	r2, #19
   21e70:	mov	r3, #0
   21e74:	str	r2, [r5, #168]	; 0xa8
   21e78:	b	21c00 <myhtml_insertion_mode_after_head@@Base+0x88>
   21e7c:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   21e80:	ldr	r2, [r5, #180]	; 0xb4
   21e84:	mov	ip, #6
   21e88:	mov	r3, #0
   21e8c:	str	r0, [r5, #100]	; 0x64
   21e90:	ldr	r1, [r5, #180]	; 0xb4
   21e94:	str	ip, [r5, #168]	; 0xa8
   21e98:	and	r2, r2, #2
   21e9c:	eor	r2, r2, r1
   21ea0:	str	r2, [r5, #180]	; 0xb4
   21ea4:	b	21c00 <myhtml_insertion_mode_after_head@@Base+0x88>
   21ea8:	ldr	r1, [r0, #92]	; 0x5c
   21eac:	bl	1091c <myhtml_tree_open_elements_append@plt>
   21eb0:	mov	r1, r4
   21eb4:	mov	r0, r5
   21eb8:	bl	fff8 <myhtml_insertion_mode_in_head@plt>
   21ebc:	mov	r0, r5
   21ec0:	ldr	r1, [r5, #92]	; 0x5c
   21ec4:	bl	101d8 <myhtml_tree_open_elements_remove@plt>
   21ec8:	mov	r3, #0
   21ecc:	b	21c00 <myhtml_insertion_mode_after_head@@Base+0x88>
   21ed0:	mov	r2, #0
   21ed4:	bl	101fc <myhtml_tree_node_insert_comment@plt>
   21ed8:	mov	r3, #0
   21edc:	b	21c00 <myhtml_insertion_mode_after_head@@Base+0x88>
   21ee0:	bl	ff2c <myhtml_tree_node_insert_text@plt>
   21ee4:	mov	r3, #0
   21ee8:	b	21c00 <myhtml_insertion_mode_after_head@@Base+0x88>

00021eec <myhtml_insertion_mode_in_table@@Base>:
   21eec:	ldr	r3, [r1, #48]	; 0x30
   21ef0:	strd	r4, [sp, #-20]!	; 0xffffffec
   21ef4:	ldr	r4, [r1]
   21ef8:	strd	r6, [sp, #8]
   21efc:	mov	r6, r1
   21f00:	mov	r7, r0
   21f04:	str	lr, [sp, #16]
   21f08:	sub	sp, sp, #12
   21f0c:	ands	r5, r3, #1
   21f10:	beq	221ac <myhtml_insertion_mode_in_table@@Base+0x2c0>
   21f14:	sub	r4, r4, #23
   21f18:	cmp	r4, #112	; 0x70
   21f1c:	addls	pc, pc, r4, lsl #2
   21f20:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   21f24:	b	22120 <myhtml_insertion_mode_in_table@@Base+0x234>
   21f28:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   21f2c:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   21f30:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   21f34:	b	22120 <myhtml_insertion_mode_in_table@@Base+0x234>
   21f38:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   21f3c:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   21f40:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   21f44:	b	22120 <myhtml_insertion_mode_in_table@@Base+0x234>
   21f48:	b	22120 <myhtml_insertion_mode_in_table@@Base+0x234>
   21f4c:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   21f50:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   21f54:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   21f58:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   21f5c:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   21f60:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   21f64:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   21f68:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   21f6c:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   21f70:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   21f74:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   21f78:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   21f7c:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   21f80:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   21f84:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   21f88:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   21f8c:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   21f90:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   21f94:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   21f98:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   21f9c:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   21fa0:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   21fa4:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   21fa8:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   21fac:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   21fb0:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   21fb4:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   21fb8:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   21fbc:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   21fc0:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   21fc4:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   21fc8:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   21fcc:	b	22120 <myhtml_insertion_mode_in_table@@Base+0x234>
   21fd0:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   21fd4:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   21fd8:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   21fdc:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   21fe0:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   21fe4:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   21fe8:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   21fec:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   21ff0:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   21ff4:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   21ff8:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   21ffc:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   22000:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   22004:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   22008:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   2200c:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   22010:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   22014:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   22018:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   2201c:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   22020:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   22024:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   22028:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   2202c:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   22030:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   22034:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   22038:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   2203c:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   22040:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   22044:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   22048:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   2204c:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   22050:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   22054:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   22058:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   2205c:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   22060:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   22064:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   22068:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   2206c:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   22070:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   22074:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   22078:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   2207c:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   22080:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   22084:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   22088:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   2208c:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   22090:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   22094:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   22098:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   2209c:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   220a0:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   220a4:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   220a8:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   220ac:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   220b0:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   220b4:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   220b8:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   220bc:	b	22308 <myhtml_insertion_mode_in_table@@Base+0x41c>
   220c0:	b	22120 <myhtml_insertion_mode_in_table@@Base+0x234>
   220c4:	b	22120 <myhtml_insertion_mode_in_table@@Base+0x234>
   220c8:	b	2227c <myhtml_insertion_mode_in_table@@Base+0x390>
   220cc:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   220d0:	b	22120 <myhtml_insertion_mode_in_table@@Base+0x234>
   220d4:	b	22120 <myhtml_insertion_mode_in_table@@Base+0x234>
   220d8:	b	22120 <myhtml_insertion_mode_in_table@@Base+0x234>
   220dc:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   220e0:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   220e4:	b	22120 <myhtml_insertion_mode_in_table@@Base+0x234>
   220e8:	cmp	r4, #130	; 0x82
   220ec:	beq	223dc <myhtml_insertion_mode_in_table@@Base+0x4f0>
   220f0:	bhi	2229c <myhtml_insertion_mode_in_table@@Base+0x3b0>
   220f4:	cmp	r4, #126	; 0x7e
   220f8:	beq	223dc <myhtml_insertion_mode_in_table@@Base+0x4f0>
   220fc:	bhi	2226c <myhtml_insertion_mode_in_table@@Base+0x380>
   22100:	cmp	r4, #125	; 0x7d
   22104:	bne	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   22108:	mov	r3, #64	; 0x40
   2210c:	mov	r2, #1
   22110:	mov	r1, r4
   22114:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   22118:	cmp	r0, #0
   2211c:	bne	22360 <myhtml_insertion_mode_in_table@@Base+0x474>
   22120:	mov	r5, #0
   22124:	mov	r0, r5
   22128:	add	sp, sp, #12
   2212c:	ldrd	r4, [sp]
   22130:	ldrd	r6, [sp, #8]
   22134:	add	sp, sp, #16
   22138:	pop	{pc}		; (ldr pc, [sp], #4)
   2213c:	cmp	r4, #52	; 0x34
   22140:	beq	22400 <myhtml_insertion_mode_in_table@@Base+0x514>
   22144:	bls	222e4 <myhtml_insertion_mode_in_table@@Base+0x3f8>
   22148:	cmp	r4, #70	; 0x46
   2214c:	bne	222d8 <myhtml_insertion_mode_in_table@@Base+0x3ec>
   22150:	ldr	r0, [r0, #8]
   22154:	bl	10610 <myhtml_token_node_wait_for_done@plt>
   22158:	ldr	r0, [pc, #728]	; 22438 <myhtml_insertion_mode_in_table@@Base+0x54c>
   2215c:	mov	r2, #6
   22160:	mov	r3, #4
   22164:	mov	r1, r6
   22168:	add	r0, pc, r0
   2216c:	stm	sp, {r0, r2}
   22170:	ldr	r2, [pc, #708]	; 2243c <myhtml_insertion_mode_in_table@@Base+0x550>
   22174:	ldr	r0, [r7, #8]
   22178:	add	r2, pc, r2
   2217c:	bl	fcd4 <myhtml_token_attr_match_case@plt>
   22180:	cmp	r0, #0
   22184:	bne	2233c <myhtml_insertion_mode_in_table@@Base+0x450>
   22188:	mov	r3, #1
   2218c:	mov	r1, r6
   22190:	mov	r0, r7
   22194:	strb	r3, [r7, #188]	; 0xbc
   22198:	bl	105d4 <myhtml_insertion_mode_in_body@plt>
   2219c:	mov	r3, #0
   221a0:	mov	r5, r3
   221a4:	strb	r3, [r7, #188]	; 0xbc
   221a8:	b	22124 <myhtml_insertion_mode_in_table@@Base+0x238>
   221ac:	cmp	r4, #120	; 0x78
   221b0:	beq	2227c <myhtml_insertion_mode_in_table@@Base+0x390>
   221b4:	bhi	220e8 <myhtml_insertion_mode_in_table@@Base+0x1fc>
   221b8:	cmp	r4, #31
   221bc:	beq	223ac <myhtml_insertion_mode_in_table@@Base+0x4c0>
   221c0:	bhi	2213c <myhtml_insertion_mode_in_table@@Base+0x250>
   221c4:	cmp	r4, #2
   221c8:	beq	223d0 <myhtml_insertion_mode_in_table@@Base+0x4e4>
   221cc:	bls	2220c <myhtml_insertion_mode_in_table@@Base+0x320>
   221d0:	cmp	r4, #3
   221d4:	beq	22124 <myhtml_insertion_mode_in_table@@Base+0x238>
   221d8:	cmp	r4, #27
   221dc:	bne	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   221e0:	bl	10f64 <myhtml_tree_clear_stack_back_table_context@plt>
   221e4:	mov	r1, r6
   221e8:	mov	r0, r7
   221ec:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   221f0:	ldr	r3, [r7]
   221f4:	mov	r0, r7
   221f8:	ldr	r1, [r3, #36]	; 0x24
   221fc:	bl	10070 <myhtml_tree_active_formatting_append@plt>
   22200:	mov	r3, #10
   22204:	str	r3, [r7, #168]	; 0xa8
   22208:	b	22124 <myhtml_insertion_mode_in_table@@Base+0x238>
   2220c:	cmp	r4, #1
   22210:	bne	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   22214:	bl	105bc <myhtml_tree_current_node@plt>
   22218:	ldr	r3, [r0, #4]
   2221c:	sub	r4, r3, #125	; 0x7d
   22220:	sub	r2, r3, #130	; 0x82
   22224:	cmp	r3, #135	; 0x87
   22228:	cmpne	r4, #1
   2222c:	movls	r3, #1
   22230:	movhi	r3, #0
   22234:	bics	r2, r2, #2
   22238:	movne	r5, r3
   2223c:	moveq	r5, #1
   22240:	cmp	r5, #0
   22244:	beq	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   22248:	ldr	r3, [r0, #8]
   2224c:	cmp	r3, #1
   22250:	bne	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   22254:	ldr	r0, [r7, #136]	; 0x88
   22258:	bl	10f7c <myhtml_tree_token_list_clean@plt>
   2225c:	ldr	r3, [r7, #168]	; 0xa8
   22260:	mov	r2, #9
   22264:	strd	r2, [r7, #168]	; 0xa8
   22268:	b	22124 <myhtml_insertion_mode_in_table@@Base+0x238>
   2226c:	cmp	r4, #127	; 0x7f
   22270:	beq	22384 <myhtml_insertion_mode_in_table@@Base+0x498>
   22274:	cmp	r4, #128	; 0x80
   22278:	bne	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   2227c:	mov	r1, r6
   22280:	mov	r0, r7
   22284:	add	sp, sp, #12
   22288:	ldrd	r4, [sp]
   2228c:	ldrd	r6, [sp, #8]
   22290:	ldr	lr, [sp, #16]
   22294:	add	sp, sp, #20
   22298:	b	fff8 <myhtml_insertion_mode_in_head@plt>
   2229c:	cmp	r4, #132	; 0x84
   222a0:	beq	223dc <myhtml_insertion_mode_in_table@@Base+0x4f0>
   222a4:	bcc	22384 <myhtml_insertion_mode_in_table@@Base+0x498>
   222a8:	cmp	r4, #135	; 0x87
   222ac:	beq	22384 <myhtml_insertion_mode_in_table@@Base+0x498>
   222b0:	cmp	r4, #251	; 0xfb
   222b4:	bne	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   222b8:	mov	r1, r6
   222bc:	mov	r0, r7
   222c0:	add	sp, sp, #12
   222c4:	ldrd	r4, [sp]
   222c8:	ldrd	r6, [sp, #8]
   222cc:	ldr	lr, [sp, #16]
   222d0:	add	sp, sp, #20
   222d4:	b	105d4 <myhtml_insertion_mode_in_body@plt>
   222d8:	cmp	r4, #112	; 0x70
   222dc:	beq	2227c <myhtml_insertion_mode_in_table@@Base+0x390>
   222e0:	b	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   222e4:	cmp	r4, #32
   222e8:	bne	22188 <myhtml_insertion_mode_in_table@@Base+0x29c>
   222ec:	bl	10f64 <myhtml_tree_clear_stack_back_table_context@plt>
   222f0:	mov	r1, r6
   222f4:	mov	r0, r7
   222f8:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   222fc:	mov	r3, #11
   22300:	str	r3, [r7, #168]	; 0xa8
   22304:	b	22124 <myhtml_insertion_mode_in_table@@Base+0x238>
   22308:	mov	r1, #125	; 0x7d
   2230c:	mov	r3, #64	; 0x40
   22310:	mov	r2, #1
   22314:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   22318:	subs	r1, r0, #0
   2231c:	beq	22120 <myhtml_insertion_mode_in_table@@Base+0x234>
   22320:	mov	r2, #0
   22324:	mov	r0, r7
   22328:	mov	r5, r2
   2232c:	bl	100dc <myhtml_tree_open_elements_pop_until_by_node@plt>
   22330:	mov	r0, r7
   22334:	bl	106c4 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   22338:	b	22124 <myhtml_insertion_mode_in_table@@Base+0x238>
   2233c:	mov	r1, r6
   22340:	mov	r0, r7
   22344:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   22348:	mov	r0, r7
   2234c:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   22350:	ldr	r3, [r6, #48]	; 0x30
   22354:	orr	r3, r3, #2
   22358:	str	r3, [r6, #48]	; 0x30
   2235c:	b	22124 <myhtml_insertion_mode_in_table@@Base+0x238>
   22360:	mov	r3, r5
   22364:	mov	r0, r7
   22368:	mov	r1, r4
   2236c:	mov	r2, #1
   22370:	bl	108e0 <myhtml_tree_open_elements_pop_until@plt>
   22374:	mov	r0, r7
   22378:	mov	r5, #1
   2237c:	bl	106c4 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   22380:	b	22124 <myhtml_insertion_mode_in_table@@Base+0x238>
   22384:	mov	r0, r7
   22388:	mov	r5, #1
   2238c:	bl	10f64 <myhtml_tree_clear_stack_back_table_context@plt>
   22390:	mov	r2, r5
   22394:	mov	r1, #126	; 0x7e
   22398:	mov	r0, r7
   2239c:	bl	10904 <myhtml_tree_node_insert@plt>
   223a0:	mov	r3, #12
   223a4:	str	r3, [r7, #168]	; 0xa8
   223a8:	b	22124 <myhtml_insertion_mode_in_table@@Base+0x238>
   223ac:	bl	10f64 <myhtml_tree_clear_stack_back_table_context@plt>
   223b0:	mov	r2, #1
   223b4:	mov	r1, #32
   223b8:	mov	r0, r7
   223bc:	mov	r5, r2
   223c0:	bl	10904 <myhtml_tree_node_insert@plt>
   223c4:	mov	r3, #11
   223c8:	str	r3, [r7, #168]	; 0xa8
   223cc:	b	22124 <myhtml_insertion_mode_in_table@@Base+0x238>
   223d0:	mov	r2, r5
   223d4:	bl	101fc <myhtml_tree_node_insert_comment@plt>
   223d8:	b	22124 <myhtml_insertion_mode_in_table@@Base+0x238>
   223dc:	mov	r0, r7
   223e0:	mov	r5, #0
   223e4:	bl	10f64 <myhtml_tree_clear_stack_back_table_context@plt>
   223e8:	mov	r1, r6
   223ec:	mov	r0, r7
   223f0:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   223f4:	mov	r3, #12
   223f8:	str	r3, [r7, #168]	; 0xa8
   223fc:	b	22124 <myhtml_insertion_mode_in_table@@Base+0x238>
   22400:	mov	r3, r5
   22404:	mov	r2, #1
   22408:	mov	r1, #128	; 0x80
   2240c:	bl	10790 <myhtml_tree_open_elements_find_by_tag_idx@plt>
   22410:	ldr	r3, [r7, #104]	; 0x68
   22414:	orrs	r3, r3, r0
   22418:	bne	22120 <myhtml_insertion_mode_in_table@@Base+0x234>
   2241c:	mov	r1, r6
   22420:	mov	r0, r7
   22424:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   22428:	str	r0, [r7, #104]	; 0x68
   2242c:	mov	r0, r7
   22430:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   22434:	b	222b8 <myhtml_insertion_mode_in_table@@Base+0x3cc>
   22438:	andeq	ip, sp, ip, ror r7
   2243c:	andeq	r9, r1, ip, lsr #5

00022440 <myhtml_insertion_mode_in_table_body@@Base>:
   22440:	strd	r4, [sp, #-16]!
   22444:	mov	r5, r0
   22448:	ldr	r2, [r1, #48]	; 0x30
   2244c:	ldr	r3, [r1]
   22450:	str	r6, [sp, #8]
   22454:	str	lr, [sp, #12]
   22458:	sub	sp, sp, #8
   2245c:	ands	r4, r2, #1
   22460:	beq	226dc <myhtml_insertion_mode_in_table_body@@Base+0x29c>
   22464:	sub	r2, r3, #23
   22468:	cmp	r2, #112	; 0x70
   2246c:	addls	pc, pc, r2, lsl #2
   22470:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   22474:	b	226a0 <myhtml_insertion_mode_in_table_body@@Base+0x260>
   22478:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   2247c:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   22480:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   22484:	b	226a0 <myhtml_insertion_mode_in_table_body@@Base+0x260>
   22488:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   2248c:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   22490:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   22494:	b	226a0 <myhtml_insertion_mode_in_table_body@@Base+0x260>
   22498:	b	226a0 <myhtml_insertion_mode_in_table_body@@Base+0x260>
   2249c:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   224a0:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   224a4:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   224a8:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   224ac:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   224b0:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   224b4:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   224b8:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   224bc:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   224c0:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   224c4:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   224c8:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   224cc:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   224d0:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   224d4:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   224d8:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   224dc:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   224e0:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   224e4:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   224e8:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   224ec:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   224f0:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   224f4:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   224f8:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   224fc:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   22500:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   22504:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   22508:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   2250c:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   22510:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   22514:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   22518:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   2251c:	b	226a0 <myhtml_insertion_mode_in_table_body@@Base+0x260>
   22520:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   22524:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   22528:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   2252c:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   22530:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   22534:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   22538:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   2253c:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   22540:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   22544:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   22548:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   2254c:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   22550:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   22554:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   22558:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   2255c:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   22560:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   22564:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   22568:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   2256c:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   22570:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   22574:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   22578:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   2257c:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   22580:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   22584:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   22588:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   2258c:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   22590:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   22594:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   22598:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   2259c:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   225a0:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   225a4:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   225a8:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   225ac:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   225b0:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   225b4:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   225b8:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   225bc:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   225c0:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   225c4:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   225c8:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   225cc:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   225d0:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   225d4:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   225d8:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   225dc:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   225e0:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   225e4:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   225e8:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   225ec:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   225f0:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   225f4:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   225f8:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   225fc:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   22600:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   22604:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   22608:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   2260c:	b	22650 <myhtml_insertion_mode_in_table_body@@Base+0x210>
   22610:	b	22754 <myhtml_insertion_mode_in_table_body@@Base+0x314>
   22614:	b	226a0 <myhtml_insertion_mode_in_table_body@@Base+0x260>
   22618:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   2261c:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   22620:	b	22754 <myhtml_insertion_mode_in_table_body@@Base+0x314>
   22624:	b	226a0 <myhtml_insertion_mode_in_table_body@@Base+0x260>
   22628:	b	22754 <myhtml_insertion_mode_in_table_body@@Base+0x314>
   2262c:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   22630:	b	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   22634:	b	226a0 <myhtml_insertion_mode_in_table_body@@Base+0x260>
   22638:	cmp	r3, #32
   2263c:	bhi	226b8 <myhtml_insertion_mode_in_table_body@@Base+0x278>
   22640:	cmp	r3, #31
   22644:	bcs	22650 <myhtml_insertion_mode_in_table_body@@Base+0x210>
   22648:	cmp	r3, #27
   2264c:	bne	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   22650:	mov	r3, #64	; 0x40
   22654:	mov	r2, #1
   22658:	mov	r1, #126	; 0x7e
   2265c:	mov	r0, r5
   22660:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   22664:	mov	r4, r0
   22668:	mov	r3, #64	; 0x40
   2266c:	mov	r2, #1
   22670:	mov	r1, #130	; 0x82
   22674:	mov	r0, r5
   22678:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   2267c:	mov	r6, r0
   22680:	mov	r3, #64	; 0x40
   22684:	mov	r2, #1
   22688:	mov	r1, #132	; 0x84
   2268c:	mov	r0, r5
   22690:	orr	r4, r4, r6
   22694:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   22698:	orrs	r3, r0, r4
   2269c:	bne	22734 <myhtml_insertion_mode_in_table_body@@Base+0x2f4>
   226a0:	mov	r0, #0
   226a4:	add	sp, sp, #8
   226a8:	ldrd	r4, [sp]
   226ac:	ldr	r6, [sp, #8]
   226b0:	add	sp, sp, #12
   226b4:	pop	{pc}		; (ldr pc, [sp], #4)
   226b8:	cmp	r3, #126	; 0x7e
   226bc:	beq	22650 <myhtml_insertion_mode_in_table_body@@Base+0x210>
   226c0:	mov	r0, r5
   226c4:	add	sp, sp, #8
   226c8:	ldrd	r4, [sp]
   226cc:	ldr	r6, [sp, #8]
   226d0:	ldr	lr, [sp, #12]
   226d4:	add	sp, sp, #16
   226d8:	b	10118 <myhtml_insertion_mode_in_table@plt>
   226dc:	cmp	r3, #127	; 0x7f
   226e0:	beq	2278c <myhtml_insertion_mode_in_table_body@@Base+0x34c>
   226e4:	bls	22638 <myhtml_insertion_mode_in_table_body@@Base+0x1f8>
   226e8:	cmp	r3, #131	; 0x83
   226ec:	beq	2278c <myhtml_insertion_mode_in_table_body@@Base+0x34c>
   226f0:	bls	22728 <myhtml_insertion_mode_in_table_body@@Base+0x2e8>
   226f4:	cmp	r3, #132	; 0x84
   226f8:	beq	22650 <myhtml_insertion_mode_in_table_body@@Base+0x210>
   226fc:	cmp	r3, #135	; 0x87
   22700:	bne	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   22704:	str	r1, [sp, #4]
   22708:	bl	10328 <myhtml_tree_clear_stack_back_table_body_context@plt>
   2270c:	mov	r0, r5
   22710:	ldr	r1, [sp, #4]
   22714:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   22718:	mov	r3, #13
   2271c:	mov	r0, r4
   22720:	str	r3, [r5, #168]	; 0xa8
   22724:	b	226a4 <myhtml_insertion_mode_in_table_body@@Base+0x264>
   22728:	cmp	r3, #130	; 0x82
   2272c:	bne	226c0 <myhtml_insertion_mode_in_table_body@@Base+0x280>
   22730:	b	22650 <myhtml_insertion_mode_in_table_body@@Base+0x210>
   22734:	mov	r0, r5
   22738:	bl	10328 <myhtml_tree_clear_stack_back_table_body_context@plt>
   2273c:	mov	r0, r5
   22740:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   22744:	mov	r3, #8
   22748:	mov	r0, #1
   2274c:	str	r3, [r5, #168]	; 0xa8
   22750:	b	226a4 <myhtml_insertion_mode_in_table_body@@Base+0x264>
   22754:	mov	r1, r3
   22758:	mov	r2, #1
   2275c:	mov	r3, #64	; 0x40
   22760:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   22764:	cmp	r0, #0
   22768:	beq	226a0 <myhtml_insertion_mode_in_table_body@@Base+0x260>
   2276c:	mov	r0, r5
   22770:	bl	10328 <myhtml_tree_clear_stack_back_table_body_context@plt>
   22774:	mov	r0, r5
   22778:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   2277c:	mov	r3, #8
   22780:	mov	r0, #0
   22784:	str	r3, [r5, #168]	; 0xa8
   22788:	b	226a4 <myhtml_insertion_mode_in_table_body@@Base+0x264>
   2278c:	mov	r0, r5
   22790:	bl	10328 <myhtml_tree_clear_stack_back_table_body_context@plt>
   22794:	mov	r2, #1
   22798:	mov	r1, #135	; 0x87
   2279c:	mov	r0, r5
   227a0:	bl	10904 <myhtml_tree_node_insert@plt>
   227a4:	mov	r3, #13
   227a8:	mov	r0, #1
   227ac:	str	r3, [r5, #168]	; 0xa8
   227b0:	b	226a4 <myhtml_insertion_mode_in_table_body@@Base+0x264>

000227b4 <myhtml_insertion_mode_in_row@@Base>:
   227b4:	str	r4, [sp, #-8]!
   227b8:	mov	r4, r0
   227bc:	ldr	r2, [r1, #48]	; 0x30
   227c0:	ldr	r3, [r1]
   227c4:	str	lr, [sp, #4]
   227c8:	sub	sp, sp, #8
   227cc:	tst	r2, #1
   227d0:	beq	229f0 <myhtml_insertion_mode_in_row@@Base+0x23c>
   227d4:	sub	r2, r3, #23
   227d8:	cmp	r2, #112	; 0x70
   227dc:	addls	pc, pc, r2, lsl #2
   227e0:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   227e4:	b	229dc <myhtml_insertion_mode_in_row@@Base+0x228>
   227e8:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   227ec:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   227f0:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   227f4:	b	229dc <myhtml_insertion_mode_in_row@@Base+0x228>
   227f8:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   227fc:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   22800:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   22804:	b	229dc <myhtml_insertion_mode_in_row@@Base+0x228>
   22808:	b	229dc <myhtml_insertion_mode_in_row@@Base+0x228>
   2280c:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   22810:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   22814:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   22818:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   2281c:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   22820:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   22824:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   22828:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   2282c:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   22830:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   22834:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   22838:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   2283c:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   22840:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   22844:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   22848:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   2284c:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   22850:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   22854:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   22858:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   2285c:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   22860:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   22864:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   22868:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   2286c:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   22870:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   22874:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   22878:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   2287c:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   22880:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   22884:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   22888:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   2288c:	b	229dc <myhtml_insertion_mode_in_row@@Base+0x228>
   22890:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   22894:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   22898:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   2289c:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   228a0:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   228a4:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   228a8:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   228ac:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   228b0:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   228b4:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   228b8:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   228bc:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   228c0:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   228c4:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   228c8:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   228cc:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   228d0:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   228d4:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   228d8:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   228dc:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   228e0:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   228e4:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   228e8:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   228ec:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   228f0:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   228f4:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   228f8:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   228fc:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   22900:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   22904:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   22908:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   2290c:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   22910:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   22914:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   22918:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   2291c:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   22920:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   22924:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   22928:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   2292c:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   22930:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   22934:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   22938:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   2293c:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   22940:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   22944:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   22948:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   2294c:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   22950:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   22954:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   22958:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   2295c:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   22960:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   22964:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   22968:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   2296c:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   22970:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   22974:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   22978:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   2297c:	b	229c0 <myhtml_insertion_mode_in_row@@Base+0x20c>
   22980:	b	229a8 <myhtml_insertion_mode_in_row@@Base+0x1f4>
   22984:	b	229dc <myhtml_insertion_mode_in_row@@Base+0x228>
   22988:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   2298c:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   22990:	b	229a8 <myhtml_insertion_mode_in_row@@Base+0x1f4>
   22994:	b	229dc <myhtml_insertion_mode_in_row@@Base+0x228>
   22998:	b	229a8 <myhtml_insertion_mode_in_row@@Base+0x1f4>
   2299c:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   229a0:	b	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   229a4:	b	22a90 <myhtml_insertion_mode_in_row@@Base+0x2dc>
   229a8:	mov	r1, r3
   229ac:	mov	r2, #1
   229b0:	mov	r3, #64	; 0x40
   229b4:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   229b8:	cmp	r0, #0
   229bc:	beq	229dc <myhtml_insertion_mode_in_row@@Base+0x228>
   229c0:	mov	r3, #64	; 0x40
   229c4:	mov	r2, #1
   229c8:	mov	r1, #135	; 0x87
   229cc:	mov	r0, r4
   229d0:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   229d4:	cmp	r0, #0
   229d8:	bne	22a64 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   229dc:	mov	r0, #0
   229e0:	add	sp, sp, #8
   229e4:	ldr	r4, [sp]
   229e8:	add	sp, sp, #4
   229ec:	pop	{pc}		; (ldr pc, [sp], #4)
   229f0:	cmp	r3, #127	; 0x7f
   229f4:	beq	22ac8 <myhtml_insertion_mode_in_row@@Base+0x314>
   229f8:	bls	22a30 <myhtml_insertion_mode_in_row@@Base+0x27c>
   229fc:	cmp	r3, #131	; 0x83
   22a00:	beq	22ac8 <myhtml_insertion_mode_in_row@@Base+0x314>
   22a04:	bls	22a4c <myhtml_insertion_mode_in_row@@Base+0x298>
   22a08:	cmp	r3, #132	; 0x84
   22a0c:	beq	229c0 <myhtml_insertion_mode_in_row@@Base+0x20c>
   22a10:	cmp	r3, #135	; 0x87
   22a14:	beq	229c0 <myhtml_insertion_mode_in_row@@Base+0x20c>
   22a18:	mov	r0, r4
   22a1c:	add	sp, sp, #8
   22a20:	ldr	r4, [sp]
   22a24:	ldr	lr, [sp, #4]
   22a28:	add	sp, sp, #8
   22a2c:	b	10118 <myhtml_insertion_mode_in_table@plt>
   22a30:	cmp	r3, #32
   22a34:	bhi	22a58 <myhtml_insertion_mode_in_row@@Base+0x2a4>
   22a38:	cmp	r3, #31
   22a3c:	bcs	229c0 <myhtml_insertion_mode_in_row@@Base+0x20c>
   22a40:	cmp	r3, #27
   22a44:	bne	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   22a48:	b	229c0 <myhtml_insertion_mode_in_row@@Base+0x20c>
   22a4c:	cmp	r3, #130	; 0x82
   22a50:	bne	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   22a54:	b	229c0 <myhtml_insertion_mode_in_row@@Base+0x20c>
   22a58:	cmp	r3, #126	; 0x7e
   22a5c:	bne	22a18 <myhtml_insertion_mode_in_row@@Base+0x264>
   22a60:	b	229c0 <myhtml_insertion_mode_in_row@@Base+0x20c>
   22a64:	mov	r0, r4
   22a68:	bl	103ac <myhtml_tree_clear_stack_back_table_row_context@plt>
   22a6c:	mov	r0, r4
   22a70:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   22a74:	mov	r3, #12
   22a78:	mov	r0, #1
   22a7c:	str	r3, [r4, #168]	; 0xa8
   22a80:	add	sp, sp, #8
   22a84:	ldr	r4, [sp]
   22a88:	add	sp, sp, #4
   22a8c:	pop	{pc}		; (ldr pc, [sp], #4)
   22a90:	mov	r3, #64	; 0x40
   22a94:	mov	r2, #1
   22a98:	mov	r1, #135	; 0x87
   22a9c:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   22aa0:	cmp	r0, #0
   22aa4:	beq	229dc <myhtml_insertion_mode_in_row@@Base+0x228>
   22aa8:	mov	r0, r4
   22aac:	bl	103ac <myhtml_tree_clear_stack_back_table_row_context@plt>
   22ab0:	mov	r0, r4
   22ab4:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   22ab8:	mov	r3, #12
   22abc:	mov	r0, #0
   22ac0:	str	r3, [r4, #168]	; 0xa8
   22ac4:	b	229e0 <myhtml_insertion_mode_in_row@@Base+0x22c>
   22ac8:	mov	r0, r4
   22acc:	str	r1, [sp, #4]
   22ad0:	bl	103ac <myhtml_tree_clear_stack_back_table_row_context@plt>
   22ad4:	mov	r0, r4
   22ad8:	ldr	r1, [sp, #4]
   22adc:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   22ae0:	ldr	r3, [r4]
   22ae4:	mov	r0, r4
   22ae8:	ldr	r1, [r3, #36]	; 0x24
   22aec:	bl	10070 <myhtml_tree_active_formatting_append@plt>
   22af0:	mov	r3, #14
   22af4:	mov	r0, #0
   22af8:	str	r3, [r4, #168]	; 0xa8
   22afc:	add	sp, sp, #8
   22b00:	ldr	r4, [sp]
   22b04:	add	sp, sp, #4
   22b08:	pop	{pc}		; (ldr pc, [sp], #4)

00022b0c <myhtml_insertion_mode_in_table_text@@Base>:
   22b0c:	ldr	r3, [r1]
   22b10:	strd	r4, [sp, #-24]!	; 0xffffffe8
   22b14:	mov	r5, r0
   22b18:	strd	r6, [sp, #8]
   22b1c:	str	r8, [sp, #16]
   22b20:	str	lr, [sp, #20]
   22b24:	cmp	r3, #1
   22b28:	bne	22b5c <myhtml_insertion_mode_in_table_text@@Base+0x50>
   22b2c:	ldr	r3, [r1, #48]	; 0x30
   22b30:	mov	r6, r1
   22b34:	ands	r4, r3, #2048	; 0x800
   22b38:	bne	22bdc <myhtml_insertion_mode_in_table_text@@Base+0xd0>
   22b3c:	ldr	r0, [r5, #136]	; 0x88
   22b40:	bl	10e5c <myhtml_tree_token_list_append@plt>
   22b44:	mov	r0, #0
   22b48:	ldrd	r4, [sp]
   22b4c:	ldrd	r6, [sp, #8]
   22b50:	ldr	r8, [sp, #16]
   22b54:	add	sp, sp, #20
   22b58:	pop	{pc}		; (ldr pc, [sp], #4)
   22b5c:	ldr	r6, [r0, #136]	; 0x88
   22b60:	ldr	ip, [r6, #4]
   22b64:	cmp	ip, #0
   22b68:	beq	22bcc <myhtml_insertion_mode_in_table_text@@Base+0xc0>
   22b6c:	ldr	r2, [r6]
   22b70:	ldr	r1, [r2]
   22b74:	ldr	r4, [r1, #48]	; 0x30
   22b78:	ands	r4, r4, #8
   22b7c:	movne	r3, #0
   22b80:	bne	22b98 <myhtml_insertion_mode_in_table_text@@Base+0x8c>
   22b84:	b	22bf4 <myhtml_insertion_mode_in_table_text@@Base+0xe8>
   22b88:	ldr	r0, [r2, #4]!
   22b8c:	ldr	r4, [r0, #48]	; 0x30
   22b90:	ands	r4, r4, #8
   22b94:	beq	22bf4 <myhtml_insertion_mode_in_table_text@@Base+0xe8>
   22b98:	add	r3, r3, #1
   22b9c:	cmp	r3, ip
   22ba0:	bne	22b88 <myhtml_insertion_mode_in_table_text@@Base+0x7c>
   22ba4:	mov	r4, #0
   22ba8:	b	22bb4 <myhtml_insertion_mode_in_table_text@@Base+0xa8>
   22bac:	ldr	r3, [r6]
   22bb0:	ldr	r1, [r3, r4, lsl #2]
   22bb4:	mov	r0, r5
   22bb8:	add	r4, r4, #1
   22bbc:	bl	ff2c <myhtml_tree_node_insert_text@plt>
   22bc0:	ldr	r3, [r6, #4]
   22bc4:	cmp	r4, r3
   22bc8:	bcc	22bac <myhtml_insertion_mode_in_table_text@@Base+0xa0>
   22bcc:	ldr	r3, [r5, #172]	; 0xac
   22bd0:	mov	r0, #1
   22bd4:	str	r3, [r5, #168]	; 0xa8
   22bd8:	b	22b48 <myhtml_insertion_mode_in_table_text@@Base+0x3c>
   22bdc:	bl	10760 <myhtml_insertion_fix_for_null_char_drop_all@plt>
   22be0:	ldr	r0, [r6, #12]
   22be4:	cmp	r0, #0
   22be8:	beq	22b48 <myhtml_insertion_mode_in_table_text@@Base+0x3c>
   22bec:	mov	r1, r6
   22bf0:	b	22b3c <myhtml_insertion_mode_in_table_text@@Base+0x30>
   22bf4:	mov	r8, #1
   22bf8:	mov	r7, #0
   22bfc:	b	22c08 <myhtml_insertion_mode_in_table_text@@Base+0xfc>
   22c00:	ldr	r3, [r6]
   22c04:	ldr	r1, [r3, r4, lsl #2]
   22c08:	mov	r0, r5
   22c0c:	strb	r8, [r5, #188]	; 0xbc
   22c10:	add	r4, r4, #1
   22c14:	bl	105d4 <myhtml_insertion_mode_in_body@plt>
   22c18:	ldr	r3, [r6, #4]
   22c1c:	strb	r7, [r5, #188]	; 0xbc
   22c20:	cmp	r4, r3
   22c24:	bcc	22c00 <myhtml_insertion_mode_in_table_text@@Base+0xf4>
   22c28:	ldr	r3, [r5, #172]	; 0xac
   22c2c:	mov	r0, #1
   22c30:	str	r3, [r5, #168]	; 0xa8
   22c34:	b	22b48 <myhtml_insertion_mode_in_table_text@@Base+0x3c>

00022c38 <myhtml_insertion_mode_in_caption@@Base>:
   22c38:	ldr	r3, [r1, #48]	; 0x30
   22c3c:	strd	r4, [sp, #-16]!
   22c40:	mov	r5, r0
   22c44:	ldr	r4, [r1]
   22c48:	str	r6, [sp, #8]
   22c4c:	str	lr, [sp, #12]
   22c50:	tst	r3, #1
   22c54:	beq	22ce8 <myhtml_insertion_mode_in_caption@@Base+0xb0>
   22c58:	cmp	r4, #125	; 0x7d
   22c5c:	beq	22da4 <myhtml_insertion_mode_in_caption@@Base+0x16c>
   22c60:	bhi	22d7c <myhtml_insertion_mode_in_caption@@Base+0x144>
   22c64:	cmp	r4, #32
   22c68:	bhi	22d70 <myhtml_insertion_mode_in_caption@@Base+0x138>
   22c6c:	cmp	r4, #31
   22c70:	bcs	22d2c <myhtml_insertion_mode_in_caption@@Base+0xf4>
   22c74:	cmp	r4, #23
   22c78:	beq	22d2c <myhtml_insertion_mode_in_caption@@Base+0xf4>
   22c7c:	cmp	r4, #27
   22c80:	bne	22d58 <myhtml_insertion_mode_in_caption@@Base+0x120>
   22c84:	mov	r3, #64	; 0x40
   22c88:	mov	r2, #1
   22c8c:	mov	r1, r4
   22c90:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   22c94:	cmp	r0, #0
   22c98:	beq	22d2c <myhtml_insertion_mode_in_caption@@Base+0xf4>
   22c9c:	mov	r2, #0
   22ca0:	mov	r0, r5
   22ca4:	mov	r1, r2
   22ca8:	bl	10670 <myhtml_tree_generate_implied_end_tags@plt>
   22cac:	mov	r0, r5
   22cb0:	bl	105bc <myhtml_tree_current_node@plt>
   22cb4:	mov	r1, r4
   22cb8:	bl	10a3c <myhtml_is_html_node@plt>
   22cbc:	mov	r3, #0
   22cc0:	mov	r1, r4
   22cc4:	mov	r2, #1
   22cc8:	mov	r0, r5
   22ccc:	bl	108e0 <myhtml_tree_open_elements_pop_until@plt>
   22cd0:	mov	r0, r5
   22cd4:	bl	10df0 <myhtml_tree_active_formatting_up_to_last_marker@plt>
   22cd8:	mov	r3, #8
   22cdc:	mov	r0, #0
   22ce0:	str	r3, [r5, #168]	; 0xa8
   22ce4:	b	22d30 <myhtml_insertion_mode_in_caption@@Base+0xf8>
   22ce8:	cmp	r4, #127	; 0x7f
   22cec:	bhi	22d40 <myhtml_insertion_mode_in_caption@@Base+0x108>
   22cf0:	cmp	r4, #126	; 0x7e
   22cf4:	bcs	22d10 <myhtml_insertion_mode_in_caption@@Base+0xd8>
   22cf8:	cmp	r4, #27
   22cfc:	beq	22d10 <myhtml_insertion_mode_in_caption@@Base+0xd8>
   22d00:	bcc	22d58 <myhtml_insertion_mode_in_caption@@Base+0x120>
   22d04:	sub	r4, r4, #31
   22d08:	cmp	r4, #1
   22d0c:	bhi	22d58 <myhtml_insertion_mode_in_caption@@Base+0x120>
   22d10:	mov	r3, #64	; 0x40
   22d14:	mov	r2, #1
   22d18:	mov	r1, #27
   22d1c:	mov	r0, r5
   22d20:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   22d24:	cmp	r0, #0
   22d28:	bne	22dbc <myhtml_insertion_mode_in_caption@@Base+0x184>
   22d2c:	mov	r0, #0
   22d30:	ldrd	r4, [sp]
   22d34:	ldr	r6, [sp, #8]
   22d38:	add	sp, sp, #12
   22d3c:	pop	{pc}		; (ldr pc, [sp], #4)
   22d40:	cmp	r4, #130	; 0x82
   22d44:	bcc	22d58 <myhtml_insertion_mode_in_caption@@Base+0x120>
   22d48:	cmp	r4, #132	; 0x84
   22d4c:	bls	22d10 <myhtml_insertion_mode_in_caption@@Base+0xd8>
   22d50:	cmp	r4, #135	; 0x87
   22d54:	beq	22d10 <myhtml_insertion_mode_in_caption@@Base+0xd8>
   22d58:	mov	r0, r5
   22d5c:	ldrd	r4, [sp]
   22d60:	ldr	r6, [sp, #8]
   22d64:	ldr	lr, [sp, #12]
   22d68:	add	sp, sp, #16
   22d6c:	b	105d4 <myhtml_insertion_mode_in_body@plt>
   22d70:	cmp	r4, #65	; 0x41
   22d74:	bne	22d58 <myhtml_insertion_mode_in_caption@@Base+0x120>
   22d78:	b	22d2c <myhtml_insertion_mode_in_caption@@Base+0xf4>
   22d7c:	cmp	r4, #132	; 0x84
   22d80:	bhi	22d98 <myhtml_insertion_mode_in_caption@@Base+0x160>
   22d84:	cmp	r4, #130	; 0x82
   22d88:	bcs	22d2c <myhtml_insertion_mode_in_caption@@Base+0xf4>
   22d8c:	cmp	r4, #127	; 0x7f
   22d90:	bhi	22d58 <myhtml_insertion_mode_in_caption@@Base+0x120>
   22d94:	b	22d2c <myhtml_insertion_mode_in_caption@@Base+0xf4>
   22d98:	cmp	r4, #135	; 0x87
   22d9c:	bne	22d58 <myhtml_insertion_mode_in_caption@@Base+0x120>
   22da0:	b	22d2c <myhtml_insertion_mode_in_caption@@Base+0xf4>
   22da4:	mov	r3, #64	; 0x40
   22da8:	mov	r2, #1
   22dac:	mov	r1, #27
   22db0:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   22db4:	cmp	r0, #0
   22db8:	beq	22d2c <myhtml_insertion_mode_in_caption@@Base+0xf4>
   22dbc:	mov	r2, #0
   22dc0:	mov	r0, r5
   22dc4:	mov	r1, r2
   22dc8:	bl	10670 <myhtml_tree_generate_implied_end_tags@plt>
   22dcc:	mov	r0, r5
   22dd0:	bl	105bc <myhtml_tree_current_node@plt>
   22dd4:	mov	r1, #27
   22dd8:	bl	10a3c <myhtml_is_html_node@plt>
   22ddc:	mov	r3, #0
   22de0:	mov	r0, r5
   22de4:	mov	r2, #1
   22de8:	mov	r1, #27
   22dec:	bl	108e0 <myhtml_tree_open_elements_pop_until@plt>
   22df0:	mov	r0, r5
   22df4:	bl	10df0 <myhtml_tree_active_formatting_up_to_last_marker@plt>
   22df8:	mov	r3, #8
   22dfc:	ldr	r6, [sp, #8]
   22e00:	mov	r0, #1
   22e04:	str	r3, [r5, #168]	; 0xa8
   22e08:	ldrd	r4, [sp]
   22e0c:	add	sp, sp, #12
   22e10:	pop	{pc}		; (ldr pc, [sp], #4)

00022e14 <myhtml_insertion_mode_in_column_group@@Base>:
   22e14:	ldr	r2, [r1, #48]	; 0x30
   22e18:	mov	r3, r1
   22e1c:	strd	r4, [sp, #-16]!
   22e20:	ldr	r4, [r1]
   22e24:	str	r6, [sp, #8]
   22e28:	mov	r6, r0
   22e2c:	str	lr, [sp, #12]
   22e30:	ands	r5, r2, #1
   22e34:	beq	22e80 <myhtml_insertion_mode_in_column_group@@Base+0x6c>
   22e38:	cmp	r4, #32
   22e3c:	beq	22ef0 <myhtml_insertion_mode_in_column_group@@Base+0xdc>
   22e40:	cmp	r4, #128	; 0x80
   22e44:	beq	22f24 <myhtml_insertion_mode_in_column_group@@Base+0x110>
   22e48:	cmp	r4, #31
   22e4c:	beq	22e6c <myhtml_insertion_mode_in_column_group@@Base+0x58>
   22e50:	bl	105bc <myhtml_tree_current_node@plt>
   22e54:	cmp	r0, #0
   22e58:	beq	22e6c <myhtml_insertion_mode_in_column_group@@Base+0x58>
   22e5c:	mov	r1, #32
   22e60:	bl	10a3c <myhtml_is_html_node@plt>
   22e64:	cmp	r0, #0
   22e68:	bne	22f94 <myhtml_insertion_mode_in_column_group@@Base+0x180>
   22e6c:	mov	r0, #0
   22e70:	ldrd	r4, [sp]
   22e74:	ldr	r6, [sp, #8]
   22e78:	add	sp, sp, #12
   22e7c:	pop	{pc}		; (ldr pc, [sp], #4)
   22e80:	cmp	r4, #31
   22e84:	beq	22f40 <myhtml_insertion_mode_in_column_group@@Base+0x12c>
   22e88:	bhi	22ebc <myhtml_insertion_mode_in_column_group@@Base+0xa8>
   22e8c:	cmp	r4, #2
   22e90:	beq	22f78 <myhtml_insertion_mode_in_column_group@@Base+0x164>
   22e94:	cmp	r4, #3
   22e98:	moveq	r0, r5
   22e9c:	beq	22e70 <myhtml_insertion_mode_in_column_group@@Base+0x5c>
   22ea0:	cmp	r4, #1
   22ea4:	beq	22f54 <myhtml_insertion_mode_in_column_group@@Base+0x140>
   22ea8:	mov	r0, r6
   22eac:	bl	105bc <myhtml_tree_current_node@plt>
   22eb0:	cmp	r0, #0
   22eb4:	bne	22e5c <myhtml_insertion_mode_in_column_group@@Base+0x48>
   22eb8:	b	22e6c <myhtml_insertion_mode_in_column_group@@Base+0x58>
   22ebc:	cmp	r4, #128	; 0x80
   22ec0:	beq	22f24 <myhtml_insertion_mode_in_column_group@@Base+0x110>
   22ec4:	cmp	r4, #251	; 0xfb
   22ec8:	beq	22ed4 <myhtml_insertion_mode_in_column_group@@Base+0xc0>
   22ecc:	cmp	r4, #65	; 0x41
   22ed0:	bne	22ea8 <myhtml_insertion_mode_in_column_group@@Base+0x94>
   22ed4:	mov	r0, r6
   22ed8:	mov	r1, r3
   22edc:	ldrd	r4, [sp]
   22ee0:	ldr	r6, [sp, #8]
   22ee4:	ldr	lr, [sp, #12]
   22ee8:	add	sp, sp, #16
   22eec:	b	105d4 <myhtml_insertion_mode_in_body@plt>
   22ef0:	bl	105bc <myhtml_tree_current_node@plt>
   22ef4:	cmp	r0, #0
   22ef8:	beq	22e6c <myhtml_insertion_mode_in_column_group@@Base+0x58>
   22efc:	mov	r1, r4
   22f00:	bl	10a3c <myhtml_is_html_node@plt>
   22f04:	cmp	r0, #0
   22f08:	beq	22e6c <myhtml_insertion_mode_in_column_group@@Base+0x58>
   22f0c:	mov	r0, r6
   22f10:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   22f14:	mov	r3, #8
   22f18:	mov	r0, #0
   22f1c:	str	r3, [r6, #168]	; 0xa8
   22f20:	b	22e70 <myhtml_insertion_mode_in_column_group@@Base+0x5c>
   22f24:	mov	r0, r6
   22f28:	mov	r1, r3
   22f2c:	ldrd	r4, [sp]
   22f30:	ldr	r6, [sp, #8]
   22f34:	ldr	lr, [sp, #12]
   22f38:	add	sp, sp, #16
   22f3c:	b	fff8 <myhtml_insertion_mode_in_head@plt>
   22f40:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   22f44:	mov	r0, r6
   22f48:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   22f4c:	mov	r0, r5
   22f50:	b	22e70 <myhtml_insertion_mode_in_column_group@@Base+0x5c>
   22f54:	ldr	r3, [r1, #48]	; 0x30
   22f58:	tst	r3, #8
   22f5c:	bne	22f88 <myhtml_insertion_mode_in_column_group@@Base+0x174>
   22f60:	bl	fe90 <myhtml_insertion_fix_split_for_text_begin_ws@plt>
   22f64:	subs	r1, r0, #0
   22f68:	beq	22ea8 <myhtml_insertion_mode_in_column_group@@Base+0x94>
   22f6c:	mov	r0, r6
   22f70:	bl	ff2c <myhtml_tree_node_insert_text@plt>
   22f74:	b	22ea8 <myhtml_insertion_mode_in_column_group@@Base+0x94>
   22f78:	mov	r2, r5
   22f7c:	bl	101fc <myhtml_tree_node_insert_comment@plt>
   22f80:	mov	r0, r5
   22f84:	b	22e70 <myhtml_insertion_mode_in_column_group@@Base+0x5c>
   22f88:	bl	ff2c <myhtml_tree_node_insert_text@plt>
   22f8c:	mov	r0, r5
   22f90:	b	22e70 <myhtml_insertion_mode_in_column_group@@Base+0x5c>
   22f94:	mov	r0, r6
   22f98:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   22f9c:	mov	r3, #8
   22fa0:	mov	r0, #1
   22fa4:	str	r3, [r6, #168]	; 0xa8
   22fa8:	b	22e70 <myhtml_insertion_mode_in_column_group@@Base+0x5c>

00022fac <myhtml_insertion_mode_in_cell@@Base>:
   22fac:	ldr	r3, [r1, #48]	; 0x30
   22fb0:	strd	r4, [sp, #-16]!
   22fb4:	mov	r4, r1
   22fb8:	mov	r5, r0
   22fbc:	ldr	r1, [r1]
   22fc0:	str	r6, [sp, #8]
   22fc4:	str	lr, [sp, #12]
   22fc8:	tst	r3, #1
   22fcc:	beq	231a4 <myhtml_insertion_mode_in_cell@@Base+0x1f8>
   22fd0:	sub	r3, r1, #23
   22fd4:	cmp	r3, #112	; 0x70
   22fd8:	addls	pc, pc, r3, lsl #2
   22fdc:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   22fe0:	b	23200 <myhtml_insertion_mode_in_cell@@Base+0x254>
   22fe4:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   22fe8:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   22fec:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   22ff0:	b	23200 <myhtml_insertion_mode_in_cell@@Base+0x254>
   22ff4:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   22ff8:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   22ffc:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   23000:	b	23200 <myhtml_insertion_mode_in_cell@@Base+0x254>
   23004:	b	23200 <myhtml_insertion_mode_in_cell@@Base+0x254>
   23008:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   2300c:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   23010:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   23014:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   23018:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   2301c:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   23020:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   23024:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   23028:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   2302c:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   23030:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   23034:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   23038:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   2303c:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   23040:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   23044:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   23048:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   2304c:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   23050:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   23054:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   23058:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   2305c:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   23060:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   23064:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   23068:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   2306c:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   23070:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   23074:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   23078:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   2307c:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   23080:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   23084:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   23088:	b	23200 <myhtml_insertion_mode_in_cell@@Base+0x254>
   2308c:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   23090:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   23094:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   23098:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   2309c:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   230a0:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   230a4:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   230a8:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   230ac:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   230b0:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   230b4:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   230b8:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   230bc:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   230c0:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   230c4:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   230c8:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   230cc:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   230d0:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   230d4:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   230d8:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   230dc:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   230e0:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   230e4:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   230e8:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   230ec:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   230f0:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   230f4:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   230f8:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   230fc:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   23100:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   23104:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   23108:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   2310c:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   23110:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   23114:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   23118:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   2311c:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   23120:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   23124:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   23128:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   2312c:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   23130:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   23134:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   23138:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   2313c:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   23140:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   23144:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   23148:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   2314c:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   23150:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   23154:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   23158:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   2315c:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   23160:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   23164:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   23168:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   2316c:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   23170:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   23174:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   23178:	b	23248 <myhtml_insertion_mode_in_cell@@Base+0x29c>
   2317c:	b	23248 <myhtml_insertion_mode_in_cell@@Base+0x29c>
   23180:	b	2328c <myhtml_insertion_mode_in_cell@@Base+0x2e0>
   23184:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   23188:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   2318c:	b	23248 <myhtml_insertion_mode_in_cell@@Base+0x29c>
   23190:	b	2328c <myhtml_insertion_mode_in_cell@@Base+0x2e0>
   23194:	b	23248 <myhtml_insertion_mode_in_cell@@Base+0x29c>
   23198:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   2319c:	b	23318 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   231a0:	b	23248 <myhtml_insertion_mode_in_cell@@Base+0x29c>
   231a4:	cmp	r1, #127	; 0x7f
   231a8:	bhi	23214 <myhtml_insertion_mode_in_cell@@Base+0x268>
   231ac:	cmp	r1, #126	; 0x7e
   231b0:	bcs	231cc <myhtml_insertion_mode_in_cell@@Base+0x220>
   231b4:	cmp	r1, #27
   231b8:	beq	231cc <myhtml_insertion_mode_in_cell@@Base+0x220>
   231bc:	bcc	2322c <myhtml_insertion_mode_in_cell@@Base+0x280>
   231c0:	sub	r1, r1, #31
   231c4:	cmp	r1, #1
   231c8:	bhi	2322c <myhtml_insertion_mode_in_cell@@Base+0x280>
   231cc:	mov	r3, #64	; 0x40
   231d0:	mov	r2, #1
   231d4:	mov	r1, #127	; 0x7f
   231d8:	mov	r0, r5
   231dc:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   231e0:	mov	r6, r0
   231e4:	mov	r3, #64	; 0x40
   231e8:	mov	r2, #1
   231ec:	mov	r1, #131	; 0x83
   231f0:	mov	r0, r5
   231f4:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   231f8:	orrs	r3, r6, r0
   231fc:	bne	232ec <myhtml_insertion_mode_in_cell@@Base+0x340>
   23200:	mov	r0, #0
   23204:	ldrd	r4, [sp]
   23208:	ldr	r6, [sp, #8]
   2320c:	add	sp, sp, #12
   23210:	pop	{pc}		; (ldr pc, [sp], #4)
   23214:	cmp	r1, #130	; 0x82
   23218:	bcc	2322c <myhtml_insertion_mode_in_cell@@Base+0x280>
   2321c:	cmp	r1, #132	; 0x84
   23220:	bls	231cc <myhtml_insertion_mode_in_cell@@Base+0x220>
   23224:	cmp	r1, #135	; 0x87
   23228:	beq	231cc <myhtml_insertion_mode_in_cell@@Base+0x220>
   2322c:	mov	r1, r4
   23230:	mov	r0, r5
   23234:	ldrd	r4, [sp]
   23238:	ldr	r6, [sp, #8]
   2323c:	ldr	lr, [sp, #12]
   23240:	add	sp, sp, #16
   23244:	b	105d4 <myhtml_insertion_mode_in_body@plt>
   23248:	mov	r3, #64	; 0x40
   2324c:	mov	r2, #1
   23250:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   23254:	cmp	r0, #0
   23258:	beq	23200 <myhtml_insertion_mode_in_cell@@Base+0x254>
   2325c:	mov	r1, #127	; 0x7f
   23260:	mov	r3, #64	; 0x40
   23264:	mov	r2, #1
   23268:	mov	r0, r5
   2326c:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   23270:	subs	r1, r0, #0
   23274:	beq	23330 <myhtml_insertion_mode_in_cell@@Base+0x384>
   23278:	mov	r0, r5
   2327c:	mov	r2, r4
   23280:	bl	10cd0 <myhtml_tree_close_cell@plt>
   23284:	mov	r0, #1
   23288:	b	23204 <myhtml_insertion_mode_in_cell@@Base+0x258>
   2328c:	mov	r3, #64	; 0x40
   23290:	mov	r2, #1
   23294:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   23298:	cmp	r0, #0
   2329c:	beq	23200 <myhtml_insertion_mode_in_cell@@Base+0x254>
   232a0:	mov	r2, #0
   232a4:	mov	r0, r5
   232a8:	mov	r1, r2
   232ac:	bl	10670 <myhtml_tree_generate_implied_end_tags@plt>
   232b0:	mov	r0, r5
   232b4:	bl	105bc <myhtml_tree_current_node@plt>
   232b8:	ldr	r1, [r4]
   232bc:	bl	10a3c <myhtml_is_html_node@plt>
   232c0:	mov	r3, #0
   232c4:	mov	r2, #1
   232c8:	ldr	r1, [r4]
   232cc:	mov	r0, r5
   232d0:	bl	108e0 <myhtml_tree_open_elements_pop_until@plt>
   232d4:	mov	r0, r5
   232d8:	bl	10df0 <myhtml_tree_active_formatting_up_to_last_marker@plt>
   232dc:	mov	r3, #13
   232e0:	mov	r0, #0
   232e4:	str	r3, [r5, #168]	; 0xa8
   232e8:	b	23204 <myhtml_insertion_mode_in_cell@@Base+0x258>
   232ec:	cmp	r6, #0
   232f0:	mov	r2, r4
   232f4:	movne	r1, r6
   232f8:	moveq	r1, r0
   232fc:	mov	r0, r5
   23300:	bl	10cd0 <myhtml_tree_close_cell@plt>
   23304:	ldrd	r4, [sp]
   23308:	mov	r0, #1
   2330c:	ldr	r6, [sp, #8]
   23310:	add	sp, sp, #12
   23314:	pop	{pc}		; (ldr pc, [sp], #4)
   23318:	mov	r1, r4
   2331c:	ldrd	r4, [sp]
   23320:	ldr	r6, [sp, #8]
   23324:	ldr	lr, [sp, #12]
   23328:	add	sp, sp, #16
   2332c:	b	10118 <myhtml_insertion_mode_in_table@plt>
   23330:	mov	r1, #131	; 0x83
   23334:	mov	r3, #64	; 0x40
   23338:	mov	r2, #1
   2333c:	mov	r0, r5
   23340:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   23344:	subs	r1, r0, #0
   23348:	moveq	r0, #1
   2334c:	bne	23278 <myhtml_insertion_mode_in_cell@@Base+0x2cc>
   23350:	b	23204 <myhtml_insertion_mode_in_cell@@Base+0x258>

00023354 <myhtml_insertion_mode_in_select@@Base>:
   23354:	strd	r4, [sp, #-16]!
   23358:	mov	r5, r1
   2335c:	ldr	r2, [r1, #48]	; 0x30
   23360:	ldr	r3, [r1]
   23364:	str	r6, [sp, #8]
   23368:	mov	r6, r0
   2336c:	str	lr, [sp, #12]
   23370:	ands	r4, r2, #1
   23374:	beq	2344c <myhtml_insertion_mode_in_select@@Base+0xf8>
   23378:	sub	r3, r3, #96	; 0x60
   2337c:	cmp	r3, #32
   23380:	addls	pc, pc, r3, lsl #2
   23384:	b	23438 <myhtml_insertion_mode_in_select@@Base+0xe4>
   23388:	b	23564 <myhtml_insertion_mode_in_select@@Base+0x210>
   2338c:	b	235ac <myhtml_insertion_mode_in_select@@Base+0x258>
   23390:	b	23438 <myhtml_insertion_mode_in_select@@Base+0xe4>
   23394:	b	23438 <myhtml_insertion_mode_in_select@@Base+0xe4>
   23398:	b	23438 <myhtml_insertion_mode_in_select@@Base+0xe4>
   2339c:	b	23438 <myhtml_insertion_mode_in_select@@Base+0xe4>
   233a0:	b	23438 <myhtml_insertion_mode_in_select@@Base+0xe4>
   233a4:	b	23438 <myhtml_insertion_mode_in_select@@Base+0xe4>
   233a8:	b	23438 <myhtml_insertion_mode_in_select@@Base+0xe4>
   233ac:	b	23438 <myhtml_insertion_mode_in_select@@Base+0xe4>
   233b0:	b	23438 <myhtml_insertion_mode_in_select@@Base+0xe4>
   233b4:	b	23438 <myhtml_insertion_mode_in_select@@Base+0xe4>
   233b8:	b	23438 <myhtml_insertion_mode_in_select@@Base+0xe4>
   233bc:	b	23438 <myhtml_insertion_mode_in_select@@Base+0xe4>
   233c0:	b	23438 <myhtml_insertion_mode_in_select@@Base+0xe4>
   233c4:	b	23438 <myhtml_insertion_mode_in_select@@Base+0xe4>
   233c8:	b	23438 <myhtml_insertion_mode_in_select@@Base+0xe4>
   233cc:	b	23438 <myhtml_insertion_mode_in_select@@Base+0xe4>
   233d0:	b	2340c <myhtml_insertion_mode_in_select@@Base+0xb8>
   233d4:	b	23438 <myhtml_insertion_mode_in_select@@Base+0xe4>
   233d8:	b	23438 <myhtml_insertion_mode_in_select@@Base+0xe4>
   233dc:	b	23438 <myhtml_insertion_mode_in_select@@Base+0xe4>
   233e0:	b	23438 <myhtml_insertion_mode_in_select@@Base+0xe4>
   233e4:	b	23438 <myhtml_insertion_mode_in_select@@Base+0xe4>
   233e8:	b	23438 <myhtml_insertion_mode_in_select@@Base+0xe4>
   233ec:	b	23438 <myhtml_insertion_mode_in_select@@Base+0xe4>
   233f0:	b	23438 <myhtml_insertion_mode_in_select@@Base+0xe4>
   233f4:	b	23438 <myhtml_insertion_mode_in_select@@Base+0xe4>
   233f8:	b	23438 <myhtml_insertion_mode_in_select@@Base+0xe4>
   233fc:	b	23438 <myhtml_insertion_mode_in_select@@Base+0xe4>
   23400:	b	23438 <myhtml_insertion_mode_in_select@@Base+0xe4>
   23404:	b	23438 <myhtml_insertion_mode_in_select@@Base+0xe4>
   23408:	b	23548 <myhtml_insertion_mode_in_select@@Base+0x1f4>
   2340c:	mov	r1, #114	; 0x72
   23410:	mov	r3, #128	; 0x80
   23414:	mov	r2, #1
   23418:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   2341c:	subs	r1, r0, #0
   23420:	beq	23438 <myhtml_insertion_mode_in_select@@Base+0xe4>
   23424:	mov	r0, r6
   23428:	mov	r2, #0
   2342c:	bl	100dc <myhtml_tree_open_elements_pop_until_by_node@plt>
   23430:	mov	r0, r6
   23434:	bl	106c4 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   23438:	mov	r0, #0
   2343c:	ldrd	r4, [sp]
   23440:	ldr	r6, [sp, #8]
   23444:	add	sp, sp, #12
   23448:	pop	{pc}		; (ldr pc, [sp], #4)
   2344c:	cmp	r3, #96	; 0x60
   23450:	beq	23628 <myhtml_insertion_mode_in_select@@Base+0x2d4>
   23454:	bls	23490 <myhtml_insertion_mode_in_select@@Base+0x13c>
   23458:	cmp	r3, #114	; 0x72
   2345c:	beq	235f4 <myhtml_insertion_mode_in_select@@Base+0x2a0>
   23460:	bls	234c8 <myhtml_insertion_mode_in_select@@Base+0x174>
   23464:	cmp	r3, #129	; 0x81
   23468:	beq	23508 <myhtml_insertion_mode_in_select@@Base+0x1b4>
   2346c:	cmp	r3, #251	; 0xfb
   23470:	bne	234bc <myhtml_insertion_mode_in_select@@Base+0x168>
   23474:	mov	r1, r5
   23478:	mov	r0, r6
   2347c:	ldrd	r4, [sp]
   23480:	ldr	r6, [sp, #8]
   23484:	ldr	lr, [sp, #12]
   23488:	add	sp, sp, #16
   2348c:	b	105d4 <myhtml_insertion_mode_in_body@plt>
   23490:	cmp	r3, #65	; 0x41
   23494:	beq	23474 <myhtml_insertion_mode_in_select@@Base+0x120>
   23498:	bhi	234f8 <myhtml_insertion_mode_in_select@@Base+0x1a4>
   2349c:	cmp	r3, #1
   234a0:	beq	235c4 <myhtml_insertion_mode_in_select@@Base+0x270>
   234a4:	cmp	r3, #2
   234a8:	bne	23438 <myhtml_insertion_mode_in_select@@Base+0xe4>
   234ac:	mov	r2, r4
   234b0:	bl	101fc <myhtml_tree_node_insert_comment@plt>
   234b4:	mov	r0, r4
   234b8:	b	2343c <myhtml_insertion_mode_in_select@@Base+0xe8>
   234bc:	cmp	r3, #128	; 0x80
   234c0:	bne	23438 <myhtml_insertion_mode_in_select@@Base+0xe4>
   234c4:	b	23548 <myhtml_insertion_mode_in_select@@Base+0x1f4>
   234c8:	cmp	r3, #97	; 0x61
   234cc:	bne	23540 <myhtml_insertion_mode_in_select@@Base+0x1ec>
   234d0:	bl	105bc <myhtml_tree_current_node@plt>
   234d4:	ldr	r1, [r5]
   234d8:	bl	10a3c <myhtml_is_html_node@plt>
   234dc:	cmp	r0, #0
   234e0:	bne	2365c <myhtml_insertion_mode_in_select@@Base+0x308>
   234e4:	mov	r1, r5
   234e8:	mov	r0, r6
   234ec:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   234f0:	mov	r0, #0
   234f4:	b	2343c <myhtml_insertion_mode_in_select@@Base+0xe8>
   234f8:	cmp	r3, #70	; 0x46
   234fc:	beq	23508 <myhtml_insertion_mode_in_select@@Base+0x1b4>
   23500:	cmp	r3, #74	; 0x4a
   23504:	bne	23438 <myhtml_insertion_mode_in_select@@Base+0xe4>
   23508:	mov	r1, #114	; 0x72
   2350c:	mov	r3, #128	; 0x80
   23510:	mov	r2, #1
   23514:	mov	r0, r6
   23518:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   2351c:	subs	r1, r0, #0
   23520:	beq	23438 <myhtml_insertion_mode_in_select@@Base+0xe4>
   23524:	mov	r2, #0
   23528:	mov	r0, r6
   2352c:	bl	100dc <myhtml_tree_open_elements_pop_until_by_node@plt>
   23530:	mov	r0, r6
   23534:	bl	106c4 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   23538:	mov	r0, #1
   2353c:	b	2343c <myhtml_insertion_mode_in_select@@Base+0xe8>
   23540:	cmp	r3, #112	; 0x70
   23544:	bne	23438 <myhtml_insertion_mode_in_select@@Base+0xe4>
   23548:	mov	r1, r5
   2354c:	mov	r0, r6
   23550:	ldrd	r4, [sp]
   23554:	ldr	r6, [sp, #8]
   23558:	ldr	lr, [sp, #12]
   2355c:	add	sp, sp, #16
   23560:	b	fff8 <myhtml_insertion_mode_in_head@plt>
   23564:	bl	105bc <myhtml_tree_current_node@plt>
   23568:	mov	r1, #97	; 0x61
   2356c:	bl	10a3c <myhtml_is_html_node@plt>
   23570:	cmp	r0, #0
   23574:	beq	23588 <myhtml_insertion_mode_in_select@@Base+0x234>
   23578:	ldr	r3, [r6, #128]	; 0x80
   2357c:	ldr	r2, [r3, #4]
   23580:	cmp	r2, #1
   23584:	bhi	23668 <myhtml_insertion_mode_in_select@@Base+0x314>
   23588:	mov	r0, r6
   2358c:	bl	105bc <myhtml_tree_current_node@plt>
   23590:	mov	r1, #96	; 0x60
   23594:	bl	10a3c <myhtml_is_html_node@plt>
   23598:	cmp	r0, #0
   2359c:	beq	23438 <myhtml_insertion_mode_in_select@@Base+0xe4>
   235a0:	mov	r0, r6
   235a4:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   235a8:	b	23438 <myhtml_insertion_mode_in_select@@Base+0xe4>
   235ac:	bl	105bc <myhtml_tree_current_node@plt>
   235b0:	mov	r1, #97	; 0x61
   235b4:	bl	10a3c <myhtml_is_html_node@plt>
   235b8:	cmp	r0, #0
   235bc:	beq	23438 <myhtml_insertion_mode_in_select@@Base+0xe4>
   235c0:	b	235a0 <myhtml_insertion_mode_in_select@@Base+0x24c>
   235c4:	ldr	r3, [r1, #48]	; 0x30
   235c8:	tst	r3, #2048	; 0x800
   235cc:	beq	235e0 <myhtml_insertion_mode_in_select@@Base+0x28c>
   235d0:	bl	10760 <myhtml_insertion_fix_for_null_char_drop_all@plt>
   235d4:	ldr	r3, [r5, #12]
   235d8:	cmp	r3, #0
   235dc:	beq	23438 <myhtml_insertion_mode_in_select@@Base+0xe4>
   235e0:	mov	r1, r5
   235e4:	mov	r0, r6
   235e8:	bl	ff2c <myhtml_tree_node_insert_text@plt>
   235ec:	mov	r0, #0
   235f0:	b	2343c <myhtml_insertion_mode_in_select@@Base+0xe8>
   235f4:	mov	r1, r3
   235f8:	mov	r2, #1
   235fc:	mov	r3, #128	; 0x80
   23600:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   23604:	subs	r1, r0, #0
   23608:	beq	23438 <myhtml_insertion_mode_in_select@@Base+0xe4>
   2360c:	mov	r2, r4
   23610:	mov	r0, r6
   23614:	bl	100dc <myhtml_tree_open_elements_pop_until_by_node@plt>
   23618:	mov	r0, r6
   2361c:	bl	106c4 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   23620:	mov	r0, r4
   23624:	b	2343c <myhtml_insertion_mode_in_select@@Base+0xe8>
   23628:	bl	105bc <myhtml_tree_current_node@plt>
   2362c:	ldr	r3, [r0, #4]
   23630:	cmp	r3, #97	; 0x61
   23634:	beq	23694 <myhtml_insertion_mode_in_select@@Base+0x340>
   23638:	mov	r0, r6
   2363c:	bl	105bc <myhtml_tree_current_node@plt>
   23640:	ldr	r3, [r5]
   23644:	ldr	r2, [r0, #4]
   23648:	cmp	r2, r3
   2364c:	bne	234e4 <myhtml_insertion_mode_in_select@@Base+0x190>
   23650:	ldr	r3, [r0, #8]
   23654:	cmp	r3, #1
   23658:	bne	234e4 <myhtml_insertion_mode_in_select@@Base+0x190>
   2365c:	mov	r0, r6
   23660:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   23664:	b	234e4 <myhtml_insertion_mode_in_select@@Base+0x190>
   23668:	ldr	r0, [r3]
   2366c:	mov	r1, #96	; 0x60
   23670:	ldr	r2, [r3, #4]
   23674:	sub	r3, r2, #-1073741822	; 0xc0000002
   23678:	ldr	r0, [r0, r3, lsl #2]
   2367c:	bl	10a3c <myhtml_is_html_node@plt>
   23680:	cmp	r0, #0
   23684:	beq	23588 <myhtml_insertion_mode_in_select@@Base+0x234>
   23688:	mov	r0, r6
   2368c:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   23690:	b	23588 <myhtml_insertion_mode_in_select@@Base+0x234>
   23694:	ldr	r3, [r0, #8]
   23698:	cmp	r3, #1
   2369c:	bne	23638 <myhtml_insertion_mode_in_select@@Base+0x2e4>
   236a0:	mov	r0, r6
   236a4:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   236a8:	b	23638 <myhtml_insertion_mode_in_select@@Base+0x2e4>

000236ac <myhtml_insertion_mode_in_select_in_table@@Base>:
   236ac:	str	r4, [sp, #-8]!
   236b0:	mov	r4, r0
   236b4:	ldr	r2, [r1, #48]	; 0x30
   236b8:	ldr	r3, [r1]
   236bc:	str	lr, [sp, #4]
   236c0:	tst	r2, #1
   236c4:	beq	23734 <myhtml_insertion_mode_in_select_in_table@@Base+0x88>
   236c8:	cmp	r3, #127	; 0x7f
   236cc:	bls	23710 <myhtml_insertion_mode_in_select_in_table@@Base+0x64>
   236d0:	cmp	r3, #130	; 0x82
   236d4:	bcc	23720 <myhtml_insertion_mode_in_select_in_table@@Base+0x74>
   236d8:	cmp	r3, #132	; 0x84
   236dc:	bls	236e8 <myhtml_insertion_mode_in_select_in_table@@Base+0x3c>
   236e0:	cmp	r3, #135	; 0x87
   236e4:	bne	23720 <myhtml_insertion_mode_in_select_in_table@@Base+0x74>
   236e8:	mov	r1, r3
   236ec:	mov	r2, #1
   236f0:	mov	r3, #64	; 0x40
   236f4:	mov	r0, r4
   236f8:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   236fc:	cmp	r0, #0
   23700:	bne	2374c <myhtml_insertion_mode_in_select_in_table@@Base+0xa0>
   23704:	ldr	r4, [sp]
   23708:	add	sp, sp, #4
   2370c:	pop	{pc}		; (ldr pc, [sp], #4)
   23710:	cmp	r3, #125	; 0x7d
   23714:	bcs	236e8 <myhtml_insertion_mode_in_select_in_table@@Base+0x3c>
   23718:	cmp	r3, #27
   2371c:	beq	236e8 <myhtml_insertion_mode_in_select_in_table@@Base+0x3c>
   23720:	mov	r0, r4
   23724:	ldr	r4, [sp]
   23728:	ldr	lr, [sp, #4]
   2372c:	add	sp, sp, #8
   23730:	b	10358 <myhtml_insertion_mode_in_select@plt>
   23734:	cmp	r3, #127	; 0x7f
   23738:	bhi	23778 <myhtml_insertion_mode_in_select_in_table@@Base+0xcc>
   2373c:	cmp	r3, #125	; 0x7d
   23740:	bcs	2374c <myhtml_insertion_mode_in_select_in_table@@Base+0xa0>
   23744:	cmp	r3, #27
   23748:	bne	23720 <myhtml_insertion_mode_in_select_in_table@@Base+0x74>
   2374c:	mov	r0, r4
   23750:	mov	r3, #0
   23754:	mov	r2, #1
   23758:	mov	r1, #114	; 0x72
   2375c:	bl	108e0 <myhtml_tree_open_elements_pop_until@plt>
   23760:	mov	r0, r4
   23764:	bl	106c4 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   23768:	ldr	r4, [sp]
   2376c:	add	sp, sp, #4
   23770:	mov	r0, #1
   23774:	pop	{pc}		; (ldr pc, [sp], #4)
   23778:	cmp	r3, #130	; 0x82
   2377c:	bcc	23720 <myhtml_insertion_mode_in_select_in_table@@Base+0x74>
   23780:	cmp	r3, #132	; 0x84
   23784:	bls	2374c <myhtml_insertion_mode_in_select_in_table@@Base+0xa0>
   23788:	cmp	r3, #135	; 0x87
   2378c:	bne	23720 <myhtml_insertion_mode_in_select_in_table@@Base+0x74>
   23790:	b	2374c <myhtml_insertion_mode_in_select_in_table@@Base+0xa0>

00023794 <myhtml_insertion_mode_after_body@@Base>:
   23794:	ldr	r2, [r1, #48]	; 0x30
   23798:	mov	ip, r0
   2379c:	strd	r4, [sp, #-16]!
   237a0:	ldr	r5, [r1]
   237a4:	str	r6, [sp, #8]
   237a8:	str	lr, [sp, #12]
   237ac:	sub	sp, sp, #8
   237b0:	ands	r4, r2, #1
   237b4:	beq	237fc <myhtml_insertion_mode_after_body@@Base+0x68>
   237b8:	cmp	r5, #65	; 0x41
   237bc:	beq	237e0 <myhtml_insertion_mode_after_body@@Base+0x4c>
   237c0:	mov	r3, #6
   237c4:	mov	r0, #1
   237c8:	str	r3, [ip, #168]	; 0xa8
   237cc:	add	sp, sp, #8
   237d0:	ldrd	r4, [sp]
   237d4:	ldr	r6, [sp, #8]
   237d8:	add	sp, sp, #12
   237dc:	pop	{pc}		; (ldr pc, [sp], #4)
   237e0:	ldr	r0, [r0, #88]	; 0x58
   237e4:	cmp	r0, #0
   237e8:	moveq	r3, #21
   237ec:	streq	r3, [ip, #168]	; 0xa8
   237f0:	beq	237cc <myhtml_insertion_mode_after_body@@Base+0x38>
   237f4:	mov	r0, #0
   237f8:	b	237cc <myhtml_insertion_mode_after_body@@Base+0x38>
   237fc:	cmp	r5, #3
   23800:	beq	237f4 <myhtml_insertion_mode_after_body@@Base+0x60>
   23804:	bhi	23868 <myhtml_insertion_mode_after_body@@Base+0xd4>
   23808:	cmp	r5, #1
   2380c:	mov	r3, r1
   23810:	beq	23884 <myhtml_insertion_mode_after_body@@Base+0xf0>
   23814:	cmp	r5, #2
   23818:	bne	237c0 <myhtml_insertion_mode_after_body@@Base+0x2c>
   2381c:	ldr	r1, [r0, #128]	; 0x80
   23820:	ldr	r2, [r1, #4]
   23824:	cmp	r2, #0
   23828:	moveq	r0, r2
   2382c:	beq	237cc <myhtml_insertion_mode_after_body@@Base+0x38>
   23830:	ldr	r2, [r1]
   23834:	str	r3, [sp, #4]
   23838:	ldr	r6, [r2]
   2383c:	bl	ff80 <myhtml_tree_node_create@plt>
   23840:	ldr	r3, [sp, #4]
   23844:	mov	r2, r0
   23848:	mov	r1, r0
   2384c:	ldr	ip, [r6, #8]
   23850:	mov	r0, r6
   23854:	stmib	r2, {r5, ip}
   23858:	str	r3, [r2, #32]
   2385c:	bl	1064c <myhtml_tree_node_add_child@plt>
   23860:	mov	r0, r4
   23864:	b	237cc <myhtml_insertion_mode_after_body@@Base+0x38>
   23868:	cmp	r5, #65	; 0x41
   2386c:	beq	2389c <myhtml_insertion_mode_after_body@@Base+0x108>
   23870:	cmp	r5, #251	; 0xfb
   23874:	bne	237c0 <myhtml_insertion_mode_after_body@@Base+0x2c>
   23878:	bl	102a4 <myhtml_rules_stop_parsing@plt>
   2387c:	mov	r0, r4
   23880:	b	237cc <myhtml_insertion_mode_after_body@@Base+0x38>
   23884:	ldr	r3, [r1, #48]	; 0x30
   23888:	tst	r3, #8
   2388c:	moveq	r3, #6
   23890:	moveq	r0, r5
   23894:	streq	r3, [ip, #168]	; 0xa8
   23898:	beq	237cc <myhtml_insertion_mode_after_body@@Base+0x38>
   2389c:	add	sp, sp, #8
   238a0:	ldrd	r4, [sp]
   238a4:	ldr	r6, [sp, #8]
   238a8:	ldr	lr, [sp, #12]
   238ac:	add	sp, sp, #16
   238b0:	b	105d4 <myhtml_insertion_mode_in_body@plt>

000238b4 <myhtml_insertion_mode_in_frameset@@Base>:
   238b4:	strd	r4, [sp, #-16]!
   238b8:	mov	r5, r0
   238bc:	ldr	r2, [r1, #48]	; 0x30
   238c0:	ldr	r3, [r1]
   238c4:	str	r6, [sp, #8]
   238c8:	str	lr, [sp, #12]
   238cc:	ands	r2, r2, #1
   238d0:	beq	238f0 <myhtml_insertion_mode_in_frameset@@Base+0x3c>
   238d4:	cmp	r3, #54	; 0x36
   238d8:	beq	23960 <myhtml_insertion_mode_in_frameset@@Base+0xac>
   238dc:	ldrd	r4, [sp]
   238e0:	mov	r0, #0
   238e4:	ldr	r6, [sp, #8]
   238e8:	add	sp, sp, #12
   238ec:	pop	{pc}		; (ldr pc, [sp], #4)
   238f0:	cmp	r3, #54	; 0x36
   238f4:	beq	239a8 <myhtml_insertion_mode_in_frameset@@Base+0xf4>
   238f8:	bhi	23934 <myhtml_insertion_mode_in_frameset@@Base+0x80>
   238fc:	cmp	r3, #2
   23900:	beq	239e4 <myhtml_insertion_mode_in_frameset@@Base+0x130>
   23904:	cmp	r3, #53	; 0x35
   23908:	beq	239d4 <myhtml_insertion_mode_in_frameset@@Base+0x120>
   2390c:	cmp	r3, #1
   23910:	bne	238dc <myhtml_insertion_mode_in_frameset@@Base+0x28>
   23914:	ldr	r3, [r1, #48]	; 0x30
   23918:	mov	r4, r1
   2391c:	tst	r3, #8
   23920:	beq	239ec <myhtml_insertion_mode_in_frameset@@Base+0x138>
   23924:	mov	r1, r4
   23928:	mov	r0, r5
   2392c:	bl	ff2c <myhtml_tree_node_insert_text@plt>
   23930:	b	238dc <myhtml_insertion_mode_in_frameset@@Base+0x28>
   23934:	cmp	r3, #92	; 0x5c
   23938:	beq	239c0 <myhtml_insertion_mode_in_frameset@@Base+0x10c>
   2393c:	cmp	r3, #251	; 0xfb
   23940:	beq	239b0 <myhtml_insertion_mode_in_frameset@@Base+0xfc>
   23944:	cmp	r3, #65	; 0x41
   23948:	bne	238dc <myhtml_insertion_mode_in_frameset@@Base+0x28>
   2394c:	ldrd	r4, [sp]
   23950:	ldr	r6, [sp, #8]
   23954:	ldr	lr, [sp, #12]
   23958:	add	sp, sp, #16
   2395c:	b	105d4 <myhtml_insertion_mode_in_body@plt>
   23960:	bl	105bc <myhtml_tree_current_node@plt>
   23964:	ldr	r3, [r5, #84]	; 0x54
   23968:	ldr	r3, [r3, #20]
   2396c:	cmp	r3, r0
   23970:	beq	238dc <myhtml_insertion_mode_in_frameset@@Base+0x28>
   23974:	mov	r0, r5
   23978:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   2397c:	mov	r0, r5
   23980:	bl	105bc <myhtml_tree_current_node@plt>
   23984:	ldr	r3, [r5, #88]	; 0x58
   23988:	cmp	r3, #0
   2398c:	bne	238dc <myhtml_insertion_mode_in_frameset@@Base+0x28>
   23990:	ldr	r3, [r0, #4]
   23994:	cmp	r3, #54	; 0x36
   23998:	beq	23a0c <myhtml_insertion_mode_in_frameset@@Base+0x158>
   2399c:	mov	r3, #20
   239a0:	str	r3, [r5, #168]	; 0xa8
   239a4:	b	238dc <myhtml_insertion_mode_in_frameset@@Base+0x28>
   239a8:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   239ac:	b	238dc <myhtml_insertion_mode_in_frameset@@Base+0x28>
   239b0:	bl	105bc <myhtml_tree_current_node@plt>
   239b4:	mov	r0, r5
   239b8:	bl	102a4 <myhtml_rules_stop_parsing@plt>
   239bc:	b	238dc <myhtml_insertion_mode_in_frameset@@Base+0x28>
   239c0:	ldrd	r4, [sp]
   239c4:	ldr	r6, [sp, #8]
   239c8:	ldr	lr, [sp, #12]
   239cc:	add	sp, sp, #16
   239d0:	b	fff8 <myhtml_insertion_mode_in_head@plt>
   239d4:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   239d8:	mov	r0, r5
   239dc:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   239e0:	b	238dc <myhtml_insertion_mode_in_frameset@@Base+0x28>
   239e4:	bl	101fc <myhtml_tree_node_insert_comment@plt>
   239e8:	b	238dc <myhtml_insertion_mode_in_frameset@@Base+0x28>
   239ec:	ldr	r0, [r0, #8]
   239f0:	bl	10610 <myhtml_token_node_wait_for_done@plt>
   239f4:	add	r0, r4, #4
   239f8:	bl	10280 <mycore_string_stay_only_whitespace@plt>
   239fc:	ldr	r3, [r4, #12]
   23a00:	cmp	r3, #0
   23a04:	beq	238dc <myhtml_insertion_mode_in_frameset@@Base+0x28>
   23a08:	b	23924 <myhtml_insertion_mode_in_frameset@@Base+0x70>
   23a0c:	ldr	r3, [r0, #8]
   23a10:	cmp	r3, #1
   23a14:	bne	2399c <myhtml_insertion_mode_in_frameset@@Base+0xe8>
   23a18:	b	238dc <myhtml_insertion_mode_in_frameset@@Base+0x28>

00023a1c <myhtml_insertion_mode_after_frameset@@Base>:
   23a1c:	strd	r4, [sp, #-16]!
   23a20:	mov	r5, r0
   23a24:	ldr	r2, [r1, #48]	; 0x30
   23a28:	ldr	ip, [r1]
   23a2c:	str	r6, [sp, #8]
   23a30:	str	lr, [sp, #12]
   23a34:	ands	r2, r2, #1
   23a38:	beq	23a5c <myhtml_insertion_mode_after_frameset@@Base+0x40>
   23a3c:	cmp	ip, #65	; 0x41
   23a40:	moveq	r3, #22
   23a44:	streq	r3, [r0, #168]	; 0xa8
   23a48:	ldrd	r4, [sp]
   23a4c:	mov	r0, #0
   23a50:	ldr	r6, [sp, #8]
   23a54:	add	sp, sp, #12
   23a58:	pop	{pc}		; (ldr pc, [sp], #4)
   23a5c:	cmp	ip, #65	; 0x41
   23a60:	beq	23a98 <myhtml_insertion_mode_after_frameset@@Base+0x7c>
   23a64:	bhi	23a80 <myhtml_insertion_mode_after_frameset@@Base+0x64>
   23a68:	cmp	ip, #1
   23a6c:	beq	23ac0 <myhtml_insertion_mode_after_frameset@@Base+0xa4>
   23a70:	cmp	ip, #2
   23a74:	bne	23a48 <myhtml_insertion_mode_after_frameset@@Base+0x2c>
   23a78:	bl	101fc <myhtml_tree_node_insert_comment@plt>
   23a7c:	b	23a48 <myhtml_insertion_mode_after_frameset@@Base+0x2c>
   23a80:	cmp	ip, #92	; 0x5c
   23a84:	beq	23aac <myhtml_insertion_mode_after_frameset@@Base+0x90>
   23a88:	cmp	ip, #251	; 0xfb
   23a8c:	bne	23a48 <myhtml_insertion_mode_after_frameset@@Base+0x2c>
   23a90:	bl	102a4 <myhtml_rules_stop_parsing@plt>
   23a94:	b	23a48 <myhtml_insertion_mode_after_frameset@@Base+0x2c>
   23a98:	ldrd	r4, [sp]
   23a9c:	ldr	r6, [sp, #8]
   23aa0:	ldr	lr, [sp, #12]
   23aa4:	add	sp, sp, #16
   23aa8:	b	105d4 <myhtml_insertion_mode_in_body@plt>
   23aac:	ldrd	r4, [sp]
   23ab0:	ldr	r6, [sp, #8]
   23ab4:	ldr	lr, [sp, #12]
   23ab8:	add	sp, sp, #16
   23abc:	b	fff8 <myhtml_insertion_mode_in_head@plt>
   23ac0:	ldr	r3, [r1, #48]	; 0x30
   23ac4:	mov	r4, r1
   23ac8:	tst	r3, #8
   23acc:	beq	23ae0 <myhtml_insertion_mode_after_frameset@@Base+0xc4>
   23ad0:	mov	r1, r4
   23ad4:	mov	r0, r5
   23ad8:	bl	ff2c <myhtml_tree_node_insert_text@plt>
   23adc:	b	23a48 <myhtml_insertion_mode_after_frameset@@Base+0x2c>
   23ae0:	ldr	r0, [r0, #8]
   23ae4:	bl	10610 <myhtml_token_node_wait_for_done@plt>
   23ae8:	add	r0, r4, #4
   23aec:	bl	10280 <mycore_string_stay_only_whitespace@plt>
   23af0:	ldr	r3, [r4, #12]
   23af4:	cmp	r3, #0
   23af8:	beq	23a48 <myhtml_insertion_mode_after_frameset@@Base+0x2c>
   23afc:	b	23ad0 <myhtml_insertion_mode_after_frameset@@Base+0xb4>

00023b00 <myhtml_insertion_mode_after_after_body@@Base>:
   23b00:	ldr	r3, [r1, #48]	; 0x30
   23b04:	mov	ip, r0
   23b08:	strd	r4, [sp, #-24]!	; 0xffffffe8
   23b0c:	strd	r6, [sp, #8]
   23b10:	str	r8, [sp, #16]
   23b14:	str	lr, [sp, #20]
   23b18:	ands	r4, r3, #1
   23b1c:	bne	23ba4 <myhtml_insertion_mode_after_after_body@@Base+0xa4>
   23b20:	ldr	r5, [r1]
   23b24:	mov	r2, r1
   23b28:	cmp	r5, #3
   23b2c:	beq	23bd4 <myhtml_insertion_mode_after_after_body@@Base+0xd4>
   23b30:	mov	r3, r0
   23b34:	mov	r6, r1
   23b38:	bhi	23b7c <myhtml_insertion_mode_after_after_body@@Base+0x7c>
   23b3c:	cmp	r5, #1
   23b40:	beq	23b98 <myhtml_insertion_mode_after_after_body@@Base+0x98>
   23b44:	cmp	r5, #2
   23b48:	bne	23bc4 <myhtml_insertion_mode_after_after_body@@Base+0xc4>
   23b4c:	ldr	r7, [r0, #84]	; 0x54
   23b50:	bl	ff80 <myhtml_tree_node_create@plt>
   23b54:	mov	r3, r0
   23b58:	mov	r1, r0
   23b5c:	ldr	r2, [r7, #8]
   23b60:	mov	r0, r7
   23b64:	str	r5, [r3, #4]
   23b68:	str	r2, [r3, #8]
   23b6c:	str	r6, [r3, #32]
   23b70:	bl	1064c <myhtml_tree_node_add_child@plt>
   23b74:	mov	r0, r4
   23b78:	b	23bb0 <myhtml_insertion_mode_after_after_body@@Base+0xb0>
   23b7c:	cmp	r5, #65	; 0x41
   23b80:	beq	23bd4 <myhtml_insertion_mode_after_after_body@@Base+0xd4>
   23b84:	cmp	r5, #251	; 0xfb
   23b88:	bne	23bc4 <myhtml_insertion_mode_after_after_body@@Base+0xc4>
   23b8c:	bl	102a4 <myhtml_rules_stop_parsing@plt>
   23b90:	mov	r0, r4
   23b94:	b	23bb0 <myhtml_insertion_mode_after_after_body@@Base+0xb0>
   23b98:	ldr	r3, [r1, #48]	; 0x30
   23b9c:	tst	r3, #8
   23ba0:	bne	23bdc <myhtml_insertion_mode_after_after_body@@Base+0xdc>
   23ba4:	mov	r3, #6
   23ba8:	mov	r0, #1
   23bac:	str	r3, [ip, #168]	; 0xa8
   23bb0:	ldrd	r4, [sp]
   23bb4:	ldrd	r6, [sp, #8]
   23bb8:	ldr	r8, [sp, #16]
   23bbc:	add	sp, sp, #20
   23bc0:	pop	{pc}		; (ldr pc, [sp], #4)
   23bc4:	mov	r2, #6
   23bc8:	mov	r0, #1
   23bcc:	str	r2, [r3, #168]	; 0xa8
   23bd0:	b	23bb0 <myhtml_insertion_mode_after_after_body@@Base+0xb0>
   23bd4:	mov	r1, r2
   23bd8:	mov	r0, ip
   23bdc:	ldrd	r4, [sp]
   23be0:	ldrd	r6, [sp, #8]
   23be4:	ldr	r8, [sp, #16]
   23be8:	ldr	lr, [sp, #20]
   23bec:	add	sp, sp, #24
   23bf0:	b	105d4 <myhtml_insertion_mode_in_body@plt>

00023bf4 <myhtml_insertion_mode_after_after_frameset@@Base>:
   23bf4:	ldr	r2, [r1, #48]	; 0x30
   23bf8:	tst	r2, #1
   23bfc:	bne	23c94 <myhtml_insertion_mode_after_after_frameset@@Base+0xa0>
   23c00:	strd	r4, [sp, #-16]!
   23c04:	mov	r3, r1
   23c08:	mov	ip, r0
   23c0c:	ldr	r4, [r1]
   23c10:	str	r6, [sp, #8]
   23c14:	str	lr, [sp, #12]
   23c18:	cmp	r4, #3
   23c1c:	beq	23cd8 <myhtml_insertion_mode_after_after_frameset@@Base+0xe4>
   23c20:	mov	r6, r0
   23c24:	mov	r5, r1
   23c28:	bls	23c58 <myhtml_insertion_mode_after_after_frameset@@Base+0x64>
   23c2c:	cmp	r4, #92	; 0x5c
   23c30:	beq	23cc4 <myhtml_insertion_mode_after_after_frameset@@Base+0xd0>
   23c34:	cmp	r4, #251	; 0xfb
   23c38:	beq	23c9c <myhtml_insertion_mode_after_after_frameset@@Base+0xa8>
   23c3c:	cmp	r4, #65	; 0x41
   23c40:	beq	23cd8 <myhtml_insertion_mode_after_after_frameset@@Base+0xe4>
   23c44:	ldrd	r4, [sp]
   23c48:	mov	r0, #0
   23c4c:	ldr	r6, [sp, #8]
   23c50:	add	sp, sp, #12
   23c54:	pop	{pc}		; (ldr pc, [sp], #4)
   23c58:	cmp	r4, #1
   23c5c:	beq	23ca4 <myhtml_insertion_mode_after_after_frameset@@Base+0xb0>
   23c60:	cmp	r4, #2
   23c64:	bne	23c44 <myhtml_insertion_mode_after_after_frameset@@Base+0x50>
   23c68:	ldr	r6, [r0, #84]	; 0x54
   23c6c:	bl	ff80 <myhtml_tree_node_create@plt>
   23c70:	mov	r3, r0
   23c74:	mov	r1, r0
   23c78:	ldr	r2, [r6, #8]
   23c7c:	mov	r0, r6
   23c80:	str	r4, [r3, #4]
   23c84:	str	r2, [r3, #8]
   23c88:	str	r5, [r3, #32]
   23c8c:	bl	1064c <myhtml_tree_node_add_child@plt>
   23c90:	b	23c44 <myhtml_insertion_mode_after_after_frameset@@Base+0x50>
   23c94:	mov	r0, #0
   23c98:	bx	lr
   23c9c:	bl	102a4 <myhtml_rules_stop_parsing@plt>
   23ca0:	b	23c44 <myhtml_insertion_mode_after_after_frameset@@Base+0x50>
   23ca4:	ldr	r3, [r1, #48]	; 0x30
   23ca8:	tst	r3, #8
   23cac:	bne	23ce0 <myhtml_insertion_mode_after_after_frameset@@Base+0xec>
   23cb0:	bl	fe90 <myhtml_insertion_fix_split_for_text_begin_ws@plt>
   23cb4:	subs	r1, r0, #0
   23cb8:	beq	23c44 <myhtml_insertion_mode_after_after_frameset@@Base+0x50>
   23cbc:	mov	r0, r6
   23cc0:	b	23ce0 <myhtml_insertion_mode_after_after_frameset@@Base+0xec>
   23cc4:	ldrd	r4, [sp]
   23cc8:	ldr	r6, [sp, #8]
   23ccc:	ldr	lr, [sp, #12]
   23cd0:	add	sp, sp, #16
   23cd4:	b	fff8 <myhtml_insertion_mode_in_head@plt>
   23cd8:	mov	r1, r3
   23cdc:	mov	r0, ip
   23ce0:	ldrd	r4, [sp]
   23ce4:	ldr	r6, [sp, #8]
   23ce8:	ldr	lr, [sp, #12]
   23cec:	add	sp, sp, #16
   23cf0:	b	105d4 <myhtml_insertion_mode_in_body@plt>

00023cf4 <myhtml_rules_check_for_first_newline@@Base>:
   23cf4:	ldr	r3, [r0, #180]	; 0xb4
   23cf8:	ands	r3, r3, #64	; 0x40
   23cfc:	beq	23d44 <myhtml_rules_check_for_first_newline@@Base+0x50>
   23d00:	ldr	r3, [r0, #180]	; 0xb4
   23d04:	strd	r4, [sp, #-16]!
   23d08:	mov	r5, r0
   23d0c:	str	r6, [sp, #8]
   23d10:	str	lr, [sp, #12]
   23d14:	tst	r3, #128	; 0x80
   23d18:	bne	23d4c <myhtml_rules_check_for_first_newline@@Base+0x58>
   23d1c:	ldr	r3, [r5, #180]	; 0xb4
   23d20:	mov	r0, #0
   23d24:	ldr	r2, [r5, #180]	; 0xb4
   23d28:	and	r3, r3, #64	; 0x40
   23d2c:	eor	r3, r3, r2
   23d30:	str	r3, [r5, #180]	; 0xb4
   23d34:	ldrd	r4, [sp]
   23d38:	ldr	r6, [sp, #8]
   23d3c:	add	sp, sp, #12
   23d40:	pop	{pc}		; (ldr pc, [sp], #4)
   23d44:	mov	r0, r3
   23d48:	bx	lr
   23d4c:	ldr	r4, [r1]
   23d50:	mov	r6, r1
   23d54:	cmp	r4, #1
   23d58:	bne	23d1c <myhtml_rules_check_for_first_newline@@Base+0x28>
   23d5c:	ldr	r0, [r0, #8]
   23d60:	bl	10610 <myhtml_token_node_wait_for_done@plt>
   23d64:	ldr	r3, [r6, #12]
   23d68:	cmp	r3, #0
   23d6c:	moveq	r0, r4
   23d70:	beq	23d34 <myhtml_rules_check_for_first_newline@@Base+0x40>
   23d74:	ldr	r0, [r6, #4]
   23d78:	ldrb	r3, [r0]
   23d7c:	cmp	r3, #10
   23d80:	bne	23d1c <myhtml_rules_check_for_first_newline@@Base+0x28>
   23d84:	mov	r1, r4
   23d88:	bl	10bf8 <mchar_async_crop_first_chars_without_cache@plt>
   23d8c:	ldr	r3, [r6, #12]
   23d90:	str	r0, [r6, #4]
   23d94:	sub	r3, r3, #1
   23d98:	cmp	r3, #0
   23d9c:	str	r3, [r6, #12]
   23da0:	bne	23d1c <myhtml_rules_check_for_first_newline@@Base+0x28>
   23da4:	ldr	r3, [r5, #180]	; 0xb4
   23da8:	mov	r0, r4
   23dac:	ldr	r2, [r5, #180]	; 0xb4
   23db0:	and	r3, r3, #64	; 0x40
   23db4:	eor	r3, r3, r2
   23db8:	str	r3, [r5, #180]	; 0xb4
   23dbc:	b	23d34 <myhtml_rules_check_for_first_newline@@Base+0x40>

00023dc0 <myhtml_rules_tree_dispatcher@@Base>:
   23dc0:	strd	r4, [sp, #-16]!
   23dc4:	mov	r4, r0
   23dc8:	mov	r5, r1
   23dcc:	str	r6, [sp, #8]
   23dd0:	str	lr, [sp, #12]
   23dd4:	bl	10cf4 <myhtml_rules_check_for_first_newline@plt>
   23dd8:	cmp	r0, #0
   23ddc:	movne	r0, #0
   23de0:	strne	r5, [r4, #152]	; 0x98
   23de4:	bne	23e34 <myhtml_rules_tree_dispatcher@@Base+0x74>
   23de8:	ldr	r3, [r4, #164]	; 0xa4
   23dec:	cmp	r3, #0
   23df0:	strne	r0, [r4, #164]	; 0xa4
   23df4:	mov	r0, r4
   23df8:	bl	10cdc <myhtml_tree_adjusted_current_node@plt>
   23dfc:	ldr	r3, [r4, #128]	; 0x80
   23e00:	mov	r6, r0
   23e04:	ldr	r3, [r3, #4]
   23e08:	cmp	r3, #0
   23e0c:	bne	23e44 <myhtml_rules_tree_dispatcher@@Base+0x84>
   23e10:	ldr	r3, [r4]
   23e14:	mov	r1, r5
   23e18:	mov	r0, r4
   23e1c:	ldr	r2, [r4, #168]	; 0xa8
   23e20:	ldr	r3, [r3, #28]
   23e24:	ldr	r3, [r3, r2, lsl #2]
   23e28:	blx	r3
   23e2c:	cmp	r0, #0
   23e30:	streq	r5, [r4, #152]	; 0x98
   23e34:	ldrd	r4, [sp]
   23e38:	ldr	r6, [sp, #8]
   23e3c:	add	sp, sp, #12
   23e40:	pop	{pc}		; (ldr pc, [sp], #4)
   23e44:	ldr	r3, [r0, #8]
   23e48:	cmp	r3, #1
   23e4c:	beq	23e10 <myhtml_rules_tree_dispatcher@@Base+0x50>
   23e50:	mov	r1, r0
   23e54:	mov	r0, r4
   23e58:	bl	ffe0 <myhtml_tree_is_mathml_integration_point@plt>
   23e5c:	cmp	r0, #0
   23e60:	beq	23e7c <myhtml_rules_tree_dispatcher@@Base+0xbc>
   23e64:	ldr	r3, [r5]
   23e68:	cmp	r3, #1
   23e6c:	beq	23ec4 <myhtml_rules_tree_dispatcher@@Base+0x104>
   23e70:	cmp	r3, #226	; 0xe2
   23e74:	cmpne	r3, #221	; 0xdd
   23e78:	bne	23ec4 <myhtml_rules_tree_dispatcher@@Base+0x104>
   23e7c:	ldr	r3, [r6, #4]
   23e80:	cmp	r3, #8
   23e84:	bne	23e94 <myhtml_rules_tree_dispatcher@@Base+0xd4>
   23e88:	ldr	r3, [r6, #8]
   23e8c:	cmp	r3, #2
   23e90:	beq	23ef0 <myhtml_rules_tree_dispatcher@@Base+0x130>
   23e94:	mov	r1, r6
   23e98:	mov	r0, r4
   23e9c:	bl	1019c <myhtml_tree_is_html_integration_point@plt>
   23ea0:	cmp	r0, #0
   23ea4:	beq	23ed4 <myhtml_rules_tree_dispatcher@@Base+0x114>
   23ea8:	ldr	r3, [r5, #48]	; 0x30
   23eac:	tst	r3, #1
   23eb0:	beq	23e10 <myhtml_rules_tree_dispatcher@@Base+0x50>
   23eb4:	ldr	r3, [r5]
   23eb8:	cmp	r3, #1
   23ebc:	bne	23ed8 <myhtml_rules_tree_dispatcher@@Base+0x118>
   23ec0:	b	23e10 <myhtml_rules_tree_dispatcher@@Base+0x50>
   23ec4:	ldr	r3, [r5, #48]	; 0x30
   23ec8:	tst	r3, #1
   23ecc:	bne	23e7c <myhtml_rules_tree_dispatcher@@Base+0xbc>
   23ed0:	b	23e10 <myhtml_rules_tree_dispatcher@@Base+0x50>
   23ed4:	ldr	r3, [r5]
   23ed8:	cmp	r3, #251	; 0xfb
   23edc:	beq	23e10 <myhtml_rules_tree_dispatcher@@Base+0x50>
   23ee0:	mov	r1, r5
   23ee4:	mov	r0, r4
   23ee8:	bl	fdc4 <myhtml_insertion_mode_in_foreign_content@plt>
   23eec:	b	23e2c <myhtml_rules_tree_dispatcher@@Base+0x6c>
   23ef0:	ldr	r3, [r5]
   23ef4:	cmp	r3, #124	; 0x7c
   23ef8:	bne	23e94 <myhtml_rules_tree_dispatcher@@Base+0xd4>
   23efc:	ldr	r3, [r5, #48]	; 0x30
   23f00:	tst	r3, #1
   23f04:	bne	23e94 <myhtml_rules_tree_dispatcher@@Base+0xd4>
   23f08:	b	23e10 <myhtml_rules_tree_dispatcher@@Base+0x50>

00023f0c <myhtml_rules_init@@Base>:
   23f0c:	strd	r4, [sp, #-16]!
   23f10:	mov	r5, r0
   23f14:	mov	r0, #92	; 0x5c
   23f18:	ldr	r4, [pc, #344]	; 24078 <myhtml_rules_init@@Base+0x16c>
   23f1c:	str	r6, [sp, #8]
   23f20:	str	lr, [sp, #12]
   23f24:	bl	10c28 <mycore_malloc@plt>
   23f28:	cmp	r0, #0
   23f2c:	str	r0, [r5, #28]
   23f30:	add	r4, pc, r4
   23f34:	beq	24064 <myhtml_rules_init@@Base+0x158>
   23f38:	ldr	r1, [pc, #316]	; 2407c <myhtml_rules_init@@Base+0x170>
   23f3c:	mov	r3, r0
   23f40:	mov	r0, #0
   23f44:	ldr	r2, [pc, #308]	; 24080 <myhtml_rules_init@@Base+0x174>
   23f48:	ldr	ip, [pc, #308]	; 24084 <myhtml_rules_init@@Base+0x178>
   23f4c:	ldr	lr, [r4, r1]
   23f50:	ldr	r1, [pc, #304]	; 24088 <myhtml_rules_init@@Base+0x17c>
   23f54:	str	lr, [r3]
   23f58:	ldr	lr, [r4, r2]
   23f5c:	ldr	r2, [pc, #296]	; 2408c <myhtml_rules_init@@Base+0x180>
   23f60:	str	lr, [r3, #4]
   23f64:	ldr	lr, [r4, ip]
   23f68:	ldr	ip, [pc, #288]	; 24090 <myhtml_rules_init@@Base+0x184>
   23f6c:	str	lr, [r3, #8]
   23f70:	ldr	lr, [r4, r1]
   23f74:	ldr	r1, [pc, #280]	; 24094 <myhtml_rules_init@@Base+0x188>
   23f78:	str	lr, [r3, #12]
   23f7c:	ldr	lr, [r4, r2]
   23f80:	ldr	r2, [pc, #272]	; 24098 <myhtml_rules_init@@Base+0x18c>
   23f84:	str	lr, [r3, #16]
   23f88:	ldr	lr, [r4, ip]
   23f8c:	ldr	ip, [pc, #264]	; 2409c <myhtml_rules_init@@Base+0x190>
   23f90:	str	lr, [r3, #20]
   23f94:	ldr	lr, [r4, r1]
   23f98:	ldr	r1, [pc, #256]	; 240a0 <myhtml_rules_init@@Base+0x194>
   23f9c:	str	lr, [r3, #24]
   23fa0:	ldr	lr, [r4, r2]
   23fa4:	ldr	r2, [pc, #248]	; 240a4 <myhtml_rules_init@@Base+0x198>
   23fa8:	str	lr, [r3, #28]
   23fac:	ldr	lr, [r4, ip]
   23fb0:	ldr	ip, [pc, #240]	; 240a8 <myhtml_rules_init@@Base+0x19c>
   23fb4:	str	lr, [r3, #32]
   23fb8:	ldr	lr, [r4, r1]
   23fbc:	ldr	r1, [pc, #232]	; 240ac <myhtml_rules_init@@Base+0x1a0>
   23fc0:	str	lr, [r3, #36]	; 0x24
   23fc4:	ldr	lr, [r4, r2]
   23fc8:	ldr	r2, [pc, #224]	; 240b0 <myhtml_rules_init@@Base+0x1a4>
   23fcc:	str	lr, [r3, #40]	; 0x28
   23fd0:	ldr	lr, [r4, ip]
   23fd4:	ldr	ip, [pc, #216]	; 240b4 <myhtml_rules_init@@Base+0x1a8>
   23fd8:	str	lr, [r3, #44]	; 0x2c
   23fdc:	ldr	lr, [r4, r1]
   23fe0:	ldr	r1, [pc, #208]	; 240b8 <myhtml_rules_init@@Base+0x1ac>
   23fe4:	str	lr, [r3, #48]	; 0x30
   23fe8:	ldr	lr, [r4, r2]
   23fec:	ldr	r2, [pc, #200]	; 240bc <myhtml_rules_init@@Base+0x1b0>
   23ff0:	str	lr, [r3, #52]	; 0x34
   23ff4:	ldr	lr, [r4, ip]
   23ff8:	ldr	ip, [pc, #192]	; 240c0 <myhtml_rules_init@@Base+0x1b4>
   23ffc:	str	lr, [r3, #56]	; 0x38
   24000:	ldr	lr, [r4, r1]
   24004:	ldr	r1, [pc, #184]	; 240c4 <myhtml_rules_init@@Base+0x1b8>
   24008:	str	lr, [r3, #60]	; 0x3c
   2400c:	ldr	lr, [r4, r2]
   24010:	ldr	r2, [pc, #176]	; 240c8 <myhtml_rules_init@@Base+0x1bc>
   24014:	ldr	r6, [sp, #8]
   24018:	str	lr, [r3, #64]	; 0x40
   2401c:	ldr	lr, [r4, ip]
   24020:	ldr	ip, [pc, #164]	; 240cc <myhtml_rules_init@@Base+0x1c0>
   24024:	str	lr, [r3, #68]	; 0x44
   24028:	ldr	lr, [r4, r1]
   2402c:	ldr	r1, [pc, #156]	; 240d0 <myhtml_rules_init@@Base+0x1c4>
   24030:	str	lr, [r3, #72]	; 0x48
   24034:	ldr	lr, [r4, r2]
   24038:	ldr	r2, [pc, #148]	; 240d4 <myhtml_rules_init@@Base+0x1c8>
   2403c:	str	lr, [r3, #76]	; 0x4c
   24040:	ldr	ip, [r4, ip]
   24044:	str	ip, [r3, #80]	; 0x50
   24048:	ldr	r1, [r4, r1]
   2404c:	str	r1, [r3, #84]	; 0x54
   24050:	ldr	r2, [r4, r2]
   24054:	ldrd	r4, [sp]
   24058:	add	sp, sp, #12
   2405c:	str	r2, [r3, #88]	; 0x58
   24060:	pop	{pc}		; (ldr pc, [sp], #4)
   24064:	ldrd	r4, [sp]
   24068:	movw	r0, #36964	; 0x9064
   2406c:	ldr	r6, [sp, #8]
   24070:	add	sp, sp, #12
   24074:	pop	{pc}		; (ldr pc, [sp], #4)
   24078:	andeq	r5, pc, r8, asr #1
   2407c:	andeq	r0, r0, r0, lsr #16
   24080:	andeq	r0, r0, ip, asr #18
   24084:	andeq	r0, r0, r8, asr r9
   24088:	andeq	r0, r0, r4, lsr #15
   2408c:	strdeq	r0, [r0], -r8
   24090:	andeq	r0, r0, r4, lsr #18
   24094:	muleq	r0, r0, r8
   24098:	strdeq	r0, [r0], -r8
   2409c:	ldrdeq	r0, [r0], -r4
   240a0:	ldrdeq	r0, [r0], -ip
   240a4:	andeq	r0, r0, ip, lsl r9
   240a8:	andeq	r0, r0, ip, lsl #18
   240ac:	andeq	r0, r0, r4, lsl r9
   240b0:	andeq	r0, r0, r0, lsr #15
   240b4:	muleq	r0, ip, r9
   240b8:	andeq	r0, r0, r0, lsr r8
   240bc:	muleq	r0, r4, r8
   240c0:	andeq	r0, r0, r8, asr r7
   240c4:	andeq	r0, r0, r4, asr #19
   240c8:	andeq	r0, r0, r8, ror #18
   240cc:	andeq	r0, r0, ip, lsl r7
   240d0:	andeq	r0, r0, r8, lsl r7
   240d4:	andeq	r0, r0, r8, lsl r8
   240d8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   240dc:	subs	r5, r1, #0
   240e0:	strd	r6, [sp, #8]
   240e4:	strd	r8, [sp, #16]
   240e8:	strd	sl, [sp, #24]
   240ec:	str	lr, [sp, #32]
   240f0:	sub	sp, sp, #12
   240f4:	beq	241dc <myhtml_rules_init@@Base+0x2d0>
   240f8:	mov	r7, r3
   240fc:	ldr	r3, [pc, #448]	; 242c4 <myhtml_rules_init@@Base+0x3b8>
   24100:	mov	r4, #0
   24104:	mov	r6, r2
   24108:	mov	r8, r0
   2410c:	ldr	sl, [pc, #436]	; 242c8 <myhtml_rules_init@@Base+0x3bc>
   24110:	sub	fp, r0, #1
   24114:	mov	r1, r4
   24118:	ldr	r9, [pc, #428]	; 242cc <myhtml_rules_init@@Base+0x3c0>
   2411c:	add	r3, pc, r3
   24120:	add	sl, pc, sl
   24124:	str	r3, [sp, #4]
   24128:	add	r9, pc, r9
   2412c:	b	2415c <myhtml_rules_init@@Base+0x250>
   24130:	cmp	r2, #160	; 0xa0
   24134:	bne	2414c <myhtml_rules_init@@Base+0x240>
   24138:	cmp	r4, #0
   2413c:	beq	2414c <myhtml_rules_init@@Base+0x240>
   24140:	ldrb	r2, [fp, #-1]
   24144:	cmp	r2, #194	; 0xc2
   24148:	beq	24284 <myhtml_rules_init@@Base+0x378>
   2414c:	add	r4, r4, #1
   24150:	add	r1, r1, #1
   24154:	cmp	r5, r4
   24158:	beq	241bc <myhtml_rules_init@@Base+0x2b0>
   2415c:	ldrb	r2, [fp, #1]!
   24160:	cmp	r2, #60	; 0x3c
   24164:	beq	24248 <myhtml_rules_init@@Base+0x33c>
   24168:	bls	241e4 <myhtml_rules_init@@Base+0x2d8>
   2416c:	cmp	r2, #62	; 0x3e
   24170:	bne	24130 <myhtml_rules_init@@Base+0x224>
   24174:	cmp	r1, #0
   24178:	beq	24194 <myhtml_rules_init@@Base+0x288>
   2417c:	sub	r0, r4, r1
   24180:	mov	r2, r7
   24184:	add	r0, r8, r0
   24188:	blx	r6
   2418c:	cmp	r0, #0
   24190:	bne	24228 <myhtml_rules_init@@Base+0x31c>
   24194:	mov	r2, r7
   24198:	mov	r1, #4
   2419c:	mov	r0, r9
   241a0:	blx	r6
   241a4:	cmp	r0, #0
   241a8:	bne	24228 <myhtml_rules_init@@Base+0x31c>
   241ac:	add	r4, r4, #1
   241b0:	mov	r1, #0
   241b4:	cmp	r5, r4
   241b8:	bne	2415c <myhtml_rules_init@@Base+0x250>
   241bc:	cmp	r1, #0
   241c0:	beq	241dc <myhtml_rules_init@@Base+0x2d0>
   241c4:	sub	r0, r5, r1
   241c8:	mov	r2, r7
   241cc:	add	r0, r8, r0
   241d0:	blx	r6
   241d4:	cmp	r0, #0
   241d8:	bne	24228 <myhtml_rules_init@@Base+0x31c>
   241dc:	mov	r0, #0
   241e0:	b	2422c <myhtml_rules_init@@Base+0x320>
   241e4:	cmp	r2, #38	; 0x26
   241e8:	bne	2414c <myhtml_rules_init@@Base+0x240>
   241ec:	cmp	r1, #0
   241f0:	beq	2420c <myhtml_rules_init@@Base+0x300>
   241f4:	sub	r0, r4, r1
   241f8:	mov	r2, r7
   241fc:	add	r0, r8, r0
   24200:	blx	r6
   24204:	cmp	r0, #0
   24208:	bne	24228 <myhtml_rules_init@@Base+0x31c>
   2420c:	ldr	r0, [pc, #188]	; 242d0 <myhtml_rules_init@@Base+0x3c4>
   24210:	mov	r2, r7
   24214:	mov	r1, #5
   24218:	add	r0, pc, r0
   2421c:	blx	r6
   24220:	cmp	r0, #0
   24224:	beq	241ac <myhtml_rules_init@@Base+0x2a0>
   24228:	mov	r0, #2
   2422c:	add	sp, sp, #12
   24230:	ldrd	r4, [sp]
   24234:	ldrd	r6, [sp, #8]
   24238:	ldrd	r8, [sp, #16]
   2423c:	ldrd	sl, [sp, #24]
   24240:	add	sp, sp, #32
   24244:	pop	{pc}		; (ldr pc, [sp], #4)
   24248:	cmp	r1, #0
   2424c:	beq	24268 <myhtml_rules_init@@Base+0x35c>
   24250:	sub	r0, r4, r1
   24254:	mov	r2, r7
   24258:	add	r0, r8, r0
   2425c:	blx	r6
   24260:	cmp	r0, #0
   24264:	bne	24228 <myhtml_rules_init@@Base+0x31c>
   24268:	mov	r2, r7
   2426c:	mov	r1, #4
   24270:	mov	r0, sl
   24274:	blx	r6
   24278:	cmp	r0, #0
   2427c:	beq	241ac <myhtml_rules_init@@Base+0x2a0>
   24280:	b	24228 <myhtml_rules_init@@Base+0x31c>
   24284:	cmp	r1, #0
   24288:	beq	242a8 <myhtml_rules_init@@Base+0x39c>
   2428c:	sub	r0, r4, r1
   24290:	mov	r2, r7
   24294:	sub	r1, r1, #1
   24298:	add	r0, r8, r0
   2429c:	blx	r6
   242a0:	cmp	r0, #0
   242a4:	bne	24228 <myhtml_rules_init@@Base+0x31c>
   242a8:	mov	r2, r7
   242ac:	mov	r1, #6
   242b0:	ldr	r0, [sp, #4]
   242b4:	blx	r6
   242b8:	cmp	r0, #0
   242bc:	beq	241ac <myhtml_rules_init@@Base+0x2a0>
   242c0:	b	24228 <myhtml_rules_init@@Base+0x31c>
   242c4:	andeq	sl, sp, r8, ror #15
   242c8:	ldrdeq	sl, [sp], -r4
   242cc:	ldrdeq	sl, [sp], -r4
   242d0:	ldrdeq	sl, [sp], -r4
   242d4:	ldr	ip, [r0, #4]
   242d8:	sub	r3, ip, #1
   242dc:	cmp	r3, #141	; 0x8d
   242e0:	addls	pc, pc, r3, lsl #2
   242e4:	b	24534 <myhtml_rules_init@@Base+0x628>
   242e8:	b	2452c <myhtml_rules_init@@Base+0x620>
   242ec:	b	2452c <myhtml_rules_init@@Base+0x620>
   242f0:	b	2452c <myhtml_rules_init@@Base+0x620>
   242f4:	b	24534 <myhtml_rules_init@@Base+0x628>
   242f8:	b	24534 <myhtml_rules_init@@Base+0x628>
   242fc:	b	24534 <myhtml_rules_init@@Base+0x628>
   24300:	b	24534 <myhtml_rules_init@@Base+0x628>
   24304:	b	24534 <myhtml_rules_init@@Base+0x628>
   24308:	b	24534 <myhtml_rules_init@@Base+0x628>
   2430c:	b	24520 <myhtml_rules_init@@Base+0x614>
   24310:	b	24534 <myhtml_rules_init@@Base+0x628>
   24314:	b	24534 <myhtml_rules_init@@Base+0x628>
   24318:	b	24534 <myhtml_rules_init@@Base+0x628>
   2431c:	b	24534 <myhtml_rules_init@@Base+0x628>
   24320:	b	24520 <myhtml_rules_init@@Base+0x614>
   24324:	b	24534 <myhtml_rules_init@@Base+0x628>
   24328:	b	24534 <myhtml_rules_init@@Base+0x628>
   2432c:	b	24534 <myhtml_rules_init@@Base+0x628>
   24330:	b	24520 <myhtml_rules_init@@Base+0x614>
   24334:	b	24534 <myhtml_rules_init@@Base+0x628>
   24338:	b	24534 <myhtml_rules_init@@Base+0x628>
   2433c:	b	24534 <myhtml_rules_init@@Base+0x628>
   24340:	b	24534 <myhtml_rules_init@@Base+0x628>
   24344:	b	24520 <myhtml_rules_init@@Base+0x614>
   24348:	b	24534 <myhtml_rules_init@@Base+0x628>
   2434c:	b	24534 <myhtml_rules_init@@Base+0x628>
   24350:	b	24534 <myhtml_rules_init@@Base+0x628>
   24354:	b	24534 <myhtml_rules_init@@Base+0x628>
   24358:	b	24534 <myhtml_rules_init@@Base+0x628>
   2435c:	b	24534 <myhtml_rules_init@@Base+0x628>
   24360:	b	24520 <myhtml_rules_init@@Base+0x614>
   24364:	b	24534 <myhtml_rules_init@@Base+0x628>
   24368:	b	24534 <myhtml_rules_init@@Base+0x628>
   2436c:	b	24534 <myhtml_rules_init@@Base+0x628>
   24370:	b	24534 <myhtml_rules_init@@Base+0x628>
   24374:	b	24534 <myhtml_rules_init@@Base+0x628>
   24378:	b	24534 <myhtml_rules_init@@Base+0x628>
   2437c:	b	24534 <myhtml_rules_init@@Base+0x628>
   24380:	b	24534 <myhtml_rules_init@@Base+0x628>
   24384:	b	24534 <myhtml_rules_init@@Base+0x628>
   24388:	b	24534 <myhtml_rules_init@@Base+0x628>
   2438c:	b	24534 <myhtml_rules_init@@Base+0x628>
   24390:	b	24534 <myhtml_rules_init@@Base+0x628>
   24394:	b	24534 <myhtml_rules_init@@Base+0x628>
   24398:	b	24534 <myhtml_rules_init@@Base+0x628>
   2439c:	b	24520 <myhtml_rules_init@@Base+0x614>
   243a0:	b	24534 <myhtml_rules_init@@Base+0x628>
   243a4:	b	24534 <myhtml_rules_init@@Base+0x628>
   243a8:	b	24534 <myhtml_rules_init@@Base+0x628>
   243ac:	b	24534 <myhtml_rules_init@@Base+0x628>
   243b0:	b	24534 <myhtml_rules_init@@Base+0x628>
   243b4:	b	24534 <myhtml_rules_init@@Base+0x628>
   243b8:	b	24520 <myhtml_rules_init@@Base+0x614>
   243bc:	b	24534 <myhtml_rules_init@@Base+0x628>
   243c0:	b	24534 <myhtml_rules_init@@Base+0x628>
   243c4:	b	24534 <myhtml_rules_init@@Base+0x628>
   243c8:	b	24534 <myhtml_rules_init@@Base+0x628>
   243cc:	b	24534 <myhtml_rules_init@@Base+0x628>
   243d0:	b	24534 <myhtml_rules_init@@Base+0x628>
   243d4:	b	24534 <myhtml_rules_init@@Base+0x628>
   243d8:	b	24534 <myhtml_rules_init@@Base+0x628>
   243dc:	b	24534 <myhtml_rules_init@@Base+0x628>
   243e0:	b	24534 <myhtml_rules_init@@Base+0x628>
   243e4:	b	24520 <myhtml_rules_init@@Base+0x614>
   243e8:	b	24534 <myhtml_rules_init@@Base+0x628>
   243ec:	b	24534 <myhtml_rules_init@@Base+0x628>
   243f0:	b	24534 <myhtml_rules_init@@Base+0x628>
   243f4:	b	24534 <myhtml_rules_init@@Base+0x628>
   243f8:	b	24520 <myhtml_rules_init@@Base+0x614>
   243fc:	b	24520 <myhtml_rules_init@@Base+0x614>
   24400:	b	24534 <myhtml_rules_init@@Base+0x628>
   24404:	b	24534 <myhtml_rules_init@@Base+0x628>
   24408:	b	24534 <myhtml_rules_init@@Base+0x628>
   2440c:	b	24520 <myhtml_rules_init@@Base+0x614>
   24410:	b	24534 <myhtml_rules_init@@Base+0x628>
   24414:	b	24534 <myhtml_rules_init@@Base+0x628>
   24418:	b	24534 <myhtml_rules_init@@Base+0x628>
   2441c:	b	24520 <myhtml_rules_init@@Base+0x614>
   24420:	b	24534 <myhtml_rules_init@@Base+0x628>
   24424:	b	24534 <myhtml_rules_init@@Base+0x628>
   24428:	b	24534 <myhtml_rules_init@@Base+0x628>
   2442c:	b	24534 <myhtml_rules_init@@Base+0x628>
   24430:	b	24534 <myhtml_rules_init@@Base+0x628>
   24434:	b	24534 <myhtml_rules_init@@Base+0x628>
   24438:	b	24534 <myhtml_rules_init@@Base+0x628>
   2443c:	b	24520 <myhtml_rules_init@@Base+0x614>
   24440:	b	24534 <myhtml_rules_init@@Base+0x628>
   24444:	b	24534 <myhtml_rules_init@@Base+0x628>
   24448:	b	24534 <myhtml_rules_init@@Base+0x628>
   2444c:	b	24534 <myhtml_rules_init@@Base+0x628>
   24450:	b	24534 <myhtml_rules_init@@Base+0x628>
   24454:	b	24534 <myhtml_rules_init@@Base+0x628>
   24458:	b	24534 <myhtml_rules_init@@Base+0x628>
   2445c:	b	24534 <myhtml_rules_init@@Base+0x628>
   24460:	b	24534 <myhtml_rules_init@@Base+0x628>
   24464:	b	24534 <myhtml_rules_init@@Base+0x628>
   24468:	b	24534 <myhtml_rules_init@@Base+0x628>
   2446c:	b	24534 <myhtml_rules_init@@Base+0x628>
   24470:	b	24534 <myhtml_rules_init@@Base+0x628>
   24474:	b	24520 <myhtml_rules_init@@Base+0x614>
   24478:	b	24534 <myhtml_rules_init@@Base+0x628>
   2447c:	b	24534 <myhtml_rules_init@@Base+0x628>
   24480:	b	24534 <myhtml_rules_init@@Base+0x628>
   24484:	b	24534 <myhtml_rules_init@@Base+0x628>
   24488:	b	24534 <myhtml_rules_init@@Base+0x628>
   2448c:	b	24534 <myhtml_rules_init@@Base+0x628>
   24490:	b	24534 <myhtml_rules_init@@Base+0x628>
   24494:	b	24534 <myhtml_rules_init@@Base+0x628>
   24498:	b	24534 <myhtml_rules_init@@Base+0x628>
   2449c:	b	24534 <myhtml_rules_init@@Base+0x628>
   244a0:	b	24534 <myhtml_rules_init@@Base+0x628>
   244a4:	b	24534 <myhtml_rules_init@@Base+0x628>
   244a8:	b	24534 <myhtml_rules_init@@Base+0x628>
   244ac:	b	24534 <myhtml_rules_init@@Base+0x628>
   244b0:	b	24534 <myhtml_rules_init@@Base+0x628>
   244b4:	b	24520 <myhtml_rules_init@@Base+0x614>
   244b8:	b	24534 <myhtml_rules_init@@Base+0x628>
   244bc:	b	24534 <myhtml_rules_init@@Base+0x628>
   244c0:	b	24534 <myhtml_rules_init@@Base+0x628>
   244c4:	b	24534 <myhtml_rules_init@@Base+0x628>
   244c8:	b	24534 <myhtml_rules_init@@Base+0x628>
   244cc:	b	24534 <myhtml_rules_init@@Base+0x628>
   244d0:	b	24534 <myhtml_rules_init@@Base+0x628>
   244d4:	b	24534 <myhtml_rules_init@@Base+0x628>
   244d8:	b	24534 <myhtml_rules_init@@Base+0x628>
   244dc:	b	24534 <myhtml_rules_init@@Base+0x628>
   244e0:	b	24534 <myhtml_rules_init@@Base+0x628>
   244e4:	b	24534 <myhtml_rules_init@@Base+0x628>
   244e8:	b	24534 <myhtml_rules_init@@Base+0x628>
   244ec:	b	24534 <myhtml_rules_init@@Base+0x628>
   244f0:	b	24534 <myhtml_rules_init@@Base+0x628>
   244f4:	b	24534 <myhtml_rules_init@@Base+0x628>
   244f8:	b	24534 <myhtml_rules_init@@Base+0x628>
   244fc:	b	24534 <myhtml_rules_init@@Base+0x628>
   24500:	b	24534 <myhtml_rules_init@@Base+0x628>
   24504:	b	24520 <myhtml_rules_init@@Base+0x614>
   24508:	b	24534 <myhtml_rules_init@@Base+0x628>
   2450c:	b	24534 <myhtml_rules_init@@Base+0x628>
   24510:	b	24534 <myhtml_rules_init@@Base+0x628>
   24514:	b	24534 <myhtml_rules_init@@Base+0x628>
   24518:	b	24534 <myhtml_rules_init@@Base+0x628>
   2451c:	b	24520 <myhtml_rules_init@@Base+0x614>
   24520:	ldr	r3, [r0, #8]
   24524:	cmp	r3, #1
   24528:	bne	24534 <myhtml_rules_init@@Base+0x628>
   2452c:	mov	r0, #0
   24530:	bx	lr
   24534:	strd	r4, [sp, #-16]!
   24538:	mov	r5, r2
   2453c:	mov	r4, r1
   24540:	ldr	r0, [r0, #40]	; 0x28
   24544:	mov	r1, ip
   24548:	str	r6, [sp, #8]
   2454c:	str	lr, [sp, #12]
   24550:	sub	sp, sp, #8
   24554:	add	r2, sp, #4
   24558:	bl	10a84 <myhtml_tag_name_by_id@plt>
   2455c:	mov	r6, r0
   24560:	ldr	r0, [pc, #104]	; 245d0 <myhtml_rules_init@@Base+0x6c4>
   24564:	mov	r2, r5
   24568:	mov	r1, #2
   2456c:	add	r0, pc, r0
   24570:	blx	r4
   24574:	cmp	r0, #0
   24578:	bne	245c8 <myhtml_rules_init@@Base+0x6bc>
   2457c:	mov	r0, r6
   24580:	mov	r2, r5
   24584:	ldr	r1, [sp, #4]
   24588:	blx	r4
   2458c:	cmp	r0, #0
   24590:	bne	245c8 <myhtml_rules_init@@Base+0x6bc>
   24594:	ldr	r0, [pc, #56]	; 245d4 <myhtml_rules_init@@Base+0x6c8>
   24598:	mov	r2, r5
   2459c:	mov	r1, #1
   245a0:	add	r0, pc, r0
   245a4:	blx	r4
   245a8:	cmp	r0, #0
   245ac:	moveq	r0, #0
   245b0:	bne	245c8 <myhtml_rules_init@@Base+0x6bc>
   245b4:	add	sp, sp, #8
   245b8:	ldrd	r4, [sp]
   245bc:	ldr	r6, [sp, #8]
   245c0:	add	sp, sp, #12
   245c4:	pop	{pc}		; (ldr pc, [sp], #4)
   245c8:	mov	r0, #2
   245cc:	b	245b4 <myhtml_rules_init@@Base+0x6a8>
   245d0:	andeq	sl, sp, r0, lsr #7
   245d4:	andeq	sl, sp, r0, ror r3

000245d8 <myhtml_serialization_node_callback@@Base>:
   245d8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   245dc:	mov	r4, r1
   245e0:	mov	r5, r2
   245e4:	ldr	r1, [r0, #4]
   245e8:	strd	r6, [sp, #8]
   245ec:	mov	r6, r0
   245f0:	strd	r8, [sp, #16]
   245f4:	strd	sl, [sp, #24]
   245f8:	str	lr, [sp, #32]
   245fc:	sub	sp, sp, #28
   24600:	cmp	r1, #2
   24604:	beq	24a2c <myhtml_serialization_node_callback@@Base+0x454>
   24608:	cmp	r1, #3
   2460c:	beq	248d0 <myhtml_serialization_node_callback@@Base+0x2f8>
   24610:	cmp	r1, #1
   24614:	beq	24864 <myhtml_serialization_node_callback@@Base+0x28c>
   24618:	add	r2, sp, #16
   2461c:	ldr	r0, [r0, #40]	; 0x28
   24620:	bl	10a84 <myhtml_tag_name_by_id@plt>
   24624:	mov	r7, r0
   24628:	ldr	r0, [pc, #1592]	; 24c68 <myhtml_serialization_node_callback@@Base+0x690>
   2462c:	mov	r2, r5
   24630:	mov	r1, #1
   24634:	add	r0, pc, r0
   24638:	blx	r4
   2463c:	cmp	r0, #0
   24640:	bne	24844 <myhtml_serialization_node_callback@@Base+0x26c>
   24644:	mov	r0, r7
   24648:	mov	r2, r5
   2464c:	ldr	r1, [sp, #16]
   24650:	blx	r4
   24654:	cmp	r0, #0
   24658:	bne	24844 <myhtml_serialization_node_callback@@Base+0x26c>
   2465c:	ldr	r3, [r6, #32]
   24660:	cmp	r3, #0
   24664:	beq	24828 <myhtml_serialization_node_callback@@Base+0x250>
   24668:	ldr	r7, [r3, #40]	; 0x28
   2466c:	cmp	r7, #0
   24670:	beq	24828 <myhtml_serialization_node_callback@@Base+0x250>
   24674:	ldr	r3, [pc, #1520]	; 24c6c <myhtml_serialization_node_callback@@Base+0x694>
   24678:	add	r3, pc, r3
   2467c:	str	r3, [sp, #4]
   24680:	ldr	r3, [pc, #1512]	; 24c70 <myhtml_serialization_node_callback@@Base+0x698>
   24684:	add	r3, pc, r3
   24688:	str	r3, [sp, #12]
   2468c:	ldr	r3, [pc, #1504]	; 24c74 <myhtml_serialization_node_callback@@Base+0x69c>
   24690:	add	r3, pc, r3
   24694:	str	r3, [sp]
   24698:	ldr	r3, [pc, #1496]	; 24c78 <myhtml_serialization_node_callback@@Base+0x6a0>
   2469c:	add	r3, pc, r3
   246a0:	str	r3, [sp, #8]
   246a4:	mov	r2, r5
   246a8:	mov	r1, #1
   246ac:	ldr	r0, [sp, #4]
   246b0:	blx	r4
   246b4:	cmp	r0, #0
   246b8:	bne	24844 <myhtml_serialization_node_callback@@Base+0x26c>
   246bc:	ldr	r6, [r7, #64]	; 0x40
   246c0:	cmp	r6, #5
   246c4:	beq	24b0c <myhtml_serialization_node_callback@@Base+0x534>
   246c8:	cmp	r6, #6
   246cc:	beq	24b48 <myhtml_serialization_node_callback@@Base+0x570>
   246d0:	cmp	r6, #4
   246d4:	beq	24b28 <myhtml_serialization_node_callback@@Base+0x550>
   246d8:	add	r8, sp, #20
   246dc:	mov	r0, r7
   246e0:	mov	r1, r8
   246e4:	bl	10a9c <myhtml_attribute_key@plt>
   246e8:	cmp	r0, #0
   246ec:	beq	24704 <myhtml_serialization_node_callback@@Base+0x12c>
   246f0:	mov	r2, r5
   246f4:	ldr	r1, [sp, #20]
   246f8:	blx	r4
   246fc:	cmp	r0, #0
   24700:	bne	24844 <myhtml_serialization_node_callback@@Base+0x26c>
   24704:	ldr	r0, [pc, #1392]	; 24c7c <myhtml_serialization_node_callback@@Base+0x6a4>
   24708:	mov	r2, r5
   2470c:	mov	r1, #2
   24710:	add	r0, pc, r0
   24714:	blx	r4
   24718:	subs	r6, r0, #0
   2471c:	bne	24844 <myhtml_serialization_node_callback@@Base+0x26c>
   24720:	mov	r1, r8
   24724:	mov	r0, r7
   24728:	bl	10424 <myhtml_attribute_value@plt>
   2472c:	subs	r8, r0, #0
   24730:	beq	24800 <myhtml_serialization_node_callback@@Base+0x228>
   24734:	ldr	sl, [sp, #20]
   24738:	cmp	sl, #0
   2473c:	beq	24800 <myhtml_serialization_node_callback@@Base+0x228>
   24740:	ldr	fp, [pc, #1336]	; 24c80 <myhtml_serialization_node_callback@@Base+0x6a8>
   24744:	mov	r1, r6
   24748:	sub	r9, r8, #1
   2474c:	add	fp, pc, fp
   24750:	b	2476c <myhtml_serialization_node_callback@@Base+0x194>
   24754:	cmp	r3, #34	; 0x22
   24758:	beq	24ad0 <myhtml_serialization_node_callback@@Base+0x4f8>
   2475c:	add	r6, r6, #1
   24760:	add	r1, r1, #1
   24764:	cmp	sl, r6
   24768:	beq	247e0 <myhtml_serialization_node_callback@@Base+0x208>
   2476c:	ldrb	r3, [r9, #1]!
   24770:	cmp	r3, #38	; 0x26
   24774:	beq	24a94 <myhtml_serialization_node_callback@@Base+0x4bc>
   24778:	cmp	r3, #160	; 0xa0
   2477c:	bne	24754 <myhtml_serialization_node_callback@@Base+0x17c>
   24780:	cmp	r6, #0
   24784:	beq	2475c <myhtml_serialization_node_callback@@Base+0x184>
   24788:	ldrb	r3, [r9, #-1]
   2478c:	cmp	r3, #194	; 0xc2
   24790:	bne	2475c <myhtml_serialization_node_callback@@Base+0x184>
   24794:	cmp	r1, #0
   24798:	beq	247b8 <myhtml_serialization_node_callback@@Base+0x1e0>
   2479c:	sub	r0, r6, r1
   247a0:	mov	r2, r5
   247a4:	sub	r1, r1, #1
   247a8:	add	r0, r8, r0
   247ac:	blx	r4
   247b0:	cmp	r0, #0
   247b4:	bne	24844 <myhtml_serialization_node_callback@@Base+0x26c>
   247b8:	mov	r2, r5
   247bc:	mov	r1, #6
   247c0:	ldr	r0, [sp, #8]
   247c4:	blx	r4
   247c8:	cmp	r0, #0
   247cc:	bne	24844 <myhtml_serialization_node_callback@@Base+0x26c>
   247d0:	add	r6, r6, #1
   247d4:	mov	r1, #0
   247d8:	cmp	sl, r6
   247dc:	bne	2476c <myhtml_serialization_node_callback@@Base+0x194>
   247e0:	cmp	r1, #0
   247e4:	beq	24800 <myhtml_serialization_node_callback@@Base+0x228>
   247e8:	sub	r0, sl, r1
   247ec:	mov	r2, r5
   247f0:	add	r0, r8, r0
   247f4:	blx	r4
   247f8:	cmp	r0, #0
   247fc:	bne	24844 <myhtml_serialization_node_callback@@Base+0x26c>
   24800:	ldr	r0, [pc, #1148]	; 24c84 <myhtml_serialization_node_callback@@Base+0x6ac>
   24804:	mov	r2, r5
   24808:	mov	r1, #1
   2480c:	add	r0, pc, r0
   24810:	blx	r4
   24814:	cmp	r0, #0
   24818:	bne	24844 <myhtml_serialization_node_callback@@Base+0x26c>
   2481c:	ldr	r7, [r7]
   24820:	cmp	r7, #0
   24824:	bne	246a4 <myhtml_serialization_node_callback@@Base+0xcc>
   24828:	ldr	r0, [pc, #1112]	; 24c88 <myhtml_serialization_node_callback@@Base+0x6b0>
   2482c:	mov	r2, r5
   24830:	mov	r1, #1
   24834:	add	r0, pc, r0
   24838:	blx	r4
   2483c:	cmp	r0, #0
   24840:	beq	24848 <myhtml_serialization_node_callback@@Base+0x270>
   24844:	mov	r0, #2
   24848:	add	sp, sp, #28
   2484c:	ldrd	r4, [sp]
   24850:	ldrd	r6, [sp, #8]
   24854:	ldrd	r8, [sp, #16]
   24858:	ldrd	sl, [sp, #24]
   2485c:	add	sp, sp, #32
   24860:	pop	{pc}		; (ldr pc, [sp], #4)
   24864:	ldr	r3, [r0, #32]
   24868:	cmp	r3, #0
   2486c:	beq	248c8 <myhtml_serialization_node_callback@@Base+0x2f0>
   24870:	ldr	r0, [r3, #4]
   24874:	cmp	r0, #0
   24878:	beq	248c8 <myhtml_serialization_node_callback@@Base+0x2f0>
   2487c:	ldr	r2, [r6, #24]
   24880:	ldr	r1, [r3, #12]
   24884:	cmp	r2, #0
   24888:	beq	248b4 <myhtml_serialization_node_callback@@Base+0x2dc>
   2488c:	ldr	r3, [r2, #4]
   24890:	cmp	r3, #101	; 0x65
   24894:	beq	24bac <myhtml_serialization_node_callback@@Base+0x5d4>
   24898:	bls	24b94 <myhtml_serialization_node_callback@@Base+0x5bc>
   2489c:	cmp	r3, #120	; 0x78
   248a0:	beq	24bac <myhtml_serialization_node_callback@@Base+0x5d4>
   248a4:	cmp	r3, #143	; 0x8f
   248a8:	beq	24bac <myhtml_serialization_node_callback@@Base+0x5d4>
   248ac:	cmp	r3, #112	; 0x70
   248b0:	beq	24bac <myhtml_serialization_node_callback@@Base+0x5d4>
   248b4:	mov	r3, r5
   248b8:	mov	r2, r4
   248bc:	bl	240d8 <myhtml_rules_init@@Base+0x1cc>
   248c0:	cmp	r0, #0
   248c4:	bne	24844 <myhtml_serialization_node_callback@@Base+0x26c>
   248c8:	mov	r0, #0
   248cc:	b	24848 <myhtml_serialization_node_callback@@Base+0x270>
   248d0:	ldr	r0, [pc, #948]	; 24c8c <myhtml_serialization_node_callback@@Base+0x6b4>
   248d4:	mov	r1, #9
   248d8:	add	r0, pc, r0
   248dc:	blx	r4
   248e0:	cmp	r0, #0
   248e4:	bne	24844 <myhtml_serialization_node_callback@@Base+0x26c>
   248e8:	ldr	r0, [pc, #928]	; 24c90 <myhtml_serialization_node_callback@@Base+0x6b8>
   248ec:	mov	r2, r5
   248f0:	mov	r1, #1
   248f4:	add	r0, pc, r0
   248f8:	blx	r4
   248fc:	cmp	r0, #0
   24900:	bne	24844 <myhtml_serialization_node_callback@@Base+0x26c>
   24904:	ldr	r3, [r6, #32]
   24908:	cmp	r3, #0
   2490c:	beq	24a08 <myhtml_serialization_node_callback@@Base+0x430>
   24910:	ldr	r6, [r3, #40]	; 0x28
   24914:	cmp	r6, #0
   24918:	beq	24a08 <myhtml_serialization_node_callback@@Base+0x430>
   2491c:	ldr	r0, [r6, #8]
   24920:	cmp	r0, #0
   24924:	beq	24a08 <myhtml_serialization_node_callback@@Base+0x430>
   24928:	ldr	r1, [r6, #16]
   2492c:	cmp	r1, #0
   24930:	beq	24a08 <myhtml_serialization_node_callback@@Base+0x430>
   24934:	mov	r2, r5
   24938:	blx	r4
   2493c:	cmp	r0, #0
   24940:	bne	24844 <myhtml_serialization_node_callback@@Base+0x26c>
   24944:	ldr	r6, [r6]
   24948:	cmp	r6, #0
   2494c:	beq	24a08 <myhtml_serialization_node_callback@@Base+0x430>
   24950:	ldr	r3, [r6, #36]	; 0x24
   24954:	cmp	r3, #6
   24958:	bne	24a08 <myhtml_serialization_node_callback@@Base+0x430>
   2495c:	ldr	r1, [pc, #816]	; 24c94 <myhtml_serialization_node_callback@@Base+0x6bc>
   24960:	ldr	r0, [r6, #28]
   24964:	add	r1, pc, r1
   24968:	bl	104c0 <mycore_strcasecmp@plt>
   2496c:	cmp	r0, #0
   24970:	bne	24bc0 <myhtml_serialization_node_callback@@Base+0x5e8>
   24974:	ldr	r6, [r6]
   24978:	cmp	r6, #0
   2497c:	beq	24a08 <myhtml_serialization_node_callback@@Base+0x430>
   24980:	ldr	r3, [r6, #36]	; 0x24
   24984:	cmp	r3, #0
   24988:	beq	24a08 <myhtml_serialization_node_callback@@Base+0x430>
   2498c:	ldr	r0, [pc, #772]	; 24c98 <myhtml_serialization_node_callback@@Base+0x6c0>
   24990:	mov	r2, r5
   24994:	mov	r1, #7
   24998:	add	r0, pc, r0
   2499c:	blx	r4
   249a0:	cmp	r0, #0
   249a4:	bne	24844 <myhtml_serialization_node_callback@@Base+0x26c>
   249a8:	ldr	r0, [pc, #748]	; 24c9c <myhtml_serialization_node_callback@@Base+0x6c4>
   249ac:	mov	r2, r5
   249b0:	mov	r1, #2
   249b4:	add	r0, pc, r0
   249b8:	blx	r4
   249bc:	cmp	r0, #0
   249c0:	bne	24844 <myhtml_serialization_node_callback@@Base+0x26c>
   249c4:	ldr	r0, [r6, #28]
   249c8:	cmp	r0, #0
   249cc:	beq	249ec <myhtml_serialization_node_callback@@Base+0x414>
   249d0:	ldr	r1, [r6, #36]	; 0x24
   249d4:	cmp	r1, #0
   249d8:	beq	249ec <myhtml_serialization_node_callback@@Base+0x414>
   249dc:	mov	r2, r5
   249e0:	blx	r4
   249e4:	cmp	r0, #0
   249e8:	bne	24844 <myhtml_serialization_node_callback@@Base+0x26c>
   249ec:	ldr	r0, [pc, #684]	; 24ca0 <myhtml_serialization_node_callback@@Base+0x6c8>
   249f0:	mov	r2, r5
   249f4:	mov	r1, #1
   249f8:	add	r0, pc, r0
   249fc:	blx	r4
   24a00:	cmp	r0, #0
   24a04:	bne	24844 <myhtml_serialization_node_callback@@Base+0x26c>
   24a08:	ldr	r0, [pc, #660]	; 24ca4 <myhtml_serialization_node_callback@@Base+0x6cc>
   24a0c:	mov	r2, r5
   24a10:	mov	r1, #1
   24a14:	add	r0, pc, r0
   24a18:	blx	r4
   24a1c:	cmp	r0, #0
   24a20:	bne	24844 <myhtml_serialization_node_callback@@Base+0x26c>
   24a24:	mov	r0, #0
   24a28:	b	24848 <myhtml_serialization_node_callback@@Base+0x270>
   24a2c:	ldr	r0, [pc, #628]	; 24ca8 <myhtml_serialization_node_callback@@Base+0x6d0>
   24a30:	mov	r1, #4
   24a34:	add	r0, pc, r0
   24a38:	blx	r4
   24a3c:	cmp	r0, #0
   24a40:	bne	24844 <myhtml_serialization_node_callback@@Base+0x26c>
   24a44:	ldr	r3, [r6, #32]
   24a48:	cmp	r3, #0
   24a4c:	beq	24a70 <myhtml_serialization_node_callback@@Base+0x498>
   24a50:	ldr	r0, [r3, #4]
   24a54:	cmp	r0, #0
   24a58:	beq	24a70 <myhtml_serialization_node_callback@@Base+0x498>
   24a5c:	mov	r2, r5
   24a60:	ldr	r1, [r3, #12]
   24a64:	blx	r4
   24a68:	cmp	r0, #0
   24a6c:	bne	24844 <myhtml_serialization_node_callback@@Base+0x26c>
   24a70:	ldr	r0, [pc, #564]	; 24cac <myhtml_serialization_node_callback@@Base+0x6d4>
   24a74:	mov	r2, r5
   24a78:	mov	r1, #3
   24a7c:	add	r0, pc, r0
   24a80:	blx	r4
   24a84:	cmp	r0, #0
   24a88:	bne	24844 <myhtml_serialization_node_callback@@Base+0x26c>
   24a8c:	mov	r0, #0
   24a90:	b	24848 <myhtml_serialization_node_callback@@Base+0x270>
   24a94:	cmp	r1, #0
   24a98:	beq	24ab4 <myhtml_serialization_node_callback@@Base+0x4dc>
   24a9c:	sub	r0, r6, r1
   24aa0:	mov	r2, r5
   24aa4:	add	r0, r8, r0
   24aa8:	blx	r4
   24aac:	cmp	r0, #0
   24ab0:	bne	24844 <myhtml_serialization_node_callback@@Base+0x26c>
   24ab4:	mov	r2, r5
   24ab8:	mov	r1, #5
   24abc:	ldr	r0, [sp]
   24ac0:	blx	r4
   24ac4:	cmp	r0, #0
   24ac8:	beq	247d0 <myhtml_serialization_node_callback@@Base+0x1f8>
   24acc:	b	24844 <myhtml_serialization_node_callback@@Base+0x26c>
   24ad0:	cmp	r1, #0
   24ad4:	beq	24af0 <myhtml_serialization_node_callback@@Base+0x518>
   24ad8:	sub	r0, r6, r1
   24adc:	mov	r2, r5
   24ae0:	add	r0, r8, r0
   24ae4:	blx	r4
   24ae8:	cmp	r0, #0
   24aec:	bne	24844 <myhtml_serialization_node_callback@@Base+0x26c>
   24af0:	mov	r2, r5
   24af4:	mov	r1, #6
   24af8:	mov	r0, fp
   24afc:	blx	r4
   24b00:	cmp	r0, #0
   24b04:	beq	247d0 <myhtml_serialization_node_callback@@Base+0x1f8>
   24b08:	b	24844 <myhtml_serialization_node_callback@@Base+0x26c>
   24b0c:	mov	r2, r5
   24b10:	mov	r1, #4
   24b14:	ldr	r0, [sp, #12]
   24b18:	blx	r4
   24b1c:	cmp	r0, #0
   24b20:	beq	246d8 <myhtml_serialization_node_callback@@Base+0x100>
   24b24:	b	24844 <myhtml_serialization_node_callback@@Base+0x26c>
   24b28:	ldr	r0, [pc, #384]	; 24cb0 <myhtml_serialization_node_callback@@Base+0x6d8>
   24b2c:	mov	r2, r5
   24b30:	mov	r1, #6
   24b34:	add	r0, pc, r0
   24b38:	blx	r4
   24b3c:	cmp	r0, #0
   24b40:	beq	246d8 <myhtml_serialization_node_callback@@Base+0x100>
   24b44:	b	24844 <myhtml_serialization_node_callback@@Base+0x26c>
   24b48:	ldr	r0, [r7, #8]
   24b4c:	cmp	r0, #0
   24b50:	beq	246d8 <myhtml_serialization_node_callback@@Base+0x100>
   24b54:	ldr	r3, [r7, #16]
   24b58:	cmp	r3, #5
   24b5c:	bne	246d8 <myhtml_serialization_node_callback@@Base+0x100>
   24b60:	ldr	r1, [pc, #332]	; 24cb4 <myhtml_serialization_node_callback@@Base+0x6dc>
   24b64:	add	r1, pc, r1
   24b68:	bl	fb9c <mycore_strcmp@plt>
   24b6c:	cmp	r0, #0
   24b70:	beq	246d8 <myhtml_serialization_node_callback@@Base+0x100>
   24b74:	ldr	r0, [pc, #316]	; 24cb8 <myhtml_serialization_node_callback@@Base+0x6e0>
   24b78:	mov	r1, r6
   24b7c:	mov	r2, r5
   24b80:	add	r0, pc, r0
   24b84:	blx	r4
   24b88:	cmp	r0, #0
   24b8c:	beq	246d8 <myhtml_serialization_node_callback@@Base+0x100>
   24b90:	b	24844 <myhtml_serialization_node_callback@@Base+0x26c>
   24b94:	cmp	r3, #67	; 0x43
   24b98:	beq	24bac <myhtml_serialization_node_callback@@Base+0x5d4>
   24b9c:	bcc	248b4 <myhtml_serialization_node_callback@@Base+0x2dc>
   24ba0:	sub	r3, r3, #91	; 0x5b
   24ba4:	cmp	r3, #1
   24ba8:	bhi	248b4 <myhtml_serialization_node_callback@@Base+0x2dc>
   24bac:	mov	r2, r5
   24bb0:	blx	r4
   24bb4:	cmp	r0, #0
   24bb8:	beq	248c8 <myhtml_serialization_node_callback@@Base+0x2f0>
   24bbc:	b	24844 <myhtml_serialization_node_callback@@Base+0x26c>
   24bc0:	ldr	r1, [pc, #244]	; 24cbc <myhtml_serialization_node_callback@@Base+0x6e4>
   24bc4:	ldr	r0, [r6, #28]
   24bc8:	add	r1, pc, r1
   24bcc:	bl	104c0 <mycore_strcasecmp@plt>
   24bd0:	cmp	r0, #0
   24bd4:	bne	24a08 <myhtml_serialization_node_callback@@Base+0x430>
   24bd8:	ldr	r7, [r6]
   24bdc:	cmp	r7, #0
   24be0:	beq	24a08 <myhtml_serialization_node_callback@@Base+0x430>
   24be4:	ldr	r6, [r7]
   24be8:	ldr	r3, [r7, #36]	; 0x24
   24bec:	cmp	r3, #0
   24bf0:	beq	24c44 <myhtml_serialization_node_callback@@Base+0x66c>
   24bf4:	ldr	r0, [pc, #196]	; 24cc0 <myhtml_serialization_node_callback@@Base+0x6e8>
   24bf8:	mov	r2, r5
   24bfc:	mov	r1, #9
   24c00:	add	r0, pc, r0
   24c04:	blx	r4
   24c08:	cmp	r0, #0
   24c0c:	bne	24844 <myhtml_serialization_node_callback@@Base+0x26c>
   24c10:	mov	r2, r5
   24c14:	ldr	r0, [r7, #28]
   24c18:	ldr	r1, [r7, #36]	; 0x24
   24c1c:	blx	r4
   24c20:	cmp	r0, #0
   24c24:	bne	24844 <myhtml_serialization_node_callback@@Base+0x26c>
   24c28:	ldr	r0, [pc, #148]	; 24cc4 <myhtml_serialization_node_callback@@Base+0x6ec>
   24c2c:	mov	r2, r5
   24c30:	mov	r1, #1
   24c34:	add	r0, pc, r0
   24c38:	blx	r4
   24c3c:	cmp	r0, #0
   24c40:	bne	24844 <myhtml_serialization_node_callback@@Base+0x26c>
   24c44:	cmp	r6, #0
   24c48:	beq	24a08 <myhtml_serialization_node_callback@@Base+0x430>
   24c4c:	ldr	r3, [r6, #36]	; 0x24
   24c50:	cmp	r3, #0
   24c54:	beq	24a08 <myhtml_serialization_node_callback@@Base+0x430>
   24c58:	ldr	r3, [r7, #36]	; 0x24
   24c5c:	cmp	r3, #0
   24c60:	bne	249a8 <myhtml_serialization_node_callback@@Base+0x3d0>
   24c64:	b	2498c <myhtml_serialization_node_callback@@Base+0x3b4>
   24c68:	andeq	sl, sp, r4, lsr #6
   24c6c:			; <UNDEFINED> instruction: 0x000da2b4
   24c70:	ldrdeq	sl, [sp], -r8
   24c74:	andeq	sl, sp, ip, asr r2
   24c78:	andeq	sl, sp, r8, ror #4
   24c7c:	andeq	sl, sp, ip, ror #4
   24c80:	andeq	sl, sp, r4, lsr r2
   24c84:	andeq	sl, sp, ip, lsr r1
   24c88:	ldrdeq	sl, [sp], -ip
   24c8c:	andeq	sl, sp, r8, asr #32
   24c90:	andeq	sl, sp, r8, lsr r0
   24c94:	andeq	r9, sp, ip, asr #31
   24c98:			; <UNDEFINED> instruction: 0x000d9fb4
   24c9c:	andeq	r9, sp, r0, lsr #31
   24ca0:	andeq	r9, sp, r0, asr pc
   24ca4:	strdeq	r9, [sp], -ip
   24ca8:	andeq	r9, sp, r0, ror #29
   24cac:	andeq	r9, sp, r0, lsr #29
   24cb0:	andeq	r9, sp, r0, asr #28
   24cb4:	andeq	r9, sp, r0, lsl #28
   24cb8:	andeq	r9, sp, ip, ror #27
   24cbc:	andeq	r9, sp, r0, ror sp
   24cc0:	andeq	r9, sp, r0, asr #26
   24cc4:	andeq	r9, sp, r4, lsl sp

00024cc8 <myhtml_serialization_tree_callback@@Base>:
   24cc8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   24ccc:	strd	r6, [sp, #8]
   24cd0:	subs	r7, r0, #0
   24cd4:	str	r8, [sp, #16]
   24cd8:	str	lr, [sp, #20]
   24cdc:	beq	24d9c <myhtml_serialization_tree_callback@@Base+0xd4>
   24ce0:	ldr	r3, [r7, #40]	; 0x28
   24ce4:	mov	r6, r2
   24ce8:	mov	r5, r1
   24cec:	cmp	r3, #0
   24cf0:	beq	24d00 <myhtml_serialization_tree_callback@@Base+0x38>
   24cf4:	ldr	r3, [r3, #84]	; 0x54
   24cf8:	cmp	r3, r7
   24cfc:	beq	24da4 <myhtml_serialization_tree_callback@@Base+0xdc>
   24d00:	mov	r4, r7
   24d04:	b	24d18 <myhtml_serialization_tree_callback@@Base+0x50>
   24d08:	ldr	r3, [r4, #20]
   24d0c:	cmp	r3, #0
   24d10:	movne	r4, r3
   24d14:	beq	24d48 <myhtml_serialization_tree_callback@@Base+0x80>
   24d18:	mov	r2, r6
   24d1c:	mov	r1, r5
   24d20:	mov	r0, r4
   24d24:	bl	10694 <myhtml_serialization_node_callback@plt>
   24d28:	cmp	r0, #0
   24d2c:	beq	24d08 <myhtml_serialization_tree_callback@@Base+0x40>
   24d30:	mov	r0, #2
   24d34:	ldrd	r4, [sp]
   24d38:	ldrd	r6, [sp, #8]
   24d3c:	ldr	r8, [sp, #16]
   24d40:	add	sp, sp, #20
   24d44:	pop	{pc}		; (ldr pc, [sp], #4)
   24d48:	cmp	r7, r4
   24d4c:	bne	24d6c <myhtml_serialization_tree_callback@@Base+0xa4>
   24d50:	b	24db4 <myhtml_serialization_tree_callback@@Base+0xec>
   24d54:	bl	242d4 <myhtml_rules_init@@Base+0x3c8>
   24d58:	cmp	r0, #0
   24d5c:	bne	24d30 <myhtml_serialization_tree_callback@@Base+0x68>
   24d60:	ldr	r4, [r4, #24]
   24d64:	cmp	r7, r4
   24d68:	beq	24db4 <myhtml_serialization_tree_callback@@Base+0xec>
   24d6c:	ldr	r3, [r4, #16]
   24d70:	mov	r2, r6
   24d74:	mov	r1, r5
   24d78:	mov	r0, r4
   24d7c:	cmp	r3, #0
   24d80:	beq	24d54 <myhtml_serialization_tree_callback@@Base+0x8c>
   24d84:	bl	242d4 <myhtml_rules_init@@Base+0x3c8>
   24d88:	cmp	r0, #0
   24d8c:	bne	24d30 <myhtml_serialization_tree_callback@@Base+0x68>
   24d90:	ldr	r4, [r4, #16]
   24d94:	cmp	r4, #0
   24d98:	bne	24d18 <myhtml_serialization_tree_callback@@Base+0x50>
   24d9c:	mov	r0, #0
   24da0:	b	24d34 <myhtml_serialization_tree_callback@@Base+0x6c>
   24da4:	ldr	r4, [r7, #20]
   24da8:	cmp	r4, #0
   24dac:	bne	24d18 <myhtml_serialization_tree_callback@@Base+0x50>
   24db0:	b	24d9c <myhtml_serialization_tree_callback@@Base+0xd4>
   24db4:	ldr	r3, [r4, #40]	; 0x28
   24db8:	ldr	r3, [r3, #84]	; 0x54
   24dbc:	cmp	r3, r4
   24dc0:	beq	24d9c <myhtml_serialization_tree_callback@@Base+0xd4>
   24dc4:	mov	r2, r6
   24dc8:	mov	r1, r5
   24dcc:	mov	r0, r4
   24dd0:	bl	242d4 <myhtml_rules_init@@Base+0x3c8>
   24dd4:	cmp	r0, #0
   24dd8:	beq	24d9c <myhtml_serialization_tree_callback@@Base+0xd4>
   24ddc:	b	24d30 <myhtml_serialization_tree_callback@@Base+0x68>

00024de0 <myhtml_serialization_reallocate@@Base>:
   24de0:	strd	r4, [sp, #-16]!
   24de4:	mov	r4, r0
   24de8:	mov	r5, r1
   24dec:	ldr	r0, [r0]
   24df0:	str	r6, [sp, #8]
   24df4:	str	lr, [sp, #12]
   24df8:	bl	fb84 <mycore_realloc@plt>
   24dfc:	subs	r3, r0, #0
   24e00:	beq	24e1c <myhtml_serialization_reallocate@@Base+0x3c>
   24e04:	mov	r0, #0
   24e08:	stm	r4, {r3, r5}
   24e0c:	ldrd	r4, [sp]
   24e10:	ldr	r6, [sp, #8]
   24e14:	add	sp, sp, #12
   24e18:	pop	{pc}		; (ldr pc, [sp], #4)
   24e1c:	mov	r0, #2
   24e20:	str	r3, [r4]
   24e24:	str	r3, [r4, #4]
   24e28:	str	r3, [r4, #8]
   24e2c:	b	24e0c <myhtml_serialization_reallocate@@Base+0x2c>

00024e30 <myhtml_serialization_concatenate@@Base>:
   24e30:	strd	r4, [sp, #-16]!
   24e34:	mov	r4, r2
   24e38:	mov	r5, r1
   24e3c:	ldrd	r2, [r2, #4]
   24e40:	str	r6, [sp, #8]
   24e44:	mov	r6, r0
   24e48:	str	lr, [sp, #12]
   24e4c:	add	r1, r3, r1
   24e50:	cmp	r1, r2
   24e54:	bcc	24e74 <myhtml_serialization_concatenate@@Base+0x44>
   24e58:	add	r1, r1, #4096	; 0x1000
   24e5c:	mov	r0, r4
   24e60:	bl	10310 <myhtml_serialization_reallocate@plt>
   24e64:	cmp	r0, #0
   24e68:	movne	r0, #2
   24e6c:	bne	24ea4 <myhtml_serialization_concatenate@@Base+0x74>
   24e70:	ldr	r3, [r4, #8]
   24e74:	mov	r2, r5
   24e78:	mov	r1, r6
   24e7c:	ldr	r0, [r4]
   24e80:	add	r0, r0, r3
   24e84:	bl	10880 <strncpy@plt>
   24e88:	ldr	r2, [r4]
   24e8c:	mov	r3, #0
   24e90:	mov	r0, r3
   24e94:	ldr	r1, [r4, #8]
   24e98:	add	r5, r5, r1
   24e9c:	str	r5, [r4, #8]
   24ea0:	strb	r3, [r2, r5]
   24ea4:	ldrd	r4, [sp]
   24ea8:	ldr	r6, [sp, #8]
   24eac:	add	sp, sp, #12
   24eb0:	pop	{pc}		; (ldr pc, [sp], #4)

00024eb4 <myhtml_serialization_tree_buffer@@Base>:
   24eb4:	strd	r4, [sp, #-16]!
   24eb8:	subs	r4, r1, #0
   24ebc:	str	r6, [sp, #8]
   24ec0:	ldr	r6, [pc, #124]	; 24f44 <myhtml_serialization_tree_buffer@@Base+0x90>
   24ec4:	str	lr, [sp, #12]
   24ec8:	add	r6, pc, r6
   24ecc:	beq	24f3c <myhtml_serialization_tree_buffer@@Base+0x88>
   24ed0:	ldr	r3, [r4]
   24ed4:	mov	r5, r0
   24ed8:	cmp	r3, #0
   24edc:	beq	24f04 <myhtml_serialization_tree_buffer@@Base+0x50>
   24ee0:	ldr	r3, [pc, #96]	; 24f48 <myhtml_serialization_tree_buffer@@Base+0x94>
   24ee4:	mov	r2, r4
   24ee8:	mov	r0, r5
   24eec:	ldrd	r4, [sp]
   24ef0:	ldr	lr, [sp, #12]
   24ef4:	ldr	r1, [r6, r3]
   24ef8:	ldr	r6, [sp, #8]
   24efc:	add	sp, sp, #16
   24f00:	b	10dfc <myhtml_serialization_tree_callback@plt>
   24f04:	movw	r2, #20490	; 0x500a
   24f08:	mov	r0, r2
   24f0c:	strd	r2, [r4, #4]
   24f10:	bl	10c28 <mycore_malloc@plt>
   24f14:	cmp	r0, #0
   24f18:	str	r0, [r4]
   24f1c:	moveq	r2, #2
   24f20:	streq	r0, [r4, #4]
   24f24:	bne	24ee0 <myhtml_serialization_tree_buffer@@Base+0x2c>
   24f28:	ldrd	r4, [sp]
   24f2c:	mov	r0, r2
   24f30:	ldr	r6, [sp, #8]
   24f34:	add	sp, sp, #12
   24f38:	pop	{pc}		; (ldr pc, [sp], #4)
   24f3c:	mov	r2, r4
   24f40:	b	24f28 <myhtml_serialization_tree_buffer@@Base+0x74>
   24f44:	andeq	r4, pc, r0, lsr r1	; <UNPREDICTABLE>
   24f48:	andeq	r0, r0, r0, lsr #17

00024f4c <myhtml_serialization@@Base>:
   24f4c:	b	102bc <myhtml_serialization_tree_buffer@plt>

00024f50 <myhtml_serialization_node_buffer@@Base>:
   24f50:	strd	r4, [sp, #-16]!
   24f54:	subs	r4, r1, #0
   24f58:	str	r6, [sp, #8]
   24f5c:	ldr	r6, [pc, #112]	; 24fd4 <myhtml_serialization_node_buffer@@Base+0x84>
   24f60:	str	lr, [sp, #12]
   24f64:	add	r6, pc, r6
   24f68:	beq	24fc0 <myhtml_serialization_node_buffer@@Base+0x70>
   24f6c:	ldr	r3, [r4]
   24f70:	mov	r5, r0
   24f74:	cmp	r3, #0
   24f78:	beq	24fa0 <myhtml_serialization_node_buffer@@Base+0x50>
   24f7c:	ldr	r3, [pc, #84]	; 24fd8 <myhtml_serialization_node_buffer@@Base+0x88>
   24f80:	mov	r2, r4
   24f84:	mov	r0, r5
   24f88:	ldrd	r4, [sp]
   24f8c:	ldr	lr, [sp, #12]
   24f90:	ldr	r1, [r6, r3]
   24f94:	ldr	r6, [sp, #8]
   24f98:	add	sp, sp, #16
   24f9c:	b	10694 <myhtml_serialization_node_callback@plt>
   24fa0:	mov	r2, #2048	; 0x800
   24fa4:	mov	r0, r2
   24fa8:	strd	r2, [r4, #4]
   24fac:	bl	10c28 <mycore_malloc@plt>
   24fb0:	cmp	r0, #0
   24fb4:	str	r0, [r4]
   24fb8:	streq	r0, [r4, #4]
   24fbc:	bne	24f7c <myhtml_serialization_node_buffer@@Base+0x2c>
   24fc0:	ldrd	r4, [sp]
   24fc4:	mov	r0, #0
   24fc8:	ldr	r6, [sp, #8]
   24fcc:	add	sp, sp, #12
   24fd0:	pop	{pc}		; (ldr pc, [sp], #4)
   24fd4:	muleq	pc, r4, r0	; <UNPREDICTABLE>
   24fd8:	andeq	r0, r0, r0, lsr #17

00024fdc <myhtml_serialization_node@@Base>:
   24fdc:	b	10748 <myhtml_serialization_node_buffer@plt>

00024fe0 <myhtml_stream_buffer_create@@Base>:
   24fe0:	mov	r1, #36	; 0x24
   24fe4:	mov	r0, #1
   24fe8:	b	feb4 <mycore_calloc@plt>

00024fec <myhtml_stream_buffer_init@@Base>:
   24fec:	mov	r3, r1
   24ff0:	mov	r2, #0
   24ff4:	str	r4, [sp, #-8]!
   24ff8:	mov	r4, r0
   24ffc:	mov	r0, r1
   25000:	str	lr, [sp, #4]
   25004:	mov	r1, #12
   25008:	strd	r2, [r4, #4]
   2500c:	bl	feb4 <mycore_calloc@plt>
   25010:	mov	r3, r0
   25014:	movw	r0, #37633	; 0x9301
   25018:	cmp	r3, #0
   2501c:	str	r3, [r4]
   25020:	movne	r0, #0
   25024:	ldr	r4, [sp]
   25028:	add	sp, sp, #4
   2502c:	pop	{pc}		; (ldr pc, [sp], #4)

00025030 <myhtml_stream_buffer_entry_init@@Base>:
   25030:	strd	r4, [sp, #-16]!
   25034:	mov	r4, r0
   25038:	mov	r5, r1
   2503c:	ldr	r0, [r0]
   25040:	str	r6, [sp, #8]
   25044:	str	lr, [sp, #12]
   25048:	cmp	r0, #0
   2504c:	beq	25074 <myhtml_stream_buffer_entry_init@@Base+0x44>
   25050:	ldr	r3, [r4, #8]
   25054:	cmp	r3, r1
   25058:	bcc	25070 <myhtml_stream_buffer_entry_init@@Base+0x40>
   2505c:	mov	r0, #0
   25060:	ldrd	r4, [sp]
   25064:	ldr	r6, [sp, #8]
   25068:	add	sp, sp, #12
   2506c:	pop	{pc}		; (ldr pc, [sp], #4)
   25070:	bl	10d60 <mycore_free@plt>
   25074:	mov	r3, #0
   25078:	mov	r0, r5
   2507c:	stmib	r4, {r3, r5}
   25080:	bl	10c28 <mycore_malloc@plt>
   25084:	cmp	r0, #0
   25088:	str	r0, [r4]
   2508c:	bne	2505c <myhtml_stream_buffer_entry_init@@Base+0x2c>
   25090:	movw	r0, #37635	; 0x9303
   25094:	b	25060 <myhtml_stream_buffer_entry_init@@Base+0x30>

00025098 <myhtml_stream_buffer_entry_clean@@Base>:
   25098:	cmp	r0, #0
   2509c:	movne	r3, #0
   250a0:	strne	r3, [r0, #4]
   250a4:	bx	lr

000250a8 <myhtml_stream_buffer_entry_destroy@@Base>:
   250a8:	strd	r4, [sp, #-16]!
   250ac:	subs	r4, r0, #0
   250b0:	str	r6, [sp, #8]
   250b4:	str	lr, [sp, #12]
   250b8:	beq	250d8 <myhtml_stream_buffer_entry_destroy@@Base+0x30>
   250bc:	ldr	r0, [r4]
   250c0:	mov	r5, r1
   250c4:	cmp	r0, #0
   250c8:	beq	250d0 <myhtml_stream_buffer_entry_destroy@@Base+0x28>
   250cc:	bl	10d60 <mycore_free@plt>
   250d0:	cmp	r5, #0
   250d4:	bne	250ec <myhtml_stream_buffer_entry_destroy@@Base+0x44>
   250d8:	mov	r0, r4
   250dc:	ldrd	r4, [sp]
   250e0:	ldr	r6, [sp, #8]
   250e4:	add	sp, sp, #12
   250e8:	pop	{pc}		; (ldr pc, [sp], #4)
   250ec:	mov	r0, r4
   250f0:	mov	r4, #0
   250f4:	bl	10d60 <mycore_free@plt>
   250f8:	b	250d8 <myhtml_stream_buffer_entry_destroy@@Base+0x30>

000250fc <myhtml_stream_buffer_clean@@Base>:
   250fc:	cmp	r0, #0
   25100:	movne	r3, #0
   25104:	strne	r3, [r0, #4]
   25108:	bx	lr

0002510c <myhtml_stream_buffer_destroy@@Base>:
   2510c:	strd	r4, [sp, #-16]!
   25110:	subs	r5, r0, #0
   25114:	str	r6, [sp, #8]
   25118:	str	lr, [sp, #12]
   2511c:	beq	2516c <myhtml_stream_buffer_destroy@@Base+0x60>
   25120:	ldr	r0, [r5]
   25124:	mov	r6, r1
   25128:	cmp	r0, #0
   2512c:	beq	25164 <myhtml_stream_buffer_destroy@@Base+0x58>
   25130:	ldr	r3, [r5, #4]
   25134:	cmp	r3, #0
   25138:	beq	25160 <myhtml_stream_buffer_destroy@@Base+0x54>
   2513c:	mov	r4, #0
   25140:	add	r3, r4, r4, lsl #1
   25144:	mov	r1, #0
   25148:	add	r4, r4, #1
   2514c:	add	r0, r0, r3, lsl #2
   25150:	bl	100e8 <myhtml_stream_buffer_entry_destroy@plt>
   25154:	ldm	r5, {r0, r3}
   25158:	cmp	r3, r4
   2515c:	bhi	25140 <myhtml_stream_buffer_destroy@@Base+0x34>
   25160:	bl	10d60 <mycore_free@plt>
   25164:	cmp	r6, #0
   25168:	bne	25180 <myhtml_stream_buffer_destroy@@Base+0x74>
   2516c:	mov	r0, r5
   25170:	ldrd	r4, [sp]
   25174:	ldr	r6, [sp, #8]
   25178:	add	sp, sp, #12
   2517c:	pop	{pc}		; (ldr pc, [sp], #4)
   25180:	mov	r0, r5
   25184:	mov	r5, #0
   25188:	bl	10d60 <mycore_free@plt>
   2518c:	b	2516c <myhtml_stream_buffer_destroy@@Base+0x60>

00025190 <myhtml_stream_buffer_add_entry@@Base>:
   25190:	strd	r4, [sp, #-24]!	; 0xffffffe8
   25194:	mov	r4, r0
   25198:	ldr	r3, [r0, #4]
   2519c:	strd	r6, [sp, #8]
   251a0:	mov	r6, r1
   251a4:	ldr	r1, [r0, #8]
   251a8:	str	r8, [sp, #16]
   251ac:	str	lr, [sp, #20]
   251b0:	cmp	r3, r1
   251b4:	bcs	251fc <myhtml_stream_buffer_add_entry@@Base+0x6c>
   251b8:	ldr	r5, [r0]
   251bc:	add	r3, r3, r3, lsl #1
   251c0:	mov	r1, r6
   251c4:	add	r5, r5, r3, lsl #2
   251c8:	mov	r0, r5
   251cc:	bl	1079c <myhtml_stream_buffer_entry_init@plt>
   251d0:	cmp	r0, #0
   251d4:	bne	2523c <myhtml_stream_buffer_add_entry@@Base+0xac>
   251d8:	ldr	r3, [r4, #4]
   251dc:	add	r3, r3, #1
   251e0:	str	r3, [r4, #4]
   251e4:	mov	r0, r5
   251e8:	ldrd	r4, [sp]
   251ec:	ldrd	r6, [sp, #8]
   251f0:	ldr	r8, [sp, #16]
   251f4:	add	sp, sp, #20
   251f8:	pop	{pc}		; (ldr pc, [sp], #4)
   251fc:	lsl	r7, r1, #1
   25200:	add	r1, r7, r1, lsl #2
   25204:	lsl	r1, r1, #2
   25208:	bl	fb84 <mycore_realloc@plt>
   2520c:	subs	r5, r0, #0
   25210:	beq	2523c <myhtml_stream_buffer_add_entry@@Base+0xac>
   25214:	ldr	r2, [r4, #8]
   25218:	mov	r1, #0
   2521c:	add	r0, r2, r2, lsl #1
   25220:	sub	r2, r7, r2
   25224:	add	r0, r5, r0, lsl #2
   25228:	bl	10844 <memset@plt>
   2522c:	str	r5, [r4]
   25230:	str	r7, [r4, #8]
   25234:	ldr	r3, [r4, #4]
   25238:	b	251bc <myhtml_stream_buffer_add_entry@@Base+0x2c>
   2523c:	mov	r5, #0
   25240:	b	251e4 <myhtml_stream_buffer_add_entry@@Base+0x54>

00025244 <myhtml_stream_buffer_current_entry@@Base>:
   25244:	ldr	r3, [r0, #4]
   25248:	cmp	r3, #0
   2524c:	beq	25268 <myhtml_stream_buffer_current_entry@@Base+0x24>
   25250:	add	r3, r3, r3, lsl #1
   25254:	ldr	r0, [r0]
   25258:	lsl	r3, r3, #2
   2525c:	sub	r3, r3, #12
   25260:	add	r0, r0, r3
   25264:	bx	lr
   25268:	mov	r0, r3
   2526c:	bx	lr

00025270 <myhtml_tag_create@@Base>:
   25270:	mov	r0, #20
   25274:	b	10c28 <mycore_malloc@plt>

00025278 <myhtml_tag_clean@@Base>:
   25278:	mov	r3, #252	; 0xfc
   2527c:	str	r4, [sp, #-8]!
   25280:	mov	r4, r0
   25284:	ldr	r0, [r0, #4]
   25288:	str	lr, [sp, #4]
   2528c:	str	r3, [r4, #8]
   25290:	bl	101f0 <mcsimple_clean@plt>
   25294:	ldr	r1, [r4, #12]
   25298:	ldr	r0, [r4, #16]
   2529c:	bl	1067c <mchar_async_node_clean@plt>
   252a0:	ldr	r0, [r4]
   252a4:	ldr	r4, [sp]
   252a8:	ldr	lr, [sp, #4]
   252ac:	add	sp, sp, #8
   252b0:	b	1028c <mctree_clean@plt>

000252b4 <myhtml_tag_init@@Base>:
   252b4:	strd	r4, [sp, #-16]!
   252b8:	mov	r4, r1
   252bc:	str	r6, [sp, #8]
   252c0:	mov	r6, r0
   252c4:	str	lr, [sp, #12]
   252c8:	sub	sp, sp, #8
   252cc:	bl	1025c <mcsimple_create@plt>
   252d0:	cmp	r0, #0
   252d4:	str	r0, [r4, #4]
   252d8:	movweq	r5, #37264	; 0x9190
   252dc:	beq	2533c <myhtml_tag_init@@Base+0x88>
   252e0:	mov	r3, #44	; 0x2c
   252e4:	mov	r2, #1024	; 0x400
   252e8:	mov	r1, #128	; 0x80
   252ec:	bl	103e8 <mcsimple_init@plt>
   252f0:	add	r1, sp, #4
   252f4:	ldr	r0, [r6, #4]
   252f8:	bl	1022c <mchar_async_node_add@plt>
   252fc:	str	r0, [r4, #12]
   25300:	mov	r0, #2
   25304:	bl	105ec <mctree_create@plt>
   25308:	ldr	r5, [sp, #4]
   2530c:	mov	r2, #252	; 0xfc
   25310:	ldr	r3, [r6, #4]
   25314:	str	r0, [r4]
   25318:	str	r2, [r4, #8]
   2531c:	cmp	r5, #0
   25320:	str	r3, [r4, #16]
   25324:	bne	2533c <myhtml_tag_init@@Base+0x88>
   25328:	cmp	r0, #0
   2532c:	moveq	r5, #2
   25330:	beq	2533c <myhtml_tag_init@@Base+0x88>
   25334:	mov	r0, r4
   25338:	bl	1100c <myhtml_tag_clean@plt>
   2533c:	mov	r0, r5
   25340:	add	sp, sp, #8
   25344:	ldrd	r4, [sp]
   25348:	ldr	r6, [sp, #8]
   2534c:	add	sp, sp, #12
   25350:	pop	{pc}		; (ldr pc, [sp], #4)

00025354 <myhtml_tag_destroy@@Base>:
   25354:	str	r4, [sp, #-8]!
   25358:	subs	r4, r0, #0
   2535c:	str	lr, [sp, #4]
   25360:	beq	25394 <myhtml_tag_destroy@@Base+0x40>
   25364:	ldr	r0, [r4]
   25368:	bl	10058 <mctree_destroy@plt>
   2536c:	mov	r1, #1
   25370:	str	r0, [r4]
   25374:	ldr	r0, [r4, #4]
   25378:	bl	10334 <mcsimple_destroy@plt>
   2537c:	str	r0, [r4, #4]
   25380:	ldr	r1, [r4, #12]
   25384:	ldr	r0, [r4, #16]
   25388:	bl	10bec <mchar_async_node_delete@plt>
   2538c:	mov	r0, r4
   25390:	bl	10d60 <mycore_free@plt>
   25394:	ldr	r4, [sp]
   25398:	add	sp, sp, #4
   2539c:	mov	r0, #0
   253a0:	pop	{pc}		; (ldr pc, [sp], #4)

000253a4 <myhtml_tag_add@@Base>:
   253a4:	strd	r4, [sp, #-28]!	; 0xffffffe4
   253a8:	mov	r5, r0
   253ac:	mov	r4, r1
   253b0:	ldr	r1, [r0, #12]
   253b4:	ldr	r0, [r0, #16]
   253b8:	strd	r6, [sp, #8]
   253bc:	mov	r6, r2
   253c0:	add	r2, r2, #1
   253c4:	strd	r8, [sp, #16]
   253c8:	mov	r8, r3
   253cc:	str	lr, [sp, #24]
   253d0:	sub	sp, sp, #12
   253d4:	ldrb	r9, [sp, #40]	; 0x28
   253d8:	bl	108a4 <mchar_async_malloc@plt>
   253dc:	mov	r7, r0
   253e0:	cmp	r9, #0
   253e4:	beq	254b0 <myhtml_tag_add@@Base+0x10c>
   253e8:	cmp	r6, #0
   253ec:	beq	254c4 <myhtml_tag_add@@Base+0x120>
   253f0:	sub	r1, r4, #1
   253f4:	sub	r2, r0, #1
   253f8:	add	lr, r1, r6
   253fc:	ldrb	r3, [r1, #1]!
   25400:	sub	r0, r3, #65	; 0x41
   25404:	orr	ip, r3, #96	; 0x60
   25408:	cmp	r0, #25
   2540c:	bhi	254a0 <myhtml_tag_add@@Base+0xfc>
   25410:	cmp	r1, lr
   25414:	strb	ip, [r2, #1]!
   25418:	bne	253fc <myhtml_tag_add@@Base+0x58>
   2541c:	add	r2, r7, r6
   25420:	mov	r3, #0
   25424:	strb	r3, [r2]
   25428:	mov	r4, #0
   2542c:	ldr	r0, [r5, #4]
   25430:	bl	106d0 <mcsimple_malloc@plt>
   25434:	mov	r9, r0
   25438:	mov	r2, r6
   2543c:	str	r4, [sp]
   25440:	mov	r3, r0
   25444:	mov	r1, r7
   25448:	ldr	r0, [r5]
   2544c:	bl	108ec <mctree_insert@plt>
   25450:	ldr	r2, [r5, #8]
   25454:	add	r1, r2, #1
   25458:	mov	r0, r2
   2545c:	stm	r9, {r2, r7}
   25460:	str	r6, [r9, #8]
   25464:	str	r8, [r9, #12]
   25468:	str	r1, [r5, #8]
   2546c:	str	r4, [r9, #16]
   25470:	str	r4, [r9, #20]
   25474:	str	r4, [r9, #24]
   25478:	str	r4, [r9, #28]
   2547c:	str	r4, [r9, #32]
   25480:	str	r4, [r9, #36]	; 0x24
   25484:	str	r4, [r9, #40]	; 0x28
   25488:	add	sp, sp, #12
   2548c:	ldrd	r4, [sp]
   25490:	ldrd	r6, [sp, #8]
   25494:	ldrd	r8, [sp, #16]
   25498:	add	sp, sp, #24
   2549c:	pop	{pc}		; (ldr pc, [sp], #4)
   254a0:	cmp	r1, lr
   254a4:	strb	r3, [r2, #1]!
   254a8:	bne	253fc <myhtml_tag_add@@Base+0x58>
   254ac:	b	2541c <myhtml_tag_add@@Base+0x78>
   254b0:	mov	r1, r4
   254b4:	mov	r2, r6
   254b8:	bl	10880 <strncpy@plt>
   254bc:	strb	r9, [r7, r6]
   254c0:	b	25428 <myhtml_tag_add@@Base+0x84>
   254c4:	mov	r2, r0
   254c8:	b	25420 <myhtml_tag_add@@Base+0x7c>

000254cc <myhtml_tag_set_category@@Base>:
   254cc:	cmp	r1, #251	; 0xfb
   254d0:	bxls	lr
   254d4:	sub	r1, r1, #252	; 0xfc
   254d8:	strd	r4, [sp, #-16]!
   254dc:	mov	r4, r2
   254e0:	ldr	r0, [r0, #4]
   254e4:	mov	r5, r3
   254e8:	str	r6, [sp, #8]
   254ec:	str	lr, [sp, #12]
   254f0:	bl	10f34 <mcsimple_get_by_absolute_position@plt>
   254f4:	add	r2, r4, #4
   254f8:	ldr	r6, [sp, #8]
   254fc:	str	r5, [r0, r2, lsl #2]
   25500:	ldrd	r4, [sp]
   25504:	add	sp, sp, #12
   25508:	pop	{pc}		; (ldr pc, [sp], #4)

0002550c <myhtml_tag_get_by_id@@Base>:
   2550c:	cmp	r1, #251	; 0xfb
   25510:	bhi	2551c <myhtml_tag_get_by_id@@Base+0x10>
   25514:	mov	r0, r1
   25518:	b	ff98 <myhtml_tag_static_get_by_id@plt>
   2551c:	sub	r1, r1, #252	; 0xfc
   25520:	ldr	r0, [r0, #4]
   25524:	b	10f34 <mcsimple_get_by_absolute_position@plt>

00025528 <myhtml_tag_get_by_name@@Base>:
   25528:	strd	r4, [sp, #-16]!
   2552c:	mov	r4, r1
   25530:	mov	r1, r2
   25534:	str	r6, [sp, #8]
   25538:	mov	r6, r0
   2553c:	mov	r0, r4
   25540:	mov	r5, r2
   25544:	str	lr, [sp, #12]
   25548:	bl	108b0 <myhtml_tag_static_search@plt>
   2554c:	cmp	r0, #0
   25550:	beq	25564 <myhtml_tag_get_by_name@@Base+0x3c>
   25554:	ldrd	r4, [sp]
   25558:	ldr	r6, [sp, #8]
   2555c:	add	sp, sp, #12
   25560:	pop	{pc}		; (ldr pc, [sp], #4)
   25564:	mov	r2, r5
   25568:	mov	r1, r4
   2556c:	ldr	r0, [r6]
   25570:	bl	106dc <mctree_search_lowercase@plt>
   25574:	ldr	r3, [r6]
   25578:	rsb	r0, r0, r0, lsl #3
   2557c:	ldrd	r4, [sp]
   25580:	ldr	r6, [sp, #8]
   25584:	add	sp, sp, #12
   25588:	ldr	r3, [r3]
   2558c:	add	r3, r3, r0, lsl #2
   25590:	ldr	r0, [r3, #8]
   25594:	pop	{pc}		; (ldr pc, [sp], #4)

00025598 <myhtml_tag_static_search@@Base>:
   25598:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2559c:	movw	r3, #411	; 0x19b
   255a0:	movt	r3, #4515	; 0x11a3
   255a4:	strd	r6, [sp, #8]
   255a8:	mov	r7, r1
   255ac:	mov	r6, r0
   255b0:	add	r2, r0, r7
   255b4:	ldr	r1, [pc, #176]	; 2566c <myhtml_tag_static_search@@Base+0xd4>
   255b8:	str	r8, [sp, #16]
   255bc:	str	lr, [sp, #20]
   255c0:	ldrb	ip, [r0]
   255c4:	movw	r0, #479	; 0x1df
   255c8:	ldrb	r2, [r2, #-1]
   255cc:	add	r1, pc, r1
   255d0:	ldr	r5, [pc, #152]	; 25670 <myhtml_tag_static_search@@Base+0xd8>
   255d4:	ldrb	r2, [r1, r2]
   255d8:	ldrb	r1, [r1, ip]
   255dc:	add	r5, pc, r5
   255e0:	smulbb	r2, r2, r1
   255e4:	mul	r2, r7, r2
   255e8:	umull	r1, r3, r3, r2
   255ec:	sub	r1, r2, r3
   255f0:	add	r3, r3, r1, lsr #1
   255f4:	lsr	r3, r3, #8
   255f8:	mls	r3, r0, r3, r2
   255fc:	add	r3, r3, #1
   25600:	add	r3, r3, r3, lsl #1
   25604:	ldr	r8, [r5, r3, lsl #2]
   25608:	add	r4, r5, r3, lsl #2
   2560c:	cmp	r8, #0
   25610:	beq	25650 <myhtml_tag_static_search@@Base+0xb8>
   25614:	ldr	r3, [r8, #8]
   25618:	cmp	r3, r7
   2561c:	beq	2562c <myhtml_tag_static_search@@Base+0x94>
   25620:	bhi	25650 <myhtml_tag_static_search@@Base+0xb8>
   25624:	ldr	r3, [r4, #4]
   25628:	b	25600 <myhtml_tag_static_search@@Base+0x68>
   2562c:	mov	r2, r7
   25630:	mov	r1, r6
   25634:	ldr	r0, [r8, #4]
   25638:	bl	10238 <mycore_strncasecmp@plt>
   2563c:	cmp	r0, #0
   25640:	beq	25654 <myhtml_tag_static_search@@Base+0xbc>
   25644:	ldr	r3, [r4, #4]
   25648:	cmp	r3, #0
   2564c:	bne	25600 <myhtml_tag_static_search@@Base+0x68>
   25650:	mov	r8, #0
   25654:	mov	r0, r8
   25658:	ldrd	r4, [sp]
   2565c:	ldrd	r6, [sp, #8]
   25660:	ldr	r8, [sp, #16]
   25664:	add	sp, sp, #20
   25668:	pop	{pc}		; (ldr pc, [sp], #4)
   2566c:			; <UNDEFINED> instruction: 0x000d93bc
   25670:	andeq	lr, lr, r8, asr pc

00025674 <myhtml_tag_static_get_by_id@@Base>:
   25674:	ldr	r3, [pc, #12]	; 25688 <myhtml_tag_static_get_by_id@@Base+0x14>
   25678:	mov	r2, #44	; 0x2c
   2567c:	add	r3, pc, r3
   25680:	mla	r0, r2, r0, r3
   25684:	bx	lr
   25688:	andeq	r0, pc, r4, lsl r8	; <UNPREDICTABLE>

0002568c <myhtml_token_create@@Base>:
   2568c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   25690:	subs	r5, r1, #0
   25694:	strd	r6, [sp, #8]
   25698:	mov	r7, r0
   2569c:	mov	r0, #24
   256a0:	moveq	r5, #4096	; 0x1000
   256a4:	str	r8, [sp, #16]
   256a8:	str	lr, [sp, #20]
   256ac:	bl	10c28 <mycore_malloc@plt>
   256b0:	subs	r4, r0, #0
   256b4:	beq	2572c <myhtml_token_create@@Base+0xa0>
   256b8:	bl	fcf8 <mcobject_async_create@plt>
   256bc:	cmp	r0, #0
   256c0:	mov	r3, r0
   256c4:	str	r0, [r4, #4]
   256c8:	beq	25744 <myhtml_token_create@@Base+0xb8>
   256cc:	bl	fcf8 <mcobject_async_create@plt>
   256d0:	cmp	r0, #0
   256d4:	mov	r6, r0
   256d8:	str	r0, [r4, #8]
   256dc:	beq	25754 <myhtml_token_create@@Base+0xc8>
   256e0:	mov	r3, #52	; 0x34
   256e4:	mov	r2, r5
   256e8:	ldr	r0, [r4, #4]
   256ec:	mov	r1, #128	; 0x80
   256f0:	bl	fc20 <mcobject_async_init@plt>
   256f4:	mov	r2, r5
   256f8:	mov	r3, #68	; 0x44
   256fc:	ldr	r0, [r4, #8]
   25700:	mov	r1, #128	; 0x80
   25704:	bl	fc20 <mcobject_async_init@plt>
   25708:	mov	r1, #0
   2570c:	ldr	r0, [r4, #4]
   25710:	bl	10a24 <mcobject_async_node_add@plt>
   25714:	mov	r1, #0
   25718:	str	r0, [r4, #12]
   2571c:	ldr	r0, [r4, #8]
   25720:	bl	10a24 <mcobject_async_node_add@plt>
   25724:	str	r7, [r4]
   25728:	str	r0, [r4, #16]
   2572c:	mov	r0, r4
   25730:	ldrd	r4, [sp]
   25734:	ldrd	r6, [sp, #8]
   25738:	ldr	r8, [sp, #16]
   2573c:	add	sp, sp, #20
   25740:	pop	{pc}		; (ldr pc, [sp], #4)
   25744:	mov	r0, r4
   25748:	mov	r4, r3
   2574c:	bl	10d60 <mycore_free@plt>
   25750:	b	2572c <myhtml_token_create@@Base+0xa0>
   25754:	ldr	r0, [r4, #4]
   25758:	bl	10d60 <mycore_free@plt>
   2575c:	mov	r0, r4
   25760:	mov	r4, r6
   25764:	bl	10d60 <mycore_free@plt>
   25768:	b	2572c <myhtml_token_create@@Base+0xa0>

0002576c <myhtml_token_clean@@Base>:
   2576c:	str	r4, [sp, #-8]!
   25770:	mov	r4, r0
   25774:	ldr	r0, [r0, #4]
   25778:	ldr	r1, [r4, #12]
   2577c:	str	lr, [sp, #4]
   25780:	bl	10814 <mcobject_async_node_clean@plt>
   25784:	ldr	lr, [sp, #4]
   25788:	ldr	r0, [r4, #8]
   2578c:	ldr	r1, [r4, #16]
   25790:	ldr	r4, [sp]
   25794:	add	sp, sp, #8
   25798:	b	10814 <mcobject_async_node_clean@plt>

0002579c <myhtml_token_clean_all@@Base>:
   2579c:	str	r4, [sp, #-8]!
   257a0:	mov	r4, r0
   257a4:	ldr	r0, [r0, #4]
   257a8:	str	lr, [sp, #4]
   257ac:	bl	10fe8 <mcobject_async_clean@plt>
   257b0:	ldr	lr, [sp, #4]
   257b4:	ldr	r0, [r4, #8]
   257b8:	ldr	r4, [sp]
   257bc:	add	sp, sp, #8
   257c0:	b	10fe8 <mcobject_async_clean@plt>

000257c4 <myhtml_token_destroy@@Base>:
   257c4:	str	r4, [sp, #-8]!
   257c8:	subs	r4, r0, #0
   257cc:	str	lr, [sp, #4]
   257d0:	beq	2580c <myhtml_token_destroy@@Base+0x48>
   257d4:	ldr	r0, [r4, #4]
   257d8:	cmp	r0, #0
   257dc:	beq	257ec <myhtml_token_destroy@@Base+0x28>
   257e0:	mov	r1, #1
   257e4:	bl	10ab4 <mcobject_async_destroy@plt>
   257e8:	str	r0, [r4, #4]
   257ec:	ldr	r0, [r4, #8]
   257f0:	cmp	r0, #0
   257f4:	beq	25804 <myhtml_token_destroy@@Base+0x40>
   257f8:	mov	r1, #1
   257fc:	bl	10ab4 <mcobject_async_destroy@plt>
   25800:	str	r0, [r4, #8]
   25804:	mov	r0, r4
   25808:	bl	10d60 <mycore_free@plt>
   2580c:	ldr	r4, [sp]
   25810:	add	sp, sp, #4
   25814:	mov	r0, #0
   25818:	pop	{pc}		; (ldr pc, [sp], #4)

0002581c <myhtml_token_node_clean@@Base>:
   2581c:	mov	r2, #48	; 0x30
   25820:	mov	r1, #0
   25824:	str	r4, [sp, #-8]!
   25828:	str	lr, [sp, #4]
   2582c:	bl	10844 <memset@plt>
   25830:	mov	r3, r0
   25834:	mov	r2, #8
   25838:	ldr	r4, [sp]
   2583c:	add	r0, r0, #4
   25840:	ldr	lr, [sp, #4]
   25844:	add	sp, sp, #8
   25848:	str	r2, [r3, #48]	; 0x30
   2584c:	b	11024 <mycore_string_clean_all@plt>

00025850 <myhtml_token_node_create@@Base>:
   25850:	mov	r2, #0
   25854:	str	r4, [sp, #-8]!
   25858:	ldr	r0, [r0, #4]
   2585c:	str	lr, [sp, #4]
   25860:	bl	10b50 <mcobject_async_malloc@plt>
   25864:	subs	r4, r0, #0
   25868:	beq	25870 <myhtml_token_node_create@@Base+0x20>
   2586c:	bl	10f10 <myhtml_token_node_clean@plt>
   25870:	mov	r0, r4
   25874:	ldr	r4, [sp]
   25878:	add	sp, sp, #4
   2587c:	pop	{pc}		; (ldr pc, [sp], #4)

00025880 <myhtml_token_attr_clean@@Base>:
   25880:	mov	r2, #64	; 0x40
   25884:	mov	r1, #0
   25888:	str	r4, [sp, #-8]!
   2588c:	mov	r4, r0
   25890:	str	lr, [sp, #4]
   25894:	bl	10844 <memset@plt>
   25898:	mov	r3, #1
   2589c:	add	r0, r4, #8
   258a0:	str	r3, [r4, #64]	; 0x40
   258a4:	bl	11024 <mycore_string_clean_all@plt>
   258a8:	add	r0, r4, #28
   258ac:	ldr	r4, [sp]
   258b0:	ldr	lr, [sp, #4]
   258b4:	add	sp, sp, #8
   258b8:	b	11024 <mycore_string_clean_all@plt>

000258bc <myhtml_token_attr_create@@Base>:
   258bc:	mov	r2, #0
   258c0:	str	r4, [sp, #-8]!
   258c4:	ldr	r0, [r0, #8]
   258c8:	str	lr, [sp, #4]
   258cc:	bl	10b50 <mcobject_async_malloc@plt>
   258d0:	subs	r4, r0, #0
   258d4:	beq	258dc <myhtml_token_attr_create@@Base+0x20>
   258d8:	bl	ffa4 <myhtml_token_attr_clean@plt>
   258dc:	mov	r0, r4
   258e0:	ldr	r4, [sp]
   258e4:	add	sp, sp, #4
   258e8:	pop	{pc}		; (ldr pc, [sp], #4)

000258ec <myhtml_token_node_tag_id@@Base>:
   258ec:	ldr	r0, [r0]
   258f0:	bx	lr

000258f4 <myhtml_token_node_raw_position@@Base>:
   258f4:	cmp	r1, #0
   258f8:	ldrne	r2, [r1, #24]
   258fc:	moveq	r2, r1
   25900:	ldrne	r1, [r1, #28]
   25904:	str	r2, [r0]
   25908:	str	r1, [r0, #4]
   2590c:	bx	lr

00025910 <myhtml_token_node_element_position@@Base>:
   25910:	cmp	r1, #0
   25914:	ldrne	r2, [r1, #32]
   25918:	moveq	r2, r1
   2591c:	ldrne	r1, [r1, #36]	; 0x24
   25920:	str	r2, [r0]
   25924:	str	r1, [r0, #4]
   25928:	bx	lr

0002592c <myhtml_token_node_attribute_first@@Base>:
   2592c:	ldr	r0, [r0, #40]	; 0x28
   25930:	bx	lr

00025934 <myhtml_token_node_attribute_last@@Base>:
   25934:	ldr	r0, [r0, #44]	; 0x2c
   25938:	bx	lr

0002593c <myhtml_token_node_text@@Base>:
   2593c:	cmp	r1, #0
   25940:	ldrne	r3, [r0, #12]
   25944:	ldr	r0, [r0, #4]
   25948:	strne	r3, [r1]
   2594c:	bx	lr

00025950 <myhtml_token_node_string@@Base>:
   25950:	add	r0, r0, #4
   25954:	bx	lr

00025958 <myhtml_token_node_is_close@@Base>:
   25958:	ldr	r0, [r0, #48]	; 0x30
   2595c:	and	r0, r0, #1
   25960:	bx	lr

00025964 <myhtml_token_node_is_close_self@@Base>:
   25964:	ldr	r0, [r0, #48]	; 0x30
   25968:	ubfx	r0, r0, #1, #1
   2596c:	bx	lr

00025970 <myhtml_token_node_wait_for_done@@Base>:
   25970:	ldr	r3, [r1, #48]	; 0x30
   25974:	tst	r3, #4
   25978:	bxne	lr
   2597c:	strd	r4, [sp, #-16]!
   25980:	mov	r4, r1
   25984:	mov	r5, r0
   25988:	str	r6, [sp, #8]
   2598c:	str	lr, [sp, #12]
   25990:	ldr	r3, [r5]
   25994:	ldr	r3, [r3]
   25998:	ldr	r3, [r3]
   2599c:	ldr	r0, [r3, #24]
   259a0:	bl	10040 <mythread_nanosleep_sleep@plt>
   259a4:	ldr	r3, [r4, #48]	; 0x30
   259a8:	tst	r3, #4
   259ac:	beq	25990 <myhtml_token_node_wait_for_done@@Base+0x20>
   259b0:	ldrd	r4, [sp]
   259b4:	ldr	r6, [sp, #8]
   259b8:	add	sp, sp, #12
   259bc:	pop	{pc}		; (ldr pc, [sp], #4)

000259c0 <myhtml_token_set_done@@Base>:
   259c0:	ldr	r3, [r0, #48]	; 0x30
   259c4:	orr	r3, r3, #4
   259c8:	str	r3, [r0, #48]	; 0x30
   259cc:	bx	lr

000259d0 <myhtml_token_node_text_append@@Base>:
   259d0:	ldr	ip, [r0]
   259d4:	strd	r4, [sp, #-16]!
   259d8:	add	r4, r1, #4
   259dc:	mov	r5, r3
   259e0:	add	r3, r3, #2
   259e4:	ldr	r0, [ip, #4]
   259e8:	ldr	r1, [ip, #52]	; 0x34
   259ec:	str	r6, [sp, #8]
   259f0:	mov	r6, r2
   259f4:	mov	r2, r4
   259f8:	str	lr, [sp, #12]
   259fc:	bl	105a4 <mycore_string_init@plt>
   25a00:	mov	r2, r5
   25a04:	mov	r1, r6
   25a08:	ldr	r6, [sp, #8]
   25a0c:	mov	r0, r4
   25a10:	ldrd	r4, [sp]
   25a14:	ldr	lr, [sp, #12]
   25a18:	add	sp, sp, #16
   25a1c:	b	10868 <mycore_string_append@plt>

00025a20 <myhtml_token_node_attr_append@@Base>:
   25a20:	strd	r4, [sp, #-32]!	; 0xffffffe0
   25a24:	mov	r5, r1
   25a28:	strd	r6, [sp, #8]
   25a2c:	mov	r7, r0
   25a30:	ldr	r0, [r0, #8]
   25a34:	str	sl, [sp, #24]
   25a38:	mov	sl, r2
   25a3c:	mov	r2, #0
   25a40:	strd	r8, [sp, #16]
   25a44:	mov	r8, r3
   25a48:	ldr	r1, [sp, #40]	; 0x28
   25a4c:	str	lr, [sp, #28]
   25a50:	ldr	r6, [sp, #36]	; 0x24
   25a54:	bl	10b50 <mcobject_async_malloc@plt>
   25a58:	mov	r3, #0
   25a5c:	mov	r4, r0
   25a60:	cmp	r8, r3
   25a64:	str	r3, [r0]
   25a68:	beq	25b24 <myhtml_token_node_attr_append@@Base+0x104>
   25a6c:	ldr	r1, [r7]
   25a70:	add	r9, r0, #8
   25a74:	add	r3, r8, #1
   25a78:	mov	r2, r9
   25a7c:	ldr	r0, [r1, #4]
   25a80:	ldr	r1, [r1, #52]	; 0x34
   25a84:	bl	105a4 <mycore_string_init@plt>
   25a88:	mov	r2, r8
   25a8c:	mov	r1, sl
   25a90:	mov	r0, r9
   25a94:	bl	1061c <mycore_string_append_lowercase@plt>
   25a98:	cmp	r6, #0
   25a9c:	add	r8, r4, #28
   25aa0:	beq	25b18 <myhtml_token_node_attr_append@@Base+0xf8>
   25aa4:	ldr	r1, [r7]
   25aa8:	mov	r2, r8
   25aac:	add	r3, r6, #1
   25ab0:	ldr	r0, [r1, #4]
   25ab4:	ldr	r1, [r1, #52]	; 0x34
   25ab8:	bl	105a4 <mycore_string_init@plt>
   25abc:	mov	r2, r6
   25ac0:	mov	r0, r8
   25ac4:	ldr	r1, [sp, #32]
   25ac8:	bl	10868 <mycore_string_append@plt>
   25acc:	ldr	r3, [r5, #40]	; 0x28
   25ad0:	cmp	r3, #0
   25ad4:	streq	r3, [r4, #4]
   25ad8:	streq	r4, [r5, #40]	; 0x28
   25adc:	streq	r4, [r5, #44]	; 0x2c
   25ae0:	beq	25af4 <myhtml_token_node_attr_append@@Base+0xd4>
   25ae4:	ldr	r3, [r5, #44]	; 0x2c
   25ae8:	str	r4, [r3]
   25aec:	str	r3, [r4, #4]
   25af0:	str	r4, [r5, #44]	; 0x2c
   25af4:	mov	r3, #1
   25af8:	mov	r0, r4
   25afc:	ldrd	r6, [sp, #8]
   25b00:	ldrd	r8, [sp, #16]
   25b04:	ldr	sl, [sp, #24]
   25b08:	str	r3, [r4, #64]	; 0x40
   25b0c:	ldrd	r4, [sp]
   25b10:	add	sp, sp, #28
   25b14:	pop	{pc}		; (ldr pc, [sp], #4)
   25b18:	mov	r0, r8
   25b1c:	bl	11024 <mycore_string_clean_all@plt>
   25b20:	b	25acc <myhtml_token_node_attr_append@@Base+0xac>
   25b24:	add	r0, r0, #8
   25b28:	bl	11024 <mycore_string_clean_all@plt>
   25b2c:	b	25a98 <myhtml_token_node_attr_append@@Base+0x78>

00025b30 <myhtml_token_node_attr_append_with_convert_encoding@@Base>:
   25b30:	strd	r4, [sp, #-36]!	; 0xffffffdc
   25b34:	mov	r5, r1
   25b38:	strd	r6, [sp, #8]
   25b3c:	mov	r7, r0
   25b40:	strd	r8, [sp, #16]
   25b44:	mov	r8, r3
   25b48:	strd	sl, [sp, #24]
   25b4c:	mov	sl, r2
   25b50:	mov	r2, #0
   25b54:	str	lr, [sp, #32]
   25b58:	sub	sp, sp, #4
   25b5c:	ldr	r0, [r0, #8]
   25b60:	ldr	r6, [sp, #44]	; 0x2c
   25b64:	ldr	r1, [sp, #48]	; 0x30
   25b68:	bl	10b50 <mcobject_async_malloc@plt>
   25b6c:	mov	r3, #0
   25b70:	mov	r4, r0
   25b74:	cmp	r8, r3
   25b78:	str	r3, [r0]
   25b7c:	beq	25bf0 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0xc0>
   25b80:	ldr	r1, [r7]
   25b84:	add	fp, r0, #8
   25b88:	add	r3, r8, #1
   25b8c:	mov	r2, fp
   25b90:	add	r9, r0, #28
   25b94:	ldr	r0, [r1, #4]
   25b98:	ldr	r1, [r1, #52]	; 0x34
   25b9c:	bl	105a4 <mycore_string_init@plt>
   25ba0:	ldr	r3, [sp, #52]	; 0x34
   25ba4:	mov	r2, r8
   25ba8:	mov	r1, sl
   25bac:	mov	r0, fp
   25bb0:	cmp	r3, #0
   25bb4:	bne	25c98 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0x168>
   25bb8:	bl	1061c <mycore_string_append_lowercase@plt>
   25bbc:	cmp	r6, #0
   25bc0:	beq	25c04 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0xd4>
   25bc4:	ldr	r1, [r7]
   25bc8:	add	r3, r6, #1
   25bcc:	mov	r2, r9
   25bd0:	ldr	r0, [r1, #4]
   25bd4:	ldr	r1, [r1, #52]	; 0x34
   25bd8:	bl	105a4 <mycore_string_init@plt>
   25bdc:	mov	r2, r6
   25be0:	mov	r0, r9
   25be4:	ldr	r1, [sp, #40]	; 0x28
   25be8:	bl	10868 <mycore_string_append@plt>
   25bec:	b	25c0c <myhtml_token_node_attr_append_with_convert_encoding@@Base+0xdc>
   25bf0:	add	r0, r0, #8
   25bf4:	add	r9, r4, #28
   25bf8:	bl	11024 <mycore_string_clean_all@plt>
   25bfc:	cmp	r6, #0
   25c00:	bne	25c5c <myhtml_token_node_attr_append_with_convert_encoding@@Base+0x12c>
   25c04:	mov	r0, r9
   25c08:	bl	11024 <mycore_string_clean_all@plt>
   25c0c:	ldr	r3, [r5, #40]	; 0x28
   25c10:	cmp	r3, #0
   25c14:	streq	r3, [r4, #4]
   25c18:	streq	r4, [r5, #40]	; 0x28
   25c1c:	streq	r4, [r5, #44]	; 0x2c
   25c20:	beq	25c34 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0x104>
   25c24:	ldr	r3, [r5, #44]	; 0x2c
   25c28:	str	r4, [r3]
   25c2c:	str	r3, [r4, #4]
   25c30:	str	r4, [r5, #44]	; 0x2c
   25c34:	mov	r3, #1
   25c38:	mov	r0, r4
   25c3c:	str	r3, [r4, #64]	; 0x40
   25c40:	add	sp, sp, #4
   25c44:	ldrd	r4, [sp]
   25c48:	ldrd	r6, [sp, #8]
   25c4c:	ldrd	r8, [sp, #16]
   25c50:	ldrd	sl, [sp, #24]
   25c54:	add	sp, sp, #32
   25c58:	pop	{pc}		; (ldr pc, [sp], #4)
   25c5c:	ldr	r1, [r7]
   25c60:	add	r3, r6, #1
   25c64:	mov	r2, r9
   25c68:	ldr	r0, [r1, #4]
   25c6c:	ldr	r1, [r1, #52]	; 0x34
   25c70:	bl	105a4 <mycore_string_init@plt>
   25c74:	ldr	r3, [sp, #52]	; 0x34
   25c78:	cmp	r3, #0
   25c7c:	beq	25bdc <myhtml_token_node_attr_append_with_convert_encoding@@Base+0xac>
   25c80:	mov	r2, r6
   25c84:	mov	r0, r9
   25c88:	ldr	r1, [sp, #40]	; 0x28
   25c8c:	ldr	r3, [sp, #52]	; 0x34
   25c90:	bl	103f4 <myencoding_string_append@plt>
   25c94:	b	25c0c <myhtml_token_node_attr_append_with_convert_encoding@@Base+0xdc>
   25c98:	bl	fddc <myencoding_string_append_lowercase_ascii@plt>
   25c9c:	cmp	r6, #0
   25ca0:	beq	25c04 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0xd4>
   25ca4:	ldr	r1, [r7]
   25ca8:	add	r3, r6, #1
   25cac:	mov	r2, r9
   25cb0:	ldr	r0, [r1, #4]
   25cb4:	ldr	r1, [r1, #52]	; 0x34
   25cb8:	bl	105a4 <mycore_string_init@plt>
   25cbc:	b	25c80 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0x150>

00025cc0 <myhtml_token_attr_copy@@Base>:
   25cc0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   25cc4:	mov	r5, r1
   25cc8:	mov	r1, r3
   25ccc:	strd	r6, [sp, #8]
   25cd0:	mov	r7, r0
   25cd4:	mov	r6, r2
   25cd8:	mov	r2, #0
   25cdc:	ldr	r0, [r0, #8]
   25ce0:	str	r8, [sp, #16]
   25ce4:	str	lr, [sp, #20]
   25ce8:	bl	10b50 <mcobject_async_malloc@plt>
   25cec:	ldr	r3, [r5, #16]
   25cf0:	mov	r2, #0
   25cf4:	mov	r4, r0
   25cf8:	str	r2, [r0]
   25cfc:	cmp	r3, r2
   25d00:	beq	25dbc <myhtml_token_attr_copy@@Base+0xfc>
   25d04:	ldr	r1, [r7]
   25d08:	add	r8, r0, #8
   25d0c:	add	r3, r3, #1
   25d10:	mov	r2, r8
   25d14:	ldr	r0, [r1, #4]
   25d18:	ldr	r1, [r1, #52]	; 0x34
   25d1c:	bl	105a4 <mycore_string_init@plt>
   25d20:	mov	r0, r8
   25d24:	ldr	r1, [r5, #8]
   25d28:	ldr	r2, [r5, #16]
   25d2c:	bl	1061c <mycore_string_append_lowercase@plt>
   25d30:	ldr	r3, [r5, #36]	; 0x24
   25d34:	add	r8, r4, #28
   25d38:	cmp	r3, #0
   25d3c:	beq	25db0 <myhtml_token_attr_copy@@Base+0xf0>
   25d40:	ldr	r1, [r7]
   25d44:	mov	r2, r8
   25d48:	add	r3, r3, #1
   25d4c:	ldr	r0, [r1, #4]
   25d50:	ldr	r1, [r1, #52]	; 0x34
   25d54:	bl	105a4 <mycore_string_init@plt>
   25d58:	mov	r0, r8
   25d5c:	ldr	r1, [r5, #28]
   25d60:	ldr	r2, [r5, #36]	; 0x24
   25d64:	bl	10868 <mycore_string_append@plt>
   25d68:	ldr	r3, [r6, #40]	; 0x28
   25d6c:	cmp	r3, #0
   25d70:	streq	r3, [r4, #4]
   25d74:	streq	r4, [r6, #40]	; 0x28
   25d78:	streq	r4, [r6, #44]	; 0x2c
   25d7c:	beq	25d90 <myhtml_token_attr_copy@@Base+0xd0>
   25d80:	ldr	r3, [r6, #44]	; 0x2c
   25d84:	str	r4, [r3]
   25d88:	str	r3, [r4, #4]
   25d8c:	str	r4, [r6, #44]	; 0x2c
   25d90:	ldr	r3, [r5, #64]	; 0x40
   25d94:	mov	r0, #1
   25d98:	ldrd	r6, [sp, #8]
   25d9c:	ldr	r8, [sp, #16]
   25da0:	str	r3, [r4, #64]	; 0x40
   25da4:	ldrd	r4, [sp]
   25da8:	add	sp, sp, #20
   25dac:	pop	{pc}		; (ldr pc, [sp], #4)
   25db0:	mov	r0, r8
   25db4:	bl	11024 <mycore_string_clean_all@plt>
   25db8:	b	25d68 <myhtml_token_attr_copy@@Base+0xa8>
   25dbc:	add	r0, r0, #8
   25dc0:	bl	11024 <mycore_string_clean_all@plt>
   25dc4:	b	25d30 <myhtml_token_attr_copy@@Base+0x70>

00025dc8 <myhtml_token_node_attr_copy@@Base>:
   25dc8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   25dcc:	ldr	r4, [r1, #40]	; 0x28
   25dd0:	strd	r6, [sp, #8]
   25dd4:	str	r8, [sp, #16]
   25dd8:	str	lr, [sp, #20]
   25ddc:	cmp	r4, #0
   25de0:	beq	25e10 <myhtml_token_node_attr_copy@@Base+0x48>
   25de4:	mov	r7, r0
   25de8:	mov	r6, r2
   25dec:	mov	r5, r3
   25df0:	mov	r1, r4
   25df4:	mov	r3, r5
   25df8:	mov	r2, r6
   25dfc:	mov	r0, r7
   25e00:	bl	106f4 <myhtml_token_attr_copy@plt>
   25e04:	ldr	r4, [r4]
   25e08:	cmp	r4, #0
   25e0c:	bne	25df0 <myhtml_token_node_attr_copy@@Base+0x28>
   25e10:	ldrd	r4, [sp]
   25e14:	ldrd	r6, [sp, #8]
   25e18:	ldr	r8, [sp, #16]
   25e1c:	add	sp, sp, #20
   25e20:	pop	{pc}		; (ldr pc, [sp], #4)

00025e24 <myhtml_token_node_clone@@Base>:
   25e24:	strd	r4, [sp, #-32]!	; 0xffffffe0
   25e28:	subs	r5, r1, #0
   25e2c:	strd	r6, [sp, #8]
   25e30:	strd	r8, [sp, #16]
   25e34:	str	sl, [sp, #24]
   25e38:	str	lr, [sp, #28]
   25e3c:	beq	25f08 <myhtml_token_node_clone@@Base+0xe4>
   25e40:	mov	r1, r2
   25e44:	mov	r6, r0
   25e48:	ldr	r9, [r0]
   25e4c:	mov	r7, r3
   25e50:	bl	109a0 <myhtml_token_node_create@plt>
   25e54:	subs	r4, r0, #0
   25e58:	beq	25f08 <myhtml_token_node_clone@@Base+0xe4>
   25e5c:	ldr	r0, [r5]
   25e60:	mov	r2, #0
   25e64:	add	r8, r4, #4
   25e68:	ldr	r3, [r5, #12]
   25e6c:	ldr	ip, [r5, #24]
   25e70:	ldr	r1, [r5, #28]
   25e74:	str	r0, [r4]
   25e78:	cmp	r3, r2
   25e7c:	ldr	r0, [r5, #48]	; 0x30
   25e80:	str	ip, [r4, #24]
   25e84:	ldr	ip, [r5, #32]
   25e88:	str	r1, [r4, #28]
   25e8c:	ldr	r1, [r5, #36]	; 0x24
   25e90:	str	ip, [r4, #32]
   25e94:	str	r2, [r4, #40]	; 0x28
   25e98:	str	r1, [r4, #36]	; 0x24
   25e9c:	str	r2, [r4, #44]	; 0x2c
   25ea0:	str	r0, [r4, #48]	; 0x30
   25ea4:	bne	25ee0 <myhtml_token_node_clone@@Base+0xbc>
   25ea8:	mov	r0, r8
   25eac:	bl	11024 <mycore_string_clean_all@plt>
   25eb0:	mov	r3, r7
   25eb4:	mov	r1, r5
   25eb8:	mov	r0, r6
   25ebc:	mov	r2, r4
   25ec0:	bl	10514 <myhtml_token_node_attr_copy@plt>
   25ec4:	mov	r0, r4
   25ec8:	ldrd	r4, [sp]
   25ecc:	ldrd	r6, [sp, #8]
   25ed0:	ldrd	r8, [sp, #16]
   25ed4:	ldr	sl, [sp, #24]
   25ed8:	add	sp, sp, #28
   25edc:	pop	{pc}		; (ldr pc, [sp], #4)
   25ee0:	mov	r2, r8
   25ee4:	add	r3, r3, #1
   25ee8:	ldr	r0, [r9, #4]
   25eec:	ldr	r1, [r9, #52]	; 0x34
   25ef0:	bl	105a4 <mycore_string_init@plt>
   25ef4:	mov	r0, r8
   25ef8:	ldr	r1, [r5, #4]
   25efc:	ldr	r2, [r5, #12]
   25f00:	bl	10868 <mycore_string_append@plt>
   25f04:	b	25eb0 <myhtml_token_node_clone@@Base+0x8c>
   25f08:	mov	r4, #0
   25f0c:	b	25ec4 <myhtml_token_node_clone@@Base+0xa0>

00025f10 <myhtml_token_attr_match@@Base>:
   25f10:	strd	r4, [sp, #-24]!	; 0xffffffe8
   25f14:	ldr	r4, [r1, #40]	; 0x28
   25f18:	strd	r6, [sp, #8]
   25f1c:	str	r8, [sp, #16]
   25f20:	str	lr, [sp, #20]
   25f24:	ldr	r6, [sp, #28]
   25f28:	cmp	r4, #0
   25f2c:	beq	25f88 <myhtml_token_attr_match@@Base+0x78>
   25f30:	mov	r7, r2
   25f34:	mov	r5, r3
   25f38:	b	25f48 <myhtml_token_attr_match@@Base+0x38>
   25f3c:	ldr	r4, [r4]
   25f40:	cmp	r4, #0
   25f44:	beq	25f88 <myhtml_token_attr_match@@Base+0x78>
   25f48:	ldr	r1, [r4, #16]
   25f4c:	cmp	r1, r5
   25f50:	bne	25f3c <myhtml_token_attr_match@@Base+0x2c>
   25f54:	ldr	r3, [r4, #36]	; 0x24
   25f58:	cmp	r3, r6
   25f5c:	bne	25f3c <myhtml_token_attr_match@@Base+0x2c>
   25f60:	mov	r1, r7
   25f64:	ldr	r0, [r4, #8]
   25f68:	bl	fb9c <mycore_strcmp@plt>
   25f6c:	cmp	r0, #0
   25f70:	bne	25f3c <myhtml_token_attr_match@@Base+0x2c>
   25f74:	ldr	r1, [sp, #24]
   25f78:	ldr	r0, [r4, #28]
   25f7c:	bl	fb9c <mycore_strcmp@plt>
   25f80:	cmp	r0, #0
   25f84:	beq	25f8c <myhtml_token_attr_match@@Base+0x7c>
   25f88:	mov	r4, #0
   25f8c:	mov	r0, r4
   25f90:	ldrd	r4, [sp]
   25f94:	ldrd	r6, [sp, #8]
   25f98:	ldr	r8, [sp, #16]
   25f9c:	add	sp, sp, #20
   25fa0:	pop	{pc}		; (ldr pc, [sp], #4)

00025fa4 <myhtml_token_attr_match_case@@Base>:
   25fa4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   25fa8:	ldr	r4, [r1, #40]	; 0x28
   25fac:	strd	r6, [sp, #8]
   25fb0:	str	r8, [sp, #16]
   25fb4:	str	lr, [sp, #20]
   25fb8:	ldr	r6, [sp, #28]
   25fbc:	cmp	r4, #0
   25fc0:	beq	2601c <myhtml_token_attr_match_case@@Base+0x78>
   25fc4:	mov	r7, r2
   25fc8:	mov	r5, r3
   25fcc:	b	25fdc <myhtml_token_attr_match_case@@Base+0x38>
   25fd0:	ldr	r4, [r4]
   25fd4:	cmp	r4, #0
   25fd8:	beq	2601c <myhtml_token_attr_match_case@@Base+0x78>
   25fdc:	ldr	r1, [r4, #16]
   25fe0:	cmp	r1, r5
   25fe4:	bne	25fd0 <myhtml_token_attr_match_case@@Base+0x2c>
   25fe8:	ldr	r3, [r4, #36]	; 0x24
   25fec:	cmp	r3, r6
   25ff0:	bne	25fd0 <myhtml_token_attr_match_case@@Base+0x2c>
   25ff4:	mov	r1, r7
   25ff8:	ldr	r0, [r4, #8]
   25ffc:	bl	fb9c <mycore_strcmp@plt>
   26000:	cmp	r0, #0
   26004:	bne	25fd0 <myhtml_token_attr_match_case@@Base+0x2c>
   26008:	ldr	r1, [sp, #24]
   2600c:	ldr	r0, [r4, #28]
   26010:	bl	104c0 <mycore_strcasecmp@plt>
   26014:	cmp	r0, #0
   26018:	beq	26020 <myhtml_token_attr_match_case@@Base+0x7c>
   2601c:	mov	r4, #0
   26020:	mov	r0, r4
   26024:	ldrd	r4, [sp]
   26028:	ldrd	r6, [sp, #8]
   2602c:	ldr	r8, [sp, #16]
   26030:	add	sp, sp, #20
   26034:	pop	{pc}		; (ldr pc, [sp], #4)

00026038 <_myhtml_token_create_copy_srt@@Base>:
   26038:	ldr	ip, [r0]
   2603c:	strd	r4, [sp, #-16]!
   26040:	mov	r4, r2
   26044:	mov	r5, r3
   26048:	add	r2, r2, #2
   2604c:	ldr	r0, [ip, #4]
   26050:	str	r6, [sp, #8]
   26054:	mov	r6, r1
   26058:	ldr	r1, [ip, #52]	; 0x34
   2605c:	str	lr, [sp, #12]
   26060:	bl	108a4 <mchar_async_malloc@plt>
   26064:	mov	r2, r4
   26068:	mov	r1, r6
   2606c:	ldr	r6, [sp, #8]
   26070:	ldr	lr, [sp, #12]
   26074:	str	r0, [r5]
   26078:	ldrd	r4, [sp]
   2607c:	add	sp, sp, #16
   26080:	b	10274 <mycore_string_raw_copy@plt>

00026084 <myhtml_token_strict_doctype_by_token@@Base>:
   26084:	strd	r4, [sp, #-24]!	; 0xffffffe8
   26088:	add	r3, r2, #4
   2608c:	mov	r4, r2
   26090:	ldr	r5, [r1, #40]	; 0x28
   26094:	strd	r6, [sp, #8]
   26098:	mov	r6, r0
   2609c:	str	r8, [sp, #16]
   260a0:	str	lr, [sp, #20]
   260a4:	cmp	r5, #0
   260a8:	beq	260b8 <myhtml_token_strict_doctype_by_token@@Base+0x34>
   260ac:	ldr	r2, [r5, #16]
   260b0:	cmp	r2, #0
   260b4:	bne	26118 <myhtml_token_strict_doctype_by_token@@Base+0x94>
   260b8:	ldr	r1, [pc, #412]	; 2625c <myhtml_token_strict_doctype_by_token@@Base+0x1d8>
   260bc:	mov	ip, #0
   260c0:	mov	r0, r6
   260c4:	mov	r2, #1
   260c8:	strb	ip, [r4]
   260cc:	add	r1, pc, r1
   260d0:	bl	fe0c <_myhtml_token_create_copy_srt@plt>
   260d4:	ldr	r0, [r4, #8]
   260d8:	cmp	r0, #0
   260dc:	beq	260e4 <myhtml_token_strict_doctype_by_token@@Base+0x60>
   260e0:	bl	10d60 <mycore_free@plt>
   260e4:	ldr	r0, [r4, #12]
   260e8:	mov	r3, #0
   260ec:	str	r3, [r4, #8]
   260f0:	cmp	r0, r3
   260f4:	beq	260fc <myhtml_token_strict_doctype_by_token@@Base+0x78>
   260f8:	bl	10d60 <mycore_free@plt>
   260fc:	mov	r3, #0
   26100:	str	r3, [r4, #12]
   26104:	ldrd	r4, [sp]
   26108:	ldrd	r6, [sp, #8]
   2610c:	ldr	r8, [sp, #16]
   26110:	add	sp, sp, #20
   26114:	pop	{pc}		; (ldr pc, [sp], #4)
   26118:	ldr	r1, [r5, #8]
   2611c:	bl	fe0c <_myhtml_token_create_copy_srt@plt>
   26120:	ldr	r0, [pc, #312]	; 26260 <myhtml_token_strict_doctype_by_token@@Base+0x1dc>
   26124:	ldr	r1, [r4, #4]
   26128:	add	r0, pc, r0
   2612c:	bl	fb9c <mycore_strcmp@plt>
   26130:	ldr	r5, [r5]
   26134:	clz	r0, r0
   26138:	lsr	r0, r0, #5
   2613c:	strb	r0, [r4]
   26140:	cmp	r5, #0
   26144:	beq	26104 <myhtml_token_strict_doctype_by_token@@Base+0x80>
   26148:	ldr	r3, [r5, #36]	; 0x24
   2614c:	cmp	r3, #0
   26150:	beq	26104 <myhtml_token_strict_doctype_by_token@@Base+0x80>
   26154:	ldr	r1, [pc, #264]	; 26264 <myhtml_token_strict_doctype_by_token@@Base+0x1e0>
   26158:	ldr	r0, [r5, #28]
   2615c:	add	r1, pc, r1
   26160:	bl	104c0 <mycore_strcasecmp@plt>
   26164:	cmp	r0, #0
   26168:	bne	261ec <myhtml_token_strict_doctype_by_token@@Base+0x168>
   2616c:	ldr	r5, [r5]
   26170:	cmp	r5, #0
   26174:	beq	260d4 <myhtml_token_strict_doctype_by_token@@Base+0x50>
   26178:	ldr	r2, [r5, #36]	; 0x24
   2617c:	cmp	r2, #0
   26180:	beq	260d4 <myhtml_token_strict_doctype_by_token@@Base+0x50>
   26184:	add	r3, r4, #8
   26188:	mov	r0, r6
   2618c:	ldr	r1, [r5, #28]
   26190:	bl	fe0c <_myhtml_token_create_copy_srt@plt>
   26194:	ldr	r1, [r5]
   26198:	add	r7, r4, #12
   2619c:	cmp	r1, #0
   261a0:	beq	261b0 <myhtml_token_strict_doctype_by_token@@Base+0x12c>
   261a4:	ldr	r2, [r1, #36]	; 0x24
   261a8:	cmp	r2, #0
   261ac:	bne	2624c <myhtml_token_strict_doctype_by_token@@Base+0x1c8>
   261b0:	ldr	r0, [r4, #12]
   261b4:	cmp	r0, #0
   261b8:	beq	261c0 <myhtml_token_strict_doctype_by_token@@Base+0x13c>
   261bc:	bl	10d60 <mycore_free@plt>
   261c0:	ldr	r1, [pc, #160]	; 26268 <myhtml_token_strict_doctype_by_token@@Base+0x1e4>
   261c4:	mov	r3, r7
   261c8:	mov	r0, r6
   261cc:	mov	r2, #1
   261d0:	add	r1, pc, r1
   261d4:	ldrd	r4, [sp]
   261d8:	ldrd	r6, [sp, #8]
   261dc:	ldr	r8, [sp, #16]
   261e0:	ldr	lr, [sp, #20]
   261e4:	add	sp, sp, #24
   261e8:	b	fe0c <_myhtml_token_create_copy_srt@plt>
   261ec:	ldr	r1, [pc, #120]	; 2626c <myhtml_token_strict_doctype_by_token@@Base+0x1e8>
   261f0:	ldr	r0, [r5, #28]
   261f4:	ldr	r2, [r5, #36]	; 0x24
   261f8:	add	r1, pc, r1
   261fc:	bl	10238 <mycore_strncasecmp@plt>
   26200:	cmp	r0, #0
   26204:	bne	260d4 <myhtml_token_strict_doctype_by_token@@Base+0x50>
   26208:	ldr	r5, [r5]
   2620c:	cmp	r5, #0
   26210:	beq	260d4 <myhtml_token_strict_doctype_by_token@@Base+0x50>
   26214:	ldr	r3, [r5, #36]	; 0x24
   26218:	cmp	r3, #0
   2621c:	beq	260d4 <myhtml_token_strict_doctype_by_token@@Base+0x50>
   26220:	ldr	r1, [pc, #72]	; 26270 <myhtml_token_strict_doctype_by_token@@Base+0x1ec>
   26224:	add	r3, r4, #8
   26228:	mov	r2, #1
   2622c:	mov	r0, r6
   26230:	add	r1, pc, r1
   26234:	bl	fe0c <_myhtml_token_create_copy_srt@plt>
   26238:	add	r3, r4, #12
   2623c:	mov	r0, r6
   26240:	ldr	r1, [r5, #28]
   26244:	ldr	r2, [r5, #36]	; 0x24
   26248:	b	261d4 <myhtml_token_strict_doctype_by_token@@Base+0x150>
   2624c:	mov	r3, r7
   26250:	mov	r0, r6
   26254:	ldr	r1, [r1, #28]
   26258:	b	261d4 <myhtml_token_strict_doctype_by_token@@Base+0x150>
   2625c:	ldrdeq	r9, [sp], -r8
   26260:	andeq	r8, sp, ip, asr #11
   26264:	ldrdeq	r8, [sp], -ip
   26268:	ldrdeq	r9, [sp], -r4
   2626c:	andeq	r8, sp, r8, lsr r7
   26270:	andeq	r9, sp, r4, ror r0

00026274 <myhtml_token_doctype_check_html_4_0@@Base>:
   26274:	ldr	r1, [pc, #76]	; 262c8 <myhtml_token_doctype_check_html_4_0@@Base+0x54>
   26278:	str	r4, [sp, #-8]!
   2627c:	mov	r4, r0
   26280:	ldr	r0, [r0, #8]
   26284:	str	lr, [sp, #4]
   26288:	add	r1, pc, r1
   2628c:	bl	fb9c <mycore_strcmp@plt>
   26290:	cmp	r0, #0
   26294:	beq	262bc <myhtml_token_doctype_check_html_4_0@@Base+0x48>
   26298:	ldr	r0, [r4, #12]
   2629c:	cmp	r0, #0
   262a0:	moveq	r0, #1
   262a4:	beq	262bc <myhtml_token_doctype_check_html_4_0@@Base+0x48>
   262a8:	ldr	r1, [pc, #28]	; 262cc <myhtml_token_doctype_check_html_4_0@@Base+0x58>
   262ac:	add	r1, pc, r1
   262b0:	bl	fb9c <mycore_strcmp@plt>
   262b4:	adds	r0, r0, #0
   262b8:	movne	r0, #1
   262bc:	ldr	r4, [sp]
   262c0:	add	sp, sp, #4
   262c4:	pop	{pc}		; (ldr pc, [sp], #4)
   262c8:	andeq	r9, sp, r0, lsr #32
   262cc:	andeq	r9, sp, r8, lsl r0

000262d0 <myhtml_token_doctype_check_html_4_01@@Base>:
   262d0:	ldr	r1, [pc, #76]	; 26324 <myhtml_token_doctype_check_html_4_01@@Base+0x54>
   262d4:	str	r4, [sp, #-8]!
   262d8:	mov	r4, r0
   262dc:	ldr	r0, [r0, #8]
   262e0:	str	lr, [sp, #4]
   262e4:	add	r1, pc, r1
   262e8:	bl	fb9c <mycore_strcmp@plt>
   262ec:	cmp	r0, #0
   262f0:	beq	26318 <myhtml_token_doctype_check_html_4_01@@Base+0x48>
   262f4:	ldr	r0, [r4, #12]
   262f8:	cmp	r0, #0
   262fc:	moveq	r0, #1
   26300:	beq	26318 <myhtml_token_doctype_check_html_4_01@@Base+0x48>
   26304:	ldr	r1, [pc, #28]	; 26328 <myhtml_token_doctype_check_html_4_01@@Base+0x58>
   26308:	add	r1, pc, r1
   2630c:	bl	fb9c <mycore_strcmp@plt>
   26310:	adds	r0, r0, #0
   26314:	movne	r0, #1
   26318:	ldr	r4, [sp]
   2631c:	add	sp, sp, #4
   26320:	pop	{pc}		; (ldr pc, [sp], #4)
   26324:	andeq	r9, sp, ip
   26328:	andeq	r9, sp, r4

0002632c <myhtml_token_doctype_check_xhtml_1_0@@Base>:
   2632c:	ldr	r3, [r0, #12]
   26330:	cmp	r3, #0
   26334:	beq	2638c <myhtml_token_doctype_check_xhtml_1_0@@Base+0x60>
   26338:	ldr	r1, [pc, #84]	; 26394 <myhtml_token_doctype_check_xhtml_1_0@@Base+0x68>
   2633c:	str	r4, [sp, #-8]!
   26340:	mov	r4, r0
   26344:	ldr	r0, [r0, #8]
   26348:	str	lr, [sp, #4]
   2634c:	add	r1, pc, r1
   26350:	bl	fb9c <mycore_strcmp@plt>
   26354:	cmp	r0, #0
   26358:	bne	26368 <myhtml_token_doctype_check_xhtml_1_0@@Base+0x3c>
   2635c:	ldr	r4, [sp]
   26360:	add	sp, sp, #4
   26364:	pop	{pc}		; (ldr pc, [sp], #4)
   26368:	ldr	r1, [pc, #40]	; 26398 <myhtml_token_doctype_check_xhtml_1_0@@Base+0x6c>
   2636c:	ldr	r0, [r4, #12]
   26370:	add	r1, pc, r1
   26374:	bl	fb9c <mycore_strcmp@plt>
   26378:	adds	r0, r0, #0
   2637c:	ldr	r4, [sp]
   26380:	add	sp, sp, #4
   26384:	movne	r0, #1
   26388:	pop	{pc}		; (ldr pc, [sp], #4)
   2638c:	mov	r0, #1
   26390:	bx	lr
   26394:	andeq	r8, sp, r8, ror #31
   26398:	andeq	r8, sp, r8, ror #31

0002639c <myhtml_token_doctype_check_xhtml_1_1@@Base>:
   2639c:	ldr	r3, [r0, #12]
   263a0:	cmp	r3, #0
   263a4:	beq	263fc <myhtml_token_doctype_check_xhtml_1_1@@Base+0x60>
   263a8:	ldr	r1, [pc, #84]	; 26404 <myhtml_token_doctype_check_xhtml_1_1@@Base+0x68>
   263ac:	str	r4, [sp, #-8]!
   263b0:	mov	r4, r0
   263b4:	ldr	r0, [r0, #8]
   263b8:	str	lr, [sp, #4]
   263bc:	add	r1, pc, r1
   263c0:	bl	fb9c <mycore_strcmp@plt>
   263c4:	cmp	r0, #0
   263c8:	bne	263d8 <myhtml_token_doctype_check_xhtml_1_1@@Base+0x3c>
   263cc:	ldr	r4, [sp]
   263d0:	add	sp, sp, #4
   263d4:	pop	{pc}		; (ldr pc, [sp], #4)
   263d8:	ldr	r1, [pc, #40]	; 26408 <myhtml_token_doctype_check_xhtml_1_1@@Base+0x6c>
   263dc:	ldr	r0, [r4, #12]
   263e0:	add	r1, pc, r1
   263e4:	bl	fb9c <mycore_strcmp@plt>
   263e8:	adds	r0, r0, #0
   263ec:	ldr	r4, [sp]
   263f0:	add	sp, sp, #4
   263f4:	movne	r0, #1
   263f8:	pop	{pc}		; (ldr pc, [sp], #4)
   263fc:	mov	r0, #1
   26400:	bx	lr
   26404:	ldrdeq	r8, [sp], -r0
   26408:	andeq	r8, sp, r8, asr #31

0002640c <myhtml_token_release_and_check_doctype_attributes@@Base>:
   2640c:	str	r4, [sp, #-8]!
   26410:	subs	r4, r2, #0
   26414:	str	lr, [sp, #4]
   26418:	beq	26444 <myhtml_token_release_and_check_doctype_attributes@@Base+0x38>
   2641c:	bl	10430 <myhtml_token_strict_doctype_by_token@plt>
   26420:	ldr	r3, [r4, #4]
   26424:	cmp	r3, #0
   26428:	beq	26444 <myhtml_token_release_and_check_doctype_attributes@@Base+0x38>
   2642c:	ldrb	r3, [r4]
   26430:	ldr	r2, [r4, #8]
   26434:	cmp	r3, #0
   26438:	beq	26454 <myhtml_token_release_and_check_doctype_attributes@@Base+0x48>
   2643c:	cmp	r2, #0
   26440:	bne	264a4 <myhtml_token_release_and_check_doctype_attributes@@Base+0x98>
   26444:	mov	r0, #0
   26448:	ldr	r4, [sp]
   2644c:	add	sp, sp, #4
   26450:	pop	{pc}		; (ldr pc, [sp], #4)
   26454:	cmp	r2, #0
   26458:	beq	2646c <myhtml_token_release_and_check_doctype_attributes@@Base+0x60>
   2645c:	ldr	r4, [sp]
   26460:	add	sp, sp, #4
   26464:	mov	r0, #1
   26468:	pop	{pc}		; (ldr pc, [sp], #4)
   2646c:	ldr	r0, [r4, #12]
   26470:	cmp	r0, #0
   26474:	beq	2645c <myhtml_token_release_and_check_doctype_attributes@@Base+0x50>
   26478:	ldr	r1, [pc, #104]	; 264e8 <myhtml_token_release_and_check_doctype_attributes@@Base+0xdc>
   2647c:	add	r1, pc, r1
   26480:	bl	fb9c <mycore_strcmp@plt>
   26484:	cmp	r0, #0
   26488:	beq	2645c <myhtml_token_release_and_check_doctype_attributes@@Base+0x50>
   2648c:	ldr	r3, [r4, #8]
   26490:	cmp	r3, #0
   26494:	beq	26444 <myhtml_token_release_and_check_doctype_attributes@@Base+0x38>
   26498:	ldrb	r3, [r4]
   2649c:	cmp	r3, #0
   264a0:	beq	2645c <myhtml_token_release_and_check_doctype_attributes@@Base+0x50>
   264a4:	mov	r0, r4
   264a8:	bl	104b4 <myhtml_token_doctype_check_html_4_0@plt>
   264ac:	cmp	r0, #0
   264b0:	beq	2645c <myhtml_token_release_and_check_doctype_attributes@@Base+0x50>
   264b4:	mov	r0, r4
   264b8:	bl	10340 <myhtml_token_doctype_check_html_4_01@plt>
   264bc:	cmp	r0, #0
   264c0:	beq	2645c <myhtml_token_release_and_check_doctype_attributes@@Base+0x50>
   264c4:	mov	r0, r4
   264c8:	bl	105f8 <myhtml_token_doctype_check_xhtml_1_0@plt>
   264cc:	cmp	r0, #0
   264d0:	beq	2645c <myhtml_token_release_and_check_doctype_attributes@@Base+0x50>
   264d4:	mov	r0, r4
   264d8:	bl	fbd8 <myhtml_token_doctype_check_xhtml_1_1@plt>
   264dc:	eor	r0, r0, #1
   264e0:	uxtb	r0, r0
   264e4:	b	26448 <myhtml_token_release_and_check_doctype_attributes@@Base+0x3c>
   264e8:	andeq	r8, sp, ip, asr pc

000264ec <myhtml_token_attr_compare@@Base>:
   264ec:	cmp	r1, #0
   264f0:	cmpne	r0, #0
   264f4:	beq	265ac <myhtml_token_attr_compare@@Base+0xc0>
   264f8:	strd	r4, [sp, #-16]!
   264fc:	ldr	r5, [r0, #40]	; 0x28
   26500:	ldr	r4, [r1, #40]	; 0x28
   26504:	str	r6, [sp, #8]
   26508:	str	lr, [sp, #12]
   2650c:	cmp	r4, #0
   26510:	cmpne	r5, #0
   26514:	beq	265b4 <myhtml_token_attr_compare@@Base+0xc8>
   26518:	ldr	r3, [r4, #16]
   2651c:	ldr	r2, [r5, #16]
   26520:	cmp	r2, r3
   26524:	bne	26598 <myhtml_token_attr_compare@@Base+0xac>
   26528:	ldr	r2, [r4, #36]	; 0x24
   2652c:	ldr	r3, [r5, #36]	; 0x24
   26530:	cmp	r2, r3
   26534:	beq	26584 <myhtml_token_attr_compare@@Base+0x98>
   26538:	b	26598 <myhtml_token_attr_compare@@Base+0xac>
   2653c:	ldr	r1, [r4, #28]
   26540:	ldr	r0, [r5, #28]
   26544:	bl	104c0 <mycore_strcasecmp@plt>
   26548:	cmp	r0, #0
   2654c:	bne	26598 <myhtml_token_attr_compare@@Base+0xac>
   26550:	ldr	r4, [r4]
   26554:	ldr	r5, [r5]
   26558:	cmp	r5, #0
   2655c:	cmpne	r4, #0
   26560:	beq	265b4 <myhtml_token_attr_compare@@Base+0xc8>
   26564:	ldr	r3, [r4, #16]
   26568:	ldr	r2, [r5, #16]
   2656c:	cmp	r2, r3
   26570:	bne	26598 <myhtml_token_attr_compare@@Base+0xac>
   26574:	ldr	r3, [r4, #36]	; 0x24
   26578:	ldr	r2, [r5, #36]	; 0x24
   2657c:	cmp	r2, r3
   26580:	bne	26598 <myhtml_token_attr_compare@@Base+0xac>
   26584:	ldr	r1, [r4, #8]
   26588:	ldr	r0, [r5, #8]
   2658c:	bl	fb9c <mycore_strcmp@plt>
   26590:	cmp	r0, #0
   26594:	beq	2653c <myhtml_token_attr_compare@@Base+0x50>
   26598:	ldrd	r4, [sp]
   2659c:	mov	r0, #0
   265a0:	ldr	r6, [sp, #8]
   265a4:	add	sp, sp, #12
   265a8:	pop	{pc}		; (ldr pc, [sp], #4)
   265ac:	mov	r0, #0
   265b0:	bx	lr
   265b4:	orrs	r3, r5, r4
   265b8:	ldrd	r4, [sp]
   265bc:	moveq	r0, #1
   265c0:	movne	r0, #0
   265c4:	ldr	r6, [sp, #8]
   265c8:	add	sp, sp, #12
   265cc:	pop	{pc}		; (ldr pc, [sp], #4)

000265d0 <myhtml_token_attr_by_name@@Base>:
   265d0:	strd	r4, [sp, #-16]!
   265d4:	ldr	r4, [r0, #40]	; 0x28
   265d8:	str	r6, [sp, #8]
   265dc:	str	lr, [sp, #12]
   265e0:	cmp	r4, #0
   265e4:	beq	26634 <myhtml_token_attr_by_name@@Base+0x64>
   265e8:	mov	r6, r1
   265ec:	mov	r5, r2
   265f0:	b	26600 <myhtml_token_attr_by_name@@Base+0x30>
   265f4:	ldr	r4, [r4]
   265f8:	cmp	r4, #0
   265fc:	beq	26634 <myhtml_token_attr_by_name@@Base+0x64>
   26600:	ldr	r3, [r4, #16]
   26604:	cmp	r3, r5
   26608:	bne	265f4 <myhtml_token_attr_by_name@@Base+0x24>
   2660c:	mov	r1, r6
   26610:	ldr	r0, [r4, #8]
   26614:	bl	fb9c <mycore_strcmp@plt>
   26618:	cmp	r0, #0
   2661c:	bne	265f4 <myhtml_token_attr_by_name@@Base+0x24>
   26620:	mov	r0, r4
   26624:	ldrd	r4, [sp]
   26628:	ldr	r6, [sp, #8]
   2662c:	add	sp, sp, #12
   26630:	pop	{pc}		; (ldr pc, [sp], #4)
   26634:	mov	r4, #0
   26638:	b	26620 <myhtml_token_attr_by_name@@Base+0x50>

0002663c <myhtml_token_node_attr_copy_with_check@@Base>:
   2663c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   26640:	ldr	r4, [r1, #40]	; 0x28
   26644:	strd	r6, [sp, #8]
   26648:	str	r8, [sp, #16]
   2664c:	str	lr, [sp, #20]
   26650:	cmp	r4, #0
   26654:	beq	266b4 <myhtml_token_node_attr_copy_with_check@@Base+0x78>
   26658:	mov	r7, r0
   2665c:	mov	r5, r2
   26660:	mov	r6, r3
   26664:	b	26674 <myhtml_token_node_attr_copy_with_check@@Base+0x38>
   26668:	ldr	r4, [r4]
   2666c:	cmp	r4, #0
   26670:	beq	266b4 <myhtml_token_node_attr_copy_with_check@@Base+0x78>
   26674:	ldr	r2, [r4, #16]
   26678:	cmp	r2, #0
   2667c:	beq	26668 <myhtml_token_node_attr_copy_with_check@@Base+0x2c>
   26680:	mov	r0, r5
   26684:	ldr	r1, [r4, #8]
   26688:	bl	10e44 <myhtml_token_attr_by_name@plt>
   2668c:	cmp	r0, #0
   26690:	bne	26668 <myhtml_token_node_attr_copy_with_check@@Base+0x2c>
   26694:	mov	r1, r4
   26698:	mov	r3, r6
   2669c:	mov	r2, r5
   266a0:	mov	r0, r7
   266a4:	bl	106f4 <myhtml_token_attr_copy@plt>
   266a8:	ldr	r4, [r4]
   266ac:	cmp	r4, #0
   266b0:	bne	26674 <myhtml_token_node_attr_copy_with_check@@Base+0x38>
   266b4:	ldrd	r4, [sp]
   266b8:	ldrd	r6, [sp, #8]
   266bc:	ldr	r8, [sp, #16]
   266c0:	add	sp, sp, #20
   266c4:	pop	{pc}		; (ldr pc, [sp], #4)

000266c8 <myhtml_token_adjust_mathml_attributes@@Base>:
   266c8:	ldr	r1, [pc, #76]	; 2671c <myhtml_token_adjust_mathml_attributes@@Base+0x54>
   266cc:	mov	r2, #13
   266d0:	str	r4, [sp, #-8]!
   266d4:	str	lr, [sp, #4]
   266d8:	add	r1, pc, r1
   266dc:	bl	10e44 <myhtml_token_attr_by_name@plt>
   266e0:	cmp	r0, #0
   266e4:	beq	26710 <myhtml_token_adjust_mathml_attributes@@Base+0x48>
   266e8:	ldr	r3, [pc, #48]	; 26720 <myhtml_token_adjust_mathml_attributes@@Base+0x58>
   266ec:	ldr	r2, [r0, #8]
   266f0:	add	r3, pc, r3
   266f4:	ldrb	ip, [r3, #12]
   266f8:	ldrd	r0, [r3]
   266fc:	ldr	r3, [r3, #8]
   26700:	str	r0, [r2]
   26704:	str	r1, [r2, #4]
   26708:	str	r3, [r2, #8]
   2670c:	strb	ip, [r2, #12]
   26710:	ldr	r4, [sp]
   26714:	add	sp, sp, #4
   26718:	pop	{pc}		; (ldr pc, [sp], #4)
   2671c:	andeq	r8, sp, r4, lsl sp
   26720:	andeq	r8, sp, ip, lsl #26

00026724 <myhtml_token_adjust_svg_attributes@@Base>:
   26724:	strd	r4, [sp, #-24]!	; 0xffffffe8
   26728:	ldr	r4, [pc, #100]	; 26794 <myhtml_token_adjust_svg_attributes@@Base+0x70>
   2672c:	strd	r6, [sp, #8]
   26730:	mov	r7, r0
   26734:	str	r8, [sp, #16]
   26738:	str	lr, [sp, #20]
   2673c:	add	r4, pc, r4
   26740:	add	r6, r4, #928	; 0x3a0
   26744:	mov	r0, r7
   26748:	ldm	r4, {r1, r2}
   2674c:	bl	10e44 <myhtml_token_attr_by_name@plt>
   26750:	cmp	r0, #0
   26754:	add	r5, r0, #8
   26758:	beq	26774 <myhtml_token_adjust_svg_attributes@@Base+0x50>
   2675c:	mov	r0, r5
   26760:	bl	10cac <mycore_string_clean@plt>
   26764:	mov	r0, r5
   26768:	ldr	r1, [r4, #8]
   2676c:	ldr	r2, [r4, #12]
   26770:	bl	10868 <mycore_string_append@plt>
   26774:	add	r4, r4, #16
   26778:	cmp	r4, r6
   2677c:	bne	26744 <myhtml_token_adjust_svg_attributes@@Base+0x20>
   26780:	ldrd	r4, [sp]
   26784:	ldrd	r6, [sp, #8]
   26788:	ldr	r8, [sp, #16]
   2678c:	add	sp, sp, #20
   26790:	pop	{pc}		; (ldr pc, [sp], #4)
   26794:	andeq	r2, pc, r4, lsr #5

00026798 <myhtml_token_adjust_foreign_attributes@@Base>:
   26798:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2679c:	ldr	r4, [pc, #112]	; 26814 <myhtml_token_adjust_foreign_attributes@@Base+0x7c>
   267a0:	strd	r6, [sp, #8]
   267a4:	str	r8, [sp, #16]
   267a8:	mov	r8, r0
   267ac:	str	lr, [sp, #20]
   267b0:	add	r4, pc, r4
   267b4:	add	r4, r4, #928	; 0x3a0
   267b8:	add	r7, r4, #220	; 0xdc
   267bc:	mov	r0, r8
   267c0:	ldm	r4, {r1, r2}
   267c4:	bl	10e44 <myhtml_token_attr_by_name@plt>
   267c8:	subs	r5, r0, #0
   267cc:	add	r6, r5, #8
   267d0:	beq	267f4 <myhtml_token_adjust_foreign_attributes@@Base+0x5c>
   267d4:	mov	r0, r6
   267d8:	bl	10cac <mycore_string_clean@plt>
   267dc:	mov	r0, r6
   267e0:	ldr	r1, [r4, #8]
   267e4:	ldr	r2, [r4, #12]
   267e8:	bl	10868 <mycore_string_append@plt>
   267ec:	ldr	r3, [r4, #16]
   267f0:	str	r3, [r5, #64]	; 0x40
   267f4:	add	r4, r4, #20
   267f8:	cmp	r4, r7
   267fc:	bne	267bc <myhtml_token_adjust_foreign_attributes@@Base+0x24>
   26800:	ldrd	r4, [sp]
   26804:	ldrd	r6, [sp, #8]
   26808:	ldr	r8, [sp, #16]
   2680c:	add	sp, sp, #20
   26810:	pop	{pc}		; (ldr pc, [sp], #4)
   26814:	andeq	r2, pc, r0, lsr r2	; <UNPREDICTABLE>

00026818 <myhtml_token_delete@@Base>:
   26818:	ldr	r2, [r1, #4]
   2681c:	strd	r4, [sp, #-16]!
   26820:	mov	r4, r1
   26824:	mov	r5, r0
   26828:	str	r6, [sp, #8]
   2682c:	str	lr, [sp, #12]
   26830:	cmp	r2, #0
   26834:	beq	2684c <myhtml_token_delete@@Base+0x34>
   26838:	ldr	r0, [r1, #16]
   2683c:	cmp	r0, #0
   26840:	beq	2684c <myhtml_token_delete@@Base+0x34>
   26844:	ldr	r1, [r1, #20]
   26848:	bl	106ac <mchar_async_free@plt>
   2684c:	mov	r1, r4
   26850:	ldr	r0, [r5, #4]
   26854:	ldrd	r4, [sp]
   26858:	ldr	r6, [sp, #8]
   2685c:	ldr	lr, [sp, #12]
   26860:	add	sp, sp, #16
   26864:	b	ffec <mcobject_async_free@plt>

00026868 <myhtml_token_attr_delete_all@@Base>:
   26868:	str	r4, [sp, #-8]!
   2686c:	ldr	r4, [r1, #40]	; 0x28
   26870:	str	lr, [sp, #4]
   26874:	cmp	r4, #0
   26878:	beq	268c8 <myhtml_token_attr_delete_all@@Base+0x60>
   2687c:	ldr	r2, [r4, #8]
   26880:	cmp	r2, #0
   26884:	beq	2689c <myhtml_token_attr_delete_all@@Base+0x34>
   26888:	ldr	r3, [r4, #20]
   2688c:	subs	r0, r3, #0
   26890:	beq	2689c <myhtml_token_attr_delete_all@@Base+0x34>
   26894:	ldr	r1, [r4, #24]
   26898:	bl	106ac <mchar_async_free@plt>
   2689c:	ldr	r2, [r4, #28]
   268a0:	cmp	r2, #0
   268a4:	beq	268bc <myhtml_token_attr_delete_all@@Base+0x54>
   268a8:	ldr	r3, [r4, #40]	; 0x28
   268ac:	subs	r0, r3, #0
   268b0:	beq	268bc <myhtml_token_attr_delete_all@@Base+0x54>
   268b4:	ldr	r1, [r4, #44]	; 0x2c
   268b8:	bl	106ac <mchar_async_free@plt>
   268bc:	ldr	r4, [r4]
   268c0:	cmp	r4, #0
   268c4:	bne	2687c <myhtml_token_attr_delete_all@@Base+0x14>
   268c8:	ldr	r4, [sp]
   268cc:	add	sp, sp, #4
   268d0:	pop	{pc}		; (ldr pc, [sp], #4)

000268d4 <myhtml_token_attr_remove@@Base>:
   268d4:	cmp	r1, #0
   268d8:	beq	2690c <myhtml_token_attr_remove@@Base+0x38>
   268dc:	ldr	r3, [r1]
   268e0:	ldr	r2, [r1, #4]
   268e4:	cmp	r2, #0
   268e8:	strne	r3, [r2]
   268ec:	ldrne	r3, [r1]
   268f0:	streq	r3, [r0, #40]	; 0x28
   268f4:	cmp	r3, #0
   268f8:	strne	r2, [r3, #4]
   268fc:	mov	r3, #0
   26900:	streq	r2, [r0, #44]	; 0x2c
   26904:	str	r3, [r1]
   26908:	str	r3, [r1, #4]
   2690c:	mov	r0, r1
   26910:	bx	lr

00026914 <myhtml_token_attr_remove_by_name@@Base>:
   26914:	str	r4, [sp, #-8]!
   26918:	mov	r4, r0
   2691c:	str	lr, [sp, #4]
   26920:	bl	10e44 <myhtml_token_attr_by_name@plt>
   26924:	mov	r1, r0
   26928:	mov	r0, r4
   2692c:	ldr	r4, [sp]
   26930:	ldr	lr, [sp, #4]
   26934:	add	sp, sp, #8
   26938:	b	10508 <myhtml_token_attr_remove@plt>

0002693c <myhtml_token_merged_two_token_string@@Base>:
   2693c:	strd	r4, [sp, #-28]!	; 0xffffffe4
   26940:	mov	r5, r2
   26944:	mov	r4, r1
   26948:	strd	r6, [sp, #8]
   2694c:	mov	r6, r0
   26950:	add	r7, r1, #4
   26954:	strd	r8, [sp, #16]
   26958:	mov	r8, r3
   2695c:	add	r9, r2, #4
   26960:	str	lr, [sp, #24]
   26964:	sub	sp, sp, #28
   26968:	ldr	r0, [r0, #8]
   2696c:	bl	10610 <myhtml_token_node_wait_for_done@plt>
   26970:	mov	r1, r5
   26974:	ldr	r0, [r6, #8]
   26978:	bl	10610 <myhtml_token_node_wait_for_done@plt>
   2697c:	ldr	r2, [r4, #20]
   26980:	mov	r3, #0
   26984:	ldr	r1, [r6, #52]	; 0x34
   26988:	str	r3, [r4, #24]
   2698c:	str	r3, [r4, #28]
   26990:	cmp	r2, r1
   26994:	beq	26a54 <myhtml_token_merged_two_token_string@@Base+0x118>
   26998:	ldr	r3, [r5, #20]
   2699c:	cmp	r1, r3
   269a0:	beq	26a34 <myhtml_token_merged_two_token_string@@Base+0xf8>
   269a4:	ldr	ip, [r5, #12]
   269a8:	add	r5, sp, #4
   269ac:	mov	r2, r5
   269b0:	ldr	r3, [r4, #12]
   269b4:	ldr	r0, [r6, #4]
   269b8:	add	ip, ip, #2
   269bc:	add	r3, ip, r3
   269c0:	bl	105a4 <mycore_string_init@plt>
   269c4:	cmp	r8, #0
   269c8:	bne	26a18 <myhtml_token_merged_two_token_string@@Base+0xdc>
   269cc:	mov	r1, r7
   269d0:	mov	r0, r5
   269d4:	bl	1010c <mycore_string_copy@plt>
   269d8:	mov	r1, r9
   269dc:	mov	r0, r5
   269e0:	bl	1010c <mycore_string_copy@plt>
   269e4:	ldrd	r2, [sp, #4]
   269e8:	mov	r0, r4
   269ec:	ldrd	r8, [r5, #8]
   269f0:	ldr	r1, [r5, #16]
   269f4:	strd	r2, [r4, #4]
   269f8:	strd	r8, [r7, #8]
   269fc:	str	r1, [r7, #16]
   26a00:	add	sp, sp, #28
   26a04:	ldrd	r4, [sp]
   26a08:	ldrd	r6, [sp, #8]
   26a0c:	ldrd	r8, [sp, #16]
   26a10:	add	sp, sp, #24
   26a14:	pop	{pc}		; (ldr pc, [sp], #4)
   26a18:	mov	r1, r9
   26a1c:	mov	r0, r5
   26a20:	bl	1010c <mycore_string_copy@plt>
   26a24:	mov	r1, r7
   26a28:	mov	r0, r5
   26a2c:	bl	1010c <mycore_string_copy@plt>
   26a30:	b	269e4 <myhtml_token_merged_two_token_string@@Base+0xa8>
   26a34:	cmp	r8, #0
   26a38:	movne	r0, r9
   26a3c:	moveq	r0, r7
   26a40:	movne	r1, r7
   26a44:	moveq	r1, r9
   26a48:	bl	1010c <mycore_string_copy@plt>
   26a4c:	mov	r0, r5
   26a50:	b	26a00 <myhtml_token_merged_two_token_string@@Base+0xc4>
   26a54:	cmp	r8, r3
   26a58:	movne	r0, r4
   26a5c:	bne	26a00 <myhtml_token_merged_two_token_string@@Base+0xc4>
   26a60:	mov	r0, r7
   26a64:	mov	r1, r9
   26a68:	bl	1010c <mycore_string_copy@plt>
   26a6c:	mov	r0, r4
   26a70:	b	26a00 <myhtml_token_merged_two_token_string@@Base+0xc4>

00026a74 <myhtml_token_set_replacement_character_for_null_token@@Base>:
   26a74:	strd	r4, [sp, #-20]!	; 0xffffffec
   26a78:	mov	r5, r1
   26a7c:	strd	r6, [sp, #8]
   26a80:	mov	r6, r1
   26a84:	mov	r7, r0
   26a88:	str	lr, [sp, #16]
   26a8c:	sub	sp, sp, #28
   26a90:	ldr	r0, [r0, #8]
   26a94:	add	r4, sp, #4
   26a98:	bl	10610 <myhtml_token_node_wait_for_done@plt>
   26a9c:	ldr	r3, [r6, #12]
   26aa0:	mov	r2, r4
   26aa4:	ldr	r0, [r7, #4]
   26aa8:	ldr	r1, [r7, #52]	; 0x34
   26aac:	add	r3, r3, #2
   26ab0:	bl	105a4 <mycore_string_init@plt>
   26ab4:	mov	r0, r4
   26ab8:	ldr	r1, [r5, #4]!
   26abc:	ldr	r2, [r6, #12]
   26ac0:	bl	1031c <mycore_string_append_with_replacement_null_characters@plt>
   26ac4:	ldrd	r2, [sp, #4]
   26ac8:	ldrd	r0, [r4, #8]
   26acc:	ldr	ip, [r4, #16]
   26ad0:	strd	r2, [r6, #4]
   26ad4:	strd	r0, [r5, #8]
   26ad8:	str	ip, [r5, #16]
   26adc:	add	sp, sp, #28
   26ae0:	ldrd	r4, [sp]
   26ae4:	ldrd	r6, [sp, #8]
   26ae8:	add	sp, sp, #16
   26aec:	pop	{pc}		; (ldr pc, [sp], #4)

00026af0 <myhtml_tokenizer_state_rcdata_less_than_sign@@Base>:
   26af0:	ldrb	r2, [r2, r3]
   26af4:	mov	r1, r0
   26af8:	cmp	r2, #47	; 0x2f
   26afc:	moveq	r2, #11
   26b00:	movne	r2, #2
   26b04:	addeq	r3, r3, #1
   26b08:	mov	r0, r3
   26b0c:	str	r2, [r1, #160]	; 0xa0
   26b10:	bx	lr

00026b14 <myhtml_tokenizer_state_rcdata_end_tag_open@@Base>:
   26b14:	ldr	r1, [pc, #32]	; 26b3c <myhtml_tokenizer_state_rcdata_end_tag_open@@Base+0x28>
   26b18:	ldrb	r2, [r2, r3]
   26b1c:	add	r1, pc, r1
   26b20:	ldrb	r2, [r1, r2]
   26b24:	cmp	r2, #1
   26b28:	moveq	r2, #12
   26b2c:	movne	r2, #2
   26b30:	str	r2, [r0, #160]	; 0xa0
   26b34:	mov	r0, r3
   26b38:	bx	lr
   26b3c:	andeq	r9, sp, r4, lsr #32

00026b40 <myhtml_tokenizer_state_rawtext_less_than_sign@@Base>:
   26b40:	ldrb	r2, [r2, r3]
   26b44:	mov	r1, r0
   26b48:	cmp	r2, #47	; 0x2f
   26b4c:	moveq	r2, #14
   26b50:	movne	r2, #4
   26b54:	addeq	r3, r3, #1
   26b58:	mov	r0, r3
   26b5c:	str	r2, [r1, #160]	; 0xa0
   26b60:	bx	lr

00026b64 <myhtml_tokenizer_state_rawtext_end_tag_open@@Base>:
   26b64:	ldr	r1, [pc, #32]	; 26b8c <myhtml_tokenizer_state_rawtext_end_tag_open@@Base+0x28>
   26b68:	ldrb	r2, [r2, r3]
   26b6c:	add	r1, pc, r1
   26b70:	ldrb	r2, [r1, r2]
   26b74:	cmp	r2, #1
   26b78:	moveq	r2, #15
   26b7c:	movne	r2, #4
   26b80:	str	r2, [r0, #160]	; 0xa0
   26b84:	mov	r0, r3
   26b88:	bx	lr
   26b8c:	ldrdeq	r8, [sp], -r4

00026b90 <myhtml_tokenizer_state_data@@Base>:
   26b90:	strd	r4, [sp, #-12]!
   26b94:	ldr	r4, [sp, #12]
   26b98:	str	lr, [sp, #8]
   26b9c:	cmp	r3, r4
   26ba0:	bcs	26c4c <myhtml_tokenizer_state_data@@Base+0xbc>
   26ba4:	ldrb	lr, [r2, r3]
   26ba8:	add	ip, r2, r3
   26bac:	cmp	lr, #60	; 0x3c
   26bb0:	beq	26c5c <myhtml_tokenizer_state_data@@Base+0xcc>
   26bb4:	ldr	r5, [pc, #200]	; 26c84 <myhtml_tokenizer_state_data@@Base+0xf4>
   26bb8:	add	r4, r2, r4
   26bbc:	rsb	r2, r2, #1
   26bc0:	sub	r4, r4, #1
   26bc4:	add	r5, pc, r5
   26bc8:	b	26c20 <myhtml_tokenizer_state_data@@Base+0x90>
   26bcc:	tst	r3, #2048	; 0x800
   26bd0:	ldr	r3, [r1, #48]	; 0x30
   26bd4:	orreq	r3, r3, #2048	; 0x800
   26bd8:	streq	r3, [r1, #48]	; 0x30
   26bdc:	beq	26c08 <myhtml_tokenizer_state_data@@Base+0x78>
   26be0:	tst	r3, #8
   26be4:	beq	26c08 <myhtml_tokenizer_state_data@@Base+0x78>
   26be8:	ldr	r3, [r1, #48]	; 0x30
   26bec:	ldr	lr, [r1, #48]	; 0x30
   26bf0:	and	r3, r3, #8
   26bf4:	eor	r3, r3, lr
   26bf8:	str	r3, [r1, #48]	; 0x30
   26bfc:	ldr	r3, [r1, #48]	; 0x30
   26c00:	orr	r3, r3, #512	; 0x200
   26c04:	str	r3, [r1, #48]	; 0x30
   26c08:	cmp	ip, r4
   26c0c:	add	r3, r2, ip
   26c10:	beq	26c4c <myhtml_tokenizer_state_data@@Base+0xbc>
   26c14:	ldrb	lr, [ip, #1]!
   26c18:	cmp	lr, #60	; 0x3c
   26c1c:	beq	26c5c <myhtml_tokenizer_state_data@@Base+0xcc>
   26c20:	cmp	lr, #0
   26c24:	ldr	r3, [r1, #48]	; 0x30
   26c28:	beq	26bcc <myhtml_tokenizer_state_data@@Base+0x3c>
   26c2c:	tst	r3, #8
   26c30:	beq	26c08 <myhtml_tokenizer_state_data@@Base+0x78>
   26c34:	ldrb	r3, [r5, lr]
   26c38:	cmp	r3, #2
   26c3c:	bne	26be8 <myhtml_tokenizer_state_data@@Base+0x58>
   26c40:	cmp	ip, r4
   26c44:	add	r3, r2, ip
   26c48:	bne	26c14 <myhtml_tokenizer_state_data@@Base+0x84>
   26c4c:	ldrd	r4, [sp]
   26c50:	add	sp, sp, #8
   26c54:	mov	r0, r3
   26c58:	pop	{pc}		; (ldr pc, [sp], #4)
   26c5c:	ldr	r2, [r0, #192]	; 0xc0
   26c60:	mov	ip, #7
   26c64:	ldrd	r4, [sp]
   26c68:	add	sp, sp, #8
   26c6c:	add	r2, r2, r3
   26c70:	add	r3, r3, #1
   26c74:	str	r2, [r1, #32]
   26c78:	str	ip, [r0, #160]	; 0xa0
   26c7c:	mov	r0, r3
   26c80:	pop	{pc}		; (ldr pc, [sp], #4)
   26c84:	andeq	r8, sp, ip, ror pc

00026c88 <myhtml_tokenizer_state_comment@@Base>:
   26c88:	push	{lr}		; (str lr, [sp, #-4]!)
   26c8c:	mov	ip, #2
   26c90:	ldr	lr, [sp, #4]
   26c94:	str	ip, [r1]
   26c98:	cmp	r3, lr
   26c9c:	bcs	26cd8 <myhtml_tokenizer_state_comment@@Base+0x50>
   26ca0:	ldrb	ip, [r2, r3]
   26ca4:	add	r1, r2, r3
   26ca8:	cmp	ip, #45	; 0x2d
   26cac:	addne	lr, r2, lr
   26cb0:	rsbne	r2, r2, #1
   26cb4:	subne	lr, lr, #1
   26cb8:	bne	26ccc <myhtml_tokenizer_state_comment@@Base+0x44>
   26cbc:	b	26ce0 <myhtml_tokenizer_state_comment@@Base+0x58>
   26cc0:	ldrb	ip, [r1, #1]!
   26cc4:	cmp	ip, #45	; 0x2d
   26cc8:	beq	26ce0 <myhtml_tokenizer_state_comment@@Base+0x58>
   26ccc:	cmp	r1, lr
   26cd0:	add	r3, r2, r1
   26cd4:	bne	26cc0 <myhtml_tokenizer_state_comment@@Base+0x38>
   26cd8:	mov	r0, r3
   26cdc:	pop	{pc}		; (ldr pc, [sp], #4)
   26ce0:	mov	r2, #48	; 0x30
   26ce4:	add	r3, r3, #1
   26ce8:	str	r2, [r0, #160]	; 0xa0
   26cec:	mov	r0, r3
   26cf0:	pop	{pc}		; (ldr pc, [sp], #4)

00026cf4 <myhtml_tokenizer_state_comment_end_dash@@Base>:
   26cf4:	ldrb	r2, [r2, r3]
   26cf8:	cmp	r2, #45	; 0x2d
   26cfc:	movne	r2, #47	; 0x2f
   26d00:	moveq	r2, #49	; 0x31
   26d04:	str	r2, [r0, #160]	; 0xa0
   26d08:	add	r0, r3, #1
   26d0c:	bx	lr

00026d10 <myhtml_tokenizer_state_parse_error_stop@@Base>:
   26d10:	movw	r3, #37164	; 0x912c
   26d14:	str	r3, [r0, #196]	; 0xc4
   26d18:	ldr	r0, [sp]
   26d1c:	bx	lr

00026d20 <myhtml_tokenizer_state_plaintext@@Base>:
   26d20:	ldr	r2, [r1, #48]	; 0x30
   26d24:	mov	ip, r1
   26d28:	strd	r4, [sp, #-24]!	; 0xffffffe8
   26d2c:	mov	r5, r0
   26d30:	strd	r6, [sp, #8]
   26d34:	str	r8, [sp, #16]
   26d38:	str	lr, [sp, #20]
   26d3c:	tst	r2, #128	; 0x80
   26d40:	ldr	r4, [sp, #24]
   26d44:	bne	26d54 <myhtml_tokenizer_state_plaintext@@Base+0x34>
   26d48:	ldr	r2, [r1, #48]	; 0x30
   26d4c:	orr	r2, r2, #128	; 0x80
   26d50:	str	r2, [r1, #48]	; 0x30
   26d54:	ldr	r1, [ip, #48]	; 0x30
   26d58:	sub	r2, r4, r3
   26d5c:	mov	r6, #0
   26d60:	mov	r7, #1
   26d64:	ldr	lr, [ip, #48]	; 0x30
   26d68:	ldr	r0, [r5, #192]	; 0xc0
   26d6c:	and	r1, r1, #8
   26d70:	str	r7, [ip]
   26d74:	str	r2, [ip, #28]
   26d78:	eor	r1, r1, lr
   26d7c:	str	r2, [ip, #36]	; 0x24
   26d80:	mov	r2, ip
   26d84:	add	r3, r0, r3
   26d88:	mov	r0, r5
   26d8c:	str	r3, [ip, #24]
   26d90:	str	r1, [ip, #48]	; 0x30
   26d94:	mov	r1, r4
   26d98:	str	r6, [r5, #160]	; 0xa0
   26d9c:	bl	ffc8 <myhtml_queue_add@plt>
   26da0:	cmp	r0, r6
   26da4:	beq	26db4 <myhtml_tokenizer_state_plaintext@@Base+0x94>
   26da8:	mov	r3, #69	; 0x45
   26dac:	mov	r4, r6
   26db0:	str	r3, [r5, #160]	; 0xa0
   26db4:	mov	r0, r4
   26db8:	ldrd	r4, [sp]
   26dbc:	ldrd	r6, [sp, #8]
   26dc0:	ldr	r8, [sp, #16]
   26dc4:	add	sp, sp, #20
   26dc8:	pop	{pc}		; (ldr pc, [sp], #4)

00026dcc <myhtml_tokenizer_state_bogus_comment@@Base>:
   26dcc:	strd	r4, [sp, #-16]!
   26dd0:	mov	r4, #2
   26dd4:	ldr	ip, [r1, #48]	; 0x30
   26dd8:	str	r6, [sp, #8]
   26ddc:	str	lr, [sp, #12]
   26de0:	ldr	lr, [sp, #16]
   26de4:	str	r4, [r1]
   26de8:	orr	ip, ip, #1024	; 0x400
   26dec:	str	ip, [r1, #48]	; 0x30
   26df0:	cmp	r3, lr
   26df4:	bcs	26e9c <myhtml_tokenizer_state_bogus_comment@@Base+0xd0>
   26df8:	ldrb	r4, [r2, r3]
   26dfc:	add	ip, r2, r3
   26e00:	cmp	r4, #62	; 0x3e
   26e04:	addne	lr, r2, lr
   26e08:	rsbne	r2, r2, #1
   26e0c:	subne	lr, lr, #1
   26e10:	bne	26e24 <myhtml_tokenizer_state_bogus_comment@@Base+0x58>
   26e14:	b	26e44 <myhtml_tokenizer_state_bogus_comment@@Base+0x78>
   26e18:	ldrb	r3, [ip, #1]!
   26e1c:	cmp	r3, #62	; 0x3e
   26e20:	beq	26e48 <myhtml_tokenizer_state_bogus_comment@@Base+0x7c>
   26e24:	cmp	ip, lr
   26e28:	add	r4, r2, ip
   26e2c:	bne	26e18 <myhtml_tokenizer_state_bogus_comment@@Base+0x4c>
   26e30:	mov	r0, r4
   26e34:	ldrd	r4, [sp]
   26e38:	ldr	r6, [sp, #8]
   26e3c:	add	sp, sp, #12
   26e40:	pop	{pc}		; (ldr pc, [sp], #4)
   26e44:	mov	r4, r3
   26e48:	mov	ip, r1
   26e4c:	mov	r2, r1
   26e50:	ldr	r1, [r1, #24]
   26e54:	mov	r5, r0
   26e58:	ldr	r3, [r0, #192]	; 0xc0
   26e5c:	ldr	lr, [ip, #32]
   26e60:	sub	r1, r3, r1
   26e64:	add	r1, r1, r4
   26e68:	add	r4, r4, #1
   26e6c:	sub	r3, r3, lr
   26e70:	add	r3, r3, r4
   26e74:	str	r1, [ip, #28]
   26e78:	mov	r1, r4
   26e7c:	str	r3, [ip, #36]	; 0x24
   26e80:	bl	ffc8 <myhtml_queue_add@plt>
   26e84:	cmp	r0, #0
   26e88:	movne	r3, #69	; 0x45
   26e8c:	movne	r4, #0
   26e90:	streq	r0, [r5, #160]	; 0xa0
   26e94:	strne	r3, [r5, #160]	; 0xa0
   26e98:	b	26e30 <myhtml_tokenizer_state_bogus_comment@@Base+0x64>
   26e9c:	mov	r4, r3
   26ea0:	b	26e30 <myhtml_tokenizer_state_bogus_comment@@Base+0x64>

00026ea4 <myhtml_tokenizer_state_cdata_section@@Base>:
   26ea4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   26ea8:	mov	r4, r3
   26eac:	ldr	r3, [r1, #48]	; 0x30
   26eb0:	strd	r6, [sp, #8]
   26eb4:	mov	r7, r1
   26eb8:	mov	r6, r0
   26ebc:	str	r8, [sp, #16]
   26ec0:	str	lr, [sp, #20]
   26ec4:	ldr	r5, [sp, #24]
   26ec8:	tst	r3, #256	; 0x100
   26ecc:	bne	26edc <myhtml_tokenizer_state_cdata_section@@Base+0x38>
   26ed0:	ldr	r3, [r1, #48]	; 0x30
   26ed4:	orr	r3, r3, #256	; 0x100
   26ed8:	str	r3, [r1, #48]	; 0x30
   26edc:	cmp	r4, r5
   26ee0:	bcs	26f9c <myhtml_tokenizer_state_cdata_section@@Base+0xf8>
   26ee4:	sub	r0, r4, #1
   26ee8:	add	r0, r2, r0
   26eec:	b	26f00 <myhtml_tokenizer_state_cdata_section@@Base+0x5c>
   26ef0:	add	r4, r4, #1
   26ef4:	mov	r0, r8
   26ef8:	cmp	r5, r4
   26efc:	beq	26f68 <myhtml_tokenizer_state_cdata_section@@Base+0xc4>
   26f00:	ldrb	r3, [r0, #1]
   26f04:	add	r8, r0, #1
   26f08:	cmp	r3, #62	; 0x3e
   26f0c:	bne	26ef0 <myhtml_tokenizer_state_cdata_section@@Base+0x4c>
   26f10:	cmp	r4, #1
   26f14:	sub	r0, r0, #1
   26f18:	bls	26f80 <myhtml_tokenizer_state_cdata_section@@Base+0xdc>
   26f1c:	ldrb	r3, [r0]
   26f20:	cmp	r3, #93	; 0x5d
   26f24:	bne	26ef0 <myhtml_tokenizer_state_cdata_section@@Base+0x4c>
   26f28:	ldrb	r3, [r0, #1]
   26f2c:	cmp	r3, #93	; 0x5d
   26f30:	bne	26ef0 <myhtml_tokenizer_state_cdata_section@@Base+0x4c>
   26f34:	ldr	ip, [r6, #192]	; 0xc0
   26f38:	add	r5, r4, #1
   26f3c:	ldr	r2, [r7, #24]
   26f40:	sub	r3, ip, #2
   26f44:	sub	r3, r3, r2
   26f48:	add	r4, r3, r4
   26f4c:	cmp	r4, #0
   26f50:	addeq	ip, ip, r5
   26f54:	str	r4, [r7, #28]
   26f58:	streq	ip, [r7, #24]
   26f5c:	bne	26fa4 <myhtml_tokenizer_state_cdata_section@@Base+0x100>
   26f60:	mov	r3, #0
   26f64:	str	r3, [r6, #160]	; 0xa0
   26f68:	mov	r0, r5
   26f6c:	ldrd	r4, [sp]
   26f70:	ldrd	r6, [sp, #8]
   26f74:	ldr	r8, [sp, #16]
   26f78:	add	sp, sp, #20
   26f7c:	pop	{pc}		; (ldr pc, [sp], #4)
   26f80:	ldr	r1, [r6, #192]	; 0xc0
   26f84:	mov	r2, #2
   26f88:	mov	r0, r6
   26f8c:	sub	r1, r1, #2
   26f90:	add	r1, r1, r4
   26f94:	bl	fe00 <myhtml_tree_incomming_buffer_make_data@plt>
   26f98:	b	26f1c <myhtml_tokenizer_state_cdata_section@@Base+0x78>
   26f9c:	mov	r5, r4
   26fa0:	b	26f68 <myhtml_tokenizer_state_cdata_section@@Base+0xc4>
   26fa4:	ldr	r3, [r7, #32]
   26fa8:	mov	r1, r5
   26fac:	mov	r2, r7
   26fb0:	mov	r0, r6
   26fb4:	sub	r3, ip, r3
   26fb8:	add	r3, r3, r5
   26fbc:	str	r3, [r7, #36]	; 0x24
   26fc0:	bl	ffc8 <myhtml_queue_add@plt>
   26fc4:	cmp	r0, #0
   26fc8:	movne	r3, #69	; 0x45
   26fcc:	movne	r5, #0
   26fd0:	strne	r3, [r6, #160]	; 0xa0
   26fd4:	beq	26f60 <myhtml_tokenizer_state_cdata_section@@Base+0xbc>
   26fd8:	b	26f68 <myhtml_tokenizer_state_cdata_section@@Base+0xc4>

00026fdc <myhtml_tokenizer_state_rcdata@@Base>:
   26fdc:	strd	r4, [sp, #-24]!	; 0xffffffe8
   26fe0:	mov	r4, r3
   26fe4:	mov	r5, r2
   26fe8:	ldr	r3, [r0, #60]	; 0x3c
   26fec:	strd	r6, [sp, #8]
   26ff0:	mov	r6, r0
   26ff4:	mov	r7, r1
   26ff8:	str	r8, [sp, #16]
   26ffc:	str	lr, [sp, #20]
   27000:	ldr	r8, [sp, #24]
   27004:	cmp	r3, #0
   27008:	beq	27080 <myhtml_tokenizer_state_rcdata@@Base+0xa4>
   2700c:	cmp	r4, r8
   27010:	bcs	270c8 <myhtml_tokenizer_state_rcdata@@Base+0xec>
   27014:	ldrb	r3, [r5, r4]
   27018:	add	ip, r5, r4
   2701c:	cmp	r3, #60	; 0x3c
   27020:	addne	r3, r5, r8
   27024:	rsbne	r2, r5, #1
   27028:	subne	r3, r3, #1
   2702c:	bne	27040 <myhtml_tokenizer_state_rcdata@@Base+0x64>
   27030:	b	27060 <myhtml_tokenizer_state_rcdata@@Base+0x84>
   27034:	ldrb	lr, [ip, #1]!
   27038:	cmp	lr, #60	; 0x3c
   2703c:	beq	27064 <myhtml_tokenizer_state_rcdata@@Base+0x88>
   27040:	cmp	ip, r3
   27044:	add	r0, r2, ip
   27048:	bne	27034 <myhtml_tokenizer_state_rcdata@@Base+0x58>
   2704c:	ldrd	r4, [sp]
   27050:	ldrd	r6, [sp, #8]
   27054:	ldr	r8, [sp, #16]
   27058:	add	sp, sp, #20
   2705c:	pop	{pc}		; (ldr pc, [sp], #4)
   27060:	mov	r0, r4
   27064:	ldr	r3, [r6, #192]	; 0xc0
   27068:	mov	r2, #10
   2706c:	add	r3, r3, r0
   27070:	add	r0, r0, #1
   27074:	str	r3, [r7, #32]
   27078:	str	r2, [r6, #160]	; 0xa0
   2707c:	b	2704c <myhtml_tokenizer_state_rcdata@@Base+0x70>
   27080:	ldr	r3, [r6, #192]	; 0xc0
   27084:	ldr	r0, [r0, #68]	; 0x44
   27088:	add	r3, r3, r4
   2708c:	str	r3, [r1, #24]
   27090:	bl	fc8c <mythread_queue_get_prev_node@plt>
   27094:	cmp	r0, #0
   27098:	beq	270b4 <myhtml_tokenizer_state_rcdata@@Base+0xd8>
   2709c:	ldr	r3, [r0, #4]
   270a0:	cmp	r3, #0
   270a4:	beq	270b4 <myhtml_tokenizer_state_rcdata@@Base+0xd8>
   270a8:	ldr	r3, [r3]
   270ac:	str	r3, [r6, #60]	; 0x3c
   270b0:	b	2700c <myhtml_tokenizer_state_rcdata@@Base+0x30>
   270b4:	ldr	r3, [r6, #88]	; 0x58
   270b8:	cmp	r3, #0
   270bc:	ldrne	r3, [r3, #4]
   270c0:	strne	r3, [r6, #60]	; 0x3c
   270c4:	b	2700c <myhtml_tokenizer_state_rcdata@@Base+0x30>
   270c8:	mov	r0, r4
   270cc:	b	2704c <myhtml_tokenizer_state_rcdata@@Base+0x70>

000270d0 <myhtml_tokenizer_state_rawtext@@Base>:
   270d0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   270d4:	mov	r4, r3
   270d8:	mov	r5, r2
   270dc:	ldr	r3, [r0, #60]	; 0x3c
   270e0:	strd	r6, [sp, #8]
   270e4:	mov	r6, r0
   270e8:	mov	r7, r1
   270ec:	str	r8, [sp, #16]
   270f0:	str	lr, [sp, #20]
   270f4:	ldr	r8, [sp, #24]
   270f8:	cmp	r3, #0
   270fc:	beq	27174 <myhtml_tokenizer_state_rawtext@@Base+0xa4>
   27100:	cmp	r4, r8
   27104:	bcs	271bc <myhtml_tokenizer_state_rawtext@@Base+0xec>
   27108:	ldrb	r3, [r5, r4]
   2710c:	add	ip, r5, r4
   27110:	cmp	r3, #60	; 0x3c
   27114:	addne	r3, r5, r8
   27118:	rsbne	r2, r5, #1
   2711c:	subne	r3, r3, #1
   27120:	bne	27134 <myhtml_tokenizer_state_rawtext@@Base+0x64>
   27124:	b	27154 <myhtml_tokenizer_state_rawtext@@Base+0x84>
   27128:	ldrb	lr, [ip, #1]!
   2712c:	cmp	lr, #60	; 0x3c
   27130:	beq	27158 <myhtml_tokenizer_state_rawtext@@Base+0x88>
   27134:	cmp	ip, r3
   27138:	add	r0, r2, ip
   2713c:	bne	27128 <myhtml_tokenizer_state_rawtext@@Base+0x58>
   27140:	ldrd	r4, [sp]
   27144:	ldrd	r6, [sp, #8]
   27148:	ldr	r8, [sp, #16]
   2714c:	add	sp, sp, #20
   27150:	pop	{pc}		; (ldr pc, [sp], #4)
   27154:	mov	r0, r4
   27158:	ldr	r3, [r6, #192]	; 0xc0
   2715c:	mov	r2, #13
   27160:	add	r3, r3, r0
   27164:	add	r0, r0, #1
   27168:	str	r3, [r7, #32]
   2716c:	str	r2, [r6, #160]	; 0xa0
   27170:	b	27140 <myhtml_tokenizer_state_rawtext@@Base+0x70>
   27174:	ldr	r3, [r6, #192]	; 0xc0
   27178:	ldr	r0, [r0, #68]	; 0x44
   2717c:	add	r3, r3, r4
   27180:	str	r3, [r1, #24]
   27184:	bl	fc8c <mythread_queue_get_prev_node@plt>
   27188:	cmp	r0, #0
   2718c:	beq	271a8 <myhtml_tokenizer_state_rawtext@@Base+0xd8>
   27190:	ldr	r3, [r0, #4]
   27194:	cmp	r3, #0
   27198:	beq	271a8 <myhtml_tokenizer_state_rawtext@@Base+0xd8>
   2719c:	ldr	r3, [r3]
   271a0:	str	r3, [r6, #60]	; 0x3c
   271a4:	b	27100 <myhtml_tokenizer_state_rawtext@@Base+0x30>
   271a8:	ldr	r3, [r6, #88]	; 0x58
   271ac:	cmp	r3, #0
   271b0:	ldrne	r3, [r3, #4]
   271b4:	strne	r3, [r6, #60]	; 0x3c
   271b8:	b	27100 <myhtml_tokenizer_state_rawtext@@Base+0x30>
   271bc:	mov	r0, r4
   271c0:	b	27140 <myhtml_tokenizer_state_rawtext@@Base+0x70>

000271c4 <myhtml_tokenizer_state_attribute_value_double_quoted@@Base>:
   271c4:	strd	r4, [sp, #-16]!
   271c8:	ldr	ip, [sp, #16]
   271cc:	str	r6, [sp, #8]
   271d0:	str	lr, [sp, #12]
   271d4:	cmp	r3, ip
   271d8:	bcs	27278 <myhtml_tokenizer_state_attribute_value_double_quoted@@Base+0xb4>
   271dc:	ldrb	lr, [r2, r3]
   271e0:	add	r1, r2, r3
   271e4:	cmp	lr, #34	; 0x22
   271e8:	subne	r3, r2, #1
   271ec:	rsbne	r2, r2, #1
   271f0:	addne	r3, r3, ip
   271f4:	bne	27208 <myhtml_tokenizer_state_attribute_value_double_quoted@@Base+0x44>
   271f8:	b	27228 <myhtml_tokenizer_state_attribute_value_double_quoted@@Base+0x64>
   271fc:	ldrb	ip, [r1, #1]!
   27200:	cmp	ip, #34	; 0x22
   27204:	beq	2722c <myhtml_tokenizer_state_attribute_value_double_quoted@@Base+0x68>
   27208:	cmp	r1, r3
   2720c:	add	r4, r2, r1
   27210:	bne	271fc <myhtml_tokenizer_state_attribute_value_double_quoted@@Base+0x38>
   27214:	mov	r0, r4
   27218:	ldrd	r4, [sp]
   2721c:	ldr	r6, [sp, #8]
   27220:	add	sp, sp, #12
   27224:	pop	{pc}		; (ldr pc, [sp], #4)
   27228:	mov	r4, r3
   2722c:	ldr	r1, [r0, #8]
   27230:	mov	r5, r0
   27234:	ldr	r2, [r0, #56]	; 0x38
   27238:	ldr	r3, [r0, #192]	; 0xc0
   2723c:	mov	r0, r1
   27240:	ldr	r1, [r1, #16]
   27244:	ldr	ip, [r2, #56]	; 0x38
   27248:	sub	r3, r3, ip
   2724c:	add	r3, r3, r4
   27250:	str	r3, [r2, #60]	; 0x3c
   27254:	bl	10898 <myhtml_token_attr_create@plt>
   27258:	cmp	r0, #0
   2725c:	str	r0, [r5, #56]	; 0x38
   27260:	moveq	r3, #69	; 0x45
   27264:	movne	r3, #41	; 0x29
   27268:	moveq	r4, r0
   2726c:	addne	r4, r4, #1
   27270:	str	r3, [r5, #160]	; 0xa0
   27274:	b	27214 <myhtml_tokenizer_state_attribute_value_double_quoted@@Base+0x50>
   27278:	mov	r4, r3
   2727c:	b	27214 <myhtml_tokenizer_state_attribute_value_double_quoted@@Base+0x50>

00027280 <myhtml_tokenizer_state_attribute_value_single_quoted@@Base>:
   27280:	strd	r4, [sp, #-16]!
   27284:	ldr	ip, [sp, #16]
   27288:	str	r6, [sp, #8]
   2728c:	str	lr, [sp, #12]
   27290:	cmp	r3, ip
   27294:	bcs	27334 <myhtml_tokenizer_state_attribute_value_single_quoted@@Base+0xb4>
   27298:	ldrb	lr, [r2, r3]
   2729c:	add	r1, r2, r3
   272a0:	cmp	lr, #39	; 0x27
   272a4:	subne	r3, r2, #1
   272a8:	rsbne	r2, r2, #1
   272ac:	addne	r3, r3, ip
   272b0:	bne	272c4 <myhtml_tokenizer_state_attribute_value_single_quoted@@Base+0x44>
   272b4:	b	272e4 <myhtml_tokenizer_state_attribute_value_single_quoted@@Base+0x64>
   272b8:	ldrb	ip, [r1, #1]!
   272bc:	cmp	ip, #39	; 0x27
   272c0:	beq	272e8 <myhtml_tokenizer_state_attribute_value_single_quoted@@Base+0x68>
   272c4:	cmp	r1, r3
   272c8:	add	r4, r2, r1
   272cc:	bne	272b8 <myhtml_tokenizer_state_attribute_value_single_quoted@@Base+0x38>
   272d0:	mov	r0, r4
   272d4:	ldrd	r4, [sp]
   272d8:	ldr	r6, [sp, #8]
   272dc:	add	sp, sp, #12
   272e0:	pop	{pc}		; (ldr pc, [sp], #4)
   272e4:	mov	r4, r3
   272e8:	ldr	r1, [r0, #8]
   272ec:	mov	r5, r0
   272f0:	ldr	r2, [r0, #56]	; 0x38
   272f4:	ldr	r3, [r0, #192]	; 0xc0
   272f8:	mov	r0, r1
   272fc:	ldr	r1, [r1, #16]
   27300:	ldr	ip, [r2, #56]	; 0x38
   27304:	sub	r3, r3, ip
   27308:	add	r3, r3, r4
   2730c:	str	r3, [r2, #60]	; 0x3c
   27310:	bl	10898 <myhtml_token_attr_create@plt>
   27314:	cmp	r0, #0
   27318:	str	r0, [r5, #56]	; 0x38
   2731c:	moveq	r3, #69	; 0x45
   27320:	movne	r3, #41	; 0x29
   27324:	moveq	r4, r0
   27328:	addne	r4, r4, #1
   2732c:	str	r3, [r5, #160]	; 0xa0
   27330:	b	272d0 <myhtml_tokenizer_state_attribute_value_single_quoted@@Base+0x50>
   27334:	mov	r4, r3
   27338:	b	272d0 <myhtml_tokenizer_state_attribute_value_single_quoted@@Base+0x50>

0002733c <myhtml_tokenizer_state_comment_start_dash@@Base>:
   2733c:	strd	r4, [sp, #-16]!
   27340:	add	r5, r3, #1
   27344:	mov	r4, r0
   27348:	str	r6, [sp, #8]
   2734c:	str	lr, [sp, #12]
   27350:	mov	lr, #2
   27354:	str	lr, [r1]
   27358:	ldrb	r3, [r2, r3]
   2735c:	cmp	r3, #45	; 0x2d
   27360:	moveq	r3, #49	; 0x31
   27364:	streq	r3, [r0, #160]	; 0xa0
   27368:	beq	2737c <myhtml_tokenizer_state_comment_start_dash@@Base+0x40>
   2736c:	cmp	r3, #62	; 0x3e
   27370:	movne	r3, #47	; 0x2f
   27374:	strne	r3, [r0, #160]	; 0xa0
   27378:	beq	27390 <myhtml_tokenizer_state_comment_start_dash@@Base+0x54>
   2737c:	mov	r0, r5
   27380:	ldrd	r4, [sp]
   27384:	ldr	r6, [sp, #8]
   27388:	add	sp, sp, #12
   2738c:	pop	{pc}		; (ldr pc, [sp], #4)
   27390:	ldr	ip, [r0, #192]	; 0xc0
   27394:	mov	r3, r1
   27398:	mov	r2, r1
   2739c:	mov	r6, #0
   273a0:	ldr	r1, [r1, #32]
   273a4:	str	r6, [r3, #28]
   273a8:	add	ip, r5, ip
   273ac:	sub	ip, ip, r1
   273b0:	mov	r1, r5
   273b4:	str	ip, [r3, #36]	; 0x24
   273b8:	bl	ffc8 <myhtml_queue_add@plt>
   273bc:	cmp	r0, #0
   273c0:	movne	r3, #69	; 0x45
   273c4:	movne	r5, r6
   273c8:	streq	r0, [r4, #160]	; 0xa0
   273cc:	strne	r3, [r4, #160]	; 0xa0
   273d0:	b	2737c <myhtml_tokenizer_state_comment_start_dash@@Base+0x40>

000273d4 <myhtml_tokenizer_state_comment_end@@Base>:
   273d4:	strd	r4, [sp, #-16]!
   273d8:	add	r4, r3, #1
   273dc:	str	r6, [sp, #8]
   273e0:	str	lr, [sp, #12]
   273e4:	ldrb	r2, [r2, r3]
   273e8:	cmp	r2, #62	; 0x3e
   273ec:	beq	27420 <myhtml_tokenizer_state_comment_end@@Base+0x4c>
   273f0:	cmp	r2, #33	; 0x21
   273f4:	moveq	r3, #50	; 0x32
   273f8:	streq	r3, [r0, #160]	; 0xa0
   273fc:	beq	2740c <myhtml_tokenizer_state_comment_end@@Base+0x38>
   27400:	cmp	r2, #45	; 0x2d
   27404:	movne	r3, #47	; 0x2f
   27408:	strne	r3, [r0, #160]	; 0xa0
   2740c:	mov	r0, r4
   27410:	ldrd	r4, [sp]
   27414:	ldr	r6, [sp, #8]
   27418:	add	sp, sp, #12
   2741c:	pop	{pc}		; (ldr pc, [sp], #4)
   27420:	ldr	r2, [r1, #24]
   27424:	mov	r5, r0
   27428:	ldr	ip, [r0, #192]	; 0xc0
   2742c:	sub	r2, ip, r2
   27430:	add	r3, r2, r3
   27434:	cmp	r3, #1
   27438:	subhi	r2, r3, #2
   2743c:	mov	r3, r1
   27440:	ldr	lr, [r3, #32]
   27444:	movls	r2, #0
   27448:	mov	r1, r4
   2744c:	str	r2, [r3, #28]
   27450:	mov	r2, r3
   27454:	sub	ip, ip, lr
   27458:	add	ip, ip, r4
   2745c:	str	ip, [r3, #36]	; 0x24
   27460:	bl	ffc8 <myhtml_queue_add@plt>
   27464:	cmp	r0, #0
   27468:	movne	r3, #69	; 0x45
   2746c:	movne	r4, #0
   27470:	streq	r0, [r5, #160]	; 0xa0
   27474:	strne	r3, [r5, #160]	; 0xa0
   27478:	b	2740c <myhtml_tokenizer_state_comment_end@@Base+0x38>

0002747c <myhtml_tokenizer_state_comment_end_bang@@Base>:
   2747c:	strd	r4, [sp, #-16]!
   27480:	add	r5, r3, #1
   27484:	mov	r4, r0
   27488:	str	r6, [sp, #8]
   2748c:	str	lr, [sp, #12]
   27490:	ldrb	lr, [r2, r3]
   27494:	cmp	lr, #62	; 0x3e
   27498:	beq	274c0 <myhtml_tokenizer_state_comment_end_bang@@Base+0x44>
   2749c:	cmp	lr, #45	; 0x2d
   274a0:	moveq	r3, #48	; 0x30
   274a4:	movne	r3, #47	; 0x2f
   274a8:	str	r3, [r0, #160]	; 0xa0
   274ac:	mov	r0, r5
   274b0:	ldrd	r4, [sp]
   274b4:	ldr	r6, [sp, #8]
   274b8:	add	sp, sp, #12
   274bc:	pop	{pc}		; (ldr pc, [sp], #4)
   274c0:	ldr	r2, [r0, #192]	; 0xc0
   274c4:	mov	ip, r1
   274c8:	ldr	lr, [r1, #24]
   274cc:	ldr	r1, [r1, #32]
   274d0:	add	r3, r3, r2
   274d4:	sub	r6, r3, #3
   274d8:	cmp	r6, lr
   274dc:	sub	r2, r2, r1
   274e0:	add	r1, r2, r5
   274e4:	bcc	2751c <myhtml_tokenizer_state_comment_end_bang@@Base+0xa0>
   274e8:	sub	r3, r3, lr
   274ec:	mov	r2, ip
   274f0:	str	r1, [ip, #36]	; 0x24
   274f4:	sub	r3, r3, #3
   274f8:	mov	r1, r5
   274fc:	str	r3, [ip, #28]
   27500:	bl	ffc8 <myhtml_queue_add@plt>
   27504:	cmp	r0, #0
   27508:	beq	2753c <myhtml_tokenizer_state_comment_end_bang@@Base+0xc0>
   2750c:	mov	r3, #69	; 0x45
   27510:	mov	r5, #0
   27514:	str	r3, [r4, #160]	; 0xa0
   27518:	b	274ac <myhtml_tokenizer_state_comment_end_bang@@Base+0x30>
   2751c:	mov	r3, #0
   27520:	mov	r2, ip
   27524:	str	r3, [ip, #28]
   27528:	str	r1, [ip, #36]	; 0x24
   2752c:	mov	r1, r5
   27530:	bl	ffc8 <myhtml_queue_add@plt>
   27534:	cmp	r0, #0
   27538:	bne	2750c <myhtml_tokenizer_state_comment_end_bang@@Base+0x90>
   2753c:	mov	r3, #0
   27540:	str	r3, [r4, #160]	; 0xa0
   27544:	b	274ac <myhtml_tokenizer_state_comment_end_bang@@Base+0x30>

00027548 <myhtml_tokenizer_state_markup_declaration_open@@Base>:
   27548:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2754c:	mov	ip, r0
   27550:	ldr	r4, [sp, #24]
   27554:	ldr	r2, [r0, #192]	; 0xc0
   27558:	strd	r6, [sp, #8]
   2755c:	str	lr, [sp, #20]
   27560:	ldr	lr, [r1, #24]
   27564:	str	r8, [sp, #16]
   27568:	add	r2, r4, r2
   2756c:	add	r5, lr, #2
   27570:	cmp	r5, r2
   27574:	bls	27598 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x50>
   27578:	ldr	r2, [ip, #76]	; 0x4c
   2757c:	mov	r0, r4
   27580:	str	r3, [r2, #4]
   27584:	ldrd	r4, [sp]
   27588:	ldrd	r6, [sp, #8]
   2758c:	ldr	r8, [sp, #16]
   27590:	add	sp, sp, #20
   27594:	pop	{pc}		; (ldr pc, [sp], #4)
   27598:	mov	r6, r1
   2759c:	mov	r2, #2
   275a0:	mov	r1, lr
   275a4:	mov	r7, r3
   275a8:	mov	r5, r0
   275ac:	bl	fe00 <myhtml_tree_incomming_buffer_make_data@plt>
   275b0:	ldrb	r3, [r0]
   275b4:	cmp	r3, #45	; 0x2d
   275b8:	beq	276f4 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x1ac>
   275bc:	ldr	r3, [r5, #192]	; 0xc0
   275c0:	add	r3, r4, r3
   275c4:	ldr	r1, [r6, #24]
   275c8:	add	r2, r1, #7
   275cc:	cmp	r2, r3
   275d0:	bls	275e4 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x9c>
   275d4:	ldr	r3, [r5, #76]	; 0x4c
   275d8:	mov	r0, r4
   275dc:	str	r7, [r3, #4]
   275e0:	b	27584 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x3c>
   275e4:	mov	r2, #7
   275e8:	mov	r0, r5
   275ec:	bl	fe00 <myhtml_tree_incomming_buffer_make_data@plt>
   275f0:	ldr	r1, [pc, #296]	; 27720 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x1d8>
   275f4:	mov	r2, #7
   275f8:	mov	r4, r0
   275fc:	add	r1, pc, r1
   27600:	bl	10238 <mycore_strncasecmp@plt>
   27604:	cmp	r0, #0
   27608:	beq	276ac <myhtml_tokenizer_state_markup_declaration_open@@Base+0x164>
   2760c:	ldr	r1, [pc, #272]	; 27724 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x1dc>
   27610:	mov	r0, r4
   27614:	mov	r2, #7
   27618:	add	r1, pc, r1
   2761c:	bl	10f28 <strncmp@plt>
   27620:	subs	r8, r0, #0
   27624:	bne	276dc <myhtml_tokenizer_state_markup_declaration_open@@Base+0x194>
   27628:	ldr	r3, [r5, #68]	; 0x44
   2762c:	ldr	r3, [r3, #8]
   27630:	cmp	r3, #0
   27634:	beq	276dc <myhtml_tokenizer_state_markup_declaration_open@@Base+0x194>
   27638:	ldr	r1, [r3, #4]
   2763c:	cmp	r1, #0
   27640:	beq	276dc <myhtml_tokenizer_state_markup_declaration_open@@Base+0x194>
   27644:	mov	r0, r5
   27648:	bl	fc80 <myhtml_tree_wait_for_last_done_token@plt>
   2764c:	mov	r0, r5
   27650:	bl	10cdc <myhtml_tree_adjusted_current_node@plt>
   27654:	cmp	r0, #0
   27658:	beq	276dc <myhtml_tokenizer_state_markup_declaration_open@@Base+0x194>
   2765c:	ldr	r3, [r0, #8]
   27660:	cmp	r3, #1
   27664:	beq	276dc <myhtml_tokenizer_state_markup_declaration_open@@Base+0x194>
   27668:	ldr	ip, [r5, #76]	; 0x4c
   2766c:	mov	r2, #67	; 0x43
   27670:	mov	r1, #1
   27674:	ldr	r3, [r6, #48]	; 0x30
   27678:	ldr	r0, [r6, #48]	; 0x30
   2767c:	ldr	r4, [ip, #12]
   27680:	str	r2, [r5, #160]	; 0xa0
   27684:	and	r3, r3, #8
   27688:	ldr	r2, [r6, #24]
   2768c:	eor	r3, r3, r0
   27690:	str	r1, [r6]
   27694:	str	r8, [r6, #28]
   27698:	str	r3, [r6, #48]	; 0x30
   2769c:	add	r2, r2, #7
   276a0:	sub	r0, r2, r4
   276a4:	str	r2, [r6, #24]
   276a8:	b	27584 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x3c>
   276ac:	ldr	r1, [r5, #76]	; 0x4c
   276b0:	mov	r2, #51	; 0x33
   276b4:	mov	r3, #7
   276b8:	ldr	r4, [r6, #24]
   276bc:	ldr	r0, [r1, #12]
   276c0:	str	r2, [r5, #160]	; 0xa0
   276c4:	mov	r2, #3
   276c8:	add	r4, r4, r3
   276cc:	str	r2, [r6]
   276d0:	str	r3, [r6, #28]
   276d4:	sub	r0, r4, r0
   276d8:	b	27584 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x3c>
   276dc:	mov	r2, #0
   276e0:	mov	r3, #43	; 0x2b
   276e4:	mov	r0, r7
   276e8:	str	r2, [r6, #28]
   276ec:	str	r3, [r5, #160]	; 0xa0
   276f0:	b	27584 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x3c>
   276f4:	ldrb	r2, [r0, #1]
   276f8:	ldr	r3, [r5, #192]	; 0xc0
   276fc:	cmp	r2, #45	; 0x2d
   27700:	bne	275c0 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x78>
   27704:	add	r0, r7, #2
   27708:	mov	r1, #0
   2770c:	str	r2, [r5, #160]	; 0xa0
   27710:	add	r3, r0, r3
   27714:	str	r3, [r6, #24]
   27718:	str	r1, [r6, #28]
   2771c:	b	27584 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x3c>
   27720:	andeq	r8, sp, r4, asr #12
   27724:	andeq	r8, sp, r0, lsr r6

00027728 <myhtml_tokenizer_state_comment_start@@Base>:
   27728:	strd	r4, [sp, #-16]!
   2772c:	add	r5, r3, #1
   27730:	mov	r4, r0
   27734:	str	r6, [sp, #8]
   27738:	str	lr, [sp, #12]
   2773c:	mov	lr, #2
   27740:	str	lr, [r1]
   27744:	ldrb	r3, [r2, r3]
   27748:	cmp	r3, #45	; 0x2d
   2774c:	moveq	r3, #46	; 0x2e
   27750:	streq	r3, [r0, #160]	; 0xa0
   27754:	beq	27768 <myhtml_tokenizer_state_comment_start@@Base+0x40>
   27758:	cmp	r3, #62	; 0x3e
   2775c:	movne	r3, #47	; 0x2f
   27760:	strne	r3, [r0, #160]	; 0xa0
   27764:	beq	2777c <myhtml_tokenizer_state_comment_start@@Base+0x54>
   27768:	mov	r0, r5
   2776c:	ldrd	r4, [sp]
   27770:	ldr	r6, [sp, #8]
   27774:	add	sp, sp, #12
   27778:	pop	{pc}		; (ldr pc, [sp], #4)
   2777c:	ldr	ip, [r0, #192]	; 0xc0
   27780:	mov	r3, r1
   27784:	mov	r2, r1
   27788:	mov	r6, #0
   2778c:	ldr	r1, [r1, #32]
   27790:	str	r6, [r3, #28]
   27794:	add	ip, r5, ip
   27798:	sub	ip, ip, r1
   2779c:	mov	r1, r5
   277a0:	str	ip, [r3, #36]	; 0x24
   277a4:	bl	ffc8 <myhtml_queue_add@plt>
   277a8:	cmp	r0, #0
   277ac:	movne	r3, #69	; 0x45
   277b0:	movne	r5, r6
   277b4:	streq	r0, [r4, #160]	; 0xa0
   277b8:	strne	r3, [r4, #160]	; 0xa0
   277bc:	b	27768 <myhtml_tokenizer_state_comment_start@@Base+0x40>

000277c0 <myhtml_tokenizer_set_first_settings@@Base>:
   277c0:	str	r4, [sp, #-8]!
   277c4:	mov	r4, r0
   277c8:	ldr	r0, [r0, #24]
   277cc:	str	lr, [sp, #4]
   277d0:	bl	10130 <mythread_queue_get_current_node@plt>
   277d4:	str	r0, [r4, #68]	; 0x44
   277d8:	bl	10d0c <mythread_queue_node_clean@plt>
   277dc:	ldr	r3, [r4, #8]
   277e0:	ldr	r2, [r4, #68]	; 0x44
   277e4:	mov	r0, r3
   277e8:	ldr	r1, [r3, #12]
   277ec:	str	r4, [r2]
   277f0:	bl	109a0 <myhtml_token_node_create@plt>
   277f4:	cmp	r0, #0
   277f8:	str	r0, [r4, #64]	; 0x40
   277fc:	ldrne	r3, [r4, #76]	; 0x4c
   27800:	movne	r0, #0
   27804:	moveq	r0, #2
   27808:	strne	r3, [r4, #80]	; 0x50
   2780c:	ldr	r4, [sp]
   27810:	add	sp, sp, #4
   27814:	pop	{pc}		; (ldr pc, [sp], #4)

00027818 <myhtml_tokenizer_fragment_init@@Base>:
   27818:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2781c:	mov	r4, r0
   27820:	strd	r6, [sp, #8]
   27824:	mov	r7, r2
   27828:	mov	r6, r1
   2782c:	str	r8, [sp, #16]
   27830:	str	lr, [sp, #20]
   27834:	bl	ff80 <myhtml_tree_node_create@plt>
   27838:	cmp	r7, #1
   2783c:	mov	r5, r0
   27840:	str	r0, [r4, #88]	; 0x58
   27844:	strd	r6, [r0, #4]
   27848:	beq	278bc <myhtml_tokenizer_fragment_init@@Base+0xa4>
   2784c:	ldr	r3, [r4, #8]
   27850:	mov	r0, r3
   27854:	ldr	r1, [r3, #12]
   27858:	bl	109a0 <myhtml_token_node_create@plt>
   2785c:	ldr	r3, [r4, #88]	; 0x58
   27860:	str	r0, [r5, #32]
   27864:	ldr	r0, [r3, #32]
   27868:	cmp	r0, #0
   2786c:	beq	2794c <myhtml_tokenizer_fragment_init@@Base+0x134>
   27870:	bl	104e4 <myhtml_token_set_done@plt>
   27874:	ldr	r3, [r4, #88]	; 0x58
   27878:	mov	r2, #1
   2787c:	mov	r1, #0
   27880:	mov	r0, r4
   27884:	ldr	r3, [r3, #32]
   27888:	str	r3, [r4, #156]	; 0x9c
   2788c:	bl	fba8 <myhtml_tree_node_insert_root@plt>
   27890:	cmp	r6, #128	; 0x80
   27894:	mov	r5, r0
   27898:	beq	2793c <myhtml_tokenizer_fragment_init@@Base+0x124>
   2789c:	mov	r0, r4
   278a0:	bl	106c4 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   278a4:	mov	r0, r5
   278a8:	ldrd	r4, [sp]
   278ac:	ldrd	r6, [sp, #8]
   278b0:	ldr	r8, [sp, #16]
   278b4:	add	sp, sp, #20
   278b8:	pop	{pc}		; (ldr pc, [sp], #4)
   278bc:	cmp	r6, #93	; 0x5d
   278c0:	bne	27920 <myhtml_tokenizer_fragment_init@@Base+0x108>
   278c4:	ldr	r3, [r4, #180]	; 0xb4
   278c8:	ands	r3, r3, #1
   278cc:	movne	r3, #4
   278d0:	str	r3, [r4, #160]	; 0xa0
   278d4:	ldr	r3, [r4, #8]
   278d8:	mov	r0, r3
   278dc:	ldr	r1, [r3, #12]
   278e0:	bl	109a0 <myhtml_token_node_create@plt>
   278e4:	ldr	r3, [r4, #88]	; 0x58
   278e8:	str	r0, [r5, #32]
   278ec:	ldr	r0, [r3, #32]
   278f0:	cmp	r0, #0
   278f4:	beq	2794c <myhtml_tokenizer_fragment_init@@Base+0x134>
   278f8:	bl	104e4 <myhtml_token_set_done@plt>
   278fc:	ldr	r3, [r4, #88]	; 0x58
   27900:	mov	r2, #1
   27904:	mov	r1, #0
   27908:	mov	r0, r4
   2790c:	ldr	r3, [r3, #32]
   27910:	str	r3, [r4, #156]	; 0x9c
   27914:	bl	fba8 <myhtml_tree_node_insert_root@plt>
   27918:	mov	r5, r0
   2791c:	b	2789c <myhtml_tokenizer_fragment_init@@Base+0x84>
   27920:	mov	r1, r6
   27924:	ldr	r0, [r4, #28]
   27928:	bl	109b8 <myhtml_tag_get_by_id@plt>
   2792c:	ldr	r3, [r0, #12]
   27930:	ldr	r5, [r4, #88]	; 0x58
   27934:	str	r3, [r4, #160]	; 0xa0
   27938:	b	2784c <myhtml_tokenizer_fragment_init@@Base+0x34>
   2793c:	mov	r1, #17
   27940:	mov	r0, r4
   27944:	bl	ff50 <myhtml_tree_template_insertion_append@plt>
   27948:	b	2789c <myhtml_tokenizer_fragment_init@@Base+0x84>
   2794c:	mov	r5, #0
   27950:	b	278a4 <myhtml_tokenizer_fragment_init@@Base+0x8c>

00027954 <myhtml_tokenizer_wait@@Base>:
   27954:	ldr	r2, [r0]
   27958:	mov	r3, r0
   2795c:	ldr	r0, [r2]
   27960:	cmp	r0, #0
   27964:	beq	27970 <myhtml_tokenizer_wait@@Base+0x1c>
   27968:	ldr	r1, [r3, #20]
   2796c:	b	10910 <mythread_queue_list_entry_wait_for_done@plt>
   27970:	bx	lr

00027974 <myhtml_tokenizer_post@@Base>:
   27974:	ldr	r3, [r0]
   27978:	ldr	r2, [r3]
   2797c:	cmp	r2, #0
   27980:	beq	279cc <myhtml_tokenizer_post@@Base+0x58>
   27984:	mov	r1, #0
   27988:	str	r4, [sp, #-8]!
   2798c:	mov	r4, r0
   27990:	mov	r0, r2
   27994:	str	lr, [sp, #4]
   27998:	bl	10454 <mythread_resume@plt>
   2799c:	ldr	r3, [r4]
   279a0:	ldr	r0, [r3, #4]
   279a4:	cmp	r0, #0
   279a8:	beq	279c0 <myhtml_tokenizer_post@@Base+0x4c>
   279ac:	mov	r1, #0
   279b0:	ldr	r4, [sp]
   279b4:	ldr	lr, [sp, #4]
   279b8:	add	sp, sp, #8
   279bc:	b	10454 <mythread_resume@plt>
   279c0:	ldr	r4, [sp]
   279c4:	add	sp, sp, #4
   279c8:	pop	{pc}		; (ldr pc, [sp], #4)
   279cc:	ldr	r0, [r3, #4]
   279d0:	cmp	r0, #0
   279d4:	bxeq	lr
   279d8:	mov	r1, #0
   279dc:	b	10454 <mythread_resume@plt>

000279e0 <myhtml_tokenizer_chunk_process@@Base>:
   279e0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   279e4:	mov	r5, r2
   279e8:	mov	r4, r0
   279ec:	strd	r6, [sp, #8]
   279f0:	mov	r2, r1
   279f4:	mov	r3, r5
   279f8:	ldr	r6, [r0]
   279fc:	mov	r7, r1
   27a00:	str	r8, [sp, #16]
   27a04:	str	lr, [sp, #20]
   27a08:	sub	sp, sp, #16
   27a0c:	ldr	r1, [r0, #72]	; 0x48
   27a10:	ldr	r0, [r0, #76]	; 0x4c
   27a14:	ldr	r8, [r6, #24]
   27a18:	bl	10034 <mycore_incoming_buffer_add@plt>
   27a1c:	ldr	r3, [r6, #32]
   27a20:	str	r0, [r4, #76]	; 0x4c
   27a24:	tst	r3, #1
   27a28:	beq	27a38 <myhtml_tokenizer_chunk_process@@Base+0x58>
   27a2c:	ldr	r3, [r4, #180]	; 0xb4
   27a30:	orr	r3, r3, #16
   27a34:	str	r3, [r4, #180]	; 0xb4
   27a38:	ldr	r3, [r4, #180]	; 0xb4
   27a3c:	tst	r3, #16
   27a40:	bne	27a58 <myhtml_tokenizer_chunk_process@@Base+0x78>
   27a44:	ldr	r2, [r4, #20]
   27a48:	cmp	r2, #0
   27a4c:	beq	27ac4 <myhtml_tokenizer_chunk_process@@Base+0xe4>
   27a50:	mov	r0, r4
   27a54:	bl	10244 <myhtml_tokenizer_post@plt>
   27a58:	ldr	r3, [r4, #68]	; 0x44
   27a5c:	cmp	r3, #0
   27a60:	beq	27b04 <myhtml_tokenizer_chunk_process@@Base+0x124>
   27a64:	cmp	r5, #0
   27a68:	movne	r3, #0
   27a6c:	beq	27a98 <myhtml_tokenizer_chunk_process@@Base+0xb8>
   27a70:	ldr	ip, [r4, #160]	; 0xa0
   27a74:	mov	r2, r7
   27a78:	mov	r0, r4
   27a7c:	str	r5, [sp]
   27a80:	ldr	r1, [r4, #64]	; 0x40
   27a84:	ldr	r6, [r8, ip, lsl #2]
   27a88:	blx	r6
   27a8c:	cmp	r5, r0
   27a90:	mov	r3, r0
   27a94:	bhi	27a70 <myhtml_tokenizer_chunk_process@@Base+0x90>
   27a98:	ldr	r3, [r4, #192]	; 0xc0
   27a9c:	mov	r2, #0
   27aa0:	add	r5, r3, r5
   27aa4:	str	r5, [r4, #192]	; 0xc0
   27aa8:	mov	r0, r2
   27aac:	add	sp, sp, #16
   27ab0:	ldrd	r4, [sp]
   27ab4:	ldrd	r6, [sp, #8]
   27ab8:	ldr	r8, [sp, #16]
   27abc:	add	sp, sp, #20
   27ac0:	pop	{pc}		; (ldr pc, [sp], #4)
   27ac4:	mov	r0, r6
   27ac8:	str	r2, [sp, #12]
   27acc:	add	ip, sp, #12
   27ad0:	ldr	r2, [r0], #8
   27ad4:	mov	r1, #2
   27ad8:	ldr	r3, [r4, #24]
   27adc:	ldr	r2, [r2, #16]
   27ae0:	str	ip, [sp, #4]
   27ae4:	ldr	ip, [r6, #20]
   27ae8:	str	ip, [sp]
   27aec:	bl	10124 <mythread_queue_list_entry_push@plt>
   27af0:	ldr	r2, [sp, #12]
   27af4:	str	r0, [r4, #20]
   27af8:	cmp	r2, #0
   27afc:	beq	27a50 <myhtml_tokenizer_chunk_process@@Base+0x70>
   27b00:	b	27aa8 <myhtml_tokenizer_chunk_process@@Base+0xc8>
   27b04:	mov	r2, r5
   27b08:	mov	r1, r7
   27b0c:	mov	r0, r4
   27b10:	bl	1058c <myhtml_tokenizer_set_first_settings@plt>
   27b14:	subs	r2, r0, #0
   27b18:	beq	27a64 <myhtml_tokenizer_chunk_process@@Base+0x84>
   27b1c:	b	27aa8 <myhtml_tokenizer_chunk_process@@Base+0xc8>

00027b20 <myhtml_tokenizer_chunk_with_stream_buffer@@Base>:
   27b20:	strd	r4, [sp, #-36]!	; 0xffffffdc
   27b24:	mov	r5, r2
   27b28:	strd	r6, [sp, #8]
   27b2c:	mov	r7, r0
   27b30:	strd	r8, [sp, #16]
   27b34:	strd	sl, [sp, #24]
   27b38:	mov	fp, r1
   27b3c:	str	lr, [sp, #32]
   27b40:	sub	sp, sp, #12
   27b44:	ldr	r0, [r0, #200]	; 0xc8
   27b48:	bl	107c0 <myencoding_get_function_by_id@plt>
   27b4c:	ldr	sl, [r7, #148]	; 0x94
   27b50:	mov	r8, r0
   27b54:	cmp	sl, #0
   27b58:	beq	27c50 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x130>
   27b5c:	mov	r0, sl
   27b60:	bl	10b14 <myhtml_stream_buffer_current_entry@plt>
   27b64:	cmp	r5, #0
   27b68:	mov	r4, r0
   27b6c:	ldr	r6, [r0, #4]
   27b70:	beq	27c48 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x128>
   27b74:	sub	r3, r5, #1
   27b78:	add	r9, sl, #12
   27b7c:	str	sl, [sp, #4]
   27b80:	sub	r5, fp, #1
   27b84:	add	fp, fp, r3
   27b88:	mov	r1, r9
   27b8c:	ldrb	r0, [r5, #1]!
   27b90:	blx	r8
   27b94:	subs	ip, r0, #0
   27b98:	bne	27bf8 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0xd8>
   27b9c:	ldm	r4, {r1, r3, lr}
   27ba0:	mov	r0, r7
   27ba4:	add	sl, r3, #4
   27ba8:	sub	r2, r3, r6
   27bac:	cmp	sl, lr
   27bb0:	bcc	27bdc <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0xbc>
   27bb4:	add	r1, r1, r6
   27bb8:	str	ip, [r7, #200]	; 0xc8
   27bbc:	bl	103c4 <myhtml_tokenizer_chunk_process@plt>
   27bc0:	mov	r1, #16384	; 0x4000
   27bc4:	ldr	r0, [sp, #4]
   27bc8:	bl	108c8 <myhtml_stream_buffer_add_entry@plt>
   27bcc:	subs	r4, r0, #0
   27bd0:	beq	27c8c <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x16c>
   27bd4:	ldm	r4, {r1, r6}
   27bd8:	mov	r3, r6
   27bdc:	ldr	r2, [sp, #4]
   27be0:	add	r1, r1, r3
   27be4:	ldr	r0, [r2, #24]
   27be8:	bl	10e20 <myencoding_codepoint_to_ascii_utf_8@plt>
   27bec:	ldr	r3, [r4, #4]
   27bf0:	add	r0, r3, r0
   27bf4:	str	r0, [r4, #4]
   27bf8:	cmp	fp, r5
   27bfc:	bne	27b88 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x68>
   27c00:	ldr	r2, [r4, #4]
   27c04:	cmp	r2, r6
   27c08:	beq	27c48 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x128>
   27c0c:	ldr	r1, [r4]
   27c10:	mov	r4, #0
   27c14:	sub	r2, r2, r6
   27c18:	mov	r0, r7
   27c1c:	str	r4, [r7, #200]	; 0xc8
   27c20:	add	r1, r1, r6
   27c24:	bl	103c4 <myhtml_tokenizer_chunk_process@plt>
   27c28:	mov	r0, r4
   27c2c:	add	sp, sp, #12
   27c30:	ldrd	r4, [sp]
   27c34:	ldrd	r6, [sp, #8]
   27c38:	ldrd	r8, [sp, #16]
   27c3c:	ldrd	sl, [sp, #24]
   27c40:	add	sp, sp, #32
   27c44:	pop	{pc}		; (ldr pc, [sp], #4)
   27c48:	mov	r0, #0
   27c4c:	b	27c2c <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x10c>
   27c50:	bl	10e08 <myhtml_stream_buffer_create@plt>
   27c54:	cmp	r0, #0
   27c58:	str	r0, [r7, #148]	; 0x94
   27c5c:	moveq	r0, #37632	; 0x9300
   27c60:	beq	27c2c <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x10c>
   27c64:	mov	r1, #1024	; 0x400
   27c68:	bl	10d00 <myhtml_stream_buffer_init@plt>
   27c6c:	cmp	r0, #0
   27c70:	bne	27c2c <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x10c>
   27c74:	mov	r1, #16384	; 0x4000
   27c78:	ldr	r0, [r7, #148]	; 0x94
   27c7c:	bl	108c8 <myhtml_stream_buffer_add_entry@plt>
   27c80:	cmp	r0, #0
   27c84:	ldrne	sl, [r7, #148]	; 0x94
   27c88:	bne	27b5c <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x3c>
   27c8c:	movw	r0, #37636	; 0x9304
   27c90:	b	27c2c <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x10c>

00027c94 <myhtml_tokenizer_chunk@@Base>:
   27c94:	ldr	r3, [r0, #204]	; 0xcc
   27c98:	sub	r3, r3, #4
   27c9c:	cmp	r3, #1
   27ca0:	bls	27ca8 <myhtml_tokenizer_chunk@@Base+0x14>
   27ca4:	b	103c4 <myhtml_tokenizer_chunk_process@plt>
   27ca8:	b	10b2c <myhtml_tokenizer_chunk_with_stream_buffer@plt>

00027cac <myhtml_tokenizer_begin@@Base>:
   27cac:	b	10064 <myhtml_tokenizer_chunk@plt>

00027cb0 <myhtml_tokenizer_pause@@Base>:
   27cb0:	ldr	r3, [r0]
   27cb4:	ldr	r2, [r3]
   27cb8:	cmp	r2, #0
   27cbc:	beq	27d00 <myhtml_tokenizer_pause@@Base+0x50>
   27cc0:	str	r4, [sp, #-8]!
   27cc4:	mov	r4, r0
   27cc8:	mov	r0, r2
   27ccc:	str	lr, [sp, #4]
   27cd0:	bl	10a6c <mythread_stop@plt>
   27cd4:	ldr	r3, [r4]
   27cd8:	ldr	r0, [r3, #4]
   27cdc:	cmp	r0, #0
   27ce0:	beq	27cf4 <myhtml_tokenizer_pause@@Base+0x44>
   27ce4:	ldr	r4, [sp]
   27ce8:	ldr	lr, [sp, #4]
   27cec:	add	sp, sp, #8
   27cf0:	b	10a6c <mythread_stop@plt>
   27cf4:	ldr	r4, [sp]
   27cf8:	add	sp, sp, #4
   27cfc:	pop	{pc}		; (ldr pc, [sp], #4)
   27d00:	ldr	r0, [r3, #4]
   27d04:	cmp	r0, #0
   27d08:	bxeq	lr
   27d0c:	b	10a6c <mythread_stop@plt>

00027d10 <myhtml_tokenizer_end@@Base>:
   27d10:	strd	r4, [sp, #-16]!
   27d14:	mov	r4, r0
   27d18:	ldr	r2, [r0, #76]	; 0x4c
   27d1c:	ldr	r3, [r0, #64]	; 0x40
   27d20:	str	r6, [sp, #8]
   27d24:	str	lr, [sp, #12]
   27d28:	sub	sp, sp, #8
   27d2c:	cmp	r2, #0
   27d30:	beq	27d6c <myhtml_tokenizer_end@@Base+0x5c>
   27d34:	ldr	r5, [r0]
   27d38:	mov	r1, r3
   27d3c:	ldr	r3, [r2, #8]
   27d40:	ldr	ip, [r0, #160]	; 0xa0
   27d44:	ldr	lr, [r0, #192]	; 0xc0
   27d48:	ldr	r5, [r5, #24]
   27d4c:	add	ip, ip, #70	; 0x46
   27d50:	ldr	r2, [r2]
   27d54:	sub	lr, lr, r3
   27d58:	str	r3, [sp]
   27d5c:	str	lr, [r0, #192]	; 0xc0
   27d60:	ldr	r5, [r5, ip, lsl #2]
   27d64:	blx	r5
   27d68:	ldr	r3, [r4, #64]	; 0x40
   27d6c:	mov	ip, #251	; 0xfb
   27d70:	mov	r2, r3
   27d74:	mov	r1, #0
   27d78:	mov	r0, r4
   27d7c:	str	ip, [r3]
   27d80:	bl	ffc8 <myhtml_queue_add@plt>
   27d84:	cmp	r0, #0
   27d88:	movne	r3, #2
   27d8c:	ldreq	r6, [r4, #196]	; 0xc4
   27d90:	movne	r6, r3
   27d94:	strne	r3, [r4, #196]	; 0xc4
   27d98:	ldr	r3, [r4, #180]	; 0xb4
   27d9c:	ands	r5, r3, #16
   27da0:	beq	27dc8 <myhtml_tokenizer_end@@Base+0xb8>
   27da4:	ldr	r3, [r4, #180]	; 0xb4
   27da8:	mov	r0, r6
   27dac:	orr	r3, r3, #32
   27db0:	str	r3, [r4, #180]	; 0xb4
   27db4:	add	sp, sp, #8
   27db8:	ldrd	r4, [sp]
   27dbc:	ldr	r6, [sp, #8]
   27dc0:	add	sp, sp, #12
   27dc4:	pop	{pc}		; (ldr pc, [sp], #4)
   27dc8:	ldr	r3, [r4]
   27dcc:	ldr	r1, [r4, #20]
   27dd0:	ldr	r0, [r3]
   27dd4:	bl	10910 <mythread_queue_list_entry_wait_for_done@plt>
   27dd8:	ldr	r0, [r4]
   27ddc:	mov	r1, #2
   27de0:	ldr	r3, [r4, #20]
   27de4:	ldr	r2, [r0], #8
   27de8:	ldr	r2, [r2, #16]
   27dec:	str	r5, [sp]
   27df0:	bl	fbb4 <mythread_queue_list_entry_delete@plt>
   27df4:	ldr	r3, [r4]
   27df8:	ldr	r3, [r3]
   27dfc:	str	r0, [r4, #20]
   27e00:	ldr	r0, [r3, #16]
   27e04:	bl	1055c <mythread_queue_list_get_count@plt>
   27e08:	cmp	r0, #0
   27e0c:	beq	27e2c <myhtml_tokenizer_end@@Base+0x11c>
   27e10:	cmp	r6, #0
   27e14:	bne	27da4 <myhtml_tokenizer_end@@Base+0x94>
   27e18:	ldr	r3, [r4]
   27e1c:	ldr	r0, [r3]
   27e20:	bl	104a8 <mythread_check_status@plt>
   27e24:	mov	r6, r0
   27e28:	b	27da4 <myhtml_tokenizer_end@@Base+0x94>
   27e2c:	mov	r0, r4
   27e30:	bl	10580 <myhtml_tokenizer_pause@plt>
   27e34:	b	27e10 <myhtml_tokenizer_end@@Base+0x100>

00027e38 <myhtml_tokenizer_calc_current_namespace@@Base>:
   27e38:	ldr	r3, [r0, #184]	; 0xb8
   27e3c:	tst	r3, #1
   27e40:	bxne	lr
   27e44:	ldr	r3, [r0, #180]	; 0xb4
   27e48:	tst	r3, #16
   27e4c:	beq	27e5c <myhtml_tokenizer_calc_current_namespace@@Base+0x24>
   27e50:	ldr	r3, [r0, #164]	; 0xa4
   27e54:	str	r3, [r0, #160]	; 0xa0
   27e58:	bx	lr
   27e5c:	ldr	r3, [r1]
   27e60:	cmp	r3, #124	; 0x7c
   27e64:	cmpne	r3, #218	; 0xda
   27e68:	moveq	r2, #1
   27e6c:	movne	r2, #0
   27e70:	cmp	r3, #54	; 0x36
   27e74:	orreq	r2, r2, #1
   27e78:	cmp	r2, #0
   27e7c:	beq	27e88 <myhtml_tokenizer_calc_current_namespace@@Base+0x50>
   27e80:	str	r1, [r0, #156]	; 0x9c
   27e84:	bx	lr
   27e88:	ldr	r2, [r0, #156]	; 0x9c
   27e8c:	cmp	r2, #0
   27e90:	bxeq	lr
   27e94:	ldr	r2, [r1, #48]	; 0x30
   27e98:	tst	r2, #1
   27e9c:	bxne	lr
   27ea0:	strd	r4, [sp, #-16]!
   27ea4:	mov	r5, r1
   27ea8:	mov	r4, r0
   27eac:	mov	r1, r3
   27eb0:	ldr	r0, [r0, #28]
   27eb4:	str	r6, [sp, #8]
   27eb8:	str	lr, [sp, #12]
   27ebc:	bl	109b8 <myhtml_tag_get_by_id@plt>
   27ec0:	ldr	r3, [r0, #12]
   27ec4:	cmp	r3, #0
   27ec8:	bne	27edc <myhtml_tokenizer_calc_current_namespace@@Base+0xa4>
   27ecc:	ldrd	r4, [sp]
   27ed0:	ldr	r6, [sp, #8]
   27ed4:	add	sp, sp, #12
   27ed8:	pop	{pc}		; (ldr pc, [sp], #4)
   27edc:	mov	r1, r5
   27ee0:	mov	r0, r4
   27ee4:	bl	fc80 <myhtml_tree_wait_for_last_done_token@plt>
   27ee8:	ldr	r3, [r4, #164]	; 0xa4
   27eec:	str	r3, [r4, #160]	; 0xa0
   27ef0:	b	27ecc <myhtml_tokenizer_calc_current_namespace@@Base+0x94>

00027ef4 <myhtml_check_tag_parser@@Base>:
   27ef4:	ldr	ip, [r1, #28]
   27ef8:	strd	r4, [sp, #-28]!	; 0xffffffe4
   27efc:	mov	r4, r1
   27f00:	ldr	r1, [r1, #24]
   27f04:	strd	r6, [sp, #8]
   27f08:	mov	r6, r0
   27f0c:	strd	r8, [sp, #16]
   27f10:	mov	r9, r3
   27f14:	mov	r8, r2
   27f18:	cmp	ip, r3
   27f1c:	str	lr, [sp, #24]
   27f20:	sub	sp, sp, #12
   27f24:	ldr	r7, [r0, #28]
   27f28:	bls	27f70 <myhtml_check_tag_parser@@Base+0x7c>
   27f2c:	mov	r2, ip
   27f30:	bl	fe00 <myhtml_tree_incomming_buffer_make_data@plt>
   27f34:	mov	r1, r0
   27f38:	mov	r0, r7
   27f3c:	ldr	r2, [r4, #28]
   27f40:	bl	10b08 <myhtml_tag_get_by_name@plt>
   27f44:	mov	r5, r0
   27f48:	cmp	r5, #0
   27f4c:	beq	27f94 <myhtml_check_tag_parser@@Base+0xa0>
   27f50:	ldr	r3, [r5]
   27f54:	str	r3, [r4]
   27f58:	add	sp, sp, #12
   27f5c:	ldrd	r4, [sp]
   27f60:	ldrd	r6, [sp, #8]
   27f64:	ldrd	r8, [sp, #16]
   27f68:	add	sp, sp, #24
   27f6c:	pop	{pc}		; (ldr pc, [sp], #4)
   27f70:	ldr	r3, [r6, #192]	; 0xc0
   27f74:	mov	r2, ip
   27f78:	mov	r0, r7
   27f7c:	sub	r1, r1, r3
   27f80:	add	r1, r8, r1
   27f84:	bl	10b08 <myhtml_tag_get_by_name@plt>
   27f88:	mov	r5, r0
   27f8c:	cmp	r5, #0
   27f90:	bne	27f50 <myhtml_check_tag_parser@@Base+0x5c>
   27f94:	ldr	r1, [r4, #24]
   27f98:	ldr	r2, [r4, #28]
   27f9c:	cmp	r2, r9
   27fa0:	bhi	27ff4 <myhtml_check_tag_parser@@Base+0x100>
   27fa4:	ldr	ip, [r6, #192]	; 0xc0
   27fa8:	mov	r0, #1
   27fac:	mov	r3, r5
   27fb0:	str	r0, [sp]
   27fb4:	mov	r0, r7
   27fb8:	sub	r1, r1, ip
   27fbc:	add	r1, r8, r1
   27fc0:	bl	ffb0 <myhtml_tag_add@plt>
   27fc4:	mov	r1, r0
   27fc8:	str	r0, [r4]
   27fcc:	mov	r3, #1
   27fd0:	mov	r0, r7
   27fd4:	mov	r2, r3
   27fd8:	add	sp, sp, #12
   27fdc:	ldrd	r4, [sp]
   27fe0:	ldrd	r6, [sp, #8]
   27fe4:	ldrd	r8, [sp, #16]
   27fe8:	ldr	lr, [sp, #24]
   27fec:	add	sp, sp, #28
   27ff0:	b	ff38 <myhtml_tag_set_category@plt>
   27ff4:	mov	r0, r6
   27ff8:	bl	fe00 <myhtml_tree_incomming_buffer_make_data@plt>
   27ffc:	mov	ip, #1
   28000:	mov	r1, r0
   28004:	ldr	r2, [r4, #28]
   28008:	mov	r3, r5
   2800c:	mov	r0, r7
   28010:	str	ip, [sp]
   28014:	bl	ffb0 <myhtml_tag_add@plt>
   28018:	mov	r1, r0
   2801c:	str	r0, [r4]
   28020:	b	27fcc <myhtml_check_tag_parser@@Base+0xd8>

00028024 <myhtml_tokenizer_queue_create_text_node_if_need@@Base>:
   28024:	strd	r4, [sp, #-16]!
   28028:	mov	ip, r1
   2802c:	ldr	r4, [r1]
   28030:	str	r6, [sp, #8]
   28034:	str	lr, [sp, #12]
   28038:	cmp	r4, #0
   2803c:	bne	2804c <myhtml_tokenizer_queue_create_text_node_if_need@@Base+0x28>
   28040:	ldr	r2, [r1, #24]
   28044:	cmp	r3, r2
   28048:	bhi	28060 <myhtml_tokenizer_queue_create_text_node_if_need@@Base+0x3c>
   2804c:	ldrd	r4, [sp]
   28050:	mov	r0, ip
   28054:	ldr	r6, [sp, #8]
   28058:	add	sp, sp, #12
   2805c:	pop	{pc}		; (ldr pc, [sp], #4)
   28060:	mov	r6, #1
   28064:	ldr	r1, [r1, #32]
   28068:	sub	r3, r3, r2
   2806c:	mov	r5, r0
   28070:	str	r6, [ip]
   28074:	ldr	r6, [sp, #16]
   28078:	str	r3, [ip, #28]
   2807c:	ldr	lr, [ip, #48]	; 0x30
   28080:	strd	r2, [ip, #32]
   28084:	mov	r2, ip
   28088:	orr	lr, r6, lr
   2808c:	str	lr, [ip, #48]	; 0x30
   28090:	bl	ffc8 <myhtml_queue_add@plt>
   28094:	cmp	r0, #0
   28098:	ldreq	ip, [r5, #64]	; 0x40
   2809c:	movne	ip, r4
   280a0:	b	2804c <myhtml_tokenizer_queue_create_text_node_if_need@@Base+0x28>

000280a4 <myhtml_tokenizer_state_tag_open@@Base>:
   280a4:	strd	r4, [sp, #-12]!
   280a8:	mov	r4, r3
   280ac:	mov	r5, r0
   280b0:	ldr	r3, [pc, #332]	; 28204 <myhtml_tokenizer_state_tag_open@@Base+0x160>
   280b4:	str	lr, [sp, #8]
   280b8:	sub	sp, sp, #12
   280bc:	ldrb	ip, [r2, r4]
   280c0:	add	r3, pc, r3
   280c4:	ldrb	r3, [r3, ip]
   280c8:	cmp	r3, #1
   280cc:	beq	28128 <myhtml_tokenizer_state_tag_open@@Base+0x84>
   280d0:	cmp	ip, #33	; 0x21
   280d4:	beq	28180 <myhtml_tokenizer_state_tag_open@@Base+0xdc>
   280d8:	cmp	ip, #47	; 0x2f
   280dc:	moveq	r3, #8
   280e0:	addeq	r0, r4, #1
   280e4:	streq	r3, [r5, #160]	; 0xa0
   280e8:	beq	28118 <myhtml_tokenizer_state_tag_open@@Base+0x74>
   280ec:	cmp	ip, #63	; 0x3f
   280f0:	beq	281c8 <myhtml_tokenizer_state_tag_open@@Base+0x124>
   280f4:	ldr	r3, [r1, #48]	; 0x30
   280f8:	mov	lr, r1
   280fc:	mov	r2, #0
   28100:	mov	r0, r4
   28104:	ldr	r1, [r1, #48]	; 0x30
   28108:	and	r3, r3, #8
   2810c:	eor	r3, r3, r1
   28110:	str	r3, [lr, #48]	; 0x30
   28114:	str	r2, [r5, #160]	; 0xa0
   28118:	add	sp, sp, #12
   2811c:	ldrd	r4, [sp]
   28120:	add	sp, sp, #8
   28124:	pop	{pc}		; (ldr pc, [sp], #4)
   28128:	ldr	r3, [r0, #192]	; 0xc0
   2812c:	mov	ip, #512	; 0x200
   28130:	str	ip, [sp]
   28134:	sub	r3, r3, #1
   28138:	add	r3, r3, r4
   2813c:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   28140:	subs	r2, r0, #0
   28144:	beq	28170 <myhtml_tokenizer_state_tag_open@@Base+0xcc>
   28148:	ldr	r3, [r5, #192]	; 0xc0
   2814c:	mov	r0, r4
   28150:	mov	r1, #9
   28154:	add	r4, r3, r4
   28158:	str	r4, [r2, #24]
   2815c:	str	r1, [r5, #160]	; 0xa0
   28160:	add	sp, sp, #12
   28164:	ldrd	r4, [sp]
   28168:	add	sp, sp, #8
   2816c:	pop	{pc}		; (ldr pc, [sp], #4)
   28170:	mov	r3, #69	; 0x45
   28174:	mov	r0, #0
   28178:	str	r3, [r5, #160]	; 0xa0
   2817c:	b	28118 <myhtml_tokenizer_state_tag_open@@Base+0x74>
   28180:	ldr	r3, [r0, #192]	; 0xc0
   28184:	mov	ip, #512	; 0x200
   28188:	str	ip, [sp]
   2818c:	sub	r3, r3, #1
   28190:	add	r3, r3, r4
   28194:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   28198:	subs	r2, r0, #0
   2819c:	beq	28170 <myhtml_tokenizer_state_tag_open@@Base+0xcc>
   281a0:	ldr	r3, [r5, #192]	; 0xc0
   281a4:	add	r0, r4, #1
   281a8:	mov	r1, #44	; 0x2c
   281ac:	add	r3, r3, r0
   281b0:	str	r3, [r2, #24]
   281b4:	str	r1, [r5, #160]	; 0xa0
   281b8:	add	sp, sp, #12
   281bc:	ldrd	r4, [sp]
   281c0:	add	sp, sp, #8
   281c4:	pop	{pc}		; (ldr pc, [sp], #4)
   281c8:	ldr	r3, [r5, #192]	; 0xc0
   281cc:	mov	ip, #512	; 0x200
   281d0:	str	ip, [sp]
   281d4:	sub	r3, r3, #1
   281d8:	add	r3, r3, r4
   281dc:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   281e0:	subs	r2, r0, #0
   281e4:	beq	28170 <myhtml_tokenizer_state_tag_open@@Base+0xcc>
   281e8:	ldr	r3, [r5, #192]	; 0xc0
   281ec:	mov	r1, #43	; 0x2b
   281f0:	mov	r0, r4
   281f4:	add	r4, r3, r4
   281f8:	str	r4, [r2, #24]
   281fc:	str	r1, [r5, #160]	; 0xa0
   28200:	b	28118 <myhtml_tokenizer_state_tag_open@@Base+0x74>
   28204:	andeq	r7, sp, r0, lsl #21

00028208 <myhtml_tokenizer_state_end_tag_open@@Base>:
   28208:	strd	r4, [sp, #-16]!
   2820c:	mov	r4, r3
   28210:	mov	r5, r0
   28214:	ldr	r3, [pc, #208]	; 282ec <myhtml_tokenizer_state_end_tag_open@@Base+0xe4>
   28218:	str	r6, [sp, #8]
   2821c:	str	lr, [sp, #12]
   28220:	sub	sp, sp, #8
   28224:	ldrb	ip, [r2, r4]
   28228:	add	r3, pc, r3
   2822c:	ldrb	r6, [r3, ip]
   28230:	cmp	r6, #1
   28234:	beq	2829c <myhtml_tokenizer_state_end_tag_open@@Base+0x94>
   28238:	cmp	ip, #62	; 0x3e
   2823c:	bne	28260 <myhtml_tokenizer_state_end_tag_open@@Base+0x58>
   28240:	mov	r3, #0
   28244:	add	r0, r4, #1
   28248:	str	r3, [r5, #160]	; 0xa0
   2824c:	add	sp, sp, #8
   28250:	ldrd	r4, [sp]
   28254:	ldr	r6, [sp, #8]
   28258:	add	sp, sp, #12
   2825c:	pop	{pc}		; (ldr pc, [sp], #4)
   28260:	ldr	r3, [r0, #192]	; 0xc0
   28264:	mov	ip, #512	; 0x200
   28268:	str	ip, [sp]
   2826c:	sub	r3, r3, #2
   28270:	add	r3, r3, r4
   28274:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   28278:	subs	r2, r0, #0
   2827c:	beq	282dc <myhtml_tokenizer_state_end_tag_open@@Base+0xd4>
   28280:	ldr	r3, [r5, #192]	; 0xc0
   28284:	mov	r0, r4
   28288:	mov	r1, #43	; 0x2b
   2828c:	add	r4, r3, r4
   28290:	str	r4, [r2, #24]
   28294:	str	r1, [r5, #160]	; 0xa0
   28298:	b	2824c <myhtml_tokenizer_state_end_tag_open@@Base+0x44>
   2829c:	ldr	r3, [r0, #192]	; 0xc0
   282a0:	mov	ip, #512	; 0x200
   282a4:	str	ip, [sp]
   282a8:	sub	r3, r3, #2
   282ac:	add	r3, r3, r4
   282b0:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   282b4:	subs	r2, r0, #0
   282b8:	beq	282dc <myhtml_tokenizer_state_end_tag_open@@Base+0xd4>
   282bc:	ldr	r3, [r5, #192]	; 0xc0
   282c0:	mov	r1, #9
   282c4:	mov	r0, r4
   282c8:	str	r6, [r2, #48]	; 0x30
   282cc:	add	r4, r3, r4
   282d0:	str	r4, [r2, #24]
   282d4:	str	r1, [r5, #160]	; 0xa0
   282d8:	b	2824c <myhtml_tokenizer_state_end_tag_open@@Base+0x44>
   282dc:	mov	r3, #69	; 0x45
   282e0:	mov	r0, #0
   282e4:	str	r3, [r5, #160]	; 0xa0
   282e8:	b	2824c <myhtml_tokenizer_state_end_tag_open@@Base+0x44>
   282ec:	andeq	r7, sp, r8, lsl r9

000282f0 <myhtml_tokenizer_set_state@@Base>:
   282f0:	ldr	r3, [r1, #48]	; 0x30
   282f4:	tst	r3, #1
   282f8:	bne	28314 <myhtml_tokenizer_set_state@@Base+0x24>
   282fc:	ldr	r1, [r1]
   28300:	cmp	r1, #93	; 0x5d
   28304:	bne	28320 <myhtml_tokenizer_set_state@@Base+0x30>
   28308:	ldr	r3, [r0, #180]	; 0xb4
   2830c:	tst	r3, #1
   28310:	bne	28320 <myhtml_tokenizer_set_state@@Base+0x30>
   28314:	mov	r3, #0
   28318:	str	r3, [r0, #160]	; 0xa0
   2831c:	bx	lr
   28320:	str	r4, [sp, #-8]!
   28324:	mov	r4, r0
   28328:	ldr	r0, [r0, #28]
   2832c:	str	lr, [sp, #4]
   28330:	bl	109b8 <myhtml_tag_get_by_id@plt>
   28334:	ldr	r3, [r0, #12]
   28338:	str	r3, [r4, #160]	; 0xa0
   2833c:	ldr	r4, [sp]
   28340:	add	sp, sp, #4
   28344:	pop	{pc}		; (ldr pc, [sp], #4)

00028348 <myhtml_tokenizer_state_tag_name@@Base>:
   28348:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2834c:	ldr	ip, [sp, #24]
   28350:	strd	r6, [sp, #8]
   28354:	str	r8, [sp, #16]
   28358:	str	lr, [sp, #20]
   2835c:	cmp	r3, ip
   28360:	bcs	284cc <myhtml_tokenizer_state_tag_name@@Base+0x184>
   28364:	mov	r7, r0
   28368:	ldr	r0, [pc, #356]	; 284d4 <myhtml_tokenizer_state_tag_name@@Base+0x18c>
   2836c:	mov	r6, r1
   28370:	mov	r4, r3
   28374:	ldrb	r1, [r2, r3]
   28378:	add	r3, r2, r3
   2837c:	add	r0, pc, r0
   28380:	ldrb	r0, [r0, r1]
   28384:	cmp	r0, #2
   28388:	beq	283f8 <myhtml_tokenizer_state_tag_name@@Base+0xb0>
   2838c:	cmp	r1, #47	; 0x2f
   28390:	beq	2842c <myhtml_tokenizer_state_tag_name@@Base+0xe4>
   28394:	cmp	r1, #62	; 0x3e
   28398:	beq	28460 <myhtml_tokenizer_state_tag_name@@Base+0x118>
   2839c:	ldr	r0, [pc, #308]	; 284d8 <myhtml_tokenizer_state_tag_name@@Base+0x190>
   283a0:	sub	r5, r2, #1
   283a4:	rsb	r1, r2, #1
   283a8:	add	r5, r5, ip
   283ac:	add	r0, pc, r0
   283b0:	b	283d4 <myhtml_tokenizer_state_tag_name@@Base+0x8c>
   283b4:	ldrb	ip, [r3, #1]!
   283b8:	ldrb	lr, [r0, ip]
   283bc:	cmp	lr, #2
   283c0:	beq	283f8 <myhtml_tokenizer_state_tag_name@@Base+0xb0>
   283c4:	cmp	ip, #47	; 0x2f
   283c8:	beq	2842c <myhtml_tokenizer_state_tag_name@@Base+0xe4>
   283cc:	cmp	ip, #62	; 0x3e
   283d0:	beq	28460 <myhtml_tokenizer_state_tag_name@@Base+0x118>
   283d4:	cmp	r3, r5
   283d8:	add	r4, r1, r3
   283dc:	bne	283b4 <myhtml_tokenizer_state_tag_name@@Base+0x6c>
   283e0:	mov	r0, r4
   283e4:	ldrd	r4, [sp]
   283e8:	ldrd	r6, [sp, #8]
   283ec:	ldr	r8, [sp, #16]
   283f0:	add	sp, sp, #20
   283f4:	pop	{pc}		; (ldr pc, [sp], #4)
   283f8:	ldr	lr, [r6, #24]
   283fc:	mov	r3, r4
   28400:	mov	r1, r6
   28404:	mov	r0, r7
   28408:	ldr	ip, [r7, #192]	; 0xc0
   2840c:	sub	ip, ip, lr
   28410:	add	ip, ip, r4
   28414:	add	r4, r4, #1
   28418:	str	ip, [r6, #28]
   2841c:	bl	10bd4 <myhtml_check_tag_parser@plt>
   28420:	mov	r3, #33	; 0x21
   28424:	str	r3, [r7, #160]	; 0xa0
   28428:	b	283e0 <myhtml_tokenizer_state_tag_name@@Base+0x98>
   2842c:	ldr	lr, [r6, #24]
   28430:	mov	r3, r4
   28434:	mov	r1, r6
   28438:	mov	r0, r7
   2843c:	ldr	ip, [r7, #192]	; 0xc0
   28440:	sub	ip, ip, lr
   28444:	add	ip, ip, r4
   28448:	add	r4, r4, #1
   2844c:	str	ip, [r6, #28]
   28450:	bl	10bd4 <myhtml_check_tag_parser@plt>
   28454:	mov	r3, #42	; 0x2a
   28458:	str	r3, [r7, #160]	; 0xa0
   2845c:	b	283e0 <myhtml_tokenizer_state_tag_name@@Base+0x98>
   28460:	ldr	lr, [r6, #24]
   28464:	mov	r3, r4
   28468:	mov	r1, r6
   2846c:	mov	r0, r7
   28470:	ldr	ip, [r7, #192]	; 0xc0
   28474:	sub	ip, ip, lr
   28478:	add	ip, ip, r4
   2847c:	add	r4, r4, #1
   28480:	str	ip, [r6, #28]
   28484:	bl	10bd4 <myhtml_check_tag_parser@plt>
   28488:	mov	r1, r6
   2848c:	mov	r0, r7
   28490:	bl	10ad8 <myhtml_tokenizer_set_state@plt>
   28494:	ldr	ip, [r6, #32]
   28498:	mov	r1, r4
   2849c:	mov	r2, r6
   284a0:	mov	r0, r7
   284a4:	ldr	r3, [r7, #192]	; 0xc0
   284a8:	sub	r3, r3, ip
   284ac:	add	r3, r3, r4
   284b0:	str	r3, [r6, #36]	; 0x24
   284b4:	bl	ffc8 <myhtml_queue_add@plt>
   284b8:	cmp	r0, #0
   284bc:	movne	r3, #69	; 0x45
   284c0:	movne	r4, #0
   284c4:	strne	r3, [r7, #160]	; 0xa0
   284c8:	b	283e0 <myhtml_tokenizer_state_tag_name@@Base+0x98>
   284cc:	mov	r4, r3
   284d0:	b	283e0 <myhtml_tokenizer_state_tag_name@@Base+0x98>
   284d4:	andeq	r7, sp, r4, asr #15
   284d8:	muleq	sp, r4, r7

000284dc <myhtml_tokenizer_state_self_closing_start_tag@@Base>:
   284dc:	strd	r4, [sp, #-16]!
   284e0:	mov	r5, r0
   284e4:	str	r6, [sp, #8]
   284e8:	str	lr, [sp, #12]
   284ec:	ldrb	r2, [r2, r3]
   284f0:	cmp	r2, #62	; 0x3e
   284f4:	movne	r4, r3
   284f8:	movne	r3, #33	; 0x21
   284fc:	strne	r3, [r0, #160]	; 0xa0
   28500:	beq	28518 <myhtml_tokenizer_state_self_closing_start_tag@@Base+0x3c>
   28504:	mov	r0, r4
   28508:	ldrd	r4, [sp]
   2850c:	ldr	r6, [sp, #8]
   28510:	add	sp, sp, #12
   28514:	pop	{pc}		; (ldr pc, [sp], #4)
   28518:	ldr	r2, [r1, #48]	; 0x30
   2851c:	add	r4, r3, #1
   28520:	mov	r6, r1
   28524:	orr	r3, r2, #2
   28528:	str	r3, [r1, #48]	; 0x30
   2852c:	bl	10ad8 <myhtml_tokenizer_set_state@plt>
   28530:	ldr	ip, [r6, #32]
   28534:	mov	r1, r4
   28538:	mov	r2, r6
   2853c:	mov	r0, r5
   28540:	ldr	r3, [r5, #192]	; 0xc0
   28544:	sub	r3, r3, ip
   28548:	add	r3, r3, r4
   2854c:	str	r3, [r6, #36]	; 0x24
   28550:	bl	ffc8 <myhtml_queue_add@plt>
   28554:	cmp	r0, #0
   28558:	movne	r3, #69	; 0x45
   2855c:	movne	r4, #0
   28560:	strne	r3, [r5, #160]	; 0xa0
   28564:	b	28504 <myhtml_tokenizer_state_self_closing_start_tag@@Base+0x28>

00028568 <myhtml_tokenizer_state_before_attribute_name@@Base>:
   28568:	strd	r4, [sp, #-16]!
   2856c:	mov	r5, r1
   28570:	str	r6, [sp, #8]
   28574:	mov	r6, r0
   28578:	add	r0, r2, r3
   2857c:	str	lr, [sp, #12]
   28580:	sub	sp, sp, #8
   28584:	ldrb	ip, [r2, r3]
   28588:	ldr	lr, [sp, #24]
   2858c:	sub	r1, ip, #9
   28590:	sub	r4, ip, #12
   28594:	cmp	ip, #32
   28598:	cmpne	r1, #1
   2859c:	movls	r1, #1
   285a0:	movhi	r1, #0
   285a4:	cmp	r4, #1
   285a8:	orrls	r1, r1, #1
   285ac:	cmp	r1, #0
   285b0:	beq	28624 <myhtml_tokenizer_state_before_attribute_name@@Base+0xbc>
   285b4:	cmp	r3, lr
   285b8:	bcs	28728 <myhtml_tokenizer_state_before_attribute_name@@Base+0x1c0>
   285bc:	add	r1, r3, #1
   285c0:	mov	r4, r3
   285c4:	add	r2, r2, r1
   285c8:	b	285fc <myhtml_tokenizer_state_before_attribute_name@@Base+0x94>
   285cc:	ldrb	ip, [r2]
   285d0:	add	r2, r2, #1
   285d4:	sub	r1, ip, #9
   285d8:	sub	r3, ip, #12
   285dc:	cmp	r3, #1
   285e0:	cmphi	r1, #1
   285e4:	movls	r1, #1
   285e8:	movhi	r1, #0
   285ec:	cmp	ip, #32
   285f0:	orreq	r1, r1, #1
   285f4:	cmp	r1, #0
   285f8:	beq	286b4 <myhtml_tokenizer_state_before_attribute_name@@Base+0x14c>
   285fc:	add	r4, r4, #1
   28600:	mov	r0, r2
   28604:	cmp	lr, r4
   28608:	bne	285cc <myhtml_tokenizer_state_before_attribute_name@@Base+0x64>
   2860c:	mov	r0, r4
   28610:	add	sp, sp, #8
   28614:	ldrd	r4, [sp]
   28618:	ldr	r6, [sp, #8]
   2861c:	add	sp, sp, #12
   28620:	pop	{pc}		; (ldr pc, [sp], #4)
   28624:	cmp	r3, lr
   28628:	bcs	28728 <myhtml_tokenizer_state_before_attribute_name@@Base+0x1c0>
   2862c:	cmp	ip, #62	; 0x3e
   28630:	beq	286c0 <myhtml_tokenizer_state_before_attribute_name@@Base+0x158>
   28634:	cmp	ip, #47	; 0x2f
   28638:	beq	286a0 <myhtml_tokenizer_state_before_attribute_name@@Base+0x138>
   2863c:	ldr	r1, [r5, #40]	; 0x28
   28640:	ldr	r2, [r6, #56]	; 0x38
   28644:	cmp	r1, #0
   28648:	beq	28710 <myhtml_tokenizer_state_before_attribute_name@@Base+0x1a8>
   2864c:	ldr	r1, [r5, #44]	; 0x2c
   28650:	mov	ip, #0
   28654:	str	r2, [r1]
   28658:	str	r1, [r2, #4]
   2865c:	str	r2, [r5, #44]	; 0x2c
   28660:	str	ip, [r2]
   28664:	str	r2, [r6, #56]	; 0x38
   28668:	ldr	r1, [r6, #192]	; 0xc0
   2866c:	mov	ip, #0
   28670:	str	ip, [r2, #52]	; 0x34
   28674:	str	ip, [r2, #56]	; 0x38
   28678:	str	ip, [r2, #60]	; 0x3c
   2867c:	add	r1, r1, r3
   28680:	str	r1, [r2, #48]	; 0x30
   28684:	ldrb	r2, [r0]
   28688:	cmp	r2, #61	; 0x3d
   2868c:	mov	r2, #34	; 0x22
   28690:	addeq	r3, r3, #1
   28694:	mov	r4, r3
   28698:	str	r2, [r6, #160]	; 0xa0
   2869c:	b	2860c <myhtml_tokenizer_state_before_attribute_name@@Base+0xa4>
   286a0:	ldr	r2, [r5, #48]	; 0x30
   286a4:	add	r4, r3, #1
   286a8:	orr	r2, r2, #2
   286ac:	str	r2, [r5, #48]	; 0x30
   286b0:	b	2860c <myhtml_tokenizer_state_before_attribute_name@@Base+0xa4>
   286b4:	cmp	ip, #62	; 0x3e
   286b8:	mov	r3, r4
   286bc:	bne	28634 <myhtml_tokenizer_state_before_attribute_name@@Base+0xcc>
   286c0:	mov	r1, r5
   286c4:	mov	r0, r6
   286c8:	str	r3, [sp, #4]
   286cc:	bl	10ad8 <myhtml_tokenizer_set_state@plt>
   286d0:	ldr	r3, [sp, #4]
   286d4:	mov	r2, r5
   286d8:	mov	r0, r6
   286dc:	ldr	ip, [r5, #32]
   286e0:	add	r4, r3, #1
   286e4:	ldr	r3, [r6, #192]	; 0xc0
   286e8:	mov	r1, r4
   286ec:	sub	r3, r3, ip
   286f0:	add	r3, r3, r4
   286f4:	str	r3, [r5, #36]	; 0x24
   286f8:	bl	ffc8 <myhtml_queue_add@plt>
   286fc:	cmp	r0, #0
   28700:	movne	r3, #69	; 0x45
   28704:	movne	r4, #0
   28708:	strne	r3, [r6, #160]	; 0xa0
   2870c:	b	2860c <myhtml_tokenizer_state_before_attribute_name@@Base+0xa4>
   28710:	str	r2, [r5, #40]	; 0x28
   28714:	str	r2, [r5, #44]	; 0x2c
   28718:	str	r2, [r6, #56]	; 0x38
   2871c:	str	r1, [r2]
   28720:	str	r1, [r2, #4]
   28724:	b	28668 <myhtml_tokenizer_state_before_attribute_name@@Base+0x100>
   28728:	mov	r4, r3
   2872c:	b	2860c <myhtml_tokenizer_state_before_attribute_name@@Base+0xa4>

00028730 <myhtml_tokenizer_state_attribute_name@@Base>:
   28730:	strd	r4, [sp, #-16]!
   28734:	str	r6, [sp, #8]
   28738:	str	lr, [sp, #12]
   2873c:	sub	sp, sp, #8
   28740:	ldr	ip, [sp, #24]
   28744:	cmp	r3, ip
   28748:	bcs	2883c <myhtml_tokenizer_state_attribute_name@@Base+0x10c>
   2874c:	mov	r5, r1
   28750:	ldrb	r1, [r2, r3]
   28754:	mov	r4, r0
   28758:	sub	lr, r1, #12
   2875c:	sub	r0, r1, #9
   28760:	cmp	lr, #1
   28764:	cmphi	r0, #1
   28768:	movls	r0, #1
   2876c:	movhi	r0, #0
   28770:	cmp	r1, #32
   28774:	orreq	r0, r0, #1
   28778:	cmp	r0, #0
   2877c:	bne	28800 <myhtml_tokenizer_state_attribute_name@@Base+0xd0>
   28780:	cmp	r1, #61	; 0x3d
   28784:	beq	28844 <myhtml_tokenizer_state_attribute_name@@Base+0x114>
   28788:	cmp	r1, #62	; 0x3e
   2878c:	beq	28850 <myhtml_tokenizer_state_attribute_name@@Base+0x120>
   28790:	cmp	r1, #47	; 0x2f
   28794:	beq	288d0 <myhtml_tokenizer_state_attribute_name@@Base+0x1a0>
   28798:	add	r3, r3, #1
   2879c:	cmp	ip, r3
   287a0:	bls	2883c <myhtml_tokenizer_state_attribute_name@@Base+0x10c>
   287a4:	ldrb	r1, [r2, r3]
   287a8:	add	r2, r2, r3
   287ac:	b	287d8 <myhtml_tokenizer_state_attribute_name@@Base+0xa8>
   287b0:	cmp	r1, #61	; 0x3d
   287b4:	beq	28844 <myhtml_tokenizer_state_attribute_name@@Base+0x114>
   287b8:	cmp	r1, #62	; 0x3e
   287bc:	beq	28850 <myhtml_tokenizer_state_attribute_name@@Base+0x120>
   287c0:	cmp	r1, #47	; 0x2f
   287c4:	beq	288d0 <myhtml_tokenizer_state_attribute_name@@Base+0x1a0>
   287c8:	add	r3, r3, #1
   287cc:	cmp	ip, r3
   287d0:	bls	2883c <myhtml_tokenizer_state_attribute_name@@Base+0x10c>
   287d4:	ldrb	r1, [r2, #1]!
   287d8:	sub	r0, r1, #9
   287dc:	sub	lr, r1, #12
   287e0:	cmp	lr, #1
   287e4:	cmphi	r0, #1
   287e8:	movls	r0, #1
   287ec:	movhi	r0, #0
   287f0:	cmp	r1, #32
   287f4:	orreq	r0, r0, #1
   287f8:	cmp	r0, #0
   287fc:	beq	287b0 <myhtml_tokenizer_state_attribute_name@@Base+0x80>
   28800:	ldr	r1, [r4, #56]	; 0x38
   28804:	mov	r0, #35	; 0x23
   28808:	add	r6, r3, #1
   2880c:	ldr	ip, [r1, #48]	; 0x30
   28810:	ldr	r2, [r4, #192]	; 0xc0
   28814:	sub	r2, r2, ip
   28818:	add	r3, r2, r3
   2881c:	str	r3, [r1, #52]	; 0x34
   28820:	str	r0, [r4, #160]	; 0xa0
   28824:	mov	r0, r6
   28828:	add	sp, sp, #8
   2882c:	ldrd	r4, [sp]
   28830:	ldr	r6, [sp, #8]
   28834:	add	sp, sp, #12
   28838:	pop	{pc}		; (ldr pc, [sp], #4)
   2883c:	mov	r6, r3
   28840:	b	28824 <myhtml_tokenizer_state_attribute_name@@Base+0xf4>
   28844:	mov	r0, #36	; 0x24
   28848:	ldr	r1, [r4, #56]	; 0x38
   2884c:	b	28808 <myhtml_tokenizer_state_attribute_name@@Base+0xd8>
   28850:	ldr	ip, [r4, #56]	; 0x38
   28854:	add	r6, r3, #1
   28858:	mov	r1, r5
   2885c:	mov	r0, r4
   28860:	ldr	r2, [r4, #192]	; 0xc0
   28864:	ldr	lr, [ip, #48]	; 0x30
   28868:	sub	r2, r2, lr
   2886c:	add	r3, r2, r3
   28870:	str	r3, [ip, #52]	; 0x34
   28874:	bl	10ad8 <myhtml_tokenizer_set_state@plt>
   28878:	ldr	ip, [r5, #32]
   2887c:	mov	r2, r5
   28880:	mov	r1, r6
   28884:	mov	r0, r4
   28888:	ldr	r3, [r4, #192]	; 0xc0
   2888c:	sub	r3, r3, ip
   28890:	add	r3, r3, r6
   28894:	str	r3, [r5, #36]	; 0x24
   28898:	bl	ffc8 <myhtml_queue_add@plt>
   2889c:	cmp	r0, #0
   288a0:	bne	288c0 <myhtml_tokenizer_state_attribute_name@@Base+0x190>
   288a4:	ldr	r3, [r4, #8]
   288a8:	mov	r0, r3
   288ac:	ldr	r1, [r3, #16]
   288b0:	bl	10898 <myhtml_token_attr_create@plt>
   288b4:	cmp	r0, #0
   288b8:	str	r0, [r4, #56]	; 0x38
   288bc:	bne	28824 <myhtml_tokenizer_state_attribute_name@@Base+0xf4>
   288c0:	mov	r3, #69	; 0x45
   288c4:	mov	r6, #0
   288c8:	str	r3, [r4, #160]	; 0xa0
   288cc:	b	28824 <myhtml_tokenizer_state_attribute_name@@Base+0xf4>
   288d0:	ldr	r1, [r5, #48]	; 0x30
   288d4:	mov	lr, #33	; 0x21
   288d8:	str	r3, [sp, #4]
   288dc:	ldr	r0, [r4, #56]	; 0x38
   288e0:	ldr	r2, [r4, #192]	; 0xc0
   288e4:	orr	r1, r1, #2
   288e8:	ldr	ip, [r4, #8]
   288ec:	ldr	r6, [r0, #48]	; 0x30
   288f0:	sub	r2, r2, r6
   288f4:	add	r2, r2, r3
   288f8:	str	r2, [r0, #52]	; 0x34
   288fc:	mov	r0, ip
   28900:	str	r1, [r5, #48]	; 0x30
   28904:	str	lr, [r4, #160]	; 0xa0
   28908:	ldr	r1, [ip, #16]
   2890c:	bl	10898 <myhtml_token_attr_create@plt>
   28910:	cmp	r0, #0
   28914:	str	r0, [r4, #56]	; 0x38
   28918:	beq	288c0 <myhtml_tokenizer_state_attribute_name@@Base+0x190>
   2891c:	ldr	r3, [sp, #4]
   28920:	add	r6, r3, #1
   28924:	b	28824 <myhtml_tokenizer_state_attribute_name@@Base+0xf4>

00028928 <myhtml_tokenizer_state_after_attribute_name@@Base>:
   28928:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2892c:	mov	r4, r3
   28930:	strd	r6, [sp, #8]
   28934:	str	lr, [sp, #20]
   28938:	ldr	lr, [sp, #24]
   2893c:	str	r8, [sp, #16]
   28940:	cmp	r3, lr
   28944:	bcs	28b88 <myhtml_tokenizer_state_after_attribute_name@@Base+0x260>
   28948:	mov	r6, r1
   2894c:	ldrb	r1, [r2, r3]
   28950:	mov	r5, r0
   28954:	add	r2, r2, r3
   28958:	cmp	r1, #61	; 0x3d
   2895c:	beq	28a7c <myhtml_tokenizer_state_after_attribute_name@@Base+0x154>
   28960:	cmp	r1, #62	; 0x3e
   28964:	beq	28a8c <myhtml_tokenizer_state_after_attribute_name@@Base+0x164>
   28968:	cmp	r1, #34	; 0x22
   2896c:	cmpne	r1, #39	; 0x27
   28970:	moveq	r3, #1
   28974:	movne	r3, #0
   28978:	cmp	r1, #60	; 0x3c
   2897c:	orreq	r3, r3, #1
   28980:	cmp	r3, #0
   28984:	bne	289f4 <myhtml_tokenizer_state_after_attribute_name@@Base+0xcc>
   28988:	sub	ip, r1, #12
   2898c:	sub	r3, r1, #9
   28990:	cmp	ip, #1
   28994:	cmphi	r3, #1
   28998:	movhi	ip, #1
   2899c:	movls	ip, #0
   289a0:	cmp	r1, #32
   289a4:	moveq	r1, #0
   289a8:	andne	r1, ip, #1
   289ac:	cmp	r1, #0
   289b0:	bne	28b18 <myhtml_tokenizer_state_after_attribute_name@@Base+0x1f0>
   289b4:	add	r4, r4, #1
   289b8:	cmp	lr, r4
   289bc:	beq	28af4 <myhtml_tokenizer_state_after_attribute_name@@Base+0x1cc>
   289c0:	ldrb	r1, [r2, #1]!
   289c4:	cmp	r1, #61	; 0x3d
   289c8:	beq	28a7c <myhtml_tokenizer_state_after_attribute_name@@Base+0x154>
   289cc:	cmp	r1, #62	; 0x3e
   289d0:	beq	28a8c <myhtml_tokenizer_state_after_attribute_name@@Base+0x164>
   289d4:	cmp	r1, #39	; 0x27
   289d8:	cmpne	r1, #34	; 0x22
   289dc:	moveq	ip, #1
   289e0:	movne	ip, #0
   289e4:	cmp	r1, #60	; 0x3c
   289e8:	orreq	ip, ip, #1
   289ec:	cmp	ip, #0
   289f0:	beq	28988 <myhtml_tokenizer_state_after_attribute_name@@Base+0x60>
   289f4:	ldr	r3, [r5, #8]
   289f8:	mov	r0, r3
   289fc:	ldr	r1, [r3, #16]
   28a00:	bl	10898 <myhtml_token_attr_create@plt>
   28a04:	cmp	r0, #0
   28a08:	str	r0, [r5, #56]	; 0x38
   28a0c:	beq	28ae4 <myhtml_tokenizer_state_after_attribute_name@@Base+0x1bc>
   28a10:	ldr	r3, [r6, #40]	; 0x28
   28a14:	cmp	r3, #0
   28a18:	beq	28afc <myhtml_tokenizer_state_after_attribute_name@@Base+0x1d4>
   28a1c:	ldr	r3, [r6, #44]	; 0x2c
   28a20:	mov	r2, #0
   28a24:	str	r0, [r3]
   28a28:	str	r3, [r0, #4]
   28a2c:	mov	r3, r0
   28a30:	str	r0, [r6, #44]	; 0x2c
   28a34:	str	r2, [r0]
   28a38:	str	r0, [r5, #56]	; 0x38
   28a3c:	ldr	r1, [r5, #192]	; 0xc0
   28a40:	mov	r2, #0
   28a44:	mov	r7, r4
   28a48:	mov	r0, #34	; 0x22
   28a4c:	str	r2, [r3, #52]	; 0x34
   28a50:	str	r2, [r3, #56]	; 0x38
   28a54:	str	r2, [r3, #60]	; 0x3c
   28a58:	add	r4, r1, r4
   28a5c:	str	r4, [r3, #48]	; 0x30
   28a60:	str	r0, [r5, #160]	; 0xa0
   28a64:	mov	r0, r7
   28a68:	ldrd	r4, [sp]
   28a6c:	ldrd	r6, [sp, #8]
   28a70:	ldr	r8, [sp, #16]
   28a74:	add	sp, sp, #20
   28a78:	pop	{pc}		; (ldr pc, [sp], #4)
   28a7c:	mov	r3, #36	; 0x24
   28a80:	add	r7, r4, #1
   28a84:	str	r3, [r5, #160]	; 0xa0
   28a88:	b	28a64 <myhtml_tokenizer_state_after_attribute_name@@Base+0x13c>
   28a8c:	mov	r1, r6
   28a90:	mov	r0, r5
   28a94:	bl	10ad8 <myhtml_tokenizer_set_state@plt>
   28a98:	ldr	ip, [r6, #32]
   28a9c:	add	r7, r4, #1
   28aa0:	mov	r2, r6
   28aa4:	mov	r1, r7
   28aa8:	mov	r0, r5
   28aac:	ldr	r3, [r5, #192]	; 0xc0
   28ab0:	sub	r3, r3, ip
   28ab4:	add	r3, r3, r7
   28ab8:	str	r3, [r6, #36]	; 0x24
   28abc:	bl	ffc8 <myhtml_queue_add@plt>
   28ac0:	cmp	r0, #0
   28ac4:	bne	28ae4 <myhtml_tokenizer_state_after_attribute_name@@Base+0x1bc>
   28ac8:	ldr	r3, [r5, #8]
   28acc:	mov	r0, r3
   28ad0:	ldr	r1, [r3, #16]
   28ad4:	bl	10898 <myhtml_token_attr_create@plt>
   28ad8:	cmp	r0, #0
   28adc:	str	r0, [r5, #56]	; 0x38
   28ae0:	bne	28a64 <myhtml_tokenizer_state_after_attribute_name@@Base+0x13c>
   28ae4:	mov	r3, #69	; 0x45
   28ae8:	mov	r7, #0
   28aec:	str	r3, [r5, #160]	; 0xa0
   28af0:	b	28a64 <myhtml_tokenizer_state_after_attribute_name@@Base+0x13c>
   28af4:	mov	r7, lr
   28af8:	b	28a64 <myhtml_tokenizer_state_after_attribute_name@@Base+0x13c>
   28afc:	str	r0, [r6, #40]	; 0x28
   28b00:	str	r0, [r6, #44]	; 0x2c
   28b04:	str	r0, [r5, #56]	; 0x38
   28b08:	str	r3, [r0]
   28b0c:	str	r3, [r0, #4]
   28b10:	mov	r3, r0
   28b14:	b	28a3c <myhtml_tokenizer_state_after_attribute_name@@Base+0x114>
   28b18:	ldr	r3, [r5, #8]
   28b1c:	mov	r0, r3
   28b20:	ldr	r1, [r3, #16]
   28b24:	bl	10898 <myhtml_token_attr_create@plt>
   28b28:	cmp	r0, #0
   28b2c:	str	r0, [r5, #56]	; 0x38
   28b30:	beq	28ae4 <myhtml_tokenizer_state_after_attribute_name@@Base+0x1bc>
   28b34:	ldr	r3, [r6, #40]	; 0x28
   28b38:	cmp	r3, #0
   28b3c:	beq	28b90 <myhtml_tokenizer_state_after_attribute_name@@Base+0x268>
   28b40:	ldr	r3, [r6, #44]	; 0x2c
   28b44:	mov	r2, #0
   28b48:	str	r0, [r3]
   28b4c:	str	r3, [r0, #4]
   28b50:	str	r0, [r6, #44]	; 0x2c
   28b54:	str	r2, [r0]
   28b58:	str	r0, [r5, #56]	; 0x38
   28b5c:	ldr	r3, [r5, #192]	; 0xc0
   28b60:	mov	r2, #0
   28b64:	mov	r1, #34	; 0x22
   28b68:	mov	r7, r4
   28b6c:	str	r2, [r0, #52]	; 0x34
   28b70:	str	r2, [r0, #56]	; 0x38
   28b74:	str	r2, [r0, #60]	; 0x3c
   28b78:	add	r3, r3, r4
   28b7c:	str	r3, [r0, #48]	; 0x30
   28b80:	str	r1, [r5, #160]	; 0xa0
   28b84:	b	28a64 <myhtml_tokenizer_state_after_attribute_name@@Base+0x13c>
   28b88:	mov	r7, r3
   28b8c:	b	28a64 <myhtml_tokenizer_state_after_attribute_name@@Base+0x13c>
   28b90:	str	r0, [r6, #40]	; 0x28
   28b94:	str	r0, [r6, #44]	; 0x2c
   28b98:	str	r0, [r5, #56]	; 0x38
   28b9c:	str	r3, [r0]
   28ba0:	str	r3, [r0, #4]
   28ba4:	b	28b5c <myhtml_tokenizer_state_after_attribute_name@@Base+0x234>

00028ba8 <myhtml_tokenizer_state_before_attribute_value@@Base>:
   28ba8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   28bac:	strd	r6, [sp, #8]
   28bb0:	ldr	r7, [sp, #24]
   28bb4:	str	r8, [sp, #16]
   28bb8:	str	lr, [sp, #20]
   28bbc:	cmp	r3, r7
   28bc0:	bcs	28d18 <myhtml_tokenizer_state_before_attribute_value@@Base+0x170>
   28bc4:	ldrb	ip, [r2, r3]
   28bc8:	add	lr, r2, r3
   28bcc:	cmp	ip, #62	; 0x3e
   28bd0:	beq	28c6c <myhtml_tokenizer_state_before_attribute_value@@Base+0xc4>
   28bd4:	sub	r4, ip, #9
   28bd8:	sub	r5, ip, #12
   28bdc:	cmp	r4, #1
   28be0:	cmphi	r5, #1
   28be4:	movhi	r4, #1
   28be8:	movls	r4, #0
   28bec:	cmp	ip, #32
   28bf0:	moveq	r4, #0
   28bf4:	andne	r4, r4, #1
   28bf8:	cmp	r4, #0
   28bfc:	subeq	r6, r2, #1
   28c00:	rsbeq	r2, r2, #1
   28c04:	addeq	r6, r6, r7
   28c08:	beq	28c48 <myhtml_tokenizer_state_before_attribute_value@@Base+0xa0>
   28c0c:	b	28cd8 <myhtml_tokenizer_state_before_attribute_value@@Base+0x130>
   28c10:	ldrb	ip, [lr, #1]!
   28c14:	cmp	ip, #62	; 0x3e
   28c18:	sub	r3, ip, #9
   28c1c:	sub	r4, ip, #12
   28c20:	beq	28c70 <myhtml_tokenizer_state_before_attribute_value@@Base+0xc8>
   28c24:	cmp	r3, #1
   28c28:	cmphi	r4, #1
   28c2c:	movhi	r3, #1
   28c30:	movls	r3, #0
   28c34:	cmp	ip, #32
   28c38:	moveq	r3, #0
   28c3c:	andne	r3, r3, #1
   28c40:	cmp	r3, #0
   28c44:	bne	28cdc <myhtml_tokenizer_state_before_attribute_value@@Base+0x134>
   28c48:	cmp	r6, lr
   28c4c:	add	r5, r2, lr
   28c50:	bne	28c10 <myhtml_tokenizer_state_before_attribute_value@@Base+0x68>
   28c54:	mov	r0, r5
   28c58:	ldrd	r4, [sp]
   28c5c:	ldrd	r6, [sp, #8]
   28c60:	ldr	r8, [sp, #16]
   28c64:	add	sp, sp, #20
   28c68:	pop	{pc}		; (ldr pc, [sp], #4)
   28c6c:	mov	r5, r3
   28c70:	mov	r6, r1
   28c74:	mov	r4, r0
   28c78:	bl	10ad8 <myhtml_tokenizer_set_state@plt>
   28c7c:	ldr	ip, [r6, #32]
   28c80:	add	r5, r5, #1
   28c84:	mov	r2, r6
   28c88:	mov	r1, r5
   28c8c:	mov	r0, r4
   28c90:	ldr	r3, [r4, #192]	; 0xc0
   28c94:	sub	r3, r3, ip
   28c98:	add	r3, r3, r5
   28c9c:	str	r3, [r6, #36]	; 0x24
   28ca0:	bl	ffc8 <myhtml_queue_add@plt>
   28ca4:	cmp	r0, #0
   28ca8:	bne	28cc8 <myhtml_tokenizer_state_before_attribute_value@@Base+0x120>
   28cac:	ldr	r3, [r4, #8]
   28cb0:	mov	r0, r3
   28cb4:	ldr	r1, [r3, #16]
   28cb8:	bl	10898 <myhtml_token_attr_create@plt>
   28cbc:	cmp	r0, #0
   28cc0:	str	r0, [r4, #56]	; 0x38
   28cc4:	bne	28c54 <myhtml_tokenizer_state_before_attribute_value@@Base+0xac>
   28cc8:	mov	r3, #69	; 0x45
   28ccc:	mov	r5, #0
   28cd0:	str	r3, [r4, #160]	; 0xa0
   28cd4:	b	28c54 <myhtml_tokenizer_state_before_attribute_value@@Base+0xac>
   28cd8:	mov	r5, r3
   28cdc:	cmp	ip, #34	; 0x22
   28ce0:	moveq	r3, #37	; 0x25
   28ce4:	addeq	r5, r5, #1
   28ce8:	streq	r3, [r0, #160]	; 0xa0
   28cec:	beq	28d04 <myhtml_tokenizer_state_before_attribute_value@@Base+0x15c>
   28cf0:	cmp	ip, #39	; 0x27
   28cf4:	moveq	r3, #38	; 0x26
   28cf8:	movne	r3, #39	; 0x27
   28cfc:	addeq	r5, r5, #1
   28d00:	str	r3, [r0, #160]	; 0xa0
   28d04:	ldr	r2, [r0, #56]	; 0x38
   28d08:	ldr	r3, [r0, #192]	; 0xc0
   28d0c:	add	r3, r3, r5
   28d10:	str	r3, [r2, #56]	; 0x38
   28d14:	b	28c54 <myhtml_tokenizer_state_before_attribute_value@@Base+0xac>
   28d18:	mov	r5, r3
   28d1c:	b	28c54 <myhtml_tokenizer_state_before_attribute_value@@Base+0xac>

00028d20 <myhtml_tokenizer_state_attribute_value_unquoted@@Base>:
   28d20:	strd	r4, [sp, #-16]!
   28d24:	ldr	r4, [sp, #16]
   28d28:	str	r6, [sp, #8]
   28d2c:	str	lr, [sp, #12]
   28d30:	cmp	r3, r4
   28d34:	bcs	28ea8 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x188>
   28d38:	mov	r5, r0
   28d3c:	ldrb	r0, [r2, r3]
   28d40:	mov	r6, r1
   28d44:	add	ip, r2, r3
   28d48:	sub	r1, r0, #9
   28d4c:	sub	lr, r0, #12
   28d50:	cmp	lr, #1
   28d54:	cmphi	r1, #1
   28d58:	movls	r1, #1
   28d5c:	movhi	r1, #0
   28d60:	cmp	r0, #32
   28d64:	orreq	r1, r1, #1
   28d68:	cmp	r1, #0
   28d6c:	bne	28ea0 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x180>
   28d70:	cmp	r0, #62	; 0x3e
   28d74:	subne	lr, r2, #1
   28d78:	rsbne	r0, r2, #1
   28d7c:	addne	lr, lr, r4
   28d80:	bne	28d90 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x70>
   28d84:	b	28e1c <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0xfc>
   28d88:	cmp	r2, #62	; 0x3e
   28d8c:	beq	28e20 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x100>
   28d90:	cmp	lr, ip
   28d94:	add	r4, r0, ip
   28d98:	beq	28e08 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0xe8>
   28d9c:	ldrb	r2, [ip, #1]!
   28da0:	sub	r3, r2, #9
   28da4:	sub	r1, r2, #12
   28da8:	cmp	r1, #1
   28dac:	cmphi	r3, #1
   28db0:	movls	r3, #1
   28db4:	movhi	r3, #0
   28db8:	cmp	r2, #32
   28dbc:	orreq	r3, r3, #1
   28dc0:	cmp	r3, #0
   28dc4:	beq	28d88 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x68>
   28dc8:	ldr	r2, [r5, #56]	; 0x38
   28dcc:	mov	r1, #33	; 0x21
   28dd0:	ldr	r3, [r5, #192]	; 0xc0
   28dd4:	ldr	ip, [r2, #56]	; 0x38
   28dd8:	str	r1, [r5, #160]	; 0xa0
   28ddc:	ldr	r1, [r5, #8]
   28de0:	sub	r3, r3, ip
   28de4:	add	r3, r3, r4
   28de8:	mov	r0, r1
   28dec:	ldr	r1, [r1, #16]
   28df0:	str	r3, [r2, #60]	; 0x3c
   28df4:	bl	10898 <myhtml_token_attr_create@plt>
   28df8:	cmp	r0, #0
   28dfc:	str	r0, [r5, #56]	; 0x38
   28e00:	addne	r4, r4, #1
   28e04:	beq	28e90 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x170>
   28e08:	mov	r0, r4
   28e0c:	ldrd	r4, [sp]
   28e10:	ldr	r6, [sp, #8]
   28e14:	add	sp, sp, #12
   28e18:	pop	{pc}		; (ldr pc, [sp], #4)
   28e1c:	mov	r4, r3
   28e20:	ldr	r2, [r5, #56]	; 0x38
   28e24:	mov	r1, r6
   28e28:	mov	r0, r5
   28e2c:	ldr	r3, [r5, #192]	; 0xc0
   28e30:	ldr	ip, [r2, #56]	; 0x38
   28e34:	sub	r3, r3, ip
   28e38:	add	r3, r3, r4
   28e3c:	add	r4, r4, #1
   28e40:	str	r3, [r2, #60]	; 0x3c
   28e44:	bl	10ad8 <myhtml_tokenizer_set_state@plt>
   28e48:	ldr	ip, [r6, #32]
   28e4c:	mov	r2, r6
   28e50:	mov	r1, r4
   28e54:	mov	r0, r5
   28e58:	ldr	r3, [r5, #192]	; 0xc0
   28e5c:	sub	r3, r3, ip
   28e60:	add	r3, r3, r4
   28e64:	str	r3, [r6, #36]	; 0x24
   28e68:	bl	ffc8 <myhtml_queue_add@plt>
   28e6c:	cmp	r0, #0
   28e70:	bne	28e90 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x170>
   28e74:	ldr	r3, [r5, #8]
   28e78:	mov	r0, r3
   28e7c:	ldr	r1, [r3, #16]
   28e80:	bl	10898 <myhtml_token_attr_create@plt>
   28e84:	cmp	r0, #0
   28e88:	str	r0, [r5, #56]	; 0x38
   28e8c:	bne	28e08 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0xe8>
   28e90:	mov	r3, #69	; 0x45
   28e94:	mov	r4, #0
   28e98:	str	r3, [r5, #160]	; 0xa0
   28e9c:	b	28e08 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0xe8>
   28ea0:	mov	r4, r3
   28ea4:	b	28dc8 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0xa8>
   28ea8:	mov	r4, r3
   28eac:	b	28e08 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0xe8>

00028eb0 <myhtml_tokenizer_state_after_attribute_value_quoted@@Base>:
   28eb0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   28eb4:	strd	r6, [sp, #8]
   28eb8:	mov	r6, r0
   28ebc:	str	r8, [sp, #16]
   28ec0:	str	lr, [sp, #20]
   28ec4:	ldrb	ip, [r2, r3]
   28ec8:	sub	r4, ip, #9
   28ecc:	sub	r5, ip, #12
   28ed0:	cmp	r5, #1
   28ed4:	cmphi	r4, #1
   28ed8:	movls	r4, #1
   28edc:	movhi	r4, #0
   28ee0:	cmp	ip, #32
   28ee4:	orreq	r4, r4, #1
   28ee8:	cmp	r4, #0
   28eec:	beq	28f14 <myhtml_tokenizer_state_after_attribute_value_quoted@@Base+0x64>
   28ef0:	mov	r2, #33	; 0x21
   28ef4:	add	r7, r3, #1
   28ef8:	str	r2, [r0, #160]	; 0xa0
   28efc:	mov	r0, r7
   28f00:	ldrd	r4, [sp]
   28f04:	ldrd	r6, [sp, #8]
   28f08:	ldr	r8, [sp, #16]
   28f0c:	add	sp, sp, #20
   28f10:	pop	{pc}		; (ldr pc, [sp], #4)
   28f14:	cmp	ip, #47	; 0x2f
   28f18:	moveq	r2, #42	; 0x2a
   28f1c:	addeq	r7, r3, #1
   28f20:	streq	r2, [r0, #160]	; 0xa0
   28f24:	beq	28efc <myhtml_tokenizer_state_after_attribute_value_quoted@@Base+0x4c>
   28f28:	cmp	ip, #62	; 0x3e
   28f2c:	movne	r2, #33	; 0x21
   28f30:	movne	r7, r3
   28f34:	strne	r2, [r0, #160]	; 0xa0
   28f38:	bne	28efc <myhtml_tokenizer_state_after_attribute_value_quoted@@Base+0x4c>
   28f3c:	mov	r5, r1
   28f40:	mov	r7, r3
   28f44:	bl	10ad8 <myhtml_tokenizer_set_state@plt>
   28f48:	ldr	lr, [r5, #32]
   28f4c:	add	r7, r7, #1
   28f50:	mov	r2, r5
   28f54:	mov	r1, r7
   28f58:	mov	r0, r6
   28f5c:	ldr	ip, [r6, #192]	; 0xc0
   28f60:	sub	ip, ip, lr
   28f64:	add	ip, ip, r7
   28f68:	str	ip, [r5, #36]	; 0x24
   28f6c:	bl	ffc8 <myhtml_queue_add@plt>
   28f70:	cmp	r0, #0
   28f74:	movne	r2, #69	; 0x45
   28f78:	movne	r7, r4
   28f7c:	strne	r2, [r6, #160]	; 0xa0
   28f80:	b	28efc <myhtml_tokenizer_state_after_attribute_value_quoted@@Base+0x4c>

00028f84 <_myhtml_tokenizer_state_andata_end_tag_name@@Base>:
   28f84:	strd	r4, [sp, #-32]!	; 0xffffffe0
   28f88:	mov	r5, r3
   28f8c:	mov	r4, r1
   28f90:	ldr	ip, [r5]
   28f94:	ldr	r3, [r0, #192]	; 0xc0
   28f98:	strd	r6, [sp, #8]
   28f9c:	mov	r6, r0
   28fa0:	str	lr, [sp, #28]
   28fa4:	ldr	lr, [r1, #24]
   28fa8:	strd	r8, [sp, #16]
   28fac:	str	sl, [sp, #24]
   28fb0:	ldr	r7, [sp, #32]
   28fb4:	sub	r3, r3, lr
   28fb8:	add	r3, r3, ip
   28fbc:	str	r3, [r1, #28]
   28fc0:	ldr	r3, [r5]
   28fc4:	bl	10bd4 <myhtml_check_tag_parser@plt>
   28fc8:	ldr	r3, [r4]
   28fcc:	ldr	r2, [r6, #60]	; 0x3c
   28fd0:	cmp	r3, r2
   28fd4:	beq	29014 <_myhtml_tokenizer_state_andata_end_tag_name@@Base+0x90>
   28fd8:	mov	r3, #0
   28fdc:	str	r7, [r4, #24]
   28fe0:	mov	r2, #2
   28fe4:	mov	r0, r3
   28fe8:	str	r3, [r4, #28]
   28fec:	ldr	r3, [r5]
   28ff0:	str	r2, [r6, #160]	; 0xa0
   28ff4:	add	r3, r3, #1
   28ff8:	str	r3, [r5]
   28ffc:	ldrd	r4, [sp]
   29000:	ldrd	r6, [sp, #8]
   29004:	ldrd	r8, [sp, #16]
   29008:	ldr	sl, [sp, #24]
   2900c:	add	sp, sp, #28
   29010:	pop	{pc}		; (ldr pc, [sp], #4)
   29014:	ldr	r8, [r4, #24]
   29018:	sub	r3, r8, #2
   2901c:	cmp	r7, r3
   29020:	bcc	29050 <_myhtml_tokenizer_state_andata_end_tag_name@@Base+0xcc>
   29024:	ldr	r1, [r6, #192]	; 0xc0
   29028:	mov	r0, #1
   2902c:	str	r2, [r4]
   29030:	ldr	r3, [r5]
   29034:	ldr	r2, [r4, #48]	; 0x30
   29038:	sub	r3, r3, r8
   2903c:	add	r3, r3, r1
   29040:	orr	r2, r2, r0
   29044:	str	r3, [r4, #28]
   29048:	str	r2, [r4, #48]	; 0x30
   2904c:	b	28ffc <_myhtml_tokenizer_state_andata_end_tag_name@@Base+0x78>
   29050:	mov	r1, #1
   29054:	sub	r2, r8, r7
   29058:	ldr	r9, [r4, #32]
   2905c:	sub	r2, r2, #2
   29060:	mov	r0, r6
   29064:	str	r1, [r4]
   29068:	ldr	r1, [sp, #36]	; 0x24
   2906c:	str	r7, [r4, #24]
   29070:	ldr	r3, [r4, #48]	; 0x30
   29074:	str	r2, [r4, #28]
   29078:	str	r7, [r4, #32]
   2907c:	str	r2, [r4, #36]	; 0x24
   29080:	mov	r2, r4
   29084:	orr	r3, r1, r3
   29088:	str	r3, [r4, #48]	; 0x30
   2908c:	ldr	r3, [r4, #48]	; 0x30
   29090:	ldr	r1, [r4, #48]	; 0x30
   29094:	and	r3, r3, #8
   29098:	eor	r3, r3, r1
   2909c:	ldr	r1, [r5]
   290a0:	str	r3, [r4, #48]	; 0x30
   290a4:	bl	ffc8 <myhtml_queue_add@plt>
   290a8:	ldr	r2, [r6, #60]	; 0x3c
   290ac:	ldr	r4, [r6, #64]	; 0x40
   290b0:	str	r8, [r4, #24]
   290b4:	str	r9, [r4, #32]
   290b8:	b	29024 <_myhtml_tokenizer_state_andata_end_tag_name@@Base+0xa0>

000290bc <myhtml_tokenizer_state_rcdata_end_tag_name@@Base>:
   290bc:	strd	r4, [sp, #-24]!	; 0xffffffe8
   290c0:	mov	r5, r0
   290c4:	mov	r0, r3
   290c8:	strd	r6, [sp, #8]
   290cc:	mov	r4, r1
   290d0:	str	r8, [sp, #16]
   290d4:	str	lr, [sp, #20]
   290d8:	sub	sp, sp, #16
   290dc:	ldr	lr, [sp, #40]	; 0x28
   290e0:	str	r3, [sp, #12]
   290e4:	ldr	r6, [r1, #24]
   290e8:	cmp	r3, lr
   290ec:	ldr	r3, [r5, #192]	; 0xc0
   290f0:	add	r3, r3, r0
   290f4:	str	r3, [r1, #24]
   290f8:	bcs	2917c <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0xc0>
   290fc:	ldr	ip, [pc, #364]	; 29270 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x1b4>
   29100:	add	r3, r2, r0
   29104:	ldrb	r1, [r2, r0]
   29108:	add	ip, pc, ip
   2910c:	ldrb	ip, [ip, r1]
   29110:	cmp	ip, #2
   29114:	beq	2919c <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0xe0>
   29118:	cmp	r1, #62	; 0x3e
   2911c:	beq	291e0 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x124>
   29120:	cmp	r1, #47	; 0x2f
   29124:	beq	2919c <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0xe0>
   29128:	cmp	ip, #1
   2912c:	bne	2920c <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x150>
   29130:	ldr	r8, [pc, #316]	; 29274 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x1b8>
   29134:	add	lr, lr, r2
   29138:	rsb	r7, r2, #1
   2913c:	sub	lr, lr, #1
   29140:	add	r8, pc, r8
   29144:	b	29170 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0xb4>
   29148:	ldrb	r1, [r3, #1]!
   2914c:	ldrb	ip, [r8, r1]
   29150:	cmp	ip, #2
   29154:	beq	29198 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0xdc>
   29158:	cmp	r1, #62	; 0x3e
   2915c:	beq	291dc <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x120>
   29160:	cmp	r1, #47	; 0x2f
   29164:	beq	29198 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0xdc>
   29168:	cmp	ip, #1
   2916c:	bne	2920c <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x150>
   29170:	cmp	lr, r3
   29174:	add	r0, r7, r3
   29178:	bne	29148 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x8c>
   2917c:	str	r6, [r4, #24]
   29180:	add	sp, sp, #16
   29184:	ldrd	r4, [sp]
   29188:	ldrd	r6, [sp, #8]
   2918c:	ldr	r8, [sp, #16]
   29190:	add	sp, sp, #20
   29194:	pop	{pc}		; (ldr pc, [sp], #4)
   29198:	str	r0, [sp, #12]
   2919c:	mov	r0, #16
   291a0:	add	r3, sp, #12
   291a4:	str	r6, [sp]
   291a8:	mov	r1, r4
   291ac:	str	r0, [sp, #4]
   291b0:	mov	r0, r5
   291b4:	bl	10c04 <_myhtml_tokenizer_state_andata_end_tag_name@plt>
   291b8:	cmp	r0, #0
   291bc:	ldr	r0, [sp, #12]
   291c0:	beq	2917c <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0xc0>
   291c4:	mov	r3, #33	; 0x21
   291c8:	mov	r2, #0
   291cc:	add	r0, r0, #1
   291d0:	str	r2, [r5, #60]	; 0x3c
   291d4:	str	r3, [r5, #160]	; 0xa0
   291d8:	b	29180 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0xc4>
   291dc:	str	r0, [sp, #12]
   291e0:	mov	r0, #16
   291e4:	add	r3, sp, #12
   291e8:	str	r6, [sp]
   291ec:	mov	r1, r4
   291f0:	str	r0, [sp, #4]
   291f4:	mov	r0, r5
   291f8:	bl	10c04 <_myhtml_tokenizer_state_andata_end_tag_name@plt>
   291fc:	cmp	r0, #0
   29200:	bne	29218 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x15c>
   29204:	ldr	r0, [sp, #12]
   29208:	b	2917c <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0xc0>
   2920c:	mov	r3, #2
   29210:	str	r3, [r5, #160]	; 0xa0
   29214:	b	2917c <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0xc0>
   29218:	ldr	ip, [r5, #64]	; 0x40
   2921c:	mov	r0, r5
   29220:	ldr	r1, [sp, #12]
   29224:	ldr	r3, [r5, #192]	; 0xc0
   29228:	mov	r2, ip
   2922c:	ldr	lr, [ip, #32]
   29230:	add	r1, r1, #1
   29234:	add	r3, r1, r3
   29238:	str	r1, [sp, #12]
   2923c:	sub	r3, r3, lr
   29240:	str	r3, [ip, #36]	; 0x24
   29244:	bl	ffc8 <myhtml_queue_add@plt>
   29248:	cmp	r0, #0
   2924c:	beq	29260 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x1a4>
   29250:	mov	r3, #69	; 0x45
   29254:	mov	r0, #0
   29258:	str	r3, [r5, #160]	; 0xa0
   2925c:	b	29180 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0xc4>
   29260:	str	r0, [r5, #60]	; 0x3c
   29264:	str	r0, [r5, #160]	; 0xa0
   29268:	ldr	r0, [sp, #12]
   2926c:	b	29180 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0xc4>
   29270:	andeq	r6, sp, r8, lsr sl
   29274:	andeq	r6, sp, r0, lsl #20

00029278 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base>:
   29278:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2927c:	mov	r5, r0
   29280:	mov	r0, r3
   29284:	strd	r6, [sp, #8]
   29288:	str	r8, [sp, #16]
   2928c:	str	lr, [sp, #20]
   29290:	sub	sp, sp, #16
   29294:	ldr	r4, [sp, #40]	; 0x28
   29298:	str	r3, [sp, #12]
   2929c:	ldr	r8, [r1, #24]
   292a0:	cmp	r3, r4
   292a4:	ldr	r3, [r5, #192]	; 0xc0
   292a8:	add	r3, r3, r0
   292ac:	str	r3, [r1, #24]
   292b0:	bcs	29334 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0xbc>
   292b4:	ldr	lr, [pc, #352]	; 2941c <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x1a4>
   292b8:	add	r3, r2, r0
   292bc:	ldrb	ip, [r2, r0]
   292c0:	add	lr, pc, lr
   292c4:	ldrb	lr, [lr, ip]
   292c8:	cmp	lr, #2
   292cc:	beq	29354 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0xdc>
   292d0:	cmp	ip, #62	; 0x3e
   292d4:	beq	29394 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x11c>
   292d8:	cmp	ip, #47	; 0x2f
   292dc:	beq	29354 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0xdc>
   292e0:	cmp	lr, #1
   292e4:	bne	293fc <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x184>
   292e8:	ldr	r7, [pc, #304]	; 29420 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x1a8>
   292ec:	add	r4, r4, r2
   292f0:	rsb	r6, r2, #1
   292f4:	sub	r4, r4, #1
   292f8:	add	r7, pc, r7
   292fc:	b	29328 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0xb0>
   29300:	ldrb	ip, [r3, #1]!
   29304:	ldrb	lr, [r7, ip]
   29308:	cmp	lr, #2
   2930c:	beq	29350 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0xd8>
   29310:	cmp	ip, #62	; 0x3e
   29314:	beq	29390 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x118>
   29318:	cmp	ip, #47	; 0x2f
   2931c:	beq	29350 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0xd8>
   29320:	cmp	lr, #1
   29324:	bne	293fc <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x184>
   29328:	cmp	r3, r4
   2932c:	add	r0, r6, r3
   29330:	bne	29300 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x88>
   29334:	str	r8, [r1, #24]
   29338:	add	sp, sp, #16
   2933c:	ldrd	r4, [sp]
   29340:	ldrd	r6, [sp, #8]
   29344:	ldr	r8, [sp, #16]
   29348:	add	sp, sp, #20
   2934c:	pop	{pc}		; (ldr pc, [sp], #4)
   29350:	str	r0, [sp, #12]
   29354:	mov	r0, #32
   29358:	add	r3, sp, #12
   2935c:	str	r8, [sp]
   29360:	str	r0, [sp, #4]
   29364:	mov	r0, r5
   29368:	bl	10c04 <_myhtml_tokenizer_state_andata_end_tag_name@plt>
   2936c:	cmp	r0, #0
   29370:	ldr	r0, [sp, #12]
   29374:	beq	29338 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0xc0>
   29378:	mov	r3, #33	; 0x21
   2937c:	mov	r2, #0
   29380:	add	r0, r0, #1
   29384:	str	r2, [r5, #60]	; 0x3c
   29388:	str	r3, [r5, #160]	; 0xa0
   2938c:	b	29338 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0xc0>
   29390:	str	r0, [sp, #12]
   29394:	mov	r0, #32
   29398:	add	r3, sp, #12
   2939c:	str	r8, [sp]
   293a0:	str	r0, [sp, #4]
   293a4:	mov	r0, r5
   293a8:	bl	10c04 <_myhtml_tokenizer_state_andata_end_tag_name@plt>
   293ac:	cmp	r0, #0
   293b0:	beq	29414 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x19c>
   293b4:	ldr	ip, [r5, #64]	; 0x40
   293b8:	mov	r0, r5
   293bc:	ldr	r1, [sp, #12]
   293c0:	ldr	r3, [r5, #192]	; 0xc0
   293c4:	mov	r2, ip
   293c8:	ldr	lr, [ip, #32]
   293cc:	add	r1, r1, #1
   293d0:	add	r3, r1, r3
   293d4:	str	r1, [sp, #12]
   293d8:	sub	r3, r3, lr
   293dc:	str	r3, [ip, #36]	; 0x24
   293e0:	bl	ffc8 <myhtml_queue_add@plt>
   293e4:	cmp	r0, #0
   293e8:	beq	2940c <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x194>
   293ec:	mov	r3, #69	; 0x45
   293f0:	mov	r0, #0
   293f4:	str	r3, [r5, #160]	; 0xa0
   293f8:	b	29338 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0xc0>
   293fc:	mov	r3, #4
   29400:	str	r8, [r1, #24]
   29404:	str	r3, [r5, #160]	; 0xa0
   29408:	b	29338 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0xc0>
   2940c:	str	r0, [r5, #60]	; 0x3c
   29410:	str	r0, [r5, #160]	; 0xa0
   29414:	ldr	r0, [sp, #12]
   29418:	b	29338 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0xc0>
   2941c:	andeq	r6, sp, r0, lsl #17
   29420:	andeq	r6, sp, r8, asr #16

00029424 <myhtml_tokenizer_state_init@@Base>:
   29424:	strd	r4, [sp, #-16]!
   29428:	mov	r5, r0
   2942c:	movw	r0, #19604	; 0x4c94
   29430:	ldr	r4, [pc, #1580]	; 29a64 <myhtml_tokenizer_state_init@@Base+0x640>
   29434:	str	r6, [sp, #8]
   29438:	str	lr, [sp, #12]
   2943c:	bl	10c28 <mycore_malloc@plt>
   29440:	cmp	r0, #0
   29444:	str	r0, [r5, #24]
   29448:	add	r4, pc, r4
   2944c:	beq	29a50 <myhtml_tokenizer_state_init@@Base+0x62c>
   29450:	mov	r3, r0
   29454:	ldr	r0, [pc, #1548]	; 29a68 <myhtml_tokenizer_state_init@@Base+0x644>
   29458:	ldr	r1, [pc, #1548]	; 29a6c <myhtml_tokenizer_state_init@@Base+0x648>
   2945c:	ldr	r2, [pc, #1548]	; 29a70 <myhtml_tokenizer_state_init@@Base+0x64c>
   29460:	ldr	ip, [r4, r0]
   29464:	ldr	r0, [pc, #1544]	; 29a74 <myhtml_tokenizer_state_init@@Base+0x650>
   29468:	str	ip, [r3]
   2946c:	ldr	ip, [r4, r1]
   29470:	ldr	r1, [pc, #1536]	; 29a78 <myhtml_tokenizer_state_init@@Base+0x654>
   29474:	str	ip, [r3, #28]
   29478:	ldr	ip, [r4, r2]
   2947c:	ldr	r2, [pc, #1528]	; 29a7c <myhtml_tokenizer_state_init@@Base+0x658>
   29480:	str	ip, [r3, #36]	; 0x24
   29484:	ldr	ip, [r4, r0]
   29488:	ldr	r0, [pc, #1520]	; 29a80 <myhtml_tokenizer_state_init@@Base+0x65c>
   2948c:	str	ip, [r3, #32]
   29490:	ldr	ip, [r4, r1]
   29494:	ldr	r1, [pc, #1512]	; 29a84 <myhtml_tokenizer_state_init@@Base+0x660>
   29498:	str	ip, [r3, #168]	; 0xa8
   2949c:	ldr	ip, [r4, r2]
   294a0:	ldr	r2, [pc, #1504]	; 29a88 <myhtml_tokenizer_state_init@@Base+0x664>
   294a4:	str	ip, [r3, #176]	; 0xb0
   294a8:	ldr	ip, [r4, r0]
   294ac:	ldr	r0, [pc, #1496]	; 29a8c <myhtml_tokenizer_state_init@@Base+0x668>
   294b0:	str	ip, [r3, #132]	; 0x84
   294b4:	ldr	ip, [r4, r1]
   294b8:	ldr	r1, [pc, #1488]	; 29a90 <myhtml_tokenizer_state_init@@Base+0x66c>
   294bc:	str	ip, [r3, #136]	; 0x88
   294c0:	ldr	ip, [r4, r2]
   294c4:	ldr	r2, [pc, #1480]	; 29a94 <myhtml_tokenizer_state_init@@Base+0x670>
   294c8:	str	ip, [r3, #140]	; 0x8c
   294cc:	ldr	ip, [r4, r0]
   294d0:	ldr	r0, [pc, #1472]	; 29a98 <myhtml_tokenizer_state_init@@Base+0x674>
   294d4:	str	ip, [r3, #144]	; 0x90
   294d8:	ldr	ip, [r4, r1]
   294dc:	ldr	r1, [pc, #1464]	; 29a9c <myhtml_tokenizer_state_init@@Base+0x678>
   294e0:	str	ip, [r3, #164]	; 0xa4
   294e4:	ldr	ip, [r4, r2]
   294e8:	ldr	r2, [pc, #1456]	; 29aa0 <myhtml_tokenizer_state_init@@Base+0x67c>
   294ec:	str	ip, [r3, #148]	; 0x94
   294f0:	ldr	ip, [r4, r0]
   294f4:	ldr	r0, [pc, #1448]	; 29aa4 <myhtml_tokenizer_state_init@@Base+0x680>
   294f8:	str	ip, [r3, #152]	; 0x98
   294fc:	ldr	ip, [r4, r1]
   29500:	ldr	r1, [pc, #1440]	; 29aa8 <myhtml_tokenizer_state_init@@Base+0x684>
   29504:	str	ip, [r3, #156]	; 0x9c
   29508:	ldr	ip, [r4, r2]
   2950c:	ldr	r2, [pc, #1432]	; 29aac <myhtml_tokenizer_state_init@@Base+0x688>
   29510:	str	ip, [r3, #180]	; 0xb4
   29514:	ldr	ip, [r4, r0]
   29518:	ldr	r0, [pc, #1424]	; 29ab0 <myhtml_tokenizer_state_init@@Base+0x68c>
   2951c:	str	ip, [r3, #184]	; 0xb8
   29520:	ldr	ip, [r4, r1]
   29524:	ldr	r1, [pc, #1416]	; 29ab4 <myhtml_tokenizer_state_init@@Base+0x690>
   29528:	str	ip, [r3, #188]	; 0xbc
   2952c:	ldr	ip, [r4, r2]
   29530:	ldr	r2, [pc, #1408]	; 29ab8 <myhtml_tokenizer_state_init@@Base+0x694>
   29534:	str	ip, [r3, #196]	; 0xc4
   29538:	ldr	ip, [r4, r0]
   2953c:	ldr	r0, [pc, #1400]	; 29abc <myhtml_tokenizer_state_init@@Base+0x698>
   29540:	str	ip, [r3, #192]	; 0xc0
   29544:	ldr	ip, [r4, r1]
   29548:	ldr	r1, [pc, #1392]	; 29ac0 <myhtml_tokenizer_state_init@@Base+0x69c>
   2954c:	str	ip, [r3, #200]	; 0xc8
   29550:	ldr	ip, [r4, r2]
   29554:	ldr	r2, [pc, #1384]	; 29ac4 <myhtml_tokenizer_state_init@@Base+0x6a0>
   29558:	str	ip, [r3, #172]	; 0xac
   2955c:	ldr	ip, [r4, r0]
   29560:	ldr	r0, [pc, #1376]	; 29ac8 <myhtml_tokenizer_state_init@@Base+0x6a4>
   29564:	str	ip, [r3, #268]	; 0x10c
   29568:	ldr	ip, [r4, r1]
   2956c:	ldr	r1, [pc, #1368]	; 29acc <myhtml_tokenizer_state_init@@Base+0x6a8>
   29570:	str	ip, [r3, #8]
   29574:	ldr	ip, [r4, r2]
   29578:	ldr	r2, [pc, #1360]	; 29ad0 <myhtml_tokenizer_state_init@@Base+0x6ac>
   2957c:	str	ip, [r3, #40]	; 0x28
   29580:	ldr	ip, [r4, r0]
   29584:	ldr	r0, [pc, #1352]	; 29ad4 <myhtml_tokenizer_state_init@@Base+0x6b0>
   29588:	str	ip, [r3, #44]	; 0x2c
   2958c:	ldr	ip, [r4, r1]
   29590:	ldr	r1, [pc, #1344]	; 29ad8 <myhtml_tokenizer_state_init@@Base+0x6b4>
   29594:	str	ip, [r3, #48]	; 0x30
   29598:	ldr	ip, [r4, r2]
   2959c:	ldr	r2, [pc, #1336]	; 29adc <myhtml_tokenizer_state_init@@Base+0x6b8>
   295a0:	str	ip, [r3, #16]
   295a4:	ldr	ip, [r4, r0]
   295a8:	ldr	r0, [pc, #1328]	; 29ae0 <myhtml_tokenizer_state_init@@Base+0x6bc>
   295ac:	str	ip, [r3, #52]	; 0x34
   295b0:	ldr	ip, [r4, r1]
   295b4:	ldr	r1, [pc, #1320]	; 29ae4 <myhtml_tokenizer_state_init@@Base+0x6c0>
   295b8:	str	ip, [r3, #56]	; 0x38
   295bc:	ldr	ip, [r4, r2]
   295c0:	ldr	r2, [pc, #1312]	; 29ae8 <myhtml_tokenizer_state_init@@Base+0x6c4>
   295c4:	str	ip, [r3, #60]	; 0x3c
   295c8:	ldr	ip, [r4, r0]
   295cc:	ldr	r0, [pc, #1304]	; 29aec <myhtml_tokenizer_state_init@@Base+0x6c8>
   295d0:	str	ip, [r3, #24]
   295d4:	ldr	ip, [r4, r1]
   295d8:	ldr	r1, [pc, #1296]	; 29af0 <myhtml_tokenizer_state_init@@Base+0x6cc>
   295dc:	str	ip, [r3, #204]	; 0xcc
   295e0:	ldr	ip, [r4, r2]
   295e4:	ldr	r2, [pc, #1288]	; 29af4 <myhtml_tokenizer_state_init@@Base+0x6d0>
   295e8:	str	ip, [r3, #208]	; 0xd0
   295ec:	ldr	ip, [r4, r0]
   295f0:	ldr	r0, [pc, #1280]	; 29af8 <myhtml_tokenizer_state_init@@Base+0x6d4>
   295f4:	str	ip, [r3, #212]	; 0xd4
   295f8:	ldr	ip, [r4, r1]
   295fc:	ldr	r1, [pc, #1272]	; 29afc <myhtml_tokenizer_state_init@@Base+0x6d8>
   29600:	str	ip, [r3, #216]	; 0xd8
   29604:	ldr	ip, [r4, r2]
   29608:	ldr	r2, [pc, #1264]	; 29b00 <myhtml_tokenizer_state_init@@Base+0x6dc>
   2960c:	str	ip, [r3, #272]	; 0x110
   29610:	ldr	ip, [r4, r0]
   29614:	ldr	r0, [pc, #1256]	; 29b04 <myhtml_tokenizer_state_init@@Base+0x6e0>
   29618:	str	ip, [r3, #224]	; 0xe0
   2961c:	ldr	ip, [r4, r1]
   29620:	ldr	r1, [pc, #1248]	; 29b08 <myhtml_tokenizer_state_init@@Base+0x6e4>
   29624:	str	ip, [r3, #228]	; 0xe4
   29628:	ldr	ip, [r4, r2]
   2962c:	ldr	r2, [pc, #1240]	; 29b0c <myhtml_tokenizer_state_init@@Base+0x6e8>
   29630:	str	ip, [r3, #232]	; 0xe8
   29634:	ldr	ip, [r4, r0]
   29638:	ldr	r0, [pc, #1232]	; 29b10 <myhtml_tokenizer_state_init@@Base+0x6ec>
   2963c:	str	ip, [r3, #236]	; 0xec
   29640:	ldr	ip, [r4, r1]
   29644:	ldr	r1, [pc, #1224]	; 29b14 <myhtml_tokenizer_state_init@@Base+0x6f0>
   29648:	str	ip, [r3, #252]	; 0xfc
   2964c:	ldr	ip, [r4, r2]
   29650:	ldr	r2, [pc, #1216]	; 29b18 <myhtml_tokenizer_state_init@@Base+0x6f4>
   29654:	str	ip, [r3, #256]	; 0x100
   29658:	ldr	ip, [r4, r0]
   2965c:	ldr	r0, [pc, #1208]	; 29b1c <myhtml_tokenizer_state_init@@Base+0x6f8>
   29660:	str	ip, [r3, #260]	; 0x104
   29664:	ldr	ip, [r4, r1]
   29668:	ldr	r1, [pc, #1200]	; 29b20 <myhtml_tokenizer_state_init@@Base+0x6fc>
   2966c:	str	ip, [r3, #264]	; 0x108
   29670:	ldr	ip, [r4, r2]
   29674:	ldr	r2, [pc, #1192]	; 29b24 <myhtml_tokenizer_state_init@@Base+0x700>
   29678:	str	ip, [r3, #20]
   2967c:	ldr	ip, [r4, r0]
   29680:	ldr	r0, [pc, #1184]	; 29b28 <myhtml_tokenizer_state_init@@Base+0x704>
   29684:	str	ip, [r3, #64]	; 0x40
   29688:	ldr	ip, [r4, r1]
   2968c:	ldr	r1, [pc, #1176]	; 29b2c <myhtml_tokenizer_state_init@@Base+0x708>
   29690:	str	ip, [r3, #68]	; 0x44
   29694:	ldr	ip, [r4, r2]
   29698:	ldr	r2, [pc, #1168]	; 29b30 <myhtml_tokenizer_state_init@@Base+0x70c>
   2969c:	str	ip, [r3, #72]	; 0x48
   296a0:	ldr	ip, [r4, r0]
   296a4:	ldr	r0, [pc, #1160]	; 29b34 <myhtml_tokenizer_state_init@@Base+0x710>
   296a8:	str	ip, [r3, #76]	; 0x4c
   296ac:	ldr	ip, [r4, r1]
   296b0:	ldr	r1, [pc, #1152]	; 29b38 <myhtml_tokenizer_state_init@@Base+0x714>
   296b4:	str	ip, [r3, #80]	; 0x50
   296b8:	ldr	ip, [r4, r2]
   296bc:	ldr	r2, [pc, #1144]	; 29b3c <myhtml_tokenizer_state_init@@Base+0x718>
   296c0:	str	ip, [r3, #84]	; 0x54
   296c4:	ldr	ip, [r4, r0]
   296c8:	ldr	r0, [pc, #1136]	; 29b40 <myhtml_tokenizer_state_init@@Base+0x71c>
   296cc:	str	ip, [r3, #88]	; 0x58
   296d0:	ldr	ip, [r4, r1]
   296d4:	ldr	r1, [pc, #1128]	; 29b44 <myhtml_tokenizer_state_init@@Base+0x720>
   296d8:	str	ip, [r3, #92]	; 0x5c
   296dc:	ldr	ip, [r4, r2]
   296e0:	ldr	r2, [pc, #1120]	; 29b48 <myhtml_tokenizer_state_init@@Base+0x724>
   296e4:	str	ip, [r3, #96]	; 0x60
   296e8:	ldr	ip, [r4, r0]
   296ec:	ldr	r0, [pc, #1112]	; 29b4c <myhtml_tokenizer_state_init@@Base+0x728>
   296f0:	str	ip, [r3, #100]	; 0x64
   296f4:	ldr	ip, [r4, r1]
   296f8:	ldr	r1, [pc, #1104]	; 29b50 <myhtml_tokenizer_state_init@@Base+0x72c>
   296fc:	str	ip, [r3, #104]	; 0x68
   29700:	ldr	ip, [r4, r2]
   29704:	ldr	r2, [pc, #1096]	; 29b54 <myhtml_tokenizer_state_init@@Base+0x730>
   29708:	str	ip, [r3, #108]	; 0x6c
   2970c:	ldr	ip, [r4, r0]
   29710:	ldr	r0, [pc, #1088]	; 29b58 <myhtml_tokenizer_state_init@@Base+0x734>
   29714:	str	ip, [r3, #112]	; 0x70
   29718:	ldr	ip, [r4, r1]
   2971c:	ldr	r1, [pc, #1080]	; 29b5c <myhtml_tokenizer_state_init@@Base+0x738>
   29720:	str	ip, [r3, #116]	; 0x74
   29724:	ldr	ip, [r4, r2]
   29728:	ldr	r2, [pc, #1072]	; 29b60 <myhtml_tokenizer_state_init@@Base+0x73c>
   2972c:	str	ip, [r3, #120]	; 0x78
   29730:	ldr	ip, [r4, r0]
   29734:	ldr	r0, [pc, #1064]	; 29b64 <myhtml_tokenizer_state_init@@Base+0x740>
   29738:	str	ip, [r3, #124]	; 0x7c
   2973c:	ldr	ip, [r4, r1]
   29740:	ldr	r1, [pc, #1056]	; 29b68 <myhtml_tokenizer_state_init@@Base+0x744>
   29744:	str	ip, [r3, #128]	; 0x80
   29748:	ldr	ip, [r4, r2]
   2974c:	ldr	r2, [pc, #1048]	; 29b6c <myhtml_tokenizer_state_init@@Base+0x748>
   29750:	str	ip, [r3, #276]	; 0x114
   29754:	ldr	ip, [r4, r0]
   29758:	ldr	r0, [pc, #1040]	; 29b70 <myhtml_tokenizer_state_init@@Base+0x74c>
   2975c:	str	ip, [r3, #280]	; 0x118
   29760:	ldr	ip, [r4, r1]
   29764:	ldr	r1, [pc, #1032]	; 29b74 <myhtml_tokenizer_state_init@@Base+0x750>
   29768:	str	ip, [r3, #308]	; 0x134
   2976c:	ldr	ip, [r4, r2]
   29770:	ldr	r2, [pc, #1024]	; 29b78 <myhtml_tokenizer_state_init@@Base+0x754>
   29774:	str	ip, [r3, #316]	; 0x13c
   29778:	ldr	ip, [r4, r0]
   2977c:	ldr	r0, [pc, #1016]	; 29b7c <myhtml_tokenizer_state_init@@Base+0x758>
   29780:	str	ip, [r3, #312]	; 0x138
   29784:	ldr	ip, [r4, r1]
   29788:	ldr	r1, [pc, #1008]	; 29b80 <myhtml_tokenizer_state_init@@Base+0x75c>
   2978c:	str	ip, [r3, #448]	; 0x1c0
   29790:	ldr	ip, [r4, r2]
   29794:	ldr	r2, [pc, #1000]	; 29b84 <myhtml_tokenizer_state_init@@Base+0x760>
   29798:	str	ip, [r3, #456]	; 0x1c8
   2979c:	ldr	ip, [r4, r0]
   297a0:	ldr	r0, [pc, #992]	; 29b88 <myhtml_tokenizer_state_init@@Base+0x764>
   297a4:	str	ip, [r3, #412]	; 0x19c
   297a8:	ldr	ip, [r4, r1]
   297ac:	ldr	r1, [pc, #984]	; 29b8c <myhtml_tokenizer_state_init@@Base+0x768>
   297b0:	str	ip, [r3, #416]	; 0x1a0
   297b4:	ldr	ip, [r4, r2]
   297b8:	ldr	r2, [pc, #976]	; 29b90 <myhtml_tokenizer_state_init@@Base+0x76c>
   297bc:	str	ip, [r3, #420]	; 0x1a4
   297c0:	ldr	ip, [r4, r0]
   297c4:	ldr	r0, [pc, #968]	; 29b94 <myhtml_tokenizer_state_init@@Base+0x770>
   297c8:	str	ip, [r3, #424]	; 0x1a8
   297cc:	ldr	ip, [r4, r1]
   297d0:	ldr	r1, [pc, #960]	; 29b98 <myhtml_tokenizer_state_init@@Base+0x774>
   297d4:	str	ip, [r3, #428]	; 0x1ac
   297d8:	ldr	ip, [r4, r2]
   297dc:	ldr	r2, [pc, #952]	; 29b9c <myhtml_tokenizer_state_init@@Base+0x778>
   297e0:	str	ip, [r3, #432]	; 0x1b0
   297e4:	ldr	ip, [r4, r0]
   297e8:	ldr	r0, [pc, #944]	; 29ba0 <myhtml_tokenizer_state_init@@Base+0x77c>
   297ec:	str	ip, [r3, #436]	; 0x1b4
   297f0:	ldr	ip, [r4, r1]
   297f4:	ldr	r1, [pc, #936]	; 29ba4 <myhtml_tokenizer_state_init@@Base+0x780>
   297f8:	str	ip, [r3, #444]	; 0x1bc
   297fc:	ldr	ip, [r4, r2]
   29800:	ldr	r2, [pc, #928]	; 29ba8 <myhtml_tokenizer_state_init@@Base+0x784>
   29804:	str	ip, [r3, #460]	; 0x1cc
   29808:	ldr	ip, [r4, r0]
   2980c:	ldr	r0, [pc, #920]	; 29bac <myhtml_tokenizer_state_init@@Base+0x788>
   29810:	str	ip, [r3, #464]	; 0x1d0
   29814:	ldr	ip, [r4, r1]
   29818:	ldr	r1, [pc, #912]	; 29bb0 <myhtml_tokenizer_state_init@@Base+0x78c>
   2981c:	str	ip, [r3, #468]	; 0x1d4
   29820:	ldr	ip, [r4, r2]
   29824:	ldr	r2, [pc, #904]	; 29bb4 <myhtml_tokenizer_state_init@@Base+0x790>
   29828:	str	ip, [r3, #476]	; 0x1dc
   2982c:	ldr	ip, [r4, r0]
   29830:	ldr	r0, [pc, #896]	; 29bb8 <myhtml_tokenizer_state_init@@Base+0x794>
   29834:	str	ip, [r3, #472]	; 0x1d8
   29838:	ldr	ip, [r4, r1]
   2983c:	ldr	r1, [pc, #888]	; 29bbc <myhtml_tokenizer_state_init@@Base+0x798>
   29840:	str	ip, [r3, #480]	; 0x1e0
   29844:	ldr	ip, [r4, r2]
   29848:	ldr	r2, [pc, #880]	; 29bc0 <myhtml_tokenizer_state_init@@Base+0x79c>
   2984c:	str	ip, [r3, #452]	; 0x1c4
   29850:	ldr	ip, [r4, r0]
   29854:	ldr	r0, [pc, #872]	; 29bc4 <myhtml_tokenizer_state_init@@Base+0x7a0>
   29858:	str	ip, [r3, #548]	; 0x224
   2985c:	ldr	ip, [r4, r1]
   29860:	ldr	r1, [pc, #864]	; 29bc8 <myhtml_tokenizer_state_init@@Base+0x7a4>
   29864:	str	ip, [r3, #288]	; 0x120
   29868:	ldr	ip, [r4, r2]
   2986c:	ldr	r2, [pc, #856]	; 29bcc <myhtml_tokenizer_state_init@@Base+0x7a8>
   29870:	str	ip, [r3, #320]	; 0x140
   29874:	ldr	ip, [r4, r0]
   29878:	ldr	r0, [pc, #848]	; 29bd0 <myhtml_tokenizer_state_init@@Base+0x7ac>
   2987c:	str	ip, [r3, #324]	; 0x144
   29880:	ldr	ip, [r4, r1]
   29884:	ldr	r1, [pc, #840]	; 29bd4 <myhtml_tokenizer_state_init@@Base+0x7b0>
   29888:	str	ip, [r3, #328]	; 0x148
   2988c:	ldr	ip, [r4, r2]
   29890:	ldr	r2, [pc, #832]	; 29bd8 <myhtml_tokenizer_state_init@@Base+0x7b4>
   29894:	str	ip, [r3, #296]	; 0x128
   29898:	ldr	r0, [r4, r0]
   2989c:	ldr	ip, [pc, #824]	; 29bdc <myhtml_tokenizer_state_init@@Base+0x7b8>
   298a0:	str	r0, [r3, #332]	; 0x14c
   298a4:	ldr	r0, [r4, r1]
   298a8:	ldr	r1, [pc, #816]	; 29be0 <myhtml_tokenizer_state_init@@Base+0x7bc>
   298ac:	str	r0, [r3, #336]	; 0x150
   298b0:	mov	r0, #0
   298b4:	ldr	lr, [r4, r2]
   298b8:	ldr	r2, [pc, #804]	; 29be4 <myhtml_tokenizer_state_init@@Base+0x7c0>
   298bc:	str	lr, [r3, #340]	; 0x154
   298c0:	ldr	lr, [r4, ip]
   298c4:	ldr	ip, [pc, #796]	; 29be8 <myhtml_tokenizer_state_init@@Base+0x7c4>
   298c8:	str	lr, [r3, #304]	; 0x130
   298cc:	ldr	lr, [r4, r1]
   298d0:	ldr	r1, [pc, #788]	; 29bec <myhtml_tokenizer_state_init@@Base+0x7c8>
   298d4:	str	lr, [r3, #484]	; 0x1e4
   298d8:	ldr	lr, [r4, r2]
   298dc:	ldr	r2, [pc, #780]	; 29bf0 <myhtml_tokenizer_state_init@@Base+0x7cc>
   298e0:	str	lr, [r3, #488]	; 0x1e8
   298e4:	ldr	lr, [r4, ip]
   298e8:	ldr	ip, [pc, #772]	; 29bf4 <myhtml_tokenizer_state_init@@Base+0x7d0>
   298ec:	str	lr, [r3, #492]	; 0x1ec
   298f0:	ldr	lr, [r4, r1]
   298f4:	ldr	r1, [pc, #764]	; 29bf8 <myhtml_tokenizer_state_init@@Base+0x7d4>
   298f8:	str	lr, [r3, #496]	; 0x1f0
   298fc:	ldr	lr, [r4, r2]
   29900:	ldr	r2, [pc, #756]	; 29bfc <myhtml_tokenizer_state_init@@Base+0x7d8>
   29904:	str	lr, [r3, #552]	; 0x228
   29908:	ldr	lr, [r4, ip]
   2990c:	ldr	ip, [pc, #748]	; 29c00 <myhtml_tokenizer_state_init@@Base+0x7dc>
   29910:	str	lr, [r3, #504]	; 0x1f8
   29914:	ldr	lr, [r4, r1]
   29918:	ldr	r1, [pc, #740]	; 29c04 <myhtml_tokenizer_state_init@@Base+0x7e0>
   2991c:	str	lr, [r3, #508]	; 0x1fc
   29920:	ldr	lr, [r4, r2]
   29924:	ldr	r2, [pc, #732]	; 29c08 <myhtml_tokenizer_state_init@@Base+0x7e4>
   29928:	str	lr, [r3, #512]	; 0x200
   2992c:	ldr	lr, [r4, ip]
   29930:	ldr	ip, [pc, #724]	; 29c0c <myhtml_tokenizer_state_init@@Base+0x7e8>
   29934:	str	lr, [r3, #516]	; 0x204
   29938:	ldr	lr, [r4, r1]
   2993c:	ldr	r1, [pc, #716]	; 29c10 <myhtml_tokenizer_state_init@@Base+0x7ec>
   29940:	str	lr, [r3, #532]	; 0x214
   29944:	ldr	lr, [r4, r2]
   29948:	ldr	r2, [pc, #708]	; 29c14 <myhtml_tokenizer_state_init@@Base+0x7f0>
   2994c:	str	lr, [r3, #536]	; 0x218
   29950:	ldr	lr, [r4, ip]
   29954:	ldr	ip, [pc, #700]	; 29c18 <myhtml_tokenizer_state_init@@Base+0x7f4>
   29958:	str	lr, [r3, #540]	; 0x21c
   2995c:	ldr	lr, [r4, r1]
   29960:	ldr	r1, [pc, #692]	; 29c1c <myhtml_tokenizer_state_init@@Base+0x7f8>
   29964:	str	lr, [r3, #544]	; 0x220
   29968:	ldr	lr, [r4, r2]
   2996c:	ldr	r2, [pc, #684]	; 29c20 <myhtml_tokenizer_state_init@@Base+0x7fc>
   29970:	str	lr, [r3, #300]	; 0x12c
   29974:	ldr	lr, [r4, ip]
   29978:	ldr	ip, [pc, #676]	; 29c24 <myhtml_tokenizer_state_init@@Base+0x800>
   2997c:	str	lr, [r3, #344]	; 0x158
   29980:	ldr	lr, [r4, r1]
   29984:	ldr	r1, [pc, #668]	; 29c28 <myhtml_tokenizer_state_init@@Base+0x804>
   29988:	str	lr, [r3, #348]	; 0x15c
   2998c:	ldr	lr, [r4, r2]
   29990:	ldr	r2, [pc, #660]	; 29c2c <myhtml_tokenizer_state_init@@Base+0x808>
   29994:	str	lr, [r3, #352]	; 0x160
   29998:	ldr	lr, [r4, ip]
   2999c:	ldr	ip, [pc, #652]	; 29c30 <myhtml_tokenizer_state_init@@Base+0x80c>
   299a0:	str	lr, [r3, #356]	; 0x164
   299a4:	ldr	lr, [r4, r1]
   299a8:	ldr	r1, [pc, #644]	; 29c34 <myhtml_tokenizer_state_init@@Base+0x810>
   299ac:	ldr	r6, [sp, #8]
   299b0:	str	lr, [r3, #360]	; 0x168
   299b4:	ldr	lr, [r4, r2]
   299b8:	ldr	r2, [pc, #632]	; 29c38 <myhtml_tokenizer_state_init@@Base+0x814>
   299bc:	str	lr, [r3, #364]	; 0x16c
   299c0:	ldr	lr, [r4, ip]
   299c4:	ldr	ip, [pc, #624]	; 29c3c <myhtml_tokenizer_state_init@@Base+0x818>
   299c8:	str	lr, [r3, #368]	; 0x170
   299cc:	ldr	lr, [r4, r1]
   299d0:	ldr	r1, [pc, #616]	; 29c40 <myhtml_tokenizer_state_init@@Base+0x81c>
   299d4:	str	lr, [r3, #372]	; 0x174
   299d8:	ldr	lr, [r4, r2]
   299dc:	ldr	r2, [pc, #608]	; 29c44 <myhtml_tokenizer_state_init@@Base+0x820>
   299e0:	str	lr, [r3, #376]	; 0x178
   299e4:	ldr	lr, [r4, ip]
   299e8:	ldr	ip, [pc, #600]	; 29c48 <myhtml_tokenizer_state_init@@Base+0x824>
   299ec:	str	lr, [r3, #380]	; 0x17c
   299f0:	ldr	lr, [r4, r1]
   299f4:	ldr	r1, [pc, #592]	; 29c4c <myhtml_tokenizer_state_init@@Base+0x828>
   299f8:	str	lr, [r3, #384]	; 0x180
   299fc:	ldr	lr, [r4, r2]
   29a00:	ldr	r2, [pc, #584]	; 29c50 <myhtml_tokenizer_state_init@@Base+0x82c>
   29a04:	str	lr, [r3, #388]	; 0x184
   29a08:	ldr	lr, [r4, ip]
   29a0c:	ldr	ip, [pc, #576]	; 29c54 <myhtml_tokenizer_state_init@@Base+0x830>
   29a10:	str	lr, [r3, #392]	; 0x188
   29a14:	ldr	lr, [r4, r1]
   29a18:	ldr	r1, [pc, #568]	; 29c58 <myhtml_tokenizer_state_init@@Base+0x834>
   29a1c:	str	lr, [r3, #396]	; 0x18c
   29a20:	ldr	lr, [r4, r2]
   29a24:	ldr	r2, [pc, #560]	; 29c5c <myhtml_tokenizer_state_init@@Base+0x838>
   29a28:	str	lr, [r3, #400]	; 0x190
   29a2c:	ldr	ip, [r4, ip]
   29a30:	str	ip, [r3, #404]	; 0x194
   29a34:	ldr	r1, [r4, r1]
   29a38:	str	r1, [r3, #408]	; 0x198
   29a3c:	ldr	r2, [r4, r2]
   29a40:	ldrd	r4, [sp]
   29a44:	add	sp, sp, #12
   29a48:	str	r2, [r3, #556]	; 0x22c
   29a4c:	pop	{pc}		; (ldr pc, [sp], #4)
   29a50:	ldrd	r4, [sp]
   29a54:	movw	r0, #37164	; 0x912c
   29a58:	ldr	r6, [sp, #8]
   29a5c:	add	sp, sp, #12
   29a60:	pop	{pc}		; (ldr pc, [sp], #4)
   29a64:			; <UNDEFINED> instruction: 0x000efbb0
   29a68:	andeq	r0, r0, r8, lsl #15
   29a6c:	andeq	r0, r0, r8, lsr #18
   29a70:	andeq	r0, r0, r4, ror #17
   29a74:	andeq	r0, r0, r0, asr r9
   29a78:	andeq	r0, r0, r8, ror r7
   29a7c:	andeq	r0, r0, r8, ror #15
   29a80:	andeq	r0, r0, r4, asr #17
   29a84:	andeq	r0, r0, r0, lsl #14
   29a88:	andeq	r0, r0, r0, lsr r9
   29a8c:	andeq	r0, r0, ip, ror #18
   29a90:	andeq	r0, r0, r8, lsl r9
   29a94:	andeq	r0, r0, r4, lsl #18
   29a98:	andeq	r0, r0, r8, asr #18
   29a9c:	andeq	r0, r0, r4, lsr r8
   29aa0:	andeq	r0, r0, r0, ror #18
   29aa4:	andeq	r0, r0, r4, asr r8
   29aa8:	andeq	r0, r0, r0, lsl #18
   29aac:	andeq	r0, r0, r4, lsl #14
   29ab0:	andeq	r0, r0, r8, lsr #15
   29ab4:	andeq	r0, r0, ip, lsl #17
   29ab8:	muleq	r0, r0, r7
   29abc:			; <UNDEFINED> instruction: 0x000009bc
   29ac0:	muleq	r0, ip, r8
   29ac4:	andeq	r0, r0, r0, asr #15
   29ac8:	andeq	r0, r0, r4, lsr #14
   29acc:	andeq	r0, r0, r4, asr #15
   29ad0:	andeq	r0, r0, r4, ror r7
   29ad4:	andeq	r0, r0, r4, ror #15
   29ad8:	andeq	r0, r0, r0, asr r7
   29adc:	andeq	r0, r0, r4, asr r9
   29ae0:	andeq	r0, r0, r4, lsr #19
   29ae4:	andeq	r0, r0, r4, lsl #16
   29ae8:	andeq	r0, r0, ip, lsl #14
   29aec:	andeq	r0, r0, ip, asr #16
   29af0:	andeq	r0, r0, r4, lsl #19
   29af4:	andeq	r0, r0, r4, ror r8
   29af8:	andeq	r0, r0, ip, lsr #15
   29afc:	andeq	r0, r0, r4, ror #16
   29b00:	andeq	r0, r0, r8, ror r8
   29b04:			; <UNDEFINED> instruction: 0x000009b4
   29b08:	andeq	r0, r0, r4, ror #14
   29b0c:	andeq	r0, r0, r4, lsl r8
   29b10:			; <UNDEFINED> instruction: 0x000007b8
   29b14:	andeq	r0, r0, r4, lsr #16
   29b18:			; <UNDEFINED> instruction: 0x000007b4
   29b1c:	andeq	r0, r0, ip, lsl r8
   29b20:	ldrdeq	r0, [r0], -r8
   29b24:	andeq	r0, r0, ip, asr r9
   29b28:	strdeq	r0, [r0], -r4
   29b2c:	andeq	r0, r0, r0, asr r8
   29b30:	strdeq	r0, [r0], -ip
   29b34:	andeq	r0, r0, r8, lsr #16
   29b38:	andeq	r0, r0, r8, asr #16
   29b3c:	muleq	r0, r0, r9
   29b40:	andeq	r0, r0, ip, lsl #15
   29b44:	muleq	r0, r8, r7
   29b48:	andeq	r0, r0, r0, lsl r8
   29b4c:	andeq	r0, r0, r0, asr #18
   29b50:	andeq	r0, r0, r0, lsr r7
   29b54:	andeq	r0, r0, r8, asr #15
   29b58:			; <UNDEFINED> instruction: 0x000007bc
   29b5c:	andeq	r0, r0, r8, lsl #18
   29b60:	muleq	r0, ip, r7
   29b64:	andeq	r0, r0, r0, ror #15
   29b68:	andeq	r0, r0, r8, lsl #16
   29b6c:	andeq	r0, r0, r8, lsl #19
   29b70:	andeq	r0, r0, ip, lsl #19
   29b74:	andeq	r0, r0, ip, asr #17
   29b78:	andeq	r0, r0, r8, ror #17
   29b7c:	andeq	r0, r0, ip, ror #17
   29b80:	andeq	r0, r0, r4, lsr r9
   29b84:	andeq	r0, r0, r4, asr r7
   29b88:	andeq	r0, r0, r8, lsr #17
   29b8c:	andeq	r0, r0, ip, lsr #16
   29b90:	strdeq	r0, [r0], -r4
   29b94:	ldrdeq	r0, [r0], -ip
   29b98:			; <UNDEFINED> instruction: 0x000008bc
   29b9c:	andeq	r0, r0, r4, ror #18
   29ba0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   29ba4:	muleq	r0, r8, r8
   29ba8:	andeq	r0, r0, r4, lsl #15
   29bac:	andeq	r0, r0, r0, lsr #19
   29bb0:	andeq	r0, r0, ip, ror r7
   29bb4:	andeq	r0, r0, ip, asr r8
   29bb8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   29bbc:	andeq	r0, r0, r4, asr #18
   29bc0:	muleq	r0, r4, r7
   29bc4:	ldrdeq	r0, [r0], -r8
   29bc8:			; <UNDEFINED> instruction: 0x000008b4
   29bcc:	andeq	r0, r0, ip, ror #16
   29bd0:			; <UNDEFINED> instruction: 0x000009b8
   29bd4:	andeq	r0, r0, r0, ror #17
   29bd8:	andeq	r0, r0, ip, lsr #17
   29bdc:	andeq	r0, r0, r0, asr #16
   29be0:	andeq	r0, r0, r4, lsl r7
   29be4:	andeq	r0, r0, r0, lsl r9
   29be8:	andeq	r0, r0, r0, lsr #14
   29bec:	andeq	r0, r0, r4, lsr r7
   29bf0:	andeq	r0, r0, r0, asr #14
   29bf4:	andeq	r0, r0, r4, lsl #17
   29bf8:	andeq	r0, r0, ip, lsr r9
   29bfc:	andeq	r0, r0, r0, lsl #15
   29c00:	andeq	r0, r0, r8, lsr #19
   29c04:	andeq	r0, r0, ip, ror r9
   29c08:			; <UNDEFINED> instruction: 0x000008b0
   29c0c:	andeq	r0, r0, r4, ror r9
   29c10:	andeq	r0, r0, r8, asr r8
   29c14:			; <UNDEFINED> instruction: 0x000007b0
   29c18:	andeq	r0, r0, r8, lsl #17
   29c1c:	ldrdeq	r0, [r0], -r4
   29c20:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   29c24:	andeq	r0, r0, ip, lsr #18
   29c28:	andeq	r0, r0, ip, lsl #16
   29c2c:	andeq	r0, r0, r8, lsl #14
   29c30:	muleq	r0, r8, r9
   29c34:	andeq	r0, r0, r8, asr #17
   29c38:			; <UNDEFINED> instruction: 0x000009b0
   29c3c:	andeq	r0, r0, r8, asr #14
   29c40:	andeq	r0, r0, r0, asr #17
   29c44:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   29c48:	andeq	r0, r0, ip, lsr r8
   29c4c:	andeq	r0, r0, r8, lsr r9
   29c50:	andeq	r0, r0, r8, lsr r8
   29c54:			; <UNDEFINED> instruction: 0x000008b8
   29c58:	andeq	r0, r0, ip, asr #15
   29c5c:	andeq	r0, r0, r0, lsl #16

00029c60 <myhtml_tokenizer_state_destroy@@Base>:
   29c60:	ldr	r0, [r0, #24]
   29c64:	cmp	r0, #0
   29c68:	beq	29c70 <myhtml_tokenizer_state_destroy@@Base+0x10>
   29c6c:	b	10d60 <mycore_free@plt>
   29c70:	bx	lr

00029c74 <myhtml_tokenizer_state_doctype@@Base>:
   29c74:	mov	r2, #52	; 0x34
   29c78:	str	r2, [r0, #160]	; 0xa0
   29c7c:	mov	r0, r3
   29c80:	bx	lr

00029c84 <myhtml_tokenizer_state_before_doctype_name@@Base>:
   29c84:	strd	r4, [sp, #-16]!
   29c88:	mov	r5, r0
   29c8c:	add	r0, r2, r3
   29c90:	str	r6, [sp, #8]
   29c94:	mov	r6, r1
   29c98:	str	lr, [sp, #12]
   29c9c:	ldrb	ip, [r2, r3]
   29ca0:	ldr	lr, [sp, #16]
   29ca4:	sub	r1, ip, #9
   29ca8:	sub	r4, ip, #12
   29cac:	cmp	ip, #32
   29cb0:	cmpne	r1, #1
   29cb4:	movls	r1, #1
   29cb8:	movhi	r1, #0
   29cbc:	cmp	r4, #1
   29cc0:	orrls	r1, r1, #1
   29cc4:	cmp	r1, #0
   29cc8:	beq	29d30 <myhtml_tokenizer_state_before_doctype_name@@Base+0xac>
   29ccc:	cmp	r3, lr
   29cd0:	bcs	29e14 <myhtml_tokenizer_state_before_doctype_name@@Base+0x190>
   29cd4:	sub	r3, lr, #1
   29cd8:	add	r3, r2, r3
   29cdc:	rsb	r2, r2, #1
   29ce0:	b	29d10 <myhtml_tokenizer_state_before_doctype_name@@Base+0x8c>
   29ce4:	ldrb	ip, [r0, #1]!
   29ce8:	sub	r1, ip, #12
   29cec:	sub	lr, ip, #9
   29cf0:	cmp	lr, #1
   29cf4:	cmphi	r1, #1
   29cf8:	movls	r1, #1
   29cfc:	movhi	r1, #0
   29d00:	cmp	ip, #32
   29d04:	orreq	r1, r1, #1
   29d08:	cmp	r1, #0
   29d0c:	beq	29da0 <myhtml_tokenizer_state_before_doctype_name@@Base+0x11c>
   29d10:	cmp	r3, r0
   29d14:	add	r4, r2, r0
   29d18:	bne	29ce4 <myhtml_tokenizer_state_before_doctype_name@@Base+0x60>
   29d1c:	mov	r0, r4
   29d20:	ldrd	r4, [sp]
   29d24:	ldr	r6, [sp, #8]
   29d28:	add	sp, sp, #12
   29d2c:	pop	{pc}		; (ldr pc, [sp], #4)
   29d30:	cmp	r3, lr
   29d34:	bcs	29e14 <myhtml_tokenizer_state_before_doctype_name@@Base+0x190>
   29d38:	cmp	ip, #62	; 0x3e
   29d3c:	ldr	r0, [r5, #192]	; 0xc0
   29d40:	beq	29db0 <myhtml_tokenizer_state_before_doctype_name@@Base+0x12c>
   29d44:	ldr	r1, [r6, #40]	; 0x28
   29d48:	ldr	r2, [r5, #56]	; 0x38
   29d4c:	cmp	r1, #0
   29d50:	beq	29d88 <myhtml_tokenizer_state_before_doctype_name@@Base+0x104>
   29d54:	ldr	r1, [r6, #44]	; 0x2c
   29d58:	mov	ip, #0
   29d5c:	str	r2, [r1]
   29d60:	str	r1, [r2, #4]
   29d64:	str	r2, [r6, #44]	; 0x2c
   29d68:	str	ip, [r2]
   29d6c:	str	r2, [r5, #56]	; 0x38
   29d70:	add	r0, r0, r3
   29d74:	mov	r1, #53	; 0x35
   29d78:	mov	r4, r3
   29d7c:	str	r0, [r2, #48]	; 0x30
   29d80:	str	r1, [r5, #160]	; 0xa0
   29d84:	b	29d1c <myhtml_tokenizer_state_before_doctype_name@@Base+0x98>
   29d88:	str	r2, [r6, #40]	; 0x28
   29d8c:	str	r2, [r6, #44]	; 0x2c
   29d90:	str	r2, [r5, #56]	; 0x38
   29d94:	str	r1, [r2]
   29d98:	str	r1, [r2, #4]
   29d9c:	b	29d70 <myhtml_tokenizer_state_before_doctype_name@@Base+0xec>
   29da0:	cmp	ip, #62	; 0x3e
   29da4:	mov	r3, r4
   29da8:	ldr	r0, [r5, #192]	; 0xc0
   29dac:	bne	29d44 <myhtml_tokenizer_state_before_doctype_name@@Base+0xc0>
   29db0:	ldr	ip, [r6, #32]
   29db4:	add	r4, r3, #1
   29db8:	mov	r3, #1
   29dbc:	mov	r2, r6
   29dc0:	mov	r1, r4
   29dc4:	str	r3, [r5, #176]	; 0xb0
   29dc8:	sub	r3, r0, ip
   29dcc:	mov	r0, r5
   29dd0:	add	r3, r3, r4
   29dd4:	str	r3, [r6, #36]	; 0x24
   29dd8:	bl	ffc8 <myhtml_queue_add@plt>
   29ddc:	subs	r6, r0, #0
   29de0:	bne	29e04 <myhtml_tokenizer_state_before_doctype_name@@Base+0x180>
   29de4:	ldr	r3, [r5, #8]
   29de8:	mov	r0, r3
   29dec:	ldr	r1, [r3, #16]
   29df0:	bl	10898 <myhtml_token_attr_create@plt>
   29df4:	cmp	r0, #0
   29df8:	str	r0, [r5, #56]	; 0x38
   29dfc:	strne	r6, [r5, #160]	; 0xa0
   29e00:	bne	29d1c <myhtml_tokenizer_state_before_doctype_name@@Base+0x98>
   29e04:	mov	r3, #69	; 0x45
   29e08:	mov	r4, #0
   29e0c:	str	r3, [r5, #160]	; 0xa0
   29e10:	b	29d1c <myhtml_tokenizer_state_before_doctype_name@@Base+0x98>
   29e14:	mov	r4, r3
   29e18:	b	29d1c <myhtml_tokenizer_state_before_doctype_name@@Base+0x98>

00029e1c <myhtml_tokenizer_state_doctype_name@@Base>:
   29e1c:	strd	r4, [sp, #-16]!
   29e20:	str	r6, [sp, #8]
   29e24:	str	lr, [sp, #12]
   29e28:	ldr	lr, [sp, #16]
   29e2c:	cmp	r3, lr
   29e30:	bcs	29f94 <myhtml_tokenizer_state_doctype_name@@Base+0x178>
   29e34:	mov	r5, r0
   29e38:	ldrb	r0, [r2, r3]
   29e3c:	mov	r6, r1
   29e40:	add	ip, r2, r3
   29e44:	cmp	r0, #62	; 0x3e
   29e48:	beq	29f14 <myhtml_tokenizer_state_doctype_name@@Base+0xf8>
   29e4c:	sub	r1, r0, #9
   29e50:	sub	r4, r0, #12
   29e54:	cmp	r4, #1
   29e58:	cmphi	r1, #1
   29e5c:	movls	r1, #1
   29e60:	movhi	r1, #0
   29e64:	cmp	r0, #32
   29e68:	orreq	r1, r1, #1
   29e6c:	cmp	r1, #0
   29e70:	subeq	r1, r2, #1
   29e74:	rsbeq	r0, r2, #1
   29e78:	addeq	r1, r1, lr
   29e7c:	bne	29f8c <myhtml_tokenizer_state_doctype_name@@Base+0x170>
   29e80:	cmp	r1, ip
   29e84:	add	r4, r0, ip
   29e88:	beq	29f00 <myhtml_tokenizer_state_doctype_name@@Base+0xe4>
   29e8c:	ldrb	r2, [ip, #1]!
   29e90:	cmp	r2, #62	; 0x3e
   29e94:	sub	r3, r2, #9
   29e98:	sub	lr, r2, #12
   29e9c:	beq	29f18 <myhtml_tokenizer_state_doctype_name@@Base+0xfc>
   29ea0:	cmp	lr, #1
   29ea4:	cmphi	r3, #1
   29ea8:	movls	r3, #1
   29eac:	movhi	r3, #0
   29eb0:	cmp	r2, #32
   29eb4:	orreq	r3, r3, #1
   29eb8:	cmp	r3, #0
   29ebc:	beq	29e80 <myhtml_tokenizer_state_doctype_name@@Base+0x64>
   29ec0:	ldr	r1, [r5, #8]
   29ec4:	ldr	r2, [r5, #56]	; 0x38
   29ec8:	ldr	r3, [r5, #192]	; 0xc0
   29ecc:	mov	r0, r1
   29ed0:	ldr	r1, [r1, #16]
   29ed4:	ldr	ip, [r2, #48]	; 0x30
   29ed8:	sub	r3, r3, ip
   29edc:	add	r3, r3, r4
   29ee0:	str	r3, [r2, #52]	; 0x34
   29ee4:	bl	10898 <myhtml_token_attr_create@plt>
   29ee8:	cmp	r0, #0
   29eec:	str	r0, [r5, #56]	; 0x38
   29ef0:	beq	29f7c <myhtml_tokenizer_state_doctype_name@@Base+0x160>
   29ef4:	mov	r3, #54	; 0x36
   29ef8:	add	r4, r4, #1
   29efc:	str	r3, [r5, #160]	; 0xa0
   29f00:	mov	r0, r4
   29f04:	ldrd	r4, [sp]
   29f08:	ldr	r6, [sp, #8]
   29f0c:	add	sp, sp, #12
   29f10:	pop	{pc}		; (ldr pc, [sp], #4)
   29f14:	mov	r4, r3
   29f18:	ldr	ip, [r5, #56]	; 0x38
   29f1c:	mov	r2, r6
   29f20:	mov	r0, r5
   29f24:	ldr	r3, [r5, #192]	; 0xc0
   29f28:	ldr	lr, [r6, #32]
   29f2c:	ldr	r1, [ip, #48]	; 0x30
   29f30:	sub	r1, r3, r1
   29f34:	sub	r3, r3, lr
   29f38:	add	r1, r1, r4
   29f3c:	add	r4, r4, #1
   29f40:	add	r3, r3, r4
   29f44:	str	r1, [ip, #52]	; 0x34
   29f48:	mov	r1, r4
   29f4c:	str	r3, [r6, #36]	; 0x24
   29f50:	bl	ffc8 <myhtml_queue_add@plt>
   29f54:	subs	r6, r0, #0
   29f58:	bne	29f7c <myhtml_tokenizer_state_doctype_name@@Base+0x160>
   29f5c:	ldr	r3, [r5, #8]
   29f60:	mov	r0, r3
   29f64:	ldr	r1, [r3, #16]
   29f68:	bl	10898 <myhtml_token_attr_create@plt>
   29f6c:	cmp	r0, #0
   29f70:	str	r0, [r5, #56]	; 0x38
   29f74:	strne	r6, [r5, #160]	; 0xa0
   29f78:	bne	29f00 <myhtml_tokenizer_state_doctype_name@@Base+0xe4>
   29f7c:	mov	r3, #69	; 0x45
   29f80:	mov	r4, #0
   29f84:	str	r3, [r5, #160]	; 0xa0
   29f88:	b	29f00 <myhtml_tokenizer_state_doctype_name@@Base+0xe4>
   29f8c:	mov	r4, r3
   29f90:	b	29ec0 <myhtml_tokenizer_state_doctype_name@@Base+0xa4>
   29f94:	mov	r4, r3
   29f98:	b	29f00 <myhtml_tokenizer_state_doctype_name@@Base+0xe4>

00029f9c <myhtml_tokenizer_state_after_doctype_name@@Base>:
   29f9c:	strd	r4, [sp, #-16]!
   29fa0:	mov	r5, r0
   29fa4:	add	r0, r2, r3
   29fa8:	str	r6, [sp, #8]
   29fac:	mov	r6, r1
   29fb0:	str	lr, [sp, #12]
   29fb4:	ldrb	ip, [r2, r3]
   29fb8:	ldr	lr, [sp, #16]
   29fbc:	sub	r1, ip, #9
   29fc0:	sub	r4, ip, #12
   29fc4:	cmp	ip, #32
   29fc8:	cmpne	r1, #1
   29fcc:	movls	r1, #1
   29fd0:	movhi	r1, #0
   29fd4:	cmp	r4, #1
   29fd8:	orrls	r1, r1, #1
   29fdc:	cmp	r1, #0
   29fe0:	beq	2a048 <myhtml_tokenizer_state_after_doctype_name@@Base+0xac>
   29fe4:	cmp	r3, lr
   29fe8:	bcs	2a0c0 <myhtml_tokenizer_state_after_doctype_name@@Base+0x124>
   29fec:	sub	r3, lr, #1
   29ff0:	add	r3, r2, r3
   29ff4:	rsb	r2, r2, #1
   29ff8:	b	2a028 <myhtml_tokenizer_state_after_doctype_name@@Base+0x8c>
   29ffc:	ldrb	ip, [r0, #1]!
   2a000:	sub	r1, ip, #9
   2a004:	sub	lr, ip, #12
   2a008:	cmp	lr, #1
   2a00c:	cmphi	r1, #1
   2a010:	movls	r1, #1
   2a014:	movhi	r1, #0
   2a018:	cmp	ip, #32
   2a01c:	orreq	r1, r1, #1
   2a020:	cmp	r1, #0
   2a024:	beq	2a074 <myhtml_tokenizer_state_after_doctype_name@@Base+0xd8>
   2a028:	cmp	r3, r0
   2a02c:	add	r4, r2, r0
   2a030:	bne	29ffc <myhtml_tokenizer_state_after_doctype_name@@Base+0x60>
   2a034:	mov	r0, r4
   2a038:	ldrd	r4, [sp]
   2a03c:	ldr	r6, [sp, #8]
   2a040:	add	sp, sp, #12
   2a044:	pop	{pc}		; (ldr pc, [sp], #4)
   2a048:	cmp	r3, lr
   2a04c:	bcs	2a0c0 <myhtml_tokenizer_state_after_doctype_name@@Base+0x124>
   2a050:	cmp	ip, #62	; 0x3e
   2a054:	ldr	ip, [r5, #192]	; 0xc0
   2a058:	beq	2a084 <myhtml_tokenizer_state_after_doctype_name@@Base+0xe8>
   2a05c:	add	ip, ip, r3
   2a060:	mov	r2, #68	; 0x44
   2a064:	mov	r4, r3
   2a068:	str	ip, [r6, #12]
   2a06c:	str	r2, [r5, #160]	; 0xa0
   2a070:	b	2a034 <myhtml_tokenizer_state_after_doctype_name@@Base+0x98>
   2a074:	cmp	ip, #62	; 0x3e
   2a078:	mov	r3, r4
   2a07c:	ldr	ip, [r5, #192]	; 0xc0
   2a080:	bne	2a05c <myhtml_tokenizer_state_after_doctype_name@@Base+0xc0>
   2a084:	ldr	lr, [r6, #32]
   2a088:	add	r4, r3, #1
   2a08c:	mov	r2, r6
   2a090:	mov	r1, r4
   2a094:	mov	r0, r5
   2a098:	sub	r3, ip, lr
   2a09c:	add	r3, r3, r4
   2a0a0:	str	r3, [r6, #36]	; 0x24
   2a0a4:	bl	ffc8 <myhtml_queue_add@plt>
   2a0a8:	cmp	r0, #0
   2a0ac:	movne	r3, #69	; 0x45
   2a0b0:	movne	r4, #0
   2a0b4:	streq	r0, [r5, #160]	; 0xa0
   2a0b8:	strne	r3, [r5, #160]	; 0xa0
   2a0bc:	b	2a034 <myhtml_tokenizer_state_after_doctype_name@@Base+0x98>
   2a0c0:	mov	r4, r3
   2a0c4:	b	2a034 <myhtml_tokenizer_state_after_doctype_name@@Base+0x98>

0002a0c8 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base>:
   2a0c8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2a0cc:	ldr	r5, [sp, #24]
   2a0d0:	ldr	ip, [r0, #192]	; 0xc0
   2a0d4:	strd	r6, [sp, #8]
   2a0d8:	str	lr, [sp, #20]
   2a0dc:	ldr	lr, [r1, #12]
   2a0e0:	str	r8, [sp, #16]
   2a0e4:	add	ip, r5, ip
   2a0e8:	add	r6, lr, #6
   2a0ec:	cmp	r6, ip
   2a0f0:	bls	2a10c <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x44>
   2a0f4:	mov	r0, r5
   2a0f8:	ldrd	r4, [sp]
   2a0fc:	ldrd	r6, [sp, #8]
   2a100:	ldr	r8, [sp, #16]
   2a104:	add	sp, sp, #20
   2a108:	pop	{pc}		; (ldr pc, [sp], #4)
   2a10c:	mov	r2, #6
   2a110:	mov	r6, r1
   2a114:	mov	r1, lr
   2a118:	mov	r5, r3
   2a11c:	mov	r4, r0
   2a120:	bl	fe00 <myhtml_tree_incomming_buffer_make_data@plt>
   2a124:	ldr	r1, [pc, #344]	; 2a284 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x1bc>
   2a128:	mov	r2, #6
   2a12c:	mov	r7, r0
   2a130:	add	r1, pc, r1
   2a134:	bl	10238 <mycore_strncasecmp@plt>
   2a138:	cmp	r0, #0
   2a13c:	bne	2a1b4 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0xec>
   2a140:	ldr	r2, [r6, #40]	; 0x28
   2a144:	ldr	r3, [r4, #56]	; 0x38
   2a148:	cmp	r2, #0
   2a14c:	beq	2a230 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x168>
   2a150:	ldr	r2, [r6, #44]	; 0x2c
   2a154:	str	r3, [r2]
   2a158:	str	r2, [r3, #4]
   2a15c:	str	r3, [r6, #44]	; 0x2c
   2a160:	str	r0, [r3]
   2a164:	str	r3, [r4, #56]	; 0x38
   2a168:	ldr	r2, [r4, #8]
   2a16c:	mov	r1, #6
   2a170:	ldr	ip, [r6, #12]
   2a174:	str	r1, [r3, #60]	; 0x3c
   2a178:	mov	r0, r2
   2a17c:	ldr	r1, [r2, #16]
   2a180:	str	ip, [r3, #56]	; 0x38
   2a184:	bl	10898 <myhtml_token_attr_create@plt>
   2a188:	cmp	r0, #0
   2a18c:	str	r0, [r4, #56]	; 0x38
   2a190:	beq	2a25c <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x194>
   2a194:	ldr	r3, [r4, #76]	; 0x4c
   2a198:	mov	r1, #56	; 0x38
   2a19c:	ldr	r2, [r6, #12]
   2a1a0:	ldr	r3, [r3, #12]
   2a1a4:	str	r1, [r4, #160]	; 0xa0
   2a1a8:	add	r2, r2, #6
   2a1ac:	sub	r5, r2, r3
   2a1b0:	b	2a0f4 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x2c>
   2a1b4:	ldr	r1, [pc, #204]	; 2a288 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x1c0>
   2a1b8:	mov	r0, r7
   2a1bc:	mov	r2, #6
   2a1c0:	add	r1, pc, r1
   2a1c4:	bl	10238 <mycore_strncasecmp@plt>
   2a1c8:	cmp	r0, #0
   2a1cc:	bne	2a248 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x180>
   2a1d0:	ldr	r2, [r6, #40]	; 0x28
   2a1d4:	ldr	r3, [r4, #56]	; 0x38
   2a1d8:	cmp	r2, #0
   2a1dc:	beq	2a26c <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x1a4>
   2a1e0:	ldr	r2, [r6, #44]	; 0x2c
   2a1e4:	str	r3, [r2]
   2a1e8:	str	r2, [r3, #4]
   2a1ec:	str	r3, [r6, #44]	; 0x2c
   2a1f0:	str	r0, [r3]
   2a1f4:	str	r3, [r4, #56]	; 0x38
   2a1f8:	ldr	r2, [r4, #8]
   2a1fc:	mov	r1, #6
   2a200:	ldr	ip, [r6, #12]
   2a204:	str	r1, [r3, #60]	; 0x3c
   2a208:	mov	r0, r2
   2a20c:	ldr	r1, [r2, #16]
   2a210:	str	ip, [r3, #56]	; 0x38
   2a214:	bl	10898 <myhtml_token_attr_create@plt>
   2a218:	cmp	r0, #0
   2a21c:	str	r0, [r4, #56]	; 0x38
   2a220:	beq	2a25c <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x194>
   2a224:	mov	r1, #59	; 0x3b
   2a228:	ldr	r3, [r4, #76]	; 0x4c
   2a22c:	b	2a19c <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0xd4>
   2a230:	str	r3, [r6, #40]	; 0x28
   2a234:	str	r3, [r6, #44]	; 0x2c
   2a238:	str	r3, [r4, #56]	; 0x38
   2a23c:	str	r2, [r3]
   2a240:	str	r2, [r3, #4]
   2a244:	b	2a168 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0xa0>
   2a248:	mov	r1, #1
   2a24c:	mov	r3, #66	; 0x42
   2a250:	str	r3, [r4, #160]	; 0xa0
   2a254:	str	r1, [r4, #176]	; 0xb0
   2a258:	b	2a0f4 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x2c>
   2a25c:	mov	r3, #69	; 0x45
   2a260:	mov	r5, #0
   2a264:	str	r3, [r4, #160]	; 0xa0
   2a268:	b	2a0f4 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x2c>
   2a26c:	str	r3, [r6, #40]	; 0x28
   2a270:	str	r3, [r6, #44]	; 0x2c
   2a274:	str	r3, [r4, #56]	; 0x38
   2a278:	str	r2, [r3]
   2a27c:	str	r2, [r3, #4]
   2a280:	b	2a1f8 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x130>
   2a284:	andeq	r4, sp, r8, lsl #16
   2a288:	andeq	r4, sp, r0, ror r7

0002a28c <myhtml_tokenizer_state_before_doctype_public_identifier@@Base>:
   2a28c:	strd	r4, [sp, #-16]!
   2a290:	mov	r4, r0
   2a294:	add	r0, r2, r3
   2a298:	str	r6, [sp, #8]
   2a29c:	mov	r6, r1
   2a2a0:	str	lr, [sp, #12]
   2a2a4:	ldrb	r1, [r2, r3]
   2a2a8:	ldr	lr, [sp, #16]
   2a2ac:	sub	ip, r1, #9
   2a2b0:	sub	r5, r1, #12
   2a2b4:	cmp	r1, #32
   2a2b8:	cmpne	ip, #1
   2a2bc:	movls	ip, #1
   2a2c0:	movhi	ip, #0
   2a2c4:	cmp	r5, #1
   2a2c8:	orrls	ip, ip, #1
   2a2cc:	cmp	ip, #0
   2a2d0:	beq	2a338 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0xac>
   2a2d4:	cmp	r3, lr
   2a2d8:	bcs	2a3f4 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x168>
   2a2dc:	sub	lr, lr, #1
   2a2e0:	add	lr, r2, lr
   2a2e4:	rsb	r2, r2, #1
   2a2e8:	b	2a318 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x8c>
   2a2ec:	ldrb	r1, [r0, #1]!
   2a2f0:	sub	r3, r1, #9
   2a2f4:	sub	ip, r1, #12
   2a2f8:	cmp	ip, #1
   2a2fc:	cmphi	r3, #1
   2a300:	movls	r3, #1
   2a304:	movhi	r3, #0
   2a308:	cmp	r1, #32
   2a30c:	orreq	r3, r3, #1
   2a310:	cmp	r3, #0
   2a314:	beq	2a3a8 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x11c>
   2a318:	cmp	lr, r0
   2a31c:	add	r5, r2, r0
   2a320:	bne	2a2ec <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x60>
   2a324:	mov	r0, r5
   2a328:	ldrd	r4, [sp]
   2a32c:	ldr	r6, [sp, #8]
   2a330:	add	sp, sp, #12
   2a334:	pop	{pc}		; (ldr pc, [sp], #4)
   2a338:	cmp	r3, lr
   2a33c:	bcs	2a3f4 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x168>
   2a340:	cmp	r1, #34	; 0x22
   2a344:	add	r5, r3, #1
   2a348:	beq	2a370 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0xe4>
   2a34c:	cmp	r1, #39	; 0x27
   2a350:	beq	2a398 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x10c>
   2a354:	cmp	r1, #62	; 0x3e
   2a358:	beq	2a3b0 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x124>
   2a35c:	mov	r3, #1
   2a360:	mov	r2, #66	; 0x42
   2a364:	str	r2, [r4, #160]	; 0xa0
   2a368:	str	r3, [r4, #176]	; 0xb0
   2a36c:	b	2a324 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x98>
   2a370:	ldr	r2, [r4, #192]	; 0xc0
   2a374:	mov	ip, #0
   2a378:	mov	r0, #57	; 0x39
   2a37c:	add	r2, r2, #1
   2a380:	ldr	r1, [r4, #56]	; 0x38
   2a384:	add	r3, r2, r3
   2a388:	str	r3, [r1, #56]	; 0x38
   2a38c:	str	ip, [r1, #60]	; 0x3c
   2a390:	str	r0, [r4, #160]	; 0xa0
   2a394:	b	2a324 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x98>
   2a398:	mov	ip, #0
   2a39c:	mov	r0, #58	; 0x3a
   2a3a0:	ldr	r2, [r4, #192]	; 0xc0
   2a3a4:	b	2a37c <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0xf0>
   2a3a8:	mov	r3, r5
   2a3ac:	b	2a340 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0xb4>
   2a3b0:	ldr	ip, [r6, #32]
   2a3b4:	mov	r2, #1
   2a3b8:	mov	r1, r5
   2a3bc:	mov	r0, r4
   2a3c0:	ldr	r3, [r4, #192]	; 0xc0
   2a3c4:	str	r2, [r4, #176]	; 0xb0
   2a3c8:	mov	r2, r6
   2a3cc:	sub	r3, r3, ip
   2a3d0:	add	r3, r3, r5
   2a3d4:	str	r3, [r6, #36]	; 0x24
   2a3d8:	bl	ffc8 <myhtml_queue_add@plt>
   2a3dc:	cmp	r0, #0
   2a3e0:	beq	2a390 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x104>
   2a3e4:	mov	r3, #69	; 0x45
   2a3e8:	mov	r5, #0
   2a3ec:	str	r3, [r4, #160]	; 0xa0
   2a3f0:	b	2a324 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x98>
   2a3f4:	mov	r5, r3
   2a3f8:	b	2a324 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x98>

0002a3fc <myhtml_tokenizer_doctype_public_identifier_dsq@@Base>:
   2a3fc:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2a400:	strd	r6, [sp, #8]
   2a404:	str	r8, [sp, #16]
   2a408:	ldr	r8, [sp, #24]
   2a40c:	str	lr, [sp, #20]
   2a410:	ldrb	r7, [sp, #28]
   2a414:	cmp	r3, r8
   2a418:	bcs	2a5d4 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x1d8>
   2a41c:	mov	r4, r3
   2a420:	ldrb	r3, [r2, r3]
   2a424:	mov	r6, r1
   2a428:	mov	r5, r0
   2a42c:	add	ip, r2, r4
   2a430:	cmp	r7, r3
   2a434:	beq	2a488 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x8c>
   2a438:	cmp	r3, #62	; 0x3e
   2a43c:	subne	lr, r2, #1
   2a440:	rsbne	r3, r2, #1
   2a444:	addne	lr, lr, r8
   2a448:	bne	2a464 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x68>
   2a44c:	b	2a500 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x104>
   2a450:	ldrb	r2, [ip, #1]!
   2a454:	cmp	r2, r7
   2a458:	beq	2a488 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x8c>
   2a45c:	cmp	r2, #62	; 0x3e
   2a460:	beq	2a500 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x104>
   2a464:	cmp	lr, ip
   2a468:	add	r4, r3, ip
   2a46c:	bne	2a450 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x54>
   2a470:	mov	r0, r4
   2a474:	ldrd	r4, [sp]
   2a478:	ldrd	r6, [sp, #8]
   2a47c:	ldr	r8, [sp, #16]
   2a480:	add	sp, sp, #20
   2a484:	pop	{pc}		; (ldr pc, [sp], #4)
   2a488:	ldr	r3, [r5, #56]	; 0x38
   2a48c:	ldr	r2, [r5, #192]	; 0xc0
   2a490:	ldr	r1, [r6, #40]	; 0x28
   2a494:	ldr	r0, [r3, #56]	; 0x38
   2a498:	cmp	r1, #0
   2a49c:	sub	r2, r2, r0
   2a4a0:	add	r2, r2, r4
   2a4a4:	str	r2, [r3, #60]	; 0x3c
   2a4a8:	beq	2a5bc <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x1c0>
   2a4ac:	ldr	r2, [r6, #44]	; 0x2c
   2a4b0:	mov	r1, #0
   2a4b4:	str	r3, [r2]
   2a4b8:	str	r2, [r3, #4]
   2a4bc:	str	r3, [r6, #44]	; 0x2c
   2a4c0:	str	r1, [r3]
   2a4c4:	str	r3, [r5, #56]	; 0x38
   2a4c8:	ldr	r3, [r5, #8]
   2a4cc:	mov	r0, r3
   2a4d0:	ldr	r1, [r3, #16]
   2a4d4:	bl	10898 <myhtml_token_attr_create@plt>
   2a4d8:	cmp	r0, #0
   2a4dc:	str	r0, [r5, #56]	; 0x38
   2a4e0:	movne	r3, #59	; 0x3b
   2a4e4:	addne	r4, r4, #1
   2a4e8:	strne	r3, [r5, #160]	; 0xa0
   2a4ec:	bne	2a470 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x74>
   2a4f0:	mov	r3, #69	; 0x45
   2a4f4:	mov	r4, #0
   2a4f8:	str	r3, [r5, #160]	; 0xa0
   2a4fc:	b	2a470 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x74>
   2a500:	ldr	r3, [r5, #56]	; 0x38
   2a504:	mov	r2, #1
   2a508:	ldr	ip, [r5, #192]	; 0xc0
   2a50c:	ldr	r1, [r3, #56]	; 0x38
   2a510:	str	r2, [r5, #176]	; 0xb0
   2a514:	add	r2, ip, r4
   2a518:	cmp	r1, r2
   2a51c:	bcs	2a570 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x174>
   2a520:	ldr	r0, [r6, #40]	; 0x28
   2a524:	sub	r2, r2, r1
   2a528:	str	r2, [r3, #60]	; 0x3c
   2a52c:	cmp	r0, #0
   2a530:	beq	2a5a4 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x1a8>
   2a534:	ldr	r2, [r6, #44]	; 0x2c
   2a538:	mov	r1, #0
   2a53c:	str	r3, [r2]
   2a540:	str	r2, [r3, #4]
   2a544:	str	r3, [r6, #44]	; 0x2c
   2a548:	str	r1, [r3]
   2a54c:	str	r3, [r5, #56]	; 0x38
   2a550:	ldr	r3, [r5, #8]
   2a554:	mov	r0, r3
   2a558:	ldr	r1, [r3, #16]
   2a55c:	bl	10898 <myhtml_token_attr_create@plt>
   2a560:	cmp	r0, #0
   2a564:	str	r0, [r5, #56]	; 0x38
   2a568:	beq	2a4f0 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0xf4>
   2a56c:	ldr	ip, [r5, #192]	; 0xc0
   2a570:	add	r4, r4, #1
   2a574:	mov	r2, r6
   2a578:	ldr	r3, [r6, #32]
   2a57c:	mov	r1, r4
   2a580:	mov	r0, r5
   2a584:	sub	r3, r4, r3
   2a588:	add	r3, r3, ip
   2a58c:	str	r3, [r6, #36]	; 0x24
   2a590:	bl	ffc8 <myhtml_queue_add@plt>
   2a594:	cmp	r0, #0
   2a598:	streq	r0, [r5, #160]	; 0xa0
   2a59c:	beq	2a470 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x74>
   2a5a0:	b	2a4f0 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0xf4>
   2a5a4:	str	r3, [r6, #40]	; 0x28
   2a5a8:	str	r3, [r6, #44]	; 0x2c
   2a5ac:	str	r3, [r5, #56]	; 0x38
   2a5b0:	str	r0, [r3]
   2a5b4:	str	r0, [r3, #4]
   2a5b8:	b	2a550 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x154>
   2a5bc:	str	r3, [r6, #40]	; 0x28
   2a5c0:	str	r3, [r6, #44]	; 0x2c
   2a5c4:	str	r3, [r5, #56]	; 0x38
   2a5c8:	str	r1, [r3]
   2a5cc:	str	r1, [r3, #4]
   2a5d0:	b	2a4c8 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0xcc>
   2a5d4:	mov	r4, r3
   2a5d8:	b	2a470 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x74>

0002a5dc <myhtml_tokenizer_state_doctype_public_identifier_double_quoted@@Base>:
   2a5dc:	push	{lr}		; (str lr, [sp, #-4]!)
   2a5e0:	sub	sp, sp, #12
   2a5e4:	mov	lr, #34	; 0x22
   2a5e8:	ldr	ip, [sp, #16]
   2a5ec:	stm	sp, {ip, lr}
   2a5f0:	bl	1046c <myhtml_tokenizer_doctype_public_identifier_dsq@plt>
   2a5f4:	add	sp, sp, #12
   2a5f8:	pop	{pc}		; (ldr pc, [sp], #4)

0002a5fc <myhtml_tokenizer_state_doctype_public_identifier_single_quoted@@Base>:
   2a5fc:	push	{lr}		; (str lr, [sp, #-4]!)
   2a600:	sub	sp, sp, #12
   2a604:	mov	lr, #39	; 0x27
   2a608:	ldr	ip, [sp, #16]
   2a60c:	stm	sp, {ip, lr}
   2a610:	bl	1046c <myhtml_tokenizer_doctype_public_identifier_dsq@plt>
   2a614:	add	sp, sp, #12
   2a618:	pop	{pc}		; (ldr pc, [sp], #4)

0002a61c <myhtml_tokenizer_state_after_doctype_public_identifier@@Base>:
   2a61c:	strd	r4, [sp, #-16]!
   2a620:	mov	r5, r0
   2a624:	add	ip, r2, r3
   2a628:	str	r6, [sp, #8]
   2a62c:	mov	r6, r1
   2a630:	str	lr, [sp, #12]
   2a634:	ldrb	r0, [r2, r3]
   2a638:	ldr	lr, [sp, #16]
   2a63c:	sub	r1, r0, #9
   2a640:	sub	r4, r0, #12
   2a644:	cmp	r0, #32
   2a648:	cmpne	r1, #1
   2a64c:	movls	r1, #1
   2a650:	movhi	r1, #0
   2a654:	cmp	r4, #1
   2a658:	orrls	r1, r1, #1
   2a65c:	cmp	r1, #0
   2a660:	beq	2a6c8 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0xac>
   2a664:	cmp	r3, lr
   2a668:	bcs	2a784 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x168>
   2a66c:	sub	r3, lr, #1
   2a670:	add	r3, r2, r3
   2a674:	rsb	r2, r2, #1
   2a678:	b	2a6a8 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x8c>
   2a67c:	ldrb	r0, [ip, #1]!
   2a680:	sub	r1, r0, #9
   2a684:	sub	lr, r0, #12
   2a688:	cmp	lr, #1
   2a68c:	cmphi	r1, #1
   2a690:	movls	r1, #1
   2a694:	movhi	r1, #0
   2a698:	cmp	r0, #32
   2a69c:	orreq	r1, r1, #1
   2a6a0:	cmp	r1, #0
   2a6a4:	beq	2a77c <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x160>
   2a6a8:	cmp	r3, ip
   2a6ac:	add	r4, r2, ip
   2a6b0:	bne	2a67c <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x60>
   2a6b4:	mov	r0, r4
   2a6b8:	ldrd	r4, [sp]
   2a6bc:	ldr	r6, [sp, #8]
   2a6c0:	add	sp, sp, #12
   2a6c4:	pop	{pc}		; (ldr pc, [sp], #4)
   2a6c8:	cmp	r3, lr
   2a6cc:	bcs	2a784 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x168>
   2a6d0:	cmp	r0, #34	; 0x22
   2a6d4:	beq	2a700 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0xe4>
   2a6d8:	cmp	r0, #39	; 0x27
   2a6dc:	beq	2a76c <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x150>
   2a6e0:	cmp	r0, #62	; 0x3e
   2a6e4:	beq	2a72c <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x110>
   2a6e8:	mov	r2, #1
   2a6ec:	mov	r1, #66	; 0x42
   2a6f0:	mov	r4, r3
   2a6f4:	str	r1, [r5, #160]	; 0xa0
   2a6f8:	str	r2, [r5, #176]	; 0xb0
   2a6fc:	b	2a6b4 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x98>
   2a700:	ldr	r2, [r5, #192]	; 0xc0
   2a704:	mov	ip, #0
   2a708:	mov	r0, #63	; 0x3f
   2a70c:	add	r2, r2, #1
   2a710:	add	r4, r3, #1
   2a714:	ldr	r1, [r5, #56]	; 0x38
   2a718:	add	r2, r2, r3
   2a71c:	str	r2, [r1, #56]	; 0x38
   2a720:	str	ip, [r1, #60]	; 0x3c
   2a724:	str	r0, [r5, #160]	; 0xa0
   2a728:	b	2a6b4 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x98>
   2a72c:	add	r4, r3, #1
   2a730:	ldr	ip, [r6, #32]
   2a734:	mov	r2, r6
   2a738:	mov	r1, r4
   2a73c:	mov	r0, r5
   2a740:	ldr	r3, [r5, #192]	; 0xc0
   2a744:	sub	r3, r3, ip
   2a748:	add	r3, r3, r4
   2a74c:	str	r3, [r6, #36]	; 0x24
   2a750:	bl	ffc8 <myhtml_queue_add@plt>
   2a754:	cmp	r0, #0
   2a758:	movne	r3, #69	; 0x45
   2a75c:	movne	r4, #0
   2a760:	streq	r0, [r5, #160]	; 0xa0
   2a764:	strne	r3, [r5, #160]	; 0xa0
   2a768:	b	2a6b4 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x98>
   2a76c:	mov	ip, #0
   2a770:	mov	r0, #64	; 0x40
   2a774:	ldr	r2, [r5, #192]	; 0xc0
   2a778:	b	2a70c <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0xf0>
   2a77c:	mov	r3, r4
   2a780:	b	2a6d0 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0xb4>
   2a784:	mov	r4, r3
   2a788:	b	2a6b4 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x98>

0002a78c <myhtml_tokenizer_doctype_system_identifier_dsq@@Base>:
   2a78c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2a790:	strd	r6, [sp, #8]
   2a794:	str	r8, [sp, #16]
   2a798:	ldr	r8, [sp, #24]
   2a79c:	str	lr, [sp, #20]
   2a7a0:	ldrb	r7, [sp, #28]
   2a7a4:	cmp	r3, r8
   2a7a8:	bcs	2a964 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x1d8>
   2a7ac:	mov	r4, r3
   2a7b0:	ldrb	r3, [r2, r3]
   2a7b4:	mov	r6, r1
   2a7b8:	mov	r5, r0
   2a7bc:	add	ip, r2, r4
   2a7c0:	cmp	r7, r3
   2a7c4:	beq	2a818 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x8c>
   2a7c8:	cmp	r3, #62	; 0x3e
   2a7cc:	subne	lr, r2, #1
   2a7d0:	rsbne	r3, r2, #1
   2a7d4:	addne	lr, lr, r8
   2a7d8:	bne	2a7f4 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x68>
   2a7dc:	b	2a890 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x104>
   2a7e0:	ldrb	r2, [ip, #1]!
   2a7e4:	cmp	r2, r7
   2a7e8:	beq	2a818 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x8c>
   2a7ec:	cmp	r2, #62	; 0x3e
   2a7f0:	beq	2a890 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x104>
   2a7f4:	cmp	lr, ip
   2a7f8:	add	r4, r3, ip
   2a7fc:	bne	2a7e0 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x54>
   2a800:	mov	r0, r4
   2a804:	ldrd	r4, [sp]
   2a808:	ldrd	r6, [sp, #8]
   2a80c:	ldr	r8, [sp, #16]
   2a810:	add	sp, sp, #20
   2a814:	pop	{pc}		; (ldr pc, [sp], #4)
   2a818:	ldr	r3, [r5, #56]	; 0x38
   2a81c:	ldr	r2, [r5, #192]	; 0xc0
   2a820:	ldr	r1, [r6, #40]	; 0x28
   2a824:	ldr	r0, [r3, #56]	; 0x38
   2a828:	cmp	r1, #0
   2a82c:	sub	r2, r2, r0
   2a830:	add	r2, r2, r4
   2a834:	str	r2, [r3, #60]	; 0x3c
   2a838:	beq	2a94c <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x1c0>
   2a83c:	ldr	r2, [r6, #44]	; 0x2c
   2a840:	mov	r1, #0
   2a844:	str	r3, [r2]
   2a848:	str	r2, [r3, #4]
   2a84c:	str	r3, [r6, #44]	; 0x2c
   2a850:	str	r1, [r3]
   2a854:	str	r3, [r5, #56]	; 0x38
   2a858:	ldr	r3, [r5, #8]
   2a85c:	mov	r0, r3
   2a860:	ldr	r1, [r3, #16]
   2a864:	bl	10898 <myhtml_token_attr_create@plt>
   2a868:	cmp	r0, #0
   2a86c:	str	r0, [r5, #56]	; 0x38
   2a870:	movne	r3, #65	; 0x41
   2a874:	addne	r4, r4, #1
   2a878:	strne	r3, [r5, #160]	; 0xa0
   2a87c:	bne	2a800 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x74>
   2a880:	mov	r3, #69	; 0x45
   2a884:	mov	r4, #0
   2a888:	str	r3, [r5, #160]	; 0xa0
   2a88c:	b	2a800 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x74>
   2a890:	ldr	r3, [r5, #56]	; 0x38
   2a894:	mov	r2, #1
   2a898:	ldr	ip, [r5, #192]	; 0xc0
   2a89c:	ldr	r1, [r3, #56]	; 0x38
   2a8a0:	str	r2, [r5, #176]	; 0xb0
   2a8a4:	add	r2, ip, r4
   2a8a8:	cmp	r1, r2
   2a8ac:	bcs	2a900 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x174>
   2a8b0:	ldr	r0, [r6, #40]	; 0x28
   2a8b4:	sub	r2, r2, r1
   2a8b8:	str	r2, [r3, #60]	; 0x3c
   2a8bc:	cmp	r0, #0
   2a8c0:	beq	2a934 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x1a8>
   2a8c4:	ldr	r2, [r6, #44]	; 0x2c
   2a8c8:	mov	r1, #0
   2a8cc:	str	r3, [r2]
   2a8d0:	str	r2, [r3, #4]
   2a8d4:	str	r3, [r6, #44]	; 0x2c
   2a8d8:	str	r1, [r3]
   2a8dc:	str	r3, [r5, #56]	; 0x38
   2a8e0:	ldr	r3, [r5, #8]
   2a8e4:	mov	r0, r3
   2a8e8:	ldr	r1, [r3, #16]
   2a8ec:	bl	10898 <myhtml_token_attr_create@plt>
   2a8f0:	cmp	r0, #0
   2a8f4:	str	r0, [r5, #56]	; 0x38
   2a8f8:	beq	2a880 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0xf4>
   2a8fc:	ldr	ip, [r5, #192]	; 0xc0
   2a900:	add	r4, r4, #1
   2a904:	mov	r2, r6
   2a908:	ldr	r3, [r6, #32]
   2a90c:	mov	r1, r4
   2a910:	mov	r0, r5
   2a914:	sub	r3, r4, r3
   2a918:	add	r3, r3, ip
   2a91c:	str	r3, [r6, #36]	; 0x24
   2a920:	bl	ffc8 <myhtml_queue_add@plt>
   2a924:	cmp	r0, #0
   2a928:	streq	r0, [r5, #160]	; 0xa0
   2a92c:	beq	2a800 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x74>
   2a930:	b	2a880 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0xf4>
   2a934:	str	r3, [r6, #40]	; 0x28
   2a938:	str	r3, [r6, #44]	; 0x2c
   2a93c:	str	r3, [r5, #56]	; 0x38
   2a940:	str	r0, [r3]
   2a944:	str	r0, [r3, #4]
   2a948:	b	2a8e0 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x154>
   2a94c:	str	r3, [r6, #40]	; 0x28
   2a950:	str	r3, [r6, #44]	; 0x2c
   2a954:	str	r3, [r5, #56]	; 0x38
   2a958:	str	r1, [r3]
   2a95c:	str	r1, [r3, #4]
   2a960:	b	2a858 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0xcc>
   2a964:	mov	r4, r3
   2a968:	b	2a800 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x74>

0002a96c <myhtml_tokenizer_state_doctype_system_identifier_double_quoted@@Base>:
   2a96c:	push	{lr}		; (str lr, [sp, #-4]!)
   2a970:	sub	sp, sp, #12
   2a974:	mov	lr, #34	; 0x22
   2a978:	ldr	ip, [sp, #16]
   2a97c:	stm	sp, {ip, lr}
   2a980:	bl	10a30 <myhtml_tokenizer_doctype_system_identifier_dsq@plt>
   2a984:	add	sp, sp, #12
   2a988:	pop	{pc}		; (ldr pc, [sp], #4)

0002a98c <myhtml_tokenizer_state_doctype_system_identifier_single_quoted@@Base>:
   2a98c:	push	{lr}		; (str lr, [sp, #-4]!)
   2a990:	sub	sp, sp, #12
   2a994:	mov	lr, #39	; 0x27
   2a998:	ldr	ip, [sp, #16]
   2a99c:	stm	sp, {ip, lr}
   2a9a0:	bl	10a30 <myhtml_tokenizer_doctype_system_identifier_dsq@plt>
   2a9a4:	add	sp, sp, #12
   2a9a8:	pop	{pc}		; (ldr pc, [sp], #4)

0002a9ac <myhtml_tokenizer_state_after_doctype_system_identifier@@Base>:
   2a9ac:	strd	r4, [sp, #-16]!
   2a9b0:	mov	r5, r0
   2a9b4:	add	r0, r2, r3
   2a9b8:	str	r6, [sp, #8]
   2a9bc:	mov	r6, r1
   2a9c0:	str	lr, [sp, #12]
   2a9c4:	ldrb	ip, [r2, r3]
   2a9c8:	ldr	lr, [sp, #16]
   2a9cc:	sub	r1, ip, #9
   2a9d0:	sub	r4, ip, #12
   2a9d4:	cmp	ip, #32
   2a9d8:	cmpne	r1, #1
   2a9dc:	movls	r1, #1
   2a9e0:	movhi	r1, #0
   2a9e4:	cmp	r4, #1
   2a9e8:	orrls	r1, r1, #1
   2a9ec:	cmp	r1, #0
   2a9f0:	beq	2aa58 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0xac>
   2a9f4:	cmp	r3, lr
   2a9f8:	bcs	2aabc <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x110>
   2a9fc:	sub	r3, lr, #1
   2aa00:	add	r3, r2, r3
   2aa04:	rsb	r2, r2, #1
   2aa08:	b	2aa38 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x8c>
   2aa0c:	ldrb	ip, [r0, #1]!
   2aa10:	sub	r1, ip, #9
   2aa14:	sub	lr, ip, #12
   2aa18:	cmp	lr, #1
   2aa1c:	cmphi	r1, #1
   2aa20:	movls	r1, #1
   2aa24:	movhi	r1, #0
   2aa28:	cmp	ip, #32
   2aa2c:	orreq	r1, r1, #1
   2aa30:	cmp	r1, #0
   2aa34:	beq	2aab4 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x108>
   2aa38:	cmp	r3, r0
   2aa3c:	add	r4, r2, r0
   2aa40:	bne	2aa0c <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x60>
   2aa44:	mov	r0, r4
   2aa48:	ldrd	r4, [sp]
   2aa4c:	ldr	r6, [sp, #8]
   2aa50:	add	sp, sp, #12
   2aa54:	pop	{pc}		; (ldr pc, [sp], #4)
   2aa58:	cmp	r3, lr
   2aa5c:	bcs	2aabc <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x110>
   2aa60:	cmp	ip, #62	; 0x3e
   2aa64:	movne	r2, #66	; 0x42
   2aa68:	movne	r4, r3
   2aa6c:	strne	r2, [r5, #160]	; 0xa0
   2aa70:	bne	2aa44 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x98>
   2aa74:	add	r4, r3, #1
   2aa78:	ldr	ip, [r6, #32]
   2aa7c:	mov	r2, r6
   2aa80:	mov	r1, r4
   2aa84:	mov	r0, r5
   2aa88:	ldr	r3, [r5, #192]	; 0xc0
   2aa8c:	sub	r3, r3, ip
   2aa90:	add	r3, r3, r4
   2aa94:	str	r3, [r6, #36]	; 0x24
   2aa98:	bl	ffc8 <myhtml_queue_add@plt>
   2aa9c:	cmp	r0, #0
   2aaa0:	movne	r3, #69	; 0x45
   2aaa4:	movne	r4, #0
   2aaa8:	streq	r0, [r5, #160]	; 0xa0
   2aaac:	strne	r3, [r5, #160]	; 0xa0
   2aab0:	b	2aa44 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x98>
   2aab4:	mov	r3, r4
   2aab8:	b	2aa60 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0xb4>
   2aabc:	mov	r4, r3
   2aac0:	b	2aa44 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x98>

0002aac4 <myhtml_tokenizer_state_bogus_doctype@@Base>:
   2aac4:	strd	r4, [sp, #-16]!
   2aac8:	str	r6, [sp, #8]
   2aacc:	str	lr, [sp, #12]
   2aad0:	ldr	lr, [sp, #16]
   2aad4:	cmp	r3, lr
   2aad8:	bcs	2ab70 <myhtml_tokenizer_state_bogus_doctype@@Base+0xac>
   2aadc:	ldrb	r4, [r2, r3]
   2aae0:	add	ip, r2, r3
   2aae4:	cmp	r4, #62	; 0x3e
   2aae8:	subne	r3, r2, #1
   2aaec:	rsbne	r2, r2, #1
   2aaf0:	addne	r3, r3, lr
   2aaf4:	bne	2ab08 <myhtml_tokenizer_state_bogus_doctype@@Base+0x44>
   2aaf8:	b	2ab28 <myhtml_tokenizer_state_bogus_doctype@@Base+0x64>
   2aafc:	ldrb	lr, [ip, #1]!
   2ab00:	cmp	lr, #62	; 0x3e
   2ab04:	beq	2ab2c <myhtml_tokenizer_state_bogus_doctype@@Base+0x68>
   2ab08:	cmp	ip, r3
   2ab0c:	add	r4, r2, ip
   2ab10:	bne	2aafc <myhtml_tokenizer_state_bogus_doctype@@Base+0x38>
   2ab14:	mov	r0, r4
   2ab18:	ldrd	r4, [sp]
   2ab1c:	ldr	r6, [sp, #8]
   2ab20:	add	sp, sp, #12
   2ab24:	pop	{pc}		; (ldr pc, [sp], #4)
   2ab28:	mov	r4, r3
   2ab2c:	mov	r3, r1
   2ab30:	ldr	ip, [r0, #192]	; 0xc0
   2ab34:	add	r4, r4, #1
   2ab38:	mov	r2, r1
   2ab3c:	mov	r1, r4
   2ab40:	ldr	lr, [r3, #32]
   2ab44:	mov	r5, r0
   2ab48:	sub	ip, ip, lr
   2ab4c:	add	ip, ip, r4
   2ab50:	str	ip, [r3, #36]	; 0x24
   2ab54:	bl	ffc8 <myhtml_queue_add@plt>
   2ab58:	cmp	r0, #0
   2ab5c:	movne	r3, #69	; 0x45
   2ab60:	movne	r4, #0
   2ab64:	streq	r0, [r5, #160]	; 0xa0
   2ab68:	strne	r3, [r5, #160]	; 0xa0
   2ab6c:	b	2ab14 <myhtml_tokenizer_state_bogus_doctype@@Base+0x50>
   2ab70:	mov	r4, r3
   2ab74:	b	2ab14 <myhtml_tokenizer_state_bogus_doctype@@Base+0x50>

0002ab78 <myhtml_tokenizer_end_state_data@@Base>:
   2ab78:	strd	r4, [sp, #-12]!
   2ab7c:	mov	r4, r3
   2ab80:	mov	r5, #512	; 0x200
   2ab84:	ldr	r3, [r0, #192]	; 0xc0
   2ab88:	str	lr, [sp, #8]
   2ab8c:	sub	sp, sp, #12
   2ab90:	ldr	ip, [sp, #24]
   2ab94:	str	r5, [sp]
   2ab98:	ldr	r5, [r1, #32]
   2ab9c:	add	ip, ip, r3
   2aba0:	mov	r3, ip
   2aba4:	sub	ip, ip, r5
   2aba8:	str	ip, [r1, #36]	; 0x24
   2abac:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2abb0:	mov	r0, r4
   2abb4:	add	sp, sp, #12
   2abb8:	ldrd	r4, [sp]
   2abbc:	add	sp, sp, #8
   2abc0:	pop	{pc}		; (ldr pc, [sp], #4)

0002abc4 <myhtml_tokenizer_end_state_tag_open@@Base>:
   2abc4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2abc8:	mov	r5, r3
   2abcc:	strd	r6, [sp, #8]
   2abd0:	str	r8, [sp, #16]
   2abd4:	str	lr, [sp, #20]
   2abd8:	sub	sp, sp, #8
   2abdc:	ldr	ip, [sp, #32]
   2abe0:	ldr	r8, [r0, #192]	; 0xc0
   2abe4:	ldr	r7, [r1, #24]
   2abe8:	ldr	lr, [r1, #32]
   2abec:	add	ip, r8, ip
   2abf0:	cmp	ip, r7
   2abf4:	sub	lr, ip, lr
   2abf8:	str	lr, [r1, #36]	; 0x24
   2abfc:	bls	2ac44 <myhtml_tokenizer_end_state_tag_open@@Base+0x80>
   2ac00:	cmp	r7, #0
   2ac04:	mov	r4, r1
   2ac08:	beq	2ac60 <myhtml_tokenizer_end_state_tag_open@@Base+0x9c>
   2ac0c:	sub	r7, r3, r7
   2ac10:	mov	r6, r0
   2ac14:	add	r7, r7, r8
   2ac18:	str	r7, [r1, #28]
   2ac1c:	bl	10bd4 <myhtml_check_tag_parser@plt>
   2ac20:	mov	r2, r4
   2ac24:	mov	r1, r5
   2ac28:	mov	r0, r6
   2ac2c:	bl	ffc8 <myhtml_queue_add@plt>
   2ac30:	cmp	r0, #0
   2ac34:	movne	r3, #69	; 0x45
   2ac38:	movne	r0, #0
   2ac3c:	strne	r3, [r6, #160]	; 0xa0
   2ac40:	bne	2ac48 <myhtml_tokenizer_end_state_tag_open@@Base+0x84>
   2ac44:	mov	r0, r5
   2ac48:	add	sp, sp, #8
   2ac4c:	ldrd	r4, [sp]
   2ac50:	ldrd	r6, [sp, #8]
   2ac54:	ldr	r8, [sp, #16]
   2ac58:	add	sp, sp, #20
   2ac5c:	pop	{pc}		; (ldr pc, [sp], #4)
   2ac60:	ldr	lr, [r1, #48]	; 0x30
   2ac64:	mov	r3, ip
   2ac68:	mov	ip, #512	; 0x200
   2ac6c:	ldr	r6, [r1, #48]	; 0x30
   2ac70:	str	ip, [sp]
   2ac74:	and	ip, lr, #8
   2ac78:	eor	ip, ip, r6
   2ac7c:	str	ip, [r1, #48]	; 0x30
   2ac80:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2ac84:	b	2ac44 <myhtml_tokenizer_end_state_tag_open@@Base+0x80>

0002ac88 <myhtml_tokenizer_end_state_tag_name@@Base>:
   2ac88:	strd	r4, [sp, #-12]!
   2ac8c:	mov	r4, r3
   2ac90:	mov	r5, #512	; 0x200
   2ac94:	ldr	r3, [r0, #192]	; 0xc0
   2ac98:	str	lr, [sp, #8]
   2ac9c:	sub	sp, sp, #12
   2aca0:	ldr	ip, [sp, #24]
   2aca4:	str	r5, [sp]
   2aca8:	ldr	r5, [r1, #32]
   2acac:	add	ip, ip, r3
   2acb0:	mov	r3, ip
   2acb4:	sub	ip, ip, r5
   2acb8:	str	ip, [r1, #36]	; 0x24
   2acbc:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2acc0:	mov	r0, r4
   2acc4:	add	sp, sp, #12
   2acc8:	ldrd	r4, [sp]
   2accc:	add	sp, sp, #8
   2acd0:	pop	{pc}		; (ldr pc, [sp], #4)

0002acd4 <myhtml_tokenizer_end_state_end_tag_open@@Base>:
   2acd4:	strd	r4, [sp, #-20]!	; 0xffffffec
   2acd8:	strd	r6, [sp, #8]
   2acdc:	mov	r6, r3
   2ace0:	str	lr, [sp, #16]
   2ace4:	sub	sp, sp, #12
   2ace8:	ldr	ip, [sp, #32]
   2acec:	ldr	r7, [r0, #192]	; 0xc0
   2acf0:	ldr	r5, [r1, #24]
   2acf4:	ldr	r4, [r1, #32]
   2acf8:	add	r3, r7, ip
   2acfc:	cmp	r3, r5
   2ad00:	sub	ip, r3, r4
   2ad04:	str	ip, [r1, #36]	; 0x24
   2ad08:	bhi	2ad24 <myhtml_tokenizer_end_state_end_tag_open@@Base+0x50>
   2ad0c:	mov	r0, r6
   2ad10:	add	sp, sp, #12
   2ad14:	ldrd	r4, [sp]
   2ad18:	ldrd	r6, [sp, #8]
   2ad1c:	add	sp, sp, #16
   2ad20:	pop	{pc}		; (ldr pc, [sp], #4)
   2ad24:	ldr	ip, [r1, #48]	; 0x30
   2ad28:	sub	r5, r6, r5
   2ad2c:	add	r5, r5, r7
   2ad30:	mov	r7, #512	; 0x200
   2ad34:	ldr	r4, [r1, #48]	; 0x30
   2ad38:	str	r7, [sp]
   2ad3c:	str	r5, [r1, #28]
   2ad40:	and	ip, ip, #8
   2ad44:	eor	ip, ip, r4
   2ad48:	str	ip, [r1, #48]	; 0x30
   2ad4c:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2ad50:	b	2ad0c <myhtml_tokenizer_end_state_end_tag_open@@Base+0x38>

0002ad54 <myhtml_tokenizer_end_state_self_closing_start_tag@@Base>:
   2ad54:	strd	r4, [sp, #-12]!
   2ad58:	mov	r4, r3
   2ad5c:	mov	r5, #512	; 0x200
   2ad60:	ldr	r3, [r0, #192]	; 0xc0
   2ad64:	str	lr, [sp, #8]
   2ad68:	sub	sp, sp, #12
   2ad6c:	ldr	ip, [sp, #24]
   2ad70:	str	r5, [sp]
   2ad74:	ldr	r5, [r1, #32]
   2ad78:	add	ip, ip, r3
   2ad7c:	mov	r3, ip
   2ad80:	sub	ip, ip, r5
   2ad84:	str	ip, [r1, #36]	; 0x24
   2ad88:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2ad8c:	mov	r0, r4
   2ad90:	add	sp, sp, #12
   2ad94:	ldrd	r4, [sp]
   2ad98:	add	sp, sp, #8
   2ad9c:	pop	{pc}		; (ldr pc, [sp], #4)

0002ada0 <myhtml_tokenizer_end_state_markup_declaration_open@@Base>:
   2ada0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2ada4:	mov	r5, r3
   2ada8:	ldr	r3, [r1, #24]
   2adac:	ldr	ip, [r1, #32]
   2adb0:	strd	r6, [sp, #8]
   2adb4:	str	r8, [sp, #16]
   2adb8:	str	lr, [sp, #20]
   2adbc:	sub	sp, sp, #8
   2adc0:	cmp	r3, #1
   2adc4:	ldr	r7, [sp, #32]
   2adc8:	ldr	lr, [r0, #192]	; 0xc0
   2adcc:	sub	ip, r7, ip
   2add0:	add	ip, ip, lr
   2add4:	str	ip, [r1, #36]	; 0x24
   2add8:	bhi	2adf8 <myhtml_tokenizer_end_state_markup_declaration_open@@Base+0x58>
   2addc:	mov	r0, r5
   2ade0:	add	sp, sp, #8
   2ade4:	ldrd	r4, [sp]
   2ade8:	ldrd	r6, [sp, #8]
   2adec:	ldr	r8, [sp, #16]
   2adf0:	add	sp, sp, #20
   2adf4:	pop	{pc}		; (ldr pc, [sp], #4)
   2adf8:	mov	r6, r0
   2adfc:	str	r7, [sp]
   2ae00:	mov	r4, r1
   2ae04:	ldr	r8, [r0, #76]	; 0x4c
   2ae08:	bl	ff74 <myhtml_tokenizer_state_bogus_comment@plt>
   2ae0c:	ldr	r3, [r6, #64]	; 0x40
   2ae10:	str	r0, [r8, #4]
   2ae14:	cmp	r3, r4
   2ae18:	beq	2ae88 <myhtml_tokenizer_end_state_markup_declaration_open@@Base+0xe8>
   2ae1c:	ldr	r2, [r6, #192]	; 0xc0
   2ae20:	ldr	r1, [r3, #24]
   2ae24:	add	r7, r7, r2
   2ae28:	sub	r7, r7, r1
   2ae2c:	cmp	r7, #0
   2ae30:	str	r7, [r3, #28]
   2ae34:	beq	2addc <myhtml_tokenizer_end_state_markup_declaration_open@@Base+0x3c>
   2ae38:	ldr	ip, [r3, #48]	; 0x30
   2ae3c:	mov	r2, #1
   2ae40:	mov	r1, r5
   2ae44:	ldr	r0, [r3, #48]	; 0x30
   2ae48:	str	r2, [r3]
   2ae4c:	mov	r2, r3
   2ae50:	and	ip, ip, #8
   2ae54:	eor	ip, ip, r0
   2ae58:	mov	r0, r6
   2ae5c:	str	ip, [r3, #48]	; 0x30
   2ae60:	ldr	ip, [r3, #48]	; 0x30
   2ae64:	orr	ip, ip, #512	; 0x200
   2ae68:	str	ip, [r3, #48]	; 0x30
   2ae6c:	bl	ffc8 <myhtml_queue_add@plt>
   2ae70:	cmp	r0, #0
   2ae74:	beq	2addc <myhtml_tokenizer_end_state_markup_declaration_open@@Base+0x3c>
   2ae78:	mov	r3, #69	; 0x45
   2ae7c:	mov	r0, #0
   2ae80:	str	r3, [r6, #160]	; 0xa0
   2ae84:	b	2ade0 <myhtml_tokenizer_end_state_markup_declaration_open@@Base+0x40>
   2ae88:	ldr	r4, [r3, #24]
   2ae8c:	mov	r2, #2
   2ae90:	mov	r1, r5
   2ae94:	ldr	r0, [r3, #48]	; 0x30
   2ae98:	ldr	ip, [r3, #48]	; 0x30
   2ae9c:	sub	r7, r7, r4
   2aea0:	ldr	lr, [r6, #192]	; 0xc0
   2aea4:	and	r0, r0, #8
   2aea8:	str	r2, [r3]
   2aeac:	mov	r2, r3
   2aeb0:	eor	r0, r0, ip
   2aeb4:	str	r0, [r3, #48]	; 0x30
   2aeb8:	add	r7, r7, lr
   2aebc:	mov	r0, r6
   2aec0:	ldr	ip, [r3, #48]	; 0x30
   2aec4:	str	r7, [r3, #28]
   2aec8:	orr	ip, ip, #1024	; 0x400
   2aecc:	str	ip, [r3, #48]	; 0x30
   2aed0:	bl	ffc8 <myhtml_queue_add@plt>
   2aed4:	cmp	r0, #0
   2aed8:	beq	2addc <myhtml_tokenizer_end_state_markup_declaration_open@@Base+0x3c>
   2aedc:	b	2ae78 <myhtml_tokenizer_end_state_markup_declaration_open@@Base+0xd8>

0002aee0 <myhtml_tokenizer_end_state_before_attribute_name@@Base>:
   2aee0:	strd	r4, [sp, #-16]!
   2aee4:	mov	r2, r1
   2aee8:	mov	r4, r3
   2aeec:	str	r6, [sp, #8]
   2aef0:	mov	r5, r0
   2aef4:	ldr	ip, [sp, #16]
   2aef8:	str	lr, [sp, #12]
   2aefc:	ldr	r6, [r1, #32]
   2af00:	mov	r1, r3
   2af04:	ldr	r3, [r0, #192]	; 0xc0
   2af08:	sub	ip, ip, r6
   2af0c:	add	ip, ip, r3
   2af10:	str	ip, [r2, #36]	; 0x24
   2af14:	bl	ffc8 <myhtml_queue_add@plt>
   2af18:	cmp	r0, #0
   2af1c:	beq	2af2c <myhtml_tokenizer_end_state_before_attribute_name@@Base+0x4c>
   2af20:	mov	r3, #69	; 0x45
   2af24:	mov	r4, #0
   2af28:	str	r3, [r5, #160]	; 0xa0
   2af2c:	mov	r0, r4
   2af30:	ldrd	r4, [sp]
   2af34:	ldr	r6, [sp, #8]
   2af38:	add	sp, sp, #12
   2af3c:	pop	{pc}		; (ldr pc, [sp], #4)

0002af40 <myhtml_tokenizer_end_state_attribute_name@@Base>:
   2af40:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2af44:	mov	r4, r3
   2af48:	mov	r2, r1
   2af4c:	ldr	r3, [r0, #56]	; 0x38
   2af50:	mov	r5, r0
   2af54:	ldr	ip, [r0, #192]	; 0xc0
   2af58:	strd	r6, [sp, #8]
   2af5c:	str	r8, [sp, #16]
   2af60:	str	lr, [sp, #20]
   2af64:	ldr	lr, [sp, #24]
   2af68:	ldr	r8, [r1, #32]
   2af6c:	mov	r1, r4
   2af70:	ldr	r7, [r3, #48]	; 0x30
   2af74:	sub	lr, lr, r8
   2af78:	add	lr, lr, ip
   2af7c:	add	ip, ip, r4
   2af80:	sub	ip, ip, r7
   2af84:	str	lr, [r2, #36]	; 0x24
   2af88:	str	ip, [r3, #52]	; 0x34
   2af8c:	bl	ffc8 <myhtml_queue_add@plt>
   2af90:	cmp	r0, #0
   2af94:	beq	2afa4 <myhtml_tokenizer_end_state_attribute_name@@Base+0x64>
   2af98:	mov	r3, #69	; 0x45
   2af9c:	mov	r4, #0
   2afa0:	str	r3, [r5, #160]	; 0xa0
   2afa4:	mov	r0, r4
   2afa8:	ldrd	r4, [sp]
   2afac:	ldrd	r6, [sp, #8]
   2afb0:	ldr	r8, [sp, #16]
   2afb4:	add	sp, sp, #20
   2afb8:	pop	{pc}		; (ldr pc, [sp], #4)

0002afbc <myhtml_tokenizer_end_state_after_attribute_name@@Base>:
   2afbc:	strd	r4, [sp, #-16]!
   2afc0:	mov	r4, r3
   2afc4:	mov	r2, r1
   2afc8:	ldr	r3, [r1, #32]
   2afcc:	mov	r1, r4
   2afd0:	mov	r5, r0
   2afd4:	ldr	ip, [r0, #192]	; 0xc0
   2afd8:	str	r6, [sp, #8]
   2afdc:	ldr	r6, [sp, #16]
   2afe0:	str	lr, [sp, #12]
   2afe4:	sub	ip, ip, r3
   2afe8:	add	ip, ip, r6
   2afec:	str	ip, [r2, #36]	; 0x24
   2aff0:	bl	ffc8 <myhtml_queue_add@plt>
   2aff4:	cmp	r0, #0
   2aff8:	beq	2b008 <myhtml_tokenizer_end_state_after_attribute_name@@Base+0x4c>
   2affc:	mov	r3, #69	; 0x45
   2b000:	mov	r4, #0
   2b004:	str	r3, [r5, #160]	; 0xa0
   2b008:	mov	r0, r4
   2b00c:	ldrd	r4, [sp]
   2b010:	ldr	r6, [sp, #8]
   2b014:	add	sp, sp, #12
   2b018:	pop	{pc}		; (ldr pc, [sp], #4)

0002b01c <myhtml_tokenizer_end_state_before_attribute_value@@Base>:
   2b01c:	strd	r4, [sp, #-16]!
   2b020:	mov	r2, r1
   2b024:	mov	r4, r3
   2b028:	str	r6, [sp, #8]
   2b02c:	mov	r5, r0
   2b030:	ldr	ip, [sp, #16]
   2b034:	str	lr, [sp, #12]
   2b038:	ldr	r6, [r1, #32]
   2b03c:	mov	r1, r3
   2b040:	ldr	r3, [r0, #192]	; 0xc0
   2b044:	sub	ip, ip, r6
   2b048:	add	ip, ip, r3
   2b04c:	str	ip, [r2, #36]	; 0x24
   2b050:	bl	ffc8 <myhtml_queue_add@plt>
   2b054:	cmp	r0, #0
   2b058:	beq	2b078 <myhtml_tokenizer_end_state_before_attribute_value@@Base+0x5c>
   2b05c:	mov	r3, #69	; 0x45
   2b060:	ldr	r6, [sp, #8]
   2b064:	mov	r0, #0
   2b068:	str	r3, [r5, #160]	; 0xa0
   2b06c:	ldrd	r4, [sp]
   2b070:	add	sp, sp, #12
   2b074:	pop	{pc}		; (ldr pc, [sp], #4)
   2b078:	ldr	r3, [r5, #8]
   2b07c:	mov	r0, r3
   2b080:	ldr	r1, [r3, #16]
   2b084:	bl	10898 <myhtml_token_attr_create@plt>
   2b088:	cmp	r0, #0
   2b08c:	str	r0, [r5, #56]	; 0x38
   2b090:	beq	2b05c <myhtml_tokenizer_end_state_before_attribute_value@@Base+0x40>
   2b094:	mov	r0, r4
   2b098:	ldrd	r4, [sp]
   2b09c:	ldr	r6, [sp, #8]
   2b0a0:	add	sp, sp, #12
   2b0a4:	pop	{pc}		; (ldr pc, [sp], #4)

0002b0a8 <myhtml_tokenizer_end_state_attribute_value_double_quoted@@Base>:
   2b0a8:	push	{lr}		; (str lr, [sp, #-4]!)
   2b0ac:	ldr	r2, [sp, #4]
   2b0b0:	ldr	lr, [r1, #32]
   2b0b4:	ldr	ip, [r0, #192]	; 0xc0
   2b0b8:	mov	r0, r3
   2b0bc:	sub	r2, r2, lr
   2b0c0:	add	r2, r2, ip
   2b0c4:	str	r2, [r1, #36]	; 0x24
   2b0c8:	pop	{pc}		; (ldr pc, [sp], #4)

0002b0cc <myhtml_tokenizer_end_state_attribute_value_single_quoted@@Base>:
   2b0cc:	ldr	ip, [r1, #32]
   2b0d0:	ldr	r2, [r0, #192]	; 0xc0
   2b0d4:	mov	r0, r3
   2b0d8:	ldr	r3, [sp]
   2b0dc:	sub	r2, r2, ip
   2b0e0:	add	r2, r2, r3
   2b0e4:	str	r2, [r1, #36]	; 0x24
   2b0e8:	bx	lr

0002b0ec <myhtml_tokenizer_end_state_attribute_value_unquoted@@Base>:
   2b0ec:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2b0f0:	mov	r4, r3
   2b0f4:	mov	r2, r1
   2b0f8:	ldr	r3, [r0, #56]	; 0x38
   2b0fc:	mov	r5, r0
   2b100:	ldr	ip, [r0, #192]	; 0xc0
   2b104:	strd	r6, [sp, #8]
   2b108:	str	r8, [sp, #16]
   2b10c:	str	lr, [sp, #20]
   2b110:	ldr	lr, [sp, #24]
   2b114:	ldr	r8, [r1, #32]
   2b118:	mov	r1, r4
   2b11c:	ldr	r7, [r3, #56]	; 0x38
   2b120:	sub	lr, lr, r8
   2b124:	add	lr, lr, ip
   2b128:	add	ip, ip, r4
   2b12c:	sub	ip, ip, r7
   2b130:	str	lr, [r2, #36]	; 0x24
   2b134:	str	ip, [r3, #60]	; 0x3c
   2b138:	bl	ffc8 <myhtml_queue_add@plt>
   2b13c:	cmp	r0, #0
   2b140:	beq	2b164 <myhtml_tokenizer_end_state_attribute_value_unquoted@@Base+0x78>
   2b144:	mov	r3, #69	; 0x45
   2b148:	mov	r0, #0
   2b14c:	str	r3, [r5, #160]	; 0xa0
   2b150:	ldrd	r4, [sp]
   2b154:	ldrd	r6, [sp, #8]
   2b158:	ldr	r8, [sp, #16]
   2b15c:	add	sp, sp, #20
   2b160:	pop	{pc}		; (ldr pc, [sp], #4)
   2b164:	ldr	r3, [r5, #8]
   2b168:	mov	r0, r3
   2b16c:	ldr	r1, [r3, #16]
   2b170:	bl	10898 <myhtml_token_attr_create@plt>
   2b174:	cmp	r0, #0
   2b178:	str	r0, [r5, #56]	; 0x38
   2b17c:	beq	2b144 <myhtml_tokenizer_end_state_attribute_value_unquoted@@Base+0x58>
   2b180:	mov	r0, r4
   2b184:	b	2b150 <myhtml_tokenizer_end_state_attribute_value_unquoted@@Base+0x64>

0002b188 <myhtml_tokenizer_end_state_after_attribute_value_quoted@@Base>:
   2b188:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2b18c:	mov	ip, r1
   2b190:	mov	r2, r1
   2b194:	ldr	r4, [r1, #24]
   2b198:	mov	r5, r0
   2b19c:	strd	r6, [sp, #8]
   2b1a0:	mov	r6, r3
   2b1a4:	ldr	r7, [r1, #32]
   2b1a8:	mov	r1, r3
   2b1ac:	str	lr, [sp, #20]
   2b1b0:	ldr	lr, [sp, #24]
   2b1b4:	sub	r4, r3, r4
   2b1b8:	str	r8, [sp, #16]
   2b1bc:	ldr	r3, [r0, #192]	; 0xc0
   2b1c0:	sub	lr, lr, r7
   2b1c4:	add	lr, lr, r3
   2b1c8:	add	r4, r4, r3
   2b1cc:	str	r4, [ip, #28]
   2b1d0:	str	lr, [ip, #36]	; 0x24
   2b1d4:	bl	ffc8 <myhtml_queue_add@plt>
   2b1d8:	cmp	r0, #0
   2b1dc:	beq	2b1ec <myhtml_tokenizer_end_state_after_attribute_value_quoted@@Base+0x64>
   2b1e0:	mov	r3, #69	; 0x45
   2b1e4:	mov	r6, #0
   2b1e8:	str	r3, [r5, #160]	; 0xa0
   2b1ec:	mov	r0, r6
   2b1f0:	ldrd	r4, [sp]
   2b1f4:	ldrd	r6, [sp, #8]
   2b1f8:	ldr	r8, [sp, #16]
   2b1fc:	add	sp, sp, #20
   2b200:	pop	{pc}		; (ldr pc, [sp], #4)

0002b204 <myhtml_tokenizer_end_state_comment_start@@Base>:
   2b204:	mov	r2, r1
   2b208:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2b20c:	mov	r5, r0
   2b210:	ldr	r4, [r1, #32]
   2b214:	mov	r1, r3
   2b218:	ldr	ip, [r0, #192]	; 0xc0
   2b21c:	strd	r6, [sp, #8]
   2b220:	mov	r6, r3
   2b224:	ldr	r3, [r2, #24]
   2b228:	str	r8, [sp, #16]
   2b22c:	ldr	r7, [sp, #24]
   2b230:	sub	r4, ip, r4
   2b234:	str	lr, [sp, #20]
   2b238:	sub	ip, ip, r3
   2b23c:	add	ip, ip, r6
   2b240:	add	r4, r4, r7
   2b244:	str	ip, [r2, #28]
   2b248:	str	r4, [r2, #36]	; 0x24
   2b24c:	bl	ffc8 <myhtml_queue_add@plt>
   2b250:	cmp	r0, #0
   2b254:	beq	2b264 <myhtml_tokenizer_end_state_comment_start@@Base+0x60>
   2b258:	mov	r3, #69	; 0x45
   2b25c:	mov	r6, #0
   2b260:	str	r3, [r5, #160]	; 0xa0
   2b264:	mov	r0, r6
   2b268:	ldrd	r4, [sp]
   2b26c:	ldrd	r6, [sp, #8]
   2b270:	ldr	r8, [sp, #16]
   2b274:	add	sp, sp, #20
   2b278:	pop	{pc}		; (ldr pc, [sp], #4)

0002b27c <myhtml_tokenizer_end_state_comment_start_dash@@Base>:
   2b27c:	mov	r2, r1
   2b280:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2b284:	mov	r5, r0
   2b288:	ldr	r4, [r1, #32]
   2b28c:	mov	r1, r3
   2b290:	ldr	ip, [r0, #192]	; 0xc0
   2b294:	strd	r6, [sp, #8]
   2b298:	mov	r6, r3
   2b29c:	ldr	r3, [r2, #24]
   2b2a0:	str	r8, [sp, #16]
   2b2a4:	ldr	r7, [sp, #24]
   2b2a8:	sub	r4, ip, r4
   2b2ac:	str	lr, [sp, #20]
   2b2b0:	sub	ip, ip, r3
   2b2b4:	add	ip, ip, r6
   2b2b8:	add	r4, r4, r7
   2b2bc:	str	ip, [r2, #28]
   2b2c0:	str	r4, [r2, #36]	; 0x24
   2b2c4:	bl	ffc8 <myhtml_queue_add@plt>
   2b2c8:	cmp	r0, #0
   2b2cc:	beq	2b2dc <myhtml_tokenizer_end_state_comment_start_dash@@Base+0x60>
   2b2d0:	mov	r3, #69	; 0x45
   2b2d4:	mov	r6, #0
   2b2d8:	str	r3, [r5, #160]	; 0xa0
   2b2dc:	mov	r0, r6
   2b2e0:	ldrd	r4, [sp]
   2b2e4:	ldrd	r6, [sp, #8]
   2b2e8:	ldr	r8, [sp, #16]
   2b2ec:	add	sp, sp, #20
   2b2f0:	pop	{pc}		; (ldr pc, [sp], #4)

0002b2f4 <myhtml_tokenizer_end_state_comment@@Base>:
   2b2f4:	mov	r2, r1
   2b2f8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2b2fc:	mov	r5, r0
   2b300:	ldr	r4, [r1, #32]
   2b304:	mov	r1, r3
   2b308:	ldr	ip, [r0, #192]	; 0xc0
   2b30c:	strd	r6, [sp, #8]
   2b310:	mov	r6, r3
   2b314:	ldr	r3, [r2, #24]
   2b318:	str	r8, [sp, #16]
   2b31c:	ldr	r7, [sp, #24]
   2b320:	sub	r4, ip, r4
   2b324:	str	lr, [sp, #20]
   2b328:	sub	ip, ip, r3
   2b32c:	add	ip, ip, r6
   2b330:	add	r4, r4, r7
   2b334:	str	ip, [r2, #28]
   2b338:	str	r4, [r2, #36]	; 0x24
   2b33c:	bl	ffc8 <myhtml_queue_add@plt>
   2b340:	cmp	r0, #0
   2b344:	beq	2b354 <myhtml_tokenizer_end_state_comment@@Base+0x60>
   2b348:	mov	r3, #69	; 0x45
   2b34c:	mov	r6, #0
   2b350:	str	r3, [r5, #160]	; 0xa0
   2b354:	mov	r0, r6
   2b358:	ldrd	r4, [sp]
   2b35c:	ldrd	r6, [sp, #8]
   2b360:	ldr	r8, [sp, #16]
   2b364:	add	sp, sp, #20
   2b368:	pop	{pc}		; (ldr pc, [sp], #4)

0002b36c <myhtml_tokenizer_end_state_comment_end@@Base>:
   2b36c:	strd	r4, [sp, #-16]!
   2b370:	mov	r5, r3
   2b374:	ldr	ip, [sp, #16]
   2b378:	ldr	r2, [r1, #24]
   2b37c:	ldr	r3, [r0, #192]	; 0xc0
   2b380:	str	r6, [sp, #8]
   2b384:	str	lr, [sp, #12]
   2b388:	ldr	lr, [r1, #32]
   2b38c:	sub	r2, r5, r2
   2b390:	add	r2, r2, r3
   2b394:	cmp	r2, #2
   2b398:	sub	ip, ip, lr
   2b39c:	add	ip, ip, r3
   2b3a0:	str	ip, [r1, #36]	; 0x24
   2b3a4:	bhi	2b3c0 <myhtml_tokenizer_end_state_comment_end@@Base+0x54>
   2b3a8:	str	r2, [r1, #28]
   2b3ac:	mov	r0, r5
   2b3b0:	ldrd	r4, [sp]
   2b3b4:	ldr	r6, [sp, #8]
   2b3b8:	add	sp, sp, #12
   2b3bc:	pop	{pc}		; (ldr pc, [sp], #4)
   2b3c0:	sub	ip, r2, #2
   2b3c4:	mov	r2, r1
   2b3c8:	mov	r4, r0
   2b3cc:	str	ip, [r1, #28]
   2b3d0:	mov	r1, r5
   2b3d4:	bl	ffc8 <myhtml_queue_add@plt>
   2b3d8:	cmp	r0, #0
   2b3dc:	beq	2b3ac <myhtml_tokenizer_end_state_comment_end@@Base+0x40>
   2b3e0:	mov	r3, #69	; 0x45
   2b3e4:	ldr	r6, [sp, #8]
   2b3e8:	mov	r0, #0
   2b3ec:	str	r3, [r4, #160]	; 0xa0
   2b3f0:	ldrd	r4, [sp]
   2b3f4:	add	sp, sp, #12
   2b3f8:	pop	{pc}		; (ldr pc, [sp], #4)

0002b3fc <myhtml_tokenizer_end_state_comment_end_dash@@Base>:
   2b3fc:	mov	r2, r1
   2b400:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2b404:	mov	r5, r0
   2b408:	ldr	r4, [r1, #32]
   2b40c:	mov	r1, r3
   2b410:	ldr	ip, [r0, #192]	; 0xc0
   2b414:	strd	r6, [sp, #8]
   2b418:	mov	r6, r3
   2b41c:	ldr	r3, [r2, #24]
   2b420:	str	r8, [sp, #16]
   2b424:	ldr	r7, [sp, #24]
   2b428:	sub	r4, ip, r4
   2b42c:	str	lr, [sp, #20]
   2b430:	sub	ip, ip, r3
   2b434:	add	ip, ip, r6
   2b438:	add	r4, r4, r7
   2b43c:	str	ip, [r2, #28]
   2b440:	str	r4, [r2, #36]	; 0x24
   2b444:	bl	ffc8 <myhtml_queue_add@plt>
   2b448:	cmp	r0, #0
   2b44c:	beq	2b45c <myhtml_tokenizer_end_state_comment_end_dash@@Base+0x60>
   2b450:	mov	r3, #69	; 0x45
   2b454:	mov	r6, #0
   2b458:	str	r3, [r5, #160]	; 0xa0
   2b45c:	mov	r0, r6
   2b460:	ldrd	r4, [sp]
   2b464:	ldrd	r6, [sp, #8]
   2b468:	ldr	r8, [sp, #16]
   2b46c:	add	sp, sp, #20
   2b470:	pop	{pc}		; (ldr pc, [sp], #4)

0002b474 <myhtml_tokenizer_end_state_comment_end_bang@@Base>:
   2b474:	mov	r2, r1
   2b478:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2b47c:	mov	r5, r0
   2b480:	ldr	r4, [r1, #32]
   2b484:	mov	r1, r3
   2b488:	ldr	ip, [r0, #192]	; 0xc0
   2b48c:	strd	r6, [sp, #8]
   2b490:	mov	r6, r3
   2b494:	ldr	r3, [r2, #24]
   2b498:	str	r8, [sp, #16]
   2b49c:	ldr	r7, [sp, #24]
   2b4a0:	sub	r4, ip, r4
   2b4a4:	str	lr, [sp, #20]
   2b4a8:	sub	ip, ip, r3
   2b4ac:	add	ip, ip, r6
   2b4b0:	add	r4, r4, r7
   2b4b4:	str	ip, [r2, #28]
   2b4b8:	str	r4, [r2, #36]	; 0x24
   2b4bc:	bl	ffc8 <myhtml_queue_add@plt>
   2b4c0:	cmp	r0, #0
   2b4c4:	beq	2b4d4 <myhtml_tokenizer_end_state_comment_end_bang@@Base+0x60>
   2b4c8:	mov	r3, #69	; 0x45
   2b4cc:	mov	r6, #0
   2b4d0:	str	r3, [r5, #160]	; 0xa0
   2b4d4:	mov	r0, r6
   2b4d8:	ldrd	r4, [sp]
   2b4dc:	ldrd	r6, [sp, #8]
   2b4e0:	ldr	r8, [sp, #16]
   2b4e4:	add	sp, sp, #20
   2b4e8:	pop	{pc}		; (ldr pc, [sp], #4)

0002b4ec <myhtml_tokenizer_end_state_bogus_comment@@Base>:
   2b4ec:	mov	r2, r1
   2b4f0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2b4f4:	mov	r5, r0
   2b4f8:	ldr	r4, [r1, #32]
   2b4fc:	mov	r1, r3
   2b500:	ldr	ip, [r0, #192]	; 0xc0
   2b504:	strd	r6, [sp, #8]
   2b508:	mov	r6, r3
   2b50c:	ldr	r3, [r2, #24]
   2b510:	str	r8, [sp, #16]
   2b514:	ldr	r7, [sp, #24]
   2b518:	sub	r4, ip, r4
   2b51c:	str	lr, [sp, #20]
   2b520:	sub	ip, ip, r3
   2b524:	add	ip, ip, r6
   2b528:	add	r4, r4, r7
   2b52c:	str	ip, [r2, #28]
   2b530:	str	r4, [r2, #36]	; 0x24
   2b534:	bl	ffc8 <myhtml_queue_add@plt>
   2b538:	cmp	r0, #0
   2b53c:	beq	2b54c <myhtml_tokenizer_end_state_bogus_comment@@Base+0x60>
   2b540:	mov	r3, #69	; 0x45
   2b544:	mov	r6, #0
   2b548:	str	r3, [r5, #160]	; 0xa0
   2b54c:	mov	r0, r6
   2b550:	ldrd	r4, [sp]
   2b554:	ldrd	r6, [sp, #8]
   2b558:	ldr	r8, [sp, #16]
   2b55c:	add	sp, sp, #20
   2b560:	pop	{pc}		; (ldr pc, [sp], #4)

0002b564 <myhtml_tokenizer_end_state_cdata_section@@Base>:
   2b564:	strd	r4, [sp, #-16]!
   2b568:	mov	r5, r3
   2b56c:	ldr	ip, [r1, #24]
   2b570:	ldr	r2, [r1, #32]
   2b574:	ldr	r3, [r0, #192]	; 0xc0
   2b578:	sub	ip, r5, ip
   2b57c:	str	r6, [sp, #8]
   2b580:	str	lr, [sp, #12]
   2b584:	ldr	lr, [sp, #16]
   2b588:	add	ip, ip, r3
   2b58c:	cmp	ip, #0
   2b590:	str	ip, [r1, #28]
   2b594:	sub	lr, lr, r2
   2b598:	add	lr, lr, r3
   2b59c:	str	lr, [r1, #36]	; 0x24
   2b5a0:	bne	2b5b8 <myhtml_tokenizer_end_state_cdata_section@@Base+0x54>
   2b5a4:	mov	r0, r5
   2b5a8:	ldrd	r4, [sp]
   2b5ac:	ldr	r6, [sp, #8]
   2b5b0:	add	sp, sp, #12
   2b5b4:	pop	{pc}		; (ldr pc, [sp], #4)
   2b5b8:	mov	r2, r1
   2b5bc:	mov	r1, r5
   2b5c0:	mov	r4, r0
   2b5c4:	bl	ffc8 <myhtml_queue_add@plt>
   2b5c8:	cmp	r0, #0
   2b5cc:	beq	2b5a4 <myhtml_tokenizer_end_state_cdata_section@@Base+0x40>
   2b5d0:	mov	r3, #69	; 0x45
   2b5d4:	ldr	r6, [sp, #8]
   2b5d8:	mov	r0, #0
   2b5dc:	str	r3, [r4, #160]	; 0xa0
   2b5e0:	ldrd	r4, [sp]
   2b5e4:	add	sp, sp, #12
   2b5e8:	pop	{pc}		; (ldr pc, [sp], #4)

0002b5ec <myhtml_tokenizer_end_state_rcdata@@Base>:
   2b5ec:	strd	r4, [sp, #-16]!
   2b5f0:	mov	r5, r3
   2b5f4:	mov	ip, r1
   2b5f8:	ldr	r2, [sp, #16]
   2b5fc:	ldr	r3, [r0, #192]	; 0xc0
   2b600:	str	r6, [sp, #8]
   2b604:	str	lr, [sp, #12]
   2b608:	ldr	lr, [r1, #32]
   2b60c:	ldr	r1, [r1, #24]
   2b610:	add	r2, r2, r3
   2b614:	sub	lr, r2, lr
   2b618:	cmp	r2, r1
   2b61c:	str	lr, [ip, #36]	; 0x24
   2b620:	bhi	2b638 <myhtml_tokenizer_end_state_rcdata@@Base+0x4c>
   2b624:	mov	r0, r5
   2b628:	ldrd	r4, [sp]
   2b62c:	ldr	r6, [sp, #8]
   2b630:	add	sp, sp, #12
   2b634:	pop	{pc}		; (ldr pc, [sp], #4)
   2b638:	ldr	r3, [ip, #48]	; 0x30
   2b63c:	sub	r1, r2, r1
   2b640:	mov	r2, #1
   2b644:	mov	r4, r0
   2b648:	str	r2, [ip]
   2b64c:	mov	r2, ip
   2b650:	str	r1, [ip, #28]
   2b654:	mov	r1, #0
   2b658:	orr	r3, r3, #16
   2b65c:	str	r3, [ip, #48]	; 0x30
   2b660:	bl	ffc8 <myhtml_queue_add@plt>
   2b664:	cmp	r0, #0
   2b668:	beq	2b624 <myhtml_tokenizer_end_state_rcdata@@Base+0x38>
   2b66c:	mov	r3, #69	; 0x45
   2b670:	ldr	r6, [sp, #8]
   2b674:	mov	r0, #0
   2b678:	str	r3, [r4, #160]	; 0xa0
   2b67c:	ldrd	r4, [sp]
   2b680:	add	sp, sp, #12
   2b684:	pop	{pc}		; (ldr pc, [sp], #4)

0002b688 <myhtml_tokenizer_end_state_rcdata_less_than_sign@@Base>:
   2b688:	strd	r4, [sp, #-16]!
   2b68c:	mov	r4, r3
   2b690:	ldr	r3, [r0, #192]	; 0xc0
   2b694:	str	r6, [sp, #8]
   2b698:	mov	r6, #16
   2b69c:	str	lr, [sp, #12]
   2b6a0:	sub	sp, sp, #8
   2b6a4:	ldr	ip, [sp, #24]
   2b6a8:	str	r6, [sp]
   2b6ac:	ldr	r5, [r1, #32]
   2b6b0:	sub	ip, ip, r5
   2b6b4:	add	ip, ip, r3
   2b6b8:	add	r3, r3, r4
   2b6bc:	str	ip, [r1, #36]	; 0x24
   2b6c0:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2b6c4:	mov	r0, r4
   2b6c8:	add	sp, sp, #8
   2b6cc:	ldrd	r4, [sp]
   2b6d0:	ldr	r6, [sp, #8]
   2b6d4:	add	sp, sp, #12
   2b6d8:	pop	{pc}		; (ldr pc, [sp], #4)

0002b6dc <myhtml_tokenizer_end_state_rcdata_end_tag_open@@Base>:
   2b6dc:	strd	r4, [sp, #-16]!
   2b6e0:	mov	r4, r3
   2b6e4:	mov	r3, #16
   2b6e8:	ldr	ip, [r0, #192]	; 0xc0
   2b6ec:	str	r6, [sp, #8]
   2b6f0:	str	lr, [sp, #12]
   2b6f4:	sub	sp, sp, #8
   2b6f8:	ldr	r6, [r1, #32]
   2b6fc:	str	r3, [sp]
   2b700:	ldr	r5, [sp, #24]
   2b704:	add	r3, r4, ip
   2b708:	sub	ip, ip, r6
   2b70c:	add	ip, ip, r5
   2b710:	str	ip, [r1, #36]	; 0x24
   2b714:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2b718:	mov	r0, r4
   2b71c:	add	sp, sp, #8
   2b720:	ldrd	r4, [sp]
   2b724:	ldr	r6, [sp, #8]
   2b728:	add	sp, sp, #12
   2b72c:	pop	{pc}		; (ldr pc, [sp], #4)

0002b730 <myhtml_tokenizer_end_state_rcdata_end_tag_name@@Base>:
   2b730:	strd	r4, [sp, #-16]!
   2b734:	mov	r4, r3
   2b738:	mov	r3, #16
   2b73c:	ldr	ip, [r0, #192]	; 0xc0
   2b740:	str	r6, [sp, #8]
   2b744:	str	lr, [sp, #12]
   2b748:	sub	sp, sp, #8
   2b74c:	ldr	r6, [r1, #32]
   2b750:	str	r3, [sp]
   2b754:	ldr	r5, [sp, #24]
   2b758:	add	r3, r4, ip
   2b75c:	sub	ip, ip, r6
   2b760:	add	ip, ip, r5
   2b764:	str	ip, [r1, #36]	; 0x24
   2b768:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2b76c:	mov	r0, r4
   2b770:	add	sp, sp, #8
   2b774:	ldrd	r4, [sp]
   2b778:	ldr	r6, [sp, #8]
   2b77c:	add	sp, sp, #12
   2b780:	pop	{pc}		; (ldr pc, [sp], #4)

0002b784 <myhtml_tokenizer_end_state_rawtext@@Base>:
   2b784:	strd	r4, [sp, #-16]!
   2b788:	mov	r4, r3
   2b78c:	ldr	r3, [r0, #192]	; 0xc0
   2b790:	str	r6, [sp, #8]
   2b794:	mov	r6, #32
   2b798:	str	lr, [sp, #12]
   2b79c:	sub	sp, sp, #8
   2b7a0:	ldr	ip, [sp, #24]
   2b7a4:	str	r6, [sp]
   2b7a8:	ldr	r5, [r1, #32]
   2b7ac:	sub	ip, ip, r5
   2b7b0:	add	ip, ip, r3
   2b7b4:	add	r3, r3, r4
   2b7b8:	str	ip, [r1, #36]	; 0x24
   2b7bc:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2b7c0:	mov	r0, r4
   2b7c4:	add	sp, sp, #8
   2b7c8:	ldrd	r4, [sp]
   2b7cc:	ldr	r6, [sp, #8]
   2b7d0:	add	sp, sp, #12
   2b7d4:	pop	{pc}		; (ldr pc, [sp], #4)

0002b7d8 <myhtml_tokenizer_end_state_rawtext_less_than_sign@@Base>:
   2b7d8:	strd	r4, [sp, #-16]!
   2b7dc:	mov	r4, r3
   2b7e0:	mov	r3, #32
   2b7e4:	ldr	ip, [r0, #192]	; 0xc0
   2b7e8:	str	r6, [sp, #8]
   2b7ec:	str	lr, [sp, #12]
   2b7f0:	sub	sp, sp, #8
   2b7f4:	ldr	r6, [r1, #32]
   2b7f8:	str	r3, [sp]
   2b7fc:	ldr	r5, [sp, #24]
   2b800:	add	r3, r4, ip
   2b804:	sub	ip, ip, r6
   2b808:	add	ip, ip, r5
   2b80c:	str	ip, [r1, #36]	; 0x24
   2b810:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2b814:	mov	r0, r4
   2b818:	add	sp, sp, #8
   2b81c:	ldrd	r4, [sp]
   2b820:	ldr	r6, [sp, #8]
   2b824:	add	sp, sp, #12
   2b828:	pop	{pc}		; (ldr pc, [sp], #4)

0002b82c <myhtml_tokenizer_end_state_rawtext_end_tag_open@@Base>:
   2b82c:	strd	r4, [sp, #-16]!
   2b830:	mov	r4, r3
   2b834:	mov	r3, #32
   2b838:	ldr	ip, [r0, #192]	; 0xc0
   2b83c:	str	r6, [sp, #8]
   2b840:	str	lr, [sp, #12]
   2b844:	sub	sp, sp, #8
   2b848:	ldr	r6, [r1, #32]
   2b84c:	str	r3, [sp]
   2b850:	ldr	r5, [sp, #24]
   2b854:	add	r3, r4, ip
   2b858:	sub	ip, ip, r6
   2b85c:	add	ip, ip, r5
   2b860:	str	ip, [r1, #36]	; 0x24
   2b864:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2b868:	mov	r0, r4
   2b86c:	add	sp, sp, #8
   2b870:	ldrd	r4, [sp]
   2b874:	ldr	r6, [sp, #8]
   2b878:	add	sp, sp, #12
   2b87c:	pop	{pc}		; (ldr pc, [sp], #4)

0002b880 <myhtml_tokenizer_end_state_rawtext_end_tag_name@@Base>:
   2b880:	strd	r4, [sp, #-16]!
   2b884:	mov	r4, r3
   2b888:	mov	r3, #32
   2b88c:	ldr	ip, [r0, #192]	; 0xc0
   2b890:	str	r6, [sp, #8]
   2b894:	str	lr, [sp, #12]
   2b898:	sub	sp, sp, #8
   2b89c:	ldr	r6, [r1, #32]
   2b8a0:	str	r3, [sp]
   2b8a4:	ldr	r5, [sp, #24]
   2b8a8:	add	r3, r4, ip
   2b8ac:	sub	ip, ip, r6
   2b8b0:	add	ip, ip, r5
   2b8b4:	str	ip, [r1, #36]	; 0x24
   2b8b8:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2b8bc:	mov	r0, r4
   2b8c0:	add	sp, sp, #8
   2b8c4:	ldrd	r4, [sp]
   2b8c8:	ldr	r6, [sp, #8]
   2b8cc:	add	sp, sp, #12
   2b8d0:	pop	{pc}		; (ldr pc, [sp], #4)

0002b8d4 <myhtml_tokenizer_end_state_plaintext@@Base>:
   2b8d4:	ldr	ip, [r1, #32]
   2b8d8:	ldr	r2, [r0, #192]	; 0xc0
   2b8dc:	mov	r0, r3
   2b8e0:	ldr	r3, [sp]
   2b8e4:	sub	r2, r2, ip
   2b8e8:	add	r2, r2, r3
   2b8ec:	str	r2, [r1, #36]	; 0x24
   2b8f0:	bx	lr

0002b8f4 <myhtml_tokenizer_end_state_doctype@@Base>:
   2b8f4:	strd	r4, [sp, #-16]!
   2b8f8:	mov	r4, r3
   2b8fc:	mov	r3, #32
   2b900:	ldr	ip, [r0, #192]	; 0xc0
   2b904:	str	r6, [sp, #8]
   2b908:	str	lr, [sp, #12]
   2b90c:	sub	sp, sp, #8
   2b910:	ldr	r6, [r1, #32]
   2b914:	str	r3, [sp]
   2b918:	ldr	r5, [sp, #24]
   2b91c:	add	r3, r4, ip
   2b920:	sub	ip, ip, r6
   2b924:	add	ip, ip, r5
   2b928:	str	ip, [r1, #36]	; 0x24
   2b92c:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2b930:	mov	r0, r4
   2b934:	add	sp, sp, #8
   2b938:	ldrd	r4, [sp]
   2b93c:	ldr	r6, [sp, #8]
   2b940:	add	sp, sp, #12
   2b944:	pop	{pc}		; (ldr pc, [sp], #4)

0002b948 <myhtml_tokenizer_end_state_before_doctype_name@@Base>:
   2b948:	strd	r4, [sp, #-16]!
   2b94c:	mov	r2, r1
   2b950:	mov	r4, r3
   2b954:	ldr	ip, [r0, #192]	; 0xc0
   2b958:	mov	r3, #1
   2b95c:	mov	r5, r0
   2b960:	str	r6, [sp, #8]
   2b964:	str	lr, [sp, #12]
   2b968:	mov	lr, r1
   2b96c:	ldr	r1, [sp, #16]
   2b970:	ldr	r6, [lr, #32]
   2b974:	sub	r1, r1, r6
   2b978:	add	ip, r1, ip
   2b97c:	mov	r1, r4
   2b980:	str	ip, [lr, #36]	; 0x24
   2b984:	str	r3, [r0, #176]	; 0xb0
   2b988:	bl	ffc8 <myhtml_queue_add@plt>
   2b98c:	cmp	r0, #0
   2b990:	beq	2b9a0 <myhtml_tokenizer_end_state_before_doctype_name@@Base+0x58>
   2b994:	mov	r3, #69	; 0x45
   2b998:	mov	r4, #0
   2b99c:	str	r3, [r5, #160]	; 0xa0
   2b9a0:	mov	r0, r4
   2b9a4:	ldrd	r4, [sp]
   2b9a8:	ldr	r6, [sp, #8]
   2b9ac:	add	sp, sp, #12
   2b9b0:	pop	{pc}		; (ldr pc, [sp], #4)

0002b9b4 <myhtml_tokenizer_end_state_doctype_name@@Base>:
   2b9b4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2b9b8:	mov	r4, r3
   2b9bc:	mov	r2, r1
   2b9c0:	ldr	r3, [r0, #56]	; 0x38
   2b9c4:	mov	r5, r0
   2b9c8:	ldr	ip, [r0, #192]	; 0xc0
   2b9cc:	strd	r6, [sp, #8]
   2b9d0:	str	lr, [sp, #20]
   2b9d4:	ldr	lr, [r1, #32]
   2b9d8:	mov	r1, r4
   2b9dc:	str	r8, [sp, #16]
   2b9e0:	ldr	r8, [sp, #24]
   2b9e4:	ldr	r7, [r3, #48]	; 0x30
   2b9e8:	sub	lr, ip, lr
   2b9ec:	add	ip, r4, ip
   2b9f0:	add	lr, lr, r8
   2b9f4:	sub	ip, ip, r7
   2b9f8:	str	lr, [r2, #36]	; 0x24
   2b9fc:	str	ip, [r3, #52]	; 0x34
   2ba00:	bl	ffc8 <myhtml_queue_add@plt>
   2ba04:	cmp	r0, #0
   2ba08:	beq	2ba18 <myhtml_tokenizer_end_state_doctype_name@@Base+0x64>
   2ba0c:	mov	r3, #69	; 0x45
   2ba10:	mov	r4, #0
   2ba14:	str	r3, [r5, #160]	; 0xa0
   2ba18:	mov	r0, r4
   2ba1c:	ldrd	r4, [sp]
   2ba20:	ldrd	r6, [sp, #8]
   2ba24:	ldr	r8, [sp, #16]
   2ba28:	add	sp, sp, #20
   2ba2c:	pop	{pc}		; (ldr pc, [sp], #4)

0002ba30 <myhtml_tokenizer_end_state_after_doctype_name@@Base>:
   2ba30:	strd	r4, [sp, #-16]!
   2ba34:	mov	r4, r3
   2ba38:	mov	r2, r1
   2ba3c:	ldr	r3, [r1, #32]
   2ba40:	mov	r1, r4
   2ba44:	mov	r5, r0
   2ba48:	ldr	ip, [r0, #192]	; 0xc0
   2ba4c:	str	r6, [sp, #8]
   2ba50:	ldr	r6, [sp, #16]
   2ba54:	str	lr, [sp, #12]
   2ba58:	sub	ip, ip, r3
   2ba5c:	add	ip, ip, r6
   2ba60:	str	ip, [r2, #36]	; 0x24
   2ba64:	bl	ffc8 <myhtml_queue_add@plt>
   2ba68:	cmp	r0, #0
   2ba6c:	beq	2ba7c <myhtml_tokenizer_end_state_after_doctype_name@@Base+0x4c>
   2ba70:	mov	r3, #69	; 0x45
   2ba74:	mov	r4, #0
   2ba78:	str	r3, [r5, #160]	; 0xa0
   2ba7c:	mov	r0, r4
   2ba80:	ldrd	r4, [sp]
   2ba84:	ldr	r6, [sp, #8]
   2ba88:	add	sp, sp, #12
   2ba8c:	pop	{pc}		; (ldr pc, [sp], #4)

0002ba90 <myhtml_tokenizer_end_state_custom_after_doctype_name_a_z@@Base>:
   2ba90:	strd	r4, [sp, #-16]!
   2ba94:	mov	r4, r3
   2ba98:	mov	r2, r1
   2ba9c:	ldr	r3, [r1, #32]
   2baa0:	mov	r1, r4
   2baa4:	mov	r5, r0
   2baa8:	ldr	ip, [r0, #192]	; 0xc0
   2baac:	str	r6, [sp, #8]
   2bab0:	ldr	r6, [sp, #16]
   2bab4:	str	lr, [sp, #12]
   2bab8:	sub	ip, ip, r3
   2babc:	add	ip, ip, r6
   2bac0:	str	ip, [r2, #36]	; 0x24
   2bac4:	bl	ffc8 <myhtml_queue_add@plt>
   2bac8:	cmp	r0, #0
   2bacc:	beq	2badc <myhtml_tokenizer_end_state_custom_after_doctype_name_a_z@@Base+0x4c>
   2bad0:	mov	r3, #69	; 0x45
   2bad4:	mov	r4, #0
   2bad8:	str	r3, [r5, #160]	; 0xa0
   2badc:	mov	r0, r4
   2bae0:	ldrd	r4, [sp]
   2bae4:	ldr	r6, [sp, #8]
   2bae8:	add	sp, sp, #12
   2baec:	pop	{pc}		; (ldr pc, [sp], #4)

0002baf0 <myhtml_tokenizer_end_state_before_doctype_public_identifier@@Base>:
   2baf0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2baf4:	mov	r2, r1
   2baf8:	mov	r4, r3
   2bafc:	ldr	ip, [r0, #192]	; 0xc0
   2bb00:	mov	r3, #1
   2bb04:	mov	r5, r0
   2bb08:	strd	r6, [sp, #8]
   2bb0c:	ldr	r7, [r1, #32]
   2bb10:	mov	r1, r4
   2bb14:	str	r8, [sp, #16]
   2bb18:	ldr	r6, [sp, #24]
   2bb1c:	str	lr, [sp, #20]
   2bb20:	sub	ip, ip, r7
   2bb24:	add	ip, ip, r6
   2bb28:	str	ip, [r2, #36]	; 0x24
   2bb2c:	str	r3, [r0, #176]	; 0xb0
   2bb30:	bl	ffc8 <myhtml_queue_add@plt>
   2bb34:	cmp	r0, #0
   2bb38:	beq	2bb48 <myhtml_tokenizer_end_state_before_doctype_public_identifier@@Base+0x58>
   2bb3c:	mov	r3, #69	; 0x45
   2bb40:	mov	r4, #0
   2bb44:	str	r3, [r5, #160]	; 0xa0
   2bb48:	mov	r0, r4
   2bb4c:	ldrd	r4, [sp]
   2bb50:	ldrd	r6, [sp, #8]
   2bb54:	ldr	r8, [sp, #16]
   2bb58:	add	sp, sp, #20
   2bb5c:	pop	{pc}		; (ldr pc, [sp], #4)

0002bb60 <myhtml_tokenizer_end_state_doctype_public_identifier_double_quoted@@Base>:
   2bb60:	ldr	ip, [r0, #56]	; 0x38
   2bb64:	mov	r2, r1
   2bb68:	strd	r4, [sp, #-16]!
   2bb6c:	mov	r4, r0
   2bb70:	mov	r5, r3
   2bb74:	ldr	r0, [r1, #32]
   2bb78:	ldr	r1, [sp, #16]
   2bb7c:	ldr	r3, [r4, #192]	; 0xc0
   2bb80:	str	r6, [sp, #8]
   2bb84:	mov	r6, #1
   2bb88:	str	lr, [sp, #12]
   2bb8c:	ldr	lr, [ip, #48]	; 0x30
   2bb90:	sub	r0, r1, r0
   2bb94:	add	r0, r0, r3
   2bb98:	str	r0, [r2, #36]	; 0x24
   2bb9c:	cmp	lr, #0
   2bba0:	cmpne	r1, #0
   2bba4:	str	r6, [r4, #176]	; 0xb0
   2bba8:	bne	2bbe0 <myhtml_tokenizer_end_state_doctype_public_identifier_double_quoted@@Base+0x80>
   2bbac:	mov	r1, r5
   2bbb0:	mov	r0, r4
   2bbb4:	bl	ffc8 <myhtml_queue_add@plt>
   2bbb8:	cmp	r0, #0
   2bbbc:	beq	2bbcc <myhtml_tokenizer_end_state_doctype_public_identifier_double_quoted@@Base+0x6c>
   2bbc0:	mov	r3, #69	; 0x45
   2bbc4:	mov	r5, #0
   2bbc8:	str	r3, [r4, #160]	; 0xa0
   2bbcc:	mov	r0, r5
   2bbd0:	ldrd	r4, [sp]
   2bbd4:	ldr	r6, [sp, #8]
   2bbd8:	add	sp, sp, #12
   2bbdc:	pop	{pc}		; (ldr pc, [sp], #4)
   2bbe0:	add	r3, r3, r5
   2bbe4:	sub	r3, r3, lr
   2bbe8:	str	r3, [ip, #52]	; 0x34
   2bbec:	b	2bbac <myhtml_tokenizer_end_state_doctype_public_identifier_double_quoted@@Base+0x4c>

0002bbf0 <myhtml_tokenizer_end_state_doctype_public_identifier_single_quoted@@Base>:
   2bbf0:	strd	r4, [sp, #-12]!
   2bbf4:	mov	r4, r3
   2bbf8:	ldr	r3, [r0, #192]	; 0xc0
   2bbfc:	str	lr, [sp, #8]
   2bc00:	sub	sp, sp, #12
   2bc04:	ldr	ip, [sp, #24]
   2bc08:	ldr	r5, [r1, #32]
   2bc0c:	str	ip, [sp]
   2bc10:	sub	ip, ip, r5
   2bc14:	add	ip, ip, r3
   2bc18:	add	r3, r3, r4
   2bc1c:	str	ip, [r1, #36]	; 0x24
   2bc20:	bl	10bbc <myhtml_tokenizer_end_state_doctype_public_identifier_double_quoted@plt>
   2bc24:	mov	r0, r4
   2bc28:	add	sp, sp, #12
   2bc2c:	ldrd	r4, [sp]
   2bc30:	add	sp, sp, #8
   2bc34:	pop	{pc}		; (ldr pc, [sp], #4)

0002bc38 <myhtml_tokenizer_end_state_after_doctype_public_identifier@@Base>:
   2bc38:	strd	r4, [sp, #-16]!
   2bc3c:	mov	r4, r3
   2bc40:	mov	r2, r1
   2bc44:	ldr	r3, [r1, #32]
   2bc48:	mov	r1, r4
   2bc4c:	mov	r5, r0
   2bc50:	ldr	ip, [r0, #192]	; 0xc0
   2bc54:	str	r6, [sp, #8]
   2bc58:	ldr	r6, [sp, #16]
   2bc5c:	str	lr, [sp, #12]
   2bc60:	sub	ip, ip, r3
   2bc64:	add	ip, ip, r6
   2bc68:	str	ip, [r2, #36]	; 0x24
   2bc6c:	bl	ffc8 <myhtml_queue_add@plt>
   2bc70:	cmp	r0, #0
   2bc74:	beq	2bc84 <myhtml_tokenizer_end_state_after_doctype_public_identifier@@Base+0x4c>
   2bc78:	mov	r3, #69	; 0x45
   2bc7c:	mov	r4, #0
   2bc80:	str	r3, [r5, #160]	; 0xa0
   2bc84:	mov	r0, r4
   2bc88:	ldrd	r4, [sp]
   2bc8c:	ldr	r6, [sp, #8]
   2bc90:	add	sp, sp, #12
   2bc94:	pop	{pc}		; (ldr pc, [sp], #4)

0002bc98 <myhtml_tokenizer_end_state_doctype_system_identifier_double_quoted@@Base>:
   2bc98:	ldr	ip, [r0, #56]	; 0x38
   2bc9c:	mov	r2, r1
   2bca0:	strd	r4, [sp, #-16]!
   2bca4:	mov	r4, r0
   2bca8:	mov	r5, r3
   2bcac:	ldr	r0, [r1, #32]
   2bcb0:	ldr	r3, [r4, #192]	; 0xc0
   2bcb4:	str	r6, [sp, #8]
   2bcb8:	mov	r6, #1
   2bcbc:	ldr	r1, [sp, #16]
   2bcc0:	str	lr, [sp, #12]
   2bcc4:	ldr	lr, [ip, #48]	; 0x30
   2bcc8:	sub	r0, r3, r0
   2bccc:	add	r0, r0, r1
   2bcd0:	cmp	lr, #0
   2bcd4:	cmpne	r1, #0
   2bcd8:	str	r0, [r2, #36]	; 0x24
   2bcdc:	str	r6, [r4, #176]	; 0xb0
   2bce0:	bne	2bd18 <myhtml_tokenizer_end_state_doctype_system_identifier_double_quoted@@Base+0x80>
   2bce4:	mov	r1, r5
   2bce8:	mov	r0, r4
   2bcec:	bl	ffc8 <myhtml_queue_add@plt>
   2bcf0:	cmp	r0, #0
   2bcf4:	beq	2bd04 <myhtml_tokenizer_end_state_doctype_system_identifier_double_quoted@@Base+0x6c>
   2bcf8:	mov	r3, #69	; 0x45
   2bcfc:	mov	r5, #0
   2bd00:	str	r3, [r4, #160]	; 0xa0
   2bd04:	mov	r0, r5
   2bd08:	ldrd	r4, [sp]
   2bd0c:	ldr	r6, [sp, #8]
   2bd10:	add	sp, sp, #12
   2bd14:	pop	{pc}		; (ldr pc, [sp], #4)
   2bd18:	add	r3, r5, r3
   2bd1c:	sub	r3, r3, lr
   2bd20:	str	r3, [ip, #52]	; 0x34
   2bd24:	b	2bce4 <myhtml_tokenizer_end_state_doctype_system_identifier_double_quoted@@Base+0x4c>

0002bd28 <myhtml_tokenizer_end_state_doctype_system_identifier_single_quoted@@Base>:
   2bd28:	strd	r4, [sp, #-12]!
   2bd2c:	mov	r4, r3
   2bd30:	ldr	r3, [r0, #192]	; 0xc0
   2bd34:	str	lr, [sp, #8]
   2bd38:	sub	sp, sp, #12
   2bd3c:	ldr	ip, [sp, #24]
   2bd40:	ldr	r5, [r1, #32]
   2bd44:	str	ip, [sp]
   2bd48:	sub	ip, ip, r5
   2bd4c:	add	ip, ip, r3
   2bd50:	add	r3, r3, r4
   2bd54:	str	ip, [r1, #36]	; 0x24
   2bd58:	bl	10d9c <myhtml_tokenizer_end_state_doctype_system_identifier_double_quoted@plt>
   2bd5c:	mov	r0, r4
   2bd60:	add	sp, sp, #12
   2bd64:	ldrd	r4, [sp]
   2bd68:	add	sp, sp, #8
   2bd6c:	pop	{pc}		; (ldr pc, [sp], #4)

0002bd70 <myhtml_tokenizer_end_state_after_doctype_system_identifier@@Base>:
   2bd70:	strd	r4, [sp, #-16]!
   2bd74:	mov	r4, r3
   2bd78:	mov	r2, r1
   2bd7c:	ldr	r3, [r1, #32]
   2bd80:	mov	r1, r4
   2bd84:	mov	r5, r0
   2bd88:	ldr	ip, [r0, #192]	; 0xc0
   2bd8c:	str	r6, [sp, #8]
   2bd90:	ldr	r6, [sp, #16]
   2bd94:	str	lr, [sp, #12]
   2bd98:	sub	ip, ip, r3
   2bd9c:	add	ip, ip, r6
   2bda0:	str	ip, [r2, #36]	; 0x24
   2bda4:	bl	ffc8 <myhtml_queue_add@plt>
   2bda8:	cmp	r0, #0
   2bdac:	beq	2bdbc <myhtml_tokenizer_end_state_after_doctype_system_identifier@@Base+0x4c>
   2bdb0:	mov	r3, #69	; 0x45
   2bdb4:	mov	r4, #0
   2bdb8:	str	r3, [r5, #160]	; 0xa0
   2bdbc:	mov	r0, r4
   2bdc0:	ldrd	r4, [sp]
   2bdc4:	ldr	r6, [sp, #8]
   2bdc8:	add	sp, sp, #12
   2bdcc:	pop	{pc}		; (ldr pc, [sp], #4)

0002bdd0 <myhtml_tokenizer_end_state_bogus_doctype@@Base>:
   2bdd0:	strd	r4, [sp, #-16]!
   2bdd4:	mov	r4, r3
   2bdd8:	mov	r2, r1
   2bddc:	ldr	r3, [r1, #32]
   2bde0:	mov	r1, r4
   2bde4:	mov	r5, r0
   2bde8:	ldr	ip, [r0, #192]	; 0xc0
   2bdec:	str	r6, [sp, #8]
   2bdf0:	ldr	r6, [sp, #16]
   2bdf4:	str	lr, [sp, #12]
   2bdf8:	sub	ip, ip, r3
   2bdfc:	add	ip, ip, r6
   2be00:	str	ip, [r2, #36]	; 0x24
   2be04:	bl	ffc8 <myhtml_queue_add@plt>
   2be08:	cmp	r0, #0
   2be0c:	beq	2be1c <myhtml_tokenizer_end_state_bogus_doctype@@Base+0x4c>
   2be10:	mov	r3, #69	; 0x45
   2be14:	mov	r4, #0
   2be18:	str	r3, [r5, #160]	; 0xa0
   2be1c:	mov	r0, r4
   2be20:	ldrd	r4, [sp]
   2be24:	ldr	r6, [sp, #8]
   2be28:	add	sp, sp, #12
   2be2c:	pop	{pc}		; (ldr pc, [sp], #4)

0002be30 <myhtml_tokenizer_end_state_script_data@@Base>:
   2be30:	strd	r4, [sp, #-16]!
   2be34:	mov	r4, r3
   2be38:	ldr	r3, [r0, #192]	; 0xc0
   2be3c:	str	r6, [sp, #8]
   2be40:	mov	r6, #64	; 0x40
   2be44:	str	lr, [sp, #12]
   2be48:	sub	sp, sp, #8
   2be4c:	ldr	ip, [sp, #24]
   2be50:	str	r6, [sp]
   2be54:	ldr	r5, [r1, #32]
   2be58:	sub	ip, ip, r5
   2be5c:	add	ip, ip, r3
   2be60:	add	r3, r3, r4
   2be64:	str	ip, [r1, #36]	; 0x24
   2be68:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2be6c:	mov	r0, r4
   2be70:	add	sp, sp, #8
   2be74:	ldrd	r4, [sp]
   2be78:	ldr	r6, [sp, #8]
   2be7c:	add	sp, sp, #12
   2be80:	pop	{pc}		; (ldr pc, [sp], #4)

0002be84 <myhtml_tokenizer_end_state_script_data_less_than_sign@@Base>:
   2be84:	strd	r4, [sp, #-16]!
   2be88:	mov	r4, r3
   2be8c:	mov	r3, #64	; 0x40
   2be90:	ldr	ip, [r0, #192]	; 0xc0
   2be94:	str	r6, [sp, #8]
   2be98:	str	lr, [sp, #12]
   2be9c:	sub	sp, sp, #8
   2bea0:	ldr	r6, [r1, #32]
   2bea4:	str	r3, [sp]
   2bea8:	ldr	r5, [sp, #24]
   2beac:	add	r3, r4, ip
   2beb0:	sub	ip, ip, r6
   2beb4:	add	ip, ip, r5
   2beb8:	str	ip, [r1, #36]	; 0x24
   2bebc:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2bec0:	mov	r0, r4
   2bec4:	add	sp, sp, #8
   2bec8:	ldrd	r4, [sp]
   2becc:	ldr	r6, [sp, #8]
   2bed0:	add	sp, sp, #12
   2bed4:	pop	{pc}		; (ldr pc, [sp], #4)

0002bed8 <myhtml_tokenizer_end_state_script_data_end_tag_open@@Base>:
   2bed8:	strd	r4, [sp, #-16]!
   2bedc:	mov	r4, r3
   2bee0:	mov	r3, #64	; 0x40
   2bee4:	ldr	ip, [r0, #192]	; 0xc0
   2bee8:	str	r6, [sp, #8]
   2beec:	str	lr, [sp, #12]
   2bef0:	sub	sp, sp, #8
   2bef4:	ldr	r6, [r1, #32]
   2bef8:	str	r3, [sp]
   2befc:	ldr	r5, [sp, #24]
   2bf00:	add	r3, r4, ip
   2bf04:	sub	ip, ip, r6
   2bf08:	add	ip, ip, r5
   2bf0c:	str	ip, [r1, #36]	; 0x24
   2bf10:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2bf14:	mov	r0, r4
   2bf18:	add	sp, sp, #8
   2bf1c:	ldrd	r4, [sp]
   2bf20:	ldr	r6, [sp, #8]
   2bf24:	add	sp, sp, #12
   2bf28:	pop	{pc}		; (ldr pc, [sp], #4)

0002bf2c <myhtml_tokenizer_end_state_script_data_end_tag_name@@Base>:
   2bf2c:	strd	r4, [sp, #-16]!
   2bf30:	mov	r4, r3
   2bf34:	mov	r3, #64	; 0x40
   2bf38:	ldr	ip, [r0, #192]	; 0xc0
   2bf3c:	str	r6, [sp, #8]
   2bf40:	str	lr, [sp, #12]
   2bf44:	sub	sp, sp, #8
   2bf48:	ldr	r6, [r1, #32]
   2bf4c:	str	r3, [sp]
   2bf50:	ldr	r5, [sp, #24]
   2bf54:	add	r3, r4, ip
   2bf58:	sub	ip, ip, r6
   2bf5c:	add	ip, ip, r5
   2bf60:	str	ip, [r1, #36]	; 0x24
   2bf64:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2bf68:	mov	r0, r4
   2bf6c:	add	sp, sp, #8
   2bf70:	ldrd	r4, [sp]
   2bf74:	ldr	r6, [sp, #8]
   2bf78:	add	sp, sp, #12
   2bf7c:	pop	{pc}		; (ldr pc, [sp], #4)

0002bf80 <myhtml_tokenizer_end_state_script_data_escape_start@@Base>:
   2bf80:	strd	r4, [sp, #-16]!
   2bf84:	mov	r4, r3
   2bf88:	mov	r3, #64	; 0x40
   2bf8c:	ldr	ip, [r0, #192]	; 0xc0
   2bf90:	str	r6, [sp, #8]
   2bf94:	str	lr, [sp, #12]
   2bf98:	sub	sp, sp, #8
   2bf9c:	ldr	r6, [r1, #32]
   2bfa0:	str	r3, [sp]
   2bfa4:	ldr	r5, [sp, #24]
   2bfa8:	add	r3, r4, ip
   2bfac:	sub	ip, ip, r6
   2bfb0:	add	ip, ip, r5
   2bfb4:	str	ip, [r1, #36]	; 0x24
   2bfb8:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2bfbc:	mov	r0, r4
   2bfc0:	add	sp, sp, #8
   2bfc4:	ldrd	r4, [sp]
   2bfc8:	ldr	r6, [sp, #8]
   2bfcc:	add	sp, sp, #12
   2bfd0:	pop	{pc}		; (ldr pc, [sp], #4)

0002bfd4 <myhtml_tokenizer_end_state_script_data_escape_start_dash@@Base>:
   2bfd4:	strd	r4, [sp, #-16]!
   2bfd8:	mov	r4, r3
   2bfdc:	mov	r3, #64	; 0x40
   2bfe0:	ldr	ip, [r0, #192]	; 0xc0
   2bfe4:	str	r6, [sp, #8]
   2bfe8:	str	lr, [sp, #12]
   2bfec:	sub	sp, sp, #8
   2bff0:	ldr	r6, [r1, #32]
   2bff4:	str	r3, [sp]
   2bff8:	ldr	r5, [sp, #24]
   2bffc:	add	r3, r4, ip
   2c000:	sub	ip, ip, r6
   2c004:	add	ip, ip, r5
   2c008:	str	ip, [r1, #36]	; 0x24
   2c00c:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2c010:	mov	r0, r4
   2c014:	add	sp, sp, #8
   2c018:	ldrd	r4, [sp]
   2c01c:	ldr	r6, [sp, #8]
   2c020:	add	sp, sp, #12
   2c024:	pop	{pc}		; (ldr pc, [sp], #4)

0002c028 <myhtml_tokenizer_end_state_script_data_escaped@@Base>:
   2c028:	strd	r4, [sp, #-16]!
   2c02c:	mov	r4, r3
   2c030:	mov	r3, #64	; 0x40
   2c034:	ldr	ip, [r0, #192]	; 0xc0
   2c038:	str	r6, [sp, #8]
   2c03c:	str	lr, [sp, #12]
   2c040:	sub	sp, sp, #8
   2c044:	ldr	r6, [r1, #32]
   2c048:	str	r3, [sp]
   2c04c:	ldr	r5, [sp, #24]
   2c050:	add	r3, r4, ip
   2c054:	sub	ip, ip, r6
   2c058:	add	ip, ip, r5
   2c05c:	str	ip, [r1, #36]	; 0x24
   2c060:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2c064:	mov	r0, r4
   2c068:	add	sp, sp, #8
   2c06c:	ldrd	r4, [sp]
   2c070:	ldr	r6, [sp, #8]
   2c074:	add	sp, sp, #12
   2c078:	pop	{pc}		; (ldr pc, [sp], #4)

0002c07c <myhtml_tokenizer_end_state_script_data_escaped_dash@@Base>:
   2c07c:	strd	r4, [sp, #-16]!
   2c080:	mov	r4, r3
   2c084:	mov	r3, #64	; 0x40
   2c088:	ldr	ip, [r0, #192]	; 0xc0
   2c08c:	str	r6, [sp, #8]
   2c090:	str	lr, [sp, #12]
   2c094:	sub	sp, sp, #8
   2c098:	ldr	r6, [r1, #32]
   2c09c:	str	r3, [sp]
   2c0a0:	ldr	r5, [sp, #24]
   2c0a4:	add	r3, r4, ip
   2c0a8:	sub	ip, ip, r6
   2c0ac:	add	ip, ip, r5
   2c0b0:	str	ip, [r1, #36]	; 0x24
   2c0b4:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2c0b8:	mov	r0, r4
   2c0bc:	add	sp, sp, #8
   2c0c0:	ldrd	r4, [sp]
   2c0c4:	ldr	r6, [sp, #8]
   2c0c8:	add	sp, sp, #12
   2c0cc:	pop	{pc}		; (ldr pc, [sp], #4)

0002c0d0 <myhtml_tokenizer_end_state_script_data_escaped_dash_dash@@Base>:
   2c0d0:	strd	r4, [sp, #-16]!
   2c0d4:	mov	r4, r3
   2c0d8:	mov	r3, #64	; 0x40
   2c0dc:	ldr	ip, [r0, #192]	; 0xc0
   2c0e0:	str	r6, [sp, #8]
   2c0e4:	str	lr, [sp, #12]
   2c0e8:	sub	sp, sp, #8
   2c0ec:	ldr	r6, [r1, #32]
   2c0f0:	str	r3, [sp]
   2c0f4:	ldr	r5, [sp, #24]
   2c0f8:	add	r3, r4, ip
   2c0fc:	sub	ip, ip, r6
   2c100:	add	ip, ip, r5
   2c104:	str	ip, [r1, #36]	; 0x24
   2c108:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2c10c:	mov	r0, r4
   2c110:	add	sp, sp, #8
   2c114:	ldrd	r4, [sp]
   2c118:	ldr	r6, [sp, #8]
   2c11c:	add	sp, sp, #12
   2c120:	pop	{pc}		; (ldr pc, [sp], #4)

0002c124 <myhtml_tokenizer_end_state_script_data_escaped_less_than_sign@@Base>:
   2c124:	strd	r4, [sp, #-16]!
   2c128:	mov	r4, r3
   2c12c:	mov	r3, #64	; 0x40
   2c130:	ldr	ip, [r0, #192]	; 0xc0
   2c134:	str	r6, [sp, #8]
   2c138:	str	lr, [sp, #12]
   2c13c:	sub	sp, sp, #8
   2c140:	ldr	r6, [r1, #32]
   2c144:	str	r3, [sp]
   2c148:	ldr	r5, [sp, #24]
   2c14c:	add	r3, r4, ip
   2c150:	sub	ip, ip, r6
   2c154:	add	ip, ip, r5
   2c158:	str	ip, [r1, #36]	; 0x24
   2c15c:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2c160:	mov	r0, r4
   2c164:	add	sp, sp, #8
   2c168:	ldrd	r4, [sp]
   2c16c:	ldr	r6, [sp, #8]
   2c170:	add	sp, sp, #12
   2c174:	pop	{pc}		; (ldr pc, [sp], #4)

0002c178 <myhtml_tokenizer_end_state_script_data_escaped_end_tag_open@@Base>:
   2c178:	strd	r4, [sp, #-16]!
   2c17c:	mov	r4, r3
   2c180:	mov	r3, #64	; 0x40
   2c184:	ldr	ip, [r0, #192]	; 0xc0
   2c188:	str	r6, [sp, #8]
   2c18c:	str	lr, [sp, #12]
   2c190:	sub	sp, sp, #8
   2c194:	ldr	r6, [r1, #32]
   2c198:	str	r3, [sp]
   2c19c:	ldr	r5, [sp, #24]
   2c1a0:	add	r3, r4, ip
   2c1a4:	sub	ip, ip, r6
   2c1a8:	add	ip, ip, r5
   2c1ac:	str	ip, [r1, #36]	; 0x24
   2c1b0:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2c1b4:	mov	r0, r4
   2c1b8:	add	sp, sp, #8
   2c1bc:	ldrd	r4, [sp]
   2c1c0:	ldr	r6, [sp, #8]
   2c1c4:	add	sp, sp, #12
   2c1c8:	pop	{pc}		; (ldr pc, [sp], #4)

0002c1cc <myhtml_tokenizer_end_state_script_data_escaped_end_tag_name@@Base>:
   2c1cc:	strd	r4, [sp, #-16]!
   2c1d0:	mov	r4, r3
   2c1d4:	mov	r3, #64	; 0x40
   2c1d8:	ldr	ip, [r0, #192]	; 0xc0
   2c1dc:	str	r6, [sp, #8]
   2c1e0:	str	lr, [sp, #12]
   2c1e4:	sub	sp, sp, #8
   2c1e8:	ldr	r6, [r1, #32]
   2c1ec:	str	r3, [sp]
   2c1f0:	ldr	r5, [sp, #24]
   2c1f4:	add	r3, r4, ip
   2c1f8:	sub	ip, ip, r6
   2c1fc:	add	ip, ip, r5
   2c200:	str	ip, [r1, #36]	; 0x24
   2c204:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2c208:	mov	r0, r4
   2c20c:	add	sp, sp, #8
   2c210:	ldrd	r4, [sp]
   2c214:	ldr	r6, [sp, #8]
   2c218:	add	sp, sp, #12
   2c21c:	pop	{pc}		; (ldr pc, [sp], #4)

0002c220 <myhtml_tokenizer_end_state_script_data_double_escape_start@@Base>:
   2c220:	strd	r4, [sp, #-16]!
   2c224:	mov	r4, r3
   2c228:	mov	r3, #64	; 0x40
   2c22c:	ldr	ip, [r0, #192]	; 0xc0
   2c230:	str	r6, [sp, #8]
   2c234:	str	lr, [sp, #12]
   2c238:	sub	sp, sp, #8
   2c23c:	ldr	r6, [r1, #32]
   2c240:	str	r3, [sp]
   2c244:	ldr	r5, [sp, #24]
   2c248:	add	r3, r4, ip
   2c24c:	sub	ip, ip, r6
   2c250:	add	ip, ip, r5
   2c254:	str	ip, [r1, #36]	; 0x24
   2c258:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2c25c:	mov	r0, r4
   2c260:	add	sp, sp, #8
   2c264:	ldrd	r4, [sp]
   2c268:	ldr	r6, [sp, #8]
   2c26c:	add	sp, sp, #12
   2c270:	pop	{pc}		; (ldr pc, [sp], #4)

0002c274 <myhtml_tokenizer_end_state_script_data_double_escaped@@Base>:
   2c274:	strd	r4, [sp, #-16]!
   2c278:	mov	r4, r3
   2c27c:	mov	r3, #64	; 0x40
   2c280:	ldr	ip, [r0, #192]	; 0xc0
   2c284:	str	r6, [sp, #8]
   2c288:	str	lr, [sp, #12]
   2c28c:	sub	sp, sp, #8
   2c290:	ldr	r6, [r1, #32]
   2c294:	str	r3, [sp]
   2c298:	ldr	r5, [sp, #24]
   2c29c:	add	r3, r4, ip
   2c2a0:	sub	ip, ip, r6
   2c2a4:	add	ip, ip, r5
   2c2a8:	str	ip, [r1, #36]	; 0x24
   2c2ac:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2c2b0:	mov	r0, r4
   2c2b4:	add	sp, sp, #8
   2c2b8:	ldrd	r4, [sp]
   2c2bc:	ldr	r6, [sp, #8]
   2c2c0:	add	sp, sp, #12
   2c2c4:	pop	{pc}		; (ldr pc, [sp], #4)

0002c2c8 <myhtml_tokenizer_end_state_script_data_double_escaped_dash@@Base>:
   2c2c8:	strd	r4, [sp, #-16]!
   2c2cc:	mov	r4, r3
   2c2d0:	mov	r3, #64	; 0x40
   2c2d4:	ldr	ip, [r0, #192]	; 0xc0
   2c2d8:	str	r6, [sp, #8]
   2c2dc:	str	lr, [sp, #12]
   2c2e0:	sub	sp, sp, #8
   2c2e4:	ldr	r6, [r1, #32]
   2c2e8:	str	r3, [sp]
   2c2ec:	ldr	r5, [sp, #24]
   2c2f0:	add	r3, r4, ip
   2c2f4:	sub	ip, ip, r6
   2c2f8:	add	ip, ip, r5
   2c2fc:	str	ip, [r1, #36]	; 0x24
   2c300:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2c304:	mov	r0, r4
   2c308:	add	sp, sp, #8
   2c30c:	ldrd	r4, [sp]
   2c310:	ldr	r6, [sp, #8]
   2c314:	add	sp, sp, #12
   2c318:	pop	{pc}		; (ldr pc, [sp], #4)

0002c31c <myhtml_tokenizer_end_state_script_data_double_escaped_dash_dash@@Base>:
   2c31c:	strd	r4, [sp, #-16]!
   2c320:	mov	r4, r3
   2c324:	mov	r3, #64	; 0x40
   2c328:	ldr	ip, [r0, #192]	; 0xc0
   2c32c:	str	r6, [sp, #8]
   2c330:	str	lr, [sp, #12]
   2c334:	sub	sp, sp, #8
   2c338:	ldr	r6, [r1, #32]
   2c33c:	str	r3, [sp]
   2c340:	ldr	r5, [sp, #24]
   2c344:	add	r3, r4, ip
   2c348:	sub	ip, ip, r6
   2c34c:	add	ip, ip, r5
   2c350:	str	ip, [r1, #36]	; 0x24
   2c354:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2c358:	mov	r0, r4
   2c35c:	add	sp, sp, #8
   2c360:	ldrd	r4, [sp]
   2c364:	ldr	r6, [sp, #8]
   2c368:	add	sp, sp, #12
   2c36c:	pop	{pc}		; (ldr pc, [sp], #4)

0002c370 <myhtml_tokenizer_end_state_script_data_double_escaped_less_than_sign@@Base>:
   2c370:	strd	r4, [sp, #-16]!
   2c374:	mov	r4, r3
   2c378:	mov	r3, #64	; 0x40
   2c37c:	ldr	ip, [r0, #192]	; 0xc0
   2c380:	str	r6, [sp, #8]
   2c384:	str	lr, [sp, #12]
   2c388:	sub	sp, sp, #8
   2c38c:	ldr	r6, [r1, #32]
   2c390:	str	r3, [sp]
   2c394:	ldr	r5, [sp, #24]
   2c398:	add	r3, r4, ip
   2c39c:	sub	ip, ip, r6
   2c3a0:	add	ip, ip, r5
   2c3a4:	str	ip, [r1, #36]	; 0x24
   2c3a8:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2c3ac:	mov	r0, r4
   2c3b0:	add	sp, sp, #8
   2c3b4:	ldrd	r4, [sp]
   2c3b8:	ldr	r6, [sp, #8]
   2c3bc:	add	sp, sp, #12
   2c3c0:	pop	{pc}		; (ldr pc, [sp], #4)

0002c3c4 <myhtml_tokenizer_end_state_script_data_double_escape_end@@Base>:
   2c3c4:	strd	r4, [sp, #-16]!
   2c3c8:	mov	r4, r3
   2c3cc:	mov	r3, #64	; 0x40
   2c3d0:	ldr	ip, [r0, #192]	; 0xc0
   2c3d4:	str	r6, [sp, #8]
   2c3d8:	str	lr, [sp, #12]
   2c3dc:	sub	sp, sp, #8
   2c3e0:	ldr	r6, [r1, #32]
   2c3e4:	str	r3, [sp]
   2c3e8:	ldr	r5, [sp, #24]
   2c3ec:	add	r3, r4, ip
   2c3f0:	sub	ip, ip, r6
   2c3f4:	add	ip, ip, r5
   2c3f8:	str	ip, [r1, #36]	; 0x24
   2c3fc:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2c400:	mov	r0, r4
   2c404:	add	sp, sp, #8
   2c408:	ldrd	r4, [sp]
   2c40c:	ldr	r6, [sp, #8]
   2c410:	add	sp, sp, #12
   2c414:	pop	{pc}		; (ldr pc, [sp], #4)

0002c418 <myhtml_tokenizer_end_state_parse_error_stop@@Base>:
   2c418:	ldr	r0, [sp]
   2c41c:	bx	lr

0002c420 <myhtml_tokenizer_state_script_data@@Base>:
   2c420:	str	r4, [sp, #-8]!
   2c424:	str	lr, [sp, #4]
   2c428:	ldr	lr, [sp, #8]
   2c42c:	cmp	r3, lr
   2c430:	bcs	2c46c <myhtml_tokenizer_state_script_data@@Base+0x4c>
   2c434:	ldrb	r4, [r2, r3]
   2c438:	add	ip, r2, r3
   2c43c:	cmp	r4, #60	; 0x3c
   2c440:	subne	r4, r2, #1
   2c444:	rsbne	r2, r2, #1
   2c448:	addne	r4, r4, lr
   2c44c:	bne	2c460 <myhtml_tokenizer_state_script_data@@Base+0x40>
   2c450:	b	2c47c <myhtml_tokenizer_state_script_data@@Base+0x5c>
   2c454:	ldrb	lr, [ip, #1]!
   2c458:	cmp	lr, #60	; 0x3c
   2c45c:	beq	2c47c <myhtml_tokenizer_state_script_data@@Base+0x5c>
   2c460:	cmp	ip, r4
   2c464:	add	r3, r2, ip
   2c468:	bne	2c454 <myhtml_tokenizer_state_script_data@@Base+0x34>
   2c46c:	ldr	r4, [sp]
   2c470:	add	sp, sp, #4
   2c474:	mov	r0, r3
   2c478:	pop	{pc}		; (ldr pc, [sp], #4)
   2c47c:	ldr	r2, [r0, #192]	; 0xc0
   2c480:	mov	ip, #16
   2c484:	ldr	r4, [sp]
   2c488:	add	sp, sp, #4
   2c48c:	add	r2, r2, r3
   2c490:	add	r3, r3, #1
   2c494:	str	r2, [r1, #32]
   2c498:	str	ip, [r0, #160]	; 0xa0
   2c49c:	mov	r0, r3
   2c4a0:	pop	{pc}		; (ldr pc, [sp], #4)

0002c4a4 <myhtml_tokenizer_state_script_data_less_than_sign@@Base>:
   2c4a4:	ldrb	r2, [r2, r3]
   2c4a8:	cmp	r2, #47	; 0x2f
   2c4ac:	moveq	r2, #17
   2c4b0:	addeq	r3, r3, #1
   2c4b4:	streq	r2, [r0, #160]	; 0xa0
   2c4b8:	beq	2c4d0 <myhtml_tokenizer_state_script_data_less_than_sign@@Base+0x2c>
   2c4bc:	cmp	r2, #33	; 0x21
   2c4c0:	moveq	r2, #19
   2c4c4:	movne	r2, #5
   2c4c8:	addeq	r3, r3, #1
   2c4cc:	str	r2, [r0, #160]	; 0xa0
   2c4d0:	mov	r0, r3
   2c4d4:	bx	lr

0002c4d8 <myhtml_tokenizer_state_script_data_escape_start@@Base>:
   2c4d8:	ldrb	r2, [r2, r3]
   2c4dc:	mov	r1, r0
   2c4e0:	cmp	r2, #45	; 0x2d
   2c4e4:	moveq	r2, #20
   2c4e8:	movne	r2, #5
   2c4ec:	addeq	r3, r3, #1
   2c4f0:	mov	r0, r3
   2c4f4:	str	r2, [r1, #160]	; 0xa0
   2c4f8:	bx	lr

0002c4fc <myhtml_tokenizer_state_script_data_escape_start_dash@@Base>:
   2c4fc:	ldrb	r2, [r2, r3]
   2c500:	mov	r1, r0
   2c504:	cmp	r2, #45	; 0x2d
   2c508:	moveq	r2, #23
   2c50c:	movne	r2, #5
   2c510:	addeq	r3, r3, #1
   2c514:	mov	r0, r3
   2c518:	str	r2, [r1, #160]	; 0xa0
   2c51c:	bx	lr

0002c520 <myhtml_tokenizer_state_script_data_end_tag_open@@Base>:
   2c520:	ldrb	r2, [r2, r3]
   2c524:	bic	r2, r2, #32
   2c528:	sub	r2, r2, #65	; 0x41
   2c52c:	cmp	r2, #25
   2c530:	movhi	r2, #5
   2c534:	strhi	r2, [r0, #160]	; 0xa0
   2c538:	bhi	2c550 <myhtml_tokenizer_state_script_data_end_tag_open@@Base+0x30>
   2c53c:	ldr	r2, [r0, #192]	; 0xc0
   2c540:	mov	ip, #18
   2c544:	add	r2, r2, r3
   2c548:	str	r2, [r1, #12]
   2c54c:	str	ip, [r0, #160]	; 0xa0
   2c550:	mov	r0, r3
   2c554:	bx	lr

0002c558 <myhtml_tokenizer_state_script_data_end_tag_name@@Base>:
   2c558:	strd	r4, [sp, #-28]!	; 0xffffffe4
   2c55c:	mov	r4, r3
   2c560:	strd	r6, [sp, #8]
   2c564:	strd	r8, [sp, #16]
   2c568:	str	lr, [sp, #24]
   2c56c:	sub	sp, sp, #12
   2c570:	ldr	ip, [sp, #40]	; 0x28
   2c574:	cmp	r3, ip
   2c578:	bcs	2c610 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0xb8>
   2c57c:	mov	r7, r1
   2c580:	mov	r6, r0
   2c584:	ldrb	r3, [r2, r3]
   2c588:	mov	r5, r2
   2c58c:	add	r1, r2, r4
   2c590:	b	2c5c4 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x6c>
   2c594:	cmp	r3, #47	; 0x2f
   2c598:	beq	2c664 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x10c>
   2c59c:	cmp	r3, #62	; 0x3e
   2c5a0:	beq	2c6f4 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x19c>
   2c5a4:	bic	r3, r3, #32
   2c5a8:	sub	r3, r3, #65	; 0x41
   2c5ac:	cmp	r3, #25
   2c5b0:	bhi	2c7bc <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x264>
   2c5b4:	add	r4, r4, #1
   2c5b8:	cmp	ip, r4
   2c5bc:	beq	2c7c8 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x270>
   2c5c0:	ldrb	r3, [r1, #1]!
   2c5c4:	sub	r2, r3, #9
   2c5c8:	sub	r0, r3, #12
   2c5cc:	cmp	r0, #1
   2c5d0:	cmphi	r2, #1
   2c5d4:	movls	r2, #1
   2c5d8:	movhi	r2, #0
   2c5dc:	cmp	r3, #32
   2c5e0:	orreq	r2, r2, #1
   2c5e4:	cmp	r2, #0
   2c5e8:	beq	2c594 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x3c>
   2c5ec:	ldr	r9, [r7, #12]
   2c5f0:	ldr	r8, [r6, #192]	; 0xc0
   2c5f4:	sub	r8, r8, r9
   2c5f8:	add	r8, r8, r4
   2c5fc:	cmp	r8, #6
   2c600:	beq	2c62c <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0xd4>
   2c604:	mov	r3, #5
   2c608:	add	r4, r4, #1
   2c60c:	str	r3, [r6, #160]	; 0xa0
   2c610:	mov	r0, r4
   2c614:	add	sp, sp, #12
   2c618:	ldrd	r4, [sp]
   2c61c:	ldrd	r6, [sp, #8]
   2c620:	ldrd	r8, [sp, #16]
   2c624:	add	sp, sp, #24
   2c628:	pop	{pc}		; (ldr pc, [sp], #4)
   2c62c:	mov	r2, r8
   2c630:	mov	r1, r9
   2c634:	mov	r0, r6
   2c638:	bl	fe00 <myhtml_tree_incomming_buffer_make_data@plt>
   2c63c:	ldr	r1, [pc, #456]	; 2c80c <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x2b4>
   2c640:	mov	r2, r8
   2c644:	add	r1, pc, r1
   2c648:	bl	10238 <mycore_strncasecmp@plt>
   2c64c:	cmp	r0, #0
   2c650:	beq	2c7d0 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x278>
   2c654:	mov	r3, #5
   2c658:	str	r3, [r6, #160]	; 0xa0
   2c65c:	add	r4, r4, #1
   2c660:	b	2c610 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0xb8>
   2c664:	ldr	r9, [r7, #12]
   2c668:	ldr	r8, [r6, #192]	; 0xc0
   2c66c:	sub	r8, r8, r9
   2c670:	add	r8, r8, r4
   2c674:	cmp	r8, #6
   2c678:	bne	2c604 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0xac>
   2c67c:	mov	r2, r8
   2c680:	mov	r1, r9
   2c684:	mov	r0, r6
   2c688:	bl	fe00 <myhtml_tree_incomming_buffer_make_data@plt>
   2c68c:	ldr	r1, [pc, #380]	; 2c810 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x2b8>
   2c690:	mov	r2, r8
   2c694:	add	r1, pc, r1
   2c698:	bl	10238 <mycore_strncasecmp@plt>
   2c69c:	cmp	r0, #0
   2c6a0:	bne	2c654 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0xfc>
   2c6a4:	ldr	r3, [r6, #192]	; 0xc0
   2c6a8:	mov	ip, #64	; 0x40
   2c6ac:	mov	r2, r5
   2c6b0:	mov	r1, r7
   2c6b4:	mov	r0, r6
   2c6b8:	str	ip, [sp]
   2c6bc:	sub	r3, r3, #8
   2c6c0:	add	r3, r3, r4
   2c6c4:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2c6c8:	cmp	r0, #0
   2c6cc:	beq	2c7ac <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x254>
   2c6d0:	mov	r1, #112	; 0x70
   2c6d4:	mov	r2, #3
   2c6d8:	str	r9, [r0, #24]
   2c6dc:	mov	r3, #33	; 0x21
   2c6e0:	str	r1, [r0]
   2c6e4:	str	r8, [r0, #28]
   2c6e8:	str	r2, [r0, #48]	; 0x30
   2c6ec:	str	r3, [r6, #160]	; 0xa0
   2c6f0:	b	2c65c <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x104>
   2c6f4:	ldr	r9, [r7, #12]
   2c6f8:	ldr	r8, [r6, #192]	; 0xc0
   2c6fc:	sub	r8, r8, r9
   2c700:	add	r8, r8, r4
   2c704:	cmp	r8, #6
   2c708:	bne	2c604 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0xac>
   2c70c:	mov	r2, r8
   2c710:	mov	r1, r9
   2c714:	mov	r0, r6
   2c718:	bl	fe00 <myhtml_tree_incomming_buffer_make_data@plt>
   2c71c:	ldr	r1, [pc, #240]	; 2c814 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x2bc>
   2c720:	mov	r2, r8
   2c724:	add	r1, pc, r1
   2c728:	bl	10238 <mycore_strncasecmp@plt>
   2c72c:	cmp	r0, #0
   2c730:	bne	2c604 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0xac>
   2c734:	ldr	r3, [r6, #192]	; 0xc0
   2c738:	mov	ip, #64	; 0x40
   2c73c:	mov	r2, r5
   2c740:	mov	r1, r7
   2c744:	mov	r0, r6
   2c748:	str	ip, [sp]
   2c74c:	sub	r3, r3, #8
   2c750:	add	r3, r3, r4
   2c754:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2c758:	cmp	r0, #0
   2c75c:	beq	2c7ac <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x254>
   2c760:	ldr	r3, [r6, #192]	; 0xc0
   2c764:	add	r4, r4, #1
   2c768:	mov	ip, #112	; 0x70
   2c76c:	mov	r1, #1
   2c770:	ldr	r2, [r0, #32]
   2c774:	str	ip, [r0]
   2c778:	str	r9, [r0, #24]
   2c77c:	add	r3, r4, r3
   2c780:	str	r8, [r0, #28]
   2c784:	str	r1, [r0, #48]	; 0x30
   2c788:	mov	r1, r4
   2c78c:	sub	r3, r3, r2
   2c790:	mov	r2, r0
   2c794:	str	r3, [r0, #36]	; 0x24
   2c798:	mov	r0, r6
   2c79c:	bl	ffc8 <myhtml_queue_add@plt>
   2c7a0:	cmp	r0, #0
   2c7a4:	streq	r0, [r6, #160]	; 0xa0
   2c7a8:	beq	2c610 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0xb8>
   2c7ac:	mov	r3, #69	; 0x45
   2c7b0:	mov	r4, #0
   2c7b4:	str	r3, [r6, #160]	; 0xa0
   2c7b8:	b	2c610 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0xb8>
   2c7bc:	mov	r3, #5
   2c7c0:	str	r3, [r6, #160]	; 0xa0
   2c7c4:	b	2c610 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0xb8>
   2c7c8:	mov	r4, ip
   2c7cc:	b	2c610 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0xb8>
   2c7d0:	ldr	r3, [r6, #192]	; 0xc0
   2c7d4:	mov	ip, #64	; 0x40
   2c7d8:	mov	r2, r5
   2c7dc:	mov	r1, r7
   2c7e0:	mov	r0, r6
   2c7e4:	str	ip, [sp]
   2c7e8:	sub	r3, r3, #8
   2c7ec:	add	r3, r3, r4
   2c7f0:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2c7f4:	cmp	r0, #0
   2c7f8:	movne	r1, #112	; 0x70
   2c7fc:	movne	r2, #1
   2c800:	strne	r9, [r0, #24]
   2c804:	bne	2c6dc <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x184>
   2c808:	b	2c7ac <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x254>
   2c80c:	andeq	r2, sp, ip, lsr #14
   2c810:	ldrdeq	r2, [sp], -ip
   2c814:	andeq	r2, sp, ip, asr #12

0002c818 <myhtml_tokenizer_state_script_data_escaped_dash_dash@@Base>:
   2c818:	ldrb	r2, [r2, r3]
   2c81c:	add	r3, r3, #1
   2c820:	cmp	r2, #45	; 0x2d
   2c824:	beq	2c848 <myhtml_tokenizer_state_script_data_escaped_dash_dash@@Base+0x30>
   2c828:	cmp	r2, #60	; 0x3c
   2c82c:	moveq	r2, #24
   2c830:	streq	r2, [r0, #160]	; 0xa0
   2c834:	beq	2c848 <myhtml_tokenizer_state_script_data_escaped_dash_dash@@Base+0x30>
   2c838:	cmp	r2, #62	; 0x3e
   2c83c:	moveq	r2, #5
   2c840:	movne	r2, #21
   2c844:	str	r2, [r0, #160]	; 0xa0
   2c848:	mov	r0, r3
   2c84c:	bx	lr

0002c850 <myhtml_tokenizer_state_script_data_escaped_less_than_sign@@Base>:
   2c850:	ldrb	r2, [r2, r3]
   2c854:	cmp	r2, #47	; 0x2f
   2c858:	moveq	r1, #25
   2c85c:	addeq	r2, r3, #1
   2c860:	streq	r1, [r0, #160]	; 0xa0
   2c864:	beq	2c884 <myhtml_tokenizer_state_script_data_escaped_less_than_sign@@Base+0x34>
   2c868:	bic	r2, r2, #32
   2c86c:	sub	r2, r2, #65	; 0x41
   2c870:	cmp	r2, #25
   2c874:	bls	2c88c <myhtml_tokenizer_state_script_data_escaped_less_than_sign@@Base+0x3c>
   2c878:	mov	r2, r3
   2c87c:	mov	r3, #21
   2c880:	str	r3, [r0, #160]	; 0xa0
   2c884:	mov	r0, r2
   2c888:	bx	lr
   2c88c:	ldr	ip, [r0, #192]	; 0xc0
   2c890:	mov	r2, r3
   2c894:	push	{lr}		; (str lr, [sp, #-4]!)
   2c898:	mov	lr, #27
   2c89c:	add	r3, ip, r3
   2c8a0:	str	r3, [r1, #12]
   2c8a4:	str	lr, [r0, #160]	; 0xa0
   2c8a8:	mov	r0, r2
   2c8ac:	pop	{pc}		; (ldr pc, [sp], #4)

0002c8b0 <myhtml_tokenizer_state_script_data_escaped_end_tag_open@@Base>:
   2c8b0:	ldrb	r2, [r2, r3]
   2c8b4:	bic	r2, r2, #32
   2c8b8:	sub	r2, r2, #65	; 0x41
   2c8bc:	cmp	r2, #25
   2c8c0:	movhi	r2, #21
   2c8c4:	strhi	r2, [r0, #160]	; 0xa0
   2c8c8:	bhi	2c8e0 <myhtml_tokenizer_state_script_data_escaped_end_tag_open@@Base+0x30>
   2c8cc:	ldr	r2, [r0, #192]	; 0xc0
   2c8d0:	mov	ip, #26
   2c8d4:	add	r2, r2, r3
   2c8d8:	str	r2, [r1, #12]
   2c8dc:	str	ip, [r0, #160]	; 0xa0
   2c8e0:	mov	r0, r3
   2c8e4:	bx	lr

0002c8e8 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base>:
   2c8e8:	strd	r4, [sp, #-32]!	; 0xffffffe0
   2c8ec:	mov	r4, r3
   2c8f0:	strd	r6, [sp, #8]
   2c8f4:	strd	r8, [sp, #16]
   2c8f8:	str	sl, [sp, #24]
   2c8fc:	str	lr, [sp, #28]
   2c900:	sub	sp, sp, #8
   2c904:	ldr	ip, [sp, #40]	; 0x28
   2c908:	cmp	r3, ip
   2c90c:	bcs	2c9a4 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0xbc>
   2c910:	mov	r7, r1
   2c914:	mov	r6, r0
   2c918:	ldrb	r3, [r2, r3]
   2c91c:	mov	r5, r2
   2c920:	add	r1, r2, r4
   2c924:	b	2c958 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x70>
   2c928:	cmp	r3, #47	; 0x2f
   2c92c:	beq	2c9fc <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x114>
   2c930:	cmp	r3, #62	; 0x3e
   2c934:	beq	2ca8c <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x1a4>
   2c938:	bic	r3, r3, #32
   2c93c:	sub	r3, r3, #65	; 0x41
   2c940:	cmp	r3, #25
   2c944:	bhi	2cb54 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x26c>
   2c948:	add	r4, r4, #1
   2c94c:	cmp	ip, r4
   2c950:	beq	2cb60 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x278>
   2c954:	ldrb	r3, [r1, #1]!
   2c958:	sub	r2, r3, #9
   2c95c:	sub	r0, r3, #12
   2c960:	cmp	r0, #1
   2c964:	cmphi	r2, #1
   2c968:	movls	r2, #1
   2c96c:	movhi	r2, #0
   2c970:	cmp	r3, #32
   2c974:	orreq	r2, r2, #1
   2c978:	cmp	r2, #0
   2c97c:	beq	2c928 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x40>
   2c980:	ldr	r9, [r7, #12]
   2c984:	ldr	r8, [r6, #192]	; 0xc0
   2c988:	sub	r8, r8, r9
   2c98c:	add	r8, r8, r4
   2c990:	cmp	r8, #6
   2c994:	beq	2c9c4 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0xdc>
   2c998:	mov	r3, #21
   2c99c:	add	r4, r4, #1
   2c9a0:	str	r3, [r6, #160]	; 0xa0
   2c9a4:	mov	r0, r4
   2c9a8:	add	sp, sp, #8
   2c9ac:	ldrd	r4, [sp]
   2c9b0:	ldrd	r6, [sp, #8]
   2c9b4:	ldrd	r8, [sp, #16]
   2c9b8:	ldr	sl, [sp, #24]
   2c9bc:	add	sp, sp, #28
   2c9c0:	pop	{pc}		; (ldr pc, [sp], #4)
   2c9c4:	mov	r2, r8
   2c9c8:	mov	r1, r9
   2c9cc:	mov	r0, r6
   2c9d0:	bl	fe00 <myhtml_tree_incomming_buffer_make_data@plt>
   2c9d4:	ldr	r1, [pc, #456]	; 2cba4 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x2bc>
   2c9d8:	mov	r2, r8
   2c9dc:	add	r1, pc, r1
   2c9e0:	bl	10238 <mycore_strncasecmp@plt>
   2c9e4:	cmp	r0, #0
   2c9e8:	beq	2cb68 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x280>
   2c9ec:	mov	r3, #21
   2c9f0:	str	r3, [r6, #160]	; 0xa0
   2c9f4:	add	r4, r4, #1
   2c9f8:	b	2c9a4 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0xbc>
   2c9fc:	ldr	r9, [r7, #12]
   2ca00:	ldr	r8, [r6, #192]	; 0xc0
   2ca04:	sub	r8, r8, r9
   2ca08:	add	r8, r8, r4
   2ca0c:	cmp	r8, #6
   2ca10:	bne	2c998 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0xb0>
   2ca14:	mov	r2, r8
   2ca18:	mov	r1, r9
   2ca1c:	mov	r0, r6
   2ca20:	bl	fe00 <myhtml_tree_incomming_buffer_make_data@plt>
   2ca24:	ldr	r1, [pc, #380]	; 2cba8 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x2c0>
   2ca28:	mov	r2, r8
   2ca2c:	add	r1, pc, r1
   2ca30:	bl	10238 <mycore_strncasecmp@plt>
   2ca34:	cmp	r0, #0
   2ca38:	bne	2c9ec <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x104>
   2ca3c:	ldr	r3, [r6, #192]	; 0xc0
   2ca40:	mov	ip, #64	; 0x40
   2ca44:	mov	r2, r5
   2ca48:	mov	r1, r7
   2ca4c:	mov	r0, r6
   2ca50:	str	ip, [sp]
   2ca54:	sub	r3, r3, #8
   2ca58:	add	r3, r3, r4
   2ca5c:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2ca60:	cmp	r0, #0
   2ca64:	beq	2cb44 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x25c>
   2ca68:	mov	r1, #112	; 0x70
   2ca6c:	mov	r2, #3
   2ca70:	str	r9, [r0, #24]
   2ca74:	mov	r3, #33	; 0x21
   2ca78:	str	r1, [r0]
   2ca7c:	str	r8, [r0, #28]
   2ca80:	str	r2, [r0, #48]	; 0x30
   2ca84:	str	r3, [r6, #160]	; 0xa0
   2ca88:	b	2c9f4 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x10c>
   2ca8c:	ldr	r9, [r7, #12]
   2ca90:	ldr	r8, [r6, #192]	; 0xc0
   2ca94:	sub	r8, r8, r9
   2ca98:	add	r8, r8, r4
   2ca9c:	cmp	r8, #6
   2caa0:	bne	2c998 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0xb0>
   2caa4:	mov	r2, r8
   2caa8:	mov	r1, r9
   2caac:	mov	r0, r6
   2cab0:	bl	fe00 <myhtml_tree_incomming_buffer_make_data@plt>
   2cab4:	ldr	r1, [pc, #240]	; 2cbac <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x2c4>
   2cab8:	mov	r2, r8
   2cabc:	add	r1, pc, r1
   2cac0:	bl	10238 <mycore_strncasecmp@plt>
   2cac4:	subs	sl, r0, #0
   2cac8:	bne	2c998 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0xb0>
   2cacc:	ldr	r3, [r6, #192]	; 0xc0
   2cad0:	mov	ip, #64	; 0x40
   2cad4:	mov	r2, r5
   2cad8:	mov	r1, r7
   2cadc:	mov	r0, r6
   2cae0:	str	ip, [sp]
   2cae4:	sub	r3, r3, #8
   2cae8:	add	r3, r3, r4
   2caec:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2caf0:	subs	r3, r0, #0
   2caf4:	beq	2cb44 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x25c>
   2caf8:	ldr	ip, [r6, #192]	; 0xc0
   2cafc:	add	r4, r4, #1
   2cb00:	mov	r1, #112	; 0x70
   2cb04:	mov	r2, #1
   2cb08:	ldr	r0, [r3, #32]
   2cb0c:	str	r1, [r3]
   2cb10:	mov	r1, r4
   2cb14:	str	r9, [r3, #24]
   2cb18:	add	ip, r4, ip
   2cb1c:	str	r8, [r3, #28]
   2cb20:	str	r2, [r3, #48]	; 0x30
   2cb24:	mov	r2, r3
   2cb28:	sub	ip, ip, r0
   2cb2c:	mov	r0, r6
   2cb30:	str	sl, [r6, #160]	; 0xa0
   2cb34:	str	ip, [r3, #36]	; 0x24
   2cb38:	bl	ffc8 <myhtml_queue_add@plt>
   2cb3c:	cmp	r0, #0
   2cb40:	beq	2c9a4 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0xbc>
   2cb44:	mov	r3, #69	; 0x45
   2cb48:	mov	r4, #0
   2cb4c:	str	r3, [r6, #160]	; 0xa0
   2cb50:	b	2c9a4 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0xbc>
   2cb54:	mov	r3, #21
   2cb58:	str	r3, [r6, #160]	; 0xa0
   2cb5c:	b	2c9a4 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0xbc>
   2cb60:	mov	r4, ip
   2cb64:	b	2c9a4 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0xbc>
   2cb68:	ldr	r3, [r6, #192]	; 0xc0
   2cb6c:	mov	ip, #64	; 0x40
   2cb70:	mov	r2, r5
   2cb74:	mov	r1, r7
   2cb78:	mov	r0, r6
   2cb7c:	str	ip, [sp]
   2cb80:	sub	r3, r3, #8
   2cb84:	add	r3, r3, r4
   2cb88:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2cb8c:	cmp	r0, #0
   2cb90:	movne	r1, #112	; 0x70
   2cb94:	movne	r2, #1
   2cb98:	strne	r9, [r0, #24]
   2cb9c:	bne	2ca74 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x18c>
   2cba0:	b	2cb44 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x25c>
   2cba4:	muleq	sp, r4, r3
   2cba8:	andeq	r2, sp, r4, asr #6
   2cbac:			; <UNDEFINED> instruction: 0x000d22b4

0002cbb0 <myhtml_tokenizer_state_script_data_escaped@@Base>:
   2cbb0:	str	r4, [sp, #-8]!
   2cbb4:	str	lr, [sp, #4]
   2cbb8:	ldr	lr, [sp, #8]
   2cbbc:	cmp	r3, lr
   2cbc0:	bcs	2cc58 <myhtml_tokenizer_state_script_data_escaped@@Base+0xa8>
   2cbc4:	ldrb	ip, [r2, r3]
   2cbc8:	mov	r4, r0
   2cbcc:	add	r1, r2, r3
   2cbd0:	cmp	ip, #45	; 0x2d
   2cbd4:	beq	2cc20 <myhtml_tokenizer_state_script_data_escaped@@Base+0x70>
   2cbd8:	cmp	ip, #60	; 0x3c
   2cbdc:	subne	ip, r2, #1
   2cbe0:	movne	r3, r1
   2cbe4:	addne	ip, ip, lr
   2cbe8:	rsbne	r2, r2, #1
   2cbec:	bne	2cc08 <myhtml_tokenizer_state_script_data_escaped@@Base+0x58>
   2cbf0:	b	2cc3c <myhtml_tokenizer_state_script_data_escaped@@Base+0x8c>
   2cbf4:	ldrb	r1, [r3, #1]!
   2cbf8:	cmp	r1, #45	; 0x2d
   2cbfc:	beq	2cc24 <myhtml_tokenizer_state_script_data_escaped@@Base+0x74>
   2cc00:	cmp	r1, #60	; 0x3c
   2cc04:	beq	2cc40 <myhtml_tokenizer_state_script_data_escaped@@Base+0x90>
   2cc08:	cmp	r3, ip
   2cc0c:	add	r0, r2, r3
   2cc10:	bne	2cbf4 <myhtml_tokenizer_state_script_data_escaped@@Base+0x44>
   2cc14:	ldr	r4, [sp]
   2cc18:	add	sp, sp, #4
   2cc1c:	pop	{pc}		; (ldr pc, [sp], #4)
   2cc20:	mov	r0, r3
   2cc24:	mov	r3, #22
   2cc28:	add	r0, r0, #1
   2cc2c:	str	r3, [r4, #160]	; 0xa0
   2cc30:	ldr	r4, [sp]
   2cc34:	add	sp, sp, #4
   2cc38:	pop	{pc}		; (ldr pc, [sp], #4)
   2cc3c:	mov	r0, r3
   2cc40:	mov	r3, #24
   2cc44:	add	r0, r0, #1
   2cc48:	str	r3, [r4, #160]	; 0xa0
   2cc4c:	ldr	r4, [sp]
   2cc50:	add	sp, sp, #4
   2cc54:	pop	{pc}		; (ldr pc, [sp], #4)
   2cc58:	mov	r0, r3
   2cc5c:	b	2cc14 <myhtml_tokenizer_state_script_data_escaped@@Base+0x64>

0002cc60 <myhtml_tokenizer_state_script_data_escaped_dash@@Base>:
   2cc60:	ldrb	r2, [r2, r3]
   2cc64:	cmp	r2, #45	; 0x2d
   2cc68:	moveq	r2, #23
   2cc6c:	addeq	r3, r3, #1
   2cc70:	streq	r2, [r0, #160]	; 0xa0
   2cc74:	beq	2cc98 <myhtml_tokenizer_state_script_data_escaped_dash@@Base+0x38>
   2cc78:	cmp	r2, #60	; 0x3c
   2cc7c:	moveq	r2, #24
   2cc80:	streq	r2, [r0, #160]	; 0xa0
   2cc84:	beq	2cc98 <myhtml_tokenizer_state_script_data_escaped_dash@@Base+0x38>
   2cc88:	cmp	r2, #0
   2cc8c:	mov	r2, #21
   2cc90:	addne	r3, r3, #1
   2cc94:	str	r2, [r0, #160]	; 0xa0
   2cc98:	mov	r0, r3
   2cc9c:	bx	lr

0002cca0 <myhtml_tokenizer_state_script_data_double_escape_start@@Base>:
   2cca0:	strd	r4, [sp, #-16]!
   2cca4:	ldr	r5, [sp, #16]
   2cca8:	str	r6, [sp, #8]
   2ccac:	str	lr, [sp, #12]
   2ccb0:	cmp	r3, r5
   2ccb4:	bcs	2cdcc <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0x12c>
   2ccb8:	ldrb	ip, [r2, r3]
   2ccbc:	mov	r4, r0
   2ccc0:	add	r2, r2, r3
   2ccc4:	cmp	ip, #47	; 0x2f
   2ccc8:	cmpne	ip, #32
   2cccc:	sub	r6, ip, #9
   2ccd0:	moveq	r0, #1
   2ccd4:	movne	r0, #0
   2ccd8:	cmp	ip, #62	; 0x3e
   2ccdc:	orreq	r0, r0, #1
   2cce0:	sub	lr, ip, #12
   2cce4:	cmp	r6, #1
   2cce8:	orrls	r0, r0, #1
   2ccec:	cmp	lr, #1
   2ccf0:	orrls	r0, r0, #1
   2ccf4:	cmp	r0, #0
   2ccf8:	bne	2cd54 <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0xb4>
   2ccfc:	bic	ip, ip, #32
   2cd00:	sub	ip, ip, #65	; 0x41
   2cd04:	cmp	ip, #25
   2cd08:	bhi	2cdbc <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0x11c>
   2cd0c:	add	r3, r3, #1
   2cd10:	cmp	r5, r3
   2cd14:	beq	2cd78 <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0xd8>
   2cd18:	ldrb	ip, [r2, #1]!
   2cd1c:	cmp	ip, #47	; 0x2f
   2cd20:	cmpne	ip, #32
   2cd24:	sub	r6, ip, #9
   2cd28:	moveq	lr, #1
   2cd2c:	movne	lr, #0
   2cd30:	cmp	ip, #62	; 0x3e
   2cd34:	orreq	lr, lr, #1
   2cd38:	sub	r0, ip, #12
   2cd3c:	cmp	r6, #1
   2cd40:	orrls	lr, lr, #1
   2cd44:	cmp	r0, #1
   2cd48:	orrls	lr, lr, #1
   2cd4c:	cmp	lr, #0
   2cd50:	beq	2ccfc <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0x5c>
   2cd54:	ldr	r1, [r1, #12]
   2cd58:	add	r5, r3, #1
   2cd5c:	ldr	r6, [r4, #192]	; 0xc0
   2cd60:	sub	r6, r6, r1
   2cd64:	add	r6, r6, r3
   2cd68:	cmp	r6, #6
   2cd6c:	beq	2cd8c <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0xec>
   2cd70:	mov	r3, #21
   2cd74:	str	r3, [r4, #160]	; 0xa0
   2cd78:	mov	r0, r5
   2cd7c:	ldrd	r4, [sp]
   2cd80:	ldr	r6, [sp, #8]
   2cd84:	add	sp, sp, #12
   2cd88:	pop	{pc}		; (ldr pc, [sp], #4)
   2cd8c:	mov	r2, r6
   2cd90:	mov	r0, r4
   2cd94:	bl	fe00 <myhtml_tree_incomming_buffer_make_data@plt>
   2cd98:	ldr	r1, [pc, #52]	; 2cdd4 <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0x134>
   2cd9c:	mov	r2, r6
   2cda0:	add	r1, pc, r1
   2cda4:	bl	10238 <mycore_strncasecmp@plt>
   2cda8:	cmp	r0, #0
   2cdac:	moveq	r3, #28
   2cdb0:	movne	r3, #21
   2cdb4:	str	r3, [r4, #160]	; 0xa0
   2cdb8:	b	2cd78 <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0xd8>
   2cdbc:	mov	r2, #21
   2cdc0:	mov	r5, r3
   2cdc4:	str	r2, [r4, #160]	; 0xa0
   2cdc8:	b	2cd78 <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0xd8>
   2cdcc:	mov	r5, r3
   2cdd0:	b	2cd78 <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0xd8>
   2cdd4:	ldrdeq	r1, [sp], -r0

0002cdd8 <myhtml_tokenizer_state_script_data_double_escaped@@Base>:
   2cdd8:	str	r4, [sp, #-8]!
   2cddc:	str	lr, [sp, #4]
   2cde0:	ldr	lr, [sp, #8]
   2cde4:	cmp	r3, lr
   2cde8:	bcs	2ce80 <myhtml_tokenizer_state_script_data_double_escaped@@Base+0xa8>
   2cdec:	ldrb	ip, [r2, r3]
   2cdf0:	mov	r4, r0
   2cdf4:	add	r1, r2, r3
   2cdf8:	cmp	ip, #45	; 0x2d
   2cdfc:	beq	2ce48 <myhtml_tokenizer_state_script_data_double_escaped@@Base+0x70>
   2ce00:	cmp	ip, #60	; 0x3c
   2ce04:	subne	ip, r2, #1
   2ce08:	movne	r3, r1
   2ce0c:	addne	ip, ip, lr
   2ce10:	rsbne	r2, r2, #1
   2ce14:	bne	2ce30 <myhtml_tokenizer_state_script_data_double_escaped@@Base+0x58>
   2ce18:	b	2ce64 <myhtml_tokenizer_state_script_data_double_escaped@@Base+0x8c>
   2ce1c:	ldrb	r1, [r3, #1]!
   2ce20:	cmp	r1, #45	; 0x2d
   2ce24:	beq	2ce4c <myhtml_tokenizer_state_script_data_double_escaped@@Base+0x74>
   2ce28:	cmp	r1, #60	; 0x3c
   2ce2c:	beq	2ce68 <myhtml_tokenizer_state_script_data_double_escaped@@Base+0x90>
   2ce30:	cmp	r3, ip
   2ce34:	add	r0, r2, r3
   2ce38:	bne	2ce1c <myhtml_tokenizer_state_script_data_double_escaped@@Base+0x44>
   2ce3c:	ldr	r4, [sp]
   2ce40:	add	sp, sp, #4
   2ce44:	pop	{pc}		; (ldr pc, [sp], #4)
   2ce48:	mov	r0, r3
   2ce4c:	mov	r3, #29
   2ce50:	add	r0, r0, #1
   2ce54:	str	r3, [r4, #160]	; 0xa0
   2ce58:	ldr	r4, [sp]
   2ce5c:	add	sp, sp, #4
   2ce60:	pop	{pc}		; (ldr pc, [sp], #4)
   2ce64:	mov	r0, r3
   2ce68:	mov	r3, #31
   2ce6c:	add	r0, r0, #1
   2ce70:	str	r3, [r4, #160]	; 0xa0
   2ce74:	ldr	r4, [sp]
   2ce78:	add	sp, sp, #4
   2ce7c:	pop	{pc}		; (ldr pc, [sp], #4)
   2ce80:	mov	r0, r3
   2ce84:	b	2ce3c <myhtml_tokenizer_state_script_data_double_escaped@@Base+0x64>

0002ce88 <myhtml_tokenizer_state_script_data_double_escaped_dash@@Base>:
   2ce88:	ldrb	r2, [r2, r3]
   2ce8c:	cmp	r2, #45	; 0x2d
   2ce90:	moveq	r2, #30
   2ce94:	streq	r2, [r0, #160]	; 0xa0
   2ce98:	beq	2ceac <myhtml_tokenizer_state_script_data_double_escaped_dash@@Base+0x24>
   2ce9c:	cmp	r2, #60	; 0x3c
   2cea0:	moveq	r2, #31
   2cea4:	movne	r2, #28
   2cea8:	str	r2, [r0, #160]	; 0xa0
   2ceac:	add	r0, r3, #1
   2ceb0:	bx	lr

0002ceb4 <myhtml_tokenizer_state_script_data_double_escaped_dash_dash@@Base>:
   2ceb4:	ldrb	r2, [r2, r3]
   2ceb8:	add	r3, r3, #1
   2cebc:	cmp	r2, #45	; 0x2d
   2cec0:	beq	2cee4 <myhtml_tokenizer_state_script_data_double_escaped_dash_dash@@Base+0x30>
   2cec4:	cmp	r2, #60	; 0x3c
   2cec8:	moveq	r2, #31
   2cecc:	streq	r2, [r0, #160]	; 0xa0
   2ced0:	beq	2cee4 <myhtml_tokenizer_state_script_data_double_escaped_dash_dash@@Base+0x30>
   2ced4:	cmp	r2, #62	; 0x3e
   2ced8:	moveq	r2, #5
   2cedc:	movne	r2, #28
   2cee0:	str	r2, [r0, #160]	; 0xa0
   2cee4:	mov	r0, r3
   2cee8:	bx	lr

0002ceec <myhtml_tokenizer_state_script_data_double_escaped_less_than_sign@@Base>:
   2ceec:	ldrb	r2, [r2, r3]
   2cef0:	cmp	r2, #47	; 0x2f
   2cef4:	movne	r2, #28
   2cef8:	strne	r2, [r0, #160]	; 0xa0
   2cefc:	bne	2cf18 <myhtml_tokenizer_state_script_data_double_escaped_less_than_sign@@Base+0x2c>
   2cf00:	ldr	r2, [r0, #192]	; 0xc0
   2cf04:	add	r3, r3, #1
   2cf08:	mov	ip, #32
   2cf0c:	str	ip, [r0, #160]	; 0xa0
   2cf10:	add	r2, r2, r3
   2cf14:	str	r2, [r1, #12]
   2cf18:	mov	r0, r3
   2cf1c:	bx	lr

0002cf20 <myhtml_tokenizer_state_script_data_double_escape_end@@Base>:
   2cf20:	strd	r4, [sp, #-16]!
   2cf24:	ldr	r5, [sp, #16]
   2cf28:	str	r6, [sp, #8]
   2cf2c:	str	lr, [sp, #12]
   2cf30:	cmp	r3, r5
   2cf34:	bcs	2d04c <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0x12c>
   2cf38:	ldrb	ip, [r2, r3]
   2cf3c:	mov	r4, r0
   2cf40:	add	r2, r2, r3
   2cf44:	cmp	ip, #47	; 0x2f
   2cf48:	cmpne	ip, #32
   2cf4c:	sub	r6, ip, #9
   2cf50:	moveq	r0, #1
   2cf54:	movne	r0, #0
   2cf58:	cmp	ip, #62	; 0x3e
   2cf5c:	orreq	r0, r0, #1
   2cf60:	sub	lr, ip, #12
   2cf64:	cmp	r6, #1
   2cf68:	orrls	r0, r0, #1
   2cf6c:	cmp	lr, #1
   2cf70:	orrls	r0, r0, #1
   2cf74:	cmp	r0, #0
   2cf78:	bne	2cfd4 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0xb4>
   2cf7c:	bic	ip, ip, #32
   2cf80:	sub	ip, ip, #65	; 0x41
   2cf84:	cmp	ip, #25
   2cf88:	bhi	2d03c <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0x11c>
   2cf8c:	add	r3, r3, #1
   2cf90:	cmp	r5, r3
   2cf94:	beq	2cff8 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0xd8>
   2cf98:	ldrb	ip, [r2, #1]!
   2cf9c:	cmp	ip, #47	; 0x2f
   2cfa0:	cmpne	ip, #32
   2cfa4:	sub	r6, ip, #9
   2cfa8:	moveq	lr, #1
   2cfac:	movne	lr, #0
   2cfb0:	cmp	ip, #62	; 0x3e
   2cfb4:	orreq	lr, lr, #1
   2cfb8:	sub	r0, ip, #12
   2cfbc:	cmp	r6, #1
   2cfc0:	orrls	lr, lr, #1
   2cfc4:	cmp	r0, #1
   2cfc8:	orrls	lr, lr, #1
   2cfcc:	cmp	lr, #0
   2cfd0:	beq	2cf7c <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0x5c>
   2cfd4:	ldr	r1, [r1, #12]
   2cfd8:	add	r5, r3, #1
   2cfdc:	ldr	r6, [r4, #192]	; 0xc0
   2cfe0:	sub	r6, r6, r1
   2cfe4:	add	r6, r6, r3
   2cfe8:	cmp	r6, #6
   2cfec:	beq	2d00c <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0xec>
   2cff0:	mov	r3, #28
   2cff4:	str	r3, [r4, #160]	; 0xa0
   2cff8:	mov	r0, r5
   2cffc:	ldrd	r4, [sp]
   2d000:	ldr	r6, [sp, #8]
   2d004:	add	sp, sp, #12
   2d008:	pop	{pc}		; (ldr pc, [sp], #4)
   2d00c:	mov	r2, r6
   2d010:	mov	r0, r4
   2d014:	bl	fe00 <myhtml_tree_incomming_buffer_make_data@plt>
   2d018:	ldr	r1, [pc, #52]	; 2d054 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0x134>
   2d01c:	mov	r2, r6
   2d020:	add	r1, pc, r1
   2d024:	bl	10238 <mycore_strncasecmp@plt>
   2d028:	cmp	r0, #0
   2d02c:	moveq	r3, #21
   2d030:	movne	r3, #28
   2d034:	str	r3, [r4, #160]	; 0xa0
   2d038:	b	2cff8 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0xd8>
   2d03c:	mov	r2, #28
   2d040:	mov	r5, r3
   2d044:	str	r2, [r4, #160]	; 0xa0
   2d048:	b	2cff8 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0xd8>
   2d04c:	mov	r5, r3
   2d050:	b	2cff8 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0xd8>
   2d054:	andeq	r1, sp, r0, asr sp

0002d058 <myhtml_tree_create@@Base>:
   2d058:	mov	r1, #252	; 0xfc
   2d05c:	mov	r0, #1
   2d060:	b	feb4 <mycore_calloc@plt>

0002d064 <myhtml_tree_node_clean@@Base>:
   2d064:	mov	r2, #44	; 0x2c
   2d068:	mov	r1, #0
   2d06c:	str	r4, [sp, #-8]!
   2d070:	str	lr, [sp, #4]
   2d074:	bl	10844 <memset@plt>
   2d078:	mov	r2, #1
   2d07c:	ldr	r4, [sp]
   2d080:	add	sp, sp, #4
   2d084:	str	r2, [r0, #8]
   2d088:	pop	{pc}		; (ldr pc, [sp], #4)

0002d08c <myhtml_tree_parse_flags@@Base>:
   2d08c:	ldr	r0, [r0, #184]	; 0xb8
   2d090:	bx	lr

0002d094 <myhtml_tree_parse_flags_set@@Base>:
   2d094:	str	r1, [r0, #184]	; 0xb8
   2d098:	bx	lr

0002d09c <myhtml_tree_get_myhtml@@Base>:
   2d09c:	cmp	r0, #0
   2d0a0:	ldrne	r0, [r0]
   2d0a4:	bx	lr

0002d0a8 <myhtml_tree_get_tag@@Base>:
   2d0a8:	cmp	r0, #0
   2d0ac:	ldrne	r0, [r0, #28]
   2d0b0:	bx	lr

0002d0b4 <myhtml_tree_get_document@@Base>:
   2d0b4:	ldr	r0, [r0, #84]	; 0x54
   2d0b8:	bx	lr

0002d0bc <myhtml_tree_get_node_html@@Base>:
   2d0bc:	ldr	r0, [r0, #96]	; 0x60
   2d0c0:	bx	lr

0002d0c4 <myhtml_tree_get_node_body@@Base>:
   2d0c4:	ldr	r0, [r0, #100]	; 0x64
   2d0c8:	bx	lr

0002d0cc <myhtml_tree_get_node_head@@Base>:
   2d0cc:	ldr	r0, [r0, #92]	; 0x5c
   2d0d0:	bx	lr

0002d0d4 <myhtml_tree_get_mchar@@Base>:
   2d0d4:	ldr	r0, [r0, #4]
   2d0d8:	bx	lr

0002d0dc <myhtml_tree_get_mchar_node_id@@Base>:
   2d0dc:	ldr	r0, [r0, #52]	; 0x34
   2d0e0:	bx	lr

0002d0e4 <myhtml_tree_node_create@@Base>:
   2d0e4:	strd	r4, [sp, #-16]!
   2d0e8:	mov	r4, r0
   2d0ec:	mov	r2, #0
   2d0f0:	ldr	r0, [r0, #12]
   2d0f4:	ldr	r1, [r4, #48]	; 0x30
   2d0f8:	str	r6, [sp, #8]
   2d0fc:	str	lr, [sp, #12]
   2d100:	bl	10b50 <mcobject_async_malloc@plt>
   2d104:	mov	r5, r0
   2d108:	bl	11030 <myhtml_tree_node_clean@plt>
   2d10c:	mov	r0, r5
   2d110:	ldr	r6, [sp, #8]
   2d114:	str	r4, [r5, #40]	; 0x28
   2d118:	ldrd	r4, [sp]
   2d11c:	add	sp, sp, #12
   2d120:	pop	{pc}		; (ldr pc, [sp], #4)

0002d124 <myhtml_tree_node_add_child@@Base>:
   2d124:	ldr	r3, [r0, #28]
   2d128:	push	{lr}		; (str lr, [sp, #-4]!)
   2d12c:	cmp	r3, #0
   2d130:	strne	r1, [r3, #16]
   2d134:	strne	r3, [r1, #12]
   2d138:	ldr	r3, [r1, #40]	; 0x28
   2d13c:	streq	r1, [r0, #20]
   2d140:	ldr	lr, [r3, #236]	; 0xec
   2d144:	str	r0, [r1, #24]
   2d148:	str	r1, [r0, #28]
   2d14c:	cmp	lr, #0
   2d150:	beq	2d168 <myhtml_tree_node_add_child@@Base+0x44>
   2d154:	mov	r0, r3
   2d158:	ldr	r2, [r3, #244]	; 0xf4
   2d15c:	mov	r3, lr
   2d160:	pop	{lr}		; (ldr lr, [sp], #4)
   2d164:	bx	r3
   2d168:	pop	{pc}		; (ldr pc, [sp], #4)

0002d16c <myhtml_tree_node_insert_before@@Base>:
   2d16c:	ldr	r3, [r0, #12]
   2d170:	push	{lr}		; (str lr, [sp, #-4]!)
   2d174:	ldr	r2, [r0, #24]
   2d178:	cmp	r3, #0
   2d17c:	strne	r1, [r3, #16]
   2d180:	strne	r3, [r1, #12]
   2d184:	ldr	r3, [r1, #40]	; 0x28
   2d188:	streq	r1, [r2, #20]
   2d18c:	ldr	lr, [r3, #236]	; 0xec
   2d190:	str	r0, [r1, #16]
   2d194:	str	r2, [r1, #24]
   2d198:	str	r1, [r0, #12]
   2d19c:	cmp	lr, #0
   2d1a0:	beq	2d1b8 <myhtml_tree_node_insert_before@@Base+0x4c>
   2d1a4:	mov	r0, r3
   2d1a8:	ldr	r2, [r3, #244]	; 0xf4
   2d1ac:	mov	r3, lr
   2d1b0:	pop	{lr}		; (ldr lr, [sp], #4)
   2d1b4:	bx	r3
   2d1b8:	pop	{pc}		; (ldr pc, [sp], #4)

0002d1bc <myhtml_tree_node_insert_after@@Base>:
   2d1bc:	ldr	r3, [r0, #16]
   2d1c0:	push	{lr}		; (str lr, [sp, #-4]!)
   2d1c4:	ldr	r2, [r0, #24]
   2d1c8:	cmp	r3, #0
   2d1cc:	strne	r1, [r3, #12]
   2d1d0:	strne	r3, [r1, #16]
   2d1d4:	ldr	r3, [r1, #40]	; 0x28
   2d1d8:	streq	r1, [r2, #28]
   2d1dc:	ldr	lr, [r3, #236]	; 0xec
   2d1e0:	str	r0, [r1, #12]
   2d1e4:	str	r2, [r1, #24]
   2d1e8:	str	r1, [r0, #16]
   2d1ec:	cmp	lr, #0
   2d1f0:	beq	2d208 <myhtml_tree_node_insert_after@@Base+0x4c>
   2d1f4:	mov	r0, r3
   2d1f8:	ldr	r2, [r3, #244]	; 0xf4
   2d1fc:	mov	r3, lr
   2d200:	pop	{lr}		; (ldr lr, [sp], #4)
   2d204:	bx	r3
   2d208:	pop	{pc}		; (ldr pc, [sp], #4)

0002d20c <myhtml_tree_node_find_parent_by_tag_id@@Base>:
   2d20c:	ldr	r0, [r0, #24]
   2d210:	cmp	r0, #0
   2d214:	beq	2d240 <myhtml_tree_node_find_parent_by_tag_id@@Base+0x34>
   2d218:	ldr	r3, [r0, #4]
   2d21c:	cmp	r1, r3
   2d220:	bne	2d234 <myhtml_tree_node_find_parent_by_tag_id@@Base+0x28>
   2d224:	b	2d240 <myhtml_tree_node_find_parent_by_tag_id@@Base+0x34>
   2d228:	ldr	r3, [r0, #4]
   2d22c:	cmp	r3, r1
   2d230:	beq	2d240 <myhtml_tree_node_find_parent_by_tag_id@@Base+0x34>
   2d234:	ldr	r0, [r0, #24]
   2d238:	cmp	r0, #0
   2d23c:	bne	2d228 <myhtml_tree_node_find_parent_by_tag_id@@Base+0x1c>
   2d240:	bx	lr

0002d244 <myhtml_tree_node_remove@@Base>:
   2d244:	strd	r4, [sp, #-16]!
   2d248:	mov	r4, r0
   2d24c:	ldr	r2, [r0, #16]
   2d250:	ldr	r3, [r0, #12]
   2d254:	str	r6, [sp, #8]
   2d258:	str	lr, [sp, #12]
   2d25c:	cmp	r2, #0
   2d260:	beq	2d2d0 <myhtml_tree_node_remove@@Base+0x8c>
   2d264:	str	r3, [r2, #12]
   2d268:	ldr	r3, [r0, #12]
   2d26c:	cmp	r3, #0
   2d270:	beq	2d2bc <myhtml_tree_node_remove@@Base+0x78>
   2d274:	str	r2, [r3, #16]
   2d278:	ldr	r3, [r4, #40]	; 0x28
   2d27c:	ldr	r5, [r3, #240]	; 0xf0
   2d280:	cmp	r5, #0
   2d284:	beq	2d298 <myhtml_tree_node_remove@@Base+0x54>
   2d288:	mov	r0, r3
   2d28c:	mov	r1, r4
   2d290:	ldr	r2, [r3, #248]	; 0xf8
   2d294:	blx	r5
   2d298:	mov	r3, #0
   2d29c:	mov	r0, r4
   2d2a0:	ldr	r6, [sp, #8]
   2d2a4:	str	r3, [r4, #12]
   2d2a8:	str	r3, [r4, #16]
   2d2ac:	str	r3, [r4, #24]
   2d2b0:	ldrd	r4, [sp]
   2d2b4:	add	sp, sp, #12
   2d2b8:	pop	{pc}		; (ldr pc, [sp], #4)
   2d2bc:	ldr	r1, [r0, #24]
   2d2c0:	cmp	r1, #0
   2d2c4:	beq	2d278 <myhtml_tree_node_remove@@Base+0x34>
   2d2c8:	str	r2, [r1, #20]
   2d2cc:	b	2d278 <myhtml_tree_node_remove@@Base+0x34>
   2d2d0:	ldr	r1, [r0, #24]
   2d2d4:	cmp	r1, #0
   2d2d8:	beq	2d2ec <myhtml_tree_node_remove@@Base+0xa8>
   2d2dc:	cmp	r3, #0
   2d2e0:	str	r3, [r1, #28]
   2d2e4:	bne	2d274 <myhtml_tree_node_remove@@Base+0x30>
   2d2e8:	b	2d2c8 <myhtml_tree_node_remove@@Base+0x84>
   2d2ec:	cmp	r3, #0
   2d2f0:	bne	2d274 <myhtml_tree_node_remove@@Base+0x30>
   2d2f4:	b	2d278 <myhtml_tree_node_remove@@Base+0x34>

0002d2f8 <myhtml_tree_node_free@@Base>:
   2d2f8:	str	r4, [sp, #-8]!
   2d2fc:	subs	r4, r0, #0
   2d300:	str	lr, [sp, #4]
   2d304:	beq	2d34c <myhtml_tree_node_free@@Base+0x54>
   2d308:	ldr	r1, [r4, #32]
   2d30c:	ldr	r3, [r4, #40]	; 0x28
   2d310:	cmp	r1, #0
   2d314:	beq	2d334 <myhtml_tree_node_free@@Base+0x3c>
   2d318:	ldr	r0, [r3, #8]
   2d31c:	bl	10778 <myhtml_token_attr_delete_all@plt>
   2d320:	ldr	r1, [r4, #32]
   2d324:	ldr	r3, [r4, #40]	; 0x28
   2d328:	ldr	r0, [r3, #8]
   2d32c:	bl	10f1c <myhtml_token_delete@plt>
   2d330:	ldr	r3, [r4, #40]	; 0x28
   2d334:	mov	r1, r4
   2d338:	ldr	r4, [sp]
   2d33c:	ldr	lr, [sp, #4]
   2d340:	add	sp, sp, #8
   2d344:	ldr	r0, [r3, #12]
   2d348:	b	ffec <mcobject_async_free@plt>
   2d34c:	ldr	r4, [sp]
   2d350:	add	sp, sp, #4
   2d354:	pop	{pc}		; (ldr pc, [sp], #4)

0002d358 <myhtml_tree_node_delete@@Base>:
   2d358:	subs	r3, r0, #0
   2d35c:	bxeq	lr
   2d360:	str	r4, [sp, #-8]!
   2d364:	mov	r4, r3
   2d368:	str	lr, [sp, #4]
   2d36c:	bl	10d84 <myhtml_tree_node_remove@plt>
   2d370:	mov	r0, r4
   2d374:	ldr	r4, [sp]
   2d378:	ldr	lr, [sp, #4]
   2d37c:	add	sp, sp, #8
   2d380:	b	10c94 <myhtml_tree_node_free@plt>
   2d384:	str	r4, [sp, #-8]!
   2d388:	subs	r4, r0, #0
   2d38c:	str	lr, [sp, #4]
   2d390:	beq	2d3b8 <myhtml_tree_node_delete@@Base+0x60>
   2d394:	ldr	r3, [r4, #20]
   2d398:	subs	r0, r3, #0
   2d39c:	beq	2d3a4 <myhtml_tree_node_delete@@Base+0x4c>
   2d3a0:	bl	2d384 <myhtml_tree_node_delete@@Base+0x2c>
   2d3a4:	ldr	r4, [r4, #16]
   2d3a8:	mov	r0, r4
   2d3ac:	bl	10d54 <myhtml_tree_node_delete@plt>
   2d3b0:	cmp	r4, #0
   2d3b4:	bne	2d394 <myhtml_tree_node_delete@@Base+0x3c>
   2d3b8:	ldr	r4, [sp]
   2d3bc:	add	sp, sp, #4
   2d3c0:	pop	{pc}		; (ldr pc, [sp], #4)

0002d3c4 <myhtml_tree_node_delete_recursive@@Base>:
   2d3c4:	strd	r4, [sp, #-16]!
   2d3c8:	subs	r5, r0, #0
   2d3cc:	str	r6, [sp, #8]
   2d3d0:	str	lr, [sp, #12]
   2d3d4:	beq	2d420 <myhtml_tree_node_delete_recursive@@Base+0x5c>
   2d3d8:	ldr	r4, [r5, #20]
   2d3dc:	cmp	r4, #0
   2d3e0:	beq	2d408 <myhtml_tree_node_delete_recursive@@Base+0x44>
   2d3e4:	ldr	r3, [r4, #20]
   2d3e8:	subs	r0, r3, #0
   2d3ec:	beq	2d3f4 <myhtml_tree_node_delete_recursive@@Base+0x30>
   2d3f0:	bl	2d384 <myhtml_tree_node_delete@@Base+0x2c>
   2d3f4:	ldr	r4, [r4, #16]
   2d3f8:	mov	r0, r4
   2d3fc:	bl	10d54 <myhtml_tree_node_delete@plt>
   2d400:	cmp	r4, #0
   2d404:	bne	2d3e4 <myhtml_tree_node_delete_recursive@@Base+0x20>
   2d408:	mov	r0, r5
   2d40c:	ldrd	r4, [sp]
   2d410:	ldr	r6, [sp, #8]
   2d414:	ldr	lr, [sp, #12]
   2d418:	add	sp, sp, #16
   2d41c:	b	10d54 <myhtml_tree_node_delete@plt>
   2d420:	ldrd	r4, [sp]
   2d424:	ldr	r6, [sp, #8]
   2d428:	add	sp, sp, #12
   2d42c:	pop	{pc}		; (ldr pc, [sp], #4)

0002d430 <myhtml_tree_node_clone@@Base>:
   2d430:	strd	r4, [sp, #-16]!
   2d434:	mov	r4, r0
   2d438:	ldr	r0, [r0, #40]	; 0x28
   2d43c:	str	r6, [sp, #8]
   2d440:	str	lr, [sp, #12]
   2d444:	bl	ff80 <myhtml_tree_node_create@plt>
   2d448:	ldr	r1, [r4, #32]
   2d44c:	mov	r5, r0
   2d450:	cmp	r1, #0
   2d454:	beq	2d468 <myhtml_tree_node_clone@@Base+0x38>
   2d458:	ldr	r3, [r4, #40]	; 0x28
   2d45c:	ldr	r0, [r3, #8]
   2d460:	bl	10610 <myhtml_token_node_wait_for_done@plt>
   2d464:	ldr	r1, [r4, #32]
   2d468:	ldr	r3, [r4, #40]	; 0x28
   2d46c:	ldr	r0, [r3, #8]
   2d470:	ldr	r2, [r3, #40]	; 0x28
   2d474:	ldr	r3, [r3, #44]	; 0x2c
   2d478:	bl	fecc <myhtml_token_node_clone@plt>
   2d47c:	str	r0, [r5, #32]
   2d480:	cmp	r0, #0
   2d484:	ldrd	r2, [r4, #4]
   2d488:	strd	r2, [r5, #4]
   2d48c:	beq	2d49c <myhtml_tree_node_clone@@Base+0x6c>
   2d490:	ldr	r3, [r0, #48]	; 0x30
   2d494:	orr	r3, r3, #4
   2d498:	str	r3, [r0, #48]	; 0x30
   2d49c:	mov	r0, r5
   2d4a0:	ldrd	r4, [sp]
   2d4a4:	ldr	r6, [sp, #8]
   2d4a8:	add	sp, sp, #12
   2d4ac:	pop	{pc}		; (ldr pc, [sp], #4)

0002d4b0 <myhtml_tree_node_insert_by_mode@@Base>:
   2d4b0:	cmp	r2, #0
   2d4b4:	beq	2d4c8 <myhtml_tree_node_insert_by_mode@@Base+0x18>
   2d4b8:	cmp	r2, #1
   2d4bc:	beq	2d4c4 <myhtml_tree_node_insert_by_mode@@Base+0x14>
   2d4c0:	b	102f8 <myhtml_tree_node_insert_after@plt>
   2d4c4:	b	10388 <myhtml_tree_node_insert_before@plt>
   2d4c8:	b	1064c <myhtml_tree_node_add_child@plt>

0002d4cc <myhtml_tree_node_insert_doctype@@Base>:
   2d4cc:	strd	r4, [sp, #-16]!
   2d4d0:	mov	r5, r1
   2d4d4:	str	r6, [sp, #8]
   2d4d8:	mov	r6, r0
   2d4dc:	str	lr, [sp, #12]
   2d4e0:	bl	ff80 <myhtml_tree_node_create@plt>
   2d4e4:	mov	r4, r0
   2d4e8:	mov	r2, #1
   2d4ec:	mov	r3, #3
   2d4f0:	mov	r1, r0
   2d4f4:	ldr	r0, [r6, #84]	; 0x54
   2d4f8:	str	r3, [r4, #4]
   2d4fc:	str	r2, [r4, #8]
   2d500:	str	r5, [r4, #32]
   2d504:	bl	1064c <myhtml_tree_node_add_child@plt>
   2d508:	mov	r0, r4
   2d50c:	ldrd	r4, [sp]
   2d510:	ldr	r6, [sp, #8]
   2d514:	add	sp, sp, #12
   2d518:	pop	{pc}		; (ldr pc, [sp], #4)

0002d51c <myhtml_tree_element_in_scope@@Base>:
   2d51c:	ldr	ip, [r0, #128]	; 0x80
   2d520:	strd	r4, [sp, #-32]!	; 0xffffffe0
   2d524:	ldr	r4, [ip]
   2d528:	ldr	r5, [ip, #4]
   2d52c:	strd	r6, [sp, #8]
   2d530:	strd	r8, [sp, #16]
   2d534:	str	sl, [sp, #24]
   2d538:	str	lr, [sp, #28]
   2d53c:	cmp	r5, #0
   2d540:	beq	2d610 <myhtml_tree_element_in_scope@@Base+0xf4>
   2d544:	cmp	r3, #128	; 0x80
   2d548:	mov	r8, r3
   2d54c:	add	r4, r4, r5, lsl #2
   2d550:	mov	r9, r2
   2d554:	mov	r7, r1
   2d558:	mov	r6, r0
   2d55c:	beq	2d618 <myhtml_tree_element_in_scope@@Base+0xfc>
   2d560:	cmp	r2, #0
   2d564:	bne	2d584 <myhtml_tree_element_in_scope@@Base+0x68>
   2d568:	b	2d5d0 <myhtml_tree_element_in_scope@@Base+0xb4>
   2d56c:	add	r2, r2, #4
   2d570:	ldr	r3, [r0, r2, lsl #2]
   2d574:	tst	r8, r3
   2d578:	bne	2d610 <myhtml_tree_element_in_scope@@Base+0xf4>
   2d57c:	cmp	r5, #0
   2d580:	beq	2d610 <myhtml_tree_element_in_scope@@Base+0xf4>
   2d584:	ldr	r3, [r4, #-4]!
   2d588:	sub	r5, r5, #1
   2d58c:	ldr	r0, [r6, #28]
   2d590:	ldr	r1, [r3, #4]
   2d594:	bl	109b8 <myhtml_tag_get_by_id@plt>
   2d598:	ldr	r3, [r4]
   2d59c:	ldr	r2, [r3, #4]
   2d5a0:	cmp	r7, r2
   2d5a4:	ldr	r2, [r3, #8]
   2d5a8:	bne	2d56c <myhtml_tree_element_in_scope@@Base+0x50>
   2d5ac:	cmp	r9, r2
   2d5b0:	bne	2d56c <myhtml_tree_element_in_scope@@Base+0x50>
   2d5b4:	ldrd	r4, [sp]
   2d5b8:	mov	r0, r3
   2d5bc:	ldrd	r6, [sp, #8]
   2d5c0:	ldrd	r8, [sp, #16]
   2d5c4:	ldr	sl, [sp, #24]
   2d5c8:	add	sp, sp, #28
   2d5cc:	pop	{pc}		; (ldr pc, [sp], #4)
   2d5d0:	ldr	r3, [r4, #-4]!
   2d5d4:	sub	r5, r5, #1
   2d5d8:	ldr	r0, [r6, #28]
   2d5dc:	ldr	r1, [r3, #4]
   2d5e0:	bl	109b8 <myhtml_tag_get_by_id@plt>
   2d5e4:	ldr	r3, [r4]
   2d5e8:	ldr	r2, [r3, #4]
   2d5ec:	cmp	r2, r7
   2d5f0:	beq	2d5b4 <myhtml_tree_element_in_scope@@Base+0x98>
   2d5f4:	ldr	r3, [r3, #8]
   2d5f8:	add	r3, r3, #4
   2d5fc:	ldr	r3, [r0, r3, lsl #2]
   2d600:	tst	r8, r3
   2d604:	bne	2d610 <myhtml_tree_element_in_scope@@Base+0xf4>
   2d608:	cmp	r5, #0
   2d60c:	bne	2d5d0 <myhtml_tree_element_in_scope@@Base+0xb4>
   2d610:	mov	r3, #0
   2d614:	b	2d5b4 <myhtml_tree_element_in_scope@@Base+0x98>
   2d618:	cmp	r2, #0
   2d61c:	bne	2d63c <myhtml_tree_element_in_scope@@Base+0x120>
   2d620:	b	2d68c <myhtml_tree_element_in_scope@@Base+0x170>
   2d624:	add	r2, r2, #4
   2d628:	ldr	r3, [r0, r2, lsl #2]
   2d62c:	tst	r3, #128	; 0x80
   2d630:	beq	2d610 <myhtml_tree_element_in_scope@@Base+0xf4>
   2d634:	cmp	r5, #0
   2d638:	beq	2d610 <myhtml_tree_element_in_scope@@Base+0xf4>
   2d63c:	ldr	r3, [r4, #-4]!
   2d640:	sub	r5, r5, #1
   2d644:	ldr	r0, [r6, #28]
   2d648:	ldr	r1, [r3, #4]
   2d64c:	bl	109b8 <myhtml_tag_get_by_id@plt>
   2d650:	ldr	r3, [r4]
   2d654:	ldr	r2, [r3, #4]
   2d658:	cmp	r7, r2
   2d65c:	ldr	r2, [r3, #8]
   2d660:	bne	2d624 <myhtml_tree_element_in_scope@@Base+0x108>
   2d664:	cmp	r9, r2
   2d668:	bne	2d624 <myhtml_tree_element_in_scope@@Base+0x108>
   2d66c:	b	2d5b4 <myhtml_tree_element_in_scope@@Base+0x98>
   2d670:	ldr	r3, [r3, #8]
   2d674:	add	r3, r3, #4
   2d678:	ldr	r3, [r0, r3, lsl #2]
   2d67c:	tst	r3, #128	; 0x80
   2d680:	beq	2d610 <myhtml_tree_element_in_scope@@Base+0xf4>
   2d684:	cmp	r5, #0
   2d688:	beq	2d610 <myhtml_tree_element_in_scope@@Base+0xf4>
   2d68c:	ldr	r3, [r4, #-4]!
   2d690:	sub	r5, r5, #1
   2d694:	ldr	r0, [r6, #28]
   2d698:	ldr	r1, [r3, #4]
   2d69c:	bl	109b8 <myhtml_tag_get_by_id@plt>
   2d6a0:	ldr	r3, [r4]
   2d6a4:	ldr	r2, [r3, #4]
   2d6a8:	cmp	r2, r7
   2d6ac:	bne	2d670 <myhtml_tree_element_in_scope@@Base+0x154>
   2d6b0:	b	2d5b4 <myhtml_tree_element_in_scope@@Base+0x98>

0002d6b4 <myhtml_tree_element_in_scope_by_node@@Base>:
   2d6b4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2d6b8:	strd	r6, [sp, #8]
   2d6bc:	ldr	r7, [r0, #40]	; 0x28
   2d6c0:	str	r8, [sp, #16]
   2d6c4:	str	lr, [sp, #20]
   2d6c8:	ldr	r3, [r7, #128]	; 0x80
   2d6cc:	ldr	r4, [r3]
   2d6d0:	ldr	r5, [r3, #4]
   2d6d4:	cmp	r5, #0
   2d6d8:	beq	2d778 <myhtml_tree_element_in_scope_by_node@@Base+0xc4>
   2d6dc:	cmp	r1, #128	; 0x80
   2d6e0:	mov	r8, r1
   2d6e4:	add	r4, r4, r5, lsl #2
   2d6e8:	mov	r6, r0
   2d6ec:	bne	2d710 <myhtml_tree_element_in_scope_by_node@@Base+0x5c>
   2d6f0:	b	2d754 <myhtml_tree_element_in_scope_by_node@@Base+0xa0>
   2d6f4:	ldr	r3, [r3, #8]
   2d6f8:	add	r3, r3, #4
   2d6fc:	ldr	r3, [r0, r3, lsl #2]
   2d700:	tst	r8, r3
   2d704:	bne	2d778 <myhtml_tree_element_in_scope_by_node@@Base+0xc4>
   2d708:	cmp	r5, #0
   2d70c:	beq	2d778 <myhtml_tree_element_in_scope_by_node@@Base+0xc4>
   2d710:	ldr	r3, [r4, #-4]!
   2d714:	sub	r5, r5, #1
   2d718:	ldr	r0, [r7, #28]
   2d71c:	ldr	r1, [r3, #4]
   2d720:	bl	109b8 <myhtml_tag_get_by_id@plt>
   2d724:	ldr	r3, [r4]
   2d728:	cmp	r3, r6
   2d72c:	bne	2d6f4 <myhtml_tree_element_in_scope_by_node@@Base+0x40>
   2d730:	mov	r0, #1
   2d734:	b	2d77c <myhtml_tree_element_in_scope_by_node@@Base+0xc8>
   2d738:	ldr	r3, [r3, #8]
   2d73c:	add	r3, r3, #4
   2d740:	ldr	r3, [r0, r3, lsl #2]
   2d744:	tst	r3, #128	; 0x80
   2d748:	beq	2d778 <myhtml_tree_element_in_scope_by_node@@Base+0xc4>
   2d74c:	cmp	r5, #0
   2d750:	beq	2d778 <myhtml_tree_element_in_scope_by_node@@Base+0xc4>
   2d754:	ldr	r3, [r4, #-4]!
   2d758:	sub	r5, r5, #1
   2d75c:	ldr	r0, [r7, #28]
   2d760:	ldr	r1, [r3, #4]
   2d764:	bl	109b8 <myhtml_tag_get_by_id@plt>
   2d768:	ldr	r3, [r4]
   2d76c:	cmp	r3, r6
   2d770:	bne	2d738 <myhtml_tree_element_in_scope_by_node@@Base+0x84>
   2d774:	b	2d730 <myhtml_tree_element_in_scope_by_node@@Base+0x7c>
   2d778:	mov	r0, #0
   2d77c:	ldrd	r4, [sp]
   2d780:	ldrd	r6, [sp, #8]
   2d784:	ldr	r8, [sp, #16]
   2d788:	add	sp, sp, #20
   2d78c:	pop	{pc}		; (ldr pc, [sp], #4)

0002d790 <myhtml_tree_list_init@@Base>:
   2d790:	mov	r0, #12
   2d794:	str	r4, [sp, #-8]!
   2d798:	str	lr, [sp, #4]
   2d79c:	bl	10c28 <mycore_malloc@plt>
   2d7a0:	mov	r4, r0
   2d7a4:	mov	r2, #0
   2d7a8:	mov	r3, #4096	; 0x1000
   2d7ac:	mov	r0, #16384	; 0x4000
   2d7b0:	str	r2, [r4, #4]
   2d7b4:	str	r3, [r4, #8]
   2d7b8:	bl	10c28 <mycore_malloc@plt>
   2d7bc:	str	r0, [r4]
   2d7c0:	mov	r0, r4
   2d7c4:	ldr	r4, [sp]
   2d7c8:	add	sp, sp, #4
   2d7cc:	pop	{pc}		; (ldr pc, [sp], #4)

0002d7d0 <myhtml_tree_list_clean@@Base>:
   2d7d0:	mov	r3, #0
   2d7d4:	str	r3, [r0, #4]
   2d7d8:	bx	lr

0002d7dc <myhtml_tree_list_destroy@@Base>:
   2d7dc:	strd	r4, [sp, #-16]!
   2d7e0:	subs	r4, r0, #0
   2d7e4:	str	r6, [sp, #8]
   2d7e8:	str	lr, [sp, #12]
   2d7ec:	beq	2d80c <myhtml_tree_list_destroy@@Base+0x30>
   2d7f0:	ldr	r0, [r4]
   2d7f4:	mov	r5, r1
   2d7f8:	cmp	r0, #0
   2d7fc:	beq	2d804 <myhtml_tree_list_destroy@@Base+0x28>
   2d800:	bl	10d60 <mycore_free@plt>
   2d804:	cmp	r5, #0
   2d808:	bne	2d820 <myhtml_tree_list_destroy@@Base+0x44>
   2d80c:	mov	r0, r4
   2d810:	ldrd	r4, [sp]
   2d814:	ldr	r6, [sp, #8]
   2d818:	add	sp, sp, #12
   2d81c:	pop	{pc}		; (ldr pc, [sp], #4)
   2d820:	mov	r0, r4
   2d824:	mov	r4, #0
   2d828:	bl	10d60 <mycore_free@plt>
   2d82c:	b	2d80c <myhtml_tree_list_destroy@@Base+0x30>

0002d830 <myhtml_tree_list_append@@Base>:
   2d830:	strd	r4, [sp, #-16]!
   2d834:	mov	r5, r1
   2d838:	mov	r4, r0
   2d83c:	ldr	r3, [r0, #4]
   2d840:	ldr	r1, [r0, #8]
   2d844:	ldr	r0, [r0]
   2d848:	str	r6, [sp, #8]
   2d84c:	str	lr, [sp, #12]
   2d850:	cmp	r3, r1
   2d854:	bcs	2d87c <myhtml_tree_list_append@@Base+0x4c>
   2d858:	ldr	r2, [r4, #4]
   2d85c:	ldr	r3, [r4, #4]
   2d860:	ldr	r6, [sp, #8]
   2d864:	str	r5, [r0, r2, lsl #2]
   2d868:	add	r3, r3, #1
   2d86c:	str	r3, [r4, #4]
   2d870:	ldrd	r4, [sp]
   2d874:	add	sp, sp, #12
   2d878:	pop	{pc}		; (ldr pc, [sp], #4)
   2d87c:	lsl	r3, r1, #1
   2d880:	lsl	r1, r1, #3
   2d884:	str	r3, [r4, #8]
   2d888:	bl	fb84 <mycore_realloc@plt>
   2d88c:	cmp	r0, #0
   2d890:	ldreq	r0, [r4]
   2d894:	strne	r0, [r4]
   2d898:	b	2d858 <myhtml_tree_list_append@@Base+0x28>

0002d89c <myhtml_tree_list_insert_by_index@@Base>:
   2d89c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2d8a0:	mov	r4, r0
   2d8a4:	mov	r5, r1
   2d8a8:	ldr	r0, [r0, #4]
   2d8ac:	ldr	r1, [r4]
   2d8b0:	ldr	r3, [r4, #8]
   2d8b4:	strd	r6, [sp, #8]
   2d8b8:	mov	r7, r2
   2d8bc:	str	r8, [sp, #16]
   2d8c0:	str	lr, [sp, #20]
   2d8c4:	cmp	r0, r3
   2d8c8:	bcs	2d918 <myhtml_tree_list_insert_by_index@@Base+0x7c>
   2d8cc:	ldr	r3, [r4, #4]
   2d8d0:	add	r0, r7, #1
   2d8d4:	lsl	r0, r0, #2
   2d8d8:	sub	r6, r0, #4
   2d8dc:	add	r0, r1, r0
   2d8e0:	add	r1, r1, r6
   2d8e4:	sub	r2, r3, r7
   2d8e8:	lsl	r2, r2, #2
   2d8ec:	bl	fe18 <memmove@plt>
   2d8f0:	ldr	r2, [r4]
   2d8f4:	ldr	r3, [r4, #4]
   2d8f8:	ldr	r8, [sp, #16]
   2d8fc:	str	r5, [r2, r6]
   2d900:	ldrd	r6, [sp, #8]
   2d904:	add	r3, r3, #1
   2d908:	str	r3, [r4, #4]
   2d90c:	ldrd	r4, [sp]
   2d910:	add	sp, sp, #20
   2d914:	pop	{pc}		; (ldr pc, [sp], #4)
   2d918:	lsl	r2, r3, #1
   2d91c:	mov	r0, r1
   2d920:	lsl	r1, r3, #3
   2d924:	str	r2, [r4, #8]
   2d928:	bl	fb84 <mycore_realloc@plt>
   2d92c:	subs	r1, r0, #0
   2d930:	ldreq	r1, [r4]
   2d934:	strne	r1, [r4]
   2d938:	b	2d8cc <myhtml_tree_list_insert_by_index@@Base+0x30>

0002d93c <myhtml_tree_list_append_after_index@@Base>:
   2d93c:	add	r2, r2, #1
   2d940:	b	10250 <myhtml_tree_list_insert_by_index@plt>

0002d944 <myhtml_tree_list_current_node@@Base>:
   2d944:	ldr	r3, [r0, #4]
   2d948:	cmp	r3, #0
   2d94c:	beq	2d964 <myhtml_tree_list_current_node@@Base+0x20>
   2d950:	ldr	r2, [r0]
   2d954:	ldr	r3, [r0, #4]
   2d958:	sub	r3, r3, #-1073741823	; 0xc0000001
   2d95c:	ldr	r0, [r2, r3, lsl #2]
   2d960:	bx	lr
   2d964:	mov	r0, r3
   2d968:	bx	lr

0002d96c <myhtml_tree_open_elements_init@@Base>:
   2d96c:	b	107f0 <myhtml_tree_list_init@plt>

0002d970 <myhtml_tree_open_elements_clean@@Base>:
   2d970:	ldr	r3, [r0, #128]	; 0x80
   2d974:	mov	r2, #0
   2d978:	str	r2, [r3, #4]
   2d97c:	bx	lr

0002d980 <myhtml_tree_open_elements_destroy@@Base>:
   2d980:	mov	r1, #1
   2d984:	ldr	r0, [r0, #128]	; 0x80
   2d988:	b	10688 <myhtml_tree_list_destroy@plt>

0002d98c <myhtml_tree_current_node@@Base>:
   2d98c:	ldr	r3, [r0, #128]	; 0x80
   2d990:	ldr	r0, [r3, #4]
   2d994:	cmp	r0, #0
   2d998:	beq	2d9ac <myhtml_tree_current_node@@Base+0x20>
   2d99c:	ldr	r1, [r3]
   2d9a0:	ldr	r2, [r3, #4]
   2d9a4:	sub	r3, r2, #-1073741823	; 0xc0000001
   2d9a8:	ldr	r0, [r1, r3, lsl #2]
   2d9ac:	bx	lr

0002d9b0 <myhtml_tree_adjusted_current_node@@Base>:
   2d9b0:	ldr	r3, [r0, #128]	; 0x80
   2d9b4:	ldr	r3, [r3, #4]
   2d9b8:	cmp	r3, #1
   2d9bc:	bne	2d9d4 <myhtml_tree_adjusted_current_node@@Base+0x24>
   2d9c0:	ldr	r3, [r0, #88]	; 0x58
   2d9c4:	cmp	r3, #0
   2d9c8:	beq	2d9d4 <myhtml_tree_adjusted_current_node@@Base+0x24>
   2d9cc:	mov	r0, r3
   2d9d0:	bx	lr
   2d9d4:	b	105bc <myhtml_tree_current_node@plt>

0002d9d8 <myhtml_tree_open_elements_append@@Base>:
   2d9d8:	ldr	r0, [r0, #128]	; 0x80
   2d9dc:	b	101c0 <myhtml_tree_list_append@plt>

0002d9e0 <myhtml_tree_node_insert_root@@Base>:
   2d9e0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2d9e4:	mov	r5, r0
   2d9e8:	strd	r6, [sp, #8]
   2d9ec:	mov	r6, r1
   2d9f0:	mov	r7, r2
   2d9f4:	str	r8, [sp, #16]
   2d9f8:	str	lr, [sp, #20]
   2d9fc:	bl	ff80 <myhtml_tree_node_create@plt>
   2da00:	cmp	r6, #0
   2da04:	mov	r4, r0
   2da08:	ldrne	r3, [r6]
   2da0c:	moveq	r3, #65	; 0x41
   2da10:	mov	r1, r0
   2da14:	ldr	r0, [r5, #84]	; 0x54
   2da18:	stmib	r4, {r3, r7}
   2da1c:	str	r6, [r4, #32]
   2da20:	bl	1064c <myhtml_tree_node_add_child@plt>
   2da24:	mov	r0, r5
   2da28:	mov	r1, r4
   2da2c:	bl	1091c <myhtml_tree_open_elements_append@plt>
   2da30:	mov	r0, r4
   2da34:	ldrd	r6, [sp, #8]
   2da38:	ldr	r8, [sp, #16]
   2da3c:	str	r4, [r5, #96]	; 0x60
   2da40:	ldrd	r4, [sp]
   2da44:	add	sp, sp, #20
   2da48:	pop	{pc}		; (ldr pc, [sp], #4)

0002da4c <myhtml_tree_open_elements_append_after_index@@Base>:
   2da4c:	ldr	r0, [r0, #128]	; 0x80
   2da50:	b	10958 <myhtml_tree_list_append_after_index@plt>

0002da54 <myhtml_tree_open_elements_pop@@Base>:
   2da54:	ldr	r3, [r0, #128]	; 0x80
   2da58:	ldr	r2, [r3, #4]
   2da5c:	cmp	r2, #0
   2da60:	beq	2da70 <myhtml_tree_open_elements_pop@@Base+0x1c>
   2da64:	ldr	r2, [r3, #4]
   2da68:	sub	r2, r2, #1
   2da6c:	str	r2, [r3, #4]
   2da70:	bx	lr

0002da74 <myhtml_tree_open_elements_remove@@Base>:
   2da74:	strd	r4, [sp, #-16]!
   2da78:	str	r6, [sp, #8]
   2da7c:	ldr	r6, [r0, #128]	; 0x80
   2da80:	str	lr, [sp, #12]
   2da84:	ldr	r5, [r6]
   2da88:	ldr	r3, [r6, #4]
   2da8c:	cmp	r3, #0
   2da90:	beq	2daf4 <myhtml_tree_open_elements_remove@@Base+0x80>
   2da94:	sub	ip, r3, #1
   2da98:	ldr	r2, [r5, ip, lsl #2]
   2da9c:	add	lr, r5, ip, lsl #2
   2daa0:	cmp	r1, r2
   2daa4:	beq	2db04 <myhtml_tree_open_elements_remove@@Base+0x90>
   2daa8:	cmp	ip, #0
   2daac:	beq	2daf4 <myhtml_tree_open_elements_remove@@Base+0x80>
   2dab0:	sub	r2, r3, #2
   2dab4:	ldr	r4, [r5, r2, lsl #2]
   2dab8:	add	lr, r5, r2, lsl #2
   2dabc:	cmp	r1, r4
   2dac0:	subne	r3, r3, #-1073741821	; 0xc0000003
   2dac4:	addne	r3, r5, r3, lsl #2
   2dac8:	bne	2dae8 <myhtml_tree_open_elements_remove@@Base+0x74>
   2dacc:	b	2db44 <myhtml_tree_open_elements_remove@@Base+0xd0>
   2dad0:	ldr	r4, [lr]
   2dad4:	sub	r3, r3, #4
   2dad8:	sub	ip, r2, #1
   2dadc:	cmp	r4, r1
   2dae0:	beq	2db08 <myhtml_tree_open_elements_remove@@Base+0x94>
   2dae4:	mov	r2, ip
   2dae8:	cmp	r2, #0
   2daec:	mov	lr, r3
   2daf0:	bne	2dad0 <myhtml_tree_open_elements_remove@@Base+0x5c>
   2daf4:	ldrd	r4, [sp]
   2daf8:	ldr	r6, [sp, #8]
   2dafc:	add	sp, sp, #12
   2db00:	pop	{pc}		; (ldr pc, [sp], #4)
   2db04:	mov	r2, r3
   2db08:	ldr	r3, [r6, #4]
   2db0c:	add	r1, r5, r2, lsl #2
   2db10:	mov	r4, r0
   2db14:	mov	r0, lr
   2db18:	sub	r2, r3, ip
   2db1c:	lsl	r2, r2, #2
   2db20:	bl	fe18 <memmove@plt>
   2db24:	ldr	r2, [r4, #128]	; 0x80
   2db28:	ldrd	r4, [sp]
   2db2c:	ldr	r6, [sp, #8]
   2db30:	add	sp, sp, #12
   2db34:	ldr	r3, [r2, #4]
   2db38:	sub	r3, r3, #1
   2db3c:	str	r3, [r2, #4]
   2db40:	pop	{pc}		; (ldr pc, [sp], #4)
   2db44:	mov	r3, ip
   2db48:	mov	ip, r2
   2db4c:	mov	r2, r3
   2db50:	b	2db08 <myhtml_tree_open_elements_remove@@Base+0x94>

0002db54 <myhtml_tree_open_elements_pop_until@@Base>:
   2db54:	ldr	r0, [r0, #128]	; 0x80
   2db58:	cmp	r2, #0
   2db5c:	push	{lr}		; (str lr, [sp, #-4]!)
   2db60:	ldr	lr, [r0]
   2db64:	beq	2dbc0 <myhtml_tree_open_elements_pop_until@@Base+0x6c>
   2db68:	ldr	ip, [r0, #4]
   2db6c:	cmp	ip, #0
   2db70:	beq	2dbbc <myhtml_tree_open_elements_pop_until@@Base+0x68>
   2db74:	ldr	ip, [r0, #4]
   2db78:	sub	ip, ip, #1
   2db7c:	str	ip, [r0, #4]
   2db80:	ldr	ip, [r0, #4]
   2db84:	ldr	ip, [lr, ip, lsl #2]
   2db88:	ldr	ip, [ip, #4]
   2db8c:	cmp	r1, ip
   2db90:	bne	2db68 <myhtml_tree_open_elements_pop_until@@Base+0x14>
   2db94:	ldr	ip, [r0, #4]
   2db98:	ldr	ip, [lr, ip, lsl #2]
   2db9c:	ldr	ip, [ip, #8]
   2dba0:	cmp	r2, ip
   2dba4:	bne	2db68 <myhtml_tree_open_elements_pop_until@@Base+0x14>
   2dba8:	cmp	r3, #0
   2dbac:	beq	2dbbc <myhtml_tree_open_elements_pop_until@@Base+0x68>
   2dbb0:	ldr	r3, [r0, #4]
   2dbb4:	add	r3, r3, #1
   2dbb8:	str	r3, [r0, #4]
   2dbbc:	pop	{pc}		; (ldr pc, [sp], #4)
   2dbc0:	ldr	r2, [r0, #4]
   2dbc4:	cmp	r2, #0
   2dbc8:	beq	2dbbc <myhtml_tree_open_elements_pop_until@@Base+0x68>
   2dbcc:	ldr	r2, [r0, #4]
   2dbd0:	sub	r2, r2, #1
   2dbd4:	str	r2, [r0, #4]
   2dbd8:	ldr	r2, [r0, #4]
   2dbdc:	ldr	r2, [lr, r2, lsl #2]
   2dbe0:	ldr	r2, [r2, #4]
   2dbe4:	cmp	r2, r1
   2dbe8:	bne	2dbc0 <myhtml_tree_open_elements_pop_until@@Base+0x6c>
   2dbec:	cmp	r3, #0
   2dbf0:	beq	2dbbc <myhtml_tree_open_elements_pop_until@@Base+0x68>
   2dbf4:	b	2dbb0 <myhtml_tree_open_elements_pop_until@@Base+0x5c>

0002dbf8 <myhtml_tree_open_elements_pop_until_by_node@@Base>:
   2dbf8:	ldr	r3, [r0, #128]	; 0x80
   2dbfc:	ldr	ip, [r3]
   2dc00:	b	2dc20 <myhtml_tree_open_elements_pop_until_by_node@@Base+0x28>
   2dc04:	ldr	r0, [r3, #4]
   2dc08:	sub	r0, r0, #1
   2dc0c:	str	r0, [r3, #4]
   2dc10:	ldr	r0, [r3, #4]
   2dc14:	ldr	r0, [ip, r0, lsl #2]
   2dc18:	cmp	r0, r1
   2dc1c:	beq	2dc30 <myhtml_tree_open_elements_pop_until_by_node@@Base+0x38>
   2dc20:	ldr	r0, [r3, #4]
   2dc24:	cmp	r0, #0
   2dc28:	bne	2dc04 <myhtml_tree_open_elements_pop_until_by_node@@Base+0xc>
   2dc2c:	bx	lr
   2dc30:	cmp	r2, #0
   2dc34:	beq	2dc2c <myhtml_tree_open_elements_pop_until_by_node@@Base+0x34>
   2dc38:	ldr	r2, [r3, #4]
   2dc3c:	add	r2, r2, #1
   2dc40:	str	r2, [r3, #4]
   2dc44:	bx	lr

0002dc48 <myhtml_tree_open_elements_pop_until_by_index@@Base>:
   2dc48:	ldr	r3, [r0, #128]	; 0x80
   2dc4c:	b	2dc68 <myhtml_tree_open_elements_pop_until_by_index@@Base+0x20>
   2dc50:	ldr	r0, [r3, #4]
   2dc54:	sub	r0, r0, #1
   2dc58:	str	r0, [r3, #4]
   2dc5c:	ldr	r0, [r3, #4]
   2dc60:	cmp	r0, r1
   2dc64:	beq	2dc78 <myhtml_tree_open_elements_pop_until_by_index@@Base+0x30>
   2dc68:	ldr	r0, [r3, #4]
   2dc6c:	cmp	r0, #0
   2dc70:	bne	2dc50 <myhtml_tree_open_elements_pop_until_by_index@@Base+0x8>
   2dc74:	bx	lr
   2dc78:	cmp	r2, #0
   2dc7c:	beq	2dc74 <myhtml_tree_open_elements_pop_until_by_index@@Base+0x2c>
   2dc80:	ldr	r2, [r3, #4]
   2dc84:	add	r2, r2, #1
   2dc88:	str	r2, [r3, #4]
   2dc8c:	bx	lr

0002dc90 <myhtml_tree_open_elements_find_reverse@@Base>:
   2dc90:	ldr	r3, [r0, #128]	; 0x80
   2dc94:	ldr	ip, [r3]
   2dc98:	ldr	r0, [r3, #4]
   2dc9c:	cmp	r0, #0
   2dca0:	bxeq	lr
   2dca4:	sub	r3, r0, #1
   2dca8:	push	{lr}		; (str lr, [sp, #-4]!)
   2dcac:	ldr	lr, [ip, r3, lsl #2]
   2dcb0:	cmp	r1, lr
   2dcb4:	beq	2dcf4 <myhtml_tree_open_elements_find_reverse@@Base+0x64>
   2dcb8:	cmp	r3, #0
   2dcbc:	beq	2dcec <myhtml_tree_open_elements_find_reverse@@Base+0x5c>
   2dcc0:	sub	r3, r0, #2
   2dcc4:	ldr	r0, [ip, r3, lsl #2]
   2dcc8:	cmp	r1, r0
   2dccc:	bne	2dce4 <myhtml_tree_open_elements_find_reverse@@Base+0x54>
   2dcd0:	b	2dcf4 <myhtml_tree_open_elements_find_reverse@@Base+0x64>
   2dcd4:	sub	r3, r3, #1
   2dcd8:	ldr	r0, [ip, r3, lsl #2]
   2dcdc:	cmp	r0, r1
   2dce0:	beq	2dcf4 <myhtml_tree_open_elements_find_reverse@@Base+0x64>
   2dce4:	cmp	r3, #0
   2dce8:	bne	2dcd4 <myhtml_tree_open_elements_find_reverse@@Base+0x44>
   2dcec:	mov	r0, r3
   2dcf0:	pop	{pc}		; (ldr pc, [sp], #4)
   2dcf4:	cmp	r2, #0
   2dcf8:	mov	r0, #1
   2dcfc:	strne	r3, [r2]
   2dd00:	pop	{pc}		; (ldr pc, [sp], #4)

0002dd04 <myhtml_tree_open_elements_find@@Base>:
   2dd04:	push	{lr}		; (str lr, [sp, #-4]!)
   2dd08:	ldr	lr, [r0, #128]	; 0x80
   2dd0c:	ldr	r0, [lr]
   2dd10:	ldr	r3, [lr, #4]
   2dd14:	cmp	r3, #0
   2dd18:	beq	2dd4c <myhtml_tree_open_elements_find@@Base+0x48>
   2dd1c:	ldr	r3, [r0]
   2dd20:	cmp	r1, r3
   2dd24:	movne	r3, #0
   2dd28:	bne	2dd3c <myhtml_tree_open_elements_find@@Base+0x38>
   2dd2c:	b	2dd54 <myhtml_tree_open_elements_find@@Base+0x50>
   2dd30:	ldr	ip, [r0, #4]!
   2dd34:	cmp	ip, r1
   2dd38:	beq	2dd58 <myhtml_tree_open_elements_find@@Base+0x54>
   2dd3c:	ldr	ip, [lr, #4]
   2dd40:	add	r3, r3, #1
   2dd44:	cmp	ip, r3
   2dd48:	bhi	2dd30 <myhtml_tree_open_elements_find@@Base+0x2c>
   2dd4c:	mov	r0, #0
   2dd50:	pop	{pc}		; (ldr pc, [sp], #4)
   2dd54:	mov	r3, #0
   2dd58:	cmp	r2, #0
   2dd5c:	mov	r0, #1
   2dd60:	strne	r3, [r2]
   2dd64:	pop	{pc}		; (ldr pc, [sp], #4)

0002dd68 <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base>:
   2dd68:	ldr	r0, [r0, #128]	; 0x80
   2dd6c:	str	r4, [sp, #-8]!
   2dd70:	ldr	ip, [r0, #4]
   2dd74:	str	lr, [sp, #4]
   2dd78:	ldr	lr, [r0]
   2dd7c:	cmp	ip, #0
   2dd80:	beq	2ddf0 <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base+0x88>
   2dd84:	cmp	r2, #0
   2dd88:	add	lr, lr, ip, lsl #2
   2dd8c:	bne	2dd9c <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base+0x34>
   2dd90:	b	2ddd8 <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base+0x70>
   2dd94:	cmp	ip, #0
   2dd98:	beq	2ddf0 <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base+0x88>
   2dd9c:	ldr	r0, [lr, #-4]!
   2dda0:	sub	ip, ip, #1
   2dda4:	ldr	r4, [r0, #4]
   2dda8:	cmp	r4, r1
   2ddac:	bne	2dd94 <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base+0x2c>
   2ddb0:	ldr	r4, [r0, #8]
   2ddb4:	cmp	r2, r4
   2ddb8:	bne	2dd94 <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base+0x2c>
   2ddbc:	cmp	r3, #0
   2ddc0:	ldr	r4, [sp]
   2ddc4:	add	sp, sp, #4
   2ddc8:	strne	ip, [r3]
   2ddcc:	pop	{pc}		; (ldr pc, [sp], #4)
   2ddd0:	cmp	ip, #0
   2ddd4:	beq	2ddf0 <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base+0x88>
   2ddd8:	ldr	r0, [lr, #-4]!
   2dddc:	sub	ip, ip, #1
   2dde0:	ldr	r2, [r0, #4]
   2dde4:	cmp	r2, r1
   2dde8:	bne	2ddd0 <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base+0x68>
   2ddec:	b	2ddbc <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base+0x54>
   2ddf0:	ldr	r4, [sp]
   2ddf4:	add	sp, sp, #4
   2ddf8:	mov	r0, ip
   2ddfc:	pop	{pc}		; (ldr pc, [sp], #4)

0002de00 <myhtml_tree_open_elements_find_by_tag_idx@@Base>:
   2de00:	strd	r4, [sp, #-12]!
   2de04:	ldr	r5, [r0, #128]	; 0x80
   2de08:	ldr	r0, [r5, #4]
   2de0c:	str	lr, [sp, #8]
   2de10:	ldr	lr, [r5]
   2de14:	cmp	r0, #0
   2de18:	beq	2de64 <myhtml_tree_open_elements_find_by_tag_idx@@Base+0x64>
   2de1c:	cmp	r2, #0
   2de20:	sub	lr, lr, #4
   2de24:	beq	2de80 <myhtml_tree_open_elements_find_by_tag_idx@@Base+0x80>
   2de28:	mov	ip, #0
   2de2c:	b	2de40 <myhtml_tree_open_elements_find_by_tag_idx@@Base+0x40>
   2de30:	ldr	r0, [r5, #4]
   2de34:	add	ip, ip, #1
   2de38:	cmp	ip, r0
   2de3c:	bcs	2de70 <myhtml_tree_open_elements_find_by_tag_idx@@Base+0x70>
   2de40:	ldr	r0, [lr, #4]!
   2de44:	ldr	r4, [r0, #4]
   2de48:	cmp	r1, r4
   2de4c:	bne	2de30 <myhtml_tree_open_elements_find_by_tag_idx@@Base+0x30>
   2de50:	ldr	r4, [r0, #8]
   2de54:	cmp	r2, r4
   2de58:	bne	2de30 <myhtml_tree_open_elements_find_by_tag_idx@@Base+0x30>
   2de5c:	cmp	r3, #0
   2de60:	strne	ip, [r3]
   2de64:	ldrd	r4, [sp]
   2de68:	add	sp, sp, #8
   2de6c:	pop	{pc}		; (ldr pc, [sp], #4)
   2de70:	ldrd	r4, [sp]
   2de74:	add	sp, sp, #8
   2de78:	mov	r0, #0
   2de7c:	pop	{pc}		; (ldr pc, [sp], #4)
   2de80:	mov	ip, r2
   2de84:	b	2de98 <myhtml_tree_open_elements_find_by_tag_idx@@Base+0x98>
   2de88:	ldr	r2, [r5, #4]
   2de8c:	add	ip, ip, #1
   2de90:	cmp	r2, ip
   2de94:	bls	2de70 <myhtml_tree_open_elements_find_by_tag_idx@@Base+0x70>
   2de98:	ldr	r0, [lr, #4]!
   2de9c:	ldr	r2, [r0, #4]
   2dea0:	cmp	r2, r1
   2dea4:	bne	2de88 <myhtml_tree_open_elements_find_by_tag_idx@@Base+0x88>
   2dea8:	cmp	r3, #0
   2deac:	strne	ip, [r3]
   2deb0:	b	2de64 <myhtml_tree_open_elements_find_by_tag_idx@@Base+0x64>

0002deb4 <myhtml_tree_generate_implied_end_tags@@Base>:
   2deb4:	ldr	r3, [r0, #128]	; 0x80
   2deb8:	ldr	ip, [r3, #4]
   2debc:	cmp	ip, #0
   2dec0:	bxeq	lr
   2dec4:	ldr	r3, [r3, #4]
   2dec8:	cmp	r3, #0
   2decc:	bxeq	lr
   2ded0:	cmp	r2, #0
   2ded4:	strd	r4, [sp, #-16]!
   2ded8:	mov	r5, r1
   2dedc:	mov	r4, r0
   2dee0:	str	r6, [sp, #8]
   2dee4:	mov	r6, r2
   2dee8:	str	lr, [sp, #12]
   2deec:	beq	2e090 <myhtml_tree_generate_implied_end_tags@@Base+0x1dc>
   2def0:	mov	r0, r4
   2def4:	bl	105bc <myhtml_tree_current_node@plt>
   2def8:	mov	lr, r0
   2defc:	mov	r0, r4
   2df00:	ldr	ip, [lr, #4]
   2df04:	sub	r3, ip, #36	; 0x24
   2df08:	cmp	r3, #72	; 0x48
   2df0c:	addls	pc, pc, r3, lsl #2
   2df10:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2df14:	b	2e038 <myhtml_tree_generate_implied_end_tags@@Base+0x184>
   2df18:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2df1c:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2df20:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2df24:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2df28:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2df2c:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2df30:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2df34:	b	2e038 <myhtml_tree_generate_implied_end_tags@@Base+0x184>
   2df38:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2df3c:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2df40:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2df44:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2df48:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2df4c:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2df50:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2df54:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2df58:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2df5c:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2df60:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2df64:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2df68:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2df6c:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2df70:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2df74:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2df78:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2df7c:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2df80:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2df84:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2df88:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2df8c:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2df90:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2df94:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2df98:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2df9c:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2dfa0:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2dfa4:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2dfa8:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2dfac:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2dfb0:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2dfb4:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2dfb8:	b	2e038 <myhtml_tree_generate_implied_end_tags@@Base+0x184>
   2dfbc:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2dfc0:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2dfc4:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2dfc8:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2dfcc:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2dfd0:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2dfd4:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2dfd8:	b	2e038 <myhtml_tree_generate_implied_end_tags@@Base+0x184>
   2dfdc:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2dfe0:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2dfe4:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2dfe8:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2dfec:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2dff0:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2dff4:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2dff8:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2dffc:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2e000:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2e004:	b	2e038 <myhtml_tree_generate_implied_end_tags@@Base+0x184>
   2e008:	b	2e038 <myhtml_tree_generate_implied_end_tags@@Base+0x184>
   2e00c:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2e010:	b	2e038 <myhtml_tree_generate_implied_end_tags@@Base+0x184>
   2e014:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2e018:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2e01c:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2e020:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2e024:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2e028:	b	2e038 <myhtml_tree_generate_implied_end_tags@@Base+0x184>
   2e02c:	b	2e038 <myhtml_tree_generate_implied_end_tags@@Base+0x184>
   2e030:	b	2e038 <myhtml_tree_generate_implied_end_tags@@Base+0x184>
   2e034:	b	2e038 <myhtml_tree_generate_implied_end_tags@@Base+0x184>
   2e038:	cmp	r5, ip
   2e03c:	bne	2e04c <myhtml_tree_generate_implied_end_tags@@Base+0x198>
   2e040:	ldr	r3, [lr, #8]
   2e044:	cmp	r6, r3
   2e048:	beq	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2e04c:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   2e050:	ldr	r3, [r4, #128]	; 0x80
   2e054:	ldr	r3, [r3, #4]
   2e058:	cmp	r3, #0
   2e05c:	bne	2def0 <myhtml_tree_generate_implied_end_tags@@Base+0x3c>
   2e060:	ldrd	r4, [sp]
   2e064:	ldr	r6, [sp, #8]
   2e068:	add	sp, sp, #12
   2e06c:	pop	{pc}		; (ldr pc, [sp], #4)
   2e070:	cmp	r5, r3
   2e074:	beq	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2e078:	mov	r0, r4
   2e07c:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   2e080:	ldr	r3, [r4, #128]	; 0x80
   2e084:	ldr	r3, [r3, #4]
   2e088:	cmp	r3, #0
   2e08c:	beq	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2e090:	mov	r0, r4
   2e094:	bl	105bc <myhtml_tree_current_node@plt>
   2e098:	ldr	r3, [r0, #4]
   2e09c:	sub	r2, r3, #36	; 0x24
   2e0a0:	cmp	r2, #72	; 0x48
   2e0a4:	addls	pc, pc, r2, lsl #2
   2e0a8:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2e0ac:	b	2e070 <myhtml_tree_generate_implied_end_tags@@Base+0x1bc>
   2e0b0:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2e0b4:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2e0b8:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2e0bc:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2e0c0:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2e0c4:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2e0c8:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2e0cc:	b	2e070 <myhtml_tree_generate_implied_end_tags@@Base+0x1bc>
   2e0d0:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2e0d4:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2e0d8:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2e0dc:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2e0e0:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2e0e4:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2e0e8:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2e0ec:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2e0f0:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2e0f4:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2e0f8:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2e0fc:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2e100:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2e104:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2e108:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2e10c:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2e110:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2e114:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2e118:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2e11c:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2e120:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2e124:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2e128:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2e12c:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2e130:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2e134:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2e138:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2e13c:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2e140:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2e144:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2e148:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2e14c:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2e150:	b	2e070 <myhtml_tree_generate_implied_end_tags@@Base+0x1bc>
   2e154:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2e158:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2e15c:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2e160:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2e164:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2e168:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2e16c:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2e170:	b	2e070 <myhtml_tree_generate_implied_end_tags@@Base+0x1bc>
   2e174:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2e178:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2e17c:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2e180:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2e184:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2e188:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2e18c:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2e190:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2e194:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2e198:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2e19c:	b	2e070 <myhtml_tree_generate_implied_end_tags@@Base+0x1bc>
   2e1a0:	b	2e070 <myhtml_tree_generate_implied_end_tags@@Base+0x1bc>
   2e1a4:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2e1a8:	b	2e070 <myhtml_tree_generate_implied_end_tags@@Base+0x1bc>
   2e1ac:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2e1b0:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2e1b4:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2e1b8:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2e1bc:	b	2e060 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2e1c0:	b	2e070 <myhtml_tree_generate_implied_end_tags@@Base+0x1bc>
   2e1c4:	b	2e070 <myhtml_tree_generate_implied_end_tags@@Base+0x1bc>
   2e1c8:	b	2e070 <myhtml_tree_generate_implied_end_tags@@Base+0x1bc>
   2e1cc:	b	2e070 <myhtml_tree_generate_implied_end_tags@@Base+0x1bc>

0002e1d0 <myhtml_tree_generate_all_implied_end_tags@@Base>:
   2e1d0:	ldr	r3, [r0, #128]	; 0x80
   2e1d4:	ldr	ip, [r3, #4]
   2e1d8:	cmp	ip, #0
   2e1dc:	bxeq	lr
   2e1e0:	ldr	r3, [r3, #4]
   2e1e4:	cmp	r3, #0
   2e1e8:	bxeq	lr
   2e1ec:	cmp	r2, #0
   2e1f0:	strd	r4, [sp, #-16]!
   2e1f4:	mov	r5, r1
   2e1f8:	mov	r4, r0
   2e1fc:	str	r6, [sp, #8]
   2e200:	mov	r6, r2
   2e204:	str	lr, [sp, #12]
   2e208:	beq	2e43c <myhtml_tree_generate_all_implied_end_tags@@Base+0x26c>
   2e20c:	mov	r0, r4
   2e210:	bl	105bc <myhtml_tree_current_node@plt>
   2e214:	mov	lr, r0
   2e218:	mov	r0, r4
   2e21c:	ldr	ip, [lr, #4]
   2e220:	sub	r3, ip, #27
   2e224:	cmp	r3, #108	; 0x6c
   2e228:	addls	pc, pc, r3, lsl #2
   2e22c:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e230:	b	2e3e4 <myhtml_tree_generate_all_implied_end_tags@@Base+0x214>
   2e234:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e238:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e23c:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e240:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e244:	b	2e3e4 <myhtml_tree_generate_all_implied_end_tags@@Base+0x214>
   2e248:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e24c:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e250:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e254:	b	2e3e4 <myhtml_tree_generate_all_implied_end_tags@@Base+0x214>
   2e258:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e25c:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e260:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e264:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e268:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e26c:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e270:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e274:	b	2e3e4 <myhtml_tree_generate_all_implied_end_tags@@Base+0x214>
   2e278:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e27c:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e280:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e284:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e288:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e28c:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e290:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e294:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e298:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e29c:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e2a0:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e2a4:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e2a8:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e2ac:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e2b0:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e2b4:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e2b8:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e2bc:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e2c0:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e2c4:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e2c8:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e2cc:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e2d0:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e2d4:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e2d8:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e2dc:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e2e0:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e2e4:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e2e8:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e2ec:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e2f0:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e2f4:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e2f8:	b	2e3e4 <myhtml_tree_generate_all_implied_end_tags@@Base+0x214>
   2e2fc:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e300:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e304:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e308:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e30c:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e310:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e314:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e318:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e31c:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e320:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e324:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e328:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e32c:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e330:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e334:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e338:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e33c:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e340:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e344:	b	2e3e4 <myhtml_tree_generate_all_implied_end_tags@@Base+0x214>
   2e348:	b	2e3e4 <myhtml_tree_generate_all_implied_end_tags@@Base+0x214>
   2e34c:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e350:	b	2e3e4 <myhtml_tree_generate_all_implied_end_tags@@Base+0x214>
   2e354:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e358:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e35c:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e360:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e364:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e368:	b	2e3e4 <myhtml_tree_generate_all_implied_end_tags@@Base+0x214>
   2e36c:	b	2e3e4 <myhtml_tree_generate_all_implied_end_tags@@Base+0x214>
   2e370:	b	2e3e4 <myhtml_tree_generate_all_implied_end_tags@@Base+0x214>
   2e374:	b	2e3e4 <myhtml_tree_generate_all_implied_end_tags@@Base+0x214>
   2e378:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e37c:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e380:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e384:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e388:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e38c:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e390:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e394:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e398:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e39c:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e3a0:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e3a4:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e3a8:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e3ac:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e3b0:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e3b4:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e3b8:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e3bc:	b	2e3e4 <myhtml_tree_generate_all_implied_end_tags@@Base+0x214>
   2e3c0:	b	2e3e4 <myhtml_tree_generate_all_implied_end_tags@@Base+0x214>
   2e3c4:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e3c8:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e3cc:	b	2e3e4 <myhtml_tree_generate_all_implied_end_tags@@Base+0x214>
   2e3d0:	b	2e3e4 <myhtml_tree_generate_all_implied_end_tags@@Base+0x214>
   2e3d4:	b	2e3e4 <myhtml_tree_generate_all_implied_end_tags@@Base+0x214>
   2e3d8:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e3dc:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e3e0:	b	2e3e4 <myhtml_tree_generate_all_implied_end_tags@@Base+0x214>
   2e3e4:	cmp	r5, ip
   2e3e8:	bne	2e3f8 <myhtml_tree_generate_all_implied_end_tags@@Base+0x228>
   2e3ec:	ldr	r3, [lr, #8]
   2e3f0:	cmp	r6, r3
   2e3f4:	beq	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e3f8:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   2e3fc:	ldr	r3, [r4, #128]	; 0x80
   2e400:	ldr	r3, [r3, #4]
   2e404:	cmp	r3, #0
   2e408:	bne	2e20c <myhtml_tree_generate_all_implied_end_tags@@Base+0x3c>
   2e40c:	ldrd	r4, [sp]
   2e410:	ldr	r6, [sp, #8]
   2e414:	add	sp, sp, #12
   2e418:	pop	{pc}		; (ldr pc, [sp], #4)
   2e41c:	cmp	r3, r5
   2e420:	beq	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e424:	mov	r0, r4
   2e428:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   2e42c:	ldr	r3, [r4, #128]	; 0x80
   2e430:	ldr	r3, [r3, #4]
   2e434:	cmp	r3, #0
   2e438:	beq	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e43c:	mov	r0, r4
   2e440:	bl	105bc <myhtml_tree_current_node@plt>
   2e444:	ldr	r3, [r0, #4]
   2e448:	sub	r2, r3, #27
   2e44c:	cmp	r2, #108	; 0x6c
   2e450:	addls	pc, pc, r2, lsl #2
   2e454:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e458:	b	2e41c <myhtml_tree_generate_all_implied_end_tags@@Base+0x24c>
   2e45c:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e460:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e464:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e468:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e46c:	b	2e41c <myhtml_tree_generate_all_implied_end_tags@@Base+0x24c>
   2e470:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e474:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e478:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e47c:	b	2e41c <myhtml_tree_generate_all_implied_end_tags@@Base+0x24c>
   2e480:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e484:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e488:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e48c:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e490:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e494:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e498:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e49c:	b	2e41c <myhtml_tree_generate_all_implied_end_tags@@Base+0x24c>
   2e4a0:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e4a4:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e4a8:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e4ac:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e4b0:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e4b4:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e4b8:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e4bc:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e4c0:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e4c4:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e4c8:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e4cc:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e4d0:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e4d4:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e4d8:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e4dc:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e4e0:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e4e4:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e4e8:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e4ec:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e4f0:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e4f4:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e4f8:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e4fc:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e500:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e504:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e508:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e50c:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e510:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e514:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e518:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e51c:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e520:	b	2e41c <myhtml_tree_generate_all_implied_end_tags@@Base+0x24c>
   2e524:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e528:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e52c:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e530:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e534:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e538:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e53c:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e540:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e544:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e548:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e54c:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e550:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e554:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e558:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e55c:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e560:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e564:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e568:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e56c:	b	2e41c <myhtml_tree_generate_all_implied_end_tags@@Base+0x24c>
   2e570:	b	2e41c <myhtml_tree_generate_all_implied_end_tags@@Base+0x24c>
   2e574:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e578:	b	2e41c <myhtml_tree_generate_all_implied_end_tags@@Base+0x24c>
   2e57c:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e580:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e584:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e588:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e58c:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e590:	b	2e41c <myhtml_tree_generate_all_implied_end_tags@@Base+0x24c>
   2e594:	b	2e41c <myhtml_tree_generate_all_implied_end_tags@@Base+0x24c>
   2e598:	b	2e41c <myhtml_tree_generate_all_implied_end_tags@@Base+0x24c>
   2e59c:	b	2e41c <myhtml_tree_generate_all_implied_end_tags@@Base+0x24c>
   2e5a0:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e5a4:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e5a8:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e5ac:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e5b0:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e5b4:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e5b8:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e5bc:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e5c0:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e5c4:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e5c8:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e5cc:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e5d0:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e5d4:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e5d8:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e5dc:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e5e0:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e5e4:	b	2e41c <myhtml_tree_generate_all_implied_end_tags@@Base+0x24c>
   2e5e8:	b	2e41c <myhtml_tree_generate_all_implied_end_tags@@Base+0x24c>
   2e5ec:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e5f0:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e5f4:	b	2e41c <myhtml_tree_generate_all_implied_end_tags@@Base+0x24c>
   2e5f8:	b	2e41c <myhtml_tree_generate_all_implied_end_tags@@Base+0x24c>
   2e5fc:	b	2e41c <myhtml_tree_generate_all_implied_end_tags@@Base+0x24c>
   2e600:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e604:	b	2e40c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2e608:	b	2e41c <myhtml_tree_generate_all_implied_end_tags@@Base+0x24c>

0002e60c <myhtml_tree_reset_insertion_mode_appropriately@@Base>:
   2e60c:	ldr	r2, [r0, #128]	; 0x80
   2e610:	ldr	r3, [r2, #4]
   2e614:	cmp	r3, #0
   2e618:	bxeq	lr
   2e61c:	strd	r4, [sp, #-12]!
   2e620:	ldr	r4, [r2]
   2e624:	ldr	r3, [r2, #4]
   2e628:	str	lr, [sp, #8]
   2e62c:	cmp	r3, #0
   2e630:	beq	2e888 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x27c>
   2e634:	add	r2, r4, r3, lsl #2
   2e638:	subs	ip, r3, #1
   2e63c:	ldr	r1, [r2, #-4]!
   2e640:	beq	2e660 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x54>
   2e644:	ldr	lr, [r1, #8]
   2e648:	cmp	lr, #1
   2e64c:	beq	2e68c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x80>
   2e650:	mov	r3, ip
   2e654:	ldr	r1, [r2, #-4]!
   2e658:	subs	ip, r3, #1
   2e65c:	bne	2e644 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x38>
   2e660:	ldr	r5, [r0, #88]	; 0x58
   2e664:	cmp	r5, #0
   2e668:	beq	2e894 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x288>
   2e66c:	ldr	lr, [r5, #8]
   2e670:	cmp	lr, #1
   2e674:	beq	2e870 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x264>
   2e678:	mov	r3, #6
   2e67c:	str	r3, [r0, #168]	; 0xa8
   2e680:	ldrd	r4, [sp]
   2e684:	add	sp, sp, #8
   2e688:	pop	{pc}		; (ldr pc, [sp], #4)
   2e68c:	mov	lr, #0
   2e690:	ldr	r1, [r1, #4]
   2e694:	cmp	r1, #114	; 0x72
   2e698:	beq	2e944 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x338>
   2e69c:	sub	r1, r1, #23
   2e6a0:	cmp	r1, #112	; 0x70
   2e6a4:	addls	pc, pc, r1, lsl #2
   2e6a8:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e6ac:	b	2e678 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x6c>
   2e6b0:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e6b4:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e6b8:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e6bc:	b	2e8b0 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x2a4>
   2e6c0:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e6c4:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e6c8:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e6cc:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e6d0:	b	2e8bc <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x2b0>
   2e6d4:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e6d8:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e6dc:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e6e0:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e6e4:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e6e8:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e6ec:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e6f0:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e6f4:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e6f8:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e6fc:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e700:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e704:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e708:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e70c:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e710:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e714:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e718:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e71c:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e720:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e724:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e728:	b	2e8c8 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x2bc>
   2e72c:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e730:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e734:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e738:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e73c:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e740:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e744:	b	2e8d4 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x2c8>
   2e748:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e74c:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e750:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e754:	b	2e8e8 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x2dc>
   2e758:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e75c:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e760:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e764:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e768:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e76c:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e770:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e774:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e778:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e77c:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e780:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e784:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e788:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e78c:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e790:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e794:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e798:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e79c:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e7a0:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e7a4:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e7a8:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e7ac:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e7b0:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e7b4:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e7b8:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e7bc:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e7c0:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e7c4:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e7c8:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e7cc:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e7d0:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e7d4:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e7d8:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e7dc:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e7e0:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e7e4:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e7e8:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e7ec:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e7f0:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e7f4:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e7f8:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e7fc:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e800:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e804:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e808:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e80c:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e810:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e814:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e818:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e81c:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e820:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e824:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e828:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e82c:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e830:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e834:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e838:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e83c:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e840:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e844:	b	2e900 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x2f4>
   2e848:	b	2e90c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2e84c:	b	2e918 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x30c>
   2e850:	b	2e92c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x320>
   2e854:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e858:	b	2e90c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2e85c:	b	2e918 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x30c>
   2e860:	b	2e90c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2e864:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e868:	b	2e878 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2e86c:	b	2e8a4 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x298>
   2e870:	mov	r1, r5
   2e874:	b	2e690 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x84>
   2e878:	cmp	lr, #0
   2e87c:	bne	2e678 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x6c>
   2e880:	cmp	ip, #0
   2e884:	bne	2e650 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x44>
   2e888:	mov	r3, #0
   2e88c:	str	r3, [r0, #168]	; 0xa8
   2e890:	b	2e680 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x74>
   2e894:	ldr	lr, [r1, #8]
   2e898:	cmp	lr, #1
   2e89c:	bne	2e678 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x6c>
   2e8a0:	b	2e690 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x84>
   2e8a4:	mov	r3, #13
   2e8a8:	str	r3, [r0, #168]	; 0xa8
   2e8ac:	b	2e680 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x74>
   2e8b0:	mov	r3, #10
   2e8b4:	str	r3, [r0, #168]	; 0xa8
   2e8b8:	b	2e680 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x74>
   2e8bc:	mov	r3, #11
   2e8c0:	str	r3, [r0, #168]	; 0xa8
   2e8c4:	b	2e680 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x74>
   2e8c8:	mov	r3, #19
   2e8cc:	str	r3, [r0, #168]	; 0xa8
   2e8d0:	b	2e680 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x74>
   2e8d4:	cmp	lr, #0
   2e8d8:	moveq	r3, #3
   2e8dc:	streq	r3, [r0, #168]	; 0xa8
   2e8e0:	bne	2e678 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x6c>
   2e8e4:	b	2e680 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x74>
   2e8e8:	ldr	r3, [r0, #92]	; 0x5c
   2e8ec:	cmp	r3, #0
   2e8f0:	movne	r3, #5
   2e8f4:	moveq	r3, #2
   2e8f8:	str	r3, [r0, #168]	; 0xa8
   2e8fc:	b	2e680 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x74>
   2e900:	mov	r3, #8
   2e904:	str	r3, [r0, #168]	; 0xa8
   2e908:	b	2e680 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x74>
   2e90c:	mov	r3, #12
   2e910:	str	r3, [r0, #168]	; 0xa8
   2e914:	b	2e680 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x74>
   2e918:	cmp	lr, #0
   2e91c:	moveq	r3, #14
   2e920:	streq	r3, [r0, #168]	; 0xa8
   2e924:	bne	2e678 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x6c>
   2e928:	b	2e680 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x74>
   2e92c:	ldr	r2, [r0, #140]	; 0x8c
   2e930:	ldrd	r2, [r2]
   2e934:	sub	r3, r3, #-1073741823	; 0xc0000001
   2e938:	ldr	r3, [r2, r3, lsl #2]
   2e93c:	str	r3, [r0, #168]	; 0xa8
   2e940:	b	2e680 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x74>
   2e944:	cmp	lr, #0
   2e948:	bne	2e9c0 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x3b4>
   2e94c:	cmp	ip, #0
   2e950:	beq	2e9c0 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x3b4>
   2e954:	sub	r1, r3, #2
   2e958:	ldr	r2, [r4, r1, lsl #2]
   2e95c:	ldr	r2, [r2, #4]
   2e960:	cmp	r2, #128	; 0x80
   2e964:	beq	2e9c0 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x3b4>
   2e968:	cmp	r2, #125	; 0x7d
   2e96c:	beq	2e9b4 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x3a8>
   2e970:	cmp	r1, #0
   2e974:	beq	2e9c0 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x3b4>
   2e978:	sub	r3, r3, #3
   2e97c:	ldr	r2, [r4, r3, lsl #2]
   2e980:	ldr	r2, [r2, #4]
   2e984:	cmp	r2, #128	; 0x80
   2e988:	bne	2e9ac <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x3a0>
   2e98c:	b	2e9c0 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x3b4>
   2e990:	cmp	r3, #0
   2e994:	sub	r3, r3, #1
   2e998:	beq	2e9c0 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x3b4>
   2e99c:	ldr	r2, [r4, r3, lsl #2]
   2e9a0:	ldr	r2, [r2, #4]
   2e9a4:	cmp	r2, #128	; 0x80
   2e9a8:	beq	2e9c0 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x3b4>
   2e9ac:	cmp	r2, #125	; 0x7d
   2e9b0:	bne	2e990 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x384>
   2e9b4:	mov	r3, #16
   2e9b8:	str	r3, [r0, #168]	; 0xa8
   2e9bc:	b	2e680 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x74>
   2e9c0:	mov	r3, #15
   2e9c4:	str	r3, [r0, #168]	; 0xa8
   2e9c8:	b	2e680 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x74>

0002e9cc <myhtml_tree_active_formatting_init@@Base>:
   2e9cc:	b	107f0 <myhtml_tree_list_init@plt>

0002e9d0 <myhtml_tree_active_formatting_clean@@Base>:
   2e9d0:	ldr	r3, [r0, #124]	; 0x7c
   2e9d4:	mov	r2, #0
   2e9d8:	str	r2, [r3, #4]
   2e9dc:	bx	lr

0002e9e0 <myhtml_tree_active_formatting_destroy@@Base>:
   2e9e0:	mov	r1, #1
   2e9e4:	ldr	r0, [r0, #124]	; 0x7c
   2e9e8:	b	10688 <myhtml_tree_list_destroy@plt>

0002e9ec <myhtml_tree_active_formatting_is_marker@@Base>:
   2e9ec:	ldr	r3, [r0]
   2e9f0:	ldr	r3, [r3, #36]	; 0x24
   2e9f4:	cmp	r3, r1
   2e9f8:	beq	2ea4c <myhtml_tree_active_formatting_is_marker@@Base+0x60>
   2e9fc:	ldr	r0, [r1, #4]
   2ea00:	cmp	r0, #83	; 0x53
   2ea04:	beq	2ea4c <myhtml_tree_active_formatting_is_marker@@Base+0x60>
   2ea08:	bhi	2ea2c <myhtml_tree_active_formatting_is_marker@@Base+0x40>
   2ea0c:	cmp	r0, #25
   2ea10:	beq	2ea4c <myhtml_tree_active_formatting_is_marker@@Base+0x60>
   2ea14:	cmp	r0, #27
   2ea18:	beq	2ea4c <myhtml_tree_active_formatting_is_marker@@Base+0x60>
   2ea1c:	sub	r0, r0, #9
   2ea20:	clz	r0, r0
   2ea24:	lsr	r0, r0, #5
   2ea28:	bx	lr
   2ea2c:	cmp	r0, #127	; 0x7f
   2ea30:	beq	2ea4c <myhtml_tree_active_formatting_is_marker@@Base+0x60>
   2ea34:	cmp	r0, #131	; 0x83
   2ea38:	beq	2ea4c <myhtml_tree_active_formatting_is_marker@@Base+0x60>
   2ea3c:	sub	r0, r0, #94	; 0x5e
   2ea40:	clz	r0, r0
   2ea44:	lsr	r0, r0, #5
   2ea48:	bx	lr
   2ea4c:	mov	r0, #1
   2ea50:	bx	lr

0002ea54 <myhtml_tree_active_formatting_append@@Base>:
   2ea54:	ldr	r0, [r0, #124]	; 0x7c
   2ea58:	b	101c0 <myhtml_tree_list_append@plt>

0002ea5c <myhtml_tree_active_formatting_pop@@Base>:
   2ea5c:	ldr	r3, [r0, #124]	; 0x7c
   2ea60:	ldr	r2, [r3, #4]
   2ea64:	cmp	r2, #0
   2ea68:	beq	2ea78 <myhtml_tree_active_formatting_pop@@Base+0x1c>
   2ea6c:	ldr	r2, [r3, #4]
   2ea70:	sub	r2, r2, #1
   2ea74:	str	r2, [r3, #4]
   2ea78:	bx	lr

0002ea7c <myhtml_tree_active_formatting_remove@@Base>:
   2ea7c:	strd	r4, [sp, #-16]!
   2ea80:	str	r6, [sp, #8]
   2ea84:	ldr	r6, [r0, #124]	; 0x7c
   2ea88:	str	lr, [sp, #12]
   2ea8c:	ldr	r5, [r6]
   2ea90:	ldr	r3, [r6, #4]
   2ea94:	cmp	r3, #0
   2ea98:	beq	2eafc <myhtml_tree_active_formatting_remove@@Base+0x80>
   2ea9c:	sub	ip, r3, #1
   2eaa0:	ldr	r2, [r5, ip, lsl #2]
   2eaa4:	add	lr, r5, ip, lsl #2
   2eaa8:	cmp	r1, r2
   2eaac:	beq	2eb0c <myhtml_tree_active_formatting_remove@@Base+0x90>
   2eab0:	cmp	ip, #0
   2eab4:	beq	2eafc <myhtml_tree_active_formatting_remove@@Base+0x80>
   2eab8:	sub	r2, r3, #2
   2eabc:	ldr	r4, [r5, r2, lsl #2]
   2eac0:	add	lr, r5, r2, lsl #2
   2eac4:	cmp	r1, r4
   2eac8:	subne	r3, r3, #-1073741821	; 0xc0000003
   2eacc:	addne	r3, r5, r3, lsl #2
   2ead0:	bne	2eaf0 <myhtml_tree_active_formatting_remove@@Base+0x74>
   2ead4:	b	2eb4c <myhtml_tree_active_formatting_remove@@Base+0xd0>
   2ead8:	ldr	r4, [lr]
   2eadc:	sub	r3, r3, #4
   2eae0:	sub	ip, r2, #1
   2eae4:	cmp	r4, r1
   2eae8:	beq	2eb10 <myhtml_tree_active_formatting_remove@@Base+0x94>
   2eaec:	mov	r2, ip
   2eaf0:	cmp	r2, #0
   2eaf4:	mov	lr, r3
   2eaf8:	bne	2ead8 <myhtml_tree_active_formatting_remove@@Base+0x5c>
   2eafc:	ldrd	r4, [sp]
   2eb00:	ldr	r6, [sp, #8]
   2eb04:	add	sp, sp, #12
   2eb08:	pop	{pc}		; (ldr pc, [sp], #4)
   2eb0c:	mov	r2, r3
   2eb10:	ldr	r3, [r6, #4]
   2eb14:	add	r1, r5, r2, lsl #2
   2eb18:	mov	r4, r0
   2eb1c:	mov	r0, lr
   2eb20:	sub	r2, r3, ip
   2eb24:	lsl	r2, r2, #2
   2eb28:	bl	fe18 <memmove@plt>
   2eb2c:	ldr	r2, [r4, #124]	; 0x7c
   2eb30:	ldrd	r4, [sp]
   2eb34:	ldr	r6, [sp, #8]
   2eb38:	add	sp, sp, #12
   2eb3c:	ldr	r3, [r2, #4]
   2eb40:	sub	r3, r3, #1
   2eb44:	str	r3, [r2, #4]
   2eb48:	pop	{pc}		; (ldr pc, [sp], #4)
   2eb4c:	mov	r3, ip
   2eb50:	mov	ip, r2
   2eb54:	mov	r2, r3
   2eb58:	b	2eb10 <myhtml_tree_active_formatting_remove@@Base+0x94>

0002eb5c <myhtml_tree_active_formatting_remove_by_index@@Base>:
   2eb5c:	str	r4, [sp, #-8]!
   2eb60:	mov	r4, r0
   2eb64:	lsl	r3, r1, #2
   2eb68:	ldr	r0, [r0, #124]	; 0x7c
   2eb6c:	add	ip, r3, #4
   2eb70:	ldr	r2, [r0, #4]
   2eb74:	ldr	r0, [r0]
   2eb78:	str	lr, [sp, #4]
   2eb7c:	sub	r2, r2, r1
   2eb80:	lsl	r2, r2, #2
   2eb84:	add	r1, r0, ip
   2eb88:	add	r0, r0, r3
   2eb8c:	bl	fe18 <memmove@plt>
   2eb90:	ldr	r2, [r4, #124]	; 0x7c
   2eb94:	ldr	r4, [sp]
   2eb98:	add	sp, sp, #4
   2eb9c:	ldr	r3, [r2, #4]
   2eba0:	sub	r3, r3, #1
   2eba4:	str	r3, [r2, #4]
   2eba8:	pop	{pc}		; (ldr pc, [sp], #4)

0002ebac <myhtml_tree_active_formatting_append_with_check@@Base>:
   2ebac:	ldr	r3, [r0, #124]	; 0x7c
   2ebb0:	strd	r4, [sp, #-32]!	; 0xffffffe0
   2ebb4:	ldr	r4, [r3]
   2ebb8:	ldr	r5, [r3, #4]
   2ebbc:	strd	r6, [sp, #8]
   2ebc0:	mov	r6, r0
   2ebc4:	mov	r7, r1
   2ebc8:	strd	r8, [sp, #16]
   2ebcc:	str	sl, [sp, #24]
   2ebd0:	str	lr, [sp, #28]
   2ebd4:	cmp	r5, #0
   2ebd8:	beq	2ec90 <myhtml_tree_active_formatting_append_with_check@@Base+0xe4>
   2ebdc:	add	r4, r4, r5, lsl #2
   2ebe0:	sub	r5, r5, #1
   2ebe4:	mov	r8, #0
   2ebe8:	mov	r9, r5
   2ebec:	b	2ebfc <myhtml_tree_active_formatting_append_with_check@@Base+0x50>
   2ebf0:	cmp	r5, #0
   2ebf4:	sub	r5, r5, #1
   2ebf8:	beq	2ec88 <myhtml_tree_active_formatting_append_with_check@@Base+0xdc>
   2ebfc:	mov	r0, r6
   2ec00:	ldr	r1, [r4, #-4]!
   2ec04:	bl	10808 <myhtml_tree_active_formatting_is_marker@plt>
   2ec08:	cmp	r0, #0
   2ec0c:	bne	2ec88 <myhtml_tree_active_formatting_append_with_check@@Base+0xdc>
   2ec10:	ldr	r3, [r4]
   2ec14:	ldr	r1, [r3, #32]
   2ec18:	cmp	r1, #0
   2ec1c:	beq	2ebf0 <myhtml_tree_active_formatting_append_with_check@@Base+0x44>
   2ec20:	ldr	r3, [r7, #32]
   2ec24:	cmp	r3, #0
   2ec28:	beq	2ebf0 <myhtml_tree_active_formatting_append_with_check@@Base+0x44>
   2ec2c:	ldr	r0, [r6, #8]
   2ec30:	bl	10610 <myhtml_token_node_wait_for_done@plt>
   2ec34:	ldr	r0, [r6, #8]
   2ec38:	ldr	r1, [r7, #32]
   2ec3c:	bl	10610 <myhtml_token_node_wait_for_done@plt>
   2ec40:	ldr	r3, [r4]
   2ec44:	ldr	r2, [r7, #8]
   2ec48:	ldr	r1, [r3, #8]
   2ec4c:	cmp	r1, r2
   2ec50:	bne	2ebf0 <myhtml_tree_active_formatting_append_with_check@@Base+0x44>
   2ec54:	ldr	r1, [r3, #4]
   2ec58:	ldr	r2, [r7, #4]
   2ec5c:	cmp	r1, r2
   2ec60:	bne	2ebf0 <myhtml_tree_active_formatting_append_with_check@@Base+0x44>
   2ec64:	ldr	r0, [r3, #32]
   2ec68:	ldr	r1, [r7, #32]
   2ec6c:	bl	10ac0 <myhtml_token_attr_compare@plt>
   2ec70:	cmp	r0, #0
   2ec74:	movne	r9, r5
   2ec78:	addne	r8, r8, #1
   2ec7c:	cmp	r5, #0
   2ec80:	sub	r5, r5, #1
   2ec84:	bne	2ebfc <myhtml_tree_active_formatting_append_with_check@@Base+0x50>
   2ec88:	cmp	r8, #2
   2ec8c:	bhi	2ecb4 <myhtml_tree_active_formatting_append_with_check@@Base+0x108>
   2ec90:	mov	r1, r7
   2ec94:	mov	r0, r6
   2ec98:	ldrd	r4, [sp]
   2ec9c:	ldrd	r6, [sp, #8]
   2eca0:	ldrd	r8, [sp, #16]
   2eca4:	ldr	sl, [sp, #24]
   2eca8:	ldr	lr, [sp, #28]
   2ecac:	add	sp, sp, #32
   2ecb0:	b	10070 <myhtml_tree_active_formatting_append@plt>
   2ecb4:	mov	r1, r9
   2ecb8:	mov	r0, r6
   2ecbc:	bl	107d8 <myhtml_tree_active_formatting_remove_by_index@plt>
   2ecc0:	b	2ec90 <myhtml_tree_active_formatting_append_with_check@@Base+0xe4>

0002ecc4 <myhtml_tree_active_formatting_current_node@@Base>:
   2ecc4:	ldr	r3, [r0, #124]	; 0x7c
   2ecc8:	ldr	r0, [r3, #4]
   2eccc:	cmp	r0, #0
   2ecd0:	beq	2ece4 <myhtml_tree_active_formatting_current_node@@Base+0x20>
   2ecd4:	ldr	r1, [r3]
   2ecd8:	ldr	r2, [r3, #4]
   2ecdc:	sub	r3, r2, #-1073741823	; 0xc0000001
   2ece0:	ldr	r0, [r1, r3, lsl #2]
   2ece4:	bx	lr

0002ece8 <myhtml_tree_active_formatting_find@@Base>:
   2ece8:	ldr	r3, [r0, #124]	; 0x7c
   2ecec:	ldr	ip, [r3]
   2ecf0:	ldr	r0, [r3, #4]
   2ecf4:	cmp	r0, #0
   2ecf8:	bxeq	lr
   2ecfc:	sub	r3, r0, #1
   2ed00:	push	{lr}		; (str lr, [sp, #-4]!)
   2ed04:	ldr	lr, [ip, r3, lsl #2]
   2ed08:	cmp	r1, lr
   2ed0c:	beq	2ed4c <myhtml_tree_active_formatting_find@@Base+0x64>
   2ed10:	cmp	r3, #0
   2ed14:	beq	2ed44 <myhtml_tree_active_formatting_find@@Base+0x5c>
   2ed18:	sub	r3, r0, #2
   2ed1c:	ldr	r0, [ip, r3, lsl #2]
   2ed20:	cmp	r1, r0
   2ed24:	bne	2ed3c <myhtml_tree_active_formatting_find@@Base+0x54>
   2ed28:	b	2ed4c <myhtml_tree_active_formatting_find@@Base+0x64>
   2ed2c:	sub	r3, r3, #1
   2ed30:	ldr	r0, [ip, r3, lsl #2]
   2ed34:	cmp	r0, r1
   2ed38:	beq	2ed4c <myhtml_tree_active_formatting_find@@Base+0x64>
   2ed3c:	cmp	r3, #0
   2ed40:	bne	2ed2c <myhtml_tree_active_formatting_find@@Base+0x44>
   2ed44:	mov	r0, r3
   2ed48:	pop	{pc}		; (ldr pc, [sp], #4)
   2ed4c:	cmp	r2, #0
   2ed50:	mov	r0, #1
   2ed54:	strne	r3, [r2]
   2ed58:	pop	{pc}		; (ldr pc, [sp], #4)

0002ed5c <myhtml_tree_active_formatting_up_to_last_marker@@Base>:
   2ed5c:	ldr	r3, [r0, #124]	; 0x7c
   2ed60:	ldr	r2, [r3, #4]
   2ed64:	cmp	r2, #0
   2ed68:	bxeq	lr
   2ed6c:	strd	r4, [sp, #-16]!
   2ed70:	mov	r4, r0
   2ed74:	ldr	r5, [r3]
   2ed78:	ldr	r2, [r3, #4]
   2ed7c:	str	r6, [sp, #8]
   2ed80:	str	lr, [sp, #12]
   2ed84:	cmp	r2, #0
   2ed88:	bne	2eda0 <myhtml_tree_active_formatting_up_to_last_marker@@Base+0x44>
   2ed8c:	b	2edc4 <myhtml_tree_active_formatting_up_to_last_marker@@Base+0x68>
   2ed90:	ldr	r3, [r4, #124]	; 0x7c
   2ed94:	ldr	r2, [r3, #4]
   2ed98:	cmp	r2, #0
   2ed9c:	beq	2edc4 <myhtml_tree_active_formatting_up_to_last_marker@@Base+0x68>
   2eda0:	ldr	r2, [r3, #4]
   2eda4:	mov	r0, r4
   2eda8:	sub	r2, r2, #1
   2edac:	str	r2, [r3, #4]
   2edb0:	ldr	r3, [r3, #4]
   2edb4:	ldr	r1, [r5, r3, lsl #2]
   2edb8:	bl	10808 <myhtml_tree_active_formatting_is_marker@plt>
   2edbc:	cmp	r0, #0
   2edc0:	beq	2ed90 <myhtml_tree_active_formatting_up_to_last_marker@@Base+0x34>
   2edc4:	ldrd	r4, [sp]
   2edc8:	ldr	r6, [sp, #8]
   2edcc:	add	sp, sp, #12
   2edd0:	pop	{pc}		; (ldr pc, [sp], #4)

0002edd4 <myhtml_tree_active_formatting_between_last_marker@@Base>:
   2edd4:	ldr	r3, [r0, #124]	; 0x7c
   2edd8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2eddc:	ldr	r4, [r3]
   2ede0:	ldr	r5, [r3, #4]
   2ede4:	strd	r6, [sp, #8]
   2ede8:	str	r8, [sp, #16]
   2edec:	str	lr, [sp, #20]
   2edf0:	cmp	r5, #0
   2edf4:	beq	2ee54 <myhtml_tree_active_formatting_between_last_marker@@Base+0x80>
   2edf8:	mov	r8, r2
   2edfc:	mov	r7, r1
   2ee00:	add	r4, r4, r5, lsl #2
   2ee04:	mov	r6, r0
   2ee08:	b	2ee14 <myhtml_tree_active_formatting_between_last_marker@@Base+0x40>
   2ee0c:	cmp	r5, #0
   2ee10:	beq	2ee54 <myhtml_tree_active_formatting_between_last_marker@@Base+0x80>
   2ee14:	mov	r0, r6
   2ee18:	ldr	r1, [r4, #-4]!
   2ee1c:	sub	r5, r5, #1
   2ee20:	bl	10808 <myhtml_tree_active_formatting_is_marker@plt>
   2ee24:	cmp	r0, #0
   2ee28:	bne	2ee54 <myhtml_tree_active_formatting_between_last_marker@@Base+0x80>
   2ee2c:	ldr	r0, [r4]
   2ee30:	ldr	r3, [r0, #4]
   2ee34:	cmp	r3, r7
   2ee38:	bne	2ee0c <myhtml_tree_active_formatting_between_last_marker@@Base+0x38>
   2ee3c:	ldr	r3, [r0, #8]
   2ee40:	cmp	r3, #1
   2ee44:	bne	2ee0c <myhtml_tree_active_formatting_between_last_marker@@Base+0x38>
   2ee48:	cmp	r8, #0
   2ee4c:	strne	r5, [r8]
   2ee50:	b	2ee58 <myhtml_tree_active_formatting_between_last_marker@@Base+0x84>
   2ee54:	mov	r0, #0
   2ee58:	ldrd	r4, [sp]
   2ee5c:	ldrd	r6, [sp, #8]
   2ee60:	ldr	r8, [sp, #16]
   2ee64:	add	sp, sp, #20
   2ee68:	pop	{pc}		; (ldr pc, [sp], #4)

0002ee6c <myhtml_tree_appropriate_place_inserting@@Base>:
   2ee6c:	mov	r3, #0
   2ee70:	strd	r4, [sp, #-16]!
   2ee74:	subs	r4, r1, #0
   2ee78:	mov	r5, r0
   2ee7c:	str	r6, [sp, #8]
   2ee80:	mov	r6, r2
   2ee84:	str	lr, [sp, #12]
   2ee88:	sub	sp, sp, #8
   2ee8c:	str	r3, [r2]
   2ee90:	beq	2ef74 <myhtml_tree_appropriate_place_inserting@@Base+0x108>
   2ee94:	ldrb	r3, [r5, #188]	; 0xbc
   2ee98:	cmp	r3, #0
   2ee9c:	beq	2eeac <myhtml_tree_appropriate_place_inserting@@Base+0x40>
   2eea0:	ldr	r3, [r4, #8]
   2eea4:	cmp	r3, #1
   2eea8:	beq	2eec4 <myhtml_tree_appropriate_place_inserting@@Base+0x58>
   2eeac:	mov	r0, r4
   2eeb0:	add	sp, sp, #8
   2eeb4:	ldrd	r4, [sp]
   2eeb8:	ldr	r6, [sp, #8]
   2eebc:	add	sp, sp, #12
   2eec0:	pop	{pc}		; (ldr pc, [sp], #4)
   2eec4:	ldr	r3, [r4, #4]
   2eec8:	sub	r3, r3, #125	; 0x7d
   2eecc:	cmp	r3, #10
   2eed0:	addls	pc, pc, r3, lsl #2
   2eed4:	b	2eeac <myhtml_tree_appropriate_place_inserting@@Base+0x40>
   2eed8:	b	2ef04 <myhtml_tree_appropriate_place_inserting@@Base+0x98>
   2eedc:	b	2ef04 <myhtml_tree_appropriate_place_inserting@@Base+0x98>
   2eee0:	b	2eeac <myhtml_tree_appropriate_place_inserting@@Base+0x40>
   2eee4:	b	2eeac <myhtml_tree_appropriate_place_inserting@@Base+0x40>
   2eee8:	b	2eeac <myhtml_tree_appropriate_place_inserting@@Base+0x40>
   2eeec:	b	2ef04 <myhtml_tree_appropriate_place_inserting@@Base+0x98>
   2eef0:	b	2eeac <myhtml_tree_appropriate_place_inserting@@Base+0x40>
   2eef4:	b	2ef04 <myhtml_tree_appropriate_place_inserting@@Base+0x98>
   2eef8:	b	2eeac <myhtml_tree_appropriate_place_inserting@@Base+0x40>
   2eefc:	b	2eeac <myhtml_tree_appropriate_place_inserting@@Base+0x40>
   2ef00:	b	2ef04 <myhtml_tree_appropriate_place_inserting@@Base+0x98>
   2ef04:	mov	r3, sp
   2ef08:	mov	r2, #1
   2ef0c:	mov	r1, #128	; 0x80
   2ef10:	mov	r0, r5
   2ef14:	bl	fc50 <myhtml_tree_open_elements_find_by_tag_idx_reverse@plt>
   2ef18:	mov	r4, r0
   2ef1c:	add	r3, sp, #4
   2ef20:	mov	r2, #1
   2ef24:	mov	r1, #125	; 0x7d
   2ef28:	mov	r0, r5
   2ef2c:	bl	fc50 <myhtml_tree_open_elements_find_by_tag_idx_reverse@plt>
   2ef30:	cmp	r4, #0
   2ef34:	beq	2ef98 <myhtml_tree_appropriate_place_inserting@@Base+0x12c>
   2ef38:	cmp	r0, #0
   2ef3c:	beq	2eeac <myhtml_tree_appropriate_place_inserting@@Base+0x40>
   2ef40:	ldrd	r2, [sp]
   2ef44:	cmp	r2, r3
   2ef48:	bhi	2eeac <myhtml_tree_appropriate_place_inserting@@Base+0x40>
   2ef4c:	ldr	r3, [r0, #24]
   2ef50:	cmp	r3, #0
   2ef54:	beq	2ef80 <myhtml_tree_appropriate_place_inserting@@Base+0x114>
   2ef58:	ldr	r4, [r0, #12]
   2ef5c:	cmp	r4, #0
   2ef60:	movne	r3, #2
   2ef64:	moveq	r3, #1
   2ef68:	moveq	r4, r0
   2ef6c:	str	r3, [r6]
   2ef70:	b	2eeac <myhtml_tree_appropriate_place_inserting@@Base+0x40>
   2ef74:	bl	105bc <myhtml_tree_current_node@plt>
   2ef78:	mov	r4, r0
   2ef7c:	b	2ee94 <myhtml_tree_appropriate_place_inserting@@Base+0x28>
   2ef80:	ldr	r2, [r5, #128]	; 0x80
   2ef84:	ldr	r3, [sp, #4]
   2ef88:	ldr	r2, [r2]
   2ef8c:	sub	r3, r3, #-1073741823	; 0xc0000001
   2ef90:	ldr	r4, [r2, r3, lsl #2]
   2ef94:	b	2eeac <myhtml_tree_appropriate_place_inserting@@Base+0x40>
   2ef98:	cmp	r0, #0
   2ef9c:	bne	2ef4c <myhtml_tree_appropriate_place_inserting@@Base+0xe0>
   2efa0:	ldr	r3, [r5, #128]	; 0x80
   2efa4:	ldr	r3, [r3]
   2efa8:	ldr	r4, [r3]
   2efac:	b	2eeac <myhtml_tree_appropriate_place_inserting@@Base+0x40>

0002efb0 <myhtml_tree_node_insert_by_token@@Base>:
   2efb0:	strd	r4, [sp, #-20]!	; 0xffffffec
   2efb4:	mov	r5, r0
   2efb8:	strd	r6, [sp, #8]
   2efbc:	mov	r6, r1
   2efc0:	mov	r7, r2
   2efc4:	str	lr, [sp, #16]
   2efc8:	sub	sp, sp, #12
   2efcc:	bl	ff80 <myhtml_tree_node_create@plt>
   2efd0:	ldr	r3, [r6]
   2efd4:	mov	r4, r0
   2efd8:	add	r2, sp, #4
   2efdc:	mov	r0, r5
   2efe0:	mov	r1, #0
   2efe4:	stmib	r4, {r3, r7}
   2efe8:	str	r6, [r4, #32]
   2efec:	bl	10e14 <myhtml_tree_appropriate_place_inserting@plt>
   2eff0:	ldr	r2, [sp, #4]
   2eff4:	mov	r1, r4
   2eff8:	bl	102ec <myhtml_tree_node_insert_by_mode@plt>
   2effc:	mov	r0, r5
   2f000:	mov	r1, r4
   2f004:	bl	1091c <myhtml_tree_open_elements_append@plt>
   2f008:	mov	r0, r4
   2f00c:	add	sp, sp, #12
   2f010:	ldrd	r4, [sp]
   2f014:	ldrd	r6, [sp, #8]
   2f018:	add	sp, sp, #16
   2f01c:	pop	{pc}		; (ldr pc, [sp], #4)

0002f020 <myhtml_tree_node_insert@@Base>:
   2f020:	strd	r4, [sp, #-20]!	; 0xffffffec
   2f024:	mov	r5, r0
   2f028:	strd	r6, [sp, #8]
   2f02c:	mov	r7, r1
   2f030:	mov	r6, r2
   2f034:	str	lr, [sp, #16]
   2f038:	sub	sp, sp, #12
   2f03c:	bl	ff80 <myhtml_tree_node_create@plt>
   2f040:	mov	r4, r0
   2f044:	mov	r3, #0
   2f048:	mov	r1, r3
   2f04c:	add	r2, sp, #4
   2f050:	mov	r0, r5
   2f054:	str	r7, [r4, #4]
   2f058:	str	r6, [r4, #8]
   2f05c:	str	r3, [r4, #32]
   2f060:	bl	10e14 <myhtml_tree_appropriate_place_inserting@plt>
   2f064:	ldr	r2, [sp, #4]
   2f068:	mov	r1, r4
   2f06c:	bl	102ec <myhtml_tree_node_insert_by_mode@plt>
   2f070:	mov	r0, r5
   2f074:	mov	r1, r4
   2f078:	bl	1091c <myhtml_tree_open_elements_append@plt>
   2f07c:	mov	r0, r4
   2f080:	add	sp, sp, #12
   2f084:	ldrd	r4, [sp]
   2f088:	ldrd	r6, [sp, #8]
   2f08c:	add	sp, sp, #16
   2f090:	pop	{pc}		; (ldr pc, [sp], #4)

0002f094 <myhtml_tree_node_insert_comment@@Base>:
   2f094:	strd	r4, [sp, #-20]!	; 0xffffffec
   2f098:	mov	r5, r2
   2f09c:	strd	r6, [sp, #8]
   2f0a0:	mov	r6, r1
   2f0a4:	mov	r7, r0
   2f0a8:	str	lr, [sp, #16]
   2f0ac:	sub	sp, sp, #12
   2f0b0:	bl	ff80 <myhtml_tree_node_create@plt>
   2f0b4:	mov	r2, #0
   2f0b8:	mov	r3, #2
   2f0bc:	cmp	r5, r2
   2f0c0:	mov	r4, r0
   2f0c4:	str	r3, [r0, #4]
   2f0c8:	str	r2, [sp, #4]
   2f0cc:	str	r6, [r0, #32]
   2f0d0:	beq	2f100 <myhtml_tree_node_insert_comment@@Base+0x6c>
   2f0d4:	mov	r0, r5
   2f0d8:	mov	r1, r4
   2f0dc:	bl	102ec <myhtml_tree_node_insert_by_mode@plt>
   2f0e0:	ldr	r3, [r5, #8]
   2f0e4:	mov	r0, r4
   2f0e8:	str	r3, [r4, #8]
   2f0ec:	add	sp, sp, #12
   2f0f0:	ldrd	r4, [sp]
   2f0f4:	ldrd	r6, [sp, #8]
   2f0f8:	add	sp, sp, #16
   2f0fc:	pop	{pc}		; (ldr pc, [sp], #4)
   2f100:	mov	r1, r5
   2f104:	add	r2, sp, #4
   2f108:	mov	r0, r7
   2f10c:	bl	10e14 <myhtml_tree_appropriate_place_inserting@plt>
   2f110:	mov	r5, r0
   2f114:	ldr	r2, [sp, #4]
   2f118:	b	2f0d4 <myhtml_tree_node_insert_comment@@Base+0x40>

0002f11c <myhtml_tree_node_insert_text@@Base>:
   2f11c:	strd	r4, [sp, #-16]!
   2f120:	mov	r4, r0
   2f124:	str	r6, [sp, #8]
   2f128:	mov	r6, r1
   2f12c:	mov	r1, #0
   2f130:	str	lr, [sp, #12]
   2f134:	sub	sp, sp, #8
   2f138:	add	r2, sp, #4
   2f13c:	bl	10e14 <myhtml_tree_appropriate_place_inserting@plt>
   2f140:	ldr	r3, [r4, #84]	; 0x54
   2f144:	cmp	r3, r0
   2f148:	beq	2f240 <myhtml_tree_node_insert_text@@Base+0x124>
   2f14c:	ldr	r3, [sp, #4]
   2f150:	mov	r5, r0
   2f154:	cmp	r3, #2
   2f158:	beq	2f1ec <myhtml_tree_node_insert_text@@Base+0xd0>
   2f15c:	cmp	r3, #1
   2f160:	beq	2f1c0 <myhtml_tree_node_insert_text@@Base+0xa4>
   2f164:	ldr	r3, [r0, #28]
   2f168:	cmp	r3, #0
   2f16c:	beq	2f17c <myhtml_tree_node_insert_text@@Base+0x60>
   2f170:	ldr	r2, [r3, #4]
   2f174:	cmp	r2, #1
   2f178:	beq	2f21c <myhtml_tree_node_insert_text@@Base+0x100>
   2f17c:	mov	r0, r4
   2f180:	bl	ff80 <myhtml_tree_node_create@plt>
   2f184:	ldr	r3, [r5, #8]
   2f188:	mov	r4, r0
   2f18c:	mov	r2, #1
   2f190:	mov	r0, r5
   2f194:	mov	r1, r4
   2f198:	strd	r2, [r4, #4]
   2f19c:	str	r6, [r4, #32]
   2f1a0:	ldr	r2, [sp, #4]
   2f1a4:	bl	102ec <myhtml_tree_node_insert_by_mode@plt>
   2f1a8:	mov	r0, r4
   2f1ac:	add	sp, sp, #8
   2f1b0:	ldrd	r4, [sp]
   2f1b4:	ldr	r6, [sp, #8]
   2f1b8:	add	sp, sp, #12
   2f1bc:	pop	{pc}		; (ldr pc, [sp], #4)
   2f1c0:	ldr	r3, [r0, #4]
   2f1c4:	cmp	r3, #1
   2f1c8:	bne	2f17c <myhtml_tree_node_insert_text@@Base+0x60>
   2f1cc:	ldr	r2, [r0, #32]
   2f1d0:	cmp	r2, #0
   2f1d4:	beq	2f17c <myhtml_tree_node_insert_text@@Base+0x60>
   2f1d8:	mov	r0, r4
   2f1dc:	mov	r1, r6
   2f1e0:	bl	10418 <myhtml_token_merged_two_token_string@plt>
   2f1e4:	mov	r4, r5
   2f1e8:	b	2f1a8 <myhtml_tree_node_insert_text@@Base+0x8c>
   2f1ec:	ldr	r3, [r0, #4]
   2f1f0:	cmp	r3, #1
   2f1f4:	bne	2f17c <myhtml_tree_node_insert_text@@Base+0x60>
   2f1f8:	ldr	r1, [r0, #32]
   2f1fc:	cmp	r1, #0
   2f200:	beq	2f17c <myhtml_tree_node_insert_text@@Base+0x60>
   2f204:	mov	r2, r6
   2f208:	mov	r0, r4
   2f20c:	mov	r3, #0
   2f210:	mov	r4, r5
   2f214:	bl	10418 <myhtml_token_merged_two_token_string@plt>
   2f218:	b	2f1a8 <myhtml_tree_node_insert_text@@Base+0x8c>
   2f21c:	ldr	r1, [r3, #32]
   2f220:	cmp	r1, #0
   2f224:	beq	2f17c <myhtml_tree_node_insert_text@@Base+0x60>
   2f228:	mov	r0, r4
   2f22c:	mov	r2, r6
   2f230:	mov	r3, #0
   2f234:	bl	10418 <myhtml_token_merged_two_token_string@plt>
   2f238:	ldr	r4, [r5, #28]
   2f23c:	b	2f1a8 <myhtml_tree_node_insert_text@@Base+0x8c>
   2f240:	mov	r4, #0
   2f244:	b	2f1a8 <myhtml_tree_node_insert_text@@Base+0x8c>

0002f248 <myhtml_tree_node_insert_by_node@@Base>:
   2f248:	strd	r4, [sp, #-12]!
   2f24c:	mov	r4, r1
   2f250:	mov	r1, #0
   2f254:	str	lr, [sp, #8]
   2f258:	sub	sp, sp, #12
   2f25c:	mov	r5, r0
   2f260:	add	r2, sp, #4
   2f264:	bl	10e14 <myhtml_tree_appropriate_place_inserting@plt>
   2f268:	ldr	r2, [sp, #4]
   2f26c:	mov	r1, r4
   2f270:	bl	102ec <myhtml_tree_node_insert_by_mode@plt>
   2f274:	mov	r0, r5
   2f278:	mov	r1, r4
   2f27c:	bl	1091c <myhtml_tree_open_elements_append@plt>
   2f280:	mov	r0, r4
   2f284:	add	sp, sp, #12
   2f288:	ldrd	r4, [sp]
   2f28c:	add	sp, sp, #8
   2f290:	pop	{pc}		; (ldr pc, [sp], #4)

0002f294 <myhtml_tree_active_formatting_reconstruction@@Base>:
   2f294:	strd	r4, [sp, #-32]!	; 0xffffffe0
   2f298:	strd	r6, [sp, #8]
   2f29c:	strd	r8, [sp, #16]
   2f2a0:	ldr	r8, [r0, #124]	; 0x7c
   2f2a4:	str	sl, [sp, #24]
   2f2a8:	str	lr, [sp, #28]
   2f2ac:	ldr	r3, [r8, #4]
   2f2b0:	cmp	r3, #0
   2f2b4:	bne	2f2d0 <myhtml_tree_active_formatting_reconstruction@@Base+0x3c>
   2f2b8:	ldrd	r4, [sp]
   2f2bc:	ldrd	r6, [sp, #8]
   2f2c0:	ldrd	r8, [sp, #16]
   2f2c4:	ldr	sl, [sp, #24]
   2f2c8:	add	sp, sp, #28
   2f2cc:	pop	{pc}		; (ldr pc, [sp], #4)
   2f2d0:	ldr	r7, [r8]
   2f2d4:	mov	r5, r0
   2f2d8:	ldr	r6, [r8, #4]
   2f2dc:	sub	r4, r6, #1
   2f2e0:	ldr	r1, [r7, r4, lsl #2]
   2f2e4:	bl	10808 <myhtml_tree_active_formatting_is_marker@plt>
   2f2e8:	subs	r2, r0, #0
   2f2ec:	bne	2f2b8 <myhtml_tree_active_formatting_reconstruction@@Base+0x24>
   2f2f0:	mov	r0, r5
   2f2f4:	ldr	r1, [r7, r4, lsl #2]
   2f2f8:	bl	10fdc <myhtml_tree_open_elements_find@plt>
   2f2fc:	cmp	r0, #0
   2f300:	bne	2f2b8 <myhtml_tree_active_formatting_reconstruction@@Base+0x24>
   2f304:	cmp	r4, #0
   2f308:	subne	r6, r6, #-1073741823	; 0xc0000001
   2f30c:	addne	r6, r7, r6, lsl #2
   2f310:	bne	2f330 <myhtml_tree_active_formatting_reconstruction@@Base+0x9c>
   2f314:	b	2f38c <myhtml_tree_active_formatting_reconstruction@@Base+0xf8>
   2f318:	ldr	r1, [r6]
   2f31c:	bl	10fdc <myhtml_tree_open_elements_find@plt>
   2f320:	cmp	r0, #0
   2f324:	bne	2f34c <myhtml_tree_active_formatting_reconstruction@@Base+0xb8>
   2f328:	subs	r4, r9, #0
   2f32c:	beq	2f38c <myhtml_tree_active_formatting_reconstruction@@Base+0xf8>
   2f330:	mov	r0, r5
   2f334:	ldr	r1, [r6, #-4]!
   2f338:	sub	r9, r4, #1
   2f33c:	bl	10808 <myhtml_tree_active_formatting_is_marker@plt>
   2f340:	subs	r2, r0, #0
   2f344:	mov	r0, r5
   2f348:	beq	2f318 <myhtml_tree_active_formatting_reconstruction@@Base+0x84>
   2f34c:	ldr	r3, [r8, #4]
   2f350:	cmp	r4, r3
   2f354:	addcc	r6, r7, r4, lsl #2
   2f358:	bcs	2f2b8 <myhtml_tree_active_formatting_reconstruction@@Base+0x24>
   2f35c:	ldr	r0, [r6]
   2f360:	add	r4, r4, #1
   2f364:	bl	10f70 <myhtml_tree_node_clone@plt>
   2f368:	mov	r7, r0
   2f36c:	mov	r1, r0
   2f370:	mov	r0, r5
   2f374:	bl	10700 <myhtml_tree_node_insert_by_node@plt>
   2f378:	ldr	r3, [r8, #4]
   2f37c:	str	r7, [r6], #4
   2f380:	cmp	r3, r4
   2f384:	bhi	2f35c <myhtml_tree_active_formatting_reconstruction@@Base+0xc8>
   2f388:	b	2f2b8 <myhtml_tree_active_formatting_reconstruction@@Base+0x24>
   2f38c:	mov	r4, #0
   2f390:	b	2f34c <myhtml_tree_active_formatting_reconstruction@@Base+0xb8>

0002f394 <myhtml_tree_node_insert_foreign_element@@Base>:
   2f394:	strd	r4, [sp, #-20]!	; 0xffffffec
   2f398:	mov	r5, r0
   2f39c:	strd	r6, [sp, #8]
   2f3a0:	mov	r6, r1
   2f3a4:	mov	r1, #0
   2f3a8:	str	lr, [sp, #16]
   2f3ac:	sub	sp, sp, #12
   2f3b0:	add	r2, sp, #4
   2f3b4:	bl	10e14 <myhtml_tree_appropriate_place_inserting@plt>
   2f3b8:	mov	r7, r0
   2f3bc:	mov	r0, r5
   2f3c0:	bl	ff80 <myhtml_tree_node_create@plt>
   2f3c4:	ldr	r2, [r6]
   2f3c8:	mov	r4, r0
   2f3cc:	mov	r0, r7
   2f3d0:	mov	r1, r4
   2f3d4:	ldr	r3, [r7, #8]
   2f3d8:	strd	r2, [r4, #4]
   2f3dc:	ldr	r2, [sp, #4]
   2f3e0:	str	r6, [r4, #32]
   2f3e4:	bl	102ec <myhtml_tree_node_insert_by_mode@plt>
   2f3e8:	mov	r0, r5
   2f3ec:	mov	r1, r4
   2f3f0:	bl	1091c <myhtml_tree_open_elements_append@plt>
   2f3f4:	mov	r0, r4
   2f3f8:	add	sp, sp, #12
   2f3fc:	ldrd	r4, [sp]
   2f400:	ldrd	r6, [sp, #8]
   2f404:	add	sp, sp, #16
   2f408:	pop	{pc}		; (ldr pc, [sp], #4)

0002f40c <myhtml_tree_node_insert_html_element@@Base>:
   2f40c:	strd	r4, [sp, #-20]!	; 0xffffffec
   2f410:	mov	r5, r0
   2f414:	strd	r6, [sp, #8]
   2f418:	mov	r6, r1
   2f41c:	mov	r1, #0
   2f420:	str	lr, [sp, #16]
   2f424:	sub	sp, sp, #12
   2f428:	add	r2, sp, #4
   2f42c:	bl	10e14 <myhtml_tree_appropriate_place_inserting@plt>
   2f430:	mov	r7, r0
   2f434:	mov	r0, r5
   2f438:	bl	ff80 <myhtml_tree_node_create@plt>
   2f43c:	ldr	r3, [r6]
   2f440:	mov	r4, r0
   2f444:	mov	r2, #1
   2f448:	mov	r0, r7
   2f44c:	mov	r1, r4
   2f450:	str	r2, [r4, #8]
   2f454:	ldr	r2, [sp, #4]
   2f458:	str	r3, [r4, #4]
   2f45c:	str	r6, [r4, #32]
   2f460:	bl	102ec <myhtml_tree_node_insert_by_mode@plt>
   2f464:	mov	r0, r5
   2f468:	mov	r1, r4
   2f46c:	bl	1091c <myhtml_tree_open_elements_append@plt>
   2f470:	mov	r0, r4
   2f474:	add	sp, sp, #12
   2f478:	ldrd	r4, [sp]
   2f47c:	ldrd	r6, [sp, #8]
   2f480:	add	sp, sp, #16
   2f484:	pop	{pc}		; (ldr pc, [sp], #4)

0002f488 <myhtml_tree_adoption_agency_algorithm@@Base>:
   2f488:	ldr	r3, [r0, #128]	; 0x80
   2f48c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   2f490:	ldr	ip, [r3, #4]
   2f494:	strd	r6, [sp, #8]
   2f498:	strd	r8, [sp, #16]
   2f49c:	strd	sl, [sp, #24]
   2f4a0:	str	lr, [sp, #32]
   2f4a4:	sub	sp, sp, #68	; 0x44
   2f4a8:	cmp	ip, #0
   2f4ac:	beq	2f54c <myhtml_tree_adoption_agency_algorithm@@Base+0xc4>
   2f4b0:	str	r2, [sp, #24]
   2f4b4:	mov	sl, r0
   2f4b8:	ldr	r8, [r3]
   2f4bc:	ldr	r2, [r3, #4]
   2f4c0:	ldr	ip, [r0, #124]	; 0x7c
   2f4c4:	sub	r3, r2, #1
   2f4c8:	ldr	r1, [r8, r3, lsl #2]
   2f4cc:	ldr	r3, [ip]
   2f4d0:	str	r3, [sp, #12]
   2f4d4:	ldr	r3, [r1, #8]
   2f4d8:	cmp	r3, #1
   2f4dc:	beq	2f6fc <myhtml_tree_adoption_agency_algorithm@@Base+0x274>
   2f4e0:	ldr	r5, [sp, #12]
   2f4e4:	mov	r3, #0
   2f4e8:	ldr	r4, [ip, #4]
   2f4ec:	str	r3, [sp, #44]	; 0x2c
   2f4f0:	cmp	r4, r3
   2f4f4:	beq	2f884 <myhtml_tree_adoption_agency_algorithm@@Base+0x3fc>
   2f4f8:	mov	r3, #8
   2f4fc:	str	r3, [sp, #32]
   2f500:	add	r3, sp, #48	; 0x30
   2f504:	str	r3, [sp, #28]
   2f508:	add	r3, sp, #60	; 0x3c
   2f50c:	str	r3, [sp, #8]
   2f510:	add	r5, r5, r4, lsl #2
   2f514:	ldr	r6, [sp, #24]
   2f518:	b	2f534 <myhtml_tree_adoption_agency_algorithm@@Base+0xac>
   2f51c:	ldr	r9, [r5]
   2f520:	ldr	r3, [r9, #4]
   2f524:	cmp	r3, r6
   2f528:	beq	2f574 <myhtml_tree_adoption_agency_algorithm@@Base+0xec>
   2f52c:	cmp	r4, #0
   2f530:	beq	2f884 <myhtml_tree_adoption_agency_algorithm@@Base+0x3fc>
   2f534:	mov	r0, sl
   2f538:	ldr	r1, [r5, #-4]!
   2f53c:	sub	r4, r4, #1
   2f540:	bl	10808 <myhtml_tree_active_formatting_is_marker@plt>
   2f544:	cmp	r0, #0
   2f548:	beq	2f51c <myhtml_tree_adoption_agency_algorithm@@Base+0x94>
   2f54c:	mov	r3, #0
   2f550:	str	r3, [sp, #20]
   2f554:	ldr	r0, [sp, #20]
   2f558:	add	sp, sp, #68	; 0x44
   2f55c:	ldrd	r4, [sp]
   2f560:	ldrd	r6, [sp, #8]
   2f564:	ldrd	r8, [sp, #16]
   2f568:	ldrd	sl, [sp, #24]
   2f56c:	add	sp, sp, #32
   2f570:	pop	{pc}		; (ldr pc, [sp], #4)
   2f574:	mov	r1, r9
   2f578:	str	r0, [sp, #20]
   2f57c:	mov	r0, sl
   2f580:	ldr	r2, [sp, #28]
   2f584:	str	r4, [sp, #44]	; 0x2c
   2f588:	bl	10fdc <myhtml_tree_open_elements_find@plt>
   2f58c:	cmp	r0, #0
   2f590:	beq	2f8ac <myhtml_tree_adoption_agency_algorithm@@Base+0x424>
   2f594:	mov	r1, #8
   2f598:	mov	r0, r9
   2f59c:	bl	fbf0 <myhtml_tree_element_in_scope_by_node@plt>
   2f5a0:	cmp	r0, #0
   2f5a4:	beq	2f54c <myhtml_tree_adoption_agency_algorithm@@Base+0xc4>
   2f5a8:	mov	r0, sl
   2f5ac:	bl	105bc <myhtml_tree_current_node@plt>
   2f5b0:	ldr	r2, [sl, #128]	; 0x80
   2f5b4:	ldr	r3, [sp, #48]	; 0x30
   2f5b8:	ldr	r2, [r2, #4]
   2f5bc:	str	r3, [sp, #52]	; 0x34
   2f5c0:	cmp	r2, r3
   2f5c4:	bhi	2f5e0 <myhtml_tree_adoption_agency_algorithm@@Base+0x158>
   2f5c8:	b	2f894 <myhtml_tree_adoption_agency_algorithm@@Base+0x40c>
   2f5cc:	ldr	r2, [sl, #128]	; 0x80
   2f5d0:	str	r3, [sp, #52]	; 0x34
   2f5d4:	ldr	r2, [r2, #4]
   2f5d8:	cmp	r3, r2
   2f5dc:	bcs	2f894 <myhtml_tree_adoption_agency_algorithm@@Base+0x40c>
   2f5e0:	ldr	r3, [r8, r3, lsl #2]
   2f5e4:	ldr	r0, [sl, #28]
   2f5e8:	ldr	r1, [r3, #4]
   2f5ec:	bl	109b8 <myhtml_tag_get_by_id@plt>
   2f5f0:	ldr	r4, [sp, #52]	; 0x34
   2f5f4:	ldr	r6, [r8, r4, lsl #2]
   2f5f8:	add	r3, r4, #1
   2f5fc:	ldr	r2, [r6, #8]
   2f600:	add	r2, r2, #4
   2f604:	ldr	r2, [r0, r2, lsl #2]
   2f608:	tst	r2, #2
   2f60c:	beq	2f5cc <myhtml_tree_adoption_agency_algorithm@@Base+0x144>
   2f610:	add	r3, sp, #56	; 0x38
   2f614:	ldr	r1, [sp, #44]	; 0x2c
   2f618:	mov	r7, r6
   2f61c:	mov	fp, r6
   2f620:	mov	r5, #0
   2f624:	ldr	r2, [sp, #48]	; 0x30
   2f628:	str	r3, [sp, #4]
   2f62c:	sub	r2, r2, #-1073741823	; 0xc0000001
   2f630:	ldr	r3, [r8, r2, lsl #2]
   2f634:	str	r3, [sp, #36]	; 0x24
   2f638:	add	r3, r1, #1
   2f63c:	str	r3, [sp, #16]
   2f640:	mov	r1, fp
   2f644:	mov	r0, sl
   2f648:	ldr	r2, [sp, #4]
   2f64c:	bl	10fdc <myhtml_tree_open_elements_find@plt>
   2f650:	cmp	r0, #0
   2f654:	add	r5, r5, #1
   2f658:	ldrne	r4, [sp, #56]	; 0x38
   2f65c:	cmp	r4, #0
   2f660:	beq	2f554 <myhtml_tree_adoption_agency_algorithm@@Base+0xcc>
   2f664:	sub	r4, r4, #1
   2f668:	ldr	fp, [r8, r4, lsl #2]
   2f66c:	str	r4, [sp, #56]	; 0x38
   2f670:	cmp	r9, fp
   2f674:	beq	2f760 <myhtml_tree_adoption_agency_algorithm@@Base+0x2d8>
   2f678:	mov	r1, fp
   2f67c:	mov	r0, sl
   2f680:	ldr	r2, [sp, #8]
   2f684:	bl	100c4 <myhtml_tree_active_formatting_find@plt>
   2f688:	cmp	r5, #3
   2f68c:	movle	r3, #0
   2f690:	andgt	r3, r0, #1
   2f694:	cmp	r3, #0
   2f698:	bne	2f73c <myhtml_tree_adoption_agency_algorithm@@Base+0x2b4>
   2f69c:	cmp	r0, #0
   2f6a0:	beq	2f72c <myhtml_tree_adoption_agency_algorithm@@Base+0x2a4>
   2f6a4:	mov	r0, fp
   2f6a8:	bl	10f70 <myhtml_tree_node_clone@plt>
   2f6ac:	mov	r1, #1
   2f6b0:	ldrd	r2, [sp, #56]	; 0x38
   2f6b4:	cmp	r6, r7
   2f6b8:	mov	fp, r0
   2f6bc:	str	r1, [r0, #8]
   2f6c0:	ldr	r1, [sp, #12]
   2f6c4:	str	r0, [r1, r3, lsl #2]
   2f6c8:	addeq	r3, r3, #1
   2f6cc:	str	r0, [r8, r2, lsl #2]
   2f6d0:	streq	r3, [sp, #16]
   2f6d4:	ldr	r3, [r7, #24]
   2f6d8:	cmp	r3, #0
   2f6dc:	beq	2f6e8 <myhtml_tree_adoption_agency_algorithm@@Base+0x260>
   2f6e0:	mov	r0, r7
   2f6e4:	bl	10d84 <myhtml_tree_node_remove@plt>
   2f6e8:	mov	r1, r7
   2f6ec:	mov	r0, fp
   2f6f0:	bl	1064c <myhtml_tree_node_add_child@plt>
   2f6f4:	mov	r7, fp
   2f6f8:	b	2f640 <myhtml_tree_adoption_agency_algorithm@@Base+0x1b8>
   2f6fc:	ldr	r3, [r1, #4]
   2f700:	ldr	r2, [sp, #24]
   2f704:	cmp	r3, r2
   2f708:	bne	2f4e0 <myhtml_tree_adoption_agency_algorithm@@Base+0x58>
   2f70c:	mov	r2, #0
   2f710:	bl	100c4 <myhtml_tree_active_formatting_find@plt>
   2f714:	subs	r3, r0, #0
   2f718:	str	r3, [sp, #20]
   2f71c:	beq	2f8bc <myhtml_tree_adoption_agency_algorithm@@Base+0x434>
   2f720:	ldr	ip, [sl, #124]	; 0x7c
   2f724:	ldr	r5, [ip]
   2f728:	b	2f4e4 <myhtml_tree_adoption_agency_algorithm@@Base+0x5c>
   2f72c:	mov	r1, fp
   2f730:	mov	r0, sl
   2f734:	bl	101d8 <myhtml_tree_open_elements_remove@plt>
   2f738:	b	2f640 <myhtml_tree_adoption_agency_algorithm@@Base+0x1b8>
   2f73c:	mov	r0, sl
   2f740:	ldr	r1, [sp, #60]	; 0x3c
   2f744:	bl	107d8 <myhtml_tree_active_formatting_remove_by_index@plt>
   2f748:	ldr	r2, [sp, #16]
   2f74c:	ldr	r3, [sp, #60]	; 0x3c
   2f750:	cmp	r3, r2
   2f754:	subcc	r3, r2, #1
   2f758:	strcc	r3, [sp, #16]
   2f75c:	b	2f640 <myhtml_tree_adoption_agency_algorithm@@Base+0x1b8>
   2f760:	ldr	r3, [r7, #24]
   2f764:	cmp	r3, #0
   2f768:	beq	2f774 <myhtml_tree_adoption_agency_algorithm@@Base+0x2ec>
   2f76c:	mov	r0, r7
   2f770:	bl	10d84 <myhtml_tree_node_remove@plt>
   2f774:	mov	r0, sl
   2f778:	ldr	r2, [sp, #8]
   2f77c:	ldr	r1, [sp, #36]	; 0x24
   2f780:	bl	10e14 <myhtml_tree_appropriate_place_inserting@plt>
   2f784:	mov	r1, r7
   2f788:	ldr	r2, [sp, #60]	; 0x3c
   2f78c:	bl	102ec <myhtml_tree_node_insert_by_mode@plt>
   2f790:	mov	r0, r9
   2f794:	bl	10f70 <myhtml_tree_node_clone@plt>
   2f798:	ldr	r5, [r6, #20]
   2f79c:	mov	r3, #1
   2f7a0:	mov	r4, r0
   2f7a4:	str	r3, [r0, #8]
   2f7a8:	cmp	r5, #0
   2f7ac:	beq	2f7d0 <myhtml_tree_adoption_agency_algorithm@@Base+0x348>
   2f7b0:	ldr	r7, [r5, #16]
   2f7b4:	mov	r0, r5
   2f7b8:	bl	10d84 <myhtml_tree_node_remove@plt>
   2f7bc:	mov	r1, r5
   2f7c0:	mov	r0, r4
   2f7c4:	bl	1064c <myhtml_tree_node_add_child@plt>
   2f7c8:	subs	r5, r7, #0
   2f7cc:	bne	2f7b0 <myhtml_tree_adoption_agency_algorithm@@Base+0x328>
   2f7d0:	mov	r1, r4
   2f7d4:	mov	r0, r6
   2f7d8:	bl	1064c <myhtml_tree_node_add_child@plt>
   2f7dc:	add	r2, sp, #44	; 0x2c
   2f7e0:	mov	r1, r9
   2f7e4:	mov	r0, sl
   2f7e8:	bl	100c4 <myhtml_tree_active_formatting_find@plt>
   2f7ec:	cmp	r0, #0
   2f7f0:	beq	2f54c <myhtml_tree_adoption_agency_algorithm@@Base+0xc4>
   2f7f4:	ldr	r3, [sp, #16]
   2f7f8:	mov	r0, sl
   2f7fc:	ldr	r1, [sp, #44]	; 0x2c
   2f800:	cmp	r1, r3
   2f804:	subcc	r3, r3, #1
   2f808:	strcc	r3, [sp, #16]
   2f80c:	bl	107d8 <myhtml_tree_active_formatting_remove_by_index@plt>
   2f810:	mov	r1, r4
   2f814:	ldr	r2, [sp, #16]
   2f818:	ldr	r0, [sl, #124]	; 0x7c
   2f81c:	bl	10250 <myhtml_tree_list_insert_by_index@plt>
   2f820:	mov	r1, r9
   2f824:	mov	r0, sl
   2f828:	bl	101d8 <myhtml_tree_open_elements_remove@plt>
   2f82c:	mov	r1, r6
   2f830:	add	r2, sp, #52	; 0x34
   2f834:	mov	r0, sl
   2f838:	bl	10fdc <myhtml_tree_open_elements_find@plt>
   2f83c:	cmp	r0, #0
   2f840:	beq	2f858 <myhtml_tree_adoption_agency_algorithm@@Base+0x3d0>
   2f844:	ldr	r2, [sp, #52]	; 0x34
   2f848:	mov	r1, r4
   2f84c:	ldr	r0, [sl, #128]	; 0x80
   2f850:	add	r2, r2, #1
   2f854:	bl	10250 <myhtml_tree_list_insert_by_index@plt>
   2f858:	ldr	r3, [sp, #32]
   2f85c:	subs	r3, r3, #1
   2f860:	str	r3, [sp, #32]
   2f864:	beq	2f54c <myhtml_tree_adoption_agency_algorithm@@Base+0xc4>
   2f868:	ldr	r3, [sl, #124]	; 0x7c
   2f86c:	mov	r2, #0
   2f870:	ldr	r5, [r3]
   2f874:	str	r2, [sp, #44]	; 0x2c
   2f878:	ldr	r4, [r3, #4]
   2f87c:	cmp	r4, r2
   2f880:	bne	2f510 <myhtml_tree_adoption_agency_algorithm@@Base+0x88>
   2f884:	mov	r3, #1
   2f888:	str	r3, [sp, #20]
   2f88c:	b	2f554 <myhtml_tree_adoption_agency_algorithm@@Base+0xcc>
   2f890:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   2f894:	mov	r0, sl
   2f898:	bl	105bc <myhtml_tree_current_node@plt>
   2f89c:	cmp	r9, r0
   2f8a0:	mov	r0, sl
   2f8a4:	bne	2f890 <myhtml_tree_adoption_agency_algorithm@@Base+0x408>
   2f8a8:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   2f8ac:	mov	r1, r9
   2f8b0:	mov	r0, sl
   2f8b4:	bl	10838 <myhtml_tree_active_formatting_remove@plt>
   2f8b8:	b	2f554 <myhtml_tree_adoption_agency_algorithm@@Base+0xcc>
   2f8bc:	mov	r0, sl
   2f8c0:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   2f8c4:	b	2f554 <myhtml_tree_adoption_agency_algorithm@@Base+0xcc>

0002f8c8 <myhtml_tree_appropriate_place_inserting_in_tree@@Base>:
   2f8c8:	ldr	r3, [r0, #40]	; 0x28
   2f8cc:	mov	r2, #1
   2f8d0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2f8d4:	ldrb	r3, [r3, #188]	; 0xbc
   2f8d8:	strd	r6, [sp, #8]
   2f8dc:	str	r8, [sp, #16]
   2f8e0:	str	lr, [sp, #20]
   2f8e4:	str	r2, [r1]
   2f8e8:	cmp	r3, #0
   2f8ec:	beq	2f970 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xa8>
   2f8f0:	ldr	r3, [r0, #8]
   2f8f4:	mov	r5, r1
   2f8f8:	mov	r4, r0
   2f8fc:	cmp	r3, r2
   2f900:	beq	2f920 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x58>
   2f904:	mov	r6, r4
   2f908:	mov	r0, r6
   2f90c:	ldrd	r4, [sp]
   2f910:	ldrd	r6, [sp, #8]
   2f914:	ldr	r8, [sp, #16]
   2f918:	add	sp, sp, #20
   2f91c:	pop	{pc}		; (ldr pc, [sp], #4)
   2f920:	ldr	r3, [r0, #4]
   2f924:	sub	r3, r3, #125	; 0x7d
   2f928:	cmp	r3, #10
   2f92c:	addls	pc, pc, r3, lsl #2
   2f930:	b	2f960 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x98>
   2f934:	b	2f97c <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xb4>
   2f938:	b	2f97c <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xb4>
   2f93c:	b	2f960 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x98>
   2f940:	b	2f960 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x98>
   2f944:	b	2f960 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x98>
   2f948:	b	2f97c <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xb4>
   2f94c:	b	2f960 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x98>
   2f950:	b	2f97c <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xb4>
   2f954:	b	2f960 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x98>
   2f958:	b	2f960 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x98>
   2f95c:	b	2f97c <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xb4>
   2f960:	mov	r3, #0
   2f964:	mov	r6, r0
   2f968:	str	r3, [r1]
   2f96c:	b	2f908 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x40>
   2f970:	mov	r6, r0
   2f974:	str	r3, [r1]
   2f978:	b	2f908 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x40>
   2f97c:	mov	r1, #128	; 0x80
   2f980:	bl	105b0 <myhtml_tree_node_find_parent_by_tag_id@plt>
   2f984:	mov	r6, r0
   2f988:	mov	r1, #125	; 0x7d
   2f98c:	mov	r0, r4
   2f990:	bl	105b0 <myhtml_tree_node_find_parent_by_tag_id@plt>
   2f994:	cmp	r6, #0
   2f998:	mov	r7, r0
   2f99c:	beq	2f9f4 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x12c>
   2f9a0:	mov	r1, #125	; 0x7d
   2f9a4:	mov	r0, r6
   2f9a8:	bl	105b0 <myhtml_tree_node_find_parent_by_tag_id@plt>
   2f9ac:	subs	r0, r7, r0
   2f9b0:	movne	r0, #1
   2f9b4:	cmp	r7, #0
   2f9b8:	moveq	r0, #1
   2f9bc:	cmp	r0, #0
   2f9c0:	movne	r3, #0
   2f9c4:	strne	r3, [r5]
   2f9c8:	bne	2f908 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x40>
   2f9cc:	ldr	r3, [r7, #24]
   2f9d0:	cmp	r3, #0
   2f9d4:	beq	2f904 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x3c>
   2f9d8:	ldr	r6, [r7, #12]
   2f9dc:	cmp	r6, #0
   2f9e0:	moveq	r6, r7
   2f9e4:	beq	2f908 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x40>
   2f9e8:	mov	r3, #2
   2f9ec:	str	r3, [r5]
   2f9f0:	b	2f908 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x40>
   2f9f4:	cmp	r0, #0
   2f9f8:	beq	2f904 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x3c>
   2f9fc:	b	2f9cc <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x104>

0002fa00 <myhtml_tree_template_insertion_init@@Base>:
   2fa00:	strd	r4, [sp, #-16]!
   2fa04:	mov	r5, r0
   2fa08:	mov	r0, #12
   2fa0c:	str	r6, [sp, #8]
   2fa10:	str	lr, [sp, #12]
   2fa14:	bl	10c28 <mycore_malloc@plt>
   2fa18:	mov	r4, r0
   2fa1c:	mov	r2, #0
   2fa20:	mov	r3, #1024	; 0x400
   2fa24:	mov	r0, #4096	; 0x1000
   2fa28:	strd	r2, [r4, #4]
   2fa2c:	bl	10c28 <mycore_malloc@plt>
   2fa30:	ldr	r6, [sp, #8]
   2fa34:	str	r0, [r4]
   2fa38:	mov	r0, r4
   2fa3c:	str	r4, [r5, #140]	; 0x8c
   2fa40:	ldrd	r4, [sp]
   2fa44:	add	sp, sp, #12
   2fa48:	pop	{pc}		; (ldr pc, [sp], #4)

0002fa4c <myhtml_tree_template_insertion_clean@@Base>:
   2fa4c:	ldr	r3, [r0, #140]	; 0x8c
   2fa50:	mov	r2, #0
   2fa54:	str	r2, [r3, #4]
   2fa58:	bx	lr

0002fa5c <myhtml_tree_template_insertion_destroy@@Base>:
   2fa5c:	ldr	r3, [r0, #140]	; 0x8c
   2fa60:	cmp	r3, #0
   2fa64:	beq	2fab8 <myhtml_tree_template_insertion_destroy@@Base+0x5c>
   2fa68:	str	r4, [sp, #-8]!
   2fa6c:	mov	r4, r0
   2fa70:	ldr	r0, [r3]
   2fa74:	str	lr, [sp, #4]
   2fa78:	cmp	r0, #0
   2fa7c:	beq	2faa0 <myhtml_tree_template_insertion_destroy@@Base+0x44>
   2fa80:	bl	10d60 <mycore_free@plt>
   2fa84:	ldr	r3, [r4, #140]	; 0x8c
   2fa88:	cmp	r3, #0
   2fa8c:	bne	2faa0 <myhtml_tree_template_insertion_destroy@@Base+0x44>
   2fa90:	ldr	r4, [sp]
   2fa94:	add	sp, sp, #4
   2fa98:	mov	r0, #0
   2fa9c:	pop	{pc}		; (ldr pc, [sp], #4)
   2faa0:	mov	r0, r3
   2faa4:	bl	10d60 <mycore_free@plt>
   2faa8:	ldr	r4, [sp]
   2faac:	add	sp, sp, #4
   2fab0:	mov	r0, #0
   2fab4:	pop	{pc}		; (ldr pc, [sp], #4)
   2fab8:	mov	r0, #0
   2fabc:	bx	lr

0002fac0 <myhtml_tree_template_insertion_append@@Base>:
   2fac0:	strd	r4, [sp, #-16]!
   2fac4:	mov	r5, r1
   2fac8:	ldr	r4, [r0, #140]	; 0x8c
   2facc:	ldm	r4, {r0, r3}
   2fad0:	ldr	r1, [r4, #8]
   2fad4:	str	r6, [sp, #8]
   2fad8:	str	lr, [sp, #12]
   2fadc:	cmp	r3, r1
   2fae0:	bcs	2fb00 <myhtml_tree_template_insertion_append@@Base+0x40>
   2fae4:	add	r2, r3, #1
   2fae8:	str	r5, [r0, r3, lsl #2]
   2faec:	ldr	r6, [sp, #8]
   2faf0:	str	r2, [r4, #4]
   2faf4:	ldrd	r4, [sp]
   2faf8:	add	sp, sp, #12
   2fafc:	pop	{pc}		; (ldr pc, [sp], #4)
   2fb00:	lsl	r3, r1, #1
   2fb04:	lsl	r1, r1, #3
   2fb08:	str	r3, [r4, #8]
   2fb0c:	bl	fb84 <mycore_realloc@plt>
   2fb10:	cmp	r0, #0
   2fb14:	ldmeq	r4, {r0, r3}
   2fb18:	strne	r0, [r4]
   2fb1c:	ldrne	r3, [r4, #4]
   2fb20:	b	2fae4 <myhtml_tree_template_insertion_append@@Base+0x24>

0002fb24 <myhtml_tree_template_insertion_pop@@Base>:
   2fb24:	ldr	r2, [r0, #140]	; 0x8c
   2fb28:	ldr	r3, [r2, #4]
   2fb2c:	cmp	r3, #0
   2fb30:	subne	r3, r3, #1
   2fb34:	strne	r3, [r2, #4]
   2fb38:	bx	lr

0002fb3c <myhtml_tree_template_insertion_length@@Base>:
   2fb3c:	ldr	r3, [r0, #140]	; 0x8c
   2fb40:	ldr	r0, [r3, #4]
   2fb44:	bx	lr

0002fb48 <myhtml_tree_token_list_init@@Base>:
   2fb48:	mov	r0, #12
   2fb4c:	str	r4, [sp, #-8]!
   2fb50:	str	lr, [sp, #4]
   2fb54:	bl	10c28 <mycore_malloc@plt>
   2fb58:	mov	r4, r0
   2fb5c:	mov	r2, #0
   2fb60:	mov	r3, #4096	; 0x1000
   2fb64:	mov	r0, #16384	; 0x4000
   2fb68:	strd	r2, [r4, #4]
   2fb6c:	bl	10c28 <mycore_malloc@plt>
   2fb70:	str	r0, [r4]
   2fb74:	mov	r0, r4
   2fb78:	ldr	r4, [sp]
   2fb7c:	add	sp, sp, #4
   2fb80:	pop	{pc}		; (ldr pc, [sp], #4)

0002fb84 <myhtml_tree_token_list_clean@@Base>:
   2fb84:	mov	r3, #0
   2fb88:	str	r3, [r0, #4]
   2fb8c:	bx	lr

0002fb90 <myhtml_tree_clean@@Base>:
   2fb90:	strd	r4, [sp, #-16]!
   2fb94:	mov	r4, r0
   2fb98:	str	r6, [sp, #8]
   2fb9c:	ldr	r6, [r0]
   2fba0:	str	lr, [sp, #12]
   2fba4:	ldr	r3, [r6, #20]
   2fba8:	cmp	r3, #0
   2fbac:	beq	2fbd4 <myhtml_tree_clean@@Base+0x44>
   2fbb0:	mov	r5, #0
   2fbb4:	ldr	r0, [r4, #4]
   2fbb8:	ldr	r3, [r4, #144]	; 0x90
   2fbbc:	ldr	r1, [r3, r5, lsl #2]
   2fbc0:	add	r5, r5, #1
   2fbc4:	bl	1067c <mchar_async_node_clean@plt>
   2fbc8:	ldr	r3, [r6, #20]
   2fbcc:	cmp	r3, r5
   2fbd0:	bhi	2fbb4 <myhtml_tree_clean@@Base+0x24>
   2fbd4:	ldr	r0, [r4, #12]
   2fbd8:	ldr	r1, [r4, #48]	; 0x30
   2fbdc:	bl	10814 <mcobject_async_node_clean@plt>
   2fbe0:	ldr	r3, [r4, #8]
   2fbe4:	ldr	r1, [r4, #40]	; 0x28
   2fbe8:	ldr	r0, [r3, #4]
   2fbec:	bl	10814 <mcobject_async_node_clean@plt>
   2fbf0:	ldr	r3, [r4, #8]
   2fbf4:	ldr	r1, [r4, #44]	; 0x2c
   2fbf8:	ldr	r0, [r3, #8]
   2fbfc:	bl	10814 <mcobject_async_node_clean@plt>
   2fc00:	ldr	r0, [r4, #20]
   2fc04:	bl	10934 <mythread_queue_list_entry_clean@plt>
   2fc08:	ldr	r3, [r4]
   2fc0c:	ldr	r1, [r4, #20]
   2fc10:	ldr	r0, [r3, #4]
   2fc14:	bl	10cb8 <mythread_queue_list_entry_make_batch@plt>
   2fc18:	ldr	r3, [r4]
   2fc1c:	ldr	r1, [r4, #20]
   2fc20:	ldr	r0, [r3]
   2fc24:	bl	10e74 <mythread_queue_list_entry_make_stream@plt>
   2fc28:	ldr	r0, [r4, #8]
   2fc2c:	bl	10550 <myhtml_token_clean@plt>
   2fc30:	mov	r0, r4
   2fc34:	bl	ff80 <myhtml_tree_node_create@plt>
   2fc38:	mov	r0, r4
   2fc3c:	bl	ff80 <myhtml_tree_node_create@plt>
   2fc40:	mov	r3, #0
   2fc44:	mov	r2, #2
   2fc48:	str	r3, [r4, #60]	; 0x3c
   2fc4c:	str	r3, [r4, #68]	; 0x44
   2fc50:	str	r3, [r4, #76]	; 0x4c
   2fc54:	str	r3, [r4, #80]	; 0x50
   2fc58:	str	r0, [r4, #84]	; 0x54
   2fc5c:	str	r3, [r4, #88]	; 0x58
   2fc60:	str	r3, [r4, #92]	; 0x5c
   2fc64:	str	r3, [r4, #96]	; 0x60
   2fc68:	str	r3, [r4, #100]	; 0x64
   2fc6c:	str	r3, [r4, #104]	; 0x68
   2fc70:	strb	r3, [r4, #108]	; 0x6c
   2fc74:	str	r3, [r4, #112]	; 0x70
   2fc78:	str	r3, [r4, #116]	; 0x74
   2fc7c:	str	r3, [r4, #120]	; 0x78
   2fc80:	str	r3, [r4, #156]	; 0x9c
   2fc84:	str	r3, [r4, #160]	; 0xa0
   2fc88:	str	r3, [r4, #164]	; 0xa4
   2fc8c:	str	r3, [r4, #168]	; 0xa8
   2fc90:	str	r3, [r4, #172]	; 0xac
   2fc94:	str	r3, [r4, #176]	; 0xb0
   2fc98:	str	r2, [r4, #180]	; 0xb4
   2fc9c:	str	r3, [r4, #152]	; 0x98
   2fca0:	strb	r3, [r4, #188]	; 0xbc
   2fca4:	str	r3, [r4, #192]	; 0xc0
   2fca8:	str	r3, [r4, #196]	; 0xc4
   2fcac:	str	r3, [r4, #200]	; 0xc8
   2fcb0:	str	r3, [r4, #204]	; 0xcc
   2fcb4:	ldr	r0, [r4, #148]	; 0x94
   2fcb8:	bl	10400 <myhtml_stream_buffer_clean@plt>
   2fcbc:	mov	r0, r4
   2fcc0:	bl	107b4 <myhtml_tree_active_formatting_clean@plt>
   2fcc4:	mov	r0, r4
   2fcc8:	bl	10db4 <myhtml_tree_open_elements_clean@plt>
   2fccc:	ldr	r0, [r4, #132]	; 0x84
   2fcd0:	bl	10220 <myhtml_tree_list_clean@plt>
   2fcd4:	ldr	r0, [r4, #136]	; 0x88
   2fcd8:	bl	10f7c <myhtml_tree_token_list_clean@plt>
   2fcdc:	mov	r0, r4
   2fce0:	bl	103b8 <myhtml_tree_template_insertion_clean@plt>
   2fce4:	ldr	r0, [r4, #72]	; 0x48
   2fce8:	bl	10f04 <mcobject_clean@plt>
   2fcec:	ldr	r0, [r4, #28]
   2fcf0:	bl	1100c <myhtml_tag_clean@plt>
   2fcf4:	ldr	r0, [r4, #24]
   2fcf8:	bl	fd04 <mythread_queue_clean@plt>
   2fcfc:	ldr	r3, [r4, #8]
   2fd00:	mov	r0, r3
   2fd04:	ldr	r1, [r3, #16]
   2fd08:	bl	10898 <myhtml_token_attr_create@plt>
   2fd0c:	ldr	r6, [sp, #8]
   2fd10:	str	r0, [r4, #56]	; 0x38
   2fd14:	ldrd	r4, [sp]
   2fd18:	add	sp, sp, #12
   2fd1c:	pop	{pc}		; (ldr pc, [sp], #4)

0002fd20 <myhtml_tree_init@@Base>:
   2fd20:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2fd24:	mov	r5, #0
   2fd28:	mov	r4, r0
   2fd2c:	strd	r6, [sp, #8]
   2fd30:	mov	r6, r1
   2fd34:	mov	r1, #512	; 0x200
   2fd38:	str	r8, [sp, #16]
   2fd3c:	str	lr, [sp, #20]
   2fd40:	sub	sp, sp, #8
   2fd44:	str	r6, [r0]
   2fd48:	str	r5, [sp]
   2fd4c:	bl	10f94 <myhtml_token_create@plt>
   2fd50:	cmp	r0, r5
   2fd54:	str	r0, [r4, #8]
   2fd58:	beq	2ff5c <myhtml_tree_init@@Base+0x23c>
   2fd5c:	ldr	r0, [sp]
   2fd60:	str	r5, [r4, #36]	; 0x24
   2fd64:	str	r5, [r4, #148]	; 0x94
   2fd68:	str	r5, [r4, #184]	; 0xb8
   2fd6c:	str	r5, [r4, #208]	; 0xd0
   2fd70:	cmp	r0, r5
   2fd74:	str	r5, [r4, #220]	; 0xdc
   2fd78:	str	r5, [r4, #224]	; 0xe0
   2fd7c:	str	r5, [r4, #228]	; 0xe4
   2fd80:	str	r5, [r4, #232]	; 0xe8
   2fd84:	str	r5, [r4, #236]	; 0xec
   2fd88:	str	r5, [r4, #240]	; 0xf0
   2fd8c:	str	r5, [r4, #244]	; 0xf4
   2fd90:	str	r5, [r4, #248]	; 0xf8
   2fd94:	beq	2fdb0 <myhtml_tree_init@@Base+0x90>
   2fd98:	add	sp, sp, #8
   2fd9c:	ldrd	r4, [sp]
   2fda0:	ldrd	r6, [sp, #8]
   2fda4:	ldr	r8, [sp, #16]
   2fda8:	add	sp, sp, #20
   2fdac:	pop	{pc}		; (ldr pc, [sp], #4)
   2fdb0:	bl	10a18 <mythread_queue_create@plt>
   2fdb4:	cmp	r0, r5
   2fdb8:	str	r0, [r4, #24]
   2fdbc:	beq	2ff64 <myhtml_tree_init@@Base+0x244>
   2fdc0:	movw	r1, #9182	; 0x23de
   2fdc4:	bl	10640 <mythread_queue_init@plt>
   2fdc8:	cmp	r0, #0
   2fdcc:	str	r0, [sp]
   2fdd0:	bne	2fd98 <myhtml_tree_init@@Base+0x78>
   2fdd4:	bl	ffbc <mcobject_create@plt>
   2fdd8:	cmp	r0, #0
   2fddc:	str	r0, [r4, #72]	; 0x48
   2fde0:	movweq	r0, #37368	; 0x91f8
   2fde4:	beq	2fd98 <myhtml_tree_init@@Base+0x78>
   2fde8:	mov	r2, #24
   2fdec:	mov	r1, #256	; 0x100
   2fdf0:	bl	1070c <mcobject_init@plt>
   2fdf4:	cmp	r0, #0
   2fdf8:	str	r0, [sp]
   2fdfc:	bne	2fd98 <myhtml_tree_init@@Base+0x78>
   2fe00:	bl	fcf8 <mcobject_async_create@plt>
   2fe04:	cmp	r0, #0
   2fe08:	str	r0, [r4, #12]
   2fe0c:	movweq	r0, #37365	; 0x91f5
   2fe10:	beq	2fd98 <myhtml_tree_init@@Base+0x78>
   2fe14:	mov	r3, #44	; 0x2c
   2fe18:	mov	r2, #1024	; 0x400
   2fe1c:	mov	r1, #128	; 0x80
   2fe20:	bl	fc20 <mcobject_async_init@plt>
   2fe24:	cmp	r0, #0
   2fe28:	str	r0, [sp, #4]
   2fe2c:	movwne	r0, #37366	; 0x91f6
   2fe30:	bne	2fd98 <myhtml_tree_init@@Base+0x78>
   2fe34:	bl	10100 <mchar_async_create@plt>
   2fe38:	str	r0, [r4, #4]
   2fe3c:	mov	r0, r4
   2fe40:	bl	10a54 <myhtml_tree_active_formatting_init@plt>
   2fe44:	str	r0, [r4, #124]	; 0x7c
   2fe48:	mov	r0, r4
   2fe4c:	bl	10b44 <myhtml_tree_open_elements_init@plt>
   2fe50:	str	r0, [r4, #128]	; 0x80
   2fe54:	bl	107f0 <myhtml_tree_list_init@plt>
   2fe58:	str	r0, [r4, #132]	; 0x84
   2fe5c:	bl	1094c <myhtml_tree_token_list_init@plt>
   2fe60:	str	r0, [r4, #136]	; 0x88
   2fe64:	mov	r0, r4
   2fe68:	bl	10c70 <myhtml_tree_template_insertion_init@plt>
   2fe6c:	ldr	r3, [r4, #4]
   2fe70:	str	r0, [r4, #140]	; 0x8c
   2fe74:	cmp	r3, #0
   2fe78:	beq	2ff64 <myhtml_tree_init@@Base+0x244>
   2fe7c:	mov	r0, r3
   2fe80:	mov	r2, #20480	; 0x5000
   2fe84:	mov	r1, #128	; 0x80
   2fe88:	bl	1043c <mchar_async_init@plt>
   2fe8c:	cmp	r0, #0
   2fe90:	str	r0, [sp]
   2fe94:	bne	2fd98 <myhtml_tree_init@@Base+0x78>
   2fe98:	add	r5, sp, #4
   2fe9c:	ldr	r0, [r4, #12]
   2fea0:	mov	r1, r5
   2fea4:	bl	10a24 <mcobject_async_node_add@plt>
   2fea8:	ldr	r3, [sp, #4]
   2feac:	str	r0, [r4, #48]	; 0x30
   2feb0:	cmp	r3, #0
   2feb4:	bne	2ff6c <myhtml_tree_init@@Base+0x24c>
   2feb8:	ldr	r3, [r4, #8]
   2febc:	mov	r1, r5
   2fec0:	ldr	r0, [r3, #4]
   2fec4:	bl	10a24 <mcobject_async_node_add@plt>
   2fec8:	ldr	r3, [sp, #4]
   2fecc:	str	r0, [r4, #40]	; 0x28
   2fed0:	cmp	r3, #0
   2fed4:	bne	2ff6c <myhtml_tree_init@@Base+0x24c>
   2fed8:	ldr	r3, [r4, #8]
   2fedc:	mov	r1, r5
   2fee0:	ldr	r0, [r3, #8]
   2fee4:	bl	10a24 <mcobject_async_node_add@plt>
   2fee8:	ldr	r5, [sp, #4]
   2feec:	str	r0, [r4, #44]	; 0x2c
   2fef0:	cmp	r5, #0
   2fef4:	bne	2ff6c <myhtml_tree_init@@Base+0x24c>
   2fef8:	mov	r1, #4
   2fefc:	ldr	r0, [r6, #20]
   2ff00:	bl	feb4 <mycore_calloc@plt>
   2ff04:	cmp	r0, #0
   2ff08:	mov	r7, r0
   2ff0c:	str	r0, [r4, #144]	; 0x90
   2ff10:	beq	2ff64 <myhtml_tree_init@@Base+0x244>
   2ff14:	ldr	r3, [r6, #20]
   2ff18:	cmp	r3, #0
   2ff1c:	beq	2ff74 <myhtml_tree_init@@Base+0x254>
   2ff20:	mov	r8, sp
   2ff24:	b	2ff38 <myhtml_tree_init@@Base+0x218>
   2ff28:	ldr	r3, [r6, #20]
   2ff2c:	ldr	r7, [r4, #144]	; 0x90
   2ff30:	cmp	r3, r5
   2ff34:	bls	2ff74 <myhtml_tree_init@@Base+0x254>
   2ff38:	mov	r1, r8
   2ff3c:	ldr	r0, [r4, #4]
   2ff40:	bl	1022c <mchar_async_node_add@plt>
   2ff44:	str	r0, [r7, r5, lsl #2]
   2ff48:	add	r5, r5, #1
   2ff4c:	ldr	r0, [sp]
   2ff50:	cmp	r0, #0
   2ff54:	beq	2ff28 <myhtml_tree_init@@Base+0x208>
   2ff58:	b	2fd98 <myhtml_tree_init@@Base+0x78>
   2ff5c:	movw	r0, #37164	; 0x912c
   2ff60:	b	2fd98 <myhtml_tree_init@@Base+0x78>
   2ff64:	mov	r0, #2
   2ff68:	b	2fd98 <myhtml_tree_init@@Base+0x78>
   2ff6c:	movw	r0, #37367	; 0x91f7
   2ff70:	b	2fd98 <myhtml_tree_init@@Base+0x78>
   2ff74:	ldr	r3, [r7]
   2ff78:	str	r3, [r4, #52]	; 0x34
   2ff7c:	bl	fd34 <mcsync_create@plt>
   2ff80:	cmp	r0, #0
   2ff84:	str	r0, [r4, #16]
   2ff88:	beq	2ff64 <myhtml_tree_init@@Base+0x244>
   2ff8c:	bl	107fc <mcsync_init@plt>
   2ff90:	cmp	r0, #0
   2ff94:	bne	2ff64 <myhtml_tree_init@@Base+0x244>
   2ff98:	bl	10cc4 <myhtml_tag_create@plt>
   2ff9c:	mov	r3, r0
   2ffa0:	mov	r0, r4
   2ffa4:	mov	r1, r3
   2ffa8:	str	r3, [r4, #28]
   2ffac:	bl	10af0 <myhtml_tag_init@plt>
   2ffb0:	str	r0, [sp]
   2ffb4:	mov	r0, r4
   2ffb8:	bl	10664 <myhtml_tree_clean@plt>
   2ffbc:	ldr	r0, [sp]
   2ffc0:	b	2fd98 <myhtml_tree_init@@Base+0x78>

0002ffc4 <myhtml_tree_clean_all@@Base>:
   2ffc4:	str	r4, [sp, #-8]!
   2ffc8:	mov	r4, r0
   2ffcc:	ldr	r0, [r0, #12]
   2ffd0:	str	lr, [sp, #4]
   2ffd4:	bl	10fe8 <mcobject_async_clean@plt>
   2ffd8:	ldr	r0, [r4, #8]
   2ffdc:	bl	10550 <myhtml_token_clean@plt>
   2ffe0:	ldr	r0, [r4, #4]
   2ffe4:	bl	10b5c <mchar_async_clean@plt>
   2ffe8:	mov	r0, r4
   2ffec:	bl	ff80 <myhtml_tree_node_create@plt>
   2fff0:	mov	r0, r4
   2fff4:	bl	ff80 <myhtml_tree_node_create@plt>
   2fff8:	mov	r3, #0
   2fffc:	mov	r2, #2
   30000:	str	r3, [r4, #60]	; 0x3c
   30004:	str	r3, [r4, #68]	; 0x44
   30008:	str	r3, [r4, #76]	; 0x4c
   3000c:	str	r3, [r4, #80]	; 0x50
   30010:	str	r0, [r4, #84]	; 0x54
   30014:	str	r3, [r4, #88]	; 0x58
   30018:	str	r3, [r4, #92]	; 0x5c
   3001c:	str	r3, [r4, #96]	; 0x60
   30020:	str	r3, [r4, #100]	; 0x64
   30024:	str	r3, [r4, #104]	; 0x68
   30028:	strb	r3, [r4, #108]	; 0x6c
   3002c:	str	r3, [r4, #112]	; 0x70
   30030:	str	r3, [r4, #116]	; 0x74
   30034:	str	r3, [r4, #120]	; 0x78
   30038:	str	r3, [r4, #156]	; 0x9c
   3003c:	str	r3, [r4, #160]	; 0xa0
   30040:	str	r3, [r4, #164]	; 0xa4
   30044:	str	r3, [r4, #168]	; 0xa8
   30048:	str	r3, [r4, #172]	; 0xac
   3004c:	str	r3, [r4, #176]	; 0xb0
   30050:	str	r2, [r4, #180]	; 0xb4
   30054:	str	r3, [r4, #152]	; 0x98
   30058:	strb	r3, [r4, #188]	; 0xbc
   3005c:	str	r3, [r4, #192]	; 0xc0
   30060:	str	r3, [r4, #196]	; 0xc4
   30064:	str	r3, [r4, #200]	; 0xc8
   30068:	str	r3, [r4, #204]	; 0xcc
   3006c:	ldr	r0, [r4, #148]	; 0x94
   30070:	bl	10400 <myhtml_stream_buffer_clean@plt>
   30074:	mov	r0, r4
   30078:	bl	107b4 <myhtml_tree_active_formatting_clean@plt>
   3007c:	mov	r0, r4
   30080:	bl	10db4 <myhtml_tree_open_elements_clean@plt>
   30084:	ldr	r0, [r4, #132]	; 0x84
   30088:	bl	10220 <myhtml_tree_list_clean@plt>
   3008c:	ldr	r0, [r4, #136]	; 0x88
   30090:	bl	10f7c <myhtml_tree_token_list_clean@plt>
   30094:	mov	r0, r4
   30098:	bl	103b8 <myhtml_tree_template_insertion_clean@plt>
   3009c:	ldr	r0, [r4, #72]	; 0x48
   300a0:	bl	10f04 <mcobject_clean@plt>
   300a4:	ldr	r0, [r4, #28]
   300a8:	bl	1100c <myhtml_tag_clean@plt>
   300ac:	ldr	r0, [r4, #20]
   300b0:	bl	10934 <mythread_queue_list_entry_clean@plt>
   300b4:	ldr	r3, [r4]
   300b8:	ldr	r1, [r4, #20]
   300bc:	ldr	r0, [r3, #4]
   300c0:	bl	10cb8 <mythread_queue_list_entry_make_batch@plt>
   300c4:	ldr	r3, [r4]
   300c8:	ldr	r1, [r4, #20]
   300cc:	ldr	r0, [r3]
   300d0:	bl	10e74 <mythread_queue_list_entry_make_stream@plt>
   300d4:	ldr	r3, [r4, #8]
   300d8:	mov	r0, r3
   300dc:	ldr	r1, [r3, #16]
   300e0:	bl	10898 <myhtml_token_attr_create@plt>
   300e4:	str	r0, [r4, #56]	; 0x38
   300e8:	ldr	r4, [sp]
   300ec:	add	sp, sp, #4
   300f0:	pop	{pc}		; (ldr pc, [sp], #4)

000300f4 <myhtml_tree_token_list_destroy@@Base>:
   300f4:	strd	r4, [sp, #-16]!
   300f8:	subs	r4, r0, #0
   300fc:	str	r6, [sp, #8]
   30100:	str	lr, [sp, #12]
   30104:	beq	30124 <myhtml_tree_token_list_destroy@@Base+0x30>
   30108:	ldr	r0, [r4]
   3010c:	mov	r5, r1
   30110:	cmp	r0, #0
   30114:	beq	3011c <myhtml_tree_token_list_destroy@@Base+0x28>
   30118:	bl	10d60 <mycore_free@plt>
   3011c:	cmp	r5, #0
   30120:	bne	30138 <myhtml_tree_token_list_destroy@@Base+0x44>
   30124:	mov	r0, r4
   30128:	ldrd	r4, [sp]
   3012c:	ldr	r6, [sp, #8]
   30130:	add	sp, sp, #12
   30134:	pop	{pc}		; (ldr pc, [sp], #4)
   30138:	mov	r0, r4
   3013c:	mov	r4, #0
   30140:	bl	10d60 <mycore_free@plt>
   30144:	b	30124 <myhtml_tree_token_list_destroy@@Base+0x30>

00030148 <myhtml_tree_token_list_append@@Base>:
   30148:	strd	r4, [sp, #-16]!
   3014c:	mov	r5, r1
   30150:	mov	r4, r0
   30154:	ldr	r3, [r0, #4]
   30158:	ldr	r1, [r0, #8]
   3015c:	ldr	r0, [r0]
   30160:	str	r6, [sp, #8]
   30164:	str	lr, [sp, #12]
   30168:	cmp	r3, r1
   3016c:	bcs	3018c <myhtml_tree_token_list_append@@Base+0x44>
   30170:	add	r2, r3, #1
   30174:	str	r5, [r0, r3, lsl #2]
   30178:	ldr	r6, [sp, #8]
   3017c:	str	r2, [r4, #4]
   30180:	ldrd	r4, [sp]
   30184:	add	sp, sp, #12
   30188:	pop	{pc}		; (ldr pc, [sp], #4)
   3018c:	lsl	r3, r1, #1
   30190:	lsl	r1, r1, #3
   30194:	str	r3, [r4, #8]
   30198:	bl	fb84 <mycore_realloc@plt>
   3019c:	cmp	r0, #0
   301a0:	ldmeq	r4, {r0, r3}
   301a4:	strne	r0, [r4]
   301a8:	ldrne	r3, [r4, #4]
   301ac:	b	30170 <myhtml_tree_token_list_append@@Base+0x28>

000301b0 <myhtml_tree_token_list_append_after_index@@Base>:
   301b0:	strd	r4, [sp, #-16]!
   301b4:	mov	r5, r0
   301b8:	mov	r4, r2
   301bc:	ldr	ip, [r0, #4]
   301c0:	str	r6, [sp, #8]
   301c4:	mov	r6, r1
   301c8:	ldr	r1, [r0, #8]
   301cc:	str	lr, [sp, #12]
   301d0:	ldr	r0, [r0]
   301d4:	cmp	ip, r1
   301d8:	bcs	30220 <myhtml_tree_token_list_append_after_index@@Base+0x70>
   301dc:	cmp	r4, ip
   301e0:	bls	30200 <myhtml_tree_token_list_append_after_index@@Base+0x50>
   301e4:	ldr	lr, [r0, r4, lsl #2]
   301e8:	add	r1, r0, r4, lsl #2
   301ec:	mov	r3, r4
   301f0:	add	r3, r3, #1
   301f4:	str	lr, [r1, #4]!
   301f8:	cmp	r3, ip
   301fc:	bhi	301f0 <myhtml_tree_token_list_append_after_index@@Base+0x40>
   30200:	add	r4, r4, #1
   30204:	add	ip, ip, #1
   30208:	str	r6, [r0, r4, lsl #2]
   3020c:	ldr	r6, [sp, #8]
   30210:	str	ip, [r5, #4]
   30214:	ldrd	r4, [sp]
   30218:	add	sp, sp, #12
   3021c:	pop	{pc}		; (ldr pc, [sp], #4)
   30220:	lsl	r3, r1, #1
   30224:	lsl	r1, r1, #3
   30228:	str	r3, [r5, #8]
   3022c:	bl	fb84 <mycore_realloc@plt>
   30230:	cmp	r0, #0
   30234:	ldmeq	r5, {r0, ip}
   30238:	strne	r0, [r5]
   3023c:	ldrne	ip, [r5, #4]
   30240:	b	301dc <myhtml_tree_token_list_append_after_index@@Base+0x2c>

00030244 <myhtml_tree_token_list_current_node@@Base>:
   30244:	ldr	r3, [r0, #4]
   30248:	cmp	r3, #0
   3024c:	ldrne	r2, [r0]
   30250:	subne	r3, r3, #-1073741823	; 0xc0000001
   30254:	ldrne	r0, [r2, r3, lsl #2]
   30258:	moveq	r0, r3
   3025c:	bx	lr

00030260 <myhtml_tree_tags_close_p@@Base>:
   30260:	mov	r2, #1
   30264:	mov	r1, #99	; 0x63
   30268:	str	r4, [sp, #-8]!
   3026c:	mov	r4, r0
   30270:	str	lr, [sp, #4]
   30274:	bl	10670 <myhtml_tree_generate_implied_end_tags@plt>
   30278:	mov	r0, r4
   3027c:	bl	105bc <myhtml_tree_current_node@plt>
   30280:	mov	r1, #99	; 0x63
   30284:	bl	10a3c <myhtml_is_html_node@plt>
   30288:	mov	r0, r4
   3028c:	mov	r3, #0
   30290:	ldr	r4, [sp]
   30294:	mov	r2, #1
   30298:	mov	r1, #99	; 0x63
   3029c:	ldr	lr, [sp, #4]
   302a0:	add	sp, sp, #8
   302a4:	b	108e0 <myhtml_tree_open_elements_pop_until@plt>

000302a8 <myhtml_tree_generic_raw_text_element_parsing_algorithm@@Base>:
   302a8:	mov	r2, #1
   302ac:	str	r4, [sp, #-8]!
   302b0:	mov	r4, r0
   302b4:	str	lr, [sp, #4]
   302b8:	bl	10c4c <myhtml_tree_node_insert_by_token@plt>
   302bc:	ldr	r3, [r4, #168]	; 0xa8
   302c0:	mov	r2, #7
   302c4:	strd	r2, [r4, #168]	; 0xa8
   302c8:	ldr	r4, [sp]
   302cc:	add	sp, sp, #4
   302d0:	pop	{pc}		; (ldr pc, [sp], #4)

000302d4 <myhtml_tree_clear_stack_back_table_context@@Base>:
   302d4:	str	r4, [sp, #-8]!
   302d8:	mov	r4, r0
   302dc:	str	lr, [sp, #4]
   302e0:	bl	105bc <myhtml_tree_current_node@plt>
   302e4:	mov	r1, r0
   302e8:	b	302fc <myhtml_tree_clear_stack_back_table_context@@Base+0x28>
   302ec:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   302f0:	mov	r0, r4
   302f4:	bl	105bc <myhtml_tree_current_node@plt>
   302f8:	mov	r1, r0
   302fc:	ldr	r2, [r1, #4]
   30300:	mov	r0, r4
   30304:	cmp	r2, #125	; 0x7d
   30308:	cmpne	r2, #128	; 0x80
   3030c:	movne	r3, #1
   30310:	moveq	r3, #0
   30314:	cmp	r2, #65	; 0x41
   30318:	moveq	r3, #0
   3031c:	andne	r3, r3, #1
   30320:	cmp	r3, #0
   30324:	bne	302ec <myhtml_tree_clear_stack_back_table_context@@Base+0x18>
   30328:	ldr	r3, [r1, #8]
   3032c:	cmp	r3, #1
   30330:	bne	302ec <myhtml_tree_clear_stack_back_table_context@@Base+0x18>
   30334:	ldr	r4, [sp]
   30338:	add	sp, sp, #4
   3033c:	pop	{pc}		; (ldr pc, [sp], #4)

00030340 <myhtml_tree_clear_stack_back_table_body_context@@Base>:
   30340:	str	r4, [sp, #-8]!
   30344:	mov	r4, r0
   30348:	str	lr, [sp, #4]
   3034c:	bl	105bc <myhtml_tree_current_node@plt>
   30350:	mov	r1, r0
   30354:	b	30368 <myhtml_tree_clear_stack_back_table_body_context@@Base+0x28>
   30358:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   3035c:	mov	r0, r4
   30360:	bl	105bc <myhtml_tree_current_node@plt>
   30364:	mov	r1, r0
   30368:	ldr	r2, [r1, #4]
   3036c:	mov	r0, r4
   30370:	cmp	r2, #126	; 0x7e
   30374:	cmpne	r2, #132	; 0x84
   30378:	bic	ip, r2, #2
   3037c:	movne	r3, #1
   30380:	moveq	r3, #0
   30384:	cmp	r2, #65	; 0x41
   30388:	moveq	r3, #0
   3038c:	andne	r3, r3, #1
   30390:	cmp	ip, #128	; 0x80
   30394:	moveq	r3, #0
   30398:	andne	r3, r3, #1
   3039c:	cmp	r3, #0
   303a0:	bne	30358 <myhtml_tree_clear_stack_back_table_body_context@@Base+0x18>
   303a4:	ldr	r3, [r1, #8]
   303a8:	cmp	r3, #1
   303ac:	bne	30358 <myhtml_tree_clear_stack_back_table_body_context@@Base+0x18>
   303b0:	ldr	r4, [sp]
   303b4:	add	sp, sp, #4
   303b8:	pop	{pc}		; (ldr pc, [sp], #4)

000303bc <myhtml_tree_clear_stack_back_table_row_context@@Base>:
   303bc:	str	r4, [sp, #-8]!
   303c0:	mov	r4, r0
   303c4:	str	lr, [sp, #4]
   303c8:	bl	105bc <myhtml_tree_current_node@plt>
   303cc:	mov	r1, r0
   303d0:	b	303e4 <myhtml_tree_clear_stack_back_table_row_context@@Base+0x28>
   303d4:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   303d8:	mov	r0, r4
   303dc:	bl	105bc <myhtml_tree_current_node@plt>
   303e0:	mov	r1, r0
   303e4:	ldr	r2, [r1, #4]
   303e8:	mov	r0, r4
   303ec:	cmp	r2, #135	; 0x87
   303f0:	cmpne	r2, #128	; 0x80
   303f4:	movne	r3, #1
   303f8:	moveq	r3, #0
   303fc:	cmp	r2, #65	; 0x41
   30400:	moveq	r3, #0
   30404:	andne	r3, r3, #1
   30408:	cmp	r3, #0
   3040c:	bne	303d4 <myhtml_tree_clear_stack_back_table_row_context@@Base+0x18>
   30410:	ldr	r3, [r1, #8]
   30414:	cmp	r3, #1
   30418:	bne	303d4 <myhtml_tree_clear_stack_back_table_row_context@@Base+0x18>
   3041c:	ldr	r4, [sp]
   30420:	add	sp, sp, #4
   30424:	pop	{pc}		; (ldr pc, [sp], #4)

00030428 <myhtml_tree_close_cell@@Base>:
   30428:	mov	r2, #0
   3042c:	strd	r4, [sp, #-16]!
   30430:	mov	r4, r0
   30434:	mov	r5, r1
   30438:	mov	r1, r2
   3043c:	str	r6, [sp, #8]
   30440:	str	lr, [sp, #12]
   30444:	bl	10670 <myhtml_tree_generate_implied_end_tags@plt>
   30448:	mov	r0, r4
   3044c:	bl	105bc <myhtml_tree_current_node@plt>
   30450:	mov	r0, r4
   30454:	mov	r3, #0
   30458:	ldmib	r5, {r1, r2}
   3045c:	bl	108e0 <myhtml_tree_open_elements_pop_until@plt>
   30460:	mov	r0, r4
   30464:	bl	10df0 <myhtml_tree_active_formatting_up_to_last_marker@plt>
   30468:	mov	r3, #13
   3046c:	ldr	r6, [sp, #8]
   30470:	str	r3, [r4, #168]	; 0xa8
   30474:	ldrd	r4, [sp]
   30478:	add	sp, sp, #12
   3047c:	pop	{pc}		; (ldr pc, [sp], #4)

00030480 <myhtml_tree_is_mathml_integration_point@@Base>:
   30480:	ldr	r3, [r1, #8]
   30484:	cmp	r3, #2
   30488:	beq	30494 <myhtml_tree_is_mathml_integration_point@@Base+0x14>
   3048c:	mov	r0, #0
   30490:	bx	lr
   30494:	ldr	r3, [r1, #4]
   30498:	cmp	r3, #238	; 0xee
   3049c:	cmpne	r3, #227	; 0xe3
   304a0:	sub	r2, r3, #231	; 0xe7
   304a4:	moveq	r0, #1
   304a8:	movne	r0, #0
   304ac:	cmp	r3, #88	; 0x58
   304b0:	orreq	r0, r0, #1
   304b4:	cmp	r2, #1
   304b8:	orrls	r0, r0, #1
   304bc:	bx	lr

000304c0 <myhtml_tree_is_html_integration_point@@Base>:
   304c0:	ldr	r3, [r1, #8]
   304c4:	cmp	r3, #3
   304c8:	beq	30510 <myhtml_tree_is_html_integration_point@@Base+0x50>
   304cc:	cmp	r3, #2
   304d0:	beq	304dc <myhtml_tree_is_html_integration_point@@Base+0x1c>
   304d4:	mov	r0, #0
   304d8:	bx	lr
   304dc:	strd	r4, [sp, #-20]!	; 0xffffffec
   304e0:	strd	r6, [sp, #8]
   304e4:	ldr	r6, [r1, #4]
   304e8:	str	lr, [sp, #16]
   304ec:	sub	sp, sp, #12
   304f0:	cmp	r6, #8
   304f4:	beq	30530 <myhtml_tree_is_html_integration_point@@Base+0x70>
   304f8:	mov	r0, #0
   304fc:	add	sp, sp, #12
   30500:	ldrd	r4, [sp]
   30504:	ldrd	r6, [sp, #8]
   30508:	add	sp, sp, #16
   3050c:	pop	{pc}		; (ldr pc, [sp], #4)
   30510:	ldr	r1, [r1, #4]
   30514:	cmp	r1, #156	; 0x9c
   30518:	cmpne	r1, #189	; 0xbd
   3051c:	moveq	r0, #1
   30520:	movne	r0, #0
   30524:	cmp	r1, #134	; 0x86
   30528:	orreq	r0, r0, #1
   3052c:	bx	lr
   30530:	ldr	r3, [r1, #32]
   30534:	cmp	r3, #0
   30538:	beq	304f8 <myhtml_tree_is_html_integration_point@@Base+0x38>
   3053c:	ldr	r2, [r3, #48]	; 0x30
   30540:	tst	r2, #1
   30544:	bne	304f8 <myhtml_tree_is_html_integration_point@@Base+0x38>
   30548:	mov	r5, r0
   3054c:	mov	r4, r1
   30550:	ldr	r0, [r0, #8]
   30554:	mov	r1, r3
   30558:	bl	10610 <myhtml_token_node_wait_for_done@plt>
   3055c:	ldr	ip, [pc, #104]	; 305cc <myhtml_tree_is_html_integration_point@@Base+0x10c>
   30560:	mov	r2, #9
   30564:	mov	r3, r6
   30568:	ldr	r7, [pc, #96]	; 305d0 <myhtml_tree_is_html_integration_point@@Base+0x110>
   3056c:	str	r2, [sp, #4]
   30570:	ldr	r0, [r5, #8]
   30574:	add	ip, pc, ip
   30578:	ldr	r1, [r4, #32]
   3057c:	add	r7, pc, r7
   30580:	str	ip, [sp]
   30584:	mov	r2, r7
   30588:	bl	fcd4 <myhtml_token_attr_match_case@plt>
   3058c:	cmp	r0, #0
   30590:	movne	r0, #1
   30594:	bne	304fc <myhtml_tree_is_html_integration_point@@Base+0x3c>
   30598:	ldr	r1, [pc, #52]	; 305d4 <myhtml_tree_is_html_integration_point@@Base+0x114>
   3059c:	mov	r0, #21
   305a0:	mov	r3, r6
   305a4:	mov	r2, r7
   305a8:	str	r0, [sp, #4]
   305ac:	ldr	r0, [r5, #8]
   305b0:	add	r1, pc, r1
   305b4:	str	r1, [sp]
   305b8:	ldr	r1, [r4, #32]
   305bc:	bl	fcd4 <myhtml_token_attr_match_case@plt>
   305c0:	adds	r0, r0, #0
   305c4:	movne	r0, #1
   305c8:	b	304fc <myhtml_tree_is_html_integration_point@@Base+0x3c>
   305cc:	andeq	pc, ip, r8, ror #13
   305d0:	ldrdeq	pc, [ip], -r4
   305d4:			; <UNDEFINED> instruction: 0x000cf6b8

000305d8 <myhtml_tree_temp_tag_name_init@@Base>:
   305d8:	mov	r3, #1024	; 0x400
   305dc:	mov	r2, #0
   305e0:	str	r4, [sp, #-8]!
   305e4:	mov	r4, r0
   305e8:	mov	r0, r3
   305ec:	str	lr, [sp, #4]
   305f0:	strd	r2, [r4, #4]
   305f4:	bl	10c28 <mycore_malloc@plt>
   305f8:	mov	r3, r0
   305fc:	cmp	r0, #0
   30600:	moveq	r0, #2
   30604:	movne	r0, #0
   30608:	str	r3, [r4]
   3060c:	ldr	r4, [sp]
   30610:	add	sp, sp, #4
   30614:	pop	{pc}		; (ldr pc, [sp], #4)

00030618 <myhtml_tree_temp_tag_name_clean@@Base>:
   30618:	mov	r3, #0
   3061c:	str	r3, [r0, #4]
   30620:	bx	lr

00030624 <myhtml_tree_temp_tag_name_destroy@@Base>:
   30624:	strd	r4, [sp, #-16]!
   30628:	subs	r4, r0, #0
   3062c:	str	r6, [sp, #8]
   30630:	str	lr, [sp, #12]
   30634:	beq	3065c <myhtml_tree_temp_tag_name_destroy@@Base+0x38>
   30638:	ldr	r0, [r4]
   3063c:	mov	r5, r1
   30640:	cmp	r0, #0
   30644:	beq	30654 <myhtml_tree_temp_tag_name_destroy@@Base+0x30>
   30648:	bl	10d60 <mycore_free@plt>
   3064c:	mov	r3, #0
   30650:	str	r3, [r4]
   30654:	cmp	r5, #0
   30658:	bne	30670 <myhtml_tree_temp_tag_name_destroy@@Base+0x4c>
   3065c:	mov	r0, r4
   30660:	ldrd	r4, [sp]
   30664:	ldr	r6, [sp, #8]
   30668:	add	sp, sp, #12
   3066c:	pop	{pc}		; (ldr pc, [sp], #4)
   30670:	mov	r0, r4
   30674:	mov	r4, #0
   30678:	bl	10d60 <mycore_free@plt>
   3067c:	b	3065c <myhtml_tree_temp_tag_name_destroy@@Base+0x38>

00030680 <myhtml_tree_destroy@@Base>:
   30680:	str	r4, [sp, #-8]!
   30684:	subs	r4, r0, #0
   30688:	str	lr, [sp, #4]
   3068c:	beq	30764 <myhtml_tree_destroy@@Base+0xe4>
   30690:	ldr	r0, [r4, #28]
   30694:	bl	10dd8 <myhtml_tag_destroy@plt>
   30698:	str	r0, [r4, #28]
   3069c:	mov	r0, r4
   306a0:	bl	1007c <myhtml_tree_active_formatting_destroy@plt>
   306a4:	str	r0, [r4, #124]	; 0x7c
   306a8:	mov	r0, r4
   306ac:	bl	10c7c <myhtml_tree_open_elements_destroy@plt>
   306b0:	mov	r1, #1
   306b4:	str	r0, [r4, #128]	; 0x80
   306b8:	ldr	r0, [r4, #132]	; 0x84
   306bc:	bl	10688 <myhtml_tree_list_destroy@plt>
   306c0:	mov	r1, #1
   306c4:	str	r0, [r4, #132]	; 0x84
   306c8:	ldr	r0, [r4, #136]	; 0x88
   306cc:	bl	fc14 <myhtml_tree_token_list_destroy@plt>
   306d0:	str	r0, [r4, #136]	; 0x88
   306d4:	mov	r0, r4
   306d8:	bl	10dcc <myhtml_tree_template_insertion_destroy@plt>
   306dc:	mov	r1, #1
   306e0:	str	r0, [r4, #140]	; 0x8c
   306e4:	ldr	r0, [r4, #16]
   306e8:	bl	10154 <mcsync_destroy@plt>
   306ec:	mov	r1, #1
   306f0:	str	r0, [r4, #16]
   306f4:	ldr	r0, [r4, #12]
   306f8:	bl	10ab4 <mcobject_async_destroy@plt>
   306fc:	str	r0, [r4, #12]
   30700:	ldr	r0, [r4, #8]
   30704:	bl	10718 <myhtml_token_destroy@plt>
   30708:	mov	r1, #1
   3070c:	str	r0, [r4, #8]
   30710:	ldr	r0, [r4, #4]
   30714:	bl	10d3c <mchar_async_destroy@plt>
   30718:	mov	r1, #1
   3071c:	str	r0, [r4, #4]
   30720:	ldr	r0, [r4, #148]	; 0x94
   30724:	bl	fcc8 <myhtml_stream_buffer_destroy@plt>
   30728:	str	r0, [r4, #148]	; 0x94
   3072c:	ldr	r0, [r4, #24]
   30730:	bl	10268 <mythread_queue_destroy@plt>
   30734:	mov	r1, #1
   30738:	str	r0, [r4, #24]
   3073c:	ldr	r0, [r4, #72]	; 0x48
   30740:	bl	fd70 <mcobject_destroy@plt>
   30744:	mov	r1, #0
   30748:	str	r0, [r4, #72]	; 0x48
   3074c:	add	r0, r4, #208	; 0xd0
   30750:	bl	108d4 <myhtml_tree_temp_tag_name_destroy@plt>
   30754:	ldr	r0, [r4, #144]	; 0x90
   30758:	bl	10d60 <mycore_free@plt>
   3075c:	mov	r0, r4
   30760:	bl	10d60 <mycore_free@plt>
   30764:	ldr	r4, [sp]
   30768:	add	sp, sp, #4
   3076c:	mov	r0, #0
   30770:	pop	{pc}		; (ldr pc, [sp], #4)

00030774 <myhtml_tree_temp_tag_name_append_one@@Base>:
   30774:	strd	r4, [sp, #-16]!
   30778:	mov	r4, r0
   3077c:	ldr	r3, [r0, #4]
   30780:	str	r6, [sp, #8]
   30784:	mov	r6, r1
   30788:	ldr	r1, [r0, #8]
   3078c:	str	lr, [sp, #12]
   30790:	ldr	r0, [r0]
   30794:	cmp	r3, r1
   30798:	bcs	307c0 <myhtml_tree_temp_tag_name_append_one@@Base+0x4c>
   3079c:	strb	r6, [r0, r3]
   307a0:	mov	r0, #0
   307a4:	ldr	r3, [r4, #4]
   307a8:	add	r3, r3, #1
   307ac:	str	r3, [r4, #4]
   307b0:	ldrd	r4, [sp]
   307b4:	ldr	r6, [sp, #8]
   307b8:	add	sp, sp, #12
   307bc:	pop	{pc}		; (ldr pc, [sp], #4)
   307c0:	lsl	r5, r1, #1
   307c4:	mov	r1, r5
   307c8:	bl	fb84 <mycore_realloc@plt>
   307cc:	cmp	r0, #0
   307d0:	beq	307e4 <myhtml_tree_temp_tag_name_append_one@@Base+0x70>
   307d4:	str	r0, [r4]
   307d8:	str	r5, [r4, #8]
   307dc:	ldr	r3, [r4, #4]
   307e0:	b	3079c <myhtml_tree_temp_tag_name_append_one@@Base+0x28>
   307e4:	mov	r0, #2
   307e8:	b	307b0 <myhtml_tree_temp_tag_name_append_one@@Base+0x3c>

000307ec <myhtml_tree_temp_tag_name_append@@Base>:
   307ec:	ldr	r3, [r0]
   307f0:	cmp	r3, #0
   307f4:	cmpne	r2, #0
   307f8:	beq	30880 <myhtml_tree_temp_tag_name_append@@Base+0x94>
   307fc:	strd	r4, [sp, #-24]!	; 0xffffffe8
   30800:	mov	r5, r1
   30804:	mov	r4, r0
   30808:	ldrd	r0, [r0, #4]
   3080c:	strd	r6, [sp, #8]
   30810:	mov	r6, r2
   30814:	str	r8, [sp, #16]
   30818:	str	lr, [sp, #20]
   3081c:	add	r2, r0, r2
   30820:	cmp	r2, r1
   30824:	bcc	3084c <myhtml_tree_temp_tag_name_append@@Base+0x60>
   30828:	add	r7, r6, r1, lsl #1
   3082c:	mov	r0, r3
   30830:	mov	r1, r7
   30834:	bl	fb84 <mycore_realloc@plt>
   30838:	subs	r3, r0, #0
   3083c:	beq	30888 <myhtml_tree_temp_tag_name_append@@Base+0x9c>
   30840:	ldr	r0, [r4, #4]
   30844:	str	r3, [r4]
   30848:	str	r7, [r4, #8]
   3084c:	mov	r2, r6
   30850:	mov	r1, r5
   30854:	add	r0, r3, r0
   30858:	bl	fefc <memcpy@plt>
   3085c:	ldr	r2, [r4, #4]
   30860:	mov	r0, #0
   30864:	add	r2, r2, r6
   30868:	str	r2, [r4, #4]
   3086c:	ldrd	r4, [sp]
   30870:	ldrd	r6, [sp, #8]
   30874:	ldr	r8, [sp, #16]
   30878:	add	sp, sp, #20
   3087c:	pop	{pc}		; (ldr pc, [sp], #4)
   30880:	mov	r0, #0
   30884:	bx	lr
   30888:	mov	r0, #2
   3088c:	b	3086c <myhtml_tree_temp_tag_name_append@@Base+0x80>

00030890 <myhtml_tree_wait_for_last_done_token@@Base>:
   30890:	ldr	r3, [r0, #152]	; 0x98
   30894:	cmp	r1, r3
   30898:	bxeq	lr
   3089c:	strd	r4, [sp, #-16]!
   308a0:	mov	r4, r0
   308a4:	mov	r5, r1
   308a8:	str	r6, [sp, #8]
   308ac:	str	lr, [sp, #12]
   308b0:	ldr	r3, [r4]
   308b4:	ldr	r3, [r3]
   308b8:	ldr	r0, [r3, #24]
   308bc:	bl	10040 <mythread_nanosleep_sleep@plt>
   308c0:	ldr	r3, [r4, #152]	; 0x98
   308c4:	cmp	r3, r5
   308c8:	bne	308b0 <myhtml_tree_wait_for_last_done_token@@Base+0x20>
   308cc:	ldrd	r4, [sp]
   308d0:	ldr	r6, [sp, #8]
   308d4:	add	sp, sp, #12
   308d8:	pop	{pc}		; (ldr pc, [sp], #4)

000308dc <myhtml_tree_special_list_init@@Base>:
   308dc:	mov	r3, #0
   308e0:	mov	r2, #1024	; 0x400
   308e4:	str	r4, [sp, #-8]!
   308e8:	mov	r4, r0
   308ec:	mov	r0, #8192	; 0x2000
   308f0:	str	lr, [sp, #4]
   308f4:	str	r3, [r4, #4]
   308f8:	str	r2, [r4, #8]
   308fc:	bl	10c28 <mycore_malloc@plt>
   30900:	mov	r3, r0
   30904:	cmp	r0, #0
   30908:	moveq	r0, #2
   3090c:	movne	r0, #0
   30910:	str	r3, [r4]
   30914:	ldr	r4, [sp]
   30918:	add	sp, sp, #4
   3091c:	pop	{pc}		; (ldr pc, [sp], #4)

00030920 <myhtml_tree_special_list_clean@@Base>:
   30920:	mov	r3, #0
   30924:	str	r3, [r0, #4]
   30928:	bx	lr

0003092c <myhtml_tree_special_list_destroy@@Base>:
   3092c:	strd	r4, [sp, #-16]!
   30930:	subs	r4, r0, #0
   30934:	str	r6, [sp, #8]
   30938:	str	lr, [sp, #12]
   3093c:	beq	30964 <myhtml_tree_special_list_destroy@@Base+0x38>
   30940:	ldr	r0, [r4]
   30944:	mov	r5, r1
   30948:	cmp	r0, #0
   3094c:	beq	3095c <myhtml_tree_special_list_destroy@@Base+0x30>
   30950:	bl	10d60 <mycore_free@plt>
   30954:	mov	r3, #0
   30958:	str	r3, [r4]
   3095c:	cmp	r5, #0
   30960:	bne	30978 <myhtml_tree_special_list_destroy@@Base+0x4c>
   30964:	mov	r0, r4
   30968:	ldrd	r4, [sp]
   3096c:	ldr	r6, [sp, #8]
   30970:	add	sp, sp, #12
   30974:	pop	{pc}		; (ldr pc, [sp], #4)
   30978:	mov	r0, r4
   3097c:	mov	r4, #0
   30980:	bl	10d60 <mycore_free@plt>
   30984:	b	30964 <myhtml_tree_special_list_destroy@@Base+0x38>

00030988 <myhtml_tree_special_list_append@@Base>:
   30988:	ldmib	r0, {r3, ip}
   3098c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   30990:	mov	r4, r0
   30994:	strd	r6, [sp, #8]
   30998:	mov	r6, r1
   3099c:	mov	r7, r2
   309a0:	str	r8, [sp, #16]
   309a4:	str	lr, [sp, #20]
   309a8:	cmp	r3, ip
   309ac:	ldr	r1, [r0]
   309b0:	bcs	309e0 <myhtml_tree_special_list_append@@Base+0x58>
   309b4:	add	ip, r1, r3, lsl #3
   309b8:	add	r2, r3, #1
   309bc:	mov	r0, #0
   309c0:	str	r7, [ip, #4]
   309c4:	str	r6, [r1, r3, lsl #3]
   309c8:	str	r2, [r4, #4]
   309cc:	ldrd	r4, [sp]
   309d0:	ldrd	r6, [sp, #8]
   309d4:	ldr	r8, [sp, #16]
   309d8:	add	sp, sp, #20
   309dc:	pop	{pc}		; (ldr pc, [sp], #4)
   309e0:	mov	r0, r1
   309e4:	lsl	r1, ip, #4
   309e8:	lsl	r5, ip, #1
   309ec:	bl	fb84 <mycore_realloc@plt>
   309f0:	subs	r1, r0, #0
   309f4:	beq	30a08 <myhtml_tree_special_list_append@@Base+0x80>
   309f8:	str	r1, [r4]
   309fc:	str	r5, [r4, #8]
   30a00:	ldr	r3, [r4, #4]
   30a04:	b	309b4 <myhtml_tree_special_list_append@@Base+0x2c>
   30a08:	mov	r0, #2
   30a0c:	b	309cc <myhtml_tree_special_list_append@@Base+0x44>

00030a10 <myhtml_tree_special_list_length@@Base>:
   30a10:	ldr	r0, [r0, #4]
   30a14:	bx	lr

00030a18 <myhtml_tree_special_list_pop@@Base>:
   30a18:	ldr	r3, [r0, #4]
   30a1c:	cmp	r3, #0
   30a20:	subne	r3, r3, #1
   30a24:	strne	r3, [r0, #4]
   30a28:	mov	r0, r3
   30a2c:	bx	lr

00030a30 <myhtml_tree_special_list_get_last@@Base>:
   30a30:	ldr	r3, [r0, #4]
   30a34:	cmp	r3, #0
   30a38:	ldrne	r0, [r0]
   30a3c:	addne	r0, r0, r3, lsl #3
   30a40:	moveq	r0, r3
   30a44:	bx	lr

00030a48 <myhtml_tree_incoming_buffer_first@@Base>:
   30a48:	ldr	r0, [r0, #80]	; 0x50
   30a4c:	bx	lr

00030a50 <myhtml_tree_incomming_buffer_make_data@@Base>:
   30a50:	strd	r4, [sp, #-32]!	; 0xffffffe0
   30a54:	mov	r5, r1
   30a58:	strd	r6, [sp, #8]
   30a5c:	mov	r6, r2
   30a60:	strd	r8, [sp, #16]
   30a64:	mov	r8, r0
   30a68:	ldr	r0, [r0, #80]	; 0x50
   30a6c:	str	sl, [sp, #24]
   30a70:	str	lr, [sp, #28]
   30a74:	bl	100a0 <mycore_incoming_buffer_find_by_position@plt>
   30a78:	ldr	r3, [r0, #8]
   30a7c:	mov	r4, r0
   30a80:	ldr	r1, [r0, #12]
   30a84:	sub	r5, r5, r1
   30a88:	add	r9, r5, r6
   30a8c:	cmp	r9, r3
   30a90:	bls	30b04 <myhtml_tree_incomming_buffer_make_data@@Base+0xb4>
   30a94:	ldr	r3, [r8, #208]	; 0xd0
   30a98:	add	r7, r8, #208	; 0xd0
   30a9c:	mov	r0, r7
   30aa0:	cmp	r3, #0
   30aa4:	beq	30b1c <myhtml_tree_incomming_buffer_make_data@@Base+0xcc>
   30aa8:	bl	10214 <myhtml_tree_temp_tag_name_clean@plt>
   30aac:	ldr	r1, [r4]
   30ab0:	mov	r0, r7
   30ab4:	ldr	r3, [r4, #8]
   30ab8:	add	r1, r1, r5
   30abc:	cmp	r9, r3
   30ac0:	sub	ip, r5, r3
   30ac4:	sub	r2, r3, r5
   30ac8:	bls	30b10 <myhtml_tree_incomming_buffer_make_data@@Base+0xc0>
   30acc:	add	r6, r6, ip
   30ad0:	mov	r5, #0
   30ad4:	bl	fc2c <myhtml_tree_temp_tag_name_append@plt>
   30ad8:	ldr	r4, [r4, #20]
   30adc:	mov	r9, r6
   30ae0:	cmp	r4, r5
   30ae4:	bne	30aac <myhtml_tree_incomming_buffer_make_data@@Base+0x5c>
   30ae8:	ldr	r0, [r8, #208]	; 0xd0
   30aec:	ldrd	r4, [sp]
   30af0:	ldrd	r6, [sp, #8]
   30af4:	ldrd	r8, [sp, #16]
   30af8:	ldr	sl, [sp, #24]
   30afc:	add	sp, sp, #28
   30b00:	pop	{pc}		; (ldr pc, [sp], #4)
   30b04:	ldr	r0, [r0]
   30b08:	add	r0, r0, r5
   30b0c:	b	30aec <myhtml_tree_incomming_buffer_make_data@@Base+0x9c>
   30b10:	mov	r2, r6
   30b14:	bl	fc2c <myhtml_tree_temp_tag_name_append@plt>
   30b18:	b	30ae8 <myhtml_tree_incomming_buffer_make_data@@Base+0x98>
   30b1c:	bl	10598 <myhtml_tree_temp_tag_name_init@plt>
   30b20:	b	30aac <myhtml_tree_incomming_buffer_make_data@@Base+0x5c>

00030b24 <mycore_fopen@@Base>:
   30b24:	b	fd58 <fopen@plt>

00030b28 <mycore_fclose@@Base>:
   30b28:	b	10994 <fclose@plt>

00030b2c <mycore_fread@@Base>:
   30b2c:	b	10364 <fread@plt>

00030b30 <mycore_fwrite@@Base>:
   30b30:	b	102d4 <fwrite@plt>

00030b34 <mycore_fflush@@Base>:
   30b34:	b	fdac <fflush@plt>

00030b38 <mycore_fseek@@Base>:
   30b38:	b	10ebc <fseek@plt>

00030b3c <mycore_ftell@@Base>:
   30b3c:	b	10004 <ftell@plt>

00030b40 <mycore_ferror@@Base>:
   30b40:	b	fef0 <ferror@plt>

00030b44 <mycore_setbuf@@Base>:
   30b44:	b	fca4 <setbuf@plt>

00030b48 <mycore_malloc@@Base>:
   30b48:	b	1049c <malloc@plt>

00030b4c <mycore_realloc@@Base>:
   30b4c:	b	10184 <realloc@plt>

00030b50 <mycore_calloc@@Base>:
   30b50:	b	fb90 <calloc@plt>

00030b54 <mycore_free@@Base>:
   30b54:	str	r4, [sp, #-8]!
   30b58:	str	lr, [sp, #4]
   30b5c:	bl	fe54 <free@plt>
   30b60:	ldr	r4, [sp]
   30b64:	add	sp, sp, #4
   30b68:	mov	r0, #0
   30b6c:	pop	{pc}		; (ldr pc, [sp], #4)

00030b70 <mythread_thread_create@@Base>:
   30b70:	strd	r4, [sp, #-24]!	; 0xffffffe8
   30b74:	mov	r5, r0
   30b78:	mov	r0, #1
   30b7c:	strd	r6, [sp, #8]
   30b80:	mov	r6, r1
   30b84:	mov	r1, #4
   30b88:	mov	r7, r2
   30b8c:	str	r8, [sp, #16]
   30b90:	str	lr, [sp, #20]
   30b94:	bl	feb4 <mycore_calloc@plt>
   30b98:	subs	r4, r0, #0
   30b9c:	beq	30bd0 <mythread_thread_create@@Base+0x60>
   30ba0:	mov	r3, r7
   30ba4:	mov	r2, r6
   30ba8:	ldr	r1, [r5, #20]
   30bac:	bl	10370 <pthread_create@plt>
   30bb0:	cmp	r0, #0
   30bb4:	bne	30bd0 <mythread_thread_create@@Base+0x60>
   30bb8:	mov	r0, r4
   30bbc:	ldrd	r4, [sp]
   30bc0:	ldrd	r6, [sp, #8]
   30bc4:	ldr	r8, [sp, #16]
   30bc8:	add	sp, sp, #20
   30bcc:	pop	{pc}		; (ldr pc, [sp], #4)
   30bd0:	mov	r4, #0
   30bd4:	b	30bb8 <mythread_thread_create@@Base+0x48>

00030bd8 <mythread_thread_join@@Base>:
   30bd8:	str	r4, [sp, #-8]!
   30bdc:	ldr	r0, [r1]
   30be0:	mov	r1, #0
   30be4:	str	lr, [sp, #4]
   30be8:	bl	10afc <pthread_join@plt>
   30bec:	adds	r0, r0, #0
   30bf0:	ldr	r4, [sp]
   30bf4:	add	sp, sp, #4
   30bf8:	movne	r0, #1
   30bfc:	pop	{pc}		; (ldr pc, [sp], #4)

00030c00 <mythread_thread_cancel@@Base>:
   30c00:	str	r4, [sp, #-8]!
   30c04:	ldr	r0, [r1]
   30c08:	str	lr, [sp, #4]
   30c0c:	bl	1088c <pthread_cancel@plt>
   30c10:	adds	r0, r0, #0
   30c14:	ldr	r4, [sp]
   30c18:	add	sp, sp, #4
   30c1c:	movne	r0, #1
   30c20:	pop	{pc}		; (ldr pc, [sp], #4)

00030c24 <mythread_thread_destroy@@Base>:
   30c24:	mov	r0, r1
   30c28:	str	r4, [sp, #-8]!
   30c2c:	str	lr, [sp, #4]
   30c30:	bl	10d60 <mycore_free@plt>
   30c34:	ldr	r4, [sp]
   30c38:	add	sp, sp, #4
   30c3c:	mov	r0, #0
   30c40:	pop	{pc}		; (ldr pc, [sp], #4)

00030c44 <mythread_thread_attr_init@@Base>:
   30c44:	mov	r1, #36	; 0x24
   30c48:	strd	r4, [sp, #-16]!
   30c4c:	str	r6, [sp, #8]
   30c50:	mov	r6, r0
   30c54:	mov	r0, #1
   30c58:	str	lr, [sp, #12]
   30c5c:	bl	feb4 <mycore_calloc@plt>
   30c60:	subs	r5, r0, #0
   30c64:	beq	30c94 <mythread_thread_attr_init@@Base+0x50>
   30c68:	bl	10730 <pthread_attr_init@plt>
   30c6c:	cmp	r0, #0
   30c70:	mov	r4, r0
   30c74:	str	r0, [r6, #28]
   30c78:	bne	30ca8 <mythread_thread_attr_init@@Base+0x64>
   30c7c:	mov	r1, r0
   30c80:	mov	r0, r5
   30c84:	bl	10eec <pthread_attr_setdetachstate@plt>
   30c88:	cmp	r0, #0
   30c8c:	str	r0, [r6, #28]
   30c90:	bne	30cb8 <mythread_thread_attr_init@@Base+0x74>
   30c94:	mov	r0, r5
   30c98:	ldrd	r4, [sp]
   30c9c:	ldr	r6, [sp, #8]
   30ca0:	add	sp, sp, #12
   30ca4:	pop	{pc}		; (ldr pc, [sp], #4)
   30ca8:	mov	r0, r5
   30cac:	mov	r5, #0
   30cb0:	bl	10d60 <mycore_free@plt>
   30cb4:	b	30c94 <mythread_thread_attr_init@@Base+0x50>
   30cb8:	mov	r0, r5
   30cbc:	mov	r5, r4
   30cc0:	bl	10d60 <mycore_free@plt>
   30cc4:	b	30c94 <mythread_thread_attr_init@@Base+0x50>

00030cc8 <mythread_thread_attr_clean@@Base>:
   30cc8:	bx	lr

00030ccc <mythread_thread_attr_destroy@@Base>:
   30ccc:	strd	r4, [sp, #-16]!
   30cd0:	subs	r4, r1, #0
   30cd4:	str	r6, [sp, #8]
   30cd8:	str	lr, [sp, #12]
   30cdc:	beq	30d08 <mythread_thread_attr_destroy@@Base+0x3c>
   30ce0:	mov	r5, r0
   30ce4:	mov	r0, r4
   30ce8:	bl	fd7c <pthread_attr_destroy@plt>
   30cec:	ldr	r6, [sp, #8]
   30cf0:	ldr	lr, [sp, #12]
   30cf4:	str	r0, [r5, #28]
   30cf8:	mov	r0, r4
   30cfc:	ldrd	r4, [sp]
   30d00:	add	sp, sp, #16
   30d04:	b	10d60 <mycore_free@plt>
   30d08:	ldrd	r4, [sp]
   30d0c:	ldr	r6, [sp, #8]
   30d10:	add	sp, sp, #12
   30d14:	pop	{pc}		; (ldr pc, [sp], #4)

00030d18 <mythread_mutex_create@@Base>:
   30d18:	str	r4, [sp, #-8]!
   30d1c:	str	lr, [sp, #4]
   30d20:	bl	1085c <mcsync_mutex_create@plt>
   30d24:	subs	r4, r0, #0
   30d28:	beq	30d38 <mythread_mutex_create@@Base+0x20>
   30d2c:	bl	10ae4 <mcsync_mutex_init@plt>
   30d30:	cmp	r0, #0
   30d34:	bne	30d48 <mythread_mutex_create@@Base+0x30>
   30d38:	mov	r0, r4
   30d3c:	ldr	r4, [sp]
   30d40:	add	sp, sp, #4
   30d44:	pop	{pc}		; (ldr pc, [sp], #4)
   30d48:	mov	r0, r4
   30d4c:	mov	r4, #0
   30d50:	bl	10d60 <mycore_free@plt>
   30d54:	b	30d38 <mythread_mutex_create@@Base+0x20>

00030d58 <mythread_mutex_post@@Base>:
   30d58:	mov	r0, r1
   30d5c:	b	fe9c <mcsync_mutex_unlock@plt>

00030d60 <mythread_mutex_wait@@Base>:
   30d60:	mov	r0, r1
   30d64:	b	10fd0 <mcsync_mutex_lock@plt>

00030d68 <mythread_mutex_try_wait@@Base>:
   30d68:	mov	r0, r1
   30d6c:	b	10f40 <mcsync_mutex_try_lock@plt>

00030d70 <mythread_mutex_close@@Base>:
   30d70:	mov	r0, r1
   30d74:	b	fd10 <mcsync_mutex_destroy@plt>

00030d78 <mythread_nanosleep_create@@Base>:
   30d78:	mov	r1, #8
   30d7c:	mov	r0, #1
   30d80:	b	feb4 <mycore_calloc@plt>

00030d84 <mythread_nanosleep_clean@@Base>:
   30d84:	mov	r3, #0
   30d88:	str	r3, [r0]
   30d8c:	str	r3, [r0, #4]
   30d90:	bx	lr

00030d94 <mythread_nanosleep_destroy@@Base>:
   30d94:	b	10d60 <mycore_free@plt>

00030d98 <mythread_nanosleep_sleep@@Base>:
   30d98:	mov	r1, #0
   30d9c:	str	r4, [sp, #-8]!
   30da0:	str	lr, [sp, #4]
   30da4:	bl	fec0 <nanosleep@plt>
   30da8:	adds	r0, r0, #0
   30dac:	ldr	r4, [sp]
   30db0:	add	sp, sp, #4
   30db4:	movne	r0, #1
   30db8:	pop	{pc}		; (ldr pc, [sp], #4)

00030dbc <mcsync_spin_create@@Base>:
   30dbc:	mov	r1, #4
   30dc0:	mov	r0, #1
   30dc4:	b	feb4 <mycore_calloc@plt>

00030dc8 <mcsync_spin_init@@Base>:
   30dc8:	mov	r0, #0
   30dcc:	bx	lr

00030dd0 <mcsync_spin_clean@@Base>:
   30dd0:	mov	r3, #0
   30dd4:	str	r3, [r0]
   30dd8:	bx	lr

00030ddc <mcsync_spin_destroy@@Base>:
   30ddc:	b	10d60 <mycore_free@plt>

00030de0 <mcsync_spin_lock@@Base>:
   30de0:	mov	r3, #0
   30de4:	mov	r1, #1
   30de8:	ldaex	r2, [r0]
   30dec:	cmp	r2, r3
   30df0:	bne	30e00 <mcsync_spin_lock@@Base+0x20>
   30df4:	stlex	ip, r1, [r0]
   30df8:	cmp	ip, #0
   30dfc:	bne	30de8 <mcsync_spin_lock@@Base+0x8>
   30e00:	mov	r3, r2
   30e04:	bne	30de8 <mcsync_spin_lock@@Base+0x8>
   30e08:	mov	r0, #0
   30e0c:	bx	lr

00030e10 <mcsync_spin_unlock@@Base>:
   30e10:	mov	r3, #0
   30e14:	stl	r3, [r0]
   30e18:	mov	r0, r3
   30e1c:	bx	lr

00030e20 <mcsync_mutex_create@@Base>:
   30e20:	mov	r1, #24
   30e24:	mov	r0, #1
   30e28:	b	feb4 <mycore_calloc@plt>

00030e2c <mcsync_mutex_init@@Base>:
   30e2c:	mov	r1, #0
   30e30:	str	r4, [sp, #-8]!
   30e34:	str	lr, [sp, #4]
   30e38:	bl	ff68 <pthread_mutex_init@plt>
   30e3c:	adds	r0, r0, #0
   30e40:	ldr	r4, [sp]
   30e44:	add	sp, sp, #4
   30e48:	movne	r0, #1
   30e4c:	pop	{pc}		; (ldr pc, [sp], #4)

00030e50 <mcsync_mutex_clean@@Base>:
   30e50:	bx	lr

00030e54 <mcsync_mutex_destroy@@Base>:
   30e54:	str	r4, [sp, #-8]!
   30e58:	mov	r4, r0
   30e5c:	str	lr, [sp, #4]
   30e60:	bl	fda0 <pthread_mutex_destroy@plt>
   30e64:	mov	r0, r4
   30e68:	ldr	r4, [sp]
   30e6c:	ldr	lr, [sp, #4]
   30e70:	add	sp, sp, #8
   30e74:	b	10d60 <mycore_free@plt>

00030e78 <mcsync_mutex_lock@@Base>:
   30e78:	str	r4, [sp, #-8]!
   30e7c:	str	lr, [sp, #4]
   30e80:	bl	fea8 <pthread_mutex_lock@plt>
   30e84:	adds	r0, r0, #0
   30e88:	ldr	r4, [sp]
   30e8c:	add	sp, sp, #4
   30e90:	movne	r0, #1
   30e94:	pop	{pc}		; (ldr pc, [sp], #4)

00030e98 <mcsync_mutex_try_lock@@Base>:
   30e98:	str	r4, [sp, #-8]!
   30e9c:	str	lr, [sp, #4]
   30ea0:	bl	ffd4 <pthread_mutex_trylock@plt>
   30ea4:	adds	r0, r0, #0
   30ea8:	ldr	r4, [sp]
   30eac:	add	sp, sp, #4
   30eb0:	movne	r0, #1
   30eb4:	pop	{pc}		; (ldr pc, [sp], #4)

00030eb8 <mcsync_mutex_unlock@@Base>:
   30eb8:	str	r4, [sp, #-8]!
   30ebc:	str	lr, [sp, #4]
   30ec0:	bl	fb6c <pthread_mutex_unlock@plt>
   30ec4:	adds	r0, r0, #0
   30ec8:	ldr	r4, [sp]
   30ecc:	add	sp, sp, #4
   30ed0:	movne	r0, #1
   30ed4:	pop	{pc}		; (ldr pc, [sp], #4)

Disassembly of section .fini:

00030ed8 <.fini>:
   30ed8:	push	{r3, lr}
   30edc:	pop	{r3, pc}
