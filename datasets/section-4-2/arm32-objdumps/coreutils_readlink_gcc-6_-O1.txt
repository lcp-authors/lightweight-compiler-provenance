
../repos/coreutils/src/readlink:     file format elf32-littlearm


Disassembly of section .init:

00010c10 <.init>:
   10c10:	push	{r3, lr}
   10c14:	bl	10edc <strspn@plt+0x48>
   10c18:	pop	{r3, pc}

Disassembly of section .plt:

00010c1c <calloc@plt-0x14>:
   10c1c:	push	{lr}		; (str lr, [sp, #-4]!)
   10c20:	ldr	lr, [pc, #4]	; 10c2c <calloc@plt-0x4>
   10c24:	add	lr, pc, lr
   10c28:	ldr	pc, [lr, #8]!
   10c2c:	ldrdeq	r7, [r1], -r4

00010c30 <calloc@plt>:
   10c30:	add	ip, pc, #0, 12
   10c34:	add	ip, ip, #94208	; 0x17000
   10c38:	ldr	pc, [ip, #980]!	; 0x3d4

00010c3c <fputs_unlocked@plt>:
   10c3c:	add	ip, pc, #0, 12
   10c40:	add	ip, ip, #94208	; 0x17000
   10c44:	ldr	pc, [ip, #972]!	; 0x3cc

00010c48 <raise@plt>:
   10c48:	add	ip, pc, #0, 12
   10c4c:	add	ip, ip, #94208	; 0x17000
   10c50:	ldr	pc, [ip, #964]!	; 0x3c4

00010c54 <strcmp@plt>:
   10c54:	add	ip, pc, #0, 12
   10c58:	add	ip, ip, #94208	; 0x17000
   10c5c:	ldr	pc, [ip, #956]!	; 0x3bc

00010c60 <fflush@plt>:
   10c60:	add	ip, pc, #0, 12
   10c64:	add	ip, ip, #94208	; 0x17000
   10c68:	ldr	pc, [ip, #948]!	; 0x3b4

00010c6c <memmove@plt>:
   10c6c:	add	ip, pc, #0, 12
   10c70:	add	ip, ip, #94208	; 0x17000
   10c74:	ldr	pc, [ip, #940]!	; 0x3ac

00010c78 <free@plt>:
   10c78:	add	ip, pc, #0, 12
   10c7c:	add	ip, ip, #94208	; 0x17000
   10c80:	ldr	pc, [ip, #932]!	; 0x3a4

00010c84 <faccessat@plt>:
   10c84:	add	ip, pc, #0, 12
   10c88:	add	ip, ip, #94208	; 0x17000
   10c8c:	ldr	pc, [ip, #924]!	; 0x39c

00010c90 <_exit@plt>:
   10c90:	add	ip, pc, #0, 12
   10c94:	add	ip, ip, #94208	; 0x17000
   10c98:	ldr	pc, [ip, #916]!	; 0x394

00010c9c <memcpy@plt>:
   10c9c:	add	ip, pc, #0, 12
   10ca0:	add	ip, ip, #94208	; 0x17000
   10ca4:	ldr	pc, [ip, #908]!	; 0x38c

00010ca8 <mbsinit@plt>:
   10ca8:	add	ip, pc, #0, 12
   10cac:	add	ip, ip, #94208	; 0x17000
   10cb0:	ldr	pc, [ip, #900]!	; 0x384

00010cb4 <memcmp@plt>:
   10cb4:	add	ip, pc, #0, 12
   10cb8:	add	ip, ip, #94208	; 0x17000
   10cbc:	ldr	pc, [ip, #892]!	; 0x37c

00010cc0 <fputc_unlocked@plt>:
   10cc0:	add	ip, pc, #0, 12
   10cc4:	add	ip, ip, #94208	; 0x17000
   10cc8:	ldr	pc, [ip, #884]!	; 0x374

00010ccc <dcgettext@plt>:
   10ccc:	add	ip, pc, #0, 12
   10cd0:	add	ip, ip, #94208	; 0x17000
   10cd4:	ldr	pc, [ip, #876]!	; 0x36c

00010cd8 <realloc@plt>:
   10cd8:	add	ip, pc, #0, 12
   10cdc:	add	ip, ip, #94208	; 0x17000
   10ce0:	ldr	pc, [ip, #868]!	; 0x364

00010ce4 <textdomain@plt>:
   10ce4:	add	ip, pc, #0, 12
   10ce8:	add	ip, ip, #94208	; 0x17000
   10cec:	ldr	pc, [ip, #860]!	; 0x35c

00010cf0 <rawmemchr@plt>:
   10cf0:	add	ip, pc, #0, 12
   10cf4:	add	ip, ip, #94208	; 0x17000
   10cf8:	ldr	pc, [ip, #852]!	; 0x354

00010cfc <iswprint@plt>:
   10cfc:	add	ip, pc, #0, 12
   10d00:	add	ip, ip, #94208	; 0x17000
   10d04:	ldr	pc, [ip, #844]!	; 0x34c

00010d08 <readlink@plt>:
   10d08:	add	ip, pc, #0, 12
   10d0c:	add	ip, ip, #94208	; 0x17000
   10d10:	ldr	pc, [ip, #836]!	; 0x344

00010d14 <fwrite@plt>:
   10d14:	add	ip, pc, #0, 12
   10d18:	add	ip, ip, #94208	; 0x17000
   10d1c:	ldr	pc, [ip, #828]!	; 0x33c

00010d20 <lseek64@plt>:
   10d20:	add	ip, pc, #0, 12
   10d24:	add	ip, ip, #94208	; 0x17000
   10d28:	ldr	pc, [ip, #820]!	; 0x334

00010d2c <__ctype_get_mb_cur_max@plt>:
   10d2c:	add	ip, pc, #0, 12
   10d30:	add	ip, ip, #94208	; 0x17000
   10d34:	ldr	pc, [ip, #812]!	; 0x32c

00010d38 <__fpending@plt>:
   10d38:	add	ip, pc, #0, 12
   10d3c:	add	ip, ip, #94208	; 0x17000
   10d40:	ldr	pc, [ip, #804]!	; 0x324

00010d44 <mbrtowc@plt>:
   10d44:	add	ip, pc, #0, 12
   10d48:	add	ip, ip, #94208	; 0x17000
   10d4c:	ldr	pc, [ip, #796]!	; 0x31c

00010d50 <error@plt>:
   10d50:	add	ip, pc, #0, 12
   10d54:	add	ip, ip, #94208	; 0x17000
   10d58:	ldr	pc, [ip, #788]!	; 0x314

00010d5c <malloc@plt>:
   10d5c:	add	ip, pc, #0, 12
   10d60:	add	ip, ip, #94208	; 0x17000
   10d64:	ldr	pc, [ip, #780]!	; 0x30c

00010d68 <__libc_start_main@plt>:
   10d68:	add	ip, pc, #0, 12
   10d6c:	add	ip, ip, #94208	; 0x17000
   10d70:	ldr	pc, [ip, #772]!	; 0x304

00010d74 <__freading@plt>:
   10d74:	add	ip, pc, #0, 12
   10d78:	add	ip, ip, #94208	; 0x17000
   10d7c:	ldr	pc, [ip, #764]!	; 0x2fc

00010d80 <__gmon_start__@plt>:
   10d80:	add	ip, pc, #0, 12
   10d84:	add	ip, ip, #94208	; 0x17000
   10d88:	ldr	pc, [ip, #756]!	; 0x2f4

00010d8c <mempcpy@plt>:
   10d8c:	add	ip, pc, #0, 12
   10d90:	add	ip, ip, #94208	; 0x17000
   10d94:	ldr	pc, [ip, #748]!	; 0x2ec

00010d98 <getopt_long@plt>:
   10d98:	add	ip, pc, #0, 12
   10d9c:	add	ip, ip, #94208	; 0x17000
   10da0:	ldr	pc, [ip, #740]!	; 0x2e4

00010da4 <__ctype_b_loc@plt>:
   10da4:	add	ip, pc, #0, 12
   10da8:	add	ip, ip, #94208	; 0x17000
   10dac:	ldr	pc, [ip, #732]!	; 0x2dc

00010db0 <getcwd@plt>:
   10db0:	add	ip, pc, #0, 12
   10db4:	add	ip, ip, #94208	; 0x17000
   10db8:	ldr	pc, [ip, #724]!	; 0x2d4

00010dbc <exit@plt>:
   10dbc:	add	ip, pc, #0, 12
   10dc0:	add	ip, ip, #94208	; 0x17000
   10dc4:	ldr	pc, [ip, #716]!	; 0x2cc

00010dc8 <strlen@plt>:
   10dc8:	add	ip, pc, #0, 12
   10dcc:	add	ip, ip, #94208	; 0x17000
   10dd0:	ldr	pc, [ip, #708]!	; 0x2c4

00010dd4 <__errno_location@plt>:
   10dd4:	add	ip, pc, #0, 12
   10dd8:	add	ip, ip, #94208	; 0x17000
   10ddc:	ldr	pc, [ip, #700]!	; 0x2bc

00010de0 <__cxa_atexit@plt>:
   10de0:	add	ip, pc, #0, 12
   10de4:	add	ip, ip, #94208	; 0x17000
   10de8:	ldr	pc, [ip, #692]!	; 0x2b4

00010dec <memset@plt>:
   10dec:	add	ip, pc, #0, 12
   10df0:	add	ip, ip, #94208	; 0x17000
   10df4:	ldr	pc, [ip, #684]!	; 0x2ac

00010df8 <__printf_chk@plt>:
   10df8:	add	ip, pc, #0, 12
   10dfc:	add	ip, ip, #94208	; 0x17000
   10e00:	ldr	pc, [ip, #676]!	; 0x2a4

00010e04 <fileno@plt>:
   10e04:	add	ip, pc, #0, 12
   10e08:	add	ip, ip, #94208	; 0x17000
   10e0c:	ldr	pc, [ip, #668]!	; 0x29c

00010e10 <__fprintf_chk@plt>:
   10e10:	add	ip, pc, #0, 12
   10e14:	add	ip, ip, #94208	; 0x17000
   10e18:	ldr	pc, [ip, #660]!	; 0x294

00010e1c <fclose@plt>:
   10e1c:	add	ip, pc, #0, 12
   10e20:	add	ip, ip, #94208	; 0x17000
   10e24:	ldr	pc, [ip, #652]!	; 0x28c

00010e28 <fseeko64@plt>:
   10e28:	add	ip, pc, #0, 12
   10e2c:	add	ip, ip, #94208	; 0x17000
   10e30:	ldr	pc, [ip, #644]!	; 0x284

00010e34 <__overflow@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #94208	; 0x17000
   10e3c:	ldr	pc, [ip, #636]!	; 0x27c

00010e40 <setlocale@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #94208	; 0x17000
   10e48:	ldr	pc, [ip, #628]!	; 0x274

00010e4c <strrchr@plt>:
   10e4c:	add	ip, pc, #0, 12
   10e50:	add	ip, ip, #94208	; 0x17000
   10e54:	ldr	pc, [ip, #620]!	; 0x26c

00010e58 <nl_langinfo@plt>:
   10e58:	add	ip, pc, #0, 12
   10e5c:	add	ip, ip, #94208	; 0x17000
   10e60:	ldr	pc, [ip, #612]!	; 0x264

00010e64 <bindtextdomain@plt>:
   10e64:	add	ip, pc, #0, 12
   10e68:	add	ip, ip, #94208	; 0x17000
   10e6c:	ldr	pc, [ip, #604]!	; 0x25c

00010e70 <__xstat64@plt>:
   10e70:	add	ip, pc, #0, 12
   10e74:	add	ip, ip, #94208	; 0x17000
   10e78:	ldr	pc, [ip, #596]!	; 0x254

00010e7c <strncmp@plt>:
   10e7c:	add	ip, pc, #0, 12
   10e80:	add	ip, ip, #94208	; 0x17000
   10e84:	ldr	pc, [ip, #588]!	; 0x24c

00010e88 <abort@plt>:
   10e88:	add	ip, pc, #0, 12
   10e8c:	add	ip, ip, #94208	; 0x17000
   10e90:	ldr	pc, [ip, #580]!	; 0x244

00010e94 <strspn@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #94208	; 0x17000
   10e9c:	ldr	pc, [ip, #572]!	; 0x23c

Disassembly of section .text:

00010ea0 <.text>:
   10ea0:	mov	fp, #0
   10ea4:	mov	lr, #0
   10ea8:	pop	{r1}		; (ldr r1, [sp], #4)
   10eac:	mov	r2, sp
   10eb0:	push	{r2}		; (str r2, [sp, #-4]!)
   10eb4:	push	{r0}		; (str r0, [sp, #-4]!)
   10eb8:	ldr	ip, [pc, #16]	; 10ed0 <strspn@plt+0x3c>
   10ebc:	push	{ip}		; (str ip, [sp, #-4]!)
   10ec0:	ldr	r0, [pc, #12]	; 10ed4 <strspn@plt+0x40>
   10ec4:	ldr	r3, [pc, #12]	; 10ed8 <strspn@plt+0x44>
   10ec8:	bl	10d68 <__libc_start_main@plt>
   10ecc:	bl	10e88 <abort@plt>
   10ed0:	ldrdeq	r6, [r1], -r0
   10ed4:	andeq	r1, r1, ip, lsl #6
   10ed8:	andeq	r6, r1, r0, ror r4
   10edc:	ldr	r3, [pc, #20]	; 10ef8 <strspn@plt+0x64>
   10ee0:	ldr	r2, [pc, #20]	; 10efc <strspn@plt+0x68>
   10ee4:	add	r3, pc, r3
   10ee8:	ldr	r2, [r3, r2]
   10eec:	cmp	r2, #0
   10ef0:	bxeq	lr
   10ef4:	b	10d80 <__gmon_start__@plt>
   10ef8:	andeq	r7, r1, r4, lsl r1
   10efc:	ldrdeq	r0, [r0], -ip
   10f00:	ldr	r3, [pc, #28]	; 10f24 <strspn@plt+0x90>
   10f04:	ldr	r0, [pc, #28]	; 10f28 <strspn@plt+0x94>
   10f08:	sub	r3, r3, r0
   10f0c:	cmp	r3, #6
   10f10:	bxls	lr
   10f14:	ldr	r3, [pc, #16]	; 10f2c <strspn@plt+0x98>
   10f18:	cmp	r3, #0
   10f1c:	bxeq	lr
   10f20:	bx	r3
   10f24:	andeq	r8, r2, r3, lsr r1
   10f28:	andeq	r8, r2, r0, lsr r1
   10f2c:	andeq	r0, r0, r0
   10f30:	ldr	r1, [pc, #36]	; 10f5c <strspn@plt+0xc8>
   10f34:	ldr	r0, [pc, #36]	; 10f60 <strspn@plt+0xcc>
   10f38:	sub	r1, r1, r0
   10f3c:	asr	r1, r1, #2
   10f40:	add	r1, r1, r1, lsr #31
   10f44:	asrs	r1, r1, #1
   10f48:	bxeq	lr
   10f4c:	ldr	r3, [pc, #16]	; 10f64 <strspn@plt+0xd0>
   10f50:	cmp	r3, #0
   10f54:	bxeq	lr
   10f58:	bx	r3
   10f5c:	andeq	r8, r2, r0, lsr r1
   10f60:	andeq	r8, r2, r0, lsr r1
   10f64:	andeq	r0, r0, r0
   10f68:	push	{r4, lr}
   10f6c:	ldr	r4, [pc, #24]	; 10f8c <strspn@plt+0xf8>
   10f70:	ldrb	r3, [r4]
   10f74:	cmp	r3, #0
   10f78:	popne	{r4, pc}
   10f7c:	bl	10f00 <strspn@plt+0x6c>
   10f80:	mov	r3, #1
   10f84:	strb	r3, [r4]
   10f88:	pop	{r4, pc}
   10f8c:	andeq	r8, r2, r8, asr #2
   10f90:	ldr	r0, [pc, #40]	; 10fc0 <strspn@plt+0x12c>
   10f94:	ldr	r3, [r0]
   10f98:	cmp	r3, #0
   10f9c:	bne	10fa4 <strspn@plt+0x110>
   10fa0:	b	10f30 <strspn@plt+0x9c>
   10fa4:	ldr	r3, [pc, #24]	; 10fc4 <strspn@plt+0x130>
   10fa8:	cmp	r3, #0
   10fac:	beq	10fa0 <strspn@plt+0x10c>
   10fb0:	push	{r4, lr}
   10fb4:	blx	r3
   10fb8:	pop	{r4, lr}
   10fbc:	b	10f30 <strspn@plt+0x9c>
   10fc0:	andeq	r7, r2, r4, lsl pc
   10fc4:	andeq	r0, r0, r0
   10fc8:	push	{lr}		; (str lr, [sp, #-4]!)
   10fcc:	sub	sp, sp, #60	; 0x3c
   10fd0:	subs	r6, r0, #0
   10fd4:	beq	11010 <strspn@plt+0x17c>
   10fd8:	ldr	r3, [pc, #728]	; 112b8 <strspn@plt+0x424>
   10fdc:	ldr	r4, [r3]
   10fe0:	mov	r2, #5
   10fe4:	ldr	r1, [pc, #720]	; 112bc <strspn@plt+0x428>
   10fe8:	mov	r0, #0
   10fec:	bl	10ccc <dcgettext@plt>
   10ff0:	ldr	r3, [pc, #712]	; 112c0 <strspn@plt+0x42c>
   10ff4:	ldr	r3, [r3]
   10ff8:	mov	r2, r0
   10ffc:	mov	r1, #1
   11000:	mov	r0, r4
   11004:	bl	10e10 <__fprintf_chk@plt>
   11008:	mov	r0, r6
   1100c:	bl	10dbc <exit@plt>
   11010:	mov	r2, #5
   11014:	ldr	r1, [pc, #680]	; 112c4 <strspn@plt+0x430>
   11018:	mov	r0, #0
   1101c:	bl	10ccc <dcgettext@plt>
   11020:	ldr	r3, [pc, #664]	; 112c0 <strspn@plt+0x42c>
   11024:	ldr	r2, [r3]
   11028:	mov	r1, r0
   1102c:	mov	r0, #1
   11030:	bl	10df8 <__printf_chk@plt>
   11034:	mov	r2, #5
   11038:	ldr	r1, [pc, #648]	; 112c8 <strspn@plt+0x434>
   1103c:	mov	r0, #0
   11040:	bl	10ccc <dcgettext@plt>
   11044:	ldr	r4, [pc, #640]	; 112cc <strspn@plt+0x438>
   11048:	ldr	r1, [r4]
   1104c:	bl	10c3c <fputs_unlocked@plt>
   11050:	mov	r2, #5
   11054:	ldr	r1, [pc, #628]	; 112d0 <strspn@plt+0x43c>
   11058:	mov	r0, #0
   1105c:	bl	10ccc <dcgettext@plt>
   11060:	ldr	r1, [r4]
   11064:	bl	10c3c <fputs_unlocked@plt>
   11068:	mov	r2, #5
   1106c:	ldr	r1, [pc, #608]	; 112d4 <strspn@plt+0x440>
   11070:	mov	r0, #0
   11074:	bl	10ccc <dcgettext@plt>
   11078:	ldr	r1, [r4]
   1107c:	bl	10c3c <fputs_unlocked@plt>
   11080:	mov	r2, #5
   11084:	ldr	r1, [pc, #588]	; 112d8 <strspn@plt+0x444>
   11088:	mov	r0, #0
   1108c:	bl	10ccc <dcgettext@plt>
   11090:	ldr	r1, [r4]
   11094:	bl	10c3c <fputs_unlocked@plt>
   11098:	mov	r2, #5
   1109c:	ldr	r1, [pc, #568]	; 112dc <strspn@plt+0x448>
   110a0:	mov	r0, #0
   110a4:	bl	10ccc <dcgettext@plt>
   110a8:	ldr	r1, [r4]
   110ac:	bl	10c3c <fputs_unlocked@plt>
   110b0:	mov	ip, sp
   110b4:	ldr	lr, [pc, #548]	; 112e0 <strspn@plt+0x44c>
   110b8:	ldm	lr!, {r0, r1, r2, r3}
   110bc:	stmia	ip!, {r0, r1, r2, r3}
   110c0:	ldm	lr!, {r0, r1, r2, r3}
   110c4:	stmia	ip!, {r0, r1, r2, r3}
   110c8:	ldm	lr!, {r0, r1, r2, r3}
   110cc:	stmia	ip!, {r0, r1, r2, r3}
   110d0:	ldm	lr, {r0, r1}
   110d4:	stm	ip, {r0, r1}
   110d8:	ldr	r1, [sp]
   110dc:	cmp	r1, #0
   110e0:	moveq	r4, sp
   110e4:	beq	1110c <strspn@plt+0x278>
   110e8:	mov	r4, sp
   110ec:	ldr	r5, [pc, #496]	; 112e4 <strspn@plt+0x450>
   110f0:	mov	r0, r5
   110f4:	bl	10c54 <strcmp@plt>
   110f8:	cmp	r0, #0
   110fc:	beq	1110c <strspn@plt+0x278>
   11100:	ldr	r1, [r4, #8]!
   11104:	cmp	r1, #0
   11108:	bne	110f0 <strspn@plt+0x25c>
   1110c:	ldr	r4, [r4, #4]
   11110:	cmp	r4, #0
   11114:	beq	11228 <strspn@plt+0x394>
   11118:	mov	r2, #5
   1111c:	ldr	r1, [pc, #452]	; 112e8 <strspn@plt+0x454>
   11120:	mov	r0, #0
   11124:	bl	10ccc <dcgettext@plt>
   11128:	ldr	r3, [pc, #444]	; 112ec <strspn@plt+0x458>
   1112c:	ldr	r2, [pc, #444]	; 112f0 <strspn@plt+0x45c>
   11130:	mov	r1, r0
   11134:	mov	r0, #1
   11138:	bl	10df8 <__printf_chk@plt>
   1113c:	mov	r1, #0
   11140:	mov	r0, #5
   11144:	bl	10e40 <setlocale@plt>
   11148:	cmp	r0, #0
   1114c:	beq	11164 <strspn@plt+0x2d0>
   11150:	mov	r2, #3
   11154:	ldr	r1, [pc, #408]	; 112f4 <strspn@plt+0x460>
   11158:	bl	10e7c <strncmp@plt>
   1115c:	cmp	r0, #0
   11160:	bne	111c4 <strspn@plt+0x330>
   11164:	mov	r2, #5
   11168:	ldr	r1, [pc, #392]	; 112f8 <strspn@plt+0x464>
   1116c:	mov	r0, #0
   11170:	bl	10ccc <dcgettext@plt>
   11174:	ldr	r5, [pc, #360]	; 112e4 <strspn@plt+0x450>
   11178:	mov	r3, r5
   1117c:	ldr	r2, [pc, #360]	; 112ec <strspn@plt+0x458>
   11180:	mov	r1, r0
   11184:	mov	r0, #1
   11188:	bl	10df8 <__printf_chk@plt>
   1118c:	mov	r2, #5
   11190:	ldr	r1, [pc, #356]	; 112fc <strspn@plt+0x468>
   11194:	mov	r0, #0
   11198:	bl	10ccc <dcgettext@plt>
   1119c:	mov	r1, r0
   111a0:	ldr	r2, [pc, #344]	; 11300 <strspn@plt+0x46c>
   111a4:	ldr	r3, [pc, #344]	; 11304 <strspn@plt+0x470>
   111a8:	cmp	r4, r5
   111ac:	movne	r3, r2
   111b0:	mov	r2, r4
   111b4:	mov	r0, #1
   111b8:	bl	10df8 <__printf_chk@plt>
   111bc:	b	11008 <strspn@plt+0x174>
   111c0:	ldr	r4, [pc, #284]	; 112e4 <strspn@plt+0x450>
   111c4:	mov	r2, #5
   111c8:	ldr	r1, [pc, #312]	; 11308 <strspn@plt+0x474>
   111cc:	mov	r0, #0
   111d0:	bl	10ccc <dcgettext@plt>
   111d4:	ldr	r3, [pc, #240]	; 112cc <strspn@plt+0x438>
   111d8:	ldr	r1, [r3]
   111dc:	bl	10c3c <fputs_unlocked@plt>
   111e0:	b	11164 <strspn@plt+0x2d0>
   111e4:	mov	r2, #5
   111e8:	ldr	r1, [pc, #264]	; 112f8 <strspn@plt+0x464>
   111ec:	mov	r0, #0
   111f0:	bl	10ccc <dcgettext@plt>
   111f4:	ldr	r4, [pc, #232]	; 112e4 <strspn@plt+0x450>
   111f8:	mov	r3, r4
   111fc:	ldr	r2, [pc, #232]	; 112ec <strspn@plt+0x458>
   11200:	mov	r1, r0
   11204:	mov	r0, #1
   11208:	bl	10df8 <__printf_chk@plt>
   1120c:	mov	r2, #5
   11210:	ldr	r1, [pc, #228]	; 112fc <strspn@plt+0x468>
   11214:	mov	r0, #0
   11218:	bl	10ccc <dcgettext@plt>
   1121c:	mov	r1, r0
   11220:	ldr	r3, [pc, #220]	; 11304 <strspn@plt+0x470>
   11224:	b	111b0 <strspn@plt+0x31c>
   11228:	mov	r2, #5
   1122c:	ldr	r1, [pc, #180]	; 112e8 <strspn@plt+0x454>
   11230:	mov	r0, #0
   11234:	bl	10ccc <dcgettext@plt>
   11238:	ldr	r3, [pc, #172]	; 112ec <strspn@plt+0x458>
   1123c:	ldr	r2, [pc, #172]	; 112f0 <strspn@plt+0x45c>
   11240:	mov	r1, r0
   11244:	mov	r0, #1
   11248:	bl	10df8 <__printf_chk@plt>
   1124c:	mov	r1, #0
   11250:	mov	r0, #5
   11254:	bl	10e40 <setlocale@plt>
   11258:	cmp	r0, #0
   1125c:	beq	111e4 <strspn@plt+0x350>
   11260:	mov	r2, #3
   11264:	ldr	r1, [pc, #136]	; 112f4 <strspn@plt+0x460>
   11268:	bl	10e7c <strncmp@plt>
   1126c:	cmp	r0, #0
   11270:	bne	111c0 <strspn@plt+0x32c>
   11274:	mov	r2, #5
   11278:	ldr	r1, [pc, #120]	; 112f8 <strspn@plt+0x464>
   1127c:	mov	r0, #0
   11280:	bl	10ccc <dcgettext@plt>
   11284:	ldr	r4, [pc, #88]	; 112e4 <strspn@plt+0x450>
   11288:	mov	r3, r4
   1128c:	ldr	r2, [pc, #88]	; 112ec <strspn@plt+0x458>
   11290:	mov	r1, r0
   11294:	mov	r0, #1
   11298:	bl	10df8 <__printf_chk@plt>
   1129c:	mov	r2, #5
   112a0:	ldr	r1, [pc, #84]	; 112fc <strspn@plt+0x468>
   112a4:	mov	r0, #0
   112a8:	bl	10ccc <dcgettext@plt>
   112ac:	mov	r1, r0
   112b0:	ldr	r3, [pc, #76]	; 11304 <strspn@plt+0x470>
   112b4:	b	111b0 <strspn@plt+0x31c>
   112b8:	andeq	r8, r2, r0, asr #2
   112bc:	andeq	r6, r1, ip, ror #11
   112c0:	andeq	r8, r2, r4, asr r1
   112c4:	andeq	r6, r1, r4, lsl r6
   112c8:	andeq	r6, r1, r4, lsr r6
   112cc:	andeq	r8, r2, r4, asr #2
   112d0:	andeq	r6, r1, ip, ror #12
   112d4:	andeq	r6, r1, r4, lsr #16
   112d8:	andeq	r6, r1, r0, lsr sl
   112dc:	andeq	r6, r1, r0, ror #20
   112e0:	strdeq	r6, [r1], -r8
   112e4:	andeq	r6, r1, r0, ror #11
   112e8:	muleq	r1, r8, sl
   112ec:			; <UNDEFINED> instruction: 0x00016ab0
   112f0:	ldrdeq	r6, [r1], -r8
   112f4:	andeq	r6, r1, r8, ror #21
   112f8:	andeq	r6, r1, r4, lsr fp
   112fc:	andeq	r6, r1, r0, asr fp
   11300:	andeq	r6, r1, r0, ror sp
   11304:	andeq	r6, r1, r0, lsl #24
   11308:	andeq	r6, r1, ip, ror #21
   1130c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11310:	sub	sp, sp, #28
   11314:	mov	sl, r0
   11318:	mov	r4, r1
   1131c:	ldr	r0, [r1]
   11320:	bl	13178 <strspn@plt+0x22e4>
   11324:	ldr	r1, [pc, #760]	; 11624 <strspn@plt+0x790>
   11328:	mov	r0, #6
   1132c:	bl	10e40 <setlocale@plt>
   11330:	ldr	r5, [pc, #752]	; 11628 <strspn@plt+0x794>
   11334:	ldr	r1, [pc, #752]	; 1162c <strspn@plt+0x798>
   11338:	mov	r0, r5
   1133c:	bl	10e64 <bindtextdomain@plt>
   11340:	mov	r0, r5
   11344:	bl	10ce4 <textdomain@plt>
   11348:	ldr	r0, [pc, #736]	; 11630 <strspn@plt+0x79c>
   1134c:	bl	164d4 <strspn@plt+0x5640>
   11350:	mov	r3, #0
   11354:	str	r3, [sp, #12]
   11358:	mvn	fp, #0
   1135c:	ldr	r7, [pc, #720]	; 11634 <strspn@plt+0x7a0>
   11360:	ldr	r6, [pc, #720]	; 11638 <strspn@plt+0x7a4>
   11364:	mov	r5, r3
   11368:	ldr	r9, [pc, #716]	; 1163c <strspn@plt+0x7a8>
   1136c:	mov	r8, #1
   11370:	str	r5, [sp]
   11374:	mov	r3, r7
   11378:	mov	r2, r6
   1137c:	mov	r1, r4
   11380:	mov	r0, sl
   11384:	bl	10d98 <getopt_long@plt>
   11388:	cmn	r0, #1
   1138c:	beq	11464 <strspn@plt+0x5d0>
   11390:	cmp	r0, #109	; 0x6d
   11394:	beq	1145c <strspn@plt+0x5c8>
   11398:	bgt	113fc <strspn@plt+0x568>
   1139c:	cmn	r0, #2
   113a0:	beq	11444 <strspn@plt+0x5b0>
   113a4:	ble	113c0 <strspn@plt+0x52c>
   113a8:	cmp	r0, #101	; 0x65
   113ac:	beq	11454 <strspn@plt+0x5c0>
   113b0:	cmp	r0, #102	; 0x66
   113b4:	bne	1144c <strspn@plt+0x5b8>
   113b8:	mov	fp, r8
   113bc:	b	11370 <strspn@plt+0x4dc>
   113c0:	cmn	r0, #3
   113c4:	bne	1144c <strspn@plt+0x5b8>
   113c8:	mov	r4, #0
   113cc:	str	r4, [sp, #4]
   113d0:	ldr	r3, [pc, #616]	; 11640 <strspn@plt+0x7ac>
   113d4:	str	r3, [sp]
   113d8:	ldr	r3, [pc, #612]	; 11644 <strspn@plt+0x7b0>
   113dc:	ldr	r3, [r3]
   113e0:	ldr	r2, [pc, #608]	; 11648 <strspn@plt+0x7b4>
   113e4:	ldr	r1, [pc, #608]	; 1164c <strspn@plt+0x7b8>
   113e8:	ldr	r0, [pc, #608]	; 11650 <strspn@plt+0x7bc>
   113ec:	ldr	r0, [r0]
   113f0:	bl	152e8 <strspn@plt+0x4454>
   113f4:	mov	r0, r4
   113f8:	bl	10dbc <exit@plt>
   113fc:	cmp	r0, #115	; 0x73
   11400:	beq	11434 <strspn@plt+0x5a0>
   11404:	ble	11420 <strspn@plt+0x58c>
   11408:	cmp	r0, #118	; 0x76
   1140c:	beq	1143c <strspn@plt+0x5a8>
   11410:	cmp	r0, #122	; 0x7a
   11414:	bne	1144c <strspn@plt+0x5b8>
   11418:	str	r8, [sp, #12]
   1141c:	b	11370 <strspn@plt+0x4dc>
   11420:	cmp	r0, #110	; 0x6e
   11424:	strbeq	r8, [r9]
   11428:	beq	11370 <strspn@plt+0x4dc>
   1142c:	cmp	r0, #113	; 0x71
   11430:	bne	1144c <strspn@plt+0x5b8>
   11434:	strb	r5, [r9, #1]
   11438:	b	11370 <strspn@plt+0x4dc>
   1143c:	strb	r8, [r9, #1]
   11440:	b	11370 <strspn@plt+0x4dc>
   11444:	mov	r0, #0
   11448:	bl	10fc8 <strspn@plt+0x134>
   1144c:	mov	r0, #1
   11450:	bl	10fc8 <strspn@plt+0x134>
   11454:	mov	fp, r5
   11458:	b	11370 <strspn@plt+0x4dc>
   1145c:	mov	fp, #2
   11460:	b	11370 <strspn@plt+0x4dc>
   11464:	ldr	r3, [pc, #488]	; 11654 <strspn@plt+0x7c0>
   11468:	ldr	r3, [r3]
   1146c:	cmp	sl, r3
   11470:	ble	114dc <strspn@plt+0x648>
   11474:	sub	r2, sl, r3
   11478:	cmp	r2, #1
   1147c:	ble	114ac <strspn@plt+0x618>
   11480:	ldr	r3, [pc, #436]	; 1163c <strspn@plt+0x7a8>
   11484:	ldrb	r3, [r3]
   11488:	cmp	r3, #0
   1148c:	bne	11504 <strspn@plt+0x670>
   11490:	mov	r2, #0
   11494:	ldr	r3, [pc, #416]	; 1163c <strspn@plt+0x7a8>
   11498:	strb	r2, [r3]
   1149c:	ldr	r3, [pc, #432]	; 11654 <strspn@plt+0x7c0>
   114a0:	ldr	r3, [r3]
   114a4:	cmp	sl, r3
   114a8:	ble	11610 <strspn@plt+0x77c>
   114ac:	ldrsb	r2, [sp, #12]
   114b0:	cmp	r2, #0
   114b4:	moveq	r2, #10
   114b8:	movne	r2, #0
   114bc:	str	r2, [sp, #16]
   114c0:	str	r2, [sp, #20]
   114c4:	mov	r2, #0
   114c8:	str	r2, [sp, #12]
   114cc:	ldr	r9, [pc, #360]	; 1163c <strspn@plt+0x7a8>
   114d0:	ldr	r8, [pc, #376]	; 11650 <strspn@plt+0x7bc>
   114d4:	ldr	r6, [pc, #376]	; 11654 <strspn@plt+0x7c0>
   114d8:	b	11558 <strspn@plt+0x6c4>
   114dc:	mov	r2, #5
   114e0:	ldr	r1, [pc, #368]	; 11658 <strspn@plt+0x7c4>
   114e4:	mov	r0, #0
   114e8:	bl	10ccc <dcgettext@plt>
   114ec:	mov	r2, r0
   114f0:	mov	r1, #0
   114f4:	mov	r0, r1
   114f8:	bl	10d50 <error@plt>
   114fc:	mov	r0, #1
   11500:	bl	10fc8 <strspn@plt+0x134>
   11504:	mov	r2, #5
   11508:	ldr	r1, [pc, #332]	; 1165c <strspn@plt+0x7c8>
   1150c:	mov	r0, #0
   11510:	bl	10ccc <dcgettext@plt>
   11514:	mov	r2, r0
   11518:	mov	r1, #0
   1151c:	mov	r0, r1
   11520:	bl	10d50 <error@plt>
   11524:	b	11490 <strspn@plt+0x5fc>
   11528:	mov	r1, #63	; 0x3f
   1152c:	mov	r0, r7
   11530:	bl	11664 <strspn@plt+0x7d0>
   11534:	mov	r5, r0
   11538:	b	11574 <strspn@plt+0x6e0>
   1153c:	mov	r0, r5
   11540:	bl	120ec <strspn@plt+0x1258>
   11544:	ldr	r3, [r6]
   11548:	add	r3, r3, #1
   1154c:	str	r3, [r6]
   11550:	cmp	sl, r3
   11554:	ble	11618 <strspn@plt+0x784>
   11558:	ldr	r7, [r4, r3, lsl #2]
   1155c:	cmn	fp, #1
   11560:	beq	11528 <strspn@plt+0x694>
   11564:	mov	r1, fp
   11568:	mov	r0, r7
   1156c:	bl	11794 <strspn@plt+0x900>
   11570:	mov	r5, r0
   11574:	cmp	r5, #0
   11578:	beq	115c4 <strspn@plt+0x730>
   1157c:	ldr	r1, [r8]
   11580:	mov	r0, r5
   11584:	bl	10c3c <fputs_unlocked@plt>
   11588:	ldrb	r3, [r9]
   1158c:	cmp	r3, #0
   11590:	bne	1153c <strspn@plt+0x6a8>
   11594:	ldr	r0, [r8]
   11598:	ldr	r3, [r0, #20]
   1159c:	ldr	r2, [r0, #24]
   115a0:	cmp	r3, r2
   115a4:	addcc	r2, r3, #1
   115a8:	strcc	r2, [r0, #20]
   115ac:	ldrbcc	r2, [sp, #16]
   115b0:	strbcc	r2, [r3]
   115b4:	bcc	1153c <strspn@plt+0x6a8>
   115b8:	ldr	r1, [sp, #20]
   115bc:	bl	10e34 <__overflow@plt>
   115c0:	b	1153c <strspn@plt+0x6a8>
   115c4:	ldrb	r3, [r9, #1]
   115c8:	cmp	r3, #0
   115cc:	moveq	r3, #1
   115d0:	streq	r3, [sp, #12]
   115d4:	beq	11544 <strspn@plt+0x6b0>
   115d8:	bl	10dd4 <__errno_location@plt>
   115dc:	ldr	r5, [r0]
   115e0:	mov	r2, r7
   115e4:	mov	r1, #3
   115e8:	mov	r0, #0
   115ec:	bl	14b60 <strspn@plt+0x3ccc>
   115f0:	mov	r3, r0
   115f4:	ldr	r2, [pc, #100]	; 11660 <strspn@plt+0x7cc>
   115f8:	mov	r1, r5
   115fc:	mov	r0, #0
   11600:	bl	10d50 <error@plt>
   11604:	mov	r3, #1
   11608:	str	r3, [sp, #12]
   1160c:	b	11544 <strspn@plt+0x6b0>
   11610:	mov	r3, #0
   11614:	str	r3, [sp, #12]
   11618:	ldr	r0, [sp, #12]
   1161c:	add	sp, sp, #28
   11620:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11624:	andeq	r6, r1, r0, ror sp
   11628:	ldrdeq	r6, [r1], -ip
   1162c:	andeq	r6, r1, r4, lsl #23
   11630:	andeq	r1, r1, ip, asr #30
   11634:	andeq	r6, r1, r0, lsr r5
   11638:	andeq	r6, r1, ip, lsr #23
   1163c:	andeq	r8, r2, r9, asr #2
   11640:	muleq	r1, ip, fp
   11644:	andeq	r8, r2, r8, ror #1
   11648:	ldrdeq	r6, [r1], -r8
   1164c:	andeq	r6, r1, r0, ror #11
   11650:	andeq	r8, r2, r4, asr #2
   11654:	andeq	r8, r2, r8, lsr r1
   11658:			; <UNDEFINED> instruction: 0x00016bb8
   1165c:	andeq	r6, r1, r8, asr #23
   11660:	andeq	r6, r1, r8, lsl #26
   11664:	push	{r4, r5, r6, r7, r8, lr}
   11668:	sub	sp, sp, #128	; 0x80
   1166c:	mov	r8, r0
   11670:	subs	r7, r1, #0
   11674:	moveq	r4, #128	; 0x80
   11678:	beq	11688 <strspn@plt+0x7f4>
   1167c:	cmp	r7, #1024	; 0x400
   11680:	addls	r4, r7, #1
   11684:	ldrhi	r4, [pc, #260]	; 11790 <strspn@plt+0x8fc>
   11688:	cmp	r4, #128	; 0x80
   1168c:	cmpeq	r7, #0
   11690:	moveq	r6, #0
   11694:	moveq	r5, sp
   11698:	bne	116e0 <strspn@plt+0x84c>
   1169c:	mov	r2, r4
   116a0:	mov	r1, r5
   116a4:	mov	r0, r8
   116a8:	bl	10d08 <readlink@plt>
   116ac:	cmp	r0, #0
   116b0:	blt	11708 <strspn@plt+0x874>
   116b4:	cmp	r4, r0
   116b8:	bhi	11720 <strspn@plt+0x88c>
   116bc:	mov	r0, r6
   116c0:	bl	120ec <strspn@plt+0x1258>
   116c4:	cmn	r4, #-1073741823	; 0xc0000001
   116c8:	lslls	r4, r4, #1
   116cc:	bls	11688 <strspn@plt+0x7f4>
   116d0:	cmn	r4, #-2147483646	; 0x80000002
   116d4:	bhi	1177c <strspn@plt+0x8e8>
   116d8:	mvn	r4, #-2147483648	; 0x80000000
   116dc:	b	11688 <strspn@plt+0x7f4>
   116e0:	mov	r0, r4
   116e4:	bl	159e8 <strspn@plt+0x4b54>
   116e8:	subs	r5, r0, #0
   116ec:	movne	r6, r5
   116f0:	bne	1169c <strspn@plt+0x808>
   116f4:	bl	10dd4 <__errno_location@plt>
   116f8:	mov	r3, #12
   116fc:	str	r3, [r0]
   11700:	mov	r6, r5
   11704:	b	11714 <strspn@plt+0x880>
   11708:	mov	r0, r6
   1170c:	bl	120ec <strspn@plt+0x1258>
   11710:	mov	r6, #0
   11714:	mov	r0, r6
   11718:	add	sp, sp, #128	; 0x80
   1171c:	pop	{r4, r5, r6, r7, r8, pc}
   11720:	mov	r3, #0
   11724:	strb	r3, [r5, r0]
   11728:	cmp	r6, r3
   1172c:	beq	11750 <strspn@plt+0x8bc>
   11730:	add	r1, r0, #1
   11734:	cmp	r4, r1
   11738:	bls	11714 <strspn@plt+0x880>
   1173c:	mov	r0, r6
   11740:	bl	15a18 <strspn@plt+0x4b84>
   11744:	cmp	r0, #0
   11748:	movne	r6, r0
   1174c:	b	11714 <strspn@plt+0x880>
   11750:	add	r4, r0, #1
   11754:	mov	r0, r4
   11758:	bl	159e8 <strspn@plt+0x4b54>
   1175c:	subs	r6, r0, #0
   11760:	beq	11714 <strspn@plt+0x880>
   11764:	mov	r2, r4
   11768:	mov	r1, r5
   1176c:	mov	r0, r6
   11770:	bl	10c9c <memcpy@plt>
   11774:	mov	r6, r0
   11778:	b	11714 <strspn@plt+0x880>
   1177c:	bl	10dd4 <__errno_location@plt>
   11780:	mov	r3, #12
   11784:	str	r3, [r0]
   11788:	mov	r6, #0
   1178c:	b	11714 <strspn@plt+0x880>
   11790:	andeq	r0, r0, r1, lsl #8
   11794:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11798:	sub	sp, sp, #3232	; 0xca0
   1179c:	sub	sp, sp, #12
   117a0:	and	fp, r1, #3
   117a4:	sub	r3, fp, #1
   117a8:	tst	r3, fp
   117ac:	bne	11850 <strspn@plt+0x9bc>
   117b0:	mov	r4, r0
   117b4:	mov	r6, r1
   117b8:	cmp	r0, #0
   117bc:	beq	11864 <strspn@plt+0x9d0>
   117c0:	ldrb	r1, [r0]
   117c4:	cmp	r1, #0
   117c8:	beq	11878 <strspn@plt+0x9e4>
   117cc:	add	r3, sp, #152	; 0x98
   117d0:	str	r3, [sp, #144]	; 0x90
   117d4:	mov	r3, #1024	; 0x400
   117d8:	str	r3, [sp, #148]	; 0x94
   117dc:	add	r2, sp, #1184	; 0x4a0
   117e0:	str	r2, [sp, #1176]	; 0x498
   117e4:	str	r3, [sp, #1180]	; 0x49c
   117e8:	add	r2, sp, #2208	; 0x8a0
   117ec:	add	r2, r2, #8
   117f0:	str	r2, [sp, #2208]	; 0x8a0
   117f4:	str	r3, [sp, #2212]	; 0x8a4
   117f8:	cmp	r1, #47	; 0x2f
   117fc:	beq	118a4 <strspn@plt+0xa10>
   11800:	add	r5, sp, #2208	; 0x8a0
   11804:	add	r5, r5, #8
   11808:	sub	r7, r5, #8
   1180c:	ldr	r1, [sp, #2212]	; 0x8a4
   11810:	mov	r0, r5
   11814:	bl	10db0 <getcwd@plt>
   11818:	cmp	r0, #0
   1181c:	bne	11890 <strspn@plt+0x9fc>
   11820:	bl	10dd4 <__errno_location@plt>
   11824:	ldr	r3, [r0]
   11828:	cmp	r3, #12
   1182c:	beq	1188c <strspn@plt+0x9f8>
   11830:	cmp	r3, #34	; 0x22
   11834:	bne	11e8c <strspn@plt+0xff8>
   11838:	mov	r0, r7
   1183c:	bl	14d24 <strspn@plt+0x3e90>
   11840:	cmp	r0, #0
   11844:	beq	1188c <strspn@plt+0x9f8>
   11848:	ldr	r5, [sp, #2208]	; 0x8a0
   1184c:	b	1180c <strspn@plt+0x978>
   11850:	bl	10dd4 <__errno_location@plt>
   11854:	mov	r3, #22
   11858:	str	r3, [r0]
   1185c:	mov	r0, #0
   11860:	b	11eec <strspn@plt+0x1058>
   11864:	bl	10dd4 <__errno_location@plt>
   11868:	mov	r3, #22
   1186c:	str	r3, [r0]
   11870:	mov	r0, #0
   11874:	b	11eec <strspn@plt+0x1058>
   11878:	bl	10dd4 <__errno_location@plt>
   1187c:	mov	r3, #2
   11880:	str	r3, [r0]
   11884:	mov	r0, #0
   11888:	b	11eec <strspn@plt+0x1058>
   1188c:	bl	15958 <strspn@plt+0x4ac4>
   11890:	mov	r1, #0
   11894:	mov	r0, r5
   11898:	bl	10cf0 <rawmemchr@plt>
   1189c:	mov	r1, r0
   118a0:	b	118bc <strspn@plt+0xa28>
   118a4:	add	r1, sp, #3232	; 0xca0
   118a8:	add	r1, r1, #8
   118ac:	mov	r3, #47	; 0x2f
   118b0:	strb	r3, [r1, #-1024]!	; 0xfffffc00
   118b4:	mov	r5, r1
   118b8:	add	r1, r1, #1
   118bc:	and	r3, r6, #4
   118c0:	str	r3, [sp, #12]
   118c4:	mov	r3, #0
   118c8:	str	r3, [sp, #28]
   118cc:	str	r3, [sp, #20]
   118d0:	str	r3, [sp, #24]
   118d4:	ldrb	r2, [r4]
   118d8:	cmp	r2, #0
   118dc:	beq	11e18 <strspn@plt+0xf84>
   118e0:	cmp	r2, #47	; 0x2f
   118e4:	bne	11904 <strspn@plt+0xa70>
   118e8:	ldrb	r2, [r4, #1]!
   118ec:	cmp	r2, #47	; 0x2f
   118f0:	beq	118e8 <strspn@plt+0xa54>
   118f4:	mov	r3, r2
   118f8:	cmp	r2, #47	; 0x2f
   118fc:	cmpne	r2, #0
   11900:	beq	11a14 <strspn@plt+0xb80>
   11904:	mov	r6, r4
   11908:	ldrb	r3, [r6, #1]!
   1190c:	cmp	r3, #0
   11910:	cmpne	r3, #47	; 0x2f
   11914:	bne	11908 <strspn@plt+0xa74>
   11918:	str	r6, [sp, #16]
   1191c:	subs	r8, r6, r4
   11920:	beq	11e18 <strspn@plt+0xf84>
   11924:	cmp	r2, #46	; 0x2e
   11928:	movne	r3, #0
   1192c:	moveq	r3, #1
   11930:	cmp	r8, #1
   11934:	cmpeq	r2, #46	; 0x2e
   11938:	beq	11e10 <strspn@plt+0xf7c>
   1193c:	cmp	r8, #2
   11940:	movne	r3, #0
   11944:	andeq	r3, r3, #1
   11948:	cmp	r3, #0
   1194c:	bne	11a1c <strspn@plt+0xb88>
   11950:	ldrb	r3, [r1, #-1]
   11954:	cmp	r3, #47	; 0x2f
   11958:	addne	r0, r1, #1
   1195c:	movne	r3, #47	; 0x2f
   11960:	strbne	r3, [r1]
   11964:	moveq	r0, r1
   11968:	mov	r2, r0
   1196c:	add	r9, r8, #2
   11970:	ldr	r3, [sp, #2212]	; 0x8a4
   11974:	add	r3, r5, r3
   11978:	sub	r3, r3, r0
   1197c:	cmp	r3, r9
   11980:	bcs	119b4 <strspn@plt+0xb20>
   11984:	sub	r7, r2, r5
   11988:	add	r0, sp, #2208	; 0x8a0
   1198c:	bl	14d94 <strspn@plt+0x3f00>
   11990:	cmp	r0, #0
   11994:	beq	11a74 <strspn@plt+0xbe0>
   11998:	ldr	r5, [sp, #2208]	; 0x8a0
   1199c:	add	r0, r5, r7
   119a0:	mov	r2, r0
   119a4:	ldr	r3, [sp, #2212]	; 0x8a4
   119a8:	sub	r3, r3, r7
   119ac:	cmp	r3, r9
   119b0:	bcc	11984 <strspn@plt+0xaf0>
   119b4:	mov	r2, r8
   119b8:	mov	r1, r4
   119bc:	bl	10d8c <mempcpy@plt>
   119c0:	str	r0, [sp, #32]
   119c4:	mov	r3, #0
   119c8:	strb	r3, [r0]
   119cc:	ldr	r3, [sp, #12]
   119d0:	cmp	r3, #0
   119d4:	bne	11c94 <strspn@plt+0xe00>
   119d8:	ldr	sl, [sp, #1176]	; 0x498
   119dc:	ldr	r7, [sp, #1180]	; 0x49c
   119e0:	sub	r7, r7, #1
   119e4:	mov	r2, r7
   119e8:	mov	r1, sl
   119ec:	mov	r0, r5
   119f0:	bl	10d08 <readlink@plt>
   119f4:	cmp	r7, r0
   119f8:	bgt	11a78 <strspn@plt+0xbe4>
   119fc:	add	r0, sp, #1168	; 0x490
   11a00:	add	r0, r0, #8
   11a04:	bl	14d24 <strspn@plt+0x3e90>
   11a08:	cmp	r0, #0
   11a0c:	bne	119d8 <strspn@plt+0xb44>
   11a10:	bl	15958 <strspn@plt+0x4ac4>
   11a14:	mov	r6, r4
   11a18:	b	11918 <strspn@plt+0xa84>
   11a1c:	ldrb	r3, [r4, #1]
   11a20:	cmp	r3, #46	; 0x2e
   11a24:	bne	11950 <strspn@plt+0xabc>
   11a28:	add	r3, r5, #1
   11a2c:	cmp	r1, r3
   11a30:	bls	11e10 <strspn@plt+0xf7c>
   11a34:	sub	r3, r1, #1
   11a38:	cmp	r5, r3
   11a3c:	bcs	11dc0 <strspn@plt+0xf2c>
   11a40:	ldrb	r2, [r1, #-2]
   11a44:	cmp	r2, #47	; 0x2f
   11a48:	moveq	r1, r3
   11a4c:	beq	11e10 <strspn@plt+0xf7c>
   11a50:	sub	r3, r1, #2
   11a54:	mov	r2, r5
   11a58:	mov	r1, r3
   11a5c:	cmp	r2, r3
   11a60:	beq	11e10 <strspn@plt+0xf7c>
   11a64:	ldrb	r0, [r3, #-1]!
   11a68:	cmp	r0, #47	; 0x2f
   11a6c:	bne	11a58 <strspn@plt+0xbc4>
   11a70:	b	11e10 <strspn@plt+0xf7c>
   11a74:	bl	15958 <strspn@plt+0x4ac4>
   11a78:	mov	r9, r0
   11a7c:	cmp	r0, #0
   11a80:	blt	11c94 <strspn@plt+0xe00>
   11a84:	ldr	r3, [sp, #24]
   11a88:	cmp	r3, #19
   11a8c:	addle	r3, r3, #1
   11a90:	strle	r3, [sp, #24]
   11a94:	ble	11b68 <strspn@plt+0xcd4>
   11a98:	ldrb	r3, [r4]
   11a9c:	cmp	r3, #0
   11aa0:	beq	11b68 <strspn@plt+0xcd4>
   11aa4:	rsb	r8, r8, #0
   11aa8:	mov	r3, #0
   11aac:	ldr	r7, [sp, #32]
   11ab0:	strb	r3, [r7, r8]
   11ab4:	ldrb	r1, [r5]
   11ab8:	add	r2, sp, #40	; 0x28
   11abc:	ldr	r3, [pc, #1108]	; 11f18 <strspn@plt+0x1084>
   11ac0:	cmp	r1, #0
   11ac4:	movne	r3, r5
   11ac8:	mov	r1, r3
   11acc:	mov	r0, #3
   11ad0:	bl	10e70 <__xstat64@plt>
   11ad4:	cmp	r0, #0
   11ad8:	bne	11b1c <strspn@plt+0xc88>
   11adc:	ldrb	r3, [r4]
   11ae0:	strb	r3, [r7, r8]
   11ae4:	ldr	r3, [sp, #28]
   11ae8:	cmp	r3, #0
   11aec:	beq	11b2c <strspn@plt+0xc98>
   11af0:	add	r2, sp, #40	; 0x28
   11af4:	mov	r1, r4
   11af8:	ldr	r0, [sp, #28]
   11afc:	bl	120a8 <strspn@plt+0x1214>
   11b00:	cmp	r0, #0
   11b04:	beq	11b58 <strspn@plt+0xcc4>
   11b08:	cmp	fp, #2
   11b0c:	beq	11c6c <strspn@plt+0xdd8>
   11b10:	bl	10dd4 <__errno_location@plt>
   11b14:	mov	r3, #40	; 0x28
   11b18:	str	r3, [r0]
   11b1c:	mov	r6, r5
   11b20:	ldr	r5, [sp, #32]
   11b24:	mov	r4, #1
   11b28:	b	11e78 <strspn@plt+0xfe4>
   11b2c:	ldr	r3, [pc, #1000]	; 11f1c <strspn@plt+0x1088>
   11b30:	str	r3, [sp]
   11b34:	ldr	r3, [pc, #996]	; 11f20 <strspn@plt+0x108c>
   11b38:	ldr	r2, [pc, #996]	; 11f24 <strspn@plt+0x1090>
   11b3c:	mov	r1, #0
   11b40:	mov	r0, #7
   11b44:	bl	12a38 <strspn@plt+0x1ba4>
   11b48:	subs	r3, r0, #0
   11b4c:	str	r3, [sp, #28]
   11b50:	bne	11af0 <strspn@plt+0xc5c>
   11b54:	bl	15958 <strspn@plt+0x4ac4>
   11b58:	add	r2, sp, #40	; 0x28
   11b5c:	mov	r1, r4
   11b60:	ldr	r0, [sp, #28]
   11b64:	bl	12040 <strspn@plt+0x11ac>
   11b68:	mov	r3, #0
   11b6c:	strb	r3, [sl, r9]
   11b70:	ldr	r8, [sp, #144]	; 0x90
   11b74:	ldr	r3, [sp, #20]
   11b78:	cmp	r3, #0
   11b7c:	ldrne	r3, [sp, #16]
   11b80:	subne	r3, r3, r8
   11b84:	moveq	r3, #0
   11b88:	str	r3, [sp, #36]	; 0x24
   11b8c:	mov	r0, r6
   11b90:	bl	10dc8 <strlen@plt>
   11b94:	mov	r7, r0
   11b98:	adds	r4, r9, r0
   11b9c:	bcs	11c74 <strspn@plt+0xde0>
   11ba0:	ldr	r3, [sp, #148]	; 0x94
   11ba4:	cmp	r3, r4
   11ba8:	addls	r3, sp, #152	; 0x98
   11bac:	addls	r3, sp, #144	; 0x90
   11bb0:	strls	r3, [sp, #16]
   11bb4:	bhi	11bd8 <strspn@plt+0xd44>
   11bb8:	ldr	r0, [sp, #16]
   11bbc:	bl	14d94 <strspn@plt+0x3f00>
   11bc0:	cmp	r0, #0
   11bc4:	beq	11c78 <strspn@plt+0xde4>
   11bc8:	ldr	r3, [sp, #148]	; 0x94
   11bcc:	cmp	r4, r3
   11bd0:	bcs	11bb8 <strspn@plt+0xd24>
   11bd4:	ldr	r8, [sp, #144]	; 0x90
   11bd8:	ldr	r3, [sp, #20]
   11bdc:	cmp	r3, #0
   11be0:	ldrne	r3, [sp, #36]	; 0x24
   11be4:	addne	r6, r8, r3
   11be8:	add	r2, r7, #1
   11bec:	mov	r1, r6
   11bf0:	add	r0, r8, r9
   11bf4:	bl	10c6c <memmove@plt>
   11bf8:	mov	r2, r9
   11bfc:	mov	r1, sl
   11c00:	mov	r0, r8
   11c04:	bl	10c9c <memcpy@plt>
   11c08:	ldrb	r3, [sl]
   11c0c:	cmp	r3, #47	; 0x2f
   11c10:	beq	11c7c <strspn@plt+0xde8>
   11c14:	add	r3, r5, #1
   11c18:	ldr	r2, [sp, #32]
   11c1c:	cmp	r2, r3
   11c20:	bls	11dc8 <strspn@plt+0xf34>
   11c24:	sub	r1, r2, #1
   11c28:	cmp	r1, r5
   11c2c:	bls	11ddc <strspn@plt+0xf48>
   11c30:	ldrb	r3, [r2, #-2]
   11c34:	cmp	r3, #47	; 0x2f
   11c38:	beq	11dec <strspn@plt+0xf58>
   11c3c:	sub	r3, r2, #2
   11c40:	mov	ip, r5
   11c44:	mov	r1, r3
   11c48:	cmp	r3, ip
   11c4c:	beq	11dfc <strspn@plt+0xf68>
   11c50:	ldrb	r2, [r3, #-1]!
   11c54:	cmp	r2, #47	; 0x2f
   11c58:	bne	11c44 <strspn@plt+0xdb0>
   11c5c:	mov	r6, r0
   11c60:	mov	r3, #1
   11c64:	str	r3, [sp, #20]
   11c68:	b	11e10 <strspn@plt+0xf7c>
   11c6c:	ldr	r1, [sp, #32]
   11c70:	b	11e10 <strspn@plt+0xf7c>
   11c74:	bl	15958 <strspn@plt+0x4ac4>
   11c78:	bl	15958 <strspn@plt+0x4ac4>
   11c7c:	add	r1, r5, #1
   11c80:	strb	r3, [r5]
   11c84:	mov	r6, r0
   11c88:	mov	r3, #1
   11c8c:	str	r3, [sp, #20]
   11c90:	b	11e10 <strspn@plt+0xf7c>
   11c94:	cmp	fp, #2
   11c98:	ldreq	r1, [sp, #32]
   11c9c:	beq	11e10 <strspn@plt+0xf7c>
   11ca0:	mov	r3, r6
   11ca4:	ldrb	r2, [r3]
   11ca8:	cmp	r2, #47	; 0x2f
   11cac:	beq	11d10 <strspn@plt+0xe7c>
   11cb0:	ldr	r3, [sp, #12]
   11cb4:	cmp	r3, #0
   11cb8:	bne	11d88 <strspn@plt+0xef4>
   11cbc:	bl	10dd4 <__errno_location@plt>
   11cc0:	ldr	r4, [r0]
   11cc4:	subs	r4, r4, #22
   11cc8:	movne	r4, #1
   11ccc:	cmp	r4, #0
   11cd0:	beq	11e0c <strspn@plt+0xf78>
   11cd4:	cmp	fp, #1
   11cd8:	bne	11e48 <strspn@plt+0xfb4>
   11cdc:	bl	10dd4 <__errno_location@plt>
   11ce0:	ldr	r3, [r0]
   11ce4:	cmp	r3, #2
   11ce8:	bne	11e54 <strspn@plt+0xfc0>
   11cec:	ldr	r1, [pc, #564]	; 11f28 <strspn@plt+0x1094>
   11cf0:	mov	r0, r6
   11cf4:	bl	10e94 <strspn@plt>
   11cf8:	ldrb	r3, [r6, r0]
   11cfc:	cmp	r3, #0
   11d00:	bne	11e60 <strspn@plt+0xfcc>
   11d04:	ldr	r1, [sp, #32]
   11d08:	b	11e10 <strspn@plt+0xf7c>
   11d0c:	mov	r3, r1
   11d10:	add	r1, r3, #1
   11d14:	ldrb	r2, [r3, #1]
   11d18:	cmp	r2, #47	; 0x2f
   11d1c:	beq	11d0c <strspn@plt+0xe78>
   11d20:	add	r3, r3, #2
   11d24:	cmp	r2, #0
   11d28:	beq	11d58 <strspn@plt+0xec4>
   11d2c:	cmp	r2, #46	; 0x2e
   11d30:	bne	11cb0 <strspn@plt+0xe1c>
   11d34:	ldrb	r2, [r1, #1]
   11d38:	cmp	r2, #0
   11d3c:	beq	11d58 <strspn@plt+0xec4>
   11d40:	cmp	r2, #46	; 0x2e
   11d44:	bne	11ca4 <strspn@plt+0xe10>
   11d48:	ldrb	r2, [r1, #2]
   11d4c:	cmp	r2, #47	; 0x2f
   11d50:	cmpne	r2, #0
   11d54:	bne	11ca4 <strspn@plt+0xe10>
   11d58:	ldr	r3, [pc, #456]	; 11f28 <strspn@plt+0x1094>
   11d5c:	ldrh	r3, [r3]
   11d60:	ldr	r2, [sp, #32]
   11d64:	strh	r3, [r2]
   11d68:	mov	r3, #512	; 0x200
   11d6c:	mov	r2, #0
   11d70:	mov	r1, r5
   11d74:	mvn	r0, #99	; 0x63
   11d78:	bl	10c84 <faccessat@plt>
   11d7c:	adds	r4, r0, #0
   11d80:	movne	r4, #1
   11d84:	b	11ccc <strspn@plt+0xe38>
   11d88:	ldrb	r3, [r6]
   11d8c:	cmp	r3, #0
   11d90:	movne	r0, #0
   11d94:	beq	11da0 <strspn@plt+0xf0c>
   11d98:	mov	r4, r0
   11d9c:	b	11ccc <strspn@plt+0xe38>
   11da0:	mov	r3, #512	; 0x200
   11da4:	mov	r2, #0
   11da8:	mov	r1, r5
   11dac:	mvn	r0, #99	; 0x63
   11db0:	bl	10c84 <faccessat@plt>
   11db4:	adds	r0, r0, #0
   11db8:	movne	r0, #1
   11dbc:	b	11d98 <strspn@plt+0xf04>
   11dc0:	mov	r1, r3
   11dc4:	b	11e10 <strspn@plt+0xf7c>
   11dc8:	mov	r6, r0
   11dcc:	ldr	r1, [sp, #32]
   11dd0:	mov	r3, #1
   11dd4:	str	r3, [sp, #20]
   11dd8:	b	11e10 <strspn@plt+0xf7c>
   11ddc:	mov	r6, r0
   11de0:	mov	r3, #1
   11de4:	str	r3, [sp, #20]
   11de8:	b	11e10 <strspn@plt+0xf7c>
   11dec:	mov	r6, r0
   11df0:	mov	r3, #1
   11df4:	str	r3, [sp, #20]
   11df8:	b	11e10 <strspn@plt+0xf7c>
   11dfc:	mov	r6, r0
   11e00:	mov	r3, #1
   11e04:	str	r3, [sp, #20]
   11e08:	b	11e10 <strspn@plt+0xf7c>
   11e0c:	ldr	r1, [sp, #32]
   11e10:	mov	r4, r6
   11e14:	b	118d4 <strspn@plt+0xa40>
   11e18:	add	r3, r5, #1
   11e1c:	cmp	r1, r3
   11e20:	bls	11e6c <strspn@plt+0xfd8>
   11e24:	ldrb	r3, [r1, #-1]
   11e28:	cmp	r3, #47	; 0x2f
   11e2c:	moveq	r6, r5
   11e30:	subeq	r5, r1, #1
   11e34:	moveq	r4, #0
   11e38:	movne	r6, r5
   11e3c:	movne	r5, r1
   11e40:	movne	r4, #0
   11e44:	b	11e78 <strspn@plt+0xfe4>
   11e48:	mov	r6, r5
   11e4c:	ldr	r5, [sp, #32]
   11e50:	b	11e78 <strspn@plt+0xfe4>
   11e54:	mov	r6, r5
   11e58:	ldr	r5, [sp, #32]
   11e5c:	b	11e78 <strspn@plt+0xfe4>
   11e60:	mov	r6, r5
   11e64:	ldr	r5, [sp, #32]
   11e68:	b	11e78 <strspn@plt+0xfe4>
   11e6c:	mov	r6, r5
   11e70:	mov	r5, r1
   11e74:	mov	r4, #0
   11e78:	ldr	r0, [sp, #28]
   11e7c:	cmp	r0, #0
   11e80:	beq	11e94 <strspn@plt+0x1000>
   11e84:	bl	12bc8 <strspn@plt+0x1d34>
   11e88:	b	11e94 <strspn@plt+0x1000>
   11e8c:	mov	r6, r5
   11e90:	mov	r4, #1
   11e94:	ldr	r0, [sp, #144]	; 0x90
   11e98:	add	r3, sp, #152	; 0x98
   11e9c:	cmp	r0, r3
   11ea0:	beq	11ea8 <strspn@plt+0x1014>
   11ea4:	bl	120ec <strspn@plt+0x1258>
   11ea8:	add	r3, sp, #3232	; 0xca0
   11eac:	add	r3, r3, #8
   11eb0:	ldr	r0, [r3, #-2064]!	; 0xfffff7f0
   11eb4:	add	r3, r3, #8
   11eb8:	cmp	r0, r3
   11ebc:	beq	11ec4 <strspn@plt+0x1030>
   11ec0:	bl	120ec <strspn@plt+0x1258>
   11ec4:	cmp	r4, #0
   11ec8:	beq	11ef8 <strspn@plt+0x1064>
   11ecc:	ldr	r0, [sp, #2208]	; 0x8a0
   11ed0:	add	r3, sp, #2208	; 0x8a0
   11ed4:	add	r3, r3, #8
   11ed8:	cmp	r0, r3
   11edc:	moveq	r0, #0
   11ee0:	beq	11eec <strspn@plt+0x1058>
   11ee4:	bl	120ec <strspn@plt+0x1258>
   11ee8:	mov	r0, #0
   11eec:	add	sp, sp, #3232	; 0xca0
   11ef0:	add	sp, sp, #12
   11ef4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11ef8:	mov	r3, #0
   11efc:	strb	r3, [r5], #1
   11f00:	sub	r1, r5, r6
   11f04:	add	r0, sp, #2208	; 0x8a0
   11f08:	bl	14cdc <strspn@plt+0x3e48>
   11f0c:	cmp	r0, #0
   11f10:	bne	11eec <strspn@plt+0x1058>
   11f14:	bl	15958 <strspn@plt+0x4ac4>
   11f18:	strdeq	r6, [r1], -r0
   11f1c:	andeq	r3, r1, ip, asr r1
   11f20:	andeq	r3, r1, r8, lsl #2
   11f24:	ldrdeq	r3, [r1], -r0
   11f28:	strdeq	r6, [r1], -r4
   11f2c:	ldr	r3, [pc, #4]	; 11f38 <strspn@plt+0x10a4>
   11f30:	str	r0, [r3]
   11f34:	bx	lr
   11f38:	andeq	r8, r2, ip, asr #2
   11f3c:	ldr	r3, [pc, #4]	; 11f48 <strspn@plt+0x10b4>
   11f40:	strb	r0, [r3, #4]
   11f44:	bx	lr
   11f48:	andeq	r8, r2, ip, asr #2
   11f4c:	push	{r4, r5, r6, lr}
   11f50:	sub	sp, sp, #8
   11f54:	ldr	r3, [pc, #200]	; 12024 <strspn@plt+0x1190>
   11f58:	ldr	r0, [r3]
   11f5c:	bl	15a68 <strspn@plt+0x4bd4>
   11f60:	cmp	r0, #0
   11f64:	beq	11f88 <strspn@plt+0x10f4>
   11f68:	ldr	r3, [pc, #184]	; 12028 <strspn@plt+0x1194>
   11f6c:	ldrb	r3, [r3, #4]
   11f70:	cmp	r3, #0
   11f74:	beq	11fa4 <strspn@plt+0x1110>
   11f78:	bl	10dd4 <__errno_location@plt>
   11f7c:	ldr	r3, [r0]
   11f80:	cmp	r3, #32
   11f84:	bne	11fa4 <strspn@plt+0x1110>
   11f88:	ldr	r3, [pc, #156]	; 1202c <strspn@plt+0x1198>
   11f8c:	ldr	r0, [r3]
   11f90:	bl	15a68 <strspn@plt+0x4bd4>
   11f94:	cmp	r0, #0
   11f98:	bne	12018 <strspn@plt+0x1184>
   11f9c:	add	sp, sp, #8
   11fa0:	pop	{r4, r5, r6, pc}
   11fa4:	mov	r2, #5
   11fa8:	ldr	r1, [pc, #128]	; 12030 <strspn@plt+0x119c>
   11fac:	mov	r0, #0
   11fb0:	bl	10ccc <dcgettext@plt>
   11fb4:	mov	r4, r0
   11fb8:	ldr	r3, [pc, #104]	; 12028 <strspn@plt+0x1194>
   11fbc:	ldr	r5, [r3]
   11fc0:	cmp	r5, #0
   11fc4:	beq	11ffc <strspn@plt+0x1168>
   11fc8:	bl	10dd4 <__errno_location@plt>
   11fcc:	ldr	r6, [r0]
   11fd0:	mov	r0, r5
   11fd4:	bl	14b40 <strspn@plt+0x3cac>
   11fd8:	str	r4, [sp]
   11fdc:	mov	r3, r0
   11fe0:	ldr	r2, [pc, #76]	; 12034 <strspn@plt+0x11a0>
   11fe4:	mov	r1, r6
   11fe8:	mov	r0, #0
   11fec:	bl	10d50 <error@plt>
   11ff0:	ldr	r3, [pc, #64]	; 12038 <strspn@plt+0x11a4>
   11ff4:	ldr	r0, [r3]
   11ff8:	bl	10c90 <_exit@plt>
   11ffc:	bl	10dd4 <__errno_location@plt>
   12000:	mov	r3, r4
   12004:	ldr	r2, [pc, #48]	; 1203c <strspn@plt+0x11a8>
   12008:	ldr	r1, [r0]
   1200c:	mov	r0, #0
   12010:	bl	10d50 <error@plt>
   12014:	b	11ff0 <strspn@plt+0x115c>
   12018:	ldr	r3, [pc, #24]	; 12038 <strspn@plt+0x11a4>
   1201c:	ldr	r0, [r3]
   12020:	bl	10c90 <_exit@plt>
   12024:	andeq	r8, r2, r4, asr #2
   12028:	andeq	r8, r2, ip, asr #2
   1202c:	andeq	r8, r2, r0, asr #2
   12030:	strdeq	r6, [r1], -r8
   12034:	andeq	r6, r1, r4, lsl #26
   12038:	andeq	r8, r2, ip, ror #1
   1203c:	andeq	r6, r1, r8, lsl #26
   12040:	push	{r4, r5, r6, r7, r8, lr}
   12044:	subs	r7, r0, #0
   12048:	popeq	{r4, r5, r6, r7, r8, pc}
   1204c:	mov	r5, r2
   12050:	mov	r6, r1
   12054:	mov	r0, #24
   12058:	bl	153b4 <strspn@plt+0x4520>
   1205c:	mov	r4, r0
   12060:	mov	r0, r6
   12064:	bl	1593c <strspn@plt+0x4aa8>
   12068:	str	r0, [r4]
   1206c:	ldrd	r2, [r5, #96]	; 0x60
   12070:	strd	r2, [r4, #8]
   12074:	ldrd	r2, [r5]
   12078:	strd	r2, [r4, #16]
   1207c:	mov	r1, r4
   12080:	mov	r0, r7
   12084:	bl	12f84 <strspn@plt+0x20f0>
   12088:	cmp	r0, #0
   1208c:	beq	120a4 <strspn@plt+0x1210>
   12090:	cmp	r4, r0
   12094:	popeq	{r4, r5, r6, r7, r8, pc}
   12098:	mov	r0, r4
   1209c:	bl	1315c <strspn@plt+0x22c8>
   120a0:	pop	{r4, r5, r6, r7, r8, pc}
   120a4:	bl	15958 <strspn@plt+0x4ac4>
   120a8:	cmp	r0, #0
   120ac:	beq	120e4 <strspn@plt+0x1250>
   120b0:	push	{r4, r5, lr}
   120b4:	sub	sp, sp, #28
   120b8:	str	r1, [sp]
   120bc:	ldrd	r4, [r2, #96]	; 0x60
   120c0:	strd	r4, [sp, #8]
   120c4:	ldrd	r2, [r2]
   120c8:	strd	r2, [sp, #16]
   120cc:	mov	r1, sp
   120d0:	bl	12780 <strspn@plt+0x18ec>
   120d4:	adds	r0, r0, #0
   120d8:	movne	r0, #1
   120dc:	add	sp, sp, #28
   120e0:	pop	{r4, r5, pc}
   120e4:	mov	r0, #0
   120e8:	bx	lr
   120ec:	push	{r4, r5, lr}
   120f0:	sub	sp, sp, #12
   120f4:	mov	r5, r0
   120f8:	bl	10dd4 <__errno_location@plt>
   120fc:	mov	r4, r0
   12100:	ldr	r3, [r0]
   12104:	str	r3, [sp]
   12108:	str	r3, [sp, #4]
   1210c:	mov	r3, #0
   12110:	str	r3, [r0]
   12114:	mov	r0, r5
   12118:	bl	10c78 <free@plt>
   1211c:	ldr	r3, [r4]
   12120:	cmp	r3, #0
   12124:	moveq	r3, #4
   12128:	movne	r3, #0
   1212c:	add	r2, sp, #8
   12130:	add	r3, r2, r3
   12134:	ldr	r3, [r3, #-8]
   12138:	str	r3, [r4]
   1213c:	add	sp, sp, #12
   12140:	pop	{r4, r5, pc}
   12144:	andeq	r0, r0, r0
   12148:	push	{r4, lr}
   1214c:	ror	r0, r0, #3
   12150:	bl	1609c <strspn@plt+0x5208>
   12154:	mov	r0, r1
   12158:	pop	{r4, pc}
   1215c:	cmp	r1, r0
   12160:	movne	r0, #0
   12164:	moveq	r0, #1
   12168:	bx	lr
   1216c:	ldr	r3, [r0, #20]
   12170:	ldr	r2, [pc, #176]	; 12228 <strspn@plt+0x1394>
   12174:	cmp	r3, r2
   12178:	beq	12210 <strspn@plt+0x137c>
   1217c:	vldr	s15, [r3, #8]
   12180:	vldr	s14, [pc, #144]	; 12218 <strspn@plt+0x1384>
   12184:	vcmpe.f32	s15, s14
   12188:	vmrs	APSR_nzcv, fpscr
   1218c:	ble	121ec <strspn@plt+0x1358>
   12190:	vldr	s14, [pc, #132]	; 1221c <strspn@plt+0x1388>
   12194:	vcmpe.f32	s15, s14
   12198:	vmrs	APSR_nzcv, fpscr
   1219c:	bpl	121ec <strspn@plt+0x1358>
   121a0:	vldr	s13, [r3, #12]
   121a4:	vldr	s14, [pc, #116]	; 12220 <strspn@plt+0x138c>
   121a8:	vcmpe.f32	s13, s14
   121ac:	vmrs	APSR_nzcv, fpscr
   121b0:	ble	121ec <strspn@plt+0x1358>
   121b4:	vldr	s14, [r3]
   121b8:	vcmpe.f32	s14, #0.0
   121bc:	vmrs	APSR_nzcv, fpscr
   121c0:	blt	121ec <strspn@plt+0x1358>
   121c4:	vldr	s13, [pc, #76]	; 12218 <strspn@plt+0x1384>
   121c8:	vadd.f32	s14, s14, s13
   121cc:	vldr	s13, [r3, #4]
   121d0:	vcmpe.f32	s14, s13
   121d4:	vmrs	APSR_nzcv, fpscr
   121d8:	bpl	121ec <strspn@plt+0x1358>
   121dc:	vldr	s12, [pc, #64]	; 12224 <strspn@plt+0x1390>
   121e0:	vcmpe.f32	s13, s12
   121e4:	vmrs	APSR_nzcv, fpscr
   121e8:	bls	121fc <strspn@plt+0x1368>
   121ec:	ldr	r3, [pc, #52]	; 12228 <strspn@plt+0x1394>
   121f0:	str	r3, [r0, #20]
   121f4:	mov	r0, #0
   121f8:	bx	lr
   121fc:	vcmpe.f32	s15, s14
   12200:	vmrs	APSR_nzcv, fpscr
   12204:	ble	121ec <strspn@plt+0x1358>
   12208:	mov	r0, #1
   1220c:	bx	lr
   12210:	mov	r0, #1
   12214:	bx	lr
   12218:	stclcc	12, cr12, [ip, #820]	; 0x334
   1221c:	svccc	0x00666666
   12220:	svccc	0x008ccccd
   12224:	svccc	0x00800000
   12228:	andeq	r6, r1, ip, lsl #26
   1222c:	push	{r4, lr}
   12230:	mov	r4, r0
   12234:	mov	r0, r1
   12238:	ldr	r3, [r4, #24]
   1223c:	ldr	r1, [r4, #8]
   12240:	blx	r3
   12244:	ldr	r3, [r4, #8]
   12248:	cmp	r0, r3
   1224c:	bcs	1225c <strspn@plt+0x13c8>
   12250:	ldr	r3, [r4]
   12254:	add	r0, r3, r0, lsl #3
   12258:	pop	{r4, pc}
   1225c:	bl	10e88 <abort@plt>
   12260:	push	{r4, r5, r6, r7, r8, lr}
   12264:	ldrb	r3, [r1, #16]
   12268:	cmp	r3, #0
   1226c:	bne	1229c <strspn@plt+0x1408>
   12270:	vmov	s15, r0
   12274:	vcvt.f32.u32	s13, s15
   12278:	vldr	s14, [r1, #8]
   1227c:	vdiv.f32	s15, s13, s14
   12280:	vldr	s14, [pc, #204]	; 12354 <strspn@plt+0x14c0>
   12284:	vcmpe.f32	s15, s14
   12288:	vmrs	APSR_nzcv, fpscr
   1228c:	movge	r7, #0
   12290:	bge	122d4 <strspn@plt+0x1440>
   12294:	vcvt.u32.f32	s15, s15
   12298:	vmov	r0, s15
   1229c:	cmp	r0, #10
   122a0:	movcc	r0, #10
   122a4:	orr	r7, r0, #1
   122a8:	cmn	r7, #1
   122ac:	ldrne	r8, [pc, #164]	; 12358 <strspn@plt+0x14c4>
   122b0:	bne	12300 <strspn@plt+0x146c>
   122b4:	lsr	r3, r7, #30
   122b8:	lsl	r2, r7, #2
   122bc:	adds	r3, r3, #0
   122c0:	movne	r3, #1
   122c4:	cmp	r2, #0
   122c8:	movlt	r3, #1
   122cc:	cmp	r3, #0
   122d0:	movne	r7, #0
   122d4:	mov	r0, r7
   122d8:	pop	{r4, r5, r6, r7, r8, pc}
   122dc:	mov	r4, #3
   122e0:	mov	r1, r4
   122e4:	mov	r0, r7
   122e8:	bl	1609c <strspn@plt+0x5208>
   122ec:	cmp	r1, #0
   122f0:	bne	122b4 <strspn@plt+0x1420>
   122f4:	add	r7, r7, #2
   122f8:	cmn	r7, #1
   122fc:	beq	122b4 <strspn@plt+0x1420>
   12300:	cmp	r7, #9
   12304:	bls	122dc <strspn@plt+0x1448>
   12308:	umull	r2, r3, r8, r7
   1230c:	lsr	r3, r3, #1
   12310:	add	r3, r3, r3, lsl #1
   12314:	cmp	r7, r3
   12318:	beq	122f4 <strspn@plt+0x1460>
   1231c:	mov	r6, #16
   12320:	mov	r5, #9
   12324:	mov	r4, #3
   12328:	add	r5, r5, r6
   1232c:	add	r4, r4, #2
   12330:	cmp	r5, r7
   12334:	bcs	122e0 <strspn@plt+0x144c>
   12338:	add	r6, r6, #8
   1233c:	mov	r1, r4
   12340:	mov	r0, r7
   12344:	bl	1609c <strspn@plt+0x5208>
   12348:	cmp	r1, #0
   1234c:	bne	12328 <strspn@plt+0x1494>
   12350:	b	122f4 <strspn@plt+0x1460>
   12354:	svcmi	0x00800000
   12358:	bge	feabce0c <stdout@@GLIBC_2.4+0xfea94cc8>
   1235c:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12360:	ldr	r7, [r1]
   12364:	ldr	r3, [r1, #4]
   12368:	cmp	r7, r3
   1236c:	bcs	124a0 <strspn@plt+0x160c>
   12370:	mov	fp, r2
   12374:	mov	sl, r1
   12378:	mov	r6, r0
   1237c:	add	r7, r7, #8
   12380:	mov	r9, #0
   12384:	b	123ec <strspn@plt+0x1558>
   12388:	str	r5, [r0]
   1238c:	ldr	r2, [r6, #12]
   12390:	add	r2, r2, #1
   12394:	str	r2, [r6, #12]
   12398:	str	r9, [r4]
   1239c:	ldr	r2, [r6, #36]	; 0x24
   123a0:	str	r2, [r4, #4]
   123a4:	str	r4, [r6, #36]	; 0x24
   123a8:	b	12434 <strspn@plt+0x15a0>
   123ac:	mov	r0, #8
   123b0:	bl	159e8 <strspn@plt+0x4b54>
   123b4:	cmp	r0, #0
   123b8:	beq	124a8 <strspn@plt+0x1614>
   123bc:	str	r4, [r0]
   123c0:	ldr	r3, [r5, #4]
   123c4:	str	r3, [r0, #4]
   123c8:	str	r0, [r5, #4]
   123cc:	str	r9, [r8, #-8]
   123d0:	ldr	r3, [sl, #12]
   123d4:	sub	r3, r3, #1
   123d8:	str	r3, [sl, #12]
   123dc:	add	r7, r7, #8
   123e0:	ldr	r3, [sl, #4]
   123e4:	cmp	r3, r8
   123e8:	bls	12498 <strspn@plt+0x1604>
   123ec:	mov	r8, r7
   123f0:	ldr	r3, [r7, #-8]
   123f4:	cmp	r3, #0
   123f8:	beq	123dc <strspn@plt+0x1548>
   123fc:	ldr	r4, [r7, #-4]
   12400:	cmp	r4, #0
   12404:	beq	12440 <strspn@plt+0x15ac>
   12408:	ldr	r5, [r4]
   1240c:	mov	r1, r5
   12410:	mov	r0, r6
   12414:	bl	1222c <strspn@plt+0x1398>
   12418:	ldr	r3, [r4, #4]
   1241c:	ldr	r2, [r0]
   12420:	cmp	r2, #0
   12424:	beq	12388 <strspn@plt+0x14f4>
   12428:	ldr	r2, [r0, #4]
   1242c:	str	r2, [r4, #4]
   12430:	str	r4, [r0, #4]
   12434:	mov	r4, r3
   12438:	cmp	r3, #0
   1243c:	bne	12408 <strspn@plt+0x1574>
   12440:	ldr	r4, [r8, #-8]
   12444:	str	r9, [r8, #-4]
   12448:	cmp	fp, #0
   1244c:	bne	123dc <strspn@plt+0x1548>
   12450:	mov	r1, r4
   12454:	mov	r0, r6
   12458:	bl	1222c <strspn@plt+0x1398>
   1245c:	mov	r5, r0
   12460:	ldr	r3, [r0]
   12464:	cmp	r3, #0
   12468:	beq	12484 <strspn@plt+0x15f0>
   1246c:	ldr	r0, [r6, #36]	; 0x24
   12470:	cmp	r0, #0
   12474:	beq	123ac <strspn@plt+0x1518>
   12478:	ldr	r3, [r0, #4]
   1247c:	str	r3, [r6, #36]	; 0x24
   12480:	b	123bc <strspn@plt+0x1528>
   12484:	str	r4, [r0]
   12488:	ldr	r3, [r6, #12]
   1248c:	add	r3, r3, #1
   12490:	str	r3, [r6, #12]
   12494:	b	123cc <strspn@plt+0x1538>
   12498:	mov	r0, #1
   1249c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   124a0:	mov	r0, #1
   124a4:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   124a8:	mov	r0, fp
   124ac:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   124b0:	push	{r4, r5, r6, r7, r8, lr}
   124b4:	mov	r6, r0
   124b8:	mov	r5, r1
   124bc:	mov	r8, r2
   124c0:	mov	r7, r3
   124c4:	bl	1222c <strspn@plt+0x1398>
   124c8:	str	r0, [r8]
   124cc:	ldr	r3, [r0]
   124d0:	cmp	r3, #0
   124d4:	beq	125ac <strspn@plt+0x1718>
   124d8:	mov	r4, r0
   124dc:	cmp	r5, r3
   124e0:	beq	12574 <strspn@plt+0x16e0>
   124e4:	ldr	r2, [r6, #28]
   124e8:	mov	r1, r3
   124ec:	mov	r0, r5
   124f0:	blx	r2
   124f4:	cmp	r0, #0
   124f8:	bne	12574 <strspn@plt+0x16e0>
   124fc:	ldr	r3, [r4, #4]
   12500:	cmp	r3, #0
   12504:	beq	125b4 <strspn@plt+0x1720>
   12508:	ldr	r1, [r3]
   1250c:	cmp	r5, r1
   12510:	beq	12544 <strspn@plt+0x16b0>
   12514:	ldr	r3, [r6, #28]
   12518:	mov	r0, r5
   1251c:	blx	r3
   12520:	cmp	r0, #0
   12524:	bne	12544 <strspn@plt+0x16b0>
   12528:	ldr	r4, [r4, #4]
   1252c:	ldr	r3, [r4, #4]
   12530:	cmp	r3, #0
   12534:	beq	125ac <strspn@plt+0x1718>
   12538:	ldr	r1, [r3]
   1253c:	cmp	r5, r1
   12540:	bne	12514 <strspn@plt+0x1680>
   12544:	ldr	r2, [r4, #4]
   12548:	ldr	r3, [r2]
   1254c:	cmp	r7, #0
   12550:	beq	125ac <strspn@plt+0x1718>
   12554:	ldr	r1, [r2, #4]
   12558:	str	r1, [r4, #4]
   1255c:	mov	r1, #0
   12560:	str	r1, [r2]
   12564:	ldr	r1, [r6, #36]	; 0x24
   12568:	str	r1, [r2, #4]
   1256c:	str	r2, [r6, #36]	; 0x24
   12570:	b	125ac <strspn@plt+0x1718>
   12574:	ldr	r3, [r4]
   12578:	cmp	r7, #0
   1257c:	beq	125ac <strspn@plt+0x1718>
   12580:	ldr	r2, [r4, #4]
   12584:	cmp	r2, #0
   12588:	ldmne	r2, {r0, r1}
   1258c:	stmne	r4, {r0, r1}
   12590:	movne	r1, #0
   12594:	strne	r1, [r2]
   12598:	ldrne	r1, [r6, #36]	; 0x24
   1259c:	strne	r1, [r2, #4]
   125a0:	strne	r2, [r6, #36]	; 0x24
   125a4:	moveq	r2, #0
   125a8:	streq	r2, [r4]
   125ac:	mov	r0, r3
   125b0:	pop	{r4, r5, r6, r7, r8, pc}
   125b4:	mov	r3, #0
   125b8:	b	125ac <strspn@plt+0x1718>
   125bc:	ldr	r0, [r0, #8]
   125c0:	bx	lr
   125c4:	ldr	r0, [r0, #12]
   125c8:	bx	lr
   125cc:	ldr	r0, [r0, #16]
   125d0:	bx	lr
   125d4:	ldr	r1, [r0]
   125d8:	ldr	ip, [r0, #4]
   125dc:	cmp	r1, ip
   125e0:	bcs	12638 <strspn@plt+0x17a4>
   125e4:	mov	r0, #0
   125e8:	b	12604 <strspn@plt+0x1770>
   125ec:	mov	r2, #1
   125f0:	cmp	r0, r2
   125f4:	movcc	r0, r2
   125f8:	add	r1, r1, #8
   125fc:	cmp	r1, ip
   12600:	bcs	12634 <strspn@plt+0x17a0>
   12604:	ldr	r3, [r1]
   12608:	cmp	r3, #0
   1260c:	beq	125f8 <strspn@plt+0x1764>
   12610:	ldr	r3, [r1, #4]
   12614:	cmp	r3, #0
   12618:	beq	125ec <strspn@plt+0x1758>
   1261c:	mov	r2, #1
   12620:	add	r2, r2, #1
   12624:	ldr	r3, [r3, #4]
   12628:	cmp	r3, #0
   1262c:	bne	12620 <strspn@plt+0x178c>
   12630:	b	125f0 <strspn@plt+0x175c>
   12634:	bx	lr
   12638:	mov	r0, #0
   1263c:	bx	lr
   12640:	push	{lr}		; (str lr, [sp, #-4]!)
   12644:	ldr	r1, [r0]
   12648:	ldr	lr, [r0, #4]
   1264c:	cmp	r1, lr
   12650:	bcs	126a0 <strspn@plt+0x180c>
   12654:	mov	r2, #0
   12658:	mov	ip, r2
   1265c:	b	1266c <strspn@plt+0x17d8>
   12660:	add	r1, r1, #8
   12664:	cmp	r1, lr
   12668:	bcs	126a8 <strspn@plt+0x1814>
   1266c:	ldr	r3, [r1]
   12670:	cmp	r3, #0
   12674:	beq	12660 <strspn@plt+0x17cc>
   12678:	add	ip, ip, #1
   1267c:	add	r2, r2, #1
   12680:	ldr	r3, [r1, #4]
   12684:	cmp	r3, #0
   12688:	beq	12660 <strspn@plt+0x17cc>
   1268c:	add	r2, r2, #1
   12690:	ldr	r3, [r3, #4]
   12694:	cmp	r3, #0
   12698:	bne	1268c <strspn@plt+0x17f8>
   1269c:	b	12660 <strspn@plt+0x17cc>
   126a0:	mov	r2, #0
   126a4:	mov	ip, r2
   126a8:	ldr	r3, [r0, #12]
   126ac:	cmp	r3, ip
   126b0:	beq	126bc <strspn@plt+0x1828>
   126b4:	mov	r0, #0
   126b8:	pop	{pc}		; (ldr pc, [sp], #4)
   126bc:	ldr	r0, [r0, #16]
   126c0:	cmp	r0, r2
   126c4:	movne	r0, #0
   126c8:	moveq	r0, #1
   126cc:	pop	{pc}		; (ldr pc, [sp], #4)
   126d0:	push	{r4, r5, r6, r7, r8, lr}
   126d4:	sub	sp, sp, #8
   126d8:	mov	r6, r0
   126dc:	mov	r4, r1
   126e0:	ldr	r5, [r0, #8]
   126e4:	ldr	r7, [r0, #12]
   126e8:	bl	125d4 <strspn@plt+0x1740>
   126ec:	mov	r8, r0
   126f0:	ldr	r3, [r6, #16]
   126f4:	ldr	r2, [pc, #116]	; 12770 <strspn@plt+0x18dc>
   126f8:	mov	r1, #1
   126fc:	mov	r0, r4
   12700:	bl	10e10 <__fprintf_chk@plt>
   12704:	mov	r3, r5
   12708:	ldr	r2, [pc, #100]	; 12774 <strspn@plt+0x18e0>
   1270c:	mov	r1, #1
   12710:	mov	r0, r4
   12714:	bl	10e10 <__fprintf_chk@plt>
   12718:	vmov	s15, r7
   1271c:	vcvt.f64.u32	d6, s15
   12720:	vldr	d7, [pc, #64]	; 12768 <strspn@plt+0x18d4>
   12724:	vmul.f64	d6, d6, d7
   12728:	vmov	s15, r5
   1272c:	vcvt.f64.u32	d7, s15
   12730:	vdiv.f64	d5, d6, d7
   12734:	vstr	d5, [sp]
   12738:	mov	r3, r7
   1273c:	ldr	r2, [pc, #52]	; 12778 <strspn@plt+0x18e4>
   12740:	mov	r1, #1
   12744:	mov	r0, r4
   12748:	bl	10e10 <__fprintf_chk@plt>
   1274c:	mov	r3, r8
   12750:	ldr	r2, [pc, #36]	; 1277c <strspn@plt+0x18e8>
   12754:	mov	r1, #1
   12758:	mov	r0, r4
   1275c:	bl	10e10 <__fprintf_chk@plt>
   12760:	add	sp, sp, #8
   12764:	pop	{r4, r5, r6, r7, r8, pc}
   12768:	andeq	r0, r0, r0
   1276c:	subsmi	r0, r9, r0
   12770:	andeq	r6, r1, r0, lsr #26
   12774:	andeq	r6, r1, r8, lsr sp
   12778:	andeq	r6, r1, r0, asr sp
   1277c:	andeq	r6, r1, r4, ror sp
   12780:	push	{r4, r5, r6, lr}
   12784:	mov	r6, r0
   12788:	mov	r5, r1
   1278c:	bl	1222c <strspn@plt+0x1398>
   12790:	ldr	r1, [r0]
   12794:	cmp	r1, #0
   12798:	beq	127ec <strspn@plt+0x1958>
   1279c:	mov	r4, r0
   127a0:	cmp	r0, #0
   127a4:	beq	127f4 <strspn@plt+0x1960>
   127a8:	cmp	r5, r1
   127ac:	beq	127dc <strspn@plt+0x1948>
   127b0:	ldr	r3, [r6, #28]
   127b4:	mov	r0, r5
   127b8:	blx	r3
   127bc:	cmp	r0, #0
   127c0:	bne	127dc <strspn@plt+0x1948>
   127c4:	ldr	r4, [r4, #4]
   127c8:	cmp	r4, #0
   127cc:	beq	127e4 <strspn@plt+0x1950>
   127d0:	ldr	r1, [r4]
   127d4:	cmp	r5, r1
   127d8:	bne	127b0 <strspn@plt+0x191c>
   127dc:	ldr	r0, [r4]
   127e0:	pop	{r4, r5, r6, pc}
   127e4:	mov	r0, #0
   127e8:	pop	{r4, r5, r6, pc}
   127ec:	mov	r0, #0
   127f0:	pop	{r4, r5, r6, pc}
   127f4:	mov	r0, #0
   127f8:	pop	{r4, r5, r6, pc}
   127fc:	ldr	r3, [r0, #16]
   12800:	cmp	r3, #0
   12804:	beq	12848 <strspn@plt+0x19b4>
   12808:	ldr	r3, [r0]
   1280c:	ldr	r2, [r0, #4]
   12810:	cmp	r3, r2
   12814:	bcs	12840 <strspn@plt+0x19ac>
   12818:	ldr	r0, [r3]
   1281c:	cmp	r0, #0
   12820:	bne	1283c <strspn@plt+0x19a8>
   12824:	add	r3, r3, #8
   12828:	cmp	r3, r2
   1282c:	bcs	12840 <strspn@plt+0x19ac>
   12830:	ldr	r0, [r3]
   12834:	cmp	r0, #0
   12838:	beq	12824 <strspn@plt+0x1990>
   1283c:	bx	lr
   12840:	push	{r4, lr}
   12844:	bl	10e88 <abort@plt>
   12848:	mov	r0, #0
   1284c:	b	1283c <strspn@plt+0x19a8>
   12850:	push	{r4, r5, r6, lr}
   12854:	mov	r5, r0
   12858:	mov	r4, r1
   1285c:	bl	1222c <strspn@plt+0x1398>
   12860:	mov	r2, r0
   12864:	mov	r3, r0
   12868:	ldr	r1, [r3]
   1286c:	cmp	r4, r1
   12870:	beq	12884 <strspn@plt+0x19f0>
   12874:	ldr	r3, [r3, #4]
   12878:	cmp	r3, #0
   1287c:	bne	12868 <strspn@plt+0x19d4>
   12880:	b	12890 <strspn@plt+0x19fc>
   12884:	ldr	r3, [r3, #4]
   12888:	cmp	r3, #0
   1288c:	bne	128b0 <strspn@plt+0x1a1c>
   12890:	ldr	r3, [r5, #4]
   12894:	add	r2, r2, #8
   12898:	cmp	r2, r3
   1289c:	bcs	128b8 <strspn@plt+0x1a24>
   128a0:	ldr	r0, [r2]
   128a4:	cmp	r0, #0
   128a8:	beq	12894 <strspn@plt+0x1a00>
   128ac:	pop	{r4, r5, r6, pc}
   128b0:	ldr	r0, [r3]
   128b4:	pop	{r4, r5, r6, pc}
   128b8:	mov	r0, #0
   128bc:	pop	{r4, r5, r6, pc}
   128c0:	push	{r4, r5, lr}
   128c4:	ldr	r4, [r0]
   128c8:	ldr	r3, [r0, #4]
   128cc:	cmp	r4, r3
   128d0:	bcs	1293c <strspn@plt+0x1aa8>
   128d4:	mov	r5, r0
   128d8:	mov	r0, #0
   128dc:	b	128f0 <strspn@plt+0x1a5c>
   128e0:	add	r4, r4, #8
   128e4:	ldr	r3, [r5, #4]
   128e8:	cmp	r3, r4
   128ec:	bls	12938 <strspn@plt+0x1aa4>
   128f0:	ldr	r3, [r4]
   128f4:	cmp	r3, #0
   128f8:	beq	128e0 <strspn@plt+0x1a4c>
   128fc:	cmp	r4, #0
   12900:	beq	128e0 <strspn@plt+0x1a4c>
   12904:	cmp	r2, r0
   12908:	popls	{r4, r5, pc}
   1290c:	add	ip, r1, r0, lsl #2
   12910:	mov	r3, r4
   12914:	add	r0, r0, #1
   12918:	ldr	lr, [r3]
   1291c:	str	lr, [ip], #4
   12920:	ldr	r3, [r3, #4]
   12924:	cmp	r3, #0
   12928:	beq	128e0 <strspn@plt+0x1a4c>
   1292c:	cmp	r2, r0
   12930:	bne	12914 <strspn@plt+0x1a80>
   12934:	pop	{r4, r5, pc}
   12938:	pop	{r4, r5, pc}
   1293c:	mov	r0, #0
   12940:	pop	{r4, r5, pc}
   12944:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12948:	ldr	r8, [r0]
   1294c:	ldr	r3, [r0, #4]
   12950:	cmp	r8, r3
   12954:	bcs	129bc <strspn@plt+0x1b28>
   12958:	mov	r7, r2
   1295c:	mov	r6, r1
   12960:	mov	r9, r0
   12964:	mov	r5, #0
   12968:	b	1297c <strspn@plt+0x1ae8>
   1296c:	add	r8, r8, #8
   12970:	ldr	r3, [r9, #4]
   12974:	cmp	r3, r8
   12978:	bls	129c0 <strspn@plt+0x1b2c>
   1297c:	ldr	r3, [r8]
   12980:	cmp	r3, #0
   12984:	beq	1296c <strspn@plt+0x1ad8>
   12988:	cmp	r8, #0
   1298c:	beq	1296c <strspn@plt+0x1ad8>
   12990:	mov	r4, r8
   12994:	mov	r1, r7
   12998:	ldr	r0, [r4]
   1299c:	blx	r6
   129a0:	cmp	r0, #0
   129a4:	beq	129c0 <strspn@plt+0x1b2c>
   129a8:	add	r5, r5, #1
   129ac:	ldr	r4, [r4, #4]
   129b0:	cmp	r4, #0
   129b4:	bne	12994 <strspn@plt+0x1b00>
   129b8:	b	1296c <strspn@plt+0x1ad8>
   129bc:	mov	r5, #0
   129c0:	mov	r0, r5
   129c4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   129c8:	ldrb	r3, [r0]
   129cc:	cmp	r3, #0
   129d0:	beq	12a08 <strspn@plt+0x1b74>
   129d4:	push	{r4, r5, r6, lr}
   129d8:	mov	r4, r0
   129dc:	mov	r5, r1
   129e0:	mov	r1, #0
   129e4:	rsb	r0, r1, r1, lsl #5
   129e8:	mov	r1, r5
   129ec:	add	r0, r0, r3
   129f0:	bl	1609c <strspn@plt+0x5208>
   129f4:	ldrb	r3, [r4, #1]!
   129f8:	cmp	r3, #0
   129fc:	bne	129e4 <strspn@plt+0x1b50>
   12a00:	mov	r0, r1
   12a04:	pop	{r4, r5, r6, pc}
   12a08:	mov	r1, #0
   12a0c:	mov	r0, r1
   12a10:	bx	lr
   12a14:	push	{lr}		; (str lr, [sp, #-4]!)
   12a18:	mov	ip, r0
   12a1c:	ldr	lr, [pc, #16]	; 12a34 <strspn@plt+0x1ba0>
   12a20:	ldm	lr!, {r0, r1, r2, r3}
   12a24:	stmia	ip!, {r0, r1, r2, r3}
   12a28:	ldr	r3, [lr]
   12a2c:	str	r3, [ip]
   12a30:	pop	{pc}		; (ldr pc, [sp], #4)
   12a34:	andeq	r6, r1, ip, lsl #26
   12a38:	push	{r4, r5, r6, r7, r8, lr}
   12a3c:	mov	r8, r0
   12a40:	mov	r5, r1
   12a44:	subs	r7, r2, #0
   12a48:	ldr	r2, [pc, #180]	; 12b04 <strspn@plt+0x1c70>
   12a4c:	cmp	r7, #0
   12a50:	moveq	r7, r2
   12a54:	subs	r6, r3, #0
   12a58:	ldr	r3, [pc, #168]	; 12b08 <strspn@plt+0x1c74>
   12a5c:	cmp	r6, #0
   12a60:	moveq	r6, r3
   12a64:	mov	r0, #40	; 0x28
   12a68:	bl	159e8 <strspn@plt+0x4b54>
   12a6c:	subs	r4, r0, #0
   12a70:	beq	12aec <strspn@plt+0x1c58>
   12a74:	ldr	r3, [pc, #144]	; 12b0c <strspn@plt+0x1c78>
   12a78:	cmp	r5, #0
   12a7c:	moveq	r5, r3
   12a80:	str	r5, [r4, #20]
   12a84:	mov	r0, r4
   12a88:	bl	1216c <strspn@plt+0x12d8>
   12a8c:	cmp	r0, #0
   12a90:	beq	12af4 <strspn@plt+0x1c60>
   12a94:	mov	r1, r5
   12a98:	mov	r0, r8
   12a9c:	bl	12260 <strspn@plt+0x13cc>
   12aa0:	str	r0, [r4, #8]
   12aa4:	cmp	r0, #0
   12aa8:	beq	12af4 <strspn@plt+0x1c60>
   12aac:	mov	r1, #8
   12ab0:	bl	15998 <strspn@plt+0x4b04>
   12ab4:	str	r0, [r4]
   12ab8:	cmp	r0, #0
   12abc:	beq	12af4 <strspn@plt+0x1c60>
   12ac0:	ldr	r3, [r4, #8]
   12ac4:	add	r0, r0, r3, lsl #3
   12ac8:	str	r0, [r4, #4]
   12acc:	mov	r3, #0
   12ad0:	str	r3, [r4, #12]
   12ad4:	str	r3, [r4, #16]
   12ad8:	str	r7, [r4, #24]
   12adc:	str	r6, [r4, #28]
   12ae0:	ldr	r2, [sp, #24]
   12ae4:	str	r2, [r4, #32]
   12ae8:	str	r3, [r4, #36]	; 0x24
   12aec:	mov	r0, r4
   12af0:	pop	{r4, r5, r6, r7, r8, pc}
   12af4:	mov	r0, r4
   12af8:	bl	120ec <strspn@plt+0x1258>
   12afc:	mov	r4, #0
   12b00:	b	12aec <strspn@plt+0x1c58>
   12b04:	andeq	r2, r1, r8, asr #2
   12b08:	andeq	r2, r1, ip, asr r1
   12b0c:	andeq	r6, r1, ip, lsl #26
   12b10:	push	{r4, r5, r6, r7, r8, lr}
   12b14:	mov	r5, r0
   12b18:	ldr	r7, [r0]
   12b1c:	ldr	r3, [r0, #4]
   12b20:	cmp	r7, r3
   12b24:	bcs	12bb8 <strspn@plt+0x1d24>
   12b28:	add	r7, r7, #8
   12b2c:	mov	r6, #0
   12b30:	b	12b98 <strspn@plt+0x1d04>
   12b34:	str	r6, [r4]
   12b38:	ldr	r3, [r4, #4]
   12b3c:	ldr	r2, [r5, #36]	; 0x24
   12b40:	str	r2, [r4, #4]
   12b44:	str	r4, [r5, #36]	; 0x24
   12b48:	mov	r4, r3
   12b4c:	cmp	r3, #0
   12b50:	beq	12b6c <strspn@plt+0x1cd8>
   12b54:	ldr	r3, [r5, #32]
   12b58:	cmp	r3, #0
   12b5c:	beq	12b34 <strspn@plt+0x1ca0>
   12b60:	ldr	r0, [r4]
   12b64:	blx	r3
   12b68:	b	12b34 <strspn@plt+0x1ca0>
   12b6c:	ldr	r3, [r5, #32]
   12b70:	cmp	r3, #0
   12b74:	beq	12b80 <strspn@plt+0x1cec>
   12b78:	ldr	r0, [r8, #-8]
   12b7c:	blx	r3
   12b80:	str	r6, [r8, #-8]
   12b84:	str	r6, [r8, #-4]
   12b88:	add	r7, r7, #8
   12b8c:	ldr	r3, [r5, #4]
   12b90:	cmp	r3, r8
   12b94:	bls	12bb8 <strspn@plt+0x1d24>
   12b98:	mov	r8, r7
   12b9c:	ldr	r3, [r7, #-8]
   12ba0:	cmp	r3, #0
   12ba4:	beq	12b88 <strspn@plt+0x1cf4>
   12ba8:	ldr	r4, [r7, #-4]
   12bac:	cmp	r4, #0
   12bb0:	bne	12b54 <strspn@plt+0x1cc0>
   12bb4:	b	12b6c <strspn@plt+0x1cd8>
   12bb8:	mov	r3, #0
   12bbc:	str	r3, [r5, #12]
   12bc0:	str	r3, [r5, #16]
   12bc4:	pop	{r4, r5, r6, r7, r8, pc}
   12bc8:	push	{r4, r5, r6, lr}
   12bcc:	mov	r5, r0
   12bd0:	ldr	r3, [r0, #32]
   12bd4:	cmp	r3, #0
   12bd8:	beq	12c40 <strspn@plt+0x1dac>
   12bdc:	ldr	r3, [r0, #16]
   12be0:	cmp	r3, #0
   12be4:	beq	12c40 <strspn@plt+0x1dac>
   12be8:	ldr	r6, [r0]
   12bec:	ldr	r3, [r0, #4]
   12bf0:	cmp	r6, r3
   12bf4:	bcc	12c0c <strspn@plt+0x1d78>
   12bf8:	b	12c80 <strspn@plt+0x1dec>
   12bfc:	add	r6, r6, #8
   12c00:	ldr	r3, [r5, #4]
   12c04:	cmp	r3, r6
   12c08:	bls	12c40 <strspn@plt+0x1dac>
   12c0c:	ldr	r3, [r6]
   12c10:	cmp	r3, #0
   12c14:	beq	12bfc <strspn@plt+0x1d68>
   12c18:	cmp	r6, #0
   12c1c:	beq	12bfc <strspn@plt+0x1d68>
   12c20:	mov	r4, r6
   12c24:	ldr	r3, [r5, #32]
   12c28:	ldr	r0, [r4]
   12c2c:	blx	r3
   12c30:	ldr	r4, [r4, #4]
   12c34:	cmp	r4, #0
   12c38:	bne	12c24 <strspn@plt+0x1d90>
   12c3c:	b	12bfc <strspn@plt+0x1d68>
   12c40:	ldr	r6, [r5]
   12c44:	ldr	r3, [r5, #4]
   12c48:	cmp	r6, r3
   12c4c:	bcs	12c80 <strspn@plt+0x1dec>
   12c50:	ldr	r0, [r6, #4]
   12c54:	cmp	r0, #0
   12c58:	beq	12c70 <strspn@plt+0x1ddc>
   12c5c:	ldr	r4, [r0, #4]
   12c60:	bl	120ec <strspn@plt+0x1258>
   12c64:	mov	r0, r4
   12c68:	cmp	r4, #0
   12c6c:	bne	12c5c <strspn@plt+0x1dc8>
   12c70:	add	r6, r6, #8
   12c74:	ldr	r3, [r5, #4]
   12c78:	cmp	r3, r6
   12c7c:	bhi	12c50 <strspn@plt+0x1dbc>
   12c80:	ldr	r0, [r5, #36]	; 0x24
   12c84:	cmp	r0, #0
   12c88:	beq	12ca0 <strspn@plt+0x1e0c>
   12c8c:	ldr	r4, [r0, #4]
   12c90:	bl	120ec <strspn@plt+0x1258>
   12c94:	mov	r0, r4
   12c98:	cmp	r4, #0
   12c9c:	bne	12c8c <strspn@plt+0x1df8>
   12ca0:	ldr	r0, [r5]
   12ca4:	bl	120ec <strspn@plt+0x1258>
   12ca8:	mov	r0, r5
   12cac:	bl	120ec <strspn@plt+0x1258>
   12cb0:	pop	{r4, r5, r6, pc}
   12cb4:	push	{r4, r5, lr}
   12cb8:	sub	sp, sp, #44	; 0x2c
   12cbc:	mov	r4, r0
   12cc0:	mov	r0, r1
   12cc4:	ldr	r1, [r4, #20]
   12cc8:	bl	12260 <strspn@plt+0x13cc>
   12ccc:	subs	r5, r0, #0
   12cd0:	beq	12dc8 <strspn@plt+0x1f34>
   12cd4:	ldr	r3, [r4, #8]
   12cd8:	cmp	r5, r3
   12cdc:	beq	12dd8 <strspn@plt+0x1f44>
   12ce0:	mov	r1, #8
   12ce4:	mov	r0, r5
   12ce8:	bl	15998 <strspn@plt+0x4b04>
   12cec:	str	r0, [sp]
   12cf0:	cmp	r0, #0
   12cf4:	beq	12de0 <strspn@plt+0x1f4c>
   12cf8:	str	r5, [sp, #8]
   12cfc:	add	r0, r0, r5, lsl #3
   12d00:	str	r0, [sp, #4]
   12d04:	mov	r2, #0
   12d08:	str	r2, [sp, #12]
   12d0c:	str	r2, [sp, #16]
   12d10:	ldr	r3, [r4, #20]
   12d14:	str	r3, [sp, #20]
   12d18:	ldr	r3, [r4, #24]
   12d1c:	str	r3, [sp, #24]
   12d20:	ldr	r3, [r4, #28]
   12d24:	str	r3, [sp, #28]
   12d28:	ldr	r3, [r4, #32]
   12d2c:	str	r3, [sp, #32]
   12d30:	ldr	r3, [r4, #36]	; 0x24
   12d34:	str	r3, [sp, #36]	; 0x24
   12d38:	mov	r1, r4
   12d3c:	mov	r0, sp
   12d40:	bl	1235c <strspn@plt+0x14c8>
   12d44:	subs	r5, r0, #0
   12d48:	bne	12d90 <strspn@plt+0x1efc>
   12d4c:	ldr	r3, [sp, #36]	; 0x24
   12d50:	str	r3, [r4, #36]	; 0x24
   12d54:	mov	r2, #1
   12d58:	mov	r1, sp
   12d5c:	mov	r0, r4
   12d60:	bl	1235c <strspn@plt+0x14c8>
   12d64:	cmp	r0, #0
   12d68:	beq	12dc4 <strspn@plt+0x1f30>
   12d6c:	mov	r2, #0
   12d70:	mov	r1, sp
   12d74:	mov	r0, r4
   12d78:	bl	1235c <strspn@plt+0x14c8>
   12d7c:	cmp	r0, #0
   12d80:	beq	12dc4 <strspn@plt+0x1f30>
   12d84:	ldr	r0, [sp]
   12d88:	bl	120ec <strspn@plt+0x1258>
   12d8c:	b	12dcc <strspn@plt+0x1f38>
   12d90:	ldr	r0, [r4]
   12d94:	bl	120ec <strspn@plt+0x1258>
   12d98:	ldr	r3, [sp]
   12d9c:	str	r3, [r4]
   12da0:	ldr	r3, [sp, #4]
   12da4:	str	r3, [r4, #4]
   12da8:	ldr	r3, [sp, #8]
   12dac:	str	r3, [r4, #8]
   12db0:	ldr	r3, [sp, #12]
   12db4:	str	r3, [r4, #12]
   12db8:	ldr	r3, [sp, #36]	; 0x24
   12dbc:	str	r3, [r4, #36]	; 0x24
   12dc0:	b	12dcc <strspn@plt+0x1f38>
   12dc4:	bl	10e88 <abort@plt>
   12dc8:	mov	r5, #0
   12dcc:	mov	r0, r5
   12dd0:	add	sp, sp, #44	; 0x2c
   12dd4:	pop	{r4, r5, pc}
   12dd8:	mov	r5, #1
   12ddc:	b	12dcc <strspn@plt+0x1f38>
   12de0:	mov	r5, #0
   12de4:	b	12dcc <strspn@plt+0x1f38>
   12de8:	push	{r4, r5, r6, lr}
   12dec:	sub	sp, sp, #8
   12df0:	subs	r6, r1, #0
   12df4:	beq	12e30 <strspn@plt+0x1f9c>
   12df8:	mov	r4, r0
   12dfc:	mov	r5, r2
   12e00:	mov	r3, #0
   12e04:	add	r2, sp, #4
   12e08:	mov	r1, r6
   12e0c:	bl	124b0 <strspn@plt+0x161c>
   12e10:	cmp	r0, #0
   12e14:	beq	12e34 <strspn@plt+0x1fa0>
   12e18:	cmp	r5, #0
   12e1c:	moveq	r0, #0
   12e20:	strne	r0, [r5]
   12e24:	movne	r0, #0
   12e28:	add	sp, sp, #8
   12e2c:	pop	{r4, r5, r6, pc}
   12e30:	bl	10e88 <abort@plt>
   12e34:	vldr	s15, [r4, #12]
   12e38:	vcvt.f32.u32	s14, s15
   12e3c:	ldr	r3, [r4, #20]
   12e40:	vldr	s15, [r4, #8]
   12e44:	vcvt.f32.u32	s15, s15
   12e48:	vldr	s13, [r3, #8]
   12e4c:	vmul.f32	s15, s15, s13
   12e50:	vcmpe.f32	s14, s15
   12e54:	vmrs	APSR_nzcv, fpscr
   12e58:	bgt	12ea8 <strspn@plt+0x2014>
   12e5c:	ldr	r3, [sp, #4]
   12e60:	ldr	r2, [r3]
   12e64:	cmp	r2, #0
   12e68:	beq	12f4c <strspn@plt+0x20b8>
   12e6c:	ldr	r0, [r4, #36]	; 0x24
   12e70:	cmp	r0, #0
   12e74:	beq	12f34 <strspn@plt+0x20a0>
   12e78:	ldr	r3, [r0, #4]
   12e7c:	str	r3, [r4, #36]	; 0x24
   12e80:	str	r6, [r0]
   12e84:	ldr	r3, [sp, #4]
   12e88:	ldr	r2, [r3, #4]
   12e8c:	str	r2, [r0, #4]
   12e90:	str	r0, [r3, #4]
   12e94:	ldr	r3, [r4, #16]
   12e98:	add	r3, r3, #1
   12e9c:	str	r3, [r4, #16]
   12ea0:	mov	r0, #1
   12ea4:	b	12e28 <strspn@plt+0x1f94>
   12ea8:	mov	r0, r4
   12eac:	bl	1216c <strspn@plt+0x12d8>
   12eb0:	ldr	r3, [r4, #20]
   12eb4:	vldr	s13, [r3, #8]
   12eb8:	vldr	s15, [r4, #8]
   12ebc:	vcvt.f32.u32	s15, s15
   12ec0:	vldr	s14, [r4, #12]
   12ec4:	vcvt.f32.u32	s14, s14
   12ec8:	vmul.f32	s12, s13, s15
   12ecc:	vcmpe.f32	s14, s12
   12ed0:	vmrs	APSR_nzcv, fpscr
   12ed4:	ble	12e5c <strspn@plt+0x1fc8>
   12ed8:	ldrb	r2, [r3, #16]
   12edc:	cmp	r2, #0
   12ee0:	vldr	s14, [r3, #12]
   12ee4:	vmul.f32	s15, s15, s14
   12ee8:	vmuleq.f32	s15, s15, s13
   12eec:	vldr	s14, [pc, #140]	; 12f80 <strspn@plt+0x20ec>
   12ef0:	vcmpe.f32	s15, s14
   12ef4:	vmrs	APSR_nzcv, fpscr
   12ef8:	bge	12f70 <strspn@plt+0x20dc>
   12efc:	vcvt.u32.f32	s15, s15
   12f00:	vmov	r1, s15
   12f04:	mov	r0, r4
   12f08:	bl	12cb4 <strspn@plt+0x1e20>
   12f0c:	cmp	r0, #0
   12f10:	beq	12f78 <strspn@plt+0x20e4>
   12f14:	mov	r3, #0
   12f18:	add	r2, sp, #4
   12f1c:	mov	r1, r6
   12f20:	mov	r0, r4
   12f24:	bl	124b0 <strspn@plt+0x161c>
   12f28:	cmp	r0, #0
   12f2c:	beq	12e5c <strspn@plt+0x1fc8>
   12f30:	bl	10e88 <abort@plt>
   12f34:	mov	r0, #8
   12f38:	bl	159e8 <strspn@plt+0x4b54>
   12f3c:	cmp	r0, #0
   12f40:	bne	12e80 <strspn@plt+0x1fec>
   12f44:	mvn	r0, #0
   12f48:	b	12e28 <strspn@plt+0x1f94>
   12f4c:	str	r6, [r3]
   12f50:	ldr	r3, [r4, #16]
   12f54:	add	r3, r3, #1
   12f58:	str	r3, [r4, #16]
   12f5c:	ldr	r3, [r4, #12]
   12f60:	add	r3, r3, #1
   12f64:	str	r3, [r4, #12]
   12f68:	mov	r0, #1
   12f6c:	b	12e28 <strspn@plt+0x1f94>
   12f70:	mvn	r0, #0
   12f74:	b	12e28 <strspn@plt+0x1f94>
   12f78:	mvn	r0, #0
   12f7c:	b	12e28 <strspn@plt+0x1f94>
   12f80:	svcmi	0x00800000
   12f84:	push	{r4, lr}
   12f88:	sub	sp, sp, #8
   12f8c:	mov	r4, r1
   12f90:	add	r2, sp, #4
   12f94:	bl	12de8 <strspn@plt+0x1f54>
   12f98:	cmn	r0, #1
   12f9c:	beq	12fb4 <strspn@plt+0x2120>
   12fa0:	cmp	r0, #0
   12fa4:	movne	r0, r4
   12fa8:	ldreq	r0, [sp, #4]
   12fac:	add	sp, sp, #8
   12fb0:	pop	{r4, pc}
   12fb4:	mov	r0, #0
   12fb8:	b	12fac <strspn@plt+0x2118>
   12fbc:	push	{r4, r5, r6, lr}
   12fc0:	sub	sp, sp, #8
   12fc4:	mov	r4, r0
   12fc8:	mov	r3, #1
   12fcc:	add	r2, sp, #4
   12fd0:	bl	124b0 <strspn@plt+0x161c>
   12fd4:	subs	r5, r0, #0
   12fd8:	beq	12ff8 <strspn@plt+0x2164>
   12fdc:	ldr	r3, [r4, #16]
   12fe0:	sub	r3, r3, #1
   12fe4:	str	r3, [r4, #16]
   12fe8:	ldr	r3, [sp, #4]
   12fec:	ldr	r3, [r3]
   12ff0:	cmp	r3, #0
   12ff4:	beq	13004 <strspn@plt+0x2170>
   12ff8:	mov	r0, r5
   12ffc:	add	sp, sp, #8
   13000:	pop	{r4, r5, r6, pc}
   13004:	ldr	r3, [r4, #12]
   13008:	sub	r3, r3, #1
   1300c:	str	r3, [r4, #12]
   13010:	vmov	s15, r3
   13014:	vcvt.f32.u32	s15, s15
   13018:	ldr	r3, [r4, #20]
   1301c:	vldr	s14, [r4, #8]
   13020:	vcvt.f32.u32	s14, s14
   13024:	vldr	s13, [r3]
   13028:	vmul.f32	s14, s14, s13
   1302c:	vcmpe.f32	s15, s14
   13030:	vmrs	APSR_nzcv, fpscr
   13034:	bpl	12ff8 <strspn@plt+0x2164>
   13038:	mov	r0, r4
   1303c:	bl	1216c <strspn@plt+0x12d8>
   13040:	ldr	r3, [r4, #20]
   13044:	vldr	s15, [r4, #8]
   13048:	vcvt.f32.u32	s15, s15
   1304c:	vldr	s14, [r4, #12]
   13050:	vcvt.f32.u32	s13, s14
   13054:	vldr	s14, [r3]
   13058:	vmul.f32	s14, s15, s14
   1305c:	vcmpe.f32	s13, s14
   13060:	vmrs	APSR_nzcv, fpscr
   13064:	bpl	12ff8 <strspn@plt+0x2164>
   13068:	ldrb	r2, [r3, #16]
   1306c:	cmp	r2, #0
   13070:	vldr	s14, [r3, #4]
   13074:	vmuleq.f32	s15, s15, s14
   13078:	vldreq	s14, [r3, #8]
   1307c:	vmul.f32	s15, s15, s14
   13080:	vcvt.u32.f32	s15, s15
   13084:	vmov	r1, s15
   13088:	mov	r0, r4
   1308c:	bl	12cb4 <strspn@plt+0x1e20>
   13090:	cmp	r0, #0
   13094:	bne	12ff8 <strspn@plt+0x2164>
   13098:	ldr	r0, [r4, #36]	; 0x24
   1309c:	cmp	r0, #0
   130a0:	beq	130b8 <strspn@plt+0x2224>
   130a4:	ldr	r6, [r0, #4]
   130a8:	bl	120ec <strspn@plt+0x1258>
   130ac:	mov	r0, r6
   130b0:	cmp	r6, #0
   130b4:	bne	130a4 <strspn@plt+0x2210>
   130b8:	mov	r3, #0
   130bc:	str	r3, [r4, #36]	; 0x24
   130c0:	b	12ff8 <strspn@plt+0x2164>
   130c4:	push	{r4, lr}
   130c8:	bl	12fbc <strspn@plt+0x2128>
   130cc:	pop	{r4, pc}
   130d0:	push	{r4, r5, r6, lr}
   130d4:	mov	r4, r0
   130d8:	mov	r6, r1
   130dc:	ldr	r0, [r0]
   130e0:	bl	15c94 <strspn@plt+0x4e00>
   130e4:	ldrd	r4, [r4, #8]
   130e8:	mov	r2, r6
   130ec:	mov	r3, #0
   130f0:	eor	r4, r4, r0
   130f4:	mov	r0, r4
   130f8:	mov	r1, r5
   130fc:	bl	162fc <strspn@plt+0x5468>
   13100:	mov	r0, r2
   13104:	pop	{r4, r5, r6, pc}
   13108:	push	{r4, r5, r6, lr}
   1310c:	ldrd	r4, [r0, #8]
   13110:	ldrd	r2, [r1, #8]
   13114:	cmp	r5, r3
   13118:	cmpeq	r4, r2
   1311c:	beq	13128 <strspn@plt+0x2294>
   13120:	mov	r0, #0
   13124:	pop	{r4, r5, r6, pc}
   13128:	ldrd	r4, [r0, #16]
   1312c:	ldrd	r2, [r1, #16]
   13130:	cmp	r5, r3
   13134:	cmpeq	r4, r2
   13138:	beq	13144 <strspn@plt+0x22b0>
   1313c:	mov	r0, #0
   13140:	pop	{r4, r5, r6, pc}
   13144:	ldr	r1, [r1]
   13148:	ldr	r0, [r0]
   1314c:	bl	10c54 <strcmp@plt>
   13150:	clz	r0, r0
   13154:	lsr	r0, r0, #5
   13158:	pop	{r4, r5, r6, pc}
   1315c:	push	{r4, lr}
   13160:	mov	r4, r0
   13164:	ldr	r0, [r0]
   13168:	bl	120ec <strspn@plt+0x1258>
   1316c:	mov	r0, r4
   13170:	bl	120ec <strspn@plt+0x1258>
   13174:	pop	{r4, pc}
   13178:	push	{r4, r5, r6, lr}
   1317c:	subs	r4, r0, #0
   13180:	beq	131f8 <strspn@plt+0x2364>
   13184:	mov	r1, #47	; 0x2f
   13188:	mov	r0, r4
   1318c:	bl	10e4c <strrchr@plt>
   13190:	cmp	r0, #0
   13194:	addne	r5, r0, #1
   13198:	moveq	r5, r4
   1319c:	sub	r3, r5, r4
   131a0:	cmp	r3, #6
   131a4:	ble	131e4 <strspn@plt+0x2350>
   131a8:	mov	r2, #7
   131ac:	ldr	r1, [pc, #96]	; 13214 <strspn@plt+0x2380>
   131b0:	sub	r0, r5, #7
   131b4:	bl	10e7c <strncmp@plt>
   131b8:	cmp	r0, #0
   131bc:	bne	131e4 <strspn@plt+0x2350>
   131c0:	mov	r2, #3
   131c4:	ldr	r1, [pc, #76]	; 13218 <strspn@plt+0x2384>
   131c8:	mov	r0, r5
   131cc:	bl	10e7c <strncmp@plt>
   131d0:	cmp	r0, #0
   131d4:	addeq	r4, r5, #3
   131d8:	ldreq	r3, [pc, #60]	; 1321c <strspn@plt+0x2388>
   131dc:	streq	r4, [r3]
   131e0:	movne	r4, r5
   131e4:	ldr	r3, [pc, #52]	; 13220 <strspn@plt+0x238c>
   131e8:	str	r4, [r3]
   131ec:	ldr	r3, [pc, #48]	; 13224 <strspn@plt+0x2390>
   131f0:	str	r4, [r3]
   131f4:	pop	{r4, r5, r6, pc}
   131f8:	ldr	r3, [pc, #40]	; 13228 <strspn@plt+0x2394>
   131fc:	ldr	r3, [r3]
   13200:	mov	r2, #55	; 0x37
   13204:	mov	r1, #1
   13208:	ldr	r0, [pc, #28]	; 1322c <strspn@plt+0x2398>
   1320c:	bl	10d14 <fwrite@plt>
   13210:	bl	10e88 <abort@plt>
   13214:	andeq	r6, r1, r4, asr #27
   13218:	andeq	r6, r1, ip, asr #27
   1321c:	andeq	r8, r2, r0, lsr r1
   13220:	andeq	r8, r2, r4, asr r1
   13224:	andeq	r8, r2, r4, lsr r1
   13228:	andeq	r8, r2, r0, asr #2
   1322c:	andeq	r6, r1, ip, lsl #27
   13230:	push	{r4, r5, r6, lr}
   13234:	mov	r5, r0
   13238:	mov	r4, r1
   1323c:	mov	r2, #48	; 0x30
   13240:	mov	r1, #0
   13244:	bl	10dec <memset@plt>
   13248:	cmp	r4, #10
   1324c:	beq	1325c <strspn@plt+0x23c8>
   13250:	str	r4, [r5]
   13254:	mov	r0, r5
   13258:	pop	{r4, r5, r6, pc}
   1325c:	bl	10e88 <abort@plt>
   13260:	push	{r4, r5, r6, lr}
   13264:	mov	r4, r0
   13268:	mov	r5, r1
   1326c:	mov	r2, #5
   13270:	mov	r1, r0
   13274:	mov	r0, #0
   13278:	bl	10ccc <dcgettext@plt>
   1327c:	cmp	r4, r0
   13280:	popne	{r4, r5, r6, pc}
   13284:	bl	15cd0 <strspn@plt+0x4e3c>
   13288:	ldrb	r3, [r0]
   1328c:	bic	r3, r3, #32
   13290:	cmp	r3, #85	; 0x55
   13294:	beq	13310 <strspn@plt+0x247c>
   13298:	cmp	r3, #71	; 0x47
   1329c:	bne	1336c <strspn@plt+0x24d8>
   132a0:	ldrb	r3, [r0, #1]
   132a4:	bic	r3, r3, #32
   132a8:	cmp	r3, #66	; 0x42
   132ac:	bne	1336c <strspn@plt+0x24d8>
   132b0:	ldrb	r3, [r0, #2]
   132b4:	cmp	r3, #49	; 0x31
   132b8:	bne	1336c <strspn@plt+0x24d8>
   132bc:	ldrb	r3, [r0, #3]
   132c0:	cmp	r3, #56	; 0x38
   132c4:	bne	1336c <strspn@plt+0x24d8>
   132c8:	ldrb	r3, [r0, #4]
   132cc:	cmp	r3, #48	; 0x30
   132d0:	bne	1336c <strspn@plt+0x24d8>
   132d4:	ldrb	r3, [r0, #5]
   132d8:	cmp	r3, #51	; 0x33
   132dc:	bne	1336c <strspn@plt+0x24d8>
   132e0:	ldrb	r3, [r0, #6]
   132e4:	cmp	r3, #48	; 0x30
   132e8:	bne	1336c <strspn@plt+0x24d8>
   132ec:	ldrb	r3, [r0, #7]
   132f0:	cmp	r3, #0
   132f4:	bne	1336c <strspn@plt+0x24d8>
   132f8:	ldrb	r2, [r4]
   132fc:	ldr	r3, [pc, #124]	; 13380 <strspn@plt+0x24ec>
   13300:	ldr	r0, [pc, #124]	; 13384 <strspn@plt+0x24f0>
   13304:	cmp	r2, #96	; 0x60
   13308:	movne	r0, r3
   1330c:	pop	{r4, r5, r6, pc}
   13310:	ldrb	r3, [r0, #1]
   13314:	bic	r3, r3, #32
   13318:	cmp	r3, #84	; 0x54
   1331c:	bne	1336c <strspn@plt+0x24d8>
   13320:	ldrb	r3, [r0, #2]
   13324:	bic	r3, r3, #32
   13328:	cmp	r3, #70	; 0x46
   1332c:	bne	1336c <strspn@plt+0x24d8>
   13330:	ldrb	r3, [r0, #3]
   13334:	cmp	r3, #45	; 0x2d
   13338:	bne	1336c <strspn@plt+0x24d8>
   1333c:	ldrb	r3, [r0, #4]
   13340:	cmp	r3, #56	; 0x38
   13344:	bne	1336c <strspn@plt+0x24d8>
   13348:	ldrb	r3, [r0, #5]
   1334c:	cmp	r3, #0
   13350:	bne	1336c <strspn@plt+0x24d8>
   13354:	ldrb	r2, [r4]
   13358:	ldr	r3, [pc, #40]	; 13388 <strspn@plt+0x24f4>
   1335c:	ldr	r0, [pc, #40]	; 1338c <strspn@plt+0x24f8>
   13360:	cmp	r2, #96	; 0x60
   13364:	movne	r0, r3
   13368:	pop	{r4, r5, r6, pc}
   1336c:	ldr	r3, [pc, #28]	; 13390 <strspn@plt+0x24fc>
   13370:	ldr	r0, [pc, #28]	; 13394 <strspn@plt+0x2500>
   13374:	cmp	r5, #9
   13378:	movne	r0, r3
   1337c:	pop	{r4, r5, r6, pc}
   13380:	andeq	r6, r1, r8, lsr #28
   13384:	andeq	r6, r1, r4, lsr lr
   13388:	andeq	r6, r1, r4, lsr #28
   1338c:	andeq	r6, r1, r8, lsr lr
   13390:	andeq	r6, r1, ip, lsr #28
   13394:	andeq	r6, r1, r0, lsr lr
   13398:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1339c:	sub	sp, sp, #116	; 0x74
   133a0:	str	r0, [sp, #36]	; 0x24
   133a4:	mov	sl, r1
   133a8:	str	r2, [sp, #52]	; 0x34
   133ac:	str	r3, [sp, #28]
   133b0:	ldr	r8, [sp, #152]	; 0x98
   133b4:	bl	10d2c <__ctype_get_mb_cur_max@plt>
   133b8:	str	r0, [sp, #84]	; 0x54
   133bc:	ldr	r3, [sp, #156]	; 0x9c
   133c0:	lsr	r3, r3, #1
   133c4:	and	r3, r3, #1
   133c8:	str	r3, [sp, #32]
   133cc:	mov	r3, #1
   133d0:	str	r3, [sp, #40]	; 0x28
   133d4:	mov	r3, #0
   133d8:	str	r3, [sp, #80]	; 0x50
   133dc:	str	r3, [sp, #44]	; 0x2c
   133e0:	str	r3, [sp, #48]	; 0x30
   133e4:	str	r3, [sp, #60]	; 0x3c
   133e8:	str	r3, [sp, #72]	; 0x48
   133ec:	str	r3, [sp, #76]	; 0x4c
   133f0:	mov	r7, sl
   133f4:	mov	sl, r8
   133f8:	cmp	sl, #10
   133fc:	ldrls	pc, [pc, sl, lsl #2]
   13400:	b	135b8 <strspn@plt+0x2724>
   13404:	andeq	r3, r1, r8, ror #8
   13408:	andeq	r3, r1, r8, lsr r4
   1340c:	muleq	r1, r4, r5
   13410:	andeq	r3, r1, r0, lsr r4
   13414:	andeq	r3, r1, r8, asr #10
   13418:	andeq	r3, r1, r8, ror r4
   1341c:	andeq	r4, r1, r4, ror #9
   13420:			; <UNDEFINED> instruction: 0x000135bc
   13424:			; <UNDEFINED> instruction: 0x000134b4
   13428:			; <UNDEFINED> instruction: 0x000134b4
   1342c:			; <UNDEFINED> instruction: 0x000134b4
   13430:	mov	r3, #1
   13434:	str	r3, [sp, #48]	; 0x30
   13438:	mov	r3, #1
   1343c:	str	r3, [sp, #32]
   13440:	str	r3, [sp, #60]	; 0x3c
   13444:	ldr	r3, [pc, #4068]	; 14430 <strspn@plt+0x359c>
   13448:	str	r3, [sp, #72]	; 0x48
   1344c:	mov	fp, #0
   13450:	mov	sl, #2
   13454:	mov	r6, #0
   13458:	ldr	r3, [sp, #48]	; 0x30
   1345c:	eor	r3, r3, #1
   13460:	str	r3, [sp, #68]	; 0x44
   13464:	b	13d4c <strspn@plt+0x2eb8>
   13468:	mov	r3, #0
   1346c:	str	r3, [sp, #32]
   13470:	mov	fp, r3
   13474:	b	13454 <strspn@plt+0x25c0>
   13478:	ldr	r3, [sp, #32]
   1347c:	cmp	r3, #0
   13480:	bne	135d4 <strspn@plt+0x2740>
   13484:	cmp	r7, #0
   13488:	beq	135f4 <strspn@plt+0x2760>
   1348c:	ldr	r3, [sp, #36]	; 0x24
   13490:	mov	r2, #34	; 0x22
   13494:	strb	r2, [r3]
   13498:	mov	r3, #1
   1349c:	str	r3, [sp, #48]	; 0x30
   134a0:	str	r3, [sp, #60]	; 0x3c
   134a4:	ldr	r3, [pc, #3980]	; 14438 <strspn@plt+0x35a4>
   134a8:	str	r3, [sp, #72]	; 0x48
   134ac:	mov	fp, #1
   134b0:	b	13454 <strspn@plt+0x25c0>
   134b4:	cmp	sl, #10
   134b8:	beq	134dc <strspn@plt+0x2648>
   134bc:	mov	r1, sl
   134c0:	ldr	r0, [pc, #3948]	; 14434 <strspn@plt+0x35a0>
   134c4:	bl	13260 <strspn@plt+0x23cc>
   134c8:	str	r0, [sp, #164]	; 0xa4
   134cc:	mov	r1, sl
   134d0:	ldr	r0, [pc, #3928]	; 14430 <strspn@plt+0x359c>
   134d4:	bl	13260 <strspn@plt+0x23cc>
   134d8:	str	r0, [sp, #168]	; 0xa8
   134dc:	ldr	r3, [sp, #32]
   134e0:	cmp	r3, #0
   134e4:	movne	fp, #0
   134e8:	bne	13520 <strspn@plt+0x268c>
   134ec:	ldr	r3, [sp, #164]	; 0xa4
   134f0:	ldrb	r3, [r3]
   134f4:	cmp	r3, #0
   134f8:	beq	13540 <strspn@plt+0x26ac>
   134fc:	ldr	r2, [sp, #164]	; 0xa4
   13500:	mov	fp, #0
   13504:	ldr	r1, [sp, #36]	; 0x24
   13508:	cmp	r7, fp
   1350c:	strbhi	r3, [r1, fp]
   13510:	add	fp, fp, #1
   13514:	ldrb	r3, [r2, #1]!
   13518:	cmp	r3, #0
   1351c:	bne	13508 <strspn@plt+0x2674>
   13520:	ldr	r0, [sp, #168]	; 0xa8
   13524:	bl	10dc8 <strlen@plt>
   13528:	str	r0, [sp, #60]	; 0x3c
   1352c:	ldr	r3, [sp, #168]	; 0xa8
   13530:	str	r3, [sp, #72]	; 0x48
   13534:	mov	r3, #1
   13538:	str	r3, [sp, #48]	; 0x30
   1353c:	b	13454 <strspn@plt+0x25c0>
   13540:	mov	fp, #0
   13544:	b	13520 <strspn@plt+0x268c>
   13548:	ldr	r3, [sp, #32]
   1354c:	cmp	r3, #0
   13550:	bne	13610 <strspn@plt+0x277c>
   13554:	mov	r3, #1
   13558:	str	r3, [sp, #48]	; 0x30
   1355c:	cmp	r7, #0
   13560:	beq	1362c <strspn@plt+0x2798>
   13564:	ldr	r3, [sp, #36]	; 0x24
   13568:	mov	r2, #39	; 0x27
   1356c:	strb	r2, [r3]
   13570:	mov	r3, #0
   13574:	str	r3, [sp, #32]
   13578:	mov	r3, #1
   1357c:	str	r3, [sp, #60]	; 0x3c
   13580:	ldr	r3, [pc, #3752]	; 14430 <strspn@plt+0x359c>
   13584:	str	r3, [sp, #72]	; 0x48
   13588:	mov	fp, #1
   1358c:	mov	sl, #2
   13590:	b	13454 <strspn@plt+0x25c0>
   13594:	ldr	r3, [sp, #32]
   13598:	cmp	r3, #0
   1359c:	beq	1355c <strspn@plt+0x26c8>
   135a0:	mov	r3, #1
   135a4:	str	r3, [sp, #60]	; 0x3c
   135a8:	ldr	r3, [pc, #3712]	; 14430 <strspn@plt+0x359c>
   135ac:	str	r3, [sp, #72]	; 0x48
   135b0:	mov	fp, #0
   135b4:	b	13454 <strspn@plt+0x25c0>
   135b8:	bl	10e88 <abort@plt>
   135bc:	mov	r3, #0
   135c0:	str	r3, [sp, #32]
   135c4:	mov	r3, #1
   135c8:	str	r3, [sp, #48]	; 0x30
   135cc:	mov	fp, #0
   135d0:	b	13454 <strspn@plt+0x25c0>
   135d4:	ldr	r3, [sp, #32]
   135d8:	str	r3, [sp, #48]	; 0x30
   135dc:	mov	r3, #1
   135e0:	str	r3, [sp, #60]	; 0x3c
   135e4:	ldr	r3, [pc, #3660]	; 14438 <strspn@plt+0x35a4>
   135e8:	str	r3, [sp, #72]	; 0x48
   135ec:	mov	fp, #0
   135f0:	b	13454 <strspn@plt+0x25c0>
   135f4:	mov	r3, #1
   135f8:	str	r3, [sp, #48]	; 0x30
   135fc:	str	r3, [sp, #60]	; 0x3c
   13600:	ldr	r3, [pc, #3632]	; 14438 <strspn@plt+0x35a4>
   13604:	str	r3, [sp, #72]	; 0x48
   13608:	mov	fp, #1
   1360c:	b	13454 <strspn@plt+0x25c0>
   13610:	mov	r3, #1
   13614:	str	r3, [sp, #60]	; 0x3c
   13618:	ldr	r3, [pc, #3600]	; 14430 <strspn@plt+0x359c>
   1361c:	str	r3, [sp, #72]	; 0x48
   13620:	mov	fp, #0
   13624:	mov	sl, #2
   13628:	b	13454 <strspn@plt+0x25c0>
   1362c:	mov	r3, #0
   13630:	str	r3, [sp, #32]
   13634:	mov	r3, #1
   13638:	str	r3, [sp, #60]	; 0x3c
   1363c:	ldr	r3, [pc, #3564]	; 14430 <strspn@plt+0x359c>
   13640:	str	r3, [sp, #72]	; 0x48
   13644:	mov	fp, #1
   13648:	mov	sl, #2
   1364c:	b	13454 <strspn@plt+0x25c0>
   13650:	mov	r3, #0
   13654:	str	r3, [sp, #56]	; 0x38
   13658:	ldr	r3, [sp, #52]	; 0x34
   1365c:	add	r2, r3, r6
   13660:	str	r2, [sp, #64]	; 0x40
   13664:	ldrb	r4, [r3, r6]
   13668:	cmp	r4, #126	; 0x7e
   1366c:	ldrls	pc, [pc, r4, lsl #2]
   13670:	b	13eac <strspn@plt+0x3018>
   13674:	andeq	r3, r1, ip, lsl #17
   13678:	andeq	r3, r1, ip, lsr #29
   1367c:	andeq	r3, r1, ip, lsr #29
   13680:	andeq	r3, r1, ip, lsr #29
   13684:	andeq	r3, r1, ip, lsr #29
   13688:	andeq	r3, r1, ip, lsr #29
   1368c:	andeq	r3, r1, ip, lsr #29
   13690:	andeq	r3, r1, r8, ror #23
   13694:	andeq	r3, r1, r4, lsl #17
   13698:	andeq	r3, r1, r0, lsr #23
   1369c:	muleq	r1, r8, fp
   136a0:	andeq	r3, r1, r8, lsl #22
   136a4:	andeq	r3, r1, r0, lsl #22
   136a8:	andeq	r3, r1, ip, ror r8
   136ac:	andeq	r3, r1, ip, lsr #29
   136b0:	andeq	r3, r1, ip, lsr #29
   136b4:	andeq	r3, r1, ip, lsr #29
   136b8:	andeq	r3, r1, ip, lsr #29
   136bc:	andeq	r3, r1, ip, lsr #29
   136c0:	andeq	r3, r1, ip, lsr #29
   136c4:	andeq	r3, r1, ip, lsr #29
   136c8:	andeq	r3, r1, ip, lsr #29
   136cc:	andeq	r3, r1, ip, lsr #29
   136d0:	andeq	r3, r1, ip, lsr #29
   136d4:	andeq	r3, r1, ip, lsr #29
   136d8:	andeq	r3, r1, ip, lsr #29
   136dc:	andeq	r3, r1, ip, lsr #29
   136e0:	andeq	r3, r1, ip, lsr #29
   136e4:	andeq	r3, r1, ip, lsr #29
   136e8:	andeq	r3, r1, ip, lsr #29
   136ec:	andeq	r3, r1, ip, lsr #29
   136f0:	andeq	r3, r1, ip, lsr #29
   136f4:	andeq	r3, r1, ip, lsr ip
   136f8:	andeq	r3, r1, r8, lsr ip
   136fc:	andeq	r3, r1, r8, lsr ip
   13700:	andeq	r3, r1, r0, lsl ip
   13704:	andeq	r3, r1, r8, lsr ip
   13708:	andeq	r4, r1, r0, lsl #5
   1370c:	andeq	r3, r1, r8, lsr ip
   13710:	andeq	r3, r1, r0, lsl lr
   13714:	andeq	r3, r1, r8, lsr ip
   13718:	andeq	r3, r1, r8, lsr ip
   1371c:	andeq	r3, r1, r8, lsr ip
   13720:	andeq	r4, r1, r0, lsl #5
   13724:	andeq	r4, r1, r0, lsl #5
   13728:	andeq	r4, r1, r0, lsl #5
   1372c:	andeq	r4, r1, r0, lsl #5
   13730:	andeq	r4, r1, r0, lsl #5
   13734:	andeq	r4, r1, r0, lsl #5
   13738:	andeq	r4, r1, r0, lsl #5
   1373c:	andeq	r4, r1, r0, lsl #5
   13740:	andeq	r4, r1, r0, lsl #5
   13744:	andeq	r4, r1, r0, lsl #5
   13748:	andeq	r4, r1, r0, lsl #5
   1374c:	andeq	r4, r1, r0, lsl #5
   13750:	andeq	r4, r1, r0, lsl #5
   13754:	andeq	r4, r1, r0, lsl #5
   13758:	andeq	r4, r1, r0, lsl #5
   1375c:	andeq	r4, r1, r0, lsl #5
   13760:	andeq	r3, r1, r8, lsr ip
   13764:	andeq	r3, r1, r8, lsr ip
   13768:	andeq	r3, r1, r8, lsr ip
   1376c:	andeq	r3, r1, r8, lsr ip
   13770:	muleq	r1, r4, r9
   13774:	andeq	r3, r1, ip, lsr #29
   13778:	andeq	r4, r1, r0, lsl #5
   1377c:	andeq	r4, r1, r0, lsl #5
   13780:	andeq	r4, r1, r0, lsl #5
   13784:	andeq	r4, r1, r0, lsl #5
   13788:	andeq	r4, r1, r0, lsl #5
   1378c:	andeq	r4, r1, r0, lsl #5
   13790:	andeq	r4, r1, r0, lsl #5
   13794:	andeq	r4, r1, r0, lsl #5
   13798:	andeq	r4, r1, r0, lsl #5
   1379c:	andeq	r4, r1, r0, lsl #5
   137a0:	andeq	r4, r1, r0, lsl #5
   137a4:	andeq	r4, r1, r0, lsl #5
   137a8:	andeq	r4, r1, r0, lsl #5
   137ac:	andeq	r4, r1, r0, lsl #5
   137b0:	andeq	r4, r1, r0, lsl #5
   137b4:	andeq	r4, r1, r0, lsl #5
   137b8:	andeq	r4, r1, r0, lsl #5
   137bc:	andeq	r4, r1, r0, lsl #5
   137c0:	andeq	r4, r1, r0, lsl #5
   137c4:	andeq	r4, r1, r0, lsl #5
   137c8:	andeq	r4, r1, r0, lsl #5
   137cc:	andeq	r4, r1, r0, lsl #5
   137d0:	andeq	r4, r1, r0, lsl #5
   137d4:	andeq	r4, r1, r0, lsl #5
   137d8:	andeq	r4, r1, r0, lsl #5
   137dc:	andeq	r4, r1, r0, lsl #5
   137e0:	andeq	r3, r1, r8, lsr ip
   137e4:	andeq	r3, r1, r0, lsl fp
   137e8:	andeq	r4, r1, r0, lsl #5
   137ec:	andeq	r3, r1, r8, lsr ip
   137f0:	andeq	r4, r1, r0, lsl #5
   137f4:	andeq	r3, r1, r8, lsr ip
   137f8:	andeq	r4, r1, r0, lsl #5
   137fc:	andeq	r4, r1, r0, lsl #5
   13800:	andeq	r4, r1, r0, lsl #5
   13804:	andeq	r4, r1, r0, lsl #5
   13808:	andeq	r4, r1, r0, lsl #5
   1380c:	andeq	r4, r1, r0, lsl #5
   13810:	andeq	r4, r1, r0, lsl #5
   13814:	andeq	r4, r1, r0, lsl #5
   13818:	andeq	r4, r1, r0, lsl #5
   1381c:	andeq	r4, r1, r0, lsl #5
   13820:	andeq	r4, r1, r0, lsl #5
   13824:	andeq	r4, r1, r0, lsl #5
   13828:	andeq	r4, r1, r0, lsl #5
   1382c:	andeq	r4, r1, r0, lsl #5
   13830:	andeq	r4, r1, r0, lsl #5
   13834:	andeq	r4, r1, r0, lsl #5
   13838:	andeq	r4, r1, r0, lsl #5
   1383c:	andeq	r4, r1, r0, lsl #5
   13840:	andeq	r4, r1, r0, lsl #5
   13844:	andeq	r4, r1, r0, lsl #5
   13848:	andeq	r4, r1, r0, lsl #5
   1384c:	andeq	r4, r1, r0, lsl #5
   13850:	andeq	r4, r1, r0, lsl #5
   13854:	andeq	r4, r1, r0, lsl #5
   13858:	andeq	r4, r1, r0, lsl #5
   1385c:	andeq	r4, r1, r0, lsl #5
   13860:	strdeq	r3, [r1], -r0
   13864:	andeq	r3, r1, r8, lsr ip
   13868:	strdeq	r3, [r1], -r0
   1386c:	andeq	r3, r1, r0, lsl ip
   13870:	mov	r3, #0
   13874:	str	r3, [sp, #56]	; 0x38
   13878:	b	13658 <strspn@plt+0x27c4>
   1387c:	mov	r3, #114	; 0x72
   13880:	b	13ba4 <strspn@plt+0x2d10>
   13884:	mov	r3, #98	; 0x62
   13888:	b	13bbc <strspn@plt+0x2d28>
   1388c:	ldr	r3, [sp, #48]	; 0x30
   13890:	cmp	r3, #0
   13894:	beq	1397c <strspn@plt+0x2ae8>
   13898:	ldr	r3, [sp, #32]
   1389c:	cmp	r3, #0
   138a0:	bne	14404 <strspn@plt+0x3570>
   138a4:	ldr	r3, [sp, #44]	; 0x2c
   138a8:	eor	r3, r3, #1
   138ac:	cmp	sl, #2
   138b0:	movne	r3, #0
   138b4:	andeq	r3, r3, #1
   138b8:	cmp	r3, #0
   138bc:	moveq	r2, fp
   138c0:	beq	13904 <strspn@plt+0x2a70>
   138c4:	cmp	r7, fp
   138c8:	ldrhi	r2, [sp, #36]	; 0x24
   138cc:	movhi	r1, #39	; 0x27
   138d0:	strbhi	r1, [r2, fp]
   138d4:	add	r2, fp, #1
   138d8:	cmp	r7, r2
   138dc:	ldrhi	r1, [sp, #36]	; 0x24
   138e0:	movhi	r0, #36	; 0x24
   138e4:	strbhi	r0, [r1, r2]
   138e8:	add	r2, fp, #2
   138ec:	cmp	r7, r2
   138f0:	ldrhi	r1, [sp, #36]	; 0x24
   138f4:	movhi	r0, #39	; 0x27
   138f8:	strbhi	r0, [r1, r2]
   138fc:	add	r2, fp, #3
   13900:	str	r3, [sp, #44]	; 0x2c
   13904:	cmp	r7, r2
   13908:	ldrhi	r3, [sp, #36]	; 0x24
   1390c:	movhi	r1, #92	; 0x5c
   13910:	strbhi	r1, [r3, r2]
   13914:	add	fp, r2, #1
   13918:	cmp	r5, #0
   1391c:	beq	14288 <strspn@plt+0x33f4>
   13920:	add	r3, r6, #1
   13924:	ldr	r1, [sp, #28]
   13928:	cmp	r1, r3
   1392c:	bls	14298 <strspn@plt+0x3404>
   13930:	ldr	r1, [sp, #52]	; 0x34
   13934:	ldrb	r3, [r1, r3]
   13938:	sub	r3, r3, #48	; 0x30
   1393c:	uxtb	r3, r3
   13940:	cmp	r3, #9
   13944:	bhi	142a4 <strspn@plt+0x3410>
   13948:	cmp	r7, fp
   1394c:	movhi	r3, #48	; 0x30
   13950:	ldrhi	r1, [sp, #36]	; 0x24
   13954:	strbhi	r3, [r1, fp]
   13958:	add	r3, r2, #2
   1395c:	cmp	r7, r3
   13960:	movhi	r1, #48	; 0x30
   13964:	ldrhi	r0, [sp, #36]	; 0x24
   13968:	strbhi	r1, [r0, r3]
   1396c:	add	fp, r2, #3
   13970:	ldr	r8, [sp, #32]
   13974:	mov	r4, #48	; 0x30
   13978:	b	13c54 <strspn@plt+0x2dc0>
   1397c:	ldr	r3, [sp, #156]	; 0x9c
   13980:	tst	r3, #1
   13984:	bne	13d48 <strspn@plt+0x2eb4>
   13988:	ldr	r5, [sp, #48]	; 0x30
   1398c:	mov	r8, r5
   13990:	b	13c54 <strspn@plt+0x2dc0>
   13994:	cmp	sl, #2
   13998:	beq	139b0 <strspn@plt+0x2b1c>
   1399c:	cmp	sl, #5
   139a0:	beq	139c8 <strspn@plt+0x2b34>
   139a4:	mov	r8, #0
   139a8:	mov	r5, r8
   139ac:	b	13c54 <strspn@plt+0x2dc0>
   139b0:	ldr	r3, [sp, #32]
   139b4:	cmp	r3, #0
   139b8:	bne	14418 <strspn@plt+0x3584>
   139bc:	mov	r8, r3
   139c0:	mov	r5, r3
   139c4:	b	13c54 <strspn@plt+0x2dc0>
   139c8:	ldr	r3, [sp, #156]	; 0x9c
   139cc:	tst	r3, #4
   139d0:	beq	142b0 <strspn@plt+0x341c>
   139d4:	add	r3, r6, #2
   139d8:	ldr	r2, [sp, #28]
   139dc:	cmp	r2, r3
   139e0:	bls	142bc <strspn@plt+0x3428>
   139e4:	ldr	r2, [sp, #52]	; 0x34
   139e8:	add	r2, r2, r6
   139ec:	ldrb	r2, [r2, #1]
   139f0:	cmp	r2, #63	; 0x3f
   139f4:	movne	r8, #0
   139f8:	movne	r5, r8
   139fc:	bne	13c54 <strspn@plt+0x2dc0>
   13a00:	ldr	r2, [sp, #52]	; 0x34
   13a04:	ldrb	r2, [r2, r3]
   13a08:	sub	r1, r2, #33	; 0x21
   13a0c:	cmp	r1, #29
   13a10:	ldrls	pc, [pc, r1, lsl #2]
   13a14:	b	142c8 <strspn@plt+0x3434>
   13a18:	muleq	r1, r0, sl
   13a1c:	andeq	r4, r1, r8, asr #5
   13a20:	andeq	r4, r1, r8, asr #5
   13a24:	andeq	r4, r1, r8, asr #5
   13a28:	andeq	r4, r1, r8, asr #5
   13a2c:	andeq	r4, r1, r8, asr #5
   13a30:	muleq	r1, r0, sl
   13a34:	muleq	r1, r0, sl
   13a38:	muleq	r1, r0, sl
   13a3c:	andeq	r4, r1, r8, asr #5
   13a40:	andeq	r4, r1, r8, asr #5
   13a44:	andeq	r4, r1, r8, asr #5
   13a48:	muleq	r1, r0, sl
   13a4c:	andeq	r4, r1, r8, asr #5
   13a50:	muleq	r1, r0, sl
   13a54:	andeq	r4, r1, r8, asr #5
   13a58:	andeq	r4, r1, r8, asr #5
   13a5c:	andeq	r4, r1, r8, asr #5
   13a60:	andeq	r4, r1, r8, asr #5
   13a64:	andeq	r4, r1, r8, asr #5
   13a68:	andeq	r4, r1, r8, asr #5
   13a6c:	andeq	r4, r1, r8, asr #5
   13a70:	andeq	r4, r1, r8, asr #5
   13a74:	andeq	r4, r1, r8, asr #5
   13a78:	andeq	r4, r1, r8, asr #5
   13a7c:	andeq	r4, r1, r8, asr #5
   13a80:	andeq	r4, r1, r8, asr #5
   13a84:	muleq	r1, r0, sl
   13a88:	muleq	r1, r0, sl
   13a8c:	muleq	r1, r0, sl
   13a90:	ldr	r1, [sp, #32]
   13a94:	cmp	r1, #0
   13a98:	bne	144d8 <strspn@plt+0x3644>
   13a9c:	cmp	r7, fp
   13aa0:	movhi	r1, #63	; 0x3f
   13aa4:	ldrhi	r0, [sp, #36]	; 0x24
   13aa8:	strbhi	r1, [r0, fp]
   13aac:	add	r1, fp, #1
   13ab0:	cmp	r7, r1
   13ab4:	ldrhi	r0, [sp, #36]	; 0x24
   13ab8:	movhi	ip, #34	; 0x22
   13abc:	strbhi	ip, [r0, r1]
   13ac0:	add	r1, fp, #2
   13ac4:	cmp	r7, r1
   13ac8:	ldrhi	r0, [sp, #36]	; 0x24
   13acc:	movhi	ip, #34	; 0x22
   13ad0:	strbhi	ip, [r0, r1]
   13ad4:	add	r1, fp, #3
   13ad8:	cmp	r7, r1
   13adc:	movhi	r0, #63	; 0x3f
   13ae0:	ldrhi	ip, [sp, #36]	; 0x24
   13ae4:	strbhi	r0, [ip, r1]
   13ae8:	add	fp, fp, #4
   13aec:	ldr	r5, [sp, #32]
   13af0:	mov	r8, r5
   13af4:	mov	r4, r2
   13af8:	mov	r6, r3
   13afc:	b	13c54 <strspn@plt+0x2dc0>
   13b00:	mov	r3, #102	; 0x66
   13b04:	b	13bbc <strspn@plt+0x2d28>
   13b08:	mov	r3, #118	; 0x76
   13b0c:	b	13bbc <strspn@plt+0x2d28>
   13b10:	cmp	sl, #2
   13b14:	beq	13b80 <strspn@plt+0x2cec>
   13b18:	ldr	r3, [sp, #48]	; 0x30
   13b1c:	ldr	r2, [sp, #32]
   13b20:	and	r3, r3, r2
   13b24:	tst	r9, r3
   13b28:	moveq	r3, r4
   13b2c:	beq	13bbc <strspn@plt+0x2d28>
   13b30:	mov	r8, #0
   13b34:	mov	r5, r8
   13b38:	eor	r5, r5, #1
   13b3c:	ldr	r3, [sp, #44]	; 0x2c
   13b40:	and	r5, r5, r3
   13b44:	tst	r5, #255	; 0xff
   13b48:	beq	13d28 <strspn@plt+0x2e94>
   13b4c:	cmp	r7, fp
   13b50:	ldrhi	r3, [sp, #36]	; 0x24
   13b54:	movhi	r2, #39	; 0x27
   13b58:	strbhi	r2, [r3, fp]
   13b5c:	add	r3, fp, #1
   13b60:	cmp	r7, r3
   13b64:	ldrhi	r2, [sp, #36]	; 0x24
   13b68:	movhi	r1, #39	; 0x27
   13b6c:	strbhi	r1, [r2, r3]
   13b70:	add	fp, fp, #2
   13b74:	mov	r3, #0
   13b78:	str	r3, [sp, #44]	; 0x2c
   13b7c:	b	13d28 <strspn@plt+0x2e94>
   13b80:	ldr	r3, [sp, #32]
   13b84:	cmp	r3, #0
   13b88:	bne	14424 <strspn@plt+0x3590>
   13b8c:	mov	r8, r3
   13b90:	mov	r5, r3
   13b94:	b	13b38 <strspn@plt+0x2ca4>
   13b98:	mov	r3, #110	; 0x6e
   13b9c:	b	13ba4 <strspn@plt+0x2d10>
   13ba0:	mov	r3, #116	; 0x74
   13ba4:	ldr	r2, [sp, #32]
   13ba8:	cmp	sl, #2
   13bac:	movne	r2, #0
   13bb0:	andeq	r2, r2, #1
   13bb4:	cmp	r2, #0
   13bb8:	bne	13bdc <strspn@plt+0x2d48>
   13bbc:	ldr	r2, [sp, #48]	; 0x30
   13bc0:	cmp	r2, #0
   13bc4:	moveq	r8, r2
   13bc8:	moveq	r5, r2
   13bcc:	beq	13c54 <strspn@plt+0x2dc0>
   13bd0:	mov	r4, r3
   13bd4:	mov	r8, #0
   13bd8:	b	13cac <strspn@plt+0x2e18>
   13bdc:	mov	r8, sl
   13be0:	mov	sl, r7
   13be4:	b	14450 <strspn@plt+0x35bc>
   13be8:	mov	r3, #97	; 0x61
   13bec:	b	13bbc <strspn@plt+0x2d28>
   13bf0:	ldr	r3, [sp, #28]
   13bf4:	cmn	r3, #1
   13bf8:	beq	13c24 <strspn@plt+0x2d90>
   13bfc:	ldr	r3, [sp, #28]
   13c00:	subs	r3, r3, #1
   13c04:	movne	r3, #1
   13c08:	cmp	r3, #0
   13c0c:	bne	142d4 <strspn@plt+0x3440>
   13c10:	cmp	r6, #0
   13c14:	beq	13c3c <strspn@plt+0x2da8>
   13c18:	mov	r8, #0
   13c1c:	mov	r5, r8
   13c20:	b	13c54 <strspn@plt+0x2dc0>
   13c24:	ldr	r3, [sp, #52]	; 0x34
   13c28:	ldrb	r3, [r3, #1]
   13c2c:	adds	r3, r3, #0
   13c30:	movne	r3, #1
   13c34:	b	13c08 <strspn@plt+0x2d74>
   13c38:	mov	r8, #0
   13c3c:	ldr	r5, [sp, #32]
   13c40:	cmp	sl, #2
   13c44:	movne	r5, #0
   13c48:	andeq	r5, r5, #1
   13c4c:	cmp	r5, #0
   13c50:	bne	13e04 <strspn@plt+0x2f70>
   13c54:	ldr	r3, [sp, #68]	; 0x44
   13c58:	cmp	sl, #2
   13c5c:	orreq	r3, r3, #1
   13c60:	eor	r3, r3, #1
   13c64:	ldr	r2, [sp, #32]
   13c68:	orr	r3, r2, r3
   13c6c:	tst	r3, #255	; 0xff
   13c70:	beq	13ca0 <strspn@plt+0x2e0c>
   13c74:	ldr	r3, [sp, #160]	; 0xa0
   13c78:	cmp	r3, #0
   13c7c:	beq	13ca0 <strspn@plt+0x2e0c>
   13c80:	lsr	r2, r4, #5
   13c84:	uxtb	r2, r2
   13c88:	and	r3, r4, #31
   13c8c:	ldr	r1, [sp, #160]	; 0xa0
   13c90:	ldr	r2, [r1, r2, lsl #2]
   13c94:	lsr	r3, r2, r3
   13c98:	tst	r3, #1
   13c9c:	bne	13cac <strspn@plt+0x2e18>
   13ca0:	ldr	r3, [sp, #56]	; 0x38
   13ca4:	cmp	r3, #0
   13ca8:	beq	13b38 <strspn@plt+0x2ca4>
   13cac:	ldr	r3, [sp, #32]
   13cb0:	cmp	r3, #0
   13cb4:	bne	144c0 <strspn@plt+0x362c>
   13cb8:	ldr	r3, [sp, #44]	; 0x2c
   13cbc:	eor	r3, r3, #1
   13cc0:	cmp	sl, #2
   13cc4:	movne	r3, #0
   13cc8:	andeq	r3, r3, #1
   13ccc:	cmp	r3, #0
   13cd0:	beq	13d14 <strspn@plt+0x2e80>
   13cd4:	cmp	r7, fp
   13cd8:	ldrhi	r2, [sp, #36]	; 0x24
   13cdc:	movhi	r1, #39	; 0x27
   13ce0:	strbhi	r1, [r2, fp]
   13ce4:	add	r2, fp, #1
   13ce8:	cmp	r7, r2
   13cec:	ldrhi	r1, [sp, #36]	; 0x24
   13cf0:	movhi	r0, #36	; 0x24
   13cf4:	strbhi	r0, [r1, r2]
   13cf8:	add	r2, fp, #2
   13cfc:	cmp	r7, r2
   13d00:	ldrhi	r1, [sp, #36]	; 0x24
   13d04:	movhi	r0, #39	; 0x27
   13d08:	strbhi	r0, [r1, r2]
   13d0c:	add	fp, fp, #3
   13d10:	str	r3, [sp, #44]	; 0x2c
   13d14:	cmp	r7, fp
   13d18:	ldrhi	r3, [sp, #36]	; 0x24
   13d1c:	movhi	r2, #92	; 0x5c
   13d20:	strbhi	r2, [r3, fp]
   13d24:	add	fp, fp, #1
   13d28:	cmp	fp, r7
   13d2c:	ldrcc	r3, [sp, #36]	; 0x24
   13d30:	strbcc	r4, [r3, fp]
   13d34:	add	fp, fp, #1
   13d38:	ldr	r3, [sp, #40]	; 0x28
   13d3c:	cmp	r8, #0
   13d40:	moveq	r3, #0
   13d44:	str	r3, [sp, #40]	; 0x28
   13d48:	add	r6, r6, #1
   13d4c:	ldr	r3, [sp, #28]
   13d50:	cmn	r3, #1
   13d54:	beq	142e0 <strspn@plt+0x344c>
   13d58:	ldr	r3, [sp, #28]
   13d5c:	subs	r8, r3, r6
   13d60:	movne	r8, #1
   13d64:	cmp	r8, #0
   13d68:	beq	142f4 <strspn@plt+0x3460>
   13d6c:	ldr	r5, [sp, #48]	; 0x30
   13d70:	cmp	sl, #2
   13d74:	moveq	r5, #0
   13d78:	andne	r5, r5, #1
   13d7c:	ldr	r3, [sp, #60]	; 0x3c
   13d80:	adds	r9, r3, #0
   13d84:	movne	r9, #1
   13d88:	ands	r2, r5, r9
   13d8c:	str	r2, [sp, #56]	; 0x38
   13d90:	beq	13658 <strspn@plt+0x27c4>
   13d94:	add	r4, r6, r3
   13d98:	ldr	r2, [sp, #28]
   13d9c:	cmp	r3, #1
   13da0:	movls	r3, #0
   13da4:	movhi	r3, #1
   13da8:	cmn	r2, #1
   13dac:	movne	r3, #0
   13db0:	cmp	r3, #0
   13db4:	beq	13dc4 <strspn@plt+0x2f30>
   13db8:	ldr	r0, [sp, #52]	; 0x34
   13dbc:	bl	10dc8 <strlen@plt>
   13dc0:	str	r0, [sp, #28]
   13dc4:	ldr	r3, [sp, #28]
   13dc8:	cmp	r3, r4
   13dcc:	bcc	13650 <strspn@plt+0x27bc>
   13dd0:	ldr	r2, [sp, #60]	; 0x3c
   13dd4:	ldr	r1, [sp, #72]	; 0x48
   13dd8:	ldr	r3, [sp, #52]	; 0x34
   13ddc:	add	r0, r3, r6
   13de0:	bl	10cb4 <memcmp@plt>
   13de4:	cmp	r0, #0
   13de8:	bne	13870 <strspn@plt+0x29dc>
   13dec:	ldr	r3, [sp, #32]
   13df0:	cmp	r3, #0
   13df4:	beq	13658 <strspn@plt+0x27c4>
   13df8:	mov	r8, sl
   13dfc:	mov	sl, r7
   13e00:	b	14450 <strspn@plt+0x35bc>
   13e04:	mov	r8, sl
   13e08:	mov	sl, r7
   13e0c:	b	14450 <strspn@plt+0x35bc>
   13e10:	cmp	sl, #2
   13e14:	strne	r8, [sp, #80]	; 0x50
   13e18:	movne	r5, #0
   13e1c:	bne	13c54 <strspn@plt+0x2dc0>
   13e20:	ldr	r3, [sp, #32]
   13e24:	cmp	r3, #0
   13e28:	bne	1443c <strspn@plt+0x35a8>
   13e2c:	ldr	r2, [sp, #76]	; 0x4c
   13e30:	adds	r3, r7, #0
   13e34:	movne	r3, #1
   13e38:	cmp	r2, #0
   13e3c:	movne	r3, #0
   13e40:	cmp	r3, #0
   13e44:	movne	r3, #0
   13e48:	bne	13e78 <strspn@plt+0x2fe4>
   13e4c:	cmp	r7, fp
   13e50:	ldrhi	r3, [sp, #36]	; 0x24
   13e54:	movhi	r2, #39	; 0x27
   13e58:	strbhi	r2, [r3, fp]
   13e5c:	add	r3, fp, #1
   13e60:	cmp	r7, r3
   13e64:	ldrhi	r2, [sp, #36]	; 0x24
   13e68:	movhi	r1, #92	; 0x5c
   13e6c:	strbhi	r1, [r2, r3]
   13e70:	mov	r3, r7
   13e74:	ldr	r7, [sp, #76]	; 0x4c
   13e78:	add	r2, fp, #2
   13e7c:	cmp	r2, r3
   13e80:	ldrcc	r1, [sp, #36]	; 0x24
   13e84:	movcc	r0, #39	; 0x27
   13e88:	strbcc	r0, [r1, r2]
   13e8c:	add	fp, fp, #3
   13e90:	ldr	r2, [sp, #32]
   13e94:	mov	r5, r2
   13e98:	str	r8, [sp, #80]	; 0x50
   13e9c:	str	r2, [sp, #44]	; 0x2c
   13ea0:	str	r7, [sp, #76]	; 0x4c
   13ea4:	mov	r7, r3
   13ea8:	b	13c54 <strspn@plt+0x2dc0>
   13eac:	ldr	r5, [sp, #84]	; 0x54
   13eb0:	cmp	r5, #1
   13eb4:	beq	13ee4 <strspn@plt+0x3050>
   13eb8:	mov	r3, #0
   13ebc:	str	r3, [sp, #104]	; 0x68
   13ec0:	str	r3, [sp, #108]	; 0x6c
   13ec4:	ldr	r3, [sp, #28]
   13ec8:	cmn	r3, #1
   13ecc:	beq	13f18 <strspn@plt+0x3084>
   13ed0:	mov	r3, #0
   13ed4:	str	r4, [sp, #88]	; 0x58
   13ed8:	str	fp, [sp, #92]	; 0x5c
   13edc:	mov	fp, r3
   13ee0:	b	14040 <strspn@plt+0x31ac>
   13ee4:	bl	10da4 <__ctype_b_loc@plt>
   13ee8:	ldr	r2, [r0]
   13eec:	lsl	r3, r4, #1
   13ef0:	ldrh	r8, [r2, r3]
   13ef4:	lsr	r8, r8, #14
   13ef8:	and	r8, r8, #1
   13efc:	mov	r2, r5
   13f00:	eor	r5, r8, #1
   13f04:	ldr	r3, [sp, #48]	; 0x30
   13f08:	and	r5, r5, r3
   13f0c:	ands	r5, r5, #255	; 0xff
   13f10:	beq	13c54 <strspn@plt+0x2dc0>
   13f14:	b	140d8 <strspn@plt+0x3244>
   13f18:	ldr	r0, [sp, #52]	; 0x34
   13f1c:	bl	10dc8 <strlen@plt>
   13f20:	str	r0, [sp, #28]
   13f24:	b	13ed0 <strspn@plt+0x303c>
   13f28:	mov	r2, fp
   13f2c:	mov	r1, r4
   13f30:	ldr	r4, [sp, #88]	; 0x58
   13f34:	ldr	fp, [sp, #92]	; 0x5c
   13f38:	ldr	r0, [sp, #28]
   13f3c:	cmp	r0, r5
   13f40:	bls	1410c <strspn@plt+0x3278>
   13f44:	ldrb	r3, [r1]
   13f48:	cmp	r3, #0
   13f4c:	beq	14114 <strspn@plt+0x3280>
   13f50:	mov	r3, r1
   13f54:	add	r2, r2, #1
   13f58:	add	r1, r6, r2
   13f5c:	cmp	r0, r1
   13f60:	bls	1411c <strspn@plt+0x3288>
   13f64:	ldrb	r1, [r3, #1]!
   13f68:	cmp	r1, #0
   13f6c:	bne	13f54 <strspn@plt+0x30c0>
   13f70:	mov	r8, #0
   13f74:	b	140d0 <strspn@plt+0x323c>
   13f78:	cmp	r4, r5
   13f7c:	beq	1401c <strspn@plt+0x3188>
   13f80:	ldrb	r3, [r4, #1]!
   13f84:	sub	r3, r3, #91	; 0x5b
   13f88:	cmp	r3, #33	; 0x21
   13f8c:	ldrls	pc, [pc, r3, lsl #2]
   13f90:	b	13f78 <strspn@plt+0x30e4>
   13f94:	andeq	r4, r1, r8, asr #8
   13f98:	andeq	r4, r1, r8, asr #8
   13f9c:	andeq	r3, r1, r8, ror pc
   13fa0:	andeq	r4, r1, r8, asr #8
   13fa4:	andeq	r3, r1, r8, ror pc
   13fa8:	andeq	r4, r1, r8, asr #8
   13fac:	andeq	r3, r1, r8, ror pc
   13fb0:	andeq	r3, r1, r8, ror pc
   13fb4:	andeq	r3, r1, r8, ror pc
   13fb8:	andeq	r3, r1, r8, ror pc
   13fbc:	andeq	r3, r1, r8, ror pc
   13fc0:	andeq	r3, r1, r8, ror pc
   13fc4:	andeq	r3, r1, r8, ror pc
   13fc8:	andeq	r3, r1, r8, ror pc
   13fcc:	andeq	r3, r1, r8, ror pc
   13fd0:	andeq	r3, r1, r8, ror pc
   13fd4:	andeq	r3, r1, r8, ror pc
   13fd8:	andeq	r3, r1, r8, ror pc
   13fdc:	andeq	r3, r1, r8, ror pc
   13fe0:	andeq	r3, r1, r8, ror pc
   13fe4:	andeq	r3, r1, r8, ror pc
   13fe8:	andeq	r3, r1, r8, ror pc
   13fec:	andeq	r3, r1, r8, ror pc
   13ff0:	andeq	r3, r1, r8, ror pc
   13ff4:	andeq	r3, r1, r8, ror pc
   13ff8:	andeq	r3, r1, r8, ror pc
   13ffc:	andeq	r3, r1, r8, ror pc
   14000:	andeq	r3, r1, r8, ror pc
   14004:	andeq	r3, r1, r8, ror pc
   14008:	andeq	r3, r1, r8, ror pc
   1400c:	andeq	r3, r1, r8, ror pc
   14010:	andeq	r3, r1, r8, ror pc
   14014:	andeq	r3, r1, r8, ror pc
   14018:	andeq	r4, r1, r8, asr #8
   1401c:	ldr	r0, [sp, #100]	; 0x64
   14020:	bl	10cfc <iswprint@plt>
   14024:	cmp	r0, #0
   14028:	moveq	r8, #0
   1402c:	add	fp, fp, r9
   14030:	add	r0, sp, #104	; 0x68
   14034:	bl	10ca8 <mbsinit@plt>
   14038:	cmp	r0, #0
   1403c:	bne	140b0 <strspn@plt+0x321c>
   14040:	add	r5, r6, fp
   14044:	ldr	r3, [sp, #52]	; 0x34
   14048:	add	r4, r3, r5
   1404c:	add	r3, sp, #104	; 0x68
   14050:	ldr	r2, [sp, #28]
   14054:	sub	r2, r2, r5
   14058:	mov	r1, r4
   1405c:	add	r0, sp, #100	; 0x64
   14060:	bl	15d04 <strspn@plt+0x4e70>
   14064:	subs	r9, r0, #0
   14068:	beq	14124 <strspn@plt+0x3290>
   1406c:	cmn	r9, #1
   14070:	beq	140c0 <strspn@plt+0x322c>
   14074:	cmn	r9, #2
   14078:	beq	13f28 <strspn@plt+0x3094>
   1407c:	ldr	r3, [sp, #32]
   14080:	cmp	sl, #2
   14084:	movne	r3, #0
   14088:	andeq	r3, r3, #1
   1408c:	cmp	r3, #0
   14090:	beq	1401c <strspn@plt+0x3188>
   14094:	cmp	r9, #1
   14098:	bls	1401c <strspn@plt+0x3188>
   1409c:	sub	r3, r9, #1
   140a0:	add	r5, r3, r5
   140a4:	ldr	r3, [sp, #52]	; 0x34
   140a8:	add	r5, r3, r5
   140ac:	b	13f80 <strspn@plt+0x30ec>
   140b0:	ldr	r4, [sp, #88]	; 0x58
   140b4:	mov	r2, fp
   140b8:	ldr	fp, [sp, #92]	; 0x5c
   140bc:	b	140d0 <strspn@plt+0x323c>
   140c0:	ldr	r4, [sp, #88]	; 0x58
   140c4:	mov	r2, fp
   140c8:	ldr	fp, [sp, #92]	; 0x5c
   140cc:	mov	r8, #0
   140d0:	cmp	r2, #1
   140d4:	bls	13f00 <strspn@plt+0x306c>
   140d8:	add	r1, r6, r2
   140dc:	ldr	ip, [sp, #64]	; 0x40
   140e0:	mov	r5, #0
   140e4:	eor	r3, r8, #1
   140e8:	ldr	r2, [sp, #48]	; 0x30
   140ec:	and	r3, r3, r2
   140f0:	uxtb	r3, r3
   140f4:	ldr	r9, [sp, #32]
   140f8:	ldr	lr, [sp, #44]	; 0x2c
   140fc:	ldr	r2, [sp, #56]	; 0x38
   14100:	str	r8, [sp, #56]	; 0x38
   14104:	ldr	r0, [sp, #36]	; 0x24
   14108:	b	141a4 <strspn@plt+0x3310>
   1410c:	mov	r8, #0
   14110:	b	140d0 <strspn@plt+0x323c>
   14114:	mov	r8, #0
   14118:	b	140d0 <strspn@plt+0x323c>
   1411c:	mov	r8, #0
   14120:	b	140d0 <strspn@plt+0x323c>
   14124:	ldr	r4, [sp, #88]	; 0x58
   14128:	mov	r2, fp
   1412c:	ldr	fp, [sp, #92]	; 0x5c
   14130:	b	140d0 <strspn@plt+0x323c>
   14134:	cmp	r2, #0
   14138:	beq	1414c <strspn@plt+0x32b8>
   1413c:	cmp	r7, fp
   14140:	movhi	r2, #92	; 0x5c
   14144:	strbhi	r2, [r0, fp]
   14148:	add	fp, fp, #1
   1414c:	add	r8, r6, #1
   14150:	cmp	r1, r8
   14154:	bls	1425c <strspn@plt+0x33c8>
   14158:	eor	r2, r5, #1
   1415c:	and	r2, r2, lr
   14160:	ands	r2, r2, #255	; 0xff
   14164:	beq	14278 <strspn@plt+0x33e4>
   14168:	cmp	r7, fp
   1416c:	movhi	r2, #39	; 0x27
   14170:	strbhi	r2, [r0, fp]
   14174:	add	r2, fp, #1
   14178:	cmp	r7, r2
   1417c:	movhi	lr, #39	; 0x27
   14180:	strbhi	lr, [r0, r2]
   14184:	add	fp, fp, #2
   14188:	mov	r6, r8
   1418c:	mov	r2, r3
   14190:	mov	lr, r3
   14194:	cmp	r7, fp
   14198:	strbhi	r4, [r0, fp]
   1419c:	add	fp, fp, #1
   141a0:	ldrb	r4, [ip, #1]!
   141a4:	cmp	r3, #0
   141a8:	beq	14134 <strspn@plt+0x32a0>
   141ac:	cmp	r9, #0
   141b0:	bne	144b4 <strspn@plt+0x3620>
   141b4:	eor	r5, lr, #1
   141b8:	cmp	sl, #2
   141bc:	movne	r5, #0
   141c0:	andeq	r5, r5, #1
   141c4:	cmp	r5, #0
   141c8:	beq	14200 <strspn@plt+0x336c>
   141cc:	cmp	r7, fp
   141d0:	movhi	lr, #39	; 0x27
   141d4:	strbhi	lr, [r0, fp]
   141d8:	add	lr, fp, #1
   141dc:	cmp	r7, lr
   141e0:	movhi	r8, #36	; 0x24
   141e4:	strbhi	r8, [r0, lr]
   141e8:	add	lr, fp, #2
   141ec:	cmp	r7, lr
   141f0:	movhi	r8, #39	; 0x27
   141f4:	strbhi	r8, [r0, lr]
   141f8:	add	fp, fp, #3
   141fc:	mov	lr, r5
   14200:	cmp	r7, fp
   14204:	movhi	r5, #92	; 0x5c
   14208:	strbhi	r5, [r0, fp]
   1420c:	add	r5, fp, #1
   14210:	cmp	r7, r5
   14214:	lsrhi	r8, r4, #6
   14218:	addhi	r8, r8, #48	; 0x30
   1421c:	strbhi	r8, [r0, r5]
   14220:	add	r8, fp, #2
   14224:	cmp	r7, r8
   14228:	lsrhi	r5, r4, #3
   1422c:	andhi	r5, r5, #7
   14230:	addhi	r5, r5, #48	; 0x30
   14234:	strbhi	r5, [r0, r8]
   14238:	add	fp, fp, #3
   1423c:	and	r4, r4, #7
   14240:	add	r4, r4, #48	; 0x30
   14244:	add	r5, r6, #1
   14248:	cmp	r1, r5
   1424c:	bls	14268 <strspn@plt+0x33d4>
   14250:	mov	r6, r5
   14254:	mov	r5, r3
   14258:	b	14194 <strspn@plt+0x3300>
   1425c:	str	lr, [sp, #44]	; 0x2c
   14260:	ldr	r8, [sp, #56]	; 0x38
   14264:	b	13b38 <strspn@plt+0x2ca4>
   14268:	str	lr, [sp, #44]	; 0x2c
   1426c:	ldr	r8, [sp, #56]	; 0x38
   14270:	mov	r5, r3
   14274:	b	13b38 <strspn@plt+0x2ca4>
   14278:	mov	r6, r8
   1427c:	b	14194 <strspn@plt+0x3300>
   14280:	mov	r5, #0
   14284:	b	13c54 <strspn@plt+0x2dc0>
   14288:	mov	r8, r5
   1428c:	ldr	r5, [sp, #48]	; 0x30
   14290:	mov	r4, #48	; 0x30
   14294:	b	13c54 <strspn@plt+0x2dc0>
   14298:	ldr	r8, [sp, #32]
   1429c:	mov	r4, #48	; 0x30
   142a0:	b	13c54 <strspn@plt+0x2dc0>
   142a4:	ldr	r8, [sp, #32]
   142a8:	mov	r4, #48	; 0x30
   142ac:	b	13c54 <strspn@plt+0x2dc0>
   142b0:	mov	r8, #0
   142b4:	mov	r5, r8
   142b8:	b	13c54 <strspn@plt+0x2dc0>
   142bc:	mov	r8, #0
   142c0:	mov	r5, r8
   142c4:	b	13c54 <strspn@plt+0x2dc0>
   142c8:	mov	r8, #0
   142cc:	mov	r5, r8
   142d0:	b	13c54 <strspn@plt+0x2dc0>
   142d4:	mov	r8, #0
   142d8:	mov	r5, r8
   142dc:	b	13c54 <strspn@plt+0x2dc0>
   142e0:	ldr	r3, [sp, #52]	; 0x34
   142e4:	ldrb	r8, [r3, r6]
   142e8:	adds	r8, r8, #0
   142ec:	movne	r8, #1
   142f0:	b	13d64 <strspn@plt+0x2ed0>
   142f4:	cmp	sl, #2
   142f8:	movne	r3, #0
   142fc:	moveq	r3, #1
   14300:	ldr	r1, [sp, #32]
   14304:	mov	r2, r1
   14308:	and	r2, r2, r3
   1430c:	cmp	fp, #0
   14310:	movne	r2, #0
   14314:	andeq	r2, r2, #1
   14318:	cmp	r2, #0
   1431c:	bne	144cc <strspn@plt+0x3638>
   14320:	eor	r2, r1, #1
   14324:	and	r3, r3, r2
   14328:	ldr	r1, [sp, #80]	; 0x50
   1432c:	tst	r1, r3
   14330:	beq	143a8 <strspn@plt+0x3514>
   14334:	ldr	r3, [sp, #40]	; 0x28
   14338:	cmp	r3, #0
   1433c:	bne	14364 <strspn@plt+0x34d0>
   14340:	ldr	r1, [sp, #76]	; 0x4c
   14344:	clz	r3, r7
   14348:	lsr	r3, r3, #5
   1434c:	cmp	r1, #0
   14350:	moveq	r3, #0
   14354:	cmp	r3, #0
   14358:	beq	143a8 <strspn@plt+0x3514>
   1435c:	ldr	r7, [sp, #76]	; 0x4c
   14360:	b	133f8 <strspn@plt+0x2564>
   14364:	ldr	r3, [sp, #168]	; 0xa8
   14368:	str	r3, [sp, #16]
   1436c:	ldr	r3, [sp, #164]	; 0xa4
   14370:	str	r3, [sp, #12]
   14374:	ldr	r3, [sp, #160]	; 0xa0
   14378:	str	r3, [sp, #8]
   1437c:	ldr	r3, [sp, #156]	; 0x9c
   14380:	str	r3, [sp, #4]
   14384:	mov	r3, #5
   14388:	str	r3, [sp]
   1438c:	ldr	r3, [sp, #28]
   14390:	ldr	r2, [sp, #52]	; 0x34
   14394:	ldr	r1, [sp, #76]	; 0x4c
   14398:	ldr	r0, [sp, #36]	; 0x24
   1439c:	bl	13398 <strspn@plt+0x2504>
   143a0:	mov	fp, r0
   143a4:	b	144a8 <strspn@plt+0x3614>
   143a8:	mov	sl, r7
   143ac:	ldr	r3, [sp, #72]	; 0x48
   143b0:	cmp	r3, #0
   143b4:	moveq	r2, #0
   143b8:	andne	r2, r2, #1
   143bc:	cmp	r2, #0
   143c0:	beq	143f0 <strspn@plt+0x355c>
   143c4:	mov	r2, r3
   143c8:	ldrb	r3, [r3]
   143cc:	cmp	r3, #0
   143d0:	beq	143f0 <strspn@plt+0x355c>
   143d4:	ldr	r1, [sp, #36]	; 0x24
   143d8:	cmp	sl, fp
   143dc:	strbhi	r3, [r1, fp]
   143e0:	add	fp, fp, #1
   143e4:	ldrb	r3, [r2, #1]!
   143e8:	cmp	r3, #0
   143ec:	bne	143d8 <strspn@plt+0x3544>
   143f0:	cmp	sl, fp
   143f4:	movhi	r3, #0
   143f8:	ldrhi	r2, [sp, #36]	; 0x24
   143fc:	strbhi	r3, [r2, fp]
   14400:	b	144a8 <strspn@plt+0x3614>
   14404:	mov	r8, sl
   14408:	mov	sl, r7
   1440c:	ldr	r3, [sp, #32]
   14410:	str	r3, [sp, #48]	; 0x30
   14414:	b	14450 <strspn@plt+0x35bc>
   14418:	mov	r8, sl
   1441c:	mov	sl, r7
   14420:	b	14450 <strspn@plt+0x35bc>
   14424:	mov	r8, sl
   14428:	mov	sl, r7
   1442c:	b	14450 <strspn@plt+0x35bc>
   14430:	andeq	r6, r1, ip, lsr #28
   14434:	andeq	r6, r1, ip, lsr lr
   14438:	andeq	r6, r1, r0, lsr lr
   1443c:	mov	r8, sl
   14440:	mov	sl, r7
   14444:	b	14450 <strspn@plt+0x35bc>
   14448:	mov	r8, sl
   1444c:	mov	sl, r7
   14450:	ldr	r3, [sp, #48]	; 0x30
   14454:	cmp	r8, #2
   14458:	movne	r3, #0
   1445c:	andeq	r3, r3, #1
   14460:	cmp	r3, #0
   14464:	movne	r8, #4
   14468:	ldr	r3, [sp, #168]	; 0xa8
   1446c:	str	r3, [sp, #16]
   14470:	ldr	r3, [sp, #164]	; 0xa4
   14474:	str	r3, [sp, #12]
   14478:	mov	r3, #0
   1447c:	str	r3, [sp, #8]
   14480:	ldr	r3, [sp, #156]	; 0x9c
   14484:	bic	r3, r3, #2
   14488:	str	r3, [sp, #4]
   1448c:	str	r8, [sp]
   14490:	ldr	r3, [sp, #28]
   14494:	ldr	r2, [sp, #52]	; 0x34
   14498:	mov	r1, sl
   1449c:	ldr	r0, [sp, #36]	; 0x24
   144a0:	bl	13398 <strspn@plt+0x2504>
   144a4:	mov	fp, r0
   144a8:	mov	r0, fp
   144ac:	add	sp, sp, #116	; 0x74
   144b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   144b4:	mov	r8, sl
   144b8:	mov	sl, r7
   144bc:	b	14450 <strspn@plt+0x35bc>
   144c0:	mov	r8, sl
   144c4:	mov	sl, r7
   144c8:	b	14450 <strspn@plt+0x35bc>
   144cc:	mov	r8, sl
   144d0:	mov	sl, r7
   144d4:	b	14450 <strspn@plt+0x35bc>
   144d8:	mov	r8, sl
   144dc:	mov	sl, r7
   144e0:	b	14468 <strspn@plt+0x35d4>
   144e4:	mov	r3, #1
   144e8:	str	r3, [sp, #32]
   144ec:	str	r3, [sp, #48]	; 0x30
   144f0:	str	r3, [sp, #60]	; 0x3c
   144f4:	ldr	r3, [pc, #-196]	; 14438 <strspn@plt+0x35a4>
   144f8:	str	r3, [sp, #72]	; 0x48
   144fc:	mov	fp, #0
   14500:	mov	sl, #5
   14504:	b	13454 <strspn@plt+0x25c0>
   14508:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1450c:	sub	sp, sp, #52	; 0x34
   14510:	mov	r5, r0
   14514:	str	r1, [sp, #24]
   14518:	str	r2, [sp, #28]
   1451c:	mov	r4, r3
   14520:	bl	10dd4 <__errno_location@plt>
   14524:	str	r0, [sp, #32]
   14528:	ldr	r3, [r0]
   1452c:	str	r3, [sp, #36]	; 0x24
   14530:	ldr	r3, [pc, #396]	; 146c4 <strspn@plt+0x3830>
   14534:	ldr	r6, [r3]
   14538:	cmn	r5, #-2147483647	; 0x80000001
   1453c:	movne	r3, #0
   14540:	moveq	r3, #1
   14544:	orrs	r3, r3, r5, lsr #31
   14548:	bne	14688 <strspn@plt+0x37f4>
   1454c:	ldr	r3, [pc, #368]	; 146c4 <strspn@plt+0x3830>
   14550:	ldr	r2, [r3, #4]
   14554:	cmp	r5, r2
   14558:	blt	145c0 <strspn@plt+0x372c>
   1455c:	str	r2, [sp, #44]	; 0x2c
   14560:	add	r3, r3, #8
   14564:	cmp	r6, r3
   14568:	beq	1468c <strspn@plt+0x37f8>
   1456c:	sub	r2, r5, r2
   14570:	mov	r3, #8
   14574:	str	r3, [sp]
   14578:	mvn	r3, #-2147483648	; 0x80000000
   1457c:	add	r2, r2, #1
   14580:	add	r1, sp, #44	; 0x2c
   14584:	mov	r0, r6
   14588:	bl	15560 <strspn@plt+0x46cc>
   1458c:	mov	r6, r0
   14590:	ldr	r3, [pc, #300]	; 146c4 <strspn@plt+0x3830>
   14594:	str	r0, [r3]
   14598:	ldr	r7, [pc, #292]	; 146c4 <strspn@plt+0x3830>
   1459c:	ldr	r0, [r7, #4]
   145a0:	ldr	r2, [sp, #44]	; 0x2c
   145a4:	sub	r2, r2, r0
   145a8:	lsl	r2, r2, #3
   145ac:	mov	r1, #0
   145b0:	add	r0, r6, r0, lsl #3
   145b4:	bl	10dec <memset@plt>
   145b8:	ldr	r3, [sp, #44]	; 0x2c
   145bc:	str	r3, [r7, #4]
   145c0:	add	fp, r6, r5, lsl #3
   145c4:	ldr	r8, [r6, r5, lsl #3]
   145c8:	ldr	r7, [fp, #4]
   145cc:	ldr	r9, [r4, #4]
   145d0:	orr	r9, r9, #1
   145d4:	add	sl, r4, #8
   145d8:	ldr	r3, [r4, #44]	; 0x2c
   145dc:	str	r3, [sp, #16]
   145e0:	ldr	r3, [r4, #40]	; 0x28
   145e4:	str	r3, [sp, #12]
   145e8:	str	sl, [sp, #8]
   145ec:	str	r9, [sp, #4]
   145f0:	ldr	r3, [r4]
   145f4:	str	r3, [sp]
   145f8:	ldr	r3, [sp, #28]
   145fc:	ldr	r2, [sp, #24]
   14600:	mov	r1, r8
   14604:	mov	r0, r7
   14608:	bl	13398 <strspn@plt+0x2504>
   1460c:	cmp	r8, r0
   14610:	bhi	14670 <strspn@plt+0x37dc>
   14614:	add	r8, r0, #1
   14618:	str	r8, [r6, r5, lsl #3]
   1461c:	ldr	r3, [pc, #164]	; 146c8 <strspn@plt+0x3834>
   14620:	cmp	r7, r3
   14624:	beq	14630 <strspn@plt+0x379c>
   14628:	mov	r0, r7
   1462c:	bl	120ec <strspn@plt+0x1258>
   14630:	mov	r0, r8
   14634:	bl	153dc <strspn@plt+0x4548>
   14638:	mov	r7, r0
   1463c:	str	r0, [fp, #4]
   14640:	ldr	r3, [r4, #44]	; 0x2c
   14644:	str	r3, [sp, #16]
   14648:	ldr	r3, [r4, #40]	; 0x28
   1464c:	str	r3, [sp, #12]
   14650:	str	sl, [sp, #8]
   14654:	str	r9, [sp, #4]
   14658:	ldr	r3, [r4]
   1465c:	str	r3, [sp]
   14660:	ldr	r3, [sp, #28]
   14664:	ldr	r2, [sp, #24]
   14668:	mov	r1, r8
   1466c:	bl	13398 <strspn@plt+0x2504>
   14670:	ldr	r3, [sp, #32]
   14674:	ldr	r2, [sp, #36]	; 0x24
   14678:	str	r2, [r3]
   1467c:	mov	r0, r7
   14680:	add	sp, sp, #52	; 0x34
   14684:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14688:	bl	10e88 <abort@plt>
   1468c:	sub	r2, r5, r2
   14690:	mov	r3, #8
   14694:	str	r3, [sp]
   14698:	mvn	r3, #-2147483648	; 0x80000000
   1469c:	add	r2, r2, #1
   146a0:	add	r1, sp, #44	; 0x2c
   146a4:	mov	r0, #0
   146a8:	bl	15560 <strspn@plt+0x46cc>
   146ac:	mov	r6, r0
   146b0:	ldr	r3, [pc, #12]	; 146c4 <strspn@plt+0x3830>
   146b4:	str	r0, [r3], #8
   146b8:	ldm	r3, {r0, r1}
   146bc:	stm	r6, {r0, r1}
   146c0:	b	14598 <strspn@plt+0x3704>
   146c4:	strdeq	r8, [r2], -r0
   146c8:	andeq	r8, r2, r8, asr r1
   146cc:	push	{r4, r5, r6, lr}
   146d0:	mov	r4, r0
   146d4:	bl	10dd4 <__errno_location@plt>
   146d8:	mov	r5, r0
   146dc:	ldr	r6, [r0]
   146e0:	cmp	r4, #0
   146e4:	ldr	r3, [pc, #20]	; 14700 <strspn@plt+0x386c>
   146e8:	moveq	r4, r3
   146ec:	mov	r1, #48	; 0x30
   146f0:	mov	r0, r4
   146f4:	bl	158c8 <strspn@plt+0x4a34>
   146f8:	str	r6, [r5]
   146fc:	pop	{r4, r5, r6, pc}
   14700:	andeq	r8, r2, r8, asr r2
   14704:	subs	r3, r0, #0
   14708:	ldr	r2, [pc, #8]	; 14718 <strspn@plt+0x3884>
   1470c:	moveq	r3, r2
   14710:	ldr	r0, [r3]
   14714:	bx	lr
   14718:	andeq	r8, r2, r8, asr r2
   1471c:	subs	r3, r0, #0
   14720:	ldr	r2, [pc, #8]	; 14730 <strspn@plt+0x389c>
   14724:	moveq	r3, r2
   14728:	str	r1, [r3]
   1472c:	bx	lr
   14730:	andeq	r8, r2, r8, asr r2
   14734:	push	{lr}		; (str lr, [sp, #-4]!)
   14738:	subs	r3, r0, #0
   1473c:	ldr	r0, [pc, #44]	; 14770 <strspn@plt+0x38dc>
   14740:	moveq	r3, r0
   14744:	add	r3, r3, #8
   14748:	lsr	lr, r1, #5
   1474c:	and	r1, r1, #31
   14750:	ldr	ip, [r3, lr, lsl #2]
   14754:	lsr	r0, ip, r1
   14758:	eor	r2, r2, r0
   1475c:	and	r2, r2, #1
   14760:	eor	r1, ip, r2, lsl r1
   14764:	str	r1, [r3, lr, lsl #2]
   14768:	and	r0, r0, #1
   1476c:	pop	{pc}		; (ldr pc, [sp], #4)
   14770:	andeq	r8, r2, r8, asr r2
   14774:	subs	r3, r0, #0
   14778:	ldr	r2, [pc, #12]	; 1478c <strspn@plt+0x38f8>
   1477c:	moveq	r3, r2
   14780:	ldr	r0, [r3, #4]
   14784:	str	r1, [r3, #4]
   14788:	bx	lr
   1478c:	andeq	r8, r2, r8, asr r2
   14790:	subs	r3, r0, #0
   14794:	ldr	r0, [pc, #40]	; 147c4 <strspn@plt+0x3930>
   14798:	moveq	r3, r0
   1479c:	mov	r0, #10
   147a0:	str	r0, [r3]
   147a4:	cmp	r2, #0
   147a8:	cmpne	r1, #0
   147ac:	beq	147bc <strspn@plt+0x3928>
   147b0:	str	r1, [r3, #40]	; 0x28
   147b4:	str	r2, [r3, #44]	; 0x2c
   147b8:	bx	lr
   147bc:	push	{r4, lr}
   147c0:	bl	10e88 <abort@plt>
   147c4:	andeq	r8, r2, r8, asr r2
   147c8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   147cc:	sub	sp, sp, #24
   147d0:	mov	r7, r0
   147d4:	mov	r8, r1
   147d8:	mov	r9, r2
   147dc:	mov	sl, r3
   147e0:	ldr	r4, [sp, #56]	; 0x38
   147e4:	cmp	r4, #0
   147e8:	ldr	r3, [pc, #84]	; 14844 <strspn@plt+0x39b0>
   147ec:	moveq	r4, r3
   147f0:	bl	10dd4 <__errno_location@plt>
   147f4:	mov	r5, r0
   147f8:	ldr	r6, [r0]
   147fc:	ldr	r3, [r4, #44]	; 0x2c
   14800:	str	r3, [sp, #16]
   14804:	ldr	r3, [r4, #40]	; 0x28
   14808:	str	r3, [sp, #12]
   1480c:	add	r3, r4, #8
   14810:	str	r3, [sp, #8]
   14814:	ldr	r3, [r4, #4]
   14818:	str	r3, [sp, #4]
   1481c:	ldr	r3, [r4]
   14820:	str	r3, [sp]
   14824:	mov	r3, sl
   14828:	mov	r2, r9
   1482c:	mov	r1, r8
   14830:	mov	r0, r7
   14834:	bl	13398 <strspn@plt+0x2504>
   14838:	str	r6, [r5]
   1483c:	add	sp, sp, #24
   14840:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14844:	andeq	r8, r2, r8, asr r2
   14848:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1484c:	sub	sp, sp, #44	; 0x2c
   14850:	str	r0, [sp, #28]
   14854:	str	r1, [sp, #32]
   14858:	mov	r6, r2
   1485c:	subs	r4, r3, #0
   14860:	ldr	r3, [pc, #172]	; 14914 <strspn@plt+0x3a80>
   14864:	moveq	r4, r3
   14868:	bl	10dd4 <__errno_location@plt>
   1486c:	mov	r7, r0
   14870:	ldr	fp, [r0]
   14874:	ldr	r5, [r4, #4]
   14878:	cmp	r6, #0
   1487c:	orreq	r5, r5, #1
   14880:	add	r9, r4, #8
   14884:	ldr	r3, [r4, #44]	; 0x2c
   14888:	str	r3, [sp, #16]
   1488c:	ldr	r3, [r4, #40]	; 0x28
   14890:	str	r3, [sp, #12]
   14894:	str	r9, [sp, #8]
   14898:	str	r5, [sp, #4]
   1489c:	ldr	r3, [r4]
   148a0:	str	r3, [sp]
   148a4:	ldr	r3, [sp, #32]
   148a8:	ldr	r2, [sp, #28]
   148ac:	mov	r1, #0
   148b0:	mov	r0, r1
   148b4:	bl	13398 <strspn@plt+0x2504>
   148b8:	mov	sl, r0
   148bc:	add	r8, r0, #1
   148c0:	mov	r0, r8
   148c4:	bl	153dc <strspn@plt+0x4548>
   148c8:	str	r0, [sp, #36]	; 0x24
   148cc:	ldr	r3, [r4, #44]	; 0x2c
   148d0:	str	r3, [sp, #16]
   148d4:	ldr	r3, [r4, #40]	; 0x28
   148d8:	str	r3, [sp, #12]
   148dc:	str	r9, [sp, #8]
   148e0:	str	r5, [sp, #4]
   148e4:	ldr	r3, [r4]
   148e8:	str	r3, [sp]
   148ec:	ldr	r3, [sp, #32]
   148f0:	ldr	r2, [sp, #28]
   148f4:	mov	r1, r8
   148f8:	bl	13398 <strspn@plt+0x2504>
   148fc:	str	fp, [r7]
   14900:	cmp	r6, #0
   14904:	strne	sl, [r6]
   14908:	ldr	r0, [sp, #36]	; 0x24
   1490c:	add	sp, sp, #44	; 0x2c
   14910:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14914:	andeq	r8, r2, r8, asr r2
   14918:	push	{r4, lr}
   1491c:	mov	r3, r2
   14920:	mov	r2, #0
   14924:	bl	14848 <strspn@plt+0x39b4>
   14928:	pop	{r4, pc}
   1492c:	push	{r4, r5, r6, r7, r8, lr}
   14930:	ldr	r3, [pc, #140]	; 149c4 <strspn@plt+0x3b30>
   14934:	ldr	r7, [r3]
   14938:	ldr	r3, [r3, #4]
   1493c:	cmp	r3, #1
   14940:	ble	1496c <strspn@plt+0x3ad8>
   14944:	mov	r5, r7
   14948:	mov	r4, #1
   1494c:	ldr	r6, [pc, #112]	; 149c4 <strspn@plt+0x3b30>
   14950:	ldr	r0, [r5, #12]
   14954:	bl	120ec <strspn@plt+0x1258>
   14958:	add	r4, r4, #1
   1495c:	add	r5, r5, #8
   14960:	ldr	r3, [r6, #4]
   14964:	cmp	r3, r4
   14968:	bgt	14950 <strspn@plt+0x3abc>
   1496c:	ldr	r0, [r7, #4]
   14970:	ldr	r3, [pc, #80]	; 149c8 <strspn@plt+0x3b34>
   14974:	cmp	r0, r3
   14978:	beq	14994 <strspn@plt+0x3b00>
   1497c:	bl	120ec <strspn@plt+0x1258>
   14980:	ldr	r3, [pc, #60]	; 149c4 <strspn@plt+0x3b30>
   14984:	mov	r2, #256	; 0x100
   14988:	str	r2, [r3, #8]
   1498c:	ldr	r2, [pc, #52]	; 149c8 <strspn@plt+0x3b34>
   14990:	str	r2, [r3, #12]
   14994:	ldr	r3, [pc, #48]	; 149cc <strspn@plt+0x3b38>
   14998:	cmp	r7, r3
   1499c:	beq	149b4 <strspn@plt+0x3b20>
   149a0:	mov	r0, r7
   149a4:	bl	120ec <strspn@plt+0x1258>
   149a8:	ldr	r3, [pc, #20]	; 149c4 <strspn@plt+0x3b30>
   149ac:	add	r2, r3, #8
   149b0:	str	r2, [r3]
   149b4:	mov	r2, #1
   149b8:	ldr	r3, [pc, #4]	; 149c4 <strspn@plt+0x3b30>
   149bc:	str	r2, [r3, #4]
   149c0:	pop	{r4, r5, r6, r7, r8, pc}
   149c4:	strdeq	r8, [r2], -r0
   149c8:	andeq	r8, r2, r8, asr r1
   149cc:	strdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   149d0:	push	{r4, lr}
   149d4:	ldr	r3, [pc, #8]	; 149e4 <strspn@plt+0x3b50>
   149d8:	mvn	r2, #0
   149dc:	bl	14508 <strspn@plt+0x3674>
   149e0:	pop	{r4, pc}
   149e4:	andeq	r8, r2, r8, asr r2
   149e8:	push	{r4, lr}
   149ec:	ldr	r3, [pc, #4]	; 149f8 <strspn@plt+0x3b64>
   149f0:	bl	14508 <strspn@plt+0x3674>
   149f4:	pop	{r4, pc}
   149f8:	andeq	r8, r2, r8, asr r2
   149fc:	push	{r4, lr}
   14a00:	mov	r1, r0
   14a04:	mov	r0, #0
   14a08:	bl	149d0 <strspn@plt+0x3b3c>
   14a0c:	pop	{r4, pc}
   14a10:	push	{r4, lr}
   14a14:	mov	r2, r1
   14a18:	mov	r1, r0
   14a1c:	mov	r0, #0
   14a20:	bl	149e8 <strspn@plt+0x3b54>
   14a24:	pop	{r4, pc}
   14a28:	push	{r4, r5, lr}
   14a2c:	sub	sp, sp, #52	; 0x34
   14a30:	mov	r4, r0
   14a34:	mov	r5, r2
   14a38:	mov	r0, sp
   14a3c:	bl	13230 <strspn@plt+0x239c>
   14a40:	mov	r3, sp
   14a44:	mvn	r2, #0
   14a48:	mov	r1, r5
   14a4c:	mov	r0, r4
   14a50:	bl	14508 <strspn@plt+0x3674>
   14a54:	add	sp, sp, #52	; 0x34
   14a58:	pop	{r4, r5, pc}
   14a5c:	push	{r4, r5, r6, lr}
   14a60:	sub	sp, sp, #48	; 0x30
   14a64:	mov	r4, r0
   14a68:	mov	r5, r2
   14a6c:	mov	r6, r3
   14a70:	mov	r0, sp
   14a74:	bl	13230 <strspn@plt+0x239c>
   14a78:	mov	r3, sp
   14a7c:	mov	r2, r6
   14a80:	mov	r1, r5
   14a84:	mov	r0, r4
   14a88:	bl	14508 <strspn@plt+0x3674>
   14a8c:	add	sp, sp, #48	; 0x30
   14a90:	pop	{r4, r5, r6, pc}
   14a94:	push	{r4, lr}
   14a98:	mov	r2, r1
   14a9c:	mov	r1, r0
   14aa0:	mov	r0, #0
   14aa4:	bl	14a28 <strspn@plt+0x3b94>
   14aa8:	pop	{r4, pc}
   14aac:	push	{r4, lr}
   14ab0:	mov	r3, r2
   14ab4:	mov	r2, r1
   14ab8:	mov	r1, r0
   14abc:	mov	r0, #0
   14ac0:	bl	14a5c <strspn@plt+0x3bc8>
   14ac4:	pop	{r4, pc}
   14ac8:	push	{r4, r5, r6, lr}
   14acc:	sub	sp, sp, #48	; 0x30
   14ad0:	mov	r4, r0
   14ad4:	mov	r5, r1
   14ad8:	mov	r6, r2
   14adc:	mov	ip, sp
   14ae0:	ldr	lr, [pc, #64]	; 14b28 <strspn@plt+0x3c94>
   14ae4:	ldm	lr!, {r0, r1, r2, r3}
   14ae8:	stmia	ip!, {r0, r1, r2, r3}
   14aec:	ldm	lr!, {r0, r1, r2, r3}
   14af0:	stmia	ip!, {r0, r1, r2, r3}
   14af4:	ldm	lr, {r0, r1, r2, r3}
   14af8:	stm	ip, {r0, r1, r2, r3}
   14afc:	mov	r2, #1
   14b00:	mov	r1, r6
   14b04:	mov	r0, sp
   14b08:	bl	14734 <strspn@plt+0x38a0>
   14b0c:	mov	r3, sp
   14b10:	mov	r2, r5
   14b14:	mov	r1, r4
   14b18:	mov	r0, #0
   14b1c:	bl	14508 <strspn@plt+0x3674>
   14b20:	add	sp, sp, #48	; 0x30
   14b24:	pop	{r4, r5, r6, pc}
   14b28:	andeq	r8, r2, r8, asr r2
   14b2c:	push	{r4, lr}
   14b30:	mov	r2, r1
   14b34:	mvn	r1, #0
   14b38:	bl	14ac8 <strspn@plt+0x3c34>
   14b3c:	pop	{r4, pc}
   14b40:	push	{r4, lr}
   14b44:	mov	r1, #58	; 0x3a
   14b48:	bl	14b2c <strspn@plt+0x3c98>
   14b4c:	pop	{r4, pc}
   14b50:	push	{r4, lr}
   14b54:	mov	r2, #58	; 0x3a
   14b58:	bl	14ac8 <strspn@plt+0x3c34>
   14b5c:	pop	{r4, pc}
   14b60:	push	{r4, r5, lr}
   14b64:	sub	sp, sp, #100	; 0x64
   14b68:	mov	r4, r0
   14b6c:	mov	r5, r2
   14b70:	mov	r0, sp
   14b74:	bl	13230 <strspn@plt+0x239c>
   14b78:	add	lr, sp, #48	; 0x30
   14b7c:	mov	ip, sp
   14b80:	ldm	ip!, {r0, r1, r2, r3}
   14b84:	stmia	lr!, {r0, r1, r2, r3}
   14b88:	ldm	ip!, {r0, r1, r2, r3}
   14b8c:	stmia	lr!, {r0, r1, r2, r3}
   14b90:	ldm	ip, {r0, r1, r2, r3}
   14b94:	stm	lr, {r0, r1, r2, r3}
   14b98:	mov	r2, #1
   14b9c:	mov	r1, #58	; 0x3a
   14ba0:	add	r0, sp, #48	; 0x30
   14ba4:	bl	14734 <strspn@plt+0x38a0>
   14ba8:	add	r3, sp, #48	; 0x30
   14bac:	mvn	r2, #0
   14bb0:	mov	r1, r5
   14bb4:	mov	r0, r4
   14bb8:	bl	14508 <strspn@plt+0x3674>
   14bbc:	add	sp, sp, #100	; 0x64
   14bc0:	pop	{r4, r5, pc}
   14bc4:	push	{r4, r5, r6, r7, lr}
   14bc8:	sub	sp, sp, #52	; 0x34
   14bcc:	mov	r4, r0
   14bd0:	mov	r6, r1
   14bd4:	mov	r7, r2
   14bd8:	mov	r5, r3
   14bdc:	mov	ip, sp
   14be0:	ldr	lr, [pc, #64]	; 14c28 <strspn@plt+0x3d94>
   14be4:	ldm	lr!, {r0, r1, r2, r3}
   14be8:	stmia	ip!, {r0, r1, r2, r3}
   14bec:	ldm	lr!, {r0, r1, r2, r3}
   14bf0:	stmia	ip!, {r0, r1, r2, r3}
   14bf4:	ldm	lr, {r0, r1, r2, r3}
   14bf8:	stm	ip, {r0, r1, r2, r3}
   14bfc:	mov	r2, r7
   14c00:	mov	r1, r6
   14c04:	mov	r0, sp
   14c08:	bl	14790 <strspn@plt+0x38fc>
   14c0c:	mov	r3, sp
   14c10:	ldr	r2, [sp, #72]	; 0x48
   14c14:	mov	r1, r5
   14c18:	mov	r0, r4
   14c1c:	bl	14508 <strspn@plt+0x3674>
   14c20:	add	sp, sp, #52	; 0x34
   14c24:	pop	{r4, r5, r6, r7, pc}
   14c28:	andeq	r8, r2, r8, asr r2
   14c2c:	push	{lr}		; (str lr, [sp, #-4]!)
   14c30:	sub	sp, sp, #12
   14c34:	mvn	ip, #0
   14c38:	str	ip, [sp]
   14c3c:	bl	14bc4 <strspn@plt+0x3d30>
   14c40:	add	sp, sp, #12
   14c44:	pop	{pc}		; (ldr pc, [sp], #4)
   14c48:	push	{r4, lr}
   14c4c:	mov	r3, r2
   14c50:	mov	r2, r1
   14c54:	mov	r1, r0
   14c58:	mov	r0, #0
   14c5c:	bl	14c2c <strspn@plt+0x3d98>
   14c60:	pop	{r4, pc}
   14c64:	push	{lr}		; (str lr, [sp, #-4]!)
   14c68:	sub	sp, sp, #12
   14c6c:	str	r3, [sp]
   14c70:	mov	r3, r2
   14c74:	mov	r2, r1
   14c78:	mov	r1, r0
   14c7c:	mov	r0, #0
   14c80:	bl	14bc4 <strspn@plt+0x3d30>
   14c84:	add	sp, sp, #12
   14c88:	pop	{pc}		; (ldr pc, [sp], #4)
   14c8c:	push	{r4, lr}
   14c90:	ldr	r3, [pc, #4]	; 14c9c <strspn@plt+0x3e08>
   14c94:	bl	14508 <strspn@plt+0x3674>
   14c98:	pop	{r4, pc}
   14c9c:	andeq	r8, r2, r0, lsl #2
   14ca0:	push	{r4, lr}
   14ca4:	mov	r2, r1
   14ca8:	mov	r1, r0
   14cac:	mov	r0, #0
   14cb0:	bl	14c8c <strspn@plt+0x3df8>
   14cb4:	pop	{r4, pc}
   14cb8:	push	{r4, lr}
   14cbc:	mvn	r2, #0
   14cc0:	bl	14c8c <strspn@plt+0x3df8>
   14cc4:	pop	{r4, pc}
   14cc8:	push	{r4, lr}
   14ccc:	mov	r1, r0
   14cd0:	mov	r0, #0
   14cd4:	bl	14cb8 <strspn@plt+0x3e24>
   14cd8:	pop	{r4, pc}
   14cdc:	push	{r4, r5, r6, lr}
   14ce0:	mov	r5, r1
   14ce4:	ldr	r4, [r0], #8
   14ce8:	cmp	r4, r0
   14cec:	beq	14d04 <strspn@plt+0x3e70>
   14cf0:	mov	r0, r4
   14cf4:	bl	15a18 <strspn@plt+0x4b84>
   14cf8:	cmp	r0, #0
   14cfc:	moveq	r0, r4
   14d00:	pop	{r4, r5, r6, pc}
   14d04:	mov	r0, r1
   14d08:	bl	159e8 <strspn@plt+0x4b54>
   14d0c:	cmp	r0, #0
   14d10:	popeq	{r4, r5, r6, pc}
   14d14:	mov	r2, r5
   14d18:	mov	r1, r4
   14d1c:	bl	10c9c <memcpy@plt>
   14d20:	pop	{r4, r5, r6, pc}
   14d24:	push	{r4, r5, r6, lr}
   14d28:	mov	r4, r0
   14d2c:	ldr	r5, [r0, #4]
   14d30:	lsl	r5, r5, #1
   14d34:	mov	r6, r0
   14d38:	ldr	r0, [r6], #8
   14d3c:	cmp	r0, r6
   14d40:	beq	14d48 <strspn@plt+0x3eb4>
   14d44:	bl	120ec <strspn@plt+0x1258>
   14d48:	ldr	r3, [r4, #4]
   14d4c:	cmp	r5, r3
   14d50:	bcc	14d74 <strspn@plt+0x3ee0>
   14d54:	mov	r0, r5
   14d58:	bl	159e8 <strspn@plt+0x4b54>
   14d5c:	cmp	r0, #0
   14d60:	beq	14d80 <strspn@plt+0x3eec>
   14d64:	str	r0, [r4]
   14d68:	str	r5, [r4, #4]
   14d6c:	mov	r0, #1
   14d70:	pop	{r4, r5, r6, pc}
   14d74:	bl	10dd4 <__errno_location@plt>
   14d78:	mov	r3, #12
   14d7c:	str	r3, [r0]
   14d80:	str	r6, [r4]
   14d84:	mov	r3, #1024	; 0x400
   14d88:	str	r3, [r4, #4]
   14d8c:	mov	r0, #0
   14d90:	pop	{r4, r5, r6, pc}
   14d94:	push	{r4, r5, r6, r7, r8, lr}
   14d98:	mov	r4, r0
   14d9c:	ldr	r3, [r0, #4]
   14da0:	lsl	r6, r3, #1
   14da4:	mov	r5, r0
   14da8:	ldr	r0, [r5], #8
   14dac:	cmp	r0, r5
   14db0:	beq	14ddc <strspn@plt+0x3f48>
   14db4:	cmp	r3, r6
   14db8:	bhi	14e00 <strspn@plt+0x3f6c>
   14dbc:	mov	r1, r6
   14dc0:	bl	15a18 <strspn@plt+0x4b84>
   14dc4:	subs	r7, r0, #0
   14dc8:	beq	14e0c <strspn@plt+0x3f78>
   14dcc:	str	r7, [r4]
   14dd0:	str	r6, [r4, #4]
   14dd4:	mov	r0, #1
   14dd8:	pop	{r4, r5, r6, r7, r8, pc}
   14ddc:	mov	r0, r6
   14de0:	bl	159e8 <strspn@plt+0x4b54>
   14de4:	subs	r7, r0, #0
   14de8:	beq	14e28 <strspn@plt+0x3f94>
   14dec:	ldr	r2, [r4, #4]
   14df0:	mov	r1, r5
   14df4:	mov	r0, r7
   14df8:	bl	10c9c <memcpy@plt>
   14dfc:	b	14dcc <strspn@plt+0x3f38>
   14e00:	bl	10dd4 <__errno_location@plt>
   14e04:	mov	r3, #12
   14e08:	str	r3, [r0]
   14e0c:	ldr	r0, [r4]
   14e10:	bl	120ec <strspn@plt+0x1258>
   14e14:	str	r5, [r4]
   14e18:	mov	r3, #1024	; 0x400
   14e1c:	str	r3, [r4, #4]
   14e20:	mov	r0, #0
   14e24:	pop	{r4, r5, r6, r7, r8, pc}
   14e28:	mov	r0, #0
   14e2c:	pop	{r4, r5, r6, r7, r8, pc}
   14e30:	push	{r4, r5, r6, lr}
   14e34:	sub	sp, sp, #32
   14e38:	mov	r4, r0
   14e3c:	ldr	r5, [sp, #48]	; 0x30
   14e40:	ldr	r6, [sp, #52]	; 0x34
   14e44:	cmp	r1, #0
   14e48:	beq	14f00 <strspn@plt+0x406c>
   14e4c:	str	r3, [sp, #4]
   14e50:	str	r2, [sp]
   14e54:	mov	r3, r1
   14e58:	ldr	r2, [pc, #940]	; 1520c <strspn@plt+0x4378>
   14e5c:	mov	r1, #1
   14e60:	bl	10e10 <__fprintf_chk@plt>
   14e64:	mov	r2, #5
   14e68:	ldr	r1, [pc, #928]	; 15210 <strspn@plt+0x437c>
   14e6c:	mov	r0, #0
   14e70:	bl	10ccc <dcgettext@plt>
   14e74:	ldr	r3, [pc, #920]	; 15214 <strspn@plt+0x4380>
   14e78:	str	r3, [sp]
   14e7c:	mov	r3, r0
   14e80:	ldr	r2, [pc, #912]	; 15218 <strspn@plt+0x4384>
   14e84:	mov	r1, #1
   14e88:	mov	r0, r4
   14e8c:	bl	10e10 <__fprintf_chk@plt>
   14e90:	mov	r1, r4
   14e94:	mov	r0, #10
   14e98:	bl	10cc0 <fputc_unlocked@plt>
   14e9c:	mov	r2, #5
   14ea0:	ldr	r1, [pc, #884]	; 1521c <strspn@plt+0x4388>
   14ea4:	mov	r0, #0
   14ea8:	bl	10ccc <dcgettext@plt>
   14eac:	ldr	r3, [pc, #876]	; 15220 <strspn@plt+0x438c>
   14eb0:	mov	r2, r0
   14eb4:	mov	r1, #1
   14eb8:	mov	r0, r4
   14ebc:	bl	10e10 <__fprintf_chk@plt>
   14ec0:	mov	r1, r4
   14ec4:	mov	r0, #10
   14ec8:	bl	10cc0 <fputc_unlocked@plt>
   14ecc:	cmp	r6, #9
   14ed0:	ldrls	pc, [pc, r6, lsl #2]
   14ed4:	b	151a4 <strspn@plt+0x4310>
   14ed8:	andeq	r4, r1, ip, lsr pc
   14edc:	andeq	r4, r1, r8, lsl pc
   14ee0:	andeq	r4, r1, r4, asr #30
   14ee4:	andeq	r4, r1, r4, ror pc
   14ee8:	andeq	r4, r1, ip, lsr #31
   14eec:	andeq	r4, r1, ip, ror #31
   14ef0:	andeq	r5, r1, r4, lsr r0
   14ef4:	andeq	r5, r1, r4, lsl #1
   14ef8:	ldrdeq	r5, [r1], -ip
   14efc:	andeq	r5, r1, ip, lsr r1
   14f00:	str	r3, [sp]
   14f04:	mov	r3, r2
   14f08:	ldr	r2, [pc, #788]	; 15224 <strspn@plt+0x4390>
   14f0c:	mov	r1, #1
   14f10:	bl	10e10 <__fprintf_chk@plt>
   14f14:	b	14e64 <strspn@plt+0x3fd0>
   14f18:	mov	r2, #5
   14f1c:	ldr	r1, [pc, #772]	; 15228 <strspn@plt+0x4394>
   14f20:	mov	r0, #0
   14f24:	bl	10ccc <dcgettext@plt>
   14f28:	ldr	r3, [r5]
   14f2c:	mov	r2, r0
   14f30:	mov	r1, #1
   14f34:	mov	r0, r4
   14f38:	bl	10e10 <__fprintf_chk@plt>
   14f3c:	add	sp, sp, #32
   14f40:	pop	{r4, r5, r6, pc}
   14f44:	mov	r2, #5
   14f48:	ldr	r1, [pc, #732]	; 1522c <strspn@plt+0x4398>
   14f4c:	mov	r0, #0
   14f50:	bl	10ccc <dcgettext@plt>
   14f54:	ldr	r3, [r5]
   14f58:	ldr	r2, [r5, #4]
   14f5c:	str	r2, [sp]
   14f60:	mov	r2, r0
   14f64:	mov	r1, #1
   14f68:	mov	r0, r4
   14f6c:	bl	10e10 <__fprintf_chk@plt>
   14f70:	b	14f3c <strspn@plt+0x40a8>
   14f74:	mov	r2, #5
   14f78:	ldr	r1, [pc, #688]	; 15230 <strspn@plt+0x439c>
   14f7c:	mov	r0, #0
   14f80:	bl	10ccc <dcgettext@plt>
   14f84:	ldr	r3, [r5]
   14f88:	ldr	r2, [r5, #8]
   14f8c:	str	r2, [sp, #4]
   14f90:	ldr	r2, [r5, #4]
   14f94:	str	r2, [sp]
   14f98:	mov	r2, r0
   14f9c:	mov	r1, #1
   14fa0:	mov	r0, r4
   14fa4:	bl	10e10 <__fprintf_chk@plt>
   14fa8:	b	14f3c <strspn@plt+0x40a8>
   14fac:	mov	r2, #5
   14fb0:	ldr	r1, [pc, #636]	; 15234 <strspn@plt+0x43a0>
   14fb4:	mov	r0, #0
   14fb8:	bl	10ccc <dcgettext@plt>
   14fbc:	ldr	r3, [r5]
   14fc0:	ldr	r2, [r5, #12]
   14fc4:	str	r2, [sp, #8]
   14fc8:	ldr	r2, [r5, #8]
   14fcc:	str	r2, [sp, #4]
   14fd0:	ldr	r2, [r5, #4]
   14fd4:	str	r2, [sp]
   14fd8:	mov	r2, r0
   14fdc:	mov	r1, #1
   14fe0:	mov	r0, r4
   14fe4:	bl	10e10 <__fprintf_chk@plt>
   14fe8:	b	14f3c <strspn@plt+0x40a8>
   14fec:	mov	r2, #5
   14ff0:	ldr	r1, [pc, #576]	; 15238 <strspn@plt+0x43a4>
   14ff4:	mov	r0, #0
   14ff8:	bl	10ccc <dcgettext@plt>
   14ffc:	ldr	r3, [r5]
   15000:	ldr	r2, [r5, #16]
   15004:	str	r2, [sp, #12]
   15008:	ldr	r2, [r5, #12]
   1500c:	str	r2, [sp, #8]
   15010:	ldr	r2, [r5, #8]
   15014:	str	r2, [sp, #4]
   15018:	ldr	r2, [r5, #4]
   1501c:	str	r2, [sp]
   15020:	mov	r2, r0
   15024:	mov	r1, #1
   15028:	mov	r0, r4
   1502c:	bl	10e10 <__fprintf_chk@plt>
   15030:	b	14f3c <strspn@plt+0x40a8>
   15034:	mov	r2, #5
   15038:	ldr	r1, [pc, #508]	; 1523c <strspn@plt+0x43a8>
   1503c:	mov	r0, #0
   15040:	bl	10ccc <dcgettext@plt>
   15044:	ldr	r3, [r5]
   15048:	ldr	r2, [r5, #20]
   1504c:	str	r2, [sp, #16]
   15050:	ldr	r2, [r5, #16]
   15054:	str	r2, [sp, #12]
   15058:	ldr	r2, [r5, #12]
   1505c:	str	r2, [sp, #8]
   15060:	ldr	r2, [r5, #8]
   15064:	str	r2, [sp, #4]
   15068:	ldr	r2, [r5, #4]
   1506c:	str	r2, [sp]
   15070:	mov	r2, r0
   15074:	mov	r1, #1
   15078:	mov	r0, r4
   1507c:	bl	10e10 <__fprintf_chk@plt>
   15080:	b	14f3c <strspn@plt+0x40a8>
   15084:	mov	r2, #5
   15088:	ldr	r1, [pc, #432]	; 15240 <strspn@plt+0x43ac>
   1508c:	mov	r0, #0
   15090:	bl	10ccc <dcgettext@plt>
   15094:	ldr	r3, [r5]
   15098:	ldr	r2, [r5, #24]
   1509c:	str	r2, [sp, #20]
   150a0:	ldr	r2, [r5, #20]
   150a4:	str	r2, [sp, #16]
   150a8:	ldr	r2, [r5, #16]
   150ac:	str	r2, [sp, #12]
   150b0:	ldr	r2, [r5, #12]
   150b4:	str	r2, [sp, #8]
   150b8:	ldr	r2, [r5, #8]
   150bc:	str	r2, [sp, #4]
   150c0:	ldr	r2, [r5, #4]
   150c4:	str	r2, [sp]
   150c8:	mov	r2, r0
   150cc:	mov	r1, #1
   150d0:	mov	r0, r4
   150d4:	bl	10e10 <__fprintf_chk@plt>
   150d8:	b	14f3c <strspn@plt+0x40a8>
   150dc:	mov	r2, #5
   150e0:	ldr	r1, [pc, #348]	; 15244 <strspn@plt+0x43b0>
   150e4:	mov	r0, #0
   150e8:	bl	10ccc <dcgettext@plt>
   150ec:	ldr	r3, [r5]
   150f0:	ldr	r2, [r5, #28]
   150f4:	str	r2, [sp, #24]
   150f8:	ldr	r2, [r5, #24]
   150fc:	str	r2, [sp, #20]
   15100:	ldr	r2, [r5, #20]
   15104:	str	r2, [sp, #16]
   15108:	ldr	r2, [r5, #16]
   1510c:	str	r2, [sp, #12]
   15110:	ldr	r2, [r5, #12]
   15114:	str	r2, [sp, #8]
   15118:	ldr	r2, [r5, #8]
   1511c:	str	r2, [sp, #4]
   15120:	ldr	r2, [r5, #4]
   15124:	str	r2, [sp]
   15128:	mov	r2, r0
   1512c:	mov	r1, #1
   15130:	mov	r0, r4
   15134:	bl	10e10 <__fprintf_chk@plt>
   15138:	b	14f3c <strspn@plt+0x40a8>
   1513c:	mov	r2, #5
   15140:	ldr	r1, [pc, #256]	; 15248 <strspn@plt+0x43b4>
   15144:	mov	r0, #0
   15148:	bl	10ccc <dcgettext@plt>
   1514c:	ldr	r3, [r5]
   15150:	ldr	r2, [r5, #32]
   15154:	str	r2, [sp, #28]
   15158:	ldr	r2, [r5, #28]
   1515c:	str	r2, [sp, #24]
   15160:	ldr	r2, [r5, #24]
   15164:	str	r2, [sp, #20]
   15168:	ldr	r2, [r5, #20]
   1516c:	str	r2, [sp, #16]
   15170:	ldr	r2, [r5, #16]
   15174:	str	r2, [sp, #12]
   15178:	ldr	r2, [r5, #12]
   1517c:	str	r2, [sp, #8]
   15180:	ldr	r2, [r5, #8]
   15184:	str	r2, [sp, #4]
   15188:	ldr	r2, [r5, #4]
   1518c:	str	r2, [sp]
   15190:	mov	r2, r0
   15194:	mov	r1, #1
   15198:	mov	r0, r4
   1519c:	bl	10e10 <__fprintf_chk@plt>
   151a0:	b	14f3c <strspn@plt+0x40a8>
   151a4:	mov	r2, #5
   151a8:	ldr	r1, [pc, #156]	; 1524c <strspn@plt+0x43b8>
   151ac:	mov	r0, #0
   151b0:	bl	10ccc <dcgettext@plt>
   151b4:	ldr	r3, [r5]
   151b8:	ldr	r2, [r5, #32]
   151bc:	str	r2, [sp, #28]
   151c0:	ldr	r2, [r5, #28]
   151c4:	str	r2, [sp, #24]
   151c8:	ldr	r2, [r5, #24]
   151cc:	str	r2, [sp, #20]
   151d0:	ldr	r2, [r5, #20]
   151d4:	str	r2, [sp, #16]
   151d8:	ldr	r2, [r5, #16]
   151dc:	str	r2, [sp, #12]
   151e0:	ldr	r2, [r5, #12]
   151e4:	str	r2, [sp, #8]
   151e8:	ldr	r2, [r5, #8]
   151ec:	str	r2, [sp, #4]
   151f0:	ldr	r2, [r5, #4]
   151f4:	str	r2, [sp]
   151f8:	mov	r2, r0
   151fc:	mov	r1, #1
   15200:	mov	r0, r4
   15204:	bl	10e10 <__fprintf_chk@plt>
   15208:	b	14f3c <strspn@plt+0x40a8>
   1520c:	andeq	r6, r1, r8, lsr #29
   15210:			; <UNDEFINED> instruction: 0x00016ebc
   15214:	andeq	r0, r0, r6, ror #15
   15218:	muleq	r1, r4, r1
   1521c:	andeq	r6, r1, r0, asr #29
   15220:	andeq	r6, r1, ip, ror #30
   15224:			; <UNDEFINED> instruction: 0x00016eb4
   15228:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   1522c:	andeq	r6, r1, r0, lsr #31
   15230:			; <UNDEFINED> instruction: 0x00016fb8
   15234:	ldrdeq	r6, [r1], -r4
   15238:	strdeq	r6, [r1], -r4
   1523c:	andeq	r7, r1, r8, lsl r0
   15240:	andeq	r7, r1, r0, asr #32
   15244:	andeq	r7, r1, ip, rrx
   15248:	muleq	r1, ip, r0
   1524c:	ldrdeq	r7, [r1], -r0
   15250:	push	{r4, r5, lr}
   15254:	sub	sp, sp, #12
   15258:	ldr	r5, [sp, #24]
   1525c:	ldr	ip, [r5]
   15260:	cmp	ip, #0
   15264:	beq	15294 <strspn@plt+0x4400>
   15268:	mov	lr, r5
   1526c:	mov	ip, #0
   15270:	add	ip, ip, #1
   15274:	ldr	r4, [lr, #4]!
   15278:	cmp	r4, #0
   1527c:	bne	15270 <strspn@plt+0x43dc>
   15280:	str	ip, [sp, #4]
   15284:	str	r5, [sp]
   15288:	bl	14e30 <strspn@plt+0x3f9c>
   1528c:	add	sp, sp, #12
   15290:	pop	{r4, r5, pc}
   15294:	mov	ip, #0
   15298:	b	15280 <strspn@plt+0x43ec>
   1529c:	push	{r4, r5, lr}
   152a0:	sub	sp, sp, #52	; 0x34
   152a4:	ldr	r4, [sp, #64]	; 0x40
   152a8:	sub	r4, r4, #4
   152ac:	add	r5, sp, #4
   152b0:	mov	ip, #0
   152b4:	ldr	lr, [r4, #4]!
   152b8:	str	lr, [r5, #4]!
   152bc:	cmp	lr, #0
   152c0:	beq	152d0 <strspn@plt+0x443c>
   152c4:	add	ip, ip, #1
   152c8:	cmp	ip, #10
   152cc:	bne	152b4 <strspn@plt+0x4420>
   152d0:	str	ip, [sp, #4]
   152d4:	add	ip, sp, #8
   152d8:	str	ip, [sp]
   152dc:	bl	14e30 <strspn@plt+0x3f9c>
   152e0:	add	sp, sp, #52	; 0x34
   152e4:	pop	{r4, r5, pc}
   152e8:	push	{r3}		; (str r3, [sp, #-4]!)
   152ec:	push	{lr}		; (str lr, [sp, #-4]!)
   152f0:	sub	sp, sp, #16
   152f4:	add	r3, sp, #24
   152f8:	str	r3, [sp, #12]
   152fc:	str	r3, [sp]
   15300:	ldr	r3, [sp, #20]
   15304:	bl	1529c <strspn@plt+0x4408>
   15308:	add	sp, sp, #16
   1530c:	pop	{lr}		; (ldr lr, [sp], #4)
   15310:	add	sp, sp, #4
   15314:	bx	lr
   15318:	push	{r4, lr}
   1531c:	ldr	r3, [pc, #112]	; 15394 <strspn@plt+0x4500>
   15320:	ldr	r1, [r3]
   15324:	mov	r0, #10
   15328:	bl	10cc0 <fputc_unlocked@plt>
   1532c:	mov	r2, #5
   15330:	ldr	r1, [pc, #96]	; 15398 <strspn@plt+0x4504>
   15334:	mov	r0, #0
   15338:	bl	10ccc <dcgettext@plt>
   1533c:	ldr	r2, [pc, #88]	; 1539c <strspn@plt+0x4508>
   15340:	mov	r1, r0
   15344:	mov	r0, #1
   15348:	bl	10df8 <__printf_chk@plt>
   1534c:	mov	r2, #5
   15350:	ldr	r1, [pc, #72]	; 153a0 <strspn@plt+0x450c>
   15354:	mov	r0, #0
   15358:	bl	10ccc <dcgettext@plt>
   1535c:	ldr	r3, [pc, #64]	; 153a4 <strspn@plt+0x4510>
   15360:	ldr	r2, [pc, #64]	; 153a8 <strspn@plt+0x4514>
   15364:	mov	r1, r0
   15368:	mov	r0, #1
   1536c:	bl	10df8 <__printf_chk@plt>
   15370:	mov	r2, #5
   15374:	ldr	r1, [pc, #48]	; 153ac <strspn@plt+0x4518>
   15378:	mov	r0, #0
   1537c:	bl	10ccc <dcgettext@plt>
   15380:	ldr	r2, [pc, #40]	; 153b0 <strspn@plt+0x451c>
   15384:	mov	r1, r0
   15388:	mov	r0, #1
   1538c:	bl	10df8 <__printf_chk@plt>
   15390:	pop	{r4, pc}
   15394:	andeq	r8, r2, r4, asr #2
   15398:	andeq	r7, r1, ip, lsl #2
   1539c:	andeq	r7, r1, r0, lsr #2
   153a0:	andeq	r7, r1, r8, lsr r1
   153a4:			; <UNDEFINED> instruction: 0x00016ab0
   153a8:	ldrdeq	r6, [r1], -r8
   153ac:	andeq	r7, r1, ip, asr #2
   153b0:	andeq	r7, r1, r4, ror r1
   153b4:	push	{r4, lr}
   153b8:	bl	159e8 <strspn@plt+0x4b54>
   153bc:	cmp	r0, #0
   153c0:	popne	{r4, pc}
   153c4:	bl	15958 <strspn@plt+0x4ac4>
   153c8:	push	{r4, lr}
   153cc:	bl	159e8 <strspn@plt+0x4b54>
   153d0:	cmp	r0, #0
   153d4:	popne	{r4, pc}
   153d8:	bl	15958 <strspn@plt+0x4ac4>
   153dc:	push	{r4, lr}
   153e0:	bl	153b4 <strspn@plt+0x4520>
   153e4:	pop	{r4, pc}
   153e8:	push	{r4, r5, r6, lr}
   153ec:	mov	r5, r0
   153f0:	mov	r4, r1
   153f4:	bl	15a18 <strspn@plt+0x4b84>
   153f8:	cmp	r0, #0
   153fc:	popne	{r4, r5, r6, pc}
   15400:	adds	r4, r4, #0
   15404:	movne	r4, #1
   15408:	cmp	r5, #0
   1540c:	orreq	r4, r4, #1
   15410:	cmp	r4, #0
   15414:	popeq	{r4, r5, r6, pc}
   15418:	bl	15958 <strspn@plt+0x4ac4>
   1541c:	push	{r4, lr}
   15420:	cmp	r1, #0
   15424:	orreq	r1, r1, #1
   15428:	bl	15a18 <strspn@plt+0x4b84>
   1542c:	cmp	r0, #0
   15430:	popne	{r4, pc}
   15434:	bl	15958 <strspn@plt+0x4ac4>
   15438:	push	{r4, r5, r6, lr}
   1543c:	mov	r6, r0
   15440:	mov	r5, r1
   15444:	mov	r4, r2
   15448:	bl	15d5c <strspn@plt+0x4ec8>
   1544c:	cmp	r0, #0
   15450:	popne	{r4, r5, r6, pc}
   15454:	cmp	r6, #0
   15458:	beq	15468 <strspn@plt+0x45d4>
   1545c:	cmp	r5, #0
   15460:	cmpne	r4, #0
   15464:	popeq	{r4, r5, r6, pc}
   15468:	bl	15958 <strspn@plt+0x4ac4>
   1546c:	push	{r4, lr}
   15470:	bl	15438 <strspn@plt+0x45a4>
   15474:	pop	{r4, pc}
   15478:	push	{r4, lr}
   1547c:	mov	ip, r1
   15480:	mov	r3, r2
   15484:	cmp	r2, #0
   15488:	cmpne	r1, #0
   1548c:	moveq	r3, #1
   15490:	moveq	ip, r3
   15494:	mov	r2, r3
   15498:	mov	r1, ip
   1549c:	bl	15d5c <strspn@plt+0x4ec8>
   154a0:	cmp	r0, #0
   154a4:	popne	{r4, pc}
   154a8:	bl	15958 <strspn@plt+0x4ac4>
   154ac:	push	{r4, lr}
   154b0:	mov	r2, r1
   154b4:	mov	r1, r0
   154b8:	mov	r0, #0
   154bc:	bl	15438 <strspn@plt+0x45a4>
   154c0:	pop	{r4, pc}
   154c4:	push	{r4, lr}
   154c8:	mov	r2, r1
   154cc:	mov	r1, r0
   154d0:	mov	r0, #0
   154d4:	bl	15478 <strspn@plt+0x45e4>
   154d8:	pop	{r4, pc}
   154dc:	push	{r4, r5, r6, r7, r8, lr}
   154e0:	mov	r5, r1
   154e4:	mov	r6, r2
   154e8:	ldr	r4, [r1]
   154ec:	subs	r7, r0, #0
   154f0:	beq	1550c <strspn@plt+0x4678>
   154f4:	lsr	r2, r4, #1
   154f8:	add	r3, r2, #1
   154fc:	mvn	r3, r3
   15500:	cmp	r4, r3
   15504:	bls	15530 <strspn@plt+0x469c>
   15508:	bl	15958 <strspn@plt+0x4ac4>
   1550c:	cmp	r4, #0
   15510:	bne	15538 <strspn@plt+0x46a4>
   15514:	mov	r1, r2
   15518:	mov	r0, #64	; 0x40
   1551c:	bl	15eb0 <strspn@plt+0x501c>
   15520:	cmp	r0, #0
   15524:	movne	r4, r0
   15528:	addeq	r4, r0, #1
   1552c:	b	15538 <strspn@plt+0x46a4>
   15530:	add	r4, r4, #1
   15534:	add	r4, r4, r2
   15538:	mov	r2, r6
   1553c:	mov	r1, r4
   15540:	mov	r0, r7
   15544:	bl	15438 <strspn@plt+0x45a4>
   15548:	str	r4, [r5]
   1554c:	pop	{r4, r5, r6, r7, r8, pc}
   15550:	push	{r4, lr}
   15554:	mov	r2, #1
   15558:	bl	154dc <strspn@plt+0x4648>
   1555c:	pop	{r4, pc}
   15560:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15564:	sub	sp, sp, #12
   15568:	mov	fp, r0
   1556c:	mov	sl, r1
   15570:	mov	r9, r2
   15574:	mov	r7, r3
   15578:	ldr	r6, [sp, #48]	; 0x30
   1557c:	ldr	r5, [r1]
   15580:	asrs	r4, r5, #1
   15584:	bmi	156e0 <strspn@plt+0x484c>
   15588:	cmp	r5, #0
   1558c:	blt	156f4 <strspn@plt+0x4860>
   15590:	mvn	r3, #-2147483648	; 0x80000000
   15594:	sub	r3, r3, r4
   15598:	cmp	r5, r3
   1559c:	movle	r3, #0
   155a0:	movgt	r3, #1
   155a4:	cmp	r3, #0
   155a8:	addeq	r4, r4, r5
   155ac:	mvnne	r4, #-2147483648	; 0x80000000
   155b0:	mvn	r8, r7
   155b4:	lsr	r8, r8, #31
   155b8:	cmp	r7, r4
   155bc:	movge	r3, #0
   155c0:	andlt	r3, r8, #1
   155c4:	cmp	r3, #0
   155c8:	movne	r4, r7
   155cc:	cmp	r6, #0
   155d0:	blt	15708 <strspn@plt+0x4874>
   155d4:	cmp	r6, #0
   155d8:	beq	157b4 <strspn@plt+0x4920>
   155dc:	cmp	r4, #0
   155e0:	blt	15764 <strspn@plt+0x48d0>
   155e4:	mov	r1, r6
   155e8:	mvn	r0, #-2147483648	; 0x80000000
   155ec:	bl	160bc <strspn@plt+0x5228>
   155f0:	cmp	r0, r4
   155f4:	movge	r0, #0
   155f8:	movlt	r0, #1
   155fc:	cmp	r0, #0
   15600:	mvnne	r3, #-2147483648	; 0x80000000
   15604:	strne	r3, [sp, #4]
   15608:	beq	1579c <strspn@plt+0x4908>
   1560c:	mov	r1, r6
   15610:	ldr	r0, [sp, #4]
   15614:	bl	160bc <strspn@plt+0x5228>
   15618:	mov	r4, r0
   1561c:	mov	r1, r6
   15620:	ldr	r0, [sp, #4]
   15624:	bl	162dc <strspn@plt+0x5448>
   15628:	ldr	r3, [sp, #4]
   1562c:	sub	r1, r3, r1
   15630:	cmp	fp, #0
   15634:	moveq	r3, #0
   15638:	streq	r3, [sl]
   1563c:	sub	r3, r4, r5
   15640:	cmp	r3, r9
   15644:	bge	156cc <strspn@plt+0x4838>
   15648:	cmp	r9, #0
   1564c:	blt	157c0 <strspn@plt+0x492c>
   15650:	cmp	r5, #0
   15654:	blt	157d4 <strspn@plt+0x4940>
   15658:	mvn	r3, #-2147483648	; 0x80000000
   1565c:	sub	r3, r3, r9
   15660:	cmp	r5, r3
   15664:	movle	r3, #0
   15668:	movgt	r3, #1
   1566c:	cmp	r3, #0
   15670:	bne	1587c <strspn@plt+0x49e8>
   15674:	add	r5, r5, r9
   15678:	mov	r4, r5
   1567c:	cmp	r7, r5
   15680:	movge	r7, #0
   15684:	andlt	r7, r8, #1
   15688:	cmp	r7, #0
   1568c:	bne	1587c <strspn@plt+0x49e8>
   15690:	cmp	r6, #0
   15694:	blt	157e8 <strspn@plt+0x4954>
   15698:	cmp	r6, #0
   1569c:	beq	156c8 <strspn@plt+0x4834>
   156a0:	cmp	r5, #0
   156a4:	blt	15844 <strspn@plt+0x49b0>
   156a8:	mov	r1, r6
   156ac:	mvn	r0, #-2147483648	; 0x80000000
   156b0:	bl	160bc <strspn@plt+0x5228>
   156b4:	cmp	r5, r0
   156b8:	movle	r0, #0
   156bc:	movgt	r0, #1
   156c0:	cmp	r0, #0
   156c4:	bne	1587c <strspn@plt+0x49e8>
   156c8:	mul	r1, r5, r6
   156cc:	mov	r0, fp
   156d0:	bl	153e8 <strspn@plt+0x4554>
   156d4:	str	r4, [sl]
   156d8:	add	sp, sp, #12
   156dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   156e0:	rsb	r3, r4, #-2147483648	; 0x80000000
   156e4:	cmp	r5, r3
   156e8:	movge	r3, #0
   156ec:	movlt	r3, #1
   156f0:	b	155a4 <strspn@plt+0x4710>
   156f4:	rsb	r3, r5, #-2147483648	; 0x80000000
   156f8:	cmp	r4, r3
   156fc:	movge	r3, #0
   15700:	movlt	r3, #1
   15704:	b	155a4 <strspn@plt+0x4710>
   15708:	cmp	r4, #0
   1570c:	blt	15734 <strspn@plt+0x48a0>
   15710:	cmn	r6, #1
   15714:	beq	15750 <strspn@plt+0x48bc>
   15718:	mov	r1, r6
   1571c:	mov	r0, #-2147483648	; 0x80000000
   15720:	bl	160bc <strspn@plt+0x5228>
   15724:	cmp	r0, r4
   15728:	movge	r0, #0
   1572c:	movlt	r0, #1
   15730:	b	155fc <strspn@plt+0x4768>
   15734:	mov	r1, r6
   15738:	mvn	r0, #-2147483648	; 0x80000000
   1573c:	bl	160bc <strspn@plt+0x5228>
   15740:	cmp	r0, r4
   15744:	movle	r0, #0
   15748:	movgt	r0, #1
   1574c:	b	155fc <strspn@plt+0x4768>
   15750:	add	r0, r4, #-2147483648	; 0x80000000
   15754:	cmp	r0, #0
   15758:	movle	r0, #0
   1575c:	movgt	r0, #1
   15760:	b	155fc <strspn@plt+0x4768>
   15764:	cmn	r4, #1
   15768:	beq	15788 <strspn@plt+0x48f4>
   1576c:	mov	r1, r4
   15770:	mov	r0, #-2147483648	; 0x80000000
   15774:	bl	160bc <strspn@plt+0x5228>
   15778:	cmp	r6, r0
   1577c:	movle	r0, #0
   15780:	movgt	r0, #1
   15784:	b	155fc <strspn@plt+0x4768>
   15788:	add	r0, r6, #-2147483648	; 0x80000000
   1578c:	cmp	r0, #0
   15790:	movle	r0, #0
   15794:	movgt	r0, #1
   15798:	b	155fc <strspn@plt+0x4768>
   1579c:	mul	r1, r6, r4
   157a0:	cmp	r1, #63	; 0x3f
   157a4:	movle	r3, #64	; 0x40
   157a8:	strle	r3, [sp, #4]
   157ac:	bgt	15630 <strspn@plt+0x479c>
   157b0:	b	1560c <strspn@plt+0x4778>
   157b4:	mov	r3, #64	; 0x40
   157b8:	str	r3, [sp, #4]
   157bc:	b	1560c <strspn@plt+0x4778>
   157c0:	rsb	r3, r9, #-2147483648	; 0x80000000
   157c4:	cmp	r5, r3
   157c8:	movge	r3, #0
   157cc:	movlt	r3, #1
   157d0:	b	1566c <strspn@plt+0x47d8>
   157d4:	rsb	r3, r5, #-2147483648	; 0x80000000
   157d8:	cmp	r9, r3
   157dc:	movge	r3, #0
   157e0:	movlt	r3, #1
   157e4:	b	1566c <strspn@plt+0x47d8>
   157e8:	cmp	r5, #0
   157ec:	blt	15814 <strspn@plt+0x4980>
   157f0:	cmn	r6, #1
   157f4:	beq	15830 <strspn@plt+0x499c>
   157f8:	mov	r1, r6
   157fc:	mov	r0, #-2147483648	; 0x80000000
   15800:	bl	160bc <strspn@plt+0x5228>
   15804:	cmp	r5, r0
   15808:	movle	r0, #0
   1580c:	movgt	r0, #1
   15810:	b	156c0 <strspn@plt+0x482c>
   15814:	mov	r1, r6
   15818:	mvn	r0, #-2147483648	; 0x80000000
   1581c:	bl	160bc <strspn@plt+0x5228>
   15820:	cmp	r5, r0
   15824:	movge	r0, #0
   15828:	movlt	r0, #1
   1582c:	b	156c0 <strspn@plt+0x482c>
   15830:	add	r0, r5, #-2147483648	; 0x80000000
   15834:	cmp	r0, #0
   15838:	movle	r0, #0
   1583c:	movgt	r0, #1
   15840:	b	156c0 <strspn@plt+0x482c>
   15844:	cmn	r5, #1
   15848:	beq	15868 <strspn@plt+0x49d4>
   1584c:	mov	r1, r5
   15850:	mov	r0, #-2147483648	; 0x80000000
   15854:	bl	160bc <strspn@plt+0x5228>
   15858:	cmp	r6, r0
   1585c:	movle	r0, #0
   15860:	movgt	r0, #1
   15864:	b	156c0 <strspn@plt+0x482c>
   15868:	add	r0, r6, #-2147483648	; 0x80000000
   1586c:	cmp	r0, #0
   15870:	movle	r0, #0
   15874:	movgt	r0, #1
   15878:	b	156c0 <strspn@plt+0x482c>
   1587c:	bl	15958 <strspn@plt+0x4ac4>
   15880:	push	{r4, lr}
   15884:	bl	15998 <strspn@plt+0x4b04>
   15888:	cmp	r0, #0
   1588c:	popne	{r4, pc}
   15890:	bl	15958 <strspn@plt+0x4ac4>
   15894:	push	{r4, lr}
   15898:	mov	r1, #1
   1589c:	bl	15880 <strspn@plt+0x49ec>
   158a0:	pop	{r4, pc}
   158a4:	push	{r4, lr}
   158a8:	bl	15998 <strspn@plt+0x4b04>
   158ac:	cmp	r0, #0
   158b0:	popne	{r4, pc}
   158b4:	bl	15958 <strspn@plt+0x4ac4>
   158b8:	push	{r4, lr}
   158bc:	mov	r1, #1
   158c0:	bl	158a4 <strspn@plt+0x4a10>
   158c4:	pop	{r4, pc}
   158c8:	push	{r4, r5, r6, lr}
   158cc:	mov	r5, r0
   158d0:	mov	r4, r1
   158d4:	mov	r0, r1
   158d8:	bl	153b4 <strspn@plt+0x4520>
   158dc:	mov	r2, r4
   158e0:	mov	r1, r5
   158e4:	bl	10c9c <memcpy@plt>
   158e8:	pop	{r4, r5, r6, pc}
   158ec:	push	{r4, r5, r6, lr}
   158f0:	mov	r5, r0
   158f4:	mov	r4, r1
   158f8:	mov	r0, r1
   158fc:	bl	153c8 <strspn@plt+0x4534>
   15900:	mov	r2, r4
   15904:	mov	r1, r5
   15908:	bl	10c9c <memcpy@plt>
   1590c:	pop	{r4, r5, r6, pc}
   15910:	push	{r4, r5, r6, lr}
   15914:	mov	r5, r0
   15918:	mov	r4, r1
   1591c:	add	r0, r1, #1
   15920:	bl	153c8 <strspn@plt+0x4534>
   15924:	mov	r2, #0
   15928:	strb	r2, [r0, r4]
   1592c:	mov	r2, r4
   15930:	mov	r1, r5
   15934:	bl	10c9c <memcpy@plt>
   15938:	pop	{r4, r5, r6, pc}
   1593c:	push	{r4, lr}
   15940:	mov	r4, r0
   15944:	bl	10dc8 <strlen@plt>
   15948:	add	r1, r0, #1
   1594c:	mov	r0, r4
   15950:	bl	158c8 <strspn@plt+0x4a34>
   15954:	pop	{r4, pc}
   15958:	push	{r4, lr}
   1595c:	ldr	r3, [pc, #40]	; 1598c <strspn@plt+0x4af8>
   15960:	ldr	r4, [r3]
   15964:	mov	r2, #5
   15968:	ldr	r1, [pc, #32]	; 15990 <strspn@plt+0x4afc>
   1596c:	mov	r0, #0
   15970:	bl	10ccc <dcgettext@plt>
   15974:	mov	r3, r0
   15978:	ldr	r2, [pc, #20]	; 15994 <strspn@plt+0x4b00>
   1597c:	mov	r1, #0
   15980:	mov	r0, r4
   15984:	bl	10d50 <error@plt>
   15988:	bl	10e88 <abort@plt>
   1598c:	andeq	r8, r2, ip, ror #1
   15990:	andeq	r7, r1, r4, asr #3
   15994:	andeq	r6, r1, r8, lsl #26
   15998:	push	{r4, lr}
   1599c:	mov	r2, r0
   159a0:	mov	r3, r1
   159a4:	cmp	r1, #0
   159a8:	cmpne	r0, #0
   159ac:	moveq	r3, #1
   159b0:	moveq	r2, r3
   159b4:	umull	r0, r1, r2, r3
   159b8:	cmp	r0, #0
   159bc:	cmpge	r1, #0
   159c0:	bne	159d4 <strspn@plt+0x4b40>
   159c4:	mov	r1, r3
   159c8:	mov	r0, r2
   159cc:	bl	10c30 <calloc@plt>
   159d0:	pop	{r4, pc}
   159d4:	bl	10dd4 <__errno_location@plt>
   159d8:	mov	r3, #12
   159dc:	str	r3, [r0]
   159e0:	mov	r0, #0
   159e4:	pop	{r4, pc}
   159e8:	push	{r4, lr}
   159ec:	cmp	r0, #0
   159f0:	moveq	r0, #1
   159f4:	cmp	r0, #0
   159f8:	blt	15a04 <strspn@plt+0x4b70>
   159fc:	bl	10d5c <malloc@plt>
   15a00:	pop	{r4, pc}
   15a04:	bl	10dd4 <__errno_location@plt>
   15a08:	mov	r3, #12
   15a0c:	str	r3, [r0]
   15a10:	mov	r0, #0
   15a14:	pop	{r4, pc}
   15a18:	push	{r4, lr}
   15a1c:	cmp	r0, #0
   15a20:	beq	15a3c <strspn@plt+0x4ba8>
   15a24:	cmp	r1, #0
   15a28:	beq	15a48 <strspn@plt+0x4bb4>
   15a2c:	cmp	r1, #0
   15a30:	blt	15a54 <strspn@plt+0x4bc0>
   15a34:	bl	10cd8 <realloc@plt>
   15a38:	pop	{r4, pc}
   15a3c:	mov	r0, r1
   15a40:	bl	159e8 <strspn@plt+0x4b54>
   15a44:	pop	{r4, pc}
   15a48:	bl	120ec <strspn@plt+0x1258>
   15a4c:	mov	r0, #0
   15a50:	pop	{r4, pc}
   15a54:	bl	10dd4 <__errno_location@plt>
   15a58:	mov	r3, #12
   15a5c:	str	r3, [r0]
   15a60:	mov	r0, #0
   15a64:	pop	{r4, pc}
   15a68:	push	{r4, r5, r6, lr}
   15a6c:	mov	r5, r0
   15a70:	bl	10d38 <__fpending@plt>
   15a74:	mov	r6, r0
   15a78:	ldr	r4, [r5]
   15a7c:	and	r4, r4, #32
   15a80:	mov	r0, r5
   15a84:	bl	15ae0 <strspn@plt+0x4c4c>
   15a88:	cmp	r4, #0
   15a8c:	bne	15ab4 <strspn@plt+0x4c20>
   15a90:	cmp	r0, #0
   15a94:	popeq	{r4, r5, r6, pc}
   15a98:	cmp	r6, #0
   15a9c:	bne	15ad0 <strspn@plt+0x4c3c>
   15aa0:	bl	10dd4 <__errno_location@plt>
   15aa4:	ldr	r0, [r0]
   15aa8:	subs	r0, r0, #9
   15aac:	mvnne	r0, #0
   15ab0:	pop	{r4, r5, r6, pc}
   15ab4:	cmp	r0, #0
   15ab8:	bne	15ad8 <strspn@plt+0x4c44>
   15abc:	bl	10dd4 <__errno_location@plt>
   15ac0:	mov	r3, #0
   15ac4:	str	r3, [r0]
   15ac8:	mvn	r0, #0
   15acc:	pop	{r4, r5, r6, pc}
   15ad0:	mvn	r0, #0
   15ad4:	pop	{r4, r5, r6, pc}
   15ad8:	mvn	r0, #0
   15adc:	pop	{r4, r5, r6, pc}
   15ae0:	push	{r4, r5, r6, lr}
   15ae4:	sub	sp, sp, #8
   15ae8:	mov	r4, r0
   15aec:	bl	10e04 <fileno@plt>
   15af0:	cmp	r0, #0
   15af4:	blt	15b6c <strspn@plt+0x4cd8>
   15af8:	mov	r0, r4
   15afc:	bl	10d74 <__freading@plt>
   15b00:	cmp	r0, #0
   15b04:	beq	15b38 <strspn@plt+0x4ca4>
   15b08:	mov	r0, r4
   15b0c:	bl	10e04 <fileno@plt>
   15b10:	mov	r3, #1
   15b14:	str	r3, [sp]
   15b18:	mov	r2, #0
   15b1c:	mov	r3, #0
   15b20:	bl	10d20 <lseek64@plt>
   15b24:	mvn	r2, #0
   15b28:	mvn	r3, #0
   15b2c:	cmp	r1, r3
   15b30:	cmpeq	r0, r2
   15b34:	beq	15b78 <strspn@plt+0x4ce4>
   15b38:	mov	r0, r4
   15b3c:	bl	15b88 <strspn@plt+0x4cf4>
   15b40:	cmp	r0, #0
   15b44:	beq	15b78 <strspn@plt+0x4ce4>
   15b48:	bl	10dd4 <__errno_location@plt>
   15b4c:	mov	r5, r0
   15b50:	ldr	r6, [r0]
   15b54:	mov	r0, r4
   15b58:	bl	10e1c <fclose@plt>
   15b5c:	cmp	r6, #0
   15b60:	strne	r6, [r5]
   15b64:	mvnne	r0, #0
   15b68:	b	15b80 <strspn@plt+0x4cec>
   15b6c:	mov	r0, r4
   15b70:	bl	10e1c <fclose@plt>
   15b74:	b	15b80 <strspn@plt+0x4cec>
   15b78:	mov	r0, r4
   15b7c:	bl	10e1c <fclose@plt>
   15b80:	add	sp, sp, #8
   15b84:	pop	{r4, r5, r6, pc}
   15b88:	push	{r4, lr}
   15b8c:	sub	sp, sp, #8
   15b90:	subs	r4, r0, #0
   15b94:	beq	15ba8 <strspn@plt+0x4d14>
   15b98:	mov	r0, r4
   15b9c:	bl	10d74 <__freading@plt>
   15ba0:	cmp	r0, #0
   15ba4:	bne	15bb8 <strspn@plt+0x4d24>
   15ba8:	mov	r0, r4
   15bac:	bl	10c60 <fflush@plt>
   15bb0:	add	sp, sp, #8
   15bb4:	pop	{r4, pc}
   15bb8:	ldr	r3, [r4]
   15bbc:	tst	r3, #256	; 0x100
   15bc0:	bne	15bd0 <strspn@plt+0x4d3c>
   15bc4:	mov	r0, r4
   15bc8:	bl	10c60 <fflush@plt>
   15bcc:	b	15bb0 <strspn@plt+0x4d1c>
   15bd0:	mov	r3, #1
   15bd4:	str	r3, [sp]
   15bd8:	mov	r2, #0
   15bdc:	mov	r3, #0
   15be0:	mov	r0, r4
   15be4:	bl	15bec <strspn@plt+0x4d58>
   15be8:	b	15bc4 <strspn@plt+0x4d30>
   15bec:	push	{r4, r5, r6, r7, lr}
   15bf0:	sub	sp, sp, #12
   15bf4:	mov	r4, r0
   15bf8:	mov	r6, r2
   15bfc:	mov	r7, r3
   15c00:	ldr	r5, [sp, #32]
   15c04:	ldr	r2, [r0, #8]
   15c08:	ldr	r3, [r0, #4]
   15c0c:	cmp	r2, r3
   15c10:	beq	15c30 <strspn@plt+0x4d9c>
   15c14:	str	r5, [sp]
   15c18:	mov	r2, r6
   15c1c:	mov	r3, r7
   15c20:	mov	r0, r4
   15c24:	bl	10e28 <fseeko64@plt>
   15c28:	add	sp, sp, #12
   15c2c:	pop	{r4, r5, r6, r7, pc}
   15c30:	ldr	r2, [r0, #20]
   15c34:	ldr	r3, [r0, #16]
   15c38:	cmp	r2, r3
   15c3c:	bne	15c14 <strspn@plt+0x4d80>
   15c40:	ldr	r3, [r0, #36]	; 0x24
   15c44:	cmp	r3, #0
   15c48:	bne	15c14 <strspn@plt+0x4d80>
   15c4c:	bl	10e04 <fileno@plt>
   15c50:	str	r5, [sp]
   15c54:	mov	r2, r6
   15c58:	mov	r3, r7
   15c5c:	bl	10d20 <lseek64@plt>
   15c60:	mvn	r2, #0
   15c64:	mvn	r3, #0
   15c68:	cmp	r1, r3
   15c6c:	cmpeq	r0, r2
   15c70:	beq	15c8c <strspn@plt+0x4df8>
   15c74:	ldr	r3, [r4]
   15c78:	bic	r3, r3, #16
   15c7c:	str	r3, [r4]
   15c80:	strd	r0, [r4, #80]	; 0x50
   15c84:	mov	r0, #0
   15c88:	b	15c28 <strspn@plt+0x4d94>
   15c8c:	mvn	r0, #0
   15c90:	b	15c28 <strspn@plt+0x4d94>
   15c94:	push	{r4, lr}
   15c98:	ldrb	r3, [r0]
   15c9c:	cmp	r3, #0
   15ca0:	beq	15cc8 <strspn@plt+0x4e34>
   15ca4:	mov	r2, r0
   15ca8:	mov	r0, #0
   15cac:	add	r0, r3, r0, ror #23
   15cb0:	ldrb	r3, [r2, #1]!
   15cb4:	cmp	r3, #0
   15cb8:	bne	15cac <strspn@plt+0x4e18>
   15cbc:	bl	1609c <strspn@plt+0x5208>
   15cc0:	mov	r0, r1
   15cc4:	pop	{r4, pc}
   15cc8:	mov	r0, #0
   15ccc:	b	15cbc <strspn@plt+0x4e28>
   15cd0:	push	{r4, lr}
   15cd4:	mov	r0, #14
   15cd8:	bl	10e58 <nl_langinfo@plt>
   15cdc:	cmp	r0, #0
   15ce0:	beq	15cf8 <strspn@plt+0x4e64>
   15ce4:	ldrb	r2, [r0]
   15ce8:	ldr	r3, [pc, #16]	; 15d00 <strspn@plt+0x4e6c>
   15cec:	cmp	r2, #0
   15cf0:	moveq	r0, r3
   15cf4:	pop	{r4, pc}
   15cf8:	ldr	r0, [pc]	; 15d00 <strspn@plt+0x4e6c>
   15cfc:	pop	{r4, pc}
   15d00:	ldrdeq	r7, [r1], -r8
   15d04:	push	{r4, r5, r6, r7, lr}
   15d08:	sub	sp, sp, #12
   15d0c:	mov	r7, r1
   15d10:	mov	r5, r2
   15d14:	subs	r6, r0, #0
   15d18:	addeq	r6, sp, #4
   15d1c:	mov	r0, r6
   15d20:	bl	10d44 <mbrtowc@plt>
   15d24:	mov	r4, r0
   15d28:	cmp	r5, #0
   15d2c:	cmnne	r0, #3
   15d30:	bhi	15d40 <strspn@plt+0x4eac>
   15d34:	mov	r0, r4
   15d38:	add	sp, sp, #12
   15d3c:	pop	{r4, r5, r6, r7, pc}
   15d40:	mov	r0, #0
   15d44:	bl	15da8 <strspn@plt+0x4f14>
   15d48:	cmp	r0, #0
   15d4c:	ldrbeq	r3, [r7]
   15d50:	streq	r3, [r6]
   15d54:	moveq	r4, #1
   15d58:	b	15d34 <strspn@plt+0x4ea0>
   15d5c:	push	{r4, r5, r6, lr}
   15d60:	mov	r6, r0
   15d64:	mov	r5, r1
   15d68:	subs	r4, r2, #0
   15d6c:	beq	15d98 <strspn@plt+0x4f04>
   15d70:	mov	r1, r4
   15d74:	mvn	r0, #0
   15d78:	bl	15eb0 <strspn@plt+0x501c>
   15d7c:	cmp	r0, r5
   15d80:	bcs	15d98 <strspn@plt+0x4f04>
   15d84:	bl	10dd4 <__errno_location@plt>
   15d88:	mov	r3, #12
   15d8c:	str	r3, [r0]
   15d90:	mov	r0, #0
   15d94:	pop	{r4, r5, r6, pc}
   15d98:	mul	r1, r5, r4
   15d9c:	mov	r0, r6
   15da0:	bl	15a18 <strspn@plt+0x4b84>
   15da4:	pop	{r4, r5, r6, pc}
   15da8:	push	{lr}		; (str lr, [sp, #-4]!)
   15dac:	sub	sp, sp, #268	; 0x10c
   15db0:	ldr	r2, [pc, #68]	; 15dfc <strspn@plt+0x4f68>
   15db4:	add	r1, sp, #4
   15db8:	bl	15e08 <strspn@plt+0x4f74>
   15dbc:	cmp	r0, #0
   15dc0:	movne	r0, #0
   15dc4:	bne	15df4 <strspn@plt+0x4f60>
   15dc8:	ldr	r1, [pc, #48]	; 15e00 <strspn@plt+0x4f6c>
   15dcc:	add	r0, sp, #4
   15dd0:	bl	10c54 <strcmp@plt>
   15dd4:	cmp	r0, #0
   15dd8:	moveq	r0, #0
   15ddc:	beq	15df4 <strspn@plt+0x4f60>
   15de0:	ldr	r1, [pc, #28]	; 15e04 <strspn@plt+0x4f70>
   15de4:	add	r0, sp, #4
   15de8:	bl	10c54 <strcmp@plt>
   15dec:	adds	r0, r0, #0
   15df0:	movne	r0, #1
   15df4:	add	sp, sp, #268	; 0x10c
   15df8:	pop	{pc}		; (ldr pc, [sp], #4)
   15dfc:	andeq	r0, r0, r1, lsl #2
   15e00:	andeq	r7, r1, r0, ror #3
   15e04:	andeq	r7, r1, r4, ror #3
   15e08:	push	{r4, r5, r6, lr}
   15e0c:	mov	r6, r1
   15e10:	mov	r4, r2
   15e14:	mov	r1, #0
   15e18:	bl	10e40 <setlocale@plt>
   15e1c:	subs	r5, r0, #0
   15e20:	beq	15e44 <strspn@plt+0x4fb0>
   15e24:	mov	r0, r5
   15e28:	bl	10dc8 <strlen@plt>
   15e2c:	cmp	r4, r0
   15e30:	bhi	15e5c <strspn@plt+0x4fc8>
   15e34:	cmp	r4, #0
   15e38:	bne	15e74 <strspn@plt+0x4fe0>
   15e3c:	mov	r0, #34	; 0x22
   15e40:	pop	{r4, r5, r6, pc}
   15e44:	cmp	r4, #0
   15e48:	beq	15e98 <strspn@plt+0x5004>
   15e4c:	mov	r3, #0
   15e50:	strb	r3, [r6]
   15e54:	mov	r0, #22
   15e58:	pop	{r4, r5, r6, pc}
   15e5c:	add	r2, r0, #1
   15e60:	mov	r1, r5
   15e64:	mov	r0, r6
   15e68:	bl	10c9c <memcpy@plt>
   15e6c:	mov	r0, #0
   15e70:	pop	{r4, r5, r6, pc}
   15e74:	sub	r4, r4, #1
   15e78:	mov	r2, r4
   15e7c:	mov	r1, r5
   15e80:	mov	r0, r6
   15e84:	bl	10c9c <memcpy@plt>
   15e88:	mov	r3, #0
   15e8c:	strb	r3, [r6, r4]
   15e90:	mov	r0, #34	; 0x22
   15e94:	pop	{r4, r5, r6, pc}
   15e98:	mov	r0, #22
   15e9c:	pop	{r4, r5, r6, pc}
   15ea0:	push	{r4, lr}
   15ea4:	mov	r1, #0
   15ea8:	bl	10e40 <setlocale@plt>
   15eac:	pop	{r4, pc}
   15eb0:	subs	r2, r1, #1
   15eb4:	bxeq	lr
   15eb8:	bcc	16090 <strspn@plt+0x51fc>
   15ebc:	cmp	r0, r1
   15ec0:	bls	16074 <strspn@plt+0x51e0>
   15ec4:	tst	r1, r2
   15ec8:	beq	16080 <strspn@plt+0x51ec>
   15ecc:	clz	r3, r0
   15ed0:	clz	r2, r1
   15ed4:	sub	r3, r2, r3
   15ed8:	rsbs	r3, r3, #31
   15edc:	addne	r3, r3, r3, lsl #1
   15ee0:	mov	r2, #0
   15ee4:	addne	pc, pc, r3, lsl #2
   15ee8:	nop			; (mov r0, r0)
   15eec:	cmp	r0, r1, lsl #31
   15ef0:	adc	r2, r2, r2
   15ef4:	subcs	r0, r0, r1, lsl #31
   15ef8:	cmp	r0, r1, lsl #30
   15efc:	adc	r2, r2, r2
   15f00:	subcs	r0, r0, r1, lsl #30
   15f04:	cmp	r0, r1, lsl #29
   15f08:	adc	r2, r2, r2
   15f0c:	subcs	r0, r0, r1, lsl #29
   15f10:	cmp	r0, r1, lsl #28
   15f14:	adc	r2, r2, r2
   15f18:	subcs	r0, r0, r1, lsl #28
   15f1c:	cmp	r0, r1, lsl #27
   15f20:	adc	r2, r2, r2
   15f24:	subcs	r0, r0, r1, lsl #27
   15f28:	cmp	r0, r1, lsl #26
   15f2c:	adc	r2, r2, r2
   15f30:	subcs	r0, r0, r1, lsl #26
   15f34:	cmp	r0, r1, lsl #25
   15f38:	adc	r2, r2, r2
   15f3c:	subcs	r0, r0, r1, lsl #25
   15f40:	cmp	r0, r1, lsl #24
   15f44:	adc	r2, r2, r2
   15f48:	subcs	r0, r0, r1, lsl #24
   15f4c:	cmp	r0, r1, lsl #23
   15f50:	adc	r2, r2, r2
   15f54:	subcs	r0, r0, r1, lsl #23
   15f58:	cmp	r0, r1, lsl #22
   15f5c:	adc	r2, r2, r2
   15f60:	subcs	r0, r0, r1, lsl #22
   15f64:	cmp	r0, r1, lsl #21
   15f68:	adc	r2, r2, r2
   15f6c:	subcs	r0, r0, r1, lsl #21
   15f70:	cmp	r0, r1, lsl #20
   15f74:	adc	r2, r2, r2
   15f78:	subcs	r0, r0, r1, lsl #20
   15f7c:	cmp	r0, r1, lsl #19
   15f80:	adc	r2, r2, r2
   15f84:	subcs	r0, r0, r1, lsl #19
   15f88:	cmp	r0, r1, lsl #18
   15f8c:	adc	r2, r2, r2
   15f90:	subcs	r0, r0, r1, lsl #18
   15f94:	cmp	r0, r1, lsl #17
   15f98:	adc	r2, r2, r2
   15f9c:	subcs	r0, r0, r1, lsl #17
   15fa0:	cmp	r0, r1, lsl #16
   15fa4:	adc	r2, r2, r2
   15fa8:	subcs	r0, r0, r1, lsl #16
   15fac:	cmp	r0, r1, lsl #15
   15fb0:	adc	r2, r2, r2
   15fb4:	subcs	r0, r0, r1, lsl #15
   15fb8:	cmp	r0, r1, lsl #14
   15fbc:	adc	r2, r2, r2
   15fc0:	subcs	r0, r0, r1, lsl #14
   15fc4:	cmp	r0, r1, lsl #13
   15fc8:	adc	r2, r2, r2
   15fcc:	subcs	r0, r0, r1, lsl #13
   15fd0:	cmp	r0, r1, lsl #12
   15fd4:	adc	r2, r2, r2
   15fd8:	subcs	r0, r0, r1, lsl #12
   15fdc:	cmp	r0, r1, lsl #11
   15fe0:	adc	r2, r2, r2
   15fe4:	subcs	r0, r0, r1, lsl #11
   15fe8:	cmp	r0, r1, lsl #10
   15fec:	adc	r2, r2, r2
   15ff0:	subcs	r0, r0, r1, lsl #10
   15ff4:	cmp	r0, r1, lsl #9
   15ff8:	adc	r2, r2, r2
   15ffc:	subcs	r0, r0, r1, lsl #9
   16000:	cmp	r0, r1, lsl #8
   16004:	adc	r2, r2, r2
   16008:	subcs	r0, r0, r1, lsl #8
   1600c:	cmp	r0, r1, lsl #7
   16010:	adc	r2, r2, r2
   16014:	subcs	r0, r0, r1, lsl #7
   16018:	cmp	r0, r1, lsl #6
   1601c:	adc	r2, r2, r2
   16020:	subcs	r0, r0, r1, lsl #6
   16024:	cmp	r0, r1, lsl #5
   16028:	adc	r2, r2, r2
   1602c:	subcs	r0, r0, r1, lsl #5
   16030:	cmp	r0, r1, lsl #4
   16034:	adc	r2, r2, r2
   16038:	subcs	r0, r0, r1, lsl #4
   1603c:	cmp	r0, r1, lsl #3
   16040:	adc	r2, r2, r2
   16044:	subcs	r0, r0, r1, lsl #3
   16048:	cmp	r0, r1, lsl #2
   1604c:	adc	r2, r2, r2
   16050:	subcs	r0, r0, r1, lsl #2
   16054:	cmp	r0, r1, lsl #1
   16058:	adc	r2, r2, r2
   1605c:	subcs	r0, r0, r1, lsl #1
   16060:	cmp	r0, r1
   16064:	adc	r2, r2, r2
   16068:	subcs	r0, r0, r1
   1606c:	mov	r0, r2
   16070:	bx	lr
   16074:	moveq	r0, #1
   16078:	movne	r0, #0
   1607c:	bx	lr
   16080:	clz	r2, r1
   16084:	rsb	r2, r2, #31
   16088:	lsr	r0, r0, r2
   1608c:	bx	lr
   16090:	cmp	r0, #0
   16094:	mvnne	r0, #0
   16098:	b	16338 <strspn@plt+0x54a4>
   1609c:	cmp	r1, #0
   160a0:	beq	16090 <strspn@plt+0x51fc>
   160a4:	push	{r0, r1, lr}
   160a8:	bl	15eb0 <strspn@plt+0x501c>
   160ac:	pop	{r1, r2, lr}
   160b0:	mul	r3, r2, r0
   160b4:	sub	r1, r1, r3
   160b8:	bx	lr
   160bc:	cmp	r1, #0
   160c0:	beq	162cc <strspn@plt+0x5438>
   160c4:	eor	ip, r0, r1
   160c8:	rsbmi	r1, r1, #0
   160cc:	subs	r2, r1, #1
   160d0:	beq	16298 <strspn@plt+0x5404>
   160d4:	movs	r3, r0
   160d8:	rsbmi	r3, r0, #0
   160dc:	cmp	r3, r1
   160e0:	bls	162a4 <strspn@plt+0x5410>
   160e4:	tst	r1, r2
   160e8:	beq	162b4 <strspn@plt+0x5420>
   160ec:	clz	r2, r3
   160f0:	clz	r0, r1
   160f4:	sub	r2, r0, r2
   160f8:	rsbs	r2, r2, #31
   160fc:	addne	r2, r2, r2, lsl #1
   16100:	mov	r0, #0
   16104:	addne	pc, pc, r2, lsl #2
   16108:	nop			; (mov r0, r0)
   1610c:	cmp	r3, r1, lsl #31
   16110:	adc	r0, r0, r0
   16114:	subcs	r3, r3, r1, lsl #31
   16118:	cmp	r3, r1, lsl #30
   1611c:	adc	r0, r0, r0
   16120:	subcs	r3, r3, r1, lsl #30
   16124:	cmp	r3, r1, lsl #29
   16128:	adc	r0, r0, r0
   1612c:	subcs	r3, r3, r1, lsl #29
   16130:	cmp	r3, r1, lsl #28
   16134:	adc	r0, r0, r0
   16138:	subcs	r3, r3, r1, lsl #28
   1613c:	cmp	r3, r1, lsl #27
   16140:	adc	r0, r0, r0
   16144:	subcs	r3, r3, r1, lsl #27
   16148:	cmp	r3, r1, lsl #26
   1614c:	adc	r0, r0, r0
   16150:	subcs	r3, r3, r1, lsl #26
   16154:	cmp	r3, r1, lsl #25
   16158:	adc	r0, r0, r0
   1615c:	subcs	r3, r3, r1, lsl #25
   16160:	cmp	r3, r1, lsl #24
   16164:	adc	r0, r0, r0
   16168:	subcs	r3, r3, r1, lsl #24
   1616c:	cmp	r3, r1, lsl #23
   16170:	adc	r0, r0, r0
   16174:	subcs	r3, r3, r1, lsl #23
   16178:	cmp	r3, r1, lsl #22
   1617c:	adc	r0, r0, r0
   16180:	subcs	r3, r3, r1, lsl #22
   16184:	cmp	r3, r1, lsl #21
   16188:	adc	r0, r0, r0
   1618c:	subcs	r3, r3, r1, lsl #21
   16190:	cmp	r3, r1, lsl #20
   16194:	adc	r0, r0, r0
   16198:	subcs	r3, r3, r1, lsl #20
   1619c:	cmp	r3, r1, lsl #19
   161a0:	adc	r0, r0, r0
   161a4:	subcs	r3, r3, r1, lsl #19
   161a8:	cmp	r3, r1, lsl #18
   161ac:	adc	r0, r0, r0
   161b0:	subcs	r3, r3, r1, lsl #18
   161b4:	cmp	r3, r1, lsl #17
   161b8:	adc	r0, r0, r0
   161bc:	subcs	r3, r3, r1, lsl #17
   161c0:	cmp	r3, r1, lsl #16
   161c4:	adc	r0, r0, r0
   161c8:	subcs	r3, r3, r1, lsl #16
   161cc:	cmp	r3, r1, lsl #15
   161d0:	adc	r0, r0, r0
   161d4:	subcs	r3, r3, r1, lsl #15
   161d8:	cmp	r3, r1, lsl #14
   161dc:	adc	r0, r0, r0
   161e0:	subcs	r3, r3, r1, lsl #14
   161e4:	cmp	r3, r1, lsl #13
   161e8:	adc	r0, r0, r0
   161ec:	subcs	r3, r3, r1, lsl #13
   161f0:	cmp	r3, r1, lsl #12
   161f4:	adc	r0, r0, r0
   161f8:	subcs	r3, r3, r1, lsl #12
   161fc:	cmp	r3, r1, lsl #11
   16200:	adc	r0, r0, r0
   16204:	subcs	r3, r3, r1, lsl #11
   16208:	cmp	r3, r1, lsl #10
   1620c:	adc	r0, r0, r0
   16210:	subcs	r3, r3, r1, lsl #10
   16214:	cmp	r3, r1, lsl #9
   16218:	adc	r0, r0, r0
   1621c:	subcs	r3, r3, r1, lsl #9
   16220:	cmp	r3, r1, lsl #8
   16224:	adc	r0, r0, r0
   16228:	subcs	r3, r3, r1, lsl #8
   1622c:	cmp	r3, r1, lsl #7
   16230:	adc	r0, r0, r0
   16234:	subcs	r3, r3, r1, lsl #7
   16238:	cmp	r3, r1, lsl #6
   1623c:	adc	r0, r0, r0
   16240:	subcs	r3, r3, r1, lsl #6
   16244:	cmp	r3, r1, lsl #5
   16248:	adc	r0, r0, r0
   1624c:	subcs	r3, r3, r1, lsl #5
   16250:	cmp	r3, r1, lsl #4
   16254:	adc	r0, r0, r0
   16258:	subcs	r3, r3, r1, lsl #4
   1625c:	cmp	r3, r1, lsl #3
   16260:	adc	r0, r0, r0
   16264:	subcs	r3, r3, r1, lsl #3
   16268:	cmp	r3, r1, lsl #2
   1626c:	adc	r0, r0, r0
   16270:	subcs	r3, r3, r1, lsl #2
   16274:	cmp	r3, r1, lsl #1
   16278:	adc	r0, r0, r0
   1627c:	subcs	r3, r3, r1, lsl #1
   16280:	cmp	r3, r1
   16284:	adc	r0, r0, r0
   16288:	subcs	r3, r3, r1
   1628c:	cmp	ip, #0
   16290:	rsbmi	r0, r0, #0
   16294:	bx	lr
   16298:	teq	ip, r0
   1629c:	rsbmi	r0, r0, #0
   162a0:	bx	lr
   162a4:	movcc	r0, #0
   162a8:	asreq	r0, ip, #31
   162ac:	orreq	r0, r0, #1
   162b0:	bx	lr
   162b4:	clz	r2, r1
   162b8:	rsb	r2, r2, #31
   162bc:	cmp	ip, #0
   162c0:	lsr	r0, r3, r2
   162c4:	rsbmi	r0, r0, #0
   162c8:	bx	lr
   162cc:	cmp	r0, #0
   162d0:	mvngt	r0, #-2147483648	; 0x80000000
   162d4:	movlt	r0, #-2147483648	; 0x80000000
   162d8:	b	16338 <strspn@plt+0x54a4>
   162dc:	cmp	r1, #0
   162e0:	beq	162cc <strspn@plt+0x5438>
   162e4:	push	{r0, r1, lr}
   162e8:	bl	160c4 <strspn@plt+0x5230>
   162ec:	pop	{r1, r2, lr}
   162f0:	mul	r3, r2, r0
   162f4:	sub	r1, r1, r3
   162f8:	bx	lr
   162fc:	cmp	r3, #0
   16300:	cmpeq	r2, #0
   16304:	bne	1631c <strspn@plt+0x5488>
   16308:	cmp	r1, #0
   1630c:	cmpeq	r0, #0
   16310:	mvnne	r1, #0
   16314:	mvnne	r0, #0
   16318:	b	16338 <strspn@plt+0x54a4>
   1631c:	sub	sp, sp, #8
   16320:	push	{sp, lr}
   16324:	bl	16348 <strspn@plt+0x54b4>
   16328:	ldr	lr, [sp, #4]
   1632c:	add	sp, sp, #8
   16330:	pop	{r2, r3}
   16334:	bx	lr
   16338:	push	{r1, lr}
   1633c:	mov	r0, #8
   16340:	bl	10c48 <raise@plt>
   16344:	pop	{r1, pc}
   16348:	cmp	r1, r3
   1634c:	push	{r4, r5, r6, r7, r8, r9, lr}
   16350:	cmpeq	r0, r2
   16354:	mov	r4, r0
   16358:	mov	r5, r1
   1635c:	ldr	r9, [sp, #28]
   16360:	movcc	r0, #0
   16364:	movcc	r1, #0
   16368:	bcc	16460 <strspn@plt+0x55cc>
   1636c:	cmp	r3, #0
   16370:	clzeq	ip, r2
   16374:	clzne	ip, r3
   16378:	addeq	ip, ip, #32
   1637c:	cmp	r5, #0
   16380:	clzeq	r1, r4
   16384:	addeq	r1, r1, #32
   16388:	clzne	r1, r5
   1638c:	sub	ip, ip, r1
   16390:	sub	lr, ip, #32
   16394:	lsl	r7, r3, ip
   16398:	rsb	r8, ip, #32
   1639c:	orr	r7, r7, r2, lsl lr
   163a0:	orr	r7, r7, r2, lsr r8
   163a4:	lsl	r6, r2, ip
   163a8:	cmp	r5, r7
   163ac:	cmpeq	r4, r6
   163b0:	movcc	r0, #0
   163b4:	movcc	r1, #0
   163b8:	bcc	163d4 <strspn@plt+0x5540>
   163bc:	mov	r3, #1
   163c0:	subs	r4, r4, r6
   163c4:	lsl	r1, r3, lr
   163c8:	lsl	r0, r3, ip
   163cc:	orr	r1, r1, r3, lsr r8
   163d0:	sbc	r5, r5, r7
   163d4:	cmp	ip, #0
   163d8:	beq	16460 <strspn@plt+0x55cc>
   163dc:	lsrs	r3, r7, #1
   163e0:	rrx	r2, r6
   163e4:	mov	r6, ip
   163e8:	b	1640c <strspn@plt+0x5578>
   163ec:	subs	r4, r4, r2
   163f0:	sbc	r5, r5, r3
   163f4:	adds	r4, r4, r4
   163f8:	adc	r5, r5, r5
   163fc:	adds	r4, r4, #1
   16400:	adc	r5, r5, #0
   16404:	subs	r6, r6, #1
   16408:	beq	16428 <strspn@plt+0x5594>
   1640c:	cmp	r5, r3
   16410:	cmpeq	r4, r2
   16414:	bcs	163ec <strspn@plt+0x5558>
   16418:	adds	r4, r4, r4
   1641c:	adc	r5, r5, r5
   16420:	subs	r6, r6, #1
   16424:	bne	1640c <strspn@plt+0x5578>
   16428:	lsr	r6, r4, ip
   1642c:	lsr	r7, r5, ip
   16430:	orr	r6, r6, r5, lsl r8
   16434:	adds	r2, r0, r4
   16438:	orr	r6, r6, r5, lsr lr
   1643c:	adc	r3, r1, r5
   16440:	lsl	r1, r7, ip
   16444:	orr	r1, r1, r6, lsl lr
   16448:	lsl	r0, r6, ip
   1644c:	orr	r1, r1, r6, lsr r8
   16450:	subs	r0, r2, r0
   16454:	mov	r4, r6
   16458:	mov	r5, r7
   1645c:	sbc	r1, r3, r1
   16460:	cmp	r9, #0
   16464:	popeq	{r4, r5, r6, r7, r8, r9, pc}
   16468:	strd	r4, [r9]
   1646c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   16470:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16474:	mov	r7, r0
   16478:	ldr	r6, [pc, #72]	; 164c8 <strspn@plt+0x5634>
   1647c:	ldr	r5, [pc, #72]	; 164cc <strspn@plt+0x5638>
   16480:	add	r6, pc, r6
   16484:	add	r5, pc, r5
   16488:	sub	r6, r6, r5
   1648c:	mov	r8, r1
   16490:	mov	r9, r2
   16494:	bl	10c10 <calloc@plt-0x20>
   16498:	asrs	r6, r6, #2
   1649c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   164a0:	mov	r4, #0
   164a4:	add	r4, r4, #1
   164a8:	ldr	r3, [r5], #4
   164ac:	mov	r2, r9
   164b0:	mov	r1, r8
   164b4:	mov	r0, r7
   164b8:	blx	r3
   164bc:	cmp	r6, r4
   164c0:	bne	164a4 <strspn@plt+0x5610>
   164c4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   164c8:	andeq	r1, r1, r8, lsl #21
   164cc:	andeq	r1, r1, r0, lsl #21
   164d0:	bx	lr
   164d4:	ldr	r3, [pc, #12]	; 164e8 <strspn@plt+0x5654>
   164d8:	mov	r1, #0
   164dc:	add	r3, pc, r3
   164e0:	ldr	r2, [r3]
   164e4:	b	10de0 <__cxa_atexit@plt>
   164e8:	andeq	r1, r1, r0, lsl #24

Disassembly of section .fini:

000164ec <.fini>:
   164ec:	push	{r3, lr}
   164f0:	pop	{r3, pc}
