
../repos/charybdis/wsockd/.libs/wsockd:     file format elf32-littlearm


Disassembly of section .init:

00010ca0 <.init>:
   10ca0:	push	{r3, lr}
   10ca4:	bl	10f9c <rb_base64_encode@plt+0x48>
   10ca8:	pop	{r3, pc}

Disassembly of section .plt:

00010cac <open@plt-0x14>:
   10cac:	push	{lr}		; (str lr, [sp, #-4]!)
   10cb0:	ldr	lr, [pc, #4]	; 10cbc <open@plt-0x4>
   10cb4:	add	lr, pc, lr
   10cb8:	ldr	pc, [lr, #8]!
   10cbc:	andeq	r6, r1, r4, asr #6

00010cc0 <open@plt>:
   10cc0:	add	ip, pc, #0, 12
   10cc4:	add	ip, ip, #90112	; 0x16000
   10cc8:	ldr	pc, [ip, #836]!	; 0x344

00010ccc <sigemptyset@plt>:
   10ccc:	add	ip, pc, #0, 12
   10cd0:	add	ip, ip, #90112	; 0x16000
   10cd4:	ldr	pc, [ip, #828]!	; 0x33c

00010cd8 <strerror@plt>:
   10cd8:	add	ip, pc, #0, 12
   10cdc:	add	ip, ip, #90112	; 0x16000
   10ce0:	ldr	pc, [ip, #820]!	; 0x334

00010ce4 <rb_get_type@plt>:
   10ce4:	add	ip, pc, #0, 12
   10ce8:	add	ip, ip, #90112	; 0x16000
   10cec:	ldr	pc, [ip, #812]!	; 0x32c

00010cf0 <abort@plt>:
   10cf0:	add	ip, pc, #0, 12
   10cf4:	add	ip, ip, #90112	; 0x16000
   10cf8:	ldr	pc, [ip, #804]!	; 0x324

00010cfc <rb_event_addish@plt>:
   10cfc:	add	ip, pc, #0, 12
   10d00:	add	ip, ip, #90112	; 0x16000
   10d04:	ldr	pc, [ip, #796]!	; 0x31c

00010d08 <rb_ignore_errno@plt>:
   10d08:	add	ip, pc, #0, 12
   10d0c:	add	ip, ip, #90112	; 0x16000
   10d10:	ldr	pc, [ip, #788]!	; 0x314

00010d14 <__libc_start_main@plt>:
   10d14:	add	ip, pc, #0, 12
   10d18:	add	ip, ip, #90112	; 0x16000
   10d1c:	ldr	pc, [ip, #780]!	; 0x30c

00010d20 <rb_setselect@plt>:
   10d20:	add	ip, pc, #0, 12
   10d24:	add	ip, ip, #90112	; 0x16000
   10d28:	ldr	pc, [ip, #772]!	; 0x304

00010d2c <__gmon_start__@plt>:
   10d2c:	add	ip, pc, #0, 12
   10d30:	add	ip, ip, #90112	; 0x16000
   10d34:	ldr	pc, [ip, #764]!	; 0x2fc

00010d38 <rb_send_fd_buf@plt>:
   10d38:	add	ip, pc, #0, 12
   10d3c:	add	ip, ip, #90112	; 0x16000
   10d40:	ldr	pc, [ip, #756]!	; 0x2f4

00010d44 <vsnprintf@plt>:
   10d44:	add	ip, pc, #0, 12
   10d48:	add	ip, ip, #90112	; 0x16000
   10d4c:	ldr	pc, [ip, #748]!	; 0x2ec

00010d50 <getenv@plt>:
   10d50:	add	ip, pc, #0, 12
   10d54:	add	ip, ip, #90112	; 0x16000
   10d58:	ldr	pc, [ip, #740]!	; 0x2e4

00010d5c <calloc@plt>:
   10d5c:	add	ip, pc, #0, 12
   10d60:	add	ip, ip, #90112	; 0x16000
   10d64:	ldr	pc, [ip, #732]!	; 0x2dc

00010d68 <htons@plt>:
   10d68:	add	ip, pc, #0, 12
   10d6c:	add	ip, ip, #90112	; 0x16000
   10d70:	ldr	pc, [ip, #724]!	; 0x2d4

00010d74 <rb_set_nb@plt>:
   10d74:	add	ip, pc, #0, 12
   10d78:	add	ip, ip, #90112	; 0x16000
   10d7c:	ldr	pc, [ip, #716]!	; 0x2cc

00010d80 <memset@plt>:
   10d80:	add	ip, pc, #0, 12
   10d84:	add	ip, ip, #90112	; 0x16000
   10d88:	ldr	pc, [ip, #708]!	; 0x2c4

00010d8c <__assert_fail@plt>:
   10d8c:	add	ip, pc, #0, 12
   10d90:	add	ip, ip, #90112	; 0x16000
   10d94:	ldr	pc, [ip, #700]!	; 0x2bc

00010d98 <rb_linebuf_parse@plt>:
   10d98:	add	ip, pc, #0, 12
   10d9c:	add	ip, ip, #90112	; 0x16000
   10da0:	ldr	pc, [ip, #692]!	; 0x2b4

00010da4 <rb_strlcpy@plt>:
   10da4:	add	ip, pc, #0, 12
   10da8:	add	ip, ip, #90112	; 0x16000
   10dac:	ldr	pc, [ip, #684]!	; 0x2ac

00010db0 <rb_init_rawbuffers@plt>:
   10db0:	add	ip, pc, #0, 12
   10db4:	add	ip, ip, #90112	; 0x16000
   10db8:	ldr	pc, [ip, #676]!	; 0x2a4

00010dbc <free@plt>:
   10dbc:	add	ip, pc, #0, 12
   10dc0:	add	ip, ip, #90112	; 0x16000
   10dc4:	ldr	pc, [ip, #668]!	; 0x29c

00010dc8 <rb_lib_loop@plt>:
   10dc8:	add	ip, pc, #0, 12
   10dcc:	add	ip, ip, #90112	; 0x16000
   10dd0:	ldr	pc, [ip, #660]!	; 0x294

00010dd4 <rb_read@plt>:
   10dd4:	add	ip, pc, #0, 12
   10dd8:	add	ip, ip, #90112	; 0x16000
   10ddc:	ldr	pc, [ip, #652]!	; 0x28c

00010de0 <rb_set_type@plt>:
   10de0:	add	ip, pc, #0, 12
   10de4:	add	ip, ip, #90112	; 0x16000
   10de8:	ldr	pc, [ip, #644]!	; 0x284

00010dec <rb_linebuf_get@plt>:
   10dec:	add	ip, pc, #0, 12
   10df0:	add	ip, ip, #90112	; 0x16000
   10df4:	ldr	pc, [ip, #636]!	; 0x27c

00010df8 <ntohs@plt>:
   10df8:	add	ip, pc, #0, 12
   10dfc:	add	ip, ip, #90112	; 0x16000
   10e00:	ldr	pc, [ip, #628]!	; 0x274

00010e04 <rb_linebuf_flush@plt>:
   10e04:	add	ip, pc, #0, 12
   10e08:	add	ip, ip, #90112	; 0x16000
   10e0c:	ldr	pc, [ip, #620]!	; 0x26c

00010e10 <strlen@plt>:
   10e10:	add	ip, pc, #0, 12
   10e14:	add	ip, ip, #90112	; 0x16000
   10e18:	ldr	pc, [ip, #612]!	; 0x264

00010e1c <memcpy@plt>:
   10e1c:	add	ip, pc, #0, 12
   10e20:	add	ip, ip, #90112	; 0x16000
   10e24:	ldr	pc, [ip, #604]!	; 0x25c

00010e28 <rb_linebuf_donebuf@plt>:
   10e28:	add	ip, pc, #0, 12
   10e2c:	add	ip, ip, #90112	; 0x16000
   10e30:	ldr	pc, [ip, #596]!	; 0x254

00010e34 <rb_strcasestr@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #90112	; 0x16000
   10e3c:	ldr	pc, [ip, #588]!	; 0x24c

00010e40 <rb_close@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #90112	; 0x16000
   10e48:	ldr	pc, [ip, #580]!	; 0x244

00010e4c <sigaddset@plt>:
   10e4c:	add	ip, pc, #0, 12
   10e50:	add	ip, ip, #90112	; 0x16000
   10e54:	ldr	pc, [ip, #572]!	; 0x23c

00010e58 <atoi@plt>:
   10e58:	add	ip, pc, #0, 12
   10e5c:	add	ip, ip, #90112	; 0x16000
   10e60:	ldr	pc, [ip, #564]!	; 0x234

00010e64 <rb_rawbuf_length@plt>:
   10e64:	add	ip, pc, #0, 12
   10e68:	add	ip, ip, #90112	; 0x16000
   10e6c:	ldr	pc, [ip, #556]!	; 0x22c

00010e70 <rb_free_rawbuffer@plt>:
   10e70:	add	ip, pc, #0, 12
   10e74:	add	ip, ip, #90112	; 0x16000
   10e78:	ldr	pc, [ip, #548]!	; 0x224

00010e7c <close@plt>:
   10e7c:	add	ip, pc, #0, 12
   10e80:	add	ip, ip, #90112	; 0x16000
   10e84:	ldr	pc, [ip, #540]!	; 0x21c

00010e88 <fwrite@plt>:
   10e88:	add	ip, pc, #0, 12
   10e8c:	add	ip, ip, #90112	; 0x16000
   10e90:	ldr	pc, [ip, #532]!	; 0x214

00010e94 <rb_outofmemory@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #90112	; 0x16000
   10e9c:	ldr	pc, [ip, #524]!	; 0x20c

00010ea0 <rb_rawbuf_get@plt>:
   10ea0:	add	ip, pc, #0, 12
   10ea4:	add	ip, ip, #90112	; 0x16000
   10ea8:	ldr	pc, [ip, #516]!	; 0x204

00010eac <sigaction@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #90112	; 0x16000
   10eb4:	ldr	pc, [ip, #508]!	; 0x1fc

00010eb8 <rb_lib_init@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #90112	; 0x16000
   10ec0:	ldr	pc, [ip, #500]!	; 0x1f4

00010ec4 <rb_new_rawbuffer@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #90112	; 0x16000
   10ecc:	ldr	pc, [ip, #492]!	; 0x1ec

00010ed0 <rb_open@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #90112	; 0x16000
   10ed8:	ldr	pc, [ip, #484]!	; 0x1e4

00010edc <rb_recv_fd_buf@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #90112	; 0x16000
   10ee4:	ldr	pc, [ip, #476]!	; 0x1dc

00010ee8 <dup2@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #90112	; 0x16000
   10ef0:	ldr	pc, [ip, #468]!	; 0x1d4

00010ef4 <rb_linebuf_newbuf@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #90112	; 0x16000
   10efc:	ldr	pc, [ip, #460]!	; 0x1cc

00010f00 <htonl@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #90112	; 0x16000
   10f08:	ldr	pc, [ip, #452]!	; 0x1c4

00010f0c <rb_linebuf_init@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #90112	; 0x16000
   10f14:	ldr	pc, [ip, #444]!	; 0x1bc

00010f18 <getrlimit@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #90112	; 0x16000
   10f20:	ldr	pc, [ip, #436]!	; 0x1b4

00010f24 <rb_rawbuf_append@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #90112	; 0x16000
   10f2c:	ldr	pc, [ip, #428]!	; 0x1ac

00010f30 <rb_rawbuf_flush@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #90112	; 0x16000
   10f38:	ldr	pc, [ip, #420]!	; 0x1a4

00010f3c <exit@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #90112	; 0x16000
   10f44:	ldr	pc, [ip, #412]!	; 0x19c

00010f48 <__errno_location@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #90112	; 0x16000
   10f50:	ldr	pc, [ip, #404]!	; 0x194

00010f54 <rb_base64_encode@plt>:
   10f54:	add	ip, pc, #0, 12
   10f58:	add	ip, ip, #90112	; 0x16000
   10f5c:	ldr	pc, [ip, #396]!	; 0x18c

Disassembly of section .text:

00010f60 <.text>:
   10f60:	mov	fp, #0
   10f64:	mov	lr, #0
   10f68:	pop	{r1}		; (ldr r1, [sp], #4)
   10f6c:	mov	r2, sp
   10f70:	push	{r2}		; (str r2, [sp, #-4]!)
   10f74:	push	{r0}		; (str r0, [sp, #-4]!)
   10f78:	ldr	ip, [pc, #16]	; 10f90 <rb_base64_encode@plt+0x3c>
   10f7c:	push	{ip}		; (str ip, [sp, #-4]!)
   10f80:	ldr	r0, [pc, #12]	; 10f94 <rb_base64_encode@plt+0x40>
   10f84:	ldr	r3, [pc, #12]	; 10f98 <rb_base64_encode@plt+0x44>
   10f88:	bl	10d14 <__libc_start_main@plt>
   10f8c:	bl	10cf0 <abort@plt>
   10f90:	andeq	r6, r1, ip, ror #10
   10f94:	strdeq	r3, [r1], -r8
   10f98:	andeq	r6, r1, ip, lsl #10
   10f9c:	ldr	r3, [pc, #20]	; 10fb8 <rb_base64_encode@plt+0x64>
   10fa0:	ldr	r2, [pc, #20]	; 10fbc <rb_base64_encode@plt+0x68>
   10fa4:	add	r3, pc, r3
   10fa8:	ldr	r2, [r3, r2]
   10fac:	cmp	r2, #0
   10fb0:	bxeq	lr
   10fb4:	b	10d2c <__gmon_start__@plt>
   10fb8:	andeq	r6, r1, r4, asr r0
   10fbc:	andeq	r0, r0, ip, ror #1
   10fc0:	ldr	r0, [pc, #24]	; 10fe0 <rb_base64_encode@plt+0x8c>
   10fc4:	ldr	r3, [pc, #24]	; 10fe4 <rb_base64_encode@plt+0x90>
   10fc8:	cmp	r3, r0
   10fcc:	bxeq	lr
   10fd0:	ldr	r3, [pc, #16]	; 10fe8 <rb_base64_encode@plt+0x94>
   10fd4:	cmp	r3, #0
   10fd8:	bxeq	lr
   10fdc:	bx	r3
   10fe0:	andeq	r7, r2, r0, lsl #2
   10fe4:	andeq	r7, r2, r0, lsl #2
   10fe8:	andeq	r0, r0, r0
   10fec:	ldr	r0, [pc, #36]	; 11018 <rb_base64_encode@plt+0xc4>
   10ff0:	ldr	r1, [pc, #36]	; 1101c <rb_base64_encode@plt+0xc8>
   10ff4:	sub	r1, r1, r0
   10ff8:	asr	r1, r1, #2
   10ffc:	add	r1, r1, r1, lsr #31
   11000:	asrs	r1, r1, #1
   11004:	bxeq	lr
   11008:	ldr	r3, [pc, #16]	; 11020 <rb_base64_encode@plt+0xcc>
   1100c:	cmp	r3, #0
   11010:	bxeq	lr
   11014:	bx	r3
   11018:	andeq	r7, r2, r0, lsl #2
   1101c:	andeq	r7, r2, r0, lsl #2
   11020:	andeq	r0, r0, r0
   11024:	push	{r4, lr}
   11028:	ldr	r4, [pc, #24]	; 11048 <rb_base64_encode@plt+0xf4>
   1102c:	ldrb	r3, [r4]
   11030:	cmp	r3, #0
   11034:	popne	{r4, pc}
   11038:	bl	10fc0 <rb_base64_encode@plt+0x6c>
   1103c:	mov	r3, #1
   11040:	strb	r3, [r4]
   11044:	pop	{r4, pc}
   11048:	andeq	r7, r2, r0, lsl #2
   1104c:	b	10fec <rb_base64_encode@plt+0x98>
   11050:	str	fp, [sp, #-8]!
   11054:	str	lr, [sp, #4]
   11058:	add	fp, sp, #4
   1105c:	sub	sp, sp, #16
   11060:	str	r0, [fp, #-8]
   11064:	str	r1, [fp, #-12]
   11068:	str	r2, [fp, #-16]
   1106c:	ldr	r3, [fp, #-8]
   11070:	cmp	r3, #0
   11074:	bne	11098 <rb_base64_encode@plt+0x144>
   11078:	ldr	r3, [pc, #268]	; 1118c <rb_base64_encode@plt+0x238>
   1107c:	add	r3, pc, r3
   11080:	mov	r2, #143	; 0x8f
   11084:	ldr	r1, [pc, #260]	; 11190 <rb_base64_encode@plt+0x23c>
   11088:	add	r1, pc, r1
   1108c:	ldr	r0, [pc, #256]	; 11194 <rb_base64_encode@plt+0x240>
   11090:	add	r0, pc, r0
   11094:	bl	10d8c <__assert_fail@plt>
   11098:	ldr	r3, [fp, #-12]
   1109c:	cmp	r3, #0
   110a0:	bne	110c4 <rb_base64_encode@plt+0x170>
   110a4:	ldr	r3, [pc, #236]	; 11198 <rb_base64_encode@plt+0x244>
   110a8:	add	r3, pc, r3
   110ac:	mov	r2, #144	; 0x90
   110b0:	ldr	r1, [pc, #228]	; 1119c <rb_base64_encode@plt+0x248>
   110b4:	add	r1, pc, r1
   110b8:	ldr	r0, [pc, #224]	; 111a0 <rb_base64_encode@plt+0x24c>
   110bc:	add	r0, pc, r0
   110c0:	bl	10d8c <__assert_fail@plt>
   110c4:	ldr	r3, [fp, #-16]
   110c8:	cmp	r3, #0
   110cc:	bne	110f0 <rb_base64_encode@plt+0x19c>
   110d0:	ldr	r3, [pc, #204]	; 111a4 <rb_base64_encode@plt+0x250>
   110d4:	add	r3, pc, r3
   110d8:	mov	r2, #145	; 0x91
   110dc:	ldr	r1, [pc, #196]	; 111a8 <rb_base64_encode@plt+0x254>
   110e0:	add	r1, pc, r1
   110e4:	ldr	r0, [pc, #192]	; 111ac <rb_base64_encode@plt+0x258>
   110e8:	add	r0, pc, r0
   110ec:	bl	10d8c <__assert_fail@plt>
   110f0:	ldr	r3, [fp, #-12]
   110f4:	ldr	r2, [fp, #-8]
   110f8:	str	r2, [r3]
   110fc:	ldr	r3, [fp, #-12]
   11100:	mov	r2, #0
   11104:	str	r2, [r3, #4]
   11108:	ldr	r3, [fp, #-16]
   1110c:	ldr	r2, [r3]
   11110:	ldr	r3, [fp, #-12]
   11114:	str	r2, [r3, #8]
   11118:	ldr	r3, [fp, #-16]
   1111c:	ldr	r3, [r3]
   11120:	cmp	r3, #0
   11124:	beq	1113c <rb_base64_encode@plt+0x1e8>
   11128:	ldr	r3, [fp, #-16]
   1112c:	ldr	r3, [r3]
   11130:	ldr	r2, [fp, #-12]
   11134:	str	r2, [r3, #4]
   11138:	b	11158 <rb_base64_encode@plt+0x204>
   1113c:	ldr	r3, [fp, #-16]
   11140:	ldr	r3, [r3, #4]
   11144:	cmp	r3, #0
   11148:	bne	11158 <rb_base64_encode@plt+0x204>
   1114c:	ldr	r3, [fp, #-16]
   11150:	ldr	r2, [fp, #-12]
   11154:	str	r2, [r3, #4]
   11158:	ldr	r3, [fp, #-16]
   1115c:	ldr	r2, [fp, #-12]
   11160:	str	r2, [r3]
   11164:	ldr	r3, [fp, #-16]
   11168:	ldr	r3, [r3, #8]
   1116c:	add	r2, r3, #1
   11170:	ldr	r3, [fp, #-16]
   11174:	str	r2, [r3, #8]
   11178:	nop	{0}
   1117c:	sub	sp, fp, #4
   11180:	ldr	fp, [sp]
   11184:	add	sp, sp, #4
   11188:	pop	{pc}		; (ldr pc, [sp], #4)
   1118c:	andeq	r5, r0, ip, lsr #15
   11190:	andeq	r5, r0, ip, ror #9
   11194:	andeq	r5, r0, r0, lsl #10
   11198:	andeq	r5, r0, r0, lsl #15
   1119c:	andeq	r5, r0, r0, asr #9
   111a0:	andeq	r5, r0, r4, ror #9
   111a4:	andeq	r5, r0, r4, asr r7
   111a8:	muleq	r0, r4, r4
   111ac:	andeq	r5, r0, r4, asr #9
   111b0:	str	fp, [sp, #-8]!
   111b4:	str	lr, [sp, #4]
   111b8:	add	fp, sp, #4
   111bc:	sub	sp, sp, #16
   111c0:	str	r0, [fp, #-8]
   111c4:	str	r1, [fp, #-12]
   111c8:	str	r2, [fp, #-16]
   111cc:	ldr	r3, [fp, #-12]
   111d0:	cmp	r3, #0
   111d4:	bne	111f8 <rb_base64_encode@plt+0x2a4>
   111d8:	ldr	r3, [pc, #268]	; 112ec <rb_base64_encode@plt+0x398>
   111dc:	add	r3, pc, r3
   111e0:	mov	r2, #211	; 0xd3
   111e4:	ldr	r1, [pc, #260]	; 112f0 <rb_base64_encode@plt+0x39c>
   111e8:	add	r1, pc, r1
   111ec:	ldr	r0, [pc, #256]	; 112f4 <rb_base64_encode@plt+0x3a0>
   111f0:	add	r0, pc, r0
   111f4:	bl	10d8c <__assert_fail@plt>
   111f8:	ldr	r3, [fp, #-16]
   111fc:	cmp	r3, #0
   11200:	bne	11224 <rb_base64_encode@plt+0x2d0>
   11204:	ldr	r3, [pc, #236]	; 112f8 <rb_base64_encode@plt+0x3a4>
   11208:	add	r3, pc, r3
   1120c:	mov	r2, #212	; 0xd4
   11210:	ldr	r1, [pc, #228]	; 112fc <rb_base64_encode@plt+0x3a8>
   11214:	add	r1, pc, r1
   11218:	ldr	r0, [pc, #224]	; 11300 <rb_base64_encode@plt+0x3ac>
   1121c:	add	r0, pc, r0
   11220:	bl	10d8c <__assert_fail@plt>
   11224:	ldr	r3, [fp, #-8]
   11228:	cmp	r3, #0
   1122c:	bne	11250 <rb_base64_encode@plt+0x2fc>
   11230:	ldr	r3, [pc, #204]	; 11304 <rb_base64_encode@plt+0x3b0>
   11234:	add	r3, pc, r3
   11238:	mov	r2, #213	; 0xd5
   1123c:	ldr	r1, [pc, #196]	; 11308 <rb_base64_encode@plt+0x3b4>
   11240:	add	r1, pc, r1
   11244:	ldr	r0, [pc, #192]	; 1130c <rb_base64_encode@plt+0x3b8>
   11248:	add	r0, pc, r0
   1124c:	bl	10d8c <__assert_fail@plt>
   11250:	ldr	r3, [fp, #-12]
   11254:	ldr	r2, [fp, #-8]
   11258:	str	r2, [r3]
   1125c:	ldr	r3, [fp, #-12]
   11260:	mov	r2, #0
   11264:	str	r2, [r3, #8]
   11268:	ldr	r3, [fp, #-16]
   1126c:	ldr	r2, [r3, #4]
   11270:	ldr	r3, [fp, #-12]
   11274:	str	r2, [r3, #4]
   11278:	ldr	r3, [fp, #-16]
   1127c:	ldr	r3, [r3, #4]
   11280:	cmp	r3, #0
   11284:	beq	1129c <rb_base64_encode@plt+0x348>
   11288:	ldr	r3, [fp, #-16]
   1128c:	ldr	r3, [r3, #4]
   11290:	ldr	r2, [fp, #-12]
   11294:	str	r2, [r3, #8]
   11298:	b	112b8 <rb_base64_encode@plt+0x364>
   1129c:	ldr	r3, [fp, #-16]
   112a0:	ldr	r3, [r3]
   112a4:	cmp	r3, #0
   112a8:	bne	112b8 <rb_base64_encode@plt+0x364>
   112ac:	ldr	r3, [fp, #-16]
   112b0:	ldr	r2, [fp, #-12]
   112b4:	str	r2, [r3]
   112b8:	ldr	r3, [fp, #-16]
   112bc:	ldr	r2, [fp, #-12]
   112c0:	str	r2, [r3, #4]
   112c4:	ldr	r3, [fp, #-16]
   112c8:	ldr	r3, [r3, #8]
   112cc:	add	r2, r3, #1
   112d0:	ldr	r3, [fp, #-16]
   112d4:	str	r2, [r3, #8]
   112d8:	nop	{0}
   112dc:	sub	sp, fp, #4
   112e0:	ldr	fp, [sp]
   112e4:	add	sp, sp, #4
   112e8:	pop	{pc}		; (ldr pc, [sp], #4)
   112ec:	andeq	r5, r0, r8, ror #12
   112f0:	andeq	r5, r0, ip, lsl #7
   112f4:			; <UNDEFINED> instruction: 0x000053b0
   112f8:	andeq	r5, r0, ip, lsr r6
   112fc:	andeq	r5, r0, r0, ror #6
   11300:	muleq	r0, r0, r3
   11304:	andeq	r5, r0, r0, lsl r6
   11308:	andeq	r5, r0, r4, lsr r3
   1130c:	andeq	r5, r0, r8, asr #6
   11310:	str	fp, [sp, #-8]!
   11314:	str	lr, [sp, #4]
   11318:	add	fp, sp, #4
   1131c:	sub	sp, sp, #8
   11320:	str	r0, [fp, #-8]
   11324:	str	r1, [fp, #-12]
   11328:	ldr	r3, [fp, #-8]
   1132c:	cmp	r3, #0
   11330:	bne	11354 <rb_base64_encode@plt+0x400>
   11334:	ldr	r3, [pc, #248]	; 11434 <rb_base64_encode@plt+0x4e0>
   11338:	add	r3, pc, r3
   1133c:	mov	r2, #235	; 0xeb
   11340:	ldr	r1, [pc, #240]	; 11438 <rb_base64_encode@plt+0x4e4>
   11344:	add	r1, pc, r1
   11348:	ldr	r0, [pc, #236]	; 1143c <rb_base64_encode@plt+0x4e8>
   1134c:	add	r0, pc, r0
   11350:	bl	10d8c <__assert_fail@plt>
   11354:	ldr	r3, [fp, #-12]
   11358:	cmp	r3, #0
   1135c:	bne	11380 <rb_base64_encode@plt+0x42c>
   11360:	ldr	r3, [pc, #216]	; 11440 <rb_base64_encode@plt+0x4ec>
   11364:	add	r3, pc, r3
   11368:	mov	r2, #236	; 0xec
   1136c:	ldr	r1, [pc, #208]	; 11444 <rb_base64_encode@plt+0x4f0>
   11370:	add	r1, pc, r1
   11374:	ldr	r0, [pc, #204]	; 11448 <rb_base64_encode@plt+0x4f4>
   11378:	add	r0, pc, r0
   1137c:	bl	10d8c <__assert_fail@plt>
   11380:	ldr	r3, [fp, #-8]
   11384:	ldr	r3, [r3, #8]
   11388:	cmp	r3, #0
   1138c:	beq	113a8 <rb_base64_encode@plt+0x454>
   11390:	ldr	r3, [fp, #-8]
   11394:	ldr	r3, [r3, #8]
   11398:	ldr	r2, [fp, #-8]
   1139c:	ldr	r2, [r2, #4]
   113a0:	str	r2, [r3, #4]
   113a4:	b	113b8 <rb_base64_encode@plt+0x464>
   113a8:	ldr	r3, [fp, #-8]
   113ac:	ldr	r2, [r3, #4]
   113b0:	ldr	r3, [fp, #-12]
   113b4:	str	r2, [r3, #4]
   113b8:	ldr	r3, [fp, #-8]
   113bc:	ldr	r3, [r3, #4]
   113c0:	cmp	r3, #0
   113c4:	beq	113e0 <rb_base64_encode@plt+0x48c>
   113c8:	ldr	r3, [fp, #-8]
   113cc:	ldr	r3, [r3, #4]
   113d0:	ldr	r2, [fp, #-8]
   113d4:	ldr	r2, [r2, #8]
   113d8:	str	r2, [r3, #8]
   113dc:	b	113f0 <rb_base64_encode@plt+0x49c>
   113e0:	ldr	r3, [fp, #-8]
   113e4:	ldr	r2, [r3, #8]
   113e8:	ldr	r3, [fp, #-12]
   113ec:	str	r2, [r3]
   113f0:	ldr	r3, [fp, #-8]
   113f4:	mov	r2, #0
   113f8:	str	r2, [r3, #4]
   113fc:	ldr	r3, [fp, #-8]
   11400:	ldr	r2, [r3, #4]
   11404:	ldr	r3, [fp, #-8]
   11408:	str	r2, [r3, #8]
   1140c:	ldr	r3, [fp, #-12]
   11410:	ldr	r3, [r3, #8]
   11414:	sub	r2, r3, #1
   11418:	ldr	r3, [fp, #-12]
   1141c:	str	r2, [r3, #8]
   11420:	nop	{0}
   11424:	sub	sp, fp, #4
   11428:	ldr	fp, [sp]
   1142c:	add	sp, sp, #4
   11430:	pop	{pc}		; (ldr pc, [sp], #4)
   11434:	strdeq	r5, [r0], -ip
   11438:	andeq	r5, r0, r0, lsr r2
   1143c:	andeq	r5, r0, r4, asr r2
   11440:	ldrdeq	r5, [r0], -r0
   11444:	andeq	r5, r0, r4, lsl #4
   11448:	andeq	r5, r0, r4, lsr r2
   1144c:	str	fp, [sp, #-8]!
   11450:	str	lr, [sp, #4]
   11454:	add	fp, sp, #4
   11458:	sub	sp, sp, #16
   1145c:	str	r0, [fp, #-16]
   11460:	ldr	r1, [fp, #-16]
   11464:	mov	r0, #1
   11468:	bl	10d5c <calloc@plt>
   1146c:	mov	r3, r0
   11470:	str	r3, [fp, #-8]
   11474:	ldr	r3, [fp, #-8]
   11478:	cmp	r3, #0
   1147c:	moveq	r3, #1
   11480:	movne	r3, #0
   11484:	uxtb	r3, r3
   11488:	cmp	r3, #0
   1148c:	beq	11494 <rb_base64_encode@plt+0x540>
   11490:	bl	10e94 <rb_outofmemory@plt>
   11494:	ldr	r3, [fp, #-8]
   11498:	mov	r0, r3
   1149c:	sub	sp, fp, #4
   114a0:	ldr	fp, [sp]
   114a4:	add	sp, sp, #4
   114a8:	pop	{pc}		; (ldr pc, [sp], #4)
   114ac:	str	fp, [sp, #-8]!
   114b0:	str	lr, [sp, #4]
   114b4:	add	fp, sp, #4
   114b8:	sub	sp, sp, #8
   114bc:	str	r0, [fp, #-8]
   114c0:	ldr	r3, [fp, #-8]
   114c4:	cmp	r3, #0
   114c8:	movne	r3, #1
   114cc:	moveq	r3, #0
   114d0:	uxtb	r3, r3
   114d4:	cmp	r3, #0
   114d8:	beq	114e4 <rb_base64_encode@plt+0x590>
   114dc:	ldr	r0, [fp, #-8]
   114e0:	bl	10dbc <free@plt>
   114e4:	nop	{0}
   114e8:	sub	sp, fp, #4
   114ec:	ldr	fp, [sp]
   114f0:	add	sp, sp, #4
   114f4:	pop	{pc}		; (ldr pc, [sp], #4)
   114f8:	push	{fp}		; (str fp, [sp, #-4]!)
   114fc:	add	fp, sp, #0
   11500:	sub	sp, sp, #20
   11504:	str	r0, [fp, #-16]
   11508:	ldr	r3, [fp, #-16]
   1150c:	ldr	r3, [r3]
   11510:	str	r3, [fp, #-8]
   11514:	ldr	r3, [fp, #-8]
   11518:	mov	r0, r3
   1151c:	add	sp, fp, #0
   11520:	pop	{fp}		; (ldr fp, [sp], #4)
   11524:	bx	lr
   11528:	push	{fp}		; (str fp, [sp, #-4]!)
   1152c:	add	fp, sp, #0
   11530:	sub	sp, sp, #12
   11534:	str	r0, [fp, #-8]
   11538:	str	r1, [fp, #-12]
   1153c:	ldr	r2, [fp, #-12]
   11540:	ldr	r3, [fp, #-8]
   11544:	str	r2, [r3]
   11548:	nop	{0}
   1154c:	add	sp, fp, #0
   11550:	pop	{fp}		; (ldr fp, [sp], #4)
   11554:	bx	lr
   11558:	push	{fp}		; (str fp, [sp, #-4]!)
   1155c:	add	fp, sp, #0
   11560:	sub	sp, sp, #12
   11564:	str	r0, [fp, #-8]
   11568:	str	r1, [fp, #-12]
   1156c:	ldr	r3, [fp, #-8]
   11570:	ldrb	r3, [r3]
   11574:	bic	r3, r3, #15
   11578:	uxtb	r2, r3
   1157c:	ldr	r3, [fp, #-8]
   11580:	strb	r2, [r3]
   11584:	ldr	r3, [fp, #-8]
   11588:	ldrb	r3, [r3]
   1158c:	sxtb	r2, r3
   11590:	ldr	r3, [fp, #-12]
   11594:	sxtb	r3, r3
   11598:	and	r3, r3, #15
   1159c:	sxtb	r3, r3
   115a0:	orr	r3, r2, r3
   115a4:	sxtb	r3, r3
   115a8:	uxtb	r2, r3
   115ac:	ldr	r3, [fp, #-8]
   115b0:	strb	r2, [r3]
   115b4:	nop	{0}
   115b8:	add	sp, fp, #0
   115bc:	pop	{fp}		; (ldr fp, [sp], #4)
   115c0:	bx	lr
   115c4:	push	{fp}		; (str fp, [sp, #-4]!)
   115c8:	add	fp, sp, #0
   115cc:	sub	sp, sp, #12
   115d0:	str	r0, [fp, #-8]
   115d4:	str	r1, [fp, #-12]
   115d8:	ldr	r3, [fp, #-8]
   115dc:	ldrb	r3, [r3]
   115e0:	and	r3, r3, #127	; 0x7f
   115e4:	uxtb	r2, r3
   115e8:	ldr	r3, [fp, #-8]
   115ec:	strb	r2, [r3]
   115f0:	ldr	r3, [fp, #-8]
   115f4:	ldrb	r3, [r3]
   115f8:	sxtb	r2, r3
   115fc:	ldr	r3, [fp, #-12]
   11600:	lsl	r3, r3, #7
   11604:	sxtb	r3, r3
   11608:	orr	r3, r2, r3
   1160c:	sxtb	r3, r3
   11610:	uxtb	r2, r3
   11614:	ldr	r3, [fp, #-8]
   11618:	strb	r2, [r3]
   1161c:	nop	{0}
   11620:	add	sp, fp, #0
   11624:	pop	{fp}		; (ldr fp, [sp], #4)
   11628:	bx	lr
   1162c:	push	{fp}		; (str fp, [sp, #-4]!)
   11630:	add	fp, sp, #0
   11634:	sub	sp, sp, #12
   11638:	str	r0, [fp, #-8]
   1163c:	nop	{0}
   11640:	add	sp, fp, #0
   11644:	pop	{fp}		; (ldr fp, [sp], #4)
   11648:	bx	lr
   1164c:	str	fp, [sp, #-8]!
   11650:	str	lr, [sp, #4]
   11654:	add	fp, sp, #4
   11658:	sub	sp, sp, #144	; 0x90
   1165c:	mov	r3, #0
   11660:	str	r3, [fp, #-12]
   11664:	mov	r3, #1
   11668:	str	r3, [fp, #-144]	; 0xffffff70
   1166c:	sub	r3, fp, #144	; 0x90
   11670:	add	r3, r3, #4
   11674:	mov	r0, r3
   11678:	bl	10ccc <sigemptyset@plt>
   1167c:	sub	r3, fp, #144	; 0x90
   11680:	add	r3, r3, #4
   11684:	mov	r1, #13
   11688:	mov	r0, r3
   1168c:	bl	10e4c <sigaddset@plt>
   11690:	sub	r3, fp, #144	; 0x90
   11694:	add	r3, r3, #4
   11698:	mov	r1, #14
   1169c:	mov	r0, r3
   116a0:	bl	10e4c <sigaddset@plt>
   116a4:	sub	r3, fp, #144	; 0x90
   116a8:	add	r3, r3, #4
   116ac:	mov	r1, #5
   116b0:	mov	r0, r3
   116b4:	bl	10e4c <sigaddset@plt>
   116b8:	sub	r3, fp, #144	; 0x90
   116bc:	add	r3, r3, #4
   116c0:	mov	r1, #28
   116c4:	mov	r0, r3
   116c8:	bl	10e4c <sigaddset@plt>
   116cc:	sub	r3, fp, #144	; 0x90
   116d0:	mov	r2, #0
   116d4:	mov	r1, r3
   116d8:	mov	r0, #28
   116dc:	bl	10eac <sigaction@plt>
   116e0:	sub	r3, fp, #144	; 0x90
   116e4:	mov	r2, #0
   116e8:	mov	r1, r3
   116ec:	mov	r0, #13
   116f0:	bl	10eac <sigaction@plt>
   116f4:	sub	r3, fp, #144	; 0x90
   116f8:	mov	r2, #0
   116fc:	mov	r1, r3
   11700:	mov	r0, #5
   11704:	bl	10eac <sigaction@plt>
   11708:	ldr	r3, [pc, #44]	; 1173c <rb_base64_encode@plt+0x7e8>
   1170c:	add	r3, pc, r3
   11710:	str	r3, [fp, #-144]	; 0xffffff70
   11714:	sub	r3, fp, #144	; 0x90
   11718:	mov	r2, #0
   1171c:	mov	r1, r3
   11720:	mov	r0, #14
   11724:	bl	10eac <sigaction@plt>
   11728:	nop	{0}
   1172c:	sub	sp, fp, #4
   11730:	ldr	fp, [sp]
   11734:	add	sp, sp, #4
   11738:	pop	{pc}		; (ldr pc, [sp], #4)
   1173c:			; <UNDEFINED> instruction: 0xffffff18
   11740:	str	fp, [sp, #-8]!
   11744:	str	lr, [sp, #4]
   11748:	add	fp, sp, #4
   1174c:	sub	sp, sp, #8
   11750:	sub	r3, fp, #12
   11754:	mov	r1, r3
   11758:	mov	r0, #7
   1175c:	bl	10f18 <getrlimit@plt>
   11760:	mov	r3, r0
   11764:	cmp	r3, #0
   11768:	bne	11774 <rb_base64_encode@plt+0x820>
   1176c:	ldr	r3, [fp, #-12]
   11770:	b	11778 <rb_base64_encode@plt+0x824>
   11774:	movw	r3, #65535	; 0xffff
   11778:	mov	r0, r3
   1177c:	sub	sp, fp, #4
   11780:	ldr	fp, [sp]
   11784:	add	sp, sp, #4
   11788:	pop	{pc}		; (ldr pc, [sp], #4)
   1178c:	str	fp, [sp, #-8]!
   11790:	str	lr, [sp, #4]
   11794:	add	fp, sp, #4
   11798:	sub	sp, sp, #8
   1179c:	str	r0, [fp, #-8]
   117a0:	str	r1, [fp, #-12]
   117a4:	ldr	r3, [fp, #-8]
   117a8:	ldr	r2, [fp, #-12]
   117ac:	str	r2, [r3, #80]	; 0x50
   117b0:	ldr	r0, [fp, #-8]
   117b4:	ldr	r1, [fp, #-12]
   117b8:	movw	r3, #19923	; 0x4dd3
   117bc:	movt	r3, #4194	; 0x1062
   117c0:	umull	r2, r3, r3, r1
   117c4:	lsr	r2, r3, #7
   117c8:	mov	r3, #2000	; 0x7d0
   117cc:	mul	r3, r3, r2
   117d0:	sub	r2, r1, r3
   117d4:	mov	r3, r2
   117d8:	lsl	r3, r3, #1
   117dc:	add	r3, r3, r2
   117e0:	lsl	r3, r3, #2
   117e4:	ldr	r2, [pc, #40]	; 11814 <rb_base64_encode@plt+0x8c0>
   117e8:	add	r2, pc, r2
   117ec:	add	r3, r3, r2
   117f0:	mov	r2, r3
   117f4:	mov	r1, r0
   117f8:	ldr	r0, [fp, #-8]
   117fc:	bl	11050 <rb_base64_encode@plt+0xfc>
   11800:	nop	{0}
   11804:	sub	sp, fp, #4
   11808:	ldr	fp, [sp]
   1180c:	add	sp, sp, #4
   11810:	pop	{pc}		; (ldr pc, [sp], #4)
   11814:	andeq	r5, r1, ip, lsl r9
   11818:	str	fp, [sp, #-8]!
   1181c:	str	lr, [sp, #4]
   11820:	add	fp, sp, #4
   11824:	sub	sp, sp, #8
   11828:	str	r0, [fp, #-8]
   1182c:	ldr	r3, [fp, #-8]
   11830:	add	r3, r3, #52	; 0x34
   11834:	mov	r0, r3
   11838:	bl	10e28 <rb_linebuf_donebuf@plt>
   1183c:	ldr	r3, [fp, #-8]
   11840:	add	r3, r3, #24
   11844:	mov	r0, r3
   11848:	bl	10e28 <rb_linebuf_donebuf@plt>
   1184c:	ldr	r3, [fp, #-8]
   11850:	ldr	r3, [r3, #20]
   11854:	mov	r0, r3
   11858:	bl	10e70 <rb_free_rawbuffer@plt>
   1185c:	ldr	r3, [fp, #-8]
   11860:	ldr	r3, [r3, #16]
   11864:	mov	r0, r3
   11868:	bl	10e70 <rb_free_rawbuffer@plt>
   1186c:	ldr	r0, [fp, #-8]
   11870:	bl	114ac <rb_base64_encode@plt+0x558>
   11874:	nop	{0}
   11878:	sub	sp, fp, #4
   1187c:	ldr	fp, [sp]
   11880:	add	sp, sp, #4
   11884:	pop	{pc}		; (ldr pc, [sp], #4)
   11888:	str	fp, [sp, #-8]!
   1188c:	str	lr, [sp, #4]
   11890:	add	fp, sp, #4
   11894:	sub	sp, sp, #24
   11898:	str	r0, [fp, #-24]	; 0xffffffe8
   1189c:	ldr	r3, [pc, #176]	; 11954 <rb_base64_encode@plt+0xa00>
   118a0:	add	r3, pc, r3
   118a4:	ldr	r3, [r3]
   118a8:	str	r3, [fp, #-8]
   118ac:	ldr	r3, [fp, #-8]
   118b0:	cmp	r3, #0
   118b4:	beq	118c4 <rb_base64_encode@plt+0x970>
   118b8:	ldr	r3, [fp, #-8]
   118bc:	ldr	r3, [r3, #8]
   118c0:	b	118c8 <rb_base64_encode@plt+0x974>
   118c4:	mov	r3, #0
   118c8:	str	r3, [fp, #-12]
   118cc:	b	1190c <rb_base64_encode@plt+0x9b8>
   118d0:	ldr	r3, [fp, #-8]
   118d4:	ldr	r3, [r3]
   118d8:	str	r3, [fp, #-16]
   118dc:	ldr	r0, [fp, #-16]
   118e0:	bl	11818 <rb_base64_encode@plt+0x8c4>
   118e4:	ldr	r3, [fp, #-12]
   118e8:	str	r3, [fp, #-8]
   118ec:	ldr	r3, [fp, #-8]
   118f0:	cmp	r3, #0
   118f4:	beq	11904 <rb_base64_encode@plt+0x9b0>
   118f8:	ldr	r3, [fp, #-8]
   118fc:	ldr	r3, [r3, #8]
   11900:	b	11908 <rb_base64_encode@plt+0x9b4>
   11904:	mov	r3, #0
   11908:	str	r3, [fp, #-12]
   1190c:	ldr	r3, [fp, #-8]
   11910:	cmp	r3, #0
   11914:	bne	118d0 <rb_base64_encode@plt+0x97c>
   11918:	ldr	r3, [pc, #56]	; 11958 <rb_base64_encode@plt+0xa04>
   1191c:	add	r3, pc, r3
   11920:	mov	r2, #0
   11924:	str	r2, [r3]
   11928:	ldr	r3, [pc, #44]	; 1195c <rb_base64_encode@plt+0xa08>
   1192c:	add	r3, pc, r3
   11930:	ldr	r2, [r3]
   11934:	ldr	r3, [pc, #36]	; 11960 <rb_base64_encode@plt+0xa0c>
   11938:	add	r3, pc, r3
   1193c:	str	r2, [r3, #4]
   11940:	nop	{0}
   11944:	sub	sp, fp, #4
   11948:	ldr	fp, [sp]
   1194c:	add	sp, sp, #4
   11950:	pop	{pc}		; (ldr pc, [sp], #4)
   11954:	andeq	fp, r1, r4, lsr #12
   11958:	andeq	fp, r1, r8, lsr #11
   1195c:	muleq	r1, r8, r5
   11960:	andeq	fp, r1, ip, lsl #11
   11964:	strd	r4, [sp, #-16]!
   11968:	str	fp, [sp, #8]
   1196c:	str	lr, [sp, #12]
   11970:	add	fp, sp, #12
   11974:	sub	sp, sp, #16
   11978:	str	r0, [fp, #-24]	; 0xffffffe8
   1197c:	str	r1, [fp, #-28]	; 0xffffffe4
   11980:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11984:	str	r3, [fp, #-16]
   11988:	ldr	r3, [fp, #-16]
   1198c:	ldrb	r3, [r3, #128]	; 0x80
   11990:	and	r3, r3, #2
   11994:	cmp	r3, #0
   11998:	bne	11a80 <rb_base64_encode@plt+0xb2c>
   1199c:	b	119c4 <rb_base64_encode@plt+0xa70>
   119a0:	ldr	r3, [fp, #-16]
   119a4:	ldrd	r0, [r3, #120]	; 0x78
   119a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   119ac:	mov	r2, r3
   119b0:	asr	r3, r2, #31
   119b4:	adds	r4, r0, r2
   119b8:	adc	r5, r1, r3
   119bc:	ldr	r3, [fp, #-16]
   119c0:	strd	r4, [r3, #120]	; 0x78
   119c4:	ldr	r3, [fp, #-16]
   119c8:	add	r3, r3, #24
   119cc:	mov	r1, r3
   119d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   119d4:	bl	10e04 <rb_linebuf_flush@plt>
   119d8:	str	r0, [fp, #-20]	; 0xffffffec
   119dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   119e0:	cmp	r3, #0
   119e4:	bgt	119a0 <rb_base64_encode@plt+0xa4c>
   119e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   119ec:	cmp	r3, #0
   119f0:	beq	11a20 <rb_base64_encode@plt+0xacc>
   119f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   119f8:	cmp	r3, #0
   119fc:	bge	11a34 <rb_base64_encode@plt+0xae0>
   11a00:	bl	10f48 <__errno_location@plt>
   11a04:	mov	r3, r0
   11a08:	ldr	r3, [r3]
   11a0c:	mov	r0, r3
   11a10:	bl	10d08 <rb_ignore_errno@plt>
   11a14:	mov	r3, r0
   11a18:	cmp	r3, #0
   11a1c:	bne	11a34 <rb_base64_encode@plt+0xae0>
   11a20:	mov	r2, #0
   11a24:	mov	r1, #0
   11a28:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11a2c:	bl	12194 <rb_base64_encode@plt+0x1240>
   11a30:	b	11a84 <rb_base64_encode@plt+0xb30>
   11a34:	ldr	r3, [fp, #-16]
   11a38:	ldr	r3, [r3, #40]	; 0x28
   11a3c:	cmp	r3, #0
   11a40:	ble	11a64 <rb_base64_encode@plt+0xb10>
   11a44:	ldr	r3, [fp, #-16]
   11a48:	ldr	r0, [r3, #88]	; 0x58
   11a4c:	ldr	r3, [fp, #-16]
   11a50:	ldr	r2, [pc, #64]	; 11a98 <rb_base64_encode@plt+0xb44>
   11a54:	add	r2, pc, r2
   11a58:	mov	r1, #2
   11a5c:	bl	10d20 <rb_setselect@plt>
   11a60:	b	11a84 <rb_base64_encode@plt+0xb30>
   11a64:	ldr	r3, [fp, #-16]
   11a68:	ldr	r0, [r3, #88]	; 0x58
   11a6c:	mov	r3, #0
   11a70:	mov	r2, #0
   11a74:	mov	r1, #2
   11a78:	bl	10d20 <rb_setselect@plt>
   11a7c:	b	11a84 <rb_base64_encode@plt+0xb30>
   11a80:	nop	{0}
   11a84:	sub	sp, fp, #12
   11a88:	ldrd	r4, [sp]
   11a8c:	ldr	fp, [sp, #8]
   11a90:	add	sp, sp, #12
   11a94:	pop	{pc}		; (ldr pc, [sp], #4)
   11a98:			; <UNDEFINED> instruction: 0xffffff08
   11a9c:	strd	r4, [sp, #-16]!
   11aa0:	str	fp, [sp, #8]
   11aa4:	str	lr, [sp, #12]
   11aa8:	add	fp, sp, #12
   11aac:	sub	sp, sp, #24
   11ab0:	str	r0, [fp, #-32]	; 0xffffffe0
   11ab4:	str	r1, [fp, #-36]	; 0xffffffdc
   11ab8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11abc:	str	r3, [fp, #-16]
   11ac0:	ldr	r3, [fp, #-16]
   11ac4:	ldrb	r3, [r3, #128]	; 0x80
   11ac8:	and	r3, r3, #2
   11acc:	cmp	r3, #0
   11ad0:	bne	11c6c <rb_base64_encode@plt+0xd18>
   11ad4:	b	11afc <rb_base64_encode@plt+0xba8>
   11ad8:	ldr	r3, [fp, #-16]
   11adc:	ldrd	r0, [r3, #96]	; 0x60
   11ae0:	ldr	r3, [fp, #-20]	; 0xffffffec
   11ae4:	mov	r2, r3
   11ae8:	asr	r3, r2, #31
   11aec:	adds	r4, r0, r2
   11af0:	adc	r5, r1, r3
   11af4:	ldr	r3, [fp, #-16]
   11af8:	strd	r4, [r3, #96]	; 0x60
   11afc:	ldr	r3, [fp, #-16]
   11b00:	ldr	r3, [r3, #16]
   11b04:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11b08:	mov	r0, r3
   11b0c:	bl	10f30 <rb_rawbuf_flush@plt>
   11b10:	str	r0, [fp, #-20]	; 0xffffffec
   11b14:	ldr	r3, [fp, #-20]	; 0xffffffec
   11b18:	cmp	r3, #0
   11b1c:	bgt	11ad8 <rb_base64_encode@plt+0xb84>
   11b20:	ldr	r3, [fp, #-20]	; 0xffffffec
   11b24:	cmp	r3, #0
   11b28:	beq	11b58 <rb_base64_encode@plt+0xc04>
   11b2c:	ldr	r3, [fp, #-20]	; 0xffffffec
   11b30:	cmp	r3, #0
   11b34:	bge	11bb8 <rb_base64_encode@plt+0xc64>
   11b38:	bl	10f48 <__errno_location@plt>
   11b3c:	mov	r3, r0
   11b40:	ldr	r3, [r3]
   11b44:	mov	r0, r3
   11b48:	bl	10d08 <rb_ignore_errno@plt>
   11b4c:	mov	r3, r0
   11b50:	cmp	r3, #0
   11b54:	bne	11bb8 <rb_base64_encode@plt+0xc64>
   11b58:	ldr	r3, [fp, #-20]	; 0xffffffec
   11b5c:	cmp	r3, #0
   11b60:	bne	11b84 <rb_base64_encode@plt+0xc30>
   11b64:	ldr	r3, [pc, #280]	; 11c84 <rb_base64_encode@plt+0xd30>
   11b68:	add	r3, pc, r3
   11b6c:	ldr	r3, [r3]
   11b70:	ldr	r2, [pc, #272]	; 11c88 <rb_base64_encode@plt+0xd34>
   11b74:	add	r2, pc, r2
   11b78:	mov	r1, #1
   11b7c:	ldr	r0, [fp, #-16]
   11b80:	bl	12194 <rb_base64_encode@plt+0x1240>
   11b84:	bl	10f48 <__errno_location@plt>
   11b88:	mov	r3, r0
   11b8c:	ldr	r3, [r3]
   11b90:	mov	r0, r3
   11b94:	bl	10cd8 <strerror@plt>
   11b98:	str	r0, [fp, #-24]	; 0xffffffe8
   11b9c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11ba0:	ldr	r2, [pc, #228]	; 11c8c <rb_base64_encode@plt+0xd38>
   11ba4:	add	r2, pc, r2
   11ba8:	mov	r1, #1
   11bac:	ldr	r0, [fp, #-16]
   11bb0:	bl	12194 <rb_base64_encode@plt+0x1240>
   11bb4:	b	11c70 <rb_base64_encode@plt+0xd1c>
   11bb8:	ldr	r3, [fp, #-16]
   11bbc:	ldr	r3, [r3, #16]
   11bc0:	mov	r0, r3
   11bc4:	bl	10e64 <rb_rawbuf_length@plt>
   11bc8:	mov	r3, r0
   11bcc:	cmp	r3, #0
   11bd0:	ble	11bf4 <rb_base64_encode@plt+0xca0>
   11bd4:	ldr	r3, [fp, #-16]
   11bd8:	ldr	r0, [r3, #84]	; 0x54
   11bdc:	ldr	r3, [fp, #-16]
   11be0:	ldr	r2, [pc, #168]	; 11c90 <rb_base64_encode@plt+0xd3c>
   11be4:	add	r2, pc, r2
   11be8:	mov	r1, #2
   11bec:	bl	10d20 <rb_setselect@plt>
   11bf0:	b	11c0c <rb_base64_encode@plt+0xcb8>
   11bf4:	ldr	r3, [fp, #-16]
   11bf8:	ldr	r0, [r3, #84]	; 0x54
   11bfc:	mov	r3, #0
   11c00:	mov	r2, #0
   11c04:	mov	r1, #2
   11c08:	bl	10d20 <rb_setselect@plt>
   11c0c:	ldr	r3, [fp, #-16]
   11c10:	ldrb	r3, [r3, #128]	; 0x80
   11c14:	and	r3, r3, #1
   11c18:	cmp	r3, #0
   11c1c:	beq	11c70 <rb_base64_encode@plt+0xd1c>
   11c20:	ldr	r3, [fp, #-16]
   11c24:	ldr	r3, [r3, #16]
   11c28:	mov	r0, r3
   11c2c:	bl	10e64 <rb_rawbuf_length@plt>
   11c30:	mov	r3, r0
   11c34:	cmp	r3, #0
   11c38:	bne	11c70 <rb_base64_encode@plt+0xd1c>
   11c3c:	ldr	r3, [fp, #-16]
   11c40:	ldrb	r3, [r3, #128]	; 0x80
   11c44:	bic	r3, r3, #1
   11c48:	uxtb	r2, r3
   11c4c:	ldr	r3, [fp, #-16]
   11c50:	strb	r2, [r3, #128]	; 0x80
   11c54:	ldr	r3, [fp, #-16]
   11c58:	ldr	r3, [r3, #88]	; 0x58
   11c5c:	ldr	r1, [fp, #-16]
   11c60:	mov	r0, r3
   11c64:	bl	13100 <rb_base64_encode@plt+0x21ac>
   11c68:	b	11c70 <rb_base64_encode@plt+0xd1c>
   11c6c:	nop	{0}
   11c70:	sub	sp, fp, #12
   11c74:	ldrd	r4, [sp]
   11c78:	ldr	fp, [sp, #8]
   11c7c:	add	sp, sp, #12
   11c80:	pop	{pc}		; (ldr pc, [sp], #4)
   11c84:	andeq	r5, r1, ip, lsl #11
   11c88:	andeq	r4, r0, ip, ror #20
   11c8c:	andeq	r4, r0, r0, asr #20
   11c90:			; <UNDEFINED> instruction: 0xfffffeb0
   11c94:	str	fp, [sp, #-8]!
   11c98:	str	lr, [sp, #4]
   11c9c:	add	fp, sp, #4
   11ca0:	sub	sp, sp, #16
   11ca4:	str	r0, [fp, #-8]
   11ca8:	str	r1, [fp, #-12]
   11cac:	str	r2, [fp, #-16]
   11cb0:	ldr	r3, [fp, #-8]
   11cb4:	ldrb	r3, [r3, #128]	; 0x80
   11cb8:	and	r3, r3, #2
   11cbc:	cmp	r3, #0
   11cc0:	bne	11ce0 <rb_base64_encode@plt+0xd8c>
   11cc4:	ldr	r3, [fp, #-8]
   11cc8:	ldr	r3, [r3, #16]
   11ccc:	ldr	r2, [fp, #-16]
   11cd0:	ldr	r1, [fp, #-12]
   11cd4:	mov	r0, r3
   11cd8:	bl	10f24 <rb_rawbuf_append@plt>
   11cdc:	b	11ce4 <rb_base64_encode@plt+0xd90>
   11ce0:	nop	{0}
   11ce4:	sub	sp, fp, #4
   11ce8:	ldr	fp, [sp]
   11cec:	add	sp, sp, #4
   11cf0:	pop	{pc}		; (ldr pc, [sp], #4)
   11cf4:	str	fp, [sp, #-8]!
   11cf8:	str	lr, [sp, #4]
   11cfc:	add	fp, sp, #4
   11d00:	sub	sp, sp, #24
   11d04:	str	r0, [fp, #-16]
   11d08:	str	r1, [fp, #-20]	; 0xffffffec
   11d0c:	str	r2, [fp, #-24]	; 0xffffffe8
   11d10:	mov	r3, #0
   11d14:	strb	r3, [fp, #-8]
   11d18:	mov	r3, #0
   11d1c:	strb	r3, [fp, #-7]
   11d20:	sub	r3, fp, #8
   11d24:	mov	r1, #1
   11d28:	mov	r0, r3
   11d2c:	bl	11558 <rb_base64_encode@plt+0x604>
   11d30:	sub	r3, fp, #8
   11d34:	mov	r1, #1
   11d38:	mov	r0, r3
   11d3c:	bl	115c4 <rb_base64_encode@plt+0x670>
   11d40:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11d44:	uxtb	r3, r3
   11d48:	add	r3, r3, #2
   11d4c:	uxtb	r3, r3
   11d50:	and	r3, r3, #127	; 0x7f
   11d54:	uxtb	r3, r3
   11d58:	strb	r3, [fp, #-7]
   11d5c:	sub	r3, fp, #8
   11d60:	mov	r2, #2
   11d64:	mov	r1, r3
   11d68:	ldr	r0, [fp, #-16]
   11d6c:	bl	11c94 <rb_base64_encode@plt+0xd40>
   11d70:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11d74:	mov	r2, r3
   11d78:	ldr	r1, [fp, #-20]	; 0xffffffec
   11d7c:	ldr	r0, [fp, #-16]
   11d80:	bl	11c94 <rb_base64_encode@plt+0xd40>
   11d84:	mov	r2, #2
   11d88:	ldr	r3, [pc, #32]	; 11db0 <rb_base64_encode@plt+0xe5c>
   11d8c:	add	r3, pc, r3
   11d90:	mov	r1, r3
   11d94:	ldr	r0, [fp, #-16]
   11d98:	bl	11c94 <rb_base64_encode@plt+0xd40>
   11d9c:	nop	{0}
   11da0:	sub	sp, fp, #4
   11da4:	ldr	fp, [sp]
   11da8:	add	sp, sp, #4
   11dac:	pop	{pc}		; (ldr pc, [sp], #4)
   11db0:	andeq	r4, r0, r8, ror #16
   11db4:	str	fp, [sp, #-8]!
   11db8:	str	lr, [sp, #4]
   11dbc:	add	fp, sp, #4
   11dc0:	sub	sp, sp, #24
   11dc4:	str	r0, [fp, #-16]
   11dc8:	str	r1, [fp, #-20]	; 0xffffffec
   11dcc:	str	r2, [fp, #-24]	; 0xffffffe8
   11dd0:	mov	r3, #0
   11dd4:	strb	r3, [fp, #-8]
   11dd8:	mov	r3, #0
   11ddc:	strb	r3, [fp, #-7]
   11de0:	mov	r3, #0
   11de4:	strh	r3, [fp, #-6]
   11de8:	sub	r3, fp, #8
   11dec:	mov	r1, #1
   11df0:	mov	r0, r3
   11df4:	bl	11558 <rb_base64_encode@plt+0x604>
   11df8:	sub	r3, fp, #8
   11dfc:	mov	r1, #1
   11e00:	mov	r0, r3
   11e04:	bl	115c4 <rb_base64_encode@plt+0x670>
   11e08:	mov	r3, #126	; 0x7e
   11e0c:	strb	r3, [fp, #-7]
   11e10:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11e14:	uxth	r3, r3
   11e18:	add	r3, r3, #2
   11e1c:	uxth	r3, r3
   11e20:	mov	r0, r3
   11e24:	bl	10d68 <htons@plt>
   11e28:	mov	r3, r0
   11e2c:	strh	r3, [fp, #-6]
   11e30:	sub	r3, fp, #8
   11e34:	mov	r2, #4
   11e38:	mov	r1, r3
   11e3c:	ldr	r0, [fp, #-16]
   11e40:	bl	11c94 <rb_base64_encode@plt+0xd40>
   11e44:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11e48:	mov	r2, r3
   11e4c:	ldr	r1, [fp, #-20]	; 0xffffffec
   11e50:	ldr	r0, [fp, #-16]
   11e54:	bl	11c94 <rb_base64_encode@plt+0xd40>
   11e58:	mov	r2, #2
   11e5c:	ldr	r3, [pc, #32]	; 11e84 <rb_base64_encode@plt+0xf30>
   11e60:	add	r3, pc, r3
   11e64:	mov	r1, r3
   11e68:	ldr	r0, [fp, #-16]
   11e6c:	bl	11c94 <rb_base64_encode@plt+0xd40>
   11e70:	nop	{0}
   11e74:	sub	sp, fp, #4
   11e78:	ldr	fp, [sp]
   11e7c:	add	sp, sp, #4
   11e80:	pop	{pc}		; (ldr pc, [sp], #4)
   11e84:	muleq	r0, r4, r7
   11e88:	str	fp, [sp, #-8]!
   11e8c:	str	lr, [sp, #4]
   11e90:	add	fp, sp, #4
   11e94:	sub	sp, sp, #16
   11e98:	str	r0, [fp, #-8]
   11e9c:	str	r1, [fp, #-12]
   11ea0:	str	r2, [fp, #-16]
   11ea4:	ldr	r3, [fp, #-8]
   11ea8:	ldrb	r3, [r3, #128]	; 0x80
   11eac:	and	r3, r3, #2
   11eb0:	cmp	r3, #0
   11eb4:	bne	11eec <rb_base64_encode@plt+0xf98>
   11eb8:	ldr	r3, [fp, #-16]
   11ebc:	cmp	r3, #122	; 0x7a
   11ec0:	bgt	11ed8 <rb_base64_encode@plt+0xf84>
   11ec4:	ldr	r2, [fp, #-16]
   11ec8:	ldr	r1, [fp, #-12]
   11ecc:	ldr	r0, [fp, #-8]
   11ed0:	bl	11cf4 <rb_base64_encode@plt+0xda0>
   11ed4:	b	11ef0 <rb_base64_encode@plt+0xf9c>
   11ed8:	ldr	r2, [fp, #-16]
   11edc:	ldr	r1, [fp, #-12]
   11ee0:	ldr	r0, [fp, #-8]
   11ee4:	bl	11db4 <rb_base64_encode@plt+0xe60>
   11ee8:	b	11ef0 <rb_base64_encode@plt+0xf9c>
   11eec:	nop	{0}
   11ef0:	sub	sp, fp, #4
   11ef4:	ldr	fp, [sp]
   11ef8:	add	sp, sp, #4
   11efc:	pop	{pc}		; (ldr pc, [sp], #4)
   11f00:	str	fp, [sp, #-8]!
   11f04:	str	lr, [sp, #4]
   11f08:	add	fp, sp, #4
   11f0c:	sub	sp, sp, #40	; 0x28
   11f10:	str	r0, [fp, #-32]	; 0xffffffe0
   11f14:	str	r1, [fp, #-36]	; 0xffffffdc
   11f18:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11f1c:	str	r3, [fp, #-20]	; 0xffffffec
   11f20:	ldr	r3, [fp, #-20]	; 0xffffffec
   11f24:	ldr	r3, [r3, #36]	; 0x24
   11f28:	str	r3, [fp, #-8]
   11f2c:	ldr	r3, [fp, #-8]
   11f30:	cmp	r3, #0
   11f34:	beq	11f44 <rb_base64_encode@plt+0xff0>
   11f38:	ldr	r3, [fp, #-8]
   11f3c:	ldr	r3, [r3, #8]
   11f40:	b	11f48 <rb_base64_encode@plt+0xff4>
   11f44:	mov	r3, #0
   11f48:	str	r3, [fp, #-12]
   11f4c:	b	12094 <rb_base64_encode@plt+0x1140>
   11f50:	ldr	r3, [fp, #-8]
   11f54:	ldr	r3, [r3]
   11f58:	str	r3, [fp, #-24]	; 0xffffffe8
   11f5c:	ldr	r3, [fp, #-20]	; 0xffffffec
   11f60:	ldr	r0, [r3, #16]
   11f64:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11f68:	add	r1, r3, #20
   11f6c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11f70:	ldr	ip, [r3, #36]	; 0x24
   11f74:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11f78:	ldr	lr, [r3, #12]
   11f7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11f80:	ldr	r3, [r3, #16]
   11f84:	ldr	r2, [pc, #340]	; 120e0 <rb_base64_encode@plt+0x118c>
   11f88:	add	r2, pc, r2
   11f8c:	ldr	r2, [r2]
   11f90:	str	r2, [sp, #4]
   11f94:	str	r3, [sp]
   11f98:	mov	r3, lr
   11f9c:	mov	r2, ip
   11fa0:	bl	10d38 <rb_send_fd_buf@plt>
   11fa4:	str	r0, [fp, #-28]	; 0xffffffe4
   11fa8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11fac:	cmp	r3, #0
   11fb0:	ble	1202c <rb_base64_encode@plt+0x10d8>
   11fb4:	ldr	r3, [fp, #-20]	; 0xffffffec
   11fb8:	add	r3, r3, #36	; 0x24
   11fbc:	mov	r1, r3
   11fc0:	ldr	r0, [fp, #-8]
   11fc4:	bl	11310 <rb_base64_encode@plt+0x3bc>
   11fc8:	mov	r3, #0
   11fcc:	str	r3, [fp, #-16]
   11fd0:	b	12000 <rb_base64_encode@plt+0x10ac>
   11fd4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11fd8:	ldr	r3, [fp, #-16]
   11fdc:	add	r3, r3, #4
   11fe0:	lsl	r3, r3, #2
   11fe4:	add	r3, r2, r3
   11fe8:	ldr	r3, [r3, #4]
   11fec:	mov	r0, r3
   11ff0:	bl	10e40 <rb_close@plt>
   11ff4:	ldr	r3, [fp, #-16]
   11ff8:	add	r3, r3, #1
   11ffc:	str	r3, [fp, #-16]
   12000:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12004:	ldr	r3, [r3, #36]	; 0x24
   12008:	ldr	r2, [fp, #-16]
   1200c:	cmp	r2, r3
   12010:	blt	11fd4 <rb_base64_encode@plt+0x1080>
   12014:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12018:	ldr	r3, [r3, #12]
   1201c:	mov	r0, r3
   12020:	bl	114ac <rb_base64_encode@plt+0x558>
   12024:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12028:	bl	114ac <rb_base64_encode@plt+0x558>
   1202c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12030:	cmp	r3, #0
   12034:	beq	12064 <rb_base64_encode@plt+0x1110>
   12038:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1203c:	cmp	r3, #0
   12040:	bge	1206c <rb_base64_encode@plt+0x1118>
   12044:	bl	10f48 <__errno_location@plt>
   12048:	mov	r3, r0
   1204c:	ldr	r3, [r3]
   12050:	mov	r0, r3
   12054:	bl	10d08 <rb_ignore_errno@plt>
   12058:	mov	r3, r0
   1205c:	cmp	r3, #0
   12060:	bne	1206c <rb_base64_encode@plt+0x1118>
   12064:	mov	r0, #0
   12068:	bl	10f3c <exit@plt>
   1206c:	ldr	r3, [fp, #-12]
   12070:	str	r3, [fp, #-8]
   12074:	ldr	r3, [fp, #-8]
   12078:	cmp	r3, #0
   1207c:	beq	1208c <rb_base64_encode@plt+0x1138>
   12080:	ldr	r3, [fp, #-8]
   12084:	ldr	r3, [r3, #8]
   12088:	b	12090 <rb_base64_encode@plt+0x113c>
   1208c:	mov	r3, #0
   12090:	str	r3, [fp, #-12]
   12094:	ldr	r3, [fp, #-8]
   12098:	cmp	r3, #0
   1209c:	bne	11f50 <rb_base64_encode@plt+0xffc>
   120a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   120a4:	ldr	r3, [r3, #44]	; 0x2c
   120a8:	cmp	r3, #0
   120ac:	beq	120cc <rb_base64_encode@plt+0x1178>
   120b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   120b4:	ldr	r0, [r3, #16]
   120b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   120bc:	ldr	r2, [pc, #32]	; 120e4 <rb_base64_encode@plt+0x1190>
   120c0:	add	r2, pc, r2
   120c4:	mov	r1, #2
   120c8:	bl	10d20 <rb_setselect@plt>
   120cc:	nop	{0}
   120d0:	sub	sp, fp, #4
   120d4:	ldr	fp, [sp]
   120d8:	add	sp, sp, #4
   120dc:	pop	{pc}		; (ldr pc, [sp], #4)
   120e0:	andeq	r5, r1, r4, ror r1
   120e4:			; <UNDEFINED> instruction: 0xfffffe38
   120e8:	str	fp, [sp, #-8]!
   120ec:	str	lr, [sp, #4]
   120f0:	add	fp, sp, #4
   120f4:	sub	sp, sp, #24
   120f8:	str	r0, [fp, #-16]
   120fc:	str	r1, [fp, #-20]	; 0xffffffec
   12100:	str	r2, [fp, #-24]	; 0xffffffe8
   12104:	mov	r0, #40	; 0x28
   12108:	bl	1144c <rb_base64_encode@plt+0x4f8>
   1210c:	str	r0, [fp, #-8]
   12110:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12114:	bl	1144c <rb_base64_encode@plt+0x4f8>
   12118:	mov	r2, r0
   1211c:	ldr	r3, [fp, #-8]
   12120:	str	r2, [r3, #12]
   12124:	ldr	r3, [fp, #-8]
   12128:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1212c:	str	r2, [r3, #16]
   12130:	ldr	r3, [fp, #-8]
   12134:	ldr	r3, [r3, #12]
   12138:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1213c:	ldr	r1, [fp, #-20]	; 0xffffffec
   12140:	mov	r0, r3
   12144:	bl	10e1c <memcpy@plt>
   12148:	ldr	r3, [fp, #-8]
   1214c:	mov	r2, #0
   12150:	str	r2, [r3, #36]	; 0x24
   12154:	ldr	r1, [fp, #-8]
   12158:	ldr	r3, [fp, #-16]
   1215c:	add	r3, r3, #36	; 0x24
   12160:	mov	r2, r3
   12164:	ldr	r0, [fp, #-8]
   12168:	bl	111b0 <rb_base64_encode@plt+0x25c>
   1216c:	ldr	r3, [fp, #-16]
   12170:	ldr	r3, [r3, #16]
   12174:	ldr	r1, [fp, #-16]
   12178:	mov	r0, r3
   1217c:	bl	11f00 <rb_base64_encode@plt+0xfac>
   12180:	nop	{0}
   12184:	sub	sp, fp, #4
   12188:	ldr	fp, [sp]
   1218c:	add	sp, sp, #4
   12190:	pop	{pc}		; (ldr pc, [sp], #4)
   12194:	push	{r2, r3}
   12198:	str	fp, [sp, #-8]!
   1219c:	str	lr, [sp, #4]
   121a0:	add	fp, sp, #4
   121a4:	sub	sp, sp, #400	; 0x190
   121a8:	str	r0, [fp, #-400]	; 0xfffffe70
   121ac:	str	r1, [fp, #-404]	; 0xfffffe6c
   121b0:	ldr	r3, [fp, #-400]	; 0xfffffe70
   121b4:	ldrb	r3, [r3, #128]	; 0x80
   121b8:	and	r3, r3, #2
   121bc:	cmp	r3, #0
   121c0:	bne	12390 <rb_base64_encode@plt+0x143c>
   121c4:	ldr	r3, [fp, #-400]	; 0xfffffe70
   121c8:	ldrb	r3, [r3, #128]	; 0x80
   121cc:	and	r3, r3, #8
   121d0:	cmp	r3, #0
   121d4:	beq	121e0 <rb_base64_encode@plt+0x128c>
   121d8:	ldr	r0, [fp, #-400]	; 0xfffffe70
   121dc:	bl	13000 <rb_base64_encode@plt+0x20ac>
   121e0:	ldr	r3, [fp, #-400]	; 0xfffffe70
   121e4:	ldr	r2, [r3, #16]
   121e8:	ldr	r3, [fp, #-400]	; 0xfffffe70
   121ec:	ldr	r3, [r3, #84]	; 0x54
   121f0:	mov	r1, r3
   121f4:	mov	r0, r2
   121f8:	bl	10f30 <rb_rawbuf_flush@plt>
   121fc:	ldr	r3, [fp, #-400]	; 0xfffffe70
   12200:	ldr	r2, [r3, #88]	; 0x58
   12204:	ldr	r3, [fp, #-400]	; 0xfffffe70
   12208:	add	r3, r3, #24
   1220c:	mov	r1, r3
   12210:	mov	r0, r2
   12214:	bl	10e04 <rb_linebuf_flush@plt>
   12218:	ldr	r3, [fp, #-400]	; 0xfffffe70
   1221c:	ldr	r3, [r3, #84]	; 0x54
   12220:	mov	r0, r3
   12224:	bl	10e40 <rb_close@plt>
   12228:	ldr	r3, [fp, #-400]	; 0xfffffe70
   1222c:	ldrb	r3, [r3, #128]	; 0x80
   12230:	orr	r3, r3, #2
   12234:	uxtb	r2, r3
   12238:	ldr	r3, [fp, #-400]	; 0xfffffe70
   1223c:	strb	r2, [r3, #128]	; 0x80
   12240:	ldr	r0, [fp, #-400]	; 0xfffffe70
   12244:	ldr	r3, [fp, #-400]	; 0xfffffe70
   12248:	ldr	r1, [r3, #80]	; 0x50
   1224c:	movw	r3, #19923	; 0x4dd3
   12250:	movt	r3, #4194	; 0x1062
   12254:	umull	r2, r3, r3, r1
   12258:	lsr	r2, r3, #7
   1225c:	mov	r3, #2000	; 0x7d0
   12260:	mul	r3, r3, r2
   12264:	sub	r2, r1, r3
   12268:	mov	r3, r2
   1226c:	lsl	r3, r3, #1
   12270:	add	r3, r3, r2
   12274:	lsl	r3, r3, #2
   12278:	ldr	r2, [pc, #300]	; 123ac <rb_base64_encode@plt+0x1458>
   1227c:	add	r2, pc, r2
   12280:	add	r3, r3, r2
   12284:	mov	r1, r3
   12288:	bl	11310 <rb_base64_encode@plt+0x3bc>
   1228c:	ldr	r3, [fp, #-404]	; 0xfffffe6c
   12290:	cmp	r3, #0
   12294:	beq	122a4 <rb_base64_encode@plt+0x1350>
   12298:	ldr	r3, [fp, #4]
   1229c:	cmp	r3, #0
   122a0:	bne	122d0 <rb_base64_encode@plt+0x137c>
   122a4:	ldr	r3, [fp, #-400]	; 0xfffffe70
   122a8:	ldr	r3, [r3, #88]	; 0x58
   122ac:	mov	r0, r3
   122b0:	bl	10e40 <rb_close@plt>
   122b4:	ldr	r3, [fp, #-400]	; 0xfffffe70
   122b8:	ldr	r2, [pc, #240]	; 123b0 <rb_base64_encode@plt+0x145c>
   122bc:	add	r2, pc, r2
   122c0:	mov	r1, r3
   122c4:	ldr	r0, [fp, #-400]	; 0xfffffe70
   122c8:	bl	11050 <rb_base64_encode@plt+0xfc>
   122cc:	b	12394 <rb_base64_encode@plt+0x1440>
   122d0:	ldr	r3, [fp, #-400]	; 0xfffffe70
   122d4:	ldr	r0, [r3, #88]	; 0x58
   122d8:	ldr	r3, [fp, #-400]	; 0xfffffe70
   122dc:	ldr	r2, [pc, #208]	; 123b4 <rb_base64_encode@plt+0x1460>
   122e0:	add	r2, pc, r2
   122e4:	mov	r1, #1
   122e8:	bl	10d20 <rb_setselect@plt>
   122ec:	ldr	r3, [fp, #-400]	; 0xfffffe70
   122f0:	ldr	r0, [r3, #88]	; 0x58
   122f4:	mov	r3, #0
   122f8:	mov	r2, #0
   122fc:	mov	r1, #2
   12300:	bl	10d20 <rb_setselect@plt>
   12304:	add	r3, fp, #8
   12308:	str	r3, [fp, #-12]
   1230c:	sub	r0, fp, #140	; 0x8c
   12310:	ldr	r3, [fp, #-12]
   12314:	ldr	r2, [fp, #4]
   12318:	mov	r1, #128	; 0x80
   1231c:	bl	10d44 <vsnprintf@plt>
   12320:	mov	r3, #68	; 0x44
   12324:	strb	r3, [fp, #-396]	; 0xfffffe74
   12328:	ldr	r3, [fp, #-400]	; 0xfffffe70
   1232c:	ldr	r2, [r3, #80]	; 0x50
   12330:	sub	r3, fp, #396	; 0x18c
   12334:	add	r3, r3, #1
   12338:	mov	r1, r2
   1233c:	mov	r0, r3
   12340:	bl	11528 <rb_base64_encode@plt+0x5d4>
   12344:	sub	r1, fp, #140	; 0x8c
   12348:	sub	r3, fp, #396	; 0x18c
   1234c:	add	r3, r3, #5
   12350:	mov	r2, #251	; 0xfb
   12354:	mov	r0, r3
   12358:	bl	10da4 <rb_strlcpy@plt>
   1235c:	sub	r3, fp, #140	; 0x8c
   12360:	mov	r0, r3
   12364:	bl	10e10 <strlen@plt>
   12368:	mov	r3, r0
   1236c:	add	r3, r3, #6
   12370:	str	r3, [fp, #-8]
   12374:	ldr	r3, [fp, #-400]	; 0xfffffe70
   12378:	ldr	r3, [r3, #12]
   1237c:	ldr	r2, [fp, #-8]
   12380:	sub	r1, fp, #396	; 0x18c
   12384:	mov	r0, r3
   12388:	bl	120e8 <rb_base64_encode@plt+0x1194>
   1238c:	b	12394 <rb_base64_encode@plt+0x1440>
   12390:	nop	{0}
   12394:	sub	sp, fp, #4
   12398:	ldr	fp, [sp]
   1239c:	ldr	lr, [sp, #4]
   123a0:	add	sp, sp, #8
   123a4:	add	sp, sp, #8
   123a8:	bx	lr
   123ac:	andeq	r4, r1, r8, lsl #29
   123b0:	andeq	sl, r1, r8, lsl #24
   123b4:	andeq	r1, r0, r8, lsr r0
   123b8:	str	fp, [sp, #-8]!
   123bc:	str	lr, [sp, #4]
   123c0:	add	fp, sp, #4
   123c4:	sub	sp, sp, #24
   123c8:	str	r0, [fp, #-16]
   123cc:	str	r1, [fp, #-20]	; 0xffffffec
   123d0:	str	r2, [fp, #-24]	; 0xffffffe8
   123d4:	mov	r0, #168	; 0xa8
   123d8:	bl	1144c <rb_base64_encode@plt+0x4f8>
   123dc:	str	r0, [fp, #-8]
   123e0:	ldr	r3, [fp, #-8]
   123e4:	ldr	r2, [fp, #-16]
   123e8:	str	r2, [r3, #12]
   123ec:	ldr	r3, [fp, #-8]
   123f0:	ldr	r2, [fp, #-20]	; 0xffffffec
   123f4:	str	r2, [r3, #84]	; 0x54
   123f8:	ldr	r3, [fp, #-8]
   123fc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12400:	str	r2, [r3, #88]	; 0x58
   12404:	ldr	r3, [fp, #-8]
   12408:	mvn	r2, #0
   1240c:	str	r2, [r3, #80]	; 0x50
   12410:	ldr	r0, [fp, #-20]	; 0xffffffec
   12414:	bl	10d74 <rb_set_nb@plt>
   12418:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1241c:	bl	10d74 <rb_set_nb@plt>
   12420:	ldr	r3, [fp, #-8]
   12424:	add	r3, r3, #52	; 0x34
   12428:	mov	r0, r3
   1242c:	bl	10ef4 <rb_linebuf_newbuf@plt>
   12430:	ldr	r3, [fp, #-8]
   12434:	add	r3, r3, #24
   12438:	mov	r0, r3
   1243c:	bl	10ef4 <rb_linebuf_newbuf@plt>
   12440:	bl	10ec4 <rb_new_rawbuffer@plt>
   12444:	mov	r2, r0
   12448:	ldr	r3, [fp, #-8]
   1244c:	str	r2, [r3, #20]
   12450:	bl	10ec4 <rb_new_rawbuffer@plt>
   12454:	mov	r2, r0
   12458:	ldr	r3, [fp, #-8]
   1245c:	str	r2, [r3, #16]
   12460:	ldr	r3, [fp, #-8]
   12464:	mov	r0, r3
   12468:	sub	sp, fp, #4
   1246c:	ldr	fp, [sp]
   12470:	add	sp, sp, #4
   12474:	pop	{pc}		; (ldr pc, [sp], #4)
   12478:	str	fp, [sp, #-8]!
   1247c:	str	lr, [sp, #4]
   12480:	add	fp, sp, #4
   12484:	sub	sp, sp, #16
   12488:	str	r0, [fp, #-16]
   1248c:	str	r1, [fp, #-20]	; 0xffffffec
   12490:	mov	r3, #0
   12494:	str	r3, [fp, #-8]
   12498:	b	124c8 <rb_base64_encode@plt+0x1574>
   1249c:	ldr	r2, [fp, #-20]	; 0xffffffec
   124a0:	ldr	r3, [fp, #-8]
   124a4:	add	r3, r3, #4
   124a8:	lsl	r3, r3, #2
   124ac:	add	r3, r2, r3
   124b0:	ldr	r3, [r3, #4]
   124b4:	mov	r0, r3
   124b8:	bl	10e40 <rb_close@plt>
   124bc:	ldr	r3, [fp, #-8]
   124c0:	add	r3, r3, #1
   124c4:	str	r3, [fp, #-8]
   124c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   124cc:	ldr	r3, [r3, #36]	; 0x24
   124d0:	ldr	r2, [fp, #-8]
   124d4:	cmp	r2, r3
   124d8:	blt	1249c <rb_base64_encode@plt+0x1548>
   124dc:	nop	{0}
   124e0:	sub	sp, fp, #4
   124e4:	ldr	fp, [sp]
   124e8:	add	sp, sp, #4
   124ec:	pop	{pc}		; (ldr pc, [sp], #4)
   124f0:	push	{fp}		; (str fp, [sp, #-4]!)
   124f4:	add	fp, sp, #0
   124f8:	sub	sp, sp, #28
   124fc:	str	r0, [fp, #-16]
   12500:	str	r1, [fp, #-20]	; 0xffffffec
   12504:	str	r2, [fp, #-24]	; 0xffffffe8
   12508:	mov	r3, #0
   1250c:	str	r3, [fp, #-8]
   12510:	b	1256c <rb_base64_encode@plt+0x1618>
   12514:	ldr	r3, [fp, #-8]
   12518:	ldr	r2, [fp, #-16]
   1251c:	add	r3, r2, r3
   12520:	ldrb	r1, [r3]
   12524:	ldr	r3, [fp, #-8]
   12528:	rsbs	r2, r3, #0
   1252c:	and	r3, r3, #3
   12530:	and	r2, r2, #3
   12534:	rsbpl	r3, r2, #0
   12538:	mov	r2, r3
   1253c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12540:	add	r3, r3, r2
   12544:	ldrb	r2, [r3]
   12548:	ldr	r3, [fp, #-8]
   1254c:	ldr	r0, [fp, #-16]
   12550:	add	r3, r0, r3
   12554:	eor	r2, r2, r1
   12558:	uxtb	r2, r2
   1255c:	strb	r2, [r3]
   12560:	ldr	r3, [fp, #-8]
   12564:	add	r3, r3, #1
   12568:	str	r3, [fp, #-8]
   1256c:	ldr	r2, [fp, #-8]
   12570:	ldr	r3, [fp, #-20]	; 0xffffffec
   12574:	cmp	r2, r3
   12578:	blt	12514 <rb_base64_encode@plt+0x15c0>
   1257c:	nop	{0}
   12580:	add	sp, fp, #0
   12584:	pop	{fp}		; (ldr fp, [sp], #4)
   12588:	bx	lr
   1258c:	str	fp, [sp, #-8]!
   12590:	str	lr, [sp, #4]
   12594:	add	fp, sp, #4
   12598:	sub	sp, sp, #152	; 0x98
   1259c:	str	r0, [fp, #-144]	; 0xffffff70
   125a0:	str	r1, [fp, #-148]	; 0xffffff6c
   125a4:	str	r2, [fp, #-152]	; 0xffffff68
   125a8:	ldr	r3, [fp, #-152]	; 0xffffff68
   125ac:	cmp	r3, #0
   125b0:	beq	125f8 <rb_base64_encode@plt+0x16a4>
   125b4:	ldr	r3, [fp, #-144]	; 0xffffff70
   125b8:	ldr	r3, [r3, #20]
   125bc:	sub	r1, fp, #140	; 0x8c
   125c0:	mov	r2, #4
   125c4:	mov	r0, r3
   125c8:	bl	10ea0 <rb_rawbuf_get@plt>
   125cc:	str	r0, [fp, #-8]
   125d0:	ldr	r3, [fp, #-8]
   125d4:	cmp	r3, #0
   125d8:	bne	125f8 <rb_base64_encode@plt+0x16a4>
   125dc:	ldr	r3, [pc, #168]	; 1268c <rb_base64_encode@plt+0x1738>
   125e0:	add	r3, pc, r3
   125e4:	mov	r2, r3
   125e8:	mov	r1, #1
   125ec:	ldr	r0, [fp, #-144]	; 0xffffff70
   125f0:	bl	12194 <rb_base64_encode@plt+0x1240>
   125f4:	b	1267c <rb_base64_encode@plt+0x1728>
   125f8:	ldr	r3, [fp, #-144]	; 0xffffff70
   125fc:	ldr	r0, [r3, #20]
   12600:	ldr	r3, [fp, #-148]	; 0xffffff6c
   12604:	ldrb	r3, [r3, #1]
   12608:	mov	r2, r3
   1260c:	sub	r3, fp, #136	; 0x88
   12610:	mov	r1, r3
   12614:	bl	10ea0 <rb_rawbuf_get@plt>
   12618:	str	r0, [fp, #-8]
   1261c:	ldr	r3, [fp, #-8]
   12620:	cmp	r3, #0
   12624:	bne	12644 <rb_base64_encode@plt+0x16f0>
   12628:	ldr	r3, [pc, #96]	; 12690 <rb_base64_encode@plt+0x173c>
   1262c:	add	r3, pc, r3
   12630:	mov	r2, r3
   12634:	mov	r1, #1
   12638:	ldr	r0, [fp, #-144]	; 0xffffff70
   1263c:	bl	12194 <rb_base64_encode@plt+0x1240>
   12640:	b	1267c <rb_base64_encode@plt+0x1728>
   12644:	ldr	r3, [fp, #-152]	; 0xffffff68
   12648:	cmp	r3, #0
   1264c:	beq	12664 <rb_base64_encode@plt+0x1710>
   12650:	sub	r2, fp, #140	; 0x8c
   12654:	sub	r3, fp, #136	; 0x88
   12658:	ldr	r1, [fp, #-8]
   1265c:	mov	r0, r3
   12660:	bl	124f0 <rb_base64_encode@plt+0x159c>
   12664:	ldr	r3, [fp, #-144]	; 0xffffff70
   12668:	add	r0, r3, #24
   1266c:	sub	r1, fp, #136	; 0x88
   12670:	mov	r3, #1
   12674:	ldr	r2, [fp, #-8]
   12678:	bl	10d98 <rb_linebuf_parse@plt>
   1267c:	sub	sp, fp, #4
   12680:	ldr	fp, [sp]
   12684:	add	sp, sp, #4
   12688:	pop	{pc}		; (ldr pc, [sp], #4)
   1268c:	andeq	r4, r0, r8, lsl r0
   12690:	strdeq	r3, [r0], -r8
   12694:	str	fp, [sp, #-8]!
   12698:	str	lr, [sp, #4]
   1269c:	add	fp, sp, #4
   126a0:	sub	sp, sp, #16384	; 0x4000
   126a4:	sub	sp, sp, #32
   126a8:	sub	r3, fp, #16384	; 0x4000
   126ac:	sub	r3, r3, #4
   126b0:	str	r0, [r3, #-20]	; 0xffffffec
   126b4:	sub	r3, fp, #16384	; 0x4000
   126b8:	sub	r3, r3, #4
   126bc:	str	r1, [r3, #-24]	; 0xffffffe8
   126c0:	sub	r3, fp, #16384	; 0x4000
   126c4:	sub	r3, r3, #4
   126c8:	str	r2, [r3, #-28]	; 0xffffffe4
   126cc:	sub	r3, fp, #16384	; 0x4000
   126d0:	sub	r3, r3, #4
   126d4:	sub	r3, r3, #4
   126d8:	mov	r2, #16384	; 0x4000
   126dc:	mov	r1, #0
   126e0:	mov	r0, r3
   126e4:	bl	10d80 <memset@plt>
   126e8:	sub	r3, fp, #16384	; 0x4000
   126ec:	sub	r3, r3, #4
   126f0:	ldr	r3, [r3, #-20]	; 0xffffffec
   126f4:	ldr	r0, [r3, #20]
   126f8:	sub	r3, fp, #16384	; 0x4000
   126fc:	sub	r3, r3, #4
   12700:	sub	r3, r3, #6
   12704:	mov	r2, #2
   12708:	mov	r1, r3
   1270c:	bl	10ea0 <rb_rawbuf_get@plt>
   12710:	str	r0, [fp, #-8]
   12714:	ldr	r3, [fp, #-8]
   12718:	cmp	r3, #0
   1271c:	bne	12740 <rb_base64_encode@plt+0x17ec>
   12720:	sub	r3, fp, #16384	; 0x4000
   12724:	sub	r3, r3, #4
   12728:	ldr	r2, [pc, #376]	; 128a8 <rb_base64_encode@plt+0x1954>
   1272c:	add	r2, pc, r2
   12730:	mov	r1, #1
   12734:	ldr	r0, [r3, #-20]	; 0xffffffec
   12738:	bl	12194 <rb_base64_encode@plt+0x1240>
   1273c:	b	12898 <rb_base64_encode@plt+0x1944>
   12740:	sub	r3, fp, #16384	; 0x4000
   12744:	sub	r3, r3, #4
   12748:	ldrh	r3, [r3, #-6]
   1274c:	mov	r0, r3
   12750:	bl	10df8 <ntohs@plt>
   12754:	mov	r3, r0
   12758:	mov	r2, r3
   1275c:	sub	r3, fp, #16384	; 0x4000
   12760:	sub	r3, r3, #4
   12764:	strh	r2, [r3, #-6]
   12768:	sub	r3, fp, #16384	; 0x4000
   1276c:	sub	r3, r3, #4
   12770:	ldr	r3, [r3, #-28]	; 0xffffffe4
   12774:	cmp	r3, #0
   12778:	beq	127d4 <rb_base64_encode@plt+0x1880>
   1277c:	sub	r3, fp, #16384	; 0x4000
   12780:	sub	r3, r3, #4
   12784:	ldr	r3, [r3, #-20]	; 0xffffffec
   12788:	ldr	r0, [r3, #20]
   1278c:	sub	r3, fp, #16384	; 0x4000
   12790:	sub	r3, r3, #4
   12794:	sub	r3, r3, #12
   12798:	mov	r2, #4
   1279c:	mov	r1, r3
   127a0:	bl	10ea0 <rb_rawbuf_get@plt>
   127a4:	str	r0, [fp, #-8]
   127a8:	ldr	r3, [fp, #-8]
   127ac:	cmp	r3, #0
   127b0:	bne	127d4 <rb_base64_encode@plt+0x1880>
   127b4:	sub	r3, fp, #16384	; 0x4000
   127b8:	sub	r3, r3, #4
   127bc:	ldr	r2, [pc, #232]	; 128ac <rb_base64_encode@plt+0x1958>
   127c0:	add	r2, pc, r2
   127c4:	mov	r1, #1
   127c8:	ldr	r0, [r3, #-20]	; 0xffffffec
   127cc:	bl	12194 <rb_base64_encode@plt+0x1240>
   127d0:	b	12898 <rb_base64_encode@plt+0x1944>
   127d4:	sub	r3, fp, #16384	; 0x4000
   127d8:	sub	r3, r3, #4
   127dc:	ldr	r3, [r3, #-20]	; 0xffffffec
   127e0:	ldr	r0, [r3, #20]
   127e4:	sub	r3, fp, #16384	; 0x4000
   127e8:	sub	r3, r3, #4
   127ec:	ldrh	r3, [r3, #-6]
   127f0:	mov	r2, r3
   127f4:	sub	r3, fp, #16384	; 0x4000
   127f8:	sub	r3, r3, #4
   127fc:	sub	r3, r3, #4
   12800:	mov	r1, r3
   12804:	bl	10ea0 <rb_rawbuf_get@plt>
   12808:	str	r0, [fp, #-8]
   1280c:	ldr	r3, [fp, #-8]
   12810:	cmp	r3, #0
   12814:	bne	12838 <rb_base64_encode@plt+0x18e4>
   12818:	sub	r3, fp, #16384	; 0x4000
   1281c:	sub	r3, r3, #4
   12820:	ldr	r2, [pc, #136]	; 128b0 <rb_base64_encode@plt+0x195c>
   12824:	add	r2, pc, r2
   12828:	mov	r1, #1
   1282c:	ldr	r0, [r3, #-20]	; 0xffffffec
   12830:	bl	12194 <rb_base64_encode@plt+0x1240>
   12834:	b	12898 <rb_base64_encode@plt+0x1944>
   12838:	sub	r3, fp, #16384	; 0x4000
   1283c:	sub	r3, r3, #4
   12840:	ldr	r3, [r3, #-28]	; 0xffffffe4
   12844:	cmp	r3, #0
   12848:	beq	12870 <rb_base64_encode@plt+0x191c>
   1284c:	sub	r2, fp, #16384	; 0x4000
   12850:	sub	r2, r2, #4
   12854:	sub	r2, r2, #12
   12858:	sub	r3, fp, #16384	; 0x4000
   1285c:	sub	r3, r3, #4
   12860:	sub	r3, r3, #4
   12864:	ldr	r1, [fp, #-8]
   12868:	mov	r0, r3
   1286c:	bl	124f0 <rb_base64_encode@plt+0x159c>
   12870:	sub	r3, fp, #16384	; 0x4000
   12874:	sub	r3, r3, #4
   12878:	ldr	r3, [r3, #-20]	; 0xffffffec
   1287c:	add	r0, r3, #24
   12880:	sub	r1, fp, #16384	; 0x4000
   12884:	sub	r1, r1, #4
   12888:	sub	r1, r1, #4
   1288c:	mov	r3, #1
   12890:	ldr	r2, [fp, #-8]
   12894:	bl	10d98 <rb_linebuf_parse@plt>
   12898:	sub	sp, fp, #4
   1289c:	ldr	fp, [sp]
   128a0:	add	sp, sp, #4
   128a4:	pop	{pc}		; (ldr pc, [sp], #4)
   128a8:	andeq	r3, r0, r4, lsr #30
   128ac:	andeq	r3, r0, r8, lsr lr
   128b0:	andeq	r3, r0, r0, lsl #28
   128b4:	push	{fp}		; (str fp, [sp, #-4]!)
   128b8:	add	fp, sp, #0
   128bc:	sub	sp, sp, #20
   128c0:	str	r0, [fp, #-8]
   128c4:	str	r1, [fp, #-12]
   128c8:	str	r2, [fp, #-16]
   128cc:	nop	{0}
   128d0:	add	sp, fp, #0
   128d4:	pop	{fp}		; (ldr fp, [sp], #4)
   128d8:	bx	lr
   128dc:	str	fp, [sp, #-8]!
   128e0:	str	lr, [sp, #4]
   128e4:	add	fp, sp, #4
   128e8:	sub	sp, sp, #24
   128ec:	str	r0, [fp, #-24]	; 0xffffffe8
   128f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   128f4:	ldr	r3, [r3, #20]
   128f8:	sub	r1, fp, #16
   128fc:	mov	r2, #2
   12900:	mov	r0, r3
   12904:	bl	10ea0 <rb_rawbuf_get@plt>
   12908:	str	r0, [fp, #-8]
   1290c:	ldr	r3, [fp, #-8]
   12910:	cmp	r3, #2
   12914:	bne	129ac <rb_base64_encode@plt+0x1a58>
   12918:	ldrb	r3, [fp, #-15]
   1291c:	lsr	r3, r3, #7
   12920:	uxtb	r3, r3
   12924:	cmp	r3, #1
   12928:	moveq	r3, #1
   1292c:	movne	r3, #0
   12930:	uxtb	r3, r3
   12934:	str	r3, [fp, #-12]
   12938:	ldrb	r3, [fp, #-15]
   1293c:	and	r3, r3, #127	; 0x7f
   12940:	uxtb	r3, r3
   12944:	strb	r3, [fp, #-15]
   12948:	ldrb	r3, [fp, #-15]
   1294c:	cmp	r3, #126	; 0x7e
   12950:	beq	12960 <rb_base64_encode@plt+0x1a0c>
   12954:	cmp	r3, #127	; 0x7f
   12958:	beq	12978 <rb_base64_encode@plt+0x1a24>
   1295c:	b	12990 <rb_base64_encode@plt+0x1a3c>
   12960:	sub	r3, fp, #16
   12964:	ldr	r2, [fp, #-12]
   12968:	mov	r1, r3
   1296c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12970:	bl	12694 <rb_base64_encode@plt+0x1740>
   12974:	b	129a8 <rb_base64_encode@plt+0x1a54>
   12978:	sub	r3, fp, #16
   1297c:	ldr	r2, [fp, #-12]
   12980:	mov	r1, r3
   12984:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12988:	bl	128b4 <rb_base64_encode@plt+0x1960>
   1298c:	b	129a8 <rb_base64_encode@plt+0x1a54>
   12990:	sub	r3, fp, #16
   12994:	ldr	r2, [fp, #-12]
   12998:	mov	r1, r3
   1299c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   129a0:	bl	1258c <rb_base64_encode@plt+0x1638>
   129a4:	nop	{0}
   129a8:	b	128f0 <rb_base64_encode@plt+0x199c>
   129ac:	nop	{0}
   129b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   129b4:	ldr	r3, [r3, #88]	; 0x58
   129b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   129bc:	mov	r0, r3
   129c0:	bl	11964 <rb_base64_encode@plt+0xa10>
   129c4:	nop	{0}
   129c8:	sub	sp, fp, #4
   129cc:	ldr	fp, [sp]
   129d0:	add	sp, sp, #4
   129d4:	pop	{pc}		; (ldr pc, [sp], #4)
   129d8:	str	r4, [sp, #-12]!
   129dc:	str	fp, [sp, #4]
   129e0:	str	lr, [sp, #8]
   129e4:	add	fp, sp, #8
   129e8:	sub	sp, sp, #16384	; 0x4000
   129ec:	sub	sp, sp, #148	; 0x94
   129f0:	sub	r3, fp, #16384	; 0x4000
   129f4:	sub	r3, r3, #12
   129f8:	str	r0, [r3, #-140]	; 0xffffff74
   129fc:	sub	r3, fp, #16384	; 0x4000
   12a00:	sub	r3, r3, #12
   12a04:	sub	r3, r3, #20
   12a08:	mov	r2, #16384	; 0x4000
   12a0c:	mov	r1, #0
   12a10:	mov	r0, r3
   12a14:	bl	10d80 <memset@plt>
   12a18:	mov	r3, #0
   12a1c:	str	r3, [fp, #-24]	; 0xffffffe8
   12a20:	sub	r3, fp, #16384	; 0x4000
   12a24:	sub	r3, r3, #12
   12a28:	ldr	r3, [r3, #-140]	; 0xffffff74
   12a2c:	ldr	r0, [r3, #20]
   12a30:	sub	r3, fp, #16384	; 0x4000
   12a34:	sub	r3, r3, #12
   12a38:	sub	r3, r3, #20
   12a3c:	mov	r2, #16384	; 0x4000
   12a40:	mov	r1, r3
   12a44:	bl	10ea0 <rb_rawbuf_get@plt>
   12a48:	str	r0, [fp, #-28]	; 0xffffffe4
   12a4c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12a50:	cmp	r3, #0
   12a54:	beq	12bb8 <rb_base64_encode@plt+0x1c64>
   12a58:	sub	r3, fp, #16384	; 0x4000
   12a5c:	sub	r3, r3, #12
   12a60:	sub	r3, r3, #20
   12a64:	ldr	r2, [pc, #704]	; 12d2c <rb_base64_encode@plt+0x1dd8>
   12a68:	add	r2, pc, r2
   12a6c:	mov	r1, r2
   12a70:	mov	r0, r3
   12a74:	bl	10e34 <rb_strcasestr@plt>
   12a78:	str	r0, [fp, #-24]	; 0xffffffe8
   12a7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12a80:	cmp	r3, #0
   12a84:	beq	12a18 <rb_base64_encode@plt+0x1ac4>
   12a88:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12a8c:	add	r3, r3, #18
   12a90:	str	r3, [fp, #-16]
   12a94:	b	12ac4 <rb_base64_encode@plt+0x1b70>
   12a98:	ldr	r3, [fp, #-16]
   12a9c:	ldrb	r3, [r3]
   12aa0:	cmp	r3, #32
   12aa4:	beq	12ab8 <rb_base64_encode@plt+0x1b64>
   12aa8:	ldr	r3, [fp, #-16]
   12aac:	ldrb	r3, [r3]
   12ab0:	cmp	r3, #9
   12ab4:	bne	12af4 <rb_base64_encode@plt+0x1ba0>
   12ab8:	ldr	r3, [fp, #-16]
   12abc:	add	r3, r3, #1
   12ac0:	str	r3, [fp, #-16]
   12ac4:	sub	r3, fp, #16384	; 0x4000
   12ac8:	sub	r3, r3, #12
   12acc:	sub	r3, r3, #20
   12ad0:	add	r3, r3, #16384	; 0x4000
   12ad4:	ldr	r2, [fp, #-16]
   12ad8:	cmp	r2, r3
   12adc:	bcs	12af8 <rb_base64_encode@plt+0x1ba4>
   12ae0:	ldr	r3, [fp, #-16]
   12ae4:	ldrb	r3, [r3]
   12ae8:	cmp	r3, #0
   12aec:	bne	12a98 <rb_base64_encode@plt+0x1b44>
   12af0:	b	12af8 <rb_base64_encode@plt+0x1ba4>
   12af4:	nop	{0}
   12af8:	ldr	r3, [fp, #-16]
   12afc:	str	r3, [fp, #-20]	; 0xffffffec
   12b00:	b	12b40 <rb_base64_encode@plt+0x1bec>
   12b04:	ldr	r3, [fp, #-20]	; 0xffffffec
   12b08:	ldrb	r3, [r3]
   12b0c:	cmp	r3, #13
   12b10:	beq	12b24 <rb_base64_encode@plt+0x1bd0>
   12b14:	ldr	r3, [fp, #-20]	; 0xffffffec
   12b18:	ldrb	r3, [r3]
   12b1c:	cmp	r3, #10
   12b20:	bne	12b34 <rb_base64_encode@plt+0x1be0>
   12b24:	ldr	r3, [fp, #-20]	; 0xffffffec
   12b28:	mov	r2, #0
   12b2c:	strb	r2, [r3]
   12b30:	b	12b6c <rb_base64_encode@plt+0x1c18>
   12b34:	ldr	r3, [fp, #-20]	; 0xffffffec
   12b38:	add	r3, r3, #1
   12b3c:	str	r3, [fp, #-20]	; 0xffffffec
   12b40:	sub	r3, fp, #16384	; 0x4000
   12b44:	sub	r3, r3, #12
   12b48:	sub	r3, r3, #20
   12b4c:	add	r3, r3, #16384	; 0x4000
   12b50:	ldr	r2, [fp, #-20]	; 0xffffffec
   12b54:	cmp	r2, r3
   12b58:	bcs	12b6c <rb_base64_encode@plt+0x1c18>
   12b5c:	ldr	r3, [fp, #-20]	; 0xffffffec
   12b60:	ldrb	r3, [r3]
   12b64:	cmp	r3, #0
   12b68:	bne	12b04 <rb_base64_encode@plt+0x1bb0>
   12b6c:	sub	r3, fp, #16384	; 0x4000
   12b70:	sub	r3, r3, #12
   12b74:	ldr	r3, [r3, #-140]	; 0xffffff74
   12b78:	add	r3, r3, #129	; 0x81
   12b7c:	mov	r2, #37	; 0x25
   12b80:	ldr	r1, [fp, #-16]
   12b84:	mov	r0, r3
   12b88:	bl	10da4 <rb_strlcpy@plt>
   12b8c:	sub	r3, fp, #16384	; 0x4000
   12b90:	sub	r3, r3, #12
   12b94:	ldr	r3, [r3, #-140]	; 0xffffff74
   12b98:	ldrb	r3, [r3, #128]	; 0x80
   12b9c:	orr	r3, r3, #8
   12ba0:	uxtb	r2, r3
   12ba4:	sub	r3, fp, #16384	; 0x4000
   12ba8:	sub	r3, r3, #12
   12bac:	ldr	r3, [r3, #-140]	; 0xffffff74
   12bb0:	strb	r2, [r3, #128]	; 0x80
   12bb4:	b	12a18 <rb_base64_encode@plt+0x1ac4>
   12bb8:	nop	{0}
   12bbc:	sub	r3, fp, #16384	; 0x4000
   12bc0:	sub	r3, r3, #12
   12bc4:	ldr	r3, [r3, #-140]	; 0xffffff74
   12bc8:	ldrb	r3, [r3, #128]	; 0x80
   12bcc:	and	r3, r3, #8
   12bd0:	cmp	r3, #0
   12bd4:	beq	12cf0 <rb_base64_encode@plt+0x1d9c>
   12bd8:	sub	r3, fp, #16384	; 0x4000
   12bdc:	sub	r3, r3, #12
   12be0:	sub	r3, r3, #136	; 0x88
   12be4:	mov	r0, r3
   12be8:	bl	161a8 <rb_base64_encode@plt+0x5254>
   12bec:	sub	r3, fp, #16384	; 0x4000
   12bf0:	sub	r3, r3, #12
   12bf4:	ldr	r3, [r3, #-140]	; 0xffffff74
   12bf8:	add	r4, r3, #129	; 0x81
   12bfc:	sub	r3, fp, #16384	; 0x4000
   12c00:	sub	r3, r3, #12
   12c04:	ldr	r3, [r3, #-140]	; 0xffffff74
   12c08:	add	r3, r3, #129	; 0x81
   12c0c:	mov	r0, r3
   12c10:	bl	10e10 <strlen@plt>
   12c14:	mov	r2, r0
   12c18:	sub	r3, fp, #16384	; 0x4000
   12c1c:	sub	r3, r3, #12
   12c20:	sub	r3, r3, #136	; 0x88
   12c24:	mov	r1, r4
   12c28:	mov	r0, r3
   12c2c:	bl	16228 <rb_base64_encode@plt+0x52d4>
   12c30:	sub	r3, fp, #16384	; 0x4000
   12c34:	sub	r3, r3, #12
   12c38:	sub	r3, r3, #136	; 0x88
   12c3c:	mov	r2, #36	; 0x24
   12c40:	ldr	r1, [pc, #232]	; 12d30 <rb_base64_encode@plt+0x1ddc>
   12c44:	add	r1, pc, r1
   12c48:	mov	r0, r3
   12c4c:	bl	16228 <rb_base64_encode@plt+0x52d4>
   12c50:	sub	r2, fp, #16384	; 0x4000
   12c54:	sub	r2, r2, #12
   12c58:	sub	r2, r2, #40	; 0x28
   12c5c:	sub	r3, fp, #16384	; 0x4000
   12c60:	sub	r3, r3, #12
   12c64:	sub	r3, r3, #136	; 0x88
   12c68:	mov	r1, r2
   12c6c:	mov	r0, r3
   12c70:	bl	16384 <rb_base64_encode@plt+0x5430>
   12c74:	sub	r3, fp, #16384	; 0x4000
   12c78:	sub	r3, r3, #12
   12c7c:	sub	r3, r3, #40	; 0x28
   12c80:	mov	r1, #20
   12c84:	mov	r0, r3
   12c88:	bl	10f54 <rb_base64_encode@plt>
   12c8c:	str	r0, [fp, #-32]	; 0xffffffe0
   12c90:	sub	r3, fp, #16384	; 0x4000
   12c94:	sub	r3, r3, #12
   12c98:	mov	r2, #129	; 0x81
   12c9c:	ldr	r1, [pc, #144]	; 12d34 <rb_base64_encode@plt+0x1de0>
   12ca0:	add	r1, pc, r1
   12ca4:	ldr	r0, [r3, #-140]	; 0xffffff74
   12ca8:	bl	11c94 <rb_base64_encode@plt+0xd40>
   12cac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12cb0:	bl	10e10 <strlen@plt>
   12cb4:	mov	r2, r0
   12cb8:	sub	r3, fp, #16384	; 0x4000
   12cbc:	sub	r3, r3, #12
   12cc0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   12cc4:	ldr	r0, [r3, #-140]	; 0xffffff74
   12cc8:	bl	11c94 <rb_base64_encode@plt+0xd40>
   12ccc:	sub	r3, fp, #16384	; 0x4000
   12cd0:	sub	r3, r3, #12
   12cd4:	mov	r2, #4
   12cd8:	ldr	r1, [pc, #88]	; 12d38 <rb_base64_encode@plt+0x1de4>
   12cdc:	add	r1, pc, r1
   12ce0:	ldr	r0, [r3, #-140]	; 0xffffff74
   12ce4:	bl	11c94 <rb_base64_encode@plt+0xd40>
   12ce8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12cec:	bl	114ac <rb_base64_encode@plt+0x558>
   12cf0:	sub	r3, fp, #16384	; 0x4000
   12cf4:	sub	r3, r3, #12
   12cf8:	ldr	r3, [r3, #-140]	; 0xffffff74
   12cfc:	ldr	r3, [r3, #84]	; 0x54
   12d00:	sub	r2, fp, #16384	; 0x4000
   12d04:	sub	r2, r2, #12
   12d08:	ldr	r1, [r2, #-140]	; 0xffffff74
   12d0c:	mov	r0, r3
   12d10:	bl	11a9c <rb_base64_encode@plt+0xb48>
   12d14:	nop	{0}
   12d18:	sub	sp, fp, #8
   12d1c:	ldr	r4, [sp]
   12d20:	ldr	fp, [sp, #4]
   12d24:	add	sp, sp, #8
   12d28:	pop	{pc}		; (ldr pc, [sp], #4)
   12d2c:	andeq	r3, r0, r8, lsl ip
   12d30:	andeq	r3, r0, r0, asr sl
   12d34:	andeq	r3, r0, ip, lsl sl
   12d38:	andeq	r3, r0, r4, ror #20
   12d3c:	str	fp, [sp, #-8]!
   12d40:	str	lr, [sp, #4]
   12d44:	add	fp, sp, #4
   12d48:	sub	sp, sp, #16384	; 0x4000
   12d4c:	sub	sp, sp, #16
   12d50:	sub	r3, fp, #16384	; 0x4000
   12d54:	sub	r3, r3, #4
   12d58:	str	r0, [r3, #-12]
   12d5c:	sub	r3, fp, #16384	; 0x4000
   12d60:	sub	r3, r3, #4
   12d64:	str	r1, [r3, #-16]
   12d68:	sub	r3, fp, #16384	; 0x4000
   12d6c:	sub	r3, r3, #4
   12d70:	sub	r3, r3, #8
   12d74:	mov	r2, #16384	; 0x4000
   12d78:	mov	r1, #0
   12d7c:	mov	r0, r3
   12d80:	bl	10d80 <memset@plt>
   12d84:	sub	r3, fp, #16384	; 0x4000
   12d88:	sub	r3, r3, #4
   12d8c:	ldr	r3, [r3, #-16]
   12d90:	str	r3, [fp, #-8]
   12d94:	mov	r3, #0
   12d98:	str	r3, [fp, #-12]
   12d9c:	ldr	r3, [fp, #-8]
   12da0:	cmp	r3, #0
   12da4:	beq	12f24 <rb_base64_encode@plt+0x1fd0>
   12da8:	ldr	r3, [fp, #-8]
   12dac:	ldrb	r3, [r3, #128]	; 0x80
   12db0:	and	r3, r3, #2
   12db4:	cmp	r3, #0
   12db8:	bne	12f2c <rb_base64_encode@plt+0x1fd8>
   12dbc:	ldr	r3, [fp, #-8]
   12dc0:	ldrb	r3, [r3, #128]	; 0x80
   12dc4:	and	r3, r3, #2
   12dc8:	cmp	r3, #0
   12dcc:	bne	12f34 <rb_base64_encode@plt+0x1fe0>
   12dd0:	sub	r3, fp, #16384	; 0x4000
   12dd4:	sub	r3, r3, #4
   12dd8:	sub	r3, r3, #8
   12ddc:	sub	r2, fp, #16384	; 0x4000
   12de0:	sub	r2, r2, #4
   12de4:	mov	r0, r2
   12de8:	mov	r2, #16384	; 0x4000
   12dec:	mov	r1, r3
   12df0:	ldr	r0, [r0, #-12]
   12df4:	bl	10dd4 <rb_read@plt>
   12df8:	str	r0, [fp, #-12]
   12dfc:	ldr	r3, [fp, #-12]
   12e00:	cmp	r3, #0
   12e04:	bge	12e80 <rb_base64_encode@plt+0x1f2c>
   12e08:	bl	10f48 <__errno_location@plt>
   12e0c:	mov	r3, r0
   12e10:	ldr	r3, [r3]
   12e14:	mov	r0, r3
   12e18:	bl	10d08 <rb_ignore_errno@plt>
   12e1c:	mov	r3, r0
   12e20:	cmp	r3, #0
   12e24:	beq	12e64 <rb_base64_encode@plt+0x1f10>
   12e28:	sub	r3, fp, #16384	; 0x4000
   12e2c:	sub	r3, r3, #4
   12e30:	mov	r0, r3
   12e34:	ldr	r3, [fp, #-8]
   12e38:	ldr	r2, [pc, #264]	; 12f48 <rb_base64_encode@plt+0x1ff4>
   12e3c:	add	r2, pc, r2
   12e40:	mov	r1, #1
   12e44:	ldr	r0, [r0, #-12]
   12e48:	bl	10d20 <rb_setselect@plt>
   12e4c:	ldr	r3, [fp, #-8]
   12e50:	ldr	r3, [r3, #88]	; 0x58
   12e54:	ldr	r1, [fp, #-8]
   12e58:	mov	r0, r3
   12e5c:	bl	11964 <rb_base64_encode@plt+0xa10>
   12e60:	b	12f38 <rb_base64_encode@plt+0x1fe4>
   12e64:	ldr	r3, [pc, #224]	; 12f4c <rb_base64_encode@plt+0x1ff8>
   12e68:	add	r3, pc, r3
   12e6c:	mov	r2, r3
   12e70:	mov	r1, #0
   12e74:	ldr	r0, [fp, #-8]
   12e78:	bl	12194 <rb_base64_encode@plt+0x1240>
   12e7c:	b	12f38 <rb_base64_encode@plt+0x1fe4>
   12e80:	ldr	r3, [fp, #-12]
   12e84:	cmp	r3, #0
   12e88:	bne	12ea8 <rb_base64_encode@plt+0x1f54>
   12e8c:	ldr	r3, [pc, #188]	; 12f50 <rb_base64_encode@plt+0x1ffc>
   12e90:	add	r3, pc, r3
   12e94:	mov	r2, r3
   12e98:	mov	r1, #0
   12e9c:	ldr	r0, [fp, #-8]
   12ea0:	bl	12194 <rb_base64_encode@plt+0x1240>
   12ea4:	b	12f38 <rb_base64_encode@plt+0x1fe4>
   12ea8:	ldr	r3, [fp, #-8]
   12eac:	ldr	r0, [r3, #20]
   12eb0:	sub	r3, fp, #16384	; 0x4000
   12eb4:	sub	r3, r3, #4
   12eb8:	sub	r3, r3, #8
   12ebc:	ldr	r2, [fp, #-12]
   12ec0:	mov	r1, r3
   12ec4:	bl	10f24 <rb_rawbuf_append@plt>
   12ec8:	ldr	r3, [fp, #-8]
   12ecc:	ldrb	r3, [r3, #128]	; 0x80
   12ed0:	and	r3, r3, #8
   12ed4:	cmp	r3, #0
   12ed8:	bne	12ee8 <rb_base64_encode@plt+0x1f94>
   12edc:	ldr	r0, [fp, #-8]
   12ee0:	bl	129d8 <rb_base64_encode@plt+0x1a84>
   12ee4:	b	12ef0 <rb_base64_encode@plt+0x1f9c>
   12ee8:	ldr	r0, [fp, #-8]
   12eec:	bl	128dc <rb_base64_encode@plt+0x1988>
   12ef0:	ldr	r3, [fp, #-12]
   12ef4:	cmp	r3, #16384	; 0x4000
   12ef8:	bcs	12dbc <rb_base64_encode@plt+0x1e68>
   12efc:	sub	r3, fp, #16384	; 0x4000
   12f00:	sub	r3, r3, #4
   12f04:	mov	r0, r3
   12f08:	ldr	r3, [fp, #-8]
   12f0c:	ldr	r2, [pc, #64]	; 12f54 <rb_base64_encode@plt+0x2000>
   12f10:	add	r2, pc, r2
   12f14:	mov	r1, #1
   12f18:	ldr	r0, [r0, #-12]
   12f1c:	bl	10d20 <rb_setselect@plt>
   12f20:	b	12f38 <rb_base64_encode@plt+0x1fe4>
   12f24:	nop	{0}
   12f28:	b	12f38 <rb_base64_encode@plt+0x1fe4>
   12f2c:	nop	{0}
   12f30:	b	12f38 <rb_base64_encode@plt+0x1fe4>
   12f34:	nop	{0}
   12f38:	sub	sp, fp, #4
   12f3c:	ldr	fp, [sp]
   12f40:	add	sp, sp, #4
   12f44:	pop	{pc}		; (ldr pc, [sp], #4)
   12f48:			; <UNDEFINED> instruction: 0xfffffef8
   12f4c:	andeq	r3, r0, r0, ror #17
   12f50:			; <UNDEFINED> instruction: 0x000038b8
   12f54:			; <UNDEFINED> instruction: 0xfffffe24
   12f58:	str	fp, [sp, #-8]!
   12f5c:	str	lr, [sp, #4]
   12f60:	add	fp, sp, #4
   12f64:	sub	sp, sp, #8
   12f68:	str	r0, [fp, #-8]
   12f6c:	ldr	r3, [fp, #-8]
   12f70:	ldr	r3, [r3, #16]
   12f74:	mov	r0, r3
   12f78:	bl	10e64 <rb_rawbuf_length@plt>
   12f7c:	mov	r3, r0
   12f80:	cmp	r3, #4096	; 0x1000
   12f84:	blt	12fe8 <rb_base64_encode@plt+0x2094>
   12f88:	ldr	r3, [fp, #-8]
   12f8c:	ldrb	r3, [r3, #128]	; 0x80
   12f90:	orr	r3, r3, #1
   12f94:	uxtb	r2, r3
   12f98:	ldr	r3, [fp, #-8]
   12f9c:	strb	r2, [r3, #128]	; 0x80
   12fa0:	ldr	r3, [fp, #-8]
   12fa4:	ldr	r0, [r3, #88]	; 0x58
   12fa8:	mov	r3, #0
   12fac:	mov	r2, #0
   12fb0:	mov	r1, #1
   12fb4:	bl	10d20 <rb_setselect@plt>
   12fb8:	ldr	r3, [fp, #-8]
   12fbc:	ldrb	r3, [r3, #128]	; 0x80
   12fc0:	and	r3, r3, #8
   12fc4:	cmp	r3, #0
   12fc8:	beq	12fe0 <rb_base64_encode@plt+0x208c>
   12fcc:	ldr	r3, [fp, #-8]
   12fd0:	ldr	r3, [r3, #84]	; 0x54
   12fd4:	ldr	r1, [fp, #-8]
   12fd8:	mov	r0, r3
   12fdc:	bl	11a9c <rb_base64_encode@plt+0xb48>
   12fe0:	mov	r3, #1
   12fe4:	b	12fec <rb_base64_encode@plt+0x2098>
   12fe8:	mov	r3, #0
   12fec:	mov	r0, r3
   12ff0:	sub	sp, fp, #4
   12ff4:	ldr	fp, [sp]
   12ff8:	add	sp, sp, #4
   12ffc:	pop	{pc}		; (ldr pc, [sp], #4)
   13000:	str	fp, [sp, #-8]!
   13004:	str	lr, [sp, #4]
   13008:	add	fp, sp, #4
   1300c:	sub	sp, sp, #16384	; 0x4000
   13010:	sub	sp, sp, #24
   13014:	sub	r3, fp, #16384	; 0x4000
   13018:	sub	r3, r3, #4
   1301c:	str	r0, [r3, #-12]
   13020:	sub	r3, fp, #16384	; 0x4000
   13024:	sub	r3, r3, #4
   13028:	sub	r3, r3, #4
   1302c:	mov	r2, #16384	; 0x4000
   13030:	mov	r1, #0
   13034:	mov	r0, r3
   13038:	bl	10d80 <memset@plt>
   1303c:	sub	r3, fp, #16384	; 0x4000
   13040:	sub	r3, r3, #4
   13044:	ldr	r3, [r3, #-12]
   13048:	add	r0, r3, #52	; 0x34
   1304c:	sub	r1, fp, #16384	; 0x4000
   13050:	sub	r1, r1, #4
   13054:	sub	r1, r1, #4
   13058:	mov	r3, #0
   1305c:	str	r3, [sp]
   13060:	mov	r3, #0
   13064:	mov	r2, #16384	; 0x4000
   13068:	bl	10dec <rb_linebuf_get@plt>
   1306c:	str	r0, [fp, #-8]
   13070:	ldr	r3, [fp, #-8]
   13074:	cmp	r3, #0
   13078:	beq	130a8 <rb_base64_encode@plt+0x2154>
   1307c:	sub	r3, fp, #16384	; 0x4000
   13080:	sub	r3, r3, #4
   13084:	sub	r3, r3, #4
   13088:	sub	r2, fp, #16384	; 0x4000
   1308c:	sub	r2, r2, #4
   13090:	mov	r0, r2
   13094:	ldr	r2, [fp, #-8]
   13098:	mov	r1, r3
   1309c:	ldr	r0, [r0, #-12]
   130a0:	bl	11e88 <rb_base64_encode@plt+0xf34>
   130a4:	b	1303c <rb_base64_encode@plt+0x20e8>
   130a8:	nop	{0}
   130ac:	sub	r3, fp, #16384	; 0x4000
   130b0:	sub	r3, r3, #4
   130b4:	ldr	r3, [r3, #-12]
   130b8:	ldrb	r3, [r3, #128]	; 0x80
   130bc:	and	r3, r3, #8
   130c0:	cmp	r3, #0
   130c4:	beq	130ec <rb_base64_encode@plt+0x2198>
   130c8:	sub	r3, fp, #16384	; 0x4000
   130cc:	sub	r3, r3, #4
   130d0:	ldr	r3, [r3, #-12]
   130d4:	ldr	r3, [r3, #84]	; 0x54
   130d8:	sub	r2, fp, #16384	; 0x4000
   130dc:	sub	r2, r2, #4
   130e0:	ldr	r1, [r2, #-12]
   130e4:	mov	r0, r3
   130e8:	bl	11a9c <rb_base64_encode@plt+0xb48>
   130ec:	nop	{0}
   130f0:	sub	sp, fp, #4
   130f4:	ldr	fp, [sp]
   130f8:	add	sp, sp, #4
   130fc:	pop	{pc}		; (ldr pc, [sp], #4)
   13100:	strd	r4, [sp, #-16]!
   13104:	str	fp, [sp, #8]
   13108:	str	lr, [sp, #12]
   1310c:	add	fp, sp, #12
   13110:	sub	sp, sp, #16384	; 0x4000
   13114:	sub	sp, sp, #16
   13118:	sub	r3, fp, #16384	; 0x4000
   1311c:	sub	r3, r3, #12
   13120:	str	r0, [r3, #-12]
   13124:	sub	r3, fp, #16384	; 0x4000
   13128:	sub	r3, r3, #12
   1312c:	str	r1, [r3, #-16]
   13130:	sub	r3, fp, #16384	; 0x4000
   13134:	sub	r3, r3, #12
   13138:	sub	r3, r3, #8
   1313c:	mov	r2, #16384	; 0x4000
   13140:	mov	r1, #0
   13144:	mov	r0, r3
   13148:	bl	10d80 <memset@plt>
   1314c:	sub	r3, fp, #16384	; 0x4000
   13150:	sub	r3, r3, #12
   13154:	ldr	r3, [r3, #-16]
   13158:	str	r3, [fp, #-16]
   1315c:	mov	r3, #0
   13160:	str	r3, [fp, #-20]	; 0xffffffec
   13164:	ldr	r3, [fp, #-16]
   13168:	cmp	r3, #0
   1316c:	beq	132d4 <rb_base64_encode@plt+0x2380>
   13170:	ldr	r3, [fp, #-16]
   13174:	ldrb	r3, [r3, #128]	; 0x80
   13178:	and	r3, r3, #2
   1317c:	cmp	r3, #0
   13180:	bne	132dc <rb_base64_encode@plt+0x2388>
   13184:	ldr	r0, [fp, #-16]
   13188:	bl	12f58 <rb_base64_encode@plt+0x2004>
   1318c:	mov	r3, r0
   13190:	cmp	r3, #0
   13194:	bne	132e4 <rb_base64_encode@plt+0x2390>
   13198:	ldr	r3, [fp, #-16]
   1319c:	ldrb	r3, [r3, #128]	; 0x80
   131a0:	and	r3, r3, #2
   131a4:	cmp	r3, #0
   131a8:	bne	132ec <rb_base64_encode@plt+0x2398>
   131ac:	ldr	r3, [fp, #-16]
   131b0:	ldr	r0, [r3, #88]	; 0x58
   131b4:	sub	r3, fp, #16384	; 0x4000
   131b8:	sub	r3, r3, #12
   131bc:	sub	r3, r3, #8
   131c0:	mov	r2, #16384	; 0x4000
   131c4:	mov	r1, r3
   131c8:	bl	10dd4 <rb_read@plt>
   131cc:	str	r0, [fp, #-20]	; 0xffffffec
   131d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   131d4:	cmp	r3, #0
   131d8:	beq	13208 <rb_base64_encode@plt+0x22b4>
   131dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   131e0:	cmp	r3, #0
   131e4:	bge	1321c <rb_base64_encode@plt+0x22c8>
   131e8:	bl	10f48 <__errno_location@plt>
   131ec:	mov	r3, r0
   131f0:	ldr	r3, [r3]
   131f4:	mov	r0, r3
   131f8:	bl	10d08 <rb_ignore_errno@plt>
   131fc:	mov	r3, r0
   13200:	cmp	r3, #0
   13204:	bne	1321c <rb_base64_encode@plt+0x22c8>
   13208:	mov	r2, #0
   1320c:	mov	r1, #0
   13210:	ldr	r0, [fp, #-16]
   13214:	bl	12194 <rb_base64_encode@plt+0x1240>
   13218:	b	13308 <rb_base64_encode@plt+0x23b4>
   1321c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13220:	cmp	r3, #0
   13224:	bge	13264 <rb_base64_encode@plt+0x2310>
   13228:	ldr	r3, [fp, #-16]
   1322c:	ldr	r0, [r3, #88]	; 0x58
   13230:	ldr	r3, [fp, #-16]
   13234:	ldr	r2, [pc, #224]	; 1331c <rb_base64_encode@plt+0x23c8>
   13238:	add	r2, pc, r2
   1323c:	mov	r1, #1
   13240:	bl	10d20 <rb_setselect@plt>
   13244:	ldr	r3, [fp, #-16]
   13248:	ldrb	r3, [r3, #128]	; 0x80
   1324c:	and	r3, r3, #8
   13250:	cmp	r3, #0
   13254:	beq	132f4 <rb_base64_encode@plt+0x23a0>
   13258:	ldr	r0, [fp, #-16]
   1325c:	bl	13000 <rb_base64_encode@plt+0x20ac>
   13260:	b	132f4 <rb_base64_encode@plt+0x23a0>
   13264:	ldr	r3, [fp, #-16]
   13268:	ldrd	r0, [r3, #112]	; 0x70
   1326c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13270:	mov	r2, r3
   13274:	asr	r3, r2, #31
   13278:	adds	r4, r0, r2
   1327c:	adc	r5, r1, r3
   13280:	ldr	r3, [fp, #-16]
   13284:	strd	r4, [r3, #112]	; 0x70
   13288:	ldr	r3, [fp, #-16]
   1328c:	add	r0, r3, #52	; 0x34
   13290:	sub	r1, fp, #16384	; 0x4000
   13294:	sub	r1, r1, #12
   13298:	sub	r1, r1, #8
   1329c:	mov	r3, #0
   132a0:	ldr	r2, [fp, #-20]	; 0xffffffec
   132a4:	bl	10d98 <rb_linebuf_parse@plt>
   132a8:	ldr	r3, [fp, #-16]
   132ac:	ldrb	r3, [r3, #128]	; 0x80
   132b0:	and	r3, r3, #2
   132b4:	cmp	r3, #0
   132b8:	bne	132fc <rb_base64_encode@plt+0x23a8>
   132bc:	ldr	r0, [fp, #-16]
   132c0:	bl	12f58 <rb_base64_encode@plt+0x2004>
   132c4:	mov	r3, r0
   132c8:	cmp	r3, #0
   132cc:	bne	13304 <rb_base64_encode@plt+0x23b0>
   132d0:	b	13198 <rb_base64_encode@plt+0x2244>
   132d4:	nop	{0}
   132d8:	b	13308 <rb_base64_encode@plt+0x23b4>
   132dc:	nop	{0}
   132e0:	b	13308 <rb_base64_encode@plt+0x23b4>
   132e4:	nop	{0}
   132e8:	b	13308 <rb_base64_encode@plt+0x23b4>
   132ec:	nop	{0}
   132f0:	b	13308 <rb_base64_encode@plt+0x23b4>
   132f4:	nop	{0}
   132f8:	b	13308 <rb_base64_encode@plt+0x23b4>
   132fc:	nop	{0}
   13300:	b	13308 <rb_base64_encode@plt+0x23b4>
   13304:	nop	{0}
   13308:	sub	sp, fp, #12
   1330c:	ldrd	r4, [sp]
   13310:	ldr	fp, [sp, #8]
   13314:	add	sp, sp, #12
   13318:	pop	{pc}		; (ldr pc, [sp], #4)
   1331c:			; <UNDEFINED> instruction: 0xfffffec0
   13320:	str	fp, [sp, #-8]!
   13324:	str	lr, [sp, #4]
   13328:	add	fp, sp, #4
   1332c:	sub	sp, sp, #16384	; 0x4000
   13330:	sub	sp, sp, #16
   13334:	sub	r3, fp, #16384	; 0x4000
   13338:	sub	r3, r3, #4
   1333c:	str	r0, [r3, #-12]
   13340:	sub	r3, fp, #16384	; 0x4000
   13344:	sub	r3, r3, #4
   13348:	str	r1, [r3, #-16]
   1334c:	sub	r3, fp, #16384	; 0x4000
   13350:	sub	r3, r3, #4
   13354:	ldr	r3, [r3, #-16]
   13358:	str	r3, [fp, #-8]
   1335c:	mov	r3, #0
   13360:	str	r3, [fp, #-12]
   13364:	ldr	r3, [fp, #-8]
   13368:	cmp	r3, #0
   1336c:	beq	13424 <rb_base64_encode@plt+0x24d0>
   13370:	ldr	r3, [fp, #-8]
   13374:	ldr	r0, [r3, #88]	; 0x58
   13378:	sub	r3, fp, #16384	; 0x4000
   1337c:	sub	r3, r3, #4
   13380:	sub	r3, r3, #8
   13384:	mov	r2, #16384	; 0x4000
   13388:	mov	r1, r3
   1338c:	bl	10dd4 <rb_read@plt>
   13390:	str	r0, [fp, #-12]
   13394:	ldr	r3, [fp, #-12]
   13398:	cmp	r3, #0
   1339c:	beq	133cc <rb_base64_encode@plt+0x2478>
   133a0:	ldr	r3, [fp, #-12]
   133a4:	cmp	r3, #0
   133a8:	bge	133f8 <rb_base64_encode@plt+0x24a4>
   133ac:	bl	10f48 <__errno_location@plt>
   133b0:	mov	r3, r0
   133b4:	ldr	r3, [r3]
   133b8:	mov	r0, r3
   133bc:	bl	10d08 <rb_ignore_errno@plt>
   133c0:	mov	r3, r0
   133c4:	cmp	r3, #0
   133c8:	bne	133f8 <rb_base64_encode@plt+0x24a4>
   133cc:	ldr	r3, [fp, #-8]
   133d0:	ldr	r3, [r3, #88]	; 0x58
   133d4:	mov	r0, r3
   133d8:	bl	10e40 <rb_close@plt>
   133dc:	ldr	r3, [fp, #-8]
   133e0:	ldr	r2, [pc, #80]	; 13438 <rb_base64_encode@plt+0x24e4>
   133e4:	add	r2, pc, r2
   133e8:	mov	r1, r3
   133ec:	ldr	r0, [fp, #-8]
   133f0:	bl	11050 <rb_base64_encode@plt+0xfc>
   133f4:	b	13428 <rb_base64_encode@plt+0x24d4>
   133f8:	ldr	r3, [fp, #-12]
   133fc:	cmp	r3, #0
   13400:	bge	13370 <rb_base64_encode@plt+0x241c>
   13404:	ldr	r3, [fp, #-8]
   13408:	ldr	r0, [r3, #88]	; 0x58
   1340c:	ldr	r3, [fp, #-8]
   13410:	ldr	r2, [pc, #36]	; 1343c <rb_base64_encode@plt+0x24e8>
   13414:	add	r2, pc, r2
   13418:	mov	r1, #1
   1341c:	bl	10d20 <rb_setselect@plt>
   13420:	b	13428 <rb_base64_encode@plt+0x24d4>
   13424:	nop	{0}
   13428:	sub	sp, fp, #4
   1342c:	ldr	fp, [sp]
   13430:	add	sp, sp, #4
   13434:	pop	{pc}		; (ldr pc, [sp], #4)
   13438:	andeq	r9, r1, r0, ror #21
   1343c:			; <UNDEFINED> instruction: 0xffffff04
   13440:	str	fp, [sp, #-8]!
   13444:	str	lr, [sp, #4]
   13448:	add	fp, sp, #4
   1344c:	sub	sp, sp, #16
   13450:	str	r0, [fp, #-16]
   13454:	str	r1, [fp, #-20]	; 0xffffffec
   13458:	ldr	r3, [fp, #-20]	; 0xffffffec
   1345c:	ldr	r1, [r3, #20]
   13460:	ldr	r3, [fp, #-20]	; 0xffffffec
   13464:	ldr	r3, [r3, #24]
   13468:	mov	r2, r3
   1346c:	ldr	r0, [fp, #-16]
   13470:	bl	123b8 <rb_base64_encode@plt+0x1464>
   13474:	str	r0, [fp, #-8]
   13478:	ldr	r3, [fp, #-20]	; 0xffffffec
   1347c:	ldr	r3, [r3, #12]
   13480:	add	r3, r3, #1
   13484:	mov	r0, r3
   13488:	bl	114f8 <rb_base64_encode@plt+0x5a4>
   1348c:	str	r0, [fp, #-12]
   13490:	ldr	r1, [fp, #-12]
   13494:	ldr	r0, [fp, #-8]
   13498:	bl	1178c <rb_base64_encode@plt+0x838>
   1349c:	ldr	r3, [fp, #-8]
   134a0:	ldrb	r3, [r3, #128]	; 0x80
   134a4:	orr	r3, r3, #4
   134a8:	uxtb	r2, r3
   134ac:	ldr	r3, [fp, #-8]
   134b0:	strb	r2, [r3, #128]	; 0x80
   134b4:	ldr	r3, [fp, #-8]
   134b8:	ldr	r3, [r3, #84]	; 0x54
   134bc:	mov	r0, r3
   134c0:	bl	10ce4 <rb_get_type@plt>
   134c4:	mov	r3, r0
   134c8:	and	r3, r3, #64	; 0x40
   134cc:	cmp	r3, #0
   134d0:	beq	134e8 <rb_base64_encode@plt+0x2594>
   134d4:	ldr	r3, [fp, #-8]
   134d8:	ldr	r3, [r3, #84]	; 0x54
   134dc:	mov	r1, #4
   134e0:	mov	r0, r3
   134e4:	bl	10de0 <rb_set_type@plt>
   134e8:	ldr	r3, [fp, #-8]
   134ec:	ldr	r3, [r3, #88]	; 0x58
   134f0:	mov	r0, r3
   134f4:	bl	10ce4 <rb_get_type@plt>
   134f8:	mov	r3, r0
   134fc:	cmp	r3, #64	; 0x40
   13500:	bne	13518 <rb_base64_encode@plt+0x25c4>
   13504:	ldr	r3, [fp, #-8]
   13508:	ldr	r3, [r3, #88]	; 0x58
   1350c:	mov	r1, #4
   13510:	mov	r0, r3
   13514:	bl	10de0 <rb_set_type@plt>
   13518:	ldr	r3, [fp, #-8]
   1351c:	ldr	r3, [r3, #84]	; 0x54
   13520:	ldr	r1, [fp, #-8]
   13524:	mov	r0, r3
   13528:	bl	12d3c <rb_base64_encode@plt+0x1de8>
   1352c:	ldr	r3, [fp, #-8]
   13530:	ldr	r3, [r3, #88]	; 0x58
   13534:	ldr	r1, [fp, #-8]
   13538:	mov	r0, r3
   1353c:	bl	13100 <rb_base64_encode@plt+0x21ac>
   13540:	nop	{0}
   13544:	sub	sp, fp, #4
   13548:	ldr	fp, [sp]
   1354c:	add	sp, sp, #4
   13550:	pop	{pc}		; (ldr pc, [sp], #4)
   13554:	str	fp, [sp, #-8]!
   13558:	str	lr, [sp, #4]
   1355c:	add	fp, sp, #4
   13560:	sub	sp, sp, #24
   13564:	str	r0, [fp, #-24]	; 0xffffffe8
   13568:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1356c:	ldr	r3, [r3, #24]
   13570:	str	r3, [fp, #-8]
   13574:	ldr	r3, [fp, #-8]
   13578:	cmp	r3, #0
   1357c:	beq	1358c <rb_base64_encode@plt+0x2638>
   13580:	ldr	r3, [fp, #-8]
   13584:	ldr	r3, [r3, #8]
   13588:	b	13590 <rb_base64_encode@plt+0x263c>
   1358c:	mov	r3, #0
   13590:	str	r3, [fp, #-12]
   13594:	b	13650 <rb_base64_encode@plt+0x26fc>
   13598:	ldr	r3, [fp, #-8]
   1359c:	ldr	r3, [r3]
   135a0:	str	r3, [fp, #-16]
   135a4:	ldr	r3, [fp, #-16]
   135a8:	ldr	r3, [r3, #12]
   135ac:	ldrb	r3, [r3]
   135b0:	cmp	r3, #65	; 0x41
   135b4:	bne	135f8 <rb_base64_encode@plt+0x26a4>
   135b8:	ldr	r3, [fp, #-16]
   135bc:	ldr	r3, [r3, #36]	; 0x24
   135c0:	cmp	r3, #2
   135c4:	bne	135d8 <rb_base64_encode@plt+0x2684>
   135c8:	ldr	r3, [fp, #-16]
   135cc:	ldr	r3, [r3, #16]
   135d0:	cmp	r3, #5
   135d4:	beq	135e8 <rb_base64_encode@plt+0x2694>
   135d8:	ldr	r1, [fp, #-16]
   135dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   135e0:	bl	12478 <rb_base64_encode@plt+0x1524>
   135e4:	b	135fc <rb_base64_encode@plt+0x26a8>
   135e8:	ldr	r1, [fp, #-16]
   135ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   135f0:	bl	13440 <rb_base64_encode@plt+0x24ec>
   135f4:	b	135fc <rb_base64_encode@plt+0x26a8>
   135f8:	nop	{0}
   135fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13600:	add	r3, r3, #24
   13604:	mov	r1, r3
   13608:	ldr	r0, [fp, #-8]
   1360c:	bl	11310 <rb_base64_encode@plt+0x3bc>
   13610:	ldr	r3, [fp, #-16]
   13614:	ldr	r3, [r3, #12]
   13618:	mov	r0, r3
   1361c:	bl	114ac <rb_base64_encode@plt+0x558>
   13620:	ldr	r0, [fp, #-16]
   13624:	bl	114ac <rb_base64_encode@plt+0x558>
   13628:	ldr	r3, [fp, #-12]
   1362c:	str	r3, [fp, #-8]
   13630:	ldr	r3, [fp, #-8]
   13634:	cmp	r3, #0
   13638:	beq	13648 <rb_base64_encode@plt+0x26f4>
   1363c:	ldr	r3, [fp, #-8]
   13640:	ldr	r3, [r3, #8]
   13644:	b	1364c <rb_base64_encode@plt+0x26f8>
   13648:	mov	r3, #0
   1364c:	str	r3, [fp, #-12]
   13650:	ldr	r3, [fp, #-8]
   13654:	cmp	r3, #0
   13658:	bne	13598 <rb_base64_encode@plt+0x2644>
   1365c:	nop	{0}
   13660:	sub	sp, fp, #4
   13664:	ldr	fp, [sp]
   13668:	add	sp, sp, #4
   1366c:	pop	{pc}		; (ldr pc, [sp], #4)
   13670:	str	fp, [sp, #-8]!
   13674:	str	lr, [sp, #4]
   13678:	add	fp, sp, #4
   1367c:	sub	sp, sp, #32
   13680:	str	r0, [fp, #-24]	; 0xffffffe8
   13684:	str	r1, [fp, #-28]	; 0xffffffe4
   13688:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1368c:	str	r3, [fp, #-12]
   13690:	mov	r0, #40	; 0x28
   13694:	bl	1144c <rb_base64_encode@plt+0x4f8>
   13698:	str	r0, [fp, #-16]
   1369c:	mov	r0, #16384	; 0x4000
   136a0:	bl	1144c <rb_base64_encode@plt+0x4f8>
   136a4:	mov	r2, r0
   136a8:	ldr	r3, [fp, #-16]
   136ac:	str	r2, [r3, #12]
   136b0:	ldr	r3, [fp, #-16]
   136b4:	mov	r2, #16384	; 0x4000
   136b8:	str	r2, [r3, #16]
   136bc:	ldr	r3, [fp, #-12]
   136c0:	ldr	r0, [r3, #16]
   136c4:	ldr	r3, [fp, #-16]
   136c8:	ldr	r1, [r3, #12]
   136cc:	ldr	r3, [fp, #-16]
   136d0:	ldr	r2, [r3, #16]
   136d4:	ldr	r3, [fp, #-16]
   136d8:	add	ip, r3, #20
   136dc:	mov	r3, #4
   136e0:	str	r3, [sp]
   136e4:	mov	r3, ip
   136e8:	bl	10edc <rb_recv_fd_buf@plt>
   136ec:	str	r0, [fp, #-20]	; 0xffffffec
   136f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   136f4:	cmp	r3, #0
   136f8:	bgt	13718 <rb_base64_encode@plt+0x27c4>
   136fc:	ldr	r3, [fp, #-16]
   13700:	ldr	r3, [r3, #12]
   13704:	mov	r0, r3
   13708:	bl	114ac <rb_base64_encode@plt+0x558>
   1370c:	ldr	r0, [fp, #-16]
   13710:	bl	114ac <rb_base64_encode@plt+0x558>
   13714:	b	1378c <rb_base64_encode@plt+0x2838>
   13718:	ldr	r2, [fp, #-20]	; 0xffffffec
   1371c:	ldr	r3, [fp, #-16]
   13720:	str	r2, [r3, #16]
   13724:	ldr	r1, [fp, #-16]
   13728:	ldr	r3, [fp, #-12]
   1372c:	add	r3, r3, #24
   13730:	mov	r2, r3
   13734:	ldr	r0, [fp, #-16]
   13738:	bl	111b0 <rb_base64_encode@plt+0x25c>
   1373c:	mov	r3, #0
   13740:	str	r3, [fp, #-8]
   13744:	b	13754 <rb_base64_encode@plt+0x2800>
   13748:	ldr	r3, [fp, #-8]
   1374c:	add	r3, r3, #1
   13750:	str	r3, [fp, #-8]
   13754:	ldr	r3, [fp, #-8]
   13758:	cmp	r3, #3
   1375c:	bgt	13780 <rb_base64_encode@plt+0x282c>
   13760:	ldr	r2, [fp, #-16]
   13764:	ldr	r3, [fp, #-8]
   13768:	add	r3, r3, #4
   1376c:	lsl	r3, r3, #2
   13770:	add	r3, r2, r3
   13774:	ldr	r3, [r3, #4]
   13778:	cmp	r3, #0
   1377c:	bne	13748 <rb_base64_encode@plt+0x27f4>
   13780:	ldr	r3, [fp, #-16]
   13784:	ldr	r2, [fp, #-8]
   13788:	str	r2, [r3, #36]	; 0x24
   1378c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13790:	cmp	r3, #0
   13794:	bgt	13690 <rb_base64_encode@plt+0x273c>
   13798:	ldr	r3, [fp, #-20]	; 0xffffffec
   1379c:	cmp	r3, #0
   137a0:	beq	137d0 <rb_base64_encode@plt+0x287c>
   137a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   137a8:	cmp	r3, #0
   137ac:	bge	137d8 <rb_base64_encode@plt+0x2884>
   137b0:	bl	10f48 <__errno_location@plt>
   137b4:	mov	r3, r0
   137b8:	ldr	r3, [r3]
   137bc:	mov	r0, r3
   137c0:	bl	10d08 <rb_ignore_errno@plt>
   137c4:	mov	r3, r0
   137c8:	cmp	r3, #0
   137cc:	bne	137d8 <rb_base64_encode@plt+0x2884>
   137d0:	mov	r0, #0
   137d4:	bl	10f3c <exit@plt>
   137d8:	ldr	r0, [fp, #-12]
   137dc:	bl	13554 <rb_base64_encode@plt+0x2600>
   137e0:	ldr	r3, [fp, #-12]
   137e4:	ldr	r0, [r3, #16]
   137e8:	ldr	r3, [fp, #-12]
   137ec:	ldr	r2, [pc, #28]	; 13810 <rb_base64_encode@plt+0x28bc>
   137f0:	add	r2, pc, r2
   137f4:	mov	r1, #1
   137f8:	bl	10d20 <rb_setselect@plt>
   137fc:	nop	{0}
   13800:	sub	sp, fp, #4
   13804:	ldr	fp, [sp]
   13808:	add	sp, sp, #4
   1380c:	pop	{pc}		; (ldr pc, [sp], #4)
   13810:			; <UNDEFINED> instruction: 0xfffffe78
   13814:	str	fp, [sp, #-8]!
   13818:	str	lr, [sp, #4]
   1381c:	add	fp, sp, #4
   13820:	sub	sp, sp, #16384	; 0x4000
   13824:	sub	sp, sp, #16
   13828:	sub	r3, fp, #16384	; 0x4000
   1382c:	sub	r3, r3, #4
   13830:	str	r0, [r3, #-12]
   13834:	sub	r3, fp, #16384	; 0x4000
   13838:	sub	r3, r3, #4
   1383c:	str	r1, [r3, #-16]
   13840:	nop	{0}
   13844:	sub	r3, fp, #16384	; 0x4000
   13848:	sub	r3, r3, #4
   1384c:	sub	r3, r3, #4
   13850:	sub	r2, fp, #16384	; 0x4000
   13854:	sub	r2, r2, #4
   13858:	mov	r0, r2
   1385c:	mov	r2, #16384	; 0x4000
   13860:	mov	r1, r3
   13864:	ldr	r0, [r0, #-12]
   13868:	bl	10dd4 <rb_read@plt>
   1386c:	str	r0, [fp, #-8]
   13870:	ldr	r3, [fp, #-8]
   13874:	cmp	r3, #0
   13878:	bgt	13844 <rb_base64_encode@plt+0x28f0>
   1387c:	ldr	r3, [fp, #-8]
   13880:	cmp	r3, #0
   13884:	beq	138b4 <rb_base64_encode@plt+0x2960>
   13888:	ldr	r3, [fp, #-8]
   1388c:	cmp	r3, #0
   13890:	bge	138bc <rb_base64_encode@plt+0x2968>
   13894:	bl	10f48 <__errno_location@plt>
   13898:	mov	r3, r0
   1389c:	ldr	r3, [r3]
   138a0:	mov	r0, r3
   138a4:	bl	10d08 <rb_ignore_errno@plt>
   138a8:	mov	r3, r0
   138ac:	cmp	r3, #0
   138b0:	bne	138bc <rb_base64_encode@plt+0x2968>
   138b4:	mov	r0, #0
   138b8:	bl	10f3c <exit@plt>
   138bc:	sub	r3, fp, #16384	; 0x4000
   138c0:	sub	r3, r3, #4
   138c4:	mov	r0, r3
   138c8:	mov	r3, #0
   138cc:	ldr	r2, [pc, #32]	; 138f4 <rb_base64_encode@plt+0x29a0>
   138d0:	add	r2, pc, r2
   138d4:	mov	r1, #1
   138d8:	ldr	r0, [r0, #-12]
   138dc:	bl	10d20 <rb_setselect@plt>
   138e0:	nop	{0}
   138e4:	sub	sp, fp, #4
   138e8:	ldr	fp, [sp]
   138ec:	add	sp, sp, #4
   138f0:	pop	{pc}		; (ldr pc, [sp], #4)
   138f4:			; <UNDEFINED> instruction: 0xffffff3c
   138f8:	str	r4, [sp, #-12]!
   138fc:	str	fp, [sp, #4]
   13900:	str	lr, [sp, #8]
   13904:	add	fp, sp, #8
   13908:	sub	sp, sp, #60	; 0x3c
   1390c:	str	r0, [fp, #-48]	; 0xffffffd0
   13910:	str	r1, [fp, #-52]	; 0xffffffcc
   13914:	ldr	r4, [pc, #816]	; 13c4c <rb_base64_encode@plt+0x2cf8>
   13918:	add	r4, pc, r4
   1391c:	bl	11740 <rb_base64_encode@plt+0x7ec>
   13920:	str	r0, [fp, #-20]	; 0xffffffec
   13924:	ldr	r3, [pc, #804]	; 13c50 <rb_base64_encode@plt+0x2cfc>
   13928:	add	r3, pc, r3
   1392c:	mov	r0, r3
   13930:	bl	10d50 <getenv@plt>
   13934:	str	r0, [fp, #-24]	; 0xffffffe8
   13938:	ldr	r3, [pc, #788]	; 13c54 <rb_base64_encode@plt+0x2d00>
   1393c:	add	r3, pc, r3
   13940:	mov	r0, r3
   13944:	bl	10d50 <getenv@plt>
   13948:	str	r0, [fp, #-28]	; 0xffffffe4
   1394c:	ldr	r3, [pc, #772]	; 13c58 <rb_base64_encode@plt+0x2d04>
   13950:	add	r3, pc, r3
   13954:	mov	r0, r3
   13958:	bl	10d50 <getenv@plt>
   1395c:	str	r0, [fp, #-32]	; 0xffffffe0
   13960:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13964:	cmp	r3, #0
   13968:	beq	13984 <rb_base64_encode@plt+0x2a30>
   1396c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13970:	cmp	r3, #0
   13974:	beq	13984 <rb_base64_encode@plt+0x2a30>
   13978:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1397c:	cmp	r3, #0
   13980:	bne	139cc <rb_base64_encode@plt+0x2a78>
   13984:	ldr	r3, [pc, #720]	; 13c5c <rb_base64_encode@plt+0x2d08>
   13988:	ldr	r3, [r4, r3]
   1398c:	ldr	r3, [r3]
   13990:	mov	r2, #52	; 0x34
   13994:	mov	r1, #1
   13998:	ldr	r0, [pc, #704]	; 13c60 <rb_base64_encode@plt+0x2d0c>
   1399c:	add	r0, pc, r0
   139a0:	bl	10e88 <fwrite@plt>
   139a4:	ldr	r3, [pc, #688]	; 13c5c <rb_base64_encode@plt+0x2d08>
   139a8:	ldr	r3, [r4, r3]
   139ac:	ldr	r3, [r3]
   139b0:	mov	r2, #49	; 0x31
   139b4:	mov	r1, #1
   139b8:	ldr	r0, [pc, #676]	; 13c64 <rb_base64_encode@plt+0x2d10>
   139bc:	add	r0, pc, r0
   139c0:	bl	10e88 <fwrite@plt>
   139c4:	mov	r0, #1
   139c8:	bl	10f3c <exit@plt>
   139cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   139d0:	bl	10e58 <atoi@plt>
   139d4:	str	r0, [fp, #-36]	; 0xffffffdc
   139d8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   139dc:	bl	10e58 <atoi@plt>
   139e0:	str	r0, [fp, #-40]	; 0xffffffd8
   139e4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   139e8:	bl	10e58 <atoi@plt>
   139ec:	mov	r2, r0
   139f0:	ldr	r3, [pc, #624]	; 13c68 <rb_base64_encode@plt+0x2d14>
   139f4:	add	r3, pc, r3
   139f8:	str	r2, [r3]
   139fc:	mov	r3, #0
   13a00:	str	r3, [fp, #-16]
   13a04:	mov	r3, #0
   13a08:	str	r3, [fp, #-16]
   13a0c:	b	13a50 <rb_base64_encode@plt+0x2afc>
   13a10:	ldr	r2, [fp, #-16]
   13a14:	ldr	r3, [fp, #-36]	; 0xffffffdc
   13a18:	cmp	r2, r3
   13a1c:	beq	13a44 <rb_base64_encode@plt+0x2af0>
   13a20:	ldr	r2, [fp, #-16]
   13a24:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13a28:	cmp	r2, r3
   13a2c:	beq	13a44 <rb_base64_encode@plt+0x2af0>
   13a30:	ldr	r3, [fp, #-16]
   13a34:	cmp	r3, #2
   13a38:	ble	13a44 <rb_base64_encode@plt+0x2af0>
   13a3c:	ldr	r0, [fp, #-16]
   13a40:	bl	10e7c <close@plt>
   13a44:	ldr	r3, [fp, #-16]
   13a48:	add	r3, r3, #1
   13a4c:	str	r3, [fp, #-16]
   13a50:	ldr	r2, [fp, #-16]
   13a54:	ldr	r3, [fp, #-20]	; 0xffffffec
   13a58:	cmp	r2, r3
   13a5c:	blt	13a10 <rb_base64_encode@plt+0x2abc>
   13a60:	mov	r1, #2
   13a64:	ldr	r3, [pc, #512]	; 13c6c <rb_base64_encode@plt+0x2d18>
   13a68:	add	r3, pc, r3
   13a6c:	mov	r0, r3
   13a70:	bl	10cc0 <open@plt>
   13a74:	str	r0, [fp, #-16]
   13a78:	ldr	r3, [fp, #-16]
   13a7c:	cmp	r3, #0
   13a80:	blt	13b04 <rb_base64_encode@plt+0x2bb0>
   13a84:	ldr	r3, [fp, #-36]	; 0xffffffdc
   13a88:	cmp	r3, #0
   13a8c:	beq	13aa8 <rb_base64_encode@plt+0x2b54>
   13a90:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13a94:	cmp	r3, #0
   13a98:	beq	13aa8 <rb_base64_encode@plt+0x2b54>
   13a9c:	mov	r1, #0
   13aa0:	ldr	r0, [fp, #-16]
   13aa4:	bl	10ee8 <dup2@plt>
   13aa8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   13aac:	cmp	r3, #1
   13ab0:	beq	13acc <rb_base64_encode@plt+0x2b78>
   13ab4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13ab8:	cmp	r3, #1
   13abc:	beq	13acc <rb_base64_encode@plt+0x2b78>
   13ac0:	mov	r1, #1
   13ac4:	ldr	r0, [fp, #-16]
   13ac8:	bl	10ee8 <dup2@plt>
   13acc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   13ad0:	cmp	r3, #2
   13ad4:	beq	13af0 <rb_base64_encode@plt+0x2b9c>
   13ad8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13adc:	cmp	r3, #2
   13ae0:	beq	13af0 <rb_base64_encode@plt+0x2b9c>
   13ae4:	mov	r1, #2
   13ae8:	ldr	r0, [fp, #-16]
   13aec:	bl	10ee8 <dup2@plt>
   13af0:	ldr	r3, [fp, #-16]
   13af4:	cmp	r3, #2
   13af8:	ble	13b04 <rb_base64_encode@plt+0x2bb0>
   13afc:	ldr	r0, [fp, #-16]
   13b00:	bl	10e7c <close@plt>
   13b04:	bl	1164c <rb_base64_encode@plt+0x6f8>
   13b08:	mov	r3, #4096	; 0x1000
   13b0c:	str	r3, [sp, #8]
   13b10:	mov	r3, #1024	; 0x400
   13b14:	str	r3, [sp, #4]
   13b18:	ldr	r3, [fp, #-20]	; 0xffffffec
   13b1c:	str	r3, [sp]
   13b20:	mov	r3, #0
   13b24:	mov	r2, #0
   13b28:	mov	r1, #0
   13b2c:	mov	r0, #0
   13b30:	bl	10eb8 <rb_lib_init@plt>
   13b34:	mov	r0, #4096	; 0x1000
   13b38:	bl	10f0c <rb_linebuf_init@plt>
   13b3c:	mov	r0, #4096	; 0x1000
   13b40:	bl	10db0 <rb_init_rawbuffers@plt>
   13b44:	mov	r0, #48	; 0x30
   13b48:	bl	1144c <rb_base64_encode@plt+0x4f8>
   13b4c:	mov	r2, r0
   13b50:	ldr	r3, [pc, #280]	; 13c70 <rb_base64_encode@plt+0x2d1c>
   13b54:	add	r3, pc, r3
   13b58:	str	r2, [r3]
   13b5c:	ldr	r3, [pc, #272]	; 13c74 <rb_base64_encode@plt+0x2d20>
   13b60:	add	r3, pc, r3
   13b64:	ldr	r4, [r3]
   13b68:	ldr	r3, [pc, #264]	; 13c78 <rb_base64_encode@plt+0x2d24>
   13b6c:	add	r3, pc, r3
   13b70:	mov	r2, r3
   13b74:	mov	r1, #4
   13b78:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13b7c:	bl	10ed0 <rb_open@plt>
   13b80:	mov	r3, r0
   13b84:	str	r3, [r4, #16]
   13b88:	ldr	r3, [pc, #236]	; 13c7c <rb_base64_encode@plt+0x2d28>
   13b8c:	add	r3, pc, r3
   13b90:	ldr	r4, [r3]
   13b94:	ldr	r3, [pc, #228]	; 13c80 <rb_base64_encode@plt+0x2d2c>
   13b98:	add	r3, pc, r3
   13b9c:	mov	r2, r3
   13ba0:	mov	r1, #8
   13ba4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13ba8:	bl	10ed0 <rb_open@plt>
   13bac:	mov	r3, r0
   13bb0:	str	r3, [r4, #20]
   13bb4:	ldr	r3, [pc, #200]	; 13c84 <rb_base64_encode@plt+0x2d30>
   13bb8:	add	r3, pc, r3
   13bbc:	ldr	r3, [r3]
   13bc0:	ldr	r3, [r3, #16]
   13bc4:	mov	r0, r3
   13bc8:	bl	10d74 <rb_set_nb@plt>
   13bcc:	ldr	r3, [pc, #180]	; 13c88 <rb_base64_encode@plt+0x2d34>
   13bd0:	add	r3, pc, r3
   13bd4:	ldr	r3, [r3]
   13bd8:	ldr	r3, [r3, #20]
   13bdc:	mov	r0, r3
   13be0:	bl	10d74 <rb_set_nb@plt>
   13be4:	mov	r3, #10
   13be8:	mov	r2, #0
   13bec:	ldr	r1, [pc, #152]	; 13c8c <rb_base64_encode@plt+0x2d38>
   13bf0:	add	r1, pc, r1
   13bf4:	ldr	r0, [pc, #148]	; 13c90 <rb_base64_encode@plt+0x2d3c>
   13bf8:	add	r0, pc, r0
   13bfc:	bl	10cfc <rb_event_addish@plt>
   13c00:	ldr	r3, [pc, #140]	; 13c94 <rb_base64_encode@plt+0x2d40>
   13c04:	add	r3, pc, r3
   13c08:	ldr	r3, [r3]
   13c0c:	ldr	r3, [r3, #20]
   13c10:	mov	r1, #0
   13c14:	mov	r0, r3
   13c18:	bl	13814 <rb_base64_encode@plt+0x28c0>
   13c1c:	ldr	r3, [pc, #116]	; 13c98 <rb_base64_encode@plt+0x2d44>
   13c20:	add	r3, pc, r3
   13c24:	ldr	r3, [r3]
   13c28:	ldr	r2, [r3, #16]
   13c2c:	ldr	r3, [pc, #104]	; 13c9c <rb_base64_encode@plt+0x2d48>
   13c30:	add	r3, pc, r3
   13c34:	ldr	r3, [r3]
   13c38:	mov	r1, r3
   13c3c:	mov	r0, r2
   13c40:	bl	13670 <rb_base64_encode@plt+0x271c>
   13c44:	mov	r0, #0
   13c48:	bl	10dc8 <rb_lib_loop@plt>
   13c4c:	andeq	r3, r1, r0, ror #13
   13c50:	andeq	r2, r0, r4, lsr lr
   13c54:	andeq	r2, r0, r8, lsr #28
   13c58:	andeq	r2, r0, r0, lsr #28
   13c5c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   13c60:	andeq	r2, r0, r0, ror #27
   13c64:	strdeq	r2, [r0], -r8
   13c68:	andeq	r3, r1, r8, lsl #14
   13c6c:	andeq	r2, r0, r0, lsl #27
   13c70:	andeq	r3, r1, ip, lsr #11
   13c74:	andeq	r3, r1, r0, lsr #11
   13c78:	andeq	r2, r0, r8, lsl #25
   13c7c:	andeq	r3, r1, r4, ror r5
   13c80:	andeq	r2, r0, r0, ror ip
   13c84:	andeq	r3, r1, r8, asr #10
   13c88:	andeq	r3, r1, r0, lsr r5
   13c8c:			; <UNDEFINED> instruction: 0xffffdc90
   13c90:	andeq	r2, r0, ip, lsl ip
   13c94:	strdeq	r3, [r1], -ip
   13c98:	andeq	r3, r1, r0, ror #9
   13c9c:	ldrdeq	r3, [r1], -r0
   13ca0:	str	r4, [sp, #-12]!
   13ca4:	str	fp, [sp, #4]
   13ca8:	str	lr, [sp, #8]
   13cac:	add	fp, sp, #8
   13cb0:	sub	sp, sp, #100	; 0x64
   13cb4:	str	r0, [fp, #-104]	; 0xffffff98
   13cb8:	str	r1, [fp, #-108]	; 0xffffff94
   13cbc:	sub	r3, fp, #96	; 0x60
   13cc0:	mov	r2, #64	; 0x40
   13cc4:	ldr	r1, [fp, #-108]	; 0xffffff94
   13cc8:	mov	r0, r3
   13ccc:	bl	10e1c <memcpy@plt>
   13cd0:	ldr	r3, [fp, #-104]	; 0xffffff98
   13cd4:	ldr	r3, [r3]
   13cd8:	str	r3, [fp, #-16]
   13cdc:	ldr	r3, [fp, #-104]	; 0xffffff98
   13ce0:	ldr	r3, [r3, #4]
   13ce4:	str	r3, [fp, #-20]	; 0xffffffec
   13ce8:	ldr	r3, [fp, #-104]	; 0xffffff98
   13cec:	ldr	r3, [r3, #8]
   13cf0:	str	r3, [fp, #-24]	; 0xffffffe8
   13cf4:	ldr	r3, [fp, #-104]	; 0xffffff98
   13cf8:	ldr	r3, [r3, #12]
   13cfc:	str	r3, [fp, #-28]	; 0xffffffe4
   13d00:	ldr	r3, [fp, #-104]	; 0xffffff98
   13d04:	ldr	r3, [r3, #16]
   13d08:	str	r3, [fp, #-32]	; 0xffffffe0
   13d0c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13d10:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13d14:	eor	r2, r2, r3
   13d18:	ldr	r3, [fp, #-20]	; 0xffffffec
   13d1c:	and	r2, r2, r3
   13d20:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13d24:	eor	r4, r2, r3
   13d28:	ldr	r3, [fp, #-96]	; 0xffffffa0
   13d2c:	mov	r0, r3
   13d30:	bl	10f00 <htonl@plt>
   13d34:	mov	r3, r0
   13d38:	str	r3, [fp, #-96]	; 0xffffffa0
   13d3c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   13d40:	add	r2, r4, r3
   13d44:	ldr	r3, [fp, #-16]
   13d48:	ror	r3, r3, #27
   13d4c:	add	r2, r2, r3
   13d50:	movw	r3, #31129	; 0x7999
   13d54:	movt	r3, #23170	; 0x5a82
   13d58:	add	r3, r2, r3
   13d5c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13d60:	add	r3, r2, r3
   13d64:	str	r3, [fp, #-32]	; 0xffffffe0
   13d68:	ldr	r3, [fp, #-20]	; 0xffffffec
   13d6c:	ror	r3, r3, #2
   13d70:	str	r3, [fp, #-20]	; 0xffffffec
   13d74:	ldr	r2, [fp, #-20]	; 0xffffffec
   13d78:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13d7c:	eor	r2, r2, r3
   13d80:	ldr	r3, [fp, #-16]
   13d84:	and	r2, r2, r3
   13d88:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13d8c:	eor	r4, r2, r3
   13d90:	ldr	r3, [fp, #-92]	; 0xffffffa4
   13d94:	mov	r0, r3
   13d98:	bl	10f00 <htonl@plt>
   13d9c:	mov	r3, r0
   13da0:	str	r3, [fp, #-92]	; 0xffffffa4
   13da4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   13da8:	add	r2, r4, r3
   13dac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13db0:	ror	r3, r3, #27
   13db4:	add	r2, r2, r3
   13db8:	movw	r3, #31129	; 0x7999
   13dbc:	movt	r3, #23170	; 0x5a82
   13dc0:	add	r3, r2, r3
   13dc4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   13dc8:	add	r3, r2, r3
   13dcc:	str	r3, [fp, #-28]	; 0xffffffe4
   13dd0:	ldr	r3, [fp, #-16]
   13dd4:	ror	r3, r3, #2
   13dd8:	str	r3, [fp, #-16]
   13ddc:	ldr	r2, [fp, #-16]
   13de0:	ldr	r3, [fp, #-20]	; 0xffffffec
   13de4:	eor	r2, r2, r3
   13de8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13dec:	and	r2, r2, r3
   13df0:	ldr	r3, [fp, #-20]	; 0xffffffec
   13df4:	eor	r4, r2, r3
   13df8:	ldr	r3, [fp, #-88]	; 0xffffffa8
   13dfc:	mov	r0, r3
   13e00:	bl	10f00 <htonl@plt>
   13e04:	mov	r3, r0
   13e08:	str	r3, [fp, #-88]	; 0xffffffa8
   13e0c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   13e10:	add	r2, r4, r3
   13e14:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13e18:	ror	r3, r3, #27
   13e1c:	add	r2, r2, r3
   13e20:	movw	r3, #31129	; 0x7999
   13e24:	movt	r3, #23170	; 0x5a82
   13e28:	add	r3, r2, r3
   13e2c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13e30:	add	r3, r2, r3
   13e34:	str	r3, [fp, #-24]	; 0xffffffe8
   13e38:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13e3c:	ror	r3, r3, #2
   13e40:	str	r3, [fp, #-32]	; 0xffffffe0
   13e44:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13e48:	ldr	r3, [fp, #-16]
   13e4c:	eor	r2, r2, r3
   13e50:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13e54:	and	r2, r2, r3
   13e58:	ldr	r3, [fp, #-16]
   13e5c:	eor	r4, r2, r3
   13e60:	ldr	r3, [fp, #-84]	; 0xffffffac
   13e64:	mov	r0, r3
   13e68:	bl	10f00 <htonl@plt>
   13e6c:	mov	r3, r0
   13e70:	str	r3, [fp, #-84]	; 0xffffffac
   13e74:	ldr	r3, [fp, #-84]	; 0xffffffac
   13e78:	add	r2, r4, r3
   13e7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13e80:	ror	r3, r3, #27
   13e84:	add	r2, r2, r3
   13e88:	movw	r3, #31129	; 0x7999
   13e8c:	movt	r3, #23170	; 0x5a82
   13e90:	add	r3, r2, r3
   13e94:	ldr	r2, [fp, #-20]	; 0xffffffec
   13e98:	add	r3, r2, r3
   13e9c:	str	r3, [fp, #-20]	; 0xffffffec
   13ea0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13ea4:	ror	r3, r3, #2
   13ea8:	str	r3, [fp, #-28]	; 0xffffffe4
   13eac:	ldr	r2, [fp, #-28]	; 0xffffffe4
   13eb0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13eb4:	eor	r2, r2, r3
   13eb8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13ebc:	and	r2, r2, r3
   13ec0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13ec4:	eor	r4, r2, r3
   13ec8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   13ecc:	mov	r0, r3
   13ed0:	bl	10f00 <htonl@plt>
   13ed4:	mov	r3, r0
   13ed8:	str	r3, [fp, #-80]	; 0xffffffb0
   13edc:	ldr	r3, [fp, #-80]	; 0xffffffb0
   13ee0:	add	r2, r4, r3
   13ee4:	ldr	r3, [fp, #-20]	; 0xffffffec
   13ee8:	ror	r3, r3, #27
   13eec:	add	r2, r2, r3
   13ef0:	movw	r3, #31129	; 0x7999
   13ef4:	movt	r3, #23170	; 0x5a82
   13ef8:	add	r3, r2, r3
   13efc:	ldr	r2, [fp, #-16]
   13f00:	add	r3, r2, r3
   13f04:	str	r3, [fp, #-16]
   13f08:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13f0c:	ror	r3, r3, #2
   13f10:	str	r3, [fp, #-24]	; 0xffffffe8
   13f14:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13f18:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13f1c:	eor	r2, r2, r3
   13f20:	ldr	r3, [fp, #-20]	; 0xffffffec
   13f24:	and	r2, r2, r3
   13f28:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13f2c:	eor	r4, r2, r3
   13f30:	ldr	r3, [fp, #-76]	; 0xffffffb4
   13f34:	mov	r0, r3
   13f38:	bl	10f00 <htonl@plt>
   13f3c:	mov	r3, r0
   13f40:	str	r3, [fp, #-76]	; 0xffffffb4
   13f44:	ldr	r3, [fp, #-76]	; 0xffffffb4
   13f48:	add	r2, r4, r3
   13f4c:	ldr	r3, [fp, #-16]
   13f50:	ror	r3, r3, #27
   13f54:	add	r2, r2, r3
   13f58:	movw	r3, #31129	; 0x7999
   13f5c:	movt	r3, #23170	; 0x5a82
   13f60:	add	r3, r2, r3
   13f64:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13f68:	add	r3, r2, r3
   13f6c:	str	r3, [fp, #-32]	; 0xffffffe0
   13f70:	ldr	r3, [fp, #-20]	; 0xffffffec
   13f74:	ror	r3, r3, #2
   13f78:	str	r3, [fp, #-20]	; 0xffffffec
   13f7c:	ldr	r2, [fp, #-20]	; 0xffffffec
   13f80:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13f84:	eor	r2, r2, r3
   13f88:	ldr	r3, [fp, #-16]
   13f8c:	and	r2, r2, r3
   13f90:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13f94:	eor	r4, r2, r3
   13f98:	ldr	r3, [fp, #-72]	; 0xffffffb8
   13f9c:	mov	r0, r3
   13fa0:	bl	10f00 <htonl@plt>
   13fa4:	mov	r3, r0
   13fa8:	str	r3, [fp, #-72]	; 0xffffffb8
   13fac:	ldr	r3, [fp, #-72]	; 0xffffffb8
   13fb0:	add	r2, r4, r3
   13fb4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13fb8:	ror	r3, r3, #27
   13fbc:	add	r2, r2, r3
   13fc0:	movw	r3, #31129	; 0x7999
   13fc4:	movt	r3, #23170	; 0x5a82
   13fc8:	add	r3, r2, r3
   13fcc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   13fd0:	add	r3, r2, r3
   13fd4:	str	r3, [fp, #-28]	; 0xffffffe4
   13fd8:	ldr	r3, [fp, #-16]
   13fdc:	ror	r3, r3, #2
   13fe0:	str	r3, [fp, #-16]
   13fe4:	ldr	r2, [fp, #-16]
   13fe8:	ldr	r3, [fp, #-20]	; 0xffffffec
   13fec:	eor	r2, r2, r3
   13ff0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13ff4:	and	r2, r2, r3
   13ff8:	ldr	r3, [fp, #-20]	; 0xffffffec
   13ffc:	eor	r4, r2, r3
   14000:	ldr	r3, [fp, #-68]	; 0xffffffbc
   14004:	mov	r0, r3
   14008:	bl	10f00 <htonl@plt>
   1400c:	mov	r3, r0
   14010:	str	r3, [fp, #-68]	; 0xffffffbc
   14014:	ldr	r3, [fp, #-68]	; 0xffffffbc
   14018:	add	r2, r4, r3
   1401c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14020:	ror	r3, r3, #27
   14024:	add	r2, r2, r3
   14028:	movw	r3, #31129	; 0x7999
   1402c:	movt	r3, #23170	; 0x5a82
   14030:	add	r3, r2, r3
   14034:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14038:	add	r3, r2, r3
   1403c:	str	r3, [fp, #-24]	; 0xffffffe8
   14040:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14044:	ror	r3, r3, #2
   14048:	str	r3, [fp, #-32]	; 0xffffffe0
   1404c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14050:	ldr	r3, [fp, #-16]
   14054:	eor	r2, r2, r3
   14058:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1405c:	and	r2, r2, r3
   14060:	ldr	r3, [fp, #-16]
   14064:	eor	r4, r2, r3
   14068:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1406c:	mov	r0, r3
   14070:	bl	10f00 <htonl@plt>
   14074:	mov	r3, r0
   14078:	str	r3, [fp, #-64]	; 0xffffffc0
   1407c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   14080:	add	r2, r4, r3
   14084:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14088:	ror	r3, r3, #27
   1408c:	add	r2, r2, r3
   14090:	movw	r3, #31129	; 0x7999
   14094:	movt	r3, #23170	; 0x5a82
   14098:	add	r3, r2, r3
   1409c:	ldr	r2, [fp, #-20]	; 0xffffffec
   140a0:	add	r3, r2, r3
   140a4:	str	r3, [fp, #-20]	; 0xffffffec
   140a8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   140ac:	ror	r3, r3, #2
   140b0:	str	r3, [fp, #-28]	; 0xffffffe4
   140b4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   140b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   140bc:	eor	r2, r2, r3
   140c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   140c4:	and	r2, r2, r3
   140c8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   140cc:	eor	r4, r2, r3
   140d0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   140d4:	mov	r0, r3
   140d8:	bl	10f00 <htonl@plt>
   140dc:	mov	r3, r0
   140e0:	str	r3, [fp, #-60]	; 0xffffffc4
   140e4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   140e8:	add	r2, r4, r3
   140ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   140f0:	ror	r3, r3, #27
   140f4:	add	r2, r2, r3
   140f8:	movw	r3, #31129	; 0x7999
   140fc:	movt	r3, #23170	; 0x5a82
   14100:	add	r3, r2, r3
   14104:	ldr	r2, [fp, #-16]
   14108:	add	r3, r2, r3
   1410c:	str	r3, [fp, #-16]
   14110:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14114:	ror	r3, r3, #2
   14118:	str	r3, [fp, #-24]	; 0xffffffe8
   1411c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14120:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14124:	eor	r2, r2, r3
   14128:	ldr	r3, [fp, #-20]	; 0xffffffec
   1412c:	and	r2, r2, r3
   14130:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14134:	eor	r4, r2, r3
   14138:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1413c:	mov	r0, r3
   14140:	bl	10f00 <htonl@plt>
   14144:	mov	r3, r0
   14148:	str	r3, [fp, #-56]	; 0xffffffc8
   1414c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   14150:	add	r2, r4, r3
   14154:	ldr	r3, [fp, #-16]
   14158:	ror	r3, r3, #27
   1415c:	add	r2, r2, r3
   14160:	movw	r3, #31129	; 0x7999
   14164:	movt	r3, #23170	; 0x5a82
   14168:	add	r3, r2, r3
   1416c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14170:	add	r3, r2, r3
   14174:	str	r3, [fp, #-32]	; 0xffffffe0
   14178:	ldr	r3, [fp, #-20]	; 0xffffffec
   1417c:	ror	r3, r3, #2
   14180:	str	r3, [fp, #-20]	; 0xffffffec
   14184:	ldr	r2, [fp, #-20]	; 0xffffffec
   14188:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1418c:	eor	r2, r2, r3
   14190:	ldr	r3, [fp, #-16]
   14194:	and	r2, r2, r3
   14198:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1419c:	eor	r4, r2, r3
   141a0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   141a4:	mov	r0, r3
   141a8:	bl	10f00 <htonl@plt>
   141ac:	mov	r3, r0
   141b0:	str	r3, [fp, #-52]	; 0xffffffcc
   141b4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   141b8:	add	r2, r4, r3
   141bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   141c0:	ror	r3, r3, #27
   141c4:	add	r2, r2, r3
   141c8:	movw	r3, #31129	; 0x7999
   141cc:	movt	r3, #23170	; 0x5a82
   141d0:	add	r3, r2, r3
   141d4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   141d8:	add	r3, r2, r3
   141dc:	str	r3, [fp, #-28]	; 0xffffffe4
   141e0:	ldr	r3, [fp, #-16]
   141e4:	ror	r3, r3, #2
   141e8:	str	r3, [fp, #-16]
   141ec:	ldr	r2, [fp, #-16]
   141f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   141f4:	eor	r2, r2, r3
   141f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   141fc:	and	r2, r2, r3
   14200:	ldr	r3, [fp, #-20]	; 0xffffffec
   14204:	eor	r4, r2, r3
   14208:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1420c:	mov	r0, r3
   14210:	bl	10f00 <htonl@plt>
   14214:	mov	r3, r0
   14218:	str	r3, [fp, #-48]	; 0xffffffd0
   1421c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14220:	add	r2, r4, r3
   14224:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14228:	ror	r3, r3, #27
   1422c:	add	r2, r2, r3
   14230:	movw	r3, #31129	; 0x7999
   14234:	movt	r3, #23170	; 0x5a82
   14238:	add	r3, r2, r3
   1423c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14240:	add	r3, r2, r3
   14244:	str	r3, [fp, #-24]	; 0xffffffe8
   14248:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1424c:	ror	r3, r3, #2
   14250:	str	r3, [fp, #-32]	; 0xffffffe0
   14254:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14258:	ldr	r3, [fp, #-16]
   1425c:	eor	r2, r2, r3
   14260:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14264:	and	r2, r2, r3
   14268:	ldr	r3, [fp, #-16]
   1426c:	eor	r4, r2, r3
   14270:	ldr	r3, [fp, #-44]	; 0xffffffd4
   14274:	mov	r0, r3
   14278:	bl	10f00 <htonl@plt>
   1427c:	mov	r3, r0
   14280:	str	r3, [fp, #-44]	; 0xffffffd4
   14284:	ldr	r3, [fp, #-44]	; 0xffffffd4
   14288:	add	r2, r4, r3
   1428c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14290:	ror	r3, r3, #27
   14294:	add	r2, r2, r3
   14298:	movw	r3, #31129	; 0x7999
   1429c:	movt	r3, #23170	; 0x5a82
   142a0:	add	r3, r2, r3
   142a4:	ldr	r2, [fp, #-20]	; 0xffffffec
   142a8:	add	r3, r2, r3
   142ac:	str	r3, [fp, #-20]	; 0xffffffec
   142b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   142b4:	ror	r3, r3, #2
   142b8:	str	r3, [fp, #-28]	; 0xffffffe4
   142bc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   142c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   142c4:	eor	r2, r2, r3
   142c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   142cc:	and	r2, r2, r3
   142d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   142d4:	eor	r4, r2, r3
   142d8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   142dc:	mov	r0, r3
   142e0:	bl	10f00 <htonl@plt>
   142e4:	mov	r3, r0
   142e8:	str	r3, [fp, #-40]	; 0xffffffd8
   142ec:	ldr	r3, [fp, #-40]	; 0xffffffd8
   142f0:	add	r2, r4, r3
   142f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   142f8:	ror	r3, r3, #27
   142fc:	add	r2, r2, r3
   14300:	movw	r3, #31129	; 0x7999
   14304:	movt	r3, #23170	; 0x5a82
   14308:	add	r3, r2, r3
   1430c:	ldr	r2, [fp, #-16]
   14310:	add	r3, r2, r3
   14314:	str	r3, [fp, #-16]
   14318:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1431c:	ror	r3, r3, #2
   14320:	str	r3, [fp, #-24]	; 0xffffffe8
   14324:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14328:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1432c:	eor	r2, r2, r3
   14330:	ldr	r3, [fp, #-20]	; 0xffffffec
   14334:	and	r2, r2, r3
   14338:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1433c:	eor	r4, r2, r3
   14340:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14344:	mov	r0, r3
   14348:	bl	10f00 <htonl@plt>
   1434c:	mov	r3, r0
   14350:	str	r3, [fp, #-36]	; 0xffffffdc
   14354:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14358:	add	r2, r4, r3
   1435c:	ldr	r3, [fp, #-16]
   14360:	ror	r3, r3, #27
   14364:	add	r2, r2, r3
   14368:	movw	r3, #31129	; 0x7999
   1436c:	movt	r3, #23170	; 0x5a82
   14370:	add	r3, r2, r3
   14374:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14378:	add	r3, r2, r3
   1437c:	str	r3, [fp, #-32]	; 0xffffffe0
   14380:	ldr	r3, [fp, #-20]	; 0xffffffec
   14384:	ror	r3, r3, #2
   14388:	str	r3, [fp, #-20]	; 0xffffffec
   1438c:	ldr	r2, [fp, #-20]	; 0xffffffec
   14390:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14394:	eor	r2, r2, r3
   14398:	ldr	r3, [fp, #-16]
   1439c:	and	r2, r2, r3
   143a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   143a4:	eor	r2, r2, r3
   143a8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   143ac:	ldr	r3, [fp, #-64]	; 0xffffffc0
   143b0:	eor	r1, r1, r3
   143b4:	ldr	r3, [fp, #-88]	; 0xffffffa8
   143b8:	eor	r1, r1, r3
   143bc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   143c0:	eor	r3, r3, r1
   143c4:	ror	r3, r3, #31
   143c8:	str	r3, [fp, #-96]	; 0xffffffa0
   143cc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   143d0:	add	r2, r2, r3
   143d4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   143d8:	ror	r3, r3, #27
   143dc:	add	r2, r2, r3
   143e0:	movw	r3, #31129	; 0x7999
   143e4:	movt	r3, #23170	; 0x5a82
   143e8:	add	r3, r2, r3
   143ec:	ldr	r2, [fp, #-28]	; 0xffffffe4
   143f0:	add	r3, r2, r3
   143f4:	str	r3, [fp, #-28]	; 0xffffffe4
   143f8:	ldr	r3, [fp, #-16]
   143fc:	ror	r3, r3, #2
   14400:	str	r3, [fp, #-16]
   14404:	ldr	r2, [fp, #-16]
   14408:	ldr	r3, [fp, #-20]	; 0xffffffec
   1440c:	eor	r2, r2, r3
   14410:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14414:	and	r2, r2, r3
   14418:	ldr	r3, [fp, #-20]	; 0xffffffec
   1441c:	eor	r2, r2, r3
   14420:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14424:	ldr	r3, [fp, #-60]	; 0xffffffc4
   14428:	eor	r1, r1, r3
   1442c:	ldr	r3, [fp, #-84]	; 0xffffffac
   14430:	eor	r1, r1, r3
   14434:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14438:	eor	r3, r3, r1
   1443c:	ror	r3, r3, #31
   14440:	str	r3, [fp, #-92]	; 0xffffffa4
   14444:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14448:	add	r2, r2, r3
   1444c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14450:	ror	r3, r3, #27
   14454:	add	r2, r2, r3
   14458:	movw	r3, #31129	; 0x7999
   1445c:	movt	r3, #23170	; 0x5a82
   14460:	add	r3, r2, r3
   14464:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14468:	add	r3, r2, r3
   1446c:	str	r3, [fp, #-24]	; 0xffffffe8
   14470:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14474:	ror	r3, r3, #2
   14478:	str	r3, [fp, #-32]	; 0xffffffe0
   1447c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14480:	ldr	r3, [fp, #-16]
   14484:	eor	r2, r2, r3
   14488:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1448c:	and	r2, r2, r3
   14490:	ldr	r3, [fp, #-16]
   14494:	eor	r2, r2, r3
   14498:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1449c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   144a0:	eor	r1, r1, r3
   144a4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   144a8:	eor	r1, r1, r3
   144ac:	ldr	r3, [fp, #-88]	; 0xffffffa8
   144b0:	eor	r3, r3, r1
   144b4:	ror	r3, r3, #31
   144b8:	str	r3, [fp, #-88]	; 0xffffffa8
   144bc:	ldr	r3, [fp, #-88]	; 0xffffffa8
   144c0:	add	r2, r2, r3
   144c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   144c8:	ror	r3, r3, #27
   144cc:	add	r2, r2, r3
   144d0:	movw	r3, #31129	; 0x7999
   144d4:	movt	r3, #23170	; 0x5a82
   144d8:	add	r3, r2, r3
   144dc:	ldr	r2, [fp, #-20]	; 0xffffffec
   144e0:	add	r3, r2, r3
   144e4:	str	r3, [fp, #-20]	; 0xffffffec
   144e8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   144ec:	ror	r3, r3, #2
   144f0:	str	r3, [fp, #-28]	; 0xffffffe4
   144f4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   144f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   144fc:	eor	r2, r2, r3
   14500:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14504:	and	r2, r2, r3
   14508:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1450c:	eor	r2, r2, r3
   14510:	ldr	r1, [fp, #-96]	; 0xffffffa0
   14514:	ldr	r3, [fp, #-52]	; 0xffffffcc
   14518:	eor	r1, r1, r3
   1451c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   14520:	eor	r1, r1, r3
   14524:	ldr	r3, [fp, #-84]	; 0xffffffac
   14528:	eor	r3, r3, r1
   1452c:	ror	r3, r3, #31
   14530:	str	r3, [fp, #-84]	; 0xffffffac
   14534:	ldr	r3, [fp, #-84]	; 0xffffffac
   14538:	add	r2, r2, r3
   1453c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14540:	ror	r3, r3, #27
   14544:	add	r2, r2, r3
   14548:	movw	r3, #31129	; 0x7999
   1454c:	movt	r3, #23170	; 0x5a82
   14550:	add	r3, r2, r3
   14554:	ldr	r2, [fp, #-16]
   14558:	add	r3, r2, r3
   1455c:	str	r3, [fp, #-16]
   14560:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14564:	ror	r3, r3, #2
   14568:	str	r3, [fp, #-24]	; 0xffffffe8
   1456c:	ldr	r2, [fp, #-20]	; 0xffffffec
   14570:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14574:	eor	r2, r2, r3
   14578:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1457c:	eor	r2, r2, r3
   14580:	ldr	r1, [fp, #-92]	; 0xffffffa4
   14584:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14588:	eor	r1, r1, r3
   1458c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   14590:	eor	r1, r1, r3
   14594:	ldr	r3, [fp, #-80]	; 0xffffffb0
   14598:	eor	r3, r3, r1
   1459c:	ror	r3, r3, #31
   145a0:	str	r3, [fp, #-80]	; 0xffffffb0
   145a4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   145a8:	add	r2, r2, r3
   145ac:	ldr	r3, [fp, #-16]
   145b0:	ror	r3, r3, #27
   145b4:	add	r2, r2, r3
   145b8:	movw	r3, #60321	; 0xeba1
   145bc:	movt	r3, #28377	; 0x6ed9
   145c0:	add	r3, r2, r3
   145c4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   145c8:	add	r3, r2, r3
   145cc:	str	r3, [fp, #-32]	; 0xffffffe0
   145d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   145d4:	ror	r3, r3, #2
   145d8:	str	r3, [fp, #-20]	; 0xffffffec
   145dc:	ldr	r2, [fp, #-16]
   145e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   145e4:	eor	r2, r2, r3
   145e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   145ec:	eor	r2, r2, r3
   145f0:	ldr	r1, [fp, #-88]	; 0xffffffa8
   145f4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   145f8:	eor	r1, r1, r3
   145fc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   14600:	eor	r1, r1, r3
   14604:	ldr	r3, [fp, #-76]	; 0xffffffb4
   14608:	eor	r3, r3, r1
   1460c:	ror	r3, r3, #31
   14610:	str	r3, [fp, #-76]	; 0xffffffb4
   14614:	ldr	r3, [fp, #-76]	; 0xffffffb4
   14618:	add	r2, r2, r3
   1461c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14620:	ror	r3, r3, #27
   14624:	add	r2, r2, r3
   14628:	movw	r3, #60321	; 0xeba1
   1462c:	movt	r3, #28377	; 0x6ed9
   14630:	add	r3, r2, r3
   14634:	ldr	r2, [fp, #-28]	; 0xffffffe4
   14638:	add	r3, r2, r3
   1463c:	str	r3, [fp, #-28]	; 0xffffffe4
   14640:	ldr	r3, [fp, #-16]
   14644:	ror	r3, r3, #2
   14648:	str	r3, [fp, #-16]
   1464c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14650:	ldr	r3, [fp, #-16]
   14654:	eor	r2, r2, r3
   14658:	ldr	r3, [fp, #-20]	; 0xffffffec
   1465c:	eor	r2, r2, r3
   14660:	ldr	r1, [fp, #-84]	; 0xffffffac
   14664:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14668:	eor	r1, r1, r3
   1466c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   14670:	eor	r1, r1, r3
   14674:	ldr	r3, [fp, #-72]	; 0xffffffb8
   14678:	eor	r3, r3, r1
   1467c:	ror	r3, r3, #31
   14680:	str	r3, [fp, #-72]	; 0xffffffb8
   14684:	ldr	r3, [fp, #-72]	; 0xffffffb8
   14688:	add	r2, r2, r3
   1468c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14690:	ror	r3, r3, #27
   14694:	add	r2, r2, r3
   14698:	movw	r3, #60321	; 0xeba1
   1469c:	movt	r3, #28377	; 0x6ed9
   146a0:	add	r3, r2, r3
   146a4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   146a8:	add	r3, r2, r3
   146ac:	str	r3, [fp, #-24]	; 0xffffffe8
   146b0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   146b4:	ror	r3, r3, #2
   146b8:	str	r3, [fp, #-32]	; 0xffffffe0
   146bc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   146c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   146c4:	eor	r2, r2, r3
   146c8:	ldr	r3, [fp, #-16]
   146cc:	eor	r2, r2, r3
   146d0:	ldr	r1, [fp, #-80]	; 0xffffffb0
   146d4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   146d8:	eor	r1, r1, r3
   146dc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   146e0:	eor	r1, r1, r3
   146e4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   146e8:	eor	r3, r3, r1
   146ec:	ror	r3, r3, #31
   146f0:	str	r3, [fp, #-68]	; 0xffffffbc
   146f4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   146f8:	add	r2, r2, r3
   146fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14700:	ror	r3, r3, #27
   14704:	add	r2, r2, r3
   14708:	movw	r3, #60321	; 0xeba1
   1470c:	movt	r3, #28377	; 0x6ed9
   14710:	add	r3, r2, r3
   14714:	ldr	r2, [fp, #-20]	; 0xffffffec
   14718:	add	r3, r2, r3
   1471c:	str	r3, [fp, #-20]	; 0xffffffec
   14720:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14724:	ror	r3, r3, #2
   14728:	str	r3, [fp, #-28]	; 0xffffffe4
   1472c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14730:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14734:	eor	r2, r2, r3
   14738:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1473c:	eor	r2, r2, r3
   14740:	ldr	r1, [fp, #-76]	; 0xffffffb4
   14744:	ldr	r3, [fp, #-96]	; 0xffffffa0
   14748:	eor	r1, r1, r3
   1474c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   14750:	eor	r1, r1, r3
   14754:	ldr	r3, [fp, #-64]	; 0xffffffc0
   14758:	eor	r3, r3, r1
   1475c:	ror	r3, r3, #31
   14760:	str	r3, [fp, #-64]	; 0xffffffc0
   14764:	ldr	r3, [fp, #-64]	; 0xffffffc0
   14768:	add	r2, r2, r3
   1476c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14770:	ror	r3, r3, #27
   14774:	add	r2, r2, r3
   14778:	movw	r3, #60321	; 0xeba1
   1477c:	movt	r3, #28377	; 0x6ed9
   14780:	add	r3, r2, r3
   14784:	ldr	r2, [fp, #-16]
   14788:	add	r3, r2, r3
   1478c:	str	r3, [fp, #-16]
   14790:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14794:	ror	r3, r3, #2
   14798:	str	r3, [fp, #-24]	; 0xffffffe8
   1479c:	ldr	r2, [fp, #-20]	; 0xffffffec
   147a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   147a4:	eor	r2, r2, r3
   147a8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   147ac:	eor	r2, r2, r3
   147b0:	ldr	r1, [fp, #-72]	; 0xffffffb8
   147b4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   147b8:	eor	r1, r1, r3
   147bc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   147c0:	eor	r1, r1, r3
   147c4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   147c8:	eor	r3, r3, r1
   147cc:	ror	r3, r3, #31
   147d0:	str	r3, [fp, #-60]	; 0xffffffc4
   147d4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   147d8:	add	r2, r2, r3
   147dc:	ldr	r3, [fp, #-16]
   147e0:	ror	r3, r3, #27
   147e4:	add	r2, r2, r3
   147e8:	movw	r3, #60321	; 0xeba1
   147ec:	movt	r3, #28377	; 0x6ed9
   147f0:	add	r3, r2, r3
   147f4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   147f8:	add	r3, r2, r3
   147fc:	str	r3, [fp, #-32]	; 0xffffffe0
   14800:	ldr	r3, [fp, #-20]	; 0xffffffec
   14804:	ror	r3, r3, #2
   14808:	str	r3, [fp, #-20]	; 0xffffffec
   1480c:	ldr	r2, [fp, #-16]
   14810:	ldr	r3, [fp, #-20]	; 0xffffffec
   14814:	eor	r2, r2, r3
   14818:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1481c:	eor	r2, r2, r3
   14820:	ldr	r1, [fp, #-68]	; 0xffffffbc
   14824:	ldr	r3, [fp, #-88]	; 0xffffffa8
   14828:	eor	r1, r1, r3
   1482c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14830:	eor	r1, r1, r3
   14834:	ldr	r3, [fp, #-56]	; 0xffffffc8
   14838:	eor	r3, r3, r1
   1483c:	ror	r3, r3, #31
   14840:	str	r3, [fp, #-56]	; 0xffffffc8
   14844:	ldr	r3, [fp, #-56]	; 0xffffffc8
   14848:	add	r2, r2, r3
   1484c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14850:	ror	r3, r3, #27
   14854:	add	r2, r2, r3
   14858:	movw	r3, #60321	; 0xeba1
   1485c:	movt	r3, #28377	; 0x6ed9
   14860:	add	r3, r2, r3
   14864:	ldr	r2, [fp, #-28]	; 0xffffffe4
   14868:	add	r3, r2, r3
   1486c:	str	r3, [fp, #-28]	; 0xffffffe4
   14870:	ldr	r3, [fp, #-16]
   14874:	ror	r3, r3, #2
   14878:	str	r3, [fp, #-16]
   1487c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14880:	ldr	r3, [fp, #-16]
   14884:	eor	r2, r2, r3
   14888:	ldr	r3, [fp, #-20]	; 0xffffffec
   1488c:	eor	r2, r2, r3
   14890:	ldr	r1, [fp, #-64]	; 0xffffffc0
   14894:	ldr	r3, [fp, #-84]	; 0xffffffac
   14898:	eor	r1, r1, r3
   1489c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   148a0:	eor	r1, r1, r3
   148a4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   148a8:	eor	r3, r3, r1
   148ac:	ror	r3, r3, #31
   148b0:	str	r3, [fp, #-52]	; 0xffffffcc
   148b4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   148b8:	add	r2, r2, r3
   148bc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   148c0:	ror	r3, r3, #27
   148c4:	add	r2, r2, r3
   148c8:	movw	r3, #60321	; 0xeba1
   148cc:	movt	r3, #28377	; 0x6ed9
   148d0:	add	r3, r2, r3
   148d4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   148d8:	add	r3, r2, r3
   148dc:	str	r3, [fp, #-24]	; 0xffffffe8
   148e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   148e4:	ror	r3, r3, #2
   148e8:	str	r3, [fp, #-32]	; 0xffffffe0
   148ec:	ldr	r2, [fp, #-28]	; 0xffffffe4
   148f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   148f4:	eor	r2, r2, r3
   148f8:	ldr	r3, [fp, #-16]
   148fc:	eor	r2, r2, r3
   14900:	ldr	r1, [fp, #-60]	; 0xffffffc4
   14904:	ldr	r3, [fp, #-80]	; 0xffffffb0
   14908:	eor	r1, r1, r3
   1490c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14910:	eor	r1, r1, r3
   14914:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14918:	eor	r3, r3, r1
   1491c:	ror	r3, r3, #31
   14920:	str	r3, [fp, #-48]	; 0xffffffd0
   14924:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14928:	add	r2, r2, r3
   1492c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14930:	ror	r3, r3, #27
   14934:	add	r2, r2, r3
   14938:	movw	r3, #60321	; 0xeba1
   1493c:	movt	r3, #28377	; 0x6ed9
   14940:	add	r3, r2, r3
   14944:	ldr	r2, [fp, #-20]	; 0xffffffec
   14948:	add	r3, r2, r3
   1494c:	str	r3, [fp, #-20]	; 0xffffffec
   14950:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14954:	ror	r3, r3, #2
   14958:	str	r3, [fp, #-28]	; 0xffffffe4
   1495c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14960:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14964:	eor	r2, r2, r3
   14968:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1496c:	eor	r2, r2, r3
   14970:	ldr	r1, [fp, #-56]	; 0xffffffc8
   14974:	ldr	r3, [fp, #-76]	; 0xffffffb4
   14978:	eor	r1, r1, r3
   1497c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14980:	eor	r1, r1, r3
   14984:	ldr	r3, [fp, #-44]	; 0xffffffd4
   14988:	eor	r3, r3, r1
   1498c:	ror	r3, r3, #31
   14990:	str	r3, [fp, #-44]	; 0xffffffd4
   14994:	ldr	r3, [fp, #-44]	; 0xffffffd4
   14998:	add	r2, r2, r3
   1499c:	ldr	r3, [fp, #-20]	; 0xffffffec
   149a0:	ror	r3, r3, #27
   149a4:	add	r2, r2, r3
   149a8:	movw	r3, #60321	; 0xeba1
   149ac:	movt	r3, #28377	; 0x6ed9
   149b0:	add	r3, r2, r3
   149b4:	ldr	r2, [fp, #-16]
   149b8:	add	r3, r2, r3
   149bc:	str	r3, [fp, #-16]
   149c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   149c4:	ror	r3, r3, #2
   149c8:	str	r3, [fp, #-24]	; 0xffffffe8
   149cc:	ldr	r2, [fp, #-20]	; 0xffffffec
   149d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   149d4:	eor	r2, r2, r3
   149d8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   149dc:	eor	r2, r2, r3
   149e0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   149e4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   149e8:	eor	r1, r1, r3
   149ec:	ldr	r3, [fp, #-96]	; 0xffffffa0
   149f0:	eor	r1, r1, r3
   149f4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   149f8:	eor	r3, r3, r1
   149fc:	ror	r3, r3, #31
   14a00:	str	r3, [fp, #-40]	; 0xffffffd8
   14a04:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14a08:	add	r2, r2, r3
   14a0c:	ldr	r3, [fp, #-16]
   14a10:	ror	r3, r3, #27
   14a14:	add	r2, r2, r3
   14a18:	movw	r3, #60321	; 0xeba1
   14a1c:	movt	r3, #28377	; 0x6ed9
   14a20:	add	r3, r2, r3
   14a24:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14a28:	add	r3, r2, r3
   14a2c:	str	r3, [fp, #-32]	; 0xffffffe0
   14a30:	ldr	r3, [fp, #-20]	; 0xffffffec
   14a34:	ror	r3, r3, #2
   14a38:	str	r3, [fp, #-20]	; 0xffffffec
   14a3c:	ldr	r2, [fp, #-16]
   14a40:	ldr	r3, [fp, #-20]	; 0xffffffec
   14a44:	eor	r2, r2, r3
   14a48:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14a4c:	eor	r2, r2, r3
   14a50:	ldr	r1, [fp, #-48]	; 0xffffffd0
   14a54:	ldr	r3, [fp, #-68]	; 0xffffffbc
   14a58:	eor	r1, r1, r3
   14a5c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14a60:	eor	r1, r1, r3
   14a64:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14a68:	eor	r3, r3, r1
   14a6c:	ror	r3, r3, #31
   14a70:	str	r3, [fp, #-36]	; 0xffffffdc
   14a74:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14a78:	add	r2, r2, r3
   14a7c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14a80:	ror	r3, r3, #27
   14a84:	add	r2, r2, r3
   14a88:	movw	r3, #60321	; 0xeba1
   14a8c:	movt	r3, #28377	; 0x6ed9
   14a90:	add	r3, r2, r3
   14a94:	ldr	r2, [fp, #-28]	; 0xffffffe4
   14a98:	add	r3, r2, r3
   14a9c:	str	r3, [fp, #-28]	; 0xffffffe4
   14aa0:	ldr	r3, [fp, #-16]
   14aa4:	ror	r3, r3, #2
   14aa8:	str	r3, [fp, #-16]
   14aac:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14ab0:	ldr	r3, [fp, #-16]
   14ab4:	eor	r2, r2, r3
   14ab8:	ldr	r3, [fp, #-20]	; 0xffffffec
   14abc:	eor	r2, r2, r3
   14ac0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14ac4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   14ac8:	eor	r1, r1, r3
   14acc:	ldr	r3, [fp, #-88]	; 0xffffffa8
   14ad0:	eor	r1, r1, r3
   14ad4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   14ad8:	eor	r3, r3, r1
   14adc:	ror	r3, r3, #31
   14ae0:	str	r3, [fp, #-96]	; 0xffffffa0
   14ae4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   14ae8:	add	r2, r2, r3
   14aec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14af0:	ror	r3, r3, #27
   14af4:	add	r2, r2, r3
   14af8:	movw	r3, #60321	; 0xeba1
   14afc:	movt	r3, #28377	; 0x6ed9
   14b00:	add	r3, r2, r3
   14b04:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14b08:	add	r3, r2, r3
   14b0c:	str	r3, [fp, #-24]	; 0xffffffe8
   14b10:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14b14:	ror	r3, r3, #2
   14b18:	str	r3, [fp, #-32]	; 0xffffffe0
   14b1c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   14b20:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14b24:	eor	r2, r2, r3
   14b28:	ldr	r3, [fp, #-16]
   14b2c:	eor	r2, r2, r3
   14b30:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14b34:	ldr	r3, [fp, #-60]	; 0xffffffc4
   14b38:	eor	r1, r1, r3
   14b3c:	ldr	r3, [fp, #-84]	; 0xffffffac
   14b40:	eor	r1, r1, r3
   14b44:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14b48:	eor	r3, r3, r1
   14b4c:	ror	r3, r3, #31
   14b50:	str	r3, [fp, #-92]	; 0xffffffa4
   14b54:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14b58:	add	r2, r2, r3
   14b5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14b60:	ror	r3, r3, #27
   14b64:	add	r2, r2, r3
   14b68:	movw	r3, #60321	; 0xeba1
   14b6c:	movt	r3, #28377	; 0x6ed9
   14b70:	add	r3, r2, r3
   14b74:	ldr	r2, [fp, #-20]	; 0xffffffec
   14b78:	add	r3, r2, r3
   14b7c:	str	r3, [fp, #-20]	; 0xffffffec
   14b80:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14b84:	ror	r3, r3, #2
   14b88:	str	r3, [fp, #-28]	; 0xffffffe4
   14b8c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14b90:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14b94:	eor	r2, r2, r3
   14b98:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14b9c:	eor	r2, r2, r3
   14ba0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14ba4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   14ba8:	eor	r1, r1, r3
   14bac:	ldr	r3, [fp, #-80]	; 0xffffffb0
   14bb0:	eor	r1, r1, r3
   14bb4:	ldr	r3, [fp, #-88]	; 0xffffffa8
   14bb8:	eor	r3, r3, r1
   14bbc:	ror	r3, r3, #31
   14bc0:	str	r3, [fp, #-88]	; 0xffffffa8
   14bc4:	ldr	r3, [fp, #-88]	; 0xffffffa8
   14bc8:	add	r2, r2, r3
   14bcc:	ldr	r3, [fp, #-20]	; 0xffffffec
   14bd0:	ror	r3, r3, #27
   14bd4:	add	r2, r2, r3
   14bd8:	movw	r3, #60321	; 0xeba1
   14bdc:	movt	r3, #28377	; 0x6ed9
   14be0:	add	r3, r2, r3
   14be4:	ldr	r2, [fp, #-16]
   14be8:	add	r3, r2, r3
   14bec:	str	r3, [fp, #-16]
   14bf0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14bf4:	ror	r3, r3, #2
   14bf8:	str	r3, [fp, #-24]	; 0xffffffe8
   14bfc:	ldr	r2, [fp, #-20]	; 0xffffffec
   14c00:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14c04:	eor	r2, r2, r3
   14c08:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14c0c:	eor	r2, r2, r3
   14c10:	ldr	r1, [fp, #-96]	; 0xffffffa0
   14c14:	ldr	r3, [fp, #-52]	; 0xffffffcc
   14c18:	eor	r1, r1, r3
   14c1c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   14c20:	eor	r1, r1, r3
   14c24:	ldr	r3, [fp, #-84]	; 0xffffffac
   14c28:	eor	r3, r3, r1
   14c2c:	ror	r3, r3, #31
   14c30:	str	r3, [fp, #-84]	; 0xffffffac
   14c34:	ldr	r3, [fp, #-84]	; 0xffffffac
   14c38:	add	r2, r2, r3
   14c3c:	ldr	r3, [fp, #-16]
   14c40:	ror	r3, r3, #27
   14c44:	add	r2, r2, r3
   14c48:	movw	r3, #60321	; 0xeba1
   14c4c:	movt	r3, #28377	; 0x6ed9
   14c50:	add	r3, r2, r3
   14c54:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14c58:	add	r3, r2, r3
   14c5c:	str	r3, [fp, #-32]	; 0xffffffe0
   14c60:	ldr	r3, [fp, #-20]	; 0xffffffec
   14c64:	ror	r3, r3, #2
   14c68:	str	r3, [fp, #-20]	; 0xffffffec
   14c6c:	ldr	r2, [fp, #-16]
   14c70:	ldr	r3, [fp, #-20]	; 0xffffffec
   14c74:	eor	r2, r2, r3
   14c78:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14c7c:	eor	r2, r2, r3
   14c80:	ldr	r1, [fp, #-92]	; 0xffffffa4
   14c84:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14c88:	eor	r1, r1, r3
   14c8c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   14c90:	eor	r1, r1, r3
   14c94:	ldr	r3, [fp, #-80]	; 0xffffffb0
   14c98:	eor	r3, r3, r1
   14c9c:	ror	r3, r3, #31
   14ca0:	str	r3, [fp, #-80]	; 0xffffffb0
   14ca4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   14ca8:	add	r2, r2, r3
   14cac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14cb0:	ror	r3, r3, #27
   14cb4:	add	r2, r2, r3
   14cb8:	movw	r3, #60321	; 0xeba1
   14cbc:	movt	r3, #28377	; 0x6ed9
   14cc0:	add	r3, r2, r3
   14cc4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   14cc8:	add	r3, r2, r3
   14ccc:	str	r3, [fp, #-28]	; 0xffffffe4
   14cd0:	ldr	r3, [fp, #-16]
   14cd4:	ror	r3, r3, #2
   14cd8:	str	r3, [fp, #-16]
   14cdc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14ce0:	ldr	r3, [fp, #-16]
   14ce4:	eor	r2, r2, r3
   14ce8:	ldr	r3, [fp, #-20]	; 0xffffffec
   14cec:	eor	r2, r2, r3
   14cf0:	ldr	r1, [fp, #-88]	; 0xffffffa8
   14cf4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   14cf8:	eor	r1, r1, r3
   14cfc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   14d00:	eor	r1, r1, r3
   14d04:	ldr	r3, [fp, #-76]	; 0xffffffb4
   14d08:	eor	r3, r3, r1
   14d0c:	ror	r3, r3, #31
   14d10:	str	r3, [fp, #-76]	; 0xffffffb4
   14d14:	ldr	r3, [fp, #-76]	; 0xffffffb4
   14d18:	add	r2, r2, r3
   14d1c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14d20:	ror	r3, r3, #27
   14d24:	add	r2, r2, r3
   14d28:	movw	r3, #60321	; 0xeba1
   14d2c:	movt	r3, #28377	; 0x6ed9
   14d30:	add	r3, r2, r3
   14d34:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14d38:	add	r3, r2, r3
   14d3c:	str	r3, [fp, #-24]	; 0xffffffe8
   14d40:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14d44:	ror	r3, r3, #2
   14d48:	str	r3, [fp, #-32]	; 0xffffffe0
   14d4c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   14d50:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14d54:	eor	r2, r2, r3
   14d58:	ldr	r3, [fp, #-16]
   14d5c:	eor	r2, r2, r3
   14d60:	ldr	r1, [fp, #-84]	; 0xffffffac
   14d64:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14d68:	eor	r1, r1, r3
   14d6c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   14d70:	eor	r1, r1, r3
   14d74:	ldr	r3, [fp, #-72]	; 0xffffffb8
   14d78:	eor	r3, r3, r1
   14d7c:	ror	r3, r3, #31
   14d80:	str	r3, [fp, #-72]	; 0xffffffb8
   14d84:	ldr	r3, [fp, #-72]	; 0xffffffb8
   14d88:	add	r2, r2, r3
   14d8c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14d90:	ror	r3, r3, #27
   14d94:	add	r2, r2, r3
   14d98:	movw	r3, #60321	; 0xeba1
   14d9c:	movt	r3, #28377	; 0x6ed9
   14da0:	add	r3, r2, r3
   14da4:	ldr	r2, [fp, #-20]	; 0xffffffec
   14da8:	add	r3, r2, r3
   14dac:	str	r3, [fp, #-20]	; 0xffffffec
   14db0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14db4:	ror	r3, r3, #2
   14db8:	str	r3, [fp, #-28]	; 0xffffffe4
   14dbc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14dc0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14dc4:	eor	r2, r2, r3
   14dc8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14dcc:	eor	r2, r2, r3
   14dd0:	ldr	r1, [fp, #-80]	; 0xffffffb0
   14dd4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14dd8:	eor	r1, r1, r3
   14ddc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   14de0:	eor	r1, r1, r3
   14de4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   14de8:	eor	r3, r3, r1
   14dec:	ror	r3, r3, #31
   14df0:	str	r3, [fp, #-68]	; 0xffffffbc
   14df4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   14df8:	add	r2, r2, r3
   14dfc:	ldr	r3, [fp, #-20]	; 0xffffffec
   14e00:	ror	r3, r3, #27
   14e04:	add	r2, r2, r3
   14e08:	movw	r3, #60321	; 0xeba1
   14e0c:	movt	r3, #28377	; 0x6ed9
   14e10:	add	r3, r2, r3
   14e14:	ldr	r2, [fp, #-16]
   14e18:	add	r3, r2, r3
   14e1c:	str	r3, [fp, #-16]
   14e20:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14e24:	ror	r3, r3, #2
   14e28:	str	r3, [fp, #-24]	; 0xffffffe8
   14e2c:	ldr	r2, [fp, #-20]	; 0xffffffec
   14e30:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14e34:	orr	r2, r2, r3
   14e38:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14e3c:	and	r2, r2, r3
   14e40:	ldr	r1, [fp, #-20]	; 0xffffffec
   14e44:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14e48:	and	r3, r3, r1
   14e4c:	orr	r2, r2, r3
   14e50:	ldr	r1, [fp, #-76]	; 0xffffffb4
   14e54:	ldr	r3, [fp, #-96]	; 0xffffffa0
   14e58:	eor	r1, r1, r3
   14e5c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   14e60:	eor	r1, r1, r3
   14e64:	ldr	r3, [fp, #-64]	; 0xffffffc0
   14e68:	eor	r3, r3, r1
   14e6c:	ror	r3, r3, #31
   14e70:	str	r3, [fp, #-64]	; 0xffffffc0
   14e74:	ldr	r3, [fp, #-64]	; 0xffffffc0
   14e78:	add	r2, r2, r3
   14e7c:	ldr	r3, [fp, #-16]
   14e80:	ror	r3, r3, #27
   14e84:	add	r2, r2, r3
   14e88:	movw	r3, #48348	; 0xbcdc
   14e8c:	movt	r3, #36635	; 0x8f1b
   14e90:	add	r3, r2, r3
   14e94:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14e98:	add	r3, r2, r3
   14e9c:	str	r3, [fp, #-32]	; 0xffffffe0
   14ea0:	ldr	r3, [fp, #-20]	; 0xffffffec
   14ea4:	ror	r3, r3, #2
   14ea8:	str	r3, [fp, #-20]	; 0xffffffec
   14eac:	ldr	r2, [fp, #-16]
   14eb0:	ldr	r3, [fp, #-20]	; 0xffffffec
   14eb4:	orr	r2, r2, r3
   14eb8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14ebc:	and	r2, r2, r3
   14ec0:	ldr	r1, [fp, #-16]
   14ec4:	ldr	r3, [fp, #-20]	; 0xffffffec
   14ec8:	and	r3, r3, r1
   14ecc:	orr	r2, r2, r3
   14ed0:	ldr	r1, [fp, #-72]	; 0xffffffb8
   14ed4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14ed8:	eor	r1, r1, r3
   14edc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   14ee0:	eor	r1, r1, r3
   14ee4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   14ee8:	eor	r3, r3, r1
   14eec:	ror	r3, r3, #31
   14ef0:	str	r3, [fp, #-60]	; 0xffffffc4
   14ef4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   14ef8:	add	r2, r2, r3
   14efc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14f00:	ror	r3, r3, #27
   14f04:	add	r2, r2, r3
   14f08:	movw	r3, #48348	; 0xbcdc
   14f0c:	movt	r3, #36635	; 0x8f1b
   14f10:	add	r3, r2, r3
   14f14:	ldr	r2, [fp, #-28]	; 0xffffffe4
   14f18:	add	r3, r2, r3
   14f1c:	str	r3, [fp, #-28]	; 0xffffffe4
   14f20:	ldr	r3, [fp, #-16]
   14f24:	ror	r3, r3, #2
   14f28:	str	r3, [fp, #-16]
   14f2c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14f30:	ldr	r3, [fp, #-16]
   14f34:	orr	r2, r2, r3
   14f38:	ldr	r3, [fp, #-20]	; 0xffffffec
   14f3c:	and	r2, r2, r3
   14f40:	ldr	r1, [fp, #-32]	; 0xffffffe0
   14f44:	ldr	r3, [fp, #-16]
   14f48:	and	r3, r3, r1
   14f4c:	orr	r2, r2, r3
   14f50:	ldr	r1, [fp, #-68]	; 0xffffffbc
   14f54:	ldr	r3, [fp, #-88]	; 0xffffffa8
   14f58:	eor	r1, r1, r3
   14f5c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14f60:	eor	r1, r1, r3
   14f64:	ldr	r3, [fp, #-56]	; 0xffffffc8
   14f68:	eor	r3, r3, r1
   14f6c:	ror	r3, r3, #31
   14f70:	str	r3, [fp, #-56]	; 0xffffffc8
   14f74:	ldr	r3, [fp, #-56]	; 0xffffffc8
   14f78:	add	r2, r2, r3
   14f7c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14f80:	ror	r3, r3, #27
   14f84:	add	r2, r2, r3
   14f88:	movw	r3, #48348	; 0xbcdc
   14f8c:	movt	r3, #36635	; 0x8f1b
   14f90:	add	r3, r2, r3
   14f94:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14f98:	add	r3, r2, r3
   14f9c:	str	r3, [fp, #-24]	; 0xffffffe8
   14fa0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14fa4:	ror	r3, r3, #2
   14fa8:	str	r3, [fp, #-32]	; 0xffffffe0
   14fac:	ldr	r2, [fp, #-28]	; 0xffffffe4
   14fb0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14fb4:	orr	r2, r2, r3
   14fb8:	ldr	r3, [fp, #-16]
   14fbc:	and	r2, r2, r3
   14fc0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14fc4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14fc8:	and	r3, r3, r1
   14fcc:	orr	r2, r2, r3
   14fd0:	ldr	r1, [fp, #-64]	; 0xffffffc0
   14fd4:	ldr	r3, [fp, #-84]	; 0xffffffac
   14fd8:	eor	r1, r1, r3
   14fdc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   14fe0:	eor	r1, r1, r3
   14fe4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   14fe8:	eor	r3, r3, r1
   14fec:	ror	r3, r3, #31
   14ff0:	str	r3, [fp, #-52]	; 0xffffffcc
   14ff4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   14ff8:	add	r2, r2, r3
   14ffc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15000:	ror	r3, r3, #27
   15004:	add	r2, r2, r3
   15008:	movw	r3, #48348	; 0xbcdc
   1500c:	movt	r3, #36635	; 0x8f1b
   15010:	add	r3, r2, r3
   15014:	ldr	r2, [fp, #-20]	; 0xffffffec
   15018:	add	r3, r2, r3
   1501c:	str	r3, [fp, #-20]	; 0xffffffec
   15020:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15024:	ror	r3, r3, #2
   15028:	str	r3, [fp, #-28]	; 0xffffffe4
   1502c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15030:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15034:	orr	r2, r2, r3
   15038:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1503c:	and	r2, r2, r3
   15040:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15044:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15048:	and	r3, r3, r1
   1504c:	orr	r2, r2, r3
   15050:	ldr	r1, [fp, #-60]	; 0xffffffc4
   15054:	ldr	r3, [fp, #-80]	; 0xffffffb0
   15058:	eor	r1, r1, r3
   1505c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15060:	eor	r1, r1, r3
   15064:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15068:	eor	r3, r3, r1
   1506c:	ror	r3, r3, #31
   15070:	str	r3, [fp, #-48]	; 0xffffffd0
   15074:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15078:	add	r2, r2, r3
   1507c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15080:	ror	r3, r3, #27
   15084:	add	r2, r2, r3
   15088:	movw	r3, #48348	; 0xbcdc
   1508c:	movt	r3, #36635	; 0x8f1b
   15090:	add	r3, r2, r3
   15094:	ldr	r2, [fp, #-16]
   15098:	add	r3, r2, r3
   1509c:	str	r3, [fp, #-16]
   150a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   150a4:	ror	r3, r3, #2
   150a8:	str	r3, [fp, #-24]	; 0xffffffe8
   150ac:	ldr	r2, [fp, #-20]	; 0xffffffec
   150b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   150b4:	orr	r2, r2, r3
   150b8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   150bc:	and	r2, r2, r3
   150c0:	ldr	r1, [fp, #-20]	; 0xffffffec
   150c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   150c8:	and	r3, r3, r1
   150cc:	orr	r2, r2, r3
   150d0:	ldr	r1, [fp, #-56]	; 0xffffffc8
   150d4:	ldr	r3, [fp, #-76]	; 0xffffffb4
   150d8:	eor	r1, r1, r3
   150dc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   150e0:	eor	r1, r1, r3
   150e4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   150e8:	eor	r3, r3, r1
   150ec:	ror	r3, r3, #31
   150f0:	str	r3, [fp, #-44]	; 0xffffffd4
   150f4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   150f8:	add	r2, r2, r3
   150fc:	ldr	r3, [fp, #-16]
   15100:	ror	r3, r3, #27
   15104:	add	r2, r2, r3
   15108:	movw	r3, #48348	; 0xbcdc
   1510c:	movt	r3, #36635	; 0x8f1b
   15110:	add	r3, r2, r3
   15114:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15118:	add	r3, r2, r3
   1511c:	str	r3, [fp, #-32]	; 0xffffffe0
   15120:	ldr	r3, [fp, #-20]	; 0xffffffec
   15124:	ror	r3, r3, #2
   15128:	str	r3, [fp, #-20]	; 0xffffffec
   1512c:	ldr	r2, [fp, #-16]
   15130:	ldr	r3, [fp, #-20]	; 0xffffffec
   15134:	orr	r2, r2, r3
   15138:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1513c:	and	r2, r2, r3
   15140:	ldr	r1, [fp, #-16]
   15144:	ldr	r3, [fp, #-20]	; 0xffffffec
   15148:	and	r3, r3, r1
   1514c:	orr	r2, r2, r3
   15150:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15154:	ldr	r3, [fp, #-72]	; 0xffffffb8
   15158:	eor	r1, r1, r3
   1515c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15160:	eor	r1, r1, r3
   15164:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15168:	eor	r3, r3, r1
   1516c:	ror	r3, r3, #31
   15170:	str	r3, [fp, #-40]	; 0xffffffd8
   15174:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15178:	add	r2, r2, r3
   1517c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15180:	ror	r3, r3, #27
   15184:	add	r2, r2, r3
   15188:	movw	r3, #48348	; 0xbcdc
   1518c:	movt	r3, #36635	; 0x8f1b
   15190:	add	r3, r2, r3
   15194:	ldr	r2, [fp, #-28]	; 0xffffffe4
   15198:	add	r3, r2, r3
   1519c:	str	r3, [fp, #-28]	; 0xffffffe4
   151a0:	ldr	r3, [fp, #-16]
   151a4:	ror	r3, r3, #2
   151a8:	str	r3, [fp, #-16]
   151ac:	ldr	r2, [fp, #-32]	; 0xffffffe0
   151b0:	ldr	r3, [fp, #-16]
   151b4:	orr	r2, r2, r3
   151b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   151bc:	and	r2, r2, r3
   151c0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   151c4:	ldr	r3, [fp, #-16]
   151c8:	and	r3, r3, r1
   151cc:	orr	r2, r2, r3
   151d0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   151d4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   151d8:	eor	r1, r1, r3
   151dc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   151e0:	eor	r1, r1, r3
   151e4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   151e8:	eor	r3, r3, r1
   151ec:	ror	r3, r3, #31
   151f0:	str	r3, [fp, #-36]	; 0xffffffdc
   151f4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   151f8:	add	r2, r2, r3
   151fc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15200:	ror	r3, r3, #27
   15204:	add	r2, r2, r3
   15208:	movw	r3, #48348	; 0xbcdc
   1520c:	movt	r3, #36635	; 0x8f1b
   15210:	add	r3, r2, r3
   15214:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15218:	add	r3, r2, r3
   1521c:	str	r3, [fp, #-24]	; 0xffffffe8
   15220:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15224:	ror	r3, r3, #2
   15228:	str	r3, [fp, #-32]	; 0xffffffe0
   1522c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   15230:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15234:	orr	r2, r2, r3
   15238:	ldr	r3, [fp, #-16]
   1523c:	and	r2, r2, r3
   15240:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15244:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15248:	and	r3, r3, r1
   1524c:	orr	r2, r2, r3
   15250:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15254:	ldr	r3, [fp, #-64]	; 0xffffffc0
   15258:	eor	r1, r1, r3
   1525c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   15260:	eor	r1, r1, r3
   15264:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15268:	eor	r3, r3, r1
   1526c:	ror	r3, r3, #31
   15270:	str	r3, [fp, #-96]	; 0xffffffa0
   15274:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15278:	add	r2, r2, r3
   1527c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15280:	ror	r3, r3, #27
   15284:	add	r2, r2, r3
   15288:	movw	r3, #48348	; 0xbcdc
   1528c:	movt	r3, #36635	; 0x8f1b
   15290:	add	r3, r2, r3
   15294:	ldr	r2, [fp, #-20]	; 0xffffffec
   15298:	add	r3, r2, r3
   1529c:	str	r3, [fp, #-20]	; 0xffffffec
   152a0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   152a4:	ror	r3, r3, #2
   152a8:	str	r3, [fp, #-28]	; 0xffffffe4
   152ac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   152b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   152b4:	orr	r2, r2, r3
   152b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   152bc:	and	r2, r2, r3
   152c0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   152c4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   152c8:	and	r3, r3, r1
   152cc:	orr	r2, r2, r3
   152d0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   152d4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   152d8:	eor	r1, r1, r3
   152dc:	ldr	r3, [fp, #-84]	; 0xffffffac
   152e0:	eor	r1, r1, r3
   152e4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   152e8:	eor	r3, r3, r1
   152ec:	ror	r3, r3, #31
   152f0:	str	r3, [fp, #-92]	; 0xffffffa4
   152f4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   152f8:	add	r2, r2, r3
   152fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   15300:	ror	r3, r3, #27
   15304:	add	r2, r2, r3
   15308:	movw	r3, #48348	; 0xbcdc
   1530c:	movt	r3, #36635	; 0x8f1b
   15310:	add	r3, r2, r3
   15314:	ldr	r2, [fp, #-16]
   15318:	add	r3, r2, r3
   1531c:	str	r3, [fp, #-16]
   15320:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15324:	ror	r3, r3, #2
   15328:	str	r3, [fp, #-24]	; 0xffffffe8
   1532c:	ldr	r2, [fp, #-20]	; 0xffffffec
   15330:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15334:	orr	r2, r2, r3
   15338:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1533c:	and	r2, r2, r3
   15340:	ldr	r1, [fp, #-20]	; 0xffffffec
   15344:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15348:	and	r3, r3, r1
   1534c:	orr	r2, r2, r3
   15350:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15354:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15358:	eor	r1, r1, r3
   1535c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   15360:	eor	r1, r1, r3
   15364:	ldr	r3, [fp, #-88]	; 0xffffffa8
   15368:	eor	r3, r3, r1
   1536c:	ror	r3, r3, #31
   15370:	str	r3, [fp, #-88]	; 0xffffffa8
   15374:	ldr	r3, [fp, #-88]	; 0xffffffa8
   15378:	add	r2, r2, r3
   1537c:	ldr	r3, [fp, #-16]
   15380:	ror	r3, r3, #27
   15384:	add	r2, r2, r3
   15388:	movw	r3, #48348	; 0xbcdc
   1538c:	movt	r3, #36635	; 0x8f1b
   15390:	add	r3, r2, r3
   15394:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15398:	add	r3, r2, r3
   1539c:	str	r3, [fp, #-32]	; 0xffffffe0
   153a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   153a4:	ror	r3, r3, #2
   153a8:	str	r3, [fp, #-20]	; 0xffffffec
   153ac:	ldr	r2, [fp, #-16]
   153b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   153b4:	orr	r2, r2, r3
   153b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   153bc:	and	r2, r2, r3
   153c0:	ldr	r1, [fp, #-16]
   153c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   153c8:	and	r3, r3, r1
   153cc:	orr	r2, r2, r3
   153d0:	ldr	r1, [fp, #-96]	; 0xffffffa0
   153d4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   153d8:	eor	r1, r1, r3
   153dc:	ldr	r3, [fp, #-76]	; 0xffffffb4
   153e0:	eor	r1, r1, r3
   153e4:	ldr	r3, [fp, #-84]	; 0xffffffac
   153e8:	eor	r3, r3, r1
   153ec:	ror	r3, r3, #31
   153f0:	str	r3, [fp, #-84]	; 0xffffffac
   153f4:	ldr	r3, [fp, #-84]	; 0xffffffac
   153f8:	add	r2, r2, r3
   153fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15400:	ror	r3, r3, #27
   15404:	add	r2, r2, r3
   15408:	movw	r3, #48348	; 0xbcdc
   1540c:	movt	r3, #36635	; 0x8f1b
   15410:	add	r3, r2, r3
   15414:	ldr	r2, [fp, #-28]	; 0xffffffe4
   15418:	add	r3, r2, r3
   1541c:	str	r3, [fp, #-28]	; 0xffffffe4
   15420:	ldr	r3, [fp, #-16]
   15424:	ror	r3, r3, #2
   15428:	str	r3, [fp, #-16]
   1542c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15430:	ldr	r3, [fp, #-16]
   15434:	orr	r2, r2, r3
   15438:	ldr	r3, [fp, #-20]	; 0xffffffec
   1543c:	and	r2, r2, r3
   15440:	ldr	r1, [fp, #-32]	; 0xffffffe0
   15444:	ldr	r3, [fp, #-16]
   15448:	and	r3, r3, r1
   1544c:	orr	r2, r2, r3
   15450:	ldr	r1, [fp, #-92]	; 0xffffffa4
   15454:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15458:	eor	r1, r1, r3
   1545c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   15460:	eor	r1, r1, r3
   15464:	ldr	r3, [fp, #-80]	; 0xffffffb0
   15468:	eor	r3, r3, r1
   1546c:	ror	r3, r3, #31
   15470:	str	r3, [fp, #-80]	; 0xffffffb0
   15474:	ldr	r3, [fp, #-80]	; 0xffffffb0
   15478:	add	r2, r2, r3
   1547c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15480:	ror	r3, r3, #27
   15484:	add	r2, r2, r3
   15488:	movw	r3, #48348	; 0xbcdc
   1548c:	movt	r3, #36635	; 0x8f1b
   15490:	add	r3, r2, r3
   15494:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15498:	add	r3, r2, r3
   1549c:	str	r3, [fp, #-24]	; 0xffffffe8
   154a0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   154a4:	ror	r3, r3, #2
   154a8:	str	r3, [fp, #-32]	; 0xffffffe0
   154ac:	ldr	r2, [fp, #-28]	; 0xffffffe4
   154b0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   154b4:	orr	r2, r2, r3
   154b8:	ldr	r3, [fp, #-16]
   154bc:	and	r2, r2, r3
   154c0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   154c4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   154c8:	and	r3, r3, r1
   154cc:	orr	r2, r2, r3
   154d0:	ldr	r1, [fp, #-88]	; 0xffffffa8
   154d4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   154d8:	eor	r1, r1, r3
   154dc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   154e0:	eor	r1, r1, r3
   154e4:	ldr	r3, [fp, #-76]	; 0xffffffb4
   154e8:	eor	r3, r3, r1
   154ec:	ror	r3, r3, #31
   154f0:	str	r3, [fp, #-76]	; 0xffffffb4
   154f4:	ldr	r3, [fp, #-76]	; 0xffffffb4
   154f8:	add	r2, r2, r3
   154fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15500:	ror	r3, r3, #27
   15504:	add	r2, r2, r3
   15508:	movw	r3, #48348	; 0xbcdc
   1550c:	movt	r3, #36635	; 0x8f1b
   15510:	add	r3, r2, r3
   15514:	ldr	r2, [fp, #-20]	; 0xffffffec
   15518:	add	r3, r2, r3
   1551c:	str	r3, [fp, #-20]	; 0xffffffec
   15520:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15524:	ror	r3, r3, #2
   15528:	str	r3, [fp, #-28]	; 0xffffffe4
   1552c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15530:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15534:	orr	r2, r2, r3
   15538:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1553c:	and	r2, r2, r3
   15540:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15544:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15548:	and	r3, r3, r1
   1554c:	orr	r2, r2, r3
   15550:	ldr	r1, [fp, #-84]	; 0xffffffac
   15554:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15558:	eor	r1, r1, r3
   1555c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   15560:	eor	r1, r1, r3
   15564:	ldr	r3, [fp, #-72]	; 0xffffffb8
   15568:	eor	r3, r3, r1
   1556c:	ror	r3, r3, #31
   15570:	str	r3, [fp, #-72]	; 0xffffffb8
   15574:	ldr	r3, [fp, #-72]	; 0xffffffb8
   15578:	add	r2, r2, r3
   1557c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15580:	ror	r3, r3, #27
   15584:	add	r2, r2, r3
   15588:	movw	r3, #48348	; 0xbcdc
   1558c:	movt	r3, #36635	; 0x8f1b
   15590:	add	r3, r2, r3
   15594:	ldr	r2, [fp, #-16]
   15598:	add	r3, r2, r3
   1559c:	str	r3, [fp, #-16]
   155a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   155a4:	ror	r3, r3, #2
   155a8:	str	r3, [fp, #-24]	; 0xffffffe8
   155ac:	ldr	r2, [fp, #-20]	; 0xffffffec
   155b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   155b4:	orr	r2, r2, r3
   155b8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   155bc:	and	r2, r2, r3
   155c0:	ldr	r1, [fp, #-20]	; 0xffffffec
   155c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   155c8:	and	r3, r3, r1
   155cc:	orr	r2, r2, r3
   155d0:	ldr	r1, [fp, #-80]	; 0xffffffb0
   155d4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   155d8:	eor	r1, r1, r3
   155dc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   155e0:	eor	r1, r1, r3
   155e4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   155e8:	eor	r3, r3, r1
   155ec:	ror	r3, r3, #31
   155f0:	str	r3, [fp, #-68]	; 0xffffffbc
   155f4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   155f8:	add	r2, r2, r3
   155fc:	ldr	r3, [fp, #-16]
   15600:	ror	r3, r3, #27
   15604:	add	r2, r2, r3
   15608:	movw	r3, #48348	; 0xbcdc
   1560c:	movt	r3, #36635	; 0x8f1b
   15610:	add	r3, r2, r3
   15614:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15618:	add	r3, r2, r3
   1561c:	str	r3, [fp, #-32]	; 0xffffffe0
   15620:	ldr	r3, [fp, #-20]	; 0xffffffec
   15624:	ror	r3, r3, #2
   15628:	str	r3, [fp, #-20]	; 0xffffffec
   1562c:	ldr	r2, [fp, #-16]
   15630:	ldr	r3, [fp, #-20]	; 0xffffffec
   15634:	orr	r2, r2, r3
   15638:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1563c:	and	r2, r2, r3
   15640:	ldr	r1, [fp, #-16]
   15644:	ldr	r3, [fp, #-20]	; 0xffffffec
   15648:	and	r3, r3, r1
   1564c:	orr	r2, r2, r3
   15650:	ldr	r1, [fp, #-76]	; 0xffffffb4
   15654:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15658:	eor	r1, r1, r3
   1565c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15660:	eor	r1, r1, r3
   15664:	ldr	r3, [fp, #-64]	; 0xffffffc0
   15668:	eor	r3, r3, r1
   1566c:	ror	r3, r3, #31
   15670:	str	r3, [fp, #-64]	; 0xffffffc0
   15674:	ldr	r3, [fp, #-64]	; 0xffffffc0
   15678:	add	r2, r2, r3
   1567c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15680:	ror	r3, r3, #27
   15684:	add	r2, r2, r3
   15688:	movw	r3, #48348	; 0xbcdc
   1568c:	movt	r3, #36635	; 0x8f1b
   15690:	add	r3, r2, r3
   15694:	ldr	r2, [fp, #-28]	; 0xffffffe4
   15698:	add	r3, r2, r3
   1569c:	str	r3, [fp, #-28]	; 0xffffffe4
   156a0:	ldr	r3, [fp, #-16]
   156a4:	ror	r3, r3, #2
   156a8:	str	r3, [fp, #-16]
   156ac:	ldr	r2, [fp, #-32]	; 0xffffffe0
   156b0:	ldr	r3, [fp, #-16]
   156b4:	orr	r2, r2, r3
   156b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   156bc:	and	r2, r2, r3
   156c0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   156c4:	ldr	r3, [fp, #-16]
   156c8:	and	r3, r3, r1
   156cc:	orr	r2, r2, r3
   156d0:	ldr	r1, [fp, #-72]	; 0xffffffb8
   156d4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   156d8:	eor	r1, r1, r3
   156dc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   156e0:	eor	r1, r1, r3
   156e4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   156e8:	eor	r3, r3, r1
   156ec:	ror	r3, r3, #31
   156f0:	str	r3, [fp, #-60]	; 0xffffffc4
   156f4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   156f8:	add	r2, r2, r3
   156fc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15700:	ror	r3, r3, #27
   15704:	add	r2, r2, r3
   15708:	movw	r3, #48348	; 0xbcdc
   1570c:	movt	r3, #36635	; 0x8f1b
   15710:	add	r3, r2, r3
   15714:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15718:	add	r3, r2, r3
   1571c:	str	r3, [fp, #-24]	; 0xffffffe8
   15720:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15724:	ror	r3, r3, #2
   15728:	str	r3, [fp, #-32]	; 0xffffffe0
   1572c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   15730:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15734:	orr	r2, r2, r3
   15738:	ldr	r3, [fp, #-16]
   1573c:	and	r2, r2, r3
   15740:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15744:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15748:	and	r3, r3, r1
   1574c:	orr	r2, r2, r3
   15750:	ldr	r1, [fp, #-68]	; 0xffffffbc
   15754:	ldr	r3, [fp, #-88]	; 0xffffffa8
   15758:	eor	r1, r1, r3
   1575c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15760:	eor	r1, r1, r3
   15764:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15768:	eor	r3, r3, r1
   1576c:	ror	r3, r3, #31
   15770:	str	r3, [fp, #-56]	; 0xffffffc8
   15774:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15778:	add	r2, r2, r3
   1577c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15780:	ror	r3, r3, #27
   15784:	add	r2, r2, r3
   15788:	movw	r3, #48348	; 0xbcdc
   1578c:	movt	r3, #36635	; 0x8f1b
   15790:	add	r3, r2, r3
   15794:	ldr	r2, [fp, #-20]	; 0xffffffec
   15798:	add	r3, r2, r3
   1579c:	str	r3, [fp, #-20]	; 0xffffffec
   157a0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   157a4:	ror	r3, r3, #2
   157a8:	str	r3, [fp, #-28]	; 0xffffffe4
   157ac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   157b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   157b4:	orr	r2, r2, r3
   157b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   157bc:	and	r2, r2, r3
   157c0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   157c4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   157c8:	and	r3, r3, r1
   157cc:	orr	r2, r2, r3
   157d0:	ldr	r1, [fp, #-64]	; 0xffffffc0
   157d4:	ldr	r3, [fp, #-84]	; 0xffffffac
   157d8:	eor	r1, r1, r3
   157dc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   157e0:	eor	r1, r1, r3
   157e4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   157e8:	eor	r3, r3, r1
   157ec:	ror	r3, r3, #31
   157f0:	str	r3, [fp, #-52]	; 0xffffffcc
   157f4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   157f8:	add	r2, r2, r3
   157fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   15800:	ror	r3, r3, #27
   15804:	add	r2, r2, r3
   15808:	movw	r3, #48348	; 0xbcdc
   1580c:	movt	r3, #36635	; 0x8f1b
   15810:	add	r3, r2, r3
   15814:	ldr	r2, [fp, #-16]
   15818:	add	r3, r2, r3
   1581c:	str	r3, [fp, #-16]
   15820:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15824:	ror	r3, r3, #2
   15828:	str	r3, [fp, #-24]	; 0xffffffe8
   1582c:	ldr	r2, [fp, #-20]	; 0xffffffec
   15830:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15834:	eor	r2, r2, r3
   15838:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1583c:	eor	r2, r2, r3
   15840:	ldr	r1, [fp, #-60]	; 0xffffffc4
   15844:	ldr	r3, [fp, #-80]	; 0xffffffb0
   15848:	eor	r1, r1, r3
   1584c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15850:	eor	r1, r1, r3
   15854:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15858:	eor	r3, r3, r1
   1585c:	ror	r3, r3, #31
   15860:	str	r3, [fp, #-48]	; 0xffffffd0
   15864:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15868:	add	r2, r2, r3
   1586c:	ldr	r3, [fp, #-16]
   15870:	ror	r3, r3, #27
   15874:	add	r2, r2, r3
   15878:	movw	r3, #49622	; 0xc1d6
   1587c:	movt	r3, #51810	; 0xca62
   15880:	add	r3, r2, r3
   15884:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15888:	add	r3, r2, r3
   1588c:	str	r3, [fp, #-32]	; 0xffffffe0
   15890:	ldr	r3, [fp, #-20]	; 0xffffffec
   15894:	ror	r3, r3, #2
   15898:	str	r3, [fp, #-20]	; 0xffffffec
   1589c:	ldr	r2, [fp, #-16]
   158a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   158a4:	eor	r2, r2, r3
   158a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   158ac:	eor	r2, r2, r3
   158b0:	ldr	r1, [fp, #-56]	; 0xffffffc8
   158b4:	ldr	r3, [fp, #-76]	; 0xffffffb4
   158b8:	eor	r1, r1, r3
   158bc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   158c0:	eor	r1, r1, r3
   158c4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   158c8:	eor	r3, r3, r1
   158cc:	ror	r3, r3, #31
   158d0:	str	r3, [fp, #-44]	; 0xffffffd4
   158d4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   158d8:	add	r2, r2, r3
   158dc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   158e0:	ror	r3, r3, #27
   158e4:	add	r2, r2, r3
   158e8:	movw	r3, #49622	; 0xc1d6
   158ec:	movt	r3, #51810	; 0xca62
   158f0:	add	r3, r2, r3
   158f4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   158f8:	add	r3, r2, r3
   158fc:	str	r3, [fp, #-28]	; 0xffffffe4
   15900:	ldr	r3, [fp, #-16]
   15904:	ror	r3, r3, #2
   15908:	str	r3, [fp, #-16]
   1590c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15910:	ldr	r3, [fp, #-16]
   15914:	eor	r2, r2, r3
   15918:	ldr	r3, [fp, #-20]	; 0xffffffec
   1591c:	eor	r2, r2, r3
   15920:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15924:	ldr	r3, [fp, #-72]	; 0xffffffb8
   15928:	eor	r1, r1, r3
   1592c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15930:	eor	r1, r1, r3
   15934:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15938:	eor	r3, r3, r1
   1593c:	ror	r3, r3, #31
   15940:	str	r3, [fp, #-40]	; 0xffffffd8
   15944:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15948:	add	r2, r2, r3
   1594c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15950:	ror	r3, r3, #27
   15954:	add	r2, r2, r3
   15958:	movw	r3, #49622	; 0xc1d6
   1595c:	movt	r3, #51810	; 0xca62
   15960:	add	r3, r2, r3
   15964:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15968:	add	r3, r2, r3
   1596c:	str	r3, [fp, #-24]	; 0xffffffe8
   15970:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15974:	ror	r3, r3, #2
   15978:	str	r3, [fp, #-32]	; 0xffffffe0
   1597c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   15980:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15984:	eor	r2, r2, r3
   15988:	ldr	r3, [fp, #-16]
   1598c:	eor	r2, r2, r3
   15990:	ldr	r1, [fp, #-48]	; 0xffffffd0
   15994:	ldr	r3, [fp, #-68]	; 0xffffffbc
   15998:	eor	r1, r1, r3
   1599c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   159a0:	eor	r1, r1, r3
   159a4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   159a8:	eor	r3, r3, r1
   159ac:	ror	r3, r3, #31
   159b0:	str	r3, [fp, #-36]	; 0xffffffdc
   159b4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   159b8:	add	r2, r2, r3
   159bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   159c0:	ror	r3, r3, #27
   159c4:	add	r2, r2, r3
   159c8:	movw	r3, #49622	; 0xc1d6
   159cc:	movt	r3, #51810	; 0xca62
   159d0:	add	r3, r2, r3
   159d4:	ldr	r2, [fp, #-20]	; 0xffffffec
   159d8:	add	r3, r2, r3
   159dc:	str	r3, [fp, #-20]	; 0xffffffec
   159e0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   159e4:	ror	r3, r3, #2
   159e8:	str	r3, [fp, #-28]	; 0xffffffe4
   159ec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   159f0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   159f4:	eor	r2, r2, r3
   159f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   159fc:	eor	r2, r2, r3
   15a00:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15a04:	ldr	r3, [fp, #-64]	; 0xffffffc0
   15a08:	eor	r1, r1, r3
   15a0c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   15a10:	eor	r1, r1, r3
   15a14:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15a18:	eor	r3, r3, r1
   15a1c:	ror	r3, r3, #31
   15a20:	str	r3, [fp, #-96]	; 0xffffffa0
   15a24:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15a28:	add	r2, r2, r3
   15a2c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15a30:	ror	r3, r3, #27
   15a34:	add	r2, r2, r3
   15a38:	movw	r3, #49622	; 0xc1d6
   15a3c:	movt	r3, #51810	; 0xca62
   15a40:	add	r3, r2, r3
   15a44:	ldr	r2, [fp, #-16]
   15a48:	add	r3, r2, r3
   15a4c:	str	r3, [fp, #-16]
   15a50:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15a54:	ror	r3, r3, #2
   15a58:	str	r3, [fp, #-24]	; 0xffffffe8
   15a5c:	ldr	r2, [fp, #-20]	; 0xffffffec
   15a60:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15a64:	eor	r2, r2, r3
   15a68:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15a6c:	eor	r2, r2, r3
   15a70:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15a74:	ldr	r3, [fp, #-60]	; 0xffffffc4
   15a78:	eor	r1, r1, r3
   15a7c:	ldr	r3, [fp, #-84]	; 0xffffffac
   15a80:	eor	r1, r1, r3
   15a84:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15a88:	eor	r3, r3, r1
   15a8c:	ror	r3, r3, #31
   15a90:	str	r3, [fp, #-92]	; 0xffffffa4
   15a94:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15a98:	add	r2, r2, r3
   15a9c:	ldr	r3, [fp, #-16]
   15aa0:	ror	r3, r3, #27
   15aa4:	add	r2, r2, r3
   15aa8:	movw	r3, #49622	; 0xc1d6
   15aac:	movt	r3, #51810	; 0xca62
   15ab0:	add	r3, r2, r3
   15ab4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15ab8:	add	r3, r2, r3
   15abc:	str	r3, [fp, #-32]	; 0xffffffe0
   15ac0:	ldr	r3, [fp, #-20]	; 0xffffffec
   15ac4:	ror	r3, r3, #2
   15ac8:	str	r3, [fp, #-20]	; 0xffffffec
   15acc:	ldr	r2, [fp, #-16]
   15ad0:	ldr	r3, [fp, #-20]	; 0xffffffec
   15ad4:	eor	r2, r2, r3
   15ad8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15adc:	eor	r2, r2, r3
   15ae0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15ae4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15ae8:	eor	r1, r1, r3
   15aec:	ldr	r3, [fp, #-80]	; 0xffffffb0
   15af0:	eor	r1, r1, r3
   15af4:	ldr	r3, [fp, #-88]	; 0xffffffa8
   15af8:	eor	r3, r3, r1
   15afc:	ror	r3, r3, #31
   15b00:	str	r3, [fp, #-88]	; 0xffffffa8
   15b04:	ldr	r3, [fp, #-88]	; 0xffffffa8
   15b08:	add	r2, r2, r3
   15b0c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15b10:	ror	r3, r3, #27
   15b14:	add	r2, r2, r3
   15b18:	movw	r3, #49622	; 0xc1d6
   15b1c:	movt	r3, #51810	; 0xca62
   15b20:	add	r3, r2, r3
   15b24:	ldr	r2, [fp, #-28]	; 0xffffffe4
   15b28:	add	r3, r2, r3
   15b2c:	str	r3, [fp, #-28]	; 0xffffffe4
   15b30:	ldr	r3, [fp, #-16]
   15b34:	ror	r3, r3, #2
   15b38:	str	r3, [fp, #-16]
   15b3c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15b40:	ldr	r3, [fp, #-16]
   15b44:	eor	r2, r2, r3
   15b48:	ldr	r3, [fp, #-20]	; 0xffffffec
   15b4c:	eor	r2, r2, r3
   15b50:	ldr	r1, [fp, #-96]	; 0xffffffa0
   15b54:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15b58:	eor	r1, r1, r3
   15b5c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   15b60:	eor	r1, r1, r3
   15b64:	ldr	r3, [fp, #-84]	; 0xffffffac
   15b68:	eor	r3, r3, r1
   15b6c:	ror	r3, r3, #31
   15b70:	str	r3, [fp, #-84]	; 0xffffffac
   15b74:	ldr	r3, [fp, #-84]	; 0xffffffac
   15b78:	add	r2, r2, r3
   15b7c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15b80:	ror	r3, r3, #27
   15b84:	add	r2, r2, r3
   15b88:	movw	r3, #49622	; 0xc1d6
   15b8c:	movt	r3, #51810	; 0xca62
   15b90:	add	r3, r2, r3
   15b94:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15b98:	add	r3, r2, r3
   15b9c:	str	r3, [fp, #-24]	; 0xffffffe8
   15ba0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15ba4:	ror	r3, r3, #2
   15ba8:	str	r3, [fp, #-32]	; 0xffffffe0
   15bac:	ldr	r2, [fp, #-28]	; 0xffffffe4
   15bb0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15bb4:	eor	r2, r2, r3
   15bb8:	ldr	r3, [fp, #-16]
   15bbc:	eor	r2, r2, r3
   15bc0:	ldr	r1, [fp, #-92]	; 0xffffffa4
   15bc4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15bc8:	eor	r1, r1, r3
   15bcc:	ldr	r3, [fp, #-72]	; 0xffffffb8
   15bd0:	eor	r1, r1, r3
   15bd4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   15bd8:	eor	r3, r3, r1
   15bdc:	ror	r3, r3, #31
   15be0:	str	r3, [fp, #-80]	; 0xffffffb0
   15be4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   15be8:	add	r2, r2, r3
   15bec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15bf0:	ror	r3, r3, #27
   15bf4:	add	r2, r2, r3
   15bf8:	movw	r3, #49622	; 0xc1d6
   15bfc:	movt	r3, #51810	; 0xca62
   15c00:	add	r3, r2, r3
   15c04:	ldr	r2, [fp, #-20]	; 0xffffffec
   15c08:	add	r3, r2, r3
   15c0c:	str	r3, [fp, #-20]	; 0xffffffec
   15c10:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15c14:	ror	r3, r3, #2
   15c18:	str	r3, [fp, #-28]	; 0xffffffe4
   15c1c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15c20:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15c24:	eor	r2, r2, r3
   15c28:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15c2c:	eor	r2, r2, r3
   15c30:	ldr	r1, [fp, #-88]	; 0xffffffa8
   15c34:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15c38:	eor	r1, r1, r3
   15c3c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   15c40:	eor	r1, r1, r3
   15c44:	ldr	r3, [fp, #-76]	; 0xffffffb4
   15c48:	eor	r3, r3, r1
   15c4c:	ror	r3, r3, #31
   15c50:	str	r3, [fp, #-76]	; 0xffffffb4
   15c54:	ldr	r3, [fp, #-76]	; 0xffffffb4
   15c58:	add	r2, r2, r3
   15c5c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15c60:	ror	r3, r3, #27
   15c64:	add	r2, r2, r3
   15c68:	movw	r3, #49622	; 0xc1d6
   15c6c:	movt	r3, #51810	; 0xca62
   15c70:	add	r3, r2, r3
   15c74:	ldr	r2, [fp, #-16]
   15c78:	add	r3, r2, r3
   15c7c:	str	r3, [fp, #-16]
   15c80:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15c84:	ror	r3, r3, #2
   15c88:	str	r3, [fp, #-24]	; 0xffffffe8
   15c8c:	ldr	r2, [fp, #-20]	; 0xffffffec
   15c90:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15c94:	eor	r2, r2, r3
   15c98:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15c9c:	eor	r2, r2, r3
   15ca0:	ldr	r1, [fp, #-84]	; 0xffffffac
   15ca4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15ca8:	eor	r1, r1, r3
   15cac:	ldr	r3, [fp, #-64]	; 0xffffffc0
   15cb0:	eor	r1, r1, r3
   15cb4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   15cb8:	eor	r3, r3, r1
   15cbc:	ror	r3, r3, #31
   15cc0:	str	r3, [fp, #-72]	; 0xffffffb8
   15cc4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   15cc8:	add	r2, r2, r3
   15ccc:	ldr	r3, [fp, #-16]
   15cd0:	ror	r3, r3, #27
   15cd4:	add	r2, r2, r3
   15cd8:	movw	r3, #49622	; 0xc1d6
   15cdc:	movt	r3, #51810	; 0xca62
   15ce0:	add	r3, r2, r3
   15ce4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15ce8:	add	r3, r2, r3
   15cec:	str	r3, [fp, #-32]	; 0xffffffe0
   15cf0:	ldr	r3, [fp, #-20]	; 0xffffffec
   15cf4:	ror	r3, r3, #2
   15cf8:	str	r3, [fp, #-20]	; 0xffffffec
   15cfc:	ldr	r2, [fp, #-16]
   15d00:	ldr	r3, [fp, #-20]	; 0xffffffec
   15d04:	eor	r2, r2, r3
   15d08:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15d0c:	eor	r2, r2, r3
   15d10:	ldr	r1, [fp, #-80]	; 0xffffffb0
   15d14:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15d18:	eor	r1, r1, r3
   15d1c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   15d20:	eor	r1, r1, r3
   15d24:	ldr	r3, [fp, #-68]	; 0xffffffbc
   15d28:	eor	r3, r3, r1
   15d2c:	ror	r3, r3, #31
   15d30:	str	r3, [fp, #-68]	; 0xffffffbc
   15d34:	ldr	r3, [fp, #-68]	; 0xffffffbc
   15d38:	add	r2, r2, r3
   15d3c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15d40:	ror	r3, r3, #27
   15d44:	add	r2, r2, r3
   15d48:	movw	r3, #49622	; 0xc1d6
   15d4c:	movt	r3, #51810	; 0xca62
   15d50:	add	r3, r2, r3
   15d54:	ldr	r2, [fp, #-28]	; 0xffffffe4
   15d58:	add	r3, r2, r3
   15d5c:	str	r3, [fp, #-28]	; 0xffffffe4
   15d60:	ldr	r3, [fp, #-16]
   15d64:	ror	r3, r3, #2
   15d68:	str	r3, [fp, #-16]
   15d6c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15d70:	ldr	r3, [fp, #-16]
   15d74:	eor	r2, r2, r3
   15d78:	ldr	r3, [fp, #-20]	; 0xffffffec
   15d7c:	eor	r2, r2, r3
   15d80:	ldr	r1, [fp, #-76]	; 0xffffffb4
   15d84:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15d88:	eor	r1, r1, r3
   15d8c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15d90:	eor	r1, r1, r3
   15d94:	ldr	r3, [fp, #-64]	; 0xffffffc0
   15d98:	eor	r3, r3, r1
   15d9c:	ror	r3, r3, #31
   15da0:	str	r3, [fp, #-64]	; 0xffffffc0
   15da4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   15da8:	add	r2, r2, r3
   15dac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15db0:	ror	r3, r3, #27
   15db4:	add	r2, r2, r3
   15db8:	movw	r3, #49622	; 0xc1d6
   15dbc:	movt	r3, #51810	; 0xca62
   15dc0:	add	r3, r2, r3
   15dc4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15dc8:	add	r3, r2, r3
   15dcc:	str	r3, [fp, #-24]	; 0xffffffe8
   15dd0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15dd4:	ror	r3, r3, #2
   15dd8:	str	r3, [fp, #-32]	; 0xffffffe0
   15ddc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   15de0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15de4:	eor	r2, r2, r3
   15de8:	ldr	r3, [fp, #-16]
   15dec:	eor	r2, r2, r3
   15df0:	ldr	r1, [fp, #-72]	; 0xffffffb8
   15df4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15df8:	eor	r1, r1, r3
   15dfc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15e00:	eor	r1, r1, r3
   15e04:	ldr	r3, [fp, #-60]	; 0xffffffc4
   15e08:	eor	r3, r3, r1
   15e0c:	ror	r3, r3, #31
   15e10:	str	r3, [fp, #-60]	; 0xffffffc4
   15e14:	ldr	r3, [fp, #-60]	; 0xffffffc4
   15e18:	add	r2, r2, r3
   15e1c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15e20:	ror	r3, r3, #27
   15e24:	add	r2, r2, r3
   15e28:	movw	r3, #49622	; 0xc1d6
   15e2c:	movt	r3, #51810	; 0xca62
   15e30:	add	r3, r2, r3
   15e34:	ldr	r2, [fp, #-20]	; 0xffffffec
   15e38:	add	r3, r2, r3
   15e3c:	str	r3, [fp, #-20]	; 0xffffffec
   15e40:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15e44:	ror	r3, r3, #2
   15e48:	str	r3, [fp, #-28]	; 0xffffffe4
   15e4c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15e50:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15e54:	eor	r2, r2, r3
   15e58:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15e5c:	eor	r2, r2, r3
   15e60:	ldr	r1, [fp, #-68]	; 0xffffffbc
   15e64:	ldr	r3, [fp, #-88]	; 0xffffffa8
   15e68:	eor	r1, r1, r3
   15e6c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15e70:	eor	r1, r1, r3
   15e74:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15e78:	eor	r3, r3, r1
   15e7c:	ror	r3, r3, #31
   15e80:	str	r3, [fp, #-56]	; 0xffffffc8
   15e84:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15e88:	add	r2, r2, r3
   15e8c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15e90:	ror	r3, r3, #27
   15e94:	add	r2, r2, r3
   15e98:	movw	r3, #49622	; 0xc1d6
   15e9c:	movt	r3, #51810	; 0xca62
   15ea0:	add	r3, r2, r3
   15ea4:	ldr	r2, [fp, #-16]
   15ea8:	add	r3, r2, r3
   15eac:	str	r3, [fp, #-16]
   15eb0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15eb4:	ror	r3, r3, #2
   15eb8:	str	r3, [fp, #-24]	; 0xffffffe8
   15ebc:	ldr	r2, [fp, #-20]	; 0xffffffec
   15ec0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15ec4:	eor	r2, r2, r3
   15ec8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15ecc:	eor	r2, r2, r3
   15ed0:	ldr	r1, [fp, #-64]	; 0xffffffc0
   15ed4:	ldr	r3, [fp, #-84]	; 0xffffffac
   15ed8:	eor	r1, r1, r3
   15edc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15ee0:	eor	r1, r1, r3
   15ee4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15ee8:	eor	r3, r3, r1
   15eec:	ror	r3, r3, #31
   15ef0:	str	r3, [fp, #-52]	; 0xffffffcc
   15ef4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15ef8:	add	r2, r2, r3
   15efc:	ldr	r3, [fp, #-16]
   15f00:	ror	r3, r3, #27
   15f04:	add	r2, r2, r3
   15f08:	movw	r3, #49622	; 0xc1d6
   15f0c:	movt	r3, #51810	; 0xca62
   15f10:	add	r3, r2, r3
   15f14:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15f18:	add	r3, r2, r3
   15f1c:	str	r3, [fp, #-32]	; 0xffffffe0
   15f20:	ldr	r3, [fp, #-20]	; 0xffffffec
   15f24:	ror	r3, r3, #2
   15f28:	str	r3, [fp, #-20]	; 0xffffffec
   15f2c:	ldr	r2, [fp, #-16]
   15f30:	ldr	r3, [fp, #-20]	; 0xffffffec
   15f34:	eor	r2, r2, r3
   15f38:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15f3c:	eor	r2, r2, r3
   15f40:	ldr	r1, [fp, #-60]	; 0xffffffc4
   15f44:	ldr	r3, [fp, #-80]	; 0xffffffb0
   15f48:	eor	r1, r1, r3
   15f4c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15f50:	eor	r1, r1, r3
   15f54:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15f58:	eor	r3, r3, r1
   15f5c:	ror	r3, r3, #31
   15f60:	str	r3, [fp, #-48]	; 0xffffffd0
   15f64:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15f68:	add	r2, r2, r3
   15f6c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15f70:	ror	r3, r3, #27
   15f74:	add	r2, r2, r3
   15f78:	movw	r3, #49622	; 0xc1d6
   15f7c:	movt	r3, #51810	; 0xca62
   15f80:	add	r3, r2, r3
   15f84:	ldr	r2, [fp, #-28]	; 0xffffffe4
   15f88:	add	r3, r2, r3
   15f8c:	str	r3, [fp, #-28]	; 0xffffffe4
   15f90:	ldr	r3, [fp, #-16]
   15f94:	ror	r3, r3, #2
   15f98:	str	r3, [fp, #-16]
   15f9c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15fa0:	ldr	r3, [fp, #-16]
   15fa4:	eor	r2, r2, r3
   15fa8:	ldr	r3, [fp, #-20]	; 0xffffffec
   15fac:	eor	r2, r2, r3
   15fb0:	ldr	r1, [fp, #-56]	; 0xffffffc8
   15fb4:	ldr	r3, [fp, #-76]	; 0xffffffb4
   15fb8:	eor	r1, r1, r3
   15fbc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15fc0:	eor	r1, r1, r3
   15fc4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15fc8:	eor	r3, r3, r1
   15fcc:	ror	r3, r3, #31
   15fd0:	str	r3, [fp, #-44]	; 0xffffffd4
   15fd4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15fd8:	add	r2, r2, r3
   15fdc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15fe0:	ror	r3, r3, #27
   15fe4:	add	r2, r2, r3
   15fe8:	movw	r3, #49622	; 0xc1d6
   15fec:	movt	r3, #51810	; 0xca62
   15ff0:	add	r3, r2, r3
   15ff4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15ff8:	add	r3, r2, r3
   15ffc:	str	r3, [fp, #-24]	; 0xffffffe8
   16000:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16004:	ror	r3, r3, #2
   16008:	str	r3, [fp, #-32]	; 0xffffffe0
   1600c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   16010:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16014:	eor	r2, r2, r3
   16018:	ldr	r3, [fp, #-16]
   1601c:	eor	r2, r2, r3
   16020:	ldr	r1, [fp, #-52]	; 0xffffffcc
   16024:	ldr	r3, [fp, #-72]	; 0xffffffb8
   16028:	eor	r1, r1, r3
   1602c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16030:	eor	r1, r1, r3
   16034:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16038:	eor	r3, r3, r1
   1603c:	ror	r3, r3, #31
   16040:	str	r3, [fp, #-40]	; 0xffffffd8
   16044:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16048:	add	r2, r2, r3
   1604c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16050:	ror	r3, r3, #27
   16054:	add	r2, r2, r3
   16058:	movw	r3, #49622	; 0xc1d6
   1605c:	movt	r3, #51810	; 0xca62
   16060:	add	r3, r2, r3
   16064:	ldr	r2, [fp, #-20]	; 0xffffffec
   16068:	add	r3, r2, r3
   1606c:	str	r3, [fp, #-20]	; 0xffffffec
   16070:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16074:	ror	r3, r3, #2
   16078:	str	r3, [fp, #-28]	; 0xffffffe4
   1607c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16080:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16084:	eor	r2, r2, r3
   16088:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1608c:	eor	r2, r2, r3
   16090:	ldr	r1, [fp, #-48]	; 0xffffffd0
   16094:	ldr	r3, [fp, #-68]	; 0xffffffbc
   16098:	eor	r1, r1, r3
   1609c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   160a0:	eor	r1, r1, r3
   160a4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   160a8:	eor	r3, r3, r1
   160ac:	ror	r3, r3, #31
   160b0:	str	r3, [fp, #-36]	; 0xffffffdc
   160b4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   160b8:	add	r2, r2, r3
   160bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   160c0:	ror	r3, r3, #27
   160c4:	add	r2, r2, r3
   160c8:	movw	r3, #49622	; 0xc1d6
   160cc:	movt	r3, #51810	; 0xca62
   160d0:	add	r3, r2, r3
   160d4:	ldr	r2, [fp, #-16]
   160d8:	add	r3, r2, r3
   160dc:	str	r3, [fp, #-16]
   160e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   160e4:	ror	r3, r3, #2
   160e8:	str	r3, [fp, #-24]	; 0xffffffe8
   160ec:	ldr	r3, [fp, #-104]	; 0xffffff98
   160f0:	ldr	r2, [r3]
   160f4:	ldr	r3, [fp, #-16]
   160f8:	add	r2, r2, r3
   160fc:	ldr	r3, [fp, #-104]	; 0xffffff98
   16100:	str	r2, [r3]
   16104:	ldr	r3, [fp, #-104]	; 0xffffff98
   16108:	ldr	r2, [r3, #4]
   1610c:	ldr	r3, [fp, #-20]	; 0xffffffec
   16110:	add	r2, r2, r3
   16114:	ldr	r3, [fp, #-104]	; 0xffffff98
   16118:	str	r2, [r3, #4]
   1611c:	ldr	r3, [fp, #-104]	; 0xffffff98
   16120:	ldr	r2, [r3, #8]
   16124:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16128:	add	r2, r2, r3
   1612c:	ldr	r3, [fp, #-104]	; 0xffffff98
   16130:	str	r2, [r3, #8]
   16134:	ldr	r3, [fp, #-104]	; 0xffffff98
   16138:	ldr	r2, [r3, #12]
   1613c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16140:	add	r2, r2, r3
   16144:	ldr	r3, [fp, #-104]	; 0xffffff98
   16148:	str	r2, [r3, #12]
   1614c:	ldr	r3, [fp, #-104]	; 0xffffff98
   16150:	ldr	r2, [r3, #16]
   16154:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16158:	add	r2, r2, r3
   1615c:	ldr	r3, [fp, #-104]	; 0xffffff98
   16160:	str	r2, [r3, #16]
   16164:	mov	r3, #0
   16168:	str	r3, [fp, #-32]	; 0xffffffe0
   1616c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16170:	str	r3, [fp, #-28]	; 0xffffffe4
   16174:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16178:	str	r3, [fp, #-24]	; 0xffffffe8
   1617c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16180:	str	r3, [fp, #-20]	; 0xffffffec
   16184:	ldr	r3, [fp, #-20]	; 0xffffffec
   16188:	str	r3, [fp, #-16]
   1618c:	ldr	r3, [fp, #-16]
   16190:	mov	r0, r3
   16194:	sub	sp, fp, #8
   16198:	ldr	r4, [sp]
   1619c:	ldr	fp, [sp, #4]
   161a0:	add	sp, sp, #8
   161a4:	pop	{pc}		; (ldr pc, [sp], #4)
   161a8:	push	{fp}		; (str fp, [sp, #-4]!)
   161ac:	add	fp, sp, #0
   161b0:	sub	sp, sp, #12
   161b4:	str	r0, [fp, #-8]
   161b8:	ldr	r2, [fp, #-8]
   161bc:	movw	r3, #8961	; 0x2301
   161c0:	movt	r3, #26437	; 0x6745
   161c4:	str	r3, [r2]
   161c8:	ldr	r2, [fp, #-8]
   161cc:	movw	r3, #43913	; 0xab89
   161d0:	movt	r3, #61389	; 0xefcd
   161d4:	str	r3, [r2, #4]
   161d8:	ldr	r2, [fp, #-8]
   161dc:	movw	r3, #56574	; 0xdcfe
   161e0:	movt	r3, #39098	; 0x98ba
   161e4:	str	r3, [r2, #8]
   161e8:	ldr	r2, [fp, #-8]
   161ec:	movw	r3, #21622	; 0x5476
   161f0:	movt	r3, #4146	; 0x1032
   161f4:	str	r3, [r2, #12]
   161f8:	ldr	r2, [fp, #-8]
   161fc:	movw	r3, #57840	; 0xe1f0
   16200:	movt	r3, #50130	; 0xc3d2
   16204:	str	r3, [r2, #16]
   16208:	ldr	r1, [fp, #-8]
   1620c:	mov	r2, #0
   16210:	mov	r3, #0
   16214:	strd	r2, [r1, #24]
   16218:	nop	{0}
   1621c:	add	sp, fp, #0
   16220:	pop	{fp}		; (ldr fp, [sp], #4)
   16224:	bx	lr
   16228:	strd	r4, [sp, #-16]!
   1622c:	str	fp, [sp, #8]
   16230:	str	lr, [sp, #12]
   16234:	add	fp, sp, #12
   16238:	sub	sp, sp, #24
   1623c:	str	r0, [fp, #-24]	; 0xffffffe8
   16240:	str	r1, [fp, #-28]	; 0xffffffe4
   16244:	str	r2, [fp, #-32]	; 0xffffffe0
   16248:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1624c:	ldrd	r0, [r3, #24]
   16250:	mov	r2, #0
   16254:	mov	r3, #0
   16258:	lsr	r2, r0, #3
   1625c:	orr	r2, r2, r1, lsl #29
   16260:	lsr	r3, r1, #3
   16264:	mov	r3, r2
   16268:	and	r3, r3, #63	; 0x3f
   1626c:	str	r3, [fp, #-20]	; 0xffffffec
   16270:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16274:	ldrd	r0, [r3, #24]
   16278:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1627c:	lsl	r3, r3, #3
   16280:	mov	r2, r3
   16284:	mov	r3, #0
   16288:	adds	r4, r0, r2
   1628c:	adc	r5, r1, r3
   16290:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16294:	strd	r4, [r3, #24]
   16298:	ldr	r2, [fp, #-20]	; 0xffffffec
   1629c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   162a0:	add	r3, r2, r3
   162a4:	cmp	r3, #63	; 0x3f
   162a8:	bls	16334 <rb_base64_encode@plt+0x53e0>
   162ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   162b0:	rsb	r3, r3, #64	; 0x40
   162b4:	str	r3, [fp, #-16]
   162b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   162bc:	add	r3, r3, #32
   162c0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   162c4:	add	r3, r2, r3
   162c8:	ldr	r2, [fp, #-16]
   162cc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   162d0:	mov	r0, r3
   162d4:	bl	10e1c <memcpy@plt>
   162d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   162dc:	add	r3, r3, #32
   162e0:	mov	r1, r3
   162e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   162e8:	bl	13ca0 <rb_base64_encode@plt+0x2d4c>
   162ec:	b	16314 <rb_base64_encode@plt+0x53c0>
   162f0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   162f4:	ldr	r3, [fp, #-16]
   162f8:	add	r3, r2, r3
   162fc:	mov	r1, r3
   16300:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16304:	bl	13ca0 <rb_base64_encode@plt+0x2d4c>
   16308:	ldr	r3, [fp, #-16]
   1630c:	add	r3, r3, #64	; 0x40
   16310:	str	r3, [fp, #-16]
   16314:	ldr	r3, [fp, #-16]
   16318:	add	r3, r3, #63	; 0x3f
   1631c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   16320:	cmp	r2, r3
   16324:	bhi	162f0 <rb_base64_encode@plt+0x539c>
   16328:	mov	r3, #0
   1632c:	str	r3, [fp, #-20]	; 0xffffffec
   16330:	b	1633c <rb_base64_encode@plt+0x53e8>
   16334:	mov	r3, #0
   16338:	str	r3, [fp, #-16]
   1633c:	ldr	r3, [fp, #-20]	; 0xffffffec
   16340:	add	r3, r3, #32
   16344:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16348:	add	r0, r2, r3
   1634c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   16350:	ldr	r3, [fp, #-16]
   16354:	add	r1, r2, r3
   16358:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1635c:	ldr	r3, [fp, #-16]
   16360:	sub	r3, r2, r3
   16364:	mov	r2, r3
   16368:	bl	10e1c <memcpy@plt>
   1636c:	nop	{0}
   16370:	sub	sp, fp, #12
   16374:	ldrd	r4, [sp]
   16378:	ldr	fp, [sp, #8]
   1637c:	add	sp, sp, #12
   16380:	pop	{pc}		; (ldr pc, [sp], #4)
   16384:	strd	r4, [sp, #-20]!	; 0xffffffec
   16388:	str	r6, [sp, #8]
   1638c:	str	fp, [sp, #12]
   16390:	str	lr, [sp, #16]
   16394:	add	fp, sp, #16
   16398:	sub	sp, sp, #28
   1639c:	str	r0, [fp, #-40]	; 0xffffffd8
   163a0:	str	r1, [fp, #-44]	; 0xffffffd4
   163a4:	mov	r1, #0
   163a8:	str	r1, [fp, #-24]	; 0xffffffe8
   163ac:	b	16404 <rb_base64_encode@plt+0x54b0>
   163b0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   163b4:	ldrd	r0, [r1, #24]
   163b8:	ldr	ip, [fp, #-24]	; 0xffffffe8
   163bc:	mvn	ip, ip
   163c0:	and	ip, ip, #7
   163c4:	lsl	ip, ip, #3
   163c8:	rsb	r6, ip, #32
   163cc:	sub	lr, ip, #32
   163d0:	lsr	r2, r0, ip
   163d4:	orr	r2, r2, r1, lsl r6
   163d8:	orr	r2, r2, r1, lsr lr
   163dc:	lsr	r3, r1, ip
   163e0:	uxtb	ip, r2
   163e4:	sub	r0, fp, #32
   163e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   163ec:	add	r1, r0, r1
   163f0:	mov	r0, ip
   163f4:	strb	r0, [r1]
   163f8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   163fc:	add	r1, r1, #1
   16400:	str	r1, [fp, #-24]	; 0xffffffe8
   16404:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16408:	cmp	r1, #7
   1640c:	bls	163b0 <rb_base64_encode@plt+0x545c>
   16410:	mov	r2, #1
   16414:	ldr	r3, [pc, #232]	; 16504 <rb_base64_encode@plt+0x55b0>
   16418:	add	r3, pc, r3
   1641c:	mov	r1, r3
   16420:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16424:	bl	16228 <rb_base64_encode@plt+0x52d4>
   16428:	b	16444 <rb_base64_encode@plt+0x54f0>
   1642c:	mov	r2, #1
   16430:	ldr	r3, [pc, #208]	; 16508 <rb_base64_encode@plt+0x55b4>
   16434:	add	r3, pc, r3
   16438:	mov	r1, r3
   1643c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16440:	bl	16228 <rb_base64_encode@plt+0x52d4>
   16444:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16448:	ldrd	r2, [r3, #24]
   1644c:	mov	r0, #504	; 0x1f8
   16450:	mov	r1, #0
   16454:	and	r4, r2, r0
   16458:	and	r5, r3, r1
   1645c:	cmp	r5, #0
   16460:	cmpeq	r4, #448	; 0x1c0
   16464:	bne	1642c <rb_base64_encode@plt+0x54d8>
   16468:	sub	r3, fp, #32
   1646c:	mov	r2, #8
   16470:	mov	r1, r3
   16474:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16478:	bl	16228 <rb_base64_encode@plt+0x52d4>
   1647c:	mov	r3, #0
   16480:	str	r3, [fp, #-24]	; 0xffffffe8
   16484:	b	164cc <rb_base64_encode@plt+0x5578>
   16488:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1648c:	lsr	r2, r3, #2
   16490:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16494:	ldr	r2, [r3, r2, lsl #2]
   16498:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1649c:	mvn	r3, r3
   164a0:	and	r3, r3, #3
   164a4:	lsl	r3, r3, #3
   164a8:	lsr	r1, r2, r3
   164ac:	ldr	r2, [fp, #-44]	; 0xffffffd4
   164b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   164b4:	add	r3, r2, r3
   164b8:	uxtb	r2, r1
   164bc:	strb	r2, [r3]
   164c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   164c4:	add	r3, r3, #1
   164c8:	str	r3, [fp, #-24]	; 0xffffffe8
   164cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   164d0:	cmp	r3, #19
   164d4:	bls	16488 <rb_base64_encode@plt+0x5534>
   164d8:	mov	r2, #96	; 0x60
   164dc:	mov	r1, #0
   164e0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   164e4:	bl	10d80 <memset@plt>
   164e8:	nop	{0}
   164ec:	sub	sp, fp, #16
   164f0:	ldrd	r4, [sp]
   164f4:	ldr	r6, [sp, #8]
   164f8:	ldr	fp, [sp, #12]
   164fc:	add	sp, sp, #16
   16500:	pop	{pc}		; (ldr pc, [sp], #4)
   16504:	andeq	r0, r0, ip, lsr r4
   16508:	andeq	r0, r0, r4, lsr #8
   1650c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16510:	mov	r7, r0
   16514:	ldr	r6, [pc, #72]	; 16564 <rb_base64_encode@plt+0x5610>
   16518:	ldr	r5, [pc, #72]	; 16568 <rb_base64_encode@plt+0x5614>
   1651c:	add	r6, pc, r6
   16520:	add	r5, pc, r5
   16524:	sub	r6, r6, r5
   16528:	mov	r8, r1
   1652c:	mov	r9, r2
   16530:	bl	10ca0 <open@plt-0x20>
   16534:	asrs	r6, r6, #2
   16538:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1653c:	mov	r4, #0
   16540:	add	r4, r4, #1
   16544:	ldr	r3, [r5], #4
   16548:	mov	r2, r9
   1654c:	mov	r1, r8
   16550:	mov	r0, r7
   16554:	blx	r3
   16558:	cmp	r6, r4
   1655c:	bne	16540 <rb_base64_encode@plt+0x55ec>
   16560:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16564:	ldrdeq	r0, [r1], -r8
   16568:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   1656c:	bx	lr

Disassembly of section .fini:

00016570 <.fini>:
   16570:	push	{r3, lr}
   16574:	pop	{r3, pc}
