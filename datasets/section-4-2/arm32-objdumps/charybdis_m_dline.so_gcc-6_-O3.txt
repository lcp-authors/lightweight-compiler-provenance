
../repos/charybdis/modules/.libs/m_dline.so:     file format elf32-littlearm


Disassembly of section .init:

000009cc <_init>:
 9cc:	push	{r3, lr}
 9d0:	bl	b90 <call_weak_fn>
 9d4:	pop	{r3, pc}

Disassembly of section .plt:

000009d8 <.plt>:
 9d8:	push	{lr}		; (str lr, [sp, #-4]!)
 9dc:	ldr	lr, [pc, #4]	; 9e8 <.plt+0x10>
 9e0:	add	lr, pc, lr
 9e4:	ldr	pc, [lr, #8]!
 9e8:	.word	0x00012618

000009ec <make_conf@plt>:
 9ec:	add	ip, pc, #0, 12
 9f0:	add	ip, ip, #73728	; 0x12000
 9f4:	ldr	pc, [ip, #1560]!	; 0x618

000009f8 <parse_netmask_strict@plt>:
 9f8:	add	ip, pc, #0, 12
 9fc:	add	ip, ip, #73728	; 0x12000
 a00:	ldr	pc, [ip, #1552]!	; 0x610

00000a04 <rb_current_time@plt>:
 a04:	add	ip, pc, #0, 12
 a08:	add	ip, ip, #73728	; 0x12000
 a0c:	ldr	pc, [ip, #1544]!	; 0x608

00000a10 <sendto_match_servs@plt>:
 a10:	add	ip, pc, #0, 12
 a14:	add	ip, ip, #73728	; 0x12000
 a18:	ldr	pc, [ip, #1536]!	; 0x600

00000a1c <__cxa_finalize@plt>:
 a1c:	add	ip, pc, #0, 12
 a20:	add	ip, ip, #73728	; 0x12000
 a24:	ldr	pc, [ip, #1528]!	; 0x5f8

00000a28 <strtol@plt>:
 a28:	add	ip, pc, #0, 12
 a2c:	add	ip, ip, #73728	; 0x12000
 a30:	ldr	pc, [ip, #1520]!	; 0x5f0

00000a34 <sendto_one@plt>:
 a34:	add	ip, pc, #0, 12
 a38:	add	ip, ip, #73728	; 0x12000
 a3c:	ldr	pc, [ip, #1512]!	; 0x5e8

00000a40 <memcpy@plt>:
 a40:	add	ip, pc, #0, 12
 a44:	add	ip, ip, #73728	; 0x12000
 a48:	ldr	pc, [ip, #1504]!	; 0x5e0

00000a4c <rb_outofmemory@plt>:
 a4c:	add	ip, pc, #0, 12
 a50:	add	ip, ip, #73728	; 0x12000
 a54:	ldr	pc, [ip, #1496]!	; 0x5d8

00000a58 <parse_netmask@plt>:
 a58:	add	ip, pc, #0, 12
 a5c:	add	ip, ip, #73728	; 0x12000
 a60:	ldr	pc, [ip, #1488]!	; 0x5d0

00000a64 <sendto_realops_snomask@plt>:
 a64:	add	ip, pc, #0, 12
 a68:	add	ip, ip, #73728	; 0x12000
 a6c:	ldr	pc, [ip, #1480]!	; 0x5c8

00000a70 <bandb_add@plt>:
 a70:	add	ip, pc, #0, 12
 a74:	add	ip, ip, #73728	; 0x12000
 a78:	ldr	pc, [ip, #1472]!	; 0x5c0

00000a7c <get_oper_name@plt>:
 a7c:	add	ip, pc, #0, 12
 a80:	add	ip, ip, #73728	; 0x12000
 a84:	ldr	pc, [ip, #1464]!	; 0x5b8

00000a88 <rb_free_rb_dlink_node@plt>:
 a88:	add	ip, pc, #0, 12
 a8c:	add	ip, ip, #73728	; 0x12000
 a90:	ldr	pc, [ip, #1456]!	; 0x5b0

00000a94 <operhash_add@plt>:
 a94:	add	ip, pc, #0, 12
 a98:	add	ip, ip, #73728	; 0x12000
 a9c:	ldr	pc, [ip, #1448]!	; 0x5a8

00000aa0 <add_temp_dline@plt>:
 aa0:	add	ip, pc, #0, 12
 aa4:	add	ip, ip, #73728	; 0x12000
 aa8:	ldr	pc, [ip, #1440]!	; 0x5a0

00000aac <rb_set_time@plt>:
 aac:	add	ip, pc, #0, 12
 ab0:	add	ip, ip, #73728	; 0x12000
 ab4:	ldr	pc, [ip, #1432]!	; 0x598

00000ab8 <malloc@plt>:
 ab8:	add	ip, pc, #0, 12
 abc:	add	ip, ip, #73728	; 0x12000
 ac0:	ldr	pc, [ip, #1424]!	; 0x590

00000ac4 <add_conf_by_address@plt>:
 ac4:	add	ip, pc, #0, 12
 ac8:	add	ip, ip, #73728	; 0x12000
 acc:	ldr	pc, [ip, #1416]!	; 0x588

00000ad0 <__gmon_start__@plt>:
 ad0:	add	ip, pc, #0, 12
 ad4:	add	ip, ip, #73728	; 0x12000
 ad8:	ldr	pc, [ip, #1408]!	; 0x580

00000adc <strlen@plt>:
 adc:	add	ip, pc, #0, 12
 ae0:	add	ip, ip, #73728	; 0x12000
 ae4:	ldr	pc, [ip, #1400]!	; 0x578

00000ae8 <strchr@plt>:
 ae8:	add	ip, pc, #0, 12
 aec:	add	ip, ip, #73728	; 0x12000
 af0:	ldr	pc, [ip, #1392]!	; 0x570

00000af4 <delete_one_address_conf@plt>:
 af4:	add	ip, pc, #0, 12
 af8:	add	ip, ip, #73728	; 0x12000
 afc:	ldr	pc, [ip, #1384]!	; 0x568

00000b00 <ilog@plt>:
 b00:	add	ip, pc, #0, 12
 b04:	add	ip, ip, #73728	; 0x12000
 b08:	ldr	pc, [ip, #1376]!	; 0x560

00000b0c <match@plt>:
 b0c:	add	ip, pc, #0, 12
 b10:	add	ip, ip, #73728	; 0x12000
 b14:	ldr	pc, [ip, #1368]!	; 0x558

00000b18 <valid_temp_time@plt>:
 b18:	add	ip, pc, #0, 12
 b1c:	add	ip, ip, #73728	; 0x12000
 b20:	ldr	pc, [ip, #1360]!	; 0x550

00000b24 <check_dlines@plt>:
 b24:	add	ip, pc, #0, 12
 b28:	add	ip, ip, #73728	; 0x12000
 b2c:	ldr	pc, [ip, #1352]!	; 0x548

00000b30 <sendto_one_notice@plt>:
 b30:	add	ip, pc, #0, 12
 b34:	add	ip, ip, #73728	; 0x12000
 b38:	ldr	pc, [ip, #1344]!	; 0x540

00000b3c <bandb_del@plt>:
 b3c:	add	ip, pc, #0, 12
 b40:	add	ip, ip, #73728	; 0x12000
 b44:	ldr	pc, [ip, #1336]!	; 0x538

00000b48 <find_exact_conf_by_address@plt>:
 b48:	add	ip, pc, #0, 12
 b4c:	add	ip, ip, #73728	; 0x12000
 b50:	ldr	pc, [ip, #1328]!	; 0x530

00000b54 <rb_strlcpy@plt>:
 b54:	add	ip, pc, #0, 12
 b58:	add	ip, ip, #73728	; 0x12000
 b5c:	ldr	pc, [ip, #1320]!	; 0x528

00000b60 <find_shared_conf@plt>:
 b60:	add	ip, pc, #0, 12
 b64:	add	ip, ip, #73728	; 0x12000
 b68:	ldr	pc, [ip, #1312]!	; 0x520

00000b6c <privilegeset_in_set@plt>:
 b6c:	add	ip, pc, #0, 12
 b70:	add	ip, ip, #73728	; 0x12000
 b74:	ldr	pc, [ip, #1304]!	; 0x518

00000b78 <irccmp@plt>:
 b78:	add	ip, pc, #0, 12
 b7c:	add	ip, ip, #73728	; 0x12000
 b80:	ldr	pc, [ip, #1296]!	; 0x510

00000b84 <find_dline@plt>:
 b84:	add	ip, pc, #0, 12
 b88:	add	ip, ip, #73728	; 0x12000
 b8c:	ldr	pc, [ip, #1288]!	; 0x508

Disassembly of section .text:

00000b90 <call_weak_fn>:
     b90:	ldr	r3, [pc, #20]	; bac <call_weak_fn+0x1c>
     b94:	ldr	r2, [pc, #20]	; bb0 <call_weak_fn+0x20>
     b98:	add	r3, pc, r3
     b9c:	ldr	r2, [r3, r2]
     ba0:	cmp	r2, #0
     ba4:	bxeq	lr
     ba8:	b	ad0 <__gmon_start__@plt>
     bac:	.word	0x00012460
     bb0:	.word	0x000000a0

00000bb4 <deregister_tm_clones>:
     bb4:	ldr	r3, [pc, #52]	; bf0 <deregister_tm_clones+0x3c>
     bb8:	ldr	r0, [pc, #52]	; bf4 <deregister_tm_clones+0x40>
     bbc:	add	r3, pc, r3
     bc0:	add	r0, pc, r0
     bc4:	add	r3, r3, #3
     bc8:	sub	r3, r3, r0
     bcc:	cmp	r3, #6
     bd0:	ldr	r3, [pc, #32]	; bf8 <deregister_tm_clones+0x44>
     bd4:	add	r3, pc, r3
     bd8:	bxls	lr
     bdc:	ldr	r2, [pc, #24]	; bfc <deregister_tm_clones+0x48>
     be0:	ldr	r3, [r3, r2]
     be4:	cmp	r3, #0
     be8:	bxeq	lr
     bec:	bx	r3
     bf0:	.word	0x000125b8
     bf4:	.word	0x000125b4
     bf8:	.word	0x00012424
     bfc:	.word	0x0000009c

00000c00 <register_tm_clones>:
     c00:	ldr	r1, [pc, #56]	; c40 <register_tm_clones+0x40>
     c04:	ldr	r0, [pc, #56]	; c44 <register_tm_clones+0x44>
     c08:	add	r1, pc, r1
     c0c:	add	r0, pc, r0
     c10:	sub	r1, r1, r0
     c14:	ldr	r3, [pc, #44]	; c48 <register_tm_clones+0x48>
     c18:	asr	r1, r1, #2
     c1c:	add	r3, pc, r3
     c20:	add	r1, r1, r1, lsr #31
     c24:	asrs	r1, r1, #1
     c28:	bxeq	lr
     c2c:	ldr	r2, [pc, #24]	; c4c <register_tm_clones+0x4c>
     c30:	ldr	r3, [r3, r2]
     c34:	cmp	r3, #0
     c38:	bxeq	lr
     c3c:	bx	r3
     c40:	.word	0x0001256c
     c44:	.word	0x00012568
     c48:	.word	0x000123dc
     c4c:	.word	0x000000ac

00000c50 <__do_global_dtors_aux>:
     c50:	ldr	r3, [pc, #76]	; ca4 <__do_global_dtors_aux+0x54>
     c54:	ldr	r2, [pc, #76]	; ca8 <__do_global_dtors_aux+0x58>
     c58:	add	r3, pc, r3
     c5c:	add	r2, pc, r2
     c60:	ldrb	r3, [r3]
     c64:	cmp	r3, #0
     c68:	bxne	lr
     c6c:	ldr	r3, [pc, #56]	; cac <__do_global_dtors_aux+0x5c>
     c70:	push	{r4, lr}
     c74:	ldr	r3, [r2, r3]
     c78:	cmp	r3, #0
     c7c:	beq	c8c <__do_global_dtors_aux+0x3c>
     c80:	ldr	r3, [pc, #40]	; cb0 <__do_global_dtors_aux+0x60>
     c84:	ldr	r0, [pc, r3]
     c88:	bl	a1c <__cxa_finalize@plt>
     c8c:	bl	bb4 <deregister_tm_clones>
     c90:	ldr	r3, [pc, #28]	; cb4 <__do_global_dtors_aux+0x64>
     c94:	mov	r2, #1
     c98:	add	r3, pc, r3
     c9c:	strb	r2, [r3]
     ca0:	pop	{r4, pc}
     ca4:	.word	0x0001251c
     ca8:	.word	0x0001239c
     cac:	.word	0x00000098
     cb0:	.word	0x00012430
     cb4:	.word	0x000124dc

00000cb8 <frame_dummy>:
     cb8:	ldr	r0, [pc, #56]	; cf8 <frame_dummy+0x40>
     cbc:	ldr	r3, [pc, #56]	; cfc <frame_dummy+0x44>
     cc0:	add	r0, pc, r0
     cc4:	ldr	r2, [r0]
     cc8:	add	r3, pc, r3
     ccc:	cmp	r2, #0
     cd0:	bne	cd8 <frame_dummy+0x20>
     cd4:	b	c00 <register_tm_clones>
     cd8:	ldr	r2, [pc, #32]	; d00 <frame_dummy+0x48>
     cdc:	ldr	r3, [r3, r2]
     ce0:	cmp	r3, #0
     ce4:	beq	cd4 <frame_dummy+0x1c>
     ce8:	push	{r4, lr}
     cec:	blx	r3
     cf0:	pop	{r4, lr}
     cf4:	b	c00 <register_tm_clones>
     cf8:	.word	0x00012234
     cfc:	.word	0x00012330
     d00:	.word	0x000000a8

00000d04 <apply_undline>:
     d04:	push	{r4, r5, r6, r7, r8, lr}
     d08:	mov	r2, #0
     d0c:	mov	r5, r1
     d10:	sub	sp, sp, #520	; 0x208
     d14:	mov	r6, r0
     d18:	mov	r1, r2
     d1c:	mov	r0, r5
     d20:	bl	a58 <parse_netmask@plt>
     d24:	ldr	r7, [pc, #544]	; f4c <apply_undline+0x248>
     d28:	add	r7, pc, r7
     d2c:	sub	r0, r0, #2
     d30:	cmp	r0, #1
     d34:	bls	d54 <apply_undline+0x50>
     d38:	ldr	r1, [pc, #528]	; f50 <apply_undline+0x24c>
     d3c:	mov	r2, r5
     d40:	mov	r0, r6
     d44:	add	r1, pc, r1
     d48:	bl	b30 <sendto_one_notice@plt>
     d4c:	add	sp, sp, #520	; 0x208
     d50:	pop	{r4, r5, r6, r7, r8, pc}
     d54:	mov	r2, #0
     d58:	mov	r1, #131072	; 0x20000
     d5c:	mov	r0, r5
     d60:	bl	b48 <find_exact_conf_by_address@plt>
     d64:	subs	r4, r0, #0
     d68:	beq	f34 <apply_undline+0x230>
     d6c:	add	r5, sp, #8
     d70:	mov	r2, #512	; 0x200
     d74:	ldr	r1, [r4, #16]
     d78:	mov	r0, r5
     d7c:	bl	b54 <rb_strlcpy@plt>
     d80:	ldr	r3, [pc, #460]	; f54 <apply_undline+0x250>
     d84:	mov	r1, #0
     d88:	mov	ip, r1
     d8c:	ldr	r2, [r7, r3]
     d90:	ldr	r0, [r2, r1]
     d94:	cmp	r0, #0
     d98:	bne	dac <apply_undline+0xa8>
     d9c:	b	e94 <apply_undline+0x190>
     da0:	ldr	r0, [r0, #8]
     da4:	cmp	r0, #0
     da8:	beq	e94 <apply_undline+0x190>
     dac:	ldr	r3, [r0]
     db0:	cmp	r4, r3
     db4:	bne	da0 <apply_undline+0x9c>
     db8:	ldr	r1, [r0, #8]
     dbc:	cmp	r1, #0
     dc0:	lsleq	r3, ip, #1
     dc4:	ldrne	lr, [r0, #4]
     dc8:	addeq	r8, r3, ip
     dcc:	strne	lr, [r1, #4]
     dd0:	ldreq	lr, [r0, #4]
     dd4:	ldrne	lr, [r0, #4]
     dd8:	addeq	r8, r2, r8, lsl #2
     ddc:	lslne	r3, ip, #1
     de0:	streq	lr, [r8, #4]
     de4:	cmp	lr, #0
     de8:	addeq	lr, r3, ip
     dec:	add	ip, r3, ip
     df0:	streq	r1, [r2, lr, lsl #2]
     df4:	add	r2, r2, ip, lsl #2
     df8:	mov	r8, #0
     dfc:	ldr	r3, [r2, #8]
     e00:	strne	r1, [lr, #8]
     e04:	sub	r3, r3, #1
     e08:	str	r8, [r0, #4]
     e0c:	str	r8, [r0, #8]
     e10:	str	r3, [r2, #8]
     e14:	bl	a88 <rb_free_rb_dlink_node@plt>
     e18:	mov	r1, r4
     e1c:	ldr	r0, [r4, #16]
     e20:	bl	af4 <delete_one_address_conf@plt>
     e24:	ldr	r2, [pc, #300]	; f58 <apply_undline+0x254>
     e28:	ldr	r1, [pc, #300]	; f5c <apply_undline+0x258>
     e2c:	add	r3, r6, #88	; 0x58
     e30:	ldr	r2, [r7, r2]
     e34:	add	r1, pc, r1
     e38:	mov	r0, r6
     e3c:	add	r2, r2, #88	; 0x58
     e40:	str	r5, [sp]
     e44:	bl	a34 <sendto_one@plt>
     e48:	mov	r0, r6
     e4c:	bl	a7c <get_oper_name@plt>
     e50:	ldr	r2, [pc, #264]	; f60 <apply_undline+0x25c>
     e54:	mov	r1, r8
     e58:	add	r2, pc, r2
     e5c:	str	r5, [sp]
     e60:	mov	r3, r0
     e64:	mov	r0, #256	; 0x100
     e68:	bl	a64 <sendto_realops_snomask@plt>
     e6c:	mov	r0, r6
     e70:	bl	a7c <get_oper_name@plt>
     e74:	ldr	r1, [pc, #232]	; f64 <apply_undline+0x260>
     e78:	mov	r3, r5
     e7c:	add	r1, pc, r1
     e80:	mov	r2, r0
     e84:	mov	r0, #7
     e88:	bl	b00 <ilog@plt>
     e8c:	add	sp, sp, #520	; 0x208
     e90:	pop	{r4, r5, r6, r7, r8, pc}
     e94:	add	ip, ip, #1
     e98:	cmp	ip, #4
     e9c:	add	r1, r1, #12
     ea0:	bne	d90 <apply_undline+0x8c>
     ea4:	ldr	r1, [r4, #16]
     ea8:	mov	r2, #0
     eac:	mov	r0, #1
     eb0:	bl	b3c <bandb_del@plt>
     eb4:	ldr	r2, [pc, #156]	; f58 <apply_undline+0x254>
     eb8:	ldr	r0, [r4, #16]
     ebc:	ldr	r1, [pc, #164]	; f68 <apply_undline+0x264>
     ec0:	ldr	r2, [r7, r2]
     ec4:	add	r3, r6, #88	; 0x58
     ec8:	add	r1, pc, r1
     ecc:	add	r2, r2, #88	; 0x58
     ed0:	str	r0, [sp]
     ed4:	mov	r0, r6
     ed8:	bl	a34 <sendto_one@plt>
     edc:	mov	r0, r6
     ee0:	bl	a7c <get_oper_name@plt>
     ee4:	ldr	r3, [r4, #16]
     ee8:	ldr	r2, [pc, #124]	; f6c <apply_undline+0x268>
     eec:	str	r3, [sp]
     ef0:	add	r2, pc, r2
     ef4:	mov	r1, #0
     ef8:	mov	r3, r0
     efc:	mov	r0, #256	; 0x100
     f00:	bl	a64 <sendto_realops_snomask@plt>
     f04:	mov	r0, r6
     f08:	bl	a7c <get_oper_name@plt>
     f0c:	ldr	r1, [pc, #92]	; f70 <apply_undline+0x26c>
     f10:	ldr	r3, [r4, #16]
     f14:	add	r1, pc, r1
     f18:	mov	r2, r0
     f1c:	mov	r0, #7
     f20:	bl	b00 <ilog@plt>
     f24:	mov	r1, r4
     f28:	ldr	r0, [r4, #16]
     f2c:	bl	af4 <delete_one_address_conf@plt>
     f30:	b	d4c <apply_undline+0x48>
     f34:	ldr	r1, [pc, #56]	; f74 <apply_undline+0x270>
     f38:	mov	r2, r5
     f3c:	mov	r0, r6
     f40:	add	r1, pc, r1
     f44:	bl	b30 <sendto_one_notice@plt>
     f48:	b	d4c <apply_undline+0x48>
     f4c:	.word	0x000122d0
     f50:	.word	0x00000ea0
     f54:	.word	0x000000a4
     f58:	.word	0x000000b0
     f5c:	.word	0x00000df8
     f60:	.word	0x00000e0c
     f64:	.word	0x00000e18
     f68:	.word	0x00000dd8
     f6c:	.word	0x00000ddc
     f70:	.word	0x00000d80
     f74:	.word	0x00000cd8

00000f78 <mo_undline>:
     f78:	push	{r4, r5, r6, r7, r8, lr}
     f7c:	mov	r4, r2
     f80:	ldr	r2, [r2, #24]
     f84:	sub	sp, sp, #16
     f88:	ldr	r5, [pc, #332]	; 10dc <mo_undline+0x164>
     f8c:	cmp	r2, #0
     f90:	add	r5, pc, r5
     f94:	ldr	r6, [sp, #40]	; 0x28
     f98:	beq	103c <mo_undline+0xc4>
     f9c:	ldr	r0, [r2, #36]	; 0x24
     fa0:	cmp	r0, #0
     fa4:	beq	103c <mo_undline+0xc4>
     fa8:	ldr	r1, [pc, #304]	; 10e0 <mo_undline+0x168>
     fac:	mov	r7, r3
     fb0:	add	r1, pc, r1
     fb4:	bl	b6c <privilegeset_in_set@plt>
     fb8:	cmp	r0, #0
     fbc:	beq	103c <mo_undline+0xc4>
     fc0:	cmp	r7, #3
     fc4:	ldr	r7, [r6, #4]
     fc8:	ble	1070 <mo_undline+0xf8>
     fcc:	ldr	r1, [pc, #272]	; 10e4 <mo_undline+0x16c>
     fd0:	ldr	r0, [r6, #8]
     fd4:	add	r1, pc, r1
     fd8:	bl	b78 <irccmp@plt>
     fdc:	subs	r8, r0, #0
     fe0:	bne	1070 <mo_undline+0xf8>
     fe4:	ldr	r2, [r4, #24]
     fe8:	cmp	r2, #0
     fec:	beq	1010 <mo_undline+0x98>
     ff0:	ldr	r0, [r2, #36]	; 0x24
     ff4:	cmp	r0, #0
     ff8:	beq	1010 <mo_undline+0x98>
     ffc:	ldr	r1, [pc, #228]	; 10e8 <mo_undline+0x170>
    1000:	add	r1, pc, r1
    1004:	bl	b6c <privilegeset_in_set@plt>
    1008:	cmp	r0, #0
    100c:	bne	1084 <mo_undline+0x10c>
    1010:	ldr	r2, [pc, #212]	; 10ec <mo_undline+0x174>
    1014:	ldr	r1, [pc, #212]	; 10f0 <mo_undline+0x178>
    1018:	add	r3, r4, #88	; 0x58
    101c:	add	r1, pc, r1
    1020:	ldr	r2, [r5, r2]
    1024:	str	r1, [sp, #40]	; 0x28
    1028:	ldr	r1, [pc, #196]	; 10f4 <mo_undline+0x17c>
    102c:	mov	r0, r4
    1030:	add	r2, r2, #88	; 0x58
    1034:	add	r1, pc, r1
    1038:	b	1064 <mo_undline+0xec>
    103c:	ldr	r2, [pc, #168]	; 10ec <mo_undline+0x174>
    1040:	ldr	r1, [pc, #176]	; 10f8 <mo_undline+0x180>
    1044:	add	r3, r4, #88	; 0x58
    1048:	add	r1, pc, r1
    104c:	ldr	r2, [r5, r2]
    1050:	str	r1, [sp, #40]	; 0x28
    1054:	ldr	r1, [pc, #160]	; 10fc <mo_undline+0x184>
    1058:	mov	r0, r4
    105c:	add	r2, r2, #88	; 0x58
    1060:	add	r1, pc, r1
    1064:	add	sp, sp, #16
    1068:	pop	{r4, r5, r6, r7, r8, lr}
    106c:	b	a34 <sendto_one@plt>
    1070:	mov	r1, r7
    1074:	mov	r0, r4
    1078:	add	sp, sp, #16
    107c:	pop	{r4, r5, r6, r7, r8, lr}
    1080:	b	d04 <apply_undline>
    1084:	ldr	r3, [pc, #116]	; 1100 <mo_undline+0x188>
    1088:	ldr	r0, [pc, #116]	; 1104 <mo_undline+0x18c>
    108c:	ldr	r6, [r6, #12]
    1090:	ldr	r2, [r5, r3]
    1094:	add	r0, pc, r0
    1098:	mov	r3, r8
    109c:	str	r6, [sp, #4]
    10a0:	mov	r1, r6
    10a4:	ldr	r2, [r2]
    10a8:	str	r0, [sp]
    10ac:	str	r7, [sp, #8]
    10b0:	mov	r0, r4
    10b4:	bl	a10 <sendto_match_servs@plt>
    10b8:	ldr	r3, [pc, #44]	; 10ec <mo_undline+0x174>
    10bc:	mov	r0, r6
    10c0:	ldr	r1, [r5, r3]
    10c4:	add	r1, r1, #88	; 0x58
    10c8:	bl	b0c <match@plt>
    10cc:	cmp	r0, #0
    10d0:	bne	1070 <mo_undline+0xf8>
    10d4:	add	sp, sp, #16
    10d8:	pop	{r4, r5, r6, r7, r8, pc}
    10dc:	.word	0x00012068
    10e0:	.word	0x00000d70
    10e4:	.word	0x00000d58
    10e8:	.word	0x00000d3c
    10ec:	.word	0x000000b0
    10f0:	.word	0x00000d14
    10f4:	.word	0x00000cbc
    10f8:	.word	0x00000cd0
    10fc:	.word	0x00000c90
    1100:	.word	0x000000b4
    1104:	.word	0x00000cb8

00001108 <me_undline>:
    1108:	ldrh	r3, [r2, #80]	; 0x50
    110c:	push	{r4, r5, r6, lr}
    1110:	cmp	r3, #64	; 0x40
    1114:	ldr	r5, [sp, #16]
    1118:	popne	{r4, r5, r6, pc}
    111c:	ldr	r3, [r2, #24]
    1120:	cmp	r3, #0
    1124:	popeq	{r4, r5, r6, pc}
    1128:	mov	r4, r2
    112c:	ldr	r2, [r2, #32]
    1130:	mov	r3, #8192	; 0x2000
    1134:	add	r2, r2, #88	; 0x58
    1138:	add	r1, r4, #163	; 0xa3
    113c:	add	r0, r4, #152	; 0x98
    1140:	bl	b60 <find_shared_conf@plt>
    1144:	cmp	r0, #0
    1148:	popeq	{r4, r5, r6, pc}
    114c:	ldr	r1, [r5, #4]
    1150:	mov	r0, r4
    1154:	pop	{r4, r5, r6, lr}
    1158:	b	d04 <apply_undline>

0000115c <apply_dline>:
    115c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1160:	sub	sp, sp, #164	; 0xa4
    1164:	add	sl, sp, #32
    1168:	mov	r8, r1
    116c:	mov	r4, r0
    1170:	mov	r9, r2
    1174:	mov	r0, r1
    1178:	add	r2, sp, #24
    117c:	mov	r1, sl
    1180:	mov	r7, r3
    1184:	bl	9f8 <parse_netmask_strict@plt>
    1188:	ldr	r6, [pc, #1484]	; 175c <apply_dline+0x600>
    118c:	add	r6, pc, r6
    1190:	sub	r3, r0, #2
    1194:	cmp	r3, #1
    1198:	bls	11c4 <apply_dline+0x68>
    119c:	ldr	r2, [pc, #1468]	; 1760 <apply_dline+0x604>
    11a0:	ldr	r1, [pc, #1468]	; 1764 <apply_dline+0x608>
    11a4:	add	r3, r4, #88	; 0x58
    11a8:	ldr	r2, [r6, r2]
    11ac:	mov	r0, r4
    11b0:	add	r1, pc, r1
    11b4:	add	r2, r2, #88	; 0x58
    11b8:	bl	a34 <sendto_one@plt>
    11bc:	add	sp, sp, #164	; 0xa4
    11c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    11c4:	ldr	r3, [r4, #24]
    11c8:	cmp	r0, #3
    11cc:	movne	r5, #2
    11d0:	moveq	r5, #10
    11d4:	cmp	r3, #0
    11d8:	beq	13e4 <apply_dline+0x288>
    11dc:	ldr	r0, [r3, #36]	; 0x24
    11e0:	cmp	r0, #0
    11e4:	beq	13e4 <apply_dline+0x288>
    11e8:	ldr	r1, [pc, #1400]	; 1768 <apply_dline+0x60c>
    11ec:	add	r1, pc, r1
    11f0:	bl	b6c <privilegeset_in_set@plt>
    11f4:	cmp	r0, #0
    11f8:	bne	1228 <apply_dline+0xcc>
    11fc:	ldr	r3, [r4, #24]
    1200:	cmp	r3, #0
    1204:	beq	13e4 <apply_dline+0x288>
    1208:	ldr	r0, [r3, #36]	; 0x24
    120c:	cmp	r0, #0
    1210:	beq	13e4 <apply_dline+0x288>
    1214:	ldr	r1, [pc, #1360]	; 176c <apply_dline+0x610>
    1218:	add	r1, pc, r1
    121c:	bl	b6c <privilegeset_in_set@plt>
    1220:	cmp	r0, #0
    1224:	beq	13e4 <apply_dline+0x288>
    1228:	ldr	r3, [sp, #24]
    122c:	cmp	r3, #7
    1230:	ble	1494 <apply_dline+0x338>
    1234:	ldr	r3, [pc, #1332]	; 1770 <apply_dline+0x614>
    1238:	ldr	r3, [r6, r3]
    123c:	ldr	r3, [r3, #140]	; 0x8c
    1240:	cmp	r3, #0
    1244:	bne	1404 <apply_dline+0x2a8>
    1248:	bl	aac <rb_set_time@plt>
    124c:	bl	9ec <make_conf@plt>
    1250:	mov	r3, #131072	; 0x20000
    1254:	str	r3, [r0]
    1258:	mov	r5, r0
    125c:	bl	a04 <rb_current_time@plt>
    1260:	str	r0, [r5, #40]	; 0x28
    1264:	mov	r0, r8
    1268:	bl	adc <strlen@plt>
    126c:	add	sl, r0, #1
    1270:	mov	r0, sl
    1274:	bl	ab8 <malloc@plt>
    1278:	subs	fp, r0, #0
    127c:	beq	1574 <apply_dline+0x418>
    1280:	mov	r2, sl
    1284:	mov	r1, r8
    1288:	bl	a40 <memcpy@plt>
    128c:	str	fp, [r5, #16]
    1290:	mov	r0, r7
    1294:	bl	adc <strlen@plt>
    1298:	add	r8, r0, #1
    129c:	mov	r0, r8
    12a0:	bl	ab8 <malloc@plt>
    12a4:	subs	sl, r0, #0
    12a8:	beq	1574 <apply_dline+0x418>
    12ac:	mov	r2, r8
    12b0:	mov	r1, r7
    12b4:	bl	a40 <memcpy@plt>
    12b8:	str	sl, [r5, #20]
    12bc:	mov	r0, r4
    12c0:	bl	a7c <get_oper_name@plt>
    12c4:	bl	a94 <operhash_add@plt>
    12c8:	str	r0, [r5, #12]
    12cc:	mov	r0, r7
    12d0:	bl	adc <strlen@plt>
    12d4:	ldr	r3, [pc, #1176]	; 1774 <apply_dline+0x618>
    12d8:	mov	r1, #124	; 0x7c
    12dc:	cmp	r0, r3
    12e0:	movhi	r3, #0
    12e4:	strbhi	r3, [r7, #390]	; 0x186
    12e8:	mov	r0, r7
    12ec:	bl	ae8 <strchr@plt>
    12f0:	subs	sl, r0, #0
    12f4:	beq	14a8 <apply_dline+0x34c>
    12f8:	mov	r8, sl
    12fc:	mov	r3, #0
    1300:	strb	r3, [r8], #1
    1304:	cmp	r8, r3
    1308:	beq	14a8 <apply_dline+0x34c>
    130c:	ldrb	r3, [sl, #1]
    1310:	cmp	r3, #0
    1314:	bne	1554 <apply_dline+0x3f8>
    1318:	cmp	r9, #0
    131c:	ble	1630 <apply_dline+0x4d4>
    1320:	bl	a04 <rb_current_time@plt>
    1324:	add	r0, r9, r0
    1328:	str	r0, [r5, #36]	; 0x24
    132c:	mov	r0, r5
    1330:	bl	aa0 <add_temp_dline@plt>
    1334:	ldrb	r3, [sl, #1]
    1338:	cmp	r3, #0
    133c:	bne	1590 <apply_dline+0x434>
    1340:	mov	r0, r4
    1344:	bl	a7c <get_oper_name@plt>
    1348:	ldr	r3, [pc, #1064]	; 1778 <apply_dline+0x61c>
    134c:	asr	r2, r9, #31
    1350:	str	r7, [sp, #8]
    1354:	smull	r1, r3, r3, r9
    1358:	ldr	r1, [r5, #16]
    135c:	add	r9, r3, r9
    1360:	str	r1, [sp, #4]
    1364:	rsb	r9, r2, r9, asr #5
    1368:	ldr	r2, [pc, #1036]	; 177c <apply_dline+0x620>
    136c:	mov	r1, #0
    1370:	add	r2, pc, r2
    1374:	str	r9, [sp]
    1378:	mov	r3, r0
    137c:	mov	r0, #256	; 0x100
    1380:	bl	a64 <sendto_realops_snomask@plt>
    1384:	mov	r0, r4
    1388:	bl	a7c <get_oper_name@plt>
    138c:	str	r7, [sp, #4]
    1390:	ldr	r1, [pc, #1000]	; 1780 <apply_dline+0x624>
    1394:	ldr	r2, [r5, #16]
    1398:	mov	r3, r9
    139c:	str	r2, [sp]
    13a0:	add	r1, pc, r1
    13a4:	mov	r2, r0
    13a8:	mov	r0, #7
    13ac:	bl	b00 <ilog@plt>
    13b0:	ldr	r2, [pc, #936]	; 1760 <apply_dline+0x604>
    13b4:	ldr	r1, [r5, #16]
    13b8:	add	r3, r4, #88	; 0x58
    13bc:	ldr	r2, [r6, r2]
    13c0:	str	r1, [sp, #4]
    13c4:	ldr	r1, [pc, #952]	; 1784 <apply_dline+0x628>
    13c8:	mov	r0, r4
    13cc:	add	r2, r2, #88	; 0x58
    13d0:	str	r9, [sp]
    13d4:	add	r1, pc, r1
    13d8:	bl	a34 <sendto_one@plt>
    13dc:	add	sp, sp, #164	; 0xa4
    13e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    13e4:	ldr	r3, [sp, #24]
    13e8:	cmp	r3, #15
    13ec:	bgt	1234 <apply_dline+0xd8>
    13f0:	ldr	r1, [pc, #912]	; 1788 <apply_dline+0x62c>
    13f4:	mov	r0, r4
    13f8:	add	r1, pc, r1
    13fc:	bl	b30 <sendto_one_notice@plt>
    1400:	b	11bc <apply_dline+0x60>
    1404:	mov	r1, r5
    1408:	mov	r0, sl
    140c:	bl	b84 <find_dline@plt>
    1410:	subs	r5, r0, #0
    1414:	beq	1248 <apply_dline+0xec>
    1418:	add	r2, sp, #28
    141c:	mov	r1, #0
    1420:	ldr	r0, [r5, #16]
    1424:	bl	9f8 <parse_netmask_strict@plt>
    1428:	cmp	r0, #0
    142c:	beq	1248 <apply_dline+0xec>
    1430:	ldr	r2, [sp, #24]
    1434:	ldr	r3, [sp, #28]
    1438:	cmp	r2, r3
    143c:	blt	1248 <apply_dline+0xec>
    1440:	ldr	r3, [r5, #20]
    1444:	ldr	r1, [pc, #832]	; 178c <apply_dline+0x630>
    1448:	ldr	r2, [pc, #784]	; 1760 <apply_dline+0x604>
    144c:	cmp	r3, #0
    1450:	add	r1, pc, r1
    1454:	movne	r1, r3
    1458:	ldr	r3, [r5, #4]
    145c:	ldr	r2, [r6, r2]
    1460:	str	r1, [sp, #8]
    1464:	ldr	r1, [r5, #16]
    1468:	tst	r3, #64	; 0x40
    146c:	mov	r0, r4
    1470:	add	r3, r4, #88	; 0x58
    1474:	add	r2, r2, #88	; 0x58
    1478:	str	r1, [sp, #4]
    147c:	str	r8, [sp]
    1480:	beq	1608 <apply_dline+0x4ac>
    1484:	ldr	r1, [pc, #772]	; 1790 <apply_dline+0x634>
    1488:	add	r1, pc, r1
    148c:	bl	a34 <sendto_one@plt>
    1490:	b	11bc <apply_dline+0x60>
    1494:	ldr	r1, [pc, #760]	; 1794 <apply_dline+0x638>
    1498:	mov	r0, r4
    149c:	add	r1, pc, r1
    14a0:	bl	b30 <sendto_one_notice@plt>
    14a4:	b	11bc <apply_dline+0x60>
    14a8:	cmp	r9, #0
    14ac:	bgt	1618 <apply_dline+0x4bc>
    14b0:	mov	r3, #0
    14b4:	ldr	r0, [r5, #16]
    14b8:	mov	r2, r3
    14bc:	mov	r1, #131072	; 0x20000
    14c0:	str	r5, [sp]
    14c4:	bl	ac4 <add_conf_by_address@plt>
    14c8:	ldr	r1, [r5, #24]
    14cc:	ldr	r2, [r5, #16]
    14d0:	cmp	r1, #0
    14d4:	beq	16d0 <apply_dline+0x574>
    14d8:	ldrb	r3, [r1]
    14dc:	cmp	r3, #0
    14e0:	beq	1720 <apply_dline+0x5c4>
    14e4:	mov	r3, #0
    14e8:	str	r1, [sp, #4]
    14ec:	str	r7, [sp]
    14f0:	str	r3, [sp, #8]
    14f4:	mov	r1, r4
    14f8:	mov	r0, #1
    14fc:	bl	a70 <bandb_add@plt>
    1500:	mov	r0, r4
    1504:	bl	a7c <get_oper_name@plt>
    1508:	str	r7, [sp, #4]
    150c:	ldr	r2, [pc, #644]	; 1798 <apply_dline+0x63c>
    1510:	ldr	r3, [r5, #16]
    1514:	add	r2, pc, r2
    1518:	str	r3, [sp]
    151c:	mov	r1, #0
    1520:	mov	r3, r0
    1524:	mov	r0, #256	; 0x100
    1528:	bl	a64 <sendto_realops_snomask@plt>
    152c:	mov	r0, r4
    1530:	bl	a7c <get_oper_name@plt>
    1534:	ldr	r1, [pc, #608]	; 179c <apply_dline+0x640>
    1538:	ldr	r3, [r5, #16]
    153c:	add	r1, pc, r1
    1540:	str	r7, [sp]
    1544:	mov	r2, r0
    1548:	mov	r0, #7
    154c:	bl	b00 <ilog@plt>
    1550:	b	11bc <apply_dline+0x60>
    1554:	mov	r0, r8
    1558:	bl	adc <strlen@plt>
    155c:	add	fp, r0, #1
    1560:	mov	r0, fp
    1564:	bl	ab8 <malloc@plt>
    1568:	subs	r3, r0, #0
    156c:	str	r3, [sp, #20]
    1570:	bne	1578 <apply_dline+0x41c>
    1574:	bl	a4c <rb_outofmemory@plt>
    1578:	mov	r2, fp
    157c:	mov	r1, r8
    1580:	bl	a40 <memcpy@plt>
    1584:	ldr	r3, [sp, #20]
    1588:	str	r3, [r5, #24]
    158c:	b	1318 <apply_dline+0x1bc>
    1590:	mov	r0, r4
    1594:	bl	a7c <get_oper_name@plt>
    1598:	ldr	r3, [pc, #472]	; 1778 <apply_dline+0x61c>
    159c:	str	r8, [sp, #12]
    15a0:	str	r7, [sp, #8]
    15a4:	smull	r2, r3, r3, r9
    15a8:	ldr	r2, [r5, #16]
    15ac:	add	r3, r3, r9
    15b0:	str	r2, [sp, #4]
    15b4:	asr	r9, r9, #31
    15b8:	ldr	r2, [pc, #480]	; 17a0 <apply_dline+0x644>
    15bc:	rsb	r9, r9, r3, asr #5
    15c0:	add	r2, pc, r2
    15c4:	mov	r1, #0
    15c8:	str	r9, [sp]
    15cc:	mov	r3, r0
    15d0:	mov	r0, #256	; 0x100
    15d4:	bl	a64 <sendto_realops_snomask@plt>
    15d8:	mov	r0, r4
    15dc:	bl	a7c <get_oper_name@plt>
    15e0:	stmib	sp, {r7, r8}
    15e4:	ldr	r1, [pc, #440]	; 17a4 <apply_dline+0x648>
    15e8:	ldr	r2, [r5, #16]
    15ec:	mov	r3, r9
    15f0:	str	r2, [sp]
    15f4:	add	r1, pc, r1
    15f8:	mov	r2, r0
    15fc:	mov	r0, #7
    1600:	bl	b00 <ilog@plt>
    1604:	b	13b0 <apply_dline+0x254>
    1608:	ldr	r1, [pc, #408]	; 17a8 <apply_dline+0x64c>
    160c:	add	r1, pc, r1
    1610:	bl	a34 <sendto_one@plt>
    1614:	b	11bc <apply_dline+0x60>
    1618:	bl	a04 <rb_current_time@plt>
    161c:	add	r0, r9, r0
    1620:	str	r0, [r5, #36]	; 0x24
    1624:	mov	r0, r5
    1628:	bl	aa0 <add_temp_dline@plt>
    162c:	b	1340 <apply_dline+0x1e4>
    1630:	mov	r3, #0
    1634:	mov	r2, r3
    1638:	ldr	r0, [r5, #16]
    163c:	mov	r1, #131072	; 0x20000
    1640:	str	r5, [sp]
    1644:	bl	ac4 <add_conf_by_address@plt>
    1648:	ldr	r3, [r5, #24]
    164c:	ldr	r2, [r5, #16]
    1650:	cmp	r3, #0
    1654:	bne	16f0 <apply_dline+0x594>
    1658:	str	r3, [sp, #8]
    165c:	str	r3, [sp, #4]
    1660:	str	r7, [sp]
    1664:	mov	r1, r4
    1668:	mov	r0, #1
    166c:	bl	a70 <bandb_add@plt>
    1670:	ldrb	r3, [sl, #1]
    1674:	cmp	r3, #0
    1678:	beq	1500 <apply_dline+0x3a4>
    167c:	mov	r0, r4
    1680:	bl	a7c <get_oper_name@plt>
    1684:	stmib	sp, {r7, r8}
    1688:	ldr	r2, [pc, #284]	; 17ac <apply_dline+0x650>
    168c:	ldr	r3, [r5, #16]
    1690:	add	r2, pc, r2
    1694:	str	r3, [sp]
    1698:	mov	r1, #0
    169c:	mov	r3, r0
    16a0:	mov	r0, #256	; 0x100
    16a4:	bl	a64 <sendto_realops_snomask@plt>
    16a8:	mov	r0, r4
    16ac:	bl	a7c <get_oper_name@plt>
    16b0:	ldr	r1, [pc, #248]	; 17b0 <apply_dline+0x654>
    16b4:	ldr	r3, [r5, #16]
    16b8:	add	r1, pc, r1
    16bc:	stm	sp, {r7, r8}
    16c0:	mov	r2, r0
    16c4:	mov	r0, #7
    16c8:	bl	b00 <ilog@plt>
    16cc:	b	11bc <apply_dline+0x60>
    16d0:	str	r1, [sp, #8]
    16d4:	str	r1, [sp, #4]
    16d8:	mov	r3, r1
    16dc:	str	r7, [sp]
    16e0:	mov	r1, r4
    16e4:	mov	r0, #1
    16e8:	bl	a70 <bandb_add@plt>
    16ec:	b	1500 <apply_dline+0x3a4>
    16f0:	ldrb	r1, [r3]
    16f4:	cmp	r1, #0
    16f8:	beq	173c <apply_dline+0x5e0>
    16fc:	mov	r1, #0
    1700:	str	r3, [sp, #4]
    1704:	str	r1, [sp, #8]
    1708:	mov	r3, r1
    170c:	str	r7, [sp]
    1710:	mov	r1, r4
    1714:	mov	r0, #1
    1718:	bl	a70 <bandb_add@plt>
    171c:	b	1670 <apply_dline+0x514>
    1720:	str	r3, [sp, #8]
    1724:	str	r3, [sp, #4]
    1728:	str	r7, [sp]
    172c:	mov	r1, r4
    1730:	mov	r0, #1
    1734:	bl	a70 <bandb_add@plt>
    1738:	b	1500 <apply_dline+0x3a4>
    173c:	str	r1, [sp, #8]
    1740:	str	r1, [sp, #4]
    1744:	mov	r3, r1
    1748:	str	r7, [sp]
    174c:	mov	r1, r4
    1750:	mov	r0, #1
    1754:	bl	a70 <bandb_add@plt>
    1758:	b	1670 <apply_dline+0x514>
    175c:	.word	0x00011e6c
    1760:	.word	0x000000b0
    1764:	.word	0x00000bbc
    1768:	.word	0x00000ba0
    176c:	.word	0x00000b80
    1770:	.word	0x000000b8
    1774:	.word	0x00000186
    1778:	.word	0x88888889
    177c:	.word	0x00000b0c
    1780:	.word	0x00000b0c
    1784:	.word	0x00000b30
    1788:	.word	0x000009ec
    178c:	.word	0x00000910
    1790:	.word	0x00000990
    1794:	.word	0x00000910
    1798:	.word	0x00000a28
    179c:	.word	0x00000a20
    17a0:	.word	0x000008fc
    17a4:	.word	0x000008fc
    17a8:	.word	0x0000083c
    17ac:	.word	0x000008dc
    17b0:	.word	0x000008d8

000017b4 <mo_dline>:
    17b4:	ldr	r1, [pc, #768]	; 1abc <mo_dline+0x308>
    17b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    17bc:	add	r1, pc, r1
    17c0:	mov	r4, r2
    17c4:	add	fp, sp, #32
    17c8:	sub	sp, sp, #132	; 0x84
    17cc:	ldm	r1, {r0, r1, r2}
    17d0:	sub	r6, fp, #112	; 0x70
    17d4:	ldr	lr, [r4, #24]
    17d8:	mov	ip, r6
    17dc:	ldr	r5, [pc, #732]	; 1ac0 <mo_dline+0x30c>
    17e0:	cmp	lr, #0
    17e4:	stmia	ip!, {r0, r1}
    17e8:	add	r5, pc, r5
    17ec:	strh	r2, [ip]
    17f0:	beq	1818 <mo_dline+0x64>
    17f4:	ldr	r0, [lr, #36]	; 0x24
    17f8:	cmp	r0, #0
    17fc:	beq	1818 <mo_dline+0x64>
    1800:	ldr	r1, [pc, #700]	; 1ac4 <mo_dline+0x310>
    1804:	mov	r7, r3
    1808:	add	r1, pc, r1
    180c:	bl	b6c <privilegeset_in_set@plt>
    1810:	cmp	r0, #0
    1814:	bne	184c <mo_dline+0x98>
    1818:	ldr	r2, [pc, #680]	; 1ac8 <mo_dline+0x314>
    181c:	ldr	r1, [pc, #680]	; 1acc <mo_dline+0x318>
    1820:	add	r3, r4, #88	; 0x58
    1824:	add	r1, pc, r1
    1828:	ldr	r2, [r5, r2]
    182c:	str	r1, [sp]
    1830:	ldr	r1, [pc, #664]	; 1ad0 <mo_dline+0x31c>
    1834:	mov	r0, r4
    1838:	add	r2, r2, #88	; 0x58
    183c:	add	r1, pc, r1
    1840:	bl	a34 <sendto_one@plt>
    1844:	sub	sp, fp, #32
    1848:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    184c:	ldr	r3, [fp, #4]
    1850:	ldr	r0, [r3, #4]
    1854:	bl	b18 <valid_temp_time@plt>
    1858:	subs	sl, r0, #0
    185c:	blt	19d4 <mo_dline+0x220>
    1860:	mov	r3, #20
    1864:	str	r3, [fp, #-136]	; 0xffffff78
    1868:	mov	r3, #5
    186c:	str	r3, [fp, #-132]	; 0xffffff7c
    1870:	mov	r3, #16
    1874:	str	r3, [fp, #-128]	; 0xffffff80
    1878:	mov	r3, #4
    187c:	str	r3, [fp, #-120]	; 0xffffff88
    1880:	mov	r3, #3
    1884:	str	r3, [fp, #-124]	; 0xffffff84
    1888:	mov	r9, #12
    188c:	mov	r3, #8
    1890:	ldr	r2, [fp, #4]
    1894:	sub	r0, fp, #100	; 0x64
    1898:	ldr	r8, [r2, r3]
    189c:	mov	r2, #64	; 0x40
    18a0:	mov	r1, r8
    18a4:	bl	b54 <rb_strlcpy@plt>
    18a8:	ldrb	r3, [r8]
    18ac:	cmp	r3, #58	; 0x3a
    18b0:	beq	19bc <mo_dline+0x208>
    18b4:	mov	r2, #0
    18b8:	mov	r1, r2
    18bc:	mov	r0, r8
    18c0:	bl	9f8 <parse_netmask_strict@plt>
    18c4:	sub	r0, r0, #2
    18c8:	cmp	r0, #1
    18cc:	bls	18e8 <mo_dline+0x134>
    18d0:	ldr	r1, [pc, #508]	; 1ad4 <mo_dline+0x320>
    18d4:	mov	r2, r8
    18d8:	mov	r0, r4
    18dc:	add	r1, pc, r1
    18e0:	bl	b30 <sendto_one_notice@plt>
    18e4:	b	1844 <mo_dline+0x90>
    18e8:	ldr	r3, [fp, #-120]	; 0xffffff88
    18ec:	cmp	r7, r3
    18f0:	bgt	1a04 <mo_dline+0x250>
    18f4:	ldr	r3, [fp, #-124]	; 0xffffff84
    18f8:	cmp	r7, r3
    18fc:	ble	19a0 <mo_dline+0x1ec>
    1900:	ldr	r3, [fp, #4]
    1904:	add	r9, r3, r9
    1908:	ldr	r9, [r9]
    190c:	cmp	r9, #0
    1910:	beq	19a0 <mo_dline+0x1ec>
    1914:	ldrb	r3, [r9]
    1918:	cmp	r3, #0
    191c:	movne	r7, #0
    1920:	beq	19a0 <mo_dline+0x1ec>
    1924:	mov	r0, r9
    1928:	bl	adc <strlen@plt>
    192c:	mov	r1, r9
    1930:	add	r3, r0, #15
    1934:	bic	r3, r3, #7
    1938:	sub	sp, sp, r3
    193c:	add	r6, sp, #24
    1940:	add	r2, r0, #1
    1944:	mov	r0, r6
    1948:	bl	a40 <memcpy@plt>
    194c:	cmp	r7, #0
    1950:	beq	19a0 <mo_dline+0x1ec>
    1954:	ldr	r2, [pc, #380]	; 1ad8 <mo_dline+0x324>
    1958:	ldr	r0, [pc, #380]	; 1adc <mo_dline+0x328>
    195c:	mov	r3, #0
    1960:	ldr	r2, [r5, r2]
    1964:	add	r0, pc, r0
    1968:	mov	r1, r7
    196c:	str	r6, [sp, #16]
    1970:	ldr	r2, [r2]
    1974:	stm	sp, {r0, r7, sl}
    1978:	mov	r0, r4
    197c:	str	r8, [sp, #12]
    1980:	bl	a10 <sendto_match_servs@plt>
    1984:	ldr	r3, [pc, #316]	; 1ac8 <mo_dline+0x314>
    1988:	mov	r0, r7
    198c:	ldr	r1, [r5, r3]
    1990:	add	r1, r1, #88	; 0x58
    1994:	bl	b0c <match@plt>
    1998:	cmp	r0, #0
    199c:	beq	1844 <mo_dline+0x90>
    19a0:	mov	r3, r6
    19a4:	mov	r2, sl
    19a8:	mov	r1, r8
    19ac:	mov	r0, r4
    19b0:	bl	115c <apply_dline>
    19b4:	bl	b24 <check_dlines@plt>
    19b8:	b	1844 <mo_dline+0x90>
    19bc:	ldr	r1, [pc, #284]	; 1ae0 <mo_dline+0x32c>
    19c0:	mov	r2, r8
    19c4:	mov	r0, r4
    19c8:	add	r1, pc, r1
    19cc:	bl	b30 <sendto_one_notice@plt>
    19d0:	b	1844 <mo_dline+0x90>
    19d4:	mov	r2, #16
    19d8:	str	r2, [fp, #-136]	; 0xffffff78
    19dc:	mov	r2, #12
    19e0:	str	r2, [fp, #-128]	; 0xffffff80
    19e4:	mov	r2, #3
    19e8:	mov	r3, #4
    19ec:	str	r2, [fp, #-120]	; 0xffffff88
    19f0:	mov	r2, #2
    19f4:	str	r3, [fp, #-132]	; 0xffffff7c
    19f8:	mov	r9, #8
    19fc:	str	r2, [fp, #-124]	; 0xffffff84
    1a00:	b	1890 <mo_dline+0xdc>
    1a04:	ldr	r3, [fp, #4]
    1a08:	ldr	r1, [pc, #212]	; 1ae4 <mo_dline+0x330>
    1a0c:	ldr	r0, [r3, r9]
    1a10:	add	r1, pc, r1
    1a14:	bl	b78 <irccmp@plt>
    1a18:	ldr	r3, [fp, #4]
    1a1c:	add	r9, r3, r9
    1a20:	cmp	r0, #0
    1a24:	bne	1908 <mo_dline+0x154>
    1a28:	ldr	r3, [r4, #24]
    1a2c:	cmp	r3, #0
    1a30:	beq	1a8c <mo_dline+0x2d8>
    1a34:	ldr	r0, [r3, #36]	; 0x24
    1a38:	cmp	r0, #0
    1a3c:	beq	1a8c <mo_dline+0x2d8>
    1a40:	ldr	r1, [pc, #160]	; 1ae8 <mo_dline+0x334>
    1a44:	add	r1, pc, r1
    1a48:	bl	b6c <privilegeset_in_set@plt>
    1a4c:	cmp	r0, #0
    1a50:	beq	1a8c <mo_dline+0x2d8>
    1a54:	ldr	r3, [fp, #-132]	; 0xffffff7c
    1a58:	ldr	r2, [fp, #-128]	; 0xffffff80
    1a5c:	cmp	r7, r3
    1a60:	ldr	r3, [fp, #4]
    1a64:	ldr	r7, [r3, r2]
    1a68:	ble	194c <mo_dline+0x198>
    1a6c:	ldr	r2, [fp, #-136]	; 0xffffff78
    1a70:	ldr	r9, [r3, r2]
    1a74:	cmp	r9, #0
    1a78:	beq	194c <mo_dline+0x198>
    1a7c:	ldrb	r3, [r9]
    1a80:	cmp	r3, #0
    1a84:	beq	194c <mo_dline+0x198>
    1a88:	b	1924 <mo_dline+0x170>
    1a8c:	ldr	r2, [pc, #52]	; 1ac8 <mo_dline+0x314>
    1a90:	ldr	r1, [pc, #84]	; 1aec <mo_dline+0x338>
    1a94:	add	r3, r4, #88	; 0x58
    1a98:	add	r1, pc, r1
    1a9c:	ldr	r2, [r5, r2]
    1aa0:	str	r1, [sp]
    1aa4:	ldr	r1, [pc, #68]	; 1af0 <mo_dline+0x33c>
    1aa8:	mov	r0, r4
    1aac:	add	r2, r2, #88	; 0x58
    1ab0:	add	r1, pc, r1
    1ab4:	bl	a34 <sendto_one@plt>
    1ab8:	b	1844 <mo_dline+0x90>
    1abc:	.word	0x00000838
    1ac0:	.word	0x00011810
    1ac4:	.word	0x00000518
    1ac8:	.word	0x000000b0
    1acc:	.word	0x0000077c
    1ad0:	.word	0x000004b4
    1ad4:	.word	0x00000308
    1ad8:	.word	0x000000b4
    1adc:	.word	0x00000674
    1ae0:	.word	0x000005e0
    1ae4:	.word	0x0000031c
    1ae8:	.word	0x000002f8
    1aec:	.word	0x00000298
    1af0:	.word	0x00000240

00001af4 <me_dline>:
    1af4:	push	{r4, r5, r6, r7, fp, lr}
    1af8:	add	fp, sp, #20
    1afc:	mov	r4, r2
    1b00:	ldr	r5, [fp, #4]
    1b04:	mov	r1, #0
    1b08:	mov	r2, #10
    1b0c:	ldr	r0, [r5, #4]
    1b10:	bl	a28 <strtol@plt>
    1b14:	ldrh	r3, [r4, #80]	; 0x50
    1b18:	cmp	r3, #64	; 0x40
    1b1c:	beq	1b28 <me_dline+0x34>
    1b20:	sub	sp, fp, #20
    1b24:	pop	{r4, r5, r6, r7, fp, pc}
    1b28:	ldr	r3, [r4, #24]
    1b2c:	cmp	r3, #0
    1b30:	beq	1b20 <me_dline+0x2c>
    1b34:	ldr	r2, [r4, #32]
    1b38:	cmp	r0, #0
    1b3c:	movgt	r3, #2048	; 0x800
    1b40:	movle	r3, #4096	; 0x1000
    1b44:	mov	r6, r0
    1b48:	add	r2, r2, #88	; 0x58
    1b4c:	add	r1, r4, #163	; 0xa3
    1b50:	add	r0, r4, #152	; 0x98
    1b54:	bl	b60 <find_shared_conf@plt>
    1b58:	cmp	r0, #0
    1b5c:	beq	1b20 <me_dline+0x2c>
    1b60:	ldr	r7, [r5, #12]
    1b64:	ldr	r5, [r5, #8]
    1b68:	mov	r0, r7
    1b6c:	bl	adc <strlen@plt>
    1b70:	mov	r1, r7
    1b74:	add	r3, r0, #15
    1b78:	bic	r3, r3, #7
    1b7c:	sub	sp, sp, r3
    1b80:	add	r2, r0, #1
    1b84:	mov	r0, sp
    1b88:	bl	a40 <memcpy@plt>
    1b8c:	mov	r2, r6
    1b90:	mov	r1, r5
    1b94:	mov	r3, r0
    1b98:	mov	r0, r4
    1b9c:	bl	115c <apply_dline>
    1ba0:	bl	b24 <check_dlines@plt>
    1ba4:	sub	sp, fp, #20
    1ba8:	pop	{r4, r5, r6, r7, fp, pc}

Disassembly of section .fini:

00001bac <_fini>:
    1bac:	push	{r3, lr}
    1bb0:	pop	{r3, pc}
