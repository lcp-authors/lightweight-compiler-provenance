
../repos/prog2/MT2E2-1:     file format elf32-littlearm


Disassembly of section .init:

00010eb0 <.init>:
   10eb0:	push	{r3, lr}
   10eb4:	bl	1118c <_start@@Base+0x3c>
   10eb8:	pop	{r3, pc}

Disassembly of section .plt:

00010ebc <calloc@plt-0x14>:
   10ebc:	push	{lr}		; (str lr, [sp, #-4]!)
   10ec0:	ldr	lr, [pc, #4]	; 10ecc <calloc@plt-0x4>
   10ec4:	add	lr, pc, lr
   10ec8:	ldr	pc, [lr, #8]!
   10ecc:	andeq	r2, r1, r4, lsr r1

00010ed0 <calloc@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #73728	; 0x12000
   10ed8:	ldr	pc, [ip, #308]!	; 0x134

00010edc <raise@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #73728	; 0x12000
   10ee4:	ldr	pc, [ip, #300]!	; 0x12c

00010ee8 <strcmp@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #73728	; 0x12000
   10ef0:	ldr	pc, [ip, #292]!	; 0x124

00010ef4 <printf@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #73728	; 0x12000
   10efc:	ldr	pc, [ip, #284]!	; 0x11c

00010f00 <__isoc99_fscanf@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #73728	; 0x12000
   10f08:	ldr	pc, [ip, #276]!	; 0x114

00010f0c <fopen@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #73728	; 0x12000
   10f14:	ldr	pc, [ip, #268]!	; 0x10c

00010f18 <free@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #73728	; 0x12000
   10f20:	ldr	pc, [ip, #260]!	; 0x104

00010f24 <memcpy@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #73728	; 0x12000
   10f2c:	ldr	pc, [ip, #252]!	; 0xfc

00010f30 <realloc@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #73728	; 0x12000
   10f38:	ldr	pc, [ip, #244]!	; 0xf4

00010f3c <strcpy@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #73728	; 0x12000
   10f44:	ldr	pc, [ip, #236]!	; 0xec

00010f48 <puts@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #73728	; 0x12000
   10f50:	ldr	pc, [ip, #228]!	; 0xe4

00010f54 <malloc@plt>:
   10f54:	add	ip, pc, #0, 12
   10f58:	add	ip, ip, #73728	; 0x12000
   10f5c:	ldr	pc, [ip, #220]!	; 0xdc

00010f60 <__libc_start_main@plt>:
   10f60:	add	ip, pc, #0, 12
   10f64:	add	ip, ip, #73728	; 0x12000
   10f68:	ldr	pc, [ip, #212]!	; 0xd4

00010f6c <__gmon_start__@plt>:
   10f6c:	add	ip, pc, #0, 12
   10f70:	add	ip, ip, #73728	; 0x12000
   10f74:	ldr	pc, [ip, #204]!	; 0xcc

00010f78 <strlen@plt>:
   10f78:	add	ip, pc, #0, 12
   10f7c:	add	ip, ip, #73728	; 0x12000
   10f80:	ldr	pc, [ip, #196]!	; 0xc4

00010f84 <putchar@plt>:
   10f84:	add	ip, pc, #0, 12
   10f88:	add	ip, ip, #73728	; 0x12000
   10f8c:	ldr	pc, [ip, #188]!	; 0xbc

00010f90 <fclose@plt>:
   10f90:	add	ip, pc, #0, 12
   10f94:	add	ip, ip, #73728	; 0x12000
   10f98:	ldr	pc, [ip, #180]!	; 0xb4

00010f9c <abort@plt>:
   10f9c:	add	ip, pc, #0, 12
   10fa0:	add	ip, ip, #73728	; 0x12000
   10fa4:	ldr	pc, [ip, #172]!	; 0xac

Disassembly of section .text:

00010fa8 <main@@Base>:
   10fa8:	push	{r4, r5, r6, lr}
   10fac:	sub	sp, sp, #376	; 0x178
   10fb0:	ldr	r3, [pc, #364]	; 11124 <main@@Base+0x17c>
   10fb4:	add	r2, sp, #76	; 0x4c
   10fb8:	add	lr, r3, #48	; 0x30
   10fbc:	mov	r4, r2
   10fc0:	ldr	r0, [r3]
   10fc4:	ldr	r1, [r3, #4]
   10fc8:	mov	ip, r2
   10fcc:	add	r3, r3, #8
   10fd0:	cmp	r3, lr
   10fd4:	stmia	ip!, {r0, r1}
   10fd8:	mov	r2, ip
   10fdc:	bne	10fc0 <main@@Base+0x18>
   10fe0:	ldr	r0, [r3]
   10fe4:	mov	r5, #0
   10fe8:	str	r0, [ip]
   10fec:	ldr	r0, [pc, #308]	; 11128 <main@@Base+0x180>
   10ff0:	bl	10f48 <puts@plt>
   10ff4:	bl	113d8 <avl_nova@@Base>
   10ff8:	mov	r6, r0
   10ffc:	add	r1, r4, r5
   11000:	mov	r0, r6
   11004:	add	r5, r5, #4
   11008:	bl	116ec <avl_insere@@Base>
   1100c:	cmp	r5, #52	; 0x34
   11010:	bne	10ffc <main@@Base+0x54>
   11014:	ldr	r0, [pc, #272]	; 1112c <main@@Base+0x184>
   11018:	bl	10ef4 <printf@plt>
   1101c:	ldr	r0, [r6]
   11020:	bl	119a0 <avl_imprime@@Base>
   11024:	ldr	r0, [pc, #260]	; 11130 <main@@Base+0x188>
   11028:	bl	10ef4 <printf@plt>
   1102c:	ldr	r0, [r6]
   11030:	bl	11278 <crescente@@Base>
   11034:	ldr	r0, [pc, #248]	; 11134 <main@@Base+0x18c>
   11038:	bl	10f48 <puts@plt>
   1103c:	mov	r2, #300	; 0x12c
   11040:	ldr	r1, [pc, #240]	; 11138 <main@@Base+0x190>
   11044:	mov	r0, r4
   11048:	bl	10f24 <memcpy@plt>
   1104c:	mov	r2, #75	; 0x4b
   11050:	ldr	r1, [pc, #228]	; 1113c <main@@Base+0x194>
   11054:	mov	r0, sp
   11058:	bl	10f24 <memcpy@plt>
   1105c:	ldr	r0, [pc, #220]	; 11140 <main@@Base+0x198>
   11060:	bl	10f48 <puts@plt>
   11064:	ldr	r1, [pc, #216]	; 11144 <main@@Base+0x19c>
   11068:	ldr	r0, [pc, #216]	; 11148 <main@@Base+0x1a0>
   1106c:	bl	10f0c <fopen@plt>
   11070:	subs	r6, r0, #0
   11074:	bne	1108c <main@@Base+0xe4>
   11078:	ldr	r0, [pc, #204]	; 1114c <main@@Base+0x1a4>
   1107c:	bl	10f48 <puts@plt>
   11080:	mvn	r0, #0
   11084:	add	sp, sp, #376	; 0x178
   11088:	pop	{r4, r5, r6, pc}
   1108c:	bl	11a20 <lista_nova@@Base>
   11090:	mov	r1, r4
   11094:	mov	r2, #0
   11098:	mov	r5, r0
   1109c:	bl	11aac <lista_insere@@Base>
   110a0:	add	r1, r4, #100	; 0x64
   110a4:	mov	r2, #0
   110a8:	mov	r0, r5
   110ac:	bl	11aac <lista_insere@@Base>
   110b0:	add	r1, r4, #200	; 0xc8
   110b4:	mov	r2, #0
   110b8:	mov	r0, r5
   110bc:	bl	11aac <lista_insere@@Base>
   110c0:	bl	11a20 <lista_nova@@Base>
   110c4:	mov	r2, #0
   110c8:	mov	r1, sp
   110cc:	mov	r4, r0
   110d0:	bl	11aac <lista_insere@@Base>
   110d4:	mov	r2, #0
   110d8:	add	r1, sp, #25
   110dc:	mov	r0, r4
   110e0:	bl	11aac <lista_insere@@Base>
   110e4:	mov	r2, #0
   110e8:	add	r1, sp, #50	; 0x32
   110ec:	mov	r0, r4
   110f0:	bl	11aac <lista_insere@@Base>
   110f4:	mov	r2, r4
   110f8:	mov	r1, r5
   110fc:	mov	r0, r6
   11100:	bl	112f4 <valida_passwds@@Base>
   11104:	mov	r0, r5
   11108:	bl	11a44 <lista_apaga@@Base>
   1110c:	mov	r0, r4
   11110:	bl	11a44 <lista_apaga@@Base>
   11114:	mov	r0, r6
   11118:	bl	10f90 <fclose@plt>
   1111c:	mov	r0, #0
   11120:	b	11084 <main@@Base+0xdc>
   11124:	ldrdeq	r2, [r1], -ip
   11128:	ldrdeq	r2, [r1], -r8
   1112c:	andeq	r2, r1, r9, ror #13
   11130:	strdeq	r2, [r1], -fp
   11134:	andeq	r2, r1, ip, ror r7
   11138:	andeq	r2, r1, r0, lsl r5
   1113c:	andeq	r2, r1, ip, lsr r6
   11140:	andeq	r2, r1, r8, lsl r7
   11144:	andeq	r2, r1, r9, lsr #14
   11148:	andeq	r2, r1, fp, lsr #14
   1114c:	andeq	r2, r1, r9, lsr r7

00011150 <_start@@Base>:
   11150:	mov	fp, #0
   11154:	mov	lr, #0
   11158:	pop	{r1}		; (ldr r1, [sp], #4)
   1115c:	mov	r2, sp
   11160:	push	{r2}		; (str r2, [sp, #-4]!)
   11164:	push	{r0}		; (str r0, [sp, #-4]!)
   11168:	ldr	ip, [pc, #16]	; 11180 <_start@@Base+0x30>
   1116c:	push	{ip}		; (str ip, [sp, #-4]!)
   11170:	ldr	r0, [pc, #12]	; 11184 <_start@@Base+0x34>
   11174:	ldr	r3, [pc, #12]	; 11188 <_start@@Base+0x38>
   11178:	bl	10f60 <__libc_start_main@plt>
   1117c:	bl	10f9c <abort@plt>
   11180:	andeq	r2, r1, ip, asr #9
   11184:	andeq	r0, r1, r8, lsr #31
   11188:	andeq	r2, r1, ip, ror #8
   1118c:	ldr	r3, [pc, #20]	; 111a8 <_start@@Base+0x58>
   11190:	ldr	r2, [pc, #20]	; 111ac <_start@@Base+0x5c>
   11194:	add	r3, pc, r3
   11198:	ldr	r2, [r3, r2]
   1119c:	cmp	r2, #0
   111a0:	bxeq	lr
   111a4:	b	10f6c <__gmon_start__@plt>
   111a8:	andeq	r1, r1, r4, ror #28
   111ac:	andeq	r0, r0, r4, asr r0
   111b0:	ldr	r3, [pc, #28]	; 111d4 <_start@@Base+0x84>
   111b4:	ldr	r0, [pc, #28]	; 111d8 <_start@@Base+0x88>
   111b8:	sub	r3, r3, r0
   111bc:	cmp	r3, #6
   111c0:	bxls	lr
   111c4:	ldr	r3, [pc, #16]	; 111dc <_start@@Base+0x8c>
   111c8:	cmp	r3, #0
   111cc:	bxeq	lr
   111d0:	bx	r3
   111d4:	andeq	r3, r2, r3, rrx
   111d8:	andeq	r3, r2, r0, rrx
   111dc:	andeq	r0, r0, r0
   111e0:	ldr	r1, [pc, #36]	; 1120c <_start@@Base+0xbc>
   111e4:	ldr	r0, [pc, #36]	; 11210 <_start@@Base+0xc0>
   111e8:	sub	r1, r1, r0
   111ec:	asr	r1, r1, #2
   111f0:	add	r1, r1, r1, lsr #31
   111f4:	asrs	r1, r1, #1
   111f8:	bxeq	lr
   111fc:	ldr	r3, [pc, #16]	; 11214 <_start@@Base+0xc4>
   11200:	cmp	r3, #0
   11204:	bxeq	lr
   11208:	bx	r3
   1120c:	andeq	r3, r2, r0, rrx
   11210:	andeq	r3, r2, r0, rrx
   11214:	andeq	r0, r0, r0
   11218:	push	{r4, lr}
   1121c:	ldr	r4, [pc, #24]	; 1123c <_start@@Base+0xec>
   11220:	ldrb	r3, [r4]
   11224:	cmp	r3, #0
   11228:	popne	{r4, pc}
   1122c:	bl	111b0 <_start@@Base+0x60>
   11230:	mov	r3, #1
   11234:	strb	r3, [r4]
   11238:	pop	{r4, pc}
   1123c:	andeq	r3, r2, r0, rrx
   11240:	ldr	r0, [pc, #40]	; 11270 <_start@@Base+0x120>
   11244:	ldr	r3, [r0]
   11248:	cmp	r3, #0
   1124c:	bne	11254 <_start@@Base+0x104>
   11250:	b	111e0 <_start@@Base+0x90>
   11254:	ldr	r3, [pc, #24]	; 11274 <_start@@Base+0x124>
   11258:	cmp	r3, #0
   1125c:	beq	11250 <_start@@Base+0x100>
   11260:	push	{r4, lr}
   11264:	blx	r3
   11268:	pop	{r4, lr}
   1126c:	b	111e0 <_start@@Base+0x90>
   11270:	andeq	r2, r2, r4, lsl pc
   11274:	andeq	r0, r0, r0

00011278 <crescente@@Base>:
   11278:	push	{r4, r5, r6, lr}
   1127c:	mov	r4, r0
   11280:	ldr	r5, [pc, #32]	; 112a8 <crescente@@Base+0x30>
   11284:	cmp	r4, #0
   11288:	popeq	{r4, r5, r6, pc}
   1128c:	ldr	r0, [r4, #4]
   11290:	bl	11278 <crescente@@Base>
   11294:	ldr	r1, [r4]
   11298:	mov	r0, r5
   1129c:	bl	10ef4 <printf@plt>
   112a0:	ldr	r4, [r4, #8]
   112a4:	b	11284 <crescente@@Base+0xc>
   112a8:	andeq	r2, r1, r7, lsl #13

000112ac <decrescente@@Base>:
   112ac:	push	{r4, r5, r6, lr}
   112b0:	mov	r4, r0
   112b4:	ldr	r5, [pc, #32]	; 112dc <decrescente@@Base+0x30>
   112b8:	cmp	r4, #0
   112bc:	popeq	{r4, r5, r6, pc}
   112c0:	ldr	r0, [r4, #8]
   112c4:	bl	112ac <decrescente@@Base>
   112c8:	ldr	r1, [r4]
   112cc:	mov	r0, r5
   112d0:	bl	10ef4 <printf@plt>
   112d4:	ldr	r4, [r4, #4]
   112d8:	b	112b8 <decrescente@@Base+0xc>
   112dc:	andeq	r2, r1, r7, lsl #13

000112e0 <avl_imprime_ord@@Base>:
   112e0:	cmp	r1, #0
   112e4:	ldr	r0, [r0]
   112e8:	blt	112f0 <avl_imprime_ord@@Base+0x10>
   112ec:	b	11278 <crescente@@Base>
   112f0:	b	112ac <decrescente@@Base>

000112f4 <valida_passwds@@Base>:
   112f4:	push	{r4, r5, r6, r7, r8, r9, lr}
   112f8:	mov	r7, r0
   112fc:	sub	sp, sp, #60	; 0x3c
   11300:	mov	r5, r1
   11304:	mov	r0, #10
   11308:	ldr	r1, [pc, #180]	; 113c4 <valida_passwds@@Base+0xd0>
   1130c:	mov	r4, r2
   11310:	bl	11d50 <tabela_nova@@Base>
   11314:	ldr	r8, [pc, #172]	; 113c8 <valida_passwds@@Base+0xd4>
   11318:	mov	r6, r0
   1131c:	add	r3, sp, #28
   11320:	mov	r2, sp
   11324:	mov	r1, r8
   11328:	mov	r0, r7
   1132c:	bl	10f00 <__isoc99_fscanf@plt>
   11330:	cmp	r0, #2
   11334:	beq	11370 <valida_passwds@@Base+0x7c>
   11338:	ldr	r5, [r5]
   1133c:	ldr	r4, [r4]
   11340:	ldr	r7, [pc, #132]	; 113cc <valida_passwds@@Base+0xd8>
   11344:	ldr	r8, [pc, #132]	; 113d0 <valida_passwds@@Base+0xdc>
   11348:	ldr	r9, [pc, #132]	; 113d4 <valida_passwds@@Base+0xe0>
   1134c:	cmp	r5, #0
   11350:	cmpne	r4, #0
   11354:	bne	11384 <valida_passwds@@Base+0x90>
   11358:	mov	r0, r6
   1135c:	bl	1200c <tabela_esvazia@@Base>
   11360:	mov	r0, r6
   11364:	bl	10f18 <free@plt>
   11368:	add	sp, sp, #60	; 0x3c
   1136c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   11370:	add	r2, sp, #28
   11374:	mov	r1, sp
   11378:	mov	r0, r6
   1137c:	bl	11e14 <tabela_adiciona@@Base>
   11380:	b	1131c <valida_passwds@@Base+0x28>
   11384:	ldr	r2, [r4]
   11388:	ldr	r1, [r5]
   1138c:	mov	r0, r7
   11390:	bl	10ef4 <printf@plt>
   11394:	ldr	r1, [r5]
   11398:	mov	r0, r6
   1139c:	bl	11f80 <tabela_valor@@Base>
   113a0:	ldr	r1, [r4]
   113a4:	bl	10ee8 <strcmp@plt>
   113a8:	cmp	r0, #0
   113ac:	moveq	r0, r9
   113b0:	movne	r0, r8
   113b4:	bl	10f48 <puts@plt>
   113b8:	ldr	r5, [r5, #4]
   113bc:	ldr	r4, [r4, #4]
   113c0:	b	1134c <valida_passwds@@Base+0x58>
   113c4:	andeq	r2, r1, r8, ror r1
   113c8:	andeq	r2, r1, fp, lsl #13
   113cc:	muleq	r1, r1, r6
   113d0:	andeq	r2, r1, r2, asr #13
   113d4:	andeq	r2, r1, r9, lsr #13

000113d8 <avl_nova@@Base>:
   113d8:	push	{r4, lr}
   113dc:	mov	r0, #4
   113e0:	bl	10f54 <malloc@plt>
   113e4:	cmp	r0, #0
   113e8:	movne	r3, #0
   113ec:	strne	r3, [r0]
   113f0:	pop	{r4, pc}

000113f4 <avl_min@@Base>:
   113f4:	cmp	r0, #0
   113f8:	bne	11404 <avl_min@@Base+0x10>
   113fc:	bx	lr
   11400:	mov	r0, r3
   11404:	ldr	r3, [r0, #4]
   11408:	cmp	r3, #0
   1140c:	bne	11400 <avl_min@@Base+0xc>
   11410:	ldr	r0, [r0]
   11414:	bx	lr

00011418 <avl_max@@Base>:
   11418:	cmp	r0, #0
   1141c:	bne	11428 <avl_max@@Base+0x10>
   11420:	bx	lr
   11424:	mov	r0, r3
   11428:	ldr	r3, [r0, #8]
   1142c:	cmp	r3, #0
   11430:	bne	11424 <avl_max@@Base+0xc>
   11434:	ldr	r0, [r0]
   11438:	bx	lr

0001143c <avl_altura@@Base>:
   1143c:	cmp	r0, #0
   11440:	ldrne	r0, [r0, #12]
   11444:	mvneq	r0, #0
   11448:	bx	lr

0001144c <max@@Base>:
   1144c:	cmp	r1, r0
   11450:	movge	r0, r1
   11454:	bx	lr

00011458 <avl_novo_no@@Base>:
   11458:	push	{r4, r5, r6, lr}
   1145c:	mov	r5, r0
   11460:	mov	r0, #16
   11464:	bl	10f54 <malloc@plt>
   11468:	mov	r4, r0
   1146c:	mov	r0, r5
   11470:	bl	10f78 <strlen@plt>
   11474:	add	r0, r0, #1
   11478:	bl	10f54 <malloc@plt>
   1147c:	mov	r1, r5
   11480:	str	r0, [r4]
   11484:	bl	10f3c <strcpy@plt>
   11488:	mov	r3, #0
   1148c:	str	r3, [r4, #4]
   11490:	str	r3, [r4, #8]
   11494:	str	r3, [r4, #12]
   11498:	mov	r0, r4
   1149c:	pop	{r4, r5, r6, pc}

000114a0 <roda_direita@@Base>:
   114a0:	ldr	r1, [r0, #4]
   114a4:	ldr	r3, [r1, #8]
   114a8:	str	r0, [r1, #8]
   114ac:	cmp	r3, #0
   114b0:	str	r3, [r0, #4]
   114b4:	ldrne	r2, [r3, #12]
   114b8:	ldr	r3, [r0, #8]
   114bc:	mvneq	r2, #0
   114c0:	cmp	r3, #0
   114c4:	mvneq	r3, #0
   114c8:	ldrne	r3, [r3, #12]
   114cc:	cmp	r3, r2
   114d0:	movlt	r3, r2
   114d4:	ldr	r2, [r1, #4]
   114d8:	add	r3, r3, #1
   114dc:	cmp	r2, #0
   114e0:	str	r3, [r0, #12]
   114e4:	ldrne	r2, [r2, #12]
   114e8:	mvneq	r2, #0
   114ec:	cmp	r2, r3
   114f0:	movge	r3, r2
   114f4:	add	r3, r3, #1
   114f8:	str	r3, [r1, #12]
   114fc:	mov	r0, r1
   11500:	bx	lr

00011504 <roda_esquerda@@Base>:
   11504:	mov	r2, r0
   11508:	ldr	r0, [r0, #8]
   1150c:	ldr	r1, [r0, #4]
   11510:	str	r2, [r0, #4]
   11514:	ldr	r3, [r2, #4]
   11518:	str	r1, [r2, #8]
   1151c:	cmp	r3, #0
   11520:	ldrne	r3, [r3, #12]
   11524:	mvneq	r3, #0
   11528:	cmp	r1, #0
   1152c:	orreq	r3, r3, r3, asr #31
   11530:	beq	11540 <roda_esquerda@@Base+0x3c>
   11534:	ldr	r1, [r1, #12]
   11538:	cmp	r3, r1
   1153c:	movlt	r3, r1
   11540:	add	r3, r3, #1
   11544:	str	r3, [r2, #12]
   11548:	ldr	r2, [r0, #8]
   1154c:	cmp	r2, #0
   11550:	mvneq	r2, #0
   11554:	ldrne	r2, [r2, #12]
   11558:	cmp	r3, r2
   1155c:	movlt	r3, r2
   11560:	add	r3, r3, #1
   11564:	str	r3, [r0, #12]
   11568:	bx	lr

0001156c <calc_balanceamento@@Base>:
   1156c:	cmp	r0, #0
   11570:	bxeq	lr
   11574:	ldr	r3, [r0, #8]
   11578:	ldr	r2, [r0, #4]
   1157c:	cmp	r3, #0
   11580:	mvneq	r3, #0
   11584:	ldrne	r3, [r3, #12]
   11588:	cmp	r2, #0
   1158c:	mvneq	r0, #0
   11590:	ldrne	r0, [r2, #12]
   11594:	sub	r0, r3, r0
   11598:	bx	lr

0001159c <avl_pesquisa_impl@@Base>:
   1159c:	push	{r4, r5, r6, lr}
   115a0:	mov	r5, r1
   115a4:	mov	r4, r0
   115a8:	cmp	r4, #0
   115ac:	beq	115d0 <avl_pesquisa_impl@@Base+0x34>
   115b0:	ldr	r1, [r4]
   115b4:	mov	r0, r5
   115b8:	bl	10ee8 <strcmp@plt>
   115bc:	cmp	r0, #0
   115c0:	ldrlt	r4, [r4, #4]
   115c4:	blt	115a8 <avl_pesquisa_impl@@Base+0xc>
   115c8:	ldrne	r4, [r4, #8]
   115cc:	bne	115a8 <avl_pesquisa_impl@@Base+0xc>
   115d0:	mov	r0, r4
   115d4:	pop	{r4, r5, r6, pc}

000115d8 <avl_pesquisa@@Base>:
   115d8:	cmp	r1, #0
   115dc:	cmpne	r0, #0
   115e0:	beq	115ec <avl_pesquisa@@Base+0x14>
   115e4:	ldr	r0, [r0]
   115e8:	b	1159c <avl_pesquisa_impl@@Base>
   115ec:	mov	r0, #0
   115f0:	bx	lr

000115f4 <avl_insere_impl@@Base>:
   115f4:	push	{r4, r5, r6, lr}
   115f8:	subs	r4, r0, #0
   115fc:	bne	1160c <avl_insere_impl@@Base+0x18>
   11600:	mov	r0, r1
   11604:	pop	{r4, r5, r6, lr}
   11608:	b	11458 <avl_novo_no@@Base>
   1160c:	mov	r5, r1
   11610:	mov	r0, r5
   11614:	ldr	r1, [r4]
   11618:	bl	10ee8 <strcmp@plt>
   1161c:	cmp	r0, #0
   11620:	bge	1169c <avl_insere_impl@@Base+0xa8>
   11624:	mov	r1, r5
   11628:	ldr	r0, [r4, #4]
   1162c:	bl	115f4 <avl_insere_impl@@Base>
   11630:	str	r0, [r4, #4]
   11634:	ldr	r1, [r4, #4]
   11638:	ldr	r5, [r4, #8]
   1163c:	cmp	r1, #0
   11640:	mvneq	r3, #0
   11644:	ldrne	r3, [r1, #12]
   11648:	cmp	r5, #0
   1164c:	mvneq	r2, #0
   11650:	ldrne	r2, [r5, #12]
   11654:	mov	r0, r4
   11658:	cmp	r3, r2
   1165c:	movlt	r3, r2
   11660:	add	r3, r3, #1
   11664:	str	r3, [r4, #12]
   11668:	bl	1156c <calc_balanceamento@@Base>
   1166c:	cmp	r0, #1
   11670:	ble	116b4 <avl_insere_impl@@Base+0xc0>
   11674:	mov	r0, r5
   11678:	bl	1156c <calc_balanceamento@@Base>
   1167c:	cmp	r0, #0
   11680:	bge	11690 <avl_insere_impl@@Base+0x9c>
   11684:	mov	r0, r5
   11688:	bl	114a0 <roda_direita@@Base>
   1168c:	str	r0, [r4, #8]
   11690:	mov	r0, r4
   11694:	pop	{r4, r5, r6, lr}
   11698:	b	11504 <roda_esquerda@@Base>
   1169c:	beq	116e4 <avl_insere_impl@@Base+0xf0>
   116a0:	mov	r1, r5
   116a4:	ldr	r0, [r4, #8]
   116a8:	bl	115f4 <avl_insere_impl@@Base>
   116ac:	str	r0, [r4, #8]
   116b0:	b	11634 <avl_insere_impl@@Base+0x40>
   116b4:	cmn	r0, #1
   116b8:	bge	116e4 <avl_insere_impl@@Base+0xf0>
   116bc:	mov	r0, r1
   116c0:	bl	1156c <calc_balanceamento@@Base>
   116c4:	cmp	r0, #0
   116c8:	ble	116d8 <avl_insere_impl@@Base+0xe4>
   116cc:	mov	r0, r1
   116d0:	bl	11504 <roda_esquerda@@Base>
   116d4:	str	r0, [r4, #4]
   116d8:	mov	r0, r4
   116dc:	pop	{r4, r5, r6, lr}
   116e0:	b	114a0 <roda_direita@@Base>
   116e4:	mov	r0, r4
   116e8:	pop	{r4, r5, r6, pc}

000116ec <avl_insere@@Base>:
   116ec:	cmp	r1, #0
   116f0:	cmpne	r0, #0
   116f4:	push	{r4, r5, r6, lr}
   116f8:	moveq	r5, #1
   116fc:	movne	r5, #0
   11700:	beq	1171c <avl_insere@@Base+0x30>
   11704:	mov	r4, r0
   11708:	ldr	r0, [r0]
   1170c:	bl	115f4 <avl_insere_impl@@Base>
   11710:	str	r0, [r4]
   11714:	mov	r0, r5
   11718:	pop	{r4, r5, r6, pc}
   1171c:	mvn	r0, #0
   11720:	pop	{r4, r5, r6, pc}

00011724 <avl_no_valormin@@Base>:
   11724:	ldr	r3, [r0, #4]
   11728:	cmp	r3, #0
   1172c:	bne	11734 <avl_no_valormin@@Base+0x10>
   11730:	bx	lr
   11734:	mov	r0, r3
   11738:	b	11724 <avl_no_valormin@@Base>

0001173c <avl_no_valormax@@Base>:
   1173c:	ldr	r3, [r0, #8]
   11740:	cmp	r3, #0
   11744:	bne	1174c <avl_no_valormax@@Base+0x10>
   11748:	bx	lr
   1174c:	mov	r0, r3
   11750:	b	1173c <avl_no_valormax@@Base>

00011754 <avl_remove_impl@@Base>:
   11754:	push	{r4, r5, r6, r7, r8, lr}
   11758:	subs	r4, r0, #0
   1175c:	bne	1176c <avl_remove_impl@@Base+0x18>
   11760:	mov	r4, #0
   11764:	mov	r0, r4
   11768:	pop	{r4, r5, r6, r7, r8, pc}
   1176c:	ldr	r7, [r4]
   11770:	mov	r5, r1
   11774:	mov	r0, r5
   11778:	mov	r1, r7
   1177c:	bl	10ee8 <strcmp@plt>
   11780:	cmp	r0, #0
   11784:	bge	11800 <avl_remove_impl@@Base+0xac>
   11788:	mov	r1, r5
   1178c:	ldr	r0, [r4, #4]
   11790:	bl	11754 <avl_remove_impl@@Base>
   11794:	str	r0, [r4, #4]
   11798:	ldr	r1, [r4, #4]
   1179c:	ldr	r5, [r4, #8]
   117a0:	cmp	r1, #0
   117a4:	mvneq	r3, #0
   117a8:	ldrne	r3, [r1, #12]
   117ac:	cmp	r5, #0
   117b0:	mvneq	r2, #0
   117b4:	ldrne	r2, [r5, #12]
   117b8:	mov	r0, r4
   117bc:	cmp	r3, r2
   117c0:	movlt	r3, r2
   117c4:	add	r3, r3, #1
   117c8:	str	r3, [r4, #12]
   117cc:	bl	1156c <calc_balanceamento@@Base>
   117d0:	cmp	r0, #1
   117d4:	ble	118d0 <avl_remove_impl@@Base+0x17c>
   117d8:	mov	r0, r5
   117dc:	bl	1156c <calc_balanceamento@@Base>
   117e0:	cmp	r0, #0
   117e4:	bge	117f4 <avl_remove_impl@@Base+0xa0>
   117e8:	mov	r0, r5
   117ec:	bl	114a0 <roda_direita@@Base>
   117f0:	str	r0, [r4, #8]
   117f4:	mov	r0, r4
   117f8:	pop	{r4, r5, r6, r7, r8, lr}
   117fc:	b	11504 <roda_esquerda@@Base>
   11800:	movne	r1, r5
   11804:	bne	118c0 <avl_remove_impl@@Base+0x16c>
   11808:	ldr	r5, [r4, #4]
   1180c:	ldr	r6, [r4, #8]
   11810:	cmp	r5, #0
   11814:	beq	1185c <avl_remove_impl@@Base+0x108>
   11818:	cmp	r6, #0
   1181c:	bne	11890 <avl_remove_impl@@Base+0x13c>
   11820:	ldr	r0, [r5]
   11824:	bl	10f78 <strlen@plt>
   11828:	add	r1, r0, #1
   1182c:	mov	r0, r7
   11830:	bl	10f30 <realloc@plt>
   11834:	str	r0, [r4]
   11838:	ldr	r1, [r5]
   1183c:	bl	10f3c <strcpy@plt>
   11840:	ldr	r3, [r5, #4]
   11844:	str	r3, [r4, #4]
   11848:	ldr	r3, [r5, #8]
   1184c:	str	r3, [r4, #8]
   11850:	ldr	r3, [r5, #12]
   11854:	str	r3, [r4, #12]
   11858:	b	11870 <avl_remove_impl@@Base+0x11c>
   1185c:	subs	r5, r6, #0
   11860:	moveq	r3, r4
   11864:	moveq	r4, r5
   11868:	moveq	r5, r3
   1186c:	bne	11820 <avl_remove_impl@@Base+0xcc>
   11870:	ldr	r0, [r5]
   11874:	bl	10f18 <free@plt>
   11878:	mov	r0, r5
   1187c:	bl	10f18 <free@plt>
   11880:	cmp	r4, #0
   11884:	beq	11760 <avl_remove_impl@@Base+0xc>
   11888:	b	11798 <avl_remove_impl@@Base+0x44>
   1188c:	mov	r6, r3
   11890:	ldr	r3, [r6, #4]
   11894:	cmp	r3, #0
   11898:	bne	1188c <avl_remove_impl@@Base+0x138>
   1189c:	ldr	r0, [r6]
   118a0:	bl	10f78 <strlen@plt>
   118a4:	add	r1, r0, #1
   118a8:	mov	r0, r7
   118ac:	bl	10f30 <realloc@plt>
   118b0:	str	r0, [r4]
   118b4:	ldr	r1, [r6]
   118b8:	bl	10f3c <strcpy@plt>
   118bc:	ldr	r1, [r6]
   118c0:	ldr	r0, [r4, #8]
   118c4:	bl	11754 <avl_remove_impl@@Base>
   118c8:	str	r0, [r4, #8]
   118cc:	b	11798 <avl_remove_impl@@Base+0x44>
   118d0:	cmn	r0, #1
   118d4:	bge	11764 <avl_remove_impl@@Base+0x10>
   118d8:	mov	r0, r1
   118dc:	bl	1156c <calc_balanceamento@@Base>
   118e0:	cmp	r0, #0
   118e4:	ble	118f4 <avl_remove_impl@@Base+0x1a0>
   118e8:	mov	r0, r1
   118ec:	bl	11504 <roda_esquerda@@Base>
   118f0:	str	r0, [r4, #4]
   118f4:	mov	r0, r4
   118f8:	pop	{r4, r5, r6, r7, r8, lr}
   118fc:	b	114a0 <roda_direita@@Base>

00011900 <avl_apaga@@Base>:
   11900:	push	{r4, lr}
   11904:	subs	r4, r0, #0
   11908:	bne	1191c <avl_apaga@@Base+0x1c>
   1190c:	pop	{r4, pc}
   11910:	ldr	r1, [r0]
   11914:	bl	11754 <avl_remove_impl@@Base>
   11918:	str	r0, [r4]
   1191c:	ldr	r0, [r4]
   11920:	cmp	r0, #0
   11924:	bne	11910 <avl_apaga@@Base+0x10>
   11928:	mov	r0, r4
   1192c:	pop	{r4, lr}
   11930:	b	10f18 <free@plt>

00011934 <avl_remove@@Base>:
   11934:	cmp	r1, #0
   11938:	cmpne	r0, #0
   1193c:	push	{r4, r5, r6, lr}
   11940:	moveq	r5, #1
   11944:	movne	r5, #0
   11948:	beq	11964 <avl_remove@@Base+0x30>
   1194c:	mov	r4, r0
   11950:	ldr	r0, [r0]
   11954:	bl	11754 <avl_remove_impl@@Base>
   11958:	str	r0, [r4]
   1195c:	mov	r0, r5
   11960:	pop	{r4, r5, r6, pc}
   11964:	mvn	r0, #0
   11968:	pop	{r4, r5, r6, pc}

0001196c <avl_preordem_impl@@Base>:
   1196c:	push	{r4, r5, r6, lr}
   11970:	mov	r4, r0
   11974:	ldr	r5, [pc, #32]	; 1199c <avl_preordem_impl@@Base+0x30>
   11978:	cmp	r4, #0
   1197c:	popeq	{r4, r5, r6, pc}
   11980:	ldr	r1, [r4]
   11984:	mov	r0, r5
   11988:	bl	10ef4 <printf@plt>
   1198c:	ldr	r0, [r4, #4]
   11990:	bl	1196c <avl_preordem_impl@@Base>
   11994:	ldr	r4, [r4, #8]
   11998:	b	11978 <avl_preordem_impl@@Base+0xc>
   1199c:	andeq	r2, r1, r7, lsl #13

000119a0 <avl_imprime@@Base>:
   119a0:	cmp	r0, #0
   119a4:	bxeq	lr
   119a8:	push	{r4, lr}
   119ac:	bl	1196c <avl_preordem_impl@@Base>
   119b0:	mov	r0, #10
   119b4:	pop	{r4, lr}
   119b8:	b	10f84 <putchar@plt>

000119bc <novo_str@@Base>:
   119bc:	push	{r4, r5, r6, r7, r8, lr}
   119c0:	mov	r7, r0
   119c4:	mov	r0, #12
   119c8:	bl	10f54 <malloc@plt>
   119cc:	subs	r4, r0, #0
   119d0:	beq	11a04 <novo_str@@Base+0x48>
   119d4:	mov	r0, r7
   119d8:	bl	10f78 <strlen@plt>
   119dc:	mov	r6, #0
   119e0:	add	r0, r0, #1
   119e4:	bl	10f54 <malloc@plt>
   119e8:	cmp	r0, #0
   119ec:	mov	r5, r0
   119f0:	str	r0, [r4]
   119f4:	bne	11a0c <novo_str@@Base+0x50>
   119f8:	mov	r0, r4
   119fc:	bl	10f18 <free@plt>
   11a00:	mov	r4, r5
   11a04:	mov	r0, r4
   11a08:	pop	{r4, r5, r6, r7, r8, pc}
   11a0c:	mov	r1, r7
   11a10:	bl	10f3c <strcpy@plt>
   11a14:	str	r6, [r4, #4]
   11a18:	str	r6, [r4, #8]
   11a1c:	b	11a04 <novo_str@@Base+0x48>

00011a20 <lista_nova@@Base>:
   11a20:	push	{r4, lr}
   11a24:	mov	r0, #12
   11a28:	bl	10f54 <malloc@plt>
   11a2c:	cmp	r0, #0
   11a30:	movne	r3, #0
   11a34:	strne	r3, [r0]
   11a38:	strne	r3, [r0, #4]
   11a3c:	strne	r3, [r0, #8]
   11a40:	pop	{r4, pc}

00011a44 <lista_apaga@@Base>:
   11a44:	push	{r4, r5, r6, lr}
   11a48:	subs	r5, r0, #0
   11a4c:	bne	11a6c <lista_apaga@@Base+0x28>
   11a50:	pop	{r4, r5, r6, pc}
   11a54:	ldr	r3, [r4, #4]
   11a58:	ldr	r0, [r4]
   11a5c:	str	r3, [r5]
   11a60:	bl	10f18 <free@plt>
   11a64:	mov	r0, r4
   11a68:	bl	10f18 <free@plt>
   11a6c:	ldr	r4, [r5]
   11a70:	cmp	r4, #0
   11a74:	bne	11a54 <lista_apaga@@Base+0x10>
   11a78:	mov	r0, r5
   11a7c:	pop	{r4, r5, r6, lr}
   11a80:	b	10f18 <free@plt>

00011a84 <lista_tamanho@@Base>:
   11a84:	cmp	r0, #0
   11a88:	ldrne	r0, [r0, #8]
   11a8c:	mvneq	r0, #0
   11a90:	bx	lr

00011a94 <lista_inicio@@Base>:
   11a94:	cmp	r0, #0
   11a98:	ldrne	r0, [r0]
   11a9c:	bx	lr

00011aa0 <lista_fim@@Base>:
   11aa0:	cmp	r0, #0
   11aa4:	ldrne	r0, [r0, #4]
   11aa8:	bx	lr

00011aac <lista_insere@@Base>:
   11aac:	cmp	r1, #0
   11ab0:	cmpne	r0, #0
   11ab4:	bne	11ac8 <lista_insere@@Base+0x1c>
   11ab8:	mov	r0, #0
   11abc:	bx	lr
   11ac0:	mov	r0, #0
   11ac4:	pop	{r4, r5, r6, pc}
   11ac8:	push	{r4, r5, r6, lr}
   11acc:	mov	r4, r0
   11ad0:	mov	r0, r1
   11ad4:	mov	r5, r2
   11ad8:	bl	119bc <novo_str@@Base>
   11adc:	cmp	r0, #0
   11ae0:	beq	11ac0 <lista_insere@@Base+0x14>
   11ae4:	ldr	r3, [r4, #8]
   11ae8:	cmp	r5, #0
   11aec:	add	r3, r3, #1
   11af0:	str	r3, [r4, #8]
   11af4:	ldr	r3, [r4]
   11af8:	bne	11b1c <lista_insere@@Base+0x70>
   11afc:	cmp	r3, #0
   11b00:	streq	r0, [r4, #4]
   11b04:	beq	11b2c <lista_insere@@Base+0x80>
   11b08:	ldr	r3, [r4, #4]
   11b0c:	str	r3, [r0, #8]
   11b10:	str	r0, [r3, #4]
   11b14:	str	r0, [r4, #4]
   11b18:	pop	{r4, r5, r6, pc}
   11b1c:	cmp	r5, r3
   11b20:	bne	11b34 <lista_insere@@Base+0x88>
   11b24:	str	r5, [r0, #4]
   11b28:	str	r0, [r5, #8]
   11b2c:	str	r0, [r4]
   11b30:	pop	{r4, r5, r6, pc}
   11b34:	ldr	r3, [r5, #8]
   11b38:	str	r5, [r0, #4]
   11b3c:	str	r3, [r0, #8]
   11b40:	ldr	r3, [r5, #8]
   11b44:	str	r0, [r3, #4]
   11b48:	str	r0, [r5, #8]
   11b4c:	pop	{r4, r5, r6, pc}

00011b50 <lista_remove@@Base>:
   11b50:	cmp	r1, #0
   11b54:	cmpne	r0, #0
   11b58:	push	{r4, r5, r6, lr}
   11b5c:	moveq	r5, #0
   11b60:	beq	11ba8 <lista_remove@@Base+0x58>
   11b64:	ldr	r3, [r0, #8]
   11b68:	ldr	r2, [r1, #4]
   11b6c:	sub	r3, r3, #1
   11b70:	str	r3, [r0, #8]
   11b74:	ldr	r3, [r1, #8]
   11b78:	mov	r4, r1
   11b7c:	cmp	r3, #0
   11b80:	strne	r2, [r3, #4]
   11b84:	ldr	r5, [r1, #4]
   11b88:	streq	r2, [r0]
   11b8c:	cmp	r5, #0
   11b90:	streq	r3, [r0, #4]
   11b94:	strne	r3, [r5, #8]
   11b98:	ldr	r0, [r1]
   11b9c:	bl	10f18 <free@plt>
   11ba0:	mov	r0, r4
   11ba4:	bl	10f18 <free@plt>
   11ba8:	mov	r0, r5
   11bac:	pop	{r4, r5, r6, pc}

00011bb0 <lista_pesquisa@@Base>:
   11bb0:	cmp	r1, #0
   11bb4:	cmpne	r0, #0
   11bb8:	push	{r4, r5, r6, lr}
   11bbc:	moveq	r4, #1
   11bc0:	movne	r4, #0
   11bc4:	moveq	r4, #0
   11bc8:	beq	11c2c <lista_pesquisa@@Base+0x7c>
   11bcc:	cmp	r2, #1
   11bd0:	bhi	11c2c <lista_pesquisa@@Base+0x7c>
   11bd4:	cmp	r2, #0
   11bd8:	mov	r5, r1
   11bdc:	ldreq	r4, [r0]
   11be0:	beq	11c24 <lista_pesquisa@@Base+0x74>
   11be4:	ldr	r4, [r0, #4]
   11be8:	cmp	r4, #0
   11bec:	beq	11c2c <lista_pesquisa@@Base+0x7c>
   11bf0:	mov	r1, r5
   11bf4:	ldr	r0, [r4]
   11bf8:	bl	10ee8 <strcmp@plt>
   11bfc:	cmp	r0, #0
   11c00:	beq	11c2c <lista_pesquisa@@Base+0x7c>
   11c04:	ldr	r4, [r4, #8]
   11c08:	b	11be8 <lista_pesquisa@@Base+0x38>
   11c0c:	mov	r1, r5
   11c10:	ldr	r0, [r4]
   11c14:	bl	10ee8 <strcmp@plt>
   11c18:	cmp	r0, #0
   11c1c:	beq	11c2c <lista_pesquisa@@Base+0x7c>
   11c20:	ldr	r4, [r4, #4]
   11c24:	cmp	r4, #0
   11c28:	bne	11c0c <lista_pesquisa@@Base+0x5c>
   11c2c:	mov	r0, r4
   11c30:	pop	{r4, r5, r6, pc}

00011c34 <lista_ordena@@Base>:
   11c34:	cmp	r0, #0
   11c38:	beq	11cb0 <lista_ordena@@Base+0x7c>
   11c3c:	ldr	r3, [r0, #8]
   11c40:	cmp	r3, #0
   11c44:	bne	11c50 <lista_ordena@@Base+0x1c>
   11c48:	mov	r0, #0
   11c4c:	bx	lr
   11c50:	push	{r4, r5, r6, r7, r8, lr}
   11c54:	ldr	r4, [r0]
   11c58:	ldr	r7, [r4, #4]
   11c5c:	cmp	r7, #0
   11c60:	bne	11c6c <lista_ordena@@Base+0x38>
   11c64:	mov	r0, #0
   11c68:	pop	{r4, r5, r6, r7, r8, pc}
   11c6c:	mov	r5, r4
   11c70:	mov	r6, r7
   11c74:	ldr	r1, [r5]
   11c78:	ldr	r0, [r6]
   11c7c:	bl	10ee8 <strcmp@plt>
   11c80:	cmp	r0, #0
   11c84:	movlt	r5, r6
   11c88:	ldr	r6, [r6, #4]
   11c8c:	cmp	r6, #0
   11c90:	bne	11c74 <lista_ordena@@Base+0x40>
   11c94:	cmp	r4, r5
   11c98:	ldrne	r3, [r4]
   11c9c:	ldrne	r2, [r5]
   11ca0:	strne	r2, [r4]
   11ca4:	strne	r3, [r5]
   11ca8:	mov	r4, r7
   11cac:	b	11c58 <lista_ordena@@Base+0x24>
   11cb0:	mvn	r0, #0
   11cb4:	bx	lr

00011cb8 <lista_inverte@@Base>:
   11cb8:	subs	r3, r0, #0
   11cbc:	beq	11d40 <lista_inverte@@Base+0x88>
   11cc0:	ldr	r1, [r3, #8]
   11cc4:	cmp	r1, #1
   11cc8:	ble	11d48 <lista_inverte@@Base+0x90>
   11ccc:	ldr	r2, [r3]
   11cd0:	mov	ip, #0
   11cd4:	sub	r0, r1, #2
   11cd8:	ldr	r2, [r2, #4]
   11cdc:	push	{r4, lr}
   11ce0:	cmp	ip, r0
   11ce4:	ldr	r1, [r3]
   11ce8:	blt	11d14 <lista_inverte@@Base+0x5c>
   11cec:	ldr	r2, [r3, #4]
   11cf0:	mov	r0, #0
   11cf4:	ldr	ip, [r2, #8]
   11cf8:	str	ip, [r3, #4]
   11cfc:	str	r0, [ip, #4]
   11d00:	str	r0, [r2, #8]
   11d04:	str	r1, [r2, #4]
   11d08:	str	r2, [r1, #8]
   11d0c:	str	r2, [r3]
   11d10:	pop	{r4, pc}
   11d14:	ldr	r4, [r2, #8]
   11d18:	ldr	lr, [r2, #4]
   11d1c:	add	ip, ip, #1
   11d20:	str	lr, [r4, #4]
   11d24:	ldr	lr, [r2, #4]
   11d28:	str	r4, [lr, #8]
   11d2c:	str	r1, [r2, #4]
   11d30:	str	r2, [r1, #8]
   11d34:	str	r2, [r3]
   11d38:	mov	r2, lr
   11d3c:	b	11ce0 <lista_inverte@@Base+0x28>
   11d40:	mvn	r0, #0
   11d44:	bx	lr
   11d48:	mov	r0, #0
   11d4c:	bx	lr

00011d50 <tabela_nova@@Base>:
   11d50:	cmp	r1, #0
   11d54:	cmpne	r0, #0
   11d58:	push	{r4, r5, r6, r7, r8, lr}
   11d5c:	bgt	11d6c <tabela_nova@@Base+0x1c>
   11d60:	mov	r4, #0
   11d64:	mov	r0, r4
   11d68:	pop	{r4, r5, r6, r7, r8, pc}
   11d6c:	mov	r5, r0
   11d70:	mov	r0, #12
   11d74:	mov	r6, r1
   11d78:	bl	10f54 <malloc@plt>
   11d7c:	subs	r4, r0, #0
   11d80:	beq	11d60 <tabela_nova@@Base+0x10>
   11d84:	mov	r1, #4
   11d88:	mov	r0, r5
   11d8c:	bl	10ed0 <calloc@plt>
   11d90:	cmp	r0, #0
   11d94:	mov	r7, r0
   11d98:	str	r0, [r4, #4]
   11d9c:	strne	r5, [r4, #8]
   11da0:	strne	r6, [r4]
   11da4:	bne	11d64 <tabela_nova@@Base+0x14>
   11da8:	mov	r0, r4
   11dac:	bl	10f18 <free@plt>
   11db0:	b	11d60 <tabela_nova@@Base+0x10>

00011db4 <tabela_apaga@@Base>:
   11db4:	push	{r4, r5, r6, r7, r8, lr}
   11db8:	subs	r4, r0, #0
   11dbc:	movne	r6, #0
   11dc0:	bne	11ddc <tabela_apaga@@Base+0x28>
   11dc4:	pop	{r4, r5, r6, r7, r8, pc}
   11dc8:	ldr	r3, [r4, #4]
   11dcc:	ldr	r5, [r3, r6, lsl #2]
   11dd0:	cmp	r5, #0
   11dd4:	bne	11dfc <tabela_apaga@@Base+0x48>
   11dd8:	add	r6, r6, #1
   11ddc:	ldr	r3, [r4, #8]
   11de0:	cmp	r6, r3
   11de4:	blt	11dc8 <tabela_apaga@@Base+0x14>
   11de8:	ldr	r0, [r4, #4]
   11dec:	bl	10f18 <free@plt>
   11df0:	mov	r0, r4
   11df4:	pop	{r4, r5, r6, r7, r8, lr}
   11df8:	b	10f18 <free@plt>
   11dfc:	ldm	r5, {r0, r7}
   11e00:	bl	10f18 <free@plt>
   11e04:	mov	r0, r5
   11e08:	bl	10f18 <free@plt>
   11e0c:	mov	r5, r7
   11e10:	b	11dd0 <tabela_apaga@@Base+0x1c>

00011e14 <tabela_adiciona@@Base>:
   11e14:	cmp	r2, #0
   11e18:	cmpne	r1, #0
   11e1c:	moveq	r3, #1
   11e20:	movne	r3, #0
   11e24:	cmp	r0, #0
   11e28:	orreq	r3, r3, #1
   11e2c:	cmp	r3, #0
   11e30:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11e34:	beq	11e44 <tabela_adiciona@@Base+0x30>
   11e38:	mvn	r7, #1
   11e3c:	mov	r0, r7
   11e40:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11e44:	mov	r4, r1
   11e48:	mov	r5, r0
   11e4c:	ldr	r3, [r0]
   11e50:	ldr	r1, [r0, #8]
   11e54:	mov	r0, r4
   11e58:	mov	r6, r2
   11e5c:	blx	r3
   11e60:	ldr	r9, [r5, #4]
   11e64:	ldr	r5, [r9, r0, lsl #2]
   11e68:	mov	r8, r0
   11e6c:	cmp	r5, #0
   11e70:	beq	11ea4 <tabela_adiciona@@Base+0x90>
   11e74:	ldr	sl, [r5]
   11e78:	mov	r1, r4
   11e7c:	mov	r0, sl
   11e80:	bl	10ee8 <strcmp@plt>
   11e84:	subs	r7, r0, #0
   11e88:	bne	11e9c <tabela_adiciona@@Base+0x88>
   11e8c:	mov	r1, r6
   11e90:	add	r0, sl, #25
   11e94:	bl	10f3c <strcpy@plt>
   11e98:	b	11e3c <tabela_adiciona@@Base+0x28>
   11e9c:	ldr	r5, [r5, #4]
   11ea0:	b	11e6c <tabela_adiciona@@Base+0x58>
   11ea4:	mov	r0, #8
   11ea8:	bl	10f54 <malloc@plt>
   11eac:	subs	r7, r0, #0
   11eb0:	beq	11e38 <tabela_adiciona@@Base+0x24>
   11eb4:	mov	r0, #125	; 0x7d
   11eb8:	bl	10f54 <malloc@plt>
   11ebc:	cmp	r0, #0
   11ec0:	mov	sl, r0
   11ec4:	str	r0, [r7]
   11ec8:	beq	11e38 <tabela_adiciona@@Base+0x24>
   11ecc:	mov	r1, r4
   11ed0:	bl	10f3c <strcpy@plt>
   11ed4:	mov	r1, r6
   11ed8:	add	r0, sl, #25
   11edc:	bl	10f3c <strcpy@plt>
   11ee0:	ldr	r3, [r9, r8, lsl #2]
   11ee4:	str	r3, [r7, #4]
   11ee8:	str	r7, [r9, r8, lsl #2]
   11eec:	mov	r7, r5
   11ef0:	b	11e3c <tabela_adiciona@@Base+0x28>

00011ef4 <tabela_remove@@Base>:
   11ef4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11ef8:	subs	r4, r0, #0
   11efc:	mvneq	r6, #1
   11f00:	beq	11f6c <tabela_remove@@Base+0x78>
   11f04:	mov	r5, r1
   11f08:	ldr	r3, [r4]
   11f0c:	ldr	r1, [r4, #8]
   11f10:	mov	r0, r5
   11f14:	blx	r3
   11f18:	ldr	r9, [r4, #4]
   11f1c:	mov	r7, #0
   11f20:	ldr	r4, [r9, r0, lsl #2]
   11f24:	mov	r8, r0
   11f28:	cmp	r4, #0
   11f2c:	mvneq	r6, #2
   11f30:	beq	11f6c <tabela_remove@@Base+0x78>
   11f34:	ldr	sl, [r4]
   11f38:	mov	r1, r5
   11f3c:	mov	r0, sl
   11f40:	bl	10ee8 <strcmp@plt>
   11f44:	ldr	r3, [r4, #4]
   11f48:	subs	r6, r0, #0
   11f4c:	bne	11f74 <tabela_remove@@Base+0x80>
   11f50:	cmp	r7, #0
   11f54:	mov	r0, sl
   11f58:	strne	r3, [r7, #4]
   11f5c:	streq	r3, [r9, r8, lsl #2]
   11f60:	bl	10f18 <free@plt>
   11f64:	mov	r0, r4
   11f68:	bl	10f18 <free@plt>
   11f6c:	mov	r0, r6
   11f70:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11f74:	mov	r7, r4
   11f78:	mov	r4, r3
   11f7c:	b	11f28 <tabela_remove@@Base+0x34>

00011f80 <tabela_valor@@Base>:
   11f80:	push	{r4, r5, r6, lr}
   11f84:	subs	r4, r0, #0
   11f88:	bne	11f94 <tabela_valor@@Base+0x14>
   11f8c:	mov	r0, #0
   11f90:	pop	{r4, r5, r6, pc}
   11f94:	mov	r6, r1
   11f98:	ldr	r3, [r4]
   11f9c:	ldr	r1, [r4, #8]
   11fa0:	mov	r0, r6
   11fa4:	blx	r3
   11fa8:	ldr	r3, [r4, #4]
   11fac:	ldr	r5, [r3, r0, lsl #2]
   11fb0:	cmp	r5, #0
   11fb4:	beq	11f8c <tabela_valor@@Base+0xc>
   11fb8:	ldr	r4, [r5]
   11fbc:	mov	r1, r6
   11fc0:	mov	r0, r4
   11fc4:	bl	10ee8 <strcmp@plt>
   11fc8:	cmp	r0, #0
   11fcc:	bne	11fd8 <tabela_valor@@Base+0x58>
   11fd0:	add	r0, r4, #25
   11fd4:	pop	{r4, r5, r6, pc}
   11fd8:	ldr	r5, [r5, #4]
   11fdc:	b	11fb0 <tabela_valor@@Base+0x30>

00011fe0 <tabela_existe@@Base>:
   11fe0:	cmp	r0, #0
   11fe4:	cmpne	r1, #0
   11fe8:	beq	12004 <tabela_existe@@Base+0x24>
   11fec:	push	{r4, lr}
   11ff0:	bl	11f80 <tabela_valor@@Base>
   11ff4:	cmp	r0, #0
   11ff8:	mvneq	r0, #2
   11ffc:	movne	r0, #1
   12000:	pop	{r4, pc}
   12004:	mvn	r0, #1
   12008:	bx	lr

0001200c <tabela_esvazia@@Base>:
   1200c:	push	{r4, r5, r6, r7, r8, lr}
   12010:	subs	r6, r0, #0
   12014:	movne	r5, #0
   12018:	bne	12044 <tabela_esvazia@@Base+0x38>
   1201c:	mvn	r0, #1
   12020:	pop	{r4, r5, r6, r7, r8, pc}
   12024:	ldr	r3, [r6, #4]
   12028:	lsl	r7, r5, #2
   1202c:	ldr	r4, [r3, r5, lsl #2]
   12030:	cmp	r4, #0
   12034:	bne	12058 <tabela_esvazia@@Base+0x4c>
   12038:	ldr	r3, [r6, #4]
   1203c:	add	r5, r5, #1
   12040:	str	r4, [r3, r7]
   12044:	ldr	r3, [r6, #8]
   12048:	cmp	r5, r3
   1204c:	blt	12024 <tabela_esvazia@@Base+0x18>
   12050:	mov	r0, #0
   12054:	pop	{r4, r5, r6, r7, r8, pc}
   12058:	ldm	r4, {r0, r8}
   1205c:	bl	10f18 <free@plt>
   12060:	mov	r0, r4
   12064:	bl	10f18 <free@plt>
   12068:	mov	r4, r8
   1206c:	b	12030 <tabela_esvazia@@Base+0x24>

00012070 <tabela_numelementos@@Base>:
   12070:	subs	r1, r0, #0
   12074:	movne	r0, #0
   12078:	ldrne	ip, [r1, #8]
   1207c:	movne	r3, r0
   12080:	bne	120a0 <tabela_numelementos@@Base+0x30>
   12084:	mvn	r0, #1
   12088:	bx	lr
   1208c:	ldr	r2, [r1, #4]
   12090:	ldr	r2, [r2, r3, lsl #2]
   12094:	cmp	r2, #0
   12098:	bne	120ac <tabela_numelementos@@Base+0x3c>
   1209c:	add	r3, r3, #1
   120a0:	cmp	r3, ip
   120a4:	blt	1208c <tabela_numelementos@@Base+0x1c>
   120a8:	bx	lr
   120ac:	ldr	r2, [r2, #4]
   120b0:	add	r0, r0, #1
   120b4:	b	12094 <tabela_numelementos@@Base+0x24>

000120b8 <tabela_elementos@@Base>:
   120b8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   120bc:	mov	r4, r1
   120c0:	mov	r9, r0
   120c4:	bl	12070 <tabela_numelementos@@Base>
   120c8:	cmp	r0, #0
   120cc:	str	r0, [r4]
   120d0:	bgt	120e0 <tabela_elementos@@Base+0x28>
   120d4:	mov	r8, #0
   120d8:	mov	r0, r8
   120dc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   120e0:	mov	r7, #125	; 0x7d
   120e4:	mul	r0, r7, r0
   120e8:	bl	10f54 <malloc@plt>
   120ec:	subs	r8, r0, #0
   120f0:	movne	sl, #0
   120f4:	movne	r5, sl
   120f8:	beq	120d4 <tabela_elementos@@Base+0x1c>
   120fc:	ldr	r3, [r9, #8]
   12100:	cmp	r5, r3
   12104:	bge	120d8 <tabela_elementos@@Base+0x20>
   12108:	ldr	r3, [r9, #4]
   1210c:	ldr	r4, [r3, r5, lsl #2]
   12110:	cmp	r4, #0
   12114:	beq	12144 <tabela_elementos@@Base+0x8c>
   12118:	add	r6, sl, #1
   1211c:	mla	r0, r7, r6, r8
   12120:	ldr	r1, [r4]
   12124:	mov	r2, #125	; 0x7d
   12128:	sub	r0, r0, #125	; 0x7d
   1212c:	bl	10f24 <memcpy@plt>
   12130:	ldr	r4, [r4, #4]
   12134:	mov	sl, r6
   12138:	cmp	r4, #0
   1213c:	add	r6, r6, #1
   12140:	bne	1211c <tabela_elementos@@Base+0x64>
   12144:	add	r5, r5, #1
   12148:	b	120fc <tabela_elementos@@Base+0x44>

0001214c <hash_krm@@Base>:
   1214c:	sub	r2, r0, #1
   12150:	mov	r0, #7
   12154:	push	{r4, lr}
   12158:	ldrb	r3, [r2, #1]!
   1215c:	cmp	r3, #0
   12160:	bne	12170 <hash_krm@@Base+0x24>
   12164:	bl	1243c <mostraTabela@@Base+0x28c>
   12168:	mov	r0, r1
   1216c:	pop	{r4, pc}
   12170:	add	r0, r0, r3
   12174:	b	12158 <hash_krm@@Base+0xc>

00012178 <hash_djbm@@Base>:
   12178:	sub	r2, r0, #1
   1217c:	ldr	r0, [pc, #40]	; 121ac <hash_djbm@@Base+0x34>
   12180:	mov	ip, #31
   12184:	push	{r4, lr}
   12188:	ldrb	r3, [r2, #1]!
   1218c:	cmp	r3, #0
   12190:	bne	121a0 <hash_djbm@@Base+0x28>
   12194:	bl	1243c <mostraTabela@@Base+0x28c>
   12198:	mov	r0, r1
   1219c:	pop	{r4, pc}
   121a0:	mul	r0, ip, r0
   121a4:	eor	r0, r0, r3
   121a8:	b	12188 <hash_djbm@@Base+0x10>
   121ac:	andeq	r1, r0, r3, ror #9

000121b0 <mostraTabela@@Base>:
   121b0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   121b4:	mov	r6, r0
   121b8:	bl	12070 <tabela_numelementos@@Base>
   121bc:	ldr	r7, [pc, #128]	; 12244 <mostraTabela@@Base+0x94>
   121c0:	ldr	r8, [pc, #128]	; 12248 <mostraTabela@@Base+0x98>
   121c4:	mov	r4, #0
   121c8:	mov	r9, #10
   121cc:	mov	r1, r0
   121d0:	ldr	r0, [pc, #116]	; 1224c <mostraTabela@@Base+0x9c>
   121d4:	bl	10ef4 <printf@plt>
   121d8:	ldr	r3, [r6, #8]
   121dc:	cmp	r4, r3
   121e0:	blt	121f0 <mostraTabela@@Base+0x40>
   121e4:	mov	r0, #10
   121e8:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   121ec:	b	10f84 <putchar@plt>
   121f0:	ldr	r3, [r6, #4]
   121f4:	ldr	r3, [r3, r4, lsl #2]
   121f8:	cmp	r3, #0
   121fc:	beq	12224 <mostraTabela@@Base+0x74>
   12200:	mov	r1, r4
   12204:	mov	r0, r7
   12208:	bl	10ef4 <printf@plt>
   1220c:	ldr	r3, [r6, #4]
   12210:	ldr	r5, [r3, r4, lsl #2]
   12214:	cmp	r5, #0
   12218:	bne	1222c <mostraTabela@@Base+0x7c>
   1221c:	mov	r0, r9
   12220:	bl	10f84 <putchar@plt>
   12224:	add	r4, r4, #1
   12228:	b	121d8 <mostraTabela@@Base+0x28>
   1222c:	ldr	r1, [r5]
   12230:	mov	r0, r8
   12234:	add	r2, r1, #25
   12238:	bl	10ef4 <printf@plt>
   1223c:	ldr	r5, [r5, #4]
   12240:	b	12214 <mostraTabela@@Base+0x64>
   12244:	andeq	r2, r1, lr, ror r7
   12248:	andeq	r2, r1, r5, lsl #15
   1224c:	andeq	r2, r1, sl, asr r7
   12250:	subs	r2, r1, #1
   12254:	bxeq	lr
   12258:	bcc	12430 <mostraTabela@@Base+0x280>
   1225c:	cmp	r0, r1
   12260:	bls	12414 <mostraTabela@@Base+0x264>
   12264:	tst	r1, r2
   12268:	beq	12420 <mostraTabela@@Base+0x270>
   1226c:	clz	r3, r0
   12270:	clz	r2, r1
   12274:	sub	r3, r2, r3
   12278:	rsbs	r3, r3, #31
   1227c:	addne	r3, r3, r3, lsl #1
   12280:	mov	r2, #0
   12284:	addne	pc, pc, r3, lsl #2
   12288:	nop			; (mov r0, r0)
   1228c:	cmp	r0, r1, lsl #31
   12290:	adc	r2, r2, r2
   12294:	subcs	r0, r0, r1, lsl #31
   12298:	cmp	r0, r1, lsl #30
   1229c:	adc	r2, r2, r2
   122a0:	subcs	r0, r0, r1, lsl #30
   122a4:	cmp	r0, r1, lsl #29
   122a8:	adc	r2, r2, r2
   122ac:	subcs	r0, r0, r1, lsl #29
   122b0:	cmp	r0, r1, lsl #28
   122b4:	adc	r2, r2, r2
   122b8:	subcs	r0, r0, r1, lsl #28
   122bc:	cmp	r0, r1, lsl #27
   122c0:	adc	r2, r2, r2
   122c4:	subcs	r0, r0, r1, lsl #27
   122c8:	cmp	r0, r1, lsl #26
   122cc:	adc	r2, r2, r2
   122d0:	subcs	r0, r0, r1, lsl #26
   122d4:	cmp	r0, r1, lsl #25
   122d8:	adc	r2, r2, r2
   122dc:	subcs	r0, r0, r1, lsl #25
   122e0:	cmp	r0, r1, lsl #24
   122e4:	adc	r2, r2, r2
   122e8:	subcs	r0, r0, r1, lsl #24
   122ec:	cmp	r0, r1, lsl #23
   122f0:	adc	r2, r2, r2
   122f4:	subcs	r0, r0, r1, lsl #23
   122f8:	cmp	r0, r1, lsl #22
   122fc:	adc	r2, r2, r2
   12300:	subcs	r0, r0, r1, lsl #22
   12304:	cmp	r0, r1, lsl #21
   12308:	adc	r2, r2, r2
   1230c:	subcs	r0, r0, r1, lsl #21
   12310:	cmp	r0, r1, lsl #20
   12314:	adc	r2, r2, r2
   12318:	subcs	r0, r0, r1, lsl #20
   1231c:	cmp	r0, r1, lsl #19
   12320:	adc	r2, r2, r2
   12324:	subcs	r0, r0, r1, lsl #19
   12328:	cmp	r0, r1, lsl #18
   1232c:	adc	r2, r2, r2
   12330:	subcs	r0, r0, r1, lsl #18
   12334:	cmp	r0, r1, lsl #17
   12338:	adc	r2, r2, r2
   1233c:	subcs	r0, r0, r1, lsl #17
   12340:	cmp	r0, r1, lsl #16
   12344:	adc	r2, r2, r2
   12348:	subcs	r0, r0, r1, lsl #16
   1234c:	cmp	r0, r1, lsl #15
   12350:	adc	r2, r2, r2
   12354:	subcs	r0, r0, r1, lsl #15
   12358:	cmp	r0, r1, lsl #14
   1235c:	adc	r2, r2, r2
   12360:	subcs	r0, r0, r1, lsl #14
   12364:	cmp	r0, r1, lsl #13
   12368:	adc	r2, r2, r2
   1236c:	subcs	r0, r0, r1, lsl #13
   12370:	cmp	r0, r1, lsl #12
   12374:	adc	r2, r2, r2
   12378:	subcs	r0, r0, r1, lsl #12
   1237c:	cmp	r0, r1, lsl #11
   12380:	adc	r2, r2, r2
   12384:	subcs	r0, r0, r1, lsl #11
   12388:	cmp	r0, r1, lsl #10
   1238c:	adc	r2, r2, r2
   12390:	subcs	r0, r0, r1, lsl #10
   12394:	cmp	r0, r1, lsl #9
   12398:	adc	r2, r2, r2
   1239c:	subcs	r0, r0, r1, lsl #9
   123a0:	cmp	r0, r1, lsl #8
   123a4:	adc	r2, r2, r2
   123a8:	subcs	r0, r0, r1, lsl #8
   123ac:	cmp	r0, r1, lsl #7
   123b0:	adc	r2, r2, r2
   123b4:	subcs	r0, r0, r1, lsl #7
   123b8:	cmp	r0, r1, lsl #6
   123bc:	adc	r2, r2, r2
   123c0:	subcs	r0, r0, r1, lsl #6
   123c4:	cmp	r0, r1, lsl #5
   123c8:	adc	r2, r2, r2
   123cc:	subcs	r0, r0, r1, lsl #5
   123d0:	cmp	r0, r1, lsl #4
   123d4:	adc	r2, r2, r2
   123d8:	subcs	r0, r0, r1, lsl #4
   123dc:	cmp	r0, r1, lsl #3
   123e0:	adc	r2, r2, r2
   123e4:	subcs	r0, r0, r1, lsl #3
   123e8:	cmp	r0, r1, lsl #2
   123ec:	adc	r2, r2, r2
   123f0:	subcs	r0, r0, r1, lsl #2
   123f4:	cmp	r0, r1, lsl #1
   123f8:	adc	r2, r2, r2
   123fc:	subcs	r0, r0, r1, lsl #1
   12400:	cmp	r0, r1
   12404:	adc	r2, r2, r2
   12408:	subcs	r0, r0, r1
   1240c:	mov	r0, r2
   12410:	bx	lr
   12414:	moveq	r0, #1
   12418:	movne	r0, #0
   1241c:	bx	lr
   12420:	clz	r2, r1
   12424:	rsb	r2, r2, #31
   12428:	lsr	r0, r0, r2
   1242c:	bx	lr
   12430:	cmp	r0, #0
   12434:	mvnne	r0, #0
   12438:	b	1245c <mostraTabela@@Base+0x2ac>
   1243c:	cmp	r1, #0
   12440:	beq	12430 <mostraTabela@@Base+0x280>
   12444:	push	{r0, r1, lr}
   12448:	bl	12250 <mostraTabela@@Base+0xa0>
   1244c:	pop	{r1, r2, lr}
   12450:	mul	r3, r2, r0
   12454:	sub	r1, r1, r3
   12458:	bx	lr
   1245c:	push	{r1, lr}
   12460:	mov	r0, #8
   12464:	bl	10edc <raise@plt>
   12468:	pop	{r1, pc}

0001246c <__libc_csu_init@@Base>:
   1246c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12470:	mov	r7, r0
   12474:	ldr	r6, [pc, #72]	; 124c4 <__libc_csu_init@@Base+0x58>
   12478:	ldr	r5, [pc, #72]	; 124c8 <__libc_csu_init@@Base+0x5c>
   1247c:	add	r6, pc, r6
   12480:	add	r5, pc, r5
   12484:	sub	r6, r6, r5
   12488:	mov	r8, r1
   1248c:	mov	r9, r2
   12490:	bl	10eb0 <calloc@plt-0x20>
   12494:	asrs	r6, r6, #2
   12498:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1249c:	mov	r4, #0
   124a0:	add	r4, r4, #1
   124a4:	ldr	r3, [r5], #4
   124a8:	mov	r2, r9
   124ac:	mov	r1, r8
   124b0:	mov	r0, r7
   124b4:	blx	r3
   124b8:	cmp	r6, r4
   124bc:	bne	124a0 <__libc_csu_init@@Base+0x34>
   124c0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   124c4:	andeq	r0, r1, ip, lsl #21
   124c8:	andeq	r0, r1, r4, lsl #21

000124cc <__libc_csu_fini@@Base>:
   124cc:	bx	lr

Disassembly of section .fini:

000124d0 <.fini>:
   124d0:	push	{r3, lr}
   124d4:	pop	{r3, pc}
