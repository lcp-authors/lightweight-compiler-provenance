
../repos/coreutils/src/getlimits:     file format elf32-littlearm


Disassembly of section .init:

00010d18 <.init>:
   10d18:	push	{r3, lr}
   10d1c:	bl	10fb4 <__snprintf_chk@plt+0x48>
   10d20:	pop	{r3, pc}

Disassembly of section .plt:

00010d24 <calloc@plt-0x14>:
   10d24:	push	{lr}		; (str lr, [sp, #-4]!)
   10d28:	ldr	lr, [pc, #4]	; 10d34 <calloc@plt-0x4>
   10d2c:	add	lr, pc, lr
   10d30:	ldr	pc, [lr, #8]!
   10d34:	andeq	r5, r1, ip, asr #5

00010d38 <calloc@plt>:
   10d38:	add	ip, pc, #0, 12
   10d3c:	add	ip, ip, #86016	; 0x15000
   10d40:	ldr	pc, [ip, #716]!	; 0x2cc

00010d44 <fputs_unlocked@plt>:
   10d44:	add	ip, pc, #0, 12
   10d48:	add	ip, ip, #86016	; 0x15000
   10d4c:	ldr	pc, [ip, #708]!	; 0x2c4

00010d50 <strcmp@plt>:
   10d50:	add	ip, pc, #0, 12
   10d54:	add	ip, ip, #86016	; 0x15000
   10d58:	ldr	pc, [ip, #700]!	; 0x2bc

00010d5c <fflush@plt>:
   10d5c:	add	ip, pc, #0, 12
   10d60:	add	ip, ip, #86016	; 0x15000
   10d64:	ldr	pc, [ip, #692]!	; 0x2b4

00010d68 <free@plt>:
   10d68:	add	ip, pc, #0, 12
   10d6c:	add	ip, ip, #86016	; 0x15000
   10d70:	ldr	pc, [ip, #684]!	; 0x2ac

00010d74 <_exit@plt>:
   10d74:	add	ip, pc, #0, 12
   10d78:	add	ip, ip, #86016	; 0x15000
   10d7c:	ldr	pc, [ip, #676]!	; 0x2a4

00010d80 <memcpy@plt>:
   10d80:	add	ip, pc, #0, 12
   10d84:	add	ip, ip, #86016	; 0x15000
   10d88:	ldr	pc, [ip, #668]!	; 0x29c

00010d8c <mbsinit@plt>:
   10d8c:	add	ip, pc, #0, 12
   10d90:	add	ip, ip, #86016	; 0x15000
   10d94:	ldr	pc, [ip, #660]!	; 0x294

00010d98 <strtold@plt>:
   10d98:	add	ip, pc, #0, 12
   10d9c:	add	ip, ip, #86016	; 0x15000
   10da0:	ldr	pc, [ip, #652]!	; 0x28c

00010da4 <memcmp@plt>:
   10da4:	add	ip, pc, #0, 12
   10da8:	add	ip, ip, #86016	; 0x15000
   10dac:	ldr	pc, [ip, #644]!	; 0x284

00010db0 <dcgettext@plt>:
   10db0:	add	ip, pc, #0, 12
   10db4:	add	ip, ip, #86016	; 0x15000
   10db8:	ldr	pc, [ip, #636]!	; 0x27c

00010dbc <realloc@plt>:
   10dbc:	add	ip, pc, #0, 12
   10dc0:	add	ip, ip, #86016	; 0x15000
   10dc4:	ldr	pc, [ip, #628]!	; 0x274

00010dc8 <textdomain@plt>:
   10dc8:	add	ip, pc, #0, 12
   10dcc:	add	ip, ip, #86016	; 0x15000
   10dd0:	ldr	pc, [ip, #620]!	; 0x26c

00010dd4 <iswprint@plt>:
   10dd4:	add	ip, pc, #0, 12
   10dd8:	add	ip, ip, #86016	; 0x15000
   10ddc:	ldr	pc, [ip, #612]!	; 0x264

00010de0 <lseek64@plt>:
   10de0:	add	ip, pc, #0, 12
   10de4:	add	ip, ip, #86016	; 0x15000
   10de8:	ldr	pc, [ip, #604]!	; 0x25c

00010dec <__ctype_get_mb_cur_max@plt>:
   10dec:	add	ip, pc, #0, 12
   10df0:	add	ip, ip, #86016	; 0x15000
   10df4:	ldr	pc, [ip, #596]!	; 0x254

00010df8 <__fpending@plt>:
   10df8:	add	ip, pc, #0, 12
   10dfc:	add	ip, ip, #86016	; 0x15000
   10e00:	ldr	pc, [ip, #588]!	; 0x24c

00010e04 <ferror_unlocked@plt>:
   10e04:	add	ip, pc, #0, 12
   10e08:	add	ip, ip, #86016	; 0x15000
   10e0c:	ldr	pc, [ip, #580]!	; 0x244

00010e10 <mbrtowc@plt>:
   10e10:	add	ip, pc, #0, 12
   10e14:	add	ip, ip, #86016	; 0x15000
   10e18:	ldr	pc, [ip, #572]!	; 0x23c

00010e1c <error@plt>:
   10e1c:	add	ip, pc, #0, 12
   10e20:	add	ip, ip, #86016	; 0x15000
   10e24:	ldr	pc, [ip, #564]!	; 0x234

00010e28 <strtof@plt>:
   10e28:	add	ip, pc, #0, 12
   10e2c:	add	ip, ip, #86016	; 0x15000
   10e30:	ldr	pc, [ip, #556]!	; 0x22c

00010e34 <puts@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #86016	; 0x15000
   10e3c:	ldr	pc, [ip, #548]!	; 0x224

00010e40 <malloc@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #86016	; 0x15000
   10e48:	ldr	pc, [ip, #540]!	; 0x21c

00010e4c <__libc_start_main@plt>:
   10e4c:	add	ip, pc, #0, 12
   10e50:	add	ip, ip, #86016	; 0x15000
   10e54:	ldr	pc, [ip, #532]!	; 0x214

00010e58 <__freading@plt>:
   10e58:	add	ip, pc, #0, 12
   10e5c:	add	ip, ip, #86016	; 0x15000
   10e60:	ldr	pc, [ip, #524]!	; 0x20c

00010e64 <__gmon_start__@plt>:
   10e64:	add	ip, pc, #0, 12
   10e68:	add	ip, ip, #86016	; 0x15000
   10e6c:	ldr	pc, [ip, #516]!	; 0x204

00010e70 <getopt_long@plt>:
   10e70:	add	ip, pc, #0, 12
   10e74:	add	ip, ip, #86016	; 0x15000
   10e78:	ldr	pc, [ip, #508]!	; 0x1fc

00010e7c <__ctype_b_loc@plt>:
   10e7c:	add	ip, pc, #0, 12
   10e80:	add	ip, ip, #86016	; 0x15000
   10e84:	ldr	pc, [ip, #500]!	; 0x1f4

00010e88 <exit@plt>:
   10e88:	add	ip, pc, #0, 12
   10e8c:	add	ip, ip, #86016	; 0x15000
   10e90:	ldr	pc, [ip, #492]!	; 0x1ec

00010e94 <strlen@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #86016	; 0x15000
   10e9c:	ldr	pc, [ip, #484]!	; 0x1e4

00010ea0 <__errno_location@plt>:
   10ea0:	add	ip, pc, #0, 12
   10ea4:	add	ip, ip, #86016	; 0x15000
   10ea8:	ldr	pc, [ip, #476]!	; 0x1dc

00010eac <__sprintf_chk@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #86016	; 0x15000
   10eb4:	ldr	pc, [ip, #468]!	; 0x1d4

00010eb8 <__cxa_atexit@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #86016	; 0x15000
   10ec0:	ldr	pc, [ip, #460]!	; 0x1cc

00010ec4 <memset@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #86016	; 0x15000
   10ecc:	ldr	pc, [ip, #452]!	; 0x1c4

00010ed0 <__printf_chk@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #86016	; 0x15000
   10ed8:	ldr	pc, [ip, #444]!	; 0x1bc

00010edc <strtod@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #86016	; 0x15000
   10ee4:	ldr	pc, [ip, #436]!	; 0x1b4

00010ee8 <fileno@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #86016	; 0x15000
   10ef0:	ldr	pc, [ip, #428]!	; 0x1ac

00010ef4 <__fprintf_chk@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #86016	; 0x15000
   10efc:	ldr	pc, [ip, #420]!	; 0x1a4

00010f00 <fclose@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #86016	; 0x15000
   10f08:	ldr	pc, [ip, #412]!	; 0x19c

00010f0c <fseeko64@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #86016	; 0x15000
   10f14:	ldr	pc, [ip, #404]!	; 0x194

00010f18 <setlocale@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #86016	; 0x15000
   10f20:	ldr	pc, [ip, #396]!	; 0x18c

00010f24 <strrchr@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #86016	; 0x15000
   10f2c:	ldr	pc, [ip, #388]!	; 0x184

00010f30 <nl_langinfo@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #86016	; 0x15000
   10f38:	ldr	pc, [ip, #380]!	; 0x17c

00010f3c <bindtextdomain@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #86016	; 0x15000
   10f44:	ldr	pc, [ip, #372]!	; 0x174

00010f48 <fputs@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #86016	; 0x15000
   10f50:	ldr	pc, [ip, #364]!	; 0x16c

00010f54 <strncmp@plt>:
   10f54:	add	ip, pc, #0, 12
   10f58:	add	ip, ip, #86016	; 0x15000
   10f5c:	ldr	pc, [ip, #356]!	; 0x164

00010f60 <abort@plt>:
   10f60:	add	ip, pc, #0, 12
   10f64:	add	ip, ip, #86016	; 0x15000
   10f68:	ldr	pc, [ip, #348]!	; 0x15c

00010f6c <__snprintf_chk@plt>:
   10f6c:	add	ip, pc, #0, 12
   10f70:	add	ip, ip, #86016	; 0x15000
   10f74:	ldr	pc, [ip, #340]!	; 0x154

Disassembly of section .text:

00010f78 <.text>:
   10f78:	mov	fp, #0
   10f7c:	mov	lr, #0
   10f80:	pop	{r1}		; (ldr r1, [sp], #4)
   10f84:	mov	r2, sp
   10f88:	push	{r2}		; (str r2, [sp, #-4]!)
   10f8c:	push	{r0}		; (str r0, [sp, #-4]!)
   10f90:	ldr	ip, [pc, #16]	; 10fa8 <__snprintf_chk@plt+0x3c>
   10f94:	push	{ip}		; (str ip, [sp, #-4]!)
   10f98:	ldr	r0, [pc, #12]	; 10fac <__snprintf_chk@plt+0x40>
   10f9c:	ldr	r3, [pc, #12]	; 10fb0 <__snprintf_chk@plt+0x44>
   10fa0:	bl	10e4c <__libc_start_main@plt>
   10fa4:	bl	10f60 <abort@plt>
   10fa8:	andeq	r4, r1, r0, asr sp
   10fac:	muleq	r1, r0, r2
   10fb0:	strdeq	r4, [r1], -r0
   10fb4:	ldr	r3, [pc, #20]	; 10fd0 <__snprintf_chk@plt+0x64>
   10fb8:	ldr	r2, [pc, #20]	; 10fd4 <__snprintf_chk@plt+0x68>
   10fbc:	add	r3, pc, r3
   10fc0:	ldr	r2, [r3, r2]
   10fc4:	cmp	r2, #0
   10fc8:	bxeq	lr
   10fcc:	b	10e64 <__gmon_start__@plt>
   10fd0:	andeq	r5, r1, ip, lsr r0
   10fd4:	andeq	r0, r0, ip, asr #1
   10fd8:	ldr	r0, [pc, #24]	; 10ff8 <__snprintf_chk@plt+0x8c>
   10fdc:	ldr	r3, [pc, #24]	; 10ffc <__snprintf_chk@plt+0x90>
   10fe0:	cmp	r3, r0
   10fe4:	bxeq	lr
   10fe8:	ldr	r3, [pc, #16]	; 11000 <__snprintf_chk@plt+0x94>
   10fec:	cmp	r3, #0
   10ff0:	bxeq	lr
   10ff4:	bx	r3
   10ff8:	andeq	r6, r2, r0, lsr #2
   10ffc:	andeq	r6, r2, r0, lsr #2
   11000:	andeq	r0, r0, r0
   11004:	ldr	r0, [pc, #36]	; 11030 <__snprintf_chk@plt+0xc4>
   11008:	ldr	r1, [pc, #36]	; 11034 <__snprintf_chk@plt+0xc8>
   1100c:	sub	r1, r1, r0
   11010:	asr	r1, r1, #2
   11014:	add	r1, r1, r1, lsr #31
   11018:	asrs	r1, r1, #1
   1101c:	bxeq	lr
   11020:	ldr	r3, [pc, #16]	; 11038 <__snprintf_chk@plt+0xcc>
   11024:	cmp	r3, #0
   11028:	bxeq	lr
   1102c:	bx	r3
   11030:	andeq	r6, r2, r0, lsr #2
   11034:	andeq	r6, r2, r0, lsr #2
   11038:	andeq	r0, r0, r0
   1103c:	push	{r4, lr}
   11040:	ldr	r4, [pc, #24]	; 11060 <__snprintf_chk@plt+0xf4>
   11044:	ldrb	r3, [r4]
   11048:	cmp	r3, #0
   1104c:	popne	{r4, pc}
   11050:	bl	10fd8 <__snprintf_chk@plt+0x6c>
   11054:	mov	r3, #1
   11058:	strb	r3, [r4]
   1105c:	pop	{r4, pc}
   11060:	andeq	r6, r2, ip, lsr r1
   11064:	b	11004 <__snprintf_chk@plt+0x98>
   11068:	push	{fp, lr}
   1106c:	mov	fp, sp
   11070:	sub	sp, sp, #56	; 0x38
   11074:	mov	r8, r0
   11078:	cmp	r0, #0
   1107c:	bne	1124c <__snprintf_chk@plt+0x2e0>
   11080:	movw	r1, #19875	; 0x4da3
   11084:	mov	r0, #0
   11088:	mov	r2, #5
   1108c:	movt	r1, #1
   11090:	bl	10db0 <dcgettext@plt>
   11094:	mov	r1, r0
   11098:	movw	r0, #24904	; 0x6148
   1109c:	movt	r0, #2
   110a0:	ldr	r2, [r0]
   110a4:	mov	r0, #1
   110a8:	bl	10ed0 <__printf_chk@plt>
   110ac:	movw	r1, #19886	; 0x4dae
   110b0:	mov	r0, #0
   110b4:	mov	r2, #5
   110b8:	movt	r1, #1
   110bc:	bl	10db0 <dcgettext@plt>
   110c0:	movw	r9, #24884	; 0x6134
   110c4:	movt	r9, #2
   110c8:	ldr	r1, [r9]
   110cc:	bl	10d44 <fputs_unlocked@plt>
   110d0:	movw	r1, #19959	; 0x4df7
   110d4:	mov	r0, #0
   110d8:	mov	r2, #5
   110dc:	movt	r1, #1
   110e0:	bl	10db0 <dcgettext@plt>
   110e4:	ldr	r1, [r9]
   110e8:	bl	10d44 <fputs_unlocked@plt>
   110ec:	movw	r1, #20004	; 0x4e24
   110f0:	mov	r0, #0
   110f4:	mov	r2, #5
   110f8:	movt	r1, #1
   110fc:	bl	10db0 <dcgettext@plt>
   11100:	ldr	r1, [r9]
   11104:	bl	10d44 <fputs_unlocked@plt>
   11108:	movw	r0, #21128	; 0x5288
   1110c:	mov	r6, sp
   11110:	movt	r0, #1
   11114:	mov	r1, r6
   11118:	ldm	r0!, {r2, r3, r4, r5}
   1111c:	stmia	r1!, {r2, r3, r4, r5}
   11120:	ldm	r0!, {r2, r3, r4, r5, r7}
   11124:	stmia	r1!, {r2, r3, r4, r5, r7}
   11128:	ldm	r0, {r2, r3, r4, r5, r7}
   1112c:	stm	r1, {r2, r3, r4, r5, r7}
   11130:	movw	r1, #20811	; 0x514b
   11134:	movw	r5, #20058	; 0x4e5a
   11138:	movt	r1, #1
   1113c:	movt	r5, #1
   11140:	mov	r0, r5
   11144:	bl	10d50 <strcmp@plt>
   11148:	cmp	r0, #0
   1114c:	ldrne	r1, [r6, #8]!
   11150:	cmpne	r1, #0
   11154:	bne	11140 <__snprintf_chk@plt+0x1d4>
   11158:	ldr	r6, [r6, #4]
   1115c:	movw	r1, #20906	; 0x51aa
   11160:	mov	r0, #0
   11164:	mov	r2, #5
   11168:	movt	r1, #1
   1116c:	bl	10db0 <dcgettext@plt>
   11170:	movw	r2, #20092	; 0x4e7c
   11174:	movw	r3, #20929	; 0x51c1
   11178:	mov	r1, r0
   1117c:	mov	r0, #1
   11180:	movt	r2, #1
   11184:	movt	r3, #1
   11188:	bl	10ed0 <__printf_chk@plt>
   1118c:	cmp	r6, #0
   11190:	mov	r0, #5
   11194:	mov	r1, #0
   11198:	moveq	r6, r5
   1119c:	bl	10f18 <setlocale@plt>
   111a0:	cmp	r0, #0
   111a4:	beq	111dc <__snprintf_chk@plt+0x270>
   111a8:	movw	r1, #20969	; 0x51e9
   111ac:	mov	r2, #3
   111b0:	movt	r1, #1
   111b4:	bl	10f54 <strncmp@plt>
   111b8:	cmp	r0, #0
   111bc:	beq	111dc <__snprintf_chk@plt+0x270>
   111c0:	movw	r1, #20973	; 0x51ed
   111c4:	mov	r0, #0
   111c8:	mov	r2, #5
   111cc:	movt	r1, #1
   111d0:	bl	10db0 <dcgettext@plt>
   111d4:	ldr	r1, [r9]
   111d8:	bl	10d44 <fputs_unlocked@plt>
   111dc:	movw	r1, #21044	; 0x5234
   111e0:	mov	r0, #0
   111e4:	mov	r2, #5
   111e8:	movt	r1, #1
   111ec:	bl	10db0 <dcgettext@plt>
   111f0:	movw	r2, #20929	; 0x51c1
   111f4:	mov	r1, r0
   111f8:	mov	r0, #1
   111fc:	mov	r3, r5
   11200:	movt	r2, #1
   11204:	bl	10ed0 <__printf_chk@plt>
   11208:	movw	r1, #21071	; 0x524f
   1120c:	mov	r0, #0
   11210:	mov	r2, #5
   11214:	movt	r1, #1
   11218:	bl	10db0 <dcgettext@plt>
   1121c:	movw	r3, #19958	; 0x4df6
   11220:	mov	r1, r0
   11224:	movw	r0, #20839	; 0x5167
   11228:	cmp	r6, r5
   1122c:	mov	r2, r6
   11230:	movt	r0, #1
   11234:	movt	r3, #1
   11238:	moveq	r3, r0
   1123c:	mov	r0, #1
   11240:	bl	10ed0 <__printf_chk@plt>
   11244:	mov	r0, r8
   11248:	bl	10e88 <exit@plt>
   1124c:	movw	r0, #24880	; 0x6130
   11250:	movw	r1, #19836	; 0x4d7c
   11254:	mov	r2, #5
   11258:	movt	r0, #2
   1125c:	movt	r1, #1
   11260:	ldr	r5, [r0]
   11264:	mov	r0, #0
   11268:	bl	10db0 <dcgettext@plt>
   1126c:	mov	r2, r0
   11270:	movw	r0, #24904	; 0x6148
   11274:	mov	r1, #1
   11278:	movt	r0, #2
   1127c:	ldr	r3, [r0]
   11280:	mov	r0, r5
   11284:	bl	10ef4 <__fprintf_chk@plt>
   11288:	b	11244 <__snprintf_chk@plt+0x2d8>
   1128c:	nop	{0}
   11290:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11294:	add	fp, sp, #28
   11298:	sub	sp, sp, #4
   1129c:	vpush	{d8-d9}
   112a0:	sub	sp, sp, #80	; 0x50
   112a4:	mov	r5, r0
   112a8:	ldr	r0, [r1]
   112ac:	mov	r4, r1
   112b0:	bl	12380 <__snprintf_chk@plt+0x1414>
   112b4:	movw	r1, #19958	; 0x4df6
   112b8:	mov	r0, #6
   112bc:	movt	r1, #1
   112c0:	bl	10f18 <setlocale@plt>
   112c4:	movw	r6, #20096	; 0x4e80
   112c8:	movw	r1, #20068	; 0x4e64
   112cc:	movt	r6, #1
   112d0:	movt	r1, #1
   112d4:	mov	r0, r6
   112d8:	bl	10f3c <bindtextdomain@plt>
   112dc:	mov	r0, r6
   112e0:	bl	10dc8 <textdomain@plt>
   112e4:	movw	r0, #7472	; 0x1d30
   112e8:	movt	r0, #1
   112ec:	bl	14d54 <__snprintf_chk@plt+0x3de8>
   112f0:	movw	r2, #20106	; 0x4e8a
   112f4:	movw	r0, #20121	; 0x4e99
   112f8:	movw	r1, #4200	; 0x1068
   112fc:	movw	r3, #20092	; 0x4e7c
   11300:	mov	r8, #0
   11304:	movt	r2, #1
   11308:	movt	r0, #1
   1130c:	movt	r1, #1
   11310:	movt	r3, #1
   11314:	str	r8, [sp, #12]
   11318:	str	r2, [sp]
   1131c:	movw	r2, #20058	; 0x4e5a
   11320:	str	r1, [sp, #4]
   11324:	str	r0, [sp, #8]
   11328:	mov	r0, r5
   1132c:	mov	r1, r4
   11330:	movt	r2, #1
   11334:	bl	12208 <__snprintf_chk@plt+0x129c>
   11338:	movw	sl, #20135	; 0x4ea7
   1133c:	add	r4, sp, #18
   11340:	mov	r9, #255	; 0xff
   11344:	mov	r1, #1
   11348:	mov	r2, #21
   1134c:	str	r8, [sp, #4]
   11350:	add	r5, r4, #1
   11354:	movt	sl, #1
   11358:	str	r9, [sp]
   1135c:	mov	r0, r5
   11360:	mov	r3, sl
   11364:	bl	10eac <__sprintf_chk@plt>
   11368:	movw	r1, #20141	; 0x4ead
   1136c:	mov	r0, #1
   11370:	mov	r2, r5
   11374:	movt	r1, #1
   11378:	bl	10ed0 <__printf_chk@plt>
   1137c:	mov	r0, r4
   11380:	bl	11cb0 <__snprintf_chk@plt+0xd44>
   11384:	movw	r1, #20155	; 0x4ebb
   11388:	mov	r2, r0
   1138c:	mov	r0, #1
   11390:	movt	r1, #1
   11394:	bl	10ed0 <__printf_chk@plt>
   11398:	mov	r0, #127	; 0x7f
   1139c:	mov	r1, #1
   113a0:	mov	r2, #21
   113a4:	mov	r3, sl
   113a8:	stm	sp, {r0, r8}
   113ac:	mov	r0, r5
   113b0:	bl	10eac <__sprintf_chk@plt>
   113b4:	movw	r1, #20140	; 0x4eac
   113b8:	mov	r0, #1
   113bc:	mov	r2, r5
   113c0:	movt	r1, #1
   113c4:	bl	10ed0 <__printf_chk@plt>
   113c8:	mov	r0, r4
   113cc:	bl	11cb0 <__snprintf_chk@plt+0xd44>
   113d0:	movw	r1, #20154	; 0x4eba
   113d4:	mov	r2, r0
   113d8:	mov	r0, #1
   113dc:	movt	r1, #1
   113e0:	bl	10ed0 <__printf_chk@plt>
   113e4:	movw	r6, #20170	; 0x4eca
   113e8:	mvn	r1, #0
   113ec:	mvn	r0, #127	; 0x7f
   113f0:	mov	r2, #21
   113f4:	movt	r6, #1
   113f8:	stm	sp, {r0, r1}
   113fc:	mov	r0, r5
   11400:	mov	r1, #1
   11404:	mov	r3, r6
   11408:	bl	10eac <__sprintf_chk@plt>
   1140c:	movw	r1, #20175	; 0x4ecf
   11410:	mov	r0, #1
   11414:	mov	r2, r5
   11418:	movt	r1, #1
   1141c:	bl	10ed0 <__printf_chk@plt>
   11420:	mov	r0, r4
   11424:	bl	11cb0 <__snprintf_chk@plt+0xd44>
   11428:	movw	r1, #20189	; 0x4edd
   1142c:	mov	r2, r0
   11430:	mov	r0, #1
   11434:	movt	r1, #1
   11438:	bl	10ed0 <__printf_chk@plt>
   1143c:	mov	r0, r5
   11440:	mov	r1, #1
   11444:	mov	r2, #21
   11448:	mov	r3, sl
   1144c:	str	r9, [sp]
   11450:	str	r8, [sp, #4]
   11454:	bl	10eac <__sprintf_chk@plt>
   11458:	movw	r1, #20205	; 0x4eed
   1145c:	mov	r0, #1
   11460:	mov	r2, r5
   11464:	movt	r1, #1
   11468:	bl	10ed0 <__printf_chk@plt>
   1146c:	mov	r0, r4
   11470:	bl	11cb0 <__snprintf_chk@plt+0xd44>
   11474:	movw	r1, #20219	; 0x4efb
   11478:	mov	r2, r0
   1147c:	mov	r0, #1
   11480:	movt	r1, #1
   11484:	bl	10ed0 <__printf_chk@plt>
   11488:	movw	r0, #32767	; 0x7fff
   1148c:	mov	r1, #1
   11490:	mov	r2, #21
   11494:	mov	r3, sl
   11498:	stm	sp, {r0, r8}
   1149c:	mov	r0, r5
   114a0:	bl	10eac <__sprintf_chk@plt>
   114a4:	movw	r1, #20235	; 0x4f0b
   114a8:	mov	r0, #1
   114ac:	mov	r2, r5
   114b0:	movt	r1, #1
   114b4:	bl	10ed0 <__printf_chk@plt>
   114b8:	mov	r0, r4
   114bc:	bl	11cb0 <__snprintf_chk@plt+0xd44>
   114c0:	movw	r1, #20248	; 0x4f18
   114c4:	mov	r2, r0
   114c8:	mov	r0, #1
   114cc:	movt	r1, #1
   114d0:	bl	10ed0 <__printf_chk@plt>
   114d4:	movw	r0, #32768	; 0x8000
   114d8:	mov	r1, #1
   114dc:	mov	r2, #21
   114e0:	mov	r3, r6
   114e4:	mvn	r9, #0
   114e8:	mov	r7, r6
   114ec:	movt	r0, #65535	; 0xffff
   114f0:	str	r0, [sp]
   114f4:	mvn	r0, #0
   114f8:	str	r0, [sp, #4]
   114fc:	mov	r0, r5
   11500:	bl	10eac <__sprintf_chk@plt>
   11504:	movw	r1, #20263	; 0x4f27
   11508:	mov	r0, #1
   1150c:	mov	r2, r5
   11510:	movt	r1, #1
   11514:	bl	10ed0 <__printf_chk@plt>
   11518:	mov	r0, r4
   1151c:	bl	11cb0 <__snprintf_chk@plt+0xd44>
   11520:	movw	r1, #20276	; 0x4f34
   11524:	mov	r2, r0
   11528:	mov	r0, #1
   1152c:	movt	r1, #1
   11530:	bl	10ed0 <__printf_chk@plt>
   11534:	mvn	r0, #-2147483648	; 0x80000000
   11538:	mov	r1, #1
   1153c:	mov	r2, #21
   11540:	mov	r3, sl
   11544:	stm	sp, {r0, r8}
   11548:	mov	r0, r5
   1154c:	bl	10eac <__sprintf_chk@plt>
   11550:	movw	r1, #20318	; 0x4f5e
   11554:	mov	r0, #1
   11558:	mov	r2, r5
   1155c:	movt	r1, #1
   11560:	bl	10ed0 <__printf_chk@plt>
   11564:	mov	r0, r4
   11568:	bl	11cb0 <__snprintf_chk@plt+0xd44>
   1156c:	movw	r1, #20331	; 0x4f6b
   11570:	mov	r2, r0
   11574:	mov	r0, #1
   11578:	movt	r1, #1
   1157c:	bl	10ed0 <__printf_chk@plt>
   11580:	mov	r0, #-2147483648	; 0x80000000
   11584:	mov	r1, #1
   11588:	mov	r2, #21
   1158c:	mov	r3, r7
   11590:	mov	r6, #-2147483648	; 0x80000000
   11594:	str	r9, [sp, #4]
   11598:	str	r0, [sp]
   1159c:	mov	r0, r5
   115a0:	bl	10eac <__sprintf_chk@plt>
   115a4:	movw	r1, #20291	; 0x4f43
   115a8:	mov	r0, #1
   115ac:	mov	r2, r5
   115b0:	movt	r1, #1
   115b4:	bl	10ed0 <__printf_chk@plt>
   115b8:	mov	r0, r4
   115bc:	bl	11cb0 <__snprintf_chk@plt+0xd44>
   115c0:	movw	r1, #20303	; 0x4f4f
   115c4:	mov	r2, r0
   115c8:	mov	r0, #1
   115cc:	movt	r1, #1
   115d0:	bl	10ed0 <__printf_chk@plt>
   115d4:	mov	r0, r5
   115d8:	mov	r1, #1
   115dc:	mov	r2, #21
   115e0:	mov	r3, sl
   115e4:	str	r9, [sp]
   115e8:	str	r8, [sp, #4]
   115ec:	bl	10eac <__sprintf_chk@plt>
   115f0:	movw	r1, #20317	; 0x4f5d
   115f4:	mov	r0, #1
   115f8:	mov	r2, r5
   115fc:	movt	r1, #1
   11600:	bl	10ed0 <__printf_chk@plt>
   11604:	mov	r0, r4
   11608:	bl	11cb0 <__snprintf_chk@plt+0xd44>
   1160c:	movw	r1, #20330	; 0x4f6a
   11610:	mov	r2, r0
   11614:	mov	r0, #1
   11618:	movt	r1, #1
   1161c:	bl	10ed0 <__printf_chk@plt>
   11620:	mvn	r0, #-2147483648	; 0x80000000
   11624:	mov	r1, #1
   11628:	mov	r2, #21
   1162c:	mov	r3, sl
   11630:	stm	sp, {r0, r8}
   11634:	mov	r0, r5
   11638:	bl	10eac <__sprintf_chk@plt>
   1163c:	movw	r1, #20374	; 0x4f96
   11640:	mov	r0, #1
   11644:	mov	r2, r5
   11648:	movt	r1, #1
   1164c:	bl	10ed0 <__printf_chk@plt>
   11650:	mov	r0, r4
   11654:	bl	11cb0 <__snprintf_chk@plt+0xd44>
   11658:	movw	r1, #20388	; 0x4fa4
   1165c:	mov	r2, r0
   11660:	mov	r0, #1
   11664:	movt	r1, #1
   11668:	bl	10ed0 <__printf_chk@plt>
   1166c:	mov	r0, r5
   11670:	mov	r1, #1
   11674:	mov	r2, #21
   11678:	mov	r3, r7
   1167c:	stm	sp, {r6, r9}
   11680:	bl	10eac <__sprintf_chk@plt>
   11684:	movw	r1, #20345	; 0x4f79
   11688:	mov	r0, #1
   1168c:	mov	r2, r5
   11690:	movt	r1, #1
   11694:	bl	10ed0 <__printf_chk@plt>
   11698:	mov	r0, r4
   1169c:	bl	11cb0 <__snprintf_chk@plt+0xd44>
   116a0:	movw	r1, #20358	; 0x4f86
   116a4:	mov	r2, r0
   116a8:	mov	r0, #1
   116ac:	movt	r1, #1
   116b0:	bl	10ed0 <__printf_chk@plt>
   116b4:	mov	r0, r5
   116b8:	mov	r1, #1
   116bc:	mov	r2, #21
   116c0:	mov	r3, sl
   116c4:	str	r9, [sp]
   116c8:	str	r8, [sp, #4]
   116cc:	bl	10eac <__sprintf_chk@plt>
   116d0:	movw	r1, #20373	; 0x4f95
   116d4:	mov	r0, #1
   116d8:	mov	r2, r5
   116dc:	movt	r1, #1
   116e0:	bl	10ed0 <__printf_chk@plt>
   116e4:	mov	r0, r4
   116e8:	bl	11cb0 <__snprintf_chk@plt+0xd44>
   116ec:	movw	r1, #20387	; 0x4fa3
   116f0:	mov	r2, r0
   116f4:	mov	r0, #1
   116f8:	movt	r1, #1
   116fc:	bl	10ed0 <__printf_chk@plt>
   11700:	mov	r0, r5
   11704:	mov	r1, #1
   11708:	mov	r2, #21
   1170c:	mov	r3, sl
   11710:	str	r9, [sp]
   11714:	str	r8, [sp, #4]
   11718:	bl	10eac <__sprintf_chk@plt>
   1171c:	movw	r1, #20404	; 0x4fb4
   11720:	mov	r0, #1
   11724:	mov	r2, r5
   11728:	movt	r1, #1
   1172c:	bl	10ed0 <__printf_chk@plt>
   11730:	mov	r0, r4
   11734:	bl	11cb0 <__snprintf_chk@plt+0xd44>
   11738:	movw	r1, #20418	; 0x4fc2
   1173c:	mov	r2, r0
   11740:	mov	r0, #1
   11744:	movt	r1, #1
   11748:	bl	10ed0 <__printf_chk@plt>
   1174c:	mvn	r0, #-2147483648	; 0x80000000
   11750:	mov	r1, #1
   11754:	mov	r2, #21
   11758:	mov	r3, sl
   1175c:	mvn	r6, #-2147483648	; 0x80000000
   11760:	str	r8, [sp, #4]
   11764:	str	r0, [sp]
   11768:	mov	r0, r5
   1176c:	bl	10eac <__sprintf_chk@plt>
   11770:	movw	r1, #20403	; 0x4fb3
   11774:	mov	r0, #1
   11778:	mov	r2, r5
   1177c:	movt	r1, #1
   11780:	bl	10ed0 <__printf_chk@plt>
   11784:	mov	r0, r4
   11788:	bl	11cb0 <__snprintf_chk@plt+0xd44>
   1178c:	movw	r1, #20417	; 0x4fc1
   11790:	mov	r2, r0
   11794:	mov	r0, #1
   11798:	movt	r1, #1
   1179c:	bl	10ed0 <__printf_chk@plt>
   117a0:	mov	r0, #-2147483648	; 0x80000000
   117a4:	mov	r1, #1
   117a8:	mov	r2, #21
   117ac:	mov	r3, r7
   117b0:	stm	sp, {r0, r9}
   117b4:	mov	r0, r5
   117b8:	bl	10eac <__sprintf_chk@plt>
   117bc:	movw	r1, #20433	; 0x4fd1
   117c0:	mov	r0, #1
   117c4:	mov	r2, r5
   117c8:	movt	r1, #1
   117cc:	bl	10ed0 <__printf_chk@plt>
   117d0:	mov	r0, r4
   117d4:	bl	11cb0 <__snprintf_chk@plt+0xd44>
   117d8:	movw	r1, #20447	; 0x4fdf
   117dc:	mov	r2, r0
   117e0:	mov	r0, #1
   117e4:	movt	r1, #1
   117e8:	bl	10ed0 <__printf_chk@plt>
   117ec:	mov	r0, r5
   117f0:	mov	r1, #1
   117f4:	mov	r2, #21
   117f8:	mov	r3, sl
   117fc:	str	r6, [sp]
   11800:	mvn	r6, #-2147483648	; 0x80000000
   11804:	str	r8, [sp, #4]
   11808:	bl	10eac <__sprintf_chk@plt>
   1180c:	movw	r1, #20463	; 0x4fef
   11810:	mov	r0, #1
   11814:	mov	r2, r5
   11818:	movt	r1, #1
   1181c:	bl	10ed0 <__printf_chk@plt>
   11820:	mov	r0, r4
   11824:	bl	11cb0 <__snprintf_chk@plt+0xd44>
   11828:	movw	r1, #20478	; 0x4ffe
   1182c:	mov	r2, r0
   11830:	mov	r0, #1
   11834:	movt	r1, #1
   11838:	bl	10ed0 <__printf_chk@plt>
   1183c:	mov	r0, #-2147483648	; 0x80000000
   11840:	mov	r1, #1
   11844:	mov	r2, #21
   11848:	mov	r3, r7
   1184c:	stm	sp, {r0, r9}
   11850:	mov	r0, r5
   11854:	bl	10eac <__sprintf_chk@plt>
   11858:	movw	r1, #20495	; 0x500f
   1185c:	mov	r0, #1
   11860:	mov	r2, r5
   11864:	movt	r1, #1
   11868:	bl	10ed0 <__printf_chk@plt>
   1186c:	mov	r0, r4
   11870:	bl	11cb0 <__snprintf_chk@plt+0xd44>
   11874:	movw	r1, #20510	; 0x501e
   11878:	mov	r2, r0
   1187c:	mov	r0, #1
   11880:	movt	r1, #1
   11884:	bl	10ed0 <__printf_chk@plt>
   11888:	mov	r0, r5
   1188c:	mov	r1, #1
   11890:	mov	r2, #21
   11894:	mov	r3, sl
   11898:	str	r9, [sp]
   1189c:	str	r8, [sp, #4]
   118a0:	bl	10eac <__sprintf_chk@plt>
   118a4:	movw	r1, #20527	; 0x502f
   118a8:	mov	r0, #1
   118ac:	mov	r2, r5
   118b0:	movt	r1, #1
   118b4:	bl	10ed0 <__printf_chk@plt>
   118b8:	mov	r0, r4
   118bc:	bl	11cb0 <__snprintf_chk@plt+0xd44>
   118c0:	movw	r1, #20541	; 0x503d
   118c4:	mov	r2, r0
   118c8:	mov	r0, #1
   118cc:	movt	r1, #1
   118d0:	bl	10ed0 <__printf_chk@plt>
   118d4:	mov	r0, r5
   118d8:	mov	r1, #1
   118dc:	mov	r2, #21
   118e0:	mov	r3, sl
   118e4:	str	r9, [sp]
   118e8:	str	r8, [sp, #4]
   118ec:	bl	10eac <__sprintf_chk@plt>
   118f0:	movw	r1, #20557	; 0x504d
   118f4:	mov	r0, #1
   118f8:	mov	r2, r5
   118fc:	movt	r1, #1
   11900:	bl	10ed0 <__printf_chk@plt>
   11904:	mov	r0, r4
   11908:	bl	11cb0 <__snprintf_chk@plt+0xd44>
   1190c:	movw	r1, #20571	; 0x505b
   11910:	mov	r2, r0
   11914:	mov	r0, #1
   11918:	movt	r1, #1
   1191c:	bl	10ed0 <__printf_chk@plt>
   11920:	mov	r0, r5
   11924:	mov	r1, #1
   11928:	mov	r2, #21
   1192c:	mov	r3, sl
   11930:	str	r6, [sp]
   11934:	mvn	r7, #-2147483648	; 0x80000000
   11938:	str	r8, [sp, #4]
   1193c:	bl	10eac <__sprintf_chk@plt>
   11940:	movw	r1, #20587	; 0x506b
   11944:	mov	r0, #1
   11948:	mov	r2, r5
   1194c:	movt	r1, #1
   11950:	bl	10ed0 <__printf_chk@plt>
   11954:	mov	r0, r4
   11958:	bl	11cb0 <__snprintf_chk@plt+0xd44>
   1195c:	movw	r1, #20601	; 0x5079
   11960:	mov	r2, r0
   11964:	mov	r0, #1
   11968:	movt	r1, #1
   1196c:	bl	10ed0 <__printf_chk@plt>
   11970:	movw	r3, #20170	; 0x4eca
   11974:	mov	r0, #-2147483648	; 0x80000000
   11978:	mov	r1, #1
   1197c:	mov	r2, #21
   11980:	mov	r6, #-2147483648	; 0x80000000
   11984:	str	r9, [sp, #4]
   11988:	str	r0, [sp]
   1198c:	movt	r3, #1
   11990:	mov	r0, r5
   11994:	mov	r8, r3
   11998:	bl	10eac <__sprintf_chk@plt>
   1199c:	movw	r1, #20617	; 0x5089
   119a0:	mov	r0, #1
   119a4:	mov	r2, r5
   119a8:	movt	r1, #1
   119ac:	bl	10ed0 <__printf_chk@plt>
   119b0:	mov	r0, r4
   119b4:	bl	11cb0 <__snprintf_chk@plt+0xd44>
   119b8:	movw	r1, #20631	; 0x5097
   119bc:	mov	r2, r0
   119c0:	mov	r0, #1
   119c4:	movt	r1, #1
   119c8:	bl	10ed0 <__printf_chk@plt>
   119cc:	mov	r0, r5
   119d0:	mov	r1, #1
   119d4:	mov	r2, #21
   119d8:	mov	r3, sl
   119dc:	str	r9, [sp]
   119e0:	str	r7, [sp, #4]
   119e4:	bl	10eac <__sprintf_chk@plt>
   119e8:	movw	r1, #20647	; 0x50a7
   119ec:	mov	r0, #1
   119f0:	mov	r2, r5
   119f4:	movt	r1, #1
   119f8:	bl	10ed0 <__printf_chk@plt>
   119fc:	mov	r0, r4
   11a00:	bl	11cb0 <__snprintf_chk@plt+0xd44>
   11a04:	movw	r1, #20661	; 0x50b5
   11a08:	mov	r2, r0
   11a0c:	mov	r0, #1
   11a10:	movt	r1, #1
   11a14:	bl	10ed0 <__printf_chk@plt>
   11a18:	adds	r6, r6, #-2147483648	; 0x80000000
   11a1c:	mov	r0, r5
   11a20:	mov	r1, #1
   11a24:	mov	r2, #21
   11a28:	mov	r3, r8
   11a2c:	adc	r7, r9, #-2147483648	; 0x80000000
   11a30:	stm	sp, {r6, r7}
   11a34:	bl	10eac <__sprintf_chk@plt>
   11a38:	movw	r1, #20677	; 0x50c5
   11a3c:	mov	r0, #1
   11a40:	mov	r2, r5
   11a44:	movt	r1, #1
   11a48:	bl	10ed0 <__printf_chk@plt>
   11a4c:	mov	r0, r4
   11a50:	bl	11cb0 <__snprintf_chk@plt+0xd44>
   11a54:	movw	r1, #20691	; 0x50d3
   11a58:	mov	r2, r0
   11a5c:	mov	r0, #1
   11a60:	movt	r1, #1
   11a64:	bl	10ed0 <__printf_chk@plt>
   11a68:	mvn	r0, #-2147483648	; 0x80000000
   11a6c:	mov	r1, #1
   11a70:	mov	r2, #21
   11a74:	mov	r3, sl
   11a78:	str	r9, [sp]
   11a7c:	str	r0, [sp, #4]
   11a80:	mov	r0, r5
   11a84:	bl	10eac <__sprintf_chk@plt>
   11a88:	movw	r1, #20740	; 0x5104
   11a8c:	mov	r0, #1
   11a90:	mov	r2, r5
   11a94:	movt	r1, #1
   11a98:	bl	10ed0 <__printf_chk@plt>
   11a9c:	mov	r0, r4
   11aa0:	bl	11cb0 <__snprintf_chk@plt+0xd44>
   11aa4:	movw	r1, #20756	; 0x5114
   11aa8:	mov	r2, r0
   11aac:	mov	r0, #1
   11ab0:	movt	r1, #1
   11ab4:	bl	10ed0 <__printf_chk@plt>
   11ab8:	mov	r0, r5
   11abc:	mov	r1, #1
   11ac0:	mov	r2, #21
   11ac4:	mov	r3, r8
   11ac8:	stm	sp, {r6, r7}
   11acc:	bl	10eac <__sprintf_chk@plt>
   11ad0:	movw	r1, #20707	; 0x50e3
   11ad4:	mov	r0, #1
   11ad8:	mov	r2, r5
   11adc:	movt	r1, #1
   11ae0:	bl	10ed0 <__printf_chk@plt>
   11ae4:	mov	r0, r4
   11ae8:	bl	11cb0 <__snprintf_chk@plt+0xd44>
   11aec:	movw	r1, #20722	; 0x50f2
   11af0:	mov	r2, r0
   11af4:	mov	r0, #1
   11af8:	movt	r1, #1
   11afc:	bl	10ed0 <__printf_chk@plt>
   11b00:	mvn	r0, #127	; 0x7f
   11b04:	mov	r1, #1
   11b08:	mov	r2, #21
   11b0c:	mov	r3, sl
   11b10:	add	r0, r0, #127	; 0x7f
   11b14:	stm	sp, {r0, r9}
   11b18:	mov	r0, r5
   11b1c:	bl	10eac <__sprintf_chk@plt>
   11b20:	movw	r1, #20739	; 0x5103
   11b24:	mov	r0, #1
   11b28:	mov	r2, r5
   11b2c:	movt	r1, #1
   11b30:	bl	10ed0 <__printf_chk@plt>
   11b34:	mov	r0, r4
   11b38:	bl	11cb0 <__snprintf_chk@plt+0xd44>
   11b3c:	movw	r1, #20755	; 0x5113
   11b40:	mov	r2, r0
   11b44:	mov	r0, #1
   11b48:	movt	r1, #1
   11b4c:	bl	10ed0 <__printf_chk@plt>
   11b50:	movw	r1, #20773	; 0x5125
   11b54:	mov	r0, #1
   11b58:	movt	r1, #1
   11b5c:	bl	10ed0 <__printf_chk@plt>
   11b60:	vldr	s0, [pc, #320]	; 11ca8 <__snprintf_chk@plt+0xd3c>
   11b64:	add	r4, sp, #40	; 0x28
   11b68:	mov	r1, #31
   11b6c:	mov	r2, #1
   11b70:	mov	r3, #0
   11b74:	mov	r0, r4
   11b78:	bl	11f68 <__snprintf_chk@plt+0xffc>
   11b7c:	mov	r0, r4
   11b80:	bl	10e34 <puts@plt>
   11b84:	movw	r1, #20782	; 0x512e
   11b88:	mov	r0, #1
   11b8c:	movt	r1, #1
   11b90:	bl	10ed0 <__printf_chk@plt>
   11b94:	vldr	s0, [pc, #272]	; 11cac <__snprintf_chk@plt+0xd40>
   11b98:	mov	r0, r4
   11b9c:	mov	r1, #31
   11ba0:	mov	r2, #1
   11ba4:	mov	r3, #0
   11ba8:	bl	11f68 <__snprintf_chk@plt+0xffc>
   11bac:	mov	r0, r4
   11bb0:	bl	10e34 <puts@plt>
   11bb4:	movw	r1, #20792	; 0x5138
   11bb8:	mov	r0, #1
   11bbc:	movt	r1, #1
   11bc0:	bl	10ed0 <__printf_chk@plt>
   11bc4:	vldr	d8, [pc, #204]	; 11c98 <__snprintf_chk@plt+0xd2c>
   11bc8:	add	r4, sp, #40	; 0x28
   11bcc:	mov	r1, #40	; 0x28
   11bd0:	mov	r2, #1
   11bd4:	mov	r3, #0
   11bd8:	mov	r0, r4
   11bdc:	vorr	d0, d8, d8
   11be0:	bl	11e18 <__snprintf_chk@plt+0xeac>
   11be4:	mov	r0, r4
   11be8:	bl	10e34 <puts@plt>
   11bec:	movw	r1, #20802	; 0x5142
   11bf0:	mov	r0, #1
   11bf4:	movt	r1, #1
   11bf8:	bl	10ed0 <__printf_chk@plt>
   11bfc:	vldr	d9, [pc, #156]	; 11ca0 <__snprintf_chk@plt+0xd34>
   11c00:	mov	r0, r4
   11c04:	mov	r1, #40	; 0x28
   11c08:	mov	r2, #1
   11c0c:	mov	r3, #0
   11c10:	vorr	d0, d9, d9
   11c14:	bl	11e18 <__snprintf_chk@plt+0xeac>
   11c18:	mov	r0, r4
   11c1c:	bl	10e34 <puts@plt>
   11c20:	movw	r1, #20791	; 0x5137
   11c24:	mov	r0, #1
   11c28:	movt	r1, #1
   11c2c:	bl	10ed0 <__printf_chk@plt>
   11c30:	mov	r0, r4
   11c34:	mov	r1, #40	; 0x28
   11c38:	mov	r2, #1
   11c3c:	mov	r3, #0
   11c40:	vorr	d0, d8, d8
   11c44:	bl	120b8 <__snprintf_chk@plt+0x114c>
   11c48:	mov	r0, r4
   11c4c:	bl	10e34 <puts@plt>
   11c50:	movw	r1, #20801	; 0x5141
   11c54:	mov	r0, #1
   11c58:	movt	r1, #1
   11c5c:	bl	10ed0 <__printf_chk@plt>
   11c60:	mov	r0, r4
   11c64:	mov	r1, #40	; 0x28
   11c68:	mov	r2, #1
   11c6c:	mov	r3, #0
   11c70:	vorr	d0, d9, d9
   11c74:	bl	120b8 <__snprintf_chk@plt+0x114c>
   11c78:	mov	r0, r4
   11c7c:	bl	10e34 <puts@plt>
   11c80:	mov	r0, #0
   11c84:	sub	sp, fp, #48	; 0x30
   11c88:	vpop	{d8-d9}
   11c8c:	add	sp, sp, #4
   11c90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11c94:	nop	{0}
   11c98:	andeq	r0, r0, r0
   11c9c:	andseq	r0, r0, r0
   11ca0:			; <UNDEFINED> instruction: 0xffffffff
   11ca4:	svcvc	0x00efffff
   11ca8:	addeq	r0, r0, r0
   11cac:	svcvc	0x007fffff
   11cb0:	push	{r4, r5, fp, lr}
   11cb4:	add	fp, sp, #8
   11cb8:	mov	r4, r0
   11cbc:	ldrb	r5, [r4, #1]!
   11cc0:	cmp	r5, #45	; 0x2d
   11cc4:	addeq	r4, r4, #1
   11cc8:	mov	r0, r4
   11ccc:	bl	10e94 <strlen@plt>
   11cd0:	mov	r1, #48	; 0x30
   11cd4:	add	r0, r4, r0
   11cd8:	strb	r1, [r4, #-1]
   11cdc:	b	11ce4 <__snprintf_chk@plt+0xd78>
   11ce0:	strb	r1, [r0]
   11ce4:	ldrb	r2, [r0, #-1]!
   11ce8:	cmp	r2, #57	; 0x39
   11cec:	beq	11ce0 <__snprintf_chk@plt+0xd74>
   11cf0:	add	r1, r2, #1
   11cf4:	cmp	r4, r0
   11cf8:	strb	r1, [r0]
   11cfc:	movcc	r0, r4
   11d00:	cmp	r5, #45	; 0x2d
   11d04:	moveq	r1, #45	; 0x2d
   11d08:	strbeq	r1, [r0, #-1]!
   11d0c:	pop	{r4, r5, fp, pc}
   11d10:	movw	r1, #24896	; 0x6140
   11d14:	movt	r1, #2
   11d18:	str	r0, [r1]
   11d1c:	bx	lr
   11d20:	movw	r1, #24900	; 0x6144
   11d24:	movt	r1, #2
   11d28:	strb	r0, [r1]
   11d2c:	bx	lr
   11d30:	push	{r4, r5, r6, sl, fp, lr}
   11d34:	add	fp, sp, #16
   11d38:	sub	sp, sp, #8
   11d3c:	movw	r0, #24884	; 0x6134
   11d40:	movt	r0, #2
   11d44:	ldr	r0, [r0]
   11d48:	bl	148e0 <__snprintf_chk@plt+0x3974>
   11d4c:	cmp	r0, #0
   11d50:	beq	11d78 <__snprintf_chk@plt+0xe0c>
   11d54:	movw	r0, #24900	; 0x6144
   11d58:	movt	r0, #2
   11d5c:	ldrb	r0, [r0]
   11d60:	cmp	r0, #0
   11d64:	beq	11d98 <__snprintf_chk@plt+0xe2c>
   11d68:	bl	10ea0 <__errno_location@plt>
   11d6c:	ldr	r0, [r0]
   11d70:	cmp	r0, #32
   11d74:	bne	11d98 <__snprintf_chk@plt+0xe2c>
   11d78:	movw	r0, #24880	; 0x6130
   11d7c:	movt	r0, #2
   11d80:	ldr	r0, [r0]
   11d84:	bl	148e0 <__snprintf_chk@plt+0x3974>
   11d88:	cmp	r0, #0
   11d8c:	subeq	sp, fp, #16
   11d90:	popeq	{r4, r5, r6, sl, fp, pc}
   11d94:	b	11e08 <__snprintf_chk@plt+0xe9c>
   11d98:	movw	r1, #21184	; 0x52c0
   11d9c:	mov	r0, #0
   11da0:	mov	r2, #5
   11da4:	movt	r1, #1
   11da8:	bl	10db0 <dcgettext@plt>
   11dac:	mov	r4, r0
   11db0:	movw	r0, #24896	; 0x6140
   11db4:	movt	r0, #2
   11db8:	ldr	r6, [r0]
   11dbc:	bl	10ea0 <__errno_location@plt>
   11dc0:	ldr	r5, [r0]
   11dc4:	cmp	r6, #0
   11dc8:	bne	11de4 <__snprintf_chk@plt+0xe78>
   11dcc:	movw	r2, #21200	; 0x52d0
   11dd0:	mov	r0, #0
   11dd4:	mov	r1, r5
   11dd8:	mov	r3, r4
   11ddc:	movt	r2, #1
   11de0:	b	11e04 <__snprintf_chk@plt+0xe98>
   11de4:	mov	r0, r6
   11de8:	bl	13b44 <__snprintf_chk@plt+0x2bd8>
   11dec:	movw	r2, #21196	; 0x52cc
   11df0:	mov	r3, r0
   11df4:	str	r4, [sp]
   11df8:	mov	r0, #0
   11dfc:	mov	r1, r5
   11e00:	movt	r2, #1
   11e04:	bl	10e1c <error@plt>
   11e08:	movw	r0, #24792	; 0x60d8
   11e0c:	movt	r0, #2
   11e10:	ldr	r0, [r0]
   11e14:	bl	10d74 <_exit@plt>
   11e18:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11e1c:	add	fp, sp, #28
   11e20:	sub	sp, sp, #4
   11e24:	vpush	{d8}
   11e28:	sub	sp, sp, #40	; 0x28
   11e2c:	mov	sl, r0
   11e30:	movw	r0, #11557	; 0x2d25
   11e34:	add	r8, sp, #29
   11e38:	mov	r5, r1
   11e3c:	mov	r1, #43	; 0x2b
   11e40:	mov	r9, r3
   11e44:	mov	r3, #32
   11e48:	vldr	d16, [pc, #272]	; 11f60 <__snprintf_chk@plt+0xff4>
   11e4c:	tst	r2, #16
   11e50:	vcmpe.f64	d0, #0.0
   11e54:	vneg.f64	d17, d0
   11e58:	vmov.f64	d18, d0
   11e5c:	mov	r6, #15
   11e60:	vmov.f64	d8, d0
   11e64:	strh	r0, [sp, #29]
   11e68:	and	r0, r2, #1
   11e6c:	add	r0, r8, r0
   11e70:	strb	r1, [r0, #1]!
   11e74:	ubfx	r1, r2, #1, #1
   11e78:	strb	r3, [r0, r1]!
   11e7c:	ubfx	r1, r2, #2, #1
   11e80:	mov	r3, #48	; 0x30
   11e84:	strb	r3, [r0, r1]!
   11e88:	ubfx	r1, r2, #3, #1
   11e8c:	movw	r3, #11818	; 0x2e2a
   11e90:	mov	r2, #1
   11e94:	strh	r3, [r0, r1]!
   11e98:	mov	r1, #42	; 0x2a
   11e9c:	mvn	r3, #0
   11ea0:	strb	r1, [r0, #2]
   11ea4:	mov	r1, #71	; 0x47
   11ea8:	movweq	r1, #103	; 0x67
   11eac:	vmrs	APSR_nzcv, fpscr
   11eb0:	vmovmi.f64	d18, d17
   11eb4:	strb	r1, [r0, #3]
   11eb8:	mov	r1, #0
   11ebc:	vcmpe.f64	d18, d16
   11ec0:	strb	r1, [r0, #4]
   11ec4:	mov	r0, sl
   11ec8:	mov	r1, r5
   11ecc:	vstr	d0, [sp, #16]
   11ed0:	stm	sp, {r8, r9}
   11ed4:	vmrs	APSR_nzcv, fpscr
   11ed8:	movwmi	r6, #1
   11edc:	str	r6, [sp, #8]
   11ee0:	bl	10f6c <__snprintf_chk@plt>
   11ee4:	mov	r7, r0
   11ee8:	cmp	r0, #0
   11eec:	blt	11f4c <__snprintf_chk@plt+0xfe0>
   11ef0:	cmp	r7, r5
   11ef4:	bcs	11f10 <__snprintf_chk@plt+0xfa4>
   11ef8:	mov	r0, sl
   11efc:	mov	r1, #0
   11f00:	bl	10edc <strtod@plt>
   11f04:	vcmp.f64	d0, d8
   11f08:	vmrs	APSR_nzcv, fpscr
   11f0c:	beq	11f4c <__snprintf_chk@plt+0xfe0>
   11f10:	add	r4, r6, #1
   11f14:	mov	r0, sl
   11f18:	mov	r1, r5
   11f1c:	mov	r2, #1
   11f20:	mvn	r3, #0
   11f24:	vstr	d8, [sp, #16]
   11f28:	stm	sp, {r8, r9}
   11f2c:	str	r4, [sp, #8]
   11f30:	bl	10f6c <__snprintf_chk@plt>
   11f34:	mov	r7, r0
   11f38:	cmp	r6, #15
   11f3c:	bhi	11f4c <__snprintf_chk@plt+0xfe0>
   11f40:	cmn	r7, #1
   11f44:	mov	r6, r4
   11f48:	bgt	11ef0 <__snprintf_chk@plt+0xf84>
   11f4c:	mov	r0, r7
   11f50:	sub	sp, fp, #40	; 0x28
   11f54:	vpop	{d8}
   11f58:	add	sp, sp, #4
   11f5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11f60:	andeq	r0, r0, r0
   11f64:	andseq	r0, r0, r0
   11f68:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11f6c:	add	fp, sp, #28
   11f70:	sub	sp, sp, #4
   11f74:	vpush	{d8-d9}
   11f78:	sub	sp, sp, #40	; 0x28
   11f7c:	mov	sl, r0
   11f80:	movw	r0, #11557	; 0x2d25
   11f84:	add	r8, sp, #29
   11f88:	mov	r5, r1
   11f8c:	mov	r1, #43	; 0x2b
   11f90:	mov	r9, r3
   11f94:	mov	r3, #32
   11f98:	vmov.f32	s16, s0
   11f9c:	vcvt.f64.f32	d9, s0
   11fa0:	vldr	s0, [pc, #268]	; 120b4 <__snprintf_chk@plt+0x1148>
   11fa4:	tst	r2, #16
   11fa8:	mov	r6, #6
   11fac:	strh	r0, [sp, #29]
   11fb0:	and	r0, r2, #1
   11fb4:	vcmpe.f32	s16, #0.0
   11fb8:	vneg.f32	s2, s16
   11fbc:	vmov.f32	s4, s16
   11fc0:	add	r0, r8, r0
   11fc4:	strb	r1, [r0, #1]!
   11fc8:	ubfx	r1, r2, #1, #1
   11fcc:	strb	r3, [r0, r1]!
   11fd0:	ubfx	r1, r2, #2, #1
   11fd4:	mov	r3, #48	; 0x30
   11fd8:	strb	r3, [r0, r1]!
   11fdc:	ubfx	r1, r2, #3, #1
   11fe0:	movw	r3, #11818	; 0x2e2a
   11fe4:	mov	r2, #1
   11fe8:	strh	r3, [r0, r1]!
   11fec:	mov	r1, #42	; 0x2a
   11ff0:	mvn	r3, #0
   11ff4:	strb	r1, [r0, #2]
   11ff8:	mov	r1, #71	; 0x47
   11ffc:	movweq	r1, #103	; 0x67
   12000:	vmrs	APSR_nzcv, fpscr
   12004:	vmovmi.f32	s4, s2
   12008:	strb	r1, [r0, #3]
   1200c:	mov	r1, #0
   12010:	vcmpe.f32	s4, s0
   12014:	strb	r1, [r0, #4]
   12018:	mov	r0, sl
   1201c:	mov	r1, r5
   12020:	vstr	d9, [sp, #16]
   12024:	stm	sp, {r8, r9}
   12028:	vmrs	APSR_nzcv, fpscr
   1202c:	movwmi	r6, #1
   12030:	str	r6, [sp, #8]
   12034:	bl	10f6c <__snprintf_chk@plt>
   12038:	mov	r7, r0
   1203c:	cmp	r0, #0
   12040:	blt	120a0 <__snprintf_chk@plt+0x1134>
   12044:	cmp	r7, r5
   12048:	bcs	12064 <__snprintf_chk@plt+0x10f8>
   1204c:	mov	r0, sl
   12050:	mov	r1, #0
   12054:	bl	10e28 <strtof@plt>
   12058:	vcmp.f32	s0, s16
   1205c:	vmrs	APSR_nzcv, fpscr
   12060:	beq	120a0 <__snprintf_chk@plt+0x1134>
   12064:	add	r4, r6, #1
   12068:	mov	r0, sl
   1206c:	mov	r1, r5
   12070:	mov	r2, #1
   12074:	mvn	r3, #0
   12078:	vstr	d9, [sp, #16]
   1207c:	stm	sp, {r8, r9}
   12080:	str	r4, [sp, #8]
   12084:	bl	10f6c <__snprintf_chk@plt>
   12088:	mov	r7, r0
   1208c:	cmp	r6, #7
   12090:	bhi	120a0 <__snprintf_chk@plt+0x1134>
   12094:	cmn	r7, #1
   12098:	mov	r6, r4
   1209c:	bgt	12044 <__snprintf_chk@plt+0x10d8>
   120a0:	mov	r0, r7
   120a4:	sub	sp, fp, #48	; 0x30
   120a8:	vpop	{d8-d9}
   120ac:	add	sp, sp, #4
   120b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   120b4:	addeq	r0, r0, r0
   120b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   120bc:	add	fp, sp, #28
   120c0:	sub	sp, sp, #4
   120c4:	vpush	{d8}
   120c8:	sub	sp, sp, #40	; 0x28
   120cc:	mov	sl, r0
   120d0:	movw	r0, #11557	; 0x2d25
   120d4:	add	r8, sp, #29
   120d8:	mov	r5, r1
   120dc:	mov	r1, #43	; 0x2b
   120e0:	mov	r9, r3
   120e4:	mov	r3, #32
   120e8:	vldr	d16, [pc, #272]	; 12200 <__snprintf_chk@plt+0x1294>
   120ec:	tst	r2, #16
   120f0:	vcmpe.f64	d0, #0.0
   120f4:	vneg.f64	d17, d0
   120f8:	vmov.f64	d18, d0
   120fc:	mov	r6, #15
   12100:	vmov.f64	d8, d0
   12104:	strh	r0, [sp, #29]
   12108:	and	r0, r2, #1
   1210c:	add	r0, r8, r0
   12110:	strb	r1, [r0, #1]!
   12114:	ubfx	r1, r2, #1, #1
   12118:	strb	r3, [r0, r1]!
   1211c:	ubfx	r1, r2, #2, #1
   12120:	mov	r3, #48	; 0x30
   12124:	strb	r3, [r0, r1]!
   12128:	movw	r3, #11818	; 0x2e2a
   1212c:	ubfx	r1, r2, #3, #1
   12130:	mov	r2, #1
   12134:	movt	r3, #19498	; 0x4c2a
   12138:	str	r3, [r0, r1]!
   1213c:	mov	r1, #71	; 0x47
   12140:	mvn	r3, #0
   12144:	movweq	r1, #103	; 0x67
   12148:	vmrs	APSR_nzcv, fpscr
   1214c:	vmovmi.f64	d18, d17
   12150:	strb	r1, [r0, #4]
   12154:	mov	r1, #0
   12158:	vcmpe.f64	d18, d16
   1215c:	strb	r1, [r0, #5]
   12160:	mov	r0, sl
   12164:	mov	r1, r5
   12168:	vstr	d0, [sp, #16]
   1216c:	stm	sp, {r8, r9}
   12170:	vmrs	APSR_nzcv, fpscr
   12174:	movwmi	r6, #1
   12178:	str	r6, [sp, #8]
   1217c:	bl	10f6c <__snprintf_chk@plt>
   12180:	mov	r7, r0
   12184:	cmp	r0, #0
   12188:	blt	121e8 <__snprintf_chk@plt+0x127c>
   1218c:	cmp	r7, r5
   12190:	bcs	121ac <__snprintf_chk@plt+0x1240>
   12194:	mov	r0, sl
   12198:	mov	r1, #0
   1219c:	bl	10d98 <strtold@plt>
   121a0:	vcmp.f64	d0, d8
   121a4:	vmrs	APSR_nzcv, fpscr
   121a8:	beq	121e8 <__snprintf_chk@plt+0x127c>
   121ac:	add	r4, r6, #1
   121b0:	mov	r0, sl
   121b4:	mov	r1, r5
   121b8:	mov	r2, #1
   121bc:	mvn	r3, #0
   121c0:	vstr	d8, [sp, #16]
   121c4:	stm	sp, {r8, r9}
   121c8:	str	r4, [sp, #8]
   121cc:	bl	10f6c <__snprintf_chk@plt>
   121d0:	mov	r7, r0
   121d4:	cmp	r6, #15
   121d8:	bhi	121e8 <__snprintf_chk@plt+0x127c>
   121dc:	cmn	r7, #1
   121e0:	mov	r6, r4
   121e4:	bgt	1218c <__snprintf_chk@plt+0x1220>
   121e8:	mov	r0, r7
   121ec:	sub	sp, fp, #40	; 0x28
   121f0:	vpop	{d8}
   121f4:	add	sp, sp, #4
   121f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   121fc:	nop	{0}
   12200:	andeq	r0, r0, r0
   12204:	andseq	r0, r0, r0
   12208:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1220c:	add	fp, sp, #24
   12210:	sub	sp, sp, #8
   12214:	movw	r6, #24888	; 0x6138
   12218:	mov	r4, #0
   1221c:	cmp	r0, #2
   12220:	movt	r6, #2
   12224:	ldr	r7, [r6]
   12228:	str	r4, [r6]
   1222c:	bne	122a0 <__snprintf_chk@plt+0x1334>
   12230:	mov	r8, r3
   12234:	movw	r3, #21220	; 0x52e4
   12238:	mov	r5, r2
   1223c:	movw	r2, #21203	; 0x52d3
   12240:	mov	r0, #2
   12244:	str	r4, [sp]
   12248:	movt	r2, #1
   1224c:	movt	r3, #1
   12250:	bl	10e70 <getopt_long@plt>
   12254:	cmp	r0, #104	; 0x68
   12258:	beq	12294 <__snprintf_chk@plt+0x1328>
   1225c:	cmp	r0, #118	; 0x76
   12260:	bne	122a0 <__snprintf_chk@plt+0x1334>
   12264:	movw	r0, #24884	; 0x6134
   12268:	ldr	r3, [fp, #8]
   1226c:	add	r1, fp, #16
   12270:	mov	r2, r8
   12274:	movt	r0, #2
   12278:	str	r1, [sp, #4]
   1227c:	str	r1, [sp]
   12280:	mov	r1, r5
   12284:	ldr	r0, [r0]
   12288:	bl	14224 <__snprintf_chk@plt+0x32b8>
   1228c:	mov	r0, #0
   12290:	bl	10e88 <exit@plt>
   12294:	ldr	r1, [fp, #12]
   12298:	mov	r0, #0
   1229c:	blx	r1
   122a0:	movw	r0, #24872	; 0x6128
   122a4:	str	r7, [r6]
   122a8:	movt	r0, #2
   122ac:	str	r4, [r0]
   122b0:	sub	sp, fp, #24
   122b4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   122b8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   122bc:	add	fp, sp, #24
   122c0:	sub	sp, sp, #8
   122c4:	movw	r6, #24888	; 0x6138
   122c8:	mov	r8, r3
   122cc:	ldr	r3, [fp, #12]
   122d0:	mov	r5, r2
   122d4:	mov	r2, #1
   122d8:	movw	r4, #19958	; 0x4df6
   122dc:	movt	r6, #2
   122e0:	movt	r4, #1
   122e4:	ldr	r7, [r6]
   122e8:	str	r2, [r6]
   122ec:	mov	r2, #0
   122f0:	str	r2, [sp]
   122f4:	movw	r2, #21203	; 0x52d3
   122f8:	cmp	r3, #0
   122fc:	movt	r2, #1
   12300:	movw	r3, #21220	; 0x52e4
   12304:	movne	r2, r4
   12308:	movt	r3, #1
   1230c:	bl	10e70 <getopt_long@plt>
   12310:	cmn	r0, #1
   12314:	beq	12344 <__snprintf_chk@plt+0x13d8>
   12318:	ldr	r1, [fp, #16]
   1231c:	cmp	r0, #104	; 0x68
   12320:	beq	1233c <__snprintf_chk@plt+0x13d0>
   12324:	cmp	r0, #118	; 0x76
   12328:	beq	12350 <__snprintf_chk@plt+0x13e4>
   1232c:	movw	r0, #24792	; 0x60d8
   12330:	movt	r0, #2
   12334:	ldr	r0, [r0]
   12338:	b	12340 <__snprintf_chk@plt+0x13d4>
   1233c:	mov	r0, #0
   12340:	blx	r1
   12344:	str	r7, [r6]
   12348:	sub	sp, fp, #24
   1234c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12350:	movw	r0, #24884	; 0x6134
   12354:	ldr	r3, [fp, #8]
   12358:	add	r1, fp, #20
   1235c:	mov	r2, r8
   12360:	movt	r0, #2
   12364:	str	r1, [sp, #4]
   12368:	str	r1, [sp]
   1236c:	mov	r1, r5
   12370:	ldr	r0, [r0]
   12374:	bl	14224 <__snprintf_chk@plt+0x32b8>
   12378:	mov	r0, #0
   1237c:	bl	10e88 <exit@plt>
   12380:	push	{r4, r5, fp, lr}
   12384:	add	fp, sp, #8
   12388:	cmp	r0, #0
   1238c:	beq	12420 <__snprintf_chk@plt+0x14b4>
   12390:	mov	r1, #47	; 0x2f
   12394:	mov	r4, r0
   12398:	bl	10f24 <strrchr@plt>
   1239c:	cmp	r0, #0
   123a0:	mov	r5, r4
   123a4:	addne	r5, r0, #1
   123a8:	sub	r0, r5, r4
   123ac:	cmp	r0, #7
   123b0:	blt	12404 <__snprintf_chk@plt+0x1498>
   123b4:	movw	r1, #21324	; 0x534c
   123b8:	sub	r0, r5, #7
   123bc:	mov	r2, #7
   123c0:	movt	r1, #1
   123c4:	bl	10f54 <strncmp@plt>
   123c8:	cmp	r0, #0
   123cc:	bne	12404 <__snprintf_chk@plt+0x1498>
   123d0:	movw	r1, #21332	; 0x5354
   123d4:	mov	r0, r5
   123d8:	mov	r2, #3
   123dc:	movt	r1, #1
   123e0:	bl	10f54 <strncmp@plt>
   123e4:	cmp	r0, #0
   123e8:	beq	123f4 <__snprintf_chk@plt+0x1488>
   123ec:	mov	r4, r5
   123f0:	b	12404 <__snprintf_chk@plt+0x1498>
   123f4:	movw	r0, #24864	; 0x6120
   123f8:	add	r4, r5, #3
   123fc:	movt	r0, #2
   12400:	str	r4, [r0]
   12404:	movw	r0, #24868	; 0x6124
   12408:	movt	r0, #2
   1240c:	str	r4, [r0]
   12410:	movw	r0, #24904	; 0x6148
   12414:	movt	r0, #2
   12418:	str	r4, [r0]
   1241c:	pop	{r4, r5, fp, pc}
   12420:	movw	r0, #24880	; 0x6130
   12424:	movt	r0, #2
   12428:	ldr	r1, [r0]
   1242c:	movw	r0, #21268	; 0x5314
   12430:	movt	r0, #1
   12434:	bl	10f48 <fputs@plt>
   12438:	bl	10f60 <abort@plt>
   1243c:	push	{r4, r5, r6, sl, fp, lr}
   12440:	add	fp, sp, #16
   12444:	mov	r4, r0
   12448:	movw	r0, #24912	; 0x6150
   1244c:	movt	r0, #2
   12450:	cmp	r4, #0
   12454:	moveq	r4, r0
   12458:	bl	10ea0 <__errno_location@plt>
   1245c:	ldr	r6, [r0]
   12460:	mov	r5, r0
   12464:	mov	r0, r4
   12468:	mov	r1, #48	; 0x30
   1246c:	bl	146c8 <__snprintf_chk@plt+0x375c>
   12470:	str	r6, [r5]
   12474:	pop	{r4, r5, r6, sl, fp, pc}
   12478:	movw	r1, #24912	; 0x6150
   1247c:	cmp	r0, #0
   12480:	movt	r1, #2
   12484:	movne	r1, r0
   12488:	ldr	r0, [r1]
   1248c:	bx	lr
   12490:	movw	r2, #24912	; 0x6150
   12494:	cmp	r0, #0
   12498:	movt	r2, #2
   1249c:	movne	r2, r0
   124a0:	str	r1, [r2]
   124a4:	bx	lr
   124a8:	movw	r3, #24912	; 0x6150
   124ac:	cmp	r0, #0
   124b0:	movt	r3, #2
   124b4:	movne	r3, r0
   124b8:	ubfx	r0, r1, #5, #3
   124bc:	and	r1, r1, #31
   124c0:	add	r0, r3, r0, lsl #2
   124c4:	ldr	r3, [r0, #8]
   124c8:	eor	r2, r2, r3, lsr r1
   124cc:	and	r2, r2, #1
   124d0:	eor	r2, r3, r2, lsl r1
   124d4:	str	r2, [r0, #8]
   124d8:	mov	r0, #1
   124dc:	and	r0, r0, r3, lsr r1
   124e0:	bx	lr
   124e4:	movw	r2, #24912	; 0x6150
   124e8:	cmp	r0, #0
   124ec:	movt	r2, #2
   124f0:	movne	r2, r0
   124f4:	ldr	r0, [r2, #4]
   124f8:	str	r1, [r2, #4]
   124fc:	bx	lr
   12500:	movw	r3, #24912	; 0x6150
   12504:	cmp	r0, #0
   12508:	movt	r3, #2
   1250c:	movne	r3, r0
   12510:	cmp	r1, #0
   12514:	mov	r0, #10
   12518:	cmpne	r2, #0
   1251c:	str	r0, [r3]
   12520:	bne	12530 <__snprintf_chk@plt+0x15c4>
   12524:	push	{fp, lr}
   12528:	mov	fp, sp
   1252c:	bl	10f60 <abort@plt>
   12530:	str	r1, [r3, #40]	; 0x28
   12534:	str	r2, [r3, #44]	; 0x2c
   12538:	bx	lr
   1253c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12540:	add	fp, sp, #28
   12544:	sub	sp, sp, #20
   12548:	mov	r7, r0
   1254c:	ldr	r0, [fp, #8]
   12550:	movw	r5, #24912	; 0x6150
   12554:	mov	r8, r3
   12558:	mov	r9, r2
   1255c:	mov	sl, r1
   12560:	movt	r5, #2
   12564:	cmp	r0, #0
   12568:	movne	r5, r0
   1256c:	bl	10ea0 <__errno_location@plt>
   12570:	mov	r4, r0
   12574:	ldm	r5, {r0, r1}
   12578:	ldr	r2, [r5, #40]	; 0x28
   1257c:	ldr	r3, [r5, #44]	; 0x2c
   12580:	add	r5, r5, #8
   12584:	ldr	r6, [r4]
   12588:	stm	sp, {r0, r1, r5}
   1258c:	str	r2, [sp, #12]
   12590:	str	r3, [sp, #16]
   12594:	mov	r0, r7
   12598:	mov	r1, sl
   1259c:	mov	r2, r9
   125a0:	mov	r3, r8
   125a4:	bl	125b4 <__snprintf_chk@plt+0x1648>
   125a8:	str	r6, [r4]
   125ac:	sub	sp, fp, #28
   125b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   125b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   125b8:	add	fp, sp, #28
   125bc:	sub	sp, sp, #156	; 0x9c
   125c0:	str	r0, [fp, #-56]	; 0xffffffc8
   125c4:	ldr	r0, [fp, #12]
   125c8:	mov	r4, r1
   125cc:	str	r3, [sp, #80]	; 0x50
   125d0:	str	r2, [fp, #-84]	; 0xffffffac
   125d4:	and	r1, r0, #4
   125d8:	str	r1, [sp, #24]
   125dc:	and	r1, r0, #1
   125e0:	str	r1, [sp, #28]
   125e4:	ubfx	r7, r0, #1, #1
   125e8:	bl	10dec <__ctype_get_mb_cur_max@plt>
   125ec:	str	r0, [sp, #32]
   125f0:	ldr	r0, [fp, #24]
   125f4:	ldr	r9, [fp, #8]
   125f8:	mov	r2, #0
   125fc:	mov	r1, #0
   12600:	mov	r5, #0
   12604:	str	r2, [sp, #52]	; 0x34
   12608:	mov	r2, #1
   1260c:	str	r0, [sp, #72]	; 0x48
   12610:	ldr	r0, [fp, #20]
   12614:	str	r0, [sp, #64]	; 0x40
   12618:	mov	r0, #0
   1261c:	str	r0, [sp, #92]	; 0x5c
   12620:	mov	r0, #0
   12624:	str	r0, [fp, #-76]	; 0xffffffb4
   12628:	mov	r0, #0
   1262c:	cmp	r9, #10
   12630:	str	r1, [sp, #68]	; 0x44
   12634:	bhi	13634 <__snprintf_chk@plt+0x26c8>
   12638:	add	r1, pc, #28
   1263c:	ldr	ip, [fp, #-84]	; 0xffffffac
   12640:	ldr	lr, [sp, #80]	; 0x50
   12644:	mov	r6, r4
   12648:	mov	r8, #0
   1264c:	mov	r3, #1
   12650:	mov	sl, #0
   12654:	mov	r4, r2
   12658:	ldr	pc, [r1, r9, lsl #2]
   1265c:	andeq	r2, r1, ip, lsr #14
   12660:	andeq	r2, r1, r8, ror #14
   12664:	andeq	r2, r1, ip, lsr r7
   12668:	andeq	r2, r1, r4, lsr #14
   1266c:	andeq	r2, r1, ip, asr r7
   12670:			; <UNDEFINED> instruction: 0x000127b4
   12674:	andeq	r2, r1, ip, asr #14
   12678:	andeq	r2, r1, r4, lsl r8
   1267c:	andeq	r2, r1, r8, lsl #13
   12680:	andeq	r2, r1, r8, lsl #13
   12684:			; <UNDEFINED> instruction: 0x000126b0
   12688:	movw	r0, #21416	; 0x53a8
   1268c:	mov	r1, r9
   12690:	movt	r0, #1
   12694:	bl	13d9c <__snprintf_chk@plt+0x2e30>
   12698:	str	r0, [sp, #64]	; 0x40
   1269c:	movw	r0, #21418	; 0x53aa
   126a0:	mov	r1, r9
   126a4:	movt	r0, #1
   126a8:	bl	13d9c <__snprintf_chk@plt+0x2e30>
   126ac:	str	r0, [sp, #72]	; 0x48
   126b0:	mov	r8, #0
   126b4:	mov	sl, r7
   126b8:	tst	r7, #1
   126bc:	str	r5, [fp, #-48]	; 0xffffffd0
   126c0:	bne	126fc <__snprintf_chk@plt+0x1790>
   126c4:	ldr	r0, [sp, #64]	; 0x40
   126c8:	ldrb	r0, [r0]
   126cc:	cmp	r0, #0
   126d0:	beq	126fc <__snprintf_chk@plt+0x1790>
   126d4:	ldr	r1, [sp, #64]	; 0x40
   126d8:	mov	r8, #0
   126dc:	add	r1, r1, #1
   126e0:	cmp	r8, r6
   126e4:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   126e8:	strbcc	r0, [r2, r8]
   126ec:	ldrb	r0, [r1, r8]
   126f0:	add	r8, r8, #1
   126f4:	cmp	r0, #0
   126f8:	bne	126e0 <__snprintf_chk@plt+0x1774>
   126fc:	ldr	r7, [sp, #72]	; 0x48
   12700:	mov	r0, r7
   12704:	bl	10e94 <strlen@plt>
   12708:	ldr	ip, [fp, #-84]	; 0xffffffac
   1270c:	ldr	lr, [sp, #80]	; 0x50
   12710:	ldr	r5, [fp, #-48]	; 0xffffffd0
   12714:	str	r0, [fp, #-76]	; 0xffffffb4
   12718:	str	r7, [sp, #92]	; 0x5c
   1271c:	mov	r3, #1
   12720:	b	12814 <__snprintf_chk@plt+0x18a8>
   12724:	mov	r0, #1
   12728:	b	12768 <__snprintf_chk@plt+0x17fc>
   1272c:	mov	r9, #0
   12730:	mov	r8, #0
   12734:	mov	r3, r0
   12738:	b	12810 <__snprintf_chk@plt+0x18a4>
   1273c:	tst	r7, #1
   12740:	bne	12768 <__snprintf_chk@plt+0x17fc>
   12744:	mov	r3, r0
   12748:	b	12790 <__snprintf_chk@plt+0x1824>
   1274c:	mov	r0, #1
   12750:	mov	r8, #0
   12754:	mov	r9, #5
   12758:	b	127c8 <__snprintf_chk@plt+0x185c>
   1275c:	mov	r3, #1
   12760:	tst	r7, #1
   12764:	beq	12790 <__snprintf_chk@plt+0x1824>
   12768:	mov	r1, #1
   1276c:	mov	r8, #0
   12770:	mov	r9, #2
   12774:	mov	r3, r0
   12778:	mov	sl, #1
   1277c:	str	r1, [fp, #-76]	; 0xffffffb4
   12780:	movw	r1, #21418	; 0x53aa
   12784:	movt	r1, #1
   12788:	str	r1, [sp, #92]	; 0x5c
   1278c:	b	12814 <__snprintf_chk@plt+0x18a8>
   12790:	cmp	r6, #0
   12794:	mov	r8, #1
   12798:	mov	r9, #2
   1279c:	ldrne	r1, [fp, #-56]	; 0xffffffc8
   127a0:	movne	r0, #39	; 0x27
   127a4:	strbne	r0, [r1]
   127a8:	movw	r0, #21418	; 0x53aa
   127ac:	movt	r0, #1
   127b0:	b	12804 <__snprintf_chk@plt+0x1898>
   127b4:	mov	r9, #5
   127b8:	tst	r7, #1
   127bc:	beq	127e4 <__snprintf_chk@plt+0x1878>
   127c0:	mov	r0, #1
   127c4:	mov	r8, #0
   127c8:	str	r0, [fp, #-76]	; 0xffffffb4
   127cc:	movw	r0, #21414	; 0x53a6
   127d0:	mov	r3, #1
   127d4:	mov	sl, #1
   127d8:	movt	r0, #1
   127dc:	str	r0, [sp, #92]	; 0x5c
   127e0:	b	12814 <__snprintf_chk@plt+0x18a8>
   127e4:	cmp	r6, #0
   127e8:	mov	r8, #1
   127ec:	mov	r3, #1
   127f0:	ldrne	r1, [fp, #-56]	; 0xffffffc8
   127f4:	movne	r0, #34	; 0x22
   127f8:	strbne	r0, [r1]
   127fc:	movw	r0, #21414	; 0x53a6
   12800:	movt	r0, #1
   12804:	str	r0, [sp, #92]	; 0x5c
   12808:	mov	r0, #1
   1280c:	str	r0, [fp, #-76]	; 0xffffffb4
   12810:	mov	sl, #0
   12814:	ldr	r0, [fp, #16]
   12818:	mov	r7, #0
   1281c:	str	r9, [fp, #-64]	; 0xffffffc0
   12820:	str	sl, [fp, #-72]	; 0xffffffb8
   12824:	str	r3, [sp, #84]	; 0x54
   12828:	cmp	r0, #0
   1282c:	movwne	r0, #1
   12830:	and	r0, r0, sl
   12834:	str	r0, [fp, #-88]	; 0xffffffa8
   12838:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1283c:	cmp	r0, #0
   12840:	movwne	r0, #1
   12844:	subs	r2, r9, #2
   12848:	and	r1, r0, sl
   1284c:	str	r2, [fp, #-80]	; 0xffffffb0
   12850:	and	r1, r3, r1
   12854:	str	r1, [sp, #44]	; 0x2c
   12858:	clz	r1, r2
   1285c:	lsr	r1, r1, #5
   12860:	and	r1, r1, sl
   12864:	str	r1, [sp, #56]	; 0x38
   12868:	mov	r1, r2
   1286c:	eor	r2, sl, #1
   12870:	movwne	r1, #1
   12874:	str	r2, [sp, #88]	; 0x58
   12878:	orr	r2, r1, r2
   1287c:	and	r1, r1, r3
   12880:	and	r0, r0, r1
   12884:	str	r2, [sp, #60]	; 0x3c
   12888:	str	r1, [fp, #-68]	; 0xffffffbc
   1288c:	str	r0, [fp, #-60]	; 0xffffffc4
   12890:	eor	r0, r3, #1
   12894:	str	r0, [sp, #48]	; 0x30
   12898:	cmn	lr, #1
   1289c:	beq	128ac <__snprintf_chk@plt+0x1940>
   128a0:	cmp	r7, lr
   128a4:	bne	128b8 <__snprintf_chk@plt+0x194c>
   128a8:	b	13464 <__snprintf_chk@plt+0x24f8>
   128ac:	ldrb	r0, [ip, r7]
   128b0:	cmp	r0, #0
   128b4:	beq	1346c <__snprintf_chk@plt+0x2500>
   128b8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   128bc:	mov	r9, #0
   128c0:	str	r5, [fp, #-48]	; 0xffffffd0
   128c4:	str	r6, [fp, #-52]	; 0xffffffcc
   128c8:	cmp	r0, #0
   128cc:	beq	1290c <__snprintf_chk@plt+0x19a0>
   128d0:	ldr	r0, [fp, #-76]	; 0xffffffb4
   128d4:	mov	r5, r4
   128d8:	add	r4, r7, r0
   128dc:	cmp	r0, #2
   128e0:	bcc	128fc <__snprintf_chk@plt+0x1990>
   128e4:	cmn	lr, #1
   128e8:	bne	128fc <__snprintf_chk@plt+0x1990>
   128ec:	mov	r0, ip
   128f0:	bl	10e94 <strlen@plt>
   128f4:	ldr	ip, [fp, #-84]	; 0xffffffac
   128f8:	mov	lr, r0
   128fc:	cmp	r4, lr
   12900:	bls	12914 <__snprintf_chk@plt+0x19a8>
   12904:	mov	r6, #0
   12908:	b	12954 <__snprintf_chk@plt+0x19e8>
   1290c:	mov	r6, #0
   12910:	b	12958 <__snprintf_chk@plt+0x19ec>
   12914:	ldr	r1, [sp, #92]	; 0x5c
   12918:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1291c:	add	r0, ip, r7
   12920:	mov	r4, lr
   12924:	bl	10da4 <memcmp@plt>
   12928:	ldr	r2, [sp, #88]	; 0x58
   1292c:	cmp	r0, #0
   12930:	mov	r1, r0
   12934:	movwne	r1, #1
   12938:	orr	r1, r1, r2
   1293c:	tst	r1, #1
   12940:	beq	13500 <__snprintf_chk@plt+0x2594>
   12944:	ldr	ip, [fp, #-84]	; 0xffffffac
   12948:	clz	r0, r0
   1294c:	mov	lr, r4
   12950:	lsr	r6, r0, #5
   12954:	mov	r4, r5
   12958:	ldrb	r5, [ip, r7]
   1295c:	cmp	r5, #126	; 0x7e
   12960:	bhi	12d28 <__snprintf_chk@plt+0x1dbc>
   12964:	add	r3, pc, #16
   12968:	mov	sl, #1
   1296c:	mov	r2, #110	; 0x6e
   12970:	mov	r0, #97	; 0x61
   12974:	mov	r1, #0
   12978:	ldr	pc, [r3, r5, lsl #2]
   1297c:	andeq	r2, r1, ip, lsl #24
   12980:	andeq	r2, r1, r8, lsr #26
   12984:	andeq	r2, r1, r8, lsr #26
   12988:	andeq	r2, r1, r8, lsr #26
   1298c:	andeq	r2, r1, r8, lsr #26
   12990:	andeq	r2, r1, r8, lsr #26
   12994:	andeq	r2, r1, r8, lsr #26
   12998:	andeq	r2, r1, ip, asr #27
   1299c:	andeq	r2, r1, ip, ror #23
   129a0:	andeq	r2, r1, r4, ror #23
   129a4:	strdeq	r2, [r1], -r8
   129a8:	andeq	r2, r1, ip, ror ip
   129ac:	ldrdeq	r2, [r1], -ip
   129b0:	strdeq	r2, [r1], -r4
   129b4:	andeq	r2, r1, r8, lsr #26
   129b8:	andeq	r2, r1, r8, lsr #26
   129bc:	andeq	r2, r1, r8, lsr #26
   129c0:	andeq	r2, r1, r8, lsr #26
   129c4:	andeq	r2, r1, r8, lsr #26
   129c8:	andeq	r2, r1, r8, lsr #26
   129cc:	andeq	r2, r1, r8, lsr #26
   129d0:	andeq	r2, r1, r8, lsr #26
   129d4:	andeq	r2, r1, r8, lsr #26
   129d8:	andeq	r2, r1, r8, lsr #26
   129dc:	andeq	r2, r1, r8, lsr #26
   129e0:	andeq	r2, r1, r8, lsr #26
   129e4:	andeq	r2, r1, r8, lsr #26
   129e8:	andeq	r2, r1, r8, lsr #26
   129ec:	andeq	r2, r1, r8, lsr #26
   129f0:	andeq	r2, r1, r8, lsr #26
   129f4:	andeq	r2, r1, r8, lsr #26
   129f8:	andeq	r2, r1, r8, lsr #26
   129fc:	andeq	r2, r1, ip, lsl #27
   12a00:	muleq	r1, r0, sp
   12a04:	muleq	r1, r0, sp
   12a08:	andeq	r2, r1, ip, lsl #23
   12a0c:	muleq	r1, r0, sp
   12a10:	andeq	r2, r1, r8, ror fp
   12a14:	muleq	r1, r0, sp
   12a18:	andeq	r2, r1, r4, lsl #25
   12a1c:	muleq	r1, r0, sp
   12a20:	muleq	r1, r0, sp
   12a24:	muleq	r1, r0, sp
   12a28:	andeq	r2, r1, r8, ror fp
   12a2c:	andeq	r2, r1, r8, ror fp
   12a30:	andeq	r2, r1, r8, ror fp
   12a34:	andeq	r2, r1, r8, ror fp
   12a38:	andeq	r2, r1, r8, ror fp
   12a3c:	andeq	r2, r1, r8, ror fp
   12a40:	andeq	r2, r1, r8, ror fp
   12a44:	andeq	r2, r1, r8, ror fp
   12a48:	andeq	r2, r1, r8, ror fp
   12a4c:	andeq	r2, r1, r8, ror fp
   12a50:	andeq	r2, r1, r8, ror fp
   12a54:	andeq	r2, r1, r8, ror fp
   12a58:	andeq	r2, r1, r8, ror fp
   12a5c:	andeq	r2, r1, r8, ror fp
   12a60:	andeq	r2, r1, r8, ror fp
   12a64:	andeq	r2, r1, r8, ror fp
   12a68:	muleq	r1, r0, sp
   12a6c:	muleq	r1, r0, sp
   12a70:	muleq	r1, r0, sp
   12a74:	muleq	r1, r0, sp
   12a78:	andeq	r2, r1, r0, asr ip
   12a7c:	andeq	r2, r1, r8, lsr #26
   12a80:	andeq	r2, r1, r8, ror fp
   12a84:	andeq	r2, r1, r8, ror fp
   12a88:	andeq	r2, r1, r8, ror fp
   12a8c:	andeq	r2, r1, r8, ror fp
   12a90:	andeq	r2, r1, r8, ror fp
   12a94:	andeq	r2, r1, r8, ror fp
   12a98:	andeq	r2, r1, r8, ror fp
   12a9c:	andeq	r2, r1, r8, ror fp
   12aa0:	andeq	r2, r1, r8, ror fp
   12aa4:	andeq	r2, r1, r8, ror fp
   12aa8:	andeq	r2, r1, r8, ror fp
   12aac:	andeq	r2, r1, r8, ror fp
   12ab0:	andeq	r2, r1, r8, ror fp
   12ab4:	andeq	r2, r1, r8, ror fp
   12ab8:	andeq	r2, r1, r8, ror fp
   12abc:	andeq	r2, r1, r8, ror fp
   12ac0:	andeq	r2, r1, r8, ror fp
   12ac4:	andeq	r2, r1, r8, ror fp
   12ac8:	andeq	r2, r1, r8, ror fp
   12acc:	andeq	r2, r1, r8, ror fp
   12ad0:	andeq	r2, r1, r8, ror fp
   12ad4:	andeq	r2, r1, r8, ror fp
   12ad8:	andeq	r2, r1, r8, ror fp
   12adc:	andeq	r2, r1, r8, ror fp
   12ae0:	andeq	r2, r1, r8, ror fp
   12ae4:	andeq	r2, r1, r8, ror fp
   12ae8:	muleq	r1, r0, sp
   12aec:			; <UNDEFINED> instruction: 0x00012bb8
   12af0:	andeq	r2, r1, r8, ror fp
   12af4:	muleq	r1, r0, sp
   12af8:	andeq	r2, r1, r8, ror fp
   12afc:	muleq	r1, r0, sp
   12b00:	andeq	r2, r1, r8, ror fp
   12b04:	andeq	r2, r1, r8, ror fp
   12b08:	andeq	r2, r1, r8, ror fp
   12b0c:	andeq	r2, r1, r8, ror fp
   12b10:	andeq	r2, r1, r8, ror fp
   12b14:	andeq	r2, r1, r8, ror fp
   12b18:	andeq	r2, r1, r8, ror fp
   12b1c:	andeq	r2, r1, r8, ror fp
   12b20:	andeq	r2, r1, r8, ror fp
   12b24:	andeq	r2, r1, r8, ror fp
   12b28:	andeq	r2, r1, r8, ror fp
   12b2c:	andeq	r2, r1, r8, ror fp
   12b30:	andeq	r2, r1, r8, ror fp
   12b34:	andeq	r2, r1, r8, ror fp
   12b38:	andeq	r2, r1, r8, ror fp
   12b3c:	andeq	r2, r1, r8, ror fp
   12b40:	andeq	r2, r1, r8, ror fp
   12b44:	andeq	r2, r1, r8, ror fp
   12b48:	andeq	r2, r1, r8, ror fp
   12b4c:	andeq	r2, r1, r8, ror fp
   12b50:	andeq	r2, r1, r8, ror fp
   12b54:	andeq	r2, r1, r8, ror fp
   12b58:	andeq	r2, r1, r8, ror fp
   12b5c:	andeq	r2, r1, r8, ror fp
   12b60:	andeq	r2, r1, r8, ror fp
   12b64:	andeq	r2, r1, r8, ror fp
   12b68:	muleq	r1, ip, fp
   12b6c:	muleq	r1, r0, sp
   12b70:	muleq	r1, ip, fp
   12b74:	andeq	r2, r1, ip, lsl #23
   12b78:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12b7c:	cmp	r0, #0
   12b80:	beq	12de0 <__snprintf_chk@plt+0x1e74>
   12b84:	ldr	r0, [fp, #16]
   12b88:	b	12de4 <__snprintf_chk@plt+0x1e78>
   12b8c:	mov	sl, #0
   12b90:	cmp	r7, #0
   12b94:	bne	12ffc <__snprintf_chk@plt+0x2090>
   12b98:	b	12d8c <__snprintf_chk@plt+0x1e20>
   12b9c:	mov	sl, #0
   12ba0:	cmn	lr, #1
   12ba4:	beq	12d78 <__snprintf_chk@plt+0x1e0c>
   12ba8:	cmp	r7, #0
   12bac:	cmpeq	lr, #1
   12bb0:	bne	12ffc <__snprintf_chk@plt+0x2090>
   12bb4:	b	12d8c <__snprintf_chk@plt+0x1e20>
   12bb8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12bbc:	cmp	r0, #2
   12bc0:	bne	12db0 <__snprintf_chk@plt+0x1e44>
   12bc4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12bc8:	tst	r0, #1
   12bcc:	bne	1351c <__snprintf_chk@plt+0x25b0>
   12bd0:	mov	r9, #0
   12bd4:	mov	r0, #92	; 0x5c
   12bd8:	b	12dc4 <__snprintf_chk@plt+0x1e58>
   12bdc:	mov	r0, #102	; 0x66
   12be0:	b	12dcc <__snprintf_chk@plt+0x1e60>
   12be4:	mov	r2, #116	; 0x74
   12be8:	b	12bf8 <__snprintf_chk@plt+0x1c8c>
   12bec:	mov	r0, #98	; 0x62
   12bf0:	b	12dcc <__snprintf_chk@plt+0x1e60>
   12bf4:	mov	r2, #114	; 0x72
   12bf8:	ldr	r0, [sp, #60]	; 0x3c
   12bfc:	tst	r0, #1
   12c00:	mov	r0, r2
   12c04:	bne	12dcc <__snprintf_chk@plt+0x1e60>
   12c08:	b	1351c <__snprintf_chk@plt+0x25b0>
   12c0c:	ldr	r0, [sp, #84]	; 0x54
   12c10:	tst	r0, #1
   12c14:	beq	12eb8 <__snprintf_chk@plt+0x1f4c>
   12c18:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12c1c:	tst	r0, #1
   12c20:	bne	13624 <__snprintf_chk@plt+0x26b8>
   12c24:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12c28:	ldr	r3, [fp, #-48]	; 0xffffffd0
   12c2c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   12c30:	cmp	r0, #2
   12c34:	ldr	r0, [fp, #-80]	; 0xffffffb0
   12c38:	movwne	r0, #1
   12c3c:	orr	r0, r0, r3
   12c40:	tst	r0, #1
   12c44:	beq	13338 <__snprintf_chk@plt+0x23cc>
   12c48:	mov	r0, r8
   12c4c:	b	13378 <__snprintf_chk@plt+0x240c>
   12c50:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12c54:	mov	r9, #0
   12c58:	mov	r5, #63	; 0x3f
   12c5c:	cmp	r0, #5
   12c60:	beq	13004 <__snprintf_chk@plt+0x2098>
   12c64:	cmp	r0, #2
   12c68:	bne	130c4 <__snprintf_chk@plt+0x2158>
   12c6c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12c70:	tst	r0, #1
   12c74:	beq	130c8 <__snprintf_chk@plt+0x215c>
   12c78:	b	1351c <__snprintf_chk@plt+0x25b0>
   12c7c:	mov	r0, #118	; 0x76
   12c80:	b	12dcc <__snprintf_chk@plt+0x1e60>
   12c84:	mov	r0, #1
   12c88:	mov	r5, #39	; 0x27
   12c8c:	str	r0, [sp, #52]	; 0x34
   12c90:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12c94:	cmp	r0, #2
   12c98:	bne	12d20 <__snprintf_chk@plt+0x1db4>
   12c9c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12ca0:	tst	r0, #1
   12ca4:	bne	1351c <__snprintf_chk@plt+0x25b0>
   12ca8:	ldr	r3, [sp, #68]	; 0x44
   12cac:	ldr	r2, [fp, #-52]	; 0xffffffcc
   12cb0:	mov	r9, #0
   12cb4:	clz	r1, r2
   12cb8:	cmp	r3, #0
   12cbc:	mov	r0, r3
   12cc0:	movwne	r0, #1
   12cc4:	lsr	r1, r1, #5
   12cc8:	orrs	r0, r0, r1
   12ccc:	moveq	r3, r2
   12cd0:	moveq	r2, r0
   12cd4:	cmp	r8, r2
   12cd8:	str	r3, [sp, #68]	; 0x44
   12cdc:	str	r2, [fp, #-52]	; 0xffffffcc
   12ce0:	ldrcc	r1, [fp, #-56]	; 0xffffffc8
   12ce4:	movcc	r0, #39	; 0x27
   12ce8:	strbcc	r0, [r1, r8]
   12cec:	add	r0, r8, #1
   12cf0:	cmp	r0, r2
   12cf4:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   12cf8:	movcc	r1, #92	; 0x5c
   12cfc:	strbcc	r1, [r3, r0]
   12d00:	add	r0, r8, #2
   12d04:	add	r8, r8, #3
   12d08:	cmp	r0, r2
   12d0c:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   12d10:	movcc	r1, #39	; 0x27
   12d14:	strbcc	r1, [r2, r0]
   12d18:	mov	r0, #0
   12d1c:	str	r0, [fp, #-48]	; 0xffffffd0
   12d20:	mov	sl, #1
   12d24:	b	12b78 <__snprintf_chk@plt+0x1c0c>
   12d28:	ldr	r0, [sp, #32]
   12d2c:	cmp	r0, #1
   12d30:	bne	12edc <__snprintf_chk@plt+0x1f70>
   12d34:	str	lr, [sp, #80]	; 0x50
   12d38:	bl	10e7c <__ctype_b_loc@plt>
   12d3c:	ldr	r0, [r0]
   12d40:	ldr	ip, [fp, #-84]	; 0xffffffac
   12d44:	mov	r1, #1
   12d48:	add	r0, r0, r5, lsl #1
   12d4c:	ldrb	r0, [r0, #1]
   12d50:	ubfx	sl, r0, #6, #1
   12d54:	ldr	r0, [sp, #48]	; 0x30
   12d58:	mov	r2, r1
   12d5c:	cmp	r1, #1
   12d60:	orr	r0, sl, r0
   12d64:	bhi	130d0 <__snprintf_chk@plt+0x2164>
   12d68:	tst	r0, #1
   12d6c:	beq	130d0 <__snprintf_chk@plt+0x2164>
   12d70:	ldr	lr, [sp, #80]	; 0x50
   12d74:	b	12b78 <__snprintf_chk@plt+0x1c0c>
   12d78:	cmp	r7, #0
   12d7c:	bne	12ff8 <__snprintf_chk@plt+0x208c>
   12d80:	ldrb	r0, [ip, #1]
   12d84:	cmp	r0, #0
   12d88:	bne	12ff8 <__snprintf_chk@plt+0x208c>
   12d8c:	mov	r1, #1
   12d90:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12d94:	cmp	r0, #2
   12d98:	bne	12da8 <__snprintf_chk@plt+0x1e3c>
   12d9c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12da0:	tst	r0, #1
   12da4:	bne	1351c <__snprintf_chk@plt+0x25b0>
   12da8:	mov	sl, r1
   12dac:	b	12b78 <__snprintf_chk@plt+0x1c0c>
   12db0:	ldr	r1, [sp, #44]	; 0x2c
   12db4:	mov	r9, #0
   12db8:	mov	r0, #92	; 0x5c
   12dbc:	cmp	r1, #0
   12dc0:	beq	12dcc <__snprintf_chk@plt+0x1e60>
   12dc4:	mov	sl, #0
   12dc8:	b	132e4 <__snprintf_chk@plt+0x2378>
   12dcc:	ldr	r1, [sp, #84]	; 0x54
   12dd0:	mov	sl, #0
   12dd4:	mov	r9, #0
   12dd8:	tst	r1, #1
   12ddc:	bne	12e18 <__snprintf_chk@plt+0x1eac>
   12de0:	ldr	r0, [fp, #-88]	; 0xffffffa8
   12de4:	cmp	r0, #0
   12de8:	mov	r0, r5
   12dec:	beq	12e10 <__snprintf_chk@plt+0x1ea4>
   12df0:	ldr	r1, [fp, #16]
   12df4:	ubfx	r0, r5, #5, #3
   12df8:	mov	r2, #1
   12dfc:	ldr	r0, [r1, r0, lsl #2]
   12e00:	and	r1, r5, #31
   12e04:	tst	r0, r2, lsl r1
   12e08:	mov	r0, r5
   12e0c:	bne	12e18 <__snprintf_chk@plt+0x1eac>
   12e10:	cmp	r6, #0
   12e14:	beq	132e4 <__snprintf_chk@plt+0x2378>
   12e18:	ldr	r1, [fp, #-72]	; 0xffffffb8
   12e1c:	ldr	r6, [fp, #-52]	; 0xffffffcc
   12e20:	tst	r1, #1
   12e24:	bne	134f8 <__snprintf_chk@plt+0x258c>
   12e28:	ldr	r1, [fp, #-64]	; 0xffffffc0
   12e2c:	ldr	r5, [fp, #-48]	; 0xffffffd0
   12e30:	cmp	r1, #2
   12e34:	ldr	r1, [fp, #-80]	; 0xffffffb0
   12e38:	movwne	r1, #1
   12e3c:	orr	r1, r1, r5
   12e40:	tst	r1, #1
   12e44:	bne	12e88 <__snprintf_chk@plt+0x1f1c>
   12e48:	cmp	r8, r6
   12e4c:	mov	r5, #1
   12e50:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   12e54:	movcc	r1, #39	; 0x27
   12e58:	strbcc	r1, [r2, r8]
   12e5c:	add	r1, r8, #1
   12e60:	cmp	r1, r6
   12e64:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   12e68:	movcc	r2, #36	; 0x24
   12e6c:	strbcc	r2, [r3, r1]
   12e70:	add	r1, r8, #2
   12e74:	add	r8, r8, #3
   12e78:	cmp	r1, r6
   12e7c:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   12e80:	movcc	r2, #39	; 0x27
   12e84:	strbcc	r2, [r3, r1]
   12e88:	cmp	r8, r6
   12e8c:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   12e90:	movcc	r1, #92	; 0x5c
   12e94:	strbcc	r1, [r2, r8]
   12e98:	add	r8, r8, #1
   12e9c:	cmp	r8, r6
   12ea0:	and	r4, r4, sl
   12ea4:	ldrcc	r1, [fp, #-56]	; 0xffffffc8
   12ea8:	strbcc	r0, [r1, r8]
   12eac:	add	r8, r8, #1
   12eb0:	add	r7, r7, #1
   12eb4:	b	12898 <__snprintf_chk@plt+0x192c>
   12eb8:	ldr	r0, [sp, #28]
   12ebc:	mov	sl, #0
   12ec0:	mov	r9, #0
   12ec4:	mov	r5, #0
   12ec8:	cmp	r0, #0
   12ecc:	beq	12de0 <__snprintf_chk@plt+0x1e74>
   12ed0:	ldr	r6, [fp, #-52]	; 0xffffffcc
   12ed4:	ldr	r5, [fp, #-48]	; 0xffffffd0
   12ed8:	b	12eb0 <__snprintf_chk@plt+0x1f44>
   12edc:	mov	r0, #0
   12ee0:	cmn	lr, #1
   12ee4:	str	r6, [sp, #76]	; 0x4c
   12ee8:	str	r4, [sp, #20]
   12eec:	str	r0, [fp, #-36]	; 0xffffffdc
   12ef0:	str	r0, [fp, #-40]	; 0xffffffd8
   12ef4:	bne	12f08 <__snprintf_chk@plt+0x1f9c>
   12ef8:	mov	r0, ip
   12efc:	bl	10e94 <strlen@plt>
   12f00:	ldr	ip, [fp, #-84]	; 0xffffffac
   12f04:	mov	lr, r0
   12f08:	add	r0, ip, r7
   12f0c:	mov	sl, #1
   12f10:	mov	r6, #0
   12f14:	sub	r4, fp, #40	; 0x28
   12f18:	str	lr, [sp, #80]	; 0x50
   12f1c:	str	r0, [sp, #36]	; 0x24
   12f20:	str	r6, [sp, #40]	; 0x28
   12f24:	add	r6, r6, r7
   12f28:	sub	r0, fp, #44	; 0x2c
   12f2c:	mov	r3, r4
   12f30:	add	r1, ip, r6
   12f34:	sub	r2, lr, r6
   12f38:	bl	14b5c <__snprintf_chk@plt+0x3bf0>
   12f3c:	cmp	r0, #0
   12f40:	beq	1344c <__snprintf_chk@plt+0x24e0>
   12f44:	cmn	r0, #1
   12f48:	beq	1340c <__snprintf_chk@plt+0x24a0>
   12f4c:	ldr	lr, [sp, #80]	; 0x50
   12f50:	cmn	r0, #2
   12f54:	beq	13414 <__snprintf_chk@plt+0x24a8>
   12f58:	ldr	r2, [sp, #56]	; 0x38
   12f5c:	cmp	r0, #2
   12f60:	mov	r1, #0
   12f64:	movwcc	r1, #1
   12f68:	eor	r2, r2, #1
   12f6c:	orrs	r1, r2, r1
   12f70:	bne	12fbc <__snprintf_chk@plt+0x2050>
   12f74:	ldr	r1, [sp, #40]	; 0x28
   12f78:	ldr	r2, [sp, #36]	; 0x24
   12f7c:	add	ip, r2, r1
   12f80:	mov	r2, #1
   12f84:	ldrb	r3, [ip, r2]
   12f88:	sub	r6, r3, #94	; 0x5e
   12f8c:	cmp	r6, #30
   12f90:	bhi	12fa4 <__snprintf_chk@plt+0x2038>
   12f94:	mov	r4, #1
   12f98:	mov	r1, #1073741829	; 0x40000005
   12f9c:	tst	r1, r4, lsl r6
   12fa0:	bne	13518 <__snprintf_chk@plt+0x25ac>
   12fa4:	sub	r3, r3, #91	; 0x5b
   12fa8:	cmp	r3, #2
   12fac:	bcc	13518 <__snprintf_chk@plt+0x25ac>
   12fb0:	add	r2, r2, #1
   12fb4:	cmp	r2, r0
   12fb8:	bcc	12f84 <__snprintf_chk@plt+0x2018>
   12fbc:	ldr	r6, [sp, #40]	; 0x28
   12fc0:	add	r6, r0, r6
   12fc4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12fc8:	bl	10dd4 <iswprint@plt>
   12fcc:	cmp	r0, #0
   12fd0:	sub	r4, fp, #40	; 0x28
   12fd4:	movwne	r0, #1
   12fd8:	and	sl, sl, r0
   12fdc:	mov	r0, r4
   12fe0:	bl	10d8c <mbsinit@plt>
   12fe4:	ldr	lr, [sp, #80]	; 0x50
   12fe8:	ldr	ip, [fp, #-84]	; 0xffffffac
   12fec:	cmp	r0, #0
   12ff0:	beq	12f20 <__snprintf_chk@plt+0x1fb4>
   12ff4:	b	13454 <__snprintf_chk@plt+0x24e8>
   12ff8:	mvn	lr, #0
   12ffc:	mov	r9, #0
   13000:	b	12b78 <__snprintf_chk@plt+0x1c0c>
   13004:	ldr	r0, [sp, #24]
   13008:	cmp	r0, #0
   1300c:	beq	130c4 <__snprintf_chk@plt+0x2158>
   13010:	add	r0, r7, #2
   13014:	cmp	r0, lr
   13018:	bcs	130c4 <__snprintf_chk@plt+0x2158>
   1301c:	add	r1, ip, r7
   13020:	ldrb	r1, [r1, #1]
   13024:	cmp	r1, #63	; 0x3f
   13028:	bne	130c4 <__snprintf_chk@plt+0x2158>
   1302c:	ldrb	r5, [ip, r0]
   13030:	sub	r1, r5, #33	; 0x21
   13034:	cmp	r1, #29
   13038:	bhi	130c4 <__snprintf_chk@plt+0x2158>
   1303c:	movw	r3, #20929	; 0x51c1
   13040:	mov	r2, #1
   13044:	movt	r3, #14336	; 0x3800
   13048:	tst	r3, r2, lsl r1
   1304c:	beq	130c4 <__snprintf_chk@plt+0x2158>
   13050:	ldr	r1, [fp, #-72]	; 0xffffffb8
   13054:	tst	r1, #1
   13058:	bne	1362c <__snprintf_chk@plt+0x26c0>
   1305c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13060:	mov	r7, r0
   13064:	cmp	r8, r1
   13068:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   1306c:	movcc	r1, #63	; 0x3f
   13070:	strbcc	r1, [r2, r8]
   13074:	ldr	r2, [fp, #-52]	; 0xffffffcc
   13078:	add	r1, r8, #1
   1307c:	cmp	r1, r2
   13080:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   13084:	movcc	r2, #34	; 0x22
   13088:	strbcc	r2, [r3, r1]
   1308c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   13090:	add	r1, r8, #2
   13094:	cmp	r1, r2
   13098:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   1309c:	movcc	r2, #34	; 0x22
   130a0:	strbcc	r2, [r3, r1]
   130a4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   130a8:	add	r1, r8, #3
   130ac:	add	r8, r8, #4
   130b0:	cmp	r1, r2
   130b4:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   130b8:	movcc	r2, #63	; 0x3f
   130bc:	strbcc	r2, [r3, r1]
   130c0:	b	130c8 <__snprintf_chk@plt+0x215c>
   130c4:	mov	r5, #63	; 0x3f
   130c8:	mov	sl, #0
   130cc:	b	12b78 <__snprintf_chk@plt+0x1c0c>
   130d0:	str	r0, [sp, #40]	; 0x28
   130d4:	add	r0, r2, r7
   130d8:	str	r6, [sp, #76]	; 0x4c
   130dc:	add	r1, r7, #1
   130e0:	ldr	lr, [sp, #80]	; 0x50
   130e4:	ldr	r7, [fp, #-64]	; 0xffffffc0
   130e8:	ldr	r6, [fp, #-52]	; 0xffffffcc
   130ec:	mov	r3, #0
   130f0:	str	r0, [sp, #36]	; 0x24
   130f4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   130f8:	b	1318c <__snprintf_chk@plt+0x2220>
   130fc:	str	r0, [sp, #76]	; 0x4c
   13100:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13104:	cmp	r9, #0
   13108:	movwne	r9, #1
   1310c:	mvn	r7, r0
   13110:	orr	r7, r7, r9
   13114:	tst	r7, #1
   13118:	bne	13168 <__snprintf_chk@plt+0x21fc>
   1311c:	ldr	r6, [fp, #-52]	; 0xffffffcc
   13120:	cmp	r8, r6
   13124:	bcs	1313c <__snprintf_chk@plt+0x21d0>
   13128:	ldr	r7, [fp, #-56]	; 0xffffffc8
   1312c:	mov	r2, r4
   13130:	mov	r4, #39	; 0x27
   13134:	strb	r4, [r7, r8]
   13138:	mov	r4, r2
   1313c:	add	r7, r8, #1
   13140:	cmp	r7, r6
   13144:	bcs	1315c <__snprintf_chk@plt+0x21f0>
   13148:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1314c:	mov	r2, r4
   13150:	mov	r4, #39	; 0x27
   13154:	strb	r4, [r0, r7]
   13158:	mov	r4, r2
   1315c:	add	r8, r8, #2
   13160:	mov	r0, #0
   13164:	b	13170 <__snprintf_chk@plt+0x2204>
   13168:	ldr	r6, [fp, #-52]	; 0xffffffcc
   1316c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13170:	cmp	r8, r6
   13174:	ldr	r7, [fp, #-64]	; 0xffffffc0
   13178:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   1317c:	strbcc	r5, [r2, r8]
   13180:	add	r8, r8, #1
   13184:	ldrb	r5, [ip, r1]
   13188:	add	r1, r1, #1
   1318c:	ldr	r2, [sp, #40]	; 0x28
   13190:	tst	r2, #1
   13194:	beq	131d0 <__snprintf_chk@plt+0x2264>
   13198:	ldr	r2, [sp, #76]	; 0x4c
   1319c:	str	r0, [fp, #-48]	; 0xffffffd0
   131a0:	tst	r2, #1
   131a4:	beq	131c8 <__snprintf_chk@plt+0x225c>
   131a8:	cmp	r8, r6
   131ac:	bcs	131c4 <__snprintf_chk@plt+0x2258>
   131b0:	ldr	r6, [fp, #-56]	; 0xffffffc8
   131b4:	mov	r2, r4
   131b8:	mov	r4, #92	; 0x5c
   131bc:	strb	r4, [r6, r8]
   131c0:	mov	r4, r2
   131c4:	add	r8, r8, #1
   131c8:	mov	r0, #0
   131cc:	b	132c4 <__snprintf_chk@plt+0x2358>
   131d0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   131d4:	tst	r2, #1
   131d8:	bne	13524 <__snprintf_chk@plt+0x25b8>
   131dc:	ldr	r3, [fp, #-80]	; 0xffffffb0
   131e0:	cmp	r7, #2
   131e4:	movwne	r3, #1
   131e8:	orr	r3, r3, r0
   131ec:	tst	r3, #1
   131f0:	bne	1324c <__snprintf_chk@plt+0x22e0>
   131f4:	cmp	r8, r6
   131f8:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   131fc:	movcc	r3, #39	; 0x27
   13200:	strbcc	r3, [r2, r8]
   13204:	add	r3, r8, #1
   13208:	cmp	r3, r6
   1320c:	bcs	13224 <__snprintf_chk@plt+0x22b8>
   13210:	ldr	r2, [fp, #-56]	; 0xffffffc8
   13214:	mov	r7, r4
   13218:	mov	r4, #36	; 0x24
   1321c:	strb	r4, [r2, r3]
   13220:	mov	r4, r7
   13224:	add	r3, r8, #2
   13228:	cmp	r3, r6
   1322c:	bcs	13244 <__snprintf_chk@plt+0x22d8>
   13230:	ldr	r2, [fp, #-56]	; 0xffffffc8
   13234:	mov	r7, r4
   13238:	mov	r4, #39	; 0x27
   1323c:	strb	r4, [r2, r3]
   13240:	mov	r4, r7
   13244:	add	r8, r8, #3
   13248:	mov	r0, #1
   1324c:	cmp	r8, r6
   13250:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   13254:	movcc	r3, #92	; 0x5c
   13258:	strbcc	r3, [r2, r8]
   1325c:	add	r3, r8, #1
   13260:	cmp	r3, r6
   13264:	bcs	13284 <__snprintf_chk@plt+0x2318>
   13268:	mov	r2, r4
   1326c:	and	r7, r5, #192	; 0xc0
   13270:	mov	r4, #48	; 0x30
   13274:	orr	r7, r4, r7, lsr #6
   13278:	mov	r4, r2
   1327c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   13280:	strb	r7, [r2, r3]
   13284:	add	r3, r8, #2
   13288:	cmp	r3, r6
   1328c:	bcs	132ac <__snprintf_chk@plt+0x2340>
   13290:	ldr	r2, [fp, #-56]	; 0xffffffc8
   13294:	mov	r6, r4
   13298:	lsr	r7, r5, #3
   1329c:	mov	r4, #6
   132a0:	bfi	r7, r4, #3, #29
   132a4:	mov	r4, r6
   132a8:	strb	r7, [r2, r3]
   132ac:	str	r0, [fp, #-48]	; 0xffffffd0
   132b0:	ldr	r0, [sp, #76]	; 0x4c
   132b4:	mov	r3, #6
   132b8:	add	r8, r8, #3
   132bc:	bfi	r5, r3, #3, #29
   132c0:	mov	r3, #1
   132c4:	ldr	r2, [sp, #36]	; 0x24
   132c8:	and	r9, r3, #1
   132cc:	cmp	r2, r1
   132d0:	bhi	130fc <__snprintf_chk@plt+0x2190>
   132d4:	cmp	r9, #0
   132d8:	sub	r7, r1, #1
   132dc:	mov	r0, r5
   132e0:	movwne	r9, #1
   132e4:	cmp	r9, #0
   132e8:	bne	1332c <__snprintf_chk@plt+0x23c0>
   132ec:	ldr	r5, [fp, #-48]	; 0xffffffd0
   132f0:	ldr	r6, [fp, #-52]	; 0xffffffcc
   132f4:	tst	r5, #1
   132f8:	beq	12e9c <__snprintf_chk@plt+0x1f30>
   132fc:	cmp	r8, r6
   13300:	mov	r5, #0
   13304:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   13308:	movcc	r1, #39	; 0x27
   1330c:	strbcc	r1, [r2, r8]
   13310:	add	r1, r8, #1
   13314:	add	r8, r8, #2
   13318:	cmp	r1, r6
   1331c:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   13320:	movcc	r2, #39	; 0x27
   13324:	strbcc	r2, [r3, r1]
   13328:	b	12e9c <__snprintf_chk@plt+0x1f30>
   1332c:	ldr	r6, [fp, #-52]	; 0xffffffcc
   13330:	ldr	r5, [fp, #-48]	; 0xffffffd0
   13334:	b	12e9c <__snprintf_chk@plt+0x1f30>
   13338:	cmp	r8, r1
   1333c:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   13340:	movcc	r0, #39	; 0x27
   13344:	strbcc	r0, [r2, r8]
   13348:	add	r0, r8, #1
   1334c:	cmp	r0, r1
   13350:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   13354:	movcc	r2, #36	; 0x24
   13358:	strbcc	r2, [r3, r0]
   1335c:	add	r0, r8, #2
   13360:	cmp	r0, r1
   13364:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   13368:	movcc	r2, #39	; 0x27
   1336c:	strbcc	r2, [r3, r0]
   13370:	add	r0, r8, #3
   13374:	mov	r3, #1
   13378:	cmp	r0, r1
   1337c:	add	r8, r0, #1
   13380:	str	r3, [fp, #-48]	; 0xffffffd0
   13384:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   13388:	movcc	r1, #92	; 0x5c
   1338c:	strbcc	r1, [r2, r0]
   13390:	ldr	r1, [fp, #-64]	; 0xffffffc0
   13394:	cmp	r1, #2
   13398:	beq	133fc <__snprintf_chk@plt+0x2490>
   1339c:	add	r1, r7, #1
   133a0:	mov	sl, #0
   133a4:	mov	r9, #1
   133a8:	mov	r5, #48	; 0x30
   133ac:	cmp	r1, lr
   133b0:	bcs	12b78 <__snprintf_chk@plt+0x1c0c>
   133b4:	ldrb	r1, [ip, r1]
   133b8:	sub	r1, r1, #48	; 0x30
   133bc:	uxtb	r1, r1
   133c0:	cmp	r1, #9
   133c4:	bhi	12b78 <__snprintf_chk@plt+0x1c0c>
   133c8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   133cc:	cmp	r8, r1
   133d0:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   133d4:	movcc	r1, #48	; 0x30
   133d8:	strbcc	r1, [r2, r8]
   133dc:	ldr	r2, [fp, #-52]	; 0xffffffcc
   133e0:	add	r1, r0, #2
   133e4:	add	r8, r0, #3
   133e8:	cmp	r1, r2
   133ec:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   133f0:	movcc	r2, #48	; 0x30
   133f4:	strbcc	r2, [r3, r1]
   133f8:	b	12b78 <__snprintf_chk@plt+0x1c0c>
   133fc:	mov	r0, #48	; 0x30
   13400:	mov	r9, #1
   13404:	mov	sl, #0
   13408:	b	12e10 <__snprintf_chk@plt+0x1ea4>
   1340c:	mov	sl, #0
   13410:	b	1344c <__snprintf_chk@plt+0x24e0>
   13414:	mov	sl, #0
   13418:	cmp	lr, r6
   1341c:	bls	1344c <__snprintf_chk@plt+0x24e0>
   13420:	ldr	ip, [fp, #-84]	; 0xffffffac
   13424:	ldr	r6, [sp, #40]	; 0x28
   13428:	ldr	r0, [sp, #36]	; 0x24
   1342c:	ldrb	r0, [r0, r6]
   13430:	cmp	r0, #0
   13434:	beq	13454 <__snprintf_chk@plt+0x24e8>
   13438:	add	r6, r6, #1
   1343c:	add	r0, r7, r6
   13440:	cmp	r0, lr
   13444:	bcc	13428 <__snprintf_chk@plt+0x24bc>
   13448:	b	13454 <__snprintf_chk@plt+0x24e8>
   1344c:	ldr	ip, [fp, #-84]	; 0xffffffac
   13450:	ldr	r6, [sp, #40]	; 0x28
   13454:	mov	r1, r6
   13458:	ldr	r4, [sp, #20]
   1345c:	ldr	r6, [sp, #76]	; 0x4c
   13460:	b	12d54 <__snprintf_chk@plt+0x1de8>
   13464:	mov	lr, r7
   13468:	b	13470 <__snprintf_chk@plt+0x2504>
   1346c:	mvn	lr, #0
   13470:	ldr	r9, [fp, #-64]	; 0xffffffc0
   13474:	ldr	r1, [fp, #-72]	; 0xffffffb8
   13478:	eor	r0, r9, #2
   1347c:	orr	r0, r0, r8
   13480:	clz	r0, r0
   13484:	lsr	r0, r0, #5
   13488:	tst	r1, r0
   1348c:	bne	13588 <__snprintf_chk@plt+0x261c>
   13490:	mov	r0, r1
   13494:	ldr	r1, [fp, #-80]	; 0xffffffb0
   13498:	cmp	r9, #2
   1349c:	movwne	r1, #1
   134a0:	orr	r0, r0, r1
   134a4:	tst	r0, #1
   134a8:	bne	135c8 <__snprintf_chk@plt+0x265c>
   134ac:	ldr	r0, [sp, #52]	; 0x34
   134b0:	ldr	r1, [sp, #68]	; 0x44
   134b4:	str	lr, [sp, #80]	; 0x50
   134b8:	eor	r0, r0, #1
   134bc:	tst	r0, #1
   134c0:	bne	135c8 <__snprintf_chk@plt+0x265c>
   134c4:	tst	r4, #1
   134c8:	bne	13590 <__snprintf_chk@plt+0x2624>
   134cc:	mov	r7, #0
   134d0:	cmp	r1, #0
   134d4:	beq	135c0 <__snprintf_chk@plt+0x2654>
   134d8:	ldr	r0, [sp, #84]	; 0x54
   134dc:	mov	r3, #0
   134e0:	cmp	r6, #0
   134e4:	mov	r2, #0
   134e8:	mov	r4, r1
   134ec:	str	r3, [fp, #-72]	; 0xffffffb8
   134f0:	beq	1262c <__snprintf_chk@plt+0x16c0>
   134f4:	b	135c8 <__snprintf_chk@plt+0x265c>
   134f8:	ldr	r7, [fp, #-64]	; 0xffffffc0
   134fc:	b	13524 <__snprintf_chk@plt+0x25b8>
   13500:	ldr	ip, [fp, #-84]	; 0xffffffac
   13504:	mov	r2, #1
   13508:	mov	lr, r4
   1350c:	ldr	r7, [fp, #-64]	; 0xffffffc0
   13510:	ldr	r6, [fp, #-52]	; 0xffffffcc
   13514:	b	13528 <__snprintf_chk@plt+0x25bc>
   13518:	ldr	ip, [fp, #-84]	; 0xffffffac
   1351c:	mov	r7, #2
   13520:	ldr	r6, [fp, #-52]	; 0xffffffcc
   13524:	ldr	r2, [sp, #84]	; 0x54
   13528:	mov	r0, #0
   1352c:	ldr	r1, [fp, #12]
   13530:	tst	r2, #1
   13534:	mov	r2, r7
   13538:	mov	r3, lr
   1353c:	str	r0, [sp, #8]
   13540:	ldr	r0, [sp, #64]	; 0x40
   13544:	movwne	r2, #4
   13548:	cmp	r7, #2
   1354c:	movne	r2, r7
   13550:	str	r2, [sp]
   13554:	mov	r2, ip
   13558:	bic	r1, r1, #2
   1355c:	str	r0, [sp, #12]
   13560:	ldr	r0, [sp, #72]	; 0x48
   13564:	str	r1, [sp, #4]
   13568:	mov	r1, r6
   1356c:	str	r0, [sp, #16]
   13570:	ldr	r0, [fp, #-56]	; 0xffffffc8
   13574:	bl	125b4 <__snprintf_chk@plt+0x1648>
   13578:	mov	r8, r0
   1357c:	mov	r0, r8
   13580:	sub	sp, fp, #28
   13584:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13588:	mov	r7, #2
   1358c:	b	13524 <__snprintf_chk@plt+0x25b8>
   13590:	mov	r0, #5
   13594:	ldr	r2, [fp, #-84]	; 0xffffffac
   13598:	ldr	r3, [sp, #80]	; 0x50
   1359c:	str	r0, [sp]
   135a0:	ldr	r0, [fp, #12]
   135a4:	str	r0, [sp, #4]
   135a8:	ldr	r0, [fp, #16]
   135ac:	str	r0, [sp, #8]
   135b0:	ldr	r0, [sp, #64]	; 0x40
   135b4:	str	r0, [sp, #12]
   135b8:	ldr	r0, [sp, #72]	; 0x48
   135bc:	b	1356c <__snprintf_chk@plt+0x2600>
   135c0:	mov	r0, #0
   135c4:	str	r0, [fp, #-72]	; 0xffffffb8
   135c8:	ldr	r1, [sp, #92]	; 0x5c
   135cc:	cmp	r1, #0
   135d0:	beq	13610 <__snprintf_chk@plt+0x26a4>
   135d4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   135d8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   135dc:	tst	r0, #1
   135e0:	bne	13614 <__snprintf_chk@plt+0x26a8>
   135e4:	ldrb	r0, [r1]
   135e8:	cmp	r0, #0
   135ec:	beq	13614 <__snprintf_chk@plt+0x26a8>
   135f0:	add	r1, r1, #1
   135f4:	cmp	r8, r6
   135f8:	strbcc	r0, [r2, r8]
   135fc:	add	r8, r8, #1
   13600:	ldrb	r0, [r1], #1
   13604:	cmp	r0, #0
   13608:	bne	135f4 <__snprintf_chk@plt+0x2688>
   1360c:	b	13614 <__snprintf_chk@plt+0x26a8>
   13610:	ldr	r2, [fp, #-56]	; 0xffffffc8
   13614:	cmp	r8, r6
   13618:	movcc	r0, #0
   1361c:	strbcc	r0, [r2, r8]
   13620:	b	1357c <__snprintf_chk@plt+0x2610>
   13624:	mov	r2, #1
   13628:	b	1350c <__snprintf_chk@plt+0x25a0>
   1362c:	mov	r7, #5
   13630:	b	13520 <__snprintf_chk@plt+0x25b4>
   13634:	bl	10f60 <abort@plt>
   13638:	mov	r3, r2
   1363c:	mov	r2, #0
   13640:	b	13644 <__snprintf_chk@plt+0x26d8>
   13644:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13648:	add	fp, sp, #28
   1364c:	sub	sp, sp, #36	; 0x24
   13650:	movw	r8, #24912	; 0x6150
   13654:	cmp	r3, #0
   13658:	mov	r4, r2
   1365c:	str	r2, [sp, #24]
   13660:	mov	r5, r1
   13664:	mov	r6, r0
   13668:	str	r0, [sp, #20]
   1366c:	movt	r8, #2
   13670:	movne	r8, r3
   13674:	bl	10ea0 <__errno_location@plt>
   13678:	str	r0, [sp, #28]
   1367c:	cmp	r4, #0
   13680:	add	sl, r8, #8
   13684:	ldm	r8, {r3, r9}
   13688:	ldr	r7, [r0]
   1368c:	ldr	r1, [r8, #40]	; 0x28
   13690:	ldr	r2, [r8, #44]	; 0x2c
   13694:	mov	r0, #0
   13698:	orreq	r9, r9, #1
   1369c:	str	r7, [sp, #32]
   136a0:	mov	r7, r5
   136a4:	stm	sp, {r3, r9, sl}
   136a8:	str	r1, [sp, #12]
   136ac:	str	r2, [sp, #16]
   136b0:	mov	r1, #0
   136b4:	mov	r2, r6
   136b8:	mov	r3, r5
   136bc:	bl	125b4 <__snprintf_chk@plt+0x1648>
   136c0:	add	r4, r0, #1
   136c4:	mov	r5, r0
   136c8:	mov	r0, r4
   136cc:	bl	143a8 <__snprintf_chk@plt+0x343c>
   136d0:	mov	r6, r0
   136d4:	ldr	r0, [r8]
   136d8:	ldr	r2, [r8, #44]	; 0x2c
   136dc:	ldr	r1, [r8, #40]	; 0x28
   136e0:	mov	r3, r7
   136e4:	stm	sp, {r0, r9, sl}
   136e8:	str	r2, [sp, #16]
   136ec:	str	r1, [sp, #12]
   136f0:	mov	r0, r6
   136f4:	mov	r1, r4
   136f8:	ldr	r2, [sp, #20]
   136fc:	bl	125b4 <__snprintf_chk@plt+0x1648>
   13700:	ldr	r0, [sp, #24]
   13704:	ldr	r1, [sp, #32]
   13708:	ldr	r2, [sp, #28]
   1370c:	cmp	r0, #0
   13710:	str	r1, [r2]
   13714:	strne	r5, [r0]
   13718:	mov	r0, r6
   1371c:	sub	sp, fp, #28
   13720:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13724:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13728:	add	fp, sp, #24
   1372c:	movw	r5, #24804	; 0x60e4
   13730:	movw	r8, #24800	; 0x60e0
   13734:	movt	r5, #2
   13738:	movt	r8, #2
   1373c:	ldr	r0, [r5]
   13740:	ldr	r4, [r8]
   13744:	cmp	r0, #2
   13748:	blt	13774 <__snprintf_chk@plt+0x2808>
   1374c:	add	r7, r4, #12
   13750:	mov	r6, #0
   13754:	ldr	r0, [r7, r6, lsl #3]
   13758:	bl	14a58 <__snprintf_chk@plt+0x3aec>
   1375c:	ldr	r1, [r5]
   13760:	add	r2, r6, #2
   13764:	add	r0, r6, #1
   13768:	mov	r6, r0
   1376c:	cmp	r2, r1
   13770:	blt	13754 <__snprintf_chk@plt+0x27e8>
   13774:	ldr	r0, [r4, #4]
   13778:	movw	r7, #24960	; 0x6180
   1377c:	movt	r7, #2
   13780:	cmp	r0, r7
   13784:	beq	1379c <__snprintf_chk@plt+0x2830>
   13788:	bl	14a58 <__snprintf_chk@plt+0x3aec>
   1378c:	movw	r0, #24808	; 0x60e8
   13790:	mov	r6, #256	; 0x100
   13794:	movt	r0, #2
   13798:	strd	r6, [r0]
   1379c:	movw	r6, #24808	; 0x60e8
   137a0:	movt	r6, #2
   137a4:	cmp	r4, r6
   137a8:	beq	137b8 <__snprintf_chk@plt+0x284c>
   137ac:	mov	r0, r4
   137b0:	bl	14a58 <__snprintf_chk@plt+0x3aec>
   137b4:	str	r6, [r8]
   137b8:	mov	r0, #1
   137bc:	str	r0, [r5]
   137c0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   137c4:	movw	r3, #24912	; 0x6150
   137c8:	mvn	r2, #0
   137cc:	movt	r3, #2
   137d0:	b	137d4 <__snprintf_chk@plt+0x2868>
   137d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   137d8:	add	fp, sp, #28
   137dc:	sub	sp, sp, #44	; 0x2c
   137e0:	mov	r7, r3
   137e4:	str	r2, [sp, #36]	; 0x24
   137e8:	str	r1, [sp, #32]
   137ec:	mov	r5, r0
   137f0:	bl	10ea0 <__errno_location@plt>
   137f4:	cmp	r5, #0
   137f8:	blt	13964 <__snprintf_chk@plt+0x29f8>
   137fc:	cmn	r5, #-2147483647	; 0x80000001
   13800:	beq	13964 <__snprintf_chk@plt+0x29f8>
   13804:	movw	r8, #24804	; 0x60e4
   13808:	movw	r4, #24800	; 0x60e0
   1380c:	str	r0, [sp, #28]
   13810:	ldr	r0, [r0]
   13814:	movt	r8, #2
   13818:	movt	r4, #2
   1381c:	ldr	r1, [r8]
   13820:	ldr	r6, [r4]
   13824:	str	r0, [sp, #24]
   13828:	cmp	r1, r5
   1382c:	ble	13838 <__snprintf_chk@plt+0x28cc>
   13830:	mov	sl, r6
   13834:	b	138a0 <__snprintf_chk@plt+0x2934>
   13838:	movw	r9, #24808	; 0x60e8
   1383c:	mov	r0, #8
   13840:	add	r2, r5, #1
   13844:	str	r1, [fp, #-32]	; 0xffffffe0
   13848:	mvn	r3, #-2147483648	; 0x80000000
   1384c:	movt	r9, #2
   13850:	str	r0, [sp]
   13854:	sub	r2, r2, r1
   13858:	sub	r1, fp, #32
   1385c:	subs	r0, r6, r9
   13860:	movne	r0, r6
   13864:	bl	144d8 <__snprintf_chk@plt+0x356c>
   13868:	cmp	r6, r9
   1386c:	mov	sl, r0
   13870:	str	r0, [r4]
   13874:	ldrdeq	r0, [r9]
   13878:	stmeq	sl, {r0, r1}
   1387c:	ldr	r1, [r8]
   13880:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13884:	add	r0, sl, r1, lsl #3
   13888:	sub	r1, r2, r1
   1388c:	lsl	r2, r1, #3
   13890:	mov	r1, #0
   13894:	bl	10ec4 <memset@plt>
   13898:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1389c:	str	r0, [r8]
   138a0:	mov	r9, sl
   138a4:	ldr	r6, [r9, r5, lsl #3]!
   138a8:	ldr	r4, [r9, #4]!
   138ac:	ldm	r7, {r0, r1}
   138b0:	ldr	r2, [r7, #40]	; 0x28
   138b4:	ldr	r3, [r7, #44]	; 0x2c
   138b8:	orr	r8, r1, #1
   138bc:	add	r1, r7, #8
   138c0:	stm	sp, {r0, r8}
   138c4:	add	r0, sp, #8
   138c8:	str	r1, [sp, #20]
   138cc:	stm	r0, {r1, r2, r3}
   138d0:	mov	r0, r4
   138d4:	mov	r1, r6
   138d8:	ldr	r2, [sp, #32]
   138dc:	ldr	r3, [sp, #36]	; 0x24
   138e0:	bl	125b4 <__snprintf_chk@plt+0x1648>
   138e4:	cmp	r6, r0
   138e8:	bhi	1394c <__snprintf_chk@plt+0x29e0>
   138ec:	add	r6, r0, #1
   138f0:	movw	r0, #24960	; 0x6180
   138f4:	movt	r0, #2
   138f8:	str	r6, [sl, r5, lsl #3]
   138fc:	cmp	r4, r0
   13900:	beq	1390c <__snprintf_chk@plt+0x29a0>
   13904:	mov	r0, r4
   13908:	bl	14a58 <__snprintf_chk@plt+0x3aec>
   1390c:	mov	r0, r6
   13910:	bl	143a8 <__snprintf_chk@plt+0x343c>
   13914:	str	r0, [r9]
   13918:	mov	r4, r0
   1391c:	add	r3, sp, #8
   13920:	ldr	r0, [r7]
   13924:	ldr	r1, [r7, #40]	; 0x28
   13928:	ldr	r2, [r7, #44]	; 0x2c
   1392c:	stm	sp, {r0, r8}
   13930:	ldr	r0, [sp, #20]
   13934:	stm	r3, {r0, r1, r2}
   13938:	mov	r0, r4
   1393c:	mov	r1, r6
   13940:	ldr	r2, [sp, #32]
   13944:	ldr	r3, [sp, #36]	; 0x24
   13948:	bl	125b4 <__snprintf_chk@plt+0x1648>
   1394c:	ldr	r0, [sp, #28]
   13950:	ldr	r1, [sp, #24]
   13954:	str	r1, [r0]
   13958:	mov	r0, r4
   1395c:	sub	sp, fp, #28
   13960:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13964:	bl	10f60 <abort@plt>
   13968:	movw	r3, #24912	; 0x6150
   1396c:	movt	r3, #2
   13970:	b	137d4 <__snprintf_chk@plt+0x2868>
   13974:	movw	r3, #24912	; 0x6150
   13978:	mov	r1, r0
   1397c:	mov	r0, #0
   13980:	mvn	r2, #0
   13984:	movt	r3, #2
   13988:	b	137d4 <__snprintf_chk@plt+0x2868>
   1398c:	movw	r3, #24912	; 0x6150
   13990:	mov	r2, r1
   13994:	mov	r1, r0
   13998:	mov	r0, #0
   1399c:	movt	r3, #2
   139a0:	b	137d4 <__snprintf_chk@plt+0x2868>
   139a4:	push	{fp, lr}
   139a8:	mov	fp, sp
   139ac:	sub	sp, sp, #48	; 0x30
   139b0:	vmov.i32	q8, #0	; 0x00000000
   139b4:	mov	ip, #32
   139b8:	mov	r3, sp
   139bc:	mov	lr, r2
   139c0:	cmp	r1, #10
   139c4:	add	r2, r3, #16
   139c8:	vst1.64	{d16-d17}, [r3], ip
   139cc:	vst1.64	{d16-d17}, [r3]
   139d0:	vst1.64	{d16-d17}, [r2]
   139d4:	beq	139f4 <__snprintf_chk@plt+0x2a88>
   139d8:	str	r1, [sp]
   139dc:	mov	r3, sp
   139e0:	mov	r1, lr
   139e4:	mvn	r2, #0
   139e8:	bl	137d4 <__snprintf_chk@plt+0x2868>
   139ec:	mov	sp, fp
   139f0:	pop	{fp, pc}
   139f4:	bl	10f60 <abort@plt>
   139f8:	push	{r4, sl, fp, lr}
   139fc:	add	fp, sp, #8
   13a00:	sub	sp, sp, #48	; 0x30
   13a04:	mov	ip, r3
   13a08:	mov	r3, sp
   13a0c:	vmov.i32	q8, #0	; 0x00000000
   13a10:	mov	lr, #32
   13a14:	cmp	r1, #10
   13a18:	add	r4, r3, #16
   13a1c:	vst1.64	{d16-d17}, [r3], lr
   13a20:	vst1.64	{d16-d17}, [r3]
   13a24:	vst1.64	{d16-d17}, [r4]
   13a28:	beq	13a48 <__snprintf_chk@plt+0x2adc>
   13a2c:	str	r1, [sp]
   13a30:	mov	r1, r2
   13a34:	mov	r3, sp
   13a38:	mov	r2, ip
   13a3c:	bl	137d4 <__snprintf_chk@plt+0x2868>
   13a40:	sub	sp, fp, #8
   13a44:	pop	{r4, sl, fp, pc}
   13a48:	bl	10f60 <abort@plt>
   13a4c:	mov	r2, r1
   13a50:	mov	r1, r0
   13a54:	mov	r0, #0
   13a58:	b	139a4 <__snprintf_chk@plt+0x2a38>
   13a5c:	mov	r3, r2
   13a60:	mov	r2, r1
   13a64:	mov	r1, r0
   13a68:	mov	r0, #0
   13a6c:	b	139f8 <__snprintf_chk@plt+0x2a8c>
   13a70:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13a74:	add	fp, sp, #24
   13a78:	sub	sp, sp, #48	; 0x30
   13a7c:	movw	r8, #24912	; 0x6150
   13a80:	mov	lr, r0
   13a84:	mov	r3, sp
   13a88:	mov	ip, r1
   13a8c:	movt	r8, #2
   13a90:	mov	r1, r3
   13a94:	ldm	r8!, {r0, r4, r5, r6, r7, r9}
   13a98:	stmia	r1!, {r0, r4, r5, r6, r7, r9}
   13a9c:	ldm	r8, {r0, r4, r5, r6, r7, r9}
   13aa0:	stm	r1, {r0, r4, r5, r6, r7, r9}
   13aa4:	ubfx	r0, r2, #5, #3
   13aa8:	and	r2, r2, #31
   13aac:	mov	r4, #1
   13ab0:	add	r0, r3, r0, lsl #2
   13ab4:	ldr	r1, [r0, #8]
   13ab8:	bic	r4, r4, r1, lsr r2
   13abc:	eor	r1, r1, r4, lsl r2
   13ac0:	mov	r2, ip
   13ac4:	str	r1, [r0, #8]
   13ac8:	mov	r0, #0
   13acc:	mov	r1, lr
   13ad0:	bl	137d4 <__snprintf_chk@plt+0x2868>
   13ad4:	sub	sp, fp, #24
   13ad8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13adc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13ae0:	add	fp, sp, #24
   13ae4:	sub	sp, sp, #48	; 0x30
   13ae8:	movw	lr, #24912	; 0x6150
   13aec:	mov	ip, r0
   13af0:	mov	r3, sp
   13af4:	movt	lr, #2
   13af8:	mov	r2, r3
   13afc:	ldm	lr!, {r0, r4, r5, r6, r7, r8}
   13b00:	stmia	r2!, {r0, r4, r5, r6, r7, r8}
   13b04:	ldm	lr, {r0, r4, r5, r6, r7, r8}
   13b08:	stm	r2, {r0, r4, r5, r6, r7, r8}
   13b0c:	ubfx	r0, r1, #5, #3
   13b10:	and	r1, r1, #31
   13b14:	mov	r7, #1
   13b18:	add	r0, r3, r0, lsl #2
   13b1c:	ldr	r2, [r0, #8]
   13b20:	bic	r7, r7, r2, lsr r1
   13b24:	eor	r1, r2, r7, lsl r1
   13b28:	mvn	r2, #0
   13b2c:	str	r1, [r0, #8]
   13b30:	mov	r0, #0
   13b34:	mov	r1, ip
   13b38:	bl	137d4 <__snprintf_chk@plt+0x2868>
   13b3c:	sub	sp, fp, #24
   13b40:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13b44:	push	{r4, r5, r6, r7, fp, lr}
   13b48:	add	fp, sp, #16
   13b4c:	sub	sp, sp, #48	; 0x30
   13b50:	movw	lr, #24912	; 0x6150
   13b54:	mov	ip, r0
   13b58:	mov	r3, sp
   13b5c:	movt	lr, #2
   13b60:	mov	r2, r3
   13b64:	ldm	lr!, {r0, r1, r4, r5, r6, r7}
   13b68:	stmia	r2!, {r0, r1, r4, r5, r6, r7}
   13b6c:	ldm	lr, {r0, r1, r4, r5, r6, r7}
   13b70:	stm	r2, {r0, r1, r4, r5, r6, r7}
   13b74:	mov	r1, ip
   13b78:	mvn	r2, #0
   13b7c:	ldr	r0, [sp, #12]
   13b80:	orr	r0, r0, #67108864	; 0x4000000
   13b84:	str	r0, [sp, #12]
   13b88:	mov	r0, #0
   13b8c:	bl	137d4 <__snprintf_chk@plt+0x2868>
   13b90:	sub	sp, fp, #16
   13b94:	pop	{r4, r5, r6, r7, fp, pc}
   13b98:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13b9c:	add	fp, sp, #24
   13ba0:	sub	sp, sp, #48	; 0x30
   13ba4:	movw	r8, #24912	; 0x6150
   13ba8:	mov	ip, r1
   13bac:	mov	lr, r0
   13bb0:	mov	r3, sp
   13bb4:	movt	r8, #2
   13bb8:	mov	r2, r3
   13bbc:	ldm	r8!, {r0, r1, r4, r5, r6, r7}
   13bc0:	stmia	r2!, {r0, r1, r4, r5, r6, r7}
   13bc4:	ldm	r8, {r0, r1, r4, r5, r6, r7}
   13bc8:	stm	r2, {r0, r1, r4, r5, r6, r7}
   13bcc:	mov	r1, lr
   13bd0:	mov	r2, ip
   13bd4:	ldr	r0, [sp, #12]
   13bd8:	orr	r0, r0, #67108864	; 0x4000000
   13bdc:	str	r0, [sp, #12]
   13be0:	mov	r0, #0
   13be4:	bl	137d4 <__snprintf_chk@plt+0x2868>
   13be8:	sub	sp, fp, #24
   13bec:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13bf0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13bf4:	add	fp, sp, #24
   13bf8:	sub	sp, sp, #96	; 0x60
   13bfc:	mov	lr, sp
   13c00:	vmov.i32	q8, #0	; 0x00000000
   13c04:	mov	ip, r2
   13c08:	cmp	r1, #10
   13c0c:	add	r3, lr, #16
   13c10:	mov	r2, lr
   13c14:	vst1.64	{d16-d17}, [r3]
   13c18:	mov	r3, #28
   13c1c:	vst1.64	{d16-d17}, [r2], r3
   13c20:	vst1.32	{d16-d17}, [r2]
   13c24:	beq	13c64 <__snprintf_chk@plt+0x2cf8>
   13c28:	str	r1, [sp, #48]	; 0x30
   13c2c:	add	r3, sp, #48	; 0x30
   13c30:	ldm	lr!, {r2, r4, r5, r6, r7}
   13c34:	add	r1, r3, #4
   13c38:	stmia	r1!, {r2, r4, r5, r6, r7}
   13c3c:	ldm	lr, {r2, r4, r5, r6, r7, r8}
   13c40:	stm	r1, {r2, r4, r5, r6, r7, r8}
   13c44:	mvn	r2, #0
   13c48:	ldr	r1, [sp, #60]	; 0x3c
   13c4c:	orr	r1, r1, #67108864	; 0x4000000
   13c50:	str	r1, [sp, #60]	; 0x3c
   13c54:	mov	r1, ip
   13c58:	bl	137d4 <__snprintf_chk@plt+0x2868>
   13c5c:	sub	sp, fp, #24
   13c60:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13c64:	bl	10f60 <abort@plt>
   13c68:	push	{fp, lr}
   13c6c:	mov	fp, sp
   13c70:	sub	sp, sp, #8
   13c74:	mvn	ip, #0
   13c78:	str	ip, [sp]
   13c7c:	bl	13c88 <__snprintf_chk@plt+0x2d1c>
   13c80:	mov	sp, fp
   13c84:	pop	{fp, pc}
   13c88:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13c8c:	add	fp, sp, #24
   13c90:	sub	sp, sp, #48	; 0x30
   13c94:	movw	ip, #24912	; 0x6150
   13c98:	mov	lr, r3
   13c9c:	mov	r3, sp
   13ca0:	cmp	r1, #0
   13ca4:	movt	ip, #2
   13ca8:	cmpne	r2, #0
   13cac:	ldm	ip!, {r4, r5, r6, r7, r8, r9}
   13cb0:	stmia	r3!, {r4, r5, r6, r7, r8, r9}
   13cb4:	ldm	ip, {r4, r5, r6, r7, r8, r9}
   13cb8:	stm	r3, {r4, r5, r6, r7, r8, r9}
   13cbc:	mov	r3, #10
   13cc0:	str	r3, [sp]
   13cc4:	bne	13ccc <__snprintf_chk@plt+0x2d60>
   13cc8:	bl	10f60 <abort@plt>
   13ccc:	ldr	ip, [fp, #8]
   13cd0:	str	r2, [sp, #44]	; 0x2c
   13cd4:	str	r1, [sp, #40]	; 0x28
   13cd8:	mov	r3, sp
   13cdc:	mov	r1, lr
   13ce0:	mov	r2, ip
   13ce4:	bl	137d4 <__snprintf_chk@plt+0x2868>
   13ce8:	sub	sp, fp, #24
   13cec:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13cf0:	push	{fp, lr}
   13cf4:	mov	fp, sp
   13cf8:	sub	sp, sp, #8
   13cfc:	mov	r3, r2
   13d00:	mov	r2, r1
   13d04:	mov	r1, r0
   13d08:	mvn	r0, #0
   13d0c:	str	r0, [sp]
   13d10:	mov	r0, #0
   13d14:	bl	13c88 <__snprintf_chk@plt+0x2d1c>
   13d18:	mov	sp, fp
   13d1c:	pop	{fp, pc}
   13d20:	push	{fp, lr}
   13d24:	mov	fp, sp
   13d28:	sub	sp, sp, #8
   13d2c:	mov	ip, r2
   13d30:	mov	r2, r1
   13d34:	mov	r1, r0
   13d38:	str	r3, [sp]
   13d3c:	mov	r0, #0
   13d40:	mov	r3, ip
   13d44:	bl	13c88 <__snprintf_chk@plt+0x2d1c>
   13d48:	mov	sp, fp
   13d4c:	pop	{fp, pc}
   13d50:	movw	r3, #24816	; 0x60f0
   13d54:	movt	r3, #2
   13d58:	b	137d4 <__snprintf_chk@plt+0x2868>
   13d5c:	movw	r3, #24816	; 0x60f0
   13d60:	mov	r2, r1
   13d64:	mov	r1, r0
   13d68:	mov	r0, #0
   13d6c:	movt	r3, #2
   13d70:	b	137d4 <__snprintf_chk@plt+0x2868>
   13d74:	movw	r3, #24816	; 0x60f0
   13d78:	mvn	r2, #0
   13d7c:	movt	r3, #2
   13d80:	b	137d4 <__snprintf_chk@plt+0x2868>
   13d84:	movw	r3, #24816	; 0x60f0
   13d88:	mov	r1, r0
   13d8c:	mov	r0, #0
   13d90:	mvn	r2, #0
   13d94:	movt	r3, #2
   13d98:	b	137d4 <__snprintf_chk@plt+0x2868>
   13d9c:	push	{r4, r5, fp, lr}
   13da0:	add	fp, sp, #8
   13da4:	mov	r5, r0
   13da8:	mov	r4, r1
   13dac:	mov	r0, #0
   13db0:	mov	r2, #5
   13db4:	mov	r1, r5
   13db8:	bl	10db0 <dcgettext@plt>
   13dbc:	cmp	r0, r5
   13dc0:	popne	{r4, r5, fp, pc}
   13dc4:	bl	14b24 <__snprintf_chk@plt+0x3bb8>
   13dc8:	ldrb	r1, [r0]
   13dcc:	and	r1, r1, #223	; 0xdf
   13dd0:	cmp	r1, #71	; 0x47
   13dd4:	beq	13e3c <__snprintf_chk@plt+0x2ed0>
   13dd8:	cmp	r1, #85	; 0x55
   13ddc:	bne	13e60 <__snprintf_chk@plt+0x2ef4>
   13de0:	ldrb	r1, [r0, #1]
   13de4:	and	r1, r1, #223	; 0xdf
   13de8:	cmp	r1, #84	; 0x54
   13dec:	bne	13e60 <__snprintf_chk@plt+0x2ef4>
   13df0:	ldrb	r1, [r0, #2]
   13df4:	and	r1, r1, #223	; 0xdf
   13df8:	cmp	r1, #70	; 0x46
   13dfc:	ldrbeq	r1, [r0, #3]
   13e00:	cmpeq	r1, #45	; 0x2d
   13e04:	bne	13e60 <__snprintf_chk@plt+0x2ef4>
   13e08:	ldrb	r1, [r0, #4]
   13e0c:	cmp	r1, #56	; 0x38
   13e10:	ldrbeq	r0, [r0, #5]
   13e14:	cmpeq	r0, #0
   13e18:	bne	13e60 <__snprintf_chk@plt+0x2ef4>
   13e1c:	ldrb	r1, [r5]
   13e20:	movw	r2, #21420	; 0x53ac
   13e24:	movw	r0, #21424	; 0x53b0
   13e28:	movt	r2, #1
   13e2c:	movt	r0, #1
   13e30:	cmp	r1, #96	; 0x60
   13e34:	moveq	r0, r2
   13e38:	pop	{r4, r5, fp, pc}
   13e3c:	ldrb	r1, [r0, #1]
   13e40:	and	r1, r1, #223	; 0xdf
   13e44:	cmp	r1, #66	; 0x42
   13e48:	bne	13e60 <__snprintf_chk@plt+0x2ef4>
   13e4c:	ldrb	r1, [r0, #2]
   13e50:	cmp	r1, #49	; 0x31
   13e54:	ldrbeq	r1, [r0, #3]
   13e58:	cmpeq	r1, #56	; 0x38
   13e5c:	beq	13e7c <__snprintf_chk@plt+0x2f10>
   13e60:	movw	r1, #21414	; 0x53a6
   13e64:	movw	r0, #21418	; 0x53aa
   13e68:	cmp	r4, #9
   13e6c:	movt	r1, #1
   13e70:	movt	r0, #1
   13e74:	moveq	r0, r1
   13e78:	pop	{r4, r5, fp, pc}
   13e7c:	ldrb	r1, [r0, #4]
   13e80:	cmp	r1, #48	; 0x30
   13e84:	ldrbeq	r1, [r0, #5]
   13e88:	cmpeq	r1, #51	; 0x33
   13e8c:	bne	13e60 <__snprintf_chk@plt+0x2ef4>
   13e90:	ldrb	r1, [r0, #6]
   13e94:	cmp	r1, #48	; 0x30
   13e98:	ldrbeq	r0, [r0, #7]
   13e9c:	cmpeq	r0, #0
   13ea0:	bne	13e60 <__snprintf_chk@plt+0x2ef4>
   13ea4:	ldrb	r1, [r5]
   13ea8:	movw	r2, #21428	; 0x53b4
   13eac:	movw	r0, #21432	; 0x53b8
   13eb0:	movt	r2, #1
   13eb4:	movt	r0, #1
   13eb8:	b	13e30 <__snprintf_chk@plt+0x2ec4>
   13ebc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13ec0:	add	fp, sp, #24
   13ec4:	sub	sp, sp, #32
   13ec8:	ldr	r6, [fp, #12]
   13ecc:	ldr	r7, [fp, #8]
   13ed0:	mov	r4, r2
   13ed4:	mov	r8, r0
   13ed8:	cmp	r1, #0
   13edc:	beq	13f04 <__snprintf_chk@plt+0x2f98>
   13ee0:	movw	r2, #21520	; 0x5410
   13ee4:	mov	r5, r1
   13ee8:	str	r3, [sp, #4]
   13eec:	str	r4, [sp]
   13ef0:	mov	r0, r8
   13ef4:	mov	r1, #1
   13ef8:	movt	r2, #1
   13efc:	mov	r3, r5
   13f00:	b	13f1c <__snprintf_chk@plt+0x2fb0>
   13f04:	movw	r2, #21532	; 0x541c
   13f08:	str	r3, [sp]
   13f0c:	mov	r0, r8
   13f10:	mov	r1, #1
   13f14:	mov	r3, r4
   13f18:	movt	r2, #1
   13f1c:	bl	10ef4 <__fprintf_chk@plt>
   13f20:	movw	r1, #21539	; 0x5423
   13f24:	mov	r0, #0
   13f28:	mov	r2, #5
   13f2c:	movt	r1, #1
   13f30:	bl	10db0 <dcgettext@plt>
   13f34:	movw	r2, #22257	; 0x56f1
   13f38:	mov	r3, r0
   13f3c:	movw	r0, #2022	; 0x7e6
   13f40:	mov	r1, #1
   13f44:	str	r0, [sp]
   13f48:	movt	r2, #1
   13f4c:	mov	r0, r8
   13f50:	bl	10ef4 <__fprintf_chk@plt>
   13f54:	movw	r4, #19957	; 0x4df5
   13f58:	mov	r1, r8
   13f5c:	movt	r4, #1
   13f60:	mov	r0, r4
   13f64:	bl	10d44 <fputs_unlocked@plt>
   13f68:	movw	r1, #21543	; 0x5427
   13f6c:	mov	r0, #0
   13f70:	mov	r2, #5
   13f74:	movt	r1, #1
   13f78:	bl	10db0 <dcgettext@plt>
   13f7c:	movw	r3, #21714	; 0x54d2
   13f80:	mov	r2, r0
   13f84:	mov	r0, r8
   13f88:	mov	r1, #1
   13f8c:	movt	r3, #1
   13f90:	bl	10ef4 <__fprintf_chk@plt>
   13f94:	mov	r0, r4
   13f98:	mov	r1, r8
   13f9c:	bl	10d44 <fputs_unlocked@plt>
   13fa0:	cmp	r6, #9
   13fa4:	bhi	14008 <__snprintf_chk@plt+0x309c>
   13fa8:	add	r0, pc, #0
   13fac:	ldr	pc, [r0, r6, lsl #2]
   13fb0:	andeq	r4, r1, r0, ror #3
   13fb4:	ldrdeq	r3, [r1], -r8
   13fb8:	andeq	r4, r1, r4, lsl r0
   13fbc:	andeq	r4, r1, ip, lsr r0
   13fc0:	andeq	r4, r1, r4, rrx
   13fc4:	andeq	r4, r1, ip, lsl #1
   13fc8:	strheq	r4, [r1], -r4	; <UNPREDICTABLE>
   13fcc:	andeq	r4, r1, ip, ror #1
   13fd0:	andeq	r4, r1, ip, lsl #3
   13fd4:	andeq	r4, r1, r4, lsr r1
   13fd8:	movw	r1, #21748	; 0x54f4
   13fdc:	mov	r0, #0
   13fe0:	mov	r2, #5
   13fe4:	movt	r1, #1
   13fe8:	bl	10db0 <dcgettext@plt>
   13fec:	ldr	r3, [r7]
   13ff0:	mov	r2, r0
   13ff4:	mov	r0, r8
   13ff8:	mov	r1, #1
   13ffc:	sub	sp, fp, #24
   14000:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   14004:	b	10ef4 <__fprintf_chk@plt>
   14008:	movw	r1, #22067	; 0x5633
   1400c:	movt	r1, #1
   14010:	b	1413c <__snprintf_chk@plt+0x31d0>
   14014:	movw	r1, #21764	; 0x5504
   14018:	mov	r0, #0
   1401c:	mov	r2, #5
   14020:	movt	r1, #1
   14024:	bl	10db0 <dcgettext@plt>
   14028:	mov	r2, r0
   1402c:	ldr	r3, [r7]
   14030:	ldr	r0, [r7, #4]
   14034:	str	r0, [sp]
   14038:	b	14128 <__snprintf_chk@plt+0x31bc>
   1403c:	movw	r1, #21787	; 0x551b
   14040:	mov	r0, #0
   14044:	mov	r2, #5
   14048:	movt	r1, #1
   1404c:	bl	10db0 <dcgettext@plt>
   14050:	ldr	r3, [r7]
   14054:	mov	r2, r0
   14058:	ldmib	r7, {r0, r1}
   1405c:	stm	sp, {r0, r1}
   14060:	b	14128 <__snprintf_chk@plt+0x31bc>
   14064:	movw	r1, #21815	; 0x5537
   14068:	mov	r0, #0
   1406c:	mov	r2, #5
   14070:	movt	r1, #1
   14074:	bl	10db0 <dcgettext@plt>
   14078:	ldr	r3, [r7]
   1407c:	mov	r2, r0
   14080:	ldmib	r7, {r0, r1, r7}
   14084:	stm	sp, {r0, r1, r7}
   14088:	b	14128 <__snprintf_chk@plt+0x31bc>
   1408c:	movw	r1, #21847	; 0x5557
   14090:	mov	r0, #0
   14094:	mov	r2, #5
   14098:	movt	r1, #1
   1409c:	bl	10db0 <dcgettext@plt>
   140a0:	ldr	r3, [r7]
   140a4:	mov	r2, r0
   140a8:	ldmib	r7, {r0, r1, r6, r7}
   140ac:	stm	sp, {r0, r1, r6, r7}
   140b0:	b	14128 <__snprintf_chk@plt+0x31bc>
   140b4:	movw	r1, #21883	; 0x557b
   140b8:	mov	r0, #0
   140bc:	mov	r2, #5
   140c0:	movt	r1, #1
   140c4:	bl	10db0 <dcgettext@plt>
   140c8:	ldr	r3, [r7]
   140cc:	mov	r2, r0
   140d0:	ldmib	r7, {r0, r1, r6}
   140d4:	ldr	r5, [r7, #16]
   140d8:	ldr	r7, [r7, #20]
   140dc:	stm	sp, {r0, r1, r6}
   140e0:	str	r5, [sp, #12]
   140e4:	str	r7, [sp, #16]
   140e8:	b	14128 <__snprintf_chk@plt+0x31bc>
   140ec:	movw	r1, #21923	; 0x55a3
   140f0:	mov	r0, #0
   140f4:	mov	r2, #5
   140f8:	movt	r1, #1
   140fc:	bl	10db0 <dcgettext@plt>
   14100:	ldr	r3, [r7]
   14104:	mov	r2, r0
   14108:	ldmib	r7, {r0, r1, r6}
   1410c:	ldr	r5, [r7, #16]
   14110:	ldr	r4, [r7, #20]
   14114:	ldr	r7, [r7, #24]
   14118:	stm	sp, {r0, r1, r6}
   1411c:	str	r5, [sp, #12]
   14120:	str	r4, [sp, #16]
   14124:	str	r7, [sp, #20]
   14128:	mov	r0, r8
   1412c:	mov	r1, #1
   14130:	b	141dc <__snprintf_chk@plt+0x3270>
   14134:	movw	r1, #22015	; 0x55ff
   14138:	movt	r1, #1
   1413c:	mov	r0, #0
   14140:	mov	r2, #5
   14144:	bl	10db0 <dcgettext@plt>
   14148:	mov	ip, r0
   1414c:	ldr	r3, [r7]
   14150:	ldr	r0, [r7, #4]
   14154:	ldr	r1, [r7, #8]
   14158:	ldr	r6, [r7, #12]
   1415c:	ldr	r5, [r7, #16]
   14160:	ldr	r4, [r7, #20]
   14164:	ldr	r2, [r7, #24]
   14168:	ldr	lr, [r7, #28]
   1416c:	ldr	r7, [r7, #32]
   14170:	stm	sp, {r0, r1, r6}
   14174:	str	r5, [sp, #12]
   14178:	str	r4, [sp, #16]
   1417c:	str	r2, [sp, #20]
   14180:	str	lr, [sp, #24]
   14184:	str	r7, [sp, #28]
   14188:	b	141d0 <__snprintf_chk@plt+0x3264>
   1418c:	movw	r1, #21967	; 0x55cf
   14190:	mov	r0, #0
   14194:	mov	r2, #5
   14198:	movt	r1, #1
   1419c:	bl	10db0 <dcgettext@plt>
   141a0:	mov	ip, r0
   141a4:	ldr	r3, [r7]
   141a8:	ldmib	r7, {r0, r1, r6}
   141ac:	ldr	r5, [r7, #16]
   141b0:	ldr	r4, [r7, #20]
   141b4:	ldr	r2, [r7, #24]
   141b8:	ldr	r7, [r7, #28]
   141bc:	stm	sp, {r0, r1, r6}
   141c0:	str	r5, [sp, #12]
   141c4:	str	r4, [sp, #16]
   141c8:	str	r2, [sp, #20]
   141cc:	str	r7, [sp, #24]
   141d0:	mov	r0, r8
   141d4:	mov	r1, #1
   141d8:	mov	r2, ip
   141dc:	bl	10ef4 <__fprintf_chk@plt>
   141e0:	sub	sp, fp, #24
   141e4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   141e8:	push	{r4, sl, fp, lr}
   141ec:	add	fp, sp, #8
   141f0:	sub	sp, sp, #8
   141f4:	ldr	ip, [fp, #8]
   141f8:	mov	lr, #0
   141fc:	ldr	r4, [ip, lr, lsl #2]
   14200:	add	lr, lr, #1
   14204:	cmp	r4, #0
   14208:	bne	141fc <__snprintf_chk@plt+0x3290>
   1420c:	sub	r4, lr, #1
   14210:	str	ip, [sp]
   14214:	str	r4, [sp, #4]
   14218:	bl	13ebc <__snprintf_chk@plt+0x2f50>
   1421c:	sub	sp, fp, #8
   14220:	pop	{r4, sl, fp, pc}
   14224:	push	{r4, r5, fp, lr}
   14228:	add	fp, sp, #8
   1422c:	sub	sp, sp, #48	; 0x30
   14230:	ldr	r4, [fp, #8]
   14234:	mov	ip, #0
   14238:	add	lr, sp, #8
   1423c:	ldr	r5, [r4]
   14240:	cmp	r5, #0
   14244:	str	r5, [lr, ip, lsl #2]
   14248:	beq	1425c <__snprintf_chk@plt+0x32f0>
   1424c:	add	ip, ip, #1
   14250:	add	r4, r4, #4
   14254:	cmp	ip, #10
   14258:	bcc	1423c <__snprintf_chk@plt+0x32d0>
   1425c:	str	lr, [sp]
   14260:	str	ip, [sp, #4]
   14264:	bl	13ebc <__snprintf_chk@plt+0x2f50>
   14268:	sub	sp, fp, #8
   1426c:	pop	{r4, r5, fp, pc}
   14270:	push	{fp, lr}
   14274:	mov	fp, sp
   14278:	sub	sp, sp, #8
   1427c:	add	ip, fp, #8
   14280:	str	ip, [sp, #4]
   14284:	str	ip, [sp]
   14288:	bl	14224 <__snprintf_chk@plt+0x32b8>
   1428c:	mov	sp, fp
   14290:	pop	{fp, pc}
   14294:	push	{fp, lr}
   14298:	mov	fp, sp
   1429c:	movw	r0, #24884	; 0x6134
   142a0:	movt	r0, #2
   142a4:	ldr	r1, [r0]
   142a8:	movw	r0, #19957	; 0x4df5
   142ac:	movt	r0, #1
   142b0:	bl	10d44 <fputs_unlocked@plt>
   142b4:	movw	r1, #22127	; 0x566f
   142b8:	mov	r0, #0
   142bc:	mov	r2, #5
   142c0:	movt	r1, #1
   142c4:	bl	10db0 <dcgettext@plt>
   142c8:	movw	r2, #22147	; 0x5683
   142cc:	mov	r1, r0
   142d0:	mov	r0, #1
   142d4:	movt	r2, #1
   142d8:	bl	10ed0 <__printf_chk@plt>
   142dc:	movw	r1, #22169	; 0x5699
   142e0:	mov	r0, #0
   142e4:	mov	r2, #5
   142e8:	movt	r1, #1
   142ec:	bl	10db0 <dcgettext@plt>
   142f0:	movw	r2, #20092	; 0x4e7c
   142f4:	movw	r3, #20929	; 0x51c1
   142f8:	mov	r1, r0
   142fc:	mov	r0, #1
   14300:	movt	r2, #1
   14304:	movt	r3, #1
   14308:	bl	10ed0 <__printf_chk@plt>
   1430c:	movw	r1, #22189	; 0x56ad
   14310:	mov	r0, #0
   14314:	mov	r2, #5
   14318:	movt	r1, #1
   1431c:	bl	10db0 <dcgettext@plt>
   14320:	movw	r2, #22228	; 0x56d4
   14324:	mov	r1, r0
   14328:	mov	r0, #1
   1432c:	movt	r2, #1
   14330:	pop	{fp, lr}
   14334:	b	10ed0 <__printf_chk@plt>
   14338:	b	1433c <__snprintf_chk@plt+0x33d0>
   1433c:	push	{r4, r5, r6, sl, fp, lr}
   14340:	add	fp, sp, #16
   14344:	mov	r4, r2
   14348:	mov	r5, r1
   1434c:	mov	r6, r0
   14350:	bl	14bbc <__snprintf_chk@plt+0x3c50>
   14354:	cmp	r0, #0
   14358:	popne	{r4, r5, r6, sl, fp, pc}
   1435c:	cmp	r6, #0
   14360:	beq	14374 <__snprintf_chk@plt+0x3408>
   14364:	cmp	r5, #0
   14368:	cmpne	r4, #0
   1436c:	bne	14374 <__snprintf_chk@plt+0x3408>
   14370:	pop	{r4, r5, r6, sl, fp, pc}
   14374:	bl	147c8 <__snprintf_chk@plt+0x385c>
   14378:	push	{fp, lr}
   1437c:	mov	fp, sp
   14380:	bl	14860 <__snprintf_chk@plt+0x38f4>
   14384:	cmp	r0, #0
   14388:	popne	{fp, pc}
   1438c:	bl	147c8 <__snprintf_chk@plt+0x385c>
   14390:	push	{fp, lr}
   14394:	mov	fp, sp
   14398:	bl	14860 <__snprintf_chk@plt+0x38f4>
   1439c:	cmp	r0, #0
   143a0:	popne	{fp, pc}
   143a4:	bl	147c8 <__snprintf_chk@plt+0x385c>
   143a8:	push	{fp, lr}
   143ac:	mov	fp, sp
   143b0:	bl	14860 <__snprintf_chk@plt+0x38f4>
   143b4:	cmp	r0, #0
   143b8:	popne	{fp, pc}
   143bc:	bl	147c8 <__snprintf_chk@plt+0x385c>
   143c0:	push	{r4, r5, fp, lr}
   143c4:	add	fp, sp, #8
   143c8:	mov	r4, r1
   143cc:	mov	r5, r0
   143d0:	bl	14890 <__snprintf_chk@plt+0x3924>
   143d4:	cmp	r0, #0
   143d8:	popne	{r4, r5, fp, pc}
   143dc:	cmp	r5, #0
   143e0:	beq	143f0 <__snprintf_chk@plt+0x3484>
   143e4:	cmp	r4, #0
   143e8:	bne	143f0 <__snprintf_chk@plt+0x3484>
   143ec:	pop	{r4, r5, fp, pc}
   143f0:	bl	147c8 <__snprintf_chk@plt+0x385c>
   143f4:	push	{fp, lr}
   143f8:	mov	fp, sp
   143fc:	cmp	r1, #0
   14400:	orreq	r1, r1, #1
   14404:	bl	14890 <__snprintf_chk@plt+0x3924>
   14408:	cmp	r0, #0
   1440c:	popne	{fp, pc}
   14410:	bl	147c8 <__snprintf_chk@plt+0x385c>
   14414:	push	{fp, lr}
   14418:	mov	fp, sp
   1441c:	clz	r3, r2
   14420:	lsr	ip, r3, #5
   14424:	clz	r3, r1
   14428:	lsr	r3, r3, #5
   1442c:	orrs	r3, r3, ip
   14430:	movwne	r1, #1
   14434:	movwne	r2, #1
   14438:	bl	14bbc <__snprintf_chk@plt+0x3c50>
   1443c:	cmp	r0, #0
   14440:	popne	{fp, pc}
   14444:	bl	147c8 <__snprintf_chk@plt+0x385c>
   14448:	push	{fp, lr}
   1444c:	mov	fp, sp
   14450:	mov	r2, r1
   14454:	mov	r1, r0
   14458:	mov	r0, #0
   1445c:	bl	14bbc <__snprintf_chk@plt+0x3c50>
   14460:	cmp	r0, #0
   14464:	popne	{fp, pc}
   14468:	bl	147c8 <__snprintf_chk@plt+0x385c>
   1446c:	mov	r2, r1
   14470:	mov	r1, r0
   14474:	mov	r0, #0
   14478:	b	14414 <__snprintf_chk@plt+0x34a8>
   1447c:	mov	r2, #1
   14480:	b	14484 <__snprintf_chk@plt+0x3518>
   14484:	push	{r4, r5, fp, lr}
   14488:	add	fp, sp, #8
   1448c:	ldr	r5, [r1]
   14490:	mov	r4, r1
   14494:	cmp	r0, #0
   14498:	beq	144b0 <__snprintf_chk@plt+0x3544>
   1449c:	mov	r1, #1
   144a0:	add	r1, r1, r5, lsr #1
   144a4:	adds	r5, r5, r1
   144a8:	bcc	144c8 <__snprintf_chk@plt+0x355c>
   144ac:	bl	147c8 <__snprintf_chk@plt+0x385c>
   144b0:	cmp	r5, #0
   144b4:	bne	144c8 <__snprintf_chk@plt+0x355c>
   144b8:	mov	r1, #64	; 0x40
   144bc:	cmp	r2, #64	; 0x40
   144c0:	udiv	r5, r1, r2
   144c4:	addhi	r5, r5, #1
   144c8:	mov	r1, r5
   144cc:	bl	1433c <__snprintf_chk@plt+0x33d0>
   144d0:	str	r5, [r4]
   144d4:	pop	{r4, r5, fp, pc}
   144d8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   144dc:	add	fp, sp, #24
   144e0:	ldr	r6, [r1]
   144e4:	mov	r8, r1
   144e8:	ldr	r4, [fp, #8]
   144ec:	add	r1, r6, r6, asr #1
   144f0:	cmp	r1, r6
   144f4:	mvnvs	r1, #-2147483648	; 0x80000000
   144f8:	cmp	r1, r3
   144fc:	mov	r5, r1
   14500:	movgt	r5, r3
   14504:	cmn	r3, #1
   14508:	movle	r5, r1
   1450c:	cmn	r4, #1
   14510:	ble	14530 <__snprintf_chk@plt+0x35c4>
   14514:	cmp	r4, #0
   14518:	beq	14584 <__snprintf_chk@plt+0x3618>
   1451c:	cmn	r5, #1
   14520:	ble	14558 <__snprintf_chk@plt+0x35ec>
   14524:	mvn	r7, #-2147483648	; 0x80000000
   14528:	udiv	r1, r7, r4
   1452c:	b	1454c <__snprintf_chk@plt+0x35e0>
   14530:	cmn	r5, #1
   14534:	ble	14574 <__snprintf_chk@plt+0x3608>
   14538:	cmn	r4, #1
   1453c:	beq	14584 <__snprintf_chk@plt+0x3618>
   14540:	mov	r1, #-2147483648	; 0x80000000
   14544:	mvn	r7, #-2147483648	; 0x80000000
   14548:	sdiv	r1, r1, r4
   1454c:	cmp	r1, r5
   14550:	bge	14584 <__snprintf_chk@plt+0x3618>
   14554:	b	14594 <__snprintf_chk@plt+0x3628>
   14558:	beq	14584 <__snprintf_chk@plt+0x3618>
   1455c:	mov	r1, #-2147483648	; 0x80000000
   14560:	mvn	r7, #-2147483648	; 0x80000000
   14564:	sdiv	r1, r1, r5
   14568:	cmp	r1, r4
   1456c:	bge	14584 <__snprintf_chk@plt+0x3618>
   14570:	b	14594 <__snprintf_chk@plt+0x3628>
   14574:	mvn	r7, #-2147483648	; 0x80000000
   14578:	sdiv	r1, r7, r4
   1457c:	cmp	r5, r1
   14580:	blt	14594 <__snprintf_chk@plt+0x3628>
   14584:	mul	r1, r5, r4
   14588:	mov	r7, #64	; 0x40
   1458c:	cmp	r1, #63	; 0x3f
   14590:	bgt	1459c <__snprintf_chk@plt+0x3630>
   14594:	sdiv	r5, r7, r4
   14598:	mul	r1, r5, r4
   1459c:	cmp	r0, #0
   145a0:	moveq	r7, #0
   145a4:	streq	r7, [r8]
   145a8:	sub	r7, r5, r6
   145ac:	cmp	r7, r2
   145b0:	bge	14654 <__snprintf_chk@plt+0x36e8>
   145b4:	add	r5, r6, r2
   145b8:	mov	r2, #0
   145bc:	mov	r1, #0
   145c0:	cmp	r5, r3
   145c4:	movwgt	r2, #1
   145c8:	cmn	r3, #1
   145cc:	movwgt	r1, #1
   145d0:	cmp	r5, r6
   145d4:	bvs	1463c <__snprintf_chk@plt+0x36d0>
   145d8:	ands	r1, r1, r2
   145dc:	bne	1463c <__snprintf_chk@plt+0x36d0>
   145e0:	cmn	r4, #1
   145e4:	ble	14604 <__snprintf_chk@plt+0x3698>
   145e8:	cmp	r4, #0
   145ec:	beq	14650 <__snprintf_chk@plt+0x36e4>
   145f0:	cmn	r5, #1
   145f4:	ble	14628 <__snprintf_chk@plt+0x36bc>
   145f8:	mvn	r1, #-2147483648	; 0x80000000
   145fc:	udiv	r1, r1, r4
   14600:	b	1461c <__snprintf_chk@plt+0x36b0>
   14604:	cmn	r5, #1
   14608:	ble	14640 <__snprintf_chk@plt+0x36d4>
   1460c:	cmn	r4, #1
   14610:	beq	14650 <__snprintf_chk@plt+0x36e4>
   14614:	mov	r1, #-2147483648	; 0x80000000
   14618:	sdiv	r1, r1, r4
   1461c:	cmp	r1, r5
   14620:	bge	14650 <__snprintf_chk@plt+0x36e4>
   14624:	b	1463c <__snprintf_chk@plt+0x36d0>
   14628:	beq	14650 <__snprintf_chk@plt+0x36e4>
   1462c:	mov	r1, #-2147483648	; 0x80000000
   14630:	sdiv	r1, r1, r5
   14634:	cmp	r1, r4
   14638:	bge	14650 <__snprintf_chk@plt+0x36e4>
   1463c:	bl	147c8 <__snprintf_chk@plt+0x385c>
   14640:	mvn	r1, #-2147483648	; 0x80000000
   14644:	sdiv	r1, r1, r4
   14648:	cmp	r5, r1
   1464c:	blt	1463c <__snprintf_chk@plt+0x36d0>
   14650:	mul	r1, r5, r4
   14654:	bl	143c0 <__snprintf_chk@plt+0x3454>
   14658:	str	r5, [r8]
   1465c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14660:	push	{fp, lr}
   14664:	mov	fp, sp
   14668:	mov	r1, #1
   1466c:	bl	1480c <__snprintf_chk@plt+0x38a0>
   14670:	cmp	r0, #0
   14674:	popne	{fp, pc}
   14678:	bl	147c8 <__snprintf_chk@plt+0x385c>
   1467c:	push	{fp, lr}
   14680:	mov	fp, sp
   14684:	bl	1480c <__snprintf_chk@plt+0x38a0>
   14688:	cmp	r0, #0
   1468c:	popne	{fp, pc}
   14690:	bl	147c8 <__snprintf_chk@plt+0x385c>
   14694:	push	{fp, lr}
   14698:	mov	fp, sp
   1469c:	mov	r1, #1
   146a0:	bl	1480c <__snprintf_chk@plt+0x38a0>
   146a4:	cmp	r0, #0
   146a8:	popne	{fp, pc}
   146ac:	bl	147c8 <__snprintf_chk@plt+0x385c>
   146b0:	push	{fp, lr}
   146b4:	mov	fp, sp
   146b8:	bl	1480c <__snprintf_chk@plt+0x38a0>
   146bc:	cmp	r0, #0
   146c0:	popne	{fp, pc}
   146c4:	bl	147c8 <__snprintf_chk@plt+0x385c>
   146c8:	push	{r4, r5, r6, sl, fp, lr}
   146cc:	add	fp, sp, #16
   146d0:	mov	r5, r0
   146d4:	mov	r0, r1
   146d8:	mov	r4, r1
   146dc:	bl	14860 <__snprintf_chk@plt+0x38f4>
   146e0:	cmp	r0, #0
   146e4:	beq	14700 <__snprintf_chk@plt+0x3794>
   146e8:	mov	r1, r5
   146ec:	mov	r2, r4
   146f0:	mov	r6, r0
   146f4:	bl	10d80 <memcpy@plt>
   146f8:	mov	r0, r6
   146fc:	pop	{r4, r5, r6, sl, fp, pc}
   14700:	bl	147c8 <__snprintf_chk@plt+0x385c>
   14704:	push	{r4, r5, r6, sl, fp, lr}
   14708:	add	fp, sp, #16
   1470c:	mov	r5, r0
   14710:	mov	r0, r1
   14714:	mov	r4, r1
   14718:	bl	14860 <__snprintf_chk@plt+0x38f4>
   1471c:	cmp	r0, #0
   14720:	beq	1473c <__snprintf_chk@plt+0x37d0>
   14724:	mov	r1, r5
   14728:	mov	r2, r4
   1472c:	mov	r6, r0
   14730:	bl	10d80 <memcpy@plt>
   14734:	mov	r0, r6
   14738:	pop	{r4, r5, r6, sl, fp, pc}
   1473c:	bl	147c8 <__snprintf_chk@plt+0x385c>
   14740:	push	{r4, r5, r6, sl, fp, lr}
   14744:	add	fp, sp, #16
   14748:	mov	r5, r0
   1474c:	add	r0, r1, #1
   14750:	mov	r4, r1
   14754:	bl	14860 <__snprintf_chk@plt+0x38f4>
   14758:	cmp	r0, #0
   1475c:	beq	14784 <__snprintf_chk@plt+0x3818>
   14760:	mov	r6, r0
   14764:	mov	r0, #0
   14768:	mov	r1, r5
   1476c:	mov	r2, r4
   14770:	strb	r0, [r6, r4]
   14774:	mov	r0, r6
   14778:	bl	10d80 <memcpy@plt>
   1477c:	mov	r0, r6
   14780:	pop	{r4, r5, r6, sl, fp, pc}
   14784:	bl	147c8 <__snprintf_chk@plt+0x385c>
   14788:	push	{r4, r5, r6, sl, fp, lr}
   1478c:	add	fp, sp, #16
   14790:	mov	r4, r0
   14794:	bl	10e94 <strlen@plt>
   14798:	add	r5, r0, #1
   1479c:	mov	r0, r5
   147a0:	bl	14860 <__snprintf_chk@plt+0x38f4>
   147a4:	cmp	r0, #0
   147a8:	beq	147c4 <__snprintf_chk@plt+0x3858>
   147ac:	mov	r1, r4
   147b0:	mov	r2, r5
   147b4:	mov	r6, r0
   147b8:	bl	10d80 <memcpy@plt>
   147bc:	mov	r0, r6
   147c0:	pop	{r4, r5, r6, sl, fp, pc}
   147c4:	bl	147c8 <__snprintf_chk@plt+0x385c>
   147c8:	push	{fp, lr}
   147cc:	mov	fp, sp
   147d0:	movw	r0, #24792	; 0x60d8
   147d4:	movw	r1, #22304	; 0x5720
   147d8:	mov	r2, #5
   147dc:	movt	r0, #2
   147e0:	movt	r1, #1
   147e4:	ldr	r4, [r0]
   147e8:	mov	r0, #0
   147ec:	bl	10db0 <dcgettext@plt>
   147f0:	movw	r2, #21200	; 0x52d0
   147f4:	mov	r3, r0
   147f8:	mov	r0, r4
   147fc:	mov	r1, #0
   14800:	movt	r2, #1
   14804:	bl	10e1c <error@plt>
   14808:	bl	10f60 <abort@plt>
   1480c:	clz	r2, r1
   14810:	clz	r3, r0
   14814:	lsr	r2, r2, #5
   14818:	lsr	r3, r3, #5
   1481c:	orrs	r2, r3, r2
   14820:	movwne	r1, #1
   14824:	movwne	r0, #1
   14828:	cmp	r1, #0
   1482c:	beq	1485c <__snprintf_chk@plt+0x38f0>
   14830:	mvn	r2, #-2147483648	; 0x80000000
   14834:	udiv	r2, r2, r1
   14838:	cmp	r2, r0
   1483c:	bcs	1485c <__snprintf_chk@plt+0x38f0>
   14840:	push	{fp, lr}
   14844:	mov	fp, sp
   14848:	bl	10ea0 <__errno_location@plt>
   1484c:	mov	r1, #12
   14850:	str	r1, [r0]
   14854:	mov	r0, #0
   14858:	pop	{fp, pc}
   1485c:	b	10d38 <calloc@plt>
   14860:	cmp	r0, #0
   14864:	movweq	r0, #1
   14868:	cmn	r0, #1
   1486c:	ble	14874 <__snprintf_chk@plt+0x3908>
   14870:	b	10e40 <malloc@plt>
   14874:	push	{fp, lr}
   14878:	mov	fp, sp
   1487c:	bl	10ea0 <__errno_location@plt>
   14880:	mov	r1, #12
   14884:	str	r1, [r0]
   14888:	mov	r0, #0
   1488c:	pop	{fp, pc}
   14890:	push	{fp, lr}
   14894:	mov	fp, sp
   14898:	cmp	r0, #0
   1489c:	beq	148b8 <__snprintf_chk@plt+0x394c>
   148a0:	cmp	r1, #0
   148a4:	beq	148c4 <__snprintf_chk@plt+0x3958>
   148a8:	cmn	r1, #1
   148ac:	ble	148cc <__snprintf_chk@plt+0x3960>
   148b0:	pop	{fp, lr}
   148b4:	b	10dbc <realloc@plt>
   148b8:	mov	r0, r1
   148bc:	pop	{fp, lr}
   148c0:	b	14860 <__snprintf_chk@plt+0x38f4>
   148c4:	bl	14a58 <__snprintf_chk@plt+0x3aec>
   148c8:	b	148d8 <__snprintf_chk@plt+0x396c>
   148cc:	bl	10ea0 <__errno_location@plt>
   148d0:	mov	r1, #12
   148d4:	str	r1, [r0]
   148d8:	mov	r0, #0
   148dc:	pop	{fp, pc}
   148e0:	push	{r4, r5, r6, sl, fp, lr}
   148e4:	add	fp, sp, #16
   148e8:	mov	r4, r0
   148ec:	bl	10df8 <__fpending@plt>
   148f0:	mov	r5, r0
   148f4:	mov	r0, r4
   148f8:	bl	10e04 <ferror_unlocked@plt>
   148fc:	mov	r6, r0
   14900:	mov	r0, r4
   14904:	bl	14960 <__snprintf_chk@plt+0x39f4>
   14908:	cmp	r6, #0
   1490c:	beq	1492c <__snprintf_chk@plt+0x39c0>
   14910:	mvn	r4, #0
   14914:	cmp	r0, #0
   14918:	bne	14958 <__snprintf_chk@plt+0x39ec>
   1491c:	bl	10ea0 <__errno_location@plt>
   14920:	mov	r1, #0
   14924:	str	r1, [r0]
   14928:	b	14958 <__snprintf_chk@plt+0x39ec>
   1492c:	cmp	r0, #0
   14930:	mov	r4, r0
   14934:	mvnne	r4, #0
   14938:	cmp	r5, #0
   1493c:	bne	14958 <__snprintf_chk@plt+0x39ec>
   14940:	cmp	r0, #0
   14944:	beq	14958 <__snprintf_chk@plt+0x39ec>
   14948:	bl	10ea0 <__errno_location@plt>
   1494c:	ldr	r0, [r0]
   14950:	subs	r4, r0, #9
   14954:	mvnne	r4, #0
   14958:	mov	r0, r4
   1495c:	pop	{r4, r5, r6, sl, fp, pc}
   14960:	push	{r4, r5, r6, sl, fp, lr}
   14964:	add	fp, sp, #16
   14968:	sub	sp, sp, #8
   1496c:	mov	r4, r0
   14970:	bl	10ee8 <fileno@plt>
   14974:	cmn	r0, #1
   14978:	ble	149ec <__snprintf_chk@plt+0x3a80>
   1497c:	mov	r0, r4
   14980:	bl	10e58 <__freading@plt>
   14984:	cmp	r0, #0
   14988:	beq	149b4 <__snprintf_chk@plt+0x3a48>
   1498c:	mov	r0, r4
   14990:	bl	10ee8 <fileno@plt>
   14994:	mov	r1, #1
   14998:	mov	r2, #0
   1499c:	mov	r3, #0
   149a0:	str	r1, [sp]
   149a4:	bl	10de0 <lseek64@plt>
   149a8:	and	r0, r0, r1
   149ac:	cmn	r0, #1
   149b0:	beq	149ec <__snprintf_chk@plt+0x3a80>
   149b4:	mov	r0, r4
   149b8:	bl	149fc <__snprintf_chk@plt+0x3a90>
   149bc:	cmp	r0, #0
   149c0:	beq	149ec <__snprintf_chk@plt+0x3a80>
   149c4:	bl	10ea0 <__errno_location@plt>
   149c8:	ldr	r6, [r0]
   149cc:	mov	r5, r0
   149d0:	mov	r0, r4
   149d4:	bl	10f00 <fclose@plt>
   149d8:	cmp	r6, #0
   149dc:	strne	r6, [r5]
   149e0:	mvnne	r0, #0
   149e4:	sub	sp, fp, #16
   149e8:	pop	{r4, r5, r6, sl, fp, pc}
   149ec:	mov	r0, r4
   149f0:	sub	sp, fp, #16
   149f4:	pop	{r4, r5, r6, sl, fp, lr}
   149f8:	b	10f00 <fclose@plt>
   149fc:	push	{r4, sl, fp, lr}
   14a00:	add	fp, sp, #8
   14a04:	sub	sp, sp, #8
   14a08:	mov	r4, r0
   14a0c:	cmp	r0, #0
   14a10:	beq	14a2c <__snprintf_chk@plt+0x3ac0>
   14a14:	mov	r0, r4
   14a18:	bl	10e58 <__freading@plt>
   14a1c:	cmp	r0, #0
   14a20:	ldrbne	r0, [r4, #1]
   14a24:	tstne	r0, #1
   14a28:	bne	14a3c <__snprintf_chk@plt+0x3ad0>
   14a2c:	mov	r0, r4
   14a30:	sub	sp, fp, #8
   14a34:	pop	{r4, sl, fp, lr}
   14a38:	b	10d5c <fflush@plt>
   14a3c:	mov	r0, #1
   14a40:	mov	r2, #0
   14a44:	mov	r3, #0
   14a48:	str	r0, [sp]
   14a4c:	mov	r0, r4
   14a50:	bl	14a80 <__snprintf_chk@plt+0x3b14>
   14a54:	b	14a2c <__snprintf_chk@plt+0x3ac0>
   14a58:	push	{r4, r5, r6, sl, fp, lr}
   14a5c:	add	fp, sp, #16
   14a60:	mov	r4, r0
   14a64:	bl	10ea0 <__errno_location@plt>
   14a68:	ldr	r6, [r0]
   14a6c:	mov	r5, r0
   14a70:	mov	r0, r4
   14a74:	bl	10d68 <free@plt>
   14a78:	str	r6, [r5]
   14a7c:	pop	{r4, r5, r6, sl, fp, pc}
   14a80:	push	{r4, r5, r6, r7, fp, lr}
   14a84:	add	fp, sp, #16
   14a88:	sub	sp, sp, #8
   14a8c:	mov	r4, r0
   14a90:	ldr	r0, [r0, #4]
   14a94:	mov	r5, r3
   14a98:	mov	r6, r2
   14a9c:	ldr	r1, [r4, #8]
   14aa0:	cmp	r1, r0
   14aa4:	bne	14ac0 <__snprintf_chk@plt+0x3b54>
   14aa8:	ldrd	r0, [r4, #16]
   14aac:	cmp	r1, r0
   14ab0:	bne	14ac0 <__snprintf_chk@plt+0x3b54>
   14ab4:	ldr	r0, [r4, #36]	; 0x24
   14ab8:	cmp	r0, #0
   14abc:	beq	14ad8 <__snprintf_chk@plt+0x3b6c>
   14ac0:	mov	r0, r4
   14ac4:	mov	r2, r6
   14ac8:	mov	r3, r5
   14acc:	sub	sp, fp, #16
   14ad0:	pop	{r4, r5, r6, r7, fp, lr}
   14ad4:	b	10f0c <fseeko64@plt>
   14ad8:	ldr	r7, [fp, #8]
   14adc:	mov	r0, r4
   14ae0:	bl	10ee8 <fileno@plt>
   14ae4:	mov	r2, r6
   14ae8:	mov	r3, r5
   14aec:	str	r7, [sp]
   14af0:	bl	10de0 <lseek64@plt>
   14af4:	and	r2, r0, r1
   14af8:	cmn	r2, #1
   14afc:	beq	14b18 <__snprintf_chk@plt+0x3bac>
   14b00:	strd	r0, [r4, #80]	; 0x50
   14b04:	ldr	r0, [r4]
   14b08:	bic	r0, r0, #16
   14b0c:	str	r0, [r4]
   14b10:	mov	r0, #0
   14b14:	b	14b1c <__snprintf_chk@plt+0x3bb0>
   14b18:	mvn	r0, #0
   14b1c:	sub	sp, fp, #16
   14b20:	pop	{r4, r5, r6, r7, fp, pc}
   14b24:	push	{fp, lr}
   14b28:	mov	fp, sp
   14b2c:	mov	r0, #14
   14b30:	bl	10f30 <nl_langinfo@plt>
   14b34:	movw	r1, #19958	; 0x4df6
   14b38:	cmp	r0, #0
   14b3c:	movt	r1, #1
   14b40:	movne	r1, r0
   14b44:	movw	r0, #22321	; 0x5731
   14b48:	ldrb	r2, [r1]
   14b4c:	movt	r0, #1
   14b50:	cmp	r2, #0
   14b54:	movne	r0, r1
   14b58:	pop	{fp, pc}
   14b5c:	push	{r4, r5, r6, r7, fp, lr}
   14b60:	add	fp, sp, #16
   14b64:	sub	sp, sp, #8
   14b68:	add	r5, sp, #4
   14b6c:	cmp	r0, #0
   14b70:	mov	r7, r2
   14b74:	mov	r4, r1
   14b78:	movne	r5, r0
   14b7c:	mov	r0, r5
   14b80:	bl	10e10 <mbrtowc@plt>
   14b84:	mov	r6, r0
   14b88:	cmp	r7, #0
   14b8c:	beq	14bb0 <__snprintf_chk@plt+0x3c44>
   14b90:	cmn	r6, #2
   14b94:	bcc	14bb0 <__snprintf_chk@plt+0x3c44>
   14b98:	mov	r0, #0
   14b9c:	bl	14bf8 <__snprintf_chk@plt+0x3c8c>
   14ba0:	cmp	r0, #0
   14ba4:	ldrbeq	r0, [r4]
   14ba8:	moveq	r6, #1
   14bac:	streq	r0, [r5]
   14bb0:	mov	r0, r6
   14bb4:	sub	sp, fp, #16
   14bb8:	pop	{r4, r5, r6, r7, fp, pc}
   14bbc:	cmp	r2, #0
   14bc0:	beq	14bf0 <__snprintf_chk@plt+0x3c84>
   14bc4:	mvn	r3, #0
   14bc8:	udiv	r3, r3, r2
   14bcc:	cmp	r3, r1
   14bd0:	bcs	14bf0 <__snprintf_chk@plt+0x3c84>
   14bd4:	push	{fp, lr}
   14bd8:	mov	fp, sp
   14bdc:	bl	10ea0 <__errno_location@plt>
   14be0:	mov	r1, #12
   14be4:	str	r1, [r0]
   14be8:	mov	r0, #0
   14bec:	pop	{fp, pc}
   14bf0:	mul	r1, r2, r1
   14bf4:	b	14890 <__snprintf_chk@plt+0x3924>
   14bf8:	push	{r4, sl, fp, lr}
   14bfc:	add	fp, sp, #8
   14c00:	sub	sp, sp, #264	; 0x108
   14c04:	add	r1, sp, #7
   14c08:	movw	r2, #257	; 0x101
   14c0c:	bl	14c5c <__snprintf_chk@plt+0x3cf0>
   14c10:	mov	r4, #0
   14c14:	cmp	r0, #0
   14c18:	bne	14c50 <__snprintf_chk@plt+0x3ce4>
   14c1c:	movw	r1, #22327	; 0x5737
   14c20:	add	r0, sp, #7
   14c24:	movt	r1, #1
   14c28:	bl	10d50 <strcmp@plt>
   14c2c:	cmp	r0, #0
   14c30:	beq	14c50 <__snprintf_chk@plt+0x3ce4>
   14c34:	movw	r1, #22329	; 0x5739
   14c38:	add	r0, sp, #7
   14c3c:	movt	r1, #1
   14c40:	bl	10d50 <strcmp@plt>
   14c44:	mov	r4, r0
   14c48:	cmp	r0, #0
   14c4c:	movwne	r4, #1
   14c50:	mov	r0, r4
   14c54:	sub	sp, fp, #8
   14c58:	pop	{r4, sl, fp, pc}
   14c5c:	push	{r4, r5, r6, r7, fp, lr}
   14c60:	add	fp, sp, #16
   14c64:	mov	r4, r1
   14c68:	mov	r1, #0
   14c6c:	mov	r6, r2
   14c70:	bl	10f18 <setlocale@plt>
   14c74:	cmp	r0, #0
   14c78:	beq	14ca4 <__snprintf_chk@plt+0x3d38>
   14c7c:	mov	r7, r0
   14c80:	bl	10e94 <strlen@plt>
   14c84:	cmp	r0, r6
   14c88:	bcs	14cb8 <__snprintf_chk@plt+0x3d4c>
   14c8c:	add	r2, r0, #1
   14c90:	mov	r0, r4
   14c94:	mov	r1, r7
   14c98:	bl	10d80 <memcpy@plt>
   14c9c:	mov	r5, #0
   14ca0:	b	14ce0 <__snprintf_chk@plt+0x3d74>
   14ca4:	cmp	r6, #0
   14ca8:	mov	r5, #22
   14cac:	movne	r0, #0
   14cb0:	strbne	r0, [r4]
   14cb4:	b	14ce0 <__snprintf_chk@plt+0x3d74>
   14cb8:	mov	r5, #34	; 0x22
   14cbc:	cmp	r6, #0
   14cc0:	beq	14ce0 <__snprintf_chk@plt+0x3d74>
   14cc4:	sub	r6, r6, #1
   14cc8:	mov	r0, r4
   14ccc:	mov	r1, r7
   14cd0:	mov	r2, r6
   14cd4:	bl	10d80 <memcpy@plt>
   14cd8:	mov	r0, #0
   14cdc:	strb	r0, [r4, r6]
   14ce0:	mov	r0, r5
   14ce4:	pop	{r4, r5, r6, r7, fp, pc}
   14ce8:	mov	r1, #0
   14cec:	b	10f18 <setlocale@plt>
   14cf0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14cf4:	mov	r7, r0
   14cf8:	ldr	r6, [pc, #72]	; 14d48 <__snprintf_chk@plt+0x3ddc>
   14cfc:	ldr	r5, [pc, #72]	; 14d4c <__snprintf_chk@plt+0x3de0>
   14d00:	add	r6, pc, r6
   14d04:	add	r5, pc, r5
   14d08:	sub	r6, r6, r5
   14d0c:	mov	r8, r1
   14d10:	mov	r9, r2
   14d14:	bl	10d18 <calloc@plt-0x20>
   14d18:	asrs	r6, r6, #2
   14d1c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14d20:	mov	r4, #0
   14d24:	add	r4, r4, #1
   14d28:	ldr	r3, [r5], #4
   14d2c:	mov	r2, r9
   14d30:	mov	r1, r8
   14d34:	mov	r0, r7
   14d38:	blx	r3
   14d3c:	cmp	r6, r4
   14d40:	bne	14d24 <__snprintf_chk@plt+0x3db8>
   14d44:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14d48:	andeq	r1, r1, r4, lsl #4
   14d4c:	strdeq	r1, [r1], -ip
   14d50:	bx	lr
   14d54:	ldr	r3, [pc, #12]	; 14d68 <__snprintf_chk@plt+0x3dfc>
   14d58:	mov	r1, #0
   14d5c:	add	r3, pc, r3
   14d60:	ldr	r2, [r3]
   14d64:	b	10eb8 <__cxa_atexit@plt>
   14d68:	andeq	r1, r1, r0, ror r3

Disassembly of section .fini:

00014d6c <.fini>:
   14d6c:	push	{r3, lr}
   14d70:	pop	{r3, pc}
