
../repos/coreutils/src/readlink:     file format elf32-littlearm


Disassembly of section .init:

00010c68 <.init>:
   10c68:	push	{r3, lr}
   10c6c:	bl	11244 <strspn@plt+0x340>
   10c70:	pop	{r3, pc}

Disassembly of section .plt:

00010c74 <calloc@plt-0x14>:
   10c74:	push	{lr}		; (str lr, [sp, #-4]!)
   10c78:	ldr	lr, [pc, #4]	; 10c84 <calloc@plt-0x4>
   10c7c:	add	lr, pc, lr
   10c80:	ldr	pc, [lr, #8]!
   10c84:	andeq	r5, r1, ip, ror r3

00010c88 <calloc@plt>:
   10c88:	add	ip, pc, #0, 12
   10c8c:	add	ip, ip, #86016	; 0x15000
   10c90:	ldr	pc, [ip, #892]!	; 0x37c

00010c94 <fputs_unlocked@plt>:
   10c94:	add	ip, pc, #0, 12
   10c98:	add	ip, ip, #86016	; 0x15000
   10c9c:	ldr	pc, [ip, #884]!	; 0x374

00010ca0 <raise@plt>:
   10ca0:	add	ip, pc, #0, 12
   10ca4:	add	ip, ip, #86016	; 0x15000
   10ca8:	ldr	pc, [ip, #876]!	; 0x36c

00010cac <strcmp@plt>:
   10cac:	add	ip, pc, #0, 12
   10cb0:	add	ip, ip, #86016	; 0x15000
   10cb4:	ldr	pc, [ip, #868]!	; 0x364

00010cb8 <fflush@plt>:
   10cb8:	add	ip, pc, #0, 12
   10cbc:	add	ip, ip, #86016	; 0x15000
   10cc0:	ldr	pc, [ip, #860]!	; 0x35c

00010cc4 <memmove@plt>:
   10cc4:	add	ip, pc, #0, 12
   10cc8:	add	ip, ip, #86016	; 0x15000
   10ccc:	ldr	pc, [ip, #852]!	; 0x354

00010cd0 <free@plt>:
   10cd0:	add	ip, pc, #0, 12
   10cd4:	add	ip, ip, #86016	; 0x15000
   10cd8:	ldr	pc, [ip, #844]!	; 0x34c

00010cdc <faccessat@plt>:
   10cdc:	add	ip, pc, #0, 12
   10ce0:	add	ip, ip, #86016	; 0x15000
   10ce4:	ldr	pc, [ip, #836]!	; 0x344

00010ce8 <_exit@plt>:
   10ce8:	add	ip, pc, #0, 12
   10cec:	add	ip, ip, #86016	; 0x15000
   10cf0:	ldr	pc, [ip, #828]!	; 0x33c

00010cf4 <memcpy@plt>:
   10cf4:	add	ip, pc, #0, 12
   10cf8:	add	ip, ip, #86016	; 0x15000
   10cfc:	ldr	pc, [ip, #820]!	; 0x334

00010d00 <mbsinit@plt>:
   10d00:	add	ip, pc, #0, 12
   10d04:	add	ip, ip, #86016	; 0x15000
   10d08:	ldr	pc, [ip, #812]!	; 0x32c

00010d0c <memcmp@plt>:
   10d0c:	add	ip, pc, #0, 12
   10d10:	add	ip, ip, #86016	; 0x15000
   10d14:	ldr	pc, [ip, #804]!	; 0x324

00010d18 <fputc_unlocked@plt>:
   10d18:	add	ip, pc, #0, 12
   10d1c:	add	ip, ip, #86016	; 0x15000
   10d20:	ldr	pc, [ip, #796]!	; 0x31c

00010d24 <dcgettext@plt>:
   10d24:	add	ip, pc, #0, 12
   10d28:	add	ip, ip, #86016	; 0x15000
   10d2c:	ldr	pc, [ip, #788]!	; 0x314

00010d30 <realloc@plt>:
   10d30:	add	ip, pc, #0, 12
   10d34:	add	ip, ip, #86016	; 0x15000
   10d38:	ldr	pc, [ip, #780]!	; 0x30c

00010d3c <textdomain@plt>:
   10d3c:	add	ip, pc, #0, 12
   10d40:	add	ip, ip, #86016	; 0x15000
   10d44:	ldr	pc, [ip, #772]!	; 0x304

00010d48 <rawmemchr@plt>:
   10d48:	add	ip, pc, #0, 12
   10d4c:	add	ip, ip, #86016	; 0x15000
   10d50:	ldr	pc, [ip, #764]!	; 0x2fc

00010d54 <iswprint@plt>:
   10d54:	add	ip, pc, #0, 12
   10d58:	add	ip, ip, #86016	; 0x15000
   10d5c:	ldr	pc, [ip, #756]!	; 0x2f4

00010d60 <readlink@plt>:
   10d60:	add	ip, pc, #0, 12
   10d64:	add	ip, ip, #86016	; 0x15000
   10d68:	ldr	pc, [ip, #748]!	; 0x2ec

00010d6c <lseek64@plt>:
   10d6c:	add	ip, pc, #0, 12
   10d70:	add	ip, ip, #86016	; 0x15000
   10d74:	ldr	pc, [ip, #740]!	; 0x2e4

00010d78 <__ctype_get_mb_cur_max@plt>:
   10d78:	add	ip, pc, #0, 12
   10d7c:	add	ip, ip, #86016	; 0x15000
   10d80:	ldr	pc, [ip, #732]!	; 0x2dc

00010d84 <strcpy@plt>:
   10d84:	add	ip, pc, #0, 12
   10d88:	add	ip, ip, #86016	; 0x15000
   10d8c:	ldr	pc, [ip, #724]!	; 0x2d4

00010d90 <__fpending@plt>:
   10d90:	add	ip, pc, #0, 12
   10d94:	add	ip, ip, #86016	; 0x15000
   10d98:	ldr	pc, [ip, #716]!	; 0x2cc

00010d9c <ferror_unlocked@plt>:
   10d9c:	add	ip, pc, #0, 12
   10da0:	add	ip, ip, #86016	; 0x15000
   10da4:	ldr	pc, [ip, #708]!	; 0x2c4

00010da8 <mbrtowc@plt>:
   10da8:	add	ip, pc, #0, 12
   10dac:	add	ip, ip, #86016	; 0x15000
   10db0:	ldr	pc, [ip, #700]!	; 0x2bc

00010db4 <error@plt>:
   10db4:	add	ip, pc, #0, 12
   10db8:	add	ip, ip, #86016	; 0x15000
   10dbc:	ldr	pc, [ip, #692]!	; 0x2b4

00010dc0 <malloc@plt>:
   10dc0:	add	ip, pc, #0, 12
   10dc4:	add	ip, ip, #86016	; 0x15000
   10dc8:	ldr	pc, [ip, #684]!	; 0x2ac

00010dcc <__libc_start_main@plt>:
   10dcc:	add	ip, pc, #0, 12
   10dd0:	add	ip, ip, #86016	; 0x15000
   10dd4:	ldr	pc, [ip, #676]!	; 0x2a4

00010dd8 <__freading@plt>:
   10dd8:	add	ip, pc, #0, 12
   10ddc:	add	ip, ip, #86016	; 0x15000
   10de0:	ldr	pc, [ip, #668]!	; 0x29c

00010de4 <__gmon_start__@plt>:
   10de4:	add	ip, pc, #0, 12
   10de8:	add	ip, ip, #86016	; 0x15000
   10dec:	ldr	pc, [ip, #660]!	; 0x294

00010df0 <mempcpy@plt>:
   10df0:	add	ip, pc, #0, 12
   10df4:	add	ip, ip, #86016	; 0x15000
   10df8:	ldr	pc, [ip, #652]!	; 0x28c

00010dfc <getopt_long@plt>:
   10dfc:	add	ip, pc, #0, 12
   10e00:	add	ip, ip, #86016	; 0x15000
   10e04:	ldr	pc, [ip, #644]!	; 0x284

00010e08 <__ctype_b_loc@plt>:
   10e08:	add	ip, pc, #0, 12
   10e0c:	add	ip, ip, #86016	; 0x15000
   10e10:	ldr	pc, [ip, #636]!	; 0x27c

00010e14 <getcwd@plt>:
   10e14:	add	ip, pc, #0, 12
   10e18:	add	ip, ip, #86016	; 0x15000
   10e1c:	ldr	pc, [ip, #628]!	; 0x274

00010e20 <exit@plt>:
   10e20:	add	ip, pc, #0, 12
   10e24:	add	ip, ip, #86016	; 0x15000
   10e28:	ldr	pc, [ip, #620]!	; 0x26c

00010e2c <strlen@plt>:
   10e2c:	add	ip, pc, #0, 12
   10e30:	add	ip, ip, #86016	; 0x15000
   10e34:	ldr	pc, [ip, #612]!	; 0x264

00010e38 <__errno_location@plt>:
   10e38:	add	ip, pc, #0, 12
   10e3c:	add	ip, ip, #86016	; 0x15000
   10e40:	ldr	pc, [ip, #604]!	; 0x25c

00010e44 <__cxa_atexit@plt>:
   10e44:	add	ip, pc, #0, 12
   10e48:	add	ip, ip, #86016	; 0x15000
   10e4c:	ldr	pc, [ip, #596]!	; 0x254

00010e50 <memset@plt>:
   10e50:	add	ip, pc, #0, 12
   10e54:	add	ip, ip, #86016	; 0x15000
   10e58:	ldr	pc, [ip, #588]!	; 0x24c

00010e5c <__printf_chk@plt>:
   10e5c:	add	ip, pc, #0, 12
   10e60:	add	ip, ip, #86016	; 0x15000
   10e64:	ldr	pc, [ip, #580]!	; 0x244

00010e68 <fileno@plt>:
   10e68:	add	ip, pc, #0, 12
   10e6c:	add	ip, ip, #86016	; 0x15000
   10e70:	ldr	pc, [ip, #572]!	; 0x23c

00010e74 <__fprintf_chk@plt>:
   10e74:	add	ip, pc, #0, 12
   10e78:	add	ip, ip, #86016	; 0x15000
   10e7c:	ldr	pc, [ip, #564]!	; 0x234

00010e80 <fclose@plt>:
   10e80:	add	ip, pc, #0, 12
   10e84:	add	ip, ip, #86016	; 0x15000
   10e88:	ldr	pc, [ip, #556]!	; 0x22c

00010e8c <fseeko64@plt>:
   10e8c:	add	ip, pc, #0, 12
   10e90:	add	ip, ip, #86016	; 0x15000
   10e94:	ldr	pc, [ip, #548]!	; 0x224

00010e98 <setlocale@plt>:
   10e98:	add	ip, pc, #0, 12
   10e9c:	add	ip, ip, #86016	; 0x15000
   10ea0:	ldr	pc, [ip, #540]!	; 0x21c

00010ea4 <strrchr@plt>:
   10ea4:	add	ip, pc, #0, 12
   10ea8:	add	ip, ip, #86016	; 0x15000
   10eac:	ldr	pc, [ip, #532]!	; 0x214

00010eb0 <nl_langinfo@plt>:
   10eb0:	add	ip, pc, #0, 12
   10eb4:	add	ip, ip, #86016	; 0x15000
   10eb8:	ldr	pc, [ip, #524]!	; 0x20c

00010ebc <bindtextdomain@plt>:
   10ebc:	add	ip, pc, #0, 12
   10ec0:	add	ip, ip, #86016	; 0x15000
   10ec4:	ldr	pc, [ip, #516]!	; 0x204

00010ec8 <__xstat64@plt>:
   10ec8:	add	ip, pc, #0, 12
   10ecc:	add	ip, ip, #86016	; 0x15000
   10ed0:	ldr	pc, [ip, #508]!	; 0x1fc

00010ed4 <fputs@plt>:
   10ed4:	add	ip, pc, #0, 12
   10ed8:	add	ip, ip, #86016	; 0x15000
   10edc:	ldr	pc, [ip, #500]!	; 0x1f4

00010ee0 <strncmp@plt>:
   10ee0:	add	ip, pc, #0, 12
   10ee4:	add	ip, ip, #86016	; 0x15000
   10ee8:	ldr	pc, [ip, #492]!	; 0x1ec

00010eec <abort@plt>:
   10eec:	add	ip, pc, #0, 12
   10ef0:	add	ip, ip, #86016	; 0x15000
   10ef4:	ldr	pc, [ip, #484]!	; 0x1e4

00010ef8 <putchar_unlocked@plt>:
   10ef8:	add	ip, pc, #0, 12
   10efc:	add	ip, ip, #86016	; 0x15000
   10f00:	ldr	pc, [ip, #476]!	; 0x1dc

00010f04 <strspn@plt>:
   10f04:	add	ip, pc, #0, 12
   10f08:	add	ip, ip, #86016	; 0x15000
   10f0c:	ldr	pc, [ip, #468]!	; 0x1d4

Disassembly of section .text:

00010f10 <.text>:
   10f10:	push	{r4, lr}
   10f14:	bl	10e38 <__errno_location@plt>
   10f18:	mov	r3, #12
   10f1c:	str	r3, [r0]
   10f20:	mov	r0, #0
   10f24:	pop	{r4, pc}
   10f28:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10f2c:	mov	r7, r0
   10f30:	sub	sp, sp, #20
   10f34:	mov	r9, r1
   10f38:	mov	r8, #0
   10f3c:	mvn	r6, #0
   10f40:	ldr	r0, [r1]
   10f44:	bl	12c18 <strspn@plt+0x1d14>
   10f48:	ldr	r1, [pc, #632]	; 111c8 <strspn@plt+0x2c4>
   10f4c:	mov	r0, #6
   10f50:	bl	10e98 <setlocale@plt>
   10f54:	ldr	r1, [pc, #624]	; 111cc <strspn@plt+0x2c8>
   10f58:	ldr	r0, [pc, #624]	; 111d0 <strspn@plt+0x2cc>
   10f5c:	bl	10ebc <bindtextdomain@plt>
   10f60:	ldr	r0, [pc, #616]	; 111d0 <strspn@plt+0x2cc>
   10f64:	bl	10d3c <textdomain@plt>
   10f68:	ldr	r0, [pc, #612]	; 111d4 <strspn@plt+0x2d0>
   10f6c:	ldr	fp, [pc, #612]	; 111d8 <strspn@plt+0x2d4>
   10f70:	ldr	sl, [pc, #612]	; 111dc <strspn@plt+0x2d8>
   10f74:	ldr	r4, [pc, #612]	; 111e0 <strspn@plt+0x2dc>
   10f78:	bl	151f0 <strspn@plt+0x42ec>
   10f7c:	mov	r5, #0
   10f80:	mov	r3, fp
   10f84:	mov	r2, sl
   10f88:	mov	r1, r9
   10f8c:	mov	r0, r7
   10f90:	str	r5, [sp]
   10f94:	bl	10dfc <getopt_long@plt>
   10f98:	cmn	r0, #1
   10f9c:	bne	10fd4 <strspn@plt+0xd0>
   10fa0:	ldr	r4, [pc, #572]	; 111e4 <strspn@plt+0x2e0>
   10fa4:	ldr	r3, [r4]
   10fa8:	cmp	r3, r7
   10fac:	blt	110a4 <strspn@plt+0x1a0>
   10fb0:	mov	r2, #5
   10fb4:	ldr	r1, [pc, #556]	; 111e8 <strspn@plt+0x2e4>
   10fb8:	mov	r0, r5
   10fbc:	bl	10d24 <dcgettext@plt>
   10fc0:	mov	r2, r0
   10fc4:	mov	r1, r5
   10fc8:	mov	r0, r5
   10fcc:	bl	10db4 <error@plt>
   10fd0:	b	10ff4 <strspn@plt+0xf0>
   10fd4:	cmp	r0, #109	; 0x6d
   10fd8:	beq	11094 <strspn@plt+0x190>
   10fdc:	bgt	11014 <strspn@plt+0x110>
   10fe0:	cmn	r0, #2
   10fe4:	beq	11060 <strspn@plt+0x15c>
   10fe8:	bgt	10ffc <strspn@plt+0xf8>
   10fec:	cmn	r0, #3
   10ff0:	beq	11068 <strspn@plt+0x164>
   10ff4:	mov	r0, #1
   10ff8:	b	11064 <strspn@plt+0x160>
   10ffc:	cmp	r0, #101	; 0x65
   11000:	beq	1109c <strspn@plt+0x198>
   11004:	cmp	r0, #102	; 0x66
   11008:	bne	10ff4 <strspn@plt+0xf0>
   1100c:	mov	r6, #1
   11010:	b	10f7c <strspn@plt+0x78>
   11014:	cmp	r0, #115	; 0x73
   11018:	beq	11038 <strspn@plt+0x134>
   1101c:	bgt	11044 <strspn@plt+0x140>
   11020:	cmp	r0, #110	; 0x6e
   11024:	moveq	r3, #1
   11028:	strbeq	r3, [r4]
   1102c:	beq	10f7c <strspn@plt+0x78>
   11030:	cmp	r0, #113	; 0x71
   11034:	bne	10ff4 <strspn@plt+0xf0>
   11038:	mov	r3, #0
   1103c:	strb	r3, [r4, #1]
   11040:	b	10f7c <strspn@plt+0x78>
   11044:	cmp	r0, #118	; 0x76
   11048:	mov	r3, #1
   1104c:	beq	1103c <strspn@plt+0x138>
   11050:	cmp	r0, #122	; 0x7a
   11054:	bne	10ff4 <strspn@plt+0xf0>
   11058:	mov	r8, r3
   1105c:	b	10f7c <strspn@plt+0x78>
   11060:	mov	r0, r5
   11064:	bl	112f8 <strspn@plt+0x3f4>
   11068:	ldr	r3, [pc, #380]	; 111ec <strspn@plt+0x2e8>
   1106c:	ldr	r0, [pc, #380]	; 111f0 <strspn@plt+0x2ec>
   11070:	ldr	r2, [pc, #380]	; 111f4 <strspn@plt+0x2f0>
   11074:	stm	sp, {r3, r5}
   11078:	ldr	r3, [pc, #376]	; 111f8 <strspn@plt+0x2f4>
   1107c:	ldr	r1, [pc, #376]	; 111fc <strspn@plt+0x2f8>
   11080:	ldr	r0, [r0]
   11084:	ldr	r3, [r3]
   11088:	bl	147b4 <strspn@plt+0x38b0>
   1108c:	mov	r0, r5
   11090:	bl	10e20 <exit@plt>
   11094:	mov	r6, #2
   11098:	b	10f7c <strspn@plt+0x78>
   1109c:	mov	r6, r5
   110a0:	b	10f7c <strspn@plt+0x78>
   110a4:	sub	r3, r7, r3
   110a8:	cmp	r3, #1
   110ac:	beq	110ec <strspn@plt+0x1e8>
   110b0:	ldr	r3, [pc, #296]	; 111e0 <strspn@plt+0x2dc>
   110b4:	ldrb	r2, [r3]
   110b8:	mov	sl, r3
   110bc:	cmp	r2, #0
   110c0:	beq	110e4 <strspn@plt+0x1e0>
   110c4:	mov	r2, #5
   110c8:	ldr	r1, [pc, #304]	; 11200 <strspn@plt+0x2fc>
   110cc:	mov	r0, r5
   110d0:	bl	10d24 <dcgettext@plt>
   110d4:	mov	r2, r0
   110d8:	mov	r1, r5
   110dc:	mov	r0, r5
   110e0:	bl	10db4 <error@plt>
   110e4:	mov	r3, #0
   110e8:	strb	r3, [sl]
   110ec:	ldr	fp, [pc, #236]	; 111e0 <strspn@plt+0x2dc>
   110f0:	cmp	r8, #0
   110f4:	mov	r8, #0
   110f8:	movne	r3, #0
   110fc:	moveq	r3, #10
   11100:	str	r3, [sp, #12]
   11104:	ldr	r3, [r4]
   11108:	cmp	r3, r7
   1110c:	blt	1111c <strspn@plt+0x218>
   11110:	mov	r0, r8
   11114:	add	sp, sp, #20
   11118:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1111c:	cmn	r6, #1
   11120:	ldr	sl, [r9, r3, lsl #2]
   11124:	beq	11178 <strspn@plt+0x274>
   11128:	mov	r1, r6
   1112c:	mov	r0, sl
   11130:	bl	1167c <strspn@plt+0x778>
   11134:	cmp	r0, #0
   11138:	mov	r5, r0
   1113c:	beq	11188 <strspn@plt+0x284>
   11140:	ldr	r3, [pc, #168]	; 111f0 <strspn@plt+0x2ec>
   11144:	ldr	r1, [r3]
   11148:	bl	10c94 <fputs_unlocked@plt>
   1114c:	ldrb	r3, [fp]
   11150:	cmp	r3, #0
   11154:	bne	11160 <strspn@plt+0x25c>
   11158:	ldr	r0, [sp, #12]
   1115c:	bl	10ef8 <putchar_unlocked@plt>
   11160:	mov	r0, r5
   11164:	bl	11de8 <strspn@plt+0xee4>
   11168:	ldr	r3, [r4]
   1116c:	add	r3, r3, #1
   11170:	str	r3, [r4]
   11174:	b	11104 <strspn@plt+0x200>
   11178:	mov	r1, #63	; 0x3f
   1117c:	mov	r0, sl
   11180:	bl	11550 <strspn@plt+0x64c>
   11184:	b	11134 <strspn@plt+0x230>
   11188:	ldrb	r3, [fp, #1]
   1118c:	cmp	r3, #0
   11190:	beq	111c0 <strspn@plt+0x2bc>
   11194:	bl	10e38 <__errno_location@plt>
   11198:	ldr	r8, [r0]
   1119c:	mov	r2, sl
   111a0:	mov	r1, #3
   111a4:	mov	r0, r5
   111a8:	bl	140d8 <strspn@plt+0x31d4>
   111ac:	mov	r3, r0
   111b0:	ldr	r2, [pc, #76]	; 11204 <strspn@plt+0x300>
   111b4:	mov	r0, r5
   111b8:	mov	r1, r8
   111bc:	bl	10db4 <error@plt>
   111c0:	mov	r8, #1
   111c4:	b	11168 <strspn@plt+0x264>
   111c8:	muleq	r1, r2, r3
   111cc:	muleq	r1, sl, r8
   111d0:	strdeq	r5, [r1], -r7
   111d4:	andeq	r1, r1, r8, ror #24
   111d8:	andeq	r5, r1, ip, asr r2
   111dc:	andeq	r5, r1, r2, asr #17
   111e0:	andeq	r6, r2, r1, asr r1
   111e4:	andeq	r6, r2, r0, asr #2
   111e8:	andeq	r5, r1, fp, asr #17
   111ec:			; <UNDEFINED> instruction: 0x000158b2
   111f0:	andeq	r6, r2, ip, asr #2
   111f4:	strdeq	r5, [r1], -r3
   111f8:	strdeq	r6, [r2], -r0
   111fc:	andeq	r5, r1, ip, lsl #6
   11200:	ldrdeq	r5, [r1], -fp
   11204:	strdeq	r5, [r1], -r5	; <UNPREDICTABLE>
   11208:	mov	fp, #0
   1120c:	mov	lr, #0
   11210:	pop	{r1}		; (ldr r1, [sp], #4)
   11214:	mov	r2, sp
   11218:	push	{r2}		; (str r2, [sp, #-4]!)
   1121c:	push	{r0}		; (str r0, [sp, #-4]!)
   11220:	ldr	ip, [pc, #16]	; 11238 <strspn@plt+0x334>
   11224:	push	{ip}		; (str ip, [sp, #-4]!)
   11228:	ldr	r0, [pc, #12]	; 1123c <strspn@plt+0x338>
   1122c:	ldr	r3, [pc, #12]	; 11240 <strspn@plt+0x33c>
   11230:	bl	10dcc <__libc_start_main@plt>
   11234:	bl	10eec <abort@plt>
   11238:	andeq	r5, r1, ip, ror #3
   1123c:	andeq	r0, r1, r8, lsr #30
   11240:	andeq	r5, r1, ip, lsl #3
   11244:	ldr	r3, [pc, #20]	; 11260 <strspn@plt+0x35c>
   11248:	ldr	r2, [pc, #20]	; 11264 <strspn@plt+0x360>
   1124c:	add	r3, pc, r3
   11250:	ldr	r2, [r3, r2]
   11254:	cmp	r2, #0
   11258:	bxeq	lr
   1125c:	b	10de4 <__gmon_start__@plt>
   11260:	andeq	r4, r1, ip, lsr #27
   11264:	andeq	r0, r0, r4, ror #1
   11268:	ldr	r0, [pc, #24]	; 11288 <strspn@plt+0x384>
   1126c:	ldr	r3, [pc, #24]	; 1128c <strspn@plt+0x388>
   11270:	cmp	r3, r0
   11274:	bxeq	lr
   11278:	ldr	r3, [pc, #16]	; 11290 <strspn@plt+0x38c>
   1127c:	cmp	r3, #0
   11280:	bxeq	lr
   11284:	bx	r3
   11288:	andeq	r6, r2, r8, lsr r1
   1128c:	andeq	r6, r2, r8, lsr r1
   11290:	andeq	r0, r0, r0
   11294:	ldr	r0, [pc, #36]	; 112c0 <strspn@plt+0x3bc>
   11298:	ldr	r1, [pc, #36]	; 112c4 <strspn@plt+0x3c0>
   1129c:	sub	r1, r1, r0
   112a0:	asr	r1, r1, #2
   112a4:	add	r1, r1, r1, lsr #31
   112a8:	asrs	r1, r1, #1
   112ac:	bxeq	lr
   112b0:	ldr	r3, [pc, #16]	; 112c8 <strspn@plt+0x3c4>
   112b4:	cmp	r3, #0
   112b8:	bxeq	lr
   112bc:	bx	r3
   112c0:	andeq	r6, r2, r8, lsr r1
   112c4:	andeq	r6, r2, r8, lsr r1
   112c8:	andeq	r0, r0, r0
   112cc:	push	{r4, lr}
   112d0:	ldr	r4, [pc, #24]	; 112f0 <strspn@plt+0x3ec>
   112d4:	ldrb	r3, [r4]
   112d8:	cmp	r3, #0
   112dc:	popne	{r4, pc}
   112e0:	bl	11268 <strspn@plt+0x364>
   112e4:	mov	r3, #1
   112e8:	strb	r3, [r4]
   112ec:	pop	{r4, pc}
   112f0:	andeq	r6, r2, r0, asr r1
   112f4:	b	11294 <strspn@plt+0x390>
   112f8:	subs	r5, r0, #0
   112fc:	push	{r7, lr}
   11300:	sub	sp, sp, #56	; 0x38
   11304:	ldr	r4, [pc, #496]	; 114fc <strspn@plt+0x5f8>
   11308:	beq	11340 <strspn@plt+0x43c>
   1130c:	mov	r2, #5
   11310:	mov	r0, #0
   11314:	ldr	r3, [pc, #484]	; 11500 <strspn@plt+0x5fc>
   11318:	ldr	r1, [pc, #484]	; 11504 <strspn@plt+0x600>
   1131c:	ldr	r6, [r3]
   11320:	bl	10d24 <dcgettext@plt>
   11324:	mov	r2, r0
   11328:	mov	r1, #1
   1132c:	ldr	r3, [r4]
   11330:	mov	r0, r6
   11334:	bl	10e74 <__fprintf_chk@plt>
   11338:	mov	r0, r5
   1133c:	bl	10e20 <exit@plt>
   11340:	mov	r2, #5
   11344:	ldr	r1, [pc, #444]	; 11508 <strspn@plt+0x604>
   11348:	mov	r6, sp
   1134c:	bl	10d24 <dcgettext@plt>
   11350:	ldr	r2, [r4]
   11354:	mov	r1, r0
   11358:	mov	r0, #1
   1135c:	bl	10e5c <__printf_chk@plt>
   11360:	ldr	r4, [pc, #420]	; 1150c <strspn@plt+0x608>
   11364:	mov	r2, #5
   11368:	mov	r0, r5
   1136c:	ldr	r1, [pc, #412]	; 11510 <strspn@plt+0x60c>
   11370:	bl	10d24 <dcgettext@plt>
   11374:	ldr	r7, [pc, #408]	; 11514 <strspn@plt+0x610>
   11378:	ldr	r1, [r4]
   1137c:	bl	10c94 <fputs_unlocked@plt>
   11380:	mov	r2, #5
   11384:	ldr	r1, [pc, #396]	; 11518 <strspn@plt+0x614>
   11388:	mov	r0, r5
   1138c:	bl	10d24 <dcgettext@plt>
   11390:	ldr	r1, [r4]
   11394:	bl	10c94 <fputs_unlocked@plt>
   11398:	mov	r2, #5
   1139c:	ldr	r1, [pc, #376]	; 1151c <strspn@plt+0x618>
   113a0:	mov	r0, r5
   113a4:	bl	10d24 <dcgettext@plt>
   113a8:	ldr	r1, [r4]
   113ac:	bl	10c94 <fputs_unlocked@plt>
   113b0:	mov	r2, #5
   113b4:	ldr	r1, [pc, #356]	; 11520 <strspn@plt+0x61c>
   113b8:	mov	r0, r5
   113bc:	bl	10d24 <dcgettext@plt>
   113c0:	ldr	r1, [r4]
   113c4:	bl	10c94 <fputs_unlocked@plt>
   113c8:	mov	r2, #5
   113cc:	ldr	r1, [pc, #336]	; 11524 <strspn@plt+0x620>
   113d0:	mov	r0, r5
   113d4:	bl	10d24 <dcgettext@plt>
   113d8:	ldr	r1, [r4]
   113dc:	bl	10c94 <fputs_unlocked@plt>
   113e0:	ldr	lr, [pc, #320]	; 11528 <strspn@plt+0x624>
   113e4:	mov	ip, sp
   113e8:	ldm	lr!, {r0, r1, r2, r3}
   113ec:	stmia	ip!, {r0, r1, r2, r3}
   113f0:	ldm	lr!, {r0, r1, r2, r3}
   113f4:	stmia	ip!, {r0, r1, r2, r3}
   113f8:	ldm	lr!, {r0, r1, r2, r3}
   113fc:	stmia	ip!, {r0, r1, r2, r3}
   11400:	ldm	lr, {r0, r1}
   11404:	stm	ip, {r0, r1}
   11408:	ldr	r1, [r6]
   1140c:	cmp	r1, #0
   11410:	bne	114b4 <strspn@plt+0x5b0>
   11414:	ldr	r6, [r6, #4]
   11418:	mov	r2, #5
   1141c:	mov	r0, #0
   11420:	ldr	r7, [pc, #236]	; 11514 <strspn@plt+0x610>
   11424:	ldr	r1, [pc, #256]	; 1152c <strspn@plt+0x628>
   11428:	cmp	r6, #0
   1142c:	moveq	r6, r7
   11430:	bl	10d24 <dcgettext@plt>
   11434:	mov	r1, r0
   11438:	ldr	r3, [pc, #240]	; 11530 <strspn@plt+0x62c>
   1143c:	mov	r0, #1
   11440:	ldr	r2, [pc, #236]	; 11534 <strspn@plt+0x630>
   11444:	bl	10e5c <__printf_chk@plt>
   11448:	mov	r1, #0
   1144c:	mov	r0, #5
   11450:	bl	10e98 <setlocale@plt>
   11454:	cmp	r0, #0
   11458:	bne	114cc <strspn@plt+0x5c8>
   1145c:	mov	r2, #5
   11460:	ldr	r1, [pc, #208]	; 11538 <strspn@plt+0x634>
   11464:	mov	r0, #0
   11468:	bl	10d24 <dcgettext@plt>
   1146c:	mov	r1, r0
   11470:	ldr	r3, [pc, #156]	; 11514 <strspn@plt+0x610>
   11474:	mov	r0, #1
   11478:	ldr	r2, [pc, #176]	; 11530 <strspn@plt+0x62c>
   1147c:	bl	10e5c <__printf_chk@plt>
   11480:	mov	r2, #5
   11484:	ldr	r1, [pc, #176]	; 1153c <strspn@plt+0x638>
   11488:	mov	r0, #0
   1148c:	bl	10d24 <dcgettext@plt>
   11490:	ldr	r2, [pc, #168]	; 11540 <strspn@plt+0x63c>
   11494:	cmp	r6, r7
   11498:	mov	r1, r0
   1149c:	mov	r0, #1
   114a0:	ldr	r3, [pc, #156]	; 11544 <strspn@plt+0x640>
   114a4:	moveq	r3, r2
   114a8:	mov	r2, r6
   114ac:	bl	10e5c <__printf_chk@plt>
   114b0:	b	11338 <strspn@plt+0x434>
   114b4:	mov	r0, r7
   114b8:	bl	10cac <strcmp@plt>
   114bc:	cmp	r0, #0
   114c0:	beq	11414 <strspn@plt+0x510>
   114c4:	add	r6, r6, #8
   114c8:	b	11408 <strspn@plt+0x504>
   114cc:	mov	r2, #3
   114d0:	ldr	r1, [pc, #112]	; 11548 <strspn@plt+0x644>
   114d4:	bl	10ee0 <strncmp@plt>
   114d8:	cmp	r0, #0
   114dc:	beq	1145c <strspn@plt+0x558>
   114e0:	mov	r2, #5
   114e4:	ldr	r1, [pc, #96]	; 1154c <strspn@plt+0x648>
   114e8:	mov	r0, #0
   114ec:	bl	10d24 <dcgettext@plt>
   114f0:	ldr	r1, [r4]
   114f4:	bl	10c94 <fputs_unlocked@plt>
   114f8:	b	1145c <strspn@plt+0x558>
   114fc:	andeq	r6, r2, ip, asr r1
   11500:	andeq	r6, r2, r8, asr #2
   11504:	andeq	r5, r1, r5, lsl r3
   11508:	andeq	r5, r1, ip, lsr r3
   1150c:	andeq	r6, r2, ip, asr #2
   11510:	andeq	r5, r1, fp, asr r3
   11514:	andeq	r5, r1, ip, lsl #6
   11518:	muleq	r1, r3, r3
   1151c:	andeq	r5, r1, r8, asr #10
   11520:	andeq	r5, r1, r1, asr r7
   11524:	andeq	r5, r1, lr, ror r7
   11528:	andeq	r5, r1, r4, lsr #4
   1152c:			; <UNDEFINED> instruction: 0x000157b4
   11530:	andeq	r5, r1, fp, asr #15
   11534:	strdeq	r5, [r1], -r3
   11538:	andeq	r5, r1, ip, asr #16
   1153c:	andeq	r5, r1, r7, ror #16
   11540:	andeq	r5, r1, r5, lsr #18
   11544:	muleq	r1, r2, r3
   11548:	andeq	r5, r1, r1, lsl #16
   1154c:	andeq	r5, r1, r5, lsl #16
   11550:	push	{r4, r5, r6, r7, r8, lr}
   11554:	subs	r6, r1, #0
   11558:	sub	sp, sp, #128	; 0x80
   1155c:	mov	r8, r0
   11560:	moveq	r5, #128	; 0x80
   11564:	beq	11574 <strspn@plt+0x670>
   11568:	cmp	r6, #1024	; 0x400
   1156c:	addls	r5, r6, #1
   11570:	movwhi	r5, #1025	; 0x401
   11574:	subs	r4, r5, #128	; 0x80
   11578:	movne	r4, #1
   1157c:	cmp	r6, #0
   11580:	movne	r4, #1
   11584:	cmp	r4, #0
   11588:	moveq	r7, sp
   1158c:	beq	115b4 <strspn@plt+0x6b0>
   11590:	mov	r0, r5
   11594:	bl	14bc8 <strspn@plt+0x3cc4>
   11598:	subs	r7, r0, #0
   1159c:	bne	115b0 <strspn@plt+0x6ac>
   115a0:	bl	10e38 <__errno_location@plt>
   115a4:	mov	r3, #12
   115a8:	str	r3, [r0]
   115ac:	b	115d4 <strspn@plt+0x6d0>
   115b0:	mov	r4, r7
   115b4:	mov	r2, r5
   115b8:	mov	r1, r7
   115bc:	mov	r0, r8
   115c0:	bl	10d60 <readlink@plt>
   115c4:	cmp	r0, #0
   115c8:	bge	115e4 <strspn@plt+0x6e0>
   115cc:	mov	r0, r4
   115d0:	bl	11de8 <strspn@plt+0xee4>
   115d4:	mov	r4, #0
   115d8:	mov	r0, r4
   115dc:	add	sp, sp, #128	; 0x80
   115e0:	pop	{r4, r5, r6, r7, r8, pc}
   115e4:	cmp	r5, r0
   115e8:	bls	11644 <strspn@plt+0x740>
   115ec:	mov	r3, #0
   115f0:	add	r6, r0, #1
   115f4:	cmp	r4, r3
   115f8:	strb	r3, [r7, r0]
   115fc:	bne	11624 <strspn@plt+0x720>
   11600:	mov	r0, r6
   11604:	bl	14bc8 <strspn@plt+0x3cc4>
   11608:	subs	r4, r0, #0
   1160c:	beq	115d8 <strspn@plt+0x6d4>
   11610:	mov	r2, r6
   11614:	mov	r1, r7
   11618:	bl	10cf4 <memcpy@plt>
   1161c:	mov	r4, r0
   11620:	b	115d8 <strspn@plt+0x6d4>
   11624:	cmp	r5, r6
   11628:	bls	115d8 <strspn@plt+0x6d4>
   1162c:	mov	r0, r4
   11630:	mov	r1, r6
   11634:	bl	14bf4 <strspn@plt+0x3cf0>
   11638:	cmp	r0, #0
   1163c:	movne	r4, r0
   11640:	b	115d8 <strspn@plt+0x6d4>
   11644:	mov	r0, r4
   11648:	bl	11de8 <strspn@plt+0xee4>
   1164c:	cmn	r5, #-1073741823	; 0xc0000001
   11650:	lslls	r5, r5, #1
   11654:	bls	11574 <strspn@plt+0x670>
   11658:	cmn	r5, #-2147483646	; 0x80000002
   1165c:	bhi	115a0 <strspn@plt+0x69c>
   11660:	mvn	r5, #-2147483648	; 0x80000000
   11664:	b	11574 <strspn@plt+0x670>
   11668:	mov	r3, r0
   1166c:	ldr	r0, [r3], #8
   11670:	cmp	r0, r3
   11674:	bxeq	lr
   11678:	b	11de8 <strspn@plt+0xee4>
   1167c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11680:	and	fp, r1, #3
   11684:	sub	sp, sp, #3232	; 0xca0
   11688:	sub	r3, fp, #1
   1168c:	sub	sp, sp, #4
   11690:	tst	r3, fp
   11694:	beq	116b8 <strspn@plt+0x7b4>
   11698:	bl	10e38 <__errno_location@plt>
   1169c:	mov	r3, #22
   116a0:	str	r3, [r0]
   116a4:	mov	r5, #0
   116a8:	mov	r0, r5
   116ac:	add	sp, sp, #3232	; 0xca0
   116b0:	add	sp, sp, #4
   116b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   116b8:	cmp	r0, #0
   116bc:	mov	r5, r0
   116c0:	bne	116d4 <strspn@plt+0x7d0>
   116c4:	bl	10e38 <__errno_location@plt>
   116c8:	mov	r3, #22
   116cc:	str	r3, [r0]
   116d0:	b	116a8 <strspn@plt+0x7a4>
   116d4:	ldrb	r6, [r0]
   116d8:	cmp	r6, #0
   116dc:	bne	116ec <strspn@plt+0x7e8>
   116e0:	bl	10e38 <__errno_location@plt>
   116e4:	mov	r3, #2
   116e8:	b	116a0 <strspn@plt+0x79c>
   116ec:	add	r3, sp, #1168	; 0x490
   116f0:	add	r4, sp, #144	; 0x90
   116f4:	add	r3, r3, #8
   116f8:	add	r2, sp, #2208	; 0x8a0
   116fc:	cmp	r6, #47	; 0x2f
   11700:	mov	r7, r1
   11704:	str	r4, [sp, #136]	; 0x88
   11708:	str	r3, [sp, #1168]	; 0x490
   1170c:	mov	r3, #1024	; 0x400
   11710:	subne	r6, r4, #8
   11714:	str	r3, [sp, #140]	; 0x8c
   11718:	str	r3, [sp, #1172]	; 0x494
   1171c:	str	r2, [sp, #2200]	; 0x898
   11720:	str	r3, [sp, #2204]	; 0x89c
   11724:	bne	11764 <strspn@plt+0x860>
   11728:	add	r0, r4, #1
   1172c:	strb	r6, [sp, #144]	; 0x90
   11730:	b	11784 <strspn@plt+0x880>
   11734:	bl	10e38 <__errno_location@plt>
   11738:	ldr	r3, [r0]
   1173c:	cmp	r3, #12
   11740:	beq	1175c <strspn@plt+0x858>
   11744:	cmp	r3, #34	; 0x22
   11748:	bne	11c08 <strspn@plt+0xd04>
   1174c:	mov	r0, r6
   11750:	bl	14274 <strspn@plt+0x3370>
   11754:	cmp	r0, #0
   11758:	bne	11760 <strspn@plt+0x85c>
   1175c:	bl	14b34 <strspn@plt+0x3c30>
   11760:	ldr	r4, [sp, #136]	; 0x88
   11764:	mov	r0, r4
   11768:	ldr	r1, [sp, #140]	; 0x8c
   1176c:	bl	10e14 <getcwd@plt>
   11770:	cmp	r0, #0
   11774:	beq	11734 <strspn@plt+0x830>
   11778:	mov	r1, #0
   1177c:	mov	r0, r4
   11780:	bl	10d48 <rawmemchr@plt>
   11784:	and	r3, r7, #4
   11788:	mov	r7, #0
   1178c:	mov	r6, r4
   11790:	mov	r9, r7
   11794:	mov	r4, r0
   11798:	str	r7, [sp, #12]
   1179c:	str	r3, [sp, #16]
   117a0:	b	117ec <strspn@plt+0x8e8>
   117a4:	mov	r3, r1
   117a8:	mov	r1, r3
   117ac:	mov	r8, r3
   117b0:	ldrb	r2, [r1], #1
   117b4:	cmp	r2, #47	; 0x2f
   117b8:	beq	117a4 <strspn@plt+0x8a0>
   117bc:	ldrb	r1, [r3]
   117c0:	mov	r5, r3
   117c4:	add	r3, r3, #1
   117c8:	cmp	r1, #0
   117cc:	cmpne	r1, #47	; 0x2f
   117d0:	bne	117bc <strspn@plt+0x8b8>
   117d4:	subs	sl, r5, r8
   117d8:	beq	11be8 <strspn@plt+0xce4>
   117dc:	cmp	sl, #1
   117e0:	bne	11800 <strspn@plt+0x8fc>
   117e4:	cmp	r2, #46	; 0x2e
   117e8:	bne	11844 <strspn@plt+0x940>
   117ec:	ldrb	r3, [r5]
   117f0:	cmp	r3, #0
   117f4:	beq	11be8 <strspn@plt+0xce4>
   117f8:	mov	r3, r5
   117fc:	b	117a8 <strspn@plt+0x8a4>
   11800:	cmp	r2, #46	; 0x2e
   11804:	cmpeq	sl, #2
   11808:	bne	11844 <strspn@plt+0x940>
   1180c:	ldrb	r3, [r8, #1]
   11810:	cmp	r3, #46	; 0x2e
   11814:	bne	11844 <strspn@plt+0x940>
   11818:	add	r3, r6, #1
   1181c:	cmp	r4, r3
   11820:	bls	117ec <strspn@plt+0x8e8>
   11824:	sub	r3, r4, #1
   11828:	cmp	r3, r6
   1182c:	mov	r4, r3
   11830:	beq	117ec <strspn@plt+0x8e8>
   11834:	ldrb	r2, [r3, #-1]!
   11838:	cmp	r2, #47	; 0x2f
   1183c:	beq	117ec <strspn@plt+0x8e8>
   11840:	b	11828 <strspn@plt+0x924>
   11844:	ldrb	r3, [r4, #-1]
   11848:	add	r2, sl, #2
   1184c:	cmp	r3, #47	; 0x2f
   11850:	movne	r3, #47	; 0x2f
   11854:	strbne	r3, [r4], #1
   11858:	ldr	r3, [sp, #140]	; 0x8c
   1185c:	add	r3, r6, r3
   11860:	sub	r3, r3, r4
   11864:	cmp	r3, r2
   11868:	bcc	118e0 <strspn@plt+0x9dc>
   1186c:	mov	r0, r4
   11870:	mov	r2, sl
   11874:	mov	r1, r8
   11878:	bl	10df0 <mempcpy@plt>
   1187c:	mov	r3, #0
   11880:	mov	r4, r0
   11884:	strb	r3, [r0]
   11888:	ldr	r3, [sp, #16]
   1188c:	cmp	r3, #0
   11890:	bne	11aec <strspn@plt+0xbe8>
   11894:	ldr	r3, [sp, #2200]	; 0x898
   11898:	mov	r0, r6
   1189c:	str	r3, [sp, #8]
   118a0:	ldr	r1, [sp, #8]
   118a4:	ldr	r3, [sp, #2204]	; 0x89c
   118a8:	sub	r3, r3, #1
   118ac:	mov	r2, r3
   118b0:	str	r3, [sp, #20]
   118b4:	bl	10d60 <readlink@plt>
   118b8:	ldr	r3, [sp, #20]
   118bc:	mov	sl, r0
   118c0:	cmp	r3, r0
   118c4:	bgt	11908 <strspn@plt+0xa04>
   118c8:	add	r0, sp, #2192	; 0x890
   118cc:	add	r0, r0, #8
   118d0:	bl	14274 <strspn@plt+0x3370>
   118d4:	cmp	r0, #0
   118d8:	bne	11894 <strspn@plt+0x990>
   118dc:	b	1175c <strspn@plt+0x858>
   118e0:	add	r0, sp, #136	; 0x88
   118e4:	str	r2, [sp, #8]
   118e8:	sub	r4, r4, r6
   118ec:	bl	142e4 <strspn@plt+0x33e0>
   118f0:	cmp	r0, #0
   118f4:	ldr	r2, [sp, #8]
   118f8:	beq	1175c <strspn@plt+0x858>
   118fc:	ldr	r6, [sp, #136]	; 0x88
   11900:	add	r4, r6, r4
   11904:	b	11858 <strspn@plt+0x954>
   11908:	cmp	r0, #0
   1190c:	blt	11aec <strspn@plt+0xbe8>
   11910:	ldr	r3, [sp, #12]
   11914:	cmp	r3, #19
   11918:	addle	r3, r3, #1
   1191c:	strle	r3, [sp, #12]
   11920:	ble	11a14 <strspn@plt+0xb10>
   11924:	ldrb	r3, [r8]
   11928:	cmp	r3, #0
   1192c:	beq	11a14 <strspn@plt+0xb10>
   11930:	sub	r3, r8, r5
   11934:	mov	r2, #0
   11938:	add	r1, sp, #32
   1193c:	strb	r2, [r4, r3]
   11940:	ldrb	r0, [r6]
   11944:	str	r3, [sp, #20]
   11948:	ldr	r2, [pc, #736]	; 11c30 <strspn@plt+0xd2c>
   1194c:	cmp	r0, #0
   11950:	movne	r0, r6
   11954:	moveq	r0, r2
   11958:	bl	15208 <strspn@plt+0x4304>
   1195c:	cmp	r0, #0
   11960:	bne	119c8 <strspn@plt+0xac4>
   11964:	ldrb	r2, [r8]
   11968:	cmp	r7, #0
   1196c:	ldr	r3, [sp, #20]
   11970:	strb	r2, [r4, r3]
   11974:	bne	1199c <strspn@plt+0xa98>
   11978:	ldr	r3, [pc, #692]	; 11c34 <strspn@plt+0xd30>
   1197c:	mov	r1, r7
   11980:	mov	r0, #7
   11984:	ldr	r2, [pc, #684]	; 11c38 <strspn@plt+0xd34>
   11988:	str	r3, [sp]
   1198c:	ldr	r3, [pc, #680]	; 11c3c <strspn@plt+0xd38>
   11990:	bl	12588 <strspn@plt+0x1684>
   11994:	subs	r7, r0, #0
   11998:	beq	1175c <strspn@plt+0x858>
   1199c:	add	r2, sp, #32
   119a0:	mov	r1, r8
   119a4:	mov	r0, r7
   119a8:	bl	11da4 <strspn@plt+0xea0>
   119ac:	cmp	r0, #0
   119b0:	beq	11a04 <strspn@plt+0xb00>
   119b4:	cmp	fp, #2
   119b8:	beq	117ec <strspn@plt+0x8e8>
   119bc:	bl	10e38 <__errno_location@plt>
   119c0:	mov	r3, #40	; 0x28
   119c4:	str	r3, [r0]
   119c8:	mov	r8, #1
   119cc:	cmp	r7, #0
   119d0:	beq	119dc <strspn@plt+0xad8>
   119d4:	mov	r0, r7
   119d8:	bl	126f0 <strspn@plt+0x17ec>
   119dc:	add	r0, sp, #1168	; 0x490
   119e0:	bl	11668 <strspn@plt+0x764>
   119e4:	add	r0, sp, #2192	; 0x890
   119e8:	add	r0, r0, #8
   119ec:	bl	11668 <strspn@plt+0x764>
   119f0:	cmp	r8, #0
   119f4:	beq	11c14 <strspn@plt+0xd10>
   119f8:	add	r0, sp, #136	; 0x88
   119fc:	bl	11668 <strspn@plt+0x764>
   11a00:	b	116a4 <strspn@plt+0x7a0>
   11a04:	add	r2, sp, #32
   11a08:	mov	r1, r8
   11a0c:	mov	r0, r7
   11a10:	bl	11d3c <strspn@plt+0xe38>
   11a14:	ldr	r2, [sp, #8]
   11a18:	mov	r3, #0
   11a1c:	mov	r0, r5
   11a20:	cmp	r9, r3
   11a24:	streq	r9, [sp, #20]
   11a28:	strb	r3, [r2, sl]
   11a2c:	ldr	r8, [sp, #1168]	; 0x490
   11a30:	subne	r3, r5, r8
   11a34:	strne	r3, [sp, #20]
   11a38:	bl	10e2c <strlen@plt>
   11a3c:	mov	r2, r0
   11a40:	add	r1, sl, r0
   11a44:	ldr	r0, [sp, #1172]	; 0x494
   11a48:	cmp	r0, r1
   11a4c:	bls	11ac4 <strspn@plt+0xbc0>
   11a50:	cmp	r9, #0
   11a54:	add	r2, r2, #1
   11a58:	ldrne	r3, [sp, #20]
   11a5c:	add	r0, r8, sl
   11a60:	addne	r5, r8, r3
   11a64:	mov	r1, r5
   11a68:	bl	10cc4 <memmove@plt>
   11a6c:	mov	r2, sl
   11a70:	mov	r0, r8
   11a74:	ldr	r1, [sp, #8]
   11a78:	bl	10cf4 <memcpy@plt>
   11a7c:	ldr	r2, [sp, #8]
   11a80:	add	r3, r6, #1
   11a84:	mov	r5, r0
   11a88:	ldrb	r2, [r2]
   11a8c:	cmp	r2, #47	; 0x2f
   11a90:	moveq	r4, r3
   11a94:	strbeq	r2, [r6]
   11a98:	beq	11abc <strspn@plt+0xbb8>
   11a9c:	cmp	r4, r3
   11aa0:	bls	11abc <strspn@plt+0xbb8>
   11aa4:	sub	r4, r4, #1
   11aa8:	cmp	r6, r4
   11aac:	beq	11abc <strspn@plt+0xbb8>
   11ab0:	ldrb	r3, [r4, #-1]
   11ab4:	cmp	r3, #47	; 0x2f
   11ab8:	bne	11aa4 <strspn@plt+0xba0>
   11abc:	mov	r9, #1
   11ac0:	b	117ec <strspn@plt+0x8e8>
   11ac4:	add	r0, sp, #1168	; 0x490
   11ac8:	str	r2, [sp, #24]
   11acc:	str	r1, [sp, #28]
   11ad0:	bl	142e4 <strspn@plt+0x33e0>
   11ad4:	cmp	r0, #0
   11ad8:	beq	1175c <strspn@plt+0x858>
   11adc:	ldr	r2, [sp, #24]
   11ae0:	ldr	r1, [sp, #28]
   11ae4:	ldr	r8, [sp, #1168]	; 0x490
   11ae8:	b	11a44 <strspn@plt+0xb40>
   11aec:	cmp	fp, #2
   11af0:	movne	r3, r5
   11af4:	beq	117ec <strspn@plt+0x8e8>
   11af8:	ldrb	r2, [r3]
   11afc:	cmp	r2, #47	; 0x2f
   11b00:	beq	11b60 <strspn@plt+0xc5c>
   11b04:	ldr	r3, [sp, #16]
   11b08:	cmp	r3, #0
   11b0c:	bne	11bd0 <strspn@plt+0xccc>
   11b10:	bl	10e38 <__errno_location@plt>
   11b14:	ldr	r8, [r0]
   11b18:	subs	r8, r8, #22
   11b1c:	movne	r8, #1
   11b20:	cmp	r8, #0
   11b24:	beq	117ec <strspn@plt+0x8e8>
   11b28:	cmp	fp, #1
   11b2c:	bne	119cc <strspn@plt+0xac8>
   11b30:	bl	10e38 <__errno_location@plt>
   11b34:	ldr	r3, [r0]
   11b38:	cmp	r3, #2
   11b3c:	bne	119cc <strspn@plt+0xac8>
   11b40:	ldr	r1, [pc, #248]	; 11c40 <strspn@plt+0xd3c>
   11b44:	mov	r0, r5
   11b48:	bl	10f04 <strspn@plt>
   11b4c:	ldrb	r3, [r5, r0]
   11b50:	cmp	r3, #0
   11b54:	beq	117ec <strspn@plt+0x8e8>
   11b58:	b	119cc <strspn@plt+0xac8>
   11b5c:	mov	r3, r2
   11b60:	ldrb	r1, [r3, #1]
   11b64:	add	r2, r3, #1
   11b68:	cmp	r1, #47	; 0x2f
   11b6c:	beq	11b5c <strspn@plt+0xc58>
   11b70:	cmp	r1, #0
   11b74:	add	r3, r3, #2
   11b78:	beq	11ba8 <strspn@plt+0xca4>
   11b7c:	cmp	r1, #46	; 0x2e
   11b80:	bne	11b04 <strspn@plt+0xc00>
   11b84:	ldrb	r1, [r2, #1]
   11b88:	cmp	r1, #0
   11b8c:	beq	11ba8 <strspn@plt+0xca4>
   11b90:	cmp	r1, #46	; 0x2e
   11b94:	bne	11af8 <strspn@plt+0xbf4>
   11b98:	ldrb	r2, [r2, #2]
   11b9c:	cmp	r2, #47	; 0x2f
   11ba0:	cmpne	r2, #0
   11ba4:	bne	11af8 <strspn@plt+0xbf4>
   11ba8:	ldr	r1, [pc, #148]	; 11c44 <strspn@plt+0xd40>
   11bac:	mov	r0, r4
   11bb0:	bl	10d84 <strcpy@plt>
   11bb4:	mov	r3, #512	; 0x200
   11bb8:	mov	r2, #0
   11bbc:	mov	r1, r6
   11bc0:	mvn	r0, #99	; 0x63
   11bc4:	bl	10cdc <faccessat@plt>
   11bc8:	adds	r8, r0, #0
   11bcc:	b	11b1c <strspn@plt+0xc18>
   11bd0:	ldrb	r2, [r5]
   11bd4:	cmp	r2, #0
   11bd8:	movne	r8, #0
   11bdc:	bne	11b20 <strspn@plt+0xc1c>
   11be0:	mov	r3, #512	; 0x200
   11be4:	b	11bbc <strspn@plt+0xcb8>
   11be8:	add	r3, r6, #1
   11bec:	cmp	r4, r3
   11bf0:	bls	11c00 <strspn@plt+0xcfc>
   11bf4:	ldrb	r3, [r4, #-1]
   11bf8:	cmp	r3, #47	; 0x2f
   11bfc:	subeq	r4, r4, #1
   11c00:	mov	r8, #0
   11c04:	b	119cc <strspn@plt+0xac8>
   11c08:	mov	r6, r4
   11c0c:	mov	r8, #1
   11c10:	b	119dc <strspn@plt+0xad8>
   11c14:	add	r0, sp, #136	; 0x88
   11c18:	strb	r8, [r4], #1
   11c1c:	sub	r1, r4, r6
   11c20:	bl	14224 <strspn@plt+0x3320>
   11c24:	subs	r5, r0, #0
   11c28:	bne	116a8 <strspn@plt+0x7a4>
   11c2c:	b	1175c <strspn@plt+0x858>
   11c30:	andeq	r5, r1, r3, ror #19
   11c34:	strdeq	r2, [r1], -ip
   11c38:	andeq	r2, r1, ip, ror fp
   11c3c:			; <UNDEFINED> instruction: 0x00012bb0
   11c40:	andeq	r5, r1, r2, asr lr
   11c44:	andeq	r5, r1, r1, ror #19
   11c48:	ldr	r3, [pc, #4]	; 11c54 <strspn@plt+0xd50>
   11c4c:	str	r0, [r3]
   11c50:	bx	lr
   11c54:	andeq	r6, r2, r4, asr r1
   11c58:	ldr	r3, [pc, #4]	; 11c64 <strspn@plt+0xd60>
   11c5c:	strb	r0, [r3, #4]
   11c60:	bx	lr
   11c64:	andeq	r6, r2, r4, asr r1
   11c68:	ldr	r3, [pc, #176]	; 11d20 <strspn@plt+0xe1c>
   11c6c:	push	{r0, r1, r4, r5, r6, lr}
   11c70:	ldr	r0, [r3]
   11c74:	bl	14c38 <strspn@plt+0x3d34>
   11c78:	cmp	r0, #0
   11c7c:	beq	11d04 <strspn@plt+0xe00>
   11c80:	ldr	r4, [pc, #156]	; 11d24 <strspn@plt+0xe20>
   11c84:	bl	10e38 <__errno_location@plt>
   11c88:	mov	r5, r0
   11c8c:	ldrb	r6, [r4, #4]
   11c90:	cmp	r6, #0
   11c94:	beq	11ca4 <strspn@plt+0xda0>
   11c98:	ldr	r3, [r0]
   11c9c:	cmp	r3, #32
   11ca0:	beq	11d04 <strspn@plt+0xe00>
   11ca4:	mov	r2, #5
   11ca8:	ldr	r1, [pc, #120]	; 11d28 <strspn@plt+0xe24>
   11cac:	mov	r0, #0
   11cb0:	bl	10d24 <dcgettext@plt>
   11cb4:	mov	r6, r0
   11cb8:	ldr	r0, [r4]
   11cbc:	cmp	r0, #0
   11cc0:	beq	11cf0 <strspn@plt+0xdec>
   11cc4:	ldr	r4, [r5]
   11cc8:	bl	140c8 <strspn@plt+0x31c4>
   11ccc:	mov	r3, r0
   11cd0:	ldr	r2, [pc, #84]	; 11d2c <strspn@plt+0xe28>
   11cd4:	mov	r0, #0
   11cd8:	str	r6, [sp]
   11cdc:	mov	r1, r4
   11ce0:	bl	10db4 <error@plt>
   11ce4:	ldr	r3, [pc, #68]	; 11d30 <strspn@plt+0xe2c>
   11ce8:	ldr	r0, [r3]
   11cec:	bl	10ce8 <_exit@plt>
   11cf0:	mov	r3, r6
   11cf4:	ldr	r2, [pc, #56]	; 11d34 <strspn@plt+0xe30>
   11cf8:	ldr	r1, [r5]
   11cfc:	bl	10db4 <error@plt>
   11d00:	b	11ce4 <strspn@plt+0xde0>
   11d04:	ldr	r3, [pc, #44]	; 11d38 <strspn@plt+0xe34>
   11d08:	ldr	r0, [r3]
   11d0c:	bl	14c38 <strspn@plt+0x3d34>
   11d10:	cmp	r0, #0
   11d14:	bne	11ce4 <strspn@plt+0xde0>
   11d18:	add	sp, sp, #8
   11d1c:	pop	{r4, r5, r6, pc}
   11d20:	andeq	r6, r2, ip, asr #2
   11d24:	andeq	r6, r2, r4, asr r1
   11d28:	andeq	r5, r1, r5, ror #19
   11d2c:	strdeq	r5, [r1], -r1
   11d30:	strdeq	r6, [r2], -r4
   11d34:	strdeq	r5, [r1], -r5	; <UNPREDICTABLE>
   11d38:	andeq	r6, r2, r8, asr #2
   11d3c:	push	{r4, r5, r6, r7, r8, lr}
   11d40:	subs	r6, r0, #0
   11d44:	popeq	{r4, r5, r6, r7, r8, pc}
   11d48:	mov	r0, #24
   11d4c:	mov	r5, r2
   11d50:	mov	r7, r1
   11d54:	bl	1487c <strspn@plt+0x3978>
   11d58:	mov	r4, r0
   11d5c:	mov	r0, r7
   11d60:	bl	14b18 <strspn@plt+0x3c14>
   11d64:	ldrd	r2, [r5, #96]	; 0x60
   11d68:	mov	r1, r4
   11d6c:	str	r0, [r4]
   11d70:	mov	r0, r6
   11d74:	strd	r2, [r4, #8]
   11d78:	ldrd	r2, [r5]
   11d7c:	strd	r2, [r4, #16]
   11d80:	bl	12a50 <strspn@plt+0x1b4c>
   11d84:	cmp	r0, #0
   11d88:	bne	11d90 <strspn@plt+0xe8c>
   11d8c:	bl	14b34 <strspn@plt+0x3c30>
   11d90:	cmp	r4, r0
   11d94:	popeq	{r4, r5, r6, r7, r8, pc}
   11d98:	mov	r0, r4
   11d9c:	pop	{r4, r5, r6, r7, r8, lr}
   11da0:	b	12bfc <strspn@plt+0x1cf8>
   11da4:	subs	r3, r0, #0
   11da8:	beq	11de0 <strspn@plt+0xedc>
   11dac:	push	{r4, r5, lr}
   11db0:	sub	sp, sp, #28
   11db4:	ldrd	r4, [r2, #96]	; 0x60
   11db8:	str	r1, [sp]
   11dbc:	mov	r1, sp
   11dc0:	ldrd	r2, [r2]
   11dc4:	strd	r4, [sp, #8]
   11dc8:	strd	r2, [sp, #16]
   11dcc:	bl	12378 <strspn@plt+0x1474>
   11dd0:	adds	r0, r0, #0
   11dd4:	movne	r0, #1
   11dd8:	add	sp, sp, #28
   11ddc:	pop	{r4, r5, pc}
   11de0:	mov	r0, r3
   11de4:	bx	lr
   11de8:	push	{r0, r1, r2, r4, r5, lr}
   11dec:	mov	r5, r0
   11df0:	bl	10e38 <__errno_location@plt>
   11df4:	mov	r4, r0
   11df8:	mov	r0, r5
   11dfc:	ldr	r3, [r4]
   11e00:	str	r3, [sp]
   11e04:	str	r3, [sp, #4]
   11e08:	mov	r3, #0
   11e0c:	str	r3, [r4]
   11e10:	bl	10cd0 <free@plt>
   11e14:	ldr	r3, [r4]
   11e18:	add	r2, sp, #8
   11e1c:	clz	r3, r3
   11e20:	lsr	r3, r3, #5
   11e24:	add	r3, r2, r3, lsl #2
   11e28:	ldr	r3, [r3, #-8]
   11e2c:	str	r3, [r4]
   11e30:	add	sp, sp, #12
   11e34:	pop	{r4, r5, pc}
   11e38:	ror	r0, r0, #3
   11e3c:	udiv	r3, r0, r1
   11e40:	mls	r0, r3, r1, r0
   11e44:	bx	lr
   11e48:	sub	r0, r1, r0
   11e4c:	clz	r0, r0
   11e50:	lsr	r0, r0, #5
   11e54:	bx	lr
   11e58:	ldrb	r3, [r1, #16]
   11e5c:	cmp	r3, #0
   11e60:	bne	11e8c <strspn@plt+0xf88>
   11e64:	vmov	s15, r0
   11e68:	vldr	s14, [r1, #8]
   11e6c:	vcvt.f32.u32	s13, s15
   11e70:	vdiv.f32	s15, s13, s14
   11e74:	vldr	s14, [pc, #140]	; 11f08 <strspn@plt+0x1004>
   11e78:	vcmpe.f32	s15, s14
   11e7c:	vmrs	APSR_nzcv, fpscr
   11e80:	bge	11ea0 <strspn@plt+0xf9c>
   11e84:	vcvt.u32.f32	s15, s15
   11e88:	vmov	r0, s15
   11e8c:	cmp	r0, #10
   11e90:	movcc	r0, #10
   11e94:	orr	r0, r0, #1
   11e98:	cmn	r0, #1
   11e9c:	bne	11ed4 <strspn@plt+0xfd0>
   11ea0:	mov	r0, #0
   11ea4:	bx	lr
   11ea8:	add	r2, r3, #1
   11eac:	add	r3, r3, #2
   11eb0:	add	r1, r1, r2, lsl #2
   11eb4:	udiv	r2, r0, r3
   11eb8:	cmp	r0, r1
   11ebc:	mls	r2, r3, r2, r0
   11ec0:	bls	11ee0 <strspn@plt+0xfdc>
   11ec4:	cmp	r2, #0
   11ec8:	bne	11ea8 <strspn@plt+0xfa4>
   11ecc:	add	r0, r0, #2
   11ed0:	b	11e98 <strspn@plt+0xf94>
   11ed4:	mov	r1, #9
   11ed8:	mov	r3, #3
   11edc:	b	11eb4 <strspn@plt+0xfb0>
   11ee0:	cmp	r2, #0
   11ee4:	beq	11ecc <strspn@plt+0xfc8>
   11ee8:	lsrs	r3, r0, #30
   11eec:	movne	r3, #1
   11ef0:	moveq	r3, #0
   11ef4:	tst	r0, #536870912	; 0x20000000
   11ef8:	bne	11ea0 <strspn@plt+0xf9c>
   11efc:	cmp	r3, #0
   11f00:	bxeq	lr
   11f04:	b	11ea0 <strspn@plt+0xf9c>
   11f08:	svcmi	0x00800000
   11f0c:	push	{r4, lr}
   11f10:	mov	r4, r0
   11f14:	mov	r0, r1
   11f18:	ldr	r1, [r4, #8]
   11f1c:	ldr	r3, [r4, #24]
   11f20:	blx	r3
   11f24:	ldr	r3, [r4, #8]
   11f28:	cmp	r3, r0
   11f2c:	bhi	11f34 <strspn@plt+0x1030>
   11f30:	bl	10eec <abort@plt>
   11f34:	ldr	r3, [r4]
   11f38:	add	r0, r3, r0, lsl #3
   11f3c:	pop	{r4, pc}
   11f40:	push	{r4, r5, r6, r7, r8, lr}
   11f44:	mov	r8, r2
   11f48:	mov	r6, r1
   11f4c:	mov	r5, r0
   11f50:	mov	r7, r3
   11f54:	bl	11f0c <strspn@plt+0x1008>
   11f58:	str	r0, [r8]
   11f5c:	ldr	r1, [r0]
   11f60:	cmp	r1, #0
   11f64:	bne	11f74 <strspn@plt+0x1070>
   11f68:	mov	r2, #0
   11f6c:	mov	r0, r2
   11f70:	pop	{r4, r5, r6, r7, r8, pc}
   11f74:	cmp	r1, r6
   11f78:	mov	r4, r0
   11f7c:	beq	11f94 <strspn@plt+0x1090>
   11f80:	mov	r0, r6
   11f84:	ldr	r3, [r5, #28]
   11f88:	blx	r3
   11f8c:	cmp	r0, #0
   11f90:	beq	11fe8 <strspn@plt+0x10e4>
   11f94:	cmp	r7, #0
   11f98:	ldr	r2, [r4]
   11f9c:	beq	11f6c <strspn@plt+0x1068>
   11fa0:	ldr	r3, [r4, #4]
   11fa4:	cmp	r3, #0
   11fa8:	streq	r3, [r4]
   11fac:	beq	11f6c <strspn@plt+0x1068>
   11fb0:	ldm	r3, {r0, r1}
   11fb4:	stm	r4, {r0, r1}
   11fb8:	mov	r1, #0
   11fbc:	str	r1, [r3]
   11fc0:	ldr	r1, [r5, #36]	; 0x24
   11fc4:	str	r1, [r3, #4]
   11fc8:	str	r3, [r5, #36]	; 0x24
   11fcc:	b	11f6c <strspn@plt+0x1068>
   11fd0:	mov	r0, r6
   11fd4:	ldr	r3, [r5, #28]
   11fd8:	blx	r3
   11fdc:	cmp	r0, #0
   11fe0:	bne	12000 <strspn@plt+0x10fc>
   11fe4:	ldr	r4, [r4, #4]
   11fe8:	ldr	r3, [r4, #4]
   11fec:	cmp	r3, #0
   11ff0:	beq	11f68 <strspn@plt+0x1064>
   11ff4:	ldr	r1, [r3]
   11ff8:	cmp	r1, r6
   11ffc:	bne	11fd0 <strspn@plt+0x10cc>
   12000:	ldr	r3, [r4, #4]
   12004:	cmp	r7, #0
   12008:	ldr	r2, [r3]
   1200c:	beq	11f6c <strspn@plt+0x1068>
   12010:	ldr	r1, [r3, #4]
   12014:	str	r1, [r4, #4]
   12018:	b	11fb8 <strspn@plt+0x10b4>
   1201c:	ldr	r2, [pc, #164]	; 120c8 <strspn@plt+0x11c4>
   12020:	ldr	r3, [r0]
   12024:	cmp	r3, r2
   12028:	beq	120b0 <strspn@plt+0x11ac>
   1202c:	vldr	s13, [pc, #132]	; 120b8 <strspn@plt+0x11b4>
   12030:	vldr	s14, [r3, #8]
   12034:	vcmpe.f32	s14, s13
   12038:	vmrs	APSR_nzcv, fpscr
   1203c:	ble	120a4 <strspn@plt+0x11a0>
   12040:	vldr	s15, [pc, #116]	; 120bc <strspn@plt+0x11b8>
   12044:	vcmpe.f32	s14, s15
   12048:	vmrs	APSR_nzcv, fpscr
   1204c:	bpl	120a4 <strspn@plt+0x11a0>
   12050:	vldr	s15, [pc, #104]	; 120c0 <strspn@plt+0x11bc>
   12054:	vldr	s12, [r3, #12]
   12058:	vcmpe.f32	s12, s15
   1205c:	vmrs	APSR_nzcv, fpscr
   12060:	ble	120a4 <strspn@plt+0x11a0>
   12064:	vldr	s15, [r3]
   12068:	vcmpe.f32	s15, #0.0
   1206c:	vmrs	APSR_nzcv, fpscr
   12070:	blt	120a4 <strspn@plt+0x11a0>
   12074:	vadd.f32	s15, s15, s13
   12078:	vldr	s13, [r3, #4]
   1207c:	vcmpe.f32	s15, s13
   12080:	vmrs	APSR_nzcv, fpscr
   12084:	bpl	120a4 <strspn@plt+0x11a0>
   12088:	vldr	s12, [pc, #52]	; 120c4 <strspn@plt+0x11c0>
   1208c:	vcmpe.f32	s13, s12
   12090:	vmrs	APSR_nzcv, fpscr
   12094:	bhi	120a4 <strspn@plt+0x11a0>
   12098:	vcmpe.f32	s14, s15
   1209c:	vmrs	APSR_nzcv, fpscr
   120a0:	bgt	120b0 <strspn@plt+0x11ac>
   120a4:	str	r2, [r0]
   120a8:	mov	r0, #0
   120ac:	bx	lr
   120b0:	mov	r0, #1
   120b4:	bx	lr
   120b8:	stclcc	12, cr12, [ip, #820]	; 0x334
   120bc:	svccc	0x00666666
   120c0:	svccc	0x008ccccd
   120c4:	svccc	0x00800000
   120c8:	strdeq	r5, [r1], -r8
   120cc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   120d0:	mov	r5, r0
   120d4:	mov	r7, r1
   120d8:	mov	r8, r2
   120dc:	mov	r9, #0
   120e0:	ldr	r4, [r1]
   120e4:	add	r4, r4, #8
   120e8:	ldr	r2, [r7, #4]
   120ec:	sub	r3, r4, #8
   120f0:	cmp	r2, r3
   120f4:	bhi	12104 <strspn@plt+0x1200>
   120f8:	mov	r8, #1
   120fc:	mov	r0, r8
   12100:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12104:	ldr	r3, [r4, #-8]
   12108:	cmp	r3, #0
   1210c:	ldrne	r6, [r4, #-4]
   12110:	bne	1216c <strspn@plt+0x1268>
   12114:	add	r4, r4, #8
   12118:	b	120e8 <strspn@plt+0x11e4>
   1211c:	ldr	sl, [r6]
   12120:	mov	r0, r5
   12124:	mov	r1, sl
   12128:	bl	11f0c <strspn@plt+0x1008>
   1212c:	ldr	r2, [r0]
   12130:	ldr	r1, [r6, #4]
   12134:	cmp	r2, #0
   12138:	ldrne	r3, [r0, #4]
   1213c:	strne	r3, [r6, #4]
   12140:	strne	r6, [r0, #4]
   12144:	bne	12168 <strspn@plt+0x1264>
   12148:	ldr	r3, [r5, #12]
   1214c:	str	sl, [r0]
   12150:	add	r3, r3, #1
   12154:	str	r3, [r5, #12]
   12158:	str	r2, [r6]
   1215c:	ldr	r3, [r5, #36]	; 0x24
   12160:	str	r3, [r6, #4]
   12164:	str	r6, [r5, #36]	; 0x24
   12168:	mov	r6, r1
   1216c:	cmp	r6, #0
   12170:	bne	1211c <strspn@plt+0x1218>
   12174:	cmp	r8, #0
   12178:	str	r6, [r4, #-4]
   1217c:	ldr	sl, [r4, #-8]
   12180:	bne	12114 <strspn@plt+0x1210>
   12184:	mov	r1, sl
   12188:	mov	r0, r5
   1218c:	bl	11f0c <strspn@plt+0x1008>
   12190:	ldr	r3, [r0]
   12194:	mov	r6, r0
   12198:	cmp	r3, #0
   1219c:	beq	121e8 <strspn@plt+0x12e4>
   121a0:	ldr	r0, [r5, #36]	; 0x24
   121a4:	cmp	r0, #0
   121a8:	ldrne	r3, [r0, #4]
   121ac:	strne	r3, [r5, #36]	; 0x24
   121b0:	bne	121c4 <strspn@plt+0x12c0>
   121b4:	mov	r0, #8
   121b8:	bl	14bc8 <strspn@plt+0x3cc4>
   121bc:	cmp	r0, #0
   121c0:	beq	120fc <strspn@plt+0x11f8>
   121c4:	ldr	r3, [r6, #4]
   121c8:	str	sl, [r0]
   121cc:	str	r3, [r0, #4]
   121d0:	str	r0, [r6, #4]
   121d4:	ldr	r3, [r7, #12]
   121d8:	str	r9, [r4, #-8]
   121dc:	sub	r3, r3, #1
   121e0:	str	r3, [r7, #12]
   121e4:	b	12114 <strspn@plt+0x1210>
   121e8:	ldr	r3, [r5, #12]
   121ec:	str	sl, [r0]
   121f0:	add	r3, r3, #1
   121f4:	str	r3, [r5, #12]
   121f8:	b	121d4 <strspn@plt+0x12d0>
   121fc:	ldr	r0, [r0, #8]
   12200:	bx	lr
   12204:	ldr	r0, [r0, #12]
   12208:	bx	lr
   1220c:	ldr	r0, [r0, #16]
   12210:	bx	lr
   12214:	ldm	r0, {r3, ip}
   12218:	mov	r0, #0
   1221c:	cmp	ip, r3
   12220:	bxls	lr
   12224:	ldr	r2, [r3]
   12228:	cmp	r2, #0
   1222c:	beq	12254 <strspn@plt+0x1350>
   12230:	mov	r1, r3
   12234:	mov	r2, #1
   12238:	b	12240 <strspn@plt+0x133c>
   1223c:	add	r2, r2, #1
   12240:	ldr	r1, [r1, #4]
   12244:	cmp	r1, #0
   12248:	bne	1223c <strspn@plt+0x1338>
   1224c:	cmp	r0, r2
   12250:	movcc	r0, r2
   12254:	add	r3, r3, #8
   12258:	b	1221c <strspn@plt+0x1318>
   1225c:	push	{lr}		; (str lr, [sp, #-4]!)
   12260:	mov	r3, #0
   12264:	mov	r1, r3
   12268:	ldm	r0, {r2, lr}
   1226c:	cmp	lr, r2
   12270:	bhi	12294 <strspn@plt+0x1390>
   12274:	ldr	r2, [r0, #12]
   12278:	cmp	r2, r1
   1227c:	ldreq	r0, [r0, #16]
   12280:	subeq	r0, r0, r3
   12284:	clzeq	r0, r0
   12288:	lsreq	r0, r0, #5
   1228c:	movne	r0, #0
   12290:	pop	{pc}		; (ldr pc, [sp], #4)
   12294:	ldr	ip, [r2]
   12298:	cmp	ip, #0
   1229c:	addne	r1, r1, #1
   122a0:	addne	r3, r3, #1
   122a4:	movne	ip, r2
   122a8:	bne	122b8 <strspn@plt+0x13b4>
   122ac:	add	r2, r2, #8
   122b0:	b	1226c <strspn@plt+0x1368>
   122b4:	add	r3, r3, #1
   122b8:	ldr	ip, [ip, #4]
   122bc:	cmp	ip, #0
   122c0:	bne	122b4 <strspn@plt+0x13b0>
   122c4:	b	122ac <strspn@plt+0x13a8>
   122c8:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   122cc:	mov	r6, r0
   122d0:	mov	r4, r1
   122d4:	bl	12214 <strspn@plt+0x1310>
   122d8:	ldr	r5, [r6, #8]
   122dc:	mov	r8, r0
   122e0:	mov	r1, #1
   122e4:	mov	r0, r4
   122e8:	ldr	r7, [r6, #12]
   122ec:	ldr	r2, [pc, #116]	; 12368 <strspn@plt+0x1464>
   122f0:	ldr	r3, [r6, #16]
   122f4:	bl	10e74 <__fprintf_chk@plt>
   122f8:	mov	r3, r5
   122fc:	ldr	r2, [pc, #104]	; 1236c <strspn@plt+0x1468>
   12300:	mov	r1, #1
   12304:	mov	r0, r4
   12308:	bl	10e74 <__fprintf_chk@plt>
   1230c:	vmov	s15, r7
   12310:	mov	r3, r7
   12314:	mov	r1, #1
   12318:	ldr	r2, [pc, #80]	; 12370 <strspn@plt+0x146c>
   1231c:	mov	r0, r4
   12320:	vcvt.f64.u32	d6, s15
   12324:	vldr	d7, [pc, #52]	; 12360 <strspn@plt+0x145c>
   12328:	vmul.f64	d6, d6, d7
   1232c:	vmov	s15, r5
   12330:	vcvt.f64.u32	d7, s15
   12334:	vdiv.f64	d5, d6, d7
   12338:	vstr	d5, [sp]
   1233c:	bl	10e74 <__fprintf_chk@plt>
   12340:	ldr	r2, [pc, #44]	; 12374 <strspn@plt+0x1470>
   12344:	mov	r3, r8
   12348:	mov	r1, #1
   1234c:	mov	r0, r4
   12350:	add	sp, sp, #8
   12354:	pop	{r4, r5, r6, r7, r8, lr}
   12358:	b	10e74 <__fprintf_chk@plt>
   1235c:	nop	{0}
   12360:	andeq	r0, r0, r0
   12364:	subsmi	r0, r9, r0
   12368:	andeq	r5, r1, ip, lsl #20
   1236c:	andeq	r5, r1, r4, lsr #20
   12370:	andeq	r5, r1, ip, lsr sl
   12374:	andeq	r5, r1, sp, asr sl
   12378:	push	{r4, r5, r6, lr}
   1237c:	mov	r6, r0
   12380:	mov	r5, r1
   12384:	bl	11f0c <strspn@plt+0x1008>
   12388:	ldr	r3, [r0]
   1238c:	cmp	r3, #0
   12390:	beq	123cc <strspn@plt+0x14c8>
   12394:	mov	r4, r0
   12398:	ldr	r1, [r4]
   1239c:	cmp	r1, r5
   123a0:	bne	123ac <strspn@plt+0x14a8>
   123a4:	ldr	r0, [r4]
   123a8:	pop	{r4, r5, r6, pc}
   123ac:	mov	r0, r5
   123b0:	ldr	r3, [r6, #28]
   123b4:	blx	r3
   123b8:	cmp	r0, #0
   123bc:	bne	123a4 <strspn@plt+0x14a0>
   123c0:	ldr	r4, [r4, #4]
   123c4:	cmp	r4, #0
   123c8:	bne	12398 <strspn@plt+0x1494>
   123cc:	mov	r0, #0
   123d0:	pop	{r4, r5, r6, pc}
   123d4:	ldr	r3, [r0, #16]
   123d8:	cmp	r3, #0
   123dc:	beq	1240c <strspn@plt+0x1508>
   123e0:	ldr	r3, [r0]
   123e4:	ldr	r2, [r0, #4]
   123e8:	cmp	r2, r3
   123ec:	bhi	123f8 <strspn@plt+0x14f4>
   123f0:	push	{r4, lr}
   123f4:	bl	10eec <abort@plt>
   123f8:	ldr	r0, [r3]
   123fc:	cmp	r0, #0
   12400:	bxne	lr
   12404:	add	r3, r3, #8
   12408:	b	123e8 <strspn@plt+0x14e4>
   1240c:	mov	r0, r3
   12410:	bx	lr
   12414:	push	{r4, r5, r6, lr}
   12418:	mov	r4, r0
   1241c:	mov	r5, r1
   12420:	bl	11f0c <strspn@plt+0x1008>
   12424:	mov	r2, r0
   12428:	mov	r3, r0
   1242c:	ldm	r3, {r1, r3}
   12430:	cmp	r1, r5
   12434:	bne	12448 <strspn@plt+0x1544>
   12438:	cmp	r3, #0
   1243c:	beq	12450 <strspn@plt+0x154c>
   12440:	ldr	r0, [r3]
   12444:	pop	{r4, r5, r6, pc}
   12448:	cmp	r3, #0
   1244c:	bne	1242c <strspn@plt+0x1528>
   12450:	ldr	r3, [r4, #4]
   12454:	add	r2, r2, #8
   12458:	cmp	r3, r2
   1245c:	bhi	12468 <strspn@plt+0x1564>
   12460:	mov	r0, #0
   12464:	pop	{r4, r5, r6, pc}
   12468:	ldr	r0, [r2]
   1246c:	cmp	r0, #0
   12470:	beq	12454 <strspn@plt+0x1550>
   12474:	pop	{r4, r5, r6, pc}
   12478:	ldr	ip, [r0]
   1247c:	mov	r3, #0
   12480:	push	{r4, r5, lr}
   12484:	ldr	lr, [r0, #4]
   12488:	cmp	lr, ip
   1248c:	bhi	12498 <strspn@plt+0x1594>
   12490:	mov	r0, r3
   12494:	pop	{r4, r5, pc}
   12498:	ldr	lr, [ip]
   1249c:	cmp	lr, #0
   124a0:	beq	124cc <strspn@plt+0x15c8>
   124a4:	add	r4, r1, r3, lsl #2
   124a8:	mov	lr, ip
   124ac:	cmp	r2, r3
   124b0:	bls	12490 <strspn@plt+0x158c>
   124b4:	ldr	r5, [lr]
   124b8:	add	r3, r3, #1
   124bc:	str	r5, [r4], #4
   124c0:	ldr	lr, [lr, #4]
   124c4:	cmp	lr, #0
   124c8:	bne	124ac <strspn@plt+0x15a8>
   124cc:	add	ip, ip, #8
   124d0:	b	12484 <strspn@plt+0x1580>
   124d4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   124d8:	mov	r7, r0
   124dc:	mov	r8, r1
   124e0:	mov	r9, r2
   124e4:	mov	r6, #0
   124e8:	ldr	r4, [r0]
   124ec:	ldr	r3, [r7, #4]
   124f0:	cmp	r3, r4
   124f4:	bhi	12500 <strspn@plt+0x15fc>
   124f8:	mov	r0, r6
   124fc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12500:	ldr	r3, [r4]
   12504:	cmp	r3, #0
   12508:	beq	12534 <strspn@plt+0x1630>
   1250c:	mov	r5, r4
   12510:	mov	r1, r9
   12514:	ldr	r0, [r5]
   12518:	blx	r8
   1251c:	cmp	r0, #0
   12520:	beq	124f8 <strspn@plt+0x15f4>
   12524:	ldr	r5, [r5, #4]
   12528:	add	r6, r6, #1
   1252c:	cmp	r5, #0
   12530:	bne	12510 <strspn@plt+0x160c>
   12534:	add	r4, r4, #8
   12538:	b	124ec <strspn@plt+0x15e8>
   1253c:	sub	r2, r0, #1
   12540:	mov	r0, #0
   12544:	ldrb	r3, [r2, #1]!
   12548:	cmp	r3, #0
   1254c:	bxeq	lr
   12550:	rsb	r0, r0, r0, lsl #5
   12554:	add	r0, r0, r3
   12558:	udiv	r3, r0, r1
   1255c:	mls	r0, r1, r3, r0
   12560:	b	12544 <strspn@plt+0x1640>
   12564:	push	{lr}		; (str lr, [sp, #-4]!)
   12568:	mov	ip, r0
   1256c:	ldr	lr, [pc, #16]	; 12584 <strspn@plt+0x1680>
   12570:	ldm	lr!, {r0, r1, r2, r3}
   12574:	stmia	ip!, {r0, r1, r2, r3}
   12578:	ldr	r3, [lr]
   1257c:	str	r3, [ip]
   12580:	pop	{pc}		; (ldr pc, [sp], #4)
   12584:	strdeq	r5, [r1], -r8
   12588:	cmp	r2, #0
   1258c:	push	{r4, r5, r6, r7, r8, lr}
   12590:	mov	r8, r0
   12594:	mov	r0, #40	; 0x28
   12598:	mov	r5, r1
   1259c:	ldr	r7, [pc, #164]	; 12648 <strspn@plt+0x1744>
   125a0:	movne	r7, r2
   125a4:	cmp	r3, #0
   125a8:	ldr	r6, [pc, #156]	; 1264c <strspn@plt+0x1748>
   125ac:	movne	r6, r3
   125b0:	bl	14bc8 <strspn@plt+0x3cc4>
   125b4:	subs	r4, r0, #0
   125b8:	beq	12630 <strspn@plt+0x172c>
   125bc:	ldr	r3, [pc, #140]	; 12650 <strspn@plt+0x174c>
   125c0:	cmp	r5, #0
   125c4:	mov	r0, r4
   125c8:	moveq	r5, r3
   125cc:	str	r5, [r0, #20]!
   125d0:	bl	1201c <strspn@plt+0x1118>
   125d4:	cmp	r0, #0
   125d8:	beq	12638 <strspn@plt+0x1734>
   125dc:	mov	r1, r5
   125e0:	mov	r0, r8
   125e4:	bl	11e58 <strspn@plt+0xf54>
   125e8:	cmp	r0, #0
   125ec:	str	r0, [r4, #8]
   125f0:	beq	12638 <strspn@plt+0x1734>
   125f4:	mov	r1, #8
   125f8:	bl	14b74 <strspn@plt+0x3c70>
   125fc:	cmp	r0, #0
   12600:	str	r0, [r4]
   12604:	beq	12638 <strspn@plt+0x1734>
   12608:	ldr	r3, [r4, #8]
   1260c:	str	r7, [r4, #24]
   12610:	ldr	r2, [sp, #24]
   12614:	str	r6, [r4, #28]
   12618:	add	r0, r0, r3, lsl #3
   1261c:	mov	r3, #0
   12620:	str	r0, [r4, #4]
   12624:	str	r3, [r4, #12]
   12628:	str	r3, [r4, #16]
   1262c:	strd	r2, [r4, #32]
   12630:	mov	r0, r4
   12634:	pop	{r4, r5, r6, r7, r8, pc}
   12638:	mov	r0, r4
   1263c:	mov	r4, #0
   12640:	bl	11de8 <strspn@plt+0xee4>
   12644:	b	12630 <strspn@plt+0x172c>
   12648:	andeq	r1, r1, r8, lsr lr
   1264c:	andeq	r1, r1, r8, asr #28
   12650:	strdeq	r5, [r1], -r8
   12654:	push	{r4, r5, r6, r7, r8, lr}
   12658:	mov	r5, r0
   1265c:	mov	r7, #0
   12660:	ldr	r4, [r0]
   12664:	add	r4, r4, #8
   12668:	ldr	r2, [r5, #4]
   1266c:	sub	r3, r4, #8
   12670:	cmp	r2, r3
   12674:	bhi	12688 <strspn@plt+0x1784>
   12678:	mov	r3, #0
   1267c:	str	r3, [r5, #12]
   12680:	str	r3, [r5, #16]
   12684:	pop	{r4, r5, r6, r7, r8, pc}
   12688:	ldr	r3, [r4, #-8]
   1268c:	cmp	r3, #0
   12690:	ldrne	r6, [r4, #-4]
   12694:	bne	126c8 <strspn@plt+0x17c4>
   12698:	add	r4, r4, #8
   1269c:	b	12668 <strspn@plt+0x1764>
   126a0:	cmp	r3, #0
   126a4:	beq	126b0 <strspn@plt+0x17ac>
   126a8:	ldr	r0, [r6]
   126ac:	blx	r3
   126b0:	ldr	r3, [r6, #4]
   126b4:	ldr	r2, [r5, #36]	; 0x24
   126b8:	str	r7, [r6]
   126bc:	str	r2, [r6, #4]
   126c0:	str	r6, [r5, #36]	; 0x24
   126c4:	mov	r6, r3
   126c8:	cmp	r6, #0
   126cc:	ldr	r3, [r5, #32]
   126d0:	bne	126a0 <strspn@plt+0x179c>
   126d4:	cmp	r3, #0
   126d8:	beq	126e4 <strspn@plt+0x17e0>
   126dc:	ldr	r0, [r4, #-8]
   126e0:	blx	r3
   126e4:	str	r7, [r4, #-8]
   126e8:	str	r7, [r4, #-4]
   126ec:	b	12698 <strspn@plt+0x1794>
   126f0:	ldr	r3, [r0, #32]
   126f4:	push	{r4, r5, r6, lr}
   126f8:	mov	r4, r0
   126fc:	cmp	r3, #0
   12700:	bne	12734 <strspn@plt+0x1830>
   12704:	ldr	r5, [r4]
   12708:	ldr	r3, [r4, #4]
   1270c:	cmp	r3, r5
   12710:	bhi	12784 <strspn@plt+0x1880>
   12714:	ldr	r0, [r4, #36]	; 0x24
   12718:	cmp	r0, #0
   1271c:	bne	127a4 <strspn@plt+0x18a0>
   12720:	ldr	r0, [r4]
   12724:	bl	11de8 <strspn@plt+0xee4>
   12728:	mov	r0, r4
   1272c:	pop	{r4, r5, r6, lr}
   12730:	b	11de8 <strspn@plt+0xee4>
   12734:	ldr	r3, [r0, #16]
   12738:	cmp	r3, #0
   1273c:	ldrne	r5, [r0]
   12740:	beq	12704 <strspn@plt+0x1800>
   12744:	ldr	r3, [r4, #4]
   12748:	cmp	r3, r5
   1274c:	bls	12704 <strspn@plt+0x1800>
   12750:	ldr	r3, [r5]
   12754:	cmp	r3, #0
   12758:	bne	12764 <strspn@plt+0x1860>
   1275c:	add	r5, r5, #8
   12760:	b	12744 <strspn@plt+0x1840>
   12764:	mov	r6, r5
   12768:	ldr	r0, [r6]
   1276c:	ldr	r3, [r4, #32]
   12770:	blx	r3
   12774:	ldr	r6, [r6, #4]
   12778:	cmp	r6, #0
   1277c:	bne	12768 <strspn@plt+0x1864>
   12780:	b	1275c <strspn@plt+0x1858>
   12784:	ldr	r0, [r5, #4]
   12788:	cmp	r0, #0
   1278c:	addeq	r5, r5, #8
   12790:	beq	12708 <strspn@plt+0x1804>
   12794:	ldr	r6, [r0, #4]
   12798:	bl	11de8 <strspn@plt+0xee4>
   1279c:	mov	r0, r6
   127a0:	b	12788 <strspn@plt+0x1884>
   127a4:	ldr	r5, [r0, #4]
   127a8:	bl	11de8 <strspn@plt+0xee4>
   127ac:	mov	r0, r5
   127b0:	b	12718 <strspn@plt+0x1814>
   127b4:	push	{r4, r5, lr}
   127b8:	mov	r4, r0
   127bc:	sub	sp, sp, #44	; 0x2c
   127c0:	mov	r0, r1
   127c4:	ldr	r1, [r4, #20]
   127c8:	bl	11e58 <strspn@plt+0xf54>
   127cc:	subs	r5, r0, #0
   127d0:	bne	127e4 <strspn@plt+0x18e0>
   127d4:	mov	r5, #0
   127d8:	mov	r0, r5
   127dc:	add	sp, sp, #44	; 0x2c
   127e0:	pop	{r4, r5, pc}
   127e4:	ldr	r3, [r4, #8]
   127e8:	cmp	r3, r5
   127ec:	beq	128cc <strspn@plt+0x19c8>
   127f0:	mov	r1, #8
   127f4:	bl	14b74 <strspn@plt+0x3c70>
   127f8:	cmp	r0, #0
   127fc:	str	r0, [sp]
   12800:	beq	127d4 <strspn@plt+0x18d0>
   12804:	ldr	r3, [r4, #20]
   12808:	mov	r2, #0
   1280c:	add	r0, r0, r5, lsl #3
   12810:	mov	r1, r4
   12814:	stmib	sp, {r0, r5}
   12818:	mov	r0, sp
   1281c:	str	r2, [sp, #12]
   12820:	strd	r2, [sp, #16]
   12824:	ldr	r3, [r4, #24]
   12828:	str	r3, [sp, #24]
   1282c:	ldr	r3, [r4, #28]
   12830:	str	r3, [sp, #28]
   12834:	ldr	r3, [r4, #32]
   12838:	str	r3, [sp, #32]
   1283c:	ldr	r3, [r4, #36]	; 0x24
   12840:	str	r3, [sp, #36]	; 0x24
   12844:	bl	120cc <strspn@plt+0x11c8>
   12848:	subs	r5, r0, #0
   1284c:	beq	12884 <strspn@plt+0x1980>
   12850:	ldr	r0, [r4]
   12854:	bl	11de8 <strspn@plt+0xee4>
   12858:	ldr	r3, [sp]
   1285c:	str	r3, [r4]
   12860:	ldr	r3, [sp, #4]
   12864:	str	r3, [r4, #4]
   12868:	ldr	r3, [sp, #8]
   1286c:	str	r3, [r4, #8]
   12870:	ldr	r3, [sp, #12]
   12874:	str	r3, [r4, #12]
   12878:	ldr	r3, [sp, #36]	; 0x24
   1287c:	str	r3, [r4, #36]	; 0x24
   12880:	b	127d8 <strspn@plt+0x18d4>
   12884:	ldr	r3, [sp, #36]	; 0x24
   12888:	mov	r2, #1
   1288c:	mov	r1, sp
   12890:	mov	r0, r4
   12894:	str	r3, [r4, #36]	; 0x24
   12898:	bl	120cc <strspn@plt+0x11c8>
   1289c:	cmp	r0, #0
   128a0:	bne	128a8 <strspn@plt+0x19a4>
   128a4:	bl	10eec <abort@plt>
   128a8:	mov	r2, r5
   128ac:	mov	r1, sp
   128b0:	mov	r0, r4
   128b4:	bl	120cc <strspn@plt+0x11c8>
   128b8:	cmp	r0, #0
   128bc:	beq	128a4 <strspn@plt+0x19a0>
   128c0:	ldr	r0, [sp]
   128c4:	bl	11de8 <strspn@plt+0xee4>
   128c8:	b	127d8 <strspn@plt+0x18d4>
   128cc:	mov	r5, #1
   128d0:	b	127d8 <strspn@plt+0x18d4>
   128d4:	push	{r0, r1, r4, r5, r6, lr}
   128d8:	subs	r6, r1, #0
   128dc:	bne	128e4 <strspn@plt+0x19e0>
   128e0:	bl	10eec <abort@plt>
   128e4:	mov	r5, r2
   128e8:	mov	r3, #0
   128ec:	add	r2, sp, #4
   128f0:	mov	r4, r0
   128f4:	bl	11f40 <strspn@plt+0x103c>
   128f8:	cmp	r0, #0
   128fc:	beq	12914 <strspn@plt+0x1a10>
   12900:	cmp	r5, #0
   12904:	strne	r0, [r5]
   12908:	movne	r0, #0
   1290c:	moveq	r0, r5
   12910:	b	12994 <strspn@plt+0x1a90>
   12914:	vldr	s15, [r4, #12]
   12918:	ldr	r3, [r4, #20]
   1291c:	vcvt.f32.u32	s14, s15
   12920:	vldr	s15, [r4, #8]
   12924:	vldr	s13, [r3, #8]
   12928:	vcvt.f32.u32	s15, s15
   1292c:	vmul.f32	s15, s15, s13
   12930:	vcmpe.f32	s14, s15
   12934:	vmrs	APSR_nzcv, fpscr
   12938:	ble	129d0 <strspn@plt+0x1acc>
   1293c:	add	r0, r4, #20
   12940:	bl	1201c <strspn@plt+0x1118>
   12944:	vldr	s15, [r4, #8]
   12948:	vldr	s14, [r4, #12]
   1294c:	ldr	r3, [r4, #20]
   12950:	vcvt.f32.u32	s15, s15
   12954:	vcvt.f32.u32	s14, s14
   12958:	vldr	s13, [r3, #8]
   1295c:	vmul.f32	s12, s13, s15
   12960:	vcmpe.f32	s14, s12
   12964:	vmrs	APSR_nzcv, fpscr
   12968:	ble	129d0 <strspn@plt+0x1acc>
   1296c:	vldr	s14, [r3, #12]
   12970:	ldrb	r3, [r3, #16]
   12974:	vmul.f32	s15, s15, s14
   12978:	vldr	s14, [pc, #204]	; 12a4c <strspn@plt+0x1b48>
   1297c:	cmp	r3, #0
   12980:	vmuleq.f32	s15, s15, s13
   12984:	vcmpe.f32	s15, s14
   12988:	vmrs	APSR_nzcv, fpscr
   1298c:	blt	1299c <strspn@plt+0x1a98>
   12990:	mvn	r0, #0
   12994:	add	sp, sp, #8
   12998:	pop	{r4, r5, r6, pc}
   1299c:	vcvt.u32.f32	s15, s15
   129a0:	mov	r0, r4
   129a4:	vmov	r1, s15
   129a8:	bl	127b4 <strspn@plt+0x18b0>
   129ac:	cmp	r0, #0
   129b0:	beq	12990 <strspn@plt+0x1a8c>
   129b4:	mov	r3, #0
   129b8:	add	r2, sp, #4
   129bc:	mov	r1, r6
   129c0:	mov	r0, r4
   129c4:	bl	11f40 <strspn@plt+0x103c>
   129c8:	cmp	r0, #0
   129cc:	bne	128e0 <strspn@plt+0x19dc>
   129d0:	ldr	r3, [sp, #4]
   129d4:	ldr	r2, [r3]
   129d8:	cmp	r2, #0
   129dc:	beq	12a2c <strspn@plt+0x1b28>
   129e0:	ldr	r0, [r4, #36]	; 0x24
   129e4:	cmp	r0, #0
   129e8:	ldrne	r3, [r0, #4]
   129ec:	strne	r3, [r4, #36]	; 0x24
   129f0:	bne	12a04 <strspn@plt+0x1b00>
   129f4:	mov	r0, #8
   129f8:	bl	14bc8 <strspn@plt+0x3cc4>
   129fc:	cmp	r0, #0
   12a00:	beq	12990 <strspn@plt+0x1a8c>
   12a04:	ldr	r3, [sp, #4]
   12a08:	ldr	r2, [r3, #4]
   12a0c:	str	r6, [r0]
   12a10:	str	r2, [r0, #4]
   12a14:	str	r0, [r3, #4]
   12a18:	ldr	r3, [r4, #16]
   12a1c:	add	r3, r3, #1
   12a20:	str	r3, [r4, #16]
   12a24:	mov	r0, #1
   12a28:	b	12994 <strspn@plt+0x1a90>
   12a2c:	str	r6, [r3]
   12a30:	ldr	r3, [r4, #16]
   12a34:	add	r3, r3, #1
   12a38:	str	r3, [r4, #16]
   12a3c:	ldr	r3, [r4, #12]
   12a40:	add	r3, r3, #1
   12a44:	str	r3, [r4, #12]
   12a48:	b	12a24 <strspn@plt+0x1b20>
   12a4c:	svcmi	0x00800000
   12a50:	push	{r0, r1, r4, lr}
   12a54:	add	r2, sp, #4
   12a58:	mov	r4, r1
   12a5c:	bl	128d4 <strspn@plt+0x19d0>
   12a60:	cmn	r0, #1
   12a64:	moveq	r4, #0
   12a68:	beq	12a74 <strspn@plt+0x1b70>
   12a6c:	cmp	r0, #0
   12a70:	ldreq	r4, [sp, #4]
   12a74:	mov	r0, r4
   12a78:	add	sp, sp, #8
   12a7c:	pop	{r4, pc}
   12a80:	push	{r0, r1, r4, r5, r6, lr}
   12a84:	mov	r3, #1
   12a88:	add	r2, sp, #4
   12a8c:	mov	r4, r0
   12a90:	bl	11f40 <strspn@plt+0x103c>
   12a94:	subs	r5, r0, #0
   12a98:	beq	12b50 <strspn@plt+0x1c4c>
   12a9c:	ldr	r3, [r4, #16]
   12aa0:	sub	r3, r3, #1
   12aa4:	str	r3, [r4, #16]
   12aa8:	ldr	r3, [sp, #4]
   12aac:	ldr	r3, [r3]
   12ab0:	cmp	r3, #0
   12ab4:	bne	12b50 <strspn@plt+0x1c4c>
   12ab8:	vldr	s14, [r4, #8]
   12abc:	ldr	r3, [r4, #12]
   12ac0:	vcvt.f32.u32	s14, s14
   12ac4:	sub	r3, r3, #1
   12ac8:	vmov	s15, r3
   12acc:	str	r3, [r4, #12]
   12ad0:	ldr	r3, [r4, #20]
   12ad4:	vldr	s13, [r3]
   12ad8:	vcvt.f32.u32	s15, s15
   12adc:	vmul.f32	s14, s14, s13
   12ae0:	vcmpe.f32	s15, s14
   12ae4:	vmrs	APSR_nzcv, fpscr
   12ae8:	bpl	12b50 <strspn@plt+0x1c4c>
   12aec:	add	r0, r4, #20
   12af0:	bl	1201c <strspn@plt+0x1118>
   12af4:	vldr	s15, [r4, #8]
   12af8:	vldr	s14, [r4, #12]
   12afc:	ldr	r3, [r4, #20]
   12b00:	vcvt.f32.u32	s15, s15
   12b04:	vcvt.f32.u32	s13, s14
   12b08:	vldr	s14, [r3]
   12b0c:	vmul.f32	s14, s15, s14
   12b10:	vcmpe.f32	s13, s14
   12b14:	vmrs	APSR_nzcv, fpscr
   12b18:	bpl	12b50 <strspn@plt+0x1c4c>
   12b1c:	ldrb	r2, [r3, #16]
   12b20:	mov	r0, r4
   12b24:	vldr	s14, [r3, #4]
   12b28:	cmp	r2, #0
   12b2c:	vmul.f32	s15, s15, s14
   12b30:	vldreq	s14, [r3, #8]
   12b34:	vmuleq.f32	s15, s15, s14
   12b38:	vcvt.u32.f32	s15, s15
   12b3c:	vmov	r1, s15
   12b40:	bl	127b4 <strspn@plt+0x18b0>
   12b44:	cmp	r0, #0
   12b48:	ldreq	r0, [r4, #36]	; 0x24
   12b4c:	beq	12b68 <strspn@plt+0x1c64>
   12b50:	mov	r0, r5
   12b54:	add	sp, sp, #8
   12b58:	pop	{r4, r5, r6, pc}
   12b5c:	ldr	r6, [r0, #4]
   12b60:	bl	11de8 <strspn@plt+0xee4>
   12b64:	mov	r0, r6
   12b68:	cmp	r0, #0
   12b6c:	bne	12b5c <strspn@plt+0x1c58>
   12b70:	str	r0, [r4, #36]	; 0x24
   12b74:	b	12b50 <strspn@plt+0x1c4c>
   12b78:	b	12a80 <strspn@plt+0x1b7c>
   12b7c:	push	{r4, r5, r6, lr}
   12b80:	mov	r4, r0
   12b84:	mov	r5, r1
   12b88:	ldr	r0, [r0]
   12b8c:	bl	14e38 <strspn@plt+0x3f34>
   12b90:	ldr	r1, [r4, #8]
   12b94:	mov	r2, r5
   12b98:	mov	r3, #0
   12b9c:	eor	r0, r0, r1
   12ba0:	ldr	r1, [r4, #12]
   12ba4:	bl	15018 <strspn@plt+0x4114>
   12ba8:	mov	r0, r2
   12bac:	pop	{r4, r5, r6, pc}
   12bb0:	push	{r4, r5, r6, lr}
   12bb4:	ldrd	r2, [r1, #8]
   12bb8:	ldrd	r4, [r0, #8]
   12bbc:	cmp	r5, r3
   12bc0:	cmpeq	r4, r2
   12bc4:	bne	12bf4 <strspn@plt+0x1cf0>
   12bc8:	ldrd	r4, [r0, #16]
   12bcc:	ldrd	r2, [r1, #16]
   12bd0:	cmp	r5, r3
   12bd4:	cmpeq	r4, r2
   12bd8:	bne	12bf4 <strspn@plt+0x1cf0>
   12bdc:	ldr	r0, [r0]
   12be0:	ldr	r1, [r1]
   12be4:	bl	10cac <strcmp@plt>
   12be8:	clz	r0, r0
   12bec:	lsr	r0, r0, #5
   12bf0:	pop	{r4, r5, r6, pc}
   12bf4:	mov	r0, #0
   12bf8:	pop	{r4, r5, r6, pc}
   12bfc:	push	{r4, lr}
   12c00:	mov	r4, r0
   12c04:	ldr	r0, [r0]
   12c08:	bl	11de8 <strspn@plt+0xee4>
   12c0c:	mov	r0, r4
   12c10:	pop	{r4, lr}
   12c14:	b	11de8 <strspn@plt+0xee4>
   12c18:	push	{r4, r5, r6, lr}
   12c1c:	subs	r4, r0, #0
   12c20:	bne	12c38 <strspn@plt+0x1d34>
   12c24:	ldr	r3, [pc, #124]	; 12ca8 <strspn@plt+0x1da4>
   12c28:	ldr	r0, [pc, #124]	; 12cac <strspn@plt+0x1da8>
   12c2c:	ldr	r1, [r3]
   12c30:	bl	10ed4 <fputs@plt>
   12c34:	bl	10eec <abort@plt>
   12c38:	mov	r1, #47	; 0x2f
   12c3c:	bl	10ea4 <strrchr@plt>
   12c40:	subs	r6, r0, #0
   12c44:	beq	12c94 <strspn@plt+0x1d90>
   12c48:	add	r5, r6, #1
   12c4c:	sub	r3, r5, r4
   12c50:	cmp	r3, #6
   12c54:	ble	12c94 <strspn@plt+0x1d90>
   12c58:	mov	r2, #7
   12c5c:	ldr	r1, [pc, #76]	; 12cb0 <strspn@plt+0x1dac>
   12c60:	sub	r0, r6, #6
   12c64:	bl	10ee0 <strncmp@plt>
   12c68:	cmp	r0, #0
   12c6c:	bne	12c94 <strspn@plt+0x1d90>
   12c70:	mov	r2, #3
   12c74:	ldr	r1, [pc, #56]	; 12cb4 <strspn@plt+0x1db0>
   12c78:	mov	r0, r5
   12c7c:	bl	10ee0 <strncmp@plt>
   12c80:	cmp	r0, #0
   12c84:	ldreq	r3, [pc, #44]	; 12cb8 <strspn@plt+0x1db4>
   12c88:	addeq	r4, r6, #4
   12c8c:	movne	r4, r5
   12c90:	streq	r4, [r3]
   12c94:	ldr	r3, [pc, #32]	; 12cbc <strspn@plt+0x1db8>
   12c98:	str	r4, [r3]
   12c9c:	ldr	r3, [pc, #28]	; 12cc0 <strspn@plt+0x1dbc>
   12ca0:	str	r4, [r3]
   12ca4:	pop	{r4, r5, r6, pc}
   12ca8:	andeq	r6, r2, r8, asr #2
   12cac:	andeq	r5, r1, r5, ror sl
   12cb0:	andeq	r5, r1, sp, lsr #21
   12cb4:			; <UNDEFINED> instruction: 0x00015ab5
   12cb8:	andeq	r6, r2, r8, lsr r1
   12cbc:	andeq	r6, r2, ip, asr r1
   12cc0:	andeq	r6, r2, ip, lsr r1
   12cc4:	push	{r4, lr}
   12cc8:	mov	r2, #48	; 0x30
   12ccc:	mov	r4, r1
   12cd0:	mov	r1, #0
   12cd4:	bl	10e50 <memset@plt>
   12cd8:	cmp	r4, #10
   12cdc:	bne	12ce4 <strspn@plt+0x1de0>
   12ce0:	bl	10eec <abort@plt>
   12ce4:	str	r4, [r0]
   12ce8:	pop	{r4, pc}
   12cec:	push	{r4, r5, r6, lr}
   12cf0:	mov	r2, #5
   12cf4:	mov	r6, r0
   12cf8:	mov	r5, r1
   12cfc:	mov	r1, r0
   12d00:	mov	r0, #0
   12d04:	bl	10d24 <dcgettext@plt>
   12d08:	cmp	r6, r0
   12d0c:	mov	r4, r0
   12d10:	bne	12d80 <strspn@plt+0x1e7c>
   12d14:	bl	14e88 <strspn@plt+0x3f84>
   12d18:	ldrb	r3, [r0]
   12d1c:	bic	r3, r3, #32
   12d20:	cmp	r3, #85	; 0x55
   12d24:	bne	12d88 <strspn@plt+0x1e84>
   12d28:	ldrb	r3, [r0, #1]
   12d2c:	bic	r3, r3, #32
   12d30:	cmp	r3, #84	; 0x54
   12d34:	bne	12df8 <strspn@plt+0x1ef4>
   12d38:	ldrb	r3, [r0, #2]
   12d3c:	bic	r3, r3, #32
   12d40:	cmp	r3, #70	; 0x46
   12d44:	bne	12df8 <strspn@plt+0x1ef4>
   12d48:	ldrb	r3, [r0, #3]
   12d4c:	cmp	r3, #45	; 0x2d
   12d50:	bne	12df8 <strspn@plt+0x1ef4>
   12d54:	ldrb	r3, [r0, #4]
   12d58:	cmp	r3, #56	; 0x38
   12d5c:	bne	12df8 <strspn@plt+0x1ef4>
   12d60:	ldrb	r3, [r0, #5]
   12d64:	cmp	r3, #0
   12d68:	bne	12df8 <strspn@plt+0x1ef4>
   12d6c:	ldrb	r2, [r4]
   12d70:	ldr	r3, [pc, #144]	; 12e08 <strspn@plt+0x1f04>
   12d74:	ldr	r4, [pc, #144]	; 12e0c <strspn@plt+0x1f08>
   12d78:	cmp	r2, #96	; 0x60
   12d7c:	movne	r4, r3
   12d80:	mov	r0, r4
   12d84:	pop	{r4, r5, r6, pc}
   12d88:	cmp	r3, #71	; 0x47
   12d8c:	bne	12df8 <strspn@plt+0x1ef4>
   12d90:	ldrb	r3, [r0, #1]
   12d94:	bic	r3, r3, #32
   12d98:	cmp	r3, #66	; 0x42
   12d9c:	bne	12df8 <strspn@plt+0x1ef4>
   12da0:	ldrb	r3, [r0, #2]
   12da4:	cmp	r3, #49	; 0x31
   12da8:	bne	12df8 <strspn@plt+0x1ef4>
   12dac:	ldrb	r3, [r0, #3]
   12db0:	cmp	r3, #56	; 0x38
   12db4:	bne	12df8 <strspn@plt+0x1ef4>
   12db8:	ldrb	r3, [r0, #4]
   12dbc:	cmp	r3, #48	; 0x30
   12dc0:	bne	12df8 <strspn@plt+0x1ef4>
   12dc4:	ldrb	r3, [r0, #5]
   12dc8:	cmp	r3, #51	; 0x33
   12dcc:	bne	12df8 <strspn@plt+0x1ef4>
   12dd0:	ldrb	r3, [r0, #6]
   12dd4:	cmp	r3, #48	; 0x30
   12dd8:	bne	12df8 <strspn@plt+0x1ef4>
   12ddc:	ldrb	r3, [r0, #7]
   12de0:	cmp	r3, #0
   12de4:	bne	12df8 <strspn@plt+0x1ef4>
   12de8:	ldrb	r2, [r4]
   12dec:	ldr	r3, [pc, #28]	; 12e10 <strspn@plt+0x1f0c>
   12df0:	ldr	r4, [pc, #28]	; 12e14 <strspn@plt+0x1f10>
   12df4:	b	12d78 <strspn@plt+0x1e74>
   12df8:	ldr	r4, [pc, #24]	; 12e18 <strspn@plt+0x1f14>
   12dfc:	cmp	r5, #9
   12e00:	ldr	r3, [pc, #20]	; 12e1c <strspn@plt+0x1f18>
   12e04:	b	12d7c <strspn@plt+0x1e78>
   12e08:	andeq	r5, r1, r2, lsl fp
   12e0c:	andeq	r5, r1, sp, lsl fp
   12e10:	andeq	r5, r1, r6, lsl fp
   12e14:	andeq	r5, r1, r9, lsl fp
   12e18:	andeq	r5, r1, r0, lsl fp
   12e1c:	andeq	r5, r1, r1, lsr #22
   12e20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12e24:	sub	sp, sp, #108	; 0x6c
   12e28:	mov	r8, r0
   12e2c:	mov	r5, r1
   12e30:	mov	r6, #0
   12e34:	str	r3, [sp, #40]	; 0x28
   12e38:	str	r2, [sp, #48]	; 0x30
   12e3c:	ldr	sl, [sp, #144]	; 0x90
   12e40:	bl	10d78 <__ctype_get_mb_cur_max@plt>
   12e44:	ldr	r3, [sp, #148]	; 0x94
   12e48:	str	r6, [sp, #24]
   12e4c:	str	r6, [sp, #32]
   12e50:	str	r6, [sp, #44]	; 0x2c
   12e54:	str	r6, [sp, #52]	; 0x34
   12e58:	ubfx	r7, r3, #1, #1
   12e5c:	mov	r3, #1
   12e60:	str	r6, [sp, #60]	; 0x3c
   12e64:	str	r3, [sp, #72]	; 0x48
   12e68:	str	r0, [sp, #76]	; 0x4c
   12e6c:	cmp	sl, #10
   12e70:	ldrls	pc, [pc, sl, lsl #2]
   12e74:	b	130b8 <strspn@plt+0x21b4>
   12e78:	andeq	r2, r1, r4, lsr #29
   12e7c:	ldrdeq	r3, [r1], -r0
   12e80:	andeq	r3, r1, r4, asr r0
   12e84:	andeq	r3, r1, ip, rrx
   12e88:	andeq	r3, r1, ip, lsr r0
   12e8c:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   12e90:	andeq	r2, r1, r4, ror pc
   12e94:	strheq	r3, [r1], -ip
   12e98:	andeq	r2, r1, r4, asr #31
   12e9c:	andeq	r2, r1, r4, asr #31
   12ea0:	andeq	r2, r1, r4, asr #31
   12ea4:	mov	r4, sl
   12ea8:	mov	r7, #0
   12eac:	mov	r9, r5
   12eb0:	mov	r3, #0
   12eb4:	str	r6, [sp, #68]	; 0x44
   12eb8:	str	r3, [sp, #28]
   12ebc:	ldr	r3, [sp, #40]	; 0x28
   12ec0:	cmn	r3, #1
   12ec4:	bne	13a64 <strspn@plt+0x2b60>
   12ec8:	ldr	r2, [sp, #28]
   12ecc:	ldr	r3, [sp, #48]	; 0x30
   12ed0:	ldrb	r3, [r3, r2]
   12ed4:	adds	r3, r3, #0
   12ed8:	movne	r3, #1
   12edc:	str	r3, [sp, #36]	; 0x24
   12ee0:	ldr	r3, [sp, #36]	; 0x24
   12ee4:	cmp	r3, #0
   12ee8:	bne	130f4 <strspn@plt+0x21f0>
   12eec:	sub	r3, sl, #2
   12ef0:	cmp	r4, #0
   12ef4:	clz	r3, r3
   12ef8:	movne	r2, #0
   12efc:	lsr	r3, r3, #5
   12f00:	andeq	r2, r3, r7
   12f04:	cmp	r2, #0
   12f08:	bne	132b8 <strspn@plt+0x23b4>
   12f0c:	eor	r7, r7, #1
   12f10:	ands	r3, r3, r7
   12f14:	beq	13adc <strspn@plt+0x2bd8>
   12f18:	ldr	r2, [sp, #68]	; 0x44
   12f1c:	cmp	r2, #0
   12f20:	beq	13aa4 <strspn@plt+0x2ba0>
   12f24:	ldr	r3, [sp, #72]	; 0x48
   12f28:	cmp	r3, #0
   12f2c:	beq	13a78 <strspn@plt+0x2b74>
   12f30:	ldr	r2, [sp, #48]	; 0x30
   12f34:	ldr	r3, [sp, #160]	; 0xa0
   12f38:	ldr	r1, [sp, #60]	; 0x3c
   12f3c:	str	r3, [sp, #16]
   12f40:	ldr	r3, [sp, #156]	; 0x9c
   12f44:	str	r3, [sp, #12]
   12f48:	ldr	r3, [sp, #152]	; 0x98
   12f4c:	str	r3, [sp, #8]
   12f50:	ldr	r3, [sp, #148]	; 0x94
   12f54:	str	r3, [sp, #4]
   12f58:	mov	r3, #5
   12f5c:	str	r3, [sp]
   12f60:	ldr	r3, [sp, #40]	; 0x28
   12f64:	mov	r0, r8
   12f68:	bl	12e20 <strspn@plt+0x1f1c>
   12f6c:	mov	r4, r0
   12f70:	b	13ad0 <strspn@plt+0x2bcc>
   12f74:	ldr	r3, [pc, #2948]	; 13b00 <strspn@plt+0x2bfc>
   12f78:	mov	r7, #1
   12f7c:	mov	r4, #0
   12f80:	mov	sl, #5
   12f84:	str	r7, [sp, #24]
   12f88:	str	r7, [sp, #32]
   12f8c:	str	r3, [sp, #44]	; 0x2c
   12f90:	b	12eac <strspn@plt+0x1fa8>
   12f94:	cmp	r7, #0
   12f98:	bne	130dc <strspn@plt+0x21d8>
   12f9c:	cmp	r5, #0
   12fa0:	mov	r4, #1
   12fa4:	movne	r3, #34	; 0x22
   12fa8:	strbne	r3, [r8]
   12fac:	mov	r3, #1
   12fb0:	str	r3, [sp, #24]
   12fb4:	str	r3, [sp, #32]
   12fb8:	ldr	r3, [pc, #2880]	; 13b00 <strspn@plt+0x2bfc>
   12fbc:	str	r3, [sp, #44]	; 0x2c
   12fc0:	b	12eac <strspn@plt+0x1fa8>
   12fc4:	cmp	sl, #10
   12fc8:	beq	12fec <strspn@plt+0x20e8>
   12fcc:	mov	r1, sl
   12fd0:	ldr	r0, [pc, #2860]	; 13b04 <strspn@plt+0x2c00>
   12fd4:	bl	12cec <strspn@plt+0x1de8>
   12fd8:	mov	r1, sl
   12fdc:	str	r0, [sp, #156]	; 0x9c
   12fe0:	ldr	r0, [pc, #2848]	; 13b08 <strspn@plt+0x2c04>
   12fe4:	bl	12cec <strspn@plt+0x1de8>
   12fe8:	str	r0, [sp, #160]	; 0xa0
   12fec:	cmp	r7, #0
   12ff0:	moveq	r4, r7
   12ff4:	beq	1300c <strspn@plt+0x2108>
   12ff8:	mov	r4, #0
   12ffc:	b	1301c <strspn@plt+0x2118>
   13000:	cmp	r5, r4
   13004:	strbhi	r3, [r8, r4]
   13008:	add	r4, r4, #1
   1300c:	ldr	r3, [sp, #156]	; 0x9c
   13010:	ldrb	r3, [r3, r4]
   13014:	cmp	r3, #0
   13018:	bne	13000 <strspn@plt+0x20fc>
   1301c:	ldr	r0, [sp, #160]	; 0xa0
   13020:	bl	10e2c <strlen@plt>
   13024:	ldr	r3, [sp, #160]	; 0xa0
   13028:	str	r0, [sp, #32]
   1302c:	str	r3, [sp, #44]	; 0x2c
   13030:	mov	r3, #1
   13034:	str	r3, [sp, #24]
   13038:	b	12eac <strspn@plt+0x1fa8>
   1303c:	mov	r3, #1
   13040:	cmp	r7, #0
   13044:	streq	r3, [sp, #24]
   13048:	beq	1308c <strspn@plt+0x2188>
   1304c:	str	r3, [sp, #32]
   13050:	b	13078 <strspn@plt+0x2174>
   13054:	cmp	r7, #0
   13058:	beq	1308c <strspn@plt+0x2188>
   1305c:	mov	r3, #1
   13060:	str	r3, [sp, #32]
   13064:	ldr	r3, [pc, #2716]	; 13b08 <strspn@plt+0x2c04>
   13068:	b	130ec <strspn@plt+0x21e8>
   1306c:	mov	r7, #1
   13070:	str	r7, [sp, #24]
   13074:	str	r7, [sp, #32]
   13078:	ldr	r3, [pc, #2696]	; 13b08 <strspn@plt+0x2c04>
   1307c:	mov	r4, #0
   13080:	str	r3, [sp, #44]	; 0x2c
   13084:	mov	sl, #2
   13088:	b	12eac <strspn@plt+0x1fa8>
   1308c:	cmp	r5, #0
   13090:	movne	r3, #39	; 0x27
   13094:	movne	r7, #0
   13098:	strbne	r3, [r8]
   1309c:	moveq	r7, r5
   130a0:	mov	r3, #1
   130a4:	mov	r4, #1
   130a8:	str	r3, [sp, #32]
   130ac:	ldr	r3, [pc, #2644]	; 13b08 <strspn@plt+0x2c04>
   130b0:	str	r3, [sp, #44]	; 0x2c
   130b4:	b	13084 <strspn@plt+0x2180>
   130b8:	bl	10eec <abort@plt>
   130bc:	mov	r3, #1
   130c0:	mov	r7, #0
   130c4:	str	r3, [sp, #24]
   130c8:	mov	r4, #0
   130cc:	b	12eac <strspn@plt+0x1fa8>
   130d0:	mov	r7, #1
   130d4:	str	sl, [sp, #32]
   130d8:	b	13078 <strspn@plt+0x2174>
   130dc:	mov	r3, #1
   130e0:	str	r7, [sp, #24]
   130e4:	str	r3, [sp, #32]
   130e8:	ldr	r3, [pc, #2576]	; 13b00 <strspn@plt+0x2bfc>
   130ec:	str	r3, [sp, #44]	; 0x2c
   130f0:	b	130c8 <strspn@plt+0x21c4>
   130f4:	ldr	fp, [sp, #24]
   130f8:	ldr	r3, [sp, #32]
   130fc:	cmp	sl, #2
   13100:	moveq	fp, #0
   13104:	andne	fp, fp, #1
   13108:	adds	r5, r3, #0
   1310c:	movne	r5, #1
   13110:	ands	r3, fp, r5
   13114:	str	r3, [sp, #64]	; 0x40
   13118:	beq	131e8 <strspn@plt+0x22e4>
   1311c:	ldr	r3, [sp, #28]
   13120:	ldr	r2, [sp, #32]
   13124:	cmp	r2, #1
   13128:	add	r6, r3, r2
   1312c:	mov	r3, r2
   13130:	ldr	r2, [sp, #40]	; 0x28
   13134:	movls	r3, #0
   13138:	movhi	r3, #1
   1313c:	cmn	r2, #1
   13140:	movne	r3, #0
   13144:	cmp	r3, #0
   13148:	beq	13158 <strspn@plt+0x2254>
   1314c:	ldr	r0, [sp, #48]	; 0x30
   13150:	bl	10e2c <strlen@plt>
   13154:	str	r0, [sp, #40]	; 0x28
   13158:	ldr	r3, [sp, #40]	; 0x28
   1315c:	cmp	r6, r3
   13160:	bhi	131e0 <strspn@plt+0x22dc>
   13164:	ldr	r0, [sp, #28]
   13168:	ldr	r2, [sp, #32]
   1316c:	ldr	r3, [sp, #48]	; 0x30
   13170:	ldr	r1, [sp, #44]	; 0x2c
   13174:	add	r0, r3, r0
   13178:	bl	10d0c <memcmp@plt>
   1317c:	cmp	r0, #0
   13180:	bne	131e0 <strspn@plt+0x22dc>
   13184:	cmp	r7, #0
   13188:	beq	131e8 <strspn@plt+0x22e4>
   1318c:	str	r7, [sp, #24]
   13190:	ldr	r3, [sp, #24]
   13194:	mov	r1, r9
   13198:	ldr	r2, [sp, #48]	; 0x30
   1319c:	cmp	sl, #2
   131a0:	movne	r3, #0
   131a4:	andeq	r3, r3, #1
   131a8:	cmp	r3, #0
   131ac:	ldr	r3, [sp, #160]	; 0xa0
   131b0:	movne	sl, #4
   131b4:	str	sl, [sp]
   131b8:	str	r3, [sp, #16]
   131bc:	ldr	r3, [sp, #156]	; 0x9c
   131c0:	str	r3, [sp, #12]
   131c4:	mov	r3, #0
   131c8:	str	r3, [sp, #8]
   131cc:	ldr	r3, [sp, #148]	; 0x94
   131d0:	bic	r3, r3, #2
   131d4:	str	r3, [sp, #4]
   131d8:	ldr	r3, [sp, #40]	; 0x28
   131dc:	b	12f64 <strspn@plt+0x2060>
   131e0:	mov	r3, #0
   131e4:	str	r3, [sp, #64]	; 0x40
   131e8:	ldr	r2, [sp, #28]
   131ec:	ldr	r3, [sp, #48]	; 0x30
   131f0:	add	r3, r3, r2
   131f4:	str	r3, [sp, #80]	; 0x50
   131f8:	ldr	r3, [sp, #48]	; 0x30
   131fc:	ldrb	r6, [r3, r2]
   13200:	cmp	r6, #58	; 0x3a
   13204:	bhi	13368 <strspn@plt+0x2464>
   13208:	cmp	r6, #43	; 0x2b
   1320c:	bcs	13528 <strspn@plt+0x2624>
   13210:	cmp	r6, #32
   13214:	beq	1357c <strspn@plt+0x2678>
   13218:	bhi	132c0 <strspn@plt+0x23bc>
   1321c:	cmp	r6, #9
   13220:	beq	13724 <strspn@plt+0x2820>
   13224:	bhi	13284 <strspn@plt+0x2380>
   13228:	cmp	r6, #7
   1322c:	beq	13734 <strspn@plt+0x2830>
   13230:	bhi	13750 <strspn@plt+0x284c>
   13234:	cmp	r6, #0
   13238:	beq	13598 <strspn@plt+0x2694>
   1323c:	ldr	r3, [sp, #76]	; 0x4c
   13240:	cmp	r3, #1
   13244:	bne	1379c <strspn@plt+0x2898>
   13248:	bl	10e08 <__ctype_b_loc@plt>
   1324c:	ldr	r2, [r0]
   13250:	sxth	r3, r6
   13254:	lsl	r3, r3, #1
   13258:	ldrh	r5, [r2, r3]
   1325c:	ldr	r3, [sp, #76]	; 0x4c
   13260:	ubfx	r5, r5, #14, #1
   13264:	str	r3, [sp, #56]	; 0x38
   13268:	ldr	r3, [sp, #24]
   1326c:	eor	fp, r5, #1
   13270:	and	fp, fp, r3
   13274:	ands	fp, fp, #255	; 0xff
   13278:	beq	13458 <strspn@plt+0x2554>
   1327c:	mov	r5, #0
   13280:	b	13848 <strspn@plt+0x2944>
   13284:	cmp	r6, #11
   13288:	beq	13758 <strspn@plt+0x2854>
   1328c:	bcc	1372c <strspn@plt+0x2828>
   13290:	cmp	r6, #12
   13294:	beq	13760 <strspn@plt+0x285c>
   13298:	cmp	r6, #13
   1329c:	moveq	r3, #114	; 0x72
   132a0:	bne	1323c <strspn@plt+0x2338>
   132a4:	cmp	sl, #2
   132a8:	movne	r2, #0
   132ac:	andeq	r2, r7, #1
   132b0:	cmp	r2, #0
   132b4:	beq	13738 <strspn@plt+0x2834>
   132b8:	mov	sl, #2
   132bc:	b	13190 <strspn@plt+0x228c>
   132c0:	cmp	r6, #37	; 0x25
   132c4:	beq	13528 <strspn@plt+0x2624>
   132c8:	bhi	132dc <strspn@plt+0x23d8>
   132cc:	cmp	r6, #35	; 0x23
   132d0:	beq	13570 <strspn@plt+0x266c>
   132d4:	mov	r5, #0
   132d8:	b	13580 <strspn@plt+0x267c>
   132dc:	cmp	r6, #39	; 0x27
   132e0:	bne	132d4 <strspn@plt+0x23d0>
   132e4:	cmp	sl, #2
   132e8:	ldrne	r5, [sp, #36]	; 0x24
   132ec:	movne	r3, r5
   132f0:	strne	r3, [sp, #68]	; 0x44
   132f4:	bne	13674 <strspn@plt+0x2770>
   132f8:	cmp	r7, #0
   132fc:	bne	13190 <strspn@plt+0x228c>
   13300:	ldr	r3, [sp, #60]	; 0x3c
   13304:	cmp	r9, #0
   13308:	clz	r3, r3
   1330c:	lsr	r3, r3, #5
   13310:	moveq	r3, #0
   13314:	cmp	r3, #0
   13318:	strne	r9, [sp, #60]	; 0x3c
   1331c:	movne	r9, #0
   13320:	bne	13330 <strspn@plt+0x242c>
   13324:	cmp	r9, r4
   13328:	movhi	r3, #39	; 0x27
   1332c:	strbhi	r3, [r8, r4]
   13330:	add	r3, r4, #1
   13334:	ldr	r5, [sp, #36]	; 0x24
   13338:	mov	fp, #0
   1333c:	cmp	r3, r9
   13340:	movcc	r2, #92	; 0x5c
   13344:	str	fp, [sp, #52]	; 0x34
   13348:	strbcc	r2, [r8, r3]
   1334c:	add	r3, r4, #2
   13350:	add	r4, r4, #3
   13354:	cmp	r3, r9
   13358:	str	r5, [sp, #68]	; 0x44
   1335c:	movcc	r2, #39	; 0x27
   13360:	strbcc	r2, [r8, r3]
   13364:	b	13458 <strspn@plt+0x2554>
   13368:	cmp	r6, #94	; 0x5e
   1336c:	beq	132d4 <strspn@plt+0x23d0>
   13370:	bhi	13530 <strspn@plt+0x262c>
   13374:	cmp	r6, #90	; 0x5a
   13378:	bhi	1351c <strspn@plt+0x2618>
   1337c:	cmp	r6, #65	; 0x41
   13380:	bcs	13528 <strspn@plt+0x2624>
   13384:	cmp	r6, #62	; 0x3e
   13388:	bls	132d4 <strspn@plt+0x23d0>
   1338c:	cmp	r6, #63	; 0x3f
   13390:	bne	1323c <strspn@plt+0x2338>
   13394:	cmp	sl, #2
   13398:	beq	1367c <strspn@plt+0x2778>
   1339c:	cmp	sl, #5
   133a0:	movne	fp, #0
   133a4:	bne	13a4c <strspn@plt+0x2b48>
   133a8:	ldr	r3, [sp, #148]	; 0x94
   133ac:	tst	r3, #4
   133b0:	beq	13684 <strspn@plt+0x2780>
   133b4:	ldr	r3, [sp, #28]
   133b8:	add	r2, r3, #2
   133bc:	ldr	r3, [sp, #40]	; 0x28
   133c0:	cmp	r2, r3
   133c4:	bcs	13684 <strspn@plt+0x2780>
   133c8:	ldr	r1, [sp, #28]
   133cc:	ldr	r3, [sp, #48]	; 0x30
   133d0:	add	r3, r3, r1
   133d4:	ldrb	r1, [r3, #1]
   133d8:	cmp	r1, #63	; 0x3f
   133dc:	bne	13684 <strspn@plt+0x2780>
   133e0:	ldr	r3, [sp, #48]	; 0x30
   133e4:	ldrb	r6, [r3, r2]
   133e8:	sub	r3, r6, #33	; 0x21
   133ec:	uxtb	r3, r3
   133f0:	cmp	r3, #29
   133f4:	bhi	13a54 <strspn@plt+0x2b50>
   133f8:	ldr	r0, [pc, #1804]	; 13b0c <strspn@plt+0x2c08>
   133fc:	mov	r5, #1
   13400:	ands	r5, r0, r5, lsl r3
   13404:	beq	13a5c <strspn@plt+0x2b58>
   13408:	cmp	r7, #0
   1340c:	bne	13190 <strspn@plt+0x228c>
   13410:	cmp	r9, r4
   13414:	add	r3, r4, #1
   13418:	str	r2, [sp, #28]
   1341c:	mov	r5, #0
   13420:	strbhi	r1, [r8, r4]
   13424:	cmp	r9, r3
   13428:	mov	fp, r5
   1342c:	movhi	r1, #34	; 0x22
   13430:	strbhi	r1, [r8, r3]
   13434:	add	r3, r4, #2
   13438:	cmp	r9, r3
   1343c:	movhi	r1, #34	; 0x22
   13440:	strbhi	r1, [r8, r3]
   13444:	add	r3, r4, #3
   13448:	add	r4, r4, #4
   1344c:	cmp	r9, r3
   13450:	movhi	r1, #63	; 0x3f
   13454:	strbhi	r1, [r8, r3]
   13458:	ldr	r3, [sp, #24]
   1345c:	eor	r3, r3, #1
   13460:	cmp	sl, #2
   13464:	orreq	r3, r3, #1
   13468:	eor	r3, r3, #1
   1346c:	orr	r3, r7, r3
   13470:	tst	r3, #255	; 0xff
   13474:	beq	134a0 <strspn@plt+0x259c>
   13478:	ldr	r3, [sp, #152]	; 0x98
   1347c:	cmp	r3, #0
   13480:	beq	134a0 <strspn@plt+0x259c>
   13484:	ldr	r1, [sp, #152]	; 0x98
   13488:	ubfx	r2, r6, #5, #8
   1348c:	and	r3, r6, #31
   13490:	ldr	r2, [r1, r2, lsl #2]
   13494:	lsr	r3, r2, r3
   13498:	tst	r3, #1
   1349c:	bne	134ac <strspn@plt+0x25a8>
   134a0:	ldr	r3, [sp, #64]	; 0x40
   134a4:	cmp	r3, #0
   134a8:	beq	136a4 <strspn@plt+0x27a0>
   134ac:	sub	r3, sl, #2
   134b0:	cmp	r7, #0
   134b4:	clz	r3, r3
   134b8:	lsr	r3, r3, #5
   134bc:	bne	13190 <strspn@plt+0x228c>
   134c0:	ldr	r2, [sp, #52]	; 0x34
   134c4:	eor	r2, r2, #1
   134c8:	ands	r3, r3, r2
   134cc:	beq	13504 <strspn@plt+0x2600>
   134d0:	cmp	r9, r4
   134d4:	str	r3, [sp, #52]	; 0x34
   134d8:	movhi	r2, #39	; 0x27
   134dc:	strbhi	r2, [r8, r4]
   134e0:	add	r2, r4, #1
   134e4:	cmp	r9, r2
   134e8:	movhi	r1, #36	; 0x24
   134ec:	strbhi	r1, [r8, r2]
   134f0:	add	r2, r4, #2
   134f4:	add	r4, r4, #3
   134f8:	cmp	r9, r2
   134fc:	movhi	r1, #39	; 0x27
   13500:	strbhi	r1, [r8, r2]
   13504:	cmp	r9, r4
   13508:	ldr	fp, [sp, #36]	; 0x24
   1350c:	movhi	r3, #92	; 0x5c
   13510:	strbhi	r3, [r8, r4]
   13514:	add	r4, r4, #1
   13518:	b	136a4 <strspn@plt+0x27a0>
   1351c:	cmp	r6, #92	; 0x5c
   13520:	beq	1368c <strspn@plt+0x2788>
   13524:	bls	132d4 <strspn@plt+0x23d0>
   13528:	ldr	r5, [sp, #36]	; 0x24
   1352c:	b	13674 <strspn@plt+0x2770>
   13530:	cmp	r6, #122	; 0x7a
   13534:	bhi	13554 <strspn@plt+0x2650>
   13538:	cmp	r6, #97	; 0x61
   1353c:	bcs	13528 <strspn@plt+0x2624>
   13540:	cmp	r6, #95	; 0x5f
   13544:	beq	13528 <strspn@plt+0x2624>
   13548:	cmp	r6, #96	; 0x60
   1354c:	bne	1323c <strspn@plt+0x2338>
   13550:	b	132d4 <strspn@plt+0x23d0>
   13554:	cmp	r6, #124	; 0x7c
   13558:	beq	132d4 <strspn@plt+0x23d0>
   1355c:	bcc	13768 <strspn@plt+0x2864>
   13560:	cmp	r6, #125	; 0x7d
   13564:	beq	13768 <strspn@plt+0x2864>
   13568:	cmp	r6, #126	; 0x7e
   1356c:	bne	1323c <strspn@plt+0x2338>
   13570:	ldr	r3, [sp, #28]
   13574:	cmp	r3, #0
   13578:	bne	13684 <strspn@plt+0x2780>
   1357c:	ldr	r5, [sp, #36]	; 0x24
   13580:	cmp	sl, #2
   13584:	movne	fp, #0
   13588:	andeq	fp, r7, #1
   1358c:	cmp	fp, #0
   13590:	beq	13458 <strspn@plt+0x2554>
   13594:	b	132b8 <strspn@plt+0x23b4>
   13598:	ldr	r3, [sp, #24]
   1359c:	cmp	r3, #0
   135a0:	beq	13668 <strspn@plt+0x2764>
   135a4:	sub	r2, sl, #2
   135a8:	cmp	r7, #0
   135ac:	clz	r2, r2
   135b0:	lsr	r2, r2, #5
   135b4:	bne	1318c <strspn@plt+0x2288>
   135b8:	ldr	r3, [sp, #52]	; 0x34
   135bc:	eor	r3, r3, #1
   135c0:	ands	r2, r2, r3
   135c4:	moveq	r3, r4
   135c8:	beq	13600 <strspn@plt+0x26fc>
   135cc:	cmp	r9, r4
   135d0:	str	r2, [sp, #52]	; 0x34
   135d4:	movhi	r3, #39	; 0x27
   135d8:	strbhi	r3, [r8, r4]
   135dc:	add	r3, r4, #1
   135e0:	cmp	r9, r3
   135e4:	movhi	r1, #36	; 0x24
   135e8:	strbhi	r1, [r8, r3]
   135ec:	add	r3, r4, #2
   135f0:	cmp	r9, r3
   135f4:	movhi	r1, #39	; 0x27
   135f8:	strbhi	r1, [r8, r3]
   135fc:	add	r3, r4, #3
   13600:	cmp	r9, r3
   13604:	add	r4, r3, #1
   13608:	movhi	r2, #92	; 0x5c
   1360c:	strbhi	r2, [r8, r3]
   13610:	cmp	fp, #0
   13614:	beq	13a3c <strspn@plt+0x2b38>
   13618:	ldr	r2, [sp, #28]
   1361c:	ldr	r1, [sp, #40]	; 0x28
   13620:	add	r2, r2, #1
   13624:	cmp	r2, r1
   13628:	bcs	13660 <strspn@plt+0x275c>
   1362c:	ldr	r1, [sp, #48]	; 0x30
   13630:	mov	r6, #48	; 0x30
   13634:	ldrb	r2, [r1, r2]
   13638:	sub	r2, r2, #48	; 0x30
   1363c:	cmp	r2, #9
   13640:	bhi	13a4c <strspn@plt+0x2b48>
   13644:	cmp	r9, r4
   13648:	add	r2, r3, #2
   1364c:	strbhi	r6, [r8, r4]
   13650:	cmp	r9, r2
   13654:	add	r4, r3, #3
   13658:	movhi	r1, #48	; 0x30
   1365c:	strbhi	r1, [r8, r2]
   13660:	mov	r5, #0
   13664:	b	13a44 <strspn@plt+0x2b40>
   13668:	ldr	r3, [sp, #148]	; 0x94
   1366c:	ands	r5, r3, #1
   13670:	bne	136f8 <strspn@plt+0x27f4>
   13674:	mov	fp, #0
   13678:	b	13458 <strspn@plt+0x2554>
   1367c:	cmp	r7, #0
   13680:	bne	13190 <strspn@plt+0x228c>
   13684:	mov	r5, #0
   13688:	b	13674 <strspn@plt+0x2770>
   1368c:	cmp	sl, #2
   13690:	bne	13704 <strspn@plt+0x2800>
   13694:	cmp	r7, #0
   13698:	bne	13190 <strspn@plt+0x228c>
   1369c:	mov	r5, r7
   136a0:	mov	fp, r7
   136a4:	ldr	r3, [sp, #52]	; 0x34
   136a8:	eor	fp, fp, #1
   136ac:	tst	r3, fp
   136b0:	beq	136dc <strspn@plt+0x27d8>
   136b4:	cmp	r9, r4
   136b8:	movhi	r3, #39	; 0x27
   136bc:	strbhi	r3, [r8, r4]
   136c0:	add	r3, r4, #1
   136c4:	add	r4, r4, #2
   136c8:	cmp	r9, r3
   136cc:	movhi	r2, #39	; 0x27
   136d0:	strbhi	r2, [r8, r3]
   136d4:	mov	r3, #0
   136d8:	str	r3, [sp, #52]	; 0x34
   136dc:	cmp	r9, r4
   136e0:	ldr	r3, [sp, #72]	; 0x48
   136e4:	strbhi	r6, [r8, r4]
   136e8:	cmp	r5, #0
   136ec:	add	r4, r4, #1
   136f0:	moveq	r3, #0
   136f4:	str	r3, [sp, #72]	; 0x48
   136f8:	ldr	r3, [sp, #28]
   136fc:	add	r3, r3, #1
   13700:	b	12eb8 <strspn@plt+0x1fb4>
   13704:	ldr	r3, [sp, #24]
   13708:	and	r3, r3, r7
   1370c:	tst	r5, r3
   13710:	moveq	r3, r6
   13714:	beq	132a4 <strspn@plt+0x23a0>
   13718:	mov	fp, #0
   1371c:	mov	r5, fp
   13720:	b	136a4 <strspn@plt+0x27a0>
   13724:	mov	r3, #116	; 0x74
   13728:	b	132a4 <strspn@plt+0x23a0>
   1372c:	mov	r3, #110	; 0x6e
   13730:	b	132a4 <strspn@plt+0x23a0>
   13734:	mov	r3, #97	; 0x61
   13738:	ldr	r2, [sp, #24]
   1373c:	cmp	r2, #0
   13740:	beq	13684 <strspn@plt+0x2780>
   13744:	mov	r6, r3
   13748:	mov	r5, #0
   1374c:	b	134ac <strspn@plt+0x25a8>
   13750:	mov	r3, #98	; 0x62
   13754:	b	13738 <strspn@plt+0x2834>
   13758:	mov	r3, #118	; 0x76
   1375c:	b	13738 <strspn@plt+0x2834>
   13760:	mov	r3, #102	; 0x66
   13764:	b	13738 <strspn@plt+0x2834>
   13768:	ldr	r3, [sp, #40]	; 0x28
   1376c:	cmn	r3, #1
   13770:	bne	13790 <strspn@plt+0x288c>
   13774:	ldr	r3, [sp, #48]	; 0x30
   13778:	ldrb	r3, [r3, #1]
   1377c:	adds	r3, r3, #0
   13780:	movne	r3, #1
   13784:	cmp	r3, #0
   13788:	bne	13684 <strspn@plt+0x2780>
   1378c:	b	13570 <strspn@plt+0x266c>
   13790:	ldr	r3, [sp, #40]	; 0x28
   13794:	subs	r3, r3, #1
   13798:	b	13780 <strspn@plt+0x287c>
   1379c:	mov	r3, #0
   137a0:	mov	r2, #0
   137a4:	strd	r2, [sp, #96]	; 0x60
   137a8:	ldr	r3, [sp, #40]	; 0x28
   137ac:	cmn	r3, #1
   137b0:	bne	137c0 <strspn@plt+0x28bc>
   137b4:	ldr	r0, [sp, #48]	; 0x30
   137b8:	bl	10e2c <strlen@plt>
   137bc:	str	r0, [sp, #40]	; 0x28
   137c0:	ldr	r5, [sp, #36]	; 0x24
   137c4:	mov	r3, #0
   137c8:	str	r3, [sp, #56]	; 0x38
   137cc:	ldr	r3, [sp, #28]
   137d0:	add	r0, sp, #92	; 0x5c
   137d4:	ldr	r1, [sp, #40]	; 0x28
   137d8:	ldr	r2, [sp, #56]	; 0x38
   137dc:	add	r2, r3, r2
   137e0:	ldr	r3, [sp, #48]	; 0x30
   137e4:	add	fp, r3, r2
   137e8:	sub	r2, r1, r2
   137ec:	add	r3, sp, #96	; 0x60
   137f0:	mov	r1, fp
   137f4:	bl	14ebc <strspn@plt+0x3fb8>
   137f8:	subs	r2, r0, #0
   137fc:	beq	1383c <strspn@plt+0x2938>
   13800:	cmn	r2, #1
   13804:	beq	13a10 <strspn@plt+0x2b0c>
   13808:	cmn	r2, #2
   1380c:	bne	13980 <strspn@plt+0x2a7c>
   13810:	ldr	r3, [sp, #28]
   13814:	ldr	r2, [sp, #56]	; 0x38
   13818:	add	r3, r3, r2
   1381c:	ldr	r2, [sp, #40]	; 0x28
   13820:	cmp	r2, r3
   13824:	bls	13a10 <strspn@plt+0x2b0c>
   13828:	ldr	r2, [sp, #56]	; 0x38
   1382c:	ldr	r3, [sp, #80]	; 0x50
   13830:	ldrb	r5, [r3, r2]
   13834:	cmp	r5, #0
   13838:	bne	13970 <strspn@plt+0x2a6c>
   1383c:	ldr	r3, [sp, #56]	; 0x38
   13840:	cmp	r3, #1
   13844:	bls	13268 <strspn@plt+0x2364>
   13848:	ldr	r3, [sp, #28]
   1384c:	mov	fp, #0
   13850:	mov	ip, #92	; 0x5c
   13854:	ldr	r2, [sp, #56]	; 0x38
   13858:	add	r3, r3, r2
   1385c:	ldr	r2, [sp, #24]
   13860:	str	r3, [sp, #36]	; 0x24
   13864:	eor	r3, r5, #1
   13868:	and	r3, r3, r2
   1386c:	mov	r2, #39	; 0x27
   13870:	uxtb	r3, r3
   13874:	cmp	r3, #0
   13878:	beq	13a18 <strspn@plt+0x2b14>
   1387c:	sub	r0, sl, #2
   13880:	cmp	r7, #0
   13884:	clz	r0, r0
   13888:	lsr	r0, r0, #5
   1388c:	bne	1318c <strspn@plt+0x2288>
   13890:	ldr	r1, [sp, #52]	; 0x34
   13894:	eor	r1, r1, #1
   13898:	ands	r1, r0, r1
   1389c:	beq	138cc <strspn@plt+0x29c8>
   138a0:	cmp	r9, r4
   138a4:	add	r0, r4, #1
   138a8:	str	r1, [sp, #52]	; 0x34
   138ac:	strbhi	r2, [r8, r4]
   138b0:	cmp	r9, r0
   138b4:	movhi	lr, #36	; 0x24
   138b8:	strbhi	lr, [r8, r0]
   138bc:	add	r0, r4, #2
   138c0:	add	r4, r4, #3
   138c4:	cmp	r9, r0
   138c8:	strbhi	r2, [r8, r0]
   138cc:	cmp	r9, r4
   138d0:	add	r0, r4, #1
   138d4:	mov	fp, r3
   138d8:	strbhi	ip, [r8, r4]
   138dc:	cmp	r9, r0
   138e0:	lsrhi	r1, r6, #6
   138e4:	addhi	r1, r1, #48	; 0x30
   138e8:	strbhi	r1, [r8, r0]
   138ec:	add	r0, r4, #2
   138f0:	add	r4, r4, #3
   138f4:	cmp	r9, r0
   138f8:	ubfxhi	r1, r6, #3, #3
   138fc:	and	r6, r6, #7
   13900:	add	r6, r6, #48	; 0x30
   13904:	addhi	r1, r1, #48	; 0x30
   13908:	strbhi	r1, [r8, r0]
   1390c:	eor	r0, fp, #1
   13910:	ldr	r1, [sp, #28]
   13914:	ldr	lr, [sp, #52]	; 0x34
   13918:	add	r1, r1, #1
   1391c:	and	r0, r0, lr
   13920:	ldr	lr, [sp, #36]	; 0x24
   13924:	cmp	r1, lr
   13928:	bcs	136a4 <strspn@plt+0x27a0>
   1392c:	cmp	r0, #0
   13930:	beq	13954 <strspn@plt+0x2a50>
   13934:	cmp	r9, r4
   13938:	add	r0, r4, #1
   1393c:	strbhi	r2, [r8, r4]
   13940:	cmp	r9, r0
   13944:	add	r4, r4, #2
   13948:	strbhi	r2, [r8, r0]
   1394c:	mov	r0, #0
   13950:	str	r0, [sp, #52]	; 0x34
   13954:	ldr	r0, [sp, #48]	; 0x30
   13958:	cmp	r9, r4
   1395c:	str	r1, [sp, #28]
   13960:	strbhi	r6, [r8, r4]
   13964:	add	r4, r4, #1
   13968:	ldrb	r6, [r0, r1]
   1396c:	b	13874 <strspn@plt+0x2970>
   13970:	ldr	r3, [sp, #56]	; 0x38
   13974:	add	r3, r3, #1
   13978:	str	r3, [sp, #56]	; 0x38
   1397c:	b	13810 <strspn@plt+0x290c>
   13980:	cmp	sl, #2
   13984:	movne	r3, #0
   13988:	andeq	r3, r7, #1
   1398c:	cmp	r3, #0
   13990:	movne	r1, #1
   13994:	bne	139f0 <strspn@plt+0x2aec>
   13998:	ldr	r0, [sp, #92]	; 0x5c
   1399c:	str	r2, [sp, #84]	; 0x54
   139a0:	bl	10d54 <iswprint@plt>
   139a4:	ldr	r3, [sp, #56]	; 0x38
   139a8:	cmp	r0, #0
   139ac:	add	r0, sp, #96	; 0x60
   139b0:	moveq	r5, #0
   139b4:	ldr	r2, [sp, #84]	; 0x54
   139b8:	add	r3, r3, r2
   139bc:	str	r3, [sp, #56]	; 0x38
   139c0:	bl	10d00 <mbsinit@plt>
   139c4:	cmp	r0, #0
   139c8:	beq	137cc <strspn@plt+0x28c8>
   139cc:	b	1383c <strspn@plt+0x2938>
   139d0:	ldrb	r3, [fp, #1]!
   139d4:	cmp	r3, #94	; 0x5e
   139d8:	beq	132b8 <strspn@plt+0x23b4>
   139dc:	bhi	139fc <strspn@plt+0x2af8>
   139e0:	sub	r3, r3, #91	; 0x5b
   139e4:	cmp	r3, #1
   139e8:	bls	132b8 <strspn@plt+0x23b4>
   139ec:	add	r1, r1, #1
   139f0:	cmp	r1, r2
   139f4:	bne	139d0 <strspn@plt+0x2acc>
   139f8:	b	13998 <strspn@plt+0x2a94>
   139fc:	cmp	r3, #96	; 0x60
   13a00:	beq	132b8 <strspn@plt+0x23b4>
   13a04:	cmp	r3, #124	; 0x7c
   13a08:	bne	139ec <strspn@plt+0x2ae8>
   13a0c:	b	132b8 <strspn@plt+0x23b4>
   13a10:	mov	r5, #0
   13a14:	b	1383c <strspn@plt+0x2938>
   13a18:	ldr	r1, [sp, #64]	; 0x40
   13a1c:	cmp	r1, #0
   13a20:	beq	1390c <strspn@plt+0x2a08>
   13a24:	cmp	r9, r4
   13a28:	mov	r1, #0
   13a2c:	strbhi	ip, [r8, r4]
   13a30:	add	r4, r4, #1
   13a34:	str	r1, [sp, #64]	; 0x40
   13a38:	b	1390c <strspn@plt+0x2a08>
   13a3c:	mov	r5, fp
   13a40:	ldr	fp, [sp, #24]
   13a44:	mov	r6, #48	; 0x30
   13a48:	b	13458 <strspn@plt+0x2554>
   13a4c:	mov	r5, #0
   13a50:	b	13458 <strspn@plt+0x2554>
   13a54:	mov	r6, r1
   13a58:	b	13684 <strspn@plt+0x2780>
   13a5c:	mov	r6, r1
   13a60:	b	13674 <strspn@plt+0x2770>
   13a64:	ldr	r2, [sp, #28]
   13a68:	ldr	r3, [sp, #40]	; 0x28
   13a6c:	subs	r3, r3, r2
   13a70:	movne	r3, #1
   13a74:	b	12edc <strspn@plt+0x1fd8>
   13a78:	ldr	r3, [sp, #60]	; 0x3c
   13a7c:	mov	sl, #2
   13a80:	ldr	r7, [sp, #72]	; 0x48
   13a84:	adds	r6, r3, #0
   13a88:	mov	r5, r3
   13a8c:	movne	r6, #1
   13a90:	cmp	r9, #0
   13a94:	movne	r6, #0
   13a98:	cmp	r6, #0
   13a9c:	bne	12e6c <strspn@plt+0x1f68>
   13aa0:	ldr	r3, [sp, #68]	; 0x44
   13aa4:	ldr	r2, [sp, #44]	; 0x2c
   13aa8:	cmp	r2, #0
   13aac:	moveq	r3, #0
   13ab0:	andne	r3, r3, #1
   13ab4:	cmp	r3, #0
   13ab8:	movne	r3, r2
   13abc:	subne	r3, r3, #1
   13ac0:	bne	13af0 <strspn@plt+0x2bec>
   13ac4:	cmp	r9, r4
   13ac8:	movhi	r3, #0
   13acc:	strbhi	r3, [r8, r4]
   13ad0:	mov	r0, r4
   13ad4:	add	sp, sp, #108	; 0x6c
   13ad8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13adc:	mov	r3, r7
   13ae0:	b	13aa4 <strspn@plt+0x2ba0>
   13ae4:	cmp	r9, r4
   13ae8:	strbhi	r2, [r8, r4]
   13aec:	add	r4, r4, #1
   13af0:	ldrb	r2, [r3, #1]!
   13af4:	cmp	r2, #0
   13af8:	bne	13ae4 <strspn@plt+0x2be0>
   13afc:	b	13ac4 <strspn@plt+0x2bc0>
   13b00:	andeq	r5, r1, r0, lsl fp
   13b04:	andeq	r5, r1, r3, lsr #22
   13b08:	andeq	r5, r1, r1, lsr #22
   13b0c:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   13b10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13b14:	sub	sp, sp, #52	; 0x34
   13b18:	mov	r6, r0
   13b1c:	mov	r5, r3
   13b20:	mov	r8, r1
   13b24:	mov	r9, r2
   13b28:	bl	10e38 <__errno_location@plt>
   13b2c:	ldr	r3, [r0]
   13b30:	cmn	r6, #-2147483647	; 0x80000001
   13b34:	str	r0, [sp, #24]
   13b38:	ldr	r7, [pc, #368]	; 13cb0 <strspn@plt+0x2dac>
   13b3c:	str	r3, [sp, #32]
   13b40:	movne	r3, #0
   13b44:	moveq	r3, #1
   13b48:	orrs	r3, r3, r6, lsr #31
   13b4c:	ldr	r4, [r7]
   13b50:	beq	13b58 <strspn@plt+0x2c54>
   13b54:	bl	10eec <abort@plt>
   13b58:	ldr	r2, [r7, #4]
   13b5c:	cmp	r2, r6
   13b60:	bgt	13bd0 <strspn@plt+0x2ccc>
   13b64:	add	sl, r7, #8
   13b68:	mov	r3, #8
   13b6c:	cmp	r4, sl
   13b70:	add	r1, sp, #44	; 0x2c
   13b74:	str	r2, [sp, #44]	; 0x2c
   13b78:	sub	r2, r6, r2
   13b7c:	movne	r0, r4
   13b80:	moveq	r0, #0
   13b84:	add	r2, r2, #1
   13b88:	str	r3, [sp]
   13b8c:	mvn	r3, #-2147483648	; 0x80000000
   13b90:	bl	149b4 <strspn@plt+0x3ab0>
   13b94:	cmp	r4, sl
   13b98:	mov	fp, r0
   13b9c:	str	r0, [r7]
   13ba0:	ldmeq	r4, {r0, r1}
   13ba4:	mov	r4, fp
   13ba8:	ldr	r2, [sp, #44]	; 0x2c
   13bac:	stmeq	fp, {r0, r1}
   13bb0:	mov	r1, #0
   13bb4:	ldr	r0, [r7, #4]
   13bb8:	sub	r2, r2, r0
   13bbc:	add	r0, fp, r0, lsl #3
   13bc0:	lsl	r2, r2, #3
   13bc4:	bl	10e50 <memset@plt>
   13bc8:	ldr	r3, [sp, #44]	; 0x2c
   13bcc:	str	r3, [r7, #4]
   13bd0:	ldr	r3, [r5, #4]
   13bd4:	add	sl, r4, r6, lsl #3
   13bd8:	mov	r2, r8
   13bdc:	ldr	fp, [r4, r6, lsl #3]
   13be0:	ldr	r7, [sl, #4]
   13be4:	orr	r3, r3, #1
   13be8:	str	r3, [sp, #28]
   13bec:	add	r3, r5, #8
   13bf0:	mov	r1, fp
   13bf4:	str	r3, [sp, #36]	; 0x24
   13bf8:	mov	r0, r7
   13bfc:	ldr	r3, [r5, #44]	; 0x2c
   13c00:	str	r3, [sp, #16]
   13c04:	ldr	r3, [r5, #40]	; 0x28
   13c08:	str	r3, [sp, #12]
   13c0c:	add	r3, r5, #8
   13c10:	str	r3, [sp, #8]
   13c14:	ldr	r3, [sp, #28]
   13c18:	str	r3, [sp, #4]
   13c1c:	ldr	r3, [r5]
   13c20:	str	r3, [sp]
   13c24:	mov	r3, r9
   13c28:	bl	12e20 <strspn@plt+0x1f1c>
   13c2c:	cmp	fp, r0
   13c30:	bhi	13c98 <strspn@plt+0x2d94>
   13c34:	ldr	r3, [pc, #120]	; 13cb4 <strspn@plt+0x2db0>
   13c38:	add	fp, r0, #1
   13c3c:	str	fp, [r4, r6, lsl #3]
   13c40:	cmp	r7, r3
   13c44:	beq	13c50 <strspn@plt+0x2d4c>
   13c48:	mov	r0, r7
   13c4c:	bl	11de8 <strspn@plt+0xee4>
   13c50:	mov	r0, fp
   13c54:	bl	148a4 <strspn@plt+0x39a0>
   13c58:	ldr	r3, [r5, #44]	; 0x2c
   13c5c:	mov	r2, r8
   13c60:	mov	r1, fp
   13c64:	str	r0, [sl, #4]
   13c68:	mov	r7, r0
   13c6c:	str	r3, [sp, #16]
   13c70:	ldr	r3, [r5, #40]	; 0x28
   13c74:	str	r3, [sp, #12]
   13c78:	add	r3, r5, #8
   13c7c:	str	r3, [sp, #8]
   13c80:	ldr	r3, [sp, #28]
   13c84:	str	r3, [sp, #4]
   13c88:	ldr	r3, [r5]
   13c8c:	str	r3, [sp]
   13c90:	mov	r3, r9
   13c94:	bl	12e20 <strspn@plt+0x1f1c>
   13c98:	ldr	r3, [sp, #24]
   13c9c:	mov	r0, r7
   13ca0:	ldr	r2, [sp, #32]
   13ca4:	str	r2, [r3]
   13ca8:	add	sp, sp, #52	; 0x34
   13cac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13cb0:	strdeq	r6, [r2], -r8
   13cb4:	andeq	r6, r2, r0, ror #2
   13cb8:	push	{r4, r5, r6, lr}
   13cbc:	mov	r5, r0
   13cc0:	bl	10e38 <__errno_location@plt>
   13cc4:	mov	r4, r0
   13cc8:	cmp	r5, #0
   13ccc:	ldr	r0, [pc, #20]	; 13ce8 <strspn@plt+0x2de4>
   13cd0:	mov	r1, #48	; 0x30
   13cd4:	movne	r0, r5
   13cd8:	ldr	r6, [r4]
   13cdc:	bl	14aa4 <strspn@plt+0x3ba0>
   13ce0:	str	r6, [r4]
   13ce4:	pop	{r4, r5, r6, pc}
   13ce8:	andeq	r6, r2, r0, ror #4
   13cec:	ldr	r3, [pc, #12]	; 13d00 <strspn@plt+0x2dfc>
   13cf0:	cmp	r0, #0
   13cf4:	moveq	r0, r3
   13cf8:	ldr	r0, [r0]
   13cfc:	bx	lr
   13d00:	andeq	r6, r2, r0, ror #4
   13d04:	ldr	r3, [pc, #12]	; 13d18 <strspn@plt+0x2e14>
   13d08:	cmp	r0, #0
   13d0c:	moveq	r0, r3
   13d10:	str	r1, [r0]
   13d14:	bx	lr
   13d18:	andeq	r6, r2, r0, ror #4
   13d1c:	ldr	r3, [pc, #52]	; 13d58 <strspn@plt+0x2e54>
   13d20:	cmp	r0, #0
   13d24:	push	{lr}		; (str lr, [sp, #-4]!)
   13d28:	lsr	lr, r1, #5
   13d2c:	and	r1, r1, #31
   13d30:	moveq	r0, r3
   13d34:	add	r3, r0, #8
   13d38:	ldr	ip, [r3, lr, lsl #2]
   13d3c:	lsr	r0, ip, r1
   13d40:	eor	r2, r2, r0
   13d44:	and	r0, r0, #1
   13d48:	and	r2, r2, #1
   13d4c:	eor	r1, ip, r2, lsl r1
   13d50:	str	r1, [r3, lr, lsl #2]
   13d54:	pop	{pc}		; (ldr pc, [sp], #4)
   13d58:	andeq	r6, r2, r0, ror #4
   13d5c:	ldr	r3, [pc, #16]	; 13d74 <strspn@plt+0x2e70>
   13d60:	cmp	r0, #0
   13d64:	movne	r3, r0
   13d68:	ldr	r0, [r3, #4]
   13d6c:	str	r1, [r3, #4]
   13d70:	bx	lr
   13d74:	andeq	r6, r2, r0, ror #4
   13d78:	ldr	r3, [pc, #44]	; 13dac <strspn@plt+0x2ea8>
   13d7c:	cmp	r0, #0
   13d80:	moveq	r0, r3
   13d84:	mov	r3, #10
   13d88:	cmp	r2, #0
   13d8c:	cmpne	r1, #0
   13d90:	str	r3, [r0]
   13d94:	bne	13da0 <strspn@plt+0x2e9c>
   13d98:	push	{r4, lr}
   13d9c:	bl	10eec <abort@plt>
   13da0:	str	r1, [r0, #40]	; 0x28
   13da4:	str	r2, [r0, #44]	; 0x2c
   13da8:	bx	lr
   13dac:	andeq	r6, r2, r0, ror #4
   13db0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13db4:	sub	sp, sp, #24
   13db8:	mov	sl, r3
   13dbc:	mov	r7, r0
   13dc0:	mov	r8, r1
   13dc4:	mov	r9, r2
   13dc8:	ldr	r4, [sp, #56]	; 0x38
   13dcc:	ldr	r3, [pc, #88]	; 13e2c <strspn@plt+0x2f28>
   13dd0:	cmp	r4, #0
   13dd4:	moveq	r4, r3
   13dd8:	bl	10e38 <__errno_location@plt>
   13ddc:	ldr	r3, [r4, #44]	; 0x2c
   13de0:	mov	r5, r0
   13de4:	mov	r2, r9
   13de8:	mov	r1, r8
   13dec:	mov	r0, r7
   13df0:	ldr	r6, [r5]
   13df4:	str	r3, [sp, #16]
   13df8:	ldr	r3, [r4, #40]	; 0x28
   13dfc:	str	r3, [sp, #12]
   13e00:	add	r3, r4, #8
   13e04:	str	r3, [sp, #8]
   13e08:	ldr	r3, [r4, #4]
   13e0c:	str	r3, [sp, #4]
   13e10:	ldr	r3, [r4]
   13e14:	str	r3, [sp]
   13e18:	mov	r3, sl
   13e1c:	bl	12e20 <strspn@plt+0x1f1c>
   13e20:	str	r6, [r5]
   13e24:	add	sp, sp, #24
   13e28:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13e2c:	andeq	r6, r2, r0, ror #4
   13e30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13e34:	cmp	r3, #0
   13e38:	sub	sp, sp, #44	; 0x2c
   13e3c:	mov	r6, r2
   13e40:	mov	sl, r1
   13e44:	mov	r9, r0
   13e48:	ldr	r4, [pc, #176]	; 13f00 <strspn@plt+0x2ffc>
   13e4c:	movne	r4, r3
   13e50:	bl	10e38 <__errno_location@plt>
   13e54:	ldr	r3, [r0]
   13e58:	mov	r1, #0
   13e5c:	mov	r2, r9
   13e60:	mov	r8, r0
   13e64:	mov	r0, r1
   13e68:	ldr	r5, [r4, #4]
   13e6c:	add	fp, r4, #8
   13e70:	str	r3, [sp, #28]
   13e74:	ldr	r3, [r4, #44]	; 0x2c
   13e78:	cmp	r6, #0
   13e7c:	orreq	r5, r5, #1
   13e80:	str	r3, [sp, #16]
   13e84:	ldr	r3, [r4, #40]	; 0x28
   13e88:	stmib	sp, {r5, fp}
   13e8c:	str	r3, [sp, #12]
   13e90:	ldr	r3, [r4]
   13e94:	str	r3, [sp]
   13e98:	mov	r3, sl
   13e9c:	bl	12e20 <strspn@plt+0x1f1c>
   13ea0:	add	r1, r0, #1
   13ea4:	mov	r7, r0
   13ea8:	mov	r0, r1
   13eac:	str	r1, [sp, #36]	; 0x24
   13eb0:	bl	148a4 <strspn@plt+0x39a0>
   13eb4:	ldr	r3, [r4, #44]	; 0x2c
   13eb8:	mov	r2, r9
   13ebc:	ldr	r1, [sp, #36]	; 0x24
   13ec0:	str	r3, [sp, #16]
   13ec4:	ldr	r3, [r4, #40]	; 0x28
   13ec8:	stmib	sp, {r5, fp}
   13ecc:	str	r0, [sp, #32]
   13ed0:	str	r3, [sp, #12]
   13ed4:	ldr	r3, [r4]
   13ed8:	str	r3, [sp]
   13edc:	mov	r3, sl
   13ee0:	bl	12e20 <strspn@plt+0x1f1c>
   13ee4:	ldr	r3, [sp, #28]
   13ee8:	cmp	r6, #0
   13eec:	ldr	r0, [sp, #32]
   13ef0:	str	r3, [r8]
   13ef4:	strne	r7, [r6]
   13ef8:	add	sp, sp, #44	; 0x2c
   13efc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13f00:	andeq	r6, r2, r0, ror #4
   13f04:	mov	r3, r2
   13f08:	mov	r2, #0
   13f0c:	b	13e30 <strspn@plt+0x2f2c>
   13f10:	push	{r4, r5, r6, r7, r8, lr}
   13f14:	mov	r6, #1
   13f18:	ldr	r4, [pc, #100]	; 13f84 <strspn@plt+0x3080>
   13f1c:	ldr	r5, [r4]
   13f20:	add	r7, r5, #4
   13f24:	ldr	r3, [r4, #4]
   13f28:	cmp	r3, r6
   13f2c:	bgt	13f74 <strspn@plt+0x3070>
   13f30:	ldr	r6, [pc, #80]	; 13f88 <strspn@plt+0x3084>
   13f34:	ldr	r0, [r5, #4]
   13f38:	cmp	r0, r6
   13f3c:	beq	13f50 <strspn@plt+0x304c>
   13f40:	bl	11de8 <strspn@plt+0xee4>
   13f44:	mov	r3, #256	; 0x100
   13f48:	str	r3, [r4, #8]
   13f4c:	str	r6, [r4, #12]
   13f50:	ldr	r6, [pc, #52]	; 13f8c <strspn@plt+0x3088>
   13f54:	cmp	r5, r6
   13f58:	beq	13f68 <strspn@plt+0x3064>
   13f5c:	mov	r0, r5
   13f60:	bl	11de8 <strspn@plt+0xee4>
   13f64:	str	r6, [r4]
   13f68:	mov	r3, #1
   13f6c:	str	r3, [r4, #4]
   13f70:	pop	{r4, r5, r6, r7, r8, pc}
   13f74:	ldr	r0, [r7, r6, lsl #3]
   13f78:	add	r6, r6, #1
   13f7c:	bl	11de8 <strspn@plt+0xee4>
   13f80:	b	13f24 <strspn@plt+0x3020>
   13f84:	strdeq	r6, [r2], -r8
   13f88:	andeq	r6, r2, r0, ror #2
   13f8c:	andeq	r6, r2, r0, lsl #2
   13f90:	ldr	r3, [pc, #4]	; 13f9c <strspn@plt+0x3098>
   13f94:	mvn	r2, #0
   13f98:	b	13b10 <strspn@plt+0x2c0c>
   13f9c:	andeq	r6, r2, r0, ror #4
   13fa0:	ldr	r3, [pc]	; 13fa8 <strspn@plt+0x30a4>
   13fa4:	b	13b10 <strspn@plt+0x2c0c>
   13fa8:	andeq	r6, r2, r0, ror #4
   13fac:	mov	r1, r0
   13fb0:	mov	r0, #0
   13fb4:	b	13f90 <strspn@plt+0x308c>
   13fb8:	mov	r2, r1
   13fbc:	mov	r1, r0
   13fc0:	mov	r0, #0
   13fc4:	b	13fa0 <strspn@plt+0x309c>
   13fc8:	push	{r4, r5, lr}
   13fcc:	sub	sp, sp, #52	; 0x34
   13fd0:	mov	r5, r2
   13fd4:	mov	r4, r0
   13fd8:	mov	r0, sp
   13fdc:	bl	12cc4 <strspn@plt+0x1dc0>
   13fe0:	mov	r3, sp
   13fe4:	mvn	r2, #0
   13fe8:	mov	r1, r5
   13fec:	mov	r0, r4
   13ff0:	bl	13b10 <strspn@plt+0x2c0c>
   13ff4:	add	sp, sp, #52	; 0x34
   13ff8:	pop	{r4, r5, pc}
   13ffc:	push	{r4, r5, r6, lr}
   14000:	sub	sp, sp, #48	; 0x30
   14004:	mov	r5, r2
   14008:	mov	r6, r3
   1400c:	mov	r4, r0
   14010:	mov	r0, sp
   14014:	bl	12cc4 <strspn@plt+0x1dc0>
   14018:	mov	r3, sp
   1401c:	mov	r2, r6
   14020:	mov	r1, r5
   14024:	mov	r0, r4
   14028:	bl	13b10 <strspn@plt+0x2c0c>
   1402c:	add	sp, sp, #48	; 0x30
   14030:	pop	{r4, r5, r6, pc}
   14034:	mov	r2, r1
   14038:	mov	r1, r0
   1403c:	mov	r0, #0
   14040:	b	13fc8 <strspn@plt+0x30c4>
   14044:	mov	r3, r2
   14048:	mov	r2, r1
   1404c:	mov	r1, r0
   14050:	mov	r0, #0
   14054:	b	13ffc <strspn@plt+0x30f8>
   14058:	push	{r4, r5, r6, lr}
   1405c:	mov	r4, r0
   14060:	mov	r5, r1
   14064:	mov	r6, r2
   14068:	sub	sp, sp, #48	; 0x30
   1406c:	mov	ip, sp
   14070:	ldr	lr, [pc, #64]	; 140b8 <strspn@plt+0x31b4>
   14074:	ldm	lr!, {r0, r1, r2, r3}
   14078:	stmia	ip!, {r0, r1, r2, r3}
   1407c:	ldm	lr!, {r0, r1, r2, r3}
   14080:	stmia	ip!, {r0, r1, r2, r3}
   14084:	ldm	lr, {r0, r1, r2, r3}
   14088:	stm	ip, {r0, r1, r2, r3}
   1408c:	mov	r1, r6
   14090:	mov	r2, #1
   14094:	mov	r0, sp
   14098:	bl	13d1c <strspn@plt+0x2e18>
   1409c:	mov	r3, sp
   140a0:	mov	r2, r5
   140a4:	mov	r1, r4
   140a8:	mov	r0, #0
   140ac:	bl	13b10 <strspn@plt+0x2c0c>
   140b0:	add	sp, sp, #48	; 0x30
   140b4:	pop	{r4, r5, r6, pc}
   140b8:	andeq	r6, r2, r0, ror #4
   140bc:	mov	r2, r1
   140c0:	mvn	r1, #0
   140c4:	b	14058 <strspn@plt+0x3154>
   140c8:	mov	r1, #58	; 0x3a
   140cc:	b	140bc <strspn@plt+0x31b8>
   140d0:	mov	r2, #58	; 0x3a
   140d4:	b	14058 <strspn@plt+0x3154>
   140d8:	push	{r4, r5, lr}
   140dc:	sub	sp, sp, #100	; 0x64
   140e0:	mov	r4, r0
   140e4:	mov	r0, sp
   140e8:	mov	r5, r2
   140ec:	bl	12cc4 <strspn@plt+0x1dc0>
   140f0:	mov	ip, sp
   140f4:	add	lr, sp, #48	; 0x30
   140f8:	ldm	ip!, {r0, r1, r2, r3}
   140fc:	stmia	lr!, {r0, r1, r2, r3}
   14100:	ldm	ip!, {r0, r1, r2, r3}
   14104:	stmia	lr!, {r0, r1, r2, r3}
   14108:	ldm	ip, {r0, r1, r2, r3}
   1410c:	stm	lr, {r0, r1, r2, r3}
   14110:	mov	r2, #1
   14114:	mov	r1, #58	; 0x3a
   14118:	add	r0, sp, #48	; 0x30
   1411c:	bl	13d1c <strspn@plt+0x2e18>
   14120:	add	r3, sp, #48	; 0x30
   14124:	mvn	r2, #0
   14128:	mov	r1, r5
   1412c:	mov	r0, r4
   14130:	bl	13b10 <strspn@plt+0x2c0c>
   14134:	add	sp, sp, #100	; 0x64
   14138:	pop	{r4, r5, pc}
   1413c:	push	{r4, r5, r6, r7, lr}
   14140:	mov	r4, r0
   14144:	mov	r6, r1
   14148:	mov	r7, r2
   1414c:	mov	r5, r3
   14150:	sub	sp, sp, #52	; 0x34
   14154:	ldr	lr, [pc, #68]	; 141a0 <strspn@plt+0x329c>
   14158:	mov	ip, sp
   1415c:	ldm	lr!, {r0, r1, r2, r3}
   14160:	stmia	ip!, {r0, r1, r2, r3}
   14164:	ldm	lr!, {r0, r1, r2, r3}
   14168:	stmia	ip!, {r0, r1, r2, r3}
   1416c:	ldm	lr, {r0, r1, r2, r3}
   14170:	stm	ip, {r0, r1, r2, r3}
   14174:	mov	r2, r7
   14178:	mov	r1, r6
   1417c:	mov	r0, sp
   14180:	bl	13d78 <strspn@plt+0x2e74>
   14184:	ldr	r2, [sp, #72]	; 0x48
   14188:	mov	r3, sp
   1418c:	mov	r1, r5
   14190:	mov	r0, r4
   14194:	bl	13b10 <strspn@plt+0x2c0c>
   14198:	add	sp, sp, #52	; 0x34
   1419c:	pop	{r4, r5, r6, r7, pc}
   141a0:	andeq	r6, r2, r0, ror #4
   141a4:	mvn	ip, #0
   141a8:	push	{r0, r1, r2, lr}
   141ac:	str	ip, [sp]
   141b0:	bl	1413c <strspn@plt+0x3238>
   141b4:	add	sp, sp, #12
   141b8:	pop	{pc}		; (ldr pc, [sp], #4)
   141bc:	mov	r3, r2
   141c0:	mov	r2, r1
   141c4:	mov	r1, r0
   141c8:	mov	r0, #0
   141cc:	b	141a4 <strspn@plt+0x32a0>
   141d0:	push	{r0, r1, r2, lr}
   141d4:	str	r3, [sp]
   141d8:	mov	r3, r2
   141dc:	mov	r2, r1
   141e0:	mov	r1, r0
   141e4:	mov	r0, #0
   141e8:	bl	1413c <strspn@plt+0x3238>
   141ec:	add	sp, sp, #12
   141f0:	pop	{pc}		; (ldr pc, [sp], #4)
   141f4:	ldr	r3, [pc]	; 141fc <strspn@plt+0x32f8>
   141f8:	b	13b10 <strspn@plt+0x2c0c>
   141fc:	andeq	r6, r2, r8, lsl #2
   14200:	mov	r2, r1
   14204:	mov	r1, r0
   14208:	mov	r0, #0
   1420c:	b	141f4 <strspn@plt+0x32f0>
   14210:	mvn	r2, #0
   14214:	b	141f4 <strspn@plt+0x32f0>
   14218:	mov	r1, r0
   1421c:	mov	r0, #0
   14220:	b	14210 <strspn@plt+0x330c>
   14224:	push	{r4, r5, r6, lr}
   14228:	ldr	r4, [r0], #8
   1422c:	cmp	r4, r0
   14230:	bne	14258 <strspn@plt+0x3354>
   14234:	mov	r0, r1
   14238:	mov	r5, r1
   1423c:	bl	14bc8 <strspn@plt+0x3cc4>
   14240:	subs	r3, r0, #0
   14244:	beq	1426c <strspn@plt+0x3368>
   14248:	mov	r2, r5
   1424c:	mov	r1, r4
   14250:	pop	{r4, r5, r6, lr}
   14254:	b	10cf4 <memcpy@plt>
   14258:	mov	r0, r4
   1425c:	bl	14bf4 <strspn@plt+0x3cf0>
   14260:	cmp	r0, #0
   14264:	movne	r3, r0
   14268:	moveq	r3, r4
   1426c:	mov	r0, r3
   14270:	pop	{r4, r5, r6, pc}
   14274:	push	{r4, r5, r6, lr}
   14278:	mov	r6, r0
   1427c:	mov	r4, r0
   14280:	ldr	r5, [r0, #4]
   14284:	ldr	r0, [r6], #8
   14288:	lsl	r5, r5, #1
   1428c:	cmp	r0, r6
   14290:	beq	14298 <strspn@plt+0x3394>
   14294:	bl	11de8 <strspn@plt+0xee4>
   14298:	ldr	r3, [r4, #4]
   1429c:	cmp	r3, r5
   142a0:	bhi	142c8 <strspn@plt+0x33c4>
   142a4:	mov	r0, r5
   142a8:	bl	14bc8 <strspn@plt+0x3cc4>
   142ac:	cmp	r0, #0
   142b0:	bne	142d8 <strspn@plt+0x33d4>
   142b4:	mov	r3, #1024	; 0x400
   142b8:	mov	r0, #0
   142bc:	str	r6, [r4]
   142c0:	str	r3, [r4, #4]
   142c4:	pop	{r4, r5, r6, pc}
   142c8:	bl	10e38 <__errno_location@plt>
   142cc:	mov	r3, #12
   142d0:	str	r3, [r0]
   142d4:	b	142b4 <strspn@plt+0x33b0>
   142d8:	stm	r4, {r0, r5}
   142dc:	mov	r0, #1
   142e0:	pop	{r4, r5, r6, pc}
   142e4:	push	{r4, r5, r6, r7, r8, lr}
   142e8:	mov	r7, r0
   142ec:	mov	r4, r0
   142f0:	ldr	r8, [r7], #8
   142f4:	ldr	r3, [r0, #4]
   142f8:	cmp	r8, r7
   142fc:	lsl	r6, r3, #1
   14300:	bne	1432c <strspn@plt+0x3428>
   14304:	mov	r0, r6
   14308:	bl	14bc8 <strspn@plt+0x3cc4>
   1430c:	subs	r5, r0, #0
   14310:	beq	1435c <strspn@plt+0x3458>
   14314:	mov	r1, r8
   14318:	ldr	r2, [r4, #4]
   1431c:	bl	10cf4 <memcpy@plt>
   14320:	mov	r0, #1
   14324:	stm	r4, {r5, r6}
   14328:	pop	{r4, r5, r6, r7, r8, pc}
   1432c:	cmp	r3, r6
   14330:	bhi	14364 <strspn@plt+0x3460>
   14334:	mov	r1, r6
   14338:	mov	r0, r8
   1433c:	bl	14bf4 <strspn@plt+0x3cf0>
   14340:	subs	r5, r0, #0
   14344:	bne	14320 <strspn@plt+0x341c>
   14348:	ldr	r0, [r4]
   1434c:	bl	11de8 <strspn@plt+0xee4>
   14350:	mov	r3, #1024	; 0x400
   14354:	str	r7, [r4]
   14358:	str	r3, [r4, #4]
   1435c:	mov	r0, #0
   14360:	pop	{r4, r5, r6, r7, r8, pc}
   14364:	bl	10e38 <__errno_location@plt>
   14368:	mov	r3, #12
   1436c:	str	r3, [r0]
   14370:	b	14348 <strspn@plt+0x3444>
   14374:	push	{r4, r5, r6, lr}
   14378:	cmp	r1, #0
   1437c:	sub	sp, sp, #32
   14380:	mov	r5, r0
   14384:	ldr	r4, [sp, #48]	; 0x30
   14388:	ldr	r6, [sp, #52]	; 0x34
   1438c:	beq	14440 <strspn@plt+0x353c>
   14390:	strd	r2, [sp]
   14394:	mov	r3, r1
   14398:	mov	r1, #1
   1439c:	ldr	r2, [pc, #856]	; 146fc <strspn@plt+0x37f8>
   143a0:	bl	10e74 <__fprintf_chk@plt>
   143a4:	mov	r2, #5
   143a8:	ldr	r1, [pc, #848]	; 14700 <strspn@plt+0x37fc>
   143ac:	mov	r0, #0
   143b0:	bl	10d24 <dcgettext@plt>
   143b4:	movw	r3, #2022	; 0x7e6
   143b8:	ldr	r2, [pc, #836]	; 14704 <strspn@plt+0x3800>
   143bc:	mov	r1, #1
   143c0:	str	r3, [sp]
   143c4:	mov	r3, r0
   143c8:	mov	r0, r5
   143cc:	bl	10e74 <__fprintf_chk@plt>
   143d0:	mov	r1, r5
   143d4:	mov	r0, #10
   143d8:	bl	10d18 <fputc_unlocked@plt>
   143dc:	mov	r2, #5
   143e0:	ldr	r1, [pc, #800]	; 14708 <strspn@plt+0x3804>
   143e4:	mov	r0, #0
   143e8:	bl	10d24 <dcgettext@plt>
   143ec:	mov	r2, r0
   143f0:	mov	r1, #1
   143f4:	ldr	r3, [pc, #784]	; 1470c <strspn@plt+0x3808>
   143f8:	mov	r0, r5
   143fc:	bl	10e74 <__fprintf_chk@plt>
   14400:	mov	r1, r5
   14404:	mov	r0, #10
   14408:	bl	10d18 <fputc_unlocked@plt>
   1440c:	cmp	r6, #9
   14410:	ldrls	pc, [pc, r6, lsl #2]
   14414:	b	146f0 <strspn@plt+0x37ec>
   14418:	andeq	r4, r1, r0, lsr r5
   1441c:	andeq	r4, r1, r8, asr r4
   14420:	andeq	r4, r1, r4, lsl #9
   14424:			; <UNDEFINED> instruction: 0x000144b8
   14428:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   1442c:	andeq	r4, r1, r8, lsr r5
   14430:	andeq	r4, r1, r0, lsl #11
   14434:	ldrdeq	r4, [r1], -r0
   14438:	andeq	r4, r1, r8, lsr #12
   1443c:	andeq	r4, r1, r8, lsl #13
   14440:	mov	r1, #1
   14444:	str	r3, [sp]
   14448:	mov	r3, r2
   1444c:	ldr	r2, [pc, #700]	; 14710 <strspn@plt+0x380c>
   14450:	bl	10e74 <__fprintf_chk@plt>
   14454:	b	143a4 <strspn@plt+0x34a0>
   14458:	mov	r2, #5
   1445c:	ldr	r1, [pc, #688]	; 14714 <strspn@plt+0x3810>
   14460:	mov	r0, #0
   14464:	bl	10d24 <dcgettext@plt>
   14468:	ldr	r3, [r4]
   1446c:	mov	r2, r0
   14470:	mov	r1, #1
   14474:	mov	r0, r5
   14478:	add	sp, sp, #32
   1447c:	pop	{r4, r5, r6, lr}
   14480:	b	10e74 <__fprintf_chk@plt>
   14484:	mov	r2, #5
   14488:	ldr	r1, [pc, #648]	; 14718 <strspn@plt+0x3814>
   1448c:	mov	r0, #0
   14490:	bl	10d24 <dcgettext@plt>
   14494:	ldr	r3, [r4, #4]
   14498:	mov	r2, r0
   1449c:	mov	r1, #1
   144a0:	mov	r0, r5
   144a4:	str	r3, [sp, #48]	; 0x30
   144a8:	ldr	r3, [r4]
   144ac:	add	sp, sp, #32
   144b0:	pop	{r4, r5, r6, lr}
   144b4:	b	10e74 <__fprintf_chk@plt>
   144b8:	mov	r2, #5
   144bc:	ldr	r1, [pc, #600]	; 1471c <strspn@plt+0x3818>
   144c0:	mov	r0, #0
   144c4:	bl	10d24 <dcgettext@plt>
   144c8:	ldr	r3, [r4, #8]
   144cc:	mov	r2, r0
   144d0:	mov	r1, #1
   144d4:	mov	r0, r5
   144d8:	str	r3, [sp, #52]	; 0x34
   144dc:	ldr	r3, [r4, #4]
   144e0:	str	r3, [sp, #48]	; 0x30
   144e4:	ldr	r3, [r4]
   144e8:	add	sp, sp, #32
   144ec:	pop	{r4, r5, r6, lr}
   144f0:	b	10e74 <__fprintf_chk@plt>
   144f4:	mov	r2, #5
   144f8:	ldr	r1, [pc, #544]	; 14720 <strspn@plt+0x381c>
   144fc:	mov	r0, #0
   14500:	bl	10d24 <dcgettext@plt>
   14504:	ldr	r3, [r4, #12]
   14508:	mov	r2, r0
   1450c:	mov	r1, #1
   14510:	mov	r0, r5
   14514:	str	r3, [sp, #8]
   14518:	ldr	r3, [r4, #8]
   1451c:	str	r3, [sp, #4]
   14520:	ldr	r3, [r4, #4]
   14524:	str	r3, [sp]
   14528:	ldr	r3, [r4]
   1452c:	bl	10e74 <__fprintf_chk@plt>
   14530:	add	sp, sp, #32
   14534:	pop	{r4, r5, r6, pc}
   14538:	mov	r2, #5
   1453c:	ldr	r1, [pc, #480]	; 14724 <strspn@plt+0x3820>
   14540:	mov	r0, #0
   14544:	bl	10d24 <dcgettext@plt>
   14548:	ldr	r3, [r4, #16]
   1454c:	mov	r2, r0
   14550:	mov	r1, #1
   14554:	mov	r0, r5
   14558:	str	r3, [sp, #12]
   1455c:	ldr	r3, [r4, #12]
   14560:	str	r3, [sp, #8]
   14564:	ldr	r3, [r4, #8]
   14568:	str	r3, [sp, #4]
   1456c:	ldr	r3, [r4, #4]
   14570:	str	r3, [sp]
   14574:	ldr	r3, [r4]
   14578:	bl	10e74 <__fprintf_chk@plt>
   1457c:	b	14530 <strspn@plt+0x362c>
   14580:	mov	r2, #5
   14584:	ldr	r1, [pc, #412]	; 14728 <strspn@plt+0x3824>
   14588:	mov	r0, #0
   1458c:	bl	10d24 <dcgettext@plt>
   14590:	ldr	r3, [r4, #20]
   14594:	mov	r2, r0
   14598:	mov	r1, #1
   1459c:	mov	r0, r5
   145a0:	str	r3, [sp, #16]
   145a4:	ldr	r3, [r4, #16]
   145a8:	str	r3, [sp, #12]
   145ac:	ldr	r3, [r4, #12]
   145b0:	str	r3, [sp, #8]
   145b4:	ldr	r3, [r4, #8]
   145b8:	str	r3, [sp, #4]
   145bc:	ldr	r3, [r4, #4]
   145c0:	str	r3, [sp]
   145c4:	ldr	r3, [r4]
   145c8:	bl	10e74 <__fprintf_chk@plt>
   145cc:	b	14530 <strspn@plt+0x362c>
   145d0:	mov	r2, #5
   145d4:	ldr	r1, [pc, #336]	; 1472c <strspn@plt+0x3828>
   145d8:	mov	r0, #0
   145dc:	bl	10d24 <dcgettext@plt>
   145e0:	ldr	r3, [r4, #24]
   145e4:	mov	r2, r0
   145e8:	mov	r1, #1
   145ec:	mov	r0, r5
   145f0:	str	r3, [sp, #20]
   145f4:	ldr	r3, [r4, #20]
   145f8:	str	r3, [sp, #16]
   145fc:	ldr	r3, [r4, #16]
   14600:	str	r3, [sp, #12]
   14604:	ldr	r3, [r4, #12]
   14608:	str	r3, [sp, #8]
   1460c:	ldr	r3, [r4, #8]
   14610:	str	r3, [sp, #4]
   14614:	ldr	r3, [r4, #4]
   14618:	str	r3, [sp]
   1461c:	ldr	r3, [r4]
   14620:	bl	10e74 <__fprintf_chk@plt>
   14624:	b	14530 <strspn@plt+0x362c>
   14628:	mov	r2, #5
   1462c:	ldr	r1, [pc, #252]	; 14730 <strspn@plt+0x382c>
   14630:	mov	r0, #0
   14634:	bl	10d24 <dcgettext@plt>
   14638:	ldr	r3, [r4, #28]
   1463c:	mov	r2, r0
   14640:	mov	r1, #1
   14644:	mov	r0, r5
   14648:	str	r3, [sp, #24]
   1464c:	ldr	r3, [r4, #24]
   14650:	str	r3, [sp, #20]
   14654:	ldr	r3, [r4, #20]
   14658:	str	r3, [sp, #16]
   1465c:	ldr	r3, [r4, #16]
   14660:	str	r3, [sp, #12]
   14664:	ldr	r3, [r4, #12]
   14668:	str	r3, [sp, #8]
   1466c:	ldr	r3, [r4, #8]
   14670:	str	r3, [sp, #4]
   14674:	ldr	r3, [r4, #4]
   14678:	str	r3, [sp]
   1467c:	ldr	r3, [r4]
   14680:	bl	10e74 <__fprintf_chk@plt>
   14684:	b	14530 <strspn@plt+0x362c>
   14688:	ldr	r1, [pc, #164]	; 14734 <strspn@plt+0x3830>
   1468c:	mov	r2, #5
   14690:	mov	r0, #0
   14694:	bl	10d24 <dcgettext@plt>
   14698:	ldr	r3, [r4, #32]
   1469c:	mov	r2, r0
   146a0:	mov	r1, #1
   146a4:	mov	r0, r5
   146a8:	str	r3, [sp, #28]
   146ac:	ldr	r3, [r4, #28]
   146b0:	str	r3, [sp, #24]
   146b4:	ldr	r3, [r4, #24]
   146b8:	str	r3, [sp, #20]
   146bc:	ldr	r3, [r4, #20]
   146c0:	str	r3, [sp, #16]
   146c4:	ldr	r3, [r4, #16]
   146c8:	str	r3, [sp, #12]
   146cc:	ldr	r3, [r4, #12]
   146d0:	str	r3, [sp, #8]
   146d4:	ldr	r3, [r4, #8]
   146d8:	str	r3, [sp, #4]
   146dc:	ldr	r3, [r4, #4]
   146e0:	str	r3, [sp]
   146e4:	ldr	r3, [r4]
   146e8:	bl	10e74 <__fprintf_chk@plt>
   146ec:	b	14530 <strspn@plt+0x362c>
   146f0:	mov	r2, #5
   146f4:	ldr	r1, [pc, #60]	; 14738 <strspn@plt+0x3834>
   146f8:	b	14690 <strspn@plt+0x378c>
   146fc:	andeq	r5, r1, r3, ror fp
   14700:	andeq	r5, r1, r6, lsl #23
   14704:	andeq	r5, r1, r4, asr lr
   14708:	andeq	r5, r1, sl, lsl #23
   1470c:	andeq	r5, r1, r5, lsr ip
   14710:	andeq	r5, r1, pc, ror fp
   14714:	andeq	r5, r1, r7, asr ip
   14718:	andeq	r5, r1, r7, ror #24
   1471c:	andeq	r5, r1, lr, ror ip
   14720:	muleq	r1, sl, ip
   14724:			; <UNDEFINED> instruction: 0x00015cba
   14728:	ldrdeq	r5, [r1], -lr
   1472c:	andeq	r5, r1, r6, lsl #26
   14730:	andeq	r5, r1, r2, lsr sp
   14734:	andeq	r5, r1, r2, ror #26
   14738:	muleq	r1, r6, sp
   1473c:	push	{r0, r1, r4, lr}
   14740:	mov	ip, #0
   14744:	ldr	lr, [sp, #16]
   14748:	ldr	r4, [lr, ip, lsl #2]
   1474c:	cmp	r4, #0
   14750:	bne	14768 <strspn@plt+0x3864>
   14754:	str	lr, [sp]
   14758:	str	ip, [sp, #4]
   1475c:	bl	14374 <strspn@plt+0x3470>
   14760:	add	sp, sp, #8
   14764:	pop	{r4, pc}
   14768:	add	ip, ip, #1
   1476c:	b	14748 <strspn@plt+0x3844>
   14770:	push	{r4, r5, r6, lr}
   14774:	sub	sp, sp, #48	; 0x30
   14778:	mov	ip, #0
   1477c:	add	lr, sp, #8
   14780:	mov	r5, lr
   14784:	ldr	r6, [sp, #64]	; 0x40
   14788:	ldr	r4, [r6, ip, lsl #2]
   1478c:	cmp	r4, #0
   14790:	str	r4, [lr], #4
   14794:	beq	147a4 <strspn@plt+0x38a0>
   14798:	add	ip, ip, #1
   1479c:	cmp	ip, #10
   147a0:	bne	14788 <strspn@plt+0x3884>
   147a4:	stm	sp, {r5, ip}
   147a8:	bl	14374 <strspn@plt+0x3470>
   147ac:	add	sp, sp, #48	; 0x30
   147b0:	pop	{r4, r5, r6, pc}
   147b4:	push	{r3}		; (str r3, [sp, #-4]!)
   147b8:	push	{r0, r1, r2, r3, lr}
   147bc:	add	r3, sp, #24
   147c0:	str	r3, [sp]
   147c4:	str	r3, [sp, #12]
   147c8:	ldr	r3, [sp, #20]
   147cc:	bl	14770 <strspn@plt+0x386c>
   147d0:	add	sp, sp, #16
   147d4:	pop	{lr}		; (ldr lr, [sp], #4)
   147d8:	add	sp, sp, #4
   147dc:	bx	lr
   147e0:	ldr	r3, [pc, #116]	; 1485c <strspn@plt+0x3958>
   147e4:	mov	r0, #10
   147e8:	push	{r4, lr}
   147ec:	ldr	r1, [r3]
   147f0:	bl	10d18 <fputc_unlocked@plt>
   147f4:	mov	r2, #5
   147f8:	ldr	r1, [pc, #96]	; 14860 <strspn@plt+0x395c>
   147fc:	mov	r0, #0
   14800:	bl	10d24 <dcgettext@plt>
   14804:	mov	r1, r0
   14808:	ldr	r2, [pc, #84]	; 14864 <strspn@plt+0x3960>
   1480c:	mov	r0, #1
   14810:	bl	10e5c <__printf_chk@plt>
   14814:	mov	r2, #5
   14818:	ldr	r1, [pc, #72]	; 14868 <strspn@plt+0x3964>
   1481c:	mov	r0, #0
   14820:	bl	10d24 <dcgettext@plt>
   14824:	mov	r1, r0
   14828:	ldr	r3, [pc, #60]	; 1486c <strspn@plt+0x3968>
   1482c:	mov	r0, #1
   14830:	ldr	r2, [pc, #56]	; 14870 <strspn@plt+0x396c>
   14834:	bl	10e5c <__printf_chk@plt>
   14838:	mov	r2, #5
   1483c:	ldr	r1, [pc, #48]	; 14874 <strspn@plt+0x3970>
   14840:	mov	r0, #0
   14844:	bl	10d24 <dcgettext@plt>
   14848:	mov	r1, r0
   1484c:	ldr	r2, [pc, #36]	; 14878 <strspn@plt+0x3974>
   14850:	mov	r0, #1
   14854:	pop	{r4, lr}
   14858:	b	10e5c <__printf_chk@plt>
   1485c:	andeq	r6, r2, ip, asr #2
   14860:	ldrdeq	r5, [r1], -r2
   14864:	andeq	r5, r1, r6, ror #27
   14868:	strdeq	r5, [r1], -ip
   1486c:	andeq	r5, r1, fp, asr #15
   14870:	strdeq	r5, [r1], -r3
   14874:	andeq	r5, r1, r0, lsl lr
   14878:	andeq	r5, r1, r7, lsr lr
   1487c:	push	{r4, lr}
   14880:	bl	14bc8 <strspn@plt+0x3cc4>
   14884:	cmp	r0, #0
   14888:	popne	{r4, pc}
   1488c:	bl	14b34 <strspn@plt+0x3c30>
   14890:	push	{r4, lr}
   14894:	bl	14bc8 <strspn@plt+0x3cc4>
   14898:	cmp	r0, #0
   1489c:	popne	{r4, pc}
   148a0:	bl	14b34 <strspn@plt+0x3c30>
   148a4:	b	1487c <strspn@plt+0x3978>
   148a8:	push	{r4, r5, r6, lr}
   148ac:	mov	r5, r0
   148b0:	mov	r4, r1
   148b4:	bl	14bf4 <strspn@plt+0x3cf0>
   148b8:	cmp	r0, #0
   148bc:	popne	{r4, r5, r6, pc}
   148c0:	adds	r4, r4, #0
   148c4:	movne	r4, #1
   148c8:	cmp	r5, #0
   148cc:	moveq	r4, #1
   148d0:	cmp	r4, #0
   148d4:	popeq	{r4, r5, r6, pc}
   148d8:	bl	14b34 <strspn@plt+0x3c30>
   148dc:	push	{r4, lr}
   148e0:	bl	14e64 <strspn@plt+0x3f60>
   148e4:	cmp	r0, #0
   148e8:	popne	{r4, pc}
   148ec:	bl	14b34 <strspn@plt+0x3c30>
   148f0:	push	{r4, r5, r6, lr}
   148f4:	mov	r6, r0
   148f8:	mov	r5, r1
   148fc:	mov	r4, r2
   14900:	bl	14f0c <strspn@plt+0x4008>
   14904:	cmp	r0, #0
   14908:	popne	{r4, r5, r6, pc}
   1490c:	cmp	r6, #0
   14910:	beq	14920 <strspn@plt+0x3a1c>
   14914:	cmp	r5, #0
   14918:	cmpne	r4, #0
   1491c:	popeq	{r4, r5, r6, pc}
   14920:	bl	14b34 <strspn@plt+0x3c30>
   14924:	b	148f0 <strspn@plt+0x39ec>
   14928:	push	{r4, lr}
   1492c:	bl	14e74 <strspn@plt+0x3f70>
   14930:	cmp	r0, #0
   14934:	popne	{r4, pc}
   14938:	bl	14b34 <strspn@plt+0x3c30>
   1493c:	mov	r2, r1
   14940:	mov	r1, r0
   14944:	mov	r0, #0
   14948:	b	148f0 <strspn@plt+0x39ec>
   1494c:	mov	r2, r1
   14950:	mov	r1, r0
   14954:	mov	r0, #0
   14958:	b	14928 <strspn@plt+0x3a24>
   1495c:	cmp	r0, #0
   14960:	push	{r4, r5, r6, lr}
   14964:	mov	r5, r1
   14968:	ldr	r4, [r1]
   1496c:	bne	14998 <strspn@plt+0x3a94>
   14970:	cmp	r4, #0
   14974:	bne	14988 <strspn@plt+0x3a84>
   14978:	mov	r4, #64	; 0x40
   1497c:	udiv	r4, r4, r2
   14980:	cmp	r2, #64	; 0x40
   14984:	addhi	r4, r4, #1
   14988:	mov	r1, r4
   1498c:	bl	148f0 <strspn@plt+0x39ec>
   14990:	str	r4, [r5]
   14994:	pop	{r4, r5, r6, pc}
   14998:	lsr	r3, r4, #1
   1499c:	add	r3, r3, #1
   149a0:	adds	r4, r4, r3
   149a4:	bcc	14988 <strspn@plt+0x3a84>
   149a8:	bl	14b34 <strspn@plt+0x3c30>
   149ac:	mov	r2, #1
   149b0:	b	1495c <strspn@plt+0x3a58>
   149b4:	ldr	ip, [r1]
   149b8:	push	{r4, r5, r6, r7, r8, lr}
   149bc:	mov	r5, r1
   149c0:	mvn	r8, r3
   149c4:	lsr	r8, r8, #31
   149c8:	ldr	lr, [sp, #24]
   149cc:	asr	r1, ip, #1
   149d0:	adds	r4, ip, r1
   149d4:	mvnvs	r4, #-2147483648	; 0x80000000
   149d8:	cmp	r3, r4
   149dc:	movge	r1, #0
   149e0:	andlt	r1, r8, #1
   149e4:	cmp	r1, #0
   149e8:	movne	r4, r3
   149ec:	smull	r6, r7, r4, lr
   149f0:	cmp	r7, r6, asr #31
   149f4:	bne	14a0c <strspn@plt+0x3b08>
   149f8:	cmp	r6, #63	; 0x3f
   149fc:	mov	r1, r6
   14a00:	bgt	14a1c <strspn@plt+0x3b18>
   14a04:	mov	r1, #64	; 0x40
   14a08:	b	14a10 <strspn@plt+0x3b0c>
   14a0c:	mvn	r1, #-2147483648	; 0x80000000
   14a10:	sdiv	r4, r1, lr
   14a14:	mls	r6, lr, r4, r1
   14a18:	sub	r1, r1, r6
   14a1c:	cmp	r0, #0
   14a20:	sub	r6, r4, ip
   14a24:	streq	r0, [r5]
   14a28:	cmp	r6, r2
   14a2c:	bge	14a60 <strspn@plt+0x3b5c>
   14a30:	adds	r4, ip, r2
   14a34:	bvs	14a5c <strspn@plt+0x3b58>
   14a38:	cmp	r4, r3
   14a3c:	movle	r3, #0
   14a40:	andgt	r3, r8, #1
   14a44:	cmp	r3, #0
   14a48:	bne	14a5c <strspn@plt+0x3b58>
   14a4c:	smull	r2, r3, r4, lr
   14a50:	cmp	r3, r2, asr #31
   14a54:	mov	r1, r2
   14a58:	beq	14a60 <strspn@plt+0x3b5c>
   14a5c:	bl	14b34 <strspn@plt+0x3c30>
   14a60:	bl	148a8 <strspn@plt+0x39a4>
   14a64:	str	r4, [r5]
   14a68:	pop	{r4, r5, r6, r7, r8, pc}
   14a6c:	push	{r4, lr}
   14a70:	bl	14b74 <strspn@plt+0x3c70>
   14a74:	cmp	r0, #0
   14a78:	popne	{r4, pc}
   14a7c:	bl	14b34 <strspn@plt+0x3c30>
   14a80:	mov	r1, #1
   14a84:	b	14a6c <strspn@plt+0x3b68>
   14a88:	push	{r4, lr}
   14a8c:	bl	14b74 <strspn@plt+0x3c70>
   14a90:	cmp	r0, #0
   14a94:	popne	{r4, pc}
   14a98:	bl	14b34 <strspn@plt+0x3c30>
   14a9c:	mov	r1, #1
   14aa0:	b	14a88 <strspn@plt+0x3b84>
   14aa4:	push	{r4, r5, r6, lr}
   14aa8:	mov	r4, r1
   14aac:	mov	r5, r0
   14ab0:	mov	r0, r1
   14ab4:	bl	1487c <strspn@plt+0x3978>
   14ab8:	mov	r2, r4
   14abc:	mov	r1, r5
   14ac0:	pop	{r4, r5, r6, lr}
   14ac4:	b	10cf4 <memcpy@plt>
   14ac8:	push	{r4, r5, r6, lr}
   14acc:	mov	r4, r1
   14ad0:	mov	r5, r0
   14ad4:	mov	r0, r1
   14ad8:	bl	14890 <strspn@plt+0x398c>
   14adc:	mov	r2, r4
   14ae0:	mov	r1, r5
   14ae4:	pop	{r4, r5, r6, lr}
   14ae8:	b	10cf4 <memcpy@plt>
   14aec:	push	{r4, r5, r6, lr}
   14af0:	mov	r5, r0
   14af4:	add	r0, r1, #1
   14af8:	mov	r4, r1
   14afc:	bl	14890 <strspn@plt+0x398c>
   14b00:	mov	r2, #0
   14b04:	mov	r1, r5
   14b08:	strb	r2, [r0, r4]
   14b0c:	mov	r2, r4
   14b10:	pop	{r4, r5, r6, lr}
   14b14:	b	10cf4 <memcpy@plt>
   14b18:	push	{r4, lr}
   14b1c:	mov	r4, r0
   14b20:	bl	10e2c <strlen@plt>
   14b24:	add	r1, r0, #1
   14b28:	mov	r0, r4
   14b2c:	pop	{r4, lr}
   14b30:	b	14aa4 <strspn@plt+0x3ba0>
   14b34:	ldr	r3, [pc, #44]	; 14b68 <strspn@plt+0x3c64>
   14b38:	mov	r2, #5
   14b3c:	mov	r0, #0
   14b40:	push	{r4, lr}
   14b44:	ldr	r1, [pc, #32]	; 14b6c <strspn@plt+0x3c68>
   14b48:	ldr	r4, [r3]
   14b4c:	bl	10d24 <dcgettext@plt>
   14b50:	mov	r3, r0
   14b54:	ldr	r2, [pc, #20]	; 14b70 <strspn@plt+0x3c6c>
   14b58:	mov	r1, #0
   14b5c:	mov	r0, r4
   14b60:	bl	10db4 <error@plt>
   14b64:	bl	10eec <abort@plt>
   14b68:	strdeq	r6, [r2], -r4
   14b6c:	andeq	r5, r1, r3, lsl #29
   14b70:	strdeq	r5, [r1], -r5	; <UNPREDICTABLE>
   14b74:	cmp	r1, #0
   14b78:	cmpne	r0, #0
   14b7c:	beq	14bb4 <strspn@plt+0x3cb0>
   14b80:	push	{r4, r5, r6, lr}
   14b84:	umull	r4, r5, r0, r1
   14b88:	adds	r3, r5, #0
   14b8c:	movne	r3, #1
   14b90:	cmp	r4, #0
   14b94:	blt	14ba0 <strspn@plt+0x3c9c>
   14b98:	cmp	r3, #0
   14b9c:	beq	14bc0 <strspn@plt+0x3cbc>
   14ba0:	bl	10e38 <__errno_location@plt>
   14ba4:	mov	r3, #12
   14ba8:	str	r3, [r0]
   14bac:	mov	r0, #0
   14bb0:	pop	{r4, r5, r6, pc}
   14bb4:	mov	r1, #1
   14bb8:	mov	r0, r1
   14bbc:	b	10c88 <calloc@plt>
   14bc0:	pop	{r4, r5, r6, lr}
   14bc4:	b	14bbc <strspn@plt+0x3cb8>
   14bc8:	cmp	r0, #0
   14bcc:	beq	14bec <strspn@plt+0x3ce8>
   14bd0:	bge	14bf0 <strspn@plt+0x3cec>
   14bd4:	push	{r4, lr}
   14bd8:	bl	10e38 <__errno_location@plt>
   14bdc:	mov	r3, #12
   14be0:	str	r3, [r0]
   14be4:	mov	r0, #0
   14be8:	pop	{r4, pc}
   14bec:	mov	r0, #1
   14bf0:	b	10dc0 <malloc@plt>
   14bf4:	cmp	r0, #0
   14bf8:	bne	14c04 <strspn@plt+0x3d00>
   14bfc:	mov	r0, r1
   14c00:	b	14bc8 <strspn@plt+0x3cc4>
   14c04:	cmp	r1, #0
   14c08:	push	{r4, lr}
   14c0c:	bne	14c1c <strspn@plt+0x3d18>
   14c10:	bl	11de8 <strspn@plt+0xee4>
   14c14:	mov	r0, #0
   14c18:	pop	{r4, pc}
   14c1c:	blt	14c28 <strspn@plt+0x3d24>
   14c20:	pop	{r4, lr}
   14c24:	b	10d30 <realloc@plt>
   14c28:	bl	10e38 <__errno_location@plt>
   14c2c:	mov	r3, #12
   14c30:	str	r3, [r0]
   14c34:	b	14c14 <strspn@plt+0x3d10>
   14c38:	push	{r4, r5, r6, lr}
   14c3c:	mov	r4, r0
   14c40:	bl	10d90 <__fpending@plt>
   14c44:	mov	r5, r0
   14c48:	mov	r0, r4
   14c4c:	bl	10d9c <ferror_unlocked@plt>
   14c50:	mov	r6, r0
   14c54:	mov	r0, r4
   14c58:	bl	14ca8 <strspn@plt+0x3da4>
   14c5c:	cmp	r6, #0
   14c60:	mov	r4, r0
   14c64:	bne	14c90 <strspn@plt+0x3d8c>
   14c68:	cmp	r0, #0
   14c6c:	beq	14c88 <strspn@plt+0x3d84>
   14c70:	cmp	r5, #0
   14c74:	bne	14ca0 <strspn@plt+0x3d9c>
   14c78:	bl	10e38 <__errno_location@plt>
   14c7c:	ldr	r4, [r0]
   14c80:	subs	r4, r4, #9
   14c84:	mvnne	r4, #0
   14c88:	mov	r0, r4
   14c8c:	pop	{r4, r5, r6, pc}
   14c90:	cmp	r0, #0
   14c94:	bne	14ca0 <strspn@plt+0x3d9c>
   14c98:	bl	10e38 <__errno_location@plt>
   14c9c:	str	r4, [r0]
   14ca0:	mvn	r4, #0
   14ca4:	b	14c88 <strspn@plt+0x3d84>
   14ca8:	push	{r0, r1, r2, r4, r5, lr}
   14cac:	mov	r4, r0
   14cb0:	bl	10e68 <fileno@plt>
   14cb4:	cmp	r0, #0
   14cb8:	mov	r0, r4
   14cbc:	bge	14ccc <strspn@plt+0x3dc8>
   14cc0:	add	sp, sp, #12
   14cc4:	pop	{r4, r5, lr}
   14cc8:	b	10e80 <fclose@plt>
   14ccc:	bl	10dd8 <__freading@plt>
   14cd0:	cmp	r0, #0
   14cd4:	bne	14d10 <strspn@plt+0x3e0c>
   14cd8:	mov	r0, r4
   14cdc:	bl	14d50 <strspn@plt+0x3e4c>
   14ce0:	cmp	r0, #0
   14ce4:	bne	14d44 <strspn@plt+0x3e40>
   14ce8:	mov	r5, #0
   14cec:	mov	r0, r4
   14cf0:	bl	10e80 <fclose@plt>
   14cf4:	cmp	r5, #0
   14cf8:	beq	14d08 <strspn@plt+0x3e04>
   14cfc:	bl	10e38 <__errno_location@plt>
   14d00:	str	r5, [r0]
   14d04:	mvn	r0, #0
   14d08:	add	sp, sp, #12
   14d0c:	pop	{r4, r5, pc}
   14d10:	mov	r0, r4
   14d14:	bl	10e68 <fileno@plt>
   14d18:	mov	r3, #1
   14d1c:	mov	r2, #0
   14d20:	str	r3, [sp]
   14d24:	mov	r3, #0
   14d28:	bl	10d6c <lseek64@plt>
   14d2c:	mvn	r3, #0
   14d30:	mvn	r2, #0
   14d34:	cmp	r1, r3
   14d38:	cmpeq	r0, r2
   14d3c:	bne	14cd8 <strspn@plt+0x3dd4>
   14d40:	b	14ce8 <strspn@plt+0x3de4>
   14d44:	bl	10e38 <__errno_location@plt>
   14d48:	ldr	r5, [r0]
   14d4c:	b	14cec <strspn@plt+0x3de8>
   14d50:	push	{r0, r1, r4, lr}
   14d54:	subs	r4, r0, #0
   14d58:	bne	14d6c <strspn@plt+0x3e68>
   14d5c:	mov	r0, r4
   14d60:	add	sp, sp, #8
   14d64:	pop	{r4, lr}
   14d68:	b	10cb8 <fflush@plt>
   14d6c:	bl	10dd8 <__freading@plt>
   14d70:	cmp	r0, #0
   14d74:	beq	14d5c <strspn@plt+0x3e58>
   14d78:	ldr	r3, [r4]
   14d7c:	tst	r3, #256	; 0x100
   14d80:	beq	14d5c <strspn@plt+0x3e58>
   14d84:	mov	r3, #1
   14d88:	mov	r2, #0
   14d8c:	mov	r0, r4
   14d90:	str	r3, [sp]
   14d94:	mov	r3, #0
   14d98:	bl	14da0 <strspn@plt+0x3e9c>
   14d9c:	b	14d5c <strspn@plt+0x3e58>
   14da0:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   14da4:	mov	r4, r0
   14da8:	ldmib	r0, {ip, lr}
   14dac:	ldr	r8, [sp, #32]
   14db0:	cmp	lr, ip
   14db4:	bne	14e24 <strspn@plt+0x3f20>
   14db8:	ldr	ip, [r0, #16]
   14dbc:	ldr	lr, [r0, #20]
   14dc0:	cmp	lr, ip
   14dc4:	bne	14e24 <strspn@plt+0x3f20>
   14dc8:	ldr	r5, [r0, #36]	; 0x24
   14dcc:	cmp	r5, #0
   14dd0:	bne	14e24 <strspn@plt+0x3f20>
   14dd4:	mov	r6, r2
   14dd8:	mov	r7, r3
   14ddc:	bl	10e68 <fileno@plt>
   14de0:	mov	r2, r6
   14de4:	mov	r3, r7
   14de8:	str	r8, [sp]
   14dec:	bl	10d6c <lseek64@plt>
   14df0:	mvn	r3, #0
   14df4:	mvn	r2, #0
   14df8:	cmp	r1, r3
   14dfc:	cmpeq	r0, r2
   14e00:	mvneq	r0, #0
   14e04:	beq	14e1c <strspn@plt+0x3f18>
   14e08:	ldr	r3, [r4]
   14e0c:	strd	r0, [r4, #80]	; 0x50
   14e10:	mov	r0, r5
   14e14:	bic	r3, r3, #16
   14e18:	str	r3, [r4]
   14e1c:	add	sp, sp, #8
   14e20:	pop	{r4, r5, r6, r7, r8, pc}
   14e24:	mov	r0, r4
   14e28:	str	r8, [sp, #32]
   14e2c:	add	sp, sp, #8
   14e30:	pop	{r4, r5, r6, r7, r8, lr}
   14e34:	b	10e8c <fseeko64@plt>
   14e38:	sub	r0, r0, #1
   14e3c:	mov	r3, #0
   14e40:	ldrb	r2, [r0, #1]!
   14e44:	cmp	r2, #0
   14e48:	bne	14e58 <strspn@plt+0x3f54>
   14e4c:	udiv	r0, r3, r1
   14e50:	mls	r0, r1, r0, r3
   14e54:	bx	lr
   14e58:	add	r3, r2, r3, ror #23
   14e5c:	b	14e40 <strspn@plt+0x3f3c>
   14e60:	b	14bc8 <strspn@plt+0x3cc4>
   14e64:	cmp	r1, #0
   14e68:	orreq	r1, r1, #1
   14e6c:	b	14bf4 <strspn@plt+0x3cf0>
   14e70:	b	14b74 <strspn@plt+0x3c70>
   14e74:	cmp	r2, #0
   14e78:	cmpne	r1, #0
   14e7c:	moveq	r2, #1
   14e80:	moveq	r1, r2
   14e84:	b	14f0c <strspn@plt+0x4008>
   14e88:	push	{r4, lr}
   14e8c:	mov	r0, #14
   14e90:	bl	10eb0 <nl_langinfo@plt>
   14e94:	cmp	r0, #0
   14e98:	beq	14eb0 <strspn@plt+0x3fac>
   14e9c:	ldrb	r2, [r0]
   14ea0:	ldr	r3, [pc, #16]	; 14eb8 <strspn@plt+0x3fb4>
   14ea4:	cmp	r2, #0
   14ea8:	moveq	r0, r3
   14eac:	pop	{r4, pc}
   14eb0:	ldr	r0, [pc]	; 14eb8 <strspn@plt+0x3fb4>
   14eb4:	pop	{r4, pc}
   14eb8:	muleq	r1, r4, lr
   14ebc:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   14ec0:	subs	r5, r0, #0
   14ec4:	mov	r7, r2
   14ec8:	addeq	r5, sp, #4
   14ecc:	mov	r6, r1
   14ed0:	mov	r0, r5
   14ed4:	bl	10da8 <mbrtowc@plt>
   14ed8:	cmp	r7, #0
   14edc:	cmnne	r0, #3
   14ee0:	mov	r4, r0
   14ee4:	bls	14f00 <strspn@plt+0x3ffc>
   14ee8:	mov	r0, #0
   14eec:	bl	14f38 <strspn@plt+0x4034>
   14ef0:	cmp	r0, #0
   14ef4:	ldrbeq	r3, [r6]
   14ef8:	moveq	r4, #1
   14efc:	streq	r3, [r5]
   14f00:	mov	r0, r4
   14f04:	add	sp, sp, #12
   14f08:	pop	{r4, r5, r6, r7, pc}
   14f0c:	umull	r2, r3, r1, r2
   14f10:	cmp	r3, #0
   14f14:	bne	14f20 <strspn@plt+0x401c>
   14f18:	mov	r1, r2
   14f1c:	b	14bf4 <strspn@plt+0x3cf0>
   14f20:	push	{r4, lr}
   14f24:	bl	10e38 <__errno_location@plt>
   14f28:	mov	r3, #12
   14f2c:	str	r3, [r0]
   14f30:	mov	r0, #0
   14f34:	pop	{r4, pc}
   14f38:	push	{lr}		; (str lr, [sp, #-4]!)
   14f3c:	sub	sp, sp, #268	; 0x10c
   14f40:	movw	r2, #257	; 0x101
   14f44:	add	r1, sp, #4
   14f48:	bl	14f94 <strspn@plt+0x4090>
   14f4c:	cmp	r0, #0
   14f50:	movne	r0, #0
   14f54:	bne	14f84 <strspn@plt+0x4080>
   14f58:	ldr	r1, [pc, #44]	; 14f8c <strspn@plt+0x4088>
   14f5c:	add	r0, sp, #4
   14f60:	bl	10cac <strcmp@plt>
   14f64:	cmp	r0, #0
   14f68:	beq	14f80 <strspn@plt+0x407c>
   14f6c:	ldr	r1, [pc, #28]	; 14f90 <strspn@plt+0x408c>
   14f70:	add	r0, sp, #4
   14f74:	bl	10cac <strcmp@plt>
   14f78:	adds	r0, r0, #0
   14f7c:	movne	r0, #1
   14f80:	and	r0, r0, #1
   14f84:	add	sp, sp, #268	; 0x10c
   14f88:	pop	{pc}		; (ldr pc, [sp], #4)
   14f8c:	muleq	r1, sl, lr
   14f90:	muleq	r1, ip, lr
   14f94:	push	{r4, r5, r6, lr}
   14f98:	mov	r5, r1
   14f9c:	mov	r1, #0
   14fa0:	mov	r4, r2
   14fa4:	bl	10e98 <setlocale@plt>
   14fa8:	subs	r6, r0, #0
   14fac:	bne	14fc0 <strspn@plt+0x40bc>
   14fb0:	cmp	r4, #0
   14fb4:	mov	r0, #22
   14fb8:	strbne	r6, [r5]
   14fbc:	pop	{r4, r5, r6, pc}
   14fc0:	bl	10e2c <strlen@plt>
   14fc4:	cmp	r4, r0
   14fc8:	bls	14fe4 <strspn@plt+0x40e0>
   14fcc:	add	r2, r0, #1
   14fd0:	mov	r1, r6
   14fd4:	mov	r0, r5
   14fd8:	bl	10cf4 <memcpy@plt>
   14fdc:	mov	r0, #0
   14fe0:	pop	{r4, r5, r6, pc}
   14fe4:	cmp	r4, #0
   14fe8:	beq	15008 <strspn@plt+0x4104>
   14fec:	sub	r4, r4, #1
   14ff0:	mov	r1, r6
   14ff4:	mov	r2, r4
   14ff8:	mov	r0, r5
   14ffc:	bl	10cf4 <memcpy@plt>
   15000:	mov	r3, #0
   15004:	strb	r3, [r5, r4]
   15008:	mov	r0, #34	; 0x22
   1500c:	pop	{r4, r5, r6, pc}
   15010:	mov	r1, #0
   15014:	b	10e98 <setlocale@plt>
   15018:	cmp	r3, #0
   1501c:	cmpeq	r2, #0
   15020:	bne	15038 <strspn@plt+0x4134>
   15024:	cmp	r1, #0
   15028:	cmpeq	r0, #0
   1502c:	mvnne	r1, #0
   15030:	mvnne	r0, #0
   15034:	b	15054 <strspn@plt+0x4150>
   15038:	sub	sp, sp, #8
   1503c:	push	{sp, lr}
   15040:	bl	15064 <strspn@plt+0x4160>
   15044:	ldr	lr, [sp, #4]
   15048:	add	sp, sp, #8
   1504c:	pop	{r2, r3}
   15050:	bx	lr
   15054:	push	{r1, lr}
   15058:	mov	r0, #8
   1505c:	bl	10ca0 <raise@plt>
   15060:	pop	{r1, pc}
   15064:	cmp	r1, r3
   15068:	cmpeq	r0, r2
   1506c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15070:	mov	r4, r0
   15074:	movcc	r0, #0
   15078:	mov	r5, r1
   1507c:	ldr	lr, [sp, #36]	; 0x24
   15080:	movcc	r1, r0
   15084:	bcc	15180 <strspn@plt+0x427c>
   15088:	cmp	r3, #0
   1508c:	clzeq	ip, r2
   15090:	clzne	ip, r3
   15094:	addeq	ip, ip, #32
   15098:	cmp	r5, #0
   1509c:	clzeq	r1, r4
   150a0:	addeq	r1, r1, #32
   150a4:	clzne	r1, r5
   150a8:	sub	ip, ip, r1
   150ac:	sub	sl, ip, #32
   150b0:	lsl	r9, r3, ip
   150b4:	rsb	fp, ip, #32
   150b8:	orr	r9, r9, r2, lsl sl
   150bc:	orr	r9, r9, r2, lsr fp
   150c0:	lsl	r8, r2, ip
   150c4:	cmp	r5, r9
   150c8:	cmpeq	r4, r8
   150cc:	movcc	r0, #0
   150d0:	movcc	r1, r0
   150d4:	bcc	150f0 <strspn@plt+0x41ec>
   150d8:	mov	r0, #1
   150dc:	subs	r4, r4, r8
   150e0:	lsl	r1, r0, sl
   150e4:	orr	r1, r1, r0, lsr fp
   150e8:	lsl	r0, r0, ip
   150ec:	sbc	r5, r5, r9
   150f0:	cmp	ip, #0
   150f4:	beq	15180 <strspn@plt+0x427c>
   150f8:	lsr	r6, r8, #1
   150fc:	orr	r6, r6, r9, lsl #31
   15100:	lsr	r7, r9, #1
   15104:	mov	r2, ip
   15108:	b	1512c <strspn@plt+0x4228>
   1510c:	subs	r3, r4, r6
   15110:	sbc	r8, r5, r7
   15114:	adds	r3, r3, r3
   15118:	adc	r8, r8, r8
   1511c:	adds	r4, r3, #1
   15120:	adc	r5, r8, #0
   15124:	subs	r2, r2, #1
   15128:	beq	15148 <strspn@plt+0x4244>
   1512c:	cmp	r5, r7
   15130:	cmpeq	r4, r6
   15134:	bcs	1510c <strspn@plt+0x4208>
   15138:	adds	r4, r4, r4
   1513c:	adc	r5, r5, r5
   15140:	subs	r2, r2, #1
   15144:	bne	1512c <strspn@plt+0x4228>
   15148:	lsr	r3, r4, ip
   1514c:	orr	r3, r3, r5, lsl fp
   15150:	lsr	r2, r5, ip
   15154:	orr	r3, r3, r5, lsr sl
   15158:	adds	r0, r0, r4
   1515c:	mov	r4, r3
   15160:	lsl	r3, r2, ip
   15164:	orr	r3, r3, r4, lsl sl
   15168:	lsl	ip, r4, ip
   1516c:	orr	r3, r3, r4, lsr fp
   15170:	adc	r1, r1, r5
   15174:	subs	r0, r0, ip
   15178:	mov	r5, r2
   1517c:	sbc	r1, r1, r3
   15180:	cmp	lr, #0
   15184:	strdne	r4, [lr]
   15188:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1518c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15190:	mov	r7, r0
   15194:	ldr	r6, [pc, #72]	; 151e4 <strspn@plt+0x42e0>
   15198:	ldr	r5, [pc, #72]	; 151e8 <strspn@plt+0x42e4>
   1519c:	add	r6, pc, r6
   151a0:	add	r5, pc, r5
   151a4:	sub	r6, r6, r5
   151a8:	mov	r8, r1
   151ac:	mov	r9, r2
   151b0:	bl	10c68 <calloc@plt-0x20>
   151b4:	asrs	r6, r6, #2
   151b8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   151bc:	mov	r4, #0
   151c0:	add	r4, r4, #1
   151c4:	ldr	r3, [r5], #4
   151c8:	mov	r2, r9
   151cc:	mov	r1, r8
   151d0:	mov	r0, r7
   151d4:	blx	r3
   151d8:	cmp	r6, r4
   151dc:	bne	151c0 <strspn@plt+0x42bc>
   151e0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   151e4:	andeq	r0, r1, r0, ror sp
   151e8:	andeq	r0, r1, r8, ror #26
   151ec:	bx	lr
   151f0:	ldr	r3, [pc, #12]	; 15204 <strspn@plt+0x4300>
   151f4:	mov	r1, #0
   151f8:	add	r3, pc, r3
   151fc:	ldr	r2, [r3]
   15200:	b	10e44 <__cxa_atexit@plt>
   15204:	andeq	r0, r1, ip, ror #29
   15208:	mov	r2, r1
   1520c:	mov	r1, r0
   15210:	mov	r0, #3
   15214:	b	10ec8 <__xstat64@plt>

Disassembly of section .fini:

00015218 <.fini>:
   15218:	push	{r3, lr}
   1521c:	pop	{r3, pc}
