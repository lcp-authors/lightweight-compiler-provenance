
../repos/prog2/MT2E1-1:     file format elf32-littlearm


Disassembly of section .init:

00010c88 <.init>:
   10c88:	push	{r3, lr}
   10c8c:	bl	10f2c <_start@@Base+0x3c>
   10c90:	pop	{r3, pc}

Disassembly of section .plt:

00010c94 <calloc@plt-0x14>:
   10c94:	push	{lr}		; (str lr, [sp, #-4]!)
   10c98:	ldr	lr, [pc, #4]	; 10ca4 <calloc@plt-0x4>
   10c9c:	add	lr, pc, lr
   10ca0:	ldr	pc, [lr, #8]!
   10ca4:	andeq	r1, r1, ip, asr r3

00010ca8 <calloc@plt>:
   10ca8:	add	ip, pc, #0, 12
   10cac:	add	ip, ip, #69632	; 0x11000
   10cb0:	ldr	pc, [ip, #860]!	; 0x35c

00010cb4 <strcmp@plt>:
   10cb4:	add	ip, pc, #0, 12
   10cb8:	add	ip, ip, #69632	; 0x11000
   10cbc:	ldr	pc, [ip, #852]!	; 0x354

00010cc0 <printf@plt>:
   10cc0:	add	ip, pc, #0, 12
   10cc4:	add	ip, ip, #69632	; 0x11000
   10cc8:	ldr	pc, [ip, #844]!	; 0x34c

00010ccc <__isoc99_fscanf@plt>:
   10ccc:	add	ip, pc, #0, 12
   10cd0:	add	ip, ip, #69632	; 0x11000
   10cd4:	ldr	pc, [ip, #836]!	; 0x344

00010cd8 <fopen@plt>:
   10cd8:	add	ip, pc, #0, 12
   10cdc:	add	ip, ip, #69632	; 0x11000
   10ce0:	ldr	pc, [ip, #828]!	; 0x33c

00010ce4 <free@plt>:
   10ce4:	add	ip, pc, #0, 12
   10ce8:	add	ip, ip, #69632	; 0x11000
   10cec:	ldr	pc, [ip, #820]!	; 0x334

00010cf0 <memcpy@plt>:
   10cf0:	add	ip, pc, #0, 12
   10cf4:	add	ip, ip, #69632	; 0x11000
   10cf8:	ldr	pc, [ip, #812]!	; 0x32c

00010cfc <realloc@plt>:
   10cfc:	add	ip, pc, #0, 12
   10d00:	add	ip, ip, #69632	; 0x11000
   10d04:	ldr	pc, [ip, #804]!	; 0x324

00010d08 <strcpy@plt>:
   10d08:	add	ip, pc, #0, 12
   10d0c:	add	ip, ip, #69632	; 0x11000
   10d10:	ldr	pc, [ip, #796]!	; 0x31c

00010d14 <puts@plt>:
   10d14:	add	ip, pc, #0, 12
   10d18:	add	ip, ip, #69632	; 0x11000
   10d1c:	ldr	pc, [ip, #788]!	; 0x314

00010d20 <malloc@plt>:
   10d20:	add	ip, pc, #0, 12
   10d24:	add	ip, ip, #69632	; 0x11000
   10d28:	ldr	pc, [ip, #780]!	; 0x30c

00010d2c <__libc_start_main@plt>:
   10d2c:	add	ip, pc, #0, 12
   10d30:	add	ip, ip, #69632	; 0x11000
   10d34:	ldr	pc, [ip, #772]!	; 0x304

00010d38 <__gmon_start__@plt>:
   10d38:	add	ip, pc, #0, 12
   10d3c:	add	ip, ip, #69632	; 0x11000
   10d40:	ldr	pc, [ip, #764]!	; 0x2fc

00010d44 <strlen@plt>:
   10d44:	add	ip, pc, #0, 12
   10d48:	add	ip, ip, #69632	; 0x11000
   10d4c:	ldr	pc, [ip, #756]!	; 0x2f4

00010d50 <setvbuf@plt>:
   10d50:	add	ip, pc, #0, 12
   10d54:	add	ip, ip, #69632	; 0x11000
   10d58:	ldr	pc, [ip, #748]!	; 0x2ec

00010d5c <putchar@plt>:
   10d5c:	add	ip, pc, #0, 12
   10d60:	add	ip, ip, #69632	; 0x11000
   10d64:	ldr	pc, [ip, #740]!	; 0x2e4

00010d68 <fclose@plt>:
   10d68:	add	ip, pc, #0, 12
   10d6c:	add	ip, ip, #69632	; 0x11000
   10d70:	ldr	pc, [ip, #732]!	; 0x2dc

00010d74 <abort@plt>:
   10d74:	add	ip, pc, #0, 12
   10d78:	add	ip, ip, #69632	; 0x11000
   10d7c:	ldr	pc, [ip, #724]!	; 0x2d4

Disassembly of section .text:

00010d80 <main@@Base>:
   10d80:	ldr	r0, [pc, #312]	; 10ec0 <main@@Base+0x140>
   10d84:	mov	r3, #0
   10d88:	mov	r2, #2
   10d8c:	push	{r4, r5, r6, r7, r8, lr}
   10d90:	mov	r1, r3
   10d94:	sub	sp, sp, #504	; 0x1f8
   10d98:	ldr	r7, [pc, #292]	; 10ec4 <main@@Base+0x144>
   10d9c:	ldr	r0, [r0]
   10da0:	bl	10d50 <setvbuf@plt>
   10da4:	ldr	r1, [pc, #284]	; 10ec8 <main@@Base+0x148>
   10da8:	ldr	r0, [pc, #284]	; 10ecc <main@@Base+0x14c>
   10dac:	bl	10cd8 <fopen@plt>
   10db0:	mov	r6, r0
   10db4:	ldr	r1, [pc, #268]	; 10ec8 <main@@Base+0x148>
   10db8:	ldr	r0, [pc, #272]	; 10ed0 <main@@Base+0x150>
   10dbc:	bl	10cd8 <fopen@plt>
   10dc0:	mov	r5, r0
   10dc4:	ldr	r0, [pc, #264]	; 10ed4 <main@@Base+0x154>
   10dc8:	bl	10d14 <puts@plt>
   10dcc:	bl	11094 <avl_nova@@Base>
   10dd0:	mov	r4, r0
   10dd4:	add	r2, sp, #4
   10dd8:	mov	r1, r7
   10ddc:	mov	r0, r6
   10de0:	bl	10ccc <__isoc99_fscanf@plt>
   10de4:	cmp	r0, #1
   10de8:	beq	10e9c <main@@Base+0x11c>
   10dec:	ldr	r0, [pc, #228]	; 10ed8 <main@@Base+0x158>
   10df0:	bl	10cc0 <printf@plt>
   10df4:	mov	r0, r4
   10df8:	ldr	r7, [pc, #196]	; 10ec4 <main@@Base+0x144>
   10dfc:	bl	1166c <avl_imprime@@Base>
   10e00:	ldr	r0, [pc, #212]	; 10edc <main@@Base+0x15c>
   10e04:	bl	10cc0 <printf@plt>
   10e08:	ldr	r1, [pc, #208]	; 10ee0 <main@@Base+0x160>
   10e0c:	mov	r0, r4
   10e10:	bl	10fe0 <avl_max_subarvore@@Base>
   10e14:	mov	r0, r4
   10e18:	ldr	r8, [pc, #196]	; 10ee4 <main@@Base+0x164>
   10e1c:	bl	115c4 <avl_apaga@@Base>
   10e20:	ldr	r0, [pc, #192]	; 10ee8 <main@@Base+0x168>
   10e24:	bl	10d14 <puts@plt>
   10e28:	ldr	r1, [pc, #188]	; 10eec <main@@Base+0x16c>
   10e2c:	movw	r0, #601	; 0x259
   10e30:	bl	1168c <tabela_nova@@Base>
   10e34:	mov	r4, r0
   10e38:	add	r2, sp, #4
   10e3c:	mov	r1, r7
   10e40:	mov	r0, r5
   10e44:	bl	10ccc <__isoc99_fscanf@plt>
   10e48:	cmp	r0, #1
   10e4c:	beq	10eac <main@@Base+0x12c>
   10e50:	mov	r0, r4
   10e54:	bl	11ac4 <mostraTabela@@Base>
   10e58:	movw	r1, #619	; 0x26b
   10e5c:	mov	r0, r4
   10e60:	bl	11028 <tabela_copia@@Base>
   10e64:	subs	r7, r0, #0
   10e68:	beq	10e70 <main@@Base+0xf0>
   10e6c:	bl	11ac4 <mostraTabela@@Base>
   10e70:	mov	r0, r4
   10e74:	bl	116f0 <tabela_apaga@@Base>
   10e78:	mov	r0, r7
   10e7c:	bl	116f0 <tabela_apaga@@Base>
   10e80:	mov	r0, r6
   10e84:	bl	10d68 <fclose@plt>
   10e88:	mov	r0, r5
   10e8c:	bl	10d68 <fclose@plt>
   10e90:	mov	r0, #0
   10e94:	add	sp, sp, #504	; 0x1f8
   10e98:	pop	{r4, r5, r6, r7, r8, pc}
   10e9c:	add	r1, sp, #4
   10ea0:	mov	r0, r4
   10ea4:	bl	113ac <avl_insere@@Base>
   10ea8:	b	10dd4 <main@@Base+0x54>
   10eac:	mov	r2, r8
   10eb0:	add	r1, sp, #4
   10eb4:	mov	r0, r4
   10eb8:	bl	11744 <tabela_adiciona@@Base>
   10ebc:	b	10e38 <main@@Base+0xb8>
   10ec0:	andeq	r2, r2, r0, rrx
   10ec4:	ldrdeq	r1, [r1], -r0
   10ec8:	ldrdeq	r1, [r1], -r3
   10ecc:	ldrdeq	r1, [r1], -r5
   10ed0:	andeq	r1, r1, r0, ror #23
   10ed4:	andeq	r1, r1, sl, ror #23
   10ed8:	strdeq	r1, [r1], -fp
   10edc:	andeq	r1, r1, sp, lsl #24
   10ee0:	andeq	r1, r1, r4, lsr #24
   10ee4:	andeq	r1, r1, r1, ror #24
   10ee8:	andeq	r1, r1, r7, lsr #24
   10eec:	muleq	r1, r8, sl

00010ef0 <_start@@Base>:
   10ef0:	mov	fp, #0
   10ef4:	mov	lr, #0
   10ef8:	pop	{r1}		; (ldr r1, [sp], #4)
   10efc:	mov	r2, sp
   10f00:	push	{r2}		; (str r2, [sp, #-4]!)
   10f04:	push	{r0}		; (str r0, [sp, #-4]!)
   10f08:	ldr	ip, [pc, #16]	; 10f20 <_start@@Base+0x30>
   10f0c:	push	{ip}		; (str ip, [sp, #-4]!)
   10f10:	ldr	r0, [pc, #12]	; 10f24 <_start@@Base+0x34>
   10f14:	ldr	r3, [pc, #12]	; 10f28 <_start@@Base+0x38>
   10f18:	bl	10d2c <__libc_start_main@plt>
   10f1c:	bl	10d74 <abort@plt>
   10f20:	andeq	r1, r1, r0, asr #23
   10f24:	andeq	r0, r1, r0, lsl #27
   10f28:	andeq	r1, r1, r0, ror #22
   10f2c:	ldr	r3, [pc, #20]	; 10f48 <_start@@Base+0x58>
   10f30:	ldr	r2, [pc, #20]	; 10f4c <_start@@Base+0x5c>
   10f34:	add	r3, pc, r3
   10f38:	ldr	r2, [r3, r2]
   10f3c:	cmp	r2, #0
   10f40:	bxeq	lr
   10f44:	b	10d38 <__gmon_start__@plt>
   10f48:	andeq	r1, r1, r4, asr #1
   10f4c:	andeq	r0, r0, r4, asr r0
   10f50:	ldr	r0, [pc, #24]	; 10f70 <_start@@Base+0x80>
   10f54:	ldr	r3, [pc, #24]	; 10f74 <_start@@Base+0x84>
   10f58:	cmp	r3, r0
   10f5c:	bxeq	lr
   10f60:	ldr	r3, [pc, #16]	; 10f78 <_start@@Base+0x88>
   10f64:	cmp	r3, #0
   10f68:	bxeq	lr
   10f6c:	bx	r3
   10f70:	andeq	r2, r2, r0, rrx
   10f74:	andeq	r2, r2, r0, rrx
   10f78:	andeq	r0, r0, r0
   10f7c:	ldr	r0, [pc, #36]	; 10fa8 <_start@@Base+0xb8>
   10f80:	ldr	r1, [pc, #36]	; 10fac <_start@@Base+0xbc>
   10f84:	sub	r1, r1, r0
   10f88:	asr	r1, r1, #2
   10f8c:	add	r1, r1, r1, lsr #31
   10f90:	asrs	r1, r1, #1
   10f94:	bxeq	lr
   10f98:	ldr	r3, [pc, #16]	; 10fb0 <_start@@Base+0xc0>
   10f9c:	cmp	r3, #0
   10fa0:	bxeq	lr
   10fa4:	bx	r3
   10fa8:	andeq	r2, r2, r0, rrx
   10fac:	andeq	r2, r2, r0, rrx
   10fb0:	andeq	r0, r0, r0
   10fb4:	push	{r4, lr}
   10fb8:	ldr	r4, [pc, #24]	; 10fd8 <_start@@Base+0xe8>
   10fbc:	ldrb	r3, [r4]
   10fc0:	cmp	r3, #0
   10fc4:	popne	{r4, pc}
   10fc8:	bl	10f50 <_start@@Base+0x60>
   10fcc:	mov	r3, #1
   10fd0:	strb	r3, [r4]
   10fd4:	pop	{r4, pc}
   10fd8:	andeq	r2, r2, r4, rrx
   10fdc:	b	10f7c <_start@@Base+0x8c>

00010fe0 <avl_max_subarvore@@Base>:
   10fe0:	push	{r4, r5, r6, lr}
   10fe4:	mov	r5, r0
   10fe8:	mov	r6, r1
   10fec:	bl	11094 <avl_nova@@Base>
   10ff0:	mov	r4, r0
   10ff4:	mov	r1, r6
   10ff8:	mov	r0, r5
   10ffc:	bl	11298 <avl_pesquisa@@Base>
   11000:	str	r0, [r4]
   11004:	mov	r0, r4
   11008:	bl	110d8 <avl_max@@Base>
   1100c:	mov	r1, r0
   11010:	ldr	r0, [pc, #12]	; 11024 <avl_max_subarvore@@Base+0x44>
   11014:	bl	10cc0 <printf@plt>
   11018:	mov	r0, r4
   1101c:	pop	{r4, r5, r6, lr}
   11020:	b	10ce4 <free@plt>
   11024:	ldrdeq	r1, [r1], -r0

00011028 <tabela_copia@@Base>:
   11028:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   1102c:	mov	r4, r0
   11030:	mov	r0, r1
   11034:	mov	r5, #0
   11038:	ldr	r1, [r4]
   1103c:	bl	1168c <tabela_nova@@Base>
   11040:	mov	r6, r0
   11044:	add	r1, sp, #4
   11048:	mov	r0, r4
   1104c:	bl	119e8 <tabela_elementos@@Base>
   11050:	mov	r7, r0
   11054:	mov	r4, r0
   11058:	ldr	r3, [sp, #4]
   1105c:	cmp	r3, r5
   11060:	bgt	11078 <tabela_copia@@Base+0x50>
   11064:	mov	r0, r7
   11068:	bl	10ce4 <free@plt>
   1106c:	mov	r0, r6
   11070:	add	sp, sp, #12
   11074:	pop	{r4, r5, r6, r7, pc}
   11078:	add	r2, r4, #50	; 0x32
   1107c:	mov	r1, r4
   11080:	mov	r0, r6
   11084:	add	r5, r5, #1
   11088:	bl	11744 <tabela_adiciona@@Base>
   1108c:	add	r4, r4, #150	; 0x96
   11090:	b	11058 <tabela_copia@@Base+0x30>

00011094 <avl_nova@@Base>:
   11094:	push	{r4, lr}
   11098:	mov	r0, #4
   1109c:	bl	10d20 <malloc@plt>
   110a0:	cmp	r0, #0
   110a4:	movne	r3, #0
   110a8:	strne	r3, [r0]
   110ac:	pop	{r4, pc}

000110b0 <avl_min@@Base>:
   110b0:	cmp	r0, #0
   110b4:	ldrne	r3, [r0]
   110b8:	bxeq	lr
   110bc:	ldr	r2, [r3, #4]
   110c0:	cmp	r2, #0
   110c4:	bne	110d0 <avl_min@@Base+0x20>
   110c8:	ldr	r0, [r3]
   110cc:	bx	lr
   110d0:	mov	r3, r2
   110d4:	b	110bc <avl_min@@Base+0xc>

000110d8 <avl_max@@Base>:
   110d8:	cmp	r0, #0
   110dc:	ldrne	r3, [r0]
   110e0:	bxeq	lr
   110e4:	ldr	r2, [r3, #8]
   110e8:	cmp	r2, #0
   110ec:	bne	110f8 <avl_max@@Base+0x20>
   110f0:	ldr	r0, [r3]
   110f4:	bx	lr
   110f8:	mov	r3, r2
   110fc:	b	110e4 <avl_max@@Base+0xc>

00011100 <avl_altura@@Base>:
   11100:	cmp	r0, #0
   11104:	ldrne	r0, [r0, #12]
   11108:	mvneq	r0, #0
   1110c:	bx	lr

00011110 <max@@Base>:
   11110:	cmp	r1, r0
   11114:	movge	r0, r1
   11118:	bx	lr

0001111c <avl_novo_no@@Base>:
   1111c:	push	{r4, r5, r6, lr}
   11120:	mov	r5, r0
   11124:	mov	r0, #16
   11128:	bl	10d20 <malloc@plt>
   1112c:	mov	r4, r0
   11130:	mov	r0, r5
   11134:	bl	10d44 <strlen@plt>
   11138:	add	r0, r0, #1
   1113c:	bl	10d20 <malloc@plt>
   11140:	mov	r1, r5
   11144:	str	r0, [r4]
   11148:	bl	10d08 <strcpy@plt>
   1114c:	mov	r3, #0
   11150:	mov	r0, r4
   11154:	str	r3, [r4, #4]
   11158:	str	r3, [r4, #8]
   1115c:	str	r3, [r4, #12]
   11160:	pop	{r4, r5, r6, pc}

00011164 <roda_direita@@Base>:
   11164:	ldr	r2, [r0, #4]
   11168:	ldr	r3, [r2, #8]
   1116c:	str	r0, [r2, #8]
   11170:	cmp	r3, #0
   11174:	str	r3, [r0, #4]
   11178:	ldrne	r1, [r3, #12]
   1117c:	mvneq	r1, #0
   11180:	ldr	r3, [r0, #8]
   11184:	cmp	r3, #0
   11188:	ldrne	r3, [r3, #12]
   1118c:	mvneq	r3, #0
   11190:	cmp	r3, r1
   11194:	movlt	r3, r1
   11198:	ldr	r1, [r2, #4]
   1119c:	add	r3, r3, #1
   111a0:	str	r3, [r0, #12]
   111a4:	mov	r0, r2
   111a8:	cmp	r1, #0
   111ac:	ldrne	r1, [r1, #12]
   111b0:	mvneq	r1, #0
   111b4:	cmp	r3, r1
   111b8:	movlt	r3, r1
   111bc:	add	r3, r3, #1
   111c0:	str	r3, [r2, #12]
   111c4:	bx	lr

000111c8 <roda_esquerda@@Base>:
   111c8:	ldr	r2, [r0, #8]
   111cc:	ldr	r3, [r2, #4]
   111d0:	str	r0, [r2, #4]
   111d4:	ldr	r1, [r0, #4]
   111d8:	str	r3, [r0, #8]
   111dc:	cmp	r1, #0
   111e0:	ldrne	r1, [r1, #12]
   111e4:	mvneq	r1, #0
   111e8:	cmp	r3, #0
   111ec:	mvneq	r3, #0
   111f0:	ldrne	r3, [r3, #12]
   111f4:	cmp	r3, r1
   111f8:	movlt	r3, r1
   111fc:	ldr	r1, [r2, #8]
   11200:	add	r3, r3, #1
   11204:	str	r3, [r0, #12]
   11208:	mov	r0, r2
   1120c:	cmp	r1, #0
   11210:	ldrne	r1, [r1, #12]
   11214:	mvneq	r1, #0
   11218:	cmp	r3, r1
   1121c:	movlt	r3, r1
   11220:	add	r3, r3, #1
   11224:	str	r3, [r2, #12]
   11228:	bx	lr

0001122c <calc_balanceamento@@Base>:
   1122c:	cmp	r0, #0
   11230:	bxeq	lr
   11234:	ldr	r2, [r0, #4]
   11238:	ldr	r3, [r0, #8]
   1123c:	cmp	r3, #0
   11240:	ldrne	r3, [r3, #12]
   11244:	mvneq	r3, #0
   11248:	cmp	r2, #0
   1124c:	mvneq	r0, #0
   11250:	ldrne	r0, [r2, #12]
   11254:	sub	r0, r3, r0
   11258:	bx	lr

0001125c <avl_pesquisa_impl@@Base>:
   1125c:	push	{r4, r5, r6, lr}
   11260:	mov	r5, r1
   11264:	mov	r4, r0
   11268:	cmp	r4, #0
   1126c:	beq	11290 <avl_pesquisa_impl@@Base+0x34>
   11270:	mov	r0, r5
   11274:	ldr	r1, [r4]
   11278:	bl	10cb4 <strcmp@plt>
   1127c:	cmp	r0, #0
   11280:	ldrlt	r4, [r4, #4]
   11284:	blt	11268 <avl_pesquisa_impl@@Base+0xc>
   11288:	ldrne	r4, [r4, #8]
   1128c:	bne	11268 <avl_pesquisa_impl@@Base+0xc>
   11290:	mov	r0, r4
   11294:	pop	{r4, r5, r6, pc}

00011298 <avl_pesquisa@@Base>:
   11298:	cmp	r1, #0
   1129c:	cmpne	r0, #0
   112a0:	beq	112ac <avl_pesquisa@@Base+0x14>
   112a4:	ldr	r0, [r0]
   112a8:	b	1125c <avl_pesquisa_impl@@Base>
   112ac:	mov	r0, #0
   112b0:	bx	lr

000112b4 <avl_insere_impl@@Base>:
   112b4:	push	{r4, r5, r6, lr}
   112b8:	subs	r4, r0, #0
   112bc:	bne	112cc <avl_insere_impl@@Base+0x18>
   112c0:	mov	r0, r1
   112c4:	pop	{r4, r5, r6, lr}
   112c8:	b	1111c <avl_novo_no@@Base>
   112cc:	mov	r0, r1
   112d0:	mov	r5, r1
   112d4:	ldr	r1, [r4]
   112d8:	bl	10cb4 <strcmp@plt>
   112dc:	cmp	r0, #0
   112e0:	bge	1135c <avl_insere_impl@@Base+0xa8>
   112e4:	mov	r1, r5
   112e8:	ldr	r0, [r4, #4]
   112ec:	bl	112b4 <avl_insere_impl@@Base>
   112f0:	str	r0, [r4, #4]
   112f4:	ldr	r1, [r4, #4]
   112f8:	mov	r0, r4
   112fc:	ldr	r5, [r4, #8]
   11300:	cmp	r1, #0
   11304:	ldrne	r3, [r1, #12]
   11308:	mvneq	r3, #0
   1130c:	cmp	r5, #0
   11310:	ldrne	r2, [r5, #12]
   11314:	mvneq	r2, #0
   11318:	cmp	r3, r2
   1131c:	movlt	r3, r2
   11320:	add	r3, r3, #1
   11324:	str	r3, [r4, #12]
   11328:	bl	1122c <calc_balanceamento@@Base>
   1132c:	cmp	r0, #1
   11330:	ble	11374 <avl_insere_impl@@Base+0xc0>
   11334:	mov	r0, r5
   11338:	bl	1122c <calc_balanceamento@@Base>
   1133c:	cmp	r0, #0
   11340:	bge	11350 <avl_insere_impl@@Base+0x9c>
   11344:	mov	r0, r5
   11348:	bl	11164 <roda_direita@@Base>
   1134c:	str	r0, [r4, #8]
   11350:	mov	r0, r4
   11354:	pop	{r4, r5, r6, lr}
   11358:	b	111c8 <roda_esquerda@@Base>
   1135c:	beq	113a4 <avl_insere_impl@@Base+0xf0>
   11360:	mov	r1, r5
   11364:	ldr	r0, [r4, #8]
   11368:	bl	112b4 <avl_insere_impl@@Base>
   1136c:	str	r0, [r4, #8]
   11370:	b	112f4 <avl_insere_impl@@Base+0x40>
   11374:	cmn	r0, #1
   11378:	bge	113a4 <avl_insere_impl@@Base+0xf0>
   1137c:	mov	r0, r1
   11380:	bl	1122c <calc_balanceamento@@Base>
   11384:	cmp	r0, #0
   11388:	ble	11398 <avl_insere_impl@@Base+0xe4>
   1138c:	mov	r0, r1
   11390:	bl	111c8 <roda_esquerda@@Base>
   11394:	str	r0, [r4, #4]
   11398:	mov	r0, r4
   1139c:	pop	{r4, r5, r6, lr}
   113a0:	b	11164 <roda_direita@@Base>
   113a4:	mov	r0, r4
   113a8:	pop	{r4, r5, r6, pc}

000113ac <avl_insere@@Base>:
   113ac:	clz	r3, r1
   113b0:	cmp	r0, #0
   113b4:	push	{r4, r5, r6, lr}
   113b8:	lsr	r3, r3, #5
   113bc:	moveq	r4, #1
   113c0:	movne	r4, r3
   113c4:	cmp	r4, #0
   113c8:	bne	113e4 <avl_insere@@Base+0x38>
   113cc:	mov	r5, r0
   113d0:	ldr	r0, [r0]
   113d4:	bl	112b4 <avl_insere_impl@@Base>
   113d8:	str	r0, [r5]
   113dc:	mov	r0, r4
   113e0:	pop	{r4, r5, r6, pc}
   113e4:	mvn	r0, #0
   113e8:	pop	{r4, r5, r6, pc}

000113ec <avl_no_valormin@@Base>:
   113ec:	ldr	r3, [r0, #4]
   113f0:	cmp	r3, #0
   113f4:	bxeq	lr
   113f8:	mov	r0, r3
   113fc:	b	113ec <avl_no_valormin@@Base>

00011400 <avl_no_valormax@@Base>:
   11400:	ldr	r3, [r0, #8]
   11404:	cmp	r3, #0
   11408:	bxeq	lr
   1140c:	mov	r0, r3
   11410:	b	11400 <avl_no_valormax@@Base>

00011414 <avl_remove_impl@@Base>:
   11414:	push	{r4, r5, r6, r7, r8, lr}
   11418:	subs	r4, r0, #0
   1141c:	bne	1142c <avl_remove_impl@@Base+0x18>
   11420:	mov	r4, #0
   11424:	mov	r0, r4
   11428:	pop	{r4, r5, r6, r7, r8, pc}
   1142c:	ldr	r7, [r4]
   11430:	mov	r0, r1
   11434:	mov	r6, r1
   11438:	mov	r1, r7
   1143c:	bl	10cb4 <strcmp@plt>
   11440:	cmp	r0, #0
   11444:	bge	114c0 <avl_remove_impl@@Base+0xac>
   11448:	mov	r1, r6
   1144c:	ldr	r0, [r4, #4]
   11450:	bl	11414 <avl_remove_impl@@Base>
   11454:	str	r0, [r4, #4]
   11458:	ldr	r1, [r4, #4]
   1145c:	mov	r0, r4
   11460:	ldr	r5, [r4, #8]
   11464:	cmp	r1, #0
   11468:	ldrne	r2, [r1, #12]
   1146c:	mvneq	r2, #0
   11470:	cmp	r5, #0
   11474:	ldrne	r3, [r5, #12]
   11478:	mvneq	r3, #0
   1147c:	cmp	r3, r2
   11480:	movlt	r3, r2
   11484:	add	r3, r3, #1
   11488:	str	r3, [r4, #12]
   1148c:	bl	1122c <calc_balanceamento@@Base>
   11490:	cmp	r0, #1
   11494:	ble	11594 <avl_remove_impl@@Base+0x180>
   11498:	mov	r0, r5
   1149c:	bl	1122c <calc_balanceamento@@Base>
   114a0:	cmp	r0, #0
   114a4:	bge	114b4 <avl_remove_impl@@Base+0xa0>
   114a8:	mov	r0, r5
   114ac:	bl	11164 <roda_direita@@Base>
   114b0:	str	r0, [r4, #8]
   114b4:	mov	r0, r4
   114b8:	pop	{r4, r5, r6, r7, r8, lr}
   114bc:	b	111c8 <roda_esquerda@@Base>
   114c0:	ldr	r5, [r4, #8]
   114c4:	movne	r1, r6
   114c8:	movne	r0, r5
   114cc:	bne	11588 <avl_remove_impl@@Base+0x174>
   114d0:	ldr	r6, [r4, #4]
   114d4:	cmp	r6, #0
   114d8:	beq	11538 <avl_remove_impl@@Base+0x124>
   114dc:	cmp	r5, #0
   114e0:	bne	11554 <avl_remove_impl@@Base+0x140>
   114e4:	ldr	r0, [r6]
   114e8:	bl	10d44 <strlen@plt>
   114ec:	add	r1, r0, #1
   114f0:	mov	r0, r7
   114f4:	bl	10cfc <realloc@plt>
   114f8:	str	r0, [r4]
   114fc:	ldr	r1, [r6]
   11500:	bl	10d08 <strcpy@plt>
   11504:	ldr	r3, [r6, #4]
   11508:	str	r3, [r4, #4]
   1150c:	ldr	r3, [r6, #8]
   11510:	str	r3, [r4, #8]
   11514:	ldr	r3, [r6, #12]
   11518:	str	r3, [r4, #12]
   1151c:	ldr	r0, [r6]
   11520:	bl	10ce4 <free@plt>
   11524:	mov	r0, r6
   11528:	bl	10ce4 <free@plt>
   1152c:	cmp	r4, #0
   11530:	bne	11458 <avl_remove_impl@@Base+0x44>
   11534:	b	11420 <avl_remove_impl@@Base+0xc>
   11538:	cmp	r5, #0
   1153c:	moveq	r6, r4
   11540:	moveq	r4, r5
   11544:	beq	1151c <avl_remove_impl@@Base+0x108>
   11548:	mov	r6, r5
   1154c:	b	114e4 <avl_remove_impl@@Base+0xd0>
   11550:	mov	r5, r3
   11554:	ldr	r3, [r5, #4]
   11558:	cmp	r3, #0
   1155c:	bne	11550 <avl_remove_impl@@Base+0x13c>
   11560:	ldr	r0, [r5]
   11564:	bl	10d44 <strlen@plt>
   11568:	add	r1, r0, #1
   1156c:	mov	r0, r7
   11570:	bl	10cfc <realloc@plt>
   11574:	str	r0, [r4]
   11578:	ldr	r1, [r5]
   1157c:	bl	10d08 <strcpy@plt>
   11580:	ldr	r1, [r5]
   11584:	ldr	r0, [r4, #8]
   11588:	bl	11414 <avl_remove_impl@@Base>
   1158c:	str	r0, [r4, #8]
   11590:	b	11458 <avl_remove_impl@@Base+0x44>
   11594:	cmn	r0, #1
   11598:	bge	11424 <avl_remove_impl@@Base+0x10>
   1159c:	mov	r0, r1
   115a0:	bl	1122c <calc_balanceamento@@Base>
   115a4:	cmp	r0, #0
   115a8:	ble	115b8 <avl_remove_impl@@Base+0x1a4>
   115ac:	mov	r0, r1
   115b0:	bl	111c8 <roda_esquerda@@Base>
   115b4:	str	r0, [r4, #4]
   115b8:	mov	r0, r4
   115bc:	pop	{r4, r5, r6, r7, r8, lr}
   115c0:	b	11164 <roda_direita@@Base>

000115c4 <avl_apaga@@Base>:
   115c4:	push	{r4, lr}
   115c8:	subs	r4, r0, #0
   115cc:	popeq	{r4, pc}
   115d0:	ldr	r0, [r4]
   115d4:	cmp	r0, #0
   115d8:	bne	115e8 <avl_apaga@@Base+0x24>
   115dc:	mov	r0, r4
   115e0:	pop	{r4, lr}
   115e4:	b	10ce4 <free@plt>
   115e8:	ldr	r1, [r0]
   115ec:	bl	11414 <avl_remove_impl@@Base>
   115f0:	str	r0, [r4]
   115f4:	b	115d0 <avl_apaga@@Base+0xc>

000115f8 <avl_remove@@Base>:
   115f8:	clz	r3, r1
   115fc:	cmp	r0, #0
   11600:	push	{r4, r5, r6, lr}
   11604:	lsr	r3, r3, #5
   11608:	moveq	r4, #1
   1160c:	movne	r4, r3
   11610:	cmp	r4, #0
   11614:	bne	11630 <avl_remove@@Base+0x38>
   11618:	mov	r5, r0
   1161c:	ldr	r0, [r0]
   11620:	bl	11414 <avl_remove_impl@@Base>
   11624:	str	r0, [r5]
   11628:	mov	r0, r4
   1162c:	pop	{r4, r5, r6, pc}
   11630:	mvn	r0, #0
   11634:	pop	{r4, r5, r6, pc}

00011638 <avl_preordem_impl@@Base>:
   11638:	push	{r4, r5, r6, lr}
   1163c:	mov	r4, r0
   11640:	ldr	r5, [pc, #32]	; 11668 <avl_preordem_impl@@Base+0x30>
   11644:	cmp	r4, #0
   11648:	popeq	{r4, r5, r6, pc}
   1164c:	mov	r0, r5
   11650:	ldr	r1, [r4]
   11654:	bl	10cc0 <printf@plt>
   11658:	ldr	r0, [r4, #4]
   1165c:	bl	11638 <avl_preordem_impl@@Base>
   11660:	ldr	r4, [r4, #8]
   11664:	b	11644 <avl_preordem_impl@@Base+0xc>
   11668:	andeq	r1, r1, sl, lsr ip

0001166c <avl_imprime@@Base>:
   1166c:	cmp	r0, #0
   11670:	bxeq	lr
   11674:	push	{r4, lr}
   11678:	ldr	r0, [r0]
   1167c:	bl	11638 <avl_preordem_impl@@Base>
   11680:	mov	r0, #10
   11684:	pop	{r4, lr}
   11688:	b	10d5c <putchar@plt>

0001168c <tabela_nova@@Base>:
   1168c:	cmp	r1, #0
   11690:	cmpne	r0, #0
   11694:	push	{r4, r5, r6, r7, r8, lr}
   11698:	bgt	116a8 <tabela_nova@@Base+0x1c>
   1169c:	mov	r4, #0
   116a0:	mov	r0, r4
   116a4:	pop	{r4, r5, r6, r7, r8, pc}
   116a8:	mov	r5, r0
   116ac:	mov	r0, #12
   116b0:	mov	r6, r1
   116b4:	bl	10d20 <malloc@plt>
   116b8:	subs	r4, r0, #0
   116bc:	beq	1169c <tabela_nova@@Base+0x10>
   116c0:	mov	r1, #4
   116c4:	mov	r0, r5
   116c8:	bl	10ca8 <calloc@plt>
   116cc:	cmp	r0, #0
   116d0:	mov	r7, r0
   116d4:	str	r0, [r4, #4]
   116d8:	strne	r6, [r4]
   116dc:	strne	r5, [r4, #8]
   116e0:	bne	116a0 <tabela_nova@@Base+0x14>
   116e4:	mov	r0, r4
   116e8:	bl	10ce4 <free@plt>
   116ec:	b	1169c <tabela_nova@@Base+0x10>

000116f0 <tabela_apaga@@Base>:
   116f0:	push	{r4, r5, r6, r7, r8, lr}
   116f4:	subs	r4, r0, #0
   116f8:	movne	r6, #0
   116fc:	popeq	{r4, r5, r6, r7, r8, pc}
   11700:	ldmib	r4, {r0, r3}
   11704:	cmp	r3, r6
   11708:	bgt	1171c <tabela_apaga@@Base+0x2c>
   1170c:	bl	10ce4 <free@plt>
   11710:	mov	r0, r4
   11714:	pop	{r4, r5, r6, r7, r8, lr}
   11718:	b	10ce4 <free@plt>
   1171c:	ldr	r5, [r0, r6, lsl #2]
   11720:	cmp	r5, #0
   11724:	addeq	r6, r6, #1
   11728:	beq	11700 <tabela_apaga@@Base+0x10>
   1172c:	ldm	r5, {r0, r7}
   11730:	bl	10ce4 <free@plt>
   11734:	mov	r0, r5
   11738:	bl	10ce4 <free@plt>
   1173c:	mov	r5, r7
   11740:	b	11720 <tabela_apaga@@Base+0x30>

00011744 <tabela_adiciona@@Base>:
   11744:	cmp	r1, #0
   11748:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1174c:	mov	r6, r2
   11750:	clz	r2, r2
   11754:	lsr	r2, r2, #5
   11758:	moveq	r2, #1
   1175c:	cmp	r0, #0
   11760:	moveq	r2, #1
   11764:	cmp	r2, #0
   11768:	beq	11778 <tabela_adiciona@@Base+0x34>
   1176c:	mvn	r7, #1
   11770:	mov	r0, r7
   11774:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11778:	mov	r5, r0
   1177c:	mov	r4, r1
   11780:	mov	r0, r1
   11784:	ldr	r3, [r5]
   11788:	ldr	r1, [r5, #8]
   1178c:	blx	r3
   11790:	ldr	r9, [r5, #4]
   11794:	mov	r8, r0
   11798:	ldr	r5, [r9, r0, lsl #2]
   1179c:	cmp	r5, #0
   117a0:	beq	117d4 <tabela_adiciona@@Base+0x90>
   117a4:	ldr	sl, [r5]
   117a8:	mov	r1, r4
   117ac:	mov	r0, sl
   117b0:	bl	10cb4 <strcmp@plt>
   117b4:	subs	r7, r0, #0
   117b8:	bne	117cc <tabela_adiciona@@Base+0x88>
   117bc:	mov	r1, r6
   117c0:	add	r0, sl, #50	; 0x32
   117c4:	bl	10d08 <strcpy@plt>
   117c8:	b	11770 <tabela_adiciona@@Base+0x2c>
   117cc:	ldr	r5, [r5, #4]
   117d0:	b	1179c <tabela_adiciona@@Base+0x58>
   117d4:	mov	r0, #8
   117d8:	bl	10d20 <malloc@plt>
   117dc:	subs	r7, r0, #0
   117e0:	beq	1176c <tabela_adiciona@@Base+0x28>
   117e4:	mov	r0, #150	; 0x96
   117e8:	bl	10d20 <malloc@plt>
   117ec:	cmp	r0, #0
   117f0:	mov	sl, r0
   117f4:	str	r0, [r7]
   117f8:	beq	1176c <tabela_adiciona@@Base+0x28>
   117fc:	mov	r1, r4
   11800:	bl	10d08 <strcpy@plt>
   11804:	mov	r1, r6
   11808:	add	r0, sl, #50	; 0x32
   1180c:	bl	10d08 <strcpy@plt>
   11810:	ldr	r3, [r9, r8, lsl #2]
   11814:	str	r3, [r7, #4]
   11818:	str	r7, [r9, r8, lsl #2]
   1181c:	mov	r7, r5
   11820:	b	11770 <tabela_adiciona@@Base+0x2c>

00011824 <tabela_remove@@Base>:
   11824:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11828:	subs	r4, r0, #0
   1182c:	mvneq	r6, #1
   11830:	beq	1189c <tabela_remove@@Base+0x78>
   11834:	mov	r0, r1
   11838:	mov	r5, r1
   1183c:	ldr	r3, [r4]
   11840:	mov	r7, #0
   11844:	ldr	r1, [r4, #8]
   11848:	blx	r3
   1184c:	ldr	r9, [r4, #4]
   11850:	mov	r8, r0
   11854:	ldr	r4, [r9, r0, lsl #2]
   11858:	cmp	r4, #0
   1185c:	mvneq	r6, #2
   11860:	beq	1189c <tabela_remove@@Base+0x78>
   11864:	ldr	sl, [r4]
   11868:	mov	r1, r5
   1186c:	mov	r0, sl
   11870:	bl	10cb4 <strcmp@plt>
   11874:	subs	r6, r0, #0
   11878:	ldr	r3, [r4, #4]
   1187c:	bne	118a4 <tabela_remove@@Base+0x80>
   11880:	cmp	r7, #0
   11884:	mov	r0, sl
   11888:	strne	r3, [r7, #4]
   1188c:	streq	r3, [r9, r8, lsl #2]
   11890:	bl	10ce4 <free@plt>
   11894:	mov	r0, r4
   11898:	bl	10ce4 <free@plt>
   1189c:	mov	r0, r6
   118a0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   118a4:	mov	r7, r4
   118a8:	mov	r4, r3
   118ac:	b	11858 <tabela_remove@@Base+0x34>

000118b0 <tabela_valor@@Base>:
   118b0:	push	{r4, r5, r6, lr}
   118b4:	subs	r4, r0, #0
   118b8:	bne	118c4 <tabela_valor@@Base+0x14>
   118bc:	mov	r0, #0
   118c0:	pop	{r4, r5, r6, pc}
   118c4:	mov	r0, r1
   118c8:	mov	r6, r1
   118cc:	ldr	r3, [r4]
   118d0:	ldr	r1, [r4, #8]
   118d4:	blx	r3
   118d8:	ldr	r3, [r4, #4]
   118dc:	ldr	r5, [r3, r0, lsl #2]
   118e0:	cmp	r5, #0
   118e4:	beq	118bc <tabela_valor@@Base+0xc>
   118e8:	ldr	r4, [r5]
   118ec:	mov	r1, r6
   118f0:	mov	r0, r4
   118f4:	bl	10cb4 <strcmp@plt>
   118f8:	cmp	r0, #0
   118fc:	bne	11908 <tabela_valor@@Base+0x58>
   11900:	add	r0, r4, #50	; 0x32
   11904:	pop	{r4, r5, r6, pc}
   11908:	ldr	r5, [r5, #4]
   1190c:	b	118e0 <tabela_valor@@Base+0x30>

00011910 <tabela_existe@@Base>:
   11910:	cmp	r0, #0
   11914:	cmpne	r1, #0
   11918:	beq	11934 <tabela_existe@@Base+0x24>
   1191c:	push	{r4, lr}
   11920:	bl	118b0 <tabela_valor@@Base>
   11924:	cmp	r0, #0
   11928:	movne	r0, #1
   1192c:	mvneq	r0, #2
   11930:	pop	{r4, pc}
   11934:	mvn	r0, #1
   11938:	bx	lr

0001193c <tabela_esvazia@@Base>:
   1193c:	push	{r4, r5, r6, r7, r8, lr}
   11940:	subs	r6, r0, #0
   11944:	movne	r5, #0
   11948:	bne	11974 <tabela_esvazia@@Base+0x38>
   1194c:	mvn	r0, #1
   11950:	pop	{r4, r5, r6, r7, r8, pc}
   11954:	ldr	r3, [r6, #4]
   11958:	lsl	r7, r5, #2
   1195c:	ldr	r4, [r3, r5, lsl #2]
   11960:	cmp	r4, #0
   11964:	bne	11988 <tabela_esvazia@@Base+0x4c>
   11968:	ldr	r3, [r6, #4]
   1196c:	add	r5, r5, #1
   11970:	str	r4, [r3, r7]
   11974:	ldr	r3, [r6, #8]
   11978:	cmp	r3, r5
   1197c:	bgt	11954 <tabela_esvazia@@Base+0x18>
   11980:	mov	r0, #0
   11984:	pop	{r4, r5, r6, r7, r8, pc}
   11988:	ldm	r4, {r0, r8}
   1198c:	bl	10ce4 <free@plt>
   11990:	mov	r0, r4
   11994:	bl	10ce4 <free@plt>
   11998:	mov	r4, r8
   1199c:	b	11960 <tabela_esvazia@@Base+0x24>

000119a0 <tabela_numelementos@@Base>:
   119a0:	subs	r1, r0, #0
   119a4:	movne	r0, #0
   119a8:	ldrne	ip, [r1, #8]
   119ac:	movne	r3, r0
   119b0:	bne	119d0 <tabela_numelementos@@Base+0x30>
   119b4:	mvn	r0, #1
   119b8:	bx	lr
   119bc:	ldr	r2, [r1, #4]
   119c0:	ldr	r2, [r2, r3, lsl #2]
   119c4:	cmp	r2, #0
   119c8:	bne	119dc <tabela_numelementos@@Base+0x3c>
   119cc:	add	r3, r3, #1
   119d0:	cmp	r3, ip
   119d4:	blt	119bc <tabela_numelementos@@Base+0x1c>
   119d8:	bx	lr
   119dc:	add	r0, r0, #1
   119e0:	ldr	r2, [r2, #4]
   119e4:	b	119c4 <tabela_numelementos@@Base+0x24>

000119e8 <tabela_elementos@@Base>:
   119e8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   119ec:	mov	r4, r1
   119f0:	mov	r9, r0
   119f4:	bl	119a0 <tabela_numelementos@@Base>
   119f8:	cmp	r0, #0
   119fc:	str	r0, [r4]
   11a00:	bgt	11a10 <tabela_elementos@@Base+0x28>
   11a04:	mov	r8, #0
   11a08:	mov	r0, r8
   11a0c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11a10:	mov	r7, #150	; 0x96
   11a14:	mul	r0, r7, r0
   11a18:	bl	10d20 <malloc@plt>
   11a1c:	subs	r8, r0, #0
   11a20:	movne	r6, #0
   11a24:	subne	sl, r8, #150	; 0x96
   11a28:	movne	r5, r6
   11a2c:	beq	11a04 <tabela_elementos@@Base+0x1c>
   11a30:	ldr	r3, [r9, #8]
   11a34:	cmp	r3, r5
   11a38:	ble	11a08 <tabela_elementos@@Base+0x20>
   11a3c:	ldr	r3, [r9, #4]
   11a40:	ldr	r4, [r3, r5, lsl #2]
   11a44:	cmp	r4, #0
   11a48:	beq	11a68 <tabela_elementos@@Base+0x80>
   11a4c:	add	r6, r6, #1
   11a50:	mov	r2, #150	; 0x96
   11a54:	ldr	r1, [r4]
   11a58:	mla	r0, r7, r6, sl
   11a5c:	bl	10cf0 <memcpy@plt>
   11a60:	ldr	r4, [r4, #4]
   11a64:	b	11a44 <tabela_elementos@@Base+0x5c>
   11a68:	add	r5, r5, #1
   11a6c:	b	11a30 <tabela_elementos@@Base+0x48>

00011a70 <hash_krm@@Base>:
   11a70:	sub	r0, r0, #1
   11a74:	mov	r3, #7
   11a78:	ldrb	r2, [r0, #1]!
   11a7c:	cmp	r2, #0
   11a80:	bne	11a90 <hash_krm@@Base+0x20>
   11a84:	udiv	r0, r3, r1
   11a88:	mls	r0, r1, r0, r3
   11a8c:	bx	lr
   11a90:	add	r3, r3, r2
   11a94:	b	11a78 <hash_krm@@Base+0x8>

00011a98 <hash_djbm@@Base>:
   11a98:	sub	r0, r0, #1
   11a9c:	movw	r3, #5347	; 0x14e3
   11aa0:	ldrb	r2, [r0, #1]!
   11aa4:	cmp	r2, #0
   11aa8:	bne	11ab8 <hash_djbm@@Base+0x20>
   11aac:	udiv	r0, r3, r1
   11ab0:	mls	r0, r1, r0, r3
   11ab4:	bx	lr
   11ab8:	rsb	r3, r3, r3, lsl #5
   11abc:	eor	r3, r3, r2
   11ac0:	b	11aa0 <hash_djbm@@Base+0x8>

00011ac4 <mostraTabela@@Base>:
   11ac4:	push	{r4, r5, r6, r7, r8, lr}
   11ac8:	mov	r6, r0
   11acc:	mov	r4, #0
   11ad0:	ldr	r7, [pc, #124]	; 11b54 <mostraTabela@@Base+0x90>
   11ad4:	bl	119a0 <tabela_numelementos@@Base>
   11ad8:	ldr	r8, [pc, #120]	; 11b58 <mostraTabela@@Base+0x94>
   11adc:	mov	r1, r0
   11ae0:	ldr	r0, [pc, #116]	; 11b5c <mostraTabela@@Base+0x98>
   11ae4:	bl	10cc0 <printf@plt>
   11ae8:	ldr	r3, [r6, #8]
   11aec:	cmp	r3, r4
   11af0:	bgt	11b00 <mostraTabela@@Base+0x3c>
   11af4:	mov	r0, #10
   11af8:	pop	{r4, r5, r6, r7, r8, lr}
   11afc:	b	10d5c <putchar@plt>
   11b00:	ldr	r3, [r6, #4]
   11b04:	ldr	r3, [r3, r4, lsl #2]
   11b08:	cmp	r3, #0
   11b0c:	beq	11b34 <mostraTabela@@Base+0x70>
   11b10:	mov	r1, r4
   11b14:	mov	r0, r7
   11b18:	bl	10cc0 <printf@plt>
   11b1c:	ldr	r3, [r6, #4]
   11b20:	ldr	r5, [r3, r4, lsl #2]
   11b24:	cmp	r5, #0
   11b28:	bne	11b3c <mostraTabela@@Base+0x78>
   11b2c:	mov	r0, #10
   11b30:	bl	10d5c <putchar@plt>
   11b34:	add	r4, r4, #1
   11b38:	b	11ae8 <mostraTabela@@Base+0x24>
   11b3c:	ldr	r1, [r5]
   11b40:	mov	r0, r8
   11b44:	add	r2, r1, #50	; 0x32
   11b48:	bl	10cc0 <printf@plt>
   11b4c:	ldr	r5, [r5, #4]
   11b50:	b	11b24 <mostraTabela@@Base+0x60>
   11b54:	andeq	r1, r1, r2, ror #24
   11b58:	andeq	r1, r1, r9, ror #24
   11b5c:	andeq	r1, r1, lr, lsr ip

00011b60 <__libc_csu_init@@Base>:
   11b60:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11b64:	mov	r7, r0
   11b68:	ldr	r6, [pc, #72]	; 11bb8 <__libc_csu_init@@Base+0x58>
   11b6c:	ldr	r5, [pc, #72]	; 11bbc <__libc_csu_init@@Base+0x5c>
   11b70:	add	r6, pc, r6
   11b74:	add	r5, pc, r5
   11b78:	sub	r6, r6, r5
   11b7c:	mov	r8, r1
   11b80:	mov	r9, r2
   11b84:	bl	10c88 <calloc@plt-0x20>
   11b88:	asrs	r6, r6, #2
   11b8c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11b90:	mov	r4, #0
   11b94:	add	r4, r4, #1
   11b98:	ldr	r3, [r5], #4
   11b9c:	mov	r2, r9
   11ba0:	mov	r1, r8
   11ba4:	mov	r0, r7
   11ba8:	blx	r3
   11bac:	cmp	r6, r4
   11bb0:	bne	11b94 <__libc_csu_init@@Base+0x34>
   11bb4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11bb8:	muleq	r1, ip, r3
   11bbc:	muleq	r1, r4, r3

00011bc0 <__libc_csu_fini@@Base>:
   11bc0:	bx	lr

Disassembly of section .fini:

00011bc4 <.fini>:
   11bc4:	push	{r3, lr}
   11bc8:	pop	{r3, pc}
