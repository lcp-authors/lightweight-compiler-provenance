
../repos/dvidelabs-flatcc-3b39ef7/test/json_test/test_json_parser:     file format elf32-littlearm


Disassembly of section .init:

0001256c <.init>:
   1256c:	push	{r3, lr}
   12570:	bl	126f4 <_start@@Base+0x3c>
   12574:	pop	{r3, pc}

Disassembly of section .plt:

00012578 <fopen@plt-0x14>:
   12578:	push	{lr}		; (str lr, [sp, #-4]!)
   1257c:	ldr	lr, [pc, #4]	; 12588 <fopen@plt-0x4>
   12580:	add	lr, pc, lr
   12584:	ldr	pc, [lr, #8]!
   12588:	andeq	r6, r3, r8, ror sl

0001258c <fopen@plt>:
   1258c:	add	ip, pc, #0, 12
   12590:	add	ip, ip, #221184	; 0x36000
   12594:	ldr	pc, [ip, #2680]!	; 0xa78

00012598 <free@plt>:
   12598:	add	ip, pc, #0, 12
   1259c:	add	ip, ip, #221184	; 0x36000
   125a0:	ldr	pc, [ip, #2672]!	; 0xa70

000125a4 <memcpy@plt>:
   125a4:	add	ip, pc, #0, 12
   125a8:	add	ip, ip, #221184	; 0x36000
   125ac:	ldr	pc, [ip, #2664]!	; 0xa68

000125b0 <ftell@plt>:
   125b0:	add	ip, pc, #0, 12
   125b4:	add	ip, ip, #221184	; 0x36000
   125b8:	ldr	pc, [ip, #2656]!	; 0xa60

000125bc <memcmp@plt>:
   125bc:	add	ip, pc, #0, 12
   125c0:	add	ip, ip, #221184	; 0x36000
   125c4:	ldr	pc, [ip, #2648]!	; 0xa58

000125c8 <rewind@plt>:
   125c8:	add	ip, pc, #0, 12
   125cc:	add	ip, ip, #221184	; 0x36000
   125d0:	ldr	pc, [ip, #2640]!	; 0xa50

000125d4 <realloc@plt>:
   125d4:	add	ip, pc, #0, 12
   125d8:	add	ip, ip, #221184	; 0x36000
   125dc:	ldr	pc, [ip, #2632]!	; 0xa48

000125e0 <fwrite@plt>:
   125e0:	add	ip, pc, #0, 12
   125e4:	add	ip, ip, #221184	; 0x36000
   125e8:	ldr	pc, [ip, #2624]!	; 0xa40

000125ec <fread@plt>:
   125ec:	add	ip, pc, #0, 12
   125f0:	add	ip, ip, #221184	; 0x36000
   125f4:	ldr	pc, [ip, #2616]!	; 0xa38

000125f8 <malloc@plt>:
   125f8:	add	ip, pc, #0, 12
   125fc:	add	ip, ip, #221184	; 0x36000
   12600:	ldr	pc, [ip, #2608]!	; 0xa30

00012604 <__libc_start_main@plt>:
   12604:	add	ip, pc, #0, 12
   12608:	add	ip, ip, #221184	; 0x36000
   1260c:	ldr	pc, [ip, #2600]!	; 0xa28

00012610 <__gmon_start__@plt>:
   12610:	add	ip, pc, #0, 12
   12614:	add	ip, ip, #221184	; 0x36000
   12618:	ldr	pc, [ip, #2592]!	; 0xa20

0001261c <exit@plt>:
   1261c:	add	ip, pc, #0, 12
   12620:	add	ip, ip, #221184	; 0x36000
   12624:	ldr	pc, [ip, #2584]!	; 0xa18

00012628 <strlen@plt>:
   12628:	add	ip, pc, #0, 12
   1262c:	add	ip, ip, #221184	; 0x36000
   12630:	ldr	pc, [ip, #2576]!	; 0xa10

00012634 <fprintf@plt>:
   12634:	add	ip, pc, #0, 12
   12638:	add	ip, ip, #221184	; 0x36000
   1263c:	ldr	pc, [ip, #2568]!	; 0xa08

00012640 <posix_memalign@plt>:
   12640:	add	ip, pc, #0, 12
   12644:	add	ip, ip, #221184	; 0x36000
   12648:	ldr	pc, [ip, #2560]!	; 0xa00

0001264c <memset@plt>:
   1264c:	add	ip, pc, #0, 12
   12650:	add	ip, ip, #221184	; 0x36000
   12654:	ldr	pc, [ip, #2552]!	; 0x9f8

00012658 <strncpy@plt>:
   12658:	add	ip, pc, #0, 12
   1265c:	add	ip, ip, #221184	; 0x36000
   12660:	ldr	pc, [ip, #2544]!	; 0x9f0

00012664 <strtod@plt>:
   12664:	add	ip, pc, #0, 12
   12668:	add	ip, ip, #221184	; 0x36000
   1266c:	ldr	pc, [ip, #2536]!	; 0x9e8

00012670 <memchr@plt>:
   12670:	add	ip, pc, #0, 12
   12674:	add	ip, ip, #221184	; 0x36000
   12678:	ldr	pc, [ip, #2528]!	; 0x9e0

0001267c <fclose@plt>:
   1267c:	add	ip, pc, #0, 12
   12680:	add	ip, ip, #221184	; 0x36000
   12684:	ldr	pc, [ip, #2520]!	; 0x9d8

00012688 <fputc@plt>:
   12688:	add	ip, pc, #0, 12
   1268c:	add	ip, ip, #221184	; 0x36000
   12690:	ldr	pc, [ip, #2512]!	; 0x9d0

00012694 <fseek@plt>:
   12694:	add	ip, pc, #0, 12
   12698:	add	ip, ip, #221184	; 0x36000
   1269c:	ldr	pc, [ip, #2504]!	; 0x9c8

000126a0 <abort@plt>:
   126a0:	add	ip, pc, #0, 12
   126a4:	add	ip, ip, #221184	; 0x36000
   126a8:	ldr	pc, [ip, #2496]!	; 0x9c0

000126ac <__assert_fail@plt>:
   126ac:	add	ip, pc, #0, 12
   126b0:	add	ip, ip, #221184	; 0x36000
   126b4:	ldr	pc, [ip, #2488]!	; 0x9b8

Disassembly of section .text:

000126b8 <_start@@Base>:
   126b8:	mov	fp, #0
   126bc:	mov	lr, #0
   126c0:	pop	{r1}		; (ldr r1, [sp], #4)
   126c4:	mov	r2, sp
   126c8:	push	{r2}		; (str r2, [sp, #-4]!)
   126cc:	push	{r0}		; (str r0, [sp, #-4]!)
   126d0:	ldr	ip, [pc, #16]	; 126e8 <_start@@Base+0x30>
   126d4:	push	{ip}		; (str ip, [sp, #-4]!)
   126d8:	ldr	r0, [pc, #12]	; 126ec <_start@@Base+0x34>
   126dc:	ldr	r3, [pc, #12]	; 126f0 <_start@@Base+0x38>
   126e0:	bl	12604 <__libc_start_main@plt>
   126e4:	bl	126a0 <abort@plt>
   126e8:	andeq	r6, r3, r8, asr #25
   126ec:	andeq	r6, r2, ip, ror #15
   126f0:	andeq	r6, r3, r8, ror #24
   126f4:	ldr	r3, [pc, #20]	; 12710 <_start@@Base+0x58>
   126f8:	ldr	r2, [pc, #20]	; 12714 <_start@@Base+0x5c>
   126fc:	add	r3, pc, r3
   12700:	ldr	r2, [r3, r2]
   12704:	cmp	r2, #0
   12708:	bxeq	lr
   1270c:	b	12610 <__gmon_start__@plt>
   12710:	strdeq	r6, [r3], -ip
   12714:	andeq	r0, r0, r8, ror r0
   12718:	ldr	r0, [pc, #24]	; 12738 <_start@@Base+0x80>
   1271c:	ldr	r3, [pc, #24]	; 1273c <_start@@Base+0x84>
   12720:	cmp	r3, r0
   12724:	bxeq	lr
   12728:	ldr	r3, [pc, #16]	; 12740 <_start@@Base+0x88>
   1272c:	cmp	r3, #0
   12730:	bxeq	lr
   12734:	bx	r3
   12738:			; <UNDEFINED> instruction: 0x000494b8
   1273c:			; <UNDEFINED> instruction: 0x000494b8
   12740:	andeq	r0, r0, r0
   12744:	ldr	r0, [pc, #36]	; 12770 <_start@@Base+0xb8>
   12748:	ldr	r1, [pc, #36]	; 12774 <_start@@Base+0xbc>
   1274c:	sub	r1, r1, r0
   12750:	asr	r1, r1, #2
   12754:	add	r1, r1, r1, lsr #31
   12758:	asrs	r1, r1, #1
   1275c:	bxeq	lr
   12760:	ldr	r3, [pc, #16]	; 12778 <_start@@Base+0xc0>
   12764:	cmp	r3, #0
   12768:	bxeq	lr
   1276c:	bx	r3
   12770:			; <UNDEFINED> instruction: 0x000494b8
   12774:			; <UNDEFINED> instruction: 0x000494b8
   12778:	andeq	r0, r0, r0
   1277c:	push	{r4, lr}
   12780:	ldr	r4, [pc, #24]	; 127a0 <_start@@Base+0xe8>
   12784:	ldrb	r3, [r4]
   12788:	cmp	r3, #0
   1278c:	popne	{r4, pc}
   12790:	bl	12718 <_start@@Base+0x60>
   12794:	mov	r3, #1
   12798:	strb	r3, [r4]
   1279c:	pop	{r4, pc}
   127a0:			; <UNDEFINED> instruction: 0x000494b8
   127a4:	b	12744 <_start@@Base+0x8c>
   127a8:	push	{fp}		; (str fp, [sp, #-4]!)
   127ac:	add	fp, sp, #0
   127b0:	sub	sp, sp, #12
   127b4:	mov	r3, r0
   127b8:	strb	r3, [fp, #-5]
   127bc:	ldrb	r3, [fp, #-5]
   127c0:	mov	r0, r3
   127c4:	add	sp, fp, #0
   127c8:	pop	{fp}		; (ldr fp, [sp], #4)
   127cc:	bx	lr
   127d0:	str	fp, [sp, #-8]!
   127d4:	str	lr, [sp, #4]
   127d8:	add	fp, sp, #4
   127dc:	sub	sp, sp, #8
   127e0:	str	r0, [fp, #-8]
   127e4:	mov	r3, r1
   127e8:	strb	r3, [fp, #-9]
   127ec:	ldrb	r3, [fp, #-9]
   127f0:	mov	r0, r3
   127f4:	bl	127a8 <_start@@Base+0xf0>
   127f8:	mov	r3, r0
   127fc:	mov	r2, r3
   12800:	ldr	r3, [fp, #-8]
   12804:	strb	r2, [r3]
   12808:	nop	{0}
   1280c:	sub	sp, fp, #4
   12810:	ldr	fp, [sp]
   12814:	add	sp, sp, #4
   12818:	pop	{pc}		; (ldr pc, [sp], #4)
   1281c:	push	{fp}		; (str fp, [sp, #-4]!)
   12820:	add	fp, sp, #0
   12824:	sub	sp, sp, #12
   12828:	mov	r3, r0
   1282c:	strh	r3, [fp, #-6]
   12830:	ldrh	r3, [fp, #-6]
   12834:	mov	r0, r3
   12838:	add	sp, fp, #0
   1283c:	pop	{fp}		; (ldr fp, [sp], #4)
   12840:	bx	lr
   12844:	str	fp, [sp, #-8]!
   12848:	str	lr, [sp, #4]
   1284c:	add	fp, sp, #4
   12850:	sub	sp, sp, #8
   12854:	str	r0, [fp, #-8]
   12858:	mov	r3, r1
   1285c:	strh	r3, [fp, #-10]
   12860:	ldrh	r3, [fp, #-10]
   12864:	mov	r0, r3
   12868:	bl	1281c <_start@@Base+0x164>
   1286c:	mov	r3, r0
   12870:	mov	r2, r3
   12874:	ldr	r3, [fp, #-8]
   12878:	strh	r2, [r3]
   1287c:	nop	{0}
   12880:	sub	sp, fp, #4
   12884:	ldr	fp, [sp]
   12888:	add	sp, sp, #4
   1288c:	pop	{pc}		; (ldr pc, [sp], #4)
   12890:	push	{fp}		; (str fp, [sp, #-4]!)
   12894:	add	fp, sp, #0
   12898:	sub	sp, sp, #12
   1289c:	str	r0, [fp, #-8]
   128a0:	ldr	r3, [fp, #-8]
   128a4:	mov	r0, r3
   128a8:	add	sp, fp, #0
   128ac:	pop	{fp}		; (ldr fp, [sp], #4)
   128b0:	bx	lr
   128b4:	str	fp, [sp, #-8]!
   128b8:	str	lr, [sp, #4]
   128bc:	add	fp, sp, #4
   128c0:	sub	sp, sp, #8
   128c4:	str	r0, [fp, #-8]
   128c8:	str	r1, [fp, #-12]
   128cc:	ldr	r0, [fp, #-12]
   128d0:	bl	12890 <_start@@Base+0x1d8>
   128d4:	mov	r2, r0
   128d8:	ldr	r3, [fp, #-8]
   128dc:	str	r2, [r3]
   128e0:	nop	{0}
   128e4:	sub	sp, fp, #4
   128e8:	ldr	fp, [sp]
   128ec:	add	sp, sp, #4
   128f0:	pop	{pc}		; (ldr pc, [sp], #4)
   128f4:	push	{fp}		; (str fp, [sp, #-4]!)
   128f8:	add	fp, sp, #0
   128fc:	sub	sp, sp, #12
   12900:	strd	r0, [fp, #-12]
   12904:	ldrd	r2, [fp, #-12]
   12908:	mov	r0, r2
   1290c:	mov	r1, r3
   12910:	add	sp, fp, #0
   12914:	pop	{fp}		; (ldr fp, [sp], #4)
   12918:	bx	lr
   1291c:	str	fp, [sp, #-8]!
   12920:	str	lr, [sp, #4]
   12924:	add	fp, sp, #4
   12928:	sub	sp, sp, #16
   1292c:	str	r0, [fp, #-8]
   12930:	strd	r2, [fp, #-20]	; 0xffffffec
   12934:	ldrd	r0, [fp, #-20]	; 0xffffffec
   12938:	bl	128f4 <_start@@Base+0x23c>
   1293c:	mov	r2, r0
   12940:	mov	r3, r1
   12944:	ldr	r1, [fp, #-8]
   12948:	strd	r2, [r1]
   1294c:	nop	{0}
   12950:	sub	sp, fp, #4
   12954:	ldr	fp, [sp]
   12958:	add	sp, sp, #4
   1295c:	pop	{pc}		; (ldr pc, [sp], #4)
   12960:	push	{fp}		; (str fp, [sp, #-4]!)
   12964:	add	fp, sp, #0
   12968:	sub	sp, sp, #12
   1296c:	mov	r3, r0
   12970:	strb	r3, [fp, #-5]
   12974:	ldrsb	r3, [fp, #-5]
   12978:	mov	r0, r3
   1297c:	add	sp, fp, #0
   12980:	pop	{fp}		; (ldr fp, [sp], #4)
   12984:	bx	lr
   12988:	push	{fp}		; (str fp, [sp, #-4]!)
   1298c:	add	fp, sp, #0
   12990:	sub	sp, sp, #12
   12994:	mov	r3, r0
   12998:	strb	r3, [fp, #-5]
   1299c:	ldrsb	r3, [fp, #-5]
   129a0:	mov	r0, r3
   129a4:	add	sp, fp, #0
   129a8:	pop	{fp}		; (ldr fp, [sp], #4)
   129ac:	bx	lr
   129b0:	str	fp, [sp, #-8]!
   129b4:	str	lr, [sp, #4]
   129b8:	add	fp, sp, #4
   129bc:	sub	sp, sp, #8
   129c0:	str	r0, [fp, #-8]
   129c4:	ldr	r3, [fp, #-8]
   129c8:	ldrsb	r3, [r3]
   129cc:	mov	r0, r3
   129d0:	bl	12960 <_start@@Base+0x2a8>
   129d4:	mov	r3, r0
   129d8:	mov	r0, r3
   129dc:	sub	sp, fp, #4
   129e0:	ldr	fp, [sp]
   129e4:	add	sp, sp, #4
   129e8:	pop	{pc}		; (ldr pc, [sp], #4)
   129ec:	str	fp, [sp, #-8]!
   129f0:	str	lr, [sp, #4]
   129f4:	add	fp, sp, #4
   129f8:	sub	sp, sp, #8
   129fc:	str	r0, [fp, #-8]
   12a00:	mov	r3, r1
   12a04:	strb	r3, [fp, #-9]
   12a08:	ldrsb	r3, [fp, #-9]
   12a0c:	mov	r0, r3
   12a10:	bl	12988 <_start@@Base+0x2d0>
   12a14:	mov	r3, r0
   12a18:	mov	r2, r3
   12a1c:	ldr	r3, [fp, #-8]
   12a20:	strb	r2, [r3]
   12a24:	nop	{0}
   12a28:	sub	sp, fp, #4
   12a2c:	ldr	fp, [sp]
   12a30:	add	sp, sp, #4
   12a34:	pop	{pc}		; (ldr pc, [sp], #4)
   12a38:	push	{fp}		; (str fp, [sp, #-4]!)
   12a3c:	add	fp, sp, #0
   12a40:	sub	sp, sp, #12
   12a44:	mov	r3, r0
   12a48:	strh	r3, [fp, #-6]
   12a4c:	ldrsh	r3, [fp, #-6]
   12a50:	mov	r0, r3
   12a54:	add	sp, fp, #0
   12a58:	pop	{fp}		; (ldr fp, [sp], #4)
   12a5c:	bx	lr
   12a60:	push	{fp}		; (str fp, [sp, #-4]!)
   12a64:	add	fp, sp, #0
   12a68:	sub	sp, sp, #12
   12a6c:	mov	r3, r0
   12a70:	strh	r3, [fp, #-6]
   12a74:	ldrsh	r3, [fp, #-6]
   12a78:	mov	r0, r3
   12a7c:	add	sp, fp, #0
   12a80:	pop	{fp}		; (ldr fp, [sp], #4)
   12a84:	bx	lr
   12a88:	str	fp, [sp, #-8]!
   12a8c:	str	lr, [sp, #4]
   12a90:	add	fp, sp, #4
   12a94:	sub	sp, sp, #8
   12a98:	str	r0, [fp, #-8]
   12a9c:	ldr	r3, [fp, #-8]
   12aa0:	ldrsh	r3, [r3]
   12aa4:	mov	r0, r3
   12aa8:	bl	12a38 <_start@@Base+0x380>
   12aac:	mov	r3, r0
   12ab0:	mov	r0, r3
   12ab4:	sub	sp, fp, #4
   12ab8:	ldr	fp, [sp]
   12abc:	add	sp, sp, #4
   12ac0:	pop	{pc}		; (ldr pc, [sp], #4)
   12ac4:	str	fp, [sp, #-8]!
   12ac8:	str	lr, [sp, #4]
   12acc:	add	fp, sp, #4
   12ad0:	sub	sp, sp, #8
   12ad4:	str	r0, [fp, #-8]
   12ad8:	mov	r3, r1
   12adc:	strh	r3, [fp, #-10]
   12ae0:	ldrsh	r3, [fp, #-10]
   12ae4:	mov	r0, r3
   12ae8:	bl	12a60 <_start@@Base+0x3a8>
   12aec:	mov	r3, r0
   12af0:	mov	r2, r3
   12af4:	ldr	r3, [fp, #-8]
   12af8:	strh	r2, [r3]
   12afc:	nop	{0}
   12b00:	sub	sp, fp, #4
   12b04:	ldr	fp, [sp]
   12b08:	add	sp, sp, #4
   12b0c:	pop	{pc}		; (ldr pc, [sp], #4)
   12b10:	push	{fp}		; (str fp, [sp, #-4]!)
   12b14:	add	fp, sp, #0
   12b18:	sub	sp, sp, #12
   12b1c:	str	r0, [fp, #-8]
   12b20:	ldr	r3, [fp, #-8]
   12b24:	mov	r0, r3
   12b28:	add	sp, fp, #0
   12b2c:	pop	{fp}		; (ldr fp, [sp], #4)
   12b30:	bx	lr
   12b34:	str	fp, [sp, #-8]!
   12b38:	str	lr, [sp, #4]
   12b3c:	add	fp, sp, #4
   12b40:	sub	sp, sp, #8
   12b44:	str	r0, [fp, #-8]
   12b48:	str	r1, [fp, #-12]
   12b4c:	ldr	r0, [fp, #-12]
   12b50:	bl	12b10 <_start@@Base+0x458>
   12b54:	mov	r2, r0
   12b58:	ldr	r3, [fp, #-8]
   12b5c:	str	r2, [r3]
   12b60:	nop	{0}
   12b64:	sub	sp, fp, #4
   12b68:	ldr	fp, [sp]
   12b6c:	add	sp, sp, #4
   12b70:	pop	{pc}		; (ldr pc, [sp], #4)
   12b74:	push	{fp}		; (str fp, [sp, #-4]!)
   12b78:	add	fp, sp, #0
   12b7c:	sub	sp, sp, #12
   12b80:	strd	r0, [fp, #-12]
   12b84:	ldrd	r2, [fp, #-12]
   12b88:	mov	r0, r2
   12b8c:	mov	r1, r3
   12b90:	add	sp, fp, #0
   12b94:	pop	{fp}		; (ldr fp, [sp], #4)
   12b98:	bx	lr
   12b9c:	str	fp, [sp, #-8]!
   12ba0:	str	lr, [sp, #4]
   12ba4:	add	fp, sp, #4
   12ba8:	sub	sp, sp, #16
   12bac:	str	r0, [fp, #-8]
   12bb0:	strd	r2, [fp, #-20]	; 0xffffffec
   12bb4:	ldrd	r0, [fp, #-20]	; 0xffffffec
   12bb8:	bl	12b74 <_start@@Base+0x4bc>
   12bbc:	mov	r2, r0
   12bc0:	mov	r3, r1
   12bc4:	ldr	r1, [fp, #-8]
   12bc8:	strd	r2, [r1]
   12bcc:	nop	{0}
   12bd0:	sub	sp, fp, #4
   12bd4:	ldr	fp, [sp]
   12bd8:	add	sp, sp, #4
   12bdc:	pop	{pc}		; (ldr pc, [sp], #4)
   12be0:	push	{fp}		; (str fp, [sp, #-4]!)
   12be4:	add	fp, sp, #0
   12be8:	sub	sp, sp, #20
   12bec:	vstr	s0, [fp, #-16]
   12bf0:	ldr	r3, [fp, #-16]
   12bf4:	str	r3, [fp, #-8]
   12bf8:	ldr	r3, [fp, #-8]
   12bfc:	str	r3, [fp, #-8]
   12c00:	ldr	r3, [fp, #-8]
   12c04:	vmov	s15, r3
   12c08:	vmov.f32	s0, s15
   12c0c:	add	sp, fp, #0
   12c10:	pop	{fp}		; (ldr fp, [sp], #4)
   12c14:	bx	lr
   12c18:	push	{fp}		; (str fp, [sp, #-4]!)
   12c1c:	add	fp, sp, #0
   12c20:	sub	sp, sp, #20
   12c24:	vstr	s0, [fp, #-16]
   12c28:	ldr	r3, [fp, #-16]
   12c2c:	str	r3, [fp, #-8]
   12c30:	ldr	r3, [fp, #-8]
   12c34:	str	r3, [fp, #-8]
   12c38:	ldr	r3, [fp, #-8]
   12c3c:	vmov	s15, r3
   12c40:	vmov.f32	s0, s15
   12c44:	add	sp, fp, #0
   12c48:	pop	{fp}		; (ldr fp, [sp], #4)
   12c4c:	bx	lr
   12c50:	str	fp, [sp, #-8]!
   12c54:	str	lr, [sp, #4]
   12c58:	add	fp, sp, #4
   12c5c:	sub	sp, sp, #8
   12c60:	str	r0, [fp, #-8]
   12c64:	ldr	r3, [fp, #-8]
   12c68:	vldr	s15, [r3]
   12c6c:	vmov.f32	s0, s15
   12c70:	bl	12be0 <_start@@Base+0x528>
   12c74:	vmov.f32	s15, s0
   12c78:	vmov.f32	s0, s15
   12c7c:	sub	sp, fp, #4
   12c80:	ldr	fp, [sp]
   12c84:	add	sp, sp, #4
   12c88:	pop	{pc}		; (ldr pc, [sp], #4)
   12c8c:	str	fp, [sp, #-8]!
   12c90:	str	lr, [sp, #4]
   12c94:	add	fp, sp, #4
   12c98:	sub	sp, sp, #8
   12c9c:	str	r0, [fp, #-8]
   12ca0:	vstr	s0, [fp, #-12]
   12ca4:	vldr	s0, [fp, #-12]
   12ca8:	bl	12c18 <_start@@Base+0x560>
   12cac:	vmov.f32	s15, s0
   12cb0:	ldr	r3, [fp, #-8]
   12cb4:	vstr	s15, [r3]
   12cb8:	nop	{0}
   12cbc:	sub	sp, fp, #4
   12cc0:	ldr	fp, [sp]
   12cc4:	add	sp, sp, #4
   12cc8:	pop	{pc}		; (ldr pc, [sp], #4)
   12ccc:	push	{fp}		; (str fp, [sp, #-4]!)
   12cd0:	add	fp, sp, #0
   12cd4:	sub	sp, sp, #20
   12cd8:	vstr	d0, [fp, #-20]	; 0xffffffec
   12cdc:	ldrd	r2, [fp, #-20]	; 0xffffffec
   12ce0:	strd	r2, [fp, #-12]
   12ce4:	ldrd	r2, [fp, #-12]
   12ce8:	strd	r2, [fp, #-12]
   12cec:	ldrd	r2, [fp, #-12]
   12cf0:	vmov	d7, r2, r3
   12cf4:	vmov.f64	d0, d7
   12cf8:	add	sp, fp, #0
   12cfc:	pop	{fp}		; (ldr fp, [sp], #4)
   12d00:	bx	lr
   12d04:	push	{fp}		; (str fp, [sp, #-4]!)
   12d08:	add	fp, sp, #0
   12d0c:	sub	sp, sp, #20
   12d10:	vstr	d0, [fp, #-20]	; 0xffffffec
   12d14:	ldrd	r2, [fp, #-20]	; 0xffffffec
   12d18:	strd	r2, [fp, #-12]
   12d1c:	ldrd	r2, [fp, #-12]
   12d20:	strd	r2, [fp, #-12]
   12d24:	ldrd	r2, [fp, #-12]
   12d28:	vmov	d7, r2, r3
   12d2c:	vmov.f64	d0, d7
   12d30:	add	sp, fp, #0
   12d34:	pop	{fp}		; (ldr fp, [sp], #4)
   12d38:	bx	lr
   12d3c:	str	fp, [sp, #-8]!
   12d40:	str	lr, [sp, #4]
   12d44:	add	fp, sp, #4
   12d48:	sub	sp, sp, #8
   12d4c:	str	r0, [fp, #-8]
   12d50:	ldr	r3, [fp, #-8]
   12d54:	vldr	d7, [r3]
   12d58:	vmov.f64	d0, d7
   12d5c:	bl	12ccc <_start@@Base+0x614>
   12d60:	vmov.f64	d7, d0
   12d64:	vmov.f64	d0, d7
   12d68:	sub	sp, fp, #4
   12d6c:	ldr	fp, [sp]
   12d70:	add	sp, sp, #4
   12d74:	pop	{pc}		; (ldr pc, [sp], #4)
   12d78:	str	fp, [sp, #-8]!
   12d7c:	str	lr, [sp, #4]
   12d80:	add	fp, sp, #4
   12d84:	sub	sp, sp, #16
   12d88:	str	r0, [fp, #-8]
   12d8c:	vstr	d0, [fp, #-20]	; 0xffffffec
   12d90:	vldr	d0, [fp, #-20]	; 0xffffffec
   12d94:	bl	12d04 <_start@@Base+0x64c>
   12d98:	vmov.f64	d7, d0
   12d9c:	ldr	r3, [fp, #-8]
   12da0:	vstr	d7, [r3]
   12da4:	nop	{0}
   12da8:	sub	sp, fp, #4
   12dac:	ldr	fp, [sp]
   12db0:	add	sp, sp, #4
   12db4:	pop	{pc}		; (ldr pc, [sp], #4)
   12db8:	push	{fp}		; (str fp, [sp, #-4]!)
   12dbc:	add	fp, sp, #0
   12dc0:	sub	sp, sp, #12
   12dc4:	mov	r3, r0
   12dc8:	strb	r3, [fp, #-5]
   12dcc:	ldrb	r3, [fp, #-5]
   12dd0:	mov	r0, r3
   12dd4:	add	sp, fp, #0
   12dd8:	pop	{fp}		; (ldr fp, [sp], #4)
   12ddc:	bx	lr
   12de0:	str	fp, [sp, #-8]!
   12de4:	str	lr, [sp, #4]
   12de8:	add	fp, sp, #4
   12dec:	sub	sp, sp, #8
   12df0:	str	r0, [fp, #-8]
   12df4:	mov	r3, r1
   12df8:	strb	r3, [fp, #-9]
   12dfc:	ldrb	r3, [fp, #-9]
   12e00:	mov	r0, r3
   12e04:	bl	12db8 <_start@@Base+0x700>
   12e08:	mov	r3, r0
   12e0c:	mov	r2, r3
   12e10:	ldr	r3, [fp, #-8]
   12e14:	strb	r2, [r3]
   12e18:	nop	{0}
   12e1c:	sub	sp, fp, #4
   12e20:	ldr	fp, [sp]
   12e24:	add	sp, sp, #4
   12e28:	pop	{pc}		; (ldr pc, [sp], #4)
   12e2c:	push	{fp}		; (str fp, [sp, #-4]!)
   12e30:	add	fp, sp, #0
   12e34:	sub	sp, sp, #12
   12e38:	str	r0, [fp, #-8]
   12e3c:	ldr	r3, [fp, #-8]
   12e40:	mov	r0, r3
   12e44:	add	sp, fp, #0
   12e48:	pop	{fp}		; (ldr fp, [sp], #4)
   12e4c:	bx	lr
   12e50:	str	fp, [sp, #-8]!
   12e54:	str	lr, [sp, #4]
   12e58:	add	fp, sp, #4
   12e5c:	sub	sp, sp, #8
   12e60:	str	r0, [fp, #-8]
   12e64:	ldr	r3, [fp, #-8]
   12e68:	ldr	r3, [r3]
   12e6c:	mov	r0, r3
   12e70:	bl	12e2c <_start@@Base+0x774>
   12e74:	mov	r3, r0
   12e78:	mov	r0, r3
   12e7c:	sub	sp, fp, #4
   12e80:	ldr	fp, [sp]
   12e84:	add	sp, sp, #4
   12e88:	pop	{pc}		; (ldr pc, [sp], #4)
   12e8c:	push	{fp}		; (str fp, [sp, #-4]!)
   12e90:	add	fp, sp, #0
   12e94:	sub	sp, sp, #12
   12e98:	str	r0, [fp, #-8]
   12e9c:	ldr	r3, [fp, #-8]
   12ea0:	mov	r0, r3
   12ea4:	add	sp, fp, #0
   12ea8:	pop	{fp}		; (ldr fp, [sp], #4)
   12eac:	bx	lr
   12eb0:	str	fp, [sp, #-8]!
   12eb4:	str	lr, [sp, #4]
   12eb8:	add	fp, sp, #4
   12ebc:	sub	sp, sp, #8
   12ec0:	str	r0, [fp, #-8]
   12ec4:	ldr	r3, [fp, #-8]
   12ec8:	ldr	r3, [r3]
   12ecc:	mov	r0, r3
   12ed0:	bl	12e8c <_start@@Base+0x7d4>
   12ed4:	mov	r3, r0
   12ed8:	mov	r0, r3
   12edc:	sub	sp, fp, #4
   12ee0:	ldr	fp, [sp]
   12ee4:	add	sp, sp, #4
   12ee8:	pop	{pc}		; (ldr pc, [sp], #4)
   12eec:	push	{fp}		; (str fp, [sp, #-4]!)
   12ef0:	add	fp, sp, #0
   12ef4:	sub	sp, sp, #12
   12ef8:	mov	r3, r0
   12efc:	strh	r3, [fp, #-6]
   12f00:	ldrh	r3, [fp, #-6]
   12f04:	mov	r0, r3
   12f08:	add	sp, fp, #0
   12f0c:	pop	{fp}		; (ldr fp, [sp], #4)
   12f10:	bx	lr
   12f14:	str	fp, [sp, #-8]!
   12f18:	str	lr, [sp, #4]
   12f1c:	add	fp, sp, #4
   12f20:	sub	sp, sp, #8
   12f24:	str	r0, [fp, #-8]
   12f28:	ldr	r3, [fp, #-8]
   12f2c:	ldrh	r3, [r3]
   12f30:	mov	r0, r3
   12f34:	bl	12eec <_start@@Base+0x834>
   12f38:	mov	r3, r0
   12f3c:	mov	r0, r3
   12f40:	sub	sp, fp, #4
   12f44:	ldr	fp, [sp]
   12f48:	add	sp, sp, #4
   12f4c:	pop	{pc}		; (ldr pc, [sp], #4)
   12f50:	push	{fp}		; (str fp, [sp, #-4]!)
   12f54:	add	fp, sp, #0
   12f58:	sub	sp, sp, #12
   12f5c:	str	r0, [fp, #-8]
   12f60:	ldr	r3, [fp, #-8]
   12f64:	mov	r0, r3
   12f68:	add	sp, fp, #0
   12f6c:	pop	{fp}		; (ldr fp, [sp], #4)
   12f70:	bx	lr
   12f74:	push	{fp}		; (str fp, [sp, #-4]!)
   12f78:	add	fp, sp, #0
   12f7c:	sub	sp, sp, #12
   12f80:	str	r0, [fp, #-8]
   12f84:	ldr	r3, [fp, #-8]
   12f88:	mov	r0, r3
   12f8c:	add	sp, fp, #0
   12f90:	pop	{fp}		; (ldr fp, [sp], #4)
   12f94:	bx	lr
   12f98:	str	fp, [sp, #-8]!
   12f9c:	str	lr, [sp, #4]
   12fa0:	add	fp, sp, #4
   12fa4:	sub	sp, sp, #8
   12fa8:	str	r0, [fp, #-8]
   12fac:	ldr	r3, [fp, #-8]
   12fb0:	ldr	r3, [r3]
   12fb4:	mov	r0, r3
   12fb8:	bl	12f50 <_start@@Base+0x898>
   12fbc:	mov	r3, r0
   12fc0:	mov	r0, r3
   12fc4:	sub	sp, fp, #4
   12fc8:	ldr	fp, [sp]
   12fcc:	add	sp, sp, #4
   12fd0:	pop	{pc}		; (ldr pc, [sp], #4)
   12fd4:	str	fp, [sp, #-8]!
   12fd8:	str	lr, [sp, #4]
   12fdc:	add	fp, sp, #4
   12fe0:	sub	sp, sp, #16
   12fe4:	str	r0, [fp, #-16]
   12fe8:	str	r1, [fp, #-20]	; 0xffffffec
   12fec:	mov	r3, #0
   12ff0:	str	r3, [fp, #-12]
   12ff4:	ldr	r3, [fp, #-20]	; 0xffffffec
   12ff8:	cmp	r3, #0
   12ffc:	bne	13008 <_start@@Base+0x950>
   13000:	mov	r3, #1
   13004:	b	1306c <_start@@Base+0x9b4>
   13008:	sub	r3, fp, #12
   1300c:	mov	r2, #4
   13010:	ldr	r1, [fp, #-20]	; 0xffffffec
   13014:	mov	r0, r3
   13018:	bl	12658 <strncpy@plt>
   1301c:	ldr	r3, [fp, #-12]
   13020:	mov	r0, r3
   13024:	bl	12f74 <_start@@Base+0x8bc>
   13028:	mov	r3, r0
   1302c:	str	r3, [fp, #-12]
   13030:	ldr	r3, [fp, #-16]
   13034:	add	r3, r3, #4
   13038:	mov	r0, r3
   1303c:	bl	12f98 <_start@@Base+0x8e0>
   13040:	str	r0, [fp, #-8]
   13044:	ldr	r3, [fp, #-12]
   13048:	cmp	r3, #0
   1304c:	beq	13060 <_start@@Base+0x9a8>
   13050:	ldr	r3, [fp, #-12]
   13054:	ldr	r2, [fp, #-8]
   13058:	cmp	r2, r3
   1305c:	bne	13068 <_start@@Base+0x9b0>
   13060:	mov	r3, #1
   13064:	b	1306c <_start@@Base+0x9b4>
   13068:	mov	r3, #0
   1306c:	mov	r0, r3
   13070:	sub	sp, fp, #4
   13074:	ldr	fp, [sp]
   13078:	add	sp, sp, #4
   1307c:	pop	{pc}		; (ldr pc, [sp], #4)
   13080:	push	{fp}		; (str fp, [sp, #-4]!)
   13084:	add	fp, sp, #0
   13088:	sub	sp, sp, #12
   1308c:	mov	r3, r0
   13090:	strb	r3, [fp, #-5]
   13094:	ldrsb	r3, [fp, #-5]
   13098:	mov	r0, r3
   1309c:	add	sp, fp, #0
   130a0:	pop	{fp}		; (ldr fp, [sp], #4)
   130a4:	bx	lr
   130a8:	str	fp, [sp, #-8]!
   130ac:	str	lr, [sp, #4]
   130b0:	add	fp, sp, #4
   130b4:	sub	sp, sp, #8
   130b8:	str	r0, [fp, #-8]
   130bc:	ldr	r3, [fp, #-8]
   130c0:	ldrsb	r3, [r3]
   130c4:	mov	r0, r3
   130c8:	bl	13080 <_start@@Base+0x9c8>
   130cc:	mov	r3, r0
   130d0:	mov	r0, r3
   130d4:	sub	sp, fp, #4
   130d8:	ldr	fp, [sp]
   130dc:	add	sp, sp, #4
   130e0:	pop	{pc}		; (ldr pc, [sp], #4)
   130e4:	str	fp, [sp, #-8]!
   130e8:	str	lr, [sp, #4]
   130ec:	add	fp, sp, #4
   130f0:	sub	sp, sp, #8
   130f4:	str	r0, [fp, #-8]
   130f8:	ldr	r3, [fp, #-8]
   130fc:	cmp	r3, #0
   13100:	beq	13118 <_start@@Base+0xa60>
   13104:	ldr	r3, [fp, #-8]
   13108:	mov	r0, r3
   1310c:	bl	12a88 <_start@@Base+0x3d0>
   13110:	mov	r3, r0
   13114:	b	1311c <_start@@Base+0xa64>
   13118:	mov	r3, #0
   1311c:	mov	r0, r3
   13120:	sub	sp, fp, #4
   13124:	ldr	fp, [sp]
   13128:	add	sp, sp, #4
   1312c:	pop	{pc}		; (ldr pc, [sp], #4)
   13130:	str	fp, [sp, #-8]!
   13134:	str	lr, [sp, #4]
   13138:	add	fp, sp, #4
   1313c:	sub	sp, sp, #8
   13140:	str	r0, [fp, #-8]
   13144:	ldr	r3, [fp, #-8]
   13148:	cmp	r3, #0
   1314c:	beq	13168 <_start@@Base+0xab0>
   13150:	ldr	r3, [fp, #-8]
   13154:	add	r3, r3, #2
   13158:	mov	r0, r3
   1315c:	bl	129b0 <_start@@Base+0x2f8>
   13160:	mov	r3, r0
   13164:	b	1316c <_start@@Base+0xab4>
   13168:	mov	r3, #0
   1316c:	mov	r0, r3
   13170:	sub	sp, fp, #4
   13174:	ldr	fp, [sp]
   13178:	add	sp, sp, #4
   1317c:	pop	{pc}		; (ldr pc, [sp], #4)
   13180:	str	fp, [sp, #-8]!
   13184:	str	lr, [sp, #4]
   13188:	add	fp, sp, #4
   1318c:	sub	sp, sp, #8
   13190:	str	r0, [fp, #-8]
   13194:	ldr	r3, [fp, #-8]
   13198:	cmp	r3, #0
   1319c:	beq	131b4 <_start@@Base+0xafc>
   131a0:	ldr	r3, [fp, #-8]
   131a4:	mov	r0, r3
   131a8:	bl	12c50 <_start@@Base+0x598>
   131ac:	vmov.f32	s15, s0
   131b0:	b	131b8 <_start@@Base+0xb00>
   131b4:	vldr	s15, [pc, #16]	; 131cc <_start@@Base+0xb14>
   131b8:	vmov.f32	s0, s15
   131bc:	sub	sp, fp, #4
   131c0:	ldr	fp, [sp]
   131c4:	add	sp, sp, #4
   131c8:	pop	{pc}		; (ldr pc, [sp], #4)
   131cc:	andeq	r0, r0, r0
   131d0:	str	fp, [sp, #-8]!
   131d4:	str	lr, [sp, #4]
   131d8:	add	fp, sp, #4
   131dc:	sub	sp, sp, #8
   131e0:	str	r0, [fp, #-8]
   131e4:	ldr	r3, [fp, #-8]
   131e8:	cmp	r3, #0
   131ec:	beq	13208 <_start@@Base+0xb50>
   131f0:	ldr	r3, [fp, #-8]
   131f4:	add	r3, r3, #4
   131f8:	mov	r0, r3
   131fc:	bl	12c50 <_start@@Base+0x598>
   13200:	vmov.f32	s15, s0
   13204:	b	1320c <_start@@Base+0xb54>
   13208:	vldr	s15, [pc, #16]	; 13220 <_start@@Base+0xb68>
   1320c:	vmov.f32	s0, s15
   13210:	sub	sp, fp, #4
   13214:	ldr	fp, [sp]
   13218:	add	sp, sp, #4
   1321c:	pop	{pc}		; (ldr pc, [sp], #4)
   13220:	andeq	r0, r0, r0
   13224:	str	fp, [sp, #-8]!
   13228:	str	lr, [sp, #4]
   1322c:	add	fp, sp, #4
   13230:	sub	sp, sp, #8
   13234:	str	r0, [fp, #-8]
   13238:	ldr	r3, [fp, #-8]
   1323c:	cmp	r3, #0
   13240:	beq	1325c <_start@@Base+0xba4>
   13244:	ldr	r3, [fp, #-8]
   13248:	add	r3, r3, #8
   1324c:	mov	r0, r3
   13250:	bl	12c50 <_start@@Base+0x598>
   13254:	vmov.f32	s15, s0
   13258:	b	13260 <_start@@Base+0xba8>
   1325c:	vldr	s15, [pc, #16]	; 13274 <_start@@Base+0xbbc>
   13260:	vmov.f32	s0, s15
   13264:	sub	sp, fp, #4
   13268:	ldr	fp, [sp]
   1326c:	add	sp, sp, #4
   13270:	pop	{pc}		; (ldr pc, [sp], #4)
   13274:	andeq	r0, r0, r0
   13278:	str	fp, [sp, #-8]!
   1327c:	str	lr, [sp, #4]
   13280:	add	fp, sp, #4
   13284:	sub	sp, sp, #8
   13288:	str	r0, [fp, #-8]
   1328c:	ldr	r3, [fp, #-8]
   13290:	cmp	r3, #0
   13294:	beq	132b0 <_start@@Base+0xbf8>
   13298:	ldr	r3, [fp, #-8]
   1329c:	add	r3, r3, #16
   132a0:	mov	r0, r3
   132a4:	bl	12d3c <_start@@Base+0x684>
   132a8:	vmov.f64	d7, d0
   132ac:	b	132b4 <_start@@Base+0xbfc>
   132b0:	vldr	d7, [pc, #16]	; 132c8 <_start@@Base+0xc10>
   132b4:	vmov.f64	d0, d7
   132b8:	sub	sp, fp, #4
   132bc:	ldr	fp, [sp]
   132c0:	add	sp, sp, #4
   132c4:	pop	{pc}		; (ldr pc, [sp], #4)
	...
   132d0:	str	fp, [sp, #-8]!
   132d4:	str	lr, [sp, #4]
   132d8:	add	fp, sp, #4
   132dc:	sub	sp, sp, #8
   132e0:	str	r0, [fp, #-8]
   132e4:	ldr	r3, [fp, #-8]
   132e8:	cmp	r3, #0
   132ec:	beq	13308 <_start@@Base+0xc50>
   132f0:	ldr	r3, [fp, #-8]
   132f4:	add	r3, r3, #24
   132f8:	mov	r0, r3
   132fc:	bl	130a8 <_start@@Base+0x9f0>
   13300:	mov	r3, r0
   13304:	b	1330c <_start@@Base+0xc54>
   13308:	mov	r3, #0
   1330c:	mov	r0, r3
   13310:	sub	sp, fp, #4
   13314:	ldr	fp, [sp]
   13318:	add	sp, sp, #4
   1331c:	pop	{pc}		; (ldr pc, [sp], #4)
   13320:	push	{fp}		; (str fp, [sp, #-4]!)
   13324:	add	fp, sp, #0
   13328:	sub	sp, sp, #12
   1332c:	str	r0, [fp, #-8]
   13330:	ldr	r3, [fp, #-8]
   13334:	cmp	r3, #0
   13338:	beq	13348 <_start@@Base+0xc90>
   1333c:	ldr	r3, [fp, #-8]
   13340:	add	r3, r3, #26
   13344:	b	1334c <_start@@Base+0xc94>
   13348:	mov	r3, #0
   1334c:	mov	r0, r3
   13350:	add	sp, fp, #0
   13354:	pop	{fp}		; (ldr fp, [sp], #4)
   13358:	bx	lr
   1335c:	str	fp, [sp, #-8]!
   13360:	str	lr, [sp, #4]
   13364:	add	fp, sp, #4
   13368:	sub	sp, sp, #8
   1336c:	str	r0, [fp, #-8]
   13370:	str	r1, [fp, #-12]
   13374:	ldr	r3, [fp, #-8]
   13378:	cmp	r3, #0
   1337c:	beq	133b0 <_start@@Base+0xcf8>
   13380:	ldr	r1, [fp, #-12]
   13384:	ldr	r0, [fp, #-8]
   13388:	bl	12fd4 <_start@@Base+0x91c>
   1338c:	mov	r3, r0
   13390:	cmp	r3, #0
   13394:	beq	133b0 <_start@@Base+0xcf8>
   13398:	ldr	r0, [fp, #-8]
   1339c:	bl	12e50 <_start@@Base+0x798>
   133a0:	mov	r2, r0
   133a4:	ldr	r3, [fp, #-8]
   133a8:	add	r3, r3, r2
   133ac:	b	133b4 <_start@@Base+0xcfc>
   133b0:	mov	r3, #0
   133b4:	mov	r0, r3
   133b8:	sub	sp, fp, #4
   133bc:	ldr	fp, [sp]
   133c0:	add	sp, sp, #4
   133c4:	pop	{pc}		; (ldr pc, [sp], #4)
   133c8:	str	fp, [sp, #-8]!
   133cc:	str	lr, [sp, #4]
   133d0:	add	fp, sp, #4
   133d4:	sub	sp, sp, #16
   133d8:	str	r0, [fp, #-16]
   133dc:	mov	r3, #0
   133e0:	strh	r3, [fp, #-6]
   133e4:	ldr	r3, [fp, #-16]
   133e8:	cmp	r3, #0
   133ec:	bne	13410 <_start@@Base+0xd58>
   133f0:	ldr	r3, [pc, #184]	; 134b0 <_start@@Base+0xdf8>
   133f4:	add	r3, pc, r3
   133f8:	mov	r2, #696	; 0x2b8
   133fc:	ldr	r1, [pc, #176]	; 134b4 <_start@@Base+0xdfc>
   13400:	add	r1, pc, r1
   13404:	ldr	r0, [pc, #172]	; 134b8 <_start@@Base+0xe00>
   13408:	add	r0, pc, r0
   1340c:	bl	126ac <__assert_fail@plt>
   13410:	mov	r3, #0
   13414:	strh	r3, [fp, #-8]
   13418:	ldr	r0, [fp, #-16]
   1341c:	bl	12eb0 <_start@@Base+0x7f8>
   13420:	mov	r3, r0
   13424:	rsb	r3, r3, #0
   13428:	ldr	r2, [fp, #-16]
   1342c:	add	r3, r2, r3
   13430:	str	r3, [fp, #-12]
   13434:	ldr	r0, [fp, #-12]
   13438:	bl	12f14 <_start@@Base+0x85c>
   1343c:	mov	r3, r0
   13440:	mov	r2, r3
   13444:	ldrh	r3, [fp, #-8]
   13448:	add	r3, r3, #3
   1344c:	lsl	r3, r3, #1
   13450:	cmp	r2, r3
   13454:	bcc	1347c <_start@@Base+0xdc4>
   13458:	ldrh	r3, [fp, #-8]
   1345c:	add	r3, r3, #2
   13460:	lsl	r3, r3, #1
   13464:	ldr	r2, [fp, #-12]
   13468:	add	r3, r2, r3
   1346c:	mov	r0, r3
   13470:	bl	12f14 <_start@@Base+0x85c>
   13474:	mov	r3, r0
   13478:	strh	r3, [fp, #-6]
   1347c:	ldrh	r3, [fp, #-6]
   13480:	cmp	r3, #0
   13484:	beq	13498 <_start@@Base+0xde0>
   13488:	ldrh	r3, [fp, #-6]
   1348c:	ldr	r2, [fp, #-16]
   13490:	add	r3, r2, r3
   13494:	b	1349c <_start@@Base+0xde4>
   13498:	mov	r3, #0
   1349c:	mov	r0, r3
   134a0:	sub	sp, fp, #4
   134a4:	ldr	fp, [sp]
   134a8:	add	sp, sp, #4
   134ac:	pop	{pc}		; (ldr pc, [sp], #4)
   134b0:	andeq	r3, r2, r0, lsr #23
   134b4:	ldrdeq	r3, [r2], -r8
   134b8:	andeq	r3, r2, r8, asr #18
   134bc:	str	fp, [sp, #-8]!
   134c0:	str	lr, [sp, #4]
   134c4:	add	fp, sp, #4
   134c8:	sub	sp, sp, #16
   134cc:	str	r0, [fp, #-8]
   134d0:	str	r1, [fp, #-12]
   134d4:	str	r2, [fp, #-16]
   134d8:	str	r3, [fp, #-20]	; 0xffffffec
   134dc:	mov	r2, #44	; 0x2c
   134e0:	mov	r1, #0
   134e4:	ldr	r0, [fp, #-8]
   134e8:	bl	1264c <memset@plt>
   134ec:	ldr	r3, [fp, #-8]
   134f0:	ldr	r2, [fp, #-12]
   134f4:	str	r2, [r3]
   134f8:	ldr	r3, [fp, #-8]
   134fc:	ldr	r2, [fp, #-16]
   13500:	str	r2, [r3, #4]
   13504:	ldr	r3, [fp, #-8]
   13508:	mov	r2, #1
   1350c:	str	r2, [r3, #16]
   13510:	ldr	r3, [fp, #-8]
   13514:	ldr	r2, [fp, #4]
   13518:	str	r2, [r3, #8]
   1351c:	ldr	r3, [fp, #-8]
   13520:	ldr	r2, [fp, #-16]
   13524:	str	r2, [r3, #28]
   13528:	ldr	r3, [fp, #-8]
   1352c:	ldr	r2, [fp, #-20]	; 0xffffffec
   13530:	str	r2, [r3, #32]
   13534:	ldr	r3, [fp, #-8]
   13538:	ldr	r2, [fp, #-16]
   1353c:	str	r2, [r3, #36]	; 0x24
   13540:	nop	{0}
   13544:	sub	sp, fp, #4
   13548:	ldr	fp, [sp]
   1354c:	add	sp, sp, #4
   13550:	pop	{pc}		; (ldr pc, [sp], #4)
   13554:	str	fp, [sp, #-8]!
   13558:	str	lr, [sp, #4]
   1355c:	add	fp, sp, #4
   13560:	sub	sp, sp, #16
   13564:	str	r0, [fp, #-8]
   13568:	str	r1, [fp, #-12]
   1356c:	str	r2, [fp, #-16]
   13570:	ldr	r2, [fp, #-16]
   13574:	ldr	r3, [fp, #-12]
   13578:	sub	r3, r2, r3
   1357c:	cmp	r3, #1
   13580:	ble	135cc <_start@@Base+0xf14>
   13584:	ldr	r3, [fp, #-12]
   13588:	ldrb	r3, [r3]
   1358c:	cmp	r3, #32
   13590:	bls	1359c <_start@@Base+0xee4>
   13594:	ldr	r3, [fp, #-12]
   13598:	b	135e0 <_start@@Base+0xf28>
   1359c:	ldr	r3, [fp, #-12]
   135a0:	ldrb	r3, [r3]
   135a4:	cmp	r3, #32
   135a8:	bne	135cc <_start@@Base+0xf14>
   135ac:	ldr	r3, [fp, #-12]
   135b0:	add	r3, r3, #1
   135b4:	ldrb	r3, [r3]
   135b8:	cmp	r3, #32
   135bc:	bls	135cc <_start@@Base+0xf14>
   135c0:	ldr	r3, [fp, #-12]
   135c4:	add	r3, r3, #1
   135c8:	b	135e0 <_start@@Base+0xf28>
   135cc:	ldr	r2, [fp, #-16]
   135d0:	ldr	r1, [fp, #-12]
   135d4:	ldr	r0, [fp, #-8]
   135d8:	bl	333c0 <flatcc_json_parser_space_ext@@Base>
   135dc:	mov	r3, r0
   135e0:	mov	r0, r3
   135e4:	sub	sp, fp, #4
   135e8:	ldr	fp, [sp]
   135ec:	add	sp, sp, #4
   135f0:	pop	{pc}		; (ldr pc, [sp], #4)
   135f4:	str	fp, [sp, #-8]!
   135f8:	str	lr, [sp, #4]
   135fc:	add	fp, sp, #4
   13600:	sub	sp, sp, #16
   13604:	str	r0, [fp, #-8]
   13608:	str	r1, [fp, #-12]
   1360c:	str	r2, [fp, #-16]
   13610:	ldr	r2, [fp, #-12]
   13614:	ldr	r3, [fp, #-16]
   13618:	cmp	r2, r3
   1361c:	bne	13628 <_start@@Base+0xf70>
   13620:	ldr	r3, [fp, #-12]
   13624:	b	13690 <_start@@Base+0xfd8>
   13628:	ldr	r3, [fp, #-12]
   1362c:	ldrb	r3, [r3]
   13630:	cmp	r3, #34	; 0x22
   13634:	bne	13654 <_start@@Base+0xf9c>
   13638:	ldr	r3, [fp, #-12]
   1363c:	add	r3, r3, #1
   13640:	str	r3, [fp, #-12]
   13644:	ldr	r3, [fp, #-8]
   13648:	mov	r2, #0
   1364c:	str	r2, [r3, #12]
   13650:	b	1368c <_start@@Base+0xfd4>
   13654:	ldr	r3, [fp, #-12]
   13658:	ldrb	r3, [r3]
   1365c:	cmp	r3, #46	; 0x2e
   13660:	bne	13680 <_start@@Base+0xfc8>
   13664:	mov	r3, #5
   13668:	ldr	r2, [fp, #-16]
   1366c:	ldr	r1, [fp, #-12]
   13670:	ldr	r0, [fp, #-8]
   13674:	bl	33258 <flatcc_json_parser_set_error@@Base>
   13678:	mov	r3, r0
   1367c:	b	13690 <_start@@Base+0xfd8>
   13680:	ldr	r3, [fp, #-8]
   13684:	mov	r2, #1
   13688:	str	r2, [r3, #12]
   1368c:	ldr	r3, [fp, #-12]
   13690:	mov	r0, r3
   13694:	sub	sp, fp, #4
   13698:	ldr	fp, [sp]
   1369c:	add	sp, sp, #4
   136a0:	pop	{pc}		; (ldr pc, [sp], #4)
   136a4:	strd	r4, [sp, #-28]!	; 0xffffffe4
   136a8:	strd	r6, [sp, #8]
   136ac:	strd	r8, [sp, #16]
   136b0:	str	fp, [sp, #24]
   136b4:	add	fp, sp, #24
   136b8:	sub	sp, sp, #76	; 0x4c
   136bc:	str	r0, [fp, #-48]	; 0xffffffd0
   136c0:	str	r1, [fp, #-52]	; 0xffffffcc
   136c4:	mov	r2, #0
   136c8:	mov	r3, #0
   136cc:	strd	r2, [fp, #-36]	; 0xffffffdc
   136d0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   136d4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   136d8:	sub	r3, r2, r3
   136dc:	str	r3, [fp, #-40]	; 0xffffffd8
   136e0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   136e4:	cmp	r3, #8
   136e8:	bls	136f4 <_start@@Base+0x103c>
   136ec:	mov	r3, #8
   136f0:	str	r3, [fp, #-40]	; 0xffffffd8
   136f4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   136f8:	cmp	r3, #8
   136fc:	addls	pc, pc, r3, lsl #2
   13700:	b	13900 <_start@@Base+0x1248>
   13704:	b	13900 <_start@@Base+0x1248>
   13708:	b	138c0 <_start@@Base+0x1208>
   1370c:	b	13880 <_start@@Base+0x11c8>
   13710:	b	13840 <_start@@Base+0x1188>
   13714:	b	13800 <_start@@Base+0x1148>
   13718:	b	137c8 <_start@@Base+0x1110>
   1371c:	b	13784 <_start@@Base+0x10cc>
   13720:	b	1374c <_start@@Base+0x1094>
   13724:	b	13728 <_start@@Base+0x1070>
   13728:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1372c:	add	r3, r3, #7
   13730:	ldrb	r3, [r3]
   13734:	uxtb	r0, r3
   13738:	mov	r1, #0
   1373c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   13740:	orr	r6, r2, r0
   13744:	orr	r7, r3, r1
   13748:	strd	r6, [fp, #-36]	; 0xffffffdc
   1374c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   13750:	add	r3, r3, #6
   13754:	ldrb	r3, [r3]
   13758:	uxtb	r2, r3
   1375c:	mov	r3, #0
   13760:	mov	r0, #0
   13764:	mov	r1, #0
   13768:	lsl	r1, r3, #8
   1376c:	orr	r1, r1, r2, lsr #24
   13770:	lsl	r0, r2, #8
   13774:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   13778:	orr	r8, r2, r0
   1377c:	orr	r9, r3, r1
   13780:	strd	r8, [fp, #-36]	; 0xffffffdc
   13784:	ldr	r3, [fp, #-48]	; 0xffffffd0
   13788:	add	r3, r3, #5
   1378c:	ldrb	r3, [r3]
   13790:	uxtb	r2, r3
   13794:	mov	r3, #0
   13798:	mov	r0, #0
   1379c:	mov	r1, #0
   137a0:	lsl	r1, r3, #16
   137a4:	orr	r1, r1, r2, lsr #16
   137a8:	lsl	r0, r2, #16
   137ac:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   137b0:	orr	ip, r2, r0
   137b4:	str	ip, [fp, #-60]	; 0xffffffc4
   137b8:	orr	r3, r3, r1
   137bc:	str	r3, [fp, #-56]	; 0xffffffc8
   137c0:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   137c4:	strd	r2, [fp, #-36]	; 0xffffffdc
   137c8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   137cc:	add	r3, r3, #4
   137d0:	ldrb	r3, [r3]
   137d4:	uxtb	r2, r3
   137d8:	mov	r3, #0
   137dc:	lsr	r5, r2, #8
   137e0:	lsl	r4, r2, #24
   137e4:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   137e8:	orr	r1, r2, r4
   137ec:	str	r1, [fp, #-68]	; 0xffffffbc
   137f0:	orr	r3, r3, r5
   137f4:	str	r3, [fp, #-64]	; 0xffffffc0
   137f8:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   137fc:	strd	r2, [fp, #-36]	; 0xffffffdc
   13800:	ldr	r3, [fp, #-48]	; 0xffffffd0
   13804:	add	r3, r3, #3
   13808:	ldrb	r3, [r3]
   1380c:	uxtb	r0, r3
   13810:	mov	r1, #0
   13814:	mov	r2, #0
   13818:	mov	r3, #0
   1381c:	mov	r3, r0
   13820:	mov	r2, #0
   13824:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   13828:	orr	ip, r0, r2
   1382c:	str	ip, [fp, #-76]	; 0xffffffb4
   13830:	orr	r3, r1, r3
   13834:	str	r3, [fp, #-72]	; 0xffffffb8
   13838:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   1383c:	strd	r2, [fp, #-36]	; 0xffffffdc
   13840:	ldr	r3, [fp, #-48]	; 0xffffffd0
   13844:	add	r3, r3, #2
   13848:	ldrb	r3, [r3]
   1384c:	uxtb	r0, r3
   13850:	mov	r1, #0
   13854:	mov	r2, #0
   13858:	mov	r3, #0
   1385c:	lsl	r3, r0, #8
   13860:	mov	r2, #0
   13864:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   13868:	orr	ip, r0, r2
   1386c:	str	ip, [fp, #-84]	; 0xffffffac
   13870:	orr	r3, r1, r3
   13874:	str	r3, [fp, #-80]	; 0xffffffb0
   13878:	ldrd	r2, [fp, #-84]	; 0xffffffac
   1387c:	strd	r2, [fp, #-36]	; 0xffffffdc
   13880:	ldr	r3, [fp, #-48]	; 0xffffffd0
   13884:	add	r3, r3, #1
   13888:	ldrb	r3, [r3]
   1388c:	uxtb	r0, r3
   13890:	mov	r1, #0
   13894:	mov	r2, #0
   13898:	mov	r3, #0
   1389c:	lsl	r3, r0, #16
   138a0:	mov	r2, #0
   138a4:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   138a8:	orr	ip, r0, r2
   138ac:	str	ip, [fp, #-92]	; 0xffffffa4
   138b0:	orr	r3, r1, r3
   138b4:	str	r3, [fp, #-88]	; 0xffffffa8
   138b8:	ldrd	r2, [fp, #-92]	; 0xffffffa4
   138bc:	strd	r2, [fp, #-36]	; 0xffffffdc
   138c0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   138c4:	ldrb	r3, [r3]
   138c8:	uxtb	r0, r3
   138cc:	mov	r1, #0
   138d0:	mov	r2, #0
   138d4:	mov	r3, #0
   138d8:	lsl	r3, r0, #24
   138dc:	mov	r2, #0
   138e0:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   138e4:	orr	ip, r0, r2
   138e8:	str	ip, [fp, #-100]	; 0xffffff9c
   138ec:	orr	r3, r1, r3
   138f0:	str	r3, [fp, #-96]	; 0xffffffa0
   138f4:	ldrd	r2, [fp, #-100]	; 0xffffff9c
   138f8:	strd	r2, [fp, #-36]	; 0xffffffdc
   138fc:	nop	{0}
   13900:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   13904:	mov	r0, r2
   13908:	mov	r1, r3
   1390c:	sub	sp, fp, #24
   13910:	ldrd	r4, [sp]
   13914:	ldrd	r6, [sp, #8]
   13918:	ldrd	r8, [sp, #16]
   1391c:	ldr	fp, [sp, #24]
   13920:	add	sp, sp, #28
   13924:	bx	lr
   13928:	str	fp, [sp, #-8]!
   1392c:	str	lr, [sp, #4]
   13930:	add	fp, sp, #4
   13934:	sub	sp, sp, #16
   13938:	str	r0, [fp, #-16]
   1393c:	str	r1, [fp, #-20]	; 0xffffffec
   13940:	ldr	r2, [fp, #-20]	; 0xffffffec
   13944:	ldr	r3, [fp, #-16]
   13948:	sub	r3, r2, r3
   1394c:	str	r3, [fp, #-8]
   13950:	ldr	r1, [fp, #-20]	; 0xffffffec
   13954:	ldr	r0, [fp, #-16]
   13958:	bl	136a4 <_start@@Base+0xfec>
   1395c:	mov	r2, r0
   13960:	mov	r3, r1
   13964:	mov	r0, r2
   13968:	mov	r1, r3
   1396c:	sub	sp, fp, #4
   13970:	ldr	fp, [sp]
   13974:	add	sp, sp, #4
   13978:	pop	{pc}		; (ldr pc, [sp], #4)
   1397c:	push	{fp}		; (str fp, [sp, #-4]!)
   13980:	add	fp, sp, #0
   13984:	sub	sp, sp, #28
   13988:	str	r0, [fp, #-16]
   1398c:	str	r1, [fp, #-20]	; 0xffffffec
   13990:	str	r2, [fp, #-24]	; 0xffffffe8
   13994:	str	r3, [fp, #-28]	; 0xffffffe4
   13998:	ldr	r3, [fp, #-20]	; 0xffffffec
   1399c:	str	r3, [fp, #-8]
   139a0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   139a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   139a8:	sub	r3, r2, r3
   139ac:	ldr	r2, [fp, #-28]	; 0xffffffe4
   139b0:	cmp	r2, r3
   139b4:	blt	139c0 <_start@@Base+0x1308>
   139b8:	ldr	r3, [fp, #-8]
   139bc:	b	139f0 <_start@@Base+0x1338>
   139c0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   139c4:	ldr	r2, [fp, #-20]	; 0xffffffec
   139c8:	add	r3, r2, r3
   139cc:	ldrb	r3, [r3]
   139d0:	cmp	r3, #46	; 0x2e
   139d4:	beq	139e0 <_start@@Base+0x1328>
   139d8:	ldr	r3, [fp, #-8]
   139dc:	b	139f0 <_start@@Base+0x1338>
   139e0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   139e4:	add	r3, r3, #1
   139e8:	ldr	r2, [fp, #-20]	; 0xffffffec
   139ec:	add	r3, r2, r3
   139f0:	mov	r0, r3
   139f4:	add	sp, fp, #0
   139f8:	pop	{fp}		; (ldr fp, [sp], #4)
   139fc:	bx	lr
   13a00:	str	fp, [sp, #-8]!
   13a04:	str	lr, [sp, #4]
   13a08:	add	fp, sp, #4
   13a0c:	sub	sp, sp, #16
   13a10:	str	r0, [fp, #-8]
   13a14:	str	r1, [fp, #-12]
   13a18:	str	r2, [fp, #-16]
   13a1c:	ldr	r2, [fp, #-16]
   13a20:	ldr	r1, [fp, #-12]
   13a24:	ldr	r0, [fp, #-8]
   13a28:	bl	135f4 <_start@@Base+0xf3c>
   13a2c:	str	r0, [fp, #-12]
   13a30:	ldr	r3, [fp, #-8]
   13a34:	ldr	r3, [r3, #12]
   13a38:	cmp	r3, #0
   13a3c:	bne	13a54 <_start@@Base+0x139c>
   13a40:	ldr	r2, [fp, #-16]
   13a44:	ldr	r1, [fp, #-12]
   13a48:	ldr	r0, [fp, #-8]
   13a4c:	bl	13554 <_start@@Base+0xe9c>
   13a50:	str	r0, [fp, #-12]
   13a54:	ldr	r3, [fp, #-12]
   13a58:	mov	r0, r3
   13a5c:	sub	sp, fp, #4
   13a60:	ldr	fp, [sp]
   13a64:	add	sp, sp, #4
   13a68:	pop	{pc}		; (ldr pc, [sp], #4)
   13a6c:	str	fp, [sp, #-8]!
   13a70:	str	lr, [sp, #4]
   13a74:	add	fp, sp, #4
   13a78:	sub	sp, sp, #16
   13a7c:	str	r0, [fp, #-8]
   13a80:	str	r1, [fp, #-12]
   13a84:	str	r2, [fp, #-16]
   13a88:	str	r3, [fp, #-20]	; 0xffffffec
   13a8c:	ldr	r2, [fp, #-12]
   13a90:	ldr	r3, [fp, #-16]
   13a94:	cmp	r2, r3
   13a98:	beq	13aac <_start@@Base+0x13f4>
   13a9c:	ldr	r3, [fp, #-12]
   13aa0:	ldrb	r3, [r3]
   13aa4:	cmp	r3, #123	; 0x7b
   13aa8:	beq	13ad4 <_start@@Base+0x141c>
   13aac:	ldr	r3, [fp, #-20]	; 0xffffffec
   13ab0:	mov	r2, #0
   13ab4:	str	r2, [r3]
   13ab8:	mov	r3, #21
   13abc:	ldr	r2, [fp, #-16]
   13ac0:	ldr	r1, [fp, #-12]
   13ac4:	ldr	r0, [fp, #-8]
   13ac8:	bl	33258 <flatcc_json_parser_set_error@@Base>
   13acc:	mov	r3, r0
   13ad0:	b	13b4c <_start@@Base+0x1494>
   13ad4:	ldr	r3, [fp, #-12]
   13ad8:	add	r3, r3, #1
   13adc:	ldr	r2, [fp, #-16]
   13ae0:	mov	r1, r3
   13ae4:	ldr	r0, [fp, #-8]
   13ae8:	bl	13554 <_start@@Base+0xe9c>
   13aec:	str	r0, [fp, #-12]
   13af0:	ldr	r2, [fp, #-12]
   13af4:	ldr	r3, [fp, #-16]
   13af8:	cmp	r2, r3
   13afc:	beq	13b3c <_start@@Base+0x1484>
   13b00:	ldr	r3, [fp, #-12]
   13b04:	ldrb	r3, [r3]
   13b08:	cmp	r3, #125	; 0x7d
   13b0c:	bne	13b3c <_start@@Base+0x1484>
   13b10:	ldr	r3, [fp, #-20]	; 0xffffffec
   13b14:	mov	r2, #0
   13b18:	str	r2, [r3]
   13b1c:	ldr	r3, [fp, #-12]
   13b20:	add	r3, r3, #1
   13b24:	ldr	r2, [fp, #-16]
   13b28:	mov	r1, r3
   13b2c:	ldr	r0, [fp, #-8]
   13b30:	bl	13554 <_start@@Base+0xe9c>
   13b34:	mov	r3, r0
   13b38:	b	13b4c <_start@@Base+0x1494>
   13b3c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13b40:	mov	r2, #1
   13b44:	str	r2, [r3]
   13b48:	ldr	r3, [fp, #-12]
   13b4c:	mov	r0, r3
   13b50:	sub	sp, fp, #4
   13b54:	ldr	fp, [sp]
   13b58:	add	sp, sp, #4
   13b5c:	pop	{pc}		; (ldr pc, [sp], #4)
   13b60:	str	fp, [sp, #-8]!
   13b64:	str	lr, [sp, #4]
   13b68:	add	fp, sp, #4
   13b6c:	sub	sp, sp, #16
   13b70:	str	r0, [fp, #-8]
   13b74:	str	r1, [fp, #-12]
   13b78:	str	r2, [fp, #-16]
   13b7c:	str	r3, [fp, #-20]	; 0xffffffec
   13b80:	ldr	r2, [fp, #-16]
   13b84:	ldr	r1, [fp, #-12]
   13b88:	ldr	r0, [fp, #-8]
   13b8c:	bl	13554 <_start@@Base+0xe9c>
   13b90:	str	r0, [fp, #-12]
   13b94:	ldr	r2, [fp, #-12]
   13b98:	ldr	r3, [fp, #-16]
   13b9c:	cmp	r2, r3
   13ba0:	bne	13bb8 <_start@@Base+0x1500>
   13ba4:	ldr	r3, [fp, #-20]	; 0xffffffec
   13ba8:	mov	r2, #0
   13bac:	str	r2, [r3]
   13bb0:	ldr	r3, [fp, #-12]
   13bb4:	b	13cc0 <_start@@Base+0x1608>
   13bb8:	ldr	r3, [fp, #-12]
   13bbc:	ldrb	r3, [r3]
   13bc0:	cmp	r3, #44	; 0x2c
   13bc4:	beq	13c20 <_start@@Base+0x1568>
   13bc8:	ldr	r3, [fp, #-20]	; 0xffffffec
   13bcc:	mov	r2, #0
   13bd0:	str	r2, [r3]
   13bd4:	ldr	r3, [fp, #-12]
   13bd8:	ldrb	r3, [r3]
   13bdc:	cmp	r3, #125	; 0x7d
   13be0:	beq	13c00 <_start@@Base+0x1548>
   13be4:	mov	r3, #10
   13be8:	ldr	r2, [fp, #-16]
   13bec:	ldr	r1, [fp, #-12]
   13bf0:	ldr	r0, [fp, #-8]
   13bf4:	bl	33258 <flatcc_json_parser_set_error@@Base>
   13bf8:	mov	r3, r0
   13bfc:	b	13cc0 <_start@@Base+0x1608>
   13c00:	ldr	r3, [fp, #-12]
   13c04:	add	r3, r3, #1
   13c08:	ldr	r2, [fp, #-16]
   13c0c:	mov	r1, r3
   13c10:	ldr	r0, [fp, #-8]
   13c14:	bl	13554 <_start@@Base+0xe9c>
   13c18:	mov	r3, r0
   13c1c:	b	13cc0 <_start@@Base+0x1608>
   13c20:	ldr	r3, [fp, #-12]
   13c24:	add	r3, r3, #1
   13c28:	ldr	r2, [fp, #-16]
   13c2c:	mov	r1, r3
   13c30:	ldr	r0, [fp, #-8]
   13c34:	bl	13554 <_start@@Base+0xe9c>
   13c38:	str	r0, [fp, #-12]
   13c3c:	ldr	r2, [fp, #-12]
   13c40:	ldr	r3, [fp, #-16]
   13c44:	cmp	r2, r3
   13c48:	bne	13c74 <_start@@Base+0x15bc>
   13c4c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13c50:	mov	r2, #0
   13c54:	str	r2, [r3]
   13c58:	mov	r3, #10
   13c5c:	ldr	r2, [fp, #-16]
   13c60:	ldr	r1, [fp, #-12]
   13c64:	ldr	r0, [fp, #-8]
   13c68:	bl	33258 <flatcc_json_parser_set_error@@Base>
   13c6c:	mov	r3, r0
   13c70:	b	13cc0 <_start@@Base+0x1608>
   13c74:	ldr	r3, [fp, #-12]
   13c78:	ldrb	r3, [r3]
   13c7c:	cmp	r3, #125	; 0x7d
   13c80:	bne	13cb0 <_start@@Base+0x15f8>
   13c84:	ldr	r3, [fp, #-20]	; 0xffffffec
   13c88:	mov	r2, #0
   13c8c:	str	r2, [r3]
   13c90:	ldr	r3, [fp, #-12]
   13c94:	add	r3, r3, #1
   13c98:	ldr	r2, [fp, #-16]
   13c9c:	mov	r1, r3
   13ca0:	ldr	r0, [fp, #-8]
   13ca4:	bl	13554 <_start@@Base+0xe9c>
   13ca8:	mov	r3, r0
   13cac:	b	13cc0 <_start@@Base+0x1608>
   13cb0:	ldr	r3, [fp, #-20]	; 0xffffffec
   13cb4:	mov	r2, #1
   13cb8:	str	r2, [r3]
   13cbc:	ldr	r3, [fp, #-12]
   13cc0:	mov	r0, r3
   13cc4:	sub	sp, fp, #4
   13cc8:	ldr	fp, [sp]
   13ccc:	add	sp, sp, #4
   13cd0:	pop	{pc}		; (ldr pc, [sp], #4)
   13cd4:	str	fp, [sp, #-8]!
   13cd8:	str	lr, [sp, #4]
   13cdc:	add	fp, sp, #4
   13ce0:	sub	sp, sp, #16
   13ce4:	str	r0, [fp, #-8]
   13ce8:	str	r1, [fp, #-12]
   13cec:	str	r2, [fp, #-16]
   13cf0:	str	r3, [fp, #-20]	; 0xffffffec
   13cf4:	ldr	r2, [fp, #-12]
   13cf8:	ldr	r3, [fp, #-16]
   13cfc:	cmp	r2, r3
   13d00:	beq	13d14 <_start@@Base+0x165c>
   13d04:	ldr	r3, [fp, #-12]
   13d08:	ldrb	r3, [r3]
   13d0c:	cmp	r3, #91	; 0x5b
   13d10:	beq	13d3c <_start@@Base+0x1684>
   13d14:	ldr	r3, [fp, #-20]	; 0xffffffec
   13d18:	mov	r2, #0
   13d1c:	str	r2, [r3]
   13d20:	mov	r3, #22
   13d24:	ldr	r2, [fp, #-16]
   13d28:	ldr	r1, [fp, #-12]
   13d2c:	ldr	r0, [fp, #-8]
   13d30:	bl	33258 <flatcc_json_parser_set_error@@Base>
   13d34:	mov	r3, r0
   13d38:	b	13db4 <_start@@Base+0x16fc>
   13d3c:	ldr	r3, [fp, #-12]
   13d40:	add	r3, r3, #1
   13d44:	ldr	r2, [fp, #-16]
   13d48:	mov	r1, r3
   13d4c:	ldr	r0, [fp, #-8]
   13d50:	bl	13554 <_start@@Base+0xe9c>
   13d54:	str	r0, [fp, #-12]
   13d58:	ldr	r2, [fp, #-12]
   13d5c:	ldr	r3, [fp, #-16]
   13d60:	cmp	r2, r3
   13d64:	beq	13da4 <_start@@Base+0x16ec>
   13d68:	ldr	r3, [fp, #-12]
   13d6c:	ldrb	r3, [r3]
   13d70:	cmp	r3, #93	; 0x5d
   13d74:	bne	13da4 <_start@@Base+0x16ec>
   13d78:	ldr	r3, [fp, #-20]	; 0xffffffec
   13d7c:	mov	r2, #0
   13d80:	str	r2, [r3]
   13d84:	ldr	r3, [fp, #-12]
   13d88:	add	r3, r3, #1
   13d8c:	ldr	r2, [fp, #-16]
   13d90:	mov	r1, r3
   13d94:	ldr	r0, [fp, #-8]
   13d98:	bl	13554 <_start@@Base+0xe9c>
   13d9c:	mov	r3, r0
   13da0:	b	13db4 <_start@@Base+0x16fc>
   13da4:	ldr	r3, [fp, #-20]	; 0xffffffec
   13da8:	mov	r2, #1
   13dac:	str	r2, [r3]
   13db0:	ldr	r3, [fp, #-12]
   13db4:	mov	r0, r3
   13db8:	sub	sp, fp, #4
   13dbc:	ldr	fp, [sp]
   13dc0:	add	sp, sp, #4
   13dc4:	pop	{pc}		; (ldr pc, [sp], #4)
   13dc8:	str	fp, [sp, #-8]!
   13dcc:	str	lr, [sp, #4]
   13dd0:	add	fp, sp, #4
   13dd4:	sub	sp, sp, #16
   13dd8:	str	r0, [fp, #-8]
   13ddc:	str	r1, [fp, #-12]
   13de0:	str	r2, [fp, #-16]
   13de4:	str	r3, [fp, #-20]	; 0xffffffec
   13de8:	ldr	r2, [fp, #-16]
   13dec:	ldr	r1, [fp, #-12]
   13df0:	ldr	r0, [fp, #-8]
   13df4:	bl	13554 <_start@@Base+0xe9c>
   13df8:	str	r0, [fp, #-12]
   13dfc:	ldr	r2, [fp, #-12]
   13e00:	ldr	r3, [fp, #-16]
   13e04:	cmp	r2, r3
   13e08:	bne	13e20 <_start@@Base+0x1768>
   13e0c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13e10:	mov	r2, #0
   13e14:	str	r2, [r3]
   13e18:	ldr	r3, [fp, #-12]
   13e1c:	b	13f28 <_start@@Base+0x1870>
   13e20:	ldr	r3, [fp, #-12]
   13e24:	ldrb	r3, [r3]
   13e28:	cmp	r3, #44	; 0x2c
   13e2c:	beq	13e88 <_start@@Base+0x17d0>
   13e30:	ldr	r3, [fp, #-20]	; 0xffffffec
   13e34:	mov	r2, #0
   13e38:	str	r2, [r3]
   13e3c:	ldr	r3, [fp, #-12]
   13e40:	ldrb	r3, [r3]
   13e44:	cmp	r3, #93	; 0x5d
   13e48:	beq	13e68 <_start@@Base+0x17b0>
   13e4c:	mov	r3, #9
   13e50:	ldr	r2, [fp, #-16]
   13e54:	ldr	r1, [fp, #-12]
   13e58:	ldr	r0, [fp, #-8]
   13e5c:	bl	33258 <flatcc_json_parser_set_error@@Base>
   13e60:	mov	r3, r0
   13e64:	b	13f28 <_start@@Base+0x1870>
   13e68:	ldr	r3, [fp, #-12]
   13e6c:	add	r3, r3, #1
   13e70:	ldr	r2, [fp, #-16]
   13e74:	mov	r1, r3
   13e78:	ldr	r0, [fp, #-8]
   13e7c:	bl	13554 <_start@@Base+0xe9c>
   13e80:	mov	r3, r0
   13e84:	b	13f28 <_start@@Base+0x1870>
   13e88:	ldr	r3, [fp, #-12]
   13e8c:	add	r3, r3, #1
   13e90:	ldr	r2, [fp, #-16]
   13e94:	mov	r1, r3
   13e98:	ldr	r0, [fp, #-8]
   13e9c:	bl	13554 <_start@@Base+0xe9c>
   13ea0:	str	r0, [fp, #-12]
   13ea4:	ldr	r2, [fp, #-12]
   13ea8:	ldr	r3, [fp, #-16]
   13eac:	cmp	r2, r3
   13eb0:	bne	13edc <_start@@Base+0x1824>
   13eb4:	ldr	r3, [fp, #-20]	; 0xffffffec
   13eb8:	mov	r2, #0
   13ebc:	str	r2, [r3]
   13ec0:	mov	r3, #9
   13ec4:	ldr	r2, [fp, #-16]
   13ec8:	ldr	r1, [fp, #-12]
   13ecc:	ldr	r0, [fp, #-8]
   13ed0:	bl	33258 <flatcc_json_parser_set_error@@Base>
   13ed4:	mov	r3, r0
   13ed8:	b	13f28 <_start@@Base+0x1870>
   13edc:	ldr	r3, [fp, #-12]
   13ee0:	ldrb	r3, [r3]
   13ee4:	cmp	r3, #93	; 0x5d
   13ee8:	bne	13f18 <_start@@Base+0x1860>
   13eec:	ldr	r3, [fp, #-20]	; 0xffffffec
   13ef0:	mov	r2, #0
   13ef4:	str	r2, [r3]
   13ef8:	ldr	r3, [fp, #-12]
   13efc:	add	r3, r3, #1
   13f00:	ldr	r2, [fp, #-16]
   13f04:	mov	r1, r3
   13f08:	ldr	r0, [fp, #-8]
   13f0c:	bl	13554 <_start@@Base+0xe9c>
   13f10:	mov	r3, r0
   13f14:	b	13f28 <_start@@Base+0x1870>
   13f18:	ldr	r3, [fp, #-20]	; 0xffffffec
   13f1c:	mov	r2, #1
   13f20:	str	r2, [r3]
   13f24:	ldr	r3, [fp, #-12]
   13f28:	mov	r0, r3
   13f2c:	sub	sp, fp, #4
   13f30:	ldr	fp, [sp]
   13f34:	add	sp, sp, #4
   13f38:	pop	{pc}		; (ldr pc, [sp], #4)
   13f3c:	str	fp, [sp, #-8]!
   13f40:	str	lr, [sp, #4]
   13f44:	add	fp, sp, #4
   13f48:	sub	sp, sp, #24
   13f4c:	str	r0, [fp, #-16]
   13f50:	str	r1, [fp, #-20]	; 0xffffffec
   13f54:	str	r2, [fp, #-24]	; 0xffffffe8
   13f58:	str	r3, [fp, #-28]	; 0xffffffe4
   13f5c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13f60:	str	r3, [fp, #-8]
   13f64:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13f68:	ldr	r3, [fp, #-20]	; 0xffffffec
   13f6c:	sub	r3, r2, r3
   13f70:	ldr	r2, [fp, #-28]	; 0xffffffe4
   13f74:	cmp	r2, r3
   13f78:	blt	13f84 <_start@@Base+0x18cc>
   13f7c:	ldr	r3, [fp, #-8]
   13f80:	b	14090 <_start@@Base+0x19d8>
   13f84:	ldr	r3, [fp, #-16]
   13f88:	ldr	r3, [r3, #12]
   13f8c:	cmp	r3, #0
   13f90:	beq	13fec <_start@@Base+0x1934>
   13f94:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13f98:	ldr	r2, [fp, #-20]	; 0xffffffec
   13f9c:	add	r3, r2, r3
   13fa0:	ldrb	r3, [r3]
   13fa4:	cmp	r3, #32
   13fa8:	bls	13fcc <_start@@Base+0x1914>
   13fac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13fb0:	ldr	r2, [fp, #-20]	; 0xffffffec
   13fb4:	add	r3, r2, r3
   13fb8:	ldrb	r3, [r3]
   13fbc:	cmp	r3, #58	; 0x3a
   13fc0:	beq	13fcc <_start@@Base+0x1914>
   13fc4:	ldr	r3, [fp, #-8]
   13fc8:	b	14090 <_start@@Base+0x19d8>
   13fcc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13fd0:	ldr	r2, [fp, #-20]	; 0xffffffec
   13fd4:	add	r3, r2, r3
   13fd8:	str	r3, [fp, #-20]	; 0xffffffec
   13fdc:	ldr	r3, [fp, #-16]
   13fe0:	mov	r2, #0
   13fe4:	str	r2, [r3, #12]
   13fe8:	b	14020 <_start@@Base+0x1968>
   13fec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13ff0:	ldr	r2, [fp, #-20]	; 0xffffffec
   13ff4:	add	r3, r2, r3
   13ff8:	ldrb	r3, [r3]
   13ffc:	cmp	r3, #34	; 0x22
   14000:	beq	1400c <_start@@Base+0x1954>
   14004:	ldr	r3, [fp, #-8]
   14008:	b	14090 <_start@@Base+0x19d8>
   1400c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14010:	add	r3, r3, #1
   14014:	ldr	r2, [fp, #-20]	; 0xffffffec
   14018:	add	r3, r2, r3
   1401c:	str	r3, [fp, #-20]	; 0xffffffec
   14020:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14024:	ldr	r1, [fp, #-20]	; 0xffffffec
   14028:	ldr	r0, [fp, #-16]
   1402c:	bl	13554 <_start@@Base+0xe9c>
   14030:	str	r0, [fp, #-20]	; 0xffffffec
   14034:	ldr	r2, [fp, #-20]	; 0xffffffec
   14038:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1403c:	cmp	r2, r3
   14040:	beq	14078 <_start@@Base+0x19c0>
   14044:	ldr	r3, [fp, #-20]	; 0xffffffec
   14048:	ldrb	r3, [r3]
   1404c:	cmp	r3, #58	; 0x3a
   14050:	bne	14078 <_start@@Base+0x19c0>
   14054:	ldr	r3, [fp, #-20]	; 0xffffffec
   14058:	add	r3, r3, #1
   1405c:	str	r3, [fp, #-20]	; 0xffffffec
   14060:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14064:	ldr	r1, [fp, #-20]	; 0xffffffec
   14068:	ldr	r0, [fp, #-16]
   1406c:	bl	13554 <_start@@Base+0xe9c>
   14070:	mov	r3, r0
   14074:	b	14090 <_start@@Base+0x19d8>
   14078:	mov	r3, #4
   1407c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14080:	ldr	r1, [fp, #-20]	; 0xffffffec
   14084:	ldr	r0, [fp, #-16]
   14088:	bl	33258 <flatcc_json_parser_set_error@@Base>
   1408c:	mov	r3, r0
   14090:	mov	r0, r3
   14094:	sub	sp, fp, #4
   14098:	ldr	fp, [sp]
   1409c:	add	sp, sp, #4
   140a0:	pop	{pc}		; (ldr pc, [sp], #4)
   140a4:	str	fp, [sp, #-8]!
   140a8:	str	lr, [sp, #4]
   140ac:	add	fp, sp, #4
   140b0:	sub	sp, sp, #16
   140b4:	str	r0, [fp, #-8]
   140b8:	str	r1, [fp, #-12]
   140bc:	str	r2, [fp, #-16]
   140c0:	str	r3, [fp, #-20]	; 0xffffffec
   140c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   140c8:	cmp	r3, #0
   140cc:	beq	140ec <_start@@Base+0x1a34>
   140d0:	mov	r3, #8
   140d4:	ldr	r2, [fp, #-16]
   140d8:	ldr	r1, [fp, #-12]
   140dc:	ldr	r0, [fp, #-8]
   140e0:	bl	33258 <flatcc_json_parser_set_error@@Base>
   140e4:	mov	r3, r0
   140e8:	b	140fc <_start@@Base+0x1a44>
   140ec:	ldr	r1, [fp, #12]
   140f0:	ldrd	r2, [fp, #4]
   140f4:	strd	r2, [r1]
   140f8:	ldr	r3, [fp, #-12]
   140fc:	mov	r0, r3
   14100:	sub	sp, fp, #4
   14104:	ldr	fp, [sp]
   14108:	add	sp, sp, #4
   1410c:	pop	{pc}		; (ldr pc, [sp], #4)
   14110:	str	fp, [sp, #-8]!
   14114:	str	lr, [sp, #4]
   14118:	add	fp, sp, #4
   1411c:	sub	sp, sp, #16
   14120:	str	r0, [fp, #-8]
   14124:	str	r1, [fp, #-12]
   14128:	str	r2, [fp, #-16]
   1412c:	str	r3, [fp, #-20]	; 0xffffffec
   14130:	ldr	r3, [fp, #-20]	; 0xffffffec
   14134:	cmp	r3, #0
   14138:	beq	14158 <_start@@Base+0x1aa0>
   1413c:	mov	r3, #8
   14140:	ldr	r2, [fp, #-16]
   14144:	ldr	r1, [fp, #-12]
   14148:	ldr	r0, [fp, #-8]
   1414c:	bl	33258 <flatcc_json_parser_set_error@@Base>
   14150:	mov	r3, r0
   14154:	b	14184 <_start@@Base+0x1acc>
   14158:	ldr	r2, [fp, #4]
   1415c:	ldr	r3, [fp, #8]
   14160:	orr	r3, r2, r3
   14164:	cmp	r3, #0
   14168:	movne	r3, #1
   1416c:	moveq	r3, #0
   14170:	uxtb	r3, r3
   14174:	mov	r2, r3
   14178:	ldr	r3, [fp, #12]
   1417c:	strb	r2, [r3]
   14180:	ldr	r3, [fp, #-12]
   14184:	mov	r0, r3
   14188:	sub	sp, fp, #4
   1418c:	ldr	fp, [sp]
   14190:	add	sp, sp, #4
   14194:	pop	{pc}		; (ldr pc, [sp], #4)
   14198:	str	fp, [sp, #-8]!
   1419c:	str	lr, [sp, #4]
   141a0:	add	fp, sp, #4
   141a4:	sub	sp, sp, #16
   141a8:	str	r0, [fp, #-8]
   141ac:	str	r1, [fp, #-12]
   141b0:	str	r2, [fp, #-16]
   141b4:	str	r3, [fp, #-20]	; 0xffffffec
   141b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   141bc:	cmp	r3, #0
   141c0:	beq	141e0 <_start@@Base+0x1b28>
   141c4:	mov	r3, #8
   141c8:	ldr	r2, [fp, #-16]
   141cc:	ldr	r1, [fp, #-12]
   141d0:	ldr	r0, [fp, #-8]
   141d4:	bl	33258 <flatcc_json_parser_set_error@@Base>
   141d8:	mov	r3, r0
   141dc:	b	14224 <_start@@Base+0x1b6c>
   141e0:	ldrd	r2, [fp, #4]
   141e4:	mvn	r0, #0
   141e8:	mov	r1, #0
   141ec:	cmp	r3, r1
   141f0:	cmpeq	r2, r0
   141f4:	bls	14214 <_start@@Base+0x1b5c>
   141f8:	mov	r3, #7
   141fc:	ldr	r2, [fp, #-16]
   14200:	ldr	r1, [fp, #-12]
   14204:	ldr	r0, [fp, #-8]
   14208:	bl	33258 <flatcc_json_parser_set_error@@Base>
   1420c:	mov	r3, r0
   14210:	b	14224 <_start@@Base+0x1b6c>
   14214:	ldr	r2, [fp, #4]
   14218:	ldr	r3, [fp, #12]
   1421c:	str	r2, [r3]
   14220:	ldr	r3, [fp, #-12]
   14224:	mov	r0, r3
   14228:	sub	sp, fp, #4
   1422c:	ldr	fp, [sp]
   14230:	add	sp, sp, #4
   14234:	pop	{pc}		; (ldr pc, [sp], #4)
   14238:	str	fp, [sp, #-8]!
   1423c:	str	lr, [sp, #4]
   14240:	add	fp, sp, #4
   14244:	sub	sp, sp, #16
   14248:	str	r0, [fp, #-8]
   1424c:	str	r1, [fp, #-12]
   14250:	str	r2, [fp, #-16]
   14254:	str	r3, [fp, #-20]	; 0xffffffec
   14258:	ldr	r3, [fp, #-20]	; 0xffffffec
   1425c:	cmp	r3, #0
   14260:	beq	14280 <_start@@Base+0x1bc8>
   14264:	mov	r3, #8
   14268:	ldr	r2, [fp, #-16]
   1426c:	ldr	r1, [fp, #-12]
   14270:	ldr	r0, [fp, #-8]
   14274:	bl	33258 <flatcc_json_parser_set_error@@Base>
   14278:	mov	r3, r0
   1427c:	b	142c4 <_start@@Base+0x1c0c>
   14280:	ldrd	r2, [fp, #4]
   14284:	movw	r0, #65535	; 0xffff
   14288:	mov	r1, #0
   1428c:	cmp	r3, r1
   14290:	cmpeq	r2, r0
   14294:	bls	142b4 <_start@@Base+0x1bfc>
   14298:	mov	r3, #7
   1429c:	ldr	r2, [fp, #-16]
   142a0:	ldr	r1, [fp, #-12]
   142a4:	ldr	r0, [fp, #-8]
   142a8:	bl	33258 <flatcc_json_parser_set_error@@Base>
   142ac:	mov	r3, r0
   142b0:	b	142c4 <_start@@Base+0x1c0c>
   142b4:	ldrh	r2, [fp, #4]
   142b8:	ldr	r3, [fp, #12]
   142bc:	strh	r2, [r3]
   142c0:	ldr	r3, [fp, #-12]
   142c4:	mov	r0, r3
   142c8:	sub	sp, fp, #4
   142cc:	ldr	fp, [sp]
   142d0:	add	sp, sp, #4
   142d4:	pop	{pc}		; (ldr pc, [sp], #4)
   142d8:	str	fp, [sp, #-8]!
   142dc:	str	lr, [sp, #4]
   142e0:	add	fp, sp, #4
   142e4:	sub	sp, sp, #16
   142e8:	str	r0, [fp, #-8]
   142ec:	str	r1, [fp, #-12]
   142f0:	str	r2, [fp, #-16]
   142f4:	str	r3, [fp, #-20]	; 0xffffffec
   142f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   142fc:	cmp	r3, #0
   14300:	beq	14320 <_start@@Base+0x1c68>
   14304:	mov	r3, #8
   14308:	ldr	r2, [fp, #-16]
   1430c:	ldr	r1, [fp, #-12]
   14310:	ldr	r0, [fp, #-8]
   14314:	bl	33258 <flatcc_json_parser_set_error@@Base>
   14318:	mov	r3, r0
   1431c:	b	1435c <_start@@Base+0x1ca4>
   14320:	ldrd	r2, [fp, #4]
   14324:	cmp	r3, #0
   14328:	cmpeq	r2, #255	; 0xff
   1432c:	bls	1434c <_start@@Base+0x1c94>
   14330:	mov	r3, #7
   14334:	ldr	r2, [fp, #-16]
   14338:	ldr	r1, [fp, #-12]
   1433c:	ldr	r0, [fp, #-8]
   14340:	bl	33258 <flatcc_json_parser_set_error@@Base>
   14344:	mov	r3, r0
   14348:	b	1435c <_start@@Base+0x1ca4>
   1434c:	ldrb	r2, [fp, #4]
   14350:	ldr	r3, [fp, #12]
   14354:	strb	r2, [r3]
   14358:	ldr	r3, [fp, #-12]
   1435c:	mov	r0, r3
   14360:	sub	sp, fp, #4
   14364:	ldr	fp, [sp]
   14368:	add	sp, sp, #4
   1436c:	pop	{pc}		; (ldr pc, [sp], #4)
   14370:	str	fp, [sp, #-8]!
   14374:	str	lr, [sp, #4]
   14378:	add	fp, sp, #4
   1437c:	sub	sp, sp, #16
   14380:	str	r0, [fp, #-8]
   14384:	str	r1, [fp, #-12]
   14388:	str	r2, [fp, #-16]
   1438c:	str	r3, [fp, #-20]	; 0xffffffec
   14390:	ldr	r3, [fp, #-20]	; 0xffffffec
   14394:	cmp	r3, #0
   14398:	beq	143e0 <_start@@Base+0x1d28>
   1439c:	ldrd	r2, [fp, #4]
   143a0:	cmp	r3, #-2147483648	; 0x80000000
   143a4:	cmpeq	r2, #0
   143a8:	bls	143c8 <_start@@Base+0x1d10>
   143ac:	mov	r3, #8
   143b0:	ldr	r2, [fp, #-16]
   143b4:	ldr	r1, [fp, #-12]
   143b8:	ldr	r0, [fp, #-8]
   143bc:	bl	33258 <flatcc_json_parser_set_error@@Base>
   143c0:	mov	r3, r0
   143c4:	b	1441c <_start@@Base+0x1d64>
   143c8:	ldrd	r2, [fp, #4]
   143cc:	rsbs	r2, r2, #0
   143d0:	rsc	r3, r3, #0
   143d4:	ldr	r1, [fp, #12]
   143d8:	strd	r2, [r1]
   143dc:	b	14418 <_start@@Base+0x1d60>
   143e0:	ldrd	r2, [fp, #4]
   143e4:	cmp	r2, #0
   143e8:	sbcs	r3, r3, #0
   143ec:	bge	1440c <_start@@Base+0x1d54>
   143f0:	mov	r3, #7
   143f4:	ldr	r2, [fp, #-16]
   143f8:	ldr	r1, [fp, #-12]
   143fc:	ldr	r0, [fp, #-8]
   14400:	bl	33258 <flatcc_json_parser_set_error@@Base>
   14404:	mov	r3, r0
   14408:	b	1441c <_start@@Base+0x1d64>
   1440c:	ldrd	r2, [fp, #4]
   14410:	ldr	r1, [fp, #12]
   14414:	strd	r2, [r1]
   14418:	ldr	r3, [fp, #-12]
   1441c:	mov	r0, r3
   14420:	sub	sp, fp, #4
   14424:	ldr	fp, [sp]
   14428:	add	sp, sp, #4
   1442c:	pop	{pc}		; (ldr pc, [sp], #4)
   14430:	str	fp, [sp, #-8]!
   14434:	str	lr, [sp, #4]
   14438:	add	fp, sp, #4
   1443c:	sub	sp, sp, #16
   14440:	str	r0, [fp, #-8]
   14444:	str	r1, [fp, #-12]
   14448:	str	r2, [fp, #-16]
   1444c:	str	r3, [fp, #-20]	; 0xffffffec
   14450:	ldr	r3, [fp, #-20]	; 0xffffffec
   14454:	cmp	r3, #0
   14458:	beq	144a0 <_start@@Base+0x1de8>
   1445c:	ldrd	r2, [fp, #4]
   14460:	cmp	r3, #0
   14464:	cmpeq	r2, #-2147483648	; 0x80000000
   14468:	bls	14488 <_start@@Base+0x1dd0>
   1446c:	mov	r3, #8
   14470:	ldr	r2, [fp, #-16]
   14474:	ldr	r1, [fp, #-12]
   14478:	ldr	r0, [fp, #-8]
   1447c:	bl	33258 <flatcc_json_parser_set_error@@Base>
   14480:	mov	r3, r0
   14484:	b	144e4 <_start@@Base+0x1e2c>
   14488:	ldr	r3, [fp, #4]
   1448c:	rsb	r3, r3, #0
   14490:	mov	r2, r3
   14494:	ldr	r3, [fp, #12]
   14498:	str	r2, [r3]
   1449c:	b	144e0 <_start@@Base+0x1e28>
   144a0:	ldrd	r2, [fp, #4]
   144a4:	mvn	r0, #-2147483648	; 0x80000000
   144a8:	mov	r1, #0
   144ac:	cmp	r3, r1
   144b0:	cmpeq	r2, r0
   144b4:	bls	144d4 <_start@@Base+0x1e1c>
   144b8:	mov	r3, #7
   144bc:	ldr	r2, [fp, #-16]
   144c0:	ldr	r1, [fp, #-12]
   144c4:	ldr	r0, [fp, #-8]
   144c8:	bl	33258 <flatcc_json_parser_set_error@@Base>
   144cc:	mov	r3, r0
   144d0:	b	144e4 <_start@@Base+0x1e2c>
   144d4:	ldr	r2, [fp, #4]
   144d8:	ldr	r3, [fp, #12]
   144dc:	str	r2, [r3]
   144e0:	ldr	r3, [fp, #-12]
   144e4:	mov	r0, r3
   144e8:	sub	sp, fp, #4
   144ec:	ldr	fp, [sp]
   144f0:	add	sp, sp, #4
   144f4:	pop	{pc}		; (ldr pc, [sp], #4)
   144f8:	str	fp, [sp, #-8]!
   144fc:	str	lr, [sp, #4]
   14500:	add	fp, sp, #4
   14504:	sub	sp, sp, #16
   14508:	str	r0, [fp, #-8]
   1450c:	str	r1, [fp, #-12]
   14510:	str	r2, [fp, #-16]
   14514:	str	r3, [fp, #-20]	; 0xffffffec
   14518:	ldr	r3, [fp, #-20]	; 0xffffffec
   1451c:	cmp	r3, #0
   14520:	beq	1456c <_start@@Base+0x1eb4>
   14524:	ldrd	r2, [fp, #4]
   14528:	cmp	r3, #0
   1452c:	cmpeq	r2, #32768	; 0x8000
   14530:	bls	14550 <_start@@Base+0x1e98>
   14534:	mov	r3, #8
   14538:	ldr	r2, [fp, #-16]
   1453c:	ldr	r1, [fp, #-12]
   14540:	ldr	r0, [fp, #-8]
   14544:	bl	33258 <flatcc_json_parser_set_error@@Base>
   14548:	mov	r3, r0
   1454c:	b	145b0 <_start@@Base+0x1ef8>
   14550:	ldrh	r3, [fp, #4]
   14554:	rsb	r3, r3, #0
   14558:	uxth	r3, r3
   1455c:	sxth	r2, r3
   14560:	ldr	r3, [fp, #12]
   14564:	strh	r2, [r3]
   14568:	b	145ac <_start@@Base+0x1ef4>
   1456c:	ldrd	r2, [fp, #4]
   14570:	movw	r0, #32767	; 0x7fff
   14574:	mov	r1, #0
   14578:	cmp	r3, r1
   1457c:	cmpeq	r2, r0
   14580:	bls	145a0 <_start@@Base+0x1ee8>
   14584:	mov	r3, #7
   14588:	ldr	r2, [fp, #-16]
   1458c:	ldr	r1, [fp, #-12]
   14590:	ldr	r0, [fp, #-8]
   14594:	bl	33258 <flatcc_json_parser_set_error@@Base>
   14598:	mov	r3, r0
   1459c:	b	145b0 <_start@@Base+0x1ef8>
   145a0:	ldrsh	r2, [fp, #4]
   145a4:	ldr	r3, [fp, #12]
   145a8:	strh	r2, [r3]
   145ac:	ldr	r3, [fp, #-12]
   145b0:	mov	r0, r3
   145b4:	sub	sp, fp, #4
   145b8:	ldr	fp, [sp]
   145bc:	add	sp, sp, #4
   145c0:	pop	{pc}		; (ldr pc, [sp], #4)
   145c4:	str	fp, [sp, #-8]!
   145c8:	str	lr, [sp, #4]
   145cc:	add	fp, sp, #4
   145d0:	sub	sp, sp, #16
   145d4:	str	r0, [fp, #-8]
   145d8:	str	r1, [fp, #-12]
   145dc:	str	r2, [fp, #-16]
   145e0:	str	r3, [fp, #-20]	; 0xffffffec
   145e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   145e8:	cmp	r3, #0
   145ec:	beq	14638 <_start@@Base+0x1f80>
   145f0:	ldrd	r2, [fp, #4]
   145f4:	cmp	r3, #0
   145f8:	cmpeq	r2, #128	; 0x80
   145fc:	bls	1461c <_start@@Base+0x1f64>
   14600:	mov	r3, #8
   14604:	ldr	r2, [fp, #-16]
   14608:	ldr	r1, [fp, #-12]
   1460c:	ldr	r0, [fp, #-8]
   14610:	bl	33258 <flatcc_json_parser_set_error@@Base>
   14614:	mov	r3, r0
   14618:	b	14674 <_start@@Base+0x1fbc>
   1461c:	ldrb	r3, [fp, #4]
   14620:	rsb	r3, r3, #0
   14624:	uxtb	r3, r3
   14628:	sxtb	r2, r3
   1462c:	ldr	r3, [fp, #12]
   14630:	strb	r2, [r3]
   14634:	b	14670 <_start@@Base+0x1fb8>
   14638:	ldrd	r2, [fp, #4]
   1463c:	cmp	r3, #0
   14640:	cmpeq	r2, #127	; 0x7f
   14644:	bls	14664 <_start@@Base+0x1fac>
   14648:	mov	r3, #7
   1464c:	ldr	r2, [fp, #-16]
   14650:	ldr	r1, [fp, #-12]
   14654:	ldr	r0, [fp, #-8]
   14658:	bl	33258 <flatcc_json_parser_set_error@@Base>
   1465c:	mov	r3, r0
   14660:	b	14674 <_start@@Base+0x1fbc>
   14664:	ldrsb	r2, [fp, #4]
   14668:	ldr	r3, [fp, #12]
   1466c:	strb	r2, [r3]
   14670:	ldr	r3, [fp, #-12]
   14674:	mov	r0, r3
   14678:	sub	sp, fp, #4
   1467c:	ldr	fp, [sp]
   14680:	add	sp, sp, #4
   14684:	pop	{pc}		; (ldr pc, [sp], #4)
   14688:	str	fp, [sp, #-8]!
   1468c:	str	lr, [sp, #4]
   14690:	add	fp, sp, #4
   14694:	sub	sp, sp, #16
   14698:	str	r0, [fp, #-8]
   1469c:	str	r1, [fp, #-12]
   146a0:	str	r2, [fp, #-16]
   146a4:	str	r3, [fp, #-20]	; 0xffffffec
   146a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   146ac:	cmp	r3, #0
   146b0:	beq	146c8 <_start@@Base+0x2010>
   146b4:	ldrd	r0, [fp, #4]
   146b8:	bl	36bdc <flatcc_json_parser_struct_as_root@@Base+0x6ac>
   146bc:	mov	r3, r0
   146c0:	eor	r2, r3, #-2147483648	; 0x80000000
   146c4:	b	146d4 <_start@@Base+0x201c>
   146c8:	ldrd	r0, [fp, #4]
   146cc:	bl	36bdc <flatcc_json_parser_struct_as_root@@Base+0x6ac>
   146d0:	mov	r2, r0
   146d4:	ldr	r3, [fp, #12]
   146d8:	str	r2, [r3]
   146dc:	ldr	r3, [fp, #-12]
   146e0:	mov	r0, r3
   146e4:	sub	sp, fp, #4
   146e8:	ldr	fp, [sp]
   146ec:	add	sp, sp, #4
   146f0:	pop	{pc}		; (ldr pc, [sp], #4)
   146f4:	str	fp, [sp, #-8]!
   146f8:	str	lr, [sp, #4]
   146fc:	add	fp, sp, #4
   14700:	sub	sp, sp, #16
   14704:	str	r0, [fp, #-8]
   14708:	str	r1, [fp, #-12]
   1470c:	str	r2, [fp, #-16]
   14710:	str	r3, [fp, #-20]	; 0xffffffec
   14714:	ldr	r3, [fp, #-20]	; 0xffffffec
   14718:	cmp	r3, #0
   1471c:	beq	14738 <_start@@Base+0x2080>
   14720:	ldrd	r0, [fp, #4]
   14724:	bl	369a4 <flatcc_json_parser_struct_as_root@@Base+0x474>
   14728:	mov	r2, r0
   1472c:	mov	r3, r1
   14730:	eor	r3, r3, #-2147483648	; 0x80000000
   14734:	b	14748 <_start@@Base+0x2090>
   14738:	ldrd	r0, [fp, #4]
   1473c:	bl	369a4 <flatcc_json_parser_struct_as_root@@Base+0x474>
   14740:	mov	r2, r0
   14744:	mov	r3, r1
   14748:	ldr	r1, [fp, #12]
   1474c:	strd	r2, [r1]
   14750:	ldr	r3, [fp, #-12]
   14754:	mov	r0, r3
   14758:	sub	sp, fp, #4
   1475c:	ldr	fp, [sp]
   14760:	add	sp, sp, #4
   14764:	pop	{pc}		; (ldr pc, [sp], #4)
   14768:	str	fp, [sp, #-8]!
   1476c:	str	lr, [sp, #4]
   14770:	add	fp, sp, #4
   14774:	sub	sp, sp, #16
   14778:	str	r0, [fp, #-8]
   1477c:	str	r1, [fp, #-12]
   14780:	str	r2, [fp, #-16]
   14784:	ldr	r2, [fp, #-16]
   14788:	ldr	r3, [fp, #-12]
   1478c:	sub	r3, r2, r3
   14790:	cmp	r3, #3
   14794:	ble	147c8 <_start@@Base+0x2110>
   14798:	mov	r2, #4
   1479c:	ldr	r3, [pc, #80]	; 147f4 <_start@@Base+0x213c>
   147a0:	add	r3, pc, r3
   147a4:	mov	r1, r3
   147a8:	ldr	r0, [fp, #-12]
   147ac:	bl	125bc <memcmp@plt>
   147b0:	mov	r3, r0
   147b4:	cmp	r3, #0
   147b8:	bne	147c8 <_start@@Base+0x2110>
   147bc:	ldr	r3, [fp, #-12]
   147c0:	add	r3, r3, #4
   147c4:	b	147e0 <_start@@Base+0x2128>
   147c8:	mov	r3, #26
   147cc:	ldr	r2, [fp, #-16]
   147d0:	ldr	r1, [fp, #-12]
   147d4:	ldr	r0, [fp, #-8]
   147d8:	bl	33258 <flatcc_json_parser_set_error@@Base>
   147dc:	mov	r3, r0
   147e0:	mov	r0, r3
   147e4:	sub	sp, fp, #4
   147e8:	ldr	fp, [sp]
   147ec:	add	sp, sp, #4
   147f0:	pop	{pc}		; (ldr pc, [sp], #4)
   147f4:	ldrdeq	r2, [r2], -r8
   147f8:	str	fp, [sp, #-8]!
   147fc:	str	lr, [sp, #4]
   14800:	add	fp, sp, #4
   14804:	sub	sp, sp, #56	; 0x38
   14808:	str	r0, [fp, #-32]	; 0xffffffe0
   1480c:	str	r1, [fp, #-36]	; 0xffffffdc
   14810:	str	r2, [fp, #-40]	; 0xffffffd8
   14814:	str	r3, [fp, #-44]	; 0xffffffd4
   14818:	mov	r2, #0
   1481c:	mov	r3, #0
   14820:	strd	r2, [fp, #-20]	; 0xffffffec
   14824:	mov	r3, #0
   14828:	str	r3, [fp, #-24]	; 0xffffffe8
   1482c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14830:	str	r3, [fp, #-8]
   14834:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14838:	mov	r2, #0
   1483c:	mov	r3, #0
   14840:	strd	r2, [r1]
   14844:	ldr	r2, [fp, #-36]	; 0xffffffdc
   14848:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1484c:	cmp	r2, r3
   14850:	bne	1485c <_start@@Base+0x21a4>
   14854:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14858:	b	148c4 <_start@@Base+0x220c>
   1485c:	sub	r2, fp, #24
   14860:	sub	r3, fp, #20
   14864:	str	r3, [sp]
   14868:	mov	r3, r2
   1486c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   14870:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14874:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14878:	bl	34f58 <flatcc_json_parser_integer@@Base>
   1487c:	str	r0, [fp, #-36]	; 0xffffffdc
   14880:	ldr	r2, [fp, #-36]	; 0xffffffdc
   14884:	ldr	r3, [fp, #-8]
   14888:	cmp	r2, r3
   1488c:	beq	148c0 <_start@@Base+0x2208>
   14890:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14894:	ldrd	r2, [fp, #-20]	; 0xffffffec
   14898:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1489c:	str	r1, [sp, #8]
   148a0:	strd	r2, [sp]
   148a4:	mov	r3, r0
   148a8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   148ac:	ldr	r1, [fp, #-36]	; 0xffffffdc
   148b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   148b4:	bl	140a4 <_start@@Base+0x19ec>
   148b8:	mov	r3, r0
   148bc:	b	148c4 <_start@@Base+0x220c>
   148c0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   148c4:	mov	r0, r3
   148c8:	sub	sp, fp, #4
   148cc:	ldr	fp, [sp]
   148d0:	add	sp, sp, #4
   148d4:	pop	{pc}		; (ldr pc, [sp], #4)
   148d8:	str	fp, [sp, #-8]!
   148dc:	str	lr, [sp, #4]
   148e0:	add	fp, sp, #4
   148e4:	sub	sp, sp, #56	; 0x38
   148e8:	str	r0, [fp, #-32]	; 0xffffffe0
   148ec:	str	r1, [fp, #-36]	; 0xffffffdc
   148f0:	str	r2, [fp, #-40]	; 0xffffffd8
   148f4:	str	r3, [fp, #-44]	; 0xffffffd4
   148f8:	mov	r2, #0
   148fc:	mov	r3, #0
   14900:	strd	r2, [fp, #-20]	; 0xffffffec
   14904:	mov	r3, #0
   14908:	str	r3, [fp, #-24]	; 0xffffffe8
   1490c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14910:	str	r3, [fp, #-8]
   14914:	ldr	r3, [fp, #-44]	; 0xffffffd4
   14918:	mov	r2, #0
   1491c:	str	r2, [r3]
   14920:	ldr	r2, [fp, #-36]	; 0xffffffdc
   14924:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14928:	cmp	r2, r3
   1492c:	bne	14938 <_start@@Base+0x2280>
   14930:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14934:	b	149a0 <_start@@Base+0x22e8>
   14938:	sub	r2, fp, #24
   1493c:	sub	r3, fp, #20
   14940:	str	r3, [sp]
   14944:	mov	r3, r2
   14948:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1494c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14950:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14954:	bl	34f58 <flatcc_json_parser_integer@@Base>
   14958:	str	r0, [fp, #-36]	; 0xffffffdc
   1495c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   14960:	ldr	r3, [fp, #-8]
   14964:	cmp	r2, r3
   14968:	beq	1499c <_start@@Base+0x22e4>
   1496c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14970:	ldrd	r2, [fp, #-20]	; 0xffffffec
   14974:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14978:	str	r1, [sp, #8]
   1497c:	strd	r2, [sp]
   14980:	mov	r3, r0
   14984:	ldr	r2, [fp, #-40]	; 0xffffffd8
   14988:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1498c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14990:	bl	14198 <_start@@Base+0x1ae0>
   14994:	mov	r3, r0
   14998:	b	149a0 <_start@@Base+0x22e8>
   1499c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   149a0:	mov	r0, r3
   149a4:	sub	sp, fp, #4
   149a8:	ldr	fp, [sp]
   149ac:	add	sp, sp, #4
   149b0:	pop	{pc}		; (ldr pc, [sp], #4)
   149b4:	str	fp, [sp, #-8]!
   149b8:	str	lr, [sp, #4]
   149bc:	add	fp, sp, #4
   149c0:	sub	sp, sp, #56	; 0x38
   149c4:	str	r0, [fp, #-32]	; 0xffffffe0
   149c8:	str	r1, [fp, #-36]	; 0xffffffdc
   149cc:	str	r2, [fp, #-40]	; 0xffffffd8
   149d0:	str	r3, [fp, #-44]	; 0xffffffd4
   149d4:	mov	r2, #0
   149d8:	mov	r3, #0
   149dc:	strd	r2, [fp, #-20]	; 0xffffffec
   149e0:	mov	r3, #0
   149e4:	str	r3, [fp, #-24]	; 0xffffffe8
   149e8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   149ec:	str	r3, [fp, #-8]
   149f0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   149f4:	mov	r2, #0
   149f8:	strh	r2, [r3]
   149fc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   14a00:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14a04:	cmp	r2, r3
   14a08:	bne	14a14 <_start@@Base+0x235c>
   14a0c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14a10:	b	14a7c <_start@@Base+0x23c4>
   14a14:	sub	r2, fp, #24
   14a18:	sub	r3, fp, #20
   14a1c:	str	r3, [sp]
   14a20:	mov	r3, r2
   14a24:	ldr	r2, [fp, #-40]	; 0xffffffd8
   14a28:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14a2c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14a30:	bl	34f58 <flatcc_json_parser_integer@@Base>
   14a34:	str	r0, [fp, #-36]	; 0xffffffdc
   14a38:	ldr	r2, [fp, #-36]	; 0xffffffdc
   14a3c:	ldr	r3, [fp, #-8]
   14a40:	cmp	r2, r3
   14a44:	beq	14a78 <_start@@Base+0x23c0>
   14a48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14a4c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   14a50:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14a54:	str	r1, [sp, #8]
   14a58:	strd	r2, [sp]
   14a5c:	mov	r3, r0
   14a60:	ldr	r2, [fp, #-40]	; 0xffffffd8
   14a64:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14a68:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14a6c:	bl	14238 <_start@@Base+0x1b80>
   14a70:	mov	r3, r0
   14a74:	b	14a7c <_start@@Base+0x23c4>
   14a78:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14a7c:	mov	r0, r3
   14a80:	sub	sp, fp, #4
   14a84:	ldr	fp, [sp]
   14a88:	add	sp, sp, #4
   14a8c:	pop	{pc}		; (ldr pc, [sp], #4)
   14a90:	str	fp, [sp, #-8]!
   14a94:	str	lr, [sp, #4]
   14a98:	add	fp, sp, #4
   14a9c:	sub	sp, sp, #56	; 0x38
   14aa0:	str	r0, [fp, #-32]	; 0xffffffe0
   14aa4:	str	r1, [fp, #-36]	; 0xffffffdc
   14aa8:	str	r2, [fp, #-40]	; 0xffffffd8
   14aac:	str	r3, [fp, #-44]	; 0xffffffd4
   14ab0:	mov	r2, #0
   14ab4:	mov	r3, #0
   14ab8:	strd	r2, [fp, #-20]	; 0xffffffec
   14abc:	mov	r3, #0
   14ac0:	str	r3, [fp, #-24]	; 0xffffffe8
   14ac4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14ac8:	str	r3, [fp, #-8]
   14acc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   14ad0:	mov	r2, #0
   14ad4:	strb	r2, [r3]
   14ad8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   14adc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14ae0:	cmp	r2, r3
   14ae4:	bne	14af0 <_start@@Base+0x2438>
   14ae8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14aec:	b	14b58 <_start@@Base+0x24a0>
   14af0:	sub	r2, fp, #24
   14af4:	sub	r3, fp, #20
   14af8:	str	r3, [sp]
   14afc:	mov	r3, r2
   14b00:	ldr	r2, [fp, #-40]	; 0xffffffd8
   14b04:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14b08:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14b0c:	bl	34f58 <flatcc_json_parser_integer@@Base>
   14b10:	str	r0, [fp, #-36]	; 0xffffffdc
   14b14:	ldr	r2, [fp, #-36]	; 0xffffffdc
   14b18:	ldr	r3, [fp, #-8]
   14b1c:	cmp	r2, r3
   14b20:	beq	14b54 <_start@@Base+0x249c>
   14b24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14b28:	ldrd	r2, [fp, #-20]	; 0xffffffec
   14b2c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14b30:	str	r1, [sp, #8]
   14b34:	strd	r2, [sp]
   14b38:	mov	r3, r0
   14b3c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   14b40:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14b44:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14b48:	bl	142d8 <_start@@Base+0x1c20>
   14b4c:	mov	r3, r0
   14b50:	b	14b58 <_start@@Base+0x24a0>
   14b54:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14b58:	mov	r0, r3
   14b5c:	sub	sp, fp, #4
   14b60:	ldr	fp, [sp]
   14b64:	add	sp, sp, #4
   14b68:	pop	{pc}		; (ldr pc, [sp], #4)
   14b6c:	str	fp, [sp, #-8]!
   14b70:	str	lr, [sp, #4]
   14b74:	add	fp, sp, #4
   14b78:	sub	sp, sp, #56	; 0x38
   14b7c:	str	r0, [fp, #-32]	; 0xffffffe0
   14b80:	str	r1, [fp, #-36]	; 0xffffffdc
   14b84:	str	r2, [fp, #-40]	; 0xffffffd8
   14b88:	str	r3, [fp, #-44]	; 0xffffffd4
   14b8c:	mov	r2, #0
   14b90:	mov	r3, #0
   14b94:	strd	r2, [fp, #-20]	; 0xffffffec
   14b98:	mov	r3, #0
   14b9c:	str	r3, [fp, #-24]	; 0xffffffe8
   14ba0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14ba4:	str	r3, [fp, #-8]
   14ba8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14bac:	mov	r2, #0
   14bb0:	mov	r3, #0
   14bb4:	strd	r2, [r1]
   14bb8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   14bbc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14bc0:	cmp	r2, r3
   14bc4:	bne	14bd0 <_start@@Base+0x2518>
   14bc8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14bcc:	b	14c38 <_start@@Base+0x2580>
   14bd0:	sub	r2, fp, #24
   14bd4:	sub	r3, fp, #20
   14bd8:	str	r3, [sp]
   14bdc:	mov	r3, r2
   14be0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   14be4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14be8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14bec:	bl	34f58 <flatcc_json_parser_integer@@Base>
   14bf0:	str	r0, [fp, #-36]	; 0xffffffdc
   14bf4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   14bf8:	ldr	r3, [fp, #-8]
   14bfc:	cmp	r2, r3
   14c00:	beq	14c34 <_start@@Base+0x257c>
   14c04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14c08:	ldrd	r2, [fp, #-20]	; 0xffffffec
   14c0c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14c10:	str	r1, [sp, #8]
   14c14:	strd	r2, [sp]
   14c18:	mov	r3, r0
   14c1c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   14c20:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14c24:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14c28:	bl	14370 <_start@@Base+0x1cb8>
   14c2c:	mov	r3, r0
   14c30:	b	14c38 <_start@@Base+0x2580>
   14c34:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14c38:	mov	r0, r3
   14c3c:	sub	sp, fp, #4
   14c40:	ldr	fp, [sp]
   14c44:	add	sp, sp, #4
   14c48:	pop	{pc}		; (ldr pc, [sp], #4)
   14c4c:	str	fp, [sp, #-8]!
   14c50:	str	lr, [sp, #4]
   14c54:	add	fp, sp, #4
   14c58:	sub	sp, sp, #56	; 0x38
   14c5c:	str	r0, [fp, #-32]	; 0xffffffe0
   14c60:	str	r1, [fp, #-36]	; 0xffffffdc
   14c64:	str	r2, [fp, #-40]	; 0xffffffd8
   14c68:	str	r3, [fp, #-44]	; 0xffffffd4
   14c6c:	mov	r2, #0
   14c70:	mov	r3, #0
   14c74:	strd	r2, [fp, #-20]	; 0xffffffec
   14c78:	mov	r3, #0
   14c7c:	str	r3, [fp, #-24]	; 0xffffffe8
   14c80:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14c84:	str	r3, [fp, #-8]
   14c88:	ldr	r3, [fp, #-44]	; 0xffffffd4
   14c8c:	mov	r2, #0
   14c90:	str	r2, [r3]
   14c94:	ldr	r2, [fp, #-36]	; 0xffffffdc
   14c98:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14c9c:	cmp	r2, r3
   14ca0:	bne	14cac <_start@@Base+0x25f4>
   14ca4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14ca8:	b	14d14 <_start@@Base+0x265c>
   14cac:	sub	r2, fp, #24
   14cb0:	sub	r3, fp, #20
   14cb4:	str	r3, [sp]
   14cb8:	mov	r3, r2
   14cbc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   14cc0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14cc4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14cc8:	bl	34f58 <flatcc_json_parser_integer@@Base>
   14ccc:	str	r0, [fp, #-36]	; 0xffffffdc
   14cd0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   14cd4:	ldr	r3, [fp, #-8]
   14cd8:	cmp	r2, r3
   14cdc:	beq	14d10 <_start@@Base+0x2658>
   14ce0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14ce4:	ldrd	r2, [fp, #-20]	; 0xffffffec
   14ce8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14cec:	str	r1, [sp, #8]
   14cf0:	strd	r2, [sp]
   14cf4:	mov	r3, r0
   14cf8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   14cfc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14d00:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14d04:	bl	14430 <_start@@Base+0x1d78>
   14d08:	mov	r3, r0
   14d0c:	b	14d14 <_start@@Base+0x265c>
   14d10:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14d14:	mov	r0, r3
   14d18:	sub	sp, fp, #4
   14d1c:	ldr	fp, [sp]
   14d20:	add	sp, sp, #4
   14d24:	pop	{pc}		; (ldr pc, [sp], #4)
   14d28:	str	fp, [sp, #-8]!
   14d2c:	str	lr, [sp, #4]
   14d30:	add	fp, sp, #4
   14d34:	sub	sp, sp, #56	; 0x38
   14d38:	str	r0, [fp, #-32]	; 0xffffffe0
   14d3c:	str	r1, [fp, #-36]	; 0xffffffdc
   14d40:	str	r2, [fp, #-40]	; 0xffffffd8
   14d44:	str	r3, [fp, #-44]	; 0xffffffd4
   14d48:	mov	r2, #0
   14d4c:	mov	r3, #0
   14d50:	strd	r2, [fp, #-20]	; 0xffffffec
   14d54:	mov	r3, #0
   14d58:	str	r3, [fp, #-24]	; 0xffffffe8
   14d5c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14d60:	str	r3, [fp, #-8]
   14d64:	ldr	r3, [fp, #-44]	; 0xffffffd4
   14d68:	mov	r2, #0
   14d6c:	strh	r2, [r3]
   14d70:	ldr	r2, [fp, #-36]	; 0xffffffdc
   14d74:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14d78:	cmp	r2, r3
   14d7c:	bne	14d88 <_start@@Base+0x26d0>
   14d80:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14d84:	b	14df0 <_start@@Base+0x2738>
   14d88:	sub	r2, fp, #24
   14d8c:	sub	r3, fp, #20
   14d90:	str	r3, [sp]
   14d94:	mov	r3, r2
   14d98:	ldr	r2, [fp, #-40]	; 0xffffffd8
   14d9c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14da0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14da4:	bl	34f58 <flatcc_json_parser_integer@@Base>
   14da8:	str	r0, [fp, #-36]	; 0xffffffdc
   14dac:	ldr	r2, [fp, #-36]	; 0xffffffdc
   14db0:	ldr	r3, [fp, #-8]
   14db4:	cmp	r2, r3
   14db8:	beq	14dec <_start@@Base+0x2734>
   14dbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14dc0:	ldrd	r2, [fp, #-20]	; 0xffffffec
   14dc4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14dc8:	str	r1, [sp, #8]
   14dcc:	strd	r2, [sp]
   14dd0:	mov	r3, r0
   14dd4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   14dd8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14ddc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14de0:	bl	144f8 <_start@@Base+0x1e40>
   14de4:	mov	r3, r0
   14de8:	b	14df0 <_start@@Base+0x2738>
   14dec:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14df0:	mov	r0, r3
   14df4:	sub	sp, fp, #4
   14df8:	ldr	fp, [sp]
   14dfc:	add	sp, sp, #4
   14e00:	pop	{pc}		; (ldr pc, [sp], #4)
   14e04:	str	fp, [sp, #-8]!
   14e08:	str	lr, [sp, #4]
   14e0c:	add	fp, sp, #4
   14e10:	sub	sp, sp, #56	; 0x38
   14e14:	str	r0, [fp, #-32]	; 0xffffffe0
   14e18:	str	r1, [fp, #-36]	; 0xffffffdc
   14e1c:	str	r2, [fp, #-40]	; 0xffffffd8
   14e20:	str	r3, [fp, #-44]	; 0xffffffd4
   14e24:	mov	r2, #0
   14e28:	mov	r3, #0
   14e2c:	strd	r2, [fp, #-20]	; 0xffffffec
   14e30:	mov	r3, #0
   14e34:	str	r3, [fp, #-24]	; 0xffffffe8
   14e38:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14e3c:	str	r3, [fp, #-8]
   14e40:	ldr	r3, [fp, #-44]	; 0xffffffd4
   14e44:	mov	r2, #0
   14e48:	strb	r2, [r3]
   14e4c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   14e50:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14e54:	cmp	r2, r3
   14e58:	bne	14e64 <_start@@Base+0x27ac>
   14e5c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14e60:	b	14ecc <_start@@Base+0x2814>
   14e64:	sub	r2, fp, #24
   14e68:	sub	r3, fp, #20
   14e6c:	str	r3, [sp]
   14e70:	mov	r3, r2
   14e74:	ldr	r2, [fp, #-40]	; 0xffffffd8
   14e78:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14e7c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14e80:	bl	34f58 <flatcc_json_parser_integer@@Base>
   14e84:	str	r0, [fp, #-36]	; 0xffffffdc
   14e88:	ldr	r2, [fp, #-36]	; 0xffffffdc
   14e8c:	ldr	r3, [fp, #-8]
   14e90:	cmp	r2, r3
   14e94:	beq	14ec8 <_start@@Base+0x2810>
   14e98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14e9c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   14ea0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14ea4:	str	r1, [sp, #8]
   14ea8:	strd	r2, [sp]
   14eac:	mov	r3, r0
   14eb0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   14eb4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14eb8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14ebc:	bl	145c4 <_start@@Base+0x1f0c>
   14ec0:	mov	r3, r0
   14ec4:	b	14ecc <_start@@Base+0x2814>
   14ec8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14ecc:	mov	r0, r3
   14ed0:	sub	sp, fp, #4
   14ed4:	ldr	fp, [sp]
   14ed8:	add	sp, sp, #4
   14edc:	pop	{pc}		; (ldr pc, [sp], #4)
   14ee0:	str	fp, [sp, #-8]!
   14ee4:	str	lr, [sp, #4]
   14ee8:	add	fp, sp, #4
   14eec:	sub	sp, sp, #24
   14ef0:	str	r0, [fp, #-16]
   14ef4:	str	r1, [fp, #-20]	; 0xffffffec
   14ef8:	str	r2, [fp, #-24]	; 0xffffffe8
   14efc:	str	r3, [fp, #-28]	; 0xffffffe4
   14f00:	ldr	r3, [fp, #-20]	; 0xffffffec
   14f04:	str	r3, [fp, #-8]
   14f08:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14f0c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14f10:	sub	r3, r2, r3
   14f14:	cmp	r3, #3
   14f18:	ble	14f58 <_start@@Base+0x28a0>
   14f1c:	mov	r2, #4
   14f20:	ldr	r3, [pc, #208]	; 14ff8 <_start@@Base+0x2940>
   14f24:	add	r3, pc, r3
   14f28:	mov	r1, r3
   14f2c:	ldr	r0, [fp, #-20]	; 0xffffffec
   14f30:	bl	125bc <memcmp@plt>
   14f34:	mov	r3, r0
   14f38:	cmp	r3, #0
   14f3c:	bne	14f58 <_start@@Base+0x28a0>
   14f40:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14f44:	mov	r2, #1
   14f48:	strb	r2, [r3]
   14f4c:	ldr	r3, [fp, #-8]
   14f50:	add	r3, r3, #4
   14f54:	b	14fe4 <_start@@Base+0x292c>
   14f58:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14f5c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14f60:	sub	r3, r2, r3
   14f64:	cmp	r3, #4
   14f68:	ble	14fa8 <_start@@Base+0x28f0>
   14f6c:	mov	r2, #5
   14f70:	ldr	r3, [pc, #132]	; 14ffc <_start@@Base+0x2944>
   14f74:	add	r3, pc, r3
   14f78:	mov	r1, r3
   14f7c:	ldr	r0, [fp, #-20]	; 0xffffffec
   14f80:	bl	125bc <memcmp@plt>
   14f84:	mov	r3, r0
   14f88:	cmp	r3, #0
   14f8c:	bne	14fa8 <_start@@Base+0x28f0>
   14f90:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14f94:	mov	r2, #0
   14f98:	strb	r2, [r3]
   14f9c:	ldr	r3, [fp, #-8]
   14fa0:	add	r3, r3, #5
   14fa4:	b	14fe4 <_start@@Base+0x292c>
   14fa8:	sub	r3, fp, #9
   14fac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14fb0:	ldr	r1, [fp, #-20]	; 0xffffffec
   14fb4:	ldr	r0, [fp, #-16]
   14fb8:	bl	14a90 <_start@@Base+0x23d8>
   14fbc:	str	r0, [fp, #-20]	; 0xffffffec
   14fc0:	ldrb	r3, [fp, #-9]
   14fc4:	cmp	r3, #0
   14fc8:	movne	r3, #1
   14fcc:	moveq	r3, #0
   14fd0:	uxtb	r3, r3
   14fd4:	mov	r2, r3
   14fd8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14fdc:	strb	r2, [r3]
   14fe0:	ldr	r3, [fp, #-20]	; 0xffffffec
   14fe4:	mov	r0, r3
   14fe8:	sub	sp, fp, #4
   14fec:	ldr	fp, [sp]
   14ff0:	add	sp, sp, #4
   14ff4:	pop	{pc}		; (ldr pc, [sp], #4)
   14ff8:	andeq	r1, r2, ip, asr lr
   14ffc:	andeq	r1, r2, r4, lsl lr
   15000:	strd	r4, [sp, #-20]!	; 0xffffffec
   15004:	str	r6, [sp, #8]
   15008:	str	fp, [sp, #12]
   1500c:	str	lr, [sp, #16]
   15010:	add	fp, sp, #16
   15014:	sub	sp, sp, #76	; 0x4c
   15018:	str	r0, [fp, #-64]	; 0xffffffc0
   1501c:	str	r1, [fp, #-68]	; 0xffffffbc
   15020:	str	r2, [fp, #-72]	; 0xffffffb8
   15024:	str	r3, [fp, #-76]	; 0xffffffb4
   15028:	mov	r2, #0
   1502c:	mov	r3, #0
   15030:	strd	r2, [fp, #-44]	; 0xffffffd4
   15034:	mov	r3, #0
   15038:	str	r3, [fp, #-28]	; 0xffffffe4
   1503c:	ldr	r1, [fp, #4]
   15040:	mov	r2, #0
   15044:	mov	r3, #0
   15048:	strd	r2, [r1]
   1504c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   15050:	ldr	r1, [fp, #-68]	; 0xffffffbc
   15054:	ldr	r0, [fp, #-64]	; 0xffffffc0
   15058:	bl	13a00 <_start@@Base+0x1348>
   1505c:	str	r0, [fp, #-68]	; 0xffffffbc
   15060:	ldr	r2, [fp, #-68]	; 0xffffffbc
   15064:	ldr	r3, [fp, #-72]	; 0xffffffb8
   15068:	cmp	r2, r3
   1506c:	bne	15078 <_start@@Base+0x29c0>
   15070:	ldr	r3, [fp, #-68]	; 0xffffffbc
   15074:	b	151d8 <_start@@Base+0x2b20>
   15078:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1507c:	str	r3, [fp, #-24]	; 0xffffffe8
   15080:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15084:	ldr	r6, [r3]
   15088:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1508c:	str	r3, [fp, #-32]	; 0xffffffe0
   15090:	sub	r2, fp, #56	; 0x38
   15094:	sub	r3, fp, #60	; 0x3c
   15098:	str	r3, [sp, #4]
   1509c:	sub	r3, fp, #52	; 0x34
   150a0:	str	r3, [sp]
   150a4:	mov	r3, r2
   150a8:	ldr	r2, [fp, #-72]	; 0xffffffb8
   150ac:	ldr	r1, [fp, #-32]	; 0xffffffe0
   150b0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   150b4:	blx	r6
   150b8:	str	r0, [fp, #-68]	; 0xffffffbc
   150bc:	ldr	r2, [fp, #-68]	; 0xffffffbc
   150c0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   150c4:	cmp	r2, r3
   150c8:	bne	150d4 <_start@@Base+0x2a1c>
   150cc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   150d0:	b	151d8 <_start@@Base+0x2b20>
   150d4:	ldr	r2, [fp, #-68]	; 0xffffffbc
   150d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   150dc:	cmp	r2, r3
   150e0:	bne	15100 <_start@@Base+0x2a48>
   150e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   150e8:	add	r3, r3, #4
   150ec:	str	r3, [fp, #-24]	; 0xffffffe8
   150f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   150f4:	ldr	r3, [r3]
   150f8:	cmp	r3, #0
   150fc:	bne	15080 <_start@@Base+0x29c8>
   15100:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15104:	ldr	r3, [fp, #-68]	; 0xffffffbc
   15108:	cmp	r2, r3
   1510c:	bne	1512c <_start@@Base+0x2a74>
   15110:	mov	r3, #23
   15114:	ldr	r2, [fp, #-72]	; 0xffffffb8
   15118:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1511c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   15120:	bl	33258 <flatcc_json_parser_set_error@@Base>
   15124:	mov	r3, r0
   15128:	b	151d8 <_start@@Base+0x2b20>
   1512c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15130:	add	r2, r3, #1
   15134:	str	r2, [fp, #-28]	; 0xffffffe4
   15138:	cmp	r3, #0
   1513c:	beq	1516c <_start@@Base+0x2ab4>
   15140:	ldr	r3, [fp, #-64]	; 0xffffffc0
   15144:	ldr	r3, [r3, #12]
   15148:	cmp	r3, #0
   1514c:	beq	1516c <_start@@Base+0x2ab4>
   15150:	mov	r3, #14
   15154:	ldr	r2, [fp, #-72]	; 0xffffffb8
   15158:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1515c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   15160:	bl	33258 <flatcc_json_parser_set_error@@Base>
   15164:	mov	r3, r0
   15168:	b	151d8 <_start@@Base+0x2b20>
   1516c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15170:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   15174:	sub	r1, fp, #44	; 0x2c
   15178:	str	r1, [sp, #8]
   1517c:	strd	r2, [sp]
   15180:	mov	r3, r0
   15184:	ldr	r2, [fp, #-72]	; 0xffffffb8
   15188:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1518c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   15190:	bl	140a4 <_start@@Base+0x19ec>
   15194:	mov	r2, r0
   15198:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1519c:	cmp	r3, r2
   151a0:	bne	151ac <_start@@Base+0x2af4>
   151a4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   151a8:	b	151d8 <_start@@Base+0x2b20>
   151ac:	ldr	r3, [fp, #4]
   151b0:	ldrd	r0, [r3]
   151b4:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   151b8:	adds	r4, r0, r2
   151bc:	adc	r5, r1, r3
   151c0:	ldr	r3, [fp, #4]
   151c4:	strd	r4, [r3]
   151c8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   151cc:	cmp	r3, #0
   151d0:	bne	15078 <_start@@Base+0x29c0>
   151d4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   151d8:	mov	r0, r3
   151dc:	sub	sp, fp, #16
   151e0:	ldrd	r4, [sp]
   151e4:	ldr	r6, [sp, #8]
   151e8:	ldr	fp, [sp, #12]
   151ec:	add	sp, sp, #16
   151f0:	pop	{pc}		; (ldr pc, [sp], #4)
   151f4:	str	r4, [sp, #-12]!
   151f8:	str	fp, [sp, #4]
   151fc:	str	lr, [sp, #8]
   15200:	add	fp, sp, #8
   15204:	sub	sp, sp, #68	; 0x44
   15208:	str	r0, [fp, #-48]	; 0xffffffd0
   1520c:	str	r1, [fp, #-52]	; 0xffffffcc
   15210:	str	r2, [fp, #-56]	; 0xffffffc8
   15214:	str	r3, [fp, #-60]	; 0xffffffc4
   15218:	mov	r3, #0
   1521c:	str	r3, [fp, #-28]	; 0xffffffe4
   15220:	mov	r3, #0
   15224:	str	r3, [fp, #-20]	; 0xffffffec
   15228:	ldr	r3, [fp, #4]
   1522c:	mov	r2, #0
   15230:	str	r2, [r3]
   15234:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15238:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1523c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15240:	bl	13a00 <_start@@Base+0x1348>
   15244:	str	r0, [fp, #-52]	; 0xffffffcc
   15248:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1524c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15250:	cmp	r2, r3
   15254:	bne	15260 <_start@@Base+0x2ba8>
   15258:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1525c:	b	153bc <_start@@Base+0x2d04>
   15260:	ldr	r3, [fp, #-60]	; 0xffffffc4
   15264:	str	r3, [fp, #-16]
   15268:	ldr	r3, [fp, #-16]
   1526c:	ldr	r4, [r3]
   15270:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15274:	str	r3, [fp, #-24]	; 0xffffffe8
   15278:	sub	r2, fp, #40	; 0x28
   1527c:	sub	r3, fp, #44	; 0x2c
   15280:	str	r3, [sp, #4]
   15284:	sub	r3, fp, #36	; 0x24
   15288:	str	r3, [sp]
   1528c:	mov	r3, r2
   15290:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15294:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15298:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1529c:	blx	r4
   152a0:	str	r0, [fp, #-52]	; 0xffffffcc
   152a4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   152a8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   152ac:	cmp	r2, r3
   152b0:	bne	152bc <_start@@Base+0x2c04>
   152b4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   152b8:	b	153bc <_start@@Base+0x2d04>
   152bc:	ldr	r2, [fp, #-52]	; 0xffffffcc
   152c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   152c4:	cmp	r2, r3
   152c8:	bne	152e8 <_start@@Base+0x2c30>
   152cc:	ldr	r3, [fp, #-16]
   152d0:	add	r3, r3, #4
   152d4:	str	r3, [fp, #-16]
   152d8:	ldr	r3, [fp, #-16]
   152dc:	ldr	r3, [r3]
   152e0:	cmp	r3, #0
   152e4:	bne	15268 <_start@@Base+0x2bb0>
   152e8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   152ec:	ldr	r3, [fp, #-52]	; 0xffffffcc
   152f0:	cmp	r2, r3
   152f4:	bne	15314 <_start@@Base+0x2c5c>
   152f8:	mov	r3, #23
   152fc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15300:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15304:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15308:	bl	33258 <flatcc_json_parser_set_error@@Base>
   1530c:	mov	r3, r0
   15310:	b	153bc <_start@@Base+0x2d04>
   15314:	ldr	r3, [fp, #-20]	; 0xffffffec
   15318:	add	r2, r3, #1
   1531c:	str	r2, [fp, #-20]	; 0xffffffec
   15320:	cmp	r3, #0
   15324:	beq	15354 <_start@@Base+0x2c9c>
   15328:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1532c:	ldr	r3, [r3, #12]
   15330:	cmp	r3, #0
   15334:	beq	15354 <_start@@Base+0x2c9c>
   15338:	mov	r3, #14
   1533c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15340:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15344:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15348:	bl	33258 <flatcc_json_parser_set_error@@Base>
   1534c:	mov	r3, r0
   15350:	b	153bc <_start@@Base+0x2d04>
   15354:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15358:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1535c:	sub	r1, fp, #28
   15360:	str	r1, [sp, #8]
   15364:	strd	r2, [sp]
   15368:	mov	r3, r0
   1536c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15370:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15374:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15378:	bl	14198 <_start@@Base+0x1ae0>
   1537c:	mov	r2, r0
   15380:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15384:	cmp	r3, r2
   15388:	bne	15394 <_start@@Base+0x2cdc>
   1538c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15390:	b	153bc <_start@@Base+0x2d04>
   15394:	ldr	r3, [fp, #4]
   15398:	ldr	r2, [r3]
   1539c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   153a0:	add	r2, r2, r3
   153a4:	ldr	r3, [fp, #4]
   153a8:	str	r2, [r3]
   153ac:	ldr	r3, [fp, #-44]	; 0xffffffd4
   153b0:	cmp	r3, #0
   153b4:	bne	15260 <_start@@Base+0x2ba8>
   153b8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   153bc:	mov	r0, r3
   153c0:	sub	sp, fp, #8
   153c4:	ldr	r4, [sp]
   153c8:	ldr	fp, [sp, #4]
   153cc:	add	sp, sp, #8
   153d0:	pop	{pc}		; (ldr pc, [sp], #4)
   153d4:	str	r4, [sp, #-12]!
   153d8:	str	fp, [sp, #4]
   153dc:	str	lr, [sp, #8]
   153e0:	add	fp, sp, #8
   153e4:	sub	sp, sp, #68	; 0x44
   153e8:	str	r0, [fp, #-48]	; 0xffffffd0
   153ec:	str	r1, [fp, #-52]	; 0xffffffcc
   153f0:	str	r2, [fp, #-56]	; 0xffffffc8
   153f4:	str	r3, [fp, #-60]	; 0xffffffc4
   153f8:	mov	r3, #0
   153fc:	strh	r3, [fp, #-26]	; 0xffffffe6
   15400:	mov	r3, #0
   15404:	str	r3, [fp, #-20]	; 0xffffffec
   15408:	ldr	r3, [fp, #4]
   1540c:	mov	r2, #0
   15410:	strh	r2, [r3]
   15414:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15418:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1541c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15420:	bl	13a00 <_start@@Base+0x1348>
   15424:	str	r0, [fp, #-52]	; 0xffffffcc
   15428:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1542c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15430:	cmp	r2, r3
   15434:	bne	15440 <_start@@Base+0x2d88>
   15438:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1543c:	b	155a0 <_start@@Base+0x2ee8>
   15440:	ldr	r3, [fp, #-60]	; 0xffffffc4
   15444:	str	r3, [fp, #-16]
   15448:	ldr	r3, [fp, #-16]
   1544c:	ldr	r4, [r3]
   15450:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15454:	str	r3, [fp, #-24]	; 0xffffffe8
   15458:	sub	r2, fp, #40	; 0x28
   1545c:	sub	r3, fp, #44	; 0x2c
   15460:	str	r3, [sp, #4]
   15464:	sub	r3, fp, #36	; 0x24
   15468:	str	r3, [sp]
   1546c:	mov	r3, r2
   15470:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15474:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15478:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1547c:	blx	r4
   15480:	str	r0, [fp, #-52]	; 0xffffffcc
   15484:	ldr	r2, [fp, #-52]	; 0xffffffcc
   15488:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1548c:	cmp	r2, r3
   15490:	bne	1549c <_start@@Base+0x2de4>
   15494:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15498:	b	155a0 <_start@@Base+0x2ee8>
   1549c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   154a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   154a4:	cmp	r2, r3
   154a8:	bne	154c8 <_start@@Base+0x2e10>
   154ac:	ldr	r3, [fp, #-16]
   154b0:	add	r3, r3, #4
   154b4:	str	r3, [fp, #-16]
   154b8:	ldr	r3, [fp, #-16]
   154bc:	ldr	r3, [r3]
   154c0:	cmp	r3, #0
   154c4:	bne	15448 <_start@@Base+0x2d90>
   154c8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   154cc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   154d0:	cmp	r2, r3
   154d4:	bne	154f4 <_start@@Base+0x2e3c>
   154d8:	mov	r3, #23
   154dc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   154e0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   154e4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   154e8:	bl	33258 <flatcc_json_parser_set_error@@Base>
   154ec:	mov	r3, r0
   154f0:	b	155a0 <_start@@Base+0x2ee8>
   154f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   154f8:	add	r2, r3, #1
   154fc:	str	r2, [fp, #-20]	; 0xffffffec
   15500:	cmp	r3, #0
   15504:	beq	15534 <_start@@Base+0x2e7c>
   15508:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1550c:	ldr	r3, [r3, #12]
   15510:	cmp	r3, #0
   15514:	beq	15534 <_start@@Base+0x2e7c>
   15518:	mov	r3, #14
   1551c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15520:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15524:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15528:	bl	33258 <flatcc_json_parser_set_error@@Base>
   1552c:	mov	r3, r0
   15530:	b	155a0 <_start@@Base+0x2ee8>
   15534:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15538:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1553c:	sub	r1, fp, #26
   15540:	str	r1, [sp, #8]
   15544:	strd	r2, [sp]
   15548:	mov	r3, r0
   1554c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15550:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15554:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15558:	bl	14238 <_start@@Base+0x1b80>
   1555c:	mov	r2, r0
   15560:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15564:	cmp	r3, r2
   15568:	bne	15574 <_start@@Base+0x2ebc>
   1556c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15570:	b	155a0 <_start@@Base+0x2ee8>
   15574:	ldr	r3, [fp, #4]
   15578:	ldrh	r2, [r3]
   1557c:	ldrh	r3, [fp, #-26]	; 0xffffffe6
   15580:	add	r3, r2, r3
   15584:	uxth	r2, r3
   15588:	ldr	r3, [fp, #4]
   1558c:	strh	r2, [r3]
   15590:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15594:	cmp	r3, #0
   15598:	bne	15440 <_start@@Base+0x2d88>
   1559c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   155a0:	mov	r0, r3
   155a4:	sub	sp, fp, #8
   155a8:	ldr	r4, [sp]
   155ac:	ldr	fp, [sp, #4]
   155b0:	add	sp, sp, #8
   155b4:	pop	{pc}		; (ldr pc, [sp], #4)
   155b8:	str	r4, [sp, #-12]!
   155bc:	str	fp, [sp, #4]
   155c0:	str	lr, [sp, #8]
   155c4:	add	fp, sp, #8
   155c8:	sub	sp, sp, #68	; 0x44
   155cc:	str	r0, [fp, #-48]	; 0xffffffd0
   155d0:	str	r1, [fp, #-52]	; 0xffffffcc
   155d4:	str	r2, [fp, #-56]	; 0xffffffc8
   155d8:	str	r3, [fp, #-60]	; 0xffffffc4
   155dc:	mov	r3, #0
   155e0:	strb	r3, [fp, #-25]	; 0xffffffe7
   155e4:	mov	r3, #0
   155e8:	str	r3, [fp, #-20]	; 0xffffffec
   155ec:	ldr	r3, [fp, #4]
   155f0:	mov	r2, #0
   155f4:	strb	r2, [r3]
   155f8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   155fc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15600:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15604:	bl	13a00 <_start@@Base+0x1348>
   15608:	str	r0, [fp, #-52]	; 0xffffffcc
   1560c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   15610:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15614:	cmp	r2, r3
   15618:	bne	15624 <_start@@Base+0x2f6c>
   1561c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15620:	b	15784 <_start@@Base+0x30cc>
   15624:	ldr	r3, [fp, #-60]	; 0xffffffc4
   15628:	str	r3, [fp, #-16]
   1562c:	ldr	r3, [fp, #-16]
   15630:	ldr	r4, [r3]
   15634:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15638:	str	r3, [fp, #-24]	; 0xffffffe8
   1563c:	sub	r2, fp, #40	; 0x28
   15640:	sub	r3, fp, #44	; 0x2c
   15644:	str	r3, [sp, #4]
   15648:	sub	r3, fp, #36	; 0x24
   1564c:	str	r3, [sp]
   15650:	mov	r3, r2
   15654:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15658:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1565c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15660:	blx	r4
   15664:	str	r0, [fp, #-52]	; 0xffffffcc
   15668:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1566c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15670:	cmp	r2, r3
   15674:	bne	15680 <_start@@Base+0x2fc8>
   15678:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1567c:	b	15784 <_start@@Base+0x30cc>
   15680:	ldr	r2, [fp, #-52]	; 0xffffffcc
   15684:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15688:	cmp	r2, r3
   1568c:	bne	156ac <_start@@Base+0x2ff4>
   15690:	ldr	r3, [fp, #-16]
   15694:	add	r3, r3, #4
   15698:	str	r3, [fp, #-16]
   1569c:	ldr	r3, [fp, #-16]
   156a0:	ldr	r3, [r3]
   156a4:	cmp	r3, #0
   156a8:	bne	1562c <_start@@Base+0x2f74>
   156ac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   156b0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   156b4:	cmp	r2, r3
   156b8:	bne	156d8 <_start@@Base+0x3020>
   156bc:	mov	r3, #23
   156c0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   156c4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   156c8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   156cc:	bl	33258 <flatcc_json_parser_set_error@@Base>
   156d0:	mov	r3, r0
   156d4:	b	15784 <_start@@Base+0x30cc>
   156d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   156dc:	add	r2, r3, #1
   156e0:	str	r2, [fp, #-20]	; 0xffffffec
   156e4:	cmp	r3, #0
   156e8:	beq	15718 <_start@@Base+0x3060>
   156ec:	ldr	r3, [fp, #-48]	; 0xffffffd0
   156f0:	ldr	r3, [r3, #12]
   156f4:	cmp	r3, #0
   156f8:	beq	15718 <_start@@Base+0x3060>
   156fc:	mov	r3, #14
   15700:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15704:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15708:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1570c:	bl	33258 <flatcc_json_parser_set_error@@Base>
   15710:	mov	r3, r0
   15714:	b	15784 <_start@@Base+0x30cc>
   15718:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1571c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   15720:	sub	r1, fp, #25
   15724:	str	r1, [sp, #8]
   15728:	strd	r2, [sp]
   1572c:	mov	r3, r0
   15730:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15734:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15738:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1573c:	bl	142d8 <_start@@Base+0x1c20>
   15740:	mov	r2, r0
   15744:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15748:	cmp	r3, r2
   1574c:	bne	15758 <_start@@Base+0x30a0>
   15750:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15754:	b	15784 <_start@@Base+0x30cc>
   15758:	ldr	r3, [fp, #4]
   1575c:	ldrb	r2, [r3]
   15760:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   15764:	add	r3, r2, r3
   15768:	uxtb	r2, r3
   1576c:	ldr	r3, [fp, #4]
   15770:	strb	r2, [r3]
   15774:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15778:	cmp	r3, #0
   1577c:	bne	15624 <_start@@Base+0x2f6c>
   15780:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15784:	mov	r0, r3
   15788:	sub	sp, fp, #8
   1578c:	ldr	r4, [sp]
   15790:	ldr	fp, [sp, #4]
   15794:	add	sp, sp, #8
   15798:	pop	{pc}		; (ldr pc, [sp], #4)
   1579c:	strd	r4, [sp, #-20]!	; 0xffffffec
   157a0:	str	r6, [sp, #8]
   157a4:	str	fp, [sp, #12]
   157a8:	str	lr, [sp, #16]
   157ac:	add	fp, sp, #16
   157b0:	sub	sp, sp, #76	; 0x4c
   157b4:	str	r0, [fp, #-64]	; 0xffffffc0
   157b8:	str	r1, [fp, #-68]	; 0xffffffbc
   157bc:	str	r2, [fp, #-72]	; 0xffffffb8
   157c0:	str	r3, [fp, #-76]	; 0xffffffb4
   157c4:	mov	r2, #0
   157c8:	mov	r3, #0
   157cc:	strd	r2, [fp, #-44]	; 0xffffffd4
   157d0:	mov	r3, #0
   157d4:	str	r3, [fp, #-28]	; 0xffffffe4
   157d8:	ldr	r1, [fp, #4]
   157dc:	mov	r2, #0
   157e0:	mov	r3, #0
   157e4:	strd	r2, [r1]
   157e8:	ldr	r2, [fp, #-72]	; 0xffffffb8
   157ec:	ldr	r1, [fp, #-68]	; 0xffffffbc
   157f0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   157f4:	bl	13a00 <_start@@Base+0x1348>
   157f8:	str	r0, [fp, #-68]	; 0xffffffbc
   157fc:	ldr	r2, [fp, #-68]	; 0xffffffbc
   15800:	ldr	r3, [fp, #-72]	; 0xffffffb8
   15804:	cmp	r2, r3
   15808:	bne	15814 <_start@@Base+0x315c>
   1580c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   15810:	b	15974 <_start@@Base+0x32bc>
   15814:	ldr	r3, [fp, #-76]	; 0xffffffb4
   15818:	str	r3, [fp, #-24]	; 0xffffffe8
   1581c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15820:	ldr	r6, [r3]
   15824:	ldr	r3, [fp, #-68]	; 0xffffffbc
   15828:	str	r3, [fp, #-32]	; 0xffffffe0
   1582c:	sub	r2, fp, #56	; 0x38
   15830:	sub	r3, fp, #60	; 0x3c
   15834:	str	r3, [sp, #4]
   15838:	sub	r3, fp, #52	; 0x34
   1583c:	str	r3, [sp]
   15840:	mov	r3, r2
   15844:	ldr	r2, [fp, #-72]	; 0xffffffb8
   15848:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1584c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   15850:	blx	r6
   15854:	str	r0, [fp, #-68]	; 0xffffffbc
   15858:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1585c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   15860:	cmp	r2, r3
   15864:	bne	15870 <_start@@Base+0x31b8>
   15868:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1586c:	b	15974 <_start@@Base+0x32bc>
   15870:	ldr	r2, [fp, #-68]	; 0xffffffbc
   15874:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15878:	cmp	r2, r3
   1587c:	bne	1589c <_start@@Base+0x31e4>
   15880:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15884:	add	r3, r3, #4
   15888:	str	r3, [fp, #-24]	; 0xffffffe8
   1588c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15890:	ldr	r3, [r3]
   15894:	cmp	r3, #0
   15898:	bne	1581c <_start@@Base+0x3164>
   1589c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   158a0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   158a4:	cmp	r2, r3
   158a8:	bne	158c8 <_start@@Base+0x3210>
   158ac:	mov	r3, #23
   158b0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   158b4:	ldr	r1, [fp, #-68]	; 0xffffffbc
   158b8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   158bc:	bl	33258 <flatcc_json_parser_set_error@@Base>
   158c0:	mov	r3, r0
   158c4:	b	15974 <_start@@Base+0x32bc>
   158c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   158cc:	add	r2, r3, #1
   158d0:	str	r2, [fp, #-28]	; 0xffffffe4
   158d4:	cmp	r3, #0
   158d8:	beq	15908 <_start@@Base+0x3250>
   158dc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   158e0:	ldr	r3, [r3, #12]
   158e4:	cmp	r3, #0
   158e8:	beq	15908 <_start@@Base+0x3250>
   158ec:	mov	r3, #14
   158f0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   158f4:	ldr	r1, [fp, #-68]	; 0xffffffbc
   158f8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   158fc:	bl	33258 <flatcc_json_parser_set_error@@Base>
   15900:	mov	r3, r0
   15904:	b	15974 <_start@@Base+0x32bc>
   15908:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1590c:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   15910:	sub	r1, fp, #44	; 0x2c
   15914:	str	r1, [sp, #8]
   15918:	strd	r2, [sp]
   1591c:	mov	r3, r0
   15920:	ldr	r2, [fp, #-72]	; 0xffffffb8
   15924:	ldr	r1, [fp, #-68]	; 0xffffffbc
   15928:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1592c:	bl	14370 <_start@@Base+0x1cb8>
   15930:	mov	r2, r0
   15934:	ldr	r3, [fp, #-72]	; 0xffffffb8
   15938:	cmp	r3, r2
   1593c:	bne	15948 <_start@@Base+0x3290>
   15940:	ldr	r3, [fp, #-72]	; 0xffffffb8
   15944:	b	15974 <_start@@Base+0x32bc>
   15948:	ldr	r3, [fp, #4]
   1594c:	ldrd	r0, [r3]
   15950:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   15954:	adds	r4, r0, r2
   15958:	adc	r5, r1, r3
   1595c:	ldr	r3, [fp, #4]
   15960:	strd	r4, [r3]
   15964:	ldr	r3, [fp, #-60]	; 0xffffffc4
   15968:	cmp	r3, #0
   1596c:	bne	15814 <_start@@Base+0x315c>
   15970:	ldr	r3, [fp, #-68]	; 0xffffffbc
   15974:	mov	r0, r3
   15978:	sub	sp, fp, #16
   1597c:	ldrd	r4, [sp]
   15980:	ldr	r6, [sp, #8]
   15984:	ldr	fp, [sp, #12]
   15988:	add	sp, sp, #16
   1598c:	pop	{pc}		; (ldr pc, [sp], #4)
   15990:	str	r4, [sp, #-12]!
   15994:	str	fp, [sp, #4]
   15998:	str	lr, [sp, #8]
   1599c:	add	fp, sp, #8
   159a0:	sub	sp, sp, #68	; 0x44
   159a4:	str	r0, [fp, #-48]	; 0xffffffd0
   159a8:	str	r1, [fp, #-52]	; 0xffffffcc
   159ac:	str	r2, [fp, #-56]	; 0xffffffc8
   159b0:	str	r3, [fp, #-60]	; 0xffffffc4
   159b4:	mov	r3, #0
   159b8:	str	r3, [fp, #-28]	; 0xffffffe4
   159bc:	mov	r3, #0
   159c0:	str	r3, [fp, #-20]	; 0xffffffec
   159c4:	ldr	r3, [fp, #4]
   159c8:	mov	r2, #0
   159cc:	str	r2, [r3]
   159d0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   159d4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   159d8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   159dc:	bl	13a00 <_start@@Base+0x1348>
   159e0:	str	r0, [fp, #-52]	; 0xffffffcc
   159e4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   159e8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   159ec:	cmp	r2, r3
   159f0:	bne	159fc <_start@@Base+0x3344>
   159f4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   159f8:	b	15b58 <_start@@Base+0x34a0>
   159fc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   15a00:	str	r3, [fp, #-16]
   15a04:	ldr	r3, [fp, #-16]
   15a08:	ldr	r4, [r3]
   15a0c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15a10:	str	r3, [fp, #-24]	; 0xffffffe8
   15a14:	sub	r2, fp, #40	; 0x28
   15a18:	sub	r3, fp, #44	; 0x2c
   15a1c:	str	r3, [sp, #4]
   15a20:	sub	r3, fp, #36	; 0x24
   15a24:	str	r3, [sp]
   15a28:	mov	r3, r2
   15a2c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15a30:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15a34:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15a38:	blx	r4
   15a3c:	str	r0, [fp, #-52]	; 0xffffffcc
   15a40:	ldr	r2, [fp, #-52]	; 0xffffffcc
   15a44:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15a48:	cmp	r2, r3
   15a4c:	bne	15a58 <_start@@Base+0x33a0>
   15a50:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15a54:	b	15b58 <_start@@Base+0x34a0>
   15a58:	ldr	r2, [fp, #-52]	; 0xffffffcc
   15a5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15a60:	cmp	r2, r3
   15a64:	bne	15a84 <_start@@Base+0x33cc>
   15a68:	ldr	r3, [fp, #-16]
   15a6c:	add	r3, r3, #4
   15a70:	str	r3, [fp, #-16]
   15a74:	ldr	r3, [fp, #-16]
   15a78:	ldr	r3, [r3]
   15a7c:	cmp	r3, #0
   15a80:	bne	15a04 <_start@@Base+0x334c>
   15a84:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15a88:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15a8c:	cmp	r2, r3
   15a90:	bne	15ab0 <_start@@Base+0x33f8>
   15a94:	mov	r3, #23
   15a98:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15a9c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15aa0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15aa4:	bl	33258 <flatcc_json_parser_set_error@@Base>
   15aa8:	mov	r3, r0
   15aac:	b	15b58 <_start@@Base+0x34a0>
   15ab0:	ldr	r3, [fp, #-20]	; 0xffffffec
   15ab4:	add	r2, r3, #1
   15ab8:	str	r2, [fp, #-20]	; 0xffffffec
   15abc:	cmp	r3, #0
   15ac0:	beq	15af0 <_start@@Base+0x3438>
   15ac4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15ac8:	ldr	r3, [r3, #12]
   15acc:	cmp	r3, #0
   15ad0:	beq	15af0 <_start@@Base+0x3438>
   15ad4:	mov	r3, #14
   15ad8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15adc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15ae0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15ae4:	bl	33258 <flatcc_json_parser_set_error@@Base>
   15ae8:	mov	r3, r0
   15aec:	b	15b58 <_start@@Base+0x34a0>
   15af0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15af4:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   15af8:	sub	r1, fp, #28
   15afc:	str	r1, [sp, #8]
   15b00:	strd	r2, [sp]
   15b04:	mov	r3, r0
   15b08:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15b0c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15b10:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15b14:	bl	14430 <_start@@Base+0x1d78>
   15b18:	mov	r2, r0
   15b1c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15b20:	cmp	r3, r2
   15b24:	bne	15b30 <_start@@Base+0x3478>
   15b28:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15b2c:	b	15b58 <_start@@Base+0x34a0>
   15b30:	ldr	r3, [fp, #4]
   15b34:	ldr	r2, [r3]
   15b38:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15b3c:	add	r2, r2, r3
   15b40:	ldr	r3, [fp, #4]
   15b44:	str	r2, [r3]
   15b48:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15b4c:	cmp	r3, #0
   15b50:	bne	159fc <_start@@Base+0x3344>
   15b54:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15b58:	mov	r0, r3
   15b5c:	sub	sp, fp, #8
   15b60:	ldr	r4, [sp]
   15b64:	ldr	fp, [sp, #4]
   15b68:	add	sp, sp, #8
   15b6c:	pop	{pc}		; (ldr pc, [sp], #4)
   15b70:	str	r4, [sp, #-12]!
   15b74:	str	fp, [sp, #4]
   15b78:	str	lr, [sp, #8]
   15b7c:	add	fp, sp, #8
   15b80:	sub	sp, sp, #68	; 0x44
   15b84:	str	r0, [fp, #-48]	; 0xffffffd0
   15b88:	str	r1, [fp, #-52]	; 0xffffffcc
   15b8c:	str	r2, [fp, #-56]	; 0xffffffc8
   15b90:	str	r3, [fp, #-60]	; 0xffffffc4
   15b94:	mov	r3, #0
   15b98:	strh	r3, [fp, #-26]	; 0xffffffe6
   15b9c:	mov	r3, #0
   15ba0:	str	r3, [fp, #-20]	; 0xffffffec
   15ba4:	ldr	r3, [fp, #4]
   15ba8:	mov	r2, #0
   15bac:	strh	r2, [r3]
   15bb0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15bb4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15bb8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15bbc:	bl	13a00 <_start@@Base+0x1348>
   15bc0:	str	r0, [fp, #-52]	; 0xffffffcc
   15bc4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   15bc8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15bcc:	cmp	r2, r3
   15bd0:	bne	15bdc <_start@@Base+0x3524>
   15bd4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15bd8:	b	15d48 <_start@@Base+0x3690>
   15bdc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   15be0:	str	r3, [fp, #-16]
   15be4:	ldr	r3, [fp, #-16]
   15be8:	ldr	r4, [r3]
   15bec:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15bf0:	str	r3, [fp, #-24]	; 0xffffffe8
   15bf4:	sub	r2, fp, #40	; 0x28
   15bf8:	sub	r3, fp, #44	; 0x2c
   15bfc:	str	r3, [sp, #4]
   15c00:	sub	r3, fp, #36	; 0x24
   15c04:	str	r3, [sp]
   15c08:	mov	r3, r2
   15c0c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15c10:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15c14:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15c18:	blx	r4
   15c1c:	str	r0, [fp, #-52]	; 0xffffffcc
   15c20:	ldr	r2, [fp, #-52]	; 0xffffffcc
   15c24:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15c28:	cmp	r2, r3
   15c2c:	bne	15c38 <_start@@Base+0x3580>
   15c30:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15c34:	b	15d48 <_start@@Base+0x3690>
   15c38:	ldr	r2, [fp, #-52]	; 0xffffffcc
   15c3c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15c40:	cmp	r2, r3
   15c44:	bne	15c64 <_start@@Base+0x35ac>
   15c48:	ldr	r3, [fp, #-16]
   15c4c:	add	r3, r3, #4
   15c50:	str	r3, [fp, #-16]
   15c54:	ldr	r3, [fp, #-16]
   15c58:	ldr	r3, [r3]
   15c5c:	cmp	r3, #0
   15c60:	bne	15be4 <_start@@Base+0x352c>
   15c64:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15c68:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15c6c:	cmp	r2, r3
   15c70:	bne	15c90 <_start@@Base+0x35d8>
   15c74:	mov	r3, #23
   15c78:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15c7c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15c80:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15c84:	bl	33258 <flatcc_json_parser_set_error@@Base>
   15c88:	mov	r3, r0
   15c8c:	b	15d48 <_start@@Base+0x3690>
   15c90:	ldr	r3, [fp, #-20]	; 0xffffffec
   15c94:	add	r2, r3, #1
   15c98:	str	r2, [fp, #-20]	; 0xffffffec
   15c9c:	cmp	r3, #0
   15ca0:	beq	15cd0 <_start@@Base+0x3618>
   15ca4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15ca8:	ldr	r3, [r3, #12]
   15cac:	cmp	r3, #0
   15cb0:	beq	15cd0 <_start@@Base+0x3618>
   15cb4:	mov	r3, #14
   15cb8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15cbc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15cc0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15cc4:	bl	33258 <flatcc_json_parser_set_error@@Base>
   15cc8:	mov	r3, r0
   15ccc:	b	15d48 <_start@@Base+0x3690>
   15cd0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15cd4:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   15cd8:	sub	r1, fp, #26
   15cdc:	str	r1, [sp, #8]
   15ce0:	strd	r2, [sp]
   15ce4:	mov	r3, r0
   15ce8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15cec:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15cf0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15cf4:	bl	144f8 <_start@@Base+0x1e40>
   15cf8:	mov	r2, r0
   15cfc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15d00:	cmp	r3, r2
   15d04:	bne	15d10 <_start@@Base+0x3658>
   15d08:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15d0c:	b	15d48 <_start@@Base+0x3690>
   15d10:	ldr	r3, [fp, #4]
   15d14:	ldrsh	r3, [r3]
   15d18:	uxth	r2, r3
   15d1c:	ldrsh	r3, [fp, #-26]	; 0xffffffe6
   15d20:	uxth	r3, r3
   15d24:	add	r3, r2, r3
   15d28:	uxth	r3, r3
   15d2c:	sxth	r2, r3
   15d30:	ldr	r3, [fp, #4]
   15d34:	strh	r2, [r3]
   15d38:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15d3c:	cmp	r3, #0
   15d40:	bne	15bdc <_start@@Base+0x3524>
   15d44:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15d48:	mov	r0, r3
   15d4c:	sub	sp, fp, #8
   15d50:	ldr	r4, [sp]
   15d54:	ldr	fp, [sp, #4]
   15d58:	add	sp, sp, #8
   15d5c:	pop	{pc}		; (ldr pc, [sp], #4)
   15d60:	str	r4, [sp, #-12]!
   15d64:	str	fp, [sp, #4]
   15d68:	str	lr, [sp, #8]
   15d6c:	add	fp, sp, #8
   15d70:	sub	sp, sp, #68	; 0x44
   15d74:	str	r0, [fp, #-48]	; 0xffffffd0
   15d78:	str	r1, [fp, #-52]	; 0xffffffcc
   15d7c:	str	r2, [fp, #-56]	; 0xffffffc8
   15d80:	str	r3, [fp, #-60]	; 0xffffffc4
   15d84:	mov	r3, #0
   15d88:	strb	r3, [fp, #-25]	; 0xffffffe7
   15d8c:	mov	r3, #0
   15d90:	str	r3, [fp, #-20]	; 0xffffffec
   15d94:	ldr	r3, [fp, #4]
   15d98:	mov	r2, #0
   15d9c:	strb	r2, [r3]
   15da0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15da4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15da8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15dac:	bl	13a00 <_start@@Base+0x1348>
   15db0:	str	r0, [fp, #-52]	; 0xffffffcc
   15db4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   15db8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15dbc:	cmp	r2, r3
   15dc0:	bne	15dcc <_start@@Base+0x3714>
   15dc4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15dc8:	b	15f38 <_start@@Base+0x3880>
   15dcc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   15dd0:	str	r3, [fp, #-16]
   15dd4:	ldr	r3, [fp, #-16]
   15dd8:	ldr	r4, [r3]
   15ddc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15de0:	str	r3, [fp, #-24]	; 0xffffffe8
   15de4:	sub	r2, fp, #40	; 0x28
   15de8:	sub	r3, fp, #44	; 0x2c
   15dec:	str	r3, [sp, #4]
   15df0:	sub	r3, fp, #36	; 0x24
   15df4:	str	r3, [sp]
   15df8:	mov	r3, r2
   15dfc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15e00:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15e04:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15e08:	blx	r4
   15e0c:	str	r0, [fp, #-52]	; 0xffffffcc
   15e10:	ldr	r2, [fp, #-52]	; 0xffffffcc
   15e14:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15e18:	cmp	r2, r3
   15e1c:	bne	15e28 <_start@@Base+0x3770>
   15e20:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15e24:	b	15f38 <_start@@Base+0x3880>
   15e28:	ldr	r2, [fp, #-52]	; 0xffffffcc
   15e2c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15e30:	cmp	r2, r3
   15e34:	bne	15e54 <_start@@Base+0x379c>
   15e38:	ldr	r3, [fp, #-16]
   15e3c:	add	r3, r3, #4
   15e40:	str	r3, [fp, #-16]
   15e44:	ldr	r3, [fp, #-16]
   15e48:	ldr	r3, [r3]
   15e4c:	cmp	r3, #0
   15e50:	bne	15dd4 <_start@@Base+0x371c>
   15e54:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15e58:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15e5c:	cmp	r2, r3
   15e60:	bne	15e80 <_start@@Base+0x37c8>
   15e64:	mov	r3, #23
   15e68:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15e6c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15e70:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15e74:	bl	33258 <flatcc_json_parser_set_error@@Base>
   15e78:	mov	r3, r0
   15e7c:	b	15f38 <_start@@Base+0x3880>
   15e80:	ldr	r3, [fp, #-20]	; 0xffffffec
   15e84:	add	r2, r3, #1
   15e88:	str	r2, [fp, #-20]	; 0xffffffec
   15e8c:	cmp	r3, #0
   15e90:	beq	15ec0 <_start@@Base+0x3808>
   15e94:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15e98:	ldr	r3, [r3, #12]
   15e9c:	cmp	r3, #0
   15ea0:	beq	15ec0 <_start@@Base+0x3808>
   15ea4:	mov	r3, #14
   15ea8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15eac:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15eb0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15eb4:	bl	33258 <flatcc_json_parser_set_error@@Base>
   15eb8:	mov	r3, r0
   15ebc:	b	15f38 <_start@@Base+0x3880>
   15ec0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15ec4:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   15ec8:	sub	r1, fp, #25
   15ecc:	str	r1, [sp, #8]
   15ed0:	strd	r2, [sp]
   15ed4:	mov	r3, r0
   15ed8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15edc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15ee0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15ee4:	bl	145c4 <_start@@Base+0x1f0c>
   15ee8:	mov	r2, r0
   15eec:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15ef0:	cmp	r3, r2
   15ef4:	bne	15f00 <_start@@Base+0x3848>
   15ef8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15efc:	b	15f38 <_start@@Base+0x3880>
   15f00:	ldr	r3, [fp, #4]
   15f04:	ldrsb	r3, [r3]
   15f08:	uxtb	r2, r3
   15f0c:	ldrsb	r3, [fp, #-25]	; 0xffffffe7
   15f10:	uxtb	r3, r3
   15f14:	add	r3, r2, r3
   15f18:	uxtb	r3, r3
   15f1c:	sxtb	r2, r3
   15f20:	ldr	r3, [fp, #4]
   15f24:	strb	r2, [r3]
   15f28:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15f2c:	cmp	r3, #0
   15f30:	bne	15dcc <_start@@Base+0x3714>
   15f34:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15f38:	mov	r0, r3
   15f3c:	sub	sp, fp, #8
   15f40:	ldr	r4, [sp]
   15f44:	ldr	fp, [sp, #4]
   15f48:	add	sp, sp, #8
   15f4c:	pop	{pc}		; (ldr pc, [sp], #4)
   15f50:	str	r4, [sp, #-12]!
   15f54:	str	fp, [sp, #4]
   15f58:	str	lr, [sp, #8]
   15f5c:	add	fp, sp, #8
   15f60:	sub	sp, sp, #68	; 0x44
   15f64:	str	r0, [fp, #-48]	; 0xffffffd0
   15f68:	str	r1, [fp, #-52]	; 0xffffffcc
   15f6c:	str	r2, [fp, #-56]	; 0xffffffc8
   15f70:	str	r3, [fp, #-60]	; 0xffffffc4
   15f74:	mov	r3, #0
   15f78:	strb	r3, [fp, #-25]	; 0xffffffe7
   15f7c:	mov	r3, #0
   15f80:	str	r3, [fp, #-20]	; 0xffffffec
   15f84:	ldr	r3, [fp, #4]
   15f88:	mov	r2, #0
   15f8c:	strb	r2, [r3]
   15f90:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15f94:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15f98:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15f9c:	bl	13a00 <_start@@Base+0x1348>
   15fa0:	str	r0, [fp, #-52]	; 0xffffffcc
   15fa4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   15fa8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15fac:	cmp	r2, r3
   15fb0:	bne	15fbc <_start@@Base+0x3904>
   15fb4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15fb8:	b	1611c <_start@@Base+0x3a64>
   15fbc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   15fc0:	str	r3, [fp, #-16]
   15fc4:	ldr	r3, [fp, #-16]
   15fc8:	ldr	r4, [r3]
   15fcc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15fd0:	str	r3, [fp, #-24]	; 0xffffffe8
   15fd4:	sub	r2, fp, #40	; 0x28
   15fd8:	sub	r3, fp, #44	; 0x2c
   15fdc:	str	r3, [sp, #4]
   15fe0:	sub	r3, fp, #36	; 0x24
   15fe4:	str	r3, [sp]
   15fe8:	mov	r3, r2
   15fec:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15ff0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15ff4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15ff8:	blx	r4
   15ffc:	str	r0, [fp, #-52]	; 0xffffffcc
   16000:	ldr	r2, [fp, #-52]	; 0xffffffcc
   16004:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16008:	cmp	r2, r3
   1600c:	bne	16018 <_start@@Base+0x3960>
   16010:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16014:	b	1611c <_start@@Base+0x3a64>
   16018:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1601c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16020:	cmp	r2, r3
   16024:	bne	16044 <_start@@Base+0x398c>
   16028:	ldr	r3, [fp, #-16]
   1602c:	add	r3, r3, #4
   16030:	str	r3, [fp, #-16]
   16034:	ldr	r3, [fp, #-16]
   16038:	ldr	r3, [r3]
   1603c:	cmp	r3, #0
   16040:	bne	15fc4 <_start@@Base+0x390c>
   16044:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16048:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1604c:	cmp	r2, r3
   16050:	bne	16070 <_start@@Base+0x39b8>
   16054:	mov	r3, #23
   16058:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1605c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   16060:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16064:	bl	33258 <flatcc_json_parser_set_error@@Base>
   16068:	mov	r3, r0
   1606c:	b	1611c <_start@@Base+0x3a64>
   16070:	ldr	r3, [fp, #-20]	; 0xffffffec
   16074:	add	r2, r3, #1
   16078:	str	r2, [fp, #-20]	; 0xffffffec
   1607c:	cmp	r3, #0
   16080:	beq	160b0 <_start@@Base+0x39f8>
   16084:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16088:	ldr	r3, [r3, #12]
   1608c:	cmp	r3, #0
   16090:	beq	160b0 <_start@@Base+0x39f8>
   16094:	mov	r3, #14
   16098:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1609c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   160a0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   160a4:	bl	33258 <flatcc_json_parser_set_error@@Base>
   160a8:	mov	r3, r0
   160ac:	b	1611c <_start@@Base+0x3a64>
   160b0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   160b4:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   160b8:	sub	r1, fp, #25
   160bc:	str	r1, [sp, #8]
   160c0:	strd	r2, [sp]
   160c4:	mov	r3, r0
   160c8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   160cc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   160d0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   160d4:	bl	14110 <_start@@Base+0x1a58>
   160d8:	mov	r2, r0
   160dc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   160e0:	cmp	r3, r2
   160e4:	bne	160f0 <_start@@Base+0x3a38>
   160e8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   160ec:	b	1611c <_start@@Base+0x3a64>
   160f0:	ldr	r3, [fp, #4]
   160f4:	ldrb	r2, [r3]
   160f8:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   160fc:	add	r3, r2, r3
   16100:	uxtb	r2, r3
   16104:	ldr	r3, [fp, #4]
   16108:	strb	r2, [r3]
   1610c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16110:	cmp	r3, #0
   16114:	bne	15fbc <_start@@Base+0x3904>
   16118:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1611c:	mov	r0, r3
   16120:	sub	sp, fp, #8
   16124:	ldr	r4, [sp]
   16128:	ldr	fp, [sp, #4]
   1612c:	add	sp, sp, #8
   16130:	pop	{pc}		; (ldr pc, [sp], #4)
   16134:	str	r4, [sp, #-12]!
   16138:	str	fp, [sp, #4]
   1613c:	str	lr, [sp, #8]
   16140:	add	fp, sp, #8
   16144:	sub	sp, sp, #68	; 0x44
   16148:	str	r0, [fp, #-48]	; 0xffffffd0
   1614c:	str	r1, [fp, #-52]	; 0xffffffcc
   16150:	str	r2, [fp, #-56]	; 0xffffffc8
   16154:	str	r3, [fp, #-60]	; 0xffffffc4
   16158:	mov	r3, #0
   1615c:	str	r3, [fp, #-28]	; 0xffffffe4
   16160:	mov	r3, #0
   16164:	str	r3, [fp, #-20]	; 0xffffffec
   16168:	ldr	r3, [fp, #4]
   1616c:	mov	r2, #0
   16170:	str	r2, [r3]
   16174:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16178:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1617c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16180:	bl	13a00 <_start@@Base+0x1348>
   16184:	str	r0, [fp, #-52]	; 0xffffffcc
   16188:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1618c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16190:	cmp	r2, r3
   16194:	bne	161a0 <_start@@Base+0x3ae8>
   16198:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1619c:	b	162fc <_start@@Base+0x3c44>
   161a0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   161a4:	str	r3, [fp, #-16]
   161a8:	ldr	r3, [fp, #-16]
   161ac:	ldr	r4, [r3]
   161b0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   161b4:	str	r3, [fp, #-24]	; 0xffffffe8
   161b8:	sub	r2, fp, #40	; 0x28
   161bc:	sub	r3, fp, #44	; 0x2c
   161c0:	str	r3, [sp, #4]
   161c4:	sub	r3, fp, #36	; 0x24
   161c8:	str	r3, [sp]
   161cc:	mov	r3, r2
   161d0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   161d4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   161d8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   161dc:	blx	r4
   161e0:	str	r0, [fp, #-52]	; 0xffffffcc
   161e4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   161e8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   161ec:	cmp	r2, r3
   161f0:	bne	161fc <_start@@Base+0x3b44>
   161f4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   161f8:	b	162fc <_start@@Base+0x3c44>
   161fc:	ldr	r2, [fp, #-52]	; 0xffffffcc
   16200:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16204:	cmp	r2, r3
   16208:	bne	16228 <_start@@Base+0x3b70>
   1620c:	ldr	r3, [fp, #-16]
   16210:	add	r3, r3, #4
   16214:	str	r3, [fp, #-16]
   16218:	ldr	r3, [fp, #-16]
   1621c:	ldr	r3, [r3]
   16220:	cmp	r3, #0
   16224:	bne	161a8 <_start@@Base+0x3af0>
   16228:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1622c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16230:	cmp	r2, r3
   16234:	bne	16254 <_start@@Base+0x3b9c>
   16238:	mov	r3, #23
   1623c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16240:	ldr	r1, [fp, #-52]	; 0xffffffcc
   16244:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16248:	bl	33258 <flatcc_json_parser_set_error@@Base>
   1624c:	mov	r3, r0
   16250:	b	162fc <_start@@Base+0x3c44>
   16254:	ldr	r3, [fp, #-20]	; 0xffffffec
   16258:	add	r2, r3, #1
   1625c:	str	r2, [fp, #-20]	; 0xffffffec
   16260:	cmp	r3, #0
   16264:	beq	16294 <_start@@Base+0x3bdc>
   16268:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1626c:	ldr	r3, [r3, #12]
   16270:	cmp	r3, #0
   16274:	beq	16294 <_start@@Base+0x3bdc>
   16278:	mov	r3, #14
   1627c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16280:	ldr	r1, [fp, #-52]	; 0xffffffcc
   16284:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16288:	bl	33258 <flatcc_json_parser_set_error@@Base>
   1628c:	mov	r3, r0
   16290:	b	162fc <_start@@Base+0x3c44>
   16294:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16298:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1629c:	sub	r1, fp, #28
   162a0:	str	r1, [sp, #8]
   162a4:	strd	r2, [sp]
   162a8:	mov	r3, r0
   162ac:	ldr	r2, [fp, #-56]	; 0xffffffc8
   162b0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   162b4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   162b8:	bl	14688 <_start@@Base+0x1fd0>
   162bc:	mov	r2, r0
   162c0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   162c4:	cmp	r3, r2
   162c8:	bne	162d4 <_start@@Base+0x3c1c>
   162cc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   162d0:	b	162fc <_start@@Base+0x3c44>
   162d4:	ldr	r3, [fp, #4]
   162d8:	vldr	s14, [r3]
   162dc:	vldr	s15, [fp, #-28]	; 0xffffffe4
   162e0:	vadd.f32	s15, s14, s15
   162e4:	ldr	r3, [fp, #4]
   162e8:	vstr	s15, [r3]
   162ec:	ldr	r3, [fp, #-44]	; 0xffffffd4
   162f0:	cmp	r3, #0
   162f4:	bne	161a0 <_start@@Base+0x3ae8>
   162f8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   162fc:	mov	r0, r3
   16300:	sub	sp, fp, #8
   16304:	ldr	r4, [sp]
   16308:	ldr	fp, [sp, #4]
   1630c:	add	sp, sp, #8
   16310:	pop	{pc}		; (ldr pc, [sp], #4)
   16314:	str	r4, [sp, #-12]!
   16318:	str	fp, [sp, #4]
   1631c:	str	lr, [sp, #8]
   16320:	add	fp, sp, #8
   16324:	sub	sp, sp, #76	; 0x4c
   16328:	str	r0, [fp, #-56]	; 0xffffffc8
   1632c:	str	r1, [fp, #-60]	; 0xffffffc4
   16330:	str	r2, [fp, #-64]	; 0xffffffc0
   16334:	str	r3, [fp, #-68]	; 0xffffffbc
   16338:	mov	r2, #0
   1633c:	mov	r3, #0
   16340:	strd	r2, [fp, #-36]	; 0xffffffdc
   16344:	mov	r3, #0
   16348:	str	r3, [fp, #-20]	; 0xffffffec
   1634c:	ldr	r1, [fp, #4]
   16350:	mov	r2, #0
   16354:	mov	r3, #0
   16358:	strd	r2, [r1]
   1635c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   16360:	ldr	r1, [fp, #-60]	; 0xffffffc4
   16364:	ldr	r0, [fp, #-56]	; 0xffffffc8
   16368:	bl	13a00 <_start@@Base+0x1348>
   1636c:	str	r0, [fp, #-60]	; 0xffffffc4
   16370:	ldr	r2, [fp, #-60]	; 0xffffffc4
   16374:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16378:	cmp	r2, r3
   1637c:	bne	16388 <_start@@Base+0x3cd0>
   16380:	ldr	r3, [fp, #-60]	; 0xffffffc4
   16384:	b	164e4 <_start@@Base+0x3e2c>
   16388:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1638c:	str	r3, [fp, #-16]
   16390:	ldr	r3, [fp, #-16]
   16394:	ldr	r4, [r3]
   16398:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1639c:	str	r3, [fp, #-24]	; 0xffffffe8
   163a0:	sub	r2, fp, #48	; 0x30
   163a4:	sub	r3, fp, #52	; 0x34
   163a8:	str	r3, [sp, #4]
   163ac:	sub	r3, fp, #44	; 0x2c
   163b0:	str	r3, [sp]
   163b4:	mov	r3, r2
   163b8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   163bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   163c0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   163c4:	blx	r4
   163c8:	str	r0, [fp, #-60]	; 0xffffffc4
   163cc:	ldr	r2, [fp, #-60]	; 0xffffffc4
   163d0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   163d4:	cmp	r2, r3
   163d8:	bne	163e4 <_start@@Base+0x3d2c>
   163dc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   163e0:	b	164e4 <_start@@Base+0x3e2c>
   163e4:	ldr	r2, [fp, #-60]	; 0xffffffc4
   163e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   163ec:	cmp	r2, r3
   163f0:	bne	16410 <_start@@Base+0x3d58>
   163f4:	ldr	r3, [fp, #-16]
   163f8:	add	r3, r3, #4
   163fc:	str	r3, [fp, #-16]
   16400:	ldr	r3, [fp, #-16]
   16404:	ldr	r3, [r3]
   16408:	cmp	r3, #0
   1640c:	bne	16390 <_start@@Base+0x3cd8>
   16410:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16414:	ldr	r3, [fp, #-60]	; 0xffffffc4
   16418:	cmp	r2, r3
   1641c:	bne	1643c <_start@@Base+0x3d84>
   16420:	mov	r3, #23
   16424:	ldr	r2, [fp, #-64]	; 0xffffffc0
   16428:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1642c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   16430:	bl	33258 <flatcc_json_parser_set_error@@Base>
   16434:	mov	r3, r0
   16438:	b	164e4 <_start@@Base+0x3e2c>
   1643c:	ldr	r3, [fp, #-20]	; 0xffffffec
   16440:	add	r2, r3, #1
   16444:	str	r2, [fp, #-20]	; 0xffffffec
   16448:	cmp	r3, #0
   1644c:	beq	1647c <_start@@Base+0x3dc4>
   16450:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16454:	ldr	r3, [r3, #12]
   16458:	cmp	r3, #0
   1645c:	beq	1647c <_start@@Base+0x3dc4>
   16460:	mov	r3, #14
   16464:	ldr	r2, [fp, #-64]	; 0xffffffc0
   16468:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1646c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   16470:	bl	33258 <flatcc_json_parser_set_error@@Base>
   16474:	mov	r3, r0
   16478:	b	164e4 <_start@@Base+0x3e2c>
   1647c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16480:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   16484:	sub	r1, fp, #36	; 0x24
   16488:	str	r1, [sp, #8]
   1648c:	strd	r2, [sp]
   16490:	mov	r3, r0
   16494:	ldr	r2, [fp, #-64]	; 0xffffffc0
   16498:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1649c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   164a0:	bl	146f4 <_start@@Base+0x203c>
   164a4:	mov	r2, r0
   164a8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   164ac:	cmp	r3, r2
   164b0:	bne	164bc <_start@@Base+0x3e04>
   164b4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   164b8:	b	164e4 <_start@@Base+0x3e2c>
   164bc:	ldr	r3, [fp, #4]
   164c0:	vldr	d6, [r3]
   164c4:	vldr	d7, [fp, #-36]	; 0xffffffdc
   164c8:	vadd.f64	d7, d6, d7
   164cc:	ldr	r3, [fp, #4]
   164d0:	vstr	d7, [r3]
   164d4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   164d8:	cmp	r3, #0
   164dc:	bne	16388 <_start@@Base+0x3cd0>
   164e0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   164e4:	mov	r0, r3
   164e8:	sub	sp, fp, #8
   164ec:	ldr	r4, [sp]
   164f0:	ldr	fp, [sp, #4]
   164f4:	add	sp, sp, #8
   164f8:	pop	{pc}		; (ldr pc, [sp], #4)
   164fc:	strd	r4, [sp, #-24]!	; 0xffffffe8
   16500:	strd	r6, [sp, #8]
   16504:	str	fp, [sp, #16]
   16508:	str	lr, [sp, #20]
   1650c:	add	fp, sp, #20
   16510:	sub	sp, sp, #48	; 0x30
   16514:	str	r0, [fp, #-48]	; 0xffffffd0
   16518:	str	r1, [fp, #-52]	; 0xffffffcc
   1651c:	str	r2, [fp, #-56]	; 0xffffffc8
   16520:	str	r3, [fp, #-60]	; 0xffffffc4
   16524:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16528:	str	r3, [fp, #-24]	; 0xffffffe8
   1652c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   16530:	ldr	r0, [fp, #-52]	; 0xffffffcc
   16534:	bl	13928 <_start@@Base+0x1270>
   16538:	strd	r0, [fp, #-36]	; 0xffffffdc
   1653c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   16540:	mov	r0, #0
   16544:	mvn	r1, #255	; 0xff
   16548:	and	r6, r2, r0
   1654c:	and	r7, r3, r1
   16550:	add	r3, pc, #360	; 0x168
   16554:	ldrd	r2, [r3]
   16558:	cmp	r7, r3
   1655c:	cmpeq	r6, r2
   16560:	bne	165bc <_start@@Base+0x3f04>
   16564:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16568:	str	r3, [fp, #-40]	; 0xffffffd8
   1656c:	ldr	r3, [fp, #8]
   16570:	str	r3, [sp]
   16574:	mov	r3, #3
   16578:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1657c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   16580:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16584:	bl	3403c <flatcc_json_parser_match_constant@@Base>
   16588:	str	r0, [fp, #-52]	; 0xffffffcc
   1658c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   16590:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16594:	cmp	r2, r3
   16598:	beq	165c4 <_start@@Base+0x3f0c>
   1659c:	ldr	r1, [fp, #4]
   165a0:	mov	r2, #17
   165a4:	mov	r3, #0
   165a8:	strd	r2, [r1]
   165ac:	ldr	r3, [fp, #-60]	; 0xffffffc4
   165b0:	mov	r2, #0
   165b4:	str	r2, [r3]
   165b8:	b	1669c <_start@@Base+0x3fe4>
   165bc:	nop	{0}
   165c0:	b	165c8 <_start@@Base+0x3f10>
   165c4:	nop	{0}
   165c8:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   165cc:	add	r1, pc, #244	; 0xf4
   165d0:	ldrd	r0, [r1]
   165d4:	cmp	r3, r1
   165d8:	cmpeq	r2, r0
   165dc:	bne	16694 <_start@@Base+0x3fdc>
   165e0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   165e4:	add	r3, r3, #8
   165e8:	str	r3, [fp, #-52]	; 0xffffffcc
   165ec:	ldr	r1, [fp, #-56]	; 0xffffffc8
   165f0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   165f4:	bl	13928 <_start@@Base+0x1270>
   165f8:	strd	r0, [fp, #-36]	; 0xffffffdc
   165fc:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   16600:	mov	r0, #0
   16604:	mov	r1, #0
   16608:	movt	r1, #65535	; 0xffff
   1660c:	and	r4, r2, r0
   16610:	and	r5, r3, r1
   16614:	mov	r2, #0
   16618:	mov	r3, #0
   1661c:	movt	r3, #24940	; 0x616c
   16620:	cmp	r5, r3
   16624:	cmpeq	r4, r2
   16628:	bne	1668c <_start@@Base+0x3fd4>
   1662c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16630:	str	r3, [fp, #-40]	; 0xffffffd8
   16634:	ldr	r3, [fp, #8]
   16638:	str	r3, [sp]
   1663c:	mov	r3, #2
   16640:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16644:	ldr	r1, [fp, #-40]	; 0xffffffd8
   16648:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1664c:	bl	3403c <flatcc_json_parser_match_constant@@Base>
   16650:	str	r0, [fp, #-52]	; 0xffffffcc
   16654:	ldr	r2, [fp, #-52]	; 0xffffffcc
   16658:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1665c:	cmp	r2, r3
   16660:	beq	16684 <_start@@Base+0x3fcc>
   16664:	ldr	r1, [fp, #4]
   16668:	mov	r2, #0
   1666c:	mov	r3, #0
   16670:	strd	r2, [r1]
   16674:	ldr	r3, [fp, #-60]	; 0xffffffc4
   16678:	mov	r2, #0
   1667c:	str	r2, [r3]
   16680:	b	1669c <_start@@Base+0x3fe4>
   16684:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16688:	b	166a0 <_start@@Base+0x3fe8>
   1668c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16690:	b	166a0 <_start@@Base+0x3fe8>
   16694:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16698:	b	166a0 <_start@@Base+0x3fe8>
   1669c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   166a0:	mov	r0, r3
   166a4:	sub	sp, fp, #20
   166a8:	ldrd	r4, [sp]
   166ac:	ldrd	r6, [sp, #8]
   166b0:	ldr	fp, [sp, #16]
   166b4:	add	sp, sp, #20
   166b8:	pop	{pc}		; (ldr pc, [sp], #4)
   166bc:	nop	{0}
   166c0:	andeq	r0, r0, r0
   166c4:	strbtmi	r6, [pc], -r0, lsl #30
   166c8:	strbvc	r6, [r4, #-1366]!	; 0xfffffaaa
   166cc:	stmdbmi	lr!, {r2, r3, r5, r6, r8, r9, sp, lr}^
   166d0:	str	fp, [sp, #-8]!
   166d4:	str	lr, [sp, #4]
   166d8:	add	fp, sp, #4
   166dc:	sub	sp, sp, #24
   166e0:	str	r0, [fp, #-16]
   166e4:	str	r1, [fp, #-20]	; 0xffffffec
   166e8:	str	r2, [fp, #-24]	; 0xffffffe8
   166ec:	str	r3, [fp, #-28]	; 0xffffffe4
   166f0:	sub	r3, fp, #8
   166f4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   166f8:	ldr	r1, [fp, #-20]	; 0xffffffec
   166fc:	ldr	r0, [fp, #-16]
   16700:	bl	13a6c <_start@@Base+0x13b4>
   16704:	str	r0, [fp, #-20]	; 0xffffffec
   16708:	b	16738 <_start@@Base+0x4080>
   1670c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16710:	ldr	r1, [fp, #-20]	; 0xffffffec
   16714:	ldr	r0, [fp, #-16]
   16718:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1671c:	str	r0, [fp, #-20]	; 0xffffffec
   16720:	sub	r3, fp, #8
   16724:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16728:	ldr	r1, [fp, #-20]	; 0xffffffec
   1672c:	ldr	r0, [fp, #-16]
   16730:	bl	13b60 <_start@@Base+0x14a8>
   16734:	str	r0, [fp, #-20]	; 0xffffffec
   16738:	ldr	r3, [fp, #-8]
   1673c:	cmp	r3, #0
   16740:	bne	1670c <_start@@Base+0x4054>
   16744:	ldr	r3, [fp, #-20]	; 0xffffffec
   16748:	mov	r0, r3
   1674c:	sub	sp, fp, #4
   16750:	ldr	fp, [sp]
   16754:	add	sp, sp, #4
   16758:	pop	{pc}		; (ldr pc, [sp], #4)
   1675c:	str	fp, [sp, #-8]!
   16760:	str	lr, [sp, #4]
   16764:	add	fp, sp, #4
   16768:	sub	sp, sp, #24
   1676c:	str	r0, [fp, #-16]
   16770:	str	r1, [fp, #-20]	; 0xffffffec
   16774:	str	r2, [fp, #-24]	; 0xffffffe8
   16778:	str	r3, [fp, #-28]	; 0xffffffe4
   1677c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16780:	mov	r2, #0
   16784:	str	r2, [r3]
   16788:	ldr	r3, [fp, #-16]
   1678c:	ldr	r3, [r3]
   16790:	mov	r2, #1
   16794:	mov	r1, #0
   16798:	mov	r0, r3
   1679c:	bl	28f94 <flatcc_builder_start_struct@@Base>
   167a0:	str	r0, [fp, #-8]
   167a4:	ldr	r3, [fp, #-8]
   167a8:	cmp	r3, #0
   167ac:	beq	1680c <_start@@Base+0x4154>
   167b0:	ldr	r3, [fp, #-8]
   167b4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   167b8:	ldr	r1, [fp, #-20]	; 0xffffffec
   167bc:	ldr	r0, [fp, #-16]
   167c0:	bl	166d0 <_start@@Base+0x4018>
   167c4:	str	r0, [fp, #-20]	; 0xffffffec
   167c8:	ldr	r2, [fp, #-20]	; 0xffffffec
   167cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   167d0:	cmp	r2, r3
   167d4:	beq	16814 <_start@@Base+0x415c>
   167d8:	ldr	r3, [fp, #-16]
   167dc:	ldr	r3, [r3]
   167e0:	mov	r0, r3
   167e4:	bl	29040 <flatcc_builder_end_struct@@Base>
   167e8:	mov	r2, r0
   167ec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   167f0:	str	r2, [r3]
   167f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   167f8:	ldr	r3, [r3]
   167fc:	cmp	r3, #0
   16800:	beq	16814 <_start@@Base+0x415c>
   16804:	ldr	r3, [fp, #-20]	; 0xffffffec
   16808:	b	16830 <_start@@Base+0x4178>
   1680c:	nop	{0}
   16810:	b	16818 <_start@@Base+0x4160>
   16814:	nop	{0}
   16818:	mov	r3, #33	; 0x21
   1681c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16820:	ldr	r1, [fp, #-20]	; 0xffffffec
   16824:	ldr	r0, [fp, #-16]
   16828:	bl	33258 <flatcc_json_parser_set_error@@Base>
   1682c:	mov	r3, r0
   16830:	mov	r0, r3
   16834:	sub	sp, fp, #4
   16838:	ldr	fp, [sp]
   1683c:	add	sp, sp, #4
   16840:	pop	{pc}		; (ldr pc, [sp], #4)
   16844:	push	{fp}		; (str fp, [sp, #-4]!)
   16848:	add	fp, sp, #0
   1684c:	sub	sp, sp, #20
   16850:	str	r0, [fp, #-8]
   16854:	str	r1, [fp, #-12]
   16858:	str	r2, [fp, #-16]
   1685c:	str	r3, [fp, #-20]	; 0xffffffec
   16860:	ldr	r3, [fp, #-12]
   16864:	mov	r0, r3
   16868:	add	sp, fp, #0
   1686c:	pop	{fp}		; (ldr fp, [sp], #4)
   16870:	bx	lr
   16874:	push	{fp}		; (str fp, [sp, #-4]!)
   16878:	add	fp, sp, #0
   1687c:	sub	sp, sp, #20
   16880:	str	r0, [fp, #-8]
   16884:	str	r1, [fp, #-12]
   16888:	str	r2, [fp, #-16]
   1688c:	str	r3, [fp, #-20]	; 0xffffffec
   16890:	ldr	r3, [fp, #-12]
   16894:	mov	r0, r3
   16898:	add	sp, fp, #0
   1689c:	pop	{fp}		; (ldr fp, [sp], #4)
   168a0:	bx	lr
   168a4:	push	{fp}		; (str fp, [sp, #-4]!)
   168a8:	add	fp, sp, #0
   168ac:	sub	sp, sp, #20
   168b0:	str	r0, [fp, #-8]
   168b4:	str	r1, [fp, #-12]
   168b8:	str	r2, [fp, #-16]
   168bc:	str	r3, [fp, #-20]	; 0xffffffec
   168c0:	ldr	r3, [fp, #-12]
   168c4:	mov	r0, r3
   168c8:	add	sp, fp, #0
   168cc:	pop	{fp}		; (ldr fp, [sp], #4)
   168d0:	bx	lr
   168d4:	push	{fp}		; (str fp, [sp, #-4]!)
   168d8:	add	fp, sp, #0
   168dc:	sub	sp, sp, #20
   168e0:	str	r0, [fp, #-8]
   168e4:	str	r1, [fp, #-12]
   168e8:	str	r2, [fp, #-16]
   168ec:	str	r3, [fp, #-20]	; 0xffffffec
   168f0:	ldr	r3, [fp, #-12]
   168f4:	mov	r0, r3
   168f8:	add	sp, fp, #0
   168fc:	pop	{fp}		; (ldr fp, [sp], #4)
   16900:	bx	lr
   16904:	push	{fp}		; (str fp, [sp, #-4]!)
   16908:	add	fp, sp, #0
   1690c:	sub	sp, sp, #20
   16910:	str	r0, [fp, #-8]
   16914:	str	r1, [fp, #-12]
   16918:	str	r2, [fp, #-16]
   1691c:	str	r3, [fp, #-20]	; 0xffffffec
   16920:	ldr	r3, [fp, #-12]
   16924:	mov	r0, r3
   16928:	add	sp, fp, #0
   1692c:	pop	{fp}		; (ldr fp, [sp], #4)
   16930:	bx	lr
   16934:	strd	r4, [sp, #-16]!
   16938:	str	fp, [sp, #8]
   1693c:	str	lr, [sp, #12]
   16940:	add	fp, sp, #12
   16944:	sub	sp, sp, #48	; 0x30
   16948:	str	r0, [fp, #-40]	; 0xffffffd8
   1694c:	str	r1, [fp, #-44]	; 0xffffffd4
   16950:	str	r2, [fp, #-48]	; 0xffffffd0
   16954:	str	r3, [fp, #-52]	; 0xffffffcc
   16958:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1695c:	str	r3, [fp, #-16]
   16960:	ldr	r1, [fp, #-48]	; 0xffffffd0
   16964:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16968:	bl	13928 <_start@@Base+0x1270>
   1696c:	strd	r0, [fp, #-28]	; 0xffffffe4
   16970:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   16974:	add	r1, pc, #220	; 0xdc
   16978:	ldrd	r0, [r1]
   1697c:	cmp	r3, r1
   16980:	cmpeq	r2, r0
   16984:	bne	16a3c <_start@@Base+0x4384>
   16988:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1698c:	add	r3, r3, #8
   16990:	str	r3, [fp, #-44]	; 0xffffffd4
   16994:	ldr	r1, [fp, #-48]	; 0xffffffd0
   16998:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1699c:	bl	13928 <_start@@Base+0x1270>
   169a0:	strd	r0, [fp, #-28]	; 0xffffffe4
   169a4:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   169a8:	mov	r0, #0
   169ac:	mvn	r1, #255	; 0xff
   169b0:	and	r4, r2, r0
   169b4:	and	r5, r3, r1
   169b8:	add	r3, pc, #160	; 0xa0
   169bc:	ldrd	r2, [r3]
   169c0:	cmp	r5, r3
   169c4:	cmpeq	r4, r2
   169c8:	bne	16a34 <_start@@Base+0x437c>
   169cc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   169d0:	str	r3, [fp, #-32]	; 0xffffffe0
   169d4:	mov	r3, #3
   169d8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   169dc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   169e0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   169e4:	bl	1397c <_start@@Base+0x12c4>
   169e8:	str	r0, [fp, #-44]	; 0xffffffd4
   169ec:	ldr	r2, [fp, #-44]	; 0xffffffd4
   169f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   169f4:	cmp	r2, r3
   169f8:	beq	16a2c <_start@@Base+0x4374>
   169fc:	ldr	r3, [fp, #8]
   16a00:	str	r3, [sp, #4]
   16a04:	ldr	r3, [fp, #4]
   16a08:	str	r3, [sp]
   16a0c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16a10:	ldr	r2, [fp, #-48]	; 0xffffffd0
   16a14:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16a18:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16a1c:	bl	164fc <_start@@Base+0x3e44>
   16a20:	str	r0, [fp, #-44]	; 0xffffffd4
   16a24:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16a28:	b	16a40 <_start@@Base+0x4388>
   16a2c:	ldr	r3, [fp, #-16]
   16a30:	b	16a40 <_start@@Base+0x4388>
   16a34:	ldr	r3, [fp, #-16]
   16a38:	b	16a40 <_start@@Base+0x4388>
   16a3c:	ldr	r3, [fp, #-16]
   16a40:	mov	r0, r3
   16a44:	sub	sp, fp, #12
   16a48:	ldrd	r4, [sp]
   16a4c:	ldr	fp, [sp, #8]
   16a50:	add	sp, sp, #12
   16a54:	pop	{pc}		; (ldr pc, [sp], #4)
   16a58:	stmdbmi	lr!, {r2, r3, r5, r6, r8, r9, sp, lr}^
   16a5c:	ldrbtmi	r6, [r2], -sp, ror #30
   16a60:	andeq	r0, r0, r0
   16a64:	strbvc	r6, [r4, #-1280]!	; 0xfffffb00
   16a68:	strd	r4, [sp, #-16]!
   16a6c:	str	fp, [sp, #8]
   16a70:	str	lr, [sp, #12]
   16a74:	add	fp, sp, #12
   16a78:	sub	sp, sp, #48	; 0x30
   16a7c:	str	r0, [fp, #-40]	; 0xffffffd8
   16a80:	str	r1, [fp, #-44]	; 0xffffffd4
   16a84:	str	r2, [fp, #-48]	; 0xffffffd0
   16a88:	str	r3, [fp, #-52]	; 0xffffffcc
   16a8c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16a90:	str	r3, [fp, #-16]
   16a94:	ldr	r1, [fp, #-48]	; 0xffffffd0
   16a98:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16a9c:	bl	13928 <_start@@Base+0x1270>
   16aa0:	strd	r0, [fp, #-28]	; 0xffffffe4
   16aa4:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   16aa8:	add	r1, pc, #392	; 0x188
   16aac:	ldrd	r0, [r1]
   16ab0:	cmp	r3, r1
   16ab4:	cmpeq	r2, r0
   16ab8:	bne	16c1c <_start@@Base+0x4564>
   16abc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16ac0:	add	r3, r3, #8
   16ac4:	str	r3, [fp, #-44]	; 0xffffffd4
   16ac8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   16acc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16ad0:	bl	13928 <_start@@Base+0x1270>
   16ad4:	strd	r0, [fp, #-28]	; 0xffffffe4
   16ad8:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   16adc:	add	r1, pc, #348	; 0x15c
   16ae0:	ldrd	r0, [r1]
   16ae4:	cmp	r3, r1
   16ae8:	cmpeq	r2, r0
   16aec:	bne	16c14 <_start@@Base+0x455c>
   16af0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16af4:	add	r3, r3, #8
   16af8:	str	r3, [fp, #-44]	; 0xffffffd4
   16afc:	ldr	r1, [fp, #-48]	; 0xffffffd0
   16b00:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16b04:	bl	13928 <_start@@Base+0x1270>
   16b08:	strd	r0, [fp, #-28]	; 0xffffffe4
   16b0c:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   16b10:	add	r1, pc, #304	; 0x130
   16b14:	ldrd	r0, [r1]
   16b18:	cmp	r3, r1
   16b1c:	cmpeq	r2, r0
   16b20:	bne	16c0c <_start@@Base+0x4554>
   16b24:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16b28:	add	r3, r3, #8
   16b2c:	str	r3, [fp, #-44]	; 0xffffffd4
   16b30:	ldr	r1, [fp, #-48]	; 0xffffffd0
   16b34:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16b38:	bl	13928 <_start@@Base+0x1270>
   16b3c:	strd	r0, [fp, #-28]	; 0xffffffe4
   16b40:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   16b44:	add	r1, pc, #260	; 0x104
   16b48:	ldrd	r0, [r1]
   16b4c:	cmp	r3, r1
   16b50:	cmpeq	r2, r0
   16b54:	bne	16c04 <_start@@Base+0x454c>
   16b58:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16b5c:	add	r3, r3, #8
   16b60:	str	r3, [fp, #-44]	; 0xffffffd4
   16b64:	ldr	r1, [fp, #-48]	; 0xffffffd0
   16b68:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16b6c:	bl	13928 <_start@@Base+0x1270>
   16b70:	strd	r0, [fp, #-28]	; 0xffffffe4
   16b74:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   16b78:	mov	r0, #0
   16b7c:	mov	r1, #-16777216	; 0xff000000
   16b80:	and	r4, r2, r0
   16b84:	and	r5, r3, r1
   16b88:	cmp	r5, #1694498816	; 0x65000000
   16b8c:	cmpeq	r4, #0
   16b90:	bne	16bfc <_start@@Base+0x4544>
   16b94:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16b98:	str	r3, [fp, #-32]	; 0xffffffe0
   16b9c:	mov	r3, #1
   16ba0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   16ba4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   16ba8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16bac:	bl	1397c <_start@@Base+0x12c4>
   16bb0:	str	r0, [fp, #-44]	; 0xffffffd4
   16bb4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   16bb8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16bbc:	cmp	r2, r3
   16bc0:	beq	16bf4 <_start@@Base+0x453c>
   16bc4:	ldr	r3, [fp, #8]
   16bc8:	str	r3, [sp, #4]
   16bcc:	ldr	r3, [fp, #4]
   16bd0:	str	r3, [sp]
   16bd4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16bd8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   16bdc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16be0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16be4:	bl	164fc <_start@@Base+0x3e44>
   16be8:	str	r0, [fp, #-44]	; 0xffffffd4
   16bec:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16bf0:	b	16c20 <_start@@Base+0x4568>
   16bf4:	ldr	r3, [fp, #-16]
   16bf8:	b	16c20 <_start@@Base+0x4568>
   16bfc:	ldr	r3, [fp, #-16]
   16c00:	b	16c20 <_start@@Base+0x4568>
   16c04:	ldr	r3, [fp, #-16]
   16c08:	b	16c20 <_start@@Base+0x4568>
   16c0c:	ldr	r3, [fp, #-16]
   16c10:	b	16c20 <_start@@Base+0x4568>
   16c14:	ldr	r3, [fp, #-16]
   16c18:	b	16c20 <_start@@Base+0x4568>
   16c1c:	ldr	r3, [fp, #-16]
   16c20:	mov	r0, r3
   16c24:	sub	sp, fp, #12
   16c28:	ldrd	r4, [sp]
   16c2c:	ldr	fp, [sp, #8]
   16c30:	add	sp, sp, #12
   16c34:	pop	{pc}		; (ldr pc, [sp], #4)
   16c38:	stclvs	14, cr2, [r5, #-316]!	; 0xfffffec4
   16c3c:	ldclmi	7, cr4, [r9, #-388]!	; 0xfffffe7c
   16c40:	cdpmi	13, 6, cr6, cr1, cr5, {3}
   16c44:	strbtvc	r6, [r8], #-1394	; 0xfffffa8e
   16c48:	strvs	r4, [lr, #-1650]!	; 0xfffff98e
   16c4c:	cmnpl	r0, #-1073741800	; 0xc0000018
   16c50:	cmnvs	ip, #100, 10	; 0x19000000
   16c54:	svcvs	0x006d496e
   16c58:	push	{fp}		; (str fp, [sp, #-4]!)
   16c5c:	add	fp, sp, #0
   16c60:	sub	sp, sp, #20
   16c64:	str	r0, [fp, #-8]
   16c68:	str	r1, [fp, #-12]
   16c6c:	str	r2, [fp, #-16]
   16c70:	str	r3, [fp, #-20]	; 0xffffffec
   16c74:	ldr	r3, [fp, #-12]
   16c78:	mov	r0, r3
   16c7c:	add	sp, fp, #0
   16c80:	pop	{fp}		; (ldr fp, [sp], #4)
   16c84:	bx	lr
   16c88:	push	{fp}		; (str fp, [sp, #-4]!)
   16c8c:	add	fp, sp, #0
   16c90:	sub	sp, sp, #20
   16c94:	str	r0, [fp, #-8]
   16c98:	str	r1, [fp, #-12]
   16c9c:	str	r2, [fp, #-16]
   16ca0:	str	r3, [fp, #-20]	; 0xffffffec
   16ca4:	ldr	r3, [fp, #-12]
   16ca8:	mov	r0, r3
   16cac:	add	sp, fp, #0
   16cb0:	pop	{fp}		; (ldr fp, [sp], #4)
   16cb4:	bx	lr
   16cb8:	push	{fp}		; (str fp, [sp, #-4]!)
   16cbc:	add	fp, sp, #0
   16cc0:	sub	sp, sp, #20
   16cc4:	str	r0, [fp, #-8]
   16cc8:	str	r1, [fp, #-12]
   16ccc:	str	r2, [fp, #-16]
   16cd0:	str	r3, [fp, #-20]	; 0xffffffec
   16cd4:	ldr	r3, [fp, #-12]
   16cd8:	mov	r0, r3
   16cdc:	add	sp, fp, #0
   16ce0:	pop	{fp}		; (ldr fp, [sp], #4)
   16ce4:	bx	lr
   16ce8:	push	{fp}		; (str fp, [sp, #-4]!)
   16cec:	add	fp, sp, #0
   16cf0:	sub	sp, sp, #20
   16cf4:	str	r0, [fp, #-8]
   16cf8:	str	r1, [fp, #-12]
   16cfc:	str	r2, [fp, #-16]
   16d00:	str	r3, [fp, #-20]	; 0xffffffec
   16d04:	ldr	r3, [fp, #-12]
   16d08:	mov	r0, r3
   16d0c:	add	sp, fp, #0
   16d10:	pop	{fp}		; (ldr fp, [sp], #4)
   16d14:	bx	lr
   16d18:	push	{fp}		; (str fp, [sp, #-4]!)
   16d1c:	add	fp, sp, #0
   16d20:	sub	sp, sp, #20
   16d24:	str	r0, [fp, #-8]
   16d28:	str	r1, [fp, #-12]
   16d2c:	str	r2, [fp, #-16]
   16d30:	str	r3, [fp, #-20]	; 0xffffffec
   16d34:	ldr	r3, [fp, #-12]
   16d38:	mov	r0, r3
   16d3c:	add	sp, fp, #0
   16d40:	pop	{fp}		; (ldr fp, [sp], #4)
   16d44:	bx	lr
   16d48:	strd	r4, [sp, #-16]!
   16d4c:	str	fp, [sp, #8]
   16d50:	str	lr, [sp, #12]
   16d54:	add	fp, sp, #12
   16d58:	sub	sp, sp, #48	; 0x30
   16d5c:	str	r0, [fp, #-40]	; 0xffffffd8
   16d60:	str	r1, [fp, #-44]	; 0xffffffd4
   16d64:	str	r2, [fp, #-48]	; 0xffffffd0
   16d68:	str	r3, [fp, #-52]	; 0xffffffcc
   16d6c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16d70:	str	r3, [fp, #-16]
   16d74:	ldr	r1, [fp, #-48]	; 0xffffffd0
   16d78:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16d7c:	bl	13928 <_start@@Base+0x1270>
   16d80:	strd	r0, [fp, #-28]	; 0xffffffe4
   16d84:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   16d88:	add	r1, pc, #224	; 0xe0
   16d8c:	ldrd	r0, [r1]
   16d90:	cmp	r3, r1
   16d94:	cmpeq	r2, r0
   16d98:	bne	16e50 <_start@@Base+0x4798>
   16d9c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16da0:	add	r3, r3, #8
   16da4:	str	r3, [fp, #-44]	; 0xffffffd4
   16da8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   16dac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16db0:	bl	13928 <_start@@Base+0x1270>
   16db4:	strd	r0, [fp, #-28]	; 0xffffffe4
   16db8:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   16dbc:	mov	r0, #0
   16dc0:	mvn	r1, #255	; 0xff
   16dc4:	and	r4, r2, r0
   16dc8:	and	r5, r3, r1
   16dcc:	add	r3, pc, #164	; 0xa4
   16dd0:	ldrd	r2, [r3]
   16dd4:	cmp	r5, r3
   16dd8:	cmpeq	r4, r2
   16ddc:	bne	16e48 <_start@@Base+0x4790>
   16de0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16de4:	str	r3, [fp, #-32]	; 0xffffffe0
   16de8:	mov	r3, #3
   16dec:	ldr	r2, [fp, #-48]	; 0xffffffd0
   16df0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   16df4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16df8:	bl	1397c <_start@@Base+0x12c4>
   16dfc:	str	r0, [fp, #-44]	; 0xffffffd4
   16e00:	ldr	r2, [fp, #-44]	; 0xffffffd4
   16e04:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16e08:	cmp	r2, r3
   16e0c:	beq	16e40 <_start@@Base+0x4788>
   16e10:	ldr	r3, [fp, #8]
   16e14:	str	r3, [sp, #4]
   16e18:	ldr	r3, [fp, #4]
   16e1c:	str	r3, [sp]
   16e20:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16e24:	ldr	r2, [fp, #-48]	; 0xffffffd0
   16e28:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16e2c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16e30:	bl	164fc <_start@@Base+0x3e44>
   16e34:	str	r0, [fp, #-44]	; 0xffffffd4
   16e38:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16e3c:	b	16e54 <_start@@Base+0x479c>
   16e40:	ldr	r3, [fp, #-16]
   16e44:	b	16e54 <_start@@Base+0x479c>
   16e48:	ldr	r3, [fp, #-16]
   16e4c:	b	16e54 <_start@@Base+0x479c>
   16e50:	ldr	r3, [fp, #-16]
   16e54:	mov	r0, r3
   16e58:	sub	sp, fp, #12
   16e5c:	ldrd	r4, [sp]
   16e60:	ldr	fp, [sp, #8]
   16e64:	add	sp, sp, #12
   16e68:	pop	{pc}		; (ldr pc, [sp], #4)
   16e6c:	nop	{0}
   16e70:	stmdbmi	lr!, {r2, r3, r5, r6, r8, r9, sp, lr}^
   16e74:	ldrbtmi	r6, [r2], -sp, ror #30
   16e78:	andeq	r0, r0, r0
   16e7c:	strbvc	r6, [r4, #-1280]!	; 0xfffffb00
   16e80:	strd	r4, [sp, #-16]!
   16e84:	str	fp, [sp, #8]
   16e88:	str	lr, [sp, #12]
   16e8c:	add	fp, sp, #12
   16e90:	sub	sp, sp, #48	; 0x30
   16e94:	str	r0, [fp, #-40]	; 0xffffffd8
   16e98:	str	r1, [fp, #-44]	; 0xffffffd4
   16e9c:	str	r2, [fp, #-48]	; 0xffffffd0
   16ea0:	str	r3, [fp, #-52]	; 0xffffffcc
   16ea4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16ea8:	str	r3, [fp, #-16]
   16eac:	ldr	r1, [fp, #-48]	; 0xffffffd0
   16eb0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16eb4:	bl	13928 <_start@@Base+0x1270>
   16eb8:	strd	r0, [fp, #-28]	; 0xffffffe4
   16ebc:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   16ec0:	add	r1, pc, #392	; 0x188
   16ec4:	ldrd	r0, [r1]
   16ec8:	cmp	r3, r1
   16ecc:	cmpeq	r2, r0
   16ed0:	bne	17034 <_start@@Base+0x497c>
   16ed4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16ed8:	add	r3, r3, #8
   16edc:	str	r3, [fp, #-44]	; 0xffffffd4
   16ee0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   16ee4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16ee8:	bl	13928 <_start@@Base+0x1270>
   16eec:	strd	r0, [fp, #-28]	; 0xffffffe4
   16ef0:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   16ef4:	add	r1, pc, #348	; 0x15c
   16ef8:	ldrd	r0, [r1]
   16efc:	cmp	r3, r1
   16f00:	cmpeq	r2, r0
   16f04:	bne	1702c <_start@@Base+0x4974>
   16f08:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16f0c:	add	r3, r3, #8
   16f10:	str	r3, [fp, #-44]	; 0xffffffd4
   16f14:	ldr	r1, [fp, #-48]	; 0xffffffd0
   16f18:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16f1c:	bl	13928 <_start@@Base+0x1270>
   16f20:	strd	r0, [fp, #-28]	; 0xffffffe4
   16f24:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   16f28:	add	r1, pc, #304	; 0x130
   16f2c:	ldrd	r0, [r1]
   16f30:	cmp	r3, r1
   16f34:	cmpeq	r2, r0
   16f38:	bne	17024 <_start@@Base+0x496c>
   16f3c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16f40:	add	r3, r3, #8
   16f44:	str	r3, [fp, #-44]	; 0xffffffd4
   16f48:	ldr	r1, [fp, #-48]	; 0xffffffd0
   16f4c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16f50:	bl	13928 <_start@@Base+0x1270>
   16f54:	strd	r0, [fp, #-28]	; 0xffffffe4
   16f58:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   16f5c:	add	r1, pc, #260	; 0x104
   16f60:	ldrd	r0, [r1]
   16f64:	cmp	r3, r1
   16f68:	cmpeq	r2, r0
   16f6c:	bne	1701c <_start@@Base+0x4964>
   16f70:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16f74:	add	r3, r3, #8
   16f78:	str	r3, [fp, #-44]	; 0xffffffd4
   16f7c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   16f80:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16f84:	bl	13928 <_start@@Base+0x1270>
   16f88:	strd	r0, [fp, #-28]	; 0xffffffe4
   16f8c:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   16f90:	mov	r0, #0
   16f94:	mov	r1, #-16777216	; 0xff000000
   16f98:	and	r4, r2, r0
   16f9c:	and	r5, r3, r1
   16fa0:	cmp	r5, #1694498816	; 0x65000000
   16fa4:	cmpeq	r4, #0
   16fa8:	bne	17014 <_start@@Base+0x495c>
   16fac:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16fb0:	str	r3, [fp, #-32]	; 0xffffffe0
   16fb4:	mov	r3, #1
   16fb8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   16fbc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   16fc0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16fc4:	bl	1397c <_start@@Base+0x12c4>
   16fc8:	str	r0, [fp, #-44]	; 0xffffffd4
   16fcc:	ldr	r2, [fp, #-44]	; 0xffffffd4
   16fd0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16fd4:	cmp	r2, r3
   16fd8:	beq	1700c <_start@@Base+0x4954>
   16fdc:	ldr	r3, [fp, #8]
   16fe0:	str	r3, [sp, #4]
   16fe4:	ldr	r3, [fp, #4]
   16fe8:	str	r3, [sp]
   16fec:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16ff0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   16ff4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16ff8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16ffc:	bl	164fc <_start@@Base+0x3e44>
   17000:	str	r0, [fp, #-44]	; 0xffffffd4
   17004:	ldr	r3, [fp, #-44]	; 0xffffffd4
   17008:	b	17038 <_start@@Base+0x4980>
   1700c:	ldr	r3, [fp, #-16]
   17010:	b	17038 <_start@@Base+0x4980>
   17014:	ldr	r3, [fp, #-16]
   17018:	b	17038 <_start@@Base+0x4980>
   1701c:	ldr	r3, [fp, #-16]
   17020:	b	17038 <_start@@Base+0x4980>
   17024:	ldr	r3, [fp, #-16]
   17028:	b	17038 <_start@@Base+0x4980>
   1702c:	ldr	r3, [fp, #-16]
   17030:	b	17038 <_start@@Base+0x4980>
   17034:	ldr	r3, [fp, #-16]
   17038:	mov	r0, r3
   1703c:	sub	sp, fp, #12
   17040:	ldrd	r4, [sp]
   17044:	ldr	fp, [sp, #8]
   17048:	add	sp, sp, #12
   1704c:	pop	{pc}		; (ldr pc, [sp], #4)
   17050:	stclvs	14, cr2, [r5, #-316]!	; 0xfffffec4
   17054:	ldclmi	7, cr4, [r9, #-388]!	; 0xfffffe7c
   17058:	cdpmi	13, 6, cr6, cr1, cr5, {3}
   1705c:	strbtvc	r6, [r8], #-1394	; 0xfffffa8e
   17060:	strvs	r4, [lr, #-1650]!	; 0xfffff98e
   17064:	cmnpl	r0, #-1073741800	; 0xc0000018
   17068:	cmnvs	ip, #100, 10	; 0x19000000
   1706c:	svcvs	0x006d496e
   17070:	push	{fp}		; (str fp, [sp, #-4]!)
   17074:	add	fp, sp, #0
   17078:	sub	sp, sp, #20
   1707c:	str	r0, [fp, #-8]
   17080:	str	r1, [fp, #-12]
   17084:	str	r2, [fp, #-16]
   17088:	str	r3, [fp, #-20]	; 0xffffffec
   1708c:	ldr	r3, [fp, #-12]
   17090:	mov	r0, r3
   17094:	add	sp, fp, #0
   17098:	pop	{fp}		; (ldr fp, [sp], #4)
   1709c:	bx	lr
   170a0:	push	{fp}		; (str fp, [sp, #-4]!)
   170a4:	add	fp, sp, #0
   170a8:	sub	sp, sp, #20
   170ac:	str	r0, [fp, #-8]
   170b0:	str	r1, [fp, #-12]
   170b4:	str	r2, [fp, #-16]
   170b8:	str	r3, [fp, #-20]	; 0xffffffec
   170bc:	ldr	r3, [fp, #-12]
   170c0:	mov	r0, r3
   170c4:	add	sp, fp, #0
   170c8:	pop	{fp}		; (ldr fp, [sp], #4)
   170cc:	bx	lr
   170d0:	push	{fp}		; (str fp, [sp, #-4]!)
   170d4:	add	fp, sp, #0
   170d8:	sub	sp, sp, #20
   170dc:	str	r0, [fp, #-8]
   170e0:	str	r1, [fp, #-12]
   170e4:	str	r2, [fp, #-16]
   170e8:	str	r3, [fp, #-20]	; 0xffffffec
   170ec:	ldr	r3, [fp, #-12]
   170f0:	mov	r0, r3
   170f4:	add	sp, fp, #0
   170f8:	pop	{fp}		; (ldr fp, [sp], #4)
   170fc:	bx	lr
   17100:	push	{fp}		; (str fp, [sp, #-4]!)
   17104:	add	fp, sp, #0
   17108:	sub	sp, sp, #20
   1710c:	str	r0, [fp, #-8]
   17110:	str	r1, [fp, #-12]
   17114:	str	r2, [fp, #-16]
   17118:	str	r3, [fp, #-20]	; 0xffffffec
   1711c:	ldr	r3, [fp, #-12]
   17120:	mov	r0, r3
   17124:	add	sp, fp, #0
   17128:	pop	{fp}		; (ldr fp, [sp], #4)
   1712c:	bx	lr
   17130:	push	{fp}		; (str fp, [sp, #-4]!)
   17134:	add	fp, sp, #0
   17138:	sub	sp, sp, #20
   1713c:	str	r0, [fp, #-8]
   17140:	str	r1, [fp, #-12]
   17144:	str	r2, [fp, #-16]
   17148:	str	r3, [fp, #-20]	; 0xffffffec
   1714c:	ldr	r3, [fp, #-12]
   17150:	mov	r0, r3
   17154:	add	sp, fp, #0
   17158:	pop	{fp}		; (ldr fp, [sp], #4)
   1715c:	bx	lr
   17160:	push	{fp}		; (str fp, [sp, #-4]!)
   17164:	add	fp, sp, #0
   17168:	sub	sp, sp, #20
   1716c:	str	r0, [fp, #-8]
   17170:	str	r1, [fp, #-12]
   17174:	str	r2, [fp, #-16]
   17178:	str	r3, [fp, #-20]	; 0xffffffec
   1717c:	ldr	r3, [fp, #-12]
   17180:	mov	r0, r3
   17184:	add	sp, fp, #0
   17188:	pop	{fp}		; (ldr fp, [sp], #4)
   1718c:	bx	lr
   17190:	push	{fp}		; (str fp, [sp, #-4]!)
   17194:	add	fp, sp, #0
   17198:	sub	sp, sp, #20
   1719c:	str	r0, [fp, #-8]
   171a0:	str	r1, [fp, #-12]
   171a4:	str	r2, [fp, #-16]
   171a8:	str	r3, [fp, #-20]	; 0xffffffec
   171ac:	ldr	r3, [fp, #-12]
   171b0:	mov	r0, r3
   171b4:	add	sp, fp, #0
   171b8:	pop	{fp}		; (ldr fp, [sp], #4)
   171bc:	bx	lr
   171c0:	str	fp, [sp, #-8]!
   171c4:	str	lr, [sp, #4]
   171c8:	add	fp, sp, #4
   171cc:	sub	sp, sp, #24
   171d0:	str	r0, [fp, #-16]
   171d4:	str	r1, [fp, #-20]	; 0xffffffec
   171d8:	str	r2, [fp, #-24]	; 0xffffffe8
   171dc:	str	r3, [fp, #-28]	; 0xffffffe4
   171e0:	sub	r3, fp, #8
   171e4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   171e8:	ldr	r1, [fp, #-20]	; 0xffffffec
   171ec:	ldr	r0, [fp, #-16]
   171f0:	bl	13a6c <_start@@Base+0x13b4>
   171f4:	str	r0, [fp, #-20]	; 0xffffffec
   171f8:	b	17228 <_start@@Base+0x4b70>
   171fc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17200:	ldr	r1, [fp, #-20]	; 0xffffffec
   17204:	ldr	r0, [fp, #-16]
   17208:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1720c:	str	r0, [fp, #-20]	; 0xffffffec
   17210:	sub	r3, fp, #8
   17214:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17218:	ldr	r1, [fp, #-20]	; 0xffffffec
   1721c:	ldr	r0, [fp, #-16]
   17220:	bl	13b60 <_start@@Base+0x14a8>
   17224:	str	r0, [fp, #-20]	; 0xffffffec
   17228:	ldr	r3, [fp, #-8]
   1722c:	cmp	r3, #0
   17230:	bne	171fc <_start@@Base+0x4b44>
   17234:	ldr	r3, [fp, #-20]	; 0xffffffec
   17238:	mov	r0, r3
   1723c:	sub	sp, fp, #4
   17240:	ldr	fp, [sp]
   17244:	add	sp, sp, #4
   17248:	pop	{pc}		; (ldr pc, [sp], #4)
   1724c:	str	fp, [sp, #-8]!
   17250:	str	lr, [sp, #4]
   17254:	add	fp, sp, #4
   17258:	sub	sp, sp, #24
   1725c:	str	r0, [fp, #-16]
   17260:	str	r1, [fp, #-20]	; 0xffffffec
   17264:	str	r2, [fp, #-24]	; 0xffffffe8
   17268:	str	r3, [fp, #-28]	; 0xffffffe4
   1726c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17270:	mov	r2, #0
   17274:	str	r2, [r3]
   17278:	ldr	r3, [fp, #-16]
   1727c:	ldr	r3, [r3]
   17280:	mov	r2, #1
   17284:	mov	r1, #0
   17288:	mov	r0, r3
   1728c:	bl	28f94 <flatcc_builder_start_struct@@Base>
   17290:	str	r0, [fp, #-8]
   17294:	ldr	r3, [fp, #-8]
   17298:	cmp	r3, #0
   1729c:	beq	172fc <_start@@Base+0x4c44>
   172a0:	ldr	r3, [fp, #-8]
   172a4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   172a8:	ldr	r1, [fp, #-20]	; 0xffffffec
   172ac:	ldr	r0, [fp, #-16]
   172b0:	bl	171c0 <_start@@Base+0x4b08>
   172b4:	str	r0, [fp, #-20]	; 0xffffffec
   172b8:	ldr	r2, [fp, #-20]	; 0xffffffec
   172bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   172c0:	cmp	r2, r3
   172c4:	beq	17304 <_start@@Base+0x4c4c>
   172c8:	ldr	r3, [fp, #-16]
   172cc:	ldr	r3, [r3]
   172d0:	mov	r0, r3
   172d4:	bl	29040 <flatcc_builder_end_struct@@Base>
   172d8:	mov	r2, r0
   172dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   172e0:	str	r2, [r3]
   172e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   172e8:	ldr	r3, [r3]
   172ec:	cmp	r3, #0
   172f0:	beq	17304 <_start@@Base+0x4c4c>
   172f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   172f8:	b	17320 <_start@@Base+0x4c68>
   172fc:	nop	{0}
   17300:	b	17308 <_start@@Base+0x4c50>
   17304:	nop	{0}
   17308:	mov	r3, #33	; 0x21
   1730c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17310:	ldr	r1, [fp, #-20]	; 0xffffffec
   17314:	ldr	r0, [fp, #-16]
   17318:	bl	33258 <flatcc_json_parser_set_error@@Base>
   1731c:	mov	r3, r0
   17320:	mov	r0, r3
   17324:	sub	sp, fp, #4
   17328:	ldr	fp, [sp]
   1732c:	add	sp, sp, #4
   17330:	pop	{pc}		; (ldr pc, [sp], #4)
   17334:	str	fp, [sp, #-8]!
   17338:	str	lr, [sp, #4]
   1733c:	add	fp, sp, #4
   17340:	sub	sp, sp, #24
   17344:	str	r0, [fp, #-16]
   17348:	str	r1, [fp, #-20]	; 0xffffffec
   1734c:	str	r2, [fp, #-24]	; 0xffffffe8
   17350:	str	r3, [fp, #-28]	; 0xffffffe4
   17354:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17358:	mov	r2, #0
   1735c:	str	r2, [r3]
   17360:	ldr	r3, [fp, #-16]
   17364:	ldr	r3, [r3]
   17368:	mov	r1, #0
   1736c:	mov	r0, r3
   17370:	bl	29dfc <flatcc_builder_start_table@@Base>
   17374:	mov	r3, r0
   17378:	cmp	r3, #0
   1737c:	bne	1742c <_start@@Base+0x4d74>
   17380:	sub	r3, fp, #8
   17384:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17388:	ldr	r1, [fp, #-20]	; 0xffffffec
   1738c:	ldr	r0, [fp, #-16]
   17390:	bl	13a6c <_start@@Base+0x13b4>
   17394:	str	r0, [fp, #-20]	; 0xffffffec
   17398:	b	173dc <_start@@Base+0x4d24>
   1739c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   173a0:	ldr	r1, [fp, #-20]	; 0xffffffec
   173a4:	ldr	r0, [fp, #-16]
   173a8:	bl	135f4 <_start@@Base+0xf3c>
   173ac:	str	r0, [fp, #-20]	; 0xffffffec
   173b0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   173b4:	ldr	r1, [fp, #-20]	; 0xffffffec
   173b8:	ldr	r0, [fp, #-16]
   173bc:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   173c0:	str	r0, [fp, #-20]	; 0xffffffec
   173c4:	sub	r3, fp, #8
   173c8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   173cc:	ldr	r1, [fp, #-20]	; 0xffffffec
   173d0:	ldr	r0, [fp, #-16]
   173d4:	bl	13b60 <_start@@Base+0x14a8>
   173d8:	str	r0, [fp, #-20]	; 0xffffffec
   173dc:	ldr	r3, [fp, #-8]
   173e0:	cmp	r3, #0
   173e4:	bne	1739c <_start@@Base+0x4ce4>
   173e8:	ldr	r3, [fp, #-16]
   173ec:	ldr	r3, [r3, #24]
   173f0:	cmp	r3, #0
   173f4:	bne	17434 <_start@@Base+0x4d7c>
   173f8:	ldr	r3, [fp, #-16]
   173fc:	ldr	r3, [r3]
   17400:	mov	r0, r3
   17404:	bl	2a9b0 <flatcc_builder_end_table@@Base>
   17408:	mov	r2, r0
   1740c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17410:	str	r2, [r3]
   17414:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17418:	ldr	r3, [r3]
   1741c:	cmp	r3, #0
   17420:	beq	1743c <_start@@Base+0x4d84>
   17424:	ldr	r3, [fp, #-20]	; 0xffffffec
   17428:	b	17458 <_start@@Base+0x4da0>
   1742c:	nop	{0}
   17430:	b	17440 <_start@@Base+0x4d88>
   17434:	nop	{0}
   17438:	b	17440 <_start@@Base+0x4d88>
   1743c:	nop	{0}
   17440:	mov	r3, #33	; 0x21
   17444:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17448:	ldr	r1, [fp, #-20]	; 0xffffffec
   1744c:	ldr	r0, [fp, #-16]
   17450:	bl	33258 <flatcc_json_parser_set_error@@Base>
   17454:	mov	r3, r0
   17458:	mov	r0, r3
   1745c:	sub	sp, fp, #4
   17460:	ldr	fp, [sp]
   17464:	add	sp, sp, #4
   17468:	pop	{pc}		; (ldr pc, [sp], #4)
   1746c:	str	fp, [sp, #-8]!
   17470:	str	lr, [sp, #4]
   17474:	add	fp, sp, #4
   17478:	sub	sp, sp, #24
   1747c:	str	r0, [fp, #-16]
   17480:	str	r1, [fp, #-20]	; 0xffffffec
   17484:	str	r2, [fp, #-24]	; 0xffffffe8
   17488:	str	r3, [fp, #-28]	; 0xffffffe4
   1748c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17490:	mov	r2, #0
   17494:	str	r2, [r3]
   17498:	ldr	r3, [fp, #-16]
   1749c:	ldr	r3, [r3]
   174a0:	mov	r1, #0
   174a4:	mov	r0, r3
   174a8:	bl	29dfc <flatcc_builder_start_table@@Base>
   174ac:	mov	r3, r0
   174b0:	cmp	r3, #0
   174b4:	bne	17564 <_start@@Base+0x4eac>
   174b8:	sub	r3, fp, #8
   174bc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   174c0:	ldr	r1, [fp, #-20]	; 0xffffffec
   174c4:	ldr	r0, [fp, #-16]
   174c8:	bl	13a6c <_start@@Base+0x13b4>
   174cc:	str	r0, [fp, #-20]	; 0xffffffec
   174d0:	b	17514 <_start@@Base+0x4e5c>
   174d4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   174d8:	ldr	r1, [fp, #-20]	; 0xffffffec
   174dc:	ldr	r0, [fp, #-16]
   174e0:	bl	135f4 <_start@@Base+0xf3c>
   174e4:	str	r0, [fp, #-20]	; 0xffffffec
   174e8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   174ec:	ldr	r1, [fp, #-20]	; 0xffffffec
   174f0:	ldr	r0, [fp, #-16]
   174f4:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   174f8:	str	r0, [fp, #-20]	; 0xffffffec
   174fc:	sub	r3, fp, #8
   17500:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17504:	ldr	r1, [fp, #-20]	; 0xffffffec
   17508:	ldr	r0, [fp, #-16]
   1750c:	bl	13b60 <_start@@Base+0x14a8>
   17510:	str	r0, [fp, #-20]	; 0xffffffec
   17514:	ldr	r3, [fp, #-8]
   17518:	cmp	r3, #0
   1751c:	bne	174d4 <_start@@Base+0x4e1c>
   17520:	ldr	r3, [fp, #-16]
   17524:	ldr	r3, [r3, #24]
   17528:	cmp	r3, #0
   1752c:	bne	1756c <_start@@Base+0x4eb4>
   17530:	ldr	r3, [fp, #-16]
   17534:	ldr	r3, [r3]
   17538:	mov	r0, r3
   1753c:	bl	2a9b0 <flatcc_builder_end_table@@Base>
   17540:	mov	r2, r0
   17544:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17548:	str	r2, [r3]
   1754c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17550:	ldr	r3, [r3]
   17554:	cmp	r3, #0
   17558:	beq	17574 <_start@@Base+0x4ebc>
   1755c:	ldr	r3, [fp, #-20]	; 0xffffffec
   17560:	b	17590 <_start@@Base+0x4ed8>
   17564:	nop	{0}
   17568:	b	17578 <_start@@Base+0x4ec0>
   1756c:	nop	{0}
   17570:	b	17578 <_start@@Base+0x4ec0>
   17574:	nop	{0}
   17578:	mov	r3, #33	; 0x21
   1757c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17580:	ldr	r1, [fp, #-20]	; 0xffffffec
   17584:	ldr	r0, [fp, #-16]
   17588:	bl	33258 <flatcc_json_parser_set_error@@Base>
   1758c:	mov	r3, r0
   17590:	mov	r0, r3
   17594:	sub	sp, fp, #4
   17598:	ldr	fp, [sp]
   1759c:	add	sp, sp, #4
   175a0:	pop	{pc}		; (ldr pc, [sp], #4)
   175a4:	str	fp, [sp, #-8]!
   175a8:	str	lr, [sp, #4]
   175ac:	add	fp, sp, #4
   175b0:	sub	sp, sp, #16
   175b4:	str	r0, [fp, #-8]
   175b8:	str	r1, [fp, #-12]
   175bc:	str	r2, [fp, #-16]
   175c0:	strb	r3, [fp, #-17]	; 0xffffffef
   175c4:	ldr	r3, [fp, #4]
   175c8:	mov	r2, #0
   175cc:	str	r2, [r3]
   175d0:	ldrb	r3, [fp, #-17]	; 0xffffffef
   175d4:	cmp	r3, #0
   175d8:	beq	175e8 <_start@@Base+0x4f30>
   175dc:	cmp	r3, #1
   175e0:	beq	17600 <_start@@Base+0x4f48>
   175e4:	b	17630 <_start@@Base+0x4f78>
   175e8:	ldr	r2, [fp, #-16]
   175ec:	ldr	r1, [fp, #-12]
   175f0:	ldr	r0, [fp, #-8]
   175f4:	bl	14768 <_start@@Base+0x20b0>
   175f8:	mov	r3, r0
   175fc:	b	176b0 <_start@@Base+0x4ff8>
   17600:	ldr	r3, [fp, #4]
   17604:	ldr	r2, [fp, #-16]
   17608:	ldr	r1, [fp, #-12]
   1760c:	ldr	r0, [fp, #-8]
   17610:	bl	17334 <_start@@Base+0x4c7c>
   17614:	str	r0, [fp, #-12]
   17618:	nop	{0}
   1761c:	ldr	r3, [fp, #-8]
   17620:	ldr	r3, [r3, #24]
   17624:	cmp	r3, #0
   17628:	beq	17680 <_start@@Base+0x4fc8>
   1762c:	b	17678 <_start@@Base+0x4fc0>
   17630:	ldr	r3, [fp, #-8]
   17634:	ldr	r3, [r3, #8]
   17638:	and	r3, r3, #1
   1763c:	cmp	r3, #0
   17640:	bne	17660 <_start@@Base+0x4fa8>
   17644:	mov	r3, #15
   17648:	ldr	r2, [fp, #-16]
   1764c:	ldr	r1, [fp, #-12]
   17650:	ldr	r0, [fp, #-8]
   17654:	bl	33258 <flatcc_json_parser_set_error@@Base>
   17658:	mov	r3, r0
   1765c:	b	176b0 <_start@@Base+0x4ff8>
   17660:	ldr	r2, [fp, #-16]
   17664:	ldr	r1, [fp, #-12]
   17668:	ldr	r0, [fp, #-8]
   1766c:	bl	34adc <flatcc_json_parser_generic_json@@Base>
   17670:	mov	r3, r0
   17674:	b	176b0 <_start@@Base+0x4ff8>
   17678:	ldr	r3, [fp, #-12]
   1767c:	b	176b0 <_start@@Base+0x4ff8>
   17680:	ldr	r3, [fp, #4]
   17684:	ldr	r3, [r3]
   17688:	cmp	r3, #0
   1768c:	bne	176ac <_start@@Base+0x4ff4>
   17690:	mov	r3, #33	; 0x21
   17694:	ldr	r2, [fp, #-16]
   17698:	ldr	r1, [fp, #-12]
   1769c:	ldr	r0, [fp, #-8]
   176a0:	bl	33258 <flatcc_json_parser_set_error@@Base>
   176a4:	mov	r3, r0
   176a8:	b	176b0 <_start@@Base+0x4ff8>
   176ac:	ldr	r3, [fp, #-12]
   176b0:	mov	r0, r3
   176b4:	sub	sp, fp, #4
   176b8:	ldr	fp, [sp]
   176bc:	add	sp, sp, #4
   176c0:	pop	{pc}		; (ldr pc, [sp], #4)
   176c4:	push	{fp}		; (str fp, [sp, #-4]!)
   176c8:	add	fp, sp, #0
   176cc:	sub	sp, sp, #12
   176d0:	mov	r3, r0
   176d4:	strb	r3, [fp, #-5]
   176d8:	ldrb	r3, [fp, #-5]
   176dc:	cmp	r3, #0
   176e0:	beq	176f0 <_start@@Base+0x5038>
   176e4:	cmp	r3, #1
   176e8:	beq	176f8 <_start@@Base+0x5040>
   176ec:	b	17700 <_start@@Base+0x5048>
   176f0:	mov	r3, #1
   176f4:	b	17704 <_start@@Base+0x504c>
   176f8:	mov	r3, #1
   176fc:	b	17704 <_start@@Base+0x504c>
   17700:	mov	r3, #0
   17704:	mov	r0, r3
   17708:	add	sp, fp, #0
   1770c:	pop	{fp}		; (ldr fp, [sp], #4)
   17710:	bx	lr
   17714:	strd	r4, [sp, #-24]!	; 0xffffffe8
   17718:	strd	r6, [sp, #8]
   1771c:	str	fp, [sp, #16]
   17720:	str	lr, [sp, #20]
   17724:	add	fp, sp, #20
   17728:	sub	sp, sp, #48	; 0x30
   1772c:	str	r0, [fp, #-48]	; 0xffffffd0
   17730:	str	r1, [fp, #-52]	; 0xffffffcc
   17734:	str	r2, [fp, #-56]	; 0xffffffc8
   17738:	str	r3, [fp, #-60]	; 0xffffffc4
   1773c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   17740:	str	r3, [fp, #-24]	; 0xffffffe8
   17744:	ldr	r1, [fp, #-56]	; 0xffffffc8
   17748:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1774c:	bl	13928 <_start@@Base+0x1270>
   17750:	strd	r0, [fp, #-36]	; 0xffffffdc
   17754:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   17758:	add	r1, pc, #416	; 0x1a0
   1775c:	ldrd	r0, [r1]
   17760:	cmp	r3, r1
   17764:	cmpeq	r2, r0
   17768:	bne	1784c <_start@@Base+0x5194>
   1776c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   17770:	add	r3, r3, #8
   17774:	str	r3, [fp, #-52]	; 0xffffffcc
   17778:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1777c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   17780:	bl	13928 <_start@@Base+0x1270>
   17784:	strd	r0, [fp, #-36]	; 0xffffffdc
   17788:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1778c:	add	r1, pc, #372	; 0x174
   17790:	ldrd	r0, [r1]
   17794:	cmp	r3, r1
   17798:	cmpeq	r2, r0
   1779c:	bne	17844 <_start@@Base+0x518c>
   177a0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   177a4:	add	r3, r3, #8
   177a8:	str	r3, [fp, #-52]	; 0xffffffcc
   177ac:	ldr	r1, [fp, #-56]	; 0xffffffc8
   177b0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   177b4:	bl	13928 <_start@@Base+0x1270>
   177b8:	strd	r0, [fp, #-36]	; 0xffffffdc
   177bc:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   177c0:	mov	r0, #0
   177c4:	mov	r1, #-16777216	; 0xff000000
   177c8:	and	r6, r2, r0
   177cc:	and	r7, r3, r1
   177d0:	cmp	r7, #1694498816	; 0x65000000
   177d4:	cmpeq	r6, #0
   177d8:	bne	1783c <_start@@Base+0x5184>
   177dc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   177e0:	str	r3, [fp, #-40]	; 0xffffffd8
   177e4:	ldr	r3, [fp, #8]
   177e8:	str	r3, [sp]
   177ec:	mov	r3, #1
   177f0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   177f4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   177f8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   177fc:	bl	3403c <flatcc_json_parser_match_constant@@Base>
   17800:	str	r0, [fp, #-52]	; 0xffffffcc
   17804:	ldr	r2, [fp, #-52]	; 0xffffffcc
   17808:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1780c:	cmp	r2, r3
   17810:	beq	17834 <_start@@Base+0x517c>
   17814:	ldr	r1, [fp, #4]
   17818:	mov	r2, #1
   1781c:	mov	r3, #0
   17820:	strd	r2, [r1]
   17824:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17828:	mov	r2, #0
   1782c:	str	r2, [r3]
   17830:	b	178dc <_start@@Base+0x5224>
   17834:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17838:	b	178e0 <_start@@Base+0x5228>
   1783c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17840:	b	178e0 <_start@@Base+0x5228>
   17844:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17848:	b	178e0 <_start@@Base+0x5228>
   1784c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   17850:	mov	r0, #0
   17854:	mvn	r1, #0
   17858:	and	r4, r2, r0
   1785c:	and	r5, r3, r1
   17860:	add	r3, pc, #168	; 0xa8
   17864:	ldrd	r2, [r3]
   17868:	cmp	r5, r3
   1786c:	cmpeq	r4, r2
   17870:	bne	178d4 <_start@@Base+0x521c>
   17874:	ldr	r3, [fp, #-52]	; 0xffffffcc
   17878:	str	r3, [fp, #-40]	; 0xffffffd8
   1787c:	ldr	r3, [fp, #8]
   17880:	str	r3, [sp]
   17884:	mov	r3, #4
   17888:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1788c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   17890:	ldr	r0, [fp, #-48]	; 0xffffffd0
   17894:	bl	3403c <flatcc_json_parser_match_constant@@Base>
   17898:	str	r0, [fp, #-52]	; 0xffffffcc
   1789c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   178a0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   178a4:	cmp	r2, r3
   178a8:	beq	178cc <_start@@Base+0x5214>
   178ac:	ldr	r1, [fp, #4]
   178b0:	mov	r2, #0
   178b4:	mov	r3, #0
   178b8:	strd	r2, [r1]
   178bc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   178c0:	mov	r2, #0
   178c4:	str	r2, [r3]
   178c8:	b	178dc <_start@@Base+0x5224>
   178cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   178d0:	b	178e0 <_start@@Base+0x5228>
   178d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   178d8:	b	178e0 <_start@@Base+0x5228>
   178dc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   178e0:	mov	r0, r3
   178e4:	sub	sp, fp, #20
   178e8:	ldrd	r4, [sp]
   178ec:	ldrd	r6, [sp, #8]
   178f0:	ldr	fp, [sp, #16]
   178f4:	add	sp, sp, #20
   178f8:	pop	{pc}		; (ldr pc, [sp], #4)
   178fc:	nop	{0}
   17900:	rsbvc	r6, r5, #116, 28	; 0x740
   17904:	stmdbmi	lr!, {r0, r5, r6, ip, lr}^
   17908:	cmnvc	r0, #-1073741800	; 0xc0000018
   1790c:	cdpmi	13, 6, cr6, cr1, cr5, {3}
   17910:	andeq	r0, r0, r0
   17914:	cdpmi	14, 4, cr4, cr15, cr5, {2}
   17918:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1791c:	strd	r6, [sp, #8]
   17920:	strd	r8, [sp, #16]
   17924:	str	fp, [sp, #24]
   17928:	str	lr, [sp, #28]
   1792c:	add	fp, sp, #28
   17930:	sub	sp, sp, #48	; 0x30
   17934:	str	r0, [fp, #-56]	; 0xffffffc8
   17938:	str	r1, [fp, #-60]	; 0xffffffc4
   1793c:	str	r2, [fp, #-64]	; 0xffffffc0
   17940:	str	r3, [fp, #-68]	; 0xffffffbc
   17944:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17948:	str	r3, [fp, #-32]	; 0xffffffe0
   1794c:	ldr	r1, [fp, #-64]	; 0xffffffc0
   17950:	ldr	r0, [fp, #-60]	; 0xffffffc4
   17954:	bl	13928 <_start@@Base+0x1270>
   17958:	strd	r0, [fp, #-44]	; 0xffffffd4
   1795c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   17960:	add	r1, pc, #472	; 0x1d8
   17964:	ldrd	r0, [r1]
   17968:	cmp	r3, r1
   1796c:	cmpeq	r2, r0
   17970:	bhi	17a04 <_start@@Base+0x534c>
   17974:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   17978:	mov	r0, #0
   1797c:	mvn	r1, #0
   17980:	and	r8, r2, r0
   17984:	and	r9, r3, r1
   17988:	add	r3, pc, #440	; 0x1b8
   1798c:	ldrd	r2, [r3]
   17990:	cmp	r9, r3
   17994:	cmpeq	r8, r2
   17998:	bne	179fc <_start@@Base+0x5344>
   1799c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   179a0:	str	r3, [fp, #-48]	; 0xffffffd0
   179a4:	ldr	r3, [fp, #8]
   179a8:	str	r3, [sp]
   179ac:	mov	r3, #4
   179b0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   179b4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   179b8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   179bc:	bl	3403c <flatcc_json_parser_match_constant@@Base>
   179c0:	str	r0, [fp, #-60]	; 0xffffffc4
   179c4:	ldr	r2, [fp, #-60]	; 0xffffffc4
   179c8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   179cc:	cmp	r2, r3
   179d0:	beq	179f4 <_start@@Base+0x533c>
   179d4:	ldr	r1, [fp, #4]
   179d8:	mvn	r2, #11
   179dc:	mvn	r3, #0
   179e0:	strd	r2, [r1]
   179e4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   179e8:	mov	r2, #1
   179ec:	str	r2, [r3]
   179f0:	b	17b1c <_start@@Base+0x5464>
   179f4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   179f8:	b	17b20 <_start@@Base+0x5468>
   179fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17a00:	b	17b20 <_start@@Base+0x5468>
   17a04:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   17a08:	mov	r0, #0
   17a0c:	mvn	r1, #0
   17a10:	and	r6, r2, r0
   17a14:	and	r7, r3, r1
   17a18:	add	r3, pc, #304	; 0x130
   17a1c:	ldrd	r2, [r3]
   17a20:	cmp	r7, r3
   17a24:	cmpeq	r6, r2
   17a28:	bne	17a8c <_start@@Base+0x53d4>
   17a2c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17a30:	str	r3, [fp, #-48]	; 0xffffffd0
   17a34:	ldr	r3, [fp, #8]
   17a38:	str	r3, [sp]
   17a3c:	mov	r3, #4
   17a40:	ldr	r2, [fp, #-64]	; 0xffffffc0
   17a44:	ldr	r1, [fp, #-48]	; 0xffffffd0
   17a48:	ldr	r0, [fp, #-56]	; 0xffffffc8
   17a4c:	bl	3403c <flatcc_json_parser_match_constant@@Base>
   17a50:	str	r0, [fp, #-60]	; 0xffffffc4
   17a54:	ldr	r2, [fp, #-60]	; 0xffffffc4
   17a58:	ldr	r3, [fp, #-48]	; 0xffffffd0
   17a5c:	cmp	r2, r3
   17a60:	beq	17a84 <_start@@Base+0x53cc>
   17a64:	ldr	r1, [fp, #4]
   17a68:	mvn	r2, #9
   17a6c:	mvn	r3, #0
   17a70:	strd	r2, [r1]
   17a74:	ldr	r3, [fp, #-68]	; 0xffffffbc
   17a78:	mov	r2, #1
   17a7c:	str	r2, [r3]
   17a80:	b	17b1c <_start@@Base+0x5464>
   17a84:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17a88:	b	17b20 <_start@@Base+0x5468>
   17a8c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   17a90:	mov	r0, #0
   17a94:	mvn	r1, #0
   17a98:	and	r4, r2, r0
   17a9c:	and	r5, r3, r1
   17aa0:	add	r3, pc, #176	; 0xb0
   17aa4:	ldrd	r2, [r3]
   17aa8:	cmp	r5, r3
   17aac:	cmpeq	r4, r2
   17ab0:	bne	17b14 <_start@@Base+0x545c>
   17ab4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17ab8:	str	r3, [fp, #-48]	; 0xffffffd0
   17abc:	ldr	r3, [fp, #8]
   17ac0:	str	r3, [sp]
   17ac4:	mov	r3, #4
   17ac8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   17acc:	ldr	r1, [fp, #-48]	; 0xffffffd0
   17ad0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   17ad4:	bl	3403c <flatcc_json_parser_match_constant@@Base>
   17ad8:	str	r0, [fp, #-60]	; 0xffffffc4
   17adc:	ldr	r2, [fp, #-60]	; 0xffffffc4
   17ae0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   17ae4:	cmp	r2, r3
   17ae8:	beq	17b0c <_start@@Base+0x5454>
   17aec:	ldr	r1, [fp, #4]
   17af0:	mvn	r2, #10
   17af4:	mvn	r3, #0
   17af8:	strd	r2, [r1]
   17afc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   17b00:	mov	r2, #1
   17b04:	str	r2, [r3]
   17b08:	b	17b1c <_start@@Base+0x5464>
   17b0c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17b10:	b	17b20 <_start@@Base+0x5468>
   17b14:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17b18:	b	17b20 <_start@@Base+0x5468>
   17b1c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17b20:	mov	r0, r3
   17b24:	sub	sp, fp, #28
   17b28:	ldrd	r4, [sp]
   17b2c:	ldrd	r6, [sp, #8]
   17b30:	ldrd	r8, [sp, #16]
   17b34:	ldr	fp, [sp, #24]
   17b38:	add	sp, sp, #28
   17b3c:	pop	{pc}		; (ldr pc, [sp], #4)
   17b40:			; <UNDEFINED> instruction: 0xffffffff
   17b44:	mcrvs	7, 3, r6, cr5, cr1, {1}
   17b48:	andeq	r0, r0, r0
   17b4c:	mcrvs	7, 3, r6, cr5, cr1, {1}
   17b50:	andeq	r0, r0, r0
   17b54:	mcrvs	7, 3, r6, cr5, cr3, {1}
   17b58:	andeq	r0, r0, r0
   17b5c:	mcrvs	7, 3, r6, cr5, cr2, {1}
   17b60:	strd	r4, [sp, #-32]!	; 0xffffffe0
   17b64:	strd	r6, [sp, #8]
   17b68:	strd	r8, [sp, #16]
   17b6c:	str	fp, [sp, #24]
   17b70:	str	lr, [sp, #28]
   17b74:	add	fp, sp, #28
   17b78:	sub	sp, sp, #56	; 0x38
   17b7c:	str	r0, [fp, #-56]	; 0xffffffc8
   17b80:	str	r1, [fp, #-60]	; 0xffffffc4
   17b84:	str	r2, [fp, #-64]	; 0xffffffc0
   17b88:	str	r3, [fp, #-68]	; 0xffffffbc
   17b8c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17b90:	str	r3, [fp, #-32]	; 0xffffffe0
   17b94:	ldr	r1, [fp, #-64]	; 0xffffffc0
   17b98:	ldr	r0, [fp, #-60]	; 0xffffffc4
   17b9c:	bl	13928 <_start@@Base+0x1270>
   17ba0:	strd	r0, [fp, #-44]	; 0xffffffd4
   17ba4:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   17ba8:	add	r1, pc, #656	; 0x290
   17bac:	ldrd	r0, [r1]
   17bb0:	cmp	r3, r1
   17bb4:	cmpeq	r2, r0
   17bb8:	bhi	17c58 <_start@@Base+0x55a0>
   17bbc:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   17bc0:	mov	r0, #0
   17bc4:	mvn	r1, #0
   17bc8:	and	ip, r2, r0
   17bcc:	str	ip, [fp, #-76]	; 0xffffffb4
   17bd0:	and	r3, r3, r1
   17bd4:	str	r3, [fp, #-72]	; 0xffffffb8
   17bd8:	add	r3, pc, #616	; 0x268
   17bdc:	ldrd	r2, [r3]
   17be0:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   17be4:	cmp	r1, r3
   17be8:	cmpeq	r0, r2
   17bec:	bne	17c50 <_start@@Base+0x5598>
   17bf0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17bf4:	str	r3, [fp, #-48]	; 0xffffffd0
   17bf8:	ldr	r3, [fp, #8]
   17bfc:	str	r3, [sp]
   17c00:	mov	r3, #4
   17c04:	ldr	r2, [fp, #-64]	; 0xffffffc0
   17c08:	ldr	r1, [fp, #-48]	; 0xffffffd0
   17c0c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   17c10:	bl	3403c <flatcc_json_parser_match_constant@@Base>
   17c14:	str	r0, [fp, #-60]	; 0xffffffc4
   17c18:	ldr	r2, [fp, #-60]	; 0xffffffc4
   17c1c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   17c20:	cmp	r2, r3
   17c24:	beq	17c48 <_start@@Base+0x5590>
   17c28:	ldr	r1, [fp, #4]
   17c2c:	mov	r2, #2
   17c30:	mov	r3, #0
   17c34:	strd	r2, [r1]
   17c38:	ldr	r3, [fp, #-68]	; 0xffffffbc
   17c3c:	mov	r2, #0
   17c40:	str	r2, [r3]
   17c44:	b	17e1c <_start@@Base+0x5764>
   17c48:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17c4c:	b	17e20 <_start@@Base+0x5768>
   17c50:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17c54:	b	17e20 <_start@@Base+0x5768>
   17c58:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   17c5c:	add	r1, pc, #492	; 0x1ec
   17c60:	ldrd	r0, [r1]
   17c64:	cmp	r3, r1
   17c68:	cmpeq	r2, r0
   17c6c:	bhi	17d00 <_start@@Base+0x5648>
   17c70:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   17c74:	mov	r0, #0
   17c78:	mvn	r1, #0
   17c7c:	and	r8, r2, r0
   17c80:	and	r9, r3, r1
   17c84:	add	r3, pc, #460	; 0x1cc
   17c88:	ldrd	r2, [r3]
   17c8c:	cmp	r9, r3
   17c90:	cmpeq	r8, r2
   17c94:	bne	17cf8 <_start@@Base+0x5640>
   17c98:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17c9c:	str	r3, [fp, #-48]	; 0xffffffd0
   17ca0:	ldr	r3, [fp, #8]
   17ca4:	str	r3, [sp]
   17ca8:	mov	r3, #4
   17cac:	ldr	r2, [fp, #-64]	; 0xffffffc0
   17cb0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   17cb4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   17cb8:	bl	3403c <flatcc_json_parser_match_constant@@Base>
   17cbc:	str	r0, [fp, #-60]	; 0xffffffc4
   17cc0:	ldr	r2, [fp, #-60]	; 0xffffffc4
   17cc4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   17cc8:	cmp	r2, r3
   17ccc:	beq	17cf0 <_start@@Base+0x5638>
   17cd0:	ldr	r1, [fp, #4]
   17cd4:	mov	r2, #42	; 0x2a
   17cd8:	mov	r3, #0
   17cdc:	strd	r2, [r1]
   17ce0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   17ce4:	mov	r2, #0
   17ce8:	str	r2, [r3]
   17cec:	b	17e1c <_start@@Base+0x5764>
   17cf0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17cf4:	b	17e20 <_start@@Base+0x5768>
   17cf8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17cfc:	b	17e20 <_start@@Base+0x5768>
   17d00:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   17d04:	mvn	r0, #255	; 0xff
   17d08:	mvn	r1, #0
   17d0c:	and	r6, r2, r0
   17d10:	and	r7, r3, r1
   17d14:	add	r3, pc, #324	; 0x144
   17d18:	ldrd	r2, [r3]
   17d1c:	cmp	r7, r3
   17d20:	cmpeq	r6, r2
   17d24:	bne	17d88 <_start@@Base+0x56d0>
   17d28:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17d2c:	str	r3, [fp, #-48]	; 0xffffffd0
   17d30:	ldr	r3, [fp, #8]
   17d34:	str	r3, [sp]
   17d38:	mov	r3, #7
   17d3c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   17d40:	ldr	r1, [fp, #-48]	; 0xffffffd0
   17d44:	ldr	r0, [fp, #-56]	; 0xffffffc8
   17d48:	bl	3403c <flatcc_json_parser_match_constant@@Base>
   17d4c:	str	r0, [fp, #-60]	; 0xffffffc4
   17d50:	ldr	r2, [fp, #-60]	; 0xffffffc4
   17d54:	ldr	r3, [fp, #-48]	; 0xffffffd0
   17d58:	cmp	r2, r3
   17d5c:	beq	17d80 <_start@@Base+0x56c8>
   17d60:	ldr	r1, [fp, #4]
   17d64:	mvn	r2, #0
   17d68:	mvn	r3, #0
   17d6c:	strd	r2, [r1]
   17d70:	ldr	r3, [fp, #-68]	; 0xffffffbc
   17d74:	mov	r2, #1
   17d78:	str	r2, [r3]
   17d7c:	b	17e1c <_start@@Base+0x5764>
   17d80:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17d84:	b	17e20 <_start@@Base+0x5768>
   17d88:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   17d8c:	mov	r0, #0
   17d90:	movt	r0, #65535	; 0xffff
   17d94:	mvn	r1, #0
   17d98:	and	r4, r2, r0
   17d9c:	and	r5, r3, r1
   17da0:	add	r3, pc, #192	; 0xc0
   17da4:	ldrd	r2, [r3]
   17da8:	cmp	r5, r3
   17dac:	cmpeq	r4, r2
   17db0:	bne	17e14 <_start@@Base+0x575c>
   17db4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17db8:	str	r3, [fp, #-48]	; 0xffffffd0
   17dbc:	ldr	r3, [fp, #8]
   17dc0:	str	r3, [sp]
   17dc4:	mov	r3, #6
   17dc8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   17dcc:	ldr	r1, [fp, #-48]	; 0xffffffd0
   17dd0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   17dd4:	bl	3403c <flatcc_json_parser_match_constant@@Base>
   17dd8:	str	r0, [fp, #-60]	; 0xffffffc4
   17ddc:	ldr	r2, [fp, #-60]	; 0xffffffc4
   17de0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   17de4:	cmp	r2, r3
   17de8:	beq	17e0c <_start@@Base+0x5754>
   17dec:	ldr	r1, [fp, #4]
   17df0:	mvn	r2, #1
   17df4:	mvn	r3, #0
   17df8:	strd	r2, [r1]
   17dfc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   17e00:	mov	r2, #1
   17e04:	str	r2, [r3]
   17e08:	b	17e1c <_start@@Base+0x5764>
   17e0c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17e10:	b	17e20 <_start@@Base+0x5768>
   17e14:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17e18:	b	17e20 <_start@@Base+0x5768>
   17e1c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17e20:	mov	r0, r3
   17e24:	sub	sp, fp, #28
   17e28:	ldrd	r4, [sp]
   17e2c:	ldrd	r6, [sp, #8]
   17e30:	ldrd	r8, [sp, #16]
   17e34:	ldr	fp, [sp, #24]
   17e38:	add	sp, sp, #28
   17e3c:	pop	{pc}		; (ldr pc, [sp], #4)
   17e40:			; <UNDEFINED> instruction: 0xffffffff
   17e44:	stmdbvs	lr!, {r0, r4, r5, sl, ip, sp, lr}^
   17e48:	andeq	r0, r0, r0
   17e4c:	stmdbvs	lr!, {r0, r4, r5, sl, ip, sp, lr}^
   17e50:	strbvs	pc, [r6, #-4095]!	; 0xfffff001	; <UNPREDICTABLE>
   17e54:	stmdbvs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
   17e58:	andeq	r0, r0, r0
   17e5c:	stmdbvs	lr!, {r1, r4, r5, sl, ip, sp, lr}^
   17e60:	strbvs	r3, [r7, #-512]!	; 0xfffffe00
   17e64:	stmdbvs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
   17e68:	strbvs	r0, [r7, #-0]!
   17e6c:	stmdbvs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
   17e70:	strd	r4, [sp, #-32]!	; 0xffffffe0
   17e74:	strd	r6, [sp, #8]
   17e78:	strd	r8, [sp, #16]
   17e7c:	str	fp, [sp, #24]
   17e80:	str	lr, [sp, #28]
   17e84:	add	fp, sp, #28
   17e88:	sub	sp, sp, #48	; 0x30
   17e8c:	str	r0, [fp, #-56]	; 0xffffffc8
   17e90:	str	r1, [fp, #-60]	; 0xffffffc4
   17e94:	str	r2, [fp, #-64]	; 0xffffffc0
   17e98:	str	r3, [fp, #-68]	; 0xffffffbc
   17e9c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17ea0:	str	r3, [fp, #-32]	; 0xffffffe0
   17ea4:	ldr	r1, [fp, #-64]	; 0xffffffc0
   17ea8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   17eac:	bl	13928 <_start@@Base+0x1270>
   17eb0:	strd	r0, [fp, #-44]	; 0xffffffd4
   17eb4:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   17eb8:	add	r1, pc, #480	; 0x1e0
   17ebc:	ldrd	r0, [r1]
   17ec0:	cmp	r3, r1
   17ec4:	cmpeq	r2, r0
   17ec8:	bhi	17f5c <_start@@Base+0x58a4>
   17ecc:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   17ed0:	mov	r0, #0
   17ed4:	mvn	r1, #0
   17ed8:	and	r8, r2, r0
   17edc:	and	r9, r3, r1
   17ee0:	add	r3, pc, #448	; 0x1c0
   17ee4:	ldrd	r2, [r3]
   17ee8:	cmp	r9, r3
   17eec:	cmpeq	r8, r2
   17ef0:	bne	17f54 <_start@@Base+0x589c>
   17ef4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17ef8:	str	r3, [fp, #-48]	; 0xffffffd0
   17efc:	ldr	r3, [fp, #8]
   17f00:	str	r3, [sp]
   17f04:	mov	r3, #4
   17f08:	ldr	r2, [fp, #-64]	; 0xffffffc0
   17f0c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   17f10:	ldr	r0, [fp, #-56]	; 0xffffffc8
   17f14:	bl	3403c <flatcc_json_parser_match_constant@@Base>
   17f18:	str	r0, [fp, #-60]	; 0xffffffc4
   17f1c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   17f20:	ldr	r3, [fp, #-48]	; 0xffffffd0
   17f24:	cmp	r2, r3
   17f28:	beq	17f4c <_start@@Base+0x5894>
   17f2c:	ldr	r1, [fp, #4]
   17f30:	mov	r2, #3
   17f34:	mov	r3, #0
   17f38:	strd	r2, [r1]
   17f3c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   17f40:	mov	r2, #0
   17f44:	str	r2, [r3]
   17f48:	b	18078 <_start@@Base+0x59c0>
   17f4c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17f50:	b	1807c <_start@@Base+0x59c4>
   17f54:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17f58:	b	1807c <_start@@Base+0x59c4>
   17f5c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   17f60:	mov	r0, #0
   17f64:	movt	r0, #65535	; 0xffff
   17f68:	mvn	r1, #0
   17f6c:	and	r6, r2, r0
   17f70:	and	r7, r3, r1
   17f74:	add	r3, pc, #308	; 0x134
   17f78:	ldrd	r2, [r3]
   17f7c:	cmp	r7, r3
   17f80:	cmpeq	r6, r2
   17f84:	bne	17fe8 <_start@@Base+0x5930>
   17f88:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17f8c:	str	r3, [fp, #-48]	; 0xffffffd0
   17f90:	ldr	r3, [fp, #8]
   17f94:	str	r3, [sp]
   17f98:	mov	r3, #6
   17f9c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   17fa0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   17fa4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   17fa8:	bl	3403c <flatcc_json_parser_match_constant@@Base>
   17fac:	str	r0, [fp, #-60]	; 0xffffffc4
   17fb0:	ldr	r2, [fp, #-60]	; 0xffffffc4
   17fb4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   17fb8:	cmp	r2, r3
   17fbc:	beq	17fe0 <_start@@Base+0x5928>
   17fc0:	ldr	r1, [fp, #4]
   17fc4:	mvn	r2, #1
   17fc8:	mvn	r3, #0
   17fcc:	strd	r2, [r1]
   17fd0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   17fd4:	mov	r2, #1
   17fd8:	str	r2, [r3]
   17fdc:	b	18078 <_start@@Base+0x59c0>
   17fe0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17fe4:	b	1807c <_start@@Base+0x59c4>
   17fe8:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   17fec:	mov	r0, #0
   17ff0:	mvn	r1, #0
   17ff4:	and	r4, r2, r0
   17ff8:	and	r5, r3, r1
   17ffc:	add	r3, pc, #180	; 0xb4
   18000:	ldrd	r2, [r3]
   18004:	cmp	r5, r3
   18008:	cmpeq	r4, r2
   1800c:	bne	18070 <_start@@Base+0x59b8>
   18010:	ldr	r3, [fp, #-60]	; 0xffffffc4
   18014:	str	r3, [fp, #-48]	; 0xffffffd0
   18018:	ldr	r3, [fp, #8]
   1801c:	str	r3, [sp]
   18020:	mov	r3, #4
   18024:	ldr	r2, [fp, #-64]	; 0xffffffc0
   18028:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1802c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18030:	bl	3403c <flatcc_json_parser_match_constant@@Base>
   18034:	str	r0, [fp, #-60]	; 0xffffffc4
   18038:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1803c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   18040:	cmp	r2, r3
   18044:	beq	18068 <_start@@Base+0x59b0>
   18048:	ldr	r1, [fp, #4]
   1804c:	add	r3, pc, #108	; 0x6c
   18050:	ldrd	r2, [r3]
   18054:	strd	r2, [r1]
   18058:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1805c:	mov	r2, #0
   18060:	str	r2, [r3]
   18064:	b	18078 <_start@@Base+0x59c0>
   18068:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1806c:	b	1807c <_start@@Base+0x59c4>
   18070:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18074:	b	1807c <_start@@Base+0x59c4>
   18078:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1807c:	mov	r0, r3
   18080:	sub	sp, fp, #28
   18084:	ldrd	r4, [sp]
   18088:	ldrd	r6, [sp, #8]
   1808c:	ldrd	r8, [sp, #16]
   18090:	ldr	fp, [sp, #24]
   18094:	add	sp, sp, #28
   18098:	pop	{pc}		; (ldr pc, [sp], #4)
   1809c:	nop	{0}
   180a0:			; <UNDEFINED> instruction: 0xffffffff
   180a4:	stmdavs	r5!, {r0, r4, r5, fp, ip, sp, lr}^
   180a8:	andeq	r0, r0, r0
   180ac:	stmdavs	r5!, {r0, r4, r5, fp, ip, sp, lr}^
   180b0:	strbvs	r0, [r7, #-0]!
   180b4:	stmdavs	r5!, {r1, r2, r3, r5, r6, fp, ip, sp, lr}^
   180b8:	andeq	r0, r0, r0
   180bc:	stmdavs	r5!, {r1, r4, r5, fp, ip, sp, lr}^
   180c0:	cdpvc	14, 10, cr11, cr15, cr15, {5}
   180c4:	andeq	r0, r0, r0
   180c8:	strd	r4, [sp, #-32]!	; 0xffffffe0
   180cc:	strd	r6, [sp, #8]
   180d0:	strd	r8, [sp, #16]
   180d4:	str	fp, [sp, #24]
   180d8:	str	lr, [sp, #28]
   180dc:	add	fp, sp, #28
   180e0:	sub	sp, sp, #48	; 0x30
   180e4:	str	r0, [fp, #-56]	; 0xffffffc8
   180e8:	str	r1, [fp, #-60]	; 0xffffffc4
   180ec:	str	r2, [fp, #-64]	; 0xffffffc0
   180f0:	str	r3, [fp, #-68]	; 0xffffffbc
   180f4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   180f8:	str	r3, [fp, #-32]	; 0xffffffe0
   180fc:	ldr	r1, [fp, #-64]	; 0xffffffc0
   18100:	ldr	r0, [fp, #-60]	; 0xffffffc4
   18104:	bl	13928 <_start@@Base+0x1270>
   18108:	strd	r0, [fp, #-44]	; 0xffffffd4
   1810c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   18110:	add	r1, pc, #472	; 0x1d8
   18114:	ldrd	r0, [r1]
   18118:	cmp	r3, r1
   1811c:	cmpeq	r2, r0
   18120:	bhi	181b4 <_start@@Base+0x5afc>
   18124:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   18128:	mov	r0, #0
   1812c:	mvn	r1, #0
   18130:	and	r8, r2, r0
   18134:	and	r9, r3, r1
   18138:	add	r3, pc, #440	; 0x1b8
   1813c:	ldrd	r2, [r3]
   18140:	cmp	r9, r3
   18144:	cmpeq	r8, r2
   18148:	bne	181ac <_start@@Base+0x5af4>
   1814c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   18150:	str	r3, [fp, #-48]	; 0xffffffd0
   18154:	ldr	r3, [fp, #8]
   18158:	str	r3, [sp]
   1815c:	mov	r3, #4
   18160:	ldr	r2, [fp, #-64]	; 0xffffffc0
   18164:	ldr	r1, [fp, #-48]	; 0xffffffd0
   18168:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1816c:	bl	3403c <flatcc_json_parser_match_constant@@Base>
   18170:	str	r0, [fp, #-60]	; 0xffffffc4
   18174:	ldr	r2, [fp, #-60]	; 0xffffffc4
   18178:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1817c:	cmp	r2, r3
   18180:	beq	181a4 <_start@@Base+0x5aec>
   18184:	ldr	r1, [fp, #4]
   18188:	mov	r2, #8
   1818c:	mov	r3, #0
   18190:	strd	r2, [r1]
   18194:	ldr	r3, [fp, #-68]	; 0xffffffbc
   18198:	mov	r2, #0
   1819c:	str	r2, [r3]
   181a0:	b	182cc <_start@@Base+0x5c14>
   181a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   181a8:	b	182d0 <_start@@Base+0x5c18>
   181ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   181b0:	b	182d0 <_start@@Base+0x5c18>
   181b4:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   181b8:	mov	r0, #0
   181bc:	mvn	r1, #255	; 0xff
   181c0:	and	r6, r2, r0
   181c4:	and	r7, r3, r1
   181c8:	add	r3, pc, #304	; 0x130
   181cc:	ldrd	r2, [r3]
   181d0:	cmp	r7, r3
   181d4:	cmpeq	r6, r2
   181d8:	bne	1823c <_start@@Base+0x5b84>
   181dc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   181e0:	str	r3, [fp, #-48]	; 0xffffffd0
   181e4:	ldr	r3, [fp, #8]
   181e8:	str	r3, [sp]
   181ec:	mov	r3, #3
   181f0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   181f4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   181f8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   181fc:	bl	3403c <flatcc_json_parser_match_constant@@Base>
   18200:	str	r0, [fp, #-60]	; 0xffffffc4
   18204:	ldr	r2, [fp, #-60]	; 0xffffffc4
   18208:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1820c:	cmp	r2, r3
   18210:	beq	18234 <_start@@Base+0x5b7c>
   18214:	ldr	r1, [fp, #4]
   18218:	mov	r2, #1
   1821c:	mov	r3, #0
   18220:	strd	r2, [r1]
   18224:	ldr	r3, [fp, #-68]	; 0xffffffbc
   18228:	mov	r2, #0
   1822c:	str	r2, [r3]
   18230:	b	182cc <_start@@Base+0x5c14>
   18234:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18238:	b	182d0 <_start@@Base+0x5c18>
   1823c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   18240:	mov	r0, #-16777216	; 0xff000000
   18244:	mvn	r1, #0
   18248:	and	r4, r2, r0
   1824c:	and	r5, r3, r1
   18250:	add	r3, pc, #176	; 0xb0
   18254:	ldrd	r2, [r3]
   18258:	cmp	r5, r3
   1825c:	cmpeq	r4, r2
   18260:	bne	182c4 <_start@@Base+0x5c0c>
   18264:	ldr	r3, [fp, #-60]	; 0xffffffc4
   18268:	str	r3, [fp, #-48]	; 0xffffffd0
   1826c:	ldr	r3, [fp, #8]
   18270:	str	r3, [sp]
   18274:	mov	r3, #5
   18278:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1827c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   18280:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18284:	bl	3403c <flatcc_json_parser_match_constant@@Base>
   18288:	str	r0, [fp, #-60]	; 0xffffffc4
   1828c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   18290:	ldr	r3, [fp, #-48]	; 0xffffffd0
   18294:	cmp	r2, r3
   18298:	beq	182bc <_start@@Base+0x5c04>
   1829c:	ldr	r1, [fp, #4]
   182a0:	mov	r2, #2
   182a4:	mov	r3, #0
   182a8:	strd	r2, [r1]
   182ac:	ldr	r3, [fp, #-68]	; 0xffffffbc
   182b0:	mov	r2, #0
   182b4:	str	r2, [r3]
   182b8:	b	182cc <_start@@Base+0x5c14>
   182bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   182c0:	b	182d0 <_start@@Base+0x5c18>
   182c4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   182c8:	b	182d0 <_start@@Base+0x5c18>
   182cc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   182d0:	mov	r0, r3
   182d4:	sub	sp, fp, #28
   182d8:	ldrd	r4, [sp]
   182dc:	ldrd	r6, [sp, #8]
   182e0:	ldrd	r8, [sp, #16]
   182e4:	ldr	fp, [sp, #24]
   182e8:	add	sp, sp, #28
   182ec:	pop	{pc}		; (ldr pc, [sp], #4)
   182f0:	ldclvs	15, cr15, [pc, #1020]!	; 186f4 <_start@@Base+0x603c>
   182f4:	ldrbmi	r6, [r2, -r5, ror #10]!
   182f8:	andeq	r0, r0, r0
   182fc:	rsbmi	r7, ip, #423624704	; 0x19400000
   18300:	andeq	r0, r0, r0
   18304:	rsbpl	r6, r5, #0, 8
   18308:	cdpvs	0, 0, cr0, cr0, cr0, {0}
   1830c:	ldrbmi	r6, [r2, -r5, ror #10]!
   18310:	str	fp, [sp, #-8]!
   18314:	str	lr, [sp, #4]
   18318:	add	fp, sp, #4
   1831c:	sub	sp, sp, #16
   18320:	str	r0, [fp, #-8]
   18324:	str	r1, [fp, #-12]
   18328:	str	r2, [fp, #-16]
   1832c:	strb	r3, [fp, #-17]	; 0xffffffef
   18330:	ldr	r3, [fp, #4]
   18334:	mov	r2, #0
   18338:	str	r2, [r3]
   1833c:	ldrb	r3, [fp, #-17]	; 0xffffffef
   18340:	cmp	r3, #4
   18344:	addls	pc, pc, r3, lsl #2
   18348:	b	183e8 <_start@@Base+0x5d30>
   1834c:	b	18360 <_start@@Base+0x5ca8>
   18350:	b	18378 <_start@@Base+0x5cc0>
   18354:	b	18394 <_start@@Base+0x5cdc>
   18358:	b	183b0 <_start@@Base+0x5cf8>
   1835c:	b	183cc <_start@@Base+0x5d14>
   18360:	ldr	r2, [fp, #-16]
   18364:	ldr	r1, [fp, #-12]
   18368:	ldr	r0, [fp, #-8]
   1836c:	bl	14768 <_start@@Base+0x20b0>
   18370:	mov	r3, r0
   18374:	b	18478 <_start@@Base+0x5dc0>
   18378:	ldr	r3, [fp, #4]
   1837c:	ldr	r2, [fp, #-16]
   18380:	ldr	r1, [fp, #-12]
   18384:	ldr	r0, [fp, #-8]
   18388:	bl	1d9d0 <_start@@Base+0xb318>
   1838c:	str	r0, [fp, #-12]
   18390:	b	18430 <_start@@Base+0x5d78>
   18394:	ldr	r3, [fp, #4]
   18398:	ldr	r2, [fp, #-16]
   1839c:	ldr	r1, [fp, #-12]
   183a0:	ldr	r0, [fp, #-8]
   183a4:	bl	19284 <_start@@Base+0x6bcc>
   183a8:	str	r0, [fp, #-12]
   183ac:	b	18430 <_start@@Base+0x5d78>
   183b0:	ldr	r3, [fp, #4]
   183b4:	ldr	r2, [fp, #-16]
   183b8:	ldr	r1, [fp, #-12]
   183bc:	ldr	r0, [fp, #-8]
   183c0:	bl	1746c <_start@@Base+0x4db4>
   183c4:	str	r0, [fp, #-12]
   183c8:	b	18430 <_start@@Base+0x5d78>
   183cc:	ldr	r3, [fp, #4]
   183d0:	ldr	r2, [fp, #-16]
   183d4:	ldr	r1, [fp, #-12]
   183d8:	ldr	r0, [fp, #-8]
   183dc:	bl	1b5a4 <_start@@Base+0x8eec>
   183e0:	str	r0, [fp, #-12]
   183e4:	b	18430 <_start@@Base+0x5d78>
   183e8:	ldr	r3, [fp, #-8]
   183ec:	ldr	r3, [r3, #8]
   183f0:	and	r3, r3, #1
   183f4:	cmp	r3, #0
   183f8:	bne	18418 <_start@@Base+0x5d60>
   183fc:	mov	r3, #15
   18400:	ldr	r2, [fp, #-16]
   18404:	ldr	r1, [fp, #-12]
   18408:	ldr	r0, [fp, #-8]
   1840c:	bl	33258 <flatcc_json_parser_set_error@@Base>
   18410:	mov	r3, r0
   18414:	b	18478 <_start@@Base+0x5dc0>
   18418:	ldr	r2, [fp, #-16]
   1841c:	ldr	r1, [fp, #-12]
   18420:	ldr	r0, [fp, #-8]
   18424:	bl	34adc <flatcc_json_parser_generic_json@@Base>
   18428:	mov	r3, r0
   1842c:	b	18478 <_start@@Base+0x5dc0>
   18430:	ldr	r3, [fp, #-8]
   18434:	ldr	r3, [r3, #24]
   18438:	cmp	r3, #0
   1843c:	beq	18448 <_start@@Base+0x5d90>
   18440:	ldr	r3, [fp, #-12]
   18444:	b	18478 <_start@@Base+0x5dc0>
   18448:	ldr	r3, [fp, #4]
   1844c:	ldr	r3, [r3]
   18450:	cmp	r3, #0
   18454:	bne	18474 <_start@@Base+0x5dbc>
   18458:	mov	r3, #33	; 0x21
   1845c:	ldr	r2, [fp, #-16]
   18460:	ldr	r1, [fp, #-12]
   18464:	ldr	r0, [fp, #-8]
   18468:	bl	33258 <flatcc_json_parser_set_error@@Base>
   1846c:	mov	r3, r0
   18470:	b	18478 <_start@@Base+0x5dc0>
   18474:	ldr	r3, [fp, #-12]
   18478:	mov	r0, r3
   1847c:	sub	sp, fp, #4
   18480:	ldr	fp, [sp]
   18484:	add	sp, sp, #4
   18488:	pop	{pc}		; (ldr pc, [sp], #4)
   1848c:	push	{fp}		; (str fp, [sp, #-4]!)
   18490:	add	fp, sp, #0
   18494:	sub	sp, sp, #12
   18498:	mov	r3, r0
   1849c:	strb	r3, [fp, #-5]
   184a0:	ldrb	r3, [fp, #-5]
   184a4:	cmp	r3, #4
   184a8:	addls	pc, pc, r3, lsl #2
   184ac:	b	184ec <_start@@Base+0x5e34>
   184b0:	b	184c4 <_start@@Base+0x5e0c>
   184b4:	b	184cc <_start@@Base+0x5e14>
   184b8:	b	184d4 <_start@@Base+0x5e1c>
   184bc:	b	184dc <_start@@Base+0x5e24>
   184c0:	b	184e4 <_start@@Base+0x5e2c>
   184c4:	mov	r3, #1
   184c8:	b	184f0 <_start@@Base+0x5e38>
   184cc:	mov	r3, #1
   184d0:	b	184f0 <_start@@Base+0x5e38>
   184d4:	mov	r3, #1
   184d8:	b	184f0 <_start@@Base+0x5e38>
   184dc:	mov	r3, #1
   184e0:	b	184f0 <_start@@Base+0x5e38>
   184e4:	mov	r3, #1
   184e8:	b	184f0 <_start@@Base+0x5e38>
   184ec:	mov	r3, #0
   184f0:	mov	r0, r3
   184f4:	add	sp, fp, #0
   184f8:	pop	{fp}		; (ldr fp, [sp], #4)
   184fc:	bx	lr
   18500:	strd	r4, [sp, #-32]!	; 0xffffffe0
   18504:	strd	r6, [sp, #8]
   18508:	strd	r8, [sp, #16]
   1850c:	str	fp, [sp, #24]
   18510:	str	lr, [sp, #28]
   18514:	add	fp, sp, #28
   18518:	sub	sp, sp, #56	; 0x38
   1851c:	str	r0, [fp, #-56]	; 0xffffffc8
   18520:	str	r1, [fp, #-60]	; 0xffffffc4
   18524:	str	r2, [fp, #-64]	; 0xffffffc0
   18528:	str	r3, [fp, #-68]	; 0xffffffbc
   1852c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   18530:	str	r3, [fp, #-32]	; 0xffffffe0
   18534:	ldr	r1, [fp, #-64]	; 0xffffffc0
   18538:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1853c:	bl	13928 <_start@@Base+0x1270>
   18540:	strd	r0, [fp, #-44]	; 0xffffffd4
   18544:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   18548:	add	r1, pc, #872	; 0x368
   1854c:	ldrd	r0, [r1]
   18550:	cmp	r3, r1
   18554:	cmpeq	r2, r0
   18558:	bhi	185f8 <_start@@Base+0x5f40>
   1855c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   18560:	mov	r0, #0
   18564:	mvn	r1, #255	; 0xff
   18568:	and	ip, r2, r0
   1856c:	str	ip, [fp, #-76]	; 0xffffffb4
   18570:	and	r3, r3, r1
   18574:	str	r3, [fp, #-72]	; 0xffffffb8
   18578:	add	r3, pc, #832	; 0x340
   1857c:	ldrd	r2, [r3]
   18580:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   18584:	cmp	r1, r3
   18588:	cmpeq	r0, r2
   1858c:	bne	185f0 <_start@@Base+0x5f38>
   18590:	ldr	r3, [fp, #-60]	; 0xffffffc4
   18594:	str	r3, [fp, #-48]	; 0xffffffd0
   18598:	ldr	r3, [fp, #8]
   1859c:	str	r3, [sp]
   185a0:	mov	r3, #3
   185a4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   185a8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   185ac:	ldr	r0, [fp, #-56]	; 0xffffffc8
   185b0:	bl	3403c <flatcc_json_parser_match_constant@@Base>
   185b4:	str	r0, [fp, #-60]	; 0xffffffc4
   185b8:	ldr	r2, [fp, #-60]	; 0xffffffc4
   185bc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   185c0:	cmp	r2, r3
   185c4:	beq	185e8 <_start@@Base+0x5f30>
   185c8:	ldr	r1, [fp, #4]
   185cc:	mov	r2, #4
   185d0:	mov	r3, #0
   185d4:	strd	r2, [r1]
   185d8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   185dc:	mov	r2, #0
   185e0:	str	r2, [r3]
   185e4:	b	18890 <_start@@Base+0x61d8>
   185e8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   185ec:	b	18894 <_start@@Base+0x61dc>
   185f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   185f4:	b	18894 <_start@@Base+0x61dc>
   185f8:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   185fc:	add	r1, pc, #708	; 0x2c4
   18600:	ldrd	r0, [r1]
   18604:	cmp	r3, r1
   18608:	cmpeq	r2, r0
   1860c:	bne	18668 <_start@@Base+0x5fb0>
   18610:	ldr	r3, [fp, #-60]	; 0xffffffc4
   18614:	str	r3, [fp, #-48]	; 0xffffffd0
   18618:	ldr	r3, [fp, #8]
   1861c:	str	r3, [sp]
   18620:	mov	r3, #8
   18624:	ldr	r2, [fp, #-64]	; 0xffffffc0
   18628:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1862c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18630:	bl	3403c <flatcc_json_parser_match_constant@@Base>
   18634:	str	r0, [fp, #-60]	; 0xffffffc4
   18638:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1863c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   18640:	cmp	r2, r3
   18644:	beq	186e8 <_start@@Base+0x6030>
   18648:	ldr	r1, [fp, #4]
   1864c:	mov	r2, #3
   18650:	mov	r3, #0
   18654:	strd	r2, [r1]
   18658:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1865c:	mov	r2, #0
   18660:	str	r2, [r3]
   18664:	b	18890 <_start@@Base+0x61d8>
   18668:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   1866c:	mvn	r0, #255	; 0xff
   18670:	mvn	r1, #0
   18674:	and	r8, r2, r0
   18678:	and	r9, r3, r1
   1867c:	add	r3, pc, #588	; 0x24c
   18680:	ldrd	r2, [r3]
   18684:	cmp	r9, r3
   18688:	cmpeq	r8, r2
   1868c:	bne	186f0 <_start@@Base+0x6038>
   18690:	ldr	r3, [fp, #-60]	; 0xffffffc4
   18694:	str	r3, [fp, #-48]	; 0xffffffd0
   18698:	ldr	r3, [fp, #8]
   1869c:	str	r3, [sp]
   186a0:	mov	r3, #7
   186a4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   186a8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   186ac:	ldr	r0, [fp, #-56]	; 0xffffffc8
   186b0:	bl	3403c <flatcc_json_parser_match_constant@@Base>
   186b4:	str	r0, [fp, #-60]	; 0xffffffc4
   186b8:	ldr	r2, [fp, #-60]	; 0xffffffc4
   186bc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   186c0:	cmp	r2, r3
   186c4:	beq	186f8 <_start@@Base+0x6040>
   186c8:	ldr	r1, [fp, #4]
   186cc:	mov	r2, #1
   186d0:	mov	r3, #0
   186d4:	strd	r2, [r1]
   186d8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   186dc:	mov	r2, #0
   186e0:	str	r2, [r3]
   186e4:	b	18890 <_start@@Base+0x61d8>
   186e8:	nop	{0}
   186ec:	b	186fc <_start@@Base+0x6044>
   186f0:	nop	{0}
   186f4:	b	186fc <_start@@Base+0x6044>
   186f8:	nop	{0}
   186fc:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   18700:	mov	r0, #0
   18704:	mvn	r1, #0
   18708:	and	r6, r2, r0
   1870c:	and	r7, r3, r1
   18710:	add	r3, pc, #448	; 0x1c0
   18714:	ldrd	r2, [r3]
   18718:	cmp	r7, r3
   1871c:	cmpeq	r6, r2
   18720:	bne	1877c <_start@@Base+0x60c4>
   18724:	ldr	r3, [fp, #-60]	; 0xffffffc4
   18728:	str	r3, [fp, #-48]	; 0xffffffd0
   1872c:	ldr	r3, [fp, #8]
   18730:	str	r3, [sp]
   18734:	mov	r3, #4
   18738:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1873c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   18740:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18744:	bl	3403c <flatcc_json_parser_match_constant@@Base>
   18748:	str	r0, [fp, #-60]	; 0xffffffc4
   1874c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   18750:	ldr	r3, [fp, #-48]	; 0xffffffd0
   18754:	cmp	r2, r3
   18758:	beq	18784 <_start@@Base+0x60cc>
   1875c:	ldr	r1, [fp, #4]
   18760:	mov	r2, #0
   18764:	mov	r3, #0
   18768:	strd	r2, [r1]
   1876c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   18770:	mov	r2, #0
   18774:	str	r2, [r3]
   18778:	b	18890 <_start@@Base+0x61d8>
   1877c:	nop	{0}
   18780:	b	18788 <_start@@Base+0x60d0>
   18784:	nop	{0}
   18788:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   1878c:	add	r1, pc, #332	; 0x14c
   18790:	ldrd	r0, [r1]
   18794:	cmp	r3, r1
   18798:	cmpeq	r2, r0
   1879c:	bne	18888 <_start@@Base+0x61d0>
   187a0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   187a4:	add	r3, r3, #8
   187a8:	str	r3, [fp, #-60]	; 0xffffffc4
   187ac:	ldr	r1, [fp, #-64]	; 0xffffffc0
   187b0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   187b4:	bl	13928 <_start@@Base+0x1270>
   187b8:	strd	r0, [fp, #-44]	; 0xffffffd4
   187bc:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   187c0:	add	r1, pc, #288	; 0x120
   187c4:	ldrd	r0, [r1]
   187c8:	cmp	r3, r1
   187cc:	cmpeq	r2, r0
   187d0:	bne	18880 <_start@@Base+0x61c8>
   187d4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   187d8:	add	r3, r3, #8
   187dc:	str	r3, [fp, #-60]	; 0xffffffc4
   187e0:	ldr	r1, [fp, #-64]	; 0xffffffc0
   187e4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   187e8:	bl	13928 <_start@@Base+0x1270>
   187ec:	strd	r0, [fp, #-44]	; 0xffffffd4
   187f0:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   187f4:	mvn	r0, #255	; 0xff
   187f8:	mvn	r1, #0
   187fc:	and	r4, r2, r0
   18800:	and	r5, r3, r1
   18804:	add	r3, pc, #228	; 0xe4
   18808:	ldrd	r2, [r3]
   1880c:	cmp	r5, r3
   18810:	cmpeq	r4, r2
   18814:	bne	18878 <_start@@Base+0x61c0>
   18818:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1881c:	str	r3, [fp, #-48]	; 0xffffffd0
   18820:	ldr	r3, [fp, #8]
   18824:	str	r3, [sp]
   18828:	mov	r3, #7
   1882c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   18830:	ldr	r1, [fp, #-48]	; 0xffffffd0
   18834:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18838:	bl	3403c <flatcc_json_parser_match_constant@@Base>
   1883c:	str	r0, [fp, #-60]	; 0xffffffc4
   18840:	ldr	r2, [fp, #-60]	; 0xffffffc4
   18844:	ldr	r3, [fp, #-48]	; 0xffffffd0
   18848:	cmp	r2, r3
   1884c:	beq	18870 <_start@@Base+0x61b8>
   18850:	ldr	r1, [fp, #4]
   18854:	mov	r2, #2
   18858:	mov	r3, #0
   1885c:	strd	r2, [r1]
   18860:	ldr	r3, [fp, #-68]	; 0xffffffbc
   18864:	mov	r2, #0
   18868:	str	r2, [r3]
   1886c:	b	18890 <_start@@Base+0x61d8>
   18870:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18874:	b	18894 <_start@@Base+0x61dc>
   18878:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1887c:	b	18894 <_start@@Base+0x61dc>
   18880:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18884:	b	18894 <_start@@Base+0x61dc>
   18888:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1888c:	b	18894 <_start@@Base+0x61dc>
   18890:	ldr	r3, [fp, #-60]	; 0xffffffc4
   18894:	mov	r0, r3
   18898:	sub	sp, fp, #28
   1889c:	ldrd	r4, [sp]
   188a0:	ldrd	r6, [sp, #8]
   188a4:	ldrd	r8, [sp, #16]
   188a8:	ldr	fp, [sp, #24]
   188ac:	add	sp, sp, #28
   188b0:	pop	{pc}		; (ldr pc, [sp], #4)
   188b4:	nop	{0}
   188b8:	strbtvc	r7, [r5], #-511	; 0xfffffe01
   188bc:	stclmi	14, cr6, [pc, #-460]!	; 186f8 <_start@@Base+0x6040>
   188c0:	andeq	r0, r0, r0
   188c4:	cmnmi	ip, r0, lsl #8
   188c8:	strbtvc	r7, [r5], #-562	; 0xfffffdce
   188cc:	stclmi	14, cr6, [pc, #-460]!	; 18708 <_start@@Base+0x6050>
   188d0:	strbtvc	r7, [r5], #-512	; 0xfffffe00
   188d4:	stclmi	14, cr6, [pc, #-460]!	; 18710 <_start@@Base+0x6058>
   188d8:	andeq	r0, r0, r0
   188dc:	cdpmi	14, 4, cr4, cr15, cr5, {2}
   188e0:	cmnpl	r9, #112, 26	; 0x1c00
   188e4:	strbtpl	r7, [r5], #-884	; 0xfffffc8c
   188e8:	rsbvs	r6, ip, #364904448	; 0x15c00000
   188ec:	cfstrdvs	mvd5, [r5], #-388	; 0xfffffe7c
   188f0:	cdpvs	13, 7, cr6, cr5, cr0, {0}
   188f4:	ldmdbvs	r4!, {r0, r2, r6, fp, sp, lr}^
   188f8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   188fc:	strd	r6, [sp, #8]
   18900:	str	fp, [sp, #16]
   18904:	str	lr, [sp, #20]
   18908:	add	fp, sp, #20
   1890c:	sub	sp, sp, #48	; 0x30
   18910:	str	r0, [fp, #-48]	; 0xffffffd0
   18914:	str	r1, [fp, #-52]	; 0xffffffcc
   18918:	str	r2, [fp, #-56]	; 0xffffffc8
   1891c:	str	r3, [fp, #-60]	; 0xffffffc4
   18920:	sub	r3, fp, #40	; 0x28
   18924:	ldr	r2, [fp, #-56]	; 0xffffffc8
   18928:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1892c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   18930:	bl	13a6c <_start@@Base+0x13b4>
   18934:	str	r0, [fp, #-52]	; 0xffffffcc
   18938:	b	18ba0 <_start@@Base+0x64e8>
   1893c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   18940:	ldr	r1, [fp, #-52]	; 0xffffffcc
   18944:	ldr	r0, [fp, #-48]	; 0xffffffd0
   18948:	bl	135f4 <_start@@Base+0xf3c>
   1894c:	str	r0, [fp, #-52]	; 0xffffffcc
   18950:	ldr	r1, [fp, #-56]	; 0xffffffc8
   18954:	ldr	r0, [fp, #-52]	; 0xffffffcc
   18958:	bl	13928 <_start@@Base+0x1270>
   1895c:	strd	r0, [fp, #-28]	; 0xffffffe4
   18960:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   18964:	mov	r0, #0
   18968:	mov	r1, #-16777216	; 0xff000000
   1896c:	and	r4, r2, r0
   18970:	and	r5, r3, r1
   18974:	cmp	r5, #1644167168	; 0x62000000
   18978:	cmpeq	r4, #0
   1897c:	bne	18a6c <_start@@Base+0x63b4>
   18980:	ldr	r3, [fp, #-52]	; 0xffffffcc
   18984:	str	r3, [fp, #-32]	; 0xffffffe0
   18988:	mov	r3, #1
   1898c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   18990:	ldr	r1, [fp, #-32]	; 0xffffffe0
   18994:	ldr	r0, [fp, #-48]	; 0xffffffd0
   18998:	bl	13f3c <_start@@Base+0x1884>
   1899c:	str	r0, [fp, #-52]	; 0xffffffcc
   189a0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   189a4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   189a8:	cmp	r2, r3
   189ac:	beq	18a54 <_start@@Base+0x639c>
   189b0:	mov	r3, #0
   189b4:	strb	r3, [fp, #-41]	; 0xffffffd7
   189b8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   189bc:	add	r3, r3, #2
   189c0:	str	r3, [fp, #-36]	; 0xffffffdc
   189c4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   189c8:	str	r3, [fp, #-32]	; 0xffffffe0
   189cc:	sub	r3, fp, #41	; 0x29
   189d0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   189d4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   189d8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   189dc:	bl	14e04 <_start@@Base+0x274c>
   189e0:	str	r0, [fp, #-52]	; 0xffffffcc
   189e4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   189e8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   189ec:	cmp	r2, r3
   189f0:	bne	18a40 <_start@@Base+0x6388>
   189f4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   189f8:	str	r3, [fp, #-32]	; 0xffffffe0
   189fc:	sub	r3, fp, #41	; 0x29
   18a00:	str	r3, [sp]
   18a04:	ldr	r3, [pc, #488]	; 18bf4 <_start@@Base+0x653c>
   18a08:	add	r3, pc, r3
   18a0c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   18a10:	ldr	r1, [fp, #-32]	; 0xffffffe0
   18a14:	ldr	r0, [fp, #-48]	; 0xffffffd0
   18a18:	bl	15d60 <_start@@Base+0x36a8>
   18a1c:	str	r0, [fp, #-52]	; 0xffffffcc
   18a20:	ldr	r2, [fp, #-52]	; 0xffffffcc
   18a24:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18a28:	cmp	r2, r3
   18a2c:	beq	18bb4 <_start@@Base+0x64fc>
   18a30:	ldr	r2, [fp, #-52]	; 0xffffffcc
   18a34:	ldr	r3, [fp, #-56]	; 0xffffffc8
   18a38:	cmp	r2, r3
   18a3c:	beq	18bb4 <_start@@Base+0x64fc>
   18a40:	ldrsb	r3, [fp, #-41]	; 0xffffffd7
   18a44:	mov	r1, r3
   18a48:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18a4c:	bl	129ec <_start@@Base+0x334>
   18a50:	b	18b88 <_start@@Base+0x64d0>
   18a54:	ldr	r2, [fp, #-56]	; 0xffffffc8
   18a58:	ldr	r1, [fp, #-52]	; 0xffffffcc
   18a5c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   18a60:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   18a64:	str	r0, [fp, #-52]	; 0xffffffcc
   18a68:	b	18b88 <_start@@Base+0x64d0>
   18a6c:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   18a70:	mov	r0, #0
   18a74:	mov	r1, #-16777216	; 0xff000000
   18a78:	and	r6, r2, r0
   18a7c:	and	r7, r3, r1
   18a80:	cmp	r7, #1627389952	; 0x61000000
   18a84:	cmpeq	r6, #0
   18a88:	bne	18b74 <_start@@Base+0x64bc>
   18a8c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   18a90:	str	r3, [fp, #-32]	; 0xffffffe0
   18a94:	mov	r3, #1
   18a98:	ldr	r2, [fp, #-56]	; 0xffffffc8
   18a9c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   18aa0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   18aa4:	bl	13f3c <_start@@Base+0x1884>
   18aa8:	str	r0, [fp, #-52]	; 0xffffffcc
   18aac:	ldr	r2, [fp, #-32]	; 0xffffffe0
   18ab0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   18ab4:	cmp	r2, r3
   18ab8:	beq	18b5c <_start@@Base+0x64a4>
   18abc:	mov	r3, #0
   18ac0:	strh	r3, [fp, #-44]	; 0xffffffd4
   18ac4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   18ac8:	str	r3, [fp, #-36]	; 0xffffffdc
   18acc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   18ad0:	str	r3, [fp, #-32]	; 0xffffffe0
   18ad4:	sub	r3, fp, #44	; 0x2c
   18ad8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   18adc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   18ae0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   18ae4:	bl	14d28 <_start@@Base+0x2670>
   18ae8:	str	r0, [fp, #-52]	; 0xffffffcc
   18aec:	ldr	r2, [fp, #-32]	; 0xffffffe0
   18af0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   18af4:	cmp	r2, r3
   18af8:	bne	18b48 <_start@@Base+0x6490>
   18afc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   18b00:	str	r3, [fp, #-32]	; 0xffffffe0
   18b04:	sub	r3, fp, #44	; 0x2c
   18b08:	str	r3, [sp]
   18b0c:	ldr	r3, [pc, #228]	; 18bf8 <_start@@Base+0x6540>
   18b10:	add	r3, pc, r3
   18b14:	ldr	r2, [fp, #-56]	; 0xffffffc8
   18b18:	ldr	r1, [fp, #-32]	; 0xffffffe0
   18b1c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   18b20:	bl	15b70 <_start@@Base+0x34b8>
   18b24:	str	r0, [fp, #-52]	; 0xffffffcc
   18b28:	ldr	r2, [fp, #-52]	; 0xffffffcc
   18b2c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18b30:	cmp	r2, r3
   18b34:	beq	18bbc <_start@@Base+0x6504>
   18b38:	ldr	r2, [fp, #-52]	; 0xffffffcc
   18b3c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   18b40:	cmp	r2, r3
   18b44:	beq	18bbc <_start@@Base+0x6504>
   18b48:	ldrsh	r3, [fp, #-44]	; 0xffffffd4
   18b4c:	mov	r1, r3
   18b50:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18b54:	bl	12ac4 <_start@@Base+0x40c>
   18b58:	b	18b88 <_start@@Base+0x64d0>
   18b5c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   18b60:	ldr	r1, [fp, #-52]	; 0xffffffcc
   18b64:	ldr	r0, [fp, #-48]	; 0xffffffd0
   18b68:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   18b6c:	str	r0, [fp, #-52]	; 0xffffffcc
   18b70:	b	18b88 <_start@@Base+0x64d0>
   18b74:	ldr	r2, [fp, #-56]	; 0xffffffc8
   18b78:	ldr	r1, [fp, #-52]	; 0xffffffcc
   18b7c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   18b80:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   18b84:	str	r0, [fp, #-52]	; 0xffffffcc
   18b88:	sub	r3, fp, #40	; 0x28
   18b8c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   18b90:	ldr	r1, [fp, #-52]	; 0xffffffcc
   18b94:	ldr	r0, [fp, #-48]	; 0xffffffd0
   18b98:	bl	13b60 <_start@@Base+0x14a8>
   18b9c:	str	r0, [fp, #-52]	; 0xffffffcc
   18ba0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18ba4:	cmp	r3, #0
   18ba8:	bne	1893c <_start@@Base+0x6284>
   18bac:	ldr	r3, [fp, #-52]	; 0xffffffcc
   18bb0:	b	18bd8 <_start@@Base+0x6520>
   18bb4:	nop	{0}
   18bb8:	b	18bc0 <_start@@Base+0x6508>
   18bbc:	nop	{0}
   18bc0:	mov	r3, #33	; 0x21
   18bc4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   18bc8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   18bcc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   18bd0:	bl	33258 <flatcc_json_parser_set_error@@Base>
   18bd4:	mov	r3, r0
   18bd8:	mov	r0, r3
   18bdc:	sub	sp, fp, #20
   18be0:	ldrd	r4, [sp]
   18be4:	ldrd	r6, [sp, #8]
   18be8:	ldr	fp, [sp, #16]
   18bec:	add	sp, sp, #20
   18bf0:	pop	{pc}		; (ldr pc, [sp], #4)
   18bf4:	muleq	r3, r4, r6
   18bf8:	muleq	r3, r8, r5
   18bfc:	str	fp, [sp, #-8]!
   18c00:	str	lr, [sp, #4]
   18c04:	add	fp, sp, #4
   18c08:	sub	sp, sp, #24
   18c0c:	str	r0, [fp, #-16]
   18c10:	str	r1, [fp, #-20]	; 0xffffffec
   18c14:	str	r2, [fp, #-24]	; 0xffffffe8
   18c18:	str	r3, [fp, #-28]	; 0xffffffe4
   18c1c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18c20:	mov	r2, #0
   18c24:	str	r2, [r3]
   18c28:	ldr	r3, [fp, #-16]
   18c2c:	ldr	r3, [r3]
   18c30:	mov	r2, #2
   18c34:	mov	r1, #4
   18c38:	mov	r0, r3
   18c3c:	bl	28f94 <flatcc_builder_start_struct@@Base>
   18c40:	str	r0, [fp, #-8]
   18c44:	ldr	r3, [fp, #-8]
   18c48:	cmp	r3, #0
   18c4c:	beq	18cac <_start@@Base+0x65f4>
   18c50:	ldr	r3, [fp, #-8]
   18c54:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18c58:	ldr	r1, [fp, #-20]	; 0xffffffec
   18c5c:	ldr	r0, [fp, #-16]
   18c60:	bl	188f8 <_start@@Base+0x6240>
   18c64:	str	r0, [fp, #-20]	; 0xffffffec
   18c68:	ldr	r2, [fp, #-20]	; 0xffffffec
   18c6c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18c70:	cmp	r2, r3
   18c74:	beq	18cb4 <_start@@Base+0x65fc>
   18c78:	ldr	r3, [fp, #-16]
   18c7c:	ldr	r3, [r3]
   18c80:	mov	r0, r3
   18c84:	bl	29040 <flatcc_builder_end_struct@@Base>
   18c88:	mov	r2, r0
   18c8c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18c90:	str	r2, [r3]
   18c94:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18c98:	ldr	r3, [r3]
   18c9c:	cmp	r3, #0
   18ca0:	beq	18cb4 <_start@@Base+0x65fc>
   18ca4:	ldr	r3, [fp, #-20]	; 0xffffffec
   18ca8:	b	18cd0 <_start@@Base+0x6618>
   18cac:	nop	{0}
   18cb0:	b	18cb8 <_start@@Base+0x6600>
   18cb4:	nop	{0}
   18cb8:	mov	r3, #33	; 0x21
   18cbc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18cc0:	ldr	r1, [fp, #-20]	; 0xffffffec
   18cc4:	ldr	r0, [fp, #-16]
   18cc8:	bl	33258 <flatcc_json_parser_set_error@@Base>
   18ccc:	mov	r3, r0
   18cd0:	mov	r0, r3
   18cd4:	sub	sp, fp, #4
   18cd8:	ldr	fp, [sp]
   18cdc:	add	sp, sp, #4
   18ce0:	pop	{pc}		; (ldr pc, [sp], #4)
   18ce4:	str	fp, [sp, #-8]!
   18ce8:	str	lr, [sp, #4]
   18cec:	add	fp, sp, #4
   18cf0:	sub	sp, sp, #24
   18cf4:	str	r0, [fp, #-16]
   18cf8:	str	r1, [fp, #-20]	; 0xffffffec
   18cfc:	str	r2, [fp, #-24]	; 0xffffffe8
   18d00:	str	r3, [fp, #-28]	; 0xffffffe4
   18d04:	sub	r3, fp, #8
   18d08:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18d0c:	ldr	r1, [fp, #-20]	; 0xffffffec
   18d10:	ldr	r0, [fp, #-16]
   18d14:	bl	13a6c <_start@@Base+0x13b4>
   18d18:	str	r0, [fp, #-20]	; 0xffffffec
   18d1c:	b	18d4c <_start@@Base+0x6694>
   18d20:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18d24:	ldr	r1, [fp, #-20]	; 0xffffffec
   18d28:	ldr	r0, [fp, #-16]
   18d2c:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   18d30:	str	r0, [fp, #-20]	; 0xffffffec
   18d34:	sub	r3, fp, #8
   18d38:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18d3c:	ldr	r1, [fp, #-20]	; 0xffffffec
   18d40:	ldr	r0, [fp, #-16]
   18d44:	bl	13b60 <_start@@Base+0x14a8>
   18d48:	str	r0, [fp, #-20]	; 0xffffffec
   18d4c:	ldr	r3, [fp, #-8]
   18d50:	cmp	r3, #0
   18d54:	bne	18d20 <_start@@Base+0x6668>
   18d58:	ldr	r3, [fp, #-20]	; 0xffffffec
   18d5c:	mov	r0, r3
   18d60:	sub	sp, fp, #4
   18d64:	ldr	fp, [sp]
   18d68:	add	sp, sp, #4
   18d6c:	pop	{pc}		; (ldr pc, [sp], #4)
   18d70:	str	fp, [sp, #-8]!
   18d74:	str	lr, [sp, #4]
   18d78:	add	fp, sp, #4
   18d7c:	sub	sp, sp, #24
   18d80:	str	r0, [fp, #-16]
   18d84:	str	r1, [fp, #-20]	; 0xffffffec
   18d88:	str	r2, [fp, #-24]	; 0xffffffe8
   18d8c:	str	r3, [fp, #-28]	; 0xffffffe4
   18d90:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18d94:	mov	r2, #0
   18d98:	str	r2, [r3]
   18d9c:	ldr	r3, [fp, #-16]
   18da0:	ldr	r3, [r3]
   18da4:	mov	r2, #1
   18da8:	mov	r1, #0
   18dac:	mov	r0, r3
   18db0:	bl	28f94 <flatcc_builder_start_struct@@Base>
   18db4:	str	r0, [fp, #-8]
   18db8:	ldr	r3, [fp, #-8]
   18dbc:	cmp	r3, #0
   18dc0:	beq	18e20 <_start@@Base+0x6768>
   18dc4:	ldr	r3, [fp, #-8]
   18dc8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18dcc:	ldr	r1, [fp, #-20]	; 0xffffffec
   18dd0:	ldr	r0, [fp, #-16]
   18dd4:	bl	18ce4 <_start@@Base+0x662c>
   18dd8:	str	r0, [fp, #-20]	; 0xffffffec
   18ddc:	ldr	r2, [fp, #-20]	; 0xffffffec
   18de0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18de4:	cmp	r2, r3
   18de8:	beq	18e28 <_start@@Base+0x6770>
   18dec:	ldr	r3, [fp, #-16]
   18df0:	ldr	r3, [r3]
   18df4:	mov	r0, r3
   18df8:	bl	29040 <flatcc_builder_end_struct@@Base>
   18dfc:	mov	r2, r0
   18e00:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18e04:	str	r2, [r3]
   18e08:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18e0c:	ldr	r3, [r3]
   18e10:	cmp	r3, #0
   18e14:	beq	18e28 <_start@@Base+0x6770>
   18e18:	ldr	r3, [fp, #-20]	; 0xffffffec
   18e1c:	b	18e44 <_start@@Base+0x678c>
   18e20:	nop	{0}
   18e24:	b	18e2c <_start@@Base+0x6774>
   18e28:	nop	{0}
   18e2c:	mov	r3, #33	; 0x21
   18e30:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18e34:	ldr	r1, [fp, #-20]	; 0xffffffec
   18e38:	ldr	r0, [fp, #-16]
   18e3c:	bl	33258 <flatcc_json_parser_set_error@@Base>
   18e40:	mov	r3, r0
   18e44:	mov	r0, r3
   18e48:	sub	sp, fp, #4
   18e4c:	ldr	fp, [sp]
   18e50:	add	sp, sp, #4
   18e54:	pop	{pc}		; (ldr pc, [sp], #4)
   18e58:	str	fp, [sp, #-8]!
   18e5c:	str	lr, [sp, #4]
   18e60:	add	fp, sp, #4
   18e64:	sub	sp, sp, #24
   18e68:	str	r0, [fp, #-16]
   18e6c:	str	r1, [fp, #-20]	; 0xffffffec
   18e70:	str	r2, [fp, #-24]	; 0xffffffe8
   18e74:	str	r3, [fp, #-28]	; 0xffffffe4
   18e78:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18e7c:	mov	r2, #0
   18e80:	str	r2, [r3]
   18e84:	ldr	r3, [fp, #-16]
   18e88:	ldr	r3, [r3]
   18e8c:	mov	r1, #0
   18e90:	mov	r0, r3
   18e94:	bl	29dfc <flatcc_builder_start_table@@Base>
   18e98:	mov	r3, r0
   18e9c:	cmp	r3, #0
   18ea0:	bne	18f50 <_start@@Base+0x6898>
   18ea4:	sub	r3, fp, #8
   18ea8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18eac:	ldr	r1, [fp, #-20]	; 0xffffffec
   18eb0:	ldr	r0, [fp, #-16]
   18eb4:	bl	13a6c <_start@@Base+0x13b4>
   18eb8:	str	r0, [fp, #-20]	; 0xffffffec
   18ebc:	b	18f00 <_start@@Base+0x6848>
   18ec0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18ec4:	ldr	r1, [fp, #-20]	; 0xffffffec
   18ec8:	ldr	r0, [fp, #-16]
   18ecc:	bl	135f4 <_start@@Base+0xf3c>
   18ed0:	str	r0, [fp, #-20]	; 0xffffffec
   18ed4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18ed8:	ldr	r1, [fp, #-20]	; 0xffffffec
   18edc:	ldr	r0, [fp, #-16]
   18ee0:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   18ee4:	str	r0, [fp, #-20]	; 0xffffffec
   18ee8:	sub	r3, fp, #8
   18eec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18ef0:	ldr	r1, [fp, #-20]	; 0xffffffec
   18ef4:	ldr	r0, [fp, #-16]
   18ef8:	bl	13b60 <_start@@Base+0x14a8>
   18efc:	str	r0, [fp, #-20]	; 0xffffffec
   18f00:	ldr	r3, [fp, #-8]
   18f04:	cmp	r3, #0
   18f08:	bne	18ec0 <_start@@Base+0x6808>
   18f0c:	ldr	r3, [fp, #-16]
   18f10:	ldr	r3, [r3, #24]
   18f14:	cmp	r3, #0
   18f18:	bne	18f58 <_start@@Base+0x68a0>
   18f1c:	ldr	r3, [fp, #-16]
   18f20:	ldr	r3, [r3]
   18f24:	mov	r0, r3
   18f28:	bl	2a9b0 <flatcc_builder_end_table@@Base>
   18f2c:	mov	r2, r0
   18f30:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18f34:	str	r2, [r3]
   18f38:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18f3c:	ldr	r3, [r3]
   18f40:	cmp	r3, #0
   18f44:	beq	18f60 <_start@@Base+0x68a8>
   18f48:	ldr	r3, [fp, #-20]	; 0xffffffec
   18f4c:	b	18f7c <_start@@Base+0x68c4>
   18f50:	nop	{0}
   18f54:	b	18f64 <_start@@Base+0x68ac>
   18f58:	nop	{0}
   18f5c:	b	18f64 <_start@@Base+0x68ac>
   18f60:	nop	{0}
   18f64:	mov	r3, #33	; 0x21
   18f68:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18f6c:	ldr	r1, [fp, #-20]	; 0xffffffec
   18f70:	ldr	r0, [fp, #-16]
   18f74:	bl	33258 <flatcc_json_parser_set_error@@Base>
   18f78:	mov	r3, r0
   18f7c:	mov	r0, r3
   18f80:	sub	sp, fp, #4
   18f84:	ldr	fp, [sp]
   18f88:	add	sp, sp, #4
   18f8c:	pop	{pc}		; (ldr pc, [sp], #4)
   18f90:	strd	r4, [sp, #-16]!
   18f94:	str	fp, [sp, #8]
   18f98:	str	lr, [sp, #12]
   18f9c:	add	fp, sp, #12
   18fa0:	sub	sp, sp, #40	; 0x28
   18fa4:	str	r0, [fp, #-40]	; 0xffffffd8
   18fa8:	str	r1, [fp, #-44]	; 0xffffffd4
   18fac:	str	r2, [fp, #-48]	; 0xffffffd0
   18fb0:	str	r3, [fp, #-52]	; 0xffffffcc
   18fb4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   18fb8:	mov	r2, #0
   18fbc:	str	r2, [r3]
   18fc0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18fc4:	ldr	r3, [r3]
   18fc8:	mov	r1, #1
   18fcc:	mov	r0, r3
   18fd0:	bl	29dfc <flatcc_builder_start_table@@Base>
   18fd4:	mov	r3, r0
   18fd8:	cmp	r3, #0
   18fdc:	bne	19150 <_start@@Base+0x6a98>
   18fe0:	sub	r3, fp, #32
   18fe4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   18fe8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18fec:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18ff0:	bl	13a6c <_start@@Base+0x13b4>
   18ff4:	str	r0, [fp, #-44]	; 0xffffffd4
   18ff8:	b	19100 <_start@@Base+0x6a48>
   18ffc:	ldr	r2, [fp, #-48]	; 0xffffffd0
   19000:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19004:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19008:	bl	135f4 <_start@@Base+0xf3c>
   1900c:	str	r0, [fp, #-44]	; 0xffffffd4
   19010:	ldr	r1, [fp, #-48]	; 0xffffffd0
   19014:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19018:	bl	13928 <_start@@Base+0x1270>
   1901c:	strd	r0, [fp, #-20]	; 0xffffffec
   19020:	ldrd	r2, [fp, #-20]	; 0xffffffec
   19024:	mov	r0, #-16777216	; 0xff000000
   19028:	mvn	r1, #0
   1902c:	and	r4, r2, r0
   19030:	and	r5, r3, r1
   19034:	add	r3, pc, #356	; 0x164
   19038:	ldrd	r2, [r3]
   1903c:	cmp	r5, r3
   19040:	cmpeq	r4, r2
   19044:	bne	190d4 <_start@@Base+0x6a1c>
   19048:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1904c:	str	r3, [fp, #-24]	; 0xffffffe8
   19050:	mov	r3, #5
   19054:	ldr	r2, [fp, #-48]	; 0xffffffd0
   19058:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1905c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19060:	bl	13f3c <_start@@Base+0x1884>
   19064:	str	r0, [fp, #-44]	; 0xffffffd4
   19068:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1906c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   19070:	cmp	r2, r3
   19074:	beq	190bc <_start@@Base+0x6a04>
   19078:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1907c:	ldr	r0, [r3]
   19080:	mov	r3, #1
   19084:	mov	r2, #0
   19088:	mov	r1, #0
   1908c:	bl	2c400 <flatcc_builder_table_add@@Base>
   19090:	str	r0, [fp, #-28]	; 0xffffffe4
   19094:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19098:	cmp	r3, #0
   1909c:	beq	19158 <_start@@Base+0x6aa0>
   190a0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   190a4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   190a8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   190ac:	ldr	r0, [fp, #-40]	; 0xffffffd8
   190b0:	bl	18ce4 <_start@@Base+0x662c>
   190b4:	str	r0, [fp, #-44]	; 0xffffffd4
   190b8:	b	190e8 <_start@@Base+0x6a30>
   190bc:	ldr	r2, [fp, #-48]	; 0xffffffd0
   190c0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   190c4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   190c8:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   190cc:	str	r0, [fp, #-44]	; 0xffffffd4
   190d0:	b	190e8 <_start@@Base+0x6a30>
   190d4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   190d8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   190dc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   190e0:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   190e4:	str	r0, [fp, #-44]	; 0xffffffd4
   190e8:	sub	r3, fp, #32
   190ec:	ldr	r2, [fp, #-48]	; 0xffffffd0
   190f0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   190f4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   190f8:	bl	13b60 <_start@@Base+0x14a8>
   190fc:	str	r0, [fp, #-44]	; 0xffffffd4
   19100:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19104:	cmp	r3, #0
   19108:	bne	18ffc <_start@@Base+0x6944>
   1910c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19110:	ldr	r3, [r3, #24]
   19114:	cmp	r3, #0
   19118:	bne	19160 <_start@@Base+0x6aa8>
   1911c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19120:	ldr	r3, [r3]
   19124:	mov	r0, r3
   19128:	bl	2a9b0 <flatcc_builder_end_table@@Base>
   1912c:	mov	r2, r0
   19130:	ldr	r3, [fp, #-52]	; 0xffffffcc
   19134:	str	r2, [r3]
   19138:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1913c:	ldr	r3, [r3]
   19140:	cmp	r3, #0
   19144:	beq	19168 <_start@@Base+0x6ab0>
   19148:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1914c:	b	19184 <_start@@Base+0x6acc>
   19150:	nop	{0}
   19154:	b	1916c <_start@@Base+0x6ab4>
   19158:	nop	{0}
   1915c:	b	1916c <_start@@Base+0x6ab4>
   19160:	nop	{0}
   19164:	b	1916c <_start@@Base+0x6ab4>
   19168:	nop	{0}
   1916c:	mov	r3, #33	; 0x21
   19170:	ldr	r2, [fp, #-48]	; 0xffffffd0
   19174:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19178:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1917c:	bl	33258 <flatcc_json_parser_set_error@@Base>
   19180:	mov	r3, r0
   19184:	mov	r0, r3
   19188:	sub	sp, fp, #12
   1918c:	ldrd	r4, [sp]
   19190:	ldr	fp, [sp, #8]
   19194:	add	sp, sp, #12
   19198:	pop	{pc}		; (ldr pc, [sp], #4)
   1919c:	nop	{0}
   191a0:	stmdbvc	r0, {}	; <UNPREDICTABLE>
   191a4:	strbvs	r7, [sp, #-116]!	; 0xffffff8c
   191a8:	strd	r4, [sp, #-16]!
   191ac:	str	fp, [sp, #8]
   191b0:	str	lr, [sp, #12]
   191b4:	add	fp, sp, #12
   191b8:	sub	sp, sp, #48	; 0x30
   191bc:	str	r0, [fp, #-40]	; 0xffffffd8
   191c0:	str	r1, [fp, #-44]	; 0xffffffd4
   191c4:	str	r2, [fp, #-48]	; 0xffffffd0
   191c8:	str	r3, [fp, #-52]	; 0xffffffcc
   191cc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   191d0:	str	r3, [fp, #-16]
   191d4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   191d8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   191dc:	bl	13928 <_start@@Base+0x1270>
   191e0:	strd	r0, [fp, #-28]	; 0xffffffe4
   191e4:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   191e8:	mov	r0, #0
   191ec:	mov	r1, #-16777216	; 0xff000000
   191f0:	and	r4, r2, r0
   191f4:	and	r5, r3, r1
   191f8:	cmp	r5, #2013265920	; 0x78000000
   191fc:	cmpeq	r4, #0
   19200:	bne	19268 <_start@@Base+0x6bb0>
   19204:	ldr	r3, [fp, #-44]	; 0xffffffd4
   19208:	str	r3, [fp, #-32]	; 0xffffffe0
   1920c:	ldr	r3, [fp, #8]
   19210:	str	r3, [sp]
   19214:	mov	r3, #1
   19218:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1921c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   19220:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19224:	bl	3403c <flatcc_json_parser_match_constant@@Base>
   19228:	str	r0, [fp, #-44]	; 0xffffffd4
   1922c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   19230:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19234:	cmp	r2, r3
   19238:	beq	19260 <_start@@Base+0x6ba8>
   1923c:	ldr	r1, [fp, #4]
   19240:	mov	r2, #0
   19244:	mov	r3, #0
   19248:	strd	r2, [r1]
   1924c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   19250:	mov	r2, #0
   19254:	str	r2, [r3]
   19258:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1925c:	b	1926c <_start@@Base+0x6bb4>
   19260:	ldr	r3, [fp, #-16]
   19264:	b	1926c <_start@@Base+0x6bb4>
   19268:	ldr	r3, [fp, #-16]
   1926c:	mov	r0, r3
   19270:	sub	sp, fp, #12
   19274:	ldrd	r4, [sp]
   19278:	ldr	fp, [sp, #8]
   1927c:	add	sp, sp, #12
   19280:	pop	{pc}		; (ldr pc, [sp], #4)
   19284:	strd	r4, [sp, #-32]!	; 0xffffffe0
   19288:	strd	r6, [sp, #8]
   1928c:	strd	r8, [sp, #16]
   19290:	str	fp, [sp, #24]
   19294:	str	lr, [sp, #28]
   19298:	add	fp, sp, #28
   1929c:	sub	sp, sp, #56	; 0x38
   192a0:	str	r0, [fp, #-56]	; 0xffffffc8
   192a4:	str	r1, [fp, #-60]	; 0xffffffc4
   192a8:	str	r2, [fp, #-64]	; 0xffffffc0
   192ac:	str	r3, [fp, #-68]	; 0xffffffbc
   192b0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   192b4:	mov	r2, #0
   192b8:	str	r2, [r3]
   192bc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   192c0:	ldr	r3, [r3]
   192c4:	mov	r1, #4
   192c8:	mov	r0, r3
   192cc:	bl	29dfc <flatcc_builder_start_table@@Base>
   192d0:	mov	r3, r0
   192d4:	cmp	r3, #0
   192d8:	bne	19908 <_start@@Base+0x7250>
   192dc:	sub	r3, fp, #48	; 0x30
   192e0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   192e4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   192e8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   192ec:	bl	13a6c <_start@@Base+0x13b4>
   192f0:	str	r0, [fp, #-60]	; 0xffffffc4
   192f4:	b	198b8 <_start@@Base+0x7200>
   192f8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   192fc:	ldr	r1, [fp, #-60]	; 0xffffffc4
   19300:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19304:	bl	135f4 <_start@@Base+0xf3c>
   19308:	str	r0, [fp, #-60]	; 0xffffffc4
   1930c:	ldr	r1, [fp, #-64]	; 0xffffffc0
   19310:	ldr	r0, [fp, #-60]	; 0xffffffc4
   19314:	bl	13928 <_start@@Base+0x1270>
   19318:	strd	r0, [fp, #-36]	; 0xffffffdc
   1931c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   19320:	mov	r0, #0
   19324:	movt	r0, #65535	; 0xffff
   19328:	mvn	r1, #0
   1932c:	and	r4, r2, r0
   19330:	and	r5, r3, r1
   19334:	add	r3, pc, #956	; 0x3bc
   19338:	ldrd	r2, [r3]
   1933c:	cmp	r5, r3
   19340:	cmpeq	r4, r2
   19344:	bne	19458 <_start@@Base+0x6da0>
   19348:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1934c:	str	r3, [fp, #-40]	; 0xffffffd8
   19350:	mov	r3, #6
   19354:	ldr	r2, [fp, #-64]	; 0xffffffc0
   19358:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1935c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19360:	bl	13f3c <_start@@Base+0x1884>
   19364:	str	r0, [fp, #-60]	; 0xffffffc4
   19368:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1936c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   19370:	cmp	r2, r3
   19374:	beq	19590 <_start@@Base+0x6ed8>
   19378:	mov	r3, #0
   1937c:	strb	r3, [fp, #-49]	; 0xffffffcf
   19380:	ldr	r3, [fp, #-60]	; 0xffffffc4
   19384:	str	r3, [fp, #-40]	; 0xffffffd8
   19388:	sub	r3, fp, #49	; 0x31
   1938c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   19390:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19394:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19398:	bl	14e04 <_start@@Base+0x274c>
   1939c:	str	r0, [fp, #-60]	; 0xffffffc4
   193a0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   193a4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   193a8:	cmp	r2, r3
   193ac:	bne	193fc <_start@@Base+0x6d44>
   193b0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   193b4:	str	r3, [fp, #-40]	; 0xffffffd8
   193b8:	sub	r3, fp, #49	; 0x31
   193bc:	str	r3, [sp]
   193c0:	ldr	r3, [pc, #840]	; 19710 <_start@@Base+0x7058>
   193c4:	add	r3, pc, r3
   193c8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   193cc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   193d0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   193d4:	bl	15d60 <_start@@Base+0x36a8>
   193d8:	str	r0, [fp, #-60]	; 0xffffffc4
   193dc:	ldr	r2, [fp, #-60]	; 0xffffffc4
   193e0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   193e4:	cmp	r2, r3
   193e8:	beq	19910 <_start@@Base+0x7258>
   193ec:	ldr	r2, [fp, #-60]	; 0xffffffc4
   193f0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   193f4:	cmp	r2, r3
   193f8:	beq	19910 <_start@@Base+0x7258>
   193fc:	ldrsb	r3, [fp, #-49]	; 0xffffffcf
   19400:	cmp	r3, #2
   19404:	bne	1941c <_start@@Base+0x6d64>
   19408:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1940c:	ldr	r3, [r3, #8]
   19410:	and	r3, r3, #2
   19414:	cmp	r3, #0
   19418:	beq	1989c <_start@@Base+0x71e4>
   1941c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   19420:	ldr	r0, [r3]
   19424:	mov	r3, #1
   19428:	mov	r2, #1
   1942c:	mov	r1, #1
   19430:	bl	2c400 <flatcc_builder_table_add@@Base>
   19434:	str	r0, [fp, #-44]	; 0xffffffd4
   19438:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1943c:	cmp	r3, #0
   19440:	beq	19918 <_start@@Base+0x7260>
   19444:	ldrsb	r3, [fp, #-49]	; 0xffffffcf
   19448:	mov	r1, r3
   1944c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19450:	bl	129ec <_start@@Base+0x334>
   19454:	b	1989c <_start@@Base+0x71e4>
   19458:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1945c:	mov	r0, #-16777216	; 0xff000000
   19460:	mvn	r1, #0
   19464:	and	r6, r2, r0
   19468:	and	r7, r3, r1
   1946c:	add	r3, pc, #652	; 0x28c
   19470:	ldrd	r2, [r3]
   19474:	cmp	r7, r3
   19478:	cmpeq	r6, r2
   1947c:	bne	19598 <_start@@Base+0x6ee0>
   19480:	ldr	r3, [fp, #-60]	; 0xffffffc4
   19484:	str	r3, [fp, #-40]	; 0xffffffd8
   19488:	mov	r3, #5
   1948c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   19490:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19494:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19498:	bl	13f3c <_start@@Base+0x1884>
   1949c:	str	r0, [fp, #-60]	; 0xffffffc4
   194a0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   194a4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   194a8:	cmp	r2, r3
   194ac:	beq	195a0 <_start@@Base+0x6ee8>
   194b0:	mov	r3, #0
   194b4:	strb	r3, [fp, #-50]	; 0xffffffce
   194b8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   194bc:	str	r3, [fp, #-40]	; 0xffffffd8
   194c0:	sub	r3, fp, #50	; 0x32
   194c4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   194c8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   194cc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   194d0:	bl	14e04 <_start@@Base+0x274c>
   194d4:	str	r0, [fp, #-60]	; 0xffffffc4
   194d8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   194dc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   194e0:	cmp	r2, r3
   194e4:	bne	19534 <_start@@Base+0x6e7c>
   194e8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   194ec:	str	r3, [fp, #-40]	; 0xffffffd8
   194f0:	sub	r3, fp, #50	; 0x32
   194f4:	str	r3, [sp]
   194f8:	ldr	r3, [pc, #532]	; 19714 <_start@@Base+0x705c>
   194fc:	add	r3, pc, r3
   19500:	ldr	r2, [fp, #-64]	; 0xffffffc0
   19504:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19508:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1950c:	bl	15d60 <_start@@Base+0x36a8>
   19510:	str	r0, [fp, #-60]	; 0xffffffc4
   19514:	ldr	r2, [fp, #-60]	; 0xffffffc4
   19518:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1951c:	cmp	r2, r3
   19520:	beq	19920 <_start@@Base+0x7268>
   19524:	ldr	r2, [fp, #-60]	; 0xffffffc4
   19528:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1952c:	cmp	r2, r3
   19530:	beq	19920 <_start@@Base+0x7268>
   19534:	ldrsb	r3, [fp, #-50]	; 0xffffffce
   19538:	cmp	r3, #2
   1953c:	bne	19554 <_start@@Base+0x6e9c>
   19540:	ldr	r3, [fp, #-56]	; 0xffffffc8
   19544:	ldr	r3, [r3, #8]
   19548:	and	r3, r3, #2
   1954c:	cmp	r3, #0
   19550:	beq	1989c <_start@@Base+0x71e4>
   19554:	ldr	r3, [fp, #-56]	; 0xffffffc8
   19558:	ldr	r0, [r3]
   1955c:	mov	r3, #1
   19560:	mov	r2, #1
   19564:	mov	r1, #0
   19568:	bl	2c400 <flatcc_builder_table_add@@Base>
   1956c:	str	r0, [fp, #-44]	; 0xffffffd4
   19570:	ldr	r3, [fp, #-44]	; 0xffffffd4
   19574:	cmp	r3, #0
   19578:	beq	19928 <_start@@Base+0x7270>
   1957c:	ldrsb	r3, [fp, #-50]	; 0xffffffce
   19580:	mov	r1, r3
   19584:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19588:	bl	129ec <_start@@Base+0x334>
   1958c:	b	1989c <_start@@Base+0x71e4>
   19590:	nop	{0}
   19594:	b	195a4 <_start@@Base+0x6eec>
   19598:	nop	{0}
   1959c:	b	195a4 <_start@@Base+0x6eec>
   195a0:	nop	{0}
   195a4:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   195a8:	mov	r0, #0
   195ac:	mvn	r1, #255	; 0xff
   195b0:	and	r8, r2, r0
   195b4:	and	r9, r3, r1
   195b8:	add	r3, pc, #328	; 0x148
   195bc:	ldrd	r2, [r3]
   195c0:	cmp	r9, r3
   195c4:	cmpeq	r8, r2
   195c8:	bne	19720 <_start@@Base+0x7068>
   195cc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   195d0:	str	r3, [fp, #-40]	; 0xffffffd8
   195d4:	mov	r3, #3
   195d8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   195dc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   195e0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   195e4:	bl	13f3c <_start@@Base+0x1884>
   195e8:	str	r0, [fp, #-60]	; 0xffffffc4
   195ec:	ldr	r2, [fp, #-40]	; 0xffffffd8
   195f0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   195f4:	cmp	r2, r3
   195f8:	beq	196dc <_start@@Base+0x7024>
   195fc:	mov	r3, #0
   19600:	strb	r3, [fp, #-51]	; 0xffffffcd
   19604:	ldr	r3, [fp, #-60]	; 0xffffffc4
   19608:	str	r3, [fp, #-40]	; 0xffffffd8
   1960c:	sub	r3, fp, #51	; 0x33
   19610:	ldr	r2, [fp, #-64]	; 0xffffffc0
   19614:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19618:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1961c:	bl	14a90 <_start@@Base+0x23d8>
   19620:	str	r0, [fp, #-60]	; 0xffffffc4
   19624:	ldr	r2, [fp, #-40]	; 0xffffffd8
   19628:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1962c:	cmp	r2, r3
   19630:	bne	19680 <_start@@Base+0x6fc8>
   19634:	ldr	r3, [fp, #-60]	; 0xffffffc4
   19638:	str	r3, [fp, #-40]	; 0xffffffd8
   1963c:	sub	r3, fp, #51	; 0x33
   19640:	str	r3, [sp]
   19644:	ldr	r3, [pc, #204]	; 19718 <_start@@Base+0x7060>
   19648:	add	r3, pc, r3
   1964c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   19650:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19654:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19658:	bl	155b8 <_start@@Base+0x2f00>
   1965c:	str	r0, [fp, #-60]	; 0xffffffc4
   19660:	ldr	r2, [fp, #-60]	; 0xffffffc4
   19664:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19668:	cmp	r2, r3
   1966c:	beq	19930 <_start@@Base+0x7278>
   19670:	ldr	r2, [fp, #-60]	; 0xffffffc4
   19674:	ldr	r3, [fp, #-64]	; 0xffffffc0
   19678:	cmp	r2, r3
   1967c:	beq	19930 <_start@@Base+0x7278>
   19680:	ldrb	r3, [fp, #-51]	; 0xffffffcd
   19684:	cmp	r3, #2
   19688:	bne	196a0 <_start@@Base+0x6fe8>
   1968c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   19690:	ldr	r3, [r3, #8]
   19694:	and	r3, r3, #2
   19698:	cmp	r3, #0
   1969c:	beq	198a0 <_start@@Base+0x71e8>
   196a0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   196a4:	ldr	r0, [r3]
   196a8:	mov	r3, #1
   196ac:	mov	r2, #1
   196b0:	mov	r1, #3
   196b4:	bl	2c400 <flatcc_builder_table_add@@Base>
   196b8:	str	r0, [fp, #-44]	; 0xffffffd4
   196bc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   196c0:	cmp	r3, #0
   196c4:	beq	19938 <_start@@Base+0x7280>
   196c8:	ldrb	r3, [fp, #-51]	; 0xffffffcd
   196cc:	mov	r1, r3
   196d0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   196d4:	bl	127d0 <_start@@Base+0x118>
   196d8:	b	198a0 <_start@@Base+0x71e8>
   196dc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   196e0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   196e4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   196e8:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   196ec:	str	r0, [fp, #-60]	; 0xffffffc4
   196f0:	b	198a0 <_start@@Base+0x71e8>
   196f4:	nop	{0}
   196f8:	eorsvc	r0, r2, #0
   196fc:	cmnvs	pc, #28416	; 0x6f00
   19700:	andvc	r0, r0, #0
   19704:	cmnvs	pc, #28416	; 0x6f00
   19708:	andeq	r0, r0, r0
   1970c:	strbvc	r3, [r3, #-512]!	; 0xfffffe00
   19710:	strdeq	pc, [r2], -r0
   19714:	andeq	pc, r2, r8, asr #23
   19718:	andeq	pc, r2, ip, lsl #21
   1971c:	andeq	pc, r2, r8, lsl #18
   19720:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   19724:	mov	r0, #0
   19728:	mov	r1, #0
   1972c:	movt	r1, #65535	; 0xffff
   19730:	and	ip, r2, r0
   19734:	str	ip, [fp, #-76]	; 0xffffffb4
   19738:	and	r3, r3, r1
   1973c:	str	r3, [fp, #-72]	; 0xffffffb8
   19740:	mov	r2, #0
   19744:	mov	r3, #0
   19748:	movt	r3, #30051	; 0x7563
   1974c:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   19750:	cmp	r1, r3
   19754:	cmpeq	r0, r2
   19758:	bne	19884 <_start@@Base+0x71cc>
   1975c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   19760:	str	r3, [fp, #-40]	; 0xffffffd8
   19764:	mov	r3, #2
   19768:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1976c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19770:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19774:	bl	13f3c <_start@@Base+0x1884>
   19778:	str	r0, [fp, #-60]	; 0xffffffc4
   1977c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   19780:	ldr	r3, [fp, #-60]	; 0xffffffc4
   19784:	cmp	r2, r3
   19788:	beq	1986c <_start@@Base+0x71b4>
   1978c:	mov	r3, #0
   19790:	strb	r3, [fp, #-52]	; 0xffffffcc
   19794:	ldr	r3, [fp, #-60]	; 0xffffffc4
   19798:	str	r3, [fp, #-40]	; 0xffffffd8
   1979c:	sub	r3, fp, #52	; 0x34
   197a0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   197a4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   197a8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   197ac:	bl	14a90 <_start@@Base+0x23d8>
   197b0:	str	r0, [fp, #-60]	; 0xffffffc4
   197b4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   197b8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   197bc:	cmp	r2, r3
   197c0:	bne	19810 <_start@@Base+0x7158>
   197c4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   197c8:	str	r3, [fp, #-40]	; 0xffffffd8
   197cc:	sub	r3, fp, #52	; 0x34
   197d0:	str	r3, [sp]
   197d4:	ldr	r3, [pc, #-192]	; 1971c <_start@@Base+0x7064>
   197d8:	add	r3, pc, r3
   197dc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   197e0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   197e4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   197e8:	bl	155b8 <_start@@Base+0x2f00>
   197ec:	str	r0, [fp, #-60]	; 0xffffffc4
   197f0:	ldr	r2, [fp, #-60]	; 0xffffffc4
   197f4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   197f8:	cmp	r2, r3
   197fc:	beq	19940 <_start@@Base+0x7288>
   19800:	ldr	r2, [fp, #-60]	; 0xffffffc4
   19804:	ldr	r3, [fp, #-64]	; 0xffffffc0
   19808:	cmp	r2, r3
   1980c:	beq	19940 <_start@@Base+0x7288>
   19810:	ldrb	r3, [fp, #-52]	; 0xffffffcc
   19814:	cmp	r3, #2
   19818:	bne	19830 <_start@@Base+0x7178>
   1981c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   19820:	ldr	r3, [r3, #8]
   19824:	and	r3, r3, #2
   19828:	cmp	r3, #0
   1982c:	beq	198a0 <_start@@Base+0x71e8>
   19830:	ldr	r3, [fp, #-56]	; 0xffffffc8
   19834:	ldr	r0, [r3]
   19838:	mov	r3, #1
   1983c:	mov	r2, #1
   19840:	mov	r1, #2
   19844:	bl	2c400 <flatcc_builder_table_add@@Base>
   19848:	str	r0, [fp, #-44]	; 0xffffffd4
   1984c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   19850:	cmp	r3, #0
   19854:	beq	19948 <_start@@Base+0x7290>
   19858:	ldrb	r3, [fp, #-52]	; 0xffffffcc
   1985c:	mov	r1, r3
   19860:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19864:	bl	127d0 <_start@@Base+0x118>
   19868:	b	198a0 <_start@@Base+0x71e8>
   1986c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   19870:	ldr	r1, [fp, #-60]	; 0xffffffc4
   19874:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19878:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1987c:	str	r0, [fp, #-60]	; 0xffffffc4
   19880:	b	198a0 <_start@@Base+0x71e8>
   19884:	ldr	r2, [fp, #-64]	; 0xffffffc0
   19888:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1988c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19890:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   19894:	str	r0, [fp, #-60]	; 0xffffffc4
   19898:	b	198a0 <_start@@Base+0x71e8>
   1989c:	nop	{0}
   198a0:	sub	r3, fp, #48	; 0x30
   198a4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   198a8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   198ac:	ldr	r0, [fp, #-56]	; 0xffffffc8
   198b0:	bl	13b60 <_start@@Base+0x14a8>
   198b4:	str	r0, [fp, #-60]	; 0xffffffc4
   198b8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   198bc:	cmp	r3, #0
   198c0:	bne	192f8 <_start@@Base+0x6c40>
   198c4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   198c8:	ldr	r3, [r3, #24]
   198cc:	cmp	r3, #0
   198d0:	bne	19950 <_start@@Base+0x7298>
   198d4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   198d8:	ldr	r3, [r3]
   198dc:	mov	r0, r3
   198e0:	bl	2a9b0 <flatcc_builder_end_table@@Base>
   198e4:	mov	r2, r0
   198e8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   198ec:	str	r2, [r3]
   198f0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   198f4:	ldr	r3, [r3]
   198f8:	cmp	r3, #0
   198fc:	beq	19958 <_start@@Base+0x72a0>
   19900:	ldr	r3, [fp, #-60]	; 0xffffffc4
   19904:	b	19974 <_start@@Base+0x72bc>
   19908:	nop	{0}
   1990c:	b	1995c <_start@@Base+0x72a4>
   19910:	nop	{0}
   19914:	b	1995c <_start@@Base+0x72a4>
   19918:	nop	{0}
   1991c:	b	1995c <_start@@Base+0x72a4>
   19920:	nop	{0}
   19924:	b	1995c <_start@@Base+0x72a4>
   19928:	nop	{0}
   1992c:	b	1995c <_start@@Base+0x72a4>
   19930:	nop	{0}
   19934:	b	1995c <_start@@Base+0x72a4>
   19938:	nop	{0}
   1993c:	b	1995c <_start@@Base+0x72a4>
   19940:	nop	{0}
   19944:	b	1995c <_start@@Base+0x72a4>
   19948:	nop	{0}
   1994c:	b	1995c <_start@@Base+0x72a4>
   19950:	nop	{0}
   19954:	b	1995c <_start@@Base+0x72a4>
   19958:	nop	{0}
   1995c:	mov	r3, #33	; 0x21
   19960:	ldr	r2, [fp, #-64]	; 0xffffffc0
   19964:	ldr	r1, [fp, #-60]	; 0xffffffc4
   19968:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1996c:	bl	33258 <flatcc_json_parser_set_error@@Base>
   19970:	mov	r3, r0
   19974:	mov	r0, r3
   19978:	sub	sp, fp, #28
   1997c:	ldrd	r4, [sp]
   19980:	ldrd	r6, [sp, #8]
   19984:	ldrd	r8, [sp, #16]
   19988:	ldr	fp, [sp, #24]
   1998c:	add	sp, sp, #28
   19990:	pop	{pc}		; (ldr pc, [sp], #4)
   19994:	strd	r4, [sp, #-32]!	; 0xffffffe0
   19998:	strd	r6, [sp, #8]
   1999c:	strd	r8, [sp, #16]
   199a0:	str	fp, [sp, #24]
   199a4:	str	lr, [sp, #28]
   199a8:	add	fp, sp, #28
   199ac:	sub	sp, sp, #112	; 0x70
   199b0:	str	r0, [fp, #-96]	; 0xffffffa0
   199b4:	str	r1, [fp, #-100]	; 0xffffff9c
   199b8:	str	r2, [fp, #-104]	; 0xffffff98
   199bc:	str	r3, [fp, #-108]	; 0xffffff94
   199c0:	ldr	r3, [fp, #-108]	; 0xffffff94
   199c4:	mov	r2, #0
   199c8:	str	r2, [r3]
   199cc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   199d0:	ldr	r3, [r3]
   199d4:	mov	r1, #6
   199d8:	mov	r0, r3
   199dc:	bl	29dfc <flatcc_builder_start_table@@Base>
   199e0:	mov	r3, r0
   199e4:	cmp	r3, #0
   199e8:	bne	1a2f8 <_start@@Base+0x7c40>
   199ec:	sub	r3, fp, #48	; 0x30
   199f0:	ldr	r2, [fp, #-104]	; 0xffffff98
   199f4:	ldr	r1, [fp, #-100]	; 0xffffff9c
   199f8:	ldr	r0, [fp, #-96]	; 0xffffffa0
   199fc:	bl	13a6c <_start@@Base+0x13b4>
   19a00:	str	r0, [fp, #-100]	; 0xffffff9c
   19a04:	b	1a2a8 <_start@@Base+0x7bf0>
   19a08:	ldr	r2, [fp, #-104]	; 0xffffff98
   19a0c:	ldr	r1, [fp, #-100]	; 0xffffff9c
   19a10:	ldr	r0, [fp, #-96]	; 0xffffffa0
   19a14:	bl	135f4 <_start@@Base+0xf3c>
   19a18:	str	r0, [fp, #-100]	; 0xffffff9c
   19a1c:	ldr	r1, [fp, #-104]	; 0xffffff98
   19a20:	ldr	r0, [fp, #-100]	; 0xffffff9c
   19a24:	bl	13928 <_start@@Base+0x1270>
   19a28:	strd	r0, [fp, #-36]	; 0xffffffdc
   19a2c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   19a30:	add	r3, pc, #944	; 0x3b0
   19a34:	ldrd	r2, [r3]
   19a38:	cmp	r1, r3
   19a3c:	cmpeq	r0, r2
   19a40:	bhi	19b14 <_start@@Base+0x745c>
   19a44:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   19a48:	mov	r2, #0
   19a4c:	movt	r2, #65535	; 0xffff
   19a50:	mvn	r3, #0
   19a54:	and	r4, r0, r2
   19a58:	and	r5, r1, r3
   19a5c:	add	r3, pc, #908	; 0x38c
   19a60:	ldrd	r2, [r3]
   19a64:	cmp	r5, r3
   19a68:	cmpeq	r4, r2
   19a6c:	bne	19afc <_start@@Base+0x7444>
   19a70:	ldr	r3, [fp, #-100]	; 0xffffff9c
   19a74:	str	r3, [fp, #-40]	; 0xffffffd8
   19a78:	mov	r3, #6
   19a7c:	ldr	r2, [fp, #-104]	; 0xffffff98
   19a80:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19a84:	ldr	r0, [fp, #-96]	; 0xffffffa0
   19a88:	bl	13f3c <_start@@Base+0x1884>
   19a8c:	str	r0, [fp, #-100]	; 0xffffff9c
   19a90:	ldr	r2, [fp, #-40]	; 0xffffffd8
   19a94:	ldr	r3, [fp, #-100]	; 0xffffff9c
   19a98:	cmp	r2, r3
   19a9c:	beq	19ae4 <_start@@Base+0x742c>
   19aa0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19aa4:	ldr	r0, [r3]
   19aa8:	mov	r3, #1
   19aac:	mov	r2, #0
   19ab0:	mov	r1, #0
   19ab4:	bl	2c400 <flatcc_builder_table_add@@Base>
   19ab8:	str	r0, [fp, #-44]	; 0xffffffd4
   19abc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   19ac0:	cmp	r3, #0
   19ac4:	beq	1a300 <_start@@Base+0x7c48>
   19ac8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   19acc:	ldr	r2, [fp, #-104]	; 0xffffff98
   19ad0:	ldr	r1, [fp, #-100]	; 0xffffff9c
   19ad4:	ldr	r0, [fp, #-96]	; 0xffffffa0
   19ad8:	bl	171c0 <_start@@Base+0x4b08>
   19adc:	str	r0, [fp, #-100]	; 0xffffff9c
   19ae0:	b	1a290 <_start@@Base+0x7bd8>
   19ae4:	ldr	r2, [fp, #-104]	; 0xffffff98
   19ae8:	ldr	r1, [fp, #-100]	; 0xffffff9c
   19aec:	ldr	r0, [fp, #-96]	; 0xffffffa0
   19af0:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   19af4:	str	r0, [fp, #-100]	; 0xffffff9c
   19af8:	b	1a290 <_start@@Base+0x7bd8>
   19afc:	ldr	r2, [fp, #-104]	; 0xffffff98
   19b00:	ldr	r1, [fp, #-100]	; 0xffffff9c
   19b04:	ldr	r0, [fp, #-96]	; 0xffffffa0
   19b08:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   19b0c:	str	r0, [fp, #-100]	; 0xffffff9c
   19b10:	b	1a290 <_start@@Base+0x7bd8>
   19b14:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   19b18:	add	r3, pc, #728	; 0x2d8
   19b1c:	ldrd	r2, [r3]
   19b20:	cmp	r1, r3
   19b24:	cmpeq	r0, r2
   19b28:	bhi	19e18 <_start@@Base+0x7760>
   19b2c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   19b30:	mvn	r2, #255	; 0xff
   19b34:	mvn	r3, #0
   19b38:	and	r6, r0, r2
   19b3c:	and	r7, r1, r3
   19b40:	add	r3, pc, #696	; 0x2b8
   19b44:	ldrd	r2, [r3]
   19b48:	cmp	r7, r3
   19b4c:	cmpeq	r6, r2
   19b50:	bne	19c7c <_start@@Base+0x75c4>
   19b54:	ldr	r3, [fp, #-100]	; 0xffffff9c
   19b58:	str	r3, [fp, #-40]	; 0xffffffd8
   19b5c:	mov	r3, #7
   19b60:	ldr	r2, [fp, #-104]	; 0xffffff98
   19b64:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19b68:	ldr	r0, [fp, #-96]	; 0xffffffa0
   19b6c:	bl	13f3c <_start@@Base+0x1884>
   19b70:	str	r0, [fp, #-100]	; 0xffffff9c
   19b74:	ldr	r2, [fp, #-40]	; 0xffffffd8
   19b78:	ldr	r3, [fp, #-100]	; 0xffffff9c
   19b7c:	cmp	r2, r3
   19b80:	beq	19c64 <_start@@Base+0x75ac>
   19b84:	mov	r2, #0
   19b88:	mov	r3, #0
   19b8c:	strd	r2, [fp, #-60]	; 0xffffffc4
   19b90:	ldr	r3, [fp, #-100]	; 0xffffff9c
   19b94:	str	r3, [fp, #-40]	; 0xffffffd8
   19b98:	sub	r3, fp, #60	; 0x3c
   19b9c:	ldr	r2, [fp, #-104]	; 0xffffff98
   19ba0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19ba4:	ldr	r0, [fp, #-96]	; 0xffffffa0
   19ba8:	bl	14b6c <_start@@Base+0x24b4>
   19bac:	str	r0, [fp, #-100]	; 0xffffff9c
   19bb0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   19bb4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   19bb8:	cmp	r2, r3
   19bbc:	bne	19c0c <_start@@Base+0x7554>
   19bc0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   19bc4:	str	r3, [fp, #-40]	; 0xffffffd8
   19bc8:	sub	r3, fp, #60	; 0x3c
   19bcc:	str	r3, [sp]
   19bd0:	ldr	r3, [pc, #568]	; 19e10 <_start@@Base+0x7758>
   19bd4:	add	r3, pc, r3
   19bd8:	ldr	r2, [fp, #-104]	; 0xffffff98
   19bdc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19be0:	ldr	r0, [fp, #-96]	; 0xffffffa0
   19be4:	bl	1579c <_start@@Base+0x30e4>
   19be8:	str	r0, [fp, #-100]	; 0xffffff9c
   19bec:	ldr	r2, [fp, #-100]	; 0xffffff9c
   19bf0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19bf4:	cmp	r2, r3
   19bf8:	beq	1a308 <_start@@Base+0x7c50>
   19bfc:	ldr	r2, [fp, #-100]	; 0xffffff9c
   19c00:	ldr	r3, [fp, #-104]	; 0xffffff98
   19c04:	cmp	r2, r3
   19c08:	beq	1a308 <_start@@Base+0x7c50>
   19c0c:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   19c10:	orrs	r3, r2, r3
   19c14:	bne	19c2c <_start@@Base+0x7574>
   19c18:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19c1c:	ldr	r3, [r3, #8]
   19c20:	and	r3, r3, #2
   19c24:	cmp	r3, #0
   19c28:	beq	1a290 <_start@@Base+0x7bd8>
   19c2c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19c30:	ldr	r0, [r3]
   19c34:	mov	r3, #8
   19c38:	mov	r2, #8
   19c3c:	mov	r1, #2
   19c40:	bl	2c400 <flatcc_builder_table_add@@Base>
   19c44:	str	r0, [fp, #-44]	; 0xffffffd4
   19c48:	ldr	r3, [fp, #-44]	; 0xffffffd4
   19c4c:	cmp	r3, #0
   19c50:	beq	1a310 <_start@@Base+0x7c58>
   19c54:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   19c58:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19c5c:	bl	12b9c <_start@@Base+0x4e4>
   19c60:	b	1a290 <_start@@Base+0x7bd8>
   19c64:	ldr	r2, [fp, #-104]	; 0xffffff98
   19c68:	ldr	r1, [fp, #-100]	; 0xffffff9c
   19c6c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   19c70:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   19c74:	str	r0, [fp, #-100]	; 0xffffff9c
   19c78:	b	1a290 <_start@@Base+0x7bd8>
   19c7c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   19c80:	mov	r2, #0
   19c84:	movt	r2, #65535	; 0xffff
   19c88:	mvn	r3, #0
   19c8c:	and	r8, r0, r2
   19c90:	and	r9, r1, r3
   19c94:	add	r3, pc, #364	; 0x16c
   19c98:	ldrd	r2, [r3]
   19c9c:	cmp	r9, r3
   19ca0:	cmpeq	r8, r2
   19ca4:	bne	19dd0 <_start@@Base+0x7718>
   19ca8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   19cac:	str	r3, [fp, #-40]	; 0xffffffd8
   19cb0:	mov	r3, #6
   19cb4:	ldr	r2, [fp, #-104]	; 0xffffff98
   19cb8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19cbc:	ldr	r0, [fp, #-96]	; 0xffffffa0
   19cc0:	bl	13f3c <_start@@Base+0x1884>
   19cc4:	str	r0, [fp, #-100]	; 0xffffff9c
   19cc8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   19ccc:	ldr	r3, [fp, #-100]	; 0xffffff9c
   19cd0:	cmp	r2, r3
   19cd4:	beq	19db8 <_start@@Base+0x7700>
   19cd8:	mov	r2, #0
   19cdc:	mov	r3, #0
   19ce0:	strd	r2, [fp, #-68]	; 0xffffffbc
   19ce4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   19ce8:	str	r3, [fp, #-40]	; 0xffffffd8
   19cec:	sub	r3, fp, #68	; 0x44
   19cf0:	ldr	r2, [fp, #-104]	; 0xffffff98
   19cf4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19cf8:	ldr	r0, [fp, #-96]	; 0xffffffa0
   19cfc:	bl	14b6c <_start@@Base+0x24b4>
   19d00:	str	r0, [fp, #-100]	; 0xffffff9c
   19d04:	ldr	r2, [fp, #-40]	; 0xffffffd8
   19d08:	ldr	r3, [fp, #-100]	; 0xffffff9c
   19d0c:	cmp	r2, r3
   19d10:	bne	19d60 <_start@@Base+0x76a8>
   19d14:	ldr	r3, [fp, #-100]	; 0xffffff9c
   19d18:	str	r3, [fp, #-40]	; 0xffffffd8
   19d1c:	sub	r3, fp, #68	; 0x44
   19d20:	str	r3, [sp]
   19d24:	ldr	r3, [pc, #232]	; 19e14 <_start@@Base+0x775c>
   19d28:	add	r3, pc, r3
   19d2c:	ldr	r2, [fp, #-104]	; 0xffffff98
   19d30:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19d34:	ldr	r0, [fp, #-96]	; 0xffffffa0
   19d38:	bl	1579c <_start@@Base+0x30e4>
   19d3c:	str	r0, [fp, #-100]	; 0xffffff9c
   19d40:	ldr	r2, [fp, #-100]	; 0xffffff9c
   19d44:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19d48:	cmp	r2, r3
   19d4c:	beq	1a318 <_start@@Base+0x7c60>
   19d50:	ldr	r2, [fp, #-100]	; 0xffffff9c
   19d54:	ldr	r3, [fp, #-104]	; 0xffffff98
   19d58:	cmp	r2, r3
   19d5c:	beq	1a318 <_start@@Base+0x7c60>
   19d60:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   19d64:	orrs	r3, r2, r3
   19d68:	bne	19d80 <_start@@Base+0x76c8>
   19d6c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19d70:	ldr	r3, [r3, #8]
   19d74:	and	r3, r3, #2
   19d78:	cmp	r3, #0
   19d7c:	beq	1a290 <_start@@Base+0x7bd8>
   19d80:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19d84:	ldr	r0, [r3]
   19d88:	mov	r3, #8
   19d8c:	mov	r2, #8
   19d90:	mov	r1, #1
   19d94:	bl	2c400 <flatcc_builder_table_add@@Base>
   19d98:	str	r0, [fp, #-44]	; 0xffffffd4
   19d9c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   19da0:	cmp	r3, #0
   19da4:	beq	1a320 <_start@@Base+0x7c68>
   19da8:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   19dac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19db0:	bl	12b9c <_start@@Base+0x4e4>
   19db4:	b	1a290 <_start@@Base+0x7bd8>
   19db8:	ldr	r2, [fp, #-104]	; 0xffffff98
   19dbc:	ldr	r1, [fp, #-100]	; 0xffffff9c
   19dc0:	ldr	r0, [fp, #-96]	; 0xffffffa0
   19dc4:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   19dc8:	str	r0, [fp, #-100]	; 0xffffff9c
   19dcc:	b	1a290 <_start@@Base+0x7bd8>
   19dd0:	ldr	r2, [fp, #-104]	; 0xffffff98
   19dd4:	ldr	r1, [fp, #-100]	; 0xffffff9c
   19dd8:	ldr	r0, [fp, #-96]	; 0xffffffa0
   19ddc:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   19de0:	str	r0, [fp, #-100]	; 0xffffff9c
   19de4:	b	1a290 <_start@@Base+0x7bd8>
   19de8:	strdvs	pc, [fp, #-255]!	; 0xffffff01
   19dec:	stmdbvs	lr!, {r1, r2, r4, r5, r6, r8, r9, sp, lr}^
   19df0:	cmnvs	ip, r0
   19df4:	strbvs	r6, [ip, -r2, ror #30]!
   19df8:	strdvs	r3, [ip, #-47]!	; 0xffffffd1
   19dfc:	stmdbvs	lr!, {r1, r2, r4, r5, r6, r8, r9, sp, lr}^
   19e00:	cmnvs	ip, r0, lsl #4
   19e04:	stmdbvs	lr!, {r1, r2, r4, r5, r6, r8, r9, sp, lr}^
   19e08:	cmnvs	ip, r0
   19e0c:	stmdbvs	lr!, {r1, r2, r4, r5, r6, r8, r9, sp, lr}^
   19e10:	andeq	pc, r2, r8, lsl r5	; <UNPREDICTABLE>
   19e14:	ldrdeq	pc, [r2], -r4
   19e18:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   19e1c:	add	r3, pc, #732	; 0x2dc
   19e20:	ldrd	r2, [r3]
   19e24:	cmp	r1, r3
   19e28:	cmpeq	r0, r2
   19e2c:	bhi	19fa4 <_start@@Base+0x78ec>
   19e30:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   19e34:	mvn	r2, #255	; 0xff
   19e38:	mvn	r3, #0
   19e3c:	and	ip, r0, r2
   19e40:	str	ip, [fp, #-116]	; 0xffffff8c
   19e44:	and	r3, r1, r3
   19e48:	str	r3, [fp, #-112]	; 0xffffff90
   19e4c:	add	r3, pc, #692	; 0x2b4
   19e50:	ldrd	r2, [r3]
   19e54:	ldrd	r0, [fp, #-116]	; 0xffffff8c
   19e58:	cmp	r1, r3
   19e5c:	cmpeq	r0, r2
   19e60:	bne	19f8c <_start@@Base+0x78d4>
   19e64:	ldr	r3, [fp, #-100]	; 0xffffff9c
   19e68:	str	r3, [fp, #-40]	; 0xffffffd8
   19e6c:	mov	r3, #7
   19e70:	ldr	r2, [fp, #-104]	; 0xffffff98
   19e74:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19e78:	ldr	r0, [fp, #-96]	; 0xffffffa0
   19e7c:	bl	13f3c <_start@@Base+0x1884>
   19e80:	str	r0, [fp, #-100]	; 0xffffff9c
   19e84:	ldr	r2, [fp, #-40]	; 0xffffffd8
   19e88:	ldr	r3, [fp, #-100]	; 0xffffff9c
   19e8c:	cmp	r2, r3
   19e90:	beq	19f74 <_start@@Base+0x78bc>
   19e94:	mov	r3, #0
   19e98:	str	r3, [fp, #-72]	; 0xffffffb8
   19e9c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   19ea0:	str	r3, [fp, #-40]	; 0xffffffd8
   19ea4:	sub	r3, fp, #72	; 0x48
   19ea8:	ldr	r2, [fp, #-104]	; 0xffffff98
   19eac:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19eb0:	ldr	r0, [fp, #-96]	; 0xffffffa0
   19eb4:	bl	14c4c <_start@@Base+0x2594>
   19eb8:	str	r0, [fp, #-100]	; 0xffffff9c
   19ebc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   19ec0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   19ec4:	cmp	r2, r3
   19ec8:	bne	19f18 <_start@@Base+0x7860>
   19ecc:	ldr	r3, [fp, #-100]	; 0xffffff9c
   19ed0:	str	r3, [fp, #-40]	; 0xffffffd8
   19ed4:	sub	r3, fp, #72	; 0x48
   19ed8:	str	r3, [sp]
   19edc:	ldr	r3, [pc, #564]	; 1a118 <_start@@Base+0x7a60>
   19ee0:	add	r3, pc, r3
   19ee4:	ldr	r2, [fp, #-104]	; 0xffffff98
   19ee8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19eec:	ldr	r0, [fp, #-96]	; 0xffffffa0
   19ef0:	bl	15990 <_start@@Base+0x32d8>
   19ef4:	str	r0, [fp, #-100]	; 0xffffff9c
   19ef8:	ldr	r2, [fp, #-100]	; 0xffffff9c
   19efc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19f00:	cmp	r2, r3
   19f04:	beq	1a328 <_start@@Base+0x7c70>
   19f08:	ldr	r2, [fp, #-100]	; 0xffffff9c
   19f0c:	ldr	r3, [fp, #-104]	; 0xffffff98
   19f10:	cmp	r2, r3
   19f14:	beq	1a328 <_start@@Base+0x7c70>
   19f18:	ldr	r3, [fp, #-72]	; 0xffffffb8
   19f1c:	cmp	r3, #0
   19f20:	bne	19f38 <_start@@Base+0x7880>
   19f24:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19f28:	ldr	r3, [r3, #8]
   19f2c:	and	r3, r3, #2
   19f30:	cmp	r3, #0
   19f34:	beq	1a290 <_start@@Base+0x7bd8>
   19f38:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19f3c:	ldr	r0, [r3]
   19f40:	mov	r3, #4
   19f44:	mov	r2, #4
   19f48:	mov	r1, #3
   19f4c:	bl	2c400 <flatcc_builder_table_add@@Base>
   19f50:	str	r0, [fp, #-44]	; 0xffffffd4
   19f54:	ldr	r3, [fp, #-44]	; 0xffffffd4
   19f58:	cmp	r3, #0
   19f5c:	beq	1a330 <_start@@Base+0x7c78>
   19f60:	ldr	r3, [fp, #-72]	; 0xffffffb8
   19f64:	mov	r1, r3
   19f68:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19f6c:	bl	12b34 <_start@@Base+0x47c>
   19f70:	b	1a290 <_start@@Base+0x7bd8>
   19f74:	ldr	r2, [fp, #-104]	; 0xffffff98
   19f78:	ldr	r1, [fp, #-100]	; 0xffffff9c
   19f7c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   19f80:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   19f84:	str	r0, [fp, #-100]	; 0xffffff9c
   19f88:	b	1a290 <_start@@Base+0x7bd8>
   19f8c:	ldr	r2, [fp, #-104]	; 0xffffff98
   19f90:	ldr	r1, [fp, #-100]	; 0xffffff9c
   19f94:	ldr	r0, [fp, #-96]	; 0xffffffa0
   19f98:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   19f9c:	str	r0, [fp, #-100]	; 0xffffff9c
   19fa0:	b	1a290 <_start@@Base+0x7bd8>
   19fa4:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   19fa8:	mvn	r2, #255	; 0xff
   19fac:	mvn	r3, #0
   19fb0:	and	ip, r0, r2
   19fb4:	str	ip, [fp, #-124]	; 0xffffff84
   19fb8:	and	r3, r1, r3
   19fbc:	str	r3, [fp, #-120]	; 0xffffff88
   19fc0:	add	r3, pc, #328	; 0x148
   19fc4:	ldrd	r2, [r3]
   19fc8:	ldrd	r0, [fp, #-124]	; 0xffffff84
   19fcc:	cmp	r1, r3
   19fd0:	cmpeq	r0, r2
   19fd4:	bne	1a120 <_start@@Base+0x7a68>
   19fd8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   19fdc:	str	r3, [fp, #-40]	; 0xffffffd8
   19fe0:	mov	r3, #7
   19fe4:	ldr	r2, [fp, #-104]	; 0xffffff98
   19fe8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19fec:	ldr	r0, [fp, #-96]	; 0xffffffa0
   19ff0:	bl	13f3c <_start@@Base+0x1884>
   19ff4:	str	r0, [fp, #-100]	; 0xffffff9c
   19ff8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   19ffc:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1a000:	cmp	r2, r3
   1a004:	beq	1a0e8 <_start@@Base+0x7a30>
   1a008:	mov	r2, #0
   1a00c:	mov	r3, #0
   1a010:	strd	r2, [fp, #-84]	; 0xffffffac
   1a014:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1a018:	str	r3, [fp, #-40]	; 0xffffffd8
   1a01c:	sub	r3, fp, #84	; 0x54
   1a020:	ldr	r2, [fp, #-104]	; 0xffffff98
   1a024:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a028:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1a02c:	bl	14b6c <_start@@Base+0x24b4>
   1a030:	str	r0, [fp, #-100]	; 0xffffff9c
   1a034:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1a038:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1a03c:	cmp	r2, r3
   1a040:	bne	1a090 <_start@@Base+0x79d8>
   1a044:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1a048:	str	r3, [fp, #-40]	; 0xffffffd8
   1a04c:	sub	r3, fp, #84	; 0x54
   1a050:	str	r3, [sp]
   1a054:	ldr	r3, [pc, #192]	; 1a11c <_start@@Base+0x7a64>
   1a058:	add	r3, pc, r3
   1a05c:	ldr	r2, [fp, #-104]	; 0xffffff98
   1a060:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a064:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1a068:	bl	1579c <_start@@Base+0x30e4>
   1a06c:	str	r0, [fp, #-100]	; 0xffffff9c
   1a070:	ldr	r2, [fp, #-100]	; 0xffffff9c
   1a074:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a078:	cmp	r2, r3
   1a07c:	beq	1a338 <_start@@Base+0x7c80>
   1a080:	ldr	r2, [fp, #-100]	; 0xffffff9c
   1a084:	ldr	r3, [fp, #-104]	; 0xffffff98
   1a088:	cmp	r2, r3
   1a08c:	beq	1a338 <_start@@Base+0x7c80>
   1a090:	ldrd	r2, [fp, #-84]	; 0xffffffac
   1a094:	orrs	r3, r2, r3
   1a098:	bne	1a0b0 <_start@@Base+0x79f8>
   1a09c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a0a0:	ldr	r3, [r3, #8]
   1a0a4:	and	r3, r3, #2
   1a0a8:	cmp	r3, #0
   1a0ac:	beq	1a290 <_start@@Base+0x7bd8>
   1a0b0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a0b4:	ldr	r0, [r3]
   1a0b8:	mov	r3, #8
   1a0bc:	mov	r2, #8
   1a0c0:	mov	r1, #5
   1a0c4:	bl	2c400 <flatcc_builder_table_add@@Base>
   1a0c8:	str	r0, [fp, #-44]	; 0xffffffd4
   1a0cc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1a0d0:	cmp	r3, #0
   1a0d4:	beq	1a340 <_start@@Base+0x7c88>
   1a0d8:	ldrd	r2, [fp, #-84]	; 0xffffffac
   1a0dc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a0e0:	bl	12b9c <_start@@Base+0x4e4>
   1a0e4:	b	1a290 <_start@@Base+0x7bd8>
   1a0e8:	ldr	r2, [fp, #-104]	; 0xffffff98
   1a0ec:	ldr	r1, [fp, #-100]	; 0xffffff9c
   1a0f0:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1a0f4:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1a0f8:	str	r0, [fp, #-100]	; 0xffffff9c
   1a0fc:	b	1a290 <_start@@Base+0x7bd8>
   1a100:	strdvs	r3, [ip, #-63]!	; 0xffffffc1
   1a104:	stmdbvs	lr!, {r1, r2, r4, r5, r6, r8, r9, sp, lr}^
   1a108:	cmnvs	ip, r0, lsl #6
   1a10c:	stmdbvs	lr!, {r1, r2, r4, r5, r6, r8, r9, sp, lr}^
   1a110:	cmnvs	ip, r0, lsl #10
   1a114:	stmdbvs	lr!, {r1, r2, r4, r5, r6, r8, r9, sp, lr}^
   1a118:	andeq	pc, r2, ip, lsr #4
   1a11c:	andeq	pc, r2, r0, asr #1
   1a120:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1a124:	mvn	r2, #255	; 0xff
   1a128:	mvn	r3, #0
   1a12c:	and	ip, r0, r2
   1a130:	str	ip, [fp, #-132]	; 0xffffff7c
   1a134:	and	r3, r1, r3
   1a138:	str	r3, [fp, #-128]	; 0xffffff80
   1a13c:	add	r3, pc, #604	; 0x25c
   1a140:	ldrd	r2, [r3]
   1a144:	ldrd	r0, [fp, #-132]	; 0xffffff7c
   1a148:	cmp	r1, r3
   1a14c:	cmpeq	r0, r2
   1a150:	bne	1a27c <_start@@Base+0x7bc4>
   1a154:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1a158:	str	r3, [fp, #-40]	; 0xffffffd8
   1a15c:	mov	r3, #7
   1a160:	ldr	r2, [fp, #-104]	; 0xffffff98
   1a164:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a168:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1a16c:	bl	13f3c <_start@@Base+0x1884>
   1a170:	str	r0, [fp, #-100]	; 0xffffff9c
   1a174:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1a178:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1a17c:	cmp	r2, r3
   1a180:	beq	1a264 <_start@@Base+0x7bac>
   1a184:	mov	r2, #0
   1a188:	mov	r3, #0
   1a18c:	strd	r2, [fp, #-92]	; 0xffffffa4
   1a190:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1a194:	str	r3, [fp, #-40]	; 0xffffffd8
   1a198:	sub	r3, fp, #92	; 0x5c
   1a19c:	ldr	r2, [fp, #-104]	; 0xffffff98
   1a1a0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a1a4:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1a1a8:	bl	14b6c <_start@@Base+0x24b4>
   1a1ac:	str	r0, [fp, #-100]	; 0xffffff9c
   1a1b0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1a1b4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1a1b8:	cmp	r2, r3
   1a1bc:	bne	1a20c <_start@@Base+0x7b54>
   1a1c0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1a1c4:	str	r3, [fp, #-40]	; 0xffffffd8
   1a1c8:	sub	r3, fp, #92	; 0x5c
   1a1cc:	str	r3, [sp]
   1a1d0:	ldr	r3, [pc, #464]	; 1a3a8 <_start@@Base+0x7cf0>
   1a1d4:	add	r3, pc, r3
   1a1d8:	ldr	r2, [fp, #-104]	; 0xffffff98
   1a1dc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a1e0:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1a1e4:	bl	1579c <_start@@Base+0x30e4>
   1a1e8:	str	r0, [fp, #-100]	; 0xffffff9c
   1a1ec:	ldr	r2, [fp, #-100]	; 0xffffff9c
   1a1f0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a1f4:	cmp	r2, r3
   1a1f8:	beq	1a348 <_start@@Base+0x7c90>
   1a1fc:	ldr	r2, [fp, #-100]	; 0xffffff9c
   1a200:	ldr	r3, [fp, #-104]	; 0xffffff98
   1a204:	cmp	r2, r3
   1a208:	beq	1a348 <_start@@Base+0x7c90>
   1a20c:	ldrd	r2, [fp, #-92]	; 0xffffffa4
   1a210:	orrs	r3, r2, r3
   1a214:	bne	1a22c <_start@@Base+0x7b74>
   1a218:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a21c:	ldr	r3, [r3, #8]
   1a220:	and	r3, r3, #2
   1a224:	cmp	r3, #0
   1a228:	beq	1a290 <_start@@Base+0x7bd8>
   1a22c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a230:	ldr	r0, [r3]
   1a234:	mov	r3, #8
   1a238:	mov	r2, #8
   1a23c:	mov	r1, #4
   1a240:	bl	2c400 <flatcc_builder_table_add@@Base>
   1a244:	str	r0, [fp, #-44]	; 0xffffffd4
   1a248:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1a24c:	cmp	r3, #0
   1a250:	beq	1a350 <_start@@Base+0x7c98>
   1a254:	ldrd	r2, [fp, #-92]	; 0xffffffa4
   1a258:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a25c:	bl	12b9c <_start@@Base+0x4e4>
   1a260:	b	1a290 <_start@@Base+0x7bd8>
   1a264:	ldr	r2, [fp, #-104]	; 0xffffff98
   1a268:	ldr	r1, [fp, #-100]	; 0xffffff9c
   1a26c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1a270:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1a274:	str	r0, [fp, #-100]	; 0xffffff9c
   1a278:	b	1a290 <_start@@Base+0x7bd8>
   1a27c:	ldr	r2, [fp, #-104]	; 0xffffff98
   1a280:	ldr	r1, [fp, #-100]	; 0xffffff9c
   1a284:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1a288:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1a28c:	str	r0, [fp, #-100]	; 0xffffff9c
   1a290:	sub	r3, fp, #48	; 0x30
   1a294:	ldr	r2, [fp, #-104]	; 0xffffff98
   1a298:	ldr	r1, [fp, #-100]	; 0xffffff9c
   1a29c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1a2a0:	bl	13b60 <_start@@Base+0x14a8>
   1a2a4:	str	r0, [fp, #-100]	; 0xffffff9c
   1a2a8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1a2ac:	cmp	r3, #0
   1a2b0:	bne	19a08 <_start@@Base+0x7350>
   1a2b4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a2b8:	ldr	r3, [r3, #24]
   1a2bc:	cmp	r3, #0
   1a2c0:	bne	1a358 <_start@@Base+0x7ca0>
   1a2c4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a2c8:	ldr	r3, [r3]
   1a2cc:	mov	r0, r3
   1a2d0:	bl	2a9b0 <flatcc_builder_end_table@@Base>
   1a2d4:	mov	r2, r0
   1a2d8:	ldr	r3, [fp, #-108]	; 0xffffff94
   1a2dc:	str	r2, [r3]
   1a2e0:	ldr	r3, [fp, #-108]	; 0xffffff94
   1a2e4:	ldr	r3, [r3]
   1a2e8:	cmp	r3, #0
   1a2ec:	beq	1a360 <_start@@Base+0x7ca8>
   1a2f0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1a2f4:	b	1a37c <_start@@Base+0x7cc4>
   1a2f8:	nop	{0}
   1a2fc:	b	1a364 <_start@@Base+0x7cac>
   1a300:	nop	{0}
   1a304:	b	1a364 <_start@@Base+0x7cac>
   1a308:	nop	{0}
   1a30c:	b	1a364 <_start@@Base+0x7cac>
   1a310:	nop	{0}
   1a314:	b	1a364 <_start@@Base+0x7cac>
   1a318:	nop	{0}
   1a31c:	b	1a364 <_start@@Base+0x7cac>
   1a320:	nop	{0}
   1a324:	b	1a364 <_start@@Base+0x7cac>
   1a328:	nop	{0}
   1a32c:	b	1a364 <_start@@Base+0x7cac>
   1a330:	nop	{0}
   1a334:	b	1a364 <_start@@Base+0x7cac>
   1a338:	nop	{0}
   1a33c:	b	1a364 <_start@@Base+0x7cac>
   1a340:	nop	{0}
   1a344:	b	1a364 <_start@@Base+0x7cac>
   1a348:	nop	{0}
   1a34c:	b	1a364 <_start@@Base+0x7cac>
   1a350:	nop	{0}
   1a354:	b	1a364 <_start@@Base+0x7cac>
   1a358:	nop	{0}
   1a35c:	b	1a364 <_start@@Base+0x7cac>
   1a360:	nop	{0}
   1a364:	mov	r3, #33	; 0x21
   1a368:	ldr	r2, [fp, #-104]	; 0xffffff98
   1a36c:	ldr	r1, [fp, #-100]	; 0xffffff9c
   1a370:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1a374:	bl	33258 <flatcc_json_parser_set_error@@Base>
   1a378:	mov	r3, r0
   1a37c:	mov	r0, r3
   1a380:	sub	sp, fp, #28
   1a384:	ldrd	r4, [sp]
   1a388:	ldrd	r6, [sp, #8]
   1a38c:	ldrd	r8, [sp, #16]
   1a390:	ldr	fp, [sp, #24]
   1a394:	add	sp, sp, #28
   1a398:	pop	{pc}		; (ldr pc, [sp], #4)
   1a39c:	nop	{0}
   1a3a0:	cmnvs	ip, r0, lsl #8
   1a3a4:	stmdbvs	lr!, {r1, r2, r4, r5, r6, r8, r9, sp, lr}^
   1a3a8:	andeq	lr, r2, r0, asr pc
   1a3ac:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1a3b0:	strd	r6, [sp, #8]
   1a3b4:	strd	r8, [sp, #16]
   1a3b8:	str	fp, [sp, #24]
   1a3bc:	str	lr, [sp, #28]
   1a3c0:	add	fp, sp, #28
   1a3c4:	sub	sp, sp, #96	; 0x60
   1a3c8:	str	r0, [fp, #-80]	; 0xffffffb0
   1a3cc:	str	r1, [fp, #-84]	; 0xffffffac
   1a3d0:	str	r2, [fp, #-88]	; 0xffffffa8
   1a3d4:	str	r3, [fp, #-92]	; 0xffffffa4
   1a3d8:	sub	r3, fp, #48	; 0x30
   1a3dc:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1a3e0:	ldr	r1, [fp, #-84]	; 0xffffffac
   1a3e4:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1a3e8:	bl	13a6c <_start@@Base+0x13b4>
   1a3ec:	str	r0, [fp, #-84]	; 0xffffffac
   1a3f0:	b	1ab14 <_start@@Base+0x845c>
   1a3f4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1a3f8:	ldr	r1, [fp, #-84]	; 0xffffffac
   1a3fc:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1a400:	bl	135f4 <_start@@Base+0xf3c>
   1a404:	str	r0, [fp, #-84]	; 0xffffffac
   1a408:	ldr	r1, [fp, #-88]	; 0xffffffa8
   1a40c:	ldr	r0, [fp, #-84]	; 0xffffffac
   1a410:	bl	13928 <_start@@Base+0x1270>
   1a414:	strd	r0, [fp, #-36]	; 0xffffffdc
   1a418:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1a41c:	add	r3, pc, #796	; 0x31c
   1a420:	ldrd	r2, [r3]
   1a424:	cmp	r1, r3
   1a428:	cmpeq	r0, r2
   1a42c:	bhi	1a674 <_start@@Base+0x7fbc>
   1a430:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1a434:	mov	r2, #-16777216	; 0xff000000
   1a438:	mvn	r3, #0
   1a43c:	and	r4, r0, r2
   1a440:	and	r5, r1, r3
   1a444:	add	r3, pc, #764	; 0x2fc
   1a448:	ldrd	r2, [r3]
   1a44c:	cmp	r5, r3
   1a450:	cmpeq	r4, r2
   1a454:	bne	1a544 <_start@@Base+0x7e8c>
   1a458:	ldr	r3, [fp, #-84]	; 0xffffffac
   1a45c:	str	r3, [fp, #-40]	; 0xffffffd8
   1a460:	mov	r3, #5
   1a464:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1a468:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a46c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1a470:	bl	13f3c <_start@@Base+0x1884>
   1a474:	str	r0, [fp, #-84]	; 0xffffffac
   1a478:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1a47c:	ldr	r3, [fp, #-84]	; 0xffffffac
   1a480:	cmp	r2, r3
   1a484:	beq	1a52c <_start@@Base+0x7e74>
   1a488:	mov	r3, #0
   1a48c:	strb	r3, [fp, #-49]	; 0xffffffcf
   1a490:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1a494:	add	r3, r3, #24
   1a498:	str	r3, [fp, #-44]	; 0xffffffd4
   1a49c:	ldr	r3, [fp, #-84]	; 0xffffffac
   1a4a0:	str	r3, [fp, #-40]	; 0xffffffd8
   1a4a4:	sub	r3, fp, #49	; 0x31
   1a4a8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1a4ac:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a4b0:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1a4b4:	bl	14e04 <_start@@Base+0x274c>
   1a4b8:	str	r0, [fp, #-84]	; 0xffffffac
   1a4bc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1a4c0:	ldr	r3, [fp, #-84]	; 0xffffffac
   1a4c4:	cmp	r2, r3
   1a4c8:	bne	1a518 <_start@@Base+0x7e60>
   1a4cc:	ldr	r3, [fp, #-84]	; 0xffffffac
   1a4d0:	str	r3, [fp, #-40]	; 0xffffffd8
   1a4d4:	sub	r3, fp, #49	; 0x31
   1a4d8:	str	r3, [sp]
   1a4dc:	ldr	r3, [pc, #636]	; 1a760 <_start@@Base+0x80a8>
   1a4e0:	add	r3, pc, r3
   1a4e4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1a4e8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a4ec:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1a4f0:	bl	15d60 <_start@@Base+0x36a8>
   1a4f4:	str	r0, [fp, #-84]	; 0xffffffac
   1a4f8:	ldr	r2, [fp, #-84]	; 0xffffffac
   1a4fc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a500:	cmp	r2, r3
   1a504:	beq	1ab28 <_start@@Base+0x8470>
   1a508:	ldr	r2, [fp, #-84]	; 0xffffffac
   1a50c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1a510:	cmp	r2, r3
   1a514:	beq	1ab28 <_start@@Base+0x8470>
   1a518:	ldrsb	r3, [fp, #-49]	; 0xffffffcf
   1a51c:	mov	r1, r3
   1a520:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a524:	bl	129ec <_start@@Base+0x334>
   1a528:	b	1aafc <_start@@Base+0x8444>
   1a52c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1a530:	ldr	r1, [fp, #-84]	; 0xffffffac
   1a534:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1a538:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1a53c:	str	r0, [fp, #-84]	; 0xffffffac
   1a540:	b	1aafc <_start@@Base+0x8444>
   1a544:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1a548:	mov	r2, #-16777216	; 0xff000000
   1a54c:	mvn	r3, #0
   1a550:	and	r6, r0, r2
   1a554:	and	r7, r1, r3
   1a558:	add	r3, pc, #496	; 0x1f0
   1a55c:	ldrd	r2, [r3]
   1a560:	cmp	r7, r3
   1a564:	cmpeq	r6, r2
   1a568:	bne	1a65c <_start@@Base+0x7fa4>
   1a56c:	ldr	r3, [fp, #-84]	; 0xffffffac
   1a570:	str	r3, [fp, #-40]	; 0xffffffd8
   1a574:	mov	r3, #5
   1a578:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1a57c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a580:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1a584:	bl	13f3c <_start@@Base+0x1884>
   1a588:	str	r0, [fp, #-84]	; 0xffffffac
   1a58c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1a590:	ldr	r3, [fp, #-84]	; 0xffffffac
   1a594:	cmp	r2, r3
   1a598:	beq	1a644 <_start@@Base+0x7f8c>
   1a59c:	mov	r2, #0
   1a5a0:	mov	r3, #0
   1a5a4:	strd	r2, [fp, #-60]	; 0xffffffc4
   1a5a8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1a5ac:	add	r3, r3, #16
   1a5b0:	str	r3, [fp, #-44]	; 0xffffffd4
   1a5b4:	ldr	r3, [fp, #-84]	; 0xffffffac
   1a5b8:	str	r3, [fp, #-40]	; 0xffffffd8
   1a5bc:	sub	r3, fp, #60	; 0x3c
   1a5c0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1a5c4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a5c8:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1a5cc:	bl	34788 <flatcc_json_parser_double@@Base>
   1a5d0:	str	r0, [fp, #-84]	; 0xffffffac
   1a5d4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1a5d8:	ldr	r3, [fp, #-84]	; 0xffffffac
   1a5dc:	cmp	r2, r3
   1a5e0:	bne	1a630 <_start@@Base+0x7f78>
   1a5e4:	ldr	r3, [fp, #-84]	; 0xffffffac
   1a5e8:	str	r3, [fp, #-40]	; 0xffffffd8
   1a5ec:	sub	r3, fp, #60	; 0x3c
   1a5f0:	str	r3, [sp]
   1a5f4:	ldr	r3, [pc, #360]	; 1a764 <_start@@Base+0x80ac>
   1a5f8:	add	r3, pc, r3
   1a5fc:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1a600:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a604:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1a608:	bl	16314 <_start@@Base+0x3c5c>
   1a60c:	str	r0, [fp, #-84]	; 0xffffffac
   1a610:	ldr	r2, [fp, #-84]	; 0xffffffac
   1a614:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a618:	cmp	r2, r3
   1a61c:	beq	1ab30 <_start@@Base+0x8478>
   1a620:	ldr	r2, [fp, #-84]	; 0xffffffac
   1a624:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1a628:	cmp	r2, r3
   1a62c:	beq	1ab30 <_start@@Base+0x8478>
   1a630:	vldr	d7, [fp, #-60]	; 0xffffffc4
   1a634:	vmov.f64	d0, d7
   1a638:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a63c:	bl	12d78 <_start@@Base+0x6c0>
   1a640:	b	1aafc <_start@@Base+0x8444>
   1a644:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1a648:	ldr	r1, [fp, #-84]	; 0xffffffac
   1a64c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1a650:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1a654:	str	r0, [fp, #-84]	; 0xffffffac
   1a658:	b	1aafc <_start@@Base+0x8444>
   1a65c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1a660:	ldr	r1, [fp, #-84]	; 0xffffffac
   1a664:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1a668:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1a66c:	str	r0, [fp, #-84]	; 0xffffffac
   1a670:	b	1aafc <_start@@Base+0x8444>
   1a674:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1a678:	mvn	r2, #0
   1a67c:	mvn	r3, #-2013265920	; 0x88000000
   1a680:	cmp	r1, r3
   1a684:	cmpeq	r0, r2
   1a688:	bhi	1a774 <_start@@Base+0x80bc>
   1a68c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1a690:	mov	r2, #-16777216	; 0xff000000
   1a694:	mvn	r3, #0
   1a698:	and	r8, r0, r2
   1a69c:	and	r9, r1, r3
   1a6a0:	add	r3, pc, #176	; 0xb0
   1a6a4:	ldrd	r2, [r3]
   1a6a8:	cmp	r9, r3
   1a6ac:	cmpeq	r8, r2
   1a6b0:	bne	1a724 <_start@@Base+0x806c>
   1a6b4:	ldr	r3, [fp, #-84]	; 0xffffffac
   1a6b8:	str	r3, [fp, #-40]	; 0xffffffd8
   1a6bc:	mov	r3, #5
   1a6c0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1a6c4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a6c8:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1a6cc:	bl	13f3c <_start@@Base+0x1884>
   1a6d0:	str	r0, [fp, #-84]	; 0xffffffac
   1a6d4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1a6d8:	ldr	r3, [fp, #-84]	; 0xffffffac
   1a6dc:	cmp	r2, r3
   1a6e0:	beq	1a70c <_start@@Base+0x8054>
   1a6e4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1a6e8:	add	r3, r3, #26
   1a6ec:	str	r3, [fp, #-44]	; 0xffffffd4
   1a6f0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1a6f4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1a6f8:	ldr	r1, [fp, #-84]	; 0xffffffac
   1a6fc:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1a700:	bl	188f8 <_start@@Base+0x6240>
   1a704:	str	r0, [fp, #-84]	; 0xffffffac
   1a708:	b	1aafc <_start@@Base+0x8444>
   1a70c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1a710:	ldr	r1, [fp, #-84]	; 0xffffffac
   1a714:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1a718:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1a71c:	str	r0, [fp, #-84]	; 0xffffffac
   1a720:	b	1aafc <_start@@Base+0x8444>
   1a724:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1a728:	ldr	r1, [fp, #-84]	; 0xffffffac
   1a72c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1a730:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1a734:	str	r0, [fp, #-84]	; 0xffffffac
   1a738:	b	1aafc <_start@@Base+0x8444>
   1a73c:	nop	{0}
   1a740:	rscscc	pc, pc, #1020	; 0x3fc
   1a744:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   1a748:	andcc	r0, r0, #0
   1a74c:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   1a750:	mrscc	r0, (UNDEF: 0)
   1a754:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   1a758:	movwcc	r0, #0
   1a75c:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   1a760:	andeq	lr, r2, r4, asr ip
   1a764:	andeq	lr, r2, ip, asr #22
   1a768:	andeq	lr, r2, r4, lsl r9
   1a76c:	strdeq	lr, [r2], -r0
   1a770:	andeq	lr, r2, r4, ror #13
   1a774:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1a778:	mvn	r2, #0
   1a77c:	mvn	r3, #-2030043136	; 0x87000000
   1a780:	cmp	r1, r3
   1a784:	cmpeq	r0, r2
   1a788:	bhi	1a8b8 <_start@@Base+0x8200>
   1a78c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1a790:	mov	r2, #0
   1a794:	mov	r3, #-16777216	; 0xff000000
   1a798:	and	ip, r0, r2
   1a79c:	str	ip, [fp, #-100]	; 0xffffff9c
   1a7a0:	and	r3, r1, r3
   1a7a4:	str	r3, [fp, #-96]	; 0xffffffa0
   1a7a8:	ldrd	r2, [fp, #-100]	; 0xffffff9c
   1a7ac:	cmp	r3, #2013265920	; 0x78000000
   1a7b0:	cmpeq	r2, #0
   1a7b4:	bne	1a8a0 <_start@@Base+0x81e8>
   1a7b8:	ldr	r3, [fp, #-84]	; 0xffffffac
   1a7bc:	str	r3, [fp, #-40]	; 0xffffffd8
   1a7c0:	mov	r3, #1
   1a7c4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1a7c8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a7cc:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1a7d0:	bl	13f3c <_start@@Base+0x1884>
   1a7d4:	str	r0, [fp, #-84]	; 0xffffffac
   1a7d8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1a7dc:	ldr	r3, [fp, #-84]	; 0xffffffac
   1a7e0:	cmp	r2, r3
   1a7e4:	beq	1a888 <_start@@Base+0x81d0>
   1a7e8:	mov	r3, #0
   1a7ec:	str	r3, [fp, #-64]	; 0xffffffc0
   1a7f0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1a7f4:	str	r3, [fp, #-44]	; 0xffffffd4
   1a7f8:	ldr	r3, [fp, #-84]	; 0xffffffac
   1a7fc:	str	r3, [fp, #-40]	; 0xffffffd8
   1a800:	sub	r3, fp, #64	; 0x40
   1a804:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1a808:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a80c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1a810:	bl	34938 <flatcc_json_parser_float@@Base>
   1a814:	str	r0, [fp, #-84]	; 0xffffffac
   1a818:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1a81c:	ldr	r3, [fp, #-84]	; 0xffffffac
   1a820:	cmp	r2, r3
   1a824:	bne	1a874 <_start@@Base+0x81bc>
   1a828:	ldr	r3, [fp, #-84]	; 0xffffffac
   1a82c:	str	r3, [fp, #-40]	; 0xffffffd8
   1a830:	sub	r3, fp, #64	; 0x40
   1a834:	str	r3, [sp]
   1a838:	ldr	r3, [pc, #-216]	; 1a768 <_start@@Base+0x80b0>
   1a83c:	add	r3, pc, r3
   1a840:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1a844:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a848:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1a84c:	bl	16134 <_start@@Base+0x3a7c>
   1a850:	str	r0, [fp, #-84]	; 0xffffffac
   1a854:	ldr	r2, [fp, #-84]	; 0xffffffac
   1a858:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a85c:	cmp	r2, r3
   1a860:	beq	1ab38 <_start@@Base+0x8480>
   1a864:	ldr	r2, [fp, #-84]	; 0xffffffac
   1a868:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1a86c:	cmp	r2, r3
   1a870:	beq	1ab38 <_start@@Base+0x8480>
   1a874:	vldr	s15, [fp, #-64]	; 0xffffffc0
   1a878:	vmov.f32	s0, s15
   1a87c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a880:	bl	12c8c <_start@@Base+0x5d4>
   1a884:	b	1aafc <_start@@Base+0x8444>
   1a888:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1a88c:	ldr	r1, [fp, #-84]	; 0xffffffac
   1a890:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1a894:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1a898:	str	r0, [fp, #-84]	; 0xffffffac
   1a89c:	b	1aafc <_start@@Base+0x8444>
   1a8a0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1a8a4:	ldr	r1, [fp, #-84]	; 0xffffffac
   1a8a8:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1a8ac:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1a8b0:	str	r0, [fp, #-84]	; 0xffffffac
   1a8b4:	b	1aafc <_start@@Base+0x8444>
   1a8b8:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1a8bc:	mov	r2, #0
   1a8c0:	mov	r3, #-16777216	; 0xff000000
   1a8c4:	and	ip, r0, r2
   1a8c8:	str	ip, [fp, #-108]	; 0xffffff94
   1a8cc:	and	r3, r1, r3
   1a8d0:	str	r3, [fp, #-104]	; 0xffffff98
   1a8d4:	ldrd	r2, [fp, #-108]	; 0xffffff94
   1a8d8:	cmp	r3, #2046820352	; 0x7a000000
   1a8dc:	cmpeq	r2, #0
   1a8e0:	bne	1a9d0 <_start@@Base+0x8318>
   1a8e4:	ldr	r3, [fp, #-84]	; 0xffffffac
   1a8e8:	str	r3, [fp, #-40]	; 0xffffffd8
   1a8ec:	mov	r3, #1
   1a8f0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1a8f4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a8f8:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1a8fc:	bl	13f3c <_start@@Base+0x1884>
   1a900:	str	r0, [fp, #-84]	; 0xffffffac
   1a904:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1a908:	ldr	r3, [fp, #-84]	; 0xffffffac
   1a90c:	cmp	r2, r3
   1a910:	beq	1a9b8 <_start@@Base+0x8300>
   1a914:	mov	r3, #0
   1a918:	str	r3, [fp, #-68]	; 0xffffffbc
   1a91c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1a920:	add	r3, r3, #8
   1a924:	str	r3, [fp, #-44]	; 0xffffffd4
   1a928:	ldr	r3, [fp, #-84]	; 0xffffffac
   1a92c:	str	r3, [fp, #-40]	; 0xffffffd8
   1a930:	sub	r3, fp, #68	; 0x44
   1a934:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1a938:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a93c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1a940:	bl	34938 <flatcc_json_parser_float@@Base>
   1a944:	str	r0, [fp, #-84]	; 0xffffffac
   1a948:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1a94c:	ldr	r3, [fp, #-84]	; 0xffffffac
   1a950:	cmp	r2, r3
   1a954:	bne	1a9a4 <_start@@Base+0x82ec>
   1a958:	ldr	r3, [fp, #-84]	; 0xffffffac
   1a95c:	str	r3, [fp, #-40]	; 0xffffffd8
   1a960:	sub	r3, fp, #68	; 0x44
   1a964:	str	r3, [sp]
   1a968:	ldr	r3, [pc, #-516]	; 1a76c <_start@@Base+0x80b4>
   1a96c:	add	r3, pc, r3
   1a970:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1a974:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a978:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1a97c:	bl	16134 <_start@@Base+0x3a7c>
   1a980:	str	r0, [fp, #-84]	; 0xffffffac
   1a984:	ldr	r2, [fp, #-84]	; 0xffffffac
   1a988:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a98c:	cmp	r2, r3
   1a990:	beq	1ab40 <_start@@Base+0x8488>
   1a994:	ldr	r2, [fp, #-84]	; 0xffffffac
   1a998:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1a99c:	cmp	r2, r3
   1a9a0:	beq	1ab40 <_start@@Base+0x8488>
   1a9a4:	vldr	s15, [fp, #-68]	; 0xffffffbc
   1a9a8:	vmov.f32	s0, s15
   1a9ac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a9b0:	bl	12c8c <_start@@Base+0x5d4>
   1a9b4:	b	1aafc <_start@@Base+0x8444>
   1a9b8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1a9bc:	ldr	r1, [fp, #-84]	; 0xffffffac
   1a9c0:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1a9c4:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1a9c8:	str	r0, [fp, #-84]	; 0xffffffac
   1a9cc:	b	1aafc <_start@@Base+0x8444>
   1a9d0:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1a9d4:	mov	r2, #0
   1a9d8:	mov	r3, #-16777216	; 0xff000000
   1a9dc:	and	ip, r0, r2
   1a9e0:	str	ip, [fp, #-116]	; 0xffffff8c
   1a9e4:	and	r3, r1, r3
   1a9e8:	str	r3, [fp, #-112]	; 0xffffff90
   1a9ec:	ldrd	r2, [fp, #-116]	; 0xffffff8c
   1a9f0:	cmp	r3, #2030043136	; 0x79000000
   1a9f4:	cmpeq	r2, #0
   1a9f8:	bne	1aae8 <_start@@Base+0x8430>
   1a9fc:	ldr	r3, [fp, #-84]	; 0xffffffac
   1aa00:	str	r3, [fp, #-40]	; 0xffffffd8
   1aa04:	mov	r3, #1
   1aa08:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1aa0c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1aa10:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1aa14:	bl	13f3c <_start@@Base+0x1884>
   1aa18:	str	r0, [fp, #-84]	; 0xffffffac
   1aa1c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1aa20:	ldr	r3, [fp, #-84]	; 0xffffffac
   1aa24:	cmp	r2, r3
   1aa28:	beq	1aad0 <_start@@Base+0x8418>
   1aa2c:	mov	r3, #0
   1aa30:	str	r3, [fp, #-72]	; 0xffffffb8
   1aa34:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1aa38:	add	r3, r3, #4
   1aa3c:	str	r3, [fp, #-44]	; 0xffffffd4
   1aa40:	ldr	r3, [fp, #-84]	; 0xffffffac
   1aa44:	str	r3, [fp, #-40]	; 0xffffffd8
   1aa48:	sub	r3, fp, #72	; 0x48
   1aa4c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1aa50:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1aa54:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1aa58:	bl	34938 <flatcc_json_parser_float@@Base>
   1aa5c:	str	r0, [fp, #-84]	; 0xffffffac
   1aa60:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1aa64:	ldr	r3, [fp, #-84]	; 0xffffffac
   1aa68:	cmp	r2, r3
   1aa6c:	bne	1aabc <_start@@Base+0x8404>
   1aa70:	ldr	r3, [fp, #-84]	; 0xffffffac
   1aa74:	str	r3, [fp, #-40]	; 0xffffffd8
   1aa78:	sub	r3, fp, #72	; 0x48
   1aa7c:	str	r3, [sp]
   1aa80:	ldr	r3, [pc, #-792]	; 1a770 <_start@@Base+0x80b8>
   1aa84:	add	r3, pc, r3
   1aa88:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1aa8c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1aa90:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1aa94:	bl	16134 <_start@@Base+0x3a7c>
   1aa98:	str	r0, [fp, #-84]	; 0xffffffac
   1aa9c:	ldr	r2, [fp, #-84]	; 0xffffffac
   1aaa0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1aaa4:	cmp	r2, r3
   1aaa8:	beq	1ab48 <_start@@Base+0x8490>
   1aaac:	ldr	r2, [fp, #-84]	; 0xffffffac
   1aab0:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1aab4:	cmp	r2, r3
   1aab8:	beq	1ab48 <_start@@Base+0x8490>
   1aabc:	vldr	s15, [fp, #-72]	; 0xffffffb8
   1aac0:	vmov.f32	s0, s15
   1aac4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1aac8:	bl	12c8c <_start@@Base+0x5d4>
   1aacc:	b	1aafc <_start@@Base+0x8444>
   1aad0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1aad4:	ldr	r1, [fp, #-84]	; 0xffffffac
   1aad8:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1aadc:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1aae0:	str	r0, [fp, #-84]	; 0xffffffac
   1aae4:	b	1aafc <_start@@Base+0x8444>
   1aae8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1aaec:	ldr	r1, [fp, #-84]	; 0xffffffac
   1aaf0:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1aaf4:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1aaf8:	str	r0, [fp, #-84]	; 0xffffffac
   1aafc:	sub	r3, fp, #48	; 0x30
   1ab00:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1ab04:	ldr	r1, [fp, #-84]	; 0xffffffac
   1ab08:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1ab0c:	bl	13b60 <_start@@Base+0x14a8>
   1ab10:	str	r0, [fp, #-84]	; 0xffffffac
   1ab14:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1ab18:	cmp	r3, #0
   1ab1c:	bne	1a3f4 <_start@@Base+0x7d3c>
   1ab20:	ldr	r3, [fp, #-84]	; 0xffffffac
   1ab24:	b	1ab64 <_start@@Base+0x84ac>
   1ab28:	nop	{0}
   1ab2c:	b	1ab4c <_start@@Base+0x8494>
   1ab30:	nop	{0}
   1ab34:	b	1ab4c <_start@@Base+0x8494>
   1ab38:	nop	{0}
   1ab3c:	b	1ab4c <_start@@Base+0x8494>
   1ab40:	nop	{0}
   1ab44:	b	1ab4c <_start@@Base+0x8494>
   1ab48:	nop	{0}
   1ab4c:	mov	r3, #33	; 0x21
   1ab50:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1ab54:	ldr	r1, [fp, #-84]	; 0xffffffac
   1ab58:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1ab5c:	bl	33258 <flatcc_json_parser_set_error@@Base>
   1ab60:	mov	r3, r0
   1ab64:	mov	r0, r3
   1ab68:	sub	sp, fp, #28
   1ab6c:	ldrd	r4, [sp]
   1ab70:	ldrd	r6, [sp, #8]
   1ab74:	ldrd	r8, [sp, #16]
   1ab78:	ldr	fp, [sp, #24]
   1ab7c:	add	sp, sp, #28
   1ab80:	pop	{pc}		; (ldr pc, [sp], #4)
   1ab84:	str	fp, [sp, #-8]!
   1ab88:	str	lr, [sp, #4]
   1ab8c:	add	fp, sp, #4
   1ab90:	sub	sp, sp, #24
   1ab94:	str	r0, [fp, #-16]
   1ab98:	str	r1, [fp, #-20]	; 0xffffffec
   1ab9c:	str	r2, [fp, #-24]	; 0xffffffe8
   1aba0:	str	r3, [fp, #-28]	; 0xffffffe4
   1aba4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1aba8:	mov	r2, #0
   1abac:	str	r2, [r3]
   1abb0:	ldr	r3, [fp, #-16]
   1abb4:	ldr	r3, [r3]
   1abb8:	mov	r2, #16
   1abbc:	mov	r1, #32
   1abc0:	mov	r0, r3
   1abc4:	bl	28f94 <flatcc_builder_start_struct@@Base>
   1abc8:	str	r0, [fp, #-8]
   1abcc:	ldr	r3, [fp, #-8]
   1abd0:	cmp	r3, #0
   1abd4:	beq	1ac34 <_start@@Base+0x857c>
   1abd8:	ldr	r3, [fp, #-8]
   1abdc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1abe0:	ldr	r1, [fp, #-20]	; 0xffffffec
   1abe4:	ldr	r0, [fp, #-16]
   1abe8:	bl	1a3ac <_start@@Base+0x7cf4>
   1abec:	str	r0, [fp, #-20]	; 0xffffffec
   1abf0:	ldr	r2, [fp, #-20]	; 0xffffffec
   1abf4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1abf8:	cmp	r2, r3
   1abfc:	beq	1ac3c <_start@@Base+0x8584>
   1ac00:	ldr	r3, [fp, #-16]
   1ac04:	ldr	r3, [r3]
   1ac08:	mov	r0, r3
   1ac0c:	bl	29040 <flatcc_builder_end_struct@@Base>
   1ac10:	mov	r2, r0
   1ac14:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ac18:	str	r2, [r3]
   1ac1c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ac20:	ldr	r3, [r3]
   1ac24:	cmp	r3, #0
   1ac28:	beq	1ac3c <_start@@Base+0x8584>
   1ac2c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ac30:	b	1ac58 <_start@@Base+0x85a0>
   1ac34:	nop	{0}
   1ac38:	b	1ac40 <_start@@Base+0x8588>
   1ac3c:	nop	{0}
   1ac40:	mov	r3, #33	; 0x21
   1ac44:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1ac48:	ldr	r1, [fp, #-20]	; 0xffffffec
   1ac4c:	ldr	r0, [fp, #-16]
   1ac50:	bl	33258 <flatcc_json_parser_set_error@@Base>
   1ac54:	mov	r3, r0
   1ac58:	mov	r0, r3
   1ac5c:	sub	sp, fp, #4
   1ac60:	ldr	fp, [sp]
   1ac64:	add	sp, sp, #4
   1ac68:	pop	{pc}		; (ldr pc, [sp], #4)
   1ac6c:	strd	r4, [sp, #-16]!
   1ac70:	str	fp, [sp, #8]
   1ac74:	str	lr, [sp, #12]
   1ac78:	add	fp, sp, #12
   1ac7c:	sub	sp, sp, #56	; 0x38
   1ac80:	str	r0, [fp, #-48]	; 0xffffffd0
   1ac84:	str	r1, [fp, #-52]	; 0xffffffcc
   1ac88:	str	r2, [fp, #-56]	; 0xffffffc8
   1ac8c:	str	r3, [fp, #-60]	; 0xffffffc4
   1ac90:	sub	r3, fp, #32
   1ac94:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1ac98:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1ac9c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1aca0:	bl	13a6c <_start@@Base+0x13b4>
   1aca4:	str	r0, [fp, #-52]	; 0xffffffcc
   1aca8:	b	1af18 <_start@@Base+0x8860>
   1acac:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1acb0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1acb4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1acb8:	bl	135f4 <_start@@Base+0xf3c>
   1acbc:	str	r0, [fp, #-52]	; 0xffffffcc
   1acc0:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1acc4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1acc8:	bl	13928 <_start@@Base+0x1270>
   1accc:	strd	r0, [fp, #-20]	; 0xffffffec
   1acd0:	ldrd	r2, [fp, #-20]	; 0xffffffec
   1acd4:	mov	r0, #0
   1acd8:	mov	r1, #0
   1acdc:	movt	r1, #65535	; 0xffff
   1ace0:	and	r4, r2, r0
   1ace4:	and	r5, r3, r1
   1ace8:	mov	r2, #0
   1acec:	mov	r3, #0
   1acf0:	movt	r3, #26980	; 0x6964
   1acf4:	cmp	r5, r3
   1acf8:	cmpeq	r4, r2
   1acfc:	bne	1ade8 <_start@@Base+0x8730>
   1ad00:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1ad04:	str	r3, [fp, #-24]	; 0xffffffe8
   1ad08:	mov	r3, #2
   1ad0c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1ad10:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ad14:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1ad18:	bl	13f3c <_start@@Base+0x1884>
   1ad1c:	str	r0, [fp, #-52]	; 0xffffffcc
   1ad20:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1ad24:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1ad28:	cmp	r2, r3
   1ad2c:	beq	1add0 <_start@@Base+0x8718>
   1ad30:	mov	r3, #0
   1ad34:	str	r3, [fp, #-36]	; 0xffffffdc
   1ad38:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1ad3c:	str	r3, [fp, #-28]	; 0xffffffe4
   1ad40:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1ad44:	str	r3, [fp, #-24]	; 0xffffffe8
   1ad48:	sub	r3, fp, #36	; 0x24
   1ad4c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1ad50:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ad54:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1ad58:	bl	148d8 <_start@@Base+0x2220>
   1ad5c:	str	r0, [fp, #-52]	; 0xffffffcc
   1ad60:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1ad64:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1ad68:	cmp	r2, r3
   1ad6c:	bne	1adbc <_start@@Base+0x8704>
   1ad70:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1ad74:	str	r3, [fp, #-24]	; 0xffffffe8
   1ad78:	sub	r3, fp, #36	; 0x24
   1ad7c:	str	r3, [sp]
   1ad80:	ldr	r3, [pc, #488]	; 1af70 <_start@@Base+0x88b8>
   1ad84:	add	r3, pc, r3
   1ad88:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1ad8c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ad90:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1ad94:	bl	151f4 <_start@@Base+0x2b3c>
   1ad98:	str	r0, [fp, #-52]	; 0xffffffcc
   1ad9c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1ada0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ada4:	cmp	r2, r3
   1ada8:	beq	1af2c <_start@@Base+0x8874>
   1adac:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1adb0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1adb4:	cmp	r2, r3
   1adb8:	beq	1af2c <_start@@Base+0x8874>
   1adbc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1adc0:	mov	r1, r3
   1adc4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1adc8:	bl	128b4 <_start@@Base+0x1fc>
   1adcc:	b	1af00 <_start@@Base+0x8848>
   1add0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1add4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1add8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1addc:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1ade0:	str	r0, [fp, #-52]	; 0xffffffcc
   1ade4:	b	1af00 <_start@@Base+0x8848>
   1ade8:	ldrd	r2, [fp, #-20]	; 0xffffffec
   1adec:	add	r1, pc, #372	; 0x174
   1adf0:	ldrd	r0, [r1]
   1adf4:	cmp	r3, r1
   1adf8:	cmpeq	r2, r0
   1adfc:	bne	1aeec <_start@@Base+0x8834>
   1ae00:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1ae04:	str	r3, [fp, #-24]	; 0xffffffe8
   1ae08:	mov	r3, #8
   1ae0c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1ae10:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ae14:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1ae18:	bl	13f3c <_start@@Base+0x1884>
   1ae1c:	str	r0, [fp, #-52]	; 0xffffffcc
   1ae20:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1ae24:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1ae28:	cmp	r2, r3
   1ae2c:	beq	1aed4 <_start@@Base+0x881c>
   1ae30:	mov	r3, #0
   1ae34:	str	r3, [fp, #-40]	; 0xffffffd8
   1ae38:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1ae3c:	add	r3, r3, #4
   1ae40:	str	r3, [fp, #-28]	; 0xffffffe4
   1ae44:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1ae48:	str	r3, [fp, #-24]	; 0xffffffe8
   1ae4c:	sub	r3, fp, #40	; 0x28
   1ae50:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1ae54:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ae58:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1ae5c:	bl	148d8 <_start@@Base+0x2220>
   1ae60:	str	r0, [fp, #-52]	; 0xffffffcc
   1ae64:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1ae68:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1ae6c:	cmp	r2, r3
   1ae70:	bne	1aec0 <_start@@Base+0x8808>
   1ae74:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1ae78:	str	r3, [fp, #-24]	; 0xffffffe8
   1ae7c:	sub	r3, fp, #40	; 0x28
   1ae80:	str	r3, [sp]
   1ae84:	ldr	r3, [pc, #232]	; 1af74 <_start@@Base+0x88bc>
   1ae88:	add	r3, pc, r3
   1ae8c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1ae90:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ae94:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1ae98:	bl	151f4 <_start@@Base+0x2b3c>
   1ae9c:	str	r0, [fp, #-52]	; 0xffffffcc
   1aea0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1aea4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1aea8:	cmp	r2, r3
   1aeac:	beq	1af34 <_start@@Base+0x887c>
   1aeb0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1aeb4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1aeb8:	cmp	r2, r3
   1aebc:	beq	1af34 <_start@@Base+0x887c>
   1aec0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1aec4:	mov	r1, r3
   1aec8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1aecc:	bl	128b4 <_start@@Base+0x1fc>
   1aed0:	b	1af00 <_start@@Base+0x8848>
   1aed4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1aed8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1aedc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1aee0:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1aee4:	str	r0, [fp, #-52]	; 0xffffffcc
   1aee8:	b	1af00 <_start@@Base+0x8848>
   1aeec:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1aef0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1aef4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1aef8:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1aefc:	str	r0, [fp, #-52]	; 0xffffffcc
   1af00:	sub	r3, fp, #32
   1af04:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1af08:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1af0c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1af10:	bl	13b60 <_start@@Base+0x14a8>
   1af14:	str	r0, [fp, #-52]	; 0xffffffcc
   1af18:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1af1c:	cmp	r3, #0
   1af20:	bne	1acac <_start@@Base+0x85f4>
   1af24:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1af28:	b	1af50 <_start@@Base+0x8898>
   1af2c:	nop	{0}
   1af30:	b	1af38 <_start@@Base+0x8880>
   1af34:	nop	{0}
   1af38:	mov	r3, #33	; 0x21
   1af3c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1af40:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1af44:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1af48:	bl	33258 <flatcc_json_parser_set_error@@Base>
   1af4c:	mov	r3, r0
   1af50:	mov	r0, r3
   1af54:	sub	sp, fp, #12
   1af58:	ldrd	r4, [sp]
   1af5c:	ldr	fp, [sp, #8]
   1af60:	add	sp, sp, #12
   1af64:	pop	{pc}		; (ldr pc, [sp], #4)
   1af68:	cmnvs	lr, r5, ror #6
   1af6c:	strbtvs	r7, [r9], #-884	; 0xfffffc8c
   1af70:	strdeq	lr, [r2], -r0
   1af74:	strdeq	lr, [r2], -r8
   1af78:	str	fp, [sp, #-8]!
   1af7c:	str	lr, [sp, #4]
   1af80:	add	fp, sp, #4
   1af84:	sub	sp, sp, #24
   1af88:	str	r0, [fp, #-16]
   1af8c:	str	r1, [fp, #-20]	; 0xffffffec
   1af90:	str	r2, [fp, #-24]	; 0xffffffe8
   1af94:	str	r3, [fp, #-28]	; 0xffffffe4
   1af98:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1af9c:	mov	r2, #0
   1afa0:	str	r2, [r3]
   1afa4:	ldr	r3, [fp, #-16]
   1afa8:	ldr	r3, [r3]
   1afac:	mov	r2, #4
   1afb0:	mov	r1, #8
   1afb4:	mov	r0, r3
   1afb8:	bl	28f94 <flatcc_builder_start_struct@@Base>
   1afbc:	str	r0, [fp, #-8]
   1afc0:	ldr	r3, [fp, #-8]
   1afc4:	cmp	r3, #0
   1afc8:	beq	1b028 <_start@@Base+0x8970>
   1afcc:	ldr	r3, [fp, #-8]
   1afd0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1afd4:	ldr	r1, [fp, #-20]	; 0xffffffec
   1afd8:	ldr	r0, [fp, #-16]
   1afdc:	bl	1ac6c <_start@@Base+0x85b4>
   1afe0:	str	r0, [fp, #-20]	; 0xffffffec
   1afe4:	ldr	r2, [fp, #-20]	; 0xffffffec
   1afe8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1afec:	cmp	r2, r3
   1aff0:	beq	1b030 <_start@@Base+0x8978>
   1aff4:	ldr	r3, [fp, #-16]
   1aff8:	ldr	r3, [r3]
   1affc:	mov	r0, r3
   1b000:	bl	29040 <flatcc_builder_end_struct@@Base>
   1b004:	mov	r2, r0
   1b008:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b00c:	str	r2, [r3]
   1b010:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b014:	ldr	r3, [r3]
   1b018:	cmp	r3, #0
   1b01c:	beq	1b030 <_start@@Base+0x8978>
   1b020:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b024:	b	1b04c <_start@@Base+0x8994>
   1b028:	nop	{0}
   1b02c:	b	1b034 <_start@@Base+0x897c>
   1b030:	nop	{0}
   1b034:	mov	r3, #33	; 0x21
   1b038:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1b03c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b040:	ldr	r0, [fp, #-16]
   1b044:	bl	33258 <flatcc_json_parser_set_error@@Base>
   1b048:	mov	r3, r0
   1b04c:	mov	r0, r3
   1b050:	sub	sp, fp, #4
   1b054:	ldr	fp, [sp]
   1b058:	add	sp, sp, #4
   1b05c:	pop	{pc}		; (ldr pc, [sp], #4)
   1b060:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1b064:	strd	r6, [sp, #8]
   1b068:	strd	r8, [sp, #16]
   1b06c:	str	fp, [sp, #24]
   1b070:	str	lr, [sp, #28]
   1b074:	add	fp, sp, #28
   1b078:	sub	sp, sp, #64	; 0x40
   1b07c:	str	r0, [fp, #-72]	; 0xffffffb8
   1b080:	str	r1, [fp, #-76]	; 0xffffffb4
   1b084:	str	r2, [fp, #-80]	; 0xffffffb0
   1b088:	str	r3, [fp, #-84]	; 0xffffffac
   1b08c:	ldr	r3, [fp, #-84]	; 0xffffffac
   1b090:	mov	r2, #0
   1b094:	str	r2, [r3]
   1b098:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1b09c:	ldr	r3, [r3]
   1b0a0:	mov	r1, #3
   1b0a4:	mov	r0, r3
   1b0a8:	bl	29dfc <flatcc_builder_start_table@@Base>
   1b0ac:	mov	r3, r0
   1b0b0:	cmp	r3, #0
   1b0b4:	bne	1b530 <_start@@Base+0x8e78>
   1b0b8:	sub	r3, fp, #52	; 0x34
   1b0bc:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1b0c0:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1b0c4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1b0c8:	bl	13a6c <_start@@Base+0x13b4>
   1b0cc:	str	r0, [fp, #-76]	; 0xffffffb4
   1b0d0:	b	1b4c8 <_start@@Base+0x8e10>
   1b0d4:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1b0d8:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1b0dc:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1b0e0:	bl	135f4 <_start@@Base+0xf3c>
   1b0e4:	str	r0, [fp, #-76]	; 0xffffffb4
   1b0e8:	ldr	r1, [fp, #-80]	; 0xffffffb0
   1b0ec:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1b0f0:	bl	13928 <_start@@Base+0x1270>
   1b0f4:	strd	r0, [fp, #-36]	; 0xffffffdc
   1b0f8:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1b0fc:	mvn	r0, #0
   1b100:	movw	r1, #65535	; 0xffff
   1b104:	movt	r1, #26979	; 0x6963
   1b108:	cmp	r3, r1
   1b10c:	cmpeq	r2, r0
   1b110:	bhi	1b27c <_start@@Base+0x8bc4>
   1b114:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1b118:	mov	r0, #-16777216	; 0xff000000
   1b11c:	mvn	r1, #0
   1b120:	and	r4, r2, r0
   1b124:	and	r5, r3, r1
   1b128:	add	r3, pc, #1000	; 0x3e8
   1b12c:	ldrd	r2, [r3]
   1b130:	cmp	r5, r3
   1b134:	cmpeq	r4, r2
   1b138:	bne	1b264 <_start@@Base+0x8bac>
   1b13c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1b140:	str	r3, [fp, #-40]	; 0xffffffd8
   1b144:	mov	r3, #5
   1b148:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1b14c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1b150:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1b154:	bl	13f3c <_start@@Base+0x1884>
   1b158:	str	r0, [fp, #-76]	; 0xffffffb4
   1b15c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1b160:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1b164:	cmp	r2, r3
   1b168:	beq	1b24c <_start@@Base+0x8b94>
   1b16c:	mov	r3, #0
   1b170:	strh	r3, [fp, #-58]	; 0xffffffc6
   1b174:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1b178:	str	r3, [fp, #-40]	; 0xffffffd8
   1b17c:	sub	r3, fp, #58	; 0x3a
   1b180:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1b184:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1b188:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1b18c:	bl	149b4 <_start@@Base+0x22fc>
   1b190:	str	r0, [fp, #-76]	; 0xffffffb4
   1b194:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1b198:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1b19c:	cmp	r2, r3
   1b1a0:	bne	1b1f0 <_start@@Base+0x8b38>
   1b1a4:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1b1a8:	str	r3, [fp, #-40]	; 0xffffffd8
   1b1ac:	sub	r3, fp, #58	; 0x3a
   1b1b0:	str	r3, [sp]
   1b1b4:	ldr	r3, [pc, #876]	; 1b528 <_start@@Base+0x8e70>
   1b1b8:	add	r3, pc, r3
   1b1bc:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1b1c0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1b1c4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1b1c8:	bl	153d4 <_start@@Base+0x2d1c>
   1b1cc:	str	r0, [fp, #-76]	; 0xffffffb4
   1b1d0:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1b1d4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b1d8:	cmp	r2, r3
   1b1dc:	beq	1b538 <_start@@Base+0x8e80>
   1b1e0:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1b1e4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1b1e8:	cmp	r2, r3
   1b1ec:	beq	1b538 <_start@@Base+0x8e80>
   1b1f0:	ldrh	r3, [fp, #-58]	; 0xffffffc6
   1b1f4:	cmp	r3, #0
   1b1f8:	bne	1b210 <_start@@Base+0x8b58>
   1b1fc:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1b200:	ldr	r3, [r3, #8]
   1b204:	and	r3, r3, #2
   1b208:	cmp	r3, #0
   1b20c:	beq	1b4b0 <_start@@Base+0x8df8>
   1b210:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1b214:	ldr	r0, [r3]
   1b218:	mov	r3, #2
   1b21c:	mov	r2, #2
   1b220:	mov	r1, #2
   1b224:	bl	2c400 <flatcc_builder_table_add@@Base>
   1b228:	str	r0, [fp, #-44]	; 0xffffffd4
   1b22c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b230:	cmp	r3, #0
   1b234:	beq	1b540 <_start@@Base+0x8e88>
   1b238:	ldrh	r3, [fp, #-58]	; 0xffffffc6
   1b23c:	mov	r1, r3
   1b240:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b244:	bl	12844 <_start@@Base+0x18c>
   1b248:	b	1b4b0 <_start@@Base+0x8df8>
   1b24c:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1b250:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1b254:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1b258:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1b25c:	str	r0, [fp, #-76]	; 0xffffffb4
   1b260:	b	1b4b0 <_start@@Base+0x8df8>
   1b264:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1b268:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1b26c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1b270:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1b274:	str	r0, [fp, #-76]	; 0xffffffb4
   1b278:	b	1b4b0 <_start@@Base+0x8df8>
   1b27c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1b280:	mov	r0, #0
   1b284:	mvn	r1, #255	; 0xff
   1b288:	and	r6, r2, r0
   1b28c:	and	r7, r3, r1
   1b290:	add	r3, pc, #648	; 0x288
   1b294:	ldrd	r2, [r3]
   1b298:	cmp	r7, r3
   1b29c:	cmpeq	r6, r2
   1b2a0:	bne	1b3cc <_start@@Base+0x8d14>
   1b2a4:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1b2a8:	str	r3, [fp, #-40]	; 0xffffffd8
   1b2ac:	mov	r3, #3
   1b2b0:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1b2b4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1b2b8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1b2bc:	bl	13f3c <_start@@Base+0x1884>
   1b2c0:	str	r0, [fp, #-76]	; 0xffffffb4
   1b2c4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1b2c8:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1b2cc:	cmp	r2, r3
   1b2d0:	beq	1b3b4 <_start@@Base+0x8cfc>
   1b2d4:	mov	r2, #0
   1b2d8:	mov	r3, #0
   1b2dc:	strd	r2, [fp, #-68]	; 0xffffffbc
   1b2e0:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1b2e4:	str	r3, [fp, #-40]	; 0xffffffd8
   1b2e8:	sub	r3, fp, #68	; 0x44
   1b2ec:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1b2f0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1b2f4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1b2f8:	bl	14b6c <_start@@Base+0x24b4>
   1b2fc:	str	r0, [fp, #-76]	; 0xffffffb4
   1b300:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1b304:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1b308:	cmp	r2, r3
   1b30c:	bne	1b35c <_start@@Base+0x8ca4>
   1b310:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1b314:	str	r3, [fp, #-40]	; 0xffffffd8
   1b318:	sub	r3, fp, #68	; 0x44
   1b31c:	str	r3, [sp]
   1b320:	ldr	r3, [pc, #516]	; 1b52c <_start@@Base+0x8e74>
   1b324:	add	r3, pc, r3
   1b328:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1b32c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1b330:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1b334:	bl	1579c <_start@@Base+0x30e4>
   1b338:	str	r0, [fp, #-76]	; 0xffffffb4
   1b33c:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1b340:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b344:	cmp	r2, r3
   1b348:	beq	1b548 <_start@@Base+0x8e90>
   1b34c:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1b350:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1b354:	cmp	r2, r3
   1b358:	beq	1b548 <_start@@Base+0x8e90>
   1b35c:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   1b360:	orrs	r3, r2, r3
   1b364:	bne	1b37c <_start@@Base+0x8cc4>
   1b368:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1b36c:	ldr	r3, [r3, #8]
   1b370:	and	r3, r3, #2
   1b374:	cmp	r3, #0
   1b378:	beq	1b4b0 <_start@@Base+0x8df8>
   1b37c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1b380:	ldr	r0, [r3]
   1b384:	mov	r3, #8
   1b388:	mov	r2, #8
   1b38c:	mov	r1, #1
   1b390:	bl	2c400 <flatcc_builder_table_add@@Base>
   1b394:	str	r0, [fp, #-44]	; 0xffffffd4
   1b398:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b39c:	cmp	r3, #0
   1b3a0:	beq	1b550 <_start@@Base+0x8e98>
   1b3a4:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   1b3a8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b3ac:	bl	12b9c <_start@@Base+0x4e4>
   1b3b0:	b	1b4b0 <_start@@Base+0x8df8>
   1b3b4:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1b3b8:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1b3bc:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1b3c0:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1b3c4:	str	r0, [fp, #-76]	; 0xffffffb4
   1b3c8:	b	1b4b0 <_start@@Base+0x8df8>
   1b3cc:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1b3d0:	mov	r0, #0
   1b3d4:	mov	r1, #0
   1b3d8:	movt	r1, #65535	; 0xffff
   1b3dc:	and	r8, r2, r0
   1b3e0:	and	r9, r3, r1
   1b3e4:	mov	r2, #0
   1b3e8:	mov	r3, #0
   1b3ec:	movt	r3, #26980	; 0x6964
   1b3f0:	cmp	r9, r3
   1b3f4:	cmpeq	r8, r2
   1b3f8:	bne	1b49c <_start@@Base+0x8de4>
   1b3fc:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1b400:	str	r3, [fp, #-40]	; 0xffffffd8
   1b404:	mov	r3, #2
   1b408:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1b40c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1b410:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1b414:	bl	13f3c <_start@@Base+0x1884>
   1b418:	str	r0, [fp, #-76]	; 0xffffffb4
   1b41c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1b420:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1b424:	cmp	r2, r3
   1b428:	beq	1b484 <_start@@Base+0x8dcc>
   1b42c:	sub	r3, fp, #56	; 0x38
   1b430:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1b434:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1b438:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1b43c:	bl	35410 <flatcc_json_parser_build_string@@Base>
   1b440:	str	r0, [fp, #-76]	; 0xffffffb4
   1b444:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1b448:	cmp	r3, #0
   1b44c:	beq	1b558 <_start@@Base+0x8ea0>
   1b450:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1b454:	ldr	r3, [r3]
   1b458:	mov	r1, #0
   1b45c:	mov	r0, r3
   1b460:	bl	2c670 <flatcc_builder_table_add_offset@@Base>
   1b464:	str	r0, [fp, #-48]	; 0xffffffd0
   1b468:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1b46c:	cmp	r3, #0
   1b470:	beq	1b558 <_start@@Base+0x8ea0>
   1b474:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1b478:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1b47c:	str	r2, [r3]
   1b480:	b	1b4b0 <_start@@Base+0x8df8>
   1b484:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1b488:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1b48c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1b490:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1b494:	str	r0, [fp, #-76]	; 0xffffffb4
   1b498:	b	1b4b0 <_start@@Base+0x8df8>
   1b49c:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1b4a0:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1b4a4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1b4a8:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1b4ac:	str	r0, [fp, #-76]	; 0xffffffb4
   1b4b0:	sub	r3, fp, #52	; 0x34
   1b4b4:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1b4b8:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1b4bc:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1b4c0:	bl	13b60 <_start@@Base+0x14a8>
   1b4c4:	str	r0, [fp, #-76]	; 0xffffffb4
   1b4c8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1b4cc:	cmp	r3, #0
   1b4d0:	bne	1b0d4 <_start@@Base+0x8a1c>
   1b4d4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1b4d8:	ldr	r3, [r3, #24]
   1b4dc:	cmp	r3, #0
   1b4e0:	bne	1b560 <_start@@Base+0x8ea8>
   1b4e4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1b4e8:	ldr	r3, [r3]
   1b4ec:	mov	r0, r3
   1b4f0:	bl	2a9b0 <flatcc_builder_end_table@@Base>
   1b4f4:	mov	r2, r0
   1b4f8:	ldr	r3, [fp, #-84]	; 0xffffffac
   1b4fc:	str	r2, [r3]
   1b500:	ldr	r3, [fp, #-84]	; 0xffffffac
   1b504:	ldr	r3, [r3]
   1b508:	cmp	r3, #0
   1b50c:	beq	1b568 <_start@@Base+0x8eb0>
   1b510:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1b514:	b	1b584 <_start@@Base+0x8ecc>
   1b518:	strvc	r0, [r0], #-0
   1b51c:	cmnvs	pc, #461373440	; 0x1b800000
   1b520:	andeq	r0, r0, r0
   1b524:	strbtvc	r6, [r1], -r0, lsl #24
   1b528:	ldrdeq	sp, [r2], -r4
   1b52c:	andeq	sp, r2, r4, ror lr
   1b530:	nop	{0}
   1b534:	b	1b56c <_start@@Base+0x8eb4>
   1b538:	nop	{0}
   1b53c:	b	1b56c <_start@@Base+0x8eb4>
   1b540:	nop	{0}
   1b544:	b	1b56c <_start@@Base+0x8eb4>
   1b548:	nop	{0}
   1b54c:	b	1b56c <_start@@Base+0x8eb4>
   1b550:	nop	{0}
   1b554:	b	1b56c <_start@@Base+0x8eb4>
   1b558:	nop	{0}
   1b55c:	b	1b56c <_start@@Base+0x8eb4>
   1b560:	nop	{0}
   1b564:	b	1b56c <_start@@Base+0x8eb4>
   1b568:	nop	{0}
   1b56c:	mov	r3, #33	; 0x21
   1b570:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1b574:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1b578:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1b57c:	bl	33258 <flatcc_json_parser_set_error@@Base>
   1b580:	mov	r3, r0
   1b584:	mov	r0, r3
   1b588:	sub	sp, fp, #28
   1b58c:	ldrd	r4, [sp]
   1b590:	ldrd	r6, [sp, #8]
   1b594:	ldrd	r8, [sp, #16]
   1b598:	ldr	fp, [sp, #24]
   1b59c:	add	sp, sp, #28
   1b5a0:	pop	{pc}		; (ldr pc, [sp], #4)
   1b5a4:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1b5a8:	strd	r6, [sp, #8]
   1b5ac:	strd	r8, [sp, #16]
   1b5b0:	str	fp, [sp, #24]
   1b5b4:	str	lr, [sp, #28]
   1b5b8:	add	fp, sp, #28
   1b5bc:	sub	sp, sp, #80	; 0x50
   1b5c0:	str	r0, [fp, #-64]	; 0xffffffc0
   1b5c4:	str	r1, [fp, #-68]	; 0xffffffbc
   1b5c8:	str	r2, [fp, #-72]	; 0xffffffb8
   1b5cc:	str	r3, [fp, #-76]	; 0xffffffb4
   1b5d0:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1b5d4:	mov	r2, #0
   1b5d8:	str	r2, [r3]
   1b5dc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1b5e0:	ldr	r3, [r3]
   1b5e4:	mov	r1, #4
   1b5e8:	mov	r0, r3
   1b5ec:	bl	29dfc <flatcc_builder_start_table@@Base>
   1b5f0:	mov	r3, r0
   1b5f4:	cmp	r3, #0
   1b5f8:	bne	1ba44 <_start@@Base+0x938c>
   1b5fc:	sub	r3, fp, #56	; 0x38
   1b600:	str	r3, [sp]
   1b604:	mov	r3, #1
   1b608:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1b60c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1b610:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1b614:	bl	35620 <flatcc_json_parser_prepare_unions@@Base>
   1b618:	mov	r2, r0
   1b61c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1b620:	cmp	r3, r2
   1b624:	beq	1ba4c <_start@@Base+0x9394>
   1b628:	sub	r3, fp, #48	; 0x30
   1b62c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1b630:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1b634:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1b638:	bl	13a6c <_start@@Base+0x13b4>
   1b63c:	str	r0, [fp, #-68]	; 0xffffffbc
   1b640:	b	1b9dc <_start@@Base+0x9324>
   1b644:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1b648:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1b64c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1b650:	bl	135f4 <_start@@Base+0xf3c>
   1b654:	str	r0, [fp, #-68]	; 0xffffffbc
   1b658:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1b65c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1b660:	bl	13928 <_start@@Base+0x1270>
   1b664:	strd	r0, [fp, #-36]	; 0xffffffdc
   1b668:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1b66c:	add	r1, pc, #1004	; 0x3ec
   1b670:	ldrd	r0, [r1]
   1b674:	cmp	r3, r1
   1b678:	cmpeq	r2, r0
   1b67c:	bne	1b774 <_start@@Base+0x90bc>
   1b680:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1b684:	add	r3, r3, #8
   1b688:	str	r3, [fp, #-68]	; 0xffffffbc
   1b68c:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1b690:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1b694:	bl	13928 <_start@@Base+0x1270>
   1b698:	strd	r0, [fp, #-36]	; 0xffffffdc
   1b69c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1b6a0:	mov	r0, #0
   1b6a4:	mvn	r1, #0
   1b6a8:	and	r4, r2, r0
   1b6ac:	and	r5, r3, r1
   1b6b0:	add	r3, pc, #944	; 0x3b0
   1b6b4:	ldrd	r2, [r3]
   1b6b8:	cmp	r5, r3
   1b6bc:	cmpeq	r4, r2
   1b6c0:	bne	1b75c <_start@@Base+0x90a4>
   1b6c4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1b6c8:	str	r3, [fp, #-40]	; 0xffffffd8
   1b6cc:	mov	r3, #4
   1b6d0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1b6d4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1b6d8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1b6dc:	bl	13f3c <_start@@Base+0x1884>
   1b6e0:	str	r0, [fp, #-68]	; 0xffffffbc
   1b6e4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1b6e8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1b6ec:	cmp	r2, r3
   1b6f0:	beq	1b744 <_start@@Base+0x908c>
   1b6f4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1b6f8:	ldr	r2, [pc, #904]	; 1ba88 <_start@@Base+0x93d0>
   1b6fc:	add	r2, pc, r2
   1b700:	str	r2, [sp, #16]
   1b704:	ldr	r2, [pc, #896]	; 1ba8c <_start@@Base+0x93d4>
   1b708:	add	r2, pc, r2
   1b70c:	str	r2, [sp, #12]
   1b710:	ldr	r2, [pc, #888]	; 1ba90 <_start@@Base+0x93d8>
   1b714:	add	r2, pc, r2
   1b718:	str	r2, [sp, #8]
   1b71c:	str	r3, [sp, #4]
   1b720:	mov	r3, #3
   1b724:	str	r3, [sp]
   1b728:	mov	r3, #0
   1b72c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1b730:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1b734:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1b738:	bl	35f88 <flatcc_json_parser_union_type_vector@@Base>
   1b73c:	str	r0, [fp, #-68]	; 0xffffffbc
   1b740:	b	1b9c4 <_start@@Base+0x930c>
   1b744:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1b748:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1b74c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1b750:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1b754:	str	r0, [fp, #-68]	; 0xffffffbc
   1b758:	b	1b9c4 <_start@@Base+0x930c>
   1b75c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1b760:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1b764:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1b768:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1b76c:	str	r0, [fp, #-68]	; 0xffffffbc
   1b770:	b	1b9c4 <_start@@Base+0x930c>
   1b774:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1b778:	mvn	r0, #255	; 0xff
   1b77c:	mvn	r1, #0
   1b780:	and	r6, r2, r0
   1b784:	and	r7, r3, r1
   1b788:	add	r3, pc, #736	; 0x2e0
   1b78c:	ldrd	r2, [r3]
   1b790:	cmp	r7, r3
   1b794:	cmpeq	r6, r2
   1b798:	bne	1b804 <_start@@Base+0x914c>
   1b79c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1b7a0:	str	r3, [fp, #-40]	; 0xffffffd8
   1b7a4:	mov	r3, #7
   1b7a8:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1b7ac:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1b7b0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1b7b4:	bl	13f3c <_start@@Base+0x1884>
   1b7b8:	str	r0, [fp, #-68]	; 0xffffffbc
   1b7bc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1b7c0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1b7c4:	cmp	r2, r3
   1b7c8:	beq	1b80c <_start@@Base+0x9154>
   1b7cc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1b7d0:	ldr	r2, [pc, #700]	; 1ba94 <_start@@Base+0x93dc>
   1b7d4:	add	r2, pc, r2
   1b7d8:	str	r2, [sp, #8]
   1b7dc:	str	r3, [sp, #4]
   1b7e0:	mov	r3, #3
   1b7e4:	str	r3, [sp]
   1b7e8:	mov	r3, #0
   1b7ec:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1b7f0:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1b7f4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1b7f8:	bl	35e28 <flatcc_json_parser_union_vector@@Base>
   1b7fc:	str	r0, [fp, #-68]	; 0xffffffbc
   1b800:	b	1b9c4 <_start@@Base+0x930c>
   1b804:	nop	{0}
   1b808:	b	1b810 <_start@@Base+0x9158>
   1b80c:	nop	{0}
   1b810:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1b814:	mov	r0, #0
   1b818:	movt	r0, #65535	; 0xffff
   1b81c:	mvn	r1, #0
   1b820:	and	r8, r2, r0
   1b824:	and	r9, r3, r1
   1b828:	add	r3, pc, #584	; 0x248
   1b82c:	ldrd	r2, [r3]
   1b830:	cmp	r9, r3
   1b834:	cmpeq	r8, r2
   1b838:	bne	1b8dc <_start@@Base+0x9224>
   1b83c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1b840:	str	r3, [fp, #-40]	; 0xffffffd8
   1b844:	mov	r3, #6
   1b848:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1b84c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1b850:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1b854:	bl	13f3c <_start@@Base+0x1884>
   1b858:	str	r0, [fp, #-68]	; 0xffffffbc
   1b85c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1b860:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1b864:	cmp	r2, r3
   1b868:	beq	1b8c4 <_start@@Base+0x920c>
   1b86c:	sub	r3, fp, #52	; 0x34
   1b870:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1b874:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1b878:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1b87c:	bl	1bae4 <_start@@Base+0x942c>
   1b880:	str	r0, [fp, #-68]	; 0xffffffbc
   1b884:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1b888:	cmp	r3, #0
   1b88c:	beq	1ba54 <_start@@Base+0x939c>
   1b890:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1b894:	ldr	r3, [r3]
   1b898:	mov	r1, #0
   1b89c:	mov	r0, r3
   1b8a0:	bl	2c670 <flatcc_builder_table_add_offset@@Base>
   1b8a4:	str	r0, [fp, #-44]	; 0xffffffd4
   1b8a8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b8ac:	cmp	r3, #0
   1b8b0:	beq	1ba54 <_start@@Base+0x939c>
   1b8b4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1b8b8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b8bc:	str	r2, [r3]
   1b8c0:	b	1b9c4 <_start@@Base+0x930c>
   1b8c4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1b8c8:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1b8cc:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1b8d0:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1b8d4:	str	r0, [fp, #-68]	; 0xffffffbc
   1b8d8:	b	1b9c4 <_start@@Base+0x930c>
   1b8dc:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1b8e0:	mov	r0, #-16777216	; 0xff000000
   1b8e4:	mvn	r1, #0
   1b8e8:	and	ip, r2, r0
   1b8ec:	str	ip, [fp, #-84]	; 0xffffffac
   1b8f0:	and	r3, r3, r1
   1b8f4:	str	r3, [fp, #-80]	; 0xffffffb0
   1b8f8:	add	r3, pc, #384	; 0x180
   1b8fc:	ldrd	r2, [r3]
   1b900:	ldrd	r0, [fp, #-84]	; 0xffffffac
   1b904:	cmp	r1, r3
   1b908:	cmpeq	r0, r2
   1b90c:	bne	1b9b0 <_start@@Base+0x92f8>
   1b910:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1b914:	str	r3, [fp, #-40]	; 0xffffffd8
   1b918:	mov	r3, #5
   1b91c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1b920:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1b924:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1b928:	bl	13f3c <_start@@Base+0x1884>
   1b92c:	str	r0, [fp, #-68]	; 0xffffffbc
   1b930:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1b934:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1b938:	cmp	r2, r3
   1b93c:	beq	1b998 <_start@@Base+0x92e0>
   1b940:	sub	r3, fp, #52	; 0x34
   1b944:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1b948:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1b94c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1b950:	bl	23e1c <_start@@Base+0x11764>
   1b954:	str	r0, [fp, #-68]	; 0xffffffbc
   1b958:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1b95c:	cmp	r3, #0
   1b960:	beq	1ba98 <_start@@Base+0x93e0>
   1b964:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1b968:	ldr	r3, [r3]
   1b96c:	mov	r1, #1
   1b970:	mov	r0, r3
   1b974:	bl	2c670 <flatcc_builder_table_add_offset@@Base>
   1b978:	str	r0, [fp, #-44]	; 0xffffffd4
   1b97c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b980:	cmp	r3, #0
   1b984:	beq	1ba98 <_start@@Base+0x93e0>
   1b988:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1b98c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b990:	str	r2, [r3]
   1b994:	b	1b9c4 <_start@@Base+0x930c>
   1b998:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1b99c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1b9a0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1b9a4:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1b9a8:	str	r0, [fp, #-68]	; 0xffffffbc
   1b9ac:	b	1b9c4 <_start@@Base+0x930c>
   1b9b0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1b9b4:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1b9b8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1b9bc:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1b9c0:	str	r0, [fp, #-68]	; 0xffffffbc
   1b9c4:	sub	r3, fp, #48	; 0x30
   1b9c8:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1b9cc:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1b9d0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1b9d4:	bl	13b60 <_start@@Base+0x14a8>
   1b9d8:	str	r0, [fp, #-68]	; 0xffffffbc
   1b9dc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1b9e0:	cmp	r3, #0
   1b9e4:	bne	1b644 <_start@@Base+0x8f8c>
   1b9e8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1b9ec:	ldr	r3, [r3, #24]
   1b9f0:	cmp	r3, #0
   1b9f4:	bne	1baa0 <_start@@Base+0x93e8>
   1b9f8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1b9fc:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1ba00:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1ba04:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1ba08:	bl	356e4 <flatcc_json_parser_finalize_unions@@Base>
   1ba0c:	str	r0, [fp, #-68]	; 0xffffffbc
   1ba10:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1ba14:	ldr	r3, [r3]
   1ba18:	mov	r0, r3
   1ba1c:	bl	2a9b0 <flatcc_builder_end_table@@Base>
   1ba20:	mov	r2, r0
   1ba24:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1ba28:	str	r2, [r3]
   1ba2c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1ba30:	ldr	r3, [r3]
   1ba34:	cmp	r3, #0
   1ba38:	beq	1baa8 <_start@@Base+0x93f0>
   1ba3c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1ba40:	b	1bac4 <_start@@Base+0x940c>
   1ba44:	nop	{0}
   1ba48:	b	1baac <_start@@Base+0x93f4>
   1ba4c:	nop	{0}
   1ba50:	b	1baac <_start@@Base+0x93f4>
   1ba54:	nop	{0}
   1ba58:	b	1baac <_start@@Base+0x93f4>
   1ba5c:	nop	{0}
   1ba60:	cmnvs	lr, pc, asr r9
   1ba64:	stclvs	14, cr6, [r1, #-484]!	; 0xfffffe1c
   1ba68:	andeq	r0, r0, r0
   1ba6c:	ldrbtvc	r7, [r9], #-101	; 0xffffff9b
   1ba70:	cmnvs	lr, r0, lsl #18
   1ba74:	stclvs	14, cr6, [r1, #-484]!	; 0xfffffe1c
   1ba78:	ldmdbvs	r8!, {}^	; <UNPREDICTABLE>
   1ba7c:	rsbsvc	r6, r2, r6, ror #10
   1ba80:	strvs	r0, [r0, #-0]
   1ba84:	stclvs	6, cr7, [pc, #-420]!	; 1b8e8 <_start@@Base+0x9230>
   1ba88:			; <UNDEFINED> instruction: 0xffffcd88
   1ba8c:			; <UNDEFINED> instruction: 0xffffcc00
   1ba90:	muleq	r2, r0, sl
   1ba94:			; <UNDEFINED> instruction: 0xffffcb34
   1ba98:	nop	{0}
   1ba9c:	b	1baac <_start@@Base+0x93f4>
   1baa0:	nop	{0}
   1baa4:	b	1baac <_start@@Base+0x93f4>
   1baa8:	nop	{0}
   1baac:	mov	r3, #33	; 0x21
   1bab0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1bab4:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1bab8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1babc:	bl	33258 <flatcc_json_parser_set_error@@Base>
   1bac0:	mov	r3, r0
   1bac4:	mov	r0, r3
   1bac8:	sub	sp, fp, #28
   1bacc:	ldrd	r4, [sp]
   1bad0:	ldrd	r6, [sp, #8]
   1bad4:	ldrd	r8, [sp, #16]
   1bad8:	ldr	fp, [sp, #24]
   1badc:	add	sp, sp, #28
   1bae0:	pop	{pc}		; (ldr pc, [sp], #4)
   1bae4:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1bae8:	strd	r6, [sp, #8]
   1baec:	strd	r8, [sp, #16]
   1baf0:	str	fp, [sp, #24]
   1baf4:	str	lr, [sp, #28]
   1baf8:	add	fp, sp, #28
   1bafc:	sub	sp, sp, #40	; 0x28
   1bb00:	str	r0, [fp, #-56]	; 0xffffffc8
   1bb04:	str	r1, [fp, #-60]	; 0xffffffc4
   1bb08:	str	r2, [fp, #-64]	; 0xffffffc0
   1bb0c:	str	r3, [fp, #-68]	; 0xffffffbc
   1bb10:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1bb14:	mov	r2, #0
   1bb18:	str	r2, [r3]
   1bb1c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1bb20:	ldr	r3, [r3]
   1bb24:	mov	r1, #3
   1bb28:	mov	r0, r3
   1bb2c:	bl	29dfc <flatcc_builder_start_table@@Base>
   1bb30:	mov	r3, r0
   1bb34:	cmp	r3, #0
   1bb38:	bne	1bed4 <_start@@Base+0x981c>
   1bb3c:	sub	r3, fp, #48	; 0x30
   1bb40:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1bb44:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1bb48:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1bb4c:	bl	13a6c <_start@@Base+0x13b4>
   1bb50:	str	r0, [fp, #-60]	; 0xffffffc4
   1bb54:	b	1be84 <_start@@Base+0x97cc>
   1bb58:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1bb5c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1bb60:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1bb64:	bl	135f4 <_start@@Base+0xf3c>
   1bb68:	str	r0, [fp, #-60]	; 0xffffffc4
   1bb6c:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1bb70:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1bb74:	bl	13928 <_start@@Base+0x1270>
   1bb78:	strd	r0, [fp, #-36]	; 0xffffffdc
   1bb7c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1bb80:	add	r1, pc, #944	; 0x3b0
   1bb84:	ldrd	r0, [r1]
   1bb88:	cmp	r3, r1
   1bb8c:	cmpeq	r2, r0
   1bb90:	bne	1be58 <_start@@Base+0x97a0>
   1bb94:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1bb98:	add	r3, r3, #8
   1bb9c:	str	r3, [fp, #-60]	; 0xffffffc4
   1bba0:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1bba4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1bba8:	bl	13928 <_start@@Base+0x1270>
   1bbac:	strd	r0, [fp, #-36]	; 0xffffffdc
   1bbb0:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1bbb4:	add	r1, pc, #900	; 0x384
   1bbb8:	ldrd	r0, [r1]
   1bbbc:	cmp	r3, r1
   1bbc0:	cmpeq	r2, r0
   1bbc4:	bne	1be40 <_start@@Base+0x9788>
   1bbc8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1bbcc:	add	r3, r3, #8
   1bbd0:	str	r3, [fp, #-60]	; 0xffffffc4
   1bbd4:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1bbd8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1bbdc:	bl	13928 <_start@@Base+0x1270>
   1bbe0:	strd	r0, [fp, #-36]	; 0xffffffdc
   1bbe4:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1bbe8:	mov	r0, #0
   1bbec:	movt	r0, #65535	; 0xffff
   1bbf0:	mvn	r1, #0
   1bbf4:	and	r4, r2, r0
   1bbf8:	and	r5, r3, r1
   1bbfc:	add	r3, pc, #836	; 0x344
   1bc00:	ldrd	r2, [r3]
   1bc04:	cmp	r5, r3
   1bc08:	cmpeq	r4, r2
   1bc0c:	bne	1bc98 <_start@@Base+0x95e0>
   1bc10:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1bc14:	str	r3, [fp, #-40]	; 0xffffffd8
   1bc18:	mov	r3, #6
   1bc1c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1bc20:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1bc24:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1bc28:	bl	13f3c <_start@@Base+0x1884>
   1bc2c:	str	r0, [fp, #-60]	; 0xffffffc4
   1bc30:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1bc34:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1bc38:	cmp	r2, r3
   1bc3c:	beq	1bd48 <_start@@Base+0x9690>
   1bc40:	sub	r3, fp, #52	; 0x34
   1bc44:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1bc48:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1bc4c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1bc50:	bl	1cc40 <_start@@Base+0xa588>
   1bc54:	str	r0, [fp, #-60]	; 0xffffffc4
   1bc58:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1bc5c:	cmp	r3, #0
   1bc60:	beq	1bedc <_start@@Base+0x9824>
   1bc64:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1bc68:	ldr	r3, [r3]
   1bc6c:	mov	r1, #1
   1bc70:	mov	r0, r3
   1bc74:	bl	2c670 <flatcc_builder_table_add_offset@@Base>
   1bc78:	str	r0, [fp, #-44]	; 0xffffffd4
   1bc7c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1bc80:	cmp	r3, #0
   1bc84:	beq	1bedc <_start@@Base+0x9824>
   1bc88:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1bc8c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1bc90:	str	r2, [r3]
   1bc94:	b	1be6c <_start@@Base+0x97b4>
   1bc98:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1bc9c:	mov	r0, #-16777216	; 0xff000000
   1bca0:	mvn	r1, #0
   1bca4:	and	r6, r2, r0
   1bca8:	and	r7, r3, r1
   1bcac:	add	r3, pc, #668	; 0x29c
   1bcb0:	ldrd	r2, [r3]
   1bcb4:	cmp	r7, r3
   1bcb8:	cmpeq	r6, r2
   1bcbc:	bne	1bd50 <_start@@Base+0x9698>
   1bcc0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1bcc4:	str	r3, [fp, #-40]	; 0xffffffd8
   1bcc8:	mov	r3, #5
   1bccc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1bcd0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1bcd4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1bcd8:	bl	13f3c <_start@@Base+0x1884>
   1bcdc:	str	r0, [fp, #-60]	; 0xffffffc4
   1bce0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1bce4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1bce8:	cmp	r2, r3
   1bcec:	beq	1bd58 <_start@@Base+0x96a0>
   1bcf0:	sub	r3, fp, #52	; 0x34
   1bcf4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1bcf8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1bcfc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1bd00:	bl	1bf60 <_start@@Base+0x98a8>
   1bd04:	str	r0, [fp, #-60]	; 0xffffffc4
   1bd08:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1bd0c:	cmp	r3, #0
   1bd10:	beq	1bee4 <_start@@Base+0x982c>
   1bd14:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1bd18:	ldr	r3, [r3]
   1bd1c:	mov	r1, #0
   1bd20:	mov	r0, r3
   1bd24:	bl	2c670 <flatcc_builder_table_add_offset@@Base>
   1bd28:	str	r0, [fp, #-44]	; 0xffffffd4
   1bd2c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1bd30:	cmp	r3, #0
   1bd34:	beq	1bee4 <_start@@Base+0x982c>
   1bd38:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1bd3c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1bd40:	str	r2, [r3]
   1bd44:	b	1be6c <_start@@Base+0x97b4>
   1bd48:	nop	{0}
   1bd4c:	b	1bd5c <_start@@Base+0x96a4>
   1bd50:	nop	{0}
   1bd54:	b	1bd5c <_start@@Base+0x96a4>
   1bd58:	nop	{0}
   1bd5c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1bd60:	mov	r0, #0
   1bd64:	movt	r0, #65535	; 0xffff
   1bd68:	mvn	r1, #0
   1bd6c:	and	r8, r2, r0
   1bd70:	and	r9, r3, r1
   1bd74:	add	r3, pc, #476	; 0x1dc
   1bd78:	ldrd	r2, [r3]
   1bd7c:	cmp	r9, r3
   1bd80:	cmpeq	r8, r2
   1bd84:	bne	1be28 <_start@@Base+0x9770>
   1bd88:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1bd8c:	str	r3, [fp, #-40]	; 0xffffffd8
   1bd90:	mov	r3, #6
   1bd94:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1bd98:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1bd9c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1bda0:	bl	13f3c <_start@@Base+0x1884>
   1bda4:	str	r0, [fp, #-60]	; 0xffffffc4
   1bda8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1bdac:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1bdb0:	cmp	r2, r3
   1bdb4:	beq	1be10 <_start@@Base+0x9758>
   1bdb8:	sub	r3, fp, #52	; 0x34
   1bdbc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1bdc0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1bdc4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1bdc8:	bl	1d0b0 <_start@@Base+0xa9f8>
   1bdcc:	str	r0, [fp, #-60]	; 0xffffffc4
   1bdd0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1bdd4:	cmp	r3, #0
   1bdd8:	beq	1beec <_start@@Base+0x9834>
   1bddc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1bde0:	ldr	r3, [r3]
   1bde4:	mov	r1, #2
   1bde8:	mov	r0, r3
   1bdec:	bl	2c670 <flatcc_builder_table_add_offset@@Base>
   1bdf0:	str	r0, [fp, #-44]	; 0xffffffd4
   1bdf4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1bdf8:	cmp	r3, #0
   1bdfc:	beq	1beec <_start@@Base+0x9834>
   1be00:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1be04:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1be08:	str	r2, [r3]
   1be0c:	b	1be6c <_start@@Base+0x97b4>
   1be10:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1be14:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1be18:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1be1c:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1be20:	str	r0, [fp, #-60]	; 0xffffffc4
   1be24:	b	1be6c <_start@@Base+0x97b4>
   1be28:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1be2c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1be30:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1be34:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1be38:	str	r0, [fp, #-60]	; 0xffffffc4
   1be3c:	b	1be6c <_start@@Base+0x97b4>
   1be40:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1be44:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1be48:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1be4c:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1be50:	str	r0, [fp, #-60]	; 0xffffffc4
   1be54:	b	1be6c <_start@@Base+0x97b4>
   1be58:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1be5c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1be60:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1be64:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1be68:	str	r0, [fp, #-60]	; 0xffffffc4
   1be6c:	sub	r3, fp, #48	; 0x30
   1be70:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1be74:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1be78:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1be7c:	bl	13b60 <_start@@Base+0x14a8>
   1be80:	str	r0, [fp, #-60]	; 0xffffffc4
   1be84:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1be88:	cmp	r3, #0
   1be8c:	bne	1bb58 <_start@@Base+0x94a0>
   1be90:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1be94:	ldr	r3, [r3, #24]
   1be98:	cmp	r3, #0
   1be9c:	bne	1bef4 <_start@@Base+0x983c>
   1bea0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1bea4:	ldr	r3, [r3]
   1bea8:	mov	r0, r3
   1beac:	bl	2a9b0 <flatcc_builder_end_table@@Base>
   1beb0:	mov	r2, r0
   1beb4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1beb8:	str	r2, [r3]
   1bebc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1bec0:	ldr	r3, [r3]
   1bec4:	cmp	r3, #0
   1bec8:	beq	1befc <_start@@Base+0x9844>
   1becc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1bed0:	b	1bf18 <_start@@Base+0x9860>
   1bed4:	nop	{0}
   1bed8:	b	1bf00 <_start@@Base+0x9848>
   1bedc:	nop	{0}
   1bee0:	b	1bf00 <_start@@Base+0x9848>
   1bee4:	nop	{0}
   1bee8:	b	1bf00 <_start@@Base+0x9848>
   1beec:	nop	{0}
   1bef0:	b	1bf00 <_start@@Base+0x9848>
   1bef4:	nop	{0}
   1bef8:	b	1bf00 <_start@@Base+0x9848>
   1befc:	nop	{0}
   1bf00:	mov	r3, #33	; 0x21
   1bf04:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1bf08:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1bf0c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1bf10:	bl	33258 <flatcc_json_parser_set_error@@Base>
   1bf14:	mov	r3, r0
   1bf18:	mov	r0, r3
   1bf1c:	sub	sp, fp, #28
   1bf20:	ldrd	r4, [sp]
   1bf24:	ldrd	r6, [sp, #8]
   1bf28:	ldrd	r8, [sp, #16]
   1bf2c:	ldr	fp, [sp, #24]
   1bf30:	add	sp, sp, #28
   1bf34:	pop	{pc}		; (ldr pc, [sp], #4)
   1bf38:	bvs	1cf7cf8 <__bss_end__@@Base+0x1cae83c>
   1bf3c:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   1bf40:	ldmdbvs	r8!, {r0, r5, r6, ip, sp, lr}^
   1bf44:	rsbsvc	r6, r2, r6, ror #10
   1bf48:	ldrvs	r0, [r2, -r0]!
   1bf4c:	rsbsvc	r6, r3, #1802240	; 0x1b8000
   1bf50:	strvs	r0, [r0, -r0]
   1bf54:	rsbsvc	r6, r3, #1802240	; 0x1b8000
   1bf58:	ldrvs	r0, [r3, -r0]!
   1bf5c:	rsbsvc	r6, r3, #1802240	; 0x1b8000
   1bf60:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1bf64:	strd	r6, [sp, #8]
   1bf68:	strd	r8, [sp, #16]
   1bf6c:	str	fp, [sp, #24]
   1bf70:	str	lr, [sp, #28]
   1bf74:	add	fp, sp, #28
   1bf78:	sub	sp, sp, #120	; 0x78
   1bf7c:	str	r0, [fp, #-104]	; 0xffffff98
   1bf80:	str	r1, [fp, #-108]	; 0xffffff94
   1bf84:	str	r2, [fp, #-112]	; 0xffffff90
   1bf88:	str	r3, [fp, #-116]	; 0xffffff8c
   1bf8c:	ldr	r3, [fp, #-116]	; 0xffffff8c
   1bf90:	mov	r2, #0
   1bf94:	str	r2, [r3]
   1bf98:	ldr	r3, [fp, #-104]	; 0xffffff98
   1bf9c:	ldr	r3, [r3]
   1bfa0:	mov	r1, #9
   1bfa4:	mov	r0, r3
   1bfa8:	bl	29dfc <flatcc_builder_start_table@@Base>
   1bfac:	mov	r3, r0
   1bfb0:	cmp	r3, #0
   1bfb4:	bne	1cb68 <_start@@Base+0xa4b0>
   1bfb8:	sub	r3, fp, #52	; 0x34
   1bfbc:	ldr	r2, [fp, #-112]	; 0xffffff90
   1bfc0:	ldr	r1, [fp, #-108]	; 0xffffff94
   1bfc4:	ldr	r0, [fp, #-104]	; 0xffffff98
   1bfc8:	bl	13a6c <_start@@Base+0x13b4>
   1bfcc:	str	r0, [fp, #-108]	; 0xffffff94
   1bfd0:	b	1cb18 <_start@@Base+0xa460>
   1bfd4:	ldr	r2, [fp, #-112]	; 0xffffff90
   1bfd8:	ldr	r1, [fp, #-108]	; 0xffffff94
   1bfdc:	ldr	r0, [fp, #-104]	; 0xffffff98
   1bfe0:	bl	135f4 <_start@@Base+0xf3c>
   1bfe4:	str	r0, [fp, #-108]	; 0xffffff94
   1bfe8:	ldr	r1, [fp, #-112]	; 0xffffff90
   1bfec:	ldr	r0, [fp, #-108]	; 0xffffff94
   1bff0:	bl	13928 <_start@@Base+0x1270>
   1bff4:	strd	r0, [fp, #-36]	; 0xffffffdc
   1bff8:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1bffc:	add	r3, pc, #932	; 0x3a4
   1c000:	ldrd	r2, [r3]
   1c004:	cmp	r1, r3
   1c008:	cmpeq	r0, r2
   1c00c:	bhi	1c4ac <_start@@Base+0x9df4>
   1c010:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1c014:	add	r3, pc, #916	; 0x394
   1c018:	ldrd	r2, [r3]
   1c01c:	cmp	r1, r3
   1c020:	cmpeq	r0, r2
   1c024:	bne	1c1a4 <_start@@Base+0x9aec>
   1c028:	ldr	r3, [fp, #-108]	; 0xffffff94
   1c02c:	add	r3, r3, #8
   1c030:	str	r3, [fp, #-108]	; 0xffffff94
   1c034:	ldr	r1, [fp, #-112]	; 0xffffff90
   1c038:	ldr	r0, [fp, #-108]	; 0xffffff94
   1c03c:	bl	13928 <_start@@Base+0x1270>
   1c040:	strd	r0, [fp, #-36]	; 0xffffffdc
   1c044:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1c048:	mov	r2, #0
   1c04c:	mov	r3, #-16777216	; 0xff000000
   1c050:	and	r4, r0, r2
   1c054:	and	r5, r1, r3
   1c058:	cmp	r5, #889192448	; 0x35000000
   1c05c:	cmpeq	r4, #0
   1c060:	bne	1c18c <_start@@Base+0x9ad4>
   1c064:	ldr	r3, [fp, #-108]	; 0xffffff94
   1c068:	str	r3, [fp, #-40]	; 0xffffffd8
   1c06c:	mov	r3, #1
   1c070:	ldr	r2, [fp, #-112]	; 0xffffff90
   1c074:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1c078:	ldr	r0, [fp, #-104]	; 0xffffff98
   1c07c:	bl	13f3c <_start@@Base+0x1884>
   1c080:	str	r0, [fp, #-108]	; 0xffffff94
   1c084:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1c088:	ldr	r3, [fp, #-108]	; 0xffffff94
   1c08c:	cmp	r2, r3
   1c090:	beq	1c174 <_start@@Base+0x9abc>
   1c094:	mov	r3, #0
   1c098:	str	r3, [fp, #-60]	; 0xffffffc4
   1c09c:	ldr	r3, [fp, #-108]	; 0xffffff94
   1c0a0:	str	r3, [fp, #-40]	; 0xffffffd8
   1c0a4:	sub	r3, fp, #60	; 0x3c
   1c0a8:	ldr	r2, [fp, #-112]	; 0xffffff90
   1c0ac:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1c0b0:	ldr	r0, [fp, #-104]	; 0xffffff98
   1c0b4:	bl	148d8 <_start@@Base+0x2220>
   1c0b8:	str	r0, [fp, #-108]	; 0xffffff94
   1c0bc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1c0c0:	ldr	r3, [fp, #-108]	; 0xffffff94
   1c0c4:	cmp	r2, r3
   1c0c8:	bne	1c118 <_start@@Base+0x9a60>
   1c0cc:	ldr	r3, [fp, #-108]	; 0xffffff94
   1c0d0:	str	r3, [fp, #-40]	; 0xffffffd8
   1c0d4:	sub	r3, fp, #60	; 0x3c
   1c0d8:	str	r3, [sp]
   1c0dc:	ldr	r3, [pc, #732]	; 1c3c0 <_start@@Base+0x9d08>
   1c0e0:	add	r3, pc, r3
   1c0e4:	ldr	r2, [fp, #-112]	; 0xffffff90
   1c0e8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1c0ec:	ldr	r0, [fp, #-104]	; 0xffffff98
   1c0f0:	bl	151f4 <_start@@Base+0x2b3c>
   1c0f4:	str	r0, [fp, #-108]	; 0xffffff94
   1c0f8:	ldr	r2, [fp, #-108]	; 0xffffff94
   1c0fc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c100:	cmp	r2, r3
   1c104:	beq	1cb70 <_start@@Base+0xa4b8>
   1c108:	ldr	r2, [fp, #-108]	; 0xffffff94
   1c10c:	ldr	r3, [fp, #-112]	; 0xffffff90
   1c110:	cmp	r2, r3
   1c114:	beq	1cb70 <_start@@Base+0xa4b8>
   1c118:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1c11c:	cmp	r3, #0
   1c120:	bne	1c138 <_start@@Base+0x9a80>
   1c124:	ldr	r3, [fp, #-104]	; 0xffffff98
   1c128:	ldr	r3, [r3, #8]
   1c12c:	and	r3, r3, #2
   1c130:	cmp	r3, #0
   1c134:	beq	1cb00 <_start@@Base+0xa448>
   1c138:	ldr	r3, [fp, #-104]	; 0xffffff98
   1c13c:	ldr	r0, [r3]
   1c140:	mov	r3, #4
   1c144:	mov	r2, #4
   1c148:	mov	r1, #1
   1c14c:	bl	2c400 <flatcc_builder_table_add@@Base>
   1c150:	str	r0, [fp, #-44]	; 0xffffffd4
   1c154:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1c158:	cmp	r3, #0
   1c15c:	beq	1cb78 <_start@@Base+0xa4c0>
   1c160:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1c164:	mov	r1, r3
   1c168:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1c16c:	bl	128b4 <_start@@Base+0x1fc>
   1c170:	b	1cb00 <_start@@Base+0xa448>
   1c174:	ldr	r2, [fp, #-112]	; 0xffffff90
   1c178:	ldr	r1, [fp, #-108]	; 0xffffff94
   1c17c:	ldr	r0, [fp, #-104]	; 0xffffff98
   1c180:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1c184:	str	r0, [fp, #-108]	; 0xffffff94
   1c188:	b	1cb00 <_start@@Base+0xa448>
   1c18c:	ldr	r2, [fp, #-112]	; 0xffffff90
   1c190:	ldr	r1, [fp, #-108]	; 0xffffff94
   1c194:	ldr	r0, [fp, #-104]	; 0xffffff98
   1c198:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1c19c:	str	r0, [fp, #-108]	; 0xffffff94
   1c1a0:	b	1cb00 <_start@@Base+0xa448>
   1c1a4:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1c1a8:	mov	r2, #0
   1c1ac:	mvn	r3, #0
   1c1b0:	and	r6, r0, r2
   1c1b4:	and	r7, r1, r3
   1c1b8:	mov	r2, #0
   1c1bc:	movw	r3, #24929	; 0x6161
   1c1c0:	movt	r3, #24929	; 0x6161
   1c1c4:	cmp	r7, r3
   1c1c8:	cmpeq	r6, r2
   1c1cc:	bne	1c258 <_start@@Base+0x9ba0>
   1c1d0:	ldr	r3, [fp, #-108]	; 0xffffff94
   1c1d4:	str	r3, [fp, #-40]	; 0xffffffd8
   1c1d8:	mov	r3, #4
   1c1dc:	ldr	r2, [fp, #-112]	; 0xffffff90
   1c1e0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1c1e4:	ldr	r0, [fp, #-104]	; 0xffffff98
   1c1e8:	bl	13f3c <_start@@Base+0x1884>
   1c1ec:	str	r0, [fp, #-108]	; 0xffffff94
   1c1f0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1c1f4:	ldr	r3, [fp, #-108]	; 0xffffff94
   1c1f8:	cmp	r2, r3
   1c1fc:	beq	1c260 <_start@@Base+0x9ba8>
   1c200:	sub	r3, fp, #56	; 0x38
   1c204:	ldr	r2, [fp, #-112]	; 0xffffff90
   1c208:	ldr	r1, [fp, #-108]	; 0xffffff94
   1c20c:	ldr	r0, [fp, #-104]	; 0xffffff98
   1c210:	bl	35410 <flatcc_json_parser_build_string@@Base>
   1c214:	str	r0, [fp, #-108]	; 0xffffff94
   1c218:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1c21c:	cmp	r3, #0
   1c220:	beq	1cb80 <_start@@Base+0xa4c8>
   1c224:	ldr	r3, [fp, #-104]	; 0xffffff98
   1c228:	ldr	r3, [r3]
   1c22c:	mov	r1, #0
   1c230:	mov	r0, r3
   1c234:	bl	2c670 <flatcc_builder_table_add_offset@@Base>
   1c238:	str	r0, [fp, #-48]	; 0xffffffd0
   1c23c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1c240:	cmp	r3, #0
   1c244:	beq	1cb80 <_start@@Base+0xa4c8>
   1c248:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1c24c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1c250:	str	r2, [r3]
   1c254:	b	1cb00 <_start@@Base+0xa448>
   1c258:	nop	{0}
   1c25c:	b	1c264 <_start@@Base+0x9bac>
   1c260:	nop	{0}
   1c264:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1c268:	add	r3, pc, #328	; 0x148
   1c26c:	ldrd	r2, [r3]
   1c270:	cmp	r1, r3
   1c274:	cmpeq	r0, r2
   1c278:	bne	1c3c8 <_start@@Base+0x9d10>
   1c27c:	ldr	r3, [fp, #-108]	; 0xffffff94
   1c280:	str	r3, [fp, #-40]	; 0xffffffd8
   1c284:	mov	r3, #8
   1c288:	ldr	r2, [fp, #-112]	; 0xffffff90
   1c28c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1c290:	ldr	r0, [fp, #-104]	; 0xffffff98
   1c294:	bl	13f3c <_start@@Base+0x1884>
   1c298:	str	r0, [fp, #-108]	; 0xffffff94
   1c29c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1c2a0:	ldr	r3, [fp, #-108]	; 0xffffff94
   1c2a4:	cmp	r2, r3
   1c2a8:	beq	1c38c <_start@@Base+0x9cd4>
   1c2ac:	mov	r2, #0
   1c2b0:	mov	r3, #0
   1c2b4:	strd	r2, [fp, #-68]	; 0xffffffbc
   1c2b8:	ldr	r3, [fp, #-108]	; 0xffffff94
   1c2bc:	str	r3, [fp, #-40]	; 0xffffffd8
   1c2c0:	sub	r3, fp, #68	; 0x44
   1c2c4:	ldr	r2, [fp, #-112]	; 0xffffff90
   1c2c8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1c2cc:	ldr	r0, [fp, #-104]	; 0xffffff98
   1c2d0:	bl	14b6c <_start@@Base+0x24b4>
   1c2d4:	str	r0, [fp, #-108]	; 0xffffff94
   1c2d8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1c2dc:	ldr	r3, [fp, #-108]	; 0xffffff94
   1c2e0:	cmp	r2, r3
   1c2e4:	bne	1c334 <_start@@Base+0x9c7c>
   1c2e8:	ldr	r3, [fp, #-108]	; 0xffffff94
   1c2ec:	str	r3, [fp, #-40]	; 0xffffffd8
   1c2f0:	sub	r3, fp, #68	; 0x44
   1c2f4:	str	r3, [sp]
   1c2f8:	ldr	r3, [pc, #196]	; 1c3c4 <_start@@Base+0x9d0c>
   1c2fc:	add	r3, pc, r3
   1c300:	ldr	r2, [fp, #-112]	; 0xffffff90
   1c304:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1c308:	ldr	r0, [fp, #-104]	; 0xffffff98
   1c30c:	bl	1579c <_start@@Base+0x30e4>
   1c310:	str	r0, [fp, #-108]	; 0xffffff94
   1c314:	ldr	r2, [fp, #-108]	; 0xffffff94
   1c318:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c31c:	cmp	r2, r3
   1c320:	beq	1cb88 <_start@@Base+0xa4d0>
   1c324:	ldr	r2, [fp, #-108]	; 0xffffff94
   1c328:	ldr	r3, [fp, #-112]	; 0xffffff90
   1c32c:	cmp	r2, r3
   1c330:	beq	1cb88 <_start@@Base+0xa4d0>
   1c334:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   1c338:	orrs	r3, r2, r3
   1c33c:	bne	1c354 <_start@@Base+0x9c9c>
   1c340:	ldr	r3, [fp, #-104]	; 0xffffff98
   1c344:	ldr	r3, [r3, #8]
   1c348:	and	r3, r3, #2
   1c34c:	cmp	r3, #0
   1c350:	beq	1cb00 <_start@@Base+0xa448>
   1c354:	ldr	r3, [fp, #-104]	; 0xffffff98
   1c358:	ldr	r0, [r3]
   1c35c:	mov	r3, #8
   1c360:	mov	r2, #8
   1c364:	mov	r1, #3
   1c368:	bl	2c400 <flatcc_builder_table_add@@Base>
   1c36c:	str	r0, [fp, #-44]	; 0xffffffd4
   1c370:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1c374:	cmp	r3, #0
   1c378:	beq	1cb90 <_start@@Base+0xa4d8>
   1c37c:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   1c380:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1c384:	bl	12b9c <_start@@Base+0x4e4>
   1c388:	b	1cb00 <_start@@Base+0xa448>
   1c38c:	ldr	r2, [fp, #-112]	; 0xffffff90
   1c390:	ldr	r1, [fp, #-108]	; 0xffffff94
   1c394:	ldr	r0, [fp, #-104]	; 0xffffff98
   1c398:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1c39c:	str	r0, [fp, #-108]	; 0xffffff94
   1c3a0:	b	1cb00 <_start@@Base+0xa448>
   1c3a4:	nop	{0}
   1c3a8:			; <UNDEFINED> instruction: 0xffffffff
   1c3ac:	cmnvs	r3, #-2013265919	; 0x88000001
   1c3b0:	teqcc	r2, r4, lsr r3
   1c3b4:	cmnvs	r1, r1, ror #2
   1c3b8:	teqcc	r2, r4, lsr r3
   1c3bc:	rsbvs	r6, r2, #536870918	; 0x20000006
   1c3c0:	ldrdeq	sp, [r2], -r4
   1c3c4:	andeq	ip, r2, r4, asr #29
   1c3c8:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1c3cc:	mov	r2, #0
   1c3d0:	mvn	r3, #0
   1c3d4:	and	r8, r0, r2
   1c3d8:	and	r9, r1, r3
   1c3dc:	mov	r2, #0
   1c3e0:	movw	r3, #25186	; 0x6262
   1c3e4:	movt	r3, #25186	; 0x6262
   1c3e8:	cmp	r9, r3
   1c3ec:	cmpeq	r8, r2
   1c3f0:	bne	1c494 <_start@@Base+0x9ddc>
   1c3f4:	ldr	r3, [fp, #-108]	; 0xffffff94
   1c3f8:	str	r3, [fp, #-40]	; 0xffffffd8
   1c3fc:	mov	r3, #4
   1c400:	ldr	r2, [fp, #-112]	; 0xffffff90
   1c404:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1c408:	ldr	r0, [fp, #-104]	; 0xffffff98
   1c40c:	bl	13f3c <_start@@Base+0x1884>
   1c410:	str	r0, [fp, #-108]	; 0xffffff94
   1c414:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1c418:	ldr	r3, [fp, #-108]	; 0xffffff94
   1c41c:	cmp	r2, r3
   1c420:	beq	1c47c <_start@@Base+0x9dc4>
   1c424:	sub	r3, fp, #56	; 0x38
   1c428:	ldr	r2, [fp, #-112]	; 0xffffff90
   1c42c:	ldr	r1, [fp, #-108]	; 0xffffff94
   1c430:	ldr	r0, [fp, #-104]	; 0xffffff98
   1c434:	bl	35410 <flatcc_json_parser_build_string@@Base>
   1c438:	str	r0, [fp, #-108]	; 0xffffff94
   1c43c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1c440:	cmp	r3, #0
   1c444:	beq	1cb98 <_start@@Base+0xa4e0>
   1c448:	ldr	r3, [fp, #-104]	; 0xffffff98
   1c44c:	ldr	r3, [r3]
   1c450:	mov	r1, #2
   1c454:	mov	r0, r3
   1c458:	bl	2c670 <flatcc_builder_table_add_offset@@Base>
   1c45c:	str	r0, [fp, #-48]	; 0xffffffd0
   1c460:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1c464:	cmp	r3, #0
   1c468:	beq	1cb98 <_start@@Base+0xa4e0>
   1c46c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1c470:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1c474:	str	r2, [r3]
   1c478:	b	1cb00 <_start@@Base+0xa448>
   1c47c:	ldr	r2, [fp, #-112]	; 0xffffff90
   1c480:	ldr	r1, [fp, #-108]	; 0xffffff94
   1c484:	ldr	r0, [fp, #-104]	; 0xffffff98
   1c488:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1c48c:	str	r0, [fp, #-108]	; 0xffffff94
   1c490:	b	1cb00 <_start@@Base+0xa448>
   1c494:	ldr	r2, [fp, #-112]	; 0xffffff90
   1c498:	ldr	r1, [fp, #-108]	; 0xffffff94
   1c49c:	ldr	r0, [fp, #-104]	; 0xffffff98
   1c4a0:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1c4a4:	str	r0, [fp, #-108]	; 0xffffff94
   1c4a8:	b	1cb00 <_start@@Base+0xa448>
   1c4ac:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1c4b0:	add	r3, pc, #880	; 0x370
   1c4b4:	ldrd	r2, [r3]
   1c4b8:	cmp	r1, r3
   1c4bc:	cmpeq	r0, r2
   1c4c0:	bne	1c75c <_start@@Base+0xa0a4>
   1c4c4:	ldr	r3, [fp, #-108]	; 0xffffff94
   1c4c8:	str	r3, [fp, #-40]	; 0xffffffd8
   1c4cc:	mov	r3, #8
   1c4d0:	ldr	r2, [fp, #-112]	; 0xffffff90
   1c4d4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1c4d8:	ldr	r0, [fp, #-104]	; 0xffffff98
   1c4dc:	bl	13f3c <_start@@Base+0x1884>
   1c4e0:	str	r0, [fp, #-108]	; 0xffffff94
   1c4e4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1c4e8:	ldr	r3, [fp, #-108]	; 0xffffff94
   1c4ec:	cmp	r2, r3
   1c4f0:	beq	1c5d4 <_start@@Base+0x9f1c>
   1c4f4:	mov	r2, #0
   1c4f8:	mov	r3, #0
   1c4fc:	strd	r2, [fp, #-76]	; 0xffffffb4
   1c500:	ldr	r3, [fp, #-108]	; 0xffffff94
   1c504:	str	r3, [fp, #-40]	; 0xffffffd8
   1c508:	sub	r3, fp, #76	; 0x4c
   1c50c:	ldr	r2, [fp, #-112]	; 0xffffff90
   1c510:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1c514:	ldr	r0, [fp, #-104]	; 0xffffff98
   1c518:	bl	14b6c <_start@@Base+0x24b4>
   1c51c:	str	r0, [fp, #-108]	; 0xffffff94
   1c520:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1c524:	ldr	r3, [fp, #-108]	; 0xffffff94
   1c528:	cmp	r2, r3
   1c52c:	bne	1c57c <_start@@Base+0x9ec4>
   1c530:	ldr	r3, [fp, #-108]	; 0xffffff94
   1c534:	str	r3, [fp, #-40]	; 0xffffffd8
   1c538:	sub	r3, fp, #76	; 0x4c
   1c53c:	str	r3, [sp]
   1c540:	ldr	r3, [pc, #744]	; 1c830 <_start@@Base+0xa178>
   1c544:	add	r3, pc, r3
   1c548:	ldr	r2, [fp, #-112]	; 0xffffff90
   1c54c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1c550:	ldr	r0, [fp, #-104]	; 0xffffff98
   1c554:	bl	1579c <_start@@Base+0x30e4>
   1c558:	str	r0, [fp, #-108]	; 0xffffff94
   1c55c:	ldr	r2, [fp, #-108]	; 0xffffff94
   1c560:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c564:	cmp	r2, r3
   1c568:	beq	1cba0 <_start@@Base+0xa4e8>
   1c56c:	ldr	r2, [fp, #-108]	; 0xffffff94
   1c570:	ldr	r3, [fp, #-112]	; 0xffffff90
   1c574:	cmp	r2, r3
   1c578:	beq	1cba0 <_start@@Base+0xa4e8>
   1c57c:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   1c580:	orrs	r3, r2, r3
   1c584:	bne	1c59c <_start@@Base+0x9ee4>
   1c588:	ldr	r3, [fp, #-104]	; 0xffffff98
   1c58c:	ldr	r3, [r3, #8]
   1c590:	and	r3, r3, #2
   1c594:	cmp	r3, #0
   1c598:	beq	1cb00 <_start@@Base+0xa448>
   1c59c:	ldr	r3, [fp, #-104]	; 0xffffff98
   1c5a0:	ldr	r0, [r3]
   1c5a4:	mov	r3, #8
   1c5a8:	mov	r2, #8
   1c5ac:	mov	r1, #5
   1c5b0:	bl	2c400 <flatcc_builder_table_add@@Base>
   1c5b4:	str	r0, [fp, #-44]	; 0xffffffd4
   1c5b8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1c5bc:	cmp	r3, #0
   1c5c0:	beq	1cba8 <_start@@Base+0xa4f0>
   1c5c4:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   1c5c8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1c5cc:	bl	12b9c <_start@@Base+0x4e4>
   1c5d0:	b	1cb00 <_start@@Base+0xa448>
   1c5d4:	ldr	r3, [fp, #-108]	; 0xffffff94
   1c5d8:	add	r3, r3, #8
   1c5dc:	str	r3, [fp, #-108]	; 0xffffff94
   1c5e0:	ldr	r1, [fp, #-112]	; 0xffffff90
   1c5e4:	ldr	r0, [fp, #-108]	; 0xffffff94
   1c5e8:	bl	13928 <_start@@Base+0x1270>
   1c5ec:	strd	r0, [fp, #-36]	; 0xffffffdc
   1c5f0:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1c5f4:	mov	r2, #0
   1c5f8:	mov	r3, #-16777216	; 0xff000000
   1c5fc:	and	ip, r0, r2
   1c600:	str	ip, [fp, #-124]	; 0xffffff84
   1c604:	and	r3, r1, r3
   1c608:	str	r3, [fp, #-120]	; 0xffffff88
   1c60c:	ldrd	r2, [fp, #-124]	; 0xffffff84
   1c610:	cmp	r3, #889192448	; 0x35000000
   1c614:	cmpeq	r2, #0
   1c618:	bne	1c744 <_start@@Base+0xa08c>
   1c61c:	ldr	r3, [fp, #-108]	; 0xffffff94
   1c620:	str	r3, [fp, #-40]	; 0xffffffd8
   1c624:	mov	r3, #1
   1c628:	ldr	r2, [fp, #-112]	; 0xffffff90
   1c62c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1c630:	ldr	r0, [fp, #-104]	; 0xffffff98
   1c634:	bl	13f3c <_start@@Base+0x1884>
   1c638:	str	r0, [fp, #-108]	; 0xffffff94
   1c63c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1c640:	ldr	r3, [fp, #-108]	; 0xffffff94
   1c644:	cmp	r2, r3
   1c648:	beq	1c72c <_start@@Base+0xa074>
   1c64c:	mov	r3, #0
   1c650:	str	r3, [fp, #-80]	; 0xffffffb0
   1c654:	ldr	r3, [fp, #-108]	; 0xffffff94
   1c658:	str	r3, [fp, #-40]	; 0xffffffd8
   1c65c:	sub	r3, fp, #80	; 0x50
   1c660:	ldr	r2, [fp, #-112]	; 0xffffff90
   1c664:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1c668:	ldr	r0, [fp, #-104]	; 0xffffff98
   1c66c:	bl	148d8 <_start@@Base+0x2220>
   1c670:	str	r0, [fp, #-108]	; 0xffffff94
   1c674:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1c678:	ldr	r3, [fp, #-108]	; 0xffffff94
   1c67c:	cmp	r2, r3
   1c680:	bne	1c6d0 <_start@@Base+0xa018>
   1c684:	ldr	r3, [fp, #-108]	; 0xffffff94
   1c688:	str	r3, [fp, #-40]	; 0xffffffd8
   1c68c:	sub	r3, fp, #80	; 0x50
   1c690:	str	r3, [sp]
   1c694:	ldr	r3, [pc, #408]	; 1c834 <_start@@Base+0xa17c>
   1c698:	add	r3, pc, r3
   1c69c:	ldr	r2, [fp, #-112]	; 0xffffff90
   1c6a0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1c6a4:	ldr	r0, [fp, #-104]	; 0xffffff98
   1c6a8:	bl	151f4 <_start@@Base+0x2b3c>
   1c6ac:	str	r0, [fp, #-108]	; 0xffffff94
   1c6b0:	ldr	r2, [fp, #-108]	; 0xffffff94
   1c6b4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c6b8:	cmp	r2, r3
   1c6bc:	beq	1cbb0 <_start@@Base+0xa4f8>
   1c6c0:	ldr	r2, [fp, #-108]	; 0xffffff94
   1c6c4:	ldr	r3, [fp, #-112]	; 0xffffff90
   1c6c8:	cmp	r2, r3
   1c6cc:	beq	1cbb0 <_start@@Base+0xa4f8>
   1c6d0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1c6d4:	cmp	r3, #0
   1c6d8:	bne	1c6f0 <_start@@Base+0xa038>
   1c6dc:	ldr	r3, [fp, #-104]	; 0xffffff98
   1c6e0:	ldr	r3, [r3, #8]
   1c6e4:	and	r3, r3, #2
   1c6e8:	cmp	r3, #0
   1c6ec:	beq	1cb00 <_start@@Base+0xa448>
   1c6f0:	ldr	r3, [fp, #-104]	; 0xffffff98
   1c6f4:	ldr	r0, [r3]
   1c6f8:	mov	r3, #4
   1c6fc:	mov	r2, #4
   1c700:	mov	r1, #6
   1c704:	bl	2c400 <flatcc_builder_table_add@@Base>
   1c708:	str	r0, [fp, #-44]	; 0xffffffd4
   1c70c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1c710:	cmp	r3, #0
   1c714:	beq	1cbb8 <_start@@Base+0xa500>
   1c718:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1c71c:	mov	r1, r3
   1c720:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1c724:	bl	128b4 <_start@@Base+0x1fc>
   1c728:	b	1cb00 <_start@@Base+0xa448>
   1c72c:	ldr	r2, [fp, #-112]	; 0xffffff90
   1c730:	ldr	r1, [fp, #-108]	; 0xffffff94
   1c734:	ldr	r0, [fp, #-104]	; 0xffffff98
   1c738:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1c73c:	str	r0, [fp, #-108]	; 0xffffff94
   1c740:	b	1cb00 <_start@@Base+0xa448>
   1c744:	ldr	r2, [fp, #-112]	; 0xffffff90
   1c748:	ldr	r1, [fp, #-108]	; 0xffffff94
   1c74c:	ldr	r0, [fp, #-104]	; 0xffffff98
   1c750:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1c754:	str	r0, [fp, #-108]	; 0xffffff94
   1c758:	b	1cb00 <_start@@Base+0xa448>
   1c75c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1c760:	mov	r2, #0
   1c764:	mvn	r3, #0
   1c768:	and	ip, r0, r2
   1c76c:	str	ip, [fp, #-132]	; 0xffffff7c
   1c770:	and	r3, r1, r3
   1c774:	str	r3, [fp, #-128]	; 0xffffff80
   1c778:	mov	r2, #0
   1c77c:	movw	r3, #25443	; 0x6363
   1c780:	movt	r3, #25443	; 0x6363
   1c784:	ldrd	r0, [fp, #-132]	; 0xffffff7c
   1c788:	cmp	r1, r3
   1c78c:	cmpeq	r0, r2
   1c790:	bne	1c81c <_start@@Base+0xa164>
   1c794:	ldr	r3, [fp, #-108]	; 0xffffff94
   1c798:	str	r3, [fp, #-40]	; 0xffffffd8
   1c79c:	mov	r3, #4
   1c7a0:	ldr	r2, [fp, #-112]	; 0xffffff90
   1c7a4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1c7a8:	ldr	r0, [fp, #-104]	; 0xffffff98
   1c7ac:	bl	13f3c <_start@@Base+0x1884>
   1c7b0:	str	r0, [fp, #-108]	; 0xffffff94
   1c7b4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1c7b8:	ldr	r3, [fp, #-108]	; 0xffffff94
   1c7bc:	cmp	r2, r3
   1c7c0:	beq	1c838 <_start@@Base+0xa180>
   1c7c4:	sub	r3, fp, #56	; 0x38
   1c7c8:	ldr	r2, [fp, #-112]	; 0xffffff90
   1c7cc:	ldr	r1, [fp, #-108]	; 0xffffff94
   1c7d0:	ldr	r0, [fp, #-104]	; 0xffffff98
   1c7d4:	bl	35410 <flatcc_json_parser_build_string@@Base>
   1c7d8:	str	r0, [fp, #-108]	; 0xffffff94
   1c7dc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1c7e0:	cmp	r3, #0
   1c7e4:	beq	1cbc0 <_start@@Base+0xa508>
   1c7e8:	ldr	r3, [fp, #-104]	; 0xffffff98
   1c7ec:	ldr	r3, [r3]
   1c7f0:	mov	r1, #4
   1c7f4:	mov	r0, r3
   1c7f8:	bl	2c670 <flatcc_builder_table_add_offset@@Base>
   1c7fc:	str	r0, [fp, #-48]	; 0xffffffd0
   1c800:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1c804:	cmp	r3, #0
   1c808:	beq	1cbc0 <_start@@Base+0xa508>
   1c80c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1c810:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1c814:	str	r2, [r3]
   1c818:	b	1cb00 <_start@@Base+0xa448>
   1c81c:	nop	{0}
   1c820:	b	1c83c <_start@@Base+0xa184>
   1c824:	nop	{0}
   1c828:	teqcc	r2, r4, lsr r3
   1c82c:	cmnvs	r3, #-1946157055	; 0x8c000001
   1c830:	andeq	ip, r2, r8, lsl #25
   1c834:	andeq	ip, r2, r0, asr #22
   1c838:	nop	{0}
   1c83c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1c840:	add	r3, pc, #1000	; 0x3e8
   1c844:	ldrd	r2, [r3]
   1c848:	cmp	r1, r3
   1c84c:	cmpeq	r0, r2
   1c850:	bne	1caec <_start@@Base+0xa434>
   1c854:	ldr	r3, [fp, #-108]	; 0xffffff94
   1c858:	str	r3, [fp, #-40]	; 0xffffffd8
   1c85c:	mov	r3, #8
   1c860:	ldr	r2, [fp, #-112]	; 0xffffff90
   1c864:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1c868:	ldr	r0, [fp, #-104]	; 0xffffff98
   1c86c:	bl	13f3c <_start@@Base+0x1884>
   1c870:	str	r0, [fp, #-108]	; 0xffffff94
   1c874:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1c878:	ldr	r3, [fp, #-108]	; 0xffffff94
   1c87c:	cmp	r2, r3
   1c880:	beq	1c964 <_start@@Base+0xa2ac>
   1c884:	mov	r2, #0
   1c888:	mov	r3, #0
   1c88c:	strd	r2, [fp, #-92]	; 0xffffffa4
   1c890:	ldr	r3, [fp, #-108]	; 0xffffff94
   1c894:	str	r3, [fp, #-40]	; 0xffffffd8
   1c898:	sub	r3, fp, #92	; 0x5c
   1c89c:	ldr	r2, [fp, #-112]	; 0xffffff90
   1c8a0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1c8a4:	ldr	r0, [fp, #-104]	; 0xffffff98
   1c8a8:	bl	14b6c <_start@@Base+0x24b4>
   1c8ac:	str	r0, [fp, #-108]	; 0xffffff94
   1c8b0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1c8b4:	ldr	r3, [fp, #-108]	; 0xffffff94
   1c8b8:	cmp	r2, r3
   1c8bc:	bne	1c90c <_start@@Base+0xa254>
   1c8c0:	ldr	r3, [fp, #-108]	; 0xffffff94
   1c8c4:	str	r3, [fp, #-40]	; 0xffffffd8
   1c8c8:	sub	r3, fp, #92	; 0x5c
   1c8cc:	str	r3, [sp]
   1c8d0:	ldr	r3, [pc, #864]	; 1cc38 <_start@@Base+0xa580>
   1c8d4:	add	r3, pc, r3
   1c8d8:	ldr	r2, [fp, #-112]	; 0xffffff90
   1c8dc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1c8e0:	ldr	r0, [fp, #-104]	; 0xffffff98
   1c8e4:	bl	1579c <_start@@Base+0x30e4>
   1c8e8:	str	r0, [fp, #-108]	; 0xffffff94
   1c8ec:	ldr	r2, [fp, #-108]	; 0xffffff94
   1c8f0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c8f4:	cmp	r2, r3
   1c8f8:	beq	1cbc8 <_start@@Base+0xa510>
   1c8fc:	ldr	r2, [fp, #-108]	; 0xffffff94
   1c900:	ldr	r3, [fp, #-112]	; 0xffffff90
   1c904:	cmp	r2, r3
   1c908:	beq	1cbc8 <_start@@Base+0xa510>
   1c90c:	ldrd	r2, [fp, #-92]	; 0xffffffa4
   1c910:	orrs	r3, r2, r3
   1c914:	bne	1c92c <_start@@Base+0xa274>
   1c918:	ldr	r3, [fp, #-104]	; 0xffffff98
   1c91c:	ldr	r3, [r3, #8]
   1c920:	and	r3, r3, #2
   1c924:	cmp	r3, #0
   1c928:	beq	1cb00 <_start@@Base+0xa448>
   1c92c:	ldr	r3, [fp, #-104]	; 0xffffff98
   1c930:	ldr	r0, [r3]
   1c934:	mov	r3, #8
   1c938:	mov	r2, #8
   1c93c:	mov	r1, #7
   1c940:	bl	2c400 <flatcc_builder_table_add@@Base>
   1c944:	str	r0, [fp, #-44]	; 0xffffffd4
   1c948:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1c94c:	cmp	r3, #0
   1c950:	beq	1cbd0 <_start@@Base+0xa518>
   1c954:	ldrd	r2, [fp, #-92]	; 0xffffffa4
   1c958:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1c95c:	bl	12b9c <_start@@Base+0x4e4>
   1c960:	b	1cb00 <_start@@Base+0xa448>
   1c964:	ldr	r3, [fp, #-108]	; 0xffffff94
   1c968:	add	r3, r3, #8
   1c96c:	str	r3, [fp, #-108]	; 0xffffff94
   1c970:	ldr	r1, [fp, #-112]	; 0xffffff90
   1c974:	ldr	r0, [fp, #-108]	; 0xffffff94
   1c978:	bl	13928 <_start@@Base+0x1270>
   1c97c:	strd	r0, [fp, #-36]	; 0xffffffdc
   1c980:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1c984:	mov	r2, #0
   1c988:	mov	r3, #-16777216	; 0xff000000
   1c98c:	and	ip, r0, r2
   1c990:	str	ip, [fp, #-140]	; 0xffffff74
   1c994:	and	r3, r1, r3
   1c998:	str	r3, [fp, #-136]	; 0xffffff78
   1c99c:	ldrd	r2, [fp, #-140]	; 0xffffff74
   1c9a0:	cmp	r3, #889192448	; 0x35000000
   1c9a4:	cmpeq	r2, #0
   1c9a8:	bne	1cad4 <_start@@Base+0xa41c>
   1c9ac:	ldr	r3, [fp, #-108]	; 0xffffff94
   1c9b0:	str	r3, [fp, #-40]	; 0xffffffd8
   1c9b4:	mov	r3, #1
   1c9b8:	ldr	r2, [fp, #-112]	; 0xffffff90
   1c9bc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1c9c0:	ldr	r0, [fp, #-104]	; 0xffffff98
   1c9c4:	bl	13f3c <_start@@Base+0x1884>
   1c9c8:	str	r0, [fp, #-108]	; 0xffffff94
   1c9cc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1c9d0:	ldr	r3, [fp, #-108]	; 0xffffff94
   1c9d4:	cmp	r2, r3
   1c9d8:	beq	1cabc <_start@@Base+0xa404>
   1c9dc:	mov	r3, #0
   1c9e0:	str	r3, [fp, #-96]	; 0xffffffa0
   1c9e4:	ldr	r3, [fp, #-108]	; 0xffffff94
   1c9e8:	str	r3, [fp, #-40]	; 0xffffffd8
   1c9ec:	sub	r3, fp, #96	; 0x60
   1c9f0:	ldr	r2, [fp, #-112]	; 0xffffff90
   1c9f4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1c9f8:	ldr	r0, [fp, #-104]	; 0xffffff98
   1c9fc:	bl	148d8 <_start@@Base+0x2220>
   1ca00:	str	r0, [fp, #-108]	; 0xffffff94
   1ca04:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1ca08:	ldr	r3, [fp, #-108]	; 0xffffff94
   1ca0c:	cmp	r2, r3
   1ca10:	bne	1ca60 <_start@@Base+0xa3a8>
   1ca14:	ldr	r3, [fp, #-108]	; 0xffffff94
   1ca18:	str	r3, [fp, #-40]	; 0xffffffd8
   1ca1c:	sub	r3, fp, #96	; 0x60
   1ca20:	str	r3, [sp]
   1ca24:	ldr	r3, [pc, #528]	; 1cc3c <_start@@Base+0xa584>
   1ca28:	add	r3, pc, r3
   1ca2c:	ldr	r2, [fp, #-112]	; 0xffffff90
   1ca30:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1ca34:	ldr	r0, [fp, #-104]	; 0xffffff98
   1ca38:	bl	151f4 <_start@@Base+0x2b3c>
   1ca3c:	str	r0, [fp, #-108]	; 0xffffff94
   1ca40:	ldr	r2, [fp, #-108]	; 0xffffff94
   1ca44:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ca48:	cmp	r2, r3
   1ca4c:	beq	1cbd8 <_start@@Base+0xa520>
   1ca50:	ldr	r2, [fp, #-108]	; 0xffffff94
   1ca54:	ldr	r3, [fp, #-112]	; 0xffffff90
   1ca58:	cmp	r2, r3
   1ca5c:	beq	1cbd8 <_start@@Base+0xa520>
   1ca60:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1ca64:	cmp	r3, #0
   1ca68:	bne	1ca80 <_start@@Base+0xa3c8>
   1ca6c:	ldr	r3, [fp, #-104]	; 0xffffff98
   1ca70:	ldr	r3, [r3, #8]
   1ca74:	and	r3, r3, #2
   1ca78:	cmp	r3, #0
   1ca7c:	beq	1cb00 <_start@@Base+0xa448>
   1ca80:	ldr	r3, [fp, #-104]	; 0xffffff98
   1ca84:	ldr	r0, [r3]
   1ca88:	mov	r3, #4
   1ca8c:	mov	r2, #4
   1ca90:	mov	r1, #8
   1ca94:	bl	2c400 <flatcc_builder_table_add@@Base>
   1ca98:	str	r0, [fp, #-44]	; 0xffffffd4
   1ca9c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1caa0:	cmp	r3, #0
   1caa4:	beq	1cbe0 <_start@@Base+0xa528>
   1caa8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1caac:	mov	r1, r3
   1cab0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1cab4:	bl	128b4 <_start@@Base+0x1fc>
   1cab8:	b	1cb00 <_start@@Base+0xa448>
   1cabc:	ldr	r2, [fp, #-112]	; 0xffffff90
   1cac0:	ldr	r1, [fp, #-108]	; 0xffffff94
   1cac4:	ldr	r0, [fp, #-104]	; 0xffffff98
   1cac8:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1cacc:	str	r0, [fp, #-108]	; 0xffffff94
   1cad0:	b	1cb00 <_start@@Base+0xa448>
   1cad4:	ldr	r2, [fp, #-112]	; 0xffffff90
   1cad8:	ldr	r1, [fp, #-108]	; 0xffffff94
   1cadc:	ldr	r0, [fp, #-104]	; 0xffffff98
   1cae0:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1cae4:	str	r0, [fp, #-108]	; 0xffffff94
   1cae8:	b	1cb00 <_start@@Base+0xa448>
   1caec:	ldr	r2, [fp, #-112]	; 0xffffff90
   1caf0:	ldr	r1, [fp, #-108]	; 0xffffff94
   1caf4:	ldr	r0, [fp, #-104]	; 0xffffff98
   1caf8:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1cafc:	str	r0, [fp, #-108]	; 0xffffff94
   1cb00:	sub	r3, fp, #52	; 0x34
   1cb04:	ldr	r2, [fp, #-112]	; 0xffffff90
   1cb08:	ldr	r1, [fp, #-108]	; 0xffffff94
   1cb0c:	ldr	r0, [fp, #-104]	; 0xffffff98
   1cb10:	bl	13b60 <_start@@Base+0x14a8>
   1cb14:	str	r0, [fp, #-108]	; 0xffffff94
   1cb18:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1cb1c:	cmp	r3, #0
   1cb20:	bne	1bfd4 <_start@@Base+0x991c>
   1cb24:	ldr	r3, [fp, #-104]	; 0xffffff98
   1cb28:	ldr	r3, [r3, #24]
   1cb2c:	cmp	r3, #0
   1cb30:	bne	1cbe8 <_start@@Base+0xa530>
   1cb34:	ldr	r3, [fp, #-104]	; 0xffffff98
   1cb38:	ldr	r3, [r3]
   1cb3c:	mov	r0, r3
   1cb40:	bl	2a9b0 <flatcc_builder_end_table@@Base>
   1cb44:	mov	r2, r0
   1cb48:	ldr	r3, [fp, #-116]	; 0xffffff8c
   1cb4c:	str	r2, [r3]
   1cb50:	ldr	r3, [fp, #-116]	; 0xffffff8c
   1cb54:	ldr	r3, [r3]
   1cb58:	cmp	r3, #0
   1cb5c:	beq	1cbf0 <_start@@Base+0xa538>
   1cb60:	ldr	r3, [fp, #-108]	; 0xffffff94
   1cb64:	b	1cc0c <_start@@Base+0xa554>
   1cb68:	nop	{0}
   1cb6c:	b	1cbf4 <_start@@Base+0xa53c>
   1cb70:	nop	{0}
   1cb74:	b	1cbf4 <_start@@Base+0xa53c>
   1cb78:	nop	{0}
   1cb7c:	b	1cbf4 <_start@@Base+0xa53c>
   1cb80:	nop	{0}
   1cb84:	b	1cbf4 <_start@@Base+0xa53c>
   1cb88:	nop	{0}
   1cb8c:	b	1cbf4 <_start@@Base+0xa53c>
   1cb90:	nop	{0}
   1cb94:	b	1cbf4 <_start@@Base+0xa53c>
   1cb98:	nop	{0}
   1cb9c:	b	1cbf4 <_start@@Base+0xa53c>
   1cba0:	nop	{0}
   1cba4:	b	1cbf4 <_start@@Base+0xa53c>
   1cba8:	nop	{0}
   1cbac:	b	1cbf4 <_start@@Base+0xa53c>
   1cbb0:	nop	{0}
   1cbb4:	b	1cbf4 <_start@@Base+0xa53c>
   1cbb8:	nop	{0}
   1cbbc:	b	1cbf4 <_start@@Base+0xa53c>
   1cbc0:	nop	{0}
   1cbc4:	b	1cbf4 <_start@@Base+0xa53c>
   1cbc8:	nop	{0}
   1cbcc:	b	1cbf4 <_start@@Base+0xa53c>
   1cbd0:	nop	{0}
   1cbd4:	b	1cbf4 <_start@@Base+0xa53c>
   1cbd8:	nop	{0}
   1cbdc:	b	1cbf4 <_start@@Base+0xa53c>
   1cbe0:	nop	{0}
   1cbe4:	b	1cbf4 <_start@@Base+0xa53c>
   1cbe8:	nop	{0}
   1cbec:	b	1cbf4 <_start@@Base+0xa53c>
   1cbf0:	nop	{0}
   1cbf4:	mov	r3, #33	; 0x21
   1cbf8:	ldr	r2, [fp, #-112]	; 0xffffff90
   1cbfc:	ldr	r1, [fp, #-108]	; 0xffffff94
   1cc00:	ldr	r0, [fp, #-104]	; 0xffffff98
   1cc04:	bl	33258 <flatcc_json_parser_set_error@@Base>
   1cc08:	mov	r3, r0
   1cc0c:	mov	r0, r3
   1cc10:	sub	sp, fp, #28
   1cc14:	ldrd	r4, [sp]
   1cc18:	ldrd	r6, [sp, #8]
   1cc1c:	ldrd	r8, [sp, #16]
   1cc20:	ldr	fp, [sp, #24]
   1cc24:	add	sp, sp, #28
   1cc28:	pop	{pc}		; (ldr pc, [sp], #4)
   1cc2c:	nop	{0}
   1cc30:	teqcc	r2, r4, lsr r3
   1cc34:	strbtvs	r6, [r4], #-1124	; 0xfffffb9c
   1cc38:	andeq	ip, r2, r0, lsl r9
   1cc3c:	andeq	ip, r2, r8, asr #15
   1cc40:	strd	r4, [sp, #-16]!
   1cc44:	str	fp, [sp, #8]
   1cc48:	str	lr, [sp, #12]
   1cc4c:	add	fp, sp, #12
   1cc50:	sub	sp, sp, #64	; 0x40
   1cc54:	str	r0, [fp, #-56]	; 0xffffffc8
   1cc58:	str	r1, [fp, #-60]	; 0xffffffc4
   1cc5c:	str	r2, [fp, #-64]	; 0xffffffc0
   1cc60:	str	r3, [fp, #-68]	; 0xffffffbc
   1cc64:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1cc68:	mov	r2, #0
   1cc6c:	str	r2, [r3]
   1cc70:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1cc74:	ldr	r3, [r3]
   1cc78:	mov	r1, #2
   1cc7c:	mov	r0, r3
   1cc80:	bl	29dfc <flatcc_builder_start_table@@Base>
   1cc84:	mov	r3, r0
   1cc88:	cmp	r3, #0
   1cc8c:	bne	1d028 <_start@@Base+0xa970>
   1cc90:	sub	r3, fp, #32
   1cc94:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1cc98:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1cc9c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1cca0:	bl	13a6c <_start@@Base+0x13b4>
   1cca4:	str	r0, [fp, #-60]	; 0xffffffc4
   1cca8:	b	1cfd8 <_start@@Base+0xa920>
   1ccac:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1ccb0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1ccb4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1ccb8:	bl	135f4 <_start@@Base+0xf3c>
   1ccbc:	str	r0, [fp, #-60]	; 0xffffffc4
   1ccc0:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1ccc4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1ccc8:	bl	13928 <_start@@Base+0x1270>
   1cccc:	strd	r0, [fp, #-20]	; 0xffffffec
   1ccd0:	ldrd	r2, [fp, #-20]	; 0xffffffec
   1ccd4:	add	r1, pc, #948	; 0x3b4
   1ccd8:	ldrd	r0, [r1]
   1ccdc:	cmp	r3, r1
   1cce0:	cmpeq	r2, r0
   1cce4:	bne	1cfac <_start@@Base+0xa8f4>
   1cce8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1ccec:	add	r3, r3, #8
   1ccf0:	str	r3, [fp, #-60]	; 0xffffffc4
   1ccf4:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1ccf8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1ccfc:	bl	13928 <_start@@Base+0x1270>
   1cd00:	strd	r0, [fp, #-20]	; 0xffffffec
   1cd04:	ldrd	r2, [fp, #-20]	; 0xffffffec
   1cd08:	mvn	r0, #255	; 0xff
   1cd0c:	mvn	r1, #0
   1cd10:	and	r4, r2, r0
   1cd14:	and	r5, r3, r1
   1cd18:	add	r3, pc, #888	; 0x378
   1cd1c:	ldrd	r2, [r3]
   1cd20:	cmp	r5, r3
   1cd24:	cmpeq	r4, r2
   1cd28:	bne	1ce54 <_start@@Base+0xa79c>
   1cd2c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1cd30:	str	r3, [fp, #-24]	; 0xffffffe8
   1cd34:	mov	r3, #7
   1cd38:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1cd3c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cd40:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1cd44:	bl	13f3c <_start@@Base+0x1884>
   1cd48:	str	r0, [fp, #-60]	; 0xffffffc4
   1cd4c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1cd50:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1cd54:	cmp	r2, r3
   1cd58:	beq	1ce3c <_start@@Base+0xa784>
   1cd5c:	mov	r2, #0
   1cd60:	mov	r3, #0
   1cd64:	strd	r2, [fp, #-44]	; 0xffffffd4
   1cd68:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1cd6c:	str	r3, [fp, #-24]	; 0xffffffe8
   1cd70:	sub	r3, fp, #44	; 0x2c
   1cd74:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1cd78:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cd7c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1cd80:	bl	14b6c <_start@@Base+0x24b4>
   1cd84:	str	r0, [fp, #-60]	; 0xffffffc4
   1cd88:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1cd8c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1cd90:	cmp	r2, r3
   1cd94:	bne	1cde4 <_start@@Base+0xa72c>
   1cd98:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1cd9c:	str	r3, [fp, #-24]	; 0xffffffe8
   1cda0:	sub	r3, fp, #44	; 0x2c
   1cda4:	str	r3, [sp]
   1cda8:	ldr	r3, [pc, #760]	; 1d0a8 <_start@@Base+0xa9f0>
   1cdac:	add	r3, pc, r3
   1cdb0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1cdb4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cdb8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1cdbc:	bl	1579c <_start@@Base+0x30e4>
   1cdc0:	str	r0, [fp, #-60]	; 0xffffffc4
   1cdc4:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1cdc8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cdcc:	cmp	r2, r3
   1cdd0:	beq	1d030 <_start@@Base+0xa978>
   1cdd4:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1cdd8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1cddc:	cmp	r2, r3
   1cde0:	beq	1d030 <_start@@Base+0xa978>
   1cde4:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   1cde8:	orrs	r3, r2, r3
   1cdec:	bne	1ce04 <_start@@Base+0xa74c>
   1cdf0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1cdf4:	ldr	r3, [r3, #8]
   1cdf8:	and	r3, r3, #2
   1cdfc:	cmp	r3, #0
   1ce00:	beq	1cfc0 <_start@@Base+0xa908>
   1ce04:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1ce08:	ldr	r0, [r3]
   1ce0c:	mov	r3, #8
   1ce10:	mov	r2, #8
   1ce14:	mov	r1, #0
   1ce18:	bl	2c400 <flatcc_builder_table_add@@Base>
   1ce1c:	str	r0, [fp, #-28]	; 0xffffffe4
   1ce20:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ce24:	cmp	r3, #0
   1ce28:	beq	1d038 <_start@@Base+0xa980>
   1ce2c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   1ce30:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ce34:	bl	12b9c <_start@@Base+0x4e4>
   1ce38:	b	1cfc0 <_start@@Base+0xa908>
   1ce3c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1ce40:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1ce44:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1ce48:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1ce4c:	str	r0, [fp, #-60]	; 0xffffffc4
   1ce50:	b	1cfc0 <_start@@Base+0xa908>
   1ce54:	ldrd	r2, [fp, #-20]	; 0xffffffec
   1ce58:	add	r1, pc, #576	; 0x240
   1ce5c:	ldrd	r0, [r1]
   1ce60:	cmp	r3, r1
   1ce64:	cmpeq	r2, r0
   1ce68:	bne	1cf94 <_start@@Base+0xa8dc>
   1ce6c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1ce70:	str	r3, [fp, #-24]	; 0xffffffe8
   1ce74:	mov	r3, #8
   1ce78:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1ce7c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ce80:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1ce84:	bl	13f3c <_start@@Base+0x1884>
   1ce88:	str	r0, [fp, #-60]	; 0xffffffc4
   1ce8c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1ce90:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1ce94:	cmp	r2, r3
   1ce98:	beq	1cf7c <_start@@Base+0xa8c4>
   1ce9c:	mov	r3, #0
   1cea0:	str	r3, [fp, #-48]	; 0xffffffd0
   1cea4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1cea8:	str	r3, [fp, #-24]	; 0xffffffe8
   1ceac:	sub	r3, fp, #48	; 0x30
   1ceb0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1ceb4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ceb8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1cebc:	bl	148d8 <_start@@Base+0x2220>
   1cec0:	str	r0, [fp, #-60]	; 0xffffffc4
   1cec4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1cec8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1cecc:	cmp	r2, r3
   1ced0:	bne	1cf20 <_start@@Base+0xa868>
   1ced4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1ced8:	str	r3, [fp, #-24]	; 0xffffffe8
   1cedc:	sub	r3, fp, #48	; 0x30
   1cee0:	str	r3, [sp]
   1cee4:	ldr	r3, [pc, #448]	; 1d0ac <_start@@Base+0xa9f4>
   1cee8:	add	r3, pc, r3
   1ceec:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1cef0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cef4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1cef8:	bl	151f4 <_start@@Base+0x2b3c>
   1cefc:	str	r0, [fp, #-60]	; 0xffffffc4
   1cf00:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1cf04:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cf08:	cmp	r2, r3
   1cf0c:	beq	1d040 <_start@@Base+0xa988>
   1cf10:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1cf14:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1cf18:	cmp	r2, r3
   1cf1c:	beq	1d040 <_start@@Base+0xa988>
   1cf20:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1cf24:	cmp	r3, #0
   1cf28:	bne	1cf40 <_start@@Base+0xa888>
   1cf2c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1cf30:	ldr	r3, [r3, #8]
   1cf34:	and	r3, r3, #2
   1cf38:	cmp	r3, #0
   1cf3c:	beq	1cfc0 <_start@@Base+0xa908>
   1cf40:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1cf44:	ldr	r0, [r3]
   1cf48:	mov	r3, #4
   1cf4c:	mov	r2, #4
   1cf50:	mov	r1, #1
   1cf54:	bl	2c400 <flatcc_builder_table_add@@Base>
   1cf58:	str	r0, [fp, #-28]	; 0xffffffe4
   1cf5c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1cf60:	cmp	r3, #0
   1cf64:	beq	1d048 <_start@@Base+0xa990>
   1cf68:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1cf6c:	mov	r1, r3
   1cf70:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1cf74:	bl	128b4 <_start@@Base+0x1fc>
   1cf78:	b	1cfc0 <_start@@Base+0xa908>
   1cf7c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1cf80:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1cf84:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1cf88:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1cf8c:	str	r0, [fp, #-60]	; 0xffffffc4
   1cf90:	b	1cfc0 <_start@@Base+0xa908>
   1cf94:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1cf98:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1cf9c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1cfa0:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1cfa4:	str	r0, [fp, #-60]	; 0xffffffc4
   1cfa8:	b	1cfc0 <_start@@Base+0xa908>
   1cfac:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1cfb0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1cfb4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1cfb8:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1cfbc:	str	r0, [fp, #-60]	; 0xffffffc4
   1cfc0:	sub	r3, fp, #32
   1cfc4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1cfc8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1cfcc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1cfd0:	bl	13b60 <_start@@Base+0x14a8>
   1cfd4:	str	r0, [fp, #-60]	; 0xffffffc4
   1cfd8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1cfdc:	cmp	r3, #0
   1cfe0:	bne	1ccac <_start@@Base+0xa5f4>
   1cfe4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1cfe8:	ldr	r3, [r3, #24]
   1cfec:	cmp	r3, #0
   1cff0:	bne	1d050 <_start@@Base+0xa998>
   1cff4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1cff8:	ldr	r3, [r3]
   1cffc:	mov	r0, r3
   1d000:	bl	2a9b0 <flatcc_builder_end_table@@Base>
   1d004:	mov	r2, r0
   1d008:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1d00c:	str	r2, [r3]
   1d010:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1d014:	ldr	r3, [r3]
   1d018:	cmp	r3, #0
   1d01c:	beq	1d058 <_start@@Base+0xa9a0>
   1d020:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1d024:	b	1d074 <_start@@Base+0xa9bc>
   1d028:	nop	{0}
   1d02c:	b	1d05c <_start@@Base+0xa9a4>
   1d030:	nop	{0}
   1d034:	b	1d05c <_start@@Base+0xa9a4>
   1d038:	nop	{0}
   1d03c:	b	1d05c <_start@@Base+0xa9a4>
   1d040:	nop	{0}
   1d044:	b	1d05c <_start@@Base+0xa9a4>
   1d048:	nop	{0}
   1d04c:	b	1d05c <_start@@Base+0xa9a4>
   1d050:	nop	{0}
   1d054:	b	1d05c <_start@@Base+0xa9a4>
   1d058:	nop	{0}
   1d05c:	mov	r3, #33	; 0x21
   1d060:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1d064:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1d068:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1d06c:	bl	33258 <flatcc_json_parser_set_error@@Base>
   1d070:	mov	r3, r0
   1d074:	mov	r0, r3
   1d078:	sub	sp, fp, #12
   1d07c:	ldrd	r4, [sp]
   1d080:	ldr	fp, [sp, #8]
   1d084:	add	sp, sp, #12
   1d088:	pop	{pc}		; (ldr pc, [sp], #4)
   1d08c:	nop	{0}
   1d090:	svcpl	0x00626262
   1d094:	cmnvs	r1, r1, ror #2
   1d098:	ldrbvs	r7, [r0, #-768]!	; 0xfffffd00
   1d09c:	subsvs	r7, pc, #116, 6	; 0xd0000001
   1d0a0:	cmnvs	r2, pc, asr r4
   1d0a4:	subsvs	r7, pc, #116, 6	; 0xd0000001
   1d0a8:	andeq	ip, r2, r0, asr r4
   1d0ac:	andeq	ip, r2, r0, lsr #6
   1d0b0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1d0b4:	strd	r6, [sp, #8]
   1d0b8:	str	fp, [sp, #16]
   1d0bc:	str	lr, [sp, #20]
   1d0c0:	add	fp, sp, #20
   1d0c4:	sub	sp, sp, #56	; 0x38
   1d0c8:	str	r0, [fp, #-56]	; 0xffffffc8
   1d0cc:	str	r1, [fp, #-60]	; 0xffffffc4
   1d0d0:	str	r2, [fp, #-64]	; 0xffffffc0
   1d0d4:	str	r3, [fp, #-68]	; 0xffffffbc
   1d0d8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1d0dc:	mov	r2, #0
   1d0e0:	str	r2, [r3]
   1d0e4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1d0e8:	ldr	r3, [r3]
   1d0ec:	mov	r1, #2
   1d0f0:	mov	r0, r3
   1d0f4:	bl	29dfc <flatcc_builder_start_table@@Base>
   1d0f8:	mov	r3, r0
   1d0fc:	cmp	r3, #0
   1d100:	bne	1d4f8 <_start@@Base+0xae40>
   1d104:	sub	r3, fp, #40	; 0x28
   1d108:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1d10c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1d110:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1d114:	bl	13a6c <_start@@Base+0x13b4>
   1d118:	str	r0, [fp, #-60]	; 0xffffffc4
   1d11c:	b	1d4a8 <_start@@Base+0xadf0>
   1d120:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1d124:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1d128:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1d12c:	bl	135f4 <_start@@Base+0xf3c>
   1d130:	str	r0, [fp, #-60]	; 0xffffffc4
   1d134:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1d138:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1d13c:	bl	13928 <_start@@Base+0x1270>
   1d140:	strd	r0, [fp, #-28]	; 0xffffffe4
   1d144:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   1d148:	add	r1, pc, #984	; 0x3d8
   1d14c:	ldrd	r0, [r1]
   1d150:	cmp	r3, r1
   1d154:	cmpeq	r2, r0
   1d158:	bne	1d47c <_start@@Base+0xadc4>
   1d15c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1d160:	add	r3, r3, #8
   1d164:	str	r3, [fp, #-60]	; 0xffffffc4
   1d168:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1d16c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1d170:	bl	13928 <_start@@Base+0x1270>
   1d174:	strd	r0, [fp, #-28]	; 0xffffffe4
   1d178:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   1d17c:	add	r1, pc, #940	; 0x3ac
   1d180:	ldrd	r0, [r1]
   1d184:	cmp	r3, r1
   1d188:	cmpeq	r2, r0
   1d18c:	bne	1d314 <_start@@Base+0xac5c>
   1d190:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1d194:	add	r3, r3, #8
   1d198:	str	r3, [fp, #-60]	; 0xffffffc4
   1d19c:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1d1a0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1d1a4:	bl	13928 <_start@@Base+0x1270>
   1d1a8:	strd	r0, [fp, #-28]	; 0xffffffe4
   1d1ac:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   1d1b0:	mov	r0, #-16777216	; 0xff000000
   1d1b4:	mvn	r1, #0
   1d1b8:	and	r4, r2, r0
   1d1bc:	and	r5, r3, r1
   1d1c0:	add	r3, pc, #880	; 0x370
   1d1c4:	ldrd	r2, [r3]
   1d1c8:	cmp	r5, r3
   1d1cc:	cmpeq	r4, r2
   1d1d0:	bne	1d2fc <_start@@Base+0xac44>
   1d1d4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1d1d8:	str	r3, [fp, #-32]	; 0xffffffe0
   1d1dc:	mov	r3, #5
   1d1e0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1d1e4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1d1e8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1d1ec:	bl	13f3c <_start@@Base+0x1884>
   1d1f0:	str	r0, [fp, #-60]	; 0xffffffc4
   1d1f4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1d1f8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1d1fc:	cmp	r2, r3
   1d200:	beq	1d2e4 <_start@@Base+0xac2c>
   1d204:	mov	r3, #0
   1d208:	str	r3, [fp, #-44]	; 0xffffffd4
   1d20c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1d210:	str	r3, [fp, #-32]	; 0xffffffe0
   1d214:	sub	r3, fp, #44	; 0x2c
   1d218:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1d21c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1d220:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1d224:	bl	148d8 <_start@@Base+0x2220>
   1d228:	str	r0, [fp, #-60]	; 0xffffffc4
   1d22c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1d230:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1d234:	cmp	r2, r3
   1d238:	bne	1d288 <_start@@Base+0xabd0>
   1d23c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1d240:	str	r3, [fp, #-32]	; 0xffffffe0
   1d244:	sub	r3, fp, #44	; 0x2c
   1d248:	str	r3, [sp]
   1d24c:	ldr	r3, [pc, #756]	; 1d548 <_start@@Base+0xae90>
   1d250:	add	r3, pc, r3
   1d254:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1d258:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1d25c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1d260:	bl	151f4 <_start@@Base+0x2b3c>
   1d264:	str	r0, [fp, #-60]	; 0xffffffc4
   1d268:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1d26c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d270:	cmp	r2, r3
   1d274:	beq	1d500 <_start@@Base+0xae48>
   1d278:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1d27c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1d280:	cmp	r2, r3
   1d284:	beq	1d500 <_start@@Base+0xae48>
   1d288:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1d28c:	cmp	r3, #0
   1d290:	bne	1d2a8 <_start@@Base+0xabf0>
   1d294:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1d298:	ldr	r3, [r3, #8]
   1d29c:	and	r3, r3, #2
   1d2a0:	cmp	r3, #0
   1d2a4:	beq	1d490 <_start@@Base+0xadd8>
   1d2a8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1d2ac:	ldr	r0, [r3]
   1d2b0:	mov	r3, #4
   1d2b4:	mov	r2, #4
   1d2b8:	mov	r1, #1
   1d2bc:	bl	2c400 <flatcc_builder_table_add@@Base>
   1d2c0:	str	r0, [fp, #-36]	; 0xffffffdc
   1d2c4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1d2c8:	cmp	r3, #0
   1d2cc:	beq	1d508 <_start@@Base+0xae50>
   1d2d0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1d2d4:	mov	r1, r3
   1d2d8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1d2dc:	bl	128b4 <_start@@Base+0x1fc>
   1d2e0:	b	1d490 <_start@@Base+0xadd8>
   1d2e4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1d2e8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1d2ec:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1d2f0:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1d2f4:	str	r0, [fp, #-60]	; 0xffffffc4
   1d2f8:	b	1d490 <_start@@Base+0xadd8>
   1d2fc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1d300:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1d304:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1d308:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1d30c:	str	r0, [fp, #-60]	; 0xffffffc4
   1d310:	b	1d490 <_start@@Base+0xadd8>
   1d314:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   1d318:	mvn	r0, #255	; 0xff
   1d31c:	mvn	r1, #0
   1d320:	and	r6, r2, r0
   1d324:	and	r7, r3, r1
   1d328:	add	r3, pc, #528	; 0x210
   1d32c:	ldrd	r2, [r3]
   1d330:	cmp	r7, r3
   1d334:	cmpeq	r6, r2
   1d338:	bne	1d464 <_start@@Base+0xadac>
   1d33c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1d340:	str	r3, [fp, #-32]	; 0xffffffe0
   1d344:	mov	r3, #7
   1d348:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1d34c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1d350:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1d354:	bl	13f3c <_start@@Base+0x1884>
   1d358:	str	r0, [fp, #-60]	; 0xffffffc4
   1d35c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1d360:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1d364:	cmp	r2, r3
   1d368:	beq	1d44c <_start@@Base+0xad94>
   1d36c:	mov	r2, #0
   1d370:	mov	r3, #0
   1d374:	strd	r2, [fp, #-52]	; 0xffffffcc
   1d378:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1d37c:	str	r3, [fp, #-32]	; 0xffffffe0
   1d380:	sub	r3, fp, #52	; 0x34
   1d384:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1d388:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1d38c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1d390:	bl	14b6c <_start@@Base+0x24b4>
   1d394:	str	r0, [fp, #-60]	; 0xffffffc4
   1d398:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1d39c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1d3a0:	cmp	r2, r3
   1d3a4:	bne	1d3f4 <_start@@Base+0xad3c>
   1d3a8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1d3ac:	str	r3, [fp, #-32]	; 0xffffffe0
   1d3b0:	sub	r3, fp, #52	; 0x34
   1d3b4:	str	r3, [sp]
   1d3b8:	ldr	r3, [pc, #396]	; 1d54c <_start@@Base+0xae94>
   1d3bc:	add	r3, pc, r3
   1d3c0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1d3c4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1d3c8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1d3cc:	bl	1579c <_start@@Base+0x30e4>
   1d3d0:	str	r0, [fp, #-60]	; 0xffffffc4
   1d3d4:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1d3d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d3dc:	cmp	r2, r3
   1d3e0:	beq	1d510 <_start@@Base+0xae58>
   1d3e4:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1d3e8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1d3ec:	cmp	r2, r3
   1d3f0:	beq	1d510 <_start@@Base+0xae58>
   1d3f4:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   1d3f8:	orrs	r3, r2, r3
   1d3fc:	bne	1d414 <_start@@Base+0xad5c>
   1d400:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1d404:	ldr	r3, [r3, #8]
   1d408:	and	r3, r3, #2
   1d40c:	cmp	r3, #0
   1d410:	beq	1d490 <_start@@Base+0xadd8>
   1d414:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1d418:	ldr	r0, [r3]
   1d41c:	mov	r3, #8
   1d420:	mov	r2, #8
   1d424:	mov	r1, #0
   1d428:	bl	2c400 <flatcc_builder_table_add@@Base>
   1d42c:	str	r0, [fp, #-36]	; 0xffffffdc
   1d430:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1d434:	cmp	r3, #0
   1d438:	beq	1d518 <_start@@Base+0xae60>
   1d43c:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   1d440:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1d444:	bl	12b9c <_start@@Base+0x4e4>
   1d448:	b	1d490 <_start@@Base+0xadd8>
   1d44c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1d450:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1d454:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1d458:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1d45c:	str	r0, [fp, #-60]	; 0xffffffc4
   1d460:	b	1d490 <_start@@Base+0xadd8>
   1d464:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1d468:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1d46c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1d470:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1d474:	str	r0, [fp, #-60]	; 0xffffffc4
   1d478:	b	1d490 <_start@@Base+0xadd8>
   1d47c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1d480:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1d484:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1d488:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1d48c:	str	r0, [fp, #-60]	; 0xffffffc4
   1d490:	sub	r3, fp, #40	; 0x28
   1d494:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1d498:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1d49c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1d4a0:	bl	13b60 <_start@@Base+0x14a8>
   1d4a4:	str	r0, [fp, #-60]	; 0xffffffc4
   1d4a8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1d4ac:	cmp	r3, #0
   1d4b0:	bne	1d120 <_start@@Base+0xaa68>
   1d4b4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1d4b8:	ldr	r3, [r3, #24]
   1d4bc:	cmp	r3, #0
   1d4c0:	bne	1d520 <_start@@Base+0xae68>
   1d4c4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1d4c8:	ldr	r3, [r3]
   1d4cc:	mov	r0, r3
   1d4d0:	bl	2a9b0 <flatcc_builder_end_table@@Base>
   1d4d4:	mov	r2, r0
   1d4d8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1d4dc:	str	r2, [r3]
   1d4e0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1d4e4:	ldr	r3, [r3]
   1d4e8:	cmp	r3, #0
   1d4ec:	beq	1d550 <_start@@Base+0xae98>
   1d4f0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1d4f4:	b	1d56c <_start@@Base+0xaeb4>
   1d4f8:	nop	{0}
   1d4fc:	b	1d554 <_start@@Base+0xae9c>
   1d500:	nop	{0}
   1d504:	b	1d554 <_start@@Base+0xae9c>
   1d508:	nop	{0}
   1d50c:	b	1d554 <_start@@Base+0xae9c>
   1d510:	nop	{0}
   1d514:	b	1d554 <_start@@Base+0xae9c>
   1d518:	nop	{0}
   1d51c:	b	1d554 <_start@@Base+0xae9c>
   1d520:	nop	{0}
   1d524:	b	1d554 <_start@@Base+0xae9c>
   1d528:	svcpl	0x00626262
   1d52c:	cmnvs	r1, r1, ror #2
   1d530:	cmnvs	r2, pc, asr r4
   1d534:	subsvs	r7, pc, #116, 6	; 0xd0000001
   1d538:	movwvc	r0, #0
   1d53c:	cmnvc	r4, #112, 10	; 0x1c000000
   1d540:	ldrbvs	r7, [r0, #-768]!	; 0xfffffd00
   1d544:	subsvs	r7, pc, #116, 6	; 0xd0000001
   1d548:	andeq	fp, r2, r4, asr #31
   1d54c:	andeq	fp, r2, r4, ror #28
   1d550:	nop	{0}
   1d554:	mov	r3, #33	; 0x21
   1d558:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1d55c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1d560:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1d564:	bl	33258 <flatcc_json_parser_set_error@@Base>
   1d568:	mov	r3, r0
   1d56c:	mov	r0, r3
   1d570:	sub	sp, fp, #20
   1d574:	ldrd	r4, [sp]
   1d578:	ldrd	r6, [sp, #8]
   1d57c:	ldr	fp, [sp, #16]
   1d580:	add	sp, sp, #20
   1d584:	pop	{pc}		; (ldr pc, [sp], #4)
   1d588:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1d58c:	strd	r6, [sp, #8]
   1d590:	strd	r8, [sp, #16]
   1d594:	str	fp, [sp, #24]
   1d598:	str	lr, [sp, #28]
   1d59c:	add	fp, sp, #28
   1d5a0:	sub	sp, sp, #48	; 0x30
   1d5a4:	str	r0, [fp, #-56]	; 0xffffffc8
   1d5a8:	str	r1, [fp, #-60]	; 0xffffffc4
   1d5ac:	str	r2, [fp, #-64]	; 0xffffffc0
   1d5b0:	str	r3, [fp, #-68]	; 0xffffffbc
   1d5b4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1d5b8:	mov	r2, #0
   1d5bc:	str	r2, [r3]
   1d5c0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1d5c4:	ldr	r3, [r3]
   1d5c8:	mov	r1, #3
   1d5cc:	mov	r0, r3
   1d5d0:	bl	29dfc <flatcc_builder_start_table@@Base>
   1d5d4:	mov	r3, r0
   1d5d8:	cmp	r3, #0
   1d5dc:	bne	1d94c <_start@@Base+0xb294>
   1d5e0:	sub	r3, fp, #48	; 0x30
   1d5e4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1d5e8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1d5ec:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1d5f0:	bl	13a6c <_start@@Base+0x13b4>
   1d5f4:	str	r0, [fp, #-60]	; 0xffffffc4
   1d5f8:	b	1d8fc <_start@@Base+0xb244>
   1d5fc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1d600:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1d604:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1d608:	bl	135f4 <_start@@Base+0xf3c>
   1d60c:	str	r0, [fp, #-60]	; 0xffffffc4
   1d610:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1d614:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1d618:	bl	13928 <_start@@Base+0x1270>
   1d61c:	strd	r0, [fp, #-36]	; 0xffffffdc
   1d620:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1d624:	add	r1, pc, #900	; 0x384
   1d628:	ldrd	r0, [r1]
   1d62c:	cmp	r3, r1
   1d630:	cmpeq	r2, r0
   1d634:	bhi	1d724 <_start@@Base+0xb06c>
   1d638:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1d63c:	mov	r0, #0
   1d640:	mvn	r1, #0
   1d644:	and	r4, r2, r0
   1d648:	and	r5, r3, r1
   1d64c:	add	r3, pc, #868	; 0x364
   1d650:	ldrd	r2, [r3]
   1d654:	cmp	r5, r3
   1d658:	cmpeq	r4, r2
   1d65c:	bne	1d70c <_start@@Base+0xb054>
   1d660:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1d664:	str	r3, [fp, #-40]	; 0xffffffd8
   1d668:	mov	r3, #4
   1d66c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1d670:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1d674:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1d678:	bl	13f3c <_start@@Base+0x1884>
   1d67c:	str	r0, [fp, #-60]	; 0xffffffc4
   1d680:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1d684:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1d688:	cmp	r2, r3
   1d68c:	beq	1d6f4 <_start@@Base+0xb03c>
   1d690:	sub	r2, fp, #52	; 0x34
   1d694:	mov	r3, #0
   1d698:	str	r3, [sp]
   1d69c:	mov	r3, r2
   1d6a0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1d6a4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1d6a8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1d6ac:	bl	3518c <flatcc_json_parser_build_uint8_vector_base64@@Base>
   1d6b0:	str	r0, [fp, #-60]	; 0xffffffc4
   1d6b4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1d6b8:	cmp	r3, #0
   1d6bc:	beq	1d954 <_start@@Base+0xb29c>
   1d6c0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1d6c4:	ldr	r3, [r3]
   1d6c8:	mov	r1, #0
   1d6cc:	mov	r0, r3
   1d6d0:	bl	2c670 <flatcc_builder_table_add_offset@@Base>
   1d6d4:	str	r0, [fp, #-44]	; 0xffffffd4
   1d6d8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1d6dc:	cmp	r3, #0
   1d6e0:	beq	1d954 <_start@@Base+0xb29c>
   1d6e4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1d6e8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1d6ec:	str	r2, [r3]
   1d6f0:	b	1d8e4 <_start@@Base+0xb22c>
   1d6f4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1d6f8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1d6fc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1d700:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1d704:	str	r0, [fp, #-60]	; 0xffffffc4
   1d708:	b	1d8e4 <_start@@Base+0xb22c>
   1d70c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1d710:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1d714:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1d718:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1d71c:	str	r0, [fp, #-60]	; 0xffffffc4
   1d720:	b	1d8e4 <_start@@Base+0xb22c>
   1d724:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1d728:	mvn	r0, #255	; 0xff
   1d72c:	mvn	r1, #0
   1d730:	and	r6, r2, r0
   1d734:	and	r7, r3, r1
   1d738:	add	r3, pc, #640	; 0x280
   1d73c:	ldrd	r2, [r3]
   1d740:	cmp	r7, r3
   1d744:	cmpeq	r6, r2
   1d748:	bne	1d7f8 <_start@@Base+0xb140>
   1d74c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1d750:	str	r3, [fp, #-40]	; 0xffffffd8
   1d754:	mov	r3, #7
   1d758:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1d75c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1d760:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1d764:	bl	13f3c <_start@@Base+0x1884>
   1d768:	str	r0, [fp, #-60]	; 0xffffffc4
   1d76c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1d770:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1d774:	cmp	r2, r3
   1d778:	beq	1d7e0 <_start@@Base+0xb128>
   1d77c:	sub	r2, fp, #52	; 0x34
   1d780:	mov	r3, #1
   1d784:	str	r3, [sp]
   1d788:	mov	r3, r2
   1d78c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1d790:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1d794:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1d798:	bl	3518c <flatcc_json_parser_build_uint8_vector_base64@@Base>
   1d79c:	str	r0, [fp, #-60]	; 0xffffffc4
   1d7a0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1d7a4:	cmp	r3, #0
   1d7a8:	beq	1d95c <_start@@Base+0xb2a4>
   1d7ac:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1d7b0:	ldr	r3, [r3]
   1d7b4:	mov	r1, #1
   1d7b8:	mov	r0, r3
   1d7bc:	bl	2c670 <flatcc_builder_table_add_offset@@Base>
   1d7c0:	str	r0, [fp, #-44]	; 0xffffffd4
   1d7c4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1d7c8:	cmp	r3, #0
   1d7cc:	beq	1d95c <_start@@Base+0xb2a4>
   1d7d0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1d7d4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1d7d8:	str	r2, [r3]
   1d7dc:	b	1d8e4 <_start@@Base+0xb22c>
   1d7e0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1d7e4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1d7e8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1d7ec:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1d7f0:	str	r0, [fp, #-60]	; 0xffffffc4
   1d7f4:	b	1d8e4 <_start@@Base+0xb22c>
   1d7f8:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1d7fc:	mov	r0, #0
   1d800:	movt	r0, #65535	; 0xffff
   1d804:	mvn	r1, #0
   1d808:	and	r8, r2, r0
   1d80c:	and	r9, r3, r1
   1d810:	add	r3, pc, #432	; 0x1b0
   1d814:	ldrd	r2, [r3]
   1d818:	cmp	r9, r3
   1d81c:	cmpeq	r8, r2
   1d820:	bne	1d8d0 <_start@@Base+0xb218>
   1d824:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1d828:	str	r3, [fp, #-40]	; 0xffffffd8
   1d82c:	mov	r3, #6
   1d830:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1d834:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1d838:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1d83c:	bl	13f3c <_start@@Base+0x1884>
   1d840:	str	r0, [fp, #-60]	; 0xffffffc4
   1d844:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1d848:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1d84c:	cmp	r2, r3
   1d850:	beq	1d8b8 <_start@@Base+0xb200>
   1d854:	sub	r2, fp, #52	; 0x34
   1d858:	mov	r3, #0
   1d85c:	str	r3, [sp]
   1d860:	mov	r3, r2
   1d864:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1d868:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1d86c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1d870:	bl	3518c <flatcc_json_parser_build_uint8_vector_base64@@Base>
   1d874:	str	r0, [fp, #-60]	; 0xffffffc4
   1d878:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1d87c:	cmp	r3, #0
   1d880:	beq	1d964 <_start@@Base+0xb2ac>
   1d884:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1d888:	ldr	r3, [r3]
   1d88c:	mov	r1, #2
   1d890:	mov	r0, r3
   1d894:	bl	2c670 <flatcc_builder_table_add_offset@@Base>
   1d898:	str	r0, [fp, #-44]	; 0xffffffd4
   1d89c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1d8a0:	cmp	r3, #0
   1d8a4:	beq	1d964 <_start@@Base+0xb2ac>
   1d8a8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1d8ac:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1d8b0:	str	r2, [r3]
   1d8b4:	b	1d8e4 <_start@@Base+0xb22c>
   1d8b8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1d8bc:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1d8c0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1d8c4:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1d8c8:	str	r0, [fp, #-60]	; 0xffffffc4
   1d8cc:	b	1d8e4 <_start@@Base+0xb22c>
   1d8d0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1d8d4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1d8d8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1d8dc:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1d8e0:	str	r0, [fp, #-60]	; 0xffffffc4
   1d8e4:	sub	r3, fp, #48	; 0x30
   1d8e8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1d8ec:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1d8f0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1d8f4:	bl	13b60 <_start@@Base+0x14a8>
   1d8f8:	str	r0, [fp, #-60]	; 0xffffffc4
   1d8fc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1d900:	cmp	r3, #0
   1d904:	bne	1d5fc <_start@@Base+0xaf44>
   1d908:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1d90c:	ldr	r3, [r3, #24]
   1d910:	cmp	r3, #0
   1d914:	bne	1d96c <_start@@Base+0xb2b4>
   1d918:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1d91c:	ldr	r3, [r3]
   1d920:	mov	r0, r3
   1d924:	bl	2a9b0 <flatcc_builder_end_table@@Base>
   1d928:	mov	r2, r0
   1d92c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1d930:	str	r2, [r3]
   1d934:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1d938:	ldr	r3, [r3]
   1d93c:	cmp	r3, #0
   1d940:	beq	1d974 <_start@@Base+0xb2bc>
   1d944:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1d948:	b	1d990 <_start@@Base+0xb2d8>
   1d94c:	nop	{0}
   1d950:	b	1d978 <_start@@Base+0xb2c0>
   1d954:	nop	{0}
   1d958:	b	1d978 <_start@@Base+0xb2c0>
   1d95c:	nop	{0}
   1d960:	b	1d978 <_start@@Base+0xb2c0>
   1d964:	nop	{0}
   1d968:	b	1d978 <_start@@Base+0xb2c0>
   1d96c:	nop	{0}
   1d970:	b	1d978 <_start@@Base+0xb2c0>
   1d974:	nop	{0}
   1d978:	mov	r3, #33	; 0x21
   1d97c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1d980:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1d984:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1d988:	bl	33258 <flatcc_json_parser_set_error@@Base>
   1d98c:	mov	r3, r0
   1d990:	mov	r0, r3
   1d994:	sub	sp, fp, #28
   1d998:	ldrd	r4, [sp]
   1d99c:	ldrd	r6, [sp, #8]
   1d9a0:	ldrd	r8, [sp, #16]
   1d9a4:	ldr	fp, [sp, #24]
   1d9a8:	add	sp, sp, #28
   1d9ac:	pop	{pc}		; (ldr pc, [sp], #4)
   1d9b0:	strbvs	pc, [r3, #-4095]!	; 0xfffff001	; <UNPREDICTABLE>
   1d9b4:	mcrvs	3, 3, r7, cr5, cr4, {3}
   1d9b8:	andeq	r0, r0, r0
   1d9bc:	strbtvs	r7, [r1], #-1121	; 0xfffffb9f
   1d9c0:	cmnvs	r4, r0, lsl #2
   1d9c4:	ldrbvc	r6, [r2, #-3172]!	; 0xfffff39c
   1d9c8:	strbvs	r0, [r4, #-0]!
   1d9cc:	mcrvs	3, 3, r7, cr5, cr4, {3}
   1d9d0:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1d9d4:	strd	r6, [sp, #8]
   1d9d8:	strd	r8, [sp, #16]
   1d9dc:	str	fp, [sp, #24]
   1d9e0:	str	lr, [sp, #28]
   1d9e4:	add	fp, sp, #28
   1d9e8:	sub	sp, sp, #368	; 0x170
   1d9ec:	str	r0, [fp, #-160]	; 0xffffff60
   1d9f0:	str	r1, [fp, #-164]	; 0xffffff5c
   1d9f4:	str	r2, [fp, #-168]	; 0xffffff58
   1d9f8:	str	r3, [fp, #-172]	; 0xffffff54
   1d9fc:	ldr	r2, [fp, #-172]	; 0xffffff54
   1da00:	mov	r3, #0
   1da04:	str	r3, [r2]
   1da08:	ldr	r3, [fp, #-160]	; 0xffffff60
   1da0c:	ldr	r3, [r3]
   1da10:	mov	r1, #36	; 0x24
   1da14:	mov	r0, r3
   1da18:	bl	29dfc <flatcc_builder_start_table@@Base>
   1da1c:	mov	r3, r0
   1da20:	cmp	r3, #0
   1da24:	bne	21434 <_start@@Base+0xed7c>
   1da28:	sub	r3, fp, #60	; 0x3c
   1da2c:	str	r3, [sp]
   1da30:	mov	r3, #1
   1da34:	ldr	r2, [fp, #-168]	; 0xffffff58
   1da38:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1da3c:	ldr	r0, [fp, #-160]	; 0xffffff60
   1da40:	bl	35620 <flatcc_json_parser_prepare_unions@@Base>
   1da44:	mov	r2, r0
   1da48:	ldr	r3, [fp, #-168]	; 0xffffff58
   1da4c:	cmp	r3, r2
   1da50:	beq	2143c <_start@@Base+0xed84>
   1da54:	sub	r3, fp, #52	; 0x34
   1da58:	ldr	r2, [fp, #-168]	; 0xffffff58
   1da5c:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1da60:	ldr	r0, [fp, #-160]	; 0xffffff60
   1da64:	bl	13a6c <_start@@Base+0x13b4>
   1da68:	str	r0, [fp, #-164]	; 0xffffff5c
   1da6c:	b	21390 <_start@@Base+0xecd8>
   1da70:	ldr	r2, [fp, #-168]	; 0xffffff58
   1da74:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1da78:	ldr	r0, [fp, #-160]	; 0xffffff60
   1da7c:	bl	135f4 <_start@@Base+0xf3c>
   1da80:	str	r0, [fp, #-164]	; 0xffffff5c
   1da84:	ldr	r1, [fp, #-168]	; 0xffffff58
   1da88:	ldr	r0, [fp, #-164]	; 0xffffff5c
   1da8c:	bl	13928 <_start@@Base+0x1270>
   1da90:	strd	r0, [fp, #-36]	; 0xffffffdc
   1da94:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1da98:	add	r3, pc, #840	; 0x348
   1da9c:	ldrd	r2, [r3]
   1daa0:	cmp	r1, r3
   1daa4:	cmpeq	r0, r2
   1daa8:	bhi	1ed18 <_start@@Base+0xc660>
   1daac:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1dab0:	add	r3, pc, #824	; 0x338
   1dab4:	ldrd	r2, [r3]
   1dab8:	cmp	r1, r3
   1dabc:	cmpeq	r0, r2
   1dac0:	bhi	1e4cc <_start@@Base+0xbe14>
   1dac4:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1dac8:	add	r3, pc, #808	; 0x328
   1dacc:	ldrd	r2, [r3]
   1dad0:	cmp	r1, r3
   1dad4:	cmpeq	r0, r2
   1dad8:	bhi	1dd24 <_start@@Base+0xb66c>
   1dadc:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1dae0:	mov	r2, #-16777216	; 0xff000000
   1dae4:	mvn	r3, #0
   1dae8:	and	ip, r0, r2
   1daec:	str	ip, [fp, #-180]	; 0xffffff4c
   1daf0:	and	r3, r1, r3
   1daf4:	str	r3, [fp, #-176]	; 0xffffff50
   1daf8:	add	r3, pc, #768	; 0x300
   1dafc:	ldrd	r2, [r3]
   1db00:	ldrd	r0, [fp, #-180]	; 0xffffff4c
   1db04:	cmp	r1, r3
   1db08:	cmpeq	r0, r2
   1db0c:	bne	1dbb0 <_start@@Base+0xb4f8>
   1db10:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1db14:	str	r3, [fp, #-40]	; 0xffffffd8
   1db18:	mov	r3, #5
   1db1c:	ldr	r2, [fp, #-168]	; 0xffffff58
   1db20:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1db24:	ldr	r0, [fp, #-160]	; 0xffffff60
   1db28:	bl	13f3c <_start@@Base+0x1884>
   1db2c:	str	r0, [fp, #-164]	; 0xffffff5c
   1db30:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1db34:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1db38:	cmp	r2, r3
   1db3c:	beq	1db98 <_start@@Base+0xb4e0>
   1db40:	sub	r3, fp, #56	; 0x38
   1db44:	ldr	r2, [fp, #-168]	; 0xffffff58
   1db48:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1db4c:	ldr	r0, [fp, #-160]	; 0xffffff60
   1db50:	bl	1d9d0 <_start@@Base+0xb318>
   1db54:	str	r0, [fp, #-164]	; 0xffffff5c
   1db58:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1db5c:	cmp	r3, #0
   1db60:	beq	21444 <_start@@Base+0xed8c>
   1db64:	ldr	r3, [fp, #-160]	; 0xffffff60
   1db68:	ldr	r3, [r3]
   1db6c:	mov	r1, #12
   1db70:	mov	r0, r3
   1db74:	bl	2c670 <flatcc_builder_table_add_offset@@Base>
   1db78:	str	r0, [fp, #-44]	; 0xffffffd4
   1db7c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1db80:	cmp	r3, #0
   1db84:	beq	21444 <_start@@Base+0xed8c>
   1db88:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1db8c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1db90:	str	r2, [r3]
   1db94:	b	21378 <_start@@Base+0xecc0>
   1db98:	ldr	r2, [fp, #-168]	; 0xffffff58
   1db9c:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1dba0:	ldr	r0, [fp, #-160]	; 0xffffff60
   1dba4:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1dba8:	str	r0, [fp, #-164]	; 0xffffff5c
   1dbac:	b	21378 <_start@@Base+0xecc0>
   1dbb0:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1dbb4:	mov	r2, #-16777216	; 0xff000000
   1dbb8:	mvn	r3, #0
   1dbbc:	and	ip, r0, r2
   1dbc0:	str	ip, [fp, #-188]	; 0xffffff44
   1dbc4:	and	r3, r1, r3
   1dbc8:	str	r3, [fp, #-184]	; 0xffffff48
   1dbcc:	add	r3, pc, #564	; 0x234
   1dbd0:	ldrd	r2, [r3]
   1dbd4:	ldrd	r0, [fp, #-188]	; 0xffffff44
   1dbd8:	cmp	r1, r3
   1dbdc:	cmpeq	r0, r2
   1dbe0:	bne	1dd0c <_start@@Base+0xb654>
   1dbe4:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1dbe8:	str	r3, [fp, #-40]	; 0xffffffd8
   1dbec:	mov	r3, #5
   1dbf0:	ldr	r2, [fp, #-168]	; 0xffffff58
   1dbf4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1dbf8:	ldr	r0, [fp, #-160]	; 0xffffff60
   1dbfc:	bl	13f3c <_start@@Base+0x1884>
   1dc00:	str	r0, [fp, #-164]	; 0xffffff5c
   1dc04:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1dc08:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1dc0c:	cmp	r2, r3
   1dc10:	beq	1dcf4 <_start@@Base+0xb63c>
   1dc14:	mov	r3, #0
   1dc18:	strb	r3, [fp, #-61]	; 0xffffffc3
   1dc1c:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1dc20:	str	r3, [fp, #-40]	; 0xffffffd8
   1dc24:	sub	r3, fp, #61	; 0x3d
   1dc28:	ldr	r2, [fp, #-168]	; 0xffffff58
   1dc2c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1dc30:	ldr	r0, [fp, #-160]	; 0xffffff60
   1dc34:	bl	14e04 <_start@@Base+0x274c>
   1dc38:	str	r0, [fp, #-164]	; 0xffffff5c
   1dc3c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1dc40:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1dc44:	cmp	r2, r3
   1dc48:	bne	1dc98 <_start@@Base+0xb5e0>
   1dc4c:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1dc50:	str	r3, [fp, #-40]	; 0xffffffd8
   1dc54:	sub	r3, fp, #61	; 0x3d
   1dc58:	str	r3, [sp]
   1dc5c:	ldr	r3, [pc, #436]	; 1de18 <_start@@Base+0xb760>
   1dc60:	add	r3, pc, r3
   1dc64:	ldr	r2, [fp, #-168]	; 0xffffff58
   1dc68:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1dc6c:	ldr	r0, [fp, #-160]	; 0xffffff60
   1dc70:	bl	15d60 <_start@@Base+0x36a8>
   1dc74:	str	r0, [fp, #-164]	; 0xffffff5c
   1dc78:	ldr	r2, [fp, #-164]	; 0xffffff5c
   1dc7c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1dc80:	cmp	r2, r3
   1dc84:	beq	2144c <_start@@Base+0xed94>
   1dc88:	ldr	r2, [fp, #-164]	; 0xffffff5c
   1dc8c:	ldr	r3, [fp, #-168]	; 0xffffff58
   1dc90:	cmp	r2, r3
   1dc94:	beq	2144c <_start@@Base+0xed94>
   1dc98:	ldrsb	r3, [fp, #-61]	; 0xffffffc3
   1dc9c:	cmp	r3, #8
   1dca0:	bne	1dcb8 <_start@@Base+0xb600>
   1dca4:	ldr	r3, [fp, #-160]	; 0xffffff60
   1dca8:	ldr	r3, [r3, #8]
   1dcac:	and	r3, r3, #2
   1dcb0:	cmp	r3, #0
   1dcb4:	beq	21378 <_start@@Base+0xecc0>
   1dcb8:	ldr	r3, [fp, #-160]	; 0xffffff60
   1dcbc:	ldr	r0, [r3]
   1dcc0:	mov	r3, #1
   1dcc4:	mov	r2, #1
   1dcc8:	mov	r1, #6
   1dccc:	bl	2c400 <flatcc_builder_table_add@@Base>
   1dcd0:	str	r0, [fp, #-48]	; 0xffffffd0
   1dcd4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1dcd8:	cmp	r3, #0
   1dcdc:	beq	21454 <_start@@Base+0xed9c>
   1dce0:	ldrsb	r3, [fp, #-61]	; 0xffffffc3
   1dce4:	mov	r1, r3
   1dce8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1dcec:	bl	129ec <_start@@Base+0x334>
   1dcf0:	b	21378 <_start@@Base+0xecc0>
   1dcf4:	ldr	r2, [fp, #-168]	; 0xffffff58
   1dcf8:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1dcfc:	ldr	r0, [fp, #-160]	; 0xffffff60
   1dd00:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1dd04:	str	r0, [fp, #-164]	; 0xffffff5c
   1dd08:	b	21378 <_start@@Base+0xecc0>
   1dd0c:	ldr	r2, [fp, #-168]	; 0xffffff58
   1dd10:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1dd14:	ldr	r0, [fp, #-160]	; 0xffffff60
   1dd18:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1dd1c:	str	r0, [fp, #-164]	; 0xffffff5c
   1dd20:	b	21378 <_start@@Base+0xecc0>
   1dd24:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1dd28:	mvn	r2, #0
   1dd2c:	movw	r3, #65535	; 0xffff
   1dd30:	movt	r3, #26735	; 0x686f
   1dd34:	cmp	r1, r3
   1dd38:	cmpeq	r0, r2
   1dd3c:	bhi	1df84 <_start@@Base+0xb8cc>
   1dd40:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1dd44:	mov	r2, #0
   1dd48:	mvn	r3, #0
   1dd4c:	and	ip, r0, r2
   1dd50:	str	ip, [fp, #-196]	; 0xffffff3c
   1dd54:	and	r3, r1, r3
   1dd58:	str	r3, [fp, #-192]	; 0xffffff40
   1dd5c:	add	r3, pc, #172	; 0xac
   1dd60:	ldrd	r2, [r3]
   1dd64:	ldrd	r0, [fp, #-196]	; 0xffffff3c
   1dd68:	cmp	r1, r3
   1dd6c:	cmpeq	r0, r2
   1dd70:	bne	1df6c <_start@@Base+0xb8b4>
   1dd74:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1dd78:	str	r3, [fp, #-40]	; 0xffffffd8
   1dd7c:	mov	r3, #4
   1dd80:	ldr	r2, [fp, #-168]	; 0xffffff58
   1dd84:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1dd88:	ldr	r0, [fp, #-160]	; 0xffffff60
   1dd8c:	bl	13f3c <_start@@Base+0x1884>
   1dd90:	str	r0, [fp, #-164]	; 0xffffff5c
   1dd94:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1dd98:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1dd9c:	cmp	r2, r3
   1dda0:	beq	1df54 <_start@@Base+0xb89c>
   1dda4:	ldr	r3, [fp, #-160]	; 0xffffff60
   1dda8:	ldr	r0, [r3]
   1ddac:	mvn	r3, #0
   1ddb0:	mov	r2, #1
   1ddb4:	mov	r1, #1
   1ddb8:	bl	29b28 <flatcc_builder_start_vector@@Base>
   1ddbc:	mov	r3, r0
   1ddc0:	cmp	r3, #0
   1ddc4:	bne	2145c <_start@@Base+0xeda4>
   1ddc8:	sub	r3, fp, #52	; 0x34
   1ddcc:	ldr	r2, [fp, #-168]	; 0xffffff58
   1ddd0:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1ddd4:	ldr	r0, [fp, #-160]	; 0xffffff60
   1ddd8:	bl	13cd4 <_start@@Base+0x161c>
   1dddc:	str	r0, [fp, #-164]	; 0xffffff5c
   1dde0:	b	1def0 <_start@@Base+0xb838>
   1dde4:	nop	{0}
   1dde8:	cmnvs	r2, r0, ror #4
   1ddec:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   1ddf0:			; <UNDEFINED> instruction: 0xffffffff
   1ddf4:	cdpvs	13, 6, cr6, cr1, cr4, {3}
   1ddf8:			; <UNDEFINED> instruction: 0xffffffff
   1ddfc:			; <UNDEFINED> instruction: 0x666c6577
   1de00:	stmdbvc	r0, {}	; <UNPREDICTABLE>
   1de04:	strbvs	r6, [lr, #-1389]!	; 0xfffffa93
   1de08:	andvc	r0, r0, #0
   1de0c:	cmnvs	pc, #28416	; 0x6f00
   1de10:	andeq	r0, r0, r0
   1de14:			; <UNDEFINED> instruction: 0x666c6578
   1de18:	andeq	fp, r2, ip, asr #11
   1de1c:	andeq	fp, r2, ip, lsr #7
   1de20:	mov	r3, #0
   1de24:	strb	r3, [fp, #-62]	; 0xffffffc2
   1de28:	ldr	r3, [fp, #-160]	; 0xffffff60
   1de2c:	ldr	r3, [r3]
   1de30:	mov	r1, #1
   1de34:	mov	r0, r3
   1de38:	bl	291c4 <flatcc_builder_extend_vector@@Base>
   1de3c:	str	r0, [fp, #-48]	; 0xffffffd0
   1de40:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1de44:	cmp	r3, #0
   1de48:	beq	21464 <_start@@Base+0xedac>
   1de4c:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1de50:	str	r3, [fp, #-40]	; 0xffffffd8
   1de54:	sub	r3, fp, #62	; 0x3e
   1de58:	ldr	r2, [fp, #-168]	; 0xffffff58
   1de5c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1de60:	ldr	r0, [fp, #-160]	; 0xffffff60
   1de64:	bl	14a90 <_start@@Base+0x23d8>
   1de68:	str	r0, [fp, #-164]	; 0xffffff5c
   1de6c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1de70:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1de74:	cmp	r2, r3
   1de78:	bne	1dec8 <_start@@Base+0xb810>
   1de7c:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1de80:	str	r3, [fp, #-40]	; 0xffffffd8
   1de84:	sub	r3, fp, #62	; 0x3e
   1de88:	str	r3, [sp]
   1de8c:	ldr	r3, [pc, #-120]	; 1de1c <_start@@Base+0xb764>
   1de90:	add	r3, pc, r3
   1de94:	ldr	r2, [fp, #-168]	; 0xffffff58
   1de98:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1de9c:	ldr	r0, [fp, #-160]	; 0xffffff60
   1dea0:	bl	155b8 <_start@@Base+0x2f00>
   1dea4:	str	r0, [fp, #-164]	; 0xffffff5c
   1dea8:	ldr	r2, [fp, #-164]	; 0xffffff5c
   1deac:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1deb0:	cmp	r2, r3
   1deb4:	beq	2146c <_start@@Base+0xedb4>
   1deb8:	ldr	r2, [fp, #-164]	; 0xffffff5c
   1debc:	ldr	r3, [fp, #-168]	; 0xffffff58
   1dec0:	cmp	r2, r3
   1dec4:	beq	2146c <_start@@Base+0xedb4>
   1dec8:	ldrb	r3, [fp, #-62]	; 0xffffffc2
   1decc:	mov	r1, r3
   1ded0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1ded4:	bl	127d0 <_start@@Base+0x118>
   1ded8:	sub	r3, fp, #52	; 0x34
   1dedc:	ldr	r2, [fp, #-168]	; 0xffffff58
   1dee0:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1dee4:	ldr	r0, [fp, #-160]	; 0xffffff60
   1dee8:	bl	13dc8 <_start@@Base+0x1710>
   1deec:	str	r0, [fp, #-164]	; 0xffffff5c
   1def0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1def4:	cmp	r3, #0
   1def8:	bne	1de20 <_start@@Base+0xb768>
   1defc:	ldr	r3, [fp, #-160]	; 0xffffff60
   1df00:	ldr	r3, [r3]
   1df04:	mov	r0, r3
   1df08:	bl	2ae24 <flatcc_builder_end_vector@@Base>
   1df0c:	mov	r3, r0
   1df10:	str	r3, [fp, #-56]	; 0xffffffc8
   1df14:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1df18:	cmp	r3, #0
   1df1c:	beq	21474 <_start@@Base+0xedbc>
   1df20:	ldr	r3, [fp, #-160]	; 0xffffff60
   1df24:	ldr	r3, [r3]
   1df28:	mov	r1, #30
   1df2c:	mov	r0, r3
   1df30:	bl	2c670 <flatcc_builder_table_add_offset@@Base>
   1df34:	str	r0, [fp, #-44]	; 0xffffffd4
   1df38:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1df3c:	cmp	r3, #0
   1df40:	beq	21474 <_start@@Base+0xedbc>
   1df44:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1df48:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1df4c:	str	r2, [r3]
   1df50:	b	21378 <_start@@Base+0xecc0>
   1df54:	ldr	r2, [fp, #-168]	; 0xffffff58
   1df58:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1df5c:	ldr	r0, [fp, #-160]	; 0xffffff60
   1df60:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1df64:	str	r0, [fp, #-164]	; 0xffffff5c
   1df68:	b	21378 <_start@@Base+0xecc0>
   1df6c:	ldr	r2, [fp, #-168]	; 0xffffff58
   1df70:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1df74:	ldr	r0, [fp, #-160]	; 0xffffff60
   1df78:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1df7c:	str	r0, [fp, #-164]	; 0xffffff5c
   1df80:	b	21378 <_start@@Base+0xecc0>
   1df84:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1df88:	add	r3, pc, #944	; 0x3b0
   1df8c:	ldrd	r2, [r3]
   1df90:	cmp	r1, r3
   1df94:	cmpeq	r0, r2
   1df98:	bhi	1e118 <_start@@Base+0xba60>
   1df9c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1dfa0:	mov	r2, #0
   1dfa4:	mov	r3, #0
   1dfa8:	movt	r3, #65535	; 0xffff
   1dfac:	and	ip, r0, r2
   1dfb0:	str	ip, [fp, #-204]	; 0xffffff34
   1dfb4:	and	r3, r1, r3
   1dfb8:	str	r3, [fp, #-200]	; 0xffffff38
   1dfbc:	mov	r2, #0
   1dfc0:	mov	r3, #0
   1dfc4:	movt	r3, #26736	; 0x6870
   1dfc8:	ldrd	r0, [fp, #-204]	; 0xffffff34
   1dfcc:	cmp	r1, r3
   1dfd0:	cmpeq	r0, r2
   1dfd4:	bne	1e100 <_start@@Base+0xba48>
   1dfd8:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1dfdc:	str	r3, [fp, #-40]	; 0xffffffd8
   1dfe0:	mov	r3, #2
   1dfe4:	ldr	r2, [fp, #-168]	; 0xffffff58
   1dfe8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1dfec:	ldr	r0, [fp, #-160]	; 0xffffff60
   1dff0:	bl	13f3c <_start@@Base+0x1884>
   1dff4:	str	r0, [fp, #-164]	; 0xffffff5c
   1dff8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1dffc:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1e000:	cmp	r2, r3
   1e004:	beq	1e0e8 <_start@@Base+0xba30>
   1e008:	mov	r3, #0
   1e00c:	strh	r3, [fp, #-64]	; 0xffffffc0
   1e010:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1e014:	str	r3, [fp, #-40]	; 0xffffffd8
   1e018:	sub	r3, fp, #64	; 0x40
   1e01c:	ldr	r2, [fp, #-168]	; 0xffffff58
   1e020:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1e024:	ldr	r0, [fp, #-160]	; 0xffffff60
   1e028:	bl	14d28 <_start@@Base+0x2670>
   1e02c:	str	r0, [fp, #-164]	; 0xffffff5c
   1e030:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1e034:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1e038:	cmp	r2, r3
   1e03c:	bne	1e08c <_start@@Base+0xb9d4>
   1e040:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1e044:	str	r3, [fp, #-40]	; 0xffffffd8
   1e048:	sub	r3, fp, #64	; 0x40
   1e04c:	str	r3, [sp]
   1e050:	ldr	r3, [pc, #760]	; 1e350 <_start@@Base+0xbc98>
   1e054:	add	r3, pc, r3
   1e058:	ldr	r2, [fp, #-168]	; 0xffffff58
   1e05c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1e060:	ldr	r0, [fp, #-160]	; 0xffffff60
   1e064:	bl	15b70 <_start@@Base+0x34b8>
   1e068:	str	r0, [fp, #-164]	; 0xffffff5c
   1e06c:	ldr	r2, [fp, #-164]	; 0xffffff5c
   1e070:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e074:	cmp	r2, r3
   1e078:	beq	2147c <_start@@Base+0xedc4>
   1e07c:	ldr	r2, [fp, #-164]	; 0xffffff5c
   1e080:	ldr	r3, [fp, #-168]	; 0xffffff58
   1e084:	cmp	r2, r3
   1e088:	beq	2147c <_start@@Base+0xedc4>
   1e08c:	ldrsh	r3, [fp, #-64]	; 0xffffffc0
   1e090:	cmp	r3, #100	; 0x64
   1e094:	bne	1e0ac <_start@@Base+0xb9f4>
   1e098:	ldr	r3, [fp, #-160]	; 0xffffff60
   1e09c:	ldr	r3, [r3, #8]
   1e0a0:	and	r3, r3, #2
   1e0a4:	cmp	r3, #0
   1e0a8:	beq	21378 <_start@@Base+0xecc0>
   1e0ac:	ldr	r3, [fp, #-160]	; 0xffffff60
   1e0b0:	ldr	r0, [r3]
   1e0b4:	mov	r3, #2
   1e0b8:	mov	r2, #2
   1e0bc:	mov	r1, #2
   1e0c0:	bl	2c400 <flatcc_builder_table_add@@Base>
   1e0c4:	str	r0, [fp, #-48]	; 0xffffffd0
   1e0c8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1e0cc:	cmp	r3, #0
   1e0d0:	beq	21484 <_start@@Base+0xedcc>
   1e0d4:	ldrsh	r3, [fp, #-64]	; 0xffffffc0
   1e0d8:	mov	r1, r3
   1e0dc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1e0e0:	bl	12ac4 <_start@@Base+0x40c>
   1e0e4:	b	21378 <_start@@Base+0xecc0>
   1e0e8:	ldr	r2, [fp, #-168]	; 0xffffff58
   1e0ec:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1e0f0:	ldr	r0, [fp, #-160]	; 0xffffff60
   1e0f4:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1e0f8:	str	r0, [fp, #-164]	; 0xffffff5c
   1e0fc:	b	21378 <_start@@Base+0xecc0>
   1e100:	ldr	r2, [fp, #-168]	; 0xffffff58
   1e104:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1e108:	ldr	r0, [fp, #-160]	; 0xffffff60
   1e10c:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1e110:	str	r0, [fp, #-164]	; 0xffffff5c
   1e114:	b	21378 <_start@@Base+0xecc0>
   1e118:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1e11c:	add	r3, pc, #548	; 0x224
   1e120:	ldrd	r2, [r3]
   1e124:	cmp	r1, r3
   1e128:	cmpeq	r0, r2
   1e12c:	bne	1e358 <_start@@Base+0xbca0>
   1e130:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1e134:	add	r3, r3, #8
   1e138:	str	r3, [fp, #-164]	; 0xffffff5c
   1e13c:	ldr	r1, [fp, #-168]	; 0xffffff58
   1e140:	ldr	r0, [fp, #-164]	; 0xffffff5c
   1e144:	bl	13928 <_start@@Base+0x1270>
   1e148:	strd	r0, [fp, #-36]	; 0xffffffdc
   1e14c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1e150:	mov	r2, #0
   1e154:	mov	r3, #-16777216	; 0xff000000
   1e158:	and	r4, r0, r2
   1e15c:	and	r5, r1, r3
   1e160:	cmp	r5, #2030043136	; 0x79000000
   1e164:	cmpeq	r4, #0
   1e168:	bne	1e328 <_start@@Base+0xbc70>
   1e16c:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1e170:	str	r3, [fp, #-40]	; 0xffffffd8
   1e174:	mov	r3, #1
   1e178:	ldr	r2, [fp, #-168]	; 0xffffff58
   1e17c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1e180:	ldr	r0, [fp, #-160]	; 0xffffff60
   1e184:	bl	13f3c <_start@@Base+0x1884>
   1e188:	str	r0, [fp, #-164]	; 0xffffff5c
   1e18c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1e190:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1e194:	cmp	r2, r3
   1e198:	beq	1e310 <_start@@Base+0xbc58>
   1e19c:	ldr	r3, [fp, #-160]	; 0xffffff60
   1e1a0:	ldr	r0, [r3]
   1e1a4:	mvn	r3, #0
   1e1a8:	mov	r2, #1
   1e1ac:	mov	r1, #1
   1e1b0:	bl	29b28 <flatcc_builder_start_vector@@Base>
   1e1b4:	mov	r3, r0
   1e1b8:	cmp	r3, #0
   1e1bc:	bne	2148c <_start@@Base+0xedd4>
   1e1c0:	sub	r3, fp, #52	; 0x34
   1e1c4:	ldr	r2, [fp, #-168]	; 0xffffff58
   1e1c8:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1e1cc:	ldr	r0, [fp, #-160]	; 0xffffff60
   1e1d0:	bl	13cd4 <_start@@Base+0x161c>
   1e1d4:	str	r0, [fp, #-164]	; 0xffffff5c
   1e1d8:	b	1e2ac <_start@@Base+0xbbf4>
   1e1dc:	mov	r3, #0
   1e1e0:	strb	r3, [fp, #-65]	; 0xffffffbf
   1e1e4:	ldr	r3, [fp, #-160]	; 0xffffff60
   1e1e8:	ldr	r3, [r3]
   1e1ec:	mov	r1, #1
   1e1f0:	mov	r0, r3
   1e1f4:	bl	291c4 <flatcc_builder_extend_vector@@Base>
   1e1f8:	str	r0, [fp, #-48]	; 0xffffffd0
   1e1fc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1e200:	cmp	r3, #0
   1e204:	beq	21494 <_start@@Base+0xeddc>
   1e208:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1e20c:	str	r3, [fp, #-40]	; 0xffffffd8
   1e210:	sub	r3, fp, #65	; 0x41
   1e214:	ldr	r2, [fp, #-168]	; 0xffffff58
   1e218:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1e21c:	ldr	r0, [fp, #-160]	; 0xffffff60
   1e220:	bl	14a90 <_start@@Base+0x23d8>
   1e224:	str	r0, [fp, #-164]	; 0xffffff5c
   1e228:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1e22c:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1e230:	cmp	r2, r3
   1e234:	bne	1e284 <_start@@Base+0xbbcc>
   1e238:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1e23c:	str	r3, [fp, #-40]	; 0xffffffd8
   1e240:	sub	r3, fp, #65	; 0x41
   1e244:	str	r3, [sp]
   1e248:	ldr	r3, [pc, #260]	; 1e354 <_start@@Base+0xbc9c>
   1e24c:	add	r3, pc, r3
   1e250:	ldr	r2, [fp, #-168]	; 0xffffff58
   1e254:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1e258:	ldr	r0, [fp, #-160]	; 0xffffff60
   1e25c:	bl	155b8 <_start@@Base+0x2f00>
   1e260:	str	r0, [fp, #-164]	; 0xffffff5c
   1e264:	ldr	r2, [fp, #-164]	; 0xffffff5c
   1e268:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e26c:	cmp	r2, r3
   1e270:	beq	2149c <_start@@Base+0xede4>
   1e274:	ldr	r2, [fp, #-164]	; 0xffffff5c
   1e278:	ldr	r3, [fp, #-168]	; 0xffffff58
   1e27c:	cmp	r2, r3
   1e280:	beq	2149c <_start@@Base+0xede4>
   1e284:	ldrb	r3, [fp, #-65]	; 0xffffffbf
   1e288:	mov	r1, r3
   1e28c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1e290:	bl	127d0 <_start@@Base+0x118>
   1e294:	sub	r3, fp, #52	; 0x34
   1e298:	ldr	r2, [fp, #-168]	; 0xffffff58
   1e29c:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1e2a0:	ldr	r0, [fp, #-160]	; 0xffffff60
   1e2a4:	bl	13dc8 <_start@@Base+0x1710>
   1e2a8:	str	r0, [fp, #-164]	; 0xffffff5c
   1e2ac:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1e2b0:	cmp	r3, #0
   1e2b4:	bne	1e1dc <_start@@Base+0xbb24>
   1e2b8:	ldr	r3, [fp, #-160]	; 0xffffff60
   1e2bc:	ldr	r3, [r3]
   1e2c0:	mov	r0, r3
   1e2c4:	bl	2ae24 <flatcc_builder_end_vector@@Base>
   1e2c8:	mov	r3, r0
   1e2cc:	str	r3, [fp, #-56]	; 0xffffffc8
   1e2d0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1e2d4:	cmp	r3, #0
   1e2d8:	beq	214a4 <_start@@Base+0xedec>
   1e2dc:	ldr	r3, [fp, #-160]	; 0xffffff60
   1e2e0:	ldr	r3, [r3]
   1e2e4:	mov	r1, #5
   1e2e8:	mov	r0, r3
   1e2ec:	bl	2c670 <flatcc_builder_table_add_offset@@Base>
   1e2f0:	str	r0, [fp, #-44]	; 0xffffffd4
   1e2f4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1e2f8:	cmp	r3, #0
   1e2fc:	beq	214a4 <_start@@Base+0xedec>
   1e300:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1e304:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1e308:	str	r2, [r3]
   1e30c:	b	21378 <_start@@Base+0xecc0>
   1e310:	ldr	r2, [fp, #-168]	; 0xffffff58
   1e314:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1e318:	ldr	r0, [fp, #-160]	; 0xffffff60
   1e31c:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1e320:	str	r0, [fp, #-164]	; 0xffffff5c
   1e324:	b	21378 <_start@@Base+0xecc0>
   1e328:	ldr	r2, [fp, #-168]	; 0xffffff58
   1e32c:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1e330:	ldr	r0, [fp, #-160]	; 0xffffff60
   1e334:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1e338:	str	r0, [fp, #-164]	; 0xffffff5c
   1e33c:	b	21378 <_start@@Base+0xecc0>
   1e340:	mrcvs	15, 3, r6, cr4, cr1, {3}
   1e344:	stmdbvs	lr!, {r0, r2, r5, r6, r9, sl, ip, sp, lr}^
   1e348:	mrcvs	15, 3, r6, cr4, cr2, {3}
   1e34c:	stmdbvs	lr!, {r0, r2, r5, r6, r9, sl, ip, sp, lr}^
   1e350:	strdeq	fp, [r2], -r4
   1e354:	andeq	fp, r2, r8
   1e358:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1e35c:	mov	r2, #0
   1e360:	mvn	r3, #0
   1e364:	and	ip, r0, r2
   1e368:	str	ip, [fp, #-212]	; 0xffffff2c
   1e36c:	and	r3, r1, r3
   1e370:	str	r3, [fp, #-208]	; 0xffffff30
   1e374:	add	r3, pc, #988	; 0x3dc
   1e378:	ldrd	r2, [r3]
   1e37c:	ldrd	r0, [fp, #-212]	; 0xffffff2c
   1e380:	cmp	r1, r3
   1e384:	cmpeq	r0, r2
   1e388:	bne	1e4b4 <_start@@Base+0xbdfc>
   1e38c:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1e390:	str	r3, [fp, #-40]	; 0xffffffd8
   1e394:	mov	r3, #4
   1e398:	ldr	r2, [fp, #-168]	; 0xffffff58
   1e39c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1e3a0:	ldr	r0, [fp, #-160]	; 0xffffff60
   1e3a4:	bl	13f3c <_start@@Base+0x1884>
   1e3a8:	str	r0, [fp, #-164]	; 0xffffff5c
   1e3ac:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1e3b0:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1e3b4:	cmp	r2, r3
   1e3b8:	beq	1e49c <_start@@Base+0xbde4>
   1e3bc:	mov	r3, #0
   1e3c0:	strh	r3, [fp, #-68]	; 0xffffffbc
   1e3c4:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1e3c8:	str	r3, [fp, #-40]	; 0xffffffd8
   1e3cc:	sub	r3, fp, #68	; 0x44
   1e3d0:	ldr	r2, [fp, #-168]	; 0xffffff58
   1e3d4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1e3d8:	ldr	r0, [fp, #-160]	; 0xffffff60
   1e3dc:	bl	14d28 <_start@@Base+0x2670>
   1e3e0:	str	r0, [fp, #-164]	; 0xffffff5c
   1e3e4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1e3e8:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1e3ec:	cmp	r2, r3
   1e3f0:	bne	1e440 <_start@@Base+0xbd88>
   1e3f4:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1e3f8:	str	r3, [fp, #-40]	; 0xffffffd8
   1e3fc:	sub	r3, fp, #68	; 0x44
   1e400:	str	r3, [sp]
   1e404:	ldr	r3, [pc, #900]	; 1e790 <_start@@Base+0xc0d8>
   1e408:	add	r3, pc, r3
   1e40c:	ldr	r2, [fp, #-168]	; 0xffffff58
   1e410:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1e414:	ldr	r0, [fp, #-160]	; 0xffffff60
   1e418:	bl	15b70 <_start@@Base+0x34b8>
   1e41c:	str	r0, [fp, #-164]	; 0xffffff5c
   1e420:	ldr	r2, [fp, #-164]	; 0xffffff5c
   1e424:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e428:	cmp	r2, r3
   1e42c:	beq	214ac <_start@@Base+0xedf4>
   1e430:	ldr	r2, [fp, #-164]	; 0xffffff5c
   1e434:	ldr	r3, [fp, #-168]	; 0xffffff58
   1e438:	cmp	r2, r3
   1e43c:	beq	214ac <_start@@Base+0xedf4>
   1e440:	ldrsh	r3, [fp, #-68]	; 0xffffffbc
   1e444:	cmp	r3, #150	; 0x96
   1e448:	bne	1e460 <_start@@Base+0xbda8>
   1e44c:	ldr	r3, [fp, #-160]	; 0xffffff60
   1e450:	ldr	r3, [r3, #8]
   1e454:	and	r3, r3, #2
   1e458:	cmp	r3, #0
   1e45c:	beq	21378 <_start@@Base+0xecc0>
   1e460:	ldr	r3, [fp, #-160]	; 0xffffff60
   1e464:	ldr	r0, [r3]
   1e468:	mov	r3, #2
   1e46c:	mov	r2, #2
   1e470:	mov	r1, #1
   1e474:	bl	2c400 <flatcc_builder_table_add@@Base>
   1e478:	str	r0, [fp, #-48]	; 0xffffffd0
   1e47c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1e480:	cmp	r3, #0
   1e484:	beq	214b4 <_start@@Base+0xedfc>
   1e488:	ldrsh	r3, [fp, #-68]	; 0xffffffbc
   1e48c:	mov	r1, r3
   1e490:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1e494:	bl	12ac4 <_start@@Base+0x40c>
   1e498:	b	21378 <_start@@Base+0xecc0>
   1e49c:	ldr	r2, [fp, #-168]	; 0xffffff58
   1e4a0:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1e4a4:	ldr	r0, [fp, #-160]	; 0xffffff60
   1e4a8:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1e4ac:	str	r0, [fp, #-164]	; 0xffffff5c
   1e4b0:	b	21378 <_start@@Base+0xecc0>
   1e4b4:	ldr	r2, [fp, #-168]	; 0xffffff58
   1e4b8:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1e4bc:	ldr	r0, [fp, #-160]	; 0xffffff60
   1e4c0:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1e4c4:	str	r0, [fp, #-164]	; 0xffffff5c
   1e4c8:	b	21378 <_start@@Base+0xecc0>
   1e4cc:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1e4d0:	add	r3, pc, #648	; 0x288
   1e4d4:	ldrd	r2, [r3]
   1e4d8:	cmp	r1, r3
   1e4dc:	cmpeq	r0, r2
   1e4e0:	bhi	1e86c <_start@@Base+0xc1b4>
   1e4e4:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1e4e8:	add	r3, pc, #632	; 0x278
   1e4ec:	ldrd	r2, [r3]
   1e4f0:	cmp	r1, r3
   1e4f4:	cmpeq	r0, r2
   1e4f8:	bhi	1e5e8 <_start@@Base+0xbf30>
   1e4fc:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1e500:	mov	r2, #0
   1e504:	mvn	r3, #0
   1e508:	and	ip, r0, r2
   1e50c:	str	ip, [fp, #-220]	; 0xffffff24
   1e510:	and	r3, r1, r3
   1e514:	str	r3, [fp, #-216]	; 0xffffff28
   1e518:	add	r3, pc, #592	; 0x250
   1e51c:	ldrd	r2, [r3]
   1e520:	ldrd	r0, [fp, #-220]	; 0xffffff24
   1e524:	cmp	r1, r3
   1e528:	cmpeq	r0, r2
   1e52c:	bne	1e5d0 <_start@@Base+0xbf18>
   1e530:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1e534:	str	r3, [fp, #-40]	; 0xffffffd8
   1e538:	mov	r3, #4
   1e53c:	ldr	r2, [fp, #-168]	; 0xffffff58
   1e540:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1e544:	ldr	r0, [fp, #-160]	; 0xffffff60
   1e548:	bl	13f3c <_start@@Base+0x1884>
   1e54c:	str	r0, [fp, #-164]	; 0xffffff5c
   1e550:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1e554:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1e558:	cmp	r2, r3
   1e55c:	beq	1e5b8 <_start@@Base+0xbf00>
   1e560:	sub	r3, fp, #56	; 0x38
   1e564:	ldr	r2, [fp, #-168]	; 0xffffff58
   1e568:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1e56c:	ldr	r0, [fp, #-160]	; 0xffffff60
   1e570:	bl	35410 <flatcc_json_parser_build_string@@Base>
   1e574:	str	r0, [fp, #-164]	; 0xffffff5c
   1e578:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1e57c:	cmp	r3, #0
   1e580:	beq	214bc <_start@@Base+0xee04>
   1e584:	ldr	r3, [fp, #-160]	; 0xffffff60
   1e588:	ldr	r3, [r3]
   1e58c:	mov	r1, #3
   1e590:	mov	r0, r3
   1e594:	bl	2c670 <flatcc_builder_table_add_offset@@Base>
   1e598:	str	r0, [fp, #-44]	; 0xffffffd4
   1e59c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1e5a0:	cmp	r3, #0
   1e5a4:	beq	214bc <_start@@Base+0xee04>
   1e5a8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1e5ac:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1e5b0:	str	r2, [r3]
   1e5b4:	b	21378 <_start@@Base+0xecc0>
   1e5b8:	ldr	r2, [fp, #-168]	; 0xffffff58
   1e5bc:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1e5c0:	ldr	r0, [fp, #-160]	; 0xffffff60
   1e5c4:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1e5c8:	str	r0, [fp, #-164]	; 0xffffff5c
   1e5cc:	b	21378 <_start@@Base+0xecc0>
   1e5d0:	ldr	r2, [fp, #-168]	; 0xffffff58
   1e5d4:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1e5d8:	ldr	r0, [fp, #-160]	; 0xffffff60
   1e5dc:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1e5e0:	str	r0, [fp, #-164]	; 0xffffff5c
   1e5e4:	b	21378 <_start@@Base+0xecc0>
   1e5e8:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1e5ec:	add	r3, pc, #388	; 0x184
   1e5f0:	ldrd	r2, [r3]
   1e5f4:	cmp	r1, r3
   1e5f8:	cmpeq	r0, r2
   1e5fc:	bne	1e794 <_start@@Base+0xc0dc>
   1e600:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1e604:	add	r3, r3, #8
   1e608:	str	r3, [fp, #-164]	; 0xffffff5c
   1e60c:	ldr	r1, [fp, #-168]	; 0xffffff58
   1e610:	ldr	r0, [fp, #-164]	; 0xffffff5c
   1e614:	bl	13928 <_start@@Base+0x1270>
   1e618:	strd	r0, [fp, #-36]	; 0xffffffdc
   1e61c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1e620:	add	r3, pc, #344	; 0x158
   1e624:	ldrd	r2, [r3]
   1e628:	cmp	r1, r3
   1e62c:	cmpeq	r0, r2
   1e630:	bne	1e73c <_start@@Base+0xc084>
   1e634:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1e638:	add	r3, r3, #8
   1e63c:	str	r3, [fp, #-164]	; 0xffffff5c
   1e640:	ldr	r1, [fp, #-168]	; 0xffffff58
   1e644:	ldr	r0, [fp, #-164]	; 0xffffff5c
   1e648:	bl	13928 <_start@@Base+0x1270>
   1e64c:	strd	r0, [fp, #-36]	; 0xffffffdc
   1e650:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1e654:	mov	r2, #-16777216	; 0xff000000
   1e658:	mvn	r3, #0
   1e65c:	and	ip, r0, r2
   1e660:	str	ip, [fp, #-228]	; 0xffffff1c
   1e664:	and	r3, r1, r3
   1e668:	str	r3, [fp, #-224]	; 0xffffff20
   1e66c:	add	r3, pc, #276	; 0x114
   1e670:	ldrd	r2, [r3]
   1e674:	ldrd	r0, [fp, #-228]	; 0xffffff1c
   1e678:	cmp	r1, r3
   1e67c:	cmpeq	r0, r2
   1e680:	bne	1e724 <_start@@Base+0xc06c>
   1e684:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1e688:	str	r3, [fp, #-40]	; 0xffffffd8
   1e68c:	mov	r3, #5
   1e690:	ldr	r2, [fp, #-168]	; 0xffffff58
   1e694:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1e698:	ldr	r0, [fp, #-160]	; 0xffffff60
   1e69c:	bl	13f3c <_start@@Base+0x1884>
   1e6a0:	str	r0, [fp, #-164]	; 0xffffff5c
   1e6a4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1e6a8:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1e6ac:	cmp	r2, r3
   1e6b0:	beq	1e70c <_start@@Base+0xc054>
   1e6b4:	sub	r3, fp, #56	; 0x38
   1e6b8:	ldr	r2, [fp, #-168]	; 0xffffff58
   1e6bc:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1e6c0:	ldr	r0, [fp, #-160]	; 0xffffff60
   1e6c4:	bl	17334 <_start@@Base+0x4c7c>
   1e6c8:	str	r0, [fp, #-164]	; 0xffffff5c
   1e6cc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1e6d0:	cmp	r3, #0
   1e6d4:	beq	214c4 <_start@@Base+0xee0c>
   1e6d8:	ldr	r3, [fp, #-160]	; 0xffffff60
   1e6dc:	ldr	r3, [r3]
   1e6e0:	mov	r1, #34	; 0x22
   1e6e4:	mov	r0, r3
   1e6e8:	bl	2c670 <flatcc_builder_table_add_offset@@Base>
   1e6ec:	str	r0, [fp, #-44]	; 0xffffffd4
   1e6f0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1e6f4:	cmp	r3, #0
   1e6f8:	beq	214c4 <_start@@Base+0xee0c>
   1e6fc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1e700:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1e704:	str	r2, [r3]
   1e708:	b	21378 <_start@@Base+0xecc0>
   1e70c:	ldr	r2, [fp, #-168]	; 0xffffff58
   1e710:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1e714:	ldr	r0, [fp, #-160]	; 0xffffff60
   1e718:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1e71c:	str	r0, [fp, #-164]	; 0xffffff5c
   1e720:	b	21378 <_start@@Base+0xecc0>
   1e724:	ldr	r2, [fp, #-168]	; 0xffffff58
   1e728:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1e72c:	ldr	r0, [fp, #-160]	; 0xffffff60
   1e730:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1e734:	str	r0, [fp, #-164]	; 0xffffff5c
   1e738:	b	21378 <_start@@Base+0xecc0>
   1e73c:	ldr	r2, [fp, #-168]	; 0xffffff58
   1e740:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1e744:	ldr	r0, [fp, #-160]	; 0xffffff60
   1e748:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1e74c:	str	r0, [fp, #-164]	; 0xffffff5c
   1e750:	b	21378 <_start@@Base+0xecc0>
   1e754:	nop	{0}
   1e758:	andeq	r0, r0, r0
   1e75c:	stclvs	14, cr6, [r1, #-388]!	; 0xfffffe7c
   1e760:			; <UNDEFINED> instruction: 0xffffffff
   1e764:	strbtvc	r7, [r5], #-883	; 0xfffffc8d
   1e768:	cdpvs	15, 7, cr5, cr4, cr13, {3}
   1e76c:	rsbvc	r7, r1, r5, ror #4
   1e770:	andeq	r0, r0, r0
   1e774:	cdpvs	13, 6, cr6, cr1, cr5, {3}
   1e778:	cdpvs	15, 7, cr5, cr4, cr14, {3}
   1e77c:	rsbvc	r7, r1, r5, ror #4
   1e780:	rsbvc	r6, r1, r5, ror #6
   1e784:	smcvs	54867	; 0xd653
   1e788:	strvc	r0, [r0], #-0
   1e78c:	svcpl	0x00746573
   1e790:	andeq	sl, r2, r8, asr lr
   1e794:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1e798:	mov	r2, #0
   1e79c:	mvn	r3, #255	; 0xff
   1e7a0:	and	ip, r0, r2
   1e7a4:	str	ip, [fp, #-236]	; 0xffffff14
   1e7a8:	and	r3, r1, r3
   1e7ac:	str	r3, [fp, #-232]	; 0xffffff18
   1e7b0:	add	r3, pc, #872	; 0x368
   1e7b4:	ldrd	r2, [r3]
   1e7b8:	ldrd	r0, [fp, #-236]	; 0xffffff14
   1e7bc:	cmp	r1, r3
   1e7c0:	cmpeq	r0, r2
   1e7c4:	bne	1e854 <_start@@Base+0xc19c>
   1e7c8:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1e7cc:	str	r3, [fp, #-40]	; 0xffffffd8
   1e7d0:	mov	r3, #3
   1e7d4:	ldr	r2, [fp, #-168]	; 0xffffff58
   1e7d8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1e7dc:	ldr	r0, [fp, #-160]	; 0xffffff60
   1e7e0:	bl	13f3c <_start@@Base+0x1884>
   1e7e4:	str	r0, [fp, #-164]	; 0xffffff5c
   1e7e8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1e7ec:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1e7f0:	cmp	r2, r3
   1e7f4:	beq	1e83c <_start@@Base+0xc184>
   1e7f8:	ldr	r3, [fp, #-160]	; 0xffffff60
   1e7fc:	ldr	r0, [r3]
   1e800:	mov	r3, #16
   1e804:	mov	r2, #32
   1e808:	mov	r1, #0
   1e80c:	bl	2c400 <flatcc_builder_table_add@@Base>
   1e810:	str	r0, [fp, #-48]	; 0xffffffd0
   1e814:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1e818:	cmp	r3, #0
   1e81c:	beq	214cc <_start@@Base+0xee14>
   1e820:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1e824:	ldr	r2, [fp, #-168]	; 0xffffff58
   1e828:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1e82c:	ldr	r0, [fp, #-160]	; 0xffffff60
   1e830:	bl	1a3ac <_start@@Base+0x7cf4>
   1e834:	str	r0, [fp, #-164]	; 0xffffff5c
   1e838:	b	21378 <_start@@Base+0xecc0>
   1e83c:	ldr	r2, [fp, #-168]	; 0xffffff58
   1e840:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1e844:	ldr	r0, [fp, #-160]	; 0xffffff60
   1e848:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1e84c:	str	r0, [fp, #-164]	; 0xffffff5c
   1e850:	b	21378 <_start@@Base+0xecc0>
   1e854:	ldr	r2, [fp, #-168]	; 0xffffff58
   1e858:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1e85c:	ldr	r0, [fp, #-160]	; 0xffffff60
   1e860:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1e864:	str	r0, [fp, #-164]	; 0xffffff5c
   1e868:	b	21378 <_start@@Base+0xecc0>
   1e86c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1e870:	mov	r2, #-16777216	; 0xff000000
   1e874:	mvn	r3, #0
   1e878:	and	ip, r0, r2
   1e87c:	str	ip, [fp, #-244]	; 0xffffff0c
   1e880:	and	r3, r1, r3
   1e884:	str	r3, [fp, #-240]	; 0xffffff10
   1e888:	add	r3, pc, #664	; 0x298
   1e88c:	ldrd	r2, [r3]
   1e890:	ldrd	r0, [fp, #-244]	; 0xffffff0c
   1e894:	cmp	r1, r3
   1e898:	cmpeq	r0, r2
   1e89c:	bne	1e9c8 <_start@@Base+0xc310>
   1e8a0:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1e8a4:	str	r3, [fp, #-40]	; 0xffffffd8
   1e8a8:	mov	r3, #5
   1e8ac:	ldr	r2, [fp, #-168]	; 0xffffff58
   1e8b0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1e8b4:	ldr	r0, [fp, #-160]	; 0xffffff60
   1e8b8:	bl	13f3c <_start@@Base+0x1884>
   1e8bc:	str	r0, [fp, #-164]	; 0xffffff5c
   1e8c0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1e8c4:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1e8c8:	cmp	r2, r3
   1e8cc:	beq	1ea64 <_start@@Base+0xc3ac>
   1e8d0:	ldr	r3, [fp, #-160]	; 0xffffff60
   1e8d4:	ldr	r0, [r3]
   1e8d8:	mvn	r3, #-1073741824	; 0xc0000000
   1e8dc:	mov	r2, #2
   1e8e0:	mov	r1, #4
   1e8e4:	bl	29b28 <flatcc_builder_start_vector@@Base>
   1e8e8:	mov	r3, r0
   1e8ec:	cmp	r3, #0
   1e8f0:	bne	214d4 <_start@@Base+0xee1c>
   1e8f4:	sub	r3, fp, #52	; 0x34
   1e8f8:	ldr	r2, [fp, #-168]	; 0xffffff58
   1e8fc:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1e900:	ldr	r0, [fp, #-160]	; 0xffffff60
   1e904:	bl	13cd4 <_start@@Base+0x161c>
   1e908:	str	r0, [fp, #-164]	; 0xffffff5c
   1e90c:	b	1e964 <_start@@Base+0xc2ac>
   1e910:	ldr	r3, [fp, #-160]	; 0xffffff60
   1e914:	ldr	r3, [r3]
   1e918:	mov	r1, #1
   1e91c:	mov	r0, r3
   1e920:	bl	291c4 <flatcc_builder_extend_vector@@Base>
   1e924:	str	r0, [fp, #-48]	; 0xffffffd0
   1e928:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1e92c:	cmp	r3, #0
   1e930:	beq	214dc <_start@@Base+0xee24>
   1e934:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1e938:	ldr	r2, [fp, #-168]	; 0xffffff58
   1e93c:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1e940:	ldr	r0, [fp, #-160]	; 0xffffff60
   1e944:	bl	188f8 <_start@@Base+0x6240>
   1e948:	str	r0, [fp, #-164]	; 0xffffff5c
   1e94c:	sub	r3, fp, #52	; 0x34
   1e950:	ldr	r2, [fp, #-168]	; 0xffffff58
   1e954:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1e958:	ldr	r0, [fp, #-160]	; 0xffffff60
   1e95c:	bl	13dc8 <_start@@Base+0x1710>
   1e960:	str	r0, [fp, #-164]	; 0xffffff5c
   1e964:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1e968:	cmp	r3, #0
   1e96c:	bne	1e910 <_start@@Base+0xc258>
   1e970:	ldr	r3, [fp, #-160]	; 0xffffff60
   1e974:	ldr	r3, [r3]
   1e978:	mov	r0, r3
   1e97c:	bl	2ae24 <flatcc_builder_end_vector@@Base>
   1e980:	mov	r3, r0
   1e984:	str	r3, [fp, #-56]	; 0xffffffc8
   1e988:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1e98c:	cmp	r3, #0
   1e990:	beq	214e4 <_start@@Base+0xee2c>
   1e994:	ldr	r3, [fp, #-160]	; 0xffffff60
   1e998:	ldr	r3, [r3]
   1e99c:	mov	r1, #9
   1e9a0:	mov	r0, r3
   1e9a4:	bl	2c670 <flatcc_builder_table_add_offset@@Base>
   1e9a8:	str	r0, [fp, #-44]	; 0xffffffd4
   1e9ac:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1e9b0:	cmp	r3, #0
   1e9b4:	beq	214e4 <_start@@Base+0xee2c>
   1e9b8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1e9bc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1e9c0:	str	r2, [r3]
   1e9c4:	b	21378 <_start@@Base+0xecc0>
   1e9c8:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1e9cc:	mov	r2, #0
   1e9d0:	mvn	r3, #0
   1e9d4:	and	ip, r0, r2
   1e9d8:	str	ip, [fp, #-252]	; 0xffffff04
   1e9dc:	and	r3, r1, r3
   1e9e0:	str	r3, [fp, #-248]	; 0xffffff08
   1e9e4:	add	r3, pc, #324	; 0x144
   1e9e8:	ldrd	r2, [r3]
   1e9ec:	ldrd	r0, [fp, #-252]	; 0xffffff04
   1e9f0:	cmp	r1, r3
   1e9f4:	cmpeq	r0, r2
   1e9f8:	bne	1ea6c <_start@@Base+0xc3b4>
   1e9fc:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1ea00:	str	r3, [fp, #-40]	; 0xffffffd8
   1ea04:	mov	r3, #4
   1ea08:	ldr	r2, [fp, #-168]	; 0xffffff58
   1ea0c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1ea10:	ldr	r0, [fp, #-160]	; 0xffffff60
   1ea14:	bl	13f3c <_start@@Base+0x1884>
   1ea18:	str	r0, [fp, #-164]	; 0xffffff5c
   1ea1c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1ea20:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1ea24:	cmp	r2, r3
   1ea28:	beq	1ea74 <_start@@Base+0xc3bc>
   1ea2c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1ea30:	ldr	r3, [pc, #264]	; 1eb40 <_start@@Base+0xc488>
   1ea34:	add	r3, pc, r3
   1ea38:	str	r3, [sp, #8]
   1ea3c:	str	r2, [sp, #4]
   1ea40:	mov	r3, #8
   1ea44:	str	r3, [sp]
   1ea48:	mov	r3, #0
   1ea4c:	ldr	r2, [fp, #-168]	; 0xffffff58
   1ea50:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1ea54:	ldr	r0, [fp, #-160]	; 0xffffff60
   1ea58:	bl	35770 <flatcc_json_parser_union@@Base>
   1ea5c:	str	r0, [fp, #-164]	; 0xffffff5c
   1ea60:	b	21378 <_start@@Base+0xecc0>
   1ea64:	nop	{0}
   1ea68:	b	1ea78 <_start@@Base+0xc3c0>
   1ea6c:	nop	{0}
   1ea70:	b	1ea78 <_start@@Base+0xc3c0>
   1ea74:	nop	{0}
   1ea78:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1ea7c:	mov	r2, #-16777216	; 0xff000000
   1ea80:	mvn	r3, #0
   1ea84:	and	ip, r0, r2
   1ea88:	str	ip, [fp, #-260]	; 0xfffffefc
   1ea8c:	and	r3, r1, r3
   1ea90:	str	r3, [fp, #-256]	; 0xffffff00
   1ea94:	add	r3, pc, #156	; 0x9c
   1ea98:	ldrd	r2, [r3]
   1ea9c:	sub	r1, fp, #260	; 0x104
   1eaa0:	ldrd	r0, [r1]
   1eaa4:	cmp	r1, r3
   1eaa8:	cmpeq	r0, r2
   1eaac:	bne	1ebfc <_start@@Base+0xc544>
   1eab0:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1eab4:	str	r3, [fp, #-40]	; 0xffffffd8
   1eab8:	mov	r3, #5
   1eabc:	ldr	r2, [fp, #-168]	; 0xffffff58
   1eac0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1eac4:	ldr	r0, [fp, #-160]	; 0xffffff60
   1eac8:	bl	13f3c <_start@@Base+0x1884>
   1eacc:	str	r0, [fp, #-164]	; 0xffffff5c
   1ead0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1ead4:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1ead8:	cmp	r2, r3
   1eadc:	beq	1ec04 <_start@@Base+0xc54c>
   1eae0:	ldr	r3, [fp, #-160]	; 0xffffff60
   1eae4:	ldr	r0, [r3]
   1eae8:	mvn	r3, #-1073741824	; 0xc0000000
   1eaec:	mov	r2, #2
   1eaf0:	mov	r1, #4
   1eaf4:	bl	29b28 <flatcc_builder_start_vector@@Base>
   1eaf8:	mov	r3, r0
   1eafc:	cmp	r3, #0
   1eb00:	bne	214ec <_start@@Base+0xee34>
   1eb04:	sub	r3, fp, #52	; 0x34
   1eb08:	ldr	r2, [fp, #-168]	; 0xffffff58
   1eb0c:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1eb10:	ldr	r0, [fp, #-160]	; 0xffffff60
   1eb14:	bl	13cd4 <_start@@Base+0x161c>
   1eb18:	str	r0, [fp, #-164]	; 0xffffff5c
   1eb1c:	b	1eb98 <_start@@Base+0xc4e0>
   1eb20:	andeq	r0, r0, r0
   1eb24:	rsbvc	r7, pc, r0, lsl #6
   1eb28:	strcc	r0, [r0], #-0
   1eb2c:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   1eb30:	andeq	r0, r0, r0
   1eb34:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   1eb38:	strcc	r0, [r0, #-0]
   1eb3c:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   1eb40:			; <UNDEFINED> instruction: 0xffff98d4
   1eb44:	ldr	r3, [fp, #-160]	; 0xffffff60
   1eb48:	ldr	r3, [r3]
   1eb4c:	mov	r1, #1
   1eb50:	mov	r0, r3
   1eb54:	bl	291c4 <flatcc_builder_extend_vector@@Base>
   1eb58:	str	r0, [fp, #-48]	; 0xffffffd0
   1eb5c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1eb60:	cmp	r3, #0
   1eb64:	beq	214f4 <_start@@Base+0xee3c>
   1eb68:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1eb6c:	ldr	r2, [fp, #-168]	; 0xffffff58
   1eb70:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1eb74:	ldr	r0, [fp, #-160]	; 0xffffff60
   1eb78:	bl	188f8 <_start@@Base+0x6240>
   1eb7c:	str	r0, [fp, #-164]	; 0xffffff5c
   1eb80:	sub	r3, fp, #52	; 0x34
   1eb84:	ldr	r2, [fp, #-168]	; 0xffffff58
   1eb88:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1eb8c:	ldr	r0, [fp, #-160]	; 0xffffff60
   1eb90:	bl	13dc8 <_start@@Base+0x1710>
   1eb94:	str	r0, [fp, #-164]	; 0xffffff5c
   1eb98:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1eb9c:	cmp	r3, #0
   1eba0:	bne	1eb44 <_start@@Base+0xc48c>
   1eba4:	ldr	r3, [fp, #-160]	; 0xffffff60
   1eba8:	ldr	r3, [r3]
   1ebac:	mov	r0, r3
   1ebb0:	bl	2ae24 <flatcc_builder_end_vector@@Base>
   1ebb4:	mov	r3, r0
   1ebb8:	str	r3, [fp, #-56]	; 0xffffffc8
   1ebbc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1ebc0:	cmp	r3, #0
   1ebc4:	beq	214fc <_start@@Base+0xee44>
   1ebc8:	ldr	r3, [fp, #-160]	; 0xffffff60
   1ebcc:	ldr	r3, [r3]
   1ebd0:	mov	r1, #31
   1ebd4:	mov	r0, r3
   1ebd8:	bl	2c670 <flatcc_builder_table_add_offset@@Base>
   1ebdc:	str	r0, [fp, #-44]	; 0xffffffd4
   1ebe0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1ebe4:	cmp	r3, #0
   1ebe8:	beq	214fc <_start@@Base+0xee44>
   1ebec:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1ebf0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1ebf4:	str	r2, [r3]
   1ebf8:	b	21378 <_start@@Base+0xecc0>
   1ebfc:	nop	{0}
   1ec00:	b	1ec08 <_start@@Base+0xc550>
   1ec04:	nop	{0}
   1ec08:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1ec0c:	add	r3, pc, #812	; 0x32c
   1ec10:	ldrd	r2, [r3]
   1ec14:	cmp	r1, r3
   1ec18:	cmpeq	r0, r2
   1ec1c:	bne	1ed00 <_start@@Base+0xc648>
   1ec20:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1ec24:	add	r3, r3, #8
   1ec28:	str	r3, [fp, #-164]	; 0xffffff5c
   1ec2c:	ldr	r1, [fp, #-168]	; 0xffffff58
   1ec30:	ldr	r0, [fp, #-164]	; 0xffffff5c
   1ec34:	bl	13928 <_start@@Base+0x1270>
   1ec38:	strd	r0, [fp, #-36]	; 0xffffffdc
   1ec3c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1ec40:	mov	r2, #0
   1ec44:	mov	r3, #-16777216	; 0xff000000
   1ec48:	and	r6, r0, r2
   1ec4c:	and	r7, r1, r3
   1ec50:	cmp	r7, #1694498816	; 0x65000000
   1ec54:	cmpeq	r6, #0
   1ec58:	bne	1ece8 <_start@@Base+0xc630>
   1ec5c:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1ec60:	str	r3, [fp, #-40]	; 0xffffffd8
   1ec64:	mov	r3, #1
   1ec68:	ldr	r2, [fp, #-168]	; 0xffffff58
   1ec6c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1ec70:	ldr	r0, [fp, #-160]	; 0xffffff60
   1ec74:	bl	13f3c <_start@@Base+0x1884>
   1ec78:	str	r0, [fp, #-164]	; 0xffffff5c
   1ec7c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1ec80:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1ec84:	cmp	r2, r3
   1ec88:	beq	1ecd0 <_start@@Base+0xc618>
   1ec8c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1ec90:	ldr	r3, [pc, #720]	; 1ef68 <_start@@Base+0xc8b0>
   1ec94:	add	r3, pc, r3
   1ec98:	str	r3, [sp, #12]
   1ec9c:	ldr	r3, [pc, #712]	; 1ef6c <_start@@Base+0xc8b4>
   1eca0:	add	r3, pc, r3
   1eca4:	str	r3, [sp, #8]
   1eca8:	str	r2, [sp, #4]
   1ecac:	mov	r3, #8
   1ecb0:	str	r3, [sp]
   1ecb4:	mov	r3, #0
   1ecb8:	ldr	r2, [fp, #-168]	; 0xffffff58
   1ecbc:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1ecc0:	ldr	r0, [fp, #-160]	; 0xffffff60
   1ecc4:	bl	35954 <flatcc_json_parser_union_type@@Base>
   1ecc8:	str	r0, [fp, #-164]	; 0xffffff5c
   1eccc:	b	21378 <_start@@Base+0xecc0>
   1ecd0:	ldr	r2, [fp, #-168]	; 0xffffff58
   1ecd4:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1ecd8:	ldr	r0, [fp, #-160]	; 0xffffff60
   1ecdc:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1ece0:	str	r0, [fp, #-164]	; 0xffffff5c
   1ece4:	b	21378 <_start@@Base+0xecc0>
   1ece8:	ldr	r2, [fp, #-168]	; 0xffffff58
   1ecec:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1ecf0:	ldr	r0, [fp, #-160]	; 0xffffff60
   1ecf4:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1ecf8:	str	r0, [fp, #-164]	; 0xffffff5c
   1ecfc:	b	21378 <_start@@Base+0xecc0>
   1ed00:	ldr	r2, [fp, #-168]	; 0xffffff58
   1ed04:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1ed08:	ldr	r0, [fp, #-160]	; 0xffffff60
   1ed0c:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1ed10:	str	r0, [fp, #-164]	; 0xffffff5c
   1ed14:	b	21378 <_start@@Base+0xecc0>
   1ed18:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1ed1c:	add	r3, pc, #548	; 0x224
   1ed20:	ldrd	r2, [r3]
   1ed24:	cmp	r1, r3
   1ed28:	cmpeq	r0, r2
   1ed2c:	bhi	1fdb4 <_start@@Base+0xd6fc>
   1ed30:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1ed34:	add	r3, pc, #532	; 0x214
   1ed38:	ldrd	r2, [r3]
   1ed3c:	cmp	r1, r3
   1ed40:	cmpeq	r0, r2
   1ed44:	bne	1f6b4 <_start@@Base+0xcffc>
   1ed48:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1ed4c:	add	r3, r3, #8
   1ed50:	str	r3, [fp, #-164]	; 0xffffff5c
   1ed54:	ldr	r1, [fp, #-168]	; 0xffffff58
   1ed58:	ldr	r0, [fp, #-164]	; 0xffffff5c
   1ed5c:	bl	13928 <_start@@Base+0x1270>
   1ed60:	strd	r0, [fp, #-36]	; 0xffffffdc
   1ed64:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1ed68:	add	r3, pc, #488	; 0x1e8
   1ed6c:	ldrd	r2, [r3]
   1ed70:	cmp	r1, r3
   1ed74:	cmpeq	r0, r2
   1ed78:	bhi	1f154 <_start@@Base+0xca9c>
   1ed7c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1ed80:	add	r3, pc, #472	; 0x1d8
   1ed84:	ldrd	r2, [r3]
   1ed88:	cmp	r1, r3
   1ed8c:	cmpeq	r0, r2
   1ed90:	bne	1ef38 <_start@@Base+0xc880>
   1ed94:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1ed98:	str	r3, [fp, #-40]	; 0xffffffd8
   1ed9c:	mov	r3, #8
   1eda0:	ldr	r2, [fp, #-168]	; 0xffffff58
   1eda4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1eda8:	ldr	r0, [fp, #-160]	; 0xffffff60
   1edac:	bl	13f3c <_start@@Base+0x1884>
   1edb0:	str	r0, [fp, #-164]	; 0xffffff5c
   1edb4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1edb8:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1edbc:	cmp	r2, r3
   1edc0:	beq	1ef74 <_start@@Base+0xc8bc>
   1edc4:	ldr	r3, [fp, #-160]	; 0xffffff60
   1edc8:	ldr	r0, [r3]
   1edcc:	mvn	r3, #0
   1edd0:	mov	r2, #1
   1edd4:	mov	r1, #1
   1edd8:	bl	29b28 <flatcc_builder_start_vector@@Base>
   1eddc:	mov	r3, r0
   1ede0:	cmp	r3, #0
   1ede4:	bne	21504 <_start@@Base+0xee4c>
   1ede8:	sub	r3, fp, #52	; 0x34
   1edec:	ldr	r2, [fp, #-168]	; 0xffffff58
   1edf0:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1edf4:	ldr	r0, [fp, #-160]	; 0xffffff60
   1edf8:	bl	13cd4 <_start@@Base+0x161c>
   1edfc:	str	r0, [fp, #-164]	; 0xffffff5c
   1ee00:	b	1eed4 <_start@@Base+0xc81c>
   1ee04:	mov	r3, #0
   1ee08:	strb	r3, [fp, #-69]	; 0xffffffbb
   1ee0c:	ldr	r3, [fp, #-160]	; 0xffffff60
   1ee10:	ldr	r3, [r3]
   1ee14:	mov	r1, #1
   1ee18:	mov	r0, r3
   1ee1c:	bl	291c4 <flatcc_builder_extend_vector@@Base>
   1ee20:	str	r0, [fp, #-48]	; 0xffffffd0
   1ee24:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1ee28:	cmp	r3, #0
   1ee2c:	beq	2150c <_start@@Base+0xee54>
   1ee30:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1ee34:	str	r3, [fp, #-40]	; 0xffffffd8
   1ee38:	sub	r3, fp, #69	; 0x45
   1ee3c:	ldr	r2, [fp, #-168]	; 0xffffff58
   1ee40:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1ee44:	ldr	r0, [fp, #-160]	; 0xffffff60
   1ee48:	bl	14ee0 <_start@@Base+0x2828>
   1ee4c:	str	r0, [fp, #-164]	; 0xffffff5c
   1ee50:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1ee54:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1ee58:	cmp	r2, r3
   1ee5c:	bne	1eeac <_start@@Base+0xc7f4>
   1ee60:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1ee64:	str	r3, [fp, #-40]	; 0xffffffd8
   1ee68:	sub	r3, fp, #69	; 0x45
   1ee6c:	str	r3, [sp]
   1ee70:	ldr	r3, [pc, #248]	; 1ef70 <_start@@Base+0xc8b8>
   1ee74:	add	r3, pc, r3
   1ee78:	ldr	r2, [fp, #-168]	; 0xffffff58
   1ee7c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1ee80:	ldr	r0, [fp, #-160]	; 0xffffff60
   1ee84:	bl	15f50 <_start@@Base+0x3898>
   1ee88:	str	r0, [fp, #-164]	; 0xffffff5c
   1ee8c:	ldr	r2, [fp, #-164]	; 0xffffff5c
   1ee90:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ee94:	cmp	r2, r3
   1ee98:	beq	21514 <_start@@Base+0xee5c>
   1ee9c:	ldr	r2, [fp, #-164]	; 0xffffff5c
   1eea0:	ldr	r3, [fp, #-168]	; 0xffffff58
   1eea4:	cmp	r2, r3
   1eea8:	beq	21514 <_start@@Base+0xee5c>
   1eeac:	ldrb	r3, [fp, #-69]	; 0xffffffbb
   1eeb0:	mov	r1, r3
   1eeb4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1eeb8:	bl	12de0 <_start@@Base+0x728>
   1eebc:	sub	r3, fp, #52	; 0x34
   1eec0:	ldr	r2, [fp, #-168]	; 0xffffff58
   1eec4:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1eec8:	ldr	r0, [fp, #-160]	; 0xffffff60
   1eecc:	bl	13dc8 <_start@@Base+0x1710>
   1eed0:	str	r0, [fp, #-164]	; 0xffffff5c
   1eed4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1eed8:	cmp	r3, #0
   1eedc:	bne	1ee04 <_start@@Base+0xc74c>
   1eee0:	ldr	r3, [fp, #-160]	; 0xffffff60
   1eee4:	ldr	r3, [r3]
   1eee8:	mov	r0, r3
   1eeec:	bl	2ae24 <flatcc_builder_end_vector@@Base>
   1eef0:	mov	r3, r0
   1eef4:	str	r3, [fp, #-56]	; 0xffffffc8
   1eef8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1eefc:	cmp	r3, #0
   1ef00:	beq	2151c <_start@@Base+0xee64>
   1ef04:	ldr	r3, [fp, #-160]	; 0xffffff60
   1ef08:	ldr	r3, [r3]
   1ef0c:	mov	r1, #24
   1ef10:	mov	r0, r3
   1ef14:	bl	2c670 <flatcc_builder_table_add_offset@@Base>
   1ef18:	str	r0, [fp, #-44]	; 0xffffffd4
   1ef1c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1ef20:	cmp	r3, #0
   1ef24:	beq	2151c <_start@@Base+0xee64>
   1ef28:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1ef2c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1ef30:	str	r2, [r3]
   1ef34:	b	21378 <_start@@Base+0xecc0>
   1ef38:	nop	{0}
   1ef3c:	b	1ef78 <_start@@Base+0xc8c0>
   1ef40:	svcpl	0x00747970
   1ef44:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   1ef48:	shsub8vs	pc, r2, pc	; <UNPREDICTABLE>
   1ef4c:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   1ef50:	cmnvs	r2, r1, ror #4
   1ef54:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   1ef58:	ldrbtvc	r6, [r2], #-2413	; 0xfffff693
   1ef5c:	stmdbvc	pc!, {r0, r1, r4, r5, r6, r9, sl, sp, lr}^	; <UNPREDICTABLE>
   1ef60:	svcvs	0x006f6c73
   1ef64:	stmdbvc	pc!, {r1, r5, r6, r9, sl, sp, lr}^	; <UNPREDICTABLE>
   1ef68:			; <UNDEFINED> instruction: 0xffff9674
   1ef6c:	andeq	sl, r2, ip, asr #11
   1ef70:	andeq	sl, r2, r8, lsl #8
   1ef74:	nop	{0}
   1ef78:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1ef7c:	add	r3, pc, #916	; 0x394
   1ef80:	ldrd	r2, [r3]
   1ef84:	cmp	r1, r3
   1ef88:	cmpeq	r0, r2
   1ef8c:	bne	1f13c <_start@@Base+0xca84>
   1ef90:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1ef94:	add	r3, r3, #8
   1ef98:	str	r3, [fp, #-164]	; 0xffffff5c
   1ef9c:	ldr	r1, [fp, #-168]	; 0xffffff58
   1efa0:	ldr	r0, [fp, #-164]	; 0xffffff5c
   1efa4:	bl	13928 <_start@@Base+0x1270>
   1efa8:	strd	r0, [fp, #-36]	; 0xffffffdc
   1efac:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1efb0:	mvn	r2, #255	; 0xff
   1efb4:	mvn	r3, #0
   1efb8:	and	ip, r0, r2
   1efbc:	str	ip, [fp, #-268]	; 0xfffffef4
   1efc0:	and	r3, r1, r3
   1efc4:	str	r3, [fp, #-264]	; 0xfffffef8
   1efc8:	add	r3, pc, #848	; 0x350
   1efcc:	ldrd	r2, [r3]
   1efd0:	sub	r1, fp, #268	; 0x10c
   1efd4:	ldrd	r0, [r1]
   1efd8:	cmp	r1, r3
   1efdc:	cmpeq	r0, r2
   1efe0:	bne	1f124 <_start@@Base+0xca6c>
   1efe4:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1efe8:	str	r3, [fp, #-40]	; 0xffffffd8
   1efec:	mov	r3, #7
   1eff0:	ldr	r2, [fp, #-168]	; 0xffffff58
   1eff4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1eff8:	ldr	r0, [fp, #-160]	; 0xffffff60
   1effc:	bl	13f3c <_start@@Base+0x1884>
   1f000:	str	r0, [fp, #-164]	; 0xffffff5c
   1f004:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1f008:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1f00c:	cmp	r2, r3
   1f010:	beq	1f10c <_start@@Base+0xca54>
   1f014:	ldr	r3, [fp, #-160]	; 0xffffff60
   1f018:	ldr	r0, [r3]
   1f01c:	mvn	r3, #-536870912	; 0xe0000000
   1f020:	mov	r2, #4
   1f024:	mov	r1, #8
   1f028:	bl	29b28 <flatcc_builder_start_vector@@Base>
   1f02c:	mov	r3, r0
   1f030:	cmp	r3, #0
   1f034:	bne	21524 <_start@@Base+0xee6c>
   1f038:	sub	r3, fp, #52	; 0x34
   1f03c:	ldr	r2, [fp, #-168]	; 0xffffff58
   1f040:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1f044:	ldr	r0, [fp, #-160]	; 0xffffff60
   1f048:	bl	13cd4 <_start@@Base+0x161c>
   1f04c:	str	r0, [fp, #-164]	; 0xffffff5c
   1f050:	b	1f0a8 <_start@@Base+0xc9f0>
   1f054:	ldr	r3, [fp, #-160]	; 0xffffff60
   1f058:	ldr	r3, [r3]
   1f05c:	mov	r1, #1
   1f060:	mov	r0, r3
   1f064:	bl	291c4 <flatcc_builder_extend_vector@@Base>
   1f068:	str	r0, [fp, #-48]	; 0xffffffd0
   1f06c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1f070:	cmp	r3, #0
   1f074:	beq	2152c <_start@@Base+0xee74>
   1f078:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1f07c:	ldr	r2, [fp, #-168]	; 0xffffff58
   1f080:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1f084:	ldr	r0, [fp, #-160]	; 0xffffff60
   1f088:	bl	1ac6c <_start@@Base+0x85b4>
   1f08c:	str	r0, [fp, #-164]	; 0xffffff5c
   1f090:	sub	r3, fp, #52	; 0x34
   1f094:	ldr	r2, [fp, #-168]	; 0xffffff58
   1f098:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1f09c:	ldr	r0, [fp, #-160]	; 0xffffff60
   1f0a0:	bl	13dc8 <_start@@Base+0x1710>
   1f0a4:	str	r0, [fp, #-164]	; 0xffffff5c
   1f0a8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1f0ac:	cmp	r3, #0
   1f0b0:	bne	1f054 <_start@@Base+0xc99c>
   1f0b4:	ldr	r3, [fp, #-160]	; 0xffffff60
   1f0b8:	ldr	r3, [r3]
   1f0bc:	mov	r0, r3
   1f0c0:	bl	2ae24 <flatcc_builder_end_vector@@Base>
   1f0c4:	mov	r3, r0
   1f0c8:	str	r3, [fp, #-56]	; 0xffffffc8
   1f0cc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1f0d0:	cmp	r3, #0
   1f0d4:	beq	21534 <_start@@Base+0xee7c>
   1f0d8:	ldr	r3, [fp, #-160]	; 0xffffff60
   1f0dc:	ldr	r3, [r3]
   1f0e0:	mov	r1, #29
   1f0e4:	mov	r0, r3
   1f0e8:	bl	2c670 <flatcc_builder_table_add_offset@@Base>
   1f0ec:	str	r0, [fp, #-44]	; 0xffffffd4
   1f0f0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1f0f4:	cmp	r3, #0
   1f0f8:	beq	21534 <_start@@Base+0xee7c>
   1f0fc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1f100:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1f104:	str	r2, [r3]
   1f108:	b	21378 <_start@@Base+0xecc0>
   1f10c:	ldr	r2, [fp, #-168]	; 0xffffff58
   1f110:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1f114:	ldr	r0, [fp, #-160]	; 0xffffff60
   1f118:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1f11c:	str	r0, [fp, #-164]	; 0xffffff5c
   1f120:	b	21378 <_start@@Base+0xecc0>
   1f124:	ldr	r2, [fp, #-168]	; 0xffffff58
   1f128:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1f12c:	ldr	r0, [fp, #-160]	; 0xffffff60
   1f130:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1f134:	str	r0, [fp, #-164]	; 0xffffff5c
   1f138:	b	21378 <_start@@Base+0xecc0>
   1f13c:	ldr	r2, [fp, #-168]	; 0xffffff58
   1f140:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1f144:	ldr	r0, [fp, #-160]	; 0xffffff60
   1f148:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1f14c:	str	r0, [fp, #-164]	; 0xffffff5c
   1f150:	b	21378 <_start@@Base+0xecc0>
   1f154:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1f158:	add	r3, pc, #456	; 0x1c8
   1f15c:	ldrd	r2, [r3]
   1f160:	cmp	r1, r3
   1f164:	cmpeq	r0, r2
   1f168:	bne	1f4d0 <_start@@Base+0xce18>
   1f16c:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1f170:	add	r3, r3, #8
   1f174:	str	r3, [fp, #-164]	; 0xffffff5c
   1f178:	ldr	r1, [fp, #-168]	; 0xffffff58
   1f17c:	ldr	r0, [fp, #-164]	; 0xffffff5c
   1f180:	bl	13928 <_start@@Base+0x1270>
   1f184:	strd	r0, [fp, #-36]	; 0xffffffdc
   1f188:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1f18c:	mov	r2, #0
   1f190:	mov	r3, #0
   1f194:	movt	r3, #65535	; 0xffff
   1f198:	and	ip, r0, r2
   1f19c:	str	ip, [fp, #-276]	; 0xfffffeec
   1f1a0:	and	r3, r1, r3
   1f1a4:	str	r3, [fp, #-272]	; 0xfffffef0
   1f1a8:	mov	r2, #0
   1f1ac:	mov	r3, #0
   1f1b0:	movt	r3, #26418	; 0x6732
   1f1b4:	sub	r1, fp, #276	; 0x114
   1f1b8:	ldrd	r0, [r1]
   1f1bc:	cmp	r1, r3
   1f1c0:	cmpeq	r0, r2
   1f1c4:	bne	1f348 <_start@@Base+0xcc90>
   1f1c8:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1f1cc:	str	r3, [fp, #-40]	; 0xffffffd8
   1f1d0:	mov	r3, #2
   1f1d4:	ldr	r2, [fp, #-168]	; 0xffffff58
   1f1d8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1f1dc:	ldr	r0, [fp, #-160]	; 0xffffff60
   1f1e0:	bl	13f3c <_start@@Base+0x1884>
   1f1e4:	str	r0, [fp, #-164]	; 0xffffff5c
   1f1e8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1f1ec:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1f1f0:	cmp	r2, r3
   1f1f4:	beq	1f300 <_start@@Base+0xcc48>
   1f1f8:	ldr	r3, [fp, #-160]	; 0xffffff60
   1f1fc:	ldr	r3, [r3]
   1f200:	mov	r0, r3
   1f204:	bl	29be4 <flatcc_builder_start_offset_vector@@Base>
   1f208:	mov	r3, r0
   1f20c:	cmp	r3, #0
   1f210:	bne	2153c <_start@@Base+0xee84>
   1f214:	sub	r3, fp, #52	; 0x34
   1f218:	ldr	r2, [fp, #-168]	; 0xffffff58
   1f21c:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1f220:	ldr	r0, [fp, #-160]	; 0xffffff60
   1f224:	bl	13cd4 <_start@@Base+0x161c>
   1f228:	str	r0, [fp, #-164]	; 0xffffff5c
   1f22c:	b	1f29c <_start@@Base+0xcbe4>
   1f230:	sub	r3, fp, #56	; 0x38
   1f234:	ldr	r2, [fp, #-168]	; 0xffffff58
   1f238:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1f23c:	ldr	r0, [fp, #-160]	; 0xffffff60
   1f240:	bl	35410 <flatcc_json_parser_build_string@@Base>
   1f244:	str	r0, [fp, #-164]	; 0xffffff5c
   1f248:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1f24c:	cmp	r3, #0
   1f250:	beq	21544 <_start@@Base+0xee8c>
   1f254:	ldr	r3, [fp, #-160]	; 0xffffff60
   1f258:	ldr	r3, [r3]
   1f25c:	mov	r1, #1
   1f260:	mov	r0, r3
   1f264:	bl	29428 <flatcc_builder_extend_offset_vector@@Base>
   1f268:	str	r0, [fp, #-44]	; 0xffffffd4
   1f26c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1f270:	cmp	r3, #0
   1f274:	beq	21544 <_start@@Base+0xee8c>
   1f278:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1f27c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1f280:	str	r2, [r3]
   1f284:	sub	r3, fp, #52	; 0x34
   1f288:	ldr	r2, [fp, #-168]	; 0xffffff58
   1f28c:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1f290:	ldr	r0, [fp, #-160]	; 0xffffff60
   1f294:	bl	13dc8 <_start@@Base+0x1710>
   1f298:	str	r0, [fp, #-164]	; 0xffffff5c
   1f29c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1f2a0:	cmp	r3, #0
   1f2a4:	bne	1f230 <_start@@Base+0xcb78>
   1f2a8:	ldr	r3, [fp, #-160]	; 0xffffff60
   1f2ac:	ldr	r3, [r3]
   1f2b0:	mov	r0, r3
   1f2b4:	bl	2b2ec <flatcc_builder_end_offset_vector@@Base>
   1f2b8:	mov	r3, r0
   1f2bc:	str	r3, [fp, #-56]	; 0xffffffc8
   1f2c0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1f2c4:	cmp	r3, #0
   1f2c8:	beq	2154c <_start@@Base+0xee94>
   1f2cc:	ldr	r3, [fp, #-160]	; 0xffffff60
   1f2d0:	ldr	r3, [r3]
   1f2d4:	mov	r1, #28
   1f2d8:	mov	r0, r3
   1f2dc:	bl	2c670 <flatcc_builder_table_add_offset@@Base>
   1f2e0:	str	r0, [fp, #-44]	; 0xffffffd4
   1f2e4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1f2e8:	cmp	r3, #0
   1f2ec:	beq	2154c <_start@@Base+0xee94>
   1f2f0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1f2f4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1f2f8:	str	r2, [r3]
   1f2fc:	b	21378 <_start@@Base+0xecc0>
   1f300:	ldr	r2, [fp, #-168]	; 0xffffff58
   1f304:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1f308:	ldr	r0, [fp, #-160]	; 0xffffff60
   1f30c:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1f310:	str	r0, [fp, #-164]	; 0xffffff5c
   1f314:	b	21378 <_start@@Base+0xecc0>
   1f318:	svcvs	0x00727465
   1f31c:	stmdbvc	pc!, {r0, r1, r4, r5, r6, r9, sl, sp, lr}^	; <UNPREDICTABLE>
   1f320:	strbvc	r7, [r3, #-1024]!	; 0xfffffc00
   1f324:	ldrbtvs	r7, [r3], #-1138	; 0xfffffb8e
   1f328:	ldrbtvc	r6, [r2], #-2414	; 0xfffff692
   1f32c:	stmdbvc	pc!, {r0, r1, r4, r5, r6, r9, sl, sp, lr}^	; <UNPREDICTABLE>
   1f330:	cmnvs	r2, r5, ror #24
   1f334:	stmdbvc	pc!, {r2, r4, r5, r6, r9, sl, sp, lr}^	; <UNPREDICTABLE>
   1f338:	strbvs	r7, [sp, #-115]!	; 0xffffff8d
   1f33c:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   1f340:	rsbvs	r7, r1, #-1811939327	; 0x94000001
   1f344:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   1f348:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1f34c:	mov	r2, #0
   1f350:	mov	r3, #-16777216	; 0xff000000
   1f354:	and	r8, r0, r2
   1f358:	and	r9, r1, r3
   1f35c:	cmp	r9, #1728053248	; 0x67000000
   1f360:	cmpeq	r8, #0
   1f364:	bne	1f4b8 <_start@@Base+0xce00>
   1f368:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1f36c:	str	r3, [fp, #-40]	; 0xffffffd8
   1f370:	mov	r3, #1
   1f374:	ldr	r2, [fp, #-168]	; 0xffffff58
   1f378:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1f37c:	ldr	r0, [fp, #-160]	; 0xffffff60
   1f380:	bl	13f3c <_start@@Base+0x1884>
   1f384:	str	r0, [fp, #-164]	; 0xffffff5c
   1f388:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1f38c:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1f390:	cmp	r2, r3
   1f394:	beq	1f4a0 <_start@@Base+0xcde8>
   1f398:	ldr	r3, [fp, #-160]	; 0xffffff60
   1f39c:	ldr	r3, [r3]
   1f3a0:	mov	r0, r3
   1f3a4:	bl	29be4 <flatcc_builder_start_offset_vector@@Base>
   1f3a8:	mov	r3, r0
   1f3ac:	cmp	r3, #0
   1f3b0:	bne	21554 <_start@@Base+0xee9c>
   1f3b4:	sub	r3, fp, #52	; 0x34
   1f3b8:	ldr	r2, [fp, #-168]	; 0xffffff58
   1f3bc:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1f3c0:	ldr	r0, [fp, #-160]	; 0xffffff60
   1f3c4:	bl	13cd4 <_start@@Base+0x161c>
   1f3c8:	str	r0, [fp, #-164]	; 0xffffff5c
   1f3cc:	b	1f43c <_start@@Base+0xcd84>
   1f3d0:	sub	r3, fp, #56	; 0x38
   1f3d4:	ldr	r2, [fp, #-168]	; 0xffffff58
   1f3d8:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1f3dc:	ldr	r0, [fp, #-160]	; 0xffffff60
   1f3e0:	bl	35410 <flatcc_json_parser_build_string@@Base>
   1f3e4:	str	r0, [fp, #-164]	; 0xffffff5c
   1f3e8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1f3ec:	cmp	r3, #0
   1f3f0:	beq	2155c <_start@@Base+0xeea4>
   1f3f4:	ldr	r3, [fp, #-160]	; 0xffffff60
   1f3f8:	ldr	r3, [r3]
   1f3fc:	mov	r1, #1
   1f400:	mov	r0, r3
   1f404:	bl	29428 <flatcc_builder_extend_offset_vector@@Base>
   1f408:	str	r0, [fp, #-44]	; 0xffffffd4
   1f40c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1f410:	cmp	r3, #0
   1f414:	beq	2155c <_start@@Base+0xeea4>
   1f418:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1f41c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1f420:	str	r2, [r3]
   1f424:	sub	r3, fp, #52	; 0x34
   1f428:	ldr	r2, [fp, #-168]	; 0xffffff58
   1f42c:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1f430:	ldr	r0, [fp, #-160]	; 0xffffff60
   1f434:	bl	13dc8 <_start@@Base+0x1710>
   1f438:	str	r0, [fp, #-164]	; 0xffffff5c
   1f43c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1f440:	cmp	r3, #0
   1f444:	bne	1f3d0 <_start@@Base+0xcd18>
   1f448:	ldr	r3, [fp, #-160]	; 0xffffff60
   1f44c:	ldr	r3, [r3]
   1f450:	mov	r0, r3
   1f454:	bl	2b2ec <flatcc_builder_end_offset_vector@@Base>
   1f458:	mov	r3, r0
   1f45c:	str	r3, [fp, #-56]	; 0xffffffc8
   1f460:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1f464:	cmp	r3, #0
   1f468:	beq	21564 <_start@@Base+0xeeac>
   1f46c:	ldr	r3, [fp, #-160]	; 0xffffff60
   1f470:	ldr	r3, [r3]
   1f474:	mov	r1, #10
   1f478:	mov	r0, r3
   1f47c:	bl	2c670 <flatcc_builder_table_add_offset@@Base>
   1f480:	str	r0, [fp, #-44]	; 0xffffffd4
   1f484:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1f488:	cmp	r3, #0
   1f48c:	beq	21564 <_start@@Base+0xeeac>
   1f490:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1f494:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1f498:	str	r2, [r3]
   1f49c:	b	21378 <_start@@Base+0xecc0>
   1f4a0:	ldr	r2, [fp, #-168]	; 0xffffff58
   1f4a4:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1f4a8:	ldr	r0, [fp, #-160]	; 0xffffff60
   1f4ac:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1f4b0:	str	r0, [fp, #-164]	; 0xffffff5c
   1f4b4:	b	21378 <_start@@Base+0xecc0>
   1f4b8:	ldr	r2, [fp, #-168]	; 0xffffff58
   1f4bc:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1f4c0:	ldr	r0, [fp, #-160]	; 0xffffff60
   1f4c4:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1f4c8:	str	r0, [fp, #-164]	; 0xffffff5c
   1f4cc:	b	21378 <_start@@Base+0xecc0>
   1f4d0:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1f4d4:	sub	r3, pc, #428	; 0x1ac
   1f4d8:	ldrd	r2, [r3]
   1f4dc:	cmp	r1, r3
   1f4e0:	cmpeq	r0, r2
   1f4e4:	bne	1f69c <_start@@Base+0xcfe4>
   1f4e8:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1f4ec:	add	r3, r3, #8
   1f4f0:	str	r3, [fp, #-164]	; 0xffffff5c
   1f4f4:	ldr	r1, [fp, #-168]	; 0xffffff58
   1f4f8:	ldr	r0, [fp, #-164]	; 0xffffff5c
   1f4fc:	bl	13928 <_start@@Base+0x1270>
   1f500:	strd	r0, [fp, #-36]	; 0xffffffdc
   1f504:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1f508:	mov	r2, #0
   1f50c:	mov	r3, #-16777216	; 0xff000000
   1f510:	and	ip, r0, r2
   1f514:	str	ip, [fp, #-284]	; 0xfffffee4
   1f518:	and	r3, r1, r3
   1f51c:	str	r3, [fp, #-280]	; 0xfffffee8
   1f520:	sub	r3, fp, #284	; 0x11c
   1f524:	ldrd	r2, [r3]
   1f528:	cmp	r3, #1929379840	; 0x73000000
   1f52c:	cmpeq	r2, #0
   1f530:	bne	1f684 <_start@@Base+0xcfcc>
   1f534:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1f538:	str	r3, [fp, #-40]	; 0xffffffd8
   1f53c:	mov	r3, #1
   1f540:	ldr	r2, [fp, #-168]	; 0xffffff58
   1f544:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1f548:	ldr	r0, [fp, #-160]	; 0xffffff60
   1f54c:	bl	13f3c <_start@@Base+0x1884>
   1f550:	str	r0, [fp, #-164]	; 0xffffff5c
   1f554:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1f558:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1f55c:	cmp	r2, r3
   1f560:	beq	1f66c <_start@@Base+0xcfb4>
   1f564:	ldr	r3, [fp, #-160]	; 0xffffff60
   1f568:	ldr	r3, [r3]
   1f56c:	mov	r0, r3
   1f570:	bl	29be4 <flatcc_builder_start_offset_vector@@Base>
   1f574:	mov	r3, r0
   1f578:	cmp	r3, #0
   1f57c:	bne	2156c <_start@@Base+0xeeb4>
   1f580:	sub	r3, fp, #52	; 0x34
   1f584:	ldr	r2, [fp, #-168]	; 0xffffff58
   1f588:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1f58c:	ldr	r0, [fp, #-160]	; 0xffffff60
   1f590:	bl	13cd4 <_start@@Base+0x161c>
   1f594:	str	r0, [fp, #-164]	; 0xffffff5c
   1f598:	b	1f608 <_start@@Base+0xcf50>
   1f59c:	sub	r3, fp, #56	; 0x38
   1f5a0:	ldr	r2, [fp, #-168]	; 0xffffff58
   1f5a4:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1f5a8:	ldr	r0, [fp, #-160]	; 0xffffff60
   1f5ac:	bl	1d9d0 <_start@@Base+0xb318>
   1f5b0:	str	r0, [fp, #-164]	; 0xffffff5c
   1f5b4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1f5b8:	cmp	r3, #0
   1f5bc:	beq	21574 <_start@@Base+0xeebc>
   1f5c0:	ldr	r3, [fp, #-160]	; 0xffffff60
   1f5c4:	ldr	r3, [r3]
   1f5c8:	mov	r1, #1
   1f5cc:	mov	r0, r3
   1f5d0:	bl	29428 <flatcc_builder_extend_offset_vector@@Base>
   1f5d4:	str	r0, [fp, #-44]	; 0xffffffd4
   1f5d8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1f5dc:	cmp	r3, #0
   1f5e0:	beq	21574 <_start@@Base+0xeebc>
   1f5e4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1f5e8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1f5ec:	str	r2, [r3]
   1f5f0:	sub	r3, fp, #52	; 0x34
   1f5f4:	ldr	r2, [fp, #-168]	; 0xffffff58
   1f5f8:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1f5fc:	ldr	r0, [fp, #-160]	; 0xffffff60
   1f600:	bl	13dc8 <_start@@Base+0x1710>
   1f604:	str	r0, [fp, #-164]	; 0xffffff5c
   1f608:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1f60c:	cmp	r3, #0
   1f610:	bne	1f59c <_start@@Base+0xcee4>
   1f614:	ldr	r3, [fp, #-160]	; 0xffffff60
   1f618:	ldr	r3, [r3]
   1f61c:	mov	r0, r3
   1f620:	bl	2b2ec <flatcc_builder_end_offset_vector@@Base>
   1f624:	mov	r3, r0
   1f628:	str	r3, [fp, #-56]	; 0xffffffc8
   1f62c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1f630:	cmp	r3, #0
   1f634:	beq	2157c <_start@@Base+0xeec4>
   1f638:	ldr	r3, [fp, #-160]	; 0xffffff60
   1f63c:	ldr	r3, [r3]
   1f640:	mov	r1, #11
   1f644:	mov	r0, r3
   1f648:	bl	2c670 <flatcc_builder_table_add_offset@@Base>
   1f64c:	str	r0, [fp, #-44]	; 0xffffffd4
   1f650:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1f654:	cmp	r3, #0
   1f658:	beq	2157c <_start@@Base+0xeec4>
   1f65c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1f660:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1f664:	str	r2, [r3]
   1f668:	b	21378 <_start@@Base+0xecc0>
   1f66c:	ldr	r2, [fp, #-168]	; 0xffffff58
   1f670:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1f674:	ldr	r0, [fp, #-160]	; 0xffffff60
   1f678:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1f67c:	str	r0, [fp, #-164]	; 0xffffff5c
   1f680:	b	21378 <_start@@Base+0xecc0>
   1f684:	ldr	r2, [fp, #-168]	; 0xffffff58
   1f688:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1f68c:	ldr	r0, [fp, #-160]	; 0xffffff60
   1f690:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1f694:	str	r0, [fp, #-164]	; 0xffffff5c
   1f698:	b	21378 <_start@@Base+0xecc0>
   1f69c:	ldr	r2, [fp, #-168]	; 0xffffff58
   1f6a0:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1f6a4:	ldr	r0, [fp, #-160]	; 0xffffff60
   1f6a8:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1f6ac:	str	r0, [fp, #-164]	; 0xffffff5c
   1f6b0:	b	21378 <_start@@Base+0xecc0>
   1f6b4:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1f6b8:	sub	r3, pc, #904	; 0x388
   1f6bc:	ldrd	r2, [r3]
   1f6c0:	cmp	r1, r3
   1f6c4:	cmpeq	r0, r2
   1f6c8:	bhi	1f950 <_start@@Base+0xd298>
   1f6cc:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1f6d0:	sub	r3, pc, #920	; 0x398
   1f6d4:	ldrd	r2, [r3]
   1f6d8:	cmp	r1, r3
   1f6dc:	cmpeq	r0, r2
   1f6e0:	bne	1f7f8 <_start@@Base+0xd140>
   1f6e4:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1f6e8:	add	r3, r3, #8
   1f6ec:	str	r3, [fp, #-164]	; 0xffffff5c
   1f6f0:	ldr	r1, [fp, #-168]	; 0xffffff58
   1f6f4:	ldr	r0, [fp, #-164]	; 0xffffff5c
   1f6f8:	bl	13928 <_start@@Base+0x1270>
   1f6fc:	strd	r0, [fp, #-36]	; 0xffffffdc
   1f700:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1f704:	mov	r2, #0
   1f708:	mov	r3, #0
   1f70c:	movt	r3, #65535	; 0xffff
   1f710:	and	ip, r0, r2
   1f714:	str	ip, [fp, #-292]	; 0xfffffedc
   1f718:	and	r3, r1, r3
   1f71c:	str	r3, [fp, #-288]	; 0xfffffee0
   1f720:	mov	r2, #0
   1f724:	mov	r3, #0
   1f728:	movt	r3, #13876	; 0x3634
   1f72c:	sub	r1, fp, #292	; 0x124
   1f730:	ldrd	r0, [r1]
   1f734:	cmp	r1, r3
   1f738:	cmpeq	r0, r2
   1f73c:	bne	1f7e0 <_start@@Base+0xd128>
   1f740:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1f744:	str	r3, [fp, #-40]	; 0xffffffd8
   1f748:	mov	r3, #2
   1f74c:	ldr	r2, [fp, #-168]	; 0xffffff58
   1f750:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1f754:	ldr	r0, [fp, #-160]	; 0xffffff60
   1f758:	bl	13f3c <_start@@Base+0x1884>
   1f75c:	str	r0, [fp, #-164]	; 0xffffff5c
   1f760:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1f764:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1f768:	cmp	r2, r3
   1f76c:	beq	1f7c8 <_start@@Base+0xd110>
   1f770:	sub	r3, fp, #56	; 0x38
   1f774:	ldr	r2, [fp, #-168]	; 0xffffff58
   1f778:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1f77c:	ldr	r0, [fp, #-160]	; 0xffffff60
   1f780:	bl	1d588 <_start@@Base+0xaed0>
   1f784:	str	r0, [fp, #-164]	; 0xffffff5c
   1f788:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1f78c:	cmp	r3, #0
   1f790:	beq	21584 <_start@@Base+0xeecc>
   1f794:	ldr	r3, [fp, #-160]	; 0xffffff60
   1f798:	ldr	r3, [r3]
   1f79c:	mov	r1, #35	; 0x23
   1f7a0:	mov	r0, r3
   1f7a4:	bl	2c670 <flatcc_builder_table_add_offset@@Base>
   1f7a8:	str	r0, [fp, #-44]	; 0xffffffd4
   1f7ac:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1f7b0:	cmp	r3, #0
   1f7b4:	beq	21584 <_start@@Base+0xeecc>
   1f7b8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1f7bc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1f7c0:	str	r2, [r3]
   1f7c4:	b	21378 <_start@@Base+0xecc0>
   1f7c8:	ldr	r2, [fp, #-168]	; 0xffffff58
   1f7cc:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1f7d0:	ldr	r0, [fp, #-160]	; 0xffffff60
   1f7d4:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1f7d8:	str	r0, [fp, #-164]	; 0xffffff5c
   1f7dc:	b	21378 <_start@@Base+0xecc0>
   1f7e0:	ldr	r2, [fp, #-168]	; 0xffffff58
   1f7e4:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1f7e8:	ldr	r0, [fp, #-160]	; 0xffffff60
   1f7ec:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1f7f0:	str	r0, [fp, #-164]	; 0xffffff5c
   1f7f4:	b	21378 <_start@@Base+0xecc0>
   1f7f8:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1f7fc:	add	r3, pc, #1004	; 0x3ec
   1f800:	ldrd	r2, [r3]
   1f804:	cmp	r1, r3
   1f808:	cmpeq	r0, r2
   1f80c:	bne	1f938 <_start@@Base+0xd280>
   1f810:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1f814:	str	r3, [fp, #-40]	; 0xffffffd8
   1f818:	mov	r3, #8
   1f81c:	ldr	r2, [fp, #-168]	; 0xffffff58
   1f820:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1f824:	ldr	r0, [fp, #-160]	; 0xffffff60
   1f828:	bl	13f3c <_start@@Base+0x1884>
   1f82c:	str	r0, [fp, #-164]	; 0xffffff5c
   1f830:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1f834:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1f838:	cmp	r2, r3
   1f83c:	beq	1f920 <_start@@Base+0xd268>
   1f840:	mov	r3, #0
   1f844:	strb	r3, [fp, #-70]	; 0xffffffba
   1f848:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1f84c:	str	r3, [fp, #-40]	; 0xffffffd8
   1f850:	sub	r3, fp, #70	; 0x46
   1f854:	ldr	r2, [fp, #-168]	; 0xffffff58
   1f858:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1f85c:	ldr	r0, [fp, #-160]	; 0xffffff60
   1f860:	bl	14ee0 <_start@@Base+0x2828>
   1f864:	str	r0, [fp, #-164]	; 0xffffff5c
   1f868:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1f86c:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1f870:	cmp	r2, r3
   1f874:	bne	1f8c4 <_start@@Base+0xd20c>
   1f878:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1f87c:	str	r3, [fp, #-40]	; 0xffffffd8
   1f880:	sub	r3, fp, #70	; 0x46
   1f884:	str	r3, [sp]
   1f888:	ldr	r3, [pc, #900]	; 1fc14 <_start@@Base+0xd55c>
   1f88c:	add	r3, pc, r3
   1f890:	ldr	r2, [fp, #-168]	; 0xffffff58
   1f894:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1f898:	ldr	r0, [fp, #-160]	; 0xffffff60
   1f89c:	bl	15f50 <_start@@Base+0x3898>
   1f8a0:	str	r0, [fp, #-164]	; 0xffffff5c
   1f8a4:	ldr	r2, [fp, #-164]	; 0xffffff5c
   1f8a8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1f8ac:	cmp	r2, r3
   1f8b0:	beq	2158c <_start@@Base+0xeed4>
   1f8b4:	ldr	r2, [fp, #-164]	; 0xffffff5c
   1f8b8:	ldr	r3, [fp, #-168]	; 0xffffff58
   1f8bc:	cmp	r2, r3
   1f8c0:	beq	2158c <_start@@Base+0xeed4>
   1f8c4:	ldrb	r3, [fp, #-70]	; 0xffffffba
   1f8c8:	cmp	r3, #1
   1f8cc:	bne	1f8e4 <_start@@Base+0xd22c>
   1f8d0:	ldr	r3, [fp, #-160]	; 0xffffff60
   1f8d4:	ldr	r3, [r3, #8]
   1f8d8:	and	r3, r3, #2
   1f8dc:	cmp	r3, #0
   1f8e0:	beq	21378 <_start@@Base+0xecc0>
   1f8e4:	ldr	r3, [fp, #-160]	; 0xffffff60
   1f8e8:	ldr	r0, [r3]
   1f8ec:	mov	r3, #1
   1f8f0:	mov	r2, #1
   1f8f4:	mov	r1, #15
   1f8f8:	bl	2c400 <flatcc_builder_table_add@@Base>
   1f8fc:	str	r0, [fp, #-48]	; 0xffffffd0
   1f900:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1f904:	cmp	r3, #0
   1f908:	beq	21594 <_start@@Base+0xeedc>
   1f90c:	ldrb	r3, [fp, #-70]	; 0xffffffba
   1f910:	mov	r1, r3
   1f914:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1f918:	bl	12de0 <_start@@Base+0x728>
   1f91c:	b	21378 <_start@@Base+0xecc0>
   1f920:	ldr	r2, [fp, #-168]	; 0xffffff58
   1f924:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1f928:	ldr	r0, [fp, #-160]	; 0xffffff60
   1f92c:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1f930:	str	r0, [fp, #-164]	; 0xffffff5c
   1f934:	b	21378 <_start@@Base+0xecc0>
   1f938:	ldr	r2, [fp, #-168]	; 0xffffff58
   1f93c:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1f940:	ldr	r0, [fp, #-160]	; 0xffffff60
   1f944:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1f948:	str	r0, [fp, #-164]	; 0xffffff5c
   1f94c:	b	21378 <_start@@Base+0xecc0>
   1f950:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1f954:	add	r3, pc, #668	; 0x29c
   1f958:	ldrd	r2, [r3]
   1f95c:	cmp	r1, r3
   1f960:	cmpeq	r0, r2
   1f964:	bhi	1fa9c <_start@@Base+0xd3e4>
   1f968:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1f96c:	add	r3, pc, #652	; 0x28c
   1f970:	ldrd	r2, [r3]
   1f974:	cmp	r1, r3
   1f978:	cmpeq	r0, r2
   1f97c:	bne	1fa84 <_start@@Base+0xd3cc>
   1f980:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1f984:	add	r3, r3, #8
   1f988:	str	r3, [fp, #-164]	; 0xffffff5c
   1f98c:	ldr	r1, [fp, #-168]	; 0xffffff58
   1f990:	ldr	r0, [fp, #-164]	; 0xffffff5c
   1f994:	bl	13928 <_start@@Base+0x1270>
   1f998:	strd	r0, [fp, #-36]	; 0xffffffdc
   1f99c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1f9a0:	mov	r2, #0
   1f9a4:	mov	r3, #-16777216	; 0xff000000
   1f9a8:	and	ip, r0, r2
   1f9ac:	str	ip, [fp, #-300]	; 0xfffffed4
   1f9b0:	and	r3, r1, r3
   1f9b4:	str	r3, [fp, #-296]	; 0xfffffed8
   1f9b8:	sub	r3, fp, #300	; 0x12c
   1f9bc:	ldrd	r2, [r3]
   1f9c0:	cmp	r3, #2030043136	; 0x79000000
   1f9c4:	cmpeq	r2, #0
   1f9c8:	bne	1fa6c <_start@@Base+0xd3b4>
   1f9cc:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1f9d0:	str	r3, [fp, #-40]	; 0xffffffd8
   1f9d4:	mov	r3, #1
   1f9d8:	ldr	r2, [fp, #-168]	; 0xffffff58
   1f9dc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1f9e0:	ldr	r0, [fp, #-160]	; 0xffffff60
   1f9e4:	bl	13f3c <_start@@Base+0x1884>
   1f9e8:	str	r0, [fp, #-164]	; 0xffffff5c
   1f9ec:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1f9f0:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1f9f4:	cmp	r2, r3
   1f9f8:	beq	1fa54 <_start@@Base+0xd39c>
   1f9fc:	sub	r3, fp, #56	; 0x38
   1fa00:	ldr	r2, [fp, #-168]	; 0xffffff58
   1fa04:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1fa08:	ldr	r0, [fp, #-160]	; 0xffffff60
   1fa0c:	bl	1b060 <_start@@Base+0x89a8>
   1fa10:	str	r0, [fp, #-164]	; 0xffffff5c
   1fa14:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1fa18:	cmp	r3, #0
   1fa1c:	beq	2159c <_start@@Base+0xeee4>
   1fa20:	ldr	r3, [fp, #-160]	; 0xffffff60
   1fa24:	ldr	r3, [r3]
   1fa28:	mov	r1, #14
   1fa2c:	mov	r0, r3
   1fa30:	bl	2c670 <flatcc_builder_table_add_offset@@Base>
   1fa34:	str	r0, [fp, #-44]	; 0xffffffd4
   1fa38:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1fa3c:	cmp	r3, #0
   1fa40:	beq	2159c <_start@@Base+0xeee4>
   1fa44:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1fa48:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1fa4c:	str	r2, [r3]
   1fa50:	b	21378 <_start@@Base+0xecc0>
   1fa54:	ldr	r2, [fp, #-168]	; 0xffffff58
   1fa58:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1fa5c:	ldr	r0, [fp, #-160]	; 0xffffff60
   1fa60:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1fa64:	str	r0, [fp, #-164]	; 0xffffff5c
   1fa68:	b	21378 <_start@@Base+0xecc0>
   1fa6c:	ldr	r2, [fp, #-168]	; 0xffffff58
   1fa70:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1fa74:	ldr	r0, [fp, #-160]	; 0xffffff60
   1fa78:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1fa7c:	str	r0, [fp, #-164]	; 0xffffff5c
   1fa80:	b	21378 <_start@@Base+0xecc0>
   1fa84:	ldr	r2, [fp, #-168]	; 0xffffff58
   1fa88:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1fa8c:	ldr	r0, [fp, #-160]	; 0xffffff60
   1fa90:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1fa94:	str	r0, [fp, #-164]	; 0xffffff5c
   1fa98:	b	21378 <_start@@Base+0xecc0>
   1fa9c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1faa0:	mov	r2, #0
   1faa4:	movt	r2, #65535	; 0xffff
   1faa8:	mvn	r3, #0
   1faac:	and	ip, r0, r2
   1fab0:	str	ip, [fp, #-308]	; 0xfffffecc
   1fab4:	and	r3, r1, r3
   1fab8:	str	r3, [fp, #-304]	; 0xfffffed0
   1fabc:	add	r3, pc, #324	; 0x144
   1fac0:	ldrd	r2, [r3]
   1fac4:	sub	r1, fp, #308	; 0x134
   1fac8:	ldrd	r0, [r1]
   1facc:	cmp	r1, r3
   1fad0:	cmpeq	r0, r2
   1fad4:	bne	1fc34 <_start@@Base+0xd57c>
   1fad8:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1fadc:	str	r3, [fp, #-40]	; 0xffffffd8
   1fae0:	mov	r3, #6
   1fae4:	ldr	r2, [fp, #-168]	; 0xffffff58
   1fae8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1faec:	ldr	r0, [fp, #-160]	; 0xffffff60
   1faf0:	bl	13f3c <_start@@Base+0x1884>
   1faf4:	str	r0, [fp, #-164]	; 0xffffff5c
   1faf8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1fafc:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1fb00:	cmp	r2, r3
   1fb04:	beq	1fc1c <_start@@Base+0xd564>
   1fb08:	mov	r3, #0
   1fb0c:	str	r3, [fp, #-76]	; 0xffffffb4
   1fb10:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1fb14:	str	r3, [fp, #-40]	; 0xffffffd8
   1fb18:	sub	r3, fp, #76	; 0x4c
   1fb1c:	ldr	r2, [fp, #-168]	; 0xffffff58
   1fb20:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1fb24:	ldr	r0, [fp, #-160]	; 0xffffff60
   1fb28:	bl	34938 <flatcc_json_parser_float@@Base>
   1fb2c:	str	r0, [fp, #-164]	; 0xffffff5c
   1fb30:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1fb34:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1fb38:	cmp	r2, r3
   1fb3c:	bne	1fb8c <_start@@Base+0xd4d4>
   1fb40:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1fb44:	str	r3, [fp, #-40]	; 0xffffffd8
   1fb48:	sub	r3, fp, #76	; 0x4c
   1fb4c:	str	r3, [sp]
   1fb50:	ldr	r3, [pc, #192]	; 1fc18 <_start@@Base+0xd560>
   1fb54:	add	r3, pc, r3
   1fb58:	ldr	r2, [fp, #-168]	; 0xffffff58
   1fb5c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1fb60:	ldr	r0, [fp, #-160]	; 0xffffff60
   1fb64:	bl	16134 <_start@@Base+0x3a7c>
   1fb68:	str	r0, [fp, #-164]	; 0xffffff5c
   1fb6c:	ldr	r2, [fp, #-164]	; 0xffffff5c
   1fb70:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1fb74:	cmp	r2, r3
   1fb78:	beq	215a4 <_start@@Base+0xeeec>
   1fb7c:	ldr	r2, [fp, #-164]	; 0xffffff5c
   1fb80:	ldr	r3, [fp, #-168]	; 0xffffff58
   1fb84:	cmp	r2, r3
   1fb88:	beq	215a4 <_start@@Base+0xeeec>
   1fb8c:	vldr	s15, [fp, #-76]	; 0xffffffb4
   1fb90:	vldr	s14, [pc, #120]	; 1fc10 <_start@@Base+0xd558>
   1fb94:	vcmp.f32	s15, s14
   1fb98:	vmrs	APSR_nzcv, fpscr
   1fb9c:	bne	1fbb4 <_start@@Base+0xd4fc>
   1fba0:	ldr	r3, [fp, #-160]	; 0xffffff60
   1fba4:	ldr	r3, [r3, #8]
   1fba8:	and	r3, r3, #2
   1fbac:	cmp	r3, #0
   1fbb0:	beq	21378 <_start@@Base+0xecc0>
   1fbb4:	ldr	r3, [fp, #-160]	; 0xffffff60
   1fbb8:	ldr	r0, [r3]
   1fbbc:	mov	r3, #4
   1fbc0:	mov	r2, #4
   1fbc4:	mov	r1, #26
   1fbc8:	bl	2c400 <flatcc_builder_table_add@@Base>
   1fbcc:	str	r0, [fp, #-48]	; 0xffffffd0
   1fbd0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1fbd4:	cmp	r3, #0
   1fbd8:	beq	215ac <_start@@Base+0xeef4>
   1fbdc:	vldr	s15, [fp, #-76]	; 0xffffffb4
   1fbe0:	vmov.f32	s0, s15
   1fbe4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1fbe8:	bl	12c8c <_start@@Base+0x5d4>
   1fbec:	b	21378 <_start@@Base+0xecc0>
   1fbf0:	rsbvs	r6, pc, #108, 30	; 0x1b0
   1fbf4:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   1fbf8:	ldrbvs	pc, [pc, #4095]!	; 20bff <_start@@Base+0xe547>	; <UNPREDICTABLE>
   1fbfc:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   1fc00:	strbvs	r7, [sp, #-116]!	; 0xffffff8c
   1fc04:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   1fc08:	ldrtvs	r0, [r2], -r0
   1fc0c:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   1fc10:	submi	r0, r0, r0
   1fc14:	strdeq	r9, [r2], -ip
   1fc18:	andeq	r9, r2, r0, asr #14
   1fc1c:	ldr	r2, [fp, #-168]	; 0xffffff58
   1fc20:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1fc24:	ldr	r0, [fp, #-160]	; 0xffffff60
   1fc28:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1fc2c:	str	r0, [fp, #-164]	; 0xffffff5c
   1fc30:	b	21378 <_start@@Base+0xecc0>
   1fc34:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1fc38:	mov	r2, #-16777216	; 0xff000000
   1fc3c:	mvn	r3, #0
   1fc40:	and	ip, r0, r2
   1fc44:	str	ip, [fp, #-316]	; 0xfffffec4
   1fc48:	and	r3, r1, r3
   1fc4c:	str	r3, [fp, #-312]	; 0xfffffec8
   1fc50:	add	r3, pc, #760	; 0x2f8
   1fc54:	ldrd	r2, [r3]
   1fc58:	sub	r1, fp, #316	; 0x13c
   1fc5c:	ldrd	r0, [r1]
   1fc60:	cmp	r1, r3
   1fc64:	cmpeq	r0, r2
   1fc68:	bne	1fd9c <_start@@Base+0xd6e4>
   1fc6c:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1fc70:	str	r3, [fp, #-40]	; 0xffffffd8
   1fc74:	mov	r3, #5
   1fc78:	ldr	r2, [fp, #-168]	; 0xffffff58
   1fc7c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1fc80:	ldr	r0, [fp, #-160]	; 0xffffff60
   1fc84:	bl	13f3c <_start@@Base+0x1884>
   1fc88:	str	r0, [fp, #-164]	; 0xffffff5c
   1fc8c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1fc90:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1fc94:	cmp	r2, r3
   1fc98:	beq	1fd84 <_start@@Base+0xd6cc>
   1fc9c:	mov	r3, #0
   1fca0:	str	r3, [fp, #-80]	; 0xffffffb0
   1fca4:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1fca8:	str	r3, [fp, #-40]	; 0xffffffd8
   1fcac:	sub	r3, fp, #80	; 0x50
   1fcb0:	ldr	r2, [fp, #-168]	; 0xffffff58
   1fcb4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1fcb8:	ldr	r0, [fp, #-160]	; 0xffffff60
   1fcbc:	bl	34938 <flatcc_json_parser_float@@Base>
   1fcc0:	str	r0, [fp, #-164]	; 0xffffff5c
   1fcc4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1fcc8:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1fccc:	cmp	r2, r3
   1fcd0:	bne	1fd20 <_start@@Base+0xd668>
   1fcd4:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1fcd8:	str	r3, [fp, #-40]	; 0xffffffd8
   1fcdc:	sub	r3, fp, #80	; 0x50
   1fce0:	str	r3, [sp]
   1fce4:	ldr	r3, [pc, #640]	; 1ff6c <_start@@Base+0xd8b4>
   1fce8:	add	r3, pc, r3
   1fcec:	ldr	r2, [fp, #-168]	; 0xffffff58
   1fcf0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1fcf4:	ldr	r0, [fp, #-160]	; 0xffffff60
   1fcf8:	bl	16134 <_start@@Base+0x3a7c>
   1fcfc:	str	r0, [fp, #-164]	; 0xffffff5c
   1fd00:	ldr	r2, [fp, #-164]	; 0xffffff5c
   1fd04:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1fd08:	cmp	r2, r3
   1fd0c:	beq	215b4 <_start@@Base+0xeefc>
   1fd10:	ldr	r2, [fp, #-164]	; 0xffffff5c
   1fd14:	ldr	r3, [fp, #-168]	; 0xffffff58
   1fd18:	cmp	r2, r3
   1fd1c:	beq	215b4 <_start@@Base+0xeefc>
   1fd20:	vldr	s15, [fp, #-80]	; 0xffffffb0
   1fd24:	vldr	s14, [pc, #572]	; 1ff68 <_start@@Base+0xd8b0>
   1fd28:	vcmp.f32	s15, s14
   1fd2c:	vmrs	APSR_nzcv, fpscr
   1fd30:	bne	1fd48 <_start@@Base+0xd690>
   1fd34:	ldr	r3, [fp, #-160]	; 0xffffff60
   1fd38:	ldr	r3, [r3, #8]
   1fd3c:	and	r3, r3, #2
   1fd40:	cmp	r3, #0
   1fd44:	beq	21378 <_start@@Base+0xecc0>
   1fd48:	ldr	r3, [fp, #-160]	; 0xffffff60
   1fd4c:	ldr	r0, [r3]
   1fd50:	mov	r3, #4
   1fd54:	mov	r2, #4
   1fd58:	mov	r1, #25
   1fd5c:	bl	2c400 <flatcc_builder_table_add@@Base>
   1fd60:	str	r0, [fp, #-48]	; 0xffffffd0
   1fd64:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1fd68:	cmp	r3, #0
   1fd6c:	beq	215bc <_start@@Base+0xef04>
   1fd70:	vldr	s15, [fp, #-80]	; 0xffffffb0
   1fd74:	vmov.f32	s0, s15
   1fd78:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1fd7c:	bl	12c8c <_start@@Base+0x5d4>
   1fd80:	b	21378 <_start@@Base+0xecc0>
   1fd84:	ldr	r2, [fp, #-168]	; 0xffffff58
   1fd88:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1fd8c:	ldr	r0, [fp, #-160]	; 0xffffff60
   1fd90:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1fd94:	str	r0, [fp, #-164]	; 0xffffff5c
   1fd98:	b	21378 <_start@@Base+0xecc0>
   1fd9c:	ldr	r2, [fp, #-168]	; 0xffffff58
   1fda0:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1fda4:	ldr	r0, [fp, #-160]	; 0xffffff60
   1fda8:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1fdac:	str	r0, [fp, #-164]	; 0xffffff5c
   1fdb0:	b	21378 <_start@@Base+0xecc0>
   1fdb4:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1fdb8:	add	r3, pc, #408	; 0x198
   1fdbc:	ldrd	r2, [r3]
   1fdc0:	cmp	r1, r3
   1fdc4:	cmpeq	r0, r2
   1fdc8:	bhi	1ff74 <_start@@Base+0xd8bc>
   1fdcc:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1fdd0:	mov	r2, #0
   1fdd4:	movt	r2, #65535	; 0xffff
   1fdd8:	mvn	r3, #0
   1fddc:	and	ip, r0, r2
   1fde0:	str	ip, [fp, #-324]	; 0xfffffebc
   1fde4:	and	r3, r1, r3
   1fde8:	str	r3, [fp, #-320]	; 0xfffffec0
   1fdec:	add	r3, pc, #364	; 0x16c
   1fdf0:	ldrd	r2, [r3]
   1fdf4:	sub	r1, fp, #324	; 0x144
   1fdf8:	ldrd	r0, [r1]
   1fdfc:	cmp	r1, r3
   1fe00:	cmpeq	r0, r2
   1fe04:	bne	1ff34 <_start@@Base+0xd87c>
   1fe08:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1fe0c:	str	r3, [fp, #-40]	; 0xffffffd8
   1fe10:	mov	r3, #6
   1fe14:	ldr	r2, [fp, #-168]	; 0xffffff58
   1fe18:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1fe1c:	ldr	r0, [fp, #-160]	; 0xffffff60
   1fe20:	bl	13f3c <_start@@Base+0x1884>
   1fe24:	str	r0, [fp, #-164]	; 0xffffff5c
   1fe28:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1fe2c:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1fe30:	cmp	r2, r3
   1fe34:	beq	1ff1c <_start@@Base+0xd864>
   1fe38:	mov	r3, #0
   1fe3c:	str	r3, [fp, #-84]	; 0xffffffac
   1fe40:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1fe44:	str	r3, [fp, #-40]	; 0xffffffd8
   1fe48:	sub	r3, fp, #84	; 0x54
   1fe4c:	ldr	r2, [fp, #-168]	; 0xffffff58
   1fe50:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1fe54:	ldr	r0, [fp, #-160]	; 0xffffff60
   1fe58:	bl	34938 <flatcc_json_parser_float@@Base>
   1fe5c:	str	r0, [fp, #-164]	; 0xffffff5c
   1fe60:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1fe64:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1fe68:	cmp	r2, r3
   1fe6c:	bne	1febc <_start@@Base+0xd804>
   1fe70:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1fe74:	str	r3, [fp, #-40]	; 0xffffffd8
   1fe78:	sub	r3, fp, #84	; 0x54
   1fe7c:	str	r3, [sp]
   1fe80:	ldr	r3, [pc, #232]	; 1ff70 <_start@@Base+0xd8b8>
   1fe84:	add	r3, pc, r3
   1fe88:	ldr	r2, [fp, #-168]	; 0xffffff58
   1fe8c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1fe90:	ldr	r0, [fp, #-160]	; 0xffffff60
   1fe94:	bl	16134 <_start@@Base+0x3a7c>
   1fe98:	str	r0, [fp, #-164]	; 0xffffff5c
   1fe9c:	ldr	r2, [fp, #-164]	; 0xffffff5c
   1fea0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1fea4:	cmp	r2, r3
   1fea8:	beq	215c4 <_start@@Base+0xef0c>
   1feac:	ldr	r2, [fp, #-164]	; 0xffffff5c
   1feb0:	ldr	r3, [fp, #-168]	; 0xffffff58
   1feb4:	cmp	r2, r3
   1feb8:	beq	215c4 <_start@@Base+0xef0c>
   1febc:	vldr	s15, [fp, #-84]	; 0xffffffac
   1fec0:	vcmp.f32	s15, #0.0
   1fec4:	vmrs	APSR_nzcv, fpscr
   1fec8:	bne	1fee0 <_start@@Base+0xd828>
   1fecc:	ldr	r3, [fp, #-160]	; 0xffffff60
   1fed0:	ldr	r3, [r3, #8]
   1fed4:	and	r3, r3, #2
   1fed8:	cmp	r3, #0
   1fedc:	beq	21378 <_start@@Base+0xecc0>
   1fee0:	ldr	r3, [fp, #-160]	; 0xffffff60
   1fee4:	ldr	r0, [r3]
   1fee8:	mov	r3, #4
   1feec:	mov	r2, #4
   1fef0:	mov	r1, #27
   1fef4:	bl	2c400 <flatcc_builder_table_add@@Base>
   1fef8:	str	r0, [fp, #-48]	; 0xffffffd0
   1fefc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1ff00:	cmp	r3, #0
   1ff04:	beq	215cc <_start@@Base+0xef14>
   1ff08:	vldr	s15, [fp, #-84]	; 0xffffffac
   1ff0c:	vmov.f32	s0, s15
   1ff10:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1ff14:	bl	12c8c <_start@@Base+0x5d4>
   1ff18:	b	21378 <_start@@Base+0xecc0>
   1ff1c:	ldr	r2, [fp, #-168]	; 0xffffff58
   1ff20:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1ff24:	ldr	r0, [fp, #-160]	; 0xffffff60
   1ff28:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1ff2c:	str	r0, [fp, #-164]	; 0xffffff5c
   1ff30:	b	21378 <_start@@Base+0xecc0>
   1ff34:	ldr	r2, [fp, #-168]	; 0xffffff58
   1ff38:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1ff3c:	ldr	r0, [fp, #-160]	; 0xffffff60
   1ff40:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   1ff44:	str	r0, [fp, #-164]	; 0xffffff5c
   1ff48:	b	21378 <_start@@Base+0xecc0>
   1ff4c:	nop	{0}
   1ff50:	strvs	r0, [r0], -r0
   1ff54:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   1ff58:	stmdavs	r1!, {r0, r1, r2, r5, r6, r8, r9, ip, sp, lr}^
   1ff5c:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   1ff60:	ldrtvs	r0, [r3], -r0
   1ff64:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   1ff68:	ldmmi	r9, {r5, r6, r7, r8, sl, sp, lr}
   1ff6c:			; <UNDEFINED> instruction: 0x000295b8
   1ff70:	andeq	r9, r2, r8, lsr #8
   1ff74:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1ff78:	add	r3, pc, #784	; 0x310
   1ff7c:	ldrd	r2, [r3]
   1ff80:	cmp	r1, r3
   1ff84:	cmpeq	r0, r2
   1ff88:	bne	20b54 <_start@@Base+0xe49c>
   1ff8c:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1ff90:	add	r3, r3, #8
   1ff94:	str	r3, [fp, #-164]	; 0xffffff5c
   1ff98:	ldr	r1, [fp, #-168]	; 0xffffff58
   1ff9c:	ldr	r0, [fp, #-164]	; 0xffffff5c
   1ffa0:	bl	13928 <_start@@Base+0x1270>
   1ffa4:	strd	r0, [fp, #-36]	; 0xffffffdc
   1ffa8:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1ffac:	add	r3, pc, #740	; 0x2e4
   1ffb0:	ldrd	r2, [r3]
   1ffb4:	cmp	r1, r3
   1ffb8:	cmpeq	r0, r2
   1ffbc:	bhi	202b0 <_start@@Base+0xdbf8>
   1ffc0:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1ffc4:	add	r3, pc, #724	; 0x2d4
   1ffc8:	ldrd	r2, [r3]
   1ffcc:	cmp	r1, r3
   1ffd0:	cmpeq	r0, r2
   1ffd4:	bne	20274 <_start@@Base+0xdbbc>
   1ffd8:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1ffdc:	str	r3, [fp, #-40]	; 0xffffffd8
   1ffe0:	mov	r3, #8
   1ffe4:	ldr	r2, [fp, #-168]	; 0xffffff58
   1ffe8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1ffec:	ldr	r0, [fp, #-160]	; 0xffffff60
   1fff0:	bl	13f3c <_start@@Base+0x1884>
   1fff4:	str	r0, [fp, #-164]	; 0xffffff5c
   1fff8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1fffc:	ldr	r3, [fp, #-164]	; 0xffffff5c
   20000:	cmp	r2, r3
   20004:	beq	200e8 <_start@@Base+0xda30>
   20008:	mov	r3, #0
   2000c:	str	r3, [fp, #-88]	; 0xffffffa8
   20010:	ldr	r3, [fp, #-164]	; 0xffffff5c
   20014:	str	r3, [fp, #-40]	; 0xffffffd8
   20018:	sub	r3, fp, #88	; 0x58
   2001c:	ldr	r2, [fp, #-168]	; 0xffffff58
   20020:	ldr	r1, [fp, #-40]	; 0xffffffd8
   20024:	ldr	r0, [fp, #-160]	; 0xffffff60
   20028:	bl	14c4c <_start@@Base+0x2594>
   2002c:	str	r0, [fp, #-164]	; 0xffffff5c
   20030:	ldr	r2, [fp, #-40]	; 0xffffffd8
   20034:	ldr	r3, [fp, #-164]	; 0xffffff5c
   20038:	cmp	r2, r3
   2003c:	bne	2008c <_start@@Base+0xd9d4>
   20040:	ldr	r3, [fp, #-164]	; 0xffffff5c
   20044:	str	r3, [fp, #-40]	; 0xffffffd8
   20048:	sub	r3, fp, #88	; 0x58
   2004c:	str	r3, [sp]
   20050:	ldr	r3, [pc, #592]	; 202a8 <_start@@Base+0xdbf0>
   20054:	add	r3, pc, r3
   20058:	ldr	r2, [fp, #-168]	; 0xffffff58
   2005c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   20060:	ldr	r0, [fp, #-160]	; 0xffffff60
   20064:	bl	15990 <_start@@Base+0x32d8>
   20068:	str	r0, [fp, #-164]	; 0xffffff5c
   2006c:	ldr	r2, [fp, #-164]	; 0xffffff5c
   20070:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20074:	cmp	r2, r3
   20078:	beq	215d4 <_start@@Base+0xef1c>
   2007c:	ldr	r2, [fp, #-164]	; 0xffffff5c
   20080:	ldr	r3, [fp, #-168]	; 0xffffff58
   20084:	cmp	r2, r3
   20088:	beq	215d4 <_start@@Base+0xef1c>
   2008c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   20090:	cmp	r3, #0
   20094:	bne	200ac <_start@@Base+0xd9f4>
   20098:	ldr	r3, [fp, #-160]	; 0xffffff60
   2009c:	ldr	r3, [r3, #8]
   200a0:	and	r3, r3, #2
   200a4:	cmp	r3, #0
   200a8:	beq	21378 <_start@@Base+0xecc0>
   200ac:	ldr	r3, [fp, #-160]	; 0xffffff60
   200b0:	ldr	r0, [r3]
   200b4:	mov	r3, #4
   200b8:	mov	r2, #4
   200bc:	mov	r1, #16
   200c0:	bl	2c400 <flatcc_builder_table_add@@Base>
   200c4:	str	r0, [fp, #-48]	; 0xffffffd0
   200c8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   200cc:	cmp	r3, #0
   200d0:	beq	215dc <_start@@Base+0xef24>
   200d4:	ldr	r3, [fp, #-88]	; 0xffffffa8
   200d8:	mov	r1, r3
   200dc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   200e0:	bl	12b34 <_start@@Base+0x47c>
   200e4:	b	21378 <_start@@Base+0xecc0>
   200e8:	ldr	r3, [fp, #-164]	; 0xffffff5c
   200ec:	add	r3, r3, #8
   200f0:	str	r3, [fp, #-164]	; 0xffffff5c
   200f4:	ldr	r1, [fp, #-168]	; 0xffffff58
   200f8:	ldr	r0, [fp, #-164]	; 0xffffff5c
   200fc:	bl	13928 <_start@@Base+0x1270>
   20100:	strd	r0, [fp, #-36]	; 0xffffffdc
   20104:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   20108:	mov	r2, #0
   2010c:	mov	r3, #-16777216	; 0xff000000
   20110:	and	ip, r0, r2
   20114:	str	ip, [fp, #-332]	; 0xfffffeb4
   20118:	and	r3, r1, r3
   2011c:	str	r3, [fp, #-328]	; 0xfffffeb8
   20120:	sub	r3, fp, #332	; 0x14c
   20124:	ldrd	r2, [r3]
   20128:	cmp	r3, #1627389952	; 0x61000000
   2012c:	cmpeq	r2, #0
   20130:	bne	2025c <_start@@Base+0xdba4>
   20134:	ldr	r3, [fp, #-164]	; 0xffffff5c
   20138:	str	r3, [fp, #-40]	; 0xffffffd8
   2013c:	mov	r3, #1
   20140:	ldr	r2, [fp, #-168]	; 0xffffff58
   20144:	ldr	r1, [fp, #-40]	; 0xffffffd8
   20148:	ldr	r0, [fp, #-160]	; 0xffffff60
   2014c:	bl	13f3c <_start@@Base+0x1884>
   20150:	str	r0, [fp, #-164]	; 0xffffff5c
   20154:	ldr	r2, [fp, #-40]	; 0xffffffd8
   20158:	ldr	r3, [fp, #-164]	; 0xffffff5c
   2015c:	cmp	r2, r3
   20160:	beq	20244 <_start@@Base+0xdb8c>
   20164:	mov	r3, #0
   20168:	str	r3, [fp, #-92]	; 0xffffffa4
   2016c:	ldr	r3, [fp, #-164]	; 0xffffff5c
   20170:	str	r3, [fp, #-40]	; 0xffffffd8
   20174:	sub	r3, fp, #92	; 0x5c
   20178:	ldr	r2, [fp, #-168]	; 0xffffff58
   2017c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   20180:	ldr	r0, [fp, #-160]	; 0xffffff60
   20184:	bl	14c4c <_start@@Base+0x2594>
   20188:	str	r0, [fp, #-164]	; 0xffffff5c
   2018c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   20190:	ldr	r3, [fp, #-164]	; 0xffffff5c
   20194:	cmp	r2, r3
   20198:	bne	201e8 <_start@@Base+0xdb30>
   2019c:	ldr	r3, [fp, #-164]	; 0xffffff5c
   201a0:	str	r3, [fp, #-40]	; 0xffffffd8
   201a4:	sub	r3, fp, #92	; 0x5c
   201a8:	str	r3, [sp]
   201ac:	ldr	r3, [pc, #248]	; 202ac <_start@@Base+0xdbf4>
   201b0:	add	r3, pc, r3
   201b4:	ldr	r2, [fp, #-168]	; 0xffffff58
   201b8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   201bc:	ldr	r0, [fp, #-160]	; 0xffffff60
   201c0:	bl	15990 <_start@@Base+0x32d8>
   201c4:	str	r0, [fp, #-164]	; 0xffffff5c
   201c8:	ldr	r2, [fp, #-164]	; 0xffffff5c
   201cc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   201d0:	cmp	r2, r3
   201d4:	beq	215e4 <_start@@Base+0xef2c>
   201d8:	ldr	r2, [fp, #-164]	; 0xffffff5c
   201dc:	ldr	r3, [fp, #-168]	; 0xffffff58
   201e0:	cmp	r2, r3
   201e4:	beq	215e4 <_start@@Base+0xef2c>
   201e8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   201ec:	cmp	r3, #0
   201f0:	bne	20208 <_start@@Base+0xdb50>
   201f4:	ldr	r3, [fp, #-160]	; 0xffffff60
   201f8:	ldr	r3, [r3, #8]
   201fc:	and	r3, r3, #2
   20200:	cmp	r3, #0
   20204:	beq	21378 <_start@@Base+0xecc0>
   20208:	ldr	r3, [fp, #-160]	; 0xffffff60
   2020c:	ldr	r0, [r3]
   20210:	mov	r3, #4
   20214:	mov	r2, #4
   20218:	mov	r1, #20
   2021c:	bl	2c400 <flatcc_builder_table_add@@Base>
   20220:	str	r0, [fp, #-48]	; 0xffffffd0
   20224:	ldr	r3, [fp, #-48]	; 0xffffffd0
   20228:	cmp	r3, #0
   2022c:	beq	215ec <_start@@Base+0xef34>
   20230:	ldr	r3, [fp, #-92]	; 0xffffffa4
   20234:	mov	r1, r3
   20238:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2023c:	bl	12b34 <_start@@Base+0x47c>
   20240:	b	21378 <_start@@Base+0xecc0>
   20244:	ldr	r2, [fp, #-168]	; 0xffffff58
   20248:	ldr	r1, [fp, #-164]	; 0xffffff5c
   2024c:	ldr	r0, [fp, #-160]	; 0xffffff60
   20250:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   20254:	str	r0, [fp, #-164]	; 0xffffff5c
   20258:	b	21378 <_start@@Base+0xecc0>
   2025c:	ldr	r2, [fp, #-168]	; 0xffffff58
   20260:	ldr	r1, [fp, #-164]	; 0xffffff5c
   20264:	ldr	r0, [fp, #-160]	; 0xffffff60
   20268:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   2026c:	str	r0, [fp, #-164]	; 0xffffff5c
   20270:	b	21378 <_start@@Base+0xecc0>
   20274:	ldr	r2, [fp, #-168]	; 0xffffff58
   20278:	ldr	r1, [fp, #-164]	; 0xffffff5c
   2027c:	ldr	r0, [fp, #-160]	; 0xffffff60
   20280:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   20284:	str	r0, [fp, #-164]	; 0xffffff5c
   20288:	b	21378 <_start@@Base+0xecc0>
   2028c:	nop	{0}
   20290:	stmdavs	r1!, {r3, r5, r6, r8, r9, ip, sp, lr}^
   20294:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   20298:			; <UNDEFINED> instruction: 0x666e7630
   2029c:	teqvc	r6, #1593835520	; 0x5f000000
   202a0:			; <UNDEFINED> instruction: 0x666e7631
   202a4:	teqvc	r3, #-268435451	; 0xf0000005
   202a8:	andeq	r9, r2, r4, ror #4
   202ac:	andeq	r9, r2, r4, lsl r1
   202b0:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   202b4:	add	r3, pc, #732	; 0x2dc
   202b8:	ldrd	r2, [r3]
   202bc:	cmp	r1, r3
   202c0:	cmpeq	r0, r2
   202c4:	bhi	205b0 <_start@@Base+0xdef8>
   202c8:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   202cc:	add	r3, pc, #716	; 0x2cc
   202d0:	ldrd	r2, [r3]
   202d4:	cmp	r1, r3
   202d8:	cmpeq	r0, r2
   202dc:	bne	2057c <_start@@Base+0xdec4>
   202e0:	ldr	r3, [fp, #-164]	; 0xffffff5c
   202e4:	str	r3, [fp, #-40]	; 0xffffffd8
   202e8:	mov	r3, #8
   202ec:	ldr	r2, [fp, #-168]	; 0xffffff58
   202f0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   202f4:	ldr	r0, [fp, #-160]	; 0xffffff60
   202f8:	bl	13f3c <_start@@Base+0x1884>
   202fc:	str	r0, [fp, #-164]	; 0xffffff5c
   20300:	ldr	r2, [fp, #-40]	; 0xffffffd8
   20304:	ldr	r3, [fp, #-164]	; 0xffffff5c
   20308:	cmp	r2, r3
   2030c:	beq	203f0 <_start@@Base+0xdd38>
   20310:	mov	r2, #0
   20314:	mov	r3, #0
   20318:	strd	r2, [fp, #-100]	; 0xffffff9c
   2031c:	ldr	r3, [fp, #-164]	; 0xffffff5c
   20320:	str	r3, [fp, #-40]	; 0xffffffd8
   20324:	sub	r3, fp, #100	; 0x64
   20328:	ldr	r2, [fp, #-168]	; 0xffffff58
   2032c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   20330:	ldr	r0, [fp, #-160]	; 0xffffff60
   20334:	bl	14b6c <_start@@Base+0x24b4>
   20338:	str	r0, [fp, #-164]	; 0xffffff5c
   2033c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   20340:	ldr	r3, [fp, #-164]	; 0xffffff5c
   20344:	cmp	r2, r3
   20348:	bne	20398 <_start@@Base+0xdce0>
   2034c:	ldr	r3, [fp, #-164]	; 0xffffff5c
   20350:	str	r3, [fp, #-40]	; 0xffffffd8
   20354:	sub	r3, fp, #100	; 0x64
   20358:	str	r3, [sp]
   2035c:	ldr	r3, [pc, #580]	; 205a8 <_start@@Base+0xdef0>
   20360:	add	r3, pc, r3
   20364:	ldr	r2, [fp, #-168]	; 0xffffff58
   20368:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2036c:	ldr	r0, [fp, #-160]	; 0xffffff60
   20370:	bl	1579c <_start@@Base+0x30e4>
   20374:	str	r0, [fp, #-164]	; 0xffffff5c
   20378:	ldr	r2, [fp, #-164]	; 0xffffff5c
   2037c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20380:	cmp	r2, r3
   20384:	beq	215f4 <_start@@Base+0xef3c>
   20388:	ldr	r2, [fp, #-164]	; 0xffffff5c
   2038c:	ldr	r3, [fp, #-168]	; 0xffffff58
   20390:	cmp	r2, r3
   20394:	beq	215f4 <_start@@Base+0xef3c>
   20398:	ldrd	r2, [fp, #-100]	; 0xffffff9c
   2039c:	orrs	r3, r2, r3
   203a0:	bne	203b8 <_start@@Base+0xdd00>
   203a4:	ldr	r3, [fp, #-160]	; 0xffffff60
   203a8:	ldr	r3, [r3, #8]
   203ac:	and	r3, r3, #2
   203b0:	cmp	r3, #0
   203b4:	beq	21378 <_start@@Base+0xecc0>
   203b8:	ldr	r3, [fp, #-160]	; 0xffffff60
   203bc:	ldr	r0, [r3]
   203c0:	mov	r3, #8
   203c4:	mov	r2, #8
   203c8:	mov	r1, #18
   203cc:	bl	2c400 <flatcc_builder_table_add@@Base>
   203d0:	str	r0, [fp, #-48]	; 0xffffffd0
   203d4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   203d8:	cmp	r3, #0
   203dc:	beq	215fc <_start@@Base+0xef44>
   203e0:	ldrd	r2, [fp, #-100]	; 0xffffff9c
   203e4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   203e8:	bl	12b9c <_start@@Base+0x4e4>
   203ec:	b	21378 <_start@@Base+0xecc0>
   203f0:	ldr	r3, [fp, #-164]	; 0xffffff5c
   203f4:	add	r3, r3, #8
   203f8:	str	r3, [fp, #-164]	; 0xffffff5c
   203fc:	ldr	r1, [fp, #-168]	; 0xffffff58
   20400:	ldr	r0, [fp, #-164]	; 0xffffff5c
   20404:	bl	13928 <_start@@Base+0x1270>
   20408:	strd	r0, [fp, #-36]	; 0xffffffdc
   2040c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   20410:	mov	r2, #0
   20414:	mov	r3, #-16777216	; 0xff000000
   20418:	and	ip, r0, r2
   2041c:	str	ip, [fp, #-340]	; 0xfffffeac
   20420:	and	r3, r1, r3
   20424:	str	r3, [fp, #-336]	; 0xfffffeb0
   20428:	sub	r3, fp, #340	; 0x154
   2042c:	ldrd	r2, [r3]
   20430:	cmp	r3, #1627389952	; 0x61000000
   20434:	cmpeq	r2, #0
   20438:	bne	20564 <_start@@Base+0xdeac>
   2043c:	ldr	r3, [fp, #-164]	; 0xffffff5c
   20440:	str	r3, [fp, #-40]	; 0xffffffd8
   20444:	mov	r3, #1
   20448:	ldr	r2, [fp, #-168]	; 0xffffff58
   2044c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   20450:	ldr	r0, [fp, #-160]	; 0xffffff60
   20454:	bl	13f3c <_start@@Base+0x1884>
   20458:	str	r0, [fp, #-164]	; 0xffffff5c
   2045c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   20460:	ldr	r3, [fp, #-164]	; 0xffffff5c
   20464:	cmp	r2, r3
   20468:	beq	2054c <_start@@Base+0xde94>
   2046c:	mov	r2, #0
   20470:	mov	r3, #0
   20474:	strd	r2, [fp, #-108]	; 0xffffff94
   20478:	ldr	r3, [fp, #-164]	; 0xffffff5c
   2047c:	str	r3, [fp, #-40]	; 0xffffffd8
   20480:	sub	r3, fp, #108	; 0x6c
   20484:	ldr	r2, [fp, #-168]	; 0xffffff58
   20488:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2048c:	ldr	r0, [fp, #-160]	; 0xffffff60
   20490:	bl	14b6c <_start@@Base+0x24b4>
   20494:	str	r0, [fp, #-164]	; 0xffffff5c
   20498:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2049c:	ldr	r3, [fp, #-164]	; 0xffffff5c
   204a0:	cmp	r2, r3
   204a4:	bne	204f4 <_start@@Base+0xde3c>
   204a8:	ldr	r3, [fp, #-164]	; 0xffffff5c
   204ac:	str	r3, [fp, #-40]	; 0xffffffd8
   204b0:	sub	r3, fp, #108	; 0x6c
   204b4:	str	r3, [sp]
   204b8:	ldr	r3, [pc, #236]	; 205ac <_start@@Base+0xdef4>
   204bc:	add	r3, pc, r3
   204c0:	ldr	r2, [fp, #-168]	; 0xffffff58
   204c4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   204c8:	ldr	r0, [fp, #-160]	; 0xffffff60
   204cc:	bl	1579c <_start@@Base+0x30e4>
   204d0:	str	r0, [fp, #-164]	; 0xffffff5c
   204d4:	ldr	r2, [fp, #-164]	; 0xffffff5c
   204d8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   204dc:	cmp	r2, r3
   204e0:	beq	21604 <_start@@Base+0xef4c>
   204e4:	ldr	r2, [fp, #-164]	; 0xffffff5c
   204e8:	ldr	r3, [fp, #-168]	; 0xffffff58
   204ec:	cmp	r2, r3
   204f0:	beq	21604 <_start@@Base+0xef4c>
   204f4:	ldrd	r2, [fp, #-108]	; 0xffffff94
   204f8:	orrs	r3, r2, r3
   204fc:	bne	20514 <_start@@Base+0xde5c>
   20500:	ldr	r3, [fp, #-160]	; 0xffffff60
   20504:	ldr	r3, [r3, #8]
   20508:	and	r3, r3, #2
   2050c:	cmp	r3, #0
   20510:	beq	21378 <_start@@Base+0xecc0>
   20514:	ldr	r3, [fp, #-160]	; 0xffffff60
   20518:	ldr	r0, [r3]
   2051c:	mov	r3, #8
   20520:	mov	r2, #8
   20524:	mov	r1, #22
   20528:	bl	2c400 <flatcc_builder_table_add@@Base>
   2052c:	str	r0, [fp, #-48]	; 0xffffffd0
   20530:	ldr	r3, [fp, #-48]	; 0xffffffd0
   20534:	cmp	r3, #0
   20538:	beq	2160c <_start@@Base+0xef54>
   2053c:	ldrd	r2, [fp, #-108]	; 0xffffff94
   20540:	ldr	r0, [fp, #-48]	; 0xffffffd0
   20544:	bl	12b9c <_start@@Base+0x4e4>
   20548:	b	21378 <_start@@Base+0xecc0>
   2054c:	ldr	r2, [fp, #-168]	; 0xffffff58
   20550:	ldr	r1, [fp, #-164]	; 0xffffff5c
   20554:	ldr	r0, [fp, #-160]	; 0xffffff60
   20558:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   2055c:	str	r0, [fp, #-164]	; 0xffffff5c
   20560:	b	21378 <_start@@Base+0xecc0>
   20564:	ldr	r2, [fp, #-168]	; 0xffffff58
   20568:	ldr	r1, [fp, #-164]	; 0xffffff5c
   2056c:	ldr	r0, [fp, #-160]	; 0xffffff60
   20570:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   20574:	str	r0, [fp, #-164]	; 0xffffff5c
   20578:	b	21378 <_start@@Base+0xecc0>
   2057c:	ldr	r2, [fp, #-168]	; 0xffffff58
   20580:	ldr	r1, [fp, #-164]	; 0xffffff5c
   20584:	ldr	r0, [fp, #-160]	; 0xffffff60
   20588:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   2058c:	str	r0, [fp, #-164]	; 0xffffff5c
   20590:	b	21378 <_start@@Base+0xecc0>
   20594:	nop	{0}
   20598:			; <UNDEFINED> instruction: 0x666e7630
   2059c:	ldrvc	r3, [r3, #-607]!	; 0xfffffda1
   205a0:			; <UNDEFINED> instruction: 0x666e7631
   205a4:	teqvc	r6, #1593835520	; 0x5f000000
   205a8:	andeq	r8, r2, r0, ror pc
   205ac:	andeq	r8, r2, r0, lsr #28
   205b0:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   205b4:	add	r3, pc, #980	; 0x3d4
   205b8:	ldrd	r2, [r3]
   205bc:	cmp	r1, r3
   205c0:	cmpeq	r0, r2
   205c4:	bne	20864 <_start@@Base+0xe1ac>
   205c8:	ldr	r3, [fp, #-164]	; 0xffffff5c
   205cc:	str	r3, [fp, #-40]	; 0xffffffd8
   205d0:	mov	r3, #8
   205d4:	ldr	r2, [fp, #-168]	; 0xffffff58
   205d8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   205dc:	ldr	r0, [fp, #-160]	; 0xffffff60
   205e0:	bl	13f3c <_start@@Base+0x1884>
   205e4:	str	r0, [fp, #-164]	; 0xffffff5c
   205e8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   205ec:	ldr	r3, [fp, #-164]	; 0xffffff5c
   205f0:	cmp	r2, r3
   205f4:	beq	206d8 <_start@@Base+0xe020>
   205f8:	mov	r3, #0
   205fc:	str	r3, [fp, #-112]	; 0xffffff90
   20600:	ldr	r3, [fp, #-164]	; 0xffffff5c
   20604:	str	r3, [fp, #-40]	; 0xffffffd8
   20608:	sub	r3, fp, #112	; 0x70
   2060c:	ldr	r2, [fp, #-168]	; 0xffffff58
   20610:	ldr	r1, [fp, #-40]	; 0xffffffd8
   20614:	ldr	r0, [fp, #-160]	; 0xffffff60
   20618:	bl	148d8 <_start@@Base+0x2220>
   2061c:	str	r0, [fp, #-164]	; 0xffffff5c
   20620:	ldr	r2, [fp, #-40]	; 0xffffffd8
   20624:	ldr	r3, [fp, #-164]	; 0xffffff5c
   20628:	cmp	r2, r3
   2062c:	bne	2067c <_start@@Base+0xdfc4>
   20630:	ldr	r3, [fp, #-164]	; 0xffffff5c
   20634:	str	r3, [fp, #-40]	; 0xffffffd8
   20638:	sub	r3, fp, #112	; 0x70
   2063c:	str	r3, [sp]
   20640:	ldr	r3, [pc, #856]	; 209a0 <_start@@Base+0xe2e8>
   20644:	add	r3, pc, r3
   20648:	ldr	r2, [fp, #-168]	; 0xffffff58
   2064c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   20650:	ldr	r0, [fp, #-160]	; 0xffffff60
   20654:	bl	151f4 <_start@@Base+0x2b3c>
   20658:	str	r0, [fp, #-164]	; 0xffffff5c
   2065c:	ldr	r2, [fp, #-164]	; 0xffffff5c
   20660:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20664:	cmp	r2, r3
   20668:	beq	21614 <_start@@Base+0xef5c>
   2066c:	ldr	r2, [fp, #-164]	; 0xffffff5c
   20670:	ldr	r3, [fp, #-168]	; 0xffffff58
   20674:	cmp	r2, r3
   20678:	beq	21614 <_start@@Base+0xef5c>
   2067c:	ldr	r3, [fp, #-112]	; 0xffffff90
   20680:	cmp	r3, #0
   20684:	bne	2069c <_start@@Base+0xdfe4>
   20688:	ldr	r3, [fp, #-160]	; 0xffffff60
   2068c:	ldr	r3, [r3, #8]
   20690:	and	r3, r3, #2
   20694:	cmp	r3, #0
   20698:	beq	21378 <_start@@Base+0xecc0>
   2069c:	ldr	r3, [fp, #-160]	; 0xffffff60
   206a0:	ldr	r0, [r3]
   206a4:	mov	r3, #4
   206a8:	mov	r2, #4
   206ac:	mov	r1, #17
   206b0:	bl	2c400 <flatcc_builder_table_add@@Base>
   206b4:	str	r0, [fp, #-48]	; 0xffffffd0
   206b8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   206bc:	cmp	r3, #0
   206c0:	beq	2161c <_start@@Base+0xef64>
   206c4:	ldr	r3, [fp, #-112]	; 0xffffff90
   206c8:	mov	r1, r3
   206cc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   206d0:	bl	128b4 <_start@@Base+0x1fc>
   206d4:	b	21378 <_start@@Base+0xecc0>
   206d8:	ldr	r3, [fp, #-164]	; 0xffffff5c
   206dc:	add	r3, r3, #8
   206e0:	str	r3, [fp, #-164]	; 0xffffff5c
   206e4:	ldr	r1, [fp, #-168]	; 0xffffff58
   206e8:	ldr	r0, [fp, #-164]	; 0xffffff5c
   206ec:	bl	13928 <_start@@Base+0x1270>
   206f0:	strd	r0, [fp, #-36]	; 0xffffffdc
   206f4:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   206f8:	mov	r2, #0
   206fc:	mov	r3, #-16777216	; 0xff000000
   20700:	and	ip, r0, r2
   20704:	str	ip, [fp, #-348]	; 0xfffffea4
   20708:	and	r3, r1, r3
   2070c:	str	r3, [fp, #-344]	; 0xfffffea8
   20710:	sub	r3, fp, #348	; 0x15c
   20714:	ldrd	r2, [r3]
   20718:	cmp	r3, #1627389952	; 0x61000000
   2071c:	cmpeq	r2, #0
   20720:	bne	2084c <_start@@Base+0xe194>
   20724:	ldr	r3, [fp, #-164]	; 0xffffff5c
   20728:	str	r3, [fp, #-40]	; 0xffffffd8
   2072c:	mov	r3, #1
   20730:	ldr	r2, [fp, #-168]	; 0xffffff58
   20734:	ldr	r1, [fp, #-40]	; 0xffffffd8
   20738:	ldr	r0, [fp, #-160]	; 0xffffff60
   2073c:	bl	13f3c <_start@@Base+0x1884>
   20740:	str	r0, [fp, #-164]	; 0xffffff5c
   20744:	ldr	r2, [fp, #-40]	; 0xffffffd8
   20748:	ldr	r3, [fp, #-164]	; 0xffffff5c
   2074c:	cmp	r2, r3
   20750:	beq	20834 <_start@@Base+0xe17c>
   20754:	mov	r3, #0
   20758:	str	r3, [fp, #-116]	; 0xffffff8c
   2075c:	ldr	r3, [fp, #-164]	; 0xffffff5c
   20760:	str	r3, [fp, #-40]	; 0xffffffd8
   20764:	sub	r3, fp, #116	; 0x74
   20768:	ldr	r2, [fp, #-168]	; 0xffffff58
   2076c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   20770:	ldr	r0, [fp, #-160]	; 0xffffff60
   20774:	bl	148d8 <_start@@Base+0x2220>
   20778:	str	r0, [fp, #-164]	; 0xffffff5c
   2077c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   20780:	ldr	r3, [fp, #-164]	; 0xffffff5c
   20784:	cmp	r2, r3
   20788:	bne	207d8 <_start@@Base+0xe120>
   2078c:	ldr	r3, [fp, #-164]	; 0xffffff5c
   20790:	str	r3, [fp, #-40]	; 0xffffffd8
   20794:	sub	r3, fp, #116	; 0x74
   20798:	str	r3, [sp]
   2079c:	ldr	r3, [pc, #512]	; 209a4 <_start@@Base+0xe2ec>
   207a0:	add	r3, pc, r3
   207a4:	ldr	r2, [fp, #-168]	; 0xffffff58
   207a8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   207ac:	ldr	r0, [fp, #-160]	; 0xffffff60
   207b0:	bl	151f4 <_start@@Base+0x2b3c>
   207b4:	str	r0, [fp, #-164]	; 0xffffff5c
   207b8:	ldr	r2, [fp, #-164]	; 0xffffff5c
   207bc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   207c0:	cmp	r2, r3
   207c4:	beq	21624 <_start@@Base+0xef6c>
   207c8:	ldr	r2, [fp, #-164]	; 0xffffff5c
   207cc:	ldr	r3, [fp, #-168]	; 0xffffff58
   207d0:	cmp	r2, r3
   207d4:	beq	21624 <_start@@Base+0xef6c>
   207d8:	ldr	r3, [fp, #-116]	; 0xffffff8c
   207dc:	cmp	r3, #0
   207e0:	bne	207f8 <_start@@Base+0xe140>
   207e4:	ldr	r3, [fp, #-160]	; 0xffffff60
   207e8:	ldr	r3, [r3, #8]
   207ec:	and	r3, r3, #2
   207f0:	cmp	r3, #0
   207f4:	beq	21378 <_start@@Base+0xecc0>
   207f8:	ldr	r3, [fp, #-160]	; 0xffffff60
   207fc:	ldr	r0, [r3]
   20800:	mov	r3, #4
   20804:	mov	r2, #4
   20808:	mov	r1, #21
   2080c:	bl	2c400 <flatcc_builder_table_add@@Base>
   20810:	str	r0, [fp, #-48]	; 0xffffffd0
   20814:	ldr	r3, [fp, #-48]	; 0xffffffd0
   20818:	cmp	r3, #0
   2081c:	beq	2162c <_start@@Base+0xef74>
   20820:	ldr	r3, [fp, #-116]	; 0xffffff8c
   20824:	mov	r1, r3
   20828:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2082c:	bl	128b4 <_start@@Base+0x1fc>
   20830:	b	21378 <_start@@Base+0xecc0>
   20834:	ldr	r2, [fp, #-168]	; 0xffffff58
   20838:	ldr	r1, [fp, #-164]	; 0xffffff5c
   2083c:	ldr	r0, [fp, #-160]	; 0xffffff60
   20840:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   20844:	str	r0, [fp, #-164]	; 0xffffff5c
   20848:	b	21378 <_start@@Base+0xecc0>
   2084c:	ldr	r2, [fp, #-168]	; 0xffffff58
   20850:	ldr	r1, [fp, #-164]	; 0xffffff5c
   20854:	ldr	r0, [fp, #-160]	; 0xffffff60
   20858:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   2085c:	str	r0, [fp, #-164]	; 0xffffff5c
   20860:	b	21378 <_start@@Base+0xecc0>
   20864:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   20868:	add	r3, pc, #296	; 0x128
   2086c:	ldrd	r2, [r3]
   20870:	cmp	r1, r3
   20874:	cmpeq	r0, r2
   20878:	bne	20b3c <_start@@Base+0xe484>
   2087c:	ldr	r3, [fp, #-164]	; 0xffffff5c
   20880:	str	r3, [fp, #-40]	; 0xffffffd8
   20884:	mov	r3, #8
   20888:	ldr	r2, [fp, #-168]	; 0xffffff58
   2088c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   20890:	ldr	r0, [fp, #-160]	; 0xffffff60
   20894:	bl	13f3c <_start@@Base+0x1884>
   20898:	str	r0, [fp, #-164]	; 0xffffff5c
   2089c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   208a0:	ldr	r3, [fp, #-164]	; 0xffffff5c
   208a4:	cmp	r2, r3
   208a8:	beq	209b0 <_start@@Base+0xe2f8>
   208ac:	mov	r2, #0
   208b0:	mov	r3, #0
   208b4:	strd	r2, [fp, #-124]	; 0xffffff84
   208b8:	ldr	r3, [fp, #-164]	; 0xffffff5c
   208bc:	str	r3, [fp, #-40]	; 0xffffffd8
   208c0:	sub	r3, fp, #124	; 0x7c
   208c4:	ldr	r2, [fp, #-168]	; 0xffffff58
   208c8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   208cc:	ldr	r0, [fp, #-160]	; 0xffffff60
   208d0:	bl	147f8 <_start@@Base+0x2140>
   208d4:	str	r0, [fp, #-164]	; 0xffffff5c
   208d8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   208dc:	ldr	r3, [fp, #-164]	; 0xffffff5c
   208e0:	cmp	r2, r3
   208e4:	bne	20934 <_start@@Base+0xe27c>
   208e8:	ldr	r3, [fp, #-164]	; 0xffffff5c
   208ec:	str	r3, [fp, #-40]	; 0xffffffd8
   208f0:	sub	r3, fp, #124	; 0x7c
   208f4:	str	r3, [sp]
   208f8:	ldr	r3, [pc, #168]	; 209a8 <_start@@Base+0xe2f0>
   208fc:	add	r3, pc, r3
   20900:	ldr	r2, [fp, #-168]	; 0xffffff58
   20904:	ldr	r1, [fp, #-40]	; 0xffffffd8
   20908:	ldr	r0, [fp, #-160]	; 0xffffff60
   2090c:	bl	15000 <_start@@Base+0x2948>
   20910:	str	r0, [fp, #-164]	; 0xffffff5c
   20914:	ldr	r2, [fp, #-164]	; 0xffffff5c
   20918:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2091c:	cmp	r2, r3
   20920:	beq	21634 <_start@@Base+0xef7c>
   20924:	ldr	r2, [fp, #-164]	; 0xffffff5c
   20928:	ldr	r3, [fp, #-168]	; 0xffffff58
   2092c:	cmp	r2, r3
   20930:	beq	21634 <_start@@Base+0xef7c>
   20934:	ldrd	r2, [fp, #-124]	; 0xffffff84
   20938:	orrs	r3, r2, r3
   2093c:	bne	20954 <_start@@Base+0xe29c>
   20940:	ldr	r3, [fp, #-160]	; 0xffffff60
   20944:	ldr	r3, [r3, #8]
   20948:	and	r3, r3, #2
   2094c:	cmp	r3, #0
   20950:	beq	21378 <_start@@Base+0xecc0>
   20954:	ldr	r3, [fp, #-160]	; 0xffffff60
   20958:	ldr	r0, [r3]
   2095c:	mov	r3, #8
   20960:	mov	r2, #8
   20964:	mov	r1, #19
   20968:	bl	2c400 <flatcc_builder_table_add@@Base>
   2096c:	str	r0, [fp, #-48]	; 0xffffffd0
   20970:	ldr	r3, [fp, #-48]	; 0xffffffd0
   20974:	cmp	r3, #0
   20978:	beq	2163c <_start@@Base+0xef84>
   2097c:	ldrd	r2, [fp, #-124]	; 0xffffff84
   20980:	ldr	r0, [fp, #-48]	; 0xffffffd0
   20984:	bl	1291c <_start@@Base+0x264>
   20988:	b	21378 <_start@@Base+0xecc0>
   2098c:	nop	{0}
   20990:			; <UNDEFINED> instruction: 0x666e7631
   20994:	ldrvc	r3, [r3, #-607]!	; 0xfffffda1
   20998:			; <UNDEFINED> instruction: 0x666e7631
   2099c:	ldrvc	r3, [r6, #-1119]!	; 0xfffffba1
   209a0:	andeq	r8, r2, r4, lsr #25
   209a4:	andeq	r8, r2, r4, asr fp
   209a8:	andeq	r8, r2, r4, lsl #20
   209ac:	muleq	r2, r0, r8
   209b0:	ldr	r3, [fp, #-164]	; 0xffffff5c
   209b4:	add	r3, r3, #8
   209b8:	str	r3, [fp, #-164]	; 0xffffff5c
   209bc:	ldr	r1, [fp, #-168]	; 0xffffff58
   209c0:	ldr	r0, [fp, #-164]	; 0xffffff5c
   209c4:	bl	13928 <_start@@Base+0x1270>
   209c8:	strd	r0, [fp, #-36]	; 0xffffffdc
   209cc:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   209d0:	mov	r2, #0
   209d4:	mov	r3, #-16777216	; 0xff000000
   209d8:	and	ip, r0, r2
   209dc:	str	ip, [fp, #-356]	; 0xfffffe9c
   209e0:	and	r3, r1, r3
   209e4:	str	r3, [fp, #-352]	; 0xfffffea0
   209e8:	sub	r3, fp, #356	; 0x164
   209ec:	ldrd	r2, [r3]
   209f0:	cmp	r3, #1627389952	; 0x61000000
   209f4:	cmpeq	r2, #0
   209f8:	bne	20b24 <_start@@Base+0xe46c>
   209fc:	ldr	r3, [fp, #-164]	; 0xffffff5c
   20a00:	str	r3, [fp, #-40]	; 0xffffffd8
   20a04:	mov	r3, #1
   20a08:	ldr	r2, [fp, #-168]	; 0xffffff58
   20a0c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   20a10:	ldr	r0, [fp, #-160]	; 0xffffff60
   20a14:	bl	13f3c <_start@@Base+0x1884>
   20a18:	str	r0, [fp, #-164]	; 0xffffff5c
   20a1c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   20a20:	ldr	r3, [fp, #-164]	; 0xffffff5c
   20a24:	cmp	r2, r3
   20a28:	beq	20b0c <_start@@Base+0xe454>
   20a2c:	mov	r2, #0
   20a30:	mov	r3, #0
   20a34:	strd	r2, [fp, #-132]	; 0xffffff7c
   20a38:	ldr	r3, [fp, #-164]	; 0xffffff5c
   20a3c:	str	r3, [fp, #-40]	; 0xffffffd8
   20a40:	sub	r3, fp, #132	; 0x84
   20a44:	ldr	r2, [fp, #-168]	; 0xffffff58
   20a48:	ldr	r1, [fp, #-40]	; 0xffffffd8
   20a4c:	ldr	r0, [fp, #-160]	; 0xffffff60
   20a50:	bl	147f8 <_start@@Base+0x2140>
   20a54:	str	r0, [fp, #-164]	; 0xffffff5c
   20a58:	ldr	r2, [fp, #-40]	; 0xffffffd8
   20a5c:	ldr	r3, [fp, #-164]	; 0xffffff5c
   20a60:	cmp	r2, r3
   20a64:	bne	20ab4 <_start@@Base+0xe3fc>
   20a68:	ldr	r3, [fp, #-164]	; 0xffffff5c
   20a6c:	str	r3, [fp, #-40]	; 0xffffffd8
   20a70:	sub	r3, fp, #132	; 0x84
   20a74:	str	r3, [sp]
   20a78:	ldr	r3, [pc, #-212]	; 209ac <_start@@Base+0xe2f4>
   20a7c:	add	r3, pc, r3
   20a80:	ldr	r2, [fp, #-168]	; 0xffffff58
   20a84:	ldr	r1, [fp, #-40]	; 0xffffffd8
   20a88:	ldr	r0, [fp, #-160]	; 0xffffff60
   20a8c:	bl	15000 <_start@@Base+0x2948>
   20a90:	str	r0, [fp, #-164]	; 0xffffff5c
   20a94:	ldr	r2, [fp, #-164]	; 0xffffff5c
   20a98:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20a9c:	cmp	r2, r3
   20aa0:	beq	21644 <_start@@Base+0xef8c>
   20aa4:	ldr	r2, [fp, #-164]	; 0xffffff5c
   20aa8:	ldr	r3, [fp, #-168]	; 0xffffff58
   20aac:	cmp	r2, r3
   20ab0:	beq	21644 <_start@@Base+0xef8c>
   20ab4:	ldrd	r2, [fp, #-132]	; 0xffffff7c
   20ab8:	orrs	r3, r2, r3
   20abc:	bne	20ad4 <_start@@Base+0xe41c>
   20ac0:	ldr	r3, [fp, #-160]	; 0xffffff60
   20ac4:	ldr	r3, [r3, #8]
   20ac8:	and	r3, r3, #2
   20acc:	cmp	r3, #0
   20ad0:	beq	21378 <_start@@Base+0xecc0>
   20ad4:	ldr	r3, [fp, #-160]	; 0xffffff60
   20ad8:	ldr	r0, [r3]
   20adc:	mov	r3, #8
   20ae0:	mov	r2, #8
   20ae4:	mov	r1, #23
   20ae8:	bl	2c400 <flatcc_builder_table_add@@Base>
   20aec:	str	r0, [fp, #-48]	; 0xffffffd0
   20af0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   20af4:	cmp	r3, #0
   20af8:	beq	2164c <_start@@Base+0xef94>
   20afc:	ldrd	r2, [fp, #-132]	; 0xffffff7c
   20b00:	ldr	r0, [fp, #-48]	; 0xffffffd0
   20b04:	bl	1291c <_start@@Base+0x264>
   20b08:	b	21378 <_start@@Base+0xecc0>
   20b0c:	ldr	r2, [fp, #-168]	; 0xffffff58
   20b10:	ldr	r1, [fp, #-164]	; 0xffffff5c
   20b14:	ldr	r0, [fp, #-160]	; 0xffffff60
   20b18:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   20b1c:	str	r0, [fp, #-164]	; 0xffffff5c
   20b20:	b	21378 <_start@@Base+0xecc0>
   20b24:	ldr	r2, [fp, #-168]	; 0xffffff58
   20b28:	ldr	r1, [fp, #-164]	; 0xffffff5c
   20b2c:	ldr	r0, [fp, #-160]	; 0xffffff60
   20b30:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   20b34:	str	r0, [fp, #-164]	; 0xffffff5c
   20b38:	b	21378 <_start@@Base+0xecc0>
   20b3c:	ldr	r2, [fp, #-168]	; 0xffffff58
   20b40:	ldr	r1, [fp, #-164]	; 0xffffff5c
   20b44:	ldr	r0, [fp, #-160]	; 0xffffff60
   20b48:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   20b4c:	str	r0, [fp, #-164]	; 0xffffff5c
   20b50:	b	21378 <_start@@Base+0xecc0>
   20b54:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   20b58:	add	r3, pc, #832	; 0x340
   20b5c:	ldrd	r2, [r3]
   20b60:	cmp	r1, r3
   20b64:	cmpeq	r0, r2
   20b68:	bhi	20ec4 <_start@@Base+0xe80c>
   20b6c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   20b70:	add	r3, pc, #816	; 0x330
   20b74:	ldrd	r2, [r3]
   20b78:	cmp	r1, r3
   20b7c:	cmpeq	r0, r2
   20b80:	bne	20e84 <_start@@Base+0xe7cc>
   20b84:	ldr	r3, [fp, #-164]	; 0xffffff5c
   20b88:	add	r3, r3, #8
   20b8c:	str	r3, [fp, #-164]	; 0xffffff5c
   20b90:	ldr	r1, [fp, #-168]	; 0xffffff58
   20b94:	ldr	r0, [fp, #-164]	; 0xffffff5c
   20b98:	bl	13928 <_start@@Base+0x1270>
   20b9c:	strd	r0, [fp, #-36]	; 0xffffffdc
   20ba0:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   20ba4:	add	r3, pc, #772	; 0x304
   20ba8:	ldrd	r2, [r3]
   20bac:	cmp	r1, r3
   20bb0:	cmpeq	r0, r2
   20bb4:	bne	20e6c <_start@@Base+0xe7b4>
   20bb8:	ldr	r3, [fp, #-164]	; 0xffffff5c
   20bbc:	add	r3, r3, #8
   20bc0:	str	r3, [fp, #-164]	; 0xffffff5c
   20bc4:	ldr	r1, [fp, #-168]	; 0xffffff58
   20bc8:	ldr	r0, [fp, #-164]	; 0xffffff5c
   20bcc:	bl	13928 <_start@@Base+0x1270>
   20bd0:	strd	r0, [fp, #-36]	; 0xffffffdc
   20bd4:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   20bd8:	mov	r2, #0
   20bdc:	mvn	r3, #0
   20be0:	and	ip, r0, r2
   20be4:	str	ip, [fp, #-364]	; 0xfffffe94
   20be8:	and	r3, r1, r3
   20bec:	str	r3, [fp, #-360]	; 0xfffffe98
   20bf0:	add	r3, pc, #704	; 0x2c0
   20bf4:	ldrd	r2, [r3]
   20bf8:	sub	r1, fp, #364	; 0x16c
   20bfc:	ldrd	r0, [r1]
   20c00:	cmp	r1, r3
   20c04:	cmpeq	r0, r2
   20c08:	bne	20e54 <_start@@Base+0xe79c>
   20c0c:	ldr	r3, [fp, #-164]	; 0xffffff5c
   20c10:	str	r3, [fp, #-40]	; 0xffffffd8
   20c14:	mov	r3, #4
   20c18:	ldr	r2, [fp, #-168]	; 0xffffff58
   20c1c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   20c20:	ldr	r0, [fp, #-160]	; 0xffffff60
   20c24:	bl	13f3c <_start@@Base+0x1884>
   20c28:	str	r0, [fp, #-164]	; 0xffffff5c
   20c2c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   20c30:	ldr	r3, [fp, #-164]	; 0xffffff5c
   20c34:	cmp	r2, r3
   20c38:	beq	20e3c <_start@@Base+0xe784>
   20c3c:	ldr	r2, [fp, #-164]	; 0xffffff5c
   20c40:	ldr	r3, [fp, #-168]	; 0xffffff58
   20c44:	cmp	r2, r3
   20c48:	beq	20d94 <_start@@Base+0xe6dc>
   20c4c:	ldr	r3, [fp, #-164]	; 0xffffff5c
   20c50:	ldrb	r3, [r3]
   20c54:	cmp	r3, #91	; 0x5b
   20c58:	bne	20d94 <_start@@Base+0xe6dc>
   20c5c:	ldr	r3, [fp, #-160]	; 0xffffff60
   20c60:	ldr	r0, [r3]
   20c64:	mvn	r3, #0
   20c68:	mov	r2, #1
   20c6c:	mov	r1, #1
   20c70:	bl	29b28 <flatcc_builder_start_vector@@Base>
   20c74:	mov	r3, r0
   20c78:	cmp	r3, #0
   20c7c:	bne	21654 <_start@@Base+0xef9c>
   20c80:	sub	r3, fp, #52	; 0x34
   20c84:	ldr	r2, [fp, #-168]	; 0xffffff58
   20c88:	ldr	r1, [fp, #-164]	; 0xffffff5c
   20c8c:	ldr	r0, [fp, #-160]	; 0xffffff60
   20c90:	bl	13cd4 <_start@@Base+0x161c>
   20c94:	str	r0, [fp, #-164]	; 0xffffff5c
   20c98:	b	20d6c <_start@@Base+0xe6b4>
   20c9c:	mov	r3, #0
   20ca0:	strb	r3, [fp, #-133]	; 0xffffff7b
   20ca4:	ldr	r3, [fp, #-160]	; 0xffffff60
   20ca8:	ldr	r3, [r3]
   20cac:	mov	r1, #1
   20cb0:	mov	r0, r3
   20cb4:	bl	291c4 <flatcc_builder_extend_vector@@Base>
   20cb8:	str	r0, [fp, #-48]	; 0xffffffd0
   20cbc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   20cc0:	cmp	r3, #0
   20cc4:	beq	2165c <_start@@Base+0xefa4>
   20cc8:	ldr	r3, [fp, #-164]	; 0xffffff5c
   20ccc:	str	r3, [fp, #-40]	; 0xffffffd8
   20cd0:	sub	r3, fp, #133	; 0x85
   20cd4:	ldr	r2, [fp, #-168]	; 0xffffff58
   20cd8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   20cdc:	ldr	r0, [fp, #-160]	; 0xffffff60
   20ce0:	bl	14a90 <_start@@Base+0x23d8>
   20ce4:	str	r0, [fp, #-164]	; 0xffffff5c
   20ce8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   20cec:	ldr	r3, [fp, #-164]	; 0xffffff5c
   20cf0:	cmp	r2, r3
   20cf4:	bne	20d44 <_start@@Base+0xe68c>
   20cf8:	ldr	r3, [fp, #-164]	; 0xffffff5c
   20cfc:	str	r3, [fp, #-40]	; 0xffffffd8
   20d00:	sub	r3, fp, #133	; 0x85
   20d04:	str	r3, [sp]
   20d08:	ldr	r3, [pc, #432]	; 20ec0 <_start@@Base+0xe808>
   20d0c:	add	r3, pc, r3
   20d10:	ldr	r2, [fp, #-168]	; 0xffffff58
   20d14:	ldr	r1, [fp, #-40]	; 0xffffffd8
   20d18:	ldr	r0, [fp, #-160]	; 0xffffff60
   20d1c:	bl	155b8 <_start@@Base+0x2f00>
   20d20:	str	r0, [fp, #-164]	; 0xffffff5c
   20d24:	ldr	r2, [fp, #-164]	; 0xffffff5c
   20d28:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20d2c:	cmp	r2, r3
   20d30:	beq	21664 <_start@@Base+0xefac>
   20d34:	ldr	r2, [fp, #-164]	; 0xffffff5c
   20d38:	ldr	r3, [fp, #-168]	; 0xffffff58
   20d3c:	cmp	r2, r3
   20d40:	beq	21664 <_start@@Base+0xefac>
   20d44:	ldrb	r3, [fp, #-133]	; 0xffffff7b
   20d48:	mov	r1, r3
   20d4c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   20d50:	bl	127d0 <_start@@Base+0x118>
   20d54:	sub	r3, fp, #52	; 0x34
   20d58:	ldr	r2, [fp, #-168]	; 0xffffff58
   20d5c:	ldr	r1, [fp, #-164]	; 0xffffff5c
   20d60:	ldr	r0, [fp, #-160]	; 0xffffff60
   20d64:	bl	13dc8 <_start@@Base+0x1710>
   20d68:	str	r0, [fp, #-164]	; 0xffffff5c
   20d6c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   20d70:	cmp	r3, #0
   20d74:	bne	20c9c <_start@@Base+0xe5e4>
   20d78:	ldr	r3, [fp, #-160]	; 0xffffff60
   20d7c:	ldr	r3, [r3]
   20d80:	mov	r0, r3
   20d84:	bl	2ae24 <flatcc_builder_end_vector@@Base>
   20d88:	mov	r3, r0
   20d8c:	str	r3, [fp, #-56]	; 0xffffffc8
   20d90:	b	20dfc <_start@@Base+0xe744>
   20d94:	ldr	r3, [fp, #-160]	; 0xffffff60
   20d98:	ldr	r0, [r3]
   20d9c:	mov	r3, #0
   20da0:	mov	r2, #0
   20da4:	mov	r1, #0
   20da8:	bl	28cc4 <flatcc_builder_start_buffer@@Base>
   20dac:	mov	r3, r0
   20db0:	cmp	r3, #0
   20db4:	bne	2166c <_start@@Base+0xefb4>
   20db8:	sub	r3, fp, #56	; 0x38
   20dbc:	ldr	r2, [fp, #-168]	; 0xffffff58
   20dc0:	ldr	r1, [fp, #-164]	; 0xffffff5c
   20dc4:	ldr	r0, [fp, #-160]	; 0xffffff60
   20dc8:	bl	1d9d0 <_start@@Base+0xb318>
   20dcc:	str	r0, [fp, #-164]	; 0xffffff5c
   20dd0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   20dd4:	cmp	r3, #0
   20dd8:	beq	21674 <_start@@Base+0xefbc>
   20ddc:	ldr	r3, [fp, #-160]	; 0xffffff60
   20de0:	ldr	r2, [r3]
   20de4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   20de8:	mov	r1, r3
   20dec:	mov	r0, r2
   20df0:	bl	28e34 <flatcc_builder_end_buffer@@Base>
   20df4:	mov	r3, r0
   20df8:	str	r3, [fp, #-56]	; 0xffffffc8
   20dfc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   20e00:	cmp	r3, #0
   20e04:	beq	2167c <_start@@Base+0xefc4>
   20e08:	ldr	r3, [fp, #-160]	; 0xffffff60
   20e0c:	ldr	r3, [r3]
   20e10:	mov	r1, #13
   20e14:	mov	r0, r3
   20e18:	bl	2c670 <flatcc_builder_table_add_offset@@Base>
   20e1c:	str	r0, [fp, #-44]	; 0xffffffd4
   20e20:	ldr	r3, [fp, #-44]	; 0xffffffd4
   20e24:	cmp	r3, #0
   20e28:	beq	2167c <_start@@Base+0xefc4>
   20e2c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   20e30:	ldr	r3, [fp, #-44]	; 0xffffffd4
   20e34:	str	r2, [r3]
   20e38:	b	21378 <_start@@Base+0xecc0>
   20e3c:	ldr	r2, [fp, #-168]	; 0xffffff58
   20e40:	ldr	r1, [fp, #-164]	; 0xffffff5c
   20e44:	ldr	r0, [fp, #-160]	; 0xffffff60
   20e48:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   20e4c:	str	r0, [fp, #-164]	; 0xffffff5c
   20e50:	b	21378 <_start@@Base+0xecc0>
   20e54:	ldr	r2, [fp, #-168]	; 0xffffff58
   20e58:	ldr	r1, [fp, #-164]	; 0xffffff5c
   20e5c:	ldr	r0, [fp, #-160]	; 0xffffff60
   20e60:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   20e64:	str	r0, [fp, #-164]	; 0xffffff5c
   20e68:	b	21378 <_start@@Base+0xecc0>
   20e6c:	ldr	r2, [fp, #-168]	; 0xffffff58
   20e70:	ldr	r1, [fp, #-164]	; 0xffffff5c
   20e74:	ldr	r0, [fp, #-160]	; 0xffffff60
   20e78:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   20e7c:	str	r0, [fp, #-164]	; 0xffffff5c
   20e80:	b	21378 <_start@@Base+0xecc0>
   20e84:	ldr	r2, [fp, #-168]	; 0xffffff58
   20e88:	ldr	r1, [fp, #-164]	; 0xffffff5c
   20e8c:	ldr	r0, [fp, #-160]	; 0xffffff60
   20e90:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   20e94:	str	r0, [fp, #-164]	; 0xffffff5c
   20e98:	b	21378 <_start@@Base+0xecc0>
   20e9c:	nop	{0}
   20ea0:	svcvs	0x00725f6e
   20ea4:			; <UNDEFINED> instruction: 0x76656374
   20ea8:	mcrvs	3, 3, r7, cr5, cr4, {3}
   20eac:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   20eb0:	cmnvs	r4, r5, ror r2
   20eb4:	strbvs	r6, [r4, #-1644]!	; 0xfffff994
   20eb8:	andeq	r0, r0, r0
   20ebc:			; <UNDEFINED> instruction: 0x66666572
   20ec0:	andeq	r8, r2, ip, lsl #12
   20ec4:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   20ec8:	add	r3, pc, #784	; 0x310
   20ecc:	ldrd	r2, [r3]
   20ed0:	cmp	r1, r3
   20ed4:	cmpeq	r0, r2
   20ed8:	bne	21364 <_start@@Base+0xecac>
   20edc:	ldr	r3, [fp, #-164]	; 0xffffff5c
   20ee0:	add	r3, r3, #8
   20ee4:	str	r3, [fp, #-164]	; 0xffffff5c
   20ee8:	ldr	r1, [fp, #-168]	; 0xffffff58
   20eec:	ldr	r0, [fp, #-164]	; 0xffffff5c
   20ef0:	bl	13928 <_start@@Base+0x1270>
   20ef4:	strd	r0, [fp, #-36]	; 0xffffffdc
   20ef8:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   20efc:	add	r3, pc, #740	; 0x2e4
   20f00:	ldrd	r2, [r3]
   20f04:	cmp	r1, r3
   20f08:	cmpeq	r0, r2
   20f0c:	bne	21134 <_start@@Base+0xea7c>
   20f10:	ldr	r3, [fp, #-164]	; 0xffffff5c
   20f14:	add	r3, r3, #8
   20f18:	str	r3, [fp, #-164]	; 0xffffff5c
   20f1c:	ldr	r1, [fp, #-168]	; 0xffffff58
   20f20:	ldr	r0, [fp, #-164]	; 0xffffff5c
   20f24:	bl	13928 <_start@@Base+0x1270>
   20f28:	strd	r0, [fp, #-36]	; 0xffffffdc
   20f2c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   20f30:	mov	r2, #0
   20f34:	mov	r3, #-16777216	; 0xff000000
   20f38:	and	ip, r0, r2
   20f3c:	str	ip, [fp, #-372]	; 0xfffffe8c
   20f40:	and	r3, r1, r3
   20f44:	str	r3, [fp, #-368]	; 0xfffffe90
   20f48:	sub	r3, fp, #372	; 0x174
   20f4c:	ldrd	r2, [r3]
   20f50:	cmp	r3, #1929379840	; 0x73000000
   20f54:	cmpeq	r2, #0
   20f58:	bne	2111c <_start@@Base+0xea64>
   20f5c:	ldr	r3, [fp, #-164]	; 0xffffff5c
   20f60:	str	r3, [fp, #-40]	; 0xffffffd8
   20f64:	mov	r3, #1
   20f68:	ldr	r2, [fp, #-168]	; 0xffffff58
   20f6c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   20f70:	ldr	r0, [fp, #-160]	; 0xffffff60
   20f74:	bl	13f3c <_start@@Base+0x1884>
   20f78:	str	r0, [fp, #-164]	; 0xffffff5c
   20f7c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   20f80:	ldr	r3, [fp, #-164]	; 0xffffff5c
   20f84:	cmp	r2, r3
   20f88:	beq	21104 <_start@@Base+0xea4c>
   20f8c:	ldr	r3, [fp, #-160]	; 0xffffff60
   20f90:	ldr	r0, [r3]
   20f94:	mvn	r3, #-536870912	; 0xe0000000
   20f98:	mov	r2, #8
   20f9c:	mov	r1, #8
   20fa0:	bl	29b28 <flatcc_builder_start_vector@@Base>
   20fa4:	mov	r3, r0
   20fa8:	cmp	r3, #0
   20fac:	bne	21684 <_start@@Base+0xefcc>
   20fb0:	sub	r3, fp, #52	; 0x34
   20fb4:	ldr	r2, [fp, #-168]	; 0xffffff58
   20fb8:	ldr	r1, [fp, #-164]	; 0xffffff5c
   20fbc:	ldr	r0, [fp, #-160]	; 0xffffff60
   20fc0:	bl	13cd4 <_start@@Base+0x161c>
   20fc4:	str	r0, [fp, #-164]	; 0xffffff5c
   20fc8:	b	210a0 <_start@@Base+0xe9e8>
   20fcc:	mov	r2, #0
   20fd0:	mov	r3, #0
   20fd4:	strd	r2, [fp, #-148]	; 0xffffff6c
   20fd8:	ldr	r3, [fp, #-160]	; 0xffffff60
   20fdc:	ldr	r3, [r3]
   20fe0:	mov	r1, #1
   20fe4:	mov	r0, r3
   20fe8:	bl	291c4 <flatcc_builder_extend_vector@@Base>
   20fec:	str	r0, [fp, #-48]	; 0xffffffd0
   20ff0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   20ff4:	cmp	r3, #0
   20ff8:	beq	2168c <_start@@Base+0xefd4>
   20ffc:	ldr	r3, [fp, #-164]	; 0xffffff5c
   21000:	str	r3, [fp, #-40]	; 0xffffffd8
   21004:	sub	r3, fp, #148	; 0x94
   21008:	ldr	r2, [fp, #-168]	; 0xffffff58
   2100c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   21010:	ldr	r0, [fp, #-160]	; 0xffffff60
   21014:	bl	34788 <flatcc_json_parser_double@@Base>
   21018:	str	r0, [fp, #-164]	; 0xffffff5c
   2101c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   21020:	ldr	r3, [fp, #-164]	; 0xffffff5c
   21024:	cmp	r2, r3
   21028:	bne	21078 <_start@@Base+0xe9c0>
   2102c:	ldr	r3, [fp, #-164]	; 0xffffff5c
   21030:	str	r3, [fp, #-40]	; 0xffffffd8
   21034:	sub	r3, fp, #148	; 0x94
   21038:	str	r3, [sp]
   2103c:	ldr	r3, [pc, #436]	; 211f8 <_start@@Base+0xeb40>
   21040:	add	r3, pc, r3
   21044:	ldr	r2, [fp, #-168]	; 0xffffff58
   21048:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2104c:	ldr	r0, [fp, #-160]	; 0xffffff60
   21050:	bl	16314 <_start@@Base+0x3c5c>
   21054:	str	r0, [fp, #-164]	; 0xffffff5c
   21058:	ldr	r2, [fp, #-164]	; 0xffffff5c
   2105c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21060:	cmp	r2, r3
   21064:	beq	21694 <_start@@Base+0xefdc>
   21068:	ldr	r2, [fp, #-164]	; 0xffffff5c
   2106c:	ldr	r3, [fp, #-168]	; 0xffffff58
   21070:	cmp	r2, r3
   21074:	beq	21694 <_start@@Base+0xefdc>
   21078:	vldr	d7, [fp, #-148]	; 0xffffff6c
   2107c:	vmov.f64	d0, d7
   21080:	ldr	r0, [fp, #-48]	; 0xffffffd0
   21084:	bl	12d78 <_start@@Base+0x6c0>
   21088:	sub	r3, fp, #52	; 0x34
   2108c:	ldr	r2, [fp, #-168]	; 0xffffff58
   21090:	ldr	r1, [fp, #-164]	; 0xffffff5c
   21094:	ldr	r0, [fp, #-160]	; 0xffffff60
   21098:	bl	13dc8 <_start@@Base+0x1710>
   2109c:	str	r0, [fp, #-164]	; 0xffffff5c
   210a0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   210a4:	cmp	r3, #0
   210a8:	bne	20fcc <_start@@Base+0xe914>
   210ac:	ldr	r3, [fp, #-160]	; 0xffffff60
   210b0:	ldr	r3, [r3]
   210b4:	mov	r0, r3
   210b8:	bl	2ae24 <flatcc_builder_end_vector@@Base>
   210bc:	mov	r3, r0
   210c0:	str	r3, [fp, #-56]	; 0xffffffc8
   210c4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   210c8:	cmp	r3, #0
   210cc:	beq	2169c <_start@@Base+0xefe4>
   210d0:	ldr	r3, [fp, #-160]	; 0xffffff60
   210d4:	ldr	r3, [r3]
   210d8:	mov	r1, #33	; 0x21
   210dc:	mov	r0, r3
   210e0:	bl	2c670 <flatcc_builder_table_add_offset@@Base>
   210e4:	str	r0, [fp, #-44]	; 0xffffffd4
   210e8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   210ec:	cmp	r3, #0
   210f0:	beq	2169c <_start@@Base+0xefe4>
   210f4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   210f8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   210fc:	str	r2, [r3]
   21100:	b	21378 <_start@@Base+0xecc0>
   21104:	ldr	r2, [fp, #-168]	; 0xffffff58
   21108:	ldr	r1, [fp, #-164]	; 0xffffff5c
   2110c:	ldr	r0, [fp, #-160]	; 0xffffff60
   21110:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   21114:	str	r0, [fp, #-164]	; 0xffffff5c
   21118:	b	21378 <_start@@Base+0xecc0>
   2111c:	ldr	r2, [fp, #-168]	; 0xffffff58
   21120:	ldr	r1, [fp, #-164]	; 0xffffff5c
   21124:	ldr	r0, [fp, #-160]	; 0xffffff60
   21128:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   2112c:	str	r0, [fp, #-164]	; 0xffffff5c
   21130:	b	21378 <_start@@Base+0xecc0>
   21134:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   21138:	mvn	r2, #255	; 0xff
   2113c:	mvn	r3, #0
   21140:	and	ip, r0, r2
   21144:	str	ip, [fp, #-380]	; 0xfffffe84
   21148:	and	r3, r1, r3
   2114c:	str	r3, [fp, #-376]	; 0xfffffe88
   21150:	add	r3, pc, #152	; 0x98
   21154:	ldrd	r2, [r3]
   21158:	sub	r1, fp, #380	; 0x17c
   2115c:	ldrd	r0, [r1]
   21160:	cmp	r1, r3
   21164:	cmpeq	r0, r2
   21168:	bne	2134c <_start@@Base+0xec94>
   2116c:	ldr	r3, [fp, #-164]	; 0xffffff5c
   21170:	str	r3, [fp, #-40]	; 0xffffffd8
   21174:	mov	r3, #7
   21178:	ldr	r2, [fp, #-168]	; 0xffffff58
   2117c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   21180:	ldr	r0, [fp, #-160]	; 0xffffff60
   21184:	bl	13f3c <_start@@Base+0x1884>
   21188:	str	r0, [fp, #-164]	; 0xffffff5c
   2118c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   21190:	ldr	r3, [fp, #-164]	; 0xffffff5c
   21194:	cmp	r2, r3
   21198:	beq	21334 <_start@@Base+0xec7c>
   2119c:	ldr	r3, [fp, #-160]	; 0xffffff60
   211a0:	ldr	r0, [r3]
   211a4:	mvn	r3, #-536870912	; 0xe0000000
   211a8:	mov	r2, #8
   211ac:	mov	r1, #8
   211b0:	bl	29b28 <flatcc_builder_start_vector@@Base>
   211b4:	mov	r3, r0
   211b8:	cmp	r3, #0
   211bc:	bne	216a4 <_start@@Base+0xefec>
   211c0:	sub	r3, fp, #52	; 0x34
   211c4:	ldr	r2, [fp, #-168]	; 0xffffff58
   211c8:	ldr	r1, [fp, #-164]	; 0xffffff5c
   211cc:	ldr	r0, [fp, #-160]	; 0xffffff60
   211d0:	bl	13cd4 <_start@@Base+0x161c>
   211d4:	str	r0, [fp, #-164]	; 0xffffff5c
   211d8:	b	212d0 <_start@@Base+0xec18>
   211dc:	nop	{0}
   211e0:	svcvs	0x00725f6f
   211e4:			; <UNDEFINED> instruction: 0x76656374
   211e8:	strbvc	r6, [r2, #-3173]!	; 0xfffff39b
   211ec:	ldrbvs	r6, [pc], -pc, ror #8
   211f0:	cdpvs	3, 6, cr7, cr7, cr0, {0}
   211f4:	ldrbvs	r6, [pc], -pc, ror #24
   211f8:	andeq	r8, r2, r4, ror #5
   211fc:	strheq	r8, [r2], -ip
   21200:	mov	r2, #0
   21204:	mov	r3, #0
   21208:	strd	r2, [fp, #-156]	; 0xffffff64
   2120c:	ldr	r3, [fp, #-160]	; 0xffffff60
   21210:	ldr	r3, [r3]
   21214:	mov	r1, #1
   21218:	mov	r0, r3
   2121c:	bl	291c4 <flatcc_builder_extend_vector@@Base>
   21220:	str	r0, [fp, #-48]	; 0xffffffd0
   21224:	ldr	r3, [fp, #-48]	; 0xffffffd0
   21228:	cmp	r3, #0
   2122c:	beq	216ac <_start@@Base+0xeff4>
   21230:	ldr	r3, [fp, #-164]	; 0xffffff5c
   21234:	str	r3, [fp, #-40]	; 0xffffffd8
   21238:	sub	r3, fp, #156	; 0x9c
   2123c:	ldr	r2, [fp, #-168]	; 0xffffff58
   21240:	ldr	r1, [fp, #-40]	; 0xffffffd8
   21244:	ldr	r0, [fp, #-160]	; 0xffffff60
   21248:	bl	14b6c <_start@@Base+0x24b4>
   2124c:	str	r0, [fp, #-164]	; 0xffffff5c
   21250:	ldr	r2, [fp, #-40]	; 0xffffffd8
   21254:	ldr	r3, [fp, #-164]	; 0xffffff5c
   21258:	cmp	r2, r3
   2125c:	bne	212ac <_start@@Base+0xebf4>
   21260:	ldr	r3, [fp, #-164]	; 0xffffff5c
   21264:	str	r3, [fp, #-40]	; 0xffffffd8
   21268:	sub	r3, fp, #156	; 0x9c
   2126c:	str	r3, [sp]
   21270:	ldr	r3, [pc, #-124]	; 211fc <_start@@Base+0xeb44>
   21274:	add	r3, pc, r3
   21278:	ldr	r2, [fp, #-168]	; 0xffffff58
   2127c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   21280:	ldr	r0, [fp, #-160]	; 0xffffff60
   21284:	bl	1579c <_start@@Base+0x30e4>
   21288:	str	r0, [fp, #-164]	; 0xffffff5c
   2128c:	ldr	r2, [fp, #-164]	; 0xffffff5c
   21290:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21294:	cmp	r2, r3
   21298:	beq	216b4 <_start@@Base+0xeffc>
   2129c:	ldr	r2, [fp, #-164]	; 0xffffff5c
   212a0:	ldr	r3, [fp, #-168]	; 0xffffff58
   212a4:	cmp	r2, r3
   212a8:	beq	216b4 <_start@@Base+0xeffc>
   212ac:	ldrd	r2, [fp, #-156]	; 0xffffff64
   212b0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   212b4:	bl	12b9c <_start@@Base+0x4e4>
   212b8:	sub	r3, fp, #52	; 0x34
   212bc:	ldr	r2, [fp, #-168]	; 0xffffff58
   212c0:	ldr	r1, [fp, #-164]	; 0xffffff5c
   212c4:	ldr	r0, [fp, #-160]	; 0xffffff60
   212c8:	bl	13dc8 <_start@@Base+0x1710>
   212cc:	str	r0, [fp, #-164]	; 0xffffff5c
   212d0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   212d4:	cmp	r3, #0
   212d8:	bne	21200 <_start@@Base+0xeb48>
   212dc:	ldr	r3, [fp, #-160]	; 0xffffff60
   212e0:	ldr	r3, [r3]
   212e4:	mov	r0, r3
   212e8:	bl	2ae24 <flatcc_builder_end_vector@@Base>
   212ec:	mov	r3, r0
   212f0:	str	r3, [fp, #-56]	; 0xffffffc8
   212f4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   212f8:	cmp	r3, #0
   212fc:	beq	216bc <_start@@Base+0xf004>
   21300:	ldr	r3, [fp, #-160]	; 0xffffff60
   21304:	ldr	r3, [r3]
   21308:	mov	r1, #32
   2130c:	mov	r0, r3
   21310:	bl	2c670 <flatcc_builder_table_add_offset@@Base>
   21314:	str	r0, [fp, #-44]	; 0xffffffd4
   21318:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2131c:	cmp	r3, #0
   21320:	beq	216bc <_start@@Base+0xf004>
   21324:	ldr	r2, [fp, #-56]	; 0xffffffc8
   21328:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2132c:	str	r2, [r3]
   21330:	b	21378 <_start@@Base+0xecc0>
   21334:	ldr	r2, [fp, #-168]	; 0xffffff58
   21338:	ldr	r1, [fp, #-164]	; 0xffffff5c
   2133c:	ldr	r0, [fp, #-160]	; 0xffffff60
   21340:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   21344:	str	r0, [fp, #-164]	; 0xffffff5c
   21348:	b	21378 <_start@@Base+0xecc0>
   2134c:	ldr	r2, [fp, #-168]	; 0xffffff58
   21350:	ldr	r1, [fp, #-164]	; 0xffffff5c
   21354:	ldr	r0, [fp, #-160]	; 0xffffff60
   21358:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   2135c:	str	r0, [fp, #-164]	; 0xffffff5c
   21360:	b	21378 <_start@@Base+0xecc0>
   21364:	ldr	r2, [fp, #-168]	; 0xffffff58
   21368:	ldr	r1, [fp, #-164]	; 0xffffff5c
   2136c:	ldr	r0, [fp, #-160]	; 0xffffff60
   21370:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   21374:	str	r0, [fp, #-164]	; 0xffffff5c
   21378:	sub	r3, fp, #52	; 0x34
   2137c:	ldr	r2, [fp, #-168]	; 0xffffff58
   21380:	ldr	r1, [fp, #-164]	; 0xffffff5c
   21384:	ldr	r0, [fp, #-160]	; 0xffffff60
   21388:	bl	13b60 <_start@@Base+0x14a8>
   2138c:	str	r0, [fp, #-164]	; 0xffffff5c
   21390:	ldr	r3, [fp, #-52]	; 0xffffffcc
   21394:	cmp	r3, #0
   21398:	bne	1da70 <_start@@Base+0xb3b8>
   2139c:	ldr	r3, [fp, #-160]	; 0xffffff60
   213a0:	ldr	r3, [r3, #24]
   213a4:	cmp	r3, #0
   213a8:	bne	216c4 <_start@@Base+0xf00c>
   213ac:	ldr	r3, [fp, #-160]	; 0xffffff60
   213b0:	ldr	r3, [r3]
   213b4:	mov	r1, #3
   213b8:	mov	r0, r3
   213bc:	bl	2a69c <flatcc_builder_check_required_field@@Base>
   213c0:	mov	r3, r0
   213c4:	cmp	r3, #0
   213c8:	bne	213e8 <_start@@Base+0xed30>
   213cc:	mov	r3, #29
   213d0:	ldr	r2, [fp, #-168]	; 0xffffff58
   213d4:	ldr	r1, [fp, #-164]	; 0xffffff5c
   213d8:	ldr	r0, [fp, #-160]	; 0xffffff60
   213dc:	bl	33258 <flatcc_json_parser_set_error@@Base>
   213e0:	str	r0, [fp, #-164]	; 0xffffff5c
   213e4:	b	216d0 <_start@@Base+0xf018>
   213e8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   213ec:	ldr	r2, [fp, #-168]	; 0xffffff58
   213f0:	ldr	r1, [fp, #-164]	; 0xffffff5c
   213f4:	ldr	r0, [fp, #-160]	; 0xffffff60
   213f8:	bl	356e4 <flatcc_json_parser_finalize_unions@@Base>
   213fc:	str	r0, [fp, #-164]	; 0xffffff5c
   21400:	ldr	r3, [fp, #-160]	; 0xffffff60
   21404:	ldr	r3, [r3]
   21408:	mov	r0, r3
   2140c:	bl	2a9b0 <flatcc_builder_end_table@@Base>
   21410:	mov	r2, r0
   21414:	ldr	r3, [fp, #-172]	; 0xffffff54
   21418:	str	r2, [r3]
   2141c:	ldr	r3, [fp, #-172]	; 0xffffff54
   21420:	ldr	r3, [r3]
   21424:	cmp	r3, #0
   21428:	beq	216cc <_start@@Base+0xf014>
   2142c:	ldr	r3, [fp, #-164]	; 0xffffff5c
   21430:	b	216e8 <_start@@Base+0xf030>
   21434:	nop	{0}
   21438:	b	216d0 <_start@@Base+0xf018>
   2143c:	nop	{0}
   21440:	b	216d0 <_start@@Base+0xf018>
   21444:	nop	{0}
   21448:	b	216d0 <_start@@Base+0xf018>
   2144c:	nop	{0}
   21450:	b	216d0 <_start@@Base+0xf018>
   21454:	nop	{0}
   21458:	b	216d0 <_start@@Base+0xf018>
   2145c:	nop	{0}
   21460:	b	216d0 <_start@@Base+0xf018>
   21464:	nop	{0}
   21468:	b	216d0 <_start@@Base+0xf018>
   2146c:	nop	{0}
   21470:	b	216d0 <_start@@Base+0xf018>
   21474:	nop	{0}
   21478:	b	216d0 <_start@@Base+0xf018>
   2147c:	nop	{0}
   21480:	b	216d0 <_start@@Base+0xf018>
   21484:	nop	{0}
   21488:	b	216d0 <_start@@Base+0xf018>
   2148c:	nop	{0}
   21490:	b	216d0 <_start@@Base+0xf018>
   21494:	nop	{0}
   21498:	b	216d0 <_start@@Base+0xf018>
   2149c:	nop	{0}
   214a0:	b	216d0 <_start@@Base+0xf018>
   214a4:	nop	{0}
   214a8:	b	216d0 <_start@@Base+0xf018>
   214ac:	nop	{0}
   214b0:	b	216d0 <_start@@Base+0xf018>
   214b4:	nop	{0}
   214b8:	b	216d0 <_start@@Base+0xf018>
   214bc:	nop	{0}
   214c0:	b	216d0 <_start@@Base+0xf018>
   214c4:	nop	{0}
   214c8:	b	216d0 <_start@@Base+0xf018>
   214cc:	nop	{0}
   214d0:	b	216d0 <_start@@Base+0xf018>
   214d4:	nop	{0}
   214d8:	b	216d0 <_start@@Base+0xf018>
   214dc:	nop	{0}
   214e0:	b	216d0 <_start@@Base+0xf018>
   214e4:	nop	{0}
   214e8:	b	216d0 <_start@@Base+0xf018>
   214ec:	nop	{0}
   214f0:	b	216d0 <_start@@Base+0xf018>
   214f4:	nop	{0}
   214f8:	b	216d0 <_start@@Base+0xf018>
   214fc:	nop	{0}
   21500:	b	216d0 <_start@@Base+0xf018>
   21504:	nop	{0}
   21508:	b	216d0 <_start@@Base+0xf018>
   2150c:	nop	{0}
   21510:	b	216d0 <_start@@Base+0xf018>
   21514:	nop	{0}
   21518:	b	216d0 <_start@@Base+0xf018>
   2151c:	nop	{0}
   21520:	b	216d0 <_start@@Base+0xf018>
   21524:	nop	{0}
   21528:	b	216d0 <_start@@Base+0xf018>
   2152c:	nop	{0}
   21530:	b	216d0 <_start@@Base+0xf018>
   21534:	nop	{0}
   21538:	b	216d0 <_start@@Base+0xf018>
   2153c:	nop	{0}
   21540:	b	216d0 <_start@@Base+0xf018>
   21544:	nop	{0}
   21548:	b	216d0 <_start@@Base+0xf018>
   2154c:	nop	{0}
   21550:	b	216d0 <_start@@Base+0xf018>
   21554:	nop	{0}
   21558:	b	216d0 <_start@@Base+0xf018>
   2155c:	nop	{0}
   21560:	b	216d0 <_start@@Base+0xf018>
   21564:	nop	{0}
   21568:	b	216d0 <_start@@Base+0xf018>
   2156c:	nop	{0}
   21570:	b	216d0 <_start@@Base+0xf018>
   21574:	nop	{0}
   21578:	b	216d0 <_start@@Base+0xf018>
   2157c:	nop	{0}
   21580:	b	216d0 <_start@@Base+0xf018>
   21584:	nop	{0}
   21588:	b	216d0 <_start@@Base+0xf018>
   2158c:	nop	{0}
   21590:	b	216d0 <_start@@Base+0xf018>
   21594:	nop	{0}
   21598:	b	216d0 <_start@@Base+0xf018>
   2159c:	nop	{0}
   215a0:	b	216d0 <_start@@Base+0xf018>
   215a4:	nop	{0}
   215a8:	b	216d0 <_start@@Base+0xf018>
   215ac:	nop	{0}
   215b0:	b	216d0 <_start@@Base+0xf018>
   215b4:	nop	{0}
   215b8:	b	216d0 <_start@@Base+0xf018>
   215bc:	nop	{0}
   215c0:	b	216d0 <_start@@Base+0xf018>
   215c4:	nop	{0}
   215c8:	b	216d0 <_start@@Base+0xf018>
   215cc:	nop	{0}
   215d0:	b	216d0 <_start@@Base+0xf018>
   215d4:	nop	{0}
   215d8:	b	216d0 <_start@@Base+0xf018>
   215dc:	nop	{0}
   215e0:	b	216d0 <_start@@Base+0xf018>
   215e4:	nop	{0}
   215e8:	b	216d0 <_start@@Base+0xf018>
   215ec:	nop	{0}
   215f0:	b	216d0 <_start@@Base+0xf018>
   215f4:	nop	{0}
   215f8:	b	216d0 <_start@@Base+0xf018>
   215fc:	nop	{0}
   21600:	b	216d0 <_start@@Base+0xf018>
   21604:	nop	{0}
   21608:	b	216d0 <_start@@Base+0xf018>
   2160c:	nop	{0}
   21610:	b	216d0 <_start@@Base+0xf018>
   21614:	nop	{0}
   21618:	b	216d0 <_start@@Base+0xf018>
   2161c:	nop	{0}
   21620:	b	216d0 <_start@@Base+0xf018>
   21624:	nop	{0}
   21628:	b	216d0 <_start@@Base+0xf018>
   2162c:	nop	{0}
   21630:	b	216d0 <_start@@Base+0xf018>
   21634:	nop	{0}
   21638:	b	216d0 <_start@@Base+0xf018>
   2163c:	nop	{0}
   21640:	b	216d0 <_start@@Base+0xf018>
   21644:	nop	{0}
   21648:	b	216d0 <_start@@Base+0xf018>
   2164c:	nop	{0}
   21650:	b	216d0 <_start@@Base+0xf018>
   21654:	nop	{0}
   21658:	b	216d0 <_start@@Base+0xf018>
   2165c:	nop	{0}
   21660:	b	216d0 <_start@@Base+0xf018>
   21664:	nop	{0}
   21668:	b	216d0 <_start@@Base+0xf018>
   2166c:	nop	{0}
   21670:	b	216d0 <_start@@Base+0xf018>
   21674:	nop	{0}
   21678:	b	216d0 <_start@@Base+0xf018>
   2167c:	nop	{0}
   21680:	b	216d0 <_start@@Base+0xf018>
   21684:	nop	{0}
   21688:	b	216d0 <_start@@Base+0xf018>
   2168c:	nop	{0}
   21690:	b	216d0 <_start@@Base+0xf018>
   21694:	nop	{0}
   21698:	b	216d0 <_start@@Base+0xf018>
   2169c:	nop	{0}
   216a0:	b	216d0 <_start@@Base+0xf018>
   216a4:	nop	{0}
   216a8:	b	216d0 <_start@@Base+0xf018>
   216ac:	nop	{0}
   216b0:	b	216d0 <_start@@Base+0xf018>
   216b4:	nop	{0}
   216b8:	b	216d0 <_start@@Base+0xf018>
   216bc:	nop	{0}
   216c0:	b	216d0 <_start@@Base+0xf018>
   216c4:	nop	{0}
   216c8:	b	216d0 <_start@@Base+0xf018>
   216cc:	nop	{0}
   216d0:	mov	r3, #33	; 0x21
   216d4:	ldr	r2, [fp, #-168]	; 0xffffff58
   216d8:	ldr	r1, [fp, #-164]	; 0xffffff5c
   216dc:	ldr	r0, [fp, #-160]	; 0xffffff60
   216e0:	bl	33258 <flatcc_json_parser_set_error@@Base>
   216e4:	mov	r3, r0
   216e8:	mov	r0, r3
   216ec:	sub	sp, fp, #28
   216f0:	ldrd	r4, [sp]
   216f4:	ldrd	r6, [sp, #8]
   216f8:	ldrd	r8, [sp, #16]
   216fc:	ldr	fp, [sp, #24]
   21700:	add	sp, sp, #28
   21704:	pop	{pc}		; (ldr pc, [sp], #4)
   21708:	strd	r4, [sp, #-32]!	; 0xffffffe0
   2170c:	strd	r6, [sp, #8]
   21710:	strd	r8, [sp, #16]
   21714:	str	fp, [sp, #24]
   21718:	str	lr, [sp, #28]
   2171c:	add	fp, sp, #28
   21720:	sub	sp, sp, #200	; 0xc8
   21724:	str	r0, [fp, #-136]	; 0xffffff78
   21728:	str	r1, [fp, #-140]	; 0xffffff74
   2172c:	str	r2, [fp, #-144]	; 0xffffff70
   21730:	str	r3, [fp, #-148]	; 0xffffff6c
   21734:	ldr	r2, [fp, #-148]	; 0xffffff6c
   21738:	mov	r3, #0
   2173c:	str	r3, [r2]
   21740:	ldr	r3, [fp, #-136]	; 0xffffff78
   21744:	ldr	r3, [r3]
   21748:	mov	r1, #12
   2174c:	mov	r0, r3
   21750:	bl	29dfc <flatcc_builder_start_table@@Base>
   21754:	mov	r3, r0
   21758:	cmp	r3, #0
   2175c:	bne	22b8c <_start@@Base+0x104d4>
   21760:	sub	r3, fp, #56	; 0x38
   21764:	ldr	r2, [fp, #-144]	; 0xffffff70
   21768:	ldr	r1, [fp, #-140]	; 0xffffff74
   2176c:	ldr	r0, [fp, #-136]	; 0xffffff78
   21770:	bl	13a6c <_start@@Base+0x13b4>
   21774:	str	r0, [fp, #-140]	; 0xffffff74
   21778:	b	22b3c <_start@@Base+0x10484>
   2177c:	ldr	r2, [fp, #-144]	; 0xffffff70
   21780:	ldr	r1, [fp, #-140]	; 0xffffff74
   21784:	ldr	r0, [fp, #-136]	; 0xffffff78
   21788:	bl	135f4 <_start@@Base+0xf3c>
   2178c:	str	r0, [fp, #-140]	; 0xffffff74
   21790:	ldr	r1, [fp, #-144]	; 0xffffff70
   21794:	ldr	r0, [fp, #-140]	; 0xffffff74
   21798:	bl	13928 <_start@@Base+0x1270>
   2179c:	strd	r0, [fp, #-36]	; 0xffffffdc
   217a0:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   217a4:	mvn	r2, #0
   217a8:	movw	r3, #65535	; 0xffff
   217ac:	movt	r3, #26935	; 0x6937
   217b0:	cmp	r1, r3
   217b4:	cmpeq	r0, r2
   217b8:	bhi	21f2c <_start@@Base+0xf874>
   217bc:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   217c0:	add	r3, pc, #720	; 0x2d0
   217c4:	ldrd	r2, [r3]
   217c8:	cmp	r1, r3
   217cc:	cmpeq	r0, r2
   217d0:	bhi	21ab8 <_start@@Base+0xf400>
   217d4:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   217d8:	mov	r2, #0
   217dc:	mvn	r3, #255	; 0xff
   217e0:	and	r4, r0, r2
   217e4:	and	r5, r1, r3
   217e8:	add	r3, pc, #688	; 0x2b0
   217ec:	ldrd	r2, [r3]
   217f0:	cmp	r5, r3
   217f4:	cmpeq	r4, r2
   217f8:	bne	2192c <_start@@Base+0xf274>
   217fc:	ldr	r3, [fp, #-140]	; 0xffffff74
   21800:	str	r3, [fp, #-40]	; 0xffffffd8
   21804:	mov	r3, #3
   21808:	ldr	r2, [fp, #-144]	; 0xffffff70
   2180c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   21810:	ldr	r0, [fp, #-136]	; 0xffffff78
   21814:	bl	13f3c <_start@@Base+0x1884>
   21818:	str	r0, [fp, #-140]	; 0xffffff74
   2181c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   21820:	ldr	r3, [fp, #-140]	; 0xffffff74
   21824:	cmp	r2, r3
   21828:	beq	21914 <_start@@Base+0xf25c>
   2182c:	mov	r2, #0
   21830:	mov	r3, #0
   21834:	strd	r2, [fp, #-68]	; 0xffffffbc
   21838:	ldr	r3, [fp, #-140]	; 0xffffff74
   2183c:	str	r3, [fp, #-40]	; 0xffffffd8
   21840:	sub	r3, fp, #68	; 0x44
   21844:	ldr	r2, [fp, #-144]	; 0xffffff70
   21848:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2184c:	ldr	r0, [fp, #-136]	; 0xffffff78
   21850:	bl	34788 <flatcc_json_parser_double@@Base>
   21854:	str	r0, [fp, #-140]	; 0xffffff74
   21858:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2185c:	ldr	r3, [fp, #-140]	; 0xffffff74
   21860:	cmp	r2, r3
   21864:	bne	218b4 <_start@@Base+0xf1fc>
   21868:	ldr	r3, [fp, #-140]	; 0xffffff74
   2186c:	str	r3, [fp, #-40]	; 0xffffffd8
   21870:	sub	r3, fp, #68	; 0x44
   21874:	str	r3, [sp]
   21878:	ldr	r3, [pc, #560]	; 21ab0 <_start@@Base+0xf3f8>
   2187c:	add	r3, pc, r3
   21880:	ldr	r2, [fp, #-144]	; 0xffffff70
   21884:	ldr	r1, [fp, #-40]	; 0xffffffd8
   21888:	ldr	r0, [fp, #-136]	; 0xffffff78
   2188c:	bl	16314 <_start@@Base+0x3c5c>
   21890:	str	r0, [fp, #-140]	; 0xffffff74
   21894:	ldr	r2, [fp, #-140]	; 0xffffff74
   21898:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2189c:	cmp	r2, r3
   218a0:	beq	22b94 <_start@@Base+0x104dc>
   218a4:	ldr	r2, [fp, #-140]	; 0xffffff74
   218a8:	ldr	r3, [fp, #-144]	; 0xffffff70
   218ac:	cmp	r2, r3
   218b0:	beq	22b94 <_start@@Base+0x104dc>
   218b4:	vldr	d7, [fp, #-68]	; 0xffffffbc
   218b8:	vcmp.f64	d7, #0.0
   218bc:	vmrs	APSR_nzcv, fpscr
   218c0:	bne	218d8 <_start@@Base+0xf220>
   218c4:	ldr	r3, [fp, #-136]	; 0xffffff78
   218c8:	ldr	r3, [r3, #8]
   218cc:	and	r3, r3, #2
   218d0:	cmp	r3, #0
   218d4:	beq	22b24 <_start@@Base+0x1046c>
   218d8:	ldr	r3, [fp, #-136]	; 0xffffff78
   218dc:	ldr	r0, [r3]
   218e0:	mov	r3, #8
   218e4:	mov	r2, #8
   218e8:	mov	r1, #9
   218ec:	bl	2c400 <flatcc_builder_table_add@@Base>
   218f0:	str	r0, [fp, #-44]	; 0xffffffd4
   218f4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   218f8:	cmp	r3, #0
   218fc:	beq	22b9c <_start@@Base+0x104e4>
   21900:	vldr	d7, [fp, #-68]	; 0xffffffbc
   21904:	vmov.f64	d0, d7
   21908:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2190c:	bl	12d78 <_start@@Base+0x6c0>
   21910:	b	22b24 <_start@@Base+0x1046c>
   21914:	ldr	r2, [fp, #-144]	; 0xffffff70
   21918:	ldr	r1, [fp, #-140]	; 0xffffff74
   2191c:	ldr	r0, [fp, #-136]	; 0xffffff78
   21920:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   21924:	str	r0, [fp, #-140]	; 0xffffff74
   21928:	b	22b24 <_start@@Base+0x1046c>
   2192c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   21930:	mov	r2, #0
   21934:	mvn	r3, #255	; 0xff
   21938:	and	r6, r0, r2
   2193c:	and	r7, r1, r3
   21940:	add	r3, pc, #352	; 0x160
   21944:	ldrd	r2, [r3]
   21948:	cmp	r7, r3
   2194c:	cmpeq	r6, r2
   21950:	bne	21a80 <_start@@Base+0xf3c8>
   21954:	ldr	r3, [fp, #-140]	; 0xffffff74
   21958:	str	r3, [fp, #-40]	; 0xffffffd8
   2195c:	mov	r3, #3
   21960:	ldr	r2, [fp, #-144]	; 0xffffff70
   21964:	ldr	r1, [fp, #-40]	; 0xffffffd8
   21968:	ldr	r0, [fp, #-136]	; 0xffffff78
   2196c:	bl	13f3c <_start@@Base+0x1884>
   21970:	str	r0, [fp, #-140]	; 0xffffff74
   21974:	ldr	r2, [fp, #-40]	; 0xffffffd8
   21978:	ldr	r3, [fp, #-140]	; 0xffffff74
   2197c:	cmp	r2, r3
   21980:	beq	21a68 <_start@@Base+0xf3b0>
   21984:	mov	r3, #0
   21988:	str	r3, [fp, #-72]	; 0xffffffb8
   2198c:	ldr	r3, [fp, #-140]	; 0xffffff74
   21990:	str	r3, [fp, #-40]	; 0xffffffd8
   21994:	sub	r3, fp, #72	; 0x48
   21998:	ldr	r2, [fp, #-144]	; 0xffffff70
   2199c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   219a0:	ldr	r0, [fp, #-136]	; 0xffffff78
   219a4:	bl	34938 <flatcc_json_parser_float@@Base>
   219a8:	str	r0, [fp, #-140]	; 0xffffff74
   219ac:	ldr	r2, [fp, #-40]	; 0xffffffd8
   219b0:	ldr	r3, [fp, #-140]	; 0xffffff74
   219b4:	cmp	r2, r3
   219b8:	bne	21a08 <_start@@Base+0xf350>
   219bc:	ldr	r3, [fp, #-140]	; 0xffffff74
   219c0:	str	r3, [fp, #-40]	; 0xffffffd8
   219c4:	sub	r3, fp, #72	; 0x48
   219c8:	str	r3, [sp]
   219cc:	ldr	r3, [pc, #224]	; 21ab4 <_start@@Base+0xf3fc>
   219d0:	add	r3, pc, r3
   219d4:	ldr	r2, [fp, #-144]	; 0xffffff70
   219d8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   219dc:	ldr	r0, [fp, #-136]	; 0xffffff78
   219e0:	bl	16134 <_start@@Base+0x3a7c>
   219e4:	str	r0, [fp, #-140]	; 0xffffff74
   219e8:	ldr	r2, [fp, #-140]	; 0xffffff74
   219ec:	ldr	r3, [fp, #-40]	; 0xffffffd8
   219f0:	cmp	r2, r3
   219f4:	beq	22ba4 <_start@@Base+0x104ec>
   219f8:	ldr	r2, [fp, #-140]	; 0xffffff74
   219fc:	ldr	r3, [fp, #-144]	; 0xffffff70
   21a00:	cmp	r2, r3
   21a04:	beq	22ba4 <_start@@Base+0x104ec>
   21a08:	vldr	s15, [fp, #-72]	; 0xffffffb8
   21a0c:	vcmp.f32	s15, #0.0
   21a10:	vmrs	APSR_nzcv, fpscr
   21a14:	bne	21a2c <_start@@Base+0xf374>
   21a18:	ldr	r3, [fp, #-136]	; 0xffffff78
   21a1c:	ldr	r3, [r3, #8]
   21a20:	and	r3, r3, #2
   21a24:	cmp	r3, #0
   21a28:	beq	22b24 <_start@@Base+0x1046c>
   21a2c:	ldr	r3, [fp, #-136]	; 0xffffff78
   21a30:	ldr	r0, [r3]
   21a34:	mov	r3, #4
   21a38:	mov	r2, #4
   21a3c:	mov	r1, #8
   21a40:	bl	2c400 <flatcc_builder_table_add@@Base>
   21a44:	str	r0, [fp, #-44]	; 0xffffffd4
   21a48:	ldr	r3, [fp, #-44]	; 0xffffffd4
   21a4c:	cmp	r3, #0
   21a50:	beq	22bac <_start@@Base+0x104f4>
   21a54:	vldr	s15, [fp, #-72]	; 0xffffffb8
   21a58:	vmov.f32	s0, s15
   21a5c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   21a60:	bl	12c8c <_start@@Base+0x5d4>
   21a64:	b	22b24 <_start@@Base+0x1046c>
   21a68:	ldr	r2, [fp, #-144]	; 0xffffff70
   21a6c:	ldr	r1, [fp, #-140]	; 0xffffff74
   21a70:	ldr	r0, [fp, #-136]	; 0xffffff78
   21a74:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   21a78:	str	r0, [fp, #-140]	; 0xffffff74
   21a7c:	b	22b24 <_start@@Base+0x1046c>
   21a80:	ldr	r2, [fp, #-144]	; 0xffffff70
   21a84:	ldr	r1, [fp, #-140]	; 0xffffff74
   21a88:	ldr	r0, [fp, #-136]	; 0xffffff78
   21a8c:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   21a90:	str	r0, [fp, #-140]	; 0xffffff74
   21a94:	b	22b24 <_start@@Base+0x1046c>
   21a98:			; <UNDEFINED> instruction: 0xffffffff
   21a9c:	ldmdbvs	r1!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, sl, ip, sp}
   21aa0:	andeq	r0, r0, r0
   21aa4:	ldrtvs	r3, [r6], -r0, lsl #8
   21aa8:	andeq	r0, r0, r0
   21aac:	ldrtvs	r3, [r3], -r0, lsl #4
   21ab0:	andeq	r7, r2, r0, asr #21
   21ab4:	andeq	r7, r2, r8, ror r9
   21ab8:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   21abc:	add	r3, pc, #724	; 0x2d4
   21ac0:	ldrd	r2, [r3]
   21ac4:	cmp	r1, r3
   21ac8:	cmpeq	r0, r2
   21acc:	bhi	21c38 <_start@@Base+0xf580>
   21ad0:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   21ad4:	mov	r2, #0
   21ad8:	mvn	r3, #255	; 0xff
   21adc:	and	r8, r0, r2
   21ae0:	and	r9, r1, r3
   21ae4:	add	r3, pc, #692	; 0x2b4
   21ae8:	ldrd	r2, [r3]
   21aec:	cmp	r9, r3
   21af0:	cmpeq	r8, r2
   21af4:	bne	21c20 <_start@@Base+0xf568>
   21af8:	ldr	r3, [fp, #-140]	; 0xffffff74
   21afc:	str	r3, [fp, #-40]	; 0xffffffd8
   21b00:	mov	r3, #3
   21b04:	ldr	r2, [fp, #-144]	; 0xffffff70
   21b08:	ldr	r1, [fp, #-40]	; 0xffffffd8
   21b0c:	ldr	r0, [fp, #-136]	; 0xffffff78
   21b10:	bl	13f3c <_start@@Base+0x1884>
   21b14:	str	r0, [fp, #-140]	; 0xffffff74
   21b18:	ldr	r2, [fp, #-40]	; 0xffffffd8
   21b1c:	ldr	r3, [fp, #-140]	; 0xffffff74
   21b20:	cmp	r2, r3
   21b24:	beq	21c08 <_start@@Base+0xf550>
   21b28:	mov	r3, #0
   21b2c:	strh	r3, [fp, #-74]	; 0xffffffb6
   21b30:	ldr	r3, [fp, #-140]	; 0xffffff74
   21b34:	str	r3, [fp, #-40]	; 0xffffffd8
   21b38:	sub	r3, fp, #74	; 0x4a
   21b3c:	ldr	r2, [fp, #-144]	; 0xffffff70
   21b40:	ldr	r1, [fp, #-40]	; 0xffffffd8
   21b44:	ldr	r0, [fp, #-136]	; 0xffffff78
   21b48:	bl	14d28 <_start@@Base+0x2670>
   21b4c:	str	r0, [fp, #-140]	; 0xffffff74
   21b50:	ldr	r2, [fp, #-40]	; 0xffffffd8
   21b54:	ldr	r3, [fp, #-140]	; 0xffffff74
   21b58:	cmp	r2, r3
   21b5c:	bne	21bac <_start@@Base+0xf4f4>
   21b60:	ldr	r3, [fp, #-140]	; 0xffffff74
   21b64:	str	r3, [fp, #-40]	; 0xffffffd8
   21b68:	sub	r3, fp, #74	; 0x4a
   21b6c:	str	r3, [sp]
   21b70:	ldr	r3, [pc, #568]	; 21db0 <_start@@Base+0xf6f8>
   21b74:	add	r3, pc, r3
   21b78:	ldr	r2, [fp, #-144]	; 0xffffff70
   21b7c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   21b80:	ldr	r0, [fp, #-136]	; 0xffffff78
   21b84:	bl	15b70 <_start@@Base+0x34b8>
   21b88:	str	r0, [fp, #-140]	; 0xffffff74
   21b8c:	ldr	r2, [fp, #-140]	; 0xffffff74
   21b90:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21b94:	cmp	r2, r3
   21b98:	beq	22bb4 <_start@@Base+0x104fc>
   21b9c:	ldr	r2, [fp, #-140]	; 0xffffff74
   21ba0:	ldr	r3, [fp, #-144]	; 0xffffff70
   21ba4:	cmp	r2, r3
   21ba8:	beq	22bb4 <_start@@Base+0x104fc>
   21bac:	ldrsh	r3, [fp, #-74]	; 0xffffffb6
   21bb0:	cmp	r3, #0
   21bb4:	bne	21bcc <_start@@Base+0xf514>
   21bb8:	ldr	r3, [fp, #-136]	; 0xffffff78
   21bbc:	ldr	r3, [r3, #8]
   21bc0:	and	r3, r3, #2
   21bc4:	cmp	r3, #0
   21bc8:	beq	22b24 <_start@@Base+0x1046c>
   21bcc:	ldr	r3, [fp, #-136]	; 0xffffff78
   21bd0:	ldr	r0, [r3]
   21bd4:	mov	r3, #2
   21bd8:	mov	r2, #2
   21bdc:	mov	r1, #2
   21be0:	bl	2c400 <flatcc_builder_table_add@@Base>
   21be4:	str	r0, [fp, #-44]	; 0xffffffd4
   21be8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   21bec:	cmp	r3, #0
   21bf0:	beq	22bbc <_start@@Base+0x10504>
   21bf4:	ldrsh	r3, [fp, #-74]	; 0xffffffb6
   21bf8:	mov	r1, r3
   21bfc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   21c00:	bl	12ac4 <_start@@Base+0x40c>
   21c04:	b	22b24 <_start@@Base+0x1046c>
   21c08:	ldr	r2, [fp, #-144]	; 0xffffff70
   21c0c:	ldr	r1, [fp, #-140]	; 0xffffff74
   21c10:	ldr	r0, [fp, #-136]	; 0xffffff78
   21c14:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   21c18:	str	r0, [fp, #-140]	; 0xffffff74
   21c1c:	b	22b24 <_start@@Base+0x1046c>
   21c20:	ldr	r2, [fp, #-144]	; 0xffffff70
   21c24:	ldr	r1, [fp, #-140]	; 0xffffff74
   21c28:	ldr	r0, [fp, #-136]	; 0xffffff78
   21c2c:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   21c30:	str	r0, [fp, #-140]	; 0xffffff74
   21c34:	b	22b24 <_start@@Base+0x1046c>
   21c38:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   21c3c:	mov	r2, #0
   21c40:	mvn	r3, #255	; 0xff
   21c44:	and	ip, r0, r2
   21c48:	str	ip, [fp, #-156]	; 0xffffff64
   21c4c:	and	r3, r1, r3
   21c50:	str	r3, [fp, #-152]	; 0xffffff68
   21c54:	add	r3, pc, #332	; 0x14c
   21c58:	ldrd	r2, [r3]
   21c5c:	ldrd	r0, [fp, #-156]	; 0xffffff64
   21c60:	cmp	r1, r3
   21c64:	cmpeq	r0, r2
   21c68:	bne	21db8 <_start@@Base+0xf700>
   21c6c:	ldr	r3, [fp, #-140]	; 0xffffff74
   21c70:	str	r3, [fp, #-40]	; 0xffffffd8
   21c74:	mov	r3, #3
   21c78:	ldr	r2, [fp, #-144]	; 0xffffff70
   21c7c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   21c80:	ldr	r0, [fp, #-136]	; 0xffffff78
   21c84:	bl	13f3c <_start@@Base+0x1884>
   21c88:	str	r0, [fp, #-140]	; 0xffffff74
   21c8c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   21c90:	ldr	r3, [fp, #-140]	; 0xffffff74
   21c94:	cmp	r2, r3
   21c98:	beq	21d7c <_start@@Base+0xf6c4>
   21c9c:	mov	r2, #0
   21ca0:	mov	r3, #0
   21ca4:	strd	r2, [fp, #-84]	; 0xffffffac
   21ca8:	ldr	r3, [fp, #-140]	; 0xffffff74
   21cac:	str	r3, [fp, #-40]	; 0xffffffd8
   21cb0:	sub	r3, fp, #84	; 0x54
   21cb4:	ldr	r2, [fp, #-144]	; 0xffffff70
   21cb8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   21cbc:	ldr	r0, [fp, #-136]	; 0xffffff78
   21cc0:	bl	14b6c <_start@@Base+0x24b4>
   21cc4:	str	r0, [fp, #-140]	; 0xffffff74
   21cc8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   21ccc:	ldr	r3, [fp, #-140]	; 0xffffff74
   21cd0:	cmp	r2, r3
   21cd4:	bne	21d24 <_start@@Base+0xf66c>
   21cd8:	ldr	r3, [fp, #-140]	; 0xffffff74
   21cdc:	str	r3, [fp, #-40]	; 0xffffffd8
   21ce0:	sub	r3, fp, #84	; 0x54
   21ce4:	str	r3, [sp]
   21ce8:	ldr	r3, [pc, #196]	; 21db4 <_start@@Base+0xf6fc>
   21cec:	add	r3, pc, r3
   21cf0:	ldr	r2, [fp, #-144]	; 0xffffff70
   21cf4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   21cf8:	ldr	r0, [fp, #-136]	; 0xffffff78
   21cfc:	bl	1579c <_start@@Base+0x30e4>
   21d00:	str	r0, [fp, #-140]	; 0xffffff74
   21d04:	ldr	r2, [fp, #-140]	; 0xffffff74
   21d08:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21d0c:	cmp	r2, r3
   21d10:	beq	22bc4 <_start@@Base+0x1050c>
   21d14:	ldr	r2, [fp, #-140]	; 0xffffff74
   21d18:	ldr	r3, [fp, #-144]	; 0xffffff70
   21d1c:	cmp	r2, r3
   21d20:	beq	22bc4 <_start@@Base+0x1050c>
   21d24:	ldrd	r2, [fp, #-84]	; 0xffffffac
   21d28:	orrs	r3, r2, r3
   21d2c:	bne	21d44 <_start@@Base+0xf68c>
   21d30:	ldr	r3, [fp, #-136]	; 0xffffff78
   21d34:	ldr	r3, [r3, #8]
   21d38:	and	r3, r3, #2
   21d3c:	cmp	r3, #0
   21d40:	beq	22b24 <_start@@Base+0x1046c>
   21d44:	ldr	r3, [fp, #-136]	; 0xffffff78
   21d48:	ldr	r0, [r3]
   21d4c:	mov	r3, #8
   21d50:	mov	r2, #8
   21d54:	mov	r1, #6
   21d58:	bl	2c400 <flatcc_builder_table_add@@Base>
   21d5c:	str	r0, [fp, #-44]	; 0xffffffd4
   21d60:	ldr	r3, [fp, #-44]	; 0xffffffd4
   21d64:	cmp	r3, #0
   21d68:	beq	22bcc <_start@@Base+0x10514>
   21d6c:	ldrd	r2, [fp, #-84]	; 0xffffffac
   21d70:	ldr	r0, [fp, #-44]	; 0xffffffd4
   21d74:	bl	12b9c <_start@@Base+0x4e4>
   21d78:	b	22b24 <_start@@Base+0x1046c>
   21d7c:	ldr	r2, [fp, #-144]	; 0xffffff70
   21d80:	ldr	r1, [fp, #-140]	; 0xffffff74
   21d84:	ldr	r0, [fp, #-136]	; 0xffffff78
   21d88:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   21d8c:	str	r0, [fp, #-140]	; 0xffffff74
   21d90:	b	22b24 <_start@@Base+0x1046c>
   21d94:	nop	{0}
   21d98:			; <UNDEFINED> instruction: 0xffffffff
   21d9c:	ldmdbvs	r3!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, ip, sp}
   21da0:	andeq	r0, r0, r0
   21da4:	ldmdbvs	r1!, {r9, sl, ip, sp}
   21da8:	andeq	r0, r0, r0
   21dac:	ldmdbvs	r6!, {sl, ip, sp}
   21db0:	andeq	r7, r2, r0, ror #15
   21db4:	andeq	r7, r2, r4, ror r6
   21db8:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   21dbc:	mov	r2, #0
   21dc0:	mvn	r3, #255	; 0xff
   21dc4:	and	ip, r0, r2
   21dc8:	str	ip, [fp, #-164]	; 0xffffff5c
   21dcc:	and	r3, r1, r3
   21dd0:	str	r3, [fp, #-160]	; 0xffffff60
   21dd4:	add	r3, pc, #764	; 0x2fc
   21dd8:	ldrd	r2, [r3]
   21ddc:	ldrd	r0, [fp, #-164]	; 0xffffff5c
   21de0:	cmp	r1, r3
   21de4:	cmpeq	r0, r2
   21de8:	bne	21f14 <_start@@Base+0xf85c>
   21dec:	ldr	r3, [fp, #-140]	; 0xffffff74
   21df0:	str	r3, [fp, #-40]	; 0xffffffd8
   21df4:	mov	r3, #3
   21df8:	ldr	r2, [fp, #-144]	; 0xffffff70
   21dfc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   21e00:	ldr	r0, [fp, #-136]	; 0xffffff78
   21e04:	bl	13f3c <_start@@Base+0x1884>
   21e08:	str	r0, [fp, #-140]	; 0xffffff74
   21e0c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   21e10:	ldr	r3, [fp, #-140]	; 0xffffff74
   21e14:	cmp	r2, r3
   21e18:	beq	21efc <_start@@Base+0xf844>
   21e1c:	mov	r3, #0
   21e20:	str	r3, [fp, #-88]	; 0xffffffa8
   21e24:	ldr	r3, [fp, #-140]	; 0xffffff74
   21e28:	str	r3, [fp, #-40]	; 0xffffffd8
   21e2c:	sub	r3, fp, #88	; 0x58
   21e30:	ldr	r2, [fp, #-144]	; 0xffffff70
   21e34:	ldr	r1, [fp, #-40]	; 0xffffffd8
   21e38:	ldr	r0, [fp, #-136]	; 0xffffff78
   21e3c:	bl	14c4c <_start@@Base+0x2594>
   21e40:	str	r0, [fp, #-140]	; 0xffffff74
   21e44:	ldr	r2, [fp, #-40]	; 0xffffffd8
   21e48:	ldr	r3, [fp, #-140]	; 0xffffff74
   21e4c:	cmp	r2, r3
   21e50:	bne	21ea0 <_start@@Base+0xf7e8>
   21e54:	ldr	r3, [fp, #-140]	; 0xffffff74
   21e58:	str	r3, [fp, #-40]	; 0xffffffd8
   21e5c:	sub	r3, fp, #88	; 0x58
   21e60:	str	r3, [sp]
   21e64:	ldr	r3, [pc, #644]	; 220f0 <_start@@Base+0xfa38>
   21e68:	add	r3, pc, r3
   21e6c:	ldr	r2, [fp, #-144]	; 0xffffff70
   21e70:	ldr	r1, [fp, #-40]	; 0xffffffd8
   21e74:	ldr	r0, [fp, #-136]	; 0xffffff78
   21e78:	bl	15990 <_start@@Base+0x32d8>
   21e7c:	str	r0, [fp, #-140]	; 0xffffff74
   21e80:	ldr	r2, [fp, #-140]	; 0xffffff74
   21e84:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21e88:	cmp	r2, r3
   21e8c:	beq	22bd4 <_start@@Base+0x1051c>
   21e90:	ldr	r2, [fp, #-140]	; 0xffffff74
   21e94:	ldr	r3, [fp, #-144]	; 0xffffff70
   21e98:	cmp	r2, r3
   21e9c:	beq	22bd4 <_start@@Base+0x1051c>
   21ea0:	ldr	r3, [fp, #-88]	; 0xffffffa8
   21ea4:	cmp	r3, #0
   21ea8:	bne	21ec0 <_start@@Base+0xf808>
   21eac:	ldr	r3, [fp, #-136]	; 0xffffff78
   21eb0:	ldr	r3, [r3, #8]
   21eb4:	and	r3, r3, #2
   21eb8:	cmp	r3, #0
   21ebc:	beq	22b24 <_start@@Base+0x1046c>
   21ec0:	ldr	r3, [fp, #-136]	; 0xffffff78
   21ec4:	ldr	r0, [r3]
   21ec8:	mov	r3, #4
   21ecc:	mov	r2, #4
   21ed0:	mov	r1, #4
   21ed4:	bl	2c400 <flatcc_builder_table_add@@Base>
   21ed8:	str	r0, [fp, #-44]	; 0xffffffd4
   21edc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   21ee0:	cmp	r3, #0
   21ee4:	beq	22bdc <_start@@Base+0x10524>
   21ee8:	ldr	r3, [fp, #-88]	; 0xffffffa8
   21eec:	mov	r1, r3
   21ef0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   21ef4:	bl	12b34 <_start@@Base+0x47c>
   21ef8:	b	22b24 <_start@@Base+0x1046c>
   21efc:	ldr	r2, [fp, #-144]	; 0xffffff70
   21f00:	ldr	r1, [fp, #-140]	; 0xffffff74
   21f04:	ldr	r0, [fp, #-136]	; 0xffffff78
   21f08:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   21f0c:	str	r0, [fp, #-140]	; 0xffffff74
   21f10:	b	22b24 <_start@@Base+0x1046c>
   21f14:	ldr	r2, [fp, #-144]	; 0xffffff70
   21f18:	ldr	r1, [fp, #-140]	; 0xffffff74
   21f1c:	ldr	r0, [fp, #-136]	; 0xffffff78
   21f20:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   21f24:	str	r0, [fp, #-140]	; 0xffffff74
   21f28:	b	22b24 <_start@@Base+0x1046c>
   21f2c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   21f30:	add	r3, pc, #424	; 0x1a8
   21f34:	ldrd	r2, [r3]
   21f38:	cmp	r1, r3
   21f3c:	cmpeq	r0, r2
   21f40:	bhi	223e0 <_start@@Base+0xfd28>
   21f44:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   21f48:	add	r3, pc, #408	; 0x198
   21f4c:	ldrd	r2, [r3]
   21f50:	cmp	r1, r3
   21f54:	cmpeq	r0, r2
   21f58:	bhi	220f8 <_start@@Base+0xfa40>
   21f5c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   21f60:	mov	r2, #0
   21f64:	mov	r3, #0
   21f68:	movt	r3, #65535	; 0xffff
   21f6c:	and	ip, r0, r2
   21f70:	str	ip, [fp, #-172]	; 0xffffff54
   21f74:	and	r3, r1, r3
   21f78:	str	r3, [fp, #-168]	; 0xffffff58
   21f7c:	mov	r2, #0
   21f80:	mov	r3, #0
   21f84:	movt	r3, #26936	; 0x6938
   21f88:	ldrd	r0, [fp, #-172]	; 0xffffff54
   21f8c:	cmp	r1, r3
   21f90:	cmpeq	r0, r2
   21f94:	bne	220c0 <_start@@Base+0xfa08>
   21f98:	ldr	r3, [fp, #-140]	; 0xffffff74
   21f9c:	str	r3, [fp, #-40]	; 0xffffffd8
   21fa0:	mov	r3, #2
   21fa4:	ldr	r2, [fp, #-144]	; 0xffffff70
   21fa8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   21fac:	ldr	r0, [fp, #-136]	; 0xffffff78
   21fb0:	bl	13f3c <_start@@Base+0x1884>
   21fb4:	str	r0, [fp, #-140]	; 0xffffff74
   21fb8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   21fbc:	ldr	r3, [fp, #-140]	; 0xffffff74
   21fc0:	cmp	r2, r3
   21fc4:	beq	220a8 <_start@@Base+0xf9f0>
   21fc8:	mov	r3, #0
   21fcc:	strb	r3, [fp, #-89]	; 0xffffffa7
   21fd0:	ldr	r3, [fp, #-140]	; 0xffffff74
   21fd4:	str	r3, [fp, #-40]	; 0xffffffd8
   21fd8:	sub	r3, fp, #89	; 0x59
   21fdc:	ldr	r2, [fp, #-144]	; 0xffffff70
   21fe0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   21fe4:	ldr	r0, [fp, #-136]	; 0xffffff78
   21fe8:	bl	14e04 <_start@@Base+0x274c>
   21fec:	str	r0, [fp, #-140]	; 0xffffff74
   21ff0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   21ff4:	ldr	r3, [fp, #-140]	; 0xffffff74
   21ff8:	cmp	r2, r3
   21ffc:	bne	2204c <_start@@Base+0xf994>
   22000:	ldr	r3, [fp, #-140]	; 0xffffff74
   22004:	str	r3, [fp, #-40]	; 0xffffffd8
   22008:	sub	r3, fp, #89	; 0x59
   2200c:	str	r3, [sp]
   22010:	ldr	r3, [pc, #220]	; 220f4 <_start@@Base+0xfa3c>
   22014:	add	r3, pc, r3
   22018:	ldr	r2, [fp, #-144]	; 0xffffff70
   2201c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   22020:	ldr	r0, [fp, #-136]	; 0xffffff78
   22024:	bl	15d60 <_start@@Base+0x36a8>
   22028:	str	r0, [fp, #-140]	; 0xffffff74
   2202c:	ldr	r2, [fp, #-140]	; 0xffffff74
   22030:	ldr	r3, [fp, #-40]	; 0xffffffd8
   22034:	cmp	r2, r3
   22038:	beq	22be4 <_start@@Base+0x1052c>
   2203c:	ldr	r2, [fp, #-140]	; 0xffffff74
   22040:	ldr	r3, [fp, #-144]	; 0xffffff70
   22044:	cmp	r2, r3
   22048:	beq	22be4 <_start@@Base+0x1052c>
   2204c:	ldrsb	r3, [fp, #-89]	; 0xffffffa7
   22050:	cmp	r3, #0
   22054:	bne	2206c <_start@@Base+0xf9b4>
   22058:	ldr	r3, [fp, #-136]	; 0xffffff78
   2205c:	ldr	r3, [r3, #8]
   22060:	and	r3, r3, #2
   22064:	cmp	r3, #0
   22068:	beq	22b24 <_start@@Base+0x1046c>
   2206c:	ldr	r3, [fp, #-136]	; 0xffffff78
   22070:	ldr	r0, [r3]
   22074:	mov	r3, #1
   22078:	mov	r2, #1
   2207c:	mov	r1, #0
   22080:	bl	2c400 <flatcc_builder_table_add@@Base>
   22084:	str	r0, [fp, #-44]	; 0xffffffd4
   22088:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2208c:	cmp	r3, #0
   22090:	beq	22bec <_start@@Base+0x10534>
   22094:	ldrsb	r3, [fp, #-89]	; 0xffffffa7
   22098:	mov	r1, r3
   2209c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   220a0:	bl	129ec <_start@@Base+0x334>
   220a4:	b	22b24 <_start@@Base+0x1046c>
   220a8:	ldr	r2, [fp, #-144]	; 0xffffff70
   220ac:	ldr	r1, [fp, #-140]	; 0xffffff74
   220b0:	ldr	r0, [fp, #-136]	; 0xffffff78
   220b4:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   220b8:	str	r0, [fp, #-140]	; 0xffffff74
   220bc:	b	22b24 <_start@@Base+0x1046c>
   220c0:	ldr	r2, [fp, #-144]	; 0xffffff70
   220c4:	ldr	r1, [fp, #-140]	; 0xffffff74
   220c8:	ldr	r0, [fp, #-136]	; 0xffffff78
   220cc:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   220d0:	str	r0, [fp, #-140]	; 0xffffff74
   220d4:	b	22b24 <_start@@Base+0x1046c>
   220d8:	andeq	r0, r0, r0
   220dc:	ldmdbvs	r3!, {r9, ip, sp}
   220e0:			; <UNDEFINED> instruction: 0xffffffff
   220e4:	ldrvc	r3, [r6, #-1023]!	; 0xfffffc01
   220e8:			; <UNDEFINED> instruction: 0xffffffff
   220ec:	ldrvc	r3, [r1, #-1535]!	; 0xfffffa01
   220f0:	andeq	r7, r2, r4, lsl #10
   220f4:	andeq	r7, r2, r4, ror #6
   220f8:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   220fc:	mov	r2, #0
   22100:	mvn	r3, #255	; 0xff
   22104:	and	ip, r0, r2
   22108:	str	ip, [fp, #-180]	; 0xffffff4c
   2210c:	and	r3, r1, r3
   22110:	str	r3, [fp, #-176]	; 0xffffff50
   22114:	add	r3, pc, #684	; 0x2ac
   22118:	ldrd	r2, [r3]
   2211c:	ldrd	r0, [fp, #-180]	; 0xffffff4c
   22120:	cmp	r1, r3
   22124:	cmpeq	r0, r2
   22128:	bne	22254 <_start@@Base+0xfb9c>
   2212c:	ldr	r3, [fp, #-140]	; 0xffffff74
   22130:	str	r3, [fp, #-40]	; 0xffffffd8
   22134:	mov	r3, #3
   22138:	ldr	r2, [fp, #-144]	; 0xffffff70
   2213c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   22140:	ldr	r0, [fp, #-136]	; 0xffffff78
   22144:	bl	13f3c <_start@@Base+0x1884>
   22148:	str	r0, [fp, #-140]	; 0xffffff74
   2214c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   22150:	ldr	r3, [fp, #-140]	; 0xffffff74
   22154:	cmp	r2, r3
   22158:	beq	2223c <_start@@Base+0xfb84>
   2215c:	mov	r3, #0
   22160:	str	r3, [fp, #-96]	; 0xffffffa0
   22164:	ldr	r3, [fp, #-140]	; 0xffffff74
   22168:	str	r3, [fp, #-40]	; 0xffffffd8
   2216c:	sub	r3, fp, #96	; 0x60
   22170:	ldr	r2, [fp, #-144]	; 0xffffff70
   22174:	ldr	r1, [fp, #-40]	; 0xffffffd8
   22178:	ldr	r0, [fp, #-136]	; 0xffffff78
   2217c:	bl	148d8 <_start@@Base+0x2220>
   22180:	str	r0, [fp, #-140]	; 0xffffff74
   22184:	ldr	r2, [fp, #-40]	; 0xffffffd8
   22188:	ldr	r3, [fp, #-140]	; 0xffffff74
   2218c:	cmp	r2, r3
   22190:	bne	221e0 <_start@@Base+0xfb28>
   22194:	ldr	r3, [fp, #-140]	; 0xffffff74
   22198:	str	r3, [fp, #-40]	; 0xffffffd8
   2219c:	sub	r3, fp, #96	; 0x60
   221a0:	str	r3, [sp]
   221a4:	ldr	r3, [pc, #556]	; 223d8 <_start@@Base+0xfd20>
   221a8:	add	r3, pc, r3
   221ac:	ldr	r2, [fp, #-144]	; 0xffffff70
   221b0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   221b4:	ldr	r0, [fp, #-136]	; 0xffffff78
   221b8:	bl	151f4 <_start@@Base+0x2b3c>
   221bc:	str	r0, [fp, #-140]	; 0xffffff74
   221c0:	ldr	r2, [fp, #-140]	; 0xffffff74
   221c4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   221c8:	cmp	r2, r3
   221cc:	beq	22bf4 <_start@@Base+0x1053c>
   221d0:	ldr	r2, [fp, #-140]	; 0xffffff74
   221d4:	ldr	r3, [fp, #-144]	; 0xffffff70
   221d8:	cmp	r2, r3
   221dc:	beq	22bf4 <_start@@Base+0x1053c>
   221e0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   221e4:	cmp	r3, #0
   221e8:	bne	22200 <_start@@Base+0xfb48>
   221ec:	ldr	r3, [fp, #-136]	; 0xffffff78
   221f0:	ldr	r3, [r3, #8]
   221f4:	and	r3, r3, #2
   221f8:	cmp	r3, #0
   221fc:	beq	22b24 <_start@@Base+0x1046c>
   22200:	ldr	r3, [fp, #-136]	; 0xffffff78
   22204:	ldr	r0, [r3]
   22208:	mov	r3, #4
   2220c:	mov	r2, #4
   22210:	mov	r1, #5
   22214:	bl	2c400 <flatcc_builder_table_add@@Base>
   22218:	str	r0, [fp, #-44]	; 0xffffffd4
   2221c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   22220:	cmp	r3, #0
   22224:	beq	22bfc <_start@@Base+0x10544>
   22228:	ldr	r3, [fp, #-96]	; 0xffffffa0
   2222c:	mov	r1, r3
   22230:	ldr	r0, [fp, #-44]	; 0xffffffd4
   22234:	bl	128b4 <_start@@Base+0x1fc>
   22238:	b	22b24 <_start@@Base+0x1046c>
   2223c:	ldr	r2, [fp, #-144]	; 0xffffff70
   22240:	ldr	r1, [fp, #-140]	; 0xffffff74
   22244:	ldr	r0, [fp, #-136]	; 0xffffff78
   22248:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   2224c:	str	r0, [fp, #-140]	; 0xffffff74
   22250:	b	22b24 <_start@@Base+0x1046c>
   22254:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   22258:	mov	r2, #0
   2225c:	mvn	r3, #255	; 0xff
   22260:	and	ip, r0, r2
   22264:	str	ip, [fp, #-188]	; 0xffffff44
   22268:	and	r3, r1, r3
   2226c:	str	r3, [fp, #-184]	; 0xffffff48
   22270:	add	r3, pc, #344	; 0x158
   22274:	ldrd	r2, [r3]
   22278:	ldrd	r0, [fp, #-188]	; 0xffffff44
   2227c:	cmp	r1, r3
   22280:	cmpeq	r0, r2
   22284:	bne	223b0 <_start@@Base+0xfcf8>
   22288:	ldr	r3, [fp, #-140]	; 0xffffff74
   2228c:	str	r3, [fp, #-40]	; 0xffffffd8
   22290:	mov	r3, #3
   22294:	ldr	r2, [fp, #-144]	; 0xffffff70
   22298:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2229c:	ldr	r0, [fp, #-136]	; 0xffffff78
   222a0:	bl	13f3c <_start@@Base+0x1884>
   222a4:	str	r0, [fp, #-140]	; 0xffffff74
   222a8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   222ac:	ldr	r3, [fp, #-140]	; 0xffffff74
   222b0:	cmp	r2, r3
   222b4:	beq	22398 <_start@@Base+0xfce0>
   222b8:	mov	r3, #0
   222bc:	strh	r3, [fp, #-98]	; 0xffffff9e
   222c0:	ldr	r3, [fp, #-140]	; 0xffffff74
   222c4:	str	r3, [fp, #-40]	; 0xffffffd8
   222c8:	sub	r3, fp, #98	; 0x62
   222cc:	ldr	r2, [fp, #-144]	; 0xffffff70
   222d0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   222d4:	ldr	r0, [fp, #-136]	; 0xffffff78
   222d8:	bl	149b4 <_start@@Base+0x22fc>
   222dc:	str	r0, [fp, #-140]	; 0xffffff74
   222e0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   222e4:	ldr	r3, [fp, #-140]	; 0xffffff74
   222e8:	cmp	r2, r3
   222ec:	bne	2233c <_start@@Base+0xfc84>
   222f0:	ldr	r3, [fp, #-140]	; 0xffffff74
   222f4:	str	r3, [fp, #-40]	; 0xffffffd8
   222f8:	sub	r3, fp, #98	; 0x62
   222fc:	str	r3, [sp]
   22300:	ldr	r3, [pc, #212]	; 223dc <_start@@Base+0xfd24>
   22304:	add	r3, pc, r3
   22308:	ldr	r2, [fp, #-144]	; 0xffffff70
   2230c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   22310:	ldr	r0, [fp, #-136]	; 0xffffff78
   22314:	bl	153d4 <_start@@Base+0x2d1c>
   22318:	str	r0, [fp, #-140]	; 0xffffff74
   2231c:	ldr	r2, [fp, #-140]	; 0xffffff74
   22320:	ldr	r3, [fp, #-40]	; 0xffffffd8
   22324:	cmp	r2, r3
   22328:	beq	22c04 <_start@@Base+0x1054c>
   2232c:	ldr	r2, [fp, #-140]	; 0xffffff74
   22330:	ldr	r3, [fp, #-144]	; 0xffffff70
   22334:	cmp	r2, r3
   22338:	beq	22c04 <_start@@Base+0x1054c>
   2233c:	ldrh	r3, [fp, #-98]	; 0xffffff9e
   22340:	cmp	r3, #0
   22344:	bne	2235c <_start@@Base+0xfca4>
   22348:	ldr	r3, [fp, #-136]	; 0xffffff78
   2234c:	ldr	r3, [r3, #8]
   22350:	and	r3, r3, #2
   22354:	cmp	r3, #0
   22358:	beq	22b24 <_start@@Base+0x1046c>
   2235c:	ldr	r3, [fp, #-136]	; 0xffffff78
   22360:	ldr	r0, [r3]
   22364:	mov	r3, #2
   22368:	mov	r2, #2
   2236c:	mov	r1, #3
   22370:	bl	2c400 <flatcc_builder_table_add@@Base>
   22374:	str	r0, [fp, #-44]	; 0xffffffd4
   22378:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2237c:	cmp	r3, #0
   22380:	beq	22c0c <_start@@Base+0x10554>
   22384:	ldrh	r3, [fp, #-98]	; 0xffffff9e
   22388:	mov	r1, r3
   2238c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   22390:	bl	12844 <_start@@Base+0x18c>
   22394:	b	22b24 <_start@@Base+0x1046c>
   22398:	ldr	r2, [fp, #-144]	; 0xffffff70
   2239c:	ldr	r1, [fp, #-140]	; 0xffffff74
   223a0:	ldr	r0, [fp, #-136]	; 0xffffff78
   223a4:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   223a8:	str	r0, [fp, #-140]	; 0xffffff74
   223ac:	b	22b24 <_start@@Base+0x1046c>
   223b0:	ldr	r2, [fp, #-144]	; 0xffffff70
   223b4:	ldr	r1, [fp, #-140]	; 0xffffff74
   223b8:	ldr	r0, [fp, #-136]	; 0xffffff78
   223bc:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   223c0:	str	r0, [fp, #-140]	; 0xffffff74
   223c4:	b	22b24 <_start@@Base+0x1046c>
   223c8:	andeq	r0, r0, r0
   223cc:	ldrvc	r3, [r3, #-512]!	; 0xfffffe00
   223d0:	andeq	r0, r0, r0
   223d4:	ldrvc	r3, [r1, #-1536]!	; 0xfffffa00
   223d8:	ldrdeq	r7, [r2], -ip
   223dc:	andeq	r7, r2, ip, lsl #1
   223e0:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   223e4:	mvn	r2, #0
   223e8:	movw	r3, #65535	; 0xffff
   223ec:	movt	r3, #30007	; 0x7537
   223f0:	cmp	r1, r3
   223f4:	cmpeq	r0, r2
   223f8:	bhi	22570 <_start@@Base+0xfeb8>
   223fc:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   22400:	mov	r2, #0
   22404:	mvn	r3, #255	; 0xff
   22408:	and	ip, r0, r2
   2240c:	str	ip, [fp, #-196]	; 0xffffff3c
   22410:	and	r3, r1, r3
   22414:	str	r3, [fp, #-192]	; 0xffffff40
   22418:	add	r3, pc, #912	; 0x390
   2241c:	ldrd	r2, [r3]
   22420:	ldrd	r0, [fp, #-196]	; 0xffffff3c
   22424:	cmp	r1, r3
   22428:	cmpeq	r0, r2
   2242c:	bne	22558 <_start@@Base+0xfea0>
   22430:	ldr	r3, [fp, #-140]	; 0xffffff74
   22434:	str	r3, [fp, #-40]	; 0xffffffd8
   22438:	mov	r3, #3
   2243c:	ldr	r2, [fp, #-144]	; 0xffffff70
   22440:	ldr	r1, [fp, #-40]	; 0xffffffd8
   22444:	ldr	r0, [fp, #-136]	; 0xffffff78
   22448:	bl	13f3c <_start@@Base+0x1884>
   2244c:	str	r0, [fp, #-140]	; 0xffffff74
   22450:	ldr	r2, [fp, #-40]	; 0xffffffd8
   22454:	ldr	r3, [fp, #-140]	; 0xffffff74
   22458:	cmp	r2, r3
   2245c:	beq	22540 <_start@@Base+0xfe88>
   22460:	mov	r2, #0
   22464:	mov	r3, #0
   22468:	strd	r2, [fp, #-108]	; 0xffffff94
   2246c:	ldr	r3, [fp, #-140]	; 0xffffff74
   22470:	str	r3, [fp, #-40]	; 0xffffffd8
   22474:	sub	r3, fp, #108	; 0x6c
   22478:	ldr	r2, [fp, #-144]	; 0xffffff70
   2247c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   22480:	ldr	r0, [fp, #-136]	; 0xffffff78
   22484:	bl	147f8 <_start@@Base+0x2140>
   22488:	str	r0, [fp, #-140]	; 0xffffff74
   2248c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   22490:	ldr	r3, [fp, #-140]	; 0xffffff74
   22494:	cmp	r2, r3
   22498:	bne	224e8 <_start@@Base+0xfe30>
   2249c:	ldr	r3, [fp, #-140]	; 0xffffff74
   224a0:	str	r3, [fp, #-40]	; 0xffffffd8
   224a4:	sub	r3, fp, #108	; 0x6c
   224a8:	str	r3, [sp]
   224ac:	ldr	r3, [pc, #780]	; 227c0 <_start@@Base+0x10108>
   224b0:	add	r3, pc, r3
   224b4:	ldr	r2, [fp, #-144]	; 0xffffff70
   224b8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   224bc:	ldr	r0, [fp, #-136]	; 0xffffff78
   224c0:	bl	15000 <_start@@Base+0x2948>
   224c4:	str	r0, [fp, #-140]	; 0xffffff74
   224c8:	ldr	r2, [fp, #-140]	; 0xffffff74
   224cc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   224d0:	cmp	r2, r3
   224d4:	beq	22c14 <_start@@Base+0x1055c>
   224d8:	ldr	r2, [fp, #-140]	; 0xffffff74
   224dc:	ldr	r3, [fp, #-144]	; 0xffffff70
   224e0:	cmp	r2, r3
   224e4:	beq	22c14 <_start@@Base+0x1055c>
   224e8:	ldrd	r2, [fp, #-108]	; 0xffffff94
   224ec:	orrs	r3, r2, r3
   224f0:	bne	22508 <_start@@Base+0xfe50>
   224f4:	ldr	r3, [fp, #-136]	; 0xffffff78
   224f8:	ldr	r3, [r3, #8]
   224fc:	and	r3, r3, #2
   22500:	cmp	r3, #0
   22504:	beq	22b24 <_start@@Base+0x1046c>
   22508:	ldr	r3, [fp, #-136]	; 0xffffff78
   2250c:	ldr	r0, [r3]
   22510:	mov	r3, #8
   22514:	mov	r2, #8
   22518:	mov	r1, #7
   2251c:	bl	2c400 <flatcc_builder_table_add@@Base>
   22520:	str	r0, [fp, #-44]	; 0xffffffd4
   22524:	ldr	r3, [fp, #-44]	; 0xffffffd4
   22528:	cmp	r3, #0
   2252c:	beq	22c1c <_start@@Base+0x10564>
   22530:	ldrd	r2, [fp, #-108]	; 0xffffff94
   22534:	ldr	r0, [fp, #-44]	; 0xffffffd4
   22538:	bl	1291c <_start@@Base+0x264>
   2253c:	b	22b24 <_start@@Base+0x1046c>
   22540:	ldr	r2, [fp, #-144]	; 0xffffff70
   22544:	ldr	r1, [fp, #-140]	; 0xffffff74
   22548:	ldr	r0, [fp, #-136]	; 0xffffff78
   2254c:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   22550:	str	r0, [fp, #-140]	; 0xffffff74
   22554:	b	22b24 <_start@@Base+0x1046c>
   22558:	ldr	r2, [fp, #-144]	; 0xffffff70
   2255c:	ldr	r1, [fp, #-140]	; 0xffffff74
   22560:	ldr	r0, [fp, #-136]	; 0xffffff78
   22564:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   22568:	str	r0, [fp, #-140]	; 0xffffff74
   2256c:	b	22b24 <_start@@Base+0x1046c>
   22570:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   22574:	mvn	r2, #0
   22578:	movw	r3, #65535	; 0xffff
   2257c:	movt	r3, #30263	; 0x7637
   22580:	cmp	r1, r3
   22584:	cmpeq	r0, r2
   22588:	bhi	22708 <_start@@Base+0x10050>
   2258c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   22590:	mov	r2, #0
   22594:	mov	r3, #0
   22598:	movt	r3, #65535	; 0xffff
   2259c:	and	ip, r0, r2
   225a0:	str	ip, [fp, #-204]	; 0xffffff34
   225a4:	and	r3, r1, r3
   225a8:	str	r3, [fp, #-200]	; 0xffffff38
   225ac:	mov	r2, #0
   225b0:	mov	r3, #0
   225b4:	movt	r3, #30008	; 0x7538
   225b8:	ldrd	r0, [fp, #-204]	; 0xffffff34
   225bc:	cmp	r1, r3
   225c0:	cmpeq	r0, r2
   225c4:	bne	226f0 <_start@@Base+0x10038>
   225c8:	ldr	r3, [fp, #-140]	; 0xffffff74
   225cc:	str	r3, [fp, #-40]	; 0xffffffd8
   225d0:	mov	r3, #2
   225d4:	ldr	r2, [fp, #-144]	; 0xffffff70
   225d8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   225dc:	ldr	r0, [fp, #-136]	; 0xffffff78
   225e0:	bl	13f3c <_start@@Base+0x1884>
   225e4:	str	r0, [fp, #-140]	; 0xffffff74
   225e8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   225ec:	ldr	r3, [fp, #-140]	; 0xffffff74
   225f0:	cmp	r2, r3
   225f4:	beq	226d8 <_start@@Base+0x10020>
   225f8:	mov	r3, #0
   225fc:	strb	r3, [fp, #-109]	; 0xffffff93
   22600:	ldr	r3, [fp, #-140]	; 0xffffff74
   22604:	str	r3, [fp, #-40]	; 0xffffffd8
   22608:	sub	r3, fp, #109	; 0x6d
   2260c:	ldr	r2, [fp, #-144]	; 0xffffff70
   22610:	ldr	r1, [fp, #-40]	; 0xffffffd8
   22614:	ldr	r0, [fp, #-136]	; 0xffffff78
   22618:	bl	14a90 <_start@@Base+0x23d8>
   2261c:	str	r0, [fp, #-140]	; 0xffffff74
   22620:	ldr	r2, [fp, #-40]	; 0xffffffd8
   22624:	ldr	r3, [fp, #-140]	; 0xffffff74
   22628:	cmp	r2, r3
   2262c:	bne	2267c <_start@@Base+0xffc4>
   22630:	ldr	r3, [fp, #-140]	; 0xffffff74
   22634:	str	r3, [fp, #-40]	; 0xffffffd8
   22638:	sub	r3, fp, #109	; 0x6d
   2263c:	str	r3, [sp]
   22640:	ldr	r3, [pc, #380]	; 227c4 <_start@@Base+0x1010c>
   22644:	add	r3, pc, r3
   22648:	ldr	r2, [fp, #-144]	; 0xffffff70
   2264c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   22650:	ldr	r0, [fp, #-136]	; 0xffffff78
   22654:	bl	155b8 <_start@@Base+0x2f00>
   22658:	str	r0, [fp, #-140]	; 0xffffff74
   2265c:	ldr	r2, [fp, #-140]	; 0xffffff74
   22660:	ldr	r3, [fp, #-40]	; 0xffffffd8
   22664:	cmp	r2, r3
   22668:	beq	22c24 <_start@@Base+0x1056c>
   2266c:	ldr	r2, [fp, #-140]	; 0xffffff74
   22670:	ldr	r3, [fp, #-144]	; 0xffffff70
   22674:	cmp	r2, r3
   22678:	beq	22c24 <_start@@Base+0x1056c>
   2267c:	ldrb	r3, [fp, #-109]	; 0xffffff93
   22680:	cmp	r3, #0
   22684:	bne	2269c <_start@@Base+0xffe4>
   22688:	ldr	r3, [fp, #-136]	; 0xffffff78
   2268c:	ldr	r3, [r3, #8]
   22690:	and	r3, r3, #2
   22694:	cmp	r3, #0
   22698:	beq	22b24 <_start@@Base+0x1046c>
   2269c:	ldr	r3, [fp, #-136]	; 0xffffff78
   226a0:	ldr	r0, [r3]
   226a4:	mov	r3, #1
   226a8:	mov	r2, #1
   226ac:	mov	r1, #1
   226b0:	bl	2c400 <flatcc_builder_table_add@@Base>
   226b4:	str	r0, [fp, #-44]	; 0xffffffd4
   226b8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   226bc:	cmp	r3, #0
   226c0:	beq	22c2c <_start@@Base+0x10574>
   226c4:	ldrb	r3, [fp, #-109]	; 0xffffff93
   226c8:	mov	r1, r3
   226cc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   226d0:	bl	127d0 <_start@@Base+0x118>
   226d4:	b	22b24 <_start@@Base+0x1046c>
   226d8:	ldr	r2, [fp, #-144]	; 0xffffff70
   226dc:	ldr	r1, [fp, #-140]	; 0xffffff74
   226e0:	ldr	r0, [fp, #-136]	; 0xffffff78
   226e4:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   226e8:	str	r0, [fp, #-140]	; 0xffffff74
   226ec:	b	22b24 <_start@@Base+0x1046c>
   226f0:	ldr	r2, [fp, #-144]	; 0xffffff70
   226f4:	ldr	r1, [fp, #-140]	; 0xffffff74
   226f8:	ldr	r0, [fp, #-136]	; 0xffffff78
   226fc:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   22700:	str	r0, [fp, #-140]	; 0xffffff74
   22704:	b	22b24 <_start@@Base+0x1046c>
   22708:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   2270c:	mov	r2, #0
   22710:	mvn	r3, #0
   22714:	and	ip, r0, r2
   22718:	str	ip, [fp, #-212]	; 0xffffff2c
   2271c:	and	r3, r1, r3
   22720:	str	r3, [fp, #-208]	; 0xffffff30
   22724:	add	r3, pc, #140	; 0x8c
   22728:	ldrd	r2, [r3]
   2272c:	ldrd	r0, [fp, #-212]	; 0xffffff2c
   22730:	cmp	r1, r3
   22734:	cmpeq	r0, r2
   22738:	bne	2291c <_start@@Base+0x10264>
   2273c:	ldr	r3, [fp, #-140]	; 0xffffff74
   22740:	str	r3, [fp, #-40]	; 0xffffffd8
   22744:	mov	r3, #4
   22748:	ldr	r2, [fp, #-144]	; 0xffffff70
   2274c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   22750:	ldr	r0, [fp, #-136]	; 0xffffff78
   22754:	bl	13f3c <_start@@Base+0x1884>
   22758:	str	r0, [fp, #-140]	; 0xffffff74
   2275c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   22760:	ldr	r3, [fp, #-140]	; 0xffffff74
   22764:	cmp	r2, r3
   22768:	beq	22904 <_start@@Base+0x1024c>
   2276c:	ldr	r3, [fp, #-136]	; 0xffffff78
   22770:	ldr	r0, [r3]
   22774:	mvn	r3, #-536870912	; 0xe0000000
   22778:	mov	r2, #8
   2277c:	mov	r1, #8
   22780:	bl	29b28 <flatcc_builder_start_vector@@Base>
   22784:	mov	r3, r0
   22788:	cmp	r3, #0
   2278c:	bne	22c34 <_start@@Base+0x1057c>
   22790:	sub	r3, fp, #56	; 0x38
   22794:	ldr	r2, [fp, #-144]	; 0xffffff70
   22798:	ldr	r1, [fp, #-140]	; 0xffffff74
   2279c:	ldr	r0, [fp, #-136]	; 0xffffff78
   227a0:	bl	13cd4 <_start@@Base+0x161c>
   227a4:	str	r0, [fp, #-140]	; 0xffffff74
   227a8:	b	228a4 <_start@@Base+0x101ec>
   227ac:	nop	{0}
   227b0:	andeq	r0, r0, r0
   227b4:	ldrvc	r3, [r6, #-1024]!	; 0xfffffc00
   227b8:	andeq	r0, r0, r0
   227bc:			; <UNDEFINED> instruction: 0x76663634
   227c0:	andeq	r6, r2, ip, ror #29
   227c4:	andeq	r6, r2, r4, ror #26
   227c8:	andeq	r6, r2, r0, ror fp
   227cc:	andeq	r6, r2, r8, lsl #19
   227d0:	mov	r2, #0
   227d4:	mov	r3, #0
   227d8:	strd	r2, [fp, #-124]	; 0xffffff84
   227dc:	ldr	r3, [fp, #-136]	; 0xffffff78
   227e0:	ldr	r3, [r3]
   227e4:	mov	r1, #1
   227e8:	mov	r0, r3
   227ec:	bl	291c4 <flatcc_builder_extend_vector@@Base>
   227f0:	str	r0, [fp, #-44]	; 0xffffffd4
   227f4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   227f8:	cmp	r3, #0
   227fc:	beq	22c3c <_start@@Base+0x10584>
   22800:	ldr	r3, [fp, #-140]	; 0xffffff74
   22804:	str	r3, [fp, #-40]	; 0xffffffd8
   22808:	sub	r3, fp, #124	; 0x7c
   2280c:	ldr	r2, [fp, #-144]	; 0xffffff70
   22810:	ldr	r1, [fp, #-40]	; 0xffffffd8
   22814:	ldr	r0, [fp, #-136]	; 0xffffff78
   22818:	bl	34788 <flatcc_json_parser_double@@Base>
   2281c:	str	r0, [fp, #-140]	; 0xffffff74
   22820:	ldr	r2, [fp, #-40]	; 0xffffffd8
   22824:	ldr	r3, [fp, #-140]	; 0xffffff74
   22828:	cmp	r2, r3
   2282c:	bne	2287c <_start@@Base+0x101c4>
   22830:	ldr	r3, [fp, #-140]	; 0xffffff74
   22834:	str	r3, [fp, #-40]	; 0xffffffd8
   22838:	sub	r3, fp, #124	; 0x7c
   2283c:	str	r3, [sp]
   22840:	ldr	r3, [pc, #-128]	; 227c8 <_start@@Base+0x10110>
   22844:	add	r3, pc, r3
   22848:	ldr	r2, [fp, #-144]	; 0xffffff70
   2284c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   22850:	ldr	r0, [fp, #-136]	; 0xffffff78
   22854:	bl	16314 <_start@@Base+0x3c5c>
   22858:	str	r0, [fp, #-140]	; 0xffffff74
   2285c:	ldr	r2, [fp, #-140]	; 0xffffff74
   22860:	ldr	r3, [fp, #-40]	; 0xffffffd8
   22864:	cmp	r2, r3
   22868:	beq	22c44 <_start@@Base+0x1058c>
   2286c:	ldr	r2, [fp, #-140]	; 0xffffff74
   22870:	ldr	r3, [fp, #-144]	; 0xffffff70
   22874:	cmp	r2, r3
   22878:	beq	22c44 <_start@@Base+0x1058c>
   2287c:	vldr	d7, [fp, #-124]	; 0xffffff84
   22880:	vmov.f64	d0, d7
   22884:	ldr	r0, [fp, #-44]	; 0xffffffd4
   22888:	bl	12d78 <_start@@Base+0x6c0>
   2288c:	sub	r3, fp, #56	; 0x38
   22890:	ldr	r2, [fp, #-144]	; 0xffffff70
   22894:	ldr	r1, [fp, #-140]	; 0xffffff74
   22898:	ldr	r0, [fp, #-136]	; 0xffffff78
   2289c:	bl	13dc8 <_start@@Base+0x1710>
   228a0:	str	r0, [fp, #-140]	; 0xffffff74
   228a4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   228a8:	cmp	r3, #0
   228ac:	bne	227d0 <_start@@Base+0x10118>
   228b0:	ldr	r3, [fp, #-136]	; 0xffffff78
   228b4:	ldr	r3, [r3]
   228b8:	mov	r0, r3
   228bc:	bl	2ae24 <flatcc_builder_end_vector@@Base>
   228c0:	str	r0, [fp, #-48]	; 0xffffffd0
   228c4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   228c8:	cmp	r3, #0
   228cc:	beq	22c4c <_start@@Base+0x10594>
   228d0:	ldr	r3, [fp, #-136]	; 0xffffff78
   228d4:	ldr	r3, [r3]
   228d8:	mov	r1, #11
   228dc:	mov	r0, r3
   228e0:	bl	2c670 <flatcc_builder_table_add_offset@@Base>
   228e4:	str	r0, [fp, #-52]	; 0xffffffcc
   228e8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   228ec:	cmp	r3, #0
   228f0:	beq	22c4c <_start@@Base+0x10594>
   228f4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   228f8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   228fc:	str	r3, [r2]
   22900:	b	22b24 <_start@@Base+0x1046c>
   22904:	ldr	r2, [fp, #-144]	; 0xffffff70
   22908:	ldr	r1, [fp, #-140]	; 0xffffff74
   2290c:	ldr	r0, [fp, #-136]	; 0xffffff78
   22910:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   22914:	str	r0, [fp, #-140]	; 0xffffff74
   22918:	b	22b24 <_start@@Base+0x1046c>
   2291c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   22920:	mov	r2, #0
   22924:	mov	r3, #0
   22928:	movt	r3, #65535	; 0xffff
   2292c:	and	ip, r0, r2
   22930:	str	ip, [fp, #-220]	; 0xffffff24
   22934:	and	r3, r1, r3
   22938:	str	r3, [fp, #-216]	; 0xffffff28
   2293c:	mov	r2, #0
   22940:	mov	r3, #0
   22944:	movt	r3, #30264	; 0x7638
   22948:	ldrd	r0, [fp, #-220]	; 0xffffff24
   2294c:	cmp	r1, r3
   22950:	cmpeq	r0, r2
   22954:	bne	22b10 <_start@@Base+0x10458>
   22958:	ldr	r3, [fp, #-140]	; 0xffffff74
   2295c:	str	r3, [fp, #-40]	; 0xffffffd8
   22960:	mov	r3, #2
   22964:	ldr	r2, [fp, #-144]	; 0xffffff70
   22968:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2296c:	ldr	r0, [fp, #-136]	; 0xffffff78
   22970:	bl	13f3c <_start@@Base+0x1884>
   22974:	str	r0, [fp, #-140]	; 0xffffff74
   22978:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2297c:	ldr	r3, [fp, #-140]	; 0xffffff74
   22980:	cmp	r2, r3
   22984:	beq	22af8 <_start@@Base+0x10440>
   22988:	ldr	r3, [fp, #-136]	; 0xffffff78
   2298c:	ldr	r0, [r3]
   22990:	mvn	r3, #0
   22994:	mov	r2, #1
   22998:	mov	r1, #1
   2299c:	bl	29b28 <flatcc_builder_start_vector@@Base>
   229a0:	mov	r3, r0
   229a4:	cmp	r3, #0
   229a8:	bne	22c54 <_start@@Base+0x1059c>
   229ac:	sub	r3, fp, #56	; 0x38
   229b0:	ldr	r2, [fp, #-144]	; 0xffffff70
   229b4:	ldr	r1, [fp, #-140]	; 0xffffff74
   229b8:	ldr	r0, [fp, #-136]	; 0xffffff78
   229bc:	bl	13cd4 <_start@@Base+0x161c>
   229c0:	str	r0, [fp, #-140]	; 0xffffff74
   229c4:	b	22a98 <_start@@Base+0x103e0>
   229c8:	mov	r3, #0
   229cc:	strb	r3, [fp, #-125]	; 0xffffff83
   229d0:	ldr	r3, [fp, #-136]	; 0xffffff78
   229d4:	ldr	r3, [r3]
   229d8:	mov	r1, #1
   229dc:	mov	r0, r3
   229e0:	bl	291c4 <flatcc_builder_extend_vector@@Base>
   229e4:	str	r0, [fp, #-44]	; 0xffffffd4
   229e8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   229ec:	cmp	r3, #0
   229f0:	beq	22c5c <_start@@Base+0x105a4>
   229f4:	ldr	r3, [fp, #-140]	; 0xffffff74
   229f8:	str	r3, [fp, #-40]	; 0xffffffd8
   229fc:	sub	r3, fp, #125	; 0x7d
   22a00:	ldr	r2, [fp, #-144]	; 0xffffff70
   22a04:	ldr	r1, [fp, #-40]	; 0xffffffd8
   22a08:	ldr	r0, [fp, #-136]	; 0xffffff78
   22a0c:	bl	14e04 <_start@@Base+0x274c>
   22a10:	str	r0, [fp, #-140]	; 0xffffff74
   22a14:	ldr	r2, [fp, #-40]	; 0xffffffd8
   22a18:	ldr	r3, [fp, #-140]	; 0xffffff74
   22a1c:	cmp	r2, r3
   22a20:	bne	22a70 <_start@@Base+0x103b8>
   22a24:	ldr	r3, [fp, #-140]	; 0xffffff74
   22a28:	str	r3, [fp, #-40]	; 0xffffffd8
   22a2c:	sub	r3, fp, #125	; 0x7d
   22a30:	str	r3, [sp]
   22a34:	ldr	r3, [pc, #-624]	; 227cc <_start@@Base+0x10114>
   22a38:	add	r3, pc, r3
   22a3c:	ldr	r2, [fp, #-144]	; 0xffffff70
   22a40:	ldr	r1, [fp, #-40]	; 0xffffffd8
   22a44:	ldr	r0, [fp, #-136]	; 0xffffff78
   22a48:	bl	15d60 <_start@@Base+0x36a8>
   22a4c:	str	r0, [fp, #-140]	; 0xffffff74
   22a50:	ldr	r2, [fp, #-140]	; 0xffffff74
   22a54:	ldr	r3, [fp, #-40]	; 0xffffffd8
   22a58:	cmp	r2, r3
   22a5c:	beq	22c64 <_start@@Base+0x105ac>
   22a60:	ldr	r2, [fp, #-140]	; 0xffffff74
   22a64:	ldr	r3, [fp, #-144]	; 0xffffff70
   22a68:	cmp	r2, r3
   22a6c:	beq	22c64 <_start@@Base+0x105ac>
   22a70:	ldrsb	r3, [fp, #-125]	; 0xffffff83
   22a74:	mov	r1, r3
   22a78:	ldr	r0, [fp, #-44]	; 0xffffffd4
   22a7c:	bl	129ec <_start@@Base+0x334>
   22a80:	sub	r3, fp, #56	; 0x38
   22a84:	ldr	r2, [fp, #-144]	; 0xffffff70
   22a88:	ldr	r1, [fp, #-140]	; 0xffffff74
   22a8c:	ldr	r0, [fp, #-136]	; 0xffffff78
   22a90:	bl	13dc8 <_start@@Base+0x1710>
   22a94:	str	r0, [fp, #-140]	; 0xffffff74
   22a98:	ldr	r3, [fp, #-56]	; 0xffffffc8
   22a9c:	cmp	r3, #0
   22aa0:	bne	229c8 <_start@@Base+0x10310>
   22aa4:	ldr	r3, [fp, #-136]	; 0xffffff78
   22aa8:	ldr	r3, [r3]
   22aac:	mov	r0, r3
   22ab0:	bl	2ae24 <flatcc_builder_end_vector@@Base>
   22ab4:	str	r0, [fp, #-48]	; 0xffffffd0
   22ab8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   22abc:	cmp	r3, #0
   22ac0:	beq	22c6c <_start@@Base+0x105b4>
   22ac4:	ldr	r3, [fp, #-136]	; 0xffffff78
   22ac8:	ldr	r3, [r3]
   22acc:	mov	r1, #10
   22ad0:	mov	r0, r3
   22ad4:	bl	2c670 <flatcc_builder_table_add_offset@@Base>
   22ad8:	str	r0, [fp, #-52]	; 0xffffffcc
   22adc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   22ae0:	cmp	r3, #0
   22ae4:	beq	22c6c <_start@@Base+0x105b4>
   22ae8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   22aec:	ldr	r3, [fp, #-48]	; 0xffffffd0
   22af0:	str	r3, [r2]
   22af4:	b	22b24 <_start@@Base+0x1046c>
   22af8:	ldr	r2, [fp, #-144]	; 0xffffff70
   22afc:	ldr	r1, [fp, #-140]	; 0xffffff74
   22b00:	ldr	r0, [fp, #-136]	; 0xffffff78
   22b04:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   22b08:	str	r0, [fp, #-140]	; 0xffffff74
   22b0c:	b	22b24 <_start@@Base+0x1046c>
   22b10:	ldr	r2, [fp, #-144]	; 0xffffff70
   22b14:	ldr	r1, [fp, #-140]	; 0xffffff74
   22b18:	ldr	r0, [fp, #-136]	; 0xffffff78
   22b1c:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   22b20:	str	r0, [fp, #-140]	; 0xffffff74
   22b24:	sub	r3, fp, #56	; 0x38
   22b28:	ldr	r2, [fp, #-144]	; 0xffffff70
   22b2c:	ldr	r1, [fp, #-140]	; 0xffffff74
   22b30:	ldr	r0, [fp, #-136]	; 0xffffff78
   22b34:	bl	13b60 <_start@@Base+0x14a8>
   22b38:	str	r0, [fp, #-140]	; 0xffffff74
   22b3c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   22b40:	cmp	r3, #0
   22b44:	bne	2177c <_start@@Base+0xf0c4>
   22b48:	ldr	r3, [fp, #-136]	; 0xffffff78
   22b4c:	ldr	r3, [r3, #24]
   22b50:	cmp	r3, #0
   22b54:	bne	22c74 <_start@@Base+0x105bc>
   22b58:	ldr	r3, [fp, #-136]	; 0xffffff78
   22b5c:	ldr	r3, [r3]
   22b60:	mov	r0, r3
   22b64:	bl	2a9b0 <flatcc_builder_end_table@@Base>
   22b68:	mov	r2, r0
   22b6c:	ldr	r3, [fp, #-148]	; 0xffffff6c
   22b70:	str	r2, [r3]
   22b74:	ldr	r3, [fp, #-148]	; 0xffffff6c
   22b78:	ldr	r3, [r3]
   22b7c:	cmp	r3, #0
   22b80:	beq	22c7c <_start@@Base+0x105c4>
   22b84:	ldr	r3, [fp, #-140]	; 0xffffff74
   22b88:	b	22c98 <_start@@Base+0x105e0>
   22b8c:	nop	{0}
   22b90:	b	22c80 <_start@@Base+0x105c8>
   22b94:	nop	{0}
   22b98:	b	22c80 <_start@@Base+0x105c8>
   22b9c:	nop	{0}
   22ba0:	b	22c80 <_start@@Base+0x105c8>
   22ba4:	nop	{0}
   22ba8:	b	22c80 <_start@@Base+0x105c8>
   22bac:	nop	{0}
   22bb0:	b	22c80 <_start@@Base+0x105c8>
   22bb4:	nop	{0}
   22bb8:	b	22c80 <_start@@Base+0x105c8>
   22bbc:	nop	{0}
   22bc0:	b	22c80 <_start@@Base+0x105c8>
   22bc4:	nop	{0}
   22bc8:	b	22c80 <_start@@Base+0x105c8>
   22bcc:	nop	{0}
   22bd0:	b	22c80 <_start@@Base+0x105c8>
   22bd4:	nop	{0}
   22bd8:	b	22c80 <_start@@Base+0x105c8>
   22bdc:	nop	{0}
   22be0:	b	22c80 <_start@@Base+0x105c8>
   22be4:	nop	{0}
   22be8:	b	22c80 <_start@@Base+0x105c8>
   22bec:	nop	{0}
   22bf0:	b	22c80 <_start@@Base+0x105c8>
   22bf4:	nop	{0}
   22bf8:	b	22c80 <_start@@Base+0x105c8>
   22bfc:	nop	{0}
   22c00:	b	22c80 <_start@@Base+0x105c8>
   22c04:	nop	{0}
   22c08:	b	22c80 <_start@@Base+0x105c8>
   22c0c:	nop	{0}
   22c10:	b	22c80 <_start@@Base+0x105c8>
   22c14:	nop	{0}
   22c18:	b	22c80 <_start@@Base+0x105c8>
   22c1c:	nop	{0}
   22c20:	b	22c80 <_start@@Base+0x105c8>
   22c24:	nop	{0}
   22c28:	b	22c80 <_start@@Base+0x105c8>
   22c2c:	nop	{0}
   22c30:	b	22c80 <_start@@Base+0x105c8>
   22c34:	nop	{0}
   22c38:	b	22c80 <_start@@Base+0x105c8>
   22c3c:	nop	{0}
   22c40:	b	22c80 <_start@@Base+0x105c8>
   22c44:	nop	{0}
   22c48:	b	22c80 <_start@@Base+0x105c8>
   22c4c:	nop	{0}
   22c50:	b	22c80 <_start@@Base+0x105c8>
   22c54:	nop	{0}
   22c58:	b	22c80 <_start@@Base+0x105c8>
   22c5c:	nop	{0}
   22c60:	b	22c80 <_start@@Base+0x105c8>
   22c64:	nop	{0}
   22c68:	b	22c80 <_start@@Base+0x105c8>
   22c6c:	nop	{0}
   22c70:	b	22c80 <_start@@Base+0x105c8>
   22c74:	nop	{0}
   22c78:	b	22c80 <_start@@Base+0x105c8>
   22c7c:	nop	{0}
   22c80:	mov	r3, #33	; 0x21
   22c84:	ldr	r2, [fp, #-144]	; 0xffffff70
   22c88:	ldr	r1, [fp, #-140]	; 0xffffff74
   22c8c:	ldr	r0, [fp, #-136]	; 0xffffff78
   22c90:	bl	33258 <flatcc_json_parser_set_error@@Base>
   22c94:	mov	r3, r0
   22c98:	mov	r0, r3
   22c9c:	sub	sp, fp, #28
   22ca0:	ldrd	r4, [sp]
   22ca4:	ldrd	r6, [sp, #8]
   22ca8:	ldrd	r8, [sp, #16]
   22cac:	ldr	fp, [sp, #24]
   22cb0:	add	sp, sp, #28
   22cb4:	pop	{pc}		; (ldr pc, [sp], #4)
   22cb8:	strd	r4, [sp, #-16]!
   22cbc:	str	fp, [sp, #8]
   22cc0:	str	lr, [sp, #12]
   22cc4:	add	fp, sp, #12
   22cc8:	sub	sp, sp, #48	; 0x30
   22ccc:	str	r0, [fp, #-40]	; 0xffffffd8
   22cd0:	str	r1, [fp, #-44]	; 0xffffffd4
   22cd4:	str	r2, [fp, #-48]	; 0xffffffd0
   22cd8:	str	r3, [fp, #-52]	; 0xffffffcc
   22cdc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   22ce0:	mov	r2, #0
   22ce4:	str	r2, [r3]
   22ce8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   22cec:	ldr	r3, [r3]
   22cf0:	mov	r1, #1
   22cf4:	mov	r0, r3
   22cf8:	bl	29dfc <flatcc_builder_start_table@@Base>
   22cfc:	mov	r3, r0
   22d00:	cmp	r3, #0
   22d04:	bne	22fac <_start@@Base+0x108f4>
   22d08:	sub	r3, fp, #32
   22d0c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   22d10:	ldr	r1, [fp, #-44]	; 0xffffffd4
   22d14:	ldr	r0, [fp, #-40]	; 0xffffffd8
   22d18:	bl	13a6c <_start@@Base+0x13b4>
   22d1c:	str	r0, [fp, #-44]	; 0xffffffd4
   22d20:	b	22f5c <_start@@Base+0x108a4>
   22d24:	ldr	r2, [fp, #-48]	; 0xffffffd0
   22d28:	ldr	r1, [fp, #-44]	; 0xffffffd4
   22d2c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   22d30:	bl	135f4 <_start@@Base+0xf3c>
   22d34:	str	r0, [fp, #-44]	; 0xffffffd4
   22d38:	ldr	r1, [fp, #-48]	; 0xffffffd0
   22d3c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   22d40:	bl	13928 <_start@@Base+0x1270>
   22d44:	strd	r0, [fp, #-20]	; 0xffffffec
   22d48:	ldrd	r2, [fp, #-20]	; 0xffffffec
   22d4c:	add	r1, pc, #684	; 0x2ac
   22d50:	ldrd	r0, [r1]
   22d54:	cmp	r3, r1
   22d58:	cmpeq	r2, r0
   22d5c:	bne	22f30 <_start@@Base+0x10878>
   22d60:	ldr	r3, [fp, #-44]	; 0xffffffd4
   22d64:	add	r3, r3, #8
   22d68:	str	r3, [fp, #-44]	; 0xffffffd4
   22d6c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   22d70:	ldr	r0, [fp, #-44]	; 0xffffffd4
   22d74:	bl	13928 <_start@@Base+0x1270>
   22d78:	strd	r0, [fp, #-20]	; 0xffffffec
   22d7c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   22d80:	add	r1, pc, #640	; 0x280
   22d84:	ldrd	r0, [r1]
   22d88:	cmp	r3, r1
   22d8c:	cmpeq	r2, r0
   22d90:	bne	22f18 <_start@@Base+0x10860>
   22d94:	ldr	r3, [fp, #-44]	; 0xffffffd4
   22d98:	add	r3, r3, #8
   22d9c:	str	r3, [fp, #-44]	; 0xffffffd4
   22da0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   22da4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   22da8:	bl	13928 <_start@@Base+0x1270>
   22dac:	strd	r0, [fp, #-20]	; 0xffffffec
   22db0:	ldrd	r2, [fp, #-20]	; 0xffffffec
   22db4:	mov	r0, #0
   22db8:	mvn	r1, #255	; 0xff
   22dbc:	and	r4, r2, r0
   22dc0:	and	r5, r3, r1
   22dc4:	add	r3, pc, #580	; 0x244
   22dc8:	ldrd	r2, [r3]
   22dcc:	cmp	r5, r3
   22dd0:	cmpeq	r4, r2
   22dd4:	bne	22f00 <_start@@Base+0x10848>
   22dd8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   22ddc:	str	r3, [fp, #-24]	; 0xffffffe8
   22de0:	mov	r3, #3
   22de4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   22de8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   22dec:	ldr	r0, [fp, #-40]	; 0xffffffd8
   22df0:	bl	13f3c <_start@@Base+0x1884>
   22df4:	str	r0, [fp, #-44]	; 0xffffffd4
   22df8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   22dfc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   22e00:	cmp	r2, r3
   22e04:	beq	22ee8 <_start@@Base+0x10830>
   22e08:	mov	r3, #0
   22e0c:	str	r3, [fp, #-36]	; 0xffffffdc
   22e10:	ldr	r3, [fp, #-44]	; 0xffffffd4
   22e14:	str	r3, [fp, #-24]	; 0xffffffe8
   22e18:	sub	r3, fp, #36	; 0x24
   22e1c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   22e20:	ldr	r1, [fp, #-24]	; 0xffffffe8
   22e24:	ldr	r0, [fp, #-40]	; 0xffffffd8
   22e28:	bl	14c4c <_start@@Base+0x2594>
   22e2c:	str	r0, [fp, #-44]	; 0xffffffd4
   22e30:	ldr	r2, [fp, #-24]	; 0xffffffe8
   22e34:	ldr	r3, [fp, #-44]	; 0xffffffd4
   22e38:	cmp	r2, r3
   22e3c:	bne	22e8c <_start@@Base+0x107d4>
   22e40:	ldr	r3, [fp, #-44]	; 0xffffffd4
   22e44:	str	r3, [fp, #-24]	; 0xffffffe8
   22e48:	sub	r3, fp, #36	; 0x24
   22e4c:	str	r3, [sp]
   22e50:	ldr	r3, [pc, #448]	; 23018 <_start@@Base+0x10960>
   22e54:	add	r3, pc, r3
   22e58:	ldr	r2, [fp, #-48]	; 0xffffffd0
   22e5c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   22e60:	ldr	r0, [fp, #-40]	; 0xffffffd8
   22e64:	bl	15990 <_start@@Base+0x32d8>
   22e68:	str	r0, [fp, #-44]	; 0xffffffd4
   22e6c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   22e70:	ldr	r3, [fp, #-24]	; 0xffffffe8
   22e74:	cmp	r2, r3
   22e78:	beq	22fb4 <_start@@Base+0x108fc>
   22e7c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   22e80:	ldr	r3, [fp, #-48]	; 0xffffffd0
   22e84:	cmp	r2, r3
   22e88:	beq	22fb4 <_start@@Base+0x108fc>
   22e8c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   22e90:	cmp	r3, #0
   22e94:	bne	22eac <_start@@Base+0x107f4>
   22e98:	ldr	r3, [fp, #-40]	; 0xffffffd8
   22e9c:	ldr	r3, [r3, #8]
   22ea0:	and	r3, r3, #2
   22ea4:	cmp	r3, #0
   22ea8:	beq	22f44 <_start@@Base+0x1088c>
   22eac:	ldr	r3, [fp, #-40]	; 0xffffffd8
   22eb0:	ldr	r0, [r3]
   22eb4:	mov	r3, #4
   22eb8:	mov	r2, #4
   22ebc:	mov	r1, #0
   22ec0:	bl	2c400 <flatcc_builder_table_add@@Base>
   22ec4:	str	r0, [fp, #-28]	; 0xffffffe4
   22ec8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   22ecc:	cmp	r3, #0
   22ed0:	beq	22fbc <_start@@Base+0x10904>
   22ed4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   22ed8:	mov	r1, r3
   22edc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   22ee0:	bl	12b34 <_start@@Base+0x47c>
   22ee4:	b	22f44 <_start@@Base+0x1088c>
   22ee8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   22eec:	ldr	r1, [fp, #-44]	; 0xffffffd4
   22ef0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   22ef4:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   22ef8:	str	r0, [fp, #-44]	; 0xffffffd4
   22efc:	b	22f44 <_start@@Base+0x1088c>
   22f00:	ldr	r2, [fp, #-48]	; 0xffffffd0
   22f04:	ldr	r1, [fp, #-44]	; 0xffffffd4
   22f08:	ldr	r0, [fp, #-40]	; 0xffffffd8
   22f0c:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   22f10:	str	r0, [fp, #-44]	; 0xffffffd4
   22f14:	b	22f44 <_start@@Base+0x1088c>
   22f18:	ldr	r2, [fp, #-48]	; 0xffffffd0
   22f1c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   22f20:	ldr	r0, [fp, #-40]	; 0xffffffd8
   22f24:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   22f28:	str	r0, [fp, #-44]	; 0xffffffd4
   22f2c:	b	22f44 <_start@@Base+0x1088c>
   22f30:	ldr	r2, [fp, #-48]	; 0xffffffd0
   22f34:	ldr	r1, [fp, #-44]	; 0xffffffd4
   22f38:	ldr	r0, [fp, #-40]	; 0xffffffd8
   22f3c:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   22f40:	str	r0, [fp, #-44]	; 0xffffffd4
   22f44:	sub	r3, fp, #32
   22f48:	ldr	r2, [fp, #-48]	; 0xffffffd0
   22f4c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   22f50:	ldr	r0, [fp, #-40]	; 0xffffffd8
   22f54:	bl	13b60 <_start@@Base+0x14a8>
   22f58:	str	r0, [fp, #-44]	; 0xffffffd4
   22f5c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   22f60:	cmp	r3, #0
   22f64:	bne	22d24 <_start@@Base+0x1066c>
   22f68:	ldr	r3, [fp, #-40]	; 0xffffffd8
   22f6c:	ldr	r3, [r3, #24]
   22f70:	cmp	r3, #0
   22f74:	bne	22fc4 <_start@@Base+0x1090c>
   22f78:	ldr	r3, [fp, #-40]	; 0xffffffd8
   22f7c:	ldr	r3, [r3]
   22f80:	mov	r0, r3
   22f84:	bl	2a9b0 <flatcc_builder_end_table@@Base>
   22f88:	mov	r2, r0
   22f8c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   22f90:	str	r2, [r3]
   22f94:	ldr	r3, [fp, #-52]	; 0xffffffcc
   22f98:	ldr	r3, [r3]
   22f9c:	cmp	r3, #0
   22fa0:	beq	22fcc <_start@@Base+0x10914>
   22fa4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   22fa8:	b	22fe8 <_start@@Base+0x10930>
   22fac:	nop	{0}
   22fb0:	b	22fd0 <_start@@Base+0x10918>
   22fb4:	nop	{0}
   22fb8:	b	22fd0 <_start@@Base+0x10918>
   22fbc:	nop	{0}
   22fc0:	b	22fd0 <_start@@Base+0x10918>
   22fc4:	nop	{0}
   22fc8:	b	22fd0 <_start@@Base+0x10918>
   22fcc:	nop	{0}
   22fd0:	mov	r3, #33	; 0x21
   22fd4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   22fd8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   22fdc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   22fe0:	bl	33258 <flatcc_json_parser_set_error@@Base>
   22fe4:	mov	r3, r0
   22fe8:	mov	r0, r3
   22fec:	sub	sp, fp, #12
   22ff0:	ldrd	r4, [sp]
   22ff4:	ldr	fp, [sp, #8]
   22ff8:	add	sp, sp, #12
   22ffc:	pop	{pc}		; (ldr pc, [sp], #4)
   23000:	ldrbvs	r6, [pc], #-372	; 23008 <_start@@Base+0x10950>
   23004:	cmnvc	r7, #456	; 0x1c8
   23008:	svcpl	0x0064616d
   2300c:	strbtvc	r6, [r1], #-875	; 0xfffffc95
   23010:	andeq	r0, r0, r0
   23014:	cmnvs	r7, r0, lsl #10
   23018:	andeq	r6, r2, r8, ror r5
   2301c:	strd	r4, [sp, #-16]!
   23020:	str	fp, [sp, #8]
   23024:	str	lr, [sp, #12]
   23028:	add	fp, sp, #12
   2302c:	sub	sp, sp, #48	; 0x30
   23030:	str	r0, [fp, #-40]	; 0xffffffd8
   23034:	str	r1, [fp, #-44]	; 0xffffffd4
   23038:	str	r2, [fp, #-48]	; 0xffffffd0
   2303c:	str	r3, [fp, #-52]	; 0xffffffcc
   23040:	sub	r3, fp, #32
   23044:	ldr	r2, [fp, #-48]	; 0xffffffd0
   23048:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2304c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   23050:	bl	13a6c <_start@@Base+0x13b4>
   23054:	str	r0, [fp, #-44]	; 0xffffffd4
   23058:	b	23208 <_start@@Base+0x10b50>
   2305c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   23060:	ldr	r1, [fp, #-44]	; 0xffffffd4
   23064:	ldr	r0, [fp, #-40]	; 0xffffffd8
   23068:	bl	135f4 <_start@@Base+0xf3c>
   2306c:	str	r0, [fp, #-44]	; 0xffffffd4
   23070:	ldr	r1, [fp, #-48]	; 0xffffffd0
   23074:	ldr	r0, [fp, #-44]	; 0xffffffd4
   23078:	bl	13928 <_start@@Base+0x1270>
   2307c:	strd	r0, [fp, #-20]	; 0xffffffec
   23080:	ldrd	r2, [fp, #-20]	; 0xffffffec
   23084:	add	r1, pc, #452	; 0x1c4
   23088:	ldrd	r0, [r1]
   2308c:	cmp	r3, r1
   23090:	cmpeq	r2, r0
   23094:	bne	231dc <_start@@Base+0x10b24>
   23098:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2309c:	add	r3, r3, #8
   230a0:	str	r3, [fp, #-44]	; 0xffffffd4
   230a4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   230a8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   230ac:	bl	13928 <_start@@Base+0x1270>
   230b0:	strd	r0, [fp, #-20]	; 0xffffffec
   230b4:	ldrd	r2, [fp, #-20]	; 0xffffffec
   230b8:	mov	r0, #0
   230bc:	mvn	r1, #255	; 0xff
   230c0:	and	r4, r2, r0
   230c4:	and	r5, r3, r1
   230c8:	add	r3, pc, #392	; 0x188
   230cc:	ldrd	r2, [r3]
   230d0:	cmp	r5, r3
   230d4:	cmpeq	r4, r2
   230d8:	bne	231c4 <_start@@Base+0x10b0c>
   230dc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   230e0:	str	r3, [fp, #-24]	; 0xffffffe8
   230e4:	mov	r3, #3
   230e8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   230ec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   230f0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   230f4:	bl	13f3c <_start@@Base+0x1884>
   230f8:	str	r0, [fp, #-44]	; 0xffffffd4
   230fc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   23100:	ldr	r3, [fp, #-44]	; 0xffffffd4
   23104:	cmp	r2, r3
   23108:	beq	231ac <_start@@Base+0x10af4>
   2310c:	mov	r3, #0
   23110:	strh	r3, [fp, #-34]	; 0xffffffde
   23114:	ldr	r3, [fp, #-52]	; 0xffffffcc
   23118:	str	r3, [fp, #-28]	; 0xffffffe4
   2311c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   23120:	str	r3, [fp, #-24]	; 0xffffffe8
   23124:	sub	r3, fp, #34	; 0x22
   23128:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2312c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   23130:	ldr	r0, [fp, #-40]	; 0xffffffd8
   23134:	bl	149b4 <_start@@Base+0x22fc>
   23138:	str	r0, [fp, #-44]	; 0xffffffd4
   2313c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   23140:	ldr	r3, [fp, #-44]	; 0xffffffd4
   23144:	cmp	r2, r3
   23148:	bne	23198 <_start@@Base+0x10ae0>
   2314c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   23150:	str	r3, [fp, #-24]	; 0xffffffe8
   23154:	sub	r3, fp, #34	; 0x22
   23158:	str	r3, [sp]
   2315c:	ldr	r3, [pc, #252]	; 23260 <_start@@Base+0x10ba8>
   23160:	add	r3, pc, r3
   23164:	ldr	r2, [fp, #-48]	; 0xffffffd0
   23168:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2316c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   23170:	bl	153d4 <_start@@Base+0x2d1c>
   23174:	str	r0, [fp, #-44]	; 0xffffffd4
   23178:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2317c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   23180:	cmp	r2, r3
   23184:	beq	2321c <_start@@Base+0x10b64>
   23188:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2318c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   23190:	cmp	r2, r3
   23194:	beq	2321c <_start@@Base+0x10b64>
   23198:	ldrh	r3, [fp, #-34]	; 0xffffffde
   2319c:	mov	r1, r3
   231a0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   231a4:	bl	12844 <_start@@Base+0x18c>
   231a8:	b	231f0 <_start@@Base+0x10b38>
   231ac:	ldr	r2, [fp, #-48]	; 0xffffffd0
   231b0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   231b4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   231b8:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   231bc:	str	r0, [fp, #-44]	; 0xffffffd4
   231c0:	b	231f0 <_start@@Base+0x10b38>
   231c4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   231c8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   231cc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   231d0:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   231d4:	str	r0, [fp, #-44]	; 0xffffffd4
   231d8:	b	231f0 <_start@@Base+0x10b38>
   231dc:	ldr	r2, [fp, #-48]	; 0xffffffd0
   231e0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   231e4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   231e8:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   231ec:	str	r0, [fp, #-44]	; 0xffffffd4
   231f0:	sub	r3, fp, #32
   231f4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   231f8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   231fc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   23200:	bl	13b60 <_start@@Base+0x14a8>
   23204:	str	r0, [fp, #-44]	; 0xffffffd4
   23208:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2320c:	cmp	r3, #0
   23210:	bne	2305c <_start@@Base+0x109a4>
   23214:	ldr	r3, [fp, #-44]	; 0xffffffd4
   23218:	b	23238 <_start@@Base+0x10b80>
   2321c:	nop	{0}
   23220:	mov	r3, #33	; 0x21
   23224:	ldr	r2, [fp, #-48]	; 0xffffffd0
   23228:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2322c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   23230:	bl	33258 <flatcc_json_parser_set_error@@Base>
   23234:	mov	r3, r0
   23238:	mov	r0, r3
   2323c:	sub	sp, fp, #12
   23240:	ldrd	r4, [sp]
   23244:	ldr	fp, [sp, #8]
   23248:	add	sp, sp, #12
   2324c:	pop	{pc}		; (ldr pc, [sp], #4)
   23250:	svcpl	0x006c656e
   23254:	stmdavs	r1!, {r1, r4, r5, r6, r8, fp, sp, lr}^
   23258:	andeq	r0, r0, r0
   2325c:	ldrbvs	r6, [r4, -r0, lsl #16]!
   23260:	andeq	r6, r2, r8, ror r2
   23264:	str	fp, [sp, #-8]!
   23268:	str	lr, [sp, #4]
   2326c:	add	fp, sp, #4
   23270:	sub	sp, sp, #24
   23274:	str	r0, [fp, #-16]
   23278:	str	r1, [fp, #-20]	; 0xffffffec
   2327c:	str	r2, [fp, #-24]	; 0xffffffe8
   23280:	str	r3, [fp, #-28]	; 0xffffffe4
   23284:	ldr	r3, [fp, #-28]	; 0xffffffe4
   23288:	mov	r2, #0
   2328c:	str	r2, [r3]
   23290:	ldr	r3, [fp, #-16]
   23294:	ldr	r3, [r3]
   23298:	mov	r2, #2
   2329c:	mov	r1, #2
   232a0:	mov	r0, r3
   232a4:	bl	28f94 <flatcc_builder_start_struct@@Base>
   232a8:	str	r0, [fp, #-8]
   232ac:	ldr	r3, [fp, #-8]
   232b0:	cmp	r3, #0
   232b4:	beq	23314 <_start@@Base+0x10c5c>
   232b8:	ldr	r3, [fp, #-8]
   232bc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   232c0:	ldr	r1, [fp, #-20]	; 0xffffffec
   232c4:	ldr	r0, [fp, #-16]
   232c8:	bl	2301c <_start@@Base+0x10964>
   232cc:	str	r0, [fp, #-20]	; 0xffffffec
   232d0:	ldr	r2, [fp, #-20]	; 0xffffffec
   232d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   232d8:	cmp	r2, r3
   232dc:	beq	2331c <_start@@Base+0x10c64>
   232e0:	ldr	r3, [fp, #-16]
   232e4:	ldr	r3, [r3]
   232e8:	mov	r0, r3
   232ec:	bl	29040 <flatcc_builder_end_struct@@Base>
   232f0:	mov	r2, r0
   232f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   232f8:	str	r2, [r3]
   232fc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   23300:	ldr	r3, [r3]
   23304:	cmp	r3, #0
   23308:	beq	2331c <_start@@Base+0x10c64>
   2330c:	ldr	r3, [fp, #-20]	; 0xffffffec
   23310:	b	23338 <_start@@Base+0x10c80>
   23314:	nop	{0}
   23318:	b	23320 <_start@@Base+0x10c68>
   2331c:	nop	{0}
   23320:	mov	r3, #33	; 0x21
   23324:	ldr	r2, [fp, #-24]	; 0xffffffe8
   23328:	ldr	r1, [fp, #-20]	; 0xffffffec
   2332c:	ldr	r0, [fp, #-16]
   23330:	bl	33258 <flatcc_json_parser_set_error@@Base>
   23334:	mov	r3, r0
   23338:	mov	r0, r3
   2333c:	sub	sp, fp, #4
   23340:	ldr	fp, [sp]
   23344:	add	sp, sp, #4
   23348:	pop	{pc}		; (ldr pc, [sp], #4)
   2334c:	strd	r4, [sp, #-16]!
   23350:	str	fp, [sp, #8]
   23354:	str	lr, [sp, #12]
   23358:	add	fp, sp, #12
   2335c:	sub	sp, sp, #48	; 0x30
   23360:	str	r0, [fp, #-40]	; 0xffffffd8
   23364:	str	r1, [fp, #-44]	; 0xffffffd4
   23368:	str	r2, [fp, #-48]	; 0xffffffd0
   2336c:	str	r3, [fp, #-52]	; 0xffffffcc
   23370:	sub	r3, fp, #32
   23374:	ldr	r2, [fp, #-48]	; 0xffffffd0
   23378:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2337c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   23380:	bl	13a6c <_start@@Base+0x13b4>
   23384:	str	r0, [fp, #-44]	; 0xffffffd4
   23388:	b	23540 <_start@@Base+0x10e88>
   2338c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   23390:	ldr	r1, [fp, #-44]	; 0xffffffd4
   23394:	ldr	r0, [fp, #-40]	; 0xffffffd8
   23398:	bl	135f4 <_start@@Base+0xf3c>
   2339c:	str	r0, [fp, #-44]	; 0xffffffd4
   233a0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   233a4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   233a8:	bl	13928 <_start@@Base+0x1270>
   233ac:	strd	r0, [fp, #-20]	; 0xffffffec
   233b0:	ldrd	r2, [fp, #-20]	; 0xffffffec
   233b4:	add	r1, pc, #460	; 0x1cc
   233b8:	ldrd	r0, [r1]
   233bc:	cmp	r3, r1
   233c0:	cmpeq	r2, r0
   233c4:	bne	23514 <_start@@Base+0x10e5c>
   233c8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   233cc:	add	r3, r3, #8
   233d0:	str	r3, [fp, #-44]	; 0xffffffd4
   233d4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   233d8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   233dc:	bl	13928 <_start@@Base+0x1270>
   233e0:	strd	r0, [fp, #-20]	; 0xffffffec
   233e4:	ldrd	r2, [fp, #-20]	; 0xffffffec
   233e8:	mov	r0, #0
   233ec:	mov	r1, #0
   233f0:	movt	r1, #65535	; 0xffff
   233f4:	and	r4, r2, r0
   233f8:	and	r5, r3, r1
   233fc:	mov	r2, #0
   23400:	mov	r3, #0
   23404:	movt	r3, #24932	; 0x6164
   23408:	cmp	r5, r3
   2340c:	cmpeq	r4, r2
   23410:	bne	234fc <_start@@Base+0x10e44>
   23414:	ldr	r3, [fp, #-44]	; 0xffffffd4
   23418:	str	r3, [fp, #-24]	; 0xffffffe8
   2341c:	mov	r3, #2
   23420:	ldr	r2, [fp, #-48]	; 0xffffffd0
   23424:	ldr	r1, [fp, #-24]	; 0xffffffe8
   23428:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2342c:	bl	13f3c <_start@@Base+0x1884>
   23430:	str	r0, [fp, #-44]	; 0xffffffd4
   23434:	ldr	r2, [fp, #-24]	; 0xffffffe8
   23438:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2343c:	cmp	r2, r3
   23440:	beq	234e4 <_start@@Base+0x10e2c>
   23444:	mov	r3, #0
   23448:	str	r3, [fp, #-36]	; 0xffffffdc
   2344c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   23450:	str	r3, [fp, #-28]	; 0xffffffe4
   23454:	ldr	r3, [fp, #-44]	; 0xffffffd4
   23458:	str	r3, [fp, #-24]	; 0xffffffe8
   2345c:	sub	r3, fp, #36	; 0x24
   23460:	ldr	r2, [fp, #-48]	; 0xffffffd0
   23464:	ldr	r1, [fp, #-24]	; 0xffffffe8
   23468:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2346c:	bl	14c4c <_start@@Base+0x2594>
   23470:	str	r0, [fp, #-44]	; 0xffffffd4
   23474:	ldr	r2, [fp, #-24]	; 0xffffffe8
   23478:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2347c:	cmp	r2, r3
   23480:	bne	234d0 <_start@@Base+0x10e18>
   23484:	ldr	r3, [fp, #-44]	; 0xffffffd4
   23488:	str	r3, [fp, #-24]	; 0xffffffe8
   2348c:	sub	r3, fp, #36	; 0x24
   23490:	str	r3, [sp]
   23494:	ldr	r3, [pc, #244]	; 23590 <_start@@Base+0x10ed8>
   23498:	add	r3, pc, r3
   2349c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   234a0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   234a4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   234a8:	bl	15990 <_start@@Base+0x32d8>
   234ac:	str	r0, [fp, #-44]	; 0xffffffd4
   234b0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   234b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   234b8:	cmp	r2, r3
   234bc:	beq	23554 <_start@@Base+0x10e9c>
   234c0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   234c4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   234c8:	cmp	r2, r3
   234cc:	beq	23554 <_start@@Base+0x10e9c>
   234d0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   234d4:	mov	r1, r3
   234d8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   234dc:	bl	12b34 <_start@@Base+0x47c>
   234e0:	b	23528 <_start@@Base+0x10e70>
   234e4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   234e8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   234ec:	ldr	r0, [fp, #-40]	; 0xffffffd8
   234f0:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   234f4:	str	r0, [fp, #-44]	; 0xffffffd4
   234f8:	b	23528 <_start@@Base+0x10e70>
   234fc:	ldr	r2, [fp, #-48]	; 0xffffffd0
   23500:	ldr	r1, [fp, #-44]	; 0xffffffd4
   23504:	ldr	r0, [fp, #-40]	; 0xffffffd8
   23508:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   2350c:	str	r0, [fp, #-44]	; 0xffffffd4
   23510:	b	23528 <_start@@Base+0x10e70>
   23514:	ldr	r2, [fp, #-48]	; 0xffffffd0
   23518:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2351c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   23520:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   23524:	str	r0, [fp, #-44]	; 0xffffffd4
   23528:	sub	r3, fp, #32
   2352c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   23530:	ldr	r1, [fp, #-44]	; 0xffffffd4
   23534:	ldr	r0, [fp, #-40]	; 0xffffffd8
   23538:	bl	13b60 <_start@@Base+0x14a8>
   2353c:	str	r0, [fp, #-44]	; 0xffffffd4
   23540:	ldr	r3, [fp, #-32]	; 0xffffffe0
   23544:	cmp	r3, #0
   23548:	bne	2338c <_start@@Base+0x10cd4>
   2354c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   23550:	b	23570 <_start@@Base+0x10eb8>
   23554:	nop	{0}
   23558:	mov	r3, #33	; 0x21
   2355c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   23560:	ldr	r1, [fp, #-44]	; 0xffffffd4
   23564:	ldr	r0, [fp, #-40]	; 0xffffffd8
   23568:	bl	33258 <flatcc_json_parser_set_error@@Base>
   2356c:	mov	r3, r0
   23570:	mov	r0, r3
   23574:	sub	sp, fp, #12
   23578:	ldrd	r4, [sp]
   2357c:	ldr	fp, [sp, #8]
   23580:	add	sp, sp, #12
   23584:	pop	{pc}		; (ldr pc, [sp], #4)
   23588:	cmpvc	pc, #1342177286	; 0x50000006
   2358c:	rsbvs	r6, pc, #428	; 0x1ac
   23590:	andeq	r5, r2, ip, asr #30
   23594:	str	fp, [sp, #-8]!
   23598:	str	lr, [sp, #4]
   2359c:	add	fp, sp, #4
   235a0:	sub	sp, sp, #24
   235a4:	str	r0, [fp, #-16]
   235a8:	str	r1, [fp, #-20]	; 0xffffffec
   235ac:	str	r2, [fp, #-24]	; 0xffffffe8
   235b0:	str	r3, [fp, #-28]	; 0xffffffe4
   235b4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   235b8:	mov	r2, #0
   235bc:	str	r2, [r3]
   235c0:	ldr	r3, [fp, #-16]
   235c4:	ldr	r3, [r3]
   235c8:	mov	r2, #4
   235cc:	mov	r1, #4
   235d0:	mov	r0, r3
   235d4:	bl	28f94 <flatcc_builder_start_struct@@Base>
   235d8:	str	r0, [fp, #-8]
   235dc:	ldr	r3, [fp, #-8]
   235e0:	cmp	r3, #0
   235e4:	beq	23644 <_start@@Base+0x10f8c>
   235e8:	ldr	r3, [fp, #-8]
   235ec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   235f0:	ldr	r1, [fp, #-20]	; 0xffffffec
   235f4:	ldr	r0, [fp, #-16]
   235f8:	bl	2334c <_start@@Base+0x10c94>
   235fc:	str	r0, [fp, #-20]	; 0xffffffec
   23600:	ldr	r2, [fp, #-20]	; 0xffffffec
   23604:	ldr	r3, [fp, #-24]	; 0xffffffe8
   23608:	cmp	r2, r3
   2360c:	beq	2364c <_start@@Base+0x10f94>
   23610:	ldr	r3, [fp, #-16]
   23614:	ldr	r3, [r3]
   23618:	mov	r0, r3
   2361c:	bl	29040 <flatcc_builder_end_struct@@Base>
   23620:	mov	r2, r0
   23624:	ldr	r3, [fp, #-28]	; 0xffffffe4
   23628:	str	r2, [r3]
   2362c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   23630:	ldr	r3, [r3]
   23634:	cmp	r3, #0
   23638:	beq	2364c <_start@@Base+0x10f94>
   2363c:	ldr	r3, [fp, #-20]	; 0xffffffec
   23640:	b	23668 <_start@@Base+0x10fb0>
   23644:	nop	{0}
   23648:	b	23650 <_start@@Base+0x10f98>
   2364c:	nop	{0}
   23650:	mov	r3, #33	; 0x21
   23654:	ldr	r2, [fp, #-24]	; 0xffffffe8
   23658:	ldr	r1, [fp, #-20]	; 0xffffffec
   2365c:	ldr	r0, [fp, #-16]
   23660:	bl	33258 <flatcc_json_parser_set_error@@Base>
   23664:	mov	r3, r0
   23668:	mov	r0, r3
   2366c:	sub	sp, fp, #4
   23670:	ldr	fp, [sp]
   23674:	add	sp, sp, #4
   23678:	pop	{pc}		; (ldr pc, [sp], #4)
   2367c:	str	fp, [sp, #-8]!
   23680:	str	lr, [sp, #4]
   23684:	add	fp, sp, #4
   23688:	sub	sp, sp, #16
   2368c:	str	r0, [fp, #-8]
   23690:	str	r1, [fp, #-12]
   23694:	str	r2, [fp, #-16]
   23698:	strb	r3, [fp, #-17]	; 0xffffffef
   2369c:	ldr	r3, [fp, #4]
   236a0:	mov	r2, #0
   236a4:	str	r2, [r3]
   236a8:	ldrb	r3, [fp, #-17]	; 0xffffffef
   236ac:	cmp	r3, #9
   236b0:	beq	23744 <_start@@Base+0x1108c>
   236b4:	cmp	r3, #9
   236b8:	bgt	236d8 <_start@@Base+0x11020>
   236bc:	cmp	r3, #2
   236c0:	beq	2370c <_start@@Base+0x11054>
   236c4:	cmp	r3, #8
   236c8:	beq	23728 <_start@@Base+0x11070>
   236cc:	cmp	r3, #0
   236d0:	beq	236f4 <_start@@Base+0x1103c>
   236d4:	b	237b4 <_start@@Base+0x110fc>
   236d8:	cmp	r3, #11
   236dc:	beq	2377c <_start@@Base+0x110c4>
   236e0:	cmp	r3, #11
   236e4:	blt	23760 <_start@@Base+0x110a8>
   236e8:	cmp	r3, #255	; 0xff
   236ec:	beq	23798 <_start@@Base+0x110e0>
   236f0:	b	237b4 <_start@@Base+0x110fc>
   236f4:	ldr	r2, [fp, #-16]
   236f8:	ldr	r1, [fp, #-12]
   236fc:	ldr	r0, [fp, #-8]
   23700:	bl	14768 <_start@@Base+0x20b0>
   23704:	mov	r3, r0
   23708:	b	23844 <_start@@Base+0x1118c>
   2370c:	ldr	r3, [fp, #4]
   23710:	ldr	r2, [fp, #-16]
   23714:	ldr	r1, [fp, #-12]
   23718:	ldr	r0, [fp, #-8]
   2371c:	bl	22cb8 <_start@@Base+0x10600>
   23720:	str	r0, [fp, #-12]
   23724:	b	237fc <_start@@Base+0x11144>
   23728:	ldr	r3, [fp, #4]
   2372c:	ldr	r2, [fp, #-16]
   23730:	ldr	r1, [fp, #-12]
   23734:	ldr	r0, [fp, #-8]
   23738:	bl	23264 <_start@@Base+0x10bac>
   2373c:	str	r0, [fp, #-12]
   23740:	b	237fc <_start@@Base+0x11144>
   23744:	ldr	r3, [fp, #4]
   23748:	ldr	r2, [fp, #-16]
   2374c:	ldr	r1, [fp, #-12]
   23750:	ldr	r0, [fp, #-8]
   23754:	bl	23594 <_start@@Base+0x10edc>
   23758:	str	r0, [fp, #-12]
   2375c:	b	237fc <_start@@Base+0x11144>
   23760:	ldr	r3, [fp, #4]
   23764:	ldr	r2, [fp, #-16]
   23768:	ldr	r1, [fp, #-12]
   2376c:	ldr	r0, [fp, #-8]
   23770:	bl	23594 <_start@@Base+0x10edc>
   23774:	str	r0, [fp, #-12]
   23778:	b	237fc <_start@@Base+0x11144>
   2377c:	ldr	r3, [fp, #4]
   23780:	ldr	r2, [fp, #-16]
   23784:	ldr	r1, [fp, #-12]
   23788:	ldr	r0, [fp, #-8]
   2378c:	bl	35410 <flatcc_json_parser_build_string@@Base>
   23790:	str	r0, [fp, #-12]
   23794:	b	237fc <_start@@Base+0x11144>
   23798:	ldr	r3, [fp, #4]
   2379c:	ldr	r2, [fp, #-16]
   237a0:	ldr	r1, [fp, #-12]
   237a4:	ldr	r0, [fp, #-8]
   237a8:	bl	35410 <flatcc_json_parser_build_string@@Base>
   237ac:	str	r0, [fp, #-12]
   237b0:	b	237fc <_start@@Base+0x11144>
   237b4:	ldr	r3, [fp, #-8]
   237b8:	ldr	r3, [r3, #8]
   237bc:	and	r3, r3, #1
   237c0:	cmp	r3, #0
   237c4:	bne	237e4 <_start@@Base+0x1112c>
   237c8:	mov	r3, #15
   237cc:	ldr	r2, [fp, #-16]
   237d0:	ldr	r1, [fp, #-12]
   237d4:	ldr	r0, [fp, #-8]
   237d8:	bl	33258 <flatcc_json_parser_set_error@@Base>
   237dc:	mov	r3, r0
   237e0:	b	23844 <_start@@Base+0x1118c>
   237e4:	ldr	r2, [fp, #-16]
   237e8:	ldr	r1, [fp, #-12]
   237ec:	ldr	r0, [fp, #-8]
   237f0:	bl	34adc <flatcc_json_parser_generic_json@@Base>
   237f4:	mov	r3, r0
   237f8:	b	23844 <_start@@Base+0x1118c>
   237fc:	ldr	r3, [fp, #-8]
   23800:	ldr	r3, [r3, #24]
   23804:	cmp	r3, #0
   23808:	beq	23814 <_start@@Base+0x1115c>
   2380c:	ldr	r3, [fp, #-12]
   23810:	b	23844 <_start@@Base+0x1118c>
   23814:	ldr	r3, [fp, #4]
   23818:	ldr	r3, [r3]
   2381c:	cmp	r3, #0
   23820:	bne	23840 <_start@@Base+0x11188>
   23824:	mov	r3, #33	; 0x21
   23828:	ldr	r2, [fp, #-16]
   2382c:	ldr	r1, [fp, #-12]
   23830:	ldr	r0, [fp, #-8]
   23834:	bl	33258 <flatcc_json_parser_set_error@@Base>
   23838:	mov	r3, r0
   2383c:	b	23844 <_start@@Base+0x1118c>
   23840:	ldr	r3, [fp, #-12]
   23844:	mov	r0, r3
   23848:	sub	sp, fp, #4
   2384c:	ldr	fp, [sp]
   23850:	add	sp, sp, #4
   23854:	pop	{pc}		; (ldr pc, [sp], #4)
   23858:	push	{fp}		; (str fp, [sp, #-4]!)
   2385c:	add	fp, sp, #0
   23860:	sub	sp, sp, #12
   23864:	mov	r3, r0
   23868:	strb	r3, [fp, #-5]
   2386c:	ldrb	r3, [fp, #-5]
   23870:	cmp	r3, #9
   23874:	beq	238d0 <_start@@Base+0x11218>
   23878:	cmp	r3, #9
   2387c:	bgt	2389c <_start@@Base+0x111e4>
   23880:	cmp	r3, #2
   23884:	beq	238c0 <_start@@Base+0x11208>
   23888:	cmp	r3, #8
   2388c:	beq	238c8 <_start@@Base+0x11210>
   23890:	cmp	r3, #0
   23894:	beq	238b8 <_start@@Base+0x11200>
   23898:	b	238f0 <_start@@Base+0x11238>
   2389c:	cmp	r3, #11
   238a0:	beq	238e0 <_start@@Base+0x11228>
   238a4:	cmp	r3, #11
   238a8:	blt	238d8 <_start@@Base+0x11220>
   238ac:	cmp	r3, #255	; 0xff
   238b0:	beq	238e8 <_start@@Base+0x11230>
   238b4:	b	238f0 <_start@@Base+0x11238>
   238b8:	mov	r3, #1
   238bc:	b	238f4 <_start@@Base+0x1123c>
   238c0:	mov	r3, #1
   238c4:	b	238f4 <_start@@Base+0x1123c>
   238c8:	mov	r3, #1
   238cc:	b	238f4 <_start@@Base+0x1123c>
   238d0:	mov	r3, #1
   238d4:	b	238f4 <_start@@Base+0x1123c>
   238d8:	mov	r3, #1
   238dc:	b	238f4 <_start@@Base+0x1123c>
   238e0:	mov	r3, #1
   238e4:	b	238f4 <_start@@Base+0x1123c>
   238e8:	mov	r3, #1
   238ec:	b	238f4 <_start@@Base+0x1123c>
   238f0:	mov	r3, #0
   238f4:	mov	r0, r3
   238f8:	add	sp, fp, #0
   238fc:	pop	{fp}		; (ldr fp, [sp], #4)
   23900:	bx	lr
   23904:	strd	r4, [sp, #-32]!	; 0xffffffe0
   23908:	strd	r6, [sp, #8]
   2390c:	strd	r8, [sp, #16]
   23910:	str	fp, [sp, #24]
   23914:	str	lr, [sp, #28]
   23918:	add	fp, sp, #28
   2391c:	sub	sp, sp, #72	; 0x48
   23920:	str	r0, [fp, #-56]	; 0xffffffc8
   23924:	str	r1, [fp, #-60]	; 0xffffffc4
   23928:	str	r2, [fp, #-64]	; 0xffffffc0
   2392c:	str	r3, [fp, #-68]	; 0xffffffbc
   23930:	ldr	r3, [fp, #-60]	; 0xffffffc4
   23934:	str	r3, [fp, #-32]	; 0xffffffe0
   23938:	ldr	r1, [fp, #-64]	; 0xffffffc0
   2393c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   23940:	bl	13928 <_start@@Base+0x1270>
   23944:	strd	r0, [fp, #-44]	; 0xffffffd4
   23948:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   2394c:	add	r3, pc, #972	; 0x3cc
   23950:	ldrd	r2, [r3]
   23954:	cmp	r1, r3
   23958:	cmpeq	r0, r2
   2395c:	bhi	23b44 <_start@@Base+0x1148c>
   23960:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   23964:	add	r1, pc, #956	; 0x3bc
   23968:	ldrd	r0, [r1]
   2396c:	cmp	r3, r1
   23970:	cmpeq	r2, r0
   23974:	bhi	23a14 <_start@@Base+0x1135c>
   23978:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   2397c:	mov	r0, #-16777216	; 0xff000000
   23980:	mvn	r1, #0
   23984:	and	ip, r2, r0
   23988:	str	ip, [fp, #-76]	; 0xffffffb4
   2398c:	and	r3, r3, r1
   23990:	str	r3, [fp, #-72]	; 0xffffffb8
   23994:	add	r3, pc, #916	; 0x394
   23998:	ldrd	r2, [r3]
   2399c:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   239a0:	cmp	r1, r3
   239a4:	cmpeq	r0, r2
   239a8:	bne	23a0c <_start@@Base+0x11354>
   239ac:	ldr	r3, [fp, #-60]	; 0xffffffc4
   239b0:	str	r3, [fp, #-48]	; 0xffffffd0
   239b4:	ldr	r3, [fp, #8]
   239b8:	str	r3, [sp]
   239bc:	mov	r3, #5
   239c0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   239c4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   239c8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   239cc:	bl	3403c <flatcc_json_parser_match_constant@@Base>
   239d0:	str	r0, [fp, #-60]	; 0xffffffc4
   239d4:	ldr	r2, [fp, #-60]	; 0xffffffc4
   239d8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   239dc:	cmp	r2, r3
   239e0:	beq	23a04 <_start@@Base+0x1134c>
   239e4:	ldr	r1, [fp, #4]
   239e8:	mov	r2, #9
   239ec:	mov	r3, #0
   239f0:	strd	r2, [r1]
   239f4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   239f8:	mov	r2, #0
   239fc:	str	r2, [r3]
   23a00:	b	23df8 <_start@@Base+0x11740>
   23a04:	ldr	r3, [fp, #-32]	; 0xffffffe0
   23a08:	b	23dfc <_start@@Base+0x11744>
   23a0c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   23a10:	b	23dfc <_start@@Base+0x11744>
   23a14:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   23a18:	mov	r0, #-16777216	; 0xff000000
   23a1c:	mvn	r1, #0
   23a20:	and	ip, r2, r0
   23a24:	str	ip, [fp, #-84]	; 0xffffffac
   23a28:	and	r3, r3, r1
   23a2c:	str	r3, [fp, #-80]	; 0xffffffb0
   23a30:	add	r3, pc, #768	; 0x300
   23a34:	ldrd	r2, [r3]
   23a38:	ldrd	r0, [fp, #-84]	; 0xffffffac
   23a3c:	cmp	r1, r3
   23a40:	cmpeq	r0, r2
   23a44:	bne	23aa8 <_start@@Base+0x113f0>
   23a48:	ldr	r3, [fp, #-60]	; 0xffffffc4
   23a4c:	str	r3, [fp, #-48]	; 0xffffffd0
   23a50:	ldr	r3, [fp, #8]
   23a54:	str	r3, [sp]
   23a58:	mov	r3, #5
   23a5c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   23a60:	ldr	r1, [fp, #-48]	; 0xffffffd0
   23a64:	ldr	r0, [fp, #-56]	; 0xffffffc8
   23a68:	bl	3403c <flatcc_json_parser_match_constant@@Base>
   23a6c:	str	r0, [fp, #-60]	; 0xffffffc4
   23a70:	ldr	r2, [fp, #-60]	; 0xffffffc4
   23a74:	ldr	r3, [fp, #-48]	; 0xffffffd0
   23a78:	cmp	r2, r3
   23a7c:	beq	23aa0 <_start@@Base+0x113e8>
   23a80:	ldr	r1, [fp, #4]
   23a84:	mov	r2, #2
   23a88:	mov	r3, #0
   23a8c:	strd	r2, [r1]
   23a90:	ldr	r3, [fp, #-68]	; 0xffffffbc
   23a94:	mov	r2, #0
   23a98:	str	r2, [r3]
   23a9c:	b	23df8 <_start@@Base+0x11740>
   23aa0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   23aa4:	b	23dfc <_start@@Base+0x11744>
   23aa8:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   23aac:	mvn	r0, #255	; 0xff
   23ab0:	mvn	r1, #0
   23ab4:	and	ip, r2, r0
   23ab8:	str	ip, [fp, #-92]	; 0xffffffa4
   23abc:	and	r3, r3, r1
   23ac0:	str	r3, [fp, #-88]	; 0xffffffa8
   23ac4:	add	r3, pc, #628	; 0x274
   23ac8:	ldrd	r2, [r3]
   23acc:	ldrd	r0, [fp, #-92]	; 0xffffffa4
   23ad0:	cmp	r1, r3
   23ad4:	cmpeq	r0, r2
   23ad8:	bne	23b3c <_start@@Base+0x11484>
   23adc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   23ae0:	str	r3, [fp, #-48]	; 0xffffffd0
   23ae4:	ldr	r3, [fp, #8]
   23ae8:	str	r3, [sp]
   23aec:	mov	r3, #7
   23af0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   23af4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   23af8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   23afc:	bl	3403c <flatcc_json_parser_match_constant@@Base>
   23b00:	str	r0, [fp, #-60]	; 0xffffffc4
   23b04:	ldr	r2, [fp, #-60]	; 0xffffffc4
   23b08:	ldr	r3, [fp, #-48]	; 0xffffffd0
   23b0c:	cmp	r2, r3
   23b10:	beq	23b34 <_start@@Base+0x1147c>
   23b14:	ldr	r1, [fp, #4]
   23b18:	mov	r2, #10
   23b1c:	mov	r3, #0
   23b20:	strd	r2, [r1]
   23b24:	ldr	r3, [fp, #-68]	; 0xffffffbc
   23b28:	mov	r2, #0
   23b2c:	str	r2, [r3]
   23b30:	b	23df8 <_start@@Base+0x11740>
   23b34:	ldr	r3, [fp, #-32]	; 0xffffffe0
   23b38:	b	23dfc <_start@@Base+0x11744>
   23b3c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   23b40:	b	23dfc <_start@@Base+0x11744>
   23b44:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   23b48:	add	r1, pc, #504	; 0x1f8
   23b4c:	ldrd	r0, [r1]
   23b50:	cmp	r3, r1
   23b54:	cmpeq	r2, r0
   23b58:	bhi	23bec <_start@@Base+0x11534>
   23b5c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   23b60:	mov	r0, #0
   23b64:	mvn	r1, #0
   23b68:	and	r8, r2, r0
   23b6c:	and	r9, r3, r1
   23b70:	add	r3, pc, #472	; 0x1d8
   23b74:	ldrd	r2, [r3]
   23b78:	cmp	r9, r3
   23b7c:	cmpeq	r8, r2
   23b80:	bne	23be4 <_start@@Base+0x1152c>
   23b84:	ldr	r3, [fp, #-60]	; 0xffffffc4
   23b88:	str	r3, [fp, #-48]	; 0xffffffd0
   23b8c:	ldr	r3, [fp, #8]
   23b90:	str	r3, [sp]
   23b94:	mov	r3, #4
   23b98:	ldr	r2, [fp, #-64]	; 0xffffffc0
   23b9c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   23ba0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   23ba4:	bl	3403c <flatcc_json_parser_match_constant@@Base>
   23ba8:	str	r0, [fp, #-60]	; 0xffffffc4
   23bac:	ldr	r2, [fp, #-60]	; 0xffffffc4
   23bb0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   23bb4:	cmp	r2, r3
   23bb8:	beq	23bdc <_start@@Base+0x11524>
   23bbc:	ldr	r1, [fp, #4]
   23bc0:	mov	r2, #0
   23bc4:	mov	r3, #0
   23bc8:	strd	r2, [r1]
   23bcc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   23bd0:	mov	r2, #0
   23bd4:	str	r2, [r3]
   23bd8:	b	23df8 <_start@@Base+0x11740>
   23bdc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   23be0:	b	23dfc <_start@@Base+0x11744>
   23be4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   23be8:	b	23dfc <_start@@Base+0x11744>
   23bec:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   23bf0:	add	r1, pc, #352	; 0x160
   23bf4:	ldrd	r0, [r1]
   23bf8:	cmp	r3, r1
   23bfc:	cmpeq	r2, r0
   23c00:	bhi	23c94 <_start@@Base+0x115dc>
   23c04:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   23c08:	mov	r0, #-16777216	; 0xff000000
   23c0c:	mvn	r1, #0
   23c10:	and	r6, r2, r0
   23c14:	and	r7, r3, r1
   23c18:	add	r3, pc, #320	; 0x140
   23c1c:	ldrd	r2, [r3]
   23c20:	cmp	r7, r3
   23c24:	cmpeq	r6, r2
   23c28:	bne	23c8c <_start@@Base+0x115d4>
   23c2c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   23c30:	str	r3, [fp, #-48]	; 0xffffffd0
   23c34:	ldr	r3, [fp, #8]
   23c38:	str	r3, [sp]
   23c3c:	mov	r3, #5
   23c40:	ldr	r2, [fp, #-64]	; 0xffffffc0
   23c44:	ldr	r1, [fp, #-48]	; 0xffffffd0
   23c48:	ldr	r0, [fp, #-56]	; 0xffffffc8
   23c4c:	bl	3403c <flatcc_json_parser_match_constant@@Base>
   23c50:	str	r0, [fp, #-60]	; 0xffffffc4
   23c54:	ldr	r2, [fp, #-60]	; 0xffffffc4
   23c58:	ldr	r3, [fp, #-48]	; 0xffffffd0
   23c5c:	cmp	r2, r3
   23c60:	beq	23c84 <_start@@Base+0x115cc>
   23c64:	ldr	r1, [fp, #4]
   23c68:	mov	r2, #11
   23c6c:	mov	r3, #0
   23c70:	strd	r2, [r1]
   23c74:	ldr	r3, [fp, #-68]	; 0xffffffbc
   23c78:	mov	r2, #0
   23c7c:	str	r2, [r3]
   23c80:	b	23df8 <_start@@Base+0x11740>
   23c84:	ldr	r3, [fp, #-32]	; 0xffffffe0
   23c88:	b	23dfc <_start@@Base+0x11744>
   23c8c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   23c90:	b	23dfc <_start@@Base+0x11744>
   23c94:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   23c98:	mov	r0, #0
   23c9c:	movt	r0, #65535	; 0xffff
   23ca0:	mvn	r1, #0
   23ca4:	and	r4, r2, r0
   23ca8:	and	r5, r3, r1
   23cac:	add	r3, pc, #180	; 0xb4
   23cb0:	ldrd	r2, [r3]
   23cb4:	cmp	r5, r3
   23cb8:	cmpeq	r4, r2
   23cbc:	bne	23d78 <_start@@Base+0x116c0>
   23cc0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   23cc4:	str	r3, [fp, #-48]	; 0xffffffd0
   23cc8:	ldr	r3, [fp, #8]
   23ccc:	str	r3, [sp]
   23cd0:	mov	r3, #6
   23cd4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   23cd8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   23cdc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   23ce0:	bl	3403c <flatcc_json_parser_match_constant@@Base>
   23ce4:	str	r0, [fp, #-60]	; 0xffffffc4
   23ce8:	ldr	r2, [fp, #-60]	; 0xffffffc4
   23cec:	ldr	r3, [fp, #-48]	; 0xffffffd0
   23cf0:	cmp	r2, r3
   23cf4:	beq	23d18 <_start@@Base+0x11660>
   23cf8:	ldr	r1, [fp, #4]
   23cfc:	mov	r2, #255	; 0xff
   23d00:	mov	r3, #0
   23d04:	strd	r2, [r1]
   23d08:	ldr	r3, [fp, #-68]	; 0xffffffbc
   23d0c:	mov	r2, #0
   23d10:	str	r2, [r3]
   23d14:	b	23df8 <_start@@Base+0x11740>
   23d18:	ldr	r3, [fp, #-32]	; 0xffffffe0
   23d1c:	b	23dfc <_start@@Base+0x11744>
   23d20:			; <UNDEFINED> instruction: 0xffffffff
   23d24:	cdpmi	14, 4, cr4, cr15, cr4, {2}
   23d28:			; <UNDEFINED> instruction: 0x46616dff
   23d2c:	rsbmi	r6, pc, #428	; 0x1ac
   23d30:	strvs	r0, [r0, #-0]
   23d34:	rsbmi	r6, r5, #108, 24	; 0x6c00
   23d38:	cdpvs	0, 0, cr0, cr0, cr0, {0}
   23d3c:	ldclmi	12, cr4, [r5, #-388]!	; 0xfffffe7c
   23d40:	strbtmi	r6, [r1], -r0, lsl #28
   23d44:	rsbmi	r6, pc, #428	; 0x1ac
   23d48:	ldrshvc	pc, [pc, #255]	; 23e4f <_start@@Base+0x11797>	; <UNPREDICTABLE>
   23d4c:	svcmi	0x00746865
   23d50:	andeq	r0, r0, r0
   23d54:	cdpmi	14, 4, cr4, cr15, cr5, {2}
   23d58:	cdpvs	5, 7, cr6, cr10, cr11, {3}
   23d5c:	rsbpl	r7, r1, #117	; 0x75
   23d60:	andvc	r0, r0, #0
   23d64:	svcmi	0x00746865
   23d68:	strbvs	r0, [r4, #-0]!
   23d6c:	strbpl	r7, [lr, #-1395]!	; 0xfffffa8d
   23d70:	cdpvs	5, 7, cr6, cr10, cr12, {3}
   23d74:	rsbpl	r7, r1, #117	; 0x75
   23d78:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   23d7c:	sub	r1, pc, #20
   23d80:	ldrd	r0, [r1]
   23d84:	cmp	r3, r1
   23d88:	cmpeq	r2, r0
   23d8c:	bne	23df0 <_start@@Base+0x11738>
   23d90:	ldr	r3, [fp, #-60]	; 0xffffffc4
   23d94:	str	r3, [fp, #-48]	; 0xffffffd0
   23d98:	ldr	r3, [fp, #8]
   23d9c:	str	r3, [sp]
   23da0:	mov	r3, #8
   23da4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   23da8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   23dac:	ldr	r0, [fp, #-56]	; 0xffffffc8
   23db0:	bl	3403c <flatcc_json_parser_match_constant@@Base>
   23db4:	str	r0, [fp, #-60]	; 0xffffffc4
   23db8:	ldr	r2, [fp, #-60]	; 0xffffffc4
   23dbc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   23dc0:	cmp	r2, r3
   23dc4:	beq	23de8 <_start@@Base+0x11730>
   23dc8:	ldr	r1, [fp, #4]
   23dcc:	mov	r2, #8
   23dd0:	mov	r3, #0
   23dd4:	strd	r2, [r1]
   23dd8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   23ddc:	mov	r2, #0
   23de0:	str	r2, [r3]
   23de4:	b	23df8 <_start@@Base+0x11740>
   23de8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   23dec:	b	23dfc <_start@@Base+0x11744>
   23df0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   23df4:	b	23dfc <_start@@Base+0x11744>
   23df8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   23dfc:	mov	r0, r3
   23e00:	sub	sp, fp, #28
   23e04:	ldrd	r4, [sp]
   23e08:	ldrd	r6, [sp, #8]
   23e0c:	ldrd	r8, [sp, #16]
   23e10:	ldr	fp, [sp, #24]
   23e14:	add	sp, sp, #28
   23e18:	pop	{pc}		; (ldr pc, [sp], #4)
   23e1c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   23e20:	strd	r6, [sp, #8]
   23e24:	strd	r8, [sp, #16]
   23e28:	str	fp, [sp, #24]
   23e2c:	str	lr, [sp, #28]
   23e30:	add	fp, sp, #28
   23e34:	sub	sp, sp, #120	; 0x78
   23e38:	str	r0, [fp, #-56]	; 0xffffffc8
   23e3c:	str	r1, [fp, #-60]	; 0xffffffc4
   23e40:	str	r2, [fp, #-64]	; 0xffffffc0
   23e44:	str	r3, [fp, #-68]	; 0xffffffbc
   23e48:	ldr	r2, [fp, #-68]	; 0xffffffbc
   23e4c:	mov	r3, #0
   23e50:	str	r3, [r2]
   23e54:	ldr	r3, [fp, #-56]	; 0xffffffc8
   23e58:	ldr	r3, [r3]
   23e5c:	mov	r1, #10
   23e60:	mov	r0, r3
   23e64:	bl	29dfc <flatcc_builder_start_table@@Base>
   23e68:	mov	r3, r0
   23e6c:	cmp	r3, #0
   23e70:	bne	24978 <_start@@Base+0x122c0>
   23e74:	sub	r3, fp, #48	; 0x30
   23e78:	str	r3, [sp]
   23e7c:	mov	r3, #5
   23e80:	ldr	r2, [fp, #-64]	; 0xffffffc0
   23e84:	ldr	r1, [fp, #-60]	; 0xffffffc4
   23e88:	ldr	r0, [fp, #-56]	; 0xffffffc8
   23e8c:	bl	35620 <flatcc_json_parser_prepare_unions@@Base>
   23e90:	mov	r2, r0
   23e94:	ldr	r3, [fp, #-64]	; 0xffffffc0
   23e98:	cmp	r3, r2
   23e9c:	beq	24980 <_start@@Base+0x122c8>
   23ea0:	sub	r3, fp, #44	; 0x2c
   23ea4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   23ea8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   23eac:	ldr	r0, [fp, #-56]	; 0xffffffc8
   23eb0:	bl	13a6c <_start@@Base+0x13b4>
   23eb4:	str	r0, [fp, #-60]	; 0xffffffc4
   23eb8:	b	24910 <_start@@Base+0x12258>
   23ebc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   23ec0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   23ec4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   23ec8:	bl	135f4 <_start@@Base+0xf3c>
   23ecc:	str	r0, [fp, #-60]	; 0xffffffc4
   23ed0:	ldr	r1, [fp, #-64]	; 0xffffffc0
   23ed4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   23ed8:	bl	13928 <_start@@Base+0x1270>
   23edc:	strd	r0, [fp, #-36]	; 0xffffffdc
   23ee0:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   23ee4:	add	r3, pc, #924	; 0x39c
   23ee8:	ldrd	r2, [r3]
   23eec:	cmp	r1, r3
   23ef0:	cmpeq	r0, r2
   23ef4:	bhi	242c8 <_start@@Base+0x11c10>
   23ef8:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   23efc:	add	r3, pc, #908	; 0x38c
   23f00:	ldrd	r2, [r3]
   23f04:	cmp	r1, r3
   23f08:	cmpeq	r0, r2
   23f0c:	bne	240a8 <_start@@Base+0x119f0>
   23f10:	ldr	r3, [fp, #-60]	; 0xffffffc4
   23f14:	add	r3, r3, #8
   23f18:	str	r3, [fp, #-60]	; 0xffffffc4
   23f1c:	ldr	r1, [fp, #-64]	; 0xffffffc0
   23f20:	ldr	r0, [fp, #-60]	; 0xffffffc4
   23f24:	bl	13928 <_start@@Base+0x1270>
   23f28:	strd	r0, [fp, #-36]	; 0xffffffdc
   23f2c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   23f30:	mvn	r2, #255	; 0xff
   23f34:	mvn	r3, #0
   23f38:	and	r6, r0, r2
   23f3c:	and	r7, r1, r3
   23f40:	add	r3, pc, #848	; 0x350
   23f44:	ldrd	r2, [r3]
   23f48:	cmp	r7, r3
   23f4c:	cmpeq	r6, r2
   23f50:	bne	23fe0 <_start@@Base+0x11928>
   23f54:	ldr	r3, [fp, #-60]	; 0xffffffc4
   23f58:	str	r3, [fp, #-40]	; 0xffffffd8
   23f5c:	mov	r3, #7
   23f60:	ldr	r2, [fp, #-64]	; 0xffffffc0
   23f64:	ldr	r1, [fp, #-40]	; 0xffffffd8
   23f68:	ldr	r0, [fp, #-56]	; 0xffffffc8
   23f6c:	bl	13f3c <_start@@Base+0x1884>
   23f70:	str	r0, [fp, #-60]	; 0xffffffc4
   23f74:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23f78:	ldr	r3, [fp, #-60]	; 0xffffffc4
   23f7c:	cmp	r2, r3
   23f80:	beq	23fc8 <_start@@Base+0x11910>
   23f84:	ldr	r2, [fp, #-48]	; 0xffffffd0
   23f88:	ldr	r3, [pc, #800]	; 242b0 <_start@@Base+0x11bf8>
   23f8c:	add	r3, pc, r3
   23f90:	str	r3, [sp, #12]
   23f94:	ldr	r3, [pc, #792]	; 242b4 <_start@@Base+0x11bfc>
   23f98:	add	r3, pc, r3
   23f9c:	str	r3, [sp, #8]
   23fa0:	str	r2, [sp, #4]
   23fa4:	mov	r3, #3
   23fa8:	str	r3, [sp]
   23fac:	mov	r3, #1
   23fb0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   23fb4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   23fb8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   23fbc:	bl	35954 <flatcc_json_parser_union_type@@Base>
   23fc0:	str	r0, [fp, #-60]	; 0xffffffc4
   23fc4:	b	248f8 <_start@@Base+0x12240>
   23fc8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   23fcc:	ldr	r1, [fp, #-60]	; 0xffffffc4
   23fd0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   23fd4:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   23fd8:	str	r0, [fp, #-60]	; 0xffffffc4
   23fdc:	b	248f8 <_start@@Base+0x12240>
   23fe0:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   23fe4:	mov	r2, #0
   23fe8:	mov	r3, #0
   23fec:	movt	r3, #65535	; 0xffff
   23ff0:	and	r8, r0, r2
   23ff4:	and	r9, r1, r3
   23ff8:	mov	r2, #0
   23ffc:	mov	r3, #0
   24000:	movt	r3, #29556	; 0x7374
   24004:	cmp	r9, r3
   24008:	cmpeq	r8, r2
   2400c:	bne	24090 <_start@@Base+0x119d8>
   24010:	ldr	r3, [fp, #-60]	; 0xffffffc4
   24014:	str	r3, [fp, #-40]	; 0xffffffd8
   24018:	mov	r3, #2
   2401c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   24020:	ldr	r1, [fp, #-40]	; 0xffffffd8
   24024:	ldr	r0, [fp, #-56]	; 0xffffffc8
   24028:	bl	13f3c <_start@@Base+0x1884>
   2402c:	str	r0, [fp, #-60]	; 0xffffffc4
   24030:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24034:	ldr	r3, [fp, #-60]	; 0xffffffc4
   24038:	cmp	r2, r3
   2403c:	beq	24078 <_start@@Base+0x119c0>
   24040:	ldr	r2, [fp, #-48]	; 0xffffffd0
   24044:	ldr	r3, [pc, #620]	; 242b8 <_start@@Base+0x11c00>
   24048:	add	r3, pc, r3
   2404c:	str	r3, [sp, #8]
   24050:	str	r2, [sp, #4]
   24054:	mov	r3, #3
   24058:	str	r3, [sp]
   2405c:	mov	r3, #1
   24060:	ldr	r2, [fp, #-64]	; 0xffffffc0
   24064:	ldr	r1, [fp, #-60]	; 0xffffffc4
   24068:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2406c:	bl	35770 <flatcc_json_parser_union@@Base>
   24070:	str	r0, [fp, #-60]	; 0xffffffc4
   24074:	b	248f8 <_start@@Base+0x12240>
   24078:	ldr	r2, [fp, #-64]	; 0xffffffc0
   2407c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   24080:	ldr	r0, [fp, #-56]	; 0xffffffc8
   24084:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   24088:	str	r0, [fp, #-60]	; 0xffffffc4
   2408c:	b	248f8 <_start@@Base+0x12240>
   24090:	ldr	r2, [fp, #-64]	; 0xffffffc0
   24094:	ldr	r1, [fp, #-60]	; 0xffffffc4
   24098:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2409c:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   240a0:	str	r0, [fp, #-60]	; 0xffffffc4
   240a4:	b	248f8 <_start@@Base+0x12240>
   240a8:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   240ac:	add	r3, pc, #492	; 0x1ec
   240b0:	ldrd	r2, [r3]
   240b4:	cmp	r1, r3
   240b8:	cmpeq	r0, r2
   240bc:	bne	241bc <_start@@Base+0x11b04>
   240c0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   240c4:	add	r3, r3, #8
   240c8:	str	r3, [fp, #-60]	; 0xffffffc4
   240cc:	ldr	r1, [fp, #-64]	; 0xffffffc0
   240d0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   240d4:	bl	13928 <_start@@Base+0x1270>
   240d8:	strd	r0, [fp, #-36]	; 0xffffffdc
   240dc:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   240e0:	mov	r2, #0
   240e4:	mov	r3, #0
   240e8:	movt	r3, #65535	; 0xffff
   240ec:	and	ip, r0, r2
   240f0:	str	ip, [fp, #-76]	; 0xffffffb4
   240f4:	and	r3, r1, r3
   240f8:	str	r3, [fp, #-72]	; 0xffffffb8
   240fc:	mov	r2, #0
   24100:	mov	r3, #0
   24104:	movt	r3, #28773	; 0x7065
   24108:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   2410c:	cmp	r1, r3
   24110:	cmpeq	r0, r2
   24114:	bne	241a4 <_start@@Base+0x11aec>
   24118:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2411c:	str	r3, [fp, #-40]	; 0xffffffd8
   24120:	mov	r3, #2
   24124:	ldr	r2, [fp, #-64]	; 0xffffffc0
   24128:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2412c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   24130:	bl	13f3c <_start@@Base+0x1884>
   24134:	str	r0, [fp, #-60]	; 0xffffffc4
   24138:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2413c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   24140:	cmp	r2, r3
   24144:	beq	2418c <_start@@Base+0x11ad4>
   24148:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2414c:	ldr	r3, [pc, #360]	; 242bc <_start@@Base+0x11c04>
   24150:	add	r3, pc, r3
   24154:	str	r3, [sp, #12]
   24158:	ldr	r3, [pc, #352]	; 242c0 <_start@@Base+0x11c08>
   2415c:	add	r3, pc, r3
   24160:	str	r3, [sp, #8]
   24164:	str	r2, [sp, #4]
   24168:	mov	r3, #7
   2416c:	str	r3, [sp]
   24170:	mov	r3, #3
   24174:	ldr	r2, [fp, #-64]	; 0xffffffc0
   24178:	ldr	r1, [fp, #-60]	; 0xffffffc4
   2417c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   24180:	bl	35954 <flatcc_json_parser_union_type@@Base>
   24184:	str	r0, [fp, #-60]	; 0xffffffc4
   24188:	b	248f8 <_start@@Base+0x12240>
   2418c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   24190:	ldr	r1, [fp, #-60]	; 0xffffffc4
   24194:	ldr	r0, [fp, #-56]	; 0xffffffc8
   24198:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   2419c:	str	r0, [fp, #-60]	; 0xffffffc4
   241a0:	b	248f8 <_start@@Base+0x12240>
   241a4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   241a8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   241ac:	ldr	r0, [fp, #-56]	; 0xffffffc8
   241b0:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   241b4:	str	r0, [fp, #-60]	; 0xffffffc4
   241b8:	b	248f8 <_start@@Base+0x12240>
   241bc:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   241c0:	mov	r2, #-16777216	; 0xff000000
   241c4:	mvn	r3, #0
   241c8:	and	ip, r0, r2
   241cc:	str	ip, [fp, #-84]	; 0xffffffac
   241d0:	and	r3, r1, r3
   241d4:	str	r3, [fp, #-80]	; 0xffffffb0
   241d8:	add	r3, pc, #200	; 0xc8
   241dc:	ldrd	r2, [r3]
   241e0:	ldrd	r0, [fp, #-84]	; 0xffffffac
   241e4:	cmp	r1, r3
   241e8:	cmpeq	r0, r2
   241ec:	bne	24270 <_start@@Base+0x11bb8>
   241f0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   241f4:	str	r3, [fp, #-40]	; 0xffffffd8
   241f8:	mov	r3, #5
   241fc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   24200:	ldr	r1, [fp, #-40]	; 0xffffffd8
   24204:	ldr	r0, [fp, #-56]	; 0xffffffc8
   24208:	bl	13f3c <_start@@Base+0x1884>
   2420c:	str	r0, [fp, #-60]	; 0xffffffc4
   24210:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24214:	ldr	r3, [fp, #-60]	; 0xffffffc4
   24218:	cmp	r2, r3
   2421c:	beq	24258 <_start@@Base+0x11ba0>
   24220:	ldr	r2, [fp, #-48]	; 0xffffffd0
   24224:	ldr	r3, [pc, #152]	; 242c4 <_start@@Base+0x11c0c>
   24228:	add	r3, pc, r3
   2422c:	str	r3, [sp, #8]
   24230:	str	r2, [sp, #4]
   24234:	mov	r3, #7
   24238:	str	r3, [sp]
   2423c:	mov	r3, #3
   24240:	ldr	r2, [fp, #-64]	; 0xffffffc0
   24244:	ldr	r1, [fp, #-60]	; 0xffffffc4
   24248:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2424c:	bl	35770 <flatcc_json_parser_union@@Base>
   24250:	str	r0, [fp, #-60]	; 0xffffffc4
   24254:	b	248f8 <_start@@Base+0x12240>
   24258:	ldr	r2, [fp, #-64]	; 0xffffffc0
   2425c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   24260:	ldr	r0, [fp, #-56]	; 0xffffffc8
   24264:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   24268:	str	r0, [fp, #-60]	; 0xffffffc4
   2426c:	b	248f8 <_start@@Base+0x12240>
   24270:	ldr	r2, [fp, #-64]	; 0xffffffc0
   24274:	ldr	r1, [fp, #-60]	; 0xffffffc4
   24278:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2427c:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   24280:	str	r0, [fp, #-60]	; 0xffffffc4
   24284:	b	248f8 <_start@@Base+0x12240>
   24288:	cmnvs	r3, r4, ror #8
   2428c:	cmnvs	r8, #-2147483620	; 0x8000001c
   24290:	strbvs	r6, [pc, -r9, ror #28]!
   24294:	cmnvs	lr, r1, ror #8
   24298:	ldmdbvc	r0!, {r8, sl, sp, lr}^
   2429c:	cmnvc	r4, #116, 30	; 0x1d0
   242a0:	svcvs	0x005f7479
   242a4:	cmnvs	r1, #6464	; 0x1940
   242a8:	svcvs	0x00000000
   242ac:	cmnvs	r1, #6464	; 0x1940
   242b0:			; <UNDEFINED> instruction: 0xfffff6e8
   242b4:	andeq	r5, r2, r8, asr r4
   242b8:			; <UNDEFINED> instruction: 0xfffff62c
   242bc:			; <UNDEFINED> instruction: 0xfffff524
   242c0:	andeq	r5, r2, r4, lsr #5
   242c4:			; <UNDEFINED> instruction: 0xfffff44c
   242c8:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   242cc:	add	r3, pc, #988	; 0x3dc
   242d0:	ldrd	r2, [r3]
   242d4:	cmp	r1, r3
   242d8:	cmpeq	r0, r2
   242dc:	bhi	244cc <_start@@Base+0x11e14>
   242e0:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   242e4:	add	r3, pc, #972	; 0x3cc
   242e8:	ldrd	r2, [r3]
   242ec:	cmp	r1, r3
   242f0:	cmpeq	r0, r2
   242f4:	bne	244b4 <_start@@Base+0x11dfc>
   242f8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   242fc:	add	r3, r3, #8
   24300:	str	r3, [fp, #-60]	; 0xffffffc4
   24304:	ldr	r1, [fp, #-64]	; 0xffffffc0
   24308:	ldr	r0, [fp, #-60]	; 0xffffffc4
   2430c:	bl	13928 <_start@@Base+0x1270>
   24310:	strd	r0, [fp, #-36]	; 0xffffffdc
   24314:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   24318:	mvn	r2, #255	; 0xff
   2431c:	mvn	r3, #0
   24320:	and	ip, r0, r2
   24324:	str	ip, [fp, #-92]	; 0xffffffa4
   24328:	and	r3, r1, r3
   2432c:	str	r3, [fp, #-88]	; 0xffffffa8
   24330:	add	r3, pc, #904	; 0x388
   24334:	ldrd	r2, [r3]
   24338:	ldrd	r0, [fp, #-92]	; 0xffffffa4
   2433c:	cmp	r1, r3
   24340:	cmpeq	r0, r2
   24344:	bne	243e0 <_start@@Base+0x11d28>
   24348:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2434c:	str	r3, [fp, #-40]	; 0xffffffd8
   24350:	mov	r3, #7
   24354:	ldr	r2, [fp, #-64]	; 0xffffffc0
   24358:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2435c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   24360:	bl	13f3c <_start@@Base+0x1884>
   24364:	str	r0, [fp, #-60]	; 0xffffffc4
   24368:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2436c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   24370:	cmp	r2, r3
   24374:	beq	243c8 <_start@@Base+0x11d10>
   24378:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2437c:	ldr	r3, [pc, #868]	; 246e8 <_start@@Base+0x12030>
   24380:	add	r3, pc, r3
   24384:	str	r3, [sp, #16]
   24388:	ldr	r3, [pc, #860]	; 246ec <_start@@Base+0x12034>
   2438c:	add	r3, pc, r3
   24390:	str	r3, [sp, #12]
   24394:	ldr	r3, [pc, #852]	; 246f0 <_start@@Base+0x12038>
   24398:	add	r3, pc, r3
   2439c:	str	r3, [sp, #8]
   243a0:	str	r2, [sp, #4]
   243a4:	mov	r3, #9
   243a8:	str	r3, [sp]
   243ac:	mov	r3, #4
   243b0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   243b4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   243b8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   243bc:	bl	35f88 <flatcc_json_parser_union_type_vector@@Base>
   243c0:	str	r0, [fp, #-60]	; 0xffffffc4
   243c4:	b	248f8 <_start@@Base+0x12240>
   243c8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   243cc:	ldr	r1, [fp, #-60]	; 0xffffffc4
   243d0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   243d4:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   243d8:	str	r0, [fp, #-60]	; 0xffffffc4
   243dc:	b	248f8 <_start@@Base+0x12240>
   243e0:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   243e4:	mov	r2, #0
   243e8:	mov	r3, #0
   243ec:	movt	r3, #65535	; 0xffff
   243f0:	and	ip, r0, r2
   243f4:	str	ip, [fp, #-100]	; 0xffffff9c
   243f8:	and	r3, r1, r3
   243fc:	str	r3, [fp, #-96]	; 0xffffffa0
   24400:	mov	r2, #0
   24404:	mov	r3, #0
   24408:	movt	r3, #29299	; 0x7273
   2440c:	ldrd	r0, [fp, #-100]	; 0xffffff9c
   24410:	cmp	r1, r3
   24414:	cmpeq	r0, r2
   24418:	bne	2449c <_start@@Base+0x11de4>
   2441c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   24420:	str	r3, [fp, #-40]	; 0xffffffd8
   24424:	mov	r3, #2
   24428:	ldr	r2, [fp, #-64]	; 0xffffffc0
   2442c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   24430:	ldr	r0, [fp, #-56]	; 0xffffffc8
   24434:	bl	13f3c <_start@@Base+0x1884>
   24438:	str	r0, [fp, #-60]	; 0xffffffc4
   2443c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24440:	ldr	r3, [fp, #-60]	; 0xffffffc4
   24444:	cmp	r2, r3
   24448:	beq	24484 <_start@@Base+0x11dcc>
   2444c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   24450:	ldr	r3, [pc, #668]	; 246f4 <_start@@Base+0x1203c>
   24454:	add	r3, pc, r3
   24458:	str	r3, [sp, #8]
   2445c:	str	r2, [sp, #4]
   24460:	mov	r3, #9
   24464:	str	r3, [sp]
   24468:	mov	r3, #4
   2446c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   24470:	ldr	r1, [fp, #-60]	; 0xffffffc4
   24474:	ldr	r0, [fp, #-56]	; 0xffffffc8
   24478:	bl	35e28 <flatcc_json_parser_union_vector@@Base>
   2447c:	str	r0, [fp, #-60]	; 0xffffffc4
   24480:	b	248f8 <_start@@Base+0x12240>
   24484:	ldr	r2, [fp, #-64]	; 0xffffffc0
   24488:	ldr	r1, [fp, #-60]	; 0xffffffc4
   2448c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   24490:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   24494:	str	r0, [fp, #-60]	; 0xffffffc4
   24498:	b	248f8 <_start@@Base+0x12240>
   2449c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   244a0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   244a4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   244a8:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   244ac:	str	r0, [fp, #-60]	; 0xffffffc4
   244b0:	b	248f8 <_start@@Base+0x12240>
   244b4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   244b8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   244bc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   244c0:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   244c4:	str	r0, [fp, #-60]	; 0xffffffc4
   244c8:	b	248f8 <_start@@Base+0x12240>
   244cc:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   244d0:	add	r3, pc, #496	; 0x1f0
   244d4:	ldrd	r2, [r3]
   244d8:	cmp	r1, r3
   244dc:	cmpeq	r0, r2
   244e0:	bne	24734 <_start@@Base+0x1207c>
   244e4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   244e8:	add	r3, r3, #8
   244ec:	str	r3, [fp, #-60]	; 0xffffffc4
   244f0:	ldr	r1, [fp, #-64]	; 0xffffffc0
   244f4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   244f8:	bl	13928 <_start@@Base+0x1270>
   244fc:	strd	r0, [fp, #-36]	; 0xffffffdc
   24500:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   24504:	add	r3, pc, #452	; 0x1c4
   24508:	ldrd	r2, [r3]
   2450c:	cmp	r1, r3
   24510:	cmpeq	r0, r2
   24514:	bne	2460c <_start@@Base+0x11f54>
   24518:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2451c:	add	r3, r3, #8
   24520:	str	r3, [fp, #-60]	; 0xffffffc4
   24524:	ldr	r1, [fp, #-64]	; 0xffffffc0
   24528:	ldr	r0, [fp, #-60]	; 0xffffffc4
   2452c:	bl	13928 <_start@@Base+0x1270>
   24530:	strd	r0, [fp, #-36]	; 0xffffffdc
   24534:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   24538:	mov	r2, #0
   2453c:	mvn	r3, #255	; 0xff
   24540:	and	ip, r0, r2
   24544:	str	ip, [fp, #-108]	; 0xffffff94
   24548:	and	r3, r1, r3
   2454c:	str	r3, [fp, #-104]	; 0xffffff98
   24550:	add	r3, pc, #384	; 0x180
   24554:	ldrd	r2, [r3]
   24558:	ldrd	r0, [fp, #-108]	; 0xffffff94
   2455c:	cmp	r1, r3
   24560:	cmpeq	r0, r2
   24564:	bne	245f4 <_start@@Base+0x11f3c>
   24568:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2456c:	str	r3, [fp, #-40]	; 0xffffffd8
   24570:	mov	r3, #3
   24574:	ldr	r2, [fp, #-64]	; 0xffffffc0
   24578:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2457c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   24580:	bl	13f3c <_start@@Base+0x1884>
   24584:	str	r0, [fp, #-60]	; 0xffffffc4
   24588:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2458c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   24590:	cmp	r2, r3
   24594:	beq	245dc <_start@@Base+0x11f24>
   24598:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2459c:	ldr	r3, [pc, #340]	; 246f8 <_start@@Base+0x12040>
   245a0:	add	r3, pc, r3
   245a4:	str	r3, [sp, #12]
   245a8:	ldr	r3, [pc, #332]	; 246fc <_start@@Base+0x12044>
   245ac:	add	r3, pc, r3
   245b0:	str	r3, [sp, #8]
   245b4:	str	r2, [sp, #4]
   245b8:	mov	r3, #1
   245bc:	str	r3, [sp]
   245c0:	mov	r3, #0
   245c4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   245c8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   245cc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   245d0:	bl	35954 <flatcc_json_parser_union_type@@Base>
   245d4:	str	r0, [fp, #-60]	; 0xffffffc4
   245d8:	b	248f8 <_start@@Base+0x12240>
   245dc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   245e0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   245e4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   245e8:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   245ec:	str	r0, [fp, #-60]	; 0xffffffc4
   245f0:	b	248f8 <_start@@Base+0x12240>
   245f4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   245f8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   245fc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   24600:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   24604:	str	r0, [fp, #-60]	; 0xffffffc4
   24608:	b	248f8 <_start@@Base+0x12240>
   2460c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   24610:	mov	r2, #0
   24614:	movt	r2, #65535	; 0xffff
   24618:	mvn	r3, #0
   2461c:	and	ip, r0, r2
   24620:	str	ip, [fp, #-116]	; 0xffffff8c
   24624:	and	r3, r1, r3
   24628:	str	r3, [fp, #-112]	; 0xffffff90
   2462c:	add	r3, pc, #172	; 0xac
   24630:	ldrd	r2, [r3]
   24634:	ldrd	r0, [fp, #-116]	; 0xffffff8c
   24638:	cmp	r1, r3
   2463c:	cmpeq	r0, r2
   24640:	bne	2471c <_start@@Base+0x12064>
   24644:	ldr	r3, [fp, #-60]	; 0xffffffc4
   24648:	str	r3, [fp, #-40]	; 0xffffffd8
   2464c:	mov	r3, #6
   24650:	ldr	r2, [fp, #-64]	; 0xffffffc0
   24654:	ldr	r1, [fp, #-40]	; 0xffffffd8
   24658:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2465c:	bl	13f3c <_start@@Base+0x1884>
   24660:	str	r0, [fp, #-60]	; 0xffffffc4
   24664:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24668:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2466c:	cmp	r2, r3
   24670:	beq	24704 <_start@@Base+0x1204c>
   24674:	ldr	r2, [fp, #-48]	; 0xffffffd0
   24678:	ldr	r3, [pc, #128]	; 24700 <_start@@Base+0x12048>
   2467c:	add	r3, pc, r3
   24680:	str	r3, [sp, #8]
   24684:	str	r2, [sp, #4]
   24688:	mov	r3, #1
   2468c:	str	r3, [sp]
   24690:	mov	r3, #0
   24694:	ldr	r2, [fp, #-64]	; 0xffffffc0
   24698:	ldr	r1, [fp, #-60]	; 0xffffffc4
   2469c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   246a0:	bl	35770 <flatcc_json_parser_union@@Base>
   246a4:	str	r0, [fp, #-60]	; 0xffffffc4
   246a8:	b	248f8 <_start@@Base+0x12240>
   246ac:	nop	{0}
   246b0:	svcpl	0x00636860
   246b4:			; <UNDEFINED> instruction: 0x6d61696e
   246b8:	cmnvs	r3, r5, ror #8
   246bc:	cmnvs	r8, #-2147483620	; 0x8000001c
   246c0:	ldmdbvc	r0!, {r8, sl, sp, lr}^
   246c4:	rsbsvc	r5, r3, #116, 30	; 0x1d0
   246c8:	svcpl	0x00636861
   246cc:			; <UNDEFINED> instruction: 0x6d61696e
   246d0:	ldrbvs	r5, [r2, #-3956]!	; 0xfffff08c
   246d4:	rsbvc	r6, r1, #116, 6	; 0xd0000001
   246d8:	andeq	r0, r0, r0
   246dc:	ldmdbvc	r0!, {r8, sl, sp, lr}^
   246e0:	ldrbvs	r0, [r2, #-0]!
   246e4:	rsbvc	r6, r1, #116, 6	; 0xd0000001
   246e8:			; <UNDEFINED> instruction: 0xfffff4d0
   246ec:			; <UNDEFINED> instruction: 0xfffff2e8
   246f0:	andeq	r5, r2, r8, ror r0
   246f4:			; <UNDEFINED> instruction: 0xfffff220
   246f8:			; <UNDEFINED> instruction: 0xfffff0d4
   246fc:	andeq	r4, r2, r4, ror lr
   24700:			; <UNDEFINED> instruction: 0xffffeff8
   24704:	ldr	r2, [fp, #-64]	; 0xffffffc0
   24708:	ldr	r1, [fp, #-60]	; 0xffffffc4
   2470c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   24710:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   24714:	str	r0, [fp, #-60]	; 0xffffffc4
   24718:	b	248f8 <_start@@Base+0x12240>
   2471c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   24720:	ldr	r1, [fp, #-60]	; 0xffffffc4
   24724:	ldr	r0, [fp, #-56]	; 0xffffffc8
   24728:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   2472c:	str	r0, [fp, #-60]	; 0xffffffc4
   24730:	b	248f8 <_start@@Base+0x12240>
   24734:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   24738:	add	r3, pc, #656	; 0x290
   2473c:	ldrd	r2, [r3]
   24740:	cmp	r1, r3
   24744:	cmpeq	r0, r2
   24748:	bne	248e4 <_start@@Base+0x1222c>
   2474c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   24750:	add	r3, r3, #8
   24754:	str	r3, [fp, #-60]	; 0xffffffc4
   24758:	ldr	r1, [fp, #-64]	; 0xffffffc0
   2475c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   24760:	bl	13928 <_start@@Base+0x1270>
   24764:	strd	r0, [fp, #-36]	; 0xffffffdc
   24768:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   2476c:	mov	r2, #0
   24770:	movt	r2, #65535	; 0xffff
   24774:	mvn	r3, #0
   24778:	and	ip, r0, r2
   2477c:	str	ip, [fp, #-124]	; 0xffffff84
   24780:	and	r3, r1, r3
   24784:	str	r3, [fp, #-120]	; 0xffffff88
   24788:	add	r3, pc, #584	; 0x248
   2478c:	ldrd	r2, [r3]
   24790:	ldrd	r0, [fp, #-124]	; 0xffffff84
   24794:	cmp	r1, r3
   24798:	cmpeq	r0, r2
   2479c:	bne	2482c <_start@@Base+0x12174>
   247a0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   247a4:	str	r3, [fp, #-40]	; 0xffffffd8
   247a8:	mov	r3, #6
   247ac:	ldr	r2, [fp, #-64]	; 0xffffffc0
   247b0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   247b4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   247b8:	bl	13f3c <_start@@Base+0x1884>
   247bc:	str	r0, [fp, #-60]	; 0xffffffc4
   247c0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   247c4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   247c8:	cmp	r2, r3
   247cc:	beq	24814 <_start@@Base+0x1215c>
   247d0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   247d4:	ldr	r3, [pc, #516]	; 249e0 <_start@@Base+0x12328>
   247d8:	add	r3, pc, r3
   247dc:	str	r3, [sp, #12]
   247e0:	ldr	r3, [pc, #508]	; 249e4 <_start@@Base+0x1232c>
   247e4:	add	r3, pc, r3
   247e8:	str	r3, [sp, #8]
   247ec:	str	r2, [sp, #4]
   247f0:	mov	r3, #5
   247f4:	str	r3, [sp]
   247f8:	mov	r3, #2
   247fc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   24800:	ldr	r1, [fp, #-60]	; 0xffffffc4
   24804:	ldr	r0, [fp, #-56]	; 0xffffffc8
   24808:	bl	35954 <flatcc_json_parser_union_type@@Base>
   2480c:	str	r0, [fp, #-60]	; 0xffffffc4
   24810:	b	248f8 <_start@@Base+0x12240>
   24814:	ldr	r2, [fp, #-64]	; 0xffffffc0
   24818:	ldr	r1, [fp, #-60]	; 0xffffffc4
   2481c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   24820:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   24824:	str	r0, [fp, #-60]	; 0xffffffc4
   24828:	b	248f8 <_start@@Base+0x12240>
   2482c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   24830:	mov	r2, #0
   24834:	mov	r3, #-16777216	; 0xff000000
   24838:	and	r4, r0, r2
   2483c:	and	r5, r1, r3
   24840:	cmp	r5, #1795162112	; 0x6b000000
   24844:	cmpeq	r4, #0
   24848:	bne	248cc <_start@@Base+0x12214>
   2484c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   24850:	str	r3, [fp, #-40]	; 0xffffffd8
   24854:	mov	r3, #1
   24858:	ldr	r2, [fp, #-64]	; 0xffffffc0
   2485c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   24860:	ldr	r0, [fp, #-56]	; 0xffffffc8
   24864:	bl	13f3c <_start@@Base+0x1884>
   24868:	str	r0, [fp, #-60]	; 0xffffffc4
   2486c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24870:	ldr	r3, [fp, #-60]	; 0xffffffc4
   24874:	cmp	r2, r3
   24878:	beq	248b4 <_start@@Base+0x121fc>
   2487c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   24880:	ldr	r3, [pc, #352]	; 249e8 <_start@@Base+0x12330>
   24884:	add	r3, pc, r3
   24888:	str	r3, [sp, #8]
   2488c:	str	r2, [sp, #4]
   24890:	mov	r3, #5
   24894:	str	r3, [sp]
   24898:	mov	r3, #2
   2489c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   248a0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   248a4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   248a8:	bl	35770 <flatcc_json_parser_union@@Base>
   248ac:	str	r0, [fp, #-60]	; 0xffffffc4
   248b0:	b	248f8 <_start@@Base+0x12240>
   248b4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   248b8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   248bc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   248c0:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   248c4:	str	r0, [fp, #-60]	; 0xffffffc4
   248c8:	b	248f8 <_start@@Base+0x12240>
   248cc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   248d0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   248d4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   248d8:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   248dc:	str	r0, [fp, #-60]	; 0xffffffc4
   248e0:	b	248f8 <_start@@Base+0x12240>
   248e4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   248e8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   248ec:	ldr	r0, [fp, #-56]	; 0xffffffc8
   248f0:	bl	342e4 <flatcc_json_parser_unmatched_symbol@@Base>
   248f4:	str	r0, [fp, #-60]	; 0xffffffc4
   248f8:	sub	r3, fp, #44	; 0x2c
   248fc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   24900:	ldr	r1, [fp, #-60]	; 0xffffffc4
   24904:	ldr	r0, [fp, #-56]	; 0xffffffc8
   24908:	bl	13b60 <_start@@Base+0x14a8>
   2490c:	str	r0, [fp, #-60]	; 0xffffffc4
   24910:	ldr	r3, [fp, #-44]	; 0xffffffd4
   24914:	cmp	r3, #0
   24918:	bne	23ebc <_start@@Base+0x11804>
   2491c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   24920:	ldr	r3, [r3, #24]
   24924:	cmp	r3, #0
   24928:	bne	24988 <_start@@Base+0x122d0>
   2492c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   24930:	ldr	r2, [fp, #-64]	; 0xffffffc0
   24934:	ldr	r1, [fp, #-60]	; 0xffffffc4
   24938:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2493c:	bl	356e4 <flatcc_json_parser_finalize_unions@@Base>
   24940:	str	r0, [fp, #-60]	; 0xffffffc4
   24944:	ldr	r3, [fp, #-56]	; 0xffffffc8
   24948:	ldr	r3, [r3]
   2494c:	mov	r0, r3
   24950:	bl	2a9b0 <flatcc_builder_end_table@@Base>
   24954:	mov	r2, r0
   24958:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2495c:	str	r2, [r3]
   24960:	ldr	r3, [fp, #-68]	; 0xffffffbc
   24964:	ldr	r3, [r3]
   24968:	cmp	r3, #0
   2496c:	beq	24990 <_start@@Base+0x122d8>
   24970:	ldr	r3, [fp, #-60]	; 0xffffffc4
   24974:	b	249ac <_start@@Base+0x122f4>
   24978:	nop	{0}
   2497c:	b	24994 <_start@@Base+0x122dc>
   24980:	nop	{0}
   24984:	b	24994 <_start@@Base+0x122dc>
   24988:	nop	{0}
   2498c:	b	24994 <_start@@Base+0x122dc>
   24990:	nop	{0}
   24994:	mov	r3, #33	; 0x21
   24998:	ldr	r2, [fp, #-64]	; 0xffffffc0
   2499c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   249a0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   249a4:	bl	33258 <flatcc_json_parser_set_error@@Base>
   249a8:	mov	r3, r0
   249ac:	mov	r0, r3
   249b0:	sub	sp, fp, #28
   249b4:	ldrd	r4, [sp]
   249b8:	ldrd	r6, [sp, #8]
   249bc:	ldrd	r8, [sp, #16]
   249c0:	ldr	fp, [sp, #24]
   249c4:	add	sp, sp, #28
   249c8:	pop	{pc}		; (ldr pc, [sp], #4)
   249cc:	nop	{0}
   249d0:	svcpl	0x006b6963
   249d4:	cmnvc	r9, #1694498816	; 0x65000000
   249d8:	rsbvc	r0, r5, r0
   249dc:	blvs	1801bc8 <__bss_end__@@Base+0x17b870c>
   249e0:			; <UNDEFINED> instruction: 0xffffee9c
   249e4:	andeq	r4, r2, ip, asr #24
   249e8:			; <UNDEFINED> instruction: 0xffffedf0
   249ec:	push	{fp}		; (str fp, [sp, #-4]!)
   249f0:	add	fp, sp, #0
   249f4:	sub	sp, sp, #20
   249f8:	str	r0, [fp, #-8]
   249fc:	str	r1, [fp, #-12]
   24a00:	str	r2, [fp, #-16]
   24a04:	str	r3, [fp, #-20]	; 0xffffffec
   24a08:	ldr	r3, [fp, #-12]
   24a0c:	mov	r0, r3
   24a10:	add	sp, fp, #0
   24a14:	pop	{fp}		; (ldr fp, [sp], #4)
   24a18:	bx	lr
   24a1c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   24a20:	strd	r6, [sp, #8]
   24a24:	strd	r8, [sp, #16]
   24a28:	str	fp, [sp, #24]
   24a2c:	str	lr, [sp, #28]
   24a30:	add	fp, sp, #28
   24a34:	sub	sp, sp, #56	; 0x38
   24a38:	str	r0, [fp, #-56]	; 0xffffffc8
   24a3c:	str	r1, [fp, #-60]	; 0xffffffc4
   24a40:	str	r2, [fp, #-64]	; 0xffffffc0
   24a44:	str	r3, [fp, #-68]	; 0xffffffbc
   24a48:	ldr	r3, [fp, #-60]	; 0xffffffc4
   24a4c:	str	r3, [fp, #-32]	; 0xffffffe0
   24a50:	ldr	r1, [fp, #-64]	; 0xffffffc0
   24a54:	ldr	r0, [fp, #-60]	; 0xffffffc4
   24a58:	bl	13928 <_start@@Base+0x1270>
   24a5c:	strd	r0, [fp, #-44]	; 0xffffffd4
   24a60:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   24a64:	add	r1, pc, #924	; 0x39c
   24a68:	ldrd	r0, [r1]
   24a6c:	cmp	r3, r1
   24a70:	cmpeq	r2, r0
   24a74:	bhi	24c50 <_start@@Base+0x12598>
   24a78:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   24a7c:	add	r1, pc, #908	; 0x38c
   24a80:	ldrd	r0, [r1]
   24a84:	cmp	r3, r1
   24a88:	cmpeq	r2, r0
   24a8c:	bhi	24b30 <_start@@Base+0x12478>
   24a90:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   24a94:	mov	r0, #0
   24a98:	mvn	r1, #255	; 0xff
   24a9c:	and	ip, r2, r0
   24aa0:	str	ip, [fp, #-76]	; 0xffffffb4
   24aa4:	and	r3, r3, r1
   24aa8:	str	r3, [fp, #-72]	; 0xffffffb8
   24aac:	add	r3, pc, #868	; 0x364
   24ab0:	ldrd	r2, [r3]
   24ab4:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   24ab8:	cmp	r1, r3
   24abc:	cmpeq	r0, r2
   24ac0:	bne	24b28 <_start@@Base+0x12470>
   24ac4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   24ac8:	str	r3, [fp, #-48]	; 0xffffffd0
   24acc:	mov	r3, #3
   24ad0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   24ad4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   24ad8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   24adc:	bl	1397c <_start@@Base+0x12c4>
   24ae0:	str	r0, [fp, #-60]	; 0xffffffc4
   24ae4:	ldr	r2, [fp, #-60]	; 0xffffffc4
   24ae8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   24aec:	cmp	r2, r3
   24af0:	beq	24b20 <_start@@Base+0x12468>
   24af4:	ldr	r3, [fp, #8]
   24af8:	str	r3, [sp, #4]
   24afc:	ldr	r3, [fp, #4]
   24b00:	str	r3, [sp]
   24b04:	ldr	r3, [fp, #-68]	; 0xffffffbc
   24b08:	ldr	r2, [fp, #-64]	; 0xffffffc0
   24b0c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   24b10:	ldr	r0, [fp, #-56]	; 0xffffffc8
   24b14:	bl	18500 <_start@@Base+0x5e48>
   24b18:	str	r0, [fp, #-60]	; 0xffffffc4
   24b1c:	b	24f3c <_start@@Base+0x12884>
   24b20:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24b24:	b	24f40 <_start@@Base+0x12888>
   24b28:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24b2c:	b	24f40 <_start@@Base+0x12888>
   24b30:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   24b34:	mov	r0, #0
   24b38:	mvn	r1, #255	; 0xff
   24b3c:	and	r8, r2, r0
   24b40:	and	r9, r3, r1
   24b44:	add	r3, pc, #724	; 0x2d4
   24b48:	ldrd	r2, [r3]
   24b4c:	cmp	r9, r3
   24b50:	cmpeq	r8, r2
   24b54:	bne	24bbc <_start@@Base+0x12504>
   24b58:	ldr	r3, [fp, #-60]	; 0xffffffc4
   24b5c:	str	r3, [fp, #-48]	; 0xffffffd0
   24b60:	mov	r3, #3
   24b64:	ldr	r2, [fp, #-64]	; 0xffffffc0
   24b68:	ldr	r1, [fp, #-48]	; 0xffffffd0
   24b6c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   24b70:	bl	1397c <_start@@Base+0x12c4>
   24b74:	str	r0, [fp, #-60]	; 0xffffffc4
   24b78:	ldr	r2, [fp, #-60]	; 0xffffffc4
   24b7c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   24b80:	cmp	r2, r3
   24b84:	beq	24bb4 <_start@@Base+0x124fc>
   24b88:	ldr	r3, [fp, #8]
   24b8c:	str	r3, [sp, #4]
   24b90:	ldr	r3, [fp, #4]
   24b94:	str	r3, [sp]
   24b98:	ldr	r3, [fp, #-68]	; 0xffffffbc
   24b9c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   24ba0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   24ba4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   24ba8:	bl	17714 <_start@@Base+0x505c>
   24bac:	str	r0, [fp, #-60]	; 0xffffffc4
   24bb0:	b	24f3c <_start@@Base+0x12884>
   24bb4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24bb8:	b	24f40 <_start@@Base+0x12888>
   24bbc:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   24bc0:	mov	r0, #-16777216	; 0xff000000
   24bc4:	mvn	r1, #0
   24bc8:	and	r6, r2, r0
   24bcc:	and	r7, r3, r1
   24bd0:	add	r3, pc, #592	; 0x250
   24bd4:	ldrd	r2, [r3]
   24bd8:	cmp	r7, r3
   24bdc:	cmpeq	r6, r2
   24be0:	bne	24c48 <_start@@Base+0x12590>
   24be4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   24be8:	str	r3, [fp, #-48]	; 0xffffffd0
   24bec:	mov	r3, #5
   24bf0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   24bf4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   24bf8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   24bfc:	bl	1397c <_start@@Base+0x12c4>
   24c00:	str	r0, [fp, #-60]	; 0xffffffc4
   24c04:	ldr	r2, [fp, #-60]	; 0xffffffc4
   24c08:	ldr	r3, [fp, #-48]	; 0xffffffd0
   24c0c:	cmp	r2, r3
   24c10:	beq	24c40 <_start@@Base+0x12588>
   24c14:	ldr	r3, [fp, #8]
   24c18:	str	r3, [sp, #4]
   24c1c:	ldr	r3, [fp, #4]
   24c20:	str	r3, [sp]
   24c24:	ldr	r3, [fp, #-68]	; 0xffffffbc
   24c28:	ldr	r2, [fp, #-64]	; 0xffffffc0
   24c2c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   24c30:	ldr	r0, [fp, #-56]	; 0xffffffc8
   24c34:	bl	180c8 <_start@@Base+0x5a10>
   24c38:	str	r0, [fp, #-60]	; 0xffffffc4
   24c3c:	b	24f3c <_start@@Base+0x12884>
   24c40:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24c44:	b	24f40 <_start@@Base+0x12888>
   24c48:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24c4c:	b	24f40 <_start@@Base+0x12888>
   24c50:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   24c54:	add	r1, pc, #468	; 0x1d4
   24c58:	ldrd	r0, [r1]
   24c5c:	cmp	r3, r1
   24c60:	cmpeq	r2, r0
   24c64:	bhi	24cec <_start@@Base+0x12634>
   24c68:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   24c6c:	add	r1, pc, #452	; 0x1c4
   24c70:	ldrd	r0, [r1]
   24c74:	cmp	r3, r1
   24c78:	cmpeq	r2, r0
   24c7c:	bne	24ce4 <_start@@Base+0x1262c>
   24c80:	ldr	r3, [fp, #-60]	; 0xffffffc4
   24c84:	str	r3, [fp, #-48]	; 0xffffffd0
   24c88:	mov	r3, #8
   24c8c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   24c90:	ldr	r1, [fp, #-48]	; 0xffffffd0
   24c94:	ldr	r0, [fp, #-56]	; 0xffffffc8
   24c98:	bl	1397c <_start@@Base+0x12c4>
   24c9c:	str	r0, [fp, #-60]	; 0xffffffc4
   24ca0:	ldr	r2, [fp, #-60]	; 0xffffffc4
   24ca4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   24ca8:	cmp	r2, r3
   24cac:	beq	24cdc <_start@@Base+0x12624>
   24cb0:	ldr	r3, [fp, #8]
   24cb4:	str	r3, [sp, #4]
   24cb8:	ldr	r3, [fp, #4]
   24cbc:	str	r3, [sp]
   24cc0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   24cc4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   24cc8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   24ccc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   24cd0:	bl	17e70 <_start@@Base+0x57b8>
   24cd4:	str	r0, [fp, #-60]	; 0xffffffc4
   24cd8:	b	24f3c <_start@@Base+0x12884>
   24cdc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24ce0:	b	24f40 <_start@@Base+0x12888>
   24ce4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24ce8:	b	24f40 <_start@@Base+0x12888>
   24cec:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   24cf0:	add	r1, pc, #328	; 0x148
   24cf4:	ldrd	r0, [r1]
   24cf8:	cmp	r3, r1
   24cfc:	cmpeq	r2, r0
   24d00:	bhi	24d88 <_start@@Base+0x126d0>
   24d04:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   24d08:	add	r1, pc, #312	; 0x138
   24d0c:	ldrd	r0, [r1]
   24d10:	cmp	r3, r1
   24d14:	cmpeq	r2, r0
   24d18:	bne	24d80 <_start@@Base+0x126c8>
   24d1c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   24d20:	str	r3, [fp, #-48]	; 0xffffffd0
   24d24:	mov	r3, #8
   24d28:	ldr	r2, [fp, #-64]	; 0xffffffc0
   24d2c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   24d30:	ldr	r0, [fp, #-56]	; 0xffffffc8
   24d34:	bl	1397c <_start@@Base+0x12c4>
   24d38:	str	r0, [fp, #-60]	; 0xffffffc4
   24d3c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   24d40:	ldr	r3, [fp, #-48]	; 0xffffffd0
   24d44:	cmp	r2, r3
   24d48:	beq	24d78 <_start@@Base+0x126c0>
   24d4c:	ldr	r3, [fp, #8]
   24d50:	str	r3, [sp, #4]
   24d54:	ldr	r3, [fp, #4]
   24d58:	str	r3, [sp]
   24d5c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   24d60:	ldr	r2, [fp, #-64]	; 0xffffffc0
   24d64:	ldr	r1, [fp, #-60]	; 0xffffffc4
   24d68:	ldr	r0, [fp, #-56]	; 0xffffffc8
   24d6c:	bl	17b60 <_start@@Base+0x54a8>
   24d70:	str	r0, [fp, #-60]	; 0xffffffc4
   24d74:	b	24f3c <_start@@Base+0x12884>
   24d78:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24d7c:	b	24f40 <_start@@Base+0x12888>
   24d80:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24d84:	b	24f40 <_start@@Base+0x12888>
   24d88:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   24d8c:	add	r1, pc, #188	; 0xbc
   24d90:	ldrd	r0, [r1]
   24d94:	cmp	r3, r1
   24d98:	cmpeq	r2, r0
   24d9c:	bne	24dfc <_start@@Base+0x12744>
   24da0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   24da4:	str	r3, [fp, #-48]	; 0xffffffd0
   24da8:	mov	r3, #8
   24dac:	ldr	r2, [fp, #-64]	; 0xffffffc0
   24db0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   24db4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   24db8:	bl	1397c <_start@@Base+0x12c4>
   24dbc:	str	r0, [fp, #-60]	; 0xffffffc4
   24dc0:	ldr	r2, [fp, #-60]	; 0xffffffc4
   24dc4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   24dc8:	cmp	r2, r3
   24dcc:	beq	24e68 <_start@@Base+0x127b0>
   24dd0:	ldr	r3, [fp, #8]
   24dd4:	str	r3, [sp, #4]
   24dd8:	ldr	r3, [fp, #4]
   24ddc:	str	r3, [sp]
   24de0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   24de4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   24de8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   24dec:	ldr	r0, [fp, #-56]	; 0xffffffc8
   24df0:	bl	17918 <_start@@Base+0x5260>
   24df4:	str	r0, [fp, #-60]	; 0xffffffc4
   24df8:	b	24f3c <_start@@Base+0x12884>
   24dfc:	nop	{0}
   24e00:	b	24e6c <_start@@Base+0x127b4>
   24e04:	nop	{0}
   24e08:	strbvs	r7, [lr, #-1388]!	; 0xfffffa94
   24e0c:	stmdavs	r5!, {r0, r1, r2, r3, r4, r6, fp, ip, sp, lr}^
   24e10:	ldrshvc	pc, [pc, #255]	; 24f17 <_start@@Base+0x1285f>	; <UNPREDICTABLE>
   24e14:	cmnmi	pc, #28416	; 0x6f00
   24e18:	andeq	r0, r0, r0
   24e1c:	cmnmi	lr, r0, lsl #18
   24e20:	andeq	r0, r0, r0
   24e24:	strbtmi	r6, [pc], -r0, lsl #30
   24e28:	andvc	r0, r0, #0
   24e2c:	cmnmi	pc, #28416	; 0x6f00
   24e30:	strbvs	r7, [lr, #-1388]!	; 0xfffffa94
   24e34:	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, sl, ip, sp, lr}^
   24e38:	strbvs	r7, [lr, #-1389]!	; 0xfffffa93
   24e3c:	stmdavs	r5!, {r0, r1, r2, r3, r4, r6, fp, ip, sp, lr}^
   24e40:	strbvs	r7, [lr, #-1388]!	; 0xfffffa94
   24e44:	mcrvs	7, 3, r6, cr5, cr15, {2}
   24e48:	strbvs	r7, [lr, #-1389]!	; 0xfffffa93
   24e4c:	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, sl, ip, sp, lr}^
   24e50:	strbvs	r7, [lr, #-1389]!	; 0xfffffa93
   24e54:	mcrvs	7, 3, r6, cr5, cr15, {2}
   24e58:	cfldrdvs	mvd7, [r0, #-484]!	; 0xfffffe1c
   24e5c:	cdpvs	4, 6, cr7, cr15, cr5, {3}
   24e60:	andeq	r0, r0, r0
   24e64:	strbvs	r7, [lr, #-1389]!	; 0xfffffa93
   24e68:	nop	{0}
   24e6c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   24e70:	sub	r1, pc, #32
   24e74:	ldrd	r0, [r1]
   24e78:	cmp	r3, r1
   24e7c:	cmpeq	r2, r0
   24e80:	bne	24f34 <_start@@Base+0x1287c>
   24e84:	ldr	r3, [fp, #-60]	; 0xffffffc4
   24e88:	add	r3, r3, #8
   24e8c:	str	r3, [fp, #-60]	; 0xffffffc4
   24e90:	ldr	r1, [fp, #-64]	; 0xffffffc0
   24e94:	ldr	r0, [fp, #-60]	; 0xffffffc4
   24e98:	bl	13928 <_start@@Base+0x1270>
   24e9c:	strd	r0, [fp, #-44]	; 0xffffffd4
   24ea0:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   24ea4:	mov	r0, #0
   24ea8:	mvn	r1, #0
   24eac:	and	r4, r2, r0
   24eb0:	and	r5, r3, r1
   24eb4:	sub	r3, pc, #92	; 0x5c
   24eb8:	ldrd	r2, [r3]
   24ebc:	cmp	r5, r3
   24ec0:	cmpeq	r4, r2
   24ec4:	bne	24f2c <_start@@Base+0x12874>
   24ec8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   24ecc:	str	r3, [fp, #-48]	; 0xffffffd0
   24ed0:	mov	r3, #4
   24ed4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   24ed8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   24edc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   24ee0:	bl	1397c <_start@@Base+0x12c4>
   24ee4:	str	r0, [fp, #-60]	; 0xffffffc4
   24ee8:	ldr	r2, [fp, #-60]	; 0xffffffc4
   24eec:	ldr	r3, [fp, #-48]	; 0xffffffd0
   24ef0:	cmp	r2, r3
   24ef4:	beq	24f24 <_start@@Base+0x1286c>
   24ef8:	ldr	r3, [fp, #8]
   24efc:	str	r3, [sp, #4]
   24f00:	ldr	r3, [fp, #4]
   24f04:	str	r3, [sp]
   24f08:	ldr	r3, [fp, #-68]	; 0xffffffbc
   24f0c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   24f10:	ldr	r1, [fp, #-60]	; 0xffffffc4
   24f14:	ldr	r0, [fp, #-56]	; 0xffffffc8
   24f18:	bl	191a8 <_start@@Base+0x6af0>
   24f1c:	str	r0, [fp, #-60]	; 0xffffffc4
   24f20:	b	24f3c <_start@@Base+0x12884>
   24f24:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24f28:	b	24f40 <_start@@Base+0x12888>
   24f2c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24f30:	b	24f40 <_start@@Base+0x12888>
   24f34:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24f38:	b	24f40 <_start@@Base+0x12888>
   24f3c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   24f40:	mov	r0, r3
   24f44:	sub	sp, fp, #28
   24f48:	ldrd	r4, [sp]
   24f4c:	ldrd	r6, [sp, #8]
   24f50:	ldrd	r8, [sp, #16]
   24f54:	ldr	fp, [sp, #24]
   24f58:	add	sp, sp, #28
   24f5c:	pop	{pc}		; (ldr pc, [sp], #4)
   24f60:	push	{fp}		; (str fp, [sp, #-4]!)
   24f64:	add	fp, sp, #0
   24f68:	sub	sp, sp, #20
   24f6c:	str	r0, [fp, #-8]
   24f70:	str	r1, [fp, #-12]
   24f74:	str	r2, [fp, #-16]
   24f78:	str	r3, [fp, #-20]	; 0xffffffec
   24f7c:	ldr	r3, [fp, #-12]
   24f80:	mov	r0, r3
   24f84:	add	sp, fp, #0
   24f88:	pop	{fp}		; (ldr fp, [sp], #4)
   24f8c:	bx	lr
   24f90:	push	{fp}		; (str fp, [sp, #-4]!)
   24f94:	add	fp, sp, #0
   24f98:	sub	sp, sp, #20
   24f9c:	str	r0, [fp, #-8]
   24fa0:	str	r1, [fp, #-12]
   24fa4:	str	r2, [fp, #-16]
   24fa8:	str	r3, [fp, #-20]	; 0xffffffec
   24fac:	ldr	r3, [fp, #-12]
   24fb0:	mov	r0, r3
   24fb4:	add	sp, fp, #0
   24fb8:	pop	{fp}		; (ldr fp, [sp], #4)
   24fbc:	bx	lr
   24fc0:	strd	r4, [sp, #-16]!
   24fc4:	str	fp, [sp, #8]
   24fc8:	str	lr, [sp, #12]
   24fcc:	add	fp, sp, #12
   24fd0:	sub	sp, sp, #48	; 0x30
   24fd4:	str	r0, [fp, #-40]	; 0xffffffd8
   24fd8:	str	r1, [fp, #-44]	; 0xffffffd4
   24fdc:	str	r2, [fp, #-48]	; 0xffffffd0
   24fe0:	str	r3, [fp, #-52]	; 0xffffffcc
   24fe4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   24fe8:	str	r3, [fp, #-16]
   24fec:	ldr	r1, [fp, #-48]	; 0xffffffd0
   24ff0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   24ff4:	bl	13928 <_start@@Base+0x1270>
   24ff8:	strd	r0, [fp, #-28]	; 0xffffffe4
   24ffc:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   25000:	add	r1, pc, #216	; 0xd8
   25004:	ldrd	r0, [r1]
   25008:	cmp	r3, r1
   2500c:	cmpeq	r2, r0
   25010:	bne	250c0 <_start@@Base+0x12a08>
   25014:	ldr	r3, [fp, #-44]	; 0xffffffd4
   25018:	add	r3, r3, #8
   2501c:	str	r3, [fp, #-44]	; 0xffffffd4
   25020:	ldr	r1, [fp, #-48]	; 0xffffffd0
   25024:	ldr	r0, [fp, #-44]	; 0xffffffd4
   25028:	bl	13928 <_start@@Base+0x1270>
   2502c:	strd	r0, [fp, #-28]	; 0xffffffe4
   25030:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   25034:	mov	r0, #0
   25038:	mov	r1, #-16777216	; 0xff000000
   2503c:	and	r4, r2, r0
   25040:	and	r5, r3, r1
   25044:	cmp	r5, #1912602624	; 0x72000000
   25048:	cmpeq	r4, #0
   2504c:	bne	250b8 <_start@@Base+0x12a00>
   25050:	ldr	r3, [fp, #-44]	; 0xffffffd4
   25054:	str	r3, [fp, #-32]	; 0xffffffe0
   25058:	mov	r3, #1
   2505c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   25060:	ldr	r1, [fp, #-32]	; 0xffffffe0
   25064:	ldr	r0, [fp, #-40]	; 0xffffffd8
   25068:	bl	1397c <_start@@Base+0x12c4>
   2506c:	str	r0, [fp, #-44]	; 0xffffffd4
   25070:	ldr	r2, [fp, #-44]	; 0xffffffd4
   25074:	ldr	r3, [fp, #-32]	; 0xffffffe0
   25078:	cmp	r2, r3
   2507c:	beq	250b0 <_start@@Base+0x129f8>
   25080:	ldr	r3, [fp, #8]
   25084:	str	r3, [sp, #4]
   25088:	ldr	r3, [fp, #4]
   2508c:	str	r3, [sp]
   25090:	ldr	r3, [fp, #-52]	; 0xffffffcc
   25094:	ldr	r2, [fp, #-48]	; 0xffffffd0
   25098:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2509c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   250a0:	bl	23904 <_start@@Base+0x1124c>
   250a4:	str	r0, [fp, #-44]	; 0xffffffd4
   250a8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   250ac:	b	250c4 <_start@@Base+0x12a0c>
   250b0:	ldr	r3, [fp, #-16]
   250b4:	b	250c4 <_start@@Base+0x12a0c>
   250b8:	ldr	r3, [fp, #-16]
   250bc:	b	250c4 <_start@@Base+0x12a0c>
   250c0:	ldr	r3, [fp, #-16]
   250c4:	mov	r0, r3
   250c8:	sub	sp, fp, #12
   250cc:	ldrd	r4, [sp]
   250d0:	ldr	fp, [sp, #8]
   250d4:	add	sp, sp, #12
   250d8:	pop	{pc}		; (ldr pc, [sp], #4)
   250dc:	nop	{0}
   250e0:	cmnvs	r3, r5, ror #8
   250e4:	cmnmi	r8, #-2147483620	; 0x8000001c
   250e8:	strd	r4, [sp, #-16]!
   250ec:	str	fp, [sp, #8]
   250f0:	str	lr, [sp, #12]
   250f4:	add	fp, sp, #12
   250f8:	sub	sp, sp, #48	; 0x30
   250fc:	str	r0, [fp, #-40]	; 0xffffffd8
   25100:	str	r1, [fp, #-44]	; 0xffffffd4
   25104:	str	r2, [fp, #-48]	; 0xffffffd0
   25108:	str	r3, [fp, #-52]	; 0xffffffcc
   2510c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   25110:	str	r3, [fp, #-16]
   25114:	ldr	r1, [fp, #-48]	; 0xffffffd0
   25118:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2511c:	bl	13928 <_start@@Base+0x1270>
   25120:	strd	r0, [fp, #-28]	; 0xffffffe4
   25124:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   25128:	add	r1, pc, #224	; 0xe0
   2512c:	ldrd	r0, [r1]
   25130:	cmp	r3, r1
   25134:	cmpeq	r2, r0
   25138:	bne	251f0 <_start@@Base+0x12b38>
   2513c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   25140:	add	r3, r3, #8
   25144:	str	r3, [fp, #-44]	; 0xffffffd4
   25148:	ldr	r1, [fp, #-48]	; 0xffffffd0
   2514c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   25150:	bl	13928 <_start@@Base+0x1270>
   25154:	strd	r0, [fp, #-28]	; 0xffffffe4
   25158:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   2515c:	mov	r0, #0
   25160:	mvn	r1, #255	; 0xff
   25164:	and	r4, r2, r0
   25168:	and	r5, r3, r1
   2516c:	add	r3, pc, #164	; 0xa4
   25170:	ldrd	r2, [r3]
   25174:	cmp	r5, r3
   25178:	cmpeq	r4, r2
   2517c:	bne	251e8 <_start@@Base+0x12b30>
   25180:	ldr	r3, [fp, #-44]	; 0xffffffd4
   25184:	str	r3, [fp, #-32]	; 0xffffffe0
   25188:	mov	r3, #3
   2518c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   25190:	ldr	r1, [fp, #-32]	; 0xffffffe0
   25194:	ldr	r0, [fp, #-40]	; 0xffffffd8
   25198:	bl	1397c <_start@@Base+0x12c4>
   2519c:	str	r0, [fp, #-44]	; 0xffffffd4
   251a0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   251a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   251a8:	cmp	r2, r3
   251ac:	beq	251e0 <_start@@Base+0x12b28>
   251b0:	ldr	r3, [fp, #8]
   251b4:	str	r3, [sp, #4]
   251b8:	ldr	r3, [fp, #4]
   251bc:	str	r3, [sp]
   251c0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   251c4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   251c8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   251cc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   251d0:	bl	164fc <_start@@Base+0x3e44>
   251d4:	str	r0, [fp, #-44]	; 0xffffffd4
   251d8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   251dc:	b	251f4 <_start@@Base+0x12b3c>
   251e0:	ldr	r3, [fp, #-16]
   251e4:	b	251f4 <_start@@Base+0x12b3c>
   251e8:	ldr	r3, [fp, #-16]
   251ec:	b	251f4 <_start@@Base+0x12b3c>
   251f0:	ldr	r3, [fp, #-16]
   251f4:	mov	r0, r3
   251f8:	sub	sp, fp, #12
   251fc:	ldrd	r4, [sp]
   25200:	ldr	fp, [sp, #8]
   25204:	add	sp, sp, #12
   25208:	pop	{pc}		; (ldr pc, [sp], #4)
   2520c:	nop	{0}
   25210:	stmdbmi	lr!, {r2, r3, r5, r6, r8, r9, sp, lr}^
   25214:	ldrbtmi	r6, [r2], -sp, ror #30
   25218:	andeq	r0, r0, r0
   2521c:	strbvc	r6, [r4, #-1280]!	; 0xfffffb00
   25220:	strd	r4, [sp, #-32]!	; 0xffffffe0
   25224:	strd	r6, [sp, #8]
   25228:	strd	r8, [sp, #16]
   2522c:	str	fp, [sp, #24]
   25230:	str	lr, [sp, #28]
   25234:	add	fp, sp, #28
   25238:	sub	sp, sp, #96	; 0x60
   2523c:	str	r0, [fp, #-56]	; 0xffffffc8
   25240:	str	r1, [fp, #-60]	; 0xffffffc4
   25244:	str	r2, [fp, #-64]	; 0xffffffc0
   25248:	str	r3, [fp, #-68]	; 0xffffffbc
   2524c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   25250:	str	r3, [fp, #-32]	; 0xffffffe0
   25254:	ldr	r1, [fp, #-64]	; 0xffffffc0
   25258:	ldr	r0, [fp, #-60]	; 0xffffffc4
   2525c:	bl	13928 <_start@@Base+0x1270>
   25260:	strd	r0, [fp, #-44]	; 0xffffffd4
   25264:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   25268:	add	r3, pc, #816	; 0x330
   2526c:	ldrd	r2, [r3]
   25270:	cmp	r1, r3
   25274:	cmpeq	r0, r2
   25278:	bhi	25380 <_start@@Base+0x12cc8>
   2527c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   25280:	add	r1, pc, #800	; 0x320
   25284:	ldrd	r0, [r1]
   25288:	cmp	r3, r1
   2528c:	cmpeq	r2, r0
   25290:	bne	25378 <_start@@Base+0x12cc0>
   25294:	ldr	r3, [fp, #-60]	; 0xffffffc4
   25298:	add	r3, r3, #8
   2529c:	str	r3, [fp, #-60]	; 0xffffffc4
   252a0:	ldr	r1, [fp, #-64]	; 0xffffffc0
   252a4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   252a8:	bl	13928 <_start@@Base+0x1270>
   252ac:	strd	r0, [fp, #-44]	; 0xffffffd4
   252b0:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   252b4:	add	r1, pc, #756	; 0x2f4
   252b8:	ldrd	r0, [r1]
   252bc:	cmp	r3, r1
   252c0:	cmpeq	r2, r0
   252c4:	bne	25370 <_start@@Base+0x12cb8>
   252c8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   252cc:	add	r3, r3, #8
   252d0:	str	r3, [fp, #-60]	; 0xffffffc4
   252d4:	ldr	r1, [fp, #-64]	; 0xffffffc0
   252d8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   252dc:	bl	13928 <_start@@Base+0x1270>
   252e0:	strd	r0, [fp, #-44]	; 0xffffffd4
   252e4:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   252e8:	mov	r0, #0
   252ec:	mov	r1, #-16777216	; 0xff000000
   252f0:	and	r4, r2, r0
   252f4:	and	r5, r3, r1
   252f8:	cmp	r5, #1912602624	; 0x72000000
   252fc:	cmpeq	r4, #0
   25300:	bne	25368 <_start@@Base+0x12cb0>
   25304:	ldr	r3, [fp, #-60]	; 0xffffffc4
   25308:	str	r3, [fp, #-48]	; 0xffffffd0
   2530c:	mov	r3, #1
   25310:	ldr	r2, [fp, #-64]	; 0xffffffc0
   25314:	ldr	r1, [fp, #-48]	; 0xffffffd0
   25318:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2531c:	bl	1397c <_start@@Base+0x12c4>
   25320:	str	r0, [fp, #-60]	; 0xffffffc4
   25324:	ldr	r2, [fp, #-60]	; 0xffffffc4
   25328:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2532c:	cmp	r2, r3
   25330:	beq	25360 <_start@@Base+0x12ca8>
   25334:	ldr	r3, [fp, #8]
   25338:	str	r3, [sp, #4]
   2533c:	ldr	r3, [fp, #4]
   25340:	str	r3, [sp]
   25344:	ldr	r3, [fp, #-68]	; 0xffffffbc
   25348:	ldr	r2, [fp, #-64]	; 0xffffffc0
   2534c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   25350:	ldr	r0, [fp, #-56]	; 0xffffffc8
   25354:	bl	23904 <_start@@Base+0x1124c>
   25358:	str	r0, [fp, #-60]	; 0xffffffc4
   2535c:	b	25c28 <_start@@Base+0x13570>
   25360:	ldr	r3, [fp, #-32]	; 0xffffffe0
   25364:	b	25c2c <_start@@Base+0x13574>
   25368:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2536c:	b	25c2c <_start@@Base+0x13574>
   25370:	ldr	r3, [fp, #-32]	; 0xffffffe0
   25374:	b	25c2c <_start@@Base+0x13574>
   25378:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2537c:	b	25c2c <_start@@Base+0x13574>
   25380:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   25384:	add	r3, pc, #556	; 0x22c
   25388:	ldrd	r2, [r3]
   2538c:	cmp	r1, r3
   25390:	cmpeq	r0, r2
   25394:	bne	25aac <_start@@Base+0x133f4>
   25398:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2539c:	add	r3, r3, #8
   253a0:	str	r3, [fp, #-60]	; 0xffffffc4
   253a4:	ldr	r1, [fp, #-64]	; 0xffffffc0
   253a8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   253ac:	bl	13928 <_start@@Base+0x1270>
   253b0:	strd	r0, [fp, #-44]	; 0xffffffd4
   253b4:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   253b8:	add	r3, pc, #512	; 0x200
   253bc:	ldrd	r2, [r3]
   253c0:	cmp	r1, r3
   253c4:	cmpeq	r0, r2
   253c8:	bhi	2571c <_start@@Base+0x13064>
   253cc:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   253d0:	add	r1, pc, #496	; 0x1f0
   253d4:	ldrd	r0, [r1]
   253d8:	cmp	r3, r1
   253dc:	cmpeq	r2, r0
   253e0:	bhi	254c8 <_start@@Base+0x12e10>
   253e4:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   253e8:	add	r1, pc, #480	; 0x1e0
   253ec:	ldrd	r0, [r1]
   253f0:	cmp	r3, r1
   253f4:	cmpeq	r2, r0
   253f8:	bne	254c0 <_start@@Base+0x12e08>
   253fc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   25400:	add	r3, r3, #8
   25404:	str	r3, [fp, #-60]	; 0xffffffc4
   25408:	ldr	r1, [fp, #-64]	; 0xffffffc0
   2540c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   25410:	bl	13928 <_start@@Base+0x1270>
   25414:	strd	r0, [fp, #-44]	; 0xffffffd4
   25418:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   2541c:	mov	r0, #0
   25420:	mov	r1, #0
   25424:	movt	r1, #65535	; 0xffff
   25428:	and	ip, r2, r0
   2542c:	str	ip, [fp, #-76]	; 0xffffffb4
   25430:	and	r3, r3, r1
   25434:	str	r3, [fp, #-72]	; 0xffffffb8
   25438:	mov	r2, #0
   2543c:	mov	r3, #0
   25440:	movt	r3, #28281	; 0x6e79
   25444:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   25448:	cmp	r1, r3
   2544c:	cmpeq	r0, r2
   25450:	bne	254b8 <_start@@Base+0x12e00>
   25454:	ldr	r3, [fp, #-60]	; 0xffffffc4
   25458:	str	r3, [fp, #-48]	; 0xffffffd0
   2545c:	mov	r3, #2
   25460:	ldr	r2, [fp, #-64]	; 0xffffffc0
   25464:	ldr	r1, [fp, #-48]	; 0xffffffd0
   25468:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2546c:	bl	1397c <_start@@Base+0x12c4>
   25470:	str	r0, [fp, #-60]	; 0xffffffc4
   25474:	ldr	r2, [fp, #-60]	; 0xffffffc4
   25478:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2547c:	cmp	r2, r3
   25480:	beq	254b0 <_start@@Base+0x12df8>
   25484:	ldr	r3, [fp, #8]
   25488:	str	r3, [sp, #4]
   2548c:	ldr	r3, [fp, #4]
   25490:	str	r3, [sp]
   25494:	ldr	r3, [fp, #-68]	; 0xffffffbc
   25498:	ldr	r2, [fp, #-64]	; 0xffffffc0
   2549c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   254a0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   254a4:	bl	18500 <_start@@Base+0x5e48>
   254a8:	str	r0, [fp, #-60]	; 0xffffffc4
   254ac:	b	25c28 <_start@@Base+0x13570>
   254b0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   254b4:	b	25c2c <_start@@Base+0x13574>
   254b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   254bc:	b	25c2c <_start@@Base+0x13574>
   254c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   254c4:	b	25c2c <_start@@Base+0x13574>
   254c8:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   254cc:	add	r1, pc, #260	; 0x104
   254d0:	ldrd	r0, [r1]
   254d4:	cmp	r3, r1
   254d8:	cmpeq	r2, r0
   254dc:	bne	25638 <_start@@Base+0x12f80>
   254e0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   254e4:	add	r3, r3, #8
   254e8:	str	r3, [fp, #-60]	; 0xffffffc4
   254ec:	ldr	r1, [fp, #-64]	; 0xffffffc0
   254f0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   254f4:	bl	13928 <_start@@Base+0x1270>
   254f8:	strd	r0, [fp, #-44]	; 0xffffffd4
   254fc:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   25500:	mov	r0, #0
   25504:	mvn	r1, #0
   25508:	and	ip, r2, r0
   2550c:	str	ip, [fp, #-84]	; 0xffffffac
   25510:	and	r3, r3, r1
   25514:	str	r3, [fp, #-80]	; 0xffffffb0
   25518:	add	r3, pc, #192	; 0xc0
   2551c:	ldrd	r2, [r3]
   25520:	ldrd	r0, [fp, #-84]	; 0xffffffac
   25524:	cmp	r1, r3
   25528:	cmpeq	r0, r2
   2552c:	bne	25594 <_start@@Base+0x12edc>
   25530:	ldr	r3, [fp, #-60]	; 0xffffffc4
   25534:	str	r3, [fp, #-48]	; 0xffffffd0
   25538:	mov	r3, #4
   2553c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   25540:	ldr	r1, [fp, #-48]	; 0xffffffd0
   25544:	ldr	r0, [fp, #-56]	; 0xffffffc8
   25548:	bl	1397c <_start@@Base+0x12c4>
   2554c:	str	r0, [fp, #-60]	; 0xffffffc4
   25550:	ldr	r2, [fp, #-60]	; 0xffffffc4
   25554:	ldr	r3, [fp, #-48]	; 0xffffffd0
   25558:	cmp	r2, r3
   2555c:	beq	2558c <_start@@Base+0x12ed4>
   25560:	ldr	r3, [fp, #8]
   25564:	str	r3, [sp, #4]
   25568:	ldr	r3, [fp, #4]
   2556c:	str	r3, [sp]
   25570:	ldr	r3, [fp, #-68]	; 0xffffffbc
   25574:	ldr	r2, [fp, #-64]	; 0xffffffc0
   25578:	ldr	r1, [fp, #-60]	; 0xffffffc4
   2557c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   25580:	bl	180c8 <_start@@Base+0x5a10>
   25584:	str	r0, [fp, #-60]	; 0xffffffc4
   25588:	b	25c28 <_start@@Base+0x13570>
   2558c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   25590:	b	25c2c <_start@@Base+0x13574>
   25594:	ldr	r3, [fp, #-32]	; 0xffffffe0
   25598:	b	25c2c <_start@@Base+0x13574>
   2559c:	nop	{0}
   255a0:	stclvs	14, cr2, [r5, #-272]!	; 0xfffffef0
   255a4:	ldclmi	7, cr4, [r9, #-388]!	; 0xfffffe7c
   255a8:	cmnvs	r3, lr, lsr #18
   255ac:			; <UNDEFINED> instruction: 0x46616e74
   255b0:	cmnvs	r3, r5, ror #8
   255b4:	cmnmi	r8, #-2147483620	; 0x8000001c
   255b8:	stclvs	14, cr2, [r5, #-276]!	; 0xfffffeec
   255bc:	ldclmi	7, cr4, [r9, #-388]!	; 0xfffffe7c
   255c0:	stclvs	14, cr2, [r5], #-412	; 0xfffffe64
   255c4:	stmdavc	r1!, {r4, r5, r6, r8, sl, fp, sp, lr}^
   255c8:	stclvs	14, cr2, [r5], #-264	; 0xfffffef8
   255cc:	stmdavc	r1!, {r4, r5, r6, r8, sl, fp, sp, lr}^
   255d0:	stclvs	14, cr2, [r5], #-260	; 0xfffffefc
   255d4:	stmdavc	r1!, {r4, r5, r6, r8, sl, fp, sp, lr}^
   255d8:	stclvs	14, cr2, [r5], #-268	; 0xfffffef4
   255dc:	stmdavc	r1!, {r4, r5, r6, r8, sl, fp, sp, lr}^
   255e0:	andeq	r0, r0, r0
   255e4:	svcvs	0x006c6f72
   255e8:	stclvs	14, cr2, [r5], #-280	; 0xfffffee8
   255ec:	stmdavc	r1!, {r4, r5, r6, r8, sl, fp, sp, lr}^
   255f0:	stclvs	14, cr2, [r5], #-416	; 0xfffffe60
   255f4:	stmdavc	r1!, {r4, r5, r6, r8, sl, fp, sp, lr}^
   255f8:	cdpvs	13, 7, cr6, cr5, cr0, {0}
   255fc:	ldrbvs	r5, [r8, #-3941]!	; 0xfffff09b
   25600:	stclvs	14, cr2, [r5], #-436	; 0xfffffe4c
   25604:	stmdavc	r1!, {r4, r5, r6, r8, sl, fp, sp, lr}^
   25608:	stclvs	14, cr2, [r5], #-420	; 0xfffffe5c
   2560c:	stmdavc	r1!, {r4, r5, r6, r8, sl, fp, sp, lr}^
   25610:	cdpvs	13, 7, cr6, cr5, cr0, {0}
   25614:	cdpvs	15, 7, cr5, cr4, cr5, {3}
   25618:	stclvs	14, cr2, [r5], #-440	; 0xfffffe48
   2561c:	stmdavc	r1!, {r4, r5, r6, r8, sl, fp, sp, lr}^
   25620:	cdpvs	13, 7, cr6, cr5, cr0, {0}
   25624:	strbvs	r5, [r7, #-3941]!	; 0xfffff09b
   25628:	rsbsvc	r7, r4, r5, ror #18
   2562c:	svcvs	0x0074656d
   25630:	andeq	r0, r0, r0
   25634:	cdpvs	13, 7, cr6, cr5, cr0, {0}
   25638:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   2563c:	sub	r1, pc, #92	; 0x5c
   25640:	ldrd	r0, [r1]
   25644:	cmp	r3, r1
   25648:	cmpeq	r2, r0
   2564c:	bne	25714 <_start@@Base+0x1305c>
   25650:	ldr	r3, [fp, #-60]	; 0xffffffc4
   25654:	add	r3, r3, #8
   25658:	str	r3, [fp, #-60]	; 0xffffffc4
   2565c:	ldr	r1, [fp, #-64]	; 0xffffffc0
   25660:	ldr	r0, [fp, #-60]	; 0xffffffc4
   25664:	bl	13928 <_start@@Base+0x1270>
   25668:	strd	r0, [fp, #-44]	; 0xffffffd4
   2566c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   25670:	mov	r0, #0
   25674:	mov	r1, #0
   25678:	movt	r1, #65535	; 0xffff
   2567c:	and	ip, r2, r0
   25680:	str	ip, [fp, #-92]	; 0xffffffa4
   25684:	and	r3, r3, r1
   25688:	str	r3, [fp, #-88]	; 0xffffffa8
   2568c:	mov	r2, #0
   25690:	mov	r3, #0
   25694:	movt	r3, #28527	; 0x6f6f
   25698:	ldrd	r0, [fp, #-92]	; 0xffffffa4
   2569c:	cmp	r1, r3
   256a0:	cmpeq	r0, r2
   256a4:	bne	2570c <_start@@Base+0x13054>
   256a8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   256ac:	str	r3, [fp, #-48]	; 0xffffffd0
   256b0:	mov	r3, #2
   256b4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   256b8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   256bc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   256c0:	bl	1397c <_start@@Base+0x12c4>
   256c4:	str	r0, [fp, #-60]	; 0xffffffc4
   256c8:	ldr	r2, [fp, #-60]	; 0xffffffc4
   256cc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   256d0:	cmp	r2, r3
   256d4:	beq	25704 <_start@@Base+0x1304c>
   256d8:	ldr	r3, [fp, #8]
   256dc:	str	r3, [sp, #4]
   256e0:	ldr	r3, [fp, #4]
   256e4:	str	r3, [sp]
   256e8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   256ec:	ldr	r2, [fp, #-64]	; 0xffffffc0
   256f0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   256f4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   256f8:	bl	17714 <_start@@Base+0x505c>
   256fc:	str	r0, [fp, #-60]	; 0xffffffc4
   25700:	b	25c28 <_start@@Base+0x13570>
   25704:	ldr	r3, [fp, #-32]	; 0xffffffe0
   25708:	b	25c2c <_start@@Base+0x13574>
   2570c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   25710:	b	25c2c <_start@@Base+0x13574>
   25714:	ldr	r3, [fp, #-32]	; 0xffffffe0
   25718:	b	25c2c <_start@@Base+0x13574>
   2571c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   25720:	sub	r1, pc, #312	; 0x138
   25724:	ldrd	r0, [r1]
   25728:	cmp	r3, r1
   2572c:	cmpeq	r2, r0
   25730:	bhi	25810 <_start@@Base+0x13158>
   25734:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   25738:	sub	r1, pc, #336	; 0x150
   2573c:	ldrd	r0, [r1]
   25740:	cmp	r3, r1
   25744:	cmpeq	r2, r0
   25748:	bne	25808 <_start@@Base+0x13150>
   2574c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   25750:	add	r3, r3, #8
   25754:	str	r3, [fp, #-60]	; 0xffffffc4
   25758:	ldr	r1, [fp, #-64]	; 0xffffffc0
   2575c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   25760:	bl	13928 <_start@@Base+0x1270>
   25764:	strd	r0, [fp, #-44]	; 0xffffffd4
   25768:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   2576c:	mvn	r0, #255	; 0xff
   25770:	mvn	r1, #0
   25774:	and	ip, r2, r0
   25778:	str	ip, [fp, #-100]	; 0xffffff9c
   2577c:	and	r3, r3, r1
   25780:	str	r3, [fp, #-96]	; 0xffffffa0
   25784:	sub	r3, pc, #404	; 0x194
   25788:	ldrd	r2, [r3]
   2578c:	ldrd	r0, [fp, #-100]	; 0xffffff9c
   25790:	cmp	r1, r3
   25794:	cmpeq	r0, r2
   25798:	bne	25800 <_start@@Base+0x13148>
   2579c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   257a0:	str	r3, [fp, #-48]	; 0xffffffd0
   257a4:	mov	r3, #7
   257a8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   257ac:	ldr	r1, [fp, #-48]	; 0xffffffd0
   257b0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   257b4:	bl	1397c <_start@@Base+0x12c4>
   257b8:	str	r0, [fp, #-60]	; 0xffffffc4
   257bc:	ldr	r2, [fp, #-60]	; 0xffffffc4
   257c0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   257c4:	cmp	r2, r3
   257c8:	beq	257f8 <_start@@Base+0x13140>
   257cc:	ldr	r3, [fp, #8]
   257d0:	str	r3, [sp, #4]
   257d4:	ldr	r3, [fp, #4]
   257d8:	str	r3, [sp]
   257dc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   257e0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   257e4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   257e8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   257ec:	bl	17e70 <_start@@Base+0x57b8>
   257f0:	str	r0, [fp, #-60]	; 0xffffffc4
   257f4:	b	25c28 <_start@@Base+0x13570>
   257f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   257fc:	b	25c2c <_start@@Base+0x13574>
   25800:	ldr	r3, [fp, #-32]	; 0xffffffe0
   25804:	b	25c2c <_start@@Base+0x13574>
   25808:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2580c:	b	25c2c <_start@@Base+0x13574>
   25810:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   25814:	sub	r1, pc, #540	; 0x21c
   25818:	ldrd	r0, [r1]
   2581c:	cmp	r3, r1
   25820:	cmpeq	r2, r0
   25824:	bhi	25904 <_start@@Base+0x1324c>
   25828:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   2582c:	sub	r1, pc, #556	; 0x22c
   25830:	ldrd	r0, [r1]
   25834:	cmp	r3, r1
   25838:	cmpeq	r2, r0
   2583c:	bne	258fc <_start@@Base+0x13244>
   25840:	ldr	r3, [fp, #-60]	; 0xffffffc4
   25844:	add	r3, r3, #8
   25848:	str	r3, [fp, #-60]	; 0xffffffc4
   2584c:	ldr	r1, [fp, #-64]	; 0xffffffc0
   25850:	ldr	r0, [fp, #-60]	; 0xffffffc4
   25854:	bl	13928 <_start@@Base+0x1270>
   25858:	strd	r0, [fp, #-44]	; 0xffffffd4
   2585c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   25860:	mvn	r0, #255	; 0xff
   25864:	mvn	r1, #0
   25868:	and	ip, r2, r0
   2586c:	str	ip, [fp, #-108]	; 0xffffff94
   25870:	and	r3, r3, r1
   25874:	str	r3, [fp, #-104]	; 0xffffff98
   25878:	sub	r3, pc, #624	; 0x270
   2587c:	ldrd	r2, [r3]
   25880:	ldrd	r0, [fp, #-108]	; 0xffffff94
   25884:	cmp	r1, r3
   25888:	cmpeq	r0, r2
   2588c:	bne	258f4 <_start@@Base+0x1323c>
   25890:	ldr	r3, [fp, #-60]	; 0xffffffc4
   25894:	str	r3, [fp, #-48]	; 0xffffffd0
   25898:	mov	r3, #7
   2589c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   258a0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   258a4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   258a8:	bl	1397c <_start@@Base+0x12c4>
   258ac:	str	r0, [fp, #-60]	; 0xffffffc4
   258b0:	ldr	r2, [fp, #-60]	; 0xffffffc4
   258b4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   258b8:	cmp	r2, r3
   258bc:	beq	258ec <_start@@Base+0x13234>
   258c0:	ldr	r3, [fp, #8]
   258c4:	str	r3, [sp, #4]
   258c8:	ldr	r3, [fp, #4]
   258cc:	str	r3, [sp]
   258d0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   258d4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   258d8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   258dc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   258e0:	bl	17b60 <_start@@Base+0x54a8>
   258e4:	str	r0, [fp, #-60]	; 0xffffffc4
   258e8:	b	25c28 <_start@@Base+0x13570>
   258ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   258f0:	b	25c2c <_start@@Base+0x13574>
   258f4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   258f8:	b	25c2c <_start@@Base+0x13574>
   258fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   25900:	b	25c2c <_start@@Base+0x13574>
   25904:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   25908:	sub	r1, pc, #760	; 0x2f8
   2590c:	ldrd	r0, [r1]
   25910:	cmp	r3, r1
   25914:	cmpeq	r2, r0
   25918:	bne	25aa4 <_start@@Base+0x133ec>
   2591c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   25920:	add	r3, r3, #8
   25924:	str	r3, [fp, #-60]	; 0xffffffc4
   25928:	ldr	r1, [fp, #-64]	; 0xffffffc0
   2592c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   25930:	bl	13928 <_start@@Base+0x1270>
   25934:	strd	r0, [fp, #-44]	; 0xffffffd4
   25938:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   2593c:	mvn	r0, #255	; 0xff
   25940:	mvn	r1, #0
   25944:	and	ip, r2, r0
   25948:	str	ip, [fp, #-116]	; 0xffffff8c
   2594c:	and	r3, r3, r1
   25950:	str	r3, [fp, #-112]	; 0xffffff90
   25954:	sub	r3, pc, #828	; 0x33c
   25958:	ldrd	r2, [r3]
   2595c:	ldrd	r0, [fp, #-116]	; 0xffffff8c
   25960:	cmp	r1, r3
   25964:	cmpeq	r0, r2
   25968:	bne	259c8 <_start@@Base+0x13310>
   2596c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   25970:	str	r3, [fp, #-48]	; 0xffffffd0
   25974:	mov	r3, #7
   25978:	ldr	r2, [fp, #-64]	; 0xffffffc0
   2597c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   25980:	ldr	r0, [fp, #-56]	; 0xffffffc8
   25984:	bl	1397c <_start@@Base+0x12c4>
   25988:	str	r0, [fp, #-60]	; 0xffffffc4
   2598c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   25990:	ldr	r3, [fp, #-48]	; 0xffffffd0
   25994:	cmp	r2, r3
   25998:	beq	259d0 <_start@@Base+0x13318>
   2599c:	ldr	r3, [fp, #8]
   259a0:	str	r3, [sp, #4]
   259a4:	ldr	r3, [fp, #4]
   259a8:	str	r3, [sp]
   259ac:	ldr	r3, [fp, #-68]	; 0xffffffbc
   259b0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   259b4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   259b8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   259bc:	bl	17918 <_start@@Base+0x5260>
   259c0:	str	r0, [fp, #-60]	; 0xffffffc4
   259c4:	b	25c28 <_start@@Base+0x13570>
   259c8:	nop	{0}
   259cc:	b	259d4 <_start@@Base+0x1331c>
   259d0:	nop	{0}
   259d4:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   259d8:	sub	r1, pc, #952	; 0x3b8
   259dc:	ldrd	r0, [r1]
   259e0:	cmp	r3, r1
   259e4:	cmpeq	r2, r0
   259e8:	bne	25a9c <_start@@Base+0x133e4>
   259ec:	ldr	r3, [fp, #-60]	; 0xffffffc4
   259f0:	add	r3, r3, #8
   259f4:	str	r3, [fp, #-60]	; 0xffffffc4
   259f8:	ldr	r1, [fp, #-64]	; 0xffffffc0
   259fc:	ldr	r0, [fp, #-60]	; 0xffffffc4
   25a00:	bl	13928 <_start@@Base+0x1270>
   25a04:	strd	r0, [fp, #-44]	; 0xffffffd4
   25a08:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   25a0c:	mov	r0, #0
   25a10:	mvn	r1, #255	; 0xff
   25a14:	and	r8, r2, r0
   25a18:	and	r9, r3, r1
   25a1c:	sub	r3, pc, #1012	; 0x3f4
   25a20:	ldrd	r2, [r3]
   25a24:	cmp	r9, r3
   25a28:	cmpeq	r8, r2
   25a2c:	bne	25a94 <_start@@Base+0x133dc>
   25a30:	ldr	r3, [fp, #-60]	; 0xffffffc4
   25a34:	str	r3, [fp, #-48]	; 0xffffffd0
   25a38:	mov	r3, #3
   25a3c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   25a40:	ldr	r1, [fp, #-48]	; 0xffffffd0
   25a44:	ldr	r0, [fp, #-56]	; 0xffffffc8
   25a48:	bl	1397c <_start@@Base+0x12c4>
   25a4c:	str	r0, [fp, #-60]	; 0xffffffc4
   25a50:	ldr	r2, [fp, #-60]	; 0xffffffc4
   25a54:	ldr	r3, [fp, #-48]	; 0xffffffd0
   25a58:	cmp	r2, r3
   25a5c:	beq	25a8c <_start@@Base+0x133d4>
   25a60:	ldr	r3, [fp, #8]
   25a64:	str	r3, [sp, #4]
   25a68:	ldr	r3, [fp, #4]
   25a6c:	str	r3, [sp]
   25a70:	ldr	r3, [fp, #-68]	; 0xffffffbc
   25a74:	ldr	r2, [fp, #-64]	; 0xffffffc0
   25a78:	ldr	r1, [fp, #-60]	; 0xffffffc4
   25a7c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   25a80:	bl	191a8 <_start@@Base+0x6af0>
   25a84:	str	r0, [fp, #-60]	; 0xffffffc4
   25a88:	b	25c28 <_start@@Base+0x13570>
   25a8c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   25a90:	b	25c2c <_start@@Base+0x13574>
   25a94:	ldr	r3, [fp, #-32]	; 0xffffffe0
   25a98:	b	25c2c <_start@@Base+0x13574>
   25a9c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   25aa0:	b	25c2c <_start@@Base+0x13574>
   25aa4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   25aa8:	b	25c2c <_start@@Base+0x13574>
   25aac:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   25ab0:	add	r1, pc, #408	; 0x198
   25ab4:	ldrd	r0, [r1]
   25ab8:	cmp	r3, r1
   25abc:	cmpeq	r2, r0
   25ac0:	bne	25c20 <_start@@Base+0x13568>
   25ac4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   25ac8:	add	r3, r3, #8
   25acc:	str	r3, [fp, #-60]	; 0xffffffc4
   25ad0:	ldr	r1, [fp, #-64]	; 0xffffffc0
   25ad4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   25ad8:	bl	13928 <_start@@Base+0x1270>
   25adc:	strd	r0, [fp, #-44]	; 0xffffffd4
   25ae0:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   25ae4:	add	r1, pc, #364	; 0x16c
   25ae8:	ldrd	r0, [r1]
   25aec:	cmp	r3, r1
   25af0:	cmpeq	r2, r0
   25af4:	bne	25c18 <_start@@Base+0x13560>
   25af8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   25afc:	add	r3, r3, #8
   25b00:	str	r3, [fp, #-60]	; 0xffffffc4
   25b04:	ldr	r1, [fp, #-64]	; 0xffffffc0
   25b08:	ldr	r0, [fp, #-60]	; 0xffffffc4
   25b0c:	bl	13928 <_start@@Base+0x1270>
   25b10:	strd	r0, [fp, #-44]	; 0xffffffd4
   25b14:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   25b18:	add	r1, pc, #320	; 0x140
   25b1c:	ldrd	r0, [r1]
   25b20:	cmp	r3, r1
   25b24:	cmpeq	r2, r0
   25b28:	bne	25c10 <_start@@Base+0x13558>
   25b2c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   25b30:	add	r3, r3, #8
   25b34:	str	r3, [fp, #-60]	; 0xffffffc4
   25b38:	ldr	r1, [fp, #-64]	; 0xffffffc0
   25b3c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   25b40:	bl	13928 <_start@@Base+0x1270>
   25b44:	strd	r0, [fp, #-44]	; 0xffffffd4
   25b48:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   25b4c:	add	r1, pc, #276	; 0x114
   25b50:	ldrd	r0, [r1]
   25b54:	cmp	r3, r1
   25b58:	cmpeq	r2, r0
   25b5c:	bne	25c08 <_start@@Base+0x13550>
   25b60:	ldr	r3, [fp, #-60]	; 0xffffffc4
   25b64:	add	r3, r3, #8
   25b68:	str	r3, [fp, #-60]	; 0xffffffc4
   25b6c:	ldr	r1, [fp, #-64]	; 0xffffffc0
   25b70:	ldr	r0, [fp, #-60]	; 0xffffffc4
   25b74:	bl	13928 <_start@@Base+0x1270>
   25b78:	strd	r0, [fp, #-44]	; 0xffffffd4
   25b7c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   25b80:	mov	r0, #0
   25b84:	mov	r1, #-16777216	; 0xff000000
   25b88:	and	r6, r2, r0
   25b8c:	and	r7, r3, r1
   25b90:	cmp	r7, #1694498816	; 0x65000000
   25b94:	cmpeq	r6, #0
   25b98:	bne	25c00 <_start@@Base+0x13548>
   25b9c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   25ba0:	str	r3, [fp, #-48]	; 0xffffffd0
   25ba4:	mov	r3, #1
   25ba8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   25bac:	ldr	r1, [fp, #-48]	; 0xffffffd0
   25bb0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   25bb4:	bl	1397c <_start@@Base+0x12c4>
   25bb8:	str	r0, [fp, #-60]	; 0xffffffc4
   25bbc:	ldr	r2, [fp, #-60]	; 0xffffffc4
   25bc0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   25bc4:	cmp	r2, r3
   25bc8:	beq	25bf8 <_start@@Base+0x13540>
   25bcc:	ldr	r3, [fp, #8]
   25bd0:	str	r3, [sp, #4]
   25bd4:	ldr	r3, [fp, #4]
   25bd8:	str	r3, [sp]
   25bdc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   25be0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   25be4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   25be8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   25bec:	bl	164fc <_start@@Base+0x3e44>
   25bf0:	str	r0, [fp, #-60]	; 0xffffffc4
   25bf4:	b	25c28 <_start@@Base+0x13570>
   25bf8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   25bfc:	b	25c2c <_start@@Base+0x13574>
   25c00:	ldr	r3, [fp, #-32]	; 0xffffffe0
   25c04:	b	25c2c <_start@@Base+0x13574>
   25c08:	ldr	r3, [fp, #-32]	; 0xffffffe0
   25c0c:	b	25c2c <_start@@Base+0x13574>
   25c10:	ldr	r3, [fp, #-32]	; 0xffffffe0
   25c14:	b	25c2c <_start@@Base+0x13574>
   25c18:	ldr	r3, [fp, #-32]	; 0xffffffe0
   25c1c:	b	25c2c <_start@@Base+0x13574>
   25c20:	ldr	r3, [fp, #-32]	; 0xffffffe0
   25c24:	b	25c2c <_start@@Base+0x13574>
   25c28:	ldr	r3, [fp, #-60]	; 0xffffffc4
   25c2c:	mov	r0, r3
   25c30:	sub	sp, fp, #28
   25c34:	ldrd	r4, [sp]
   25c38:	ldrd	r6, [sp, #8]
   25c3c:	ldrd	r8, [sp, #16]
   25c40:	ldr	fp, [sp, #24]
   25c44:	add	sp, sp, #28
   25c48:	pop	{pc}		; (ldr pc, [sp], #4)
   25c4c:	nop	{0}
   25c50:	stclvs	14, cr2, [r5, #-316]!	; 0xfffffec4
   25c54:	ldclmi	7, cr4, [r9, #-388]!	; 0xfffffe7c
   25c58:	cdpmi	13, 6, cr6, cr1, cr5, {3}
   25c5c:	strbtvc	r6, [r8], #-1394	; 0xfffffa8e
   25c60:	strvs	r4, [lr, #-1650]!	; 0xfffff98e
   25c64:	cmnpl	r0, #-1073741800	; 0xc0000018
   25c68:	cmnvs	ip, #100, 10	; 0x19000000
   25c6c:	svcvs	0x006d496e
   25c70:	str	fp, [sp, #-8]!
   25c74:	str	lr, [sp, #4]
   25c78:	add	fp, sp, #4
   25c7c:	sub	sp, sp, #72	; 0x48
   25c80:	str	r0, [fp, #-56]	; 0xffffffc8
   25c84:	str	r1, [fp, #-60]	; 0xffffffc4
   25c88:	str	r2, [fp, #-64]	; 0xffffffc0
   25c8c:	str	r3, [fp, #-68]	; 0xffffffbc
   25c90:	ldr	r3, [fp, #-60]	; 0xffffffc4
   25c94:	cmp	r3, #0
   25c98:	bne	25ca4 <_start@@Base+0x135ec>
   25c9c:	sub	r3, fp, #48	; 0x30
   25ca0:	b	25ca8 <_start@@Base+0x135f0>
   25ca4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   25ca8:	str	r3, [fp, #-60]	; 0xffffffc4
   25cac:	ldr	r2, [fp, #-64]	; 0xffffffc0
   25cb0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   25cb4:	add	r2, r2, r3
   25cb8:	ldr	r3, [fp, #4]
   25cbc:	str	r3, [sp]
   25cc0:	mov	r3, r2
   25cc4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   25cc8:	ldr	r1, [fp, #-56]	; 0xffffffc8
   25ccc:	ldr	r0, [fp, #-60]	; 0xffffffc4
   25cd0:	bl	134bc <_start@@Base+0xe04>
   25cd4:	mov	r3, #0
   25cd8:	mov	r2, #0
   25cdc:	ldr	r1, [pc, #156]	; 25d80 <_start@@Base+0x136c8>
   25ce0:	add	r1, pc, r1
   25ce4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   25ce8:	bl	28cc4 <flatcc_builder_start_buffer@@Base>
   25cec:	mov	r3, r0
   25cf0:	cmp	r3, #0
   25cf4:	beq	25d00 <_start@@Base+0x13648>
   25cf8:	mvn	r3, #0
   25cfc:	b	25d6c <_start@@Base+0x136b4>
   25d00:	ldr	r2, [fp, #-64]	; 0xffffffc0
   25d04:	ldr	r3, [fp, #-68]	; 0xffffffbc
   25d08:	add	r2, r2, r3
   25d0c:	sub	r3, fp, #52	; 0x34
   25d10:	ldr	r1, [fp, #-64]	; 0xffffffc0
   25d14:	ldr	r0, [fp, #-60]	; 0xffffffc4
   25d18:	bl	1d9d0 <_start@@Base+0xb318>
   25d1c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   25d20:	ldr	r3, [r3, #24]
   25d24:	cmp	r3, #0
   25d28:	beq	25d38 <_start@@Base+0x13680>
   25d2c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   25d30:	ldr	r3, [r3, #24]
   25d34:	b	25d6c <_start@@Base+0x136b4>
   25d38:	ldr	r3, [fp, #-52]	; 0xffffffcc
   25d3c:	mov	r1, r3
   25d40:	ldr	r0, [fp, #-56]	; 0xffffffc8
   25d44:	bl	28e34 <flatcc_builder_end_buffer@@Base>
   25d48:	mov	r3, r0
   25d4c:	cmp	r3, #0
   25d50:	bne	25d5c <_start@@Base+0x136a4>
   25d54:	mvn	r3, #0
   25d58:	b	25d6c <_start@@Base+0x136b4>
   25d5c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   25d60:	ldr	r2, [fp, #-64]	; 0xffffffc0
   25d64:	str	r2, [r3, #40]	; 0x28
   25d68:	mov	r3, #0
   25d6c:	mov	r0, r3
   25d70:	sub	sp, fp, #4
   25d74:	ldr	fp, [sp]
   25d78:	add	sp, sp, #4
   25d7c:	pop	{pc}		; (ldr pc, [sp], #4)
   25d80:	strheq	r1, [r1], -r0
   25d84:	str	fp, [sp, #-8]!
   25d88:	str	lr, [sp, #4]
   25d8c:	add	fp, sp, #4
   25d90:	sub	sp, sp, #48	; 0x30
   25d94:	str	r0, [fp, #-40]	; 0xffffffd8
   25d98:	str	r1, [fp, #-44]	; 0xffffffd4
   25d9c:	str	r2, [fp, #-48]	; 0xffffffd0
   25da0:	str	r3, [fp, #-52]	; 0xffffffcc
   25da4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   25da8:	str	r3, [fp, #-12]
   25dac:	ldr	r3, [fp, #-40]	; 0xffffffd8
   25db0:	cmp	r3, #0
   25db4:	beq	25dd0 <_start@@Base+0x13718>
   25db8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   25dbc:	ldr	r3, [pc, #448]	; 25f84 <_start@@Base+0x138cc>
   25dc0:	add	r3, pc, r3
   25dc4:	mov	r1, r3
   25dc8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   25dcc:	bl	12634 <fprintf@plt>
   25dd0:	mov	r3, #0
   25dd4:	str	r3, [fp, #-8]
   25dd8:	b	25f0c <_start@@Base+0x13854>
   25ddc:	ldr	r3, [fp, #-8]
   25de0:	and	r3, r3, #15
   25de4:	cmp	r3, #0
   25de8:	bne	25e30 <_start@@Base+0x13778>
   25dec:	ldr	r3, [fp, #-8]
   25df0:	cmp	r3, #0
   25df4:	beq	25e14 <_start@@Base+0x1375c>
   25df8:	sub	r3, fp, #32
   25dfc:	mov	r2, r3
   25e00:	ldr	r3, [pc, #384]	; 25f88 <_start@@Base+0x138d0>
   25e04:	add	r3, pc, r3
   25e08:	mov	r1, r3
   25e0c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   25e10:	bl	12634 <fprintf@plt>
   25e14:	ldr	r2, [fp, #-8]
   25e18:	ldr	r3, [pc, #364]	; 25f8c <_start@@Base+0x138d4>
   25e1c:	add	r3, pc, r3
   25e20:	mov	r1, r3
   25e24:	ldr	r0, [fp, #-52]	; 0xffffffcc
   25e28:	bl	12634 <fprintf@plt>
   25e2c:	b	25e4c <_start@@Base+0x13794>
   25e30:	ldr	r3, [fp, #-8]
   25e34:	and	r3, r3, #7
   25e38:	cmp	r3, #0
   25e3c:	bne	25e4c <_start@@Base+0x13794>
   25e40:	ldr	r1, [fp, #-52]	; 0xffffffcc
   25e44:	mov	r0, #32
   25e48:	bl	12688 <fputc@plt>
   25e4c:	ldr	r2, [fp, #-12]
   25e50:	ldr	r3, [fp, #-8]
   25e54:	add	r3, r2, r3
   25e58:	ldrb	r3, [r3]
   25e5c:	mov	r2, r3
   25e60:	ldr	r3, [pc, #296]	; 25f90 <_start@@Base+0x138d8>
   25e64:	add	r3, pc, r3
   25e68:	mov	r1, r3
   25e6c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   25e70:	bl	12634 <fprintf@plt>
   25e74:	ldr	r2, [fp, #-12]
   25e78:	ldr	r3, [fp, #-8]
   25e7c:	add	r3, r2, r3
   25e80:	ldrb	r3, [r3]
   25e84:	cmp	r3, #31
   25e88:	bls	25ea4 <_start@@Base+0x137ec>
   25e8c:	ldr	r2, [fp, #-12]
   25e90:	ldr	r3, [fp, #-8]
   25e94:	add	r3, r2, r3
   25e98:	ldrb	r3, [r3]
   25e9c:	cmp	r3, #126	; 0x7e
   25ea0:	bls	25ec0 <_start@@Base+0x13808>
   25ea4:	ldr	r3, [fp, #-8]
   25ea8:	and	r3, r3, #15
   25eac:	sub	r2, fp, #4
   25eb0:	add	r3, r2, r3
   25eb4:	mov	r2, #46	; 0x2e
   25eb8:	strb	r2, [r3, #-28]	; 0xffffffe4
   25ebc:	b	25ee4 <_start@@Base+0x1382c>
   25ec0:	ldr	r2, [fp, #-12]
   25ec4:	ldr	r3, [fp, #-8]
   25ec8:	add	r2, r2, r3
   25ecc:	ldr	r3, [fp, #-8]
   25ed0:	and	r3, r3, #15
   25ed4:	ldrb	r2, [r2]
   25ed8:	sub	r1, fp, #4
   25edc:	add	r3, r1, r3
   25ee0:	strb	r2, [r3, #-28]	; 0xffffffe4
   25ee4:	ldr	r3, [fp, #-8]
   25ee8:	and	r3, r3, #15
   25eec:	add	r3, r3, #1
   25ef0:	sub	r2, fp, #4
   25ef4:	add	r3, r2, r3
   25ef8:	mov	r2, #0
   25efc:	strb	r2, [r3, #-28]	; 0xffffffe4
   25f00:	ldr	r3, [fp, #-8]
   25f04:	add	r3, r3, #1
   25f08:	str	r3, [fp, #-8]
   25f0c:	ldr	r2, [fp, #-8]
   25f10:	ldr	r3, [fp, #-48]	; 0xffffffd0
   25f14:	cmp	r2, r3
   25f18:	bcc	25ddc <_start@@Base+0x13724>
   25f1c:	b	25f44 <_start@@Base+0x1388c>
   25f20:	ldr	r3, [fp, #-52]	; 0xffffffcc
   25f24:	mov	r2, #3
   25f28:	mov	r1, #1
   25f2c:	ldr	r0, [pc, #96]	; 25f94 <_start@@Base+0x138dc>
   25f30:	add	r0, pc, r0
   25f34:	bl	125e0 <fwrite@plt>
   25f38:	ldr	r3, [fp, #-8]
   25f3c:	add	r3, r3, #1
   25f40:	str	r3, [fp, #-8]
   25f44:	ldr	r3, [fp, #-8]
   25f48:	and	r3, r3, #15
   25f4c:	cmp	r3, #0
   25f50:	bne	25f20 <_start@@Base+0x13868>
   25f54:	sub	r3, fp, #32
   25f58:	mov	r2, r3
   25f5c:	ldr	r3, [pc, #52]	; 25f98 <_start@@Base+0x138e0>
   25f60:	add	r3, pc, r3
   25f64:	mov	r1, r3
   25f68:	ldr	r0, [fp, #-52]	; 0xffffffcc
   25f6c:	bl	12634 <fprintf@plt>
   25f70:	nop	{0}
   25f74:	sub	sp, fp, #4
   25f78:	ldr	fp, [sp]
   25f7c:	add	sp, sp, #4
   25f80:	pop	{pc}		; (ldr pc, [sp], #4)
   25f84:	ldrdeq	r0, [r1], -r8
   25f88:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   25f8c:	andeq	r0, r1, ip, lsl #31
   25f90:	andeq	r0, r1, ip, asr #30
   25f94:	andeq	r0, r1, r8, lsl #29
   25f98:	andeq	r0, r1, r0, asr #28
   25f9c:	str	fp, [sp, #-8]!
   25fa0:	str	lr, [sp, #4]
   25fa4:	add	fp, sp, #4
   25fa8:	sub	sp, sp, #48	; 0x30
   25fac:	str	r0, [fp, #-40]	; 0xffffffd8
   25fb0:	str	r1, [fp, #-44]	; 0xffffffd4
   25fb4:	str	r2, [fp, #-48]	; 0xffffffd0
   25fb8:	str	r3, [fp, #-52]	; 0xffffffcc
   25fbc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   25fc0:	str	r3, [fp, #-12]
   25fc4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   25fc8:	cmp	r3, #0
   25fcc:	beq	25fd8 <_start@@Base+0x13920>
   25fd0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   25fd4:	b	25fe0 <_start@@Base+0x13928>
   25fd8:	ldr	r3, [pc, #236]	; 260cc <_start@@Base+0x13a14>
   25fdc:	add	r3, pc, r3
   25fe0:	str	r3, [fp, #-40]	; 0xffffffd8
   25fe4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   25fe8:	ldr	r3, [pc, #224]	; 260d0 <_start@@Base+0x13a18>
   25fec:	add	r3, pc, r3
   25ff0:	mov	r1, r3
   25ff4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   25ff8:	bl	12634 <fprintf@plt>
   25ffc:	mov	r3, #0
   26000:	str	r3, [fp, #-8]
   26004:	b	26090 <_start@@Base+0x139d8>
   26008:	ldr	r3, [fp, #-8]
   2600c:	and	r3, r3, #15
   26010:	cmp	r3, #0
   26014:	bne	26034 <_start@@Base+0x1397c>
   26018:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2601c:	mov	r2, #4
   26020:	mov	r1, #1
   26024:	ldr	r0, [pc, #168]	; 260d4 <_start@@Base+0x13a1c>
   26028:	add	r0, pc, r0
   2602c:	bl	125e0 <fwrite@plt>
   26030:	b	2605c <_start@@Base+0x139a4>
   26034:	ldr	r3, [fp, #-8]
   26038:	and	r3, r3, #7
   2603c:	cmp	r3, #0
   26040:	bne	2605c <_start@@Base+0x139a4>
   26044:	ldr	r3, [fp, #-52]	; 0xffffffcc
   26048:	mov	r2, #3
   2604c:	mov	r1, #1
   26050:	ldr	r0, [pc, #128]	; 260d8 <_start@@Base+0x13a20>
   26054:	add	r0, pc, r0
   26058:	bl	125e0 <fwrite@plt>
   2605c:	ldr	r2, [fp, #-12]
   26060:	ldr	r3, [fp, #-8]
   26064:	add	r3, r2, r3
   26068:	ldrb	r3, [r3]
   2606c:	mov	r2, r3
   26070:	ldr	r3, [pc, #100]	; 260dc <_start@@Base+0x13a24>
   26074:	add	r3, pc, r3
   26078:	mov	r1, r3
   2607c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   26080:	bl	12634 <fprintf@plt>
   26084:	ldr	r3, [fp, #-8]
   26088:	add	r3, r3, #1
   2608c:	str	r3, [fp, #-8]
   26090:	ldr	r2, [fp, #-8]
   26094:	ldr	r3, [fp, #-48]	; 0xffffffd0
   26098:	cmp	r2, r3
   2609c:	bcc	26008 <_start@@Base+0x13950>
   260a0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   260a4:	mov	r2, #4
   260a8:	mov	r1, #1
   260ac:	ldr	r0, [pc, #44]	; 260e0 <_start@@Base+0x13a28>
   260b0:	add	r0, pc, r0
   260b4:	bl	125e0 <fwrite@plt>
   260b8:	nop	{0}
   260bc:	sub	sp, fp, #4
   260c0:	ldr	fp, [sp]
   260c4:	add	sp, sp, #4
   260c8:	pop	{pc}		; (ldr pc, [sp], #4)
   260cc:	andeq	r0, r1, r0, ror #27
   260d0:	ldrdeq	r0, [r1], -r8
   260d4:			; <UNDEFINED> instruction: 0x00010dbc
   260d8:	andeq	r0, r1, r4, ror #26
   260dc:	andeq	r0, r1, r8, ror sp
   260e0:	andeq	r0, r1, r8, asr #26
   260e4:	str	fp, [sp, #-8]!
   260e8:	str	lr, [sp, #4]
   260ec:	add	fp, sp, #4
   260f0:	sub	sp, sp, #40	; 0x28
   260f4:	str	r0, [fp, #-32]	; 0xffffffe0
   260f8:	str	r1, [fp, #-36]	; 0xffffffdc
   260fc:	str	r2, [fp, #-40]	; 0xffffffd8
   26100:	ldr	r3, [fp, #-40]	; 0xffffffd8
   26104:	cmp	r3, #0
   26108:	bne	26114 <_start@@Base+0x13a5c>
   2610c:	sub	r3, fp, #28
   26110:	b	26118 <_start@@Base+0x13a60>
   26114:	ldr	r3, [fp, #-40]	; 0xffffffd8
   26118:	str	r3, [fp, #-40]	; 0xffffffd8
   2611c:	ldr	r3, [pc, #404]	; 262b8 <_start@@Base+0x13c00>
   26120:	add	r3, pc, r3
   26124:	mov	r1, r3
   26128:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2612c:	bl	1258c <fopen@plt>
   26130:	str	r0, [fp, #-20]	; 0xffffffec
   26134:	mov	r3, #0
   26138:	str	r3, [fp, #-8]
   2613c:	mov	r3, #0
   26140:	str	r3, [fp, #-16]
   26144:	ldr	r3, [fp, #-20]	; 0xffffffec
   26148:	cmp	r3, #0
   2614c:	beq	26250 <_start@@Base+0x13b98>
   26150:	mov	r2, #2
   26154:	mov	r1, #0
   26158:	ldr	r0, [fp, #-20]	; 0xffffffec
   2615c:	bl	12694 <fseek@plt>
   26160:	ldr	r0, [fp, #-20]	; 0xffffffec
   26164:	bl	125b0 <ftell@plt>
   26168:	mov	r3, r0
   2616c:	str	r3, [fp, #-8]
   26170:	ldr	r3, [fp, #-40]	; 0xffffffd8
   26174:	ldr	r2, [fp, #-8]
   26178:	str	r2, [r3]
   2617c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   26180:	cmp	r3, #0
   26184:	beq	26198 <_start@@Base+0x13ae0>
   26188:	ldr	r2, [fp, #-8]
   2618c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   26190:	cmp	r2, r3
   26194:	bhi	26258 <_start@@Base+0x13ba0>
   26198:	ldr	r0, [fp, #-20]	; 0xffffffec
   2619c:	bl	125c8 <rewind@plt>
   261a0:	ldr	r3, [fp, #-8]
   261a4:	cmp	r3, #0
   261a8:	beq	261b4 <_start@@Base+0x13afc>
   261ac:	ldr	r3, [fp, #-8]
   261b0:	b	261b8 <_start@@Base+0x13b00>
   261b4:	mov	r3, #1
   261b8:	mov	r0, r3
   261bc:	bl	125f8 <malloc@plt>
   261c0:	mov	r3, r0
   261c4:	str	r3, [fp, #-16]
   261c8:	ldr	r3, [fp, #-16]
   261cc:	cmp	r3, #0
   261d0:	beq	26260 <_start@@Base+0x13ba8>
   261d4:	mov	r3, #0
   261d8:	str	r3, [fp, #-12]
   261dc:	b	261f0 <_start@@Base+0x13b38>
   261e0:	ldr	r2, [fp, #-12]
   261e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   261e8:	add	r3, r2, r3
   261ec:	str	r3, [fp, #-12]
   261f0:	ldr	r2, [fp, #-16]
   261f4:	ldr	r3, [fp, #-12]
   261f8:	add	r0, r2, r3
   261fc:	ldr	r2, [fp, #-8]
   26200:	ldr	r3, [fp, #-12]
   26204:	sub	r2, r2, r3
   26208:	ldr	r3, [fp, #-20]	; 0xffffffec
   2620c:	mov	r1, #1
   26210:	bl	125ec <fread@plt>
   26214:	str	r0, [fp, #-24]	; 0xffffffe8
   26218:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2621c:	cmp	r3, #0
   26220:	bne	261e0 <_start@@Base+0x13b28>
   26224:	ldr	r2, [fp, #-12]
   26228:	ldr	r3, [fp, #-8]
   2622c:	cmp	r2, r3
   26230:	bne	26268 <_start@@Base+0x13bb0>
   26234:	ldr	r0, [fp, #-20]	; 0xffffffec
   26238:	bl	1267c <fclose@plt>
   2623c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   26240:	ldr	r2, [fp, #-8]
   26244:	str	r2, [r3]
   26248:	ldr	r3, [fp, #-16]
   2624c:	b	262a4 <_start@@Base+0x13bec>
   26250:	nop	{0}
   26254:	b	2626c <_start@@Base+0x13bb4>
   26258:	nop	{0}
   2625c:	b	2626c <_start@@Base+0x13bb4>
   26260:	nop	{0}
   26264:	b	2626c <_start@@Base+0x13bb4>
   26268:	nop	{0}
   2626c:	ldr	r3, [fp, #-20]	; 0xffffffec
   26270:	cmp	r3, #0
   26274:	beq	26280 <_start@@Base+0x13bc8>
   26278:	ldr	r0, [fp, #-20]	; 0xffffffec
   2627c:	bl	1267c <fclose@plt>
   26280:	ldr	r3, [fp, #-16]
   26284:	cmp	r3, #0
   26288:	beq	26294 <_start@@Base+0x13bdc>
   2628c:	ldr	r0, [fp, #-16]
   26290:	bl	12598 <free@plt>
   26294:	ldr	r3, [fp, #-40]	; 0xffffffd8
   26298:	ldr	r2, [fp, #-8]
   2629c:	str	r2, [r3]
   262a0:	mov	r3, #0
   262a4:	mov	r0, r3
   262a8:	sub	sp, fp, #4
   262ac:	ldr	fp, [sp]
   262b0:	add	sp, sp, #4
   262b4:	pop	{pc}		; (ldr pc, [sp], #4)
   262b8:	andeq	r0, r1, r0, ror #25

000262bc <verify_parse@@Base>:
   262bc:	str	fp, [sp, #-8]!
   262c0:	str	lr, [sp, #4]
   262c4:	add	fp, sp, #4
   262c8:	sub	sp, sp, #24
   262cc:	str	r0, [fp, #-24]	; 0xffffffe8
   262d0:	ldr	r3, [pc, #572]	; 26514 <verify_parse@@Base+0x258>
   262d4:	add	r3, pc, r3
   262d8:	mov	r1, r3
   262dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   262e0:	bl	1335c <_start@@Base+0xca4>
   262e4:	str	r0, [fp, #-8]
   262e8:	ldr	r0, [fp, #-8]
   262ec:	bl	133c8 <_start@@Base+0xd10>
   262f0:	str	r0, [fp, #-12]
   262f4:	ldr	r3, [fp, #-12]
   262f8:	cmp	r3, #0
   262fc:	bne	26320 <verify_parse@@Base+0x64>
   26300:	ldr	r3, [pc, #528]	; 26518 <verify_parse@@Base+0x25c>
   26304:	add	r3, pc, r3
   26308:	mov	r2, #45	; 0x2d
   2630c:	ldr	r1, [pc, #520]	; 2651c <verify_parse@@Base+0x260>
   26310:	add	r1, pc, r1
   26314:	ldr	r0, [pc, #516]	; 26520 <verify_parse@@Base+0x264>
   26318:	add	r0, pc, r0
   2631c:	bl	126ac <__assert_fail@plt>
   26320:	ldr	r0, [fp, #-12]
   26324:	bl	13180 <_start@@Base+0xac8>
   26328:	vmov.f32	s14, s0
   2632c:	vldr	s15, [pc, #468]	; 26508 <verify_parse@@Base+0x24c>
   26330:	vcmp.f32	s14, s15
   26334:	vmrs	APSR_nzcv, fpscr
   26338:	beq	2635c <verify_parse@@Base+0xa0>
   2633c:	ldr	r3, [pc, #480]	; 26524 <verify_parse@@Base+0x268>
   26340:	add	r3, pc, r3
   26344:	mov	r2, #46	; 0x2e
   26348:	ldr	r1, [pc, #472]	; 26528 <verify_parse@@Base+0x26c>
   2634c:	add	r1, pc, r1
   26350:	ldr	r0, [pc, #468]	; 2652c <verify_parse@@Base+0x270>
   26354:	add	r0, pc, r0
   26358:	bl	126ac <__assert_fail@plt>
   2635c:	ldr	r0, [fp, #-12]
   26360:	bl	131d0 <_start@@Base+0xb18>
   26364:	vmov.f32	s14, s0
   26368:	vldr	s15, [pc, #412]	; 2650c <verify_parse@@Base+0x250>
   2636c:	vcmp.f32	s14, s15
   26370:	vmrs	APSR_nzcv, fpscr
   26374:	beq	26398 <verify_parse@@Base+0xdc>
   26378:	ldr	r3, [pc, #432]	; 26530 <verify_parse@@Base+0x274>
   2637c:	add	r3, pc, r3
   26380:	mov	r2, #47	; 0x2f
   26384:	ldr	r1, [pc, #424]	; 26534 <verify_parse@@Base+0x278>
   26388:	add	r1, pc, r1
   2638c:	ldr	r0, [pc, #420]	; 26538 <verify_parse@@Base+0x27c>
   26390:	add	r0, pc, r0
   26394:	bl	126ac <__assert_fail@plt>
   26398:	ldr	r0, [fp, #-12]
   2639c:	bl	13224 <_start@@Base+0xb6c>
   263a0:	vmov.f32	s14, s0
   263a4:	vldr	s15, [pc, #356]	; 26510 <verify_parse@@Base+0x254>
   263a8:	vcmp.f32	s14, s15
   263ac:	vmrs	APSR_nzcv, fpscr
   263b0:	beq	263d4 <verify_parse@@Base+0x118>
   263b4:	ldr	r3, [pc, #384]	; 2653c <verify_parse@@Base+0x280>
   263b8:	add	r3, pc, r3
   263bc:	mov	r2, #48	; 0x30
   263c0:	ldr	r1, [pc, #376]	; 26540 <verify_parse@@Base+0x284>
   263c4:	add	r1, pc, r1
   263c8:	ldr	r0, [pc, #372]	; 26544 <verify_parse@@Base+0x288>
   263cc:	add	r0, pc, r0
   263d0:	bl	126ac <__assert_fail@plt>
   263d4:	ldr	r0, [fp, #-12]
   263d8:	bl	13278 <_start@@Base+0xbc0>
   263dc:	vmov.f64	d6, d0
   263e0:	vldr	d7, [pc, #280]	; 26500 <verify_parse@@Base+0x244>
   263e4:	vcmp.f64	d6, d7
   263e8:	vmrs	APSR_nzcv, fpscr
   263ec:	beq	26410 <verify_parse@@Base+0x154>
   263f0:	ldr	r3, [pc, #336]	; 26548 <verify_parse@@Base+0x28c>
   263f4:	add	r3, pc, r3
   263f8:	mov	r2, #49	; 0x31
   263fc:	ldr	r1, [pc, #328]	; 2654c <verify_parse@@Base+0x290>
   26400:	add	r1, pc, r1
   26404:	ldr	r0, [pc, #324]	; 26550 <verify_parse@@Base+0x294>
   26408:	add	r0, pc, r0
   2640c:	bl	126ac <__assert_fail@plt>
   26410:	ldr	r0, [fp, #-12]
   26414:	bl	132d0 <_start@@Base+0xc18>
   26418:	mov	r3, r0
   2641c:	cmp	r3, #2
   26420:	beq	26444 <verify_parse@@Base+0x188>
   26424:	ldr	r3, [pc, #296]	; 26554 <verify_parse@@Base+0x298>
   26428:	add	r3, pc, r3
   2642c:	mov	r2, #50	; 0x32
   26430:	ldr	r1, [pc, #288]	; 26558 <verify_parse@@Base+0x29c>
   26434:	add	r1, pc, r1
   26438:	ldr	r0, [pc, #284]	; 2655c <verify_parse@@Base+0x2a0>
   2643c:	add	r0, pc, r0
   26440:	bl	126ac <__assert_fail@plt>
   26444:	ldr	r0, [fp, #-12]
   26448:	bl	13320 <_start@@Base+0xc68>
   2644c:	str	r0, [fp, #-16]
   26450:	ldr	r3, [fp, #-16]
   26454:	cmp	r3, #0
   26458:	bne	2647c <verify_parse@@Base+0x1c0>
   2645c:	ldr	r3, [pc, #252]	; 26560 <verify_parse@@Base+0x2a4>
   26460:	add	r3, pc, r3
   26464:	mov	r2, #52	; 0x34
   26468:	ldr	r1, [pc, #244]	; 26564 <verify_parse@@Base+0x2a8>
   2646c:	add	r1, pc, r1
   26470:	ldr	r0, [pc, #240]	; 26568 <verify_parse@@Base+0x2ac>
   26474:	add	r0, pc, r0
   26478:	bl	126ac <__assert_fail@plt>
   2647c:	ldr	r0, [fp, #-16]
   26480:	bl	130e4 <_start@@Base+0xa2c>
   26484:	mov	r3, r0
   26488:	cmp	r3, #5
   2648c:	beq	264b0 <verify_parse@@Base+0x1f4>
   26490:	ldr	r3, [pc, #212]	; 2656c <verify_parse@@Base+0x2b0>
   26494:	add	r3, pc, r3
   26498:	mov	r2, #53	; 0x35
   2649c:	ldr	r1, [pc, #204]	; 26570 <verify_parse@@Base+0x2b4>
   264a0:	add	r1, pc, r1
   264a4:	ldr	r0, [pc, #200]	; 26574 <verify_parse@@Base+0x2b8>
   264a8:	add	r0, pc, r0
   264ac:	bl	126ac <__assert_fail@plt>
   264b0:	ldr	r0, [fp, #-16]
   264b4:	bl	13130 <_start@@Base+0xa78>
   264b8:	mov	r3, r0
   264bc:	cmp	r3, #6
   264c0:	beq	264e4 <verify_parse@@Base+0x228>
   264c4:	ldr	r3, [pc, #172]	; 26578 <verify_parse@@Base+0x2bc>
   264c8:	add	r3, pc, r3
   264cc:	mov	r2, #54	; 0x36
   264d0:	ldr	r1, [pc, #164]	; 2657c <verify_parse@@Base+0x2c0>
   264d4:	add	r1, pc, r1
   264d8:	ldr	r0, [pc, #160]	; 26580 <verify_parse@@Base+0x2c4>
   264dc:	add	r0, pc, r0
   264e0:	bl	126ac <__assert_fail@plt>
   264e4:	mov	r3, #0
   264e8:	mov	r0, r3
   264ec:	sub	sp, fp, #4
   264f0:	ldr	fp, [sp]
   264f4:	add	sp, sp, #4
   264f8:	pop	{pc}		; (ldr pc, [sp], #4)
   264fc:	nop	{0}
   26500:	andeq	r0, r0, r0
   26504:	andmi	r0, r8, r0
   26508:	svccc	0x00800000
   2650c:	andmi	r0, r0, r0
   26510:	submi	r0, r0, r0
   26514:			; <UNDEFINED> instruction: 0x00010abc
   26518:	andeq	r0, r1, r0, lsl #25
   2651c:	andeq	r0, r1, ip, lsl #22
   26520:	andeq	r0, r1, r0, ror fp
   26524:	andeq	r0, r1, r4, asr #24
   26528:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   2652c:	andeq	r0, r1, r4, lsr fp
   26530:	andeq	r0, r1, r8, lsl #24
   26534:	muleq	r1, r4, sl
   26538:	strdeq	r0, [r1], -r8
   2653c:	andeq	r0, r1, ip, asr #23
   26540:	andeq	r0, r1, r8, asr sl
   26544:			; <UNDEFINED> instruction: 0x00010abc
   26548:	muleq	r1, r0, fp
   2654c:	andeq	r0, r1, ip, lsl sl
   26550:	andeq	r0, r1, r0, lsl #21
   26554:	andeq	r0, r1, ip, asr fp
   26558:	andeq	r0, r1, r8, ror #19
   2655c:	andeq	r0, r1, ip, asr #20
   26560:	andeq	r0, r1, r4, lsr #22
   26564:			; <UNDEFINED> instruction: 0x000109b0
   26568:	andeq	r0, r1, r4, lsl sl
   2656c:	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   26570:	andeq	r0, r1, ip, ror r9
   26574:	andeq	r0, r1, r0, ror #19
   26578:			; <UNDEFINED> instruction: 0x00010abc
   2657c:	andeq	r0, r1, r8, asr #18
   26580:	andeq	r0, r1, ip, lsr #19

00026584 <test_parse@@Base>:
   26584:	strd	r4, [sp, #-24]!	; 0xffffffe8
   26588:	strd	r6, [sp, #8]
   2658c:	str	fp, [sp, #16]
   26590:	str	lr, [sp, #20]
   26594:	add	fp, sp, #20
   26598:	sub	sp, sp, #312	; 0x138
   2659c:	ldr	r4, [pc, #544]	; 267c4 <test_parse@@Base+0x240>
   265a0:	add	r4, pc, r4
   265a4:	mov	r3, #0
   265a8:	str	r3, [fp, #-24]	; 0xffffffe8
   265ac:	sub	r3, fp, #324	; 0x144
   265b0:	str	r3, [fp, #-32]	; 0xffffffe0
   265b4:	mvn	r3, #0
   265b8:	str	r3, [fp, #-28]	; 0xffffffe4
   265bc:	mov	r3, #0
   265c0:	str	r3, [fp, #-36]	; 0xffffffdc
   265c4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   265c8:	bl	276bc <flatcc_builder_init@@Base>
   265cc:	ldr	r3, [pc, #500]	; 267c8 <test_parse@@Base+0x244>
   265d0:	ldr	r3, [r4, r3]
   265d4:	ldr	r3, [r3]
   265d8:	sub	r2, fp, #44	; 0x2c
   265dc:	mov	r1, #10240	; 0x2800
   265e0:	mov	r0, r3
   265e4:	bl	260e4 <_start@@Base+0x13a2c>
   265e8:	str	r0, [fp, #-40]	; 0xffffffd8
   265ec:	ldr	r3, [fp, #-40]	; 0xffffffd8
   265f0:	cmp	r3, #0
   265f4:	bne	2662c <test_parse@@Base+0xa8>
   265f8:	ldr	r3, [pc, #460]	; 267cc <test_parse@@Base+0x248>
   265fc:	ldr	r3, [r4, r3]
   26600:	ldr	r0, [r3]
   26604:	ldr	r3, [pc, #444]	; 267c8 <test_parse@@Base+0x244>
   26608:	ldr	r3, [r4, r3]
   2660c:	ldr	r3, [r3]
   26610:	mov	r2, r3
   26614:	ldr	r3, [pc, #436]	; 267d0 <test_parse@@Base+0x24c>
   26618:	add	r3, pc, r3
   2661c:	mov	r1, r3
   26620:	bl	12634 <fprintf@plt>
   26624:	mvn	r3, #0
   26628:	b	267a8 <test_parse@@Base+0x224>
   2662c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   26630:	sub	r1, fp, #92	; 0x5c
   26634:	ldr	r3, [fp, #-36]	; 0xffffffdc
   26638:	str	r3, [sp]
   2663c:	mov	r3, r2
   26640:	ldr	r2, [fp, #-40]	; 0xffffffd8
   26644:	ldr	r0, [fp, #-32]	; 0xffffffe0
   26648:	bl	25c70 <_start@@Base+0x135b8>
   2664c:	mov	r3, r0
   26650:	cmp	r3, #0
   26654:	bne	26744 <test_parse@@Base+0x1c0>
   26658:	ldr	r3, [pc, #364]	; 267cc <test_parse@@Base+0x248>
   2665c:	ldr	r3, [r4, r3]
   26660:	ldr	r0, [r3]
   26664:	ldr	r3, [pc, #348]	; 267c8 <test_parse@@Base+0x244>
   26668:	ldr	r3, [r4, r3]
   2666c:	ldr	r2, [r3]
   26670:	ldr	r3, [fp, #-76]	; 0xffffffb4
   26674:	ldr	r1, [pc, #344]	; 267d4 <test_parse@@Base+0x250>
   26678:	add	r1, pc, r1
   2667c:	bl	12634 <fprintf@plt>
   26680:	sub	r3, fp, #48	; 0x30
   26684:	mov	r1, r3
   26688:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2668c:	bl	2cd50 <flatcc_builder_finalize_aligned_buffer@@Base>
   26690:	str	r0, [fp, #-24]	; 0xffffffe8
   26694:	ldr	r2, [fp, #-48]	; 0xffffffd0
   26698:	ldr	r3, [pc, #312]	; 267d8 <test_parse@@Base+0x254>
   2669c:	ldr	r3, [r4, r3]
   266a0:	ldr	r3, [r3]
   266a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   266a8:	ldr	r0, [pc, #300]	; 267dc <test_parse@@Base+0x258>
   266ac:	add	r0, pc, r0
   266b0:	bl	25d84 <_start@@Base+0x136cc>
   266b4:	ldr	r3, [pc, #272]	; 267cc <test_parse@@Base+0x248>
   266b8:	ldr	r3, [r4, r3]
   266bc:	ldr	r0, [r3]
   266c0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   266c4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   266c8:	ldr	r1, [pc, #272]	; 267e0 <test_parse@@Base+0x25c>
   266cc:	add	r1, pc, r1
   266d0:	bl	12634 <fprintf@plt>
   266d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   266d8:	bl	262bc <verify_parse@@Base>
   266dc:	ldr	r2, [fp, #-48]	; 0xffffffd0
   266e0:	ldr	r3, [pc, #240]	; 267d8 <test_parse@@Base+0x254>
   266e4:	ldr	r3, [r4, r3]
   266e8:	ldr	r3, [r3]
   266ec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   266f0:	ldr	r0, [pc, #236]	; 267e4 <test_parse@@Base+0x260>
   266f4:	add	r0, pc, r0
   266f8:	bl	25f9c <_start@@Base+0x138e4>
   266fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   26700:	bl	2795c <flatcc_builder_reset@@Base>
   26704:	mov	r3, #0
   26708:	str	r3, [fp, #-28]	; 0xffffffe4
   2670c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26710:	cmp	r3, #0
   26714:	beq	26720 <test_parse@@Base+0x19c>
   26718:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2671c:	bl	2ce8c <flatcc_builder_aligned_free@@Base>
   26720:	ldr	r3, [fp, #-40]	; 0xffffffd8
   26724:	cmp	r3, #0
   26728:	beq	26734 <test_parse@@Base+0x1b0>
   2672c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   26730:	bl	12598 <free@plt>
   26734:	ldr	r0, [fp, #-32]	; 0xffffffe0
   26738:	bl	27998 <flatcc_builder_clear@@Base>
   2673c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   26740:	b	267a8 <test_parse@@Base+0x224>
   26744:	nop	{0}
   26748:	ldr	r3, [pc, #124]	; 267cc <test_parse@@Base+0x248>
   2674c:	ldr	r3, [r4, r3]
   26750:	ldr	r5, [r3]
   26754:	ldr	r3, [pc, #108]	; 267c8 <test_parse@@Base+0x244>
   26758:	ldr	r3, [r4, r3]
   2675c:	ldr	r6, [r3]
   26760:	ldr	r7, [fp, #-76]	; 0xffffffb4
   26764:	ldr	r2, [fp, #-56]	; 0xffffffc8
   26768:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2676c:	sub	r3, r2, r3
   26770:	add	r4, r3, #1
   26774:	ldr	r3, [fp, #-68]	; 0xffffffbc
   26778:	mov	r0, r3
   2677c:	bl	32f60 <flatcc_json_parser_error_string@@Base>
   26780:	mov	r3, r0
   26784:	str	r3, [sp, #4]
   26788:	str	r4, [sp]
   2678c:	mov	r3, r7
   26790:	mov	r2, r6
   26794:	ldr	r1, [pc, #76]	; 267e8 <test_parse@@Base+0x264>
   26798:	add	r1, pc, r1
   2679c:	mov	r0, r5
   267a0:	bl	12634 <fprintf@plt>
   267a4:	b	2670c <test_parse@@Base+0x188>
   267a8:	mov	r0, r3
   267ac:	sub	sp, fp, #20
   267b0:	ldrd	r4, [sp]
   267b4:	ldrd	r6, [sp, #8]
   267b8:	ldr	fp, [sp, #16]
   267bc:	add	sp, sp, #20
   267c0:	pop	{pc}		; (ldr pc, [sp], #4)
   267c4:	andeq	r2, r2, r8, asr sl
   267c8:	andeq	r0, r0, ip, ror r0
   267cc:	andeq	r0, r0, r4, ror r0
   267d0:	andeq	r0, r1, r4, ror r8
   267d4:	andeq	r0, r1, r8, lsr r8
   267d8:	andeq	r0, r0, r4, lsl #1
   267dc:	andeq	r0, r1, r8, lsr #16
   267e0:	andeq	r0, r1, r8, lsr #16
   267e4:	andeq	r0, r1, r4, lsr #16
   267e8:	andeq	r0, r1, r8, lsl #15

000267ec <main@@Base>:
   267ec:	str	r4, [sp, #-12]!
   267f0:	str	fp, [sp, #4]
   267f4:	str	lr, [sp, #8]
   267f8:	add	fp, sp, #8
   267fc:	sub	sp, sp, #12
   26800:	str	r0, [fp, #-16]
   26804:	str	r1, [fp, #-20]	; 0xffffffec
   26808:	ldr	r4, [pc, #160]	; 268b0 <main@@Base+0xc4>
   2680c:	add	r4, pc, r4
   26810:	ldr	r3, [pc, #156]	; 268b4 <main@@Base+0xc8>
   26814:	ldr	r3, [r4, r3]
   26818:	ldr	r3, [r3]
   2681c:	mov	r2, #16
   26820:	mov	r1, #1
   26824:	ldr	r0, [pc, #140]	; 268b8 <main@@Base+0xcc>
   26828:	add	r0, pc, r0
   2682c:	bl	125e0 <fwrite@plt>
   26830:	ldr	r3, [fp, #-16]
   26834:	cmp	r3, #1
   26838:	beq	26870 <main@@Base+0x84>
   2683c:	ldr	r3, [fp, #-16]
   26840:	cmp	r3, #2
   26844:	beq	26870 <main@@Base+0x84>
   26848:	ldr	r3, [pc, #100]	; 268b4 <main@@Base+0xc8>
   2684c:	ldr	r3, [r4, r3]
   26850:	ldr	r3, [r3]
   26854:	mov	r2, #63	; 0x3f
   26858:	mov	r1, #1
   2685c:	ldr	r0, [pc, #88]	; 268bc <main@@Base+0xd0>
   26860:	add	r0, pc, r0
   26864:	bl	125e0 <fwrite@plt>
   26868:	mov	r0, #1
   2686c:	bl	1261c <exit@plt>
   26870:	ldr	r3, [fp, #-16]
   26874:	cmp	r3, #2
   26878:	bne	26890 <main@@Base+0xa4>
   2687c:	ldr	r3, [fp, #-20]	; 0xffffffec
   26880:	ldr	r2, [r3, #4]
   26884:	ldr	r3, [pc, #52]	; 268c0 <main@@Base+0xd4>
   26888:	ldr	r3, [r4, r3]
   2688c:	str	r2, [r3]
   26890:	bl	26584 <test_parse@@Base>
   26894:	mov	r3, r0
   26898:	mov	r0, r3
   2689c:	sub	sp, fp, #8
   268a0:	ldr	r4, [sp]
   268a4:	ldr	fp, [sp, #4]
   268a8:	add	sp, sp, #8
   268ac:	pop	{pc}		; (ldr pc, [sp], #4)
   268b0:	andeq	r2, r2, ip, ror #15
   268b4:	andeq	r0, r0, r4, ror r0
   268b8:	andeq	r0, r1, r8, lsl #14
   268bc:	andeq	r0, r1, r4, ror #13
   268c0:	andeq	r0, r0, ip, ror r0
   268c4:	str	fp, [sp, #-8]!
   268c8:	str	lr, [sp, #4]
   268cc:	add	fp, sp, #4
   268d0:	sub	sp, sp, #16
   268d4:	str	r0, [fp, #-16]
   268d8:	str	r1, [fp, #-20]	; 0xffffffec
   268dc:	mov	r3, #0
   268e0:	str	r3, [fp, #-12]
   268e4:	ldr	r3, [fp, #-16]
   268e8:	cmp	r3, #3
   268ec:	bhi	268f8 <main@@Base+0x10c>
   268f0:	mov	r3, #4
   268f4:	str	r3, [fp, #-16]
   268f8:	sub	r3, fp, #12
   268fc:	ldr	r2, [fp, #-20]	; 0xffffffec
   26900:	ldr	r1, [fp, #-16]
   26904:	mov	r0, r3
   26908:	bl	12640 <posix_memalign@plt>
   2690c:	str	r0, [fp, #-8]
   26910:	ldr	r3, [fp, #-8]
   26914:	cmp	r3, #0
   26918:	beq	2693c <main@@Base+0x150>
   2691c:	ldr	r3, [fp, #-12]
   26920:	cmp	r3, #0
   26924:	beq	2693c <main@@Base+0x150>
   26928:	ldr	r3, [fp, #-12]
   2692c:	mov	r0, r3
   26930:	bl	12598 <free@plt>
   26934:	mov	r3, #0
   26938:	str	r3, [fp, #-12]
   2693c:	ldr	r3, [fp, #-12]
   26940:	mov	r0, r3
   26944:	sub	sp, fp, #4
   26948:	ldr	fp, [sp]
   2694c:	add	sp, sp, #4
   26950:	pop	{pc}		; (ldr pc, [sp], #4)
   26954:	push	{fp}		; (str fp, [sp, #-4]!)
   26958:	add	fp, sp, #0
   2695c:	sub	sp, sp, #12
   26960:	str	r0, [fp, #-8]
   26964:	ldr	r3, [fp, #-8]
   26968:	mov	r0, r3
   2696c:	add	sp, fp, #0
   26970:	pop	{fp}		; (ldr fp, [sp], #4)
   26974:	bx	lr
   26978:	push	{fp}		; (str fp, [sp, #-4]!)
   2697c:	add	fp, sp, #0
   26980:	sub	sp, sp, #12
   26984:	mov	r3, r0
   26988:	strb	r3, [fp, #-5]
   2698c:	ldrb	r3, [fp, #-5]
   26990:	mov	r0, r3
   26994:	add	sp, fp, #0
   26998:	pop	{fp}		; (ldr fp, [sp], #4)
   2699c:	bx	lr
   269a0:	push	{fp}		; (str fp, [sp, #-4]!)
   269a4:	add	fp, sp, #0
   269a8:	sub	sp, sp, #12
   269ac:	str	r0, [fp, #-8]
   269b0:	ldr	r3, [fp, #-8]
   269b4:	mov	r0, r3
   269b8:	add	sp, fp, #0
   269bc:	pop	{fp}		; (ldr fp, [sp], #4)
   269c0:	bx	lr
   269c4:	push	{fp}		; (str fp, [sp, #-4]!)
   269c8:	add	fp, sp, #0
   269cc:	sub	sp, sp, #12
   269d0:	str	r0, [fp, #-8]
   269d4:	str	r1, [fp, #-12]
   269d8:	ldr	r3, [fp, #-8]
   269dc:	ldr	r2, [r3]
   269e0:	ldr	r3, [fp, #-8]
   269e4:	ldr	r3, [r3, #4]
   269e8:	cmp	r2, r3
   269ec:	bne	26a18 <main@@Base+0x22c>
   269f0:	ldr	r3, [fp, #-12]
   269f4:	cmp	r3, #0
   269f8:	beq	26a0c <main@@Base+0x220>
   269fc:	ldr	r3, [fp, #-8]
   26a00:	ldr	r2, [r3, #24]
   26a04:	ldr	r3, [fp, #-12]
   26a08:	str	r2, [r3]
   26a0c:	ldr	r3, [fp, #-8]
   26a10:	ldr	r3, [r3, #8]
   26a14:	b	26a34 <main@@Base+0x248>
   26a18:	ldr	r3, [fp, #-12]
   26a1c:	cmp	r3, #0
   26a20:	beq	26a30 <main@@Base+0x244>
   26a24:	ldr	r3, [fp, #-12]
   26a28:	mov	r2, #0
   26a2c:	str	r2, [r3]
   26a30:	mov	r3, #0
   26a34:	mov	r0, r3
   26a38:	add	sp, fp, #0
   26a3c:	pop	{fp}		; (ldr fp, [sp], #4)
   26a40:	bx	lr
   26a44:	str	fp, [sp, #-8]!
   26a48:	str	lr, [sp, #4]
   26a4c:	add	fp, sp, #4
   26a50:	sub	sp, sp, #16
   26a54:	str	r0, [fp, #-16]
   26a58:	str	r1, [fp, #-20]	; 0xffffffec
   26a5c:	ldr	r2, [fp, #-20]	; 0xffffffec
   26a60:	mov	r1, #0
   26a64:	ldr	r0, [fp, #-16]
   26a68:	bl	12670 <memchr@plt>
   26a6c:	str	r0, [fp, #-8]
   26a70:	ldr	r3, [fp, #-8]
   26a74:	cmp	r3, #0
   26a78:	beq	26a8c <main@@Base+0x2a0>
   26a7c:	ldr	r2, [fp, #-8]
   26a80:	ldr	r3, [fp, #-16]
   26a84:	sub	r3, r2, r3
   26a88:	b	26a90 <main@@Base+0x2a4>
   26a8c:	ldr	r3, [fp, #-20]	; 0xffffffec
   26a90:	mov	r0, r3
   26a94:	sub	sp, fp, #4
   26a98:	ldr	fp, [sp]
   26a9c:	add	sp, sp, #4
   26aa0:	pop	{pc}		; (ldr pc, [sp], #4)

00026aa4 <flatcc_builder_default_alloc@@Base>:
   26aa4:	str	fp, [sp, #-8]!
   26aa8:	str	lr, [sp, #4]
   26aac:	add	fp, sp, #4
   26ab0:	sub	sp, sp, #24
   26ab4:	str	r0, [fp, #-16]
   26ab8:	str	r1, [fp, #-20]	; 0xffffffec
   26abc:	str	r2, [fp, #-24]	; 0xffffffe8
   26ac0:	str	r3, [fp, #-28]	; 0xffffffe4
   26ac4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26ac8:	cmp	r3, #0
   26acc:	bne	26b10 <flatcc_builder_default_alloc@@Base+0x6c>
   26ad0:	ldr	r3, [fp, #-20]	; 0xffffffec
   26ad4:	ldr	r3, [r3]
   26ad8:	cmp	r3, #0
   26adc:	beq	26b08 <flatcc_builder_default_alloc@@Base+0x64>
   26ae0:	ldr	r3, [fp, #-20]	; 0xffffffec
   26ae4:	ldr	r3, [r3]
   26ae8:	mov	r0, r3
   26aec:	bl	12598 <free@plt>
   26af0:	ldr	r3, [fp, #-20]	; 0xffffffec
   26af4:	mov	r2, #0
   26af8:	str	r2, [r3]
   26afc:	ldr	r3, [fp, #-20]	; 0xffffffec
   26b00:	mov	r2, #0
   26b04:	str	r2, [r3, #4]
   26b08:	mov	r3, #0
   26b0c:	b	26c64 <flatcc_builder_default_alloc@@Base+0x1c0>
   26b10:	ldr	r3, [fp, #4]
   26b14:	sub	r3, r3, #1
   26b18:	cmp	r3, #6
   26b1c:	addls	pc, pc, r3, lsl #2
   26b20:	b	26b70 <flatcc_builder_default_alloc@@Base+0xcc>
   26b24:	b	26b40 <flatcc_builder_default_alloc@@Base+0x9c>
   26b28:	b	26b70 <flatcc_builder_default_alloc@@Base+0xcc>
   26b2c:	b	26b70 <flatcc_builder_default_alloc@@Base+0xcc>
   26b30:	b	26b58 <flatcc_builder_default_alloc@@Base+0xb4>
   26b34:	b	26b4c <flatcc_builder_default_alloc@@Base+0xa8>
   26b38:	b	26b70 <flatcc_builder_default_alloc@@Base+0xcc>
   26b3c:	b	26b64 <flatcc_builder_default_alloc@@Base+0xc0>
   26b40:	mov	r3, #256	; 0x100
   26b44:	str	r3, [fp, #-8]
   26b48:	b	26b7c <flatcc_builder_default_alloc@@Base+0xd8>
   26b4c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26b50:	str	r3, [fp, #-8]
   26b54:	b	26b7c <flatcc_builder_default_alloc@@Base+0xd8>
   26b58:	mov	r3, #288	; 0x120
   26b5c:	str	r3, [fp, #-8]
   26b60:	b	26b7c <flatcc_builder_default_alloc@@Base+0xd8>
   26b64:	mov	r3, #64	; 0x40
   26b68:	str	r3, [fp, #-8]
   26b6c:	b	26b7c <flatcc_builder_default_alloc@@Base+0xd8>
   26b70:	mov	r3, #32
   26b74:	str	r3, [fp, #-8]
   26b78:	nop	{0}
   26b7c:	b	26b8c <flatcc_builder_default_alloc@@Base+0xe8>
   26b80:	ldr	r3, [fp, #-8]
   26b84:	lsl	r3, r3, #1
   26b88:	str	r3, [fp, #-8]
   26b8c:	ldr	r2, [fp, #-8]
   26b90:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26b94:	cmp	r2, r3
   26b98:	bcc	26b80 <flatcc_builder_default_alloc@@Base+0xdc>
   26b9c:	ldr	r3, [fp, #-20]	; 0xffffffec
   26ba0:	ldr	r3, [r3, #4]
   26ba4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   26ba8:	cmp	r2, r3
   26bac:	bhi	26bd0 <flatcc_builder_default_alloc@@Base+0x12c>
   26bb0:	ldr	r3, [fp, #-20]	; 0xffffffec
   26bb4:	ldr	r3, [r3, #4]
   26bb8:	lsr	r3, r3, #1
   26bbc:	ldr	r2, [fp, #-8]
   26bc0:	cmp	r2, r3
   26bc4:	bhi	26bd0 <flatcc_builder_default_alloc@@Base+0x12c>
   26bc8:	mov	r3, #0
   26bcc:	b	26c64 <flatcc_builder_default_alloc@@Base+0x1c0>
   26bd0:	ldr	r3, [fp, #-20]	; 0xffffffec
   26bd4:	ldr	r3, [r3]
   26bd8:	ldr	r1, [fp, #-8]
   26bdc:	mov	r0, r3
   26be0:	bl	125d4 <realloc@plt>
   26be4:	str	r0, [fp, #-12]
   26be8:	ldr	r3, [fp, #-12]
   26bec:	cmp	r3, #0
   26bf0:	bne	26bfc <flatcc_builder_default_alloc@@Base+0x158>
   26bf4:	mvn	r3, #0
   26bf8:	b	26c64 <flatcc_builder_default_alloc@@Base+0x1c0>
   26bfc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   26c00:	cmp	r3, #0
   26c04:	beq	26c48 <flatcc_builder_default_alloc@@Base+0x1a4>
   26c08:	ldr	r3, [fp, #-20]	; 0xffffffec
   26c0c:	ldr	r3, [r3, #4]
   26c10:	ldr	r2, [fp, #-8]
   26c14:	cmp	r2, r3
   26c18:	bls	26c48 <flatcc_builder_default_alloc@@Base+0x1a4>
   26c1c:	ldr	r3, [fp, #-20]	; 0xffffffec
   26c20:	ldr	r3, [r3, #4]
   26c24:	ldr	r2, [fp, #-12]
   26c28:	add	r0, r2, r3
   26c2c:	ldr	r3, [fp, #-20]	; 0xffffffec
   26c30:	ldr	r3, [r3, #4]
   26c34:	ldr	r2, [fp, #-8]
   26c38:	sub	r3, r2, r3
   26c3c:	mov	r2, r3
   26c40:	mov	r1, #0
   26c44:	bl	1264c <memset@plt>
   26c48:	ldr	r3, [fp, #-20]	; 0xffffffec
   26c4c:	ldr	r2, [fp, #-12]
   26c50:	str	r2, [r3]
   26c54:	ldr	r3, [fp, #-20]	; 0xffffffec
   26c58:	ldr	r2, [fp, #-8]
   26c5c:	str	r2, [r3, #4]
   26c60:	mov	r3, #0
   26c64:	mov	r0, r3
   26c68:	sub	sp, fp, #4
   26c6c:	ldr	fp, [sp]
   26c70:	add	sp, sp, #4
   26c74:	pop	{pc}		; (ldr pc, [sp], #4)
   26c78:	push	{fp}		; (str fp, [sp, #-4]!)
   26c7c:	add	fp, sp, #0
   26c80:	sub	sp, sp, #20
   26c84:	str	r0, [fp, #-16]
   26c88:	str	r1, [fp, #-20]	; 0xffffffec
   26c8c:	ldr	r3, [fp, #-16]
   26c90:	add	r3, r3, #52	; 0x34
   26c94:	add	r3, r3, #8
   26c98:	str	r3, [fp, #-8]
   26c9c:	ldr	r3, [fp, #-16]
   26ca0:	ldr	r2, [r3, #60]	; 0x3c
   26ca4:	ldr	r3, [fp, #-16]
   26ca8:	ldr	r3, [r3, #28]
   26cac:	add	r2, r2, r3
   26cb0:	ldr	r3, [fp, #-16]
   26cb4:	str	r2, [r3, #16]
   26cb8:	ldr	r3, [fp, #-8]
   26cbc:	ldr	r2, [r3, #4]
   26cc0:	ldr	r3, [fp, #-16]
   26cc4:	ldr	r3, [r3, #28]
   26cc8:	sub	r2, r2, r3
   26ccc:	ldr	r3, [fp, #-16]
   26cd0:	str	r2, [r3, #24]
   26cd4:	ldr	r3, [fp, #-16]
   26cd8:	ldr	r3, [r3, #24]
   26cdc:	ldr	r2, [fp, #-20]	; 0xffffffec
   26ce0:	cmp	r2, r3
   26ce4:	bcs	26cf4 <flatcc_builder_default_alloc@@Base+0x250>
   26ce8:	ldr	r3, [fp, #-16]
   26cec:	ldr	r2, [fp, #-20]	; 0xffffffec
   26cf0:	str	r2, [r3, #24]
   26cf4:	ldr	r3, [fp, #-16]
   26cf8:	ldr	r3, [r3, #32]
   26cfc:	ldr	r2, [fp, #-20]	; 0xffffffec
   26d00:	str	r2, [r3, #4]
   26d04:	nop	{0}
   26d08:	add	sp, fp, #0
   26d0c:	pop	{fp}		; (ldr fp, [sp], #4)
   26d10:	bx	lr
   26d14:	str	r4, [sp, #-12]!
   26d18:	str	fp, [sp, #4]
   26d1c:	str	lr, [sp, #8]
   26d20:	add	fp, sp, #8
   26d24:	sub	sp, sp, #36	; 0x24
   26d28:	str	r0, [fp, #-24]	; 0xffffffe8
   26d2c:	str	r1, [fp, #-28]	; 0xffffffe4
   26d30:	str	r2, [fp, #-32]	; 0xffffffe0
   26d34:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26d38:	add	r3, r3, #52	; 0x34
   26d3c:	add	r3, r3, #8
   26d40:	str	r3, [fp, #-16]
   26d44:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26d48:	ldr	r4, [r3, #48]	; 0x30
   26d4c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26d50:	ldr	r0, [r3, #40]	; 0x28
   26d54:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26d58:	ldr	r2, [r3, #28]
   26d5c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   26d60:	add	r2, r2, r3
   26d64:	mov	r3, #1
   26d68:	str	r3, [sp]
   26d6c:	mov	r3, #1
   26d70:	ldr	r1, [fp, #-16]
   26d74:	blx	r4
   26d78:	mov	r3, r0
   26d7c:	cmp	r3, #0
   26d80:	beq	26d8c <flatcc_builder_default_alloc@@Base+0x2e8>
   26d84:	mvn	r3, #0
   26d88:	b	26d9c <flatcc_builder_default_alloc@@Base+0x2f8>
   26d8c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   26d90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   26d94:	bl	26c78 <flatcc_builder_default_alloc@@Base+0x1d4>
   26d98:	mov	r3, #0
   26d9c:	mov	r0, r3
   26da0:	sub	sp, fp, #8
   26da4:	ldr	r4, [sp]
   26da8:	ldr	fp, [sp, #4]
   26dac:	add	sp, sp, #8
   26db0:	pop	{pc}		; (ldr pc, [sp], #4)
   26db4:	str	fp, [sp, #-8]!
   26db8:	str	lr, [sp, #4]
   26dbc:	add	fp, sp, #4
   26dc0:	sub	sp, sp, #16
   26dc4:	str	r0, [fp, #-16]
   26dc8:	str	r1, [fp, #-20]	; 0xffffffec
   26dcc:	ldr	r3, [fp, #-16]
   26dd0:	ldr	r3, [r3, #20]
   26dd4:	str	r3, [fp, #-8]
   26dd8:	ldr	r3, [fp, #-16]
   26ddc:	ldr	r2, [r3, #20]
   26de0:	ldr	r3, [fp, #-20]	; 0xffffffec
   26de4:	add	r2, r2, r3
   26de8:	ldr	r3, [fp, #-16]
   26dec:	str	r2, [r3, #20]
   26df0:	ldr	r3, [fp, #-16]
   26df4:	ldr	r2, [r3, #20]
   26df8:	ldr	r3, [fp, #-16]
   26dfc:	ldr	r3, [r3, #24]
   26e00:	cmp	r2, r3
   26e04:	bcc	26e38 <flatcc_builder_default_alloc@@Base+0x394>
   26e08:	ldr	r3, [fp, #-16]
   26e0c:	ldr	r3, [r3, #20]
   26e10:	add	r3, r3, #1
   26e14:	mvn	r2, #3
   26e18:	mov	r1, r3
   26e1c:	ldr	r0, [fp, #-16]
   26e20:	bl	26d14 <flatcc_builder_default_alloc@@Base+0x270>
   26e24:	mov	r3, r0
   26e28:	cmp	r3, #0
   26e2c:	beq	26e38 <flatcc_builder_default_alloc@@Base+0x394>
   26e30:	mov	r3, #0
   26e34:	b	26e48 <flatcc_builder_default_alloc@@Base+0x3a4>
   26e38:	ldr	r3, [fp, #-16]
   26e3c:	ldr	r2, [r3, #16]
   26e40:	ldr	r3, [fp, #-8]
   26e44:	add	r3, r2, r3
   26e48:	mov	r0, r3
   26e4c:	sub	sp, fp, #4
   26e50:	ldr	fp, [sp]
   26e54:	add	sp, sp, #4
   26e58:	pop	{pc}		; (ldr pc, [sp], #4)
   26e5c:	str	fp, [sp, #-8]!
   26e60:	str	lr, [sp, #4]
   26e64:	add	fp, sp, #4
   26e68:	sub	sp, sp, #8
   26e6c:	str	r0, [fp, #-8]
   26e70:	str	r1, [fp, #-12]
   26e74:	ldr	r3, [fp, #-8]
   26e78:	ldr	r2, [r3, #20]
   26e7c:	ldr	r3, [fp, #-12]
   26e80:	sub	r2, r2, r3
   26e84:	ldr	r3, [fp, #-8]
   26e88:	str	r2, [r3, #20]
   26e8c:	ldr	r3, [fp, #-8]
   26e90:	ldr	r2, [r3, #16]
   26e94:	ldr	r3, [fp, #-8]
   26e98:	ldr	r3, [r3, #20]
   26e9c:	add	r3, r2, r3
   26ea0:	ldr	r2, [fp, #-12]
   26ea4:	mov	r1, #0
   26ea8:	mov	r0, r3
   26eac:	bl	1264c <memset@plt>
   26eb0:	nop	{0}
   26eb4:	sub	sp, fp, #4
   26eb8:	ldr	fp, [sp]
   26ebc:	add	sp, sp, #4
   26ec0:	pop	{pc}		; (ldr pc, [sp], #4)
   26ec4:	str	fp, [sp, #-8]!
   26ec8:	str	lr, [sp, #4]
   26ecc:	add	fp, sp, #4
   26ed0:	sub	sp, sp, #24
   26ed4:	str	r0, [fp, #-16]
   26ed8:	str	r1, [fp, #-20]	; 0xffffffec
   26edc:	str	r2, [fp, #-24]	; 0xffffffe8
   26ee0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   26ee4:	ldr	r0, [fp, #-16]
   26ee8:	bl	26db4 <flatcc_builder_default_alloc@@Base+0x310>
   26eec:	str	r0, [fp, #-8]
   26ef0:	ldr	r3, [fp, #-8]
   26ef4:	cmp	r3, #0
   26ef8:	bne	26f04 <flatcc_builder_default_alloc@@Base+0x460>
   26efc:	mov	r3, #0
   26f00:	b	26f18 <flatcc_builder_default_alloc@@Base+0x474>
   26f04:	ldr	r2, [fp, #-24]	; 0xffffffe8
   26f08:	ldr	r1, [fp, #-20]	; 0xffffffec
   26f0c:	ldr	r0, [fp, #-8]
   26f10:	bl	125a4 <memcpy@plt>
   26f14:	ldr	r3, [fp, #-8]
   26f18:	mov	r0, r3
   26f1c:	sub	sp, fp, #4
   26f20:	ldr	fp, [sp]
   26f24:	add	sp, sp, #4
   26f28:	pop	{pc}		; (ldr pc, [sp], #4)
   26f2c:	str	fp, [sp, #-8]!
   26f30:	str	lr, [sp, #4]
   26f34:	add	fp, sp, #4
   26f38:	sub	sp, sp, #24
   26f3c:	str	r0, [fp, #-16]
   26f40:	str	r1, [fp, #-20]	; 0xffffffec
   26f44:	mov	r1, r2
   26f48:	mov	r2, r3
   26f4c:	mov	r3, r1
   26f50:	strh	r3, [fp, #-22]	; 0xffffffea
   26f54:	mov	r3, r2
   26f58:	strh	r3, [fp, #-24]	; 0xffffffe8
   26f5c:	ldr	r3, [fp, #-16]
   26f60:	ldr	r2, [r3, #20]
   26f64:	ldrh	r3, [fp, #-22]	; 0xffffffea
   26f68:	add	r3, r2, r3
   26f6c:	sub	r3, r3, #1
   26f70:	ldrh	r2, [fp, #-22]	; 0xffffffea
   26f74:	rsb	r2, r2, #0
   26f78:	and	r3, r3, r2
   26f7c:	str	r3, [fp, #-8]
   26f80:	ldr	r2, [fp, #-8]
   26f84:	ldr	r3, [fp, #-20]	; 0xffffffec
   26f88:	add	r2, r2, r3
   26f8c:	ldr	r3, [fp, #-16]
   26f90:	str	r2, [r3, #20]
   26f94:	ldr	r3, [fp, #-16]
   26f98:	ldr	r2, [r3, #20]
   26f9c:	ldr	r3, [fp, #-16]
   26fa0:	ldr	r3, [r3, #24]
   26fa4:	cmp	r2, r3
   26fa8:	bcc	26fdc <flatcc_builder_default_alloc@@Base+0x538>
   26fac:	ldr	r3, [fp, #-16]
   26fb0:	ldr	r3, [r3, #20]
   26fb4:	add	r3, r3, #1
   26fb8:	movw	r2, #65532	; 0xfffc
   26fbc:	mov	r1, r3
   26fc0:	ldr	r0, [fp, #-16]
   26fc4:	bl	26d14 <flatcc_builder_default_alloc@@Base+0x270>
   26fc8:	mov	r3, r0
   26fcc:	cmp	r3, #0
   26fd0:	beq	26fdc <flatcc_builder_default_alloc@@Base+0x538>
   26fd4:	mov	r3, #0
   26fd8:	b	2703c <flatcc_builder_default_alloc@@Base+0x598>
   26fdc:	ldr	r3, [fp, #-8]
   26fe0:	uxth	r2, r3
   26fe4:	ldr	r3, [fp, #-16]
   26fe8:	ldr	r1, [r3, #4]
   26fec:	ldrh	r3, [fp, #-24]	; 0xffffffe8
   26ff0:	lsl	r3, r3, #1
   26ff4:	add	r3, r1, r3
   26ff8:	add	r2, r2, #4
   26ffc:	uxth	r2, r2
   27000:	strh	r2, [r3]
   27004:	ldr	r3, [fp, #-16]
   27008:	ldrh	r3, [r3, #8]
   2700c:	ldrh	r2, [fp, #-24]	; 0xffffffe8
   27010:	cmp	r2, r3
   27014:	bcc	2702c <flatcc_builder_default_alloc@@Base+0x588>
   27018:	ldrh	r3, [fp, #-24]	; 0xffffffe8
   2701c:	add	r3, r3, #1
   27020:	uxth	r2, r3
   27024:	ldr	r3, [fp, #-16]
   27028:	strh	r2, [r3, #8]
   2702c:	ldr	r3, [fp, #-16]
   27030:	ldr	r2, [r3, #16]
   27034:	ldr	r3, [fp, #-8]
   27038:	add	r3, r2, r3
   2703c:	mov	r0, r3
   27040:	sub	sp, fp, #4
   27044:	ldr	fp, [sp]
   27048:	add	sp, sp, #4
   2704c:	pop	{pc}		; (ldr pc, [sp], #4)
   27050:	str	fp, [sp, #-8]!
   27054:	str	lr, [sp, #4]
   27058:	add	fp, sp, #4
   2705c:	sub	sp, sp, #16
   27060:	str	r0, [fp, #-16]
   27064:	mov	r3, r1
   27068:	strh	r3, [fp, #-18]	; 0xffffffee
   2706c:	ldr	r3, [fp, #-16]
   27070:	ldr	r3, [r3, #20]
   27074:	add	r3, r3, #3
   27078:	bic	r3, r3, #3
   2707c:	str	r3, [fp, #-8]
   27080:	ldr	r3, [fp, #-8]
   27084:	add	r2, r3, #4
   27088:	ldr	r3, [fp, #-16]
   2708c:	str	r2, [r3, #20]
   27090:	ldr	r3, [fp, #-16]
   27094:	ldr	r2, [r3, #20]
   27098:	ldr	r3, [fp, #-16]
   2709c:	ldr	r3, [r3, #24]
   270a0:	cmp	r2, r3
   270a4:	bls	270d4 <flatcc_builder_default_alloc@@Base+0x630>
   270a8:	ldr	r3, [fp, #-16]
   270ac:	ldr	r3, [r3, #20]
   270b0:	movw	r2, #65532	; 0xfffc
   270b4:	mov	r1, r3
   270b8:	ldr	r0, [fp, #-16]
   270bc:	bl	26d14 <flatcc_builder_default_alloc@@Base+0x270>
   270c0:	mov	r3, r0
   270c4:	cmp	r3, #0
   270c8:	beq	270d4 <flatcc_builder_default_alloc@@Base+0x630>
   270cc:	mov	r3, #0
   270d0:	b	27154 <flatcc_builder_default_alloc@@Base+0x6b0>
   270d4:	ldr	r3, [fp, #-8]
   270d8:	uxth	r2, r3
   270dc:	ldr	r3, [fp, #-16]
   270e0:	ldr	r1, [r3, #4]
   270e4:	ldrh	r3, [fp, #-18]	; 0xffffffee
   270e8:	lsl	r3, r3, #1
   270ec:	add	r3, r1, r3
   270f0:	add	r2, r2, #4
   270f4:	uxth	r2, r2
   270f8:	strh	r2, [r3]
   270fc:	ldr	r3, [fp, #-16]
   27100:	ldrh	r3, [r3, #8]
   27104:	ldrh	r2, [fp, #-18]	; 0xffffffee
   27108:	cmp	r2, r3
   2710c:	bcc	27124 <flatcc_builder_default_alloc@@Base+0x680>
   27110:	ldrh	r3, [fp, #-18]	; 0xffffffee
   27114:	add	r3, r3, #1
   27118:	uxth	r2, r3
   2711c:	ldr	r3, [fp, #-16]
   27120:	strh	r2, [r3, #8]
   27124:	ldr	r3, [fp, #-16]
   27128:	ldr	r3, [r3]
   2712c:	add	r1, r3, #2
   27130:	ldr	r2, [fp, #-16]
   27134:	str	r1, [r2]
   27138:	ldr	r2, [fp, #-8]
   2713c:	uxth	r2, r2
   27140:	strh	r2, [r3]
   27144:	ldr	r3, [fp, #-16]
   27148:	ldr	r2, [r3, #16]
   2714c:	ldr	r3, [fp, #-8]
   27150:	add	r3, r2, r3
   27154:	mov	r0, r3
   27158:	sub	sp, fp, #4
   2715c:	ldr	fp, [sp]
   27160:	add	sp, sp, #4
   27164:	pop	{pc}		; (ldr pc, [sp], #4)
   27168:	str	r4, [sp, #-12]!
   2716c:	str	fp, [sp, #4]
   27170:	str	lr, [sp, #8]
   27174:	add	fp, sp, #8
   27178:	sub	sp, sp, #36	; 0x24
   2717c:	str	r0, [fp, #-24]	; 0xffffffe8
   27180:	str	r1, [fp, #-28]	; 0xffffffe4
   27184:	str	r2, [fp, #-32]	; 0xffffffe0
   27188:	str	r3, [fp, #-36]	; 0xffffffdc
   2718c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   27190:	add	r2, r3, #52	; 0x34
   27194:	ldr	r3, [fp, #-28]	; 0xffffffe4
   27198:	lsl	r3, r3, #3
   2719c:	add	r3, r2, r3
   271a0:	str	r3, [fp, #-16]
   271a4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   271a8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   271ac:	add	r2, r2, r3
   271b0:	ldr	r3, [fp, #-16]
   271b4:	ldr	r3, [r3, #4]
   271b8:	cmp	r2, r3
   271bc:	bls	2721c <flatcc_builder_default_alloc@@Base+0x778>
   271c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   271c4:	ldr	r4, [r3, #48]	; 0x30
   271c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   271cc:	ldr	r0, [r3, #40]	; 0x28
   271d0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   271d4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   271d8:	add	r2, r2, r3
   271dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   271e0:	str	r3, [sp]
   271e4:	ldr	r3, [fp, #4]
   271e8:	ldr	r1, [fp, #-16]
   271ec:	blx	r4
   271f0:	mov	r3, r0
   271f4:	cmp	r3, #0
   271f8:	beq	2721c <flatcc_builder_default_alloc@@Base+0x778>
   271fc:	ldr	r3, [pc, #68]	; 27248 <flatcc_builder_default_alloc@@Base+0x7a4>
   27200:	add	r3, pc, r3
   27204:	mov	r2, #308	; 0x134
   27208:	ldr	r1, [pc, #60]	; 2724c <flatcc_builder_default_alloc@@Base+0x7a8>
   2720c:	add	r1, pc, r1
   27210:	ldr	r0, [pc, #56]	; 27250 <flatcc_builder_default_alloc@@Base+0x7ac>
   27214:	add	r0, pc, r0
   27218:	bl	126ac <__assert_fail@plt>
   2721c:	ldr	r3, [fp, #-16]
   27220:	ldr	r3, [r3]
   27224:	mov	r2, r3
   27228:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2722c:	add	r3, r2, r3
   27230:	mov	r0, r3
   27234:	sub	sp, fp, #8
   27238:	ldr	r4, [sp]
   2723c:	ldr	fp, [sp, #4]
   27240:	add	sp, sp, #8
   27244:	pop	{pc}		; (ldr pc, [sp], #4)
   27248:	andeq	r0, r1, r8, ror #7
   2724c:	andeq	pc, r0, r8, lsr #31
   27250:	andeq	r0, r1, r0
   27254:	str	fp, [sp, #-8]!
   27258:	str	lr, [sp, #4]
   2725c:	add	fp, sp, #4
   27260:	sub	sp, sp, #24
   27264:	str	r0, [fp, #-16]
   27268:	str	r1, [fp, #-20]	; 0xffffffec
   2726c:	ldr	r3, [fp, #-16]
   27270:	ldr	r3, [r3, #32]
   27274:	ldr	r2, [r3, #16]
   27278:	ldr	r3, [fp, #-16]
   2727c:	ldr	r3, [r3, #32]
   27280:	ldrh	r3, [r3, #28]
   27284:	lsl	r3, r3, #1
   27288:	add	r3, r2, r3
   2728c:	str	r3, [fp, #-8]
   27290:	ldr	r3, [fp, #-20]	; 0xffffffec
   27294:	add	r3, r3, #2
   27298:	lsl	r3, r3, #1
   2729c:	str	r3, [fp, #-12]
   272a0:	mov	r3, #1
   272a4:	str	r3, [sp]
   272a8:	ldr	r3, [fp, #-12]
   272ac:	ldr	r2, [fp, #-8]
   272b0:	mov	r1, #0
   272b4:	ldr	r0, [fp, #-16]
   272b8:	bl	27168 <flatcc_builder_default_alloc@@Base+0x6c4>
   272bc:	mov	r2, r0
   272c0:	ldr	r3, [fp, #-16]
   272c4:	str	r2, [r3, #4]
   272c8:	ldr	r3, [fp, #-16]
   272cc:	ldr	r3, [r3, #4]
   272d0:	cmp	r3, #0
   272d4:	bne	272e0 <flatcc_builder_default_alloc@@Base+0x83c>
   272d8:	mvn	r3, #0
   272dc:	b	27358 <flatcc_builder_default_alloc@@Base+0x8b4>
   272e0:	ldr	r3, [fp, #-16]
   272e4:	ldr	r3, [r3, #4]
   272e8:	add	r2, r3, #4
   272ec:	ldr	r3, [fp, #-16]
   272f0:	str	r2, [r3, #4]
   272f4:	ldr	r3, [fp, #-16]
   272f8:	ldr	r3, [r3, #32]
   272fc:	ldr	r3, [r3, #20]
   27300:	str	r3, [fp, #-8]
   27304:	ldr	r3, [fp, #-20]	; 0xffffffec
   27308:	lsl	r3, r3, #1
   2730c:	add	r3, r3, #1
   27310:	str	r3, [fp, #-12]
   27314:	mov	r3, #0
   27318:	str	r3, [sp]
   2731c:	ldr	r3, [fp, #-12]
   27320:	ldr	r2, [fp, #-8]
   27324:	mov	r1, #3
   27328:	ldr	r0, [fp, #-16]
   2732c:	bl	27168 <flatcc_builder_default_alloc@@Base+0x6c4>
   27330:	mov	r2, r0
   27334:	ldr	r3, [fp, #-16]
   27338:	str	r2, [r3]
   2733c:	ldr	r3, [fp, #-16]
   27340:	ldr	r3, [r3]
   27344:	cmp	r3, #0
   27348:	bne	27354 <flatcc_builder_default_alloc@@Base+0x8b0>
   2734c:	mvn	r3, #0
   27350:	b	27358 <flatcc_builder_default_alloc@@Base+0x8b4>
   27354:	mov	r3, #0
   27358:	mov	r0, r3
   2735c:	sub	sp, fp, #4
   27360:	ldr	fp, [sp]
   27364:	add	sp, sp, #4
   27368:	pop	{pc}		; (ldr pc, [sp], #4)
   2736c:	str	r4, [sp, #-12]!
   27370:	str	fp, [sp, #4]
   27374:	str	lr, [sp, #8]
   27378:	add	fp, sp, #8
   2737c:	sub	sp, sp, #36	; 0x24
   27380:	str	r0, [fp, #-32]	; 0xffffffe0
   27384:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27388:	add	r3, r3, #52	; 0x34
   2738c:	add	r3, r3, #40	; 0x28
   27390:	str	r3, [fp, #-24]	; 0xffffffe8
   27394:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27398:	ldr	r3, [r3, #124]	; 0x7c
   2739c:	cmp	r3, #0
   273a0:	beq	273c4 <flatcc_builder_default_alloc@@Base+0x920>
   273a4:	ldr	r3, [pc, #292]	; 274d0 <flatcc_builder_default_alloc@@Base+0xa2c>
   273a8:	add	r3, pc, r3
   273ac:	movw	r2, #342	; 0x156
   273b0:	ldr	r1, [pc, #284]	; 274d4 <flatcc_builder_default_alloc@@Base+0xa30>
   273b4:	add	r1, pc, r1
   273b8:	ldr	r0, [pc, #280]	; 274d8 <flatcc_builder_default_alloc@@Base+0xa34>
   273bc:	add	r0, pc, r0
   273c0:	bl	126ac <__assert_fail@plt>
   273c4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   273c8:	ldr	r2, [r3, #124]	; 0x7c
   273cc:	mov	r3, #0
   273d0:	str	r3, [sp]
   273d4:	mov	r3, #16
   273d8:	mov	r1, #6
   273dc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   273e0:	bl	27168 <flatcc_builder_default_alloc@@Base+0x6c4>
   273e4:	mov	r3, r0
   273e8:	cmp	r3, #0
   273ec:	bne	273f8 <flatcc_builder_default_alloc@@Base+0x954>
   273f0:	mvn	r3, #0
   273f4:	b	274b8 <flatcc_builder_default_alloc@@Base+0xa14>
   273f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   273fc:	mov	r2, #16
   27400:	str	r2, [r3, #124]	; 0x7c
   27404:	mov	r3, #256	; 0x100
   27408:	str	r3, [fp, #-16]
   2740c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27410:	ldr	r4, [r3, #48]	; 0x30
   27414:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27418:	ldr	r0, [r3, #40]	; 0x28
   2741c:	mov	r3, #5
   27420:	str	r3, [sp]
   27424:	mov	r3, #1
   27428:	ldr	r2, [fp, #-16]
   2742c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   27430:	blx	r4
   27434:	mov	r3, r0
   27438:	cmp	r3, #0
   2743c:	beq	27454 <flatcc_builder_default_alloc@@Base+0x9b0>
   27440:	mvn	r3, #0
   27444:	b	274b8 <flatcc_builder_default_alloc@@Base+0xa14>
   27448:	ldr	r3, [fp, #-16]
   2744c:	lsl	r3, r3, #1
   27450:	str	r3, [fp, #-16]
   27454:	ldr	r3, [fp, #-16]
   27458:	lsl	r2, r3, #1
   2745c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   27460:	ldr	r3, [r3, #4]
   27464:	cmp	r2, r3
   27468:	bls	27448 <flatcc_builder_default_alloc@@Base+0x9a4>
   2746c:	ldr	r3, [fp, #-16]
   27470:	lsr	r3, r3, #2
   27474:	str	r3, [fp, #-16]
   27478:	mov	r3, #0
   2747c:	str	r3, [fp, #-20]	; 0xffffffec
   27480:	b	27490 <flatcc_builder_default_alloc@@Base+0x9ec>
   27484:	ldr	r3, [fp, #-20]	; 0xffffffec
   27488:	add	r3, r3, #1
   2748c:	str	r3, [fp, #-20]	; 0xffffffec
   27490:	mov	r2, #1
   27494:	ldr	r3, [fp, #-20]	; 0xffffffec
   27498:	lsl	r3, r2, r3
   2749c:	ldr	r2, [fp, #-16]
   274a0:	cmp	r2, r3
   274a4:	bhi	27484 <flatcc_builder_default_alloc@@Base+0x9e0>
   274a8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   274ac:	ldr	r2, [fp, #-20]	; 0xffffffec
   274b0:	str	r2, [r3, #116]	; 0x74
   274b4:	mov	r3, #0
   274b8:	mov	r0, r3
   274bc:	sub	sp, fp, #8
   274c0:	ldr	r4, [sp]
   274c4:	ldr	fp, [sp, #4]
   274c8:	add	sp, sp, #8
   274cc:	pop	{pc}		; (ldr pc, [sp], #4)
   274d0:	andeq	r0, r1, r4, lsr r2
   274d4:	andeq	pc, r0, r0, lsl #28
   274d8:	andeq	pc, r0, ip, asr lr	; <UNPREDICTABLE>
   274dc:	str	fp, [sp, #-8]!
   274e0:	str	lr, [sp, #4]
   274e4:	add	fp, sp, #4
   274e8:	sub	sp, sp, #16
   274ec:	str	r0, [fp, #-16]
   274f0:	str	r1, [fp, #-20]	; 0xffffffec
   274f4:	ldr	r3, [fp, #-16]
   274f8:	ldr	r3, [r3, #116]	; 0x74
   274fc:	cmp	r3, #0
   27500:	bne	27520 <flatcc_builder_default_alloc@@Base+0xa7c>
   27504:	ldr	r0, [fp, #-16]
   27508:	bl	2736c <flatcc_builder_default_alloc@@Base+0x8c8>
   2750c:	mov	r3, r0
   27510:	cmp	r3, #0
   27514:	beq	27520 <flatcc_builder_default_alloc@@Base+0xa7c>
   27518:	mov	r3, #0
   2751c:	b	2754c <flatcc_builder_default_alloc@@Base+0xaa8>
   27520:	ldr	r3, [fp, #-16]
   27524:	ldr	r3, [r3, #92]	; 0x5c
   27528:	str	r3, [fp, #-8]
   2752c:	ldr	r3, [fp, #-16]
   27530:	ldr	r3, [r3, #116]	; 0x74
   27534:	rsb	r3, r3, #32
   27538:	ldr	r2, [fp, #-20]	; 0xffffffec
   2753c:	lsr	r3, r2, r3
   27540:	lsl	r3, r3, #2
   27544:	ldr	r2, [fp, #-8]
   27548:	add	r3, r2, r3
   2754c:	mov	r0, r3
   27550:	sub	sp, fp, #4
   27554:	ldr	fp, [sp]
   27558:	add	sp, sp, #4
   2755c:	pop	{pc}		; (ldr pc, [sp], #4)

00027560 <flatcc_builder_flush_vtable_cache@@Base>:
   27560:	str	fp, [sp, #-8]!
   27564:	str	lr, [sp, #4]
   27568:	add	fp, sp, #4
   2756c:	sub	sp, sp, #16
   27570:	str	r0, [fp, #-16]
   27574:	ldr	r3, [fp, #-16]
   27578:	add	r3, r3, #52	; 0x34
   2757c:	add	r3, r3, #40	; 0x28
   27580:	str	r3, [fp, #-8]
   27584:	ldr	r3, [fp, #-16]
   27588:	ldr	r3, [r3, #116]	; 0x74
   2758c:	cmp	r3, #0
   27590:	beq	275cc <flatcc_builder_flush_vtable_cache@@Base+0x6c>
   27594:	ldr	r3, [fp, #-8]
   27598:	ldr	r0, [r3]
   2759c:	ldr	r3, [fp, #-8]
   275a0:	ldr	r3, [r3, #4]
   275a4:	mov	r2, r3
   275a8:	mov	r1, #0
   275ac:	bl	1264c <memset@plt>
   275b0:	ldr	r3, [fp, #-16]
   275b4:	mov	r2, #16
   275b8:	str	r2, [r3, #124]	; 0x7c
   275bc:	ldr	r3, [fp, #-16]
   275c0:	mov	r2, #0
   275c4:	str	r2, [r3, #120]	; 0x78
   275c8:	b	275d0 <flatcc_builder_flush_vtable_cache@@Base+0x70>
   275cc:	nop	{0}
   275d0:	sub	sp, fp, #4
   275d4:	ldr	fp, [sp]
   275d8:	add	sp, sp, #4
   275dc:	pop	{pc}		; (ldr pc, [sp], #4)

000275e0 <flatcc_builder_custom_init@@Base>:
   275e0:	str	r4, [sp, #-12]!
   275e4:	str	fp, [sp, #4]
   275e8:	str	lr, [sp, #8]
   275ec:	add	fp, sp, #8
   275f0:	sub	sp, sp, #20
   275f4:	str	r0, [fp, #-16]
   275f8:	str	r1, [fp, #-20]	; 0xffffffec
   275fc:	str	r2, [fp, #-24]	; 0xffffffe8
   27600:	str	r3, [fp, #-28]	; 0xffffffe4
   27604:	ldr	r4, [pc, #164]	; 276b0 <flatcc_builder_custom_init@@Base+0xd0>
   27608:	add	r4, pc, r4
   2760c:	mov	r2, #232	; 0xe8
   27610:	mov	r1, #0
   27614:	ldr	r0, [fp, #-16]
   27618:	bl	1264c <memset@plt>
   2761c:	ldr	r3, [fp, #-20]	; 0xffffffec
   27620:	cmp	r3, #0
   27624:	bne	2764c <flatcc_builder_custom_init@@Base+0x6c>
   27628:	ldr	r3, [fp, #-16]
   2762c:	mov	r2, #1
   27630:	str	r2, [r3, #184]	; 0xb8
   27634:	ldr	r3, [pc, #120]	; 276b4 <flatcc_builder_custom_init@@Base+0xd4>
   27638:	ldr	r3, [r4, r3]
   2763c:	str	r3, [fp, #-20]	; 0xffffffec
   27640:	ldr	r3, [fp, #-16]
   27644:	add	r3, r3, #188	; 0xbc
   27648:	str	r3, [fp, #-24]	; 0xffffffe8
   2764c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   27650:	cmp	r3, #0
   27654:	bne	27664 <flatcc_builder_custom_init@@Base+0x84>
   27658:	ldr	r3, [pc, #88]	; 276b8 <flatcc_builder_custom_init@@Base+0xd8>
   2765c:	ldr	r3, [r4, r3]
   27660:	str	r3, [fp, #-28]	; 0xffffffe4
   27664:	ldr	r3, [fp, #-16]
   27668:	ldr	r2, [fp, #4]
   2766c:	str	r2, [r3, #40]	; 0x28
   27670:	ldr	r3, [fp, #-16]
   27674:	ldr	r2, [fp, #-28]	; 0xffffffe4
   27678:	str	r2, [r3, #48]	; 0x30
   2767c:	ldr	r3, [fp, #-16]
   27680:	ldr	r2, [fp, #-24]	; 0xffffffe8
   27684:	str	r2, [r3, #36]	; 0x24
   27688:	ldr	r3, [fp, #-16]
   2768c:	ldr	r2, [fp, #-20]	; 0xffffffec
   27690:	str	r2, [r3, #44]	; 0x2c
   27694:	mov	r3, #0
   27698:	mov	r0, r3
   2769c:	sub	sp, fp, #8
   276a0:	ldr	r4, [sp]
   276a4:	ldr	fp, [sp, #4]
   276a8:	add	sp, sp, #8
   276ac:	pop	{pc}		; (ldr pc, [sp], #4)
   276b0:	strdeq	r1, [r2], -r0
   276b4:	andeq	r0, r0, r8, lsl #1
   276b8:	andeq	r0, r0, r0, lsl #1

000276bc <flatcc_builder_init@@Base>:
   276bc:	str	fp, [sp, #-8]!
   276c0:	str	lr, [sp, #4]
   276c4:	add	fp, sp, #4
   276c8:	sub	sp, sp, #16
   276cc:	str	r0, [fp, #-8]
   276d0:	mov	r3, #0
   276d4:	str	r3, [sp]
   276d8:	mov	r3, #0
   276dc:	mov	r2, #0
   276e0:	mov	r1, #0
   276e4:	ldr	r0, [fp, #-8]
   276e8:	bl	275e0 <flatcc_builder_custom_init@@Base>
   276ec:	mov	r3, r0
   276f0:	mov	r0, r3
   276f4:	sub	sp, fp, #4
   276f8:	ldr	fp, [sp]
   276fc:	add	sp, sp, #4
   27700:	pop	{pc}		; (ldr pc, [sp], #4)

00027704 <flatcc_builder_custom_reset@@Base>:
   27704:	str	r4, [sp, #-12]!
   27708:	str	fp, [sp, #4]
   2770c:	str	lr, [sp, #8]
   27710:	add	fp, sp, #8
   27714:	sub	sp, sp, #36	; 0x24
   27718:	str	r0, [fp, #-24]	; 0xffffffe8
   2771c:	str	r1, [fp, #-28]	; 0xffffffe4
   27720:	str	r2, [fp, #-32]	; 0xffffffe0
   27724:	mov	r3, #0
   27728:	str	r3, [fp, #-16]
   2772c:	b	27808 <flatcc_builder_custom_reset@@Base+0x104>
   27730:	ldr	r3, [fp, #-24]	; 0xffffffe8
   27734:	add	r2, r3, #52	; 0x34
   27738:	ldr	r3, [fp, #-16]
   2773c:	lsl	r3, r3, #3
   27740:	add	r3, r2, r3
   27744:	str	r3, [fp, #-20]	; 0xffffffec
   27748:	ldr	r3, [fp, #-20]	; 0xffffffec
   2774c:	ldr	r3, [r3]
   27750:	cmp	r3, #0
   27754:	beq	277cc <flatcc_builder_custom_reset@@Base+0xc8>
   27758:	ldr	r3, [fp, #-16]
   2775c:	cmp	r3, #5
   27760:	beq	277ac <flatcc_builder_custom_reset@@Base+0xa8>
   27764:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27768:	cmp	r3, #0
   2776c:	beq	277ac <flatcc_builder_custom_reset@@Base+0xa8>
   27770:	ldr	r3, [fp, #-24]	; 0xffffffe8
   27774:	ldr	r4, [r3, #48]	; 0x30
   27778:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2777c:	ldr	r0, [r3, #40]	; 0x28
   27780:	ldr	r3, [fp, #-16]
   27784:	str	r3, [sp]
   27788:	mov	r3, #1
   2778c:	mov	r2, #1
   27790:	ldr	r1, [fp, #-20]	; 0xffffffec
   27794:	blx	r4
   27798:	mov	r3, r0
   2779c:	cmp	r3, #0
   277a0:	beq	277ac <flatcc_builder_custom_reset@@Base+0xa8>
   277a4:	mvn	r3, #0
   277a8:	b	27938 <flatcc_builder_custom_reset@@Base+0x234>
   277ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   277b0:	ldr	r0, [r3]
   277b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   277b8:	ldr	r3, [r3, #4]
   277bc:	mov	r2, r3
   277c0:	mov	r1, #0
   277c4:	bl	1264c <memset@plt>
   277c8:	b	277fc <flatcc_builder_custom_reset@@Base+0xf8>
   277cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   277d0:	ldr	r3, [r3, #4]
   277d4:	cmp	r3, #0
   277d8:	beq	277fc <flatcc_builder_custom_reset@@Base+0xf8>
   277dc:	ldr	r3, [pc, #364]	; 27950 <flatcc_builder_custom_reset@@Base+0x24c>
   277e0:	add	r3, pc, r3
   277e4:	movw	r2, #434	; 0x1b2
   277e8:	ldr	r1, [pc, #356]	; 27954 <flatcc_builder_custom_reset@@Base+0x250>
   277ec:	add	r1, pc, r1
   277f0:	ldr	r0, [pc, #352]	; 27958 <flatcc_builder_custom_reset@@Base+0x254>
   277f4:	add	r0, pc, r0
   277f8:	bl	126ac <__assert_fail@plt>
   277fc:	ldr	r3, [fp, #-16]
   27800:	add	r3, r3, #1
   27804:	str	r3, [fp, #-16]
   27808:	ldr	r3, [fp, #-16]
   2780c:	cmp	r3, #7
   27810:	ble	27730 <flatcc_builder_custom_reset@@Base+0x2c>
   27814:	ldr	r3, [fp, #-24]	; 0xffffffe8
   27818:	mov	r2, #0
   2781c:	str	r2, [r3, #120]	; 0x78
   27820:	ldr	r3, [fp, #-24]	; 0xffffffe8
   27824:	ldr	r3, [r3, #124]	; 0x7c
   27828:	cmp	r3, #0
   2782c:	beq	2783c <flatcc_builder_custom_reset@@Base+0x138>
   27830:	ldr	r3, [fp, #-24]	; 0xffffffe8
   27834:	mov	r2, #16
   27838:	str	r2, [r3, #124]	; 0x7c
   2783c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   27840:	mov	r2, #0
   27844:	strh	r2, [r3, #128]	; 0x80
   27848:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2784c:	mov	r2, #0
   27850:	str	r2, [r3, #136]	; 0x88
   27854:	ldr	r3, [fp, #-24]	; 0xffffffe8
   27858:	mov	r2, #0
   2785c:	str	r2, [r3, #140]	; 0x8c
   27860:	ldr	r3, [fp, #-24]	; 0xffffffe8
   27864:	mov	r2, #0
   27868:	str	r2, [r3, #156]	; 0x9c
   2786c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   27870:	mov	r2, #0
   27874:	str	r2, [r3, #160]	; 0xa0
   27878:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2787c:	mov	r2, #0
   27880:	str	r2, [r3, #20]
   27884:	ldr	r3, [fp, #-24]	; 0xffffffe8
   27888:	mov	r2, #0
   2788c:	str	r2, [r3, #24]
   27890:	ldr	r3, [fp, #-24]	; 0xffffffe8
   27894:	mov	r2, #0
   27898:	str	r2, [r3, #148]	; 0x94
   2789c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   278a0:	mov	r2, #0
   278a4:	str	r2, [r3, #152]	; 0x98
   278a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   278ac:	ldr	r2, [r3, #60]	; 0x3c
   278b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   278b4:	str	r2, [r3, #16]
   278b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   278bc:	ldr	r2, [r3, #76]	; 0x4c
   278c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   278c4:	str	r2, [r3]
   278c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   278cc:	ldr	r2, [r3, #52]	; 0x34
   278d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   278d4:	str	r2, [r3, #4]
   278d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   278dc:	mov	r2, #0
   278e0:	str	r2, [r3, #32]
   278e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   278e8:	cmp	r3, #0
   278ec:	beq	27914 <flatcc_builder_custom_reset@@Base+0x210>
   278f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   278f4:	mov	r2, #0
   278f8:	str	r2, [r3, #172]	; 0xac
   278fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   27900:	mov	r2, #0
   27904:	str	r2, [r3, #176]	; 0xb0
   27908:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2790c:	mov	r2, #0
   27910:	str	r2, [r3, #180]	; 0xb4
   27914:	ldr	r3, [fp, #-24]	; 0xffffffe8
   27918:	ldr	r3, [r3, #184]	; 0xb8
   2791c:	cmp	r3, #0
   27920:	beq	27934 <flatcc_builder_custom_reset@@Base+0x230>
   27924:	ldr	r3, [fp, #-24]	; 0xffffffe8
   27928:	add	r3, r3, #188	; 0xbc
   2792c:	mov	r0, r3
   27930:	bl	2d598 <flatcc_emitter_reset@@Base>
   27934:	mov	r3, #0
   27938:	mov	r0, r3
   2793c:	sub	sp, fp, #8
   27940:	ldr	r4, [sp]
   27944:	ldr	fp, [sp, #4]
   27948:	add	sp, sp, #8
   2794c:	pop	{pc}		; (ldr pc, [sp], #4)
   27950:	andeq	pc, r0, r8, lsl lr	; <UNPREDICTABLE>
   27954:	andeq	pc, r0, r8, asr #19
   27958:	andeq	pc, r0, r4, lsr sl	; <UNPREDICTABLE>

0002795c <flatcc_builder_reset@@Base>:
   2795c:	str	fp, [sp, #-8]!
   27960:	str	lr, [sp, #4]
   27964:	add	fp, sp, #4
   27968:	sub	sp, sp, #8
   2796c:	str	r0, [fp, #-8]
   27970:	mov	r2, #0
   27974:	mov	r1, #0
   27978:	ldr	r0, [fp, #-8]
   2797c:	bl	27704 <flatcc_builder_custom_reset@@Base>
   27980:	mov	r3, r0
   27984:	mov	r0, r3
   27988:	sub	sp, fp, #4
   2798c:	ldr	fp, [sp]
   27990:	add	sp, sp, #4
   27994:	pop	{pc}		; (ldr pc, [sp], #4)

00027998 <flatcc_builder_clear@@Base>:
   27998:	str	r4, [sp, #-12]!
   2799c:	str	fp, [sp, #4]
   279a0:	str	lr, [sp, #8]
   279a4:	add	fp, sp, #8
   279a8:	sub	sp, sp, #28
   279ac:	str	r0, [fp, #-24]	; 0xffffffe8
   279b0:	mov	r3, #0
   279b4:	str	r3, [fp, #-16]
   279b8:	b	27a08 <flatcc_builder_clear@@Base+0x70>
   279bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   279c0:	add	r2, r3, #52	; 0x34
   279c4:	ldr	r3, [fp, #-16]
   279c8:	lsl	r3, r3, #3
   279cc:	add	r3, r2, r3
   279d0:	str	r3, [fp, #-20]	; 0xffffffec
   279d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   279d8:	ldr	r4, [r3, #48]	; 0x30
   279dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   279e0:	ldr	r0, [r3, #40]	; 0x28
   279e4:	ldr	r3, [fp, #-16]
   279e8:	str	r3, [sp]
   279ec:	mov	r3, #0
   279f0:	mov	r2, #0
   279f4:	ldr	r1, [fp, #-20]	; 0xffffffec
   279f8:	blx	r4
   279fc:	ldr	r3, [fp, #-16]
   27a00:	add	r3, r3, #1
   27a04:	str	r3, [fp, #-16]
   27a08:	ldr	r3, [fp, #-16]
   27a0c:	cmp	r3, #7
   27a10:	ble	279bc <flatcc_builder_clear@@Base+0x24>
   27a14:	ldr	r3, [fp, #-24]	; 0xffffffe8
   27a18:	ldr	r3, [r3, #184]	; 0xb8
   27a1c:	cmp	r3, #0
   27a20:	beq	27a34 <flatcc_builder_clear@@Base+0x9c>
   27a24:	ldr	r3, [fp, #-24]	; 0xffffffe8
   27a28:	add	r3, r3, #188	; 0xbc
   27a2c:	mov	r0, r3
   27a30:	bl	2d734 <flatcc_emitter_clear@@Base>
   27a34:	mov	r2, #232	; 0xe8
   27a38:	mov	r1, #0
   27a3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   27a40:	bl	1264c <memset@plt>
   27a44:	nop	{0}
   27a48:	sub	sp, fp, #8
   27a4c:	ldr	r4, [sp]
   27a50:	ldr	fp, [sp, #4]
   27a54:	add	sp, sp, #8
   27a58:	pop	{pc}		; (ldr pc, [sp], #4)
   27a5c:	push	{fp}		; (str fp, [sp, #-4]!)
   27a60:	add	fp, sp, #0
   27a64:	sub	sp, sp, #12
   27a68:	str	r0, [fp, #-8]
   27a6c:	mov	r3, r1
   27a70:	strh	r3, [fp, #-10]
   27a74:	ldr	r3, [fp, #-8]
   27a78:	ldrh	r3, [r3, #128]	; 0x80
   27a7c:	ldrh	r2, [fp, #-10]
   27a80:	cmp	r2, r3
   27a84:	bls	27a94 <flatcc_builder_clear@@Base+0xfc>
   27a88:	ldr	r3, [fp, #-8]
   27a8c:	ldrh	r2, [fp, #-10]
   27a90:	strh	r2, [r3, #128]	; 0x80
   27a94:	nop	{0}
   27a98:	add	sp, fp, #0
   27a9c:	pop	{fp}		; (ldr fp, [sp], #4)
   27aa0:	bx	lr
   27aa4:	push	{fp}		; (str fp, [sp, #-4]!)
   27aa8:	add	fp, sp, #0
   27aac:	sub	sp, sp, #12
   27ab0:	str	r0, [fp, #-8]
   27ab4:	mov	r3, r1
   27ab8:	strh	r3, [fp, #-10]
   27abc:	ldr	r3, [fp, #-8]
   27ac0:	ldrh	r3, [r3]
   27ac4:	ldrh	r2, [fp, #-10]
   27ac8:	cmp	r2, r3
   27acc:	bls	27adc <flatcc_builder_clear@@Base+0x144>
   27ad0:	ldr	r3, [fp, #-8]
   27ad4:	ldrh	r2, [fp, #-10]
   27ad8:	strh	r2, [r3]
   27adc:	nop	{0}
   27ae0:	add	sp, fp, #0
   27ae4:	pop	{fp}		; (ldr fp, [sp], #4)
   27ae8:	bx	lr

00027aec <flatcc_builder_enter_user_frame_ptr@@Base>:
   27aec:	str	fp, [sp, #-8]!
   27af0:	str	lr, [sp, #4]
   27af4:	add	fp, sp, #4
   27af8:	sub	sp, sp, #24
   27afc:	str	r0, [fp, #-16]
   27b00:	str	r1, [fp, #-20]	; 0xffffffec
   27b04:	ldr	r3, [fp, #-20]	; 0xffffffec
   27b08:	add	r3, r3, #3
   27b0c:	bic	r3, r3, #3
   27b10:	add	r3, r3, #4
   27b14:	str	r3, [fp, #-20]	; 0xffffffec
   27b18:	ldr	r3, [fp, #-16]
   27b1c:	ldr	r2, [r3, #228]	; 0xe4
   27b20:	mov	r3, #0
   27b24:	str	r3, [sp]
   27b28:	ldr	r3, [fp, #-20]	; 0xffffffec
   27b2c:	mov	r1, #7
   27b30:	ldr	r0, [fp, #-16]
   27b34:	bl	27168 <flatcc_builder_default_alloc@@Base+0x6c4>
   27b38:	str	r0, [fp, #-8]
   27b3c:	ldr	r3, [fp, #-8]
   27b40:	cmp	r3, #0
   27b44:	bne	27b50 <flatcc_builder_enter_user_frame_ptr@@Base+0x64>
   27b48:	mov	r3, #0
   27b4c:	b	27ba8 <flatcc_builder_enter_user_frame_ptr@@Base+0xbc>
   27b50:	ldr	r2, [fp, #-20]	; 0xffffffec
   27b54:	mov	r1, #0
   27b58:	ldr	r0, [fp, #-8]
   27b5c:	bl	1264c <memset@plt>
   27b60:	ldr	r3, [fp, #-8]
   27b64:	add	r2, r3, #4
   27b68:	str	r2, [fp, #-8]
   27b6c:	ldr	r2, [fp, #-16]
   27b70:	ldr	r2, [r2, #224]	; 0xe0
   27b74:	str	r2, [r3]
   27b78:	ldr	r3, [fp, #-16]
   27b7c:	ldr	r3, [r3, #228]	; 0xe4
   27b80:	add	r2, r3, #4
   27b84:	ldr	r3, [fp, #-16]
   27b88:	str	r2, [r3, #224]	; 0xe0
   27b8c:	ldr	r3, [fp, #-16]
   27b90:	ldr	r2, [r3, #228]	; 0xe4
   27b94:	ldr	r3, [fp, #-20]	; 0xffffffec
   27b98:	add	r2, r2, r3
   27b9c:	ldr	r3, [fp, #-16]
   27ba0:	str	r2, [r3, #228]	; 0xe4
   27ba4:	ldr	r3, [fp, #-8]
   27ba8:	mov	r0, r3
   27bac:	sub	sp, fp, #4
   27bb0:	ldr	fp, [sp]
   27bb4:	add	sp, sp, #4
   27bb8:	pop	{pc}		; (ldr pc, [sp], #4)

00027bbc <flatcc_builder_enter_user_frame@@Base>:
   27bbc:	str	fp, [sp, #-8]!
   27bc0:	str	lr, [sp, #4]
   27bc4:	add	fp, sp, #4
   27bc8:	sub	sp, sp, #24
   27bcc:	str	r0, [fp, #-16]
   27bd0:	str	r1, [fp, #-20]	; 0xffffffec
   27bd4:	ldr	r3, [fp, #-20]	; 0xffffffec
   27bd8:	add	r3, r3, #3
   27bdc:	bic	r3, r3, #3
   27be0:	add	r3, r3, #4
   27be4:	str	r3, [fp, #-20]	; 0xffffffec
   27be8:	ldr	r3, [fp, #-16]
   27bec:	ldr	r2, [r3, #228]	; 0xe4
   27bf0:	mov	r3, #0
   27bf4:	str	r3, [sp]
   27bf8:	ldr	r3, [fp, #-20]	; 0xffffffec
   27bfc:	mov	r1, #7
   27c00:	ldr	r0, [fp, #-16]
   27c04:	bl	27168 <flatcc_builder_default_alloc@@Base+0x6c4>
   27c08:	str	r0, [fp, #-8]
   27c0c:	ldr	r3, [fp, #-8]
   27c10:	cmp	r3, #0
   27c14:	bne	27c20 <flatcc_builder_enter_user_frame@@Base+0x64>
   27c18:	mov	r3, #0
   27c1c:	b	27c7c <flatcc_builder_enter_user_frame@@Base+0xc0>
   27c20:	ldr	r2, [fp, #-20]	; 0xffffffec
   27c24:	mov	r1, #0
   27c28:	ldr	r0, [fp, #-8]
   27c2c:	bl	1264c <memset@plt>
   27c30:	ldr	r3, [fp, #-8]
   27c34:	add	r2, r3, #4
   27c38:	str	r2, [fp, #-8]
   27c3c:	ldr	r2, [fp, #-16]
   27c40:	ldr	r2, [r2, #224]	; 0xe0
   27c44:	str	r2, [r3]
   27c48:	ldr	r3, [fp, #-16]
   27c4c:	ldr	r3, [r3, #228]	; 0xe4
   27c50:	add	r2, r3, #4
   27c54:	ldr	r3, [fp, #-16]
   27c58:	str	r2, [r3, #224]	; 0xe0
   27c5c:	ldr	r3, [fp, #-16]
   27c60:	ldr	r2, [r3, #228]	; 0xe4
   27c64:	ldr	r3, [fp, #-20]	; 0xffffffec
   27c68:	add	r2, r2, r3
   27c6c:	ldr	r3, [fp, #-16]
   27c70:	str	r2, [r3, #228]	; 0xe4
   27c74:	ldr	r3, [fp, #-16]
   27c78:	ldr	r3, [r3, #224]	; 0xe0
   27c7c:	mov	r0, r3
   27c80:	sub	sp, fp, #4
   27c84:	ldr	fp, [sp]
   27c88:	add	sp, sp, #4
   27c8c:	pop	{pc}		; (ldr pc, [sp], #4)

00027c90 <flatcc_builder_exit_user_frame@@Base>:
   27c90:	str	fp, [sp, #-8]!
   27c94:	str	lr, [sp, #4]
   27c98:	add	fp, sp, #4
   27c9c:	sub	sp, sp, #16
   27ca0:	str	r0, [fp, #-16]
   27ca4:	ldr	r3, [fp, #-16]
   27ca8:	ldr	r3, [r3, #224]	; 0xe0
   27cac:	cmp	r3, #0
   27cb0:	bne	27cd4 <flatcc_builder_exit_user_frame@@Base+0x44>
   27cb4:	ldr	r3, [pc, #112]	; 27d2c <flatcc_builder_exit_user_frame@@Base+0x9c>
   27cb8:	add	r3, pc, r3
   27cbc:	movw	r2, #542	; 0x21e
   27cc0:	ldr	r1, [pc, #104]	; 27d30 <flatcc_builder_exit_user_frame@@Base+0xa0>
   27cc4:	add	r1, pc, r1
   27cc8:	ldr	r0, [pc, #100]	; 27d34 <flatcc_builder_exit_user_frame@@Base+0xa4>
   27ccc:	add	r0, pc, r0
   27cd0:	bl	126ac <__assert_fail@plt>
   27cd4:	ldr	r3, [fp, #-16]
   27cd8:	ldr	r2, [r3, #108]	; 0x6c
   27cdc:	ldr	r3, [fp, #-16]
   27ce0:	ldr	r3, [r3, #224]	; 0xe0
   27ce4:	add	r3, r2, r3
   27ce8:	str	r3, [fp, #-8]
   27cec:	ldr	r3, [fp, #-16]
   27cf0:	ldr	r3, [r3, #224]	; 0xe0
   27cf4:	sub	r2, r3, #4
   27cf8:	ldr	r3, [fp, #-16]
   27cfc:	str	r2, [r3, #228]	; 0xe4
   27d00:	ldr	r3, [fp, #-8]
   27d04:	ldr	r2, [r3, #-4]
   27d08:	ldr	r3, [fp, #-16]
   27d0c:	str	r2, [r3, #224]	; 0xe0
   27d10:	ldr	r3, [fp, #-16]
   27d14:	ldr	r3, [r3, #224]	; 0xe0
   27d18:	mov	r0, r3
   27d1c:	sub	sp, fp, #4
   27d20:	ldr	fp, [sp]
   27d24:	add	sp, sp, #4
   27d28:	pop	{pc}		; (ldr pc, [sp], #4)
   27d2c:	andeq	pc, r0, ip, asr r9	; <UNPREDICTABLE>
   27d30:	strdeq	pc, [r0], -r0
   27d34:	andeq	pc, r0, r0, ror r5	; <UNPREDICTABLE>

00027d38 <flatcc_builder_exit_user_frame_at@@Base>:
   27d38:	str	fp, [sp, #-8]!
   27d3c:	str	lr, [sp, #4]
   27d40:	add	fp, sp, #4
   27d44:	sub	sp, sp, #8
   27d48:	str	r0, [fp, #-8]
   27d4c:	str	r1, [fp, #-12]
   27d50:	ldr	r3, [fp, #-8]
   27d54:	ldr	r3, [r3, #224]	; 0xe0
   27d58:	ldr	r2, [fp, #-12]
   27d5c:	cmp	r2, r3
   27d60:	bls	27d84 <flatcc_builder_exit_user_frame_at@@Base+0x4c>
   27d64:	ldr	r3, [pc, #68]	; 27db0 <flatcc_builder_exit_user_frame_at@@Base+0x78>
   27d68:	add	r3, pc, r3
   27d6c:	movw	r2, #551	; 0x227
   27d70:	ldr	r1, [pc, #60]	; 27db4 <flatcc_builder_exit_user_frame_at@@Base+0x7c>
   27d74:	add	r1, pc, r1
   27d78:	ldr	r0, [pc, #56]	; 27db8 <flatcc_builder_exit_user_frame_at@@Base+0x80>
   27d7c:	add	r0, pc, r0
   27d80:	bl	126ac <__assert_fail@plt>
   27d84:	ldr	r3, [fp, #-8]
   27d88:	ldr	r2, [fp, #-12]
   27d8c:	str	r2, [r3, #224]	; 0xe0
   27d90:	ldr	r0, [fp, #-8]
   27d94:	bl	27c90 <flatcc_builder_exit_user_frame@@Base>
   27d98:	mov	r3, r0
   27d9c:	mov	r0, r3
   27da0:	sub	sp, fp, #4
   27da4:	ldr	fp, [sp]
   27da8:	add	sp, sp, #4
   27dac:	pop	{pc}		; (ldr pc, [sp], #4)
   27db0:	andeq	pc, r0, ip, asr #17
   27db4:	andeq	pc, r0, r0, asr #8
   27db8:	ldrdeq	pc, [r0], -ip

00027dbc <flatcc_builder_get_current_user_frame@@Base>:
   27dbc:	push	{fp}		; (str fp, [sp, #-4]!)
   27dc0:	add	fp, sp, #0
   27dc4:	sub	sp, sp, #12
   27dc8:	str	r0, [fp, #-8]
   27dcc:	ldr	r3, [fp, #-8]
   27dd0:	ldr	r3, [r3, #224]	; 0xe0
   27dd4:	mov	r0, r3
   27dd8:	add	sp, fp, #0
   27ddc:	pop	{fp}		; (ldr fp, [sp], #4)
   27de0:	bx	lr

00027de4 <flatcc_builder_get_user_frame_ptr@@Base>:
   27de4:	push	{fp}		; (str fp, [sp, #-4]!)
   27de8:	add	fp, sp, #0
   27dec:	sub	sp, sp, #12
   27df0:	str	r0, [fp, #-8]
   27df4:	str	r1, [fp, #-12]
   27df8:	ldr	r3, [fp, #-8]
   27dfc:	ldr	r2, [r3, #108]	; 0x6c
   27e00:	ldr	r3, [fp, #-12]
   27e04:	add	r3, r2, r3
   27e08:	mov	r0, r3
   27e0c:	add	sp, fp, #0
   27e10:	pop	{fp}		; (ldr fp, [sp], #4)
   27e14:	bx	lr
   27e18:	str	fp, [sp, #-8]!
   27e1c:	str	lr, [sp, #4]
   27e20:	add	fp, sp, #4
   27e24:	sub	sp, sp, #16
   27e28:	str	r0, [fp, #-8]
   27e2c:	mov	r3, r1
   27e30:	strh	r3, [fp, #-10]
   27e34:	ldr	r3, [fp, #-8]
   27e38:	ldr	r3, [r3, #156]	; 0x9c
   27e3c:	add	r2, r3, #1
   27e40:	ldr	r3, [fp, #-8]
   27e44:	str	r2, [r3, #156]	; 0x9c
   27e48:	ldr	r3, [fp, #-8]
   27e4c:	ldr	r2, [r3, #156]	; 0x9c
   27e50:	ldr	r3, [fp, #-8]
   27e54:	ldr	r3, [r3, #160]	; 0xa0
   27e58:	cmp	r2, r3
   27e5c:	ble	27f50 <flatcc_builder_get_user_frame_ptr@@Base+0x16c>
   27e60:	ldr	r3, [fp, #-8]
   27e64:	ldr	r3, [r3, #176]	; 0xb0
   27e68:	cmp	r3, #0
   27e6c:	ble	27e90 <flatcc_builder_get_user_frame_ptr@@Base+0xac>
   27e70:	ldr	r3, [fp, #-8]
   27e74:	ldr	r2, [r3, #156]	; 0x9c
   27e78:	ldr	r3, [fp, #-8]
   27e7c:	ldr	r3, [r3, #176]	; 0xb0
   27e80:	cmp	r2, r3
   27e84:	ble	27e90 <flatcc_builder_get_user_frame_ptr@@Base+0xac>
   27e88:	mvn	r3, #0
   27e8c:	b	27ff0 <flatcc_builder_get_user_frame_ptr@@Base+0x20c>
   27e90:	ldr	r3, [fp, #-8]
   27e94:	ldr	r3, [r3, #156]	; 0x9c
   27e98:	sub	r3, r3, #1
   27e9c:	mov	r2, r3
   27ea0:	mov	r3, r2
   27ea4:	lsl	r3, r3, #3
   27ea8:	add	r3, r3, r2
   27eac:	lsl	r3, r3, #2
   27eb0:	mov	r2, r3
   27eb4:	mov	r3, #0
   27eb8:	str	r3, [sp]
   27ebc:	mov	r3, #36	; 0x24
   27ec0:	mov	r1, #4
   27ec4:	ldr	r0, [fp, #-8]
   27ec8:	bl	27168 <flatcc_builder_default_alloc@@Base+0x6c4>
   27ecc:	mov	r2, r0
   27ed0:	ldr	r3, [fp, #-8]
   27ed4:	str	r2, [r3, #32]
   27ed8:	ldr	r3, [fp, #-8]
   27edc:	ldr	r3, [r3, #32]
   27ee0:	cmp	r3, #0
   27ee4:	bne	27ef0 <flatcc_builder_get_user_frame_ptr@@Base+0x10c>
   27ee8:	mvn	r3, #0
   27eec:	b	27ff0 <flatcc_builder_get_user_frame_ptr@@Base+0x20c>
   27ef0:	ldr	r3, [fp, #-8]
   27ef4:	ldr	r2, [r3, #88]	; 0x58
   27ef8:	movw	r3, #36409	; 0x8e39
   27efc:	movt	r3, #14563	; 0x38e3
   27f00:	umull	r2, r3, r3, r2
   27f04:	lsr	r3, r3, #3
   27f08:	mov	r2, r3
   27f0c:	ldr	r3, [fp, #-8]
   27f10:	str	r2, [r3, #160]	; 0xa0
   27f14:	ldr	r3, [fp, #-8]
   27f18:	ldr	r3, [r3, #176]	; 0xb0
   27f1c:	cmp	r3, #0
   27f20:	ble	27f64 <flatcc_builder_get_user_frame_ptr@@Base+0x180>
   27f24:	ldr	r3, [fp, #-8]
   27f28:	ldr	r2, [r3, #176]	; 0xb0
   27f2c:	ldr	r3, [fp, #-8]
   27f30:	ldr	r3, [r3, #160]	; 0xa0
   27f34:	cmp	r2, r3
   27f38:	bge	27f64 <flatcc_builder_get_user_frame_ptr@@Base+0x180>
   27f3c:	ldr	r3, [fp, #-8]
   27f40:	ldr	r2, [r3, #176]	; 0xb0
   27f44:	ldr	r3, [fp, #-8]
   27f48:	str	r2, [r3, #160]	; 0xa0
   27f4c:	b	27f64 <flatcc_builder_get_user_frame_ptr@@Base+0x180>
   27f50:	ldr	r3, [fp, #-8]
   27f54:	ldr	r3, [r3, #32]
   27f58:	add	r2, r3, #36	; 0x24
   27f5c:	ldr	r3, [fp, #-8]
   27f60:	str	r2, [r3, #32]
   27f64:	ldr	r3, [fp, #-8]
   27f68:	ldr	r3, [r3, #32]
   27f6c:	ldr	r2, [fp, #-8]
   27f70:	ldr	r2, [r2, #20]
   27f74:	str	r2, [r3, #8]
   27f78:	ldr	r3, [fp, #-8]
   27f7c:	ldr	r3, [r3, #32]
   27f80:	ldr	r2, [fp, #-8]
   27f84:	ldrh	r2, [r2, #130]	; 0x82
   27f88:	strh	r2, [r3, #12]
   27f8c:	ldr	r3, [fp, #-8]
   27f90:	ldrh	r2, [fp, #-10]
   27f94:	strh	r2, [r3, #130]	; 0x82
   27f98:	ldr	r3, [fp, #-8]
   27f9c:	ldr	r3, [r3, #32]
   27fa0:	ldr	r2, [fp, #-8]
   27fa4:	ldr	r2, [r2, #28]
   27fa8:	str	r2, [r3]
   27fac:	ldr	r3, [fp, #-8]
   27fb0:	ldr	r3, [r3, #32]
   27fb4:	mvn	r2, #3
   27fb8:	str	r2, [r3, #4]
   27fbc:	ldr	r3, [fp, #-8]
   27fc0:	ldr	r2, [r3, #28]
   27fc4:	ldr	r3, [fp, #-8]
   27fc8:	ldr	r3, [r3, #20]
   27fcc:	add	r3, r2, r3
   27fd0:	add	r3, r3, #7
   27fd4:	bic	r2, r3, #7
   27fd8:	ldr	r3, [fp, #-8]
   27fdc:	str	r2, [r3, #28]
   27fe0:	ldr	r3, [fp, #-8]
   27fe4:	mov	r2, #0
   27fe8:	str	r2, [r3, #20]
   27fec:	mov	r3, #0
   27ff0:	mov	r0, r3
   27ff4:	sub	sp, fp, #4
   27ff8:	ldr	fp, [sp]
   27ffc:	add	sp, sp, #4
   28000:	pop	{pc}		; (ldr pc, [sp], #4)
   28004:	str	fp, [sp, #-8]!
   28008:	str	lr, [sp, #4]
   2800c:	add	fp, sp, #4
   28010:	sub	sp, sp, #8
   28014:	str	r0, [fp, #-8]
   28018:	ldr	r3, [fp, #-8]
   2801c:	ldr	r0, [r3, #16]
   28020:	ldr	r3, [fp, #-8]
   28024:	ldr	r3, [r3, #20]
   28028:	mov	r2, r3
   2802c:	mov	r1, #0
   28030:	bl	1264c <memset@plt>
   28034:	ldr	r3, [fp, #-8]
   28038:	ldr	r3, [r3, #32]
   2803c:	ldr	r2, [r3, #8]
   28040:	ldr	r3, [fp, #-8]
   28044:	str	r2, [r3, #20]
   28048:	ldr	r3, [fp, #-8]
   2804c:	ldr	r3, [r3, #32]
   28050:	ldr	r2, [r3]
   28054:	ldr	r3, [fp, #-8]
   28058:	str	r2, [r3, #28]
   2805c:	ldr	r3, [fp, #-8]
   28060:	ldr	r3, [r3, #32]
   28064:	ldr	r3, [r3, #4]
   28068:	mov	r1, r3
   2806c:	ldr	r0, [fp, #-8]
   28070:	bl	26c78 <flatcc_builder_default_alloc@@Base+0x1d4>
   28074:	ldr	r3, [fp, #-8]
   28078:	ldrh	r3, [r3, #130]	; 0x82
   2807c:	mov	r1, r3
   28080:	ldr	r0, [fp, #-8]
   28084:	bl	27a5c <flatcc_builder_clear@@Base+0xc4>
   28088:	ldr	r3, [fp, #-8]
   2808c:	ldr	r3, [r3, #32]
   28090:	ldrh	r2, [r3, #12]
   28094:	ldr	r3, [fp, #-8]
   28098:	strh	r2, [r3, #130]	; 0x82
   2809c:	ldr	r3, [fp, #-8]
   280a0:	ldr	r3, [r3, #32]
   280a4:	sub	r2, r3, #36	; 0x24
   280a8:	ldr	r3, [fp, #-8]
   280ac:	str	r2, [r3, #32]
   280b0:	ldr	r3, [fp, #-8]
   280b4:	ldr	r3, [r3, #156]	; 0x9c
   280b8:	sub	r2, r3, #1
   280bc:	ldr	r3, [fp, #-8]
   280c0:	str	r2, [r3, #156]	; 0x9c
   280c4:	nop	{0}
   280c8:	sub	sp, fp, #4
   280cc:	ldr	fp, [sp]
   280d0:	add	sp, sp, #4
   280d4:	pop	{pc}		; (ldr pc, [sp], #4)
   280d8:	push	{fp}		; (str fp, [sp, #-4]!)
   280dc:	add	fp, sp, #0
   280e0:	sub	sp, sp, #20
   280e4:	str	r0, [fp, #-8]
   280e8:	str	r1, [fp, #-12]
   280ec:	mov	r3, r2
   280f0:	strh	r3, [fp, #-14]
   280f4:	ldr	r3, [fp, #-8]
   280f8:	ldr	r3, [r3, #136]	; 0x88
   280fc:	mov	r2, r3
   28100:	ldr	r3, [fp, #-12]
   28104:	sub	r3, r2, r3
   28108:	ldrh	r2, [fp, #-14]
   2810c:	sub	r2, r2, #1
   28110:	and	r3, r3, r2
   28114:	mov	r0, r3
   28118:	add	sp, fp, #0
   2811c:	pop	{fp}		; (ldr fp, [sp], #4)
   28120:	bx	lr
   28124:	push	{fp}		; (str fp, [sp, #-4]!)
   28128:	add	fp, sp, #0
   2812c:	sub	sp, sp, #12
   28130:	str	r0, [fp, #-8]
   28134:	mov	r3, r1
   28138:	strh	r3, [fp, #-10]
   2813c:	ldr	r3, [fp, #-8]
   28140:	ldr	r2, [r3, #140]	; 0x8c
   28144:	ldrh	r3, [fp, #-10]
   28148:	sub	r3, r3, #1
   2814c:	and	r3, r3, r2
   28150:	mov	r0, r3
   28154:	add	sp, fp, #0
   28158:	pop	{fp}		; (ldr fp, [sp], #4)
   2815c:	bx	lr
   28160:	str	r4, [sp, #-12]!
   28164:	str	fp, [sp, #4]
   28168:	str	lr, [sp, #8]
   2816c:	add	fp, sp, #8
   28170:	sub	sp, sp, #28
   28174:	str	r0, [fp, #-24]	; 0xffffffe8
   28178:	str	r1, [fp, #-28]	; 0xffffffe4
   2817c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28180:	ldr	r3, [r3, #136]	; 0x88
   28184:	ldr	r2, [fp, #-28]	; 0xffffffe4
   28188:	ldr	r2, [r2]
   2818c:	sub	r3, r3, r2
   28190:	str	r3, [fp, #-16]
   28194:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28198:	ldr	r3, [r3, #136]	; 0x88
   2819c:	ldr	r2, [fp, #-16]
   281a0:	cmp	r2, r3
   281a4:	blt	281c8 <flatcc_builder_get_user_frame_ptr@@Base+0x3e4>
   281a8:	ldr	r3, [pc, #164]	; 28254 <flatcc_builder_get_user_frame_ptr@@Base+0x470>
   281ac:	add	r3, pc, r3
   281b0:	movw	r2, #647	; 0x287
   281b4:	ldr	r1, [pc, #156]	; 28258 <flatcc_builder_get_user_frame_ptr@@Base+0x474>
   281b8:	add	r1, pc, r1
   281bc:	ldr	r0, [pc, #152]	; 2825c <flatcc_builder_get_user_frame_ptr@@Base+0x478>
   281c0:	add	r0, pc, r0
   281c4:	bl	126ac <__assert_fail@plt>
   281c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   281cc:	ldr	r4, [r3, #44]	; 0x2c
   281d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   281d4:	ldr	r0, [r3, #36]	; 0x24
   281d8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   281dc:	add	r1, r3, #8
   281e0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   281e4:	ldr	r2, [r3, #4]
   281e8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   281ec:	ldr	r3, [r3]
   281f0:	str	r3, [sp]
   281f4:	ldr	r3, [fp, #-16]
   281f8:	blx	r4
   281fc:	mov	r3, r0
   28200:	cmp	r3, #0
   28204:	beq	28228 <flatcc_builder_get_user_frame_ptr@@Base+0x444>
   28208:	ldr	r3, [pc, #80]	; 28260 <flatcc_builder_get_user_frame_ptr@@Base+0x47c>
   2820c:	add	r3, pc, r3
   28210:	movw	r2, #651	; 0x28b
   28214:	ldr	r1, [pc, #72]	; 28264 <flatcc_builder_get_user_frame_ptr@@Base+0x480>
   28218:	add	r1, pc, r1
   2821c:	ldr	r0, [pc, #68]	; 28268 <flatcc_builder_get_user_frame_ptr@@Base+0x484>
   28220:	add	r0, pc, r0
   28224:	bl	126ac <__assert_fail@plt>
   28228:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2822c:	ldr	r2, [fp, #-16]
   28230:	str	r2, [r3, #136]	; 0x88
   28234:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28238:	ldr	r3, [r3, #136]	; 0x88
   2823c:	mov	r0, r3
   28240:	sub	sp, fp, #8
   28244:	ldr	r4, [sp]
   28248:	ldr	fp, [sp, #4]
   2824c:	add	sp, sp, #8
   28250:	pop	{pc}		; (ldr pc, [sp], #4)
   28254:	andeq	pc, r0, r8, asr #9
   28258:	strdeq	lr, [r0], -ip
   2825c:	andeq	pc, r0, r4, asr r0	; <UNPREDICTABLE>
   28260:	andeq	pc, r0, r8, ror #8
   28264:	muleq	r0, ip, pc	; <UNPREDICTABLE>
   28268:	strdeq	lr, [r0], -r4
   2826c:	str	r4, [sp, #-12]!
   28270:	str	fp, [sp, #4]
   28274:	str	lr, [sp, #8]
   28278:	add	fp, sp, #8
   2827c:	sub	sp, sp, #28
   28280:	str	r0, [fp, #-24]	; 0xffffffe8
   28284:	str	r1, [fp, #-28]	; 0xffffffe4
   28288:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2828c:	ldr	r3, [r3, #140]	; 0x8c
   28290:	str	r3, [fp, #-16]
   28294:	ldr	r3, [fp, #-28]	; 0xffffffe4
   28298:	ldr	r3, [r3]
   2829c:	mov	r2, r3
   282a0:	ldr	r3, [fp, #-16]
   282a4:	add	r2, r2, r3
   282a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   282ac:	str	r2, [r3, #140]	; 0x8c
   282b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   282b4:	ldr	r3, [r3, #140]	; 0x8c
   282b8:	ldr	r2, [fp, #-16]
   282bc:	cmp	r2, r3
   282c0:	ble	282e4 <flatcc_builder_get_user_frame_ptr@@Base+0x500>
   282c4:	ldr	r3, [pc, #152]	; 28364 <flatcc_builder_get_user_frame_ptr@@Base+0x580>
   282c8:	add	r3, pc, r3
   282cc:	movw	r2, #673	; 0x2a1
   282d0:	ldr	r1, [pc, #144]	; 28368 <flatcc_builder_get_user_frame_ptr@@Base+0x584>
   282d4:	add	r1, pc, r1
   282d8:	ldr	r0, [pc, #140]	; 2836c <flatcc_builder_get_user_frame_ptr@@Base+0x588>
   282dc:	add	r0, pc, r0
   282e0:	bl	126ac <__assert_fail@plt>
   282e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   282e8:	ldr	r4, [r3, #44]	; 0x2c
   282ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   282f0:	ldr	r0, [r3, #36]	; 0x24
   282f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   282f8:	add	r1, r3, #8
   282fc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   28300:	ldr	r2, [r3, #4]
   28304:	ldr	r3, [fp, #-28]	; 0xffffffe4
   28308:	ldr	r3, [r3]
   2830c:	str	r3, [sp]
   28310:	ldr	r3, [fp, #-16]
   28314:	blx	r4
   28318:	mov	r3, r0
   2831c:	cmp	r3, #0
   28320:	beq	28344 <flatcc_builder_get_user_frame_ptr@@Base+0x560>
   28324:	ldr	r3, [pc, #68]	; 28370 <flatcc_builder_get_user_frame_ptr@@Base+0x58c>
   28328:	add	r3, pc, r3
   2832c:	movw	r2, #677	; 0x2a5
   28330:	ldr	r1, [pc, #60]	; 28374 <flatcc_builder_get_user_frame_ptr@@Base+0x590>
   28334:	add	r1, pc, r1
   28338:	ldr	r0, [pc, #56]	; 28378 <flatcc_builder_get_user_frame_ptr@@Base+0x594>
   2833c:	add	r0, pc, r0
   28340:	bl	126ac <__assert_fail@plt>
   28344:	ldr	r3, [fp, #-16]
   28348:	add	r3, r3, #1
   2834c:	mov	r0, r3
   28350:	sub	sp, fp, #8
   28354:	ldr	r4, [sp]
   28358:	ldr	fp, [sp, #4]
   2835c:	add	sp, sp, #8
   28360:	pop	{pc}		; (ldr pc, [sp], #4)
   28364:	andeq	pc, r0, r0, lsr #7
   28368:	andeq	lr, r0, r0, ror #29
   2836c:	andeq	lr, r0, r8, lsr pc
   28370:	andeq	pc, r0, r0, asr #6
   28374:	andeq	lr, r0, r0, lsl #29
   28378:	ldrdeq	lr, [r0], -r8
   2837c:	str	r4, [sp, #-12]!
   28380:	str	fp, [sp, #4]
   28384:	str	lr, [sp, #8]
   28388:	add	fp, sp, #8
   2838c:	sub	sp, sp, #100	; 0x64
   28390:	str	r0, [fp, #-96]	; 0xffffffa0
   28394:	str	r1, [fp, #-100]	; 0xffffff9c
   28398:	str	r3, [fp, #-108]	; 0xffffff94
   2839c:	mov	r3, r2
   283a0:	strh	r3, [fp, #-102]	; 0xffffff9a
   283a4:	ldr	r4, [pc, #332]	; 284f8 <flatcc_builder_get_user_frame_ptr@@Base+0x714>
   283a8:	add	r4, pc, r4
   283ac:	ldrh	r3, [fp, #-102]	; 0xffffff9a
   283b0:	cmp	r3, #0
   283b4:	bne	283dc <flatcc_builder_get_user_frame_ptr@@Base+0x5f8>
   283b8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   283bc:	ldrh	r3, [r3, #132]	; 0x84
   283c0:	cmp	r3, #0
   283c4:	beq	283d4 <flatcc_builder_get_user_frame_ptr@@Base+0x5f0>
   283c8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   283cc:	ldrh	r3, [r3, #132]	; 0x84
   283d0:	b	283e0 <flatcc_builder_get_user_frame_ptr@@Base+0x5fc>
   283d4:	mov	r3, #1
   283d8:	b	283e0 <flatcc_builder_get_user_frame_ptr@@Base+0x5fc>
   283dc:	ldrh	r3, [fp, #-102]	; 0xffffff9a
   283e0:	strh	r3, [fp, #-102]	; 0xffffff9a
   283e4:	mov	r1, #4
   283e8:	ldr	r0, [fp, #-100]	; 0xffffff9c
   283ec:	bl	27aa4 <flatcc_builder_clear@@Base+0x10c>
   283f0:	ldrh	r3, [fp, #-102]	; 0xffffff9a
   283f4:	mov	r1, r3
   283f8:	ldr	r0, [fp, #-100]	; 0xffffff9c
   283fc:	bl	27aa4 <flatcc_builder_clear@@Base+0x10c>
   28400:	ldr	r3, [fp, #-108]	; 0xffffff94
   28404:	cmp	r3, #0
   28408:	bne	284dc <flatcc_builder_get_user_frame_ptr@@Base+0x6f8>
   2840c:	ldrh	r3, [fp, #-102]	; 0xffffff9a
   28410:	mov	r1, r3
   28414:	ldr	r0, [fp, #-96]	; 0xffffffa0
   28418:	bl	28124 <flatcc_builder_get_user_frame_ptr@@Base+0x340>
   2841c:	str	r0, [fp, #-16]
   28420:	ldr	r3, [fp, #-16]
   28424:	cmp	r3, #0
   28428:	beq	284dc <flatcc_builder_get_user_frame_ptr@@Base+0x6f8>
   2842c:	mov	r3, #0
   28430:	str	r3, [fp, #-88]	; 0xffffffa8
   28434:	mov	r3, #0
   28438:	str	r3, [fp, #-84]	; 0xffffffac
   2843c:	ldr	r3, [fp, #-16]
   28440:	cmp	r3, #0
   28444:	beq	284a0 <flatcc_builder_get_user_frame_ptr@@Base+0x6bc>
   28448:	ldr	r2, [fp, #-88]	; 0xffffffa8
   2844c:	ldr	r3, [fp, #-16]
   28450:	add	r3, r2, r3
   28454:	str	r3, [fp, #-88]	; 0xffffffa8
   28458:	ldr	r3, [fp, #-84]	; 0xffffffac
   2845c:	add	r3, r3, #1
   28460:	lsl	r3, r3, #3
   28464:	sub	r2, fp, #12
   28468:	add	r3, r2, r3
   2846c:	ldr	r2, [pc, #136]	; 284fc <flatcc_builder_get_user_frame_ptr@@Base+0x718>
   28470:	ldr	r2, [r4, r2]
   28474:	str	r2, [r3, #-76]	; 0xffffffb4
   28478:	ldr	r3, [fp, #-84]	; 0xffffffac
   2847c:	add	r3, r3, #1
   28480:	lsl	r3, r3, #3
   28484:	sub	r2, fp, #12
   28488:	add	r3, r2, r3
   2848c:	ldr	r2, [fp, #-16]
   28490:	str	r2, [r3, #-72]	; 0xffffffb8
   28494:	ldr	r3, [fp, #-84]	; 0xffffffac
   28498:	add	r3, r3, #1
   2849c:	str	r3, [fp, #-84]	; 0xffffffac
   284a0:	sub	r3, fp, #88	; 0x58
   284a4:	mov	r1, r3
   284a8:	ldr	r0, [fp, #-96]	; 0xffffffa0
   284ac:	bl	2826c <flatcc_builder_get_user_frame_ptr@@Base+0x488>
   284b0:	mov	r3, r0
   284b4:	cmp	r3, #0
   284b8:	bne	284dc <flatcc_builder_get_user_frame_ptr@@Base+0x6f8>
   284bc:	ldr	r3, [pc, #60]	; 28500 <flatcc_builder_get_user_frame_ptr@@Base+0x71c>
   284c0:	add	r3, pc, r3
   284c4:	movw	r2, #702	; 0x2be
   284c8:	ldr	r1, [pc, #52]	; 28504 <flatcc_builder_get_user_frame_ptr@@Base+0x720>
   284cc:	add	r1, pc, r1
   284d0:	ldr	r0, [pc, #48]	; 28508 <flatcc_builder_get_user_frame_ptr@@Base+0x724>
   284d4:	add	r0, pc, r0
   284d8:	bl	126ac <__assert_fail@plt>
   284dc:	mov	r3, #0
   284e0:	mov	r0, r3
   284e4:	sub	sp, fp, #8
   284e8:	ldr	r4, [sp]
   284ec:	ldr	fp, [sp, #4]
   284f0:	add	sp, sp, #8
   284f4:	pop	{pc}		; (ldr pc, [sp], #4)
   284f8:	andeq	r0, r2, r0, asr ip
   284fc:	andeq	r0, r0, r0, ror r0
   28500:	muleq	r0, r8, r1
   28504:	andeq	lr, r0, r8, ror #25
   28508:	andeq	lr, r0, r0, asr #26

0002850c <flatcc_builder_embed_buffer@@Base>:
   2850c:	str	r4, [sp, #-12]!
   28510:	str	fp, [sp, #4]
   28514:	str	lr, [sp, #8]
   28518:	add	fp, sp, #8
   2851c:	sub	sp, sp, #108	; 0x6c
   28520:	str	r0, [fp, #-104]	; 0xffffff98
   28524:	str	r2, [fp, #-112]	; 0xffffff90
   28528:	str	r3, [fp, #-116]	; 0xffffff8c
   2852c:	mov	r3, r1
   28530:	strh	r3, [fp, #-106]	; 0xffffff96
   28534:	ldr	r4, [pc, #504]	; 28734 <flatcc_builder_embed_buffer@@Base+0x228>
   28538:	add	r4, pc, r4
   2853c:	ldr	r3, [fp, #8]
   28540:	and	r3, r3, #2
   28544:	str	r3, [fp, #-16]
   28548:	ldr	r3, [fp, #-104]	; 0xffffff98
   2854c:	ldr	r3, [r3, #152]	; 0x98
   28550:	cmp	r3, #0
   28554:	movne	r3, #1
   28558:	moveq	r3, #0
   2855c:	uxtb	r3, r3
   28560:	ldrh	r2, [fp, #-106]	; 0xffffff96
   28564:	add	r1, fp, #4
   28568:	ldr	r0, [fp, #-104]	; 0xffffff98
   2856c:	bl	2837c <flatcc_builder_get_user_frame_ptr@@Base+0x598>
   28570:	mov	r3, r0
   28574:	cmp	r3, #0
   28578:	beq	28584 <flatcc_builder_embed_buffer@@Base+0x78>
   2857c:	mov	r3, #0
   28580:	b	2871c <flatcc_builder_embed_buffer@@Base+0x210>
   28584:	ldr	r3, [fp, #-16]
   28588:	cmp	r3, #0
   2858c:	beq	28598 <flatcc_builder_embed_buffer@@Base+0x8c>
   28590:	mov	r2, #4
   28594:	b	2859c <flatcc_builder_embed_buffer@@Base+0x90>
   28598:	mov	r2, #0
   2859c:	ldr	r3, [fp, #-116]	; 0xffffff8c
   285a0:	add	r3, r2, r3
   285a4:	ldrh	r2, [fp, #4]
   285a8:	mov	r1, r3
   285ac:	ldr	r0, [fp, #-104]	; 0xffffff98
   285b0:	bl	280d8 <flatcc_builder_get_user_frame_ptr@@Base+0x2f4>
   285b4:	str	r0, [fp, #-20]	; 0xffffffec
   285b8:	ldr	r2, [fp, #-116]	; 0xffffff8c
   285bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   285c0:	add	r3, r2, r3
   285c4:	mov	r0, r3
   285c8:	bl	26954 <main@@Base+0x168>
   285cc:	mov	r3, r0
   285d0:	str	r3, [fp, #-24]	; 0xffffffe8
   285d4:	mov	r3, #0
   285d8:	str	r3, [fp, #-96]	; 0xffffffa0
   285dc:	mov	r3, #0
   285e0:	str	r3, [fp, #-92]	; 0xffffffa4
   285e4:	ldr	r3, [fp, #-104]	; 0xffffff98
   285e8:	ldr	r3, [r3, #152]	; 0x98
   285ec:	cmp	r3, #0
   285f0:	beq	28644 <flatcc_builder_embed_buffer@@Base+0x138>
   285f4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   285f8:	add	r3, r3, #4
   285fc:	str	r3, [fp, #-96]	; 0xffffffa0
   28600:	ldr	r3, [fp, #-92]	; 0xffffffa4
   28604:	add	r3, r3, #1
   28608:	lsl	r3, r3, #3
   2860c:	sub	r2, fp, #12
   28610:	add	r3, r2, r3
   28614:	sub	r2, fp, #24
   28618:	str	r2, [r3, #-84]	; 0xffffffac
   2861c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   28620:	add	r3, r3, #1
   28624:	lsl	r3, r3, #3
   28628:	sub	r2, fp, #12
   2862c:	add	r3, r2, r3
   28630:	mov	r2, #4
   28634:	str	r2, [r3, #-80]	; 0xffffffb0
   28638:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2863c:	add	r3, r3, #1
   28640:	str	r3, [fp, #-92]	; 0xffffffa4
   28644:	ldr	r3, [fp, #-116]	; 0xffffff8c
   28648:	cmp	r3, #0
   2864c:	beq	286a4 <flatcc_builder_embed_buffer@@Base+0x198>
   28650:	ldr	r2, [fp, #-96]	; 0xffffffa0
   28654:	ldr	r3, [fp, #-116]	; 0xffffff8c
   28658:	add	r3, r2, r3
   2865c:	str	r3, [fp, #-96]	; 0xffffffa0
   28660:	ldr	r3, [fp, #-92]	; 0xffffffa4
   28664:	add	r3, r3, #1
   28668:	lsl	r3, r3, #3
   2866c:	sub	r2, fp, #12
   28670:	add	r3, r2, r3
   28674:	ldr	r2, [fp, #-112]	; 0xffffff90
   28678:	str	r2, [r3, #-84]	; 0xffffffac
   2867c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   28680:	add	r3, r3, #1
   28684:	lsl	r3, r3, #3
   28688:	sub	r2, fp, #12
   2868c:	add	r3, r2, r3
   28690:	ldr	r2, [fp, #-116]	; 0xffffff8c
   28694:	str	r2, [r3, #-80]	; 0xffffffb0
   28698:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2869c:	add	r3, r3, #1
   286a0:	str	r3, [fp, #-92]	; 0xffffffa4
   286a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   286a8:	cmp	r3, #0
   286ac:	beq	28708 <flatcc_builder_embed_buffer@@Base+0x1fc>
   286b0:	ldr	r2, [fp, #-96]	; 0xffffffa0
   286b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   286b8:	add	r3, r2, r3
   286bc:	str	r3, [fp, #-96]	; 0xffffffa0
   286c0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   286c4:	add	r3, r3, #1
   286c8:	lsl	r3, r3, #3
   286cc:	sub	r2, fp, #12
   286d0:	add	r3, r2, r3
   286d4:	ldr	r2, [pc, #92]	; 28738 <flatcc_builder_embed_buffer@@Base+0x22c>
   286d8:	ldr	r2, [r4, r2]
   286dc:	str	r2, [r3, #-84]	; 0xffffffac
   286e0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   286e4:	add	r3, r3, #1
   286e8:	lsl	r3, r3, #3
   286ec:	sub	r2, fp, #12
   286f0:	add	r3, r2, r3
   286f4:	ldr	r2, [fp, #-20]	; 0xffffffec
   286f8:	str	r2, [r3, #-80]	; 0xffffffb0
   286fc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   28700:	add	r3, r3, #1
   28704:	str	r3, [fp, #-92]	; 0xffffffa4
   28708:	sub	r3, fp, #96	; 0x60
   2870c:	mov	r1, r3
   28710:	ldr	r0, [fp, #-104]	; 0xffffff98
   28714:	bl	28160 <flatcc_builder_get_user_frame_ptr@@Base+0x37c>
   28718:	mov	r3, r0
   2871c:	mov	r0, r3
   28720:	sub	sp, fp, #8
   28724:	ldr	r4, [sp]
   28728:	ldr	fp, [sp, #4]
   2872c:	add	sp, sp, #8
   28730:	pop	{pc}		; (ldr pc, [sp], #4)
   28734:	andeq	r0, r2, r0, asr #21
   28738:	andeq	r0, r0, r0, ror r0

0002873c <flatcc_builder_create_buffer@@Base>:
   2873c:	str	r4, [sp, #-12]!
   28740:	str	fp, [sp, #4]
   28744:	str	lr, [sp, #8]
   28748:	add	fp, sp, #8
   2874c:	sub	sp, sp, #132	; 0x84
   28750:	str	r0, [fp, #-128]	; 0xffffff80
   28754:	str	r1, [fp, #-132]	; 0xffffff7c
   28758:	str	r3, [fp, #-140]	; 0xffffff74
   2875c:	mov	r3, r2
   28760:	strh	r3, [fp, #-134]	; 0xffffff7a
   28764:	ldr	r4, [pc, #944]	; 28b1c <flatcc_builder_create_buffer@@Base+0x3e0>
   28768:	add	r4, pc, r4
   2876c:	mov	r3, #0
   28770:	str	r3, [fp, #-16]
   28774:	mov	r3, #0
   28778:	str	r3, [fp, #-120]	; 0xffffff88
   2877c:	ldr	r3, [fp, #8]
   28780:	and	r3, r3, #1
   28784:	cmp	r3, #0
   28788:	movne	r3, #1
   2878c:	moveq	r3, #0
   28790:	uxtb	r3, r3
   28794:	str	r3, [fp, #-20]	; 0xffffffec
   28798:	ldr	r3, [fp, #8]
   2879c:	and	r3, r3, #2
   287a0:	cmp	r3, #0
   287a4:	movne	r3, #1
   287a8:	moveq	r3, #0
   287ac:	uxtb	r3, r3
   287b0:	str	r3, [fp, #-24]	; 0xffffffe8
   287b4:	ldrh	r2, [fp, #-134]	; 0xffffff7a
   287b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   287bc:	add	r1, fp, #4
   287c0:	ldr	r0, [fp, #-128]	; 0xffffff80
   287c4:	bl	2837c <flatcc_builder_get_user_frame_ptr@@Base+0x598>
   287c8:	mov	r3, r0
   287cc:	cmp	r3, #0
   287d0:	beq	287dc <flatcc_builder_create_buffer@@Base+0xa0>
   287d4:	mov	r3, #0
   287d8:	b	28b04 <flatcc_builder_create_buffer@@Base+0x3c8>
   287dc:	ldrh	r3, [fp, #4]
   287e0:	mov	r1, r3
   287e4:	ldr	r0, [fp, #-128]	; 0xffffff80
   287e8:	bl	27a5c <flatcc_builder_clear@@Base+0xc4>
   287ec:	ldr	r3, [fp, #-132]	; 0xffffff7c
   287f0:	cmp	r3, #0
   287f4:	beq	2882c <flatcc_builder_create_buffer@@Base+0xf0>
   287f8:	ldr	r3, [fp, #-132]	; 0xffffff7c
   287fc:	ldr	r3, [r3]
   28800:	str	r3, [fp, #-120]	; 0xffffff88
   28804:	ldr	r3, [fp, #-120]	; 0xffffff88
   28808:	mov	r0, r3
   2880c:	bl	269a0 <main@@Base+0x1b4>
   28810:	mov	r3, r0
   28814:	str	r3, [fp, #-120]	; 0xffffff88
   28818:	ldr	r3, [fp, #-120]	; 0xffffff88
   2881c:	mov	r0, r3
   28820:	bl	26954 <main@@Base+0x168>
   28824:	mov	r3, r0
   28828:	str	r3, [fp, #-120]	; 0xffffff88
   2882c:	ldr	r3, [fp, #-120]	; 0xffffff88
   28830:	cmp	r3, #0
   28834:	beq	28840 <flatcc_builder_create_buffer@@Base+0x104>
   28838:	mov	r3, #4
   2883c:	b	28844 <flatcc_builder_create_buffer@@Base+0x108>
   28840:	mov	r3, #0
   28844:	str	r3, [fp, #-16]
   28848:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2884c:	cmp	r3, #0
   28850:	beq	2885c <flatcc_builder_create_buffer@@Base+0x120>
   28854:	mov	r2, #4
   28858:	b	28860 <flatcc_builder_create_buffer@@Base+0x124>
   2885c:	mov	r2, #0
   28860:	ldr	r3, [fp, #-16]
   28864:	add	r3, r2, r3
   28868:	add	r3, r3, #4
   2886c:	ldrh	r2, [fp, #4]
   28870:	mov	r1, r3
   28874:	ldr	r0, [fp, #-128]	; 0xffffff80
   28878:	bl	280d8 <flatcc_builder_get_user_frame_ptr@@Base+0x2f4>
   2887c:	str	r0, [fp, #-28]	; 0xffffffe4
   28880:	mov	r3, #0
   28884:	str	r3, [fp, #-116]	; 0xffffff8c
   28888:	mov	r3, #0
   2888c:	str	r3, [fp, #-112]	; 0xffffff90
   28890:	ldr	r3, [fp, #-20]	; 0xffffffec
   28894:	cmp	r3, #0
   28898:	bne	288a8 <flatcc_builder_create_buffer@@Base+0x16c>
   2889c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   288a0:	cmp	r3, #0
   288a4:	beq	288f8 <flatcc_builder_create_buffer@@Base+0x1bc>
   288a8:	ldr	r3, [fp, #-116]	; 0xffffff8c
   288ac:	add	r3, r3, #4
   288b0:	str	r3, [fp, #-116]	; 0xffffff8c
   288b4:	ldr	r3, [fp, #-112]	; 0xffffff90
   288b8:	add	r3, r3, #1
   288bc:	lsl	r3, r3, #3
   288c0:	sub	r2, fp, #12
   288c4:	add	r3, r2, r3
   288c8:	sub	r2, fp, #44	; 0x2c
   288cc:	str	r2, [r3, #-104]	; 0xffffff98
   288d0:	ldr	r3, [fp, #-112]	; 0xffffff90
   288d4:	add	r3, r3, #1
   288d8:	lsl	r3, r3, #3
   288dc:	sub	r2, fp, #12
   288e0:	add	r3, r2, r3
   288e4:	mov	r2, #4
   288e8:	str	r2, [r3, #-100]	; 0xffffff9c
   288ec:	ldr	r3, [fp, #-112]	; 0xffffff90
   288f0:	add	r3, r3, #1
   288f4:	str	r3, [fp, #-112]	; 0xffffff90
   288f8:	ldr	r3, [fp, #-116]	; 0xffffff8c
   288fc:	add	r3, r3, #4
   28900:	str	r3, [fp, #-116]	; 0xffffff8c
   28904:	ldr	r3, [fp, #-112]	; 0xffffff90
   28908:	add	r3, r3, #1
   2890c:	lsl	r3, r3, #3
   28910:	sub	r2, fp, #12
   28914:	add	r3, r2, r3
   28918:	sub	r2, fp, #40	; 0x28
   2891c:	str	r2, [r3, #-104]	; 0xffffff98
   28920:	ldr	r3, [fp, #-112]	; 0xffffff90
   28924:	add	r3, r3, #1
   28928:	lsl	r3, r3, #3
   2892c:	sub	r2, fp, #12
   28930:	add	r3, r2, r3
   28934:	mov	r2, #4
   28938:	str	r2, [r3, #-100]	; 0xffffff9c
   2893c:	ldr	r3, [fp, #-112]	; 0xffffff90
   28940:	add	r3, r3, #1
   28944:	str	r3, [fp, #-112]	; 0xffffff90
   28948:	ldr	r3, [fp, #-16]
   2894c:	cmp	r3, #0
   28950:	beq	289a8 <flatcc_builder_create_buffer@@Base+0x26c>
   28954:	ldr	r2, [fp, #-116]	; 0xffffff8c
   28958:	ldr	r3, [fp, #-16]
   2895c:	add	r3, r2, r3
   28960:	str	r3, [fp, #-116]	; 0xffffff8c
   28964:	ldr	r3, [fp, #-112]	; 0xffffff90
   28968:	add	r3, r3, #1
   2896c:	lsl	r3, r3, #3
   28970:	sub	r2, fp, #12
   28974:	add	r3, r2, r3
   28978:	sub	r2, fp, #120	; 0x78
   2897c:	str	r2, [r3, #-104]	; 0xffffff98
   28980:	ldr	r3, [fp, #-112]	; 0xffffff90
   28984:	add	r3, r3, #1
   28988:	lsl	r3, r3, #3
   2898c:	sub	r2, fp, #12
   28990:	add	r3, r2, r3
   28994:	ldr	r2, [fp, #-16]
   28998:	str	r2, [r3, #-100]	; 0xffffff9c
   2899c:	ldr	r3, [fp, #-112]	; 0xffffff90
   289a0:	add	r3, r3, #1
   289a4:	str	r3, [fp, #-112]	; 0xffffff90
   289a8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   289ac:	cmp	r3, #0
   289b0:	beq	28a0c <flatcc_builder_create_buffer@@Base+0x2d0>
   289b4:	ldr	r2, [fp, #-116]	; 0xffffff8c
   289b8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   289bc:	add	r3, r2, r3
   289c0:	str	r3, [fp, #-116]	; 0xffffff8c
   289c4:	ldr	r3, [fp, #-112]	; 0xffffff90
   289c8:	add	r3, r3, #1
   289cc:	lsl	r3, r3, #3
   289d0:	sub	r2, fp, #12
   289d4:	add	r3, r2, r3
   289d8:	ldr	r2, [pc, #320]	; 28b20 <flatcc_builder_create_buffer@@Base+0x3e4>
   289dc:	ldr	r2, [r4, r2]
   289e0:	str	r2, [r3, #-104]	; 0xffffff98
   289e4:	ldr	r3, [fp, #-112]	; 0xffffff90
   289e8:	add	r3, r3, #1
   289ec:	lsl	r3, r3, #3
   289f0:	sub	r2, fp, #12
   289f4:	add	r3, r2, r3
   289f8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   289fc:	str	r2, [r3, #-100]	; 0xffffff9c
   28a00:	ldr	r3, [fp, #-112]	; 0xffffff90
   28a04:	add	r3, r3, #1
   28a08:	str	r3, [fp, #-112]	; 0xffffff90
   28a0c:	ldr	r3, [fp, #-128]	; 0xffffff80
   28a10:	ldr	r3, [r3, #136]	; 0x88
   28a14:	mov	r2, r3
   28a18:	ldr	r3, [fp, #-116]	; 0xffffff8c
   28a1c:	sub	r3, r2, r3
   28a20:	ldr	r2, [fp, #-20]	; 0xffffffec
   28a24:	cmp	r2, #0
   28a28:	bne	28a38 <flatcc_builder_create_buffer@@Base+0x2fc>
   28a2c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   28a30:	cmp	r2, #0
   28a34:	beq	28a40 <flatcc_builder_create_buffer@@Base+0x304>
   28a38:	mov	r2, #4
   28a3c:	b	28a44 <flatcc_builder_create_buffer@@Base+0x308>
   28a40:	mov	r2, #0
   28a44:	add	r3, r2, r3
   28a48:	str	r3, [fp, #-32]	; 0xffffffe0
   28a4c:	ldr	r3, [fp, #-20]	; 0xffffffec
   28a50:	cmp	r3, #0
   28a54:	beq	28a80 <flatcc_builder_create_buffer@@Base+0x344>
   28a58:	ldr	r3, [fp, #-128]	; 0xffffff80
   28a5c:	ldr	r3, [r3, #144]	; 0x90
   28a60:	mov	r2, r3
   28a64:	ldr	r3, [fp, #-32]	; 0xffffffe0
   28a68:	sub	r3, r2, r3
   28a6c:	mov	r0, r3
   28a70:	bl	26954 <main@@Base+0x168>
   28a74:	mov	r3, r0
   28a78:	str	r3, [fp, #-44]	; 0xffffffd4
   28a7c:	b	28aa4 <flatcc_builder_create_buffer@@Base+0x368>
   28a80:	ldr	r3, [fp, #-128]	; 0xffffff80
   28a84:	ldr	r3, [r3, #140]	; 0x8c
   28a88:	mov	r2, r3
   28a8c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   28a90:	sub	r3, r2, r3
   28a94:	mov	r0, r3
   28a98:	bl	26954 <main@@Base+0x168>
   28a9c:	mov	r3, r0
   28aa0:	str	r3, [fp, #-44]	; 0xffffffd4
   28aa4:	ldr	r2, [fp, #-140]	; 0xffffff74
   28aa8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   28aac:	sub	r3, r2, r3
   28ab0:	mov	r0, r3
   28ab4:	bl	26954 <main@@Base+0x168>
   28ab8:	mov	r3, r0
   28abc:	str	r3, [fp, #-40]	; 0xffffffd8
   28ac0:	sub	r3, fp, #116	; 0x74
   28ac4:	mov	r1, r3
   28ac8:	ldr	r0, [fp, #-128]	; 0xffffff80
   28acc:	bl	28160 <flatcc_builder_get_user_frame_ptr@@Base+0x37c>
   28ad0:	str	r0, [fp, #-36]	; 0xffffffdc
   28ad4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   28ad8:	cmp	r3, #0
   28adc:	bne	28b00 <flatcc_builder_create_buffer@@Base+0x3c4>
   28ae0:	ldr	r3, [pc, #60]	; 28b24 <flatcc_builder_create_buffer@@Base+0x3e8>
   28ae4:	add	r3, pc, r3
   28ae8:	mov	r2, #772	; 0x304
   28aec:	ldr	r1, [pc, #52]	; 28b28 <flatcc_builder_create_buffer@@Base+0x3ec>
   28af0:	add	r1, pc, r1
   28af4:	ldr	r0, [pc, #48]	; 28b2c <flatcc_builder_create_buffer@@Base+0x3f0>
   28af8:	add	r0, pc, r0
   28afc:	bl	126ac <__assert_fail@plt>
   28b00:	ldr	r3, [fp, #-36]	; 0xffffffdc
   28b04:	mov	r0, r3
   28b08:	sub	sp, fp, #8
   28b0c:	ldr	r4, [sp]
   28b10:	ldr	fp, [sp, #4]
   28b14:	add	sp, sp, #8
   28b18:	pop	{pc}		; (ldr pc, [sp], #4)
   28b1c:	muleq	r2, r0, r8
   28b20:	andeq	r0, r0, r0, ror r0
   28b24:	muleq	r0, ip, fp
   28b28:	andeq	lr, r0, r4, asr #13
   28b2c:	andeq	lr, r0, ip, lsl r7

00028b30 <flatcc_builder_create_struct@@Base>:
   28b30:	str	r4, [sp, #-12]!
   28b34:	str	fp, [sp, #4]
   28b38:	str	lr, [sp, #8]
   28b3c:	add	fp, sp, #8
   28b40:	sub	sp, sp, #100	; 0x64
   28b44:	str	r0, [fp, #-96]	; 0xffffffa0
   28b48:	str	r1, [fp, #-100]	; 0xffffff9c
   28b4c:	str	r2, [fp, #-104]	; 0xffffff98
   28b50:	strh	r3, [fp, #-106]	; 0xffffff96
   28b54:	ldr	r4, [pc, #340]	; 28cb0 <flatcc_builder_create_struct@@Base+0x180>
   28b58:	add	r4, pc, r4
   28b5c:	ldrh	r3, [fp, #-106]	; 0xffffff96
   28b60:	cmp	r3, #0
   28b64:	bne	28b88 <flatcc_builder_create_struct@@Base+0x58>
   28b68:	ldr	r3, [pc, #324]	; 28cb4 <flatcc_builder_create_struct@@Base+0x184>
   28b6c:	add	r3, pc, r3
   28b70:	movw	r2, #783	; 0x30f
   28b74:	ldr	r1, [pc, #316]	; 28cb8 <flatcc_builder_create_struct@@Base+0x188>
   28b78:	add	r1, pc, r1
   28b7c:	ldr	r0, [pc, #312]	; 28cbc <flatcc_builder_create_struct@@Base+0x18c>
   28b80:	add	r0, pc, r0
   28b84:	bl	126ac <__assert_fail@plt>
   28b88:	ldrh	r3, [fp, #-106]	; 0xffffff96
   28b8c:	mov	r1, r3
   28b90:	ldr	r0, [fp, #-96]	; 0xffffffa0
   28b94:	bl	27a5c <flatcc_builder_clear@@Base+0xc4>
   28b98:	ldrh	r3, [fp, #-106]	; 0xffffff96
   28b9c:	mov	r2, r3
   28ba0:	ldr	r1, [fp, #-104]	; 0xffffff98
   28ba4:	ldr	r0, [fp, #-96]	; 0xffffffa0
   28ba8:	bl	280d8 <flatcc_builder_get_user_frame_ptr@@Base+0x2f4>
   28bac:	str	r0, [fp, #-16]
   28bb0:	mov	r3, #0
   28bb4:	str	r3, [fp, #-88]	; 0xffffffa8
   28bb8:	mov	r3, #0
   28bbc:	str	r3, [fp, #-84]	; 0xffffffac
   28bc0:	ldr	r3, [fp, #-104]	; 0xffffff98
   28bc4:	cmp	r3, #0
   28bc8:	beq	28c20 <flatcc_builder_create_struct@@Base+0xf0>
   28bcc:	ldr	r2, [fp, #-88]	; 0xffffffa8
   28bd0:	ldr	r3, [fp, #-104]	; 0xffffff98
   28bd4:	add	r3, r2, r3
   28bd8:	str	r3, [fp, #-88]	; 0xffffffa8
   28bdc:	ldr	r3, [fp, #-84]	; 0xffffffac
   28be0:	add	r3, r3, #1
   28be4:	lsl	r3, r3, #3
   28be8:	sub	r2, fp, #12
   28bec:	add	r3, r2, r3
   28bf0:	ldr	r2, [fp, #-100]	; 0xffffff9c
   28bf4:	str	r2, [r3, #-76]	; 0xffffffb4
   28bf8:	ldr	r3, [fp, #-84]	; 0xffffffac
   28bfc:	add	r3, r3, #1
   28c00:	lsl	r3, r3, #3
   28c04:	sub	r2, fp, #12
   28c08:	add	r3, r2, r3
   28c0c:	ldr	r2, [fp, #-104]	; 0xffffff98
   28c10:	str	r2, [r3, #-72]	; 0xffffffb8
   28c14:	ldr	r3, [fp, #-84]	; 0xffffffac
   28c18:	add	r3, r3, #1
   28c1c:	str	r3, [fp, #-84]	; 0xffffffac
   28c20:	ldr	r3, [fp, #-16]
   28c24:	cmp	r3, #0
   28c28:	beq	28c84 <flatcc_builder_create_struct@@Base+0x154>
   28c2c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   28c30:	ldr	r3, [fp, #-16]
   28c34:	add	r3, r2, r3
   28c38:	str	r3, [fp, #-88]	; 0xffffffa8
   28c3c:	ldr	r3, [fp, #-84]	; 0xffffffac
   28c40:	add	r3, r3, #1
   28c44:	lsl	r3, r3, #3
   28c48:	sub	r2, fp, #12
   28c4c:	add	r3, r2, r3
   28c50:	ldr	r2, [pc, #104]	; 28cc0 <flatcc_builder_create_struct@@Base+0x190>
   28c54:	ldr	r2, [r4, r2]
   28c58:	str	r2, [r3, #-76]	; 0xffffffb4
   28c5c:	ldr	r3, [fp, #-84]	; 0xffffffac
   28c60:	add	r3, r3, #1
   28c64:	lsl	r3, r3, #3
   28c68:	sub	r2, fp, #12
   28c6c:	add	r3, r2, r3
   28c70:	ldr	r2, [fp, #-16]
   28c74:	str	r2, [r3, #-72]	; 0xffffffb8
   28c78:	ldr	r3, [fp, #-84]	; 0xffffffac
   28c7c:	add	r3, r3, #1
   28c80:	str	r3, [fp, #-84]	; 0xffffffac
   28c84:	sub	r3, fp, #88	; 0x58
   28c88:	mov	r1, r3
   28c8c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   28c90:	bl	28160 <flatcc_builder_get_user_frame_ptr@@Base+0x37c>
   28c94:	mov	r3, r0
   28c98:	mov	r0, r3
   28c9c:	sub	sp, fp, #8
   28ca0:	ldr	r4, [sp]
   28ca4:	ldr	fp, [sp, #4]
   28ca8:	add	sp, sp, #8
   28cac:	pop	{pc}		; (ldr pc, [sp], #4)
   28cb0:	andeq	r0, r2, r0, lsr #9
   28cb4:	andeq	lr, r0, r4, lsr fp
   28cb8:	andeq	lr, r0, ip, lsr r6
   28cbc:	strdeq	lr, [r0], -r8
   28cc0:	andeq	r0, r0, r0, ror r0

00028cc4 <flatcc_builder_start_buffer@@Base>:
   28cc4:	str	r4, [sp, #-12]!
   28cc8:	str	fp, [sp, #4]
   28ccc:	str	lr, [sp, #8]
   28cd0:	add	fp, sp, #8
   28cd4:	sub	sp, sp, #20
   28cd8:	str	r0, [fp, #-16]
   28cdc:	str	r1, [fp, #-20]	; 0xffffffec
   28ce0:	str	r3, [fp, #-28]	; 0xffffffe4
   28ce4:	mov	r3, r2
   28ce8:	strh	r3, [fp, #-22]	; 0xffffffea
   28cec:	ldr	r4, [pc, #312]	; 28e2c <flatcc_builder_start_buffer@@Base+0x168>
   28cf0:	add	r4, pc, r4
   28cf4:	ldr	r3, [fp, #-16]
   28cf8:	ldrh	r3, [r3, #128]	; 0x80
   28cfc:	mov	r1, r3
   28d00:	ldr	r0, [fp, #-16]
   28d04:	bl	27e18 <flatcc_builder_get_user_frame_ptr@@Base+0x34>
   28d08:	mov	r3, r0
   28d0c:	cmp	r3, #0
   28d10:	beq	28d1c <flatcc_builder_start_buffer@@Base+0x58>
   28d14:	mvn	r3, #0
   28d18:	b	28e14 <flatcc_builder_start_buffer@@Base+0x150>
   28d1c:	ldr	r3, [fp, #-16]
   28d20:	mov	r2, #1
   28d24:	strh	r2, [r3, #128]	; 0x80
   28d28:	ldr	r3, [fp, #-16]
   28d2c:	ldr	r3, [r3, #32]
   28d30:	ldr	r2, [fp, #-16]
   28d34:	ldrh	r2, [r2, #132]	; 0x84
   28d38:	strh	r2, [r3, #34]	; 0x22
   28d3c:	ldr	r3, [fp, #-16]
   28d40:	ldrh	r2, [fp, #-22]	; 0xffffffea
   28d44:	strh	r2, [r3, #132]	; 0x84
   28d48:	ldr	r3, [fp, #-16]
   28d4c:	ldr	r3, [r3, #32]
   28d50:	ldr	r2, [fp, #-16]
   28d54:	ldrh	r2, [r2, #164]	; 0xa4
   28d58:	strh	r2, [r3, #32]
   28d5c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   28d60:	uxth	r2, r3
   28d64:	ldr	r3, [fp, #-16]
   28d68:	strh	r2, [r3, #164]	; 0xa4
   28d6c:	ldr	r3, [fp, #-16]
   28d70:	ldr	r3, [r3, #32]
   28d74:	ldr	r2, [fp, #-16]
   28d78:	ldr	r2, [r2, #144]	; 0x90
   28d7c:	str	r2, [r3, #20]
   28d80:	ldr	r3, [fp, #-16]
   28d84:	ldr	r3, [r3, #32]
   28d88:	ldr	r2, [fp, #-16]
   28d8c:	ldr	r2, [r2, #152]	; 0x98
   28d90:	str	r2, [r3, #28]
   28d94:	ldr	r3, [fp, #-16]
   28d98:	ldr	r2, [r3, #136]	; 0x88
   28d9c:	ldr	r3, [fp, #-16]
   28da0:	str	r2, [r3, #144]	; 0x90
   28da4:	ldr	r3, [fp, #-16]
   28da8:	ldr	r3, [r3, #148]	; 0x94
   28dac:	add	r1, r3, #1
   28db0:	ldr	r2, [fp, #-16]
   28db4:	str	r1, [r2, #148]	; 0x94
   28db8:	ldr	r2, [fp, #-16]
   28dbc:	str	r3, [r2, #152]	; 0x98
   28dc0:	ldr	r3, [fp, #-16]
   28dc4:	ldr	r3, [r3, #32]
   28dc8:	ldr	r2, [fp, #-16]
   28dcc:	ldr	r2, [r2, #168]	; 0xa8
   28dd0:	str	r2, [r3, #16]
   28dd4:	ldr	r3, [fp, #-16]
   28dd8:	add	r2, r3, #168	; 0xa8
   28ddc:	ldr	r3, [fp, #-20]	; 0xffffffec
   28de0:	cmp	r3, #0
   28de4:	beq	28df0 <flatcc_builder_start_buffer@@Base+0x12c>
   28de8:	ldr	r3, [fp, #-20]	; 0xffffffec
   28dec:	b	28df8 <flatcc_builder_start_buffer@@Base+0x134>
   28df0:	ldr	r3, [pc, #56]	; 28e30 <flatcc_builder_start_buffer@@Base+0x16c>
   28df4:	ldr	r3, [r4, r3]
   28df8:	ldr	r3, [r3]
   28dfc:	str	r3, [r2]
   28e00:	ldr	r3, [fp, #-16]
   28e04:	ldr	r3, [r3, #32]
   28e08:	mov	r2, #1
   28e0c:	strh	r2, [r3, #14]
   28e10:	mov	r3, #0
   28e14:	mov	r0, r3
   28e18:	sub	sp, fp, #8
   28e1c:	ldr	r4, [sp]
   28e20:	ldr	fp, [sp, #4]
   28e24:	add	sp, sp, #8
   28e28:	pop	{pc}		; (ldr pc, [sp], #4)
   28e2c:	andeq	r0, r2, r8, lsl #6
   28e30:	andeq	r0, r0, r0, ror r0

00028e34 <flatcc_builder_end_buffer@@Base>:
   28e34:	str	fp, [sp, #-8]!
   28e38:	str	lr, [sp, #4]
   28e3c:	add	fp, sp, #4
   28e40:	sub	sp, sp, #24
   28e44:	str	r0, [fp, #-16]
   28e48:	str	r1, [fp, #-20]	; 0xffffffec
   28e4c:	ldr	r3, [fp, #-16]
   28e50:	ldrh	r3, [r3, #164]	; 0xa4
   28e54:	and	r3, r3, #2
   28e58:	str	r3, [fp, #-8]
   28e5c:	ldr	r3, [fp, #-16]
   28e60:	ldr	r3, [r3, #152]	; 0x98
   28e64:	cmp	r3, #0
   28e68:	movne	r3, #1
   28e6c:	moveq	r3, #0
   28e70:	uxtb	r3, r3
   28e74:	mov	r2, r3
   28e78:	ldr	r3, [fp, #-8]
   28e7c:	orr	r3, r3, r2
   28e80:	str	r3, [fp, #-8]
   28e84:	ldr	r3, [fp, #-16]
   28e88:	ldr	r3, [r3, #32]
   28e8c:	ldrh	r3, [r3, #14]
   28e90:	cmp	r3, #1
   28e94:	beq	28eb8 <flatcc_builder_end_buffer@@Base+0x84>
   28e98:	ldr	r3, [pc, #232]	; 28f88 <flatcc_builder_end_buffer@@Base+0x154>
   28e9c:	add	r3, pc, r3
   28ea0:	movw	r2, #838	; 0x346
   28ea4:	ldr	r1, [pc, #224]	; 28f8c <flatcc_builder_end_buffer@@Base+0x158>
   28ea8:	add	r1, pc, r1
   28eac:	ldr	r0, [pc, #220]	; 28f90 <flatcc_builder_end_buffer@@Base+0x15c>
   28eb0:	add	r0, pc, r0
   28eb4:	bl	126ac <__assert_fail@plt>
   28eb8:	ldr	r3, [fp, #-16]
   28ebc:	ldrh	r3, [r3, #132]	; 0x84
   28ec0:	mov	r1, r3
   28ec4:	ldr	r0, [fp, #-16]
   28ec8:	bl	27a5c <flatcc_builder_clear@@Base+0xc4>
   28ecc:	ldr	r3, [fp, #-16]
   28ed0:	add	r1, r3, #168	; 0xa8
   28ed4:	ldr	r3, [fp, #-16]
   28ed8:	ldrh	r0, [r3, #132]	; 0x84
   28edc:	ldr	r3, [fp, #-16]
   28ee0:	ldrh	r3, [r3, #128]	; 0x80
   28ee4:	ldr	r2, [fp, #-8]
   28ee8:	str	r2, [sp, #4]
   28eec:	str	r3, [sp]
   28ef0:	ldr	r3, [fp, #-20]	; 0xffffffec
   28ef4:	mov	r2, r0
   28ef8:	ldr	r0, [fp, #-16]
   28efc:	bl	2873c <flatcc_builder_create_buffer@@Base>
   28f00:	str	r0, [fp, #-12]
   28f04:	ldr	r3, [fp, #-12]
   28f08:	cmp	r3, #0
   28f0c:	bne	28f18 <flatcc_builder_end_buffer@@Base+0xe4>
   28f10:	mov	r3, #0
   28f14:	b	28f74 <flatcc_builder_end_buffer@@Base+0x140>
   28f18:	ldr	r3, [fp, #-16]
   28f1c:	ldr	r3, [r3, #32]
   28f20:	ldr	r2, [r3, #20]
   28f24:	ldr	r3, [fp, #-16]
   28f28:	str	r2, [r3, #144]	; 0x90
   28f2c:	ldr	r3, [fp, #-16]
   28f30:	ldr	r3, [r3, #32]
   28f34:	ldr	r2, [r3, #28]
   28f38:	ldr	r3, [fp, #-16]
   28f3c:	str	r2, [r3, #152]	; 0x98
   28f40:	ldr	r3, [fp, #-16]
   28f44:	ldr	r3, [r3, #32]
   28f48:	ldr	r2, [r3, #16]
   28f4c:	ldr	r3, [fp, #-16]
   28f50:	str	r2, [r3, #168]	; 0xa8
   28f54:	ldr	r3, [fp, #-16]
   28f58:	ldr	r3, [r3, #32]
   28f5c:	ldrh	r2, [r3, #32]
   28f60:	ldr	r3, [fp, #-16]
   28f64:	strh	r2, [r3, #164]	; 0xa4
   28f68:	ldr	r0, [fp, #-16]
   28f6c:	bl	28004 <flatcc_builder_get_user_frame_ptr@@Base+0x220>
   28f70:	ldr	r3, [fp, #-12]
   28f74:	mov	r0, r3
   28f78:	sub	sp, fp, #4
   28f7c:	ldr	fp, [sp]
   28f80:	add	sp, sp, #4
   28f84:	pop	{pc}		; (ldr pc, [sp], #4)
   28f88:	andeq	lr, r0, r4, lsr #16
   28f8c:	andeq	lr, r0, ip, lsl #6
   28f90:	ldrdeq	lr, [r0], -r4

00028f94 <flatcc_builder_start_struct@@Base>:
   28f94:	str	fp, [sp, #-8]!
   28f98:	str	lr, [sp, #4]
   28f9c:	add	fp, sp, #4
   28fa0:	sub	sp, sp, #16
   28fa4:	str	r0, [fp, #-8]
   28fa8:	str	r1, [fp, #-12]
   28fac:	mov	r3, r2
   28fb0:	strh	r3, [fp, #-14]
   28fb4:	ldrh	r3, [fp, #-14]
   28fb8:	mov	r1, r3
   28fbc:	ldr	r0, [fp, #-8]
   28fc0:	bl	27e18 <flatcc_builder_get_user_frame_ptr@@Base+0x34>
   28fc4:	mov	r3, r0
   28fc8:	cmp	r3, #0
   28fcc:	beq	28fd8 <flatcc_builder_start_struct@@Base+0x44>
   28fd0:	mov	r3, #0
   28fd4:	b	29004 <flatcc_builder_start_struct@@Base+0x70>
   28fd8:	ldr	r3, [fp, #-8]
   28fdc:	ldr	r3, [r3, #32]
   28fe0:	mov	r2, #2
   28fe4:	strh	r2, [r3, #14]
   28fe8:	mvn	r1, #3
   28fec:	ldr	r0, [fp, #-8]
   28ff0:	bl	26c78 <flatcc_builder_default_alloc@@Base+0x1d4>
   28ff4:	ldr	r1, [fp, #-12]
   28ff8:	ldr	r0, [fp, #-8]
   28ffc:	bl	26db4 <flatcc_builder_default_alloc@@Base+0x310>
   29000:	mov	r3, r0
   29004:	mov	r0, r3
   29008:	sub	sp, fp, #4
   2900c:	ldr	fp, [sp]
   29010:	add	sp, sp, #4
   29014:	pop	{pc}		; (ldr pc, [sp], #4)

00029018 <flatcc_builder_struct_edit@@Base>:
   29018:	push	{fp}		; (str fp, [sp, #-4]!)
   2901c:	add	fp, sp, #0
   29020:	sub	sp, sp, #12
   29024:	str	r0, [fp, #-8]
   29028:	ldr	r3, [fp, #-8]
   2902c:	ldr	r3, [r3, #16]
   29030:	mov	r0, r3
   29034:	add	sp, fp, #0
   29038:	pop	{fp}		; (ldr fp, [sp], #4)
   2903c:	bx	lr

00029040 <flatcc_builder_end_struct@@Base>:
   29040:	str	fp, [sp, #-8]!
   29044:	str	lr, [sp, #4]
   29048:	add	fp, sp, #4
   2904c:	sub	sp, sp, #16
   29050:	str	r0, [fp, #-16]
   29054:	ldr	r3, [fp, #-16]
   29058:	ldr	r3, [r3, #32]
   2905c:	ldrh	r3, [r3, #14]
   29060:	cmp	r3, #2
   29064:	beq	29088 <flatcc_builder_end_struct@@Base+0x48>
   29068:	ldr	r3, [pc, #112]	; 290e0 <flatcc_builder_end_struct@@Base+0xa0>
   2906c:	add	r3, pc, r3
   29070:	mov	r2, #872	; 0x368
   29074:	ldr	r1, [pc, #104]	; 290e4 <flatcc_builder_end_struct@@Base+0xa4>
   29078:	add	r1, pc, r1
   2907c:	ldr	r0, [pc, #100]	; 290e8 <flatcc_builder_end_struct@@Base+0xa8>
   29080:	add	r0, pc, r0
   29084:	bl	126ac <__assert_fail@plt>
   29088:	ldr	r3, [fp, #-16]
   2908c:	ldr	r1, [r3, #16]
   29090:	ldr	r3, [fp, #-16]
   29094:	ldr	r2, [r3, #20]
   29098:	ldr	r3, [fp, #-16]
   2909c:	ldrh	r3, [r3, #130]	; 0x82
   290a0:	ldr	r0, [fp, #-16]
   290a4:	bl	28b30 <flatcc_builder_create_struct@@Base>
   290a8:	str	r0, [fp, #-8]
   290ac:	ldr	r3, [fp, #-8]
   290b0:	cmp	r3, #0
   290b4:	bne	290c0 <flatcc_builder_end_struct@@Base+0x80>
   290b8:	mov	r3, #0
   290bc:	b	290cc <flatcc_builder_end_struct@@Base+0x8c>
   290c0:	ldr	r0, [fp, #-16]
   290c4:	bl	28004 <flatcc_builder_get_user_frame_ptr@@Base+0x220>
   290c8:	ldr	r3, [fp, #-8]
   290cc:	mov	r0, r3
   290d0:	sub	sp, fp, #4
   290d4:	ldr	fp, [sp]
   290d8:	add	sp, sp, #4
   290dc:	pop	{pc}		; (ldr pc, [sp], #4)
   290e0:	andeq	lr, r0, r0, ror r6
   290e4:	andeq	lr, r0, ip, lsr r1
   290e8:	andeq	lr, r0, r0, lsr r2
   290ec:	str	fp, [sp, #-8]!
   290f0:	str	lr, [sp, #4]
   290f4:	add	fp, sp, #4
   290f8:	sub	sp, sp, #24
   290fc:	str	r0, [fp, #-16]
   29100:	str	r1, [fp, #-20]	; 0xffffffec
   29104:	str	r2, [fp, #-24]	; 0xffffffe8
   29108:	ldr	r3, [fp, #-16]
   2910c:	ldr	r3, [r3, #32]
   29110:	ldr	r3, [r3, #20]
   29114:	str	r3, [fp, #-8]
   29118:	ldr	r2, [fp, #-8]
   2911c:	ldr	r3, [fp, #-20]	; 0xffffffec
   29120:	add	r3, r2, r3
   29124:	str	r3, [fp, #-12]
   29128:	ldr	r2, [fp, #-8]
   2912c:	ldr	r3, [fp, #-12]
   29130:	cmp	r2, r3
   29134:	bhi	29148 <flatcc_builder_end_struct@@Base+0x108>
   29138:	ldr	r2, [fp, #-12]
   2913c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29140:	cmp	r2, r3
   29144:	bls	29190 <flatcc_builder_end_struct@@Base+0x150>
   29148:	ldr	r2, [fp, #-8]
   2914c:	ldr	r3, [fp, #-12]
   29150:	cmp	r2, r3
   29154:	bhi	29168 <flatcc_builder_end_struct@@Base+0x128>
   29158:	ldr	r2, [fp, #-12]
   2915c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29160:	cmp	r2, r3
   29164:	bls	29188 <flatcc_builder_end_struct@@Base+0x148>
   29168:	ldr	r3, [pc, #72]	; 291b8 <flatcc_builder_end_struct@@Base+0x178>
   2916c:	add	r3, pc, r3
   29170:	mov	r2, #892	; 0x37c
   29174:	ldr	r1, [pc, #64]	; 291bc <flatcc_builder_end_struct@@Base+0x17c>
   29178:	add	r1, pc, r1
   2917c:	ldr	r0, [pc, #60]	; 291c0 <flatcc_builder_end_struct@@Base+0x180>
   29180:	add	r0, pc, r0
   29184:	bl	126ac <__assert_fail@plt>
   29188:	mvn	r3, #0
   2918c:	b	291a4 <flatcc_builder_end_struct@@Base+0x164>
   29190:	ldr	r3, [fp, #-16]
   29194:	ldr	r3, [r3, #32]
   29198:	ldr	r2, [fp, #-12]
   2919c:	str	r2, [r3, #20]
   291a0:	mov	r3, #0
   291a4:	mov	r0, r3
   291a8:	sub	sp, fp, #4
   291ac:	ldr	fp, [sp]
   291b0:	add	sp, sp, #4
   291b4:	pop	{pc}		; (ldr pc, [sp], #4)
   291b8:	andeq	lr, r0, ip, lsl #11
   291bc:	andeq	lr, r0, ip, lsr r0
   291c0:	andeq	lr, r0, ip, asr r1

000291c4 <flatcc_builder_extend_vector@@Base>:
   291c4:	str	fp, [sp, #-8]!
   291c8:	str	lr, [sp, #4]
   291cc:	add	fp, sp, #4
   291d0:	sub	sp, sp, #8
   291d4:	str	r0, [fp, #-8]
   291d8:	str	r1, [fp, #-12]
   291dc:	ldr	r3, [fp, #-8]
   291e0:	ldr	r3, [r3, #32]
   291e4:	ldr	r3, [r3, #24]
   291e8:	mov	r2, r3
   291ec:	ldr	r1, [fp, #-12]
   291f0:	ldr	r0, [fp, #-8]
   291f4:	bl	290ec <flatcc_builder_end_struct@@Base+0xac>
   291f8:	mov	r3, r0
   291fc:	cmp	r3, #0
   29200:	beq	2920c <flatcc_builder_extend_vector@@Base+0x48>
   29204:	mov	r3, #0
   29208:	b	29230 <flatcc_builder_extend_vector@@Base+0x6c>
   2920c:	ldr	r3, [fp, #-8]
   29210:	ldr	r3, [r3, #32]
   29214:	ldr	r3, [r3, #16]
   29218:	ldr	r2, [fp, #-12]
   2921c:	mul	r3, r2, r3
   29220:	mov	r1, r3
   29224:	ldr	r0, [fp, #-8]
   29228:	bl	26db4 <flatcc_builder_default_alloc@@Base+0x310>
   2922c:	mov	r3, r0
   29230:	mov	r0, r3
   29234:	sub	sp, fp, #4
   29238:	ldr	fp, [sp]
   2923c:	add	sp, sp, #4
   29240:	pop	{pc}		; (ldr pc, [sp], #4)

00029244 <flatcc_builder_vector_push@@Base>:
   29244:	str	fp, [sp, #-8]!
   29248:	str	lr, [sp, #4]
   2924c:	add	fp, sp, #4
   29250:	sub	sp, sp, #8
   29254:	str	r0, [fp, #-8]
   29258:	str	r1, [fp, #-12]
   2925c:	ldr	r3, [fp, #-8]
   29260:	ldr	r3, [r3, #32]
   29264:	ldrh	r3, [r3, #14]
   29268:	cmp	r3, #4
   2926c:	beq	29290 <flatcc_builder_vector_push@@Base+0x4c>
   29270:	ldr	r3, [pc, #208]	; 29348 <flatcc_builder_vector_push@@Base+0x104>
   29274:	add	r3, pc, r3
   29278:	movw	r2, #907	; 0x38b
   2927c:	ldr	r1, [pc, #200]	; 2934c <flatcc_builder_vector_push@@Base+0x108>
   29280:	add	r1, pc, r1
   29284:	ldr	r0, [pc, #196]	; 29350 <flatcc_builder_vector_push@@Base+0x10c>
   29288:	add	r0, pc, r0
   2928c:	bl	126ac <__assert_fail@plt>
   29290:	ldr	r3, [fp, #-8]
   29294:	ldr	r3, [r3, #32]
   29298:	ldr	r2, [r3, #20]
   2929c:	ldr	r3, [fp, #-8]
   292a0:	ldr	r3, [r3, #32]
   292a4:	ldr	r3, [r3, #24]
   292a8:	cmp	r2, r3
   292ac:	bls	292f8 <flatcc_builder_vector_push@@Base+0xb4>
   292b0:	ldr	r3, [fp, #-8]
   292b4:	ldr	r3, [r3, #32]
   292b8:	ldr	r2, [r3, #20]
   292bc:	ldr	r3, [fp, #-8]
   292c0:	ldr	r3, [r3, #32]
   292c4:	ldr	r3, [r3, #24]
   292c8:	cmp	r2, r3
   292cc:	bls	292f0 <flatcc_builder_vector_push@@Base+0xac>
   292d0:	ldr	r3, [pc, #124]	; 29354 <flatcc_builder_vector_push@@Base+0x110>
   292d4:	add	r3, pc, r3
   292d8:	mov	r2, #908	; 0x38c
   292dc:	ldr	r1, [pc, #116]	; 29358 <flatcc_builder_vector_push@@Base+0x114>
   292e0:	add	r1, pc, r1
   292e4:	ldr	r0, [pc, #112]	; 2935c <flatcc_builder_vector_push@@Base+0x118>
   292e8:	add	r0, pc, r0
   292ec:	bl	126ac <__assert_fail@plt>
   292f0:	mov	r3, #0
   292f4:	b	29334 <flatcc_builder_vector_push@@Base+0xf0>
   292f8:	ldr	r3, [fp, #-8]
   292fc:	ldr	r3, [r3, #32]
   29300:	ldr	r2, [r3, #20]
   29304:	ldr	r3, [fp, #-8]
   29308:	ldr	r3, [r3, #32]
   2930c:	add	r2, r2, #1
   29310:	str	r2, [r3, #20]
   29314:	ldr	r3, [fp, #-8]
   29318:	ldr	r3, [r3, #32]
   2931c:	ldr	r3, [r3, #16]
   29320:	mov	r2, r3
   29324:	ldr	r1, [fp, #-12]
   29328:	ldr	r0, [fp, #-8]
   2932c:	bl	26ec4 <flatcc_builder_default_alloc@@Base+0x420>
   29330:	mov	r3, r0
   29334:	mov	r0, r3
   29338:	sub	sp, fp, #4
   2933c:	ldr	fp, [sp]
   29340:	add	sp, sp, #4
   29344:	pop	{pc}		; (ldr pc, [sp], #4)
   29348:	muleq	r0, r8, r4
   2934c:	andeq	sp, r0, r4, lsr pc
   29350:	andeq	lr, r0, r0, ror r0
   29354:	andeq	lr, r0, r8, lsr r4
   29358:	ldrdeq	sp, [r0], -r4
   2935c:	andeq	lr, r0, ip, lsr r0

00029360 <flatcc_builder_append_vector@@Base>:
   29360:	str	fp, [sp, #-8]!
   29364:	str	lr, [sp, #4]
   29368:	add	fp, sp, #4
   2936c:	sub	sp, sp, #16
   29370:	str	r0, [fp, #-8]
   29374:	str	r1, [fp, #-12]
   29378:	str	r2, [fp, #-16]
   2937c:	ldr	r3, [fp, #-8]
   29380:	ldr	r3, [r3, #32]
   29384:	ldrh	r3, [r3, #14]
   29388:	cmp	r3, #4
   2938c:	beq	293b0 <flatcc_builder_append_vector@@Base+0x50>
   29390:	ldr	r3, [pc, #132]	; 2941c <flatcc_builder_append_vector@@Base+0xbc>
   29394:	add	r3, pc, r3
   29398:	movw	r2, #915	; 0x393
   2939c:	ldr	r1, [pc, #124]	; 29420 <flatcc_builder_append_vector@@Base+0xc0>
   293a0:	add	r1, pc, r1
   293a4:	ldr	r0, [pc, #120]	; 29424 <flatcc_builder_append_vector@@Base+0xc4>
   293a8:	add	r0, pc, r0
   293ac:	bl	126ac <__assert_fail@plt>
   293b0:	ldr	r3, [fp, #-8]
   293b4:	ldr	r3, [r3, #32]
   293b8:	ldr	r3, [r3, #24]
   293bc:	mov	r2, r3
   293c0:	ldr	r1, [fp, #-16]
   293c4:	ldr	r0, [fp, #-8]
   293c8:	bl	290ec <flatcc_builder_end_struct@@Base+0xac>
   293cc:	mov	r3, r0
   293d0:	cmp	r3, #0
   293d4:	beq	293e0 <flatcc_builder_append_vector@@Base+0x80>
   293d8:	mov	r3, #0
   293dc:	b	29408 <flatcc_builder_append_vector@@Base+0xa8>
   293e0:	ldr	r3, [fp, #-8]
   293e4:	ldr	r3, [r3, #32]
   293e8:	ldr	r3, [r3, #16]
   293ec:	ldr	r2, [fp, #-16]
   293f0:	mul	r3, r2, r3
   293f4:	mov	r2, r3
   293f8:	ldr	r1, [fp, #-12]
   293fc:	ldr	r0, [fp, #-8]
   29400:	bl	26ec4 <flatcc_builder_default_alloc@@Base+0x420>
   29404:	mov	r3, r0
   29408:	mov	r0, r3
   2940c:	sub	sp, fp, #4
   29410:	ldr	fp, [sp]
   29414:	add	sp, sp, #4
   29418:	pop	{pc}		; (ldr pc, [sp], #4)
   2941c:	muleq	r0, r4, r3
   29420:	andeq	sp, r0, r4, lsl lr
   29424:	andeq	sp, r0, r0, asr pc

00029428 <flatcc_builder_extend_offset_vector@@Base>:
   29428:	str	fp, [sp, #-8]!
   2942c:	str	lr, [sp, #4]
   29430:	add	fp, sp, #4
   29434:	sub	sp, sp, #8
   29438:	str	r0, [fp, #-8]
   2943c:	str	r1, [fp, #-12]
   29440:	mvn	r2, #-1073741824	; 0xc0000000
   29444:	ldr	r1, [fp, #-12]
   29448:	ldr	r0, [fp, #-8]
   2944c:	bl	290ec <flatcc_builder_end_struct@@Base+0xac>
   29450:	mov	r3, r0
   29454:	cmp	r3, #0
   29458:	beq	29464 <flatcc_builder_extend_offset_vector@@Base+0x3c>
   2945c:	mov	r3, #0
   29460:	b	2947c <flatcc_builder_extend_offset_vector@@Base+0x54>
   29464:	ldr	r3, [fp, #-12]
   29468:	lsl	r3, r3, #2
   2946c:	mov	r1, r3
   29470:	ldr	r0, [fp, #-8]
   29474:	bl	26db4 <flatcc_builder_default_alloc@@Base+0x310>
   29478:	mov	r3, r0
   2947c:	mov	r0, r3
   29480:	sub	sp, fp, #4
   29484:	ldr	fp, [sp]
   29488:	add	sp, sp, #4
   2948c:	pop	{pc}		; (ldr pc, [sp], #4)

00029490 <flatcc_builder_offset_vector_push@@Base>:
   29490:	str	fp, [sp, #-8]!
   29494:	str	lr, [sp, #4]
   29498:	add	fp, sp, #4
   2949c:	sub	sp, sp, #16
   294a0:	str	r0, [fp, #-16]
   294a4:	str	r1, [fp, #-20]	; 0xffffffec
   294a8:	ldr	r3, [fp, #-16]
   294ac:	ldr	r3, [r3, #32]
   294b0:	ldrh	r3, [r3, #14]
   294b4:	cmp	r3, #5
   294b8:	beq	294dc <flatcc_builder_offset_vector_push@@Base+0x4c>
   294bc:	ldr	r3, [pc, #152]	; 2955c <flatcc_builder_offset_vector_push@@Base+0xcc>
   294c0:	add	r3, pc, r3
   294c4:	movw	r2, #934	; 0x3a6
   294c8:	ldr	r1, [pc, #144]	; 29560 <flatcc_builder_offset_vector_push@@Base+0xd0>
   294cc:	add	r1, pc, r1
   294d0:	ldr	r0, [pc, #140]	; 29564 <flatcc_builder_offset_vector_push@@Base+0xd4>
   294d4:	add	r0, pc, r0
   294d8:	bl	126ac <__assert_fail@plt>
   294dc:	ldr	r3, [fp, #-16]
   294e0:	ldr	r3, [r3, #32]
   294e4:	ldr	r3, [r3, #20]
   294e8:	cmn	r3, #-1073741823	; 0xc0000001
   294ec:	bne	294f8 <flatcc_builder_offset_vector_push@@Base+0x68>
   294f0:	mov	r3, #0
   294f4:	b	29548 <flatcc_builder_offset_vector_push@@Base+0xb8>
   294f8:	ldr	r3, [fp, #-16]
   294fc:	ldr	r3, [r3, #32]
   29500:	ldr	r2, [r3, #20]
   29504:	ldr	r3, [fp, #-16]
   29508:	ldr	r3, [r3, #32]
   2950c:	add	r2, r2, #1
   29510:	str	r2, [r3, #20]
   29514:	mov	r1, #4
   29518:	ldr	r0, [fp, #-16]
   2951c:	bl	26db4 <flatcc_builder_default_alloc@@Base+0x310>
   29520:	str	r0, [fp, #-8]
   29524:	ldr	r3, [fp, #-8]
   29528:	cmp	r3, #0
   2952c:	bne	29538 <flatcc_builder_offset_vector_push@@Base+0xa8>
   29530:	mov	r3, #0
   29534:	b	29548 <flatcc_builder_offset_vector_push@@Base+0xb8>
   29538:	ldr	r3, [fp, #-8]
   2953c:	ldr	r2, [fp, #-20]	; 0xffffffec
   29540:	str	r2, [r3]
   29544:	ldr	r3, [fp, #-8]
   29548:	mov	r0, r3
   2954c:	sub	sp, fp, #4
   29550:	ldr	fp, [sp]
   29554:	add	sp, sp, #4
   29558:	pop	{pc}		; (ldr pc, [sp], #4)
   2955c:	andeq	lr, r0, r8, lsl #5
   29560:	andeq	sp, r0, r8, ror #25
   29564:	muleq	r0, r0, lr

00029568 <flatcc_builder_append_offset_vector@@Base>:
   29568:	str	fp, [sp, #-8]!
   2956c:	str	lr, [sp, #4]
   29570:	add	fp, sp, #4
   29574:	sub	sp, sp, #16
   29578:	str	r0, [fp, #-8]
   2957c:	str	r1, [fp, #-12]
   29580:	str	r2, [fp, #-16]
   29584:	ldr	r3, [fp, #-8]
   29588:	ldr	r3, [r3, #32]
   2958c:	ldrh	r3, [r3, #14]
   29590:	cmp	r3, #5
   29594:	beq	295b8 <flatcc_builder_append_offset_vector@@Base+0x50>
   29598:	ldr	r3, [pc, #108]	; 2960c <flatcc_builder_append_offset_vector@@Base+0xa4>
   2959c:	add	r3, pc, r3
   295a0:	mov	r2, #948	; 0x3b4
   295a4:	ldr	r1, [pc, #100]	; 29610 <flatcc_builder_append_offset_vector@@Base+0xa8>
   295a8:	add	r1, pc, r1
   295ac:	ldr	r0, [pc, #96]	; 29614 <flatcc_builder_append_offset_vector@@Base+0xac>
   295b0:	add	r0, pc, r0
   295b4:	bl	126ac <__assert_fail@plt>
   295b8:	mvn	r2, #-1073741824	; 0xc0000000
   295bc:	ldr	r1, [fp, #-16]
   295c0:	ldr	r0, [fp, #-8]
   295c4:	bl	290ec <flatcc_builder_end_struct@@Base+0xac>
   295c8:	mov	r3, r0
   295cc:	cmp	r3, #0
   295d0:	beq	295dc <flatcc_builder_append_offset_vector@@Base+0x74>
   295d4:	mov	r3, #0
   295d8:	b	295f8 <flatcc_builder_append_offset_vector@@Base+0x90>
   295dc:	ldr	r3, [fp, #-16]
   295e0:	lsl	r3, r3, #2
   295e4:	mov	r2, r3
   295e8:	ldr	r1, [fp, #-12]
   295ec:	ldr	r0, [fp, #-8]
   295f0:	bl	26ec4 <flatcc_builder_default_alloc@@Base+0x420>
   295f4:	mov	r3, r0
   295f8:	mov	r0, r3
   295fc:	sub	sp, fp, #4
   29600:	ldr	fp, [sp]
   29604:	add	sp, sp, #4
   29608:	pop	{pc}		; (ldr pc, [sp], #4)
   2960c:	ldrdeq	lr, [r0], -r0
   29610:	andeq	sp, r0, ip, lsl #24
   29614:			; <UNDEFINED> instruction: 0x0000ddb4

00029618 <flatcc_builder_extend_string@@Base>:
   29618:	str	fp, [sp, #-8]!
   2961c:	str	lr, [sp, #4]
   29620:	add	fp, sp, #4
   29624:	sub	sp, sp, #8
   29628:	str	r0, [fp, #-8]
   2962c:	str	r1, [fp, #-12]
   29630:	ldr	r3, [fp, #-8]
   29634:	ldr	r3, [r3, #32]
   29638:	ldrh	r3, [r3, #14]
   2963c:	cmp	r3, #6
   29640:	beq	29664 <flatcc_builder_extend_string@@Base+0x4c>
   29644:	ldr	r3, [pc, #96]	; 296ac <flatcc_builder_extend_string@@Base+0x94>
   29648:	add	r3, pc, r3
   2964c:	movw	r2, #957	; 0x3bd
   29650:	ldr	r1, [pc, #88]	; 296b0 <flatcc_builder_extend_string@@Base+0x98>
   29654:	add	r1, pc, r1
   29658:	ldr	r0, [pc, #84]	; 296b4 <flatcc_builder_extend_string@@Base+0x9c>
   2965c:	add	r0, pc, r0
   29660:	bl	126ac <__assert_fail@plt>
   29664:	mvn	r2, #0
   29668:	ldr	r1, [fp, #-12]
   2966c:	ldr	r0, [fp, #-8]
   29670:	bl	290ec <flatcc_builder_end_struct@@Base+0xac>
   29674:	mov	r3, r0
   29678:	cmp	r3, #0
   2967c:	beq	29688 <flatcc_builder_extend_string@@Base+0x70>
   29680:	mov	r3, #0
   29684:	b	29698 <flatcc_builder_extend_string@@Base+0x80>
   29688:	ldr	r1, [fp, #-12]
   2968c:	ldr	r0, [fp, #-8]
   29690:	bl	26db4 <flatcc_builder_default_alloc@@Base+0x310>
   29694:	mov	r3, r0
   29698:	mov	r0, r3
   2969c:	sub	sp, fp, #4
   296a0:	ldr	fp, [sp]
   296a4:	add	sp, sp, #4
   296a8:	pop	{pc}		; (ldr pc, [sp], #4)
   296ac:	andeq	lr, r0, r8, asr #2
   296b0:	andeq	sp, r0, r0, ror #22
   296b4:	andeq	sp, r0, ip, lsr sp

000296b8 <flatcc_builder_append_string@@Base>:
   296b8:	str	fp, [sp, #-8]!
   296bc:	str	lr, [sp, #4]
   296c0:	add	fp, sp, #4
   296c4:	sub	sp, sp, #16
   296c8:	str	r0, [fp, #-8]
   296cc:	str	r1, [fp, #-12]
   296d0:	str	r2, [fp, #-16]
   296d4:	ldr	r3, [fp, #-8]
   296d8:	ldr	r3, [r3, #32]
   296dc:	ldrh	r3, [r3, #14]
   296e0:	cmp	r3, #6
   296e4:	beq	29708 <flatcc_builder_append_string@@Base+0x50>
   296e8:	ldr	r3, [pc, #100]	; 29754 <flatcc_builder_append_string@@Base+0x9c>
   296ec:	add	r3, pc, r3
   296f0:	movw	r2, #966	; 0x3c6
   296f4:	ldr	r1, [pc, #92]	; 29758 <flatcc_builder_append_string@@Base+0xa0>
   296f8:	add	r1, pc, r1
   296fc:	ldr	r0, [pc, #88]	; 2975c <flatcc_builder_append_string@@Base+0xa4>
   29700:	add	r0, pc, r0
   29704:	bl	126ac <__assert_fail@plt>
   29708:	mvn	r2, #0
   2970c:	ldr	r1, [fp, #-16]
   29710:	ldr	r0, [fp, #-8]
   29714:	bl	290ec <flatcc_builder_end_struct@@Base+0xac>
   29718:	mov	r3, r0
   2971c:	cmp	r3, #0
   29720:	beq	2972c <flatcc_builder_append_string@@Base+0x74>
   29724:	mov	r3, #0
   29728:	b	29740 <flatcc_builder_append_string@@Base+0x88>
   2972c:	ldr	r2, [fp, #-16]
   29730:	ldr	r1, [fp, #-12]
   29734:	ldr	r0, [fp, #-8]
   29738:	bl	26ec4 <flatcc_builder_default_alloc@@Base+0x420>
   2973c:	mov	r3, r0
   29740:	mov	r0, r3
   29744:	sub	sp, fp, #4
   29748:	ldr	fp, [sp]
   2974c:	add	sp, sp, #4
   29750:	pop	{pc}		; (ldr pc, [sp], #4)
   29754:	andeq	lr, r0, r4, asr #1
   29758:			; <UNDEFINED> instruction: 0x0000dabc
   2975c:	muleq	r0, r8, ip

00029760 <flatcc_builder_append_string_str@@Base>:
   29760:	str	fp, [sp, #-8]!
   29764:	str	lr, [sp, #4]
   29768:	add	fp, sp, #4
   2976c:	sub	sp, sp, #8
   29770:	str	r0, [fp, #-8]
   29774:	str	r1, [fp, #-12]
   29778:	ldr	r0, [fp, #-12]
   2977c:	bl	12628 <strlen@plt>
   29780:	mov	r3, r0
   29784:	mov	r2, r3
   29788:	ldr	r1, [fp, #-12]
   2978c:	ldr	r0, [fp, #-8]
   29790:	bl	296b8 <flatcc_builder_append_string@@Base>
   29794:	mov	r3, r0
   29798:	mov	r0, r3
   2979c:	sub	sp, fp, #4
   297a0:	ldr	fp, [sp]
   297a4:	add	sp, sp, #4
   297a8:	pop	{pc}		; (ldr pc, [sp], #4)

000297ac <flatcc_builder_append_string_strn@@Base>:
   297ac:	str	fp, [sp, #-8]!
   297b0:	str	lr, [sp, #4]
   297b4:	add	fp, sp, #4
   297b8:	sub	sp, sp, #16
   297bc:	str	r0, [fp, #-8]
   297c0:	str	r1, [fp, #-12]
   297c4:	str	r2, [fp, #-16]
   297c8:	ldr	r1, [fp, #-16]
   297cc:	ldr	r0, [fp, #-12]
   297d0:	bl	26a44 <main@@Base+0x258>
   297d4:	mov	r3, r0
   297d8:	mov	r2, r3
   297dc:	ldr	r1, [fp, #-12]
   297e0:	ldr	r0, [fp, #-8]
   297e4:	bl	296b8 <flatcc_builder_append_string@@Base>
   297e8:	mov	r3, r0
   297ec:	mov	r0, r3
   297f0:	sub	sp, fp, #4
   297f4:	ldr	fp, [sp]
   297f8:	add	sp, sp, #4
   297fc:	pop	{pc}		; (ldr pc, [sp], #4)

00029800 <flatcc_builder_truncate_vector@@Base>:
   29800:	str	fp, [sp, #-8]!
   29804:	str	lr, [sp, #4]
   29808:	add	fp, sp, #4
   2980c:	sub	sp, sp, #8
   29810:	str	r0, [fp, #-8]
   29814:	str	r1, [fp, #-12]
   29818:	ldr	r3, [fp, #-8]
   2981c:	ldr	r3, [r3, #32]
   29820:	ldrh	r3, [r3, #14]
   29824:	cmp	r3, #4
   29828:	beq	2984c <flatcc_builder_truncate_vector@@Base+0x4c>
   2982c:	ldr	r3, [pc, #200]	; 298fc <flatcc_builder_truncate_vector@@Base+0xfc>
   29830:	add	r3, pc, r3
   29834:	movw	r2, #985	; 0x3d9
   29838:	ldr	r1, [pc, #192]	; 29900 <flatcc_builder_truncate_vector@@Base+0x100>
   2983c:	add	r1, pc, r1
   29840:	ldr	r0, [pc, #188]	; 29904 <flatcc_builder_truncate_vector@@Base+0x104>
   29844:	add	r0, pc, r0
   29848:	bl	126ac <__assert_fail@plt>
   2984c:	ldr	r3, [fp, #-8]
   29850:	ldr	r3, [r3, #32]
   29854:	ldr	r3, [r3, #20]
   29858:	ldr	r2, [fp, #-12]
   2985c:	cmp	r2, r3
   29860:	bls	298a4 <flatcc_builder_truncate_vector@@Base+0xa4>
   29864:	ldr	r3, [fp, #-8]
   29868:	ldr	r3, [r3, #32]
   2986c:	ldr	r3, [r3, #20]
   29870:	ldr	r2, [fp, #-12]
   29874:	cmp	r2, r3
   29878:	bls	2989c <flatcc_builder_truncate_vector@@Base+0x9c>
   2987c:	ldr	r3, [pc, #132]	; 29908 <flatcc_builder_truncate_vector@@Base+0x108>
   29880:	add	r3, pc, r3
   29884:	movw	r2, #986	; 0x3da
   29888:	ldr	r1, [pc, #124]	; 2990c <flatcc_builder_truncate_vector@@Base+0x10c>
   2988c:	add	r1, pc, r1
   29890:	ldr	r0, [pc, #120]	; 29910 <flatcc_builder_truncate_vector@@Base+0x110>
   29894:	add	r0, pc, r0
   29898:	bl	126ac <__assert_fail@plt>
   2989c:	mvn	r3, #0
   298a0:	b	298e8 <flatcc_builder_truncate_vector@@Base+0xe8>
   298a4:	ldr	r3, [fp, #-8]
   298a8:	ldr	r3, [r3, #32]
   298ac:	ldr	r1, [r3, #20]
   298b0:	ldr	r3, [fp, #-8]
   298b4:	ldr	r3, [r3, #32]
   298b8:	ldr	r2, [fp, #-12]
   298bc:	sub	r2, r1, r2
   298c0:	str	r2, [r3, #20]
   298c4:	ldr	r3, [fp, #-8]
   298c8:	ldr	r3, [r3, #32]
   298cc:	ldr	r3, [r3, #16]
   298d0:	ldr	r2, [fp, #-12]
   298d4:	mul	r3, r2, r3
   298d8:	mov	r1, r3
   298dc:	ldr	r0, [fp, #-8]
   298e0:	bl	26e5c <flatcc_builder_default_alloc@@Base+0x3b8>
   298e4:	mov	r3, #0
   298e8:	mov	r0, r3
   298ec:	sub	sp, fp, #4
   298f0:	ldr	fp, [sp]
   298f4:	add	sp, sp, #4
   298f8:	pop	{pc}		; (ldr pc, [sp], #4)
   298fc:	andeq	sp, r0, r0, lsr #31
   29900:	andeq	sp, r0, r8, ror r9
   29904:			; <UNDEFINED> instruction: 0x0000dab4
   29908:	andeq	sp, r0, r0, asr pc
   2990c:	andeq	sp, r0, r8, lsr #18
   29910:	andeq	sp, r0, r0, lsr fp

00029914 <flatcc_builder_truncate_offset_vector@@Base>:
   29914:	str	fp, [sp, #-8]!
   29918:	str	lr, [sp, #4]
   2991c:	add	fp, sp, #4
   29920:	sub	sp, sp, #8
   29924:	str	r0, [fp, #-8]
   29928:	str	r1, [fp, #-12]
   2992c:	ldr	r3, [fp, #-8]
   29930:	ldr	r3, [r3, #32]
   29934:	ldrh	r3, [r3, #14]
   29938:	cmp	r3, #5
   2993c:	beq	29960 <flatcc_builder_truncate_offset_vector@@Base+0x4c>
   29940:	ldr	r3, [pc, #200]	; 29a10 <flatcc_builder_truncate_offset_vector@@Base+0xfc>
   29944:	add	r3, pc, r3
   29948:	movw	r2, #994	; 0x3e2
   2994c:	ldr	r1, [pc, #192]	; 29a14 <flatcc_builder_truncate_offset_vector@@Base+0x100>
   29950:	add	r1, pc, r1
   29954:	ldr	r0, [pc, #188]	; 29a18 <flatcc_builder_truncate_offset_vector@@Base+0x104>
   29958:	add	r0, pc, r0
   2995c:	bl	126ac <__assert_fail@plt>
   29960:	ldr	r3, [fp, #-8]
   29964:	ldr	r3, [r3, #32]
   29968:	ldr	r3, [r3, #20]
   2996c:	ldr	r2, [fp, #-12]
   29970:	cmp	r2, r3
   29974:	bls	299b8 <flatcc_builder_truncate_offset_vector@@Base+0xa4>
   29978:	ldr	r3, [fp, #-8]
   2997c:	ldr	r3, [r3, #32]
   29980:	ldr	r3, [r3, #20]
   29984:	ldr	r2, [fp, #-12]
   29988:	cmp	r2, r3
   2998c:	bls	299b0 <flatcc_builder_truncate_offset_vector@@Base+0x9c>
   29990:	ldr	r3, [pc, #132]	; 29a1c <flatcc_builder_truncate_offset_vector@@Base+0x108>
   29994:	add	r3, pc, r3
   29998:	movw	r2, #995	; 0x3e3
   2999c:	ldr	r1, [pc, #124]	; 29a20 <flatcc_builder_truncate_offset_vector@@Base+0x10c>
   299a0:	add	r1, pc, r1
   299a4:	ldr	r0, [pc, #120]	; 29a24 <flatcc_builder_truncate_offset_vector@@Base+0x110>
   299a8:	add	r0, pc, r0
   299ac:	bl	126ac <__assert_fail@plt>
   299b0:	mvn	r3, #0
   299b4:	b	299fc <flatcc_builder_truncate_offset_vector@@Base+0xe8>
   299b8:	ldr	r3, [fp, #-8]
   299bc:	ldr	r3, [r3, #32]
   299c0:	ldr	r1, [r3, #20]
   299c4:	ldr	r3, [fp, #-8]
   299c8:	ldr	r3, [r3, #32]
   299cc:	ldr	r2, [fp, #-12]
   299d0:	sub	r2, r1, r2
   299d4:	str	r2, [r3, #20]
   299d8:	ldr	r3, [fp, #-8]
   299dc:	ldr	r3, [r3, #32]
   299e0:	ldr	r3, [r3, #16]
   299e4:	ldr	r2, [fp, #-12]
   299e8:	mul	r3, r2, r3
   299ec:	mov	r1, r3
   299f0:	ldr	r0, [fp, #-8]
   299f4:	bl	26e5c <flatcc_builder_default_alloc@@Base+0x3b8>
   299f8:	mov	r3, #0
   299fc:	mov	r0, r3
   29a00:	sub	sp, fp, #4
   29a04:	ldr	fp, [sp]
   29a08:	add	sp, sp, #4
   29a0c:	pop	{pc}		; (ldr pc, [sp], #4)
   29a10:	andeq	sp, r0, ip, lsr #29
   29a14:	andeq	sp, r0, r4, ror #16
   29a18:	andeq	sp, r0, ip, lsl #20
   29a1c:	andeq	sp, r0, ip, asr lr
   29a20:	andeq	sp, r0, r4, lsl r8
   29a24:	andeq	sp, r0, r0, asr #20

00029a28 <flatcc_builder_truncate_string@@Base>:
   29a28:	str	fp, [sp, #-8]!
   29a2c:	str	lr, [sp, #4]
   29a30:	add	fp, sp, #4
   29a34:	sub	sp, sp, #8
   29a38:	str	r0, [fp, #-8]
   29a3c:	str	r1, [fp, #-12]
   29a40:	ldr	r3, [fp, #-8]
   29a44:	ldr	r3, [r3, #32]
   29a48:	ldrh	r3, [r3, #14]
   29a4c:	cmp	r3, #6
   29a50:	beq	29a74 <flatcc_builder_truncate_string@@Base+0x4c>
   29a54:	ldr	r3, [pc, #180]	; 29b10 <flatcc_builder_truncate_string@@Base+0xe8>
   29a58:	add	r3, pc, r3
   29a5c:	movw	r2, #1003	; 0x3eb
   29a60:	ldr	r1, [pc, #172]	; 29b14 <flatcc_builder_truncate_string@@Base+0xec>
   29a64:	add	r1, pc, r1
   29a68:	ldr	r0, [pc, #168]	; 29b18 <flatcc_builder_truncate_string@@Base+0xf0>
   29a6c:	add	r0, pc, r0
   29a70:	bl	126ac <__assert_fail@plt>
   29a74:	ldr	r3, [fp, #-8]
   29a78:	ldr	r3, [r3, #32]
   29a7c:	ldr	r3, [r3, #20]
   29a80:	ldr	r2, [fp, #-12]
   29a84:	cmp	r2, r3
   29a88:	bls	29acc <flatcc_builder_truncate_string@@Base+0xa4>
   29a8c:	ldr	r3, [fp, #-8]
   29a90:	ldr	r3, [r3, #32]
   29a94:	ldr	r3, [r3, #20]
   29a98:	ldr	r2, [fp, #-12]
   29a9c:	cmp	r2, r3
   29aa0:	bls	29ac4 <flatcc_builder_truncate_string@@Base+0x9c>
   29aa4:	ldr	r3, [pc, #112]	; 29b1c <flatcc_builder_truncate_string@@Base+0xf4>
   29aa8:	add	r3, pc, r3
   29aac:	mov	r2, #1004	; 0x3ec
   29ab0:	ldr	r1, [pc, #104]	; 29b20 <flatcc_builder_truncate_string@@Base+0xf8>
   29ab4:	add	r1, pc, r1
   29ab8:	ldr	r0, [pc, #100]	; 29b24 <flatcc_builder_truncate_string@@Base+0xfc>
   29abc:	add	r0, pc, r0
   29ac0:	bl	126ac <__assert_fail@plt>
   29ac4:	mvn	r3, #0
   29ac8:	b	29afc <flatcc_builder_truncate_string@@Base+0xd4>
   29acc:	ldr	r3, [fp, #-8]
   29ad0:	ldr	r3, [r3, #32]
   29ad4:	ldr	r1, [r3, #20]
   29ad8:	ldr	r3, [fp, #-8]
   29adc:	ldr	r3, [r3, #32]
   29ae0:	ldr	r2, [fp, #-12]
   29ae4:	sub	r2, r1, r2
   29ae8:	str	r2, [r3, #20]
   29aec:	ldr	r1, [fp, #-12]
   29af0:	ldr	r0, [fp, #-8]
   29af4:	bl	26e5c <flatcc_builder_default_alloc@@Base+0x3b8>
   29af8:	mov	r3, #0
   29afc:	mov	r0, r3
   29b00:	sub	sp, fp, #4
   29b04:	ldr	fp, [sp]
   29b08:	add	sp, sp, #4
   29b0c:	pop	{pc}		; (ldr pc, [sp], #4)
   29b10:	andeq	sp, r0, r0, asr #27
   29b14:	andeq	sp, r0, r0, asr r7
   29b18:	andeq	sp, r0, ip, lsr #18
   29b1c:	andeq	sp, r0, r0, ror sp
   29b20:	andeq	sp, r0, r0, lsl #14
   29b24:	andeq	sp, r0, r8, ror #18

00029b28 <flatcc_builder_start_vector@@Base>:
   29b28:	str	fp, [sp, #-8]!
   29b2c:	str	lr, [sp, #4]
   29b30:	add	fp, sp, #4
   29b34:	sub	sp, sp, #16
   29b38:	str	r0, [fp, #-8]
   29b3c:	str	r1, [fp, #-12]
   29b40:	str	r3, [fp, #-20]	; 0xffffffec
   29b44:	mov	r3, r2
   29b48:	strh	r3, [fp, #-14]
   29b4c:	sub	r3, fp, #14
   29b50:	mov	r1, #4
   29b54:	mov	r0, r3
   29b58:	bl	27aa4 <flatcc_builder_clear@@Base+0x10c>
   29b5c:	ldrh	r3, [fp, #-14]
   29b60:	mov	r1, r3
   29b64:	ldr	r0, [fp, #-8]
   29b68:	bl	27e18 <flatcc_builder_get_user_frame_ptr@@Base+0x34>
   29b6c:	mov	r3, r0
   29b70:	cmp	r3, #0
   29b74:	beq	29b80 <flatcc_builder_start_vector@@Base+0x58>
   29b78:	mvn	r3, #0
   29b7c:	b	29bd0 <flatcc_builder_start_vector@@Base+0xa8>
   29b80:	ldr	r3, [fp, #-8]
   29b84:	ldr	r3, [r3, #32]
   29b88:	ldr	r2, [fp, #-12]
   29b8c:	str	r2, [r3, #16]
   29b90:	ldr	r3, [fp, #-8]
   29b94:	ldr	r3, [r3, #32]
   29b98:	mov	r2, #0
   29b9c:	str	r2, [r3, #20]
   29ba0:	ldr	r3, [fp, #-8]
   29ba4:	ldr	r3, [r3, #32]
   29ba8:	ldr	r2, [fp, #-20]	; 0xffffffec
   29bac:	str	r2, [r3, #24]
   29bb0:	ldr	r3, [fp, #-8]
   29bb4:	ldr	r3, [r3, #32]
   29bb8:	mov	r2, #4
   29bbc:	strh	r2, [r3, #14]
   29bc0:	mvn	r1, #3
   29bc4:	ldr	r0, [fp, #-8]
   29bc8:	bl	26c78 <flatcc_builder_default_alloc@@Base+0x1d4>
   29bcc:	mov	r3, #0
   29bd0:	mov	r0, r3
   29bd4:	sub	sp, fp, #4
   29bd8:	ldr	fp, [sp]
   29bdc:	add	sp, sp, #4
   29be0:	pop	{pc}		; (ldr pc, [sp], #4)

00029be4 <flatcc_builder_start_offset_vector@@Base>:
   29be4:	str	fp, [sp, #-8]!
   29be8:	str	lr, [sp, #4]
   29bec:	add	fp, sp, #4
   29bf0:	sub	sp, sp, #8
   29bf4:	str	r0, [fp, #-8]
   29bf8:	mov	r1, #4
   29bfc:	ldr	r0, [fp, #-8]
   29c00:	bl	27e18 <flatcc_builder_get_user_frame_ptr@@Base+0x34>
   29c04:	mov	r3, r0
   29c08:	cmp	r3, #0
   29c0c:	beq	29c18 <flatcc_builder_start_offset_vector@@Base+0x34>
   29c10:	mvn	r3, #0
   29c14:	b	29c58 <flatcc_builder_start_offset_vector@@Base+0x74>
   29c18:	ldr	r3, [fp, #-8]
   29c1c:	ldr	r3, [r3, #32]
   29c20:	mov	r2, #4
   29c24:	str	r2, [r3, #16]
   29c28:	ldr	r3, [fp, #-8]
   29c2c:	ldr	r3, [r3, #32]
   29c30:	mov	r2, #0
   29c34:	str	r2, [r3, #20]
   29c38:	ldr	r3, [fp, #-8]
   29c3c:	ldr	r3, [r3, #32]
   29c40:	mov	r2, #5
   29c44:	strh	r2, [r3, #14]
   29c48:	mvn	r1, #3
   29c4c:	ldr	r0, [fp, #-8]
   29c50:	bl	26c78 <flatcc_builder_default_alloc@@Base+0x1d4>
   29c54:	mov	r3, #0
   29c58:	mov	r0, r3
   29c5c:	sub	sp, fp, #4
   29c60:	ldr	fp, [sp]
   29c64:	add	sp, sp, #4
   29c68:	pop	{pc}		; (ldr pc, [sp], #4)

00029c6c <flatcc_builder_create_offset_vector@@Base>:
   29c6c:	str	fp, [sp, #-8]!
   29c70:	str	lr, [sp, #4]
   29c74:	add	fp, sp, #4
   29c78:	sub	sp, sp, #24
   29c7c:	str	r0, [fp, #-16]
   29c80:	str	r1, [fp, #-20]	; 0xffffffec
   29c84:	str	r2, [fp, #-24]	; 0xffffffe8
   29c88:	ldr	r0, [fp, #-16]
   29c8c:	bl	29be4 <flatcc_builder_start_offset_vector@@Base>
   29c90:	mov	r3, r0
   29c94:	cmp	r3, #0
   29c98:	beq	29ca4 <flatcc_builder_create_offset_vector@@Base+0x38>
   29c9c:	mov	r3, #0
   29ca0:	b	29cec <flatcc_builder_create_offset_vector@@Base+0x80>
   29ca4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   29ca8:	ldr	r0, [fp, #-16]
   29cac:	bl	29428 <flatcc_builder_extend_offset_vector@@Base>
   29cb0:	str	r0, [fp, #-8]
   29cb4:	ldr	r3, [fp, #-8]
   29cb8:	cmp	r3, #0
   29cbc:	bne	29cc8 <flatcc_builder_create_offset_vector@@Base+0x5c>
   29cc0:	mov	r3, #0
   29cc4:	b	29cec <flatcc_builder_create_offset_vector@@Base+0x80>
   29cc8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29ccc:	lsl	r3, r3, #2
   29cd0:	mov	r2, r3
   29cd4:	ldr	r1, [fp, #-20]	; 0xffffffec
   29cd8:	ldr	r0, [fp, #-8]
   29cdc:	bl	125a4 <memcpy@plt>
   29ce0:	ldr	r0, [fp, #-16]
   29ce4:	bl	2b2ec <flatcc_builder_end_offset_vector@@Base>
   29ce8:	mov	r3, r0
   29cec:	mov	r0, r3
   29cf0:	sub	sp, fp, #4
   29cf4:	ldr	fp, [sp]
   29cf8:	add	sp, sp, #4
   29cfc:	pop	{pc}		; (ldr pc, [sp], #4)

00029d00 <flatcc_builder_start_string@@Base>:
   29d00:	str	fp, [sp, #-8]!
   29d04:	str	lr, [sp, #4]
   29d08:	add	fp, sp, #4
   29d0c:	sub	sp, sp, #8
   29d10:	str	r0, [fp, #-8]
   29d14:	mov	r1, #1
   29d18:	ldr	r0, [fp, #-8]
   29d1c:	bl	27e18 <flatcc_builder_get_user_frame_ptr@@Base+0x34>
   29d20:	mov	r3, r0
   29d24:	cmp	r3, #0
   29d28:	beq	29d34 <flatcc_builder_start_string@@Base+0x34>
   29d2c:	mvn	r3, #0
   29d30:	b	29d74 <flatcc_builder_start_string@@Base+0x74>
   29d34:	ldr	r3, [fp, #-8]
   29d38:	ldr	r3, [r3, #32]
   29d3c:	mov	r2, #1
   29d40:	str	r2, [r3, #16]
   29d44:	ldr	r3, [fp, #-8]
   29d48:	ldr	r3, [r3, #32]
   29d4c:	mov	r2, #0
   29d50:	str	r2, [r3, #20]
   29d54:	ldr	r3, [fp, #-8]
   29d58:	ldr	r3, [r3, #32]
   29d5c:	mov	r2, #6
   29d60:	strh	r2, [r3, #14]
   29d64:	mvn	r1, #3
   29d68:	ldr	r0, [fp, #-8]
   29d6c:	bl	26c78 <flatcc_builder_default_alloc@@Base+0x1d4>
   29d70:	mov	r3, #0
   29d74:	mov	r0, r3
   29d78:	sub	sp, fp, #4
   29d7c:	ldr	fp, [sp]
   29d80:	add	sp, sp, #4
   29d84:	pop	{pc}		; (ldr pc, [sp], #4)

00029d88 <flatcc_builder_reserve_table@@Base>:
   29d88:	str	fp, [sp, #-8]!
   29d8c:	str	lr, [sp, #4]
   29d90:	add	fp, sp, #4
   29d94:	sub	sp, sp, #8
   29d98:	str	r0, [fp, #-8]
   29d9c:	str	r1, [fp, #-12]
   29da0:	ldr	r3, [fp, #-12]
   29da4:	cmp	r3, #0
   29da8:	bge	29dcc <flatcc_builder_reserve_table@@Base+0x44>
   29dac:	ldr	r3, [pc, #60]	; 29df0 <flatcc_builder_reserve_table@@Base+0x68>
   29db0:	add	r3, pc, r3
   29db4:	movw	r2, #1065	; 0x429
   29db8:	ldr	r1, [pc, #52]	; 29df4 <flatcc_builder_reserve_table@@Base+0x6c>
   29dbc:	add	r1, pc, r1
   29dc0:	ldr	r0, [pc, #48]	; 29df8 <flatcc_builder_reserve_table@@Base+0x70>
   29dc4:	add	r0, pc, r0
   29dc8:	bl	126ac <__assert_fail@plt>
   29dcc:	ldr	r1, [fp, #-12]
   29dd0:	ldr	r0, [fp, #-8]
   29dd4:	bl	27254 <flatcc_builder_default_alloc@@Base+0x7b0>
   29dd8:	mov	r3, r0
   29ddc:	mov	r0, r3
   29de0:	sub	sp, fp, #4
   29de4:	ldr	fp, [sp]
   29de8:	add	sp, sp, #4
   29dec:	pop	{pc}		; (ldr pc, [sp], #4)
   29df0:	andeq	sp, r0, r8, lsl #21
   29df4:	strdeq	sp, [r0], -r8
   29df8:	andeq	sp, r0, r4, lsl #13

00029dfc <flatcc_builder_start_table@@Base>:
   29dfc:	str	fp, [sp, #-8]!
   29e00:	str	lr, [sp, #4]
   29e04:	add	fp, sp, #4
   29e08:	sub	sp, sp, #8
   29e0c:	str	r0, [fp, #-8]
   29e10:	str	r1, [fp, #-12]
   29e14:	mov	r1, #4
   29e18:	ldr	r0, [fp, #-8]
   29e1c:	bl	27e18 <flatcc_builder_get_user_frame_ptr@@Base+0x34>
   29e20:	mov	r3, r0
   29e24:	cmp	r3, #0
   29e28:	beq	29e34 <flatcc_builder_start_table@@Base+0x38>
   29e2c:	mvn	r3, #0
   29e30:	b	29f14 <flatcc_builder_start_table@@Base+0x118>
   29e34:	ldr	r3, [fp, #-8]
   29e38:	ldr	r3, [r3, #4]
   29e3c:	mov	r1, r3
   29e40:	ldr	r3, [fp, #-8]
   29e44:	ldr	r3, [r3, #52]	; 0x34
   29e48:	mov	r2, r3
   29e4c:	ldr	r3, [fp, #-8]
   29e50:	ldr	r3, [r3, #32]
   29e54:	sub	r2, r1, r2
   29e58:	str	r2, [r3, #16]
   29e5c:	ldr	r3, [fp, #-8]
   29e60:	ldr	r3, [r3]
   29e64:	mov	r1, r3
   29e68:	ldr	r3, [fp, #-8]
   29e6c:	ldr	r3, [r3, #76]	; 0x4c
   29e70:	mov	r2, r3
   29e74:	ldr	r3, [fp, #-8]
   29e78:	ldr	r3, [r3, #32]
   29e7c:	sub	r2, r1, r2
   29e80:	str	r2, [r3, #20]
   29e84:	ldr	r3, [fp, #-8]
   29e88:	ldr	r3, [r3, #32]
   29e8c:	ldr	r2, [fp, #-8]
   29e90:	ldr	r2, [r2, #12]
   29e94:	str	r2, [r3, #24]
   29e98:	ldr	r3, [fp, #-8]
   29e9c:	ldr	r3, [r3, #32]
   29ea0:	ldr	r2, [fp, #-8]
   29ea4:	ldrh	r2, [r2, #8]
   29ea8:	strh	r2, [r3, #28]
   29eac:	ldr	r3, [fp, #-8]
   29eb0:	mov	r2, #0
   29eb4:	str	r2, [r3, #12]
   29eb8:	ldr	r2, [fp, #-8]
   29ebc:	movw	r3, #15186	; 0x3b52
   29ec0:	movt	r3, #12137	; 0x2f69
   29ec4:	str	r3, [r2, #12]
   29ec8:	ldr	r3, [fp, #-8]
   29ecc:	mov	r2, #0
   29ed0:	strh	r2, [r3, #8]
   29ed4:	ldr	r3, [fp, #-8]
   29ed8:	ldr	r3, [r3, #32]
   29edc:	mov	r2, #3
   29ee0:	strh	r2, [r3, #14]
   29ee4:	ldr	r1, [fp, #-12]
   29ee8:	ldr	r0, [fp, #-8]
   29eec:	bl	27254 <flatcc_builder_default_alloc@@Base+0x7b0>
   29ef0:	mov	r3, r0
   29ef4:	cmp	r3, #0
   29ef8:	beq	29f04 <flatcc_builder_start_table@@Base+0x108>
   29efc:	mvn	r3, #0
   29f00:	b	29f14 <flatcc_builder_start_table@@Base+0x118>
   29f04:	movw	r1, #65532	; 0xfffc
   29f08:	ldr	r0, [fp, #-8]
   29f0c:	bl	26c78 <flatcc_builder_default_alloc@@Base+0x1d4>
   29f10:	mov	r3, #0
   29f14:	mov	r0, r3
   29f18:	sub	sp, fp, #4
   29f1c:	ldr	fp, [sp]
   29f20:	add	sp, sp, #4
   29f24:	pop	{pc}		; (ldr pc, [sp], #4)

00029f28 <flatcc_builder_create_vtable@@Base>:
   29f28:	str	fp, [sp, #-8]!
   29f2c:	str	lr, [sp, #4]
   29f30:	add	fp, sp, #4
   29f34:	sub	sp, sp, #96	; 0x60
   29f38:	str	r0, [fp, #-88]	; 0xffffffa8
   29f3c:	str	r1, [fp, #-92]	; 0xffffffa4
   29f40:	mov	r3, r2
   29f44:	strh	r3, [fp, #-94]	; 0xffffffa2
   29f48:	mov	r3, #0
   29f4c:	str	r3, [fp, #-80]	; 0xffffffb0
   29f50:	mov	r3, #0
   29f54:	str	r3, [fp, #-76]	; 0xffffffb4
   29f58:	ldrh	r3, [fp, #-94]	; 0xffffffa2
   29f5c:	cmp	r3, #0
   29f60:	beq	29fb8 <flatcc_builder_create_vtable@@Base+0x90>
   29f64:	ldr	r2, [fp, #-80]	; 0xffffffb0
   29f68:	ldrh	r3, [fp, #-94]	; 0xffffffa2
   29f6c:	add	r3, r2, r3
   29f70:	str	r3, [fp, #-80]	; 0xffffffb0
   29f74:	ldr	r3, [fp, #-76]	; 0xffffffb4
   29f78:	add	r3, r3, #1
   29f7c:	lsl	r3, r3, #3
   29f80:	sub	r2, fp, #4
   29f84:	add	r3, r2, r3
   29f88:	ldr	r2, [fp, #-92]	; 0xffffffa4
   29f8c:	str	r2, [r3, #-76]	; 0xffffffb4
   29f90:	ldr	r3, [fp, #-76]	; 0xffffffb4
   29f94:	ldrh	r2, [fp, #-94]	; 0xffffffa2
   29f98:	add	r3, r3, #1
   29f9c:	lsl	r3, r3, #3
   29fa0:	sub	r1, fp, #4
   29fa4:	add	r3, r1, r3
   29fa8:	str	r2, [r3, #-72]	; 0xffffffb8
   29fac:	ldr	r3, [fp, #-76]	; 0xffffffb4
   29fb0:	add	r3, r3, #1
   29fb4:	str	r3, [fp, #-76]	; 0xffffffb4
   29fb8:	ldr	r3, [fp, #-88]	; 0xffffffa8
   29fbc:	ldr	r3, [r3, #152]	; 0x98
   29fc0:	cmp	r3, #0
   29fc4:	bne	2a000 <flatcc_builder_create_vtable@@Base+0xd8>
   29fc8:	ldr	r3, [fp, #-88]	; 0xffffffa8
   29fcc:	ldr	r3, [r3, #180]	; 0xb4
   29fd0:	cmp	r3, #0
   29fd4:	bne	2a000 <flatcc_builder_create_vtable@@Base+0xd8>
   29fd8:	sub	r3, fp, #80	; 0x50
   29fdc:	mov	r1, r3
   29fe0:	ldr	r0, [fp, #-88]	; 0xffffffa8
   29fe4:	bl	2826c <flatcc_builder_get_user_frame_ptr@@Base+0x488>
   29fe8:	str	r0, [fp, #-8]
   29fec:	ldr	r3, [fp, #-8]
   29ff0:	cmp	r3, #0
   29ff4:	bne	2a034 <flatcc_builder_create_vtable@@Base+0x10c>
   29ff8:	mov	r3, #0
   29ffc:	b	2a038 <flatcc_builder_create_vtable@@Base+0x110>
   2a000:	sub	r3, fp, #80	; 0x50
   2a004:	mov	r1, r3
   2a008:	ldr	r0, [fp, #-88]	; 0xffffffa8
   2a00c:	bl	28160 <flatcc_builder_get_user_frame_ptr@@Base+0x37c>
   2a010:	str	r0, [fp, #-8]
   2a014:	ldr	r3, [fp, #-8]
   2a018:	cmp	r3, #0
   2a01c:	bne	2a028 <flatcc_builder_create_vtable@@Base+0x100>
   2a020:	mov	r3, #0
   2a024:	b	2a038 <flatcc_builder_create_vtable@@Base+0x110>
   2a028:	ldr	r3, [fp, #-8]
   2a02c:	add	r3, r3, #1
   2a030:	str	r3, [fp, #-8]
   2a034:	ldr	r3, [fp, #-8]
   2a038:	mov	r0, r3
   2a03c:	sub	sp, fp, #4
   2a040:	ldr	fp, [sp]
   2a044:	add	sp, sp, #4
   2a048:	pop	{pc}		; (ldr pc, [sp], #4)

0002a04c <flatcc_builder_create_cached_vtable@@Base>:
   2a04c:	str	fp, [sp, #-8]!
   2a050:	str	lr, [sp, #4]
   2a054:	add	fp, sp, #4
   2a058:	sub	sp, sp, #48	; 0x30
   2a05c:	str	r0, [fp, #-32]	; 0xffffffe0
   2a060:	str	r1, [fp, #-36]	; 0xffffffdc
   2a064:	str	r3, [fp, #-44]	; 0xffffffd4
   2a068:	mov	r3, r2
   2a06c:	strh	r3, [fp, #-38]	; 0xffffffda
   2a070:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2a074:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a078:	bl	274dc <flatcc_builder_default_alloc@@Base+0xa38>
   2a07c:	str	r0, [fp, #-20]	; 0xffffffec
   2a080:	ldr	r3, [fp, #-20]	; 0xffffffec
   2a084:	cmp	r3, #0
   2a088:	bne	2a094 <flatcc_builder_create_cached_vtable@@Base+0x48>
   2a08c:	mov	r3, #0
   2a090:	b	2a358 <flatcc_builder_create_cached_vtable@@Base+0x30c>
   2a094:	ldr	r3, [fp, #-20]	; 0xffffffec
   2a098:	str	r3, [fp, #-12]
   2a09c:	ldr	r3, [fp, #-12]
   2a0a0:	ldr	r3, [r3]
   2a0a4:	str	r3, [fp, #-16]
   2a0a8:	mov	r3, #0
   2a0ac:	str	r3, [fp, #-8]
   2a0b0:	b	2a1b4 <flatcc_builder_create_cached_vtable@@Base+0x168>
   2a0b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2a0b8:	ldr	r2, [r3, #100]	; 0x64
   2a0bc:	ldr	r3, [fp, #-16]
   2a0c0:	add	r3, r2, r3
   2a0c4:	str	r3, [fp, #-24]	; 0xffffffe8
   2a0c8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2a0cc:	ldr	r2, [r3, #68]	; 0x44
   2a0d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a0d4:	ldr	r3, [r3, #8]
   2a0d8:	add	r3, r2, r3
   2a0dc:	str	r3, [fp, #-28]	; 0xffffffe4
   2a0e0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2a0e4:	ldrh	r3, [r3]
   2a0e8:	ldrh	r2, [fp, #-38]	; 0xffffffda
   2a0ec:	cmp	r2, r3
   2a0f0:	bne	2a114 <flatcc_builder_create_cached_vtable@@Base+0xc8>
   2a0f4:	ldrh	r3, [fp, #-38]	; 0xffffffda
   2a0f8:	mov	r2, r3
   2a0fc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2a100:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2a104:	bl	125bc <memcmp@plt>
   2a108:	mov	r3, r0
   2a10c:	cmp	r3, #0
   2a110:	beq	2a130 <flatcc_builder_create_cached_vtable@@Base+0xe4>
   2a114:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a118:	add	r3, r3, #12
   2a11c:	str	r3, [fp, #-12]
   2a120:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a124:	ldr	r3, [r3, #12]
   2a128:	str	r3, [fp, #-16]
   2a12c:	b	2a1b4 <flatcc_builder_create_cached_vtable@@Base+0x168>
   2a130:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a134:	ldr	r2, [r3, #4]
   2a138:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2a13c:	ldr	r3, [r3, #152]	; 0x98
   2a140:	cmp	r2, r3
   2a144:	beq	2a16c <flatcc_builder_create_cached_vtable@@Base+0x120>
   2a148:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a14c:	str	r3, [fp, #-8]
   2a150:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a154:	add	r3, r3, #12
   2a158:	str	r3, [fp, #-12]
   2a15c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a160:	ldr	r3, [r3, #12]
   2a164:	str	r3, [fp, #-16]
   2a168:	b	2a1b4 <flatcc_builder_create_cached_vtable@@Base+0x168>
   2a16c:	ldr	r2, [fp, #-12]
   2a170:	ldr	r3, [fp, #-20]	; 0xffffffec
   2a174:	cmp	r2, r3
   2a178:	beq	2a1a8 <flatcc_builder_create_cached_vtable@@Base+0x15c>
   2a17c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a180:	ldr	r2, [r3, #12]
   2a184:	ldr	r3, [fp, #-12]
   2a188:	str	r2, [r3]
   2a18c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2a190:	ldr	r2, [r3]
   2a194:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a198:	str	r2, [r3, #12]
   2a19c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2a1a0:	ldr	r2, [fp, #-16]
   2a1a4:	str	r2, [r3]
   2a1a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a1ac:	ldr	r3, [r3]
   2a1b0:	b	2a358 <flatcc_builder_create_cached_vtable@@Base+0x30c>
   2a1b4:	ldr	r3, [fp, #-16]
   2a1b8:	cmp	r3, #0
   2a1bc:	bne	2a0b4 <flatcc_builder_create_cached_vtable@@Base+0x68>
   2a1c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2a1c4:	ldr	r2, [r3, #124]	; 0x7c
   2a1c8:	mov	r3, #0
   2a1cc:	str	r3, [sp]
   2a1d0:	mov	r3, #16
   2a1d4:	mov	r1, #6
   2a1d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a1dc:	bl	27168 <flatcc_builder_default_alloc@@Base+0x6c4>
   2a1e0:	str	r0, [fp, #-24]	; 0xffffffe8
   2a1e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a1e8:	cmp	r3, #0
   2a1ec:	bne	2a1f8 <flatcc_builder_create_cached_vtable@@Base+0x1ac>
   2a1f0:	mov	r3, #0
   2a1f4:	b	2a358 <flatcc_builder_create_cached_vtable@@Base+0x30c>
   2a1f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2a1fc:	ldr	r3, [r3, #124]	; 0x7c
   2a200:	str	r3, [fp, #-16]
   2a204:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2a208:	ldr	r3, [r3, #124]	; 0x7c
   2a20c:	add	r2, r3, #16
   2a210:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2a214:	str	r2, [r3, #124]	; 0x7c
   2a218:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2a21c:	ldr	r2, [r3, #152]	; 0x98
   2a220:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a224:	str	r2, [r3, #4]
   2a228:	ldr	r3, [fp, #-20]	; 0xffffffec
   2a22c:	ldr	r2, [r3]
   2a230:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a234:	str	r2, [r3, #12]
   2a238:	ldr	r3, [fp, #-20]	; 0xffffffec
   2a23c:	ldr	r2, [fp, #-16]
   2a240:	str	r2, [r3]
   2a244:	ldrh	r3, [fp, #-38]	; 0xffffffda
   2a248:	mov	r2, r3
   2a24c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2a250:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a254:	bl	29f28 <flatcc_builder_create_vtable@@Base>
   2a258:	mov	r2, r0
   2a25c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a260:	str	r2, [r3]
   2a264:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a268:	ldr	r3, [r3]
   2a26c:	cmp	r3, #0
   2a270:	bne	2a27c <flatcc_builder_create_cached_vtable@@Base+0x230>
   2a274:	mov	r3, #0
   2a278:	b	2a358 <flatcc_builder_create_cached_vtable@@Base+0x30c>
   2a27c:	ldr	r3, [fp, #-8]
   2a280:	cmp	r3, #0
   2a284:	beq	2a29c <flatcc_builder_create_cached_vtable@@Base+0x250>
   2a288:	ldr	r3, [fp, #-8]
   2a28c:	ldr	r2, [r3, #8]
   2a290:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a294:	str	r2, [r3, #8]
   2a298:	b	2a350 <flatcc_builder_create_cached_vtable@@Base+0x304>
   2a29c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2a2a0:	ldr	r3, [r3, #172]	; 0xac
   2a2a4:	cmp	r3, #0
   2a2a8:	beq	2a2d8 <flatcc_builder_create_cached_vtable@@Base+0x28c>
   2a2ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2a2b0:	ldr	r2, [r3, #172]	; 0xac
   2a2b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2a2b8:	ldr	r1, [r3, #120]	; 0x78
   2a2bc:	ldrh	r3, [fp, #-38]	; 0xffffffda
   2a2c0:	add	r3, r1, r3
   2a2c4:	cmp	r2, r3
   2a2c8:	bcs	2a2d8 <flatcc_builder_create_cached_vtable@@Base+0x28c>
   2a2cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a2d0:	bl	27560 <flatcc_builder_flush_vtable_cache@@Base>
   2a2d4:	b	2a350 <flatcc_builder_create_cached_vtable@@Base+0x304>
   2a2d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2a2dc:	ldr	r2, [r3, #120]	; 0x78
   2a2e0:	ldrh	r1, [fp, #-38]	; 0xffffffda
   2a2e4:	mov	r3, #0
   2a2e8:	str	r3, [sp]
   2a2ec:	mov	r3, r1
   2a2f0:	mov	r1, #2
   2a2f4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a2f8:	bl	27168 <flatcc_builder_default_alloc@@Base+0x6c4>
   2a2fc:	str	r0, [fp, #-28]	; 0xffffffe4
   2a300:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2a304:	cmp	r3, #0
   2a308:	bne	2a314 <flatcc_builder_create_cached_vtable@@Base+0x2c8>
   2a30c:	mvn	r3, #0
   2a310:	b	2a358 <flatcc_builder_create_cached_vtable@@Base+0x30c>
   2a314:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2a318:	ldr	r2, [r3, #120]	; 0x78
   2a31c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a320:	str	r2, [r3, #8]
   2a324:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2a328:	ldr	r2, [r3, #120]	; 0x78
   2a32c:	ldrh	r3, [fp, #-38]	; 0xffffffda
   2a330:	add	r2, r2, r3
   2a334:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2a338:	str	r2, [r3, #120]	; 0x78
   2a33c:	ldrh	r3, [fp, #-38]	; 0xffffffda
   2a340:	mov	r2, r3
   2a344:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2a348:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2a34c:	bl	125a4 <memcpy@plt>
   2a350:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a354:	ldr	r3, [r3]
   2a358:	mov	r0, r3
   2a35c:	sub	sp, fp, #4
   2a360:	ldr	fp, [sp]
   2a364:	add	sp, sp, #4
   2a368:	pop	{pc}		; (ldr pc, [sp], #4)

0002a36c <flatcc_builder_create_table@@Base>:
   2a36c:	str	r4, [sp, #-12]!
   2a370:	str	fp, [sp, #4]
   2a374:	str	lr, [sp, #8]
   2a378:	add	fp, sp, #8
   2a37c:	sub	sp, sp, #124	; 0x7c
   2a380:	str	r0, [fp, #-120]	; 0xffffff88
   2a384:	str	r1, [fp, #-124]	; 0xffffff84
   2a388:	str	r2, [fp, #-128]	; 0xffffff80
   2a38c:	strh	r3, [fp, #-130]	; 0xffffff7e
   2a390:	ldr	r4, [pc, #740]	; 2a67c <flatcc_builder_create_table@@Base+0x310>
   2a394:	add	r4, pc, r4
   2a398:	ldr	r3, [fp, #8]
   2a39c:	cmp	r3, #0
   2a3a0:	bge	2a3c4 <flatcc_builder_create_table@@Base+0x58>
   2a3a4:	ldr	r3, [pc, #724]	; 2a680 <flatcc_builder_create_table@@Base+0x314>
   2a3a8:	add	r3, pc, r3
   2a3ac:	movw	r2, #1237	; 0x4d5
   2a3b0:	ldr	r1, [pc, #716]	; 2a684 <flatcc_builder_create_table@@Base+0x318>
   2a3b4:	add	r1, pc, r1
   2a3b8:	ldr	r0, [pc, #712]	; 2a688 <flatcc_builder_create_table@@Base+0x31c>
   2a3bc:	add	r0, pc, r0
   2a3c0:	bl	126ac <__assert_fail@plt>
   2a3c4:	ldr	r3, [fp, #12]
   2a3c8:	and	r3, r3, #1
   2a3cc:	cmp	r3, #0
   2a3d0:	bne	2a3f4 <flatcc_builder_create_table@@Base+0x88>
   2a3d4:	ldr	r3, [pc, #688]	; 2a68c <flatcc_builder_create_table@@Base+0x320>
   2a3d8:	add	r3, pc, r3
   2a3dc:	movw	r2, #1243	; 0x4db
   2a3e0:	ldr	r1, [pc, #680]	; 2a690 <flatcc_builder_create_table@@Base+0x324>
   2a3e4:	add	r1, pc, r1
   2a3e8:	ldr	r0, [pc, #676]	; 2a694 <flatcc_builder_create_table@@Base+0x328>
   2a3ec:	add	r0, pc, r0
   2a3f0:	bl	126ac <__assert_fail@plt>
   2a3f4:	sub	r3, fp, #130	; 0x82
   2a3f8:	mov	r1, #4
   2a3fc:	mov	r0, r3
   2a400:	bl	27aa4 <flatcc_builder_clear@@Base+0x10c>
   2a404:	ldrh	r3, [fp, #-130]	; 0xffffff7e
   2a408:	mov	r1, r3
   2a40c:	ldr	r0, [fp, #-120]	; 0xffffff88
   2a410:	bl	27a5c <flatcc_builder_clear@@Base+0xc4>
   2a414:	ldrh	r3, [fp, #-130]	; 0xffffff7e
   2a418:	mov	r2, r3
   2a41c:	ldr	r1, [fp, #-128]	; 0xffffff80
   2a420:	ldr	r0, [fp, #-120]	; 0xffffff88
   2a424:	bl	280d8 <flatcc_builder_get_user_frame_ptr@@Base+0x2f4>
   2a428:	str	r0, [fp, #-20]	; 0xffffffec
   2a42c:	ldr	r3, [fp, #-120]	; 0xffffff88
   2a430:	ldr	r3, [r3, #136]	; 0x88
   2a434:	mov	r1, r3
   2a438:	ldr	r2, [fp, #-20]	; 0xffffffec
   2a43c:	ldr	r3, [fp, #-128]	; 0xffffff80
   2a440:	add	r3, r2, r3
   2a444:	sub	r3, r1, r3
   2a448:	sub	r3, r3, #4
   2a44c:	str	r3, [fp, #-24]	; 0xffffffe8
   2a450:	ldr	r3, [fp, #12]
   2a454:	sub	r3, r3, #1
   2a458:	str	r3, [fp, #-28]	; 0xffffffe4
   2a45c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2a460:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2a464:	sub	r3, r2, r3
   2a468:	str	r3, [fp, #-32]	; 0xffffffe0
   2a46c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2a470:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2a474:	sub	r3, r2, r3
   2a478:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2a47c:	cmp	r2, r3
   2a480:	beq	2a48c <flatcc_builder_create_table@@Base+0x120>
   2a484:	mvn	r3, #0
   2a488:	b	2a664 <flatcc_builder_create_table@@Base+0x2f8>
   2a48c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a490:	bl	26954 <main@@Base+0x168>
   2a494:	mov	r3, r0
   2a498:	str	r3, [fp, #-44]	; 0xffffffd4
   2a49c:	mov	r3, #0
   2a4a0:	str	r3, [fp, #-16]
   2a4a4:	b	2a51c <flatcc_builder_create_table@@Base+0x1b0>
   2a4a8:	ldr	r3, [fp, #-16]
   2a4ac:	lsl	r3, r3, #1
   2a4b0:	ldr	r2, [fp, #4]
   2a4b4:	add	r3, r2, r3
   2a4b8:	ldrh	r3, [r3]
   2a4bc:	mov	r2, r3
   2a4c0:	ldr	r3, [fp, #-124]	; 0xffffff84
   2a4c4:	add	r3, r2, r3
   2a4c8:	str	r3, [fp, #-36]	; 0xffffffdc
   2a4cc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2a4d0:	ldr	r2, [r3]
   2a4d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a4d8:	sub	r3, r2, r3
   2a4dc:	ldr	r2, [fp, #-16]
   2a4e0:	lsl	r2, r2, #1
   2a4e4:	ldr	r1, [fp, #4]
   2a4e8:	add	r2, r1, r2
   2a4ec:	ldrh	r2, [r2]
   2a4f0:	sub	r3, r3, r2
   2a4f4:	sub	r3, r3, #4
   2a4f8:	str	r3, [fp, #-40]	; 0xffffffd8
   2a4fc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2a500:	bl	26954 <main@@Base+0x168>
   2a504:	mov	r2, r0
   2a508:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2a50c:	str	r2, [r3]
   2a510:	ldr	r3, [fp, #-16]
   2a514:	add	r3, r3, #1
   2a518:	str	r3, [fp, #-16]
   2a51c:	ldr	r2, [fp, #-16]
   2a520:	ldr	r3, [fp, #8]
   2a524:	cmp	r2, r3
   2a528:	blt	2a4a8 <flatcc_builder_create_table@@Base+0x13c>
   2a52c:	mov	r3, #0
   2a530:	str	r3, [fp, #-116]	; 0xffffff8c
   2a534:	mov	r3, #0
   2a538:	str	r3, [fp, #-112]	; 0xffffff90
   2a53c:	ldr	r3, [fp, #-116]	; 0xffffff8c
   2a540:	add	r3, r3, #4
   2a544:	str	r3, [fp, #-116]	; 0xffffff8c
   2a548:	ldr	r3, [fp, #-112]	; 0xffffff90
   2a54c:	add	r3, r3, #1
   2a550:	lsl	r3, r3, #3
   2a554:	sub	r2, fp, #12
   2a558:	add	r3, r2, r3
   2a55c:	sub	r2, fp, #44	; 0x2c
   2a560:	str	r2, [r3, #-104]	; 0xffffff98
   2a564:	ldr	r3, [fp, #-112]	; 0xffffff90
   2a568:	add	r3, r3, #1
   2a56c:	lsl	r3, r3, #3
   2a570:	sub	r2, fp, #12
   2a574:	add	r3, r2, r3
   2a578:	mov	r2, #4
   2a57c:	str	r2, [r3, #-100]	; 0xffffff9c
   2a580:	ldr	r3, [fp, #-112]	; 0xffffff90
   2a584:	add	r3, r3, #1
   2a588:	str	r3, [fp, #-112]	; 0xffffff90
   2a58c:	ldr	r3, [fp, #-128]	; 0xffffff80
   2a590:	cmp	r3, #0
   2a594:	beq	2a5ec <flatcc_builder_create_table@@Base+0x280>
   2a598:	ldr	r2, [fp, #-116]	; 0xffffff8c
   2a59c:	ldr	r3, [fp, #-128]	; 0xffffff80
   2a5a0:	add	r3, r2, r3
   2a5a4:	str	r3, [fp, #-116]	; 0xffffff8c
   2a5a8:	ldr	r3, [fp, #-112]	; 0xffffff90
   2a5ac:	add	r3, r3, #1
   2a5b0:	lsl	r3, r3, #3
   2a5b4:	sub	r2, fp, #12
   2a5b8:	add	r3, r2, r3
   2a5bc:	ldr	r2, [fp, #-124]	; 0xffffff84
   2a5c0:	str	r2, [r3, #-104]	; 0xffffff98
   2a5c4:	ldr	r3, [fp, #-112]	; 0xffffff90
   2a5c8:	add	r3, r3, #1
   2a5cc:	lsl	r3, r3, #3
   2a5d0:	sub	r2, fp, #12
   2a5d4:	add	r3, r2, r3
   2a5d8:	ldr	r2, [fp, #-128]	; 0xffffff80
   2a5dc:	str	r2, [r3, #-100]	; 0xffffff9c
   2a5e0:	ldr	r3, [fp, #-112]	; 0xffffff90
   2a5e4:	add	r3, r3, #1
   2a5e8:	str	r3, [fp, #-112]	; 0xffffff90
   2a5ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   2a5f0:	cmp	r3, #0
   2a5f4:	beq	2a650 <flatcc_builder_create_table@@Base+0x2e4>
   2a5f8:	ldr	r2, [fp, #-116]	; 0xffffff8c
   2a5fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   2a600:	add	r3, r2, r3
   2a604:	str	r3, [fp, #-116]	; 0xffffff8c
   2a608:	ldr	r3, [fp, #-112]	; 0xffffff90
   2a60c:	add	r3, r3, #1
   2a610:	lsl	r3, r3, #3
   2a614:	sub	r2, fp, #12
   2a618:	add	r3, r2, r3
   2a61c:	ldr	r2, [pc, #116]	; 2a698 <flatcc_builder_create_table@@Base+0x32c>
   2a620:	ldr	r2, [r4, r2]
   2a624:	str	r2, [r3, #-104]	; 0xffffff98
   2a628:	ldr	r3, [fp, #-112]	; 0xffffff90
   2a62c:	add	r3, r3, #1
   2a630:	lsl	r3, r3, #3
   2a634:	sub	r2, fp, #12
   2a638:	add	r3, r2, r3
   2a63c:	ldr	r2, [fp, #-20]	; 0xffffffec
   2a640:	str	r2, [r3, #-100]	; 0xffffff9c
   2a644:	ldr	r3, [fp, #-112]	; 0xffffff90
   2a648:	add	r3, r3, #1
   2a64c:	str	r3, [fp, #-112]	; 0xffffff90
   2a650:	sub	r3, fp, #116	; 0x74
   2a654:	mov	r1, r3
   2a658:	ldr	r0, [fp, #-120]	; 0xffffff88
   2a65c:	bl	28160 <flatcc_builder_get_user_frame_ptr@@Base+0x37c>
   2a660:	mov	r3, r0
   2a664:	mov	r0, r3
   2a668:	sub	sp, fp, #8
   2a66c:	ldr	r4, [sp]
   2a670:	ldr	fp, [sp, #4]
   2a674:	add	sp, sp, #8
   2a678:	pop	{pc}		; (ldr pc, [sp], #4)
   2a67c:	andeq	lr, r1, r4, ror #24
   2a680:			; <UNDEFINED> instruction: 0x0000d4b0
   2a684:	andeq	ip, r0, r0, lsl #28
   2a688:	muleq	r0, r8, r0
   2a68c:	andeq	sp, r0, r0, lsl #9
   2a690:	ldrdeq	ip, [r0], -r0
   2a694:	andeq	sp, r0, ip, ror r0
   2a698:	andeq	r0, r0, r0, ror r0

0002a69c <flatcc_builder_check_required_field@@Base>:
   2a69c:	str	fp, [sp, #-8]!
   2a6a0:	str	lr, [sp, #4]
   2a6a4:	add	fp, sp, #4
   2a6a8:	sub	sp, sp, #8
   2a6ac:	str	r0, [fp, #-8]
   2a6b0:	mov	r3, r1
   2a6b4:	strh	r3, [fp, #-10]
   2a6b8:	ldr	r3, [fp, #-8]
   2a6bc:	ldr	r3, [r3, #32]
   2a6c0:	ldrh	r3, [r3, #14]
   2a6c4:	cmp	r3, #3
   2a6c8:	beq	2a6ec <flatcc_builder_check_required_field@@Base+0x50>
   2a6cc:	ldr	r3, [pc, #108]	; 2a740 <flatcc_builder_check_required_field@@Base+0xa4>
   2a6d0:	add	r3, pc, r3
   2a6d4:	movw	r2, #1272	; 0x4f8
   2a6d8:	ldr	r1, [pc, #100]	; 2a744 <flatcc_builder_check_required_field@@Base+0xa8>
   2a6dc:	add	r1, pc, r1
   2a6e0:	ldr	r0, [pc, #96]	; 2a748 <flatcc_builder_check_required_field@@Base+0xac>
   2a6e4:	add	r0, pc, r0
   2a6e8:	bl	126ac <__assert_fail@plt>
   2a6ec:	ldr	r3, [fp, #-8]
   2a6f0:	ldrh	r3, [r3, #8]
   2a6f4:	ldrh	r2, [fp, #-10]
   2a6f8:	cmp	r2, r3
   2a6fc:	bcs	2a728 <flatcc_builder_check_required_field@@Base+0x8c>
   2a700:	ldr	r3, [fp, #-8]
   2a704:	ldr	r2, [r3, #4]
   2a708:	ldrh	r3, [fp, #-10]
   2a70c:	lsl	r3, r3, #1
   2a710:	add	r3, r2, r3
   2a714:	ldrh	r3, [r3]
   2a718:	cmp	r3, #0
   2a71c:	beq	2a728 <flatcc_builder_check_required_field@@Base+0x8c>
   2a720:	mov	r3, #1
   2a724:	b	2a72c <flatcc_builder_check_required_field@@Base+0x90>
   2a728:	mov	r3, #0
   2a72c:	mov	r0, r3
   2a730:	sub	sp, fp, #4
   2a734:	ldr	fp, [sp]
   2a738:	add	sp, sp, #4
   2a73c:	pop	{pc}		; (ldr pc, [sp], #4)
   2a740:	andeq	sp, r0, r4, lsr #3
   2a744:	ldrdeq	ip, [r0], -r8
   2a748:	muleq	r0, r0, sp

0002a74c <flatcc_builder_check_union_field@@Base>:
   2a74c:	str	fp, [sp, #-8]!
   2a750:	str	lr, [sp, #4]
   2a754:	add	fp, sp, #4
   2a758:	sub	sp, sp, #8
   2a75c:	str	r0, [fp, #-8]
   2a760:	mov	r3, r1
   2a764:	strh	r3, [fp, #-10]
   2a768:	ldr	r3, [fp, #-8]
   2a76c:	ldr	r3, [r3, #32]
   2a770:	ldrh	r3, [r3, #14]
   2a774:	cmp	r3, #3
   2a778:	beq	2a79c <flatcc_builder_check_union_field@@Base+0x50>
   2a77c:	ldr	r3, [pc, #300]	; 2a8b0 <flatcc_builder_check_union_field@@Base+0x164>
   2a780:	add	r3, pc, r3
   2a784:	movw	r2, #1279	; 0x4ff
   2a788:	ldr	r1, [pc, #292]	; 2a8b4 <flatcc_builder_check_union_field@@Base+0x168>
   2a78c:	add	r1, pc, r1
   2a790:	ldr	r0, [pc, #288]	; 2a8b8 <flatcc_builder_check_union_field@@Base+0x16c>
   2a794:	add	r0, pc, r0
   2a798:	bl	126ac <__assert_fail@plt>
   2a79c:	ldrh	r3, [fp, #-10]
   2a7a0:	cmp	r3, #0
   2a7a4:	beq	2a7bc <flatcc_builder_check_union_field@@Base+0x70>
   2a7a8:	ldr	r3, [fp, #-8]
   2a7ac:	ldrh	r3, [r3, #8]
   2a7b0:	ldrh	r2, [fp, #-10]
   2a7b4:	cmp	r2, r3
   2a7b8:	bcc	2a7c4 <flatcc_builder_check_union_field@@Base+0x78>
   2a7bc:	mov	r3, #0
   2a7c0:	b	2a89c <flatcc_builder_check_union_field@@Base+0x150>
   2a7c4:	ldr	r3, [fp, #-8]
   2a7c8:	ldr	r2, [r3, #4]
   2a7cc:	ldrh	r3, [fp, #-10]
   2a7d0:	sub	r3, r3, #-2147483647	; 0x80000001
   2a7d4:	lsl	r3, r3, #1
   2a7d8:	add	r3, r2, r3
   2a7dc:	ldrh	r3, [r3]
   2a7e0:	cmp	r3, #0
   2a7e4:	bne	2a814 <flatcc_builder_check_union_field@@Base+0xc8>
   2a7e8:	ldr	r3, [fp, #-8]
   2a7ec:	ldr	r2, [r3, #4]
   2a7f0:	ldrh	r3, [fp, #-10]
   2a7f4:	lsl	r3, r3, #1
   2a7f8:	add	r3, r2, r3
   2a7fc:	ldrh	r3, [r3]
   2a800:	cmp	r3, #0
   2a804:	moveq	r3, #1
   2a808:	movne	r3, #0
   2a80c:	uxtb	r3, r3
   2a810:	b	2a89c <flatcc_builder_check_union_field@@Base+0x150>
   2a814:	ldr	r3, [fp, #-8]
   2a818:	ldr	r3, [r3, #16]
   2a81c:	ldr	r2, [fp, #-8]
   2a820:	ldr	r1, [r2, #4]
   2a824:	ldrh	r2, [fp, #-10]
   2a828:	sub	r2, r2, #-2147483647	; 0x80000001
   2a82c:	lsl	r2, r2, #1
   2a830:	add	r2, r1, r2
   2a834:	ldrh	r2, [r2]
   2a838:	add	r3, r3, r2
   2a83c:	ldrb	r3, [r3]
   2a840:	cmp	r3, #0
   2a844:	beq	2a874 <flatcc_builder_check_union_field@@Base+0x128>
   2a848:	ldr	r3, [fp, #-8]
   2a84c:	ldr	r2, [r3, #4]
   2a850:	ldrh	r3, [fp, #-10]
   2a854:	lsl	r3, r3, #1
   2a858:	add	r3, r2, r3
   2a85c:	ldrh	r3, [r3]
   2a860:	cmp	r3, #0
   2a864:	movne	r3, #1
   2a868:	moveq	r3, #0
   2a86c:	uxtb	r3, r3
   2a870:	b	2a89c <flatcc_builder_check_union_field@@Base+0x150>
   2a874:	ldr	r3, [fp, #-8]
   2a878:	ldr	r2, [r3, #4]
   2a87c:	ldrh	r3, [fp, #-10]
   2a880:	lsl	r3, r3, #1
   2a884:	add	r3, r2, r3
   2a888:	ldrh	r3, [r3]
   2a88c:	cmp	r3, #0
   2a890:	moveq	r3, #1
   2a894:	movne	r3, #0
   2a898:	uxtb	r3, r3
   2a89c:	mov	r0, r3
   2a8a0:	sub	sp, fp, #4
   2a8a4:	ldr	fp, [sp]
   2a8a8:	add	sp, sp, #4
   2a8ac:	pop	{pc}		; (ldr pc, [sp], #4)
   2a8b0:	andeq	sp, r0, r8, lsl r1
   2a8b4:	andeq	ip, r0, r8, lsr #20
   2a8b8:	andeq	ip, r0, r0, ror #25

0002a8bc <flatcc_builder_check_required@@Base>:
   2a8bc:	str	fp, [sp, #-8]!
   2a8c0:	str	lr, [sp, #4]
   2a8c4:	add	fp, sp, #4
   2a8c8:	sub	sp, sp, #24
   2a8cc:	str	r0, [fp, #-16]
   2a8d0:	str	r1, [fp, #-20]	; 0xffffffec
   2a8d4:	str	r2, [fp, #-24]	; 0xffffffe8
   2a8d8:	ldr	r3, [fp, #-16]
   2a8dc:	ldr	r3, [r3, #32]
   2a8e0:	ldrh	r3, [r3, #14]
   2a8e4:	cmp	r3, #3
   2a8e8:	beq	2a90c <flatcc_builder_check_required@@Base+0x50>
   2a8ec:	ldr	r3, [pc, #176]	; 2a9a4 <flatcc_builder_check_required@@Base+0xe8>
   2a8f0:	add	r3, pc, r3
   2a8f4:	movw	r2, #1297	; 0x511
   2a8f8:	ldr	r1, [pc, #168]	; 2a9a8 <flatcc_builder_check_required@@Base+0xec>
   2a8fc:	add	r1, pc, r1
   2a900:	ldr	r0, [pc, #164]	; 2a9ac <flatcc_builder_check_required@@Base+0xf0>
   2a904:	add	r0, pc, r0
   2a908:	bl	126ac <__assert_fail@plt>
   2a90c:	ldr	r3, [fp, #-16]
   2a910:	ldrh	r3, [r3, #8]
   2a914:	mov	r2, r3
   2a918:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a91c:	cmp	r3, r2
   2a920:	ble	2a92c <flatcc_builder_check_required@@Base+0x70>
   2a924:	mov	r3, #0
   2a928:	b	2a990 <flatcc_builder_check_required@@Base+0xd4>
   2a92c:	mov	r3, #0
   2a930:	str	r3, [fp, #-8]
   2a934:	b	2a97c <flatcc_builder_check_required@@Base+0xc0>
   2a938:	ldr	r3, [fp, #-16]
   2a93c:	ldr	r2, [r3, #4]
   2a940:	ldr	r3, [fp, #-8]
   2a944:	lsl	r3, r3, #1
   2a948:	ldr	r1, [fp, #-20]	; 0xffffffec
   2a94c:	add	r3, r1, r3
   2a950:	ldrh	r3, [r3]
   2a954:	lsl	r3, r3, #1
   2a958:	add	r3, r2, r3
   2a95c:	ldrh	r3, [r3]
   2a960:	cmp	r3, #0
   2a964:	bne	2a970 <flatcc_builder_check_required@@Base+0xb4>
   2a968:	mov	r3, #0
   2a96c:	b	2a990 <flatcc_builder_check_required@@Base+0xd4>
   2a970:	ldr	r3, [fp, #-8]
   2a974:	add	r3, r3, #1
   2a978:	str	r3, [fp, #-8]
   2a97c:	ldr	r2, [fp, #-8]
   2a980:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a984:	cmp	r2, r3
   2a988:	blt	2a938 <flatcc_builder_check_required@@Base+0x7c>
   2a98c:	mov	r3, #1
   2a990:	mov	r0, r3
   2a994:	sub	sp, fp, #4
   2a998:	ldr	fp, [sp]
   2a99c:	add	sp, sp, #4
   2a9a0:	pop	{pc}		; (ldr pc, [sp], #4)
   2a9a4:	andeq	ip, r0, ip, asr #31
   2a9a8:			; <UNDEFINED> instruction: 0x0000c8b8
   2a9ac:	andeq	ip, r0, r0, ror fp

0002a9b0 <flatcc_builder_end_table@@Base>:
   2a9b0:	str	fp, [sp, #-8]!
   2a9b4:	str	lr, [sp, #4]
   2a9b8:	add	fp, sp, #4
   2a9bc:	sub	sp, sp, #48	; 0x30
   2a9c0:	str	r0, [fp, #-32]	; 0xffffffe0
   2a9c4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2a9c8:	ldr	r3, [r3, #32]
   2a9cc:	ldrh	r3, [r3, #14]
   2a9d0:	cmp	r3, #3
   2a9d4:	beq	2a9f8 <flatcc_builder_end_table@@Base+0x48>
   2a9d8:	ldr	r3, [pc, #520]	; 2abe8 <flatcc_builder_end_table@@Base+0x238>
   2a9dc:	add	r3, pc, r3
   2a9e0:	movw	r2, #1317	; 0x525
   2a9e4:	ldr	r1, [pc, #512]	; 2abec <flatcc_builder_end_table@@Base+0x23c>
   2a9e8:	add	r1, pc, r1
   2a9ec:	ldr	r0, [pc, #508]	; 2abf0 <flatcc_builder_end_table@@Base+0x240>
   2a9f0:	add	r0, pc, r0
   2a9f4:	bl	126ac <__assert_fail@plt>
   2a9f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2a9fc:	ldr	r3, [r3, #4]
   2aa00:	sub	r3, r3, #4
   2aa04:	str	r3, [fp, #-8]
   2aa08:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2aa0c:	ldrh	r3, [r3, #8]
   2aa10:	add	r3, r3, #2
   2aa14:	uxth	r3, r3
   2aa18:	lsl	r3, r3, #1
   2aa1c:	strh	r3, [fp, #-10]
   2aa20:	ldr	r3, [fp, #-8]
   2aa24:	ldrh	r2, [fp, #-10]
   2aa28:	strh	r2, [r3]
   2aa2c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2aa30:	ldr	r3, [r3, #20]
   2aa34:	uxth	r2, r3
   2aa38:	ldr	r3, [fp, #-8]
   2aa3c:	add	r3, r3, #2
   2aa40:	add	r2, r2, #4
   2aa44:	uxth	r2, r2
   2aa48:	strh	r2, [r3]
   2aa4c:	ldr	r3, [fp, #-8]
   2aa50:	ldrh	r3, [r3]
   2aa54:	mov	r2, r3
   2aa58:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2aa5c:	ldr	r3, [r3, #12]
   2aa60:	eor	r2, r2, r3
   2aa64:	movw	r3, #31153	; 0x79b1
   2aa68:	movt	r3, #40503	; 0x9e37
   2aa6c:	mul	r3, r3, r2
   2aa70:	ldr	r2, [fp, #-8]
   2aa74:	add	r2, r2, #2
   2aa78:	ldrh	r2, [r2]
   2aa7c:	eor	r2, r2, r3
   2aa80:	movw	r3, #31153	; 0x79b1
   2aa84:	movt	r3, #40503	; 0x9e37
   2aa88:	mul	r2, r3, r2
   2aa8c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2aa90:	str	r2, [r3, #12]
   2aa94:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2aa98:	ldr	r3, [r3, #12]
   2aa9c:	ldrh	r2, [fp, #-10]
   2aaa0:	ldr	r1, [fp, #-8]
   2aaa4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2aaa8:	bl	2a04c <flatcc_builder_create_cached_vtable@@Base>
   2aaac:	str	r0, [fp, #-16]
   2aab0:	ldr	r3, [fp, #-16]
   2aab4:	cmp	r3, #0
   2aab8:	bne	2aac4 <flatcc_builder_end_table@@Base+0x114>
   2aabc:	mov	r3, #0
   2aac0:	b	2abd4 <flatcc_builder_end_table@@Base+0x224>
   2aac4:	ldrh	r3, [fp, #-10]
   2aac8:	mov	r2, r3
   2aacc:	mov	r1, #0
   2aad0:	ldr	r0, [fp, #-8]
   2aad4:	bl	1264c <memset@plt>
   2aad8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2aadc:	ldr	r2, [r3, #76]	; 0x4c
   2aae0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2aae4:	ldr	r3, [r3, #32]
   2aae8:	ldr	r3, [r3, #20]
   2aaec:	add	r3, r2, r3
   2aaf0:	str	r3, [fp, #-20]	; 0xffffffec
   2aaf4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2aaf8:	ldr	r2, [r3]
   2aafc:	ldr	r3, [fp, #-20]	; 0xffffffec
   2ab00:	sub	r3, r2, r3
   2ab04:	asr	r3, r3, #1
   2ab08:	str	r3, [fp, #-24]	; 0xffffffe8
   2ab0c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2ab10:	ldr	r1, [r3, #16]
   2ab14:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2ab18:	ldr	r2, [r3, #20]
   2ab1c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2ab20:	ldrh	r0, [r3, #130]	; 0x82
   2ab24:	ldr	r3, [fp, #-16]
   2ab28:	str	r3, [sp, #8]
   2ab2c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ab30:	str	r3, [sp, #4]
   2ab34:	ldr	r3, [fp, #-20]	; 0xffffffec
   2ab38:	str	r3, [sp]
   2ab3c:	mov	r3, r0
   2ab40:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2ab44:	bl	2a36c <flatcc_builder_create_table@@Base>
   2ab48:	str	r0, [fp, #-28]	; 0xffffffe4
   2ab4c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2ab50:	cmp	r3, #0
   2ab54:	bne	2ab60 <flatcc_builder_end_table@@Base+0x1b0>
   2ab58:	mov	r3, #0
   2ab5c:	b	2abd4 <flatcc_builder_end_table@@Base+0x224>
   2ab60:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2ab64:	ldr	r3, [r3, #32]
   2ab68:	ldr	r2, [r3, #24]
   2ab6c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2ab70:	str	r2, [r3, #12]
   2ab74:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2ab78:	ldr	r3, [r3, #32]
   2ab7c:	ldrh	r2, [r3, #28]
   2ab80:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2ab84:	strh	r2, [r3, #8]
   2ab88:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2ab8c:	ldr	r2, [r3, #52]	; 0x34
   2ab90:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2ab94:	ldr	r3, [r3, #32]
   2ab98:	ldr	r3, [r3, #16]
   2ab9c:	add	r2, r2, r3
   2aba0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2aba4:	str	r2, [r3, #4]
   2aba8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2abac:	ldr	r2, [r3, #76]	; 0x4c
   2abb0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2abb4:	ldr	r3, [r3, #32]
   2abb8:	ldr	r3, [r3, #20]
   2abbc:	add	r2, r2, r3
   2abc0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2abc4:	str	r2, [r3]
   2abc8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2abcc:	bl	28004 <flatcc_builder_get_user_frame_ptr@@Base+0x220>
   2abd0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2abd4:	mov	r0, r3
   2abd8:	sub	sp, fp, #4
   2abdc:	ldr	fp, [sp]
   2abe0:	add	sp, sp, #4
   2abe4:	pop	{pc}		; (ldr pc, [sp], #4)
   2abe8:	andeq	ip, r0, r0, lsl #30
   2abec:	andeq	ip, r0, ip, asr #15
   2abf0:	andeq	ip, r0, r4, lsl #21

0002abf4 <flatcc_builder_create_vector@@Base>:
   2abf4:	str	r4, [sp, #-12]!
   2abf8:	str	fp, [sp, #4]
   2abfc:	str	lr, [sp, #8]
   2ac00:	add	fp, sp, #8
   2ac04:	sub	sp, sp, #108	; 0x6c
   2ac08:	str	r0, [fp, #-104]	; 0xffffff98
   2ac0c:	str	r1, [fp, #-108]	; 0xffffff94
   2ac10:	str	r2, [fp, #-112]	; 0xffffff90
   2ac14:	str	r3, [fp, #-116]	; 0xffffff8c
   2ac18:	ldr	r4, [pc, #496]	; 2ae10 <flatcc_builder_create_vector@@Base+0x21c>
   2ac1c:	add	r4, pc, r4
   2ac20:	ldr	r2, [fp, #-112]	; 0xffffff90
   2ac24:	ldr	r3, [fp, #8]
   2ac28:	cmp	r2, r3
   2ac2c:	bls	2ac68 <flatcc_builder_create_vector@@Base+0x74>
   2ac30:	ldr	r2, [fp, #-112]	; 0xffffff90
   2ac34:	ldr	r3, [fp, #8]
   2ac38:	cmp	r2, r3
   2ac3c:	bls	2ac60 <flatcc_builder_create_vector@@Base+0x6c>
   2ac40:	ldr	r3, [pc, #460]	; 2ae14 <flatcc_builder_create_vector@@Base+0x220>
   2ac44:	add	r3, pc, r3
   2ac48:	movw	r2, #1365	; 0x555
   2ac4c:	ldr	r1, [pc, #452]	; 2ae18 <flatcc_builder_create_vector@@Base+0x224>
   2ac50:	add	r1, pc, r1
   2ac54:	ldr	r0, [pc, #448]	; 2ae1c <flatcc_builder_create_vector@@Base+0x228>
   2ac58:	add	r0, pc, r0
   2ac5c:	bl	126ac <__assert_fail@plt>
   2ac60:	mov	r3, #0
   2ac64:	b	2adf8 <flatcc_builder_create_vector@@Base+0x204>
   2ac68:	mov	r1, #4
   2ac6c:	add	r3, fp, #4
   2ac70:	mov	r0, r3
   2ac74:	bl	27aa4 <flatcc_builder_clear@@Base+0x10c>
   2ac78:	ldrh	r3, [fp, #4]
   2ac7c:	mov	r1, r3
   2ac80:	ldr	r0, [fp, #-104]	; 0xffffff98
   2ac84:	bl	27a5c <flatcc_builder_clear@@Base+0xc4>
   2ac88:	ldr	r3, [fp, #-112]	; 0xffffff90
   2ac8c:	ldr	r2, [fp, #-116]	; 0xffffff8c
   2ac90:	mul	r3, r2, r3
   2ac94:	str	r3, [fp, #-16]
   2ac98:	ldr	r0, [fp, #-112]	; 0xffffff90
   2ac9c:	bl	26954 <main@@Base+0x168>
   2aca0:	mov	r3, r0
   2aca4:	str	r3, [fp, #-24]	; 0xffffffe8
   2aca8:	ldrh	r3, [fp, #4]
   2acac:	mov	r2, r3
   2acb0:	ldr	r1, [fp, #-16]
   2acb4:	ldr	r0, [fp, #-104]	; 0xffffff98
   2acb8:	bl	280d8 <flatcc_builder_get_user_frame_ptr@@Base+0x2f4>
   2acbc:	str	r0, [fp, #-20]	; 0xffffffec
   2acc0:	mov	r3, #0
   2acc4:	str	r3, [fp, #-96]	; 0xffffffa0
   2acc8:	mov	r3, #0
   2accc:	str	r3, [fp, #-92]	; 0xffffffa4
   2acd0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   2acd4:	add	r3, r3, #4
   2acd8:	str	r3, [fp, #-96]	; 0xffffffa0
   2acdc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2ace0:	add	r3, r3, #1
   2ace4:	lsl	r3, r3, #3
   2ace8:	sub	r2, fp, #12
   2acec:	add	r3, r2, r3
   2acf0:	sub	r2, fp, #24
   2acf4:	str	r2, [r3, #-84]	; 0xffffffac
   2acf8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2acfc:	add	r3, r3, #1
   2ad00:	lsl	r3, r3, #3
   2ad04:	sub	r2, fp, #12
   2ad08:	add	r3, r2, r3
   2ad0c:	mov	r2, #4
   2ad10:	str	r2, [r3, #-80]	; 0xffffffb0
   2ad14:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2ad18:	add	r3, r3, #1
   2ad1c:	str	r3, [fp, #-92]	; 0xffffffa4
   2ad20:	ldr	r3, [fp, #-16]
   2ad24:	cmp	r3, #0
   2ad28:	beq	2ad80 <flatcc_builder_create_vector@@Base+0x18c>
   2ad2c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   2ad30:	ldr	r3, [fp, #-16]
   2ad34:	add	r3, r2, r3
   2ad38:	str	r3, [fp, #-96]	; 0xffffffa0
   2ad3c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2ad40:	add	r3, r3, #1
   2ad44:	lsl	r3, r3, #3
   2ad48:	sub	r2, fp, #12
   2ad4c:	add	r3, r2, r3
   2ad50:	ldr	r2, [fp, #-108]	; 0xffffff94
   2ad54:	str	r2, [r3, #-84]	; 0xffffffac
   2ad58:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2ad5c:	add	r3, r3, #1
   2ad60:	lsl	r3, r3, #3
   2ad64:	sub	r2, fp, #12
   2ad68:	add	r3, r2, r3
   2ad6c:	ldr	r2, [fp, #-16]
   2ad70:	str	r2, [r3, #-80]	; 0xffffffb0
   2ad74:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2ad78:	add	r3, r3, #1
   2ad7c:	str	r3, [fp, #-92]	; 0xffffffa4
   2ad80:	ldr	r3, [fp, #-20]	; 0xffffffec
   2ad84:	cmp	r3, #0
   2ad88:	beq	2ade4 <flatcc_builder_create_vector@@Base+0x1f0>
   2ad8c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   2ad90:	ldr	r3, [fp, #-20]	; 0xffffffec
   2ad94:	add	r3, r2, r3
   2ad98:	str	r3, [fp, #-96]	; 0xffffffa0
   2ad9c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2ada0:	add	r3, r3, #1
   2ada4:	lsl	r3, r3, #3
   2ada8:	sub	r2, fp, #12
   2adac:	add	r3, r2, r3
   2adb0:	ldr	r2, [pc, #104]	; 2ae20 <flatcc_builder_create_vector@@Base+0x22c>
   2adb4:	ldr	r2, [r4, r2]
   2adb8:	str	r2, [r3, #-84]	; 0xffffffac
   2adbc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2adc0:	add	r3, r3, #1
   2adc4:	lsl	r3, r3, #3
   2adc8:	sub	r2, fp, #12
   2adcc:	add	r3, r2, r3
   2add0:	ldr	r2, [fp, #-20]	; 0xffffffec
   2add4:	str	r2, [r3, #-80]	; 0xffffffb0
   2add8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2addc:	add	r3, r3, #1
   2ade0:	str	r3, [fp, #-92]	; 0xffffffa4
   2ade4:	sub	r3, fp, #96	; 0x60
   2ade8:	mov	r1, r3
   2adec:	ldr	r0, [fp, #-104]	; 0xffffff98
   2adf0:	bl	28160 <flatcc_builder_get_user_frame_ptr@@Base+0x37c>
   2adf4:	mov	r3, r0
   2adf8:	mov	r0, r3
   2adfc:	sub	sp, fp, #8
   2ae00:	ldr	r4, [sp]
   2ae04:	ldr	fp, [sp, #4]
   2ae08:	add	sp, sp, #8
   2ae0c:	pop	{pc}		; (ldr pc, [sp], #4)
   2ae10:	ldrdeq	lr, [r1], -ip
   2ae14:			; <UNDEFINED> instruction: 0x0000ccb4
   2ae18:	andeq	ip, r0, r4, ror #10
   2ae1c:	andeq	ip, r0, r8, asr #16
   2ae20:	andeq	r0, r0, r0, ror r0

0002ae24 <flatcc_builder_end_vector@@Base>:
   2ae24:	str	fp, [sp, #-8]!
   2ae28:	str	lr, [sp, #4]
   2ae2c:	add	fp, sp, #4
   2ae30:	sub	sp, sp, #24
   2ae34:	str	r0, [fp, #-16]
   2ae38:	ldr	r3, [fp, #-16]
   2ae3c:	ldr	r3, [r3, #32]
   2ae40:	ldrh	r3, [r3, #14]
   2ae44:	cmp	r3, #4
   2ae48:	beq	2ae6c <flatcc_builder_end_vector@@Base+0x48>
   2ae4c:	ldr	r3, [pc, #156]	; 2aef0 <flatcc_builder_end_vector@@Base+0xcc>
   2ae50:	add	r3, pc, r3
   2ae54:	movw	r2, #1400	; 0x578
   2ae58:	ldr	r1, [pc, #148]	; 2aef4 <flatcc_builder_end_vector@@Base+0xd0>
   2ae5c:	add	r1, pc, r1
   2ae60:	ldr	r0, [pc, #144]	; 2aef8 <flatcc_builder_end_vector@@Base+0xd4>
   2ae64:	add	r0, pc, r0
   2ae68:	bl	126ac <__assert_fail@plt>
   2ae6c:	ldr	r3, [fp, #-16]
   2ae70:	ldr	r1, [r3, #16]
   2ae74:	ldr	r3, [fp, #-16]
   2ae78:	ldr	r3, [r3, #32]
   2ae7c:	ldr	r0, [r3, #20]
   2ae80:	ldr	r3, [fp, #-16]
   2ae84:	ldr	r3, [r3, #32]
   2ae88:	ldr	ip, [r3, #16]
   2ae8c:	ldr	r3, [fp, #-16]
   2ae90:	ldrh	r3, [r3, #130]	; 0x82
   2ae94:	ldr	r2, [fp, #-16]
   2ae98:	ldr	r2, [r2, #32]
   2ae9c:	ldr	r2, [r2, #24]
   2aea0:	str	r2, [sp, #4]
   2aea4:	str	r3, [sp]
   2aea8:	mov	r3, ip
   2aeac:	mov	r2, r0
   2aeb0:	ldr	r0, [fp, #-16]
   2aeb4:	bl	2abf4 <flatcc_builder_create_vector@@Base>
   2aeb8:	str	r0, [fp, #-8]
   2aebc:	ldr	r3, [fp, #-8]
   2aec0:	cmp	r3, #0
   2aec4:	bne	2aed0 <flatcc_builder_end_vector@@Base+0xac>
   2aec8:	mov	r3, #0
   2aecc:	b	2aedc <flatcc_builder_end_vector@@Base+0xb8>
   2aed0:	ldr	r0, [fp, #-16]
   2aed4:	bl	28004 <flatcc_builder_get_user_frame_ptr@@Base+0x220>
   2aed8:	ldr	r3, [fp, #-8]
   2aedc:	mov	r0, r3
   2aee0:	sub	sp, fp, #4
   2aee4:	ldr	fp, [sp]
   2aee8:	add	sp, sp, #4
   2aeec:	pop	{pc}		; (ldr pc, [sp], #4)
   2aef0:	andeq	ip, r0, r8, asr #21
   2aef4:	andeq	ip, r0, r8, asr r3
   2aef8:	muleq	r0, r4, r4

0002aefc <flatcc_builder_vector_count@@Base>:
   2aefc:	push	{fp}		; (str fp, [sp, #-4]!)
   2af00:	add	fp, sp, #0
   2af04:	sub	sp, sp, #12
   2af08:	str	r0, [fp, #-8]
   2af0c:	ldr	r3, [fp, #-8]
   2af10:	ldr	r3, [r3, #32]
   2af14:	ldr	r3, [r3, #20]
   2af18:	mov	r0, r3
   2af1c:	add	sp, fp, #0
   2af20:	pop	{fp}		; (ldr fp, [sp], #4)
   2af24:	bx	lr

0002af28 <flatcc_builder_vector_edit@@Base>:
   2af28:	push	{fp}		; (str fp, [sp, #-4]!)
   2af2c:	add	fp, sp, #0
   2af30:	sub	sp, sp, #12
   2af34:	str	r0, [fp, #-8]
   2af38:	ldr	r3, [fp, #-8]
   2af3c:	ldr	r3, [r3, #16]
   2af40:	mov	r0, r3
   2af44:	add	sp, fp, #0
   2af48:	pop	{fp}		; (ldr fp, [sp], #4)
   2af4c:	bx	lr
   2af50:	str	r4, [sp, #-12]!
   2af54:	str	fp, [sp, #4]
   2af58:	str	lr, [sp, #8]
   2af5c:	add	fp, sp, #8
   2af60:	sub	sp, sp, #116	; 0x74
   2af64:	str	r0, [fp, #-112]	; 0xffffff90
   2af68:	str	r1, [fp, #-116]	; 0xffffff8c
   2af6c:	str	r2, [fp, #-120]	; 0xffffff88
   2af70:	str	r3, [fp, #-124]	; 0xffffff84
   2af74:	ldr	r4, [pc, #764]	; 2b278 <flatcc_builder_vector_edit@@Base+0x350>
   2af78:	add	r4, pc, r4
   2af7c:	ldr	r3, [fp, #-120]	; 0xffffff88
   2af80:	cmn	r3, #-1073741823	; 0xc0000001
   2af84:	bls	2af90 <flatcc_builder_vector_edit@@Base+0x68>
   2af88:	mov	r3, #0
   2af8c:	b	2b260 <flatcc_builder_vector_edit@@Base+0x338>
   2af90:	mov	r1, #4
   2af94:	ldr	r0, [fp, #-112]	; 0xffffff90
   2af98:	bl	27a5c <flatcc_builder_clear@@Base+0xc4>
   2af9c:	ldr	r3, [fp, #-120]	; 0xffffff88
   2afa0:	lsl	r3, r3, #2
   2afa4:	str	r3, [fp, #-20]	; 0xffffffec
   2afa8:	ldr	r0, [fp, #-120]	; 0xffffff88
   2afac:	bl	26954 <main@@Base+0x168>
   2afb0:	mov	r3, r0
   2afb4:	str	r3, [fp, #-36]	; 0xffffffdc
   2afb8:	mov	r2, #4
   2afbc:	ldr	r1, [fp, #-20]	; 0xffffffec
   2afc0:	ldr	r0, [fp, #-112]	; 0xffffff90
   2afc4:	bl	280d8 <flatcc_builder_get_user_frame_ptr@@Base+0x2f4>
   2afc8:	str	r0, [fp, #-24]	; 0xffffffe8
   2afcc:	mov	r3, #0
   2afd0:	str	r3, [fp, #-108]	; 0xffffff94
   2afd4:	mov	r3, #0
   2afd8:	str	r3, [fp, #-104]	; 0xffffff98
   2afdc:	ldr	r3, [fp, #-108]	; 0xffffff94
   2afe0:	add	r3, r3, #4
   2afe4:	str	r3, [fp, #-108]	; 0xffffff94
   2afe8:	ldr	r3, [fp, #-104]	; 0xffffff98
   2afec:	add	r3, r3, #1
   2aff0:	lsl	r3, r3, #3
   2aff4:	sub	r2, fp, #12
   2aff8:	add	r3, r2, r3
   2affc:	sub	r2, fp, #36	; 0x24
   2b000:	str	r2, [r3, #-96]	; 0xffffffa0
   2b004:	ldr	r3, [fp, #-104]	; 0xffffff98
   2b008:	add	r3, r3, #1
   2b00c:	lsl	r3, r3, #3
   2b010:	sub	r2, fp, #12
   2b014:	add	r3, r2, r3
   2b018:	mov	r2, #4
   2b01c:	str	r2, [r3, #-92]	; 0xffffffa4
   2b020:	ldr	r3, [fp, #-104]	; 0xffffff98
   2b024:	add	r3, r3, #1
   2b028:	str	r3, [fp, #-104]	; 0xffffff98
   2b02c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b030:	cmp	r3, #0
   2b034:	beq	2b08c <flatcc_builder_vector_edit@@Base+0x164>
   2b038:	ldr	r2, [fp, #-108]	; 0xffffff94
   2b03c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b040:	add	r3, r2, r3
   2b044:	str	r3, [fp, #-108]	; 0xffffff94
   2b048:	ldr	r3, [fp, #-104]	; 0xffffff98
   2b04c:	add	r3, r3, #1
   2b050:	lsl	r3, r3, #3
   2b054:	sub	r2, fp, #12
   2b058:	add	r3, r2, r3
   2b05c:	ldr	r2, [fp, #-116]	; 0xffffff8c
   2b060:	str	r2, [r3, #-96]	; 0xffffffa0
   2b064:	ldr	r3, [fp, #-104]	; 0xffffff98
   2b068:	add	r3, r3, #1
   2b06c:	lsl	r3, r3, #3
   2b070:	sub	r2, fp, #12
   2b074:	add	r3, r2, r3
   2b078:	ldr	r2, [fp, #-20]	; 0xffffffec
   2b07c:	str	r2, [r3, #-92]	; 0xffffffa4
   2b080:	ldr	r3, [fp, #-104]	; 0xffffff98
   2b084:	add	r3, r3, #1
   2b088:	str	r3, [fp, #-104]	; 0xffffff98
   2b08c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b090:	cmp	r3, #0
   2b094:	beq	2b0f0 <flatcc_builder_vector_edit@@Base+0x1c8>
   2b098:	ldr	r2, [fp, #-108]	; 0xffffff94
   2b09c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b0a0:	add	r3, r2, r3
   2b0a4:	str	r3, [fp, #-108]	; 0xffffff94
   2b0a8:	ldr	r3, [fp, #-104]	; 0xffffff98
   2b0ac:	add	r3, r3, #1
   2b0b0:	lsl	r3, r3, #3
   2b0b4:	sub	r2, fp, #12
   2b0b8:	add	r3, r2, r3
   2b0bc:	ldr	r2, [pc, #440]	; 2b27c <flatcc_builder_vector_edit@@Base+0x354>
   2b0c0:	ldr	r2, [r4, r2]
   2b0c4:	str	r2, [r3, #-96]	; 0xffffffa0
   2b0c8:	ldr	r3, [fp, #-104]	; 0xffffff98
   2b0cc:	add	r3, r3, #1
   2b0d0:	lsl	r3, r3, #3
   2b0d4:	sub	r2, fp, #12
   2b0d8:	add	r3, r2, r3
   2b0dc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2b0e0:	str	r2, [r3, #-92]	; 0xffffffa4
   2b0e4:	ldr	r3, [fp, #-104]	; 0xffffff98
   2b0e8:	add	r3, r3, #1
   2b0ec:	str	r3, [fp, #-104]	; 0xffffff98
   2b0f0:	ldr	r3, [fp, #-112]	; 0xffffff90
   2b0f4:	ldr	r3, [r3, #136]	; 0x88
   2b0f8:	mov	r2, r3
   2b0fc:	ldr	r3, [fp, #-108]	; 0xffffff94
   2b100:	sub	r3, r2, r3
   2b104:	str	r3, [fp, #-28]	; 0xffffffe4
   2b108:	mov	r3, #0
   2b10c:	str	r3, [fp, #-16]
   2b110:	b	2b23c <flatcc_builder_vector_edit@@Base+0x314>
   2b114:	ldr	r3, [fp, #-16]
   2b118:	lsl	r3, r3, #2
   2b11c:	ldr	r2, [fp, #-116]	; 0xffffff8c
   2b120:	add	r3, r2, r3
   2b124:	ldr	r3, [r3]
   2b128:	cmp	r3, #0
   2b12c:	beq	2b1cc <flatcc_builder_vector_edit@@Base+0x2a4>
   2b130:	ldr	r3, [fp, #-16]
   2b134:	lsl	r3, r3, #2
   2b138:	ldr	r2, [fp, #-116]	; 0xffffff8c
   2b13c:	add	r3, r2, r3
   2b140:	ldr	r3, [r3]
   2b144:	mov	r2, r3
   2b148:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2b14c:	sub	r2, r2, r3
   2b150:	ldr	r3, [fp, #-16]
   2b154:	lsl	r3, r3, #2
   2b158:	sub	r3, r2, r3
   2b15c:	sub	r3, r3, #4
   2b160:	str	r3, [fp, #-32]	; 0xffffffe0
   2b164:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2b168:	bl	26954 <main@@Base+0x168>
   2b16c:	mov	r1, r0
   2b170:	ldr	r3, [fp, #-16]
   2b174:	lsl	r3, r3, #2
   2b178:	ldr	r2, [fp, #-116]	; 0xffffff8c
   2b17c:	add	r3, r2, r3
   2b180:	mov	r2, r1
   2b184:	str	r2, [r3]
   2b188:	ldr	r3, [fp, #-124]	; 0xffffff84
   2b18c:	cmp	r3, #0
   2b190:	beq	2b230 <flatcc_builder_vector_edit@@Base+0x308>
   2b194:	ldr	r2, [fp, #-124]	; 0xffffff84
   2b198:	ldr	r3, [fp, #-16]
   2b19c:	add	r3, r2, r3
   2b1a0:	ldrb	r3, [r3]
   2b1a4:	cmp	r3, #0
   2b1a8:	bne	2b230 <flatcc_builder_vector_edit@@Base+0x308>
   2b1ac:	ldr	r3, [pc, #204]	; 2b280 <flatcc_builder_vector_edit@@Base+0x358>
   2b1b0:	add	r3, pc, r3
   2b1b4:	movw	r2, #1457	; 0x5b1
   2b1b8:	ldr	r1, [pc, #196]	; 2b284 <flatcc_builder_vector_edit@@Base+0x35c>
   2b1bc:	add	r1, pc, r1
   2b1c0:	ldr	r0, [pc, #192]	; 2b288 <flatcc_builder_vector_edit@@Base+0x360>
   2b1c4:	add	r0, pc, r0
   2b1c8:	bl	126ac <__assert_fail@plt>
   2b1cc:	ldr	r3, [fp, #-124]	; 0xffffff84
   2b1d0:	cmp	r3, #0
   2b1d4:	beq	2b210 <flatcc_builder_vector_edit@@Base+0x2e8>
   2b1d8:	ldr	r2, [fp, #-124]	; 0xffffff84
   2b1dc:	ldr	r3, [fp, #-16]
   2b1e0:	add	r3, r2, r3
   2b1e4:	ldrb	r3, [r3]
   2b1e8:	cmp	r3, #0
   2b1ec:	beq	2b230 <flatcc_builder_vector_edit@@Base+0x308>
   2b1f0:	ldr	r3, [pc, #148]	; 2b28c <flatcc_builder_vector_edit@@Base+0x364>
   2b1f4:	add	r3, pc, r3
   2b1f8:	movw	r2, #1461	; 0x5b5
   2b1fc:	ldr	r1, [pc, #140]	; 2b290 <flatcc_builder_vector_edit@@Base+0x368>
   2b200:	add	r1, pc, r1
   2b204:	ldr	r0, [pc, #136]	; 2b294 <flatcc_builder_vector_edit@@Base+0x36c>
   2b208:	add	r0, pc, r0
   2b20c:	bl	126ac <__assert_fail@plt>
   2b210:	ldr	r3, [pc, #128]	; 2b298 <flatcc_builder_vector_edit@@Base+0x370>
   2b214:	add	r3, pc, r3
   2b218:	movw	r2, #1463	; 0x5b7
   2b21c:	ldr	r1, [pc, #120]	; 2b29c <flatcc_builder_vector_edit@@Base+0x374>
   2b220:	add	r1, pc, r1
   2b224:	ldr	r0, [pc, #116]	; 2b2a0 <flatcc_builder_vector_edit@@Base+0x378>
   2b228:	add	r0, pc, r0
   2b22c:	bl	126ac <__assert_fail@plt>
   2b230:	ldr	r3, [fp, #-16]
   2b234:	add	r3, r3, #1
   2b238:	str	r3, [fp, #-16]
   2b23c:	ldr	r2, [fp, #-16]
   2b240:	ldr	r3, [fp, #-120]	; 0xffffff88
   2b244:	cmp	r2, r3
   2b248:	bcc	2b114 <flatcc_builder_vector_edit@@Base+0x1ec>
   2b24c:	sub	r3, fp, #108	; 0x6c
   2b250:	mov	r1, r3
   2b254:	ldr	r0, [fp, #-112]	; 0xffffff90
   2b258:	bl	28160 <flatcc_builder_get_user_frame_ptr@@Base+0x37c>
   2b25c:	mov	r3, r0
   2b260:	mov	r0, r3
   2b264:	sub	sp, fp, #8
   2b268:	ldr	r4, [sp]
   2b26c:	ldr	fp, [sp, #4]
   2b270:	add	sp, sp, #8
   2b274:	pop	{pc}		; (ldr pc, [sp], #4)
   2b278:	andeq	lr, r1, r0, lsl #1
   2b27c:	andeq	r0, r0, r0, ror r0
   2b280:	andeq	ip, r0, r4, lsl #15
   2b284:	strdeq	fp, [r0], -r8
   2b288:	strdeq	ip, [r0], -r0
   2b28c:	andeq	ip, r0, r0, asr #14
   2b290:			; <UNDEFINED> instruction: 0x0000bfb4
   2b294:			; <UNDEFINED> instruction: 0x0000c2bc
   2b298:	andeq	ip, r0, r0, lsr #14
   2b29c:	muleq	r0, r4, pc	; <UNPREDICTABLE>
   2b2a0:	andeq	fp, r0, ip, ror #31

0002b2a4 <flatcc_builder_create_offset_vector_direct@@Base>:
   2b2a4:	str	fp, [sp, #-8]!
   2b2a8:	str	lr, [sp, #4]
   2b2ac:	add	fp, sp, #4
   2b2b0:	sub	sp, sp, #16
   2b2b4:	str	r0, [fp, #-8]
   2b2b8:	str	r1, [fp, #-12]
   2b2bc:	str	r2, [fp, #-16]
   2b2c0:	mov	r3, #0
   2b2c4:	ldr	r2, [fp, #-16]
   2b2c8:	ldr	r1, [fp, #-12]
   2b2cc:	ldr	r0, [fp, #-8]
   2b2d0:	bl	2af50 <flatcc_builder_vector_edit@@Base+0x28>
   2b2d4:	mov	r3, r0
   2b2d8:	mov	r0, r3
   2b2dc:	sub	sp, fp, #4
   2b2e0:	ldr	fp, [sp]
   2b2e4:	add	sp, sp, #4
   2b2e8:	pop	{pc}		; (ldr pc, [sp], #4)

0002b2ec <flatcc_builder_end_offset_vector@@Base>:
   2b2ec:	str	fp, [sp, #-8]!
   2b2f0:	str	lr, [sp, #4]
   2b2f4:	add	fp, sp, #4
   2b2f8:	sub	sp, sp, #16
   2b2fc:	str	r0, [fp, #-16]
   2b300:	ldr	r3, [fp, #-16]
   2b304:	ldr	r3, [r3, #32]
   2b308:	ldrh	r3, [r3, #14]
   2b30c:	cmp	r3, #5
   2b310:	beq	2b334 <flatcc_builder_end_offset_vector@@Base+0x48>
   2b314:	ldr	r3, [pc, #112]	; 2b38c <flatcc_builder_end_offset_vector@@Base+0xa0>
   2b318:	add	r3, pc, r3
   2b31c:	movw	r2, #1480	; 0x5c8
   2b320:	ldr	r1, [pc, #104]	; 2b390 <flatcc_builder_end_offset_vector@@Base+0xa4>
   2b324:	add	r1, pc, r1
   2b328:	ldr	r0, [pc, #100]	; 2b394 <flatcc_builder_end_offset_vector@@Base+0xa8>
   2b32c:	add	r0, pc, r0
   2b330:	bl	126ac <__assert_fail@plt>
   2b334:	ldr	r3, [fp, #-16]
   2b338:	ldr	r1, [r3, #16]
   2b33c:	ldr	r3, [fp, #-16]
   2b340:	ldr	r3, [r3, #32]
   2b344:	ldr	r3, [r3, #20]
   2b348:	mov	r2, r3
   2b34c:	ldr	r0, [fp, #-16]
   2b350:	bl	2b2a4 <flatcc_builder_create_offset_vector_direct@@Base>
   2b354:	str	r0, [fp, #-8]
   2b358:	ldr	r3, [fp, #-8]
   2b35c:	cmp	r3, #0
   2b360:	bne	2b36c <flatcc_builder_end_offset_vector@@Base+0x80>
   2b364:	mov	r3, #0
   2b368:	b	2b378 <flatcc_builder_end_offset_vector@@Base+0x8c>
   2b36c:	ldr	r0, [fp, #-16]
   2b370:	bl	28004 <flatcc_builder_get_user_frame_ptr@@Base+0x220>
   2b374:	ldr	r3, [fp, #-8]
   2b378:	mov	r0, r3
   2b37c:	sub	sp, fp, #4
   2b380:	ldr	fp, [sp]
   2b384:	add	sp, sp, #4
   2b388:	pop	{pc}		; (ldr pc, [sp], #4)
   2b38c:	andeq	ip, r0, ip, lsr r6
   2b390:	muleq	r0, r0, lr
   2b394:	andeq	ip, r0, r8, lsr r0

0002b398 <flatcc_builder_end_offset_vector_for_unions@@Base>:
   2b398:	str	fp, [sp, #-8]!
   2b39c:	str	lr, [sp, #4]
   2b3a0:	add	fp, sp, #4
   2b3a4:	sub	sp, sp, #16
   2b3a8:	str	r0, [fp, #-16]
   2b3ac:	str	r1, [fp, #-20]	; 0xffffffec
   2b3b0:	ldr	r3, [fp, #-16]
   2b3b4:	ldr	r3, [r3, #32]
   2b3b8:	ldrh	r3, [r3, #14]
   2b3bc:	cmp	r3, #5
   2b3c0:	beq	2b3e4 <flatcc_builder_end_offset_vector_for_unions@@Base+0x4c>
   2b3c4:	ldr	r3, [pc, #112]	; 2b43c <flatcc_builder_end_offset_vector_for_unions@@Base+0xa4>
   2b3c8:	add	r3, pc, r3
   2b3cc:	movw	r2, #1493	; 0x5d5
   2b3d0:	ldr	r1, [pc, #104]	; 2b440 <flatcc_builder_end_offset_vector_for_unions@@Base+0xa8>
   2b3d4:	add	r1, pc, r1
   2b3d8:	ldr	r0, [pc, #100]	; 2b444 <flatcc_builder_end_offset_vector_for_unions@@Base+0xac>
   2b3dc:	add	r0, pc, r0
   2b3e0:	bl	126ac <__assert_fail@plt>
   2b3e4:	ldr	r3, [fp, #-16]
   2b3e8:	ldr	r1, [r3, #16]
   2b3ec:	ldr	r3, [fp, #-16]
   2b3f0:	ldr	r3, [r3, #32]
   2b3f4:	ldr	r2, [r3, #20]
   2b3f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b3fc:	ldr	r0, [fp, #-16]
   2b400:	bl	2af50 <flatcc_builder_vector_edit@@Base+0x28>
   2b404:	str	r0, [fp, #-8]
   2b408:	ldr	r3, [fp, #-8]
   2b40c:	cmp	r3, #0
   2b410:	bne	2b41c <flatcc_builder_end_offset_vector_for_unions@@Base+0x84>
   2b414:	mov	r3, #0
   2b418:	b	2b428 <flatcc_builder_end_offset_vector_for_unions@@Base+0x90>
   2b41c:	ldr	r0, [fp, #-16]
   2b420:	bl	28004 <flatcc_builder_get_user_frame_ptr@@Base+0x220>
   2b424:	ldr	r3, [fp, #-8]
   2b428:	mov	r0, r3
   2b42c:	sub	sp, fp, #4
   2b430:	ldr	fp, [sp]
   2b434:	add	sp, sp, #4
   2b438:	pop	{pc}		; (ldr pc, [sp], #4)
   2b43c:			; <UNDEFINED> instruction: 0x0000c5b0
   2b440:	andeq	fp, r0, r0, ror #27
   2b444:	andeq	fp, r0, r8, lsl #31

0002b448 <flatcc_builder_offset_vector_edit@@Base>:
   2b448:	push	{fp}		; (str fp, [sp, #-4]!)
   2b44c:	add	fp, sp, #0
   2b450:	sub	sp, sp, #12
   2b454:	str	r0, [fp, #-8]
   2b458:	ldr	r3, [fp, #-8]
   2b45c:	ldr	r3, [r3, #16]
   2b460:	mov	r0, r3
   2b464:	add	sp, fp, #0
   2b468:	pop	{fp}		; (ldr fp, [sp], #4)
   2b46c:	bx	lr

0002b470 <flatcc_builder_offset_vector_count@@Base>:
   2b470:	push	{fp}		; (str fp, [sp, #-4]!)
   2b474:	add	fp, sp, #0
   2b478:	sub	sp, sp, #12
   2b47c:	str	r0, [fp, #-8]
   2b480:	ldr	r3, [fp, #-8]
   2b484:	ldr	r3, [r3, #32]
   2b488:	ldr	r3, [r3, #20]
   2b48c:	mov	r0, r3
   2b490:	add	sp, fp, #0
   2b494:	pop	{fp}		; (ldr fp, [sp], #4)
   2b498:	bx	lr

0002b49c <flatcc_builder_table_add_union@@Base>:
   2b49c:	str	fp, [sp, #-8]!
   2b4a0:	str	lr, [sp, #4]
   2b4a4:	add	fp, sp, #4
   2b4a8:	sub	sp, sp, #24
   2b4ac:	str	r0, [fp, #-16]
   2b4b0:	str	r1, [fp, #-20]	; 0xffffffec
   2b4b4:	sub	r1, fp, #28
   2b4b8:	stm	r1, {r2, r3}
   2b4bc:	ldr	r3, [fp, #-16]
   2b4c0:	ldr	r3, [r3, #32]
   2b4c4:	ldrh	r3, [r3, #14]
   2b4c8:	cmp	r3, #3
   2b4cc:	beq	2b4f0 <flatcc_builder_table_add_union@@Base+0x54>
   2b4d0:	ldr	r3, [pc, #360]	; 2b640 <flatcc_builder_table_add_union@@Base+0x1a4>
   2b4d4:	add	r3, pc, r3
   2b4d8:	movw	r2, #1518	; 0x5ee
   2b4dc:	ldr	r1, [pc, #352]	; 2b644 <flatcc_builder_table_add_union@@Base+0x1a8>
   2b4e0:	add	r1, pc, r1
   2b4e4:	ldr	r0, [pc, #348]	; 2b648 <flatcc_builder_table_add_union@@Base+0x1ac>
   2b4e8:	add	r0, pc, r0
   2b4ec:	bl	126ac <__assert_fail@plt>
   2b4f0:	ldrb	r3, [fp, #-28]	; 0xffffffe4
   2b4f4:	cmp	r3, #0
   2b4f8:	bne	2b548 <flatcc_builder_table_add_union@@Base+0xac>
   2b4fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b500:	cmp	r3, #0
   2b504:	beq	2b548 <flatcc_builder_table_add_union@@Base+0xac>
   2b508:	ldrb	r3, [fp, #-28]	; 0xffffffe4
   2b50c:	cmp	r3, #0
   2b510:	bne	2b540 <flatcc_builder_table_add_union@@Base+0xa4>
   2b514:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b518:	cmp	r3, #0
   2b51c:	beq	2b540 <flatcc_builder_table_add_union@@Base+0xa4>
   2b520:	ldr	r3, [pc, #292]	; 2b64c <flatcc_builder_table_add_union@@Base+0x1b0>
   2b524:	add	r3, pc, r3
   2b528:	movw	r2, #1519	; 0x5ef
   2b52c:	ldr	r1, [pc, #284]	; 2b650 <flatcc_builder_table_add_union@@Base+0x1b4>
   2b530:	add	r1, pc, r1
   2b534:	ldr	r0, [pc, #280]	; 2b654 <flatcc_builder_table_add_union@@Base+0x1b8>
   2b538:	add	r0, pc, r0
   2b53c:	bl	126ac <__assert_fail@plt>
   2b540:	mvn	r3, #0
   2b544:	b	2b62c <flatcc_builder_table_add_union@@Base+0x190>
   2b548:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b54c:	cmp	r3, #0
   2b550:	beq	2b5b0 <flatcc_builder_table_add_union@@Base+0x114>
   2b554:	ldr	r1, [fp, #-20]	; 0xffffffec
   2b558:	ldr	r0, [fp, #-16]
   2b55c:	bl	2c670 <flatcc_builder_table_add_offset@@Base>
   2b560:	str	r0, [fp, #-8]
   2b564:	ldr	r3, [fp, #-8]
   2b568:	cmp	r3, #0
   2b56c:	bne	2b5a4 <flatcc_builder_table_add_union@@Base+0x108>
   2b570:	ldr	r3, [fp, #-8]
   2b574:	cmp	r3, #0
   2b578:	bne	2b59c <flatcc_builder_table_add_union@@Base+0x100>
   2b57c:	ldr	r3, [pc, #212]	; 2b658 <flatcc_builder_table_add_union@@Base+0x1bc>
   2b580:	add	r3, pc, r3
   2b584:	movw	r2, #1522	; 0x5f2
   2b588:	ldr	r1, [pc, #204]	; 2b65c <flatcc_builder_table_add_union@@Base+0x1c0>
   2b58c:	add	r1, pc, r1
   2b590:	ldr	r0, [pc, #200]	; 2b660 <flatcc_builder_table_add_union@@Base+0x1c4>
   2b594:	add	r0, pc, r0
   2b598:	bl	126ac <__assert_fail@plt>
   2b59c:	mvn	r3, #0
   2b5a0:	b	2b62c <flatcc_builder_table_add_union@@Base+0x190>
   2b5a4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2b5a8:	ldr	r3, [fp, #-8]
   2b5ac:	str	r2, [r3]
   2b5b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b5b4:	sub	r1, r3, #1
   2b5b8:	mov	r3, #1
   2b5bc:	mov	r2, #1
   2b5c0:	ldr	r0, [fp, #-16]
   2b5c4:	bl	2c400 <flatcc_builder_table_add@@Base>
   2b5c8:	str	r0, [fp, #-12]
   2b5cc:	ldr	r3, [fp, #-12]
   2b5d0:	cmp	r3, #0
   2b5d4:	bne	2b60c <flatcc_builder_table_add_union@@Base+0x170>
   2b5d8:	ldr	r3, [fp, #-12]
   2b5dc:	cmp	r3, #0
   2b5e0:	bne	2b604 <flatcc_builder_table_add_union@@Base+0x168>
   2b5e4:	ldr	r3, [pc, #120]	; 2b664 <flatcc_builder_table_add_union@@Base+0x1c8>
   2b5e8:	add	r3, pc, r3
   2b5ec:	movw	r2, #1526	; 0x5f6
   2b5f0:	ldr	r1, [pc, #112]	; 2b668 <flatcc_builder_table_add_union@@Base+0x1cc>
   2b5f4:	add	r1, pc, r1
   2b5f8:	ldr	r0, [pc, #108]	; 2b66c <flatcc_builder_table_add_union@@Base+0x1d0>
   2b5fc:	add	r0, pc, r0
   2b600:	bl	126ac <__assert_fail@plt>
   2b604:	mvn	r3, #0
   2b608:	b	2b62c <flatcc_builder_table_add_union@@Base+0x190>
   2b60c:	ldrb	r3, [fp, #-28]	; 0xffffffe4
   2b610:	mov	r0, r3
   2b614:	bl	26978 <main@@Base+0x18c>
   2b618:	mov	r3, r0
   2b61c:	mov	r2, r3
   2b620:	ldr	r3, [fp, #-12]
   2b624:	strb	r2, [r3]
   2b628:	mov	r3, #0
   2b62c:	mov	r0, r3
   2b630:	sub	sp, fp, #4
   2b634:	ldr	fp, [sp]
   2b638:	add	sp, sp, #4
   2b63c:	pop	{pc}		; (ldr pc, [sp], #4)
   2b640:	ldrdeq	ip, [r0], -r0
   2b644:	ldrdeq	fp, [r0], -r4
   2b648:	andeq	fp, r0, ip, lsl #31
   2b64c:	andeq	ip, r0, r0, lsl #9
   2b650:	andeq	fp, r0, r4, lsl #25
   2b654:	muleq	r0, ip, pc	; <UNPREDICTABLE>
   2b658:	andeq	ip, r0, r4, lsr #8
   2b65c:	andeq	fp, r0, r8, lsr #24
   2b660:	andeq	fp, r0, r4, ror #30
   2b664:			; <UNDEFINED> instruction: 0x0000c3bc
   2b668:	andeq	fp, r0, r0, asr #23
   2b66c:	andeq	fp, r0, r8, lsl #30

0002b670 <flatcc_builder_table_add_union_vector@@Base>:
   2b670:	str	fp, [sp, #-8]!
   2b674:	str	lr, [sp, #4]
   2b678:	add	fp, sp, #4
   2b67c:	sub	sp, sp, #24
   2b680:	str	r0, [fp, #-16]
   2b684:	str	r1, [fp, #-20]	; 0xffffffec
   2b688:	sub	r1, fp, #28
   2b68c:	stm	r1, {r2, r3}
   2b690:	ldr	r3, [fp, #-16]
   2b694:	ldr	r3, [r3, #32]
   2b698:	ldrh	r3, [r3, #14]
   2b69c:	cmp	r3, #3
   2b6a0:	beq	2b6c4 <flatcc_builder_table_add_union_vector@@Base+0x54>
   2b6a4:	ldr	r3, [pc, #404]	; 2b840 <flatcc_builder_table_add_union_vector@@Base+0x1d0>
   2b6a8:	add	r3, pc, r3
   2b6ac:	mov	r2, #1536	; 0x600
   2b6b0:	ldr	r1, [pc, #396]	; 2b844 <flatcc_builder_table_add_union_vector@@Base+0x1d4>
   2b6b4:	add	r1, pc, r1
   2b6b8:	ldr	r0, [pc, #392]	; 2b848 <flatcc_builder_table_add_union_vector@@Base+0x1d8>
   2b6bc:	add	r0, pc, r0
   2b6c0:	bl	126ac <__assert_fail@plt>
   2b6c4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2b6c8:	cmp	r3, #0
   2b6cc:	moveq	r3, #1
   2b6d0:	movne	r3, #0
   2b6d4:	uxtb	r2, r3
   2b6d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b6dc:	cmp	r3, #0
   2b6e0:	moveq	r3, #1
   2b6e4:	movne	r3, #0
   2b6e8:	uxtb	r3, r3
   2b6ec:	eor	r3, r3, r2
   2b6f0:	uxtb	r3, r3
   2b6f4:	cmp	r3, #0
   2b6f8:	beq	2b75c <flatcc_builder_table_add_union_vector@@Base+0xec>
   2b6fc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2b700:	cmp	r3, #0
   2b704:	movne	r3, #1
   2b708:	moveq	r3, #0
   2b70c:	uxtb	r2, r3
   2b710:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b714:	cmp	r3, #0
   2b718:	moveq	r3, #1
   2b71c:	movne	r3, #0
   2b720:	uxtb	r3, r3
   2b724:	eor	r3, r3, r2
   2b728:	uxtb	r3, r3
   2b72c:	cmp	r3, #0
   2b730:	bne	2b754 <flatcc_builder_table_add_union_vector@@Base+0xe4>
   2b734:	ldr	r3, [pc, #272]	; 2b84c <flatcc_builder_table_add_union_vector@@Base+0x1dc>
   2b738:	add	r3, pc, r3
   2b73c:	movw	r2, #1537	; 0x601
   2b740:	ldr	r1, [pc, #264]	; 2b850 <flatcc_builder_table_add_union_vector@@Base+0x1e0>
   2b744:	add	r1, pc, r1
   2b748:	ldr	r0, [pc, #260]	; 2b854 <flatcc_builder_table_add_union_vector@@Base+0x1e4>
   2b74c:	add	r0, pc, r0
   2b750:	bl	126ac <__assert_fail@plt>
   2b754:	mvn	r3, #0
   2b758:	b	2b82c <flatcc_builder_table_add_union_vector@@Base+0x1bc>
   2b75c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2b760:	cmp	r3, #0
   2b764:	beq	2b828 <flatcc_builder_table_add_union_vector@@Base+0x1b8>
   2b768:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b76c:	sub	r3, r3, #1
   2b770:	mov	r1, r3
   2b774:	ldr	r0, [fp, #-16]
   2b778:	bl	2c670 <flatcc_builder_table_add_offset@@Base>
   2b77c:	str	r0, [fp, #-8]
   2b780:	ldr	r3, [fp, #-8]
   2b784:	cmp	r3, #0
   2b788:	bne	2b7c0 <flatcc_builder_table_add_union_vector@@Base+0x150>
   2b78c:	ldr	r3, [fp, #-8]
   2b790:	cmp	r3, #0
   2b794:	bne	2b7b8 <flatcc_builder_table_add_union_vector@@Base+0x148>
   2b798:	ldr	r3, [pc, #184]	; 2b858 <flatcc_builder_table_add_union_vector@@Base+0x1e8>
   2b79c:	add	r3, pc, r3
   2b7a0:	movw	r2, #1540	; 0x604
   2b7a4:	ldr	r1, [pc, #176]	; 2b85c <flatcc_builder_table_add_union_vector@@Base+0x1ec>
   2b7a8:	add	r1, pc, r1
   2b7ac:	ldr	r0, [pc, #172]	; 2b860 <flatcc_builder_table_add_union_vector@@Base+0x1f0>
   2b7b0:	add	r0, pc, r0
   2b7b4:	bl	126ac <__assert_fail@plt>
   2b7b8:	mvn	r3, #0
   2b7bc:	b	2b82c <flatcc_builder_table_add_union_vector@@Base+0x1bc>
   2b7c0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2b7c4:	ldr	r3, [fp, #-8]
   2b7c8:	str	r2, [r3]
   2b7cc:	ldr	r1, [fp, #-20]	; 0xffffffec
   2b7d0:	ldr	r0, [fp, #-16]
   2b7d4:	bl	2c670 <flatcc_builder_table_add_offset@@Base>
   2b7d8:	str	r0, [fp, #-8]
   2b7dc:	ldr	r3, [fp, #-8]
   2b7e0:	cmp	r3, #0
   2b7e4:	bne	2b81c <flatcc_builder_table_add_union_vector@@Base+0x1ac>
   2b7e8:	ldr	r3, [fp, #-8]
   2b7ec:	cmp	r3, #0
   2b7f0:	bne	2b814 <flatcc_builder_table_add_union_vector@@Base+0x1a4>
   2b7f4:	ldr	r3, [pc, #104]	; 2b864 <flatcc_builder_table_add_union_vector@@Base+0x1f4>
   2b7f8:	add	r3, pc, r3
   2b7fc:	movw	r2, #1544	; 0x608
   2b800:	ldr	r1, [pc, #96]	; 2b868 <flatcc_builder_table_add_union_vector@@Base+0x1f8>
   2b804:	add	r1, pc, r1
   2b808:	ldr	r0, [pc, #92]	; 2b86c <flatcc_builder_table_add_union_vector@@Base+0x1fc>
   2b80c:	add	r0, pc, r0
   2b810:	bl	126ac <__assert_fail@plt>
   2b814:	mvn	r3, #0
   2b818:	b	2b82c <flatcc_builder_table_add_union_vector@@Base+0x1bc>
   2b81c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2b820:	ldr	r3, [fp, #-8]
   2b824:	str	r2, [r3]
   2b828:	mov	r3, #0
   2b82c:	mov	r0, r3
   2b830:	sub	sp, fp, #4
   2b834:	ldr	fp, [sp]
   2b838:	add	sp, sp, #4
   2b83c:	pop	{pc}		; (ldr pc, [sp], #4)
   2b840:	andeq	ip, r0, ip, lsl r3
   2b844:	andeq	fp, r0, r0, lsl #22
   2b848:			; <UNDEFINED> instruction: 0x0000bdb8
   2b84c:	andeq	ip, r0, ip, lsl #5
   2b850:	andeq	fp, r0, r0, ror sl
   2b854:	andeq	fp, r0, r4, asr #27
   2b858:	andeq	ip, r0, r8, lsr #4
   2b85c:	andeq	fp, r0, ip, lsl #20
   2b860:	andeq	fp, r0, r8, asr #26
   2b864:	andeq	ip, r0, ip, asr #3
   2b868:			; <UNDEFINED> instruction: 0x0000b9b0
   2b86c:	andeq	fp, r0, ip, ror #25

0002b870 <flatcc_builder_create_union_vector@@Base>:
   2b870:	str	fp, [sp, #-8]!
   2b874:	str	lr, [sp, #4]
   2b878:	add	fp, sp, #4
   2b87c:	sub	sp, sp, #48	; 0x30
   2b880:	str	r0, [fp, #-32]	; 0xffffffe0
   2b884:	str	r1, [fp, #-36]	; 0xffffffdc
   2b888:	str	r2, [fp, #-40]	; 0xffffffd8
   2b88c:	str	r3, [fp, #-44]	; 0xffffffd4
   2b890:	mov	r3, #0
   2b894:	str	r3, [fp, #-24]	; 0xffffffe8
   2b898:	mov	r3, #0
   2b89c:	str	r3, [fp, #-20]	; 0xffffffec
   2b8a0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2b8a4:	bl	29be4 <flatcc_builder_start_offset_vector@@Base>
   2b8a8:	mov	r3, r0
   2b8ac:	cmp	r3, #0
   2b8b0:	beq	2b8cc <flatcc_builder_create_union_vector@@Base+0x5c>
   2b8b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2b8b8:	mov	r1, r3
   2b8bc:	sub	r3, fp, #24
   2b8c0:	ldrd	r2, [r3]
   2b8c4:	strd	r2, [r1]
   2b8c8:	b	2b9e8 <flatcc_builder_create_union_vector@@Base+0x178>
   2b8cc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2b8d0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2b8d4:	bl	29428 <flatcc_builder_extend_offset_vector@@Base>
   2b8d8:	mov	r3, r0
   2b8dc:	cmp	r3, #0
   2b8e0:	bne	2b8fc <flatcc_builder_create_union_vector@@Base+0x8c>
   2b8e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2b8e8:	mov	r1, r3
   2b8ec:	sub	r3, fp, #24
   2b8f0:	ldrd	r2, [r3]
   2b8f4:	strd	r2, [r1]
   2b8f8:	b	2b9e8 <flatcc_builder_create_union_vector@@Base+0x178>
   2b8fc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2b900:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2b904:	bl	26db4 <flatcc_builder_default_alloc@@Base+0x310>
   2b908:	str	r0, [fp, #-12]
   2b90c:	ldr	r3, [fp, #-12]
   2b910:	cmp	r3, #0
   2b914:	bne	2b930 <flatcc_builder_create_union_vector@@Base+0xc0>
   2b918:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2b91c:	mov	r1, r3
   2b920:	sub	r3, fp, #24
   2b924:	ldrd	r2, [r3]
   2b928:	strd	r2, [r1]
   2b92c:	b	2b9e8 <flatcc_builder_create_union_vector@@Base+0x178>
   2b930:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2b934:	bl	2b448 <flatcc_builder_offset_vector_edit@@Base>
   2b938:	str	r0, [fp, #-16]
   2b93c:	mov	r3, #0
   2b940:	str	r3, [fp, #-8]
   2b944:	b	2b9a0 <flatcc_builder_create_union_vector@@Base+0x130>
   2b948:	ldr	r3, [fp, #-8]
   2b94c:	lsl	r3, r3, #3
   2b950:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2b954:	add	r2, r2, r3
   2b958:	ldr	r1, [fp, #-12]
   2b95c:	ldr	r3, [fp, #-8]
   2b960:	add	r3, r1, r3
   2b964:	ldrb	r2, [r2]
   2b968:	strb	r2, [r3]
   2b96c:	ldr	r3, [fp, #-8]
   2b970:	lsl	r3, r3, #3
   2b974:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2b978:	add	r2, r2, r3
   2b97c:	ldr	r3, [fp, #-8]
   2b980:	lsl	r3, r3, #2
   2b984:	ldr	r1, [fp, #-16]
   2b988:	add	r3, r1, r3
   2b98c:	ldr	r2, [r2, #4]
   2b990:	str	r2, [r3]
   2b994:	ldr	r3, [fp, #-8]
   2b998:	add	r3, r3, #1
   2b99c:	str	r3, [fp, #-8]
   2b9a0:	ldr	r2, [fp, #-8]
   2b9a4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2b9a8:	cmp	r2, r3
   2b9ac:	bcc	2b948 <flatcc_builder_create_union_vector@@Base+0xd8>
   2b9b0:	sub	r0, fp, #24
   2b9b4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2b9b8:	str	r3, [sp]
   2b9bc:	ldr	r3, [fp, #-16]
   2b9c0:	ldr	r2, [fp, #-12]
   2b9c4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2b9c8:	bl	2b9fc <flatcc_builder_create_union_vector_direct@@Base>
   2b9cc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2b9d0:	bl	28004 <flatcc_builder_get_user_frame_ptr@@Base+0x220>
   2b9d4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2b9d8:	mov	r1, r3
   2b9dc:	sub	r3, fp, #24
   2b9e0:	ldrd	r2, [r3]
   2b9e4:	strd	r2, [r1]
   2b9e8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2b9ec:	sub	sp, fp, #4
   2b9f0:	ldr	fp, [sp]
   2b9f4:	add	sp, sp, #4
   2b9f8:	pop	{pc}		; (ldr pc, [sp], #4)

0002b9fc <flatcc_builder_create_union_vector_direct@@Base>:
   2b9fc:	str	fp, [sp, #-8]!
   2ba00:	str	lr, [sp, #4]
   2ba04:	add	fp, sp, #4
   2ba08:	sub	sp, sp, #32
   2ba0c:	str	r0, [fp, #-16]
   2ba10:	str	r1, [fp, #-20]	; 0xffffffec
   2ba14:	str	r2, [fp, #-24]	; 0xffffffe8
   2ba18:	str	r3, [fp, #-28]	; 0xffffffe4
   2ba1c:	mov	r3, #0
   2ba20:	str	r3, [fp, #-12]
   2ba24:	mov	r3, #0
   2ba28:	str	r3, [fp, #-8]
   2ba2c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ba30:	ldr	r2, [fp, #4]
   2ba34:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2ba38:	ldr	r0, [fp, #-20]	; 0xffffffec
   2ba3c:	bl	2af50 <flatcc_builder_vector_edit@@Base+0x28>
   2ba40:	mov	r3, r0
   2ba44:	str	r3, [fp, #-8]
   2ba48:	ldr	r3, [fp, #-8]
   2ba4c:	cmp	r3, #0
   2ba50:	bne	2ba6c <flatcc_builder_create_union_vector_direct@@Base+0x70>
   2ba54:	ldr	r3, [fp, #-16]
   2ba58:	mov	r1, r3
   2ba5c:	sub	r3, fp, #12
   2ba60:	ldrd	r2, [r3]
   2ba64:	strd	r2, [r1]
   2ba68:	b	2bad0 <flatcc_builder_create_union_vector_direct@@Base+0xd4>
   2ba6c:	mvn	r3, #0
   2ba70:	str	r3, [sp, #4]
   2ba74:	mov	r3, #1
   2ba78:	str	r3, [sp]
   2ba7c:	mov	r3, #1
   2ba80:	ldr	r2, [fp, #4]
   2ba84:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2ba88:	ldr	r0, [fp, #-20]	; 0xffffffec
   2ba8c:	bl	2abf4 <flatcc_builder_create_vector@@Base>
   2ba90:	mov	r3, r0
   2ba94:	str	r3, [fp, #-12]
   2ba98:	ldr	r3, [fp, #-12]
   2ba9c:	cmp	r3, #0
   2baa0:	bne	2babc <flatcc_builder_create_union_vector_direct@@Base+0xc0>
   2baa4:	ldr	r3, [fp, #-16]
   2baa8:	mov	r1, r3
   2baac:	sub	r3, fp, #12
   2bab0:	ldrd	r2, [r3]
   2bab4:	strd	r2, [r1]
   2bab8:	b	2bad0 <flatcc_builder_create_union_vector_direct@@Base+0xd4>
   2babc:	ldr	r3, [fp, #-16]
   2bac0:	mov	r1, r3
   2bac4:	sub	r3, fp, #12
   2bac8:	ldrd	r2, [r3]
   2bacc:	strd	r2, [r1]
   2bad0:	ldr	r0, [fp, #-16]
   2bad4:	sub	sp, fp, #4
   2bad8:	ldr	fp, [sp]
   2badc:	add	sp, sp, #4
   2bae0:	pop	{pc}		; (ldr pc, [sp], #4)

0002bae4 <flatcc_builder_start_union_vector@@Base>:
   2bae4:	str	fp, [sp, #-8]!
   2bae8:	str	lr, [sp, #4]
   2baec:	add	fp, sp, #4
   2baf0:	sub	sp, sp, #8
   2baf4:	str	r0, [fp, #-8]
   2baf8:	mov	r1, #4
   2bafc:	ldr	r0, [fp, #-8]
   2bb00:	bl	27e18 <flatcc_builder_get_user_frame_ptr@@Base+0x34>
   2bb04:	mov	r3, r0
   2bb08:	cmp	r3, #0
   2bb0c:	beq	2bb18 <flatcc_builder_start_union_vector@@Base+0x34>
   2bb10:	mvn	r3, #0
   2bb14:	b	2bb58 <flatcc_builder_start_union_vector@@Base+0x74>
   2bb18:	ldr	r3, [fp, #-8]
   2bb1c:	ldr	r3, [r3, #32]
   2bb20:	mov	r2, #8
   2bb24:	str	r2, [r3, #16]
   2bb28:	ldr	r3, [fp, #-8]
   2bb2c:	ldr	r3, [r3, #32]
   2bb30:	mov	r2, #0
   2bb34:	str	r2, [r3, #20]
   2bb38:	ldr	r3, [fp, #-8]
   2bb3c:	ldr	r3, [r3, #32]
   2bb40:	mov	r2, #7
   2bb44:	strh	r2, [r3, #14]
   2bb48:	mvn	r1, #3
   2bb4c:	ldr	r0, [fp, #-8]
   2bb50:	bl	26c78 <flatcc_builder_default_alloc@@Base+0x1d4>
   2bb54:	mov	r3, #0
   2bb58:	mov	r0, r3
   2bb5c:	sub	sp, fp, #4
   2bb60:	ldr	fp, [sp]
   2bb64:	add	sp, sp, #4
   2bb68:	pop	{pc}		; (ldr pc, [sp], #4)

0002bb6c <flatcc_builder_end_union_vector@@Base>:
   2bb6c:	str	fp, [sp, #-8]!
   2bb70:	str	lr, [sp, #4]
   2bb74:	add	fp, sp, #4
   2bb78:	sub	sp, sp, #48	; 0x30
   2bb7c:	str	r0, [fp, #-40]	; 0xffffffd8
   2bb80:	str	r1, [fp, #-44]	; 0xffffffd4
   2bb84:	mov	r3, #0
   2bb88:	str	r3, [fp, #-32]	; 0xffffffe0
   2bb8c:	mov	r3, #0
   2bb90:	str	r3, [fp, #-28]	; 0xffffffe4
   2bb94:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2bb98:	ldr	r3, [r3, #32]
   2bb9c:	ldrh	r3, [r3, #14]
   2bba0:	cmp	r3, #7
   2bba4:	beq	2bbc8 <flatcc_builder_end_union_vector@@Base+0x5c>
   2bba8:	ldr	r3, [pc, #328]	; 2bcf8 <flatcc_builder_end_union_vector@@Base+0x18c>
   2bbac:	add	r3, pc, r3
   2bbb0:	movw	r2, #1617	; 0x651
   2bbb4:	ldr	r1, [pc, #320]	; 2bcfc <flatcc_builder_end_union_vector@@Base+0x190>
   2bbb8:	add	r1, pc, r1
   2bbbc:	ldr	r0, [pc, #316]	; 2bd00 <flatcc_builder_end_union_vector@@Base+0x194>
   2bbc0:	add	r0, pc, r0
   2bbc4:	bl	126ac <__assert_fail@plt>
   2bbc8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2bbcc:	bl	2bd2c <flatcc_builder_union_vector_count@@Base>
   2bbd0:	str	r0, [fp, #-12]
   2bbd4:	ldr	r2, [fp, #-12]
   2bbd8:	mov	r3, r2
   2bbdc:	lsl	r3, r3, #2
   2bbe0:	add	r3, r3, r2
   2bbe4:	mov	r1, r3
   2bbe8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2bbec:	bl	26db4 <flatcc_builder_default_alloc@@Base+0x310>
   2bbf0:	str	r0, [fp, #-16]
   2bbf4:	ldr	r3, [fp, #-16]
   2bbf8:	cmp	r3, #0
   2bbfc:	bne	2bc18 <flatcc_builder_end_union_vector@@Base+0xac>
   2bc00:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2bc04:	mov	r1, r3
   2bc08:	sub	r3, fp, #32
   2bc0c:	ldrd	r2, [r3]
   2bc10:	strd	r2, [r1]
   2bc14:	b	2bce4 <flatcc_builder_end_union_vector@@Base+0x178>
   2bc18:	ldr	r3, [fp, #-12]
   2bc1c:	lsl	r3, r3, #2
   2bc20:	ldr	r2, [fp, #-16]
   2bc24:	add	r3, r2, r3
   2bc28:	str	r3, [fp, #-20]	; 0xffffffec
   2bc2c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2bc30:	bl	2bd04 <flatcc_builder_union_vector_edit@@Base>
   2bc34:	str	r0, [fp, #-24]	; 0xffffffe8
   2bc38:	mov	r3, #0
   2bc3c:	str	r3, [fp, #-8]
   2bc40:	b	2bc9c <flatcc_builder_end_union_vector@@Base+0x130>
   2bc44:	ldr	r3, [fp, #-8]
   2bc48:	lsl	r3, r3, #3
   2bc4c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2bc50:	add	r2, r2, r3
   2bc54:	ldr	r1, [fp, #-20]	; 0xffffffec
   2bc58:	ldr	r3, [fp, #-8]
   2bc5c:	add	r3, r1, r3
   2bc60:	ldrb	r2, [r2]
   2bc64:	strb	r2, [r3]
   2bc68:	ldr	r3, [fp, #-8]
   2bc6c:	lsl	r3, r3, #3
   2bc70:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2bc74:	add	r2, r2, r3
   2bc78:	ldr	r3, [fp, #-8]
   2bc7c:	lsl	r3, r3, #2
   2bc80:	ldr	r1, [fp, #-16]
   2bc84:	add	r3, r1, r3
   2bc88:	ldr	r2, [r2, #4]
   2bc8c:	str	r2, [r3]
   2bc90:	ldr	r3, [fp, #-8]
   2bc94:	add	r3, r3, #1
   2bc98:	str	r3, [fp, #-8]
   2bc9c:	ldr	r2, [fp, #-8]
   2bca0:	ldr	r3, [fp, #-12]
   2bca4:	cmp	r2, r3
   2bca8:	bcc	2bc44 <flatcc_builder_end_union_vector@@Base+0xd8>
   2bcac:	sub	r0, fp, #32
   2bcb0:	ldr	r3, [fp, #-12]
   2bcb4:	str	r3, [sp]
   2bcb8:	ldr	r3, [fp, #-16]
   2bcbc:	ldr	r2, [fp, #-20]	; 0xffffffec
   2bcc0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2bcc4:	bl	2b9fc <flatcc_builder_create_union_vector_direct@@Base>
   2bcc8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2bccc:	bl	28004 <flatcc_builder_get_user_frame_ptr@@Base+0x220>
   2bcd0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2bcd4:	mov	r1, r3
   2bcd8:	sub	r3, fp, #32
   2bcdc:	ldrd	r2, [r3]
   2bce0:	strd	r2, [r1]
   2bce4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2bce8:	sub	sp, fp, #4
   2bcec:	ldr	fp, [sp]
   2bcf0:	add	sp, sp, #4
   2bcf4:	pop	{pc}		; (ldr pc, [sp], #4)
   2bcf8:	andeq	fp, r0, r0, asr #28
   2bcfc:	strdeq	fp, [r0], -ip
   2bd00:	andeq	fp, r0, r8, ror r9

0002bd04 <flatcc_builder_union_vector_edit@@Base>:
   2bd04:	push	{fp}		; (str fp, [sp, #-4]!)
   2bd08:	add	fp, sp, #0
   2bd0c:	sub	sp, sp, #12
   2bd10:	str	r0, [fp, #-8]
   2bd14:	ldr	r3, [fp, #-8]
   2bd18:	ldr	r3, [r3, #16]
   2bd1c:	mov	r0, r3
   2bd20:	add	sp, fp, #0
   2bd24:	pop	{fp}		; (ldr fp, [sp], #4)
   2bd28:	bx	lr

0002bd2c <flatcc_builder_union_vector_count@@Base>:
   2bd2c:	push	{fp}		; (str fp, [sp, #-4]!)
   2bd30:	add	fp, sp, #0
   2bd34:	sub	sp, sp, #12
   2bd38:	str	r0, [fp, #-8]
   2bd3c:	ldr	r3, [fp, #-8]
   2bd40:	ldr	r3, [r3, #32]
   2bd44:	ldr	r3, [r3, #20]
   2bd48:	mov	r0, r3
   2bd4c:	add	sp, fp, #0
   2bd50:	pop	{fp}		; (ldr fp, [sp], #4)
   2bd54:	bx	lr

0002bd58 <flatcc_builder_extend_union_vector@@Base>:
   2bd58:	str	fp, [sp, #-8]!
   2bd5c:	str	lr, [sp, #4]
   2bd60:	add	fp, sp, #4
   2bd64:	sub	sp, sp, #8
   2bd68:	str	r0, [fp, #-8]
   2bd6c:	str	r1, [fp, #-12]
   2bd70:	mvn	r2, #-536870912	; 0xe0000000
   2bd74:	ldr	r1, [fp, #-12]
   2bd78:	ldr	r0, [fp, #-8]
   2bd7c:	bl	290ec <flatcc_builder_end_struct@@Base+0xac>
   2bd80:	mov	r3, r0
   2bd84:	cmp	r3, #0
   2bd88:	beq	2bd94 <flatcc_builder_extend_union_vector@@Base+0x3c>
   2bd8c:	mov	r3, #0
   2bd90:	b	2bdac <flatcc_builder_extend_union_vector@@Base+0x54>
   2bd94:	ldr	r3, [fp, #-12]
   2bd98:	lsl	r3, r3, #3
   2bd9c:	mov	r1, r3
   2bda0:	ldr	r0, [fp, #-8]
   2bda4:	bl	26db4 <flatcc_builder_default_alloc@@Base+0x310>
   2bda8:	mov	r3, r0
   2bdac:	mov	r0, r3
   2bdb0:	sub	sp, fp, #4
   2bdb4:	ldr	fp, [sp]
   2bdb8:	add	sp, sp, #4
   2bdbc:	pop	{pc}		; (ldr pc, [sp], #4)

0002bdc0 <flatcc_builder_truncate_union_vector@@Base>:
   2bdc0:	str	fp, [sp, #-8]!
   2bdc4:	str	lr, [sp, #4]
   2bdc8:	add	fp, sp, #4
   2bdcc:	sub	sp, sp, #8
   2bdd0:	str	r0, [fp, #-8]
   2bdd4:	str	r1, [fp, #-12]
   2bdd8:	ldr	r3, [fp, #-8]
   2bddc:	ldr	r3, [r3, #32]
   2bde0:	ldrh	r3, [r3, #14]
   2bde4:	cmp	r3, #7
   2bde8:	beq	2be0c <flatcc_builder_truncate_union_vector@@Base+0x4c>
   2bdec:	ldr	r3, [pc, #200]	; 2bebc <flatcc_builder_truncate_union_vector@@Base+0xfc>
   2bdf0:	add	r3, pc, r3
   2bdf4:	movw	r2, #1665	; 0x681
   2bdf8:	ldr	r1, [pc, #192]	; 2bec0 <flatcc_builder_truncate_union_vector@@Base+0x100>
   2bdfc:	add	r1, pc, r1
   2be00:	ldr	r0, [pc, #188]	; 2bec4 <flatcc_builder_truncate_union_vector@@Base+0x104>
   2be04:	add	r0, pc, r0
   2be08:	bl	126ac <__assert_fail@plt>
   2be0c:	ldr	r3, [fp, #-8]
   2be10:	ldr	r3, [r3, #32]
   2be14:	ldr	r3, [r3, #20]
   2be18:	ldr	r2, [fp, #-12]
   2be1c:	cmp	r2, r3
   2be20:	bls	2be64 <flatcc_builder_truncate_union_vector@@Base+0xa4>
   2be24:	ldr	r3, [fp, #-8]
   2be28:	ldr	r3, [r3, #32]
   2be2c:	ldr	r3, [r3, #20]
   2be30:	ldr	r2, [fp, #-12]
   2be34:	cmp	r2, r3
   2be38:	bls	2be5c <flatcc_builder_truncate_union_vector@@Base+0x9c>
   2be3c:	ldr	r3, [pc, #132]	; 2bec8 <flatcc_builder_truncate_union_vector@@Base+0x108>
   2be40:	add	r3, pc, r3
   2be44:	movw	r2, #1666	; 0x682
   2be48:	ldr	r1, [pc, #124]	; 2becc <flatcc_builder_truncate_union_vector@@Base+0x10c>
   2be4c:	add	r1, pc, r1
   2be50:	ldr	r0, [pc, #120]	; 2bed0 <flatcc_builder_truncate_union_vector@@Base+0x110>
   2be54:	add	r0, pc, r0
   2be58:	bl	126ac <__assert_fail@plt>
   2be5c:	mvn	r3, #0
   2be60:	b	2bea8 <flatcc_builder_truncate_union_vector@@Base+0xe8>
   2be64:	ldr	r3, [fp, #-8]
   2be68:	ldr	r3, [r3, #32]
   2be6c:	ldr	r1, [r3, #20]
   2be70:	ldr	r3, [fp, #-8]
   2be74:	ldr	r3, [r3, #32]
   2be78:	ldr	r2, [fp, #-12]
   2be7c:	sub	r2, r1, r2
   2be80:	str	r2, [r3, #20]
   2be84:	ldr	r3, [fp, #-8]
   2be88:	ldr	r3, [r3, #32]
   2be8c:	ldr	r3, [r3, #16]
   2be90:	ldr	r2, [fp, #-12]
   2be94:	mul	r3, r2, r3
   2be98:	mov	r1, r3
   2be9c:	ldr	r0, [fp, #-8]
   2bea0:	bl	26e5c <flatcc_builder_default_alloc@@Base+0x3b8>
   2bea4:	mov	r3, #0
   2bea8:	mov	r0, r3
   2beac:	sub	sp, fp, #4
   2beb0:	ldr	fp, [sp]
   2beb4:	add	sp, sp, #4
   2beb8:	pop	{pc}		; (ldr pc, [sp], #4)
   2bebc:	andeq	fp, r0, ip, lsl ip
   2bec0:			; <UNDEFINED> instruction: 0x0000b3b8
   2bec4:	andeq	fp, r0, r4, lsr r7
   2bec8:	andeq	fp, r0, ip, asr #23
   2becc:	andeq	fp, r0, r8, ror #6
   2bed0:	muleq	r0, r4, r5

0002bed4 <flatcc_builder_union_vector_push@@Base>:
   2bed4:	str	fp, [sp, #-8]!
   2bed8:	str	lr, [sp, #4]
   2bedc:	add	fp, sp, #4
   2bee0:	sub	sp, sp, #24
   2bee4:	str	r0, [fp, #-16]
   2bee8:	sub	r3, fp, #24
   2beec:	stm	r3, {r1, r2}
   2bef0:	ldr	r3, [fp, #-16]
   2bef4:	ldr	r3, [r3, #32]
   2bef8:	ldrh	r3, [r3, #14]
   2befc:	cmp	r3, #7
   2bf00:	beq	2bf24 <flatcc_builder_union_vector_push@@Base+0x50>
   2bf04:	ldr	r3, [pc, #160]	; 2bfac <flatcc_builder_union_vector_push@@Base+0xd8>
   2bf08:	add	r3, pc, r3
   2bf0c:	movw	r2, #1677	; 0x68d
   2bf10:	ldr	r1, [pc, #152]	; 2bfb0 <flatcc_builder_union_vector_push@@Base+0xdc>
   2bf14:	add	r1, pc, r1
   2bf18:	ldr	r0, [pc, #148]	; 2bfb4 <flatcc_builder_union_vector_push@@Base+0xe0>
   2bf1c:	add	r0, pc, r0
   2bf20:	bl	126ac <__assert_fail@plt>
   2bf24:	ldr	r3, [fp, #-16]
   2bf28:	ldr	r3, [r3, #32]
   2bf2c:	ldr	r3, [r3, #20]
   2bf30:	cmn	r3, #-536870911	; 0xe0000001
   2bf34:	bne	2bf40 <flatcc_builder_union_vector_push@@Base+0x6c>
   2bf38:	mov	r3, #0
   2bf3c:	b	2bf98 <flatcc_builder_union_vector_push@@Base+0xc4>
   2bf40:	ldr	r3, [fp, #-16]
   2bf44:	ldr	r3, [r3, #32]
   2bf48:	ldr	r2, [r3, #20]
   2bf4c:	ldr	r3, [fp, #-16]
   2bf50:	ldr	r3, [r3, #32]
   2bf54:	add	r2, r2, #1
   2bf58:	str	r2, [r3, #20]
   2bf5c:	mov	r1, #8
   2bf60:	ldr	r0, [fp, #-16]
   2bf64:	bl	26db4 <flatcc_builder_default_alloc@@Base+0x310>
   2bf68:	str	r0, [fp, #-8]
   2bf6c:	ldr	r3, [fp, #-8]
   2bf70:	cmp	r3, #0
   2bf74:	bne	2bf80 <flatcc_builder_union_vector_push@@Base+0xac>
   2bf78:	mov	r3, #0
   2bf7c:	b	2bf98 <flatcc_builder_union_vector_push@@Base+0xc4>
   2bf80:	ldr	r3, [fp, #-8]
   2bf84:	mov	r1, r3
   2bf88:	sub	r3, fp, #24
   2bf8c:	ldrd	r2, [r3]
   2bf90:	strd	r2, [r1]
   2bf94:	ldr	r3, [fp, #-8]
   2bf98:	mov	r0, r3
   2bf9c:	sub	sp, fp, #4
   2bfa0:	ldr	fp, [sp]
   2bfa4:	add	sp, sp, #4
   2bfa8:	pop	{pc}		; (ldr pc, [sp], #4)
   2bfac:	andeq	fp, r0, ip, lsr #22
   2bfb0:	andeq	fp, r0, r0, lsr #5
   2bfb4:	andeq	fp, r0, ip, lsl r6

0002bfb8 <flatcc_builder_append_union_vector@@Base>:
   2bfb8:	str	fp, [sp, #-8]!
   2bfbc:	str	lr, [sp, #4]
   2bfc0:	add	fp, sp, #4
   2bfc4:	sub	sp, sp, #16
   2bfc8:	str	r0, [fp, #-8]
   2bfcc:	str	r1, [fp, #-12]
   2bfd0:	str	r2, [fp, #-16]
   2bfd4:	ldr	r3, [fp, #-8]
   2bfd8:	ldr	r3, [r3, #32]
   2bfdc:	ldrh	r3, [r3, #14]
   2bfe0:	cmp	r3, #7
   2bfe4:	beq	2c008 <flatcc_builder_append_union_vector@@Base+0x50>
   2bfe8:	ldr	r3, [pc, #108]	; 2c05c <flatcc_builder_append_union_vector@@Base+0xa4>
   2bfec:	add	r3, pc, r3
   2bff0:	movw	r2, #1692	; 0x69c
   2bff4:	ldr	r1, [pc, #100]	; 2c060 <flatcc_builder_append_union_vector@@Base+0xa8>
   2bff8:	add	r1, pc, r1
   2bffc:	ldr	r0, [pc, #96]	; 2c064 <flatcc_builder_append_union_vector@@Base+0xac>
   2c000:	add	r0, pc, r0
   2c004:	bl	126ac <__assert_fail@plt>
   2c008:	mvn	r2, #-536870912	; 0xe0000000
   2c00c:	ldr	r1, [fp, #-16]
   2c010:	ldr	r0, [fp, #-8]
   2c014:	bl	290ec <flatcc_builder_end_struct@@Base+0xac>
   2c018:	mov	r3, r0
   2c01c:	cmp	r3, #0
   2c020:	beq	2c02c <flatcc_builder_append_union_vector@@Base+0x74>
   2c024:	mov	r3, #0
   2c028:	b	2c048 <flatcc_builder_append_union_vector@@Base+0x90>
   2c02c:	ldr	r3, [fp, #-16]
   2c030:	lsl	r3, r3, #3
   2c034:	mov	r2, r3
   2c038:	ldr	r1, [fp, #-12]
   2c03c:	ldr	r0, [fp, #-8]
   2c040:	bl	26ec4 <flatcc_builder_default_alloc@@Base+0x420>
   2c044:	mov	r3, r0
   2c048:	mov	r0, r3
   2c04c:	sub	sp, fp, #4
   2c050:	ldr	fp, [sp]
   2c054:	add	sp, sp, #4
   2c058:	pop	{pc}		; (ldr pc, [sp], #4)
   2c05c:	andeq	fp, r0, ip, ror #20
   2c060:			; <UNDEFINED> instruction: 0x0000b1bc
   2c064:	andeq	fp, r0, r8, lsr r5

0002c068 <flatcc_builder_create_string@@Base>:
   2c068:	str	r4, [sp, #-12]!
   2c06c:	str	fp, [sp, #4]
   2c070:	str	lr, [sp, #8]
   2c074:	add	fp, sp, #8
   2c078:	sub	sp, sp, #100	; 0x64
   2c07c:	str	r0, [fp, #-96]	; 0xffffffa0
   2c080:	str	r1, [fp, #-100]	; 0xffffff9c
   2c084:	str	r2, [fp, #-104]	; 0xffffff98
   2c088:	ldr	r4, [pc, #388]	; 2c214 <flatcc_builder_create_string@@Base+0x1ac>
   2c08c:	add	r4, pc, r4
   2c090:	ldr	r0, [fp, #-104]	; 0xffffff98
   2c094:	bl	26954 <main@@Base+0x168>
   2c098:	mov	r3, r0
   2c09c:	str	r3, [fp, #-20]	; 0xffffffec
   2c0a0:	ldr	r3, [fp, #-104]	; 0xffffff98
   2c0a4:	add	r3, r3, #1
   2c0a8:	mov	r2, #4
   2c0ac:	mov	r1, r3
   2c0b0:	ldr	r0, [fp, #-96]	; 0xffffffa0
   2c0b4:	bl	280d8 <flatcc_builder_get_user_frame_ptr@@Base+0x2f4>
   2c0b8:	mov	r3, r0
   2c0bc:	add	r3, r3, #1
   2c0c0:	str	r3, [fp, #-16]
   2c0c4:	mov	r3, #0
   2c0c8:	str	r3, [fp, #-92]	; 0xffffffa4
   2c0cc:	mov	r3, #0
   2c0d0:	str	r3, [fp, #-88]	; 0xffffffa8
   2c0d4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2c0d8:	add	r3, r3, #4
   2c0dc:	str	r3, [fp, #-92]	; 0xffffffa4
   2c0e0:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2c0e4:	add	r3, r3, #1
   2c0e8:	lsl	r3, r3, #3
   2c0ec:	sub	r2, fp, #12
   2c0f0:	add	r3, r2, r3
   2c0f4:	sub	r2, fp, #20
   2c0f8:	str	r2, [r3, #-80]	; 0xffffffb0
   2c0fc:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2c100:	add	r3, r3, #1
   2c104:	lsl	r3, r3, #3
   2c108:	sub	r2, fp, #12
   2c10c:	add	r3, r2, r3
   2c110:	mov	r2, #4
   2c114:	str	r2, [r3, #-76]	; 0xffffffb4
   2c118:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2c11c:	add	r3, r3, #1
   2c120:	str	r3, [fp, #-88]	; 0xffffffa8
   2c124:	ldr	r3, [fp, #-104]	; 0xffffff98
   2c128:	cmp	r3, #0
   2c12c:	beq	2c184 <flatcc_builder_create_string@@Base+0x11c>
   2c130:	ldr	r2, [fp, #-92]	; 0xffffffa4
   2c134:	ldr	r3, [fp, #-104]	; 0xffffff98
   2c138:	add	r3, r2, r3
   2c13c:	str	r3, [fp, #-92]	; 0xffffffa4
   2c140:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2c144:	add	r3, r3, #1
   2c148:	lsl	r3, r3, #3
   2c14c:	sub	r2, fp, #12
   2c150:	add	r3, r2, r3
   2c154:	ldr	r2, [fp, #-100]	; 0xffffff9c
   2c158:	str	r2, [r3, #-80]	; 0xffffffb0
   2c15c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2c160:	add	r3, r3, #1
   2c164:	lsl	r3, r3, #3
   2c168:	sub	r2, fp, #12
   2c16c:	add	r3, r2, r3
   2c170:	ldr	r2, [fp, #-104]	; 0xffffff98
   2c174:	str	r2, [r3, #-76]	; 0xffffffb4
   2c178:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2c17c:	add	r3, r3, #1
   2c180:	str	r3, [fp, #-88]	; 0xffffffa8
   2c184:	ldr	r3, [fp, #-16]
   2c188:	cmp	r3, #0
   2c18c:	beq	2c1e8 <flatcc_builder_create_string@@Base+0x180>
   2c190:	ldr	r2, [fp, #-92]	; 0xffffffa4
   2c194:	ldr	r3, [fp, #-16]
   2c198:	add	r3, r2, r3
   2c19c:	str	r3, [fp, #-92]	; 0xffffffa4
   2c1a0:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2c1a4:	add	r3, r3, #1
   2c1a8:	lsl	r3, r3, #3
   2c1ac:	sub	r2, fp, #12
   2c1b0:	add	r3, r2, r3
   2c1b4:	ldr	r2, [pc, #92]	; 2c218 <flatcc_builder_create_string@@Base+0x1b0>
   2c1b8:	ldr	r2, [r4, r2]
   2c1bc:	str	r2, [r3, #-80]	; 0xffffffb0
   2c1c0:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2c1c4:	add	r3, r3, #1
   2c1c8:	lsl	r3, r3, #3
   2c1cc:	sub	r2, fp, #12
   2c1d0:	add	r3, r2, r3
   2c1d4:	ldr	r2, [fp, #-16]
   2c1d8:	str	r2, [r3, #-76]	; 0xffffffb4
   2c1dc:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2c1e0:	add	r3, r3, #1
   2c1e4:	str	r3, [fp, #-88]	; 0xffffffa8
   2c1e8:	sub	r3, fp, #92	; 0x5c
   2c1ec:	mov	r1, r3
   2c1f0:	ldr	r0, [fp, #-96]	; 0xffffffa0
   2c1f4:	bl	28160 <flatcc_builder_get_user_frame_ptr@@Base+0x37c>
   2c1f8:	mov	r3, r0
   2c1fc:	mov	r0, r3
   2c200:	sub	sp, fp, #8
   2c204:	ldr	r4, [sp]
   2c208:	ldr	fp, [sp, #4]
   2c20c:	add	sp, sp, #8
   2c210:	pop	{pc}		; (ldr pc, [sp], #4)
   2c214:	andeq	ip, r1, ip, ror #30
   2c218:	andeq	r0, r0, r0, ror r0

0002c21c <flatcc_builder_create_string_str@@Base>:
   2c21c:	str	fp, [sp, #-8]!
   2c220:	str	lr, [sp, #4]
   2c224:	add	fp, sp, #4
   2c228:	sub	sp, sp, #8
   2c22c:	str	r0, [fp, #-8]
   2c230:	str	r1, [fp, #-12]
   2c234:	ldr	r0, [fp, #-12]
   2c238:	bl	12628 <strlen@plt>
   2c23c:	mov	r3, r0
   2c240:	mov	r2, r3
   2c244:	ldr	r1, [fp, #-12]
   2c248:	ldr	r0, [fp, #-8]
   2c24c:	bl	2c068 <flatcc_builder_create_string@@Base>
   2c250:	mov	r3, r0
   2c254:	mov	r0, r3
   2c258:	sub	sp, fp, #4
   2c25c:	ldr	fp, [sp]
   2c260:	add	sp, sp, #4
   2c264:	pop	{pc}		; (ldr pc, [sp], #4)

0002c268 <flatcc_builder_create_string_strn@@Base>:
   2c268:	str	fp, [sp, #-8]!
   2c26c:	str	lr, [sp, #4]
   2c270:	add	fp, sp, #4
   2c274:	sub	sp, sp, #16
   2c278:	str	r0, [fp, #-8]
   2c27c:	str	r1, [fp, #-12]
   2c280:	str	r2, [fp, #-16]
   2c284:	ldr	r1, [fp, #-16]
   2c288:	ldr	r0, [fp, #-12]
   2c28c:	bl	26a44 <main@@Base+0x258>
   2c290:	mov	r3, r0
   2c294:	mov	r2, r3
   2c298:	ldr	r1, [fp, #-12]
   2c29c:	ldr	r0, [fp, #-8]
   2c2a0:	bl	2c068 <flatcc_builder_create_string@@Base>
   2c2a4:	mov	r3, r0
   2c2a8:	mov	r0, r3
   2c2ac:	sub	sp, fp, #4
   2c2b0:	ldr	fp, [sp]
   2c2b4:	add	sp, sp, #4
   2c2b8:	pop	{pc}		; (ldr pc, [sp], #4)

0002c2bc <flatcc_builder_end_string@@Base>:
   2c2bc:	str	fp, [sp, #-8]!
   2c2c0:	str	lr, [sp, #4]
   2c2c4:	add	fp, sp, #4
   2c2c8:	sub	sp, sp, #16
   2c2cc:	str	r0, [fp, #-16]
   2c2d0:	ldr	r3, [fp, #-16]
   2c2d4:	ldr	r3, [r3, #32]
   2c2d8:	ldrh	r3, [r3, #14]
   2c2dc:	cmp	r3, #6
   2c2e0:	beq	2c304 <flatcc_builder_end_string@@Base+0x48>
   2c2e4:	ldr	r3, [pc, #168]	; 2c394 <flatcc_builder_end_string@@Base+0xd8>
   2c2e8:	add	r3, pc, r3
   2c2ec:	movw	r2, #1732	; 0x6c4
   2c2f0:	ldr	r1, [pc, #160]	; 2c398 <flatcc_builder_end_string@@Base+0xdc>
   2c2f4:	add	r1, pc, r1
   2c2f8:	ldr	r0, [pc, #156]	; 2c39c <flatcc_builder_end_string@@Base+0xe0>
   2c2fc:	add	r0, pc, r0
   2c300:	bl	126ac <__assert_fail@plt>
   2c304:	ldr	r3, [fp, #-16]
   2c308:	ldr	r3, [r3, #32]
   2c30c:	ldr	r2, [r3, #20]
   2c310:	ldr	r3, [fp, #-16]
   2c314:	ldr	r3, [r3, #20]
   2c318:	cmp	r2, r3
   2c31c:	beq	2c340 <flatcc_builder_end_string@@Base+0x84>
   2c320:	ldr	r3, [pc, #120]	; 2c3a0 <flatcc_builder_end_string@@Base+0xe4>
   2c324:	add	r3, pc, r3
   2c328:	movw	r2, #1733	; 0x6c5
   2c32c:	ldr	r1, [pc, #112]	; 2c3a4 <flatcc_builder_end_string@@Base+0xe8>
   2c330:	add	r1, pc, r1
   2c334:	ldr	r0, [pc, #108]	; 2c3a8 <flatcc_builder_end_string@@Base+0xec>
   2c338:	add	r0, pc, r0
   2c33c:	bl	126ac <__assert_fail@plt>
   2c340:	ldr	r3, [fp, #-16]
   2c344:	ldr	r1, [r3, #16]
   2c348:	ldr	r3, [fp, #-16]
   2c34c:	ldr	r3, [r3, #20]
   2c350:	mov	r2, r3
   2c354:	ldr	r0, [fp, #-16]
   2c358:	bl	2c068 <flatcc_builder_create_string@@Base>
   2c35c:	str	r0, [fp, #-8]
   2c360:	ldr	r3, [fp, #-8]
   2c364:	cmp	r3, #0
   2c368:	bne	2c374 <flatcc_builder_end_string@@Base+0xb8>
   2c36c:	mov	r3, #0
   2c370:	b	2c380 <flatcc_builder_end_string@@Base+0xc4>
   2c374:	ldr	r0, [fp, #-16]
   2c378:	bl	28004 <flatcc_builder_get_user_frame_ptr@@Base+0x220>
   2c37c:	ldr	r3, [fp, #-8]
   2c380:	mov	r0, r3
   2c384:	sub	sp, fp, #4
   2c388:	ldr	fp, [sp]
   2c38c:	add	sp, sp, #4
   2c390:	pop	{pc}		; (ldr pc, [sp], #4)
   2c394:	muleq	r0, r4, r7
   2c398:	andeq	sl, r0, r0, asr #29
   2c39c:	muleq	r0, ip, r0
   2c3a0:	andeq	fp, r0, r8, asr r7
   2c3a4:	andeq	sl, r0, r4, lsl #29
   2c3a8:	andeq	fp, r0, r4, lsr r2

0002c3ac <flatcc_builder_string_edit@@Base>:
   2c3ac:	push	{fp}		; (str fp, [sp, #-4]!)
   2c3b0:	add	fp, sp, #0
   2c3b4:	sub	sp, sp, #12
   2c3b8:	str	r0, [fp, #-8]
   2c3bc:	ldr	r3, [fp, #-8]
   2c3c0:	ldr	r3, [r3, #16]
   2c3c4:	mov	r0, r3
   2c3c8:	add	sp, fp, #0
   2c3cc:	pop	{fp}		; (ldr fp, [sp], #4)
   2c3d0:	bx	lr

0002c3d4 <flatcc_builder_string_len@@Base>:
   2c3d4:	push	{fp}		; (str fp, [sp, #-4]!)
   2c3d8:	add	fp, sp, #0
   2c3dc:	sub	sp, sp, #12
   2c3e0:	str	r0, [fp, #-8]
   2c3e4:	ldr	r3, [fp, #-8]
   2c3e8:	ldr	r3, [r3, #32]
   2c3ec:	ldr	r3, [r3, #20]
   2c3f0:	mov	r0, r3
   2c3f4:	add	sp, fp, #0
   2c3f8:	pop	{fp}		; (ldr fp, [sp], #4)
   2c3fc:	bx	lr

0002c400 <flatcc_builder_table_add@@Base>:
   2c400:	str	fp, [sp, #-8]!
   2c404:	str	lr, [sp, #4]
   2c408:	add	fp, sp, #4
   2c40c:	sub	sp, sp, #16
   2c410:	str	r0, [fp, #-8]
   2c414:	str	r1, [fp, #-12]
   2c418:	str	r2, [fp, #-16]
   2c41c:	strh	r3, [fp, #-18]	; 0xffffffee
   2c420:	ldr	r3, [fp, #-8]
   2c424:	ldr	r3, [r3, #32]
   2c428:	ldrh	r3, [r3, #14]
   2c42c:	cmp	r3, #3
   2c430:	beq	2c454 <flatcc_builder_table_add@@Base+0x54>
   2c434:	ldr	r3, [pc, #284]	; 2c558 <flatcc_builder_table_add@@Base+0x158>
   2c438:	add	r3, pc, r3
   2c43c:	movw	r2, #1773	; 0x6ed
   2c440:	ldr	r1, [pc, #276]	; 2c55c <flatcc_builder_table_add@@Base+0x15c>
   2c444:	add	r1, pc, r1
   2c448:	ldr	r0, [pc, #272]	; 2c560 <flatcc_builder_table_add@@Base+0x160>
   2c44c:	add	r0, pc, r0
   2c450:	bl	126ac <__assert_fail@plt>
   2c454:	ldr	r3, [fp, #-12]
   2c458:	cmp	r3, #0
   2c45c:	blt	2c470 <flatcc_builder_table_add@@Base+0x70>
   2c460:	ldr	r3, [fp, #-12]
   2c464:	movw	r2, #32764	; 0x7ffc
   2c468:	cmp	r3, r2
   2c46c:	ble	2c490 <flatcc_builder_table_add@@Base+0x90>
   2c470:	ldr	r3, [pc, #236]	; 2c564 <flatcc_builder_table_add@@Base+0x164>
   2c474:	add	r3, pc, r3
   2c478:	movw	r2, #1774	; 0x6ee
   2c47c:	ldr	r1, [pc, #228]	; 2c568 <flatcc_builder_table_add@@Base+0x168>
   2c480:	add	r1, pc, r1
   2c484:	ldr	r0, [pc, #224]	; 2c56c <flatcc_builder_table_add@@Base+0x16c>
   2c488:	add	r0, pc, r0
   2c48c:	bl	126ac <__assert_fail@plt>
   2c490:	ldr	r3, [fp, #-8]
   2c494:	ldrh	r3, [r3, #130]	; 0x82
   2c498:	ldrh	r2, [fp, #-18]	; 0xffffffee
   2c49c:	cmp	r2, r3
   2c4a0:	bls	2c4b0 <flatcc_builder_table_add@@Base+0xb0>
   2c4a4:	ldr	r3, [fp, #-8]
   2c4a8:	ldrh	r2, [fp, #-18]	; 0xffffffee
   2c4ac:	strh	r2, [r3, #130]	; 0x82
   2c4b0:	ldr	r3, [fp, #-8]
   2c4b4:	ldr	r2, [r3, #4]
   2c4b8:	ldr	r3, [fp, #-12]
   2c4bc:	lsl	r3, r3, #1
   2c4c0:	add	r3, r2, r3
   2c4c4:	ldrh	r3, [r3]
   2c4c8:	cmp	r3, #0
   2c4cc:	beq	2c4f0 <flatcc_builder_table_add@@Base+0xf0>
   2c4d0:	ldr	r3, [pc, #152]	; 2c570 <flatcc_builder_table_add@@Base+0x170>
   2c4d4:	add	r3, pc, r3
   2c4d8:	movw	r2, #1784	; 0x6f8
   2c4dc:	ldr	r1, [pc, #144]	; 2c574 <flatcc_builder_table_add@@Base+0x174>
   2c4e0:	add	r1, pc, r1
   2c4e4:	ldr	r0, [pc, #140]	; 2c578 <flatcc_builder_table_add@@Base+0x178>
   2c4e8:	add	r0, pc, r0
   2c4ec:	bl	126ac <__assert_fail@plt>
   2c4f0:	ldr	r3, [fp, #-8]
   2c4f4:	ldr	r2, [r3, #12]
   2c4f8:	ldr	r3, [fp, #-12]
   2c4fc:	eor	r2, r2, r3
   2c500:	movw	r3, #31153	; 0x79b1
   2c504:	movt	r3, #40503	; 0x9e37
   2c508:	mul	r2, r3, r2
   2c50c:	ldr	r3, [fp, #-16]
   2c510:	eor	r2, r2, r3
   2c514:	movw	r3, #31153	; 0x79b1
   2c518:	movt	r3, #40503	; 0x9e37
   2c51c:	mul	r2, r3, r2
   2c520:	ldr	r3, [fp, #-8]
   2c524:	str	r2, [r3, #12]
   2c528:	ldr	r3, [fp, #-12]
   2c52c:	uxth	r3, r3
   2c530:	ldrh	r2, [fp, #-18]	; 0xffffffee
   2c534:	ldr	r1, [fp, #-16]
   2c538:	ldr	r0, [fp, #-8]
   2c53c:	bl	26f2c <flatcc_builder_default_alloc@@Base+0x488>
   2c540:	mov	r3, r0
   2c544:	mov	r0, r3
   2c548:	sub	sp, fp, #4
   2c54c:	ldr	fp, [sp]
   2c550:	add	sp, sp, #4
   2c554:	pop	{pc}		; (ldr pc, [sp], #4)
   2c558:	andeq	fp, r0, r0, ror #12
   2c55c:	andeq	sl, r0, r0, ror sp
   2c560:	andeq	fp, r0, r8, lsr #32
   2c564:	andeq	fp, r0, r4, lsr #12
   2c568:	andeq	sl, r0, r4, lsr sp
   2c56c:	andeq	fp, r0, r8, lsl #2
   2c570:	andeq	fp, r0, r4, asr #11
   2c574:	ldrdeq	sl, [r0], -r4
   2c578:	andeq	sl, r0, ip, lsr #26

0002c57c <flatcc_builder_table_edit@@Base>:
   2c57c:	str	fp, [sp, #-8]!
   2c580:	str	lr, [sp, #4]
   2c584:	add	fp, sp, #4
   2c588:	sub	sp, sp, #8
   2c58c:	str	r0, [fp, #-8]
   2c590:	str	r1, [fp, #-12]
   2c594:	ldr	r3, [fp, #-8]
   2c598:	ldr	r3, [r3, #32]
   2c59c:	ldrh	r3, [r3, #14]
   2c5a0:	cmp	r3, #3
   2c5a4:	beq	2c5c8 <flatcc_builder_table_edit@@Base+0x4c>
   2c5a8:	ldr	r3, [pc, #72]	; 2c5f8 <flatcc_builder_table_edit@@Base+0x7c>
   2c5ac:	add	r3, pc, r3
   2c5b0:	movw	r2, #1794	; 0x702
   2c5b4:	ldr	r1, [pc, #64]	; 2c5fc <flatcc_builder_table_edit@@Base+0x80>
   2c5b8:	add	r1, pc, r1
   2c5bc:	ldr	r0, [pc, #60]	; 2c600 <flatcc_builder_table_edit@@Base+0x84>
   2c5c0:	add	r0, pc, r0
   2c5c4:	bl	126ac <__assert_fail@plt>
   2c5c8:	ldr	r3, [fp, #-8]
   2c5cc:	ldr	r2, [r3, #16]
   2c5d0:	ldr	r3, [fp, #-8]
   2c5d4:	ldr	r1, [r3, #20]
   2c5d8:	ldr	r3, [fp, #-12]
   2c5dc:	sub	r3, r1, r3
   2c5e0:	add	r3, r2, r3
   2c5e4:	mov	r0, r3
   2c5e8:	sub	sp, fp, #4
   2c5ec:	ldr	fp, [sp]
   2c5f0:	add	sp, sp, #4
   2c5f4:	pop	{pc}		; (ldr pc, [sp], #4)
   2c5f8:	andeq	fp, r0, r8, lsl #10
   2c5fc:	strdeq	sl, [r0], -ip
   2c600:			; <UNDEFINED> instruction: 0x0000aeb4

0002c604 <flatcc_builder_table_add_copy@@Base>:
   2c604:	str	fp, [sp, #-8]!
   2c608:	str	lr, [sp, #4]
   2c60c:	add	fp, sp, #4
   2c610:	sub	sp, sp, #24
   2c614:	str	r0, [fp, #-16]
   2c618:	str	r1, [fp, #-20]	; 0xffffffec
   2c61c:	str	r2, [fp, #-24]	; 0xffffffe8
   2c620:	str	r3, [fp, #-28]	; 0xffffffe4
   2c624:	ldrh	r3, [fp, #4]
   2c628:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2c62c:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c630:	ldr	r0, [fp, #-16]
   2c634:	bl	2c400 <flatcc_builder_table_add@@Base>
   2c638:	str	r0, [fp, #-8]
   2c63c:	ldr	r3, [fp, #-8]
   2c640:	cmp	r3, #0
   2c644:	beq	2c658 <flatcc_builder_table_add_copy@@Base+0x54>
   2c648:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2c64c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2c650:	ldr	r0, [fp, #-8]
   2c654:	bl	125a4 <memcpy@plt>
   2c658:	ldr	r3, [fp, #-8]
   2c65c:	mov	r0, r3
   2c660:	sub	sp, fp, #4
   2c664:	ldr	fp, [sp]
   2c668:	add	sp, sp, #4
   2c66c:	pop	{pc}		; (ldr pc, [sp], #4)

0002c670 <flatcc_builder_table_add_offset@@Base>:
   2c670:	str	fp, [sp, #-8]!
   2c674:	str	lr, [sp, #4]
   2c678:	add	fp, sp, #4
   2c67c:	sub	sp, sp, #8
   2c680:	str	r0, [fp, #-8]
   2c684:	str	r1, [fp, #-12]
   2c688:	ldr	r3, [fp, #-8]
   2c68c:	ldr	r3, [r3, #32]
   2c690:	ldrh	r3, [r3, #14]
   2c694:	cmp	r3, #3
   2c698:	beq	2c6bc <flatcc_builder_table_add_offset@@Base+0x4c>
   2c69c:	ldr	r3, [pc, #244]	; 2c798 <flatcc_builder_table_add_offset@@Base+0x128>
   2c6a0:	add	r3, pc, r3
   2c6a4:	movw	r2, #1811	; 0x713
   2c6a8:	ldr	r1, [pc, #236]	; 2c79c <flatcc_builder_table_add_offset@@Base+0x12c>
   2c6ac:	add	r1, pc, r1
   2c6b0:	ldr	r0, [pc, #232]	; 2c7a0 <flatcc_builder_table_add_offset@@Base+0x130>
   2c6b4:	add	r0, pc, r0
   2c6b8:	bl	126ac <__assert_fail@plt>
   2c6bc:	ldr	r3, [fp, #-12]
   2c6c0:	cmp	r3, #0
   2c6c4:	blt	2c6d8 <flatcc_builder_table_add_offset@@Base+0x68>
   2c6c8:	ldr	r3, [fp, #-12]
   2c6cc:	movw	r2, #32764	; 0x7ffc
   2c6d0:	cmp	r3, r2
   2c6d4:	ble	2c6f8 <flatcc_builder_table_add_offset@@Base+0x88>
   2c6d8:	ldr	r3, [pc, #196]	; 2c7a4 <flatcc_builder_table_add_offset@@Base+0x134>
   2c6dc:	add	r3, pc, r3
   2c6e0:	movw	r2, #1812	; 0x714
   2c6e4:	ldr	r1, [pc, #188]	; 2c7a8 <flatcc_builder_table_add_offset@@Base+0x138>
   2c6e8:	add	r1, pc, r1
   2c6ec:	ldr	r0, [pc, #184]	; 2c7ac <flatcc_builder_table_add_offset@@Base+0x13c>
   2c6f0:	add	r0, pc, r0
   2c6f4:	bl	126ac <__assert_fail@plt>
   2c6f8:	ldr	r3, [fp, #-8]
   2c6fc:	ldr	r2, [r3, #4]
   2c700:	ldr	r3, [fp, #-12]
   2c704:	lsl	r3, r3, #1
   2c708:	add	r3, r2, r3
   2c70c:	ldrh	r3, [r3]
   2c710:	cmp	r3, #0
   2c714:	beq	2c738 <flatcc_builder_table_add_offset@@Base+0xc8>
   2c718:	ldr	r3, [pc, #144]	; 2c7b0 <flatcc_builder_table_add_offset@@Base+0x140>
   2c71c:	add	r3, pc, r3
   2c720:	movw	r2, #1819	; 0x71b
   2c724:	ldr	r1, [pc, #136]	; 2c7b4 <flatcc_builder_table_add_offset@@Base+0x144>
   2c728:	add	r1, pc, r1
   2c72c:	ldr	r0, [pc, #132]	; 2c7b8 <flatcc_builder_table_add_offset@@Base+0x148>
   2c730:	add	r0, pc, r0
   2c734:	bl	126ac <__assert_fail@plt>
   2c738:	ldr	r3, [fp, #-8]
   2c73c:	ldr	r2, [r3, #12]
   2c740:	ldr	r3, [fp, #-12]
   2c744:	eor	r2, r2, r3
   2c748:	movw	r3, #31153	; 0x79b1
   2c74c:	movt	r3, #40503	; 0x9e37
   2c750:	mul	r3, r3, r2
   2c754:	eor	r2, r3, #4
   2c758:	movw	r3, #31153	; 0x79b1
   2c75c:	movt	r3, #40503	; 0x9e37
   2c760:	mul	r2, r3, r2
   2c764:	ldr	r3, [fp, #-8]
   2c768:	str	r2, [r3, #12]
   2c76c:	ldr	r3, [fp, #-12]
   2c770:	uxth	r3, r3
   2c774:	mov	r1, r3
   2c778:	ldr	r0, [fp, #-8]
   2c77c:	bl	27050 <flatcc_builder_default_alloc@@Base+0x5ac>
   2c780:	mov	r3, r0
   2c784:	mov	r0, r3
   2c788:	sub	sp, fp, #4
   2c78c:	ldr	fp, [sp]
   2c790:	add	sp, sp, #4
   2c794:	pop	{pc}		; (ldr pc, [sp], #4)
   2c798:	andeq	fp, r0, r0, lsr r4
   2c79c:	andeq	sl, r0, r8, lsl #22
   2c7a0:	andeq	sl, r0, r0, asr #27
   2c7a4:	strdeq	fp, [r0], -r4
   2c7a8:	andeq	sl, r0, ip, asr #21
   2c7ac:	andeq	sl, r0, r0, lsr #29
   2c7b0:			; <UNDEFINED> instruction: 0x0000b3b4
   2c7b4:	andeq	sl, r0, ip, lsl #21
   2c7b8:	andeq	sl, r0, r4, ror #21

0002c7bc <flatcc_builder_push_buffer_alignment@@Base>:
   2c7bc:	push	{fp}		; (str fp, [sp, #-4]!)
   2c7c0:	add	fp, sp, #0
   2c7c4:	sub	sp, sp, #20
   2c7c8:	str	r0, [fp, #-16]
   2c7cc:	ldr	r3, [fp, #-16]
   2c7d0:	ldrh	r3, [r3, #128]	; 0x80
   2c7d4:	strh	r3, [fp, #-6]
   2c7d8:	ldr	r3, [fp, #-16]
   2c7dc:	mov	r2, #4
   2c7e0:	strh	r2, [r3, #128]	; 0x80
   2c7e4:	ldrh	r3, [fp, #-6]
   2c7e8:	mov	r0, r3
   2c7ec:	add	sp, fp, #0
   2c7f0:	pop	{fp}		; (ldr fp, [sp], #4)
   2c7f4:	bx	lr

0002c7f8 <flatcc_builder_pop_buffer_alignment@@Base>:
   2c7f8:	str	fp, [sp, #-8]!
   2c7fc:	str	lr, [sp, #4]
   2c800:	add	fp, sp, #4
   2c804:	sub	sp, sp, #8
   2c808:	str	r0, [fp, #-8]
   2c80c:	mov	r3, r1
   2c810:	strh	r3, [fp, #-10]
   2c814:	ldrh	r3, [fp, #-10]
   2c818:	mov	r1, r3
   2c81c:	ldr	r0, [fp, #-8]
   2c820:	bl	27a5c <flatcc_builder_clear@@Base+0xc4>
   2c824:	nop	{0}
   2c828:	sub	sp, fp, #4
   2c82c:	ldr	fp, [sp]
   2c830:	add	sp, sp, #4
   2c834:	pop	{pc}		; (ldr pc, [sp], #4)

0002c838 <flatcc_builder_get_buffer_alignment@@Base>:
   2c838:	push	{fp}		; (str fp, [sp, #-4]!)
   2c83c:	add	fp, sp, #0
   2c840:	sub	sp, sp, #12
   2c844:	str	r0, [fp, #-8]
   2c848:	ldr	r3, [fp, #-8]
   2c84c:	ldrh	r3, [r3, #128]	; 0x80
   2c850:	mov	r0, r3
   2c854:	add	sp, fp, #0
   2c858:	pop	{fp}		; (ldr fp, [sp], #4)
   2c85c:	bx	lr

0002c860 <flatcc_builder_set_vtable_clustering@@Base>:
   2c860:	push	{fp}		; (str fp, [sp, #-4]!)
   2c864:	add	fp, sp, #0
   2c868:	sub	sp, sp, #12
   2c86c:	str	r0, [fp, #-8]
   2c870:	str	r1, [fp, #-12]
   2c874:	ldr	r3, [fp, #-12]
   2c878:	cmp	r3, #0
   2c87c:	moveq	r3, #1
   2c880:	movne	r3, #0
   2c884:	uxtb	r3, r3
   2c888:	mov	r2, r3
   2c88c:	ldr	r3, [fp, #-8]
   2c890:	str	r2, [r3, #180]	; 0xb4
   2c894:	nop	{0}
   2c898:	add	sp, fp, #0
   2c89c:	pop	{fp}		; (ldr fp, [sp], #4)
   2c8a0:	bx	lr

0002c8a4 <flatcc_builder_set_block_align@@Base>:
   2c8a4:	push	{fp}		; (str fp, [sp, #-4]!)
   2c8a8:	add	fp, sp, #0
   2c8ac:	sub	sp, sp, #12
   2c8b0:	str	r0, [fp, #-8]
   2c8b4:	mov	r3, r1
   2c8b8:	strh	r3, [fp, #-10]
   2c8bc:	ldr	r3, [fp, #-8]
   2c8c0:	ldrh	r2, [fp, #-10]
   2c8c4:	strh	r2, [r3, #132]	; 0x84
   2c8c8:	nop	{0}
   2c8cc:	add	sp, fp, #0
   2c8d0:	pop	{fp}		; (ldr fp, [sp], #4)
   2c8d4:	bx	lr

0002c8d8 <flatcc_builder_get_level@@Base>:
   2c8d8:	push	{fp}		; (str fp, [sp, #-4]!)
   2c8dc:	add	fp, sp, #0
   2c8e0:	sub	sp, sp, #12
   2c8e4:	str	r0, [fp, #-8]
   2c8e8:	ldr	r3, [fp, #-8]
   2c8ec:	ldr	r3, [r3, #156]	; 0x9c
   2c8f0:	mov	r0, r3
   2c8f4:	add	sp, fp, #0
   2c8f8:	pop	{fp}		; (ldr fp, [sp], #4)
   2c8fc:	bx	lr

0002c900 <flatcc_builder_set_max_level@@Base>:
   2c900:	push	{fp}		; (str fp, [sp, #-4]!)
   2c904:	add	fp, sp, #0
   2c908:	sub	sp, sp, #12
   2c90c:	str	r0, [fp, #-8]
   2c910:	str	r1, [fp, #-12]
   2c914:	ldr	r3, [fp, #-8]
   2c918:	ldr	r2, [fp, #-12]
   2c91c:	str	r2, [r3, #176]	; 0xb0
   2c920:	ldr	r3, [fp, #-8]
   2c924:	ldr	r2, [r3, #160]	; 0xa0
   2c928:	ldr	r3, [fp, #-8]
   2c92c:	ldr	r3, [r3, #176]	; 0xb0
   2c930:	cmp	r2, r3
   2c934:	bge	2c948 <flatcc_builder_set_max_level@@Base+0x48>
   2c938:	ldr	r3, [fp, #-8]
   2c93c:	ldr	r2, [r3, #176]	; 0xb0
   2c940:	ldr	r3, [fp, #-8]
   2c944:	str	r2, [r3, #160]	; 0xa0
   2c948:	nop	{0}
   2c94c:	add	sp, fp, #0
   2c950:	pop	{fp}		; (ldr fp, [sp], #4)
   2c954:	bx	lr

0002c958 <flatcc_builder_get_buffer_size@@Base>:
   2c958:	push	{fp}		; (str fp, [sp, #-4]!)
   2c95c:	add	fp, sp, #0
   2c960:	sub	sp, sp, #12
   2c964:	str	r0, [fp, #-8]
   2c968:	ldr	r3, [fp, #-8]
   2c96c:	ldr	r2, [r3, #140]	; 0x8c
   2c970:	ldr	r3, [fp, #-8]
   2c974:	ldr	r3, [r3, #136]	; 0x88
   2c978:	sub	r3, r2, r3
   2c97c:	mov	r0, r3
   2c980:	add	sp, fp, #0
   2c984:	pop	{fp}		; (ldr fp, [sp], #4)
   2c988:	bx	lr

0002c98c <flatcc_builder_get_buffer_start@@Base>:
   2c98c:	push	{fp}		; (str fp, [sp, #-4]!)
   2c990:	add	fp, sp, #0
   2c994:	sub	sp, sp, #12
   2c998:	str	r0, [fp, #-8]
   2c99c:	ldr	r3, [fp, #-8]
   2c9a0:	ldr	r3, [r3, #136]	; 0x88
   2c9a4:	mov	r0, r3
   2c9a8:	add	sp, fp, #0
   2c9ac:	pop	{fp}		; (ldr fp, [sp], #4)
   2c9b0:	bx	lr

0002c9b4 <flatcc_builder_get_buffer_end@@Base>:
   2c9b4:	push	{fp}		; (str fp, [sp, #-4]!)
   2c9b8:	add	fp, sp, #0
   2c9bc:	sub	sp, sp, #12
   2c9c0:	str	r0, [fp, #-8]
   2c9c4:	ldr	r3, [fp, #-8]
   2c9c8:	ldr	r3, [r3, #140]	; 0x8c
   2c9cc:	mov	r0, r3
   2c9d0:	add	sp, fp, #0
   2c9d4:	pop	{fp}		; (ldr fp, [sp], #4)
   2c9d8:	bx	lr

0002c9dc <flatcc_builder_set_vtable_cache_limit@@Base>:
   2c9dc:	push	{fp}		; (str fp, [sp, #-4]!)
   2c9e0:	add	fp, sp, #0
   2c9e4:	sub	sp, sp, #12
   2c9e8:	str	r0, [fp, #-8]
   2c9ec:	str	r1, [fp, #-12]
   2c9f0:	ldr	r3, [fp, #-8]
   2c9f4:	ldr	r2, [fp, #-12]
   2c9f8:	str	r2, [r3, #172]	; 0xac
   2c9fc:	nop	{0}
   2ca00:	add	sp, fp, #0
   2ca04:	pop	{fp}		; (ldr fp, [sp], #4)
   2ca08:	bx	lr

0002ca0c <flatcc_builder_set_identifier@@Base>:
   2ca0c:	push	{fp}		; (str fp, [sp, #-4]!)
   2ca10:	add	fp, sp, #0
   2ca14:	sub	sp, sp, #12
   2ca18:	str	r0, [fp, #-8]
   2ca1c:	str	r1, [fp, #-12]
   2ca20:	ldr	r1, [pc, #60]	; 2ca64 <flatcc_builder_set_identifier@@Base+0x58>
   2ca24:	add	r1, pc, r1
   2ca28:	ldr	r3, [fp, #-8]
   2ca2c:	add	r2, r3, #168	; 0xa8
   2ca30:	ldr	r3, [fp, #-12]
   2ca34:	cmp	r3, #0
   2ca38:	beq	2ca44 <flatcc_builder_set_identifier@@Base+0x38>
   2ca3c:	ldr	r3, [fp, #-12]
   2ca40:	b	2ca4c <flatcc_builder_set_identifier@@Base+0x40>
   2ca44:	ldr	r3, [pc, #28]	; 2ca68 <flatcc_builder_set_identifier@@Base+0x5c>
   2ca48:	ldr	r3, [r1, r3]
   2ca4c:	ldr	r3, [r3]
   2ca50:	str	r3, [r2]
   2ca54:	nop	{0}
   2ca58:	add	sp, fp, #0
   2ca5c:	pop	{fp}		; (ldr fp, [sp], #4)
   2ca60:	bx	lr
   2ca64:	ldrdeq	ip, [r1], -r4
   2ca68:	andeq	r0, r0, r0, ror r0

0002ca6c <flatcc_builder_get_type@@Base>:
   2ca6c:	push	{fp}		; (str fp, [sp, #-4]!)
   2ca70:	add	fp, sp, #0
   2ca74:	sub	sp, sp, #12
   2ca78:	str	r0, [fp, #-8]
   2ca7c:	ldr	r3, [fp, #-8]
   2ca80:	ldr	r3, [r3, #32]
   2ca84:	cmp	r3, #0
   2ca88:	beq	2ca9c <flatcc_builder_get_type@@Base+0x30>
   2ca8c:	ldr	r3, [fp, #-8]
   2ca90:	ldr	r3, [r3, #32]
   2ca94:	ldrh	r3, [r3, #14]
   2ca98:	b	2caa0 <flatcc_builder_get_type@@Base+0x34>
   2ca9c:	mov	r3, #0
   2caa0:	mov	r0, r3
   2caa4:	add	sp, fp, #0
   2caa8:	pop	{fp}		; (ldr fp, [sp], #4)
   2caac:	bx	lr

0002cab0 <flatcc_builder_get_type_at@@Base>:
   2cab0:	push	{fp}		; (str fp, [sp, #-4]!)
   2cab4:	add	fp, sp, #0
   2cab8:	sub	sp, sp, #12
   2cabc:	str	r0, [fp, #-8]
   2cac0:	str	r1, [fp, #-12]
   2cac4:	ldr	r3, [fp, #-12]
   2cac8:	cmp	r3, #0
   2cacc:	ble	2cae4 <flatcc_builder_get_type_at@@Base+0x34>
   2cad0:	ldr	r3, [fp, #-8]
   2cad4:	ldr	r3, [r3, #156]	; 0x9c
   2cad8:	ldr	r2, [fp, #-12]
   2cadc:	cmp	r2, r3
   2cae0:	ble	2caec <flatcc_builder_get_type_at@@Base+0x3c>
   2cae4:	mov	r3, #0
   2cae8:	b	2cb20 <flatcc_builder_get_type_at@@Base+0x70>
   2caec:	ldr	r3, [fp, #-8]
   2caf0:	ldr	r2, [r3, #32]
   2caf4:	ldr	r3, [fp, #-8]
   2caf8:	ldr	r3, [r3, #156]	; 0x9c
   2cafc:	ldr	r1, [fp, #-12]
   2cb00:	sub	r3, r1, r3
   2cb04:	mov	r1, r3
   2cb08:	mov	r3, r1
   2cb0c:	lsl	r3, r3, #3
   2cb10:	add	r3, r3, r1
   2cb14:	lsl	r3, r3, #2
   2cb18:	add	r3, r2, r3
   2cb1c:	ldrh	r3, [r3, #14]
   2cb20:	mov	r0, r3
   2cb24:	add	sp, fp, #0
   2cb28:	pop	{fp}		; (ldr fp, [sp], #4)
   2cb2c:	bx	lr

0002cb30 <flatcc_builder_get_direct_buffer@@Base>:
   2cb30:	str	fp, [sp, #-8]!
   2cb34:	str	lr, [sp, #4]
   2cb38:	add	fp, sp, #4
   2cb3c:	sub	sp, sp, #8
   2cb40:	str	r0, [fp, #-8]
   2cb44:	str	r1, [fp, #-12]
   2cb48:	ldr	r3, [fp, #-8]
   2cb4c:	ldr	r3, [r3, #184]	; 0xb8
   2cb50:	cmp	r3, #0
   2cb54:	beq	2cb74 <flatcc_builder_get_direct_buffer@@Base+0x44>
   2cb58:	ldr	r3, [fp, #-8]
   2cb5c:	add	r3, r3, #188	; 0xbc
   2cb60:	ldr	r1, [fp, #-12]
   2cb64:	mov	r0, r3
   2cb68:	bl	269c4 <main@@Base+0x1d8>
   2cb6c:	mov	r3, r0
   2cb70:	b	2cb90 <flatcc_builder_get_direct_buffer@@Base+0x60>
   2cb74:	ldr	r3, [fp, #-12]
   2cb78:	cmp	r3, #0
   2cb7c:	beq	2cb8c <flatcc_builder_get_direct_buffer@@Base+0x5c>
   2cb80:	ldr	r3, [fp, #-12]
   2cb84:	mov	r2, #0
   2cb88:	str	r2, [r3]
   2cb8c:	mov	r3, #0
   2cb90:	mov	r0, r3
   2cb94:	sub	sp, fp, #4
   2cb98:	ldr	fp, [sp]
   2cb9c:	add	sp, sp, #4
   2cba0:	pop	{pc}		; (ldr pc, [sp], #4)

0002cba4 <flatcc_builder_copy_buffer@@Base>:
   2cba4:	str	fp, [sp, #-8]!
   2cba8:	str	lr, [sp, #4]
   2cbac:	add	fp, sp, #4
   2cbb0:	sub	sp, sp, #16
   2cbb4:	str	r0, [fp, #-8]
   2cbb8:	str	r1, [fp, #-12]
   2cbbc:	str	r2, [fp, #-16]
   2cbc0:	ldr	r3, [fp, #-8]
   2cbc4:	ldr	r3, [r3, #184]	; 0xb8
   2cbc8:	cmp	r3, #0
   2cbcc:	bne	2cbd8 <flatcc_builder_copy_buffer@@Base+0x34>
   2cbd0:	mov	r3, #0
   2cbd4:	b	2cc24 <flatcc_builder_copy_buffer@@Base+0x80>
   2cbd8:	ldr	r3, [fp, #-8]
   2cbdc:	add	r3, r3, #188	; 0xbc
   2cbe0:	ldr	r2, [fp, #-16]
   2cbe4:	ldr	r1, [fp, #-12]
   2cbe8:	mov	r0, r3
   2cbec:	bl	2d9f8 <flatcc_emitter_copy_buffer@@Base>
   2cbf0:	str	r0, [fp, #-12]
   2cbf4:	ldr	r3, [fp, #-12]
   2cbf8:	cmp	r3, #0
   2cbfc:	bne	2cc20 <flatcc_builder_copy_buffer@@Base+0x7c>
   2cc00:	ldr	r3, [pc, #48]	; 2cc38 <flatcc_builder_copy_buffer@@Base+0x94>
   2cc04:	add	r3, pc, r3
   2cc08:	movw	r2, #1926	; 0x786
   2cc0c:	ldr	r1, [pc, #40]	; 2cc3c <flatcc_builder_copy_buffer@@Base+0x98>
   2cc10:	add	r1, pc, r1
   2cc14:	ldr	r0, [pc, #36]	; 2cc40 <flatcc_builder_copy_buffer@@Base+0x9c>
   2cc18:	add	r0, pc, r0
   2cc1c:	bl	126ac <__assert_fail@plt>
   2cc20:	ldr	r3, [fp, #-12]
   2cc24:	mov	r0, r3
   2cc28:	sub	sp, fp, #4
   2cc2c:	ldr	fp, [sp]
   2cc30:	add	sp, sp, #4
   2cc34:	pop	{pc}		; (ldr pc, [sp], #4)
   2cc38:	andeq	sl, r0, ip, ror #29
   2cc3c:	andeq	sl, r0, r4, lsr #11
   2cc40:			; <UNDEFINED> instruction: 0x0000a9bc

0002cc44 <flatcc_builder_finalize_buffer@@Base>:
   2cc44:	str	fp, [sp, #-8]!
   2cc48:	str	lr, [sp, #4]
   2cc4c:	add	fp, sp, #4
   2cc50:	sub	sp, sp, #16
   2cc54:	str	r0, [fp, #-16]
   2cc58:	str	r1, [fp, #-20]	; 0xffffffec
   2cc5c:	ldr	r0, [fp, #-16]
   2cc60:	bl	2c958 <flatcc_builder_get_buffer_size@@Base>
   2cc64:	str	r0, [fp, #-8]
   2cc68:	ldr	r3, [fp, #-20]	; 0xffffffec
   2cc6c:	cmp	r3, #0
   2cc70:	beq	2cc80 <flatcc_builder_finalize_buffer@@Base+0x3c>
   2cc74:	ldr	r3, [fp, #-20]	; 0xffffffec
   2cc78:	ldr	r2, [fp, #-8]
   2cc7c:	str	r2, [r3]
   2cc80:	ldr	r0, [fp, #-8]
   2cc84:	bl	125f8 <malloc@plt>
   2cc88:	mov	r3, r0
   2cc8c:	str	r3, [fp, #-12]
   2cc90:	ldr	r3, [fp, #-12]
   2cc94:	cmp	r3, #0
   2cc98:	bne	2ccbc <flatcc_builder_finalize_buffer@@Base+0x78>
   2cc9c:	ldr	r3, [pc, #148]	; 2cd38 <flatcc_builder_finalize_buffer@@Base+0xf4>
   2cca0:	add	r3, pc, r3
   2cca4:	movw	r2, #1944	; 0x798
   2cca8:	ldr	r1, [pc, #140]	; 2cd3c <flatcc_builder_finalize_buffer@@Base+0xf8>
   2ccac:	add	r1, pc, r1
   2ccb0:	ldr	r0, [pc, #136]	; 2cd40 <flatcc_builder_finalize_buffer@@Base+0xfc>
   2ccb4:	add	r0, pc, r0
   2ccb8:	bl	126ac <__assert_fail@plt>
   2ccbc:	ldr	r2, [fp, #-8]
   2ccc0:	ldr	r1, [fp, #-12]
   2ccc4:	ldr	r0, [fp, #-16]
   2ccc8:	bl	2cba4 <flatcc_builder_copy_buffer@@Base>
   2cccc:	mov	r3, r0
   2ccd0:	cmp	r3, #0
   2ccd4:	bne	2ccf8 <flatcc_builder_finalize_buffer@@Base+0xb4>
   2ccd8:	ldr	r3, [pc, #100]	; 2cd44 <flatcc_builder_finalize_buffer@@Base+0x100>
   2ccdc:	add	r3, pc, r3
   2cce0:	movw	r2, #1948	; 0x79c
   2cce4:	ldr	r1, [pc, #92]	; 2cd48 <flatcc_builder_finalize_buffer@@Base+0x104>
   2cce8:	add	r1, pc, r1
   2ccec:	ldr	r0, [pc, #88]	; 2cd4c <flatcc_builder_finalize_buffer@@Base+0x108>
   2ccf0:	add	r0, pc, r0
   2ccf4:	bl	126ac <__assert_fail@plt>
   2ccf8:	nop	{0}
   2ccfc:	ldr	r3, [fp, #-12]
   2cd00:	cmp	r3, #0
   2cd04:	bne	2cd20 <flatcc_builder_finalize_buffer@@Base+0xdc>
   2cd08:	ldr	r3, [fp, #-20]	; 0xffffffec
   2cd0c:	cmp	r3, #0
   2cd10:	beq	2cd20 <flatcc_builder_finalize_buffer@@Base+0xdc>
   2cd14:	ldr	r3, [fp, #-20]	; 0xffffffec
   2cd18:	mov	r2, #0
   2cd1c:	str	r2, [r3]
   2cd20:	ldr	r3, [fp, #-12]
   2cd24:	mov	r0, r3
   2cd28:	sub	sp, fp, #4
   2cd2c:	ldr	fp, [sp]
   2cd30:	add	sp, sp, #4
   2cd34:	pop	{pc}		; (ldr pc, [sp], #4)
   2cd38:	andeq	sl, r0, ip, ror #28
   2cd3c:	andeq	sl, r0, r8, lsl #10
   2cd40:	andeq	sl, r0, r0, ror #10
   2cd44:	andeq	sl, r0, r0, lsr lr
   2cd48:	andeq	sl, r0, ip, asr #9
   2cd4c:	andeq	sl, r0, r4, lsr #10

0002cd50 <flatcc_builder_finalize_aligned_buffer@@Base>:
   2cd50:	str	fp, [sp, #-8]!
   2cd54:	str	lr, [sp, #4]
   2cd58:	add	fp, sp, #4
   2cd5c:	sub	sp, sp, #24
   2cd60:	str	r0, [fp, #-24]	; 0xffffffe8
   2cd64:	str	r1, [fp, #-28]	; 0xffffffe4
   2cd68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2cd6c:	bl	2c958 <flatcc_builder_get_buffer_size@@Base>
   2cd70:	str	r0, [fp, #-12]
   2cd74:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2cd78:	cmp	r3, #0
   2cd7c:	beq	2cd8c <flatcc_builder_finalize_aligned_buffer@@Base+0x3c>
   2cd80:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2cd84:	ldr	r2, [fp, #-12]
   2cd88:	str	r2, [r3]
   2cd8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2cd90:	bl	2c838 <flatcc_builder_get_buffer_alignment@@Base>
   2cd94:	mov	r3, r0
   2cd98:	str	r3, [fp, #-16]
   2cd9c:	ldr	r2, [fp, #-12]
   2cda0:	ldr	r3, [fp, #-16]
   2cda4:	add	r3, r2, r3
   2cda8:	sub	r2, r3, #1
   2cdac:	ldr	r3, [fp, #-16]
   2cdb0:	rsb	r3, r3, #0
   2cdb4:	and	r3, r3, r2
   2cdb8:	str	r3, [fp, #-12]
   2cdbc:	ldr	r1, [fp, #-12]
   2cdc0:	ldr	r0, [fp, #-16]
   2cdc4:	bl	268c4 <main@@Base+0xd8>
   2cdc8:	str	r0, [fp, #-8]
   2cdcc:	ldr	r3, [fp, #-8]
   2cdd0:	cmp	r3, #0
   2cdd4:	beq	2ce08 <flatcc_builder_finalize_aligned_buffer@@Base+0xb8>
   2cdd8:	ldr	r2, [fp, #-12]
   2cddc:	ldr	r1, [fp, #-8]
   2cde0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2cde4:	bl	2cba4 <flatcc_builder_copy_buffer@@Base>
   2cde8:	mov	r3, r0
   2cdec:	cmp	r3, #0
   2cdf0:	bne	2ce10 <flatcc_builder_finalize_aligned_buffer@@Base+0xc0>
   2cdf4:	ldr	r0, [fp, #-8]
   2cdf8:	bl	12598 <free@plt>
   2cdfc:	mov	r3, #0
   2ce00:	str	r3, [fp, #-8]
   2ce04:	b	2ce14 <flatcc_builder_finalize_aligned_buffer@@Base+0xc4>
   2ce08:	nop	{0}
   2ce0c:	b	2ce14 <flatcc_builder_finalize_aligned_buffer@@Base+0xc4>
   2ce10:	nop	{0}
   2ce14:	ldr	r3, [fp, #-8]
   2ce18:	cmp	r3, #0
   2ce1c:	bne	2ce38 <flatcc_builder_finalize_aligned_buffer@@Base+0xe8>
   2ce20:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2ce24:	cmp	r3, #0
   2ce28:	beq	2ce38 <flatcc_builder_finalize_aligned_buffer@@Base+0xe8>
   2ce2c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2ce30:	mov	r2, #0
   2ce34:	str	r2, [r3]
   2ce38:	ldr	r3, [fp, #-8]
   2ce3c:	mov	r0, r3
   2ce40:	sub	sp, fp, #4
   2ce44:	ldr	fp, [sp]
   2ce48:	add	sp, sp, #4
   2ce4c:	pop	{pc}		; (ldr pc, [sp], #4)

0002ce50 <flatcc_builder_aligned_alloc@@Base>:
   2ce50:	str	fp, [sp, #-8]!
   2ce54:	str	lr, [sp, #4]
   2ce58:	add	fp, sp, #4
   2ce5c:	sub	sp, sp, #8
   2ce60:	str	r0, [fp, #-8]
   2ce64:	str	r1, [fp, #-12]
   2ce68:	ldr	r1, [fp, #-12]
   2ce6c:	ldr	r0, [fp, #-8]
   2ce70:	bl	268c4 <main@@Base+0xd8>
   2ce74:	mov	r3, r0
   2ce78:	mov	r0, r3
   2ce7c:	sub	sp, fp, #4
   2ce80:	ldr	fp, [sp]
   2ce84:	add	sp, sp, #4
   2ce88:	pop	{pc}		; (ldr pc, [sp], #4)

0002ce8c <flatcc_builder_aligned_free@@Base>:
   2ce8c:	str	fp, [sp, #-8]!
   2ce90:	str	lr, [sp, #4]
   2ce94:	add	fp, sp, #4
   2ce98:	sub	sp, sp, #8
   2ce9c:	str	r0, [fp, #-8]
   2cea0:	ldr	r0, [fp, #-8]
   2cea4:	bl	12598 <free@plt>
   2cea8:	nop	{0}
   2ceac:	sub	sp, fp, #4
   2ceb0:	ldr	fp, [sp]
   2ceb4:	add	sp, sp, #4
   2ceb8:	pop	{pc}		; (ldr pc, [sp], #4)

0002cebc <flatcc_builder_get_emit_context@@Base>:
   2cebc:	push	{fp}		; (str fp, [sp, #-4]!)
   2cec0:	add	fp, sp, #0
   2cec4:	sub	sp, sp, #12
   2cec8:	str	r0, [fp, #-8]
   2cecc:	ldr	r3, [fp, #-8]
   2ced0:	ldr	r3, [r3, #36]	; 0x24
   2ced4:	mov	r0, r3
   2ced8:	add	sp, fp, #0
   2cedc:	pop	{fp}		; (ldr fp, [sp], #4)
   2cee0:	bx	lr
   2cee4:	str	fp, [sp, #-8]!
   2cee8:	str	lr, [sp, #4]
   2ceec:	add	fp, sp, #4
   2cef0:	sub	sp, sp, #16
   2cef4:	str	r0, [fp, #-16]
   2cef8:	mov	r3, #0
   2cefc:	str	r3, [fp, #-8]
   2cf00:	ldr	r3, [fp, #-16]
   2cf04:	ldr	r3, [r3]
   2cf08:	cmp	r3, #0
   2cf0c:	beq	2cf64 <flatcc_builder_get_emit_context@@Base+0xa8>
   2cf10:	ldr	r3, [fp, #-16]
   2cf14:	ldr	r3, [r3]
   2cf18:	ldr	r2, [r3, #2948]	; 0xb84
   2cf1c:	ldr	r3, [fp, #-16]
   2cf20:	ldr	r3, [r3, #4]
   2cf24:	cmp	r2, r3
   2cf28:	beq	2cf64 <flatcc_builder_get_emit_context@@Base+0xa8>
   2cf2c:	ldr	r3, [fp, #-16]
   2cf30:	ldr	r3, [r3]
   2cf34:	ldr	r2, [r3, #2952]	; 0xb88
   2cf38:	ldr	r3, [fp, #-16]
   2cf3c:	ldr	r3, [r3]
   2cf40:	ldr	r3, [r3, #2948]	; 0xb84
   2cf44:	sub	r2, r2, #2944	; 0xb80
   2cf48:	str	r2, [r3, #2952]	; 0xb88
   2cf4c:	ldr	r3, [fp, #-16]
   2cf50:	ldr	r3, [r3]
   2cf54:	ldr	r2, [r3, #2948]	; 0xb84
   2cf58:	ldr	r3, [fp, #-16]
   2cf5c:	str	r2, [r3]
   2cf60:	b	2d08c <flatcc_builder_get_emit_context@@Base+0x1d0>
   2cf64:	movw	r0, #2956	; 0xb8c
   2cf68:	bl	125f8 <malloc@plt>
   2cf6c:	mov	r3, r0
   2cf70:	str	r3, [fp, #-8]
   2cf74:	ldr	r3, [fp, #-8]
   2cf78:	cmp	r3, #0
   2cf7c:	bne	2cf88 <flatcc_builder_get_emit_context@@Base+0xcc>
   2cf80:	mvn	r3, #0
   2cf84:	b	2d0d0 <flatcc_builder_get_emit_context@@Base+0x214>
   2cf88:	ldr	r3, [fp, #-16]
   2cf8c:	ldr	r3, [r3, #28]
   2cf90:	add	r2, r3, #2944	; 0xb80
   2cf94:	ldr	r3, [fp, #-16]
   2cf98:	str	r2, [r3, #28]
   2cf9c:	ldr	r3, [fp, #-16]
   2cfa0:	ldr	r3, [r3]
   2cfa4:	cmp	r3, #0
   2cfa8:	beq	2cffc <flatcc_builder_get_emit_context@@Base+0x140>
   2cfac:	ldr	r3, [fp, #-16]
   2cfb0:	ldr	r2, [r3, #4]
   2cfb4:	ldr	r3, [fp, #-8]
   2cfb8:	str	r2, [r3, #2948]	; 0xb84
   2cfbc:	ldr	r3, [fp, #-16]
   2cfc0:	ldr	r2, [r3]
   2cfc4:	ldr	r3, [fp, #-8]
   2cfc8:	str	r2, [r3, #2944]	; 0xb80
   2cfcc:	ldr	r3, [fp, #-16]
   2cfd0:	ldr	r3, [r3]
   2cfd4:	ldr	r2, [fp, #-8]
   2cfd8:	str	r2, [r3, #2948]	; 0xb84
   2cfdc:	ldr	r3, [fp, #-16]
   2cfe0:	ldr	r3, [r3, #4]
   2cfe4:	ldr	r2, [fp, #-8]
   2cfe8:	str	r2, [r3, #2944]	; 0xb80
   2cfec:	ldr	r3, [fp, #-16]
   2cff0:	ldr	r2, [fp, #-8]
   2cff4:	str	r2, [r3]
   2cff8:	b	2d08c <flatcc_builder_get_emit_context@@Base+0x1d0>
   2cffc:	ldr	r3, [fp, #-16]
   2d000:	ldr	r2, [fp, #-8]
   2d004:	str	r2, [r3]
   2d008:	ldr	r3, [fp, #-16]
   2d00c:	ldr	r2, [fp, #-8]
   2d010:	str	r2, [r3, #4]
   2d014:	ldr	r3, [fp, #-8]
   2d018:	ldr	r2, [fp, #-8]
   2d01c:	str	r2, [r3, #2944]	; 0xb80
   2d020:	ldr	r3, [fp, #-8]
   2d024:	ldr	r2, [fp, #-8]
   2d028:	str	r2, [r3, #2948]	; 0xb84
   2d02c:	ldr	r3, [fp, #-16]
   2d030:	ldr	r3, [r3]
   2d034:	add	r2, r3, #1472	; 0x5c0
   2d038:	ldr	r3, [fp, #-16]
   2d03c:	str	r2, [r3, #8]
   2d040:	ldr	r3, [fp, #-16]
   2d044:	ldr	r2, [r3, #8]
   2d048:	ldr	r3, [fp, #-16]
   2d04c:	str	r2, [r3, #16]
   2d050:	ldr	r3, [fp, #-16]
   2d054:	mov	r2, #1472	; 0x5c0
   2d058:	str	r2, [r3, #12]
   2d05c:	ldr	r3, [fp, #-16]
   2d060:	ldr	r3, [r3, #12]
   2d064:	rsb	r2, r3, #2944	; 0xb80
   2d068:	ldr	r3, [fp, #-16]
   2d06c:	str	r2, [r3, #20]
   2d070:	ldr	r3, [fp, #-16]
   2d074:	ldr	r3, [r3, #12]
   2d078:	rsb	r2, r3, #0
   2d07c:	ldr	r3, [fp, #-8]
   2d080:	str	r2, [r3, #2952]	; 0xb88
   2d084:	mov	r3, #0
   2d088:	b	2d0d0 <flatcc_builder_get_emit_context@@Base+0x214>
   2d08c:	ldr	r3, [fp, #-16]
   2d090:	ldr	r3, [r3]
   2d094:	add	r2, r3, #2944	; 0xb80
   2d098:	ldr	r3, [fp, #-16]
   2d09c:	str	r2, [r3, #8]
   2d0a0:	ldr	r3, [fp, #-16]
   2d0a4:	mov	r2, #2944	; 0xb80
   2d0a8:	str	r2, [r3, #12]
   2d0ac:	ldr	r3, [fp, #-16]
   2d0b0:	ldr	r3, [r3]
   2d0b4:	ldr	r3, [r3, #2944]	; 0xb80
   2d0b8:	ldr	r2, [r3, #2952]	; 0xb88
   2d0bc:	ldr	r3, [fp, #-16]
   2d0c0:	ldr	r3, [r3]
   2d0c4:	sub	r2, r2, #2944	; 0xb80
   2d0c8:	str	r2, [r3, #2952]	; 0xb88
   2d0cc:	mov	r3, #0
   2d0d0:	mov	r0, r3
   2d0d4:	sub	sp, fp, #4
   2d0d8:	ldr	fp, [sp]
   2d0dc:	add	sp, sp, #4
   2d0e0:	pop	{pc}		; (ldr pc, [sp], #4)
   2d0e4:	str	fp, [sp, #-8]!
   2d0e8:	str	lr, [sp, #4]
   2d0ec:	add	fp, sp, #4
   2d0f0:	sub	sp, sp, #16
   2d0f4:	str	r0, [fp, #-16]
   2d0f8:	mov	r3, #0
   2d0fc:	str	r3, [fp, #-8]
   2d100:	ldr	r3, [fp, #-16]
   2d104:	ldr	r3, [r3, #4]
   2d108:	cmp	r3, #0
   2d10c:	beq	2d144 <flatcc_builder_get_emit_context@@Base+0x288>
   2d110:	ldr	r3, [fp, #-16]
   2d114:	ldr	r3, [r3, #4]
   2d118:	ldr	r2, [r3, #2944]	; 0xb80
   2d11c:	ldr	r3, [fp, #-16]
   2d120:	ldr	r3, [r3]
   2d124:	cmp	r2, r3
   2d128:	beq	2d144 <flatcc_builder_get_emit_context@@Base+0x288>
   2d12c:	ldr	r3, [fp, #-16]
   2d130:	ldr	r3, [r3, #4]
   2d134:	ldr	r2, [r3, #2944]	; 0xb80
   2d138:	ldr	r3, [fp, #-16]
   2d13c:	str	r2, [r3, #4]
   2d140:	b	2d26c <flatcc_builder_get_emit_context@@Base+0x3b0>
   2d144:	movw	r0, #2956	; 0xb8c
   2d148:	bl	125f8 <malloc@plt>
   2d14c:	mov	r3, r0
   2d150:	str	r3, [fp, #-8]
   2d154:	ldr	r3, [fp, #-8]
   2d158:	cmp	r3, #0
   2d15c:	bne	2d168 <flatcc_builder_get_emit_context@@Base+0x2ac>
   2d160:	mvn	r3, #0
   2d164:	b	2d2b0 <flatcc_builder_get_emit_context@@Base+0x3f4>
   2d168:	ldr	r3, [fp, #-16]
   2d16c:	ldr	r3, [r3, #28]
   2d170:	add	r2, r3, #2944	; 0xb80
   2d174:	ldr	r3, [fp, #-16]
   2d178:	str	r2, [r3, #28]
   2d17c:	ldr	r3, [fp, #-16]
   2d180:	ldr	r3, [r3, #4]
   2d184:	cmp	r3, #0
   2d188:	beq	2d1dc <flatcc_builder_get_emit_context@@Base+0x320>
   2d18c:	ldr	r3, [fp, #-16]
   2d190:	ldr	r2, [r3, #4]
   2d194:	ldr	r3, [fp, #-8]
   2d198:	str	r2, [r3, #2948]	; 0xb84
   2d19c:	ldr	r3, [fp, #-16]
   2d1a0:	ldr	r2, [r3]
   2d1a4:	ldr	r3, [fp, #-8]
   2d1a8:	str	r2, [r3, #2944]	; 0xb80
   2d1ac:	ldr	r3, [fp, #-16]
   2d1b0:	ldr	r3, [r3]
   2d1b4:	ldr	r2, [fp, #-8]
   2d1b8:	str	r2, [r3, #2948]	; 0xb84
   2d1bc:	ldr	r3, [fp, #-16]
   2d1c0:	ldr	r3, [r3, #4]
   2d1c4:	ldr	r2, [fp, #-8]
   2d1c8:	str	r2, [r3, #2944]	; 0xb80
   2d1cc:	ldr	r3, [fp, #-16]
   2d1d0:	ldr	r2, [fp, #-8]
   2d1d4:	str	r2, [r3, #4]
   2d1d8:	b	2d26c <flatcc_builder_get_emit_context@@Base+0x3b0>
   2d1dc:	ldr	r3, [fp, #-16]
   2d1e0:	ldr	r2, [fp, #-8]
   2d1e4:	str	r2, [r3]
   2d1e8:	ldr	r3, [fp, #-16]
   2d1ec:	ldr	r2, [fp, #-8]
   2d1f0:	str	r2, [r3, #4]
   2d1f4:	ldr	r3, [fp, #-8]
   2d1f8:	ldr	r2, [fp, #-8]
   2d1fc:	str	r2, [r3, #2944]	; 0xb80
   2d200:	ldr	r3, [fp, #-8]
   2d204:	ldr	r2, [fp, #-8]
   2d208:	str	r2, [r3, #2948]	; 0xb84
   2d20c:	ldr	r3, [fp, #-16]
   2d210:	ldr	r3, [r3]
   2d214:	add	r2, r3, #1472	; 0x5c0
   2d218:	ldr	r3, [fp, #-16]
   2d21c:	str	r2, [r3, #8]
   2d220:	ldr	r3, [fp, #-16]
   2d224:	ldr	r2, [r3, #8]
   2d228:	ldr	r3, [fp, #-16]
   2d22c:	str	r2, [r3, #16]
   2d230:	ldr	r3, [fp, #-16]
   2d234:	mov	r2, #1472	; 0x5c0
   2d238:	str	r2, [r3, #12]
   2d23c:	ldr	r3, [fp, #-16]
   2d240:	ldr	r3, [r3, #12]
   2d244:	rsb	r2, r3, #2944	; 0xb80
   2d248:	ldr	r3, [fp, #-16]
   2d24c:	str	r2, [r3, #20]
   2d250:	ldr	r3, [fp, #-16]
   2d254:	ldr	r3, [r3, #12]
   2d258:	rsb	r2, r3, #0
   2d25c:	ldr	r3, [fp, #-8]
   2d260:	str	r2, [r3, #2952]	; 0xb88
   2d264:	mov	r3, #0
   2d268:	b	2d2b0 <flatcc_builder_get_emit_context@@Base+0x3f4>
   2d26c:	ldr	r3, [fp, #-16]
   2d270:	ldr	r3, [r3, #4]
   2d274:	mov	r2, r3
   2d278:	ldr	r3, [fp, #-16]
   2d27c:	str	r2, [r3, #16]
   2d280:	ldr	r3, [fp, #-16]
   2d284:	mov	r2, #2944	; 0xb80
   2d288:	str	r2, [r3, #20]
   2d28c:	ldr	r3, [fp, #-16]
   2d290:	ldr	r3, [r3, #4]
   2d294:	ldr	r3, [r3, #2948]	; 0xb84
   2d298:	ldr	r2, [r3, #2952]	; 0xb88
   2d29c:	ldr	r3, [fp, #-16]
   2d2a0:	ldr	r3, [r3, #4]
   2d2a4:	add	r2, r2, #2944	; 0xb80
   2d2a8:	str	r2, [r3, #2952]	; 0xb88
   2d2ac:	mov	r3, #0
   2d2b0:	mov	r0, r3
   2d2b4:	sub	sp, fp, #4
   2d2b8:	ldr	fp, [sp]
   2d2bc:	add	sp, sp, #4
   2d2c0:	pop	{pc}		; (ldr pc, [sp], #4)
   2d2c4:	str	fp, [sp, #-8]!
   2d2c8:	str	lr, [sp, #4]
   2d2cc:	add	fp, sp, #4
   2d2d0:	sub	sp, sp, #24
   2d2d4:	str	r0, [fp, #-16]
   2d2d8:	str	r1, [fp, #-20]	; 0xffffffec
   2d2dc:	str	r2, [fp, #-24]	; 0xffffffe8
   2d2e0:	ldr	r2, [fp, #-20]	; 0xffffffec
   2d2e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d2e8:	add	r3, r2, r3
   2d2ec:	str	r3, [fp, #-20]	; 0xffffffec
   2d2f0:	b	2d3b4 <flatcc_builder_get_emit_context@@Base+0x4f8>
   2d2f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d2f8:	str	r3, [fp, #-8]
   2d2fc:	ldr	r3, [fp, #-16]
   2d300:	ldr	r3, [r3, #12]
   2d304:	ldr	r2, [fp, #-8]
   2d308:	cmp	r2, r3
   2d30c:	bls	2d344 <flatcc_builder_get_emit_context@@Base+0x488>
   2d310:	ldr	r3, [fp, #-16]
   2d314:	ldr	r3, [r3, #12]
   2d318:	str	r3, [fp, #-8]
   2d31c:	ldr	r3, [fp, #-8]
   2d320:	cmp	r3, #0
   2d324:	bne	2d344 <flatcc_builder_get_emit_context@@Base+0x488>
   2d328:	ldr	r0, [fp, #-16]
   2d32c:	bl	2cee4 <flatcc_builder_get_emit_context@@Base+0x28>
   2d330:	mov	r3, r0
   2d334:	cmp	r3, #0
   2d338:	beq	2d3b4 <flatcc_builder_get_emit_context@@Base+0x4f8>
   2d33c:	mvn	r3, #0
   2d340:	b	2d3c4 <flatcc_builder_get_emit_context@@Base+0x508>
   2d344:	ldr	r3, [fp, #-16]
   2d348:	ldr	r2, [r3, #8]
   2d34c:	ldr	r3, [fp, #-8]
   2d350:	rsb	r3, r3, #0
   2d354:	add	r2, r2, r3
   2d358:	ldr	r3, [fp, #-16]
   2d35c:	str	r2, [r3, #8]
   2d360:	ldr	r3, [fp, #-16]
   2d364:	ldr	r2, [r3, #12]
   2d368:	ldr	r3, [fp, #-8]
   2d36c:	sub	r2, r2, r3
   2d370:	ldr	r3, [fp, #-16]
   2d374:	str	r2, [r3, #12]
   2d378:	ldr	r3, [fp, #-8]
   2d37c:	rsb	r3, r3, #0
   2d380:	ldr	r2, [fp, #-20]	; 0xffffffec
   2d384:	add	r3, r2, r3
   2d388:	str	r3, [fp, #-20]	; 0xffffffec
   2d38c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2d390:	ldr	r3, [fp, #-8]
   2d394:	sub	r3, r2, r3
   2d398:	str	r3, [fp, #-24]	; 0xffffffe8
   2d39c:	ldr	r3, [fp, #-16]
   2d3a0:	ldr	r3, [r3, #8]
   2d3a4:	ldr	r2, [fp, #-8]
   2d3a8:	ldr	r1, [fp, #-20]	; 0xffffffec
   2d3ac:	mov	r0, r3
   2d3b0:	bl	125a4 <memcpy@plt>
   2d3b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d3b8:	cmp	r3, #0
   2d3bc:	bne	2d2f4 <flatcc_builder_get_emit_context@@Base+0x438>
   2d3c0:	mov	r3, #0
   2d3c4:	mov	r0, r3
   2d3c8:	sub	sp, fp, #4
   2d3cc:	ldr	fp, [sp]
   2d3d0:	add	sp, sp, #4
   2d3d4:	pop	{pc}		; (ldr pc, [sp], #4)
   2d3d8:	str	fp, [sp, #-8]!
   2d3dc:	str	lr, [sp, #4]
   2d3e0:	add	fp, sp, #4
   2d3e4:	sub	sp, sp, #24
   2d3e8:	str	r0, [fp, #-16]
   2d3ec:	str	r1, [fp, #-20]	; 0xffffffec
   2d3f0:	str	r2, [fp, #-24]	; 0xffffffe8
   2d3f4:	b	2d4b0 <flatcc_builder_get_emit_context@@Base+0x5f4>
   2d3f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d3fc:	str	r3, [fp, #-8]
   2d400:	ldr	r3, [fp, #-16]
   2d404:	ldr	r3, [r3, #20]
   2d408:	ldr	r2, [fp, #-8]
   2d40c:	cmp	r2, r3
   2d410:	bls	2d448 <flatcc_builder_get_emit_context@@Base+0x58c>
   2d414:	ldr	r3, [fp, #-16]
   2d418:	ldr	r3, [r3, #20]
   2d41c:	str	r3, [fp, #-8]
   2d420:	ldr	r3, [fp, #-8]
   2d424:	cmp	r3, #0
   2d428:	bne	2d448 <flatcc_builder_get_emit_context@@Base+0x58c>
   2d42c:	ldr	r0, [fp, #-16]
   2d430:	bl	2d0e4 <flatcc_builder_get_emit_context@@Base+0x228>
   2d434:	mov	r3, r0
   2d438:	cmp	r3, #0
   2d43c:	beq	2d4b0 <flatcc_builder_get_emit_context@@Base+0x5f4>
   2d440:	mvn	r3, #0
   2d444:	b	2d4c0 <flatcc_builder_get_emit_context@@Base+0x604>
   2d448:	ldr	r3, [fp, #-16]
   2d44c:	ldr	r3, [r3, #16]
   2d450:	ldr	r2, [fp, #-8]
   2d454:	ldr	r1, [fp, #-20]	; 0xffffffec
   2d458:	mov	r0, r3
   2d45c:	bl	125a4 <memcpy@plt>
   2d460:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2d464:	ldr	r3, [fp, #-8]
   2d468:	sub	r3, r2, r3
   2d46c:	str	r3, [fp, #-24]	; 0xffffffe8
   2d470:	ldr	r2, [fp, #-20]	; 0xffffffec
   2d474:	ldr	r3, [fp, #-8]
   2d478:	add	r3, r2, r3
   2d47c:	str	r3, [fp, #-20]	; 0xffffffec
   2d480:	ldr	r3, [fp, #-16]
   2d484:	ldr	r2, [r3, #16]
   2d488:	ldr	r3, [fp, #-8]
   2d48c:	add	r2, r2, r3
   2d490:	ldr	r3, [fp, #-16]
   2d494:	str	r2, [r3, #16]
   2d498:	ldr	r3, [fp, #-16]
   2d49c:	ldr	r2, [r3, #20]
   2d4a0:	ldr	r3, [fp, #-8]
   2d4a4:	sub	r2, r2, r3
   2d4a8:	ldr	r3, [fp, #-16]
   2d4ac:	str	r2, [r3, #20]
   2d4b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d4b4:	cmp	r3, #0
   2d4b8:	bne	2d3f8 <flatcc_builder_get_emit_context@@Base+0x53c>
   2d4bc:	mov	r3, #0
   2d4c0:	mov	r0, r3
   2d4c4:	sub	sp, fp, #4
   2d4c8:	ldr	fp, [sp]
   2d4cc:	add	sp, sp, #4
   2d4d0:	pop	{pc}		; (ldr pc, [sp], #4)

0002d4d4 <flatcc_emitter_recycle_page@@Base>:
   2d4d4:	push	{fp}		; (str fp, [sp, #-4]!)
   2d4d8:	add	fp, sp, #0
   2d4dc:	sub	sp, sp, #12
   2d4e0:	str	r0, [fp, #-8]
   2d4e4:	str	r1, [fp, #-12]
   2d4e8:	ldr	r3, [fp, #-8]
   2d4ec:	ldr	r3, [r3]
   2d4f0:	ldr	r2, [fp, #-12]
   2d4f4:	cmp	r2, r3
   2d4f8:	beq	2d510 <flatcc_emitter_recycle_page@@Base+0x3c>
   2d4fc:	ldr	r3, [fp, #-8]
   2d500:	ldr	r3, [r3, #4]
   2d504:	ldr	r2, [fp, #-12]
   2d508:	cmp	r2, r3
   2d50c:	bne	2d518 <flatcc_emitter_recycle_page@@Base+0x44>
   2d510:	mvn	r3, #0
   2d514:	b	2d588 <flatcc_emitter_recycle_page@@Base+0xb4>
   2d518:	ldr	r3, [fp, #-12]
   2d51c:	ldr	r3, [r3, #2944]	; 0xb80
   2d520:	ldr	r2, [fp, #-12]
   2d524:	ldr	r2, [r2, #2948]	; 0xb84
   2d528:	str	r2, [r3, #2948]	; 0xb84
   2d52c:	ldr	r3, [fp, #-12]
   2d530:	ldr	r3, [r3, #2948]	; 0xb84
   2d534:	ldr	r2, [fp, #-12]
   2d538:	ldr	r2, [r2, #2944]	; 0xb80
   2d53c:	str	r2, [r3, #2944]	; 0xb80
   2d540:	ldr	r3, [fp, #-8]
   2d544:	ldr	r3, [r3]
   2d548:	ldr	r2, [r3, #2948]	; 0xb84
   2d54c:	ldr	r3, [fp, #-12]
   2d550:	str	r2, [r3, #2948]	; 0xb84
   2d554:	ldr	r3, [fp, #-8]
   2d558:	ldr	r2, [r3]
   2d55c:	ldr	r3, [fp, #-12]
   2d560:	str	r2, [r3, #2944]	; 0xb80
   2d564:	ldr	r3, [fp, #-12]
   2d568:	ldr	r3, [r3, #2948]	; 0xb84
   2d56c:	ldr	r2, [fp, #-12]
   2d570:	str	r2, [r3, #2944]	; 0xb80
   2d574:	ldr	r3, [fp, #-12]
   2d578:	ldr	r3, [r3, #2944]	; 0xb80
   2d57c:	ldr	r2, [fp, #-12]
   2d580:	str	r2, [r3, #2948]	; 0xb84
   2d584:	mov	r3, #0
   2d588:	mov	r0, r3
   2d58c:	add	sp, fp, #0
   2d590:	pop	{fp}		; (ldr fp, [sp], #4)
   2d594:	bx	lr

0002d598 <flatcc_emitter_reset@@Base>:
   2d598:	str	fp, [sp, #-8]!
   2d59c:	str	lr, [sp, #4]
   2d5a0:	add	fp, sp, #4
   2d5a4:	sub	sp, sp, #16
   2d5a8:	str	r0, [fp, #-16]
   2d5ac:	ldr	r3, [fp, #-16]
   2d5b0:	ldr	r3, [r3]
   2d5b4:	str	r3, [fp, #-8]
   2d5b8:	ldr	r3, [fp, #-16]
   2d5bc:	ldr	r3, [r3]
   2d5c0:	cmp	r3, #0
   2d5c4:	beq	2d720 <flatcc_emitter_reset@@Base+0x188>
   2d5c8:	ldr	r3, [fp, #-16]
   2d5cc:	ldr	r2, [r3]
   2d5d0:	ldr	r3, [fp, #-16]
   2d5d4:	str	r2, [r3, #4]
   2d5d8:	ldr	r3, [fp, #-16]
   2d5dc:	ldr	r3, [r3]
   2d5e0:	add	r2, r3, #1472	; 0x5c0
   2d5e4:	ldr	r3, [fp, #-16]
   2d5e8:	str	r2, [r3, #8]
   2d5ec:	ldr	r3, [fp, #-16]
   2d5f0:	ldr	r2, [r3, #8]
   2d5f4:	ldr	r3, [fp, #-16]
   2d5f8:	str	r2, [r3, #16]
   2d5fc:	ldr	r3, [fp, #-16]
   2d600:	mov	r2, #1472	; 0x5c0
   2d604:	str	r2, [r3, #12]
   2d608:	ldr	r3, [fp, #-16]
   2d60c:	mov	r2, #1472	; 0x5c0
   2d610:	str	r2, [r3, #20]
   2d614:	ldr	r3, [fp, #-16]
   2d618:	ldr	r3, [r3, #12]
   2d61c:	mov	r2, r3
   2d620:	ldr	r3, [fp, #-16]
   2d624:	ldr	r3, [r3]
   2d628:	rsb	r2, r2, #0
   2d62c:	str	r2, [r3, #2952]	; 0xb88
   2d630:	ldr	r3, [fp, #-16]
   2d634:	ldr	r3, [r3, #32]
   2d638:	cmp	r3, #0
   2d63c:	bne	2d650 <flatcc_emitter_reset@@Base+0xb8>
   2d640:	ldr	r3, [fp, #-16]
   2d644:	ldr	r2, [r3, #24]
   2d648:	ldr	r3, [fp, #-16]
   2d64c:	str	r2, [r3, #32]
   2d650:	ldr	r3, [fp, #-16]
   2d654:	ldr	r2, [r3, #32]
   2d658:	mov	r3, r2
   2d65c:	lsl	r3, r3, #1
   2d660:	add	r3, r3, r2
   2d664:	lsr	r2, r3, #2
   2d668:	ldr	r3, [fp, #-16]
   2d66c:	ldr	r3, [r3, #24]
   2d670:	lsr	r3, r3, #2
   2d674:	add	r2, r2, r3
   2d678:	ldr	r3, [fp, #-16]
   2d67c:	str	r2, [r3, #32]
   2d680:	ldr	r3, [fp, #-16]
   2d684:	mov	r2, #0
   2d688:	str	r2, [r3, #24]
   2d68c:	b	2d6e4 <flatcc_emitter_reset@@Base+0x14c>
   2d690:	ldr	r3, [fp, #-16]
   2d694:	ldr	r3, [r3, #4]
   2d698:	ldr	r3, [r3, #2944]	; 0xb80
   2d69c:	str	r3, [fp, #-8]
   2d6a0:	ldr	r3, [fp, #-16]
   2d6a4:	ldr	r3, [r3, #4]
   2d6a8:	ldr	r2, [fp, #-8]
   2d6ac:	ldr	r2, [r2, #2944]	; 0xb80
   2d6b0:	str	r2, [r3, #2944]	; 0xb80
   2d6b4:	ldr	r3, [fp, #-8]
   2d6b8:	ldr	r3, [r3, #2944]	; 0xb80
   2d6bc:	ldr	r2, [fp, #-16]
   2d6c0:	ldr	r2, [r2, #4]
   2d6c4:	str	r2, [r3, #2948]	; 0xb84
   2d6c8:	ldr	r0, [fp, #-8]
   2d6cc:	bl	12598 <free@plt>
   2d6d0:	ldr	r3, [fp, #-16]
   2d6d4:	ldr	r3, [r3, #28]
   2d6d8:	sub	r2, r3, #2944	; 0xb80
   2d6dc:	ldr	r3, [fp, #-16]
   2d6e0:	str	r2, [r3, #28]
   2d6e4:	ldr	r3, [fp, #-16]
   2d6e8:	ldr	r3, [r3, #32]
   2d6ec:	lsl	r2, r3, #1
   2d6f0:	ldr	r3, [fp, #-16]
   2d6f4:	ldr	r3, [r3, #28]
   2d6f8:	cmp	r2, r3
   2d6fc:	bcs	2d724 <flatcc_emitter_reset@@Base+0x18c>
   2d700:	ldr	r3, [fp, #-16]
   2d704:	ldr	r3, [r3, #4]
   2d708:	ldr	r2, [r3, #2944]	; 0xb80
   2d70c:	ldr	r3, [fp, #-16]
   2d710:	ldr	r3, [r3]
   2d714:	cmp	r2, r3
   2d718:	bne	2d690 <flatcc_emitter_reset@@Base+0xf8>
   2d71c:	b	2d724 <flatcc_emitter_reset@@Base+0x18c>
   2d720:	nop	{0}
   2d724:	sub	sp, fp, #4
   2d728:	ldr	fp, [sp]
   2d72c:	add	sp, sp, #4
   2d730:	pop	{pc}		; (ldr pc, [sp], #4)

0002d734 <flatcc_emitter_clear@@Base>:
   2d734:	str	fp, [sp, #-8]!
   2d738:	str	lr, [sp, #4]
   2d73c:	add	fp, sp, #4
   2d740:	sub	sp, sp, #16
   2d744:	str	r0, [fp, #-16]
   2d748:	ldr	r3, [fp, #-16]
   2d74c:	ldr	r3, [r3]
   2d750:	str	r3, [fp, #-8]
   2d754:	ldr	r3, [fp, #-8]
   2d758:	cmp	r3, #0
   2d75c:	beq	2d7bc <flatcc_emitter_clear@@Base+0x88>
   2d760:	ldr	r3, [fp, #-8]
   2d764:	ldr	r3, [r3, #2948]	; 0xb84
   2d768:	mov	r2, #0
   2d76c:	str	r2, [r3, #2944]	; 0xb80
   2d770:	b	2d790 <flatcc_emitter_clear@@Base+0x5c>
   2d774:	ldr	r3, [fp, #-8]
   2d778:	ldr	r3, [r3, #2944]	; 0xb80
   2d77c:	str	r3, [fp, #-8]
   2d780:	ldr	r3, [fp, #-8]
   2d784:	ldr	r3, [r3, #2948]	; 0xb84
   2d788:	mov	r0, r3
   2d78c:	bl	12598 <free@plt>
   2d790:	ldr	r3, [fp, #-8]
   2d794:	ldr	r3, [r3, #2944]	; 0xb80
   2d798:	cmp	r3, #0
   2d79c:	bne	2d774 <flatcc_emitter_clear@@Base+0x40>
   2d7a0:	ldr	r0, [fp, #-8]
   2d7a4:	bl	12598 <free@plt>
   2d7a8:	mov	r2, #36	; 0x24
   2d7ac:	mov	r1, #0
   2d7b0:	ldr	r0, [fp, #-16]
   2d7b4:	bl	1264c <memset@plt>
   2d7b8:	b	2d7c0 <flatcc_emitter_clear@@Base+0x8c>
   2d7bc:	nop	{0}
   2d7c0:	sub	sp, fp, #4
   2d7c4:	ldr	fp, [sp]
   2d7c8:	add	sp, sp, #4
   2d7cc:	pop	{pc}		; (ldr pc, [sp], #4)

0002d7d0 <flatcc_emitter@@Base>:
   2d7d0:	str	fp, [sp, #-8]!
   2d7d4:	str	lr, [sp, #4]
   2d7d8:	add	fp, sp, #4
   2d7dc:	sub	sp, sp, #24
   2d7e0:	str	r0, [fp, #-16]
   2d7e4:	str	r1, [fp, #-20]	; 0xffffffec
   2d7e8:	str	r2, [fp, #-24]	; 0xffffffe8
   2d7ec:	str	r3, [fp, #-28]	; 0xffffffe4
   2d7f0:	ldr	r3, [fp, #-16]
   2d7f4:	str	r3, [fp, #-12]
   2d7f8:	ldr	r3, [fp, #-12]
   2d7fc:	ldr	r2, [r3, #24]
   2d800:	ldr	r3, [fp, #4]
   2d804:	add	r2, r2, r3
   2d808:	ldr	r3, [fp, #-12]
   2d80c:	str	r2, [r3, #24]
   2d810:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2d814:	cmp	r3, #0
   2d818:	bge	2d8e0 <flatcc_emitter@@Base+0x110>
   2d81c:	ldr	r3, [fp, #-12]
   2d820:	ldr	r3, [r3, #12]
   2d824:	ldr	r2, [fp, #4]
   2d828:	cmp	r2, r3
   2d82c:	bhi	2d874 <flatcc_emitter@@Base+0xa4>
   2d830:	ldr	r3, [fp, #-12]
   2d834:	ldr	r2, [r3, #8]
   2d838:	ldr	r3, [fp, #4]
   2d83c:	rsb	r3, r3, #0
   2d840:	add	r2, r2, r3
   2d844:	ldr	r3, [fp, #-12]
   2d848:	str	r2, [r3, #8]
   2d84c:	ldr	r3, [fp, #-12]
   2d850:	ldr	r2, [r3, #12]
   2d854:	ldr	r3, [fp, #4]
   2d858:	sub	r2, r2, r3
   2d85c:	ldr	r3, [fp, #-12]
   2d860:	str	r2, [r3, #12]
   2d864:	ldr	r3, [fp, #-12]
   2d868:	ldr	r3, [r3, #8]
   2d86c:	str	r3, [fp, #-8]
   2d870:	b	2d98c <flatcc_emitter@@Base+0x1bc>
   2d874:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d878:	lsl	r3, r3, #3
   2d87c:	ldr	r2, [fp, #-20]	; 0xffffffec
   2d880:	add	r3, r2, r3
   2d884:	str	r3, [fp, #-20]	; 0xffffffec
   2d888:	b	2d8c8 <flatcc_emitter@@Base+0xf8>
   2d88c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d890:	sub	r3, r3, #8
   2d894:	str	r3, [fp, #-20]	; 0xffffffec
   2d898:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d89c:	ldr	r1, [r3]
   2d8a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d8a4:	ldr	r3, [r3, #4]
   2d8a8:	mov	r2, r3
   2d8ac:	ldr	r0, [fp, #-12]
   2d8b0:	bl	2d2c4 <flatcc_builder_get_emit_context@@Base+0x408>
   2d8b4:	mov	r3, r0
   2d8b8:	cmp	r3, #0
   2d8bc:	beq	2d8c8 <flatcc_emitter@@Base+0xf8>
   2d8c0:	mvn	r3, #0
   2d8c4:	b	2d9e4 <flatcc_emitter@@Base+0x214>
   2d8c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d8cc:	sub	r2, r3, #1
   2d8d0:	str	r2, [fp, #-24]	; 0xffffffe8
   2d8d4:	cmp	r3, #0
   2d8d8:	bne	2d88c <flatcc_emitter@@Base+0xbc>
   2d8dc:	b	2d984 <flatcc_emitter@@Base+0x1b4>
   2d8e0:	ldr	r3, [fp, #-12]
   2d8e4:	ldr	r3, [r3, #20]
   2d8e8:	ldr	r2, [fp, #4]
   2d8ec:	cmp	r2, r3
   2d8f0:	bhi	2d970 <flatcc_emitter@@Base+0x1a0>
   2d8f4:	ldr	r3, [fp, #-12]
   2d8f8:	ldr	r3, [r3, #16]
   2d8fc:	str	r3, [fp, #-8]
   2d900:	ldr	r3, [fp, #-12]
   2d904:	ldr	r2, [r3, #16]
   2d908:	ldr	r3, [fp, #4]
   2d90c:	add	r2, r2, r3
   2d910:	ldr	r3, [fp, #-12]
   2d914:	str	r2, [r3, #16]
   2d918:	ldr	r3, [fp, #-12]
   2d91c:	ldr	r2, [r3, #20]
   2d920:	ldr	r3, [fp, #4]
   2d924:	sub	r2, r2, r3
   2d928:	ldr	r3, [fp, #-12]
   2d92c:	str	r2, [r3, #20]
   2d930:	b	2d98c <flatcc_emitter@@Base+0x1bc>
   2d934:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d938:	ldr	r1, [r3]
   2d93c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d940:	ldr	r3, [r3, #4]
   2d944:	mov	r2, r3
   2d948:	ldr	r0, [fp, #-12]
   2d94c:	bl	2d3d8 <flatcc_builder_get_emit_context@@Base+0x51c>
   2d950:	mov	r3, r0
   2d954:	cmp	r3, #0
   2d958:	beq	2d964 <flatcc_emitter@@Base+0x194>
   2d95c:	mvn	r3, #0
   2d960:	b	2d9e4 <flatcc_emitter@@Base+0x214>
   2d964:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d968:	add	r3, r3, #8
   2d96c:	str	r3, [fp, #-20]	; 0xffffffec
   2d970:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d974:	sub	r2, r3, #1
   2d978:	str	r2, [fp, #-24]	; 0xffffffe8
   2d97c:	cmp	r3, #0
   2d980:	bne	2d934 <flatcc_emitter@@Base+0x164>
   2d984:	mov	r3, #0
   2d988:	b	2d9e4 <flatcc_emitter@@Base+0x214>
   2d98c:	b	2d9cc <flatcc_emitter@@Base+0x1fc>
   2d990:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d994:	ldr	r1, [r3]
   2d998:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d99c:	ldr	r3, [r3, #4]
   2d9a0:	mov	r2, r3
   2d9a4:	ldr	r0, [fp, #-8]
   2d9a8:	bl	125a4 <memcpy@plt>
   2d9ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d9b0:	ldr	r3, [r3, #4]
   2d9b4:	ldr	r2, [fp, #-8]
   2d9b8:	add	r3, r2, r3
   2d9bc:	str	r3, [fp, #-8]
   2d9c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d9c4:	add	r3, r3, #8
   2d9c8:	str	r3, [fp, #-20]	; 0xffffffec
   2d9cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d9d0:	sub	r2, r3, #1
   2d9d4:	str	r2, [fp, #-24]	; 0xffffffe8
   2d9d8:	cmp	r3, #0
   2d9dc:	bne	2d990 <flatcc_emitter@@Base+0x1c0>
   2d9e0:	mov	r3, #0
   2d9e4:	mov	r0, r3
   2d9e8:	sub	sp, fp, #4
   2d9ec:	ldr	fp, [sp]
   2d9f0:	add	sp, sp, #4
   2d9f4:	pop	{pc}		; (ldr pc, [sp], #4)

0002d9f8 <flatcc_emitter_copy_buffer@@Base>:
   2d9f8:	str	fp, [sp, #-8]!
   2d9fc:	str	lr, [sp, #4]
   2da00:	add	fp, sp, #4
   2da04:	sub	sp, sp, #24
   2da08:	str	r0, [fp, #-16]
   2da0c:	str	r1, [fp, #-20]	; 0xffffffec
   2da10:	str	r2, [fp, #-24]	; 0xffffffe8
   2da14:	ldr	r3, [fp, #-16]
   2da18:	ldr	r3, [r3, #24]
   2da1c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2da20:	cmp	r2, r3
   2da24:	bcs	2da30 <flatcc_emitter_copy_buffer@@Base+0x38>
   2da28:	mov	r3, #0
   2da2c:	b	2db30 <flatcc_emitter_copy_buffer@@Base+0x138>
   2da30:	ldr	r3, [fp, #-16]
   2da34:	ldr	r3, [r3]
   2da38:	cmp	r3, #0
   2da3c:	bne	2da48 <flatcc_emitter_copy_buffer@@Base+0x50>
   2da40:	mov	r3, #0
   2da44:	b	2db30 <flatcc_emitter_copy_buffer@@Base+0x138>
   2da48:	ldr	r3, [fp, #-16]
   2da4c:	ldr	r2, [r3]
   2da50:	ldr	r3, [fp, #-16]
   2da54:	ldr	r3, [r3, #4]
   2da58:	cmp	r2, r3
   2da5c:	bne	2da84 <flatcc_emitter_copy_buffer@@Base+0x8c>
   2da60:	ldr	r3, [fp, #-16]
   2da64:	ldr	r1, [r3, #8]
   2da68:	ldr	r3, [fp, #-16]
   2da6c:	ldr	r3, [r3, #24]
   2da70:	mov	r2, r3
   2da74:	ldr	r0, [fp, #-20]	; 0xffffffec
   2da78:	bl	125a4 <memcpy@plt>
   2da7c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2da80:	b	2db30 <flatcc_emitter_copy_buffer@@Base+0x138>
   2da84:	ldr	r3, [fp, #-16]
   2da88:	ldr	r3, [r3, #12]
   2da8c:	rsb	r3, r3, #2944	; 0xb80
   2da90:	str	r3, [fp, #-12]
   2da94:	ldr	r3, [fp, #-16]
   2da98:	ldr	r3, [r3, #8]
   2da9c:	ldr	r2, [fp, #-12]
   2daa0:	mov	r1, r3
   2daa4:	ldr	r0, [fp, #-20]	; 0xffffffec
   2daa8:	bl	125a4 <memcpy@plt>
   2daac:	ldr	r2, [fp, #-20]	; 0xffffffec
   2dab0:	ldr	r3, [fp, #-12]
   2dab4:	add	r3, r2, r3
   2dab8:	str	r3, [fp, #-20]	; 0xffffffec
   2dabc:	ldr	r3, [fp, #-16]
   2dac0:	ldr	r3, [r3]
   2dac4:	ldr	r3, [r3, #2944]	; 0xb80
   2dac8:	str	r3, [fp, #-8]
   2dacc:	b	2dafc <flatcc_emitter_copy_buffer@@Base+0x104>
   2dad0:	ldr	r3, [fp, #-8]
   2dad4:	mov	r2, #2944	; 0xb80
   2dad8:	mov	r1, r3
   2dadc:	ldr	r0, [fp, #-20]	; 0xffffffec
   2dae0:	bl	125a4 <memcpy@plt>
   2dae4:	ldr	r3, [fp, #-20]	; 0xffffffec
   2dae8:	add	r3, r3, #2944	; 0xb80
   2daec:	str	r3, [fp, #-20]	; 0xffffffec
   2daf0:	ldr	r3, [fp, #-8]
   2daf4:	ldr	r3, [r3, #2944]	; 0xb80
   2daf8:	str	r3, [fp, #-8]
   2dafc:	ldr	r3, [fp, #-16]
   2db00:	ldr	r3, [r3, #4]
   2db04:	ldr	r2, [fp, #-8]
   2db08:	cmp	r2, r3
   2db0c:	bne	2dad0 <flatcc_emitter_copy_buffer@@Base+0xd8>
   2db10:	ldr	r1, [fp, #-8]
   2db14:	ldr	r3, [fp, #-16]
   2db18:	ldr	r3, [r3, #20]
   2db1c:	rsb	r3, r3, #2944	; 0xb80
   2db20:	mov	r2, r3
   2db24:	ldr	r0, [fp, #-20]	; 0xffffffec
   2db28:	bl	125a4 <memcpy@plt>
   2db2c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2db30:	mov	r0, r3
   2db34:	sub	sp, fp, #4
   2db38:	ldr	fp, [sp]
   2db3c:	add	sp, sp, #4
   2db40:	pop	{pc}		; (ldr pc, [sp], #4)
   2db44:	andeq	r0, r0, r0
   2db48:	push	{fp}		; (str fp, [sp, #-4]!)
   2db4c:	add	fp, sp, #0
   2db50:	sub	sp, sp, #12
   2db54:	mov	r3, r0
   2db58:	strb	r3, [fp, #-5]
   2db5c:	ldrb	r3, [fp, #-5]
   2db60:	mov	r0, r3
   2db64:	add	sp, fp, #0
   2db68:	pop	{fp}		; (ldr fp, [sp], #4)
   2db6c:	bx	lr
   2db70:	str	fp, [sp, #-8]!
   2db74:	str	lr, [sp, #4]
   2db78:	add	fp, sp, #4
   2db7c:	sub	sp, sp, #8
   2db80:	str	r0, [fp, #-8]
   2db84:	mov	r3, r1
   2db88:	strb	r3, [fp, #-9]
   2db8c:	ldrb	r3, [fp, #-9]
   2db90:	mov	r0, r3
   2db94:	bl	2db48 <flatcc_emitter_copy_buffer@@Base+0x150>
   2db98:	mov	r3, r0
   2db9c:	mov	r2, r3
   2dba0:	ldr	r3, [fp, #-8]
   2dba4:	strb	r2, [r3]
   2dba8:	nop	{0}
   2dbac:	sub	sp, fp, #4
   2dbb0:	ldr	fp, [sp]
   2dbb4:	add	sp, sp, #4
   2dbb8:	pop	{pc}		; (ldr pc, [sp], #4)
   2dbbc:	str	fp, [sp, #-8]!
   2dbc0:	str	lr, [sp, #4]
   2dbc4:	add	fp, sp, #4
   2dbc8:	sub	sp, sp, #16
   2dbcc:	str	r0, [fp, #-8]
   2dbd0:	str	r1, [fp, #-12]
   2dbd4:	str	r2, [fp, #-16]
   2dbd8:	str	r3, [fp, #-20]	; 0xffffffec
   2dbdc:	mov	r2, #44	; 0x2c
   2dbe0:	mov	r1, #0
   2dbe4:	ldr	r0, [fp, #-8]
   2dbe8:	bl	1264c <memset@plt>
   2dbec:	ldr	r3, [fp, #-8]
   2dbf0:	ldr	r2, [fp, #-12]
   2dbf4:	str	r2, [r3]
   2dbf8:	ldr	r3, [fp, #-8]
   2dbfc:	ldr	r2, [fp, #-16]
   2dc00:	str	r2, [r3, #4]
   2dc04:	ldr	r3, [fp, #-8]
   2dc08:	mov	r2, #1
   2dc0c:	str	r2, [r3, #16]
   2dc10:	ldr	r3, [fp, #-8]
   2dc14:	ldr	r2, [fp, #4]
   2dc18:	str	r2, [r3, #8]
   2dc1c:	ldr	r3, [fp, #-8]
   2dc20:	ldr	r2, [fp, #-16]
   2dc24:	str	r2, [r3, #28]
   2dc28:	ldr	r3, [fp, #-8]
   2dc2c:	ldr	r2, [fp, #-20]	; 0xffffffec
   2dc30:	str	r2, [r3, #32]
   2dc34:	ldr	r3, [fp, #-8]
   2dc38:	ldr	r2, [fp, #-16]
   2dc3c:	str	r2, [r3, #36]	; 0x24
   2dc40:	nop	{0}
   2dc44:	sub	sp, fp, #4
   2dc48:	ldr	fp, [sp]
   2dc4c:	add	sp, sp, #4
   2dc50:	pop	{pc}		; (ldr pc, [sp], #4)
   2dc54:	str	fp, [sp, #-8]!
   2dc58:	str	lr, [sp, #4]
   2dc5c:	add	fp, sp, #4
   2dc60:	sub	sp, sp, #16
   2dc64:	str	r0, [fp, #-8]
   2dc68:	str	r1, [fp, #-12]
   2dc6c:	str	r2, [fp, #-16]
   2dc70:	ldr	r2, [fp, #-16]
   2dc74:	ldr	r3, [fp, #-12]
   2dc78:	sub	r3, r2, r3
   2dc7c:	cmp	r3, #1
   2dc80:	ble	2dccc <flatcc_emitter_copy_buffer@@Base+0x2d4>
   2dc84:	ldr	r3, [fp, #-12]
   2dc88:	ldrb	r3, [r3]
   2dc8c:	cmp	r3, #32
   2dc90:	bls	2dc9c <flatcc_emitter_copy_buffer@@Base+0x2a4>
   2dc94:	ldr	r3, [fp, #-12]
   2dc98:	b	2dce0 <flatcc_emitter_copy_buffer@@Base+0x2e8>
   2dc9c:	ldr	r3, [fp, #-12]
   2dca0:	ldrb	r3, [r3]
   2dca4:	cmp	r3, #32
   2dca8:	bne	2dccc <flatcc_emitter_copy_buffer@@Base+0x2d4>
   2dcac:	ldr	r3, [fp, #-12]
   2dcb0:	add	r3, r3, #1
   2dcb4:	ldrb	r3, [r3]
   2dcb8:	cmp	r3, #32
   2dcbc:	bls	2dccc <flatcc_emitter_copy_buffer@@Base+0x2d4>
   2dcc0:	ldr	r3, [fp, #-12]
   2dcc4:	add	r3, r3, #1
   2dcc8:	b	2dce0 <flatcc_emitter_copy_buffer@@Base+0x2e8>
   2dccc:	ldr	r2, [fp, #-16]
   2dcd0:	ldr	r1, [fp, #-12]
   2dcd4:	ldr	r0, [fp, #-8]
   2dcd8:	bl	333c0 <flatcc_json_parser_space_ext@@Base>
   2dcdc:	mov	r3, r0
   2dce0:	mov	r0, r3
   2dce4:	sub	sp, fp, #4
   2dce8:	ldr	fp, [sp]
   2dcec:	add	sp, sp, #4
   2dcf0:	pop	{pc}		; (ldr pc, [sp], #4)
   2dcf4:	str	fp, [sp, #-8]!
   2dcf8:	str	lr, [sp, #4]
   2dcfc:	add	fp, sp, #4
   2dd00:	sub	sp, sp, #16
   2dd04:	str	r0, [fp, #-8]
   2dd08:	str	r1, [fp, #-12]
   2dd0c:	str	r2, [fp, #-16]
   2dd10:	ldr	r2, [fp, #-12]
   2dd14:	ldr	r3, [fp, #-16]
   2dd18:	cmp	r2, r3
   2dd1c:	beq	2dd30 <flatcc_emitter_copy_buffer@@Base+0x338>
   2dd20:	ldr	r3, [fp, #-12]
   2dd24:	ldrb	r3, [r3]
   2dd28:	cmp	r3, #34	; 0x22
   2dd2c:	beq	2dd4c <flatcc_emitter_copy_buffer@@Base+0x354>
   2dd30:	mov	r3, #16
   2dd34:	ldr	r2, [fp, #-16]
   2dd38:	ldr	r1, [fp, #-12]
   2dd3c:	ldr	r0, [fp, #-8]
   2dd40:	bl	33258 <flatcc_json_parser_set_error@@Base>
   2dd44:	mov	r3, r0
   2dd48:	b	2dd5c <flatcc_emitter_copy_buffer@@Base+0x364>
   2dd4c:	ldr	r3, [fp, #-12]
   2dd50:	add	r3, r3, #1
   2dd54:	str	r3, [fp, #-12]
   2dd58:	ldr	r3, [fp, #-12]
   2dd5c:	mov	r0, r3
   2dd60:	sub	sp, fp, #4
   2dd64:	ldr	fp, [sp]
   2dd68:	add	sp, sp, #4
   2dd6c:	pop	{pc}		; (ldr pc, [sp], #4)
   2dd70:	str	fp, [sp, #-8]!
   2dd74:	str	lr, [sp, #4]
   2dd78:	add	fp, sp, #4
   2dd7c:	sub	sp, sp, #16
   2dd80:	str	r0, [fp, #-8]
   2dd84:	str	r1, [fp, #-12]
   2dd88:	str	r2, [fp, #-16]
   2dd8c:	ldr	r2, [fp, #-12]
   2dd90:	ldr	r3, [fp, #-16]
   2dd94:	cmp	r2, r3
   2dd98:	beq	2ddac <flatcc_emitter_copy_buffer@@Base+0x3b4>
   2dd9c:	ldr	r3, [fp, #-12]
   2dda0:	ldrb	r3, [r3]
   2dda4:	cmp	r3, #34	; 0x22
   2dda8:	beq	2ddc8 <flatcc_emitter_copy_buffer@@Base+0x3d0>
   2ddac:	mov	r3, #20
   2ddb0:	ldr	r2, [fp, #-16]
   2ddb4:	ldr	r1, [fp, #-12]
   2ddb8:	ldr	r0, [fp, #-8]
   2ddbc:	bl	33258 <flatcc_json_parser_set_error@@Base>
   2ddc0:	mov	r3, r0
   2ddc4:	b	2ddd8 <flatcc_emitter_copy_buffer@@Base+0x3e0>
   2ddc8:	ldr	r3, [fp, #-12]
   2ddcc:	add	r3, r3, #1
   2ddd0:	str	r3, [fp, #-12]
   2ddd4:	ldr	r3, [fp, #-12]
   2ddd8:	mov	r0, r3
   2dddc:	sub	sp, fp, #4
   2dde0:	ldr	fp, [sp]
   2dde4:	add	sp, sp, #4
   2dde8:	pop	{pc}		; (ldr pc, [sp], #4)
   2ddec:	str	fp, [sp, #-8]!
   2ddf0:	str	lr, [sp, #4]
   2ddf4:	add	fp, sp, #4
   2ddf8:	sub	sp, sp, #16
   2ddfc:	str	r0, [fp, #-8]
   2de00:	str	r1, [fp, #-12]
   2de04:	str	r2, [fp, #-16]
   2de08:	ldr	r2, [fp, #-12]
   2de0c:	ldr	r3, [fp, #-16]
   2de10:	cmp	r2, r3
   2de14:	bne	2de20 <flatcc_emitter_copy_buffer@@Base+0x428>
   2de18:	ldr	r3, [fp, #-12]
   2de1c:	b	2de88 <flatcc_emitter_copy_buffer@@Base+0x490>
   2de20:	ldr	r3, [fp, #-12]
   2de24:	ldrb	r3, [r3]
   2de28:	cmp	r3, #34	; 0x22
   2de2c:	bne	2de4c <flatcc_emitter_copy_buffer@@Base+0x454>
   2de30:	ldr	r3, [fp, #-12]
   2de34:	add	r3, r3, #1
   2de38:	str	r3, [fp, #-12]
   2de3c:	ldr	r3, [fp, #-8]
   2de40:	mov	r2, #0
   2de44:	str	r2, [r3, #12]
   2de48:	b	2de84 <flatcc_emitter_copy_buffer@@Base+0x48c>
   2de4c:	ldr	r3, [fp, #-12]
   2de50:	ldrb	r3, [r3]
   2de54:	cmp	r3, #46	; 0x2e
   2de58:	bne	2de78 <flatcc_emitter_copy_buffer@@Base+0x480>
   2de5c:	mov	r3, #5
   2de60:	ldr	r2, [fp, #-16]
   2de64:	ldr	r1, [fp, #-12]
   2de68:	ldr	r0, [fp, #-8]
   2de6c:	bl	33258 <flatcc_json_parser_set_error@@Base>
   2de70:	mov	r3, r0
   2de74:	b	2de88 <flatcc_emitter_copy_buffer@@Base+0x490>
   2de78:	ldr	r3, [fp, #-8]
   2de7c:	mov	r2, #1
   2de80:	str	r2, [r3, #12]
   2de84:	ldr	r3, [fp, #-12]
   2de88:	mov	r0, r3
   2de8c:	sub	sp, fp, #4
   2de90:	ldr	fp, [sp]
   2de94:	add	sp, sp, #4
   2de98:	pop	{pc}		; (ldr pc, [sp], #4)
   2de9c:	str	fp, [sp, #-8]!
   2dea0:	str	lr, [sp, #4]
   2dea4:	add	fp, sp, #4
   2dea8:	sub	sp, sp, #24
   2deac:	str	r0, [fp, #-16]
   2deb0:	str	r1, [fp, #-20]	; 0xffffffec
   2deb4:	str	r2, [fp, #-24]	; 0xffffffe8
   2deb8:	mov	r3, #0
   2debc:	strb	r3, [fp, #-5]
   2dec0:	ldr	r3, [fp, #-16]
   2dec4:	ldr	r3, [r3, #12]
   2dec8:	cmp	r3, #0
   2decc:	beq	2dff4 <flatcc_emitter_copy_buffer@@Base+0x5fc>
   2ded0:	b	2df68 <flatcc_emitter_copy_buffer@@Base+0x570>
   2ded4:	ldr	r3, [fp, #-20]	; 0xffffffec
   2ded8:	ldrb	r3, [r3]
   2dedc:	strb	r3, [fp, #-6]
   2dee0:	ldrb	r3, [fp, #-6]
   2dee4:	strb	r3, [fp, #-5]
   2dee8:	ldrb	r3, [fp, #-6]
   2deec:	cmp	r3, #95	; 0x5f
   2def0:	beq	2df24 <flatcc_emitter_copy_buffer@@Base+0x52c>
   2def4:	ldrb	r3, [fp, #-6]
   2def8:	cmp	r3, #46	; 0x2e
   2defc:	beq	2df24 <flatcc_emitter_copy_buffer@@Base+0x52c>
   2df00:	ldrsb	r3, [fp, #-6]
   2df04:	cmp	r3, #0
   2df08:	blt	2df24 <flatcc_emitter_copy_buffer@@Base+0x52c>
   2df0c:	ldrb	r3, [fp, #-6]
   2df10:	cmp	r3, #47	; 0x2f
   2df14:	bls	2df34 <flatcc_emitter_copy_buffer@@Base+0x53c>
   2df18:	ldrb	r3, [fp, #-6]
   2df1c:	cmp	r3, #57	; 0x39
   2df20:	bhi	2df34 <flatcc_emitter_copy_buffer@@Base+0x53c>
   2df24:	ldr	r3, [fp, #-20]	; 0xffffffec
   2df28:	add	r3, r3, #1
   2df2c:	str	r3, [fp, #-20]	; 0xffffffec
   2df30:	b	2df68 <flatcc_emitter_copy_buffer@@Base+0x570>
   2df34:	ldrb	r3, [fp, #-6]
   2df38:	orr	r3, r3, #32
   2df3c:	strb	r3, [fp, #-6]
   2df40:	ldrb	r3, [fp, #-6]
   2df44:	cmp	r3, #96	; 0x60
   2df48:	bls	2df8c <flatcc_emitter_copy_buffer@@Base+0x594>
   2df4c:	ldrb	r3, [fp, #-6]
   2df50:	cmp	r3, #122	; 0x7a
   2df54:	bhi	2df8c <flatcc_emitter_copy_buffer@@Base+0x594>
   2df58:	ldr	r3, [fp, #-20]	; 0xffffffec
   2df5c:	add	r3, r3, #1
   2df60:	str	r3, [fp, #-20]	; 0xffffffec
   2df64:	nop	{0}
   2df68:	ldr	r2, [fp, #-20]	; 0xffffffec
   2df6c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2df70:	cmp	r2, r3
   2df74:	beq	2df90 <flatcc_emitter_copy_buffer@@Base+0x598>
   2df78:	ldr	r3, [fp, #-20]	; 0xffffffec
   2df7c:	ldrb	r3, [r3]
   2df80:	cmp	r3, #32
   2df84:	bhi	2ded4 <flatcc_emitter_copy_buffer@@Base+0x4dc>
   2df88:	b	2df90 <flatcc_emitter_copy_buffer@@Base+0x598>
   2df8c:	nop	{0}
   2df90:	ldrb	r3, [fp, #-5]
   2df94:	cmp	r3, #46	; 0x2e
   2df98:	bne	2e064 <flatcc_emitter_copy_buffer@@Base+0x66c>
   2df9c:	mov	r3, #5
   2dfa0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2dfa4:	ldr	r1, [fp, #-20]	; 0xffffffec
   2dfa8:	ldr	r0, [fp, #-16]
   2dfac:	bl	33258 <flatcc_json_parser_set_error@@Base>
   2dfb0:	mov	r3, r0
   2dfb4:	b	2e068 <flatcc_emitter_copy_buffer@@Base+0x670>
   2dfb8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2dfbc:	ldrb	r3, [r3]
   2dfc0:	cmp	r3, #92	; 0x5c
   2dfc4:	bne	2dfe8 <flatcc_emitter_copy_buffer@@Base+0x5f0>
   2dfc8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2dfcc:	ldr	r3, [fp, #-20]	; 0xffffffec
   2dfd0:	sub	r3, r2, r3
   2dfd4:	cmp	r3, #1
   2dfd8:	ble	2e018 <flatcc_emitter_copy_buffer@@Base+0x620>
   2dfdc:	ldr	r3, [fp, #-20]	; 0xffffffec
   2dfe0:	add	r3, r3, #1
   2dfe4:	str	r3, [fp, #-20]	; 0xffffffec
   2dfe8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2dfec:	add	r3, r3, #1
   2dff0:	str	r3, [fp, #-20]	; 0xffffffec
   2dff4:	ldr	r2, [fp, #-20]	; 0xffffffec
   2dff8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2dffc:	cmp	r2, r3
   2e000:	beq	2e01c <flatcc_emitter_copy_buffer@@Base+0x624>
   2e004:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e008:	ldrb	r3, [r3]
   2e00c:	cmp	r3, #34	; 0x22
   2e010:	bne	2dfb8 <flatcc_emitter_copy_buffer@@Base+0x5c0>
   2e014:	b	2e01c <flatcc_emitter_copy_buffer@@Base+0x624>
   2e018:	nop	{0}
   2e01c:	ldr	r2, [fp, #-20]	; 0xffffffec
   2e020:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e024:	cmp	r2, r3
   2e028:	beq	2e03c <flatcc_emitter_copy_buffer@@Base+0x644>
   2e02c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e030:	ldrb	r3, [r3]
   2e034:	cmp	r3, #34	; 0x22
   2e038:	beq	2e058 <flatcc_emitter_copy_buffer@@Base+0x660>
   2e03c:	mov	r3, #20
   2e040:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2e044:	ldr	r1, [fp, #-20]	; 0xffffffec
   2e048:	ldr	r0, [fp, #-16]
   2e04c:	bl	33258 <flatcc_json_parser_set_error@@Base>
   2e050:	mov	r3, r0
   2e054:	b	2e068 <flatcc_emitter_copy_buffer@@Base+0x670>
   2e058:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e05c:	add	r3, r3, #1
   2e060:	str	r3, [fp, #-20]	; 0xffffffec
   2e064:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e068:	mov	r0, r3
   2e06c:	sub	sp, fp, #4
   2e070:	ldr	fp, [sp]
   2e074:	add	sp, sp, #4
   2e078:	pop	{pc}		; (ldr pc, [sp], #4)
   2e07c:	str	fp, [sp, #-8]!
   2e080:	str	lr, [sp, #4]
   2e084:	add	fp, sp, #4
   2e088:	sub	sp, sp, #16
   2e08c:	str	r0, [fp, #-8]
   2e090:	str	r1, [fp, #-12]
   2e094:	str	r2, [fp, #-16]
   2e098:	ldr	r2, [fp, #-16]
   2e09c:	ldr	r1, [fp, #-12]
   2e0a0:	ldr	r0, [fp, #-8]
   2e0a4:	bl	2ddec <flatcc_emitter_copy_buffer@@Base+0x3f4>
   2e0a8:	str	r0, [fp, #-12]
   2e0ac:	ldr	r3, [fp, #-8]
   2e0b0:	ldr	r3, [r3, #12]
   2e0b4:	cmp	r3, #0
   2e0b8:	bne	2e0d0 <flatcc_emitter_copy_buffer@@Base+0x6d8>
   2e0bc:	ldr	r2, [fp, #-16]
   2e0c0:	ldr	r1, [fp, #-12]
   2e0c4:	ldr	r0, [fp, #-8]
   2e0c8:	bl	2dc54 <flatcc_emitter_copy_buffer@@Base+0x25c>
   2e0cc:	str	r0, [fp, #-12]
   2e0d0:	ldr	r3, [fp, #-12]
   2e0d4:	mov	r0, r3
   2e0d8:	sub	sp, fp, #4
   2e0dc:	ldr	fp, [sp]
   2e0e0:	add	sp, sp, #4
   2e0e4:	pop	{pc}		; (ldr pc, [sp], #4)
   2e0e8:	str	fp, [sp, #-8]!
   2e0ec:	str	lr, [sp, #4]
   2e0f0:	add	fp, sp, #4
   2e0f4:	sub	sp, sp, #16
   2e0f8:	str	r0, [fp, #-8]
   2e0fc:	str	r1, [fp, #-12]
   2e100:	str	r2, [fp, #-16]
   2e104:	str	r3, [fp, #-20]	; 0xffffffec
   2e108:	ldr	r2, [fp, #-16]
   2e10c:	ldr	r1, [fp, #-12]
   2e110:	ldr	r0, [fp, #-8]
   2e114:	bl	2dc54 <flatcc_emitter_copy_buffer@@Base+0x25c>
   2e118:	str	r0, [fp, #-12]
   2e11c:	ldr	r2, [fp, #-12]
   2e120:	ldr	r3, [fp, #-16]
   2e124:	cmp	r2, r3
   2e128:	bne	2e140 <flatcc_emitter_copy_buffer@@Base+0x748>
   2e12c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e130:	mov	r2, #0
   2e134:	str	r2, [r3]
   2e138:	ldr	r3, [fp, #-12]
   2e13c:	b	2e248 <flatcc_emitter_copy_buffer@@Base+0x850>
   2e140:	ldr	r3, [fp, #-12]
   2e144:	ldrb	r3, [r3]
   2e148:	cmp	r3, #44	; 0x2c
   2e14c:	beq	2e1a8 <flatcc_emitter_copy_buffer@@Base+0x7b0>
   2e150:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e154:	mov	r2, #0
   2e158:	str	r2, [r3]
   2e15c:	ldr	r3, [fp, #-12]
   2e160:	ldrb	r3, [r3]
   2e164:	cmp	r3, #125	; 0x7d
   2e168:	beq	2e188 <flatcc_emitter_copy_buffer@@Base+0x790>
   2e16c:	mov	r3, #10
   2e170:	ldr	r2, [fp, #-16]
   2e174:	ldr	r1, [fp, #-12]
   2e178:	ldr	r0, [fp, #-8]
   2e17c:	bl	33258 <flatcc_json_parser_set_error@@Base>
   2e180:	mov	r3, r0
   2e184:	b	2e248 <flatcc_emitter_copy_buffer@@Base+0x850>
   2e188:	ldr	r3, [fp, #-12]
   2e18c:	add	r3, r3, #1
   2e190:	ldr	r2, [fp, #-16]
   2e194:	mov	r1, r3
   2e198:	ldr	r0, [fp, #-8]
   2e19c:	bl	2dc54 <flatcc_emitter_copy_buffer@@Base+0x25c>
   2e1a0:	mov	r3, r0
   2e1a4:	b	2e248 <flatcc_emitter_copy_buffer@@Base+0x850>
   2e1a8:	ldr	r3, [fp, #-12]
   2e1ac:	add	r3, r3, #1
   2e1b0:	ldr	r2, [fp, #-16]
   2e1b4:	mov	r1, r3
   2e1b8:	ldr	r0, [fp, #-8]
   2e1bc:	bl	2dc54 <flatcc_emitter_copy_buffer@@Base+0x25c>
   2e1c0:	str	r0, [fp, #-12]
   2e1c4:	ldr	r2, [fp, #-12]
   2e1c8:	ldr	r3, [fp, #-16]
   2e1cc:	cmp	r2, r3
   2e1d0:	bne	2e1fc <flatcc_emitter_copy_buffer@@Base+0x804>
   2e1d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e1d8:	mov	r2, #0
   2e1dc:	str	r2, [r3]
   2e1e0:	mov	r3, #10
   2e1e4:	ldr	r2, [fp, #-16]
   2e1e8:	ldr	r1, [fp, #-12]
   2e1ec:	ldr	r0, [fp, #-8]
   2e1f0:	bl	33258 <flatcc_json_parser_set_error@@Base>
   2e1f4:	mov	r3, r0
   2e1f8:	b	2e248 <flatcc_emitter_copy_buffer@@Base+0x850>
   2e1fc:	ldr	r3, [fp, #-12]
   2e200:	ldrb	r3, [r3]
   2e204:	cmp	r3, #125	; 0x7d
   2e208:	bne	2e238 <flatcc_emitter_copy_buffer@@Base+0x840>
   2e20c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e210:	mov	r2, #0
   2e214:	str	r2, [r3]
   2e218:	ldr	r3, [fp, #-12]
   2e21c:	add	r3, r3, #1
   2e220:	ldr	r2, [fp, #-16]
   2e224:	mov	r1, r3
   2e228:	ldr	r0, [fp, #-8]
   2e22c:	bl	2dc54 <flatcc_emitter_copy_buffer@@Base+0x25c>
   2e230:	mov	r3, r0
   2e234:	b	2e248 <flatcc_emitter_copy_buffer@@Base+0x850>
   2e238:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e23c:	mov	r2, #1
   2e240:	str	r2, [r3]
   2e244:	ldr	r3, [fp, #-12]
   2e248:	mov	r0, r3
   2e24c:	sub	sp, fp, #4
   2e250:	ldr	fp, [sp]
   2e254:	add	sp, sp, #4
   2e258:	pop	{pc}		; (ldr pc, [sp], #4)
   2e25c:	str	fp, [sp, #-8]!
   2e260:	str	lr, [sp, #4]
   2e264:	add	fp, sp, #4
   2e268:	sub	sp, sp, #16
   2e26c:	str	r0, [fp, #-8]
   2e270:	str	r1, [fp, #-12]
   2e274:	str	r2, [fp, #-16]
   2e278:	str	r3, [fp, #-20]	; 0xffffffec
   2e27c:	ldr	r2, [fp, #-12]
   2e280:	ldr	r3, [fp, #-16]
   2e284:	cmp	r2, r3
   2e288:	beq	2e29c <flatcc_emitter_copy_buffer@@Base+0x8a4>
   2e28c:	ldr	r3, [fp, #-12]
   2e290:	ldrb	r3, [r3]
   2e294:	cmp	r3, #91	; 0x5b
   2e298:	beq	2e2c4 <flatcc_emitter_copy_buffer@@Base+0x8cc>
   2e29c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e2a0:	mov	r2, #0
   2e2a4:	str	r2, [r3]
   2e2a8:	mov	r3, #22
   2e2ac:	ldr	r2, [fp, #-16]
   2e2b0:	ldr	r1, [fp, #-12]
   2e2b4:	ldr	r0, [fp, #-8]
   2e2b8:	bl	33258 <flatcc_json_parser_set_error@@Base>
   2e2bc:	mov	r3, r0
   2e2c0:	b	2e33c <flatcc_emitter_copy_buffer@@Base+0x944>
   2e2c4:	ldr	r3, [fp, #-12]
   2e2c8:	add	r3, r3, #1
   2e2cc:	ldr	r2, [fp, #-16]
   2e2d0:	mov	r1, r3
   2e2d4:	ldr	r0, [fp, #-8]
   2e2d8:	bl	2dc54 <flatcc_emitter_copy_buffer@@Base+0x25c>
   2e2dc:	str	r0, [fp, #-12]
   2e2e0:	ldr	r2, [fp, #-12]
   2e2e4:	ldr	r3, [fp, #-16]
   2e2e8:	cmp	r2, r3
   2e2ec:	beq	2e32c <flatcc_emitter_copy_buffer@@Base+0x934>
   2e2f0:	ldr	r3, [fp, #-12]
   2e2f4:	ldrb	r3, [r3]
   2e2f8:	cmp	r3, #93	; 0x5d
   2e2fc:	bne	2e32c <flatcc_emitter_copy_buffer@@Base+0x934>
   2e300:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e304:	mov	r2, #0
   2e308:	str	r2, [r3]
   2e30c:	ldr	r3, [fp, #-12]
   2e310:	add	r3, r3, #1
   2e314:	ldr	r2, [fp, #-16]
   2e318:	mov	r1, r3
   2e31c:	ldr	r0, [fp, #-8]
   2e320:	bl	2dc54 <flatcc_emitter_copy_buffer@@Base+0x25c>
   2e324:	mov	r3, r0
   2e328:	b	2e33c <flatcc_emitter_copy_buffer@@Base+0x944>
   2e32c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e330:	mov	r2, #1
   2e334:	str	r2, [r3]
   2e338:	ldr	r3, [fp, #-12]
   2e33c:	mov	r0, r3
   2e340:	sub	sp, fp, #4
   2e344:	ldr	fp, [sp]
   2e348:	add	sp, sp, #4
   2e34c:	pop	{pc}		; (ldr pc, [sp], #4)
   2e350:	str	fp, [sp, #-8]!
   2e354:	str	lr, [sp, #4]
   2e358:	add	fp, sp, #4
   2e35c:	sub	sp, sp, #16
   2e360:	str	r0, [fp, #-8]
   2e364:	str	r1, [fp, #-12]
   2e368:	str	r2, [fp, #-16]
   2e36c:	str	r3, [fp, #-20]	; 0xffffffec
   2e370:	ldr	r2, [fp, #-16]
   2e374:	ldr	r1, [fp, #-12]
   2e378:	ldr	r0, [fp, #-8]
   2e37c:	bl	2dc54 <flatcc_emitter_copy_buffer@@Base+0x25c>
   2e380:	str	r0, [fp, #-12]
   2e384:	ldr	r2, [fp, #-12]
   2e388:	ldr	r3, [fp, #-16]
   2e38c:	cmp	r2, r3
   2e390:	bne	2e3a8 <flatcc_emitter_copy_buffer@@Base+0x9b0>
   2e394:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e398:	mov	r2, #0
   2e39c:	str	r2, [r3]
   2e3a0:	ldr	r3, [fp, #-12]
   2e3a4:	b	2e4b0 <flatcc_emitter_copy_buffer@@Base+0xab8>
   2e3a8:	ldr	r3, [fp, #-12]
   2e3ac:	ldrb	r3, [r3]
   2e3b0:	cmp	r3, #44	; 0x2c
   2e3b4:	beq	2e410 <flatcc_emitter_copy_buffer@@Base+0xa18>
   2e3b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e3bc:	mov	r2, #0
   2e3c0:	str	r2, [r3]
   2e3c4:	ldr	r3, [fp, #-12]
   2e3c8:	ldrb	r3, [r3]
   2e3cc:	cmp	r3, #93	; 0x5d
   2e3d0:	beq	2e3f0 <flatcc_emitter_copy_buffer@@Base+0x9f8>
   2e3d4:	mov	r3, #9
   2e3d8:	ldr	r2, [fp, #-16]
   2e3dc:	ldr	r1, [fp, #-12]
   2e3e0:	ldr	r0, [fp, #-8]
   2e3e4:	bl	33258 <flatcc_json_parser_set_error@@Base>
   2e3e8:	mov	r3, r0
   2e3ec:	b	2e4b0 <flatcc_emitter_copy_buffer@@Base+0xab8>
   2e3f0:	ldr	r3, [fp, #-12]
   2e3f4:	add	r3, r3, #1
   2e3f8:	ldr	r2, [fp, #-16]
   2e3fc:	mov	r1, r3
   2e400:	ldr	r0, [fp, #-8]
   2e404:	bl	2dc54 <flatcc_emitter_copy_buffer@@Base+0x25c>
   2e408:	mov	r3, r0
   2e40c:	b	2e4b0 <flatcc_emitter_copy_buffer@@Base+0xab8>
   2e410:	ldr	r3, [fp, #-12]
   2e414:	add	r3, r3, #1
   2e418:	ldr	r2, [fp, #-16]
   2e41c:	mov	r1, r3
   2e420:	ldr	r0, [fp, #-8]
   2e424:	bl	2dc54 <flatcc_emitter_copy_buffer@@Base+0x25c>
   2e428:	str	r0, [fp, #-12]
   2e42c:	ldr	r2, [fp, #-12]
   2e430:	ldr	r3, [fp, #-16]
   2e434:	cmp	r2, r3
   2e438:	bne	2e464 <flatcc_emitter_copy_buffer@@Base+0xa6c>
   2e43c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e440:	mov	r2, #0
   2e444:	str	r2, [r3]
   2e448:	mov	r3, #9
   2e44c:	ldr	r2, [fp, #-16]
   2e450:	ldr	r1, [fp, #-12]
   2e454:	ldr	r0, [fp, #-8]
   2e458:	bl	33258 <flatcc_json_parser_set_error@@Base>
   2e45c:	mov	r3, r0
   2e460:	b	2e4b0 <flatcc_emitter_copy_buffer@@Base+0xab8>
   2e464:	ldr	r3, [fp, #-12]
   2e468:	ldrb	r3, [r3]
   2e46c:	cmp	r3, #93	; 0x5d
   2e470:	bne	2e4a0 <flatcc_emitter_copy_buffer@@Base+0xaa8>
   2e474:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e478:	mov	r2, #0
   2e47c:	str	r2, [r3]
   2e480:	ldr	r3, [fp, #-12]
   2e484:	add	r3, r3, #1
   2e488:	ldr	r2, [fp, #-16]
   2e48c:	mov	r1, r3
   2e490:	ldr	r0, [fp, #-8]
   2e494:	bl	2dc54 <flatcc_emitter_copy_buffer@@Base+0x25c>
   2e498:	mov	r3, r0
   2e49c:	b	2e4b0 <flatcc_emitter_copy_buffer@@Base+0xab8>
   2e4a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e4a4:	mov	r2, #1
   2e4a8:	str	r2, [r3]
   2e4ac:	ldr	r3, [fp, #-12]
   2e4b0:	mov	r0, r3
   2e4b4:	sub	sp, fp, #4
   2e4b8:	ldr	fp, [sp]
   2e4bc:	add	sp, sp, #4
   2e4c0:	pop	{pc}		; (ldr pc, [sp], #4)
   2e4c4:	str	fp, [sp, #-8]!
   2e4c8:	str	lr, [sp, #4]
   2e4cc:	add	fp, sp, #4
   2e4d0:	sub	sp, sp, #16
   2e4d4:	str	r0, [fp, #-8]
   2e4d8:	str	r1, [fp, #-12]
   2e4dc:	str	r2, [fp, #-16]
   2e4e0:	str	r3, [fp, #-20]	; 0xffffffec
   2e4e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e4e8:	cmp	r3, #0
   2e4ec:	beq	2e50c <flatcc_emitter_copy_buffer@@Base+0xb14>
   2e4f0:	mov	r3, #8
   2e4f4:	ldr	r2, [fp, #-16]
   2e4f8:	ldr	r1, [fp, #-12]
   2e4fc:	ldr	r0, [fp, #-8]
   2e500:	bl	33258 <flatcc_json_parser_set_error@@Base>
   2e504:	mov	r3, r0
   2e508:	b	2e51c <flatcc_emitter_copy_buffer@@Base+0xb24>
   2e50c:	ldr	r1, [fp, #12]
   2e510:	ldrd	r2, [fp, #4]
   2e514:	strd	r2, [r1]
   2e518:	ldr	r3, [fp, #-12]
   2e51c:	mov	r0, r3
   2e520:	sub	sp, fp, #4
   2e524:	ldr	fp, [sp]
   2e528:	add	sp, sp, #4
   2e52c:	pop	{pc}		; (ldr pc, [sp], #4)
   2e530:	str	fp, [sp, #-8]!
   2e534:	str	lr, [sp, #4]
   2e538:	add	fp, sp, #4
   2e53c:	sub	sp, sp, #16
   2e540:	str	r0, [fp, #-8]
   2e544:	str	r1, [fp, #-12]
   2e548:	str	r2, [fp, #-16]
   2e54c:	str	r3, [fp, #-20]	; 0xffffffec
   2e550:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e554:	cmp	r3, #0
   2e558:	beq	2e578 <flatcc_emitter_copy_buffer@@Base+0xb80>
   2e55c:	mov	r3, #8
   2e560:	ldr	r2, [fp, #-16]
   2e564:	ldr	r1, [fp, #-12]
   2e568:	ldr	r0, [fp, #-8]
   2e56c:	bl	33258 <flatcc_json_parser_set_error@@Base>
   2e570:	mov	r3, r0
   2e574:	b	2e5a4 <flatcc_emitter_copy_buffer@@Base+0xbac>
   2e578:	ldr	r2, [fp, #4]
   2e57c:	ldr	r3, [fp, #8]
   2e580:	orr	r3, r2, r3
   2e584:	cmp	r3, #0
   2e588:	movne	r3, #1
   2e58c:	moveq	r3, #0
   2e590:	uxtb	r3, r3
   2e594:	mov	r2, r3
   2e598:	ldr	r3, [fp, #12]
   2e59c:	strb	r2, [r3]
   2e5a0:	ldr	r3, [fp, #-12]
   2e5a4:	mov	r0, r3
   2e5a8:	sub	sp, fp, #4
   2e5ac:	ldr	fp, [sp]
   2e5b0:	add	sp, sp, #4
   2e5b4:	pop	{pc}		; (ldr pc, [sp], #4)
   2e5b8:	str	fp, [sp, #-8]!
   2e5bc:	str	lr, [sp, #4]
   2e5c0:	add	fp, sp, #4
   2e5c4:	sub	sp, sp, #16
   2e5c8:	str	r0, [fp, #-8]
   2e5cc:	str	r1, [fp, #-12]
   2e5d0:	str	r2, [fp, #-16]
   2e5d4:	str	r3, [fp, #-20]	; 0xffffffec
   2e5d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e5dc:	cmp	r3, #0
   2e5e0:	beq	2e600 <flatcc_emitter_copy_buffer@@Base+0xc08>
   2e5e4:	mov	r3, #8
   2e5e8:	ldr	r2, [fp, #-16]
   2e5ec:	ldr	r1, [fp, #-12]
   2e5f0:	ldr	r0, [fp, #-8]
   2e5f4:	bl	33258 <flatcc_json_parser_set_error@@Base>
   2e5f8:	mov	r3, r0
   2e5fc:	b	2e644 <flatcc_emitter_copy_buffer@@Base+0xc4c>
   2e600:	ldrd	r2, [fp, #4]
   2e604:	mvn	r0, #0
   2e608:	mov	r1, #0
   2e60c:	cmp	r3, r1
   2e610:	cmpeq	r2, r0
   2e614:	bls	2e634 <flatcc_emitter_copy_buffer@@Base+0xc3c>
   2e618:	mov	r3, #7
   2e61c:	ldr	r2, [fp, #-16]
   2e620:	ldr	r1, [fp, #-12]
   2e624:	ldr	r0, [fp, #-8]
   2e628:	bl	33258 <flatcc_json_parser_set_error@@Base>
   2e62c:	mov	r3, r0
   2e630:	b	2e644 <flatcc_emitter_copy_buffer@@Base+0xc4c>
   2e634:	ldr	r2, [fp, #4]
   2e638:	ldr	r3, [fp, #12]
   2e63c:	str	r2, [r3]
   2e640:	ldr	r3, [fp, #-12]
   2e644:	mov	r0, r3
   2e648:	sub	sp, fp, #4
   2e64c:	ldr	fp, [sp]
   2e650:	add	sp, sp, #4
   2e654:	pop	{pc}		; (ldr pc, [sp], #4)
   2e658:	str	fp, [sp, #-8]!
   2e65c:	str	lr, [sp, #4]
   2e660:	add	fp, sp, #4
   2e664:	sub	sp, sp, #16
   2e668:	str	r0, [fp, #-8]
   2e66c:	str	r1, [fp, #-12]
   2e670:	str	r2, [fp, #-16]
   2e674:	str	r3, [fp, #-20]	; 0xffffffec
   2e678:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e67c:	cmp	r3, #0
   2e680:	beq	2e6a0 <flatcc_emitter_copy_buffer@@Base+0xca8>
   2e684:	mov	r3, #8
   2e688:	ldr	r2, [fp, #-16]
   2e68c:	ldr	r1, [fp, #-12]
   2e690:	ldr	r0, [fp, #-8]
   2e694:	bl	33258 <flatcc_json_parser_set_error@@Base>
   2e698:	mov	r3, r0
   2e69c:	b	2e6e4 <flatcc_emitter_copy_buffer@@Base+0xcec>
   2e6a0:	ldrd	r2, [fp, #4]
   2e6a4:	movw	r0, #65535	; 0xffff
   2e6a8:	mov	r1, #0
   2e6ac:	cmp	r3, r1
   2e6b0:	cmpeq	r2, r0
   2e6b4:	bls	2e6d4 <flatcc_emitter_copy_buffer@@Base+0xcdc>
   2e6b8:	mov	r3, #7
   2e6bc:	ldr	r2, [fp, #-16]
   2e6c0:	ldr	r1, [fp, #-12]
   2e6c4:	ldr	r0, [fp, #-8]
   2e6c8:	bl	33258 <flatcc_json_parser_set_error@@Base>
   2e6cc:	mov	r3, r0
   2e6d0:	b	2e6e4 <flatcc_emitter_copy_buffer@@Base+0xcec>
   2e6d4:	ldrh	r2, [fp, #4]
   2e6d8:	ldr	r3, [fp, #12]
   2e6dc:	strh	r2, [r3]
   2e6e0:	ldr	r3, [fp, #-12]
   2e6e4:	mov	r0, r3
   2e6e8:	sub	sp, fp, #4
   2e6ec:	ldr	fp, [sp]
   2e6f0:	add	sp, sp, #4
   2e6f4:	pop	{pc}		; (ldr pc, [sp], #4)
   2e6f8:	str	fp, [sp, #-8]!
   2e6fc:	str	lr, [sp, #4]
   2e700:	add	fp, sp, #4
   2e704:	sub	sp, sp, #16
   2e708:	str	r0, [fp, #-8]
   2e70c:	str	r1, [fp, #-12]
   2e710:	str	r2, [fp, #-16]
   2e714:	str	r3, [fp, #-20]	; 0xffffffec
   2e718:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e71c:	cmp	r3, #0
   2e720:	beq	2e740 <flatcc_emitter_copy_buffer@@Base+0xd48>
   2e724:	mov	r3, #8
   2e728:	ldr	r2, [fp, #-16]
   2e72c:	ldr	r1, [fp, #-12]
   2e730:	ldr	r0, [fp, #-8]
   2e734:	bl	33258 <flatcc_json_parser_set_error@@Base>
   2e738:	mov	r3, r0
   2e73c:	b	2e77c <flatcc_emitter_copy_buffer@@Base+0xd84>
   2e740:	ldrd	r2, [fp, #4]
   2e744:	cmp	r3, #0
   2e748:	cmpeq	r2, #255	; 0xff
   2e74c:	bls	2e76c <flatcc_emitter_copy_buffer@@Base+0xd74>
   2e750:	mov	r3, #7
   2e754:	ldr	r2, [fp, #-16]
   2e758:	ldr	r1, [fp, #-12]
   2e75c:	ldr	r0, [fp, #-8]
   2e760:	bl	33258 <flatcc_json_parser_set_error@@Base>
   2e764:	mov	r3, r0
   2e768:	b	2e77c <flatcc_emitter_copy_buffer@@Base+0xd84>
   2e76c:	ldrb	r2, [fp, #4]
   2e770:	ldr	r3, [fp, #12]
   2e774:	strb	r2, [r3]
   2e778:	ldr	r3, [fp, #-12]
   2e77c:	mov	r0, r3
   2e780:	sub	sp, fp, #4
   2e784:	ldr	fp, [sp]
   2e788:	add	sp, sp, #4
   2e78c:	pop	{pc}		; (ldr pc, [sp], #4)
   2e790:	str	fp, [sp, #-8]!
   2e794:	str	lr, [sp, #4]
   2e798:	add	fp, sp, #4
   2e79c:	sub	sp, sp, #16
   2e7a0:	str	r0, [fp, #-8]
   2e7a4:	str	r1, [fp, #-12]
   2e7a8:	str	r2, [fp, #-16]
   2e7ac:	str	r3, [fp, #-20]	; 0xffffffec
   2e7b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e7b4:	cmp	r3, #0
   2e7b8:	beq	2e800 <flatcc_emitter_copy_buffer@@Base+0xe08>
   2e7bc:	ldrd	r2, [fp, #4]
   2e7c0:	cmp	r3, #-2147483648	; 0x80000000
   2e7c4:	cmpeq	r2, #0
   2e7c8:	bls	2e7e8 <flatcc_emitter_copy_buffer@@Base+0xdf0>
   2e7cc:	mov	r3, #8
   2e7d0:	ldr	r2, [fp, #-16]
   2e7d4:	ldr	r1, [fp, #-12]
   2e7d8:	ldr	r0, [fp, #-8]
   2e7dc:	bl	33258 <flatcc_json_parser_set_error@@Base>
   2e7e0:	mov	r3, r0
   2e7e4:	b	2e83c <flatcc_emitter_copy_buffer@@Base+0xe44>
   2e7e8:	ldrd	r2, [fp, #4]
   2e7ec:	rsbs	r2, r2, #0
   2e7f0:	rsc	r3, r3, #0
   2e7f4:	ldr	r1, [fp, #12]
   2e7f8:	strd	r2, [r1]
   2e7fc:	b	2e838 <flatcc_emitter_copy_buffer@@Base+0xe40>
   2e800:	ldrd	r2, [fp, #4]
   2e804:	cmp	r2, #0
   2e808:	sbcs	r3, r3, #0
   2e80c:	bge	2e82c <flatcc_emitter_copy_buffer@@Base+0xe34>
   2e810:	mov	r3, #7
   2e814:	ldr	r2, [fp, #-16]
   2e818:	ldr	r1, [fp, #-12]
   2e81c:	ldr	r0, [fp, #-8]
   2e820:	bl	33258 <flatcc_json_parser_set_error@@Base>
   2e824:	mov	r3, r0
   2e828:	b	2e83c <flatcc_emitter_copy_buffer@@Base+0xe44>
   2e82c:	ldrd	r2, [fp, #4]
   2e830:	ldr	r1, [fp, #12]
   2e834:	strd	r2, [r1]
   2e838:	ldr	r3, [fp, #-12]
   2e83c:	mov	r0, r3
   2e840:	sub	sp, fp, #4
   2e844:	ldr	fp, [sp]
   2e848:	add	sp, sp, #4
   2e84c:	pop	{pc}		; (ldr pc, [sp], #4)
   2e850:	str	fp, [sp, #-8]!
   2e854:	str	lr, [sp, #4]
   2e858:	add	fp, sp, #4
   2e85c:	sub	sp, sp, #16
   2e860:	str	r0, [fp, #-8]
   2e864:	str	r1, [fp, #-12]
   2e868:	str	r2, [fp, #-16]
   2e86c:	str	r3, [fp, #-20]	; 0xffffffec
   2e870:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e874:	cmp	r3, #0
   2e878:	beq	2e8c0 <flatcc_emitter_copy_buffer@@Base+0xec8>
   2e87c:	ldrd	r2, [fp, #4]
   2e880:	cmp	r3, #0
   2e884:	cmpeq	r2, #-2147483648	; 0x80000000
   2e888:	bls	2e8a8 <flatcc_emitter_copy_buffer@@Base+0xeb0>
   2e88c:	mov	r3, #8
   2e890:	ldr	r2, [fp, #-16]
   2e894:	ldr	r1, [fp, #-12]
   2e898:	ldr	r0, [fp, #-8]
   2e89c:	bl	33258 <flatcc_json_parser_set_error@@Base>
   2e8a0:	mov	r3, r0
   2e8a4:	b	2e904 <flatcc_emitter_copy_buffer@@Base+0xf0c>
   2e8a8:	ldr	r3, [fp, #4]
   2e8ac:	rsb	r3, r3, #0
   2e8b0:	mov	r2, r3
   2e8b4:	ldr	r3, [fp, #12]
   2e8b8:	str	r2, [r3]
   2e8bc:	b	2e900 <flatcc_emitter_copy_buffer@@Base+0xf08>
   2e8c0:	ldrd	r2, [fp, #4]
   2e8c4:	mvn	r0, #-2147483648	; 0x80000000
   2e8c8:	mov	r1, #0
   2e8cc:	cmp	r3, r1
   2e8d0:	cmpeq	r2, r0
   2e8d4:	bls	2e8f4 <flatcc_emitter_copy_buffer@@Base+0xefc>
   2e8d8:	mov	r3, #7
   2e8dc:	ldr	r2, [fp, #-16]
   2e8e0:	ldr	r1, [fp, #-12]
   2e8e4:	ldr	r0, [fp, #-8]
   2e8e8:	bl	33258 <flatcc_json_parser_set_error@@Base>
   2e8ec:	mov	r3, r0
   2e8f0:	b	2e904 <flatcc_emitter_copy_buffer@@Base+0xf0c>
   2e8f4:	ldr	r2, [fp, #4]
   2e8f8:	ldr	r3, [fp, #12]
   2e8fc:	str	r2, [r3]
   2e900:	ldr	r3, [fp, #-12]
   2e904:	mov	r0, r3
   2e908:	sub	sp, fp, #4
   2e90c:	ldr	fp, [sp]
   2e910:	add	sp, sp, #4
   2e914:	pop	{pc}		; (ldr pc, [sp], #4)
   2e918:	str	fp, [sp, #-8]!
   2e91c:	str	lr, [sp, #4]
   2e920:	add	fp, sp, #4
   2e924:	sub	sp, sp, #16
   2e928:	str	r0, [fp, #-8]
   2e92c:	str	r1, [fp, #-12]
   2e930:	str	r2, [fp, #-16]
   2e934:	str	r3, [fp, #-20]	; 0xffffffec
   2e938:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e93c:	cmp	r3, #0
   2e940:	beq	2e98c <flatcc_emitter_copy_buffer@@Base+0xf94>
   2e944:	ldrd	r2, [fp, #4]
   2e948:	cmp	r3, #0
   2e94c:	cmpeq	r2, #32768	; 0x8000
   2e950:	bls	2e970 <flatcc_emitter_copy_buffer@@Base+0xf78>
   2e954:	mov	r3, #8
   2e958:	ldr	r2, [fp, #-16]
   2e95c:	ldr	r1, [fp, #-12]
   2e960:	ldr	r0, [fp, #-8]
   2e964:	bl	33258 <flatcc_json_parser_set_error@@Base>
   2e968:	mov	r3, r0
   2e96c:	b	2e9d0 <flatcc_emitter_copy_buffer@@Base+0xfd8>
   2e970:	ldrh	r3, [fp, #4]
   2e974:	rsb	r3, r3, #0
   2e978:	uxth	r3, r3
   2e97c:	sxth	r2, r3
   2e980:	ldr	r3, [fp, #12]
   2e984:	strh	r2, [r3]
   2e988:	b	2e9cc <flatcc_emitter_copy_buffer@@Base+0xfd4>
   2e98c:	ldrd	r2, [fp, #4]
   2e990:	movw	r0, #32767	; 0x7fff
   2e994:	mov	r1, #0
   2e998:	cmp	r3, r1
   2e99c:	cmpeq	r2, r0
   2e9a0:	bls	2e9c0 <flatcc_emitter_copy_buffer@@Base+0xfc8>
   2e9a4:	mov	r3, #7
   2e9a8:	ldr	r2, [fp, #-16]
   2e9ac:	ldr	r1, [fp, #-12]
   2e9b0:	ldr	r0, [fp, #-8]
   2e9b4:	bl	33258 <flatcc_json_parser_set_error@@Base>
   2e9b8:	mov	r3, r0
   2e9bc:	b	2e9d0 <flatcc_emitter_copy_buffer@@Base+0xfd8>
   2e9c0:	ldrsh	r2, [fp, #4]
   2e9c4:	ldr	r3, [fp, #12]
   2e9c8:	strh	r2, [r3]
   2e9cc:	ldr	r3, [fp, #-12]
   2e9d0:	mov	r0, r3
   2e9d4:	sub	sp, fp, #4
   2e9d8:	ldr	fp, [sp]
   2e9dc:	add	sp, sp, #4
   2e9e0:	pop	{pc}		; (ldr pc, [sp], #4)
   2e9e4:	str	fp, [sp, #-8]!
   2e9e8:	str	lr, [sp, #4]
   2e9ec:	add	fp, sp, #4
   2e9f0:	sub	sp, sp, #16
   2e9f4:	str	r0, [fp, #-8]
   2e9f8:	str	r1, [fp, #-12]
   2e9fc:	str	r2, [fp, #-16]
   2ea00:	str	r3, [fp, #-20]	; 0xffffffec
   2ea04:	ldr	r3, [fp, #-20]	; 0xffffffec
   2ea08:	cmp	r3, #0
   2ea0c:	beq	2ea58 <flatcc_emitter_copy_buffer@@Base+0x1060>
   2ea10:	ldrd	r2, [fp, #4]
   2ea14:	cmp	r3, #0
   2ea18:	cmpeq	r2, #128	; 0x80
   2ea1c:	bls	2ea3c <flatcc_emitter_copy_buffer@@Base+0x1044>
   2ea20:	mov	r3, #8
   2ea24:	ldr	r2, [fp, #-16]
   2ea28:	ldr	r1, [fp, #-12]
   2ea2c:	ldr	r0, [fp, #-8]
   2ea30:	bl	33258 <flatcc_json_parser_set_error@@Base>
   2ea34:	mov	r3, r0
   2ea38:	b	2ea94 <flatcc_emitter_copy_buffer@@Base+0x109c>
   2ea3c:	ldrb	r3, [fp, #4]
   2ea40:	rsb	r3, r3, #0
   2ea44:	uxtb	r3, r3
   2ea48:	sxtb	r2, r3
   2ea4c:	ldr	r3, [fp, #12]
   2ea50:	strb	r2, [r3]
   2ea54:	b	2ea90 <flatcc_emitter_copy_buffer@@Base+0x1098>
   2ea58:	ldrd	r2, [fp, #4]
   2ea5c:	cmp	r3, #0
   2ea60:	cmpeq	r2, #127	; 0x7f
   2ea64:	bls	2ea84 <flatcc_emitter_copy_buffer@@Base+0x108c>
   2ea68:	mov	r3, #7
   2ea6c:	ldr	r2, [fp, #-16]
   2ea70:	ldr	r1, [fp, #-12]
   2ea74:	ldr	r0, [fp, #-8]
   2ea78:	bl	33258 <flatcc_json_parser_set_error@@Base>
   2ea7c:	mov	r3, r0
   2ea80:	b	2ea94 <flatcc_emitter_copy_buffer@@Base+0x109c>
   2ea84:	ldrsb	r2, [fp, #4]
   2ea88:	ldr	r3, [fp, #12]
   2ea8c:	strb	r2, [r3]
   2ea90:	ldr	r3, [fp, #-12]
   2ea94:	mov	r0, r3
   2ea98:	sub	sp, fp, #4
   2ea9c:	ldr	fp, [sp]
   2eaa0:	add	sp, sp, #4
   2eaa4:	pop	{pc}		; (ldr pc, [sp], #4)
   2eaa8:	str	fp, [sp, #-8]!
   2eaac:	str	lr, [sp, #4]
   2eab0:	add	fp, sp, #4
   2eab4:	sub	sp, sp, #16
   2eab8:	str	r0, [fp, #-8]
   2eabc:	str	r1, [fp, #-12]
   2eac0:	str	r2, [fp, #-16]
   2eac4:	str	r3, [fp, #-20]	; 0xffffffec
   2eac8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2eacc:	cmp	r3, #0
   2ead0:	beq	2eae8 <flatcc_emitter_copy_buffer@@Base+0x10f0>
   2ead4:	ldrd	r0, [fp, #4]
   2ead8:	bl	36bdc <flatcc_json_parser_struct_as_root@@Base+0x6ac>
   2eadc:	mov	r3, r0
   2eae0:	eor	r2, r3, #-2147483648	; 0x80000000
   2eae4:	b	2eaf4 <flatcc_emitter_copy_buffer@@Base+0x10fc>
   2eae8:	ldrd	r0, [fp, #4]
   2eaec:	bl	36bdc <flatcc_json_parser_struct_as_root@@Base+0x6ac>
   2eaf0:	mov	r2, r0
   2eaf4:	ldr	r3, [fp, #12]
   2eaf8:	str	r2, [r3]
   2eafc:	ldr	r3, [fp, #-12]
   2eb00:	mov	r0, r3
   2eb04:	sub	sp, fp, #4
   2eb08:	ldr	fp, [sp]
   2eb0c:	add	sp, sp, #4
   2eb10:	pop	{pc}		; (ldr pc, [sp], #4)
   2eb14:	str	fp, [sp, #-8]!
   2eb18:	str	lr, [sp, #4]
   2eb1c:	add	fp, sp, #4
   2eb20:	sub	sp, sp, #16
   2eb24:	str	r0, [fp, #-8]
   2eb28:	str	r1, [fp, #-12]
   2eb2c:	str	r2, [fp, #-16]
   2eb30:	str	r3, [fp, #-20]	; 0xffffffec
   2eb34:	ldr	r3, [fp, #-20]	; 0xffffffec
   2eb38:	cmp	r3, #0
   2eb3c:	beq	2eb58 <flatcc_emitter_copy_buffer@@Base+0x1160>
   2eb40:	ldrd	r0, [fp, #4]
   2eb44:	bl	369a4 <flatcc_json_parser_struct_as_root@@Base+0x474>
   2eb48:	mov	r2, r0
   2eb4c:	mov	r3, r1
   2eb50:	eor	r3, r3, #-2147483648	; 0x80000000
   2eb54:	b	2eb68 <flatcc_emitter_copy_buffer@@Base+0x1170>
   2eb58:	ldrd	r0, [fp, #4]
   2eb5c:	bl	369a4 <flatcc_json_parser_struct_as_root@@Base+0x474>
   2eb60:	mov	r2, r0
   2eb64:	mov	r3, r1
   2eb68:	ldr	r1, [fp, #12]
   2eb6c:	strd	r2, [r1]
   2eb70:	ldr	r3, [fp, #-12]
   2eb74:	mov	r0, r3
   2eb78:	sub	sp, fp, #4
   2eb7c:	ldr	fp, [sp]
   2eb80:	add	sp, sp, #4
   2eb84:	pop	{pc}		; (ldr pc, [sp], #4)
   2eb88:	str	fp, [sp, #-8]!
   2eb8c:	str	lr, [sp, #4]
   2eb90:	add	fp, sp, #4
   2eb94:	sub	sp, sp, #56	; 0x38
   2eb98:	str	r0, [fp, #-32]	; 0xffffffe0
   2eb9c:	str	r1, [fp, #-36]	; 0xffffffdc
   2eba0:	str	r2, [fp, #-40]	; 0xffffffd8
   2eba4:	str	r3, [fp, #-44]	; 0xffffffd4
   2eba8:	mov	r2, #0
   2ebac:	mov	r3, #0
   2ebb0:	strd	r2, [fp, #-20]	; 0xffffffec
   2ebb4:	mov	r3, #0
   2ebb8:	str	r3, [fp, #-24]	; 0xffffffe8
   2ebbc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2ebc0:	str	r3, [fp, #-8]
   2ebc4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2ebc8:	mov	r2, #0
   2ebcc:	strb	r2, [r3]
   2ebd0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2ebd4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2ebd8:	cmp	r2, r3
   2ebdc:	bne	2ebe8 <flatcc_emitter_copy_buffer@@Base+0x11f0>
   2ebe0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2ebe4:	b	2ec50 <flatcc_emitter_copy_buffer@@Base+0x1258>
   2ebe8:	sub	r2, fp, #24
   2ebec:	sub	r3, fp, #20
   2ebf0:	str	r3, [sp]
   2ebf4:	mov	r3, r2
   2ebf8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2ebfc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2ec00:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2ec04:	bl	34f58 <flatcc_json_parser_integer@@Base>
   2ec08:	str	r0, [fp, #-36]	; 0xffffffdc
   2ec0c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2ec10:	ldr	r3, [fp, #-8]
   2ec14:	cmp	r2, r3
   2ec18:	beq	2ec4c <flatcc_emitter_copy_buffer@@Base+0x1254>
   2ec1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ec20:	ldrd	r2, [fp, #-20]	; 0xffffffec
   2ec24:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2ec28:	str	r1, [sp, #8]
   2ec2c:	strd	r2, [sp]
   2ec30:	mov	r3, r0
   2ec34:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2ec38:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2ec3c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2ec40:	bl	2e6f8 <flatcc_emitter_copy_buffer@@Base+0xd00>
   2ec44:	mov	r3, r0
   2ec48:	b	2ec50 <flatcc_emitter_copy_buffer@@Base+0x1258>
   2ec4c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2ec50:	mov	r0, r3
   2ec54:	sub	sp, fp, #4
   2ec58:	ldr	fp, [sp]
   2ec5c:	add	sp, sp, #4
   2ec60:	pop	{pc}		; (ldr pc, [sp], #4)
   2ec64:	strd	r4, [sp, #-20]!	; 0xffffffec
   2ec68:	str	r6, [sp, #8]
   2ec6c:	str	fp, [sp, #12]
   2ec70:	str	lr, [sp, #16]
   2ec74:	add	fp, sp, #16
   2ec78:	sub	sp, sp, #76	; 0x4c
   2ec7c:	str	r0, [fp, #-64]	; 0xffffffc0
   2ec80:	str	r1, [fp, #-68]	; 0xffffffbc
   2ec84:	str	r2, [fp, #-72]	; 0xffffffb8
   2ec88:	str	r3, [fp, #-76]	; 0xffffffb4
   2ec8c:	mov	r2, #0
   2ec90:	mov	r3, #0
   2ec94:	strd	r2, [fp, #-44]	; 0xffffffd4
   2ec98:	mov	r3, #0
   2ec9c:	str	r3, [fp, #-28]	; 0xffffffe4
   2eca0:	ldr	r1, [fp, #4]
   2eca4:	mov	r2, #0
   2eca8:	mov	r3, #0
   2ecac:	strd	r2, [r1]
   2ecb0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   2ecb4:	ldr	r1, [fp, #-68]	; 0xffffffbc
   2ecb8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2ecbc:	bl	2e07c <flatcc_emitter_copy_buffer@@Base+0x684>
   2ecc0:	str	r0, [fp, #-68]	; 0xffffffbc
   2ecc4:	ldr	r2, [fp, #-68]	; 0xffffffbc
   2ecc8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2eccc:	cmp	r2, r3
   2ecd0:	bne	2ecdc <flatcc_emitter_copy_buffer@@Base+0x12e4>
   2ecd4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2ecd8:	b	2ee3c <flatcc_emitter_copy_buffer@@Base+0x1444>
   2ecdc:	ldr	r3, [fp, #-76]	; 0xffffffb4
   2ece0:	str	r3, [fp, #-24]	; 0xffffffe8
   2ece4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ece8:	ldr	r6, [r3]
   2ecec:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2ecf0:	str	r3, [fp, #-32]	; 0xffffffe0
   2ecf4:	sub	r2, fp, #56	; 0x38
   2ecf8:	sub	r3, fp, #60	; 0x3c
   2ecfc:	str	r3, [sp, #4]
   2ed00:	sub	r3, fp, #52	; 0x34
   2ed04:	str	r3, [sp]
   2ed08:	mov	r3, r2
   2ed0c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   2ed10:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2ed14:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2ed18:	blx	r6
   2ed1c:	str	r0, [fp, #-68]	; 0xffffffbc
   2ed20:	ldr	r2, [fp, #-68]	; 0xffffffbc
   2ed24:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2ed28:	cmp	r2, r3
   2ed2c:	bne	2ed38 <flatcc_emitter_copy_buffer@@Base+0x1340>
   2ed30:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2ed34:	b	2ee3c <flatcc_emitter_copy_buffer@@Base+0x1444>
   2ed38:	ldr	r2, [fp, #-68]	; 0xffffffbc
   2ed3c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2ed40:	cmp	r2, r3
   2ed44:	bne	2ed64 <flatcc_emitter_copy_buffer@@Base+0x136c>
   2ed48:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ed4c:	add	r3, r3, #4
   2ed50:	str	r3, [fp, #-24]	; 0xffffffe8
   2ed54:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ed58:	ldr	r3, [r3]
   2ed5c:	cmp	r3, #0
   2ed60:	bne	2ece4 <flatcc_emitter_copy_buffer@@Base+0x12ec>
   2ed64:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2ed68:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2ed6c:	cmp	r2, r3
   2ed70:	bne	2ed90 <flatcc_emitter_copy_buffer@@Base+0x1398>
   2ed74:	mov	r3, #23
   2ed78:	ldr	r2, [fp, #-72]	; 0xffffffb8
   2ed7c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   2ed80:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2ed84:	bl	33258 <flatcc_json_parser_set_error@@Base>
   2ed88:	mov	r3, r0
   2ed8c:	b	2ee3c <flatcc_emitter_copy_buffer@@Base+0x1444>
   2ed90:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2ed94:	add	r2, r3, #1
   2ed98:	str	r2, [fp, #-28]	; 0xffffffe4
   2ed9c:	cmp	r3, #0
   2eda0:	beq	2edd0 <flatcc_emitter_copy_buffer@@Base+0x13d8>
   2eda4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2eda8:	ldr	r3, [r3, #12]
   2edac:	cmp	r3, #0
   2edb0:	beq	2edd0 <flatcc_emitter_copy_buffer@@Base+0x13d8>
   2edb4:	mov	r3, #14
   2edb8:	ldr	r2, [fp, #-72]	; 0xffffffb8
   2edbc:	ldr	r1, [fp, #-68]	; 0xffffffbc
   2edc0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2edc4:	bl	33258 <flatcc_json_parser_set_error@@Base>
   2edc8:	mov	r3, r0
   2edcc:	b	2ee3c <flatcc_emitter_copy_buffer@@Base+0x1444>
   2edd0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2edd4:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   2edd8:	sub	r1, fp, #44	; 0x2c
   2eddc:	str	r1, [sp, #8]
   2ede0:	strd	r2, [sp]
   2ede4:	mov	r3, r0
   2ede8:	ldr	r2, [fp, #-72]	; 0xffffffb8
   2edec:	ldr	r1, [fp, #-68]	; 0xffffffbc
   2edf0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2edf4:	bl	2e4c4 <flatcc_emitter_copy_buffer@@Base+0xacc>
   2edf8:	mov	r2, r0
   2edfc:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2ee00:	cmp	r3, r2
   2ee04:	bne	2ee10 <flatcc_emitter_copy_buffer@@Base+0x1418>
   2ee08:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2ee0c:	b	2ee3c <flatcc_emitter_copy_buffer@@Base+0x1444>
   2ee10:	ldr	r3, [fp, #4]
   2ee14:	ldrd	r0, [r3]
   2ee18:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   2ee1c:	adds	r4, r0, r2
   2ee20:	adc	r5, r1, r3
   2ee24:	ldr	r3, [fp, #4]
   2ee28:	strd	r4, [r3]
   2ee2c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2ee30:	cmp	r3, #0
   2ee34:	bne	2ecdc <flatcc_emitter_copy_buffer@@Base+0x12e4>
   2ee38:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2ee3c:	mov	r0, r3
   2ee40:	sub	sp, fp, #16
   2ee44:	ldrd	r4, [sp]
   2ee48:	ldr	r6, [sp, #8]
   2ee4c:	ldr	fp, [sp, #12]
   2ee50:	add	sp, sp, #16
   2ee54:	pop	{pc}		; (ldr pc, [sp], #4)
   2ee58:	str	r4, [sp, #-12]!
   2ee5c:	str	fp, [sp, #4]
   2ee60:	str	lr, [sp, #8]
   2ee64:	add	fp, sp, #8
   2ee68:	sub	sp, sp, #68	; 0x44
   2ee6c:	str	r0, [fp, #-48]	; 0xffffffd0
   2ee70:	str	r1, [fp, #-52]	; 0xffffffcc
   2ee74:	str	r2, [fp, #-56]	; 0xffffffc8
   2ee78:	str	r3, [fp, #-60]	; 0xffffffc4
   2ee7c:	mov	r3, #0
   2ee80:	str	r3, [fp, #-28]	; 0xffffffe4
   2ee84:	mov	r3, #0
   2ee88:	str	r3, [fp, #-20]	; 0xffffffec
   2ee8c:	ldr	r3, [fp, #4]
   2ee90:	mov	r2, #0
   2ee94:	str	r2, [r3]
   2ee98:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2ee9c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2eea0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2eea4:	bl	2e07c <flatcc_emitter_copy_buffer@@Base+0x684>
   2eea8:	str	r0, [fp, #-52]	; 0xffffffcc
   2eeac:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2eeb0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2eeb4:	cmp	r2, r3
   2eeb8:	bne	2eec4 <flatcc_emitter_copy_buffer@@Base+0x14cc>
   2eebc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2eec0:	b	2f020 <flatcc_emitter_copy_buffer@@Base+0x1628>
   2eec4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2eec8:	str	r3, [fp, #-16]
   2eecc:	ldr	r3, [fp, #-16]
   2eed0:	ldr	r4, [r3]
   2eed4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2eed8:	str	r3, [fp, #-24]	; 0xffffffe8
   2eedc:	sub	r2, fp, #40	; 0x28
   2eee0:	sub	r3, fp, #44	; 0x2c
   2eee4:	str	r3, [sp, #4]
   2eee8:	sub	r3, fp, #36	; 0x24
   2eeec:	str	r3, [sp]
   2eef0:	mov	r3, r2
   2eef4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2eef8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2eefc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2ef00:	blx	r4
   2ef04:	str	r0, [fp, #-52]	; 0xffffffcc
   2ef08:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2ef0c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2ef10:	cmp	r2, r3
   2ef14:	bne	2ef20 <flatcc_emitter_copy_buffer@@Base+0x1528>
   2ef18:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2ef1c:	b	2f020 <flatcc_emitter_copy_buffer@@Base+0x1628>
   2ef20:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2ef24:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ef28:	cmp	r2, r3
   2ef2c:	bne	2ef4c <flatcc_emitter_copy_buffer@@Base+0x1554>
   2ef30:	ldr	r3, [fp, #-16]
   2ef34:	add	r3, r3, #4
   2ef38:	str	r3, [fp, #-16]
   2ef3c:	ldr	r3, [fp, #-16]
   2ef40:	ldr	r3, [r3]
   2ef44:	cmp	r3, #0
   2ef48:	bne	2eecc <flatcc_emitter_copy_buffer@@Base+0x14d4>
   2ef4c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2ef50:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2ef54:	cmp	r2, r3
   2ef58:	bne	2ef78 <flatcc_emitter_copy_buffer@@Base+0x1580>
   2ef5c:	mov	r3, #23
   2ef60:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2ef64:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2ef68:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2ef6c:	bl	33258 <flatcc_json_parser_set_error@@Base>
   2ef70:	mov	r3, r0
   2ef74:	b	2f020 <flatcc_emitter_copy_buffer@@Base+0x1628>
   2ef78:	ldr	r3, [fp, #-20]	; 0xffffffec
   2ef7c:	add	r2, r3, #1
   2ef80:	str	r2, [fp, #-20]	; 0xffffffec
   2ef84:	cmp	r3, #0
   2ef88:	beq	2efb8 <flatcc_emitter_copy_buffer@@Base+0x15c0>
   2ef8c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2ef90:	ldr	r3, [r3, #12]
   2ef94:	cmp	r3, #0
   2ef98:	beq	2efb8 <flatcc_emitter_copy_buffer@@Base+0x15c0>
   2ef9c:	mov	r3, #14
   2efa0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2efa4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2efa8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2efac:	bl	33258 <flatcc_json_parser_set_error@@Base>
   2efb0:	mov	r3, r0
   2efb4:	b	2f020 <flatcc_emitter_copy_buffer@@Base+0x1628>
   2efb8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2efbc:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   2efc0:	sub	r1, fp, #28
   2efc4:	str	r1, [sp, #8]
   2efc8:	strd	r2, [sp]
   2efcc:	mov	r3, r0
   2efd0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2efd4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2efd8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2efdc:	bl	2e5b8 <flatcc_emitter_copy_buffer@@Base+0xbc0>
   2efe0:	mov	r2, r0
   2efe4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2efe8:	cmp	r3, r2
   2efec:	bne	2eff8 <flatcc_emitter_copy_buffer@@Base+0x1600>
   2eff0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2eff4:	b	2f020 <flatcc_emitter_copy_buffer@@Base+0x1628>
   2eff8:	ldr	r3, [fp, #4]
   2effc:	ldr	r2, [r3]
   2f000:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2f004:	add	r2, r2, r3
   2f008:	ldr	r3, [fp, #4]
   2f00c:	str	r2, [r3]
   2f010:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2f014:	cmp	r3, #0
   2f018:	bne	2eec4 <flatcc_emitter_copy_buffer@@Base+0x14cc>
   2f01c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2f020:	mov	r0, r3
   2f024:	sub	sp, fp, #8
   2f028:	ldr	r4, [sp]
   2f02c:	ldr	fp, [sp, #4]
   2f030:	add	sp, sp, #8
   2f034:	pop	{pc}		; (ldr pc, [sp], #4)
   2f038:	str	r4, [sp, #-12]!
   2f03c:	str	fp, [sp, #4]
   2f040:	str	lr, [sp, #8]
   2f044:	add	fp, sp, #8
   2f048:	sub	sp, sp, #68	; 0x44
   2f04c:	str	r0, [fp, #-48]	; 0xffffffd0
   2f050:	str	r1, [fp, #-52]	; 0xffffffcc
   2f054:	str	r2, [fp, #-56]	; 0xffffffc8
   2f058:	str	r3, [fp, #-60]	; 0xffffffc4
   2f05c:	mov	r3, #0
   2f060:	strh	r3, [fp, #-26]	; 0xffffffe6
   2f064:	mov	r3, #0
   2f068:	str	r3, [fp, #-20]	; 0xffffffec
   2f06c:	ldr	r3, [fp, #4]
   2f070:	mov	r2, #0
   2f074:	strh	r2, [r3]
   2f078:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2f07c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2f080:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2f084:	bl	2e07c <flatcc_emitter_copy_buffer@@Base+0x684>
   2f088:	str	r0, [fp, #-52]	; 0xffffffcc
   2f08c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2f090:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2f094:	cmp	r2, r3
   2f098:	bne	2f0a4 <flatcc_emitter_copy_buffer@@Base+0x16ac>
   2f09c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2f0a0:	b	2f204 <flatcc_emitter_copy_buffer@@Base+0x180c>
   2f0a4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2f0a8:	str	r3, [fp, #-16]
   2f0ac:	ldr	r3, [fp, #-16]
   2f0b0:	ldr	r4, [r3]
   2f0b4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2f0b8:	str	r3, [fp, #-24]	; 0xffffffe8
   2f0bc:	sub	r2, fp, #40	; 0x28
   2f0c0:	sub	r3, fp, #44	; 0x2c
   2f0c4:	str	r3, [sp, #4]
   2f0c8:	sub	r3, fp, #36	; 0x24
   2f0cc:	str	r3, [sp]
   2f0d0:	mov	r3, r2
   2f0d4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2f0d8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2f0dc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2f0e0:	blx	r4
   2f0e4:	str	r0, [fp, #-52]	; 0xffffffcc
   2f0e8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2f0ec:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2f0f0:	cmp	r2, r3
   2f0f4:	bne	2f100 <flatcc_emitter_copy_buffer@@Base+0x1708>
   2f0f8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2f0fc:	b	2f204 <flatcc_emitter_copy_buffer@@Base+0x180c>
   2f100:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2f104:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f108:	cmp	r2, r3
   2f10c:	bne	2f12c <flatcc_emitter_copy_buffer@@Base+0x1734>
   2f110:	ldr	r3, [fp, #-16]
   2f114:	add	r3, r3, #4
   2f118:	str	r3, [fp, #-16]
   2f11c:	ldr	r3, [fp, #-16]
   2f120:	ldr	r3, [r3]
   2f124:	cmp	r3, #0
   2f128:	bne	2f0ac <flatcc_emitter_copy_buffer@@Base+0x16b4>
   2f12c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2f130:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2f134:	cmp	r2, r3
   2f138:	bne	2f158 <flatcc_emitter_copy_buffer@@Base+0x1760>
   2f13c:	mov	r3, #23
   2f140:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2f144:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2f148:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2f14c:	bl	33258 <flatcc_json_parser_set_error@@Base>
   2f150:	mov	r3, r0
   2f154:	b	2f204 <flatcc_emitter_copy_buffer@@Base+0x180c>
   2f158:	ldr	r3, [fp, #-20]	; 0xffffffec
   2f15c:	add	r2, r3, #1
   2f160:	str	r2, [fp, #-20]	; 0xffffffec
   2f164:	cmp	r3, #0
   2f168:	beq	2f198 <flatcc_emitter_copy_buffer@@Base+0x17a0>
   2f16c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2f170:	ldr	r3, [r3, #12]
   2f174:	cmp	r3, #0
   2f178:	beq	2f198 <flatcc_emitter_copy_buffer@@Base+0x17a0>
   2f17c:	mov	r3, #14
   2f180:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2f184:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2f188:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2f18c:	bl	33258 <flatcc_json_parser_set_error@@Base>
   2f190:	mov	r3, r0
   2f194:	b	2f204 <flatcc_emitter_copy_buffer@@Base+0x180c>
   2f198:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2f19c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   2f1a0:	sub	r1, fp, #26
   2f1a4:	str	r1, [sp, #8]
   2f1a8:	strd	r2, [sp]
   2f1ac:	mov	r3, r0
   2f1b0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2f1b4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2f1b8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2f1bc:	bl	2e658 <flatcc_emitter_copy_buffer@@Base+0xc60>
   2f1c0:	mov	r2, r0
   2f1c4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2f1c8:	cmp	r3, r2
   2f1cc:	bne	2f1d8 <flatcc_emitter_copy_buffer@@Base+0x17e0>
   2f1d0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2f1d4:	b	2f204 <flatcc_emitter_copy_buffer@@Base+0x180c>
   2f1d8:	ldr	r3, [fp, #4]
   2f1dc:	ldrh	r2, [r3]
   2f1e0:	ldrh	r3, [fp, #-26]	; 0xffffffe6
   2f1e4:	add	r3, r2, r3
   2f1e8:	uxth	r2, r3
   2f1ec:	ldr	r3, [fp, #4]
   2f1f0:	strh	r2, [r3]
   2f1f4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2f1f8:	cmp	r3, #0
   2f1fc:	bne	2f0a4 <flatcc_emitter_copy_buffer@@Base+0x16ac>
   2f200:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2f204:	mov	r0, r3
   2f208:	sub	sp, fp, #8
   2f20c:	ldr	r4, [sp]
   2f210:	ldr	fp, [sp, #4]
   2f214:	add	sp, sp, #8
   2f218:	pop	{pc}		; (ldr pc, [sp], #4)
   2f21c:	str	r4, [sp, #-12]!
   2f220:	str	fp, [sp, #4]
   2f224:	str	lr, [sp, #8]
   2f228:	add	fp, sp, #8
   2f22c:	sub	sp, sp, #68	; 0x44
   2f230:	str	r0, [fp, #-48]	; 0xffffffd0
   2f234:	str	r1, [fp, #-52]	; 0xffffffcc
   2f238:	str	r2, [fp, #-56]	; 0xffffffc8
   2f23c:	str	r3, [fp, #-60]	; 0xffffffc4
   2f240:	mov	r3, #0
   2f244:	strb	r3, [fp, #-25]	; 0xffffffe7
   2f248:	mov	r3, #0
   2f24c:	str	r3, [fp, #-20]	; 0xffffffec
   2f250:	ldr	r3, [fp, #4]
   2f254:	mov	r2, #0
   2f258:	strb	r2, [r3]
   2f25c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2f260:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2f264:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2f268:	bl	2e07c <flatcc_emitter_copy_buffer@@Base+0x684>
   2f26c:	str	r0, [fp, #-52]	; 0xffffffcc
   2f270:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2f274:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2f278:	cmp	r2, r3
   2f27c:	bne	2f288 <flatcc_emitter_copy_buffer@@Base+0x1890>
   2f280:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2f284:	b	2f3e8 <flatcc_emitter_copy_buffer@@Base+0x19f0>
   2f288:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2f28c:	str	r3, [fp, #-16]
   2f290:	ldr	r3, [fp, #-16]
   2f294:	ldr	r4, [r3]
   2f298:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2f29c:	str	r3, [fp, #-24]	; 0xffffffe8
   2f2a0:	sub	r2, fp, #40	; 0x28
   2f2a4:	sub	r3, fp, #44	; 0x2c
   2f2a8:	str	r3, [sp, #4]
   2f2ac:	sub	r3, fp, #36	; 0x24
   2f2b0:	str	r3, [sp]
   2f2b4:	mov	r3, r2
   2f2b8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2f2bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2f2c0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2f2c4:	blx	r4
   2f2c8:	str	r0, [fp, #-52]	; 0xffffffcc
   2f2cc:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2f2d0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2f2d4:	cmp	r2, r3
   2f2d8:	bne	2f2e4 <flatcc_emitter_copy_buffer@@Base+0x18ec>
   2f2dc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2f2e0:	b	2f3e8 <flatcc_emitter_copy_buffer@@Base+0x19f0>
   2f2e4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2f2e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f2ec:	cmp	r2, r3
   2f2f0:	bne	2f310 <flatcc_emitter_copy_buffer@@Base+0x1918>
   2f2f4:	ldr	r3, [fp, #-16]
   2f2f8:	add	r3, r3, #4
   2f2fc:	str	r3, [fp, #-16]
   2f300:	ldr	r3, [fp, #-16]
   2f304:	ldr	r3, [r3]
   2f308:	cmp	r3, #0
   2f30c:	bne	2f290 <flatcc_emitter_copy_buffer@@Base+0x1898>
   2f310:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2f314:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2f318:	cmp	r2, r3
   2f31c:	bne	2f33c <flatcc_emitter_copy_buffer@@Base+0x1944>
   2f320:	mov	r3, #23
   2f324:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2f328:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2f32c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2f330:	bl	33258 <flatcc_json_parser_set_error@@Base>
   2f334:	mov	r3, r0
   2f338:	b	2f3e8 <flatcc_emitter_copy_buffer@@Base+0x19f0>
   2f33c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2f340:	add	r2, r3, #1
   2f344:	str	r2, [fp, #-20]	; 0xffffffec
   2f348:	cmp	r3, #0
   2f34c:	beq	2f37c <flatcc_emitter_copy_buffer@@Base+0x1984>
   2f350:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2f354:	ldr	r3, [r3, #12]
   2f358:	cmp	r3, #0
   2f35c:	beq	2f37c <flatcc_emitter_copy_buffer@@Base+0x1984>
   2f360:	mov	r3, #14
   2f364:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2f368:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2f36c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2f370:	bl	33258 <flatcc_json_parser_set_error@@Base>
   2f374:	mov	r3, r0
   2f378:	b	2f3e8 <flatcc_emitter_copy_buffer@@Base+0x19f0>
   2f37c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2f380:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   2f384:	sub	r1, fp, #25
   2f388:	str	r1, [sp, #8]
   2f38c:	strd	r2, [sp]
   2f390:	mov	r3, r0
   2f394:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2f398:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2f39c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2f3a0:	bl	2e6f8 <flatcc_emitter_copy_buffer@@Base+0xd00>
   2f3a4:	mov	r2, r0
   2f3a8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2f3ac:	cmp	r3, r2
   2f3b0:	bne	2f3bc <flatcc_emitter_copy_buffer@@Base+0x19c4>
   2f3b4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2f3b8:	b	2f3e8 <flatcc_emitter_copy_buffer@@Base+0x19f0>
   2f3bc:	ldr	r3, [fp, #4]
   2f3c0:	ldrb	r2, [r3]
   2f3c4:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   2f3c8:	add	r3, r2, r3
   2f3cc:	uxtb	r2, r3
   2f3d0:	ldr	r3, [fp, #4]
   2f3d4:	strb	r2, [r3]
   2f3d8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2f3dc:	cmp	r3, #0
   2f3e0:	bne	2f288 <flatcc_emitter_copy_buffer@@Base+0x1890>
   2f3e4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2f3e8:	mov	r0, r3
   2f3ec:	sub	sp, fp, #8
   2f3f0:	ldr	r4, [sp]
   2f3f4:	ldr	fp, [sp, #4]
   2f3f8:	add	sp, sp, #8
   2f3fc:	pop	{pc}		; (ldr pc, [sp], #4)
   2f400:	strd	r4, [sp, #-20]!	; 0xffffffec
   2f404:	str	r6, [sp, #8]
   2f408:	str	fp, [sp, #12]
   2f40c:	str	lr, [sp, #16]
   2f410:	add	fp, sp, #16
   2f414:	sub	sp, sp, #76	; 0x4c
   2f418:	str	r0, [fp, #-64]	; 0xffffffc0
   2f41c:	str	r1, [fp, #-68]	; 0xffffffbc
   2f420:	str	r2, [fp, #-72]	; 0xffffffb8
   2f424:	str	r3, [fp, #-76]	; 0xffffffb4
   2f428:	mov	r2, #0
   2f42c:	mov	r3, #0
   2f430:	strd	r2, [fp, #-44]	; 0xffffffd4
   2f434:	mov	r3, #0
   2f438:	str	r3, [fp, #-28]	; 0xffffffe4
   2f43c:	ldr	r1, [fp, #4]
   2f440:	mov	r2, #0
   2f444:	mov	r3, #0
   2f448:	strd	r2, [r1]
   2f44c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   2f450:	ldr	r1, [fp, #-68]	; 0xffffffbc
   2f454:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2f458:	bl	2e07c <flatcc_emitter_copy_buffer@@Base+0x684>
   2f45c:	str	r0, [fp, #-68]	; 0xffffffbc
   2f460:	ldr	r2, [fp, #-68]	; 0xffffffbc
   2f464:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2f468:	cmp	r2, r3
   2f46c:	bne	2f478 <flatcc_emitter_copy_buffer@@Base+0x1a80>
   2f470:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2f474:	b	2f5d8 <flatcc_emitter_copy_buffer@@Base+0x1be0>
   2f478:	ldr	r3, [fp, #-76]	; 0xffffffb4
   2f47c:	str	r3, [fp, #-24]	; 0xffffffe8
   2f480:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f484:	ldr	r6, [r3]
   2f488:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2f48c:	str	r3, [fp, #-32]	; 0xffffffe0
   2f490:	sub	r2, fp, #56	; 0x38
   2f494:	sub	r3, fp, #60	; 0x3c
   2f498:	str	r3, [sp, #4]
   2f49c:	sub	r3, fp, #52	; 0x34
   2f4a0:	str	r3, [sp]
   2f4a4:	mov	r3, r2
   2f4a8:	ldr	r2, [fp, #-72]	; 0xffffffb8
   2f4ac:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2f4b0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2f4b4:	blx	r6
   2f4b8:	str	r0, [fp, #-68]	; 0xffffffbc
   2f4bc:	ldr	r2, [fp, #-68]	; 0xffffffbc
   2f4c0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2f4c4:	cmp	r2, r3
   2f4c8:	bne	2f4d4 <flatcc_emitter_copy_buffer@@Base+0x1adc>
   2f4cc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2f4d0:	b	2f5d8 <flatcc_emitter_copy_buffer@@Base+0x1be0>
   2f4d4:	ldr	r2, [fp, #-68]	; 0xffffffbc
   2f4d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2f4dc:	cmp	r2, r3
   2f4e0:	bne	2f500 <flatcc_emitter_copy_buffer@@Base+0x1b08>
   2f4e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f4e8:	add	r3, r3, #4
   2f4ec:	str	r3, [fp, #-24]	; 0xffffffe8
   2f4f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f4f4:	ldr	r3, [r3]
   2f4f8:	cmp	r3, #0
   2f4fc:	bne	2f480 <flatcc_emitter_copy_buffer@@Base+0x1a88>
   2f500:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2f504:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2f508:	cmp	r2, r3
   2f50c:	bne	2f52c <flatcc_emitter_copy_buffer@@Base+0x1b34>
   2f510:	mov	r3, #23
   2f514:	ldr	r2, [fp, #-72]	; 0xffffffb8
   2f518:	ldr	r1, [fp, #-68]	; 0xffffffbc
   2f51c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2f520:	bl	33258 <flatcc_json_parser_set_error@@Base>
   2f524:	mov	r3, r0
   2f528:	b	2f5d8 <flatcc_emitter_copy_buffer@@Base+0x1be0>
   2f52c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2f530:	add	r2, r3, #1
   2f534:	str	r2, [fp, #-28]	; 0xffffffe4
   2f538:	cmp	r3, #0
   2f53c:	beq	2f56c <flatcc_emitter_copy_buffer@@Base+0x1b74>
   2f540:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2f544:	ldr	r3, [r3, #12]
   2f548:	cmp	r3, #0
   2f54c:	beq	2f56c <flatcc_emitter_copy_buffer@@Base+0x1b74>
   2f550:	mov	r3, #14
   2f554:	ldr	r2, [fp, #-72]	; 0xffffffb8
   2f558:	ldr	r1, [fp, #-68]	; 0xffffffbc
   2f55c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2f560:	bl	33258 <flatcc_json_parser_set_error@@Base>
   2f564:	mov	r3, r0
   2f568:	b	2f5d8 <flatcc_emitter_copy_buffer@@Base+0x1be0>
   2f56c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2f570:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   2f574:	sub	r1, fp, #44	; 0x2c
   2f578:	str	r1, [sp, #8]
   2f57c:	strd	r2, [sp]
   2f580:	mov	r3, r0
   2f584:	ldr	r2, [fp, #-72]	; 0xffffffb8
   2f588:	ldr	r1, [fp, #-68]	; 0xffffffbc
   2f58c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2f590:	bl	2e790 <flatcc_emitter_copy_buffer@@Base+0xd98>
   2f594:	mov	r2, r0
   2f598:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2f59c:	cmp	r3, r2
   2f5a0:	bne	2f5ac <flatcc_emitter_copy_buffer@@Base+0x1bb4>
   2f5a4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2f5a8:	b	2f5d8 <flatcc_emitter_copy_buffer@@Base+0x1be0>
   2f5ac:	ldr	r3, [fp, #4]
   2f5b0:	ldrd	r0, [r3]
   2f5b4:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   2f5b8:	adds	r4, r0, r2
   2f5bc:	adc	r5, r1, r3
   2f5c0:	ldr	r3, [fp, #4]
   2f5c4:	strd	r4, [r3]
   2f5c8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2f5cc:	cmp	r3, #0
   2f5d0:	bne	2f478 <flatcc_emitter_copy_buffer@@Base+0x1a80>
   2f5d4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2f5d8:	mov	r0, r3
   2f5dc:	sub	sp, fp, #16
   2f5e0:	ldrd	r4, [sp]
   2f5e4:	ldr	r6, [sp, #8]
   2f5e8:	ldr	fp, [sp, #12]
   2f5ec:	add	sp, sp, #16
   2f5f0:	pop	{pc}		; (ldr pc, [sp], #4)
   2f5f4:	str	r4, [sp, #-12]!
   2f5f8:	str	fp, [sp, #4]
   2f5fc:	str	lr, [sp, #8]
   2f600:	add	fp, sp, #8
   2f604:	sub	sp, sp, #68	; 0x44
   2f608:	str	r0, [fp, #-48]	; 0xffffffd0
   2f60c:	str	r1, [fp, #-52]	; 0xffffffcc
   2f610:	str	r2, [fp, #-56]	; 0xffffffc8
   2f614:	str	r3, [fp, #-60]	; 0xffffffc4
   2f618:	mov	r3, #0
   2f61c:	str	r3, [fp, #-28]	; 0xffffffe4
   2f620:	mov	r3, #0
   2f624:	str	r3, [fp, #-20]	; 0xffffffec
   2f628:	ldr	r3, [fp, #4]
   2f62c:	mov	r2, #0
   2f630:	str	r2, [r3]
   2f634:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2f638:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2f63c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2f640:	bl	2e07c <flatcc_emitter_copy_buffer@@Base+0x684>
   2f644:	str	r0, [fp, #-52]	; 0xffffffcc
   2f648:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2f64c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2f650:	cmp	r2, r3
   2f654:	bne	2f660 <flatcc_emitter_copy_buffer@@Base+0x1c68>
   2f658:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2f65c:	b	2f7bc <flatcc_emitter_copy_buffer@@Base+0x1dc4>
   2f660:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2f664:	str	r3, [fp, #-16]
   2f668:	ldr	r3, [fp, #-16]
   2f66c:	ldr	r4, [r3]
   2f670:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2f674:	str	r3, [fp, #-24]	; 0xffffffe8
   2f678:	sub	r2, fp, #40	; 0x28
   2f67c:	sub	r3, fp, #44	; 0x2c
   2f680:	str	r3, [sp, #4]
   2f684:	sub	r3, fp, #36	; 0x24
   2f688:	str	r3, [sp]
   2f68c:	mov	r3, r2
   2f690:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2f694:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2f698:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2f69c:	blx	r4
   2f6a0:	str	r0, [fp, #-52]	; 0xffffffcc
   2f6a4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2f6a8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2f6ac:	cmp	r2, r3
   2f6b0:	bne	2f6bc <flatcc_emitter_copy_buffer@@Base+0x1cc4>
   2f6b4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2f6b8:	b	2f7bc <flatcc_emitter_copy_buffer@@Base+0x1dc4>
   2f6bc:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2f6c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f6c4:	cmp	r2, r3
   2f6c8:	bne	2f6e8 <flatcc_emitter_copy_buffer@@Base+0x1cf0>
   2f6cc:	ldr	r3, [fp, #-16]
   2f6d0:	add	r3, r3, #4
   2f6d4:	str	r3, [fp, #-16]
   2f6d8:	ldr	r3, [fp, #-16]
   2f6dc:	ldr	r3, [r3]
   2f6e0:	cmp	r3, #0
   2f6e4:	bne	2f668 <flatcc_emitter_copy_buffer@@Base+0x1c70>
   2f6e8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2f6ec:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2f6f0:	cmp	r2, r3
   2f6f4:	bne	2f714 <flatcc_emitter_copy_buffer@@Base+0x1d1c>
   2f6f8:	mov	r3, #23
   2f6fc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2f700:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2f704:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2f708:	bl	33258 <flatcc_json_parser_set_error@@Base>
   2f70c:	mov	r3, r0
   2f710:	b	2f7bc <flatcc_emitter_copy_buffer@@Base+0x1dc4>
   2f714:	ldr	r3, [fp, #-20]	; 0xffffffec
   2f718:	add	r2, r3, #1
   2f71c:	str	r2, [fp, #-20]	; 0xffffffec
   2f720:	cmp	r3, #0
   2f724:	beq	2f754 <flatcc_emitter_copy_buffer@@Base+0x1d5c>
   2f728:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2f72c:	ldr	r3, [r3, #12]
   2f730:	cmp	r3, #0
   2f734:	beq	2f754 <flatcc_emitter_copy_buffer@@Base+0x1d5c>
   2f738:	mov	r3, #14
   2f73c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2f740:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2f744:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2f748:	bl	33258 <flatcc_json_parser_set_error@@Base>
   2f74c:	mov	r3, r0
   2f750:	b	2f7bc <flatcc_emitter_copy_buffer@@Base+0x1dc4>
   2f754:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2f758:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   2f75c:	sub	r1, fp, #28
   2f760:	str	r1, [sp, #8]
   2f764:	strd	r2, [sp]
   2f768:	mov	r3, r0
   2f76c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2f770:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2f774:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2f778:	bl	2e850 <flatcc_emitter_copy_buffer@@Base+0xe58>
   2f77c:	mov	r2, r0
   2f780:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2f784:	cmp	r3, r2
   2f788:	bne	2f794 <flatcc_emitter_copy_buffer@@Base+0x1d9c>
   2f78c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2f790:	b	2f7bc <flatcc_emitter_copy_buffer@@Base+0x1dc4>
   2f794:	ldr	r3, [fp, #4]
   2f798:	ldr	r2, [r3]
   2f79c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2f7a0:	add	r2, r2, r3
   2f7a4:	ldr	r3, [fp, #4]
   2f7a8:	str	r2, [r3]
   2f7ac:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2f7b0:	cmp	r3, #0
   2f7b4:	bne	2f660 <flatcc_emitter_copy_buffer@@Base+0x1c68>
   2f7b8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2f7bc:	mov	r0, r3
   2f7c0:	sub	sp, fp, #8
   2f7c4:	ldr	r4, [sp]
   2f7c8:	ldr	fp, [sp, #4]
   2f7cc:	add	sp, sp, #8
   2f7d0:	pop	{pc}		; (ldr pc, [sp], #4)
   2f7d4:	str	r4, [sp, #-12]!
   2f7d8:	str	fp, [sp, #4]
   2f7dc:	str	lr, [sp, #8]
   2f7e0:	add	fp, sp, #8
   2f7e4:	sub	sp, sp, #68	; 0x44
   2f7e8:	str	r0, [fp, #-48]	; 0xffffffd0
   2f7ec:	str	r1, [fp, #-52]	; 0xffffffcc
   2f7f0:	str	r2, [fp, #-56]	; 0xffffffc8
   2f7f4:	str	r3, [fp, #-60]	; 0xffffffc4
   2f7f8:	mov	r3, #0
   2f7fc:	strh	r3, [fp, #-26]	; 0xffffffe6
   2f800:	mov	r3, #0
   2f804:	str	r3, [fp, #-20]	; 0xffffffec
   2f808:	ldr	r3, [fp, #4]
   2f80c:	mov	r2, #0
   2f810:	strh	r2, [r3]
   2f814:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2f818:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2f81c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2f820:	bl	2e07c <flatcc_emitter_copy_buffer@@Base+0x684>
   2f824:	str	r0, [fp, #-52]	; 0xffffffcc
   2f828:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2f82c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2f830:	cmp	r2, r3
   2f834:	bne	2f840 <flatcc_emitter_copy_buffer@@Base+0x1e48>
   2f838:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2f83c:	b	2f9ac <flatcc_emitter_copy_buffer@@Base+0x1fb4>
   2f840:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2f844:	str	r3, [fp, #-16]
   2f848:	ldr	r3, [fp, #-16]
   2f84c:	ldr	r4, [r3]
   2f850:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2f854:	str	r3, [fp, #-24]	; 0xffffffe8
   2f858:	sub	r2, fp, #40	; 0x28
   2f85c:	sub	r3, fp, #44	; 0x2c
   2f860:	str	r3, [sp, #4]
   2f864:	sub	r3, fp, #36	; 0x24
   2f868:	str	r3, [sp]
   2f86c:	mov	r3, r2
   2f870:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2f874:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2f878:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2f87c:	blx	r4
   2f880:	str	r0, [fp, #-52]	; 0xffffffcc
   2f884:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2f888:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2f88c:	cmp	r2, r3
   2f890:	bne	2f89c <flatcc_emitter_copy_buffer@@Base+0x1ea4>
   2f894:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2f898:	b	2f9ac <flatcc_emitter_copy_buffer@@Base+0x1fb4>
   2f89c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2f8a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f8a4:	cmp	r2, r3
   2f8a8:	bne	2f8c8 <flatcc_emitter_copy_buffer@@Base+0x1ed0>
   2f8ac:	ldr	r3, [fp, #-16]
   2f8b0:	add	r3, r3, #4
   2f8b4:	str	r3, [fp, #-16]
   2f8b8:	ldr	r3, [fp, #-16]
   2f8bc:	ldr	r3, [r3]
   2f8c0:	cmp	r3, #0
   2f8c4:	bne	2f848 <flatcc_emitter_copy_buffer@@Base+0x1e50>
   2f8c8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2f8cc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2f8d0:	cmp	r2, r3
   2f8d4:	bne	2f8f4 <flatcc_emitter_copy_buffer@@Base+0x1efc>
   2f8d8:	mov	r3, #23
   2f8dc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2f8e0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2f8e4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2f8e8:	bl	33258 <flatcc_json_parser_set_error@@Base>
   2f8ec:	mov	r3, r0
   2f8f0:	b	2f9ac <flatcc_emitter_copy_buffer@@Base+0x1fb4>
   2f8f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   2f8f8:	add	r2, r3, #1
   2f8fc:	str	r2, [fp, #-20]	; 0xffffffec
   2f900:	cmp	r3, #0
   2f904:	beq	2f934 <flatcc_emitter_copy_buffer@@Base+0x1f3c>
   2f908:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2f90c:	ldr	r3, [r3, #12]
   2f910:	cmp	r3, #0
   2f914:	beq	2f934 <flatcc_emitter_copy_buffer@@Base+0x1f3c>
   2f918:	mov	r3, #14
   2f91c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2f920:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2f924:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2f928:	bl	33258 <flatcc_json_parser_set_error@@Base>
   2f92c:	mov	r3, r0
   2f930:	b	2f9ac <flatcc_emitter_copy_buffer@@Base+0x1fb4>
   2f934:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2f938:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   2f93c:	sub	r1, fp, #26
   2f940:	str	r1, [sp, #8]
   2f944:	strd	r2, [sp]
   2f948:	mov	r3, r0
   2f94c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2f950:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2f954:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2f958:	bl	2e918 <flatcc_emitter_copy_buffer@@Base+0xf20>
   2f95c:	mov	r2, r0
   2f960:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2f964:	cmp	r3, r2
   2f968:	bne	2f974 <flatcc_emitter_copy_buffer@@Base+0x1f7c>
   2f96c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2f970:	b	2f9ac <flatcc_emitter_copy_buffer@@Base+0x1fb4>
   2f974:	ldr	r3, [fp, #4]
   2f978:	ldrsh	r3, [r3]
   2f97c:	uxth	r2, r3
   2f980:	ldrsh	r3, [fp, #-26]	; 0xffffffe6
   2f984:	uxth	r3, r3
   2f988:	add	r3, r2, r3
   2f98c:	uxth	r3, r3
   2f990:	sxth	r2, r3
   2f994:	ldr	r3, [fp, #4]
   2f998:	strh	r2, [r3]
   2f99c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2f9a0:	cmp	r3, #0
   2f9a4:	bne	2f840 <flatcc_emitter_copy_buffer@@Base+0x1e48>
   2f9a8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2f9ac:	mov	r0, r3
   2f9b0:	sub	sp, fp, #8
   2f9b4:	ldr	r4, [sp]
   2f9b8:	ldr	fp, [sp, #4]
   2f9bc:	add	sp, sp, #8
   2f9c0:	pop	{pc}		; (ldr pc, [sp], #4)
   2f9c4:	str	r4, [sp, #-12]!
   2f9c8:	str	fp, [sp, #4]
   2f9cc:	str	lr, [sp, #8]
   2f9d0:	add	fp, sp, #8
   2f9d4:	sub	sp, sp, #68	; 0x44
   2f9d8:	str	r0, [fp, #-48]	; 0xffffffd0
   2f9dc:	str	r1, [fp, #-52]	; 0xffffffcc
   2f9e0:	str	r2, [fp, #-56]	; 0xffffffc8
   2f9e4:	str	r3, [fp, #-60]	; 0xffffffc4
   2f9e8:	mov	r3, #0
   2f9ec:	strb	r3, [fp, #-25]	; 0xffffffe7
   2f9f0:	mov	r3, #0
   2f9f4:	str	r3, [fp, #-20]	; 0xffffffec
   2f9f8:	ldr	r3, [fp, #4]
   2f9fc:	mov	r2, #0
   2fa00:	strb	r2, [r3]
   2fa04:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2fa08:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2fa0c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2fa10:	bl	2e07c <flatcc_emitter_copy_buffer@@Base+0x684>
   2fa14:	str	r0, [fp, #-52]	; 0xffffffcc
   2fa18:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2fa1c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2fa20:	cmp	r2, r3
   2fa24:	bne	2fa30 <flatcc_emitter_copy_buffer@@Base+0x2038>
   2fa28:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2fa2c:	b	2fb9c <flatcc_emitter_copy_buffer@@Base+0x21a4>
   2fa30:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2fa34:	str	r3, [fp, #-16]
   2fa38:	ldr	r3, [fp, #-16]
   2fa3c:	ldr	r4, [r3]
   2fa40:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2fa44:	str	r3, [fp, #-24]	; 0xffffffe8
   2fa48:	sub	r2, fp, #40	; 0x28
   2fa4c:	sub	r3, fp, #44	; 0x2c
   2fa50:	str	r3, [sp, #4]
   2fa54:	sub	r3, fp, #36	; 0x24
   2fa58:	str	r3, [sp]
   2fa5c:	mov	r3, r2
   2fa60:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2fa64:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2fa68:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2fa6c:	blx	r4
   2fa70:	str	r0, [fp, #-52]	; 0xffffffcc
   2fa74:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2fa78:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2fa7c:	cmp	r2, r3
   2fa80:	bne	2fa8c <flatcc_emitter_copy_buffer@@Base+0x2094>
   2fa84:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2fa88:	b	2fb9c <flatcc_emitter_copy_buffer@@Base+0x21a4>
   2fa8c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2fa90:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2fa94:	cmp	r2, r3
   2fa98:	bne	2fab8 <flatcc_emitter_copy_buffer@@Base+0x20c0>
   2fa9c:	ldr	r3, [fp, #-16]
   2faa0:	add	r3, r3, #4
   2faa4:	str	r3, [fp, #-16]
   2faa8:	ldr	r3, [fp, #-16]
   2faac:	ldr	r3, [r3]
   2fab0:	cmp	r3, #0
   2fab4:	bne	2fa38 <flatcc_emitter_copy_buffer@@Base+0x2040>
   2fab8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2fabc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2fac0:	cmp	r2, r3
   2fac4:	bne	2fae4 <flatcc_emitter_copy_buffer@@Base+0x20ec>
   2fac8:	mov	r3, #23
   2facc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2fad0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2fad4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2fad8:	bl	33258 <flatcc_json_parser_set_error@@Base>
   2fadc:	mov	r3, r0
   2fae0:	b	2fb9c <flatcc_emitter_copy_buffer@@Base+0x21a4>
   2fae4:	ldr	r3, [fp, #-20]	; 0xffffffec
   2fae8:	add	r2, r3, #1
   2faec:	str	r2, [fp, #-20]	; 0xffffffec
   2faf0:	cmp	r3, #0
   2faf4:	beq	2fb24 <flatcc_emitter_copy_buffer@@Base+0x212c>
   2faf8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2fafc:	ldr	r3, [r3, #12]
   2fb00:	cmp	r3, #0
   2fb04:	beq	2fb24 <flatcc_emitter_copy_buffer@@Base+0x212c>
   2fb08:	mov	r3, #14
   2fb0c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2fb10:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2fb14:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2fb18:	bl	33258 <flatcc_json_parser_set_error@@Base>
   2fb1c:	mov	r3, r0
   2fb20:	b	2fb9c <flatcc_emitter_copy_buffer@@Base+0x21a4>
   2fb24:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2fb28:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   2fb2c:	sub	r1, fp, #25
   2fb30:	str	r1, [sp, #8]
   2fb34:	strd	r2, [sp]
   2fb38:	mov	r3, r0
   2fb3c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2fb40:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2fb44:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2fb48:	bl	2e9e4 <flatcc_emitter_copy_buffer@@Base+0xfec>
   2fb4c:	mov	r2, r0
   2fb50:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2fb54:	cmp	r3, r2
   2fb58:	bne	2fb64 <flatcc_emitter_copy_buffer@@Base+0x216c>
   2fb5c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2fb60:	b	2fb9c <flatcc_emitter_copy_buffer@@Base+0x21a4>
   2fb64:	ldr	r3, [fp, #4]
   2fb68:	ldrsb	r3, [r3]
   2fb6c:	uxtb	r2, r3
   2fb70:	ldrsb	r3, [fp, #-25]	; 0xffffffe7
   2fb74:	uxtb	r3, r3
   2fb78:	add	r3, r2, r3
   2fb7c:	uxtb	r3, r3
   2fb80:	sxtb	r2, r3
   2fb84:	ldr	r3, [fp, #4]
   2fb88:	strb	r2, [r3]
   2fb8c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2fb90:	cmp	r3, #0
   2fb94:	bne	2fa30 <flatcc_emitter_copy_buffer@@Base+0x2038>
   2fb98:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2fb9c:	mov	r0, r3
   2fba0:	sub	sp, fp, #8
   2fba4:	ldr	r4, [sp]
   2fba8:	ldr	fp, [sp, #4]
   2fbac:	add	sp, sp, #8
   2fbb0:	pop	{pc}		; (ldr pc, [sp], #4)
   2fbb4:	str	r4, [sp, #-12]!
   2fbb8:	str	fp, [sp, #4]
   2fbbc:	str	lr, [sp, #8]
   2fbc0:	add	fp, sp, #8
   2fbc4:	sub	sp, sp, #68	; 0x44
   2fbc8:	str	r0, [fp, #-48]	; 0xffffffd0
   2fbcc:	str	r1, [fp, #-52]	; 0xffffffcc
   2fbd0:	str	r2, [fp, #-56]	; 0xffffffc8
   2fbd4:	str	r3, [fp, #-60]	; 0xffffffc4
   2fbd8:	mov	r3, #0
   2fbdc:	strb	r3, [fp, #-25]	; 0xffffffe7
   2fbe0:	mov	r3, #0
   2fbe4:	str	r3, [fp, #-20]	; 0xffffffec
   2fbe8:	ldr	r3, [fp, #4]
   2fbec:	mov	r2, #0
   2fbf0:	strb	r2, [r3]
   2fbf4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2fbf8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2fbfc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2fc00:	bl	2e07c <flatcc_emitter_copy_buffer@@Base+0x684>
   2fc04:	str	r0, [fp, #-52]	; 0xffffffcc
   2fc08:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2fc0c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2fc10:	cmp	r2, r3
   2fc14:	bne	2fc20 <flatcc_emitter_copy_buffer@@Base+0x2228>
   2fc18:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2fc1c:	b	2fd80 <flatcc_emitter_copy_buffer@@Base+0x2388>
   2fc20:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2fc24:	str	r3, [fp, #-16]
   2fc28:	ldr	r3, [fp, #-16]
   2fc2c:	ldr	r4, [r3]
   2fc30:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2fc34:	str	r3, [fp, #-24]	; 0xffffffe8
   2fc38:	sub	r2, fp, #40	; 0x28
   2fc3c:	sub	r3, fp, #44	; 0x2c
   2fc40:	str	r3, [sp, #4]
   2fc44:	sub	r3, fp, #36	; 0x24
   2fc48:	str	r3, [sp]
   2fc4c:	mov	r3, r2
   2fc50:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2fc54:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2fc58:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2fc5c:	blx	r4
   2fc60:	str	r0, [fp, #-52]	; 0xffffffcc
   2fc64:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2fc68:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2fc6c:	cmp	r2, r3
   2fc70:	bne	2fc7c <flatcc_emitter_copy_buffer@@Base+0x2284>
   2fc74:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2fc78:	b	2fd80 <flatcc_emitter_copy_buffer@@Base+0x2388>
   2fc7c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2fc80:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2fc84:	cmp	r2, r3
   2fc88:	bne	2fca8 <flatcc_emitter_copy_buffer@@Base+0x22b0>
   2fc8c:	ldr	r3, [fp, #-16]
   2fc90:	add	r3, r3, #4
   2fc94:	str	r3, [fp, #-16]
   2fc98:	ldr	r3, [fp, #-16]
   2fc9c:	ldr	r3, [r3]
   2fca0:	cmp	r3, #0
   2fca4:	bne	2fc28 <flatcc_emitter_copy_buffer@@Base+0x2230>
   2fca8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2fcac:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2fcb0:	cmp	r2, r3
   2fcb4:	bne	2fcd4 <flatcc_emitter_copy_buffer@@Base+0x22dc>
   2fcb8:	mov	r3, #23
   2fcbc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2fcc0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2fcc4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2fcc8:	bl	33258 <flatcc_json_parser_set_error@@Base>
   2fccc:	mov	r3, r0
   2fcd0:	b	2fd80 <flatcc_emitter_copy_buffer@@Base+0x2388>
   2fcd4:	ldr	r3, [fp, #-20]	; 0xffffffec
   2fcd8:	add	r2, r3, #1
   2fcdc:	str	r2, [fp, #-20]	; 0xffffffec
   2fce0:	cmp	r3, #0
   2fce4:	beq	2fd14 <flatcc_emitter_copy_buffer@@Base+0x231c>
   2fce8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2fcec:	ldr	r3, [r3, #12]
   2fcf0:	cmp	r3, #0
   2fcf4:	beq	2fd14 <flatcc_emitter_copy_buffer@@Base+0x231c>
   2fcf8:	mov	r3, #14
   2fcfc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2fd00:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2fd04:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2fd08:	bl	33258 <flatcc_json_parser_set_error@@Base>
   2fd0c:	mov	r3, r0
   2fd10:	b	2fd80 <flatcc_emitter_copy_buffer@@Base+0x2388>
   2fd14:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2fd18:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   2fd1c:	sub	r1, fp, #25
   2fd20:	str	r1, [sp, #8]
   2fd24:	strd	r2, [sp]
   2fd28:	mov	r3, r0
   2fd2c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2fd30:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2fd34:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2fd38:	bl	2e530 <flatcc_emitter_copy_buffer@@Base+0xb38>
   2fd3c:	mov	r2, r0
   2fd40:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2fd44:	cmp	r3, r2
   2fd48:	bne	2fd54 <flatcc_emitter_copy_buffer@@Base+0x235c>
   2fd4c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2fd50:	b	2fd80 <flatcc_emitter_copy_buffer@@Base+0x2388>
   2fd54:	ldr	r3, [fp, #4]
   2fd58:	ldrb	r2, [r3]
   2fd5c:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   2fd60:	add	r3, r2, r3
   2fd64:	uxtb	r2, r3
   2fd68:	ldr	r3, [fp, #4]
   2fd6c:	strb	r2, [r3]
   2fd70:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2fd74:	cmp	r3, #0
   2fd78:	bne	2fc20 <flatcc_emitter_copy_buffer@@Base+0x2228>
   2fd7c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2fd80:	mov	r0, r3
   2fd84:	sub	sp, fp, #8
   2fd88:	ldr	r4, [sp]
   2fd8c:	ldr	fp, [sp, #4]
   2fd90:	add	sp, sp, #8
   2fd94:	pop	{pc}		; (ldr pc, [sp], #4)
   2fd98:	str	r4, [sp, #-12]!
   2fd9c:	str	fp, [sp, #4]
   2fda0:	str	lr, [sp, #8]
   2fda4:	add	fp, sp, #8
   2fda8:	sub	sp, sp, #68	; 0x44
   2fdac:	str	r0, [fp, #-48]	; 0xffffffd0
   2fdb0:	str	r1, [fp, #-52]	; 0xffffffcc
   2fdb4:	str	r2, [fp, #-56]	; 0xffffffc8
   2fdb8:	str	r3, [fp, #-60]	; 0xffffffc4
   2fdbc:	mov	r3, #0
   2fdc0:	str	r3, [fp, #-28]	; 0xffffffe4
   2fdc4:	mov	r3, #0
   2fdc8:	str	r3, [fp, #-20]	; 0xffffffec
   2fdcc:	ldr	r3, [fp, #4]
   2fdd0:	mov	r2, #0
   2fdd4:	str	r2, [r3]
   2fdd8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2fddc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2fde0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2fde4:	bl	2e07c <flatcc_emitter_copy_buffer@@Base+0x684>
   2fde8:	str	r0, [fp, #-52]	; 0xffffffcc
   2fdec:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2fdf0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2fdf4:	cmp	r2, r3
   2fdf8:	bne	2fe04 <flatcc_emitter_copy_buffer@@Base+0x240c>
   2fdfc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2fe00:	b	2ff60 <flatcc_emitter_copy_buffer@@Base+0x2568>
   2fe04:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2fe08:	str	r3, [fp, #-16]
   2fe0c:	ldr	r3, [fp, #-16]
   2fe10:	ldr	r4, [r3]
   2fe14:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2fe18:	str	r3, [fp, #-24]	; 0xffffffe8
   2fe1c:	sub	r2, fp, #40	; 0x28
   2fe20:	sub	r3, fp, #44	; 0x2c
   2fe24:	str	r3, [sp, #4]
   2fe28:	sub	r3, fp, #36	; 0x24
   2fe2c:	str	r3, [sp]
   2fe30:	mov	r3, r2
   2fe34:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2fe38:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2fe3c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2fe40:	blx	r4
   2fe44:	str	r0, [fp, #-52]	; 0xffffffcc
   2fe48:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2fe4c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2fe50:	cmp	r2, r3
   2fe54:	bne	2fe60 <flatcc_emitter_copy_buffer@@Base+0x2468>
   2fe58:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2fe5c:	b	2ff60 <flatcc_emitter_copy_buffer@@Base+0x2568>
   2fe60:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2fe64:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2fe68:	cmp	r2, r3
   2fe6c:	bne	2fe8c <flatcc_emitter_copy_buffer@@Base+0x2494>
   2fe70:	ldr	r3, [fp, #-16]
   2fe74:	add	r3, r3, #4
   2fe78:	str	r3, [fp, #-16]
   2fe7c:	ldr	r3, [fp, #-16]
   2fe80:	ldr	r3, [r3]
   2fe84:	cmp	r3, #0
   2fe88:	bne	2fe0c <flatcc_emitter_copy_buffer@@Base+0x2414>
   2fe8c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2fe90:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2fe94:	cmp	r2, r3
   2fe98:	bne	2feb8 <flatcc_emitter_copy_buffer@@Base+0x24c0>
   2fe9c:	mov	r3, #23
   2fea0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2fea4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2fea8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2feac:	bl	33258 <flatcc_json_parser_set_error@@Base>
   2feb0:	mov	r3, r0
   2feb4:	b	2ff60 <flatcc_emitter_copy_buffer@@Base+0x2568>
   2feb8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2febc:	add	r2, r3, #1
   2fec0:	str	r2, [fp, #-20]	; 0xffffffec
   2fec4:	cmp	r3, #0
   2fec8:	beq	2fef8 <flatcc_emitter_copy_buffer@@Base+0x2500>
   2fecc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2fed0:	ldr	r3, [r3, #12]
   2fed4:	cmp	r3, #0
   2fed8:	beq	2fef8 <flatcc_emitter_copy_buffer@@Base+0x2500>
   2fedc:	mov	r3, #14
   2fee0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2fee4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2fee8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2feec:	bl	33258 <flatcc_json_parser_set_error@@Base>
   2fef0:	mov	r3, r0
   2fef4:	b	2ff60 <flatcc_emitter_copy_buffer@@Base+0x2568>
   2fef8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2fefc:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   2ff00:	sub	r1, fp, #28
   2ff04:	str	r1, [sp, #8]
   2ff08:	strd	r2, [sp]
   2ff0c:	mov	r3, r0
   2ff10:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2ff14:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2ff18:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2ff1c:	bl	2eaa8 <flatcc_emitter_copy_buffer@@Base+0x10b0>
   2ff20:	mov	r2, r0
   2ff24:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2ff28:	cmp	r3, r2
   2ff2c:	bne	2ff38 <flatcc_emitter_copy_buffer@@Base+0x2540>
   2ff30:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2ff34:	b	2ff60 <flatcc_emitter_copy_buffer@@Base+0x2568>
   2ff38:	ldr	r3, [fp, #4]
   2ff3c:	vldr	s14, [r3]
   2ff40:	vldr	s15, [fp, #-28]	; 0xffffffe4
   2ff44:	vadd.f32	s15, s14, s15
   2ff48:	ldr	r3, [fp, #4]
   2ff4c:	vstr	s15, [r3]
   2ff50:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2ff54:	cmp	r3, #0
   2ff58:	bne	2fe04 <flatcc_emitter_copy_buffer@@Base+0x240c>
   2ff5c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2ff60:	mov	r0, r3
   2ff64:	sub	sp, fp, #8
   2ff68:	ldr	r4, [sp]
   2ff6c:	ldr	fp, [sp, #4]
   2ff70:	add	sp, sp, #8
   2ff74:	pop	{pc}		; (ldr pc, [sp], #4)
   2ff78:	str	r4, [sp, #-12]!
   2ff7c:	str	fp, [sp, #4]
   2ff80:	str	lr, [sp, #8]
   2ff84:	add	fp, sp, #8
   2ff88:	sub	sp, sp, #76	; 0x4c
   2ff8c:	str	r0, [fp, #-56]	; 0xffffffc8
   2ff90:	str	r1, [fp, #-60]	; 0xffffffc4
   2ff94:	str	r2, [fp, #-64]	; 0xffffffc0
   2ff98:	str	r3, [fp, #-68]	; 0xffffffbc
   2ff9c:	mov	r2, #0
   2ffa0:	mov	r3, #0
   2ffa4:	strd	r2, [fp, #-36]	; 0xffffffdc
   2ffa8:	mov	r3, #0
   2ffac:	str	r3, [fp, #-20]	; 0xffffffec
   2ffb0:	ldr	r1, [fp, #4]
   2ffb4:	mov	r2, #0
   2ffb8:	mov	r3, #0
   2ffbc:	strd	r2, [r1]
   2ffc0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   2ffc4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   2ffc8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2ffcc:	bl	2e07c <flatcc_emitter_copy_buffer@@Base+0x684>
   2ffd0:	str	r0, [fp, #-60]	; 0xffffffc4
   2ffd4:	ldr	r2, [fp, #-60]	; 0xffffffc4
   2ffd8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2ffdc:	cmp	r2, r3
   2ffe0:	bne	2ffec <flatcc_emitter_copy_buffer@@Base+0x25f4>
   2ffe4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2ffe8:	b	30148 <flatcc_emitter_copy_buffer@@Base+0x2750>
   2ffec:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2fff0:	str	r3, [fp, #-16]
   2fff4:	ldr	r3, [fp, #-16]
   2fff8:	ldr	r4, [r3]
   2fffc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   30000:	str	r3, [fp, #-24]	; 0xffffffe8
   30004:	sub	r2, fp, #48	; 0x30
   30008:	sub	r3, fp, #52	; 0x34
   3000c:	str	r3, [sp, #4]
   30010:	sub	r3, fp, #44	; 0x2c
   30014:	str	r3, [sp]
   30018:	mov	r3, r2
   3001c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   30020:	ldr	r1, [fp, #-24]	; 0xffffffe8
   30024:	ldr	r0, [fp, #-56]	; 0xffffffc8
   30028:	blx	r4
   3002c:	str	r0, [fp, #-60]	; 0xffffffc4
   30030:	ldr	r2, [fp, #-60]	; 0xffffffc4
   30034:	ldr	r3, [fp, #-64]	; 0xffffffc0
   30038:	cmp	r2, r3
   3003c:	bne	30048 <flatcc_emitter_copy_buffer@@Base+0x2650>
   30040:	ldr	r3, [fp, #-60]	; 0xffffffc4
   30044:	b	30148 <flatcc_emitter_copy_buffer@@Base+0x2750>
   30048:	ldr	r2, [fp, #-60]	; 0xffffffc4
   3004c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30050:	cmp	r2, r3
   30054:	bne	30074 <flatcc_emitter_copy_buffer@@Base+0x267c>
   30058:	ldr	r3, [fp, #-16]
   3005c:	add	r3, r3, #4
   30060:	str	r3, [fp, #-16]
   30064:	ldr	r3, [fp, #-16]
   30068:	ldr	r3, [r3]
   3006c:	cmp	r3, #0
   30070:	bne	2fff4 <flatcc_emitter_copy_buffer@@Base+0x25fc>
   30074:	ldr	r2, [fp, #-24]	; 0xffffffe8
   30078:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3007c:	cmp	r2, r3
   30080:	bne	300a0 <flatcc_emitter_copy_buffer@@Base+0x26a8>
   30084:	mov	r3, #23
   30088:	ldr	r2, [fp, #-64]	; 0xffffffc0
   3008c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   30090:	ldr	r0, [fp, #-56]	; 0xffffffc8
   30094:	bl	33258 <flatcc_json_parser_set_error@@Base>
   30098:	mov	r3, r0
   3009c:	b	30148 <flatcc_emitter_copy_buffer@@Base+0x2750>
   300a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   300a4:	add	r2, r3, #1
   300a8:	str	r2, [fp, #-20]	; 0xffffffec
   300ac:	cmp	r3, #0
   300b0:	beq	300e0 <flatcc_emitter_copy_buffer@@Base+0x26e8>
   300b4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   300b8:	ldr	r3, [r3, #12]
   300bc:	cmp	r3, #0
   300c0:	beq	300e0 <flatcc_emitter_copy_buffer@@Base+0x26e8>
   300c4:	mov	r3, #14
   300c8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   300cc:	ldr	r1, [fp, #-60]	; 0xffffffc4
   300d0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   300d4:	bl	33258 <flatcc_json_parser_set_error@@Base>
   300d8:	mov	r3, r0
   300dc:	b	30148 <flatcc_emitter_copy_buffer@@Base+0x2750>
   300e0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   300e4:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   300e8:	sub	r1, fp, #36	; 0x24
   300ec:	str	r1, [sp, #8]
   300f0:	strd	r2, [sp]
   300f4:	mov	r3, r0
   300f8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   300fc:	ldr	r1, [fp, #-60]	; 0xffffffc4
   30100:	ldr	r0, [fp, #-56]	; 0xffffffc8
   30104:	bl	2eb14 <flatcc_emitter_copy_buffer@@Base+0x111c>
   30108:	mov	r2, r0
   3010c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   30110:	cmp	r3, r2
   30114:	bne	30120 <flatcc_emitter_copy_buffer@@Base+0x2728>
   30118:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3011c:	b	30148 <flatcc_emitter_copy_buffer@@Base+0x2750>
   30120:	ldr	r3, [fp, #4]
   30124:	vldr	d6, [r3]
   30128:	vldr	d7, [fp, #-36]	; 0xffffffdc
   3012c:	vadd.f64	d7, d6, d7
   30130:	ldr	r3, [fp, #4]
   30134:	vstr	d7, [r3]
   30138:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3013c:	cmp	r3, #0
   30140:	bne	2ffec <flatcc_emitter_copy_buffer@@Base+0x25f4>
   30144:	ldr	r3, [fp, #-60]	; 0xffffffc4
   30148:	mov	r0, r3
   3014c:	sub	sp, fp, #8
   30150:	ldr	r4, [sp]
   30154:	ldr	fp, [sp, #4]
   30158:	add	sp, sp, #8
   3015c:	pop	{pc}		; (ldr pc, [sp], #4)
   30160:	push	{fp}		; (str fp, [sp, #-4]!)
   30164:	add	fp, sp, #0
   30168:	sub	sp, sp, #20
   3016c:	vstr	d0, [fp, #-20]	; 0xffffffec
   30170:	ldrd	r2, [fp, #-20]	; 0xffffffec
   30174:	strd	r2, [fp, #-12]
   30178:	ldrd	r2, [fp, #-12]
   3017c:	mov	r0, r2
   30180:	mov	r1, r3
   30184:	add	sp, fp, #0
   30188:	pop	{fp}		; (ldr fp, [sp], #4)
   3018c:	bx	lr
   30190:	push	{fp}		; (str fp, [sp, #-4]!)
   30194:	add	fp, sp, #0
   30198:	sub	sp, sp, #20
   3019c:	strd	r0, [fp, #-20]	; 0xffffffec
   301a0:	ldrd	r2, [fp, #-20]	; 0xffffffec
   301a4:	strd	r2, [fp, #-12]
   301a8:	ldrd	r2, [fp, #-12]
   301ac:	vmov	d7, r2, r3
   301b0:	vmov.f64	d0, d7
   301b4:	add	sp, fp, #0
   301b8:	pop	{fp}		; (ldr fp, [sp], #4)
   301bc:	bx	lr
   301c0:	push	{fp}		; (str fp, [sp, #-4]!)
   301c4:	add	fp, sp, #0
   301c8:	sub	sp, sp, #20
   301cc:	vstr	d0, [fp, #-20]	; 0xffffffec
   301d0:	vldr	d7, [fp, #-20]	; 0xffffffec
   301d4:	vcvt.s32.f64	s15, d7
   301d8:	vmov	r3, s15
   301dc:	str	r3, [fp, #-8]
   301e0:	vldr	d7, [fp, #-20]	; 0xffffffec
   301e4:	vcmpe.f64	d7, #0.0
   301e8:	vmrs	APSR_nzcv, fpscr
   301ec:	bpl	301f8 <flatcc_emitter_copy_buffer@@Base+0x2800>
   301f0:	ldr	r3, [fp, #-8]
   301f4:	b	30228 <flatcc_emitter_copy_buffer@@Base+0x2830>
   301f8:	ldr	r3, [fp, #-8]
   301fc:	vmov	s15, r3
   30200:	vcvt.f64.s32	d7, s15
   30204:	vldr	d6, [fp, #-20]	; 0xffffffec
   30208:	vsub.f64	d7, d6, d7
   3020c:	vcmp.f64	d7, #0.0
   30210:	vmrs	APSR_nzcv, fpscr
   30214:	beq	30224 <flatcc_emitter_copy_buffer@@Base+0x282c>
   30218:	ldr	r3, [fp, #-8]
   3021c:	add	r3, r3, #1
   30220:	b	30228 <flatcc_emitter_copy_buffer@@Base+0x2830>
   30224:	ldr	r3, [fp, #-8]
   30228:	mov	r0, r3
   3022c:	add	sp, fp, #0
   30230:	pop	{fp}		; (ldr fp, [sp], #4)
   30234:	bx	lr
   30238:	str	fp, [sp, #-8]!
   3023c:	str	lr, [sp, #4]
   30240:	add	fp, sp, #4
   30244:	sub	sp, sp, #16
   30248:	str	r0, [fp, #-16]
   3024c:	str	r1, [fp, #-20]	; 0xffffffec
   30250:	ldr	r3, [fp, #-16]
   30254:	add	r3, r3, #63	; 0x3f
   30258:	vmov	s15, r3
   3025c:	vcvt.f64.s32	d7, s15
   30260:	vldr	d6, [pc, #176]	; 30318 <flatcc_emitter_copy_buffer@@Base+0x2920>
   30264:	vmul.f64	d7, d7, d6
   30268:	vmov.f64	d0, d7
   3026c:	bl	301c0 <flatcc_emitter_copy_buffer@@Base+0x27c8>
   30270:	str	r0, [fp, #-8]
   30274:	ldr	r3, [fp, #-8]
   30278:	add	r3, r3, #344	; 0x158
   3027c:	add	r3, r3, #3
   30280:	add	r2, r3, #7
   30284:	cmp	r3, #0
   30288:	movlt	r3, r2
   3028c:	movge	r3, r3
   30290:	asr	r3, r3, #3
   30294:	add	r3, r3, #1
   30298:	str	r3, [fp, #-12]
   3029c:	ldr	r2, [pc, #124]	; 30320 <flatcc_emitter_copy_buffer@@Base+0x2928>
   302a0:	add	r2, pc, r2
   302a4:	ldr	r3, [fp, #-12]
   302a8:	lsl	r3, r3, #4
   302ac:	add	r3, r2, r3
   302b0:	ldrd	r2, [r3]
   302b4:	ldr	r1, [fp, #-20]	; 0xffffffec
   302b8:	strd	r2, [r1]
   302bc:	ldr	r2, [pc, #96]	; 30324 <flatcc_emitter_copy_buffer@@Base+0x292c>
   302c0:	add	r2, pc, r2
   302c4:	ldr	r3, [fp, #-12]
   302c8:	lsl	r3, r3, #4
   302cc:	add	r3, r2, r3
   302d0:	add	r3, r3, #8
   302d4:	ldrsh	r3, [r3]
   302d8:	mov	r2, r3
   302dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   302e0:	str	r2, [r3, #8]
   302e4:	ldr	r2, [pc, #60]	; 30328 <flatcc_emitter_copy_buffer@@Base+0x2930>
   302e8:	add	r2, pc, r2
   302ec:	ldr	r3, [fp, #-12]
   302f0:	lsl	r3, r3, #4
   302f4:	add	r3, r2, r3
   302f8:	add	r3, r3, #10
   302fc:	ldrsh	r3, [r3]
   30300:	mov	r0, r3
   30304:	sub	sp, fp, #4
   30308:	ldr	fp, [sp]
   3030c:	add	sp, sp, #4
   30310:	pop	{pc}		; (ldr pc, [sp], #4)
   30314:	nop	{0}
   30318:			; <UNDEFINED> instruction: 0x509f79fe
   3031c:	svccc	0x00d34413
   30320:	muleq	r0, r8, r8
   30324:	andeq	r7, r0, r8, ror r8
   30328:	andeq	r7, r0, r0, asr r8
   3032c:	sub	sp, sp, #8
   30330:	strd	r4, [sp, #-16]!
   30334:	str	fp, [sp, #8]
   30338:	str	lr, [sp, #12]
   3033c:	add	fp, sp, #12
   30340:	sub	sp, sp, #24
   30344:	str	r0, [fp, #-32]	; 0xffffffe0
   30348:	add	r1, fp, #4
   3034c:	stm	r1, {r2, r3}
   30350:	ldrd	r0, [fp, #4]
   30354:	ldrd	r2, [fp, #20]
   30358:	subs	r4, r0, r2
   3035c:	sbc	r5, r1, r3
   30360:	strd	r4, [fp, #-28]	; 0xffffffe4
   30364:	ldr	r3, [fp, #12]
   30368:	str	r3, [fp, #-20]	; 0xffffffec
   3036c:	ldr	r2, [fp, #12]
   30370:	ldr	r3, [fp, #28]
   30374:	cmp	r2, r3
   30378:	bne	30390 <flatcc_emitter_copy_buffer@@Base+0x2998>
   3037c:	ldrd	r0, [fp, #4]
   30380:	ldrd	r2, [fp, #20]
   30384:	cmp	r1, r3
   30388:	cmpeq	r0, r2
   3038c:	bcs	303b0 <flatcc_emitter_copy_buffer@@Base+0x29b8>
   30390:	ldr	r3, [pc, #84]	; 303ec <flatcc_emitter_copy_buffer@@Base+0x29f4>
   30394:	add	r3, pc, r3
   30398:	mov	r2, #239	; 0xef
   3039c:	ldr	r1, [pc, #76]	; 303f0 <flatcc_emitter_copy_buffer@@Base+0x29f8>
   303a0:	add	r1, pc, r1
   303a4:	ldr	r0, [pc, #72]	; 303f4 <flatcc_emitter_copy_buffer@@Base+0x29fc>
   303a8:	add	r0, pc, r0
   303ac:	bl	126ac <__assert_fail@plt>
   303b0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   303b4:	mov	r0, r3
   303b8:	sub	r1, fp, #28
   303bc:	ldrd	r2, [r1]
   303c0:	strd	r2, [r0]
   303c4:	ldrd	r2, [r1, #8]
   303c8:	strd	r2, [r0, #8]
   303cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   303d0:	sub	sp, fp, #12
   303d4:	ldrd	r4, [sp]
   303d8:	ldr	fp, [sp, #8]
   303dc:	ldr	lr, [sp, #12]
   303e0:	add	sp, sp, #16
   303e4:	add	sp, sp, #8
   303e8:	bx	lr
   303ec:	andeq	r8, r0, ip, lsl #6
   303f0:	andeq	r7, r0, r8, lsl #26
   303f4:	andeq	r7, r0, r0, ror sp
   303f8:	sub	sp, sp, #8
   303fc:	strd	r4, [sp, #-32]!	; 0xffffffe0
   30400:	strd	r6, [sp, #8]
   30404:	strd	r8, [sp, #16]
   30408:	str	fp, [sp, #24]
   3040c:	str	lr, [sp, #28]
   30410:	add	fp, sp, #28
   30414:	sub	sp, sp, #152	; 0x98
   30418:	str	r0, [fp, #-120]	; 0xffffff88
   3041c:	add	r1, fp, #4
   30420:	stm	r1, {r2, r3}
   30424:	ldrd	r2, [fp, #4]
   30428:	mov	r0, #0
   3042c:	mov	r1, #0
   30430:	mov	r0, r3
   30434:	mov	r1, #0
   30438:	strd	r0, [fp, #-36]	; 0xffffffdc
   3043c:	ldrd	r0, [fp, #4]
   30440:	mvn	r2, #0
   30444:	mov	r3, #0
   30448:	and	r4, r0, r2
   3044c:	and	r5, r1, r3
   30450:	strd	r4, [fp, #-44]	; 0xffffffd4
   30454:	ldrd	r2, [fp, #20]
   30458:	mov	r0, #0
   3045c:	mov	r1, #0
   30460:	mov	r0, r3
   30464:	mov	r1, #0
   30468:	strd	r0, [fp, #-52]	; 0xffffffcc
   3046c:	ldrd	r0, [fp, #20]
   30470:	mvn	r2, #0
   30474:	mov	r3, #0
   30478:	and	r6, r0, r2
   3047c:	and	r7, r1, r3
   30480:	strd	r6, [fp, #-60]	; 0xffffffc4
   30484:	ldr	r2, [fp, #-32]	; 0xffffffe0
   30488:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3048c:	mul	r1, r3, r2
   30490:	ldr	r2, [fp, #-48]	; 0xffffffd0
   30494:	ldr	r3, [fp, #-36]	; 0xffffffdc
   30498:	mul	r3, r3, r2
   3049c:	add	r1, r1, r3
   304a0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   304a4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   304a8:	umull	r2, r3, r2, r3
   304ac:	add	r1, r1, r3
   304b0:	mov	r3, r1
   304b4:	strd	r2, [fp, #-68]	; 0xffffffbc
   304b8:	strd	r2, [fp, #-68]	; 0xffffffbc
   304bc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   304c0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   304c4:	mul	r1, r3, r2
   304c8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   304cc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   304d0:	mul	r3, r3, r2
   304d4:	add	r1, r1, r3
   304d8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   304dc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   304e0:	umull	r2, r3, r2, r3
   304e4:	add	r1, r1, r3
   304e8:	mov	r3, r1
   304ec:	strd	r2, [fp, #-76]	; 0xffffffb4
   304f0:	strd	r2, [fp, #-76]	; 0xffffffb4
   304f4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   304f8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   304fc:	mul	r1, r3, r2
   30500:	ldr	r2, [fp, #-56]	; 0xffffffc8
   30504:	ldr	r3, [fp, #-36]	; 0xffffffdc
   30508:	mul	r3, r3, r2
   3050c:	add	r1, r1, r3
   30510:	ldr	r2, [fp, #-36]	; 0xffffffdc
   30514:	ldr	r3, [fp, #-60]	; 0xffffffc4
   30518:	umull	r2, r3, r2, r3
   3051c:	add	r1, r1, r3
   30520:	mov	r3, r1
   30524:	strd	r2, [fp, #-84]	; 0xffffffac
   30528:	strd	r2, [fp, #-84]	; 0xffffffac
   3052c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   30530:	ldr	r3, [fp, #-60]	; 0xffffffc4
   30534:	mul	r1, r3, r2
   30538:	ldr	r2, [fp, #-56]	; 0xffffffc8
   3053c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   30540:	mul	r3, r3, r2
   30544:	add	r1, r1, r3
   30548:	ldr	r2, [fp, #-44]	; 0xffffffd4
   3054c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   30550:	umull	r2, r3, r2, r3
   30554:	add	r1, r1, r3
   30558:	mov	r3, r1
   3055c:	strd	r2, [fp, #-92]	; 0xffffffa4
   30560:	strd	r2, [fp, #-92]	; 0xffffffa4
   30564:	ldrd	r2, [fp, #-92]	; 0xffffffa4
   30568:	mov	r4, #0
   3056c:	mov	r5, #0
   30570:	mov	r4, r3
   30574:	mov	r5, #0
   30578:	ldrd	r0, [fp, #-84]	; 0xffffffac
   3057c:	mvn	r2, #0
   30580:	mov	r3, #0
   30584:	and	r8, r0, r2
   30588:	and	r9, r1, r3
   3058c:	adds	r3, r4, r8
   30590:	str	r3, [fp, #-132]	; 0xffffff7c
   30594:	adc	r3, r5, r9
   30598:	str	r3, [fp, #-128]	; 0xffffff80
   3059c:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   305a0:	mvn	r2, #0
   305a4:	mov	r3, #0
   305a8:	and	ip, r0, r2
   305ac:	str	ip, [fp, #-140]	; 0xffffff74
   305b0:	and	r3, r1, r3
   305b4:	str	r3, [fp, #-136]	; 0xffffff78
   305b8:	ldrd	r0, [fp, #-132]	; 0xffffff7c
   305bc:	mov	ip, r0
   305c0:	ldrd	r2, [fp, #-140]	; 0xffffff74
   305c4:	mov	lr, r2
   305c8:	adds	ip, ip, lr
   305cc:	str	ip, [fp, #-172]	; 0xffffff54
   305d0:	adc	r3, r1, r3
   305d4:	str	r3, [fp, #-168]	; 0xffffff58
   305d8:	ldrd	r2, [fp, #-172]	; 0xffffff54
   305dc:	strd	r2, [fp, #-100]	; 0xffffff9c
   305e0:	ldrd	r2, [fp, #-100]	; 0xffffff9c
   305e4:	adds	r1, r2, #-2147483648	; 0x80000000
   305e8:	str	r1, [fp, #-180]	; 0xffffff4c
   305ec:	adc	r3, r3, #0
   305f0:	str	r3, [fp, #-176]	; 0xffffff50
   305f4:	ldrd	r2, [fp, #-180]	; 0xffffff4c
   305f8:	strd	r2, [fp, #-100]	; 0xffffff9c
   305fc:	ldrd	r0, [fp, #-84]	; 0xffffffac
   30600:	mov	r2, #0
   30604:	mov	r3, #0
   30608:	mov	r2, r1
   3060c:	mov	r3, #0
   30610:	ldrd	r0, [fp, #-68]	; 0xffffffbc
   30614:	adds	ip, r2, r0
   30618:	str	ip, [fp, #-148]	; 0xffffff6c
   3061c:	adc	r3, r3, r1
   30620:	str	r3, [fp, #-144]	; 0xffffff70
   30624:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   30628:	mov	r2, #0
   3062c:	mov	r3, #0
   30630:	mov	r2, r1
   30634:	mov	r3, #0
   30638:	ldrd	r0, [fp, #-148]	; 0xffffff6c
   3063c:	mov	ip, r0
   30640:	adds	ip, ip, r2
   30644:	str	ip, [fp, #-156]	; 0xffffff64
   30648:	adc	r3, r1, r3
   3064c:	str	r3, [fp, #-152]	; 0xffffff68
   30650:	ldrd	r0, [fp, #-100]	; 0xffffff9c
   30654:	mov	r2, #0
   30658:	mov	r3, #0
   3065c:	mov	r2, r1
   30660:	mov	r3, #0
   30664:	ldrd	r0, [fp, #-156]	; 0xffffff64
   30668:	mov	ip, r0
   3066c:	adds	ip, ip, r2
   30670:	str	ip, [fp, #-164]	; 0xffffff5c
   30674:	adc	r3, r1, r3
   30678:	str	r3, [fp, #-160]	; 0xffffff60
   3067c:	ldrd	r2, [fp, #-164]	; 0xffffff5c
   30680:	strd	r2, [fp, #-116]	; 0xffffff8c
   30684:	ldr	r2, [fp, #12]
   30688:	ldr	r3, [fp, #28]
   3068c:	add	r3, r2, r3
   30690:	add	r3, r3, #64	; 0x40
   30694:	str	r3, [fp, #-108]	; 0xffffff94
   30698:	ldr	r3, [fp, #-120]	; 0xffffff88
   3069c:	mov	r0, r3
   306a0:	sub	r1, fp, #116	; 0x74
   306a4:	ldrd	r2, [r1]
   306a8:	strd	r2, [r0]
   306ac:	ldrd	r2, [r1, #8]
   306b0:	strd	r2, [r0, #8]
   306b4:	ldr	r0, [fp, #-120]	; 0xffffff88
   306b8:	sub	sp, fp, #28
   306bc:	ldrd	r4, [sp]
   306c0:	ldrd	r6, [sp, #8]
   306c4:	ldrd	r8, [sp, #16]
   306c8:	ldr	fp, [sp, #24]
   306cc:	ldr	lr, [sp, #28]
   306d0:	add	sp, sp, #32
   306d4:	add	sp, sp, #8
   306d8:	bx	lr
   306dc:	sub	sp, sp, #8
   306e0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   306e4:	strd	r6, [sp, #8]
   306e8:	str	fp, [sp, #16]
   306ec:	str	lr, [sp, #20]
   306f0:	add	fp, sp, #20
   306f4:	sub	sp, sp, #8
   306f8:	str	r0, [fp, #-24]	; 0xffffffe8
   306fc:	add	r1, fp, #4
   30700:	stm	r1, {r2, r3}
   30704:	ldrd	r2, [fp, #4]
   30708:	orrs	r3, r2, r3
   3070c:	bne	30758 <flatcc_emitter_copy_buffer@@Base+0x2d60>
   30710:	ldr	r3, [pc, #216]	; 307f0 <flatcc_emitter_copy_buffer@@Base+0x2df8>
   30714:	add	r3, pc, r3
   30718:	mov	r2, #260	; 0x104
   3071c:	ldr	r1, [pc, #208]	; 307f4 <flatcc_emitter_copy_buffer@@Base+0x2dfc>
   30720:	add	r1, pc, r1
   30724:	ldr	r0, [pc, #204]	; 307f8 <flatcc_emitter_copy_buffer@@Base+0x2e00>
   30728:	add	r0, pc, r0
   3072c:	bl	126ac <__assert_fail@plt>
   30730:	ldrd	r0, [fp, #4]
   30734:	mov	r2, #0
   30738:	mov	r3, #0
   3073c:	lsl	r3, r1, #10
   30740:	orr	r3, r3, r0, lsr #22
   30744:	lsl	r2, r0, #10
   30748:	strd	r2, [fp, #4]
   3074c:	ldr	r3, [fp, #12]
   30750:	sub	r3, r3, #10
   30754:	str	r3, [fp, #12]
   30758:	ldrd	r2, [fp, #4]
   3075c:	mov	r0, #0
   30760:	mov	r1, #0
   30764:	movt	r1, #65472	; 0xffc0
   30768:	and	r4, r2, r0
   3076c:	and	r5, r3, r1
   30770:	orrs	r3, r4, r5
   30774:	beq	30730 <flatcc_emitter_copy_buffer@@Base+0x2d38>
   30778:	b	307a0 <flatcc_emitter_copy_buffer@@Base+0x2da8>
   3077c:	ldrd	r2, [fp, #4]
   30780:	adds	r6, r2, r2
   30784:	adc	r7, r3, r3
   30788:	mov	r2, r6
   3078c:	mov	r3, r7
   30790:	strd	r2, [fp, #4]
   30794:	ldr	r3, [fp, #12]
   30798:	sub	r3, r3, #1
   3079c:	str	r3, [fp, #12]
   307a0:	ldrd	r2, [fp, #4]
   307a4:	cmp	r2, #0
   307a8:	sbcs	r3, r3, #0
   307ac:	bge	3077c <flatcc_emitter_copy_buffer@@Base+0x2d84>
   307b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   307b4:	mov	r0, r3
   307b8:	add	r1, fp, #4
   307bc:	ldrd	r2, [r1]
   307c0:	strd	r2, [r0]
   307c4:	ldrd	r2, [r1, #8]
   307c8:	strd	r2, [r0, #8]
   307cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   307d0:	sub	sp, fp, #20
   307d4:	ldrd	r4, [sp]
   307d8:	ldrd	r6, [sp, #8]
   307dc:	ldr	fp, [sp, #16]
   307e0:	ldr	lr, [sp, #20]
   307e4:	add	sp, sp, #24
   307e8:	add	sp, sp, #8
   307ec:	bx	lr
   307f0:	andeq	r7, r0, r0, lsr #31
   307f4:	andeq	r7, r0, r8, lsl #19
   307f8:	andeq	r7, r0, ip, lsl #20
   307fc:	strd	r4, [sp, #-32]!	; 0xffffffe0
   30800:	strd	r6, [sp, #8]
   30804:	strd	r8, [sp, #16]
   30808:	str	fp, [sp, #24]
   3080c:	str	lr, [sp, #28]
   30810:	add	fp, sp, #28
   30814:	sub	sp, sp, #48	; 0x30
   30818:	str	r0, [fp, #-56]	; 0xffffffc8
   3081c:	vstr	d0, [fp, #-68]	; 0xffffffbc
   30820:	vldr	d0, [fp, #-68]	; 0xffffffbc
   30824:	bl	30160 <flatcc_emitter_copy_buffer@@Base+0x2768>
   30828:	strd	r0, [fp, #-36]	; 0xffffffdc
   3082c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   30830:	mov	r0, #0
   30834:	mov	r1, #0
   30838:	movt	r1, #32752	; 0x7ff0
   3083c:	and	ip, r2, r0
   30840:	str	ip, [fp, #-76]	; 0xffffffb4
   30844:	and	r3, r3, r1
   30848:	str	r3, [fp, #-72]	; 0xffffffb8
   3084c:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   30850:	orrs	r3, r2, r3
   30854:	bne	30884 <flatcc_emitter_copy_buffer@@Base+0x2e8c>
   30858:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   3085c:	mvn	r0, #0
   30860:	movw	r1, #65535	; 0xffff
   30864:	movt	r1, #15
   30868:	and	r8, r2, r0
   3086c:	and	r9, r3, r1
   30870:	strd	r8, [fp, #-52]	; 0xffffffcc
   30874:	movw	r3, #64462	; 0xfbce
   30878:	movt	r3, #65535	; 0xffff
   3087c:	str	r3, [fp, #-44]	; 0xffffffd4
   30880:	b	308d0 <flatcc_emitter_copy_buffer@@Base+0x2ed8>
   30884:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   30888:	mvn	r0, #0
   3088c:	movw	r1, #65535	; 0xffff
   30890:	movt	r1, #15
   30894:	and	r4, r2, r0
   30898:	and	r5, r3, r1
   3089c:	adds	r6, r4, #0
   308a0:	adc	r7, r5, #1048576	; 0x100000
   308a4:	strd	r6, [fp, #-52]	; 0xffffffcc
   308a8:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   308ac:	mov	r2, #0
   308b0:	mov	r3, #0
   308b4:	lsr	r2, r1, #20
   308b8:	mov	r3, #0
   308bc:	mov	r3, r2
   308c0:	ubfx	r3, r3, #0, #11
   308c4:	sub	r3, r3, #1072	; 0x430
   308c8:	sub	r3, r3, #3
   308cc:	str	r3, [fp, #-44]	; 0xffffffd4
   308d0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   308d4:	mov	r0, r3
   308d8:	sub	r1, fp, #52	; 0x34
   308dc:	ldrd	r2, [r1]
   308e0:	strd	r2, [r0]
   308e4:	ldrd	r2, [r1, #8]
   308e8:	strd	r2, [r0, #8]
   308ec:	ldr	r0, [fp, #-56]	; 0xffffffc8
   308f0:	sub	sp, fp, #28
   308f4:	ldrd	r4, [sp]
   308f8:	ldrd	r6, [sp, #8]
   308fc:	ldrd	r8, [sp, #16]
   30900:	ldr	fp, [sp, #24]
   30904:	add	sp, sp, #28
   30908:	pop	{pc}		; (ldr pc, [sp], #4)
   3090c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   30910:	strd	r6, [sp, #8]
   30914:	strd	r8, [sp, #16]
   30918:	str	fp, [sp, #24]
   3091c:	str	lr, [sp, #28]
   30920:	add	fp, sp, #28
   30924:	sub	sp, sp, #112	; 0x70
   30928:	sub	ip, fp, #100	; 0x64
   3092c:	stm	ip, {r0, r1, r2, r3}
   30930:	mov	r2, #0
   30934:	mov	r3, #1048576	; 0x100000
   30938:	strd	r2, [fp, #-44]	; 0xffffffd4
   3093c:	mvn	r2, #0
   30940:	movw	r3, #65535	; 0xffff
   30944:	movt	r3, #15
   30948:	strd	r2, [fp, #-52]	; 0xffffffcc
   3094c:	movw	r3, #64462	; 0xfbce
   30950:	movt	r3, #65535	; 0xffff
   30954:	str	r3, [fp, #-56]	; 0xffffffc8
   30958:	movw	r3, #1075	; 0x433
   3095c:	str	r3, [fp, #-60]	; 0xffffffc4
   30960:	mov	r3, #52	; 0x34
   30964:	str	r3, [fp, #-64]	; 0xffffffc0
   30968:	sub	r0, fp, #84	; 0x54
   3096c:	sub	r1, fp, #100	; 0x64
   30970:	ldrd	r2, [r1]
   30974:	strd	r2, [r0]
   30978:	ldrd	r2, [r1, #8]
   3097c:	strd	r2, [r0, #8]
   30980:	b	309ac <flatcc_emitter_copy_buffer@@Base+0x2fb4>
   30984:	ldrd	r2, [fp, #-84]	; 0xffffffac
   30988:	mov	r0, #0
   3098c:	mov	r1, #0
   30990:	lsr	r0, r2, #1
   30994:	orr	r0, r0, r3, lsl #31
   30998:	lsr	r1, r3, #1
   3099c:	strd	r0, [fp, #-84]	; 0xffffffac
   309a0:	ldr	r3, [fp, #-76]	; 0xffffffb4
   309a4:	add	r3, r3, #1
   309a8:	str	r3, [fp, #-76]	; 0xffffffb4
   309ac:	ldrd	r4, [fp, #-84]	; 0xffffffac
   309b0:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   309b4:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   309b8:	adds	ip, r0, r2
   309bc:	str	ip, [fp, #-108]	; 0xffffff94
   309c0:	adc	r3, r1, r3
   309c4:	str	r3, [fp, #-104]	; 0xffffff98
   309c8:	ldrd	r2, [fp, #-108]	; 0xffffff94
   309cc:	cmp	r5, r3
   309d0:	cmpeq	r4, r2
   309d4:	bhi	30984 <flatcc_emitter_copy_buffer@@Base+0x2f8c>
   309d8:	ldr	r3, [fp, #-76]	; 0xffffffb4
   309dc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   309e0:	cmp	r2, r3
   309e4:	ble	30a18 <flatcc_emitter_copy_buffer@@Base+0x3020>
   309e8:	vldr	d7, [pc, #296]	; 30b18 <flatcc_emitter_copy_buffer@@Base+0x3120>
   309ec:	b	30af4 <flatcc_emitter_copy_buffer@@Base+0x30fc>
   309f0:	ldrd	r2, [fp, #-84]	; 0xffffffac
   309f4:	adds	r1, r2, r2
   309f8:	str	r1, [fp, #-140]	; 0xffffff74
   309fc:	adc	r3, r3, r3
   30a00:	str	r3, [fp, #-136]	; 0xffffff78
   30a04:	ldrd	r2, [fp, #-140]	; 0xffffff74
   30a08:	strd	r2, [fp, #-84]	; 0xffffffac
   30a0c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   30a10:	sub	r3, r3, #1
   30a14:	str	r3, [fp, #-76]	; 0xffffffb4
   30a18:	ldr	r3, [fp, #-76]	; 0xffffffb4
   30a1c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   30a20:	cmp	r2, r3
   30a24:	bge	30a4c <flatcc_emitter_copy_buffer@@Base+0x3054>
   30a28:	ldrd	r0, [fp, #-84]	; 0xffffffac
   30a2c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   30a30:	and	ip, r0, r2
   30a34:	str	ip, [fp, #-116]	; 0xffffff8c
   30a38:	and	r3, r1, r3
   30a3c:	str	r3, [fp, #-112]	; 0xffffff90
   30a40:	ldrd	r2, [fp, #-116]	; 0xffffff8c
   30a44:	orrs	r3, r2, r3
   30a48:	beq	309f0 <flatcc_emitter_copy_buffer@@Base+0x2ff8>
   30a4c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   30a50:	ldr	r2, [fp, #-56]	; 0xffffffc8
   30a54:	cmp	r2, r3
   30a58:	bne	30a90 <flatcc_emitter_copy_buffer@@Base+0x3098>
   30a5c:	ldrd	r0, [fp, #-84]	; 0xffffffac
   30a60:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   30a64:	and	ip, r0, r2
   30a68:	str	ip, [fp, #-124]	; 0xffffff84
   30a6c:	and	r3, r1, r3
   30a70:	str	r3, [fp, #-120]	; 0xffffff88
   30a74:	ldrd	r2, [fp, #-124]	; 0xffffff84
   30a78:	orrs	r3, r2, r3
   30a7c:	bne	30a90 <flatcc_emitter_copy_buffer@@Base+0x3098>
   30a80:	mov	r2, #0
   30a84:	mov	r3, #0
   30a88:	strd	r2, [fp, #-36]	; 0xffffffdc
   30a8c:	b	30aa8 <flatcc_emitter_copy_buffer@@Base+0x30b0>
   30a90:	ldr	r2, [fp, #-76]	; 0xffffffb4
   30a94:	ldr	r3, [fp, #-60]	; 0xffffffc4
   30a98:	add	r3, r2, r3
   30a9c:	mov	r2, r3
   30aa0:	asr	r3, r2, #31
   30aa4:	strd	r2, [fp, #-36]	; 0xffffffdc
   30aa8:	ldrd	r0, [fp, #-84]	; 0xffffffac
   30aac:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   30ab0:	and	r8, r0, r2
   30ab4:	and	r9, r1, r3
   30ab8:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   30abc:	ldr	r1, [fp, #-64]	; 0xffffffc0
   30ac0:	sub	ip, r1, #32
   30ac4:	rsb	r0, r1, #32
   30ac8:	lsl	r7, r3, r1
   30acc:	orr	r7, r7, r2, lsl ip
   30ad0:	orr	r7, r7, r2, lsr r0
   30ad4:	lsl	r6, r2, r1
   30ad8:	orr	r3, r8, r6
   30adc:	str	r3, [fp, #-132]	; 0xffffff7c
   30ae0:	orr	r3, r9, r7
   30ae4:	str	r3, [fp, #-128]	; 0xffffff80
   30ae8:	ldrd	r0, [fp, #-132]	; 0xffffff7c
   30aec:	bl	30190 <flatcc_emitter_copy_buffer@@Base+0x2798>
   30af0:	vmov.f64	d7, d0
   30af4:	vmov.f64	d0, d7
   30af8:	sub	sp, fp, #28
   30afc:	ldrd	r4, [sp]
   30b00:	ldrd	r6, [sp, #8]
   30b04:	ldrd	r8, [sp, #16]
   30b08:	ldr	fp, [sp, #24]
   30b0c:	add	sp, sp, #28
   30b10:	pop	{pc}		; (ldr pc, [sp], #4)
   30b14:	nop	{0}
	...
   30b20:	push	{fp}		; (str fp, [sp, #-4]!)
   30b24:	add	fp, sp, #0
   30b28:	sub	sp, sp, #28
   30b2c:	str	r0, [fp, #-16]
   30b30:	str	r1, [fp, #-20]	; 0xffffffec
   30b34:	str	r2, [fp, #-24]	; 0xffffffe8
   30b38:	ldr	r3, [fp, #-20]	; 0xffffffec
   30b3c:	add	r3, r3, #1
   30b40:	movw	r2, #1233	; 0x4d1
   30b44:	mul	r3, r2, r3
   30b48:	asr	r3, r3, #12
   30b4c:	add	r3, r3, #1
   30b50:	str	r3, [fp, #-8]
   30b54:	ldr	r3, [pc, #76]	; 30ba8 <flatcc_emitter_copy_buffer@@Base+0x31b0>
   30b58:	add	r3, pc, r3
   30b5c:	ldr	r2, [fp, #-8]
   30b60:	ldr	r3, [r3, r2, lsl #2]
   30b64:	ldr	r2, [fp, #-16]
   30b68:	cmp	r2, r3
   30b6c:	bcs	30b7c <flatcc_emitter_copy_buffer@@Base+0x3184>
   30b70:	ldr	r3, [fp, #-8]
   30b74:	sub	r3, r3, #1
   30b78:	str	r3, [fp, #-8]
   30b7c:	ldr	r3, [pc, #40]	; 30bac <flatcc_emitter_copy_buffer@@Base+0x31b4>
   30b80:	add	r3, pc, r3
   30b84:	ldr	r2, [fp, #-8]
   30b88:	ldr	r2, [r3, r2, lsl #2]
   30b8c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30b90:	str	r2, [r3]
   30b94:	ldr	r3, [fp, #-8]
   30b98:	mov	r0, r3
   30b9c:	add	sp, fp, #0
   30ba0:	pop	{fp}		; (ldr fp, [sp], #4)
   30ba4:	bx	lr
   30ba8:	andeq	r7, r0, r8, ror #11
   30bac:	andeq	r7, r0, r0, asr #11
   30bb0:	str	fp, [sp, #-8]!
   30bb4:	str	lr, [sp, #4]
   30bb8:	add	fp, sp, #4
   30bbc:	sub	sp, sp, #24
   30bc0:	str	r0, [fp, #-24]	; 0xffffffe8
   30bc4:	str	r1, [fp, #-28]	; 0xffffffe4
   30bc8:	mov	r3, #348	; 0x15c
   30bcc:	str	r3, [fp, #-8]
   30bd0:	mov	r3, #8
   30bd4:	str	r3, [fp, #-12]
   30bd8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30bdc:	cmn	r3, #348	; 0x15c
   30be0:	bge	30c04 <flatcc_emitter_copy_buffer@@Base+0x320c>
   30be4:	ldr	r3, [pc, #336]	; 30d3c <flatcc_emitter_copy_buffer@@Base+0x3344>
   30be8:	add	r3, pc, r3
   30bec:	mov	r2, #80	; 0x50
   30bf0:	ldr	r1, [pc, #328]	; 30d40 <flatcc_emitter_copy_buffer@@Base+0x3348>
   30bf4:	add	r1, pc, r1
   30bf8:	ldr	r0, [pc, #324]	; 30d44 <flatcc_emitter_copy_buffer@@Base+0x334c>
   30bfc:	add	r0, pc, r0
   30c00:	bl	126ac <__assert_fail@plt>
   30c04:	ldr	r3, [fp, #-12]
   30c08:	add	r3, r3, #336	; 0x150
   30c0c:	add	r3, r3, #3
   30c10:	ldr	r2, [fp, #-24]	; 0xffffffe8
   30c14:	cmp	r2, r3
   30c18:	ble	30c3c <flatcc_emitter_copy_buffer@@Base+0x3244>
   30c1c:	ldr	r3, [pc, #292]	; 30d48 <flatcc_emitter_copy_buffer@@Base+0x3350>
   30c20:	add	r3, pc, r3
   30c24:	mov	r2, #81	; 0x51
   30c28:	ldr	r1, [pc, #284]	; 30d4c <flatcc_emitter_copy_buffer@@Base+0x3354>
   30c2c:	add	r1, pc, r1
   30c30:	ldr	r0, [pc, #280]	; 30d50 <flatcc_emitter_copy_buffer@@Base+0x3358>
   30c34:	add	r0, pc, r0
   30c38:	bl	126ac <__assert_fail@plt>
   30c3c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   30c40:	ldr	r3, [fp, #-8]
   30c44:	add	r2, r2, r3
   30c48:	ldr	r3, [fp, #-12]
   30c4c:	sdiv	r3, r2, r3
   30c50:	str	r3, [fp, #-16]
   30c54:	ldr	r2, [pc, #248]	; 30d54 <flatcc_emitter_copy_buffer@@Base+0x335c>
   30c58:	add	r2, pc, r2
   30c5c:	ldr	r3, [fp, #-16]
   30c60:	lsl	r3, r3, #4
   30c64:	add	r3, r2, r3
   30c68:	add	r3, r3, #10
   30c6c:	ldrsh	r3, [r3]
   30c70:	str	r3, [fp, #-20]	; 0xffffffec
   30c74:	ldr	r2, [pc, #220]	; 30d58 <flatcc_emitter_copy_buffer@@Base+0x3360>
   30c78:	add	r2, pc, r2
   30c7c:	ldr	r3, [fp, #-16]
   30c80:	lsl	r3, r3, #4
   30c84:	add	r3, r2, r3
   30c88:	ldrd	r2, [r3]
   30c8c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   30c90:	strd	r2, [r1]
   30c94:	ldr	r2, [pc, #192]	; 30d5c <flatcc_emitter_copy_buffer@@Base+0x3364>
   30c98:	add	r2, pc, r2
   30c9c:	ldr	r3, [fp, #-16]
   30ca0:	lsl	r3, r3, #4
   30ca4:	add	r3, r2, r3
   30ca8:	add	r3, r3, #8
   30cac:	ldrsh	r3, [r3]
   30cb0:	mov	r2, r3
   30cb4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   30cb8:	str	r2, [r3, #8]
   30cbc:	ldr	r2, [fp, #-20]	; 0xffffffec
   30cc0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30cc4:	cmp	r2, r3
   30cc8:	ble	30cec <flatcc_emitter_copy_buffer@@Base+0x32f4>
   30ccc:	ldr	r3, [pc, #140]	; 30d60 <flatcc_emitter_copy_buffer@@Base+0x3368>
   30cd0:	add	r3, pc, r3
   30cd4:	mov	r2, #88	; 0x58
   30cd8:	ldr	r1, [pc, #132]	; 30d64 <flatcc_emitter_copy_buffer@@Base+0x336c>
   30cdc:	add	r1, pc, r1
   30ce0:	ldr	r0, [pc, #128]	; 30d68 <flatcc_emitter_copy_buffer@@Base+0x3370>
   30ce4:	add	r0, pc, r0
   30ce8:	bl	126ac <__assert_fail@plt>
   30cec:	ldr	r2, [fp, #-20]	; 0xffffffec
   30cf0:	ldr	r3, [fp, #-12]
   30cf4:	add	r3, r2, r3
   30cf8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   30cfc:	cmp	r2, r3
   30d00:	blt	30d24 <flatcc_emitter_copy_buffer@@Base+0x332c>
   30d04:	ldr	r3, [pc, #96]	; 30d6c <flatcc_emitter_copy_buffer@@Base+0x3374>
   30d08:	add	r3, pc, r3
   30d0c:	mov	r2, #89	; 0x59
   30d10:	ldr	r1, [pc, #88]	; 30d70 <flatcc_emitter_copy_buffer@@Base+0x3378>
   30d14:	add	r1, pc, r1
   30d18:	ldr	r0, [pc, #84]	; 30d74 <flatcc_emitter_copy_buffer@@Base+0x337c>
   30d1c:	add	r0, pc, r0
   30d20:	bl	126ac <__assert_fail@plt>
   30d24:	ldr	r3, [fp, #-20]	; 0xffffffec
   30d28:	mov	r0, r3
   30d2c:	sub	sp, fp, #4
   30d30:	ldr	fp, [sp]
   30d34:	add	sp, sp, #4
   30d38:	pop	{pc}		; (ldr pc, [sp], #4)
   30d3c:	andeq	r7, r0, r4, ror #21
   30d40:	andeq	r7, r0, r8, ror r5
   30d44:	andeq	r7, r0, r0, ror #11
   30d48:	andeq	r7, r0, ip, lsr #21
   30d4c:	andeq	r7, r0, r0, asr #10
   30d50:	andeq	r7, r0, r8, asr #11
   30d54:	andeq	r6, r0, r0, ror #29
   30d58:	andeq	r6, r0, r0, asr #29
   30d5c:	andeq	r6, r0, r0, lsr #29
   30d60:	strdeq	r7, [r0], -ip
   30d64:	muleq	r0, r0, r4
   30d68:	andeq	r7, r0, r4, asr #10
   30d6c:	andeq	r7, r0, r4, asr #19
   30d70:	andeq	r7, r0, r8, asr r4
   30d74:	andeq	r7, r0, ip, lsl r5

00030d78 <grisu3_diy_fp_encode_double@@Base>:
   30d78:	strd	r4, [sp, #-32]!	; 0xffffffe0
   30d7c:	strd	r6, [sp, #8]
   30d80:	strd	r8, [sp, #16]
   30d84:	str	fp, [sp, #24]
   30d88:	str	lr, [sp, #28]
   30d8c:	add	fp, sp, #28
   30d90:	sub	sp, sp, #216	; 0xd8
   30d94:	strd	r0, [fp, #-156]	; 0xffffff64
   30d98:	str	r2, [fp, #-160]	; 0xffffff60
   30d9c:	str	r3, [fp, #-164]	; 0xffffff5c
   30da0:	mov	r3, #3
   30da4:	str	r3, [fp, #-40]	; 0xffffffd8
   30da8:	mov	r2, #1
   30dac:	ldr	r3, [fp, #-40]	; 0xffffffd8
   30db0:	lsl	r3, r2, r3
   30db4:	str	r3, [fp, #-44]	; 0xffffffd4
   30db8:	movw	r3, #64462	; 0xfbce
   30dbc:	movt	r3, #65535	; 0xffff
   30dc0:	str	r3, [fp, #-48]	; 0xffffffd0
   30dc4:	mov	r2, #0
   30dc8:	mov	r3, #1048576	; 0x100000
   30dcc:	strd	r2, [fp, #-60]	; 0xffffffc4
   30dd0:	mov	r3, #64	; 0x40
   30dd4:	str	r3, [fp, #-64]	; 0xffffffc0
   30dd8:	mov	r3, #19
   30ddc:	str	r3, [fp, #-68]	; 0xffffffbc
   30de0:	ldr	r3, [fp, #4]
   30de4:	cmp	r3, #0
   30de8:	beq	30e00 <grisu3_diy_fp_encode_double@@Base+0x88>
   30dec:	ldr	r2, [fp, #-44]	; 0xffffffd4
   30df0:	lsr	r3, r2, #31
   30df4:	add	r3, r3, r2
   30df8:	asr	r3, r3, #1
   30dfc:	b	30e04 <grisu3_diy_fp_encode_double@@Base+0x8c>
   30e00:	mov	r3, #0
   30e04:	str	r3, [fp, #-32]	; 0xffffffe0
   30e08:	ldr	r2, [fp, #-160]	; 0xffffff60
   30e0c:	ldr	r3, [fp, #-164]	; 0xffffff5c
   30e10:	sub	r3, r2, r3
   30e14:	str	r3, [fp, #-72]	; 0xffffffb8
   30e18:	ldrd	r2, [fp, #-156]	; 0xffffff64
   30e1c:	strd	r2, [fp, #-116]	; 0xffffff8c
   30e20:	mov	r3, #0
   30e24:	str	r3, [fp, #-108]	; 0xffffff94
   30e28:	sub	r0, fp, #116	; 0x74
   30e2c:	mov	r1, sp
   30e30:	sub	r3, fp, #108	; 0x6c
   30e34:	ldrd	r2, [r3]
   30e38:	strd	r2, [r1]
   30e3c:	sub	r3, fp, #116	; 0x74
   30e40:	ldm	r3, {r2, r3}
   30e44:	bl	306dc <flatcc_emitter_copy_buffer@@Base+0x2ce4>
   30e48:	ldr	r3, [fp, #-108]	; 0xffffff94
   30e4c:	rsb	r2, r3, #0
   30e50:	ldr	r3, [fp, #-32]	; 0xffffffe0
   30e54:	lsl	r3, r3, r2
   30e58:	str	r3, [fp, #-32]	; 0xffffffe0
   30e5c:	sub	r3, fp, #132	; 0x84
   30e60:	mov	r1, r3
   30e64:	ldr	r0, [fp, #-72]	; 0xffffffb8
   30e68:	bl	30bb0 <flatcc_emitter_copy_buffer@@Base+0x31b8>
   30e6c:	str	r0, [fp, #-76]	; 0xffffffb4
   30e70:	ldr	r2, [fp, #-76]	; 0xffffffb4
   30e74:	ldr	r3, [fp, #-72]	; 0xffffffb8
   30e78:	cmp	r2, r3
   30e7c:	beq	30f6c <grisu3_diy_fp_encode_double@@Base+0x1f4>
   30e80:	ldr	r2, [fp, #-72]	; 0xffffffb8
   30e84:	ldr	r3, [fp, #-76]	; 0xffffffb4
   30e88:	sub	r3, r2, r3
   30e8c:	sub	r3, r3, #1
   30e90:	str	r3, [fp, #-80]	; 0xffffffb0
   30e94:	ldr	r3, [fp, #-80]	; 0xffffffb0
   30e98:	cmp	r3, #0
   30e9c:	blt	30eac <grisu3_diy_fp_encode_double@@Base+0x134>
   30ea0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   30ea4:	cmp	r3, #6
   30ea8:	ble	30ecc <grisu3_diy_fp_encode_double@@Base+0x154>
   30eac:	ldr	r3, [pc, #1132]	; 31320 <grisu3_diy_fp_encode_double@@Base+0x5a8>
   30eb0:	add	r3, pc, r3
   30eb4:	mov	r2, #185	; 0xb9
   30eb8:	ldr	r1, [pc, #1124]	; 31324 <grisu3_diy_fp_encode_double@@Base+0x5ac>
   30ebc:	add	r1, pc, r1
   30ec0:	ldr	r0, [pc, #1120]	; 31328 <grisu3_diy_fp_encode_double@@Base+0x5b0>
   30ec4:	add	r0, pc, r0
   30ec8:	bl	126ac <__assert_fail@plt>
   30ecc:	sub	ip, fp, #180	; 0xb4
   30ed0:	ldr	r2, [pc, #1108]	; 3132c <grisu3_diy_fp_encode_double@@Base+0x5b4>
   30ed4:	add	r2, pc, r2
   30ed8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   30edc:	add	r0, sp, #8
   30ee0:	lsl	r1, r3, #4
   30ee4:	add	r1, r2, r1
   30ee8:	ldrd	r2, [r1]
   30eec:	strd	r2, [r0]
   30ef0:	ldrd	r2, [r1, #8]
   30ef4:	strd	r2, [r0, #8]
   30ef8:	mov	r1, sp
   30efc:	sub	r3, fp, #108	; 0x6c
   30f00:	ldrd	r2, [r3]
   30f04:	strd	r2, [r1]
   30f08:	sub	r3, fp, #116	; 0x74
   30f0c:	ldm	r3, {r2, r3}
   30f10:	mov	r0, ip
   30f14:	bl	303f8 <flatcc_emitter_copy_buffer@@Base+0x2a00>
   30f18:	sub	r0, fp, #116	; 0x74
   30f1c:	sub	r1, fp, #180	; 0xb4
   30f20:	ldrd	r2, [r1]
   30f24:	strd	r2, [r0]
   30f28:	ldrd	r2, [r1, #8]
   30f2c:	strd	r2, [r0, #8]
   30f30:	ldr	r3, [fp, #-164]	; 0xffffff5c
   30f34:	add	r2, r3, #1
   30f38:	ldr	r3, [fp, #-80]	; 0xffffffb0
   30f3c:	add	r2, r2, r3
   30f40:	ldr	r3, [fp, #-68]	; 0xffffffbc
   30f44:	cmp	r3, r2
   30f48:	bge	30f6c <grisu3_diy_fp_encode_double@@Base+0x1f4>
   30f4c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   30f50:	lsr	r3, r2, #31
   30f54:	add	r3, r3, r2
   30f58:	asr	r3, r3, #1
   30f5c:	mov	r2, r3
   30f60:	ldr	r3, [fp, #-32]	; 0xffffffe0
   30f64:	add	r3, r3, r2
   30f68:	str	r3, [fp, #-32]	; 0xffffffe0
   30f6c:	sub	ip, fp, #180	; 0xb4
   30f70:	add	r0, sp, #8
   30f74:	sub	r1, fp, #132	; 0x84
   30f78:	ldrd	r2, [r1]
   30f7c:	strd	r2, [r0]
   30f80:	ldrd	r2, [r1, #8]
   30f84:	strd	r2, [r0, #8]
   30f88:	mov	r1, sp
   30f8c:	sub	r3, fp, #108	; 0x6c
   30f90:	ldrd	r2, [r3]
   30f94:	strd	r2, [r1]
   30f98:	sub	r3, fp, #116	; 0x74
   30f9c:	ldm	r3, {r2, r3}
   30fa0:	mov	r0, ip
   30fa4:	bl	303f8 <flatcc_emitter_copy_buffer@@Base+0x2a00>
   30fa8:	sub	r0, fp, #116	; 0x74
   30fac:	sub	r1, fp, #180	; 0xb4
   30fb0:	ldrd	r2, [r1]
   30fb4:	strd	r2, [r0]
   30fb8:	ldrd	r2, [r1, #8]
   30fbc:	strd	r2, [r0, #8]
   30fc0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   30fc4:	cmp	r3, #0
   30fc8:	movne	r3, #1
   30fcc:	moveq	r3, #0
   30fd0:	uxtb	r3, r3
   30fd4:	mov	r2, r3
   30fd8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   30fdc:	add	r2, r2, r3
   30fe0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   30fe4:	add	r3, r3, r2
   30fe8:	str	r3, [fp, #-32]	; 0xffffffe0
   30fec:	ldr	r3, [fp, #-108]	; 0xffffff94
   30ff0:	str	r3, [fp, #-84]	; 0xffffffac
   30ff4:	sub	r0, fp, #180	; 0xb4
   30ff8:	mov	r1, sp
   30ffc:	sub	r3, fp, #108	; 0x6c
   31000:	ldrd	r2, [r3]
   31004:	strd	r2, [r1]
   31008:	sub	r3, fp, #116	; 0x74
   3100c:	ldm	r3, {r2, r3}
   31010:	bl	306dc <flatcc_emitter_copy_buffer@@Base+0x2ce4>
   31014:	sub	r0, fp, #116	; 0x74
   31018:	sub	r1, fp, #180	; 0xb4
   3101c:	ldrd	r2, [r1]
   31020:	strd	r2, [r0]
   31024:	ldrd	r2, [r1, #8]
   31028:	strd	r2, [r0, #8]
   3102c:	ldr	r2, [fp, #-108]	; 0xffffff94
   31030:	ldr	r3, [fp, #-84]	; 0xffffffac
   31034:	sub	r2, r3, r2
   31038:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3103c:	lsl	r3, r3, r2
   31040:	str	r3, [fp, #-32]	; 0xffffffe0
   31044:	ldr	r2, [fp, #-108]	; 0xffffff94
   31048:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3104c:	add	r3, r3, r2
   31050:	str	r3, [fp, #-88]	; 0xffffffa8
   31054:	ldr	r2, [fp, #-64]	; 0xffffffc0
   31058:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3105c:	add	r2, r2, r3
   31060:	ldr	r3, [fp, #-88]	; 0xffffffa8
   31064:	cmp	r3, r2
   31068:	bge	31094 <grisu3_diy_fp_encode_double@@Base+0x31c>
   3106c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   31070:	ldr	r3, [fp, #-48]	; 0xffffffd0
   31074:	cmp	r2, r3
   31078:	ble	3108c <grisu3_diy_fp_encode_double@@Base+0x314>
   3107c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   31080:	ldr	r3, [fp, #-48]	; 0xffffffd0
   31084:	sub	r3, r2, r3
   31088:	b	31098 <grisu3_diy_fp_encode_double@@Base+0x320>
   3108c:	mov	r3, #0
   31090:	b	31098 <grisu3_diy_fp_encode_double@@Base+0x320>
   31094:	ldr	r3, [fp, #-64]	; 0xffffffc0
   31098:	str	r3, [fp, #-88]	; 0xffffffa8
   3109c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   310a0:	ldr	r3, [fp, #-88]	; 0xffffffa8
   310a4:	sub	r3, r2, r3
   310a8:	str	r3, [fp, #-36]	; 0xffffffdc
   310ac:	ldr	r2, [fp, #-36]	; 0xffffffdc
   310b0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   310b4:	add	r2, r2, r3
   310b8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   310bc:	cmp	r3, r2
   310c0:	bgt	31140 <grisu3_diy_fp_encode_double@@Base+0x3c8>
   310c4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   310c8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   310cc:	add	r2, r2, r3
   310d0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   310d4:	sub	r3, r2, r3
   310d8:	sub	r3, r3, #1
   310dc:	str	r3, [fp, #-92]	; 0xffffffa4
   310e0:	ldrd	r2, [fp, #-116]	; 0xffffff8c
   310e4:	ldr	r1, [fp, #-92]	; 0xffffffa4
   310e8:	rsb	ip, r1, #32
   310ec:	sub	r0, r1, #32
   310f0:	lsr	r4, r2, r1
   310f4:	orr	r4, r4, r3, lsl ip
   310f8:	orr	r4, r4, r3, lsr r0
   310fc:	lsr	r5, r3, r1
   31100:	strd	r4, [fp, #-116]	; 0xffffff8c
   31104:	ldr	r2, [fp, #-108]	; 0xffffff94
   31108:	ldr	r3, [fp, #-92]	; 0xffffffa4
   3110c:	add	r3, r2, r3
   31110:	str	r3, [fp, #-108]	; 0xffffff94
   31114:	ldr	r2, [fp, #-32]	; 0xffffffe0
   31118:	ldr	r3, [fp, #-92]	; 0xffffffa4
   3111c:	asr	r3, r2, r3
   31120:	add	r2, r3, #1
   31124:	ldr	r3, [fp, #-44]	; 0xffffffd4
   31128:	add	r3, r3, r2
   3112c:	str	r3, [fp, #-32]	; 0xffffffe0
   31130:	ldr	r2, [fp, #-36]	; 0xffffffdc
   31134:	ldr	r3, [fp, #-92]	; 0xffffffa4
   31138:	sub	r3, r2, r3
   3113c:	str	r3, [fp, #-36]	; 0xffffffdc
   31140:	ldrd	r2, [fp, #-116]	; 0xffffff8c
   31144:	ldr	r1, [fp, #-36]	; 0xffffffdc
   31148:	rsb	ip, r1, #32
   3114c:	sub	r0, r1, #32
   31150:	lsr	r8, r2, r1
   31154:	orr	r8, r8, r3, lsl ip
   31158:	orr	r8, r8, r3, lsr r0
   3115c:	lsr	r9, r3, r1
   31160:	strd	r8, [fp, #-148]	; 0xffffff6c
   31164:	ldr	r2, [fp, #-108]	; 0xffffff94
   31168:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3116c:	add	r3, r2, r3
   31170:	str	r3, [fp, #-140]	; 0xffffff74
   31174:	ldrd	r4, [fp, #-116]	; 0xffffff8c
   31178:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3117c:	sub	r1, r3, #1
   31180:	mov	r2, #1
   31184:	mov	r3, #0
   31188:	sub	ip, r1, #32
   3118c:	rsb	r0, r1, #32
   31190:	lsl	r7, r3, r1
   31194:	orr	r7, r7, r2, lsl ip
   31198:	orr	r7, r7, r2, lsr r0
   3119c:	lsl	r6, r2, r1
   311a0:	and	r3, r4, r6
   311a4:	str	r3, [fp, #-196]	; 0xffffff3c
   311a8:	and	r3, r5, r7
   311ac:	str	r3, [fp, #-192]	; 0xffffff40
   311b0:	ldr	r1, [fp, #-196]	; 0xffffff3c
   311b4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   311b8:	mov	r2, r3
   311bc:	asr	r3, r2, #31
   311c0:	mov	r3, r2
   311c4:	mul	r3, r3, r1
   311c8:	str	r3, [fp, #-96]	; 0xffffffa0
   311cc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   311d0:	mov	r2, r3
   311d4:	asr	r3, r2, #31
   311d8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   311dc:	sub	r1, r1, #1
   311e0:	sub	ip, r1, #32
   311e4:	rsb	r0, r1, #32
   311e8:	lsl	lr, r3, r1
   311ec:	str	lr, [fp, #-184]	; 0xffffff48
   311f0:	ldr	lr, [fp, #-184]	; 0xffffff48
   311f4:	orr	ip, lr, r2, lsl ip
   311f8:	str	ip, [fp, #-184]	; 0xffffff48
   311fc:	ldr	ip, [fp, #-184]	; 0xffffff48
   31200:	orr	r0, ip, r2, lsr r0
   31204:	str	r0, [fp, #-184]	; 0xffffff48
   31208:	lsl	r3, r2, r1
   3120c:	str	r3, [fp, #-188]	; 0xffffff44
   31210:	ldr	r3, [fp, #-188]	; 0xffffff44
   31214:	str	r3, [fp, #-100]	; 0xffffff9c
   31218:	ldr	r2, [fp, #-100]	; 0xffffff9c
   3121c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   31220:	add	r3, r2, r3
   31224:	ldr	r2, [fp, #-36]	; 0xffffffdc
   31228:	cmp	r2, r3
   3122c:	blt	312ac <grisu3_diy_fp_encode_double@@Base+0x534>
   31230:	ldrd	r2, [fp, #-148]	; 0xffffff6c
   31234:	adds	r1, r2, #1
   31238:	str	r1, [fp, #-204]	; 0xffffff34
   3123c:	adc	r3, r3, #0
   31240:	str	r3, [fp, #-200]	; 0xffffff38
   31244:	ldrd	r2, [fp, #-204]	; 0xffffff34
   31248:	strd	r2, [fp, #-148]	; 0xffffff6c
   3124c:	ldrd	r0, [fp, #-148]	; 0xffffff6c
   31250:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   31254:	adds	ip, r2, r2
   31258:	str	ip, [fp, #-220]	; 0xffffff24
   3125c:	adc	r3, r3, r3
   31260:	str	r3, [fp, #-216]	; 0xffffff28
   31264:	ldrd	r2, [fp, #-220]	; 0xffffff24
   31268:	and	ip, r0, r2
   3126c:	str	ip, [fp, #-212]	; 0xffffff2c
   31270:	and	r3, r1, r3
   31274:	str	r3, [fp, #-208]	; 0xffffff30
   31278:	ldrd	r2, [fp, #-212]	; 0xffffff2c
   3127c:	orrs	r3, r2, r3
   31280:	beq	312ac <grisu3_diy_fp_encode_double@@Base+0x534>
   31284:	ldrd	r0, [fp, #-148]	; 0xffffff6c
   31288:	mov	r2, #0
   3128c:	mov	r3, #0
   31290:	lsr	r2, r0, #1
   31294:	orr	r2, r2, r1, lsl #31
   31298:	lsr	r3, r1, #1
   3129c:	strd	r2, [fp, #-148]	; 0xffffff6c
   312a0:	ldr	r3, [fp, #-140]	; 0xffffff74
   312a4:	add	r3, r3, #1
   312a8:	str	r3, [fp, #-140]	; 0xffffff74
   312ac:	sub	r3, fp, #148	; 0x94
   312b0:	ldm	r3, {r0, r1, r2, r3}
   312b4:	bl	3090c <flatcc_emitter_copy_buffer@@Base+0x2f14>
   312b8:	vmov.f64	d7, d0
   312bc:	ldr	r3, [fp, #8]
   312c0:	vstr	d7, [r3]
   312c4:	ldr	r2, [fp, #-100]	; 0xffffff9c
   312c8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   312cc:	sub	r3, r2, r3
   312d0:	ldr	r2, [fp, #-96]	; 0xffffffa0
   312d4:	cmp	r2, r3
   312d8:	ble	312f4 <grisu3_diy_fp_encode_double@@Base+0x57c>
   312dc:	ldr	r2, [fp, #-100]	; 0xffffff9c
   312e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   312e4:	add	r3, r2, r3
   312e8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   312ec:	cmp	r2, r3
   312f0:	blt	312fc <grisu3_diy_fp_encode_double@@Base+0x584>
   312f4:	mov	r3, #1
   312f8:	b	31300 <grisu3_diy_fp_encode_double@@Base+0x588>
   312fc:	mov	r3, #0
   31300:	mov	r0, r3
   31304:	sub	sp, fp, #28
   31308:	ldrd	r4, [sp]
   3130c:	ldrd	r6, [sp, #8]
   31310:	ldrd	r8, [sp, #16]
   31314:	ldr	fp, [sp, #24]
   31318:	add	sp, sp, #28
   3131c:	pop	{pc}		; (ldr pc, [sp], #4)
   31320:	andeq	r7, r0, ip, lsr r8
   31324:			; <UNDEFINED> instruction: 0x000072b0
   31328:	muleq	r0, r0, r3
   3132c:	andeq	r8, r1, ip, ror #10
   31330:	str	fp, [sp, #-8]!
   31334:	str	lr, [sp, #4]
   31338:	add	fp, sp, #4
   3133c:	sub	sp, sp, #48	; 0x30
   31340:	str	r0, [fp, #-32]	; 0xffffffe0
   31344:	str	r1, [fp, #-36]	; 0xffffffdc
   31348:	str	r2, [fp, #-40]	; 0xffffffd8
   3134c:	movw	r3, #309	; 0x135
   31350:	str	r3, [fp, #-16]
   31354:	movw	r3, #65212	; 0xfebc
   31358:	movt	r3, #65535	; 0xffff
   3135c:	str	r3, [fp, #-20]	; 0xffffffec
   31360:	ldrd	r2, [fp, #4]
   31364:	orrs	r3, r2, r3
   31368:	beq	3137c <grisu3_diy_fp_encode_double@@Base+0x604>
   3136c:	ldr	r2, [fp, #12]
   31370:	ldr	r3, [fp, #-20]	; 0xffffffec
   31374:	cmp	r2, r3
   31378:	bge	31390 <grisu3_diy_fp_encode_double@@Base+0x618>
   3137c:	ldr	r1, [fp, #24]
   31380:	mov	r2, #0
   31384:	mov	r3, #0
   31388:	strd	r2, [r1]
   3138c:	b	3197c <grisu3_diy_fp_encode_double@@Base+0xc04>
   31390:	ldr	r3, [fp, #12]
   31394:	sub	r3, r3, #1
   31398:	ldr	r2, [fp, #-16]
   3139c:	cmp	r2, r3
   313a0:	bge	313c4 <grisu3_diy_fp_encode_double@@Base+0x64c>
   313a4:	mov	r0, #0
   313a8:	mov	r1, #0
   313ac:	movt	r1, #32752	; 0x7ff0
   313b0:	bl	30190 <flatcc_emitter_copy_buffer@@Base+0x2798>
   313b4:	vmov.f64	d7, d0
   313b8:	ldr	r3, [fp, #24]
   313bc:	vstr	d7, [r3]
   313c0:	b	3197c <grisu3_diy_fp_encode_double@@Base+0xc04>
   313c4:	ldrd	r2, [fp, #4]
   313c8:	mvn	r0, #0
   313cc:	movw	r1, #65535	; 0xffff
   313d0:	movt	r1, #31
   313d4:	cmp	r3, r1
   313d8:	cmpeq	r2, r0
   313dc:	bhi	3185c <grisu3_diy_fp_encode_double@@Base+0xae4>
   313e0:	ldr	r3, [fp, #12]
   313e4:	cmp	r3, #0
   313e8:	blt	3185c <grisu3_diy_fp_encode_double@@Base+0xae4>
   313ec:	ldr	r3, [fp, #12]
   313f0:	cmp	r3, #22
   313f4:	bgt	3185c <grisu3_diy_fp_encode_double@@Base+0xae4>
   313f8:	ldrd	r0, [fp, #4]
   313fc:	bl	369a4 <flatcc_json_parser_struct_as_root@@Base+0x474>
   31400:	mov	r2, r0
   31404:	mov	r3, r1
   31408:	strd	r2, [fp, #-12]
   3140c:	ldr	r2, [fp, #12]
   31410:	ldr	r3, [fp, #16]
   31414:	sub	r3, r2, r3
   31418:	add	r3, r3, #22
   3141c:	cmp	r3, #44	; 0x2c
   31420:	addls	pc, pc, r3, lsl #2
   31424:	b	3184c <grisu3_diy_fp_encode_double@@Base+0xad4>
   31428:	b	314dc <grisu3_diy_fp_encode_double@@Base+0x764>
   3142c:	b	314f0 <grisu3_diy_fp_encode_double@@Base+0x778>
   31430:	b	31504 <grisu3_diy_fp_encode_double@@Base+0x78c>
   31434:	b	31518 <grisu3_diy_fp_encode_double@@Base+0x7a0>
   31438:	b	3152c <grisu3_diy_fp_encode_double@@Base+0x7b4>
   3143c:	b	31540 <grisu3_diy_fp_encode_double@@Base+0x7c8>
   31440:	b	31554 <grisu3_diy_fp_encode_double@@Base+0x7dc>
   31444:	b	31568 <grisu3_diy_fp_encode_double@@Base+0x7f0>
   31448:	b	3157c <grisu3_diy_fp_encode_double@@Base+0x804>
   3144c:	b	31590 <grisu3_diy_fp_encode_double@@Base+0x818>
   31450:	b	315a4 <grisu3_diy_fp_encode_double@@Base+0x82c>
   31454:	b	315b8 <grisu3_diy_fp_encode_double@@Base+0x840>
   31458:	b	315cc <grisu3_diy_fp_encode_double@@Base+0x854>
   3145c:	b	315e0 <grisu3_diy_fp_encode_double@@Base+0x868>
   31460:	b	315f4 <grisu3_diy_fp_encode_double@@Base+0x87c>
   31464:	b	31608 <grisu3_diy_fp_encode_double@@Base+0x890>
   31468:	b	3161c <grisu3_diy_fp_encode_double@@Base+0x8a4>
   3146c:	b	31630 <grisu3_diy_fp_encode_double@@Base+0x8b8>
   31470:	b	31644 <grisu3_diy_fp_encode_double@@Base+0x8cc>
   31474:	b	31658 <grisu3_diy_fp_encode_double@@Base+0x8e0>
   31478:	b	3166c <grisu3_diy_fp_encode_double@@Base+0x8f4>
   3147c:	b	31680 <grisu3_diy_fp_encode_double@@Base+0x908>
   31480:	b	3184c <grisu3_diy_fp_encode_double@@Base+0xad4>
   31484:	b	31694 <grisu3_diy_fp_encode_double@@Base+0x91c>
   31488:	b	316a8 <grisu3_diy_fp_encode_double@@Base+0x930>
   3148c:	b	316bc <grisu3_diy_fp_encode_double@@Base+0x944>
   31490:	b	316d0 <grisu3_diy_fp_encode_double@@Base+0x958>
   31494:	b	316e4 <grisu3_diy_fp_encode_double@@Base+0x96c>
   31498:	b	316f8 <grisu3_diy_fp_encode_double@@Base+0x980>
   3149c:	b	3170c <grisu3_diy_fp_encode_double@@Base+0x994>
   314a0:	b	31720 <grisu3_diy_fp_encode_double@@Base+0x9a8>
   314a4:	b	31734 <grisu3_diy_fp_encode_double@@Base+0x9bc>
   314a8:	b	31748 <grisu3_diy_fp_encode_double@@Base+0x9d0>
   314ac:	b	3175c <grisu3_diy_fp_encode_double@@Base+0x9e4>
   314b0:	b	31770 <grisu3_diy_fp_encode_double@@Base+0x9f8>
   314b4:	b	31784 <grisu3_diy_fp_encode_double@@Base+0xa0c>
   314b8:	b	31798 <grisu3_diy_fp_encode_double@@Base+0xa20>
   314bc:	b	317ac <grisu3_diy_fp_encode_double@@Base+0xa34>
   314c0:	b	317c0 <grisu3_diy_fp_encode_double@@Base+0xa48>
   314c4:	b	317d4 <grisu3_diy_fp_encode_double@@Base+0xa5c>
   314c8:	b	317e8 <grisu3_diy_fp_encode_double@@Base+0xa70>
   314cc:	b	317fc <grisu3_diy_fp_encode_double@@Base+0xa84>
   314d0:	b	31810 <grisu3_diy_fp_encode_double@@Base+0xa98>
   314d4:	b	31824 <grisu3_diy_fp_encode_double@@Base+0xaac>
   314d8:	b	31838 <grisu3_diy_fp_encode_double@@Base+0xac0>
   314dc:	vldr	d6, [fp, #-12]
   314e0:	vldr	d5, [pc, #992]	; 318c8 <grisu3_diy_fp_encode_double@@Base+0xb50>
   314e4:	vdiv.f64	d7, d6, d5
   314e8:	vstr	d7, [fp, #-12]
   314ec:	b	3184c <grisu3_diy_fp_encode_double@@Base+0xad4>
   314f0:	vldr	d6, [fp, #-12]
   314f4:	vldr	d5, [pc, #980]	; 318d0 <grisu3_diy_fp_encode_double@@Base+0xb58>
   314f8:	vdiv.f64	d7, d6, d5
   314fc:	vstr	d7, [fp, #-12]
   31500:	b	3184c <grisu3_diy_fp_encode_double@@Base+0xad4>
   31504:	vldr	d6, [fp, #-12]
   31508:	vldr	d5, [pc, #968]	; 318d8 <grisu3_diy_fp_encode_double@@Base+0xb60>
   3150c:	vdiv.f64	d7, d6, d5
   31510:	vstr	d7, [fp, #-12]
   31514:	b	3184c <grisu3_diy_fp_encode_double@@Base+0xad4>
   31518:	vldr	d6, [fp, #-12]
   3151c:	vldr	d5, [pc, #956]	; 318e0 <grisu3_diy_fp_encode_double@@Base+0xb68>
   31520:	vdiv.f64	d7, d6, d5
   31524:	vstr	d7, [fp, #-12]
   31528:	b	3184c <grisu3_diy_fp_encode_double@@Base+0xad4>
   3152c:	vldr	d6, [fp, #-12]
   31530:	vldr	d5, [pc, #944]	; 318e8 <grisu3_diy_fp_encode_double@@Base+0xb70>
   31534:	vdiv.f64	d7, d6, d5
   31538:	vstr	d7, [fp, #-12]
   3153c:	b	3184c <grisu3_diy_fp_encode_double@@Base+0xad4>
   31540:	vldr	d6, [fp, #-12]
   31544:	vldr	d5, [pc, #932]	; 318f0 <grisu3_diy_fp_encode_double@@Base+0xb78>
   31548:	vdiv.f64	d7, d6, d5
   3154c:	vstr	d7, [fp, #-12]
   31550:	b	3184c <grisu3_diy_fp_encode_double@@Base+0xad4>
   31554:	vldr	d6, [fp, #-12]
   31558:	vldr	d5, [pc, #920]	; 318f8 <grisu3_diy_fp_encode_double@@Base+0xb80>
   3155c:	vdiv.f64	d7, d6, d5
   31560:	vstr	d7, [fp, #-12]
   31564:	b	3184c <grisu3_diy_fp_encode_double@@Base+0xad4>
   31568:	vldr	d6, [fp, #-12]
   3156c:	vldr	d5, [pc, #908]	; 31900 <grisu3_diy_fp_encode_double@@Base+0xb88>
   31570:	vdiv.f64	d7, d6, d5
   31574:	vstr	d7, [fp, #-12]
   31578:	b	3184c <grisu3_diy_fp_encode_double@@Base+0xad4>
   3157c:	vldr	d6, [fp, #-12]
   31580:	vldr	d5, [pc, #896]	; 31908 <grisu3_diy_fp_encode_double@@Base+0xb90>
   31584:	vdiv.f64	d7, d6, d5
   31588:	vstr	d7, [fp, #-12]
   3158c:	b	3184c <grisu3_diy_fp_encode_double@@Base+0xad4>
   31590:	vldr	d6, [fp, #-12]
   31594:	vldr	d5, [pc, #884]	; 31910 <grisu3_diy_fp_encode_double@@Base+0xb98>
   31598:	vdiv.f64	d7, d6, d5
   3159c:	vstr	d7, [fp, #-12]
   315a0:	b	3184c <grisu3_diy_fp_encode_double@@Base+0xad4>
   315a4:	vldr	d6, [fp, #-12]
   315a8:	vldr	d5, [pc, #872]	; 31918 <grisu3_diy_fp_encode_double@@Base+0xba0>
   315ac:	vdiv.f64	d7, d6, d5
   315b0:	vstr	d7, [fp, #-12]
   315b4:	b	3184c <grisu3_diy_fp_encode_double@@Base+0xad4>
   315b8:	vldr	d6, [fp, #-12]
   315bc:	vldr	d5, [pc, #860]	; 31920 <grisu3_diy_fp_encode_double@@Base+0xba8>
   315c0:	vdiv.f64	d7, d6, d5
   315c4:	vstr	d7, [fp, #-12]
   315c8:	b	3184c <grisu3_diy_fp_encode_double@@Base+0xad4>
   315cc:	vldr	d6, [fp, #-12]
   315d0:	vldr	d5, [pc, #848]	; 31928 <grisu3_diy_fp_encode_double@@Base+0xbb0>
   315d4:	vdiv.f64	d7, d6, d5
   315d8:	vstr	d7, [fp, #-12]
   315dc:	b	3184c <grisu3_diy_fp_encode_double@@Base+0xad4>
   315e0:	vldr	d6, [fp, #-12]
   315e4:	vldr	d5, [pc, #836]	; 31930 <grisu3_diy_fp_encode_double@@Base+0xbb8>
   315e8:	vdiv.f64	d7, d6, d5
   315ec:	vstr	d7, [fp, #-12]
   315f0:	b	3184c <grisu3_diy_fp_encode_double@@Base+0xad4>
   315f4:	vldr	d6, [fp, #-12]
   315f8:	vldr	d5, [pc, #824]	; 31938 <grisu3_diy_fp_encode_double@@Base+0xbc0>
   315fc:	vdiv.f64	d7, d6, d5
   31600:	vstr	d7, [fp, #-12]
   31604:	b	3184c <grisu3_diy_fp_encode_double@@Base+0xad4>
   31608:	vldr	d6, [fp, #-12]
   3160c:	vldr	d5, [pc, #812]	; 31940 <grisu3_diy_fp_encode_double@@Base+0xbc8>
   31610:	vdiv.f64	d7, d6, d5
   31614:	vstr	d7, [fp, #-12]
   31618:	b	3184c <grisu3_diy_fp_encode_double@@Base+0xad4>
   3161c:	vldr	d6, [fp, #-12]
   31620:	vldr	d5, [pc, #800]	; 31948 <grisu3_diy_fp_encode_double@@Base+0xbd0>
   31624:	vdiv.f64	d7, d6, d5
   31628:	vstr	d7, [fp, #-12]
   3162c:	b	3184c <grisu3_diy_fp_encode_double@@Base+0xad4>
   31630:	vldr	d6, [fp, #-12]
   31634:	vldr	d5, [pc, #788]	; 31950 <grisu3_diy_fp_encode_double@@Base+0xbd8>
   31638:	vdiv.f64	d7, d6, d5
   3163c:	vstr	d7, [fp, #-12]
   31640:	b	3184c <grisu3_diy_fp_encode_double@@Base+0xad4>
   31644:	vldr	d6, [fp, #-12]
   31648:	vldr	d5, [pc, #776]	; 31958 <grisu3_diy_fp_encode_double@@Base+0xbe0>
   3164c:	vdiv.f64	d7, d6, d5
   31650:	vstr	d7, [fp, #-12]
   31654:	b	3184c <grisu3_diy_fp_encode_double@@Base+0xad4>
   31658:	vldr	d6, [fp, #-12]
   3165c:	vldr	d5, [pc, #764]	; 31960 <grisu3_diy_fp_encode_double@@Base+0xbe8>
   31660:	vdiv.f64	d7, d6, d5
   31664:	vstr	d7, [fp, #-12]
   31668:	b	3184c <grisu3_diy_fp_encode_double@@Base+0xad4>
   3166c:	vldr	d6, [fp, #-12]
   31670:	vldr	d5, [pc, #752]	; 31968 <grisu3_diy_fp_encode_double@@Base+0xbf0>
   31674:	vdiv.f64	d7, d6, d5
   31678:	vstr	d7, [fp, #-12]
   3167c:	b	3184c <grisu3_diy_fp_encode_double@@Base+0xad4>
   31680:	vldr	d6, [fp, #-12]
   31684:	vldr	d5, [pc, #740]	; 31970 <grisu3_diy_fp_encode_double@@Base+0xbf8>
   31688:	vdiv.f64	d7, d6, d5
   3168c:	vstr	d7, [fp, #-12]
   31690:	b	3184c <grisu3_diy_fp_encode_double@@Base+0xad4>
   31694:	vldr	d7, [fp, #-12]
   31698:	vldr	d6, [pc, #720]	; 31970 <grisu3_diy_fp_encode_double@@Base+0xbf8>
   3169c:	vmul.f64	d7, d7, d6
   316a0:	vstr	d7, [fp, #-12]
   316a4:	b	3184c <grisu3_diy_fp_encode_double@@Base+0xad4>
   316a8:	vldr	d7, [fp, #-12]
   316ac:	vldr	d6, [pc, #692]	; 31968 <grisu3_diy_fp_encode_double@@Base+0xbf0>
   316b0:	vmul.f64	d7, d7, d6
   316b4:	vstr	d7, [fp, #-12]
   316b8:	b	3184c <grisu3_diy_fp_encode_double@@Base+0xad4>
   316bc:	vldr	d7, [fp, #-12]
   316c0:	vldr	d6, [pc, #664]	; 31960 <grisu3_diy_fp_encode_double@@Base+0xbe8>
   316c4:	vmul.f64	d7, d7, d6
   316c8:	vstr	d7, [fp, #-12]
   316cc:	b	3184c <grisu3_diy_fp_encode_double@@Base+0xad4>
   316d0:	vldr	d7, [fp, #-12]
   316d4:	vldr	d6, [pc, #636]	; 31958 <grisu3_diy_fp_encode_double@@Base+0xbe0>
   316d8:	vmul.f64	d7, d7, d6
   316dc:	vstr	d7, [fp, #-12]
   316e0:	b	3184c <grisu3_diy_fp_encode_double@@Base+0xad4>
   316e4:	vldr	d7, [fp, #-12]
   316e8:	vldr	d6, [pc, #608]	; 31950 <grisu3_diy_fp_encode_double@@Base+0xbd8>
   316ec:	vmul.f64	d7, d7, d6
   316f0:	vstr	d7, [fp, #-12]
   316f4:	b	3184c <grisu3_diy_fp_encode_double@@Base+0xad4>
   316f8:	vldr	d7, [fp, #-12]
   316fc:	vldr	d6, [pc, #580]	; 31948 <grisu3_diy_fp_encode_double@@Base+0xbd0>
   31700:	vmul.f64	d7, d7, d6
   31704:	vstr	d7, [fp, #-12]
   31708:	b	3184c <grisu3_diy_fp_encode_double@@Base+0xad4>
   3170c:	vldr	d7, [fp, #-12]
   31710:	vldr	d6, [pc, #552]	; 31940 <grisu3_diy_fp_encode_double@@Base+0xbc8>
   31714:	vmul.f64	d7, d7, d6
   31718:	vstr	d7, [fp, #-12]
   3171c:	b	3184c <grisu3_diy_fp_encode_double@@Base+0xad4>
   31720:	vldr	d7, [fp, #-12]
   31724:	vldr	d6, [pc, #524]	; 31938 <grisu3_diy_fp_encode_double@@Base+0xbc0>
   31728:	vmul.f64	d7, d7, d6
   3172c:	vstr	d7, [fp, #-12]
   31730:	b	3184c <grisu3_diy_fp_encode_double@@Base+0xad4>
   31734:	vldr	d7, [fp, #-12]
   31738:	vldr	d6, [pc, #496]	; 31930 <grisu3_diy_fp_encode_double@@Base+0xbb8>
   3173c:	vmul.f64	d7, d7, d6
   31740:	vstr	d7, [fp, #-12]
   31744:	b	3184c <grisu3_diy_fp_encode_double@@Base+0xad4>
   31748:	vldr	d7, [fp, #-12]
   3174c:	vldr	d6, [pc, #468]	; 31928 <grisu3_diy_fp_encode_double@@Base+0xbb0>
   31750:	vmul.f64	d7, d7, d6
   31754:	vstr	d7, [fp, #-12]
   31758:	b	3184c <grisu3_diy_fp_encode_double@@Base+0xad4>
   3175c:	vldr	d7, [fp, #-12]
   31760:	vldr	d6, [pc, #440]	; 31920 <grisu3_diy_fp_encode_double@@Base+0xba8>
   31764:	vmul.f64	d7, d7, d6
   31768:	vstr	d7, [fp, #-12]
   3176c:	b	3184c <grisu3_diy_fp_encode_double@@Base+0xad4>
   31770:	vldr	d7, [fp, #-12]
   31774:	vldr	d6, [pc, #412]	; 31918 <grisu3_diy_fp_encode_double@@Base+0xba0>
   31778:	vmul.f64	d7, d7, d6
   3177c:	vstr	d7, [fp, #-12]
   31780:	b	3184c <grisu3_diy_fp_encode_double@@Base+0xad4>
   31784:	vldr	d7, [fp, #-12]
   31788:	vldr	d6, [pc, #384]	; 31910 <grisu3_diy_fp_encode_double@@Base+0xb98>
   3178c:	vmul.f64	d7, d7, d6
   31790:	vstr	d7, [fp, #-12]
   31794:	b	3184c <grisu3_diy_fp_encode_double@@Base+0xad4>
   31798:	vldr	d7, [fp, #-12]
   3179c:	vldr	d6, [pc, #356]	; 31908 <grisu3_diy_fp_encode_double@@Base+0xb90>
   317a0:	vmul.f64	d7, d7, d6
   317a4:	vstr	d7, [fp, #-12]
   317a8:	b	3184c <grisu3_diy_fp_encode_double@@Base+0xad4>
   317ac:	vldr	d7, [fp, #-12]
   317b0:	vldr	d6, [pc, #328]	; 31900 <grisu3_diy_fp_encode_double@@Base+0xb88>
   317b4:	vmul.f64	d7, d7, d6
   317b8:	vstr	d7, [fp, #-12]
   317bc:	b	3184c <grisu3_diy_fp_encode_double@@Base+0xad4>
   317c0:	vldr	d7, [fp, #-12]
   317c4:	vldr	d6, [pc, #300]	; 318f8 <grisu3_diy_fp_encode_double@@Base+0xb80>
   317c8:	vmul.f64	d7, d7, d6
   317cc:	vstr	d7, [fp, #-12]
   317d0:	b	3184c <grisu3_diy_fp_encode_double@@Base+0xad4>
   317d4:	vldr	d7, [fp, #-12]
   317d8:	vldr	d6, [pc, #272]	; 318f0 <grisu3_diy_fp_encode_double@@Base+0xb78>
   317dc:	vmul.f64	d7, d7, d6
   317e0:	vstr	d7, [fp, #-12]
   317e4:	b	3184c <grisu3_diy_fp_encode_double@@Base+0xad4>
   317e8:	vldr	d7, [fp, #-12]
   317ec:	vldr	d6, [pc, #244]	; 318e8 <grisu3_diy_fp_encode_double@@Base+0xb70>
   317f0:	vmul.f64	d7, d7, d6
   317f4:	vstr	d7, [fp, #-12]
   317f8:	b	3184c <grisu3_diy_fp_encode_double@@Base+0xad4>
   317fc:	vldr	d7, [fp, #-12]
   31800:	vldr	d6, [pc, #216]	; 318e0 <grisu3_diy_fp_encode_double@@Base+0xb68>
   31804:	vmul.f64	d7, d7, d6
   31808:	vstr	d7, [fp, #-12]
   3180c:	b	3184c <grisu3_diy_fp_encode_double@@Base+0xad4>
   31810:	vldr	d7, [fp, #-12]
   31814:	vldr	d6, [pc, #188]	; 318d8 <grisu3_diy_fp_encode_double@@Base+0xb60>
   31818:	vmul.f64	d7, d7, d6
   3181c:	vstr	d7, [fp, #-12]
   31820:	b	3184c <grisu3_diy_fp_encode_double@@Base+0xad4>
   31824:	vldr	d7, [fp, #-12]
   31828:	vldr	d6, [pc, #160]	; 318d0 <grisu3_diy_fp_encode_double@@Base+0xb58>
   3182c:	vmul.f64	d7, d7, d6
   31830:	vstr	d7, [fp, #-12]
   31834:	b	3184c <grisu3_diy_fp_encode_double@@Base+0xad4>
   31838:	vldr	d7, [fp, #-12]
   3183c:	vldr	d6, [pc, #132]	; 318c8 <grisu3_diy_fp_encode_double@@Base+0xb50>
   31840:	vmul.f64	d7, d7, d6
   31844:	vstr	d7, [fp, #-12]
   31848:	nop	{0}
   3184c:	ldr	r1, [fp, #24]
   31850:	ldrd	r2, [fp, #-12]
   31854:	strd	r2, [r1]
   31858:	b	3197c <grisu3_diy_fp_encode_double@@Base+0xc04>
   3185c:	ldr	r3, [fp, #24]
   31860:	str	r3, [sp, #4]
   31864:	ldr	r3, [fp, #20]
   31868:	str	r3, [sp]
   3186c:	ldr	r3, [fp, #16]
   31870:	ldr	r2, [fp, #12]
   31874:	ldrd	r0, [fp, #4]
   31878:	bl	30d78 <grisu3_diy_fp_encode_double@@Base>
   3187c:	mov	r3, r0
   31880:	cmp	r3, #0
   31884:	bne	31978 <grisu3_diy_fp_encode_double@@Base+0xc00>
   31888:	sub	r3, fp, #24
   3188c:	mov	r1, r3
   31890:	ldr	r0, [fp, #-32]	; 0xffffffe0
   31894:	bl	12664 <strtod@plt>
   31898:	vmov.f64	d7, d0
   3189c:	ldr	r3, [fp, #24]
   318a0:	vstr	d7, [r3]
   318a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   318a8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   318ac:	cmp	r2, r3
   318b0:	bls	318bc <grisu3_diy_fp_encode_double@@Base+0xb44>
   318b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   318b8:	b	319a0 <grisu3_diy_fp_encode_double@@Base+0xc28>
   318bc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   318c0:	b	319a0 <grisu3_diy_fp_encode_double@@Base+0xc28>
   318c4:	nop	{0}
   318c8:			; <UNDEFINED> instruction: 0x064dd592
   318cc:	strmi	pc, [r0], #207	; 0xcf
   318d0:	usatle	lr, #2, r0, asr #30
   318d4:	strbmi	r1, [fp], #-2788	; 0xfffff51c
   318d8:	ldmvc	r5!, {r6, sl, fp, pc}
   318dc:	ldrmi	sl, [r5], #-3869	; 0xfffff0e3
   318e0:	addsvs	r3, r1, r0, lsl #26
   318e4:	mvnmi	r5, #228, 16	; 0xe40000
   318e8:	strbvs	ip, [lr, -r0, lsl #16]
   318ec:			; <UNDEFINED> instruction: 0x43abc16d
   318f0:	ldrbhi	sl, [r8]
   318f4:	cmnmi	r6, #1459617792	; 0x57000000
   318f8:	strbcc	r8, [r0, r0]!
   318fc:	movtmi	ip, #4985	; 0x1379
   31900:	ldrtcs	r0, [r4], -r0
   31904:	movwmi	r6, #52213	; 0xcbf5
   31908:	cdpne	0, 9, cr0, cr0, cr0, {0}
   3190c:	sbcsmi	fp, r6, #196, 24	; 0xc400
   31910:	strb	r0, [r0, #-0]
   31914:	adcmi	r3, r2, #156	; 0x9c
   31918:	andge	r0, r0, #0
   3191c:	rsbmi	r1, sp, #148, 20	; 0x94000
   31920:	stmda	r0, {}	; <UNPREDICTABLE>
   31924:	eorsmi	r4, r7, #7733248	; 0x760000
   31928:	andcs	r0, r0, r0
   3192c:	andmi	sl, r2, #95	; 0x5f
   31930:	andeq	r0, r0, r0
   31934:	bicmi	ip, sp, r5, ror #26
   31938:	andeq	r0, r0, r0
   3193c:	orrsmi	sp, r7, r4, lsl #15
   31940:	andeq	r0, r0, r0
   31944:	ldrdmi	r1, [r3, #-32]!	; 0xffffffe0
   31948:	andeq	r0, r0, r0
   3194c:	smlawbmi	lr, r0, r4, r8
   31950:	andeq	r0, r0, r0
   31954:	rscsmi	r6, r8, r0, lsl #20
   31958:	andeq	r0, r0, r0
   3195c:	sbcmi	r8, r3, r0, lsl #16
   31960:	andeq	r0, r0, r0
   31964:	addmi	r4, pc, r0
   31968:	andeq	r0, r0, r0
   3196c:	subsmi	r0, r9, r0
   31970:	andeq	r0, r0, r0
   31974:	eormi	r0, r4, r0
   31978:	nop	{0}
   3197c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   31980:	cmp	r3, #0
   31984:	beq	3199c <grisu3_diy_fp_encode_double@@Base+0xc24>
   31988:	ldr	r3, [fp, #24]
   3198c:	vldr	d7, [r3]
   31990:	vneg.f64	d7, d7
   31994:	ldr	r3, [fp, #24]
   31998:	vstr	d7, [r3]
   3199c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   319a0:	mov	r0, r3
   319a4:	sub	sp, fp, #4
   319a8:	ldr	fp, [sp]
   319ac:	add	sp, sp, #4
   319b0:	pop	{pc}		; (ldr pc, [sp], #4)
   319b4:	push	{fp}		; (str fp, [sp, #-4]!)
   319b8:	add	fp, sp, #0
   319bc:	sub	sp, sp, #20
   319c0:	str	r0, [fp, #-8]
   319c4:	str	r1, [fp, #-12]
   319c8:	str	r2, [fp, #-16]
   319cc:	str	r3, [fp, #-20]	; 0xffffffec
   319d0:	ldr	r1, [fp, #-20]	; 0xffffffec
   319d4:	mov	r2, #0
   319d8:	mov	r3, #0
   319dc:	strd	r2, [r1]
   319e0:	ldr	r3, [fp, #-8]
   319e4:	mov	r0, r3
   319e8:	add	sp, fp, #0
   319ec:	pop	{fp}		; (ldr fp, [sp], #4)
   319f0:	bx	lr
   319f4:	strd	r4, [sp, #-32]!	; 0xffffffe0
   319f8:	strd	r6, [sp, #8]
   319fc:	strd	r8, [sp, #16]
   31a00:	str	fp, [sp, #24]
   31a04:	str	lr, [sp, #28]
   31a08:	add	fp, sp, #28
   31a0c:	sub	sp, sp, #136	; 0x88
   31a10:	str	r0, [fp, #-80]	; 0xffffffb0
   31a14:	str	r1, [fp, #-84]	; 0xffffffac
   31a18:	str	r2, [fp, #-88]	; 0xffffffa8
   31a1c:	mov	r3, #0
   31a20:	str	r3, [fp, #-36]	; 0xffffffdc
   31a24:	mov	r3, #0
   31a28:	str	r3, [fp, #-40]	; 0xffffffd8
   31a2c:	mov	r2, #0
   31a30:	mov	r3, #0
   31a34:	strd	r2, [fp, #-52]	; 0xffffffcc
   31a38:	mov	r3, #0
   31a3c:	str	r3, [fp, #-56]	; 0xffffffc8
   31a40:	mov	r3, #0
   31a44:	str	r3, [fp, #-60]	; 0xffffffc4
   31a48:	mov	r3, #0
   31a4c:	str	r3, [fp, #-64]	; 0xffffffc0
   31a50:	mov	r3, #0
   31a54:	str	r3, [fp, #-68]	; 0xffffffbc
   31a58:	ldr	r1, [fp, #-88]	; 0xffffffa8
   31a5c:	mov	r2, #0
   31a60:	mov	r3, #0
   31a64:	strd	r2, [r1]
   31a68:	ldr	r3, [fp, #-84]	; 0xffffffac
   31a6c:	add	r2, r3, #1
   31a70:	ldr	r3, [fp, #-80]	; 0xffffffb0
   31a74:	add	r3, r3, r2
   31a78:	str	r3, [fp, #-32]	; 0xffffffe0
   31a7c:	ldr	r3, [fp, #-84]	; 0xffffffac
   31a80:	cmp	r3, #1000	; 0x3e8
   31a84:	ble	31a98 <grisu3_diy_fp_encode_double@@Base+0xd20>
   31a88:	ldr	r3, [fp, #-80]	; 0xffffffb0
   31a8c:	add	r3, r3, #1000	; 0x3e8
   31a90:	add	r3, r3, #1
   31a94:	str	r3, [fp, #-32]	; 0xffffffe0
   31a98:	ldr	r2, [fp, #-80]	; 0xffffffb0
   31a9c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   31aa0:	cmp	r2, r3
   31aa4:	bne	31ab0 <grisu3_diy_fp_encode_double@@Base+0xd38>
   31aa8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   31aac:	b	32278 <grisu3_diy_fp_encode_double@@Base+0x1500>
   31ab0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   31ab4:	str	r3, [fp, #-72]	; 0xffffffb8
   31ab8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   31abc:	ldrb	r3, [r3]
   31ac0:	cmp	r3, #45	; 0x2d
   31ac4:	bne	31af4 <grisu3_diy_fp_encode_double@@Base+0xd7c>
   31ac8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   31acc:	add	r3, r3, #1
   31ad0:	str	r3, [fp, #-80]	; 0xffffffb0
   31ad4:	mov	r3, #1
   31ad8:	str	r3, [fp, #-36]	; 0xffffffdc
   31adc:	ldr	r2, [fp, #-80]	; 0xffffffb0
   31ae0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   31ae4:	cmp	r2, r3
   31ae8:	bne	31af4 <grisu3_diy_fp_encode_double@@Base+0xd7c>
   31aec:	mov	r3, #0
   31af0:	b	32278 <grisu3_diy_fp_encode_double@@Base+0x1500>
   31af4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   31af8:	ldrb	r3, [r3]
   31afc:	cmp	r3, #48	; 0x30
   31b00:	bne	31ba0 <grisu3_diy_fp_encode_double@@Base+0xe28>
   31b04:	ldr	r3, [fp, #-80]	; 0xffffffb0
   31b08:	add	r3, r3, #1
   31b0c:	str	r3, [fp, #-80]	; 0xffffffb0
   31b10:	ldr	r2, [fp, #-80]	; 0xffffffb0
   31b14:	ldr	r3, [fp, #-32]	; 0xffffffe0
   31b18:	cmp	r2, r3
   31b1c:	beq	31b7c <grisu3_diy_fp_encode_double@@Base+0xe04>
   31b20:	ldr	r3, [fp, #-80]	; 0xffffffb0
   31b24:	ldrb	r3, [r3]
   31b28:	orr	r3, r3, #32
   31b2c:	uxtb	r3, r3
   31b30:	cmp	r3, #120	; 0x78
   31b34:	bne	31b7c <grisu3_diy_fp_encode_double@@Base+0xe04>
   31b38:	ldr	r3, [fp, #-88]	; 0xffffffa8
   31b3c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   31b40:	ldr	r1, [fp, #-32]	; 0xffffffe0
   31b44:	ldr	r0, [fp, #-80]	; 0xffffffb0
   31b48:	bl	319b4 <grisu3_diy_fp_encode_double@@Base+0xc3c>
   31b4c:	str	r0, [fp, #-76]	; 0xffffffb4
   31b50:	ldr	r2, [fp, #-76]	; 0xffffffb4
   31b54:	ldr	r3, [fp, #-80]	; 0xffffffb0
   31b58:	cmp	r2, r3
   31b5c:	bne	31b68 <grisu3_diy_fp_encode_double@@Base+0xdf0>
   31b60:	ldr	r3, [fp, #-72]	; 0xffffffb8
   31b64:	b	32278 <grisu3_diy_fp_encode_double@@Base+0x1500>
   31b68:	ldr	r3, [fp, #-76]	; 0xffffffb4
   31b6c:	b	32278 <grisu3_diy_fp_encode_double@@Base+0x1500>
   31b70:	ldr	r3, [fp, #-80]	; 0xffffffb0
   31b74:	add	r3, r3, #1
   31b78:	str	r3, [fp, #-80]	; 0xffffffb0
   31b7c:	ldr	r2, [fp, #-80]	; 0xffffffb0
   31b80:	ldr	r3, [fp, #-32]	; 0xffffffe0
   31b84:	cmp	r2, r3
   31b88:	beq	31bfc <grisu3_diy_fp_encode_double@@Base+0xe84>
   31b8c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   31b90:	ldrb	r3, [r3]
   31b94:	cmp	r3, #48	; 0x30
   31b98:	beq	31b70 <grisu3_diy_fp_encode_double@@Base+0xdf8>
   31b9c:	b	31bfc <grisu3_diy_fp_encode_double@@Base+0xe84>
   31ba0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   31ba4:	ldrb	r3, [r3]
   31ba8:	cmp	r3, #48	; 0x30
   31bac:	bls	31bc0 <grisu3_diy_fp_encode_double@@Base+0xe48>
   31bb0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   31bb4:	ldrb	r3, [r3]
   31bb8:	cmp	r3, #57	; 0x39
   31bbc:	bls	31bdc <grisu3_diy_fp_encode_double@@Base+0xe64>
   31bc0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   31bc4:	cmp	r3, #0
   31bc8:	bne	31bd4 <grisu3_diy_fp_encode_double@@Base+0xe5c>
   31bcc:	ldr	r3, [fp, #-72]	; 0xffffffb8
   31bd0:	b	32278 <grisu3_diy_fp_encode_double@@Base+0x1500>
   31bd4:	mov	r3, #0
   31bd8:	b	32278 <grisu3_diy_fp_encode_double@@Base+0x1500>
   31bdc:	ldr	r2, [fp, #-80]	; 0xffffffb0
   31be0:	add	r3, r2, #1
   31be4:	str	r3, [fp, #-80]	; 0xffffffb0
   31be8:	ldrb	r3, [r2]
   31bec:	sub	r3, r3, #48	; 0x30
   31bf0:	mov	r2, r3
   31bf4:	asr	r3, r2, #31
   31bf8:	strd	r2, [fp, #-52]	; 0xffffffcc
   31bfc:	ldr	r3, [fp, #-80]	; 0xffffffb0
   31c00:	str	r3, [fp, #-76]	; 0xffffffb4
   31c04:	b	31cec <grisu3_diy_fp_encode_double@@Base+0xf74>
   31c08:	ldrd	r0, [fp, #-52]	; 0xffffffcc
   31c0c:	add	r3, pc, #924	; 0x39c
   31c10:	ldrd	r2, [r3]
   31c14:	cmp	r1, r3
   31c18:	cmpeq	r0, r2
   31c1c:	bls	31c68 <grisu3_diy_fp_encode_double@@Base+0xef0>
   31c20:	ldr	r3, [fp, #-80]	; 0xffffffb0
   31c24:	ldrb	r3, [r3]
   31c28:	cmp	r3, #52	; 0x34
   31c2c:	movhi	r3, #1
   31c30:	movls	r3, #0
   31c34:	uxtb	r3, r3
   31c38:	uxtb	r2, r3
   31c3c:	mov	r3, #0
   31c40:	ldrd	r0, [fp, #-52]	; 0xffffffcc
   31c44:	adds	ip, r0, r2
   31c48:	str	ip, [fp, #-100]	; 0xffffff9c
   31c4c:	adc	r3, r1, r3
   31c50:	str	r3, [fp, #-96]	; 0xffffffa0
   31c54:	ldrd	r2, [fp, #-100]	; 0xffffff9c
   31c58:	strd	r2, [fp, #-52]	; 0xffffffcc
   31c5c:	mov	r3, #1
   31c60:	str	r3, [fp, #-68]	; 0xffffffbc
   31c64:	b	31d1c <grisu3_diy_fp_encode_double@@Base+0xfa4>
   31c68:	ldrd	r4, [fp, #-52]	; 0xffffffcc
   31c6c:	mov	r2, r4
   31c70:	mov	r3, r5
   31c74:	mov	r0, #0
   31c78:	mov	r1, #0
   31c7c:	lsl	r1, r3, #2
   31c80:	orr	r1, r1, r2, lsr #30
   31c84:	lsl	r0, r2, #2
   31c88:	mov	r2, r0
   31c8c:	mov	r3, r1
   31c90:	adds	r2, r2, r4
   31c94:	adc	r3, r3, r5
   31c98:	adds	r1, r2, r2
   31c9c:	str	r1, [fp, #-108]	; 0xffffff94
   31ca0:	adc	r3, r3, r3
   31ca4:	str	r3, [fp, #-104]	; 0xffffff98
   31ca8:	ldrd	r2, [fp, #-108]	; 0xffffff94
   31cac:	mov	r0, r2
   31cb0:	mov	r1, r3
   31cb4:	ldr	r2, [fp, #-80]	; 0xffffffb0
   31cb8:	add	r3, r2, #1
   31cbc:	str	r3, [fp, #-80]	; 0xffffffb0
   31cc0:	ldrb	r3, [r2]
   31cc4:	uxtb	r2, r3
   31cc8:	mov	r3, #0
   31ccc:	adds	r8, r0, r2
   31cd0:	adc	r9, r1, r3
   31cd4:	subs	r3, r8, #48	; 0x30
   31cd8:	str	r3, [fp, #-116]	; 0xffffff8c
   31cdc:	sbc	r3, r9, #0
   31ce0:	str	r3, [fp, #-112]	; 0xffffff90
   31ce4:	ldrd	r2, [fp, #-116]	; 0xffffff8c
   31ce8:	strd	r2, [fp, #-52]	; 0xffffffcc
   31cec:	ldr	r2, [fp, #-80]	; 0xffffffb0
   31cf0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   31cf4:	cmp	r2, r3
   31cf8:	beq	31d1c <grisu3_diy_fp_encode_double@@Base+0xfa4>
   31cfc:	ldr	r3, [fp, #-80]	; 0xffffffb0
   31d00:	ldrb	r3, [r3]
   31d04:	cmp	r3, #47	; 0x2f
   31d08:	bls	31d1c <grisu3_diy_fp_encode_double@@Base+0xfa4>
   31d0c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   31d10:	ldrb	r3, [r3]
   31d14:	cmp	r3, #57	; 0x39
   31d18:	bls	31c08 <grisu3_diy_fp_encode_double@@Base+0xe90>
   31d1c:	ldr	r2, [fp, #-80]	; 0xffffffb0
   31d20:	ldr	r3, [fp, #-76]	; 0xffffffb4
   31d24:	sub	r3, r2, r3
   31d28:	str	r3, [fp, #-64]	; 0xffffffc0
   31d2c:	b	31d48 <grisu3_diy_fp_encode_double@@Base+0xfd0>
   31d30:	ldr	r3, [fp, #-56]	; 0xffffffc8
   31d34:	add	r3, r3, #1
   31d38:	str	r3, [fp, #-56]	; 0xffffffc8
   31d3c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   31d40:	add	r3, r3, #1
   31d44:	str	r3, [fp, #-80]	; 0xffffffb0
   31d48:	ldr	r2, [fp, #-80]	; 0xffffffb0
   31d4c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   31d50:	cmp	r2, r3
   31d54:	beq	31d68 <grisu3_diy_fp_encode_double@@Base+0xff0>
   31d58:	ldr	r3, [fp, #-80]	; 0xffffffb0
   31d5c:	ldrb	r3, [r3]
   31d60:	cmp	r3, #48	; 0x30
   31d64:	beq	31d30 <grisu3_diy_fp_encode_double@@Base+0xfb8>
   31d68:	ldr	r2, [fp, #-80]	; 0xffffffb0
   31d6c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   31d70:	cmp	r2, r3
   31d74:	beq	31e04 <grisu3_diy_fp_encode_double@@Base+0x108c>
   31d78:	ldr	r3, [fp, #-80]	; 0xffffffb0
   31d7c:	ldrb	r3, [r3]
   31d80:	cmp	r3, #48	; 0x30
   31d84:	bls	31e04 <grisu3_diy_fp_encode_double@@Base+0x108c>
   31d88:	ldr	r3, [fp, #-80]	; 0xffffffb0
   31d8c:	ldrb	r3, [r3]
   31d90:	cmp	r3, #57	; 0x39
   31d94:	bhi	31e04 <grisu3_diy_fp_encode_double@@Base+0x108c>
   31d98:	mov	r3, #1
   31d9c:	str	r3, [fp, #-68]	; 0xffffffbc
   31da0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   31da4:	add	r3, r3, #1
   31da8:	str	r3, [fp, #-56]	; 0xffffffc8
   31dac:	ldr	r3, [fp, #-80]	; 0xffffffb0
   31db0:	add	r3, r3, #1
   31db4:	str	r3, [fp, #-80]	; 0xffffffb0
   31db8:	b	31dd4 <grisu3_diy_fp_encode_double@@Base+0x105c>
   31dbc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   31dc0:	add	r3, r3, #1
   31dc4:	str	r3, [fp, #-56]	; 0xffffffc8
   31dc8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   31dcc:	add	r3, r3, #1
   31dd0:	str	r3, [fp, #-80]	; 0xffffffb0
   31dd4:	ldr	r2, [fp, #-80]	; 0xffffffb0
   31dd8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   31ddc:	cmp	r2, r3
   31de0:	beq	31e04 <grisu3_diy_fp_encode_double@@Base+0x108c>
   31de4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   31de8:	ldrb	r3, [r3]
   31dec:	cmp	r3, #47	; 0x2f
   31df0:	bls	31e04 <grisu3_diy_fp_encode_double@@Base+0x108c>
   31df4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   31df8:	ldrb	r3, [r3]
   31dfc:	cmp	r3, #57	; 0x39
   31e00:	bls	31dbc <grisu3_diy_fp_encode_double@@Base+0x1044>
   31e04:	ldr	r2, [fp, #-80]	; 0xffffffb0
   31e08:	ldr	r3, [fp, #-32]	; 0xffffffe0
   31e0c:	cmp	r2, r3
   31e10:	beq	32074 <grisu3_diy_fp_encode_double@@Base+0x12fc>
   31e14:	ldr	r3, [fp, #-80]	; 0xffffffb0
   31e18:	ldrb	r3, [r3]
   31e1c:	cmp	r3, #46	; 0x2e
   31e20:	bne	32074 <grisu3_diy_fp_encode_double@@Base+0x12fc>
   31e24:	ldr	r3, [fp, #-80]	; 0xffffffb0
   31e28:	add	r3, r3, #1
   31e2c:	str	r3, [fp, #-80]	; 0xffffffb0
   31e30:	ldr	r3, [fp, #-80]	; 0xffffffb0
   31e34:	str	r3, [fp, #-76]	; 0xffffffb4
   31e38:	ldr	r3, [fp, #-80]	; 0xffffffb0
   31e3c:	ldrb	r3, [r3]
   31e40:	cmp	r3, #47	; 0x2f
   31e44:	bls	31e58 <grisu3_diy_fp_encode_double@@Base+0x10e0>
   31e48:	ldr	r3, [fp, #-80]	; 0xffffffb0
   31e4c:	ldrb	r3, [r3]
   31e50:	cmp	r3, #57	; 0x39
   31e54:	bls	31f5c <grisu3_diy_fp_encode_double@@Base+0x11e4>
   31e58:	mov	r3, #0
   31e5c:	b	32278 <grisu3_diy_fp_encode_double@@Base+0x1500>
   31e60:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   31e64:	add	r1, pc, #324	; 0x144
   31e68:	ldrd	r0, [r1]
   31e6c:	cmp	r3, r1
   31e70:	cmpeq	r2, r0
   31e74:	bls	31ecc <grisu3_diy_fp_encode_double@@Base+0x1154>
   31e78:	ldr	r3, [fp, #-68]	; 0xffffffbc
   31e7c:	cmp	r3, #0
   31e80:	bne	31f90 <grisu3_diy_fp_encode_double@@Base+0x1218>
   31e84:	ldr	r3, [fp, #-80]	; 0xffffffb0
   31e88:	ldrb	r3, [r3]
   31e8c:	cmp	r3, #52	; 0x34
   31e90:	movhi	r3, #1
   31e94:	movls	r3, #0
   31e98:	uxtb	r3, r3
   31e9c:	uxtb	r2, r3
   31ea0:	mov	r3, #0
   31ea4:	ldrd	r0, [fp, #-52]	; 0xffffffcc
   31ea8:	adds	ip, r0, r2
   31eac:	str	ip, [fp, #-124]	; 0xffffff84
   31eb0:	adc	r3, r1, r3
   31eb4:	str	r3, [fp, #-120]	; 0xffffff88
   31eb8:	ldrd	r2, [fp, #-124]	; 0xffffff84
   31ebc:	strd	r2, [fp, #-52]	; 0xffffffcc
   31ec0:	mov	r3, #1
   31ec4:	str	r3, [fp, #-68]	; 0xffffffbc
   31ec8:	b	31f90 <grisu3_diy_fp_encode_double@@Base+0x1218>
   31ecc:	ldrd	r4, [fp, #-52]	; 0xffffffcc
   31ed0:	mov	r2, r4
   31ed4:	mov	r3, r5
   31ed8:	mov	r0, #0
   31edc:	mov	r1, #0
   31ee0:	lsl	r1, r3, #2
   31ee4:	orr	r1, r1, r2, lsr #30
   31ee8:	lsl	r0, r2, #2
   31eec:	mov	r2, r0
   31ef0:	mov	r3, r1
   31ef4:	adds	r2, r2, r4
   31ef8:	adc	r3, r3, r5
   31efc:	adds	r1, r2, r2
   31f00:	str	r1, [fp, #-132]	; 0xffffff7c
   31f04:	adc	r3, r3, r3
   31f08:	str	r3, [fp, #-128]	; 0xffffff80
   31f0c:	ldrd	r2, [fp, #-132]	; 0xffffff7c
   31f10:	mov	r0, r2
   31f14:	mov	r1, r3
   31f18:	ldr	r3, [fp, #-80]	; 0xffffffb0
   31f1c:	add	r2, r3, #1
   31f20:	str	r2, [fp, #-80]	; 0xffffffb0
   31f24:	ldrb	r3, [r3]
   31f28:	uxtb	r2, r3
   31f2c:	mov	r3, #0
   31f30:	adds	r6, r0, r2
   31f34:	adc	r7, r1, r3
   31f38:	subs	r3, r6, #48	; 0x30
   31f3c:	str	r3, [fp, #-140]	; 0xffffff74
   31f40:	sbc	r3, r7, #0
   31f44:	str	r3, [fp, #-136]	; 0xffffff78
   31f48:	ldrd	r2, [fp, #-140]	; 0xffffff74
   31f4c:	strd	r2, [fp, #-52]	; 0xffffffcc
   31f50:	ldr	r3, [fp, #-56]	; 0xffffffc8
   31f54:	sub	r3, r3, #1
   31f58:	str	r3, [fp, #-56]	; 0xffffffc8
   31f5c:	ldr	r2, [fp, #-80]	; 0xffffffb0
   31f60:	ldr	r3, [fp, #-32]	; 0xffffffe0
   31f64:	cmp	r2, r3
   31f68:	beq	31f94 <grisu3_diy_fp_encode_double@@Base+0x121c>
   31f6c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   31f70:	ldrb	r3, [r3]
   31f74:	cmp	r3, #47	; 0x2f
   31f78:	bls	31f94 <grisu3_diy_fp_encode_double@@Base+0x121c>
   31f7c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   31f80:	ldrb	r3, [r3]
   31f84:	cmp	r3, #57	; 0x39
   31f88:	bls	31e60 <grisu3_diy_fp_encode_double@@Base+0x10e8>
   31f8c:	b	31f94 <grisu3_diy_fp_encode_double@@Base+0x121c>
   31f90:	nop	{0}
   31f94:	ldr	r2, [fp, #-80]	; 0xffffffb0
   31f98:	ldr	r3, [fp, #-76]	; 0xffffffb4
   31f9c:	sub	r3, r2, r3
   31fa0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   31fa4:	add	r3, r2, r3
   31fa8:	str	r3, [fp, #-64]	; 0xffffffc0
   31fac:	b	31fd0 <grisu3_diy_fp_encode_double@@Base+0x1258>
   31fb0:	ldmibls	r9, {r3, r4, r7, r8, fp, ip, pc}
   31fb4:	ldmibne	r9, {r0, r3, r4, r7, r8, fp, ip, pc}
   31fb8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   31fbc:	add	r3, r3, #1
   31fc0:	str	r3, [fp, #-56]	; 0xffffffc8
   31fc4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   31fc8:	add	r3, r3, #1
   31fcc:	str	r3, [fp, #-80]	; 0xffffffb0
   31fd0:	ldr	r2, [fp, #-80]	; 0xffffffb0
   31fd4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   31fd8:	cmp	r2, r3
   31fdc:	beq	31ff0 <grisu3_diy_fp_encode_double@@Base+0x1278>
   31fe0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   31fe4:	ldrb	r3, [r3]
   31fe8:	cmp	r3, #48	; 0x30
   31fec:	beq	31fb8 <grisu3_diy_fp_encode_double@@Base+0x1240>
   31ff0:	ldr	r2, [fp, #-80]	; 0xffffffb0
   31ff4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   31ff8:	cmp	r2, r3
   31ffc:	beq	32074 <grisu3_diy_fp_encode_double@@Base+0x12fc>
   32000:	ldr	r3, [fp, #-80]	; 0xffffffb0
   32004:	ldrb	r3, [r3]
   32008:	cmp	r3, #48	; 0x30
   3200c:	bls	32074 <grisu3_diy_fp_encode_double@@Base+0x12fc>
   32010:	ldr	r3, [fp, #-80]	; 0xffffffb0
   32014:	ldrb	r3, [r3]
   32018:	cmp	r3, #57	; 0x39
   3201c:	bhi	32074 <grisu3_diy_fp_encode_double@@Base+0x12fc>
   32020:	mov	r3, #1
   32024:	str	r3, [fp, #-68]	; 0xffffffbc
   32028:	ldr	r3, [fp, #-80]	; 0xffffffb0
   3202c:	add	r3, r3, #1
   32030:	str	r3, [fp, #-80]	; 0xffffffb0
   32034:	b	32044 <grisu3_diy_fp_encode_double@@Base+0x12cc>
   32038:	ldr	r3, [fp, #-80]	; 0xffffffb0
   3203c:	add	r3, r3, #1
   32040:	str	r3, [fp, #-80]	; 0xffffffb0
   32044:	ldr	r2, [fp, #-80]	; 0xffffffb0
   32048:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3204c:	cmp	r2, r3
   32050:	beq	32074 <grisu3_diy_fp_encode_double@@Base+0x12fc>
   32054:	ldr	r3, [fp, #-80]	; 0xffffffb0
   32058:	ldrb	r3, [r3]
   3205c:	cmp	r3, #47	; 0x2f
   32060:	bls	32074 <grisu3_diy_fp_encode_double@@Base+0x12fc>
   32064:	ldr	r3, [fp, #-80]	; 0xffffffb0
   32068:	ldrb	r3, [r3]
   3206c:	cmp	r3, #57	; 0x39
   32070:	bls	32038 <grisu3_diy_fp_encode_double@@Base+0x12c0>
   32074:	ldr	r2, [fp, #-56]	; 0xffffffc8
   32078:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3207c:	add	r3, r2, r3
   32080:	str	r3, [fp, #-56]	; 0xffffffc8
   32084:	ldr	r2, [fp, #-80]	; 0xffffffb0
   32088:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3208c:	cmp	r2, r3
   32090:	beq	321fc <grisu3_diy_fp_encode_double@@Base+0x1484>
   32094:	ldr	r3, [fp, #-80]	; 0xffffffb0
   32098:	ldrb	r3, [r3]
   3209c:	orr	r3, r3, #32
   320a0:	uxtb	r3, r3
   320a4:	cmp	r3, #101	; 0x65
   320a8:	bne	321fc <grisu3_diy_fp_encode_double@@Base+0x1484>
   320ac:	ldr	r2, [fp, #-32]	; 0xffffffe0
   320b0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   320b4:	sub	r3, r2, r3
   320b8:	cmp	r3, #1
   320bc:	bgt	320c8 <grisu3_diy_fp_encode_double@@Base+0x1350>
   320c0:	mov	r3, #0
   320c4:	b	32278 <grisu3_diy_fp_encode_double@@Base+0x1500>
   320c8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   320cc:	add	r3, r3, #1
   320d0:	str	r3, [fp, #-80]	; 0xffffffb0
   320d4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   320d8:	ldrb	r3, [r3]
   320dc:	cmp	r3, #43	; 0x2b
   320e0:	bne	32108 <grisu3_diy_fp_encode_double@@Base+0x1390>
   320e4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   320e8:	add	r3, r3, #1
   320ec:	str	r3, [fp, #-80]	; 0xffffffb0
   320f0:	ldr	r2, [fp, #-80]	; 0xffffffb0
   320f4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   320f8:	cmp	r2, r3
   320fc:	bne	32144 <grisu3_diy_fp_encode_double@@Base+0x13cc>
   32100:	mov	r3, #0
   32104:	b	32278 <grisu3_diy_fp_encode_double@@Base+0x1500>
   32108:	ldr	r3, [fp, #-80]	; 0xffffffb0
   3210c:	ldrb	r3, [r3]
   32110:	cmp	r3, #45	; 0x2d
   32114:	bne	32144 <grisu3_diy_fp_encode_double@@Base+0x13cc>
   32118:	mov	r3, #1
   3211c:	str	r3, [fp, #-40]	; 0xffffffd8
   32120:	ldr	r3, [fp, #-80]	; 0xffffffb0
   32124:	add	r3, r3, #1
   32128:	str	r3, [fp, #-80]	; 0xffffffb0
   3212c:	ldr	r2, [fp, #-80]	; 0xffffffb0
   32130:	ldr	r3, [fp, #-32]	; 0xffffffe0
   32134:	cmp	r2, r3
   32138:	bne	32144 <grisu3_diy_fp_encode_double@@Base+0x13cc>
   3213c:	mov	r3, #0
   32140:	b	32278 <grisu3_diy_fp_encode_double@@Base+0x1500>
   32144:	ldr	r3, [fp, #-80]	; 0xffffffb0
   32148:	ldrb	r3, [r3]
   3214c:	cmp	r3, #47	; 0x2f
   32150:	bls	32164 <grisu3_diy_fp_encode_double@@Base+0x13ec>
   32154:	ldr	r3, [fp, #-80]	; 0xffffffb0
   32158:	ldrb	r3, [r3]
   3215c:	cmp	r3, #57	; 0x39
   32160:	bls	3216c <grisu3_diy_fp_encode_double@@Base+0x13f4>
   32164:	mov	r3, #0
   32168:	b	32278 <grisu3_diy_fp_encode_double@@Base+0x1500>
   3216c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   32170:	add	r2, r3, #1
   32174:	str	r2, [fp, #-80]	; 0xffffffb0
   32178:	ldrb	r3, [r3]
   3217c:	sub	r3, r3, #48	; 0x30
   32180:	str	r3, [fp, #-60]	; 0xffffffc4
   32184:	b	321cc <grisu3_diy_fp_encode_double@@Base+0x1454>
   32188:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3218c:	cmp	r3, #32768	; 0x8000
   32190:	bge	321c0 <grisu3_diy_fp_encode_double@@Base+0x1448>
   32194:	ldr	r2, [fp, #-60]	; 0xffffffc4
   32198:	mov	r3, r2
   3219c:	lsl	r3, r3, #2
   321a0:	add	r3, r3, r2
   321a4:	lsl	r3, r3, #1
   321a8:	mov	r2, r3
   321ac:	ldr	r3, [fp, #-80]	; 0xffffffb0
   321b0:	ldrb	r3, [r3]
   321b4:	add	r3, r2, r3
   321b8:	sub	r3, r3, #48	; 0x30
   321bc:	str	r3, [fp, #-60]	; 0xffffffc4
   321c0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   321c4:	add	r3, r3, #1
   321c8:	str	r3, [fp, #-80]	; 0xffffffb0
   321cc:	ldr	r2, [fp, #-80]	; 0xffffffb0
   321d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   321d4:	cmp	r2, r3
   321d8:	beq	321fc <grisu3_diy_fp_encode_double@@Base+0x1484>
   321dc:	ldr	r3, [fp, #-80]	; 0xffffffb0
   321e0:	ldrb	r3, [r3]
   321e4:	cmp	r3, #47	; 0x2f
   321e8:	bls	321fc <grisu3_diy_fp_encode_double@@Base+0x1484>
   321ec:	ldr	r3, [fp, #-80]	; 0xffffffb0
   321f0:	ldrb	r3, [r3]
   321f4:	cmp	r3, #57	; 0x39
   321f8:	bls	32188 <grisu3_diy_fp_encode_double@@Base+0x1410>
   321fc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   32200:	cmp	r3, #0
   32204:	beq	32214 <grisu3_diy_fp_encode_double@@Base+0x149c>
   32208:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3220c:	rsb	r3, r3, #0
   32210:	b	32218 <grisu3_diy_fp_encode_double@@Base+0x14a0>
   32214:	ldr	r3, [fp, #-60]	; 0xffffffc4
   32218:	ldr	r2, [fp, #-56]	; 0xffffffc8
   3221c:	add	r3, r2, r3
   32220:	str	r3, [fp, #-56]	; 0xffffffc8
   32224:	ldr	r2, [fp, #-80]	; 0xffffffb0
   32228:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3222c:	cmp	r2, r3
   32230:	bne	3223c <grisu3_diy_fp_encode_double@@Base+0x14c4>
   32234:	mov	r3, #0
   32238:	b	32278 <grisu3_diy_fp_encode_double@@Base+0x1500>
   3223c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   32240:	str	r3, [sp, #20]
   32244:	ldr	r3, [fp, #-68]	; 0xffffffbc
   32248:	str	r3, [sp, #16]
   3224c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   32250:	str	r3, [sp, #12]
   32254:	ldr	r3, [fp, #-56]	; 0xffffffc8
   32258:	str	r3, [sp, #8]
   3225c:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   32260:	strd	r2, [sp]
   32264:	ldr	r2, [fp, #-36]	; 0xffffffdc
   32268:	ldr	r1, [fp, #-80]	; 0xffffffb0
   3226c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   32270:	bl	31330 <grisu3_diy_fp_encode_double@@Base+0x5b8>
   32274:	mov	r3, r0
   32278:	mov	r0, r3
   3227c:	sub	sp, fp, #28
   32280:	ldrd	r4, [sp]
   32284:	ldrd	r6, [sp, #8]
   32288:	ldrd	r8, [sp, #16]
   3228c:	ldr	fp, [sp, #24]
   32290:	add	sp, sp, #28
   32294:	pop	{pc}		; (ldr pc, [sp], #4)
   32298:	str	fp, [sp, #-8]!
   3229c:	str	lr, [sp, #4]
   322a0:	add	fp, sp, #4
   322a4:	sub	sp, sp, #16
   322a8:	str	r0, [fp, #-8]
   322ac:	str	r1, [fp, #-12]
   322b0:	str	r2, [fp, #-16]
   322b4:	ldr	r2, [fp, #-16]
   322b8:	ldr	r1, [fp, #-12]
   322bc:	ldr	r0, [fp, #-8]
   322c0:	bl	319f4 <grisu3_diy_fp_encode_double@@Base+0xc7c>
   322c4:	mov	r3, r0
   322c8:	mov	r0, r3
   322cc:	sub	sp, fp, #4
   322d0:	ldr	fp, [sp]
   322d4:	add	sp, sp, #4
   322d8:	pop	{pc}		; (ldr pc, [sp], #4)
   322dc:	str	fp, [sp, #-8]!
   322e0:	str	lr, [sp, #4]
   322e4:	add	fp, sp, #4
   322e8:	sub	sp, sp, #40	; 0x28
   322ec:	str	r0, [fp, #-32]	; 0xffffffe0
   322f0:	str	r1, [fp, #-36]	; 0xffffffdc
   322f4:	str	r2, [fp, #-40]	; 0xffffffd8
   322f8:	mov	r3, #0
   322fc:	movt	r3, #32640	; 0x7f80
   32300:	str	r3, [fp, #-24]	; 0xffffffe8
   32304:	sub	r3, fp, #20
   32308:	mov	r2, r3
   3230c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   32310:	ldr	r0, [fp, #-32]	; 0xffffffe0
   32314:	bl	32298 <grisu3_diy_fp_encode_double@@Base+0x1520>
   32318:	str	r0, [fp, #-8]
   3231c:	vldr	d7, [fp, #-20]	; 0xffffffec
   32320:	vcvt.f32.f64	s15, d7
   32324:	ldr	r3, [fp, #-40]	; 0xffffffd8
   32328:	vstr	s15, [r3]
   3232c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   32330:	vldr	s15, [r3]
   32334:	vabs.f32	s15, s15
   32338:	vldr	s14, [pc, #124]	; 323bc <grisu3_diy_fp_encode_double@@Base+0x1644>
   3233c:	vcmp.f32	s15, s14
   32340:	vmrs	APSR_nzcv, fpscr
   32344:	movle	r3, #1
   32348:	movgt	r3, #0
   3234c:	uxtb	r3, r3
   32350:	eor	r3, r3, #1
   32354:	uxtb	r3, r3
   32358:	cmp	r3, #0
   3235c:	beq	32368 <grisu3_diy_fp_encode_double@@Base+0x15f0>
   32360:	mov	r3, #1
   32364:	b	3236c <grisu3_diy_fp_encode_double@@Base+0x15f4>
   32368:	mov	r3, #0
   3236c:	cmp	r3, #0
   32370:	beq	323a4 <grisu3_diy_fp_encode_double@@Base+0x162c>
   32374:	vldr	d7, [fp, #-20]	; 0xffffffec
   32378:	vcmpe.f64	d7, #0.0
   3237c:	vmrs	APSR_nzcv, fpscr
   32380:	bpl	32390 <grisu3_diy_fp_encode_double@@Base+0x1618>
   32384:	vldr	s15, [fp, #-24]	; 0xffffffe8
   32388:	vneg.f32	s15, s15
   3238c:	b	32394 <grisu3_diy_fp_encode_double@@Base+0x161c>
   32390:	vldr	s15, [fp, #-24]	; 0xffffffe8
   32394:	ldr	r3, [fp, #-40]	; 0xffffffd8
   32398:	vstr	s15, [r3]
   3239c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   323a0:	b	323a8 <grisu3_diy_fp_encode_double@@Base+0x1630>
   323a4:	ldr	r3, [fp, #-8]
   323a8:	mov	r0, r3
   323ac:	sub	sp, fp, #4
   323b0:	ldr	fp, [sp]
   323b4:	add	sp, sp, #4
   323b8:	pop	{pc}		; (ldr pc, [sp], #4)
   323bc:	svcvc	0x007fffff
   323c0:	push	{fp}		; (str fp, [sp, #-4]!)
   323c4:	add	fp, sp, #0
   323c8:	sub	sp, sp, #12
   323cc:	str	r0, [fp, #-8]
   323d0:	ldr	r3, [fp, #-8]
   323d4:	cmp	r3, #5
   323d8:	addls	pc, pc, r3, lsl #2
   323dc:	b	32440 <grisu3_diy_fp_encode_double@@Base+0x16c8>
   323e0:	b	323f8 <grisu3_diy_fp_encode_double@@Base+0x1680>
   323e4:	b	3241c <grisu3_diy_fp_encode_double@@Base+0x16a4>
   323e8:	b	32404 <grisu3_diy_fp_encode_double@@Base+0x168c>
   323ec:	b	32410 <grisu3_diy_fp_encode_double@@Base+0x1698>
   323f0:	b	32428 <grisu3_diy_fp_encode_double@@Base+0x16b0>
   323f4:	b	32434 <grisu3_diy_fp_encode_double@@Base+0x16bc>
   323f8:	ldr	r3, [pc, #88]	; 32458 <grisu3_diy_fp_encode_double@@Base+0x16e0>
   323fc:	add	r3, pc, r3
   32400:	b	32448 <grisu3_diy_fp_encode_double@@Base+0x16d0>
   32404:	ldr	r3, [pc, #80]	; 3245c <grisu3_diy_fp_encode_double@@Base+0x16e4>
   32408:	add	r3, pc, r3
   3240c:	b	32448 <grisu3_diy_fp_encode_double@@Base+0x16d0>
   32410:	ldr	r3, [pc, #72]	; 32460 <grisu3_diy_fp_encode_double@@Base+0x16e8>
   32414:	add	r3, pc, r3
   32418:	b	32448 <grisu3_diy_fp_encode_double@@Base+0x16d0>
   3241c:	ldr	r3, [pc, #64]	; 32464 <grisu3_diy_fp_encode_double@@Base+0x16ec>
   32420:	add	r3, pc, r3
   32424:	b	32448 <grisu3_diy_fp_encode_double@@Base+0x16d0>
   32428:	ldr	r3, [pc, #56]	; 32468 <grisu3_diy_fp_encode_double@@Base+0x16f0>
   3242c:	add	r3, pc, r3
   32430:	b	32448 <grisu3_diy_fp_encode_double@@Base+0x16d0>
   32434:	ldr	r3, [pc, #48]	; 3246c <grisu3_diy_fp_encode_double@@Base+0x16f4>
   32438:	add	r3, pc, r3
   3243c:	b	32448 <grisu3_diy_fp_encode_double@@Base+0x16d0>
   32440:	ldr	r3, [pc, #40]	; 32470 <grisu3_diy_fp_encode_double@@Base+0x16f8>
   32444:	add	r3, pc, r3
   32448:	mov	r0, r3
   3244c:	add	sp, fp, #0
   32450:	pop	{fp}		; (ldr fp, [sp], #4)
   32454:	bx	lr
   32458:	andeq	r5, r0, r4, ror lr
   3245c:	andeq	r5, r0, ip, ror #28
   32460:	andeq	r5, r0, r4, ror lr
   32464:	andeq	r5, r0, r8, ror lr
   32468:	andeq	r5, r0, r0, lsl #29
   3246c:	andeq	r5, r0, r8, lsl #29
   32470:	muleq	r0, r4, lr
   32474:	push	{fp}		; (str fp, [sp, #-4]!)
   32478:	add	fp, sp, #0
   3247c:	sub	sp, sp, #28
   32480:	str	r0, [fp, #-24]	; 0xffffffe8
   32484:	str	r1, [fp, #-28]	; 0xffffffe4
   32488:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3248c:	movw	r3, #43691	; 0xaaab
   32490:	movt	r3, #43690	; 0xaaaa
   32494:	umull	r1, r3, r3, r2
   32498:	lsr	r1, r3, #1
   3249c:	mov	r3, r1
   324a0:	lsl	r3, r3, #1
   324a4:	add	r3, r3, r1
   324a8:	sub	r3, r2, r3
   324ac:	str	r3, [fp, #-12]
   324b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   324b4:	lsl	r2, r3, #2
   324b8:	movw	r3, #43691	; 0xaaab
   324bc:	movt	r3, #43690	; 0xaaaa
   324c0:	umull	r2, r3, r3, r2
   324c4:	lsr	r3, r3, #1
   324c8:	add	r3, r3, #3
   324cc:	bic	r3, r3, #3
   324d0:	str	r3, [fp, #-8]
   324d4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   324d8:	and	r3, r3, #128	; 0x80
   324dc:	str	r3, [fp, #-16]
   324e0:	ldr	r3, [fp, #-16]
   324e4:	cmp	r3, #0
   324e8:	bne	32524 <grisu3_diy_fp_encode_double@@Base+0x17ac>
   324ec:	ldr	r3, [fp, #-12]
   324f0:	cmp	r3, #1
   324f4:	beq	32514 <grisu3_diy_fp_encode_double@@Base+0x179c>
   324f8:	ldr	r3, [fp, #-12]
   324fc:	cmp	r3, #2
   32500:	bne	3252c <grisu3_diy_fp_encode_double@@Base+0x17b4>
   32504:	ldr	r3, [fp, #-8]
   32508:	sub	r3, r3, #1
   3250c:	str	r3, [fp, #-8]
   32510:	b	32530 <grisu3_diy_fp_encode_double@@Base+0x17b8>
   32514:	ldr	r3, [fp, #-8]
   32518:	sub	r3, r3, #2
   3251c:	str	r3, [fp, #-8]
   32520:	b	32530 <grisu3_diy_fp_encode_double@@Base+0x17b8>
   32524:	nop	{0}
   32528:	b	32530 <grisu3_diy_fp_encode_double@@Base+0x17b8>
   3252c:	nop	{0}
   32530:	ldr	r3, [fp, #-8]
   32534:	mov	r0, r3
   32538:	add	sp, fp, #0
   3253c:	pop	{fp}		; (ldr fp, [sp], #4)
   32540:	bx	lr
   32544:	push	{fp}		; (str fp, [sp, #-4]!)
   32548:	add	fp, sp, #0
   3254c:	sub	sp, sp, #20
   32550:	str	r0, [fp, #-16]
   32554:	ldr	r3, [fp, #-16]
   32558:	and	r3, r3, #3
   3255c:	str	r3, [fp, #-8]
   32560:	ldr	r3, [fp, #-16]
   32564:	lsr	r2, r3, #2
   32568:	mov	r3, r2
   3256c:	lsl	r3, r3, #1
   32570:	add	r3, r3, r2
   32574:	str	r3, [fp, #-12]
   32578:	ldr	r3, [fp, #-8]
   3257c:	cmp	r3, #2
   32580:	beq	3259c <grisu3_diy_fp_encode_double@@Base+0x1824>
   32584:	ldr	r3, [fp, #-8]
   32588:	cmp	r3, #3
   3258c:	bne	325a8 <grisu3_diy_fp_encode_double@@Base+0x1830>
   32590:	ldr	r3, [fp, #-12]
   32594:	add	r3, r3, #2
   32598:	b	325ac <grisu3_diy_fp_encode_double@@Base+0x1834>
   3259c:	ldr	r3, [fp, #-12]
   325a0:	add	r3, r3, #1
   325a4:	b	325ac <grisu3_diy_fp_encode_double@@Base+0x1834>
   325a8:	ldr	r3, [fp, #-12]
   325ac:	mov	r0, r3
   325b0:	add	sp, fp, #0
   325b4:	pop	{fp}		; (ldr fp, [sp], #4)
   325b8:	bx	lr
   325bc:	push	{fp}		; (str fp, [sp, #-4]!)
   325c0:	add	fp, sp, #0
   325c4:	sub	sp, sp, #52	; 0x34
   325c8:	str	r0, [fp, #-40]	; 0xffffffd8
   325cc:	str	r1, [fp, #-44]	; 0xffffffd4
   325d0:	str	r2, [fp, #-48]	; 0xffffffd0
   325d4:	str	r3, [fp, #-52]	; 0xffffffcc
   325d8:	ldr	r3, [pc, #928]	; 32980 <grisu3_diy_fp_encode_double@@Base+0x1c08>
   325dc:	add	r3, pc, r3
   325e0:	str	r3, [fp, #-20]	; 0xffffffec
   325e4:	ldr	r3, [pc, #920]	; 32984 <grisu3_diy_fp_encode_double@@Base+0x1c0c>
   325e8:	add	r3, pc, r3
   325ec:	str	r3, [fp, #-24]	; 0xffffffe8
   325f0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   325f4:	str	r3, [fp, #-28]	; 0xffffffe4
   325f8:	ldr	r3, [fp, #4]
   325fc:	and	r3, r3, #128	; 0x80
   32600:	str	r3, [fp, #-32]	; 0xffffffe0
   32604:	mov	r3, #0
   32608:	str	r3, [fp, #-12]
   3260c:	mov	r3, #3
   32610:	str	r3, [fp, #-16]
   32614:	ldr	r3, [fp, #-52]	; 0xffffffcc
   32618:	cmp	r3, #0
   3261c:	bne	3262c <grisu3_diy_fp_encode_double@@Base+0x18b4>
   32620:	mov	r3, #2
   32624:	str	r3, [fp, #-16]
   32628:	b	32924 <grisu3_diy_fp_encode_double@@Base+0x1bac>
   3262c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   32630:	ldr	r3, [r3]
   32634:	str	r3, [fp, #-12]
   32638:	ldr	r3, [fp, #4]
   3263c:	bic	r3, r3, #224	; 0xe0
   32640:	str	r3, [fp, #4]
   32644:	ldr	r3, [fp, #4]
   32648:	cmp	r3, #0
   3264c:	beq	32660 <grisu3_diy_fp_encode_double@@Base+0x18e8>
   32650:	ldr	r3, [fp, #4]
   32654:	cmp	r3, #1
   32658:	beq	3266c <grisu3_diy_fp_encode_double@@Base+0x18f4>
   3265c:	b	32924 <grisu3_diy_fp_encode_double@@Base+0x1bac>
   32660:	ldr	r3, [fp, #-20]	; 0xffffffec
   32664:	str	r3, [fp, #-8]
   32668:	b	32678 <grisu3_diy_fp_encode_double@@Base+0x1900>
   3266c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   32670:	str	r3, [fp, #-8]
   32674:	nop	{0}
   32678:	mov	r3, #0
   3267c:	str	r3, [fp, #-16]
   32680:	b	32784 <grisu3_diy_fp_encode_double@@Base+0x1a0c>
   32684:	ldr	r3, [fp, #-44]	; 0xffffffd4
   32688:	ldrb	r3, [r3]
   3268c:	lsr	r3, r3, #2
   32690:	uxtb	r3, r3
   32694:	mov	r2, r3
   32698:	ldr	r3, [fp, #-8]
   3269c:	add	r3, r3, r2
   326a0:	ldrb	r2, [r3]
   326a4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   326a8:	strb	r2, [r3]
   326ac:	ldr	r3, [fp, #-44]	; 0xffffffd4
   326b0:	ldrb	r3, [r3]
   326b4:	lsl	r3, r3, #4
   326b8:	and	r3, r3, #48	; 0x30
   326bc:	ldr	r2, [fp, #-44]	; 0xffffffd4
   326c0:	add	r2, r2, #1
   326c4:	ldrb	r2, [r2]
   326c8:	lsr	r2, r2, #4
   326cc:	uxtb	r2, r2
   326d0:	orr	r3, r3, r2
   326d4:	mov	r2, r3
   326d8:	ldr	r3, [fp, #-8]
   326dc:	add	r2, r3, r2
   326e0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   326e4:	add	r3, r3, #1
   326e8:	ldrb	r2, [r2]
   326ec:	strb	r2, [r3]
   326f0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   326f4:	add	r3, r3, #1
   326f8:	ldrb	r3, [r3]
   326fc:	lsl	r3, r3, #2
   32700:	and	r3, r3, #60	; 0x3c
   32704:	ldr	r2, [fp, #-44]	; 0xffffffd4
   32708:	add	r2, r2, #2
   3270c:	ldrb	r2, [r2]
   32710:	lsr	r2, r2, #6
   32714:	uxtb	r2, r2
   32718:	orr	r3, r3, r2
   3271c:	mov	r2, r3
   32720:	ldr	r3, [fp, #-8]
   32724:	add	r2, r3, r2
   32728:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3272c:	add	r3, r3, #2
   32730:	ldrb	r2, [r2]
   32734:	strb	r2, [r3]
   32738:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3273c:	add	r3, r3, #2
   32740:	ldrb	r3, [r3]
   32744:	and	r3, r3, #63	; 0x3f
   32748:	ldr	r2, [fp, #-8]
   3274c:	add	r2, r2, r3
   32750:	ldr	r3, [fp, #-40]	; 0xffffffd8
   32754:	add	r3, r3, #3
   32758:	ldrb	r2, [r2]
   3275c:	strb	r2, [r3]
   32760:	ldr	r3, [fp, #-12]
   32764:	sub	r3, r3, #3
   32768:	str	r3, [fp, #-12]
   3276c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   32770:	add	r3, r3, #4
   32774:	str	r3, [fp, #-40]	; 0xffffffd8
   32778:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3277c:	add	r3, r3, #3
   32780:	str	r3, [fp, #-44]	; 0xffffffd4
   32784:	ldr	r3, [fp, #-12]
   32788:	cmp	r3, #2
   3278c:	bhi	32684 <grisu3_diy_fp_encode_double@@Base+0x190c>
   32790:	ldr	r3, [fp, #-12]
   32794:	cmp	r3, #1
   32798:	beq	32870 <grisu3_diy_fp_encode_double@@Base+0x1af8>
   3279c:	ldr	r3, [fp, #-12]
   327a0:	cmp	r3, #2
   327a4:	bne	32904 <grisu3_diy_fp_encode_double@@Base+0x1b8c>
   327a8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   327ac:	ldrb	r3, [r3]
   327b0:	lsr	r3, r3, #2
   327b4:	uxtb	r3, r3
   327b8:	mov	r2, r3
   327bc:	ldr	r3, [fp, #-8]
   327c0:	add	r3, r3, r2
   327c4:	ldrb	r2, [r3]
   327c8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   327cc:	strb	r2, [r3]
   327d0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   327d4:	ldrb	r3, [r3]
   327d8:	lsl	r3, r3, #4
   327dc:	and	r3, r3, #48	; 0x30
   327e0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   327e4:	add	r2, r2, #1
   327e8:	ldrb	r2, [r2]
   327ec:	lsr	r2, r2, #4
   327f0:	uxtb	r2, r2
   327f4:	orr	r3, r3, r2
   327f8:	mov	r2, r3
   327fc:	ldr	r3, [fp, #-8]
   32800:	add	r2, r3, r2
   32804:	ldr	r3, [fp, #-40]	; 0xffffffd8
   32808:	add	r3, r3, #1
   3280c:	ldrb	r2, [r2]
   32810:	strb	r2, [r3]
   32814:	ldr	r3, [fp, #-44]	; 0xffffffd4
   32818:	add	r3, r3, #1
   3281c:	ldrb	r3, [r3]
   32820:	lsl	r3, r3, #2
   32824:	and	r3, r3, #60	; 0x3c
   32828:	ldr	r2, [fp, #-8]
   3282c:	add	r2, r2, r3
   32830:	ldr	r3, [fp, #-40]	; 0xffffffd8
   32834:	add	r3, r3, #2
   32838:	ldrb	r2, [r2]
   3283c:	strb	r2, [r3]
   32840:	ldr	r3, [fp, #-40]	; 0xffffffd8
   32844:	add	r3, r3, #3
   32848:	str	r3, [fp, #-40]	; 0xffffffd8
   3284c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   32850:	cmp	r3, #0
   32854:	beq	32910 <grisu3_diy_fp_encode_double@@Base+0x1b98>
   32858:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3285c:	add	r2, r3, #1
   32860:	str	r2, [fp, #-40]	; 0xffffffd8
   32864:	mov	r2, #61	; 0x3d
   32868:	strb	r2, [r3]
   3286c:	b	32910 <grisu3_diy_fp_encode_double@@Base+0x1b98>
   32870:	ldr	r3, [fp, #-44]	; 0xffffffd4
   32874:	ldrb	r3, [r3]
   32878:	lsr	r3, r3, #2
   3287c:	uxtb	r3, r3
   32880:	mov	r2, r3
   32884:	ldr	r3, [fp, #-8]
   32888:	add	r3, r3, r2
   3288c:	ldrb	r2, [r3]
   32890:	ldr	r3, [fp, #-40]	; 0xffffffd8
   32894:	strb	r2, [r3]
   32898:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3289c:	ldrb	r3, [r3]
   328a0:	lsl	r3, r3, #4
   328a4:	and	r3, r3, #48	; 0x30
   328a8:	ldr	r2, [fp, #-8]
   328ac:	add	r2, r2, r3
   328b0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   328b4:	add	r3, r3, #1
   328b8:	ldrb	r2, [r2]
   328bc:	strb	r2, [r3]
   328c0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   328c4:	add	r3, r3, #2
   328c8:	str	r3, [fp, #-40]	; 0xffffffd8
   328cc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   328d0:	cmp	r3, #0
   328d4:	beq	32918 <grisu3_diy_fp_encode_double@@Base+0x1ba0>
   328d8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   328dc:	add	r2, r3, #1
   328e0:	str	r2, [fp, #-40]	; 0xffffffd8
   328e4:	mov	r2, #61	; 0x3d
   328e8:	strb	r2, [r3]
   328ec:	ldr	r3, [fp, #-40]	; 0xffffffd8
   328f0:	add	r2, r3, #1
   328f4:	str	r2, [fp, #-40]	; 0xffffffd8
   328f8:	mov	r2, #61	; 0x3d
   328fc:	strb	r2, [r3]
   32900:	b	32918 <grisu3_diy_fp_encode_double@@Base+0x1ba0>
   32904:	mov	r3, #0
   32908:	str	r3, [fp, #-32]	; 0xffffffe0
   3290c:	b	3291c <grisu3_diy_fp_encode_double@@Base+0x1ba4>
   32910:	nop	{0}
   32914:	b	3291c <grisu3_diy_fp_encode_double@@Base+0x1ba4>
   32918:	nop	{0}
   3291c:	mov	r3, #0
   32920:	str	r3, [fp, #-12]
   32924:	ldr	r3, [fp, #-48]	; 0xffffffd0
   32928:	cmp	r3, #0
   3292c:	beq	32948 <grisu3_diy_fp_encode_double@@Base+0x1bd0>
   32930:	ldr	r2, [fp, #-40]	; 0xffffffd8
   32934:	ldr	r3, [fp, #-28]	; 0xffffffe4
   32938:	sub	r3, r2, r3
   3293c:	mov	r2, r3
   32940:	ldr	r3, [fp, #-48]	; 0xffffffd0
   32944:	str	r2, [r3]
   32948:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3294c:	cmp	r3, #0
   32950:	beq	3296c <grisu3_diy_fp_encode_double@@Base+0x1bf4>
   32954:	ldr	r3, [fp, #-52]	; 0xffffffcc
   32958:	ldr	r2, [r3]
   3295c:	ldr	r3, [fp, #-12]
   32960:	sub	r2, r2, r3
   32964:	ldr	r3, [fp, #-52]	; 0xffffffcc
   32968:	str	r2, [r3]
   3296c:	ldr	r3, [fp, #-16]
   32970:	mov	r0, r3
   32974:	add	sp, fp, #0
   32978:	pop	{fp}		; (ldr fp, [sp], #4)
   3297c:	bx	lr
   32980:	andeq	r5, r0, ip, lsl #26
   32984:	andeq	r5, r0, r4, asr #26
   32988:	push	{fp}		; (str fp, [sp, #-4]!)
   3298c:	add	fp, sp, #0
   32990:	sub	sp, sp, #60	; 0x3c
   32994:	str	r0, [fp, #-48]	; 0xffffffd0
   32998:	str	r1, [fp, #-52]	; 0xffffffcc
   3299c:	str	r2, [fp, #-56]	; 0xffffffc8
   329a0:	str	r3, [fp, #-60]	; 0xffffffc4
   329a4:	mov	r3, #0
   329a8:	str	r3, [fp, #-8]
   329ac:	ldr	r3, [fp, #-48]	; 0xffffffd0
   329b0:	str	r3, [fp, #-36]	; 0xffffffdc
   329b4:	mvn	r3, #0
   329b8:	str	r3, [fp, #-20]	; 0xffffffec
   329bc:	mvn	r3, #0
   329c0:	str	r3, [fp, #-24]	; 0xffffffe8
   329c4:	ldr	r3, [pc, #1388]	; 32f38 <grisu3_diy_fp_encode_double@@Base+0x21c0>
   329c8:	add	r3, pc, r3
   329cc:	str	r3, [fp, #-32]	; 0xffffffe0
   329d0:	ldr	r3, [fp, #4]
   329d4:	and	r3, r3, #32
   329d8:	str	r3, [fp, #-40]	; 0xffffffd8
   329dc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   329e0:	cmp	r3, #0
   329e4:	beq	329f4 <grisu3_diy_fp_encode_double@@Base+0x1c7c>
   329e8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   329ec:	ldr	r3, [r3]
   329f0:	str	r3, [fp, #-24]	; 0xffffffe8
   329f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   329f8:	str	r3, [fp, #-28]	; 0xffffffe4
   329fc:	ldr	r3, [fp, #4]
   32a00:	bic	r3, r3, #224	; 0xe0
   32a04:	str	r3, [fp, #4]
   32a08:	ldr	r3, [fp, #4]
   32a0c:	cmp	r3, #0
   32a10:	beq	32a24 <grisu3_diy_fp_encode_double@@Base+0x1cac>
   32a14:	ldr	r3, [fp, #4]
   32a18:	cmp	r3, #1
   32a1c:	beq	32a4c <grisu3_diy_fp_encode_double@@Base+0x1cd4>
   32a20:	b	32a74 <grisu3_diy_fp_encode_double@@Base+0x1cfc>
   32a24:	ldr	r3, [fp, #-40]	; 0xffffffd8
   32a28:	cmp	r3, #0
   32a2c:	beq	32a3c <grisu3_diy_fp_encode_double@@Base+0x1cc4>
   32a30:	ldr	r3, [pc, #1284]	; 32f3c <grisu3_diy_fp_encode_double@@Base+0x21c4>
   32a34:	add	r3, pc, r3
   32a38:	b	32a44 <grisu3_diy_fp_encode_double@@Base+0x1ccc>
   32a3c:	ldr	r3, [pc, #1276]	; 32f40 <grisu3_diy_fp_encode_double@@Base+0x21c8>
   32a40:	add	r3, pc, r3
   32a44:	str	r3, [fp, #-32]	; 0xffffffe0
   32a48:	b	32a80 <grisu3_diy_fp_encode_double@@Base+0x1d08>
   32a4c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   32a50:	cmp	r3, #0
   32a54:	beq	32a64 <grisu3_diy_fp_encode_double@@Base+0x1cec>
   32a58:	ldr	r3, [pc, #1252]	; 32f44 <grisu3_diy_fp_encode_double@@Base+0x21cc>
   32a5c:	add	r3, pc, r3
   32a60:	b	32a6c <grisu3_diy_fp_encode_double@@Base+0x1cf4>
   32a64:	ldr	r3, [pc, #1244]	; 32f48 <grisu3_diy_fp_encode_double@@Base+0x21d0>
   32a68:	add	r3, pc, r3
   32a6c:	str	r3, [fp, #-32]	; 0xffffffe0
   32a70:	b	32a80 <grisu3_diy_fp_encode_double@@Base+0x1d08>
   32a74:	mov	r3, #3
   32a78:	str	r3, [fp, #-8]
   32a7c:	b	32d6c <grisu3_diy_fp_encode_double@@Base+0x1ff4>
   32a80:	ldr	r3, [fp, #-56]	; 0xffffffc8
   32a84:	cmp	r3, #0
   32a88:	beq	32d5c <grisu3_diy_fp_encode_double@@Base+0x1fe4>
   32a8c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   32a90:	ldr	r3, [r3]
   32a94:	cmp	r3, #0
   32a98:	beq	32d5c <grisu3_diy_fp_encode_double@@Base+0x1fe4>
   32a9c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   32aa0:	ldr	r3, [r3]
   32aa4:	str	r3, [fp, #-20]	; 0xffffffec
   32aa8:	b	32d5c <grisu3_diy_fp_encode_double@@Base+0x1fe4>
   32aac:	mov	r3, #0
   32ab0:	str	r3, [fp, #-12]
   32ab4:	b	32c7c <grisu3_diy_fp_encode_double@@Base+0x1f04>
   32ab8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   32abc:	ldr	r3, [fp, #-12]
   32ac0:	cmp	r2, r3
   32ac4:	bne	32ae4 <grisu3_diy_fp_encode_double@@Base+0x1d6c>
   32ac8:	ldr	r3, [fp, #-12]
   32acc:	str	r3, [fp, #-16]
   32ad0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   32ad4:	ldr	r3, [fp, #-12]
   32ad8:	sub	r3, r2, r3
   32adc:	str	r3, [fp, #-24]	; 0xffffffe8
   32ae0:	b	32dbc <grisu3_diy_fp_encode_double@@Base+0x2044>
   32ae4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   32ae8:	ldr	r3, [fp, #-12]
   32aec:	add	r3, r2, r3
   32af0:	ldrb	r3, [r3]
   32af4:	mov	r2, r3
   32af8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   32afc:	add	r3, r3, r2
   32b00:	ldrb	r1, [r3]
   32b04:	sub	r2, fp, #44	; 0x2c
   32b08:	ldr	r3, [fp, #-12]
   32b0c:	add	r3, r2, r3
   32b10:	mov	r2, r1
   32b14:	strb	r2, [r3]
   32b18:	sub	r2, fp, #44	; 0x2c
   32b1c:	ldr	r3, [fp, #-12]
   32b20:	add	r3, r2, r3
   32b24:	ldrb	r2, [r3]
   32b28:	ldr	r3, [pc, #1052]	; 32f4c <grisu3_diy_fp_encode_double@@Base+0x21d4>
   32b2c:	add	r3, pc, r3
   32b30:	ldrb	r3, [r3]
   32b34:	cmp	r2, r3
   32b38:	bcc	32c70 <grisu3_diy_fp_encode_double@@Base+0x1ef8>
   32b3c:	sub	r2, fp, #44	; 0x2c
   32b40:	ldr	r3, [fp, #-12]
   32b44:	add	r3, r2, r3
   32b48:	ldrb	r2, [r3]
   32b4c:	ldr	r3, [pc, #1020]	; 32f50 <grisu3_diy_fp_encode_double@@Base+0x21d8>
   32b50:	add	r3, pc, r3
   32b54:	ldrb	r3, [r3]
   32b58:	cmp	r2, r3
   32b5c:	bne	32b88 <grisu3_diy_fp_encode_double@@Base+0x1e10>
   32b60:	ldr	r3, [fp, #-52]	; 0xffffffcc
   32b64:	add	r3, r3, #1
   32b68:	str	r3, [fp, #-52]	; 0xffffffcc
   32b6c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   32b70:	sub	r3, r3, #1
   32b74:	str	r3, [fp, #-24]	; 0xffffffe8
   32b78:	ldr	r3, [fp, #-12]
   32b7c:	sub	r3, r3, #1
   32b80:	str	r3, [fp, #-12]
   32b84:	b	32c70 <grisu3_diy_fp_encode_double@@Base+0x1ef8>
   32b88:	ldr	r3, [fp, #-12]
   32b8c:	str	r3, [fp, #-16]
   32b90:	sub	r2, fp, #44	; 0x2c
   32b94:	ldr	r3, [fp, #-12]
   32b98:	add	r3, r2, r3
   32b9c:	ldrb	r2, [r3]
   32ba0:	ldr	r3, [pc, #940]	; 32f54 <grisu3_diy_fp_encode_double@@Base+0x21dc>
   32ba4:	add	r3, pc, r3
   32ba8:	ldrb	r3, [r3]
   32bac:	cmp	r2, r3
   32bb0:	bne	32c5c <grisu3_diy_fp_encode_double@@Base+0x1ee4>
   32bb4:	ldr	r3, [fp, #-12]
   32bb8:	add	r3, r3, #1
   32bbc:	str	r3, [fp, #-12]
   32bc0:	b	32c38 <grisu3_diy_fp_encode_double@@Base+0x1ec0>
   32bc4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   32bc8:	ldr	r3, [fp, #-12]
   32bcc:	add	r3, r2, r3
   32bd0:	ldrb	r3, [r3]
   32bd4:	mov	r2, r3
   32bd8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   32bdc:	add	r3, r3, r2
   32be0:	ldrb	r2, [r3]
   32be4:	ldr	r3, [pc, #876]	; 32f58 <grisu3_diy_fp_encode_double@@Base+0x21e0>
   32be8:	add	r3, pc, r3
   32bec:	ldrb	r3, [r3]
   32bf0:	cmp	r2, r3
   32bf4:	beq	32c2c <grisu3_diy_fp_encode_double@@Base+0x1eb4>
   32bf8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   32bfc:	ldr	r3, [fp, #-12]
   32c00:	add	r3, r2, r3
   32c04:	ldrb	r3, [r3]
   32c08:	mov	r2, r3
   32c0c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   32c10:	add	r3, r3, r2
   32c14:	ldrb	r2, [r3]
   32c18:	ldr	r3, [pc, #828]	; 32f5c <grisu3_diy_fp_encode_double@@Base+0x21e4>
   32c1c:	add	r3, pc, r3
   32c20:	ldrb	r3, [r3]
   32c24:	cmp	r2, r3
   32c28:	bne	32c58 <grisu3_diy_fp_encode_double@@Base+0x1ee0>
   32c2c:	ldr	r3, [fp, #-12]
   32c30:	add	r3, r3, #1
   32c34:	str	r3, [fp, #-12]
   32c38:	ldr	r2, [fp, #-12]
   32c3c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   32c40:	cmp	r2, r3
   32c44:	bcs	32c5c <grisu3_diy_fp_encode_double@@Base+0x1ee4>
   32c48:	ldr	r3, [fp, #-12]
   32c4c:	cmp	r3, #7
   32c50:	bls	32bc4 <grisu3_diy_fp_encode_double@@Base+0x1e4c>
   32c54:	b	32c5c <grisu3_diy_fp_encode_double@@Base+0x1ee4>
   32c58:	nop	{0}
   32c5c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   32c60:	ldr	r3, [fp, #-12]
   32c64:	sub	r3, r2, r3
   32c68:	str	r3, [fp, #-24]	; 0xffffffe8
   32c6c:	b	32dbc <grisu3_diy_fp_encode_double@@Base+0x2044>
   32c70:	ldr	r3, [fp, #-12]
   32c74:	add	r3, r3, #1
   32c78:	str	r3, [fp, #-12]
   32c7c:	ldr	r3, [fp, #-12]
   32c80:	cmp	r3, #3
   32c84:	bls	32ab8 <grisu3_diy_fp_encode_double@@Base+0x1d40>
   32c88:	ldr	r3, [fp, #-20]	; 0xffffffec
   32c8c:	cmp	r3, #2
   32c90:	bls	32f08 <grisu3_diy_fp_encode_double@@Base+0x2190>
   32c94:	ldrb	r3, [fp, #-44]	; 0xffffffd4
   32c98:	lsl	r3, r3, #2
   32c9c:	sxtb	r2, r3
   32ca0:	ldrb	r3, [fp, #-43]	; 0xffffffd5
   32ca4:	lsr	r3, r3, #4
   32ca8:	uxtb	r3, r3
   32cac:	sxtb	r3, r3
   32cb0:	orr	r3, r2, r3
   32cb4:	sxtb	r3, r3
   32cb8:	uxtb	r2, r3
   32cbc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   32cc0:	strb	r2, [r3]
   32cc4:	ldrb	r3, [fp, #-43]	; 0xffffffd5
   32cc8:	lsl	r3, r3, #4
   32ccc:	sxtb	r2, r3
   32cd0:	ldrb	r3, [fp, #-42]	; 0xffffffd6
   32cd4:	lsr	r3, r3, #2
   32cd8:	uxtb	r3, r3
   32cdc:	sxtb	r3, r3
   32ce0:	orr	r3, r2, r3
   32ce4:	sxtb	r2, r3
   32ce8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   32cec:	add	r3, r3, #1
   32cf0:	uxtb	r2, r2
   32cf4:	strb	r2, [r3]
   32cf8:	ldrb	r3, [fp, #-42]	; 0xffffffd6
   32cfc:	lsl	r3, r3, #6
   32d00:	sxtb	r2, r3
   32d04:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   32d08:	sxtb	r3, r3
   32d0c:	orr	r3, r2, r3
   32d10:	sxtb	r2, r3
   32d14:	ldr	r3, [fp, #-48]	; 0xffffffd0
   32d18:	add	r3, r3, #2
   32d1c:	uxtb	r2, r2
   32d20:	strb	r2, [r3]
   32d24:	ldr	r3, [fp, #-48]	; 0xffffffd0
   32d28:	add	r3, r3, #3
   32d2c:	str	r3, [fp, #-48]	; 0xffffffd0
   32d30:	ldr	r3, [fp, #-52]	; 0xffffffcc
   32d34:	add	r3, r3, #4
   32d38:	str	r3, [fp, #-52]	; 0xffffffcc
   32d3c:	ldr	r3, [fp, #-20]	; 0xffffffec
   32d40:	sub	r3, r3, #3
   32d44:	str	r3, [fp, #-20]	; 0xffffffec
   32d48:	ldr	r3, [fp, #-24]	; 0xffffffe8
   32d4c:	sub	r3, r3, #4
   32d50:	str	r3, [fp, #-24]	; 0xffffffe8
   32d54:	ldr	r3, [fp, #-24]	; 0xffffffe8
   32d58:	str	r3, [fp, #-28]	; 0xffffffe4
   32d5c:	ldr	r3, [fp, #-20]	; 0xffffffec
   32d60:	cmp	r3, #0
   32d64:	bne	32aac <grisu3_diy_fp_encode_double@@Base+0x1d34>
   32d68:	nop	{0}
   32d6c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   32d70:	cmp	r3, #0
   32d74:	beq	32d90 <grisu3_diy_fp_encode_double@@Base+0x2018>
   32d78:	ldr	r2, [fp, #-48]	; 0xffffffd0
   32d7c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   32d80:	sub	r3, r2, r3
   32d84:	mov	r2, r3
   32d88:	ldr	r3, [fp, #-56]	; 0xffffffc8
   32d8c:	str	r2, [r3]
   32d90:	ldr	r3, [fp, #-60]	; 0xffffffc4
   32d94:	cmp	r3, #0
   32d98:	beq	32db4 <grisu3_diy_fp_encode_double@@Base+0x203c>
   32d9c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   32da0:	ldr	r2, [r3]
   32da4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   32da8:	sub	r2, r2, r3
   32dac:	ldr	r3, [fp, #-60]	; 0xffffffc4
   32db0:	str	r2, [r3]
   32db4:	ldr	r3, [fp, #-8]
   32db8:	b	32f28 <grisu3_diy_fp_encode_double@@Base+0x21b0>
   32dbc:	ldr	r3, [fp, #-16]
   32dc0:	cmp	r3, #2
   32dc4:	beq	32de4 <grisu3_diy_fp_encode_double@@Base+0x206c>
   32dc8:	ldr	r3, [fp, #-16]
   32dcc:	cmp	r3, #3
   32dd0:	beq	32e44 <grisu3_diy_fp_encode_double@@Base+0x20cc>
   32dd4:	ldr	r3, [fp, #-16]
   32dd8:	cmp	r3, #0
   32ddc:	bne	32ed8 <grisu3_diy_fp_encode_double@@Base+0x2160>
   32de0:	b	32ee4 <grisu3_diy_fp_encode_double@@Base+0x216c>
   32de4:	ldrb	r3, [fp, #-43]	; 0xffffffd5
   32de8:	lsl	r3, r3, #4
   32dec:	uxtb	r3, r3
   32df0:	cmp	r3, #0
   32df4:	bne	32ef0 <grisu3_diy_fp_encode_double@@Base+0x2178>
   32df8:	ldr	r3, [fp, #-20]	; 0xffffffec
   32dfc:	cmp	r3, #0
   32e00:	beq	32f10 <grisu3_diy_fp_encode_double@@Base+0x2198>
   32e04:	ldrb	r3, [fp, #-44]	; 0xffffffd4
   32e08:	lsl	r3, r3, #2
   32e0c:	sxtb	r2, r3
   32e10:	ldrb	r3, [fp, #-43]	; 0xffffffd5
   32e14:	lsr	r3, r3, #4
   32e18:	uxtb	r3, r3
   32e1c:	sxtb	r3, r3
   32e20:	orr	r3, r2, r3
   32e24:	sxtb	r3, r3
   32e28:	uxtb	r2, r3
   32e2c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   32e30:	strb	r2, [r3]
   32e34:	ldr	r3, [fp, #-48]	; 0xffffffd0
   32e38:	add	r3, r3, #1
   32e3c:	str	r3, [fp, #-48]	; 0xffffffd0
   32e40:	b	32ee4 <grisu3_diy_fp_encode_double@@Base+0x216c>
   32e44:	ldrb	r3, [fp, #-42]	; 0xffffffd6
   32e48:	lsl	r3, r3, #6
   32e4c:	uxtb	r3, r3
   32e50:	cmp	r3, #0
   32e54:	bne	32ef8 <grisu3_diy_fp_encode_double@@Base+0x2180>
   32e58:	ldr	r3, [fp, #-20]	; 0xffffffec
   32e5c:	cmp	r3, #1
   32e60:	bls	32f18 <grisu3_diy_fp_encode_double@@Base+0x21a0>
   32e64:	ldrb	r3, [fp, #-44]	; 0xffffffd4
   32e68:	lsl	r3, r3, #2
   32e6c:	sxtb	r2, r3
   32e70:	ldrb	r3, [fp, #-43]	; 0xffffffd5
   32e74:	lsr	r3, r3, #4
   32e78:	uxtb	r3, r3
   32e7c:	sxtb	r3, r3
   32e80:	orr	r3, r2, r3
   32e84:	sxtb	r3, r3
   32e88:	uxtb	r2, r3
   32e8c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   32e90:	strb	r2, [r3]
   32e94:	ldrb	r3, [fp, #-43]	; 0xffffffd5
   32e98:	lsl	r3, r3, #4
   32e9c:	sxtb	r2, r3
   32ea0:	ldrb	r3, [fp, #-42]	; 0xffffffd6
   32ea4:	lsr	r3, r3, #2
   32ea8:	uxtb	r3, r3
   32eac:	sxtb	r3, r3
   32eb0:	orr	r3, r2, r3
   32eb4:	sxtb	r2, r3
   32eb8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   32ebc:	add	r3, r3, #1
   32ec0:	uxtb	r2, r2
   32ec4:	strb	r2, [r3]
   32ec8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   32ecc:	add	r3, r3, #2
   32ed0:	str	r3, [fp, #-48]	; 0xffffffd0
   32ed4:	b	32ee4 <grisu3_diy_fp_encode_double@@Base+0x216c>
   32ed8:	mov	r3, #4
   32edc:	str	r3, [fp, #-8]
   32ee0:	b	32d6c <grisu3_diy_fp_encode_double@@Base+0x1ff4>
   32ee4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   32ee8:	str	r3, [fp, #-28]	; 0xffffffe4
   32eec:	b	32d6c <grisu3_diy_fp_encode_double@@Base+0x1ff4>
   32ef0:	nop	{0}
   32ef4:	b	32efc <grisu3_diy_fp_encode_double@@Base+0x2184>
   32ef8:	nop	{0}
   32efc:	mov	r3, #5
   32f00:	str	r3, [fp, #-8]
   32f04:	b	32d6c <grisu3_diy_fp_encode_double@@Base+0x1ff4>
   32f08:	nop	{0}
   32f0c:	b	32f1c <grisu3_diy_fp_encode_double@@Base+0x21a4>
   32f10:	nop	{0}
   32f14:	b	32f1c <grisu3_diy_fp_encode_double@@Base+0x21a4>
   32f18:	nop	{0}
   32f1c:	mov	r3, #1
   32f20:	str	r3, [fp, #-8]
   32f24:	b	32d6c <grisu3_diy_fp_encode_double@@Base+0x1ff4>
   32f28:	mov	r0, r3
   32f2c:	add	sp, fp, #0
   32f30:	pop	{fp}		; (ldr fp, [sp], #4)
   32f34:	bx	lr
   32f38:	andeq	r5, r0, r0, asr #26
   32f3c:	ldrdeq	r5, [r0], -r4
   32f40:	andeq	r5, r0, r8, asr #25
   32f44:	andeq	r5, r0, ip, lsr #29
   32f48:	andeq	r5, r0, r0, lsr #31
   32f4c:	ldrdeq	r5, [r0], -ip
   32f50:			; <UNDEFINED> instruction: 0x00005fb9
   32f54:	andeq	r5, r0, r6, ror #30
   32f58:	andeq	r5, r0, r2, lsr #30
   32f5c:	andeq	r5, r0, sp, ror #29

00032f60 <flatcc_json_parser_error_string@@Base>:
   32f60:	push	{fp}		; (str fp, [sp, #-4]!)
   32f64:	add	fp, sp, #0
   32f68:	sub	sp, sp, #12
   32f6c:	str	r0, [fp, #-8]
   32f70:	ldr	r3, [fp, #-8]
   32f74:	cmp	r3, #34	; 0x22
   32f78:	addls	pc, pc, r3, lsl #2
   32f7c:	b	331b0 <flatcc_json_parser_error_string@@Base+0x250>
   32f80:	b	3300c <flatcc_json_parser_error_string@@Base+0xac>
   32f84:	b	33018 <flatcc_json_parser_error_string@@Base+0xb8>
   32f88:	b	33024 <flatcc_json_parser_error_string@@Base+0xc4>
   32f8c:	b	33030 <flatcc_json_parser_error_string@@Base+0xd0>
   32f90:	b	3303c <flatcc_json_parser_error_string@@Base+0xdc>
   32f94:	b	33048 <flatcc_json_parser_error_string@@Base+0xe8>
   32f98:	b	33054 <flatcc_json_parser_error_string@@Base+0xf4>
   32f9c:	b	33060 <flatcc_json_parser_error_string@@Base+0x100>
   32fa0:	b	3306c <flatcc_json_parser_error_string@@Base+0x10c>
   32fa4:	b	33078 <flatcc_json_parser_error_string@@Base+0x118>
   32fa8:	b	33084 <flatcc_json_parser_error_string@@Base+0x124>
   32fac:	b	33090 <flatcc_json_parser_error_string@@Base+0x130>
   32fb0:	b	3309c <flatcc_json_parser_error_string@@Base+0x13c>
   32fb4:	b	330a8 <flatcc_json_parser_error_string@@Base+0x148>
   32fb8:	b	330b4 <flatcc_json_parser_error_string@@Base+0x154>
   32fbc:	b	330c0 <flatcc_json_parser_error_string@@Base+0x160>
   32fc0:	b	330cc <flatcc_json_parser_error_string@@Base+0x16c>
   32fc4:	b	330d8 <flatcc_json_parser_error_string@@Base+0x178>
   32fc8:	b	330e4 <flatcc_json_parser_error_string@@Base+0x184>
   32fcc:	b	330f0 <flatcc_json_parser_error_string@@Base+0x190>
   32fd0:	b	330fc <flatcc_json_parser_error_string@@Base+0x19c>
   32fd4:	b	33108 <flatcc_json_parser_error_string@@Base+0x1a8>
   32fd8:	b	33114 <flatcc_json_parser_error_string@@Base+0x1b4>
   32fdc:	b	33120 <flatcc_json_parser_error_string@@Base+0x1c0>
   32fe0:	b	3312c <flatcc_json_parser_error_string@@Base+0x1cc>
   32fe4:	b	33138 <flatcc_json_parser_error_string@@Base+0x1d8>
   32fe8:	b	33144 <flatcc_json_parser_error_string@@Base+0x1e4>
   32fec:	b	33150 <flatcc_json_parser_error_string@@Base+0x1f0>
   32ff0:	b	3315c <flatcc_json_parser_error_string@@Base+0x1fc>
   32ff4:	b	33168 <flatcc_json_parser_error_string@@Base+0x208>
   32ff8:	b	33174 <flatcc_json_parser_error_string@@Base+0x214>
   32ffc:	b	33180 <flatcc_json_parser_error_string@@Base+0x220>
   33000:	b	3318c <flatcc_json_parser_error_string@@Base+0x22c>
   33004:	b	33198 <flatcc_json_parser_error_string@@Base+0x238>
   33008:	b	331a4 <flatcc_json_parser_error_string@@Base+0x244>
   3300c:	ldr	r3, [pc, #436]	; 331c8 <flatcc_json_parser_error_string@@Base+0x268>
   33010:	add	r3, pc, r3
   33014:	b	331b8 <flatcc_json_parser_error_string@@Base+0x258>
   33018:	ldr	r3, [pc, #428]	; 331cc <flatcc_json_parser_error_string@@Base+0x26c>
   3301c:	add	r3, pc, r3
   33020:	b	331b8 <flatcc_json_parser_error_string@@Base+0x258>
   33024:	ldr	r3, [pc, #420]	; 331d0 <flatcc_json_parser_error_string@@Base+0x270>
   33028:	add	r3, pc, r3
   3302c:	b	331b8 <flatcc_json_parser_error_string@@Base+0x258>
   33030:	ldr	r3, [pc, #412]	; 331d4 <flatcc_json_parser_error_string@@Base+0x274>
   33034:	add	r3, pc, r3
   33038:	b	331b8 <flatcc_json_parser_error_string@@Base+0x258>
   3303c:	ldr	r3, [pc, #404]	; 331d8 <flatcc_json_parser_error_string@@Base+0x278>
   33040:	add	r3, pc, r3
   33044:	b	331b8 <flatcc_json_parser_error_string@@Base+0x258>
   33048:	ldr	r3, [pc, #396]	; 331dc <flatcc_json_parser_error_string@@Base+0x27c>
   3304c:	add	r3, pc, r3
   33050:	b	331b8 <flatcc_json_parser_error_string@@Base+0x258>
   33054:	ldr	r3, [pc, #388]	; 331e0 <flatcc_json_parser_error_string@@Base+0x280>
   33058:	add	r3, pc, r3
   3305c:	b	331b8 <flatcc_json_parser_error_string@@Base+0x258>
   33060:	ldr	r3, [pc, #380]	; 331e4 <flatcc_json_parser_error_string@@Base+0x284>
   33064:	add	r3, pc, r3
   33068:	b	331b8 <flatcc_json_parser_error_string@@Base+0x258>
   3306c:	ldr	r3, [pc, #372]	; 331e8 <flatcc_json_parser_error_string@@Base+0x288>
   33070:	add	r3, pc, r3
   33074:	b	331b8 <flatcc_json_parser_error_string@@Base+0x258>
   33078:	ldr	r3, [pc, #364]	; 331ec <flatcc_json_parser_error_string@@Base+0x28c>
   3307c:	add	r3, pc, r3
   33080:	b	331b8 <flatcc_json_parser_error_string@@Base+0x258>
   33084:	ldr	r3, [pc, #356]	; 331f0 <flatcc_json_parser_error_string@@Base+0x290>
   33088:	add	r3, pc, r3
   3308c:	b	331b8 <flatcc_json_parser_error_string@@Base+0x258>
   33090:	ldr	r3, [pc, #348]	; 331f4 <flatcc_json_parser_error_string@@Base+0x294>
   33094:	add	r3, pc, r3
   33098:	b	331b8 <flatcc_json_parser_error_string@@Base+0x258>
   3309c:	ldr	r3, [pc, #340]	; 331f8 <flatcc_json_parser_error_string@@Base+0x298>
   330a0:	add	r3, pc, r3
   330a4:	b	331b8 <flatcc_json_parser_error_string@@Base+0x258>
   330a8:	ldr	r3, [pc, #332]	; 331fc <flatcc_json_parser_error_string@@Base+0x29c>
   330ac:	add	r3, pc, r3
   330b0:	b	331b8 <flatcc_json_parser_error_string@@Base+0x258>
   330b4:	ldr	r3, [pc, #324]	; 33200 <flatcc_json_parser_error_string@@Base+0x2a0>
   330b8:	add	r3, pc, r3
   330bc:	b	331b8 <flatcc_json_parser_error_string@@Base+0x258>
   330c0:	ldr	r3, [pc, #316]	; 33204 <flatcc_json_parser_error_string@@Base+0x2a4>
   330c4:	add	r3, pc, r3
   330c8:	b	331b8 <flatcc_json_parser_error_string@@Base+0x258>
   330cc:	ldr	r3, [pc, #308]	; 33208 <flatcc_json_parser_error_string@@Base+0x2a8>
   330d0:	add	r3, pc, r3
   330d4:	b	331b8 <flatcc_json_parser_error_string@@Base+0x258>
   330d8:	ldr	r3, [pc, #300]	; 3320c <flatcc_json_parser_error_string@@Base+0x2ac>
   330dc:	add	r3, pc, r3
   330e0:	b	331b8 <flatcc_json_parser_error_string@@Base+0x258>
   330e4:	ldr	r3, [pc, #292]	; 33210 <flatcc_json_parser_error_string@@Base+0x2b0>
   330e8:	add	r3, pc, r3
   330ec:	b	331b8 <flatcc_json_parser_error_string@@Base+0x258>
   330f0:	ldr	r3, [pc, #284]	; 33214 <flatcc_json_parser_error_string@@Base+0x2b4>
   330f4:	add	r3, pc, r3
   330f8:	b	331b8 <flatcc_json_parser_error_string@@Base+0x258>
   330fc:	ldr	r3, [pc, #276]	; 33218 <flatcc_json_parser_error_string@@Base+0x2b8>
   33100:	add	r3, pc, r3
   33104:	b	331b8 <flatcc_json_parser_error_string@@Base+0x258>
   33108:	ldr	r3, [pc, #268]	; 3321c <flatcc_json_parser_error_string@@Base+0x2bc>
   3310c:	add	r3, pc, r3
   33110:	b	331b8 <flatcc_json_parser_error_string@@Base+0x258>
   33114:	ldr	r3, [pc, #260]	; 33220 <flatcc_json_parser_error_string@@Base+0x2c0>
   33118:	add	r3, pc, r3
   3311c:	b	331b8 <flatcc_json_parser_error_string@@Base+0x258>
   33120:	ldr	r3, [pc, #252]	; 33224 <flatcc_json_parser_error_string@@Base+0x2c4>
   33124:	add	r3, pc, r3
   33128:	b	331b8 <flatcc_json_parser_error_string@@Base+0x258>
   3312c:	ldr	r3, [pc, #244]	; 33228 <flatcc_json_parser_error_string@@Base+0x2c8>
   33130:	add	r3, pc, r3
   33134:	b	331b8 <flatcc_json_parser_error_string@@Base+0x258>
   33138:	ldr	r3, [pc, #236]	; 3322c <flatcc_json_parser_error_string@@Base+0x2cc>
   3313c:	add	r3, pc, r3
   33140:	b	331b8 <flatcc_json_parser_error_string@@Base+0x258>
   33144:	ldr	r3, [pc, #228]	; 33230 <flatcc_json_parser_error_string@@Base+0x2d0>
   33148:	add	r3, pc, r3
   3314c:	b	331b8 <flatcc_json_parser_error_string@@Base+0x258>
   33150:	ldr	r3, [pc, #220]	; 33234 <flatcc_json_parser_error_string@@Base+0x2d4>
   33154:	add	r3, pc, r3
   33158:	b	331b8 <flatcc_json_parser_error_string@@Base+0x258>
   3315c:	ldr	r3, [pc, #212]	; 33238 <flatcc_json_parser_error_string@@Base+0x2d8>
   33160:	add	r3, pc, r3
   33164:	b	331b8 <flatcc_json_parser_error_string@@Base+0x258>
   33168:	ldr	r3, [pc, #204]	; 3323c <flatcc_json_parser_error_string@@Base+0x2dc>
   3316c:	add	r3, pc, r3
   33170:	b	331b8 <flatcc_json_parser_error_string@@Base+0x258>
   33174:	ldr	r3, [pc, #196]	; 33240 <flatcc_json_parser_error_string@@Base+0x2e0>
   33178:	add	r3, pc, r3
   3317c:	b	331b8 <flatcc_json_parser_error_string@@Base+0x258>
   33180:	ldr	r3, [pc, #188]	; 33244 <flatcc_json_parser_error_string@@Base+0x2e4>
   33184:	add	r3, pc, r3
   33188:	b	331b8 <flatcc_json_parser_error_string@@Base+0x258>
   3318c:	ldr	r3, [pc, #180]	; 33248 <flatcc_json_parser_error_string@@Base+0x2e8>
   33190:	add	r3, pc, r3
   33194:	b	331b8 <flatcc_json_parser_error_string@@Base+0x258>
   33198:	ldr	r3, [pc, #172]	; 3324c <flatcc_json_parser_error_string@@Base+0x2ec>
   3319c:	add	r3, pc, r3
   331a0:	b	331b8 <flatcc_json_parser_error_string@@Base+0x258>
   331a4:	ldr	r3, [pc, #164]	; 33250 <flatcc_json_parser_error_string@@Base+0x2f0>
   331a8:	add	r3, pc, r3
   331ac:	b	331b8 <flatcc_json_parser_error_string@@Base+0x258>
   331b0:	ldr	r3, [pc, #156]	; 33254 <flatcc_json_parser_error_string@@Base+0x2f4>
   331b4:	add	r3, pc, r3
   331b8:	mov	r0, r3
   331bc:	add	sp, fp, #0
   331c0:	pop	{fp}		; (ldr fp, [sp], #4)
   331c4:	bx	lr
   331c8:	andeq	r5, r0, r0, ror #4
   331cc:	andeq	r5, r0, r4, asr r3
   331d0:	andeq	r5, r0, ip, asr #6
   331d4:	andeq	r5, r0, r0, asr r3
   331d8:	andeq	r5, r0, r4, asr r3
   331dc:	andeq	r5, r0, r8, asr r3
   331e0:	andeq	r5, r0, r4, ror #6
   331e4:	andeq	r5, r0, r8, ror #6
   331e8:	andeq	r5, r0, r8, ror #6
   331ec:	andeq	r5, r0, r8, ror #6
   331f0:	andeq	r5, r0, r0, ror r3
   331f4:	andeq	r5, r0, r8, ror r3
   331f8:	andeq	r5, r0, ip, ror r3
   331fc:	andeq	r5, r0, r4, lsl #7
   33200:	andeq	r5, r0, r8, lsl #7
   33204:	muleq	r0, r8, r3
   33208:	andeq	r5, r0, r0, lsr #7
   3320c:	andeq	r5, r0, r4, lsr #7
   33210:	andeq	r5, r0, ip, lsr #7
   33214:			; <UNDEFINED> instruction: 0x000053b0
   33218:			; <UNDEFINED> instruction: 0x000053b4
   3321c:			; <UNDEFINED> instruction: 0x000053bc
   33220:	andeq	r5, r0, r0, asr #7
   33224:	andeq	r5, r0, r4, asr #7
   33228:	ldrdeq	r5, [r0], -ip
   3322c:	andeq	r5, r0, r4, ror #7
   33230:	strdeq	r5, [r0], -r8
   33234:	andeq	r5, r0, ip, lsl #8
   33238:	andeq	r5, r0, ip, lsl r4
   3323c:	andeq	r5, r0, ip, lsr #8
   33240:	andeq	r5, r0, r8, lsr r4
   33244:	andeq	r5, r0, ip, asr #8
   33248:	andeq	r5, r0, r8, asr r4
   3324c:	andeq	r5, r0, r8, ror #8
   33250:	andeq	r5, r0, ip, ror #8
   33254:	andeq	r5, r0, r0, ror r4

00033258 <flatcc_json_parser_set_error@@Base>:
   33258:	push	{fp}		; (str fp, [sp, #-4]!)
   3325c:	add	fp, sp, #0
   33260:	sub	sp, sp, #20
   33264:	str	r0, [fp, #-8]
   33268:	str	r1, [fp, #-12]
   3326c:	str	r2, [fp, #-16]
   33270:	str	r3, [fp, #-20]	; 0xffffffec
   33274:	ldr	r3, [fp, #-8]
   33278:	ldr	r3, [r3, #24]
   3327c:	cmp	r3, #0
   33280:	bne	332b8 <flatcc_json_parser_set_error@@Base+0x60>
   33284:	ldr	r3, [fp, #-8]
   33288:	ldr	r2, [fp, #-20]	; 0xffffffec
   3328c:	str	r2, [r3, #24]
   33290:	ldr	r3, [fp, #-8]
   33294:	ldr	r3, [r3, #4]
   33298:	ldr	r2, [fp, #-12]
   3329c:	sub	r3, r2, r3
   332a0:	add	r2, r3, #1
   332a4:	ldr	r3, [fp, #-8]
   332a8:	str	r2, [r3, #20]
   332ac:	ldr	r3, [fp, #-8]
   332b0:	ldr	r2, [fp, #-12]
   332b4:	str	r2, [r3, #36]	; 0x24
   332b8:	ldr	r3, [fp, #-16]
   332bc:	mov	r0, r3
   332c0:	add	sp, fp, #0
   332c4:	pop	{fp}		; (ldr fp, [sp], #4)
   332c8:	bx	lr

000332cc <flatcc_json_parser_string_part@@Base>:
   332cc:	str	fp, [sp, #-8]!
   332d0:	str	lr, [sp, #4]
   332d4:	add	fp, sp, #4
   332d8:	sub	sp, sp, #16
   332dc:	str	r0, [fp, #-8]
   332e0:	str	r1, [fp, #-12]
   332e4:	str	r2, [fp, #-16]
   332e8:	b	332f8 <flatcc_json_parser_string_part@@Base+0x2c>
   332ec:	ldr	r3, [fp, #-12]
   332f0:	add	r3, r3, #1
   332f4:	str	r3, [fp, #-12]
   332f8:	ldr	r2, [fp, #-12]
   332fc:	ldr	r3, [fp, #-16]
   33300:	cmp	r2, r3
   33304:	beq	33338 <flatcc_json_parser_string_part@@Base+0x6c>
   33308:	ldr	r3, [fp, #-12]
   3330c:	ldrb	r3, [r3]
   33310:	cmp	r3, #34	; 0x22
   33314:	beq	33338 <flatcc_json_parser_string_part@@Base+0x6c>
   33318:	ldr	r3, [fp, #-12]
   3331c:	ldrb	r3, [r3]
   33320:	cmp	r3, #31
   33324:	bls	33338 <flatcc_json_parser_string_part@@Base+0x6c>
   33328:	ldr	r3, [fp, #-12]
   3332c:	ldrb	r3, [r3]
   33330:	cmp	r3, #92	; 0x5c
   33334:	bne	332ec <flatcc_json_parser_string_part@@Base+0x20>
   33338:	ldr	r2, [fp, #-12]
   3333c:	ldr	r3, [fp, #-16]
   33340:	cmp	r2, r3
   33344:	bne	33364 <flatcc_json_parser_string_part@@Base+0x98>
   33348:	mov	r3, #20
   3334c:	ldr	r2, [fp, #-16]
   33350:	ldr	r1, [fp, #-12]
   33354:	ldr	r0, [fp, #-8]
   33358:	bl	33258 <flatcc_json_parser_set_error@@Base>
   3335c:	mov	r3, r0
   33360:	b	333ac <flatcc_json_parser_string_part@@Base+0xe0>
   33364:	ldr	r3, [fp, #-12]
   33368:	ldrb	r3, [r3]
   3336c:	cmp	r3, #34	; 0x22
   33370:	bne	3337c <flatcc_json_parser_string_part@@Base+0xb0>
   33374:	ldr	r3, [fp, #-12]
   33378:	b	333ac <flatcc_json_parser_string_part@@Base+0xe0>
   3337c:	ldr	r3, [fp, #-12]
   33380:	ldrb	r3, [r3]
   33384:	cmp	r3, #31
   33388:	bhi	333a8 <flatcc_json_parser_string_part@@Base+0xdc>
   3338c:	mov	r3, #17
   33390:	ldr	r2, [fp, #-16]
   33394:	ldr	r1, [fp, #-12]
   33398:	ldr	r0, [fp, #-8]
   3339c:	bl	33258 <flatcc_json_parser_set_error@@Base>
   333a0:	mov	r3, r0
   333a4:	b	333ac <flatcc_json_parser_string_part@@Base+0xe0>
   333a8:	ldr	r3, [fp, #-12]
   333ac:	mov	r0, r3
   333b0:	sub	sp, fp, #4
   333b4:	ldr	fp, [sp]
   333b8:	add	sp, sp, #4
   333bc:	pop	{pc}		; (ldr pc, [sp], #4)

000333c0 <flatcc_json_parser_space_ext@@Base>:
   333c0:	str	fp, [sp, #-8]!
   333c4:	str	lr, [sp, #4]
   333c8:	add	fp, sp, #4
   333cc:	sub	sp, sp, #16
   333d0:	str	r0, [fp, #-8]
   333d4:	str	r1, [fp, #-12]
   333d8:	str	r2, [fp, #-16]
   333dc:	b	333ec <flatcc_json_parser_space_ext@@Base+0x2c>
   333e0:	ldr	r3, [fp, #-12]
   333e4:	add	r3, r3, #1
   333e8:	str	r3, [fp, #-12]
   333ec:	ldr	r2, [fp, #-12]
   333f0:	ldr	r3, [fp, #-16]
   333f4:	cmp	r2, r3
   333f8:	beq	33528 <flatcc_json_parser_space_ext@@Base+0x168>
   333fc:	ldr	r3, [fp, #-12]
   33400:	ldrb	r3, [r3]
   33404:	cmp	r3, #32
   33408:	beq	333e0 <flatcc_json_parser_space_ext@@Base+0x20>
   3340c:	b	33528 <flatcc_json_parser_space_ext@@Base+0x168>
   33410:	ldr	r3, [fp, #-12]
   33414:	ldrb	r3, [r3]
   33418:	sub	r3, r3, #9
   3341c:	cmp	r3, #23
   33420:	addls	pc, pc, r3, lsl #2
   33424:	b	3350c <flatcc_json_parser_space_ext@@Base+0x14c>
   33428:	b	334fc <flatcc_json_parser_space_ext@@Base+0x13c>
   3342c:	b	334cc <flatcc_json_parser_space_ext@@Base+0x10c>
   33430:	b	3350c <flatcc_json_parser_space_ext@@Base+0x14c>
   33434:	b	3350c <flatcc_json_parser_space_ext@@Base+0x14c>
   33438:	b	33488 <flatcc_json_parser_space_ext@@Base+0xc8>
   3343c:	b	3350c <flatcc_json_parser_space_ext@@Base+0x14c>
   33440:	b	3350c <flatcc_json_parser_space_ext@@Base+0x14c>
   33444:	b	3350c <flatcc_json_parser_space_ext@@Base+0x14c>
   33448:	b	3350c <flatcc_json_parser_space_ext@@Base+0x14c>
   3344c:	b	3350c <flatcc_json_parser_space_ext@@Base+0x14c>
   33450:	b	3350c <flatcc_json_parser_space_ext@@Base+0x14c>
   33454:	b	3350c <flatcc_json_parser_space_ext@@Base+0x14c>
   33458:	b	3350c <flatcc_json_parser_space_ext@@Base+0x14c>
   3345c:	b	3350c <flatcc_json_parser_space_ext@@Base+0x14c>
   33460:	b	3350c <flatcc_json_parser_space_ext@@Base+0x14c>
   33464:	b	3350c <flatcc_json_parser_space_ext@@Base+0x14c>
   33468:	b	3350c <flatcc_json_parser_space_ext@@Base+0x14c>
   3346c:	b	3350c <flatcc_json_parser_space_ext@@Base+0x14c>
   33470:	b	3350c <flatcc_json_parser_space_ext@@Base+0x14c>
   33474:	b	3350c <flatcc_json_parser_space_ext@@Base+0x14c>
   33478:	b	3350c <flatcc_json_parser_space_ext@@Base+0x14c>
   3347c:	b	3350c <flatcc_json_parser_space_ext@@Base+0x14c>
   33480:	b	3350c <flatcc_json_parser_space_ext@@Base+0x14c>
   33484:	b	333dc <flatcc_json_parser_space_ext@@Base+0x1c>
   33488:	ldr	r2, [fp, #-16]
   3348c:	ldr	r3, [fp, #-12]
   33490:	sub	r3, r2, r3
   33494:	cmp	r3, #1
   33498:	ble	334b8 <flatcc_json_parser_space_ext@@Base+0xf8>
   3349c:	ldr	r3, [fp, #-12]
   334a0:	add	r3, r3, #1
   334a4:	ldrb	r3, [r3]
   334a8:	cmp	r3, #10
   334ac:	bne	334b8 <flatcc_json_parser_space_ext@@Base+0xf8>
   334b0:	mov	r3, #1
   334b4:	b	334bc <flatcc_json_parser_space_ext@@Base+0xfc>
   334b8:	mov	r3, #0
   334bc:	mov	r2, r3
   334c0:	ldr	r3, [fp, #-12]
   334c4:	add	r3, r3, r2
   334c8:	str	r3, [fp, #-12]
   334cc:	ldr	r3, [fp, #-8]
   334d0:	ldr	r3, [r3, #16]
   334d4:	add	r2, r3, #1
   334d8:	ldr	r3, [fp, #-8]
   334dc:	str	r2, [r3, #16]
   334e0:	ldr	r3, [fp, #-12]
   334e4:	add	r3, r3, #1
   334e8:	str	r3, [fp, #-12]
   334ec:	ldr	r3, [fp, #-8]
   334f0:	ldr	r2, [fp, #-12]
   334f4:	str	r2, [r3, #4]
   334f8:	b	33528 <flatcc_json_parser_space_ext@@Base+0x168>
   334fc:	ldr	r3, [fp, #-12]
   33500:	add	r3, r3, #1
   33504:	str	r3, [fp, #-12]
   33508:	b	33528 <flatcc_json_parser_space_ext@@Base+0x168>
   3350c:	mov	r3, #5
   33510:	ldr	r2, [fp, #-16]
   33514:	ldr	r1, [fp, #-12]
   33518:	ldr	r0, [fp, #-8]
   3351c:	bl	33258 <flatcc_json_parser_set_error@@Base>
   33520:	mov	r3, r0
   33524:	b	3354c <flatcc_json_parser_space_ext@@Base+0x18c>
   33528:	ldr	r2, [fp, #-12]
   3352c:	ldr	r3, [fp, #-16]
   33530:	cmp	r2, r3
   33534:	beq	33548 <flatcc_json_parser_space_ext@@Base+0x188>
   33538:	ldr	r3, [fp, #-12]
   3353c:	ldrb	r3, [r3]
   33540:	cmp	r3, #32
   33544:	bls	33410 <flatcc_json_parser_space_ext@@Base+0x50>
   33548:	ldr	r3, [fp, #-12]
   3354c:	mov	r0, r3
   33550:	sub	sp, fp, #4
   33554:	ldr	fp, [sp]
   33558:	add	sp, sp, #4
   3355c:	pop	{pc}		; (ldr pc, [sp], #4)

00033560 <flatcc_json_parser_string_escape@@Base>:
   33560:	str	fp, [sp, #-8]!
   33564:	str	lr, [sp, #4]
   33568:	add	fp, sp, #4
   3356c:	sub	sp, sp, #24
   33570:	str	r0, [fp, #-16]
   33574:	str	r1, [fp, #-20]	; 0xffffffec
   33578:	str	r2, [fp, #-24]	; 0xffffffe8
   3357c:	str	r3, [fp, #-28]	; 0xffffffe4
   33580:	ldr	r2, [fp, #-24]	; 0xffffffe8
   33584:	ldr	r3, [fp, #-20]	; 0xffffffec
   33588:	sub	r3, r2, r3
   3358c:	cmp	r3, #1
   33590:	ble	335a4 <flatcc_json_parser_string_escape@@Base+0x44>
   33594:	ldr	r3, [fp, #-20]	; 0xffffffec
   33598:	ldrb	r3, [r3]
   3359c:	cmp	r3, #92	; 0x5c
   335a0:	beq	335cc <flatcc_json_parser_string_escape@@Base+0x6c>
   335a4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   335a8:	mov	r2, #0
   335ac:	strb	r2, [r3]
   335b0:	mov	r3, #18
   335b4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   335b8:	ldr	r1, [fp, #-20]	; 0xffffffec
   335bc:	ldr	r0, [fp, #-16]
   335c0:	bl	33258 <flatcc_json_parser_set_error@@Base>
   335c4:	mov	r3, r0
   335c8:	b	33f20 <flatcc_json_parser_string_escape@@Base+0x9c0>
   335cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   335d0:	add	r3, r3, #1
   335d4:	ldrb	r3, [r3]
   335d8:	sub	r3, r3, #34	; 0x22
   335dc:	cmp	r3, #86	; 0x56
   335e0:	addls	pc, pc, r3, lsl #2
   335e4:	b	33efc <flatcc_json_parser_string_escape@@Base+0x99c>
   335e8:	b	33e84 <flatcc_json_parser_string_escape@@Base+0x924>
   335ec:	b	33efc <flatcc_json_parser_string_escape@@Base+0x99c>
   335f0:	b	33efc <flatcc_json_parser_string_escape@@Base+0x99c>
   335f4:	b	33efc <flatcc_json_parser_string_escape@@Base+0x99c>
   335f8:	b	33efc <flatcc_json_parser_string_escape@@Base+0x99c>
   335fc:	b	33efc <flatcc_json_parser_string_escape@@Base+0x99c>
   33600:	b	33efc <flatcc_json_parser_string_escape@@Base+0x99c>
   33604:	b	33efc <flatcc_json_parser_string_escape@@Base+0x99c>
   33608:	b	33efc <flatcc_json_parser_string_escape@@Base+0x99c>
   3360c:	b	33efc <flatcc_json_parser_string_escape@@Base+0x99c>
   33610:	b	33efc <flatcc_json_parser_string_escape@@Base+0x99c>
   33614:	b	33efc <flatcc_json_parser_string_escape@@Base+0x99c>
   33618:	b	33efc <flatcc_json_parser_string_escape@@Base+0x99c>
   3361c:	b	33ed4 <flatcc_json_parser_string_escape@@Base+0x974>
   33620:	b	33efc <flatcc_json_parser_string_escape@@Base+0x99c>
   33624:	b	33efc <flatcc_json_parser_string_escape@@Base+0x99c>
   33628:	b	33efc <flatcc_json_parser_string_escape@@Base+0x99c>
   3362c:	b	33efc <flatcc_json_parser_string_escape@@Base+0x99c>
   33630:	b	33efc <flatcc_json_parser_string_escape@@Base+0x99c>
   33634:	b	33efc <flatcc_json_parser_string_escape@@Base+0x99c>
   33638:	b	33efc <flatcc_json_parser_string_escape@@Base+0x99c>
   3363c:	b	33efc <flatcc_json_parser_string_escape@@Base+0x99c>
   33640:	b	33efc <flatcc_json_parser_string_escape@@Base+0x99c>
   33644:	b	33efc <flatcc_json_parser_string_escape@@Base+0x99c>
   33648:	b	33efc <flatcc_json_parser_string_escape@@Base+0x99c>
   3364c:	b	33efc <flatcc_json_parser_string_escape@@Base+0x99c>
   33650:	b	33efc <flatcc_json_parser_string_escape@@Base+0x99c>
   33654:	b	33efc <flatcc_json_parser_string_escape@@Base+0x99c>
   33658:	b	33efc <flatcc_json_parser_string_escape@@Base+0x99c>
   3365c:	b	33efc <flatcc_json_parser_string_escape@@Base+0x99c>
   33660:	b	33efc <flatcc_json_parser_string_escape@@Base+0x99c>
   33664:	b	33efc <flatcc_json_parser_string_escape@@Base+0x99c>
   33668:	b	33efc <flatcc_json_parser_string_escape@@Base+0x99c>
   3366c:	b	33efc <flatcc_json_parser_string_escape@@Base+0x99c>
   33670:	b	33efc <flatcc_json_parser_string_escape@@Base+0x99c>
   33674:	b	33efc <flatcc_json_parser_string_escape@@Base+0x99c>
   33678:	b	33efc <flatcc_json_parser_string_escape@@Base+0x99c>
   3367c:	b	33efc <flatcc_json_parser_string_escape@@Base+0x99c>
   33680:	b	33efc <flatcc_json_parser_string_escape@@Base+0x99c>
   33684:	b	33efc <flatcc_json_parser_string_escape@@Base+0x99c>
   33688:	b	33efc <flatcc_json_parser_string_escape@@Base+0x99c>
   3368c:	b	33efc <flatcc_json_parser_string_escape@@Base+0x99c>
   33690:	b	33efc <flatcc_json_parser_string_escape@@Base+0x99c>
   33694:	b	33efc <flatcc_json_parser_string_escape@@Base+0x99c>
   33698:	b	33efc <flatcc_json_parser_string_escape@@Base+0x99c>
   3369c:	b	33efc <flatcc_json_parser_string_escape@@Base+0x99c>
   336a0:	b	33efc <flatcc_json_parser_string_escape@@Base+0x99c>
   336a4:	b	33efc <flatcc_json_parser_string_escape@@Base+0x99c>
   336a8:	b	33efc <flatcc_json_parser_string_escape@@Base+0x99c>
   336ac:	b	33efc <flatcc_json_parser_string_escape@@Base+0x99c>
   336b0:	b	33efc <flatcc_json_parser_string_escape@@Base+0x99c>
   336b4:	b	33efc <flatcc_json_parser_string_escape@@Base+0x99c>
   336b8:	b	33efc <flatcc_json_parser_string_escape@@Base+0x99c>
   336bc:	b	33efc <flatcc_json_parser_string_escape@@Base+0x99c>
   336c0:	b	33efc <flatcc_json_parser_string_escape@@Base+0x99c>
   336c4:	b	33efc <flatcc_json_parser_string_escape@@Base+0x99c>
   336c8:	b	33efc <flatcc_json_parser_string_escape@@Base+0x99c>
   336cc:	b	33efc <flatcc_json_parser_string_escape@@Base+0x99c>
   336d0:	b	33eac <flatcc_json_parser_string_escape@@Base+0x94c>
   336d4:	b	33efc <flatcc_json_parser_string_escape@@Base+0x99c>
   336d8:	b	33efc <flatcc_json_parser_string_escape@@Base+0x99c>
   336dc:	b	33efc <flatcc_json_parser_string_escape@@Base+0x99c>
   336e0:	b	33efc <flatcc_json_parser_string_escape@@Base+0x99c>
   336e4:	b	33efc <flatcc_json_parser_string_escape@@Base+0x99c>
   336e8:	b	33e34 <flatcc_json_parser_string_escape@@Base+0x8d4>
   336ec:	b	33efc <flatcc_json_parser_string_escape@@Base+0x99c>
   336f0:	b	33efc <flatcc_json_parser_string_escape@@Base+0x99c>
   336f4:	b	33efc <flatcc_json_parser_string_escape@@Base+0x99c>
   336f8:	b	33e5c <flatcc_json_parser_string_escape@@Base+0x8fc>
   336fc:	b	33efc <flatcc_json_parser_string_escape@@Base+0x99c>
   33700:	b	33efc <flatcc_json_parser_string_escape@@Base+0x99c>
   33704:	b	33efc <flatcc_json_parser_string_escape@@Base+0x99c>
   33708:	b	33efc <flatcc_json_parser_string_escape@@Base+0x99c>
   3370c:	b	33efc <flatcc_json_parser_string_escape@@Base+0x99c>
   33710:	b	33efc <flatcc_json_parser_string_escape@@Base+0x99c>
   33714:	b	33efc <flatcc_json_parser_string_escape@@Base+0x99c>
   33718:	b	33de4 <flatcc_json_parser_string_escape@@Base+0x884>
   3371c:	b	33efc <flatcc_json_parser_string_escape@@Base+0x99c>
   33720:	b	33efc <flatcc_json_parser_string_escape@@Base+0x99c>
   33724:	b	33efc <flatcc_json_parser_string_escape@@Base+0x99c>
   33728:	b	33e0c <flatcc_json_parser_string_escape@@Base+0x8ac>
   3372c:	b	33efc <flatcc_json_parser_string_escape@@Base+0x99c>
   33730:	b	33dbc <flatcc_json_parser_string_escape@@Base+0x85c>
   33734:	b	33920 <flatcc_json_parser_string_escape@@Base+0x3c0>
   33738:	b	33efc <flatcc_json_parser_string_escape@@Base+0x99c>
   3373c:	b	33efc <flatcc_json_parser_string_escape@@Base+0x99c>
   33740:	b	33744 <flatcc_json_parser_string_escape@@Base+0x1e4>
   33744:	mov	r3, #0
   33748:	strb	r3, [fp, #-5]
   3374c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   33750:	mov	r2, #1
   33754:	strb	r2, [r3]
   33758:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3375c:	ldr	r3, [fp, #-20]	; 0xffffffec
   33760:	sub	r3, r2, r3
   33764:	cmp	r3, #3
   33768:	bgt	33794 <flatcc_json_parser_string_escape@@Base+0x234>
   3376c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   33770:	mov	r2, #0
   33774:	strb	r2, [r3]
   33778:	mov	r3, #18
   3377c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   33780:	ldr	r1, [fp, #-20]	; 0xffffffec
   33784:	ldr	r0, [fp, #-16]
   33788:	bl	33258 <flatcc_json_parser_set_error@@Base>
   3378c:	mov	r3, r0
   33790:	b	33f20 <flatcc_json_parser_string_escape@@Base+0x9c0>
   33794:	ldr	r3, [fp, #-20]	; 0xffffffec
   33798:	ldrb	r3, [r3, #2]
   3379c:	strb	r3, [fp, #-9]
   337a0:	ldrb	r3, [fp, #-9]
   337a4:	cmp	r3, #47	; 0x2f
   337a8:	bls	337dc <flatcc_json_parser_string_escape@@Base+0x27c>
   337ac:	ldrb	r3, [fp, #-9]
   337b0:	cmp	r3, #57	; 0x39
   337b4:	bhi	337dc <flatcc_json_parser_string_escape@@Base+0x27c>
   337b8:	ldrb	r3, [fp, #-9]
   337bc:	sub	r3, r3, #48	; 0x30
   337c0:	lsl	r3, r3, #4
   337c4:	sxtb	r2, r3
   337c8:	ldrsb	r3, [fp, #-5]
   337cc:	orr	r3, r2, r3
   337d0:	sxtb	r3, r3
   337d4:	strb	r3, [fp, #-5]
   337d8:	b	3384c <flatcc_json_parser_string_escape@@Base+0x2ec>
   337dc:	ldrb	r3, [fp, #-9]
   337e0:	orr	r3, r3, #32
   337e4:	strb	r3, [fp, #-9]
   337e8:	ldrb	r3, [fp, #-9]
   337ec:	cmp	r3, #96	; 0x60
   337f0:	bls	33824 <flatcc_json_parser_string_escape@@Base+0x2c4>
   337f4:	ldrb	r3, [fp, #-9]
   337f8:	cmp	r3, #102	; 0x66
   337fc:	bhi	33824 <flatcc_json_parser_string_escape@@Base+0x2c4>
   33800:	ldrb	r3, [fp, #-9]
   33804:	sub	r3, r3, #87	; 0x57
   33808:	lsl	r3, r3, #4
   3380c:	sxtb	r2, r3
   33810:	ldrsb	r3, [fp, #-5]
   33814:	orr	r3, r2, r3
   33818:	sxtb	r3, r3
   3381c:	strb	r3, [fp, #-5]
   33820:	b	3384c <flatcc_json_parser_string_escape@@Base+0x2ec>
   33824:	ldr	r3, [fp, #-28]	; 0xffffffe4
   33828:	mov	r2, #0
   3382c:	strb	r2, [r3]
   33830:	mov	r3, #18
   33834:	ldr	r2, [fp, #-24]	; 0xffffffe8
   33838:	ldr	r1, [fp, #-20]	; 0xffffffec
   3383c:	ldr	r0, [fp, #-16]
   33840:	bl	33258 <flatcc_json_parser_set_error@@Base>
   33844:	mov	r3, r0
   33848:	b	33f20 <flatcc_json_parser_string_escape@@Base+0x9c0>
   3384c:	ldr	r3, [fp, #-20]	; 0xffffffec
   33850:	ldrb	r3, [r3, #3]
   33854:	strb	r3, [fp, #-9]
   33858:	ldrb	r3, [fp, #-9]
   3385c:	cmp	r3, #47	; 0x2f
   33860:	bls	33894 <flatcc_json_parser_string_escape@@Base+0x334>
   33864:	ldrb	r3, [fp, #-9]
   33868:	cmp	r3, #57	; 0x39
   3386c:	bhi	33894 <flatcc_json_parser_string_escape@@Base+0x334>
   33870:	ldrb	r3, [fp, #-9]
   33874:	sub	r3, r3, #48	; 0x30
   33878:	uxtb	r3, r3
   3387c:	sxtb	r2, r3
   33880:	ldrsb	r3, [fp, #-5]
   33884:	orr	r3, r2, r3
   33888:	sxtb	r3, r3
   3388c:	strb	r3, [fp, #-5]
   33890:	b	33904 <flatcc_json_parser_string_escape@@Base+0x3a4>
   33894:	ldrb	r3, [fp, #-9]
   33898:	orr	r3, r3, #32
   3389c:	strb	r3, [fp, #-9]
   338a0:	ldrb	r3, [fp, #-9]
   338a4:	cmp	r3, #96	; 0x60
   338a8:	bls	338dc <flatcc_json_parser_string_escape@@Base+0x37c>
   338ac:	ldrb	r3, [fp, #-9]
   338b0:	cmp	r3, #102	; 0x66
   338b4:	bhi	338dc <flatcc_json_parser_string_escape@@Base+0x37c>
   338b8:	ldrb	r3, [fp, #-9]
   338bc:	sub	r3, r3, #87	; 0x57
   338c0:	uxtb	r3, r3
   338c4:	sxtb	r2, r3
   338c8:	ldrsb	r3, [fp, #-5]
   338cc:	orr	r3, r2, r3
   338d0:	sxtb	r3, r3
   338d4:	strb	r3, [fp, #-5]
   338d8:	b	33904 <flatcc_json_parser_string_escape@@Base+0x3a4>
   338dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   338e0:	mov	r2, #0
   338e4:	strb	r2, [r3]
   338e8:	mov	r3, #18
   338ec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   338f0:	ldr	r1, [fp, #-20]	; 0xffffffec
   338f4:	ldr	r0, [fp, #-16]
   338f8:	bl	33258 <flatcc_json_parser_set_error@@Base>
   338fc:	mov	r3, r0
   33900:	b	33f20 <flatcc_json_parser_string_escape@@Base+0x9c0>
   33904:	ldr	r3, [fp, #-28]	; 0xffffffe4
   33908:	add	r3, r3, #1
   3390c:	ldrb	r2, [fp, #-5]
   33910:	strb	r2, [r3]
   33914:	ldr	r3, [fp, #-20]	; 0xffffffec
   33918:	add	r3, r3, #4
   3391c:	b	33f20 <flatcc_json_parser_string_escape@@Base+0x9c0>
   33920:	ldr	r2, [fp, #-24]	; 0xffffffe8
   33924:	ldr	r3, [fp, #-20]	; 0xffffffec
   33928:	sub	r3, r2, r3
   3392c:	cmp	r3, #5
   33930:	bgt	3395c <flatcc_json_parser_string_escape@@Base+0x3fc>
   33934:	ldr	r3, [fp, #-28]	; 0xffffffe4
   33938:	mov	r2, #0
   3393c:	strb	r2, [r3]
   33940:	mov	r3, #18
   33944:	ldr	r2, [fp, #-24]	; 0xffffffe8
   33948:	ldr	r1, [fp, #-20]	; 0xffffffec
   3394c:	ldr	r0, [fp, #-16]
   33950:	bl	33258 <flatcc_json_parser_set_error@@Base>
   33954:	mov	r3, r0
   33958:	b	33f20 <flatcc_json_parser_string_escape@@Base+0x9c0>
   3395c:	mov	r3, #0
   33960:	strh	r3, [fp, #-8]
   33964:	ldr	r3, [fp, #-20]	; 0xffffffec
   33968:	ldrb	r3, [r3, #2]
   3396c:	strb	r3, [fp, #-9]
   33970:	ldrb	r3, [fp, #-9]
   33974:	cmp	r3, #47	; 0x2f
   33978:	bls	339a8 <flatcc_json_parser_string_escape@@Base+0x448>
   3397c:	ldrb	r3, [fp, #-9]
   33980:	cmp	r3, #57	; 0x39
   33984:	bhi	339a8 <flatcc_json_parser_string_escape@@Base+0x448>
   33988:	ldrb	r3, [fp, #-9]
   3398c:	uxth	r3, r3
   33990:	sub	r3, r3, #48	; 0x30
   33994:	strh	r3, [fp, #-12]
   33998:	ldrh	r3, [fp, #-12]
   3399c:	lsl	r3, r3, #12
   339a0:	strh	r3, [fp, #-8]
   339a4:	b	33a24 <flatcc_json_parser_string_escape@@Base+0x4c4>
   339a8:	ldrb	r3, [fp, #-9]
   339ac:	orr	r3, r3, #32
   339b0:	strb	r3, [fp, #-9]
   339b4:	ldrb	r3, [fp, #-9]
   339b8:	cmp	r3, #96	; 0x60
   339bc:	bls	339fc <flatcc_json_parser_string_escape@@Base+0x49c>
   339c0:	ldrb	r3, [fp, #-9]
   339c4:	cmp	r3, #102	; 0x66
   339c8:	bhi	339fc <flatcc_json_parser_string_escape@@Base+0x49c>
   339cc:	ldrb	r3, [fp, #-9]
   339d0:	uxth	r3, r3
   339d4:	sub	r3, r3, #87	; 0x57
   339d8:	strh	r3, [fp, #-12]
   339dc:	ldrh	r3, [fp, #-12]
   339e0:	lsl	r3, r3, #12
   339e4:	sxth	r2, r3
   339e8:	ldrsh	r3, [fp, #-8]
   339ec:	orr	r3, r2, r3
   339f0:	sxth	r3, r3
   339f4:	strh	r3, [fp, #-8]
   339f8:	b	33a24 <flatcc_json_parser_string_escape@@Base+0x4c4>
   339fc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   33a00:	mov	r2, #0
   33a04:	strb	r2, [r3]
   33a08:	mov	r3, #18
   33a0c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   33a10:	ldr	r1, [fp, #-20]	; 0xffffffec
   33a14:	ldr	r0, [fp, #-16]
   33a18:	bl	33258 <flatcc_json_parser_set_error@@Base>
   33a1c:	mov	r3, r0
   33a20:	b	33f20 <flatcc_json_parser_string_escape@@Base+0x9c0>
   33a24:	ldr	r3, [fp, #-20]	; 0xffffffec
   33a28:	ldrb	r3, [r3, #3]
   33a2c:	strb	r3, [fp, #-9]
   33a30:	ldrb	r3, [fp, #-9]
   33a34:	cmp	r3, #47	; 0x2f
   33a38:	bls	33a78 <flatcc_json_parser_string_escape@@Base+0x518>
   33a3c:	ldrb	r3, [fp, #-9]
   33a40:	cmp	r3, #57	; 0x39
   33a44:	bhi	33a78 <flatcc_json_parser_string_escape@@Base+0x518>
   33a48:	ldrb	r3, [fp, #-9]
   33a4c:	uxth	r3, r3
   33a50:	sub	r3, r3, #48	; 0x30
   33a54:	strh	r3, [fp, #-12]
   33a58:	ldrh	r3, [fp, #-12]
   33a5c:	lsl	r3, r3, #8
   33a60:	sxth	r2, r3
   33a64:	ldrsh	r3, [fp, #-8]
   33a68:	orr	r3, r2, r3
   33a6c:	sxth	r3, r3
   33a70:	strh	r3, [fp, #-8]
   33a74:	b	33af4 <flatcc_json_parser_string_escape@@Base+0x594>
   33a78:	ldrb	r3, [fp, #-9]
   33a7c:	orr	r3, r3, #32
   33a80:	strb	r3, [fp, #-9]
   33a84:	ldrb	r3, [fp, #-9]
   33a88:	cmp	r3, #96	; 0x60
   33a8c:	bls	33acc <flatcc_json_parser_string_escape@@Base+0x56c>
   33a90:	ldrb	r3, [fp, #-9]
   33a94:	cmp	r3, #102	; 0x66
   33a98:	bhi	33acc <flatcc_json_parser_string_escape@@Base+0x56c>
   33a9c:	ldrb	r3, [fp, #-9]
   33aa0:	uxth	r3, r3
   33aa4:	sub	r3, r3, #87	; 0x57
   33aa8:	strh	r3, [fp, #-12]
   33aac:	ldrh	r3, [fp, #-12]
   33ab0:	lsl	r3, r3, #8
   33ab4:	sxth	r2, r3
   33ab8:	ldrsh	r3, [fp, #-8]
   33abc:	orr	r3, r2, r3
   33ac0:	sxth	r3, r3
   33ac4:	strh	r3, [fp, #-8]
   33ac8:	b	33af4 <flatcc_json_parser_string_escape@@Base+0x594>
   33acc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   33ad0:	mov	r2, #0
   33ad4:	strb	r2, [r3]
   33ad8:	mov	r3, #18
   33adc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   33ae0:	ldr	r1, [fp, #-20]	; 0xffffffec
   33ae4:	ldr	r0, [fp, #-16]
   33ae8:	bl	33258 <flatcc_json_parser_set_error@@Base>
   33aec:	mov	r3, r0
   33af0:	b	33f20 <flatcc_json_parser_string_escape@@Base+0x9c0>
   33af4:	ldr	r3, [fp, #-20]	; 0xffffffec
   33af8:	ldrb	r3, [r3, #4]
   33afc:	strb	r3, [fp, #-9]
   33b00:	ldrb	r3, [fp, #-9]
   33b04:	cmp	r3, #47	; 0x2f
   33b08:	bls	33b48 <flatcc_json_parser_string_escape@@Base+0x5e8>
   33b0c:	ldrb	r3, [fp, #-9]
   33b10:	cmp	r3, #57	; 0x39
   33b14:	bhi	33b48 <flatcc_json_parser_string_escape@@Base+0x5e8>
   33b18:	ldrb	r3, [fp, #-9]
   33b1c:	uxth	r3, r3
   33b20:	sub	r3, r3, #48	; 0x30
   33b24:	strh	r3, [fp, #-12]
   33b28:	ldrh	r3, [fp, #-12]
   33b2c:	lsl	r3, r3, #4
   33b30:	sxth	r2, r3
   33b34:	ldrsh	r3, [fp, #-8]
   33b38:	orr	r3, r2, r3
   33b3c:	sxth	r3, r3
   33b40:	strh	r3, [fp, #-8]
   33b44:	b	33bc4 <flatcc_json_parser_string_escape@@Base+0x664>
   33b48:	ldrb	r3, [fp, #-9]
   33b4c:	orr	r3, r3, #32
   33b50:	strb	r3, [fp, #-9]
   33b54:	ldrb	r3, [fp, #-9]
   33b58:	cmp	r3, #96	; 0x60
   33b5c:	bls	33b9c <flatcc_json_parser_string_escape@@Base+0x63c>
   33b60:	ldrb	r3, [fp, #-9]
   33b64:	cmp	r3, #102	; 0x66
   33b68:	bhi	33b9c <flatcc_json_parser_string_escape@@Base+0x63c>
   33b6c:	ldrb	r3, [fp, #-9]
   33b70:	uxth	r3, r3
   33b74:	sub	r3, r3, #87	; 0x57
   33b78:	strh	r3, [fp, #-12]
   33b7c:	ldrh	r3, [fp, #-12]
   33b80:	lsl	r3, r3, #4
   33b84:	sxth	r2, r3
   33b88:	ldrsh	r3, [fp, #-8]
   33b8c:	orr	r3, r2, r3
   33b90:	sxth	r3, r3
   33b94:	strh	r3, [fp, #-8]
   33b98:	b	33bc4 <flatcc_json_parser_string_escape@@Base+0x664>
   33b9c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   33ba0:	mov	r2, #0
   33ba4:	strb	r2, [r3]
   33ba8:	mov	r3, #18
   33bac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   33bb0:	ldr	r1, [fp, #-20]	; 0xffffffec
   33bb4:	ldr	r0, [fp, #-16]
   33bb8:	bl	33258 <flatcc_json_parser_set_error@@Base>
   33bbc:	mov	r3, r0
   33bc0:	b	33f20 <flatcc_json_parser_string_escape@@Base+0x9c0>
   33bc4:	ldr	r3, [fp, #-20]	; 0xffffffec
   33bc8:	ldrb	r3, [r3, #5]
   33bcc:	strb	r3, [fp, #-9]
   33bd0:	ldrb	r3, [fp, #-9]
   33bd4:	cmp	r3, #47	; 0x2f
   33bd8:	bls	33c0c <flatcc_json_parser_string_escape@@Base+0x6ac>
   33bdc:	ldrb	r3, [fp, #-9]
   33be0:	cmp	r3, #57	; 0x39
   33be4:	bhi	33c0c <flatcc_json_parser_string_escape@@Base+0x6ac>
   33be8:	ldrb	r3, [fp, #-9]
   33bec:	uxth	r3, r3
   33bf0:	sub	r3, r3, #48	; 0x30
   33bf4:	strh	r3, [fp, #-12]
   33bf8:	ldrh	r2, [fp, #-8]
   33bfc:	ldrh	r3, [fp, #-12]
   33c00:	orr	r3, r2, r3
   33c04:	strh	r3, [fp, #-8]
   33c08:	b	33c7c <flatcc_json_parser_string_escape@@Base+0x71c>
   33c0c:	ldrb	r3, [fp, #-9]
   33c10:	orr	r3, r3, #32
   33c14:	strb	r3, [fp, #-9]
   33c18:	ldrb	r3, [fp, #-9]
   33c1c:	cmp	r3, #96	; 0x60
   33c20:	bls	33c54 <flatcc_json_parser_string_escape@@Base+0x6f4>
   33c24:	ldrb	r3, [fp, #-9]
   33c28:	cmp	r3, #102	; 0x66
   33c2c:	bhi	33c54 <flatcc_json_parser_string_escape@@Base+0x6f4>
   33c30:	ldrb	r3, [fp, #-9]
   33c34:	uxth	r3, r3
   33c38:	sub	r3, r3, #87	; 0x57
   33c3c:	strh	r3, [fp, #-12]
   33c40:	ldrh	r2, [fp, #-8]
   33c44:	ldrh	r3, [fp, #-12]
   33c48:	orr	r3, r2, r3
   33c4c:	strh	r3, [fp, #-8]
   33c50:	b	33c7c <flatcc_json_parser_string_escape@@Base+0x71c>
   33c54:	ldr	r3, [fp, #-28]	; 0xffffffe4
   33c58:	mov	r2, #0
   33c5c:	strb	r2, [r3]
   33c60:	mov	r3, #18
   33c64:	ldr	r2, [fp, #-24]	; 0xffffffe8
   33c68:	ldr	r1, [fp, #-20]	; 0xffffffec
   33c6c:	ldr	r0, [fp, #-16]
   33c70:	bl	33258 <flatcc_json_parser_set_error@@Base>
   33c74:	mov	r3, r0
   33c78:	b	33f20 <flatcc_json_parser_string_escape@@Base+0x9c0>
   33c7c:	ldrh	r3, [fp, #-8]
   33c80:	cmp	r3, #127	; 0x7f
   33c84:	bhi	33cac <flatcc_json_parser_string_escape@@Base+0x74c>
   33c88:	ldr	r3, [fp, #-28]	; 0xffffffe4
   33c8c:	mov	r2, #1
   33c90:	strb	r2, [r3]
   33c94:	ldr	r3, [fp, #-28]	; 0xffffffe4
   33c98:	add	r3, r3, #1
   33c9c:	ldrh	r2, [fp, #-8]
   33ca0:	uxtb	r2, r2
   33ca4:	strb	r2, [r3]
   33ca8:	b	33db0 <flatcc_json_parser_string_escape@@Base+0x850>
   33cac:	ldrh	r3, [fp, #-8]
   33cb0:	cmp	r3, #2048	; 0x800
   33cb4:	bcs	33d1c <flatcc_json_parser_string_escape@@Base+0x7bc>
   33cb8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   33cbc:	mov	r2, #2
   33cc0:	strb	r2, [r3]
   33cc4:	ldrh	r3, [fp, #-8]
   33cc8:	lsr	r3, r3, #6
   33ccc:	uxth	r3, r3
   33cd0:	uxtb	r3, r3
   33cd4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   33cd8:	add	r2, r2, #1
   33cdc:	mvn	r3, r3, lsl #26
   33ce0:	mvn	r3, r3, lsr #26
   33ce4:	uxtb	r3, r3
   33ce8:	strb	r3, [r2]
   33cec:	ldrh	r3, [fp, #-8]
   33cf0:	sxtb	r3, r3
   33cf4:	and	r3, r3, #63	; 0x3f
   33cf8:	sxtb	r3, r3
   33cfc:	mvn	r3, r3, lsl #25
   33d00:	mvn	r3, r3, lsr #25
   33d04:	sxtb	r2, r3
   33d08:	ldr	r3, [fp, #-28]	; 0xffffffe4
   33d0c:	add	r3, r3, #2
   33d10:	uxtb	r2, r2
   33d14:	strb	r2, [r3]
   33d18:	b	33db0 <flatcc_json_parser_string_escape@@Base+0x850>
   33d1c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   33d20:	mov	r2, #3
   33d24:	strb	r2, [r3]
   33d28:	ldrh	r3, [fp, #-8]
   33d2c:	lsr	r3, r3, #12
   33d30:	uxth	r3, r3
   33d34:	uxtb	r3, r3
   33d38:	ldr	r2, [fp, #-28]	; 0xffffffe4
   33d3c:	add	r2, r2, #1
   33d40:	mvn	r3, r3, lsl #27
   33d44:	mvn	r3, r3, lsr #27
   33d48:	uxtb	r3, r3
   33d4c:	strb	r3, [r2]
   33d50:	ldrh	r3, [fp, #-8]
   33d54:	lsr	r3, r3, #6
   33d58:	uxth	r3, r3
   33d5c:	sxtb	r3, r3
   33d60:	and	r3, r3, #63	; 0x3f
   33d64:	sxtb	r3, r3
   33d68:	mvn	r3, r3, lsl #25
   33d6c:	mvn	r3, r3, lsr #25
   33d70:	sxtb	r2, r3
   33d74:	ldr	r3, [fp, #-28]	; 0xffffffe4
   33d78:	add	r3, r3, #2
   33d7c:	uxtb	r2, r2
   33d80:	strb	r2, [r3]
   33d84:	ldrh	r3, [fp, #-8]
   33d88:	sxtb	r3, r3
   33d8c:	and	r3, r3, #63	; 0x3f
   33d90:	sxtb	r3, r3
   33d94:	mvn	r3, r3, lsl #25
   33d98:	mvn	r3, r3, lsr #25
   33d9c:	sxtb	r2, r3
   33da0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   33da4:	add	r3, r3, #3
   33da8:	uxtb	r2, r2
   33dac:	strb	r2, [r3]
   33db0:	ldr	r3, [fp, #-20]	; 0xffffffec
   33db4:	add	r3, r3, #6
   33db8:	b	33f20 <flatcc_json_parser_string_escape@@Base+0x9c0>
   33dbc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   33dc0:	mov	r2, #1
   33dc4:	strb	r2, [r3]
   33dc8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   33dcc:	add	r3, r3, #1
   33dd0:	mov	r2, #9
   33dd4:	strb	r2, [r3]
   33dd8:	ldr	r3, [fp, #-20]	; 0xffffffec
   33ddc:	add	r3, r3, #2
   33de0:	b	33f20 <flatcc_json_parser_string_escape@@Base+0x9c0>
   33de4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   33de8:	mov	r2, #1
   33dec:	strb	r2, [r3]
   33df0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   33df4:	add	r3, r3, #1
   33df8:	mov	r2, #10
   33dfc:	strb	r2, [r3]
   33e00:	ldr	r3, [fp, #-20]	; 0xffffffec
   33e04:	add	r3, r3, #2
   33e08:	b	33f20 <flatcc_json_parser_string_escape@@Base+0x9c0>
   33e0c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   33e10:	mov	r2, #1
   33e14:	strb	r2, [r3]
   33e18:	ldr	r3, [fp, #-28]	; 0xffffffe4
   33e1c:	add	r3, r3, #1
   33e20:	mov	r2, #13
   33e24:	strb	r2, [r3]
   33e28:	ldr	r3, [fp, #-20]	; 0xffffffec
   33e2c:	add	r3, r3, #2
   33e30:	b	33f20 <flatcc_json_parser_string_escape@@Base+0x9c0>
   33e34:	ldr	r3, [fp, #-28]	; 0xffffffe4
   33e38:	mov	r2, #1
   33e3c:	strb	r2, [r3]
   33e40:	ldr	r3, [fp, #-28]	; 0xffffffe4
   33e44:	add	r3, r3, #1
   33e48:	mov	r2, #8
   33e4c:	strb	r2, [r3]
   33e50:	ldr	r3, [fp, #-20]	; 0xffffffec
   33e54:	add	r3, r3, #2
   33e58:	b	33f20 <flatcc_json_parser_string_escape@@Base+0x9c0>
   33e5c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   33e60:	mov	r2, #1
   33e64:	strb	r2, [r3]
   33e68:	ldr	r3, [fp, #-28]	; 0xffffffe4
   33e6c:	add	r3, r3, #1
   33e70:	mov	r2, #12
   33e74:	strb	r2, [r3]
   33e78:	ldr	r3, [fp, #-20]	; 0xffffffec
   33e7c:	add	r3, r3, #2
   33e80:	b	33f20 <flatcc_json_parser_string_escape@@Base+0x9c0>
   33e84:	ldr	r3, [fp, #-28]	; 0xffffffe4
   33e88:	mov	r2, #1
   33e8c:	strb	r2, [r3]
   33e90:	ldr	r3, [fp, #-28]	; 0xffffffe4
   33e94:	add	r3, r3, #1
   33e98:	mov	r2, #34	; 0x22
   33e9c:	strb	r2, [r3]
   33ea0:	ldr	r3, [fp, #-20]	; 0xffffffec
   33ea4:	add	r3, r3, #2
   33ea8:	b	33f20 <flatcc_json_parser_string_escape@@Base+0x9c0>
   33eac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   33eb0:	mov	r2, #1
   33eb4:	strb	r2, [r3]
   33eb8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   33ebc:	add	r3, r3, #1
   33ec0:	mov	r2, #92	; 0x5c
   33ec4:	strb	r2, [r3]
   33ec8:	ldr	r3, [fp, #-20]	; 0xffffffec
   33ecc:	add	r3, r3, #2
   33ed0:	b	33f20 <flatcc_json_parser_string_escape@@Base+0x9c0>
   33ed4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   33ed8:	mov	r2, #1
   33edc:	strb	r2, [r3]
   33ee0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   33ee4:	add	r3, r3, #1
   33ee8:	mov	r2, #47	; 0x2f
   33eec:	strb	r2, [r3]
   33ef0:	ldr	r3, [fp, #-20]	; 0xffffffec
   33ef4:	add	r3, r3, #2
   33ef8:	b	33f20 <flatcc_json_parser_string_escape@@Base+0x9c0>
   33efc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   33f00:	mov	r2, #0
   33f04:	strb	r2, [r3]
   33f08:	mov	r3, #18
   33f0c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   33f10:	ldr	r1, [fp, #-20]	; 0xffffffec
   33f14:	ldr	r0, [fp, #-16]
   33f18:	bl	33258 <flatcc_json_parser_set_error@@Base>
   33f1c:	mov	r3, r0
   33f20:	mov	r0, r3
   33f24:	sub	sp, fp, #4
   33f28:	ldr	fp, [sp]
   33f2c:	add	sp, sp, #4
   33f30:	pop	{pc}		; (ldr pc, [sp], #4)

00033f34 <flatcc_json_parser_skip_constant@@Base>:
   33f34:	str	fp, [sp, #-8]!
   33f38:	str	lr, [sp, #4]
   33f3c:	add	fp, sp, #4
   33f40:	sub	sp, sp, #24
   33f44:	str	r0, [fp, #-16]
   33f48:	str	r1, [fp, #-20]	; 0xffffffec
   33f4c:	str	r2, [fp, #-24]	; 0xffffffe8
   33f50:	b	34014 <flatcc_json_parser_skip_constant@@Base+0xe0>
   33f54:	ldr	r3, [fp, #-20]	; 0xffffffec
   33f58:	ldrb	r3, [r3]
   33f5c:	strb	r3, [fp, #-5]
   33f60:	ldrsb	r3, [fp, #-5]
   33f64:	cmp	r3, #0
   33f68:	blt	33f9c <flatcc_json_parser_skip_constant@@Base+0x68>
   33f6c:	ldrb	r3, [fp, #-5]
   33f70:	cmp	r3, #95	; 0x5f
   33f74:	beq	33f9c <flatcc_json_parser_skip_constant@@Base+0x68>
   33f78:	ldrb	r3, [fp, #-5]
   33f7c:	cmp	r3, #47	; 0x2f
   33f80:	bls	33f90 <flatcc_json_parser_skip_constant@@Base+0x5c>
   33f84:	ldrb	r3, [fp, #-5]
   33f88:	cmp	r3, #57	; 0x39
   33f8c:	bls	33f9c <flatcc_json_parser_skip_constant@@Base+0x68>
   33f90:	ldrb	r3, [fp, #-5]
   33f94:	cmp	r3, #46	; 0x2e
   33f98:	bne	33fac <flatcc_json_parser_skip_constant@@Base+0x78>
   33f9c:	ldr	r3, [fp, #-20]	; 0xffffffec
   33fa0:	add	r3, r3, #1
   33fa4:	str	r3, [fp, #-20]	; 0xffffffec
   33fa8:	b	34014 <flatcc_json_parser_skip_constant@@Base+0xe0>
   33fac:	ldrb	r3, [fp, #-5]
   33fb0:	orr	r3, r3, #32
   33fb4:	strb	r3, [fp, #-5]
   33fb8:	ldrb	r3, [fp, #-5]
   33fbc:	cmp	r3, #96	; 0x60
   33fc0:	bls	33fe0 <flatcc_json_parser_skip_constant@@Base+0xac>
   33fc4:	ldrb	r3, [fp, #-5]
   33fc8:	cmp	r3, #122	; 0x7a
   33fcc:	bhi	33fe0 <flatcc_json_parser_skip_constant@@Base+0xac>
   33fd0:	ldr	r3, [fp, #-20]	; 0xffffffec
   33fd4:	add	r3, r3, #1
   33fd8:	str	r3, [fp, #-20]	; 0xffffffec
   33fdc:	b	34014 <flatcc_json_parser_skip_constant@@Base+0xe0>
   33fe0:	ldr	r3, [fp, #-20]	; 0xffffffec
   33fe4:	str	r3, [fp, #-12]
   33fe8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   33fec:	ldr	r1, [fp, #-12]
   33ff0:	ldr	r0, [fp, #-16]
   33ff4:	bl	2dc54 <flatcc_emitter_copy_buffer@@Base+0x25c>
   33ff8:	str	r0, [fp, #-20]	; 0xffffffec
   33ffc:	ldr	r2, [fp, #-20]	; 0xffffffec
   34000:	ldr	r3, [fp, #-12]
   34004:	cmp	r2, r3
   34008:	bne	34014 <flatcc_json_parser_skip_constant@@Base+0xe0>
   3400c:	ldr	r3, [fp, #-20]	; 0xffffffec
   34010:	b	34028 <flatcc_json_parser_skip_constant@@Base+0xf4>
   34014:	ldr	r2, [fp, #-20]	; 0xffffffec
   34018:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3401c:	cmp	r2, r3
   34020:	bne	33f54 <flatcc_json_parser_skip_constant@@Base+0x20>
   34024:	ldr	r3, [fp, #-20]	; 0xffffffec
   34028:	mov	r0, r3
   3402c:	sub	sp, fp, #4
   34030:	ldr	fp, [sp]
   34034:	add	sp, sp, #4
   34038:	pop	{pc}		; (ldr pc, [sp], #4)

0003403c <flatcc_json_parser_match_constant@@Base>:
   3403c:	str	fp, [sp, #-8]!
   34040:	str	lr, [sp, #4]
   34044:	add	fp, sp, #4
   34048:	sub	sp, sp, #32
   3404c:	str	r0, [fp, #-24]	; 0xffffffe8
   34050:	str	r1, [fp, #-28]	; 0xffffffe4
   34054:	str	r2, [fp, #-32]	; 0xffffffe0
   34058:	str	r3, [fp, #-36]	; 0xffffffdc
   3405c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   34060:	str	r3, [fp, #-8]
   34064:	ldr	r3, [fp, #-36]	; 0xffffffdc
   34068:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3406c:	add	r3, r2, r3
   34070:	str	r3, [fp, #-12]
   34074:	ldr	r2, [fp, #-32]	; 0xffffffe0
   34078:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3407c:	sub	r3, r2, r3
   34080:	ldr	r2, [fp, #-36]	; 0xffffffdc
   34084:	cmp	r2, r3
   34088:	blt	340a0 <flatcc_json_parser_match_constant@@Base+0x64>
   3408c:	ldr	r3, [fp, #4]
   34090:	mov	r2, #0
   34094:	str	r2, [r3]
   34098:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3409c:	b	342d0 <flatcc_json_parser_match_constant@@Base+0x294>
   340a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   340a4:	ldr	r3, [r3, #12]
   340a8:	cmp	r3, #0
   340ac:	beq	341b4 <flatcc_json_parser_match_constant@@Base+0x178>
   340b0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   340b4:	ldr	r1, [fp, #-12]
   340b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   340bc:	bl	2dc54 <flatcc_emitter_copy_buffer@@Base+0x25c>
   340c0:	str	r0, [fp, #-28]	; 0xffffffe4
   340c4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   340c8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   340cc:	cmp	r2, r3
   340d0:	bne	340e8 <flatcc_json_parser_match_constant@@Base+0xac>
   340d4:	ldr	r3, [fp, #4]
   340d8:	mov	r2, #0
   340dc:	str	r2, [r3]
   340e0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   340e4:	b	342d0 <flatcc_json_parser_match_constant@@Base+0x294>
   340e8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   340ec:	ldr	r3, [fp, #-12]
   340f0:	cmp	r2, r3
   340f4:	beq	34168 <flatcc_json_parser_match_constant@@Base+0x12c>
   340f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   340fc:	ldrb	r3, [r3]
   34100:	strb	r3, [fp, #-13]
   34104:	ldrb	r3, [fp, #-13]
   34108:	cmp	r3, #95	; 0x5f
   3410c:	beq	3411c <flatcc_json_parser_match_constant@@Base+0xe0>
   34110:	ldrsb	r3, [fp, #-13]
   34114:	cmp	r3, #0
   34118:	bge	34130 <flatcc_json_parser_match_constant@@Base+0xf4>
   3411c:	ldr	r3, [fp, #4]
   34120:	mov	r2, #1
   34124:	str	r2, [r3]
   34128:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3412c:	b	342d0 <flatcc_json_parser_match_constant@@Base+0x294>
   34130:	ldrb	r3, [fp, #-13]
   34134:	orr	r3, r3, #32
   34138:	strb	r3, [fp, #-13]
   3413c:	ldrb	r3, [fp, #-13]
   34140:	cmp	r3, #96	; 0x60
   34144:	bls	34168 <flatcc_json_parser_match_constant@@Base+0x12c>
   34148:	ldrb	r3, [fp, #-13]
   3414c:	cmp	r3, #122	; 0x7a
   34150:	bhi	34168 <flatcc_json_parser_match_constant@@Base+0x12c>
   34154:	ldr	r3, [fp, #4]
   34158:	mov	r2, #1
   3415c:	str	r2, [r3]
   34160:	ldr	r3, [fp, #-28]	; 0xffffffe4
   34164:	b	342d0 <flatcc_json_parser_match_constant@@Base+0x294>
   34168:	ldr	r3, [fp, #4]
   3416c:	mov	r2, #0
   34170:	str	r2, [r3]
   34174:	ldr	r3, [fp, #-28]	; 0xffffffe4
   34178:	ldrb	r3, [r3]
   3417c:	cmp	r3, #44	; 0x2c
   34180:	beq	341a4 <flatcc_json_parser_match_constant@@Base+0x168>
   34184:	ldr	r3, [fp, #-28]	; 0xffffffe4
   34188:	ldrb	r3, [r3]
   3418c:	cmp	r3, #125	; 0x7d
   34190:	beq	341a4 <flatcc_json_parser_match_constant@@Base+0x168>
   34194:	ldr	r3, [fp, #-28]	; 0xffffffe4
   34198:	ldrb	r3, [r3]
   3419c:	cmp	r3, #93	; 0x5d
   341a0:	bne	341ac <flatcc_json_parser_match_constant@@Base+0x170>
   341a4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   341a8:	b	342d0 <flatcc_json_parser_match_constant@@Base+0x294>
   341ac:	ldr	r3, [fp, #-8]
   341b0:	b	342d0 <flatcc_json_parser_match_constant@@Base+0x294>
   341b4:	ldr	r3, [fp, #-12]
   341b8:	str	r3, [fp, #-28]	; 0xffffffe4
   341bc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   341c0:	ldrb	r3, [r3]
   341c4:	cmp	r3, #32
   341c8:	bne	34250 <flatcc_json_parser_match_constant@@Base+0x214>
   341cc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   341d0:	add	r3, r3, #1
   341d4:	str	r3, [fp, #-28]	; 0xffffffe4
   341d8:	b	341e8 <flatcc_json_parser_match_constant@@Base+0x1ac>
   341dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   341e0:	add	r3, r3, #1
   341e4:	str	r3, [fp, #-28]	; 0xffffffe4
   341e8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   341ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   341f0:	cmp	r2, r3
   341f4:	beq	34208 <flatcc_json_parser_match_constant@@Base+0x1cc>
   341f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   341fc:	ldrb	r3, [r3]
   34200:	cmp	r3, #32
   34204:	beq	341dc <flatcc_json_parser_match_constant@@Base+0x1a0>
   34208:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3420c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   34210:	cmp	r2, r3
   34214:	bne	3422c <flatcc_json_parser_match_constant@@Base+0x1f0>
   34218:	ldr	r3, [fp, #4]
   3421c:	mov	r2, #0
   34220:	str	r2, [r3]
   34224:	ldr	r3, [fp, #-28]	; 0xffffffe4
   34228:	b	342d0 <flatcc_json_parser_match_constant@@Base+0x294>
   3422c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   34230:	ldrb	r3, [r3]
   34234:	cmp	r3, #34	; 0x22
   34238:	beq	34250 <flatcc_json_parser_match_constant@@Base+0x214>
   3423c:	ldr	r3, [fp, #4]
   34240:	mov	r2, #1
   34244:	str	r2, [r3]
   34248:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3424c:	b	342d0 <flatcc_json_parser_match_constant@@Base+0x294>
   34250:	ldr	r3, [fp, #-28]	; 0xffffffe4
   34254:	ldrb	r3, [r3]
   34258:	cmp	r3, #34	; 0x22
   3425c:	beq	34290 <flatcc_json_parser_match_constant@@Base+0x254>
   34260:	cmp	r3, #92	; 0x5c
   34264:	bne	342c0 <flatcc_json_parser_match_constant@@Base+0x284>
   34268:	ldr	r3, [fp, #4]
   3426c:	mov	r2, #0
   34270:	str	r2, [r3]
   34274:	mov	r3, #18
   34278:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3427c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   34280:	ldr	r0, [fp, #-24]	; 0xffffffe8
   34284:	bl	33258 <flatcc_json_parser_set_error@@Base>
   34288:	mov	r3, r0
   3428c:	b	342d0 <flatcc_json_parser_match_constant@@Base+0x294>
   34290:	ldr	r3, [fp, #-28]	; 0xffffffe4
   34294:	add	r3, r3, #1
   34298:	mov	r2, #0
   3429c:	mov	r1, r3
   342a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   342a4:	bl	2dc54 <flatcc_emitter_copy_buffer@@Base+0x25c>
   342a8:	str	r0, [fp, #-28]	; 0xffffffe4
   342ac:	ldr	r3, [fp, #4]
   342b0:	mov	r2, #0
   342b4:	str	r2, [r3]
   342b8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   342bc:	b	342d0 <flatcc_json_parser_match_constant@@Base+0x294>
   342c0:	ldr	r3, [fp, #4]
   342c4:	mov	r2, #0
   342c8:	str	r2, [r3]
   342cc:	ldr	r3, [fp, #-8]
   342d0:	mov	r0, r3
   342d4:	sub	sp, fp, #4
   342d8:	ldr	fp, [sp]
   342dc:	add	sp, sp, #4
   342e0:	pop	{pc}		; (ldr pc, [sp], #4)

000342e4 <flatcc_json_parser_unmatched_symbol@@Base>:
   342e4:	str	fp, [sp, #-8]!
   342e8:	str	lr, [sp, #4]
   342ec:	add	fp, sp, #4
   342f0:	sub	sp, sp, #16
   342f4:	str	r0, [fp, #-8]
   342f8:	str	r1, [fp, #-12]
   342fc:	str	r2, [fp, #-16]
   34300:	ldr	r3, [fp, #-8]
   34304:	ldr	r3, [r3, #8]
   34308:	and	r3, r3, #1
   3430c:	cmp	r3, #0
   34310:	beq	343b4 <flatcc_json_parser_unmatched_symbol@@Base+0xd0>
   34314:	ldr	r2, [fp, #-16]
   34318:	ldr	r1, [fp, #-12]
   3431c:	ldr	r0, [fp, #-8]
   34320:	bl	2de9c <flatcc_emitter_copy_buffer@@Base+0x4a4>
   34324:	str	r0, [fp, #-12]
   34328:	ldr	r2, [fp, #-16]
   3432c:	ldr	r1, [fp, #-12]
   34330:	ldr	r0, [fp, #-8]
   34334:	bl	2dc54 <flatcc_emitter_copy_buffer@@Base+0x25c>
   34338:	str	r0, [fp, #-12]
   3433c:	ldr	r2, [fp, #-12]
   34340:	ldr	r3, [fp, #-16]
   34344:	cmp	r2, r3
   34348:	beq	34398 <flatcc_json_parser_unmatched_symbol@@Base+0xb4>
   3434c:	ldr	r3, [fp, #-12]
   34350:	ldrb	r3, [r3]
   34354:	cmp	r3, #58	; 0x3a
   34358:	bne	34398 <flatcc_json_parser_unmatched_symbol@@Base+0xb4>
   3435c:	ldr	r3, [fp, #-12]
   34360:	add	r3, r3, #1
   34364:	str	r3, [fp, #-12]
   34368:	ldr	r2, [fp, #-16]
   3436c:	ldr	r1, [fp, #-12]
   34370:	ldr	r0, [fp, #-8]
   34374:	bl	2dc54 <flatcc_emitter_copy_buffer@@Base+0x25c>
   34378:	str	r0, [fp, #-12]
   3437c:	nop	{0}
   34380:	ldr	r2, [fp, #-16]
   34384:	ldr	r1, [fp, #-12]
   34388:	ldr	r0, [fp, #-8]
   3438c:	bl	34adc <flatcc_json_parser_generic_json@@Base>
   34390:	mov	r3, r0
   34394:	b	343cc <flatcc_json_parser_unmatched_symbol@@Base+0xe8>
   34398:	mov	r3, #4
   3439c:	ldr	r2, [fp, #-16]
   343a0:	ldr	r1, [fp, #-12]
   343a4:	ldr	r0, [fp, #-8]
   343a8:	bl	33258 <flatcc_json_parser_set_error@@Base>
   343ac:	mov	r3, r0
   343b0:	b	343cc <flatcc_json_parser_unmatched_symbol@@Base+0xe8>
   343b4:	mov	r3, #13
   343b8:	ldr	r2, [fp, #-16]
   343bc:	ldr	r1, [fp, #-12]
   343c0:	ldr	r0, [fp, #-8]
   343c4:	bl	33258 <flatcc_json_parser_set_error@@Base>
   343c8:	mov	r3, r0
   343cc:	mov	r0, r3
   343d0:	sub	sp, fp, #4
   343d4:	ldr	fp, [sp]
   343d8:	add	sp, sp, #4
   343dc:	pop	{pc}		; (ldr pc, [sp], #4)
   343e0:	str	fp, [sp, #-8]!
   343e4:	str	lr, [sp, #4]
   343e8:	add	fp, sp, #4
   343ec:	sub	sp, sp, #16
   343f0:	str	r0, [fp, #-8]
   343f4:	str	r1, [fp, #-12]
   343f8:	str	r2, [fp, #-16]
   343fc:	ldr	r2, [fp, #-12]
   34400:	ldr	r3, [fp, #-16]
   34404:	cmp	r2, r3
   34408:	bne	34414 <flatcc_json_parser_unmatched_symbol@@Base+0x130>
   3440c:	ldr	r3, [fp, #-12]
   34410:	b	34774 <flatcc_json_parser_unmatched_symbol@@Base+0x490>
   34414:	ldr	r3, [fp, #-12]
   34418:	ldrb	r3, [r3]
   3441c:	cmp	r3, #45	; 0x2d
   34420:	bne	3445c <flatcc_json_parser_unmatched_symbol@@Base+0x178>
   34424:	ldr	r3, [fp, #-12]
   34428:	add	r3, r3, #1
   3442c:	str	r3, [fp, #-12]
   34430:	ldr	r2, [fp, #-12]
   34434:	ldr	r3, [fp, #-16]
   34438:	cmp	r2, r3
   3443c:	bne	3445c <flatcc_json_parser_unmatched_symbol@@Base+0x178>
   34440:	mov	r3, #6
   34444:	ldr	r2, [fp, #-16]
   34448:	ldr	r1, [fp, #-12]
   3444c:	ldr	r0, [fp, #-8]
   34450:	bl	33258 <flatcc_json_parser_set_error@@Base>
   34454:	mov	r3, r0
   34458:	b	34774 <flatcc_json_parser_unmatched_symbol@@Base+0x490>
   3445c:	ldr	r3, [fp, #-12]
   34460:	ldrb	r3, [r3]
   34464:	cmp	r3, #48	; 0x30
   34468:	bne	3447c <flatcc_json_parser_unmatched_symbol@@Base+0x198>
   3446c:	ldr	r3, [fp, #-12]
   34470:	add	r3, r3, #1
   34474:	str	r3, [fp, #-12]
   34478:	b	34504 <flatcc_json_parser_unmatched_symbol@@Base+0x220>
   3447c:	ldr	r3, [fp, #-12]
   34480:	ldrb	r3, [r3]
   34484:	cmp	r3, #48	; 0x30
   34488:	bls	3449c <flatcc_json_parser_unmatched_symbol@@Base+0x1b8>
   3448c:	ldr	r3, [fp, #-12]
   34490:	ldrb	r3, [r3]
   34494:	cmp	r3, #57	; 0x39
   34498:	bls	344b8 <flatcc_json_parser_unmatched_symbol@@Base+0x1d4>
   3449c:	mov	r3, #6
   344a0:	ldr	r2, [fp, #-16]
   344a4:	ldr	r1, [fp, #-12]
   344a8:	ldr	r0, [fp, #-8]
   344ac:	bl	33258 <flatcc_json_parser_set_error@@Base>
   344b0:	mov	r3, r0
   344b4:	b	34774 <flatcc_json_parser_unmatched_symbol@@Base+0x490>
   344b8:	ldr	r3, [fp, #-12]
   344bc:	add	r3, r3, #1
   344c0:	str	r3, [fp, #-12]
   344c4:	b	344d4 <flatcc_json_parser_unmatched_symbol@@Base+0x1f0>
   344c8:	ldr	r3, [fp, #-12]
   344cc:	add	r3, r3, #1
   344d0:	str	r3, [fp, #-12]
   344d4:	ldr	r2, [fp, #-12]
   344d8:	ldr	r3, [fp, #-16]
   344dc:	cmp	r2, r3
   344e0:	beq	34504 <flatcc_json_parser_unmatched_symbol@@Base+0x220>
   344e4:	ldr	r3, [fp, #-12]
   344e8:	ldrb	r3, [r3]
   344ec:	cmp	r3, #47	; 0x2f
   344f0:	bls	34504 <flatcc_json_parser_unmatched_symbol@@Base+0x220>
   344f4:	ldr	r3, [fp, #-12]
   344f8:	ldrb	r3, [r3]
   344fc:	cmp	r3, #57	; 0x39
   34500:	bls	344c8 <flatcc_json_parser_unmatched_symbol@@Base+0x1e4>
   34504:	ldr	r2, [fp, #-12]
   34508:	ldr	r3, [fp, #-16]
   3450c:	cmp	r2, r3
   34510:	beq	345b8 <flatcc_json_parser_unmatched_symbol@@Base+0x2d4>
   34514:	ldr	r3, [fp, #-12]
   34518:	ldrb	r3, [r3]
   3451c:	cmp	r3, #46	; 0x2e
   34520:	bne	345b8 <flatcc_json_parser_unmatched_symbol@@Base+0x2d4>
   34524:	ldr	r3, [fp, #-12]
   34528:	add	r3, r3, #1
   3452c:	str	r3, [fp, #-12]
   34530:	ldr	r3, [fp, #-12]
   34534:	ldrb	r3, [r3]
   34538:	cmp	r3, #47	; 0x2f
   3453c:	bls	34550 <flatcc_json_parser_unmatched_symbol@@Base+0x26c>
   34540:	ldr	r3, [fp, #-12]
   34544:	ldrb	r3, [r3]
   34548:	cmp	r3, #57	; 0x39
   3454c:	bls	3456c <flatcc_json_parser_unmatched_symbol@@Base+0x288>
   34550:	mov	r3, #6
   34554:	ldr	r2, [fp, #-16]
   34558:	ldr	r1, [fp, #-12]
   3455c:	ldr	r0, [fp, #-8]
   34560:	bl	33258 <flatcc_json_parser_set_error@@Base>
   34564:	mov	r3, r0
   34568:	b	34774 <flatcc_json_parser_unmatched_symbol@@Base+0x490>
   3456c:	ldr	r3, [fp, #-12]
   34570:	add	r3, r3, #1
   34574:	str	r3, [fp, #-12]
   34578:	b	34588 <flatcc_json_parser_unmatched_symbol@@Base+0x2a4>
   3457c:	ldr	r3, [fp, #-12]
   34580:	add	r3, r3, #1
   34584:	str	r3, [fp, #-12]
   34588:	ldr	r2, [fp, #-12]
   3458c:	ldr	r3, [fp, #-16]
   34590:	cmp	r2, r3
   34594:	beq	345b8 <flatcc_json_parser_unmatched_symbol@@Base+0x2d4>
   34598:	ldr	r3, [fp, #-12]
   3459c:	ldrb	r3, [r3]
   345a0:	cmp	r3, #47	; 0x2f
   345a4:	bls	345b8 <flatcc_json_parser_unmatched_symbol@@Base+0x2d4>
   345a8:	ldr	r3, [fp, #-12]
   345ac:	ldrb	r3, [r3]
   345b0:	cmp	r3, #57	; 0x39
   345b4:	bls	3457c <flatcc_json_parser_unmatched_symbol@@Base+0x298>
   345b8:	ldr	r2, [fp, #-12]
   345bc:	ldr	r3, [fp, #-16]
   345c0:	cmp	r2, r3
   345c4:	beq	346e4 <flatcc_json_parser_unmatched_symbol@@Base+0x400>
   345c8:	ldr	r3, [fp, #-12]
   345cc:	ldrb	r3, [r3]
   345d0:	cmp	r3, #101	; 0x65
   345d4:	beq	345e8 <flatcc_json_parser_unmatched_symbol@@Base+0x304>
   345d8:	ldr	r3, [fp, #-12]
   345dc:	ldrb	r3, [r3]
   345e0:	cmp	r3, #69	; 0x45
   345e4:	bne	346e4 <flatcc_json_parser_unmatched_symbol@@Base+0x400>
   345e8:	ldr	r3, [fp, #-12]
   345ec:	add	r3, r3, #1
   345f0:	str	r3, [fp, #-12]
   345f4:	ldr	r2, [fp, #-12]
   345f8:	ldr	r3, [fp, #-16]
   345fc:	cmp	r2, r3
   34600:	bne	34620 <flatcc_json_parser_unmatched_symbol@@Base+0x33c>
   34604:	mov	r3, #6
   34608:	ldr	r2, [fp, #-16]
   3460c:	ldr	r1, [fp, #-12]
   34610:	ldr	r0, [fp, #-8]
   34614:	bl	33258 <flatcc_json_parser_set_error@@Base>
   34618:	mov	r3, r0
   3461c:	b	34774 <flatcc_json_parser_unmatched_symbol@@Base+0x490>
   34620:	ldr	r3, [fp, #-12]
   34624:	ldrb	r3, [r3]
   34628:	cmp	r3, #43	; 0x2b
   3462c:	beq	34640 <flatcc_json_parser_unmatched_symbol@@Base+0x35c>
   34630:	ldr	r3, [fp, #-12]
   34634:	ldrb	r3, [r3]
   34638:	cmp	r3, #45	; 0x2d
   3463c:	bne	3464c <flatcc_json_parser_unmatched_symbol@@Base+0x368>
   34640:	ldr	r3, [fp, #-12]
   34644:	add	r3, r3, #1
   34648:	str	r3, [fp, #-12]
   3464c:	ldr	r2, [fp, #-12]
   34650:	ldr	r3, [fp, #-16]
   34654:	cmp	r2, r3
   34658:	beq	3467c <flatcc_json_parser_unmatched_symbol@@Base+0x398>
   3465c:	ldr	r3, [fp, #-12]
   34660:	ldrb	r3, [r3]
   34664:	cmp	r3, #47	; 0x2f
   34668:	bls	3467c <flatcc_json_parser_unmatched_symbol@@Base+0x398>
   3466c:	ldr	r3, [fp, #-12]
   34670:	ldrb	r3, [r3]
   34674:	cmp	r3, #57	; 0x39
   34678:	bls	34698 <flatcc_json_parser_unmatched_symbol@@Base+0x3b4>
   3467c:	mov	r3, #6
   34680:	ldr	r2, [fp, #-16]
   34684:	ldr	r1, [fp, #-12]
   34688:	ldr	r0, [fp, #-8]
   3468c:	bl	33258 <flatcc_json_parser_set_error@@Base>
   34690:	mov	r3, r0
   34694:	b	34774 <flatcc_json_parser_unmatched_symbol@@Base+0x490>
   34698:	ldr	r3, [fp, #-12]
   3469c:	add	r3, r3, #1
   346a0:	str	r3, [fp, #-12]
   346a4:	b	346b4 <flatcc_json_parser_unmatched_symbol@@Base+0x3d0>
   346a8:	ldr	r3, [fp, #-12]
   346ac:	add	r3, r3, #1
   346b0:	str	r3, [fp, #-12]
   346b4:	ldr	r2, [fp, #-12]
   346b8:	ldr	r3, [fp, #-16]
   346bc:	cmp	r2, r3
   346c0:	beq	346e4 <flatcc_json_parser_unmatched_symbol@@Base+0x400>
   346c4:	ldr	r3, [fp, #-12]
   346c8:	ldrb	r3, [r3]
   346cc:	cmp	r3, #47	; 0x2f
   346d0:	bls	346e4 <flatcc_json_parser_unmatched_symbol@@Base+0x400>
   346d4:	ldr	r3, [fp, #-12]
   346d8:	ldrb	r3, [r3]
   346dc:	cmp	r3, #57	; 0x39
   346e0:	bls	346a8 <flatcc_json_parser_unmatched_symbol@@Base+0x3c4>
   346e4:	ldr	r2, [fp, #-12]
   346e8:	ldr	r3, [fp, #-16]
   346ec:	cmp	r2, r3
   346f0:	beq	3475c <flatcc_json_parser_unmatched_symbol@@Base+0x478>
   346f4:	ldr	r3, [fp, #-12]
   346f8:	ldrb	r3, [r3]
   346fc:	cmp	r3, #32
   34700:	beq	34754 <flatcc_json_parser_unmatched_symbol@@Base+0x470>
   34704:	cmp	r3, #32
   34708:	bgt	34728 <flatcc_json_parser_unmatched_symbol@@Base+0x444>
   3470c:	cmp	r3, #9
   34710:	blt	3475c <flatcc_json_parser_unmatched_symbol@@Base+0x478>
   34714:	cmp	r3, #11
   34718:	ble	34754 <flatcc_json_parser_unmatched_symbol@@Base+0x470>
   3471c:	cmp	r3, #13
   34720:	beq	34754 <flatcc_json_parser_unmatched_symbol@@Base+0x470>
   34724:	b	3475c <flatcc_json_parser_unmatched_symbol@@Base+0x478>
   34728:	cmp	r3, #58	; 0x3a
   3472c:	beq	34754 <flatcc_json_parser_unmatched_symbol@@Base+0x470>
   34730:	cmp	r3, #58	; 0x3a
   34734:	bgt	34744 <flatcc_json_parser_unmatched_symbol@@Base+0x460>
   34738:	cmp	r3, #44	; 0x2c
   3473c:	beq	34754 <flatcc_json_parser_unmatched_symbol@@Base+0x470>
   34740:	b	3475c <flatcc_json_parser_unmatched_symbol@@Base+0x478>
   34744:	cmp	r3, #93	; 0x5d
   34748:	beq	34754 <flatcc_json_parser_unmatched_symbol@@Base+0x470>
   3474c:	cmp	r3, #125	; 0x7d
   34750:	bne	3475c <flatcc_json_parser_unmatched_symbol@@Base+0x478>
   34754:	ldr	r3, [fp, #-12]
   34758:	b	34774 <flatcc_json_parser_unmatched_symbol@@Base+0x490>
   3475c:	mov	r3, #6
   34760:	ldr	r2, [fp, #-16]
   34764:	ldr	r1, [fp, #-12]
   34768:	ldr	r0, [fp, #-8]
   3476c:	bl	33258 <flatcc_json_parser_set_error@@Base>
   34770:	mov	r3, r0
   34774:	mov	r0, r3
   34778:	sub	sp, fp, #4
   3477c:	ldr	fp, [sp]
   34780:	add	sp, sp, #4
   34784:	pop	{pc}		; (ldr pc, [sp], #4)

00034788 <flatcc_json_parser_double@@Base>:
   34788:	str	fp, [sp, #-8]!
   3478c:	str	lr, [sp, #4]
   34790:	add	fp, sp, #4
   34794:	sub	sp, sp, #24
   34798:	str	r0, [fp, #-16]
   3479c:	str	r1, [fp, #-20]	; 0xffffffec
   347a0:	str	r2, [fp, #-24]	; 0xffffffe8
   347a4:	str	r3, [fp, #-28]	; 0xffffffe4
   347a8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   347ac:	mov	r2, #0
   347b0:	mov	r3, #0
   347b4:	strd	r2, [r1]
   347b8:	ldr	r2, [fp, #-20]	; 0xffffffec
   347bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   347c0:	cmp	r2, r3
   347c4:	bne	347d0 <flatcc_json_parser_double@@Base+0x48>
   347c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   347cc:	b	34918 <flatcc_json_parser_double@@Base+0x190>
   347d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   347d4:	str	r3, [fp, #-8]
   347d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   347dc:	ldrb	r3, [r3]
   347e0:	cmp	r3, #45	; 0x2d
   347e4:	bne	347f4 <flatcc_json_parser_double@@Base+0x6c>
   347e8:	ldr	r3, [fp, #-8]
   347ec:	add	r3, r3, #1
   347f0:	str	r3, [fp, #-8]
   347f4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   347f8:	ldr	r3, [fp, #-8]
   347fc:	sub	r3, r2, r3
   34800:	cmp	r3, #1
   34804:	ble	34858 <flatcc_json_parser_double@@Base+0xd0>
   34808:	ldr	r3, [fp, #-8]
   3480c:	ldrb	r3, [r3]
   34810:	cmp	r3, #46	; 0x2e
   34814:	beq	3483c <flatcc_json_parser_double@@Base+0xb4>
   34818:	ldr	r3, [fp, #-8]
   3481c:	ldrb	r3, [r3]
   34820:	cmp	r3, #48	; 0x30
   34824:	bne	34858 <flatcc_json_parser_double@@Base+0xd0>
   34828:	ldr	r3, [fp, #-8]
   3482c:	add	r3, r3, #1
   34830:	ldrb	r3, [r3]
   34834:	cmp	r3, #48	; 0x30
   34838:	bne	34858 <flatcc_json_parser_double@@Base+0xd0>
   3483c:	mov	r3, #6
   34840:	ldr	r2, [fp, #-24]	; 0xffffffe8
   34844:	ldr	r1, [fp, #-20]	; 0xffffffec
   34848:	ldr	r0, [fp, #-16]
   3484c:	bl	33258 <flatcc_json_parser_set_error@@Base>
   34850:	mov	r3, r0
   34854:	b	34918 <flatcc_json_parser_double@@Base+0x190>
   34858:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3485c:	ldr	r3, [fp, #-20]	; 0xffffffec
   34860:	sub	r3, r2, r3
   34864:	ldr	r2, [fp, #-28]	; 0xffffffe4
   34868:	mov	r1, r3
   3486c:	ldr	r0, [fp, #-20]	; 0xffffffec
   34870:	bl	32298 <grisu3_diy_fp_encode_double@@Base+0x1520>
   34874:	str	r0, [fp, #-12]
   34878:	ldr	r3, [fp, #-12]
   3487c:	cmp	r3, #0
   34880:	beq	34894 <flatcc_json_parser_double@@Base+0x10c>
   34884:	ldr	r2, [fp, #-12]
   34888:	ldr	r3, [fp, #-20]	; 0xffffffec
   3488c:	cmp	r2, r3
   34890:	bne	34914 <flatcc_json_parser_double@@Base+0x18c>
   34894:	ldr	r3, [fp, #-28]	; 0xffffffe4
   34898:	vldr	d7, [r3]
   3489c:	vabs.f64	d7, d7
   348a0:	vldr	d6, [pc, #136]	; 34930 <flatcc_json_parser_double@@Base+0x1a8>
   348a4:	vcmp.f64	d7, d6
   348a8:	vmrs	APSR_nzcv, fpscr
   348ac:	movle	r3, #1
   348b0:	movgt	r3, #0
   348b4:	uxtb	r3, r3
   348b8:	eor	r3, r3, #1
   348bc:	uxtb	r3, r3
   348c0:	cmp	r3, #0
   348c4:	beq	348d0 <flatcc_json_parser_double@@Base+0x148>
   348c8:	mov	r3, #1
   348cc:	b	348d4 <flatcc_json_parser_double@@Base+0x14c>
   348d0:	mov	r3, #0
   348d4:	cmp	r3, #0
   348d8:	beq	348f8 <flatcc_json_parser_double@@Base+0x170>
   348dc:	mov	r3, #7
   348e0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   348e4:	ldr	r1, [fp, #-20]	; 0xffffffec
   348e8:	ldr	r0, [fp, #-16]
   348ec:	bl	33258 <flatcc_json_parser_set_error@@Base>
   348f0:	mov	r3, r0
   348f4:	b	34918 <flatcc_json_parser_double@@Base+0x190>
   348f8:	mov	r3, #6
   348fc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   34900:	ldr	r1, [fp, #-20]	; 0xffffffec
   34904:	ldr	r0, [fp, #-16]
   34908:	bl	33258 <flatcc_json_parser_set_error@@Base>
   3490c:	mov	r3, r0
   34910:	b	34918 <flatcc_json_parser_double@@Base+0x190>
   34914:	ldr	r3, [fp, #-12]
   34918:	mov	r0, r3
   3491c:	sub	sp, fp, #4
   34920:	ldr	fp, [sp]
   34924:	add	sp, sp, #4
   34928:	pop	{pc}		; (ldr pc, [sp], #4)
   3492c:	nop	{0}
   34930:			; <UNDEFINED> instruction: 0xffffffff
   34934:	svcvc	0x00efffff

00034938 <flatcc_json_parser_float@@Base>:
   34938:	str	fp, [sp, #-8]!
   3493c:	str	lr, [sp, #4]
   34940:	add	fp, sp, #4
   34944:	sub	sp, sp, #24
   34948:	str	r0, [fp, #-16]
   3494c:	str	r1, [fp, #-20]	; 0xffffffec
   34950:	str	r2, [fp, #-24]	; 0xffffffe8
   34954:	str	r3, [fp, #-28]	; 0xffffffe4
   34958:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3495c:	mov	r2, #0
   34960:	str	r2, [r3]
   34964:	ldr	r2, [fp, #-20]	; 0xffffffec
   34968:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3496c:	cmp	r2, r3
   34970:	bne	3497c <flatcc_json_parser_float@@Base+0x44>
   34974:	ldr	r3, [fp, #-20]	; 0xffffffec
   34978:	b	34ac4 <flatcc_json_parser_float@@Base+0x18c>
   3497c:	ldr	r3, [fp, #-20]	; 0xffffffec
   34980:	str	r3, [fp, #-8]
   34984:	ldr	r3, [fp, #-20]	; 0xffffffec
   34988:	ldrb	r3, [r3]
   3498c:	cmp	r3, #45	; 0x2d
   34990:	bne	349a0 <flatcc_json_parser_float@@Base+0x68>
   34994:	ldr	r3, [fp, #-8]
   34998:	add	r3, r3, #1
   3499c:	str	r3, [fp, #-8]
   349a0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   349a4:	ldr	r3, [fp, #-8]
   349a8:	sub	r3, r2, r3
   349ac:	cmp	r3, #1
   349b0:	ble	34a04 <flatcc_json_parser_float@@Base+0xcc>
   349b4:	ldr	r3, [fp, #-8]
   349b8:	ldrb	r3, [r3]
   349bc:	cmp	r3, #46	; 0x2e
   349c0:	beq	349e8 <flatcc_json_parser_float@@Base+0xb0>
   349c4:	ldr	r3, [fp, #-8]
   349c8:	ldrb	r3, [r3]
   349cc:	cmp	r3, #48	; 0x30
   349d0:	bne	34a04 <flatcc_json_parser_float@@Base+0xcc>
   349d4:	ldr	r3, [fp, #-8]
   349d8:	add	r3, r3, #1
   349dc:	ldrb	r3, [r3]
   349e0:	cmp	r3, #48	; 0x30
   349e4:	bne	34a04 <flatcc_json_parser_float@@Base+0xcc>
   349e8:	mov	r3, #6
   349ec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   349f0:	ldr	r1, [fp, #-20]	; 0xffffffec
   349f4:	ldr	r0, [fp, #-16]
   349f8:	bl	33258 <flatcc_json_parser_set_error@@Base>
   349fc:	mov	r3, r0
   34a00:	b	34ac4 <flatcc_json_parser_float@@Base+0x18c>
   34a04:	ldr	r2, [fp, #-24]	; 0xffffffe8
   34a08:	ldr	r3, [fp, #-20]	; 0xffffffec
   34a0c:	sub	r3, r2, r3
   34a10:	ldr	r2, [fp, #-28]	; 0xffffffe4
   34a14:	mov	r1, r3
   34a18:	ldr	r0, [fp, #-20]	; 0xffffffec
   34a1c:	bl	322dc <grisu3_diy_fp_encode_double@@Base+0x1564>
   34a20:	str	r0, [fp, #-12]
   34a24:	ldr	r3, [fp, #-12]
   34a28:	cmp	r3, #0
   34a2c:	beq	34a40 <flatcc_json_parser_float@@Base+0x108>
   34a30:	ldr	r2, [fp, #-12]
   34a34:	ldr	r3, [fp, #-20]	; 0xffffffec
   34a38:	cmp	r2, r3
   34a3c:	bne	34ac0 <flatcc_json_parser_float@@Base+0x188>
   34a40:	ldr	r3, [fp, #-28]	; 0xffffffe4
   34a44:	vldr	s15, [r3]
   34a48:	vabs.f32	s15, s15
   34a4c:	vldr	s14, [pc, #132]	; 34ad8 <flatcc_json_parser_float@@Base+0x1a0>
   34a50:	vcmp.f32	s15, s14
   34a54:	vmrs	APSR_nzcv, fpscr
   34a58:	movle	r3, #1
   34a5c:	movgt	r3, #0
   34a60:	uxtb	r3, r3
   34a64:	eor	r3, r3, #1
   34a68:	uxtb	r3, r3
   34a6c:	cmp	r3, #0
   34a70:	beq	34a7c <flatcc_json_parser_float@@Base+0x144>
   34a74:	mov	r3, #1
   34a78:	b	34a80 <flatcc_json_parser_float@@Base+0x148>
   34a7c:	mov	r3, #0
   34a80:	cmp	r3, #0
   34a84:	beq	34aa4 <flatcc_json_parser_float@@Base+0x16c>
   34a88:	mov	r3, #7
   34a8c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   34a90:	ldr	r1, [fp, #-20]	; 0xffffffec
   34a94:	ldr	r0, [fp, #-16]
   34a98:	bl	33258 <flatcc_json_parser_set_error@@Base>
   34a9c:	mov	r3, r0
   34aa0:	b	34ac4 <flatcc_json_parser_float@@Base+0x18c>
   34aa4:	mov	r3, #6
   34aa8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   34aac:	ldr	r1, [fp, #-20]	; 0xffffffec
   34ab0:	ldr	r0, [fp, #-16]
   34ab4:	bl	33258 <flatcc_json_parser_set_error@@Base>
   34ab8:	mov	r3, r0
   34abc:	b	34ac4 <flatcc_json_parser_float@@Base+0x18c>
   34ac0:	ldr	r3, [fp, #-12]
   34ac4:	mov	r0, r3
   34ac8:	sub	sp, fp, #4
   34acc:	ldr	fp, [sp]
   34ad0:	add	sp, sp, #4
   34ad4:	pop	{pc}		; (ldr pc, [sp], #4)
   34ad8:	svcvc	0x007fffff

00034adc <flatcc_json_parser_generic_json@@Base>:
   34adc:	str	fp, [sp, #-8]!
   34ae0:	str	lr, [sp, #4]
   34ae4:	add	fp, sp, #4
   34ae8:	sub	sp, sp, #552	; 0x228
   34aec:	str	r0, [fp, #-544]	; 0xfffffde0
   34af0:	str	r1, [fp, #-548]	; 0xfffffddc
   34af4:	str	r2, [fp, #-552]	; 0xfffffdd8
   34af8:	mov	r3, #0
   34afc:	str	r3, [fp, #-536]	; 0xfffffde8
   34b00:	sub	r3, fp, #528	; 0x210
   34b04:	str	r3, [fp, #-8]
   34b08:	ldr	r3, [fp, #-8]
   34b0c:	add	r3, r3, #512	; 0x200
   34b10:	str	r3, [fp, #-12]
   34b14:	ldr	r2, [fp, #-548]	; 0xfffffddc
   34b18:	ldr	r3, [fp, #-552]	; 0xfffffdd8
   34b1c:	cmp	r2, r3
   34b20:	bne	34b2c <flatcc_json_parser_generic_json@@Base+0x50>
   34b24:	ldr	r3, [fp, #-548]	; 0xfffffddc
   34b28:	b	34f44 <flatcc_json_parser_generic_json@@Base+0x468>
   34b2c:	sub	r3, fp, #528	; 0x210
   34b30:	ldr	r2, [fp, #-8]
   34b34:	cmp	r2, r3
   34b38:	beq	34c00 <flatcc_json_parser_generic_json@@Base+0x124>
   34b3c:	ldr	r3, [fp, #-8]
   34b40:	sub	r3, r3, #1
   34b44:	ldrb	r3, [r3]
   34b48:	cmp	r3, #125	; 0x7d
   34b4c:	bne	34c00 <flatcc_json_parser_generic_json@@Base+0x124>
   34b50:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   34b54:	ldr	r1, [fp, #-548]	; 0xfffffddc
   34b58:	ldr	r0, [fp, #-544]	; 0xfffffde0
   34b5c:	bl	2ddec <flatcc_emitter_copy_buffer@@Base+0x3f4>
   34b60:	str	r0, [fp, #-548]	; 0xfffffddc
   34b64:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   34b68:	ldr	r1, [fp, #-548]	; 0xfffffddc
   34b6c:	ldr	r0, [fp, #-544]	; 0xfffffde0
   34b70:	bl	2de9c <flatcc_emitter_copy_buffer@@Base+0x4a4>
   34b74:	str	r0, [fp, #-548]	; 0xfffffddc
   34b78:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   34b7c:	ldr	r1, [fp, #-548]	; 0xfffffddc
   34b80:	ldr	r0, [fp, #-544]	; 0xfffffde0
   34b84:	bl	2dc54 <flatcc_emitter_copy_buffer@@Base+0x25c>
   34b88:	str	r0, [fp, #-548]	; 0xfffffddc
   34b8c:	ldr	r2, [fp, #-548]	; 0xfffffddc
   34b90:	ldr	r3, [fp, #-552]	; 0xfffffdd8
   34b94:	cmp	r2, r3
   34b98:	bne	34bb8 <flatcc_json_parser_generic_json@@Base+0xdc>
   34b9c:	mov	r3, #10
   34ba0:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   34ba4:	ldr	r1, [fp, #-548]	; 0xfffffddc
   34ba8:	ldr	r0, [fp, #-544]	; 0xfffffde0
   34bac:	bl	33258 <flatcc_json_parser_set_error@@Base>
   34bb0:	mov	r3, r0
   34bb4:	b	34f44 <flatcc_json_parser_generic_json@@Base+0x468>
   34bb8:	ldr	r3, [fp, #-548]	; 0xfffffddc
   34bbc:	ldrb	r3, [r3]
   34bc0:	cmp	r3, #58	; 0x3a
   34bc4:	beq	34be4 <flatcc_json_parser_generic_json@@Base+0x108>
   34bc8:	mov	r3, #4
   34bcc:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   34bd0:	ldr	r1, [fp, #-548]	; 0xfffffddc
   34bd4:	ldr	r0, [fp, #-544]	; 0xfffffde0
   34bd8:	bl	33258 <flatcc_json_parser_set_error@@Base>
   34bdc:	mov	r3, r0
   34be0:	b	34f44 <flatcc_json_parser_generic_json@@Base+0x468>
   34be4:	ldr	r3, [fp, #-548]	; 0xfffffddc
   34be8:	add	r3, r3, #1
   34bec:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   34bf0:	mov	r1, r3
   34bf4:	ldr	r0, [fp, #-544]	; 0xfffffde0
   34bf8:	bl	2dc54 <flatcc_emitter_copy_buffer@@Base+0x25c>
   34bfc:	str	r0, [fp, #-548]	; 0xfffffddc
   34c00:	ldr	r3, [fp, #-548]	; 0xfffffddc
   34c04:	ldrb	r3, [r3]
   34c08:	cmp	r3, #57	; 0x39
   34c0c:	bgt	34c2c <flatcc_json_parser_generic_json@@Base+0x150>
   34c10:	cmp	r3, #48	; 0x30
   34c14:	bge	34ce4 <flatcc_json_parser_generic_json@@Base+0x208>
   34c18:	cmp	r3, #34	; 0x22
   34c1c:	beq	34c40 <flatcc_json_parser_generic_json@@Base+0x164>
   34c20:	cmp	r3, #45	; 0x2d
   34c24:	beq	34ce4 <flatcc_json_parser_generic_json@@Base+0x208>
   34c28:	b	34dfc <flatcc_json_parser_generic_json@@Base+0x320>
   34c2c:	cmp	r3, #91	; 0x5b
   34c30:	beq	34cfc <flatcc_json_parser_generic_json@@Base+0x220>
   34c34:	cmp	r3, #123	; 0x7b
   34c38:	beq	34d7c <flatcc_json_parser_generic_json@@Base+0x2a0>
   34c3c:	b	34dfc <flatcc_json_parser_generic_json@@Base+0x320>
   34c40:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   34c44:	ldr	r1, [fp, #-548]	; 0xfffffddc
   34c48:	ldr	r0, [fp, #-544]	; 0xfffffde0
   34c4c:	bl	2dcf4 <flatcc_emitter_copy_buffer@@Base+0x2fc>
   34c50:	str	r0, [fp, #-548]	; 0xfffffddc
   34c54:	b	34ca4 <flatcc_json_parser_generic_json@@Base+0x1c8>
   34c58:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   34c5c:	ldr	r1, [fp, #-548]	; 0xfffffddc
   34c60:	ldr	r0, [fp, #-544]	; 0xfffffde0
   34c64:	bl	332cc <flatcc_json_parser_string_part@@Base>
   34c68:	str	r0, [fp, #-548]	; 0xfffffddc
   34c6c:	ldr	r2, [fp, #-548]	; 0xfffffddc
   34c70:	ldr	r3, [fp, #-552]	; 0xfffffdd8
   34c74:	cmp	r2, r3
   34c78:	beq	34c8c <flatcc_json_parser_generic_json@@Base+0x1b0>
   34c7c:	ldr	r3, [fp, #-548]	; 0xfffffddc
   34c80:	ldrb	r3, [r3]
   34c84:	cmp	r3, #34	; 0x22
   34c88:	beq	34cc8 <flatcc_json_parser_generic_json@@Base+0x1ec>
   34c8c:	sub	r3, fp, #532	; 0x214
   34c90:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   34c94:	ldr	r1, [fp, #-548]	; 0xfffffddc
   34c98:	ldr	r0, [fp, #-544]	; 0xfffffde0
   34c9c:	bl	33560 <flatcc_json_parser_string_escape@@Base>
   34ca0:	str	r0, [fp, #-548]	; 0xfffffddc
   34ca4:	ldr	r2, [fp, #-548]	; 0xfffffddc
   34ca8:	ldr	r3, [fp, #-552]	; 0xfffffdd8
   34cac:	cmp	r2, r3
   34cb0:	beq	34ccc <flatcc_json_parser_generic_json@@Base+0x1f0>
   34cb4:	ldr	r3, [fp, #-548]	; 0xfffffddc
   34cb8:	ldrb	r3, [r3]
   34cbc:	cmp	r3, #34	; 0x22
   34cc0:	bne	34c58 <flatcc_json_parser_generic_json@@Base+0x17c>
   34cc4:	b	34ccc <flatcc_json_parser_generic_json@@Base+0x1f0>
   34cc8:	nop	{0}
   34ccc:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   34cd0:	ldr	r1, [fp, #-548]	; 0xfffffddc
   34cd4:	ldr	r0, [fp, #-544]	; 0xfffffde0
   34cd8:	bl	2dd70 <flatcc_emitter_copy_buffer@@Base+0x378>
   34cdc:	str	r0, [fp, #-548]	; 0xfffffddc
   34ce0:	b	34e58 <flatcc_json_parser_generic_json@@Base+0x37c>
   34ce4:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   34ce8:	ldr	r1, [fp, #-548]	; 0xfffffddc
   34cec:	ldr	r0, [fp, #-544]	; 0xfffffde0
   34cf0:	bl	343e0 <flatcc_json_parser_unmatched_symbol@@Base+0xfc>
   34cf4:	str	r0, [fp, #-548]	; 0xfffffddc
   34cf8:	b	34e58 <flatcc_json_parser_generic_json@@Base+0x37c>
   34cfc:	ldr	r2, [fp, #-8]
   34d00:	ldr	r3, [fp, #-12]
   34d04:	cmp	r2, r3
   34d08:	bne	34d28 <flatcc_json_parser_generic_json@@Base+0x24c>
   34d0c:	mov	r3, #2
   34d10:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   34d14:	ldr	r1, [fp, #-548]	; 0xfffffddc
   34d18:	ldr	r0, [fp, #-544]	; 0xfffffde0
   34d1c:	bl	33258 <flatcc_json_parser_set_error@@Base>
   34d20:	mov	r3, r0
   34d24:	b	34f44 <flatcc_json_parser_generic_json@@Base+0x468>
   34d28:	ldr	r3, [fp, #-8]
   34d2c:	add	r2, r3, #1
   34d30:	str	r2, [fp, #-8]
   34d34:	mov	r2, #93	; 0x5d
   34d38:	strb	r2, [r3]
   34d3c:	ldr	r3, [fp, #-548]	; 0xfffffddc
   34d40:	add	r3, r3, #1
   34d44:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   34d48:	mov	r1, r3
   34d4c:	ldr	r0, [fp, #-544]	; 0xfffffde0
   34d50:	bl	2dc54 <flatcc_emitter_copy_buffer@@Base+0x25c>
   34d54:	str	r0, [fp, #-548]	; 0xfffffddc
   34d58:	ldr	r2, [fp, #-548]	; 0xfffffddc
   34d5c:	ldr	r3, [fp, #-552]	; 0xfffffdd8
   34d60:	cmp	r2, r3
   34d64:	beq	34b14 <flatcc_json_parser_generic_json@@Base+0x38>
   34d68:	ldr	r3, [fp, #-548]	; 0xfffffddc
   34d6c:	ldrb	r3, [r3]
   34d70:	cmp	r3, #93	; 0x5d
   34d74:	beq	34e44 <flatcc_json_parser_generic_json@@Base+0x368>
   34d78:	b	34b14 <flatcc_json_parser_generic_json@@Base+0x38>
   34d7c:	ldr	r2, [fp, #-8]
   34d80:	ldr	r3, [fp, #-12]
   34d84:	cmp	r2, r3
   34d88:	bne	34da8 <flatcc_json_parser_generic_json@@Base+0x2cc>
   34d8c:	mov	r3, #2
   34d90:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   34d94:	ldr	r1, [fp, #-548]	; 0xfffffddc
   34d98:	ldr	r0, [fp, #-544]	; 0xfffffde0
   34d9c:	bl	33258 <flatcc_json_parser_set_error@@Base>
   34da0:	mov	r3, r0
   34da4:	b	34f44 <flatcc_json_parser_generic_json@@Base+0x468>
   34da8:	ldr	r3, [fp, #-8]
   34dac:	add	r2, r3, #1
   34db0:	str	r2, [fp, #-8]
   34db4:	mov	r2, #125	; 0x7d
   34db8:	strb	r2, [r3]
   34dbc:	ldr	r3, [fp, #-548]	; 0xfffffddc
   34dc0:	add	r3, r3, #1
   34dc4:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   34dc8:	mov	r1, r3
   34dcc:	ldr	r0, [fp, #-544]	; 0xfffffde0
   34dd0:	bl	2dc54 <flatcc_emitter_copy_buffer@@Base+0x25c>
   34dd4:	str	r0, [fp, #-548]	; 0xfffffddc
   34dd8:	ldr	r2, [fp, #-548]	; 0xfffffddc
   34ddc:	ldr	r3, [fp, #-552]	; 0xfffffdd8
   34de0:	cmp	r2, r3
   34de4:	beq	34b14 <flatcc_json_parser_generic_json@@Base+0x38>
   34de8:	ldr	r3, [fp, #-548]	; 0xfffffddc
   34dec:	ldrb	r3, [r3]
   34df0:	cmp	r3, #125	; 0x7d
   34df4:	beq	34e4c <flatcc_json_parser_generic_json@@Base+0x370>
   34df8:	b	34b14 <flatcc_json_parser_generic_json@@Base+0x38>
   34dfc:	ldr	r3, [fp, #-548]	; 0xfffffddc
   34e00:	str	r3, [fp, #-16]
   34e04:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   34e08:	ldr	r1, [fp, #-16]
   34e0c:	ldr	r0, [fp, #-544]	; 0xfffffde0
   34e10:	bl	33f34 <flatcc_json_parser_skip_constant@@Base>
   34e14:	str	r0, [fp, #-548]	; 0xfffffddc
   34e18:	ldr	r2, [fp, #-16]
   34e1c:	ldr	r3, [fp, #-548]	; 0xfffffddc
   34e20:	cmp	r2, r3
   34e24:	bne	34e54 <flatcc_json_parser_generic_json@@Base+0x378>
   34e28:	mov	r3, #5
   34e2c:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   34e30:	ldr	r1, [fp, #-548]	; 0xfffffddc
   34e34:	ldr	r0, [fp, #-544]	; 0xfffffde0
   34e38:	bl	33258 <flatcc_json_parser_set_error@@Base>
   34e3c:	mov	r3, r0
   34e40:	b	34f44 <flatcc_json_parser_generic_json@@Base+0x468>
   34e44:	nop	{0}
   34e48:	b	34ec8 <flatcc_json_parser_generic_json@@Base+0x3ec>
   34e4c:	nop	{0}
   34e50:	b	34ec8 <flatcc_json_parser_generic_json@@Base+0x3ec>
   34e54:	nop	{0}
   34e58:	b	34ec8 <flatcc_json_parser_generic_json@@Base+0x3ec>
   34e5c:	ldr	r3, [fp, #-8]
   34e60:	sub	r3, r3, #1
   34e64:	str	r3, [fp, #-8]
   34e68:	ldr	r3, [fp, #-8]
   34e6c:	ldrb	r3, [r3]
   34e70:	cmp	r3, #93	; 0x5d
   34e74:	bne	34e94 <flatcc_json_parser_generic_json@@Base+0x3b8>
   34e78:	sub	r3, fp, #536	; 0x218
   34e7c:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   34e80:	ldr	r1, [fp, #-548]	; 0xfffffddc
   34e84:	ldr	r0, [fp, #-544]	; 0xfffffde0
   34e88:	bl	2e350 <flatcc_emitter_copy_buffer@@Base+0x958>
   34e8c:	str	r0, [fp, #-548]	; 0xfffffddc
   34e90:	b	34eac <flatcc_json_parser_generic_json@@Base+0x3d0>
   34e94:	sub	r3, fp, #536	; 0x218
   34e98:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   34e9c:	ldr	r1, [fp, #-548]	; 0xfffffddc
   34ea0:	ldr	r0, [fp, #-544]	; 0xfffffde0
   34ea4:	bl	2e0e8 <flatcc_emitter_copy_buffer@@Base+0x6f0>
   34ea8:	str	r0, [fp, #-548]	; 0xfffffddc
   34eac:	ldr	r3, [fp, #-536]	; 0xfffffde8
   34eb0:	cmp	r3, #0
   34eb4:	beq	34ec8 <flatcc_json_parser_generic_json@@Base+0x3ec>
   34eb8:	ldr	r3, [fp, #-8]
   34ebc:	add	r3, r3, #1
   34ec0:	str	r3, [fp, #-8]
   34ec4:	b	34b14 <flatcc_json_parser_generic_json@@Base+0x38>
   34ec8:	ldr	r2, [fp, #-548]	; 0xfffffddc
   34ecc:	ldr	r3, [fp, #-552]	; 0xfffffdd8
   34ed0:	cmp	r2, r3
   34ed4:	beq	34ee8 <flatcc_json_parser_generic_json@@Base+0x40c>
   34ed8:	sub	r3, fp, #528	; 0x210
   34edc:	ldr	r2, [fp, #-8]
   34ee0:	cmp	r2, r3
   34ee4:	bne	34e5c <flatcc_json_parser_generic_json@@Base+0x380>
   34ee8:	ldr	r2, [fp, #-548]	; 0xfffffddc
   34eec:	ldr	r3, [fp, #-552]	; 0xfffffdd8
   34ef0:	cmp	r2, r3
   34ef4:	bne	34f40 <flatcc_json_parser_generic_json@@Base+0x464>
   34ef8:	sub	r3, fp, #528	; 0x210
   34efc:	ldr	r2, [fp, #-8]
   34f00:	cmp	r2, r3
   34f04:	beq	34f40 <flatcc_json_parser_generic_json@@Base+0x464>
   34f08:	ldr	r3, [fp, #-8]
   34f0c:	sub	r3, r3, #1
   34f10:	ldrb	r3, [r3]
   34f14:	cmp	r3, #93	; 0x5d
   34f18:	bne	34f24 <flatcc_json_parser_generic_json@@Base+0x448>
   34f1c:	mov	r3, #9
   34f20:	b	34f28 <flatcc_json_parser_generic_json@@Base+0x44c>
   34f24:	mov	r3, #10
   34f28:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   34f2c:	ldr	r1, [fp, #-548]	; 0xfffffddc
   34f30:	ldr	r0, [fp, #-544]	; 0xfffffde0
   34f34:	bl	33258 <flatcc_json_parser_set_error@@Base>
   34f38:	mov	r3, r0
   34f3c:	b	34f44 <flatcc_json_parser_generic_json@@Base+0x468>
   34f40:	ldr	r3, [fp, #-548]	; 0xfffffddc
   34f44:	mov	r0, r3
   34f48:	sub	sp, fp, #4
   34f4c:	ldr	fp, [sp]
   34f50:	add	sp, sp, #4
   34f54:	pop	{pc}		; (ldr pc, [sp], #4)

00034f58 <flatcc_json_parser_integer@@Base>:
   34f58:	strd	r4, [sp, #-32]!	; 0xffffffe0
   34f5c:	strd	r6, [sp, #8]
   34f60:	strd	r8, [sp, #16]
   34f64:	str	fp, [sp, #24]
   34f68:	str	lr, [sp, #28]
   34f6c:	add	fp, sp, #28
   34f70:	sub	sp, sp, #48	; 0x30
   34f74:	str	r0, [fp, #-56]	; 0xffffffc8
   34f78:	str	r1, [fp, #-60]	; 0xffffffc4
   34f7c:	str	r2, [fp, #-64]	; 0xffffffc0
   34f80:	str	r3, [fp, #-68]	; 0xffffffbc
   34f84:	mov	r2, #0
   34f88:	mov	r3, #0
   34f8c:	strd	r2, [fp, #-36]	; 0xffffffdc
   34f90:	ldr	r2, [fp, #-60]	; 0xffffffc4
   34f94:	ldr	r3, [fp, #-64]	; 0xffffffc0
   34f98:	cmp	r2, r3
   34f9c:	bne	34fa8 <flatcc_json_parser_integer@@Base+0x50>
   34fa0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   34fa4:	b	3516c <flatcc_json_parser_integer@@Base+0x214>
   34fa8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   34fac:	str	r3, [fp, #-40]	; 0xffffffd8
   34fb0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   34fb4:	ldrb	r3, [r3]
   34fb8:	cmp	r3, #45	; 0x2d
   34fbc:	moveq	r3, #1
   34fc0:	movne	r3, #0
   34fc4:	uxtb	r3, r3
   34fc8:	mov	r2, r3
   34fcc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   34fd0:	str	r2, [r3]
   34fd4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   34fd8:	ldr	r3, [r3]
   34fdc:	mov	r2, r3
   34fe0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   34fe4:	add	r3, r3, r2
   34fe8:	str	r3, [fp, #-60]	; 0xffffffc4
   34fec:	b	350b8 <flatcc_json_parser_integer@@Base+0x160>
   34ff0:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   34ff4:	strd	r2, [fp, #-52]	; 0xffffffcc
   34ff8:	ldrd	r6, [fp, #-36]	; 0xffffffdc
   34ffc:	mov	r2, r6
   35000:	mov	r3, r7
   35004:	mov	r0, #0
   35008:	mov	r1, #0
   3500c:	lsl	r1, r3, #2
   35010:	orr	r1, r1, r2, lsr #30
   35014:	lsl	r0, r2, #2
   35018:	mov	r2, r0
   3501c:	mov	r3, r1
   35020:	adds	r2, r2, r6
   35024:	adc	r3, r3, r7
   35028:	adds	r1, r2, r2
   3502c:	str	r1, [fp, #-76]	; 0xffffffb4
   35030:	adc	r3, r3, r3
   35034:	str	r3, [fp, #-72]	; 0xffffffb8
   35038:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   3503c:	mov	r0, r2
   35040:	mov	r1, r3
   35044:	ldr	r3, [fp, #-60]	; 0xffffffc4
   35048:	ldrb	r3, [r3]
   3504c:	uxtb	r2, r3
   35050:	mov	r3, #0
   35054:	adds	r4, r0, r2
   35058:	adc	r5, r1, r3
   3505c:	subs	r8, r4, #48	; 0x30
   35060:	sbc	r9, r5, #0
   35064:	strd	r8, [fp, #-36]	; 0xffffffdc
   35068:	ldrd	r0, [fp, #-52]	; 0xffffffcc
   3506c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   35070:	cmp	r1, r3
   35074:	cmpeq	r0, r2
   35078:	bls	350ac <flatcc_json_parser_integer@@Base+0x154>
   3507c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   35080:	cmp	r3, #0
   35084:	beq	35090 <flatcc_json_parser_integer@@Base+0x138>
   35088:	mov	r3, #8
   3508c:	b	35094 <flatcc_json_parser_integer@@Base+0x13c>
   35090:	mov	r3, #7
   35094:	ldr	r2, [fp, #-64]	; 0xffffffc0
   35098:	ldr	r1, [fp, #-60]	; 0xffffffc4
   3509c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   350a0:	bl	33258 <flatcc_json_parser_set_error@@Base>
   350a4:	mov	r3, r0
   350a8:	b	3516c <flatcc_json_parser_integer@@Base+0x214>
   350ac:	ldr	r3, [fp, #-60]	; 0xffffffc4
   350b0:	add	r3, r3, #1
   350b4:	str	r3, [fp, #-60]	; 0xffffffc4
   350b8:	ldr	r2, [fp, #-60]	; 0xffffffc4
   350bc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   350c0:	cmp	r2, r3
   350c4:	beq	350e8 <flatcc_json_parser_integer@@Base+0x190>
   350c8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   350cc:	ldrb	r3, [r3]
   350d0:	cmp	r3, #47	; 0x2f
   350d4:	bls	350e8 <flatcc_json_parser_integer@@Base+0x190>
   350d8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   350dc:	ldrb	r3, [r3]
   350e0:	cmp	r3, #57	; 0x39
   350e4:	bls	34ff0 <flatcc_json_parser_integer@@Base+0x98>
   350e8:	ldr	r2, [fp, #-60]	; 0xffffffc4
   350ec:	ldr	r3, [fp, #-40]	; 0xffffffd8
   350f0:	cmp	r2, r3
   350f4:	bne	35100 <flatcc_json_parser_integer@@Base+0x1a8>
   350f8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   350fc:	b	3516c <flatcc_json_parser_integer@@Base+0x214>
   35100:	ldr	r2, [fp, #-60]	; 0xffffffc4
   35104:	ldr	r3, [fp, #-64]	; 0xffffffc0
   35108:	cmp	r2, r3
   3510c:	beq	3515c <flatcc_json_parser_integer@@Base+0x204>
   35110:	ldr	r3, [fp, #-60]	; 0xffffffc4
   35114:	ldrb	r3, [r3]
   35118:	cmp	r3, #101	; 0x65
   3511c:	beq	35140 <flatcc_json_parser_integer@@Base+0x1e8>
   35120:	ldr	r3, [fp, #-60]	; 0xffffffc4
   35124:	ldrb	r3, [r3]
   35128:	cmp	r3, #69	; 0x45
   3512c:	beq	35140 <flatcc_json_parser_integer@@Base+0x1e8>
   35130:	ldr	r3, [fp, #-60]	; 0xffffffc4
   35134:	ldrb	r3, [r3]
   35138:	cmp	r3, #46	; 0x2e
   3513c:	bne	3515c <flatcc_json_parser_integer@@Base+0x204>
   35140:	mov	r3, #12
   35144:	ldr	r2, [fp, #-64]	; 0xffffffc0
   35148:	ldr	r1, [fp, #-60]	; 0xffffffc4
   3514c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   35150:	bl	33258 <flatcc_json_parser_set_error@@Base>
   35154:	mov	r3, r0
   35158:	b	3516c <flatcc_json_parser_integer@@Base+0x214>
   3515c:	ldr	r1, [fp, #4]
   35160:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   35164:	strd	r2, [r1]
   35168:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3516c:	mov	r0, r3
   35170:	sub	sp, fp, #28
   35174:	ldrd	r4, [sp]
   35178:	ldrd	r6, [sp, #8]
   3517c:	ldrd	r8, [sp, #16]
   35180:	ldr	fp, [sp, #24]
   35184:	add	sp, sp, #28
   35188:	pop	{pc}		; (ldr pc, [sp], #4)

0003518c <flatcc_json_parser_build_uint8_vector_base64@@Base>:
   3518c:	str	fp, [sp, #-8]!
   35190:	str	lr, [sp, #4]
   35194:	add	fp, sp, #4
   35198:	sub	sp, sp, #56	; 0x38
   3519c:	str	r0, [fp, #-40]	; 0xffffffd8
   351a0:	str	r1, [fp, #-44]	; 0xffffffd4
   351a4:	str	r2, [fp, #-48]	; 0xffffffd0
   351a8:	str	r3, [fp, #-52]	; 0xffffffcc
   351ac:	ldr	r3, [fp, #4]
   351b0:	cmp	r3, #0
   351b4:	movne	r3, #1
   351b8:	moveq	r3, #0
   351bc:	uxtb	r3, r3
   351c0:	str	r3, [fp, #-8]
   351c4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   351c8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   351cc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   351d0:	bl	2dcf4 <flatcc_emitter_copy_buffer@@Base+0x2fc>
   351d4:	str	r0, [fp, #-44]	; 0xffffffd4
   351d8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   351dc:	str	r3, [fp, #-12]
   351e0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   351e4:	ldr	r1, [fp, #-12]
   351e8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   351ec:	bl	332cc <flatcc_json_parser_string_part@@Base>
   351f0:	str	r0, [fp, #-44]	; 0xffffffd4
   351f4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   351f8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   351fc:	cmp	r2, r3
   35200:	beq	353c0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x234>
   35204:	ldr	r3, [fp, #-44]	; 0xffffffd4
   35208:	ldrb	r3, [r3]
   3520c:	cmp	r3, #34	; 0x22
   35210:	bne	353c0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x234>
   35214:	ldr	r2, [fp, #-44]	; 0xffffffd4
   35218:	ldr	r3, [fp, #-12]
   3521c:	sub	r3, r2, r3
   35220:	mov	r0, r3
   35224:	bl	32544 <grisu3_diy_fp_encode_double@@Base+0x17cc>
   35228:	str	r0, [fp, #-16]
   3522c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   35230:	ldr	r0, [r3]
   35234:	mvn	r3, #0
   35238:	mov	r2, #1
   3523c:	mov	r1, #1
   35240:	bl	29b28 <flatcc_builder_start_vector@@Base>
   35244:	mov	r3, r0
   35248:	cmp	r3, #0
   3524c:	bne	3537c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1f0>
   35250:	ldr	r3, [fp, #-40]	; 0xffffffd8
   35254:	ldr	r3, [r3]
   35258:	ldr	r1, [fp, #-16]
   3525c:	mov	r0, r3
   35260:	bl	291c4 <flatcc_builder_extend_vector@@Base>
   35264:	str	r0, [fp, #-20]	; 0xffffffec
   35268:	ldr	r3, [fp, #-20]	; 0xffffffec
   3526c:	cmp	r3, #0
   35270:	beq	35384 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1f8>
   35274:	ldr	r2, [fp, #-44]	; 0xffffffd4
   35278:	ldr	r3, [fp, #-12]
   3527c:	sub	r3, r2, r3
   35280:	str	r3, [fp, #-32]	; 0xffffffe0
   35284:	ldr	r3, [fp, #-16]
   35288:	str	r3, [fp, #-28]	; 0xffffffe4
   3528c:	sub	r1, fp, #32
   35290:	sub	r2, fp, #28
   35294:	ldr	r3, [fp, #-8]
   35298:	str	r3, [sp]
   3529c:	mov	r3, r1
   352a0:	ldr	r1, [fp, #-12]
   352a4:	ldr	r0, [fp, #-20]	; 0xffffffec
   352a8:	bl	32988 <grisu3_diy_fp_encode_double@@Base+0x1c10>
   352ac:	str	r0, [fp, #-24]	; 0xffffffe8
   352b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   352b4:	cmp	r3, #0
   352b8:	beq	352d0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x144>
   352bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   352c0:	ldr	r2, [fp, #-12]
   352c4:	add	r3, r2, r3
   352c8:	str	r3, [fp, #-44]	; 0xffffffd4
   352cc:	b	353c4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x238>
   352d0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   352d4:	ldr	r3, [fp, #-12]
   352d8:	sub	r3, r2, r3
   352dc:	mov	r2, r3
   352e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   352e4:	cmp	r2, r3
   352e8:	beq	35300 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x174>
   352ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   352f0:	ldr	r2, [fp, #-12]
   352f4:	add	r3, r2, r3
   352f8:	str	r3, [fp, #-44]	; 0xffffffd4
   352fc:	b	353c4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x238>
   35300:	ldr	r3, [fp, #-28]	; 0xffffffe4
   35304:	ldr	r2, [fp, #-16]
   35308:	cmp	r2, r3
   3530c:	bls	35338 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1ac>
   35310:	ldr	r3, [fp, #-40]	; 0xffffffd8
   35314:	ldr	r0, [r3]
   35318:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3531c:	ldr	r2, [fp, #-16]
   35320:	sub	r3, r2, r3
   35324:	mov	r1, r3
   35328:	bl	29800 <flatcc_builder_truncate_vector@@Base>
   3532c:	mov	r3, r0
   35330:	cmp	r3, #0
   35334:	bne	3538c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x200>
   35338:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3533c:	ldr	r3, [r3]
   35340:	mov	r0, r3
   35344:	bl	2ae24 <flatcc_builder_end_vector@@Base>
   35348:	mov	r2, r0
   3534c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   35350:	str	r2, [r3]
   35354:	ldr	r3, [fp, #-52]	; 0xffffffcc
   35358:	ldr	r3, [r3]
   3535c:	cmp	r3, #0
   35360:	beq	35394 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x208>
   35364:	ldr	r2, [fp, #-48]	; 0xffffffd0
   35368:	ldr	r1, [fp, #-44]	; 0xffffffd4
   3536c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   35370:	bl	2dd70 <flatcc_emitter_copy_buffer@@Base+0x378>
   35374:	mov	r3, r0
   35378:	b	353fc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x270>
   3537c:	nop	{0}
   35380:	b	35398 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x20c>
   35384:	nop	{0}
   35388:	b	35398 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x20c>
   3538c:	nop	{0}
   35390:	b	35398 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x20c>
   35394:	nop	{0}
   35398:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3539c:	mov	r2, #0
   353a0:	str	r2, [r3]
   353a4:	mov	r3, #33	; 0x21
   353a8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   353ac:	ldr	r1, [fp, #-44]	; 0xffffffd4
   353b0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   353b4:	bl	33258 <flatcc_json_parser_set_error@@Base>
   353b8:	mov	r3, r0
   353bc:	b	353fc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x270>
   353c0:	nop	{0}
   353c4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   353c8:	mov	r2, #0
   353cc:	str	r2, [r3]
   353d0:	ldr	r3, [fp, #4]
   353d4:	cmp	r3, #0
   353d8:	beq	353e4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x258>
   353dc:	mov	r3, #32
   353e0:	b	353e8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x25c>
   353e4:	mov	r3, #31
   353e8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   353ec:	ldr	r1, [fp, #-44]	; 0xffffffd4
   353f0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   353f4:	bl	33258 <flatcc_json_parser_set_error@@Base>
   353f8:	mov	r3, r0
   353fc:	mov	r0, r3
   35400:	sub	sp, fp, #4
   35404:	ldr	fp, [sp]
   35408:	add	sp, sp, #4
   3540c:	pop	{pc}		; (ldr pc, [sp], #4)

00035410 <flatcc_json_parser_build_string@@Base>:
   35410:	str	fp, [sp, #-8]!
   35414:	str	lr, [sp, #4]
   35418:	add	fp, sp, #4
   3541c:	sub	sp, sp, #24
   35420:	str	r0, [fp, #-16]
   35424:	str	r1, [fp, #-20]	; 0xffffffec
   35428:	str	r2, [fp, #-24]	; 0xffffffe8
   3542c:	str	r3, [fp, #-28]	; 0xffffffe4
   35430:	ldr	r2, [fp, #-24]	; 0xffffffe8
   35434:	ldr	r1, [fp, #-20]	; 0xffffffec
   35438:	ldr	r0, [fp, #-16]
   3543c:	bl	2dcf4 <flatcc_emitter_copy_buffer@@Base+0x2fc>
   35440:	str	r0, [fp, #-20]	; 0xffffffec
   35444:	ldr	r3, [fp, #-20]	; 0xffffffec
   35448:	str	r3, [fp, #-8]
   3544c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   35450:	ldr	r1, [fp, #-8]
   35454:	ldr	r0, [fp, #-16]
   35458:	bl	332cc <flatcc_json_parser_string_part@@Base>
   3545c:	str	r0, [fp, #-20]	; 0xffffffec
   35460:	ldr	r2, [fp, #-20]	; 0xffffffec
   35464:	ldr	r3, [fp, #-24]	; 0xffffffe8
   35468:	cmp	r2, r3
   3546c:	beq	354b0 <flatcc_json_parser_build_string@@Base+0xa0>
   35470:	ldr	r3, [fp, #-20]	; 0xffffffec
   35474:	ldrb	r3, [r3]
   35478:	cmp	r3, #34	; 0x22
   3547c:	bne	354b0 <flatcc_json_parser_build_string@@Base+0xa0>
   35480:	ldr	r3, [fp, #-16]
   35484:	ldr	r0, [r3]
   35488:	ldr	r2, [fp, #-20]	; 0xffffffec
   3548c:	ldr	r3, [fp, #-8]
   35490:	sub	r3, r2, r3
   35494:	mov	r2, r3
   35498:	ldr	r1, [fp, #-8]
   3549c:	bl	2c068 <flatcc_builder_create_string@@Base>
   354a0:	mov	r2, r0
   354a4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   354a8:	str	r2, [r3]
   354ac:	b	355d0 <flatcc_json_parser_build_string@@Base+0x1c0>
   354b0:	ldr	r3, [fp, #-16]
   354b4:	ldr	r3, [r3]
   354b8:	mov	r0, r3
   354bc:	bl	29d00 <flatcc_builder_start_string@@Base>
   354c0:	mov	r3, r0
   354c4:	cmp	r3, #0
   354c8:	bne	355e8 <flatcc_json_parser_build_string@@Base+0x1d8>
   354cc:	ldr	r3, [fp, #-16]
   354d0:	ldr	r0, [r3]
   354d4:	ldr	r2, [fp, #-20]	; 0xffffffec
   354d8:	ldr	r3, [fp, #-8]
   354dc:	sub	r3, r2, r3
   354e0:	mov	r2, r3
   354e4:	ldr	r1, [fp, #-8]
   354e8:	bl	296b8 <flatcc_builder_append_string@@Base>
   354ec:	mov	r3, r0
   354f0:	cmp	r3, #0
   354f4:	beq	355e8 <flatcc_json_parser_build_string@@Base+0x1d8>
   354f8:	b	35594 <flatcc_json_parser_build_string@@Base+0x184>
   354fc:	sub	r3, fp, #12
   35500:	ldr	r2, [fp, #-24]	; 0xffffffe8
   35504:	ldr	r1, [fp, #-20]	; 0xffffffec
   35508:	ldr	r0, [fp, #-16]
   3550c:	bl	33560 <flatcc_json_parser_string_escape@@Base>
   35510:	str	r0, [fp, #-20]	; 0xffffffec
   35514:	ldr	r3, [fp, #-16]
   35518:	ldr	r0, [r3]
   3551c:	sub	r3, fp, #12
   35520:	add	r3, r3, #1
   35524:	ldrb	r2, [fp, #-12]
   35528:	mov	r1, r3
   3552c:	bl	296b8 <flatcc_builder_append_string@@Base>
   35530:	mov	r3, r0
   35534:	cmp	r3, #0
   35538:	beq	355f0 <flatcc_json_parser_build_string@@Base+0x1e0>
   3553c:	ldr	r3, [fp, #-20]	; 0xffffffec
   35540:	str	r3, [fp, #-8]
   35544:	ldr	r2, [fp, #-24]	; 0xffffffe8
   35548:	ldr	r1, [fp, #-8]
   3554c:	ldr	r0, [fp, #-16]
   35550:	bl	332cc <flatcc_json_parser_string_part@@Base>
   35554:	str	r0, [fp, #-20]	; 0xffffffec
   35558:	ldr	r2, [fp, #-20]	; 0xffffffec
   3555c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   35560:	cmp	r2, r3
   35564:	beq	35594 <flatcc_json_parser_build_string@@Base+0x184>
   35568:	ldr	r3, [fp, #-16]
   3556c:	ldr	r0, [r3]
   35570:	ldr	r2, [fp, #-20]	; 0xffffffec
   35574:	ldr	r3, [fp, #-8]
   35578:	sub	r3, r2, r3
   3557c:	mov	r2, r3
   35580:	ldr	r1, [fp, #-8]
   35584:	bl	296b8 <flatcc_builder_append_string@@Base>
   35588:	mov	r3, r0
   3558c:	cmp	r3, #0
   35590:	beq	355f8 <flatcc_json_parser_build_string@@Base+0x1e8>
   35594:	ldr	r2, [fp, #-20]	; 0xffffffec
   35598:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3559c:	cmp	r2, r3
   355a0:	beq	355b4 <flatcc_json_parser_build_string@@Base+0x1a4>
   355a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   355a8:	ldrb	r3, [r3]
   355ac:	cmp	r3, #34	; 0x22
   355b0:	bne	354fc <flatcc_json_parser_build_string@@Base+0xec>
   355b4:	ldr	r3, [fp, #-16]
   355b8:	ldr	r3, [r3]
   355bc:	mov	r0, r3
   355c0:	bl	2c2bc <flatcc_builder_end_string@@Base>
   355c4:	mov	r2, r0
   355c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   355cc:	str	r2, [r3]
   355d0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   355d4:	ldr	r1, [fp, #-20]	; 0xffffffec
   355d8:	ldr	r0, [fp, #-16]
   355dc:	bl	2dd70 <flatcc_emitter_copy_buffer@@Base+0x378>
   355e0:	mov	r3, r0
   355e4:	b	3560c <flatcc_json_parser_build_string@@Base+0x1fc>
   355e8:	nop	{0}
   355ec:	b	355fc <flatcc_json_parser_build_string@@Base+0x1ec>
   355f0:	nop	{0}
   355f4:	b	355fc <flatcc_json_parser_build_string@@Base+0x1ec>
   355f8:	nop	{0}
   355fc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   35600:	mov	r2, #0
   35604:	str	r2, [r3]
   35608:	ldr	r3, [fp, #-20]	; 0xffffffec
   3560c:	mov	r0, r3
   35610:	sub	sp, fp, #4
   35614:	ldr	fp, [sp]
   35618:	add	sp, sp, #4
   3561c:	pop	{pc}		; (ldr pc, [sp], #4)

00035620 <flatcc_json_parser_prepare_unions@@Base>:
   35620:	str	fp, [sp, #-8]!
   35624:	str	lr, [sp, #4]
   35628:	add	fp, sp, #4
   3562c:	sub	sp, sp, #24
   35630:	str	r0, [fp, #-16]
   35634:	str	r1, [fp, #-20]	; 0xffffffec
   35638:	str	r2, [fp, #-24]	; 0xffffffe8
   3563c:	str	r3, [fp, #-28]	; 0xffffffe4
   35640:	ldr	r3, [fp, #-16]
   35644:	ldr	r0, [r3]
   35648:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3564c:	mov	r3, r2
   35650:	lsl	r3, r3, #1
   35654:	add	r3, r3, r2
   35658:	lsl	r3, r3, #3
   3565c:	add	r3, r3, #8
   35660:	mov	r1, r3
   35664:	bl	27bbc <flatcc_builder_enter_user_frame@@Base>
   35668:	mov	r2, r0
   3566c:	ldr	r3, [fp, #4]
   35670:	str	r2, [r3]
   35674:	ldr	r3, [fp, #4]
   35678:	ldr	r3, [r3]
   3567c:	cmp	r3, #0
   35680:	bne	356a0 <flatcc_json_parser_prepare_unions@@Base+0x80>
   35684:	mov	r3, #33	; 0x21
   35688:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3568c:	ldr	r1, [fp, #-20]	; 0xffffffec
   35690:	ldr	r0, [fp, #-16]
   35694:	bl	33258 <flatcc_json_parser_set_error@@Base>
   35698:	mov	r3, r0
   3569c:	b	356d0 <flatcc_json_parser_prepare_unions@@Base+0xb0>
   356a0:	ldr	r3, [fp, #-16]
   356a4:	ldr	r2, [r3]
   356a8:	ldr	r3, [fp, #4]
   356ac:	ldr	r3, [r3]
   356b0:	mov	r1, r3
   356b4:	mov	r0, r2
   356b8:	bl	27de4 <flatcc_builder_get_user_frame_ptr@@Base>
   356bc:	str	r0, [fp, #-8]
   356c0:	ldr	r3, [fp, #-8]
   356c4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   356c8:	str	r2, [r3]
   356cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   356d0:	mov	r0, r3
   356d4:	sub	sp, fp, #4
   356d8:	ldr	fp, [sp]
   356dc:	add	sp, sp, #4
   356e0:	pop	{pc}		; (ldr pc, [sp], #4)

000356e4 <flatcc_json_parser_finalize_unions@@Base>:
   356e4:	str	fp, [sp, #-8]!
   356e8:	str	lr, [sp, #4]
   356ec:	add	fp, sp, #4
   356f0:	sub	sp, sp, #24
   356f4:	str	r0, [fp, #-16]
   356f8:	str	r1, [fp, #-20]	; 0xffffffec
   356fc:	str	r2, [fp, #-24]	; 0xffffffe8
   35700:	str	r3, [fp, #-28]	; 0xffffffe4
   35704:	ldr	r3, [fp, #-16]
   35708:	ldr	r3, [r3]
   3570c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   35710:	mov	r0, r3
   35714:	bl	27de4 <flatcc_builder_get_user_frame_ptr@@Base>
   35718:	str	r0, [fp, #-8]
   3571c:	ldr	r3, [fp, #-8]
   35720:	ldr	r3, [r3, #4]
   35724:	cmp	r3, #0
   35728:	beq	35744 <flatcc_json_parser_finalize_unions@@Base+0x60>
   3572c:	mov	r3, #27
   35730:	ldr	r2, [fp, #-24]	; 0xffffffe8
   35734:	ldr	r1, [fp, #-20]	; 0xffffffec
   35738:	ldr	r0, [fp, #-16]
   3573c:	bl	33258 <flatcc_json_parser_set_error@@Base>
   35740:	str	r0, [fp, #-20]	; 0xffffffec
   35744:	ldr	r3, [fp, #-16]
   35748:	ldr	r3, [r3]
   3574c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   35750:	mov	r0, r3
   35754:	bl	27d38 <flatcc_builder_exit_user_frame_at@@Base>
   35758:	ldr	r3, [fp, #-20]	; 0xffffffec
   3575c:	mov	r0, r3
   35760:	sub	sp, fp, #4
   35764:	ldr	fp, [sp]
   35768:	add	sp, sp, #4
   3576c:	pop	{pc}		; (ldr pc, [sp], #4)

00035770 <flatcc_json_parser_union@@Base>:
   35770:	str	r4, [sp, #-12]!
   35774:	str	fp, [sp, #4]
   35778:	str	lr, [sp, #8]
   3577c:	add	fp, sp, #8
   35780:	sub	sp, sp, #44	; 0x2c
   35784:	str	r0, [fp, #-32]	; 0xffffffe0
   35788:	str	r1, [fp, #-36]	; 0xffffffdc
   3578c:	str	r2, [fp, #-40]	; 0xffffffd8
   35790:	str	r3, [fp, #-44]	; 0xffffffd4
   35794:	ldr	r3, [fp, #-32]	; 0xffffffe0
   35798:	ldr	r3, [r3]
   3579c:	ldr	r1, [fp, #8]
   357a0:	mov	r0, r3
   357a4:	bl	27de4 <flatcc_builder_get_user_frame_ptr@@Base>
   357a8:	str	r0, [fp, #-16]
   357ac:	ldr	r2, [fp, #-44]	; 0xffffffd4
   357b0:	mov	r3, r2
   357b4:	lsl	r3, r3, #1
   357b8:	add	r3, r3, r2
   357bc:	lsl	r3, r3, #3
   357c0:	add	r3, r3, #8
   357c4:	ldr	r2, [fp, #-16]
   357c8:	add	r3, r2, r3
   357cc:	str	r3, [fp, #-20]	; 0xffffffec
   357d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   357d4:	ldr	r3, [r3]
   357d8:	cmp	r3, #0
   357dc:	beq	357fc <flatcc_json_parser_union@@Base+0x8c>
   357e0:	mov	r3, #28
   357e4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   357e8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   357ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   357f0:	bl	33258 <flatcc_json_parser_set_error@@Base>
   357f4:	mov	r3, r0
   357f8:	b	3593c <flatcc_json_parser_union@@Base+0x1cc>
   357fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   35800:	ldrb	r3, [r3, #12]
   35804:	cmp	r3, #0
   35808:	bne	3586c <flatcc_json_parser_union@@Base+0xfc>
   3580c:	ldr	r3, [fp, #-16]
   35810:	ldr	r3, [r3, #4]
   35814:	add	r2, r3, #1
   35818:	ldr	r3, [fp, #-16]
   3581c:	str	r2, [r3, #4]
   35820:	ldr	r3, [fp, #-32]	; 0xffffffe0
   35824:	ldr	r2, [r3, #16]
   35828:	ldr	r3, [fp, #-20]	; 0xffffffec
   3582c:	str	r2, [r3, #8]
   35830:	ldr	r3, [fp, #-32]	; 0xffffffe0
   35834:	ldr	r2, [r3, #4]
   35838:	ldr	r3, [fp, #-20]	; 0xffffffec
   3583c:	str	r2, [r3, #4]
   35840:	ldr	r3, [fp, #-20]	; 0xffffffec
   35844:	ldr	r2, [fp, #-36]	; 0xffffffdc
   35848:	str	r2, [r3]
   3584c:	ldr	r3, [fp, #-20]	; 0xffffffec
   35850:	ldr	r3, [r3]
   35854:	ldr	r2, [fp, #-40]	; 0xffffffd8
   35858:	mov	r1, r3
   3585c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   35860:	bl	34adc <flatcc_json_parser_generic_json@@Base>
   35864:	str	r0, [fp, #-36]	; 0xffffffdc
   35868:	b	35938 <flatcc_json_parser_union@@Base+0x1c8>
   3586c:	ldr	r3, [fp, #-20]	; 0xffffffec
   35870:	ldrb	r3, [r3, #13]
   35874:	strb	r3, [fp, #-28]	; 0xffffffe4
   35878:	ldr	r3, [fp, #-20]	; 0xffffffec
   3587c:	ldrb	r3, [r3, #13]
   35880:	cmp	r3, #0
   35884:	bne	358a4 <flatcc_json_parser_union@@Base+0x134>
   35888:	mov	r3, #25
   3588c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   35890:	ldr	r1, [fp, #-36]	; 0xffffffdc
   35894:	ldr	r0, [fp, #-32]	; 0xffffffe0
   35898:	bl	33258 <flatcc_json_parser_set_error@@Base>
   3589c:	mov	r3, r0
   358a0:	b	3593c <flatcc_json_parser_union@@Base+0x1cc>
   358a4:	ldr	r3, [fp, #-16]
   358a8:	ldr	r3, [r3, #4]
   358ac:	sub	r2, r3, #1
   358b0:	ldr	r3, [fp, #-16]
   358b4:	str	r2, [r3, #4]
   358b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   358bc:	ldrb	r2, [r3, #13]
   358c0:	sub	r3, fp, #28
   358c4:	add	r3, r3, #4
   358c8:	str	r3, [sp]
   358cc:	ldr	r4, [fp, #12]
   358d0:	mov	r3, r2
   358d4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   358d8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   358dc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   358e0:	blx	r4
   358e4:	str	r0, [fp, #-36]	; 0xffffffdc
   358e8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   358ec:	ldr	r3, [fp, #-40]	; 0xffffffd8
   358f0:	cmp	r2, r3
   358f4:	beq	35938 <flatcc_json_parser_union@@Base+0x1c8>
   358f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   358fc:	ldr	r0, [r3]
   35900:	ldrh	r1, [fp, #4]
   35904:	sub	r3, fp, #28
   35908:	ldm	r3, {r2, r3}
   3590c:	bl	2b49c <flatcc_builder_table_add_union@@Base>
   35910:	mov	r3, r0
   35914:	cmp	r3, #0
   35918:	beq	35938 <flatcc_json_parser_union@@Base+0x1c8>
   3591c:	mov	r3, #28
   35920:	ldr	r2, [fp, #-40]	; 0xffffffd8
   35924:	ldr	r1, [fp, #-36]	; 0xffffffdc
   35928:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3592c:	bl	33258 <flatcc_json_parser_set_error@@Base>
   35930:	mov	r3, r0
   35934:	b	3593c <flatcc_json_parser_union@@Base+0x1cc>
   35938:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3593c:	mov	r0, r3
   35940:	sub	sp, fp, #8
   35944:	ldr	r4, [sp]
   35948:	ldr	fp, [sp, #4]
   3594c:	add	sp, sp, #8
   35950:	pop	{pc}		; (ldr pc, [sp], #4)

00035954 <flatcc_json_parser_union_type@@Base>:
   35954:	str	r4, [sp, #-12]!
   35958:	str	fp, [sp, #4]
   3595c:	str	lr, [sp, #8]
   35960:	add	fp, sp, #8
   35964:	sub	sp, sp, #60	; 0x3c
   35968:	str	r0, [fp, #-48]	; 0xffffffd0
   3596c:	str	r1, [fp, #-52]	; 0xffffffcc
   35970:	str	r2, [fp, #-56]	; 0xffffffc8
   35974:	str	r3, [fp, #-60]	; 0xffffffc4
   35978:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3597c:	ldr	r3, [r3]
   35980:	ldr	r1, [fp, #8]
   35984:	mov	r0, r3
   35988:	bl	27de4 <flatcc_builder_get_user_frame_ptr@@Base>
   3598c:	str	r0, [fp, #-16]
   35990:	ldr	r3, [fp, #-16]
   35994:	add	r1, r3, #8
   35998:	ldr	r2, [fp, #-60]	; 0xffffffc4
   3599c:	mov	r3, r2
   359a0:	lsl	r3, r3, #1
   359a4:	add	r3, r3, r2
   359a8:	lsl	r3, r3, #3
   359ac:	add	r3, r1, r3
   359b0:	str	r3, [fp, #-20]	; 0xffffffec
   359b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   359b8:	ldrb	r3, [r3, #12]
   359bc:	cmp	r3, #0
   359c0:	beq	359e0 <flatcc_json_parser_union_type@@Base+0x8c>
   359c4:	mov	r3, #28
   359c8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   359cc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   359d0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   359d4:	bl	33258 <flatcc_json_parser_set_error@@Base>
   359d8:	mov	r3, r0
   359dc:	b	35bb4 <flatcc_json_parser_union_type@@Base+0x260>
   359e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   359e4:	mov	r2, #1
   359e8:	strb	r2, [r3, #12]
   359ec:	ldr	r3, [fp, #-52]	; 0xffffffcc
   359f0:	str	r3, [fp, #-24]	; 0xffffffe8
   359f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   359f8:	add	r3, r3, #13
   359fc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   35a00:	ldr	r1, [fp, #-24]	; 0xffffffe8
   35a04:	ldr	r0, [fp, #-48]	; 0xffffffd0
   35a08:	bl	2eb88 <flatcc_emitter_copy_buffer@@Base+0x1190>
   35a0c:	str	r0, [fp, #-52]	; 0xffffffcc
   35a10:	ldr	r2, [fp, #-24]	; 0xffffffe8
   35a14:	ldr	r3, [fp, #-52]	; 0xffffffcc
   35a18:	cmp	r2, r3
   35a1c:	bne	35a44 <flatcc_json_parser_union_type@@Base+0xf0>
   35a20:	ldr	r3, [fp, #-20]	; 0xffffffec
   35a24:	add	r3, r3, #13
   35a28:	str	r3, [sp]
   35a2c:	ldr	r3, [fp, #12]
   35a30:	ldr	r2, [fp, #-56]	; 0xffffffc8
   35a34:	ldr	r1, [fp, #-52]	; 0xffffffcc
   35a38:	ldr	r0, [fp, #-48]	; 0xffffffd0
   35a3c:	bl	2f21c <flatcc_emitter_copy_buffer@@Base+0x1824>
   35a40:	str	r0, [fp, #-52]	; 0xffffffcc
   35a44:	ldr	r3, [fp, #-20]	; 0xffffffec
   35a48:	ldr	r3, [r3]
   35a4c:	cmp	r3, #0
   35a50:	bne	35a88 <flatcc_json_parser_union_type@@Base+0x134>
   35a54:	ldr	r3, [fp, #-16]
   35a58:	ldr	r3, [r3, #4]
   35a5c:	ldr	r2, [fp, #-20]	; 0xffffffec
   35a60:	ldrb	r2, [r2, #13]
   35a64:	cmp	r2, #0
   35a68:	movne	r2, #1
   35a6c:	moveq	r2, #0
   35a70:	uxtb	r2, r2
   35a74:	add	r2, r3, r2
   35a78:	ldr	r3, [fp, #-16]
   35a7c:	str	r2, [r3, #4]
   35a80:	ldr	r3, [fp, #-52]	; 0xffffffcc
   35a84:	b	35bb4 <flatcc_json_parser_union_type@@Base+0x260>
   35a88:	ldr	r3, [fp, #-16]
   35a8c:	ldr	r3, [r3, #4]
   35a90:	cmp	r3, #0
   35a94:	bne	35ab8 <flatcc_json_parser_union_type@@Base+0x164>
   35a98:	ldr	r3, [pc, #300]	; 35bcc <flatcc_json_parser_union_type@@Base+0x278>
   35a9c:	add	r3, pc, r3
   35aa0:	movw	r2, #965	; 0x3c5
   35aa4:	ldr	r1, [pc, #292]	; 35bd0 <flatcc_json_parser_union_type@@Base+0x27c>
   35aa8:	add	r1, pc, r1
   35aac:	ldr	r0, [pc, #288]	; 35bd4 <flatcc_json_parser_union_type@@Base+0x280>
   35ab0:	add	r0, pc, r0
   35ab4:	bl	126ac <__assert_fail@plt>
   35ab8:	ldr	r3, [fp, #-16]
   35abc:	ldr	r3, [r3, #4]
   35ac0:	sub	r2, r3, #1
   35ac4:	ldr	r3, [fp, #-16]
   35ac8:	str	r2, [r3, #4]
   35acc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   35ad0:	ldr	r3, [r3, #16]
   35ad4:	str	r3, [fp, #-28]	; 0xffffffe4
   35ad8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   35adc:	ldr	r3, [r3, #4]
   35ae0:	str	r3, [fp, #-32]	; 0xffffffe0
   35ae4:	ldr	r3, [fp, #-20]	; 0xffffffec
   35ae8:	ldr	r2, [r3, #8]
   35aec:	ldr	r3, [fp, #-48]	; 0xffffffd0
   35af0:	str	r2, [r3, #16]
   35af4:	ldr	r3, [fp, #-20]	; 0xffffffec
   35af8:	ldr	r2, [r3, #4]
   35afc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   35b00:	str	r2, [r3, #4]
   35b04:	ldr	r3, [fp, #-20]	; 0xffffffec
   35b08:	ldrb	r3, [r3, #13]
   35b0c:	strb	r3, [fp, #-40]	; 0xffffffd8
   35b10:	ldr	r3, [fp, #-20]	; 0xffffffec
   35b14:	ldr	r1, [r3]
   35b18:	ldr	r3, [fp, #-20]	; 0xffffffec
   35b1c:	ldrb	r2, [r3, #13]
   35b20:	sub	r3, fp, #40	; 0x28
   35b24:	add	r3, r3, #4
   35b28:	str	r3, [sp]
   35b2c:	ldr	r4, [fp, #16]
   35b30:	mov	r3, r2
   35b34:	ldr	r2, [fp, #-56]	; 0xffffffc8
   35b38:	ldr	r0, [fp, #-48]	; 0xffffffd0
   35b3c:	blx	r4
   35b40:	mov	r2, r0
   35b44:	ldr	r3, [fp, #-56]	; 0xffffffc8
   35b48:	cmp	r3, r2
   35b4c:	bne	35b58 <flatcc_json_parser_union_type@@Base+0x204>
   35b50:	ldr	r3, [fp, #-56]	; 0xffffffc8
   35b54:	b	35bb4 <flatcc_json_parser_union_type@@Base+0x260>
   35b58:	ldr	r3, [fp, #-48]	; 0xffffffd0
   35b5c:	ldr	r0, [r3]
   35b60:	ldrh	r1, [fp, #4]
   35b64:	sub	r3, fp, #40	; 0x28
   35b68:	ldm	r3, {r2, r3}
   35b6c:	bl	2b49c <flatcc_builder_table_add_union@@Base>
   35b70:	mov	r3, r0
   35b74:	cmp	r3, #0
   35b78:	beq	35b98 <flatcc_json_parser_union_type@@Base+0x244>
   35b7c:	mov	r3, #28
   35b80:	ldr	r2, [fp, #-56]	; 0xffffffc8
   35b84:	ldr	r1, [fp, #-52]	; 0xffffffcc
   35b88:	ldr	r0, [fp, #-48]	; 0xffffffd0
   35b8c:	bl	33258 <flatcc_json_parser_set_error@@Base>
   35b90:	mov	r3, r0
   35b94:	b	35bb4 <flatcc_json_parser_union_type@@Base+0x260>
   35b98:	ldr	r3, [fp, #-48]	; 0xffffffd0
   35b9c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   35ba0:	str	r2, [r3, #16]
   35ba4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   35ba8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   35bac:	str	r2, [r3, #4]
   35bb0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   35bb4:	mov	r0, r3
   35bb8:	sub	sp, fp, #8
   35bbc:	ldr	r4, [sp]
   35bc0:	ldr	fp, [sp, #4]
   35bc4:	add	sp, sp, #8
   35bc8:	pop	{pc}		; (ldr pc, [sp], #4)
   35bcc:	andeq	r3, r0, r0, ror r0
   35bd0:	andeq	r2, r0, r4, lsl #23
   35bd4:	andeq	r2, r0, r0, ror #23
   35bd8:	str	r4, [sp, #-12]!
   35bdc:	str	fp, [sp, #4]
   35be0:	str	lr, [sp, #8]
   35be4:	add	fp, sp, #8
   35be8:	sub	sp, sp, #52	; 0x34
   35bec:	str	r0, [fp, #-40]	; 0xffffffd8
   35bf0:	str	r1, [fp, #-44]	; 0xffffffd4
   35bf4:	str	r2, [fp, #-48]	; 0xffffffd0
   35bf8:	str	r3, [fp, #-52]	; 0xffffffcc
   35bfc:	mov	r3, #0
   35c00:	str	r3, [fp, #-28]	; 0xffffffe4
   35c04:	ldr	r3, [fp, #-40]	; 0xffffffd8
   35c08:	ldr	r3, [r3]
   35c0c:	mov	r0, r3
   35c10:	bl	29be4 <flatcc_builder_start_offset_vector@@Base>
   35c14:	mov	r3, r0
   35c18:	cmp	r3, #0
   35c1c:	bne	35ddc <flatcc_json_parser_union_type@@Base+0x488>
   35c20:	sub	r3, fp, #32
   35c24:	ldr	r2, [fp, #-48]	; 0xffffffd0
   35c28:	ldr	r1, [fp, #-44]	; 0xffffffd4
   35c2c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   35c30:	bl	2e25c <flatcc_emitter_copy_buffer@@Base+0x864>
   35c34:	str	r0, [fp, #-44]	; 0xffffffd4
   35c38:	mov	r3, #0
   35c3c:	str	r3, [fp, #-16]
   35c40:	b	35d28 <flatcc_json_parser_union_type@@Base+0x3d4>
   35c44:	ldr	r2, [fp, #-16]
   35c48:	ldr	r3, [fp, #4]
   35c4c:	cmp	r2, r3
   35c50:	bne	35c70 <flatcc_json_parser_union_type@@Base+0x31c>
   35c54:	mov	r3, #30
   35c58:	ldr	r2, [fp, #-48]	; 0xffffffd0
   35c5c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   35c60:	ldr	r0, [fp, #-40]	; 0xffffffd8
   35c64:	bl	33258 <flatcc_json_parser_set_error@@Base>
   35c68:	mov	r3, r0
   35c6c:	b	35e10 <flatcc_json_parser_union_type@@Base+0x4bc>
   35c70:	ldr	r3, [fp, #-40]	; 0xffffffd8
   35c74:	ldr	r3, [r3]
   35c78:	ldr	r1, [fp, #-52]	; 0xffffffcc
   35c7c:	mov	r0, r3
   35c80:	bl	27de4 <flatcc_builder_get_user_frame_ptr@@Base>
   35c84:	str	r0, [fp, #-20]	; 0xffffffec
   35c88:	ldr	r2, [fp, #-20]	; 0xffffffec
   35c8c:	ldr	r3, [fp, #-16]
   35c90:	add	r3, r2, r3
   35c94:	ldrb	r2, [r3]
   35c98:	sub	r3, fp, #28
   35c9c:	str	r3, [sp]
   35ca0:	ldr	r4, [fp, #12]
   35ca4:	mov	r3, r2
   35ca8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   35cac:	ldr	r1, [fp, #-44]	; 0xffffffd4
   35cb0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   35cb4:	blx	r4
   35cb8:	str	r0, [fp, #-44]	; 0xffffffd4
   35cbc:	ldr	r2, [fp, #-44]	; 0xffffffd4
   35cc0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   35cc4:	cmp	r2, r3
   35cc8:	bne	35cd4 <flatcc_json_parser_union_type@@Base+0x380>
   35ccc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   35cd0:	b	35e10 <flatcc_json_parser_union_type@@Base+0x4bc>
   35cd4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   35cd8:	ldr	r3, [r3]
   35cdc:	mov	r1, #1
   35ce0:	mov	r0, r3
   35ce4:	bl	29428 <flatcc_builder_extend_offset_vector@@Base>
   35ce8:	str	r0, [fp, #-24]	; 0xffffffe8
   35cec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   35cf0:	cmp	r3, #0
   35cf4:	beq	35de4 <flatcc_json_parser_union_type@@Base+0x490>
   35cf8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   35cfc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   35d00:	str	r2, [r3]
   35d04:	sub	r3, fp, #32
   35d08:	ldr	r2, [fp, #-48]	; 0xffffffd0
   35d0c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   35d10:	ldr	r0, [fp, #-40]	; 0xffffffd8
   35d14:	bl	2e350 <flatcc_emitter_copy_buffer@@Base+0x958>
   35d18:	str	r0, [fp, #-44]	; 0xffffffd4
   35d1c:	ldr	r3, [fp, #-16]
   35d20:	add	r3, r3, #1
   35d24:	str	r3, [fp, #-16]
   35d28:	ldr	r3, [fp, #-32]	; 0xffffffe0
   35d2c:	cmp	r3, #0
   35d30:	bne	35c44 <flatcc_json_parser_union_type@@Base+0x2f0>
   35d34:	ldr	r2, [fp, #-16]
   35d38:	ldr	r3, [fp, #4]
   35d3c:	cmp	r2, r3
   35d40:	beq	35d60 <flatcc_json_parser_union_type@@Base+0x40c>
   35d44:	mov	r3, #30
   35d48:	ldr	r2, [fp, #-48]	; 0xffffffd0
   35d4c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   35d50:	ldr	r0, [fp, #-40]	; 0xffffffd8
   35d54:	bl	33258 <flatcc_json_parser_set_error@@Base>
   35d58:	mov	r3, r0
   35d5c:	b	35e10 <flatcc_json_parser_union_type@@Base+0x4bc>
   35d60:	ldr	r3, [fp, #-40]	; 0xffffffd8
   35d64:	ldr	r3, [r3]
   35d68:	ldr	r1, [fp, #-52]	; 0xffffffcc
   35d6c:	mov	r0, r3
   35d70:	bl	27de4 <flatcc_builder_get_user_frame_ptr@@Base>
   35d74:	str	r0, [fp, #-20]	; 0xffffffec
   35d78:	ldr	r3, [fp, #-40]	; 0xffffffd8
   35d7c:	ldr	r3, [r3]
   35d80:	ldr	r1, [fp, #-20]	; 0xffffffec
   35d84:	mov	r0, r3
   35d88:	bl	2b398 <flatcc_builder_end_offset_vector_for_unions@@Base>
   35d8c:	mov	r3, r0
   35d90:	str	r3, [fp, #-28]	; 0xffffffe4
   35d94:	ldr	r3, [fp, #-28]	; 0xffffffe4
   35d98:	cmp	r3, #0
   35d9c:	beq	35dec <flatcc_json_parser_union_type@@Base+0x498>
   35da0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   35da4:	ldr	r3, [r3]
   35da8:	ldrh	r2, [fp, #8]
   35dac:	mov	r1, r2
   35db0:	mov	r0, r3
   35db4:	bl	2c670 <flatcc_builder_table_add_offset@@Base>
   35db8:	str	r0, [fp, #-24]	; 0xffffffe8
   35dbc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   35dc0:	cmp	r3, #0
   35dc4:	beq	35df4 <flatcc_json_parser_union_type@@Base+0x4a0>
   35dc8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   35dcc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   35dd0:	str	r2, [r3]
   35dd4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   35dd8:	b	35e10 <flatcc_json_parser_union_type@@Base+0x4bc>
   35ddc:	nop	{0}
   35de0:	b	35df8 <flatcc_json_parser_union_type@@Base+0x4a4>
   35de4:	nop	{0}
   35de8:	b	35df8 <flatcc_json_parser_union_type@@Base+0x4a4>
   35dec:	nop	{0}
   35df0:	b	35df8 <flatcc_json_parser_union_type@@Base+0x4a4>
   35df4:	nop	{0}
   35df8:	mov	r3, #33	; 0x21
   35dfc:	ldr	r2, [fp, #-48]	; 0xffffffd0
   35e00:	ldr	r1, [fp, #-44]	; 0xffffffd4
   35e04:	ldr	r0, [fp, #-40]	; 0xffffffd8
   35e08:	bl	33258 <flatcc_json_parser_set_error@@Base>
   35e0c:	mov	r3, r0
   35e10:	mov	r0, r3
   35e14:	sub	sp, fp, #8
   35e18:	ldr	r4, [sp]
   35e1c:	ldr	fp, [sp, #4]
   35e20:	add	sp, sp, #8
   35e24:	pop	{pc}		; (ldr pc, [sp], #4)

00035e28 <flatcc_json_parser_union_vector@@Base>:
   35e28:	str	fp, [sp, #-8]!
   35e2c:	str	lr, [sp, #4]
   35e30:	add	fp, sp, #4
   35e34:	sub	sp, sp, #40	; 0x28
   35e38:	str	r0, [fp, #-16]
   35e3c:	str	r1, [fp, #-20]	; 0xffffffec
   35e40:	str	r2, [fp, #-24]	; 0xffffffe8
   35e44:	str	r3, [fp, #-28]	; 0xffffffe4
   35e48:	ldr	r3, [fp, #-16]
   35e4c:	ldr	r3, [r3]
   35e50:	ldr	r1, [fp, #8]
   35e54:	mov	r0, r3
   35e58:	bl	27de4 <flatcc_builder_get_user_frame_ptr@@Base>
   35e5c:	str	r0, [fp, #-8]
   35e60:	ldr	r3, [fp, #-8]
   35e64:	add	r1, r3, #8
   35e68:	ldr	r2, [fp, #-28]	; 0xffffffe4
   35e6c:	mov	r3, r2
   35e70:	lsl	r3, r3, #1
   35e74:	add	r3, r3, r2
   35e78:	lsl	r3, r3, #3
   35e7c:	add	r3, r1, r3
   35e80:	str	r3, [fp, #-12]
   35e84:	ldr	r3, [fp, #-12]
   35e88:	ldr	r3, [r3]
   35e8c:	cmp	r3, #0
   35e90:	beq	35eb0 <flatcc_json_parser_union_vector@@Base+0x88>
   35e94:	mov	r3, #28
   35e98:	ldr	r2, [fp, #-24]	; 0xffffffe8
   35e9c:	ldr	r1, [fp, #-20]	; 0xffffffec
   35ea0:	ldr	r0, [fp, #-16]
   35ea4:	bl	33258 <flatcc_json_parser_set_error@@Base>
   35ea8:	mov	r3, r0
   35eac:	b	35f74 <flatcc_json_parser_union_vector@@Base+0x14c>
   35eb0:	ldr	r3, [fp, #-12]
   35eb4:	ldrb	r3, [r3, #12]
   35eb8:	cmp	r3, #0
   35ebc:	bne	35f20 <flatcc_json_parser_union_vector@@Base+0xf8>
   35ec0:	ldr	r3, [fp, #-8]
   35ec4:	ldr	r3, [r3, #4]
   35ec8:	add	r2, r3, #1
   35ecc:	ldr	r3, [fp, #-8]
   35ed0:	str	r2, [r3, #4]
   35ed4:	ldr	r3, [fp, #-16]
   35ed8:	ldr	r2, [r3, #16]
   35edc:	ldr	r3, [fp, #-12]
   35ee0:	str	r2, [r3, #8]
   35ee4:	ldr	r3, [fp, #-16]
   35ee8:	ldr	r2, [r3, #4]
   35eec:	ldr	r3, [fp, #-12]
   35ef0:	str	r2, [r3, #4]
   35ef4:	ldr	r3, [fp, #-12]
   35ef8:	ldr	r2, [fp, #-20]	; 0xffffffec
   35efc:	str	r2, [r3]
   35f00:	ldr	r3, [fp, #-12]
   35f04:	ldr	r3, [r3]
   35f08:	ldr	r2, [fp, #-24]	; 0xffffffe8
   35f0c:	mov	r1, r3
   35f10:	ldr	r0, [fp, #-16]
   35f14:	bl	34adc <flatcc_json_parser_generic_json@@Base>
   35f18:	str	r0, [fp, #-20]	; 0xffffffec
   35f1c:	b	35f70 <flatcc_json_parser_union_vector@@Base+0x148>
   35f20:	ldr	r3, [fp, #-8]
   35f24:	ldr	r3, [r3, #4]
   35f28:	sub	r2, r3, #1
   35f2c:	ldr	r3, [fp, #-8]
   35f30:	str	r2, [r3, #4]
   35f34:	ldr	r3, [fp, #-12]
   35f38:	ldr	r1, [r3, #20]
   35f3c:	ldr	r3, [fp, #-12]
   35f40:	ldr	r3, [r3, #16]
   35f44:	ldr	r2, [fp, #12]
   35f48:	str	r2, [sp, #8]
   35f4c:	ldrh	r2, [fp, #4]
   35f50:	str	r2, [sp, #4]
   35f54:	str	r3, [sp]
   35f58:	mov	r3, r1
   35f5c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   35f60:	ldr	r1, [fp, #-20]	; 0xffffffec
   35f64:	ldr	r0, [fp, #-16]
   35f68:	bl	35bd8 <flatcc_json_parser_union_type@@Base+0x284>
   35f6c:	str	r0, [fp, #-20]	; 0xffffffec
   35f70:	ldr	r3, [fp, #-20]	; 0xffffffec
   35f74:	mov	r0, r3
   35f78:	sub	sp, fp, #4
   35f7c:	ldr	fp, [sp]
   35f80:	add	sp, sp, #4
   35f84:	pop	{pc}		; (ldr pc, [sp], #4)

00035f88 <flatcc_json_parser_union_type_vector@@Base>:
   35f88:	str	fp, [sp, #-8]!
   35f8c:	str	lr, [sp, #4]
   35f90:	add	fp, sp, #4
   35f94:	sub	sp, sp, #88	; 0x58
   35f98:	str	r0, [fp, #-64]	; 0xffffffc0
   35f9c:	str	r1, [fp, #-68]	; 0xffffffbc
   35fa0:	str	r2, [fp, #-72]	; 0xffffffb8
   35fa4:	str	r3, [fp, #-76]	; 0xffffffb4
   35fa8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   35fac:	ldr	r3, [r3]
   35fb0:	ldr	r1, [fp, #8]
   35fb4:	mov	r0, r3
   35fb8:	bl	27de4 <flatcc_builder_get_user_frame_ptr@@Base>
   35fbc:	str	r0, [fp, #-8]
   35fc0:	ldr	r3, [fp, #-8]
   35fc4:	add	r1, r3, #8
   35fc8:	ldr	r2, [fp, #-76]	; 0xffffffb4
   35fcc:	mov	r3, r2
   35fd0:	lsl	r3, r3, #1
   35fd4:	add	r3, r3, r2
   35fd8:	lsl	r3, r3, #3
   35fdc:	add	r3, r1, r3
   35fe0:	str	r3, [fp, #-12]
   35fe4:	ldr	r3, [fp, #-12]
   35fe8:	ldrb	r3, [r3, #12]
   35fec:	cmp	r3, #0
   35ff0:	beq	36010 <flatcc_json_parser_union_type_vector@@Base+0x88>
   35ff4:	mov	r3, #28
   35ff8:	ldr	r2, [fp, #-72]	; 0xffffffb8
   35ffc:	ldr	r1, [fp, #-68]	; 0xffffffbc
   36000:	ldr	r0, [fp, #-64]	; 0xffffffc0
   36004:	bl	33258 <flatcc_json_parser_set_error@@Base>
   36008:	mov	r3, r0
   3600c:	b	363e8 <flatcc_json_parser_union_type_vector@@Base+0x460>
   36010:	ldr	r3, [fp, #-12]
   36014:	mov	r2, #1
   36018:	strb	r2, [r3, #12]
   3601c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   36020:	ldr	r0, [r3]
   36024:	mvn	r3, #0
   36028:	mov	r2, #1
   3602c:	mov	r1, #1
   36030:	bl	29b28 <flatcc_builder_start_vector@@Base>
   36034:	mov	r3, r0
   36038:	cmp	r3, #0
   3603c:	bne	363ac <flatcc_json_parser_union_type_vector@@Base+0x424>
   36040:	sub	r3, fp, #56	; 0x38
   36044:	ldr	r2, [fp, #-72]	; 0xffffffb8
   36048:	ldr	r1, [fp, #-68]	; 0xffffffbc
   3604c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   36050:	bl	2e25c <flatcc_emitter_copy_buffer@@Base+0x864>
   36054:	str	r0, [fp, #-68]	; 0xffffffbc
   36058:	b	36174 <flatcc_json_parser_union_type_vector@@Base+0x1ec>
   3605c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   36060:	ldr	r3, [r3]
   36064:	mov	r1, #1
   36068:	mov	r0, r3
   3606c:	bl	291c4 <flatcc_builder_extend_vector@@Base>
   36070:	str	r0, [fp, #-16]
   36074:	ldr	r3, [fp, #-16]
   36078:	cmp	r3, #0
   3607c:	beq	363b4 <flatcc_json_parser_union_type_vector@@Base+0x42c>
   36080:	ldr	r3, [fp, #-68]	; 0xffffffbc
   36084:	str	r3, [fp, #-20]	; 0xffffffec
   36088:	sub	r3, fp, #57	; 0x39
   3608c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   36090:	ldr	r1, [fp, #-20]	; 0xffffffec
   36094:	ldr	r0, [fp, #-64]	; 0xffffffc0
   36098:	bl	2eb88 <flatcc_emitter_copy_buffer@@Base+0x1190>
   3609c:	str	r0, [fp, #-68]	; 0xffffffbc
   360a0:	ldr	r2, [fp, #-20]	; 0xffffffec
   360a4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   360a8:	cmp	r2, r3
   360ac:	bne	360f8 <flatcc_json_parser_union_type_vector@@Base+0x170>
   360b0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   360b4:	str	r3, [fp, #-20]	; 0xffffffec
   360b8:	sub	r3, fp, #57	; 0x39
   360bc:	str	r3, [sp]
   360c0:	ldr	r3, [fp, #12]
   360c4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   360c8:	ldr	r1, [fp, #-20]	; 0xffffffec
   360cc:	ldr	r0, [fp, #-64]	; 0xffffffc0
   360d0:	bl	2f21c <flatcc_emitter_copy_buffer@@Base+0x1824>
   360d4:	str	r0, [fp, #-68]	; 0xffffffbc
   360d8:	ldr	r2, [fp, #-68]	; 0xffffffbc
   360dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   360e0:	cmp	r2, r3
   360e4:	beq	363bc <flatcc_json_parser_union_type_vector@@Base+0x434>
   360e8:	ldr	r2, [fp, #-68]	; 0xffffffbc
   360ec:	ldr	r3, [fp, #-72]	; 0xffffffb8
   360f0:	cmp	r2, r3
   360f4:	beq	363bc <flatcc_json_parser_union_type_vector@@Base+0x434>
   360f8:	ldrb	r2, [fp, #-57]	; 0xffffffc7
   360fc:	ldr	r3, [fp, #20]
   36100:	mov	r0, r2
   36104:	blx	r3
   36108:	mov	r3, r0
   3610c:	cmp	r3, #0
   36110:	bne	3614c <flatcc_json_parser_union_type_vector@@Base+0x1c4>
   36114:	ldr	r3, [fp, #-64]	; 0xffffffc0
   36118:	ldr	r3, [r3, #8]
   3611c:	and	r3, r3, #1
   36120:	cmp	r3, #0
   36124:	bne	36144 <flatcc_json_parser_union_type_vector@@Base+0x1bc>
   36128:	mov	r3, #15
   3612c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   36130:	ldr	r1, [fp, #-68]	; 0xffffffbc
   36134:	ldr	r0, [fp, #-64]	; 0xffffffc0
   36138:	bl	33258 <flatcc_json_parser_set_error@@Base>
   3613c:	mov	r3, r0
   36140:	b	363e8 <flatcc_json_parser_union_type_vector@@Base+0x460>
   36144:	mov	r3, #0
   36148:	strb	r3, [fp, #-57]	; 0xffffffc7
   3614c:	ldrb	r3, [fp, #-57]	; 0xffffffc7
   36150:	mov	r1, r3
   36154:	ldr	r0, [fp, #-16]
   36158:	bl	2db70 <flatcc_emitter_copy_buffer@@Base+0x178>
   3615c:	sub	r3, fp, #56	; 0x38
   36160:	ldr	r2, [fp, #-72]	; 0xffffffb8
   36164:	ldr	r1, [fp, #-68]	; 0xffffffbc
   36168:	ldr	r0, [fp, #-64]	; 0xffffffc0
   3616c:	bl	2e350 <flatcc_emitter_copy_buffer@@Base+0x958>
   36170:	str	r0, [fp, #-68]	; 0xffffffbc
   36174:	ldr	r3, [fp, #-56]	; 0xffffffc8
   36178:	cmp	r3, #0
   3617c:	bne	3605c <flatcc_json_parser_union_type_vector@@Base+0xd4>
   36180:	ldr	r3, [fp, #-64]	; 0xffffffc0
   36184:	ldr	r3, [r3]
   36188:	mov	r0, r3
   3618c:	bl	2aefc <flatcc_builder_vector_count@@Base>
   36190:	str	r0, [fp, #-24]	; 0xffffffe8
   36194:	ldr	r3, [fp, #-12]
   36198:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3619c:	str	r2, [r3, #16]
   361a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   361a4:	str	r3, [fp, #-28]	; 0xffffffe4
   361a8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   361ac:	ldr	r3, [r3]
   361b0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   361b4:	mov	r0, r3
   361b8:	bl	27bbc <flatcc_builder_enter_user_frame@@Base>
   361bc:	str	r0, [fp, #-32]	; 0xffffffe0
   361c0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   361c4:	ldr	r3, [r3]
   361c8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   361cc:	mov	r0, r3
   361d0:	bl	27de4 <flatcc_builder_get_user_frame_ptr@@Base>
   361d4:	str	r0, [fp, #-36]	; 0xffffffdc
   361d8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   361dc:	ldr	r3, [r3]
   361e0:	mov	r0, r3
   361e4:	bl	2af28 <flatcc_builder_vector_edit@@Base>
   361e8:	mov	r3, r0
   361ec:	ldr	r2, [fp, #-28]	; 0xffffffe4
   361f0:	mov	r1, r3
   361f4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   361f8:	bl	125a4 <memcpy@plt>
   361fc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   36200:	ldr	r3, [r3]
   36204:	mov	r0, r3
   36208:	bl	2ae24 <flatcc_builder_end_vector@@Base>
   3620c:	str	r0, [fp, #-40]	; 0xffffffd8
   36210:	ldr	r3, [fp, #-40]	; 0xffffffd8
   36214:	cmp	r3, #0
   36218:	beq	363c4 <flatcc_json_parser_union_type_vector@@Base+0x43c>
   3621c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   36220:	ldr	r2, [r3]
   36224:	ldrh	r3, [fp, #4]
   36228:	sub	r3, r3, #1
   3622c:	mov	r1, r3
   36230:	mov	r0, r2
   36234:	bl	2c670 <flatcc_builder_table_add_offset@@Base>
   36238:	str	r0, [fp, #-44]	; 0xffffffd4
   3623c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   36240:	cmp	r3, #0
   36244:	beq	363cc <flatcc_json_parser_union_type_vector@@Base+0x444>
   36248:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3624c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   36250:	str	r2, [r3]
   36254:	ldr	r3, [fp, #-64]	; 0xffffffc0
   36258:	ldr	r3, [r3]
   3625c:	ldr	r1, [fp, #8]
   36260:	mov	r0, r3
   36264:	bl	27de4 <flatcc_builder_get_user_frame_ptr@@Base>
   36268:	str	r0, [fp, #-8]
   3626c:	ldr	r3, [fp, #-8]
   36270:	add	r1, r3, #8
   36274:	ldr	r2, [fp, #-76]	; 0xffffffb4
   36278:	mov	r3, r2
   3627c:	lsl	r3, r3, #1
   36280:	add	r3, r3, r2
   36284:	lsl	r3, r3, #3
   36288:	add	r3, r1, r3
   3628c:	str	r3, [fp, #-12]
   36290:	ldr	r3, [fp, #-12]
   36294:	ldr	r2, [fp, #-32]	; 0xffffffe0
   36298:	str	r2, [r3, #20]
   3629c:	ldr	r3, [fp, #-12]
   362a0:	ldr	r3, [r3]
   362a4:	cmp	r3, #0
   362a8:	bne	362c8 <flatcc_json_parser_union_type_vector@@Base+0x340>
   362ac:	ldr	r3, [fp, #-8]
   362b0:	ldr	r3, [r3, #4]
   362b4:	add	r2, r3, #1
   362b8:	ldr	r3, [fp, #-8]
   362bc:	str	r2, [r3, #4]
   362c0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   362c4:	b	363e8 <flatcc_json_parser_union_type_vector@@Base+0x460>
   362c8:	ldr	r3, [fp, #-8]
   362cc:	ldr	r3, [r3, #4]
   362d0:	cmp	r3, #0
   362d4:	bne	362f8 <flatcc_json_parser_union_type_vector@@Base+0x370>
   362d8:	ldr	r3, [pc, #284]	; 363fc <flatcc_json_parser_union_type_vector@@Base+0x474>
   362dc:	add	r3, pc, r3
   362e0:	movw	r2, #1122	; 0x462
   362e4:	ldr	r1, [pc, #276]	; 36400 <flatcc_json_parser_union_type_vector@@Base+0x478>
   362e8:	add	r1, pc, r1
   362ec:	ldr	r0, [pc, #272]	; 36404 <flatcc_json_parser_union_type_vector@@Base+0x47c>
   362f0:	add	r0, pc, r0
   362f4:	bl	126ac <__assert_fail@plt>
   362f8:	ldr	r3, [fp, #-8]
   362fc:	ldr	r3, [r3, #4]
   36300:	sub	r2, r3, #1
   36304:	ldr	r3, [fp, #-8]
   36308:	str	r2, [r3, #4]
   3630c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   36310:	ldr	r3, [r3, #16]
   36314:	str	r3, [fp, #-48]	; 0xffffffd0
   36318:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3631c:	ldr	r3, [r3, #4]
   36320:	str	r3, [fp, #-52]	; 0xffffffcc
   36324:	ldr	r3, [fp, #-12]
   36328:	ldr	r2, [r3, #8]
   3632c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   36330:	str	r2, [r3, #16]
   36334:	ldr	r3, [fp, #-12]
   36338:	ldr	r2, [r3, #4]
   3633c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   36340:	str	r2, [r3, #4]
   36344:	ldr	r3, [fp, #-12]
   36348:	ldr	r1, [r3]
   3634c:	ldr	r3, [fp, #16]
   36350:	str	r3, [sp, #8]
   36354:	ldrh	r3, [fp, #4]
   36358:	str	r3, [sp, #4]
   3635c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   36360:	str	r3, [sp]
   36364:	ldr	r3, [fp, #-32]	; 0xffffffe0
   36368:	ldr	r2, [fp, #-72]	; 0xffffffb8
   3636c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   36370:	bl	35bd8 <flatcc_json_parser_union_type@@Base+0x284>
   36374:	mov	r2, r0
   36378:	ldr	r3, [fp, #-72]	; 0xffffffb8
   3637c:	cmp	r3, r2
   36380:	bne	3638c <flatcc_json_parser_union_type_vector@@Base+0x404>
   36384:	ldr	r3, [fp, #-72]	; 0xffffffb8
   36388:	b	363e8 <flatcc_json_parser_union_type_vector@@Base+0x460>
   3638c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   36390:	ldr	r2, [fp, #-48]	; 0xffffffd0
   36394:	str	r2, [r3, #16]
   36398:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3639c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   363a0:	str	r2, [r3, #4]
   363a4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   363a8:	b	363e8 <flatcc_json_parser_union_type_vector@@Base+0x460>
   363ac:	nop	{0}
   363b0:	b	363d0 <flatcc_json_parser_union_type_vector@@Base+0x448>
   363b4:	nop	{0}
   363b8:	b	363d0 <flatcc_json_parser_union_type_vector@@Base+0x448>
   363bc:	nop	{0}
   363c0:	b	363d0 <flatcc_json_parser_union_type_vector@@Base+0x448>
   363c4:	nop	{0}
   363c8:	b	363d0 <flatcc_json_parser_union_type_vector@@Base+0x448>
   363cc:	nop	{0}
   363d0:	mov	r3, #33	; 0x21
   363d4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   363d8:	ldr	r1, [fp, #-68]	; 0xffffffbc
   363dc:	ldr	r0, [fp, #-64]	; 0xffffffc0
   363e0:	bl	33258 <flatcc_json_parser_set_error@@Base>
   363e4:	mov	r3, r0
   363e8:	mov	r0, r3
   363ec:	sub	sp, fp, #4
   363f0:	ldr	fp, [sp]
   363f4:	add	sp, sp, #4
   363f8:	pop	{pc}		; (ldr pc, [sp], #4)
   363fc:	andeq	r2, r0, r0, asr r8
   36400:	andeq	r2, r0, r4, asr #6
   36404:	andeq	r2, r0, r0, lsr #7

00036408 <flatcc_json_parser_table_as_root@@Base>:
   36408:	str	r4, [sp, #-12]!
   3640c:	str	fp, [sp, #4]
   36410:	str	lr, [sp, #8]
   36414:	add	fp, sp, #8
   36418:	sub	sp, sp, #84	; 0x54
   3641c:	str	r0, [fp, #-72]	; 0xffffffb8
   36420:	str	r1, [fp, #-76]	; 0xffffffb4
   36424:	str	r2, [fp, #-80]	; 0xffffffb0
   36428:	str	r3, [fp, #-84]	; 0xffffffac
   3642c:	ldr	r3, [fp, #4]
   36430:	asr	r3, r3, #1
   36434:	and	r3, r3, #2
   36438:	str	r3, [fp, #-16]
   3643c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   36440:	cmp	r3, #0
   36444:	bne	36450 <flatcc_json_parser_table_as_root@@Base+0x48>
   36448:	sub	r3, fp, #60	; 0x3c
   3644c:	b	36454 <flatcc_json_parser_table_as_root@@Base+0x4c>
   36450:	ldr	r3, [fp, #-76]	; 0xffffffb4
   36454:	str	r3, [fp, #-76]	; 0xffffffb4
   36458:	ldr	r2, [fp, #-80]	; 0xffffffb0
   3645c:	ldr	r3, [fp, #-84]	; 0xffffffac
   36460:	add	r2, r2, r3
   36464:	ldr	r3, [fp, #4]
   36468:	str	r3, [sp]
   3646c:	mov	r3, r2
   36470:	ldr	r2, [fp, #-80]	; 0xffffffb0
   36474:	ldr	r1, [fp, #-72]	; 0xffffffb8
   36478:	ldr	r0, [fp, #-76]	; 0xffffffb4
   3647c:	bl	2dbbc <flatcc_emitter_copy_buffer@@Base+0x1c4>
   36480:	ldr	r3, [fp, #-16]
   36484:	mov	r2, #0
   36488:	ldr	r1, [fp, #8]
   3648c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   36490:	bl	28cc4 <flatcc_builder_start_buffer@@Base>
   36494:	mov	r3, r0
   36498:	cmp	r3, #0
   3649c:	beq	364a8 <flatcc_json_parser_table_as_root@@Base+0xa0>
   364a0:	mvn	r3, #0
   364a4:	b	36518 <flatcc_json_parser_table_as_root@@Base+0x110>
   364a8:	ldr	r2, [fp, #-80]	; 0xffffffb0
   364ac:	ldr	r3, [fp, #-84]	; 0xffffffac
   364b0:	add	r2, r2, r3
   364b4:	sub	r3, fp, #64	; 0x40
   364b8:	ldr	r4, [fp, #12]
   364bc:	ldr	r1, [fp, #-80]	; 0xffffffb0
   364c0:	ldr	r0, [fp, #-76]	; 0xffffffb4
   364c4:	blx	r4
   364c8:	ldr	r3, [fp, #-76]	; 0xffffffb4
   364cc:	ldr	r3, [r3, #24]
   364d0:	cmp	r3, #0
   364d4:	beq	364e4 <flatcc_json_parser_table_as_root@@Base+0xdc>
   364d8:	ldr	r3, [fp, #-76]	; 0xffffffb4
   364dc:	ldr	r3, [r3, #24]
   364e0:	b	36518 <flatcc_json_parser_table_as_root@@Base+0x110>
   364e4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   364e8:	mov	r1, r3
   364ec:	ldr	r0, [fp, #-72]	; 0xffffffb8
   364f0:	bl	28e34 <flatcc_builder_end_buffer@@Base>
   364f4:	mov	r3, r0
   364f8:	cmp	r3, #0
   364fc:	bne	36508 <flatcc_json_parser_table_as_root@@Base+0x100>
   36500:	mvn	r3, #0
   36504:	b	36518 <flatcc_json_parser_table_as_root@@Base+0x110>
   36508:	ldr	r3, [fp, #-76]	; 0xffffffb4
   3650c:	ldr	r2, [fp, #-80]	; 0xffffffb0
   36510:	str	r2, [r3, #40]	; 0x28
   36514:	mov	r3, #0
   36518:	mov	r0, r3
   3651c:	sub	sp, fp, #8
   36520:	ldr	r4, [sp]
   36524:	ldr	fp, [sp, #4]
   36528:	add	sp, sp, #8
   3652c:	pop	{pc}		; (ldr pc, [sp], #4)

00036530 <flatcc_json_parser_struct_as_root@@Base>:
   36530:	str	r4, [sp, #-12]!
   36534:	str	fp, [sp, #4]
   36538:	str	lr, [sp, #8]
   3653c:	add	fp, sp, #8
   36540:	sub	sp, sp, #84	; 0x54
   36544:	str	r0, [fp, #-72]	; 0xffffffb8
   36548:	str	r1, [fp, #-76]	; 0xffffffb4
   3654c:	str	r2, [fp, #-80]	; 0xffffffb0
   36550:	str	r3, [fp, #-84]	; 0xffffffac
   36554:	ldr	r3, [fp, #4]
   36558:	asr	r3, r3, #1
   3655c:	and	r3, r3, #2
   36560:	str	r3, [fp, #-16]
   36564:	ldr	r3, [fp, #-76]	; 0xffffffb4
   36568:	cmp	r3, #0
   3656c:	bne	36578 <flatcc_json_parser_struct_as_root@@Base+0x48>
   36570:	sub	r3, fp, #60	; 0x3c
   36574:	b	3657c <flatcc_json_parser_struct_as_root@@Base+0x4c>
   36578:	ldr	r3, [fp, #-76]	; 0xffffffb4
   3657c:	str	r3, [fp, #-76]	; 0xffffffb4
   36580:	ldr	r2, [fp, #-80]	; 0xffffffb0
   36584:	ldr	r3, [fp, #-84]	; 0xffffffac
   36588:	add	r2, r2, r3
   3658c:	ldr	r3, [fp, #4]
   36590:	str	r3, [sp]
   36594:	mov	r3, r2
   36598:	ldr	r2, [fp, #-80]	; 0xffffffb0
   3659c:	ldr	r1, [fp, #-72]	; 0xffffffb8
   365a0:	ldr	r0, [fp, #-76]	; 0xffffffb4
   365a4:	bl	2dbbc <flatcc_emitter_copy_buffer@@Base+0x1c4>
   365a8:	ldr	r3, [fp, #-16]
   365ac:	mov	r2, #0
   365b0:	ldr	r1, [fp, #8]
   365b4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   365b8:	bl	28cc4 <flatcc_builder_start_buffer@@Base>
   365bc:	mov	r3, r0
   365c0:	cmp	r3, #0
   365c4:	beq	365d0 <flatcc_json_parser_struct_as_root@@Base+0xa0>
   365c8:	mvn	r3, #0
   365cc:	b	36640 <flatcc_json_parser_struct_as_root@@Base+0x110>
   365d0:	ldr	r2, [fp, #-80]	; 0xffffffb0
   365d4:	ldr	r3, [fp, #-84]	; 0xffffffac
   365d8:	add	r2, r2, r3
   365dc:	sub	r3, fp, #64	; 0x40
   365e0:	ldr	r4, [fp, #12]
   365e4:	ldr	r1, [fp, #-80]	; 0xffffffb0
   365e8:	ldr	r0, [fp, #-76]	; 0xffffffb4
   365ec:	blx	r4
   365f0:	ldr	r3, [fp, #-76]	; 0xffffffb4
   365f4:	ldr	r3, [r3, #24]
   365f8:	cmp	r3, #0
   365fc:	beq	3660c <flatcc_json_parser_struct_as_root@@Base+0xdc>
   36600:	ldr	r3, [fp, #-76]	; 0xffffffb4
   36604:	ldr	r3, [r3, #24]
   36608:	b	36640 <flatcc_json_parser_struct_as_root@@Base+0x110>
   3660c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   36610:	mov	r1, r3
   36614:	ldr	r0, [fp, #-72]	; 0xffffffb8
   36618:	bl	28e34 <flatcc_builder_end_buffer@@Base>
   3661c:	mov	r3, r0
   36620:	cmp	r3, #0
   36624:	bne	36630 <flatcc_json_parser_struct_as_root@@Base+0x100>
   36628:	mvn	r3, #0
   3662c:	b	36640 <flatcc_json_parser_struct_as_root@@Base+0x110>
   36630:	ldr	r3, [fp, #-76]	; 0xffffffb4
   36634:	ldr	r2, [fp, #-80]	; 0xffffffb0
   36638:	str	r2, [r3, #40]	; 0x28
   3663c:	mov	r3, #0
   36640:	mov	r0, r3
   36644:	sub	sp, fp, #8
   36648:	ldr	r4, [sp]
   3664c:	ldr	fp, [sp, #4]
   36650:	add	sp, sp, #8
   36654:	pop	{pc}		; (ldr pc, [sp], #4)
   36658:	eor	r1, r1, #-2147483648	; 0x80000000
   3665c:	b	36664 <flatcc_json_parser_struct_as_root@@Base+0x134>
   36660:	eor	r3, r3, #-2147483648	; 0x80000000
   36664:	push	{r4, r5, lr}
   36668:	lsl	r4, r1, #1
   3666c:	lsl	r5, r3, #1
   36670:	teq	r4, r5
   36674:	teqeq	r0, r2
   36678:	orrsne	ip, r4, r0
   3667c:	orrsne	ip, r5, r2
   36680:	mvnsne	ip, r4, asr #21
   36684:	mvnsne	ip, r5, asr #21
   36688:	beq	36874 <flatcc_json_parser_struct_as_root@@Base+0x344>
   3668c:	lsr	r4, r4, #21
   36690:	rsbs	r5, r4, r5, lsr #21
   36694:	rsblt	r5, r5, #0
   36698:	ble	366b8 <flatcc_json_parser_struct_as_root@@Base+0x188>
   3669c:	add	r4, r4, r5
   366a0:	eor	r2, r0, r2
   366a4:	eor	r3, r1, r3
   366a8:	eor	r0, r2, r0
   366ac:	eor	r1, r3, r1
   366b0:	eor	r2, r0, r2
   366b4:	eor	r3, r1, r3
   366b8:	cmp	r5, #54	; 0x36
   366bc:	pophi	{r4, r5, pc}
   366c0:	tst	r1, #-2147483648	; 0x80000000
   366c4:	lsl	r1, r1, #12
   366c8:	mov	ip, #1048576	; 0x100000
   366cc:	orr	r1, ip, r1, lsr #12
   366d0:	beq	366dc <flatcc_json_parser_struct_as_root@@Base+0x1ac>
   366d4:	rsbs	r0, r0, #0
   366d8:	rsc	r1, r1, #0
   366dc:	tst	r3, #-2147483648	; 0x80000000
   366e0:	lsl	r3, r3, #12
   366e4:	orr	r3, ip, r3, lsr #12
   366e8:	beq	366f4 <flatcc_json_parser_struct_as_root@@Base+0x1c4>
   366ec:	rsbs	r2, r2, #0
   366f0:	rsc	r3, r3, #0
   366f4:	teq	r4, r5
   366f8:	beq	3685c <flatcc_json_parser_struct_as_root@@Base+0x32c>
   366fc:	sub	r4, r4, #1
   36700:	rsbs	lr, r5, #32
   36704:	blt	36720 <flatcc_json_parser_struct_as_root@@Base+0x1f0>
   36708:	lsl	ip, r2, lr
   3670c:	adds	r0, r0, r2, lsr r5
   36710:	adc	r1, r1, #0
   36714:	adds	r0, r0, r3, lsl lr
   36718:	adcs	r1, r1, r3, asr r5
   3671c:	b	3673c <flatcc_json_parser_struct_as_root@@Base+0x20c>
   36720:	sub	r5, r5, #32
   36724:	add	lr, lr, #32
   36728:	cmp	r2, #1
   3672c:	lsl	ip, r3, lr
   36730:	orrcs	ip, ip, #2
   36734:	adds	r0, r0, r3, asr r5
   36738:	adcs	r1, r1, r3, asr #31
   3673c:	and	r5, r1, #-2147483648	; 0x80000000
   36740:	bpl	36750 <flatcc_json_parser_struct_as_root@@Base+0x220>
   36744:	rsbs	ip, ip, #0
   36748:	rscs	r0, r0, #0
   3674c:	rsc	r1, r1, #0
   36750:	cmp	r1, #1048576	; 0x100000
   36754:	bcc	36794 <flatcc_json_parser_struct_as_root@@Base+0x264>
   36758:	cmp	r1, #2097152	; 0x200000
   3675c:	bcc	3677c <flatcc_json_parser_struct_as_root@@Base+0x24c>
   36760:	lsrs	r1, r1, #1
   36764:	rrxs	r0, r0
   36768:	rrx	ip, ip
   3676c:	add	r4, r4, #1
   36770:	lsl	r2, r4, #21
   36774:	cmn	r2, #4194304	; 0x400000
   36778:	bcs	368d4 <flatcc_json_parser_struct_as_root@@Base+0x3a4>
   3677c:	cmp	ip, #-2147483648	; 0x80000000
   36780:	lsrseq	ip, r0, #1
   36784:	adcs	r0, r0, #0
   36788:	adc	r1, r1, r4, lsl #20
   3678c:	orr	r1, r1, r5
   36790:	pop	{r4, r5, pc}
   36794:	lsls	ip, ip, #1
   36798:	adcs	r0, r0, r0
   3679c:	adc	r1, r1, r1
   367a0:	tst	r1, #1048576	; 0x100000
   367a4:	sub	r4, r4, #1
   367a8:	bne	3677c <flatcc_json_parser_struct_as_root@@Base+0x24c>
   367ac:	teq	r1, #0
   367b0:	moveq	r1, r0
   367b4:	moveq	r0, #0
   367b8:	clz	r3, r1
   367bc:	addeq	r3, r3, #32
   367c0:	sub	r3, r3, #11
   367c4:	subs	r2, r3, #32
   367c8:	bge	367ec <flatcc_json_parser_struct_as_root@@Base+0x2bc>
   367cc:	adds	r2, r2, #12
   367d0:	ble	367e8 <flatcc_json_parser_struct_as_root@@Base+0x2b8>
   367d4:	add	ip, r2, #20
   367d8:	rsb	r2, r2, #12
   367dc:	lsl	r0, r1, ip
   367e0:	lsr	r1, r1, r2
   367e4:	b	367fc <flatcc_json_parser_struct_as_root@@Base+0x2cc>
   367e8:	add	r2, r2, #20
   367ec:	rsble	ip, r2, #32
   367f0:	lsl	r1, r1, r2
   367f4:	orrle	r1, r1, r0, lsr ip
   367f8:	lslle	r0, r0, r2
   367fc:	subs	r4, r4, r3
   36800:	addge	r1, r1, r4, lsl #20
   36804:	orrge	r1, r1, r5
   36808:	popge	{r4, r5, pc}
   3680c:	mvn	r4, r4
   36810:	subs	r4, r4, #31
   36814:	bge	36850 <flatcc_json_parser_struct_as_root@@Base+0x320>
   36818:	adds	r4, r4, #12
   3681c:	bgt	36838 <flatcc_json_parser_struct_as_root@@Base+0x308>
   36820:	add	r4, r4, #20
   36824:	rsb	r2, r4, #32
   36828:	lsr	r0, r0, r4
   3682c:	orr	r0, r0, r1, lsl r2
   36830:	orr	r1, r5, r1, lsr r4
   36834:	pop	{r4, r5, pc}
   36838:	rsb	r4, r4, #12
   3683c:	rsb	r2, r4, #32
   36840:	lsr	r0, r0, r2
   36844:	orr	r0, r0, r1, lsl r4
   36848:	mov	r1, r5
   3684c:	pop	{r4, r5, pc}
   36850:	lsr	r0, r1, r4
   36854:	mov	r1, r5
   36858:	pop	{r4, r5, pc}
   3685c:	teq	r4, #0
   36860:	eor	r3, r3, #1048576	; 0x100000
   36864:	eoreq	r1, r1, #1048576	; 0x100000
   36868:	addeq	r4, r4, #1
   3686c:	subne	r5, r5, #1
   36870:	b	366fc <flatcc_json_parser_struct_as_root@@Base+0x1cc>
   36874:	mvns	ip, r4, asr #21
   36878:	mvnsne	ip, r5, asr #21
   3687c:	beq	368e4 <flatcc_json_parser_struct_as_root@@Base+0x3b4>
   36880:	teq	r4, r5
   36884:	teqeq	r0, r2
   36888:	beq	3689c <flatcc_json_parser_struct_as_root@@Base+0x36c>
   3688c:	orrs	ip, r4, r0
   36890:	moveq	r1, r3
   36894:	moveq	r0, r2
   36898:	pop	{r4, r5, pc}
   3689c:	teq	r1, r3
   368a0:	movne	r1, #0
   368a4:	movne	r0, #0
   368a8:	popne	{r4, r5, pc}
   368ac:	lsrs	ip, r4, #21
   368b0:	bne	368c4 <flatcc_json_parser_struct_as_root@@Base+0x394>
   368b4:	lsls	r0, r0, #1
   368b8:	adcs	r1, r1, r1
   368bc:	orrcs	r1, r1, #-2147483648	; 0x80000000
   368c0:	pop	{r4, r5, pc}
   368c4:	adds	r4, r4, #4194304	; 0x400000
   368c8:	addcc	r1, r1, #1048576	; 0x100000
   368cc:	popcc	{r4, r5, pc}
   368d0:	and	r5, r1, #-2147483648	; 0x80000000
   368d4:	orr	r1, r5, #2130706432	; 0x7f000000
   368d8:	orr	r1, r1, #15728640	; 0xf00000
   368dc:	mov	r0, #0
   368e0:	pop	{r4, r5, pc}
   368e4:	mvns	ip, r4, asr #21
   368e8:	movne	r1, r3
   368ec:	movne	r0, r2
   368f0:	mvnseq	ip, r5, asr #21
   368f4:	movne	r3, r1
   368f8:	movne	r2, r0
   368fc:	orrs	r4, r0, r1, lsl #12
   36900:	orrseq	r5, r2, r3, lsl #12
   36904:	teqeq	r1, r3
   36908:	orrne	r1, r1, #524288	; 0x80000
   3690c:	pop	{r4, r5, pc}
   36910:	teq	r0, #0
   36914:	moveq	r1, #0
   36918:	bxeq	lr
   3691c:	push	{r4, r5, lr}
   36920:	mov	r4, #1024	; 0x400
   36924:	add	r4, r4, #50	; 0x32
   36928:	mov	r5, #0
   3692c:	mov	r1, #0
   36930:	b	367ac <flatcc_json_parser_struct_as_root@@Base+0x27c>
   36934:	teq	r0, #0
   36938:	moveq	r1, #0
   3693c:	bxeq	lr
   36940:	push	{r4, r5, lr}
   36944:	mov	r4, #1024	; 0x400
   36948:	add	r4, r4, #50	; 0x32
   3694c:	ands	r5, r0, #-2147483648	; 0x80000000
   36950:	rsbmi	r0, r0, #0
   36954:	mov	r1, #0
   36958:	b	367ac <flatcc_json_parser_struct_as_root@@Base+0x27c>
   3695c:	lsls	r2, r0, #1
   36960:	asr	r1, r2, #3
   36964:	rrx	r1, r1
   36968:	lsl	r0, r2, #28
   3696c:	andsne	r3, r2, #-16777216	; 0xff000000
   36970:	teqne	r3, #-16777216	; 0xff000000
   36974:	eorne	r1, r1, #939524096	; 0x38000000
   36978:	bxne	lr
   3697c:	bics	r2, r2, #-16777216	; 0xff000000
   36980:	bxeq	lr
   36984:	teq	r3, #-16777216	; 0xff000000
   36988:	orreq	r1, r1, #524288	; 0x80000
   3698c:	bxeq	lr
   36990:	push	{r4, r5, lr}
   36994:	mov	r4, #896	; 0x380
   36998:	and	r5, r1, #-2147483648	; 0x80000000
   3699c:	bic	r1, r1, #-2147483648	; 0x80000000
   369a0:	b	367ac <flatcc_json_parser_struct_as_root@@Base+0x27c>
   369a4:	orrs	r2, r0, r1
   369a8:	bxeq	lr
   369ac:	push	{r4, r5, lr}
   369b0:	mov	r5, #0
   369b4:	b	369d4 <flatcc_json_parser_struct_as_root@@Base+0x4a4>
   369b8:	orrs	r2, r0, r1
   369bc:	bxeq	lr
   369c0:	push	{r4, r5, lr}
   369c4:	ands	r5, r1, #-2147483648	; 0x80000000
   369c8:	bpl	369d4 <flatcc_json_parser_struct_as_root@@Base+0x4a4>
   369cc:	rsbs	r0, r0, #0
   369d0:	rsc	r1, r1, #0
   369d4:	mov	r4, #1024	; 0x400
   369d8:	add	r4, r4, #50	; 0x32
   369dc:	lsrs	ip, r1, #22
   369e0:	beq	36750 <flatcc_json_parser_struct_as_root@@Base+0x220>
   369e4:	mov	r2, #3
   369e8:	lsrs	ip, ip, #3
   369ec:	addne	r2, r2, #3
   369f0:	lsrs	ip, ip, #3
   369f4:	addne	r2, r2, #3
   369f8:	add	r2, r2, ip, lsr #3
   369fc:	rsb	r3, r2, #32
   36a00:	lsl	ip, r0, r3
   36a04:	lsr	r0, r0, r2
   36a08:	orr	r0, r0, r1, lsl r3
   36a0c:	lsr	r1, r1, r2
   36a10:	add	r4, r4, r2
   36a14:	b	36750 <flatcc_json_parser_struct_as_root@@Base+0x220>
   36a18:	eor	r0, r0, #-2147483648	; 0x80000000
   36a1c:	b	36a24 <flatcc_json_parser_struct_as_root@@Base+0x4f4>
   36a20:	eor	r1, r1, #-2147483648	; 0x80000000
   36a24:	lsls	r2, r0, #1
   36a28:	lslsne	r3, r1, #1
   36a2c:	teqne	r2, r3
   36a30:	mvnsne	ip, r2, asr #24
   36a34:	mvnsne	ip, r3, asr #24
   36a38:	beq	36b30 <flatcc_json_parser_struct_as_root@@Base+0x600>
   36a3c:	lsr	r2, r2, #24
   36a40:	rsbs	r3, r2, r3, lsr #24
   36a44:	addgt	r2, r2, r3
   36a48:	eorgt	r1, r0, r1
   36a4c:	eorgt	r0, r1, r0
   36a50:	eorgt	r1, r0, r1
   36a54:	rsblt	r3, r3, #0
   36a58:	cmp	r3, #25
   36a5c:	bxhi	lr
   36a60:	tst	r0, #-2147483648	; 0x80000000
   36a64:	orr	r0, r0, #8388608	; 0x800000
   36a68:	bic	r0, r0, #-16777216	; 0xff000000
   36a6c:	rsbne	r0, r0, #0
   36a70:	tst	r1, #-2147483648	; 0x80000000
   36a74:	orr	r1, r1, #8388608	; 0x800000
   36a78:	bic	r1, r1, #-16777216	; 0xff000000
   36a7c:	rsbne	r1, r1, #0
   36a80:	teq	r2, r3
   36a84:	beq	36b18 <flatcc_json_parser_struct_as_root@@Base+0x5e8>
   36a88:	sub	r2, r2, #1
   36a8c:	adds	r0, r0, r1, asr r3
   36a90:	rsb	r3, r3, #32
   36a94:	lsl	r1, r1, r3
   36a98:	and	r3, r0, #-2147483648	; 0x80000000
   36a9c:	bpl	36aa8 <flatcc_json_parser_struct_as_root@@Base+0x578>
   36aa0:	rsbs	r1, r1, #0
   36aa4:	rsc	r0, r0, #0
   36aa8:	cmp	r0, #8388608	; 0x800000
   36aac:	bcc	36ae0 <flatcc_json_parser_struct_as_root@@Base+0x5b0>
   36ab0:	cmp	r0, #16777216	; 0x1000000
   36ab4:	bcc	36acc <flatcc_json_parser_struct_as_root@@Base+0x59c>
   36ab8:	lsrs	r0, r0, #1
   36abc:	rrx	r1, r1
   36ac0:	add	r2, r2, #1
   36ac4:	cmp	r2, #254	; 0xfe
   36ac8:	bcs	36b84 <flatcc_json_parser_struct_as_root@@Base+0x654>
   36acc:	cmp	r1, #-2147483648	; 0x80000000
   36ad0:	adc	r0, r0, r2, lsl #23
   36ad4:	biceq	r0, r0, #1
   36ad8:	orr	r0, r0, r3
   36adc:	bx	lr
   36ae0:	lsls	r1, r1, #1
   36ae4:	adc	r0, r0, r0
   36ae8:	tst	r0, #8388608	; 0x800000
   36aec:	sub	r2, r2, #1
   36af0:	bne	36acc <flatcc_json_parser_struct_as_root@@Base+0x59c>
   36af4:	clz	ip, r0
   36af8:	sub	ip, ip, #8
   36afc:	subs	r2, r2, ip
   36b00:	lsl	r0, r0, ip
   36b04:	addge	r0, r0, r2, lsl #23
   36b08:	rsblt	r2, r2, #0
   36b0c:	orrge	r0, r0, r3
   36b10:	orrlt	r0, r3, r0, lsr r2
   36b14:	bx	lr
   36b18:	teq	r2, #0
   36b1c:	eor	r1, r1, #8388608	; 0x800000
   36b20:	eoreq	r0, r0, #8388608	; 0x800000
   36b24:	addeq	r2, r2, #1
   36b28:	subne	r3, r3, #1
   36b2c:	b	36a88 <flatcc_json_parser_struct_as_root@@Base+0x558>
   36b30:	lsl	r3, r1, #1
   36b34:	mvns	ip, r2, asr #24
   36b38:	mvnsne	ip, r3, asr #24
   36b3c:	beq	36b90 <flatcc_json_parser_struct_as_root@@Base+0x660>
   36b40:	teq	r2, r3
   36b44:	beq	36b54 <flatcc_json_parser_struct_as_root@@Base+0x624>
   36b48:	teq	r2, #0
   36b4c:	moveq	r0, r1
   36b50:	bx	lr
   36b54:	teq	r0, r1
   36b58:	movne	r0, #0
   36b5c:	bxne	lr
   36b60:	tst	r2, #-16777216	; 0xff000000
   36b64:	bne	36b74 <flatcc_json_parser_struct_as_root@@Base+0x644>
   36b68:	lsls	r0, r0, #1
   36b6c:	orrcs	r0, r0, #-2147483648	; 0x80000000
   36b70:	bx	lr
   36b74:	adds	r2, r2, #33554432	; 0x2000000
   36b78:	addcc	r0, r0, #8388608	; 0x800000
   36b7c:	bxcc	lr
   36b80:	and	r3, r0, #-2147483648	; 0x80000000
   36b84:	orr	r0, r3, #2130706432	; 0x7f000000
   36b88:	orr	r0, r0, #8388608	; 0x800000
   36b8c:	bx	lr
   36b90:	mvns	r2, r2, asr #24
   36b94:	movne	r0, r1
   36b98:	mvnseq	r3, r3, asr #24
   36b9c:	movne	r1, r0
   36ba0:	lsls	r2, r0, #9
   36ba4:	lslseq	r3, r1, #9
   36ba8:	teqeq	r0, r1
   36bac:	orrne	r0, r0, #4194304	; 0x400000
   36bb0:	bx	lr
   36bb4:	mov	r3, #0
   36bb8:	b	36bc4 <flatcc_json_parser_struct_as_root@@Base+0x694>
   36bbc:	ands	r3, r0, #-2147483648	; 0x80000000
   36bc0:	rsbmi	r0, r0, #0
   36bc4:	movs	ip, r0
   36bc8:	bxeq	lr
   36bcc:	orr	r3, r3, #1258291200	; 0x4b000000
   36bd0:	mov	r1, r0
   36bd4:	mov	r0, #0
   36bd8:	b	36c1c <flatcc_json_parser_struct_as_root@@Base+0x6ec>
   36bdc:	orrs	r2, r0, r1
   36be0:	bxeq	lr
   36be4:	mov	r3, #0
   36be8:	b	36c04 <flatcc_json_parser_struct_as_root@@Base+0x6d4>
   36bec:	orrs	r2, r0, r1
   36bf0:	bxeq	lr
   36bf4:	ands	r3, r1, #-2147483648	; 0x80000000
   36bf8:	bpl	36c04 <flatcc_json_parser_struct_as_root@@Base+0x6d4>
   36bfc:	rsbs	r0, r0, #0
   36c00:	rsc	r1, r1, #0
   36c04:	movs	ip, r1
   36c08:	moveq	ip, r0
   36c0c:	moveq	r1, r0
   36c10:	moveq	r0, #0
   36c14:	orr	r3, r3, #1526726656	; 0x5b000000
   36c18:	subeq	r3, r3, #268435456	; 0x10000000
   36c1c:	sub	r3, r3, #8388608	; 0x800000
   36c20:	clz	r2, ip
   36c24:	subs	r2, r2, #8
   36c28:	sub	r3, r3, r2, lsl #23
   36c2c:	blt	36c4c <flatcc_json_parser_struct_as_root@@Base+0x71c>
   36c30:	add	r3, r3, r1, lsl r2
   36c34:	lsl	ip, r0, r2
   36c38:	rsb	r2, r2, #32
   36c3c:	cmp	ip, #-2147483648	; 0x80000000
   36c40:	adc	r0, r3, r0, lsr r2
   36c44:	biceq	r0, r0, #1
   36c48:	bx	lr
   36c4c:	add	r2, r2, #32
   36c50:	lsl	ip, r1, r2
   36c54:	rsb	r2, r2, #32
   36c58:	orrs	r0, r0, ip, lsl #1
   36c5c:	adc	r0, r3, r1, lsr r2
   36c60:	biceq	r0, r0, ip, lsr #31
   36c64:	bx	lr

00036c68 <__libc_csu_init@@Base>:
   36c68:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   36c6c:	mov	r7, r0
   36c70:	ldr	r6, [pc, #72]	; 36cc0 <__libc_csu_init@@Base+0x58>
   36c74:	ldr	r5, [pc, #72]	; 36cc4 <__libc_csu_init@@Base+0x5c>
   36c78:	add	r6, pc, r6
   36c7c:	add	r5, pc, r5
   36c80:	sub	r6, r6, r5
   36c84:	mov	r8, r1
   36c88:	mov	r9, r2
   36c8c:	bl	1256c <fopen@plt-0x20>
   36c90:	asrs	r6, r6, #2
   36c94:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   36c98:	mov	r4, #0
   36c9c:	add	r4, r4, #1
   36ca0:	ldr	r3, [r5], #4
   36ca4:	mov	r2, r9
   36ca8:	mov	r1, r8
   36cac:	mov	r0, r7
   36cb0:	blx	r3
   36cb4:	cmp	r6, r4
   36cb8:	bne	36c9c <__libc_csu_init@@Base+0x34>
   36cbc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   36cc0:	muleq	r1, r4, r2
   36cc4:	andeq	r2, r1, ip, lsl #5

00036cc8 <__libc_csu_fini@@Base>:
   36cc8:	bx	lr

Disassembly of section .fini:

00036ccc <.fini>:
   36ccc:	push	{r3, lr}
   36cd0:	pop	{r3, pc}
