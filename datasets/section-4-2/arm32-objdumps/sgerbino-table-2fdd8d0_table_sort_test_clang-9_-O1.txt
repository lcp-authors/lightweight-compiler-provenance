
../repos/sgerbino-table-2fdd8d0/bin/table_sort_test:     file format elf32-littlearm


Disassembly of section .init:

00011f5c <.init>:
   11f5c:	push	{r3, lr}
   11f60:	bl	12084 <_start@@Base+0x3c>
   11f64:	pop	{r3, pc}

Disassembly of section .plt:

00011f68 <calloc@plt-0x14>:
   11f68:	push	{lr}		; (str lr, [sp, #-4]!)
   11f6c:	ldr	lr, [pc, #4]	; 11f78 <calloc@plt-0x4>
   11f70:	add	lr, pc, lr
   11f74:	ldr	pc, [lr, #8]!
   11f78:	andeq	r4, r1, r8, lsl #1

00011f7c <calloc@plt>:
   11f7c:	add	ip, pc, #0, 12
   11f80:	add	ip, ip, #20, 20	; 0x14000
   11f84:	ldr	pc, [ip, #136]!	; 0x88

00011f88 <strcmp@plt>:
   11f88:	add	ip, pc, #0, 12
   11f8c:	add	ip, ip, #20, 20	; 0x14000
   11f90:	ldr	pc, [ip, #128]!	; 0x80

00011f94 <printf@plt>:
   11f94:	add	ip, pc, #0, 12
   11f98:	add	ip, ip, #20, 20	; 0x14000
   11f9c:	ldr	pc, [ip, #120]!	; 0x78

00011fa0 <free@plt>:
   11fa0:	add	ip, pc, #0, 12
   11fa4:	add	ip, ip, #20, 20	; 0x14000
   11fa8:	ldr	pc, [ip, #112]!	; 0x70

00011fac <time@plt>:
   11fac:	add	ip, pc, #0, 12
   11fb0:	add	ip, ip, #20, 20	; 0x14000
   11fb4:	ldr	pc, [ip, #104]!	; 0x68

00011fb8 <realloc@plt>:
   11fb8:	add	ip, pc, #0, 12
   11fbc:	add	ip, ip, #20, 20	; 0x14000
   11fc0:	ldr	pc, [ip, #96]!	; 0x60

00011fc4 <strcpy@plt>:
   11fc4:	add	ip, pc, #0, 12
   11fc8:	add	ip, ip, #20, 20	; 0x14000
   11fcc:	ldr	pc, [ip, #88]!	; 0x58

00011fd0 <puts@plt>:
   11fd0:	add	ip, pc, #0, 12
   11fd4:	add	ip, ip, #20, 20	; 0x14000
   11fd8:	ldr	pc, [ip, #80]!	; 0x50

00011fdc <malloc@plt>:
   11fdc:	add	ip, pc, #0, 12
   11fe0:	add	ip, ip, #20, 20	; 0x14000
   11fe4:	ldr	pc, [ip, #72]!	; 0x48

00011fe8 <__libc_start_main@plt>:
   11fe8:	add	ip, pc, #0, 12
   11fec:	add	ip, ip, #20, 20	; 0x14000
   11ff0:	ldr	pc, [ip, #64]!	; 0x40

00011ff4 <__gmon_start__@plt>:
   11ff4:	add	ip, pc, #0, 12
   11ff8:	add	ip, ip, #20, 20	; 0x14000
   11ffc:	ldr	pc, [ip, #56]!	; 0x38

00012000 <strlen@plt>:
   12000:	add	ip, pc, #0, 12
   12004:	add	ip, ip, #20, 20	; 0x14000
   12008:	ldr	pc, [ip, #48]!	; 0x30

0001200c <srand@plt>:
   1200c:	add	ip, pc, #0, 12
   12010:	add	ip, ip, #20, 20	; 0x14000
   12014:	ldr	pc, [ip, #40]!	; 0x28

00012018 <snprintf@plt>:
   12018:	add	ip, pc, #0, 12
   1201c:	add	ip, ip, #20, 20	; 0x14000
   12020:	ldr	pc, [ip, #32]!

00012024 <__isoc99_sscanf@plt>:
   12024:	add	ip, pc, #0, 12
   12028:	add	ip, ip, #20, 20	; 0x14000
   1202c:	ldr	pc, [ip, #24]!

00012030 <rand@plt>:
   12030:	add	ip, pc, #0, 12
   12034:	add	ip, ip, #20, 20	; 0x14000
   12038:	ldr	pc, [ip, #16]!

0001203c <abort@plt>:
   1203c:	add	ip, pc, #0, 12
   12040:	add	ip, ip, #20, 20	; 0x14000
   12044:	ldr	pc, [ip, #8]!

Disassembly of section .text:

00012048 <_start@@Base>:
   12048:	mov	fp, #0
   1204c:	mov	lr, #0
   12050:	pop	{r1}		; (ldr r1, [sp], #4)
   12054:	mov	r2, sp
   12058:	push	{r2}		; (str r2, [sp, #-4]!)
   1205c:	push	{r0}		; (str r0, [sp, #-4]!)
   12060:	ldr	ip, [pc, #16]	; 12078 <_start@@Base+0x30>
   12064:	push	{ip}		; (str ip, [sp, #-4]!)
   12068:	ldr	r0, [pc, #12]	; 1207c <_start@@Base+0x34>
   1206c:	ldr	r3, [pc, #12]	; 12080 <_start@@Base+0x38>
   12070:	bl	11fe8 <__libc_start_main@plt>
   12074:	bl	1203c <abort@plt>
   12078:	andeq	r5, r1, ip, lsr r4
   1207c:	andeq	r2, r1, r8, lsr r1
   12080:	ldrdeq	r5, [r1], -ip
   12084:	ldr	r3, [pc, #20]	; 120a0 <_start@@Base+0x58>
   12088:	ldr	r2, [pc, #20]	; 120a4 <_start@@Base+0x5c>
   1208c:	add	r3, pc, r3
   12090:	ldr	r2, [r3, r2]
   12094:	cmp	r2, #0
   12098:	bxeq	lr
   1209c:	b	11ff4 <__gmon_start__@plt>
   120a0:	andeq	r3, r1, ip, ror #30
   120a4:	andeq	r0, r0, r0, asr r0
   120a8:	ldr	r0, [pc, #24]	; 120c8 <_start@@Base+0x80>
   120ac:	ldr	r3, [pc, #24]	; 120cc <_start@@Base+0x84>
   120b0:	cmp	r3, r0
   120b4:	bxeq	lr
   120b8:	ldr	r3, [pc, #16]	; 120d0 <_start@@Base+0x88>
   120bc:	cmp	r3, #0
   120c0:	bxeq	lr
   120c4:	bx	r3
   120c8:	andeq	r6, r2, ip, asr r0
   120cc:	andeq	r6, r2, ip, asr r0
   120d0:	andeq	r0, r0, r0
   120d4:	ldr	r0, [pc, #36]	; 12100 <_start@@Base+0xb8>
   120d8:	ldr	r1, [pc, #36]	; 12104 <_start@@Base+0xbc>
   120dc:	sub	r1, r1, r0
   120e0:	asr	r1, r1, #2
   120e4:	add	r1, r1, r1, lsr #31
   120e8:	asrs	r1, r1, #1
   120ec:	bxeq	lr
   120f0:	ldr	r3, [pc, #16]	; 12108 <_start@@Base+0xc0>
   120f4:	cmp	r3, #0
   120f8:	bxeq	lr
   120fc:	bx	r3
   12100:	andeq	r6, r2, ip, asr r0
   12104:	andeq	r6, r2, ip, asr r0
   12108:	andeq	r0, r0, r0
   1210c:	push	{r4, lr}
   12110:	ldr	r4, [pc, #24]	; 12130 <_start@@Base+0xe8>
   12114:	ldrb	r3, [r4]
   12118:	cmp	r3, #0
   1211c:	popne	{r4, pc}
   12120:	bl	120a8 <_start@@Base+0x60>
   12124:	mov	r3, #1
   12128:	strb	r3, [r4]
   1212c:	pop	{r4, pc}
   12130:	andeq	r6, r2, ip, asr r0
   12134:	b	120d4 <_start@@Base+0x8c>

00012138 <main@@Base>:
   12138:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1213c:	add	fp, sp, #28
   12140:	sub	sp, sp, #348	; 0x15c
   12144:	sub	r0, fp, #92	; 0x5c
   12148:	bl	11fac <time@plt>
   1214c:	bl	1200c <srand@plt>
   12150:	bl	12030 <rand@plt>
   12154:	mov	r5, r0
   12158:	sub	r4, fp, #88	; 0x58
   1215c:	mov	r0, r4
   12160:	bl	12594 <table_init@@Base>
   12164:	movw	r0, #34079	; 0x851f
   12168:	movt	r0, #20971	; 0x51eb
   1216c:	umull	r0, r1, r5, r0
   12170:	lsr	r0, r1, #5
   12174:	mov	r1, #100	; 0x64
   12178:	mls	r0, r0, r1, r5
   1217c:	add	r5, r0, #100	; 0x64
   12180:	mov	r6, #0
   12184:	mov	r0, r4
   12188:	bl	14768 <table_add_row@@Base>
   1218c:	add	r6, r6, #1
   12190:	cmp	r6, r5
   12194:	bcc	12184 <main@@Base+0x4c>
   12198:	sub	r8, fp, #88	; 0x58
   1219c:	mov	r0, r8
   121a0:	bl	14760 <table_get_row_length@@Base>
   121a4:	mov	r9, r0
   121a8:	bl	12030 <rand@plt>
   121ac:	movw	r1, #52429	; 0xcccd
   121b0:	movt	r1, #52428	; 0xcccc
   121b4:	umull	r1, r2, r0, r1
   121b8:	lsr	r1, r2, #2
   121bc:	add	r1, r1, r1, lsl #2
   121c0:	sub	r0, r0, r1
   121c4:	add	r6, r0, #2
   121c8:	mov	r5, #0
   121cc:	add	r7, sp, #29
   121d0:	movw	r4, #21580	; 0x544c
   121d4:	movt	r4, #1
   121d8:	mov	r0, r7
   121dc:	mov	r1, #255	; 0xff
   121e0:	mov	r2, r4
   121e4:	mov	r3, r5
   121e8:	bl	12018 <snprintf@plt>
   121ec:	mov	r0, r8
   121f0:	mov	r1, r7
   121f4:	mov	r2, #0
   121f8:	bl	13abc <table_add_column@@Base>
   121fc:	add	r5, r5, #1
   12200:	cmp	r5, r6
   12204:	bcc	121d8 <main@@Base+0xa0>
   12208:	sub	r0, fp, #88	; 0x58
   1220c:	bl	13a34 <table_get_column_length@@Base>
   12210:	mov	r8, r0
   12214:	cmp	r0, #1
   12218:	blt	12284 <main@@Base+0x14c>
   1221c:	mov	r4, #0
   12220:	movw	r6, #26215	; 0x6667
   12224:	movt	r6, #26214	; 0x6666
   12228:	sub	r5, fp, #88	; 0x58
   1222c:	cmp	r9, #1
   12230:	bge	12248 <main@@Base+0x110>
   12234:	add	r4, r4, #1
   12238:	cmp	r4, r8
   1223c:	beq	12284 <main@@Base+0x14c>
   12240:	cmp	r9, #1
   12244:	blt	12234 <main@@Base+0xfc>
   12248:	mov	r7, #0
   1224c:	bl	12030 <rand@plt>
   12250:	smmul	r1, r0, r6
   12254:	asr	r2, r1, #3
   12258:	add	r1, r2, r1, lsr #31
   1225c:	add	r1, r1, r1, lsl #2
   12260:	sub	r3, r0, r1, lsl #2
   12264:	mov	r0, r5
   12268:	mov	r1, r7
   1226c:	mov	r2, r4
   12270:	bl	14bc8 <table_set_int@@Base>
   12274:	add	r7, r7, #1
   12278:	cmp	r9, r7
   1227c:	bne	1224c <main@@Base+0x114>
   12280:	b	12234 <main@@Base+0xfc>
   12284:	mov	r0, r8
   12288:	mov	r1, #4
   1228c:	bl	11f7c <calloc@plt>
   12290:	mov	r5, r0
   12294:	mov	r0, r8
   12298:	mov	r1, #4
   1229c:	bl	11f7c <calloc@plt>
   122a0:	mov	r6, r0
   122a4:	cmp	r8, #1
   122a8:	blt	122d4 <main@@Base+0x19c>
   122ac:	mov	r4, #0
   122b0:	str	r4, [r5, r4, lsl #2]
   122b4:	bl	12030 <rand@plt>
   122b8:	add	r1, r0, r0, lsr #31
   122bc:	bic	r1, r1, #1
   122c0:	sub	r0, r0, r1
   122c4:	str	r0, [r6, r4, lsl #2]
   122c8:	add	r4, r4, #1
   122cc:	cmp	r8, r4
   122d0:	bne	122b0 <main@@Base+0x178>
   122d4:	sub	r0, fp, #88	; 0x58
   122d8:	mov	r1, r5
   122dc:	mov	r2, r6
   122e0:	mov	r3, r8
   122e4:	bl	14f80 <table_column_sort@@Base>
   122e8:	cmp	r9, #1
   122ec:	blt	12540 <main@@Base+0x408>
   122f0:	str	r5, [sp, #4]
   122f4:	mvn	r1, #0
   122f8:	mov	r4, #0
   122fc:	sub	r5, fp, #88	; 0x58
   12300:	mov	r0, #0
   12304:	str	r0, [sp, #8]
   12308:	mvn	r0, #0
   1230c:	str	r0, [sp, #12]
   12310:	str	r9, [sp, #16]
   12314:	str	r8, [sp, #20]
   12318:	cmp	r4, #0
   1231c:	bne	12344 <main@@Base+0x20c>
   12320:	b	12328 <main@@Base+0x1f0>
   12324:	ldr	r1, [sp, #24]
   12328:	add	r4, r4, #1
   1232c:	ldr	r0, [sp, #16]
   12330:	cmp	r4, r0
   12334:	ldr	r8, [sp, #20]
   12338:	beq	12434 <main@@Base+0x2fc>
   1233c:	cmp	r4, #0
   12340:	beq	12328 <main@@Base+0x1f0>
   12344:	cmp	r8, #1
   12348:	blt	12328 <main@@Base+0x1f0>
   1234c:	sub	r8, r4, #1
   12350:	mov	r9, #0
   12354:	str	r1, [sp, #24]
   12358:	cmp	r9, #0
   1235c:	beq	1239c <main@@Base+0x264>
   12360:	mov	r7, r9
   12364:	subs	r7, r7, #1
   12368:	blt	1239c <main@@Base+0x264>
   1236c:	mov	r0, r5
   12370:	mov	r1, r4
   12374:	mov	r2, r7
   12378:	bl	14518 <table_get_int@@Base>
   1237c:	mov	sl, r0
   12380:	mov	r0, r5
   12384:	mov	r1, r8
   12388:	mov	r2, r7
   1238c:	bl	14518 <table_get_int@@Base>
   12390:	cmp	sl, r0
   12394:	beq	12364 <main@@Base+0x22c>
   12398:	b	12324 <main@@Base+0x1ec>
   1239c:	mov	sl, r6
   123a0:	ldr	r6, [r6, r9, lsl #2]
   123a4:	mov	r0, r5
   123a8:	mov	r1, r8
   123ac:	mov	r2, r9
   123b0:	bl	14518 <table_get_int@@Base>
   123b4:	mov	r7, r0
   123b8:	mov	r0, r5
   123bc:	mov	r1, r4
   123c0:	mov	r2, r9
   123c4:	bl	14518 <table_get_int@@Base>
   123c8:	cmp	r6, #0
   123cc:	beq	123ec <main@@Base+0x2b4>
   123d0:	cmp	r7, r0
   123d4:	mov	r6, sl
   123d8:	ldr	r1, [sp, #24]
   123dc:	bge	12420 <main@@Base+0x2e8>
   123e0:	movw	r0, #21659	; 0x549b
   123e4:	movt	r0, #1
   123e8:	b	12404 <main@@Base+0x2cc>
   123ec:	cmp	r7, r0
   123f0:	mov	r6, sl
   123f4:	ldr	r1, [sp, #24]
   123f8:	ble	12420 <main@@Base+0x2e8>
   123fc:	movw	r0, #21587	; 0x5453
   12400:	movt	r0, #1
   12404:	mov	r1, r4
   12408:	mov	r2, r9
   1240c:	bl	11f94 <printf@plt>
   12410:	mvn	r0, #0
   12414:	str	r0, [sp, #8]
   12418:	str	r4, [sp, #12]
   1241c:	mov	r1, r9
   12420:	add	r9, r9, #1
   12424:	ldr	r0, [sp, #20]
   12428:	cmp	r9, r0
   1242c:	bne	12354 <main@@Base+0x21c>
   12430:	b	12328 <main@@Base+0x1f0>
   12434:	ldr	r0, [sp, #12]
   12438:	cmn	r0, #1
   1243c:	beq	12548 <main@@Base+0x410>
   12440:	str	r1, [sp, #24]
   12444:	str	r6, [sp, #16]
   12448:	sub	r4, fp, #88	; 0x58
   1244c:	mov	r0, r4
   12450:	bl	14760 <table_get_row_length@@Base>
   12454:	mov	r0, r4
   12458:	bl	14760 <table_get_row_length@@Base>
   1245c:	mov	r4, r0
   12460:	movw	r0, #21742	; 0x54ee
   12464:	movt	r0, #1
   12468:	bl	11fd0 <puts@plt>
   1246c:	str	r4, [sp, #20]
   12470:	cmp	r4, #1
   12474:	blt	12534 <main@@Base+0x3fc>
   12478:	mov	r6, #0
   1247c:	sub	r7, fp, #88	; 0x58
   12480:	add	r5, sp, #29
   12484:	ldr	sl, [sp, #24]
   12488:	ldr	r8, [sp, #12]
   1248c:	movw	r9, #21737	; 0x54e9
   12490:	movt	r9, #1
   12494:	b	124c4 <main@@Base+0x38c>
   12498:	cmp	r8, r6
   1249c:	movw	r0, #21742	; 0x54ee
   124a0:	movt	r0, #1
   124a4:	movw	r1, #21741	; 0x54ed
   124a8:	movt	r1, #1
   124ac:	moveq	r0, r1
   124b0:	bl	11fd0 <puts@plt>
   124b4:	add	r6, r6, #1
   124b8:	ldr	r0, [sp, #20]
   124bc:	cmp	r6, r0
   124c0:	beq	12534 <main@@Base+0x3fc>
   124c4:	mov	r0, r7
   124c8:	bl	13a34 <table_get_column_length@@Base>
   124cc:	cmp	r0, #1
   124d0:	mov	r0, #255	; 0xff
   124d4:	blt	12498 <main@@Base+0x360>
   124d8:	mov	r4, #0
   124dc:	str	r0, [sp]
   124e0:	mov	r0, r7
   124e4:	mov	r1, r6
   124e8:	mov	r2, r4
   124ec:	mov	r3, r5
   124f0:	bl	12fe4 <table_cell_to_buffer@@Base>
   124f4:	eor	r0, sl, r4
   124f8:	eor	r1, r8, r6
   124fc:	orrs	r0, r1, r0
   12500:	mov	r0, r9
   12504:	movw	r1, #21732	; 0x54e4
   12508:	movt	r1, #1
   1250c:	moveq	r0, r1
   12510:	mov	r1, r5
   12514:	bl	11f94 <printf@plt>
   12518:	add	r4, r4, #1
   1251c:	mov	r0, r7
   12520:	bl	13a34 <table_get_column_length@@Base>
   12524:	cmp	r4, r0
   12528:	mov	r0, #255	; 0xff
   1252c:	blt	124dc <main@@Base+0x3a4>
   12530:	b	12498 <main@@Base+0x360>
   12534:	ldr	r5, [sp, #4]
   12538:	ldr	r6, [sp, #16]
   1253c:	b	1254c <main@@Base+0x414>
   12540:	mov	r4, #0
   12544:	b	12550 <main@@Base+0x418>
   12548:	ldr	r5, [sp, #4]
   1254c:	ldr	r4, [sp, #8]
   12550:	sub	r0, fp, #88	; 0x58
   12554:	bl	125d4 <table_destroy@@Base>
   12558:	mov	r0, r5
   1255c:	bl	11fa0 <free@plt>
   12560:	mov	r0, r6
   12564:	bl	11fa0 <free@plt>
   12568:	mov	r0, r4
   1256c:	sub	sp, fp, #28
   12570:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00012574 <table_new@@Base>:
   12574:	push	{r4, sl, fp, lr}
   12578:	add	fp, sp, #8
   1257c:	mov	r0, #56	; 0x38
   12580:	bl	11fdc <malloc@plt>
   12584:	mov	r4, r0
   12588:	bl	12594 <table_init@@Base>
   1258c:	mov	r0, r4
   12590:	pop	{r4, sl, fp, pc}

00012594 <table_init@@Base>:
   12594:	push	{r4, sl, fp, lr}
   12598:	add	fp, sp, #8
   1259c:	mov	r4, r0
   125a0:	bl	12614 <table_destroy@@Base+0x40>
   125a4:	mov	r0, r4
   125a8:	bl	1262c <table_destroy@@Base+0x58>
   125ac:	mov	r0, r4
   125b0:	pop	{r4, sl, fp, lr}
   125b4:	b	12648 <table_destroy@@Base+0x74>

000125b8 <table_delete@@Base>:
   125b8:	push	{r4, sl, fp, lr}
   125bc:	add	fp, sp, #8
   125c0:	mov	r4, r0
   125c4:	bl	125d4 <table_destroy@@Base>
   125c8:	mov	r0, r4
   125cc:	pop	{r4, sl, fp, lr}
   125d0:	b	11fa0 <free@plt>

000125d4 <table_destroy@@Base>:
   125d4:	cmp	r0, #0
   125d8:	bxeq	lr
   125dc:	push	{r4, sl, fp, lr}
   125e0:	add	fp, sp, #8
   125e4:	mov	r4, r0
   125e8:	mvn	r1, #0
   125ec:	mvn	r2, #0
   125f0:	mov	r3, #64	; 0x40
   125f4:	bl	12ee0 <table_notify@@Base>
   125f8:	mov	r0, r4
   125fc:	bl	12668 <table_destroy@@Base+0x94>
   12600:	mov	r0, r4
   12604:	bl	126b8 <table_destroy@@Base+0xe4>
   12608:	mov	r0, r4
   1260c:	pop	{r4, sl, fp, lr}
   12610:	b	12708 <table_destroy@@Base+0x134>
   12614:	mov	r1, #0
   12618:	mov	r2, #10
   1261c:	str	r1, [r0]
   12620:	stmib	r0, {r1, r2}
   12624:	str	r1, [r0, #12]
   12628:	bx	lr
   1262c:	mov	r1, #0
   12630:	mov	r2, #20
   12634:	str	r1, [r0, #16]
   12638:	str	r1, [r0, #20]
   1263c:	str	r2, [r0, #24]
   12640:	str	r1, [r0, #28]
   12644:	bx	lr
   12648:	mov	r1, #10
   1264c:	vmov.i32	q8, #0	; 0x00000000
   12650:	mov	r2, #0
   12654:	str	r1, [r0, #48]	; 0x30
   12658:	str	r2, [r0, #52]	; 0x34
   1265c:	add	r0, r0, #32
   12660:	vst1.32	{d16-d17}, [r0]
   12664:	bx	lr
   12668:	push	{r4, r5, r6, sl, fp, lr}
   1266c:	add	fp, sp, #16
   12670:	mov	r4, r0
   12674:	bl	14760 <table_get_row_length@@Base>
   12678:	cmp	r0, #1
   1267c:	blt	126a0 <table_destroy@@Base+0xcc>
   12680:	mov	r5, r0
   12684:	mov	r6, #0
   12688:	mov	r0, r4
   1268c:	mov	r1, r6
   12690:	bl	146f8 <table_row_destroy@@Base>
   12694:	add	r6, r6, #1
   12698:	cmp	r5, r6
   1269c:	bne	12688 <table_destroy@@Base+0xb4>
   126a0:	ldr	r0, [r4, #16]
   126a4:	cmp	r0, #0
   126a8:	beq	126b4 <table_destroy@@Base+0xe0>
   126ac:	pop	{r4, r5, r6, sl, fp, lr}
   126b0:	b	11fa0 <free@plt>
   126b4:	pop	{r4, r5, r6, sl, fp, pc}
   126b8:	push	{r4, r5, r6, sl, fp, lr}
   126bc:	add	fp, sp, #16
   126c0:	mov	r4, r0
   126c4:	bl	13a34 <table_get_column_length@@Base>
   126c8:	cmp	r0, #1
   126cc:	blt	126f0 <table_destroy@@Base+0x11c>
   126d0:	mov	r5, r0
   126d4:	mov	r6, #0
   126d8:	mov	r0, r4
   126dc:	mov	r1, r6
   126e0:	bl	13a14 <table_column_destroy@@Base>
   126e4:	add	r6, r6, #1
   126e8:	cmp	r5, r6
   126ec:	bne	126d8 <table_destroy@@Base+0x104>
   126f0:	ldr	r0, [r4]
   126f4:	cmp	r0, #0
   126f8:	beq	12704 <table_destroy@@Base+0x130>
   126fc:	pop	{r4, r5, r6, sl, fp, lr}
   12700:	b	11fa0 <free@plt>
   12704:	pop	{r4, r5, r6, sl, fp, pc}
   12708:	push	{r4, sl, fp, lr}
   1270c:	add	fp, sp, #8
   12710:	mov	r4, r0
   12714:	ldr	r0, [r0, #36]	; 0x24
   12718:	cmp	r0, #0
   1271c:	beq	12724 <table_destroy@@Base+0x150>
   12720:	bl	11fa0 <free@plt>
   12724:	ldr	r0, [r4, #40]	; 0x28
   12728:	cmp	r0, #0
   1272c:	beq	12734 <table_destroy@@Base+0x160>
   12730:	bl	11fa0 <free@plt>
   12734:	ldr	r0, [r4, #44]	; 0x2c
   12738:	cmp	r0, #0
   1273c:	popeq	{r4, sl, fp, pc}
   12740:	pop	{r4, sl, fp, lr}
   12744:	b	11fa0 <free@plt>

00012748 <table_dupe@@Base>:
   12748:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1274c:	add	fp, sp, #28
   12750:	sub	sp, sp, #12
   12754:	mov	r4, r0
   12758:	bl	14760 <table_get_row_length@@Base>
   1275c:	mov	r8, r0
   12760:	mov	r0, r4
   12764:	bl	13a34 <table_get_column_length@@Base>
   12768:	mov	r6, r0
   1276c:	bl	12574 <table_new@@Base>
   12770:	mov	sl, r0
   12774:	cmp	r6, #1
   12778:	blt	127b8 <table_dupe@@Base+0x70>
   1277c:	mov	r5, #0
   12780:	mov	r0, r4
   12784:	mov	r1, r5
   12788:	bl	13a94 <table_get_column_name@@Base>
   1278c:	mov	r7, r0
   12790:	mov	r0, r4
   12794:	mov	r1, r5
   12798:	bl	13aa8 <table_get_column_data_type@@Base>
   1279c:	mov	r2, r0
   127a0:	mov	r0, sl
   127a4:	mov	r1, r7
   127a8:	bl	13abc <table_add_column@@Base>
   127ac:	add	r5, r5, #1
   127b0:	cmp	r6, r5
   127b4:	bne	12780 <table_dupe@@Base+0x38>
   127b8:	cmp	r8, #1
   127bc:	blt	12c2c <table_dupe@@Base+0x4e4>
   127c0:	mov	r5, #0
   127c4:	add	r9, sp, #8
   127c8:	b	127d8 <table_dupe@@Base+0x90>
   127cc:	add	r5, r5, #1
   127d0:	cmp	r5, r8
   127d4:	beq	12c2c <table_dupe@@Base+0x4e4>
   127d8:	mov	r0, sl
   127dc:	bl	14768 <table_add_row@@Base>
   127e0:	cmp	r6, #1
   127e4:	blt	127cc <table_dupe@@Base+0x84>
   127e8:	mov	r7, #0
   127ec:	b	12824 <table_dupe@@Base+0xdc>
   127f0:	mov	r0, r4
   127f4:	mov	r1, r5
   127f8:	mov	r2, r7
   127fc:	bl	146c0 <table_get_ptr@@Base>
   12800:	str	r0, [sp, #8]
   12804:	mov	r0, sl
   12808:	mov	r1, r5
   1280c:	mov	r2, r7
   12810:	mov	r3, r9
   12814:	bl	14f60 <table_set_ptr@@Base>
   12818:	add	r7, r7, #1
   1281c:	cmp	r6, r7
   12820:	beq	127cc <table_dupe@@Base+0x84>
   12824:	mov	r0, r4
   12828:	mov	r1, r7
   1282c:	bl	13aa8 <table_get_column_data_type@@Base>
   12830:	cmp	r0, #23
   12834:	bhi	12818 <table_dupe@@Base+0xd0>
   12838:	add	r1, pc, #0
   1283c:	ldr	pc, [r1, r0, lsl #2]
   12840:	andeq	r2, r1, r0, lsr #17
   12844:	andeq	r2, r1, r8, asr #17
   12848:	strdeq	r2, [r1], -r0
   1284c:	andeq	r2, r1, r8, lsl r9
   12850:	andeq	r2, r1, r0, asr #18
   12854:	andeq	r2, r1, r8, ror #18
   12858:	muleq	r1, r0, r9
   1285c:			; <UNDEFINED> instruction: 0x000129b8
   12860:	andeq	r2, r1, r0, ror #19
   12864:	andeq	r2, r1, r8, lsl #20
   12868:	andeq	r2, r1, r0, lsr sl
   1286c:	andeq	r2, r1, r8, asr sl
   12870:	andeq	r2, r1, r0, lsl #21
   12874:	andeq	r2, r1, r8, lsr #21
   12878:	ldrdeq	r2, [r1], -r0
   1287c:	strdeq	r2, [r1], -r8
   12880:	andeq	r2, r1, r0, lsr #22
   12884:	andeq	r2, r1, r4, asr #22
   12888:	andeq	r2, r1, r8, ror #22
   1288c:	andeq	r2, r1, ip, lsl #23
   12890:			; <UNDEFINED> instruction: 0x00012bb4
   12894:	ldrdeq	r2, [r1], -ip
   12898:	andeq	r2, r1, r4, lsl #24
   1289c:	strdeq	r2, [r1], -r0
   128a0:	mov	r0, r4
   128a4:	mov	r1, r5
   128a8:	mov	r2, r7
   128ac:	bl	14518 <table_get_int@@Base>
   128b0:	mov	r3, r0
   128b4:	mov	r0, sl
   128b8:	mov	r1, r5
   128bc:	mov	r2, r7
   128c0:	bl	14bc8 <table_set_int@@Base>
   128c4:	b	12818 <table_dupe@@Base+0xd0>
   128c8:	mov	r0, r4
   128cc:	mov	r1, r5
   128d0:	mov	r2, r7
   128d4:	bl	1452c <table_get_uint@@Base>
   128d8:	mov	r3, r0
   128dc:	mov	r0, sl
   128e0:	mov	r1, r5
   128e4:	mov	r2, r7
   128e8:	bl	14bf0 <table_set_uint@@Base>
   128ec:	b	12818 <table_dupe@@Base+0xd0>
   128f0:	mov	r0, r4
   128f4:	mov	r1, r5
   128f8:	mov	r2, r7
   128fc:	bl	14540 <table_get_int8@@Base>
   12900:	mov	r3, r0
   12904:	mov	r0, sl
   12908:	mov	r1, r5
   1290c:	mov	r2, r7
   12910:	bl	14c18 <table_set_int8@@Base>
   12914:	b	12818 <table_dupe@@Base+0xd0>
   12918:	mov	r0, r4
   1291c:	mov	r1, r5
   12920:	mov	r2, r7
   12924:	bl	14554 <table_get_uint8@@Base>
   12928:	mov	r3, r0
   1292c:	mov	r0, sl
   12930:	mov	r1, r5
   12934:	mov	r2, r7
   12938:	bl	14c40 <table_set_uint8@@Base>
   1293c:	b	12818 <table_dupe@@Base+0xd0>
   12940:	mov	r0, r4
   12944:	mov	r1, r5
   12948:	mov	r2, r7
   1294c:	bl	14568 <table_get_int16@@Base>
   12950:	mov	r3, r0
   12954:	mov	r0, sl
   12958:	mov	r1, r5
   1295c:	mov	r2, r7
   12960:	bl	14c68 <table_set_int16@@Base>
   12964:	b	12818 <table_dupe@@Base+0xd0>
   12968:	mov	r0, r4
   1296c:	mov	r1, r5
   12970:	mov	r2, r7
   12974:	bl	1457c <table_get_uint16@@Base>
   12978:	mov	r3, r0
   1297c:	mov	r0, sl
   12980:	mov	r1, r5
   12984:	mov	r2, r7
   12988:	bl	14c90 <table_set_uint16@@Base>
   1298c:	b	12818 <table_dupe@@Base+0xd0>
   12990:	mov	r0, r4
   12994:	mov	r1, r5
   12998:	mov	r2, r7
   1299c:	bl	14590 <table_get_int32@@Base>
   129a0:	mov	r3, r0
   129a4:	mov	r0, sl
   129a8:	mov	r1, r5
   129ac:	mov	r2, r7
   129b0:	bl	14cb8 <table_set_int32@@Base>
   129b4:	b	12818 <table_dupe@@Base+0xd0>
   129b8:	mov	r0, r4
   129bc:	mov	r1, r5
   129c0:	mov	r2, r7
   129c4:	bl	145a4 <table_get_uint32@@Base>
   129c8:	mov	r3, r0
   129cc:	mov	r0, sl
   129d0:	mov	r1, r5
   129d4:	mov	r2, r7
   129d8:	bl	14ce0 <table_set_uint32@@Base>
   129dc:	b	12818 <table_dupe@@Base+0xd0>
   129e0:	mov	r0, r4
   129e4:	mov	r1, r5
   129e8:	mov	r2, r7
   129ec:	bl	145b8 <table_get_int64@@Base>
   129f0:	stm	sp, {r0, r1}
   129f4:	mov	r0, sl
   129f8:	mov	r1, r5
   129fc:	mov	r2, r7
   12a00:	bl	14d08 <table_set_int64@@Base>
   12a04:	b	12818 <table_dupe@@Base+0xd0>
   12a08:	mov	r0, r4
   12a0c:	mov	r1, r5
   12a10:	mov	r2, r7
   12a14:	bl	145cc <table_get_uint64@@Base>
   12a18:	stm	sp, {r0, r1}
   12a1c:	mov	r0, sl
   12a20:	mov	r1, r5
   12a24:	mov	r2, r7
   12a28:	bl	14d3c <table_set_uint64@@Base>
   12a2c:	b	12818 <table_dupe@@Base+0xd0>
   12a30:	mov	r0, r4
   12a34:	mov	r1, r5
   12a38:	mov	r2, r7
   12a3c:	bl	145e0 <table_get_short@@Base>
   12a40:	mov	r3, r0
   12a44:	mov	r0, sl
   12a48:	mov	r1, r5
   12a4c:	mov	r2, r7
   12a50:	bl	14d70 <table_set_short@@Base>
   12a54:	b	12818 <table_dupe@@Base+0xd0>
   12a58:	mov	r0, r4
   12a5c:	mov	r1, r5
   12a60:	mov	r2, r7
   12a64:	bl	145f4 <table_get_ushort@@Base>
   12a68:	mov	r3, r0
   12a6c:	mov	r0, sl
   12a70:	mov	r1, r5
   12a74:	mov	r2, r7
   12a78:	bl	14d98 <table_set_ushort@@Base>
   12a7c:	b	12818 <table_dupe@@Base+0xd0>
   12a80:	mov	r0, r4
   12a84:	mov	r1, r5
   12a88:	mov	r2, r7
   12a8c:	bl	14608 <table_get_long@@Base>
   12a90:	mov	r3, r0
   12a94:	mov	r0, sl
   12a98:	mov	r1, r5
   12a9c:	mov	r2, r7
   12aa0:	bl	14dc0 <table_set_long@@Base>
   12aa4:	b	12818 <table_dupe@@Base+0xd0>
   12aa8:	mov	r0, r4
   12aac:	mov	r1, r5
   12ab0:	mov	r2, r7
   12ab4:	bl	1461c <table_get_ulong@@Base>
   12ab8:	mov	r3, r0
   12abc:	mov	r0, sl
   12ac0:	mov	r1, r5
   12ac4:	mov	r2, r7
   12ac8:	bl	14de8 <table_set_ulong@@Base>
   12acc:	b	12818 <table_dupe@@Base+0xd0>
   12ad0:	mov	r0, r4
   12ad4:	mov	r1, r5
   12ad8:	mov	r2, r7
   12adc:	bl	14630 <table_get_llong@@Base>
   12ae0:	stm	sp, {r0, r1}
   12ae4:	mov	r0, sl
   12ae8:	mov	r1, r5
   12aec:	mov	r2, r7
   12af0:	bl	14e10 <table_set_llong@@Base>
   12af4:	b	12818 <table_dupe@@Base+0xd0>
   12af8:	mov	r0, r4
   12afc:	mov	r1, r5
   12b00:	mov	r2, r7
   12b04:	bl	14644 <table_get_ullong@@Base>
   12b08:	stm	sp, {r0, r1}
   12b0c:	mov	r0, sl
   12b10:	mov	r1, r5
   12b14:	mov	r2, r7
   12b18:	bl	14e44 <table_set_ullong@@Base>
   12b1c:	b	12818 <table_dupe@@Base+0xd0>
   12b20:	mov	r0, r4
   12b24:	mov	r1, r5
   12b28:	mov	r2, r7
   12b2c:	bl	14658 <table_get_float@@Base>
   12b30:	mov	r0, sl
   12b34:	mov	r1, r5
   12b38:	mov	r2, r7
   12b3c:	bl	14e78 <table_set_float@@Base>
   12b40:	b	12818 <table_dupe@@Base+0xd0>
   12b44:	mov	r0, r4
   12b48:	mov	r1, r5
   12b4c:	mov	r2, r7
   12b50:	bl	1466c <table_get_double@@Base>
   12b54:	mov	r0, sl
   12b58:	mov	r1, r5
   12b5c:	mov	r2, r7
   12b60:	bl	14ea0 <table_set_double@@Base>
   12b64:	b	12818 <table_dupe@@Base+0xd0>
   12b68:	mov	r0, r4
   12b6c:	mov	r1, r5
   12b70:	mov	r2, r7
   12b74:	bl	14680 <table_get_ldouble@@Base>
   12b78:	mov	r0, sl
   12b7c:	mov	r1, r5
   12b80:	mov	r2, r7
   12b84:	bl	14ec8 <table_set_ldouble@@Base>
   12b88:	b	12818 <table_dupe@@Base+0xd0>
   12b8c:	mov	r0, r4
   12b90:	mov	r1, r5
   12b94:	mov	r2, r7
   12b98:	bl	14694 <table_get_char@@Base>
   12b9c:	mov	r3, r0
   12ba0:	mov	r0, sl
   12ba4:	mov	r1, r5
   12ba8:	mov	r2, r7
   12bac:	bl	14f10 <table_set_char@@Base>
   12bb0:	b	12818 <table_dupe@@Base+0xd0>
   12bb4:	mov	r0, r4
   12bb8:	mov	r1, r5
   12bbc:	mov	r2, r7
   12bc0:	bl	146a8 <table_get_uchar@@Base>
   12bc4:	mov	r3, r0
   12bc8:	mov	r0, sl
   12bcc:	mov	r1, r5
   12bd0:	mov	r2, r7
   12bd4:	bl	14f38 <table_set_uchar@@Base>
   12bd8:	b	12818 <table_dupe@@Base+0xd0>
   12bdc:	mov	r0, r4
   12be0:	mov	r1, r5
   12be4:	mov	r2, r7
   12be8:	bl	146bc <table_get_string@@Base>
   12bec:	mov	r3, r0
   12bf0:	mov	r0, sl
   12bf4:	mov	r1, r5
   12bf8:	mov	r2, r7
   12bfc:	bl	14ef0 <table_set_string@@Base>
   12c00:	b	12818 <table_dupe@@Base+0xd0>
   12c04:	mov	r0, r4
   12c08:	mov	r1, r5
   12c0c:	mov	r2, r7
   12c10:	bl	14504 <table_get_bool@@Base>
   12c14:	mov	r3, r0
   12c18:	mov	r0, sl
   12c1c:	mov	r1, r5
   12c20:	mov	r2, r7
   12c24:	bl	14ba0 <table_set_bool@@Base>
   12c28:	b	12818 <table_dupe@@Base+0xd0>
   12c2c:	mov	r0, sl
   12c30:	sub	sp, fp, #28
   12c34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00012c38 <table_get_major_version@@Base>:
   12c38:	mov	r0, #0
   12c3c:	bx	lr

00012c40 <table_get_minor_version@@Base>:
   12c40:	mov	r0, #0
   12c44:	bx	lr

00012c48 <table_get_patch_version@@Base>:
   12c48:	mov	r0, #0
   12c4c:	bx	lr

00012c50 <table_get_version@@Base>:
   12c50:	movw	r0, #21736	; 0x54e8
   12c54:	movt	r0, #1
   12c58:	bx	lr

00012c5c <table_get_callback_length@@Base>:
   12c5c:	ldr	r0, [r0, #32]
   12c60:	bx	lr

00012c64 <table_register_callback@@Base>:
   12c64:	push	{r4, r5, r6, r7, fp, lr}
   12c68:	add	fp, sp, #16
   12c6c:	sub	sp, sp, #8
   12c70:	mov	r5, r3
   12c74:	mov	r6, r2
   12c78:	mov	r7, r1
   12c7c:	mov	r4, r0
   12c80:	bl	12cf4 <table_register_callback@@Base+0x90>
   12c84:	cmp	r0, #1
   12c88:	blt	12ca4 <table_register_callback@@Base+0x40>
   12c8c:	ldr	r1, [r4, #44]	; 0x2c
   12c90:	ldr	r2, [r1, r0, lsl #2]
   12c94:	orr	r2, r2, r5
   12c98:	str	r2, [r1, r0, lsl #2]
   12c9c:	sub	sp, fp, #16
   12ca0:	pop	{r4, r5, r6, r7, fp, pc}
   12ca4:	ldr	r0, [r4, #32]
   12ca8:	ldr	r1, [r4, #48]	; 0x30
   12cac:	udiv	r2, r0, r1
   12cb0:	mls	r0, r2, r1, r0
   12cb4:	cmp	r0, #0
   12cb8:	moveq	r0, r4
   12cbc:	bleq	12d50 <table_register_callback@@Base+0xec>
   12cc0:	mov	r0, r4
   12cc4:	bl	12c5c <table_get_callback_length@@Base>
   12cc8:	mov	r1, r0
   12ccc:	str	r5, [sp]
   12cd0:	mov	r0, r4
   12cd4:	mov	r2, r7
   12cd8:	mov	r3, r6
   12cdc:	bl	12da8 <table_register_callback@@Base+0x144>
   12ce0:	ldr	r0, [r4, #32]
   12ce4:	add	r0, r0, #1
   12ce8:	str	r0, [r4, #32]
   12cec:	sub	sp, fp, #16
   12cf0:	pop	{r4, r5, r6, r7, fp, pc}
   12cf4:	push	{r4, sl, fp, lr}
   12cf8:	add	fp, sp, #8
   12cfc:	mov	ip, r0
   12d00:	ldr	r3, [r0, #32]
   12d04:	mvn	r0, #0
   12d08:	cmp	r3, #1
   12d0c:	blt	12d4c <table_register_callback@@Base+0xe8>
   12d10:	ldr	lr, [ip, #36]	; 0x24
   12d14:	mov	r3, #0
   12d18:	b	12d2c <table_register_callback@@Base+0xc8>
   12d1c:	add	r3, r3, #1
   12d20:	ldr	r4, [ip, #32]
   12d24:	cmp	r3, r4
   12d28:	bge	12d4c <table_register_callback@@Base+0xe8>
   12d2c:	ldr	r4, [lr, r3, lsl #2]
   12d30:	cmp	r4, r1
   12d34:	bne	12d1c <table_register_callback@@Base+0xb8>
   12d38:	ldr	r4, [ip, #40]	; 0x28
   12d3c:	ldr	r4, [r4, r3, lsl #2]
   12d40:	cmp	r4, r2
   12d44:	bne	12d1c <table_register_callback@@Base+0xb8>
   12d48:	mov	r0, r3
   12d4c:	pop	{r4, sl, fp, pc}
   12d50:	push	{r4, sl, fp, lr}
   12d54:	add	fp, sp, #8
   12d58:	mov	r4, r0
   12d5c:	ldr	r0, [r0, #36]	; 0x24
   12d60:	ldr	r1, [r4, #48]	; 0x30
   12d64:	ldr	r2, [r4, #52]	; 0x34
   12d68:	add	r1, r2, r1
   12d6c:	str	r1, [r4, #52]	; 0x34
   12d70:	lsl	r1, r1, #2
   12d74:	bl	11fb8 <realloc@plt>
   12d78:	str	r0, [r4, #36]	; 0x24
   12d7c:	ldr	r0, [r4, #40]	; 0x28
   12d80:	ldr	r1, [r4, #52]	; 0x34
   12d84:	lsl	r1, r1, #2
   12d88:	bl	11fb8 <realloc@plt>
   12d8c:	str	r0, [r4, #40]	; 0x28
   12d90:	ldr	r0, [r4, #44]	; 0x2c
   12d94:	ldr	r1, [r4, #52]	; 0x34
   12d98:	lsl	r1, r1, #2
   12d9c:	bl	11fb8 <realloc@plt>
   12da0:	str	r0, [r4, #44]	; 0x2c
   12da4:	pop	{r4, sl, fp, pc}
   12da8:	ldr	ip, [r0, #36]	; 0x24
   12dac:	str	r2, [ip, r1, lsl #2]
   12db0:	ldr	r2, [r0, #40]	; 0x28
   12db4:	str	r3, [r2, r1, lsl #2]
   12db8:	ldr	r0, [r0, #44]	; 0x2c
   12dbc:	ldr	r2, [sp]
   12dc0:	str	r2, [r0, r1, lsl #2]
   12dc4:	bx	lr

00012dc8 <table_unregister_callback@@Base>:
   12dc8:	push	{r4, sl, fp, lr}
   12dcc:	add	fp, sp, #8
   12dd0:	mov	r4, r0
   12dd4:	bl	12cf4 <table_register_callback@@Base+0x90>
   12dd8:	cmn	r0, #1
   12ddc:	popeq	{r4, sl, fp, pc}
   12de0:	ldr	r1, [r4, #32]
   12de4:	sub	r2, r1, #1
   12de8:	cmp	r0, r2
   12dec:	bge	12e34 <table_unregister_callback@@Base+0x6c>
   12df0:	mov	r1, #4
   12df4:	add	r1, r1, r0, lsl #2
   12df8:	ldr	r2, [r4, #36]	; 0x24
   12dfc:	ldr	r3, [r2, r1]!
   12e00:	str	r3, [r2, #-4]
   12e04:	ldr	r2, [r4, #40]	; 0x28
   12e08:	ldr	r3, [r2, r1]!
   12e0c:	str	r3, [r2, #-4]
   12e10:	ldr	r2, [r4, #44]	; 0x2c
   12e14:	ldr	r3, [r2, r1]!
   12e18:	str	r3, [r2, #-4]
   12e1c:	add	r1, r1, #4
   12e20:	add	r0, r0, #1
   12e24:	ldr	r2, [r4, #32]
   12e28:	sub	r2, r2, #1
   12e2c:	cmp	r0, r2
   12e30:	blt	12df8 <table_unregister_callback@@Base+0x30>
   12e34:	str	r2, [r4, #32]
   12e38:	ldr	r0, [r4, #48]	; 0x30
   12e3c:	udiv	r1, r2, r0
   12e40:	mls	r0, r1, r0, r2
   12e44:	cmp	r0, #0
   12e48:	beq	12e50 <table_unregister_callback@@Base+0x88>
   12e4c:	pop	{r4, sl, fp, pc}
   12e50:	mov	r0, r4
   12e54:	pop	{r4, sl, fp, lr}
   12e58:	b	12e5c <table_unregister_callback@@Base+0x94>
   12e5c:	push	{r4, sl, fp, lr}
   12e60:	add	fp, sp, #8
   12e64:	mov	r4, r0
   12e68:	ldr	r0, [r0, #36]	; 0x24
   12e6c:	ldr	r1, [r4, #48]	; 0x30
   12e70:	ldr	r2, [r4, #52]	; 0x34
   12e74:	subs	r1, r2, r1
   12e78:	str	r1, [r4, #52]	; 0x34
   12e7c:	beq	12eb8 <table_unregister_callback@@Base+0xf0>
   12e80:	lsl	r1, r1, #2
   12e84:	bl	11fb8 <realloc@plt>
   12e88:	str	r0, [r4, #36]	; 0x24
   12e8c:	ldr	r0, [r4, #40]	; 0x28
   12e90:	ldr	r1, [r4, #52]	; 0x34
   12e94:	lsl	r1, r1, #2
   12e98:	bl	11fb8 <realloc@plt>
   12e9c:	str	r0, [r4, #40]	; 0x28
   12ea0:	ldr	r0, [r4, #44]	; 0x2c
   12ea4:	ldr	r1, [r4, #52]	; 0x34
   12ea8:	lsl	r1, r1, #2
   12eac:	bl	11fb8 <realloc@plt>
   12eb0:	str	r0, [r4, #44]	; 0x2c
   12eb4:	pop	{r4, sl, fp, pc}
   12eb8:	bl	11fa0 <free@plt>
   12ebc:	ldr	r0, [r4, #40]	; 0x28
   12ec0:	bl	11fa0 <free@plt>
   12ec4:	ldr	r0, [r4, #44]	; 0x2c
   12ec8:	bl	11fa0 <free@plt>
   12ecc:	mov	r0, #0
   12ed0:	str	r0, [r4, #36]	; 0x24
   12ed4:	str	r0, [r4, #40]	; 0x28
   12ed8:	str	r0, [r4, #44]	; 0x2c
   12edc:	pop	{r4, sl, fp, pc}

00012ee0 <table_notify@@Base>:
   12ee0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12ee4:	add	fp, sp, #24
   12ee8:	sub	sp, sp, #8
   12eec:	mov	r7, r0
   12ef0:	ldr	r0, [r0, #32]
   12ef4:	cmp	r0, #1
   12ef8:	blt	12f5c <table_notify@@Base+0x7c>
   12efc:	mov	r4, r3
   12f00:	mov	r8, r2
   12f04:	mov	r9, r1
   12f08:	mov	r5, #0
   12f0c:	b	12f20 <table_notify@@Base+0x40>
   12f10:	ldr	r0, [r7, #32]
   12f14:	add	r5, r5, #1
   12f18:	cmp	r5, r0
   12f1c:	bge	12f5c <table_notify@@Base+0x7c>
   12f20:	ldr	r0, [r7, #44]	; 0x2c
   12f24:	ldr	r0, [r0, r5, lsl #2]
   12f28:	tst	r0, r4
   12f2c:	beq	12f10 <table_notify@@Base+0x30>
   12f30:	ldr	r0, [r7, #36]	; 0x24
   12f34:	ldr	r1, [r7, #40]	; 0x28
   12f38:	ldr	r6, [r0, r5, lsl #2]
   12f3c:	ldr	r0, [r1, r5, lsl #2]
   12f40:	str	r0, [sp]
   12f44:	mov	r0, r7
   12f48:	mov	r1, r9
   12f4c:	mov	r2, r8
   12f50:	mov	r3, r4
   12f54:	blx	r6
   12f58:	b	12f10 <table_notify@@Base+0x30>
   12f5c:	sub	sp, fp, #24
   12f60:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00012f64 <table_cell_init@@Base>:
   12f64:	push	{fp, lr}
   12f68:	mov	fp, sp
   12f6c:	bl	12f7c <table_get_cell_ptr@@Base>
   12f70:	mov	r1, #0
   12f74:	str	r1, [r0]
   12f78:	pop	{fp, pc}

00012f7c <table_get_cell_ptr@@Base>:
   12f7c:	push	{r4, sl, fp, lr}
   12f80:	add	fp, sp, #8
   12f84:	mov	r4, r2
   12f88:	bl	146ec <table_get_row_ptr@@Base>
   12f8c:	ldr	r0, [r0]
   12f90:	add	r0, r0, r4, lsl #2
   12f94:	pop	{r4, sl, fp, pc}

00012f98 <table_cell_destroy@@Base>:
   12f98:	push	{r4, r5, r6, sl, fp, lr}
   12f9c:	add	fp, sp, #16
   12fa0:	mov	r4, r2
   12fa4:	mov	r5, r1
   12fa8:	mov	r6, r0
   12fac:	mov	r1, r2
   12fb0:	bl	13aa8 <table_get_column_data_type@@Base>
   12fb4:	cmp	r0, #23
   12fb8:	popeq	{r4, r5, r6, sl, fp, pc}
   12fbc:	mov	r0, r6
   12fc0:	mov	r1, r5
   12fc4:	mov	r2, r4
   12fc8:	bl	12f7c <table_get_cell_ptr@@Base>
   12fcc:	ldr	r0, [r0]
   12fd0:	cmp	r0, #0
   12fd4:	beq	12fe0 <table_cell_destroy@@Base+0x48>
   12fd8:	pop	{r4, r5, r6, sl, fp, lr}
   12fdc:	b	11fa0 <free@plt>
   12fe0:	pop	{r4, r5, r6, sl, fp, pc}

00012fe4 <table_cell_to_buffer@@Base>:
   12fe4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12fe8:	add	fp, sp, #24
   12fec:	sub	sp, sp, #8
   12ff0:	mov	r5, r3
   12ff4:	mov	r6, r2
   12ff8:	mov	r7, r1
   12ffc:	mov	r4, r0
   13000:	mov	r1, r2
   13004:	bl	13aa8 <table_get_column_data_type@@Base>
   13008:	cmp	r0, #23
   1300c:	bhi	132fc <table_cell_to_buffer@@Base+0x318>
   13010:	ldr	r8, [fp, #8]
   13014:	add	r1, pc, #0
   13018:	ldr	pc, [r1, r0, lsl #2]
   1301c:	andeq	r3, r1, ip, ror r0
   13020:	muleq	r1, r0, r0
   13024:	andeq	r3, r1, r4, lsr #1
   13028:	strheq	r3, [r1], -r8
   1302c:	andeq	r3, r1, ip, asr #1
   13030:	andeq	r3, r1, r0, ror #1
   13034:	strdeq	r3, [r1], -r4
   13038:	andeq	r3, r1, r8, lsl #2
   1303c:	andeq	r3, r1, r8, lsr #2
   13040:	andeq	r3, r1, ip, lsr r1
   13044:	andeq	r3, r1, r0, asr r1
   13048:	andeq	r3, r1, r0, ror r1
   1304c:	muleq	r1, r0, r1
   13050:			; <UNDEFINED> instruction: 0x000131b0
   13054:	ldrdeq	r3, [r1], -r0
   13058:	strdeq	r3, [r1], -r0
   1305c:	andeq	r3, r1, r0, lsl r2
   13060:	andeq	r3, r1, r4, lsr r2
   13064:	andeq	r3, r1, r4, asr r2
   13068:	andeq	r3, r1, r0, lsl #5
   1306c:	muleq	r1, r4, r2
   13070:			; <UNDEFINED> instruction: 0x000132b4
   13074:	ldrdeq	r3, [r1], -r4
   13078:	andeq	r3, r1, r8, lsl #6
   1307c:	mov	r0, r4
   13080:	mov	r1, r7
   13084:	mov	r2, r6
   13088:	bl	14518 <table_get_int@@Base>
   1308c:	b	132e4 <table_cell_to_buffer@@Base+0x300>
   13090:	mov	r0, r4
   13094:	mov	r1, r7
   13098:	mov	r2, r6
   1309c:	bl	1452c <table_get_uint@@Base>
   130a0:	b	13118 <table_cell_to_buffer@@Base+0x134>
   130a4:	mov	r0, r4
   130a8:	mov	r1, r7
   130ac:	mov	r2, r6
   130b0:	bl	14540 <table_get_int8@@Base>
   130b4:	b	132e4 <table_cell_to_buffer@@Base+0x300>
   130b8:	mov	r0, r4
   130bc:	mov	r1, r7
   130c0:	mov	r2, r6
   130c4:	bl	14554 <table_get_uint8@@Base>
   130c8:	b	13118 <table_cell_to_buffer@@Base+0x134>
   130cc:	mov	r0, r4
   130d0:	mov	r1, r7
   130d4:	mov	r2, r6
   130d8:	bl	14568 <table_get_int16@@Base>
   130dc:	b	132e4 <table_cell_to_buffer@@Base+0x300>
   130e0:	mov	r0, r4
   130e4:	mov	r1, r7
   130e8:	mov	r2, r6
   130ec:	bl	1457c <table_get_uint16@@Base>
   130f0:	b	13118 <table_cell_to_buffer@@Base+0x134>
   130f4:	mov	r0, r4
   130f8:	mov	r1, r7
   130fc:	mov	r2, r6
   13100:	bl	14590 <table_get_int32@@Base>
   13104:	b	132e4 <table_cell_to_buffer@@Base+0x300>
   13108:	mov	r0, r4
   1310c:	mov	r1, r7
   13110:	mov	r2, r6
   13114:	bl	145a4 <table_get_uint32@@Base>
   13118:	mov	r3, r0
   1311c:	movw	r2, #21744	; 0x54f0
   13120:	movt	r2, #1
   13124:	b	132f0 <table_cell_to_buffer@@Base+0x30c>
   13128:	mov	r0, r4
   1312c:	mov	r1, r7
   13130:	mov	r2, r6
   13134:	bl	145b8 <table_get_int64@@Base>
   13138:	b	131e0 <table_cell_to_buffer@@Base+0x1fc>
   1313c:	mov	r0, r4
   13140:	mov	r1, r7
   13144:	mov	r2, r6
   13148:	bl	145cc <table_get_uint64@@Base>
   1314c:	b	13200 <table_cell_to_buffer@@Base+0x21c>
   13150:	mov	r0, r4
   13154:	mov	r1, r7
   13158:	mov	r2, r6
   1315c:	bl	145e0 <table_get_short@@Base>
   13160:	mov	r3, r0
   13164:	movw	r2, #21757	; 0x54fd
   13168:	movt	r2, #1
   1316c:	b	132f0 <table_cell_to_buffer@@Base+0x30c>
   13170:	mov	r0, r4
   13174:	mov	r1, r7
   13178:	mov	r2, r6
   1317c:	bl	145f4 <table_get_ushort@@Base>
   13180:	mov	r3, r0
   13184:	movw	r2, #21761	; 0x5501
   13188:	movt	r2, #1
   1318c:	b	132f0 <table_cell_to_buffer@@Base+0x30c>
   13190:	mov	r0, r4
   13194:	mov	r1, r7
   13198:	mov	r2, r6
   1319c:	bl	14608 <table_get_long@@Base>
   131a0:	mov	r3, r0
   131a4:	movw	r2, #21765	; 0x5505
   131a8:	movt	r2, #1
   131ac:	b	132f0 <table_cell_to_buffer@@Base+0x30c>
   131b0:	mov	r0, r4
   131b4:	mov	r1, r7
   131b8:	mov	r2, r6
   131bc:	bl	1461c <table_get_ulong@@Base>
   131c0:	mov	r3, r0
   131c4:	movw	r2, #21769	; 0x5509
   131c8:	movt	r2, #1
   131cc:	b	132f0 <table_cell_to_buffer@@Base+0x30c>
   131d0:	mov	r0, r4
   131d4:	mov	r1, r7
   131d8:	mov	r2, r6
   131dc:	bl	14630 <table_get_llong@@Base>
   131e0:	stm	sp, {r0, r1}
   131e4:	movw	r2, #21747	; 0x54f3
   131e8:	movt	r2, #1
   131ec:	b	13270 <table_cell_to_buffer@@Base+0x28c>
   131f0:	mov	r0, r4
   131f4:	mov	r1, r7
   131f8:	mov	r2, r6
   131fc:	bl	14644 <table_get_ullong@@Base>
   13200:	stm	sp, {r0, r1}
   13204:	movw	r2, #21752	; 0x54f8
   13208:	movt	r2, #1
   1320c:	b	13270 <table_cell_to_buffer@@Base+0x28c>
   13210:	mov	r0, r4
   13214:	mov	r1, r7
   13218:	mov	r2, r6
   1321c:	bl	14658 <table_get_float@@Base>
   13220:	vcvt.f64.f32	d16, s0
   13224:	vstr	d16, [sp]
   13228:	movw	r2, #21776	; 0x5510
   1322c:	movt	r2, #1
   13230:	b	13270 <table_cell_to_buffer@@Base+0x28c>
   13234:	mov	r0, r4
   13238:	mov	r1, r7
   1323c:	mov	r2, r6
   13240:	bl	1466c <table_get_double@@Base>
   13244:	vstr	d0, [sp]
   13248:	movw	r2, #21779	; 0x5513
   1324c:	movt	r2, #1
   13250:	b	13270 <table_cell_to_buffer@@Base+0x28c>
   13254:	mov	r0, r4
   13258:	mov	r1, r7
   1325c:	mov	r2, r6
   13260:	bl	14680 <table_get_ldouble@@Base>
   13264:	vstr	d0, [sp]
   13268:	movw	r2, #21783	; 0x5517
   1326c:	movt	r2, #1
   13270:	mov	r0, r5
   13274:	mov	r1, r8
   13278:	bl	12018 <snprintf@plt>
   1327c:	b	132fc <table_cell_to_buffer@@Base+0x318>
   13280:	mov	r0, r4
   13284:	mov	r1, r7
   13288:	mov	r2, r6
   1328c:	bl	14694 <table_get_char@@Base>
   13290:	b	132a4 <table_cell_to_buffer@@Base+0x2c0>
   13294:	mov	r0, r4
   13298:	mov	r1, r7
   1329c:	mov	r2, r6
   132a0:	bl	146a8 <table_get_uchar@@Base>
   132a4:	mov	r3, r0
   132a8:	movw	r2, #21787	; 0x551b
   132ac:	movt	r2, #1
   132b0:	b	132f0 <table_cell_to_buffer@@Base+0x30c>
   132b4:	mov	r0, r4
   132b8:	mov	r1, r7
   132bc:	mov	r2, r6
   132c0:	bl	146bc <table_get_string@@Base>
   132c4:	mov	r3, r0
   132c8:	movw	r2, #21773	; 0x550d
   132cc:	movt	r2, #1
   132d0:	b	132f0 <table_cell_to_buffer@@Base+0x30c>
   132d4:	mov	r0, r4
   132d8:	mov	r1, r7
   132dc:	mov	r2, r6
   132e0:	bl	14504 <table_get_bool@@Base>
   132e4:	mov	r3, r0
   132e8:	movw	r2, #21584	; 0x5450
   132ec:	movt	r2, #1
   132f0:	mov	r0, r5
   132f4:	mov	r1, r8
   132f8:	bl	12018 <snprintf@plt>
   132fc:	mov	r0, #0
   13300:	sub	sp, fp, #24
   13304:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13308:	mov	r0, r4
   1330c:	mov	r1, r7
   13310:	mov	r2, r6
   13314:	bl	146c0 <table_get_ptr@@Base>
   13318:	mov	r3, r0
   1331c:	movw	r2, #21790	; 0x551e
   13320:	movt	r2, #1
   13324:	b	132f0 <table_cell_to_buffer@@Base+0x30c>

00013328 <table_cell_from_buffer@@Base>:
   13328:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1332c:	add	fp, sp, #24
   13330:	sub	sp, sp, #264	; 0x108
   13334:	mov	r7, r3
   13338:	mov	r4, r2
   1333c:	mov	r5, r1
   13340:	mov	r6, r0
   13344:	mov	r1, r2
   13348:	bl	13aa8 <table_get_column_data_type@@Base>
   1334c:	cmp	r0, #23
   13350:	bhi	13980 <table_cell_from_buffer@@Base+0x658>
   13354:	add	r1, pc, #0
   13358:	ldr	pc, [r1, r0, lsl #2]
   1335c:			; <UNDEFINED> instruction: 0x000133bc
   13360:	strdeq	r3, [r1], -r8
   13364:	andeq	r3, r1, r4, lsr r4
   13368:	andeq	r3, r1, r0, ror r4
   1336c:	andeq	r3, r1, ip, lsr #9
   13370:	andeq	r3, r1, r8, ror #9
   13374:	andeq	r3, r1, r4, lsr #10
   13378:	andeq	r3, r1, r0, ror #10
   1337c:	muleq	r1, ip, r5
   13380:	andeq	r3, r1, r0, ror #11
   13384:	andeq	r3, r1, r4, lsr #12
   13388:	andeq	r3, r1, r0, ror #12
   1338c:	muleq	r1, ip, r6
   13390:	ldrdeq	r3, [r1], -r8
   13394:	andeq	r3, r1, r4, lsl r7
   13398:	andeq	r3, r1, r8, asr r7
   1339c:	muleq	r1, ip, r7
   133a0:	ldrdeq	r3, [r1], -r8
   133a4:	andeq	r3, r1, r4, lsl r8
   133a8:	andeq	r3, r1, r0, asr r8
   133ac:	andeq	r3, r1, ip, lsl #17
   133b0:	andeq	r3, r1, r8, asr #17
   133b4:	andeq	r3, r1, r4, lsl #18
   133b8:	andeq	r3, r1, r8, asr #18
   133bc:	movw	r1, #21584	; 0x5450
   133c0:	movt	r1, #1
   133c4:	add	r2, sp, #8
   133c8:	mov	r0, r7
   133cc:	bl	12024 <__isoc99_sscanf@plt>
   133d0:	mov	r1, r0
   133d4:	mvn	r0, #0
   133d8:	cmp	r1, #1
   133dc:	bne	13984 <table_cell_from_buffer@@Base+0x65c>
   133e0:	ldr	r3, [sp, #8]
   133e4:	mov	r0, r6
   133e8:	mov	r1, r5
   133ec:	mov	r2, r4
   133f0:	bl	14bc8 <table_set_int@@Base>
   133f4:	b	13980 <table_cell_from_buffer@@Base+0x658>
   133f8:	movw	r1, #21744	; 0x54f0
   133fc:	movt	r1, #1
   13400:	add	r2, sp, #8
   13404:	mov	r0, r7
   13408:	bl	12024 <__isoc99_sscanf@plt>
   1340c:	mov	r1, r0
   13410:	mvn	r0, #0
   13414:	cmp	r1, #1
   13418:	bne	13984 <table_cell_from_buffer@@Base+0x65c>
   1341c:	ldr	r3, [sp, #8]
   13420:	mov	r0, r6
   13424:	mov	r1, r5
   13428:	mov	r2, r4
   1342c:	bl	14bf0 <table_set_uint@@Base>
   13430:	b	13980 <table_cell_from_buffer@@Base+0x658>
   13434:	movw	r1, #21793	; 0x5521
   13438:	movt	r1, #1
   1343c:	add	r2, sp, #8
   13440:	mov	r0, r7
   13444:	bl	12024 <__isoc99_sscanf@plt>
   13448:	mov	r1, r0
   1344c:	mvn	r0, #0
   13450:	cmp	r1, #1
   13454:	bne	13984 <table_cell_from_buffer@@Base+0x65c>
   13458:	ldrsb	r3, [sp, #8]
   1345c:	mov	r0, r6
   13460:	mov	r1, r5
   13464:	mov	r2, r4
   13468:	bl	14c18 <table_set_int8@@Base>
   1346c:	b	13980 <table_cell_from_buffer@@Base+0x658>
   13470:	movw	r1, #21798	; 0x5526
   13474:	movt	r1, #1
   13478:	add	r2, sp, #8
   1347c:	mov	r0, r7
   13480:	bl	12024 <__isoc99_sscanf@plt>
   13484:	mov	r1, r0
   13488:	mvn	r0, #0
   1348c:	cmp	r1, #1
   13490:	bne	13984 <table_cell_from_buffer@@Base+0x65c>
   13494:	ldrb	r3, [sp, #8]
   13498:	mov	r0, r6
   1349c:	mov	r1, r5
   134a0:	mov	r2, r4
   134a4:	bl	14c40 <table_set_uint8@@Base>
   134a8:	b	13980 <table_cell_from_buffer@@Base+0x658>
   134ac:	movw	r1, #21757	; 0x54fd
   134b0:	movt	r1, #1
   134b4:	add	r2, sp, #8
   134b8:	mov	r0, r7
   134bc:	bl	12024 <__isoc99_sscanf@plt>
   134c0:	mov	r1, r0
   134c4:	mvn	r0, #0
   134c8:	cmp	r1, #1
   134cc:	bne	13984 <table_cell_from_buffer@@Base+0x65c>
   134d0:	ldrsh	r3, [sp, #8]
   134d4:	mov	r0, r6
   134d8:	mov	r1, r5
   134dc:	mov	r2, r4
   134e0:	bl	14c68 <table_set_int16@@Base>
   134e4:	b	13980 <table_cell_from_buffer@@Base+0x658>
   134e8:	movw	r1, #21761	; 0x5501
   134ec:	movt	r1, #1
   134f0:	add	r2, sp, #8
   134f4:	mov	r0, r7
   134f8:	bl	12024 <__isoc99_sscanf@plt>
   134fc:	mov	r1, r0
   13500:	mvn	r0, #0
   13504:	cmp	r1, #1
   13508:	bne	13984 <table_cell_from_buffer@@Base+0x65c>
   1350c:	ldrh	r3, [sp, #8]
   13510:	mov	r0, r6
   13514:	mov	r1, r5
   13518:	mov	r2, r4
   1351c:	bl	14c90 <table_set_uint16@@Base>
   13520:	b	13980 <table_cell_from_buffer@@Base+0x658>
   13524:	movw	r1, #21584	; 0x5450
   13528:	movt	r1, #1
   1352c:	add	r2, sp, #8
   13530:	mov	r0, r7
   13534:	bl	12024 <__isoc99_sscanf@plt>
   13538:	mov	r1, r0
   1353c:	mvn	r0, #0
   13540:	cmp	r1, #1
   13544:	bne	13984 <table_cell_from_buffer@@Base+0x65c>
   13548:	ldr	r3, [sp, #8]
   1354c:	mov	r0, r6
   13550:	mov	r1, r5
   13554:	mov	r2, r4
   13558:	bl	14cb8 <table_set_int32@@Base>
   1355c:	b	13980 <table_cell_from_buffer@@Base+0x658>
   13560:	movw	r1, #21744	; 0x54f0
   13564:	movt	r1, #1
   13568:	add	r2, sp, #8
   1356c:	mov	r0, r7
   13570:	bl	12024 <__isoc99_sscanf@plt>
   13574:	mov	r1, r0
   13578:	mvn	r0, #0
   1357c:	cmp	r1, #1
   13580:	bne	13984 <table_cell_from_buffer@@Base+0x65c>
   13584:	ldr	r3, [sp, #8]
   13588:	mov	r0, r6
   1358c:	mov	r1, r5
   13590:	mov	r2, r4
   13594:	bl	14ce0 <table_set_uint32@@Base>
   13598:	b	13980 <table_cell_from_buffer@@Base+0x658>
   1359c:	movw	r1, #21747	; 0x54f3
   135a0:	movt	r1, #1
   135a4:	add	r2, sp, #8
   135a8:	mov	r0, r7
   135ac:	bl	12024 <__isoc99_sscanf@plt>
   135b0:	mov	r1, r0
   135b4:	mvn	r0, #0
   135b8:	cmp	r1, #1
   135bc:	bne	13984 <table_cell_from_buffer@@Base+0x65c>
   135c0:	ldr	r0, [sp, #8]
   135c4:	ldr	r1, [sp, #12]
   135c8:	stm	sp, {r0, r1}
   135cc:	mov	r0, r6
   135d0:	mov	r1, r5
   135d4:	mov	r2, r4
   135d8:	bl	14d08 <table_set_int64@@Base>
   135dc:	b	13980 <table_cell_from_buffer@@Base+0x658>
   135e0:	movw	r1, #21752	; 0x54f8
   135e4:	movt	r1, #1
   135e8:	add	r2, sp, #8
   135ec:	mov	r0, r7
   135f0:	bl	12024 <__isoc99_sscanf@plt>
   135f4:	mov	r1, r0
   135f8:	mvn	r0, #0
   135fc:	cmp	r1, #1
   13600:	bne	13984 <table_cell_from_buffer@@Base+0x65c>
   13604:	ldr	r0, [sp, #8]
   13608:	ldr	r1, [sp, #12]
   1360c:	stm	sp, {r0, r1}
   13610:	mov	r0, r6
   13614:	mov	r1, r5
   13618:	mov	r2, r4
   1361c:	bl	14d3c <table_set_uint64@@Base>
   13620:	b	13980 <table_cell_from_buffer@@Base+0x658>
   13624:	movw	r1, #21757	; 0x54fd
   13628:	movt	r1, #1
   1362c:	add	r2, sp, #8
   13630:	mov	r0, r7
   13634:	bl	12024 <__isoc99_sscanf@plt>
   13638:	mov	r1, r0
   1363c:	mvn	r0, #0
   13640:	cmp	r1, #1
   13644:	bne	13984 <table_cell_from_buffer@@Base+0x65c>
   13648:	ldrsh	r3, [sp, #8]
   1364c:	mov	r0, r6
   13650:	mov	r1, r5
   13654:	mov	r2, r4
   13658:	bl	14d70 <table_set_short@@Base>
   1365c:	b	13980 <table_cell_from_buffer@@Base+0x658>
   13660:	movw	r1, #21761	; 0x5501
   13664:	movt	r1, #1
   13668:	add	r2, sp, #8
   1366c:	mov	r0, r7
   13670:	bl	12024 <__isoc99_sscanf@plt>
   13674:	mov	r1, r0
   13678:	mvn	r0, #0
   1367c:	cmp	r1, #1
   13680:	bne	13984 <table_cell_from_buffer@@Base+0x65c>
   13684:	ldrh	r3, [sp, #8]
   13688:	mov	r0, r6
   1368c:	mov	r1, r5
   13690:	mov	r2, r4
   13694:	bl	14d98 <table_set_ushort@@Base>
   13698:	b	13980 <table_cell_from_buffer@@Base+0x658>
   1369c:	movw	r1, #21765	; 0x5505
   136a0:	movt	r1, #1
   136a4:	add	r2, sp, #8
   136a8:	mov	r0, r7
   136ac:	bl	12024 <__isoc99_sscanf@plt>
   136b0:	mov	r1, r0
   136b4:	mvn	r0, #0
   136b8:	cmp	r1, #1
   136bc:	bne	13984 <table_cell_from_buffer@@Base+0x65c>
   136c0:	ldr	r3, [sp, #8]
   136c4:	mov	r0, r6
   136c8:	mov	r1, r5
   136cc:	mov	r2, r4
   136d0:	bl	14dc0 <table_set_long@@Base>
   136d4:	b	13980 <table_cell_from_buffer@@Base+0x658>
   136d8:	movw	r1, #21769	; 0x5509
   136dc:	movt	r1, #1
   136e0:	add	r2, sp, #8
   136e4:	mov	r0, r7
   136e8:	bl	12024 <__isoc99_sscanf@plt>
   136ec:	mov	r1, r0
   136f0:	mvn	r0, #0
   136f4:	cmp	r1, #1
   136f8:	bne	13984 <table_cell_from_buffer@@Base+0x65c>
   136fc:	ldr	r3, [sp, #8]
   13700:	mov	r0, r6
   13704:	mov	r1, r5
   13708:	mov	r2, r4
   1370c:	bl	14de8 <table_set_ulong@@Base>
   13710:	b	13980 <table_cell_from_buffer@@Base+0x658>
   13714:	movw	r1, #21747	; 0x54f3
   13718:	movt	r1, #1
   1371c:	add	r2, sp, #8
   13720:	mov	r0, r7
   13724:	bl	12024 <__isoc99_sscanf@plt>
   13728:	mov	r1, r0
   1372c:	mvn	r0, #0
   13730:	cmp	r1, #1
   13734:	bne	13984 <table_cell_from_buffer@@Base+0x65c>
   13738:	ldr	r0, [sp, #8]
   1373c:	ldr	r1, [sp, #12]
   13740:	stm	sp, {r0, r1}
   13744:	mov	r0, r6
   13748:	mov	r1, r5
   1374c:	mov	r2, r4
   13750:	bl	14e10 <table_set_llong@@Base>
   13754:	b	13980 <table_cell_from_buffer@@Base+0x658>
   13758:	movw	r1, #21752	; 0x54f8
   1375c:	movt	r1, #1
   13760:	add	r2, sp, #8
   13764:	mov	r0, r7
   13768:	bl	12024 <__isoc99_sscanf@plt>
   1376c:	mov	r1, r0
   13770:	mvn	r0, #0
   13774:	cmp	r1, #1
   13778:	bne	13984 <table_cell_from_buffer@@Base+0x65c>
   1377c:	ldr	r0, [sp, #8]
   13780:	ldr	r1, [sp, #12]
   13784:	stm	sp, {r0, r1}
   13788:	mov	r0, r6
   1378c:	mov	r1, r5
   13790:	mov	r2, r4
   13794:	bl	14e44 <table_set_ullong@@Base>
   13798:	b	13980 <table_cell_from_buffer@@Base+0x658>
   1379c:	movw	r1, #21776	; 0x5510
   137a0:	movt	r1, #1
   137a4:	add	r2, sp, #8
   137a8:	mov	r0, r7
   137ac:	bl	12024 <__isoc99_sscanf@plt>
   137b0:	mov	r1, r0
   137b4:	mvn	r0, #0
   137b8:	cmp	r1, #1
   137bc:	bne	13984 <table_cell_from_buffer@@Base+0x65c>
   137c0:	vldr	s0, [sp, #8]
   137c4:	mov	r0, r6
   137c8:	mov	r1, r5
   137cc:	mov	r2, r4
   137d0:	bl	14e78 <table_set_float@@Base>
   137d4:	b	13980 <table_cell_from_buffer@@Base+0x658>
   137d8:	movw	r1, #21779	; 0x5513
   137dc:	movt	r1, #1
   137e0:	add	r2, sp, #8
   137e4:	mov	r0, r7
   137e8:	bl	12024 <__isoc99_sscanf@plt>
   137ec:	mov	r1, r0
   137f0:	mvn	r0, #0
   137f4:	cmp	r1, #1
   137f8:	bne	13984 <table_cell_from_buffer@@Base+0x65c>
   137fc:	vldr	d0, [sp, #8]
   13800:	mov	r0, r6
   13804:	mov	r1, r5
   13808:	mov	r2, r4
   1380c:	bl	14ea0 <table_set_double@@Base>
   13810:	b	13980 <table_cell_from_buffer@@Base+0x658>
   13814:	movw	r1, #21783	; 0x5517
   13818:	movt	r1, #1
   1381c:	add	r2, sp, #8
   13820:	mov	r0, r7
   13824:	bl	12024 <__isoc99_sscanf@plt>
   13828:	mov	r1, r0
   1382c:	mvn	r0, #0
   13830:	cmp	r1, #1
   13834:	bne	13984 <table_cell_from_buffer@@Base+0x65c>
   13838:	vldr	d0, [sp, #8]
   1383c:	mov	r0, r6
   13840:	mov	r1, r5
   13844:	mov	r2, r4
   13848:	bl	14ec8 <table_set_ldouble@@Base>
   1384c:	b	13980 <table_cell_from_buffer@@Base+0x658>
   13850:	movw	r1, #21787	; 0x551b
   13854:	movt	r1, #1
   13858:	add	r2, sp, #8
   1385c:	mov	r0, r7
   13860:	bl	12024 <__isoc99_sscanf@plt>
   13864:	mov	r1, r0
   13868:	mvn	r0, #0
   1386c:	cmp	r1, #1
   13870:	bne	13984 <table_cell_from_buffer@@Base+0x65c>
   13874:	ldrb	r3, [sp, #8]
   13878:	mov	r0, r6
   1387c:	mov	r1, r5
   13880:	mov	r2, r4
   13884:	bl	14f10 <table_set_char@@Base>
   13888:	b	13980 <table_cell_from_buffer@@Base+0x658>
   1388c:	movw	r1, #21787	; 0x551b
   13890:	movt	r1, #1
   13894:	add	r2, sp, #8
   13898:	mov	r0, r7
   1389c:	bl	12024 <__isoc99_sscanf@plt>
   138a0:	mov	r1, r0
   138a4:	mvn	r0, #0
   138a8:	cmp	r1, #1
   138ac:	bne	13984 <table_cell_from_buffer@@Base+0x65c>
   138b0:	ldrb	r3, [sp, #8]
   138b4:	mov	r0, r6
   138b8:	mov	r1, r5
   138bc:	mov	r2, r4
   138c0:	bl	14f38 <table_set_uchar@@Base>
   138c4:	b	13980 <table_cell_from_buffer@@Base+0x658>
   138c8:	movw	r1, #21773	; 0x550d
   138cc:	movt	r1, #1
   138d0:	add	r2, sp, #8
   138d4:	mov	r0, r7
   138d8:	bl	12024 <__isoc99_sscanf@plt>
   138dc:	mov	r1, r0
   138e0:	mvn	r0, #0
   138e4:	cmp	r1, #1
   138e8:	bne	13984 <table_cell_from_buffer@@Base+0x65c>
   138ec:	add	r3, sp, #8
   138f0:	mov	r0, r6
   138f4:	mov	r1, r5
   138f8:	mov	r2, r4
   138fc:	bl	14ef0 <table_set_string@@Base>
   13900:	b	13980 <table_cell_from_buffer@@Base+0x658>
   13904:	movw	r1, #21584	; 0x5450
   13908:	movt	r1, #1
   1390c:	add	r2, sp, #8
   13910:	mov	r0, r7
   13914:	bl	12024 <__isoc99_sscanf@plt>
   13918:	mov	r1, r0
   1391c:	mvn	r0, #0
   13920:	cmp	r1, #1
   13924:	bne	13984 <table_cell_from_buffer@@Base+0x65c>
   13928:	ldr	r3, [sp, #8]
   1392c:	cmp	r3, #0
   13930:	movwne	r3, #1
   13934:	mov	r0, r6
   13938:	mov	r1, r5
   1393c:	mov	r2, r4
   13940:	bl	14ba0 <table_set_bool@@Base>
   13944:	b	13980 <table_cell_from_buffer@@Base+0x658>
   13948:	movw	r1, #21790	; 0x551e
   1394c:	movt	r1, #1
   13950:	add	r2, sp, #8
   13954:	mov	r0, r7
   13958:	bl	12024 <__isoc99_sscanf@plt>
   1395c:	mov	r1, r0
   13960:	mvn	r0, #0
   13964:	cmp	r1, #1
   13968:	bne	13984 <table_cell_from_buffer@@Base+0x65c>
   1396c:	ldr	r3, [sp, #8]
   13970:	mov	r0, r6
   13974:	mov	r1, r5
   13978:	mov	r2, r4
   1397c:	bl	14f60 <table_set_ptr@@Base>
   13980:	mov	r0, #0
   13984:	sub	sp, fp, #24
   13988:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001398c <table_cell_nullify@@Base>:
   1398c:	push	{r4, sl, fp, lr}
   13990:	add	fp, sp, #8
   13994:	bl	12f7c <table_get_cell_ptr@@Base>
   13998:	mov	r4, r0
   1399c:	ldr	r0, [r0]
   139a0:	cmp	r0, #0
   139a4:	beq	139b4 <table_cell_nullify@@Base+0x28>
   139a8:	bl	11fa0 <free@plt>
   139ac:	mov	r0, #0
   139b0:	str	r0, [r4]
   139b4:	mov	r0, #0
   139b8:	pop	{r4, sl, fp, pc}

000139bc <table_column_init@@Base>:
   139bc:	push	{r4, r5, r6, r7, fp, lr}
   139c0:	add	fp, sp, #16
   139c4:	mov	r4, r3
   139c8:	mov	r5, r2
   139cc:	bl	13a04 <table_get_col_ptr@@Base>
   139d0:	mov	r6, r0
   139d4:	mov	r0, r5
   139d8:	bl	12000 <strlen@plt>
   139dc:	add	r0, r0, #1
   139e0:	bl	11fdc <malloc@plt>
   139e4:	str	r0, [r6]
   139e8:	ldr	r7, [fp, #8]
   139ec:	cmp	r0, #0
   139f0:	beq	139fc <table_column_init@@Base+0x40>
   139f4:	mov	r1, r5
   139f8:	bl	11fc4 <strcpy@plt>
   139fc:	stmib	r6, {r4, r7}
   13a00:	pop	{r4, r5, r6, r7, fp, pc}

00013a04 <table_get_col_ptr@@Base>:
   13a04:	ldr	r0, [r0]
   13a08:	add	r1, r1, r1, lsl #1
   13a0c:	add	r0, r0, r1, lsl #2
   13a10:	bx	lr

00013a14 <table_column_destroy@@Base>:
   13a14:	push	{fp, lr}
   13a18:	mov	fp, sp
   13a1c:	bl	13a04 <table_get_col_ptr@@Base>
   13a20:	ldr	r0, [r0]
   13a24:	cmp	r0, #0
   13a28:	popeq	{fp, pc}
   13a2c:	pop	{fp, lr}
   13a30:	b	11fa0 <free@plt>

00013a34 <table_get_column_length@@Base>:
   13a34:	ldr	r0, [r0, #4]
   13a38:	bx	lr

00013a3c <table_get_column@@Base>:
   13a3c:	push	{r4, r5, r6, r7, fp, lr}
   13a40:	add	fp, sp, #16
   13a44:	mov	r6, r1
   13a48:	mov	r7, r0
   13a4c:	bl	13a34 <table_get_column_length@@Base>
   13a50:	mov	r4, r0
   13a54:	mov	r5, #0
   13a58:	cmp	r0, #1
   13a5c:	blt	13a84 <table_get_column@@Base+0x48>
   13a60:	mov	r0, r7
   13a64:	mov	r1, r5
   13a68:	bl	13a94 <table_get_column_name@@Base>
   13a6c:	mov	r1, r6
   13a70:	bl	11f88 <strcmp@plt>
   13a74:	cmp	r0, #0
   13a78:	addne	r5, r5, #1
   13a7c:	cmpne	r4, r5
   13a80:	bne	13a60 <table_get_column@@Base+0x24>
   13a84:	cmp	r5, r4
   13a88:	mvneq	r5, #0
   13a8c:	mov	r0, r5
   13a90:	pop	{r4, r5, r6, r7, fp, pc}

00013a94 <table_get_column_name@@Base>:
   13a94:	push	{fp, lr}
   13a98:	mov	fp, sp
   13a9c:	bl	13a04 <table_get_col_ptr@@Base>
   13aa0:	ldr	r0, [r0]
   13aa4:	pop	{fp, pc}

00013aa8 <table_get_column_data_type@@Base>:
   13aa8:	push	{fp, lr}
   13aac:	mov	fp, sp
   13ab0:	bl	13a04 <table_get_col_ptr@@Base>
   13ab4:	ldr	r0, [r0, #4]
   13ab8:	pop	{fp, pc}

00013abc <table_add_column@@Base>:
   13abc:	push	{r4, r5, r6, sl, fp, lr}
   13ac0:	add	fp, sp, #16
   13ac4:	mov	r5, r2
   13ac8:	mov	r6, r1
   13acc:	mov	r4, r0
   13ad0:	bl	13a34 <table_get_column_length@@Base>
   13ad4:	ldr	r1, [r4, #8]
   13ad8:	udiv	r2, r0, r1
   13adc:	mls	r0, r2, r1, r0
   13ae0:	cmp	r0, #0
   13ae4:	moveq	r0, r4
   13ae8:	bleq	13b28 <table_add_column@@Base+0x6c>
   13aec:	mov	r0, r4
   13af0:	mov	r1, r6
   13af4:	mov	r2, r5
   13af8:	bl	13ba4 <table_add_column@@Base+0xe8>
   13afc:	mov	r0, r4
   13b00:	bl	13a34 <table_get_column_length@@Base>
   13b04:	mov	r2, r0
   13b08:	mov	r0, r4
   13b0c:	mvn	r1, #0
   13b10:	mov	r3, #8
   13b14:	bl	12ee0 <table_notify@@Base>
   13b18:	ldr	r0, [r4, #4]
   13b1c:	add	r1, r0, #1
   13b20:	str	r1, [r4, #4]
   13b24:	pop	{r4, r5, r6, sl, fp, pc}
   13b28:	push	{r4, r5, r6, r7, fp, lr}
   13b2c:	add	fp, sp, #16
   13b30:	mov	r4, r0
   13b34:	ldr	r0, [r0]
   13b38:	ldr	r1, [r4, #8]
   13b3c:	ldr	r2, [r4, #12]
   13b40:	add	r1, r2, r1
   13b44:	str	r1, [r4, #12]
   13b48:	add	r1, r1, r1, lsl #1
   13b4c:	lsl	r1, r1, #2
   13b50:	bl	11fb8 <realloc@plt>
   13b54:	str	r0, [r4]
   13b58:	mov	r0, r4
   13b5c:	bl	14760 <table_get_row_length@@Base>
   13b60:	cmp	r0, #1
   13b64:	blt	13ba0 <table_add_column@@Base+0xe4>
   13b68:	mov	r5, r0
   13b6c:	mov	r6, #0
   13b70:	mov	r0, r4
   13b74:	mov	r1, r6
   13b78:	bl	146ec <table_get_row_ptr@@Base>
   13b7c:	mov	r7, r0
   13b80:	ldr	r0, [r0]
   13b84:	ldr	r1, [r4, #12]
   13b88:	lsl	r1, r1, #2
   13b8c:	bl	11fb8 <realloc@plt>
   13b90:	str	r0, [r7]
   13b94:	add	r6, r6, #1
   13b98:	cmp	r5, r6
   13b9c:	bne	13b70 <table_add_column@@Base+0xb4>
   13ba0:	pop	{r4, r5, r6, r7, fp, pc}
   13ba4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13ba8:	add	fp, sp, #24
   13bac:	sub	sp, sp, #8
   13bb0:	mov	r7, r2
   13bb4:	mov	r8, r1
   13bb8:	mov	r4, r0
   13bbc:	bl	14760 <table_get_row_length@@Base>
   13bc0:	mov	r5, r0
   13bc4:	mov	r0, r4
   13bc8:	bl	13a34 <table_get_column_length@@Base>
   13bcc:	mov	r6, r0
   13bd0:	mov	r0, r7
   13bd4:	bl	144d4 <table_get_default_compare_function_for_data_type@@Base>
   13bd8:	str	r0, [sp]
   13bdc:	mov	r0, r4
   13be0:	mov	r1, r6
   13be4:	mov	r2, r8
   13be8:	mov	r3, r7
   13bec:	bl	139bc <table_column_init@@Base>
   13bf0:	cmp	r5, #1
   13bf4:	blt	13c18 <table_add_column@@Base+0x15c>
   13bf8:	mov	r7, #0
   13bfc:	mov	r0, r4
   13c00:	mov	r1, r7
   13c04:	mov	r2, r6
   13c08:	bl	12f64 <table_cell_init@@Base>
   13c0c:	add	r7, r7, #1
   13c10:	cmp	r5, r7
   13c14:	bne	13bfc <table_add_column@@Base+0x140>
   13c18:	sub	sp, fp, #24
   13c1c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00013c20 <table_remove_column@@Base>:
   13c20:	push	{r4, r5, fp, lr}
   13c24:	add	fp, sp, #8
   13c28:	mov	r4, r1
   13c2c:	mov	r5, r0
   13c30:	bl	13c7c <table_remove_column@@Base+0x5c>
   13c34:	ldr	r0, [r5, #4]
   13c38:	sub	r0, r0, #1
   13c3c:	str	r0, [r5, #4]
   13c40:	mov	r0, r5
   13c44:	bl	13a34 <table_get_column_length@@Base>
   13c48:	ldr	r1, [r5, #8]
   13c4c:	udiv	r2, r0, r1
   13c50:	mls	r0, r2, r1, r0
   13c54:	cmp	r0, #0
   13c58:	moveq	r0, r5
   13c5c:	bleq	13d4c <table_remove_column@@Base+0x12c>
   13c60:	mov	r0, r5
   13c64:	mvn	r1, #0
   13c68:	mov	r2, r4
   13c6c:	mov	r3, #16
   13c70:	bl	12ee0 <table_notify@@Base>
   13c74:	mov	r0, #0
   13c78:	pop	{r4, r5, fp, pc}
   13c7c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13c80:	add	fp, sp, #24
   13c84:	mov	r4, r1
   13c88:	mov	r5, r0
   13c8c:	bl	13a14 <table_column_destroy@@Base>
   13c90:	mov	r0, r5
   13c94:	bl	13a34 <table_get_column_length@@Base>
   13c98:	sub	r6, r0, #1
   13c9c:	cmp	r6, r4
   13ca0:	ble	13cd8 <table_remove_column@@Base+0xb8>
   13ca4:	mvn	r1, r4
   13ca8:	add	r0, r1, r0
   13cac:	add	r1, r4, r4, lsl #1
   13cb0:	lsl	r1, r1, #2
   13cb4:	ldr	r2, [r5]
   13cb8:	add	r2, r2, r1
   13cbc:	vldr	d16, [r2, #12]
   13cc0:	ldr	r3, [r2, #20]
   13cc4:	str	r3, [r2, #8]
   13cc8:	vstr	d16, [r2]
   13ccc:	add	r1, r1, #12
   13cd0:	subs	r0, r0, #1
   13cd4:	bne	13cb4 <table_remove_column@@Base+0x94>
   13cd8:	mov	r0, r5
   13cdc:	bl	14760 <table_get_row_length@@Base>
   13ce0:	cmp	r0, #1
   13ce4:	blt	13d48 <table_remove_column@@Base+0x128>
   13ce8:	mov	r8, r0
   13cec:	mov	r7, #0
   13cf0:	b	13d00 <table_remove_column@@Base+0xe0>
   13cf4:	add	r7, r7, #1
   13cf8:	cmp	r7, r8
   13cfc:	beq	13d48 <table_remove_column@@Base+0x128>
   13d00:	mov	r0, r5
   13d04:	mov	r1, r7
   13d08:	mov	r2, r4
   13d0c:	bl	12f98 <table_cell_destroy@@Base>
   13d10:	mov	r0, r5
   13d14:	mov	r1, r7
   13d18:	bl	146ec <table_get_row_ptr@@Base>
   13d1c:	cmp	r6, r4
   13d20:	ble	13cf4 <table_remove_column@@Base+0xd4>
   13d24:	mov	r1, r4
   13d28:	ldr	r2, [r0]
   13d2c:	add	r3, r2, r1, lsl #2
   13d30:	ldr	r3, [r3, #4]
   13d34:	str	r3, [r2, r1, lsl #2]
   13d38:	add	r1, r1, #1
   13d3c:	cmp	r6, r1
   13d40:	bne	13d28 <table_remove_column@@Base+0x108>
   13d44:	b	13cf4 <table_remove_column@@Base+0xd4>
   13d48:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13d4c:	push	{r4, r5, r6, r7, fp, lr}
   13d50:	add	fp, sp, #16
   13d54:	mov	r4, r0
   13d58:	ldr	r0, [r0]
   13d5c:	ldr	r1, [r4, #8]
   13d60:	ldr	r2, [r4, #12]
   13d64:	sub	r1, r2, r1
   13d68:	str	r1, [r4, #12]
   13d6c:	add	r1, r1, r1, lsl #1
   13d70:	lsl	r1, r1, #2
   13d74:	bl	11fb8 <realloc@plt>
   13d78:	str	r0, [r4]
   13d7c:	mov	r0, r4
   13d80:	bl	14760 <table_get_row_length@@Base>
   13d84:	cmp	r0, #1
   13d88:	blt	13dc4 <table_remove_column@@Base+0x1a4>
   13d8c:	mov	r5, r0
   13d90:	mov	r6, #0
   13d94:	mov	r0, r4
   13d98:	mov	r1, r6
   13d9c:	bl	146ec <table_get_row_ptr@@Base>
   13da0:	mov	r7, r0
   13da4:	ldr	r0, [r0]
   13da8:	ldr	r1, [r4, #12]
   13dac:	lsl	r1, r1, #2
   13db0:	bl	11fb8 <realloc@plt>
   13db4:	str	r0, [r7]
   13db8:	add	r6, r6, #1
   13dbc:	cmp	r5, r6
   13dc0:	bne	13d94 <table_remove_column@@Base+0x174>
   13dc4:	pop	{r4, r5, r6, r7, fp, pc}

00013dc8 <table_get_column_compare_function@@Base>:
   13dc8:	push	{fp, lr}
   13dcc:	mov	fp, sp
   13dd0:	bl	13a04 <table_get_col_ptr@@Base>
   13dd4:	ldr	r0, [r0, #8]
   13dd8:	pop	{fp, pc}

00013ddc <table_set_column_compare_function@@Base>:
   13ddc:	push	{r4, sl, fp, lr}
   13de0:	add	fp, sp, #8
   13de4:	mov	r4, r2
   13de8:	bl	13a04 <table_get_col_ptr@@Base>
   13dec:	str	r4, [r0, #8]
   13df0:	pop	{r4, sl, fp, pc}

00013df4 <table_compare_bool@@Base>:
   13df4:	cmp	r0, #0
   13df8:	beq	13e2c <table_compare_bool@@Base+0x38>
   13dfc:	cmp	r1, #0
   13e00:	moveq	r1, #1
   13e04:	moveq	r0, r1
   13e08:	bxeq	lr
   13e0c:	ldrb	r2, [r1]
   13e10:	ldrb	r0, [r0]
   13e14:	mov	r1, #0
   13e18:	cmp	r0, r2
   13e1c:	mvncc	r1, #0
   13e20:	movwhi	r1, #1
   13e24:	mov	r0, r1
   13e28:	bx	lr
   13e2c:	cmp	r1, #0
   13e30:	mvnne	r1, #0
   13e34:	mov	r0, r1
   13e38:	bx	lr

00013e3c <table_compare_int@@Base>:
   13e3c:	cmp	r0, #0
   13e40:	beq	13e74 <table_compare_int@@Base+0x38>
   13e44:	cmp	r1, #0
   13e48:	moveq	r1, #1
   13e4c:	moveq	r0, r1
   13e50:	bxeq	lr
   13e54:	ldr	r2, [r1]
   13e58:	ldr	r0, [r0]
   13e5c:	mov	r1, #0
   13e60:	cmp	r0, r2
   13e64:	mvnlt	r1, #0
   13e68:	movwgt	r1, #1
   13e6c:	mov	r0, r1
   13e70:	bx	lr
   13e74:	cmp	r1, #0
   13e78:	mvnne	r1, #0
   13e7c:	mov	r0, r1
   13e80:	bx	lr

00013e84 <table_compare_uint@@Base>:
   13e84:	cmp	r0, #0
   13e88:	beq	13ebc <table_compare_uint@@Base+0x38>
   13e8c:	cmp	r1, #0
   13e90:	moveq	r1, #1
   13e94:	moveq	r0, r1
   13e98:	bxeq	lr
   13e9c:	ldr	r2, [r1]
   13ea0:	ldr	r0, [r0]
   13ea4:	mov	r1, #0
   13ea8:	cmp	r0, r2
   13eac:	mvncc	r1, #0
   13eb0:	movwhi	r1, #1
   13eb4:	mov	r0, r1
   13eb8:	bx	lr
   13ebc:	cmp	r1, #0
   13ec0:	mvnne	r1, #0
   13ec4:	mov	r0, r1
   13ec8:	bx	lr

00013ecc <table_compare_int8@@Base>:
   13ecc:	cmp	r0, #0
   13ed0:	beq	13f04 <table_compare_int8@@Base+0x38>
   13ed4:	cmp	r1, #0
   13ed8:	moveq	r1, #1
   13edc:	moveq	r0, r1
   13ee0:	bxeq	lr
   13ee4:	ldrsb	r2, [r1]
   13ee8:	ldrsb	r0, [r0]
   13eec:	mov	r1, #0
   13ef0:	cmp	r0, r2
   13ef4:	mvnlt	r1, #0
   13ef8:	movwgt	r1, #1
   13efc:	mov	r0, r1
   13f00:	bx	lr
   13f04:	cmp	r1, #0
   13f08:	mvnne	r1, #0
   13f0c:	mov	r0, r1
   13f10:	bx	lr

00013f14 <table_compare_uint8@@Base>:
   13f14:	cmp	r0, #0
   13f18:	beq	13f4c <table_compare_uint8@@Base+0x38>
   13f1c:	cmp	r1, #0
   13f20:	moveq	r1, #1
   13f24:	moveq	r0, r1
   13f28:	bxeq	lr
   13f2c:	ldrb	r2, [r1]
   13f30:	ldrb	r0, [r0]
   13f34:	mov	r1, #0
   13f38:	cmp	r0, r2
   13f3c:	mvncc	r1, #0
   13f40:	movwhi	r1, #1
   13f44:	mov	r0, r1
   13f48:	bx	lr
   13f4c:	cmp	r1, #0
   13f50:	mvnne	r1, #0
   13f54:	mov	r0, r1
   13f58:	bx	lr

00013f5c <table_compare_int16@@Base>:
   13f5c:	cmp	r0, #0
   13f60:	beq	13f94 <table_compare_int16@@Base+0x38>
   13f64:	cmp	r1, #0
   13f68:	moveq	r1, #1
   13f6c:	moveq	r0, r1
   13f70:	bxeq	lr
   13f74:	ldrsh	r2, [r1]
   13f78:	ldrsh	r0, [r0]
   13f7c:	mov	r1, #0
   13f80:	cmp	r0, r2
   13f84:	mvnlt	r1, #0
   13f88:	movwgt	r1, #1
   13f8c:	mov	r0, r1
   13f90:	bx	lr
   13f94:	cmp	r1, #0
   13f98:	mvnne	r1, #0
   13f9c:	mov	r0, r1
   13fa0:	bx	lr

00013fa4 <table_compare_uint16@@Base>:
   13fa4:	cmp	r0, #0
   13fa8:	beq	13fdc <table_compare_uint16@@Base+0x38>
   13fac:	cmp	r1, #0
   13fb0:	moveq	r1, #1
   13fb4:	moveq	r0, r1
   13fb8:	bxeq	lr
   13fbc:	ldrh	r2, [r1]
   13fc0:	ldrh	r0, [r0]
   13fc4:	mov	r1, #0
   13fc8:	cmp	r0, r2
   13fcc:	mvncc	r1, #0
   13fd0:	movwhi	r1, #1
   13fd4:	mov	r0, r1
   13fd8:	bx	lr
   13fdc:	cmp	r1, #0
   13fe0:	mvnne	r1, #0
   13fe4:	mov	r0, r1
   13fe8:	bx	lr

00013fec <table_compare_int32@@Base>:
   13fec:	cmp	r0, #0
   13ff0:	beq	14024 <table_compare_int32@@Base+0x38>
   13ff4:	cmp	r1, #0
   13ff8:	moveq	r1, #1
   13ffc:	moveq	r0, r1
   14000:	bxeq	lr
   14004:	ldr	r2, [r1]
   14008:	ldr	r0, [r0]
   1400c:	mov	r1, #0
   14010:	cmp	r0, r2
   14014:	mvnlt	r1, #0
   14018:	movwgt	r1, #1
   1401c:	mov	r0, r1
   14020:	bx	lr
   14024:	cmp	r1, #0
   14028:	mvnne	r1, #0
   1402c:	mov	r0, r1
   14030:	bx	lr

00014034 <table_compare_uint32@@Base>:
   14034:	cmp	r0, #0
   14038:	beq	1406c <table_compare_uint32@@Base+0x38>
   1403c:	cmp	r1, #0
   14040:	moveq	r1, #1
   14044:	moveq	r0, r1
   14048:	bxeq	lr
   1404c:	ldr	r2, [r1]
   14050:	ldr	r0, [r0]
   14054:	mov	r1, #0
   14058:	cmp	r0, r2
   1405c:	mvncc	r1, #0
   14060:	movwhi	r1, #1
   14064:	mov	r0, r1
   14068:	bx	lr
   1406c:	cmp	r1, #0
   14070:	mvnne	r1, #0
   14074:	mov	r0, r1
   14078:	bx	lr

0001407c <table_compare_int64@@Base>:
   1407c:	cmp	r0, #0
   14080:	beq	140d4 <table_compare_int64@@Base+0x58>
   14084:	cmp	r1, #0
   14088:	moveq	r1, #1
   1408c:	moveq	r0, r1
   14090:	bxeq	lr
   14094:	push	{r5, r7, fp, lr}
   14098:	add	fp, sp, #8
   1409c:	ldm	r1, {r2, r7}
   140a0:	ldm	r0, {r0, r5}
   140a4:	mov	r1, #0
   140a8:	subs	r3, r0, r2
   140ac:	sbcs	r3, r5, r7
   140b0:	movwlt	r1, #1
   140b4:	cmp	r1, #0
   140b8:	mvnne	r1, #0
   140bc:	subs	r0, r2, r0
   140c0:	sbcs	r0, r7, r5
   140c4:	movwlt	r1, #1
   140c8:	pop	{r5, r7, fp, lr}
   140cc:	mov	r0, r1
   140d0:	bx	lr
   140d4:	cmp	r1, #0
   140d8:	mvnne	r1, #0
   140dc:	mov	r0, r1
   140e0:	bx	lr

000140e4 <table_compare_uint64@@Base>:
   140e4:	cmp	r0, #0
   140e8:	beq	1413c <table_compare_uint64@@Base+0x58>
   140ec:	cmp	r1, #0
   140f0:	moveq	r1, #1
   140f4:	moveq	r0, r1
   140f8:	bxeq	lr
   140fc:	push	{r5, r7, fp, lr}
   14100:	add	fp, sp, #8
   14104:	ldm	r1, {r2, r7}
   14108:	ldm	r0, {r0, r5}
   1410c:	mov	r1, #0
   14110:	subs	r3, r0, r2
   14114:	sbcs	r3, r5, r7
   14118:	movwcc	r1, #1
   1411c:	cmp	r1, #0
   14120:	mvnne	r1, #0
   14124:	subs	r0, r2, r0
   14128:	sbcs	r0, r7, r5
   1412c:	movwcc	r1, #1
   14130:	pop	{r5, r7, fp, lr}
   14134:	mov	r0, r1
   14138:	bx	lr
   1413c:	cmp	r1, #0
   14140:	mvnne	r1, #0
   14144:	mov	r0, r1
   14148:	bx	lr

0001414c <table_compare_short@@Base>:
   1414c:	cmp	r0, #0
   14150:	beq	14184 <table_compare_short@@Base+0x38>
   14154:	cmp	r1, #0
   14158:	moveq	r1, #1
   1415c:	moveq	r0, r1
   14160:	bxeq	lr
   14164:	ldrsh	r2, [r1]
   14168:	ldrsh	r0, [r0]
   1416c:	mov	r1, #0
   14170:	cmp	r0, r2
   14174:	mvnlt	r1, #0
   14178:	movwgt	r1, #1
   1417c:	mov	r0, r1
   14180:	bx	lr
   14184:	cmp	r1, #0
   14188:	mvnne	r1, #0
   1418c:	mov	r0, r1
   14190:	bx	lr

00014194 <table_compare_ushort@@Base>:
   14194:	cmp	r0, #0
   14198:	beq	141cc <table_compare_ushort@@Base+0x38>
   1419c:	cmp	r1, #0
   141a0:	moveq	r1, #1
   141a4:	moveq	r0, r1
   141a8:	bxeq	lr
   141ac:	ldrh	r2, [r1]
   141b0:	ldrh	r0, [r0]
   141b4:	mov	r1, #0
   141b8:	cmp	r0, r2
   141bc:	mvncc	r1, #0
   141c0:	movwhi	r1, #1
   141c4:	mov	r0, r1
   141c8:	bx	lr
   141cc:	cmp	r1, #0
   141d0:	mvnne	r1, #0
   141d4:	mov	r0, r1
   141d8:	bx	lr

000141dc <table_compare_long@@Base>:
   141dc:	cmp	r0, #0
   141e0:	beq	14214 <table_compare_long@@Base+0x38>
   141e4:	cmp	r1, #0
   141e8:	moveq	r1, #1
   141ec:	moveq	r0, r1
   141f0:	bxeq	lr
   141f4:	ldr	r2, [r1]
   141f8:	ldr	r0, [r0]
   141fc:	mov	r1, #0
   14200:	cmp	r0, r2
   14204:	mvnlt	r1, #0
   14208:	movwgt	r1, #1
   1420c:	mov	r0, r1
   14210:	bx	lr
   14214:	cmp	r1, #0
   14218:	mvnne	r1, #0
   1421c:	mov	r0, r1
   14220:	bx	lr

00014224 <table_compare_ulong@@Base>:
   14224:	cmp	r0, #0
   14228:	beq	1425c <table_compare_ulong@@Base+0x38>
   1422c:	cmp	r1, #0
   14230:	moveq	r1, #1
   14234:	moveq	r0, r1
   14238:	bxeq	lr
   1423c:	ldr	r2, [r1]
   14240:	ldr	r0, [r0]
   14244:	mov	r1, #0
   14248:	cmp	r0, r2
   1424c:	mvncc	r1, #0
   14250:	movwhi	r1, #1
   14254:	mov	r0, r1
   14258:	bx	lr
   1425c:	cmp	r1, #0
   14260:	mvnne	r1, #0
   14264:	mov	r0, r1
   14268:	bx	lr

0001426c <table_compare_llong@@Base>:
   1426c:	cmp	r0, #0
   14270:	beq	142c4 <table_compare_llong@@Base+0x58>
   14274:	cmp	r1, #0
   14278:	moveq	r1, #1
   1427c:	moveq	r0, r1
   14280:	bxeq	lr
   14284:	push	{r5, r7, fp, lr}
   14288:	add	fp, sp, #8
   1428c:	ldm	r1, {r2, r7}
   14290:	ldm	r0, {r0, r5}
   14294:	mov	r1, #0
   14298:	subs	r3, r0, r2
   1429c:	sbcs	r3, r5, r7
   142a0:	movwlt	r1, #1
   142a4:	cmp	r1, #0
   142a8:	mvnne	r1, #0
   142ac:	subs	r0, r2, r0
   142b0:	sbcs	r0, r7, r5
   142b4:	movwlt	r1, #1
   142b8:	pop	{r5, r7, fp, lr}
   142bc:	mov	r0, r1
   142c0:	bx	lr
   142c4:	cmp	r1, #0
   142c8:	mvnne	r1, #0
   142cc:	mov	r0, r1
   142d0:	bx	lr

000142d4 <table_compare_ullong@@Base>:
   142d4:	cmp	r0, #0
   142d8:	beq	1430c <table_compare_ullong@@Base+0x38>
   142dc:	cmp	r1, #0
   142e0:	moveq	r1, #1
   142e4:	moveq	r0, r1
   142e8:	bxeq	lr
   142ec:	ldr	r2, [r1]
   142f0:	ldr	r0, [r0]
   142f4:	mov	r1, #0
   142f8:	cmp	r0, r2
   142fc:	mvncc	r1, #0
   14300:	movwhi	r1, #1
   14304:	mov	r0, r1
   14308:	bx	lr
   1430c:	cmp	r1, #0
   14310:	mvnne	r1, #0
   14314:	mov	r0, r1
   14318:	bx	lr

0001431c <table_compare_float@@Base>:
   1431c:	cmp	r0, #0
   14320:	beq	14358 <table_compare_float@@Base+0x3c>
   14324:	cmp	r1, #0
   14328:	moveq	r1, #1
   1432c:	moveq	r0, r1
   14330:	bxeq	lr
   14334:	vldr	s0, [r1]
   14338:	vldr	s2, [r0]
   1433c:	mov	r1, #0
   14340:	vcmpe.f32	s2, s0
   14344:	vmrs	APSR_nzcv, fpscr
   14348:	mvnmi	r1, #0
   1434c:	movwgt	r1, #1
   14350:	mov	r0, r1
   14354:	bx	lr
   14358:	cmp	r1, #0
   1435c:	mvnne	r1, #0
   14360:	mov	r0, r1
   14364:	bx	lr

00014368 <table_compare_double@@Base>:
   14368:	cmp	r0, #0
   1436c:	beq	143a4 <table_compare_double@@Base+0x3c>
   14370:	cmp	r1, #0
   14374:	moveq	r1, #1
   14378:	moveq	r0, r1
   1437c:	bxeq	lr
   14380:	vldr	d16, [r1]
   14384:	vldr	d17, [r0]
   14388:	mov	r1, #0
   1438c:	vcmpe.f64	d17, d16
   14390:	vmrs	APSR_nzcv, fpscr
   14394:	mvnmi	r1, #0
   14398:	movwgt	r1, #1
   1439c:	mov	r0, r1
   143a0:	bx	lr
   143a4:	cmp	r1, #0
   143a8:	mvnne	r1, #0
   143ac:	mov	r0, r1
   143b0:	bx	lr

000143b4 <table_compare_ldouble@@Base>:
   143b4:	cmp	r0, #0
   143b8:	beq	143f0 <table_compare_ldouble@@Base+0x3c>
   143bc:	cmp	r1, #0
   143c0:	moveq	r1, #1
   143c4:	moveq	r0, r1
   143c8:	bxeq	lr
   143cc:	vldr	d16, [r1]
   143d0:	vldr	d17, [r0]
   143d4:	mov	r1, #0
   143d8:	vcmpe.f64	d17, d16
   143dc:	vmrs	APSR_nzcv, fpscr
   143e0:	mvnmi	r1, #0
   143e4:	movwgt	r1, #1
   143e8:	mov	r0, r1
   143ec:	bx	lr
   143f0:	cmp	r1, #0
   143f4:	mvnne	r1, #0
   143f8:	mov	r0, r1
   143fc:	bx	lr

00014400 <table_compare_char@@Base>:
   14400:	cmp	r0, #0
   14404:	beq	14438 <table_compare_char@@Base+0x38>
   14408:	cmp	r1, #0
   1440c:	moveq	r1, #1
   14410:	moveq	r0, r1
   14414:	bxeq	lr
   14418:	ldrb	r2, [r1]
   1441c:	ldrb	r0, [r0]
   14420:	mov	r1, #0
   14424:	cmp	r0, r2
   14428:	mvncc	r1, #0
   1442c:	movwhi	r1, #1
   14430:	mov	r0, r1
   14434:	bx	lr
   14438:	cmp	r1, #0
   1443c:	mvnne	r1, #0
   14440:	mov	r0, r1
   14444:	bx	lr

00014448 <table_compare_uchar@@Base>:
   14448:	cmp	r0, #0
   1444c:	beq	14480 <table_compare_uchar@@Base+0x38>
   14450:	cmp	r1, #0
   14454:	moveq	r1, #1
   14458:	moveq	r0, r1
   1445c:	bxeq	lr
   14460:	ldrb	r2, [r1]
   14464:	ldrb	r0, [r0]
   14468:	mov	r1, #0
   1446c:	cmp	r0, r2
   14470:	mvncc	r1, #0
   14474:	movwhi	r1, #1
   14478:	mov	r0, r1
   1447c:	bx	lr
   14480:	cmp	r1, #0
   14484:	mvnne	r1, #0
   14488:	mov	r0, r1
   1448c:	bx	lr

00014490 <table_compare_string@@Base>:
   14490:	cmp	r0, #0
   14494:	beq	144ac <table_compare_string@@Base+0x1c>
   14498:	cmp	r1, #0
   1449c:	moveq	r1, #1
   144a0:	moveq	r0, r1
   144a4:	bxeq	lr
   144a8:	b	11f88 <strcmp@plt>
   144ac:	cmp	r1, #0
   144b0:	mvnne	r1, #0
   144b4:	mov	r0, r1
   144b8:	bx	lr

000144bc <table_compare_ptr@@Base>:
   144bc:	mov	r2, #0
   144c0:	cmp	r0, r1
   144c4:	mvncc	r2, #0
   144c8:	movwhi	r2, #1
   144cc:	mov	r0, r2
   144d0:	bx	lr

000144d4 <table_get_default_compare_function_for_data_type@@Base>:
   144d4:	cmp	r0, #23
   144d8:	movhi	r0, #0
   144dc:	bxhi	lr
   144e0:	movw	r1, #21804	; 0x552c
   144e4:	movt	r1, #1
   144e8:	ldr	r0, [r1, r0, lsl #2]
   144ec:	bx	lr

000144f0 <table_get@@Base>:
   144f0:	push	{fp, lr}
   144f4:	mov	fp, sp
   144f8:	bl	12f7c <table_get_cell_ptr@@Base>
   144fc:	ldr	r0, [r0]
   14500:	pop	{fp, pc}

00014504 <table_get_bool@@Base>:
   14504:	push	{fp, lr}
   14508:	mov	fp, sp
   1450c:	bl	144f0 <table_get@@Base>
   14510:	ldrb	r0, [r0]
   14514:	pop	{fp, pc}

00014518 <table_get_int@@Base>:
   14518:	push	{fp, lr}
   1451c:	mov	fp, sp
   14520:	bl	144f0 <table_get@@Base>
   14524:	ldr	r0, [r0]
   14528:	pop	{fp, pc}

0001452c <table_get_uint@@Base>:
   1452c:	push	{fp, lr}
   14530:	mov	fp, sp
   14534:	bl	144f0 <table_get@@Base>
   14538:	ldr	r0, [r0]
   1453c:	pop	{fp, pc}

00014540 <table_get_int8@@Base>:
   14540:	push	{fp, lr}
   14544:	mov	fp, sp
   14548:	bl	144f0 <table_get@@Base>
   1454c:	ldrsb	r0, [r0]
   14550:	pop	{fp, pc}

00014554 <table_get_uint8@@Base>:
   14554:	push	{fp, lr}
   14558:	mov	fp, sp
   1455c:	bl	144f0 <table_get@@Base>
   14560:	ldrb	r0, [r0]
   14564:	pop	{fp, pc}

00014568 <table_get_int16@@Base>:
   14568:	push	{fp, lr}
   1456c:	mov	fp, sp
   14570:	bl	144f0 <table_get@@Base>
   14574:	ldrsh	r0, [r0]
   14578:	pop	{fp, pc}

0001457c <table_get_uint16@@Base>:
   1457c:	push	{fp, lr}
   14580:	mov	fp, sp
   14584:	bl	144f0 <table_get@@Base>
   14588:	ldrh	r0, [r0]
   1458c:	pop	{fp, pc}

00014590 <table_get_int32@@Base>:
   14590:	push	{fp, lr}
   14594:	mov	fp, sp
   14598:	bl	144f0 <table_get@@Base>
   1459c:	ldr	r0, [r0]
   145a0:	pop	{fp, pc}

000145a4 <table_get_uint32@@Base>:
   145a4:	push	{fp, lr}
   145a8:	mov	fp, sp
   145ac:	bl	144f0 <table_get@@Base>
   145b0:	ldr	r0, [r0]
   145b4:	pop	{fp, pc}

000145b8 <table_get_int64@@Base>:
   145b8:	push	{fp, lr}
   145bc:	mov	fp, sp
   145c0:	bl	144f0 <table_get@@Base>
   145c4:	ldrd	r0, [r0]
   145c8:	pop	{fp, pc}

000145cc <table_get_uint64@@Base>:
   145cc:	push	{fp, lr}
   145d0:	mov	fp, sp
   145d4:	bl	144f0 <table_get@@Base>
   145d8:	ldrd	r0, [r0]
   145dc:	pop	{fp, pc}

000145e0 <table_get_short@@Base>:
   145e0:	push	{fp, lr}
   145e4:	mov	fp, sp
   145e8:	bl	144f0 <table_get@@Base>
   145ec:	ldrsh	r0, [r0]
   145f0:	pop	{fp, pc}

000145f4 <table_get_ushort@@Base>:
   145f4:	push	{fp, lr}
   145f8:	mov	fp, sp
   145fc:	bl	144f0 <table_get@@Base>
   14600:	ldrh	r0, [r0]
   14604:	pop	{fp, pc}

00014608 <table_get_long@@Base>:
   14608:	push	{fp, lr}
   1460c:	mov	fp, sp
   14610:	bl	144f0 <table_get@@Base>
   14614:	ldr	r0, [r0]
   14618:	pop	{fp, pc}

0001461c <table_get_ulong@@Base>:
   1461c:	push	{fp, lr}
   14620:	mov	fp, sp
   14624:	bl	144f0 <table_get@@Base>
   14628:	ldr	r0, [r0]
   1462c:	pop	{fp, pc}

00014630 <table_get_llong@@Base>:
   14630:	push	{fp, lr}
   14634:	mov	fp, sp
   14638:	bl	144f0 <table_get@@Base>
   1463c:	ldrd	r0, [r0]
   14640:	pop	{fp, pc}

00014644 <table_get_ullong@@Base>:
   14644:	push	{fp, lr}
   14648:	mov	fp, sp
   1464c:	bl	144f0 <table_get@@Base>
   14650:	ldrd	r0, [r0]
   14654:	pop	{fp, pc}

00014658 <table_get_float@@Base>:
   14658:	push	{fp, lr}
   1465c:	mov	fp, sp
   14660:	bl	144f0 <table_get@@Base>
   14664:	vldr	s0, [r0]
   14668:	pop	{fp, pc}

0001466c <table_get_double@@Base>:
   1466c:	push	{fp, lr}
   14670:	mov	fp, sp
   14674:	bl	144f0 <table_get@@Base>
   14678:	vldr	d0, [r0]
   1467c:	pop	{fp, pc}

00014680 <table_get_ldouble@@Base>:
   14680:	push	{fp, lr}
   14684:	mov	fp, sp
   14688:	bl	144f0 <table_get@@Base>
   1468c:	vldr	d0, [r0]
   14690:	pop	{fp, pc}

00014694 <table_get_char@@Base>:
   14694:	push	{fp, lr}
   14698:	mov	fp, sp
   1469c:	bl	144f0 <table_get@@Base>
   146a0:	ldrb	r0, [r0]
   146a4:	pop	{fp, pc}

000146a8 <table_get_uchar@@Base>:
   146a8:	push	{fp, lr}
   146ac:	mov	fp, sp
   146b0:	bl	144f0 <table_get@@Base>
   146b4:	ldrb	r0, [r0]
   146b8:	pop	{fp, pc}

000146bc <table_get_string@@Base>:
   146bc:	b	144f0 <table_get@@Base>

000146c0 <table_get_ptr@@Base>:
   146c0:	b	144f0 <table_get@@Base>

000146c4 <table_row_init@@Base>:
   146c4:	push	{r4, r5, fp, lr}
   146c8:	add	fp, sp, #8
   146cc:	mov	r4, r0
   146d0:	bl	146ec <table_get_row_ptr@@Base>
   146d4:	mov	r5, r0
   146d8:	ldr	r0, [r4, #12]
   146dc:	lsl	r0, r0, #2
   146e0:	bl	11fdc <malloc@plt>
   146e4:	str	r0, [r5]
   146e8:	pop	{r4, r5, fp, pc}

000146ec <table_get_row_ptr@@Base>:
   146ec:	ldr	r0, [r0, #16]
   146f0:	add	r0, r0, r1, lsl #2
   146f4:	bx	lr

000146f8 <table_row_destroy@@Base>:
   146f8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   146fc:	add	fp, sp, #24
   14700:	mov	r4, r1
   14704:	mov	r5, r0
   14708:	bl	13a34 <table_get_column_length@@Base>
   1470c:	mov	r6, r0
   14710:	mov	r0, r5
   14714:	mov	r1, r4
   14718:	bl	146ec <table_get_row_ptr@@Base>
   1471c:	mov	r8, r0
   14720:	cmp	r6, #1
   14724:	blt	14748 <table_row_destroy@@Base+0x50>
   14728:	mov	r7, #0
   1472c:	mov	r0, r5
   14730:	mov	r1, r4
   14734:	mov	r2, r7
   14738:	bl	12f98 <table_cell_destroy@@Base>
   1473c:	add	r7, r7, #1
   14740:	cmp	r6, r7
   14744:	bne	1472c <table_row_destroy@@Base+0x34>
   14748:	ldr	r0, [r8]
   1474c:	cmp	r0, #0
   14750:	beq	1475c <table_row_destroy@@Base+0x64>
   14754:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   14758:	b	11fa0 <free@plt>
   1475c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014760 <table_get_row_length@@Base>:
   14760:	ldr	r0, [r0, #20]
   14764:	bx	lr

00014768 <table_add_row@@Base>:
   14768:	push	{r4, sl, fp, lr}
   1476c:	add	fp, sp, #8
   14770:	mov	r4, r0
   14774:	bl	14760 <table_get_row_length@@Base>
   14778:	ldr	r1, [r4, #24]
   1477c:	udiv	r2, r0, r1
   14780:	mls	r0, r2, r1, r0
   14784:	cmp	r0, #0
   14788:	moveq	r0, r4
   1478c:	bleq	147c4 <table_add_row@@Base+0x5c>
   14790:	mov	r0, r4
   14794:	bl	147f4 <table_add_row@@Base+0x8c>
   14798:	mov	r0, r4
   1479c:	bl	14760 <table_get_row_length@@Base>
   147a0:	mov	r1, r0
   147a4:	mov	r0, r4
   147a8:	mvn	r2, #0
   147ac:	mov	r3, #2
   147b0:	bl	12ee0 <table_notify@@Base>
   147b4:	ldr	r0, [r4, #20]
   147b8:	add	r1, r0, #1
   147bc:	str	r1, [r4, #20]
   147c0:	pop	{r4, sl, fp, pc}
   147c4:	push	{r4, sl, fp, lr}
   147c8:	add	fp, sp, #8
   147cc:	mov	r4, r0
   147d0:	ldr	r0, [r0, #16]
   147d4:	ldr	r1, [r4, #24]
   147d8:	ldr	r2, [r4, #28]
   147dc:	add	r1, r2, r1
   147e0:	str	r1, [r4, #28]
   147e4:	lsl	r1, r1, #2
   147e8:	bl	11fb8 <realloc@plt>
   147ec:	str	r0, [r4, #16]
   147f0:	pop	{r4, sl, fp, pc}
   147f4:	push	{r4, r5, r6, r7, fp, lr}
   147f8:	add	fp, sp, #16
   147fc:	mov	r4, r0
   14800:	bl	14760 <table_get_row_length@@Base>
   14804:	mov	r5, r0
   14808:	mov	r0, r4
   1480c:	bl	13a34 <table_get_column_length@@Base>
   14810:	mov	r6, r0
   14814:	mov	r0, r4
   14818:	mov	r1, r5
   1481c:	bl	146c4 <table_row_init@@Base>
   14820:	cmp	r6, #1
   14824:	blt	14848 <table_add_row@@Base+0xe0>
   14828:	mov	r7, #0
   1482c:	mov	r0, r4
   14830:	mov	r1, r5
   14834:	mov	r2, r7
   14838:	bl	12f64 <table_cell_init@@Base>
   1483c:	add	r7, r7, #1
   14840:	cmp	r6, r7
   14844:	bne	1482c <table_add_row@@Base+0xc4>
   14848:	pop	{r4, r5, r6, r7, fp, pc}

0001484c <table_remove_row@@Base>:
   1484c:	push	{r4, r5, fp, lr}
   14850:	add	fp, sp, #8
   14854:	mov	r4, r1
   14858:	mov	r5, r0
   1485c:	bl	148a8 <table_remove_row@@Base+0x5c>
   14860:	ldr	r0, [r5, #20]
   14864:	sub	r0, r0, #1
   14868:	str	r0, [r5, #20]
   1486c:	mov	r0, r5
   14870:	bl	14760 <table_get_row_length@@Base>
   14874:	ldr	r1, [r5, #24]
   14878:	udiv	r2, r0, r1
   1487c:	mls	r0, r2, r1, r0
   14880:	cmp	r0, #0
   14884:	moveq	r0, r5
   14888:	bleq	14968 <table_remove_row@@Base+0x11c>
   1488c:	mov	r0, r5
   14890:	mov	r1, r4
   14894:	mvn	r2, #0
   14898:	mov	r3, #4
   1489c:	bl	12ee0 <table_notify@@Base>
   148a0:	mov	r0, #0
   148a4:	pop	{r4, r5, fp, pc}
   148a8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   148ac:	add	fp, sp, #24
   148b0:	mov	r4, r1
   148b4:	mov	r5, r0
   148b8:	bl	14760 <table_get_row_length@@Base>
   148bc:	mov	r8, r0
   148c0:	mov	r0, r5
   148c4:	bl	13a34 <table_get_column_length@@Base>
   148c8:	cmp	r0, #1
   148cc:	blt	14920 <table_remove_row@@Base+0xd4>
   148d0:	mov	r7, r0
   148d4:	mov	r6, #0
   148d8:	b	148e8 <table_remove_row@@Base+0x9c>
   148dc:	add	r6, r6, #1
   148e0:	cmp	r7, r6
   148e4:	beq	14920 <table_remove_row@@Base+0xd4>
   148e8:	mov	r0, r5
   148ec:	mov	r1, r6
   148f0:	bl	13aa8 <table_get_column_data_type@@Base>
   148f4:	cmp	r0, #23
   148f8:	beq	148dc <table_remove_row@@Base+0x90>
   148fc:	mov	r0, r5
   14900:	mov	r1, r4
   14904:	mov	r2, r6
   14908:	bl	12f7c <table_get_cell_ptr@@Base>
   1490c:	ldr	r0, [r0]
   14910:	cmp	r0, #0
   14914:	beq	148dc <table_remove_row@@Base+0x90>
   14918:	bl	11fa0 <free@plt>
   1491c:	b	148dc <table_remove_row@@Base+0x90>
   14920:	mov	r0, r5
   14924:	mov	r1, r4
   14928:	bl	146ec <table_get_row_ptr@@Base>
   1492c:	ldr	r0, [r0]
   14930:	cmp	r0, #0
   14934:	beq	1493c <table_remove_row@@Base+0xf0>
   14938:	bl	11fa0 <free@plt>
   1493c:	sub	r0, r8, #1
   14940:	cmp	r0, r4
   14944:	ble	14964 <table_remove_row@@Base+0x118>
   14948:	ldr	r1, [r5, #16]
   1494c:	add	r2, r1, r4, lsl #2
   14950:	ldr	r2, [r2, #4]
   14954:	str	r2, [r1, r4, lsl #2]
   14958:	add	r4, r4, #1
   1495c:	cmp	r0, r4
   14960:	bne	14948 <table_remove_row@@Base+0xfc>
   14964:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14968:	push	{r4, sl, fp, lr}
   1496c:	add	fp, sp, #8
   14970:	mov	r4, r0
   14974:	ldr	r0, [r0, #16]
   14978:	ldr	r1, [r4, #24]
   1497c:	ldr	r2, [r4, #28]
   14980:	sub	r1, r2, r1
   14984:	str	r1, [r4, #28]
   14988:	lsl	r1, r1, #2
   1498c:	bl	11fb8 <realloc@plt>
   14990:	str	r0, [r4, #16]
   14994:	pop	{r4, sl, fp, pc}

00014998 <table_set_row_ptr@@Base>:
   14998:	ldr	r2, [r2]
   1499c:	ldr	r0, [r0, #16]
   149a0:	str	r2, [r0, r1, lsl #2]
   149a4:	bx	lr

000149a8 <table_set@@Base>:
   149a8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   149ac:	add	fp, sp, #24
   149b0:	mov	r8, r3
   149b4:	mov	r4, r2
   149b8:	mov	r9, r1
   149bc:	mov	r6, r0
   149c0:	bl	12f7c <table_get_cell_ptr@@Base>
   149c4:	mov	r5, r0
   149c8:	mov	r0, r6
   149cc:	mov	r1, r4
   149d0:	bl	13a04 <table_get_col_ptr@@Base>
   149d4:	mvn	r7, #0
   149d8:	ldr	r1, [fp, #8]
   149dc:	cmp	r1, #23
   149e0:	bhi	14b98 <table_set@@Base+0x1f0>
   149e4:	add	r2, pc, #0
   149e8:	ldr	pc, [r2, r1, lsl #2]
   149ec:	andeq	r4, r1, ip, asr #20
   149f0:	andeq	r4, r1, ip, asr #20
   149f4:	andeq	r4, r1, r4, asr #21
   149f8:	andeq	r4, r1, r4, asr #21
   149fc:	strdeq	r4, [r1], -ip
   14a00:	strdeq	r4, [r1], -ip
   14a04:	andeq	r4, r1, ip, asr #20
   14a08:	andeq	r4, r1, ip, asr #20
   14a0c:	andeq	r4, r1, r4, lsl #21
   14a10:	andeq	r4, r1, r4, lsl #21
   14a14:	strdeq	r4, [r1], -ip
   14a18:	strdeq	r4, [r1], -ip
   14a1c:	andeq	r4, r1, ip, asr #20
   14a20:	andeq	r4, r1, ip, asr #20
   14a24:	andeq	r4, r1, r4, lsl #21
   14a28:	andeq	r4, r1, r4, lsl #21
   14a2c:	andeq	r4, r1, ip, asr #20
   14a30:	andeq	r4, r1, r4, lsl #21
   14a34:	andeq	r4, r1, r4, lsl #21
   14a38:	andeq	r4, r1, r4, asr #21
   14a3c:	andeq	r4, r1, r4, asr #21
   14a40:	andeq	r4, r1, r4, lsr fp
   14a44:	andeq	r4, r1, r4, asr #21
   14a48:	andeq	r4, r1, r0, ror fp
   14a4c:	ldr	r0, [r0, #4]
   14a50:	cmp	r0, r1
   14a54:	bne	14b98 <table_set@@Base+0x1f0>
   14a58:	ldr	r0, [r5]
   14a5c:	cmp	r0, #0
   14a60:	bne	14a78 <table_set@@Base+0xd0>
   14a64:	mov	r0, #4
   14a68:	bl	11fdc <malloc@plt>
   14a6c:	str	r0, [r5]
   14a70:	cmp	r0, #0
   14a74:	beq	14b98 <table_set@@Base+0x1f0>
   14a78:	ldr	r1, [r8]
   14a7c:	str	r1, [r0]
   14a80:	b	14b80 <table_set@@Base+0x1d8>
   14a84:	ldr	r0, [r0, #4]
   14a88:	cmp	r0, r1
   14a8c:	bne	14b98 <table_set@@Base+0x1f0>
   14a90:	ldr	r0, [r5]
   14a94:	cmp	r0, #0
   14a98:	bne	14ab0 <table_set@@Base+0x108>
   14a9c:	mov	r0, #8
   14aa0:	bl	11fdc <malloc@plt>
   14aa4:	str	r0, [r5]
   14aa8:	cmp	r0, #0
   14aac:	beq	14b98 <table_set@@Base+0x1f0>
   14ab0:	ldr	r1, [r8]
   14ab4:	ldr	r2, [r8, #4]
   14ab8:	str	r2, [r0, #4]
   14abc:	str	r1, [r0]
   14ac0:	b	14b80 <table_set@@Base+0x1d8>
   14ac4:	ldr	r0, [r0, #4]
   14ac8:	cmp	r0, r1
   14acc:	bne	14b98 <table_set@@Base+0x1f0>
   14ad0:	ldr	r0, [r5]
   14ad4:	cmp	r0, #0
   14ad8:	bne	14af0 <table_set@@Base+0x148>
   14adc:	mov	r0, #1
   14ae0:	bl	11fdc <malloc@plt>
   14ae4:	str	r0, [r5]
   14ae8:	cmp	r0, #0
   14aec:	beq	14b98 <table_set@@Base+0x1f0>
   14af0:	ldrb	r1, [r8]
   14af4:	strb	r1, [r0]
   14af8:	b	14b80 <table_set@@Base+0x1d8>
   14afc:	ldr	r0, [r0, #4]
   14b00:	cmp	r0, r1
   14b04:	bne	14b98 <table_set@@Base+0x1f0>
   14b08:	ldr	r0, [r5]
   14b0c:	cmp	r0, #0
   14b10:	bne	14b28 <table_set@@Base+0x180>
   14b14:	mov	r0, #2
   14b18:	bl	11fdc <malloc@plt>
   14b1c:	str	r0, [r5]
   14b20:	cmp	r0, #0
   14b24:	beq	14b98 <table_set@@Base+0x1f0>
   14b28:	ldrh	r1, [r8]
   14b2c:	strh	r1, [r0]
   14b30:	b	14b80 <table_set@@Base+0x1d8>
   14b34:	ldr	r0, [r0, #4]
   14b38:	cmp	r0, r1
   14b3c:	bne	14b98 <table_set@@Base+0x1f0>
   14b40:	mov	r0, r8
   14b44:	bl	12000 <strlen@plt>
   14b48:	ldr	r2, [r5]
   14b4c:	add	r1, r0, #1
   14b50:	mov	r0, r2
   14b54:	bl	11fb8 <realloc@plt>
   14b58:	str	r0, [r5]
   14b5c:	cmp	r0, #0
   14b60:	beq	14b98 <table_set@@Base+0x1f0>
   14b64:	mov	r1, r8
   14b68:	bl	11fc4 <strcpy@plt>
   14b6c:	b	14b80 <table_set@@Base+0x1d8>
   14b70:	ldr	r0, [r0, #4]
   14b74:	cmp	r0, r1
   14b78:	bne	14b98 <table_set@@Base+0x1f0>
   14b7c:	str	r8, [r5]
   14b80:	mov	r0, r6
   14b84:	mov	r1, r9
   14b88:	mov	r2, r4
   14b8c:	mov	r3, #1
   14b90:	bl	12ee0 <table_notify@@Base>
   14b94:	mov	r7, #0
   14b98:	mov	r0, r7
   14b9c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014ba0 <table_set_bool@@Base>:
   14ba0:	push	{fp, lr}
   14ba4:	mov	fp, sp
   14ba8:	sub	sp, sp, #8
   14bac:	strb	r3, [fp, #-1]
   14bb0:	mov	r3, #22
   14bb4:	str	r3, [sp]
   14bb8:	sub	r3, fp, #1
   14bbc:	bl	149a8 <table_set@@Base>
   14bc0:	mov	sp, fp
   14bc4:	pop	{fp, pc}

00014bc8 <table_set_int@@Base>:
   14bc8:	push	{fp, lr}
   14bcc:	mov	fp, sp
   14bd0:	sub	sp, sp, #8
   14bd4:	str	r3, [sp, #4]
   14bd8:	mov	r3, #0
   14bdc:	str	r3, [sp]
   14be0:	add	r3, sp, #4
   14be4:	bl	149a8 <table_set@@Base>
   14be8:	mov	sp, fp
   14bec:	pop	{fp, pc}

00014bf0 <table_set_uint@@Base>:
   14bf0:	push	{fp, lr}
   14bf4:	mov	fp, sp
   14bf8:	sub	sp, sp, #8
   14bfc:	str	r3, [sp, #4]
   14c00:	mov	r3, #1
   14c04:	str	r3, [sp]
   14c08:	add	r3, sp, #4
   14c0c:	bl	149a8 <table_set@@Base>
   14c10:	mov	sp, fp
   14c14:	pop	{fp, pc}

00014c18 <table_set_int8@@Base>:
   14c18:	push	{fp, lr}
   14c1c:	mov	fp, sp
   14c20:	sub	sp, sp, #8
   14c24:	strb	r3, [fp, #-1]
   14c28:	mov	r3, #2
   14c2c:	str	r3, [sp]
   14c30:	sub	r3, fp, #1
   14c34:	bl	149a8 <table_set@@Base>
   14c38:	mov	sp, fp
   14c3c:	pop	{fp, pc}

00014c40 <table_set_uint8@@Base>:
   14c40:	push	{fp, lr}
   14c44:	mov	fp, sp
   14c48:	sub	sp, sp, #8
   14c4c:	strb	r3, [fp, #-1]
   14c50:	mov	r3, #3
   14c54:	str	r3, [sp]
   14c58:	sub	r3, fp, #1
   14c5c:	bl	149a8 <table_set@@Base>
   14c60:	mov	sp, fp
   14c64:	pop	{fp, pc}

00014c68 <table_set_int16@@Base>:
   14c68:	push	{fp, lr}
   14c6c:	mov	fp, sp
   14c70:	sub	sp, sp, #8
   14c74:	strh	r3, [fp, #-2]
   14c78:	mov	r3, #4
   14c7c:	str	r3, [sp]
   14c80:	sub	r3, fp, #2
   14c84:	bl	149a8 <table_set@@Base>
   14c88:	mov	sp, fp
   14c8c:	pop	{fp, pc}

00014c90 <table_set_uint16@@Base>:
   14c90:	push	{fp, lr}
   14c94:	mov	fp, sp
   14c98:	sub	sp, sp, #8
   14c9c:	strh	r3, [fp, #-2]
   14ca0:	mov	r3, #5
   14ca4:	str	r3, [sp]
   14ca8:	sub	r3, fp, #2
   14cac:	bl	149a8 <table_set@@Base>
   14cb0:	mov	sp, fp
   14cb4:	pop	{fp, pc}

00014cb8 <table_set_int32@@Base>:
   14cb8:	push	{fp, lr}
   14cbc:	mov	fp, sp
   14cc0:	sub	sp, sp, #8
   14cc4:	str	r3, [sp, #4]
   14cc8:	mov	r3, #6
   14ccc:	str	r3, [sp]
   14cd0:	add	r3, sp, #4
   14cd4:	bl	149a8 <table_set@@Base>
   14cd8:	mov	sp, fp
   14cdc:	pop	{fp, pc}

00014ce0 <table_set_uint32@@Base>:
   14ce0:	push	{fp, lr}
   14ce4:	mov	fp, sp
   14ce8:	sub	sp, sp, #8
   14cec:	str	r3, [sp, #4]
   14cf0:	mov	r3, #7
   14cf4:	str	r3, [sp]
   14cf8:	add	r3, sp, #4
   14cfc:	bl	149a8 <table_set@@Base>
   14d00:	mov	sp, fp
   14d04:	pop	{fp, pc}

00014d08 <table_set_int64@@Base>:
   14d08:	push	{fp, lr}
   14d0c:	mov	fp, sp
   14d10:	sub	sp, sp, #16
   14d14:	ldr	r3, [fp, #12]
   14d18:	str	r3, [sp, #12]
   14d1c:	ldr	r3, [fp, #8]
   14d20:	str	r3, [sp, #8]
   14d24:	mov	r3, #8
   14d28:	str	r3, [sp]
   14d2c:	add	r3, sp, #8
   14d30:	bl	149a8 <table_set@@Base>
   14d34:	mov	sp, fp
   14d38:	pop	{fp, pc}

00014d3c <table_set_uint64@@Base>:
   14d3c:	push	{fp, lr}
   14d40:	mov	fp, sp
   14d44:	sub	sp, sp, #16
   14d48:	ldr	r3, [fp, #12]
   14d4c:	str	r3, [sp, #12]
   14d50:	ldr	r3, [fp, #8]
   14d54:	str	r3, [sp, #8]
   14d58:	mov	r3, #9
   14d5c:	str	r3, [sp]
   14d60:	add	r3, sp, #8
   14d64:	bl	149a8 <table_set@@Base>
   14d68:	mov	sp, fp
   14d6c:	pop	{fp, pc}

00014d70 <table_set_short@@Base>:
   14d70:	push	{fp, lr}
   14d74:	mov	fp, sp
   14d78:	sub	sp, sp, #8
   14d7c:	strh	r3, [fp, #-2]
   14d80:	mov	r3, #10
   14d84:	str	r3, [sp]
   14d88:	sub	r3, fp, #2
   14d8c:	bl	149a8 <table_set@@Base>
   14d90:	mov	sp, fp
   14d94:	pop	{fp, pc}

00014d98 <table_set_ushort@@Base>:
   14d98:	push	{fp, lr}
   14d9c:	mov	fp, sp
   14da0:	sub	sp, sp, #8
   14da4:	strh	r3, [fp, #-2]
   14da8:	mov	r3, #11
   14dac:	str	r3, [sp]
   14db0:	sub	r3, fp, #2
   14db4:	bl	149a8 <table_set@@Base>
   14db8:	mov	sp, fp
   14dbc:	pop	{fp, pc}

00014dc0 <table_set_long@@Base>:
   14dc0:	push	{fp, lr}
   14dc4:	mov	fp, sp
   14dc8:	sub	sp, sp, #8
   14dcc:	str	r3, [sp, #4]
   14dd0:	mov	r3, #12
   14dd4:	str	r3, [sp]
   14dd8:	add	r3, sp, #4
   14ddc:	bl	149a8 <table_set@@Base>
   14de0:	mov	sp, fp
   14de4:	pop	{fp, pc}

00014de8 <table_set_ulong@@Base>:
   14de8:	push	{fp, lr}
   14dec:	mov	fp, sp
   14df0:	sub	sp, sp, #8
   14df4:	str	r3, [sp, #4]
   14df8:	mov	r3, #13
   14dfc:	str	r3, [sp]
   14e00:	add	r3, sp, #4
   14e04:	bl	149a8 <table_set@@Base>
   14e08:	mov	sp, fp
   14e0c:	pop	{fp, pc}

00014e10 <table_set_llong@@Base>:
   14e10:	push	{fp, lr}
   14e14:	mov	fp, sp
   14e18:	sub	sp, sp, #16
   14e1c:	ldr	r3, [fp, #12]
   14e20:	str	r3, [sp, #12]
   14e24:	ldr	r3, [fp, #8]
   14e28:	str	r3, [sp, #8]
   14e2c:	mov	r3, #14
   14e30:	str	r3, [sp]
   14e34:	add	r3, sp, #8
   14e38:	bl	149a8 <table_set@@Base>
   14e3c:	mov	sp, fp
   14e40:	pop	{fp, pc}

00014e44 <table_set_ullong@@Base>:
   14e44:	push	{fp, lr}
   14e48:	mov	fp, sp
   14e4c:	sub	sp, sp, #16
   14e50:	ldr	r3, [fp, #12]
   14e54:	str	r3, [sp, #12]
   14e58:	ldr	r3, [fp, #8]
   14e5c:	str	r3, [sp, #8]
   14e60:	mov	r3, #15
   14e64:	str	r3, [sp]
   14e68:	add	r3, sp, #8
   14e6c:	bl	149a8 <table_set@@Base>
   14e70:	mov	sp, fp
   14e74:	pop	{fp, pc}

00014e78 <table_set_float@@Base>:
   14e78:	push	{fp, lr}
   14e7c:	mov	fp, sp
   14e80:	sub	sp, sp, #8
   14e84:	vstr	s0, [sp, #4]
   14e88:	mov	r3, #16
   14e8c:	str	r3, [sp]
   14e90:	add	r3, sp, #4
   14e94:	bl	149a8 <table_set@@Base>
   14e98:	mov	sp, fp
   14e9c:	pop	{fp, pc}

00014ea0 <table_set_double@@Base>:
   14ea0:	push	{fp, lr}
   14ea4:	mov	fp, sp
   14ea8:	sub	sp, sp, #16
   14eac:	vstr	d0, [sp, #8]
   14eb0:	mov	r3, #17
   14eb4:	str	r3, [sp]
   14eb8:	add	r3, sp, #8
   14ebc:	bl	149a8 <table_set@@Base>
   14ec0:	mov	sp, fp
   14ec4:	pop	{fp, pc}

00014ec8 <table_set_ldouble@@Base>:
   14ec8:	push	{fp, lr}
   14ecc:	mov	fp, sp
   14ed0:	sub	sp, sp, #16
   14ed4:	vstr	d0, [sp, #8]
   14ed8:	mov	r3, #18
   14edc:	str	r3, [sp]
   14ee0:	add	r3, sp, #8
   14ee4:	bl	149a8 <table_set@@Base>
   14ee8:	mov	sp, fp
   14eec:	pop	{fp, pc}

00014ef0 <table_set_string@@Base>:
   14ef0:	push	{fp, lr}
   14ef4:	mov	fp, sp
   14ef8:	sub	sp, sp, #8
   14efc:	mov	ip, #21
   14f00:	str	ip, [sp]
   14f04:	bl	149a8 <table_set@@Base>
   14f08:	mov	sp, fp
   14f0c:	pop	{fp, pc}

00014f10 <table_set_char@@Base>:
   14f10:	push	{fp, lr}
   14f14:	mov	fp, sp
   14f18:	sub	sp, sp, #8
   14f1c:	strb	r3, [fp, #-1]
   14f20:	mov	r3, #19
   14f24:	str	r3, [sp]
   14f28:	sub	r3, fp, #1
   14f2c:	bl	149a8 <table_set@@Base>
   14f30:	mov	sp, fp
   14f34:	pop	{fp, pc}

00014f38 <table_set_uchar@@Base>:
   14f38:	push	{fp, lr}
   14f3c:	mov	fp, sp
   14f40:	sub	sp, sp, #8
   14f44:	strb	r3, [fp, #-1]
   14f48:	mov	r3, #20
   14f4c:	str	r3, [sp]
   14f50:	sub	r3, fp, #1
   14f54:	bl	149a8 <table_set@@Base>
   14f58:	mov	sp, fp
   14f5c:	pop	{fp, pc}

00014f60 <table_set_ptr@@Base>:
   14f60:	push	{fp, lr}
   14f64:	mov	fp, sp
   14f68:	sub	sp, sp, #8
   14f6c:	mov	ip, #23
   14f70:	str	ip, [sp]
   14f74:	bl	149a8 <table_set@@Base>
   14f78:	mov	sp, fp
   14f7c:	pop	{fp, pc}

00014f80 <table_column_sort@@Base>:
   14f80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14f84:	add	fp, sp, #28
   14f88:	sub	sp, sp, #36	; 0x24
   14f8c:	str	r2, [sp, #8]
   14f90:	str	r1, [sp, #12]
   14f94:	mov	r4, r0
   14f98:	str	r3, [sp, #4]
   14f9c:	cmp	r3, #1
   14fa0:	blt	15128 <table_column_sort@@Base+0x1a8>
   14fa4:	ldr	r0, [sp, #12]
   14fa8:	sub	r5, r0, #4
   14fac:	mov	r8, #0
   14fb0:	b	14fe8 <table_column_sort@@Base+0x68>
   14fb4:	ldr	r0, [sp, #12]
   14fb8:	ldr	r1, [r0]
   14fbc:	ldr	r0, [sp, #8]
   14fc0:	ldr	r0, [r0]
   14fc4:	str	r0, [sp]
   14fc8:	sub	r3, sl, #1
   14fcc:	mov	r0, r4
   14fd0:	mov	r2, #0
   14fd4:	bl	15144 <table_column_sort@@Base+0x1c4>
   14fd8:	add	r8, r8, #1
   14fdc:	ldr	r0, [sp, #4]
   14fe0:	cmp	r8, r0
   14fe4:	beq	15128 <table_column_sort@@Base+0x1a8>
   14fe8:	mov	r0, r4
   14fec:	bl	14760 <table_get_row_length@@Base>
   14ff0:	mov	sl, r0
   14ff4:	cmp	r8, #0
   14ff8:	beq	14fb4 <table_column_sort@@Base+0x34>
   14ffc:	ldr	r0, [sp, #12]
   15000:	add	r0, r0, r8, lsl #2
   15004:	ldr	r1, [r0, #-4]
   15008:	mov	r0, r4
   1500c:	bl	13dc8 <table_get_column_compare_function@@Base>
   15010:	cmp	sl, #1
   15014:	blt	14fd8 <table_column_sort@@Base+0x58>
   15018:	mov	r6, r0
   1501c:	sub	r0, sl, #1
   15020:	str	r0, [sp, #16]
   15024:	mov	r7, #0
   15028:	mvn	r3, #0
   1502c:	mvn	r9, #0
   15030:	str	r8, [sp, #24]
   15034:	str	sl, [sp, #20]
   15038:	cmp	r7, #0
   1503c:	bne	1505c <table_column_sort@@Base+0xdc>
   15040:	b	150c4 <table_column_sort@@Base+0x144>
   15044:	mvn	r9, #0
   15048:	add	r7, r7, #1
   1504c:	cmp	r7, sl
   15050:	beq	14fd8 <table_column_sort@@Base+0x58>
   15054:	cmp	r7, #0
   15058:	beq	150c4 <table_column_sort@@Base+0x144>
   1505c:	str	r9, [sp, #32]
   15060:	str	r3, [sp, #28]
   15064:	sub	r9, r7, #1
   15068:	ldr	r2, [r5, r8, lsl #2]
   1506c:	mov	r0, r4
   15070:	mov	r1, r7
   15074:	bl	144f0 <table_get@@Base>
   15078:	mov	sl, r0
   1507c:	ldr	r2, [r5, r8, lsl #2]
   15080:	mov	r0, r4
   15084:	mov	r1, r9
   15088:	bl	144f0 <table_get@@Base>
   1508c:	mov	r1, r0
   15090:	mov	r0, sl
   15094:	blx	r6
   15098:	cmp	r0, #0
   1509c:	bne	1510c <table_column_sort@@Base+0x18c>
   150a0:	sub	r8, r8, #1
   150a4:	cmp	r8, #1
   150a8:	bge	15068 <table_column_sort@@Base+0xe8>
   150ac:	ldr	r0, [sp, #32]
   150b0:	cmn	r0, #1
   150b4:	movne	r9, r0
   150b8:	mov	r3, r7
   150bc:	ldr	r8, [sp, #24]
   150c0:	ldr	sl, [sp, #20]
   150c4:	cmn	r9, #1
   150c8:	beq	15044 <table_column_sort@@Base+0xc4>
   150cc:	cmp	r3, r7
   150d0:	bne	150e0 <table_column_sort@@Base+0x160>
   150d4:	ldr	r0, [sp, #16]
   150d8:	cmp	r3, r0
   150dc:	bne	15048 <table_column_sort@@Base+0xc8>
   150e0:	ldr	r0, [sp, #12]
   150e4:	ldr	r1, [r0, r8, lsl #2]
   150e8:	ldr	r0, [sp, #8]
   150ec:	ldr	r0, [r0, r8, lsl #2]
   150f0:	str	r0, [sp]
   150f4:	mov	r0, r4
   150f8:	mov	r2, r9
   150fc:	bl	15144 <table_column_sort@@Base+0x1c4>
   15100:	mvn	r9, #0
   15104:	mvn	r3, #0
   15108:	b	15048 <table_column_sort@@Base+0xc8>
   1510c:	ldr	r9, [sp, #32]
   15110:	ldr	r8, [sp, #24]
   15114:	ldr	sl, [sp, #20]
   15118:	ldr	r3, [sp, #28]
   1511c:	cmn	r9, #1
   15120:	bne	150cc <table_column_sort@@Base+0x14c>
   15124:	b	15044 <table_column_sort@@Base+0xc4>
   15128:	mov	r0, r4
   1512c:	mvn	r1, #0
   15130:	mvn	r2, #0
   15134:	mov	r3, #32
   15138:	sub	sp, fp, #28
   1513c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15140:	b	12ee0 <table_notify@@Base>
   15144:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15148:	add	fp, sp, #24
   1514c:	sub	sp, sp, #8
   15150:	mov	r4, r3
   15154:	mov	r5, r2
   15158:	mov	r8, r1
   1515c:	mov	r7, r0
   15160:	sub	r0, r3, r2
   15164:	add	r0, r0, #1
   15168:	mov	r1, #4
   1516c:	bl	11f7c <calloc@plt>
   15170:	mov	r6, r0
   15174:	ldr	r0, [fp, #8]
   15178:	str	r4, [sp]
   1517c:	str	r0, [sp, #4]
   15180:	mov	r0, r7
   15184:	mov	r1, r6
   15188:	mov	r2, r8
   1518c:	mov	r3, r5
   15190:	bl	151a4 <table_column_sort@@Base+0x224>
   15194:	mov	r0, r6
   15198:	sub	sp, fp, #24
   1519c:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   151a0:	b	11fa0 <free@plt>
   151a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   151a8:	add	fp, sp, #28
   151ac:	sub	sp, sp, #20
   151b0:	ldr	r6, [fp, #8]
   151b4:	cmp	r6, r3
   151b8:	ble	15240 <table_column_sort@@Base+0x2c0>
   151bc:	mov	r5, r3
   151c0:	mov	r8, r2
   151c4:	mov	r4, r1
   151c8:	mov	r7, r0
   151cc:	ldr	r9, [fp, #12]
   151d0:	add	r0, r6, r3
   151d4:	add	sl, r0, r0, lsr #31
   151d8:	asr	r0, sl, #1
   151dc:	str	r0, [sp, #16]
   151e0:	stm	sp, {r0, r9}
   151e4:	mov	r0, r7
   151e8:	bl	151a4 <table_column_sort@@Base+0x224>
   151ec:	stm	sp, {r6, r9}
   151f0:	mov	r0, #1
   151f4:	add	r3, r0, sl, asr #1
   151f8:	mov	r0, r7
   151fc:	mov	r1, r4
   15200:	mov	r2, r8
   15204:	bl	151a4 <table_column_sort@@Base+0x224>
   15208:	ldr	r0, [sp, #16]
   1520c:	stm	sp, {r0, r6, r9}
   15210:	mov	r0, r7
   15214:	mov	r1, r4
   15218:	mov	r2, r8
   1521c:	mov	r3, r5
   15220:	bl	15248 <table_column_sort@@Base+0x2c8>
   15224:	mov	r0, r7
   15228:	mov	r1, r5
   1522c:	mov	r2, r6
   15230:	mov	r3, r4
   15234:	sub	sp, fp, #28
   15238:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1523c:	b	15398 <table_column_sort@@Base+0x418>
   15240:	sub	sp, fp, #28
   15244:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15248:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1524c:	add	fp, sp, #28
   15250:	sub	sp, sp, #4
   15254:	mov	r4, r3
   15258:	mov	sl, r2
   1525c:	mov	r6, r1
   15260:	mov	r8, r0
   15264:	mov	r1, r2
   15268:	bl	13dc8 <table_get_column_compare_function@@Base>
   1526c:	str	r0, [sp]
   15270:	ldr	r7, [fp, #12]
   15274:	cmp	r7, r4
   15278:	blt	15390 <table_column_sort@@Base+0x410>
   1527c:	ldr	r0, [fp, #8]
   15280:	sub	r9, r4, #1
   15284:	add	r5, r0, #1
   15288:	b	152fc <table_column_sort@@Base+0x37c>
   1528c:	mov	r0, r8
   15290:	mov	r1, r4
   15294:	mov	r2, sl
   15298:	bl	144f0 <table_get@@Base>
   1529c:	mov	r7, sl
   152a0:	mov	sl, r0
   152a4:	mov	r0, r8
   152a8:	mov	r1, r5
   152ac:	mov	r2, r7
   152b0:	bl	144f0 <table_get@@Base>
   152b4:	mov	r1, r0
   152b8:	mov	r0, sl
   152bc:	mov	sl, r7
   152c0:	ldr	r7, [fp, #12]
   152c4:	ldr	r2, [sp]
   152c8:	blx	r2
   152cc:	cmn	r0, #1
   152d0:	ble	15374 <table_column_sort@@Base+0x3f4>
   152d4:	mov	r0, r8
   152d8:	mov	r1, r5
   152dc:	bl	146ec <table_get_row_ptr@@Base>
   152e0:	ldr	r0, [r0]
   152e4:	str	r0, [r6]
   152e8:	add	r5, r5, #1
   152ec:	add	r6, r6, #4
   152f0:	add	r9, r9, #1
   152f4:	cmp	r7, r9
   152f8:	beq	15390 <table_column_sort@@Base+0x410>
   152fc:	ldr	r0, [fp, #16]
   15300:	cmp	r0, #0
   15304:	beq	15360 <table_column_sort@@Base+0x3e0>
   15308:	ldr	r0, [fp, #8]
   1530c:	cmp	r4, r0
   15310:	bgt	152d4 <table_column_sort@@Base+0x354>
   15314:	cmp	r5, r7
   15318:	bgt	15374 <table_column_sort@@Base+0x3f4>
   1531c:	mov	r0, r8
   15320:	mov	r1, r4
   15324:	mov	r2, sl
   15328:	bl	144f0 <table_get@@Base>
   1532c:	mov	r7, r0
   15330:	mov	r0, r8
   15334:	mov	r1, r5
   15338:	mov	r2, sl
   1533c:	bl	144f0 <table_get@@Base>
   15340:	mov	r1, r0
   15344:	mov	r0, r7
   15348:	ldr	r7, [fp, #12]
   1534c:	ldr	r2, [sp]
   15350:	blx	r2
   15354:	cmp	r0, #1
   15358:	bge	15374 <table_column_sort@@Base+0x3f4>
   1535c:	b	152d4 <table_column_sort@@Base+0x354>
   15360:	ldr	r0, [fp, #8]
   15364:	cmp	r4, r0
   15368:	bgt	152d4 <table_column_sort@@Base+0x354>
   1536c:	cmp	r5, r7
   15370:	ble	1528c <table_column_sort@@Base+0x30c>
   15374:	mov	r0, r8
   15378:	mov	r1, r4
   1537c:	bl	146ec <table_get_row_ptr@@Base>
   15380:	ldr	r0, [r0]
   15384:	str	r0, [r6]
   15388:	add	r4, r4, #1
   1538c:	b	152ec <table_column_sort@@Base+0x36c>
   15390:	sub	sp, fp, #28
   15394:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15398:	push	{r4, r5, r6, r7, fp, lr}
   1539c:	add	fp, sp, #16
   153a0:	cmp	r2, r1
   153a4:	poplt	{r4, r5, r6, r7, fp, pc}
   153a8:	mov	r4, r3
   153ac:	mov	r5, r1
   153b0:	mov	r6, r0
   153b4:	add	r7, r2, #1
   153b8:	mov	r0, r6
   153bc:	mov	r1, r5
   153c0:	mov	r2, r4
   153c4:	bl	14998 <table_set_row_ptr@@Base>
   153c8:	add	r4, r4, #4
   153cc:	add	r5, r5, #1
   153d0:	cmp	r7, r5
   153d4:	bne	153b8 <table_column_sort@@Base+0x438>
   153d8:	pop	{r4, r5, r6, r7, fp, pc}

000153dc <__libc_csu_init@@Base>:
   153dc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   153e0:	mov	r7, r0
   153e4:	ldr	r6, [pc, #72]	; 15434 <__libc_csu_init@@Base+0x58>
   153e8:	ldr	r5, [pc, #72]	; 15438 <__libc_csu_init@@Base+0x5c>
   153ec:	add	r6, pc, r6
   153f0:	add	r5, pc, r5
   153f4:	sub	r6, r6, r5
   153f8:	mov	r8, r1
   153fc:	mov	r9, r2
   15400:	bl	11f5c <calloc@plt-0x20>
   15404:	asrs	r6, r6, #2
   15408:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1540c:	mov	r4, #0
   15410:	add	r4, r4, #1
   15414:	ldr	r3, [r5], #4
   15418:	mov	r2, r9
   1541c:	mov	r1, r8
   15420:	mov	r0, r7
   15424:	blx	r3
   15428:	cmp	r6, r4
   1542c:	bne	15410 <__libc_csu_init@@Base+0x34>
   15430:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15434:	andeq	r0, r1, r8, lsl fp
   15438:	andeq	r0, r1, r0, lsl fp

0001543c <__libc_csu_fini@@Base>:
   1543c:	bx	lr

Disassembly of section .fini:

00015440 <.fini>:
   15440:	push	{r3, lr}
   15444:	pop	{r3, pc}
