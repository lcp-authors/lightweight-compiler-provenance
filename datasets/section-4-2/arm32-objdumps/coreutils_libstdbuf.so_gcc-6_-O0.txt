
../repos/coreutils/src/libstdbuf.so:     file format elf32-littlearm


Disassembly of section .init:

00000424 <.init>:
 424:	push	{r3, lr}
 428:	bl	4bc <strtoumax@plt+0xc>
 42c:	pop	{r3, pc}

Disassembly of section .plt:

00000430 <__cxa_finalize@plt-0x14>:
 430:	push	{lr}		; (str lr, [sp, #-4]!)
 434:	ldr	lr, [pc, #4]	; 440 <__cxa_finalize@plt-0x4>
 438:	add	lr, pc, lr
 43c:	ldr	pc, [lr, #8]!
 440:	andeq	r0, r1, r0, asr #23

00000444 <__cxa_finalize@plt>:
 444:	add	ip, pc, #0, 12
 448:	add	ip, ip, #16, 20	; 0x10000
 44c:	ldr	pc, [ip, #3008]!	; 0xbc0

00000450 <free@plt>:
 450:	add	ip, pc, #0, 12
 454:	add	ip, ip, #16, 20	; 0x10000
 458:	ldr	pc, [ip, #3000]!	; 0xbb8

0000045c <getenv@plt>:
 45c:	add	ip, pc, #0, 12
 460:	add	ip, ip, #16, 20	; 0x10000
 464:	ldr	pc, [ip, #2992]!	; 0xbb0

00000468 <malloc@plt>:
 468:	add	ip, pc, #0, 12
 46c:	add	ip, ip, #16, 20	; 0x10000
 470:	ldr	pc, [ip, #2984]!	; 0xba8

00000474 <__gmon_start__@plt>:
 474:	add	ip, pc, #0, 12
 478:	add	ip, ip, #16, 20	; 0x10000
 47c:	ldr	pc, [ip, #2976]!	; 0xba0

00000480 <gettext@plt>:
 480:	add	ip, pc, #0, 12
 484:	add	ip, ip, #16, 20	; 0x10000
 488:	ldr	pc, [ip, #2968]!	; 0xb98

0000048c <fprintf@plt>:
 48c:	add	ip, pc, #0, 12
 490:	add	ip, ip, #16, 20	; 0x10000
 494:	ldr	pc, [ip, #2960]!	; 0xb90

00000498 <setvbuf@plt>:
 498:	add	ip, pc, #0, 12
 49c:	add	ip, ip, #16, 20	; 0x10000
 4a0:	ldr	pc, [ip, #2952]!	; 0xb88

000004a4 <fileno@plt>:
 4a4:	add	ip, pc, #0, 12
 4a8:	add	ip, ip, #16, 20	; 0x10000
 4ac:	ldr	pc, [ip, #2944]!	; 0xb80

000004b0 <strtoumax@plt>:
 4b0:	add	ip, pc, #0, 12
 4b4:	add	ip, ip, #16, 20	; 0x10000
 4b8:	ldr	pc, [ip, #2936]!	; 0xb78

Disassembly of section .text:

000004bc <.text>:
 4bc:	ldr	r3, [pc, #20]	; 4d8 <strtoumax@plt+0x28>
 4c0:	ldr	r2, [pc, #20]	; 4dc <strtoumax@plt+0x2c>
 4c4:	add	r3, pc, r3
 4c8:	ldr	r2, [r3, r2]
 4cc:	cmp	r2, #0
 4d0:	bxeq	lr
 4d4:	b	474 <__gmon_start__@plt>
 4d8:	andeq	r0, r1, r4, lsr fp
 4dc:	andeq	r0, r0, r0, asr #32
 4e0:	ldr	r3, [pc, #52]	; 51c <strtoumax@plt+0x6c>
 4e4:	ldr	r0, [pc, #52]	; 520 <strtoumax@plt+0x70>
 4e8:	add	r3, pc, r3
 4ec:	add	r0, pc, r0
 4f0:	add	r3, r3, #3
 4f4:	sub	r3, r3, r0
 4f8:	cmp	r3, #6
 4fc:	ldr	r3, [pc, #32]	; 524 <strtoumax@plt+0x74>
 500:	add	r3, pc, r3
 504:	bxls	lr
 508:	ldr	r2, [pc, #24]	; 528 <strtoumax@plt+0x78>
 50c:	ldr	r3, [r3, r2]
 510:	cmp	r3, #0
 514:	bxeq	lr
 518:	bx	r3
 51c:	andeq	r0, r1, r8, ror #22
 520:	andeq	r0, r1, r4, ror #22
 524:	strdeq	r0, [r1], -r8
 528:	andeq	r0, r0, r8, lsr r0
 52c:	ldr	r1, [pc, #56]	; 56c <strtoumax@plt+0xbc>
 530:	ldr	r0, [pc, #56]	; 570 <strtoumax@plt+0xc0>
 534:	add	r1, pc, r1
 538:	add	r0, pc, r0
 53c:	sub	r1, r1, r0
 540:	ldr	r3, [pc, #44]	; 574 <strtoumax@plt+0xc4>
 544:	asr	r1, r1, #2
 548:	add	r3, pc, r3
 54c:	add	r1, r1, r1, lsr #31
 550:	asrs	r1, r1, #1
 554:	bxeq	lr
 558:	ldr	r2, [pc, #24]	; 578 <strtoumax@plt+0xc8>
 55c:	ldr	r3, [r3, r2]
 560:	cmp	r3, #0
 564:	bxeq	lr
 568:	bx	r3
 56c:	andeq	r0, r1, ip, lsl fp
 570:	andeq	r0, r1, r8, lsl fp
 574:			; <UNDEFINED> instruction: 0x00010ab0
 578:	andeq	r0, r0, r0, asr r0
 57c:	ldr	r3, [pc, #76]	; 5d0 <strtoumax@plt+0x120>
 580:	ldr	r2, [pc, #76]	; 5d4 <strtoumax@plt+0x124>
 584:	add	r3, pc, r3
 588:	add	r2, pc, r2
 58c:	ldrb	r3, [r3]
 590:	cmp	r3, #0
 594:	bxne	lr
 598:	ldr	r3, [pc, #56]	; 5d8 <strtoumax@plt+0x128>
 59c:	push	{r4, lr}
 5a0:	ldr	r3, [r2, r3]
 5a4:	cmp	r3, #0
 5a8:	beq	5b8 <strtoumax@plt+0x108>
 5ac:	ldr	r3, [pc, #40]	; 5dc <strtoumax@plt+0x12c>
 5b0:	ldr	r0, [pc, r3]
 5b4:	bl	444 <__cxa_finalize@plt>
 5b8:	bl	4e0 <strtoumax@plt+0x30>
 5bc:	ldr	r3, [pc, #28]	; 5e0 <strtoumax@plt+0x130>
 5c0:	mov	r2, #1
 5c4:	add	r3, pc, r3
 5c8:	strb	r2, [r3]
 5cc:	pop	{r4, pc}
 5d0:	andeq	r0, r1, ip, asr #21
 5d4:	andeq	r0, r1, r0, ror sl
 5d8:	andeq	r0, r0, r4, lsr r0
 5dc:	muleq	r1, ip, sl
 5e0:	andeq	r0, r1, ip, lsl #21
 5e4:	ldr	r0, [pc, #56]	; 624 <strtoumax@plt+0x174>
 5e8:	ldr	r3, [pc, #56]	; 628 <strtoumax@plt+0x178>
 5ec:	add	r0, pc, r0
 5f0:	ldr	r2, [r0]
 5f4:	add	r3, pc, r3
 5f8:	cmp	r2, #0
 5fc:	bne	604 <strtoumax@plt+0x154>
 600:	b	52c <strtoumax@plt+0x7c>
 604:	ldr	r2, [pc, #32]	; 62c <strtoumax@plt+0x17c>
 608:	ldr	r3, [r3, r2]
 60c:	cmp	r3, #0
 610:	beq	600 <strtoumax@plt+0x150>
 614:	push	{r4, lr}
 618:	blx	r3
 61c:	pop	{r4, lr}
 620:	b	52c <strtoumax@plt+0x7c>
 624:	andeq	r0, r1, r8, lsr #18
 628:	andeq	r0, r1, r4, lsl #20
 62c:	andeq	r0, r0, ip, asr #32
 630:	push	{fp}		; (str fp, [sp, #-4]!)
 634:	add	fp, sp, #0
 638:	sub	sp, sp, #20
 63c:	str	r0, [fp, #-16]
 640:	mov	r3, #0
 644:	str	r3, [fp, #-8]
 648:	ldr	r3, [fp, #-16]
 64c:	cmp	r3, #1
 650:	beq	674 <strtoumax@plt+0x1c4>
 654:	cmp	r3, #2
 658:	beq	684 <strtoumax@plt+0x1d4>
 65c:	cmp	r3, #0
 660:	bne	694 <strtoumax@plt+0x1e4>
 664:	ldr	r3, [pc, #76]	; 6b8 <strtoumax@plt+0x208>
 668:	add	r3, pc, r3
 66c:	str	r3, [fp, #-8]
 670:	b	6a4 <strtoumax@plt+0x1f4>
 674:	ldr	r3, [pc, #64]	; 6bc <strtoumax@plt+0x20c>
 678:	add	r3, pc, r3
 67c:	str	r3, [fp, #-8]
 680:	b	6a4 <strtoumax@plt+0x1f4>
 684:	ldr	r3, [pc, #52]	; 6c0 <strtoumax@plt+0x210>
 688:	add	r3, pc, r3
 68c:	str	r3, [fp, #-8]
 690:	b	6a4 <strtoumax@plt+0x1f4>
 694:	ldr	r3, [pc, #40]	; 6c4 <strtoumax@plt+0x214>
 698:	add	r3, pc, r3
 69c:	str	r3, [fp, #-8]
 6a0:	nop			; (mov r0, r0)
 6a4:	ldr	r3, [fp, #-8]
 6a8:	mov	r0, r3
 6ac:	add	sp, fp, #0
 6b0:	pop	{fp}		; (ldr fp, [sp], #4)
 6b4:	bx	lr
 6b8:	andeq	r0, r0, r4, lsr r3
 6bc:	andeq	r0, r0, ip, lsr #6
 6c0:	andeq	r0, r0, r4, lsr #6
 6c4:	andeq	r0, r0, ip, lsl r3
 6c8:	push	{r4, r5, fp, lr}
 6cc:	add	fp, sp, #12
 6d0:	sub	sp, sp, #32
 6d4:	str	r0, [fp, #-40]	; 0xffffffd8
 6d8:	str	r1, [fp, #-44]	; 0xffffffd4
 6dc:	ldr	r4, [pc, #448]	; 8a4 <strtoumax@plt+0x3f4>
 6e0:	add	r4, pc, r4
 6e4:	mov	r3, #0
 6e8:	str	r3, [fp, #-16]
 6ec:	mov	r2, #0
 6f0:	mov	r3, #0
 6f4:	strd	r2, [fp, #-28]	; 0xffffffe4
 6f8:	ldr	r3, [fp, #-44]	; 0xffffffd4
 6fc:	ldrb	r3, [r3]
 700:	cmp	r3, #48	; 0x30
 704:	bne	714 <strtoumax@plt+0x264>
 708:	mov	r3, #2
 70c:	str	r3, [fp, #-20]	; 0xffffffec
 710:	b	82c <strtoumax@plt+0x37c>
 714:	ldr	r3, [fp, #-44]	; 0xffffffd4
 718:	ldrb	r3, [r3]
 71c:	cmp	r3, #76	; 0x4c
 720:	bne	730 <strtoumax@plt+0x280>
 724:	mov	r3, #1
 728:	str	r3, [fp, #-20]	; 0xffffffec
 72c:	b	82c <strtoumax@plt+0x37c>
 730:	mov	r3, #0
 734:	str	r3, [fp, #-20]	; 0xffffffec
 738:	sub	r3, fp, #32
 73c:	mov	r2, #10
 740:	mov	r1, r3
 744:	ldr	r0, [fp, #-44]	; 0xffffffd4
 748:	bl	4b0 <strtoumax@plt>
 74c:	strd	r0, [fp, #-28]	; 0xffffffe4
 750:	ldrd	r2, [fp, #-28]	; 0xffffffe4
 754:	orrs	r3, r2, r3
 758:	beq	76c <strtoumax@plt+0x2bc>
 75c:	ldr	r3, [fp, #-32]	; 0xffffffe0
 760:	ldrb	r3, [r3]
 764:	cmp	r3, #0
 768:	beq	7b8 <strtoumax@plt+0x308>
 76c:	ldr	r3, [pc, #308]	; 8a8 <strtoumax@plt+0x3f8>
 770:	ldr	r3, [r4, r3]
 774:	ldr	r4, [r3]
 778:	ldr	r3, [pc, #300]	; 8ac <strtoumax@plt+0x3fc>
 77c:	add	r3, pc, r3
 780:	mov	r0, r3
 784:	bl	480 <gettext@plt>
 788:	mov	r5, r0
 78c:	ldr	r0, [fp, #-40]	; 0xffffffd8
 790:	bl	4a4 <fileno@plt>
 794:	mov	r3, r0
 798:	mov	r0, r3
 79c:	bl	630 <strtoumax@plt+0x180>
 7a0:	mov	r3, r0
 7a4:	ldr	r2, [fp, #-44]	; 0xffffffd4
 7a8:	mov	r1, r5
 7ac:	mov	r0, r4
 7b0:	bl	48c <fprintf@plt>
 7b4:	b	89c <strtoumax@plt+0x3ec>
 7b8:	ldrd	r2, [fp, #-28]	; 0xffffffe4
 7bc:	mvn	r0, #0
 7c0:	mov	r1, #0
 7c4:	cmp	r3, r1
 7c8:	cmpeq	r2, r0
 7cc:	bhi	7e4 <strtoumax@plt+0x334>
 7d0:	ldr	r3, [fp, #-28]	; 0xffffffe4
 7d4:	mov	r0, r3
 7d8:	bl	468 <malloc@plt>
 7dc:	mov	r3, r0
 7e0:	b	7e8 <strtoumax@plt+0x338>
 7e4:	mov	r3, #0
 7e8:	str	r3, [fp, #-16]
 7ec:	ldr	r3, [fp, #-16]
 7f0:	cmp	r3, #0
 7f4:	bne	82c <strtoumax@plt+0x37c>
 7f8:	ldr	r3, [pc, #168]	; 8a8 <strtoumax@plt+0x3f8>
 7fc:	ldr	r3, [r4, r3]
 800:	ldr	r4, [r3]
 804:	ldr	r3, [pc, #164]	; 8b0 <strtoumax@plt+0x400>
 808:	add	r3, pc, r3
 80c:	mov	r0, r3
 810:	bl	480 <gettext@plt>
 814:	mov	r1, r0
 818:	ldrd	r2, [fp, #-28]	; 0xffffffe4
 81c:	mov	r0, r4
 820:	bl	48c <fprintf@plt>
 824:	nop			; (mov r0, r0)
 828:	b	89c <strtoumax@plt+0x3ec>
 82c:	ldr	r3, [fp, #-28]	; 0xffffffe4
 830:	ldr	r2, [fp, #-20]	; 0xffffffec
 834:	ldr	r1, [fp, #-16]
 838:	ldr	r0, [fp, #-40]	; 0xffffffd8
 83c:	bl	498 <setvbuf@plt>
 840:	mov	r3, r0
 844:	cmp	r3, #0
 848:	beq	89c <strtoumax@plt+0x3ec>
 84c:	ldr	r3, [pc, #84]	; 8a8 <strtoumax@plt+0x3f8>
 850:	ldr	r3, [r4, r3]
 854:	ldr	r4, [r3]
 858:	ldr	r3, [pc, #84]	; 8b4 <strtoumax@plt+0x404>
 85c:	add	r3, pc, r3
 860:	mov	r0, r3
 864:	bl	480 <gettext@plt>
 868:	mov	r5, r0
 86c:	ldr	r0, [fp, #-40]	; 0xffffffd8
 870:	bl	4a4 <fileno@plt>
 874:	mov	r3, r0
 878:	mov	r0, r3
 87c:	bl	630 <strtoumax@plt+0x180>
 880:	mov	r2, r0
 884:	ldr	r3, [fp, #-44]	; 0xffffffd4
 888:	mov	r1, r5
 88c:	mov	r0, r4
 890:	bl	48c <fprintf@plt>
 894:	ldr	r0, [fp, #-16]
 898:	bl	450 <free@plt>
 89c:	sub	sp, fp, #12
 8a0:	pop	{r4, r5, fp, pc}
 8a4:	andeq	r0, r1, r8, lsl r9
 8a8:	andeq	r0, r0, ip, lsr r0
 8ac:	andeq	r0, r0, r0, asr #4
 8b0:	ldrdeq	r0, [r0], -r8
 8b4:			; <UNDEFINED> instruction: 0x000001b4
 8b8:	push	{r4, fp, lr}
 8bc:	add	fp, sp, #8
 8c0:	sub	sp, sp, #20
 8c4:	ldr	r4, [pc, #180]	; 980 <strtoumax@plt+0x4d0>
 8c8:	add	r4, pc, r4
 8cc:	ldr	r3, [pc, #176]	; 984 <strtoumax@plt+0x4d4>
 8d0:	add	r3, pc, r3
 8d4:	mov	r0, r3
 8d8:	bl	45c <getenv@plt>
 8dc:	str	r0, [fp, #-16]
 8e0:	ldr	r3, [pc, #160]	; 988 <strtoumax@plt+0x4d8>
 8e4:	add	r3, pc, r3
 8e8:	mov	r0, r3
 8ec:	bl	45c <getenv@plt>
 8f0:	str	r0, [fp, #-20]	; 0xffffffec
 8f4:	ldr	r3, [pc, #144]	; 98c <strtoumax@plt+0x4dc>
 8f8:	add	r3, pc, r3
 8fc:	mov	r0, r3
 900:	bl	45c <getenv@plt>
 904:	str	r0, [fp, #-24]	; 0xffffffe8
 908:	ldr	r3, [fp, #-16]
 90c:	cmp	r3, #0
 910:	beq	92c <strtoumax@plt+0x47c>
 914:	ldr	r3, [pc, #116]	; 990 <strtoumax@plt+0x4e0>
 918:	ldr	r3, [r4, r3]
 91c:	ldr	r3, [r3]
 920:	ldr	r1, [fp, #-16]
 924:	mov	r0, r3
 928:	bl	6c8 <strtoumax@plt+0x218>
 92c:	ldr	r3, [fp, #-20]	; 0xffffffec
 930:	cmp	r3, #0
 934:	beq	950 <strtoumax@plt+0x4a0>
 938:	ldr	r3, [pc, #84]	; 994 <strtoumax@plt+0x4e4>
 93c:	ldr	r3, [r4, r3]
 940:	ldr	r3, [r3]
 944:	ldr	r1, [fp, #-20]	; 0xffffffec
 948:	mov	r0, r3
 94c:	bl	6c8 <strtoumax@plt+0x218>
 950:	ldr	r3, [fp, #-24]	; 0xffffffe8
 954:	cmp	r3, #0
 958:	beq	974 <strtoumax@plt+0x4c4>
 95c:	ldr	r3, [pc, #52]	; 998 <strtoumax@plt+0x4e8>
 960:	ldr	r3, [r4, r3]
 964:	ldr	r3, [r3]
 968:	ldr	r1, [fp, #-24]	; 0xffffffe8
 96c:	mov	r0, r3
 970:	bl	6c8 <strtoumax@plt+0x218>
 974:	nop			; (mov r0, r0)
 978:	sub	sp, fp, #8
 97c:	pop	{r4, fp, pc}
 980:	andeq	r0, r1, r0, lsr r7
 984:	andeq	r0, r0, ip, ror #2
 988:	andeq	r0, r0, r4, ror #2
 98c:	andeq	r0, r0, ip, asr r1
 990:	andeq	r0, r0, ip, lsr r0
 994:	andeq	r0, r0, r4, asr #32
 998:	andeq	r0, r0, r8, asr #32

Disassembly of section .fini:

0000099c <.fini>:
 99c:	push	{r3, lr}
 9a0:	pop	{r3, pc}
