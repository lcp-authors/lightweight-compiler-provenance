
../repos/charybdis/modules/.libs/m_links.so:     file format elf32-littlearm


Disassembly of section .init:

0000056c <_init>:
 56c:	push	{r3, lr}
 570:	bl	5f8 <call_weak_fn>
 574:	pop	{r3, pc}

Disassembly of section .plt:

00000578 <.plt>:
 578:	push	{lr}		; (str lr, [sp, #-4]!)
 57c:	ldr	lr, [pc, #4]	; 588 <.plt+0x10>
 580:	add	lr, pc, lr
 584:	ldr	pc, [lr, #8]!
 588:	.word	0x00010a78

0000058c <__cxa_finalize@plt>:
 58c:	add	ip, pc, #0, 12
 590:	add	ip, ip, #16, 20	; 0x10000
 594:	ldr	pc, [ip, #2680]!	; 0xa78

00000598 <scache_send_flattened_links@plt>:
 598:	add	ip, pc, #0, 12
 59c:	add	ip, ip, #16, 20	; 0x10000
 5a0:	ldr	pc, [ip, #2672]!	; 0xa70

000005a4 <hunt_server@plt>:
 5a4:	add	ip, pc, #0, 12
 5a8:	add	ip, ip, #16, 20	; 0x10000
 5ac:	ldr	pc, [ip, #2664]!	; 0xa68

000005b0 <__gmon_start__@plt>:
 5b0:	add	ip, pc, #0, 12
 5b4:	add	ip, ip, #16, 20	; 0x10000
 5b8:	ldr	pc, [ip, #2656]!	; 0xa60

000005bc <sendto_one_numeric@plt>:
 5bc:	add	ip, pc, #0, 12
 5c0:	add	ip, ip, #16, 20	; 0x10000
 5c4:	ldr	pc, [ip, #2648]!	; 0xa58

000005c8 <strlen@plt>:
 5c8:	add	ip, pc, #0, 12
 5cc:	add	ip, ip, #16, 20	; 0x10000
 5d0:	ldr	pc, [ip, #2640]!	; 0xa50

000005d4 <collapse@plt>:
 5d4:	add	ip, pc, #0, 12
 5d8:	add	ip, ip, #16, 20	; 0x10000
 5dc:	ldr	pc, [ip, #2632]!	; 0xa48

000005e0 <match@plt>:
 5e0:	add	ip, pc, #0, 12
 5e4:	add	ip, ip, #16, 20	; 0x10000
 5e8:	ldr	pc, [ip, #2624]!	; 0xa40

000005ec <call_hook@plt>:
 5ec:	add	ip, pc, #0, 12
 5f0:	add	ip, ip, #16, 20	; 0x10000
 5f4:	ldr	pc, [ip, #2616]!	; 0xa38

Disassembly of section .text:

000005f8 <call_weak_fn>:
 5f8:	ldr	r3, [pc, #20]	; 614 <call_weak_fn+0x1c>
 5fc:	ldr	r2, [pc, #20]	; 618 <call_weak_fn+0x20>
 600:	add	r3, pc, r3
 604:	ldr	r2, [r3, r2]
 608:	cmp	r2, #0
 60c:	bxeq	lr
 610:	b	5b0 <__gmon_start__@plt>
 614:	.word	0x000109f8
 618:	.word	0x00000040

0000061c <deregister_tm_clones>:
 61c:	ldr	r3, [pc, #52]	; 658 <deregister_tm_clones+0x3c>
 620:	ldr	r0, [pc, #52]	; 65c <deregister_tm_clones+0x40>
 624:	add	r3, pc, r3
 628:	add	r0, pc, r0
 62c:	add	r3, r3, #3
 630:	sub	r3, r3, r0
 634:	cmp	r3, #6
 638:	ldr	r3, [pc, #32]	; 660 <deregister_tm_clones+0x44>
 63c:	add	r3, pc, r3
 640:	bxls	lr
 644:	ldr	r2, [pc, #24]	; 664 <deregister_tm_clones+0x48>
 648:	ldr	r3, [r3, r2]
 64c:	cmp	r3, #0
 650:	bxeq	lr
 654:	bx	r3
 658:	.word	0x00010ab0
 65c:	.word	0x00010aac
 660:	.word	0x000109bc
 664:	.word	0x00000038

00000668 <register_tm_clones>:
 668:	ldr	r1, [pc, #56]	; 6a8 <register_tm_clones+0x40>
 66c:	ldr	r0, [pc, #56]	; 6ac <register_tm_clones+0x44>
 670:	add	r1, pc, r1
 674:	add	r0, pc, r0
 678:	sub	r1, r1, r0
 67c:	ldr	r3, [pc, #44]	; 6b0 <register_tm_clones+0x48>
 680:	asr	r1, r1, #2
 684:	add	r3, pc, r3
 688:	add	r1, r1, r1, lsr #31
 68c:	asrs	r1, r1, #1
 690:	bxeq	lr
 694:	ldr	r2, [pc, #24]	; 6b4 <register_tm_clones+0x4c>
 698:	ldr	r3, [r3, r2]
 69c:	cmp	r3, #0
 6a0:	bxeq	lr
 6a4:	bx	r3
 6a8:	.word	0x00010a64
 6ac:	.word	0x00010a60
 6b0:	.word	0x00010974
 6b4:	.word	0x00000050

000006b8 <__do_global_dtors_aux>:
 6b8:	ldr	r3, [pc, #76]	; 70c <__do_global_dtors_aux+0x54>
 6bc:	ldr	r2, [pc, #76]	; 710 <__do_global_dtors_aux+0x58>
 6c0:	add	r3, pc, r3
 6c4:	add	r2, pc, r2
 6c8:	ldrb	r3, [r3]
 6cc:	cmp	r3, #0
 6d0:	bxne	lr
 6d4:	ldr	r3, [pc, #56]	; 714 <__do_global_dtors_aux+0x5c>
 6d8:	push	{r4, lr}
 6dc:	ldr	r3, [r2, r3]
 6e0:	cmp	r3, #0
 6e4:	beq	6f4 <__do_global_dtors_aux+0x3c>
 6e8:	ldr	r3, [pc, #40]	; 718 <__do_global_dtors_aux+0x60>
 6ec:	ldr	r0, [pc, r3]
 6f0:	bl	58c <__cxa_finalize@plt>
 6f4:	bl	61c <deregister_tm_clones>
 6f8:	ldr	r3, [pc, #28]	; 71c <__do_global_dtors_aux+0x64>
 6fc:	mov	r2, #1
 700:	add	r3, pc, r3
 704:	strb	r2, [r3]
 708:	pop	{r4, pc}
 70c:	.word	0x00010a14
 710:	.word	0x00010934
 714:	.word	0x00000034
 718:	.word	0x00010960
 71c:	.word	0x000109d4

00000720 <frame_dummy>:
 720:	ldr	r0, [pc, #56]	; 760 <frame_dummy+0x40>
 724:	ldr	r3, [pc, #56]	; 764 <frame_dummy+0x44>
 728:	add	r0, pc, r0
 72c:	ldr	r2, [r0]
 730:	add	r3, pc, r3
 734:	cmp	r2, #0
 738:	bne	740 <frame_dummy+0x20>
 73c:	b	668 <register_tm_clones>
 740:	ldr	r2, [pc, #32]	; 768 <frame_dummy+0x48>
 744:	ldr	r3, [r3, r2]
 748:	cmp	r3, #0
 74c:	beq	73c <frame_dummy+0x1c>
 750:	push	{r4, lr}
 754:	blx	r3
 758:	pop	{r4, lr}
 75c:	b	668 <register_tm_clones>
 760:	.word	0x000107cc
 764:	.word	0x000108c8
 768:	.word	0x00000048

0000076c <m_links>:
 76c:	push	{fp, lr}
 770:	add	fp, sp, #4
 774:	sub	sp, sp, #24
 778:	str	r0, [fp, #-8]
 77c:	str	r1, [fp, #-12]
 780:	str	r2, [fp, #-16]
 784:	str	r3, [fp, #-20]	; 0xffffffec
 788:	ldr	r2, [pc, #104]	; 7f8 <m_links+0x8c>
 78c:	add	r2, pc, r2
 790:	ldr	r3, [pc, #100]	; 7fc <m_links+0x90>
 794:	ldr	r3, [r2, r3]
 798:	ldr	r3, [r3]
 79c:	cmp	r3, #0
 7a0:	beq	7d0 <m_links+0x64>
 7a4:	ldr	r3, [fp, #-16]
 7a8:	ldrd	r2, [r3, #64]	; 0x40
 7ac:	mov	r0, #67108864	; 0x4000000
 7b0:	mov	r1, #0
 7b4:	and	r2, r2, r0
 7b8:	and	r3, r3, r1
 7bc:	orrs	r3, r2, r3
 7c0:	bne	7d0 <m_links+0x64>
 7c4:	ldr	r0, [fp, #-16]
 7c8:	bl	598 <scache_send_flattened_links@plt>
 7cc:	b	7ec <m_links+0x80>
 7d0:	ldr	r3, [fp, #4]
 7d4:	str	r3, [sp]
 7d8:	ldr	r3, [fp, #-20]	; 0xffffffec
 7dc:	ldr	r2, [fp, #-16]
 7e0:	ldr	r1, [fp, #-12]
 7e4:	ldr	r0, [fp, #-8]
 7e8:	bl	800 <mo_links>
 7ec:	nop			; (mov r0, r0)
 7f0:	sub	sp, fp, #4
 7f4:	pop	{fp, pc}
 7f8:	.word	0x0001086c
 7fc:	.word	0x0000003c

00000800 <mo_links>:
 800:	push	{r4, fp, lr}
 804:	add	fp, sp, #8
 808:	sub	sp, sp, #196	; 0xc4
 80c:	str	r0, [fp, #-176]	; 0xffffff50
 810:	str	r1, [fp, #-180]	; 0xffffff4c
 814:	str	r2, [fp, #-184]	; 0xffffff48
 818:	str	r3, [fp, #-188]	; 0xffffff44
 81c:	ldr	r4, [pc, #556]	; a50 <mo_links+0x250>
 820:	add	r4, pc, r4
 824:	ldr	r3, [pc, #552]	; a54 <mo_links+0x254>
 828:	add	r3, pc, r3
 82c:	str	r3, [fp, #-16]
 830:	ldr	r3, [fp, #-188]	; 0xffffff44
 834:	cmp	r3, #2
 838:	ble	8a0 <mo_links+0xa0>
 83c:	ldr	r3, [fp, #4]
 840:	add	r3, r3, #8
 844:	ldr	r3, [r3]
 848:	mov	r0, r3
 84c:	bl	5c8 <strlen@plt>
 850:	mov	r3, r0
 854:	cmp	r3, #63	; 0x3f
 858:	bhi	a3c <mo_links+0x23c>
 85c:	ldr	r3, [fp, #4]
 860:	str	r3, [sp, #4]
 864:	ldr	r3, [fp, #-188]	; 0xffffff44
 868:	str	r3, [sp]
 86c:	mov	r3, #1
 870:	ldr	r2, [pc, #480]	; a58 <mo_links+0x258>
 874:	add	r2, pc, r2
 878:	ldr	r1, [fp, #-184]	; 0xffffff48
 87c:	ldr	r0, [fp, #-180]	; 0xffffff4c
 880:	bl	5a4 <hunt_server@plt>
 884:	mov	r3, r0
 888:	cmp	r3, #0
 88c:	bne	a44 <mo_links+0x244>
 890:	ldr	r3, [fp, #4]
 894:	ldr	r3, [r3, #8]
 898:	str	r3, [fp, #-16]
 89c:	b	8b8 <mo_links+0xb8>
 8a0:	ldr	r3, [fp, #-188]	; 0xffffff44
 8a4:	cmp	r3, #2
 8a8:	bne	8b8 <mo_links+0xb8>
 8ac:	ldr	r3, [fp, #4]
 8b0:	ldr	r3, [r3, #4]
 8b4:	str	r3, [fp, #-16]
 8b8:	ldr	r3, [fp, #-16]
 8bc:	ldrb	r3, [r3]
 8c0:	cmp	r3, #0
 8c4:	beq	8ec <mo_links+0xec>
 8c8:	sub	r3, fp, #156	; 0x9c
 8cc:	mov	r2, #126	; 0x7e
 8d0:	ldr	r1, [fp, #-16]
 8d4:	mov	r0, r3
 8d8:	bl	a78 <clean_string>
 8dc:	mov	r3, r0
 8e0:	mov	r0, r3
 8e4:	bl	5d4 <collapse@plt>
 8e8:	str	r0, [fp, #-16]
 8ec:	ldr	r3, [fp, #-184]	; 0xffffff48
 8f0:	str	r3, [fp, #-168]	; 0xffffff58
 8f4:	ldr	r3, [fp, #-16]
 8f8:	str	r3, [fp, #-164]	; 0xffffff5c
 8fc:	mov	r3, #0
 900:	str	r3, [fp, #-160]	; 0xffffff60
 904:	ldr	r3, [pc, #336]	; a5c <mo_links+0x25c>
 908:	ldr	r3, [r4, r3]
 90c:	ldr	r3, [r3]
 910:	sub	r2, fp, #168	; 0xa8
 914:	mov	r1, r2
 918:	mov	r0, r3
 91c:	bl	5ec <call_hook@plt>
 920:	ldr	r3, [pc, #312]	; a60 <mo_links+0x260>
 924:	ldr	r3, [r4, r3]
 928:	ldr	r3, [r3]
 92c:	str	r3, [fp, #-20]	; 0xffffffec
 930:	b	9ec <mo_links+0x1ec>
 934:	ldr	r3, [fp, #-20]	; 0xffffffec
 938:	ldr	r3, [r3]
 93c:	str	r3, [fp, #-24]	; 0xffffffe8
 940:	ldr	r3, [fp, #-16]
 944:	ldrb	r3, [r3]
 948:	cmp	r3, #0
 94c:	beq	970 <mo_links+0x170>
 950:	ldr	r3, [fp, #-24]	; 0xffffffe8
 954:	add	r3, r3, #88	; 0x58
 958:	mov	r1, r3
 95c:	ldr	r0, [fp, #-16]
 960:	bl	5e0 <match@plt>
 964:	mov	r3, r0
 968:	cmp	r3, #0
 96c:	beq	9dc <mo_links+0x1dc>
 970:	ldr	r3, [fp, #-24]	; 0xffffffe8
 974:	add	r0, r3, #88	; 0x58
 978:	ldr	r3, [fp, #-24]	; 0xffffffe8
 97c:	ldr	r3, [r3, #32]
 980:	add	r2, r3, #88	; 0x58
 984:	ldr	r3, [fp, #-24]	; 0xffffffe8
 988:	ldr	r1, [r3, #76]	; 0x4c
 98c:	ldr	r3, [fp, #-24]	; 0xffffffe8
 990:	ldrb	r3, [r3, #345]	; 0x159
 994:	cmp	r3, #0
 998:	beq	9ac <mo_links+0x1ac>
 99c:	ldr	r3, [fp, #-24]	; 0xffffffe8
 9a0:	add	r3, r3, #344	; 0x158
 9a4:	add	r3, r3, #1
 9a8:	b	9b4 <mo_links+0x1b4>
 9ac:	ldr	r3, [pc, #176]	; a64 <mo_links+0x264>
 9b0:	add	r3, pc, r3
 9b4:	str	r3, [sp, #8]
 9b8:	str	r1, [sp, #4]
 9bc:	str	r2, [sp]
 9c0:	mov	r3, r0
 9c4:	ldr	r2, [pc, #156]	; a68 <mo_links+0x268>
 9c8:	add	r2, pc, r2
 9cc:	mov	r1, #364	; 0x16c
 9d0:	ldr	r0, [fp, #-184]	; 0xffffff48
 9d4:	bl	5bc <sendto_one_numeric@plt>
 9d8:	b	9e0 <mo_links+0x1e0>
 9dc:	nop			; (mov r0, r0)
 9e0:	ldr	r3, [fp, #-20]	; 0xffffffec
 9e4:	ldr	r3, [r3, #8]
 9e8:	str	r3, [fp, #-20]	; 0xffffffec
 9ec:	ldr	r3, [fp, #-20]	; 0xffffffec
 9f0:	cmp	r3, #0
 9f4:	bne	934 <mo_links+0x134>
 9f8:	ldr	r3, [fp, #-16]
 9fc:	cmp	r3, #0
 a00:	beq	a1c <mo_links+0x21c>
 a04:	ldr	r3, [fp, #-16]
 a08:	ldrb	r3, [r3]
 a0c:	cmp	r3, #0
 a10:	beq	a1c <mo_links+0x21c>
 a14:	ldr	r3, [fp, #-16]
 a18:	b	a24 <mo_links+0x224>
 a1c:	ldr	r3, [pc, #72]	; a6c <mo_links+0x26c>
 a20:	add	r3, pc, r3
 a24:	ldr	r2, [pc, #68]	; a70 <mo_links+0x270>
 a28:	add	r2, pc, r2
 a2c:	ldr	r1, [pc, #64]	; a74 <mo_links+0x274>
 a30:	ldr	r0, [fp, #-184]	; 0xffffff48
 a34:	bl	5bc <sendto_one_numeric@plt>
 a38:	b	a48 <mo_links+0x248>
 a3c:	nop			; (mov r0, r0)
 a40:	b	a48 <mo_links+0x248>
 a44:	nop			; (mov r0, r0)
 a48:	sub	sp, fp, #8
 a4c:	pop	{r4, fp, pc}
 a50:	.word	0x000107d8
 a54:	.word	0x00000428
 a58:	.word	0x000003e0
 a5c:	.word	0x0000004c
 a60:	.word	0x00000030
 a64:	.word	0x000002b8
 a68:	.word	0x000002b4
 a6c:	.word	0x0000026c
 a70:	.word	0x00000268
 a74:	.word	0x0000016d

00000a78 <clean_string>:
 a78:	push	{fp}		; (str fp, [sp, #-4]!)
 a7c:	add	fp, sp, #0
 a80:	sub	sp, sp, #28
 a84:	str	r0, [fp, #-16]
 a88:	str	r1, [fp, #-20]	; 0xffffffec
 a8c:	str	r2, [fp, #-24]	; 0xffffffe8
 a90:	ldr	r2, [pc, #340]	; bec <clean_string+0x174>
 a94:	add	r2, pc, r2
 a98:	ldr	r3, [fp, #-16]
 a9c:	str	r3, [fp, #-8]
 aa0:	ldr	r3, [fp, #-16]
 aa4:	cmp	r3, #0
 aa8:	beq	ab8 <clean_string+0x40>
 aac:	ldr	r3, [fp, #-20]	; 0xffffffec
 ab0:	cmp	r3, #0
 ab4:	bne	ba8 <clean_string+0x130>
 ab8:	mov	r3, #0
 abc:	b	bdc <clean_string+0x164>
 ac0:	ldr	r3, [fp, #-20]	; 0xffffffec
 ac4:	ldrb	r3, [r3]
 ac8:	sxtb	r3, r3
 acc:	cmp	r3, #0
 ad0:	bge	b04 <clean_string+0x8c>
 ad4:	ldr	r3, [fp, #-8]
 ad8:	add	r1, r3, #1
 adc:	str	r1, [fp, #-8]
 ae0:	mov	r1, #46	; 0x2e
 ae4:	strb	r1, [r3]
 ae8:	ldr	r3, [fp, #-24]	; 0xffffffe8
 aec:	sub	r3, r3, #1
 af0:	str	r3, [fp, #-24]	; 0xffffffe8
 af4:	ldr	r3, [fp, #-24]	; 0xffffffe8
 af8:	cmp	r3, #1
 afc:	bhi	b90 <clean_string+0x118>
 b00:	b	bcc <clean_string+0x154>
 b04:	ldr	r3, [fp, #-20]	; 0xffffffec
 b08:	ldrb	r3, [r3]
 b0c:	mov	r1, r3
 b10:	ldr	r3, [pc, #216]	; bf0 <clean_string+0x178>
 b14:	ldr	r3, [r2, r3]
 b18:	ldr	r3, [r3, r1, lsl #2]
 b1c:	and	r3, r3, #1
 b20:	cmp	r3, #0
 b24:	bne	b78 <clean_string+0x100>
 b28:	ldr	r3, [fp, #-8]
 b2c:	add	r1, r3, #1
 b30:	str	r1, [fp, #-8]
 b34:	mov	r1, #94	; 0x5e
 b38:	strb	r1, [r3]
 b3c:	ldr	r3, [fp, #-24]	; 0xffffffe8
 b40:	sub	r3, r3, #1
 b44:	str	r3, [fp, #-24]	; 0xffffffe8
 b48:	ldr	r3, [fp, #-24]	; 0xffffffe8
 b4c:	cmp	r3, #1
 b50:	bls	bc8 <clean_string+0x150>
 b54:	ldr	r3, [fp, #-8]
 b58:	add	r1, r3, #1
 b5c:	str	r1, [fp, #-8]
 b60:	ldr	r1, [fp, #-20]	; 0xffffffec
 b64:	ldrb	r1, [r1]
 b68:	add	r1, r1, #64	; 0x40
 b6c:	uxtb	r1, r1
 b70:	strb	r1, [r3]
 b74:	b	b90 <clean_string+0x118>
 b78:	ldr	r3, [fp, #-8]
 b7c:	add	r1, r3, #1
 b80:	str	r1, [fp, #-8]
 b84:	ldr	r1, [fp, #-20]	; 0xffffffec
 b88:	ldrb	r1, [r1]
 b8c:	strb	r1, [r3]
 b90:	ldr	r3, [fp, #-20]	; 0xffffffec
 b94:	add	r3, r3, #1
 b98:	str	r3, [fp, #-20]	; 0xffffffec
 b9c:	ldr	r3, [fp, #-24]	; 0xffffffe8
 ba0:	sub	r3, r3, #1
 ba4:	str	r3, [fp, #-24]	; 0xffffffe8
 ba8:	ldr	r3, [fp, #-20]	; 0xffffffec
 bac:	ldrb	r3, [r3]
 bb0:	cmp	r3, #0
 bb4:	beq	bcc <clean_string+0x154>
 bb8:	ldr	r3, [fp, #-24]	; 0xffffffe8
 bbc:	cmp	r3, #1
 bc0:	bhi	ac0 <clean_string+0x48>
 bc4:	b	bcc <clean_string+0x154>
 bc8:	nop			; (mov r0, r0)
 bcc:	ldr	r3, [fp, #-8]
 bd0:	mov	r2, #0
 bd4:	strb	r2, [r3]
 bd8:	ldr	r3, [fp, #-16]
 bdc:	mov	r0, r3
 be0:	add	sp, fp, #0
 be4:	pop	{fp}		; (ldr fp, [sp], #4)
 be8:	bx	lr
 bec:	.word	0x00010564
 bf0:	.word	0x00000044

Disassembly of section .fini:

00000bf4 <_fini>:
 bf4:	push	{r3, lr}
 bf8:	pop	{r3, pc}
