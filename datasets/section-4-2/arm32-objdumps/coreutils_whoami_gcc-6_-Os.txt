
../repos/coreutils/src/whoami:     file format elf32-littlearm


Disassembly of section .init:

00010b6c <.init>:
   10b6c:	push	{r3, lr}
   10b70:	bl	10f6c <abort@plt+0x1b8>
   10b74:	pop	{r3, pc}

Disassembly of section .plt:

00010b78 <calloc@plt-0x14>:
   10b78:	push	{lr}		; (str lr, [sp, #-4]!)
   10b7c:	ldr	lr, [pc, #4]	; 10b88 <calloc@plt-0x4>
   10b80:	add	lr, pc, lr
   10b84:	ldr	pc, [lr, #8]!
   10b88:	andeq	r4, r1, r8, ror r4

00010b8c <calloc@plt>:
   10b8c:	add	ip, pc, #0, 12
   10b90:	add	ip, ip, #20, 20	; 0x14000
   10b94:	ldr	pc, [ip, #1144]!	; 0x478

00010b98 <fputs_unlocked@plt>:
   10b98:	add	ip, pc, #0, 12
   10b9c:	add	ip, ip, #20, 20	; 0x14000
   10ba0:	ldr	pc, [ip, #1136]!	; 0x470

00010ba4 <raise@plt>:
   10ba4:	add	ip, pc, #0, 12
   10ba8:	add	ip, ip, #20, 20	; 0x14000
   10bac:	ldr	pc, [ip, #1128]!	; 0x468

00010bb0 <strcmp@plt>:
   10bb0:	add	ip, pc, #0, 12
   10bb4:	add	ip, ip, #20, 20	; 0x14000
   10bb8:	ldr	pc, [ip, #1120]!	; 0x460

00010bbc <getpwuid@plt>:
   10bbc:	add	ip, pc, #0, 12
   10bc0:	add	ip, ip, #20, 20	; 0x14000
   10bc4:	ldr	pc, [ip, #1112]!	; 0x458

00010bc8 <fflush@plt>:
   10bc8:	add	ip, pc, #0, 12
   10bcc:	add	ip, ip, #20, 20	; 0x14000
   10bd0:	ldr	pc, [ip, #1104]!	; 0x450

00010bd4 <free@plt>:
   10bd4:	add	ip, pc, #0, 12
   10bd8:	add	ip, ip, #20, 20	; 0x14000
   10bdc:	ldr	pc, [ip, #1096]!	; 0x448

00010be0 <_exit@plt>:
   10be0:	add	ip, pc, #0, 12
   10be4:	add	ip, ip, #20, 20	; 0x14000
   10be8:	ldr	pc, [ip, #1088]!	; 0x440

00010bec <memcpy@plt>:
   10bec:	add	ip, pc, #0, 12
   10bf0:	add	ip, ip, #20, 20	; 0x14000
   10bf4:	ldr	pc, [ip, #1080]!	; 0x438

00010bf8 <mbsinit@plt>:
   10bf8:	add	ip, pc, #0, 12
   10bfc:	add	ip, ip, #20, 20	; 0x14000
   10c00:	ldr	pc, [ip, #1072]!	; 0x430

00010c04 <memcmp@plt>:
   10c04:	add	ip, pc, #0, 12
   10c08:	add	ip, ip, #20, 20	; 0x14000
   10c0c:	ldr	pc, [ip, #1064]!	; 0x428

00010c10 <fputc_unlocked@plt>:
   10c10:	add	ip, pc, #0, 12
   10c14:	add	ip, ip, #20, 20	; 0x14000
   10c18:	ldr	pc, [ip, #1056]!	; 0x420

00010c1c <dcgettext@plt>:
   10c1c:	add	ip, pc, #0, 12
   10c20:	add	ip, ip, #20, 20	; 0x14000
   10c24:	ldr	pc, [ip, #1048]!	; 0x418

00010c28 <realloc@plt>:
   10c28:	add	ip, pc, #0, 12
   10c2c:	add	ip, ip, #20, 20	; 0x14000
   10c30:	ldr	pc, [ip, #1040]!	; 0x410

00010c34 <textdomain@plt>:
   10c34:	add	ip, pc, #0, 12
   10c38:	add	ip, ip, #20, 20	; 0x14000
   10c3c:	ldr	pc, [ip, #1032]!	; 0x408

00010c40 <geteuid@plt>:
   10c40:	add	ip, pc, #0, 12
   10c44:	add	ip, ip, #20, 20	; 0x14000
   10c48:	ldr	pc, [ip, #1024]!	; 0x400

00010c4c <iswprint@plt>:
   10c4c:	add	ip, pc, #0, 12
   10c50:	add	ip, ip, #20, 20	; 0x14000
   10c54:	ldr	pc, [ip, #1016]!	; 0x3f8

00010c58 <lseek64@plt>:
   10c58:	add	ip, pc, #0, 12
   10c5c:	add	ip, ip, #20, 20	; 0x14000
   10c60:	ldr	pc, [ip, #1008]!	; 0x3f0

00010c64 <__ctype_get_mb_cur_max@plt>:
   10c64:	add	ip, pc, #0, 12
   10c68:	add	ip, ip, #20, 20	; 0x14000
   10c6c:	ldr	pc, [ip, #1000]!	; 0x3e8

00010c70 <__fpending@plt>:
   10c70:	add	ip, pc, #0, 12
   10c74:	add	ip, ip, #20, 20	; 0x14000
   10c78:	ldr	pc, [ip, #992]!	; 0x3e0

00010c7c <ferror_unlocked@plt>:
   10c7c:	add	ip, pc, #0, 12
   10c80:	add	ip, ip, #20, 20	; 0x14000
   10c84:	ldr	pc, [ip, #984]!	; 0x3d8

00010c88 <mbrtowc@plt>:
   10c88:	add	ip, pc, #0, 12
   10c8c:	add	ip, ip, #20, 20	; 0x14000
   10c90:	ldr	pc, [ip, #976]!	; 0x3d0

00010c94 <error@plt>:
   10c94:	add	ip, pc, #0, 12
   10c98:	add	ip, ip, #20, 20	; 0x14000
   10c9c:	ldr	pc, [ip, #968]!	; 0x3c8

00010ca0 <puts@plt>:
   10ca0:	add	ip, pc, #0, 12
   10ca4:	add	ip, ip, #20, 20	; 0x14000
   10ca8:	ldr	pc, [ip, #960]!	; 0x3c0

00010cac <malloc@plt>:
   10cac:	add	ip, pc, #0, 12
   10cb0:	add	ip, ip, #20, 20	; 0x14000
   10cb4:	ldr	pc, [ip, #952]!	; 0x3b8

00010cb8 <__libc_start_main@plt>:
   10cb8:	add	ip, pc, #0, 12
   10cbc:	add	ip, ip, #20, 20	; 0x14000
   10cc0:	ldr	pc, [ip, #944]!	; 0x3b0

00010cc4 <__freading@plt>:
   10cc4:	add	ip, pc, #0, 12
   10cc8:	add	ip, ip, #20, 20	; 0x14000
   10ccc:	ldr	pc, [ip, #936]!	; 0x3a8

00010cd0 <__gmon_start__@plt>:
   10cd0:	add	ip, pc, #0, 12
   10cd4:	add	ip, ip, #20, 20	; 0x14000
   10cd8:	ldr	pc, [ip, #928]!	; 0x3a0

00010cdc <getopt_long@plt>:
   10cdc:	add	ip, pc, #0, 12
   10ce0:	add	ip, ip, #20, 20	; 0x14000
   10ce4:	ldr	pc, [ip, #920]!	; 0x398

00010ce8 <__ctype_b_loc@plt>:
   10ce8:	add	ip, pc, #0, 12
   10cec:	add	ip, ip, #20, 20	; 0x14000
   10cf0:	ldr	pc, [ip, #912]!	; 0x390

00010cf4 <exit@plt>:
   10cf4:	add	ip, pc, #0, 12
   10cf8:	add	ip, ip, #20, 20	; 0x14000
   10cfc:	ldr	pc, [ip, #904]!	; 0x388

00010d00 <strlen@plt>:
   10d00:	add	ip, pc, #0, 12
   10d04:	add	ip, ip, #20, 20	; 0x14000
   10d08:	ldr	pc, [ip, #896]!	; 0x380

00010d0c <__errno_location@plt>:
   10d0c:	add	ip, pc, #0, 12
   10d10:	add	ip, ip, #20, 20	; 0x14000
   10d14:	ldr	pc, [ip, #888]!	; 0x378

00010d18 <__cxa_atexit@plt>:
   10d18:	add	ip, pc, #0, 12
   10d1c:	add	ip, ip, #20, 20	; 0x14000
   10d20:	ldr	pc, [ip, #880]!	; 0x370

00010d24 <memset@plt>:
   10d24:	add	ip, pc, #0, 12
   10d28:	add	ip, ip, #20, 20	; 0x14000
   10d2c:	ldr	pc, [ip, #872]!	; 0x368

00010d30 <__printf_chk@plt>:
   10d30:	add	ip, pc, #0, 12
   10d34:	add	ip, ip, #20, 20	; 0x14000
   10d38:	ldr	pc, [ip, #864]!	; 0x360

00010d3c <fileno@plt>:
   10d3c:	add	ip, pc, #0, 12
   10d40:	add	ip, ip, #20, 20	; 0x14000
   10d44:	ldr	pc, [ip, #856]!	; 0x358

00010d48 <__fprintf_chk@plt>:
   10d48:	add	ip, pc, #0, 12
   10d4c:	add	ip, ip, #20, 20	; 0x14000
   10d50:	ldr	pc, [ip, #848]!	; 0x350

00010d54 <fclose@plt>:
   10d54:	add	ip, pc, #0, 12
   10d58:	add	ip, ip, #20, 20	; 0x14000
   10d5c:	ldr	pc, [ip, #840]!	; 0x348

00010d60 <fseeko64@plt>:
   10d60:	add	ip, pc, #0, 12
   10d64:	add	ip, ip, #20, 20	; 0x14000
   10d68:	ldr	pc, [ip, #832]!	; 0x340

00010d6c <setlocale@plt>:
   10d6c:	add	ip, pc, #0, 12
   10d70:	add	ip, ip, #20, 20	; 0x14000
   10d74:	ldr	pc, [ip, #824]!	; 0x338

00010d78 <strrchr@plt>:
   10d78:	add	ip, pc, #0, 12
   10d7c:	add	ip, ip, #20, 20	; 0x14000
   10d80:	ldr	pc, [ip, #816]!	; 0x330

00010d84 <nl_langinfo@plt>:
   10d84:	add	ip, pc, #0, 12
   10d88:	add	ip, ip, #20, 20	; 0x14000
   10d8c:	ldr	pc, [ip, #808]!	; 0x328

00010d90 <bindtextdomain@plt>:
   10d90:	add	ip, pc, #0, 12
   10d94:	add	ip, ip, #20, 20	; 0x14000
   10d98:	ldr	pc, [ip, #800]!	; 0x320

00010d9c <fputs@plt>:
   10d9c:	add	ip, pc, #0, 12
   10da0:	add	ip, ip, #20, 20	; 0x14000
   10da4:	ldr	pc, [ip, #792]!	; 0x318

00010da8 <strncmp@plt>:
   10da8:	add	ip, pc, #0, 12
   10dac:	add	ip, ip, #20, 20	; 0x14000
   10db0:	ldr	pc, [ip, #784]!	; 0x310

00010db4 <abort@plt>:
   10db4:	add	ip, pc, #0, 12
   10db8:	add	ip, ip, #20, 20	; 0x14000
   10dbc:	ldr	pc, [ip, #776]!	; 0x308

Disassembly of section .text:

00010dc0 <.text>:
   10dc0:	push	{r4, r5, r6, r7, r8, lr}
   10dc4:	mov	r8, r0
   10dc8:	sub	sp, sp, #24
   10dcc:	ldr	r0, [r1]
   10dd0:	mov	r5, r1
   10dd4:	bl	11500 <abort@plt+0x74c>
   10dd8:	ldr	r1, [pc, #288]	; 10f00 <abort@plt+0x14c>
   10ddc:	mov	r0, #6
   10de0:	bl	10d6c <setlocale@plt>
   10de4:	ldr	r1, [pc, #280]	; 10f04 <abort@plt+0x150>
   10de8:	ldr	r0, [pc, #280]	; 10f08 <abort@plt+0x154>
   10dec:	bl	10d90 <bindtextdomain@plt>
   10df0:	ldr	r0, [pc, #272]	; 10f08 <abort@plt+0x154>
   10df4:	bl	10c34 <textdomain@plt>
   10df8:	ldr	r0, [pc, #268]	; 10f0c <abort@plt+0x158>
   10dfc:	bl	13ec0 <abort@plt+0x310c>
   10e00:	ldr	r3, [pc, #264]	; 10f10 <abort@plt+0x15c>
   10e04:	mov	r4, #0
   10e08:	str	r3, [sp, #12]
   10e0c:	ldr	r3, [pc, #256]	; 10f14 <abort@plt+0x160>
   10e10:	mov	r6, #1
   10e14:	str	r3, [sp, #8]
   10e18:	ldr	r3, [pc, #248]	; 10f18 <abort@plt+0x164>
   10e1c:	str	r4, [sp, #16]
   10e20:	str	r6, [sp, #4]
   10e24:	ldr	r7, [pc, #240]	; 10f1c <abort@plt+0x168>
   10e28:	ldr	r3, [r3]
   10e2c:	ldr	r2, [pc, #236]	; 10f20 <abort@plt+0x16c>
   10e30:	str	r3, [sp]
   10e34:	mov	r1, r5
   10e38:	ldr	r3, [pc, #228]	; 10f24 <abort@plt+0x170>
   10e3c:	mov	r0, r8
   10e40:	bl	11438 <abort@plt+0x684>
   10e44:	ldr	r3, [r7]
   10e48:	cmp	r8, r3
   10e4c:	beq	10e8c <abort@plt+0xd8>
   10e50:	mov	r2, #5
   10e54:	ldr	r1, [pc, #204]	; 10f28 <abort@plt+0x174>
   10e58:	mov	r0, r4
   10e5c:	bl	10c1c <dcgettext@plt>
   10e60:	ldr	r3, [r7]
   10e64:	mov	r8, r0
   10e68:	ldr	r0, [r5, r3, lsl #2]
   10e6c:	bl	12b30 <abort@plt+0x1d7c>
   10e70:	mov	r2, r8
   10e74:	mov	r1, r4
   10e78:	mov	r3, r0
   10e7c:	mov	r0, r4
   10e80:	bl	10c94 <error@plt>
   10e84:	mov	r0, r6
   10e88:	bl	11058 <abort@plt+0x2a4>
   10e8c:	bl	10d0c <__errno_location@plt>
   10e90:	str	r4, [r0]
   10e94:	mov	r5, r0
   10e98:	bl	10c40 <geteuid@plt>
   10e9c:	cmn	r0, #1
   10ea0:	mov	r4, r0
   10ea4:	bne	10edc <abort@plt+0x128>
   10ea8:	ldr	r3, [r5]
   10eac:	cmp	r3, #0
   10eb0:	beq	10edc <abort@plt+0x128>
   10eb4:	mov	r2, #5
   10eb8:	ldr	r1, [pc, #108]	; 10f2c <abort@plt+0x178>
   10ebc:	mov	r0, #0
   10ec0:	ldr	r5, [r5]
   10ec4:	bl	10c1c <dcgettext@plt>
   10ec8:	mov	r3, r4
   10ecc:	mov	r1, r5
   10ed0:	mov	r2, r0
   10ed4:	mov	r0, #1
   10ed8:	bl	10c94 <error@plt>
   10edc:	mov	r0, r4
   10ee0:	bl	10bbc <getpwuid@plt>
   10ee4:	cmp	r0, #0
   10ee8:	beq	10eb4 <abort@plt+0x100>
   10eec:	ldr	r0, [r0]
   10ef0:	bl	10ca0 <puts@plt>
   10ef4:	mov	r0, #0
   10ef8:	add	sp, sp, #24
   10efc:	pop	{r4, r5, r6, r7, r8, pc}
   10f00:			; <UNDEFINED> instruction: 0x00013fb5
   10f04:	strdeq	r4, [r1], -pc	; <UNPREDICTABLE>
   10f08:	andeq	r4, r1, ip, asr r0
   10f0c:	muleq	r1, ip, r2
   10f10:	andeq	r4, r1, r7, lsl r1
   10f14:	andeq	r1, r1, r8, asr r0
   10f18:	ldrdeq	r5, [r2], -r4
   10f1c:	andeq	r5, r2, r8, lsr #2
   10f20:	andeq	r3, r1, ip, lsl pc
   10f24:	andeq	r4, r1, r8, asr r0
   10f28:	andeq	r4, r1, r8, lsr #2
   10f2c:	andeq	r4, r1, r9, lsr r1
   10f30:	mov	fp, #0
   10f34:	mov	lr, #0
   10f38:	pop	{r1}		; (ldr r1, [sp], #4)
   10f3c:	mov	r2, sp
   10f40:	push	{r2}		; (str r2, [sp, #-4]!)
   10f44:	push	{r0}		; (str r0, [sp, #-4]!)
   10f48:	ldr	ip, [pc, #16]	; 10f60 <abort@plt+0x1ac>
   10f4c:	push	{ip}		; (str ip, [sp, #-4]!)
   10f50:	ldr	r0, [pc, #12]	; 10f64 <abort@plt+0x1b0>
   10f54:	ldr	r3, [pc, #12]	; 10f68 <abort@plt+0x1b4>
   10f58:	bl	10cb8 <__libc_start_main@plt>
   10f5c:	bl	10db4 <abort@plt>
   10f60:			; <UNDEFINED> instruction: 0x00013ebc
   10f64:	andeq	r0, r1, r0, asr #27
   10f68:	andeq	r3, r1, ip, asr lr
   10f6c:	ldr	r3, [pc, #20]	; 10f88 <abort@plt+0x1d4>
   10f70:	ldr	r2, [pc, #20]	; 10f8c <abort@plt+0x1d8>
   10f74:	add	r3, pc, r3
   10f78:	ldr	r2, [r3, r2]
   10f7c:	cmp	r2, #0
   10f80:	bxeq	lr
   10f84:	b	10cd0 <__gmon_start__@plt>
   10f88:	andeq	r4, r1, r4, lsl #1
   10f8c:	andeq	r0, r0, r8, asr #1
   10f90:	ldr	r3, [pc, #28]	; 10fb4 <abort@plt+0x200>
   10f94:	ldr	r0, [pc, #28]	; 10fb8 <abort@plt+0x204>
   10f98:	sub	r3, r3, r0
   10f9c:	cmp	r3, #6
   10fa0:	bxls	lr
   10fa4:	ldr	r3, [pc, #16]	; 10fbc <abort@plt+0x208>
   10fa8:	cmp	r3, #0
   10fac:	bxeq	lr
   10fb0:	bx	r3
   10fb4:	andeq	r5, r2, pc, lsl r1
   10fb8:	andeq	r5, r2, ip, lsl r1
   10fbc:	andeq	r0, r0, r0
   10fc0:	ldr	r1, [pc, #36]	; 10fec <abort@plt+0x238>
   10fc4:	ldr	r0, [pc, #36]	; 10ff0 <abort@plt+0x23c>
   10fc8:	sub	r1, r1, r0
   10fcc:	asr	r1, r1, #2
   10fd0:	add	r1, r1, r1, lsr #31
   10fd4:	asrs	r1, r1, #1
   10fd8:	bxeq	lr
   10fdc:	ldr	r3, [pc, #16]	; 10ff4 <abort@plt+0x240>
   10fe0:	cmp	r3, #0
   10fe4:	bxeq	lr
   10fe8:	bx	r3
   10fec:	andeq	r5, r2, ip, lsl r1
   10ff0:	andeq	r5, r2, ip, lsl r1
   10ff4:	andeq	r0, r0, r0
   10ff8:	push	{r4, lr}
   10ffc:	ldr	r4, [pc, #24]	; 1101c <abort@plt+0x268>
   11000:	ldrb	r3, [r4]
   11004:	cmp	r3, #0
   11008:	popne	{r4, pc}
   1100c:	bl	10f90 <abort@plt+0x1dc>
   11010:	mov	r3, #1
   11014:	strb	r3, [r4]
   11018:	pop	{r4, pc}
   1101c:	andeq	r5, r2, ip, lsr r1
   11020:	ldr	r0, [pc, #40]	; 11050 <abort@plt+0x29c>
   11024:	ldr	r3, [r0]
   11028:	cmp	r3, #0
   1102c:	bne	11034 <abort@plt+0x280>
   11030:	b	10fc0 <abort@plt+0x20c>
   11034:	ldr	r3, [pc, #24]	; 11054 <abort@plt+0x2a0>
   11038:	cmp	r3, #0
   1103c:	beq	11030 <abort@plt+0x27c>
   11040:	push	{r4, lr}
   11044:	blx	r3
   11048:	pop	{r4, lr}
   1104c:	b	10fc0 <abort@plt+0x20c>
   11050:	andeq	r4, r2, r4, lsl pc
   11054:	andeq	r0, r0, r0
   11058:	subs	r5, r0, #0
   1105c:	push	{r7, lr}
   11060:	sub	sp, sp, #56	; 0x38
   11064:	ldr	r4, [pc, #452]	; 11230 <abort@plt+0x47c>
   11068:	beq	110a0 <abort@plt+0x2ec>
   1106c:	ldr	r3, [pc, #448]	; 11234 <abort@plt+0x480>
   11070:	mov	r2, #5
   11074:	ldr	r1, [pc, #444]	; 11238 <abort@plt+0x484>
   11078:	mov	r0, #0
   1107c:	ldr	r6, [r3]
   11080:	bl	10c1c <dcgettext@plt>
   11084:	ldr	r3, [r4]
   11088:	mov	r1, #1
   1108c:	mov	r2, r0
   11090:	mov	r0, r6
   11094:	bl	10d48 <__fprintf_chk@plt>
   11098:	mov	r0, r5
   1109c:	bl	10cf4 <exit@plt>
   110a0:	mov	r2, #5
   110a4:	ldr	r1, [pc, #400]	; 1123c <abort@plt+0x488>
   110a8:	bl	10c1c <dcgettext@plt>
   110ac:	ldr	r2, [r4]
   110b0:	ldr	r4, [pc, #392]	; 11240 <abort@plt+0x48c>
   110b4:	ldr	r8, [pc, #392]	; 11244 <abort@plt+0x490>
   110b8:	mov	r6, r5
   110bc:	mov	r1, r0
   110c0:	mov	r0, #1
   110c4:	bl	10d30 <__printf_chk@plt>
   110c8:	mov	r2, #5
   110cc:	ldr	r1, [pc, #372]	; 11248 <abort@plt+0x494>
   110d0:	mov	r0, r5
   110d4:	bl	10c1c <dcgettext@plt>
   110d8:	ldr	r1, [r4]
   110dc:	bl	10b98 <fputs_unlocked@plt>
   110e0:	mov	r2, #5
   110e4:	ldr	r1, [pc, #352]	; 1124c <abort@plt+0x498>
   110e8:	mov	r0, r5
   110ec:	bl	10c1c <dcgettext@plt>
   110f0:	ldr	r1, [r4]
   110f4:	bl	10b98 <fputs_unlocked@plt>
   110f8:	mov	r2, #5
   110fc:	ldr	r1, [pc, #332]	; 11250 <abort@plt+0x49c>
   11100:	mov	r0, r5
   11104:	bl	10c1c <dcgettext@plt>
   11108:	ldr	r1, [r4]
   1110c:	bl	10b98 <fputs_unlocked@plt>
   11110:	ldr	lr, [pc, #316]	; 11254 <abort@plt+0x4a0>
   11114:	mov	ip, sp
   11118:	ldm	lr!, {r0, r1, r2, r3}
   1111c:	stmia	ip!, {r0, r1, r2, r3}
   11120:	ldm	lr!, {r0, r1, r2, r3}
   11124:	stmia	ip!, {r0, r1, r2, r3}
   11128:	ldm	lr!, {r0, r1, r2, r3}
   1112c:	stmia	ip!, {r0, r1, r2, r3}
   11130:	ldm	lr, {r0, r1}
   11134:	stm	ip, {r0, r1}
   11138:	ldr	r1, [sp, r6]
   1113c:	add	r7, sp, r6
   11140:	cmp	r1, #0
   11144:	bne	111e8 <abort@plt+0x434>
   11148:	ldr	r6, [r7, #4]
   1114c:	ldr	r7, [pc, #240]	; 11244 <abort@plt+0x490>
   11150:	cmp	r6, #0
   11154:	mov	r2, #5
   11158:	ldr	r1, [pc, #248]	; 11258 <abort@plt+0x4a4>
   1115c:	mov	r0, #0
   11160:	moveq	r6, r7
   11164:	bl	10c1c <dcgettext@plt>
   11168:	ldr	r3, [pc, #236]	; 1125c <abort@plt+0x4a8>
   1116c:	ldr	r2, [pc, #236]	; 11260 <abort@plt+0x4ac>
   11170:	mov	r1, r0
   11174:	mov	r0, #1
   11178:	bl	10d30 <__printf_chk@plt>
   1117c:	mov	r1, #0
   11180:	mov	r0, #5
   11184:	bl	10d6c <setlocale@plt>
   11188:	cmp	r0, #0
   1118c:	bne	11200 <abort@plt+0x44c>
   11190:	mov	r2, #5
   11194:	ldr	r1, [pc, #200]	; 11264 <abort@plt+0x4b0>
   11198:	mov	r0, #0
   1119c:	bl	10c1c <dcgettext@plt>
   111a0:	ldr	r3, [pc, #156]	; 11244 <abort@plt+0x490>
   111a4:	ldr	r2, [pc, #176]	; 1125c <abort@plt+0x4a8>
   111a8:	mov	r1, r0
   111ac:	mov	r0, #1
   111b0:	bl	10d30 <__printf_chk@plt>
   111b4:	mov	r2, #5
   111b8:	ldr	r1, [pc, #168]	; 11268 <abort@plt+0x4b4>
   111bc:	mov	r0, #0
   111c0:	bl	10c1c <dcgettext@plt>
   111c4:	ldr	r2, [pc, #160]	; 1126c <abort@plt+0x4b8>
   111c8:	cmp	r6, r7
   111cc:	ldr	r3, [pc, #156]	; 11270 <abort@plt+0x4bc>
   111d0:	moveq	r3, r2
   111d4:	mov	r2, r6
   111d8:	mov	r1, r0
   111dc:	mov	r0, #1
   111e0:	bl	10d30 <__printf_chk@plt>
   111e4:	b	11098 <abort@plt+0x2e4>
   111e8:	mov	r0, r8
   111ec:	bl	10bb0 <strcmp@plt>
   111f0:	add	r6, r6, #8
   111f4:	cmp	r0, #0
   111f8:	bne	11138 <abort@plt+0x384>
   111fc:	b	11148 <abort@plt+0x394>
   11200:	mov	r2, #3
   11204:	ldr	r1, [pc, #104]	; 11274 <abort@plt+0x4c0>
   11208:	bl	10da8 <strncmp@plt>
   1120c:	cmp	r0, #0
   11210:	beq	11190 <abort@plt+0x3dc>
   11214:	mov	r2, #5
   11218:	ldr	r1, [pc, #88]	; 11278 <abort@plt+0x4c4>
   1121c:	mov	r0, #0
   11220:	bl	10c1c <dcgettext@plt>
   11224:	ldr	r1, [r4]
   11228:	bl	10b98 <fputs_unlocked@plt>
   1122c:	b	11190 <abort@plt+0x3dc>
   11230:	andeq	r5, r2, r8, asr #2
   11234:	andeq	r5, r2, r0, lsr r1
   11238:	andeq	r3, r1, r3, lsr #30
   1123c:	andeq	r3, r1, sl, asr #30
   11240:	andeq	r5, r2, r4, lsr r1
   11244:	andeq	r3, r1, ip, lsl pc
   11248:	andeq	r3, r1, r1, ror #30
   1124c:			; <UNDEFINED> instruction: 0x00013fb6
   11250:	andeq	r3, r1, r3, ror #31
   11254:	andeq	r3, r1, r4, ror #29
   11258:	andeq	r4, r1, r9, lsl r0
   1125c:	andeq	r4, r1, r0, lsr r0
   11260:	andeq	r4, r1, r8, asr r0
   11264:	strheq	r4, [r1], -r1
   11268:	andeq	r4, r1, ip, asr #1
   1126c:	andeq	r4, r1, r6, ror r1
   11270:			; <UNDEFINED> instruction: 0x00013fb5
   11274:	andeq	r4, r1, r6, rrx
   11278:	andeq	r4, r1, sl, rrx
   1127c:	ldr	r3, [pc, #4]	; 11288 <abort@plt+0x4d4>
   11280:	str	r0, [r3]
   11284:	bx	lr
   11288:	andeq	r5, r2, r0, asr #2
   1128c:	ldr	r3, [pc, #4]	; 11298 <abort@plt+0x4e4>
   11290:	strb	r0, [r3, #4]
   11294:	bx	lr
   11298:	andeq	r5, r2, r0, asr #2
   1129c:	ldr	r3, [pc, #192]	; 11364 <abort@plt+0x5b0>
   112a0:	push	{r0, r1, r4, r5, r6, lr}
   112a4:	ldr	r0, [r3]
   112a8:	bl	13600 <abort@plt+0x284c>
   112ac:	cmp	r0, #0
   112b0:	beq	11348 <abort@plt+0x594>
   112b4:	ldr	r3, [pc, #172]	; 11368 <abort@plt+0x5b4>
   112b8:	mov	r4, r3
   112bc:	ldrb	r2, [r3, #4]
   112c0:	cmp	r2, #0
   112c4:	beq	112d8 <abort@plt+0x524>
   112c8:	bl	10d0c <__errno_location@plt>
   112cc:	ldr	r3, [r0]
   112d0:	cmp	r3, #32
   112d4:	beq	11348 <abort@plt+0x594>
   112d8:	mov	r2, #5
   112dc:	ldr	r1, [pc, #136]	; 1136c <abort@plt+0x5b8>
   112e0:	mov	r0, #0
   112e4:	bl	10c1c <dcgettext@plt>
   112e8:	ldr	r4, [r4]
   112ec:	cmp	r4, #0
   112f0:	mov	r5, r0
   112f4:	beq	1132c <abort@plt+0x578>
   112f8:	bl	10d0c <__errno_location@plt>
   112fc:	ldr	r6, [r0]
   11300:	mov	r0, r4
   11304:	bl	129e0 <abort@plt+0x1c2c>
   11308:	str	r5, [sp]
   1130c:	ldr	r2, [pc, #92]	; 11370 <abort@plt+0x5bc>
   11310:	mov	r1, r6
   11314:	mov	r3, r0
   11318:	mov	r0, #0
   1131c:	bl	10c94 <error@plt>
   11320:	ldr	r3, [pc, #76]	; 11374 <abort@plt+0x5c0>
   11324:	ldr	r0, [r3]
   11328:	bl	10be0 <_exit@plt>
   1132c:	bl	10d0c <__errno_location@plt>
   11330:	mov	r3, r5
   11334:	ldr	r2, [pc, #60]	; 11378 <abort@plt+0x5c4>
   11338:	ldr	r1, [r0]
   1133c:	mov	r0, r4
   11340:	bl	10c94 <error@plt>
   11344:	b	11320 <abort@plt+0x56c>
   11348:	ldr	r3, [pc, #44]	; 1137c <abort@plt+0x5c8>
   1134c:	ldr	r0, [r3]
   11350:	bl	13600 <abort@plt+0x284c>
   11354:	cmp	r0, #0
   11358:	bne	11320 <abort@plt+0x56c>
   1135c:	add	sp, sp, #8
   11360:	pop	{r4, r5, r6, pc}
   11364:	andeq	r5, r2, r4, lsr r1
   11368:	andeq	r5, r2, r0, asr #2
   1136c:	andeq	r4, r1, r8, asr #3
   11370:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   11374:	ldrdeq	r5, [r2], -r8
   11378:	ldrdeq	r4, [r1], -r8
   1137c:	andeq	r5, r2, r0, lsr r1
   11380:	ldr	ip, [pc, #156]	; 11424 <abort@plt+0x670>
   11384:	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
   11388:	cmp	r0, #2
   1138c:	mov	r6, #0
   11390:	ldr	r7, [ip]
   11394:	mov	r8, ip
   11398:	str	r6, [ip]
   1139c:	bne	113d0 <abort@plt+0x61c>
   113a0:	mov	r5, r3
   113a4:	mov	r4, r2
   113a8:	str	r6, [sp]
   113ac:	ldr	r3, [pc, #116]	; 11428 <abort@plt+0x674>
   113b0:	ldr	r2, [pc, #116]	; 1142c <abort@plt+0x678>
   113b4:	bl	10cdc <getopt_long@plt>
   113b8:	cmn	r0, #1
   113bc:	beq	113d0 <abort@plt+0x61c>
   113c0:	cmp	r0, #104	; 0x68
   113c4:	beq	113e8 <abort@plt+0x634>
   113c8:	cmp	r0, #118	; 0x76
   113cc:	beq	113f8 <abort@plt+0x644>
   113d0:	ldr	r3, [pc, #88]	; 11430 <abort@plt+0x67c>
   113d4:	mov	r2, #0
   113d8:	str	r7, [r8]
   113dc:	str	r2, [r3]
   113e0:	add	sp, sp, #16
   113e4:	pop	{r4, r5, r6, r7, r8, pc}
   113e8:	mov	r0, r6
   113ec:	ldr	r3, [sp, #44]	; 0x2c
   113f0:	blx	r3
   113f4:	b	113d0 <abort@plt+0x61c>
   113f8:	ldr	r0, [pc, #52]	; 11434 <abort@plt+0x680>
   113fc:	add	r3, sp, #48	; 0x30
   11400:	str	r3, [sp]
   11404:	str	r3, [sp, #12]
   11408:	ldr	r0, [r0]
   1140c:	ldr	r3, [sp, #40]	; 0x28
   11410:	mov	r2, r5
   11414:	mov	r1, r4
   11418:	bl	12f3c <abort@plt+0x2188>
   1141c:	mov	r0, r6
   11420:	bl	10cf4 <exit@plt>
   11424:	andeq	r5, r2, r8, lsr r1
   11428:	ldrdeq	r4, [r1], -ip
   1142c:	andeq	r4, r1, ip, lsl #4
   11430:	andeq	r5, r2, r8, lsr #2
   11434:	andeq	r5, r2, r4, lsr r1
   11438:	push	{r4, r5, r6, r7, r8, r9, lr}
   1143c:	sub	sp, sp, #20
   11440:	mov	r8, r3
   11444:	ldrb	lr, [sp, #52]	; 0x34
   11448:	ldr	r3, [pc, #152]	; 114e8 <abort@plt+0x734>
   1144c:	mov	r4, #0
   11450:	ldr	ip, [pc, #148]	; 114ec <abort@plt+0x738>
   11454:	cmp	lr, r4
   11458:	mov	r7, r2
   1145c:	mov	r2, #1
   11460:	ldr	r9, [r3]
   11464:	mov	r5, r3
   11468:	str	r2, [r3]
   1146c:	ldr	r2, [pc, #124]	; 114f0 <abort@plt+0x73c>
   11470:	str	r4, [sp]
   11474:	moveq	r2, ip
   11478:	ldr	r3, [pc, #116]	; 114f4 <abort@plt+0x740>
   1147c:	ldr	r6, [sp, #56]	; 0x38
   11480:	bl	10cdc <getopt_long@plt>
   11484:	cmn	r0, #1
   11488:	beq	114b0 <abort@plt+0x6fc>
   1148c:	cmp	r0, #104	; 0x68
   11490:	beq	114a8 <abort@plt+0x6f4>
   11494:	cmp	r0, #118	; 0x76
   11498:	beq	114bc <abort@plt+0x708>
   1149c:	ldr	r3, [pc, #84]	; 114f8 <abort@plt+0x744>
   114a0:	ldr	r0, [r3]
   114a4:	b	114ac <abort@plt+0x6f8>
   114a8:	mov	r0, r4
   114ac:	blx	r6
   114b0:	str	r9, [r5]
   114b4:	add	sp, sp, #20
   114b8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   114bc:	ldr	r0, [pc, #56]	; 114fc <abort@plt+0x748>
   114c0:	add	r3, sp, #60	; 0x3c
   114c4:	str	r3, [sp]
   114c8:	str	r3, [sp, #12]
   114cc:	ldr	r0, [r0]
   114d0:	ldr	r3, [sp, #48]	; 0x30
   114d4:	mov	r2, r8
   114d8:	mov	r1, r7
   114dc:	bl	12f3c <abort@plt+0x2188>
   114e0:	mov	r0, r4
   114e4:	bl	10cf4 <exit@plt>
   114e8:	andeq	r5, r2, r8, lsr r1
   114ec:	andeq	r4, r1, ip, lsl #4
   114f0:			; <UNDEFINED> instruction: 0x00013fb5
   114f4:	ldrdeq	r4, [r1], -ip
   114f8:	ldrdeq	r5, [r2], -r8
   114fc:	andeq	r5, r2, r4, lsr r1
   11500:	push	{r4, r5, r6, lr}
   11504:	subs	r5, r0, #0
   11508:	bne	11520 <abort@plt+0x76c>
   1150c:	ldr	r3, [pc, #124]	; 11590 <abort@plt+0x7dc>
   11510:	ldr	r0, [pc, #124]	; 11594 <abort@plt+0x7e0>
   11514:	ldr	r1, [r3]
   11518:	bl	10d9c <fputs@plt>
   1151c:	bl	10db4 <abort@plt>
   11520:	mov	r1, #47	; 0x2f
   11524:	bl	10d78 <strrchr@plt>
   11528:	cmp	r0, #0
   1152c:	addne	r4, r0, #1
   11530:	moveq	r4, r5
   11534:	sub	r3, r4, r5
   11538:	cmp	r3, #6
   1153c:	ble	1157c <abort@plt+0x7c8>
   11540:	mov	r2, #7
   11544:	ldr	r1, [pc, #76]	; 11598 <abort@plt+0x7e4>
   11548:	sub	r0, r4, #7
   1154c:	bl	10da8 <strncmp@plt>
   11550:	cmp	r0, #0
   11554:	bne	1157c <abort@plt+0x7c8>
   11558:	mov	r2, #3
   1155c:	ldr	r1, [pc, #56]	; 1159c <abort@plt+0x7e8>
   11560:	mov	r0, r4
   11564:	bl	10da8 <strncmp@plt>
   11568:	cmp	r0, #0
   1156c:	movne	r5, r4
   11570:	ldreq	r3, [pc, #40]	; 115a0 <abort@plt+0x7ec>
   11574:	addeq	r5, r4, #3
   11578:	streq	r5, [r3]
   1157c:	ldr	r3, [pc, #32]	; 115a4 <abort@plt+0x7f0>
   11580:	str	r5, [r3]
   11584:	ldr	r3, [pc, #28]	; 115a8 <abort@plt+0x7f4>
   11588:	str	r5, [r3]
   1158c:	pop	{r4, r5, r6, pc}
   11590:	andeq	r5, r2, r0, lsr r1
   11594:	andeq	r4, r1, fp, lsl r2
   11598:	andeq	r4, r1, r3, asr r2
   1159c:	andeq	r4, r1, fp, asr r2
   115a0:	andeq	r5, r2, r0, lsr #2
   115a4:	andeq	r5, r2, r8, asr #2
   115a8:	andeq	r5, r2, r4, lsr #2
   115ac:	push	{r4, r5, r6, lr}
   115b0:	mov	r2, #48	; 0x30
   115b4:	mov	r5, r1
   115b8:	mov	r1, #0
   115bc:	mov	r4, r0
   115c0:	bl	10d24 <memset@plt>
   115c4:	cmp	r5, #10
   115c8:	bne	115d0 <abort@plt+0x81c>
   115cc:	bl	10db4 <abort@plt>
   115d0:	str	r5, [r4]
   115d4:	mov	r0, r4
   115d8:	pop	{r4, r5, r6, pc}
   115dc:	push	{r4, r5, r6, lr}
   115e0:	mov	r4, r0
   115e4:	mov	r5, r1
   115e8:	bl	13850 <abort@plt+0x2a9c>
   115ec:	ldrb	r3, [r0]
   115f0:	bic	r3, r3, #32
   115f4:	cmp	r3, #85	; 0x55
   115f8:	bne	11668 <abort@plt+0x8b4>
   115fc:	ldrb	r3, [r0, #1]
   11600:	bic	r3, r3, #32
   11604:	cmp	r3, #84	; 0x54
   11608:	bne	11640 <abort@plt+0x88c>
   1160c:	ldrb	r3, [r0, #2]
   11610:	bic	r3, r3, #32
   11614:	cmp	r3, #70	; 0x46
   11618:	bne	11640 <abort@plt+0x88c>
   1161c:	ldrb	r3, [r0, #3]
   11620:	cmp	r3, #45	; 0x2d
   11624:	bne	11640 <abort@plt+0x88c>
   11628:	ldrb	r3, [r0, #4]
   1162c:	cmp	r3, #56	; 0x38
   11630:	bne	11640 <abort@plt+0x88c>
   11634:	ldrb	r3, [r0, #5]
   11638:	cmp	r3, #0
   1163c:	beq	11654 <abort@plt+0x8a0>
   11640:	ldr	r1, [pc, #144]	; 116d8 <abort@plt+0x924>
   11644:	ldr	r0, [pc, #144]	; 116dc <abort@plt+0x928>
   11648:	cmp	r5, #9
   1164c:	movne	r0, r1
   11650:	pop	{r4, r5, r6, pc}
   11654:	ldrb	r3, [r4]
   11658:	ldr	r1, [pc, #128]	; 116e0 <abort@plt+0x92c>
   1165c:	ldr	r0, [pc, #128]	; 116e4 <abort@plt+0x930>
   11660:	cmp	r3, #96	; 0x60
   11664:	b	1164c <abort@plt+0x898>
   11668:	cmp	r3, #71	; 0x47
   1166c:	bne	11640 <abort@plt+0x88c>
   11670:	ldrb	r3, [r0, #1]
   11674:	bic	r3, r3, #32
   11678:	cmp	r3, #66	; 0x42
   1167c:	bne	11640 <abort@plt+0x88c>
   11680:	ldrb	r3, [r0, #2]
   11684:	cmp	r3, #49	; 0x31
   11688:	bne	11640 <abort@plt+0x88c>
   1168c:	ldrb	r3, [r0, #3]
   11690:	cmp	r3, #56	; 0x38
   11694:	bne	11640 <abort@plt+0x88c>
   11698:	ldrb	r3, [r0, #4]
   1169c:	cmp	r3, #48	; 0x30
   116a0:	bne	11640 <abort@plt+0x88c>
   116a4:	ldrb	r3, [r0, #5]
   116a8:	cmp	r3, #51	; 0x33
   116ac:	bne	11640 <abort@plt+0x88c>
   116b0:	ldrb	r3, [r0, #6]
   116b4:	cmp	r3, #48	; 0x30
   116b8:	bne	11640 <abort@plt+0x88c>
   116bc:	ldrb	r3, [r0, #7]
   116c0:	cmp	r3, #0
   116c4:	bne	11640 <abort@plt+0x88c>
   116c8:	ldrb	r3, [r4]
   116cc:	ldr	r1, [pc, #20]	; 116e8 <abort@plt+0x934>
   116d0:	ldr	r0, [pc, #20]	; 116ec <abort@plt+0x938>
   116d4:	b	11660 <abort@plt+0x8ac>
   116d8:	andeq	r4, r1, r5, asr #5
   116dc:	andeq	r4, r1, r3, asr #5
   116e0:			; <UNDEFINED> instruction: 0x000142b8
   116e4:			; <UNDEFINED> instruction: 0x000142b4
   116e8:	andeq	r4, r1, r0, asr #5
   116ec:			; <UNDEFINED> instruction: 0x000142bc
   116f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   116f4:	sub	sp, sp, #108	; 0x6c
   116f8:	mov	r8, r0
   116fc:	str	r3, [sp, #36]	; 0x24
   11700:	mov	r5, r1
   11704:	str	r2, [sp, #44]	; 0x2c
   11708:	ldr	sl, [sp, #144]	; 0x90
   1170c:	bl	10c64 <__ctype_get_mb_cur_max@plt>
   11710:	ldr	r3, [sp, #148]	; 0x94
   11714:	mov	r7, #0
   11718:	str	r7, [sp, #48]	; 0x30
   1171c:	lsr	r6, r3, #1
   11720:	and	r6, r6, #1
   11724:	mov	r3, #1
   11728:	str	r3, [sp, #72]	; 0x48
   1172c:	str	r7, [sp, #24]
   11730:	str	r7, [sp, #32]
   11734:	str	r7, [sp, #40]	; 0x28
   11738:	str	r7, [sp, #60]	; 0x3c
   1173c:	str	r0, [sp, #76]	; 0x4c
   11740:	cmp	sl, #10
   11744:	ldrls	pc, [pc, sl, lsl #2]
   11748:	b	11984 <abort@plt+0xbd0>
   1174c:	andeq	r1, r1, r8, ror r7
   11750:	andeq	r2, r1, ip, lsl #8
   11754:	andeq	r1, r1, r0, asr r9
   11758:	muleq	r1, ip, r9
   1175c:	andeq	r1, r1, ip, lsr #18
   11760:	andeq	r1, r1, r4, lsl #15
   11764:	andeq	r2, r1, ip, ror #7
   11768:	andeq	r1, r1, r8, lsl #19
   1176c:	andeq	r1, r1, ip, ror r8
   11770:	andeq	r1, r1, ip, ror r8
   11774:	andeq	r1, r1, ip, ror r8
   11778:	mov	r6, #0
   1177c:	mov	r4, #0
   11780:	b	117b0 <abort@plt+0x9fc>
   11784:	cmp	r6, #0
   11788:	bne	119ac <abort@plt+0xbf8>
   1178c:	cmp	r5, #0
   11790:	movne	r3, #34	; 0x22
   11794:	strbne	r3, [r8]
   11798:	mov	r3, #1
   1179c:	str	r3, [sp, #24]
   117a0:	str	r3, [sp, #32]
   117a4:	mov	r4, #1
   117a8:	ldr	r3, [pc, #3172]	; 12414 <abort@plt+0x1660>
   117ac:	str	r3, [sp, #40]	; 0x28
   117b0:	mov	r9, r5
   117b4:	mov	r3, #0
   117b8:	str	r7, [sp, #68]	; 0x44
   117bc:	str	r3, [sp, #28]
   117c0:	ldr	r3, [sp, #36]	; 0x24
   117c4:	cmn	r3, #1
   117c8:	bne	12358 <abort@plt+0x15a4>
   117cc:	ldr	r3, [sp, #44]	; 0x2c
   117d0:	ldr	r2, [sp, #28]
   117d4:	ldrb	r3, [r3, r2]
   117d8:	adds	r3, r3, #0
   117dc:	movne	r3, #1
   117e0:	str	r3, [sp, #52]	; 0x34
   117e4:	ldr	r3, [sp, #52]	; 0x34
   117e8:	cmp	r3, #0
   117ec:	bne	119d4 <abort@plt+0xc20>
   117f0:	sub	r2, sl, #2
   117f4:	clz	r2, r2
   117f8:	lsr	r2, r2, #5
   117fc:	and	r3, r6, r2
   11800:	cmp	r4, #0
   11804:	movne	r3, #0
   11808:	andeq	r3, r3, #1
   1180c:	cmp	r3, #0
   11810:	bne	11b9c <abort@plt+0xde8>
   11814:	eor	r3, r6, #1
   11818:	ands	r2, r2, r3
   1181c:	beq	12390 <abort@plt+0x15dc>
   11820:	ldr	r3, [sp, #68]	; 0x44
   11824:	cmp	r3, #0
   11828:	beq	123c8 <abort@plt+0x1614>
   1182c:	ldr	r3, [sp, #72]	; 0x48
   11830:	cmp	r3, #0
   11834:	beq	1236c <abort@plt+0x15b8>
   11838:	ldr	r3, [sp, #160]	; 0xa0
   1183c:	ldr	r2, [sp, #44]	; 0x2c
   11840:	str	r3, [sp, #16]
   11844:	ldr	r3, [sp, #156]	; 0x9c
   11848:	ldr	r1, [sp, #60]	; 0x3c
   1184c:	str	r3, [sp, #12]
   11850:	ldr	r3, [sp, #152]	; 0x98
   11854:	str	r3, [sp, #8]
   11858:	ldr	r3, [sp, #148]	; 0x94
   1185c:	str	r3, [sp, #4]
   11860:	mov	r3, #5
   11864:	str	r3, [sp]
   11868:	ldr	r3, [sp, #36]	; 0x24
   1186c:	mov	r0, r8
   11870:	bl	116f0 <abort@plt+0x93c>
   11874:	mov	r4, r0
   11878:	b	123bc <abort@plt+0x1608>
   1187c:	cmp	sl, #10
   11880:	beq	118dc <abort@plt+0xb28>
   11884:	ldr	r4, [pc, #2956]	; 12418 <abort@plt+0x1664>
   11888:	mov	r2, #5
   1188c:	mov	r1, r4
   11890:	mov	r0, #0
   11894:	bl	10c1c <dcgettext@plt>
   11898:	cmp	r0, r4
   1189c:	str	r0, [sp, #156]	; 0x9c
   118a0:	bne	118b0 <abort@plt+0xafc>
   118a4:	mov	r1, sl
   118a8:	bl	115dc <abort@plt+0x828>
   118ac:	str	r0, [sp, #156]	; 0x9c
   118b0:	ldr	r4, [pc, #2916]	; 1241c <abort@plt+0x1668>
   118b4:	mov	r2, #5
   118b8:	mov	r1, r4
   118bc:	mov	r0, #0
   118c0:	bl	10c1c <dcgettext@plt>
   118c4:	cmp	r0, r4
   118c8:	str	r0, [sp, #160]	; 0xa0
   118cc:	bne	118dc <abort@plt+0xb28>
   118d0:	mov	r1, sl
   118d4:	bl	115dc <abort@plt+0x828>
   118d8:	str	r0, [sp, #160]	; 0xa0
   118dc:	cmp	r6, #0
   118e0:	moveq	r4, r6
   118e4:	beq	118fc <abort@plt+0xb48>
   118e8:	mov	r4, #0
   118ec:	b	1190c <abort@plt+0xb58>
   118f0:	cmp	r5, r4
   118f4:	strbhi	r3, [r8, r4]
   118f8:	add	r4, r4, #1
   118fc:	ldr	r3, [sp, #156]	; 0x9c
   11900:	ldrb	r3, [r3, r4]
   11904:	cmp	r3, #0
   11908:	bne	118f0 <abort@plt+0xb3c>
   1190c:	ldr	r0, [sp, #160]	; 0xa0
   11910:	bl	10d00 <strlen@plt>
   11914:	ldr	r3, [sp, #160]	; 0xa0
   11918:	str	r3, [sp, #40]	; 0x28
   1191c:	mov	r3, #1
   11920:	str	r3, [sp, #24]
   11924:	str	r0, [sp, #32]
   11928:	b	117b0 <abort@plt+0x9fc>
   1192c:	mov	r3, #1
   11930:	cmp	r6, #0
   11934:	streq	r3, [sp, #24]
   11938:	beq	11958 <abort@plt+0xba4>
   1193c:	str	r3, [sp, #32]
   11940:	ldr	r3, [pc, #2772]	; 1241c <abort@plt+0x1668>
   11944:	mov	r4, #0
   11948:	str	r3, [sp, #40]	; 0x28
   1194c:	b	1197c <abort@plt+0xbc8>
   11950:	cmp	r6, #0
   11954:	bne	119c4 <abort@plt+0xc10>
   11958:	cmp	r5, #0
   1195c:	movne	r3, #39	; 0x27
   11960:	strbne	r3, [r8]
   11964:	mov	r3, #1
   11968:	str	r3, [sp, #32]
   1196c:	mov	r6, #0
   11970:	ldr	r3, [pc, #2724]	; 1241c <abort@plt+0x1668>
   11974:	mov	r4, #1
   11978:	str	r3, [sp, #40]	; 0x28
   1197c:	mov	sl, #2
   11980:	b	117b0 <abort@plt+0x9fc>
   11984:	bl	10db4 <abort@plt>
   11988:	mov	r6, #0
   1198c:	mov	r3, #1
   11990:	str	r3, [sp, #24]
   11994:	mov	r4, r6
   11998:	b	117b0 <abort@plt+0x9fc>
   1199c:	mov	r6, #1
   119a0:	str	r6, [sp, #24]
   119a4:	str	r6, [sp, #32]
   119a8:	b	11940 <abort@plt+0xb8c>
   119ac:	mov	r3, #1
   119b0:	str	r3, [sp, #32]
   119b4:	ldr	r3, [pc, #2648]	; 12414 <abort@plt+0x1660>
   119b8:	str	r6, [sp, #24]
   119bc:	str	r3, [sp, #40]	; 0x28
   119c0:	b	1177c <abort@plt+0x9c8>
   119c4:	mov	r3, #1
   119c8:	str	r3, [sp, #32]
   119cc:	ldr	r3, [pc, #2632]	; 1241c <abort@plt+0x1668>
   119d0:	b	119bc <abort@plt+0xc08>
   119d4:	ldr	r3, [sp, #32]
   119d8:	ldr	fp, [sp, #24]
   119dc:	cmp	sl, #2
   119e0:	moveq	fp, #0
   119e4:	andne	fp, fp, #1
   119e8:	adds	r5, r3, #0
   119ec:	movne	r5, #1
   119f0:	ands	r3, r5, fp
   119f4:	str	r3, [sp, #64]	; 0x40
   119f8:	beq	11ac8 <abort@plt+0xd14>
   119fc:	ldr	r2, [sp, #32]
   11a00:	ldr	r3, [sp, #28]
   11a04:	add	r7, r3, r2
   11a08:	mov	r3, r2
   11a0c:	ldr	r2, [sp, #36]	; 0x24
   11a10:	cmp	r3, #1
   11a14:	movls	r3, #0
   11a18:	movhi	r3, #1
   11a1c:	cmn	r2, #1
   11a20:	movne	r3, #0
   11a24:	cmp	r3, #0
   11a28:	beq	11a38 <abort@plt+0xc84>
   11a2c:	ldr	r0, [sp, #44]	; 0x2c
   11a30:	bl	10d00 <strlen@plt>
   11a34:	str	r0, [sp, #36]	; 0x24
   11a38:	ldr	r3, [sp, #36]	; 0x24
   11a3c:	cmp	r3, r7
   11a40:	bcc	11ac0 <abort@plt+0xd0c>
   11a44:	ldr	r3, [sp, #44]	; 0x2c
   11a48:	ldr	r0, [sp, #28]
   11a4c:	ldr	r2, [sp, #32]
   11a50:	ldr	r1, [sp, #40]	; 0x28
   11a54:	add	r0, r3, r0
   11a58:	bl	10c04 <memcmp@plt>
   11a5c:	cmp	r0, #0
   11a60:	bne	11ac0 <abort@plt+0xd0c>
   11a64:	cmp	r6, #0
   11a68:	beq	11ac8 <abort@plt+0xd14>
   11a6c:	str	r6, [sp, #24]
   11a70:	ldr	r3, [sp, #24]
   11a74:	ldr	r2, [sp, #44]	; 0x2c
   11a78:	cmp	sl, #2
   11a7c:	movne	r3, #0
   11a80:	andeq	r3, r3, #1
   11a84:	cmp	r3, #0
   11a88:	ldr	r3, [sp, #160]	; 0xa0
   11a8c:	movne	sl, #4
   11a90:	str	r3, [sp, #16]
   11a94:	ldr	r3, [sp, #156]	; 0x9c
   11a98:	str	sl, [sp]
   11a9c:	str	r3, [sp, #12]
   11aa0:	mov	r3, #0
   11aa4:	str	r3, [sp, #8]
   11aa8:	ldr	r3, [sp, #148]	; 0x94
   11aac:	mov	r1, r9
   11ab0:	bic	r3, r3, #2
   11ab4:	str	r3, [sp, #4]
   11ab8:	ldr	r3, [sp, #36]	; 0x24
   11abc:	b	1186c <abort@plt+0xab8>
   11ac0:	mov	r3, #0
   11ac4:	str	r3, [sp, #64]	; 0x40
   11ac8:	ldr	r2, [sp, #28]
   11acc:	ldr	r3, [sp, #44]	; 0x2c
   11ad0:	add	r3, r3, r2
   11ad4:	str	r3, [sp, #80]	; 0x50
   11ad8:	ldr	r3, [sp, #44]	; 0x2c
   11adc:	ldrb	r7, [r3, r2]
   11ae0:	cmp	r7, #58	; 0x3a
   11ae4:	bhi	11c4c <abort@plt+0xe98>
   11ae8:	cmp	r7, #43	; 0x2b
   11aec:	bcs	11ca0 <abort@plt+0xeec>
   11af0:	cmp	r7, #32
   11af4:	beq	11cf8 <abort@plt+0xf44>
   11af8:	bhi	11ba4 <abort@plt+0xdf0>
   11afc:	cmp	r7, #9
   11b00:	beq	11fac <abort@plt+0x11f8>
   11b04:	bhi	11b68 <abort@plt+0xdb4>
   11b08:	cmp	r7, #7
   11b0c:	beq	12058 <abort@plt+0x12a4>
   11b10:	bhi	11d14 <abort@plt+0xf60>
   11b14:	cmp	r7, #0
   11b18:	beq	11d30 <abort@plt+0xf7c>
   11b1c:	ldr	r3, [sp, #76]	; 0x4c
   11b20:	cmp	r3, #1
   11b24:	bne	1209c <abort@plt+0x12e8>
   11b28:	bl	10ce8 <__ctype_b_loc@plt>
   11b2c:	sxth	r3, r7
   11b30:	lsl	r3, r3, #1
   11b34:	ldr	r2, [r0]
   11b38:	ldrh	r5, [r2, r3]
   11b3c:	ldr	r3, [sp, #76]	; 0x4c
   11b40:	str	r3, [sp, #56]	; 0x38
   11b44:	lsr	r5, r5, #14
   11b48:	and	r5, r5, #1
   11b4c:	ldr	r3, [sp, #24]
   11b50:	eor	fp, r5, #1
   11b54:	and	fp, fp, r3
   11b58:	ands	fp, fp, #255	; 0xff
   11b5c:	beq	11ee4 <abort@plt+0x1130>
   11b60:	mov	r5, #0
   11b64:	b	12148 <abort@plt+0x1394>
   11b68:	cmp	r7, #11
   11b6c:	beq	11fb4 <abort@plt+0x1200>
   11b70:	bcc	12050 <abort@plt+0x129c>
   11b74:	cmp	r7, #12
   11b78:	beq	12060 <abort@plt+0x12ac>
   11b7c:	cmp	r7, #13
   11b80:	moveq	r3, #114	; 0x72
   11b84:	bne	11b1c <abort@plt+0xd68>
   11b88:	cmp	sl, #2
   11b8c:	movne	r2, #0
   11b90:	andeq	r2, r6, #1
   11b94:	cmp	r2, #0
   11b98:	beq	11d18 <abort@plt+0xf64>
   11b9c:	mov	sl, #2
   11ba0:	b	11a70 <abort@plt+0xcbc>
   11ba4:	cmp	r7, #37	; 0x25
   11ba8:	beq	11ca0 <abort@plt+0xeec>
   11bac:	bhi	11bc0 <abort@plt+0xe0c>
   11bb0:	cmp	r7, #35	; 0x23
   11bb4:	beq	11cec <abort@plt+0xf38>
   11bb8:	mov	r5, #0
   11bbc:	b	11cfc <abort@plt+0xf48>
   11bc0:	cmp	r7, #39	; 0x27
   11bc4:	bne	11bb8 <abort@plt+0xe04>
   11bc8:	cmp	sl, #2
   11bcc:	ldrne	r5, [sp, #52]	; 0x34
   11bd0:	movne	r3, r5
   11bd4:	strne	r3, [sp, #68]	; 0x44
   11bd8:	bne	11ca4 <abort@plt+0xef0>
   11bdc:	cmp	r6, #0
   11be0:	bne	11a70 <abort@plt+0xcbc>
   11be4:	ldr	r2, [sp, #60]	; 0x3c
   11be8:	adds	r3, r9, #0
   11bec:	movne	r3, #1
   11bf0:	cmp	r2, #0
   11bf4:	movne	r3, #0
   11bf8:	cmp	r3, #0
   11bfc:	strne	r9, [sp, #60]	; 0x3c
   11c00:	movne	r9, #0
   11c04:	bne	11c14 <abort@plt+0xe60>
   11c08:	cmp	r9, r4
   11c0c:	movhi	r3, #39	; 0x27
   11c10:	strbhi	r3, [r8, r4]
   11c14:	add	r3, r4, #1
   11c18:	cmp	r3, r9
   11c1c:	movcc	r2, #92	; 0x5c
   11c20:	strbcc	r2, [r8, r3]
   11c24:	add	r3, r4, #2
   11c28:	cmp	r3, r9
   11c2c:	ldr	r5, [sp, #52]	; 0x34
   11c30:	movcc	r2, #39	; 0x27
   11c34:	strbcc	r2, [r8, r3]
   11c38:	add	r4, r4, #3
   11c3c:	mov	fp, r6
   11c40:	str	r5, [sp, #68]	; 0x44
   11c44:	str	r6, [sp, #48]	; 0x30
   11c48:	b	11ee4 <abort@plt+0x1130>
   11c4c:	cmp	r7, #94	; 0x5e
   11c50:	beq	11bb8 <abort@plt+0xe04>
   11c54:	bhi	11cac <abort@plt+0xef8>
   11c58:	cmp	r7, #90	; 0x5a
   11c5c:	bhi	11c94 <abort@plt+0xee0>
   11c60:	cmp	r7, #65	; 0x41
   11c64:	bcs	11ca0 <abort@plt+0xeec>
   11c68:	cmp	r7, #62	; 0x3e
   11c6c:	bls	11bb8 <abort@plt+0xe04>
   11c70:	cmp	r7, #63	; 0x3f
   11c74:	bne	11b1c <abort@plt+0xd68>
   11c78:	cmp	sl, #2
   11c7c:	beq	11e20 <abort@plt+0x106c>
   11c80:	cmp	sl, #5
   11c84:	beq	11e30 <abort@plt+0x107c>
   11c88:	mov	fp, #0
   11c8c:	mov	r5, fp
   11c90:	b	11ee4 <abort@plt+0x1130>
   11c94:	cmp	r7, #92	; 0x5c
   11c98:	beq	11fbc <abort@plt+0x1208>
   11c9c:	bls	11bb8 <abort@plt+0xe04>
   11ca0:	ldr	r5, [sp, #52]	; 0x34
   11ca4:	mov	fp, #0
   11ca8:	b	11ee4 <abort@plt+0x1130>
   11cac:	cmp	r7, #122	; 0x7a
   11cb0:	bhi	11cd0 <abort@plt+0xf1c>
   11cb4:	cmp	r7, #97	; 0x61
   11cb8:	bcs	11ca0 <abort@plt+0xeec>
   11cbc:	cmp	r7, #95	; 0x5f
   11cc0:	beq	11ca0 <abort@plt+0xeec>
   11cc4:	cmp	r7, #96	; 0x60
   11cc8:	bne	11b1c <abort@plt+0xd68>
   11ccc:	b	11bb8 <abort@plt+0xe04>
   11cd0:	cmp	r7, #124	; 0x7c
   11cd4:	beq	11bb8 <abort@plt+0xe04>
   11cd8:	bcc	12068 <abort@plt+0x12b4>
   11cdc:	cmp	r7, #125	; 0x7d
   11ce0:	beq	12068 <abort@plt+0x12b4>
   11ce4:	cmp	r7, #126	; 0x7e
   11ce8:	bne	11b1c <abort@plt+0xd68>
   11cec:	ldr	r3, [sp, #28]
   11cf0:	cmp	r3, #0
   11cf4:	bne	11e28 <abort@plt+0x1074>
   11cf8:	ldr	r5, [sp, #52]	; 0x34
   11cfc:	cmp	sl, #2
   11d00:	movne	fp, #0
   11d04:	andeq	fp, r6, #1
   11d08:	cmp	fp, #0
   11d0c:	beq	11ee4 <abort@plt+0x1130>
   11d10:	b	11b9c <abort@plt+0xde8>
   11d14:	mov	r3, #98	; 0x62
   11d18:	ldr	r2, [sp, #24]
   11d1c:	cmp	r2, #0
   11d20:	beq	11e28 <abort@plt+0x1074>
   11d24:	mov	r7, r3
   11d28:	mov	r5, #0
   11d2c:	b	11f3c <abort@plt+0x1188>
   11d30:	ldr	r3, [sp, #24]
   11d34:	cmp	r3, #0
   11d38:	beq	11e04 <abort@plt+0x1050>
   11d3c:	cmp	r6, #0
   11d40:	bne	11a6c <abort@plt+0xcb8>
   11d44:	ldr	r3, [sp, #48]	; 0x30
   11d48:	eor	r2, r3, #1
   11d4c:	cmp	sl, #2
   11d50:	movne	r2, #0
   11d54:	andeq	r2, r2, #1
   11d58:	cmp	r2, #0
   11d5c:	moveq	r3, r4
   11d60:	beq	11d98 <abort@plt+0xfe4>
   11d64:	cmp	r9, r4
   11d68:	movhi	r3, #39	; 0x27
   11d6c:	strbhi	r3, [r8, r4]
   11d70:	add	r3, r4, #1
   11d74:	cmp	r9, r3
   11d78:	movhi	r1, #36	; 0x24
   11d7c:	strbhi	r1, [r8, r3]
   11d80:	add	r3, r4, #2
   11d84:	cmp	r9, r3
   11d88:	movhi	r1, #39	; 0x27
   11d8c:	strbhi	r1, [r8, r3]
   11d90:	add	r3, r4, #3
   11d94:	str	r2, [sp, #48]	; 0x30
   11d98:	cmp	r9, r3
   11d9c:	movhi	r2, #92	; 0x5c
   11da0:	strbhi	r2, [r8, r3]
   11da4:	cmp	fp, #0
   11da8:	add	r4, r3, #1
   11dac:	beq	1233c <abort@plt+0x1588>
   11db0:	ldr	r2, [sp, #28]
   11db4:	ldr	r1, [sp, #36]	; 0x24
   11db8:	add	r2, r2, #1
   11dbc:	cmp	r1, r2
   11dc0:	bls	11dfc <abort@plt+0x1048>
   11dc4:	ldr	r1, [sp, #44]	; 0x2c
   11dc8:	mov	r7, #48	; 0x30
   11dcc:	ldrb	r2, [r1, r2]
   11dd0:	sub	r2, r2, #48	; 0x30
   11dd4:	cmp	r2, #9
   11dd8:	movhi	r5, r6
   11ddc:	bhi	11ee4 <abort@plt+0x1130>
   11de0:	cmp	r9, r4
   11de4:	add	r2, r3, #2
   11de8:	strbhi	r7, [r8, r4]
   11dec:	cmp	r9, r2
   11df0:	add	r4, r3, #3
   11df4:	movhi	r1, #48	; 0x30
   11df8:	strbhi	r1, [r8, r2]
   11dfc:	mov	r5, r6
   11e00:	b	12344 <abort@plt+0x1590>
   11e04:	ldr	r3, [sp, #148]	; 0x94
   11e08:	tst	r3, #1
   11e0c:	ldreq	r5, [sp, #24]
   11e10:	beq	12350 <abort@plt+0x159c>
   11e14:	ldr	r3, [sp, #28]
   11e18:	add	r3, r3, #1
   11e1c:	b	117bc <abort@plt+0xa08>
   11e20:	cmp	r6, #0
   11e24:	bne	11a70 <abort@plt+0xcbc>
   11e28:	mov	r5, #0
   11e2c:	b	11ca4 <abort@plt+0xef0>
   11e30:	ldr	r3, [sp, #148]	; 0x94
   11e34:	tst	r3, #4
   11e38:	beq	11e28 <abort@plt+0x1074>
   11e3c:	ldr	r3, [sp, #28]
   11e40:	add	r2, r3, #2
   11e44:	ldr	r3, [sp, #36]	; 0x24
   11e48:	cmp	r3, r2
   11e4c:	bls	11e28 <abort@plt+0x1074>
   11e50:	ldr	r3, [sp, #44]	; 0x2c
   11e54:	ldr	r1, [sp, #28]
   11e58:	add	r3, r3, r1
   11e5c:	ldrb	r0, [r3, #1]
   11e60:	cmp	r0, #63	; 0x3f
   11e64:	bne	11e28 <abort@plt+0x1074>
   11e68:	ldr	r3, [sp, #44]	; 0x2c
   11e6c:	ldrb	r1, [r3, r2]
   11e70:	sub	r3, r1, #33	; 0x21
   11e74:	uxtb	r3, r3
   11e78:	cmp	r3, #29
   11e7c:	bhi	1234c <abort@plt+0x1598>
   11e80:	mov	ip, #1
   11e84:	ldr	r5, [pc, #1428]	; 12420 <abort@plt+0x166c>
   11e88:	ands	r5, r5, ip, lsl r3
   11e8c:	beq	11ca4 <abort@plt+0xef0>
   11e90:	cmp	r6, #0
   11e94:	bne	11a70 <abort@plt+0xcbc>
   11e98:	add	r3, r4, #1
   11e9c:	cmp	r9, r4
   11ea0:	strbhi	r0, [r8, r4]
   11ea4:	cmp	r9, r3
   11ea8:	movhi	r0, #34	; 0x22
   11eac:	strbhi	r0, [r8, r3]
   11eb0:	add	r3, r4, #2
   11eb4:	cmp	r9, r3
   11eb8:	movhi	r0, #34	; 0x22
   11ebc:	strbhi	r0, [r8, r3]
   11ec0:	add	r3, r4, #3
   11ec4:	cmp	r9, r3
   11ec8:	add	r4, r4, #4
   11ecc:	mov	r5, r6
   11ed0:	mov	fp, r6
   11ed4:	mov	r7, r1
   11ed8:	movhi	r0, #63	; 0x3f
   11edc:	strbhi	r0, [r8, r3]
   11ee0:	str	r2, [sp, #28]
   11ee4:	ldr	r3, [sp, #24]
   11ee8:	eor	r3, r3, #1
   11eec:	cmp	sl, #2
   11ef0:	orreq	r3, r3, #1
   11ef4:	eor	r3, r3, #1
   11ef8:	orr	r3, r6, r3
   11efc:	tst	r3, #255	; 0xff
   11f00:	beq	11f30 <abort@plt+0x117c>
   11f04:	ldr	r3, [sp, #152]	; 0x98
   11f08:	cmp	r3, #0
   11f0c:	beq	11f30 <abort@plt+0x117c>
   11f10:	lsr	r2, r7, #5
   11f14:	ldr	r1, [sp, #152]	; 0x98
   11f18:	uxtb	r2, r2
   11f1c:	and	r3, r7, #31
   11f20:	ldr	r2, [r1, r2, lsl #2]
   11f24:	lsr	r3, r2, r3
   11f28:	tst	r3, #1
   11f2c:	bne	11f3c <abort@plt+0x1188>
   11f30:	ldr	r3, [sp, #64]	; 0x40
   11f34:	cmp	r3, #0
   11f38:	beq	11fd4 <abort@plt+0x1220>
   11f3c:	cmp	r6, #0
   11f40:	bne	11a70 <abort@plt+0xcbc>
   11f44:	ldr	r3, [sp, #48]	; 0x30
   11f48:	eor	r3, r3, #1
   11f4c:	cmp	sl, #2
   11f50:	movne	r3, #0
   11f54:	andeq	r3, r3, #1
   11f58:	cmp	r3, #0
   11f5c:	beq	11f94 <abort@plt+0x11e0>
   11f60:	cmp	r9, r4
   11f64:	movhi	r2, #39	; 0x27
   11f68:	strbhi	r2, [r8, r4]
   11f6c:	add	r2, r4, #1
   11f70:	cmp	r9, r2
   11f74:	movhi	r1, #36	; 0x24
   11f78:	strbhi	r1, [r8, r2]
   11f7c:	add	r2, r4, #2
   11f80:	cmp	r9, r2
   11f84:	add	r4, r4, #3
   11f88:	movhi	r1, #39	; 0x27
   11f8c:	strbhi	r1, [r8, r2]
   11f90:	str	r3, [sp, #48]	; 0x30
   11f94:	cmp	r9, r4
   11f98:	movhi	r3, #92	; 0x5c
   11f9c:	strbhi	r3, [r8, r4]
   11fa0:	ldr	fp, [sp, #52]	; 0x34
   11fa4:	add	r4, r4, #1
   11fa8:	b	11fd4 <abort@plt+0x1220>
   11fac:	mov	r3, #116	; 0x74
   11fb0:	b	11b88 <abort@plt+0xdd4>
   11fb4:	mov	r3, #118	; 0x76
   11fb8:	b	11d18 <abort@plt+0xf64>
   11fbc:	cmp	sl, #2
   11fc0:	bne	12030 <abort@plt+0x127c>
   11fc4:	cmp	r6, #0
   11fc8:	bne	11a70 <abort@plt+0xcbc>
   11fcc:	mov	r5, r6
   11fd0:	mov	fp, r6
   11fd4:	ldr	r3, [sp, #48]	; 0x30
   11fd8:	eor	fp, fp, #1
   11fdc:	and	fp, fp, r3
   11fe0:	tst	fp, #255	; 0xff
   11fe4:	beq	12010 <abort@plt+0x125c>
   11fe8:	cmp	r9, r4
   11fec:	movhi	r3, #39	; 0x27
   11ff0:	strbhi	r3, [r8, r4]
   11ff4:	add	r3, r4, #1
   11ff8:	cmp	r9, r3
   11ffc:	movhi	r2, #39	; 0x27
   12000:	add	r4, r4, #2
   12004:	strbhi	r2, [r8, r3]
   12008:	mov	r3, #0
   1200c:	str	r3, [sp, #48]	; 0x30
   12010:	cmp	r9, r4
   12014:	strbhi	r7, [r8, r4]
   12018:	ldr	r3, [sp, #72]	; 0x48
   1201c:	cmp	r5, #0
   12020:	moveq	r3, #0
   12024:	add	r4, r4, #1
   12028:	str	r3, [sp, #72]	; 0x48
   1202c:	b	11e14 <abort@plt+0x1060>
   12030:	ldr	r3, [sp, #24]
   12034:	and	r3, r3, r6
   12038:	tst	r5, r3
   1203c:	moveq	r3, r7
   12040:	beq	11b88 <abort@plt+0xdd4>
   12044:	mov	fp, #0
   12048:	mov	r5, fp
   1204c:	b	11fd4 <abort@plt+0x1220>
   12050:	mov	r3, #110	; 0x6e
   12054:	b	11b88 <abort@plt+0xdd4>
   12058:	mov	r3, #97	; 0x61
   1205c:	b	11d18 <abort@plt+0xf64>
   12060:	mov	r3, #102	; 0x66
   12064:	b	11d18 <abort@plt+0xf64>
   12068:	ldr	r3, [sp, #36]	; 0x24
   1206c:	cmn	r3, #1
   12070:	bne	12090 <abort@plt+0x12dc>
   12074:	ldr	r3, [sp, #44]	; 0x2c
   12078:	ldrb	r3, [r3, #1]
   1207c:	adds	r3, r3, #0
   12080:	movne	r3, #1
   12084:	cmp	r3, #0
   12088:	bne	11e28 <abort@plt+0x1074>
   1208c:	b	11cec <abort@plt+0xf38>
   12090:	ldr	r3, [sp, #36]	; 0x24
   12094:	subs	r3, r3, #1
   12098:	b	12080 <abort@plt+0x12cc>
   1209c:	mov	r3, #0
   120a0:	str	r3, [sp, #96]	; 0x60
   120a4:	str	r3, [sp, #100]	; 0x64
   120a8:	ldr	r3, [sp, #36]	; 0x24
   120ac:	cmn	r3, #1
   120b0:	bne	120c0 <abort@plt+0x130c>
   120b4:	ldr	r0, [sp, #44]	; 0x2c
   120b8:	bl	10d00 <strlen@plt>
   120bc:	str	r0, [sp, #36]	; 0x24
   120c0:	ldr	r5, [sp, #52]	; 0x34
   120c4:	mov	r3, #0
   120c8:	str	r3, [sp, #56]	; 0x38
   120cc:	ldr	r3, [sp, #28]
   120d0:	ldr	r2, [sp, #56]	; 0x38
   120d4:	ldr	r1, [sp, #36]	; 0x24
   120d8:	add	r2, r3, r2
   120dc:	ldr	r3, [sp, #44]	; 0x2c
   120e0:	add	r0, sp, #92	; 0x5c
   120e4:	add	fp, r3, r2
   120e8:	sub	r2, r1, r2
   120ec:	add	r3, sp, #96	; 0x60
   120f0:	mov	r1, fp
   120f4:	bl	13884 <abort@plt+0x2ad0>
   120f8:	subs	r2, r0, #0
   120fc:	beq	1213c <abort@plt+0x1388>
   12100:	cmn	r2, #1
   12104:	beq	12314 <abort@plt+0x1560>
   12108:	cmn	r2, #2
   1210c:	bne	12284 <abort@plt+0x14d0>
   12110:	ldr	r2, [sp, #56]	; 0x38
   12114:	ldr	r3, [sp, #28]
   12118:	add	r3, r3, r2
   1211c:	ldr	r2, [sp, #36]	; 0x24
   12120:	cmp	r2, r3
   12124:	bls	12314 <abort@plt+0x1560>
   12128:	ldr	r3, [sp, #80]	; 0x50
   1212c:	ldr	r2, [sp, #56]	; 0x38
   12130:	ldrb	r5, [r3, r2]
   12134:	cmp	r5, #0
   12138:	bne	12274 <abort@plt+0x14c0>
   1213c:	ldr	r3, [sp, #56]	; 0x38
   12140:	cmp	r3, #1
   12144:	bls	11b4c <abort@plt+0xd98>
   12148:	ldr	r2, [sp, #56]	; 0x38
   1214c:	ldr	r3, [sp, #28]
   12150:	mov	fp, #0
   12154:	add	r3, r3, r2
   12158:	ldr	r2, [sp, #24]
   1215c:	str	r3, [sp, #52]	; 0x34
   12160:	eor	r3, r5, #1
   12164:	and	r3, r3, r2
   12168:	mov	ip, #92	; 0x5c
   1216c:	uxtb	r3, r3
   12170:	mov	r2, #39	; 0x27
   12174:	cmp	r3, #0
   12178:	beq	1231c <abort@plt+0x1568>
   1217c:	cmp	r6, #0
   12180:	bne	11a6c <abort@plt+0xcb8>
   12184:	ldr	r1, [sp, #48]	; 0x30
   12188:	eor	r1, r1, #1
   1218c:	cmp	sl, #2
   12190:	movne	r1, #0
   12194:	andeq	r1, r1, #1
   12198:	cmp	r1, #0
   1219c:	beq	121cc <abort@plt+0x1418>
   121a0:	add	r0, r4, #1
   121a4:	cmp	r9, r4
   121a8:	strbhi	r2, [r8, r4]
   121ac:	cmp	r9, r0
   121b0:	movhi	lr, #36	; 0x24
   121b4:	strbhi	lr, [r8, r0]
   121b8:	add	r0, r4, #2
   121bc:	add	r4, r4, #3
   121c0:	cmp	r9, r0
   121c4:	strbhi	r2, [r8, r0]
   121c8:	str	r1, [sp, #48]	; 0x30
   121cc:	add	r0, r4, #1
   121d0:	cmp	r9, r4
   121d4:	strbhi	ip, [r8, r4]
   121d8:	cmp	r9, r0
   121dc:	lsrhi	r1, r7, #6
   121e0:	addhi	r1, r1, #48	; 0x30
   121e4:	strbhi	r1, [r8, r0]
   121e8:	add	r0, r4, #2
   121ec:	cmp	r9, r0
   121f0:	lsrhi	r1, r7, #3
   121f4:	and	r7, r7, #7
   121f8:	andhi	r1, r1, #7
   121fc:	add	r4, r4, #3
   12200:	add	r7, r7, #48	; 0x30
   12204:	mov	fp, r3
   12208:	addhi	r1, r1, #48	; 0x30
   1220c:	strbhi	r1, [r8, r0]
   12210:	ldr	r1, [sp, #28]
   12214:	ldr	r0, [sp, #52]	; 0x34
   12218:	add	r1, r1, #1
   1221c:	cmp	r0, r1
   12220:	bls	11fd4 <abort@plt+0x1220>
   12224:	ldr	lr, [sp, #48]	; 0x30
   12228:	eor	r0, fp, #1
   1222c:	and	r0, r0, lr
   12230:	tst	r0, #255	; 0xff
   12234:	beq	12258 <abort@plt+0x14a4>
   12238:	add	r0, r4, #1
   1223c:	cmp	r9, r4
   12240:	strbhi	r2, [r8, r4]
   12244:	cmp	r9, r0
   12248:	add	r4, r4, #2
   1224c:	strbhi	r2, [r8, r0]
   12250:	mov	r0, #0
   12254:	str	r0, [sp, #48]	; 0x30
   12258:	ldr	r0, [sp, #44]	; 0x2c
   1225c:	cmp	r9, r4
   12260:	strbhi	r7, [r8, r4]
   12264:	str	r1, [sp, #28]
   12268:	add	r4, r4, #1
   1226c:	ldrb	r7, [r0, r1]
   12270:	b	12174 <abort@plt+0x13c0>
   12274:	ldr	r3, [sp, #56]	; 0x38
   12278:	add	r3, r3, #1
   1227c:	str	r3, [sp, #56]	; 0x38
   12280:	b	12110 <abort@plt+0x135c>
   12284:	cmp	sl, #2
   12288:	movne	r3, #0
   1228c:	andeq	r3, r6, #1
   12290:	cmp	r3, #0
   12294:	movne	r1, #1
   12298:	bne	122f4 <abort@plt+0x1540>
   1229c:	ldr	r0, [sp, #92]	; 0x5c
   122a0:	str	r2, [sp, #84]	; 0x54
   122a4:	bl	10c4c <iswprint@plt>
   122a8:	ldr	r3, [sp, #56]	; 0x38
   122ac:	ldr	r2, [sp, #84]	; 0x54
   122b0:	add	r3, r3, r2
   122b4:	str	r3, [sp, #56]	; 0x38
   122b8:	cmp	r0, #0
   122bc:	add	r0, sp, #96	; 0x60
   122c0:	moveq	r5, #0
   122c4:	bl	10bf8 <mbsinit@plt>
   122c8:	cmp	r0, #0
   122cc:	beq	120cc <abort@plt+0x1318>
   122d0:	b	1213c <abort@plt+0x1388>
   122d4:	ldrb	r3, [fp, r1]
   122d8:	cmp	r3, #94	; 0x5e
   122dc:	beq	11b9c <abort@plt+0xde8>
   122e0:	bhi	12300 <abort@plt+0x154c>
   122e4:	sub	r3, r3, #91	; 0x5b
   122e8:	cmp	r3, #1
   122ec:	bls	11b9c <abort@plt+0xde8>
   122f0:	add	r1, r1, #1
   122f4:	cmp	r1, r2
   122f8:	bne	122d4 <abort@plt+0x1520>
   122fc:	b	1229c <abort@plt+0x14e8>
   12300:	cmp	r3, #96	; 0x60
   12304:	beq	11b9c <abort@plt+0xde8>
   12308:	cmp	r3, #124	; 0x7c
   1230c:	bne	122f0 <abort@plt+0x153c>
   12310:	b	11b9c <abort@plt+0xde8>
   12314:	mov	r5, #0
   12318:	b	1213c <abort@plt+0x1388>
   1231c:	ldr	r1, [sp, #64]	; 0x40
   12320:	cmp	r1, #0
   12324:	beq	12210 <abort@plt+0x145c>
   12328:	cmp	r9, r4
   1232c:	strbhi	ip, [r8, r4]
   12330:	str	r3, [sp, #64]	; 0x40
   12334:	add	r4, r4, #1
   12338:	b	12210 <abort@plt+0x145c>
   1233c:	mov	r5, fp
   12340:	ldr	fp, [sp, #24]
   12344:	mov	r7, #48	; 0x30
   12348:	b	11ee4 <abort@plt+0x1130>
   1234c:	mov	r5, #0
   12350:	mov	fp, r5
   12354:	b	11ee4 <abort@plt+0x1130>
   12358:	ldr	r3, [sp, #36]	; 0x24
   1235c:	ldr	r2, [sp, #28]
   12360:	subs	r3, r3, r2
   12364:	movne	r3, #1
   12368:	b	117e0 <abort@plt+0xa2c>
   1236c:	ldr	r3, [sp, #60]	; 0x3c
   12370:	clz	r7, r9
   12374:	cmp	r3, #0
   12378:	lsr	r7, r7, #5
   1237c:	moveq	r7, #0
   12380:	cmp	r7, #0
   12384:	mov	r5, r3
   12388:	bne	11740 <abort@plt+0x98c>
   1238c:	ldr	r3, [sp, #68]	; 0x44
   12390:	ldr	r2, [sp, #40]	; 0x28
   12394:	cmp	r2, #0
   12398:	moveq	r3, #0
   1239c:	andne	r3, r3, #1
   123a0:	cmp	r3, #0
   123a4:	movne	r3, r2
   123a8:	subne	r2, r3, #1
   123ac:	bne	123dc <abort@plt+0x1628>
   123b0:	cmp	r9, r4
   123b4:	movhi	r3, #0
   123b8:	strbhi	r3, [r8, r4]
   123bc:	mov	r0, r4
   123c0:	add	sp, sp, #108	; 0x6c
   123c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   123c8:	mov	r3, r2
   123cc:	b	12390 <abort@plt+0x15dc>
   123d0:	cmp	r9, r4
   123d4:	strbhi	r3, [r8, r4]
   123d8:	add	r4, r4, #1
   123dc:	ldrb	r3, [r2, #1]!
   123e0:	cmp	r3, #0
   123e4:	bne	123d0 <abort@plt+0x161c>
   123e8:	b	123b0 <abort@plt+0x15fc>
   123ec:	ldr	r3, [pc, #32]	; 12414 <abort@plt+0x1660>
   123f0:	mov	r6, #1
   123f4:	str	r6, [sp, #24]
   123f8:	str	r6, [sp, #32]
   123fc:	str	r3, [sp, #40]	; 0x28
   12400:	mov	r4, #0
   12404:	mov	sl, #5
   12408:	b	117b0 <abort@plt+0x9fc>
   1240c:	mov	r6, #1
   12410:	b	119a4 <abort@plt+0xbf0>
   12414:	andeq	r4, r1, r3, asr #5
   12418:	andeq	r4, r1, r7, asr #5
   1241c:	andeq	r4, r1, r5, asr #5
   12420:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   12424:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12428:	sub	sp, sp, #52	; 0x34
   1242c:	mov	r6, r0
   12430:	mov	r5, r3
   12434:	mov	r8, r1
   12438:	mov	r9, r2
   1243c:	bl	10d0c <__errno_location@plt>
   12440:	ldr	r7, [pc, #380]	; 125c4 <abort@plt+0x1810>
   12444:	cmn	r6, #-2147483647	; 0x80000001
   12448:	ldr	r4, [r7]
   1244c:	ldr	r3, [r0]
   12450:	str	r0, [sp, #24]
   12454:	str	r3, [sp, #32]
   12458:	movne	r3, #0
   1245c:	moveq	r3, #1
   12460:	orrs	r3, r3, r6, lsr #31
   12464:	beq	1246c <abort@plt+0x16b8>
   12468:	bl	10db4 <abort@plt>
   1246c:	ldr	r2, [r7, #4]
   12470:	cmp	r6, r2
   12474:	blt	124e4 <abort@plt+0x1730>
   12478:	add	r1, sp, #48	; 0x30
   1247c:	add	sl, r7, #8
   12480:	str	r2, [r1, #-4]!
   12484:	cmp	r4, sl
   12488:	mov	r3, #8
   1248c:	sub	r2, r6, r2
   12490:	movne	r0, r4
   12494:	str	r3, [sp]
   12498:	add	r2, r2, #1
   1249c:	mvn	r3, #-2147483648	; 0x80000000
   124a0:	moveq	r0, #0
   124a4:	bl	131b8 <abort@plt+0x2404>
   124a8:	cmp	r4, sl
   124ac:	ldr	r2, [sp, #44]	; 0x2c
   124b0:	mov	fp, r0
   124b4:	str	r0, [r7]
   124b8:	ldmeq	r4, {r0, r1}
   124bc:	mov	r4, fp
   124c0:	stmeq	fp, {r0, r1}
   124c4:	ldr	r0, [r7, #4]
   124c8:	mov	r1, #0
   124cc:	sub	r2, r2, r0
   124d0:	add	r0, fp, r0, lsl #3
   124d4:	lsl	r2, r2, #3
   124d8:	bl	10d24 <memset@plt>
   124dc:	ldr	r3, [sp, #44]	; 0x2c
   124e0:	str	r3, [r7, #4]
   124e4:	ldr	r3, [r5, #4]
   124e8:	add	sl, r4, r6, lsl #3
   124ec:	orr	r3, r3, #1
   124f0:	str	r3, [sp, #28]
   124f4:	add	r3, r5, #8
   124f8:	str	r3, [sp, #36]	; 0x24
   124fc:	ldr	r3, [r5, #44]	; 0x2c
   12500:	ldr	fp, [r4, r6, lsl #3]
   12504:	ldr	r7, [sl, #4]
   12508:	str	r3, [sp, #16]
   1250c:	ldr	r3, [r5, #40]	; 0x28
   12510:	mov	r2, r8
   12514:	str	r3, [sp, #12]
   12518:	add	r3, r5, #8
   1251c:	str	r3, [sp, #8]
   12520:	ldr	r3, [sp, #28]
   12524:	mov	r1, fp
   12528:	str	r3, [sp, #4]
   1252c:	ldr	r3, [r5]
   12530:	mov	r0, r7
   12534:	str	r3, [sp]
   12538:	mov	r3, r9
   1253c:	bl	116f0 <abort@plt+0x93c>
   12540:	cmp	fp, r0
   12544:	bhi	125ac <abort@plt+0x17f8>
   12548:	ldr	r3, [pc, #120]	; 125c8 <abort@plt+0x1814>
   1254c:	add	fp, r0, #1
   12550:	cmp	r7, r3
   12554:	str	fp, [r4, r6, lsl #3]
   12558:	beq	12564 <abort@plt+0x17b0>
   1255c:	mov	r0, r7
   12560:	bl	13768 <abort@plt+0x29b4>
   12564:	mov	r0, fp
   12568:	bl	13070 <abort@plt+0x22bc>
   1256c:	ldr	r3, [r5, #44]	; 0x2c
   12570:	mov	r2, r8
   12574:	mov	r1, fp
   12578:	str	r0, [sl, #4]
   1257c:	str	r3, [sp, #16]
   12580:	ldr	r3, [r5, #40]	; 0x28
   12584:	mov	r7, r0
   12588:	str	r3, [sp, #12]
   1258c:	add	r3, r5, #8
   12590:	str	r3, [sp, #8]
   12594:	ldr	r3, [sp, #28]
   12598:	str	r3, [sp, #4]
   1259c:	ldr	r3, [r5]
   125a0:	str	r3, [sp]
   125a4:	mov	r3, r9
   125a8:	bl	116f0 <abort@plt+0x93c>
   125ac:	ldr	r3, [sp, #24]
   125b0:	ldr	r2, [sp, #32]
   125b4:	mov	r0, r7
   125b8:	str	r2, [r3]
   125bc:	add	sp, sp, #52	; 0x34
   125c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   125c4:	ldrdeq	r5, [r2], -ip
   125c8:	andeq	r5, r2, ip, asr #2
   125cc:	push	{r4, r5, r6, lr}
   125d0:	mov	r5, r0
   125d4:	bl	10d0c <__errno_location@plt>
   125d8:	cmp	r5, #0
   125dc:	mov	r1, #48	; 0x30
   125e0:	ldr	r6, [r0]
   125e4:	mov	r4, r0
   125e8:	ldr	r0, [pc, #12]	; 125fc <abort@plt+0x1848>
   125ec:	movne	r0, r5
   125f0:	bl	1344c <abort@plt+0x2698>
   125f4:	str	r6, [r4]
   125f8:	pop	{r4, r5, r6, pc}
   125fc:	andeq	r5, r2, ip, asr #4
   12600:	ldr	r3, [pc, #12]	; 12614 <abort@plt+0x1860>
   12604:	cmp	r0, #0
   12608:	moveq	r0, r3
   1260c:	ldr	r0, [r0]
   12610:	bx	lr
   12614:	andeq	r5, r2, ip, asr #4
   12618:	ldr	r3, [pc, #12]	; 1262c <abort@plt+0x1878>
   1261c:	cmp	r0, #0
   12620:	moveq	r0, r3
   12624:	str	r1, [r0]
   12628:	bx	lr
   1262c:	andeq	r5, r2, ip, asr #4
   12630:	ldr	r3, [pc, #52]	; 1266c <abort@plt+0x18b8>
   12634:	cmp	r0, #0
   12638:	moveq	r0, r3
   1263c:	add	r3, r0, #8
   12640:	push	{lr}		; (str lr, [sp, #-4]!)
   12644:	lsr	lr, r1, #5
   12648:	and	r1, r1, #31
   1264c:	ldr	ip, [r3, lr, lsl #2]
   12650:	lsr	r0, ip, r1
   12654:	eor	r2, r2, r0
   12658:	and	r2, r2, #1
   1265c:	and	r0, r0, #1
   12660:	eor	r1, ip, r2, lsl r1
   12664:	str	r1, [r3, lr, lsl #2]
   12668:	pop	{pc}		; (ldr pc, [sp], #4)
   1266c:	andeq	r5, r2, ip, asr #4
   12670:	ldr	r3, [pc, #16]	; 12688 <abort@plt+0x18d4>
   12674:	cmp	r0, #0
   12678:	movne	r3, r0
   1267c:	ldr	r0, [r3, #4]
   12680:	str	r1, [r3, #4]
   12684:	bx	lr
   12688:	andeq	r5, r2, ip, asr #4
   1268c:	ldr	r3, [pc, #44]	; 126c0 <abort@plt+0x190c>
   12690:	cmp	r0, #0
   12694:	moveq	r0, r3
   12698:	mov	r3, #10
   1269c:	cmp	r2, #0
   126a0:	cmpne	r1, #0
   126a4:	str	r3, [r0]
   126a8:	bne	126b4 <abort@plt+0x1900>
   126ac:	push	{r4, lr}
   126b0:	bl	10db4 <abort@plt>
   126b4:	str	r1, [r0, #40]	; 0x28
   126b8:	str	r2, [r0, #44]	; 0x2c
   126bc:	bx	lr
   126c0:	andeq	r5, r2, ip, asr #4
   126c4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   126c8:	sub	sp, sp, #24
   126cc:	mov	sl, r3
   126d0:	ldr	r4, [sp, #56]	; 0x38
   126d4:	ldr	r3, [pc, #100]	; 12740 <abort@plt+0x198c>
   126d8:	cmp	r4, #0
   126dc:	moveq	r4, r3
   126e0:	mov	r7, r0
   126e4:	mov	r8, r1
   126e8:	mov	r9, r2
   126ec:	bl	10d0c <__errno_location@plt>
   126f0:	ldr	r3, [r4, #44]	; 0x2c
   126f4:	mov	r2, r9
   126f8:	mov	r1, r8
   126fc:	ldr	r6, [r0]
   12700:	str	r3, [sp, #16]
   12704:	ldr	r3, [r4, #40]	; 0x28
   12708:	mov	r5, r0
   1270c:	str	r3, [sp, #12]
   12710:	add	r3, r4, #8
   12714:	str	r3, [sp, #8]
   12718:	ldr	r3, [r4, #4]
   1271c:	mov	r0, r7
   12720:	str	r3, [sp, #4]
   12724:	ldr	r3, [r4]
   12728:	str	r3, [sp]
   1272c:	mov	r3, sl
   12730:	bl	116f0 <abort@plt+0x93c>
   12734:	str	r6, [r5]
   12738:	add	sp, sp, #24
   1273c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12740:	andeq	r5, r2, ip, asr #4
   12744:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12748:	cmp	r3, #0
   1274c:	sub	sp, sp, #44	; 0x2c
   12750:	ldr	r4, [pc, #188]	; 12814 <abort@plt+0x1a60>
   12754:	mov	r6, r2
   12758:	movne	r4, r3
   1275c:	mov	sl, r1
   12760:	mov	r9, r0
   12764:	bl	10d0c <__errno_location@plt>
   12768:	ldr	r5, [r4, #4]
   1276c:	add	fp, r4, #8
   12770:	cmp	r6, #0
   12774:	orreq	r5, r5, #1
   12778:	mov	r1, #0
   1277c:	mov	r2, r9
   12780:	ldr	r3, [r0]
   12784:	mov	r8, r0
   12788:	str	r3, [sp, #28]
   1278c:	ldr	r3, [r4, #44]	; 0x2c
   12790:	mov	r0, r1
   12794:	str	r3, [sp, #16]
   12798:	ldr	r3, [r4, #40]	; 0x28
   1279c:	stmib	sp, {r5, fp}
   127a0:	str	r3, [sp, #12]
   127a4:	ldr	r3, [r4]
   127a8:	str	r3, [sp]
   127ac:	mov	r3, sl
   127b0:	bl	116f0 <abort@plt+0x93c>
   127b4:	add	r1, r0, #1
   127b8:	mov	r7, r0
   127bc:	mov	r0, r1
   127c0:	str	r1, [sp, #36]	; 0x24
   127c4:	bl	13070 <abort@plt+0x22bc>
   127c8:	ldr	r3, [r4, #44]	; 0x2c
   127cc:	mov	r2, r9
   127d0:	str	r3, [sp, #16]
   127d4:	ldr	r3, [r4, #40]	; 0x28
   127d8:	stmib	sp, {r5, fp}
   127dc:	str	r3, [sp, #12]
   127e0:	ldr	r3, [r4]
   127e4:	ldr	r1, [sp, #36]	; 0x24
   127e8:	str	r3, [sp]
   127ec:	mov	r3, sl
   127f0:	str	r0, [sp, #32]
   127f4:	bl	116f0 <abort@plt+0x93c>
   127f8:	ldr	r3, [sp, #28]
   127fc:	cmp	r6, #0
   12800:	str	r3, [r8]
   12804:	ldr	r0, [sp, #32]
   12808:	strne	r7, [r6]
   1280c:	add	sp, sp, #44	; 0x2c
   12810:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12814:	andeq	r5, r2, ip, asr #4
   12818:	mov	r3, r2
   1281c:	mov	r2, #0
   12820:	b	12744 <abort@plt+0x1990>
   12824:	push	{r4, r5, r6, r7, r8, lr}
   12828:	mov	r6, #1
   1282c:	ldr	r4, [pc, #104]	; 1289c <abort@plt+0x1ae8>
   12830:	ldr	r5, [r4]
   12834:	add	r7, r5, #12
   12838:	ldr	r3, [r4, #4]
   1283c:	add	r7, r7, #8
   12840:	cmp	r6, r3
   12844:	blt	1288c <abort@plt+0x1ad8>
   12848:	ldr	r0, [r5, #4]
   1284c:	ldr	r6, [pc, #76]	; 128a0 <abort@plt+0x1aec>
   12850:	cmp	r0, r6
   12854:	beq	12868 <abort@plt+0x1ab4>
   12858:	bl	13768 <abort@plt+0x29b4>
   1285c:	mov	r3, #256	; 0x100
   12860:	str	r3, [r4, #8]
   12864:	str	r6, [r4, #12]
   12868:	ldr	r6, [pc, #52]	; 128a4 <abort@plt+0x1af0>
   1286c:	cmp	r5, r6
   12870:	beq	12880 <abort@plt+0x1acc>
   12874:	mov	r0, r5
   12878:	bl	13768 <abort@plt+0x29b4>
   1287c:	str	r6, [r4]
   12880:	mov	r3, #1
   12884:	str	r3, [r4, #4]
   12888:	pop	{r4, r5, r6, r7, r8, pc}
   1288c:	ldr	r0, [r7, #-8]
   12890:	bl	13768 <abort@plt+0x29b4>
   12894:	add	r6, r6, #1
   12898:	b	12838 <abort@plt+0x1a84>
   1289c:	ldrdeq	r5, [r2], -ip
   128a0:	andeq	r5, r2, ip, asr #2
   128a4:	andeq	r5, r2, r4, ror #1
   128a8:	ldr	r3, [pc, #4]	; 128b4 <abort@plt+0x1b00>
   128ac:	mvn	r2, #0
   128b0:	b	12424 <abort@plt+0x1670>
   128b4:	andeq	r5, r2, ip, asr #4
   128b8:	ldr	r3, [pc]	; 128c0 <abort@plt+0x1b0c>
   128bc:	b	12424 <abort@plt+0x1670>
   128c0:	andeq	r5, r2, ip, asr #4
   128c4:	mov	r1, r0
   128c8:	mov	r0, #0
   128cc:	b	128a8 <abort@plt+0x1af4>
   128d0:	mov	r2, r1
   128d4:	mov	r1, r0
   128d8:	mov	r0, #0
   128dc:	b	128b8 <abort@plt+0x1b04>
   128e0:	push	{r4, r5, lr}
   128e4:	sub	sp, sp, #52	; 0x34
   128e8:	mov	r5, r2
   128ec:	mov	r4, r0
   128f0:	mov	r0, sp
   128f4:	bl	115ac <abort@plt+0x7f8>
   128f8:	mov	r3, sp
   128fc:	mvn	r2, #0
   12900:	mov	r1, r5
   12904:	mov	r0, r4
   12908:	bl	12424 <abort@plt+0x1670>
   1290c:	add	sp, sp, #52	; 0x34
   12910:	pop	{r4, r5, pc}
   12914:	push	{r4, r5, r6, lr}
   12918:	sub	sp, sp, #48	; 0x30
   1291c:	mov	r5, r2
   12920:	mov	r6, r3
   12924:	mov	r4, r0
   12928:	mov	r0, sp
   1292c:	bl	115ac <abort@plt+0x7f8>
   12930:	mov	r3, sp
   12934:	mov	r2, r6
   12938:	mov	r1, r5
   1293c:	mov	r0, r4
   12940:	bl	12424 <abort@plt+0x1670>
   12944:	add	sp, sp, #48	; 0x30
   12948:	pop	{r4, r5, r6, pc}
   1294c:	mov	r2, r1
   12950:	mov	r1, r0
   12954:	mov	r0, #0
   12958:	b	128e0 <abort@plt+0x1b2c>
   1295c:	mov	r3, r2
   12960:	mov	r2, r1
   12964:	mov	r1, r0
   12968:	mov	r0, #0
   1296c:	b	12914 <abort@plt+0x1b60>
   12970:	push	{r4, r5, r6, lr}
   12974:	mov	r4, r0
   12978:	ldr	lr, [pc, #80]	; 129d0 <abort@plt+0x1c1c>
   1297c:	mov	r5, r1
   12980:	mov	r6, r2
   12984:	ldm	lr!, {r0, r1, r2, r3}
   12988:	sub	sp, sp, #48	; 0x30
   1298c:	mov	ip, sp
   12990:	stmia	ip!, {r0, r1, r2, r3}
   12994:	ldm	lr!, {r0, r1, r2, r3}
   12998:	stmia	ip!, {r0, r1, r2, r3}
   1299c:	ldm	lr, {r0, r1, r2, r3}
   129a0:	stm	ip, {r0, r1, r2, r3}
   129a4:	mov	r1, r6
   129a8:	mov	r2, #1
   129ac:	mov	r0, sp
   129b0:	bl	12630 <abort@plt+0x187c>
   129b4:	mov	r3, sp
   129b8:	mov	r2, r5
   129bc:	mov	r1, r4
   129c0:	mov	r0, #0
   129c4:	bl	12424 <abort@plt+0x1670>
   129c8:	add	sp, sp, #48	; 0x30
   129cc:	pop	{r4, r5, r6, pc}
   129d0:	andeq	r5, r2, ip, asr #4
   129d4:	mov	r2, r1
   129d8:	mvn	r1, #0
   129dc:	b	12970 <abort@plt+0x1bbc>
   129e0:	mov	r1, #58	; 0x3a
   129e4:	b	129d4 <abort@plt+0x1c20>
   129e8:	mov	r2, #58	; 0x3a
   129ec:	b	12970 <abort@plt+0x1bbc>
   129f0:	push	{r4, r5, lr}
   129f4:	sub	sp, sp, #100	; 0x64
   129f8:	mov	r4, r0
   129fc:	mov	r0, sp
   12a00:	mov	r5, r2
   12a04:	bl	115ac <abort@plt+0x7f8>
   12a08:	mov	ip, sp
   12a0c:	add	lr, sp, #48	; 0x30
   12a10:	ldm	ip!, {r0, r1, r2, r3}
   12a14:	stmia	lr!, {r0, r1, r2, r3}
   12a18:	ldm	ip!, {r0, r1, r2, r3}
   12a1c:	stmia	lr!, {r0, r1, r2, r3}
   12a20:	ldm	ip, {r0, r1, r2, r3}
   12a24:	stm	lr, {r0, r1, r2, r3}
   12a28:	mov	r2, #1
   12a2c:	mov	r1, #58	; 0x3a
   12a30:	add	r0, sp, #48	; 0x30
   12a34:	bl	12630 <abort@plt+0x187c>
   12a38:	add	r3, sp, #48	; 0x30
   12a3c:	mvn	r2, #0
   12a40:	mov	r1, r5
   12a44:	mov	r0, r4
   12a48:	bl	12424 <abort@plt+0x1670>
   12a4c:	add	sp, sp, #100	; 0x64
   12a50:	pop	{r4, r5, pc}
   12a54:	push	{r4, r5, r6, r7, lr}
   12a58:	mov	r4, r0
   12a5c:	ldr	lr, [pc, #84]	; 12ab8 <abort@plt+0x1d04>
   12a60:	mov	r6, r1
   12a64:	mov	r7, r2
   12a68:	mov	r5, r3
   12a6c:	ldm	lr!, {r0, r1, r2, r3}
   12a70:	sub	sp, sp, #52	; 0x34
   12a74:	mov	ip, sp
   12a78:	stmia	ip!, {r0, r1, r2, r3}
   12a7c:	ldm	lr!, {r0, r1, r2, r3}
   12a80:	stmia	ip!, {r0, r1, r2, r3}
   12a84:	ldm	lr, {r0, r1, r2, r3}
   12a88:	stm	ip, {r0, r1, r2, r3}
   12a8c:	mov	r2, r7
   12a90:	mov	r1, r6
   12a94:	mov	r0, sp
   12a98:	bl	1268c <abort@plt+0x18d8>
   12a9c:	mov	r3, sp
   12aa0:	ldr	r2, [sp, #72]	; 0x48
   12aa4:	mov	r1, r5
   12aa8:	mov	r0, r4
   12aac:	bl	12424 <abort@plt+0x1670>
   12ab0:	add	sp, sp, #52	; 0x34
   12ab4:	pop	{r4, r5, r6, r7, pc}
   12ab8:	andeq	r5, r2, ip, asr #4
   12abc:	mvn	ip, #0
   12ac0:	push	{r0, r1, r2, lr}
   12ac4:	str	ip, [sp]
   12ac8:	bl	12a54 <abort@plt+0x1ca0>
   12acc:	add	sp, sp, #12
   12ad0:	pop	{pc}		; (ldr pc, [sp], #4)
   12ad4:	mov	r3, r2
   12ad8:	mov	r2, r1
   12adc:	mov	r1, r0
   12ae0:	mov	r0, #0
   12ae4:	b	12abc <abort@plt+0x1d08>
   12ae8:	push	{r0, r1, r2, lr}
   12aec:	str	r3, [sp]
   12af0:	mov	r3, r2
   12af4:	mov	r2, r1
   12af8:	mov	r1, r0
   12afc:	mov	r0, #0
   12b00:	bl	12a54 <abort@plt+0x1ca0>
   12b04:	add	sp, sp, #12
   12b08:	pop	{pc}		; (ldr pc, [sp], #4)
   12b0c:	ldr	r3, [pc]	; 12b14 <abort@plt+0x1d60>
   12b10:	b	12424 <abort@plt+0x1670>
   12b14:	andeq	r5, r2, ip, ror #1
   12b18:	mov	r2, r1
   12b1c:	mov	r1, r0
   12b20:	mov	r0, #0
   12b24:	b	12b0c <abort@plt+0x1d58>
   12b28:	mvn	r2, #0
   12b2c:	b	12b0c <abort@plt+0x1d58>
   12b30:	mov	r1, r0
   12b34:	mov	r0, #0
   12b38:	b	12b28 <abort@plt+0x1d74>
   12b3c:	push	{r4, r5, r6, lr}
   12b40:	sub	sp, sp, #32
   12b44:	cmp	r1, #0
   12b48:	mov	r5, r0
   12b4c:	ldr	r4, [sp, #48]	; 0x30
   12b50:	ldr	r6, [sp, #52]	; 0x34
   12b54:	beq	12c08 <abort@plt+0x1e54>
   12b58:	stm	sp, {r2, r3}
   12b5c:	mov	r3, r1
   12b60:	ldr	r2, [pc, #860]	; 12ec4 <abort@plt+0x2110>
   12b64:	mov	r1, #1
   12b68:	bl	10d48 <__fprintf_chk@plt>
   12b6c:	mov	r2, #5
   12b70:	ldr	r1, [pc, #848]	; 12ec8 <abort@plt+0x2114>
   12b74:	mov	r0, #0
   12b78:	bl	10c1c <dcgettext@plt>
   12b7c:	ldr	r3, [pc, #840]	; 12ecc <abort@plt+0x2118>
   12b80:	ldr	r2, [pc, #840]	; 12ed0 <abort@plt+0x211c>
   12b84:	str	r3, [sp]
   12b88:	mov	r1, #1
   12b8c:	mov	r3, r0
   12b90:	mov	r0, r5
   12b94:	bl	10d48 <__fprintf_chk@plt>
   12b98:	mov	r1, r5
   12b9c:	mov	r0, #10
   12ba0:	bl	10c10 <fputc_unlocked@plt>
   12ba4:	mov	r2, #5
   12ba8:	ldr	r1, [pc, #804]	; 12ed4 <abort@plt+0x2120>
   12bac:	mov	r0, #0
   12bb0:	bl	10c1c <dcgettext@plt>
   12bb4:	mov	r1, #1
   12bb8:	ldr	r3, [pc, #792]	; 12ed8 <abort@plt+0x2124>
   12bbc:	mov	r2, r0
   12bc0:	mov	r0, r5
   12bc4:	bl	10d48 <__fprintf_chk@plt>
   12bc8:	mov	r1, r5
   12bcc:	mov	r0, #10
   12bd0:	bl	10c10 <fputc_unlocked@plt>
   12bd4:	cmp	r6, #9
   12bd8:	ldrls	pc, [pc, r6, lsl #2]
   12bdc:	b	12eb8 <abort@plt+0x2104>
   12be0:	strdeq	r2, [r1], -r8
   12be4:	andeq	r2, r1, r0, lsr #24
   12be8:	andeq	r2, r1, ip, asr #24
   12bec:	andeq	r2, r1, r0, lsl #25
   12bf0:			; <UNDEFINED> instruction: 0x00012cbc
   12bf4:	andeq	r2, r1, r0, lsl #26
   12bf8:	andeq	r2, r1, r8, asr #26
   12bfc:	muleq	r1, r8, sp
   12c00:	strdeq	r2, [r1], -r0
   12c04:	andeq	r2, r1, r0, asr lr
   12c08:	str	r3, [sp]
   12c0c:	mov	r1, #1
   12c10:	mov	r3, r2
   12c14:	ldr	r2, [pc, #704]	; 12edc <abort@plt+0x2128>
   12c18:	bl	10d48 <__fprintf_chk@plt>
   12c1c:	b	12b6c <abort@plt+0x1db8>
   12c20:	mov	r2, #5
   12c24:	ldr	r1, [pc, #692]	; 12ee0 <abort@plt+0x212c>
   12c28:	mov	r0, #0
   12c2c:	bl	10c1c <dcgettext@plt>
   12c30:	ldr	r3, [r4]
   12c34:	mov	r1, #1
   12c38:	mov	r2, r0
   12c3c:	mov	r0, r5
   12c40:	add	sp, sp, #32
   12c44:	pop	{r4, r5, r6, lr}
   12c48:	b	10d48 <__fprintf_chk@plt>
   12c4c:	mov	r2, #5
   12c50:	ldr	r1, [pc, #652]	; 12ee4 <abort@plt+0x2130>
   12c54:	mov	r0, #0
   12c58:	bl	10c1c <dcgettext@plt>
   12c5c:	ldr	r3, [r4, #4]
   12c60:	mov	r1, #1
   12c64:	str	r3, [sp, #48]	; 0x30
   12c68:	ldr	r3, [r4]
   12c6c:	mov	r2, r0
   12c70:	mov	r0, r5
   12c74:	add	sp, sp, #32
   12c78:	pop	{r4, r5, r6, lr}
   12c7c:	b	10d48 <__fprintf_chk@plt>
   12c80:	mov	r2, #5
   12c84:	ldr	r1, [pc, #604]	; 12ee8 <abort@plt+0x2134>
   12c88:	mov	r0, #0
   12c8c:	bl	10c1c <dcgettext@plt>
   12c90:	ldr	r3, [r4, #8]
   12c94:	mov	r1, #1
   12c98:	str	r3, [sp, #52]	; 0x34
   12c9c:	ldr	r3, [r4, #4]
   12ca0:	str	r3, [sp, #48]	; 0x30
   12ca4:	ldr	r3, [r4]
   12ca8:	mov	r2, r0
   12cac:	mov	r0, r5
   12cb0:	add	sp, sp, #32
   12cb4:	pop	{r4, r5, r6, lr}
   12cb8:	b	10d48 <__fprintf_chk@plt>
   12cbc:	mov	r2, #5
   12cc0:	ldr	r1, [pc, #548]	; 12eec <abort@plt+0x2138>
   12cc4:	mov	r0, #0
   12cc8:	bl	10c1c <dcgettext@plt>
   12ccc:	ldr	r3, [r4, #12]
   12cd0:	mov	r1, #1
   12cd4:	str	r3, [sp, #8]
   12cd8:	ldr	r3, [r4, #8]
   12cdc:	str	r3, [sp, #4]
   12ce0:	ldr	r3, [r4, #4]
   12ce4:	str	r3, [sp]
   12ce8:	ldr	r3, [r4]
   12cec:	mov	r2, r0
   12cf0:	mov	r0, r5
   12cf4:	bl	10d48 <__fprintf_chk@plt>
   12cf8:	add	sp, sp, #32
   12cfc:	pop	{r4, r5, r6, pc}
   12d00:	mov	r2, #5
   12d04:	ldr	r1, [pc, #484]	; 12ef0 <abort@plt+0x213c>
   12d08:	mov	r0, #0
   12d0c:	bl	10c1c <dcgettext@plt>
   12d10:	ldr	r3, [r4, #16]
   12d14:	mov	r1, #1
   12d18:	str	r3, [sp, #12]
   12d1c:	ldr	r3, [r4, #12]
   12d20:	str	r3, [sp, #8]
   12d24:	ldr	r3, [r4, #8]
   12d28:	str	r3, [sp, #4]
   12d2c:	ldr	r3, [r4, #4]
   12d30:	str	r3, [sp]
   12d34:	ldr	r3, [r4]
   12d38:	mov	r2, r0
   12d3c:	mov	r0, r5
   12d40:	bl	10d48 <__fprintf_chk@plt>
   12d44:	b	12cf8 <abort@plt+0x1f44>
   12d48:	mov	r2, #5
   12d4c:	ldr	r1, [pc, #416]	; 12ef4 <abort@plt+0x2140>
   12d50:	mov	r0, #0
   12d54:	bl	10c1c <dcgettext@plt>
   12d58:	ldr	r3, [r4, #20]
   12d5c:	mov	r1, #1
   12d60:	str	r3, [sp, #16]
   12d64:	ldr	r3, [r4, #16]
   12d68:	str	r3, [sp, #12]
   12d6c:	ldr	r3, [r4, #12]
   12d70:	str	r3, [sp, #8]
   12d74:	ldr	r3, [r4, #8]
   12d78:	str	r3, [sp, #4]
   12d7c:	ldr	r3, [r4, #4]
   12d80:	str	r3, [sp]
   12d84:	ldr	r3, [r4]
   12d88:	mov	r2, r0
   12d8c:	mov	r0, r5
   12d90:	bl	10d48 <__fprintf_chk@plt>
   12d94:	b	12cf8 <abort@plt+0x1f44>
   12d98:	mov	r2, #5
   12d9c:	ldr	r1, [pc, #340]	; 12ef8 <abort@plt+0x2144>
   12da0:	mov	r0, #0
   12da4:	bl	10c1c <dcgettext@plt>
   12da8:	ldr	r3, [r4, #24]
   12dac:	mov	r1, #1
   12db0:	str	r3, [sp, #20]
   12db4:	ldr	r3, [r4, #20]
   12db8:	str	r3, [sp, #16]
   12dbc:	ldr	r3, [r4, #16]
   12dc0:	str	r3, [sp, #12]
   12dc4:	ldr	r3, [r4, #12]
   12dc8:	str	r3, [sp, #8]
   12dcc:	ldr	r3, [r4, #8]
   12dd0:	str	r3, [sp, #4]
   12dd4:	ldr	r3, [r4, #4]
   12dd8:	str	r3, [sp]
   12ddc:	ldr	r3, [r4]
   12de0:	mov	r2, r0
   12de4:	mov	r0, r5
   12de8:	bl	10d48 <__fprintf_chk@plt>
   12dec:	b	12cf8 <abort@plt+0x1f44>
   12df0:	mov	r2, #5
   12df4:	ldr	r1, [pc, #256]	; 12efc <abort@plt+0x2148>
   12df8:	mov	r0, #0
   12dfc:	bl	10c1c <dcgettext@plt>
   12e00:	ldr	r3, [r4, #28]
   12e04:	mov	r1, #1
   12e08:	str	r3, [sp, #24]
   12e0c:	ldr	r3, [r4, #24]
   12e10:	str	r3, [sp, #20]
   12e14:	ldr	r3, [r4, #20]
   12e18:	str	r3, [sp, #16]
   12e1c:	ldr	r3, [r4, #16]
   12e20:	str	r3, [sp, #12]
   12e24:	ldr	r3, [r4, #12]
   12e28:	str	r3, [sp, #8]
   12e2c:	ldr	r3, [r4, #8]
   12e30:	str	r3, [sp, #4]
   12e34:	ldr	r3, [r4, #4]
   12e38:	str	r3, [sp]
   12e3c:	ldr	r3, [r4]
   12e40:	mov	r2, r0
   12e44:	mov	r0, r5
   12e48:	bl	10d48 <__fprintf_chk@plt>
   12e4c:	b	12cf8 <abort@plt+0x1f44>
   12e50:	ldr	r1, [pc, #168]	; 12f00 <abort@plt+0x214c>
   12e54:	mov	r2, #5
   12e58:	mov	r0, #0
   12e5c:	bl	10c1c <dcgettext@plt>
   12e60:	ldr	r3, [r4, #32]
   12e64:	mov	r1, #1
   12e68:	str	r3, [sp, #28]
   12e6c:	ldr	r3, [r4, #28]
   12e70:	str	r3, [sp, #24]
   12e74:	ldr	r3, [r4, #24]
   12e78:	str	r3, [sp, #20]
   12e7c:	ldr	r3, [r4, #20]
   12e80:	str	r3, [sp, #16]
   12e84:	ldr	r3, [r4, #16]
   12e88:	str	r3, [sp, #12]
   12e8c:	ldr	r3, [r4, #12]
   12e90:	str	r3, [sp, #8]
   12e94:	ldr	r3, [r4, #8]
   12e98:	str	r3, [sp, #4]
   12e9c:	ldr	r3, [r4, #4]
   12ea0:	str	r3, [sp]
   12ea4:	ldr	r3, [r4]
   12ea8:	mov	r2, r0
   12eac:	mov	r0, r5
   12eb0:	bl	10d48 <__fprintf_chk@plt>
   12eb4:	b	12cf8 <abort@plt+0x1f44>
   12eb8:	mov	r2, #5
   12ebc:	ldr	r1, [pc, #64]	; 12f04 <abort@plt+0x2150>
   12ec0:	b	12e58 <abort@plt+0x20a4>
   12ec4:	andeq	r4, r1, r7, lsl r3
   12ec8:	andeq	r4, r1, sl, lsr #6
   12ecc:	andeq	r0, r0, r6, ror #15
   12ed0:	strdeq	r4, [r1], -r8
   12ed4:	andeq	r4, r1, lr, lsr #6
   12ed8:	ldrdeq	r4, [r1], -r9
   12edc:	andeq	r4, r1, r3, lsr #6
   12ee0:	strdeq	r4, [r1], -fp
   12ee4:	andeq	r4, r1, fp, lsl #8
   12ee8:	andeq	r4, r1, r2, lsr #8
   12eec:	andeq	r4, r1, lr, lsr r4
   12ef0:	andeq	r4, r1, lr, asr r4
   12ef4:	andeq	r4, r1, r2, lsl #9
   12ef8:	andeq	r4, r1, sl, lsr #9
   12efc:	ldrdeq	r4, [r1], -r6
   12f00:	andeq	r4, r1, r6, lsl #10
   12f04:	andeq	r4, r1, sl, lsr r5
   12f08:	push	{r0, r1, r4, lr}
   12f0c:	mov	ip, #0
   12f10:	ldr	lr, [sp, #16]
   12f14:	ldr	r4, [lr, ip, lsl #2]
   12f18:	cmp	r4, #0
   12f1c:	bne	12f34 <abort@plt+0x2180>
   12f20:	str	ip, [sp, #4]
   12f24:	str	lr, [sp]
   12f28:	bl	12b3c <abort@plt+0x1d88>
   12f2c:	add	sp, sp, #8
   12f30:	pop	{r4, pc}
   12f34:	add	ip, ip, #1
   12f38:	b	12f14 <abort@plt+0x2160>
   12f3c:	push	{r4, r5, lr}
   12f40:	sub	sp, sp, #52	; 0x34
   12f44:	mov	ip, #0
   12f48:	ldr	r5, [sp, #64]	; 0x40
   12f4c:	add	lr, sp, #8
   12f50:	ldr	r4, [r5, ip, lsl #2]
   12f54:	cmp	r4, #0
   12f58:	str	r4, [lr, ip, lsl #2]
   12f5c:	beq	12f6c <abort@plt+0x21b8>
   12f60:	add	ip, ip, #1
   12f64:	cmp	ip, #10
   12f68:	bne	12f50 <abort@plt+0x219c>
   12f6c:	str	ip, [sp, #4]
   12f70:	str	lr, [sp]
   12f74:	bl	12b3c <abort@plt+0x1d88>
   12f78:	add	sp, sp, #52	; 0x34
   12f7c:	pop	{r4, r5, pc}
   12f80:	push	{r3}		; (str r3, [sp, #-4]!)
   12f84:	push	{r0, r1, r2, r3, lr}
   12f88:	add	r3, sp, #24
   12f8c:	str	r3, [sp, #12]
   12f90:	str	r3, [sp]
   12f94:	ldr	r3, [sp, #20]
   12f98:	bl	12f3c <abort@plt+0x2188>
   12f9c:	add	sp, sp, #16
   12fa0:	pop	{lr}		; (ldr lr, [sp], #4)
   12fa4:	add	sp, sp, #4
   12fa8:	bx	lr
   12fac:	ldr	r3, [pc, #116]	; 13028 <abort@plt+0x2274>
   12fb0:	push	{r4, lr}
   12fb4:	mov	r0, #10
   12fb8:	ldr	r1, [r3]
   12fbc:	bl	10c10 <fputc_unlocked@plt>
   12fc0:	mov	r2, #5
   12fc4:	ldr	r1, [pc, #96]	; 1302c <abort@plt+0x2278>
   12fc8:	mov	r0, #0
   12fcc:	bl	10c1c <dcgettext@plt>
   12fd0:	ldr	r2, [pc, #88]	; 13030 <abort@plt+0x227c>
   12fd4:	mov	r1, r0
   12fd8:	mov	r0, #1
   12fdc:	bl	10d30 <__printf_chk@plt>
   12fe0:	mov	r2, #5
   12fe4:	ldr	r1, [pc, #72]	; 13034 <abort@plt+0x2280>
   12fe8:	mov	r0, #0
   12fec:	bl	10c1c <dcgettext@plt>
   12ff0:	ldr	r3, [pc, #64]	; 13038 <abort@plt+0x2284>
   12ff4:	ldr	r2, [pc, #64]	; 1303c <abort@plt+0x2288>
   12ff8:	mov	r1, r0
   12ffc:	mov	r0, #1
   13000:	bl	10d30 <__printf_chk@plt>
   13004:	mov	r2, #5
   13008:	ldr	r1, [pc, #48]	; 13040 <abort@plt+0x228c>
   1300c:	mov	r0, #0
   13010:	bl	10c1c <dcgettext@plt>
   13014:	ldr	r2, [pc, #40]	; 13044 <abort@plt+0x2290>
   13018:	pop	{r4, lr}
   1301c:	mov	r1, r0
   13020:	mov	r0, #1
   13024:	b	10d30 <__printf_chk@plt>
   13028:	andeq	r5, r2, r4, lsr r1
   1302c:	andeq	r4, r1, r6, ror r5
   13030:	andeq	r4, r1, sl, lsl #11
   13034:	andeq	r4, r1, r0, lsr #11
   13038:	andeq	r4, r1, r0, lsr r0
   1303c:	andeq	r4, r1, r8, asr r0
   13040:			; <UNDEFINED> instruction: 0x000145b4
   13044:	ldrdeq	r4, [r1], -fp
   13048:	push	{r4, lr}
   1304c:	bl	13564 <abort@plt+0x27b0>
   13050:	cmp	r0, #0
   13054:	popne	{r4, pc}
   13058:	bl	134dc <abort@plt+0x2728>
   1305c:	push	{r4, lr}
   13060:	bl	13564 <abort@plt+0x27b0>
   13064:	cmp	r0, #0
   13068:	popne	{r4, pc}
   1306c:	bl	134dc <abort@plt+0x2728>
   13070:	b	13048 <abort@plt+0x2294>
   13074:	push	{r4, r5, r6, lr}
   13078:	mov	r5, r0
   1307c:	mov	r4, r1
   13080:	bl	135a4 <abort@plt+0x27f0>
   13084:	cmp	r0, #0
   13088:	popne	{r4, r5, r6, pc}
   1308c:	adds	r4, r4, #0
   13090:	movne	r4, #1
   13094:	cmp	r5, #0
   13098:	orreq	r4, r4, #1
   1309c:	cmp	r4, #0
   130a0:	popeq	{r4, r5, r6, pc}
   130a4:	bl	134dc <abort@plt+0x2728>
   130a8:	push	{r4, lr}
   130ac:	cmp	r1, #0
   130b0:	orreq	r1, r1, #1
   130b4:	bl	135a4 <abort@plt+0x27f0>
   130b8:	cmp	r0, #0
   130bc:	popne	{r4, pc}
   130c0:	bl	134dc <abort@plt+0x2728>
   130c4:	push	{r4, r5, r6, lr}
   130c8:	mov	r6, r0
   130cc:	mov	r5, r1
   130d0:	mov	r4, r2
   130d4:	bl	138d4 <abort@plt+0x2b20>
   130d8:	cmp	r0, #0
   130dc:	popne	{r4, r5, r6, pc}
   130e0:	cmp	r6, #0
   130e4:	beq	130f4 <abort@plt+0x2340>
   130e8:	cmp	r5, #0
   130ec:	cmpne	r4, #0
   130f0:	popeq	{r4, r5, r6, pc}
   130f4:	bl	134dc <abort@plt+0x2728>
   130f8:	b	130c4 <abort@plt+0x2310>
   130fc:	cmp	r2, #0
   13100:	cmpne	r1, #0
   13104:	moveq	r2, #1
   13108:	moveq	r1, r2
   1310c:	push	{r4, lr}
   13110:	bl	138d4 <abort@plt+0x2b20>
   13114:	cmp	r0, #0
   13118:	popne	{r4, pc}
   1311c:	bl	134dc <abort@plt+0x2728>
   13120:	mov	r2, r1
   13124:	mov	r1, r0
   13128:	mov	r0, #0
   1312c:	b	130c4 <abort@plt+0x2310>
   13130:	mov	r2, r1
   13134:	mov	r1, r0
   13138:	mov	r0, #0
   1313c:	b	130fc <abort@plt+0x2348>
   13140:	push	{r4, r5, r6, r7, r8, lr}
   13144:	subs	r7, r0, #0
   13148:	mov	r5, r1
   1314c:	mov	r6, r2
   13150:	ldr	r4, [r1]
   13154:	bne	13190 <abort@plt+0x23dc>
   13158:	cmp	r4, #0
   1315c:	bne	13178 <abort@plt+0x23c4>
   13160:	mov	r1, r2
   13164:	mov	r0, #64	; 0x40
   13168:	bl	13a00 <abort@plt+0x2c4c>
   1316c:	cmp	r0, #0
   13170:	movne	r4, r0
   13174:	addeq	r4, r0, #1
   13178:	mov	r2, r6
   1317c:	mov	r1, r4
   13180:	mov	r0, r7
   13184:	bl	130c4 <abort@plt+0x2310>
   13188:	str	r4, [r5]
   1318c:	pop	{r4, r5, r6, r7, r8, pc}
   13190:	lsr	r2, r4, #1
   13194:	add	r3, r2, #1
   13198:	mvn	r3, r3
   1319c:	cmp	r4, r3
   131a0:	addls	r4, r4, #1
   131a4:	addls	r4, r4, r2
   131a8:	bls	13178 <abort@plt+0x23c4>
   131ac:	bl	134dc <abort@plt+0x2728>
   131b0:	mov	r2, #1
   131b4:	b	13140 <abort@plt+0x238c>
   131b8:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   131bc:	mov	sl, r0
   131c0:	ldr	r8, [r1]
   131c4:	mov	fp, r1
   131c8:	mov	r5, r2
   131cc:	asrs	r4, r8, #1
   131d0:	mov	r9, r3
   131d4:	ldr	r7, [sp, #48]	; 0x30
   131d8:	bpl	13274 <abort@plt+0x24c0>
   131dc:	rsb	r2, r4, #-2147483648	; 0x80000000
   131e0:	cmp	r8, r2
   131e4:	movge	r2, #0
   131e8:	movlt	r2, #1
   131ec:	mvn	r3, r9
   131f0:	cmp	r2, #0
   131f4:	lsr	r3, r3, #31
   131f8:	addeq	r4, r4, r8
   131fc:	mvnne	r4, #-2147483648	; 0x80000000
   13200:	mov	r0, r3
   13204:	cmp	r9, r4
   13208:	movge	r0, #0
   1320c:	andlt	r0, r0, #1
   13210:	cmp	r0, #0
   13214:	str	r3, [sp, #4]
   13218:	bne	133e8 <abort@plt+0x2634>
   1321c:	cmp	r7, #0
   13220:	bge	13334 <abort@plt+0x2580>
   13224:	cmp	r4, #0
   13228:	bge	1328c <abort@plt+0x24d8>
   1322c:	mov	r1, r7
   13230:	mvn	r0, #-2147483648	; 0x80000000
   13234:	bl	13c0c <abort@plt+0x2e58>
   13238:	cmp	r0, r4
   1323c:	movle	r0, #0
   13240:	movgt	r0, #1
   13244:	cmp	r0, #0
   13248:	mvnne	r6, #-2147483648	; 0x80000000
   1324c:	beq	1329c <abort@plt+0x24e8>
   13250:	mov	r1, r7
   13254:	mov	r0, r6
   13258:	bl	13c0c <abort@plt+0x2e58>
   1325c:	mov	r1, r7
   13260:	mov	r4, r0
   13264:	mov	r0, r6
   13268:	bl	13e2c <abort@plt+0x3078>
   1326c:	sub	r1, r6, r1
   13270:	b	132ac <abort@plt+0x24f8>
   13274:	mvn	r2, #-2147483648	; 0x80000000
   13278:	sub	r2, r2, r4
   1327c:	cmp	r8, r2
   13280:	movle	r2, #0
   13284:	movgt	r2, #1
   13288:	b	131ec <abort@plt+0x2438>
   1328c:	cmn	r7, #1
   13290:	movne	r1, r7
   13294:	movne	r0, #-2147483648	; 0x80000000
   13298:	bne	13400 <abort@plt+0x264c>
   1329c:	mul	r1, r7, r4
   132a0:	cmp	r1, #63	; 0x3f
   132a4:	movle	r6, #64	; 0x40
   132a8:	ble	13250 <abort@plt+0x249c>
   132ac:	cmp	sl, #0
   132b0:	sub	r2, r4, r8
   132b4:	streq	sl, [fp]
   132b8:	cmp	r2, r5
   132bc:	bge	13390 <abort@plt+0x25dc>
   132c0:	cmp	r5, #0
   132c4:	bge	1335c <abort@plt+0x25a8>
   132c8:	rsb	r2, r5, #-2147483648	; 0x80000000
   132cc:	cmp	r8, r2
   132d0:	movge	r2, #0
   132d4:	movlt	r2, #1
   132d8:	cmp	r2, #0
   132dc:	bne	13330 <abort@plt+0x257c>
   132e0:	ldr	r0, [sp, #4]
   132e4:	add	r5, r8, r5
   132e8:	cmp	r9, r5
   132ec:	movge	r0, #0
   132f0:	andlt	r0, r0, #1
   132f4:	cmp	r0, #0
   132f8:	mov	r4, r5
   132fc:	bne	13330 <abort@plt+0x257c>
   13300:	cmp	r7, #0
   13304:	bge	133a4 <abort@plt+0x25f0>
   13308:	cmp	r5, #0
   1330c:	bge	1337c <abort@plt+0x25c8>
   13310:	mov	r1, r7
   13314:	mvn	r0, #-2147483648	; 0x80000000
   13318:	bl	13c0c <abort@plt+0x2e58>
   1331c:	cmp	r5, r0
   13320:	movge	r0, #0
   13324:	movlt	r0, #1
   13328:	cmp	r0, #0
   1332c:	beq	1338c <abort@plt+0x25d8>
   13330:	bl	134dc <abort@plt+0x2728>
   13334:	beq	1329c <abort@plt+0x24e8>
   13338:	cmp	r4, #0
   1333c:	bge	133f8 <abort@plt+0x2644>
   13340:	cmn	r4, #1
   13344:	beq	1329c <abort@plt+0x24e8>
   13348:	mov	r1, r4
   1334c:	mov	r0, #-2147483648	; 0x80000000
   13350:	bl	13c0c <abort@plt+0x2e58>
   13354:	cmp	r7, r0
   13358:	b	1323c <abort@plt+0x2488>
   1335c:	cmp	r8, #0
   13360:	blt	132e0 <abort@plt+0x252c>
   13364:	mvn	r2, #-2147483648	; 0x80000000
   13368:	sub	r2, r2, r5
   1336c:	cmp	r8, r2
   13370:	movle	r2, #0
   13374:	movgt	r2, #1
   13378:	b	132d8 <abort@plt+0x2524>
   1337c:	cmn	r7, #1
   13380:	movne	r1, r7
   13384:	movne	r0, #-2147483648	; 0x80000000
   13388:	bne	133dc <abort@plt+0x2628>
   1338c:	mul	r1, r5, r7
   13390:	mov	r0, sl
   13394:	bl	13074 <abort@plt+0x22c0>
   13398:	str	r4, [fp]
   1339c:	add	sp, sp, #12
   133a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   133a4:	beq	1338c <abort@plt+0x25d8>
   133a8:	cmp	r5, #0
   133ac:	movge	r1, r7
   133b0:	mvnge	r0, #-2147483648	; 0x80000000
   133b4:	bge	133dc <abort@plt+0x2628>
   133b8:	cmn	r5, #1
   133bc:	beq	1338c <abort@plt+0x25d8>
   133c0:	mov	r1, r5
   133c4:	mov	r0, #-2147483648	; 0x80000000
   133c8:	bl	13c0c <abort@plt+0x2e58>
   133cc:	cmp	r7, r0
   133d0:	movle	r0, #0
   133d4:	movgt	r0, #1
   133d8:	b	13328 <abort@plt+0x2574>
   133dc:	bl	13c0c <abort@plt+0x2e58>
   133e0:	cmp	r5, r0
   133e4:	b	133d0 <abort@plt+0x261c>
   133e8:	cmp	r7, #0
   133ec:	mov	r4, r9
   133f0:	blt	1328c <abort@plt+0x24d8>
   133f4:	beq	1329c <abort@plt+0x24e8>
   133f8:	mov	r1, r7
   133fc:	mvn	r0, #-2147483648	; 0x80000000
   13400:	bl	13c0c <abort@plt+0x2e58>
   13404:	cmp	r0, r4
   13408:	movge	r0, #0
   1340c:	movlt	r0, #1
   13410:	b	13244 <abort@plt+0x2490>
   13414:	push	{r4, lr}
   13418:	bl	1351c <abort@plt+0x2768>
   1341c:	cmp	r0, #0
   13420:	popne	{r4, pc}
   13424:	bl	134dc <abort@plt+0x2728>
   13428:	mov	r1, #1
   1342c:	b	13414 <abort@plt+0x2660>
   13430:	push	{r4, lr}
   13434:	bl	1351c <abort@plt+0x2768>
   13438:	cmp	r0, #0
   1343c:	popne	{r4, pc}
   13440:	bl	134dc <abort@plt+0x2728>
   13444:	mov	r1, #1
   13448:	b	13430 <abort@plt+0x267c>
   1344c:	push	{r4, r5, r6, lr}
   13450:	mov	r4, r1
   13454:	mov	r5, r0
   13458:	mov	r0, r1
   1345c:	bl	13048 <abort@plt+0x2294>
   13460:	mov	r2, r4
   13464:	mov	r1, r5
   13468:	pop	{r4, r5, r6, lr}
   1346c:	b	10bec <memcpy@plt>
   13470:	push	{r4, r5, r6, lr}
   13474:	mov	r4, r1
   13478:	mov	r5, r0
   1347c:	mov	r0, r1
   13480:	bl	1305c <abort@plt+0x22a8>
   13484:	mov	r2, r4
   13488:	mov	r1, r5
   1348c:	pop	{r4, r5, r6, lr}
   13490:	b	10bec <memcpy@plt>
   13494:	push	{r4, r5, r6, lr}
   13498:	mov	r5, r0
   1349c:	add	r0, r1, #1
   134a0:	mov	r4, r1
   134a4:	bl	1305c <abort@plt+0x22a8>
   134a8:	mov	r2, #0
   134ac:	mov	r1, r5
   134b0:	strb	r2, [r0, r4]
   134b4:	mov	r2, r4
   134b8:	pop	{r4, r5, r6, lr}
   134bc:	b	10bec <memcpy@plt>
   134c0:	push	{r4, lr}
   134c4:	mov	r4, r0
   134c8:	bl	10d00 <strlen@plt>
   134cc:	add	r1, r0, #1
   134d0:	mov	r0, r4
   134d4:	pop	{r4, lr}
   134d8:	b	1344c <abort@plt+0x2698>
   134dc:	ldr	r3, [pc, #44]	; 13510 <abort@plt+0x275c>
   134e0:	push	{r4, lr}
   134e4:	mov	r2, #5
   134e8:	ldr	r1, [pc, #36]	; 13514 <abort@plt+0x2760>
   134ec:	mov	r0, #0
   134f0:	ldr	r4, [r3]
   134f4:	bl	10c1c <dcgettext@plt>
   134f8:	ldr	r2, [pc, #24]	; 13518 <abort@plt+0x2764>
   134fc:	mov	r1, #0
   13500:	mov	r3, r0
   13504:	mov	r0, r4
   13508:	bl	10c94 <error@plt>
   1350c:	bl	10db4 <abort@plt>
   13510:	ldrdeq	r5, [r2], -r8
   13514:	andeq	r4, r1, r7, lsr #12
   13518:	ldrdeq	r4, [r1], -r8
   1351c:	cmp	r1, #0
   13520:	cmpne	r0, #0
   13524:	moveq	r1, #1
   13528:	moveq	r0, r1
   1352c:	umull	r2, r3, r0, r1
   13530:	adds	r3, r3, #0
   13534:	movne	r3, #1
   13538:	cmp	r2, #0
   1353c:	blt	1354c <abort@plt+0x2798>
   13540:	cmp	r3, #0
   13544:	bne	1354c <abort@plt+0x2798>
   13548:	b	10b8c <calloc@plt>
   1354c:	push	{r4, lr}
   13550:	bl	10d0c <__errno_location@plt>
   13554:	mov	r3, #12
   13558:	str	r3, [r0]
   1355c:	mov	r0, #0
   13560:	pop	{r4, pc}
   13564:	cmp	r0, #0
   13568:	mov	r3, #0
   1356c:	moveq	r0, #1
   13570:	adds	r3, r3, #0
   13574:	movne	r3, #1
   13578:	cmp	r0, #0
   1357c:	blt	1358c <abort@plt+0x27d8>
   13580:	cmp	r3, #0
   13584:	bne	1358c <abort@plt+0x27d8>
   13588:	b	10cac <malloc@plt>
   1358c:	push	{r4, lr}
   13590:	bl	10d0c <__errno_location@plt>
   13594:	mov	r3, #12
   13598:	str	r3, [r0]
   1359c:	mov	r0, #0
   135a0:	pop	{r4, pc}
   135a4:	cmp	r0, #0
   135a8:	push	{r4, lr}
   135ac:	mov	r4, r1
   135b0:	bne	135c0 <abort@plt+0x280c>
   135b4:	mov	r0, r1
   135b8:	pop	{r4, lr}
   135bc:	b	13564 <abort@plt+0x27b0>
   135c0:	cmp	r1, #0
   135c4:	bne	135d4 <abort@plt+0x2820>
   135c8:	bl	13768 <abort@plt+0x29b4>
   135cc:	mov	r0, #0
   135d0:	pop	{r4, pc}
   135d4:	cmp	r1, #0
   135d8:	blt	135e8 <abort@plt+0x2834>
   135dc:	mov	r3, #0
   135e0:	cmp	r3, r3
   135e4:	beq	135f8 <abort@plt+0x2844>
   135e8:	bl	10d0c <__errno_location@plt>
   135ec:	mov	r3, #12
   135f0:	str	r3, [r0]
   135f4:	b	135cc <abort@plt+0x2818>
   135f8:	pop	{r4, lr}
   135fc:	b	10c28 <realloc@plt>
   13600:	push	{r4, r5, r6, lr}
   13604:	mov	r4, r0
   13608:	bl	10c70 <__fpending@plt>
   1360c:	mov	r5, r0
   13610:	mov	r0, r4
   13614:	bl	10c7c <ferror_unlocked@plt>
   13618:	mov	r6, r0
   1361c:	mov	r0, r4
   13620:	bl	13670 <abort@plt+0x28bc>
   13624:	cmp	r6, #0
   13628:	mov	r4, r0
   1362c:	bne	13658 <abort@plt+0x28a4>
   13630:	cmp	r0, #0
   13634:	beq	13650 <abort@plt+0x289c>
   13638:	cmp	r5, #0
   1363c:	bne	13668 <abort@plt+0x28b4>
   13640:	bl	10d0c <__errno_location@plt>
   13644:	ldr	r4, [r0]
   13648:	subs	r4, r4, #9
   1364c:	mvnne	r4, #0
   13650:	mov	r0, r4
   13654:	pop	{r4, r5, r6, pc}
   13658:	cmp	r0, #0
   1365c:	bne	13668 <abort@plt+0x28b4>
   13660:	bl	10d0c <__errno_location@plt>
   13664:	str	r4, [r0]
   13668:	mvn	r4, #0
   1366c:	b	13650 <abort@plt+0x289c>
   13670:	push	{r0, r1, r2, r4, r5, lr}
   13674:	mov	r4, r0
   13678:	bl	10d3c <fileno@plt>
   1367c:	cmp	r0, #0
   13680:	mov	r0, r4
   13684:	bge	13694 <abort@plt+0x28e0>
   13688:	add	sp, sp, #12
   1368c:	pop	{r4, r5, lr}
   13690:	b	10d54 <fclose@plt>
   13694:	bl	10cc4 <__freading@plt>
   13698:	cmp	r0, #0
   1369c:	bne	136d8 <abort@plt+0x2924>
   136a0:	mov	r0, r4
   136a4:	bl	13718 <abort@plt+0x2964>
   136a8:	cmp	r0, #0
   136ac:	bne	1370c <abort@plt+0x2958>
   136b0:	mov	r5, #0
   136b4:	mov	r0, r4
   136b8:	bl	10d54 <fclose@plt>
   136bc:	cmp	r5, #0
   136c0:	beq	136d0 <abort@plt+0x291c>
   136c4:	bl	10d0c <__errno_location@plt>
   136c8:	str	r5, [r0]
   136cc:	mvn	r0, #0
   136d0:	add	sp, sp, #12
   136d4:	pop	{r4, r5, pc}
   136d8:	mov	r0, r4
   136dc:	bl	10d3c <fileno@plt>
   136e0:	mov	r3, #1
   136e4:	str	r3, [sp]
   136e8:	mov	r2, #0
   136ec:	mov	r3, #0
   136f0:	bl	10c58 <lseek64@plt>
   136f4:	mvn	r3, #0
   136f8:	mvn	r2, #0
   136fc:	cmp	r1, r3
   13700:	cmpeq	r0, r2
   13704:	bne	136a0 <abort@plt+0x28ec>
   13708:	b	136b0 <abort@plt+0x28fc>
   1370c:	bl	10d0c <__errno_location@plt>
   13710:	ldr	r5, [r0]
   13714:	b	136b4 <abort@plt+0x2900>
   13718:	push	{r0, r1, r4, lr}
   1371c:	subs	r4, r0, #0
   13720:	bne	13734 <abort@plt+0x2980>
   13724:	mov	r0, r4
   13728:	add	sp, sp, #8
   1372c:	pop	{r4, lr}
   13730:	b	10bc8 <fflush@plt>
   13734:	bl	10cc4 <__freading@plt>
   13738:	cmp	r0, #0
   1373c:	beq	13724 <abort@plt+0x2970>
   13740:	ldr	r3, [r4]
   13744:	tst	r3, #256	; 0x100
   13748:	beq	13724 <abort@plt+0x2970>
   1374c:	mov	r3, #1
   13750:	str	r3, [sp]
   13754:	mov	r2, #0
   13758:	mov	r3, #0
   1375c:	mov	r0, r4
   13760:	bl	137bc <abort@plt+0x2a08>
   13764:	b	13724 <abort@plt+0x2970>
   13768:	push	{r0, r1, r2, r4, r5, lr}
   1376c:	mov	r5, r0
   13770:	bl	10d0c <__errno_location@plt>
   13774:	ldr	r3, [r0]
   13778:	mov	r4, r0
   1377c:	str	r3, [sp]
   13780:	str	r3, [sp, #4]
   13784:	mov	r3, #0
   13788:	str	r3, [r0]
   1378c:	mov	r0, r5
   13790:	bl	10bd4 <free@plt>
   13794:	ldr	r3, [r4]
   13798:	add	r2, sp, #8
   1379c:	cmp	r3, #0
   137a0:	moveq	r3, #4
   137a4:	movne	r3, #0
   137a8:	add	r3, r2, r3
   137ac:	ldr	r3, [r3, #-8]
   137b0:	str	r3, [r4]
   137b4:	add	sp, sp, #12
   137b8:	pop	{r4, r5, pc}
   137bc:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   137c0:	mov	r4, r0
   137c4:	ldmib	r0, {ip, lr}
   137c8:	ldr	r8, [sp, #32]
   137cc:	cmp	lr, ip
   137d0:	bne	1383c <abort@plt+0x2a88>
   137d4:	ldr	lr, [r0, #20]
   137d8:	ldr	ip, [r0, #16]
   137dc:	cmp	lr, ip
   137e0:	bne	1383c <abort@plt+0x2a88>
   137e4:	ldr	r5, [r0, #36]	; 0x24
   137e8:	cmp	r5, #0
   137ec:	bne	1383c <abort@plt+0x2a88>
   137f0:	mov	r6, r2
   137f4:	mov	r7, r3
   137f8:	bl	10d3c <fileno@plt>
   137fc:	mov	r2, r6
   13800:	mov	r3, r7
   13804:	str	r8, [sp]
   13808:	bl	10c58 <lseek64@plt>
   1380c:	mvn	r3, #0
   13810:	mvn	r2, #0
   13814:	cmp	r1, r3
   13818:	cmpeq	r0, r2
   1381c:	mvneq	r0, #0
   13820:	ldrne	r3, [r4]
   13824:	strdne	r0, [r4, #80]	; 0x50
   13828:	movne	r0, r5
   1382c:	bicne	r3, r3, #16
   13830:	strne	r3, [r4]
   13834:	add	sp, sp, #8
   13838:	pop	{r4, r5, r6, r7, r8, pc}
   1383c:	str	r8, [sp, #32]
   13840:	mov	r0, r4
   13844:	add	sp, sp, #8
   13848:	pop	{r4, r5, r6, r7, r8, lr}
   1384c:	b	10d60 <fseeko64@plt>
   13850:	push	{r4, lr}
   13854:	mov	r0, #14
   13858:	bl	10d84 <nl_langinfo@plt>
   1385c:	ldr	r3, [pc, #24]	; 1387c <abort@plt+0x2ac8>
   13860:	cmp	r0, #0
   13864:	moveq	r0, r3
   13868:	ldr	r3, [pc, #16]	; 13880 <abort@plt+0x2acc>
   1386c:	ldrb	r2, [r0]
   13870:	cmp	r2, #0
   13874:	moveq	r0, r3
   13878:	pop	{r4, pc}
   1387c:			; <UNDEFINED> instruction: 0x00013fb5
   13880:	andeq	r4, r1, r8, lsr r6
   13884:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   13888:	subs	r5, r0, #0
   1388c:	addeq	r5, sp, #4
   13890:	mov	r0, r5
   13894:	mov	r7, r2
   13898:	mov	r6, r1
   1389c:	bl	10c88 <mbrtowc@plt>
   138a0:	cmp	r7, #0
   138a4:	cmnne	r0, #3
   138a8:	mov	r4, r0
   138ac:	bls	138c8 <abort@plt+0x2b14>
   138b0:	mov	r0, #0
   138b4:	bl	13920 <abort@plt+0x2b6c>
   138b8:	cmp	r0, #0
   138bc:	moveq	r4, #1
   138c0:	ldrbeq	r3, [r6]
   138c4:	streq	r3, [r5]
   138c8:	mov	r0, r4
   138cc:	add	sp, sp, #12
   138d0:	pop	{r4, r5, r6, r7, pc}
   138d4:	push	{r4, r5, r6, lr}
   138d8:	subs	r4, r2, #0
   138dc:	mov	r6, r0
   138e0:	mov	r5, r1
   138e4:	beq	138fc <abort@plt+0x2b48>
   138e8:	mov	r1, r4
   138ec:	mvn	r0, #0
   138f0:	bl	13a00 <abort@plt+0x2c4c>
   138f4:	cmp	r0, r5
   138f8:	bcc	1390c <abort@plt+0x2b58>
   138fc:	mul	r1, r5, r4
   13900:	mov	r0, r6
   13904:	pop	{r4, r5, r6, lr}
   13908:	b	135a4 <abort@plt+0x27f0>
   1390c:	bl	10d0c <__errno_location@plt>
   13910:	mov	r3, #12
   13914:	str	r3, [r0]
   13918:	mov	r0, #0
   1391c:	pop	{r4, r5, r6, pc}
   13920:	push	{lr}		; (str lr, [sp, #-4]!)
   13924:	sub	sp, sp, #268	; 0x10c
   13928:	ldr	r2, [pc, #64]	; 13970 <abort@plt+0x2bbc>
   1392c:	add	r1, sp, #4
   13930:	bl	1397c <abort@plt+0x2bc8>
   13934:	cmp	r0, #0
   13938:	movne	r0, #0
   1393c:	bne	13968 <abort@plt+0x2bb4>
   13940:	ldr	r1, [pc, #44]	; 13974 <abort@plt+0x2bc0>
   13944:	add	r0, sp, #4
   13948:	bl	10bb0 <strcmp@plt>
   1394c:	cmp	r0, #0
   13950:	beq	13968 <abort@plt+0x2bb4>
   13954:	ldr	r1, [pc, #28]	; 13978 <abort@plt+0x2bc4>
   13958:	add	r0, sp, #4
   1395c:	bl	10bb0 <strcmp@plt>
   13960:	adds	r0, r0, #0
   13964:	movne	r0, #1
   13968:	add	sp, sp, #268	; 0x10c
   1396c:	pop	{pc}		; (ldr pc, [sp], #4)
   13970:	andeq	r0, r0, r1, lsl #2
   13974:	andeq	r4, r1, lr, lsr r6
   13978:	andeq	r4, r1, r0, asr #12
   1397c:	push	{r4, r5, r6, lr}
   13980:	mov	r5, r1
   13984:	mov	r1, #0
   13988:	mov	r4, r2
   1398c:	bl	10d6c <setlocale@plt>
   13990:	subs	r6, r0, #0
   13994:	bne	139a8 <abort@plt+0x2bf4>
   13998:	cmp	r4, #0
   1399c:	strbne	r6, [r5]
   139a0:	mov	r0, #22
   139a4:	pop	{r4, r5, r6, pc}
   139a8:	bl	10d00 <strlen@plt>
   139ac:	cmp	r4, r0
   139b0:	bls	139cc <abort@plt+0x2c18>
   139b4:	add	r2, r0, #1
   139b8:	mov	r1, r6
   139bc:	mov	r0, r5
   139c0:	bl	10bec <memcpy@plt>
   139c4:	mov	r0, #0
   139c8:	pop	{r4, r5, r6, pc}
   139cc:	cmp	r4, #0
   139d0:	beq	139f0 <abort@plt+0x2c3c>
   139d4:	sub	r4, r4, #1
   139d8:	mov	r2, r4
   139dc:	mov	r1, r6
   139e0:	mov	r0, r5
   139e4:	bl	10bec <memcpy@plt>
   139e8:	mov	r3, #0
   139ec:	strb	r3, [r5, r4]
   139f0:	mov	r0, #34	; 0x22
   139f4:	pop	{r4, r5, r6, pc}
   139f8:	mov	r1, #0
   139fc:	b	10d6c <setlocale@plt>
   13a00:	subs	r2, r1, #1
   13a04:	bxeq	lr
   13a08:	bcc	13be0 <abort@plt+0x2e2c>
   13a0c:	cmp	r0, r1
   13a10:	bls	13bc4 <abort@plt+0x2e10>
   13a14:	tst	r1, r2
   13a18:	beq	13bd0 <abort@plt+0x2e1c>
   13a1c:	clz	r3, r0
   13a20:	clz	r2, r1
   13a24:	sub	r3, r2, r3
   13a28:	rsbs	r3, r3, #31
   13a2c:	addne	r3, r3, r3, lsl #1
   13a30:	mov	r2, #0
   13a34:	addne	pc, pc, r3, lsl #2
   13a38:	nop			; (mov r0, r0)
   13a3c:	cmp	r0, r1, lsl #31
   13a40:	adc	r2, r2, r2
   13a44:	subcs	r0, r0, r1, lsl #31
   13a48:	cmp	r0, r1, lsl #30
   13a4c:	adc	r2, r2, r2
   13a50:	subcs	r0, r0, r1, lsl #30
   13a54:	cmp	r0, r1, lsl #29
   13a58:	adc	r2, r2, r2
   13a5c:	subcs	r0, r0, r1, lsl #29
   13a60:	cmp	r0, r1, lsl #28
   13a64:	adc	r2, r2, r2
   13a68:	subcs	r0, r0, r1, lsl #28
   13a6c:	cmp	r0, r1, lsl #27
   13a70:	adc	r2, r2, r2
   13a74:	subcs	r0, r0, r1, lsl #27
   13a78:	cmp	r0, r1, lsl #26
   13a7c:	adc	r2, r2, r2
   13a80:	subcs	r0, r0, r1, lsl #26
   13a84:	cmp	r0, r1, lsl #25
   13a88:	adc	r2, r2, r2
   13a8c:	subcs	r0, r0, r1, lsl #25
   13a90:	cmp	r0, r1, lsl #24
   13a94:	adc	r2, r2, r2
   13a98:	subcs	r0, r0, r1, lsl #24
   13a9c:	cmp	r0, r1, lsl #23
   13aa0:	adc	r2, r2, r2
   13aa4:	subcs	r0, r0, r1, lsl #23
   13aa8:	cmp	r0, r1, lsl #22
   13aac:	adc	r2, r2, r2
   13ab0:	subcs	r0, r0, r1, lsl #22
   13ab4:	cmp	r0, r1, lsl #21
   13ab8:	adc	r2, r2, r2
   13abc:	subcs	r0, r0, r1, lsl #21
   13ac0:	cmp	r0, r1, lsl #20
   13ac4:	adc	r2, r2, r2
   13ac8:	subcs	r0, r0, r1, lsl #20
   13acc:	cmp	r0, r1, lsl #19
   13ad0:	adc	r2, r2, r2
   13ad4:	subcs	r0, r0, r1, lsl #19
   13ad8:	cmp	r0, r1, lsl #18
   13adc:	adc	r2, r2, r2
   13ae0:	subcs	r0, r0, r1, lsl #18
   13ae4:	cmp	r0, r1, lsl #17
   13ae8:	adc	r2, r2, r2
   13aec:	subcs	r0, r0, r1, lsl #17
   13af0:	cmp	r0, r1, lsl #16
   13af4:	adc	r2, r2, r2
   13af8:	subcs	r0, r0, r1, lsl #16
   13afc:	cmp	r0, r1, lsl #15
   13b00:	adc	r2, r2, r2
   13b04:	subcs	r0, r0, r1, lsl #15
   13b08:	cmp	r0, r1, lsl #14
   13b0c:	adc	r2, r2, r2
   13b10:	subcs	r0, r0, r1, lsl #14
   13b14:	cmp	r0, r1, lsl #13
   13b18:	adc	r2, r2, r2
   13b1c:	subcs	r0, r0, r1, lsl #13
   13b20:	cmp	r0, r1, lsl #12
   13b24:	adc	r2, r2, r2
   13b28:	subcs	r0, r0, r1, lsl #12
   13b2c:	cmp	r0, r1, lsl #11
   13b30:	adc	r2, r2, r2
   13b34:	subcs	r0, r0, r1, lsl #11
   13b38:	cmp	r0, r1, lsl #10
   13b3c:	adc	r2, r2, r2
   13b40:	subcs	r0, r0, r1, lsl #10
   13b44:	cmp	r0, r1, lsl #9
   13b48:	adc	r2, r2, r2
   13b4c:	subcs	r0, r0, r1, lsl #9
   13b50:	cmp	r0, r1, lsl #8
   13b54:	adc	r2, r2, r2
   13b58:	subcs	r0, r0, r1, lsl #8
   13b5c:	cmp	r0, r1, lsl #7
   13b60:	adc	r2, r2, r2
   13b64:	subcs	r0, r0, r1, lsl #7
   13b68:	cmp	r0, r1, lsl #6
   13b6c:	adc	r2, r2, r2
   13b70:	subcs	r0, r0, r1, lsl #6
   13b74:	cmp	r0, r1, lsl #5
   13b78:	adc	r2, r2, r2
   13b7c:	subcs	r0, r0, r1, lsl #5
   13b80:	cmp	r0, r1, lsl #4
   13b84:	adc	r2, r2, r2
   13b88:	subcs	r0, r0, r1, lsl #4
   13b8c:	cmp	r0, r1, lsl #3
   13b90:	adc	r2, r2, r2
   13b94:	subcs	r0, r0, r1, lsl #3
   13b98:	cmp	r0, r1, lsl #2
   13b9c:	adc	r2, r2, r2
   13ba0:	subcs	r0, r0, r1, lsl #2
   13ba4:	cmp	r0, r1, lsl #1
   13ba8:	adc	r2, r2, r2
   13bac:	subcs	r0, r0, r1, lsl #1
   13bb0:	cmp	r0, r1
   13bb4:	adc	r2, r2, r2
   13bb8:	subcs	r0, r0, r1
   13bbc:	mov	r0, r2
   13bc0:	bx	lr
   13bc4:	moveq	r0, #1
   13bc8:	movne	r0, #0
   13bcc:	bx	lr
   13bd0:	clz	r2, r1
   13bd4:	rsb	r2, r2, #31
   13bd8:	lsr	r0, r0, r2
   13bdc:	bx	lr
   13be0:	cmp	r0, #0
   13be4:	mvnne	r0, #0
   13be8:	b	13e4c <abort@plt+0x3098>
   13bec:	cmp	r1, #0
   13bf0:	beq	13be0 <abort@plt+0x2e2c>
   13bf4:	push	{r0, r1, lr}
   13bf8:	bl	13a00 <abort@plt+0x2c4c>
   13bfc:	pop	{r1, r2, lr}
   13c00:	mul	r3, r2, r0
   13c04:	sub	r1, r1, r3
   13c08:	bx	lr
   13c0c:	cmp	r1, #0
   13c10:	beq	13e1c <abort@plt+0x3068>
   13c14:	eor	ip, r0, r1
   13c18:	rsbmi	r1, r1, #0
   13c1c:	subs	r2, r1, #1
   13c20:	beq	13de8 <abort@plt+0x3034>
   13c24:	movs	r3, r0
   13c28:	rsbmi	r3, r0, #0
   13c2c:	cmp	r3, r1
   13c30:	bls	13df4 <abort@plt+0x3040>
   13c34:	tst	r1, r2
   13c38:	beq	13e04 <abort@plt+0x3050>
   13c3c:	clz	r2, r3
   13c40:	clz	r0, r1
   13c44:	sub	r2, r0, r2
   13c48:	rsbs	r2, r2, #31
   13c4c:	addne	r2, r2, r2, lsl #1
   13c50:	mov	r0, #0
   13c54:	addne	pc, pc, r2, lsl #2
   13c58:	nop			; (mov r0, r0)
   13c5c:	cmp	r3, r1, lsl #31
   13c60:	adc	r0, r0, r0
   13c64:	subcs	r3, r3, r1, lsl #31
   13c68:	cmp	r3, r1, lsl #30
   13c6c:	adc	r0, r0, r0
   13c70:	subcs	r3, r3, r1, lsl #30
   13c74:	cmp	r3, r1, lsl #29
   13c78:	adc	r0, r0, r0
   13c7c:	subcs	r3, r3, r1, lsl #29
   13c80:	cmp	r3, r1, lsl #28
   13c84:	adc	r0, r0, r0
   13c88:	subcs	r3, r3, r1, lsl #28
   13c8c:	cmp	r3, r1, lsl #27
   13c90:	adc	r0, r0, r0
   13c94:	subcs	r3, r3, r1, lsl #27
   13c98:	cmp	r3, r1, lsl #26
   13c9c:	adc	r0, r0, r0
   13ca0:	subcs	r3, r3, r1, lsl #26
   13ca4:	cmp	r3, r1, lsl #25
   13ca8:	adc	r0, r0, r0
   13cac:	subcs	r3, r3, r1, lsl #25
   13cb0:	cmp	r3, r1, lsl #24
   13cb4:	adc	r0, r0, r0
   13cb8:	subcs	r3, r3, r1, lsl #24
   13cbc:	cmp	r3, r1, lsl #23
   13cc0:	adc	r0, r0, r0
   13cc4:	subcs	r3, r3, r1, lsl #23
   13cc8:	cmp	r3, r1, lsl #22
   13ccc:	adc	r0, r0, r0
   13cd0:	subcs	r3, r3, r1, lsl #22
   13cd4:	cmp	r3, r1, lsl #21
   13cd8:	adc	r0, r0, r0
   13cdc:	subcs	r3, r3, r1, lsl #21
   13ce0:	cmp	r3, r1, lsl #20
   13ce4:	adc	r0, r0, r0
   13ce8:	subcs	r3, r3, r1, lsl #20
   13cec:	cmp	r3, r1, lsl #19
   13cf0:	adc	r0, r0, r0
   13cf4:	subcs	r3, r3, r1, lsl #19
   13cf8:	cmp	r3, r1, lsl #18
   13cfc:	adc	r0, r0, r0
   13d00:	subcs	r3, r3, r1, lsl #18
   13d04:	cmp	r3, r1, lsl #17
   13d08:	adc	r0, r0, r0
   13d0c:	subcs	r3, r3, r1, lsl #17
   13d10:	cmp	r3, r1, lsl #16
   13d14:	adc	r0, r0, r0
   13d18:	subcs	r3, r3, r1, lsl #16
   13d1c:	cmp	r3, r1, lsl #15
   13d20:	adc	r0, r0, r0
   13d24:	subcs	r3, r3, r1, lsl #15
   13d28:	cmp	r3, r1, lsl #14
   13d2c:	adc	r0, r0, r0
   13d30:	subcs	r3, r3, r1, lsl #14
   13d34:	cmp	r3, r1, lsl #13
   13d38:	adc	r0, r0, r0
   13d3c:	subcs	r3, r3, r1, lsl #13
   13d40:	cmp	r3, r1, lsl #12
   13d44:	adc	r0, r0, r0
   13d48:	subcs	r3, r3, r1, lsl #12
   13d4c:	cmp	r3, r1, lsl #11
   13d50:	adc	r0, r0, r0
   13d54:	subcs	r3, r3, r1, lsl #11
   13d58:	cmp	r3, r1, lsl #10
   13d5c:	adc	r0, r0, r0
   13d60:	subcs	r3, r3, r1, lsl #10
   13d64:	cmp	r3, r1, lsl #9
   13d68:	adc	r0, r0, r0
   13d6c:	subcs	r3, r3, r1, lsl #9
   13d70:	cmp	r3, r1, lsl #8
   13d74:	adc	r0, r0, r0
   13d78:	subcs	r3, r3, r1, lsl #8
   13d7c:	cmp	r3, r1, lsl #7
   13d80:	adc	r0, r0, r0
   13d84:	subcs	r3, r3, r1, lsl #7
   13d88:	cmp	r3, r1, lsl #6
   13d8c:	adc	r0, r0, r0
   13d90:	subcs	r3, r3, r1, lsl #6
   13d94:	cmp	r3, r1, lsl #5
   13d98:	adc	r0, r0, r0
   13d9c:	subcs	r3, r3, r1, lsl #5
   13da0:	cmp	r3, r1, lsl #4
   13da4:	adc	r0, r0, r0
   13da8:	subcs	r3, r3, r1, lsl #4
   13dac:	cmp	r3, r1, lsl #3
   13db0:	adc	r0, r0, r0
   13db4:	subcs	r3, r3, r1, lsl #3
   13db8:	cmp	r3, r1, lsl #2
   13dbc:	adc	r0, r0, r0
   13dc0:	subcs	r3, r3, r1, lsl #2
   13dc4:	cmp	r3, r1, lsl #1
   13dc8:	adc	r0, r0, r0
   13dcc:	subcs	r3, r3, r1, lsl #1
   13dd0:	cmp	r3, r1
   13dd4:	adc	r0, r0, r0
   13dd8:	subcs	r3, r3, r1
   13ddc:	cmp	ip, #0
   13de0:	rsbmi	r0, r0, #0
   13de4:	bx	lr
   13de8:	teq	ip, r0
   13dec:	rsbmi	r0, r0, #0
   13df0:	bx	lr
   13df4:	movcc	r0, #0
   13df8:	asreq	r0, ip, #31
   13dfc:	orreq	r0, r0, #1
   13e00:	bx	lr
   13e04:	clz	r2, r1
   13e08:	rsb	r2, r2, #31
   13e0c:	cmp	ip, #0
   13e10:	lsr	r0, r3, r2
   13e14:	rsbmi	r0, r0, #0
   13e18:	bx	lr
   13e1c:	cmp	r0, #0
   13e20:	mvngt	r0, #-2147483648	; 0x80000000
   13e24:	movlt	r0, #-2147483648	; 0x80000000
   13e28:	b	13e4c <abort@plt+0x3098>
   13e2c:	cmp	r1, #0
   13e30:	beq	13e1c <abort@plt+0x3068>
   13e34:	push	{r0, r1, lr}
   13e38:	bl	13c14 <abort@plt+0x2e60>
   13e3c:	pop	{r1, r2, lr}
   13e40:	mul	r3, r2, r0
   13e44:	sub	r1, r1, r3
   13e48:	bx	lr
   13e4c:	push	{r1, lr}
   13e50:	mov	r0, #8
   13e54:	bl	10ba4 <raise@plt>
   13e58:	pop	{r1, pc}
   13e5c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13e60:	mov	r7, r0
   13e64:	ldr	r6, [pc, #72]	; 13eb4 <abort@plt+0x3100>
   13e68:	ldr	r5, [pc, #72]	; 13eb8 <abort@plt+0x3104>
   13e6c:	add	r6, pc, r6
   13e70:	add	r5, pc, r5
   13e74:	sub	r6, r6, r5
   13e78:	mov	r8, r1
   13e7c:	mov	r9, r2
   13e80:	bl	10b6c <calloc@plt-0x20>
   13e84:	asrs	r6, r6, #2
   13e88:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   13e8c:	mov	r4, #0
   13e90:	add	r4, r4, #1
   13e94:	ldr	r3, [r5], #4
   13e98:	mov	r2, r9
   13e9c:	mov	r1, r8
   13ea0:	mov	r0, r7
   13ea4:	blx	r3
   13ea8:	cmp	r6, r4
   13eac:	bne	13e90 <abort@plt+0x30dc>
   13eb0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13eb4:	muleq	r1, ip, r0
   13eb8:	muleq	r1, r4, r0
   13ebc:	bx	lr
   13ec0:	ldr	r3, [pc, #12]	; 13ed4 <abort@plt+0x3120>
   13ec4:	mov	r1, #0
   13ec8:	add	r3, pc, r3
   13ecc:	ldr	r2, [r3]
   13ed0:	b	10d18 <__cxa_atexit@plt>
   13ed4:	andeq	r1, r1, r0, lsl #4

Disassembly of section .fini:

00013ed8 <.fini>:
   13ed8:	push	{r3, lr}
   13edc:	pop	{r3, pc}
