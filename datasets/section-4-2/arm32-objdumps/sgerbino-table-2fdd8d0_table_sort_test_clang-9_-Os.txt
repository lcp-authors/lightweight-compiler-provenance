
../repos/sgerbino-table-2fdd8d0/bin/table_sort_test:     file format elf32-littlearm


Disassembly of section .init:

00011f5c <.init>:
   11f5c:	push	{r3, lr}
   11f60:	bl	12084 <_start@@Base+0x3c>
   11f64:	pop	{r3, pc}

Disassembly of section .plt:

00011f68 <calloc@plt-0x14>:
   11f68:	push	{lr}		; (str lr, [sp, #-4]!)
   11f6c:	ldr	lr, [pc, #4]	; 11f78 <calloc@plt-0x4>
   11f70:	add	lr, pc, lr
   11f74:	ldr	pc, [lr, #8]!
   11f78:	andeq	r4, r1, r8, lsl #1

00011f7c <calloc@plt>:
   11f7c:	add	ip, pc, #0, 12
   11f80:	add	ip, ip, #20, 20	; 0x14000
   11f84:	ldr	pc, [ip, #136]!	; 0x88

00011f88 <strcmp@plt>:
   11f88:	add	ip, pc, #0, 12
   11f8c:	add	ip, ip, #20, 20	; 0x14000
   11f90:	ldr	pc, [ip, #128]!	; 0x80

00011f94 <printf@plt>:
   11f94:	add	ip, pc, #0, 12
   11f98:	add	ip, ip, #20, 20	; 0x14000
   11f9c:	ldr	pc, [ip, #120]!	; 0x78

00011fa0 <free@plt>:
   11fa0:	add	ip, pc, #0, 12
   11fa4:	add	ip, ip, #20, 20	; 0x14000
   11fa8:	ldr	pc, [ip, #112]!	; 0x70

00011fac <time@plt>:
   11fac:	add	ip, pc, #0, 12
   11fb0:	add	ip, ip, #20, 20	; 0x14000
   11fb4:	ldr	pc, [ip, #104]!	; 0x68

00011fb8 <realloc@plt>:
   11fb8:	add	ip, pc, #0, 12
   11fbc:	add	ip, ip, #20, 20	; 0x14000
   11fc0:	ldr	pc, [ip, #96]!	; 0x60

00011fc4 <strcpy@plt>:
   11fc4:	add	ip, pc, #0, 12
   11fc8:	add	ip, ip, #20, 20	; 0x14000
   11fcc:	ldr	pc, [ip, #88]!	; 0x58

00011fd0 <puts@plt>:
   11fd0:	add	ip, pc, #0, 12
   11fd4:	add	ip, ip, #20, 20	; 0x14000
   11fd8:	ldr	pc, [ip, #80]!	; 0x50

00011fdc <malloc@plt>:
   11fdc:	add	ip, pc, #0, 12
   11fe0:	add	ip, ip, #20, 20	; 0x14000
   11fe4:	ldr	pc, [ip, #72]!	; 0x48

00011fe8 <__libc_start_main@plt>:
   11fe8:	add	ip, pc, #0, 12
   11fec:	add	ip, ip, #20, 20	; 0x14000
   11ff0:	ldr	pc, [ip, #64]!	; 0x40

00011ff4 <__gmon_start__@plt>:
   11ff4:	add	ip, pc, #0, 12
   11ff8:	add	ip, ip, #20, 20	; 0x14000
   11ffc:	ldr	pc, [ip, #56]!	; 0x38

00012000 <strlen@plt>:
   12000:	add	ip, pc, #0, 12
   12004:	add	ip, ip, #20, 20	; 0x14000
   12008:	ldr	pc, [ip, #48]!	; 0x30

0001200c <srand@plt>:
   1200c:	add	ip, pc, #0, 12
   12010:	add	ip, ip, #20, 20	; 0x14000
   12014:	ldr	pc, [ip, #40]!	; 0x28

00012018 <snprintf@plt>:
   12018:	add	ip, pc, #0, 12
   1201c:	add	ip, ip, #20, 20	; 0x14000
   12020:	ldr	pc, [ip, #32]!

00012024 <__isoc99_sscanf@plt>:
   12024:	add	ip, pc, #0, 12
   12028:	add	ip, ip, #20, 20	; 0x14000
   1202c:	ldr	pc, [ip, #24]!

00012030 <rand@plt>:
   12030:	add	ip, pc, #0, 12
   12034:	add	ip, ip, #20, 20	; 0x14000
   12038:	ldr	pc, [ip, #16]!

0001203c <abort@plt>:
   1203c:	add	ip, pc, #0, 12
   12040:	add	ip, ip, #20, 20	; 0x14000
   12044:	ldr	pc, [ip, #8]!

Disassembly of section .text:

00012048 <_start@@Base>:
   12048:	mov	fp, #0
   1204c:	mov	lr, #0
   12050:	pop	{r1}		; (ldr r1, [sp], #4)
   12054:	mov	r2, sp
   12058:	push	{r2}		; (str r2, [sp, #-4]!)
   1205c:	push	{r0}		; (str r0, [sp, #-4]!)
   12060:	ldr	ip, [pc, #16]	; 12078 <_start@@Base+0x30>
   12064:	push	{ip}		; (str ip, [sp, #-4]!)
   12068:	ldr	r0, [pc, #12]	; 1207c <_start@@Base+0x34>
   1206c:	ldr	r3, [pc, #12]	; 12080 <_start@@Base+0x38>
   12070:	bl	11fe8 <__libc_start_main@plt>
   12074:	bl	1203c <abort@plt>
   12078:	andeq	r5, r1, r0, lsr #7
   1207c:	andeq	r2, r1, r8, lsr r1
   12080:	andeq	r5, r1, r0, asr #6
   12084:	ldr	r3, [pc, #20]	; 120a0 <_start@@Base+0x58>
   12088:	ldr	r2, [pc, #20]	; 120a4 <_start@@Base+0x5c>
   1208c:	add	r3, pc, r3
   12090:	ldr	r2, [r3, r2]
   12094:	cmp	r2, #0
   12098:	bxeq	lr
   1209c:	b	11ff4 <__gmon_start__@plt>
   120a0:	andeq	r3, r1, ip, ror #30
   120a4:	andeq	r0, r0, r0, asr r0
   120a8:	ldr	r0, [pc, #24]	; 120c8 <_start@@Base+0x80>
   120ac:	ldr	r3, [pc, #24]	; 120cc <_start@@Base+0x84>
   120b0:	cmp	r3, r0
   120b4:	bxeq	lr
   120b8:	ldr	r3, [pc, #16]	; 120d0 <_start@@Base+0x88>
   120bc:	cmp	r3, #0
   120c0:	bxeq	lr
   120c4:	bx	r3
   120c8:	andeq	r6, r2, ip, asr r0
   120cc:	andeq	r6, r2, ip, asr r0
   120d0:	andeq	r0, r0, r0
   120d4:	ldr	r0, [pc, #36]	; 12100 <_start@@Base+0xb8>
   120d8:	ldr	r1, [pc, #36]	; 12104 <_start@@Base+0xbc>
   120dc:	sub	r1, r1, r0
   120e0:	asr	r1, r1, #2
   120e4:	add	r1, r1, r1, lsr #31
   120e8:	asrs	r1, r1, #1
   120ec:	bxeq	lr
   120f0:	ldr	r3, [pc, #16]	; 12108 <_start@@Base+0xc0>
   120f4:	cmp	r3, #0
   120f8:	bxeq	lr
   120fc:	bx	r3
   12100:	andeq	r6, r2, ip, asr r0
   12104:	andeq	r6, r2, ip, asr r0
   12108:	andeq	r0, r0, r0
   1210c:	push	{r4, lr}
   12110:	ldr	r4, [pc, #24]	; 12130 <_start@@Base+0xe8>
   12114:	ldrb	r3, [r4]
   12118:	cmp	r3, #0
   1211c:	popne	{r4, pc}
   12120:	bl	120a8 <_start@@Base+0x60>
   12124:	mov	r3, #1
   12128:	strb	r3, [r4]
   1212c:	pop	{r4, pc}
   12130:	andeq	r6, r2, ip, asr r0
   12134:	b	120d4 <_start@@Base+0x8c>

00012138 <main@@Base>:
   12138:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1213c:	add	fp, sp, #28
   12140:	sub	sp, sp, #356	; 0x164
   12144:	sub	r0, fp, #92	; 0x5c
   12148:	bl	11fac <time@plt>
   1214c:	bl	1200c <srand@plt>
   12150:	bl	12030 <rand@plt>
   12154:	sub	r4, fp, #88	; 0x58
   12158:	mov	r5, r0
   1215c:	mov	r0, r4
   12160:	bl	125b4 <table_init@@Base>
   12164:	movw	r0, #34079	; 0x851f
   12168:	mov	r6, #0
   1216c:	movt	r0, #20971	; 0x51eb
   12170:	umull	r0, r1, r5, r0
   12174:	lsr	r0, r1, #5
   12178:	mov	r1, #100	; 0x64
   1217c:	mls	r0, r0, r1, r5
   12180:	add	r5, r0, #100	; 0x64
   12184:	mov	r0, r4
   12188:	bl	146ac <table_add_row@@Base>
   1218c:	add	r6, r6, #1
   12190:	cmp	r6, r5
   12194:	bcc	12184 <main@@Base+0x4c>
   12198:	sub	r8, fp, #88	; 0x58
   1219c:	mov	r0, r8
   121a0:	bl	146a4 <table_get_row_length@@Base>
   121a4:	mov	r9, r0
   121a8:	bl	12030 <rand@plt>
   121ac:	movw	r1, #52429	; 0xcccd
   121b0:	movw	r4, #21424	; 0x53b0
   121b4:	mov	r5, #0
   121b8:	add	r7, sp, #37	; 0x25
   121bc:	movt	r1, #52428	; 0xcccc
   121c0:	movt	r4, #1
   121c4:	umull	r1, r2, r0, r1
   121c8:	lsr	r1, r2, #2
   121cc:	add	r1, r1, r1, lsl #2
   121d0:	sub	r0, r0, r1
   121d4:	add	r6, r0, #2
   121d8:	mov	r0, r7
   121dc:	mov	r1, #255	; 0xff
   121e0:	mov	r2, r4
   121e4:	mov	r3, r5
   121e8:	bl	12018 <snprintf@plt>
   121ec:	mov	r0, r8
   121f0:	mov	r1, r7
   121f4:	mov	r2, #0
   121f8:	bl	13a78 <table_add_column@@Base>
   121fc:	add	r5, r5, #1
   12200:	cmp	r5, r6
   12204:	bcc	121d8 <main@@Base+0xa0>
   12208:	sub	r0, fp, #88	; 0x58
   1220c:	bl	139ec <table_get_column_length@@Base>
   12210:	mov	r8, r0
   12214:	cmp	r0, #1
   12218:	blt	12278 <main@@Base+0x140>
   1221c:	movw	r6, #26215	; 0x6667
   12220:	mov	r4, #0
   12224:	sub	r5, fp, #88	; 0x58
   12228:	movt	r6, #26214	; 0x6666
   1222c:	cmp	r9, #1
   12230:	blt	1226c <main@@Base+0x134>
   12234:	mov	r7, #0
   12238:	bl	12030 <rand@plt>
   1223c:	smmul	r1, r0, r6
   12240:	asr	r2, r1, #3
   12244:	add	r1, r2, r1, lsr #31
   12248:	mov	r2, r4
   1224c:	add	r1, r1, r1, lsl #2
   12250:	sub	r3, r0, r1, lsl #2
   12254:	mov	r0, r5
   12258:	mov	r1, r7
   1225c:	bl	14ba8 <table_set_int@@Base>
   12260:	add	r7, r7, #1
   12264:	cmp	r9, r7
   12268:	bne	12238 <main@@Base+0x100>
   1226c:	add	r4, r4, #1
   12270:	cmp	r4, r8
   12274:	bne	1222c <main@@Base+0xf4>
   12278:	mov	r0, r8
   1227c:	mov	r1, #4
   12280:	bl	11f7c <calloc@plt>
   12284:	mov	r5, r0
   12288:	mov	r0, r8
   1228c:	mov	r1, #4
   12290:	bl	11f7c <calloc@plt>
   12294:	mov	r6, r0
   12298:	cmp	r8, #1
   1229c:	blt	122c8 <main@@Base+0x190>
   122a0:	mov	r4, #0
   122a4:	str	r4, [r5, r4, lsl #2]
   122a8:	bl	12030 <rand@plt>
   122ac:	add	r1, r0, r0, lsr #31
   122b0:	bic	r1, r1, #1
   122b4:	sub	r0, r0, r1
   122b8:	str	r0, [r6, r4, lsl #2]
   122bc:	add	r4, r4, #1
   122c0:	cmp	r8, r4
   122c4:	bne	122a4 <main@@Base+0x16c>
   122c8:	sub	r0, fp, #88	; 0x58
   122cc:	mov	r1, r5
   122d0:	mov	r2, r6
   122d4:	mov	r3, r8
   122d8:	bl	14f60 <table_column_sort@@Base>
   122dc:	cmp	r9, #1
   122e0:	blt	12530 <main@@Base+0x3f8>
   122e4:	cmp	r8, #1
   122e8:	mov	r0, #0
   122ec:	str	r5, [sp, #8]
   122f0:	mov	r4, #0
   122f4:	mvn	r1, #0
   122f8:	sub	r5, fp, #88	; 0x58
   122fc:	str	r8, [sp, #28]
   12300:	str	r9, [sp, #24]
   12304:	movwlt	r0, #1
   12308:	str	r0, [sp, #20]
   1230c:	mov	r0, #0
   12310:	str	r0, [sp, #12]
   12314:	mvn	r0, #0
   12318:	str	r0, [sp, #16]
   1231c:	ldr	r2, [sp, #20]
   12320:	clz	r0, r4
   12324:	lsr	r0, r0, #5
   12328:	orrs	r0, r0, r2
   1232c:	bne	1241c <main@@Base+0x2e4>
   12330:	sub	r8, r4, #1
   12334:	mov	r9, #0
   12338:	cmp	r9, #0
   1233c:	str	r1, [sp, #32]
   12340:	beq	12380 <main@@Base+0x248>
   12344:	mov	r7, r9
   12348:	subs	r7, r7, #1
   1234c:	blt	12380 <main@@Base+0x248>
   12350:	mov	r0, r5
   12354:	mov	r1, r4
   12358:	mov	r2, r7
   1235c:	bl	143f8 <table_get_int@@Base>
   12360:	mov	sl, r0
   12364:	mov	r0, r5
   12368:	mov	r1, r8
   1236c:	mov	r2, r7
   12370:	bl	143f8 <table_get_int@@Base>
   12374:	cmp	sl, r0
   12378:	beq	12348 <main@@Base+0x210>
   1237c:	b	12418 <main@@Base+0x2e0>
   12380:	mov	sl, r6
   12384:	ldr	r6, [r6, r9, lsl #2]
   12388:	mov	r0, r5
   1238c:	mov	r1, r8
   12390:	mov	r2, r9
   12394:	bl	143f8 <table_get_int@@Base>
   12398:	mov	r7, r0
   1239c:	mov	r0, r5
   123a0:	mov	r1, r4
   123a4:	mov	r2, r9
   123a8:	bl	143f8 <table_get_int@@Base>
   123ac:	cmp	r6, #0
   123b0:	beq	123d0 <main@@Base+0x298>
   123b4:	ldr	r1, [sp, #32]
   123b8:	cmp	r7, r0
   123bc:	mov	r6, sl
   123c0:	bge	12404 <main@@Base+0x2cc>
   123c4:	movw	r0, #21503	; 0x53ff
   123c8:	movt	r0, #1
   123cc:	b	123e8 <main@@Base+0x2b0>
   123d0:	ldr	r1, [sp, #32]
   123d4:	cmp	r7, r0
   123d8:	mov	r6, sl
   123dc:	ble	12404 <main@@Base+0x2cc>
   123e0:	movw	r0, #21431	; 0x53b7
   123e4:	movt	r0, #1
   123e8:	mov	r1, r4
   123ec:	mov	r2, r9
   123f0:	bl	11f94 <printf@plt>
   123f4:	mvn	r0, #0
   123f8:	mov	r1, r9
   123fc:	str	r4, [sp, #16]
   12400:	str	r0, [sp, #12]
   12404:	ldr	r0, [sp, #28]
   12408:	add	r9, r9, #1
   1240c:	cmp	r9, r0
   12410:	bne	12338 <main@@Base+0x200>
   12414:	b	1241c <main@@Base+0x2e4>
   12418:	ldr	r1, [sp, #32]
   1241c:	ldr	r9, [sp, #24]
   12420:	add	r4, r4, #1
   12424:	cmp	r4, r9
   12428:	bne	1231c <main@@Base+0x1e4>
   1242c:	ldr	r0, [sp, #16]
   12430:	cmn	r0, #1
   12434:	beq	12538 <main@@Base+0x400>
   12438:	sub	r4, fp, #88	; 0x58
   1243c:	str	r1, [sp, #32]
   12440:	str	r6, [sp, #24]
   12444:	mov	r0, r4
   12448:	bl	146a4 <table_get_row_length@@Base>
   1244c:	mov	r0, r4
   12450:	bl	146a4 <table_get_row_length@@Base>
   12454:	mov	r4, r0
   12458:	movw	r0, #21586	; 0x5452
   1245c:	movt	r0, #1
   12460:	bl	11fd0 <puts@plt>
   12464:	cmp	r4, #1
   12468:	str	r4, [sp, #28]
   1246c:	blt	12524 <main@@Base+0x3ec>
   12470:	ldr	sl, [sp, #32]
   12474:	ldr	r8, [sp, #16]
   12478:	movw	r9, #21581	; 0x544d
   1247c:	mov	r6, #0
   12480:	sub	r7, fp, #88	; 0x58
   12484:	add	r5, sp, #37	; 0x25
   12488:	movt	r9, #1
   1248c:	mov	r0, r7
   12490:	bl	139ec <table_get_column_length@@Base>
   12494:	cmp	r0, #1
   12498:	mov	r0, #255	; 0xff
   1249c:	blt	124f8 <main@@Base+0x3c0>
   124a0:	mov	r4, #0
   124a4:	str	r0, [sp]
   124a8:	mov	r0, r7
   124ac:	mov	r1, r6
   124b0:	mov	r2, r4
   124b4:	mov	r3, r5
   124b8:	bl	12f98 <table_cell_to_buffer@@Base>
   124bc:	eor	r0, sl, r4
   124c0:	eor	r1, r8, r6
   124c4:	orrs	r0, r1, r0
   124c8:	movw	r1, #21576	; 0x5448
   124cc:	mov	r0, r9
   124d0:	movt	r1, #1
   124d4:	moveq	r0, r1
   124d8:	mov	r1, r5
   124dc:	bl	11f94 <printf@plt>
   124e0:	mov	r0, r7
   124e4:	add	r4, r4, #1
   124e8:	bl	139ec <table_get_column_length@@Base>
   124ec:	cmp	r4, r0
   124f0:	mov	r0, #255	; 0xff
   124f4:	blt	124a4 <main@@Base+0x36c>
   124f8:	movw	r1, #21585	; 0x5451
   124fc:	movw	r0, #21586	; 0x5452
   12500:	cmp	r8, r6
   12504:	movt	r1, #1
   12508:	movt	r0, #1
   1250c:	moveq	r0, r1
   12510:	bl	11fd0 <puts@plt>
   12514:	ldr	r0, [sp, #28]
   12518:	add	r6, r6, #1
   1251c:	cmp	r6, r0
   12520:	bne	1248c <main@@Base+0x354>
   12524:	ldr	r5, [sp, #8]
   12528:	ldr	r6, [sp, #24]
   1252c:	b	1253c <main@@Base+0x404>
   12530:	mov	r4, #0
   12534:	b	12540 <main@@Base+0x408>
   12538:	ldr	r5, [sp, #8]
   1253c:	ldr	r4, [sp, #12]
   12540:	sub	r0, fp, #88	; 0x58
   12544:	bl	12610 <table_destroy@@Base>
   12548:	mov	r0, r5
   1254c:	bl	11fa0 <free@plt>
   12550:	mov	r0, r6
   12554:	bl	11fa0 <free@plt>
   12558:	mov	r0, r4
   1255c:	sub	sp, fp, #28
   12560:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00012564 <table_new@@Base>:
   12564:	push	{fp, lr}
   12568:	mov	fp, sp
   1256c:	mov	r0, #56	; 0x38
   12570:	bl	11fdc <malloc@plt>
   12574:	vmov.i32	q8, #0	; 0x00000000
   12578:	mov	r1, #0
   1257c:	mov	r2, #10
   12580:	mov	r3, #20
   12584:	str	r1, [r0]
   12588:	stmib	r0, {r1, r2}
   1258c:	str	r1, [r0, #12]
   12590:	str	r1, [r0, #16]
   12594:	str	r1, [r0, #20]
   12598:	str	r3, [r0, #24]
   1259c:	str	r1, [r0, #28]
   125a0:	str	r2, [r0, #48]	; 0x30
   125a4:	str	r1, [r0, #52]	; 0x34
   125a8:	add	r1, r0, #32
   125ac:	vst1.32	{d16-d17}, [r1]
   125b0:	pop	{fp, pc}

000125b4 <table_init@@Base>:
   125b4:	vmov.i32	q8, #0	; 0x00000000
   125b8:	mov	r1, #0
   125bc:	mov	r2, #10
   125c0:	mov	r3, #20
   125c4:	str	r1, [r0]
   125c8:	stmib	r0, {r1, r2}
   125cc:	str	r1, [r0, #12]
   125d0:	str	r1, [r0, #16]
   125d4:	str	r1, [r0, #20]
   125d8:	str	r3, [r0, #24]
   125dc:	str	r1, [r0, #28]
   125e0:	str	r2, [r0, #48]	; 0x30
   125e4:	str	r1, [r0, #52]	; 0x34
   125e8:	add	r0, r0, #32
   125ec:	vst1.32	{d16-d17}, [r0]
   125f0:	bx	lr

000125f4 <table_delete@@Base>:
   125f4:	push	{r4, sl, fp, lr}
   125f8:	add	fp, sp, #8
   125fc:	mov	r4, r0
   12600:	bl	12610 <table_destroy@@Base>
   12604:	mov	r0, r4
   12608:	pop	{r4, sl, fp, lr}
   1260c:	b	11fa0 <free@plt>

00012610 <table_destroy@@Base>:
   12610:	cmp	r0, #0
   12614:	bxeq	lr
   12618:	push	{r4, r5, r6, sl, fp, lr}
   1261c:	add	fp, sp, #16
   12620:	mvn	r1, #0
   12624:	mvn	r2, #0
   12628:	mov	r3, #64	; 0x40
   1262c:	mov	r4, r0
   12630:	bl	12e94 <table_notify@@Base>
   12634:	mov	r0, r4
   12638:	bl	146a4 <table_get_row_length@@Base>
   1263c:	cmp	r0, #1
   12640:	blt	12664 <table_destroy@@Base+0x54>
   12644:	mov	r5, r0
   12648:	mov	r6, #0
   1264c:	mov	r0, r4
   12650:	mov	r1, r6
   12654:	bl	14648 <table_row_destroy@@Base>
   12658:	add	r6, r6, #1
   1265c:	cmp	r5, r6
   12660:	bne	1264c <table_destroy@@Base+0x3c>
   12664:	ldr	r0, [r4, #16]
   12668:	cmp	r0, #0
   1266c:	beq	12674 <table_destroy@@Base+0x64>
   12670:	bl	11fa0 <free@plt>
   12674:	mov	r0, r4
   12678:	bl	139ec <table_get_column_length@@Base>
   1267c:	cmp	r0, #1
   12680:	blt	126a4 <table_destroy@@Base+0x94>
   12684:	mov	r5, r0
   12688:	mov	r6, #0
   1268c:	mov	r0, r4
   12690:	mov	r1, r6
   12694:	bl	139d4 <table_column_destroy@@Base>
   12698:	add	r6, r6, #1
   1269c:	cmp	r5, r6
   126a0:	bne	1268c <table_destroy@@Base+0x7c>
   126a4:	ldr	r0, [r4]
   126a8:	cmp	r0, #0
   126ac:	beq	126b4 <table_destroy@@Base+0xa4>
   126b0:	bl	11fa0 <free@plt>
   126b4:	ldr	r0, [r4, #36]	; 0x24
   126b8:	cmp	r0, #0
   126bc:	beq	126c4 <table_destroy@@Base+0xb4>
   126c0:	bl	11fa0 <free@plt>
   126c4:	ldr	r0, [r4, #40]	; 0x28
   126c8:	cmp	r0, #0
   126cc:	beq	126d4 <table_destroy@@Base+0xc4>
   126d0:	bl	11fa0 <free@plt>
   126d4:	ldr	r0, [r4, #44]	; 0x2c
   126d8:	cmp	r0, #0
   126dc:	pop	{r4, r5, r6, sl, fp, lr}
   126e0:	beq	126e8 <table_destroy@@Base+0xd8>
   126e4:	b	11fa0 <free@plt>
   126e8:	bx	lr

000126ec <table_dupe@@Base>:
   126ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   126f0:	add	fp, sp, #28
   126f4:	sub	sp, sp, #12
   126f8:	mov	r4, r0
   126fc:	bl	146a4 <table_get_row_length@@Base>
   12700:	mov	r8, r0
   12704:	mov	r0, r4
   12708:	bl	139ec <table_get_column_length@@Base>
   1270c:	mov	r6, r0
   12710:	mov	r0, #56	; 0x38
   12714:	bl	11fdc <malloc@plt>
   12718:	vmov.i32	q8, #0	; 0x00000000
   1271c:	mov	sl, r0
   12720:	mov	r5, #0
   12724:	mov	r0, #10
   12728:	mov	r1, #20
   1272c:	cmp	r6, #1
   12730:	str	r5, [sl]
   12734:	str	r5, [sl, #4]
   12738:	str	r0, [sl, #8]
   1273c:	str	r5, [sl, #12]
   12740:	str	r5, [sl, #16]
   12744:	str	r5, [sl, #20]
   12748:	str	r1, [sl, #24]
   1274c:	str	r5, [sl, #28]
   12750:	str	r0, [sl, #48]	; 0x30
   12754:	add	r0, sl, #32
   12758:	str	r5, [sl, #52]	; 0x34
   1275c:	vst1.32	{d16-d17}, [r0]
   12760:	blt	1279c <table_dupe@@Base+0xb0>
   12764:	mov	r0, r4
   12768:	mov	r1, r5
   1276c:	bl	13a54 <table_get_column_name@@Base>
   12770:	mov	r7, r0
   12774:	mov	r0, r4
   12778:	mov	r1, r5
   1277c:	bl	13a64 <table_get_column_data_type@@Base>
   12780:	mov	r2, r0
   12784:	mov	r0, sl
   12788:	mov	r1, r7
   1278c:	bl	13a78 <table_add_column@@Base>
   12790:	add	r5, r5, #1
   12794:	cmp	r6, r5
   12798:	bne	12764 <table_dupe@@Base+0x78>
   1279c:	cmp	r8, #1
   127a0:	blt	12c08 <table_dupe@@Base+0x51c>
   127a4:	mov	r5, #0
   127a8:	add	r9, sp, #8
   127ac:	mov	r0, sl
   127b0:	bl	146ac <table_add_row@@Base>
   127b4:	cmp	r6, #1
   127b8:	blt	12bfc <table_dupe@@Base+0x510>
   127bc:	mov	r7, #0
   127c0:	mov	r0, r4
   127c4:	mov	r1, r7
   127c8:	bl	13a64 <table_get_column_data_type@@Base>
   127cc:	cmp	r0, #23
   127d0:	bhi	12bf0 <table_dupe@@Base+0x504>
   127d4:	add	r1, pc, #0
   127d8:	ldr	pc, [r1, r0, lsl #2]
   127dc:	andeq	r2, r1, ip, lsr r8
   127e0:	andeq	r2, r1, r4, ror #16
   127e4:	andeq	r2, r1, ip, lsl #17
   127e8:			; <UNDEFINED> instruction: 0x000128b4
   127ec:	ldrdeq	r2, [r1], -ip
   127f0:	andeq	r2, r1, r4, lsl #18
   127f4:	andeq	r2, r1, ip, lsr #18
   127f8:	andeq	r2, r1, r4, asr r9
   127fc:	andeq	r2, r1, ip, ror r9
   12800:	andeq	r2, r1, r4, lsr #19
   12804:	andeq	r2, r1, ip, asr #19
   12808:	strdeq	r2, [r1], -r4
   1280c:	andeq	r2, r1, ip, lsl sl
   12810:	andeq	r2, r1, r4, asr #20
   12814:	andeq	r2, r1, ip, ror #20
   12818:	muleq	r1, r4, sl
   1281c:			; <UNDEFINED> instruction: 0x00012abc
   12820:	andeq	r2, r1, r0, ror #21
   12824:	andeq	r2, r1, r4, lsl #22
   12828:	andeq	r2, r1, r8, lsr #22
   1282c:	andeq	r2, r1, r0, asr fp
   12830:	andeq	r2, r1, r8, ror fp
   12834:	andeq	r2, r1, r0, lsr #23
   12838:	andeq	r2, r1, r8, asr #23
   1283c:	mov	r0, r4
   12840:	mov	r1, r5
   12844:	mov	r2, r7
   12848:	bl	143f8 <table_get_int@@Base>
   1284c:	mov	r3, r0
   12850:	mov	r0, sl
   12854:	mov	r1, r5
   12858:	mov	r2, r7
   1285c:	bl	14ba8 <table_set_int@@Base>
   12860:	b	12bf0 <table_dupe@@Base+0x504>
   12864:	mov	r0, r4
   12868:	mov	r1, r5
   1286c:	mov	r2, r7
   12870:	bl	14410 <table_get_uint@@Base>
   12874:	mov	r3, r0
   12878:	mov	r0, sl
   1287c:	mov	r1, r5
   12880:	mov	r2, r7
   12884:	bl	14bd0 <table_set_uint@@Base>
   12888:	b	12bf0 <table_dupe@@Base+0x504>
   1288c:	mov	r0, r4
   12890:	mov	r1, r5
   12894:	mov	r2, r7
   12898:	bl	14428 <table_get_int8@@Base>
   1289c:	mov	r3, r0
   128a0:	mov	r0, sl
   128a4:	mov	r1, r5
   128a8:	mov	r2, r7
   128ac:	bl	14bf8 <table_set_int8@@Base>
   128b0:	b	12bf0 <table_dupe@@Base+0x504>
   128b4:	mov	r0, r4
   128b8:	mov	r1, r5
   128bc:	mov	r2, r7
   128c0:	bl	14440 <table_get_uint8@@Base>
   128c4:	mov	r3, r0
   128c8:	mov	r0, sl
   128cc:	mov	r1, r5
   128d0:	mov	r2, r7
   128d4:	bl	14c20 <table_set_uint8@@Base>
   128d8:	b	12bf0 <table_dupe@@Base+0x504>
   128dc:	mov	r0, r4
   128e0:	mov	r1, r5
   128e4:	mov	r2, r7
   128e8:	bl	14458 <table_get_int16@@Base>
   128ec:	mov	r3, r0
   128f0:	mov	r0, sl
   128f4:	mov	r1, r5
   128f8:	mov	r2, r7
   128fc:	bl	14c48 <table_set_int16@@Base>
   12900:	b	12bf0 <table_dupe@@Base+0x504>
   12904:	mov	r0, r4
   12908:	mov	r1, r5
   1290c:	mov	r2, r7
   12910:	bl	14470 <table_get_uint16@@Base>
   12914:	mov	r3, r0
   12918:	mov	r0, sl
   1291c:	mov	r1, r5
   12920:	mov	r2, r7
   12924:	bl	14c70 <table_set_uint16@@Base>
   12928:	b	12bf0 <table_dupe@@Base+0x504>
   1292c:	mov	r0, r4
   12930:	mov	r1, r5
   12934:	mov	r2, r7
   12938:	bl	14488 <table_get_int32@@Base>
   1293c:	mov	r3, r0
   12940:	mov	r0, sl
   12944:	mov	r1, r5
   12948:	mov	r2, r7
   1294c:	bl	14c98 <table_set_int32@@Base>
   12950:	b	12bf0 <table_dupe@@Base+0x504>
   12954:	mov	r0, r4
   12958:	mov	r1, r5
   1295c:	mov	r2, r7
   12960:	bl	144a0 <table_get_uint32@@Base>
   12964:	mov	r3, r0
   12968:	mov	r0, sl
   1296c:	mov	r1, r5
   12970:	mov	r2, r7
   12974:	bl	14cc0 <table_set_uint32@@Base>
   12978:	b	12bf0 <table_dupe@@Base+0x504>
   1297c:	mov	r0, r4
   12980:	mov	r1, r5
   12984:	mov	r2, r7
   12988:	bl	144b8 <table_get_int64@@Base>
   1298c:	stm	sp, {r0, r1}
   12990:	mov	r0, sl
   12994:	mov	r1, r5
   12998:	mov	r2, r7
   1299c:	bl	14ce8 <table_set_int64@@Base>
   129a0:	b	12bf0 <table_dupe@@Base+0x504>
   129a4:	mov	r0, r4
   129a8:	mov	r1, r5
   129ac:	mov	r2, r7
   129b0:	bl	144d0 <table_get_uint64@@Base>
   129b4:	stm	sp, {r0, r1}
   129b8:	mov	r0, sl
   129bc:	mov	r1, r5
   129c0:	mov	r2, r7
   129c4:	bl	14d1c <table_set_uint64@@Base>
   129c8:	b	12bf0 <table_dupe@@Base+0x504>
   129cc:	mov	r0, r4
   129d0:	mov	r1, r5
   129d4:	mov	r2, r7
   129d8:	bl	144e8 <table_get_short@@Base>
   129dc:	mov	r3, r0
   129e0:	mov	r0, sl
   129e4:	mov	r1, r5
   129e8:	mov	r2, r7
   129ec:	bl	14d50 <table_set_short@@Base>
   129f0:	b	12bf0 <table_dupe@@Base+0x504>
   129f4:	mov	r0, r4
   129f8:	mov	r1, r5
   129fc:	mov	r2, r7
   12a00:	bl	14500 <table_get_ushort@@Base>
   12a04:	mov	r3, r0
   12a08:	mov	r0, sl
   12a0c:	mov	r1, r5
   12a10:	mov	r2, r7
   12a14:	bl	14d78 <table_set_ushort@@Base>
   12a18:	b	12bf0 <table_dupe@@Base+0x504>
   12a1c:	mov	r0, r4
   12a20:	mov	r1, r5
   12a24:	mov	r2, r7
   12a28:	bl	14518 <table_get_long@@Base>
   12a2c:	mov	r3, r0
   12a30:	mov	r0, sl
   12a34:	mov	r1, r5
   12a38:	mov	r2, r7
   12a3c:	bl	14da0 <table_set_long@@Base>
   12a40:	b	12bf0 <table_dupe@@Base+0x504>
   12a44:	mov	r0, r4
   12a48:	mov	r1, r5
   12a4c:	mov	r2, r7
   12a50:	bl	14530 <table_get_ulong@@Base>
   12a54:	mov	r3, r0
   12a58:	mov	r0, sl
   12a5c:	mov	r1, r5
   12a60:	mov	r2, r7
   12a64:	bl	14dc8 <table_set_ulong@@Base>
   12a68:	b	12bf0 <table_dupe@@Base+0x504>
   12a6c:	mov	r0, r4
   12a70:	mov	r1, r5
   12a74:	mov	r2, r7
   12a78:	bl	14548 <table_get_llong@@Base>
   12a7c:	stm	sp, {r0, r1}
   12a80:	mov	r0, sl
   12a84:	mov	r1, r5
   12a88:	mov	r2, r7
   12a8c:	bl	14df0 <table_set_llong@@Base>
   12a90:	b	12bf0 <table_dupe@@Base+0x504>
   12a94:	mov	r0, r4
   12a98:	mov	r1, r5
   12a9c:	mov	r2, r7
   12aa0:	bl	14560 <table_get_ullong@@Base>
   12aa4:	stm	sp, {r0, r1}
   12aa8:	mov	r0, sl
   12aac:	mov	r1, r5
   12ab0:	mov	r2, r7
   12ab4:	bl	14e24 <table_set_ullong@@Base>
   12ab8:	b	12bf0 <table_dupe@@Base+0x504>
   12abc:	mov	r0, r4
   12ac0:	mov	r1, r5
   12ac4:	mov	r2, r7
   12ac8:	bl	14578 <table_get_float@@Base>
   12acc:	mov	r0, sl
   12ad0:	mov	r1, r5
   12ad4:	mov	r2, r7
   12ad8:	bl	14e58 <table_set_float@@Base>
   12adc:	b	12bf0 <table_dupe@@Base+0x504>
   12ae0:	mov	r0, r4
   12ae4:	mov	r1, r5
   12ae8:	mov	r2, r7
   12aec:	bl	14590 <table_get_double@@Base>
   12af0:	mov	r0, sl
   12af4:	mov	r1, r5
   12af8:	mov	r2, r7
   12afc:	bl	14e80 <table_set_double@@Base>
   12b00:	b	12bf0 <table_dupe@@Base+0x504>
   12b04:	mov	r0, r4
   12b08:	mov	r1, r5
   12b0c:	mov	r2, r7
   12b10:	bl	145a8 <table_get_ldouble@@Base>
   12b14:	mov	r0, sl
   12b18:	mov	r1, r5
   12b1c:	mov	r2, r7
   12b20:	bl	14ea8 <table_set_ldouble@@Base>
   12b24:	b	12bf0 <table_dupe@@Base+0x504>
   12b28:	mov	r0, r4
   12b2c:	mov	r1, r5
   12b30:	mov	r2, r7
   12b34:	bl	145c0 <table_get_char@@Base>
   12b38:	mov	r3, r0
   12b3c:	mov	r0, sl
   12b40:	mov	r1, r5
   12b44:	mov	r2, r7
   12b48:	bl	14ef0 <table_set_char@@Base>
   12b4c:	b	12bf0 <table_dupe@@Base+0x504>
   12b50:	mov	r0, r4
   12b54:	mov	r1, r5
   12b58:	mov	r2, r7
   12b5c:	bl	145d8 <table_get_uchar@@Base>
   12b60:	mov	r3, r0
   12b64:	mov	r0, sl
   12b68:	mov	r1, r5
   12b6c:	mov	r2, r7
   12b70:	bl	14f18 <table_set_uchar@@Base>
   12b74:	b	12bf0 <table_dupe@@Base+0x504>
   12b78:	mov	r0, r4
   12b7c:	mov	r1, r5
   12b80:	mov	r2, r7
   12b84:	bl	145f0 <table_get_string@@Base>
   12b88:	mov	r3, r0
   12b8c:	mov	r0, sl
   12b90:	mov	r1, r5
   12b94:	mov	r2, r7
   12b98:	bl	14ed0 <table_set_string@@Base>
   12b9c:	b	12bf0 <table_dupe@@Base+0x504>
   12ba0:	mov	r0, r4
   12ba4:	mov	r1, r5
   12ba8:	mov	r2, r7
   12bac:	bl	143e0 <table_get_bool@@Base>
   12bb0:	mov	r3, r0
   12bb4:	mov	r0, sl
   12bb8:	mov	r1, r5
   12bbc:	mov	r2, r7
   12bc0:	bl	14b80 <table_set_bool@@Base>
   12bc4:	b	12bf0 <table_dupe@@Base+0x504>
   12bc8:	mov	r0, r4
   12bcc:	mov	r1, r5
   12bd0:	mov	r2, r7
   12bd4:	bl	14604 <table_get_ptr@@Base>
   12bd8:	str	r0, [sp, #8]
   12bdc:	mov	r0, sl
   12be0:	mov	r1, r5
   12be4:	mov	r2, r7
   12be8:	mov	r3, r9
   12bec:	bl	14f40 <table_set_ptr@@Base>
   12bf0:	add	r7, r7, #1
   12bf4:	cmp	r6, r7
   12bf8:	bne	127c0 <table_dupe@@Base+0xd4>
   12bfc:	add	r5, r5, #1
   12c00:	cmp	r5, r8
   12c04:	bne	127ac <table_dupe@@Base+0xc0>
   12c08:	mov	r0, sl
   12c0c:	sub	sp, fp, #28
   12c10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00012c14 <table_get_major_version@@Base>:
   12c14:	mov	r0, #0
   12c18:	bx	lr

00012c1c <table_get_minor_version@@Base>:
   12c1c:	mov	r0, #0
   12c20:	bx	lr

00012c24 <table_get_patch_version@@Base>:
   12c24:	mov	r0, #0
   12c28:	bx	lr

00012c2c <table_get_version@@Base>:
   12c2c:	movw	r0, #21580	; 0x544c
   12c30:	movt	r0, #1
   12c34:	bx	lr

00012c38 <table_get_callback_length@@Base>:
   12c38:	ldr	r0, [r0, #32]
   12c3c:	bx	lr

00012c40 <table_register_callback@@Base>:
   12c40:	push	{r4, r5, r6, r7, fp, lr}
   12c44:	add	fp, sp, #16
   12c48:	mov	r5, r0
   12c4c:	ldr	r0, [r0, #32]
   12c50:	mov	r4, r3
   12c54:	mov	r6, r2
   12c58:	mov	r7, r1
   12c5c:	cmp	r0, #1
   12c60:	blt	12c94 <table_register_callback@@Base+0x54>
   12c64:	ldr	r2, [r5, #36]	; 0x24
   12c68:	mov	r1, #0
   12c6c:	ldr	r3, [r2, r1, lsl #2]
   12c70:	cmp	r3, r7
   12c74:	bne	12c88 <table_register_callback@@Base+0x48>
   12c78:	ldr	r3, [r5, #40]	; 0x28
   12c7c:	ldr	r3, [r3, r1, lsl #2]
   12c80:	cmp	r3, r6
   12c84:	beq	12d18 <table_register_callback@@Base+0xd8>
   12c88:	add	r1, r1, #1
   12c8c:	cmp	r0, r1
   12c90:	bne	12c6c <table_register_callback@@Base+0x2c>
   12c94:	ldr	r1, [r5, #48]	; 0x30
   12c98:	udiv	r2, r0, r1
   12c9c:	mls	r2, r2, r1, r0
   12ca0:	cmp	r2, #0
   12ca4:	bne	12cf0 <table_register_callback@@Base+0xb0>
   12ca8:	ldr	r2, [r5, #52]	; 0x34
   12cac:	ldr	r0, [r5, #36]	; 0x24
   12cb0:	add	r1, r2, r1
   12cb4:	str	r1, [r5, #52]	; 0x34
   12cb8:	lsl	r1, r1, #2
   12cbc:	bl	11fb8 <realloc@plt>
   12cc0:	str	r0, [r5, #36]	; 0x24
   12cc4:	ldr	r1, [r5, #52]	; 0x34
   12cc8:	ldr	r0, [r5, #40]	; 0x28
   12ccc:	lsl	r1, r1, #2
   12cd0:	bl	11fb8 <realloc@plt>
   12cd4:	str	r0, [r5, #40]	; 0x28
   12cd8:	ldr	r1, [r5, #52]	; 0x34
   12cdc:	ldr	r0, [r5, #44]	; 0x2c
   12ce0:	lsl	r1, r1, #2
   12ce4:	bl	11fb8 <realloc@plt>
   12ce8:	str	r0, [r5, #44]	; 0x2c
   12cec:	ldr	r0, [r5, #32]
   12cf0:	ldr	r1, [r5, #36]	; 0x24
   12cf4:	str	r7, [r1, r0, lsl #2]
   12cf8:	ldr	r1, [r5, #40]	; 0x28
   12cfc:	str	r6, [r1, r0, lsl #2]
   12d00:	ldr	r1, [r5, #44]	; 0x2c
   12d04:	str	r4, [r1, r0, lsl #2]
   12d08:	ldr	r0, [r5, #32]
   12d0c:	add	r0, r0, #1
   12d10:	str	r0, [r5, #32]
   12d14:	pop	{r4, r5, r6, r7, fp, pc}
   12d18:	cmp	r1, #0
   12d1c:	beq	12c94 <table_register_callback@@Base+0x54>
   12d20:	ldr	r0, [r5, #44]	; 0x2c
   12d24:	ldr	r2, [r0, r1, lsl #2]
   12d28:	orr	r2, r2, r4
   12d2c:	str	r2, [r0, r1, lsl #2]
   12d30:	pop	{r4, r5, r6, r7, fp, pc}

00012d34 <table_unregister_callback@@Base>:
   12d34:	push	{r4, r5, r6, sl, fp, lr}
   12d38:	add	fp, sp, #16
   12d3c:	ldr	r4, [r0, #32]
   12d40:	cmp	r4, #1
   12d44:	blt	12d7c <table_unregister_callback@@Base+0x48>
   12d48:	ldr	r3, [r0, #36]	; 0x24
   12d4c:	mov	r6, r0
   12d50:	mov	r0, #0
   12d54:	ldr	r5, [r3, r0, lsl #2]
   12d58:	cmp	r5, r1
   12d5c:	bne	12d70 <table_unregister_callback@@Base+0x3c>
   12d60:	ldr	r5, [r6, #40]	; 0x28
   12d64:	ldr	r5, [r5, r0, lsl #2]
   12d68:	cmp	r5, r2
   12d6c:	beq	12d80 <table_unregister_callback@@Base+0x4c>
   12d70:	add	r0, r0, #1
   12d74:	cmp	r0, r4
   12d78:	bne	12d54 <table_unregister_callback@@Base+0x20>
   12d7c:	pop	{r4, r5, r6, sl, fp, pc}
   12d80:	sub	r1, r4, #1
   12d84:	cmp	r0, r1
   12d88:	bge	12e0c <table_unregister_callback@@Base+0xd8>
   12d8c:	add	r2, r0, #1
   12d90:	ldr	r1, [r3, r2, lsl #2]
   12d94:	str	r1, [r3, r0, lsl #2]
   12d98:	ldr	r1, [r6, #40]	; 0x28
   12d9c:	ldr	r3, [r1, r2, lsl #2]
   12da0:	str	r3, [r1, r0, lsl #2]
   12da4:	ldr	r1, [r6, #44]	; 0x2c
   12da8:	ldr	r3, [r1, r2, lsl #2]
   12dac:	str	r3, [r1, r0, lsl #2]
   12db0:	ldr	r1, [r6, #32]
   12db4:	sub	r1, r1, #1
   12db8:	cmp	r2, r1
   12dbc:	bge	12e0c <table_unregister_callback@@Base+0xd8>
   12dc0:	ldr	r1, [r6, #36]	; 0x24
   12dc4:	add	r1, r1, r0, lsl #2
   12dc8:	ldr	r2, [r1, #8]
   12dcc:	str	r2, [r1, #4]
   12dd0:	ldr	r1, [r6, #40]	; 0x28
   12dd4:	add	r1, r1, r0, lsl #2
   12dd8:	ldr	r2, [r1, #8]
   12ddc:	str	r2, [r1, #4]
   12de0:	ldr	r1, [r6, #44]	; 0x2c
   12de4:	add	r1, r1, r0, lsl #2
   12de8:	ldr	r2, [r1, #8]
   12dec:	str	r2, [r1, #4]
   12df0:	add	r2, r0, #1
   12df4:	add	r0, r0, #2
   12df8:	ldr	r1, [r6, #32]
   12dfc:	sub	r1, r1, #1
   12e00:	cmp	r0, r1
   12e04:	mov	r0, r2
   12e08:	blt	12dc0 <table_unregister_callback@@Base+0x8c>
   12e0c:	str	r1, [r6, #32]
   12e10:	ldr	r2, [r6, #48]	; 0x30
   12e14:	udiv	r0, r1, r2
   12e18:	mls	r0, r0, r2, r1
   12e1c:	cmp	r0, #0
   12e20:	popne	{r4, r5, r6, sl, fp, pc}
   12e24:	ldr	r1, [r6, #52]	; 0x34
   12e28:	ldr	r0, [r6, #36]	; 0x24
   12e2c:	subs	r1, r1, r2
   12e30:	str	r1, [r6, #52]	; 0x34
   12e34:	beq	12e6c <table_unregister_callback@@Base+0x138>
   12e38:	lsl	r1, r1, #2
   12e3c:	bl	11fb8 <realloc@plt>
   12e40:	str	r0, [r6, #36]	; 0x24
   12e44:	ldr	r1, [r6, #52]	; 0x34
   12e48:	ldr	r0, [r6, #40]	; 0x28
   12e4c:	lsl	r1, r1, #2
   12e50:	bl	11fb8 <realloc@plt>
   12e54:	str	r0, [r6, #40]	; 0x28
   12e58:	ldr	r1, [r6, #52]	; 0x34
   12e5c:	ldr	r0, [r6, #44]	; 0x2c
   12e60:	lsl	r1, r1, #2
   12e64:	bl	11fb8 <realloc@plt>
   12e68:	b	12e8c <table_unregister_callback@@Base+0x158>
   12e6c:	bl	11fa0 <free@plt>
   12e70:	ldr	r0, [r6, #40]	; 0x28
   12e74:	bl	11fa0 <free@plt>
   12e78:	ldr	r0, [r6, #44]	; 0x2c
   12e7c:	bl	11fa0 <free@plt>
   12e80:	mov	r0, #0
   12e84:	str	r0, [r6, #36]	; 0x24
   12e88:	str	r0, [r6, #40]	; 0x28
   12e8c:	str	r0, [r6, #44]	; 0x2c
   12e90:	pop	{r4, r5, r6, sl, fp, pc}

00012e94 <table_notify@@Base>:
   12e94:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12e98:	add	fp, sp, #24
   12e9c:	sub	sp, sp, #8
   12ea0:	mov	r7, r0
   12ea4:	ldr	r0, [r0, #32]
   12ea8:	cmp	r0, #1
   12eac:	blt	12f08 <table_notify@@Base+0x74>
   12eb0:	mov	r4, r3
   12eb4:	mov	r8, r2
   12eb8:	mov	r9, r1
   12ebc:	mov	r5, #0
   12ec0:	ldr	r1, [r7, #44]	; 0x2c
   12ec4:	ldr	r1, [r1, r5, lsl #2]
   12ec8:	tst	r1, r4
   12ecc:	beq	12efc <table_notify@@Base+0x68>
   12ed0:	ldr	r0, [r7, #36]	; 0x24
   12ed4:	ldr	r1, [r7, #40]	; 0x28
   12ed8:	mov	r2, r8
   12edc:	mov	r3, r4
   12ee0:	ldr	r6, [r0, r5, lsl #2]
   12ee4:	ldr	r0, [r1, r5, lsl #2]
   12ee8:	mov	r1, r9
   12eec:	str	r0, [sp]
   12ef0:	mov	r0, r7
   12ef4:	blx	r6
   12ef8:	ldr	r0, [r7, #32]
   12efc:	add	r5, r5, #1
   12f00:	cmp	r5, r0
   12f04:	blt	12ec0 <table_notify@@Base+0x2c>
   12f08:	sub	sp, fp, #24
   12f0c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00012f10 <table_cell_init@@Base>:
   12f10:	push	{r4, sl, fp, lr}
   12f14:	add	fp, sp, #8
   12f18:	mov	r4, r2
   12f1c:	bl	1463c <table_get_row_ptr@@Base>
   12f20:	ldr	r0, [r0]
   12f24:	mov	r1, #0
   12f28:	str	r1, [r0, r4, lsl #2]
   12f2c:	pop	{r4, sl, fp, pc}

00012f30 <table_get_cell_ptr@@Base>:
   12f30:	push	{r4, sl, fp, lr}
   12f34:	add	fp, sp, #8
   12f38:	mov	r4, r2
   12f3c:	bl	1463c <table_get_row_ptr@@Base>
   12f40:	ldr	r0, [r0]
   12f44:	add	r0, r0, r4, lsl #2
   12f48:	pop	{r4, sl, fp, pc}

00012f4c <table_cell_destroy@@Base>:
   12f4c:	push	{r4, r5, r6, sl, fp, lr}
   12f50:	add	fp, sp, #16
   12f54:	mov	r5, r1
   12f58:	mov	r1, r2
   12f5c:	mov	r4, r2
   12f60:	mov	r6, r0
   12f64:	bl	13a64 <table_get_column_data_type@@Base>
   12f68:	cmp	r0, #23
   12f6c:	popeq	{r4, r5, r6, sl, fp, pc}
   12f70:	mov	r0, r6
   12f74:	mov	r1, r5
   12f78:	bl	1463c <table_get_row_ptr@@Base>
   12f7c:	ldr	r0, [r0]
   12f80:	ldr	r0, [r0, r4, lsl #2]
   12f84:	cmp	r0, #0
   12f88:	beq	12f94 <table_cell_destroy@@Base+0x48>
   12f8c:	pop	{r4, r5, r6, sl, fp, lr}
   12f90:	b	11fa0 <free@plt>
   12f94:	pop	{r4, r5, r6, sl, fp, pc}

00012f98 <table_cell_to_buffer@@Base>:
   12f98:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12f9c:	add	fp, sp, #24
   12fa0:	sub	sp, sp, #8
   12fa4:	mov	r7, r1
   12fa8:	mov	r1, r2
   12fac:	mov	r5, r3
   12fb0:	mov	r6, r2
   12fb4:	mov	r4, r0
   12fb8:	bl	13a64 <table_get_column_data_type@@Base>
   12fbc:	cmp	r0, #23
   12fc0:	bhi	132b0 <table_cell_to_buffer@@Base+0x318>
   12fc4:	ldr	r8, [fp, #8]
   12fc8:	add	r1, pc, #0
   12fcc:	ldr	pc, [r1, r0, lsl #2]
   12fd0:	andeq	r3, r1, r0, lsr r0
   12fd4:	andeq	r3, r1, r4, asr #32
   12fd8:	andeq	r3, r1, r8, asr r0
   12fdc:	andeq	r3, r1, ip, rrx
   12fe0:	andeq	r3, r1, r0, lsl #1
   12fe4:	muleq	r1, r4, r0
   12fe8:	andeq	r3, r1, r8, lsr #1
   12fec:	strheq	r3, [r1], -ip
   12ff0:	ldrdeq	r3, [r1], -ip
   12ff4:	strdeq	r3, [r1], -r0
   12ff8:	andeq	r3, r1, r4, lsl #2
   12ffc:	andeq	r3, r1, r4, lsr #2
   13000:	andeq	r3, r1, r4, asr #2
   13004:	andeq	r3, r1, r4, ror #2
   13008:	andeq	r3, r1, r4, lsl #3
   1300c:	andeq	r3, r1, r4, lsr #3
   13010:	andeq	r3, r1, r4, asr #3
   13014:	andeq	r3, r1, r8, ror #3
   13018:	andeq	r3, r1, r8, lsl #4
   1301c:	andeq	r3, r1, r4, lsr r2
   13020:	andeq	r3, r1, r8, asr #4
   13024:	andeq	r3, r1, r8, ror #4
   13028:	andeq	r3, r1, r8, lsl #5
   1302c:			; <UNDEFINED> instruction: 0x000132bc
   13030:	mov	r0, r4
   13034:	mov	r1, r7
   13038:	mov	r2, r6
   1303c:	bl	143f8 <table_get_int@@Base>
   13040:	b	13298 <table_cell_to_buffer@@Base+0x300>
   13044:	mov	r0, r4
   13048:	mov	r1, r7
   1304c:	mov	r2, r6
   13050:	bl	14410 <table_get_uint@@Base>
   13054:	b	130cc <table_cell_to_buffer@@Base+0x134>
   13058:	mov	r0, r4
   1305c:	mov	r1, r7
   13060:	mov	r2, r6
   13064:	bl	14428 <table_get_int8@@Base>
   13068:	b	13298 <table_cell_to_buffer@@Base+0x300>
   1306c:	mov	r0, r4
   13070:	mov	r1, r7
   13074:	mov	r2, r6
   13078:	bl	14440 <table_get_uint8@@Base>
   1307c:	b	130cc <table_cell_to_buffer@@Base+0x134>
   13080:	mov	r0, r4
   13084:	mov	r1, r7
   13088:	mov	r2, r6
   1308c:	bl	14458 <table_get_int16@@Base>
   13090:	b	13298 <table_cell_to_buffer@@Base+0x300>
   13094:	mov	r0, r4
   13098:	mov	r1, r7
   1309c:	mov	r2, r6
   130a0:	bl	14470 <table_get_uint16@@Base>
   130a4:	b	130cc <table_cell_to_buffer@@Base+0x134>
   130a8:	mov	r0, r4
   130ac:	mov	r1, r7
   130b0:	mov	r2, r6
   130b4:	bl	14488 <table_get_int32@@Base>
   130b8:	b	13298 <table_cell_to_buffer@@Base+0x300>
   130bc:	mov	r0, r4
   130c0:	mov	r1, r7
   130c4:	mov	r2, r6
   130c8:	bl	144a0 <table_get_uint32@@Base>
   130cc:	movw	r2, #21588	; 0x5454
   130d0:	mov	r3, r0
   130d4:	movt	r2, #1
   130d8:	b	132a4 <table_cell_to_buffer@@Base+0x30c>
   130dc:	mov	r0, r4
   130e0:	mov	r1, r7
   130e4:	mov	r2, r6
   130e8:	bl	144b8 <table_get_int64@@Base>
   130ec:	b	13194 <table_cell_to_buffer@@Base+0x1fc>
   130f0:	mov	r0, r4
   130f4:	mov	r1, r7
   130f8:	mov	r2, r6
   130fc:	bl	144d0 <table_get_uint64@@Base>
   13100:	b	131b4 <table_cell_to_buffer@@Base+0x21c>
   13104:	mov	r0, r4
   13108:	mov	r1, r7
   1310c:	mov	r2, r6
   13110:	bl	144e8 <table_get_short@@Base>
   13114:	movw	r2, #21601	; 0x5461
   13118:	mov	r3, r0
   1311c:	movt	r2, #1
   13120:	b	132a4 <table_cell_to_buffer@@Base+0x30c>
   13124:	mov	r0, r4
   13128:	mov	r1, r7
   1312c:	mov	r2, r6
   13130:	bl	14500 <table_get_ushort@@Base>
   13134:	movw	r2, #21605	; 0x5465
   13138:	mov	r3, r0
   1313c:	movt	r2, #1
   13140:	b	132a4 <table_cell_to_buffer@@Base+0x30c>
   13144:	mov	r0, r4
   13148:	mov	r1, r7
   1314c:	mov	r2, r6
   13150:	bl	14518 <table_get_long@@Base>
   13154:	movw	r2, #21609	; 0x5469
   13158:	mov	r3, r0
   1315c:	movt	r2, #1
   13160:	b	132a4 <table_cell_to_buffer@@Base+0x30c>
   13164:	mov	r0, r4
   13168:	mov	r1, r7
   1316c:	mov	r2, r6
   13170:	bl	14530 <table_get_ulong@@Base>
   13174:	movw	r2, #21613	; 0x546d
   13178:	mov	r3, r0
   1317c:	movt	r2, #1
   13180:	b	132a4 <table_cell_to_buffer@@Base+0x30c>
   13184:	mov	r0, r4
   13188:	mov	r1, r7
   1318c:	mov	r2, r6
   13190:	bl	14548 <table_get_llong@@Base>
   13194:	movw	r2, #21591	; 0x5457
   13198:	stm	sp, {r0, r1}
   1319c:	movt	r2, #1
   131a0:	b	13224 <table_cell_to_buffer@@Base+0x28c>
   131a4:	mov	r0, r4
   131a8:	mov	r1, r7
   131ac:	mov	r2, r6
   131b0:	bl	14560 <table_get_ullong@@Base>
   131b4:	movw	r2, #21596	; 0x545c
   131b8:	stm	sp, {r0, r1}
   131bc:	movt	r2, #1
   131c0:	b	13224 <table_cell_to_buffer@@Base+0x28c>
   131c4:	mov	r0, r4
   131c8:	mov	r1, r7
   131cc:	mov	r2, r6
   131d0:	bl	14578 <table_get_float@@Base>
   131d4:	vcvt.f64.f32	d16, s0
   131d8:	movw	r2, #21620	; 0x5474
   131dc:	movt	r2, #1
   131e0:	vstr	d16, [sp]
   131e4:	b	13224 <table_cell_to_buffer@@Base+0x28c>
   131e8:	mov	r0, r4
   131ec:	mov	r1, r7
   131f0:	mov	r2, r6
   131f4:	bl	14590 <table_get_double@@Base>
   131f8:	movw	r2, #21623	; 0x5477
   131fc:	vstr	d0, [sp]
   13200:	movt	r2, #1
   13204:	b	13224 <table_cell_to_buffer@@Base+0x28c>
   13208:	mov	r0, r4
   1320c:	mov	r1, r7
   13210:	mov	r2, r6
   13214:	bl	145a8 <table_get_ldouble@@Base>
   13218:	movw	r2, #21627	; 0x547b
   1321c:	vstr	d0, [sp]
   13220:	movt	r2, #1
   13224:	mov	r0, r5
   13228:	mov	r1, r8
   1322c:	bl	12018 <snprintf@plt>
   13230:	b	132b0 <table_cell_to_buffer@@Base+0x318>
   13234:	mov	r0, r4
   13238:	mov	r1, r7
   1323c:	mov	r2, r6
   13240:	bl	145c0 <table_get_char@@Base>
   13244:	b	13258 <table_cell_to_buffer@@Base+0x2c0>
   13248:	mov	r0, r4
   1324c:	mov	r1, r7
   13250:	mov	r2, r6
   13254:	bl	145d8 <table_get_uchar@@Base>
   13258:	movw	r2, #21631	; 0x547f
   1325c:	mov	r3, r0
   13260:	movt	r2, #1
   13264:	b	132a4 <table_cell_to_buffer@@Base+0x30c>
   13268:	mov	r0, r4
   1326c:	mov	r1, r7
   13270:	mov	r2, r6
   13274:	bl	145f0 <table_get_string@@Base>
   13278:	movw	r2, #21617	; 0x5471
   1327c:	mov	r3, r0
   13280:	movt	r2, #1
   13284:	b	132a4 <table_cell_to_buffer@@Base+0x30c>
   13288:	mov	r0, r4
   1328c:	mov	r1, r7
   13290:	mov	r2, r6
   13294:	bl	143e0 <table_get_bool@@Base>
   13298:	movw	r2, #21428	; 0x53b4
   1329c:	mov	r3, r0
   132a0:	movt	r2, #1
   132a4:	mov	r0, r5
   132a8:	mov	r1, r8
   132ac:	bl	12018 <snprintf@plt>
   132b0:	mov	r0, #0
   132b4:	sub	sp, fp, #24
   132b8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   132bc:	mov	r0, r4
   132c0:	mov	r1, r7
   132c4:	mov	r2, r6
   132c8:	bl	14604 <table_get_ptr@@Base>
   132cc:	movw	r2, #21634	; 0x5482
   132d0:	mov	r3, r0
   132d4:	movt	r2, #1
   132d8:	b	132a4 <table_cell_to_buffer@@Base+0x30c>

000132dc <table_cell_from_buffer@@Base>:
   132dc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   132e0:	add	fp, sp, #24
   132e4:	sub	sp, sp, #264	; 0x108
   132e8:	mov	r5, r1
   132ec:	mov	r1, r2
   132f0:	mov	r7, r3
   132f4:	mov	r4, r2
   132f8:	mov	r6, r0
   132fc:	bl	13a64 <table_get_column_data_type@@Base>
   13300:	cmp	r0, #23
   13304:	bhi	13934 <table_cell_from_buffer@@Base+0x658>
   13308:	add	r1, pc, #0
   1330c:	ldr	pc, [r1, r0, lsl #2]
   13310:	andeq	r3, r1, r0, ror r3
   13314:	andeq	r3, r1, ip, lsr #7
   13318:	andeq	r3, r1, r8, ror #7
   1331c:	andeq	r3, r1, r4, lsr #8
   13320:	andeq	r3, r1, r0, ror #8
   13324:	muleq	r1, ip, r4
   13328:	ldrdeq	r3, [r1], -r8
   1332c:	andeq	r3, r1, r4, lsl r5
   13330:	andeq	r3, r1, r0, asr r5
   13334:	muleq	r1, r4, r5
   13338:	ldrdeq	r3, [r1], -r8
   1333c:	andeq	r3, r1, r4, lsl r6
   13340:	andeq	r3, r1, r0, asr r6
   13344:	andeq	r3, r1, ip, lsl #13
   13348:	andeq	r3, r1, r8, asr #13
   1334c:	andeq	r3, r1, ip, lsl #14
   13350:	andeq	r3, r1, r0, asr r7
   13354:	andeq	r3, r1, ip, lsl #15
   13358:	andeq	r3, r1, r8, asr #15
   1335c:	andeq	r3, r1, r4, lsl #16
   13360:	andeq	r3, r1, r0, asr #16
   13364:	andeq	r3, r1, ip, ror r8
   13368:			; <UNDEFINED> instruction: 0x000138b8
   1336c:	strdeq	r3, [r1], -ip
   13370:	movw	r1, #21428	; 0x53b4
   13374:	add	r2, sp, #8
   13378:	mov	r0, r7
   1337c:	movt	r1, #1
   13380:	bl	12024 <__isoc99_sscanf@plt>
   13384:	mov	r1, r0
   13388:	mvn	r0, #0
   1338c:	cmp	r1, #1
   13390:	bne	13938 <table_cell_from_buffer@@Base+0x65c>
   13394:	ldr	r3, [sp, #8]
   13398:	mov	r0, r6
   1339c:	mov	r1, r5
   133a0:	mov	r2, r4
   133a4:	bl	14ba8 <table_set_int@@Base>
   133a8:	b	13934 <table_cell_from_buffer@@Base+0x658>
   133ac:	movw	r1, #21588	; 0x5454
   133b0:	add	r2, sp, #8
   133b4:	mov	r0, r7
   133b8:	movt	r1, #1
   133bc:	bl	12024 <__isoc99_sscanf@plt>
   133c0:	mov	r1, r0
   133c4:	mvn	r0, #0
   133c8:	cmp	r1, #1
   133cc:	bne	13938 <table_cell_from_buffer@@Base+0x65c>
   133d0:	ldr	r3, [sp, #8]
   133d4:	mov	r0, r6
   133d8:	mov	r1, r5
   133dc:	mov	r2, r4
   133e0:	bl	14bd0 <table_set_uint@@Base>
   133e4:	b	13934 <table_cell_from_buffer@@Base+0x658>
   133e8:	movw	r1, #21637	; 0x5485
   133ec:	add	r2, sp, #8
   133f0:	mov	r0, r7
   133f4:	movt	r1, #1
   133f8:	bl	12024 <__isoc99_sscanf@plt>
   133fc:	mov	r1, r0
   13400:	mvn	r0, #0
   13404:	cmp	r1, #1
   13408:	bne	13938 <table_cell_from_buffer@@Base+0x65c>
   1340c:	ldrsb	r3, [sp, #8]
   13410:	mov	r0, r6
   13414:	mov	r1, r5
   13418:	mov	r2, r4
   1341c:	bl	14bf8 <table_set_int8@@Base>
   13420:	b	13934 <table_cell_from_buffer@@Base+0x658>
   13424:	movw	r1, #21642	; 0x548a
   13428:	add	r2, sp, #8
   1342c:	mov	r0, r7
   13430:	movt	r1, #1
   13434:	bl	12024 <__isoc99_sscanf@plt>
   13438:	mov	r1, r0
   1343c:	mvn	r0, #0
   13440:	cmp	r1, #1
   13444:	bne	13938 <table_cell_from_buffer@@Base+0x65c>
   13448:	ldrb	r3, [sp, #8]
   1344c:	mov	r0, r6
   13450:	mov	r1, r5
   13454:	mov	r2, r4
   13458:	bl	14c20 <table_set_uint8@@Base>
   1345c:	b	13934 <table_cell_from_buffer@@Base+0x658>
   13460:	movw	r1, #21601	; 0x5461
   13464:	add	r2, sp, #8
   13468:	mov	r0, r7
   1346c:	movt	r1, #1
   13470:	bl	12024 <__isoc99_sscanf@plt>
   13474:	mov	r1, r0
   13478:	mvn	r0, #0
   1347c:	cmp	r1, #1
   13480:	bne	13938 <table_cell_from_buffer@@Base+0x65c>
   13484:	ldrsh	r3, [sp, #8]
   13488:	mov	r0, r6
   1348c:	mov	r1, r5
   13490:	mov	r2, r4
   13494:	bl	14c48 <table_set_int16@@Base>
   13498:	b	13934 <table_cell_from_buffer@@Base+0x658>
   1349c:	movw	r1, #21605	; 0x5465
   134a0:	add	r2, sp, #8
   134a4:	mov	r0, r7
   134a8:	movt	r1, #1
   134ac:	bl	12024 <__isoc99_sscanf@plt>
   134b0:	mov	r1, r0
   134b4:	mvn	r0, #0
   134b8:	cmp	r1, #1
   134bc:	bne	13938 <table_cell_from_buffer@@Base+0x65c>
   134c0:	ldrh	r3, [sp, #8]
   134c4:	mov	r0, r6
   134c8:	mov	r1, r5
   134cc:	mov	r2, r4
   134d0:	bl	14c70 <table_set_uint16@@Base>
   134d4:	b	13934 <table_cell_from_buffer@@Base+0x658>
   134d8:	movw	r1, #21428	; 0x53b4
   134dc:	add	r2, sp, #8
   134e0:	mov	r0, r7
   134e4:	movt	r1, #1
   134e8:	bl	12024 <__isoc99_sscanf@plt>
   134ec:	mov	r1, r0
   134f0:	mvn	r0, #0
   134f4:	cmp	r1, #1
   134f8:	bne	13938 <table_cell_from_buffer@@Base+0x65c>
   134fc:	ldr	r3, [sp, #8]
   13500:	mov	r0, r6
   13504:	mov	r1, r5
   13508:	mov	r2, r4
   1350c:	bl	14c98 <table_set_int32@@Base>
   13510:	b	13934 <table_cell_from_buffer@@Base+0x658>
   13514:	movw	r1, #21588	; 0x5454
   13518:	add	r2, sp, #8
   1351c:	mov	r0, r7
   13520:	movt	r1, #1
   13524:	bl	12024 <__isoc99_sscanf@plt>
   13528:	mov	r1, r0
   1352c:	mvn	r0, #0
   13530:	cmp	r1, #1
   13534:	bne	13938 <table_cell_from_buffer@@Base+0x65c>
   13538:	ldr	r3, [sp, #8]
   1353c:	mov	r0, r6
   13540:	mov	r1, r5
   13544:	mov	r2, r4
   13548:	bl	14cc0 <table_set_uint32@@Base>
   1354c:	b	13934 <table_cell_from_buffer@@Base+0x658>
   13550:	movw	r1, #21591	; 0x5457
   13554:	add	r2, sp, #8
   13558:	mov	r0, r7
   1355c:	movt	r1, #1
   13560:	bl	12024 <__isoc99_sscanf@plt>
   13564:	mov	r1, r0
   13568:	mvn	r0, #0
   1356c:	cmp	r1, #1
   13570:	bne	13938 <table_cell_from_buffer@@Base+0x65c>
   13574:	ldr	r0, [sp, #8]
   13578:	ldr	r1, [sp, #12]
   1357c:	mov	r2, r4
   13580:	stm	sp, {r0, r1}
   13584:	mov	r0, r6
   13588:	mov	r1, r5
   1358c:	bl	14ce8 <table_set_int64@@Base>
   13590:	b	13934 <table_cell_from_buffer@@Base+0x658>
   13594:	movw	r1, #21596	; 0x545c
   13598:	add	r2, sp, #8
   1359c:	mov	r0, r7
   135a0:	movt	r1, #1
   135a4:	bl	12024 <__isoc99_sscanf@plt>
   135a8:	mov	r1, r0
   135ac:	mvn	r0, #0
   135b0:	cmp	r1, #1
   135b4:	bne	13938 <table_cell_from_buffer@@Base+0x65c>
   135b8:	ldr	r0, [sp, #8]
   135bc:	ldr	r1, [sp, #12]
   135c0:	mov	r2, r4
   135c4:	stm	sp, {r0, r1}
   135c8:	mov	r0, r6
   135cc:	mov	r1, r5
   135d0:	bl	14d1c <table_set_uint64@@Base>
   135d4:	b	13934 <table_cell_from_buffer@@Base+0x658>
   135d8:	movw	r1, #21601	; 0x5461
   135dc:	add	r2, sp, #8
   135e0:	mov	r0, r7
   135e4:	movt	r1, #1
   135e8:	bl	12024 <__isoc99_sscanf@plt>
   135ec:	mov	r1, r0
   135f0:	mvn	r0, #0
   135f4:	cmp	r1, #1
   135f8:	bne	13938 <table_cell_from_buffer@@Base+0x65c>
   135fc:	ldrsh	r3, [sp, #8]
   13600:	mov	r0, r6
   13604:	mov	r1, r5
   13608:	mov	r2, r4
   1360c:	bl	14d50 <table_set_short@@Base>
   13610:	b	13934 <table_cell_from_buffer@@Base+0x658>
   13614:	movw	r1, #21605	; 0x5465
   13618:	add	r2, sp, #8
   1361c:	mov	r0, r7
   13620:	movt	r1, #1
   13624:	bl	12024 <__isoc99_sscanf@plt>
   13628:	mov	r1, r0
   1362c:	mvn	r0, #0
   13630:	cmp	r1, #1
   13634:	bne	13938 <table_cell_from_buffer@@Base+0x65c>
   13638:	ldrh	r3, [sp, #8]
   1363c:	mov	r0, r6
   13640:	mov	r1, r5
   13644:	mov	r2, r4
   13648:	bl	14d78 <table_set_ushort@@Base>
   1364c:	b	13934 <table_cell_from_buffer@@Base+0x658>
   13650:	movw	r1, #21609	; 0x5469
   13654:	add	r2, sp, #8
   13658:	mov	r0, r7
   1365c:	movt	r1, #1
   13660:	bl	12024 <__isoc99_sscanf@plt>
   13664:	mov	r1, r0
   13668:	mvn	r0, #0
   1366c:	cmp	r1, #1
   13670:	bne	13938 <table_cell_from_buffer@@Base+0x65c>
   13674:	ldr	r3, [sp, #8]
   13678:	mov	r0, r6
   1367c:	mov	r1, r5
   13680:	mov	r2, r4
   13684:	bl	14da0 <table_set_long@@Base>
   13688:	b	13934 <table_cell_from_buffer@@Base+0x658>
   1368c:	movw	r1, #21613	; 0x546d
   13690:	add	r2, sp, #8
   13694:	mov	r0, r7
   13698:	movt	r1, #1
   1369c:	bl	12024 <__isoc99_sscanf@plt>
   136a0:	mov	r1, r0
   136a4:	mvn	r0, #0
   136a8:	cmp	r1, #1
   136ac:	bne	13938 <table_cell_from_buffer@@Base+0x65c>
   136b0:	ldr	r3, [sp, #8]
   136b4:	mov	r0, r6
   136b8:	mov	r1, r5
   136bc:	mov	r2, r4
   136c0:	bl	14dc8 <table_set_ulong@@Base>
   136c4:	b	13934 <table_cell_from_buffer@@Base+0x658>
   136c8:	movw	r1, #21591	; 0x5457
   136cc:	add	r2, sp, #8
   136d0:	mov	r0, r7
   136d4:	movt	r1, #1
   136d8:	bl	12024 <__isoc99_sscanf@plt>
   136dc:	mov	r1, r0
   136e0:	mvn	r0, #0
   136e4:	cmp	r1, #1
   136e8:	bne	13938 <table_cell_from_buffer@@Base+0x65c>
   136ec:	ldr	r0, [sp, #8]
   136f0:	ldr	r1, [sp, #12]
   136f4:	mov	r2, r4
   136f8:	stm	sp, {r0, r1}
   136fc:	mov	r0, r6
   13700:	mov	r1, r5
   13704:	bl	14df0 <table_set_llong@@Base>
   13708:	b	13934 <table_cell_from_buffer@@Base+0x658>
   1370c:	movw	r1, #21596	; 0x545c
   13710:	add	r2, sp, #8
   13714:	mov	r0, r7
   13718:	movt	r1, #1
   1371c:	bl	12024 <__isoc99_sscanf@plt>
   13720:	mov	r1, r0
   13724:	mvn	r0, #0
   13728:	cmp	r1, #1
   1372c:	bne	13938 <table_cell_from_buffer@@Base+0x65c>
   13730:	ldr	r0, [sp, #8]
   13734:	ldr	r1, [sp, #12]
   13738:	mov	r2, r4
   1373c:	stm	sp, {r0, r1}
   13740:	mov	r0, r6
   13744:	mov	r1, r5
   13748:	bl	14e24 <table_set_ullong@@Base>
   1374c:	b	13934 <table_cell_from_buffer@@Base+0x658>
   13750:	movw	r1, #21620	; 0x5474
   13754:	add	r2, sp, #8
   13758:	mov	r0, r7
   1375c:	movt	r1, #1
   13760:	bl	12024 <__isoc99_sscanf@plt>
   13764:	mov	r1, r0
   13768:	mvn	r0, #0
   1376c:	cmp	r1, #1
   13770:	bne	13938 <table_cell_from_buffer@@Base+0x65c>
   13774:	vldr	s0, [sp, #8]
   13778:	mov	r0, r6
   1377c:	mov	r1, r5
   13780:	mov	r2, r4
   13784:	bl	14e58 <table_set_float@@Base>
   13788:	b	13934 <table_cell_from_buffer@@Base+0x658>
   1378c:	movw	r1, #21623	; 0x5477
   13790:	add	r2, sp, #8
   13794:	mov	r0, r7
   13798:	movt	r1, #1
   1379c:	bl	12024 <__isoc99_sscanf@plt>
   137a0:	mov	r1, r0
   137a4:	mvn	r0, #0
   137a8:	cmp	r1, #1
   137ac:	bne	13938 <table_cell_from_buffer@@Base+0x65c>
   137b0:	vldr	d0, [sp, #8]
   137b4:	mov	r0, r6
   137b8:	mov	r1, r5
   137bc:	mov	r2, r4
   137c0:	bl	14e80 <table_set_double@@Base>
   137c4:	b	13934 <table_cell_from_buffer@@Base+0x658>
   137c8:	movw	r1, #21627	; 0x547b
   137cc:	add	r2, sp, #8
   137d0:	mov	r0, r7
   137d4:	movt	r1, #1
   137d8:	bl	12024 <__isoc99_sscanf@plt>
   137dc:	mov	r1, r0
   137e0:	mvn	r0, #0
   137e4:	cmp	r1, #1
   137e8:	bne	13938 <table_cell_from_buffer@@Base+0x65c>
   137ec:	vldr	d0, [sp, #8]
   137f0:	mov	r0, r6
   137f4:	mov	r1, r5
   137f8:	mov	r2, r4
   137fc:	bl	14ea8 <table_set_ldouble@@Base>
   13800:	b	13934 <table_cell_from_buffer@@Base+0x658>
   13804:	movw	r1, #21631	; 0x547f
   13808:	add	r2, sp, #8
   1380c:	mov	r0, r7
   13810:	movt	r1, #1
   13814:	bl	12024 <__isoc99_sscanf@plt>
   13818:	mov	r1, r0
   1381c:	mvn	r0, #0
   13820:	cmp	r1, #1
   13824:	bne	13938 <table_cell_from_buffer@@Base+0x65c>
   13828:	ldrb	r3, [sp, #8]
   1382c:	mov	r0, r6
   13830:	mov	r1, r5
   13834:	mov	r2, r4
   13838:	bl	14ef0 <table_set_char@@Base>
   1383c:	b	13934 <table_cell_from_buffer@@Base+0x658>
   13840:	movw	r1, #21631	; 0x547f
   13844:	add	r2, sp, #8
   13848:	mov	r0, r7
   1384c:	movt	r1, #1
   13850:	bl	12024 <__isoc99_sscanf@plt>
   13854:	mov	r1, r0
   13858:	mvn	r0, #0
   1385c:	cmp	r1, #1
   13860:	bne	13938 <table_cell_from_buffer@@Base+0x65c>
   13864:	ldrb	r3, [sp, #8]
   13868:	mov	r0, r6
   1386c:	mov	r1, r5
   13870:	mov	r2, r4
   13874:	bl	14f18 <table_set_uchar@@Base>
   13878:	b	13934 <table_cell_from_buffer@@Base+0x658>
   1387c:	movw	r1, #21617	; 0x5471
   13880:	add	r2, sp, #8
   13884:	mov	r0, r7
   13888:	movt	r1, #1
   1388c:	bl	12024 <__isoc99_sscanf@plt>
   13890:	mov	r1, r0
   13894:	mvn	r0, #0
   13898:	cmp	r1, #1
   1389c:	bne	13938 <table_cell_from_buffer@@Base+0x65c>
   138a0:	add	r3, sp, #8
   138a4:	mov	r0, r6
   138a8:	mov	r1, r5
   138ac:	mov	r2, r4
   138b0:	bl	14ed0 <table_set_string@@Base>
   138b4:	b	13934 <table_cell_from_buffer@@Base+0x658>
   138b8:	movw	r1, #21428	; 0x53b4
   138bc:	add	r2, sp, #8
   138c0:	mov	r0, r7
   138c4:	movt	r1, #1
   138c8:	bl	12024 <__isoc99_sscanf@plt>
   138cc:	mov	r1, r0
   138d0:	mvn	r0, #0
   138d4:	cmp	r1, #1
   138d8:	bne	13938 <table_cell_from_buffer@@Base+0x65c>
   138dc:	ldr	r3, [sp, #8]
   138e0:	mov	r0, r6
   138e4:	mov	r1, r5
   138e8:	mov	r2, r4
   138ec:	cmp	r3, #0
   138f0:	movwne	r3, #1
   138f4:	bl	14b80 <table_set_bool@@Base>
   138f8:	b	13934 <table_cell_from_buffer@@Base+0x658>
   138fc:	movw	r1, #21634	; 0x5482
   13900:	add	r2, sp, #8
   13904:	mov	r0, r7
   13908:	movt	r1, #1
   1390c:	bl	12024 <__isoc99_sscanf@plt>
   13910:	mov	r1, r0
   13914:	mvn	r0, #0
   13918:	cmp	r1, #1
   1391c:	bne	13938 <table_cell_from_buffer@@Base+0x65c>
   13920:	ldr	r3, [sp, #8]
   13924:	mov	r0, r6
   13928:	mov	r1, r5
   1392c:	mov	r2, r4
   13930:	bl	14f40 <table_set_ptr@@Base>
   13934:	mov	r0, #0
   13938:	sub	sp, fp, #24
   1393c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00013940 <table_cell_nullify@@Base>:
   13940:	push	{r4, r5, fp, lr}
   13944:	add	fp, sp, #8
   13948:	mov	r4, r2
   1394c:	bl	1463c <table_get_row_ptr@@Base>
   13950:	ldr	r5, [r0]
   13954:	ldr	r0, [r5, r4, lsl #2]
   13958:	cmp	r0, #0
   1395c:	beq	1396c <table_cell_nullify@@Base+0x2c>
   13960:	bl	11fa0 <free@plt>
   13964:	mov	r0, #0
   13968:	str	r0, [r5, r4, lsl #2]
   1396c:	mov	r0, #0
   13970:	pop	{r4, r5, fp, pc}

00013974 <table_column_init@@Base>:
   13974:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13978:	add	fp, sp, #24
   1397c:	ldr	r7, [r0]
   13980:	mov	r0, r2
   13984:	mov	r4, r3
   13988:	mov	r5, r2
   1398c:	mov	r6, r1
   13990:	bl	12000 <strlen@plt>
   13994:	add	r0, r0, #1
   13998:	bl	11fdc <malloc@plt>
   1399c:	ldr	r8, [fp, #8]
   139a0:	add	r6, r6, r6, lsl #1
   139a4:	cmp	r0, #0
   139a8:	str	r0, [r7, r6, lsl #2]
   139ac:	beq	139b8 <table_column_init@@Base+0x44>
   139b0:	mov	r1, r5
   139b4:	bl	11fc4 <strcpy@plt>
   139b8:	add	r0, r7, r6, lsl #2
   139bc:	stmib	r0, {r4, r8}
   139c0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000139c4 <table_get_col_ptr@@Base>:
   139c4:	ldr	r0, [r0]
   139c8:	add	r1, r1, r1, lsl #1
   139cc:	add	r0, r0, r1, lsl #2
   139d0:	bx	lr

000139d4 <table_column_destroy@@Base>:
   139d4:	ldr	r0, [r0]
   139d8:	add	r1, r1, r1, lsl #1
   139dc:	ldr	r0, [r0, r1, lsl #2]
   139e0:	cmp	r0, #0
   139e4:	bxeq	lr
   139e8:	b	11fa0 <free@plt>

000139ec <table_get_column_length@@Base>:
   139ec:	ldr	r0, [r0, #4]
   139f0:	bx	lr

000139f4 <table_get_column@@Base>:
   139f4:	push	{r4, r5, r6, r7, fp, lr}
   139f8:	add	fp, sp, #16
   139fc:	ldr	r6, [r0, #4]
   13a00:	cmp	r6, #1
   13a04:	blt	13a40 <table_get_column@@Base+0x4c>
   13a08:	ldr	r7, [r0]
   13a0c:	mov	r5, r1
   13a10:	mov	r4, #0
   13a14:	ldr	r0, [r7]
   13a18:	mov	r1, r5
   13a1c:	bl	11f88 <strcmp@plt>
   13a20:	cmp	r0, #0
   13a24:	beq	13a44 <table_get_column@@Base+0x50>
   13a28:	add	r4, r4, #1
   13a2c:	add	r7, r7, #12
   13a30:	cmp	r6, r4
   13a34:	bne	13a14 <table_get_column@@Base+0x20>
   13a38:	mov	r4, r6
   13a3c:	b	13a44 <table_get_column@@Base+0x50>
   13a40:	mov	r4, #0
   13a44:	cmp	r4, r6
   13a48:	mvneq	r4, #0
   13a4c:	mov	r0, r4
   13a50:	pop	{r4, r5, r6, r7, fp, pc}

00013a54 <table_get_column_name@@Base>:
   13a54:	ldr	r0, [r0]
   13a58:	add	r1, r1, r1, lsl #1
   13a5c:	ldr	r0, [r0, r1, lsl #2]
   13a60:	bx	lr

00013a64 <table_get_column_data_type@@Base>:
   13a64:	ldr	r0, [r0]
   13a68:	add	r1, r1, r1, lsl #1
   13a6c:	add	r0, r0, r1, lsl #2
   13a70:	ldr	r0, [r0, #4]
   13a74:	bx	lr

00013a78 <table_add_column@@Base>:
   13a78:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13a7c:	add	fp, sp, #24
   13a80:	sub	sp, sp, #8
   13a84:	mov	r4, r0
   13a88:	mov	r8, r1
   13a8c:	ldr	r0, [r0, #4]
   13a90:	mov	r9, r2
   13a94:	ldr	r1, [r4, #8]
   13a98:	udiv	r2, r0, r1
   13a9c:	mls	r0, r2, r1, r0
   13aa0:	cmp	r0, #0
   13aa4:	bne	13b10 <table_add_column@@Base+0x98>
   13aa8:	ldr	r2, [r4, #12]
   13aac:	ldr	r0, [r4]
   13ab0:	add	r1, r2, r1
   13ab4:	str	r1, [r4, #12]
   13ab8:	add	r1, r1, r1, lsl #1
   13abc:	lsl	r1, r1, #2
   13ac0:	bl	11fb8 <realloc@plt>
   13ac4:	str	r0, [r4]
   13ac8:	mov	r0, r4
   13acc:	bl	146a4 <table_get_row_length@@Base>
   13ad0:	cmp	r0, #1
   13ad4:	blt	13b10 <table_add_column@@Base+0x98>
   13ad8:	mov	r6, r0
   13adc:	mov	r7, #0
   13ae0:	mov	r0, r4
   13ae4:	mov	r1, r7
   13ae8:	bl	1463c <table_get_row_ptr@@Base>
   13aec:	ldr	r1, [r4, #12]
   13af0:	mov	r5, r0
   13af4:	ldr	r0, [r0]
   13af8:	lsl	r1, r1, #2
   13afc:	bl	11fb8 <realloc@plt>
   13b00:	add	r7, r7, #1
   13b04:	str	r0, [r5]
   13b08:	cmp	r6, r7
   13b0c:	bne	13ae0 <table_add_column@@Base+0x68>
   13b10:	mov	r0, r4
   13b14:	bl	146a4 <table_get_row_length@@Base>
   13b18:	ldr	r6, [r4, #4]
   13b1c:	mov	r7, r0
   13b20:	mov	r0, r9
   13b24:	bl	143b0 <table_get_default_compare_function_for_data_type@@Base>
   13b28:	str	r0, [sp]
   13b2c:	mov	r0, r4
   13b30:	mov	r1, r6
   13b34:	mov	r2, r8
   13b38:	mov	r3, r9
   13b3c:	bl	13974 <table_column_init@@Base>
   13b40:	cmp	r7, #1
   13b44:	blt	13b68 <table_add_column@@Base+0xf0>
   13b48:	mov	r5, #0
   13b4c:	mov	r0, r4
   13b50:	mov	r1, r5
   13b54:	mov	r2, r6
   13b58:	bl	12f10 <table_cell_init@@Base>
   13b5c:	add	r5, r5, #1
   13b60:	cmp	r7, r5
   13b64:	bne	13b4c <table_add_column@@Base+0xd4>
   13b68:	ldr	r2, [r4, #4]
   13b6c:	mov	r0, r4
   13b70:	mvn	r1, #0
   13b74:	mov	r3, #8
   13b78:	bl	12e94 <table_notify@@Base>
   13b7c:	ldr	r0, [r4, #4]
   13b80:	add	r1, r0, #1
   13b84:	str	r1, [r4, #4]
   13b88:	sub	sp, fp, #24
   13b8c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00013b90 <table_remove_column@@Base>:
   13b90:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13b94:	add	fp, sp, #24
   13b98:	mov	r5, r0
   13b9c:	ldr	r0, [r0]
   13ba0:	add	r6, r1, r1, lsl #1
   13ba4:	mov	r9, r1
   13ba8:	ldr	r0, [r0, r6, lsl #2]
   13bac:	cmp	r0, #0
   13bb0:	beq	13bb8 <table_remove_column@@Base+0x28>
   13bb4:	bl	11fa0 <free@plt>
   13bb8:	ldr	r0, [r5, #4]
   13bbc:	sub	r4, r0, #1
   13bc0:	cmp	r4, r9
   13bc4:	ble	13bf8 <table_remove_column@@Base+0x68>
   13bc8:	mvn	r1, r9
   13bcc:	add	r0, r1, r0
   13bd0:	lsl	r1, r6, #2
   13bd4:	ldr	r2, [r5]
   13bd8:	subs	r0, r0, #1
   13bdc:	add	r2, r2, r1
   13be0:	add	r1, r1, #12
   13be4:	vldr	d16, [r2, #12]
   13be8:	ldr	r3, [r2, #20]
   13bec:	str	r3, [r2, #8]
   13bf0:	vstr	d16, [r2]
   13bf4:	bne	13bd4 <table_remove_column@@Base+0x44>
   13bf8:	mov	r0, r5
   13bfc:	bl	146a4 <table_get_row_length@@Base>
   13c00:	cmp	r0, #1
   13c04:	blt	13c60 <table_remove_column@@Base+0xd0>
   13c08:	mov	r6, r0
   13c0c:	mov	r7, #0
   13c10:	mov	r0, r5
   13c14:	mov	r1, r7
   13c18:	mov	r2, r9
   13c1c:	bl	12f4c <table_cell_destroy@@Base>
   13c20:	mov	r0, r5
   13c24:	mov	r1, r7
   13c28:	bl	1463c <table_get_row_ptr@@Base>
   13c2c:	cmp	r4, r9
   13c30:	ble	13c54 <table_remove_column@@Base+0xc4>
   13c34:	mov	r1, r9
   13c38:	ldr	r2, [r0]
   13c3c:	add	r3, r2, r1, lsl #2
   13c40:	ldr	r3, [r3, #4]
   13c44:	str	r3, [r2, r1, lsl #2]
   13c48:	add	r1, r1, #1
   13c4c:	cmp	r4, r1
   13c50:	bne	13c38 <table_remove_column@@Base+0xa8>
   13c54:	add	r7, r7, #1
   13c58:	cmp	r7, r6
   13c5c:	bne	13c10 <table_remove_column@@Base+0x80>
   13c60:	ldmib	r5, {r0, r1}
   13c64:	sub	r0, r0, #1
   13c68:	udiv	r2, r0, r1
   13c6c:	str	r0, [r5, #4]
   13c70:	mls	r0, r2, r1, r0
   13c74:	cmp	r0, #0
   13c78:	bne	13ce4 <table_remove_column@@Base+0x154>
   13c7c:	ldr	r2, [r5, #12]
   13c80:	ldr	r0, [r5]
   13c84:	sub	r1, r2, r1
   13c88:	str	r1, [r5, #12]
   13c8c:	add	r1, r1, r1, lsl #1
   13c90:	lsl	r1, r1, #2
   13c94:	bl	11fb8 <realloc@plt>
   13c98:	str	r0, [r5]
   13c9c:	mov	r0, r5
   13ca0:	bl	146a4 <table_get_row_length@@Base>
   13ca4:	cmp	r0, #1
   13ca8:	blt	13ce4 <table_remove_column@@Base+0x154>
   13cac:	mov	r8, r0
   13cb0:	mov	r7, #0
   13cb4:	mov	r0, r5
   13cb8:	mov	r1, r7
   13cbc:	bl	1463c <table_get_row_ptr@@Base>
   13cc0:	ldr	r1, [r5, #12]
   13cc4:	mov	r6, r0
   13cc8:	ldr	r0, [r0]
   13ccc:	lsl	r1, r1, #2
   13cd0:	bl	11fb8 <realloc@plt>
   13cd4:	add	r7, r7, #1
   13cd8:	str	r0, [r6]
   13cdc:	cmp	r8, r7
   13ce0:	bne	13cb4 <table_remove_column@@Base+0x124>
   13ce4:	mov	r0, r5
   13ce8:	mvn	r1, #0
   13cec:	mov	r2, r9
   13cf0:	mov	r3, #16
   13cf4:	bl	12e94 <table_notify@@Base>
   13cf8:	mov	r0, #0
   13cfc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00013d00 <table_get_column_compare_function@@Base>:
   13d00:	ldr	r0, [r0]
   13d04:	add	r1, r1, r1, lsl #1
   13d08:	add	r0, r0, r1, lsl #2
   13d0c:	ldr	r0, [r0, #8]
   13d10:	bx	lr

00013d14 <table_set_column_compare_function@@Base>:
   13d14:	ldr	r0, [r0]
   13d18:	add	r1, r1, r1, lsl #1
   13d1c:	add	r0, r0, r1, lsl #2
   13d20:	str	r2, [r0, #8]
   13d24:	bx	lr

00013d28 <table_compare_bool@@Base>:
   13d28:	cmp	r0, #0
   13d2c:	beq	13d54 <table_compare_bool@@Base+0x2c>
   13d30:	cmp	r1, #0
   13d34:	beq	13d60 <table_compare_bool@@Base+0x38>
   13d38:	ldrb	r2, [r1]
   13d3c:	ldrb	r0, [r0]
   13d40:	mov	r1, #0
   13d44:	cmp	r0, r2
   13d48:	mvncc	r1, #0
   13d4c:	movwhi	r1, #1
   13d50:	b	13d64 <table_compare_bool@@Base+0x3c>
   13d54:	cmp	r1, #0
   13d58:	mvnne	r1, #0
   13d5c:	b	13d64 <table_compare_bool@@Base+0x3c>
   13d60:	mov	r1, #1
   13d64:	mov	r0, r1
   13d68:	bx	lr

00013d6c <table_compare_int@@Base>:
   13d6c:	cmp	r0, #0
   13d70:	beq	13d98 <table_compare_int@@Base+0x2c>
   13d74:	cmp	r1, #0
   13d78:	beq	13da4 <table_compare_int@@Base+0x38>
   13d7c:	ldr	r2, [r1]
   13d80:	ldr	r0, [r0]
   13d84:	mov	r1, #0
   13d88:	cmp	r0, r2
   13d8c:	mvnlt	r1, #0
   13d90:	movwgt	r1, #1
   13d94:	b	13da8 <table_compare_int@@Base+0x3c>
   13d98:	cmp	r1, #0
   13d9c:	mvnne	r1, #0
   13da0:	b	13da8 <table_compare_int@@Base+0x3c>
   13da4:	mov	r1, #1
   13da8:	mov	r0, r1
   13dac:	bx	lr

00013db0 <table_compare_uint@@Base>:
   13db0:	cmp	r0, #0
   13db4:	beq	13ddc <table_compare_uint@@Base+0x2c>
   13db8:	cmp	r1, #0
   13dbc:	beq	13de8 <table_compare_uint@@Base+0x38>
   13dc0:	ldr	r2, [r1]
   13dc4:	ldr	r0, [r0]
   13dc8:	mov	r1, #0
   13dcc:	cmp	r0, r2
   13dd0:	mvncc	r1, #0
   13dd4:	movwhi	r1, #1
   13dd8:	b	13dec <table_compare_uint@@Base+0x3c>
   13ddc:	cmp	r1, #0
   13de0:	mvnne	r1, #0
   13de4:	b	13dec <table_compare_uint@@Base+0x3c>
   13de8:	mov	r1, #1
   13dec:	mov	r0, r1
   13df0:	bx	lr

00013df4 <table_compare_int8@@Base>:
   13df4:	cmp	r0, #0
   13df8:	beq	13e20 <table_compare_int8@@Base+0x2c>
   13dfc:	cmp	r1, #0
   13e00:	beq	13e2c <table_compare_int8@@Base+0x38>
   13e04:	ldrsb	r2, [r1]
   13e08:	ldrsb	r0, [r0]
   13e0c:	mov	r1, #0
   13e10:	cmp	r0, r2
   13e14:	mvnlt	r1, #0
   13e18:	movwgt	r1, #1
   13e1c:	b	13e30 <table_compare_int8@@Base+0x3c>
   13e20:	cmp	r1, #0
   13e24:	mvnne	r1, #0
   13e28:	b	13e30 <table_compare_int8@@Base+0x3c>
   13e2c:	mov	r1, #1
   13e30:	mov	r0, r1
   13e34:	bx	lr

00013e38 <table_compare_uint8@@Base>:
   13e38:	cmp	r0, #0
   13e3c:	beq	13e64 <table_compare_uint8@@Base+0x2c>
   13e40:	cmp	r1, #0
   13e44:	beq	13e70 <table_compare_uint8@@Base+0x38>
   13e48:	ldrb	r2, [r1]
   13e4c:	ldrb	r0, [r0]
   13e50:	mov	r1, #0
   13e54:	cmp	r0, r2
   13e58:	mvncc	r1, #0
   13e5c:	movwhi	r1, #1
   13e60:	b	13e74 <table_compare_uint8@@Base+0x3c>
   13e64:	cmp	r1, #0
   13e68:	mvnne	r1, #0
   13e6c:	b	13e74 <table_compare_uint8@@Base+0x3c>
   13e70:	mov	r1, #1
   13e74:	mov	r0, r1
   13e78:	bx	lr

00013e7c <table_compare_int16@@Base>:
   13e7c:	cmp	r0, #0
   13e80:	beq	13ea8 <table_compare_int16@@Base+0x2c>
   13e84:	cmp	r1, #0
   13e88:	beq	13eb4 <table_compare_int16@@Base+0x38>
   13e8c:	ldrsh	r2, [r1]
   13e90:	ldrsh	r0, [r0]
   13e94:	mov	r1, #0
   13e98:	cmp	r0, r2
   13e9c:	mvnlt	r1, #0
   13ea0:	movwgt	r1, #1
   13ea4:	b	13eb8 <table_compare_int16@@Base+0x3c>
   13ea8:	cmp	r1, #0
   13eac:	mvnne	r1, #0
   13eb0:	b	13eb8 <table_compare_int16@@Base+0x3c>
   13eb4:	mov	r1, #1
   13eb8:	mov	r0, r1
   13ebc:	bx	lr

00013ec0 <table_compare_uint16@@Base>:
   13ec0:	cmp	r0, #0
   13ec4:	beq	13eec <table_compare_uint16@@Base+0x2c>
   13ec8:	cmp	r1, #0
   13ecc:	beq	13ef8 <table_compare_uint16@@Base+0x38>
   13ed0:	ldrh	r2, [r1]
   13ed4:	ldrh	r0, [r0]
   13ed8:	mov	r1, #0
   13edc:	cmp	r0, r2
   13ee0:	mvncc	r1, #0
   13ee4:	movwhi	r1, #1
   13ee8:	b	13efc <table_compare_uint16@@Base+0x3c>
   13eec:	cmp	r1, #0
   13ef0:	mvnne	r1, #0
   13ef4:	b	13efc <table_compare_uint16@@Base+0x3c>
   13ef8:	mov	r1, #1
   13efc:	mov	r0, r1
   13f00:	bx	lr

00013f04 <table_compare_int32@@Base>:
   13f04:	cmp	r0, #0
   13f08:	beq	13f30 <table_compare_int32@@Base+0x2c>
   13f0c:	cmp	r1, #0
   13f10:	beq	13f3c <table_compare_int32@@Base+0x38>
   13f14:	ldr	r2, [r1]
   13f18:	ldr	r0, [r0]
   13f1c:	mov	r1, #0
   13f20:	cmp	r0, r2
   13f24:	mvnlt	r1, #0
   13f28:	movwgt	r1, #1
   13f2c:	b	13f40 <table_compare_int32@@Base+0x3c>
   13f30:	cmp	r1, #0
   13f34:	mvnne	r1, #0
   13f38:	b	13f40 <table_compare_int32@@Base+0x3c>
   13f3c:	mov	r1, #1
   13f40:	mov	r0, r1
   13f44:	bx	lr

00013f48 <table_compare_uint32@@Base>:
   13f48:	cmp	r0, #0
   13f4c:	beq	13f74 <table_compare_uint32@@Base+0x2c>
   13f50:	cmp	r1, #0
   13f54:	beq	13f80 <table_compare_uint32@@Base+0x38>
   13f58:	ldr	r2, [r1]
   13f5c:	ldr	r0, [r0]
   13f60:	mov	r1, #0
   13f64:	cmp	r0, r2
   13f68:	mvncc	r1, #0
   13f6c:	movwhi	r1, #1
   13f70:	b	13f84 <table_compare_uint32@@Base+0x3c>
   13f74:	cmp	r1, #0
   13f78:	mvnne	r1, #0
   13f7c:	b	13f84 <table_compare_uint32@@Base+0x3c>
   13f80:	mov	r1, #1
   13f84:	mov	r0, r1
   13f88:	bx	lr

00013f8c <table_compare_int64@@Base>:
   13f8c:	cmp	r0, #0
   13f90:	beq	13fd8 <table_compare_int64@@Base+0x4c>
   13f94:	cmp	r1, #0
   13f98:	beq	13fe4 <table_compare_int64@@Base+0x58>
   13f9c:	push	{r5, r7, fp, lr}
   13fa0:	add	fp, sp, #8
   13fa4:	ldm	r0, {r0, r5}
   13fa8:	ldm	r1, {r2, r7}
   13fac:	mov	r1, #0
   13fb0:	subs	r3, r0, r2
   13fb4:	sbcs	r3, r5, r7
   13fb8:	movwlt	r1, #1
   13fbc:	cmp	r1, #0
   13fc0:	mvnne	r1, #0
   13fc4:	subs	r0, r2, r0
   13fc8:	sbcs	r0, r7, r5
   13fcc:	movwlt	r1, #1
   13fd0:	pop	{r5, r7, fp, lr}
   13fd4:	b	13fe8 <table_compare_int64@@Base+0x5c>
   13fd8:	cmp	r1, #0
   13fdc:	mvnne	r1, #0
   13fe0:	b	13fe8 <table_compare_int64@@Base+0x5c>
   13fe4:	mov	r1, #1
   13fe8:	mov	r0, r1
   13fec:	bx	lr

00013ff0 <table_compare_uint64@@Base>:
   13ff0:	cmp	r0, #0
   13ff4:	beq	1403c <table_compare_uint64@@Base+0x4c>
   13ff8:	cmp	r1, #0
   13ffc:	beq	14048 <table_compare_uint64@@Base+0x58>
   14000:	push	{r5, r7, fp, lr}
   14004:	add	fp, sp, #8
   14008:	ldm	r0, {r0, r5}
   1400c:	ldm	r1, {r2, r7}
   14010:	mov	r1, #0
   14014:	subs	r3, r0, r2
   14018:	sbcs	r3, r5, r7
   1401c:	movwcc	r1, #1
   14020:	cmp	r1, #0
   14024:	mvnne	r1, #0
   14028:	subs	r0, r2, r0
   1402c:	sbcs	r0, r7, r5
   14030:	movwcc	r1, #1
   14034:	pop	{r5, r7, fp, lr}
   14038:	b	1404c <table_compare_uint64@@Base+0x5c>
   1403c:	cmp	r1, #0
   14040:	mvnne	r1, #0
   14044:	b	1404c <table_compare_uint64@@Base+0x5c>
   14048:	mov	r1, #1
   1404c:	mov	r0, r1
   14050:	bx	lr

00014054 <table_compare_short@@Base>:
   14054:	cmp	r0, #0
   14058:	beq	14080 <table_compare_short@@Base+0x2c>
   1405c:	cmp	r1, #0
   14060:	beq	1408c <table_compare_short@@Base+0x38>
   14064:	ldrsh	r2, [r1]
   14068:	ldrsh	r0, [r0]
   1406c:	mov	r1, #0
   14070:	cmp	r0, r2
   14074:	mvnlt	r1, #0
   14078:	movwgt	r1, #1
   1407c:	b	14090 <table_compare_short@@Base+0x3c>
   14080:	cmp	r1, #0
   14084:	mvnne	r1, #0
   14088:	b	14090 <table_compare_short@@Base+0x3c>
   1408c:	mov	r1, #1
   14090:	mov	r0, r1
   14094:	bx	lr

00014098 <table_compare_ushort@@Base>:
   14098:	cmp	r0, #0
   1409c:	beq	140c4 <table_compare_ushort@@Base+0x2c>
   140a0:	cmp	r1, #0
   140a4:	beq	140d0 <table_compare_ushort@@Base+0x38>
   140a8:	ldrh	r2, [r1]
   140ac:	ldrh	r0, [r0]
   140b0:	mov	r1, #0
   140b4:	cmp	r0, r2
   140b8:	mvncc	r1, #0
   140bc:	movwhi	r1, #1
   140c0:	b	140d4 <table_compare_ushort@@Base+0x3c>
   140c4:	cmp	r1, #0
   140c8:	mvnne	r1, #0
   140cc:	b	140d4 <table_compare_ushort@@Base+0x3c>
   140d0:	mov	r1, #1
   140d4:	mov	r0, r1
   140d8:	bx	lr

000140dc <table_compare_long@@Base>:
   140dc:	cmp	r0, #0
   140e0:	beq	14108 <table_compare_long@@Base+0x2c>
   140e4:	cmp	r1, #0
   140e8:	beq	14114 <table_compare_long@@Base+0x38>
   140ec:	ldr	r2, [r1]
   140f0:	ldr	r0, [r0]
   140f4:	mov	r1, #0
   140f8:	cmp	r0, r2
   140fc:	mvnlt	r1, #0
   14100:	movwgt	r1, #1
   14104:	b	14118 <table_compare_long@@Base+0x3c>
   14108:	cmp	r1, #0
   1410c:	mvnne	r1, #0
   14110:	b	14118 <table_compare_long@@Base+0x3c>
   14114:	mov	r1, #1
   14118:	mov	r0, r1
   1411c:	bx	lr

00014120 <table_compare_ulong@@Base>:
   14120:	cmp	r0, #0
   14124:	beq	1414c <table_compare_ulong@@Base+0x2c>
   14128:	cmp	r1, #0
   1412c:	beq	14158 <table_compare_ulong@@Base+0x38>
   14130:	ldr	r2, [r1]
   14134:	ldr	r0, [r0]
   14138:	mov	r1, #0
   1413c:	cmp	r0, r2
   14140:	mvncc	r1, #0
   14144:	movwhi	r1, #1
   14148:	b	1415c <table_compare_ulong@@Base+0x3c>
   1414c:	cmp	r1, #0
   14150:	mvnne	r1, #0
   14154:	b	1415c <table_compare_ulong@@Base+0x3c>
   14158:	mov	r1, #1
   1415c:	mov	r0, r1
   14160:	bx	lr

00014164 <table_compare_llong@@Base>:
   14164:	cmp	r0, #0
   14168:	beq	141b0 <table_compare_llong@@Base+0x4c>
   1416c:	cmp	r1, #0
   14170:	beq	141bc <table_compare_llong@@Base+0x58>
   14174:	push	{r5, r7, fp, lr}
   14178:	add	fp, sp, #8
   1417c:	ldm	r0, {r0, r5}
   14180:	ldm	r1, {r2, r7}
   14184:	mov	r1, #0
   14188:	subs	r3, r0, r2
   1418c:	sbcs	r3, r5, r7
   14190:	movwlt	r1, #1
   14194:	cmp	r1, #0
   14198:	mvnne	r1, #0
   1419c:	subs	r0, r2, r0
   141a0:	sbcs	r0, r7, r5
   141a4:	movwlt	r1, #1
   141a8:	pop	{r5, r7, fp, lr}
   141ac:	b	141c0 <table_compare_llong@@Base+0x5c>
   141b0:	cmp	r1, #0
   141b4:	mvnne	r1, #0
   141b8:	b	141c0 <table_compare_llong@@Base+0x5c>
   141bc:	mov	r1, #1
   141c0:	mov	r0, r1
   141c4:	bx	lr

000141c8 <table_compare_ullong@@Base>:
   141c8:	cmp	r0, #0
   141cc:	beq	141f4 <table_compare_ullong@@Base+0x2c>
   141d0:	cmp	r1, #0
   141d4:	beq	14200 <table_compare_ullong@@Base+0x38>
   141d8:	ldr	r2, [r1]
   141dc:	ldr	r0, [r0]
   141e0:	mov	r1, #0
   141e4:	cmp	r0, r2
   141e8:	mvncc	r1, #0
   141ec:	movwhi	r1, #1
   141f0:	b	14204 <table_compare_ullong@@Base+0x3c>
   141f4:	cmp	r1, #0
   141f8:	mvnne	r1, #0
   141fc:	b	14204 <table_compare_ullong@@Base+0x3c>
   14200:	mov	r1, #1
   14204:	mov	r0, r1
   14208:	bx	lr

0001420c <table_compare_float@@Base>:
   1420c:	cmp	r0, #0
   14210:	beq	1423c <table_compare_float@@Base+0x30>
   14214:	cmp	r1, #0
   14218:	beq	14248 <table_compare_float@@Base+0x3c>
   1421c:	vldr	s0, [r1]
   14220:	vldr	s2, [r0]
   14224:	mov	r1, #0
   14228:	vcmpe.f32	s2, s0
   1422c:	vmrs	APSR_nzcv, fpscr
   14230:	mvnmi	r1, #0
   14234:	movwgt	r1, #1
   14238:	b	1424c <table_compare_float@@Base+0x40>
   1423c:	cmp	r1, #0
   14240:	mvnne	r1, #0
   14244:	b	1424c <table_compare_float@@Base+0x40>
   14248:	mov	r1, #1
   1424c:	mov	r0, r1
   14250:	bx	lr

00014254 <table_compare_double@@Base>:
   14254:	cmp	r0, #0
   14258:	beq	14284 <table_compare_double@@Base+0x30>
   1425c:	cmp	r1, #0
   14260:	beq	14290 <table_compare_double@@Base+0x3c>
   14264:	vldr	d16, [r1]
   14268:	vldr	d17, [r0]
   1426c:	mov	r1, #0
   14270:	vcmpe.f64	d17, d16
   14274:	vmrs	APSR_nzcv, fpscr
   14278:	mvnmi	r1, #0
   1427c:	movwgt	r1, #1
   14280:	b	14294 <table_compare_double@@Base+0x40>
   14284:	cmp	r1, #0
   14288:	mvnne	r1, #0
   1428c:	b	14294 <table_compare_double@@Base+0x40>
   14290:	mov	r1, #1
   14294:	mov	r0, r1
   14298:	bx	lr

0001429c <table_compare_ldouble@@Base>:
   1429c:	cmp	r0, #0
   142a0:	beq	142cc <table_compare_ldouble@@Base+0x30>
   142a4:	cmp	r1, #0
   142a8:	beq	142d8 <table_compare_ldouble@@Base+0x3c>
   142ac:	vldr	d16, [r1]
   142b0:	vldr	d17, [r0]
   142b4:	mov	r1, #0
   142b8:	vcmpe.f64	d17, d16
   142bc:	vmrs	APSR_nzcv, fpscr
   142c0:	mvnmi	r1, #0
   142c4:	movwgt	r1, #1
   142c8:	b	142dc <table_compare_ldouble@@Base+0x40>
   142cc:	cmp	r1, #0
   142d0:	mvnne	r1, #0
   142d4:	b	142dc <table_compare_ldouble@@Base+0x40>
   142d8:	mov	r1, #1
   142dc:	mov	r0, r1
   142e0:	bx	lr

000142e4 <table_compare_char@@Base>:
   142e4:	cmp	r0, #0
   142e8:	beq	14310 <table_compare_char@@Base+0x2c>
   142ec:	cmp	r1, #0
   142f0:	beq	1431c <table_compare_char@@Base+0x38>
   142f4:	ldrb	r2, [r1]
   142f8:	ldrb	r0, [r0]
   142fc:	mov	r1, #0
   14300:	cmp	r0, r2
   14304:	mvncc	r1, #0
   14308:	movwhi	r1, #1
   1430c:	b	14320 <table_compare_char@@Base+0x3c>
   14310:	cmp	r1, #0
   14314:	mvnne	r1, #0
   14318:	b	14320 <table_compare_char@@Base+0x3c>
   1431c:	mov	r1, #1
   14320:	mov	r0, r1
   14324:	bx	lr

00014328 <table_compare_uchar@@Base>:
   14328:	cmp	r0, #0
   1432c:	beq	14354 <table_compare_uchar@@Base+0x2c>
   14330:	cmp	r1, #0
   14334:	beq	14360 <table_compare_uchar@@Base+0x38>
   14338:	ldrb	r2, [r1]
   1433c:	ldrb	r0, [r0]
   14340:	mov	r1, #0
   14344:	cmp	r0, r2
   14348:	mvncc	r1, #0
   1434c:	movwhi	r1, #1
   14350:	b	14364 <table_compare_uchar@@Base+0x3c>
   14354:	cmp	r1, #0
   14358:	mvnne	r1, #0
   1435c:	b	14364 <table_compare_uchar@@Base+0x3c>
   14360:	mov	r1, #1
   14364:	mov	r0, r1
   14368:	bx	lr

0001436c <table_compare_string@@Base>:
   1436c:	cmp	r0, #0
   14370:	beq	14380 <table_compare_string@@Base+0x14>
   14374:	cmp	r1, #0
   14378:	beq	1438c <table_compare_string@@Base+0x20>
   1437c:	b	11f88 <strcmp@plt>
   14380:	cmp	r1, #0
   14384:	mvnne	r1, #0
   14388:	b	14390 <table_compare_string@@Base+0x24>
   1438c:	mov	r1, #1
   14390:	mov	r0, r1
   14394:	bx	lr

00014398 <table_compare_ptr@@Base>:
   14398:	cmp	r0, r1
   1439c:	mov	r2, #0
   143a0:	mvncc	r2, #0
   143a4:	movwhi	r2, #1
   143a8:	mov	r0, r2
   143ac:	bx	lr

000143b0 <table_get_default_compare_function_for_data_type@@Base>:
   143b0:	cmp	r0, #23
   143b4:	movhi	r0, #0
   143b8:	bxhi	lr
   143bc:	movw	r1, #21648	; 0x5490
   143c0:	movt	r1, #1
   143c4:	ldr	r0, [r1, r0, lsl #2]
   143c8:	bx	lr

000143cc <table_get@@Base>:
   143cc:	push	{fp, lr}
   143d0:	mov	fp, sp
   143d4:	bl	12f30 <table_get_cell_ptr@@Base>
   143d8:	ldr	r0, [r0]
   143dc:	pop	{fp, pc}

000143e0 <table_get_bool@@Base>:
   143e0:	push	{fp, lr}
   143e4:	mov	fp, sp
   143e8:	bl	12f30 <table_get_cell_ptr@@Base>
   143ec:	ldr	r0, [r0]
   143f0:	ldrb	r0, [r0]
   143f4:	pop	{fp, pc}

000143f8 <table_get_int@@Base>:
   143f8:	push	{fp, lr}
   143fc:	mov	fp, sp
   14400:	bl	12f30 <table_get_cell_ptr@@Base>
   14404:	ldr	r0, [r0]
   14408:	ldr	r0, [r0]
   1440c:	pop	{fp, pc}

00014410 <table_get_uint@@Base>:
   14410:	push	{fp, lr}
   14414:	mov	fp, sp
   14418:	bl	12f30 <table_get_cell_ptr@@Base>
   1441c:	ldr	r0, [r0]
   14420:	ldr	r0, [r0]
   14424:	pop	{fp, pc}

00014428 <table_get_int8@@Base>:
   14428:	push	{fp, lr}
   1442c:	mov	fp, sp
   14430:	bl	12f30 <table_get_cell_ptr@@Base>
   14434:	ldr	r0, [r0]
   14438:	ldrsb	r0, [r0]
   1443c:	pop	{fp, pc}

00014440 <table_get_uint8@@Base>:
   14440:	push	{fp, lr}
   14444:	mov	fp, sp
   14448:	bl	12f30 <table_get_cell_ptr@@Base>
   1444c:	ldr	r0, [r0]
   14450:	ldrb	r0, [r0]
   14454:	pop	{fp, pc}

00014458 <table_get_int16@@Base>:
   14458:	push	{fp, lr}
   1445c:	mov	fp, sp
   14460:	bl	12f30 <table_get_cell_ptr@@Base>
   14464:	ldr	r0, [r0]
   14468:	ldrsh	r0, [r0]
   1446c:	pop	{fp, pc}

00014470 <table_get_uint16@@Base>:
   14470:	push	{fp, lr}
   14474:	mov	fp, sp
   14478:	bl	12f30 <table_get_cell_ptr@@Base>
   1447c:	ldr	r0, [r0]
   14480:	ldrh	r0, [r0]
   14484:	pop	{fp, pc}

00014488 <table_get_int32@@Base>:
   14488:	push	{fp, lr}
   1448c:	mov	fp, sp
   14490:	bl	12f30 <table_get_cell_ptr@@Base>
   14494:	ldr	r0, [r0]
   14498:	ldr	r0, [r0]
   1449c:	pop	{fp, pc}

000144a0 <table_get_uint32@@Base>:
   144a0:	push	{fp, lr}
   144a4:	mov	fp, sp
   144a8:	bl	12f30 <table_get_cell_ptr@@Base>
   144ac:	ldr	r0, [r0]
   144b0:	ldr	r0, [r0]
   144b4:	pop	{fp, pc}

000144b8 <table_get_int64@@Base>:
   144b8:	push	{fp, lr}
   144bc:	mov	fp, sp
   144c0:	bl	12f30 <table_get_cell_ptr@@Base>
   144c4:	ldr	r0, [r0]
   144c8:	ldrd	r0, [r0]
   144cc:	pop	{fp, pc}

000144d0 <table_get_uint64@@Base>:
   144d0:	push	{fp, lr}
   144d4:	mov	fp, sp
   144d8:	bl	12f30 <table_get_cell_ptr@@Base>
   144dc:	ldr	r0, [r0]
   144e0:	ldrd	r0, [r0]
   144e4:	pop	{fp, pc}

000144e8 <table_get_short@@Base>:
   144e8:	push	{fp, lr}
   144ec:	mov	fp, sp
   144f0:	bl	12f30 <table_get_cell_ptr@@Base>
   144f4:	ldr	r0, [r0]
   144f8:	ldrsh	r0, [r0]
   144fc:	pop	{fp, pc}

00014500 <table_get_ushort@@Base>:
   14500:	push	{fp, lr}
   14504:	mov	fp, sp
   14508:	bl	12f30 <table_get_cell_ptr@@Base>
   1450c:	ldr	r0, [r0]
   14510:	ldrh	r0, [r0]
   14514:	pop	{fp, pc}

00014518 <table_get_long@@Base>:
   14518:	push	{fp, lr}
   1451c:	mov	fp, sp
   14520:	bl	12f30 <table_get_cell_ptr@@Base>
   14524:	ldr	r0, [r0]
   14528:	ldr	r0, [r0]
   1452c:	pop	{fp, pc}

00014530 <table_get_ulong@@Base>:
   14530:	push	{fp, lr}
   14534:	mov	fp, sp
   14538:	bl	12f30 <table_get_cell_ptr@@Base>
   1453c:	ldr	r0, [r0]
   14540:	ldr	r0, [r0]
   14544:	pop	{fp, pc}

00014548 <table_get_llong@@Base>:
   14548:	push	{fp, lr}
   1454c:	mov	fp, sp
   14550:	bl	12f30 <table_get_cell_ptr@@Base>
   14554:	ldr	r0, [r0]
   14558:	ldrd	r0, [r0]
   1455c:	pop	{fp, pc}

00014560 <table_get_ullong@@Base>:
   14560:	push	{fp, lr}
   14564:	mov	fp, sp
   14568:	bl	12f30 <table_get_cell_ptr@@Base>
   1456c:	ldr	r0, [r0]
   14570:	ldrd	r0, [r0]
   14574:	pop	{fp, pc}

00014578 <table_get_float@@Base>:
   14578:	push	{fp, lr}
   1457c:	mov	fp, sp
   14580:	bl	12f30 <table_get_cell_ptr@@Base>
   14584:	ldr	r0, [r0]
   14588:	vldr	s0, [r0]
   1458c:	pop	{fp, pc}

00014590 <table_get_double@@Base>:
   14590:	push	{fp, lr}
   14594:	mov	fp, sp
   14598:	bl	12f30 <table_get_cell_ptr@@Base>
   1459c:	ldr	r0, [r0]
   145a0:	vldr	d0, [r0]
   145a4:	pop	{fp, pc}

000145a8 <table_get_ldouble@@Base>:
   145a8:	push	{fp, lr}
   145ac:	mov	fp, sp
   145b0:	bl	12f30 <table_get_cell_ptr@@Base>
   145b4:	ldr	r0, [r0]
   145b8:	vldr	d0, [r0]
   145bc:	pop	{fp, pc}

000145c0 <table_get_char@@Base>:
   145c0:	push	{fp, lr}
   145c4:	mov	fp, sp
   145c8:	bl	12f30 <table_get_cell_ptr@@Base>
   145cc:	ldr	r0, [r0]
   145d0:	ldrb	r0, [r0]
   145d4:	pop	{fp, pc}

000145d8 <table_get_uchar@@Base>:
   145d8:	push	{fp, lr}
   145dc:	mov	fp, sp
   145e0:	bl	12f30 <table_get_cell_ptr@@Base>
   145e4:	ldr	r0, [r0]
   145e8:	ldrb	r0, [r0]
   145ec:	pop	{fp, pc}

000145f0 <table_get_string@@Base>:
   145f0:	push	{fp, lr}
   145f4:	mov	fp, sp
   145f8:	bl	12f30 <table_get_cell_ptr@@Base>
   145fc:	ldr	r0, [r0]
   14600:	pop	{fp, pc}

00014604 <table_get_ptr@@Base>:
   14604:	push	{fp, lr}
   14608:	mov	fp, sp
   1460c:	bl	12f30 <table_get_cell_ptr@@Base>
   14610:	ldr	r0, [r0]
   14614:	pop	{fp, pc}

00014618 <table_row_init@@Base>:
   14618:	push	{r4, r5, fp, lr}
   1461c:	add	fp, sp, #8
   14620:	mov	r4, r1
   14624:	ldr	r1, [r0, #12]
   14628:	ldr	r5, [r0, #16]
   1462c:	lsl	r0, r1, #2
   14630:	bl	11fdc <malloc@plt>
   14634:	str	r0, [r5, r4, lsl #2]
   14638:	pop	{r4, r5, fp, pc}

0001463c <table_get_row_ptr@@Base>:
   1463c:	ldr	r0, [r0, #16]
   14640:	add	r0, r0, r1, lsl #2
   14644:	bx	lr

00014648 <table_row_destroy@@Base>:
   14648:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1464c:	add	fp, sp, #24
   14650:	mov	r4, r1
   14654:	mov	r5, r0
   14658:	bl	139ec <table_get_column_length@@Base>
   1465c:	ldr	r8, [r5, #16]
   14660:	cmp	r0, #1
   14664:	blt	1468c <table_row_destroy@@Base+0x44>
   14668:	mov	r6, r0
   1466c:	mov	r7, #0
   14670:	mov	r0, r5
   14674:	mov	r1, r4
   14678:	mov	r2, r7
   1467c:	bl	12f4c <table_cell_destroy@@Base>
   14680:	add	r7, r7, #1
   14684:	cmp	r6, r7
   14688:	bne	14670 <table_row_destroy@@Base+0x28>
   1468c:	ldr	r0, [r8, r4, lsl #2]
   14690:	cmp	r0, #0
   14694:	beq	146a0 <table_row_destroy@@Base+0x58>
   14698:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   1469c:	b	11fa0 <free@plt>
   146a0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000146a4 <table_get_row_length@@Base>:
   146a4:	ldr	r0, [r0, #20]
   146a8:	bx	lr

000146ac <table_add_row@@Base>:
   146ac:	push	{r4, r5, r6, r7, fp, lr}
   146b0:	add	fp, sp, #16
   146b4:	ldr	r5, [r0, #20]
   146b8:	ldr	r1, [r0, #24]
   146bc:	mov	r4, r0
   146c0:	udiv	r0, r5, r1
   146c4:	mls	r0, r0, r1, r5
   146c8:	cmp	r0, #0
   146cc:	bne	146f0 <table_add_row@@Base+0x44>
   146d0:	ldr	r2, [r4, #28]
   146d4:	ldr	r0, [r4, #16]
   146d8:	add	r1, r2, r1
   146dc:	str	r1, [r4, #28]
   146e0:	lsl	r1, r1, #2
   146e4:	bl	11fb8 <realloc@plt>
   146e8:	str	r0, [r4, #16]
   146ec:	ldr	r5, [r4, #20]
   146f0:	mov	r0, r4
   146f4:	bl	139ec <table_get_column_length@@Base>
   146f8:	mov	r6, r0
   146fc:	ldr	r0, [r4, #12]
   14700:	ldr	r7, [r4, #16]
   14704:	lsl	r0, r0, #2
   14708:	bl	11fdc <malloc@plt>
   1470c:	cmp	r6, #1
   14710:	str	r0, [r7, r5, lsl #2]
   14714:	blt	14738 <table_add_row@@Base+0x8c>
   14718:	mov	r7, #0
   1471c:	mov	r0, r4
   14720:	mov	r1, r5
   14724:	mov	r2, r7
   14728:	bl	12f10 <table_cell_init@@Base>
   1472c:	add	r7, r7, #1
   14730:	cmp	r6, r7
   14734:	bne	1471c <table_add_row@@Base+0x70>
   14738:	ldr	r1, [r4, #20]
   1473c:	mov	r0, r4
   14740:	mvn	r2, #0
   14744:	mov	r3, #2
   14748:	bl	12e94 <table_notify@@Base>
   1474c:	ldr	r0, [r4, #20]
   14750:	add	r1, r0, #1
   14754:	str	r1, [r4, #20]
   14758:	pop	{r4, r5, r6, r7, fp, pc}

0001475c <table_remove_row@@Base>:
   1475c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14760:	add	fp, sp, #24
   14764:	ldr	r8, [r0, #20]
   14768:	mov	r4, r1
   1476c:	mov	r5, r0
   14770:	bl	139ec <table_get_column_length@@Base>
   14774:	cmp	r0, #1
   14778:	blt	147c4 <table_remove_row@@Base+0x68>
   1477c:	mov	r6, r0
   14780:	mov	r7, #0
   14784:	mov	r0, r5
   14788:	mov	r1, r7
   1478c:	bl	13a64 <table_get_column_data_type@@Base>
   14790:	cmp	r0, #23
   14794:	beq	147b8 <table_remove_row@@Base+0x5c>
   14798:	mov	r0, r5
   1479c:	mov	r1, r4
   147a0:	mov	r2, r7
   147a4:	bl	12f30 <table_get_cell_ptr@@Base>
   147a8:	ldr	r0, [r0]
   147ac:	cmp	r0, #0
   147b0:	beq	147b8 <table_remove_row@@Base+0x5c>
   147b4:	bl	11fa0 <free@plt>
   147b8:	add	r7, r7, #1
   147bc:	cmp	r6, r7
   147c0:	bne	14784 <table_remove_row@@Base+0x28>
   147c4:	ldr	r0, [r5, #16]
   147c8:	ldr	r0, [r0, r4, lsl #2]
   147cc:	cmp	r0, #0
   147d0:	beq	147d8 <table_remove_row@@Base+0x7c>
   147d4:	bl	11fa0 <free@plt>
   147d8:	sub	r0, r8, #1
   147dc:	cmp	r0, r4
   147e0:	ble	14804 <table_remove_row@@Base+0xa8>
   147e4:	mov	r1, r4
   147e8:	ldr	r2, [r5, #16]
   147ec:	add	r3, r2, r1, lsl #2
   147f0:	ldr	r3, [r3, #4]
   147f4:	str	r3, [r2, r1, lsl #2]
   147f8:	add	r1, r1, #1
   147fc:	cmp	r0, r1
   14800:	bne	147e8 <table_remove_row@@Base+0x8c>
   14804:	ldr	r0, [r5, #20]
   14808:	ldr	r1, [r5, #24]
   1480c:	sub	r0, r0, #1
   14810:	udiv	r2, r0, r1
   14814:	str	r0, [r5, #20]
   14818:	mls	r0, r2, r1, r0
   1481c:	cmp	r0, #0
   14820:	bne	14840 <table_remove_row@@Base+0xe4>
   14824:	ldr	r2, [r5, #28]
   14828:	ldr	r0, [r5, #16]
   1482c:	sub	r1, r2, r1
   14830:	str	r1, [r5, #28]
   14834:	lsl	r1, r1, #2
   14838:	bl	11fb8 <realloc@plt>
   1483c:	str	r0, [r5, #16]
   14840:	mov	r0, r5
   14844:	mov	r1, r4
   14848:	mvn	r2, #0
   1484c:	mov	r3, #4
   14850:	bl	12e94 <table_notify@@Base>
   14854:	mov	r0, #0
   14858:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001485c <table_set_row_ptr@@Base>:
   1485c:	ldr	r2, [r2]
   14860:	ldr	r0, [r0, #16]
   14864:	str	r2, [r0, r1, lsl #2]
   14868:	bx	lr

0001486c <table_set@@Base>:
   1486c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14870:	add	fp, sp, #24
   14874:	mov	r8, r3
   14878:	mov	r4, r2
   1487c:	mov	r9, r1
   14880:	mov	r6, r0
   14884:	bl	12f30 <table_get_cell_ptr@@Base>
   14888:	mov	r5, r0
   1488c:	mov	r0, r6
   14890:	mov	r1, r4
   14894:	bl	139c4 <table_get_col_ptr@@Base>
   14898:	ldr	r1, [fp, #8]
   1489c:	mvn	r7, #0
   148a0:	cmp	r1, #23
   148a4:	bhi	14b64 <table_set@@Base+0x2f8>
   148a8:	add	r2, pc, #0
   148ac:	ldr	pc, [r2, r1, lsl #2]
   148b0:	andeq	r4, r1, r0, lsl r9
   148b4:	andeq	r4, r1, r0, lsr #18
   148b8:	andeq	r4, r1, r0, lsr r9
   148bc:	andeq	r4, r1, r0, asr #18
   148c0:	andeq	r4, r1, r0, asr r9
   148c4:	andeq	r4, r1, r0, ror #18
   148c8:	andeq	r4, r1, r0, ror r9
   148cc:	andeq	r4, r1, r0, lsl #19
   148d0:	muleq	r1, r0, r9
   148d4:	andeq	r4, r1, r0, lsr #19
   148d8:			; <UNDEFINED> instruction: 0x000149b0
   148dc:	andeq	r4, r1, r0, asr #19
   148e0:	strdeq	r4, [r1], -r8
   148e4:	andeq	r4, r1, r8, lsl #20
   148e8:	andeq	r4, r1, r8, lsl sl
   148ec:	andeq	r4, r1, r8, lsr #20
   148f0:	andeq	r4, r1, r8, lsr sl
   148f4:	andeq	r4, r1, ip, ror #20
   148f8:	andeq	r4, r1, ip, ror sl
   148fc:			; <UNDEFINED> instruction: 0x00014abc
   14900:	andeq	r4, r1, ip, asr #21
   14904:	ldrdeq	r4, [r1], -ip
   14908:	andeq	r4, r1, r8, lsl fp
   1490c:	andeq	r4, r1, ip, ror #22
   14910:	ldr	r0, [r0, #4]
   14914:	cmp	r0, #0
   14918:	bne	14b64 <table_set@@Base+0x2f8>
   1491c:	b	14a44 <table_set@@Base+0x1d8>
   14920:	ldr	r0, [r0, #4]
   14924:	cmp	r0, #1
   14928:	beq	14a44 <table_set@@Base+0x1d8>
   1492c:	b	14b64 <table_set@@Base+0x2f8>
   14930:	ldr	r0, [r0, #4]
   14934:	cmp	r0, #2
   14938:	beq	14b24 <table_set@@Base+0x2b8>
   1493c:	b	14b64 <table_set@@Base+0x2f8>
   14940:	ldr	r0, [r0, #4]
   14944:	cmp	r0, #3
   14948:	beq	14b24 <table_set@@Base+0x2b8>
   1494c:	b	14b64 <table_set@@Base+0x2f8>
   14950:	ldr	r0, [r0, #4]
   14954:	cmp	r0, #4
   14958:	beq	149cc <table_set@@Base+0x160>
   1495c:	b	14b64 <table_set@@Base+0x2f8>
   14960:	ldr	r0, [r0, #4]
   14964:	cmp	r0, #5
   14968:	beq	149cc <table_set@@Base+0x160>
   1496c:	b	14b64 <table_set@@Base+0x2f8>
   14970:	ldr	r0, [r0, #4]
   14974:	cmp	r0, #6
   14978:	beq	14a44 <table_set@@Base+0x1d8>
   1497c:	b	14b64 <table_set@@Base+0x2f8>
   14980:	ldr	r0, [r0, #4]
   14984:	cmp	r0, #7
   14988:	beq	14a44 <table_set@@Base+0x1d8>
   1498c:	b	14b64 <table_set@@Base+0x2f8>
   14990:	ldr	r0, [r0, #4]
   14994:	cmp	r0, #8
   14998:	beq	14a88 <table_set@@Base+0x21c>
   1499c:	b	14b64 <table_set@@Base+0x2f8>
   149a0:	ldr	r0, [r0, #4]
   149a4:	cmp	r0, #9
   149a8:	beq	14a88 <table_set@@Base+0x21c>
   149ac:	b	14b64 <table_set@@Base+0x2f8>
   149b0:	ldr	r0, [r0, #4]
   149b4:	cmp	r0, #10
   149b8:	beq	149cc <table_set@@Base+0x160>
   149bc:	b	14b64 <table_set@@Base+0x2f8>
   149c0:	ldr	r0, [r0, #4]
   149c4:	cmp	r0, #11
   149c8:	bne	14b64 <table_set@@Base+0x2f8>
   149cc:	ldr	r0, [r5]
   149d0:	cmp	r0, #0
   149d4:	bne	149ec <table_set@@Base+0x180>
   149d8:	mov	r0, #2
   149dc:	bl	11fdc <malloc@plt>
   149e0:	cmp	r0, #0
   149e4:	str	r0, [r5]
   149e8:	beq	14b64 <table_set@@Base+0x2f8>
   149ec:	ldrh	r1, [r8]
   149f0:	strh	r1, [r0]
   149f4:	b	14b4c <table_set@@Base+0x2e0>
   149f8:	ldr	r0, [r0, #4]
   149fc:	cmp	r0, #12
   14a00:	beq	14a44 <table_set@@Base+0x1d8>
   14a04:	b	14b64 <table_set@@Base+0x2f8>
   14a08:	ldr	r0, [r0, #4]
   14a0c:	cmp	r0, #13
   14a10:	beq	14a44 <table_set@@Base+0x1d8>
   14a14:	b	14b64 <table_set@@Base+0x2f8>
   14a18:	ldr	r0, [r0, #4]
   14a1c:	cmp	r0, #14
   14a20:	beq	14a88 <table_set@@Base+0x21c>
   14a24:	b	14b64 <table_set@@Base+0x2f8>
   14a28:	ldr	r0, [r0, #4]
   14a2c:	cmp	r0, #15
   14a30:	beq	14a88 <table_set@@Base+0x21c>
   14a34:	b	14b64 <table_set@@Base+0x2f8>
   14a38:	ldr	r0, [r0, #4]
   14a3c:	cmp	r0, #16
   14a40:	bne	14b64 <table_set@@Base+0x2f8>
   14a44:	ldr	r0, [r5]
   14a48:	cmp	r0, #0
   14a4c:	bne	14a64 <table_set@@Base+0x1f8>
   14a50:	mov	r0, #4
   14a54:	bl	11fdc <malloc@plt>
   14a58:	cmp	r0, #0
   14a5c:	str	r0, [r5]
   14a60:	beq	14b64 <table_set@@Base+0x2f8>
   14a64:	ldr	r1, [r8]
   14a68:	b	14ab4 <table_set@@Base+0x248>
   14a6c:	ldr	r0, [r0, #4]
   14a70:	cmp	r0, #17
   14a74:	beq	14a88 <table_set@@Base+0x21c>
   14a78:	b	14b64 <table_set@@Base+0x2f8>
   14a7c:	ldr	r0, [r0, #4]
   14a80:	cmp	r0, #18
   14a84:	bne	14b64 <table_set@@Base+0x2f8>
   14a88:	ldr	r0, [r5]
   14a8c:	cmp	r0, #0
   14a90:	bne	14aa8 <table_set@@Base+0x23c>
   14a94:	mov	r0, #8
   14a98:	bl	11fdc <malloc@plt>
   14a9c:	cmp	r0, #0
   14aa0:	str	r0, [r5]
   14aa4:	beq	14b64 <table_set@@Base+0x2f8>
   14aa8:	ldr	r1, [r8]
   14aac:	ldr	r2, [r8, #4]
   14ab0:	str	r2, [r0, #4]
   14ab4:	str	r1, [r0]
   14ab8:	b	14b4c <table_set@@Base+0x2e0>
   14abc:	ldr	r0, [r0, #4]
   14ac0:	cmp	r0, #19
   14ac4:	beq	14b24 <table_set@@Base+0x2b8>
   14ac8:	b	14b64 <table_set@@Base+0x2f8>
   14acc:	ldr	r0, [r0, #4]
   14ad0:	cmp	r0, #20
   14ad4:	beq	14b24 <table_set@@Base+0x2b8>
   14ad8:	b	14b64 <table_set@@Base+0x2f8>
   14adc:	ldr	r0, [r0, #4]
   14ae0:	cmp	r0, #21
   14ae4:	bne	14b64 <table_set@@Base+0x2f8>
   14ae8:	mov	r0, r8
   14aec:	bl	12000 <strlen@plt>
   14af0:	ldr	r2, [r5]
   14af4:	add	r1, r0, #1
   14af8:	mov	r0, r2
   14afc:	bl	11fb8 <realloc@plt>
   14b00:	cmp	r0, #0
   14b04:	str	r0, [r5]
   14b08:	beq	14b64 <table_set@@Base+0x2f8>
   14b0c:	mov	r1, r8
   14b10:	bl	11fc4 <strcpy@plt>
   14b14:	b	14b4c <table_set@@Base+0x2e0>
   14b18:	ldr	r0, [r0, #4]
   14b1c:	cmp	r0, #22
   14b20:	bne	14b64 <table_set@@Base+0x2f8>
   14b24:	ldr	r0, [r5]
   14b28:	cmp	r0, #0
   14b2c:	bne	14b44 <table_set@@Base+0x2d8>
   14b30:	mov	r0, #1
   14b34:	bl	11fdc <malloc@plt>
   14b38:	cmp	r0, #0
   14b3c:	str	r0, [r5]
   14b40:	beq	14b64 <table_set@@Base+0x2f8>
   14b44:	ldrb	r1, [r8]
   14b48:	strb	r1, [r0]
   14b4c:	mov	r0, r6
   14b50:	mov	r1, r9
   14b54:	mov	r2, r4
   14b58:	mov	r3, #1
   14b5c:	bl	12e94 <table_notify@@Base>
   14b60:	mov	r7, #0
   14b64:	mov	r0, r7
   14b68:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   14b6c:	ldr	r0, [r0, #4]
   14b70:	cmp	r0, #23
   14b74:	bne	14b64 <table_set@@Base+0x2f8>
   14b78:	str	r8, [r5]
   14b7c:	b	14b4c <table_set@@Base+0x2e0>

00014b80 <table_set_bool@@Base>:
   14b80:	push	{fp, lr}
   14b84:	mov	fp, sp
   14b88:	sub	sp, sp, #8
   14b8c:	strb	r3, [fp, #-1]
   14b90:	mov	r3, #22
   14b94:	str	r3, [sp]
   14b98:	sub	r3, fp, #1
   14b9c:	bl	1486c <table_set@@Base>
   14ba0:	mov	sp, fp
   14ba4:	pop	{fp, pc}

00014ba8 <table_set_int@@Base>:
   14ba8:	push	{fp, lr}
   14bac:	mov	fp, sp
   14bb0:	sub	sp, sp, #8
   14bb4:	str	r3, [sp, #4]
   14bb8:	mov	r3, #0
   14bbc:	str	r3, [sp]
   14bc0:	add	r3, sp, #4
   14bc4:	bl	1486c <table_set@@Base>
   14bc8:	mov	sp, fp
   14bcc:	pop	{fp, pc}

00014bd0 <table_set_uint@@Base>:
   14bd0:	push	{fp, lr}
   14bd4:	mov	fp, sp
   14bd8:	sub	sp, sp, #8
   14bdc:	str	r3, [sp, #4]
   14be0:	mov	r3, #1
   14be4:	str	r3, [sp]
   14be8:	add	r3, sp, #4
   14bec:	bl	1486c <table_set@@Base>
   14bf0:	mov	sp, fp
   14bf4:	pop	{fp, pc}

00014bf8 <table_set_int8@@Base>:
   14bf8:	push	{fp, lr}
   14bfc:	mov	fp, sp
   14c00:	sub	sp, sp, #8
   14c04:	strb	r3, [fp, #-1]
   14c08:	mov	r3, #2
   14c0c:	str	r3, [sp]
   14c10:	sub	r3, fp, #1
   14c14:	bl	1486c <table_set@@Base>
   14c18:	mov	sp, fp
   14c1c:	pop	{fp, pc}

00014c20 <table_set_uint8@@Base>:
   14c20:	push	{fp, lr}
   14c24:	mov	fp, sp
   14c28:	sub	sp, sp, #8
   14c2c:	strb	r3, [fp, #-1]
   14c30:	mov	r3, #3
   14c34:	str	r3, [sp]
   14c38:	sub	r3, fp, #1
   14c3c:	bl	1486c <table_set@@Base>
   14c40:	mov	sp, fp
   14c44:	pop	{fp, pc}

00014c48 <table_set_int16@@Base>:
   14c48:	push	{fp, lr}
   14c4c:	mov	fp, sp
   14c50:	sub	sp, sp, #8
   14c54:	strh	r3, [fp, #-2]
   14c58:	mov	r3, #4
   14c5c:	str	r3, [sp]
   14c60:	sub	r3, fp, #2
   14c64:	bl	1486c <table_set@@Base>
   14c68:	mov	sp, fp
   14c6c:	pop	{fp, pc}

00014c70 <table_set_uint16@@Base>:
   14c70:	push	{fp, lr}
   14c74:	mov	fp, sp
   14c78:	sub	sp, sp, #8
   14c7c:	strh	r3, [fp, #-2]
   14c80:	mov	r3, #5
   14c84:	str	r3, [sp]
   14c88:	sub	r3, fp, #2
   14c8c:	bl	1486c <table_set@@Base>
   14c90:	mov	sp, fp
   14c94:	pop	{fp, pc}

00014c98 <table_set_int32@@Base>:
   14c98:	push	{fp, lr}
   14c9c:	mov	fp, sp
   14ca0:	sub	sp, sp, #8
   14ca4:	str	r3, [sp, #4]
   14ca8:	mov	r3, #6
   14cac:	str	r3, [sp]
   14cb0:	add	r3, sp, #4
   14cb4:	bl	1486c <table_set@@Base>
   14cb8:	mov	sp, fp
   14cbc:	pop	{fp, pc}

00014cc0 <table_set_uint32@@Base>:
   14cc0:	push	{fp, lr}
   14cc4:	mov	fp, sp
   14cc8:	sub	sp, sp, #8
   14ccc:	str	r3, [sp, #4]
   14cd0:	mov	r3, #7
   14cd4:	str	r3, [sp]
   14cd8:	add	r3, sp, #4
   14cdc:	bl	1486c <table_set@@Base>
   14ce0:	mov	sp, fp
   14ce4:	pop	{fp, pc}

00014ce8 <table_set_int64@@Base>:
   14ce8:	push	{fp, lr}
   14cec:	mov	fp, sp
   14cf0:	sub	sp, sp, #16
   14cf4:	ldr	r3, [fp, #12]
   14cf8:	str	r3, [sp, #12]
   14cfc:	ldr	r3, [fp, #8]
   14d00:	str	r3, [sp, #8]
   14d04:	mov	r3, #8
   14d08:	str	r3, [sp]
   14d0c:	add	r3, sp, #8
   14d10:	bl	1486c <table_set@@Base>
   14d14:	mov	sp, fp
   14d18:	pop	{fp, pc}

00014d1c <table_set_uint64@@Base>:
   14d1c:	push	{fp, lr}
   14d20:	mov	fp, sp
   14d24:	sub	sp, sp, #16
   14d28:	ldr	r3, [fp, #12]
   14d2c:	str	r3, [sp, #12]
   14d30:	ldr	r3, [fp, #8]
   14d34:	str	r3, [sp, #8]
   14d38:	mov	r3, #9
   14d3c:	str	r3, [sp]
   14d40:	add	r3, sp, #8
   14d44:	bl	1486c <table_set@@Base>
   14d48:	mov	sp, fp
   14d4c:	pop	{fp, pc}

00014d50 <table_set_short@@Base>:
   14d50:	push	{fp, lr}
   14d54:	mov	fp, sp
   14d58:	sub	sp, sp, #8
   14d5c:	strh	r3, [fp, #-2]
   14d60:	mov	r3, #10
   14d64:	str	r3, [sp]
   14d68:	sub	r3, fp, #2
   14d6c:	bl	1486c <table_set@@Base>
   14d70:	mov	sp, fp
   14d74:	pop	{fp, pc}

00014d78 <table_set_ushort@@Base>:
   14d78:	push	{fp, lr}
   14d7c:	mov	fp, sp
   14d80:	sub	sp, sp, #8
   14d84:	strh	r3, [fp, #-2]
   14d88:	mov	r3, #11
   14d8c:	str	r3, [sp]
   14d90:	sub	r3, fp, #2
   14d94:	bl	1486c <table_set@@Base>
   14d98:	mov	sp, fp
   14d9c:	pop	{fp, pc}

00014da0 <table_set_long@@Base>:
   14da0:	push	{fp, lr}
   14da4:	mov	fp, sp
   14da8:	sub	sp, sp, #8
   14dac:	str	r3, [sp, #4]
   14db0:	mov	r3, #12
   14db4:	str	r3, [sp]
   14db8:	add	r3, sp, #4
   14dbc:	bl	1486c <table_set@@Base>
   14dc0:	mov	sp, fp
   14dc4:	pop	{fp, pc}

00014dc8 <table_set_ulong@@Base>:
   14dc8:	push	{fp, lr}
   14dcc:	mov	fp, sp
   14dd0:	sub	sp, sp, #8
   14dd4:	str	r3, [sp, #4]
   14dd8:	mov	r3, #13
   14ddc:	str	r3, [sp]
   14de0:	add	r3, sp, #4
   14de4:	bl	1486c <table_set@@Base>
   14de8:	mov	sp, fp
   14dec:	pop	{fp, pc}

00014df0 <table_set_llong@@Base>:
   14df0:	push	{fp, lr}
   14df4:	mov	fp, sp
   14df8:	sub	sp, sp, #16
   14dfc:	ldr	r3, [fp, #12]
   14e00:	str	r3, [sp, #12]
   14e04:	ldr	r3, [fp, #8]
   14e08:	str	r3, [sp, #8]
   14e0c:	mov	r3, #14
   14e10:	str	r3, [sp]
   14e14:	add	r3, sp, #8
   14e18:	bl	1486c <table_set@@Base>
   14e1c:	mov	sp, fp
   14e20:	pop	{fp, pc}

00014e24 <table_set_ullong@@Base>:
   14e24:	push	{fp, lr}
   14e28:	mov	fp, sp
   14e2c:	sub	sp, sp, #16
   14e30:	ldr	r3, [fp, #12]
   14e34:	str	r3, [sp, #12]
   14e38:	ldr	r3, [fp, #8]
   14e3c:	str	r3, [sp, #8]
   14e40:	mov	r3, #15
   14e44:	str	r3, [sp]
   14e48:	add	r3, sp, #8
   14e4c:	bl	1486c <table_set@@Base>
   14e50:	mov	sp, fp
   14e54:	pop	{fp, pc}

00014e58 <table_set_float@@Base>:
   14e58:	push	{fp, lr}
   14e5c:	mov	fp, sp
   14e60:	sub	sp, sp, #8
   14e64:	mov	r3, #16
   14e68:	vstr	s0, [sp, #4]
   14e6c:	str	r3, [sp]
   14e70:	add	r3, sp, #4
   14e74:	bl	1486c <table_set@@Base>
   14e78:	mov	sp, fp
   14e7c:	pop	{fp, pc}

00014e80 <table_set_double@@Base>:
   14e80:	push	{fp, lr}
   14e84:	mov	fp, sp
   14e88:	sub	sp, sp, #16
   14e8c:	mov	r3, #17
   14e90:	vstr	d0, [sp, #8]
   14e94:	str	r3, [sp]
   14e98:	add	r3, sp, #8
   14e9c:	bl	1486c <table_set@@Base>
   14ea0:	mov	sp, fp
   14ea4:	pop	{fp, pc}

00014ea8 <table_set_ldouble@@Base>:
   14ea8:	push	{fp, lr}
   14eac:	mov	fp, sp
   14eb0:	sub	sp, sp, #16
   14eb4:	mov	r3, #18
   14eb8:	vstr	d0, [sp, #8]
   14ebc:	str	r3, [sp]
   14ec0:	add	r3, sp, #8
   14ec4:	bl	1486c <table_set@@Base>
   14ec8:	mov	sp, fp
   14ecc:	pop	{fp, pc}

00014ed0 <table_set_string@@Base>:
   14ed0:	push	{fp, lr}
   14ed4:	mov	fp, sp
   14ed8:	sub	sp, sp, #8
   14edc:	mov	ip, #21
   14ee0:	str	ip, [sp]
   14ee4:	bl	1486c <table_set@@Base>
   14ee8:	mov	sp, fp
   14eec:	pop	{fp, pc}

00014ef0 <table_set_char@@Base>:
   14ef0:	push	{fp, lr}
   14ef4:	mov	fp, sp
   14ef8:	sub	sp, sp, #8
   14efc:	strb	r3, [fp, #-1]
   14f00:	mov	r3, #19
   14f04:	str	r3, [sp]
   14f08:	sub	r3, fp, #1
   14f0c:	bl	1486c <table_set@@Base>
   14f10:	mov	sp, fp
   14f14:	pop	{fp, pc}

00014f18 <table_set_uchar@@Base>:
   14f18:	push	{fp, lr}
   14f1c:	mov	fp, sp
   14f20:	sub	sp, sp, #8
   14f24:	strb	r3, [fp, #-1]
   14f28:	mov	r3, #20
   14f2c:	str	r3, [sp]
   14f30:	sub	r3, fp, #1
   14f34:	bl	1486c <table_set@@Base>
   14f38:	mov	sp, fp
   14f3c:	pop	{fp, pc}

00014f40 <table_set_ptr@@Base>:
   14f40:	push	{fp, lr}
   14f44:	mov	fp, sp
   14f48:	sub	sp, sp, #8
   14f4c:	mov	ip, #23
   14f50:	str	ip, [sp]
   14f54:	bl	1486c <table_set@@Base>
   14f58:	mov	sp, fp
   14f5c:	pop	{fp, pc}

00014f60 <table_column_sort@@Base>:
   14f60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14f64:	add	fp, sp, #28
   14f68:	sub	sp, sp, #36	; 0x24
   14f6c:	mov	r4, r0
   14f70:	cmp	r3, #1
   14f74:	str	r2, [sp, #8]
   14f78:	str	r1, [sp, #12]
   14f7c:	str	r3, [sp, #4]
   14f80:	blt	150fc <table_column_sort@@Base+0x19c>
   14f84:	ldr	r0, [sp, #12]
   14f88:	mov	r8, #0
   14f8c:	sub	r5, r0, #4
   14f90:	mov	r0, r4
   14f94:	bl	146a4 <table_get_row_length@@Base>
   14f98:	mov	sl, r0
   14f9c:	cmp	r8, #0
   14fa0:	beq	150c8 <table_column_sort@@Base+0x168>
   14fa4:	ldr	r0, [sp, #12]
   14fa8:	add	r0, r0, r8, lsl #2
   14fac:	ldr	r1, [r0, #-4]
   14fb0:	mov	r0, r4
   14fb4:	bl	13d00 <table_get_column_compare_function@@Base>
   14fb8:	cmp	sl, #1
   14fbc:	blt	150ec <table_column_sort@@Base+0x18c>
   14fc0:	mov	r6, r0
   14fc4:	sub	r0, sl, #1
   14fc8:	mov	r7, #0
   14fcc:	mvn	r3, #0
   14fd0:	mvn	r9, #0
   14fd4:	str	r0, [sp, #16]
   14fd8:	str	r8, [sp, #24]
   14fdc:	str	sl, [sp, #20]
   14fe0:	cmp	r7, #0
   14fe4:	beq	15064 <table_column_sort@@Base+0x104>
   14fe8:	str	r9, [sp, #32]
   14fec:	str	r3, [sp, #28]
   14ff0:	sub	r9, r7, #1
   14ff4:	ldr	r2, [r5, r8, lsl #2]
   14ff8:	mov	r0, r4
   14ffc:	mov	r1, r7
   15000:	bl	143cc <table_get@@Base>
   15004:	ldr	r2, [r5, r8, lsl #2]
   15008:	mov	sl, r0
   1500c:	mov	r0, r4
   15010:	mov	r1, r9
   15014:	bl	143cc <table_get@@Base>
   15018:	mov	r1, r0
   1501c:	mov	r0, sl
   15020:	blx	r6
   15024:	cmp	r0, #0
   15028:	bne	15054 <table_column_sort@@Base+0xf4>
   1502c:	sub	r8, r8, #1
   15030:	cmp	r8, #1
   15034:	bge	14ff4 <table_column_sort@@Base+0x94>
   15038:	ldr	r0, [sp, #32]
   1503c:	ldr	r8, [sp, #24]
   15040:	ldr	sl, [sp, #20]
   15044:	mov	r3, r7
   15048:	cmn	r0, #1
   1504c:	movne	r9, r0
   15050:	b	15064 <table_column_sort@@Base+0x104>
   15054:	ldr	r9, [sp, #32]
   15058:	ldr	r8, [sp, #24]
   1505c:	ldr	sl, [sp, #20]
   15060:	ldr	r3, [sp, #28]
   15064:	cmn	r9, #1
   15068:	beq	15088 <table_column_sort@@Base+0x128>
   1506c:	cmp	r3, r7
   15070:	bne	15090 <table_column_sort@@Base+0x130>
   15074:	ldr	r0, [sp, #16]
   15078:	cmp	r3, r0
   1507c:	beq	15090 <table_column_sort@@Base+0x130>
   15080:	mov	r3, r7
   15084:	b	150b8 <table_column_sort@@Base+0x158>
   15088:	mvn	r9, #0
   1508c:	b	150b8 <table_column_sort@@Base+0x158>
   15090:	ldr	r0, [sp, #12]
   15094:	mov	r2, r9
   15098:	ldr	r1, [r0, r8, lsl #2]
   1509c:	ldr	r0, [sp, #8]
   150a0:	ldr	r0, [r0, r8, lsl #2]
   150a4:	str	r0, [sp]
   150a8:	mov	r0, r4
   150ac:	bl	15118 <table_column_sort@@Base+0x1b8>
   150b0:	mvn	r9, #0
   150b4:	mvn	r3, #0
   150b8:	add	r7, r7, #1
   150bc:	cmp	r7, sl
   150c0:	bne	14fe0 <table_column_sort@@Base+0x80>
   150c4:	b	150ec <table_column_sort@@Base+0x18c>
   150c8:	ldr	r0, [sp, #12]
   150cc:	sub	r3, sl, #1
   150d0:	mov	r2, #0
   150d4:	ldr	r1, [r0]
   150d8:	ldr	r0, [sp, #8]
   150dc:	ldr	r0, [r0]
   150e0:	str	r0, [sp]
   150e4:	mov	r0, r4
   150e8:	bl	15118 <table_column_sort@@Base+0x1b8>
   150ec:	ldr	r0, [sp, #4]
   150f0:	add	r8, r8, #1
   150f4:	cmp	r8, r0
   150f8:	bne	14f90 <table_column_sort@@Base+0x30>
   150fc:	mov	r0, r4
   15100:	mvn	r1, #0
   15104:	mvn	r2, #0
   15108:	mov	r3, #32
   1510c:	sub	sp, fp, #28
   15110:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15114:	b	12e94 <table_notify@@Base>
   15118:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1511c:	add	fp, sp, #24
   15120:	sub	sp, sp, #8
   15124:	mov	r7, r0
   15128:	sub	r0, r3, r2
   1512c:	mov	r8, r1
   15130:	mov	r1, #4
   15134:	mov	r4, r3
   15138:	mov	r5, r2
   1513c:	add	r0, r0, #1
   15140:	bl	11f7c <calloc@plt>
   15144:	mov	r6, r0
   15148:	ldr	r0, [fp, #8]
   1514c:	mov	r2, r8
   15150:	mov	r3, r5
   15154:	str	r4, [sp]
   15158:	mov	r1, r6
   1515c:	str	r0, [sp, #4]
   15160:	mov	r0, r7
   15164:	bl	15178 <table_column_sort@@Base+0x218>
   15168:	mov	r0, r6
   1516c:	sub	sp, fp, #24
   15170:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   15174:	b	11fa0 <free@plt>
   15178:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1517c:	add	fp, sp, #28
   15180:	sub	sp, sp, #36	; 0x24
   15184:	mov	sl, r0
   15188:	ldr	r0, [fp, #8]
   1518c:	cmp	r0, r3
   15190:	ble	15338 <table_column_sort@@Base+0x3d8>
   15194:	ldr	r0, [fp, #8]
   15198:	ldr	r7, [fp, #12]
   1519c:	mov	r4, r3
   151a0:	mov	r6, r2
   151a4:	mov	r9, r1
   151a8:	add	r0, r0, r3
   151ac:	add	r5, r0, r0, lsr #31
   151b0:	asr	r0, r5, #1
   151b4:	str	r0, [sp, #32]
   151b8:	stm	sp, {r0, r7}
   151bc:	mov	r0, sl
   151c0:	bl	15178 <table_column_sort@@Base+0x218>
   151c4:	ldr	r0, [fp, #8]
   151c8:	mov	r1, r9
   151cc:	mov	r2, r6
   151d0:	stm	sp, {r0, r7}
   151d4:	mov	r0, #1
   151d8:	add	r7, r0, r5, asr #1
   151dc:	mov	r0, sl
   151e0:	mov	r3, r7
   151e4:	bl	15178 <table_column_sort@@Base+0x218>
   151e8:	mov	r0, sl
   151ec:	mov	r1, r6
   151f0:	str	r6, [sp, #28]
   151f4:	bl	13d00 <table_get_column_compare_function@@Base>
   151f8:	str	r0, [sp, #16]
   151fc:	ldr	r0, [fp, #8]
   15200:	sub	r8, r4, #1
   15204:	mov	r5, r9
   15208:	mov	r6, r4
   1520c:	str	sl, [sp, #24]
   15210:	add	r1, r0, #1
   15214:	str	r1, [sp, #12]
   15218:	ldr	r1, [fp, #12]
   1521c:	cmp	r1, #0
   15220:	beq	15280 <table_column_sort@@Base+0x320>
   15224:	ldr	r1, [sp, #32]
   15228:	cmp	r6, r1
   1522c:	bgt	152d0 <table_column_sort@@Base+0x370>
   15230:	cmp	r7, r0
   15234:	bgt	152e8 <table_column_sort@@Base+0x388>
   15238:	mov	r0, sl
   1523c:	ldr	sl, [sp, #28]
   15240:	mov	r1, r6
   15244:	mov	r2, sl
   15248:	bl	143cc <table_get@@Base>
   1524c:	str	r0, [sp, #20]
   15250:	ldr	r0, [sp, #24]
   15254:	mov	r2, sl
   15258:	ldr	sl, [sp, #24]
   1525c:	mov	r1, r7
   15260:	bl	143cc <table_get@@Base>
   15264:	mov	r1, r0
   15268:	ldr	r0, [sp, #20]
   1526c:	ldr	r2, [sp, #16]
   15270:	blx	r2
   15274:	cmp	r0, #1
   15278:	bge	152e8 <table_column_sort@@Base+0x388>
   1527c:	b	152d0 <table_column_sort@@Base+0x370>
   15280:	ldr	r1, [sp, #32]
   15284:	cmp	r6, r1
   15288:	bgt	152d0 <table_column_sort@@Base+0x370>
   1528c:	cmp	r7, r0
   15290:	bgt	152e8 <table_column_sort@@Base+0x388>
   15294:	ldr	r2, [sp, #28]
   15298:	mov	r0, sl
   1529c:	mov	r1, r6
   152a0:	bl	143cc <table_get@@Base>
   152a4:	ldr	r2, [sp, #28]
   152a8:	str	r0, [sp, #20]
   152ac:	mov	r0, sl
   152b0:	mov	r1, r7
   152b4:	bl	143cc <table_get@@Base>
   152b8:	mov	r1, r0
   152bc:	ldr	r0, [sp, #20]
   152c0:	ldr	r2, [sp, #16]
   152c4:	blx	r2
   152c8:	cmn	r0, #1
   152cc:	ble	152e8 <table_column_sort@@Base+0x388>
   152d0:	mov	r0, sl
   152d4:	mov	r1, r7
   152d8:	bl	1463c <table_get_row_ptr@@Base>
   152dc:	ldr	r0, [r0]
   152e0:	add	r7, r7, #1
   152e4:	b	152fc <table_column_sort@@Base+0x39c>
   152e8:	mov	r0, sl
   152ec:	mov	r1, r6
   152f0:	bl	1463c <table_get_row_ptr@@Base>
   152f4:	ldr	r0, [r0]
   152f8:	add	r6, r6, #1
   152fc:	str	r0, [r5]
   15300:	ldr	r0, [fp, #8]
   15304:	add	r8, r8, #1
   15308:	add	r5, r5, #4
   1530c:	cmp	r0, r8
   15310:	bne	15218 <table_column_sort@@Base+0x2b8>
   15314:	ldr	r5, [sp, #12]
   15318:	mov	r0, sl
   1531c:	mov	r1, r4
   15320:	mov	r2, r9
   15324:	bl	1485c <table_set_row_ptr@@Base>
   15328:	add	r4, r4, #1
   1532c:	add	r9, r9, #4
   15330:	cmp	r5, r4
   15334:	bne	15318 <table_column_sort@@Base+0x3b8>
   15338:	sub	sp, fp, #28
   1533c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00015340 <__libc_csu_init@@Base>:
   15340:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15344:	mov	r7, r0
   15348:	ldr	r6, [pc, #72]	; 15398 <__libc_csu_init@@Base+0x58>
   1534c:	ldr	r5, [pc, #72]	; 1539c <__libc_csu_init@@Base+0x5c>
   15350:	add	r6, pc, r6
   15354:	add	r5, pc, r5
   15358:	sub	r6, r6, r5
   1535c:	mov	r8, r1
   15360:	mov	r9, r2
   15364:	bl	11f5c <calloc@plt-0x20>
   15368:	asrs	r6, r6, #2
   1536c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   15370:	mov	r4, #0
   15374:	add	r4, r4, #1
   15378:	ldr	r3, [r5], #4
   1537c:	mov	r2, r9
   15380:	mov	r1, r8
   15384:	mov	r0, r7
   15388:	blx	r3
   1538c:	cmp	r6, r4
   15390:	bne	15374 <__libc_csu_init@@Base+0x34>
   15394:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15398:			; <UNDEFINED> instruction: 0x00010bb4
   1539c:	andeq	r0, r1, ip, lsr #23

000153a0 <__libc_csu_fini@@Base>:
   153a0:	bx	lr

Disassembly of section .fini:

000153a4 <.fini>:
   153a4:	push	{r3, lr}
   153a8:	pop	{r3, pc}
