
../repos/dvidelabs-flatcc-3b39ef7/samples/reflection/bfbs2json:     file format elf32-littlearm


Disassembly of section .init:

0001098c <.init>:
   1098c:	push	{r3, lr}
   10990:	bl	10ac0 <_start@@Base+0x3c>
   10994:	pop	{r3, pc}

Disassembly of section .plt:

00010998 <printf@plt-0x14>:
   10998:	push	{lr}		; (str lr, [sp, #-4]!)
   1099c:	ldr	lr, [pc, #4]	; 109a8 <printf@plt-0x4>
   109a0:	add	lr, pc, lr
   109a4:	ldr	pc, [lr, #8]!
   109a8:	andeq	r3, r1, r8, asr r6

000109ac <printf@plt>:
   109ac:	add	ip, pc, #0, 12
   109b0:	add	ip, ip, #77824	; 0x13000
   109b4:	ldr	pc, [ip, #1624]!	; 0x658

000109b8 <fopen@plt>:
   109b8:	add	ip, pc, #0, 12
   109bc:	add	ip, ip, #77824	; 0x13000
   109c0:	ldr	pc, [ip, #1616]!	; 0x650

000109c4 <free@plt>:
   109c4:	add	ip, pc, #0, 12
   109c8:	add	ip, ip, #77824	; 0x13000
   109cc:	ldr	pc, [ip, #1608]!	; 0x648

000109d0 <ftell@plt>:
   109d0:	add	ip, pc, #0, 12
   109d4:	add	ip, ip, #77824	; 0x13000
   109d8:	ldr	pc, [ip, #1600]!	; 0x640

000109dc <rewind@plt>:
   109dc:	add	ip, pc, #0, 12
   109e0:	add	ip, ip, #77824	; 0x13000
   109e4:	ldr	pc, [ip, #1592]!	; 0x638

000109e8 <fwrite@plt>:
   109e8:	add	ip, pc, #0, 12
   109ec:	add	ip, ip, #77824	; 0x13000
   109f0:	ldr	pc, [ip, #1584]!	; 0x630

000109f4 <puts@plt>:
   109f4:	add	ip, pc, #0, 12
   109f8:	add	ip, ip, #77824	; 0x13000
   109fc:	ldr	pc, [ip, #1576]!	; 0x628

00010a00 <malloc@plt>:
   10a00:	add	ip, pc, #0, 12
   10a04:	add	ip, ip, #77824	; 0x13000
   10a08:	ldr	pc, [ip, #1568]!	; 0x620

00010a0c <__libc_start_main@plt>:
   10a0c:	add	ip, pc, #0, 12
   10a10:	add	ip, ip, #77824	; 0x13000
   10a14:	ldr	pc, [ip, #1560]!	; 0x618

00010a18 <__gmon_start__@plt>:
   10a18:	add	ip, pc, #0, 12
   10a1c:	add	ip, ip, #77824	; 0x13000
   10a20:	ldr	pc, [ip, #1552]!	; 0x610

00010a24 <exit@plt>:
   10a24:	add	ip, pc, #0, 12
   10a28:	add	ip, ip, #77824	; 0x13000
   10a2c:	ldr	pc, [ip, #1544]!	; 0x608

00010a30 <fprintf@plt>:
   10a30:	add	ip, pc, #0, 12
   10a34:	add	ip, ip, #77824	; 0x13000
   10a38:	ldr	pc, [ip, #1536]!	; 0x600

00010a3c <putchar@plt>:
   10a3c:	add	ip, pc, #0, 12
   10a40:	add	ip, ip, #77824	; 0x13000
   10a44:	ldr	pc, [ip, #1528]!	; 0x5f8

00010a48 <fclose@plt>:
   10a48:	add	ip, pc, #0, 12
   10a4c:	add	ip, ip, #77824	; 0x13000
   10a50:	ldr	pc, [ip, #1520]!	; 0x5f0

00010a54 <fread_unlocked@plt>:
   10a54:	add	ip, pc, #0, 12
   10a58:	add	ip, ip, #77824	; 0x13000
   10a5c:	ldr	pc, [ip, #1512]!	; 0x5e8

00010a60 <fseek@plt>:
   10a60:	add	ip, pc, #0, 12
   10a64:	add	ip, ip, #77824	; 0x13000
   10a68:	ldr	pc, [ip, #1504]!	; 0x5e0

00010a6c <abort@plt>:
   10a6c:	add	ip, pc, #0, 12
   10a70:	add	ip, ip, #77824	; 0x13000
   10a74:	ldr	pc, [ip, #1496]!	; 0x5d8

00010a78 <__assert_fail@plt>:
   10a78:	add	ip, pc, #0, 12
   10a7c:	add	ip, ip, #77824	; 0x13000
   10a80:	ldr	pc, [ip, #1488]!	; 0x5d0

Disassembly of section .text:

00010a84 <_start@@Base>:
   10a84:	mov	fp, #0
   10a88:	mov	lr, #0
   10a8c:	pop	{r1}		; (ldr r1, [sp], #4)
   10a90:	mov	r2, sp
   10a94:	push	{r2}		; (str r2, [sp, #-4]!)
   10a98:	push	{r0}		; (str r0, [sp, #-4]!)
   10a9c:	ldr	ip, [pc, #16]	; 10ab4 <_start@@Base+0x30>
   10aa0:	push	{ip}		; (str ip, [sp, #-4]!)
   10aa4:	ldr	r0, [pc, #12]	; 10ab8 <_start@@Base+0x34>
   10aa8:	ldr	r3, [pc, #12]	; 10abc <_start@@Base+0x38>
   10aac:	bl	10a0c <__libc_start_main@plt>
   10ab0:	bl	10a6c <abort@plt>
   10ab4:	andeq	r2, r1, ip, asr #19
   10ab8:	andeq	r2, r1, r8, asr #16
   10abc:	andeq	r2, r1, ip, ror #18
   10ac0:	ldr	r3, [pc, #20]	; 10adc <_start@@Base+0x58>
   10ac4:	ldr	r2, [pc, #20]	; 10ae0 <_start@@Base+0x5c>
   10ac8:	add	r3, pc, r3
   10acc:	ldr	r2, [r3, r2]
   10ad0:	cmp	r2, #0
   10ad4:	bxeq	lr
   10ad8:	b	10a18 <__gmon_start__@plt>
   10adc:	andeq	r3, r1, r0, lsr r5
   10ae0:	andeq	r0, r0, r4, asr r0
   10ae4:	ldr	r0, [pc, #24]	; 10b04 <_start@@Base+0x80>
   10ae8:	ldr	r3, [pc, #24]	; 10b08 <_start@@Base+0x84>
   10aec:	cmp	r3, r0
   10af0:	bxeq	lr
   10af4:	ldr	r3, [pc, #16]	; 10b0c <_start@@Base+0x88>
   10af8:	cmp	r3, #0
   10afc:	bxeq	lr
   10b00:	bx	r3
   10b04:	andeq	r4, r2, r0, rrx
   10b08:	andeq	r4, r2, r0, rrx
   10b0c:	andeq	r0, r0, r0
   10b10:	ldr	r0, [pc, #36]	; 10b3c <_start@@Base+0xb8>
   10b14:	ldr	r1, [pc, #36]	; 10b40 <_start@@Base+0xbc>
   10b18:	sub	r1, r1, r0
   10b1c:	asr	r1, r1, #2
   10b20:	add	r1, r1, r1, lsr #31
   10b24:	asrs	r1, r1, #1
   10b28:	bxeq	lr
   10b2c:	ldr	r3, [pc, #16]	; 10b44 <_start@@Base+0xc0>
   10b30:	cmp	r3, #0
   10b34:	bxeq	lr
   10b38:	bx	r3
   10b3c:	andeq	r4, r2, r0, rrx
   10b40:	andeq	r4, r2, r0, rrx
   10b44:	andeq	r0, r0, r0
   10b48:	push	{r4, lr}
   10b4c:	ldr	r4, [pc, #24]	; 10b6c <_start@@Base+0xe8>
   10b50:	ldrb	r3, [r4]
   10b54:	cmp	r3, #0
   10b58:	popne	{r4, pc}
   10b5c:	bl	10ae4 <_start@@Base+0x60>
   10b60:	mov	r3, #1
   10b64:	strb	r3, [r4]
   10b68:	pop	{r4, pc}
   10b6c:	andeq	r4, r2, r4, rrx
   10b70:	b	10b10 <_start@@Base+0x8c>

00010b74 <print_type@@Base>:
   10b74:	push	{r4, r5, fp, lr}
   10b78:	add	fp, sp, #8
   10b7c:	mov	r4, r0
   10b80:	mov	r0, #123	; 0x7b
   10b84:	bl	10a3c <putchar@plt>
   10b88:	mov	r0, r4
   10b8c:	bl	10c44 <print_type@@Base+0xd0>
   10b90:	cmp	r0, #0
   10b94:	beq	10bbc <print_type@@Base+0x48>
   10b98:	mov	r0, r4
   10b9c:	bl	10cd0 <print_type@@Base+0x15c>
   10ba0:	bl	10cac <print_type@@Base+0x138>
   10ba4:	mov	r1, r0
   10ba8:	movw	r0, #10724	; 0x29e4
   10bac:	movt	r0, #1
   10bb0:	bl	109ac <printf@plt>
   10bb4:	mov	r5, #0
   10bb8:	b	10bc0 <print_type@@Base+0x4c>
   10bbc:	mov	r5, #1
   10bc0:	mov	r0, r4
   10bc4:	bl	10d40 <print_type@@Base+0x1cc>
   10bc8:	cmp	r0, #0
   10bcc:	beq	10c00 <print_type@@Base+0x8c>
   10bd0:	cmp	r5, #0
   10bd4:	bne	10be0 <print_type@@Base+0x6c>
   10bd8:	mov	r0, #44	; 0x2c
   10bdc:	bl	10a3c <putchar@plt>
   10be0:	mov	r0, r4
   10be4:	bl	10cd0 <print_type@@Base+0x15c>
   10be8:	bl	10cac <print_type@@Base+0x138>
   10bec:	mov	r1, r0
   10bf0:	movw	r0, #10741	; 0x29f5
   10bf4:	movt	r0, #1
   10bf8:	bl	109ac <printf@plt>
   10bfc:	mov	r5, #0
   10c00:	mov	r0, r4
   10c04:	bl	10da8 <print_type@@Base+0x234>
   10c08:	cmp	r0, #0
   10c0c:	beq	10c38 <print_type@@Base+0xc4>
   10c10:	cmp	r5, #0
   10c14:	bne	10c20 <print_type@@Base+0xac>
   10c18:	mov	r0, #44	; 0x2c
   10c1c:	bl	10a3c <putchar@plt>
   10c20:	mov	r0, r4
   10c24:	bl	10e10 <print_type@@Base+0x29c>
   10c28:	mov	r1, r0
   10c2c:	movw	r0, #10756	; 0x2a04
   10c30:	movt	r0, #1
   10c34:	bl	109ac <printf@plt>
   10c38:	mov	r0, #125	; 0x7d
   10c3c:	pop	{r4, r5, fp, lr}
   10c40:	b	10a3c <putchar@plt>
   10c44:	push	{r4, sl, fp, lr}
   10c48:	add	fp, sp, #8
   10c4c:	cmp	r0, #0
   10c50:	beq	10c8c <print_type@@Base+0x118>
   10c54:	mov	r4, r0
   10c58:	bl	128b8 <main@@Base+0x70>
   10c5c:	sub	r4, r4, r0
   10c60:	mov	r0, r4
   10c64:	bl	128c0 <main@@Base+0x78>
   10c68:	mov	r1, r0
   10c6c:	mov	r0, #0
   10c70:	cmp	r1, #6
   10c74:	popcc	{r4, sl, fp, pc}
   10c78:	add	r0, r4, #4
   10c7c:	bl	128c0 <main@@Base+0x78>
   10c80:	cmp	r0, #0
   10c84:	movwne	r0, #1
   10c88:	pop	{r4, sl, fp, pc}
   10c8c:	movw	r0, #11525	; 0x2d05
   10c90:	movt	r0, #1
   10c94:	movw	r1, #11563	; 0x2d2b
   10c98:	movt	r1, #1
   10c9c:	movw	r3, #11657	; 0x2d89
   10ca0:	movt	r3, #1
   10ca4:	mov	r2, #147	; 0x93
   10ca8:	bl	10a78 <__assert_fail@plt>
   10cac:	uxtb	r1, r0
   10cb0:	cmp	r1, #16
   10cb4:	movwhi	r0, #11343	; 0x2c4f
   10cb8:	movthi	r0, #1
   10cbc:	bxhi	lr
   10cc0:	movw	r1, #15136	; 0x3b20
   10cc4:	movt	r1, #1
   10cc8:	ldr	r0, [r1, r0, lsl #2]
   10ccc:	bx	lr
   10cd0:	push	{r4, r5, fp, lr}
   10cd4:	add	fp, sp, #8
   10cd8:	cmp	r0, #0
   10cdc:	beq	10d20 <print_type@@Base+0x1ac>
   10ce0:	mov	r4, r0
   10ce4:	bl	128b8 <main@@Base+0x70>
   10ce8:	sub	r5, r4, r0
   10cec:	mov	r0, r5
   10cf0:	bl	128c0 <main@@Base+0x78>
   10cf4:	cmp	r0, #6
   10cf8:	bcc	10d18 <print_type@@Base+0x1a4>
   10cfc:	add	r0, r5, #4
   10d00:	bl	128c0 <main@@Base+0x78>
   10d04:	cmp	r0, #0
   10d08:	beq	10d18 <print_type@@Base+0x1a4>
   10d0c:	add	r0, r4, r0
   10d10:	pop	{r4, r5, fp, lr}
   10d14:	b	128d0 <main@@Base+0x88>
   10d18:	mov	r0, #0
   10d1c:	pop	{r4, r5, fp, pc}
   10d20:	movw	r0, #11525	; 0x2d05
   10d24:	movt	r0, #1
   10d28:	movw	r1, #11563	; 0x2d2b
   10d2c:	movt	r1, #1
   10d30:	movw	r3, #11800	; 0x2e18
   10d34:	movt	r3, #1
   10d38:	mov	r2, #147	; 0x93
   10d3c:	bl	10a78 <__assert_fail@plt>
   10d40:	push	{r4, sl, fp, lr}
   10d44:	add	fp, sp, #8
   10d48:	cmp	r0, #0
   10d4c:	beq	10d88 <print_type@@Base+0x214>
   10d50:	mov	r4, r0
   10d54:	bl	128b8 <main@@Base+0x70>
   10d58:	sub	r4, r4, r0
   10d5c:	mov	r0, r4
   10d60:	bl	128c0 <main@@Base+0x78>
   10d64:	mov	r1, r0
   10d68:	mov	r0, #0
   10d6c:	cmp	r1, #8
   10d70:	popcc	{r4, sl, fp, pc}
   10d74:	add	r0, r4, #6
   10d78:	bl	128c0 <main@@Base+0x78>
   10d7c:	cmp	r0, #0
   10d80:	movwne	r0, #1
   10d84:	pop	{r4, sl, fp, pc}
   10d88:	movw	r0, #11525	; 0x2d05
   10d8c:	movt	r0, #1
   10d90:	movw	r1, #11563	; 0x2d2b
   10d94:	movt	r1, #1
   10d98:	movw	r3, #11878	; 0x2e66
   10d9c:	movt	r3, #1
   10da0:	mov	r2, #148	; 0x94
   10da4:	bl	10a78 <__assert_fail@plt>
   10da8:	push	{r4, sl, fp, lr}
   10dac:	add	fp, sp, #8
   10db0:	cmp	r0, #0
   10db4:	beq	10df0 <print_type@@Base+0x27c>
   10db8:	mov	r4, r0
   10dbc:	bl	128b8 <main@@Base+0x70>
   10dc0:	sub	r4, r4, r0
   10dc4:	mov	r0, r4
   10dc8:	bl	128c0 <main@@Base+0x78>
   10dcc:	mov	r1, r0
   10dd0:	mov	r0, #0
   10dd4:	cmp	r1, #10
   10dd8:	popcc	{r4, sl, fp, pc}
   10ddc:	add	r0, r4, #8
   10de0:	bl	128c0 <main@@Base+0x78>
   10de4:	cmp	r0, #0
   10de8:	movwne	r0, #1
   10dec:	pop	{r4, sl, fp, pc}
   10df0:	movw	r0, #11525	; 0x2d05
   10df4:	movt	r0, #1
   10df8:	movw	r1, #11563	; 0x2d2b
   10dfc:	movt	r1, #1
   10e00:	movw	r3, #11942	; 0x2ea6
   10e04:	movt	r3, #1
   10e08:	mov	r2, #149	; 0x95
   10e0c:	bl	10a78 <__assert_fail@plt>
   10e10:	push	{r4, r5, fp, lr}
   10e14:	add	fp, sp, #8
   10e18:	cmp	r0, #0
   10e1c:	beq	10e60 <print_type@@Base+0x2ec>
   10e20:	mov	r4, r0
   10e24:	bl	128b8 <main@@Base+0x70>
   10e28:	sub	r5, r4, r0
   10e2c:	mov	r0, r5
   10e30:	bl	128c0 <main@@Base+0x78>
   10e34:	cmp	r0, #10
   10e38:	bcc	10e58 <print_type@@Base+0x2e4>
   10e3c:	add	r0, r5, #8
   10e40:	bl	128c0 <main@@Base+0x78>
   10e44:	cmp	r0, #0
   10e48:	beq	10e58 <print_type@@Base+0x2e4>
   10e4c:	add	r0, r4, r0
   10e50:	pop	{r4, r5, fp, lr}
   10e54:	b	128dc <main@@Base+0x94>
   10e58:	mvn	r0, #0
   10e5c:	pop	{r4, r5, fp, pc}
   10e60:	movw	r0, #11525	; 0x2d05
   10e64:	movt	r0, #1
   10e68:	movw	r1, #11563	; 0x2d2b
   10e6c:	movt	r1, #1
   10e70:	movw	r3, #12004	; 0x2ee4
   10e74:	movt	r3, #1
   10e78:	mov	r2, #149	; 0x95
   10e7c:	bl	10a78 <__assert_fail@plt>

00010e80 <print_object@@Base>:
   10e80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10e84:	add	fp, sp, #28
   10e88:	sub	sp, sp, #4
   10e8c:	mov	r4, r0
   10e90:	bl	110cc <print_object@@Base+0x24c>
   10e94:	mov	r5, r0
   10e98:	str	r4, [sp]
   10e9c:	mov	r0, r4
   10ea0:	bl	1114c <print_object@@Base+0x2cc>
   10ea4:	mov	r1, r0
   10ea8:	movw	r0, #10767	; 0x2a0f
   10eac:	movt	r0, #1
   10eb0:	bl	109ac <printf@plt>
   10eb4:	movw	r0, #10780	; 0x2a1c
   10eb8:	movt	r0, #1
   10ebc:	bl	109ac <printf@plt>
   10ec0:	mov	r0, r5
   10ec4:	bl	111cc <print_object@@Base+0x34c>
   10ec8:	cmp	r0, #0
   10ecc:	beq	11024 <print_object@@Base+0x1a4>
   10ed0:	mov	r6, #0
   10ed4:	movw	r7, #10792	; 0x2a28
   10ed8:	movt	r7, #1
   10edc:	movw	r4, #10890	; 0x2a8a
   10ee0:	movt	r4, #1
   10ee4:	movw	r8, #10885	; 0x2a85
   10ee8:	movt	r8, #1
   10eec:	movw	r9, #10813	; 0x2a3d
   10ef0:	movt	r9, #1
   10ef4:	cmp	r6, #0
   10ef8:	beq	10f04 <print_object@@Base+0x84>
   10efc:	mov	r0, #44	; 0x2c
   10f00:	bl	10a3c <putchar@plt>
   10f04:	mov	r0, r5
   10f08:	mov	r1, r6
   10f0c:	bl	111e0 <print_object@@Base+0x360>
   10f10:	mov	sl, r0
   10f14:	bl	11230 <print_object@@Base+0x3b0>
   10f18:	mov	r1, r0
   10f1c:	mov	r0, r7
   10f20:	bl	109ac <printf@plt>
   10f24:	mov	r0, sl
   10f28:	bl	112b0 <print_object@@Base+0x430>
   10f2c:	bl	10b74 <print_type@@Base>
   10f30:	mov	r0, sl
   10f34:	bl	1132c <print_object@@Base+0x4ac>
   10f38:	cmp	r0, #0
   10f3c:	beq	10f54 <print_object@@Base+0xd4>
   10f40:	mov	r0, sl
   10f44:	bl	11394 <print_object@@Base+0x514>
   10f48:	mov	r1, r0
   10f4c:	mov	r0, r9
   10f50:	bl	109ac <printf@plt>
   10f54:	mov	r0, sl
   10f58:	bl	11404 <print_object@@Base+0x584>
   10f5c:	cmp	r0, #0
   10f60:	beq	10f80 <print_object@@Base+0x100>
   10f64:	mov	r0, sl
   10f68:	bl	1146c <print_object@@Base+0x5ec>
   10f6c:	mov	r2, r0
   10f70:	movw	r0, #10823	; 0x2a47
   10f74:	movt	r0, #1
   10f78:	mov	r3, r1
   10f7c:	bl	109ac <printf@plt>
   10f80:	mov	r0, sl
   10f84:	bl	114e0 <print_object@@Base+0x660>
   10f88:	cmp	r0, #0
   10f8c:	beq	10fa8 <print_object@@Base+0x128>
   10f90:	mov	r0, sl
   10f94:	bl	11548 <print_object@@Base+0x6c8>
   10f98:	vmov	r2, r3, d0
   10f9c:	movw	r0, #10847	; 0x2a5f
   10fa0:	movt	r0, #1
   10fa4:	bl	109ac <printf@plt>
   10fa8:	mov	r0, sl
   10fac:	bl	115b8 <print_object@@Base+0x738>
   10fb0:	cmp	r0, #0
   10fb4:	beq	10fd8 <print_object@@Base+0x158>
   10fb8:	mov	r0, sl
   10fbc:	bl	11620 <print_object@@Base+0x7a0>
   10fc0:	cmp	r0, #0
   10fc4:	mov	r1, r8
   10fc8:	moveq	r1, r4
   10fcc:	movw	r0, #10870	; 0x2a76
   10fd0:	movt	r0, #1
   10fd4:	bl	109ac <printf@plt>
   10fd8:	mov	r0, sl
   10fdc:	bl	11690 <print_object@@Base+0x810>
   10fe0:	cmp	r0, #0
   10fe4:	beq	11008 <print_object@@Base+0x188>
   10fe8:	mov	r0, sl
   10fec:	bl	116f8 <print_object@@Base+0x878>
   10ff0:	cmp	r0, #0
   10ff4:	mov	r1, r8
   10ff8:	moveq	r1, r4
   10ffc:	movw	r0, #10896	; 0x2a90
   11000:	movt	r0, #1
   11004:	bl	109ac <printf@plt>
   11008:	mov	r0, #125	; 0x7d
   1100c:	bl	10a3c <putchar@plt>
   11010:	add	r6, r6, #1
   11014:	mov	r0, r5
   11018:	bl	111cc <print_object@@Base+0x34c>
   1101c:	cmp	r6, r0
   11020:	bcc	10ef4 <print_object@@Base+0x74>
   11024:	mov	r0, #93	; 0x5d
   11028:	bl	10a3c <putchar@plt>
   1102c:	ldr	r4, [sp]
   11030:	mov	r0, r4
   11034:	bl	11768 <print_object@@Base+0x8e8>
   11038:	cmp	r0, #0
   1103c:	beq	1106c <print_object@@Base+0x1ec>
   11040:	mov	r0, r4
   11044:	bl	117d0 <print_object@@Base+0x950>
   11048:	movw	r2, #10890	; 0x2a8a
   1104c:	movt	r2, #1
   11050:	movw	r1, #10885	; 0x2a85
   11054:	movt	r1, #1
   11058:	cmp	r0, #0
   1105c:	moveq	r1, r2
   11060:	movw	r0, #10906	; 0x2a9a
   11064:	movt	r0, #1
   11068:	bl	109ac <printf@plt>
   1106c:	mov	r0, r4
   11070:	bl	11840 <print_object@@Base+0x9c0>
   11074:	cmp	r0, #0
   11078:	beq	11094 <print_object@@Base+0x214>
   1107c:	mov	r0, r4
   11080:	bl	118a8 <print_object@@Base+0xa28>
   11084:	mov	r1, r0
   11088:	movw	r0, #10922	; 0x2aaa
   1108c:	movt	r0, #1
   11090:	bl	109ac <printf@plt>
   11094:	mov	r0, r4
   11098:	bl	11918 <print_object@@Base+0xa98>
   1109c:	cmp	r0, #0
   110a0:	beq	110bc <print_object@@Base+0x23c>
   110a4:	mov	r0, r4
   110a8:	bl	11980 <print_object@@Base+0xb00>
   110ac:	mov	r1, r0
   110b0:	movw	r0, #10937	; 0x2ab9
   110b4:	movt	r0, #1
   110b8:	bl	109ac <printf@plt>
   110bc:	mov	r0, #125	; 0x7d
   110c0:	sub	sp, fp, #28
   110c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   110c8:	b	10a3c <putchar@plt>
   110cc:	push	{r4, r5, fp, lr}
   110d0:	add	fp, sp, #8
   110d4:	cmp	r0, #0
   110d8:	beq	1112c <print_object@@Base+0x2ac>
   110dc:	mov	r4, r0
   110e0:	bl	128b8 <main@@Base+0x70>
   110e4:	sub	r5, r4, r0
   110e8:	mov	r0, r5
   110ec:	bl	128c0 <main@@Base+0x78>
   110f0:	cmp	r0, #8
   110f4:	bcc	11120 <print_object@@Base+0x2a0>
   110f8:	add	r0, r5, #6
   110fc:	bl	128c0 <main@@Base+0x78>
   11100:	cmp	r0, #0
   11104:	beq	11120 <print_object@@Base+0x2a0>
   11108:	add	r4, r4, r0
   1110c:	mov	r0, r4
   11110:	bl	128e8 <main@@Base+0xa0>
   11114:	add	r0, r4, r0
   11118:	add	r0, r0, #4
   1111c:	pop	{r4, r5, fp, pc}
   11120:	movw	r0, #12134	; 0x2f66
   11124:	movt	r0, #1
   11128:	b	11134 <print_object@@Base+0x2b4>
   1112c:	movw	r0, #11525	; 0x2d05
   11130:	movt	r0, #1
   11134:	movw	r1, #11563	; 0x2d2b
   11138:	movt	r1, #1
   1113c:	movw	r3, #12059	; 0x2f1b
   11140:	movt	r3, #1
   11144:	mov	r2, #224	; 0xe0
   11148:	bl	10a78 <__assert_fail@plt>
   1114c:	push	{r4, r5, fp, lr}
   11150:	add	fp, sp, #8
   11154:	cmp	r0, #0
   11158:	beq	111ac <print_object@@Base+0x32c>
   1115c:	mov	r4, r0
   11160:	bl	128b8 <main@@Base+0x70>
   11164:	sub	r5, r4, r0
   11168:	mov	r0, r5
   1116c:	bl	128c0 <main@@Base+0x78>
   11170:	cmp	r0, #6
   11174:	bcc	111a0 <print_object@@Base+0x320>
   11178:	add	r0, r5, #4
   1117c:	bl	128c0 <main@@Base+0x78>
   11180:	cmp	r0, #0
   11184:	beq	111a0 <print_object@@Base+0x320>
   11188:	add	r4, r4, r0
   1118c:	mov	r0, r4
   11190:	bl	128e8 <main@@Base+0xa0>
   11194:	add	r0, r4, r0
   11198:	add	r0, r0, #4
   1119c:	pop	{r4, r5, fp, pc}
   111a0:	movw	r0, #12134	; 0x2f66
   111a4:	movt	r0, #1
   111a8:	b	111b4 <print_object@@Base+0x334>
   111ac:	movw	r0, #11525	; 0x2d05
   111b0:	movt	r0, #1
   111b4:	movw	r1, #11563	; 0x2d2b
   111b8:	movt	r1, #1
   111bc:	movw	r3, #12167	; 0x2f87
   111c0:	movt	r3, #1
   111c4:	mov	r2, #218	; 0xda
   111c8:	bl	10a78 <__assert_fail@plt>
   111cc:	cmp	r0, #0
   111d0:	moveq	r0, #0
   111d4:	bxeq	lr
   111d8:	sub	r0, r0, #4
   111dc:	b	128e8 <main@@Base+0xa0>
   111e0:	push	{r4, r5, fp, lr}
   111e4:	add	fp, sp, #8
   111e8:	mov	r4, r1
   111ec:	mov	r5, r0
   111f0:	bl	128f4 <main@@Base+0xac>
   111f4:	cmp	r0, r4
   111f8:	bls	11210 <print_object@@Base+0x390>
   111fc:	add	r4, r5, r4, lsl #2
   11200:	mov	r0, r4
   11204:	bl	128e8 <main@@Base+0xa0>
   11208:	add	r0, r4, r0
   1120c:	pop	{r4, r5, fp, pc}
   11210:	movw	r0, #12238	; 0x2fce
   11214:	movt	r0, #1
   11218:	movw	r1, #11563	; 0x2d2b
   1121c:	movt	r1, #1
   11220:	movw	r3, #12293	; 0x3005
   11224:	movt	r3, #1
   11228:	mov	r2, #192	; 0xc0
   1122c:	bl	10a78 <__assert_fail@plt>
   11230:	push	{r4, r5, fp, lr}
   11234:	add	fp, sp, #8
   11238:	cmp	r0, #0
   1123c:	beq	11290 <print_object@@Base+0x410>
   11240:	mov	r4, r0
   11244:	bl	128b8 <main@@Base+0x70>
   11248:	sub	r5, r4, r0
   1124c:	mov	r0, r5
   11250:	bl	128c0 <main@@Base+0x78>
   11254:	cmp	r0, #6
   11258:	bcc	11284 <print_object@@Base+0x404>
   1125c:	add	r0, r5, #4
   11260:	bl	128c0 <main@@Base+0x78>
   11264:	cmp	r0, #0
   11268:	beq	11284 <print_object@@Base+0x404>
   1126c:	add	r4, r4, r0
   11270:	mov	r0, r4
   11274:	bl	128e8 <main@@Base+0xa0>
   11278:	add	r0, r4, r0
   1127c:	add	r0, r0, #4
   11280:	pop	{r4, r5, fp, pc}
   11284:	movw	r0, #12134	; 0x2f66
   11288:	movt	r0, #1
   1128c:	b	11298 <print_object@@Base+0x418>
   11290:	movw	r0, #11525	; 0x2d05
   11294:	movt	r0, #1
   11298:	movw	r1, #11563	; 0x2d2b
   1129c:	movt	r1, #1
   112a0:	movw	r3, #12374	; 0x3056
   112a4:	movt	r3, #1
   112a8:	mov	r2, #195	; 0xc3
   112ac:	bl	10a78 <__assert_fail@plt>
   112b0:	push	{r4, r5, fp, lr}
   112b4:	add	fp, sp, #8
   112b8:	cmp	r0, #0
   112bc:	beq	1130c <print_object@@Base+0x48c>
   112c0:	mov	r4, r0
   112c4:	bl	128b8 <main@@Base+0x70>
   112c8:	sub	r5, r4, r0
   112cc:	mov	r0, r5
   112d0:	bl	128c0 <main@@Base+0x78>
   112d4:	cmp	r0, #8
   112d8:	bcc	11300 <print_object@@Base+0x480>
   112dc:	add	r0, r5, #6
   112e0:	bl	128c0 <main@@Base+0x78>
   112e4:	cmp	r0, #0
   112e8:	beq	11300 <print_object@@Base+0x480>
   112ec:	add	r4, r4, r0
   112f0:	mov	r0, r4
   112f4:	bl	128e8 <main@@Base+0xa0>
   112f8:	add	r0, r4, r0
   112fc:	pop	{r4, r5, fp, pc}
   11300:	movw	r0, #12134	; 0x2f66
   11304:	movt	r0, #1
   11308:	b	11314 <print_object@@Base+0x494>
   1130c:	movw	r0, #11525	; 0x2d05
   11310:	movt	r0, #1
   11314:	movw	r1, #11563	; 0x2d2b
   11318:	movt	r1, #1
   1131c:	movw	r3, #12443	; 0x309b
   11320:	movt	r3, #1
   11324:	mov	r2, #201	; 0xc9
   11328:	bl	10a78 <__assert_fail@plt>
   1132c:	push	{r4, sl, fp, lr}
   11330:	add	fp, sp, #8
   11334:	cmp	r0, #0
   11338:	beq	11374 <print_object@@Base+0x4f4>
   1133c:	mov	r4, r0
   11340:	bl	128b8 <main@@Base+0x70>
   11344:	sub	r4, r4, r0
   11348:	mov	r0, r4
   1134c:	bl	128c0 <main@@Base+0x78>
   11350:	mov	r1, r0
   11354:	mov	r0, #0
   11358:	cmp	r1, #10
   1135c:	popcc	{r4, sl, fp, pc}
   11360:	add	r0, r4, #8
   11364:	bl	128c0 <main@@Base+0x78>
   11368:	cmp	r0, #0
   1136c:	movwne	r0, #1
   11370:	pop	{r4, sl, fp, pc}
   11374:	movw	r0, #11525	; 0x2d05
   11378:	movt	r0, #1
   1137c:	movw	r1, #11563	; 0x2d2b
   11380:	movt	r1, #1
   11384:	movw	r3, #12515	; 0x30e3
   11388:	movt	r3, #1
   1138c:	mov	r2, #202	; 0xca
   11390:	bl	10a78 <__assert_fail@plt>
   11394:	push	{r4, r5, fp, lr}
   11398:	add	fp, sp, #8
   1139c:	cmp	r0, #0
   113a0:	beq	113e4 <print_object@@Base+0x564>
   113a4:	mov	r4, r0
   113a8:	bl	128b8 <main@@Base+0x70>
   113ac:	sub	r5, r4, r0
   113b0:	mov	r0, r5
   113b4:	bl	128c0 <main@@Base+0x78>
   113b8:	cmp	r0, #10
   113bc:	bcc	113dc <print_object@@Base+0x55c>
   113c0:	add	r0, r5, #8
   113c4:	bl	128c0 <main@@Base+0x78>
   113c8:	cmp	r0, #0
   113cc:	beq	113dc <print_object@@Base+0x55c>
   113d0:	add	r0, r4, r0
   113d4:	pop	{r4, r5, fp, lr}
   113d8:	b	12908 <main@@Base+0xc0>
   113dc:	mov	r0, #0
   113e0:	pop	{r4, r5, fp, pc}
   113e4:	movw	r0, #11525	; 0x2d05
   113e8:	movt	r0, #1
   113ec:	movw	r1, #11563	; 0x2d2b
   113f0:	movt	r1, #1
   113f4:	movw	r3, #12576	; 0x3120
   113f8:	movt	r3, #1
   113fc:	mov	r2, #202	; 0xca
   11400:	bl	10a78 <__assert_fail@plt>
   11404:	push	{r4, sl, fp, lr}
   11408:	add	fp, sp, #8
   1140c:	cmp	r0, #0
   11410:	beq	1144c <print_object@@Base+0x5cc>
   11414:	mov	r4, r0
   11418:	bl	128b8 <main@@Base+0x70>
   1141c:	sub	r4, r4, r0
   11420:	mov	r0, r4
   11424:	bl	128c0 <main@@Base+0x78>
   11428:	mov	r1, r0
   1142c:	mov	r0, #0
   11430:	cmp	r1, #14
   11434:	popcc	{r4, sl, fp, pc}
   11438:	add	r0, r4, #12
   1143c:	bl	128c0 <main@@Base+0x78>
   11440:	cmp	r0, #0
   11444:	movwne	r0, #1
   11448:	pop	{r4, sl, fp, pc}
   1144c:	movw	r0, #11525	; 0x2d05
   11450:	movt	r0, #1
   11454:	movw	r1, #11563	; 0x2d2b
   11458:	movt	r1, #1
   1145c:	movw	r3, #12631	; 0x3157
   11460:	movt	r3, #1
   11464:	mov	r2, #204	; 0xcc
   11468:	bl	10a78 <__assert_fail@plt>
   1146c:	push	{r4, r5, fp, lr}
   11470:	add	fp, sp, #8
   11474:	cmp	r0, #0
   11478:	beq	114c0 <print_object@@Base+0x640>
   1147c:	mov	r4, r0
   11480:	bl	128b8 <main@@Base+0x70>
   11484:	sub	r5, r4, r0
   11488:	mov	r0, r5
   1148c:	bl	128c0 <main@@Base+0x78>
   11490:	cmp	r0, #14
   11494:	bcc	114b4 <print_object@@Base+0x634>
   11498:	add	r0, r5, #12
   1149c:	bl	128c0 <main@@Base+0x78>
   114a0:	cmp	r0, #0
   114a4:	beq	114b4 <print_object@@Base+0x634>
   114a8:	add	r0, r4, r0
   114ac:	pop	{r4, r5, fp, lr}
   114b0:	b	12914 <main@@Base+0xcc>
   114b4:	mov	r0, #0
   114b8:	mov	r1, #0
   114bc:	pop	{r4, r5, fp, pc}
   114c0:	movw	r0, #11525	; 0x2d05
   114c4:	movt	r0, #1
   114c8:	movw	r1, #11563	; 0x2d2b
   114cc:	movt	r1, #1
   114d0:	movw	r3, #12705	; 0x31a1
   114d4:	movt	r3, #1
   114d8:	mov	r2, #204	; 0xcc
   114dc:	bl	10a78 <__assert_fail@plt>
   114e0:	push	{r4, sl, fp, lr}
   114e4:	add	fp, sp, #8
   114e8:	cmp	r0, #0
   114ec:	beq	11528 <print_object@@Base+0x6a8>
   114f0:	mov	r4, r0
   114f4:	bl	128b8 <main@@Base+0x70>
   114f8:	sub	r4, r4, r0
   114fc:	mov	r0, r4
   11500:	bl	128c0 <main@@Base+0x78>
   11504:	mov	r1, r0
   11508:	mov	r0, #0
   1150c:	cmp	r1, #16
   11510:	popcc	{r4, sl, fp, pc}
   11514:	add	r0, r4, #14
   11518:	bl	128c0 <main@@Base+0x78>
   1151c:	cmp	r0, #0
   11520:	movwne	r0, #1
   11524:	pop	{r4, sl, fp, pc}
   11528:	movw	r0, #11525	; 0x2d05
   1152c:	movt	r0, #1
   11530:	movw	r1, #11563	; 0x2d2b
   11534:	movt	r1, #1
   11538:	movw	r3, #12772	; 0x31e4
   1153c:	movt	r3, #1
   11540:	mov	r2, #205	; 0xcd
   11544:	bl	10a78 <__assert_fail@plt>
   11548:	push	{r4, r5, fp, lr}
   1154c:	add	fp, sp, #8
   11550:	cmp	r0, #0
   11554:	beq	11598 <print_object@@Base+0x718>
   11558:	mov	r4, r0
   1155c:	bl	128b8 <main@@Base+0x70>
   11560:	sub	r5, r4, r0
   11564:	mov	r0, r5
   11568:	bl	128c0 <main@@Base+0x78>
   1156c:	cmp	r0, #16
   11570:	bcc	11590 <print_object@@Base+0x710>
   11574:	add	r0, r5, #14
   11578:	bl	128c0 <main@@Base+0x78>
   1157c:	cmp	r0, #0
   11580:	beq	11590 <print_object@@Base+0x710>
   11584:	add	r0, r4, r0
   11588:	pop	{r4, r5, fp, lr}
   1158c:	b	12920 <main@@Base+0xd8>
   11590:	vmov.i32	d0, #0	; 0x00000000
   11594:	pop	{r4, r5, fp, pc}
   11598:	movw	r0, #11525	; 0x2d05
   1159c:	movt	r0, #1
   115a0:	movw	r1, #11563	; 0x2d2b
   115a4:	movt	r1, #1
   115a8:	movw	r3, #12843	; 0x322b
   115ac:	movt	r3, #1
   115b0:	mov	r2, #205	; 0xcd
   115b4:	bl	10a78 <__assert_fail@plt>
   115b8:	push	{r4, sl, fp, lr}
   115bc:	add	fp, sp, #8
   115c0:	cmp	r0, #0
   115c4:	beq	11600 <print_object@@Base+0x780>
   115c8:	mov	r4, r0
   115cc:	bl	128b8 <main@@Base+0x70>
   115d0:	sub	r4, r4, r0
   115d4:	mov	r0, r4
   115d8:	bl	128c0 <main@@Base+0x78>
   115dc:	mov	r1, r0
   115e0:	mov	r0, #0
   115e4:	cmp	r1, #20
   115e8:	popcc	{r4, sl, fp, pc}
   115ec:	add	r0, r4, #18
   115f0:	bl	128c0 <main@@Base+0x78>
   115f4:	cmp	r0, #0
   115f8:	movwne	r0, #1
   115fc:	pop	{r4, sl, fp, pc}
   11600:	movw	r0, #11525	; 0x2d05
   11604:	movt	r0, #1
   11608:	movw	r1, #11563	; 0x2d2b
   1160c:	movt	r1, #1
   11610:	movw	r3, #12906	; 0x326a
   11614:	movt	r3, #1
   11618:	mov	r2, #207	; 0xcf
   1161c:	bl	10a78 <__assert_fail@plt>
   11620:	push	{r4, r5, fp, lr}
   11624:	add	fp, sp, #8
   11628:	cmp	r0, #0
   1162c:	beq	11670 <print_object@@Base+0x7f0>
   11630:	mov	r4, r0
   11634:	bl	128b8 <main@@Base+0x70>
   11638:	sub	r5, r4, r0
   1163c:	mov	r0, r5
   11640:	bl	128c0 <main@@Base+0x78>
   11644:	cmp	r0, #20
   11648:	bcc	11668 <print_object@@Base+0x7e8>
   1164c:	add	r0, r5, #18
   11650:	bl	128c0 <main@@Base+0x78>
   11654:	cmp	r0, #0
   11658:	beq	11668 <print_object@@Base+0x7e8>
   1165c:	add	r0, r4, r0
   11660:	pop	{r4, r5, fp, lr}
   11664:	b	1292c <main@@Base+0xe4>
   11668:	mov	r0, #0
   1166c:	pop	{r4, r5, fp, pc}
   11670:	movw	r0, #11525	; 0x2d05
   11674:	movt	r0, #1
   11678:	movw	r1, #11563	; 0x2d2b
   1167c:	movt	r1, #1
   11680:	movw	r3, #12973	; 0x32ad
   11684:	movt	r3, #1
   11688:	mov	r2, #207	; 0xcf
   1168c:	bl	10a78 <__assert_fail@plt>
   11690:	push	{r4, sl, fp, lr}
   11694:	add	fp, sp, #8
   11698:	cmp	r0, #0
   1169c:	beq	116d8 <print_object@@Base+0x858>
   116a0:	mov	r4, r0
   116a4:	bl	128b8 <main@@Base+0x70>
   116a8:	sub	r4, r4, r0
   116ac:	mov	r0, r4
   116b0:	bl	128c0 <main@@Base+0x78>
   116b4:	mov	r1, r0
   116b8:	mov	r0, #0
   116bc:	cmp	r1, #22
   116c0:	popcc	{r4, sl, fp, pc}
   116c4:	add	r0, r4, #20
   116c8:	bl	128c0 <main@@Base+0x78>
   116cc:	cmp	r0, #0
   116d0:	movwne	r0, #1
   116d4:	pop	{r4, sl, fp, pc}
   116d8:	movw	r0, #11525	; 0x2d05
   116dc:	movt	r0, #1
   116e0:	movw	r1, #11563	; 0x2d2b
   116e4:	movt	r1, #1
   116e8:	movw	r3, #13044	; 0x32f4
   116ec:	movt	r3, #1
   116f0:	mov	r2, #208	; 0xd0
   116f4:	bl	10a78 <__assert_fail@plt>
   116f8:	push	{r4, r5, fp, lr}
   116fc:	add	fp, sp, #8
   11700:	cmp	r0, #0
   11704:	beq	11748 <print_object@@Base+0x8c8>
   11708:	mov	r4, r0
   1170c:	bl	128b8 <main@@Base+0x70>
   11710:	sub	r5, r4, r0
   11714:	mov	r0, r5
   11718:	bl	128c0 <main@@Base+0x78>
   1171c:	cmp	r0, #22
   11720:	bcc	11740 <print_object@@Base+0x8c0>
   11724:	add	r0, r5, #20
   11728:	bl	128c0 <main@@Base+0x78>
   1172c:	cmp	r0, #0
   11730:	beq	11740 <print_object@@Base+0x8c0>
   11734:	add	r0, r4, r0
   11738:	pop	{r4, r5, fp, lr}
   1173c:	b	1292c <main@@Base+0xe4>
   11740:	mov	r0, #0
   11744:	pop	{r4, r5, fp, pc}
   11748:	movw	r0, #11525	; 0x2d05
   1174c:	movt	r0, #1
   11750:	movw	r1, #11563	; 0x2d2b
   11754:	movt	r1, #1
   11758:	movw	r3, #13106	; 0x3332
   1175c:	movt	r3, #1
   11760:	mov	r2, #208	; 0xd0
   11764:	bl	10a78 <__assert_fail@plt>
   11768:	push	{r4, sl, fp, lr}
   1176c:	add	fp, sp, #8
   11770:	cmp	r0, #0
   11774:	beq	117b0 <print_object@@Base+0x930>
   11778:	mov	r4, r0
   1177c:	bl	128b8 <main@@Base+0x70>
   11780:	sub	r4, r4, r0
   11784:	mov	r0, r4
   11788:	bl	128c0 <main@@Base+0x78>
   1178c:	mov	r1, r0
   11790:	mov	r0, #0
   11794:	cmp	r1, #10
   11798:	popcc	{r4, sl, fp, pc}
   1179c:	add	r0, r4, #8
   117a0:	bl	128c0 <main@@Base+0x78>
   117a4:	cmp	r0, #0
   117a8:	movwne	r0, #1
   117ac:	pop	{r4, sl, fp, pc}
   117b0:	movw	r0, #11525	; 0x2d05
   117b4:	movt	r0, #1
   117b8:	movw	r1, #11563	; 0x2d2b
   117bc:	movt	r1, #1
   117c0:	movw	r3, #13172	; 0x3374
   117c4:	movt	r3, #1
   117c8:	mov	r2, #225	; 0xe1
   117cc:	bl	10a78 <__assert_fail@plt>
   117d0:	push	{r4, r5, fp, lr}
   117d4:	add	fp, sp, #8
   117d8:	cmp	r0, #0
   117dc:	beq	11820 <print_object@@Base+0x9a0>
   117e0:	mov	r4, r0
   117e4:	bl	128b8 <main@@Base+0x70>
   117e8:	sub	r5, r4, r0
   117ec:	mov	r0, r5
   117f0:	bl	128c0 <main@@Base+0x78>
   117f4:	cmp	r0, #10
   117f8:	bcc	11818 <print_object@@Base+0x998>
   117fc:	add	r0, r5, #8
   11800:	bl	128c0 <main@@Base+0x78>
   11804:	cmp	r0, #0
   11808:	beq	11818 <print_object@@Base+0x998>
   1180c:	add	r0, r4, r0
   11810:	pop	{r4, r5, fp, lr}
   11814:	b	1292c <main@@Base+0xe4>
   11818:	mov	r0, #0
   1181c:	pop	{r4, r5, fp, pc}
   11820:	movw	r0, #11525	; 0x2d05
   11824:	movt	r0, #1
   11828:	movw	r1, #11563	; 0x2d2b
   1182c:	movt	r1, #1
   11830:	movw	r3, #13242	; 0x33ba
   11834:	movt	r3, #1
   11838:	mov	r2, #225	; 0xe1
   1183c:	bl	10a78 <__assert_fail@plt>
   11840:	push	{r4, sl, fp, lr}
   11844:	add	fp, sp, #8
   11848:	cmp	r0, #0
   1184c:	beq	11888 <print_object@@Base+0xa08>
   11850:	mov	r4, r0
   11854:	bl	128b8 <main@@Base+0x70>
   11858:	sub	r4, r4, r0
   1185c:	mov	r0, r4
   11860:	bl	128c0 <main@@Base+0x78>
   11864:	mov	r1, r0
   11868:	mov	r0, #0
   1186c:	cmp	r1, #12
   11870:	popcc	{r4, sl, fp, pc}
   11874:	add	r0, r4, #10
   11878:	bl	128c0 <main@@Base+0x78>
   1187c:	cmp	r0, #0
   11880:	movwne	r0, #1
   11884:	pop	{r4, sl, fp, pc}
   11888:	movw	r0, #11525	; 0x2d05
   1188c:	movt	r0, #1
   11890:	movw	r1, #11563	; 0x2d2b
   11894:	movt	r1, #1
   11898:	movw	r3, #13316	; 0x3404
   1189c:	movt	r3, #1
   118a0:	mov	r2, #226	; 0xe2
   118a4:	bl	10a78 <__assert_fail@plt>
   118a8:	push	{r4, r5, fp, lr}
   118ac:	add	fp, sp, #8
   118b0:	cmp	r0, #0
   118b4:	beq	118f8 <print_object@@Base+0xa78>
   118b8:	mov	r4, r0
   118bc:	bl	128b8 <main@@Base+0x70>
   118c0:	sub	r5, r4, r0
   118c4:	mov	r0, r5
   118c8:	bl	128c0 <main@@Base+0x78>
   118cc:	cmp	r0, #12
   118d0:	bcc	118f0 <print_object@@Base+0xa70>
   118d4:	add	r0, r5, #10
   118d8:	bl	128c0 <main@@Base+0x78>
   118dc:	cmp	r0, #0
   118e0:	beq	118f0 <print_object@@Base+0xa70>
   118e4:	add	r0, r4, r0
   118e8:	pop	{r4, r5, fp, lr}
   118ec:	b	128dc <main@@Base+0x94>
   118f0:	mov	r0, #0
   118f4:	pop	{r4, r5, fp, pc}
   118f8:	movw	r0, #11525	; 0x2d05
   118fc:	movt	r0, #1
   11900:	movw	r1, #11563	; 0x2d2b
   11904:	movt	r1, #1
   11908:	movw	r3, #13385	; 0x3449
   1190c:	movt	r3, #1
   11910:	mov	r2, #226	; 0xe2
   11914:	bl	10a78 <__assert_fail@plt>
   11918:	push	{r4, sl, fp, lr}
   1191c:	add	fp, sp, #8
   11920:	cmp	r0, #0
   11924:	beq	11960 <print_object@@Base+0xae0>
   11928:	mov	r4, r0
   1192c:	bl	128b8 <main@@Base+0x70>
   11930:	sub	r4, r4, r0
   11934:	mov	r0, r4
   11938:	bl	128c0 <main@@Base+0x78>
   1193c:	mov	r1, r0
   11940:	mov	r0, #0
   11944:	cmp	r1, #14
   11948:	popcc	{r4, sl, fp, pc}
   1194c:	add	r0, r4, #12
   11950:	bl	128c0 <main@@Base+0x78>
   11954:	cmp	r0, #0
   11958:	movwne	r0, #1
   1195c:	pop	{r4, sl, fp, pc}
   11960:	movw	r0, #11525	; 0x2d05
   11964:	movt	r0, #1
   11968:	movw	r1, #11563	; 0x2d2b
   1196c:	movt	r1, #1
   11970:	movw	r3, #13447	; 0x3487
   11974:	movt	r3, #1
   11978:	mov	r2, #227	; 0xe3
   1197c:	bl	10a78 <__assert_fail@plt>
   11980:	push	{r4, r5, fp, lr}
   11984:	add	fp, sp, #8
   11988:	cmp	r0, #0
   1198c:	beq	119d0 <print_object@@Base+0xb50>
   11990:	mov	r4, r0
   11994:	bl	128b8 <main@@Base+0x70>
   11998:	sub	r5, r4, r0
   1199c:	mov	r0, r5
   119a0:	bl	128c0 <main@@Base+0x78>
   119a4:	cmp	r0, #14
   119a8:	bcc	119c8 <print_object@@Base+0xb48>
   119ac:	add	r0, r5, #12
   119b0:	bl	128c0 <main@@Base+0x78>
   119b4:	cmp	r0, #0
   119b8:	beq	119c8 <print_object@@Base+0xb48>
   119bc:	add	r0, r4, r0
   119c0:	pop	{r4, r5, fp, lr}
   119c4:	b	128dc <main@@Base+0x94>
   119c8:	mov	r0, #0
   119cc:	pop	{r4, r5, fp, pc}
   119d0:	movw	r0, #11525	; 0x2d05
   119d4:	movt	r0, #1
   119d8:	movw	r1, #11563	; 0x2d2b
   119dc:	movt	r1, #1
   119e0:	movw	r3, #13516	; 0x34cc
   119e4:	movt	r3, #1
   119e8:	mov	r2, #227	; 0xe3
   119ec:	bl	10a78 <__assert_fail@plt>

000119f0 <print_enum@@Base>:
   119f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   119f4:	add	fp, sp, #28
   119f8:	sub	sp, sp, #4
   119fc:	mov	r8, r0
   11a00:	bl	11b60 <print_enum@@Base+0x170>
   11a04:	mov	r1, r0
   11a08:	movw	r0, #10767	; 0x2a0f
   11a0c:	movt	r0, #1
   11a10:	bl	109ac <printf@plt>
   11a14:	mov	r0, r8
   11a18:	bl	11be0 <print_enum@@Base+0x1f0>
   11a1c:	mov	r5, r0
   11a20:	movw	r0, #10952	; 0x2ac8
   11a24:	movt	r0, #1
   11a28:	bl	109ac <printf@plt>
   11a2c:	mov	r0, r5
   11a30:	bl	11c60 <print_enum@@Base+0x270>
   11a34:	cmp	r0, #0
   11a38:	beq	11af4 <print_enum@@Base+0x104>
   11a3c:	mov	r6, #0
   11a40:	movw	r7, #10767	; 0x2a0f
   11a44:	movt	r7, #1
   11a48:	movw	r9, #10978	; 0x2ae2
   11a4c:	movt	r9, #1
   11a50:	movw	sl, #10964	; 0x2ad4
   11a54:	movt	sl, #1
   11a58:	mov	r0, r5
   11a5c:	mov	r1, r6
   11a60:	bl	11c74 <print_enum@@Base+0x284>
   11a64:	mov	r4, r0
   11a68:	cmp	r6, #0
   11a6c:	beq	11a78 <print_enum@@Base+0x88>
   11a70:	mov	r0, #44	; 0x2c
   11a74:	bl	10a3c <putchar@plt>
   11a78:	mov	r0, r4
   11a7c:	bl	11cc4 <print_enum@@Base+0x2d4>
   11a80:	mov	r1, r0
   11a84:	mov	r0, r7
   11a88:	bl	109ac <printf@plt>
   11a8c:	mov	r0, r4
   11a90:	bl	11d44 <print_enum@@Base+0x354>
   11a94:	cmp	r0, #0
   11a98:	beq	11ab4 <print_enum@@Base+0xc4>
   11a9c:	mov	r0, r4
   11aa0:	bl	11dac <print_enum@@Base+0x3bc>
   11aa4:	mov	r2, r0
   11aa8:	mov	r0, sl
   11aac:	mov	r3, r1
   11ab0:	bl	109ac <printf@plt>
   11ab4:	mov	r0, r4
   11ab8:	bl	11e20 <print_enum@@Base+0x430>
   11abc:	cmp	r0, #0
   11ac0:	beq	11ad8 <print_enum@@Base+0xe8>
   11ac4:	mov	r0, r9
   11ac8:	bl	109ac <printf@plt>
   11acc:	mov	r0, r4
   11ad0:	bl	11e88 <print_enum@@Base+0x498>
   11ad4:	bl	10e80 <print_object@@Base>
   11ad8:	mov	r0, #125	; 0x7d
   11adc:	bl	10a3c <putchar@plt>
   11ae0:	add	r6, r6, #1
   11ae4:	mov	r0, r5
   11ae8:	bl	11c60 <print_enum@@Base+0x270>
   11aec:	cmp	r6, r0
   11af0:	bcc	11a58 <print_enum@@Base+0x68>
   11af4:	mov	r0, #93	; 0x5d
   11af8:	bl	10a3c <putchar@plt>
   11afc:	mov	r0, r8
   11b00:	bl	11f00 <print_enum@@Base+0x510>
   11b04:	cmp	r0, #0
   11b08:	beq	11b38 <print_enum@@Base+0x148>
   11b0c:	mov	r0, r8
   11b10:	bl	11f68 <print_enum@@Base+0x578>
   11b14:	movw	r2, #10890	; 0x2a8a
   11b18:	movt	r2, #1
   11b1c:	movw	r1, #10885	; 0x2a85
   11b20:	movt	r1, #1
   11b24:	cmp	r0, #0
   11b28:	moveq	r1, r2
   11b2c:	movw	r0, #10989	; 0x2aed
   11b30:	movt	r0, #1
   11b34:	bl	109ac <printf@plt>
   11b38:	movw	r0, #11004	; 0x2afc
   11b3c:	movt	r0, #1
   11b40:	bl	109ac <printf@plt>
   11b44:	mov	r0, r8
   11b48:	bl	11fd8 <print_enum@@Base+0x5e8>
   11b4c:	bl	10b74 <print_type@@Base>
   11b50:	mov	r0, #125	; 0x7d
   11b54:	sub	sp, fp, #28
   11b58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11b5c:	b	10a3c <putchar@plt>
   11b60:	push	{r4, r5, fp, lr}
   11b64:	add	fp, sp, #8
   11b68:	cmp	r0, #0
   11b6c:	beq	11bc0 <print_enum@@Base+0x1d0>
   11b70:	mov	r4, r0
   11b74:	bl	128b8 <main@@Base+0x70>
   11b78:	sub	r5, r4, r0
   11b7c:	mov	r0, r5
   11b80:	bl	128c0 <main@@Base+0x78>
   11b84:	cmp	r0, #6
   11b88:	bcc	11bb4 <print_enum@@Base+0x1c4>
   11b8c:	add	r0, r5, #4
   11b90:	bl	128c0 <main@@Base+0x78>
   11b94:	cmp	r0, #0
   11b98:	beq	11bb4 <print_enum@@Base+0x1c4>
   11b9c:	add	r4, r4, r0
   11ba0:	mov	r0, r4
   11ba4:	bl	128e8 <main@@Base+0xa0>
   11ba8:	add	r0, r4, r0
   11bac:	add	r0, r0, #4
   11bb0:	pop	{r4, r5, fp, pc}
   11bb4:	movw	r0, #12134	; 0x2f66
   11bb8:	movt	r0, #1
   11bbc:	b	11bc8 <print_enum@@Base+0x1d8>
   11bc0:	movw	r0, #11525	; 0x2d05
   11bc4:	movt	r0, #1
   11bc8:	movw	r1, #11563	; 0x2d2b
   11bcc:	movt	r1, #1
   11bd0:	movw	r3, #13578	; 0x350a
   11bd4:	movt	r3, #1
   11bd8:	mov	r2, #177	; 0xb1
   11bdc:	bl	10a78 <__assert_fail@plt>
   11be0:	push	{r4, r5, fp, lr}
   11be4:	add	fp, sp, #8
   11be8:	cmp	r0, #0
   11bec:	beq	11c40 <print_enum@@Base+0x250>
   11bf0:	mov	r4, r0
   11bf4:	bl	128b8 <main@@Base+0x70>
   11bf8:	sub	r5, r4, r0
   11bfc:	mov	r0, r5
   11c00:	bl	128c0 <main@@Base+0x78>
   11c04:	cmp	r0, #8
   11c08:	bcc	11c34 <print_enum@@Base+0x244>
   11c0c:	add	r0, r5, #6
   11c10:	bl	128c0 <main@@Base+0x78>
   11c14:	cmp	r0, #0
   11c18:	beq	11c34 <print_enum@@Base+0x244>
   11c1c:	add	r4, r4, r0
   11c20:	mov	r0, r4
   11c24:	bl	128e8 <main@@Base+0xa0>
   11c28:	add	r0, r4, r0
   11c2c:	add	r0, r0, #4
   11c30:	pop	{r4, r5, fp, pc}
   11c34:	movw	r0, #12134	; 0x2f66
   11c38:	movt	r0, #1
   11c3c:	b	11c48 <print_enum@@Base+0x258>
   11c40:	movw	r0, #11525	; 0x2d05
   11c44:	movt	r0, #1
   11c48:	movw	r1, #11563	; 0x2d2b
   11c4c:	movt	r1, #1
   11c50:	movw	r3, #13645	; 0x354d
   11c54:	movt	r3, #1
   11c58:	mov	r2, #183	; 0xb7
   11c5c:	bl	10a78 <__assert_fail@plt>
   11c60:	cmp	r0, #0
   11c64:	moveq	r0, #0
   11c68:	bxeq	lr
   11c6c:	sub	r0, r0, #4
   11c70:	b	128e8 <main@@Base+0xa0>
   11c74:	push	{r4, r5, fp, lr}
   11c78:	add	fp, sp, #8
   11c7c:	mov	r4, r1
   11c80:	mov	r5, r0
   11c84:	bl	128f4 <main@@Base+0xac>
   11c88:	cmp	r0, r4
   11c8c:	bls	11ca4 <print_enum@@Base+0x2b4>
   11c90:	add	r4, r5, r4, lsl #2
   11c94:	mov	r0, r4
   11c98:	bl	128e8 <main@@Base+0xa0>
   11c9c:	add	r0, r4, r0
   11ca0:	pop	{r4, r5, fp, pc}
   11ca4:	movw	r0, #12238	; 0x2fce
   11ca8:	movt	r0, #1
   11cac:	movw	r1, #11563	; 0x2d2b
   11cb0:	movt	r1, #1
   11cb4:	movw	r3, #13718	; 0x3596
   11cb8:	movt	r3, #1
   11cbc:	mov	r2, #156	; 0x9c
   11cc0:	bl	10a78 <__assert_fail@plt>
   11cc4:	push	{r4, r5, fp, lr}
   11cc8:	add	fp, sp, #8
   11ccc:	cmp	r0, #0
   11cd0:	beq	11d24 <print_enum@@Base+0x334>
   11cd4:	mov	r4, r0
   11cd8:	bl	128b8 <main@@Base+0x70>
   11cdc:	sub	r5, r4, r0
   11ce0:	mov	r0, r5
   11ce4:	bl	128c0 <main@@Base+0x78>
   11ce8:	cmp	r0, #6
   11cec:	bcc	11d18 <print_enum@@Base+0x328>
   11cf0:	add	r0, r5, #4
   11cf4:	bl	128c0 <main@@Base+0x78>
   11cf8:	cmp	r0, #0
   11cfc:	beq	11d18 <print_enum@@Base+0x328>
   11d00:	add	r4, r4, r0
   11d04:	mov	r0, r4
   11d08:	bl	128e8 <main@@Base+0xa0>
   11d0c:	add	r0, r4, r0
   11d10:	add	r0, r0, #4
   11d14:	pop	{r4, r5, fp, pc}
   11d18:	movw	r0, #12134	; 0x2f66
   11d1c:	movt	r0, #1
   11d20:	b	11d2c <print_enum@@Base+0x33c>
   11d24:	movw	r0, #11525	; 0x2d05
   11d28:	movt	r0, #1
   11d2c:	movw	r1, #11563	; 0x2d2b
   11d30:	movt	r1, #1
   11d34:	movw	r3, #13805	; 0x35ed
   11d38:	movt	r3, #1
   11d3c:	mov	r2, #159	; 0x9f
   11d40:	bl	10a78 <__assert_fail@plt>
   11d44:	push	{r4, sl, fp, lr}
   11d48:	add	fp, sp, #8
   11d4c:	cmp	r0, #0
   11d50:	beq	11d8c <print_enum@@Base+0x39c>
   11d54:	mov	r4, r0
   11d58:	bl	128b8 <main@@Base+0x70>
   11d5c:	sub	r4, r4, r0
   11d60:	mov	r0, r4
   11d64:	bl	128c0 <main@@Base+0x78>
   11d68:	mov	r1, r0
   11d6c:	mov	r0, #0
   11d70:	cmp	r1, #8
   11d74:	popcc	{r4, sl, fp, pc}
   11d78:	add	r0, r4, #6
   11d7c:	bl	128c0 <main@@Base+0x78>
   11d80:	cmp	r0, #0
   11d84:	movwne	r0, #1
   11d88:	pop	{r4, sl, fp, pc}
   11d8c:	movw	r0, #11525	; 0x2d05
   11d90:	movt	r0, #1
   11d94:	movw	r1, #11563	; 0x2d2b
   11d98:	movt	r1, #1
   11d9c:	movw	r3, #13878	; 0x3636
   11da0:	movt	r3, #1
   11da4:	mov	r2, #160	; 0xa0
   11da8:	bl	10a78 <__assert_fail@plt>
   11dac:	push	{r4, r5, fp, lr}
   11db0:	add	fp, sp, #8
   11db4:	cmp	r0, #0
   11db8:	beq	11e00 <print_enum@@Base+0x410>
   11dbc:	mov	r4, r0
   11dc0:	bl	128b8 <main@@Base+0x70>
   11dc4:	sub	r5, r4, r0
   11dc8:	mov	r0, r5
   11dcc:	bl	128c0 <main@@Base+0x78>
   11dd0:	cmp	r0, #8
   11dd4:	bcc	11df4 <print_enum@@Base+0x404>
   11dd8:	add	r0, r5, #6
   11ddc:	bl	128c0 <main@@Base+0x78>
   11de0:	cmp	r0, #0
   11de4:	beq	11df4 <print_enum@@Base+0x404>
   11de8:	add	r0, r4, r0
   11dec:	pop	{r4, r5, fp, lr}
   11df0:	b	12914 <main@@Base+0xcc>
   11df4:	mov	r0, #0
   11df8:	mov	r1, #0
   11dfc:	pop	{r4, r5, fp, pc}
   11e00:	movw	r0, #11525	; 0x2d05
   11e04:	movt	r0, #1
   11e08:	movw	r1, #11563	; 0x2d2b
   11e0c:	movt	r1, #1
   11e10:	movw	r3, #13946	; 0x367a
   11e14:	movt	r3, #1
   11e18:	mov	r2, #160	; 0xa0
   11e1c:	bl	10a78 <__assert_fail@plt>
   11e20:	push	{r4, sl, fp, lr}
   11e24:	add	fp, sp, #8
   11e28:	cmp	r0, #0
   11e2c:	beq	11e68 <print_enum@@Base+0x478>
   11e30:	mov	r4, r0
   11e34:	bl	128b8 <main@@Base+0x70>
   11e38:	sub	r4, r4, r0
   11e3c:	mov	r0, r4
   11e40:	bl	128c0 <main@@Base+0x78>
   11e44:	mov	r1, r0
   11e48:	mov	r0, #0
   11e4c:	cmp	r1, #10
   11e50:	popcc	{r4, sl, fp, pc}
   11e54:	add	r0, r4, #8
   11e58:	bl	128c0 <main@@Base+0x78>
   11e5c:	cmp	r0, #0
   11e60:	movwne	r0, #1
   11e64:	pop	{r4, sl, fp, pc}
   11e68:	movw	r0, #11525	; 0x2d05
   11e6c:	movt	r0, #1
   11e70:	movw	r1, #11563	; 0x2d2b
   11e74:	movt	r1, #1
   11e78:	movw	r3, #14007	; 0x36b7
   11e7c:	movt	r3, #1
   11e80:	mov	r2, #167	; 0xa7
   11e84:	bl	10a78 <__assert_fail@plt>
   11e88:	push	{r4, r5, r6, sl, fp, lr}
   11e8c:	add	fp, sp, #16
   11e90:	cmp	r0, #0
   11e94:	beq	11ee0 <print_enum@@Base+0x4f0>
   11e98:	mov	r4, r0
   11e9c:	bl	128b8 <main@@Base+0x70>
   11ea0:	sub	r6, r4, r0
   11ea4:	mov	r0, r6
   11ea8:	bl	128c0 <main@@Base+0x78>
   11eac:	mov	r5, #0
   11eb0:	cmp	r0, #10
   11eb4:	bcc	11ed8 <print_enum@@Base+0x4e8>
   11eb8:	add	r0, r6, #8
   11ebc:	bl	128c0 <main@@Base+0x78>
   11ec0:	cmp	r0, #0
   11ec4:	beq	11ed8 <print_enum@@Base+0x4e8>
   11ec8:	add	r4, r4, r0
   11ecc:	mov	r0, r4
   11ed0:	bl	128e8 <main@@Base+0xa0>
   11ed4:	add	r5, r4, r0
   11ed8:	mov	r0, r5
   11edc:	pop	{r4, r5, r6, sl, fp, pc}
   11ee0:	movw	r0, #11525	; 0x2d05
   11ee4:	movt	r0, #1
   11ee8:	movw	r1, #11563	; 0x2d2b
   11eec:	movt	r1, #1
   11ef0:	movw	r3, #14076	; 0x36fc
   11ef4:	movt	r3, #1
   11ef8:	mov	r2, #167	; 0xa7
   11efc:	bl	10a78 <__assert_fail@plt>
   11f00:	push	{r4, sl, fp, lr}
   11f04:	add	fp, sp, #8
   11f08:	cmp	r0, #0
   11f0c:	beq	11f48 <print_enum@@Base+0x558>
   11f10:	mov	r4, r0
   11f14:	bl	128b8 <main@@Base+0x70>
   11f18:	sub	r4, r4, r0
   11f1c:	mov	r0, r4
   11f20:	bl	128c0 <main@@Base+0x78>
   11f24:	mov	r1, r0
   11f28:	mov	r0, #0
   11f2c:	cmp	r1, #10
   11f30:	popcc	{r4, sl, fp, pc}
   11f34:	add	r0, r4, #8
   11f38:	bl	128c0 <main@@Base+0x78>
   11f3c:	cmp	r0, #0
   11f40:	movwne	r0, #1
   11f44:	pop	{r4, sl, fp, pc}
   11f48:	movw	r0, #11525	; 0x2d05
   11f4c:	movt	r0, #1
   11f50:	movw	r1, #11563	; 0x2d2b
   11f54:	movt	r1, #1
   11f58:	movw	r3, #14156	; 0x374c
   11f5c:	movt	r3, #1
   11f60:	mov	r2, #184	; 0xb8
   11f64:	bl	10a78 <__assert_fail@plt>
   11f68:	push	{r4, r5, fp, lr}
   11f6c:	add	fp, sp, #8
   11f70:	cmp	r0, #0
   11f74:	beq	11fb8 <print_enum@@Base+0x5c8>
   11f78:	mov	r4, r0
   11f7c:	bl	128b8 <main@@Base+0x70>
   11f80:	sub	r5, r4, r0
   11f84:	mov	r0, r5
   11f88:	bl	128c0 <main@@Base+0x78>
   11f8c:	cmp	r0, #10
   11f90:	bcc	11fb0 <print_enum@@Base+0x5c0>
   11f94:	add	r0, r5, #8
   11f98:	bl	128c0 <main@@Base+0x78>
   11f9c:	cmp	r0, #0
   11fa0:	beq	11fb0 <print_enum@@Base+0x5c0>
   11fa4:	add	r0, r4, r0
   11fa8:	pop	{r4, r5, fp, lr}
   11fac:	b	1292c <main@@Base+0xe4>
   11fb0:	mov	r0, #0
   11fb4:	pop	{r4, r5, fp, pc}
   11fb8:	movw	r0, #11525	; 0x2d05
   11fbc:	movt	r0, #1
   11fc0:	movw	r1, #11563	; 0x2d2b
   11fc4:	movt	r1, #1
   11fc8:	movw	r3, #14221	; 0x378d
   11fcc:	movt	r3, #1
   11fd0:	mov	r2, #184	; 0xb8
   11fd4:	bl	10a78 <__assert_fail@plt>
   11fd8:	push	{r4, r5, fp, lr}
   11fdc:	add	fp, sp, #8
   11fe0:	cmp	r0, #0
   11fe4:	beq	12034 <print_enum@@Base+0x644>
   11fe8:	mov	r4, r0
   11fec:	bl	128b8 <main@@Base+0x70>
   11ff0:	sub	r5, r4, r0
   11ff4:	mov	r0, r5
   11ff8:	bl	128c0 <main@@Base+0x78>
   11ffc:	cmp	r0, #12
   12000:	bcc	12028 <print_enum@@Base+0x638>
   12004:	add	r0, r5, #10
   12008:	bl	128c0 <main@@Base+0x78>
   1200c:	cmp	r0, #0
   12010:	beq	12028 <print_enum@@Base+0x638>
   12014:	add	r4, r4, r0
   12018:	mov	r0, r4
   1201c:	bl	128e8 <main@@Base+0xa0>
   12020:	add	r0, r4, r0
   12024:	pop	{r4, r5, fp, pc}
   12028:	movw	r0, #12134	; 0x2f66
   1202c:	movt	r0, #1
   12030:	b	1203c <print_enum@@Base+0x64c>
   12034:	movw	r0, #11525	; 0x2d05
   12038:	movt	r0, #1
   1203c:	movw	r1, #11563	; 0x2d2b
   12040:	movt	r1, #1
   12044:	movw	r3, #14290	; 0x37d2
   12048:	movt	r3, #1
   1204c:	mov	r2, #185	; 0xb9
   12050:	bl	10a78 <__assert_fail@plt>

00012054 <print_schema@@Base>:
   12054:	push	{r4, r5, r6, sl, fp, lr}
   12058:	add	fp, sp, #16
   1205c:	mov	r4, r0
   12060:	bl	121bc <print_schema@@Base+0x168>
   12064:	mov	r5, r0
   12068:	mov	r0, #123	; 0x7b
   1206c:	bl	10a3c <putchar@plt>
   12070:	movw	r0, #11024	; 0x2b10
   12074:	movt	r0, #1
   12078:	bl	109ac <printf@plt>
   1207c:	mov	r0, r5
   12080:	bl	1223c <print_schema@@Base+0x1e8>
   12084:	cmp	r0, #0
   12088:	beq	120c4 <print_schema@@Base+0x70>
   1208c:	mov	r6, #0
   12090:	cmp	r6, #0
   12094:	beq	120a0 <print_schema@@Base+0x4c>
   12098:	mov	r0, #44	; 0x2c
   1209c:	bl	10a3c <putchar@plt>
   120a0:	mov	r0, r5
   120a4:	mov	r1, r6
   120a8:	bl	12250 <print_schema@@Base+0x1fc>
   120ac:	bl	10e80 <print_object@@Base>
   120b0:	add	r6, r6, #1
   120b4:	mov	r0, r5
   120b8:	bl	1223c <print_schema@@Base+0x1e8>
   120bc:	cmp	r6, r0
   120c0:	bcc	12090 <print_schema@@Base+0x3c>
   120c4:	mov	r0, #93	; 0x5d
   120c8:	bl	10a3c <putchar@plt>
   120cc:	mov	r0, r4
   120d0:	bl	122a0 <print_schema@@Base+0x24c>
   120d4:	mov	r5, r0
   120d8:	movw	r0, #11036	; 0x2b1c
   120dc:	movt	r0, #1
   120e0:	bl	109ac <printf@plt>
   120e4:	mov	r0, r5
   120e8:	bl	11c60 <print_enum@@Base+0x270>
   120ec:	cmp	r0, #0
   120f0:	beq	1212c <print_schema@@Base+0xd8>
   120f4:	mov	r6, #0
   120f8:	cmp	r6, #0
   120fc:	beq	12108 <print_schema@@Base+0xb4>
   12100:	mov	r0, #44	; 0x2c
   12104:	bl	10a3c <putchar@plt>
   12108:	mov	r0, r5
   1210c:	mov	r1, r6
   12110:	bl	12320 <print_schema@@Base+0x2cc>
   12114:	bl	119f0 <print_enum@@Base>
   12118:	add	r6, r6, #1
   1211c:	mov	r0, r5
   12120:	bl	11c60 <print_enum@@Base+0x270>
   12124:	cmp	r6, r0
   12128:	bcc	120f8 <print_schema@@Base+0xa4>
   1212c:	mov	r0, #93	; 0x5d
   12130:	bl	10a3c <putchar@plt>
   12134:	mov	r0, r4
   12138:	bl	12370 <print_schema@@Base+0x31c>
   1213c:	cmp	r0, #0
   12140:	beq	1215c <print_schema@@Base+0x108>
   12144:	mov	r0, r4
   12148:	bl	123d8 <print_schema@@Base+0x384>
   1214c:	mov	r1, r0
   12150:	movw	r0, #11047	; 0x2b27
   12154:	movt	r0, #1
   12158:	bl	109ac <printf@plt>
   1215c:	mov	r0, r4
   12160:	bl	12454 <print_schema@@Base+0x400>
   12164:	cmp	r0, #0
   12168:	beq	12184 <print_schema@@Base+0x130>
   1216c:	mov	r0, r4
   12170:	bl	124bc <print_schema@@Base+0x468>
   12174:	mov	r1, r0
   12178:	movw	r0, #11066	; 0x2b3a
   1217c:	movt	r0, #1
   12180:	bl	109ac <printf@plt>
   12184:	mov	r0, r4
   12188:	bl	12538 <print_schema@@Base+0x4e4>
   1218c:	cmp	r0, #0
   12190:	beq	121ac <print_schema@@Base+0x158>
   12194:	movw	r0, #11083	; 0x2b4b
   12198:	movt	r0, #1
   1219c:	bl	109ac <printf@plt>
   121a0:	mov	r0, r4
   121a4:	bl	125a0 <print_schema@@Base+0x54c>
   121a8:	bl	10e80 <print_object@@Base>
   121ac:	movw	r0, #15131	; 0x3b1b
   121b0:	movt	r0, #1
   121b4:	pop	{r4, r5, r6, sl, fp, lr}
   121b8:	b	109f4 <puts@plt>
   121bc:	push	{r4, r5, fp, lr}
   121c0:	add	fp, sp, #8
   121c4:	cmp	r0, #0
   121c8:	beq	1221c <print_schema@@Base+0x1c8>
   121cc:	mov	r4, r0
   121d0:	bl	128b8 <main@@Base+0x70>
   121d4:	sub	r5, r4, r0
   121d8:	mov	r0, r5
   121dc:	bl	128c0 <main@@Base+0x78>
   121e0:	cmp	r0, #6
   121e4:	bcc	12210 <print_schema@@Base+0x1bc>
   121e8:	add	r0, r5, #4
   121ec:	bl	128c0 <main@@Base+0x78>
   121f0:	cmp	r0, #0
   121f4:	beq	12210 <print_schema@@Base+0x1bc>
   121f8:	add	r4, r4, r0
   121fc:	mov	r0, r4
   12200:	bl	128e8 <main@@Base+0xa0>
   12204:	add	r0, r4, r0
   12208:	add	r0, r0, #4
   1220c:	pop	{r4, r5, fp, pc}
   12210:	movw	r0, #12134	; 0x2f66
   12214:	movt	r0, #1
   12218:	b	12224 <print_schema@@Base+0x1d0>
   1221c:	movw	r0, #11525	; 0x2d05
   12220:	movt	r0, #1
   12224:	movw	r1, #11563	; 0x2d2b
   12228:	movt	r1, #1
   1222c:	movw	r3, #14371	; 0x3823
   12230:	movt	r3, #1
   12234:	mov	r2, #237	; 0xed
   12238:	bl	10a78 <__assert_fail@plt>
   1223c:	cmp	r0, #0
   12240:	moveq	r0, #0
   12244:	bxeq	lr
   12248:	sub	r0, r0, #4
   1224c:	b	128e8 <main@@Base+0xa0>
   12250:	push	{r4, r5, fp, lr}
   12254:	add	fp, sp, #8
   12258:	mov	r4, r1
   1225c:	mov	r5, r0
   12260:	bl	128f4 <main@@Base+0xac>
   12264:	cmp	r0, r4
   12268:	bls	12280 <print_schema@@Base+0x22c>
   1226c:	add	r4, r5, r4, lsl #2
   12270:	mov	r0, r4
   12274:	bl	128e8 <main@@Base+0xa0>
   12278:	add	r0, r4, r0
   1227c:	pop	{r4, r5, fp, pc}
   12280:	movw	r0, #12238	; 0x2fce
   12284:	movt	r0, #1
   12288:	movw	r1, #11563	; 0x2d2b
   1228c:	movt	r1, #1
   12290:	movw	r3, #14448	; 0x3870
   12294:	movt	r3, #1
   12298:	mov	r2, #215	; 0xd7
   1229c:	bl	10a78 <__assert_fail@plt>
   122a0:	push	{r4, r5, fp, lr}
   122a4:	add	fp, sp, #8
   122a8:	cmp	r0, #0
   122ac:	beq	12300 <print_schema@@Base+0x2ac>
   122b0:	mov	r4, r0
   122b4:	bl	128b8 <main@@Base+0x70>
   122b8:	sub	r5, r4, r0
   122bc:	mov	r0, r5
   122c0:	bl	128c0 <main@@Base+0x78>
   122c4:	cmp	r0, #8
   122c8:	bcc	122f4 <print_schema@@Base+0x2a0>
   122cc:	add	r0, r5, #6
   122d0:	bl	128c0 <main@@Base+0x78>
   122d4:	cmp	r0, #0
   122d8:	beq	122f4 <print_schema@@Base+0x2a0>
   122dc:	add	r4, r4, r0
   122e0:	mov	r0, r4
   122e4:	bl	128e8 <main@@Base+0xa0>
   122e8:	add	r0, r4, r0
   122ec:	add	r0, r0, #4
   122f0:	pop	{r4, r5, fp, pc}
   122f4:	movw	r0, #12134	; 0x2f66
   122f8:	movt	r0, #1
   122fc:	b	12308 <print_schema@@Base+0x2b4>
   12300:	movw	r0, #11525	; 0x2d05
   12304:	movt	r0, #1
   12308:	movw	r1, #11563	; 0x2d2b
   1230c:	movt	r1, #1
   12310:	movw	r3, #14532	; 0x38c4
   12314:	movt	r3, #1
   12318:	mov	r2, #238	; 0xee
   1231c:	bl	10a78 <__assert_fail@plt>
   12320:	push	{r4, r5, fp, lr}
   12324:	add	fp, sp, #8
   12328:	mov	r4, r1
   1232c:	mov	r5, r0
   12330:	bl	128f4 <main@@Base+0xac>
   12334:	cmp	r0, r4
   12338:	bls	12350 <print_schema@@Base+0x2fc>
   1233c:	add	r4, r5, r4, lsl #2
   12340:	mov	r0, r4
   12344:	bl	128e8 <main@@Base+0xa0>
   12348:	add	r0, r4, r0
   1234c:	pop	{r4, r5, fp, pc}
   12350:	movw	r0, #12238	; 0x2fce
   12354:	movt	r0, #1
   12358:	movw	r1, #11563	; 0x2d2b
   1235c:	movt	r1, #1
   12360:	movw	r3, #14605	; 0x390d
   12364:	movt	r3, #1
   12368:	mov	r2, #174	; 0xae
   1236c:	bl	10a78 <__assert_fail@plt>
   12370:	push	{r4, sl, fp, lr}
   12374:	add	fp, sp, #8
   12378:	cmp	r0, #0
   1237c:	beq	123b8 <print_schema@@Base+0x364>
   12380:	mov	r4, r0
   12384:	bl	128b8 <main@@Base+0x70>
   12388:	sub	r4, r4, r0
   1238c:	mov	r0, r4
   12390:	bl	128c0 <main@@Base+0x78>
   12394:	mov	r1, r0
   12398:	mov	r0, #0
   1239c:	cmp	r1, #10
   123a0:	popcc	{r4, sl, fp, pc}
   123a4:	add	r0, r4, #8
   123a8:	bl	128c0 <main@@Base+0x78>
   123ac:	cmp	r0, #0
   123b0:	movwne	r0, #1
   123b4:	pop	{r4, sl, fp, pc}
   123b8:	movw	r0, #11525	; 0x2d05
   123bc:	movt	r0, #1
   123c0:	movw	r1, #11563	; 0x2d2b
   123c4:	movt	r1, #1
   123c8:	movw	r3, #14683	; 0x395b
   123cc:	movt	r3, #1
   123d0:	mov	r2, #239	; 0xef
   123d4:	bl	10a78 <__assert_fail@plt>
   123d8:	push	{r4, r5, r6, sl, fp, lr}
   123dc:	add	fp, sp, #16
   123e0:	cmp	r0, #0
   123e4:	beq	12434 <print_schema@@Base+0x3e0>
   123e8:	mov	r4, r0
   123ec:	bl	128b8 <main@@Base+0x70>
   123f0:	sub	r6, r4, r0
   123f4:	mov	r0, r6
   123f8:	bl	128c0 <main@@Base+0x78>
   123fc:	mov	r5, #0
   12400:	cmp	r0, #10
   12404:	bcc	1242c <print_schema@@Base+0x3d8>
   12408:	add	r0, r6, #8
   1240c:	bl	128c0 <main@@Base+0x78>
   12410:	cmp	r0, #0
   12414:	beq	1242c <print_schema@@Base+0x3d8>
   12418:	add	r4, r4, r0
   1241c:	mov	r0, r4
   12420:	bl	128e8 <main@@Base+0xa0>
   12424:	add	r0, r4, r0
   12428:	add	r5, r0, #4
   1242c:	mov	r0, r5
   12430:	pop	{r4, r5, r6, sl, fp, pc}
   12434:	movw	r0, #11525	; 0x2d05
   12438:	movt	r0, #1
   1243c:	movw	r1, #11563	; 0x2d2b
   12440:	movt	r1, #1
   12444:	movw	r3, #14754	; 0x39a2
   12448:	movt	r3, #1
   1244c:	mov	r2, #239	; 0xef
   12450:	bl	10a78 <__assert_fail@plt>
   12454:	push	{r4, sl, fp, lr}
   12458:	add	fp, sp, #8
   1245c:	cmp	r0, #0
   12460:	beq	1249c <print_schema@@Base+0x448>
   12464:	mov	r4, r0
   12468:	bl	128b8 <main@@Base+0x70>
   1246c:	sub	r4, r4, r0
   12470:	mov	r0, r4
   12474:	bl	128c0 <main@@Base+0x78>
   12478:	mov	r1, r0
   1247c:	mov	r0, #0
   12480:	cmp	r1, #12
   12484:	popcc	{r4, sl, fp, pc}
   12488:	add	r0, r4, #10
   1248c:	bl	128c0 <main@@Base+0x78>
   12490:	cmp	r0, #0
   12494:	movwne	r0, #1
   12498:	pop	{r4, sl, fp, pc}
   1249c:	movw	r0, #11525	; 0x2d05
   124a0:	movt	r0, #1
   124a4:	movw	r1, #11563	; 0x2d2b
   124a8:	movt	r1, #1
   124ac:	movw	r3, #14831	; 0x39ef
   124b0:	movt	r3, #1
   124b4:	mov	r2, #240	; 0xf0
   124b8:	bl	10a78 <__assert_fail@plt>
   124bc:	push	{r4, r5, r6, sl, fp, lr}
   124c0:	add	fp, sp, #16
   124c4:	cmp	r0, #0
   124c8:	beq	12518 <print_schema@@Base+0x4c4>
   124cc:	mov	r4, r0
   124d0:	bl	128b8 <main@@Base+0x70>
   124d4:	sub	r6, r4, r0
   124d8:	mov	r0, r6
   124dc:	bl	128c0 <main@@Base+0x78>
   124e0:	mov	r5, #0
   124e4:	cmp	r0, #12
   124e8:	bcc	12510 <print_schema@@Base+0x4bc>
   124ec:	add	r0, r6, #10
   124f0:	bl	128c0 <main@@Base+0x78>
   124f4:	cmp	r0, #0
   124f8:	beq	12510 <print_schema@@Base+0x4bc>
   124fc:	add	r4, r4, r0
   12500:	mov	r0, r4
   12504:	bl	128e8 <main@@Base+0xa0>
   12508:	add	r0, r4, r0
   1250c:	add	r5, r0, #4
   12510:	mov	r0, r5
   12514:	pop	{r4, r5, r6, sl, fp, pc}
   12518:	movw	r0, #11525	; 0x2d05
   1251c:	movt	r0, #1
   12520:	movw	r1, #11563	; 0x2d2b
   12524:	movt	r1, #1
   12528:	movw	r3, #14900	; 0x3a34
   1252c:	movt	r3, #1
   12530:	mov	r2, #240	; 0xf0
   12534:	bl	10a78 <__assert_fail@plt>
   12538:	push	{r4, sl, fp, lr}
   1253c:	add	fp, sp, #8
   12540:	cmp	r0, #0
   12544:	beq	12580 <print_schema@@Base+0x52c>
   12548:	mov	r4, r0
   1254c:	bl	128b8 <main@@Base+0x70>
   12550:	sub	r4, r4, r0
   12554:	mov	r0, r4
   12558:	bl	128c0 <main@@Base+0x78>
   1255c:	mov	r1, r0
   12560:	mov	r0, #0
   12564:	cmp	r1, #14
   12568:	popcc	{r4, sl, fp, pc}
   1256c:	add	r0, r4, #12
   12570:	bl	128c0 <main@@Base+0x78>
   12574:	cmp	r0, #0
   12578:	movwne	r0, #1
   1257c:	pop	{r4, sl, fp, pc}
   12580:	movw	r0, #11525	; 0x2d05
   12584:	movt	r0, #1
   12588:	movw	r1, #11563	; 0x2d2b
   1258c:	movt	r1, #1
   12590:	movw	r3, #14975	; 0x3a7f
   12594:	movt	r3, #1
   12598:	mov	r2, #241	; 0xf1
   1259c:	bl	10a78 <__assert_fail@plt>
   125a0:	push	{r4, r5, r6, sl, fp, lr}
   125a4:	add	fp, sp, #16
   125a8:	cmp	r0, #0
   125ac:	beq	125f8 <print_schema@@Base+0x5a4>
   125b0:	mov	r4, r0
   125b4:	bl	128b8 <main@@Base+0x70>
   125b8:	sub	r6, r4, r0
   125bc:	mov	r0, r6
   125c0:	bl	128c0 <main@@Base+0x78>
   125c4:	mov	r5, #0
   125c8:	cmp	r0, #14
   125cc:	bcc	125f0 <print_schema@@Base+0x59c>
   125d0:	add	r0, r6, #12
   125d4:	bl	128c0 <main@@Base+0x78>
   125d8:	cmp	r0, #0
   125dc:	beq	125f0 <print_schema@@Base+0x59c>
   125e0:	add	r4, r4, r0
   125e4:	mov	r0, r4
   125e8:	bl	128e8 <main@@Base+0xa0>
   125ec:	add	r5, r4, r0
   125f0:	mov	r0, r5
   125f4:	pop	{r4, r5, r6, sl, fp, pc}
   125f8:	movw	r0, #11525	; 0x2d05
   125fc:	movt	r0, #1
   12600:	movw	r1, #11563	; 0x2d2b
   12604:	movt	r1, #1
   12608:	movw	r3, #15046	; 0x3ac6
   1260c:	movt	r3, #1
   12610:	mov	r2, #241	; 0xf1
   12614:	bl	10a78 <__assert_fail@plt>

00012618 <load_and_dump_schema@@Base>:
   12618:	push	{r4, r5, fp, lr}
   1261c:	add	fp, sp, #8
   12620:	sub	sp, sp, #8
   12624:	mov	r5, r0
   12628:	add	r1, sp, #4
   1262c:	bl	12714 <load_and_dump_schema@@Base+0xfc>
   12630:	cmp	r0, #0
   12634:	beq	1267c <load_and_dump_schema@@Base+0x64>
   12638:	mov	r4, r0
   1263c:	ldr	r0, [sp, #4]
   12640:	cmp	r0, #11
   12644:	bls	126a0 <load_and_dump_schema@@Base+0x88>
   12648:	mov	r0, r4
   1264c:	bl	12810 <load_and_dump_schema@@Base+0x1f8>
   12650:	mov	r5, r0
   12654:	cmp	r0, #0
   12658:	beq	126c0 <load_and_dump_schema@@Base+0xa8>
   1265c:	mov	r0, r5
   12660:	bl	12054 <print_schema@@Base>
   12664:	mov	r5, #0
   12668:	mov	r0, r4
   1266c:	bl	109c4 <free@plt>
   12670:	mov	r0, r5
   12674:	sub	sp, fp, #8
   12678:	pop	{r4, r5, fp, pc}
   1267c:	movw	r0, #16480	; 0x4060
   12680:	movt	r0, #2
   12684:	ldr	r0, [r0]
   12688:	movw	r1, #11098	; 0x2b5a
   1268c:	movt	r1, #1
   12690:	mov	r2, r5
   12694:	bl	10a30 <fprintf@plt>
   12698:	mvn	r5, #0
   1269c:	b	12670 <load_and_dump_schema@@Base+0x58>
   126a0:	movw	r0, #16480	; 0x4060
   126a4:	movt	r0, #2
   126a8:	ldr	r0, [r0]
   126ac:	movw	r1, #11139	; 0x2b83
   126b0:	movt	r1, #1
   126b4:	mov	r2, r5
   126b8:	bl	10a30 <fprintf@plt>
   126bc:	b	126f4 <load_and_dump_schema@@Base+0xdc>
   126c0:	add	r0, r4, #4
   126c4:	bl	12810 <load_and_dump_schema@@Base+0x1f8>
   126c8:	mov	r5, r0
   126cc:	movw	r0, #16480	; 0x4060
   126d0:	movt	r0, #2
   126d4:	ldr	r3, [r0]
   126d8:	cmp	r5, #0
   126dc:	bne	126fc <load_and_dump_schema@@Base+0xe4>
   126e0:	movw	r0, #11212	; 0x2bcc
   126e4:	movt	r0, #1
   126e8:	mov	r1, #27
   126ec:	mov	r2, #1
   126f0:	bl	109e8 <fwrite@plt>
   126f4:	mvn	r5, #0
   126f8:	b	12668 <load_and_dump_schema@@Base+0x50>
   126fc:	movw	r0, #11171	; 0x2ba3
   12700:	movt	r0, #1
   12704:	mov	r1, #40	; 0x28
   12708:	mov	r2, #1
   1270c:	bl	109e8 <fwrite@plt>
   12710:	b	1265c <load_and_dump_schema@@Base+0x44>
   12714:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12718:	add	fp, sp, #24
   1271c:	sub	sp, sp, #8
   12720:	add	r9, sp, #4
   12724:	cmp	r1, #0
   12728:	movne	r9, r1
   1272c:	movw	r1, #15128	; 0x3b18
   12730:	movt	r1, #1
   12734:	bl	109b8 <fopen@plt>
   12738:	cmp	r0, #0
   1273c:	beq	127d4 <load_and_dump_schema@@Base+0x1bc>
   12740:	mov	r6, r0
   12744:	mov	r8, #0
   12748:	mov	r1, #0
   1274c:	mov	r2, #2
   12750:	bl	10a60 <fseek@plt>
   12754:	mov	r0, r6
   12758:	bl	109d0 <ftell@plt>
   1275c:	mov	r5, r0
   12760:	str	r0, [r9]
   12764:	movw	r0, #10000	; 0x2710
   12768:	cmp	r5, r0
   1276c:	bhi	127e4 <load_and_dump_schema@@Base+0x1cc>
   12770:	mov	r0, r6
   12774:	bl	109dc <rewind@plt>
   12778:	cmp	r5, #0
   1277c:	mov	r0, r5
   12780:	movweq	r0, #1
   12784:	bl	10a00 <malloc@plt>
   12788:	cmp	r0, #0
   1278c:	beq	127e4 <load_and_dump_schema@@Base+0x1cc>
   12790:	mov	r7, r0
   12794:	mov	r8, r0
   12798:	mov	r1, #0
   1279c:	mov	r4, r1
   127a0:	add	r0, r7, r1
   127a4:	sub	r2, r5, r1
   127a8:	mov	r1, #1
   127ac:	mov	r3, r6
   127b0:	bl	10a54 <fread_unlocked@plt>
   127b4:	add	r1, r0, r4
   127b8:	cmp	r0, #0
   127bc:	bne	1279c <load_and_dump_schema@@Base+0x184>
   127c0:	cmp	r5, r4
   127c4:	bne	127dc <load_and_dump_schema@@Base+0x1c4>
   127c8:	mov	r0, r6
   127cc:	bl	10a48 <fclose@plt>
   127d0:	b	12800 <load_and_dump_schema@@Base+0x1e8>
   127d4:	mov	r5, #0
   127d8:	b	127fc <load_and_dump_schema@@Base+0x1e4>
   127dc:	cmp	r6, #0
   127e0:	beq	127ec <load_and_dump_schema@@Base+0x1d4>
   127e4:	mov	r0, r6
   127e8:	bl	10a48 <fclose@plt>
   127ec:	cmp	r8, #0
   127f0:	beq	127fc <load_and_dump_schema@@Base+0x1e4>
   127f4:	mov	r0, r8
   127f8:	bl	109c4 <free@plt>
   127fc:	mov	r8, #0
   12800:	str	r5, [r9]
   12804:	mov	r0, r8
   12808:	sub	sp, fp, #24
   1280c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12810:	push	{r4, r5, fp, lr}
   12814:	add	fp, sp, #8
   12818:	mov	r5, #0
   1281c:	cmp	r0, #0
   12820:	beq	12840 <load_and_dump_schema@@Base+0x228>
   12824:	mov	r4, r0
   12828:	bl	12938 <main@@Base+0xf0>
   1282c:	cmp	r0, #0
   12830:	beq	12840 <load_and_dump_schema@@Base+0x228>
   12834:	mov	r0, r4
   12838:	bl	128e8 <main@@Base+0xa0>
   1283c:	add	r5, r4, r0
   12840:	mov	r0, r5
   12844:	pop	{r4, r5, fp, pc}

00012848 <main@@Base>:
   12848:	cmp	r0, #2
   1284c:	bne	12858 <main@@Base+0x10>
   12850:	ldr	r0, [r1, #4]
   12854:	b	12618 <load_and_dump_schema@@Base>
   12858:	push	{r4, sl, fp, lr}
   1285c:	add	fp, sp, #8
   12860:	movw	r4, #16480	; 0x4060
   12864:	movt	r4, #2
   12868:	ldr	r3, [r4]
   1286c:	movw	r0, #11240	; 0x2be8
   12870:	movt	r0, #1
   12874:	mov	r1, #28
   12878:	mov	r2, #1
   1287c:	bl	109e8 <fwrite@plt>
   12880:	ldr	r3, [r4]
   12884:	movw	r0, #11269	; 0x2c05
   12888:	movt	r0, #1
   1288c:	mov	r1, #74	; 0x4a
   12890:	mov	r2, #1
   12894:	bl	109e8 <fwrite@plt>
   12898:	ldr	r3, [r4]
   1289c:	movw	r0, #11344	; 0x2c50
   128a0:	movt	r0, #1
   128a4:	mov	r1, #180	; 0xb4
   128a8:	mov	r2, #1
   128ac:	bl	109e8 <fwrite@plt>
   128b0:	mvn	r0, #0
   128b4:	bl	10a24 <exit@plt>
   128b8:	ldr	r0, [r0]
   128bc:	b	128c8 <main@@Base+0x80>
   128c0:	ldrh	r0, [r0]
   128c4:	b	128cc <main@@Base+0x84>
   128c8:	bx	lr
   128cc:	bx	lr
   128d0:	ldrsb	r0, [r0]
   128d4:	b	128d8 <main@@Base+0x90>
   128d8:	bx	lr
   128dc:	ldr	r0, [r0]
   128e0:	b	128e4 <main@@Base+0x9c>
   128e4:	bx	lr
   128e8:	ldr	r0, [r0]
   128ec:	b	128f0 <main@@Base+0xa8>
   128f0:	bx	lr
   128f4:	cmp	r0, #0
   128f8:	moveq	r0, #0
   128fc:	bxeq	lr
   12900:	sub	r0, r0, #4
   12904:	b	128e8 <main@@Base+0xa0>
   12908:	ldrh	r0, [r0]
   1290c:	b	12910 <main@@Base+0xc8>
   12910:	bx	lr
   12914:	ldrd	r0, [r0]
   12918:	b	1291c <main@@Base+0xd4>
   1291c:	bx	lr
   12920:	vldr	d0, [r0]
   12924:	b	12928 <main@@Base+0xe0>
   12928:	bx	lr
   1292c:	ldrb	r0, [r0]
   12930:	b	12934 <main@@Base+0xec>
   12934:	bx	lr
   12938:	push	{fp, lr}
   1293c:	mov	fp, sp
   12940:	add	r0, r0, #4
   12944:	bl	12960 <main@@Base+0x118>
   12948:	movw	r1, #47550	; 0xb9be
   1294c:	movt	r1, #44221	; 0xacbd
   12950:	add	r0, r0, r1
   12954:	clz	r0, r0
   12958:	lsr	r0, r0, #5
   1295c:	pop	{fp, pc}
   12960:	ldr	r0, [r0]
   12964:	b	12968 <main@@Base+0x120>
   12968:	bx	lr

0001296c <__libc_csu_init@@Base>:
   1296c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12970:	mov	r7, r0
   12974:	ldr	r6, [pc, #72]	; 129c4 <__libc_csu_init@@Base+0x58>
   12978:	ldr	r5, [pc, #72]	; 129c8 <__libc_csu_init@@Base+0x5c>
   1297c:	add	r6, pc, r6
   12980:	add	r5, pc, r5
   12984:	sub	r6, r6, r5
   12988:	mov	r8, r1
   1298c:	mov	r9, r2
   12990:	bl	1098c <printf@plt-0x20>
   12994:	asrs	r6, r6, #2
   12998:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1299c:	mov	r4, #0
   129a0:	add	r4, r4, #1
   129a4:	ldr	r3, [r5], #4
   129a8:	mov	r2, r9
   129ac:	mov	r1, r8
   129b0:	mov	r0, r7
   129b4:	blx	r3
   129b8:	cmp	r6, r4
   129bc:	bne	129a0 <__libc_csu_init@@Base+0x34>
   129c0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   129c4:	andeq	r1, r1, r8, lsl #11
   129c8:	andeq	r1, r1, r0, lsl #11

000129cc <__libc_csu_fini@@Base>:
   129cc:	bx	lr

Disassembly of section .fini:

000129d0 <.fini>:
   129d0:	push	{r3, lr}
   129d4:	pop	{r3, pc}
