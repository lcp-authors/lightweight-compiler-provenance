
../repos/coreutils/src/cksum:     file format elf32-littlearm


Disassembly of section .init:

00010fa8 <.init>:
   10fa8:	push	{r3, lr}
   10fac:	bl	127c0 <__assert_fail@plt+0x14d4>
   10fb0:	pop	{r3, pc}

Disassembly of section .plt:

00010fb4 <fdopen@plt-0x14>:
   10fb4:	push	{lr}		; (str lr, [sp, #-4]!)
   10fb8:	ldr	lr, [pc, #4]	; 10fc4 <fdopen@plt-0x4>
   10fbc:	add	lr, pc, lr
   10fc0:	ldr	pc, [lr, #8]!
   10fc4:	andeq	r1, r4, ip, lsr r0

00010fc8 <fdopen@plt>:
   10fc8:	add	ip, pc, #0, 12
   10fcc:	add	ip, ip, #266240	; 0x41000
   10fd0:	ldr	pc, [ip, #60]!	; 0x3c

00010fd4 <calloc@plt>:
   10fd4:	add	ip, pc, #0, 12
   10fd8:	add	ip, ip, #266240	; 0x41000
   10fdc:	ldr	pc, [ip, #52]!	; 0x34

00010fe0 <fputs_unlocked@plt>:
   10fe0:	add	ip, pc, #0, 12
   10fe4:	add	ip, ip, #266240	; 0x41000
   10fe8:	ldr	pc, [ip, #44]!	; 0x2c

00010fec <raise@plt>:
   10fec:	add	ip, pc, #0, 12
   10ff0:	add	ip, ip, #266240	; 0x41000
   10ff4:	ldr	pc, [ip, #36]!	; 0x24

00010ff8 <__getdelim@plt>:
   10ff8:	add	ip, pc, #0, 12
   10ffc:	add	ip, ip, #266240	; 0x41000
   11000:	ldr	pc, [ip, #28]!

00011004 <strcmp@plt>:
   11004:	add	ip, pc, #0, 12
   11008:	add	ip, ip, #266240	; 0x41000
   1100c:	ldr	pc, [ip, #20]!

00011010 <posix_fadvise64@plt>:
   11010:	add	ip, pc, #0, 12
   11014:	add	ip, ip, #266240	; 0x41000
   11018:	ldr	pc, [ip, #12]!

0001101c <fflush@plt>:
   1101c:	add	ip, pc, #0, 12
   11020:	add	ip, ip, #266240	; 0x41000
   11024:	ldr	pc, [ip, #4]!

00011028 <memmove@plt>:
   11028:	add	ip, pc, #0, 12
   1102c:	add	ip, ip, #64, 20	; 0x40000
   11030:	ldr	pc, [ip, #4092]!	; 0xffc

00011034 <free@plt>:
   11034:	add	ip, pc, #0, 12
   11038:	add	ip, ip, #64, 20	; 0x40000
   1103c:	ldr	pc, [ip, #4084]!	; 0xff4

00011040 <ferror@plt>:
   11040:	add	ip, pc, #0, 12
   11044:	add	ip, ip, #64, 20	; 0x40000
   11048:	ldr	pc, [ip, #4076]!	; 0xfec

0001104c <_exit@plt>:
   1104c:	add	ip, pc, #0, 12
   11050:	add	ip, ip, #64, 20	; 0x40000
   11054:	ldr	pc, [ip, #4068]!	; 0xfe4

00011058 <memcpy@plt>:
   11058:	add	ip, pc, #0, 12
   1105c:	add	ip, ip, #64, 20	; 0x40000
   11060:	ldr	pc, [ip, #4060]!	; 0xfdc

00011064 <__strtoull_internal@plt>:
   11064:	add	ip, pc, #0, 12
   11068:	add	ip, ip, #64, 20	; 0x40000
   1106c:	ldr	pc, [ip, #4052]!	; 0xfd4

00011070 <mbsinit@plt>:
   11070:	add	ip, pc, #0, 12
   11074:	add	ip, ip, #64, 20	; 0x40000
   11078:	ldr	pc, [ip, #4044]!	; 0xfcc

0001107c <fwrite_unlocked@plt>:
   1107c:	add	ip, pc, #0, 12
   11080:	add	ip, ip, #64, 20	; 0x40000
   11084:	ldr	pc, [ip, #4036]!	; 0xfc4

00011088 <memcmp@plt>:
   11088:	add	ip, pc, #0, 12
   1108c:	add	ip, ip, #64, 20	; 0x40000
   11090:	ldr	pc, [ip, #4028]!	; 0xfbc

00011094 <fputc_unlocked@plt>:
   11094:	add	ip, pc, #0, 12
   11098:	add	ip, ip, #64, 20	; 0x40000
   1109c:	ldr	pc, [ip, #4020]!	; 0xfb4

000110a0 <dcgettext@plt>:
   110a0:	add	ip, pc, #0, 12
   110a4:	add	ip, ip, #64, 20	; 0x40000
   110a8:	ldr	pc, [ip, #4012]!	; 0xfac

000110ac <realloc@plt>:
   110ac:	add	ip, pc, #0, 12
   110b0:	add	ip, ip, #64, 20	; 0x40000
   110b4:	ldr	pc, [ip, #4004]!	; 0xfa4

000110b8 <textdomain@plt>:
   110b8:	add	ip, pc, #0, 12
   110bc:	add	ip, ip, #64, 20	; 0x40000
   110c0:	ldr	pc, [ip, #3996]!	; 0xf9c

000110c4 <iswprint@plt>:
   110c4:	add	ip, pc, #0, 12
   110c8:	add	ip, ip, #64, 20	; 0x40000
   110cc:	ldr	pc, [ip, #3988]!	; 0xf94

000110d0 <__memcpy_chk@plt>:
   110d0:	add	ip, pc, #0, 12
   110d4:	add	ip, ip, #64, 20	; 0x40000
   110d8:	ldr	pc, [ip, #3980]!	; 0xf8c

000110dc <fwrite@plt>:
   110dc:	add	ip, pc, #0, 12
   110e0:	add	ip, ip, #64, 20	; 0x40000
   110e4:	ldr	pc, [ip, #3972]!	; 0xf84

000110e8 <lseek64@plt>:
   110e8:	add	ip, pc, #0, 12
   110ec:	add	ip, ip, #64, 20	; 0x40000
   110f0:	ldr	pc, [ip, #3964]!	; 0xf7c

000110f4 <__ctype_get_mb_cur_max@plt>:
   110f4:	add	ip, pc, #0, 12
   110f8:	add	ip, ip, #64, 20	; 0x40000
   110fc:	ldr	pc, [ip, #3956]!	; 0xf74

00011100 <fread@plt>:
   11100:	add	ip, pc, #0, 12
   11104:	add	ip, ip, #64, 20	; 0x40000
   11108:	ldr	pc, [ip, #3948]!	; 0xf6c

0001110c <__fpending@plt>:
   1110c:	add	ip, pc, #0, 12
   11110:	add	ip, ip, #64, 20	; 0x40000
   11114:	ldr	pc, [ip, #3940]!	; 0xf64

00011118 <mbrtowc@plt>:
   11118:	add	ip, pc, #0, 12
   1111c:	add	ip, ip, #64, 20	; 0x40000
   11120:	ldr	pc, [ip, #3932]!	; 0xf5c

00011124 <error@plt>:
   11124:	add	ip, pc, #0, 12
   11128:	add	ip, ip, #64, 20	; 0x40000
   1112c:	ldr	pc, [ip, #3924]!	; 0xf54

00011130 <getenv@plt>:
   11130:	add	ip, pc, #0, 12
   11134:	add	ip, ip, #64, 20	; 0x40000
   11138:	ldr	pc, [ip, #3916]!	; 0xf4c

0001113c <malloc@plt>:
   1113c:	add	ip, pc, #0, 12
   11140:	add	ip, ip, #64, 20	; 0x40000
   11144:	ldr	pc, [ip, #3908]!	; 0xf44

00011148 <__libc_start_main@plt>:
   11148:	add	ip, pc, #0, 12
   1114c:	add	ip, ip, #64, 20	; 0x40000
   11150:	ldr	pc, [ip, #3900]!	; 0xf3c

00011154 <__freading@plt>:
   11154:	add	ip, pc, #0, 12
   11158:	add	ip, ip, #64, 20	; 0x40000
   1115c:	ldr	pc, [ip, #3892]!	; 0xf34

00011160 <__ctype_tolower_loc@plt>:
   11160:	add	ip, pc, #0, 12
   11164:	add	ip, ip, #64, 20	; 0x40000
   11168:	ldr	pc, [ip, #3884]!	; 0xf2c

0001116c <__gmon_start__@plt>:
   1116c:	add	ip, pc, #0, 12
   11170:	add	ip, ip, #64, 20	; 0x40000
   11174:	ldr	pc, [ip, #3876]!	; 0xf24

00011178 <getopt_long@plt>:
   11178:	add	ip, pc, #0, 12
   1117c:	add	ip, ip, #64, 20	; 0x40000
   11180:	ldr	pc, [ip, #3868]!	; 0xf1c

00011184 <__ctype_b_loc@plt>:
   11184:	add	ip, pc, #0, 12
   11188:	add	ip, ip, #64, 20	; 0x40000
   1118c:	ldr	pc, [ip, #3860]!	; 0xf14

00011190 <exit@plt>:
   11190:	add	ip, pc, #0, 12
   11194:	add	ip, ip, #64, 20	; 0x40000
   11198:	ldr	pc, [ip, #3852]!	; 0xf0c

0001119c <feof@plt>:
   1119c:	add	ip, pc, #0, 12
   111a0:	add	ip, ip, #64, 20	; 0x40000
   111a4:	ldr	pc, [ip, #3844]!	; 0xf04

000111a8 <strlen@plt>:
   111a8:	add	ip, pc, #0, 12
   111ac:	add	ip, ip, #64, 20	; 0x40000
   111b0:	ldr	pc, [ip, #3836]!	; 0xefc

000111b4 <strchr@plt>:
   111b4:	add	ip, pc, #0, 12
   111b8:	add	ip, ip, #64, 20	; 0x40000
   111bc:	ldr	pc, [ip, #3828]!	; 0xef4

000111c0 <__errno_location@plt>:
   111c0:	add	ip, pc, #0, 12
   111c4:	add	ip, ip, #64, 20	; 0x40000
   111c8:	ldr	pc, [ip, #3820]!	; 0xeec

000111cc <__sprintf_chk@plt>:
   111cc:	add	ip, pc, #0, 12
   111d0:	add	ip, ip, #64, 20	; 0x40000
   111d4:	ldr	pc, [ip, #3812]!	; 0xee4

000111d8 <__cxa_atexit@plt>:
   111d8:	add	ip, pc, #0, 12
   111dc:	add	ip, ip, #64, 20	; 0x40000
   111e0:	ldr	pc, [ip, #3804]!	; 0xedc

000111e4 <setvbuf@plt>:
   111e4:	add	ip, pc, #0, 12
   111e8:	add	ip, ip, #64, 20	; 0x40000
   111ec:	ldr	pc, [ip, #3796]!	; 0xed4

000111f0 <memset@plt>:
   111f0:	add	ip, pc, #0, 12
   111f4:	add	ip, ip, #64, 20	; 0x40000
   111f8:	ldr	pc, [ip, #3788]!	; 0xecc

000111fc <__printf_chk@plt>:
   111fc:	add	ip, pc, #0, 12
   11200:	add	ip, ip, #64, 20	; 0x40000
   11204:	ldr	pc, [ip, #3780]!	; 0xec4

00011208 <fileno@plt>:
   11208:	add	ip, pc, #0, 12
   1120c:	add	ip, ip, #64, 20	; 0x40000
   11210:	ldr	pc, [ip, #3772]!	; 0xebc

00011214 <__fprintf_chk@plt>:
   11214:	add	ip, pc, #0, 12
   11218:	add	ip, ip, #64, 20	; 0x40000
   1121c:	ldr	pc, [ip, #3764]!	; 0xeb4

00011220 <fclose@plt>:
   11220:	add	ip, pc, #0, 12
   11224:	add	ip, ip, #64, 20	; 0x40000
   11228:	ldr	pc, [ip, #3756]!	; 0xeac

0001122c <fseeko64@plt>:
   1122c:	add	ip, pc, #0, 12
   11230:	add	ip, ip, #64, 20	; 0x40000
   11234:	ldr	pc, [ip, #3748]!	; 0xea4

00011238 <fcntl64@plt>:
   11238:	add	ip, pc, #0, 12
   1123c:	add	ip, ip, #64, 20	; 0x40000
   11240:	ldr	pc, [ip, #3740]!	; 0xe9c

00011244 <__overflow@plt>:
   11244:	add	ip, pc, #0, 12
   11248:	add	ip, ip, #64, 20	; 0x40000
   1124c:	ldr	pc, [ip, #3732]!	; 0xe94

00011250 <setlocale@plt>:
   11250:	add	ip, pc, #0, 12
   11254:	add	ip, ip, #64, 20	; 0x40000
   11258:	ldr	pc, [ip, #3724]!	; 0xe8c

0001125c <strrchr@plt>:
   1125c:	add	ip, pc, #0, 12
   11260:	add	ip, ip, #64, 20	; 0x40000
   11264:	ldr	pc, [ip, #3716]!	; 0xe84

00011268 <nl_langinfo@plt>:
   11268:	add	ip, pc, #0, 12
   1126c:	add	ip, ip, #64, 20	; 0x40000
   11270:	ldr	pc, [ip, #3708]!	; 0xe7c

00011274 <__fread_unlocked_chk@plt>:
   11274:	add	ip, pc, #0, 12
   11278:	add	ip, ip, #64, 20	; 0x40000
   1127c:	ldr	pc, [ip, #3700]!	; 0xe74

00011280 <localeconv@plt>:
   11280:	add	ip, pc, #0, 12
   11284:	add	ip, ip, #64, 20	; 0x40000
   11288:	ldr	pc, [ip, #3692]!	; 0xe6c

0001128c <clearerr_unlocked@plt>:
   1128c:	add	ip, pc, #0, 12
   11290:	add	ip, ip, #64, 20	; 0x40000
   11294:	ldr	pc, [ip, #3684]!	; 0xe64

00011298 <fopen64@plt>:
   11298:	add	ip, pc, #0, 12
   1129c:	add	ip, ip, #64, 20	; 0x40000
   112a0:	ldr	pc, [ip, #3676]!	; 0xe5c

000112a4 <bindtextdomain@plt>:
   112a4:	add	ip, pc, #0, 12
   112a8:	add	ip, ip, #64, 20	; 0x40000
   112ac:	ldr	pc, [ip, #3668]!	; 0xe54

000112b0 <fread_unlocked@plt>:
   112b0:	add	ip, pc, #0, 12
   112b4:	add	ip, ip, #64, 20	; 0x40000
   112b8:	ldr	pc, [ip, #3660]!	; 0xe4c

000112bc <strncmp@plt>:
   112bc:	add	ip, pc, #0, 12
   112c0:	add	ip, ip, #64, 20	; 0x40000
   112c4:	ldr	pc, [ip, #3652]!	; 0xe44

000112c8 <abort@plt>:
   112c8:	add	ip, pc, #0, 12
   112cc:	add	ip, ip, #64, 20	; 0x40000
   112d0:	ldr	pc, [ip, #3644]!	; 0xe3c

000112d4 <close@plt>:
   112d4:	add	ip, pc, #0, 12
   112d8:	add	ip, ip, #64, 20	; 0x40000
   112dc:	ldr	pc, [ip, #3636]!	; 0xe34

000112e0 <dcngettext@plt>:
   112e0:	add	ip, pc, #0, 12
   112e4:	add	ip, ip, #64, 20	; 0x40000
   112e8:	ldr	pc, [ip, #3628]!	; 0xe2c

000112ec <__assert_fail@plt>:
   112ec:	add	ip, pc, #0, 12
   112f0:	add	ip, ip, #64, 20	; 0x40000
   112f4:	ldr	pc, [ip, #3620]!	; 0xe24

Disassembly of section .text:

000112f8 <.text>:
   112f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   112fc:	sub	sp, sp, #292	; 0x124
   11300:	mov	r5, r1
   11304:	str	r0, [sp, #32]
   11308:	ldr	r0, [r1]
   1130c:	bl	372d0 <__assert_fail@plt+0x25fe4>
   11310:	ldr	r1, [pc, #3864]	; 12230 <__assert_fail@plt+0xf44>
   11314:	mov	r0, #6
   11318:	bl	11250 <setlocale@plt>
   1131c:	ldr	r1, [pc, #3856]	; 12234 <__assert_fail@plt+0xf48>
   11320:	ldr	r0, [pc, #3856]	; 12238 <__assert_fail@plt+0xf4c>
   11324:	bl	112a4 <bindtextdomain@plt>
   11328:	ldr	r0, [pc, #3848]	; 12238 <__assert_fail@plt+0xf4c>
   1132c:	bl	110b8 <textdomain@plt>
   11330:	ldr	r0, [pc, #3844]	; 1223c <__assert_fail@plt+0xf50>
   11334:	bl	3e344 <__assert_fail@plt+0x2d058>
   11338:	ldr	r2, [pc, #3840]	; 12240 <__assert_fail@plt+0xf54>
   1133c:	mov	r3, #0
   11340:	mov	r1, r3
   11344:	ldr	r0, [r2]
   11348:	mov	r2, #1
   1134c:	bl	111e4 <setvbuf@plt>
   11350:	ldr	r3, [pc, #3820]	; 12244 <__assert_fail@plt+0xf58>
   11354:	ldr	r6, [pc, #3820]	; 12248 <__assert_fail@plt+0xf5c>
   11358:	ldr	fp, [pc, #3820]	; 1224c <__assert_fail@plt+0xf60>
   1135c:	ldr	r8, [pc, #3820]	; 12250 <__assert_fail@plt+0xf64>
   11360:	ldr	sl, [pc, #3820]	; 12254 <__assert_fail@plt+0xf68>
   11364:	ldr	r9, [pc, #3780]	; 12230 <__assert_fail@plt+0xf44>
   11368:	add	r7, r3, #240	; 0xf0
   1136c:	mov	r3, #1
   11370:	str	r3, [sp, #48]	; 0x30
   11374:	mov	r3, #0
   11378:	str	r9, [sp, #24]
   1137c:	str	r3, [sp, #40]	; 0x28
   11380:	mov	r4, #0
   11384:	str	r4, [sp]
   11388:	mov	r3, r7
   1138c:	mov	r2, r6
   11390:	mov	r1, r5
   11394:	ldr	r0, [sp, #32]
   11398:	bl	11178 <getopt_long@plt>
   1139c:	cmn	r0, #1
   113a0:	beq	115d4 <__assert_fail@plt+0x2e8>
   113a4:	cmp	r0, #122	; 0x7a
   113a8:	beq	115cc <__assert_fail@plt+0x2e0>
   113ac:	ble	113e4 <__assert_fail@plt+0xf8>
   113b0:	ldr	r3, [pc, #3744]	; 12258 <__assert_fail@plt+0xf6c>
   113b4:	cmp	r0, r3
   113b8:	beq	115c0 <__assert_fail@plt+0x2d4>
   113bc:	bgt	11410 <__assert_fail@plt+0x124>
   113c0:	sub	r3, r3, #2
   113c4:	cmp	r0, r3
   113c8:	beq	115ac <__assert_fail@plt+0x2c0>
   113cc:	bgt	11450 <__assert_fail@plt+0x164>
   113d0:	cmp	r0, #256	; 0x100
   113d4:	bne	11408 <__assert_fail@plt+0x11c>
   113d8:	mov	r3, #1
   113dc:	strb	r3, [r8, #13]
   113e0:	b	11380 <__assert_fail@plt+0x94>
   113e4:	cmp	r0, #97	; 0x61
   113e8:	beq	11568 <__assert_fail@plt+0x27c>
   113ec:	ble	11438 <__assert_fail@plt+0x14c>
   113f0:	cmp	r0, #108	; 0x6c
   113f4:	beq	114d0 <__assert_fail@plt+0x1e4>
   113f8:	cmp	r0, #119	; 0x77
   113fc:	beq	11464 <__assert_fail@plt+0x178>
   11400:	cmp	r0, #99	; 0x63
   11404:	beq	114bc <__assert_fail@plt+0x1d0>
   11408:	mov	r0, #1
   1140c:	bl	12dc0 <__assert_fail@plt+0x1ad4>
   11410:	ldr	r3, [pc, #3652]	; 1225c <__assert_fail@plt+0xf70>
   11414:	cmp	r0, r3
   11418:	beq	114c8 <__assert_fail@plt+0x1dc>
   1141c:	blt	114b0 <__assert_fail@plt+0x1c4>
   11420:	add	r3, r3, #1
   11424:	cmp	r0, r3
   11428:	bne	11408 <__assert_fail@plt+0x11c>
   1142c:	mov	r3, #1
   11430:	strb	r3, [r8, #15]
   11434:	b	11380 <__assert_fail@plt+0x94>
   11438:	cmn	r0, #3
   1143c:	beq	11478 <__assert_fail@plt+0x18c>
   11440:	cmn	r0, #2
   11444:	bne	11408 <__assert_fail@plt+0x11c>
   11448:	mov	r0, r4
   1144c:	bl	12dc0 <__assert_fail@plt+0x1ad4>
   11450:	mov	r3, #1
   11454:	strb	r4, [r8, #16]
   11458:	strb	r4, [r8, #17]
   1145c:	strb	r3, [r8, #18]
   11460:	b	11380 <__assert_fail@plt+0x94>
   11464:	mov	r3, #1
   11468:	strb	r4, [r8, #16]
   1146c:	strb	r4, [r8, #18]
   11470:	strb	r3, [r8, #17]
   11474:	b	11380 <__assert_fail@plt+0x94>
   11478:	ldr	r3, [pc, #3552]	; 12260 <__assert_fail@plt+0xf74>
   1147c:	ldr	r0, [pc, #3516]	; 12240 <__assert_fail@plt+0xf54>
   11480:	ldr	r1, [pc, #3548]	; 12264 <__assert_fail@plt+0xf78>
   11484:	ldr	r2, [pc, #3548]	; 12268 <__assert_fail@plt+0xf7c>
   11488:	str	r4, [sp, #8]
   1148c:	ldr	r0, [r0]
   11490:	ldr	r3, [r3]
   11494:	str	r1, [sp, #4]
   11498:	str	r2, [sp]
   1149c:	ldr	r1, [pc, #3528]	; 1226c <__assert_fail@plt+0xf80>
   114a0:	ldr	r2, [pc, #3528]	; 12270 <__assert_fail@plt+0xf84>
   114a4:	bl	3bb7c <__assert_fail@plt+0x2a890>
   114a8:	mov	r0, r4
   114ac:	bl	11190 <exit@plt>
   114b0:	mov	r3, #1
   114b4:	str	r3, [sp, #48]	; 0x30
   114b8:	b	11380 <__assert_fail@plt+0x94>
   114bc:	mov	r3, #1
   114c0:	str	r3, [sp, #40]	; 0x28
   114c4:	b	11380 <__assert_fail@plt+0x94>
   114c8:	str	r4, [sp, #48]	; 0x30
   114cc:	b	11380 <__assert_fail@plt+0x94>
   114d0:	ldr	r3, [sl]
   114d4:	mov	r2, #5
   114d8:	ldr	r1, [pc, #3476]	; 12274 <__assert_fail@plt+0xf88>
   114dc:	mov	r0, r4
   114e0:	str	r3, [sp, #24]
   114e4:	bl	110a0 <dcgettext@plt>
   114e8:	mvn	r2, #0
   114ec:	mvn	r3, #0
   114f0:	str	r4, [sp, #16]
   114f4:	strd	r2, [sp]
   114f8:	str	r9, [sp, #8]
   114fc:	mov	r2, #0
   11500:	mov	r3, #0
   11504:	str	r0, [sp, #12]
   11508:	ldr	r0, [sp, #24]
   1150c:	bl	3c528 <__assert_fail@plt+0x2b23c>
   11510:	mov	r3, #0
   11514:	and	r2, r0, #7
   11518:	orrs	r3, r2, r3
   1151c:	ldr	r3, [sl]
   11520:	strd	r0, [r8]
   11524:	str	r3, [sp, #24]
   11528:	beq	11380 <__assert_fail@plt+0x94>
   1152c:	mov	r2, #5
   11530:	ldr	r1, [pc, #3528]	; 12300 <__assert_fail@plt+0x1014>
   11534:	mov	r0, r4
   11538:	bl	110a0 <dcgettext@plt>
   1153c:	mov	r5, r0
   11540:	ldr	r0, [sp, #24]
   11544:	bl	3b19c <__assert_fail@plt+0x29eb0>
   11548:	mov	r2, r5
   1154c:	mov	r1, r4
   11550:	mov	r3, r0
   11554:	mov	r0, r4
   11558:	bl	11124 <error@plt>
   1155c:	mov	r2, #5
   11560:	ldr	r1, [pc, #3344]	; 12278 <__assert_fail@plt+0xf8c>
   11564:	b	1255c <__assert_fail@plt+0x1270>
   11568:	ldr	r2, [pc, #3340]	; 1227c <__assert_fail@plt+0xf90>
   1156c:	ldr	r3, [pc, #3340]	; 12280 <__assert_fail@plt+0xf94>
   11570:	mov	r1, #4
   11574:	ldr	r2, [r2]
   11578:	ldr	r0, [pc, #3332]	; 12284 <__assert_fail@plt+0xf98>
   1157c:	str	r1, [sp]
   11580:	stmib	sp, {r2, r4}
   11584:	add	r2, r3, #44	; 0x2c
   11588:	ldr	r1, [sl]
   1158c:	bl	1b074 <__assert_fail@plt+0x9d88>
   11590:	mov	r3, #1
   11594:	strb	r3, [r8, #14]
   11598:	ldr	r3, [pc, #3236]	; 12244 <__assert_fail@plt+0xf58>
   1159c:	add	r0, r3, r0, lsl #2
   115a0:	ldr	r3, [r0, #148]	; 0x94
   115a4:	str	r3, [fp]
   115a8:	b	11380 <__assert_fail@plt+0x94>
   115ac:	mov	r3, #1
   115b0:	strb	r4, [r8, #17]
   115b4:	strb	r4, [r8, #18]
   115b8:	strb	r3, [r8, #16]
   115bc:	b	11380 <__assert_fail@plt+0x94>
   115c0:	mov	r3, #1
   115c4:	strb	r3, [r8, #19]
   115c8:	b	11380 <__assert_fail@plt+0x94>
   115cc:	strb	r4, [fp, #4]
   115d0:	b	11380 <__assert_fail@plt+0x94>
   115d4:	ldr	fp, [pc, #3188]	; 12250 <__assert_fail@plt+0xf64>
   115d8:	mov	r1, #3
   115dc:	ldrd	r2, [fp]
   115e0:	str	r1, [fp, #20]
   115e4:	orrs	r1, r2, r3
   115e8:	bne	11a38 <__assert_fail@plt+0x74c>
   115ec:	ldr	r3, [pc, #3160]	; 1224c <__assert_fail@plt+0xf60>
   115f0:	ldr	r2, [pc, #3148]	; 12244 <__assert_fail@plt+0xf58>
   115f4:	str	r3, [sp, #64]	; 0x40
   115f8:	ldr	r3, [r3]
   115fc:	cmp	r3, #2
   11600:	add	r3, r2, r3, lsl #2
   11604:	ldr	r2, [r3, #480]	; 0x1e0
   11608:	asr	r3, r2, #31
   1160c:	strd	r2, [fp]
   11610:	ldr	r3, [fp, #4]
   11614:	lsr	r2, r2, #2
   11618:	orr	r2, r2, r3, lsl #30
   1161c:	str	r2, [fp, #8]
   11620:	bhi	11a74 <__assert_fail@plt+0x788>
   11624:	ldr	r3, [sp, #40]	; 0x28
   11628:	cmp	r3, #0
   1162c:	beq	11a94 <__assert_fail@plt+0x7a8>
   11630:	ldrb	r3, [fp, #14]
   11634:	cmp	r3, #0
   11638:	movne	r2, #5
   1163c:	ldrne	r1, [pc, #3140]	; 12288 <__assert_fail@plt+0xf9c>
   11640:	bne	1255c <__assert_fail@plt+0x1270>
   11644:	ldr	r3, [sp, #64]	; 0x40
   11648:	ldrb	r3, [r3, #4]
   1164c:	cmp	r3, #10
   11650:	bne	1274c <__assert_fail@plt+0x1460>
   11654:	ldrb	r3, [fp, #16]
   11658:	ldr	r2, [sp, #40]	; 0x28
   1165c:	eor	r3, r3, #1
   11660:	orrs	r4, r2, r3
   11664:	moveq	r2, #5
   11668:	ldreq	r1, [pc, #3100]	; 1228c <__assert_fail@plt+0xfa0>
   1166c:	beq	11ab0 <__assert_fail@plt+0x7c4>
   11670:	ldrb	r3, [fp, #17]
   11674:	ldr	r2, [sp, #40]	; 0x28
   11678:	eor	r3, r3, #1
   1167c:	orrs	r4, r2, r3
   11680:	moveq	r2, #5
   11684:	ldreq	r1, [pc, #3076]	; 12290 <__assert_fail@plt+0xfa4>
   11688:	beq	11ab0 <__assert_fail@plt+0x7c4>
   1168c:	ldrb	r3, [fp, #18]
   11690:	ldr	r2, [sp, #40]	; 0x28
   11694:	eor	r3, r3, #1
   11698:	orrs	r3, r2, r3
   1169c:	str	r3, [sp, #68]	; 0x44
   116a0:	moveq	r2, #5
   116a4:	ldreq	r1, [pc, #3048]	; 12294 <__assert_fail@plt+0xfa8>
   116a8:	beq	11ab0 <__assert_fail@plt+0x7c4>
   116ac:	ldrb	r2, [fp, #19]
   116b0:	ldr	r3, [sp, #40]	; 0x28
   116b4:	eor	r3, r3, #1
   116b8:	ands	r3, r2, r3
   116bc:	str	r3, [sp, #52]	; 0x34
   116c0:	movne	r2, #5
   116c4:	ldrne	r1, [pc, #3020]	; 12298 <__assert_fail@plt+0xfac>
   116c8:	bne	11ab0 <__assert_fail@plt+0x7c4>
   116cc:	ldr	r2, [sp, #32]
   116d0:	add	r3, r5, r2, lsl #2
   116d4:	str	r3, [sp, #84]	; 0x54
   116d8:	ldr	r3, [pc, #3072]	; 122e0 <__assert_fail@plt+0xff4>
   116dc:	ldr	r3, [r3]
   116e0:	cmp	r2, r3
   116e4:	beq	1251c <__assert_fail@plt+0x1230>
   116e8:	add	r3, r5, r3, lsl #2
   116ec:	str	r3, [sp, #44]	; 0x2c
   116f0:	add	r3, sp, #216	; 0xd8
   116f4:	str	r3, [sp, #112]	; 0x70
   116f8:	ldr	r3, [sp, #84]	; 0x54
   116fc:	ldr	r2, [sp, #44]	; 0x2c
   11700:	cmp	r3, r2
   11704:	bls	12370 <__assert_fail@plt+0x1084>
   11708:	ldr	r3, [sp, #40]	; 0x28
   1170c:	cmp	r3, #0
   11710:	ldr	r3, [sp, #44]	; 0x2c
   11714:	ldr	r4, [r3], #4
   11718:	str	r3, [sp, #44]	; 0x2c
   1171c:	beq	11d5c <__assert_fail@plt+0xa70>
   11720:	ldr	r1, [pc, #3012]	; 122ec <__assert_fail@plt+0x1000>
   11724:	mov	r0, r4
   11728:	bl	11004 <strcmp@plt>
   1172c:	subs	r3, r0, #0
   11730:	str	r3, [sp, #76]	; 0x4c
   11734:	bne	11ee4 <__assert_fail@plt+0xbf8>
   11738:	mov	r3, #1
   1173c:	mov	r2, #5
   11740:	ldr	r1, [pc, #2988]	; 122f4 <__assert_fail@plt+0x1008>
   11744:	strb	r3, [fp, #12]
   11748:	bl	110a0 <dcgettext@plt>
   1174c:	ldr	r3, [pc, #2972]	; 122f0 <__assert_fail@plt+0x1004>
   11750:	ldr	sl, [r3]
   11754:	str	r0, [sp, #88]	; 0x58
   11758:	add	r3, sp, #288	; 0x120
   1175c:	mov	r2, r3
   11760:	mov	r3, #0
   11764:	str	r3, [r2, #-160]!	; 0xffffff60
   11768:	str	r3, [sp, #124]	; 0x7c
   1176c:	ldr	r3, [sp, #52]	; 0x34
   11770:	mov	r0, #0
   11774:	mov	r1, #0
   11778:	str	r2, [sp, #36]	; 0x24
   1177c:	str	r3, [sp, #116]	; 0x74
   11780:	str	r3, [sp, #92]	; 0x5c
   11784:	mov	r2, #1
   11788:	mov	r3, #0
   1178c:	strd	r0, [sp, #104]	; 0x68
   11790:	strd	r0, [sp, #96]	; 0x60
   11794:	strd	r0, [sp, #56]	; 0x38
   11798:	strd	r2, [sp, #24]
   1179c:	b	117c4 <__assert_fail@plt+0x4d8>
   117a0:	ldr	r3, [sl]
   117a4:	ands	r3, r3, #48	; 0x30
   117a8:	bne	11d80 <__assert_fail@plt+0xa94>
   117ac:	ldrd	r0, [sp, #24]
   117b0:	adds	r0, r0, #1
   117b4:	adc	r1, r1, #0
   117b8:	orrs	r2, r0, r1
   117bc:	strd	r0, [sp, #24]
   117c0:	beq	12434 <__assert_fail@plt+0x1148>
   117c4:	mov	r3, sl
   117c8:	mov	r2, #10
   117cc:	ldr	r1, [sp, #36]	; 0x24
   117d0:	add	r0, sp, #124	; 0x7c
   117d4:	bl	10ff8 <__getdelim@plt>
   117d8:	subs	r4, r0, #0
   117dc:	ble	11d80 <__assert_fail@plt+0xa94>
   117e0:	ldr	r3, [sp, #124]	; 0x7c
   117e4:	ldrb	r2, [r3]
   117e8:	cmp	r2, #35	; 0x23
   117ec:	beq	117a0 <__assert_fail@plt+0x4b4>
   117f0:	add	r2, r3, r4
   117f4:	ldrb	r0, [r2, #-1]
   117f8:	cmp	r0, #10
   117fc:	subeq	r4, r4, #1
   11800:	cmp	r4, #0
   11804:	movle	r2, r4
   11808:	subgt	r2, r4, #1
   1180c:	ldrb	r0, [r3, r2]
   11810:	cmp	r0, #13
   11814:	subeq	r4, r4, #1
   11818:	cmp	r4, #0
   1181c:	beq	117a0 <__assert_fail@plt+0x4b4>
   11820:	mov	r5, #0
   11824:	strb	r5, [r3, r4]
   11828:	ldr	r7, [sp, #124]	; 0x7c
   1182c:	ldrb	r3, [r7]
   11830:	cmp	r3, #32
   11834:	cmpne	r3, #9
   11838:	moveq	r2, #1
   1183c:	movne	r2, #0
   11840:	bne	12368 <__assert_fail@plt+0x107c>
   11844:	mov	r2, r7
   11848:	ldrb	r3, [r2, #1]!
   1184c:	add	r5, r5, #1
   11850:	cmp	r3, #9
   11854:	cmpne	r3, #32
   11858:	beq	11848 <__assert_fail@plt+0x55c>
   1185c:	cmp	r3, #92	; 0x5c
   11860:	addeq	r5, r5, #1
   11864:	ldreq	r3, [sp, #40]	; 0x28
   11868:	ldrne	r3, [sp, #52]	; 0x34
   1186c:	str	r3, [sp, #80]	; 0x50
   11870:	ldrb	r3, [fp, #14]
   11874:	cmp	r3, #0
   11878:	addne	r6, r7, r5
   1187c:	beq	11e00 <__assert_fail@plt+0xb14>
   11880:	ldr	r3, [sp, #64]	; 0x40
   11884:	ldr	r9, [r3]
   11888:	ldr	r3, [pc, #2484]	; 12244 <__assert_fail@plt+0xf58>
   1188c:	ldr	r8, [r3, r9, lsl #2]
   11890:	mov	r0, r8
   11894:	bl	111a8 <strlen@plt>
   11898:	mov	r1, r8
   1189c:	mov	r2, r0
   118a0:	str	r0, [sp, #72]	; 0x48
   118a4:	mov	r0, r6
   118a8:	bl	112bc <strncmp@plt>
   118ac:	subs	r2, r0, #0
   118b0:	bne	11c1c <__assert_fail@plt+0x930>
   118b4:	ldr	r3, [sp, #72]	; 0x48
   118b8:	mov	r0, r6
   118bc:	add	r5, r5, r3
   118c0:	mov	r1, r8
   118c4:	ldrb	r6, [r7, r5]
   118c8:	strb	r2, [r7, r5]
   118cc:	bl	11004 <strcmp@plt>
   118d0:	add	r3, r7, r5
   118d4:	subs	r2, r0, #0
   118d8:	bne	119c4 <__assert_fail@plt+0x6d8>
   118dc:	cmp	r6, #40	; 0x28
   118e0:	beq	123f8 <__assert_fail@plt+0x110c>
   118e4:	ldr	r3, [pc, #2392]	; 12244 <__assert_fail@plt+0xf58>
   118e8:	cmp	r6, #45	; 0x2d
   118ec:	add	r9, r3, r9, lsl #2
   118f0:	add	r5, r5, #1
   118f4:	ldr	r8, [r9, #480]	; 0x1e0
   118f8:	asr	r9, r8, #31
   118fc:	strd	r8, [fp]
   11900:	beq	124c4 <__assert_fail@plt+0x11d8>
   11904:	ldrb	r3, [r7, r5]
   11908:	ldr	r9, [fp]
   1190c:	ldr	r2, [fp, #4]
   11910:	cmp	r3, #32
   11914:	addeq	r5, r5, #1
   11918:	lsr	r9, r9, #2
   1191c:	ldrb	r3, [r7, r5]
   11920:	orr	r9, r9, r2, lsl #30
   11924:	str	r9, [fp, #8]
   11928:	cmp	r3, #40	; 0x28
   1192c:	bne	119c4 <__assert_fail@plt+0x6d8>
   11930:	add	r5, r5, #1
   11934:	subs	r4, r4, r5
   11938:	beq	119c4 <__assert_fail@plt+0x6d8>
   1193c:	add	r8, r7, r5
   11940:	sub	r4, r4, #1
   11944:	add	r3, r8, r4
   11948:	mov	ip, r8
   1194c:	b	11964 <__assert_fail@plt+0x678>
   11950:	mov	r1, r3
   11954:	sub	r3, r3, #1
   11958:	ldrb	r0, [r1]
   1195c:	cmp	r0, #41	; 0x29
   11960:	beq	11984 <__assert_fail@plt+0x698>
   11964:	cmp	r8, r3
   11968:	sub	r2, r3, r8
   1196c:	bne	11950 <__assert_fail@plt+0x664>
   11970:	ldrb	r3, [r7, r5]
   11974:	cmp	r3, #41	; 0x29
   11978:	bne	119c4 <__assert_fail@plt+0x6d8>
   1197c:	mov	r1, r8
   11980:	mov	r2, #0
   11984:	ldr	r3, [sp, #80]	; 0x50
   11988:	cmp	r3, #0
   1198c:	bne	1264c <__assert_fail@plt+0x1360>
   11990:	mov	r3, #0
   11994:	add	r2, r2, #1
   11998:	strb	r3, [r1]
   1199c:	b	119a4 <__assert_fail@plt+0x6b8>
   119a0:	add	r2, r2, #1
   119a4:	ldrb	r3, [r8, r2]
   119a8:	cmp	r3, #9
   119ac:	cmpne	r3, #32
   119b0:	beq	119a0 <__assert_fail@plt+0x6b4>
   119b4:	cmp	r3, #61	; 0x3d
   119b8:	addeq	r2, r2, #1
   119bc:	addeq	r6, r8, r2
   119c0:	beq	11ad0 <__assert_fail@plt+0x7e4>
   119c4:	ldrd	r0, [sp, #56]	; 0x38
   119c8:	ldrb	r3, [fp, #17]
   119cc:	adds	r0, r0, #1
   119d0:	adc	r1, r1, #0
   119d4:	cmp	r3, #0
   119d8:	strd	r0, [sp, #56]	; 0x38
   119dc:	beq	117a0 <__assert_fail@plt+0x4b4>
   119e0:	mov	r2, #5
   119e4:	ldr	r1, [pc, #2224]	; 1229c <__assert_fail@plt+0xfb0>
   119e8:	mov	r0, #0
   119ec:	bl	110a0 <dcgettext@plt>
   119f0:	ldr	r2, [sp, #88]	; 0x58
   119f4:	mov	r1, #3
   119f8:	mov	r4, r0
   119fc:	mov	r0, #0
   11a00:	bl	3a2a8 <__assert_fail@plt+0x28fbc>
   11a04:	ldr	r3, [sp, #64]	; 0x40
   11a08:	ldr	ip, [pc, #2100]	; 12244 <__assert_fail@plt+0xf58>
   11a0c:	mov	r2, r4
   11a10:	ldr	r3, [r3]
   11a14:	ldrd	r4, [sp, #24]
   11a18:	mov	r1, #0
   11a1c:	ldr	r3, [ip, r3, lsl #2]
   11a20:	strd	r4, [sp]
   11a24:	str	r3, [sp, #8]
   11a28:	mov	r3, r0
   11a2c:	mov	r0, r1
   11a30:	bl	11124 <error@plt>
   11a34:	b	117a0 <__assert_fail@plt+0x4b4>
   11a38:	ldr	r1, [pc, #2060]	; 1224c <__assert_fail@plt+0xf60>
   11a3c:	str	r1, [sp, #64]	; 0x40
   11a40:	ldr	r1, [r1]
   11a44:	cmp	r1, #9
   11a48:	movne	r2, #5
   11a4c:	ldrne	r1, [pc, #2124]	; 122a0 <__assert_fail@plt+0xfb4>
   11a50:	bne	1255c <__assert_fail@plt+0x1270>
   11a54:	cmp	r3, #0
   11a58:	cmpeq	r2, #512	; 0x200
   11a5c:	bhi	126c8 <__assert_fail@plt+0x13dc>
   11a60:	ldr	r3, [fp]
   11a64:	ldr	r2, [fp, #4]
   11a68:	lsr	r3, r3, #2
   11a6c:	orr	r3, r3, r2, lsl #30
   11a70:	str	r3, [fp, #8]
   11a74:	ldr	r3, [sp, #64]	; 0x40
   11a78:	ldr	r2, [sp, #40]	; 0x28
   11a7c:	ldrb	r3, [r3, #4]
   11a80:	cmp	r3, #10
   11a84:	moveq	r2, #0
   11a88:	andne	r2, r2, #1
   11a8c:	cmp	r2, #0
   11a90:	bne	1274c <__assert_fail@plt+0x1460>
   11a94:	ldrb	r3, [fp, #13]
   11a98:	ldr	r2, [sp, #40]	; 0x28
   11a9c:	eor	r3, r3, #1
   11aa0:	orrs	r4, r2, r3
   11aa4:	moveq	r2, #5
   11aa8:	ldreq	r1, [pc, #2036]	; 122a4 <__assert_fail@plt+0xfb8>
   11aac:	bne	11654 <__assert_fail@plt+0x368>
   11ab0:	mov	r0, #0
   11ab4:	bl	110a0 <dcgettext@plt>
   11ab8:	mov	r1, #0
   11abc:	mov	r2, r0
   11ac0:	mov	r0, r1
   11ac4:	bl	11124 <error@plt>
   11ac8:	b	11408 <__assert_fail@plt+0x11c>
   11acc:	mov	r6, r3
   11ad0:	mov	r3, r6
   11ad4:	ldrb	r2, [r3], #1
   11ad8:	cmp	r2, #9
   11adc:	cmpne	r2, #32
   11ae0:	beq	11acc <__assert_fail@plt+0x7e0>
   11ae4:	mov	r4, r6
   11ae8:	b	11b0c <__assert_fail@plt+0x820>
   11aec:	bl	11184 <__ctype_b_loc@plt>
   11af0:	ldrb	r3, [r5]
   11af4:	add	r4, r4, #1
   11af8:	lsl	r3, r3, #1
   11afc:	ldr	r2, [r0]
   11b00:	ldrh	r3, [r2, r3]
   11b04:	tst	r3, #4096	; 0x1000
   11b08:	beq	119c4 <__assert_fail@plt+0x6d8>
   11b0c:	sub	r3, r4, r6
   11b10:	cmp	r9, r3
   11b14:	mov	r5, r4
   11b18:	bhi	11aec <__assert_fail@plt+0x800>
   11b1c:	ldrb	r3, [r4]
   11b20:	clz	r3, r3
   11b24:	lsr	r3, r3, #5
   11b28:	cmp	r3, #0
   11b2c:	beq	119c4 <__assert_fail@plt+0x6d8>
   11b30:	ldr	r3, [sp, #76]	; 0x4c
   11b34:	cmp	r3, #0
   11b38:	bne	11b50 <__assert_fail@plt+0x864>
   11b3c:	ldr	r1, [pc, #1960]	; 122ec <__assert_fail@plt+0x1000>
   11b40:	mov	r0, r8
   11b44:	bl	11004 <strcmp@plt>
   11b48:	cmp	r0, #0
   11b4c:	beq	119c4 <__assert_fail@plt+0x6d8>
   11b50:	ldrb	r3, [fp, #16]
   11b54:	cmp	r3, #0
   11b58:	ldrne	r5, [sp, #52]	; 0x34
   11b5c:	bne	11b74 <__assert_fail@plt+0x888>
   11b60:	mov	r1, #10
   11b64:	mov	r0, r8
   11b68:	bl	111b4 <strchr@plt>
   11b6c:	adds	r5, r0, #0
   11b70:	movne	r5, #1
   11b74:	add	r3, sp, #136	; 0x88
   11b78:	add	r2, sp, #132	; 0x84
   11b7c:	ldr	r1, [sp, #112]	; 0x70
   11b80:	mov	r0, r8
   11b84:	bl	12c30 <__assert_fail@plt+0x1944>
   11b88:	and	r9, r5, #1
   11b8c:	subs	r3, r0, #0
   11b90:	str	r3, [sp, #72]	; 0x48
   11b94:	bne	11f30 <__assert_fail@plt+0xc44>
   11b98:	ldrd	r0, [sp, #96]	; 0x60
   11b9c:	ldrb	r3, [fp, #16]
   11ba0:	adds	r0, r0, #1
   11ba4:	adc	r1, r1, #0
   11ba8:	cmp	r3, #0
   11bac:	strd	r0, [sp, #96]	; 0x60
   11bb0:	bne	11c10 <__assert_fail@plt+0x924>
   11bb4:	cmp	r5, #0
   11bb8:	beq	11be4 <__assert_fail@plt+0x8f8>
   11bbc:	ldr	r3, [pc, #1660]	; 12240 <__assert_fail@plt+0xf54>
   11bc0:	ldr	r0, [r3]
   11bc4:	ldr	r3, [r0, #20]
   11bc8:	ldr	r2, [r0, #24]
   11bcc:	cmp	r3, r2
   11bd0:	addcc	r1, r3, #1
   11bd4:	movcc	r2, #92	; 0x5c
   11bd8:	strcc	r1, [r0, #20]
   11bdc:	strbcc	r2, [r3]
   11be0:	bcs	12620 <__assert_fail@plt+0x1334>
   11be4:	mov	r1, r9
   11be8:	mov	r0, r8
   11bec:	bl	128ac <__assert_fail@plt+0x15c0>
   11bf0:	ldr	r1, [pc, #1712]	; 122a8 <__assert_fail@plt+0xfbc>
   11bf4:	mov	r2, #5
   11bf8:	mov	r0, #0
   11bfc:	bl	110a0 <dcgettext@plt>
   11c00:	ldr	r1, [pc, #1700]	; 122ac <__assert_fail@plt+0xfc0>
   11c04:	mov	r2, r0
   11c08:	mov	r0, #1
   11c0c:	bl	111fc <__printf_chk@plt>
   11c10:	ldr	r3, [sp, #40]	; 0x28
   11c14:	str	r3, [sp, #92]	; 0x5c
   11c18:	b	117a0 <__assert_fail@plt+0x4b4>
   11c1c:	ldrb	r1, [r6]
   11c20:	ldr	r3, [fp, #20]
   11c24:	sub	r2, r4, r5
   11c28:	cmp	r1, #92	; 0x5c
   11c2c:	addeq	r3, r3, #1
   11c30:	cmp	r2, r3
   11c34:	bcc	119c4 <__assert_fail@plt+0x6d8>
   11c38:	cmp	r9, #9
   11c3c:	beq	12390 <__assert_fail@plt+0x10a4>
   11c40:	ldr	r8, [fp, #8]
   11c44:	add	r5, r5, r8
   11c48:	ldrb	r3, [r7, r5]
   11c4c:	cmp	r3, #32
   11c50:	cmpne	r3, #9
   11c54:	movne	r3, #1
   11c58:	moveq	r3, #0
   11c5c:	bne	119c4 <__assert_fail@plt+0x6d8>
   11c60:	cmp	r8, #0
   11c64:	strb	r3, [r7, r5]
   11c68:	beq	125dc <__assert_fail@plt+0x12f0>
   11c6c:	bl	11184 <__ctype_b_loc@plt>
   11c70:	add	r1, r6, r8
   11c74:	mov	r3, r6
   11c78:	ldr	r0, [r0]
   11c7c:	ldrb	r2, [r3], #1
   11c80:	lsl	r2, r2, #1
   11c84:	ldrh	r2, [r0, r2]
   11c88:	tst	r2, #4096	; 0x1000
   11c8c:	beq	119c4 <__assert_fail@plt+0x6d8>
   11c90:	cmp	r1, r3
   11c94:	mov	r2, r3
   11c98:	bne	11c7c <__assert_fail@plt+0x990>
   11c9c:	ldrb	r3, [r2]
   11ca0:	cmp	r3, #0
   11ca4:	bne	119c4 <__assert_fail@plt+0x6d8>
   11ca8:	add	r2, r5, #1
   11cac:	sub	r3, r4, r2
   11cb0:	cmp	r3, #1
   11cb4:	beq	12414 <__assert_fail@plt+0x1128>
   11cb8:	ldrb	r3, [r7, r2]
   11cbc:	cmp	r3, #32
   11cc0:	cmpne	r3, #42	; 0x2a
   11cc4:	movne	r3, #1
   11cc8:	moveq	r3, #0
   11ccc:	bne	12414 <__assert_fail@plt+0x1128>
   11cd0:	ldr	r0, [sp, #64]	; 0x40
   11cd4:	ldr	r1, [r0, #8]
   11cd8:	cmp	r1, #1
   11cdc:	addne	r2, r5, #2
   11ce0:	strne	r3, [r0, #8]
   11ce4:	ldr	r3, [sp, #80]	; 0x50
   11ce8:	add	r8, r7, r2
   11cec:	cmp	r3, #0
   11cf0:	beq	11b30 <__assert_fail@plt+0x844>
   11cf4:	sub	r2, r4, r2
   11cf8:	sub	lr, r2, #1
   11cfc:	mov	r0, r8
   11d00:	mov	r1, #0
   11d04:	mov	ip, #10
   11d08:	cmp	r2, r1
   11d0c:	bls	126ac <__assert_fail@plt+0x13c0>
   11d10:	ldrb	r3, [r8, r1]
   11d14:	cmp	r3, #0
   11d18:	beq	11d50 <__assert_fail@plt+0xa64>
   11d1c:	cmp	r3, #92	; 0x5c
   11d20:	bne	125b4 <__assert_fail@plt+0x12c8>
   11d24:	cmp	r1, lr
   11d28:	beq	11d4c <__assert_fail@plt+0xa60>
   11d2c:	add	r1, r1, #1
   11d30:	ldrb	r3, [r8, r1]
   11d34:	cmp	r3, #110	; 0x6e
   11d38:	beq	12638 <__assert_fail@plt+0x134c>
   11d3c:	cmp	r3, #114	; 0x72
   11d40:	beq	1262c <__assert_fail@plt+0x1340>
   11d44:	cmp	r3, #92	; 0x5c
   11d48:	beq	125b4 <__assert_fail@plt+0x12c8>
   11d4c:	mov	r3, #0
   11d50:	adds	r3, r3, #0
   11d54:	movne	r3, #1
   11d58:	b	11b28 <__assert_fail@plt+0x83c>
   11d5c:	add	r3, sp, #216	; 0xd8
   11d60:	add	r2, sp, #136	; 0x88
   11d64:	add	r1, sp, #144	; 0x90
   11d68:	mov	r0, r4
   11d6c:	bl	12c30 <__assert_fail@plt+0x1944>
   11d70:	cmp	r0, #0
   11d74:	bne	12310 <__assert_fail@plt+0x1024>
   11d78:	str	r0, [sp, #68]	; 0x44
   11d7c:	b	116f8 <__assert_fail@plt+0x40c>
   11d80:	ldr	r0, [sp, #124]	; 0x7c
   11d84:	bl	3618c <__assert_fail@plt+0x24ea0>
   11d88:	ldr	r4, [sl]
   11d8c:	ldr	r3, [sp, #76]	; 0x4c
   11d90:	ands	r4, r4, #32
   11d94:	mov	r0, sl
   11d98:	bne	12038 <__assert_fail@plt+0xd4c>
   11d9c:	cmp	r3, #0
   11da0:	beq	12068 <__assert_fail@plt+0xd7c>
   11da4:	bl	35ff4 <__assert_fail@plt+0x24d08>
   11da8:	cmp	r0, #0
   11dac:	beq	1206c <__assert_fail@plt+0xd80>
   11db0:	bl	111c0 <__errno_location@plt>
   11db4:	ldr	r5, [r0]
   11db8:	cmp	r5, #0
   11dbc:	blt	1206c <__assert_fail@plt+0xd80>
   11dc0:	ldrne	r4, [pc, #1256]	; 122b0 <__assert_fail@plt+0xfc4>
   11dc4:	beq	12044 <__assert_fail@plt+0xd58>
   11dc8:	ldr	r2, [sp, #88]	; 0x58
   11dcc:	mov	r1, #3
   11dd0:	mov	r0, #0
   11dd4:	bl	3a2a8 <__assert_fail@plt+0x28fbc>
   11dd8:	mov	r2, r4
   11ddc:	mov	r1, r5
   11de0:	mov	r3, r0
   11de4:	mov	r0, #0
   11de8:	bl	11124 <error@plt>
   11dec:	ldr	r4, [sp, #52]	; 0x34
   11df0:	ldr	r3, [sp, #68]	; 0x44
   11df4:	and	r3, r3, r4
   11df8:	str	r3, [sp, #68]	; 0x44
   11dfc:	b	116f8 <__assert_fail@plt+0x40c>
   11e00:	ldr	r8, [fp, #24]
   11e04:	add	r6, r7, r5
   11e08:	cmp	r8, #0
   11e0c:	bne	11e38 <__assert_fail@plt+0xb4c>
   11e10:	ldr	r9, [pc, #1068]	; 12244 <__assert_fail@plt+0xf58>
   11e14:	ldr	r3, [pc, #1176]	; 122b4 <__assert_fail@plt+0xfc8>
   11e18:	mov	r0, r3
   11e1c:	bl	111a8 <strlen@plt>
   11e20:	ldr	r3, [r9, #4]!
   11e24:	cmp	r8, r0
   11e28:	movcc	r8, r0
   11e2c:	cmp	r3, #0
   11e30:	str	r8, [fp, #24]
   11e34:	bne	11e18 <__assert_fail@plt+0xb2c>
   11e38:	ldrb	r3, [r6]
   11e3c:	ldr	r1, [fp, #24]
   11e40:	ands	r8, r3, #223	; 0xdf
   11e44:	beq	11eb4 <__assert_fail@plt+0xbc8>
   11e48:	cmp	r3, #45	; 0x2d
   11e4c:	cmpne	r3, #9
   11e50:	movne	r8, #1
   11e54:	moveq	r8, #0
   11e58:	cmp	r3, #40	; 0x28
   11e5c:	moveq	r3, #0
   11e60:	andne	r3, r8, #1
   11e64:	cmp	r3, #0
   11e68:	beq	125d4 <__assert_fail@plt+0x12e8>
   11e6c:	mov	r2, r6
   11e70:	mov	r8, #0
   11e74:	b	11e9c <__assert_fail@plt+0xbb0>
   11e78:	cmp	r3, #45	; 0x2d
   11e7c:	cmpne	r3, #9
   11e80:	movne	r0, #1
   11e84:	moveq	r0, #0
   11e88:	cmp	r3, #40	; 0x28
   11e8c:	moveq	r3, #0
   11e90:	andne	r3, r0, #1
   11e94:	cmp	r3, #0
   11e98:	beq	11eb4 <__assert_fail@plt+0xbc8>
   11e9c:	add	r8, r8, #1
   11ea0:	cmp	r8, r1
   11ea4:	bhi	119c4 <__assert_fail@plt+0x6d8>
   11ea8:	ldrb	r3, [r2, #1]!
   11eac:	tst	r3, #223	; 0xdf
   11eb0:	bne	11e78 <__assert_fail@plt+0xb8c>
   11eb4:	mov	r3, #0
   11eb8:	ldrb	r9, [r6, r8]
   11ebc:	ldr	r1, [pc, #896]	; 12244 <__assert_fail@plt+0xf58>
   11ec0:	strb	r3, [r6, r8]
   11ec4:	mov	r0, r6
   11ec8:	bl	1aea8 <__assert_fail@plt+0x9bbc>
   11ecc:	strb	r9, [r6, r8]
   11ed0:	cmp	r0, #2
   11ed4:	ble	119c4 <__assert_fail@plt+0x6d8>
   11ed8:	ldr	r3, [sp, #64]	; 0x40
   11edc:	str	r0, [r3]
   11ee0:	b	11880 <__assert_fail@plt+0x594>
   11ee4:	ldr	r1, [pc, #972]	; 122b8 <__assert_fail@plt+0xfcc>
   11ee8:	mov	r0, r4
   11eec:	bl	360f4 <__assert_fail@plt+0x24e08>
   11ef0:	subs	sl, r0, #0
   11ef4:	strne	r4, [sp, #88]	; 0x58
   11ef8:	bne	11758 <__assert_fail@plt+0x46c>
   11efc:	bl	111c0 <__errno_location@plt>
   11f00:	mov	r2, r4
   11f04:	mov	r1, #3
   11f08:	ldr	r4, [r0]
   11f0c:	mov	r0, sl
   11f10:	bl	3a2a8 <__assert_fail@plt+0x28fbc>
   11f14:	mov	r1, r4
   11f18:	ldr	r2, [pc, #912]	; 122b0 <__assert_fail@plt+0xfc4>
   11f1c:	mov	r3, r0
   11f20:	mov	r0, sl
   11f24:	bl	11124 <error@plt>
   11f28:	ldr	r4, [sp, #52]	; 0x34
   11f2c:	b	11df0 <__assert_fail@plt+0xb04>
   11f30:	ldrb	r3, [fp, #13]
   11f34:	cmp	r3, #0
   11f38:	beq	11f48 <__assert_fail@plt+0xc5c>
   11f3c:	ldrb	r3, [sp, #132]	; 0x84
   11f40:	cmp	r3, #0
   11f44:	bne	11c10 <__assert_fail@plt+0x924>
   11f48:	ldr	r7, [fp, #8]
   11f4c:	lsrs	r7, r7, #1
   11f50:	beq	12470 <__assert_fail@plt+0x1184>
   11f54:	bl	11160 <__ctype_tolower_loc@plt>
   11f58:	ldr	r3, [sp, #112]	; 0x70
   11f5c:	mov	r4, #0
   11f60:	mov	r2, r6
   11f64:	sub	r1, r3, #1
   11f68:	ldr	r0, [r0]
   11f6c:	b	11fa0 <__assert_fail@plt+0xcb4>
   11f70:	ldr	lr, [pc, #716]	; 12244 <__assert_fail@plt+0xf58>
   11f74:	and	r3, r3, #15
   11f78:	ldrb	ip, [r2, #1]
   11f7c:	add	r3, lr, r3
   11f80:	ldrb	r3, [r3, #528]	; 0x210
   11f84:	ldr	ip, [r0, ip, lsl #2]
   11f88:	cmp	ip, r3
   11f8c:	bne	11fc0 <__assert_fail@plt+0xcd4>
   11f90:	add	r4, r4, #1
   11f94:	cmp	r7, r4
   11f98:	add	r2, r2, #2
   11f9c:	beq	12470 <__assert_fail@plt+0x1184>
   11fa0:	ldrb	r3, [r1, #1]!
   11fa4:	ldr	ip, [pc, #664]	; 12244 <__assert_fail@plt+0xf58>
   11fa8:	ldrb	lr, [r6, r4, lsl #1]
   11fac:	add	ip, ip, r3, lsr #4
   11fb0:	ldrb	ip, [ip, #528]	; 0x210
   11fb4:	ldr	lr, [r0, lr, lsl #2]
   11fb8:	cmp	lr, ip
   11fbc:	beq	11f70 <__assert_fail@plt+0xc84>
   11fc0:	cmp	r7, r4
   11fc4:	beq	12470 <__assert_fail@plt+0x1184>
   11fc8:	ldrd	r0, [sp, #104]	; 0x68
   11fcc:	ldrb	r3, [fp, #16]
   11fd0:	adds	r0, r0, #1
   11fd4:	adc	r1, r1, #0
   11fd8:	cmp	r3, #0
   11fdc:	strd	r0, [sp, #104]	; 0x68
   11fe0:	bne	11c10 <__assert_fail@plt+0x924>
   11fe4:	cmp	r5, #0
   11fe8:	beq	125c4 <__assert_fail@plt+0x12d8>
   11fec:	ldr	r3, [pc, #588]	; 12240 <__assert_fail@plt+0xf54>
   11ff0:	ldr	r0, [r3]
   11ff4:	ldr	r3, [r0, #20]
   11ff8:	ldr	r2, [r0, #24]
   11ffc:	cmp	r3, r2
   12000:	addcc	r1, r3, #1
   12004:	movcc	r2, #92	; 0x5c
   12008:	strcc	r1, [r0, #20]
   1200c:	strbcc	r2, [r3]
   12010:	bcs	12640 <__assert_fail@plt+0x1354>
   12014:	mov	r1, r9
   12018:	mov	r0, r8
   1201c:	bl	128ac <__assert_fail@plt+0x15c0>
   12020:	cmp	r7, r4
   12024:	beq	124ac <__assert_fail@plt+0x11c0>
   12028:	mov	r2, #5
   1202c:	ldr	r1, [pc, #648]	; 122bc <__assert_fail@plt+0xfd0>
   12030:	mov	r0, #0
   12034:	b	11bfc <__assert_fail@plt+0x910>
   12038:	cmp	r3, #0
   1203c:	beq	12060 <__assert_fail@plt+0xd74>
   12040:	bl	35ff4 <__assert_fail@plt+0x24d08>
   12044:	mov	r2, #5
   12048:	ldr	r1, [pc, #624]	; 122c0 <__assert_fail@plt+0xfd4>
   1204c:	mov	r0, #0
   12050:	bl	110a0 <dcgettext@plt>
   12054:	mov	r5, #0
   12058:	mov	r4, r0
   1205c:	b	11dc8 <__assert_fail@plt+0xadc>
   12060:	bl	1128c <clearerr_unlocked@plt>
   12064:	b	12044 <__assert_fail@plt+0xd58>
   12068:	bl	1128c <clearerr_unlocked@plt>
   1206c:	ldr	r3, [sp, #92]	; 0x5c
   12070:	cmp	r3, #0
   12074:	beq	12574 <__assert_fail@plt+0x1288>
   12078:	ldrb	r3, [fp, #16]
   1207c:	cmp	r3, #0
   12080:	bne	121ec <__assert_fail@plt+0xf00>
   12084:	ldrd	r0, [sp, #56]	; 0x38
   12088:	mov	r2, r0
   1208c:	mov	r3, r1
   12090:	orrs	r3, r2, r3
   12094:	beq	120f4 <__assert_fail@plt+0xe08>
   12098:	mov	r3, #0
   1209c:	cmp	r1, r3
   120a0:	mvn	r2, #0
   120a4:	cmpeq	r0, r2
   120a8:	ldrls	r3, [sp, #56]	; 0x38
   120ac:	bls	120c4 <__assert_fail@plt+0xdd8>
   120b0:	ldr	r2, [pc, #524]	; 122c4 <__assert_fail@plt+0xfd8>
   120b4:	mov	r3, #0
   120b8:	bl	3e120 <__assert_fail@plt+0x2ce34>
   120bc:	add	r3, r2, #999424	; 0xf4000
   120c0:	add	r3, r3, #576	; 0x240
   120c4:	mov	r2, #5
   120c8:	str	r2, [sp]
   120cc:	ldr	r1, [pc, #500]	; 122c8 <__assert_fail@plt+0xfdc>
   120d0:	ldr	r2, [pc, #500]	; 122cc <__assert_fail@plt+0xfe0>
   120d4:	mov	r0, #0
   120d8:	bl	112e0 <dcngettext@plt>
   120dc:	ldrd	r2, [sp, #56]	; 0x38
   120e0:	mov	r1, #0
   120e4:	strd	r2, [sp]
   120e8:	mov	r2, r0
   120ec:	mov	r0, r1
   120f0:	bl	11124 <error@plt>
   120f4:	ldrd	r0, [sp, #96]	; 0x60
   120f8:	mov	r2, r0
   120fc:	mov	r3, r1
   12100:	orrs	r3, r2, r3
   12104:	beq	12164 <__assert_fail@plt+0xe78>
   12108:	mov	r3, #0
   1210c:	cmp	r1, r3
   12110:	mvn	r2, #0
   12114:	cmpeq	r0, r2
   12118:	ldrls	r3, [sp, #96]	; 0x60
   1211c:	bls	12134 <__assert_fail@plt+0xe48>
   12120:	ldr	r2, [pc, #412]	; 122c4 <__assert_fail@plt+0xfd8>
   12124:	mov	r3, #0
   12128:	bl	3e120 <__assert_fail@plt+0x2ce34>
   1212c:	add	r3, r2, #999424	; 0xf4000
   12130:	add	r3, r3, #576	; 0x240
   12134:	mov	r2, #5
   12138:	str	r2, [sp]
   1213c:	ldr	r1, [pc, #396]	; 122d0 <__assert_fail@plt+0xfe4>
   12140:	ldr	r2, [pc, #396]	; 122d4 <__assert_fail@plt+0xfe8>
   12144:	mov	r0, #0
   12148:	bl	112e0 <dcngettext@plt>
   1214c:	ldrd	r2, [sp, #96]	; 0x60
   12150:	mov	r1, #0
   12154:	strd	r2, [sp]
   12158:	mov	r2, r0
   1215c:	mov	r0, r1
   12160:	bl	11124 <error@plt>
   12164:	ldrd	r0, [sp, #104]	; 0x68
   12168:	mov	r2, r0
   1216c:	mov	r3, r1
   12170:	orrs	r3, r2, r3
   12174:	beq	121d4 <__assert_fail@plt+0xee8>
   12178:	mov	r3, #0
   1217c:	cmp	r1, r3
   12180:	mvn	r2, #0
   12184:	cmpeq	r0, r2
   12188:	ldrls	r3, [sp, #104]	; 0x68
   1218c:	bls	121a4 <__assert_fail@plt+0xeb8>
   12190:	ldr	r2, [pc, #300]	; 122c4 <__assert_fail@plt+0xfd8>
   12194:	mov	r3, #0
   12198:	bl	3e120 <__assert_fail@plt+0x2ce34>
   1219c:	add	r3, r2, #999424	; 0xf4000
   121a0:	add	r3, r3, #576	; 0x240
   121a4:	mov	r2, #5
   121a8:	str	r2, [sp]
   121ac:	ldr	r1, [pc, #292]	; 122d8 <__assert_fail@plt+0xfec>
   121b0:	ldr	r2, [pc, #292]	; 122dc <__assert_fail@plt+0xff0>
   121b4:	mov	r0, #0
   121b8:	bl	112e0 <dcngettext@plt>
   121bc:	ldrd	r2, [sp, #104]	; 0x68
   121c0:	mov	r1, #0
   121c4:	strd	r2, [sp]
   121c8:	mov	r2, r0
   121cc:	mov	r0, r1
   121d0:	bl	11124 <error@plt>
   121d4:	ldrb	r5, [fp, #13]
   121d8:	ldr	r3, [sp, #116]	; 0x74
   121dc:	eor	r5, r5, #1
   121e0:	orr	r5, r3, r5
   121e4:	ands	r5, r5, #255	; 0xff
   121e8:	beq	125e4 <__assert_fail@plt+0x12f8>
   121ec:	ldr	r3, [sp, #116]	; 0x74
   121f0:	cmp	r3, #0
   121f4:	beq	12228 <__assert_fail@plt+0xf3c>
   121f8:	ldrd	r2, [sp, #96]	; 0x60
   121fc:	ldrd	r0, [sp, #104]	; 0x68
   12200:	orr	r2, r2, r0
   12204:	orr	r3, r3, r1
   12208:	orrs	r3, r2, r3
   1220c:	bne	12228 <__assert_fail@plt+0xf3c>
   12210:	ldrd	r2, [sp, #56]	; 0x38
   12214:	ldrb	r4, [fp, #19]
   12218:	mov	r1, r2
   1221c:	orrs	r3, r1, r3
   12220:	eor	r4, r4, #1
   12224:	orreq	r4, r4, #1
   12228:	and	r4, r4, #1
   1222c:	b	11df0 <__assert_fail@plt+0xb04>
   12230:	andeq	lr, r3, ip, ror sp
   12234:	ldrdeq	lr, [r3], -r8
   12238:	andeq	lr, r3, ip, lsr #28
   1223c:	andeq	fp, r1, ip, lsr r3
   12240:	andeq	r2, r5, r4, lsr #3
   12244:	andeq	lr, r3, ip, ror #6
   12248:	andeq	lr, r3, r0, ror #30
   1224c:	andeq	r2, r5, r8, lsr #2
   12250:			; <UNDEFINED> instruction: 0x000521b0
   12254:	andeq	r2, r5, r8, lsr #3
   12258:	andeq	r0, r0, r3, lsl #2
   1225c:	andeq	r0, r0, r5, lsl #2
   12260:	andeq	r2, r5, r8, lsr r1
   12264:	andeq	lr, r3, r0, asr #30
   12268:	andeq	lr, r3, r0, asr pc
   1226c:	andeq	lr, r3, r8, ror #11
   12270:	andeq	lr, r3, r8, lsr #28
   12274:	strdeq	lr, [r3], -ip
   12278:	andeq	lr, r3, r0, lsr #30
   1227c:	andeq	r2, r5, ip, lsr r1
   12280:	andeq	lr, r3, r0, lsl #8
   12284:	strdeq	lr, [r3], -r0
   12288:	andeq	lr, r3, r8, asr #31
   1228c:	andeq	pc, r3, r8, lsl #1
   12290:	andeq	pc, r3, r8, asr #1
   12294:	andeq	pc, r3, r8, lsl #2
   12298:	andeq	pc, r3, r8, asr #2
   1229c:			; <UNDEFINED> instruction: 0x0003f1b4
   122a0:	andeq	lr, r3, ip, ror #30
   122a4:	andeq	pc, r3, r0, asr #32
   122a8:	andeq	pc, r3, r4, ror #3
   122ac:	strdeq	pc, [r3], -r8
   122b0:	andeq	lr, r3, ip, lsl pc
   122b4:	ldrdeq	lr, [r3], -r4
   122b8:	andeq	lr, r3, r4, ror #11
   122bc:	andeq	pc, r3, r0, lsl #4
   122c0:	andeq	pc, r3, ip, lsl #4
   122c4:	andeq	r4, pc, r0, asr #4
   122c8:	andeq	pc, r3, ip, ror r2	; <UNPREDICTABLE>
   122cc:	andeq	pc, r3, ip, asr #4
   122d0:	ldrdeq	pc, [r3], -r8
   122d4:	andeq	pc, r3, r8, lsr #5
   122d8:	andeq	pc, r3, r4, lsr r3	; <UNPREDICTABLE>
   122dc:	andeq	pc, r3, r4, lsl #6
   122e0:	muleq	r5, r0, r1
   122e4:	muleq	r3, r8, r1
   122e8:	andeq	pc, r3, r8, lsl #4
   122ec:	andeq	lr, r3, r0, ror #11
   122f0:	andeq	r2, r5, r0, lsr #3
   122f4:	andeq	pc, r3, r8, lsl #3
   122f8:	andeq	pc, r3, ip, lsl r2	; <UNPREDICTABLE>
   122fc:	andeq	pc, r3, r4, ror #6
   12300:	andeq	lr, r3, ip, lsl #30
   12304:	andeq	lr, r3, r0, lsr #31
   12308:	andeq	lr, r3, ip, ror #6
   1230c:	andeq	pc, r3, r4
   12310:	ldr	r0, [sp, #64]	; 0x40
   12314:	ldr	r3, [pc, #-60]	; 122e0 <__assert_fail@plt+0xff4>
   12318:	ldr	lr, [r0]
   1231c:	ldrb	ip, [r0, #4]
   12320:	ldr	r0, [pc, #-32]	; 12308 <__assert_fail@plt+0x101c>
   12324:	ldr	r1, [r3]
   12328:	add	lr, r0, lr, lsl #2
   1232c:	ldr	r0, [sp, #32]
   12330:	ldrd	r2, [sp, #216]	; 0xd8
   12334:	subs	r1, r1, r0
   12338:	movne	r1, #1
   1233c:	mov	r0, r4
   12340:	strd	r2, [sp, #8]
   12344:	str	r1, [sp, #4]
   12348:	ldr	r4, [lr, #544]	; 0x220
   1234c:	str	ip, [sp]
   12350:	ldr	r3, [sp, #48]	; 0x30
   12354:	add	r2, sp, #144	; 0x90
   12358:	mov	r1, #1
   1235c:	blx	r4
   12360:	ldr	r0, [sp, #68]	; 0x44
   12364:	b	11d78 <__assert_fail@plt+0xa8c>
   12368:	mov	r5, r2
   1236c:	b	1185c <__assert_fail@plt+0x570>
   12370:	ldrb	r3, [fp, #12]
   12374:	cmp	r3, #0
   12378:	bne	12538 <__assert_fail@plt+0x124c>
   1237c:	ldr	r3, [sp, #68]	; 0x44
   12380:	eor	r0, r3, #1
   12384:	uxtb	r0, r0
   12388:	add	sp, sp, #292	; 0x124
   1238c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12390:	mov	r3, #0
   12394:	str	r3, [fp, #8]
   12398:	bl	11184 <__ctype_b_loc@plt>
   1239c:	ldr	ip, [sp, #52]	; 0x34
   123a0:	mov	r2, r6
   123a4:	ldr	lr, [sp, #40]	; 0x28
   123a8:	ldr	r0, [r0]
   123ac:	b	123b4 <__assert_fail@plt+0x10c8>
   123b0:	mov	ip, lr
   123b4:	sub	r1, r2, r6
   123b8:	ldrb	r3, [r2], #1
   123bc:	lsl	r3, r3, #1
   123c0:	ldrh	r3, [r0, r3]
   123c4:	tst	r3, #4096	; 0x1000
   123c8:	bne	123b0 <__assert_fail@plt+0x10c4>
   123cc:	cmp	ip, #0
   123d0:	beq	119c4 <__assert_fail@plt+0x6d8>
   123d4:	sub	r3, r1, #2
   123d8:	cmp	r3, #126	; 0x7e
   123dc:	str	r1, [fp, #8]
   123e0:	bhi	119c4 <__assert_fail@plt+0x6d8>
   123e4:	ands	r3, r1, #1
   123e8:	bne	119c4 <__assert_fail@plt+0x6d8>
   123ec:	lsl	r1, r1, #2
   123f0:	stm	fp, {r1, r3}
   123f4:	b	11c40 <__assert_fail@plt+0x954>
   123f8:	ldr	r2, [pc, #-248]	; 12308 <__assert_fail@plt+0x101c>
   123fc:	strb	r6, [r3]
   12400:	add	r9, r2, r9, lsl #2
   12404:	ldr	r2, [r9, #480]	; 0x1e0
   12408:	asr	r3, r2, #31
   1240c:	strd	r2, [fp]
   12410:	b	11904 <__assert_fail@plt+0x618>
   12414:	ldr	r3, [sp, #64]	; 0x40
   12418:	ldr	r3, [r3, #8]
   1241c:	cmp	r3, #0
   12420:	movne	r3, #1
   12424:	ldrne	r1, [sp, #64]	; 0x40
   12428:	strne	r3, [r1, #8]
   1242c:	bne	11ce4 <__assert_fail@plt+0x9f8>
   12430:	b	119c4 <__assert_fail@plt+0x6d8>
   12434:	mov	r0, r3
   12438:	mov	r2, #5
   1243c:	ldr	r1, [pc, #-352]	; 122e4 <__assert_fail@plt+0xff8>
   12440:	mov	r4, r3
   12444:	bl	110a0 <dcgettext@plt>
   12448:	ldr	r2, [sp, #88]	; 0x58
   1244c:	mov	r1, #3
   12450:	mov	r5, r0
   12454:	mov	r0, r4
   12458:	bl	3a2a8 <__assert_fail@plt+0x28fbc>
   1245c:	mov	r2, r5
   12460:	mov	r1, r4
   12464:	mov	r3, r0
   12468:	mov	r0, #1
   1246c:	bl	11124 <error@plt>
   12470:	ldrb	r3, [fp, #16]
   12474:	cmp	r3, #0
   12478:	str	r3, [sp, #116]	; 0x74
   1247c:	bne	11c10 <__assert_fail@plt+0x924>
   12480:	ldrb	r3, [fp, #18]
   12484:	cmp	r3, #0
   12488:	str	r3, [sp, #116]	; 0x74
   1248c:	bne	11c10 <__assert_fail@plt+0x924>
   12490:	cmp	r5, #0
   12494:	bne	1273c <__assert_fail@plt+0x1450>
   12498:	ldr	r1, [sp, #116]	; 0x74
   1249c:	mov	r0, r8
   124a0:	bl	128ac <__assert_fail@plt+0x15c0>
   124a4:	ldr	r3, [sp, #72]	; 0x48
   124a8:	str	r3, [sp, #116]	; 0x74
   124ac:	ldrb	r0, [fp, #18]
   124b0:	cmp	r0, #0
   124b4:	bne	11c10 <__assert_fail@plt+0x924>
   124b8:	mov	r2, #5
   124bc:	ldr	r1, [pc, #-476]	; 122e8 <__assert_fail@plt+0xffc>
   124c0:	b	11bfc <__assert_fail@plt+0x910>
   124c4:	str	r2, [sp]
   124c8:	add	r0, r7, r5
   124cc:	add	r3, sp, #136	; 0x88
   124d0:	add	r1, sp, #132	; 0x84
   124d4:	bl	3c668 <__assert_fail@plt+0x2b37c>
   124d8:	cmp	r0, #0
   124dc:	bne	119c4 <__assert_fail@plt+0x6d8>
   124e0:	ldrd	r0, [sp, #136]	; 0x88
   124e4:	orrs	r3, r0, r1
   124e8:	beq	119c4 <__assert_fail@plt+0x6d8>
   124ec:	ldrd	r2, [fp]
   124f0:	cmp	r1, r3
   124f4:	cmpeq	r0, r2
   124f8:	bhi	119c4 <__assert_fail@plt+0x6d8>
   124fc:	and	r2, r0, #7
   12500:	mov	r3, #0
   12504:	orrs	r3, r2, r3
   12508:	bne	119c4 <__assert_fail@plt+0x6d8>
   1250c:	ldr	r5, [sp, #132]	; 0x84
   12510:	strd	r0, [fp]
   12514:	sub	r5, r5, r7
   12518:	b	11904 <__assert_fail@plt+0x618>
   1251c:	ldr	r2, [sp, #84]	; 0x54
   12520:	ldr	r1, [sp, #32]
   12524:	add	r2, r2, #4
   12528:	str	r2, [sp, #84]	; 0x54
   1252c:	ldr	r2, [pc, #-584]	; 122ec <__assert_fail@plt+0x1000>
   12530:	str	r2, [r5, r1, lsl #2]
   12534:	b	116e8 <__assert_fail@plt+0x3fc>
   12538:	ldr	r3, [pc, #-592]	; 122f0 <__assert_fail@plt+0x1004>
   1253c:	ldr	r0, [r3]
   12540:	bl	35ff4 <__assert_fail@plt+0x24d08>
   12544:	cmn	r0, #1
   12548:	bne	1237c <__assert_fail@plt+0x1090>
   1254c:	bl	111c0 <__errno_location@plt>
   12550:	ldr	r1, [pc, #-612]	; 122f4 <__assert_fail@plt+0x1008>
   12554:	mov	r2, #5
   12558:	ldr	r4, [r0]
   1255c:	mov	r0, #0
   12560:	bl	110a0 <dcgettext@plt>
   12564:	mov	r1, r4
   12568:	mov	r2, r0
   1256c:	mov	r0, #1
   12570:	bl	11124 <error@plt>
   12574:	mov	r0, r3
   12578:	mov	r2, #5
   1257c:	ldr	r1, [pc, #-652]	; 122f8 <__assert_fail@plt+0x100c>
   12580:	mov	r6, r3
   12584:	bl	110a0 <dcgettext@plt>
   12588:	ldr	r2, [sp, #88]	; 0x58
   1258c:	mov	r1, #3
   12590:	mov	r5, r0
   12594:	mov	r0, r6
   12598:	bl	3a2a8 <__assert_fail@plt+0x28fbc>
   1259c:	mov	r2, r5
   125a0:	mov	r1, r6
   125a4:	mov	r3, r0
   125a8:	mov	r0, r6
   125ac:	bl	11124 <error@plt>
   125b0:	b	12228 <__assert_fail@plt+0xf3c>
   125b4:	strb	r3, [r0]
   125b8:	add	r1, r1, #1
   125bc:	add	r0, r0, #1
   125c0:	b	11d08 <__assert_fail@plt+0xa1c>
   125c4:	mov	r1, r5
   125c8:	mov	r0, r8
   125cc:	bl	128ac <__assert_fail@plt+0x15c0>
   125d0:	b	12028 <__assert_fail@plt+0xd3c>
   125d4:	mov	r8, r3
   125d8:	b	11eb4 <__assert_fail@plt+0xbc8>
   125dc:	mov	r2, r6
   125e0:	b	11c9c <__assert_fail@plt+0x9b0>
   125e4:	mov	r2, #5
   125e8:	ldr	r1, [pc, #-756]	; 122fc <__assert_fail@plt+0x1010>
   125ec:	mov	r0, r5
   125f0:	bl	110a0 <dcgettext@plt>
   125f4:	ldr	r2, [sp, #88]	; 0x58
   125f8:	mov	r1, #3
   125fc:	mov	r6, r0
   12600:	mov	r0, r5
   12604:	bl	3a2a8 <__assert_fail@plt+0x28fbc>
   12608:	mov	r2, r6
   1260c:	mov	r1, r5
   12610:	mov	r3, r0
   12614:	mov	r0, r5
   12618:	bl	11124 <error@plt>
   1261c:	b	12228 <__assert_fail@plt+0xf3c>
   12620:	mov	r1, #92	; 0x5c
   12624:	bl	11244 <__overflow@plt>
   12628:	b	11be4 <__assert_fail@plt+0x8f8>
   1262c:	mov	r3, #13
   12630:	strb	r3, [r0]
   12634:	b	125b8 <__assert_fail@plt+0x12cc>
   12638:	strb	ip, [r0]
   1263c:	b	125b8 <__assert_fail@plt+0x12cc>
   12640:	mov	r1, #92	; 0x5c
   12644:	bl	11244 <__overflow@plt>
   12648:	b	12014 <__assert_fail@plt+0xd28>
   1264c:	mov	r3, #0
   12650:	sub	lr, r2, #1
   12654:	mov	r4, #10
   12658:	cmp	r2, r3
   1265c:	bls	12758 <__assert_fail@plt+0x146c>
   12660:	ldrb	r0, [r8, r3]
   12664:	cmp	r0, #0
   12668:	beq	119c4 <__assert_fail@plt+0x6d8>
   1266c:	cmp	r0, #92	; 0x5c
   12670:	bne	1269c <__assert_fail@plt+0x13b0>
   12674:	cmp	r3, lr
   12678:	beq	119c4 <__assert_fail@plt+0x6d8>
   1267c:	add	r3, r3, #1
   12680:	ldrb	r0, [r8, r3]
   12684:	cmp	r0, #110	; 0x6e
   12688:	beq	1277c <__assert_fail@plt+0x1490>
   1268c:	cmp	r0, #114	; 0x72
   12690:	beq	12770 <__assert_fail@plt+0x1484>
   12694:	cmp	r0, #92	; 0x5c
   12698:	bne	119c4 <__assert_fail@plt+0x6d8>
   1269c:	strb	r0, [ip]
   126a0:	add	r3, r3, #1
   126a4:	add	ip, ip, #1
   126a8:	b	12658 <__assert_fail@plt+0x136c>
   126ac:	add	r4, r7, r4
   126b0:	cmp	r0, r4
   126b4:	movcs	r3, r8
   126b8:	movcc	r3, #0
   126bc:	strbcc	r3, [r0]
   126c0:	movcc	r3, r8
   126c4:	b	11d50 <__assert_fail@plt+0xa64>
   126c8:	mov	r2, #5
   126cc:	ldr	r1, [pc, #-980]	; 12300 <__assert_fail@plt+0x1014>
   126d0:	mov	r0, r4
   126d4:	bl	110a0 <dcgettext@plt>
   126d8:	mov	r5, r0
   126dc:	ldr	r0, [sp, #24]
   126e0:	bl	3b19c <__assert_fail@plt+0x29eb0>
   126e4:	mov	r2, r5
   126e8:	mov	r1, r4
   126ec:	mov	r3, r0
   126f0:	mov	r0, r4
   126f4:	bl	11124 <error@plt>
   126f8:	ldr	r1, [pc, #-1020]	; 12304 <__assert_fail@plt+0x1018>
   126fc:	mov	r2, #5
   12700:	mov	r0, r4
   12704:	bl	110a0 <dcgettext@plt>
   12708:	ldr	r3, [sp, #64]	; 0x40
   1270c:	ldr	r2, [pc, #-1036]	; 12308 <__assert_fail@plt+0x101c>
   12710:	ldr	r3, [r3]
   12714:	mov	r5, r0
   12718:	ldr	r0, [r2, r3, lsl #2]
   1271c:	bl	3b19c <__assert_fail@plt+0x29eb0>
   12720:	mov	r3, #512	; 0x200
   12724:	str	r3, [sp]
   12728:	mov	r2, r5
   1272c:	mov	r1, r4
   12730:	mov	r3, r0
   12734:	mov	r0, #1
   12738:	bl	11124 <error@plt>
   1273c:	ldr	r3, [sp, #72]	; 0x48
   12740:	mov	r4, r7
   12744:	str	r3, [sp, #116]	; 0x74
   12748:	b	11fec <__assert_fail@plt+0xd00>
   1274c:	mov	r2, #5
   12750:	ldr	r1, [pc, #-1100]	; 1230c <__assert_fail@plt+0x1020>
   12754:	b	11ab0 <__assert_fail@plt+0x7c4>
   12758:	cmp	r1, ip
   1275c:	movhi	r3, #0
   12760:	strbhi	r3, [ip]
   12764:	cmp	r8, #0
   12768:	bne	11990 <__assert_fail@plt+0x6a4>
   1276c:	b	119c4 <__assert_fail@plt+0x6d8>
   12770:	mov	r0, #13
   12774:	strb	r0, [ip]
   12778:	b	126a0 <__assert_fail@plt+0x13b4>
   1277c:	strb	r4, [ip]
   12780:	b	126a0 <__assert_fail@plt+0x13b4>
   12784:	mov	fp, #0
   12788:	mov	lr, #0
   1278c:	pop	{r1}		; (ldr r1, [sp], #4)
   12790:	mov	r2, sp
   12794:	push	{r2}		; (str r2, [sp, #-4]!)
   12798:	push	{r0}		; (str r0, [sp, #-4]!)
   1279c:	ldr	ip, [pc, #16]	; 127b4 <__assert_fail@plt+0x14c8>
   127a0:	push	{ip}		; (str ip, [sp, #-4]!)
   127a4:	ldr	r0, [pc, #12]	; 127b8 <__assert_fail@plt+0x14cc>
   127a8:	ldr	r3, [pc, #12]	; 127bc <__assert_fail@plt+0x14d0>
   127ac:	bl	11148 <__libc_start_main@plt>
   127b0:	bl	112c8 <abort@plt>
   127b4:	andeq	lr, r3, r0, asr #6
   127b8:	strdeq	r1, [r1], -r8
   127bc:	andeq	lr, r3, r0, ror #5
   127c0:	ldr	r3, [pc, #20]	; 127dc <__assert_fail@plt+0x14f0>
   127c4:	ldr	r2, [pc, #20]	; 127e0 <__assert_fail@plt+0x14f4>
   127c8:	add	r3, pc, r3
   127cc:	ldr	r2, [r3, r2]
   127d0:	cmp	r2, #0
   127d4:	bxeq	lr
   127d8:	b	1116c <__gmon_start__@plt>
   127dc:	andeq	pc, r3, r0, lsr r8	; <UNPREDICTABLE>
   127e0:	andeq	r0, r0, ip, lsl r1
   127e4:	ldr	r3, [pc, #28]	; 12808 <__assert_fail@plt+0x151c>
   127e8:	ldr	r0, [pc, #28]	; 1280c <__assert_fail@plt+0x1520>
   127ec:	sub	r3, r3, r0
   127f0:	cmp	r3, #6
   127f4:	bxls	lr
   127f8:	ldr	r3, [pc, #16]	; 12810 <__assert_fail@plt+0x1524>
   127fc:	cmp	r3, #0
   12800:	bxeq	lr
   12804:	bx	r3
   12808:	andeq	r2, r5, r7, lsl #3
   1280c:	andeq	r2, r5, r4, lsl #3
   12810:	andeq	r0, r0, r0
   12814:	ldr	r1, [pc, #36]	; 12840 <__assert_fail@plt+0x1554>
   12818:	ldr	r0, [pc, #36]	; 12844 <__assert_fail@plt+0x1558>
   1281c:	sub	r1, r1, r0
   12820:	asr	r1, r1, #2
   12824:	add	r1, r1, r1, lsr #31
   12828:	asrs	r1, r1, #1
   1282c:	bxeq	lr
   12830:	ldr	r3, [pc, #16]	; 12848 <__assert_fail@plt+0x155c>
   12834:	cmp	r3, #0
   12838:	bxeq	lr
   1283c:	bx	r3
   12840:	andeq	r2, r5, r4, lsl #3
   12844:	andeq	r2, r5, r4, lsl #3
   12848:	andeq	r0, r0, r0
   1284c:	push	{r4, lr}
   12850:	ldr	r4, [pc, #24]	; 12870 <__assert_fail@plt+0x1584>
   12854:	ldrb	r3, [r4]
   12858:	cmp	r3, #0
   1285c:	popne	{r4, pc}
   12860:	bl	127e4 <__assert_fail@plt+0x14f8>
   12864:	mov	r3, #1
   12868:	strb	r3, [r4]
   1286c:	pop	{r4, pc}
   12870:	andeq	r2, r5, ip, lsr #3
   12874:	ldr	r0, [pc, #40]	; 128a4 <__assert_fail@plt+0x15b8>
   12878:	ldr	r3, [r0]
   1287c:	cmp	r3, #0
   12880:	bne	12888 <__assert_fail@plt+0x159c>
   12884:	b	12814 <__assert_fail@plt+0x1528>
   12888:	ldr	r3, [pc, #24]	; 128a8 <__assert_fail@plt+0x15bc>
   1288c:	cmp	r3, #0
   12890:	beq	12884 <__assert_fail@plt+0x1598>
   12894:	push	{r4, lr}
   12898:	blx	r3
   1289c:	pop	{r4, lr}
   128a0:	b	12814 <__assert_fail@plt+0x1528>
   128a4:	andeq	r1, r5, r4, lsl pc
   128a8:	andeq	r0, r0, r0
   128ac:	cmp	r1, #0
   128b0:	beq	1297c <__assert_fail@plt+0x1690>
   128b4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   128b8:	mov	r4, r0
   128bc:	ldrb	r1, [r0]
   128c0:	cmp	r1, #0
   128c4:	beq	12990 <__assert_fail@plt+0x16a4>
   128c8:	ldr	r5, [pc, #196]	; 12994 <__assert_fail@plt+0x16a8>
   128cc:	ldr	sl, [pc, #196]	; 12998 <__assert_fail@plt+0x16ac>
   128d0:	ldr	r9, [pc, #196]	; 1299c <__assert_fail@plt+0x16b0>
   128d4:	ldr	r8, [pc, #196]	; 129a0 <__assert_fail@plt+0x16b4>
   128d8:	mov	r7, #2
   128dc:	mov	r6, #1
   128e0:	b	12920 <__assert_fail@plt+0x1634>
   128e4:	cmp	r1, #92	; 0x5c
   128e8:	beq	12964 <__assert_fail@plt+0x1678>
   128ec:	cmp	r1, #10
   128f0:	beq	1294c <__assert_fail@plt+0x1660>
   128f4:	ldr	r0, [r5]
   128f8:	ldr	r3, [r0, #20]
   128fc:	ldr	r2, [r0, #24]
   12900:	add	ip, r3, #1
   12904:	cmp	r3, r2
   12908:	strcc	ip, [r0, #20]
   1290c:	strbcc	r1, [r3]
   12910:	bcs	12988 <__assert_fail@plt+0x169c>
   12914:	ldrb	r1, [r4, #1]!
   12918:	cmp	r1, #0
   1291c:	beq	12948 <__assert_fail@plt+0x165c>
   12920:	cmp	r1, #13
   12924:	bne	128e4 <__assert_fail@plt+0x15f8>
   12928:	mov	r1, r6
   1292c:	ldr	r3, [r5]
   12930:	mov	r2, r7
   12934:	mov	r0, sl
   12938:	bl	1107c <fwrite_unlocked@plt>
   1293c:	ldrb	r1, [r4, #1]!
   12940:	cmp	r1, #0
   12944:	bne	12920 <__assert_fail@plt+0x1634>
   12948:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1294c:	ldr	r3, [r5]
   12950:	mov	r2, r7
   12954:	mov	r1, r6
   12958:	mov	r0, r8
   1295c:	bl	1107c <fwrite_unlocked@plt>
   12960:	b	12914 <__assert_fail@plt+0x1628>
   12964:	ldr	r3, [r5]
   12968:	mov	r2, r7
   1296c:	mov	r1, r6
   12970:	mov	r0, r9
   12974:	bl	1107c <fwrite_unlocked@plt>
   12978:	b	12914 <__assert_fail@plt+0x1628>
   1297c:	ldr	r3, [pc, #16]	; 12994 <__assert_fail@plt+0x16a8>
   12980:	ldr	r1, [r3]
   12984:	b	10fe0 <fputs_unlocked@plt>
   12988:	bl	11244 <__overflow@plt>
   1298c:	b	12914 <__assert_fail@plt+0x1628>
   12990:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12994:	andeq	r2, r5, r4, lsr #3
   12998:			; <UNDEFINED> instruction: 0x0003e5bc
   1299c:	andeq	lr, r3, r0, asr #11
   129a0:			; <UNDEFINED> instruction: 0x0003e5b8
   129a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   129a8:	sub	sp, sp, #12
   129ac:	mov	r4, r2
   129b0:	ldrb	r9, [sp, #48]	; 0x30
   129b4:	mov	sl, r3
   129b8:	str	r0, [sp, #4]
   129bc:	cmp	r9, #10
   129c0:	beq	12b0c <__assert_fail@plt+0x1820>
   129c4:	ldr	r8, [pc, #540]	; 12be8 <__assert_fail@plt+0x18fc>
   129c8:	mov	r3, #0
   129cc:	str	r3, [sp]
   129d0:	cmp	sl, #0
   129d4:	bne	12aa0 <__assert_fail@plt+0x17b4>
   129d8:	ldr	r5, [pc, #524]	; 12bec <__assert_fail@plt+0x1900>
   129dc:	ldr	r3, [r5, #8]
   129e0:	lsrs	r3, r3, #1
   129e4:	beq	12a48 <__assert_fail@plt+0x175c>
   129e8:	ldr	r7, [pc, #512]	; 12bf0 <__assert_fail@plt+0x1904>
   129ec:	sub	fp, r4, #1
   129f0:	mov	r6, #1
   129f4:	mov	r4, #0
   129f8:	ldrb	r2, [fp, #1]!
   129fc:	mov	r1, r7
   12a00:	mov	r0, r6
   12a04:	bl	111fc <__printf_chk@plt>
   12a08:	ldr	r3, [r5, #8]
   12a0c:	add	r4, r4, #1
   12a10:	cmp	r4, r3, lsr #1
   12a14:	bcc	129f8 <__assert_fail@plt+0x170c>
   12a18:	cmp	sl, #0
   12a1c:	beq	12a48 <__assert_fail@plt+0x175c>
   12a20:	ldr	r0, [r8]
   12a24:	ldr	r3, [r0, #20]
   12a28:	ldr	r2, [r0, #24]
   12a2c:	cmp	r3, r2
   12a30:	bcs	12b68 <__assert_fail@plt+0x187c>
   12a34:	add	r2, r3, #1
   12a38:	str	r2, [r0, #20]
   12a3c:	strb	r9, [r3]
   12a40:	add	sp, sp, #12
   12a44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12a48:	ldr	r0, [r8]
   12a4c:	ldr	r3, [r0, #20]
   12a50:	ldr	r2, [r0, #24]
   12a54:	cmp	r3, r2
   12a58:	addcc	r1, r3, #1
   12a5c:	movcc	r2, #32
   12a60:	strcc	r1, [r0, #20]
   12a64:	strbcc	r2, [r3]
   12a68:	bcs	12b5c <__assert_fail@plt+0x1870>
   12a6c:	ldr	r0, [r8]
   12a70:	ldr	r3, [r0, #20]
   12a74:	ldr	r2, [r0, #24]
   12a78:	cmp	r3, r2
   12a7c:	addcc	r1, r3, #1
   12a80:	movcc	r2, #32
   12a84:	strcc	r1, [r0, #20]
   12a88:	strbcc	r2, [r3]
   12a8c:	bcs	12b50 <__assert_fail@plt+0x1864>
   12a90:	ldr	r1, [sp]
   12a94:	ldr	r0, [sp, #4]
   12a98:	bl	128ac <__assert_fail@plt+0x15c0>
   12a9c:	b	12a20 <__assert_fail@plt+0x1734>
   12aa0:	ldr	r5, [pc, #332]	; 12bf4 <__assert_fail@plt+0x1908>
   12aa4:	ldr	r3, [pc, #332]	; 12bf8 <__assert_fail@plt+0x190c>
   12aa8:	ldr	r1, [r8]
   12aac:	ldr	r2, [r5]
   12ab0:	ldr	r0, [r3, r2, lsl #2]
   12ab4:	bl	10fe0 <fputs_unlocked@plt>
   12ab8:	ldr	r3, [r5]
   12abc:	ldr	r5, [pc, #296]	; 12bec <__assert_fail@plt+0x1900>
   12ac0:	cmp	r3, #9
   12ac4:	beq	12b78 <__assert_fail@plt+0x188c>
   12ac8:	ldr	r3, [r8]
   12acc:	mov	r2, #2
   12ad0:	mov	r1, #1
   12ad4:	ldr	r0, [pc, #288]	; 12bfc <__assert_fail@plt+0x1910>
   12ad8:	bl	1107c <fwrite_unlocked@plt>
   12adc:	ldr	r1, [sp]
   12ae0:	ldr	r0, [sp, #4]
   12ae4:	bl	128ac <__assert_fail@plt+0x15c0>
   12ae8:	ldr	r3, [r8]
   12aec:	mov	r2, #4
   12af0:	mov	r1, #1
   12af4:	ldr	r0, [pc, #260]	; 12c00 <__assert_fail@plt+0x1914>
   12af8:	bl	1107c <fwrite_unlocked@plt>
   12afc:	ldr	r3, [r5, #8]
   12b00:	lsrs	r3, r3, #1
   12b04:	bne	129e8 <__assert_fail@plt+0x16fc>
   12b08:	b	12a20 <__assert_fail@plt+0x1734>
   12b0c:	mov	r1, #92	; 0x5c
   12b10:	bl	111b4 <strchr@plt>
   12b14:	cmp	r0, #0
   12b18:	beq	12bb4 <__assert_fail@plt+0x18c8>
   12b1c:	ldr	r8, [pc, #196]	; 12be8 <__assert_fail@plt+0x18fc>
   12b20:	ldr	r0, [r8]
   12b24:	ldr	r3, [r0, #20]
   12b28:	ldr	r2, [r0, #24]
   12b2c:	cmp	r3, r2
   12b30:	bcs	12ba0 <__assert_fail@plt+0x18b4>
   12b34:	add	r1, r3, #1
   12b38:	str	r1, [r0, #20]
   12b3c:	mov	r2, #92	; 0x5c
   12b40:	mov	r1, #1
   12b44:	str	r1, [sp]
   12b48:	strb	r2, [r3]
   12b4c:	b	129d0 <__assert_fail@plt+0x16e4>
   12b50:	mov	r1, #32
   12b54:	bl	11244 <__overflow@plt>
   12b58:	b	12a90 <__assert_fail@plt+0x17a4>
   12b5c:	mov	r1, #32
   12b60:	bl	11244 <__overflow@plt>
   12b64:	b	12a6c <__assert_fail@plt+0x1780>
   12b68:	mov	r1, r9
   12b6c:	add	sp, sp, #12
   12b70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12b74:	b	11244 <__overflow@plt>
   12b78:	ldrd	r2, [r5]
   12b7c:	ldr	r0, [pc, #128]	; 12c04 <__assert_fail@plt+0x1918>
   12b80:	mov	r1, #0
   12b84:	cmp	r3, r1
   12b88:	cmpeq	r2, r0
   12b8c:	bhi	12ac8 <__assert_fail@plt+0x17dc>
   12b90:	ldr	r1, [pc, #112]	; 12c08 <__assert_fail@plt+0x191c>
   12b94:	mov	r0, #1
   12b98:	bl	111fc <__printf_chk@plt>
   12b9c:	b	12ac8 <__assert_fail@plt+0x17dc>
   12ba0:	mov	r1, #92	; 0x5c
   12ba4:	bl	11244 <__overflow@plt>
   12ba8:	mov	r3, #1
   12bac:	str	r3, [sp]
   12bb0:	b	129d0 <__assert_fail@plt+0x16e4>
   12bb4:	mov	r1, r9
   12bb8:	ldr	r0, [sp, #4]
   12bbc:	bl	111b4 <strchr@plt>
   12bc0:	cmp	r0, #0
   12bc4:	bne	12b1c <__assert_fail@plt+0x1830>
   12bc8:	mov	r1, #13
   12bcc:	ldr	r0, [sp, #4]
   12bd0:	bl	111b4 <strchr@plt>
   12bd4:	cmp	r0, #0
   12bd8:	bne	12b1c <__assert_fail@plt+0x1830>
   12bdc:	str	r0, [sp]
   12be0:	ldr	r8, [pc]	; 12be8 <__assert_fail@plt+0x18fc>
   12be4:	b	129d0 <__assert_fail@plt+0x16e4>
   12be8:	andeq	r2, r5, r4, lsr #3
   12bec:			; <UNDEFINED> instruction: 0x000521b0
   12bf0:	ldrdeq	lr, [r3], -r8
   12bf4:	andeq	r2, r5, r8, lsr #2
   12bf8:	andeq	lr, r3, ip, ror #6
   12bfc:	andeq	lr, r3, ip, asr #11
   12c00:	ldrdeq	lr, [r3], -r0
   12c04:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   12c08:	andeq	lr, r3, r4, asr #11
   12c0c:	b	332e0 <__assert_fail@plt+0x21ff4>
   12c10:	ldr	r2, [r2]
   12c14:	b	1a4b0 <__assert_fail@plt+0x91c4>
   12c18:	b	20f64 <__assert_fail@plt+0xfc78>
   12c1c:	b	20f78 <__assert_fail@plt+0xfc8c>
   12c20:	b	1e154 <__assert_fail@plt+0xce68>
   12c24:	b	1e168 <__assert_fail@plt+0xce7c>
   12c28:	b	1c4fc <__assert_fail@plt+0xb210>
   12c2c:	b	1b420 <__assert_fail@plt+0xa134>
   12c30:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12c34:	mov	r8, r1
   12c38:	ldr	r1, [pc, #356]	; 12da4 <__assert_fail@plt+0x1ab8>
   12c3c:	mov	r9, r2
   12c40:	mov	r5, r3
   12c44:	mov	r6, r0
   12c48:	bl	11004 <strcmp@plt>
   12c4c:	mov	r3, #0
   12c50:	strb	r3, [r9]
   12c54:	subs	r7, r0, #0
   12c58:	bne	12d34 <__assert_fail@plt+0x1a48>
   12c5c:	ldr	r3, [pc, #324]	; 12da8 <__assert_fail@plt+0x1abc>
   12c60:	ldr	r2, [pc, #324]	; 12dac <__assert_fail@plt+0x1ac0>
   12c64:	mov	r1, #1
   12c68:	ldr	r4, [r3]
   12c6c:	strb	r1, [r2, #12]
   12c70:	mov	r1, #2
   12c74:	mov	r0, r4
   12c78:	bl	35fc0 <__assert_fail@plt+0x24cd4>
   12c7c:	ldr	r3, [pc, #300]	; 12db0 <__assert_fail@plt+0x1ac4>
   12c80:	ldr	r1, [r3]
   12c84:	cmp	r1, #9
   12c88:	beq	12d74 <__assert_fail@plt+0x1a88>
   12c8c:	ldr	r3, [pc, #288]	; 12db4 <__assert_fail@plt+0x1ac8>
   12c90:	mov	r2, r5
   12c94:	add	r3, r3, r1, lsl #2
   12c98:	mov	r0, r4
   12c9c:	mov	r1, r8
   12ca0:	ldr	r3, [r3, #48]	; 0x30
   12ca4:	blx	r3
   12ca8:	subs	r5, r0, #0
   12cac:	beq	12cb8 <__assert_fail@plt+0x19cc>
   12cb0:	bl	111c0 <__errno_location@plt>
   12cb4:	ldr	r5, [r0]
   12cb8:	cmp	r7, #0
   12cbc:	mov	r0, r4
   12cc0:	bne	12cdc <__assert_fail@plt+0x19f0>
   12cc4:	bl	1128c <clearerr_unlocked@plt>
   12cc8:	cmp	r5, #0
   12ccc:	moveq	r4, #1
   12cd0:	bne	12d04 <__assert_fail@plt+0x1a18>
   12cd4:	mov	r0, r4
   12cd8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12cdc:	bl	35ff4 <__assert_fail@plt+0x24d08>
   12ce0:	cmp	r0, #0
   12ce4:	beq	12cc8 <__assert_fail@plt+0x19dc>
   12ce8:	cmp	r5, #0
   12cec:	bne	12d04 <__assert_fail@plt+0x1a18>
   12cf0:	bl	111c0 <__errno_location@plt>
   12cf4:	ldr	r5, [r0]
   12cf8:	cmp	r5, #0
   12cfc:	moveq	r4, #1
   12d00:	beq	12cd4 <__assert_fail@plt+0x19e8>
   12d04:	mov	r2, r6
   12d08:	mov	r1, #3
   12d0c:	mov	r0, #0
   12d10:	bl	3a2a8 <__assert_fail@plt+0x28fbc>
   12d14:	mov	r4, #0
   12d18:	mov	r1, r5
   12d1c:	ldr	r2, [pc, #148]	; 12db8 <__assert_fail@plt+0x1acc>
   12d20:	mov	r3, r0
   12d24:	mov	r0, #0
   12d28:	bl	11124 <error@plt>
   12d2c:	mov	r0, r4
   12d30:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12d34:	ldr	r1, [pc, #128]	; 12dbc <__assert_fail@plt+0x1ad0>
   12d38:	mov	r0, r6
   12d3c:	bl	360f4 <__assert_fail@plt+0x24e08>
   12d40:	subs	r4, r0, #0
   12d44:	bne	12c70 <__assert_fail@plt+0x1984>
   12d48:	ldr	r3, [pc, #92]	; 12dac <__assert_fail@plt+0x1ac0>
   12d4c:	ldrb	r4, [r3, #13]
   12d50:	cmp	r4, #0
   12d54:	beq	12d98 <__assert_fail@plt+0x1aac>
   12d58:	bl	111c0 <__errno_location@plt>
   12d5c:	ldr	r5, [r0]
   12d60:	cmp	r5, #2
   12d64:	moveq	r3, #1
   12d68:	strbeq	r3, [r9]
   12d6c:	bne	12d04 <__assert_fail@plt+0x1a18>
   12d70:	b	12cd4 <__assert_fail@plt+0x19e8>
   12d74:	ldr	r2, [pc, #48]	; 12dac <__assert_fail@plt+0x1ac0>
   12d78:	ldr	r3, [r2]
   12d7c:	ldr	r2, [r2, #4]
   12d80:	lsr	r3, r3, #3
   12d84:	orr	r3, r3, r2, lsl #29
   12d88:	lsr	r2, r2, #3
   12d8c:	str	r3, [r5]
   12d90:	str	r2, [r5, #4]
   12d94:	b	12c8c <__assert_fail@plt+0x19a0>
   12d98:	bl	111c0 <__errno_location@plt>
   12d9c:	ldr	r5, [r0]
   12da0:	b	12d04 <__assert_fail@plt+0x1a18>
   12da4:	andeq	lr, r3, r0, ror #11
   12da8:	andeq	r2, r5, r0, lsr #3
   12dac:			; <UNDEFINED> instruction: 0x000521b0
   12db0:	andeq	r2, r5, r8, lsr #2
   12db4:	andeq	lr, r3, ip, ror #6
   12db8:	andeq	lr, r3, ip, lsl pc
   12dbc:	andeq	lr, r3, r4, ror #11
   12dc0:	subs	r5, r0, #0
   12dc4:	push	{r7, lr}
   12dc8:	sub	sp, sp, #56	; 0x38
   12dcc:	beq	12e08 <__assert_fail@plt+0x1b1c>
   12dd0:	ldr	r3, [pc, #900]	; 1315c <__assert_fail@plt+0x1e70>
   12dd4:	mov	r2, #5
   12dd8:	ldr	r1, [pc, #896]	; 13160 <__assert_fail@plt+0x1e74>
   12ddc:	mov	r0, #0
   12de0:	ldr	r4, [r3]
   12de4:	bl	110a0 <dcgettext@plt>
   12de8:	ldr	r3, [pc, #884]	; 13164 <__assert_fail@plt+0x1e78>
   12dec:	mov	r1, #1
   12df0:	ldr	r3, [r3]
   12df4:	mov	r2, r0
   12df8:	mov	r0, r4
   12dfc:	bl	11214 <__fprintf_chk@plt>
   12e00:	mov	r0, r5
   12e04:	bl	11190 <exit@plt>
   12e08:	mov	r2, #5
   12e0c:	ldr	r1, [pc, #852]	; 13168 <__assert_fail@plt+0x1e7c>
   12e10:	bl	110a0 <dcgettext@plt>
   12e14:	ldr	r3, [pc, #840]	; 13164 <__assert_fail@plt+0x1e78>
   12e18:	ldr	r6, [pc, #844]	; 1316c <__assert_fail@plt+0x1e80>
   12e1c:	ldr	r4, [pc, #844]	; 13170 <__assert_fail@plt+0x1e84>
   12e20:	ldr	r2, [r3]
   12e24:	mov	r1, r0
   12e28:	mov	r0, #1
   12e2c:	bl	111fc <__printf_chk@plt>
   12e30:	mov	r2, #5
   12e34:	ldr	r1, [pc, #824]	; 13174 <__assert_fail@plt+0x1e88>
   12e38:	mov	r0, r5
   12e3c:	bl	110a0 <dcgettext@plt>
   12e40:	ldr	r1, [r6]
   12e44:	bl	10fe0 <fputs_unlocked@plt>
   12e48:	mov	r2, #5
   12e4c:	ldr	r1, [pc, #804]	; 13178 <__assert_fail@plt+0x1e8c>
   12e50:	mov	r0, r5
   12e54:	bl	110a0 <dcgettext@plt>
   12e58:	ldr	r1, [r6]
   12e5c:	bl	10fe0 <fputs_unlocked@plt>
   12e60:	mov	r2, #5
   12e64:	ldr	r1, [pc, #784]	; 1317c <__assert_fail@plt+0x1e90>
   12e68:	mov	r0, r5
   12e6c:	bl	110a0 <dcgettext@plt>
   12e70:	ldr	r1, [r6]
   12e74:	bl	10fe0 <fputs_unlocked@plt>
   12e78:	mov	r2, #5
   12e7c:	ldr	r1, [pc, #764]	; 13180 <__assert_fail@plt+0x1e94>
   12e80:	mov	r0, r5
   12e84:	bl	110a0 <dcgettext@plt>
   12e88:	ldr	r1, [r6]
   12e8c:	bl	10fe0 <fputs_unlocked@plt>
   12e90:	mov	r2, #5
   12e94:	ldr	r1, [pc, #744]	; 13184 <__assert_fail@plt+0x1e98>
   12e98:	mov	r0, r5
   12e9c:	bl	110a0 <dcgettext@plt>
   12ea0:	ldr	r1, [r6]
   12ea4:	bl	10fe0 <fputs_unlocked@plt>
   12ea8:	mov	r2, #5
   12eac:	ldr	r1, [pc, #724]	; 13188 <__assert_fail@plt+0x1e9c>
   12eb0:	mov	r0, r5
   12eb4:	bl	110a0 <dcgettext@plt>
   12eb8:	ldr	r1, [r6]
   12ebc:	bl	10fe0 <fputs_unlocked@plt>
   12ec0:	mov	r2, #5
   12ec4:	ldr	r1, [pc, #704]	; 1318c <__assert_fail@plt+0x1ea0>
   12ec8:	mov	r0, r5
   12ecc:	bl	110a0 <dcgettext@plt>
   12ed0:	ldr	r1, [r6]
   12ed4:	bl	10fe0 <fputs_unlocked@plt>
   12ed8:	mov	r2, #5
   12edc:	ldr	r1, [pc, #684]	; 13190 <__assert_fail@plt+0x1ea4>
   12ee0:	mov	r0, r5
   12ee4:	bl	110a0 <dcgettext@plt>
   12ee8:	ldr	r1, [r6]
   12eec:	bl	10fe0 <fputs_unlocked@plt>
   12ef0:	mov	r2, #5
   12ef4:	ldr	r1, [pc, #664]	; 13194 <__assert_fail@plt+0x1ea8>
   12ef8:	mov	r0, r5
   12efc:	bl	110a0 <dcgettext@plt>
   12f00:	ldr	r1, [r6]
   12f04:	bl	10fe0 <fputs_unlocked@plt>
   12f08:	mov	r2, #5
   12f0c:	ldr	r1, [pc, #644]	; 13198 <__assert_fail@plt+0x1eac>
   12f10:	mov	r0, r5
   12f14:	bl	110a0 <dcgettext@plt>
   12f18:	ldr	r1, [r6]
   12f1c:	bl	10fe0 <fputs_unlocked@plt>
   12f20:	mov	r2, #5
   12f24:	ldr	r1, [pc, #624]	; 1319c <__assert_fail@plt+0x1eb0>
   12f28:	mov	r0, r5
   12f2c:	bl	110a0 <dcgettext@plt>
   12f30:	ldr	r1, [r6]
   12f34:	bl	10fe0 <fputs_unlocked@plt>
   12f38:	mov	r2, #5
   12f3c:	ldr	r1, [pc, #604]	; 131a0 <__assert_fail@plt+0x1eb4>
   12f40:	mov	r0, r5
   12f44:	bl	110a0 <dcgettext@plt>
   12f48:	ldr	r1, [r6]
   12f4c:	bl	10fe0 <fputs_unlocked@plt>
   12f50:	mov	r2, #5
   12f54:	ldr	r1, [pc, #584]	; 131a4 <__assert_fail@plt+0x1eb8>
   12f58:	mov	r0, r5
   12f5c:	bl	110a0 <dcgettext@plt>
   12f60:	ldr	r1, [r6]
   12f64:	bl	10fe0 <fputs_unlocked@plt>
   12f68:	mov	r2, #5
   12f6c:	ldr	r1, [pc, #564]	; 131a8 <__assert_fail@plt+0x1ebc>
   12f70:	mov	r0, r5
   12f74:	bl	110a0 <dcgettext@plt>
   12f78:	ldr	r1, [r6]
   12f7c:	bl	10fe0 <fputs_unlocked@plt>
   12f80:	mov	r2, #5
   12f84:	ldr	r1, [pc, #544]	; 131ac <__assert_fail@plt+0x1ec0>
   12f88:	mov	r0, r5
   12f8c:	bl	110a0 <dcgettext@plt>
   12f90:	ldr	r1, [r6]
   12f94:	bl	10fe0 <fputs_unlocked@plt>
   12f98:	ldm	r4!, {r0, r1, r2, r3}
   12f9c:	mov	lr, sp
   12fa0:	stmia	lr!, {r0, r1, r2, r3}
   12fa4:	ldm	r4!, {r0, r1, r2, r3}
   12fa8:	ldr	ip, [sp]
   12fac:	stmia	lr!, {r0, r1, r2, r3}
   12fb0:	cmp	ip, #0
   12fb4:	ldm	r4!, {r0, r1, r2, r3}
   12fb8:	stmia	lr!, {r0, r1, r2, r3}
   12fbc:	ldm	r4, {r0, r1}
   12fc0:	moveq	r4, sp
   12fc4:	stm	lr, {r0, r1}
   12fc8:	beq	12ff8 <__assert_fail@plt+0x1d0c>
   12fcc:	ldr	r7, [pc, #476]	; 131b0 <__assert_fail@plt+0x1ec4>
   12fd0:	mov	r4, sp
   12fd4:	b	12fe4 <__assert_fail@plt+0x1cf8>
   12fd8:	ldr	ip, [r4, #8]!
   12fdc:	cmp	ip, #0
   12fe0:	beq	12ff8 <__assert_fail@plt+0x1d0c>
   12fe4:	mov	r1, ip
   12fe8:	mov	r0, r7
   12fec:	bl	11004 <strcmp@plt>
   12ff0:	cmp	r0, #0
   12ff4:	bne	12fd8 <__assert_fail@plt+0x1cec>
   12ff8:	ldr	r4, [r4, #4]
   12ffc:	mov	r2, #5
   13000:	cmp	r4, #0
   13004:	ldr	r1, [pc, #424]	; 131b4 <__assert_fail@plt+0x1ec8>
   13008:	beq	130b0 <__assert_fail@plt+0x1dc4>
   1300c:	mov	r0, #0
   13010:	bl	110a0 <dcgettext@plt>
   13014:	ldr	r3, [pc, #412]	; 131b8 <__assert_fail@plt+0x1ecc>
   13018:	ldr	r2, [pc, #412]	; 131bc <__assert_fail@plt+0x1ed0>
   1301c:	mov	r1, r0
   13020:	mov	r0, #1
   13024:	bl	111fc <__printf_chk@plt>
   13028:	mov	r1, #0
   1302c:	mov	r0, #5
   13030:	bl	11250 <setlocale@plt>
   13034:	cmp	r0, #0
   13038:	ldreq	r7, [pc, #368]	; 131b0 <__assert_fail@plt+0x1ec4>
   1303c:	beq	13058 <__assert_fail@plt+0x1d6c>
   13040:	mov	r2, #3
   13044:	ldr	r1, [pc, #372]	; 131c0 <__assert_fail@plt+0x1ed4>
   13048:	bl	112bc <strncmp@plt>
   1304c:	ldr	r7, [pc, #348]	; 131b0 <__assert_fail@plt+0x1ec4>
   13050:	cmp	r0, #0
   13054:	bne	13140 <__assert_fail@plt+0x1e54>
   13058:	mov	r2, #5
   1305c:	ldr	r1, [pc, #352]	; 131c4 <__assert_fail@plt+0x1ed8>
   13060:	mov	r0, #0
   13064:	bl	110a0 <dcgettext@plt>
   13068:	ldr	r3, [pc, #320]	; 131b0 <__assert_fail@plt+0x1ec4>
   1306c:	ldr	r2, [pc, #324]	; 131b8 <__assert_fail@plt+0x1ecc>
   13070:	mov	r1, r0
   13074:	mov	r0, #1
   13078:	bl	111fc <__printf_chk@plt>
   1307c:	mov	r2, #5
   13080:	ldr	r1, [pc, #320]	; 131c8 <__assert_fail@plt+0x1edc>
   13084:	mov	r0, #0
   13088:	bl	110a0 <dcgettext@plt>
   1308c:	ldr	r2, [pc, #312]	; 131cc <__assert_fail@plt+0x1ee0>
   13090:	cmp	r4, r7
   13094:	ldr	r3, [pc, #308]	; 131d0 <__assert_fail@plt+0x1ee4>
   13098:	movne	r3, r2
   1309c:	mov	r1, r0
   130a0:	mov	r2, r4
   130a4:	mov	r0, #1
   130a8:	bl	111fc <__printf_chk@plt>
   130ac:	b	12e00 <__assert_fail@plt+0x1b14>
   130b0:	mov	r0, r4
   130b4:	bl	110a0 <dcgettext@plt>
   130b8:	ldr	r3, [pc, #248]	; 131b8 <__assert_fail@plt+0x1ecc>
   130bc:	ldr	r2, [pc, #248]	; 131bc <__assert_fail@plt+0x1ed0>
   130c0:	mov	r1, r0
   130c4:	mov	r0, #1
   130c8:	bl	111fc <__printf_chk@plt>
   130cc:	mov	r1, r4
   130d0:	mov	r0, #5
   130d4:	bl	11250 <setlocale@plt>
   130d8:	cmp	r0, #0
   130dc:	beq	130f4 <__assert_fail@plt+0x1e08>
   130e0:	mov	r2, #3
   130e4:	ldr	r1, [pc, #212]	; 131c0 <__assert_fail@plt+0x1ed4>
   130e8:	bl	112bc <strncmp@plt>
   130ec:	cmp	r0, #0
   130f0:	bne	13138 <__assert_fail@plt+0x1e4c>
   130f4:	mov	r2, #5
   130f8:	ldr	r1, [pc, #196]	; 131c4 <__assert_fail@plt+0x1ed8>
   130fc:	mov	r0, #0
   13100:	bl	110a0 <dcgettext@plt>
   13104:	ldr	r3, [pc, #164]	; 131b0 <__assert_fail@plt+0x1ec4>
   13108:	ldr	r2, [pc, #168]	; 131b8 <__assert_fail@plt+0x1ecc>
   1310c:	mov	r4, r3
   13110:	mov	r1, r0
   13114:	mov	r0, #1
   13118:	bl	111fc <__printf_chk@plt>
   1311c:	ldr	r1, [pc, #164]	; 131c8 <__assert_fail@plt+0x1edc>
   13120:	mov	r2, #5
   13124:	mov	r0, #0
   13128:	bl	110a0 <dcgettext@plt>
   1312c:	ldr	r3, [pc, #156]	; 131d0 <__assert_fail@plt+0x1ee4>
   13130:	mov	r1, r0
   13134:	b	130a0 <__assert_fail@plt+0x1db4>
   13138:	ldr	r7, [pc, #112]	; 131b0 <__assert_fail@plt+0x1ec4>
   1313c:	mov	r4, r7
   13140:	mov	r2, #5
   13144:	ldr	r1, [pc, #136]	; 131d4 <__assert_fail@plt+0x1ee8>
   13148:	mov	r0, #0
   1314c:	bl	110a0 <dcgettext@plt>
   13150:	ldr	r1, [r6]
   13154:	bl	10fe0 <fputs_unlocked@plt>
   13158:	b	13058 <__assert_fail@plt+0x1d6c>
   1315c:	muleq	r5, r8, r1
   13160:	strdeq	lr, [r3], -r0
   13164:	ldrdeq	r2, [r5], -r8
   13168:	andeq	lr, r3, r8, lsl r6
   1316c:	andeq	r2, r5, r4, lsr #3
   13170:	andeq	lr, r3, r8, asr #7
   13174:	andeq	lr, r3, ip, lsr r6
   13178:	andeq	lr, r3, r4, lsl #13
   1317c:			; <UNDEFINED> instruction: 0x0003e6bc
   13180:	andeq	lr, r3, r8, lsl #14
   13184:	andeq	lr, r3, r4, asr r7
   13188:	muleq	r3, ip, r7
   1318c:	andeq	lr, r3, r4, lsr r8
   13190:	andeq	lr, r3, r8, ror r8
   13194:	andeq	lr, r3, r8, asr #17
   13198:	andeq	lr, r3, r8, asr #18
   1319c:	andeq	lr, r3, r0, lsl #22
   131a0:	andeq	lr, r3, ip, lsr fp
   131a4:	andeq	lr, r3, ip, ror #22
   131a8:	andeq	lr, r3, r4, lsr #23
   131ac:	andeq	lr, r3, r0, lsl #27
   131b0:	andeq	lr, r3, r8, ror #11
   131b4:	andeq	lr, r3, r8, ror #27
   131b8:	andeq	lr, r3, r0, lsl #28
   131bc:	andeq	lr, r3, r8, lsr #28
   131c0:	andeq	lr, r3, r8, lsr lr
   131c4:	andeq	lr, r3, r4, lsl #29
   131c8:	andeq	lr, r3, r0, lsr #29
   131cc:	andeq	lr, r3, ip, ror sp
   131d0:	andeq	pc, r3, r8, lsl #7
   131d4:	andeq	lr, r3, ip, lsr lr
   131d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   131dc:	sub	sp, sp, #548	; 0x224
   131e0:	mov	r2, r1
   131e4:	add	ip, sp, #288	; 0x120
   131e8:	add	lr, sp, #416	; 0x1a0
   131ec:	str	r0, [sp, #4]
   131f0:	ldr	r0, [r2]
   131f4:	ldr	r1, [r2, #4]
   131f8:	mov	r3, lr
   131fc:	add	r2, r2, #8
   13200:	stmia	r3!, {r0, r1}
   13204:	add	r3, sp, #416	; 0x1a0
   13208:	ldrd	r0, [r3]
   1320c:	strd	r0, [ip], #8
   13210:	cmp	lr, ip
   13214:	bne	131f0 <__assert_fail@plt+0x1f04>
   13218:	ldr	r3, [sp, #4]
   1321c:	mov	ip, r3
   13220:	add	r5, r3, #64	; 0x40
   13224:	ldr	r0, [ip]
   13228:	ldr	r1, [ip, #4]
   1322c:	ldr	r2, [ip, #8]
   13230:	ldr	r3, [ip, #12]
   13234:	mov	r4, lr
   13238:	add	ip, ip, #16
   1323c:	cmp	ip, r5
   13240:	stmia	r4!, {r0, r1, r2, r3}
   13244:	mov	lr, r4
   13248:	bne	13224 <__assert_fail@plt+0x1f38>
   1324c:	add	r3, sp, #456	; 0x1c8
   13250:	ldr	lr, [sp, #4]
   13254:	ldrd	r6, [r3]
   13258:	add	r3, sp, #424	; 0x1a8
   1325c:	add	r1, pc, #796	; 0x31c
   13260:	ldrd	r0, [r1]
   13264:	ldrd	sl, [r3]
   13268:	add	r3, sp, #304	; 0x130
   1326c:	add	ip, sp, #320	; 0x140
   13270:	ldrd	r2, [r3]
   13274:	adds	sl, sl, r6
   13278:	adc	fp, fp, r7
   1327c:	mov	r4, r2
   13280:	mov	r5, r3
   13284:	ldrd	r2, [lr, #72]	; 0x48
   13288:	strd	r4, [sp, #88]	; 0x58
   1328c:	adds	r4, r4, sl
   13290:	adc	r5, r5, fp
   13294:	mov	r8, r4
   13298:	mov	r9, r5
   1329c:	eor	r8, r8, r0
   132a0:	eor	r9, r9, r1
   132a4:	mov	r0, r8
   132a8:	mov	r1, r9
   132ac:	eor	r0, r0, r2
   132b0:	eor	r1, r1, r3
   132b4:	add	r3, sp, #336	; 0x150
   132b8:	str	r1, [sp, #16]
   132bc:	str	r0, [sp, #20]
   132c0:	strd	r4, [sp, #40]	; 0x28
   132c4:	ldrd	r0, [r3]
   132c8:	add	r5, pc, #696	; 0x2b8
   132cc:	ldrd	r4, [r5]
   132d0:	ldrd	r2, [sp, #16]
   132d4:	mov	sl, r0
   132d8:	mov	fp, r1
   132dc:	adds	r2, r2, r4
   132e0:	adc	r3, r3, r5
   132e4:	mov	r8, r2
   132e8:	mov	r9, r3
   132ec:	add	r3, sp, #472	; 0x1d8
   132f0:	strd	r8, [sp, #72]	; 0x48
   132f4:	eor	r8, r8, r6
   132f8:	eor	r9, r9, r7
   132fc:	mov	r4, r8
   13300:	mov	r5, r9
   13304:	ldrd	r8, [ip]
   13308:	add	ip, sp, #312	; 0x138
   1330c:	ldrd	r6, [r3]
   13310:	add	r3, sp, #440	; 0x1b8
   13314:	strd	r8, [sp, #32]
   13318:	ldrd	r8, [ip]
   1331c:	ldrd	r2, [r3]
   13320:	add	ip, sp, #288	; 0x120
   13324:	strd	r8, [sp, #24]
   13328:	ldrd	r8, [ip]
   1332c:	add	r1, pc, #604	; 0x25c
   13330:	ldrd	r0, [r1]
   13334:	adds	r6, r6, r2
   13338:	adc	r7, r7, r3
   1333c:	strd	sl, [sp, #96]	; 0x60
   13340:	adds	sl, sl, r6
   13344:	strd	r8, [sp, #8]
   13348:	mov	r8, sl
   1334c:	eor	r8, r8, r0
   13350:	adc	fp, fp, r7
   13354:	mov	r0, r8
   13358:	add	r8, sp, #464	; 0x1d0
   1335c:	strd	sl, [sp, #80]	; 0x50
   13360:	mov	r9, fp
   13364:	ldrd	sl, [r8]
   13368:	add	r8, sp, #432	; 0x1b0
   1336c:	eor	r9, r9, r1
   13370:	mov	r1, r9
   13374:	ldrd	r8, [r8]
   13378:	ldrd	r2, [lr, #88]	; 0x58
   1337c:	lsr	ip, r4, #24
   13380:	adds	sl, sl, r8
   13384:	adc	fp, fp, r9
   13388:	add	r8, sp, #448	; 0x1c0
   1338c:	strd	sl, [sp, #64]	; 0x40
   13390:	ldrd	sl, [lr, #80]	; 0x50
   13394:	ldrd	r8, [r8]
   13398:	orr	ip, ip, r5, lsl #8
   1339c:	strd	sl, [sp, #112]	; 0x70
   133a0:	add	sl, sp, #416	; 0x1a0
   133a4:	eor	r2, r2, r0
   133a8:	ldrd	sl, [sl]
   133ac:	eor	r3, r3, r1
   133b0:	str	ip, [sp, #56]	; 0x38
   133b4:	adds	sl, sl, r8
   133b8:	adc	fp, fp, r9
   133bc:	mov	r8, sl
   133c0:	mov	r9, fp
   133c4:	ldrd	sl, [lr, #64]	; 0x40
   133c8:	mov	r0, r2
   133cc:	mov	r1, r3
   133d0:	strd	sl, [sp, #48]	; 0x30
   133d4:	ldrd	r2, [sp, #64]	; 0x40
   133d8:	ldrd	sl, [sp, #32]
   133dc:	lsr	ip, r5, #24
   133e0:	str	r1, [sp, #104]	; 0x68
   133e4:	adds	sl, sl, r2
   133e8:	adc	fp, fp, r3
   133ec:	orr	r3, ip, r4, lsl #8
   133f0:	strd	sl, [sp, #120]	; 0x78
   133f4:	ldrd	r4, [sp, #40]	; 0x28
   133f8:	ldrd	sl, [sp, #24]
   133fc:	str	r3, [sp, #60]	; 0x3c
   13400:	add	r3, pc, #400	; 0x190
   13404:	ldrd	r2, [r3]
   13408:	adds	r4, r4, sl
   1340c:	adc	r5, r5, fp
   13410:	mov	sl, r4
   13414:	mov	fp, r5
   13418:	ldrd	r4, [sp, #8]
   1341c:	str	r0, [sp, #108]	; 0x6c
   13420:	ldrd	r0, [sp, #112]	; 0x70
   13424:	adds	r4, r4, r8
   13428:	adc	r5, r5, r9
   1342c:	mov	r8, r4
   13430:	mov	r9, r5
   13434:	ldrd	r4, [sp, #120]	; 0x78
   13438:	add	r7, pc, #352	; 0x160
   1343c:	ldrd	r6, [r7]
   13440:	strd	r8, [sp, #144]	; 0x90
   13444:	eor	r2, r2, r4
   13448:	eor	r3, r3, r5
   1344c:	mov	r4, r2
   13450:	mov	r5, r3
   13454:	ldrd	r2, [sp, #56]	; 0x38
   13458:	eor	r0, r0, r4
   1345c:	eor	r1, r1, r5
   13460:	mov	r4, r0
   13464:	mov	r5, r1
   13468:	ldrd	r0, [sp, #16]
   1346c:	adds	r2, r2, sl
   13470:	adc	r3, r3, fp
   13474:	eor	r0, r0, r2
   13478:	eor	r1, r1, r3
   1347c:	strd	r2, [sp, #168]	; 0xa8
   13480:	mov	r2, r0
   13484:	mov	r3, r1
   13488:	ldrd	r0, [sp, #48]	; 0x30
   1348c:	mov	sl, r8
   13490:	mov	fp, r9
   13494:	eor	sl, sl, r6
   13498:	eor	fp, fp, r7
   1349c:	eor	r0, r0, sl
   134a0:	eor	r1, r1, fp
   134a4:	mov	r6, r0
   134a8:	mov	r7, r1
   134ac:	add	r9, pc, #244	; 0xf4
   134b0:	ldrd	r8, [r9]
   134b4:	ldrd	r0, [sp, #104]	; 0x68
   134b8:	str	r5, [sp, #64]	; 0x40
   134bc:	str	r4, [sp, #68]	; 0x44
   134c0:	adds	r8, r8, r0
   134c4:	adc	r9, r9, r1
   134c8:	add	r1, sp, #472	; 0x1d8
   134cc:	strd	r8, [sp, #192]	; 0xc0
   134d0:	ldrd	r0, [r1]
   134d4:	ldrd	r4, [sp, #64]	; 0x40
   134d8:	str	r7, [sp, #136]	; 0x88
   134dc:	eor	r1, r1, r9
   134e0:	mov	r9, r1
   134e4:	add	r1, sp, #344	; 0x158
   134e8:	eor	r0, r0, r8
   134ec:	mov	r8, r0
   134f0:	str	r6, [sp, #140]	; 0x8c
   134f4:	ldrd	r6, [r1]
   134f8:	add	r1, pc, #176	; 0xb0
   134fc:	ldrd	r0, [r1]
   13500:	lsr	ip, r2, #16
   13504:	strd	r6, [sp, #48]	; 0x30
   13508:	adds	r0, r0, r4
   1350c:	adc	r1, r1, r5
   13510:	mov	r7, r1
   13514:	orr	r1, ip, r3, lsl #16
   13518:	mov	r6, r0
   1351c:	add	fp, pc, #148	; 0x94
   13520:	ldrd	sl, [fp]
   13524:	str	r1, [sp, #112]	; 0x70
   13528:	ldrd	r0, [sp, #136]	; 0x88
   1352c:	lsr	ip, r3, #16
   13530:	orr	ip, ip, r2, lsl #16
   13534:	adds	r0, r0, sl
   13538:	adc	r1, r1, fp
   1353c:	mov	r5, r1
   13540:	add	r1, sp, #464	; 0x1d0
   13544:	add	r2, sp, #448	; 0x1c0
   13548:	ldrd	sl, [r1]
   1354c:	strd	r6, [sp, #152]	; 0x98
   13550:	mov	r4, r0
   13554:	eor	sl, sl, r6
   13558:	eor	fp, fp, r7
   1355c:	ldrd	r6, [r2]
   13560:	add	r2, sp, #328	; 0x148
   13564:	str	ip, [sp, #116]	; 0x74
   13568:	eor	r6, r6, r4
   1356c:	eor	r7, r7, r5
   13570:	strd	r4, [sp, #160]	; 0xa0
   13574:	mov	r4, r6
   13578:	mov	r5, r7
   1357c:	b	135c0 <__assert_fail@plt+0x22d4>
   13580:	blcs	fae604 <optarg@@GLIBC_2.4+0xf5c45c>
   13584:	blls	16d7bc <optarg@@GLIBC_2.4+0x11b614>
   13588:	strbhi	sl, [sl], #1851	; 0x73b
   1358c:	bllt	19fefa8 <optarg@@GLIBC_2.4+0x19ace00>
   13590:	cmnne	lr, #1073741854	; 0x4000001e
   13594:	blpl	ff846a00 <optarg@@GLIBC_2.4+0xff7f4858>
   13598:	blx	1082b4e <optarg@@GLIBC_2.4+0x10309a6>
   1359c:	svcne	0x0083d9ab
   135a0:	sfmge	f0, 3, [r6, #836]!	; 0x344
   135a4:	tstpl	lr, pc, ror r2
   135a8:	svcpl	0x001d36f1
   135ac:	strbge	pc, [pc, #-1338]	; 1307a <__assert_fail@plt+0x1d8e>	; <UNPREDICTABLE>
   135b0:	vcmla.f32	d15, d4, d27[0], #90
   135b4:	stclcc	3, cr15, [lr], #-456	; 0xfffffe38
   135b8:	vtbl.8	d12, {d12-d13}, d8
   135bc:	bvs	28cf60 <optarg@@GLIBC_2.4+0x23adb8>
   135c0:	ldrd	r6, [r2]
   135c4:	mov	r0, sl
   135c8:	mov	r1, fp
   135cc:	strd	r6, [sp, #40]	; 0x28
   135d0:	ldrd	sl, [sp, #112]	; 0x70
   135d4:	ldrd	r6, [sp, #72]	; 0x48
   135d8:	add	r2, sp, #296	; 0x128
   135dc:	lsr	r3, r8, #24
   135e0:	adds	r6, r6, sl
   135e4:	adc	r7, r7, fp
   135e8:	mov	sl, r6
   135ec:	mov	fp, r7
   135f0:	orr	r3, r3, r9, lsl #8
   135f4:	ldrd	r6, [r2]
   135f8:	str	r3, [sp, #128]	; 0x80
   135fc:	lsr	r3, r9, #24
   13600:	orr	r3, r3, r8, lsl #8
   13604:	strd	r6, [sp, #16]
   13608:	str	r3, [sp, #132]	; 0x84
   1360c:	ldrd	r6, [sp, #80]	; 0x50
   13610:	ldrd	r2, [sp, #48]	; 0x30
   13614:	strd	sl, [sp, #176]	; 0xb0
   13618:	ldrd	r8, [sp, #128]	; 0x80
   1361c:	adds	r6, r6, r2
   13620:	adc	r7, r7, r3
   13624:	ldrd	r2, [sp, #56]	; 0x38
   13628:	adds	r8, r8, r6
   1362c:	adc	r9, r9, r7
   13630:	eor	r3, r3, fp
   13634:	mov	fp, r3
   13638:	lsr	r3, r4, #24
   1363c:	orr	r3, r3, r5, lsl #8
   13640:	str	r3, [sp, #80]	; 0x50
   13644:	add	r3, sp, #352	; 0x160
   13648:	eor	r2, r2, sl
   1364c:	mov	sl, r2
   13650:	ldrd	r2, [r3]
   13654:	lsr	ip, r0, #24
   13658:	mov	r6, r8
   1365c:	strd	r2, [sp, #56]	; 0x38
   13660:	mov	r7, r9
   13664:	ldrd	r2, [sp, #104]	; 0x68
   13668:	orr	ip, ip, r1, lsl #8
   1366c:	lsr	r1, r1, #24
   13670:	orr	r1, r1, r0, lsl #8
   13674:	str	ip, [sp, #72]	; 0x48
   13678:	str	r1, [sp, #76]	; 0x4c
   1367c:	strd	r6, [sp, #208]	; 0xd0
   13680:	ldrd	r0, [sp, #40]	; 0x28
   13684:	ldrd	r6, [sp, #120]	; 0x78
   13688:	lsr	ip, r5, #24
   1368c:	eor	r2, r2, r8
   13690:	eor	r3, r3, r9
   13694:	orr	ip, ip, r4, lsl #8
   13698:	ldrd	r8, [sp, #144]	; 0x90
   1369c:	ldrd	r4, [sp, #16]
   136a0:	adds	r6, r6, r0
   136a4:	adc	r7, r7, r1
   136a8:	adds	r8, r8, r4
   136ac:	adc	r9, r9, r5
   136b0:	ldrd	r4, [sp, #72]	; 0x48
   136b4:	str	ip, [sp, #84]	; 0x54
   136b8:	lsl	r1, fp, #1
   136bc:	adds	r4, r4, r6
   136c0:	adc	r5, r5, r7
   136c4:	ldrd	r6, [sp, #80]	; 0x50
   136c8:	orr	r1, r1, sl, lsr #31
   136cc:	str	r1, [sp, #108]	; 0x6c
   136d0:	adds	r6, r6, r8
   136d4:	adc	r7, r7, r9
   136d8:	mov	r8, r6
   136dc:	mov	r9, r7
   136e0:	ldrd	r6, [sp, #64]	; 0x40
   136e4:	lsl	lr, sl, #1
   136e8:	lsr	ip, r2, #16
   136ec:	eor	r6, r6, r4
   136f0:	eor	r7, r7, r5
   136f4:	mov	r0, r6
   136f8:	mov	r1, r7
   136fc:	ldrd	r6, [sp, #56]	; 0x38
   13700:	strd	r4, [sp, #184]	; 0xb8
   13704:	orr	ip, ip, r3, lsl #16
   13708:	orr	r5, lr, fp, lsr #31
   1370c:	str	r5, [sp, #104]	; 0x68
   13710:	str	ip, [sp, #120]	; 0x78
   13714:	ldrd	r4, [sp, #104]	; 0x68
   13718:	lsr	ip, r0, #16
   1371c:	adds	r6, r6, r8
   13720:	orr	ip, ip, r1, lsl #16
   13724:	lsr	r3, r3, #16
   13728:	lsr	r1, r1, #16
   1372c:	adc	r7, r7, r9
   13730:	mov	sl, r6
   13734:	orr	r3, r3, r2, lsl #16
   13738:	orr	r1, r1, r0, lsl #16
   1373c:	adds	r6, r4, sl
   13740:	str	ip, [sp, #104]	; 0x68
   13744:	str	r3, [sp, #124]	; 0x7c
   13748:	str	r1, [sp, #108]	; 0x6c
   1374c:	mov	fp, r7
   13750:	adc	r7, r5, fp
   13754:	ldrd	r0, [sp, #104]	; 0x68
   13758:	ldrd	sl, [sp, #152]	; 0x98
   1375c:	ldrd	r2, [sp, #120]	; 0x78
   13760:	strd	r6, [sp, #200]	; 0xc8
   13764:	adds	sl, sl, r0
   13768:	eor	r3, r3, r7
   1376c:	adc	fp, fp, r1
   13770:	eor	r2, r2, r6
   13774:	ldrd	r0, [sp, #136]	; 0x88
   13778:	mov	r6, r3
   1377c:	mov	r7, r2
   13780:	mov	r2, sl
   13784:	adds	sl, sl, r6
   13788:	mov	r3, fp
   1378c:	adc	fp, fp, r7
   13790:	eor	r1, r1, r9
   13794:	eor	r5, r5, fp
   13798:	strd	sl, [sp, #216]	; 0xd8
   1379c:	mov	fp, r5
   137a0:	mov	r5, r1
   137a4:	add	r1, sp, #360	; 0x168
   137a8:	eor	r0, r0, r8
   137ac:	eor	r4, r4, sl
   137b0:	mov	sl, r4
   137b4:	mov	r4, r0
   137b8:	ldrd	r0, [r1]
   137bc:	strd	r4, [sp, #144]	; 0x90
   137c0:	lsr	r9, fp, #24
   137c4:	strd	r0, [sp, #64]	; 0x40
   137c8:	ldrd	r0, [sp, #72]	; 0x48
   137cc:	lsr	ip, r4, #16
   137d0:	eor	r0, r0, r2
   137d4:	mov	r2, r0
   137d8:	eor	r1, r1, r3
   137dc:	lsr	r0, sl, #24
   137e0:	mov	r3, r1
   137e4:	orr	r1, r0, fp, lsl #8
   137e8:	str	r1, [sp, #152]	; 0x98
   137ec:	add	r1, sp, #368	; 0x170
   137f0:	ldrd	r0, [r1]
   137f4:	strd	r0, [sp, #72]	; 0x48
   137f8:	ldrd	r0, [sp, #144]	; 0x90
   137fc:	lsl	r0, r3, #1
   13800:	orr	r4, ip, r1, lsl #16
   13804:	orr	ip, r9, sl, lsl #8
   13808:	ldrd	sl, [sp, #64]	; 0x40
   1380c:	ldrd	r8, [sp, #200]	; 0xc8
   13810:	str	ip, [sp, #156]	; 0x9c
   13814:	ldr	ip, [sp, #144]	; 0x90
   13818:	adds	r8, r8, sl
   1381c:	adc	r9, r9, fp
   13820:	mov	sl, r8
   13824:	mov	fp, r9
   13828:	ldrd	r8, [sp, #152]	; 0x98
   1382c:	lsr	r1, r1, #16
   13830:	orr	r5, r1, ip, lsl #16
   13834:	adds	r8, r8, sl
   13838:	orr	r1, r0, r2, lsr #31
   1383c:	adc	r9, r9, fp
   13840:	lsl	r2, r2, #1
   13844:	str	r1, [sp, #140]	; 0x8c
   13848:	mov	r0, r8
   1384c:	mov	r1, r9
   13850:	orr	r3, r2, r3, lsr #31
   13854:	str	r3, [sp, #136]	; 0x88
   13858:	mov	r2, r0
   1385c:	mov	r3, r1
   13860:	ldrd	r8, [sp, #160]	; 0xa0
   13864:	eor	r2, r2, r6
   13868:	eor	r3, r3, r7
   1386c:	strd	r0, [sp, #224]	; 0xe0
   13870:	ldrd	r6, [sp, #72]	; 0x48
   13874:	mov	r0, r2
   13878:	mov	r1, r3
   1387c:	ldrd	r2, [sp, #168]	; 0xa8
   13880:	adds	r8, r8, r4
   13884:	adc	r9, r9, r5
   13888:	adds	r2, r2, r6
   1388c:	adc	r3, r3, r7
   13890:	ldrd	r6, [sp, #136]	; 0x88
   13894:	mov	sl, r2
   13898:	mov	fp, r3
   1389c:	adds	r6, r6, sl
   138a0:	adc	r7, r7, fp
   138a4:	ldrd	r2, [sp, #80]	; 0x50
   138a8:	mov	sl, r6
   138ac:	mov	fp, r7
   138b0:	eor	fp, fp, r5
   138b4:	lsr	lr, r0, #16
   138b8:	eor	sl, sl, r4
   138bc:	orr	r5, lr, r1, lsl #16
   138c0:	eor	r3, r3, r9
   138c4:	strd	r8, [sp, #80]	; 0x50
   138c8:	add	ip, sp, #400	; 0x190
   138cc:	strd	r6, [sp, #232]	; 0xe8
   138d0:	strd	sl, [sp, #144]	; 0x90
   138d4:	str	r5, [sp, #160]	; 0xa0
   138d8:	str	fp, [sp, #168]	; 0xa8
   138dc:	ldrd	r4, [sp, #120]	; 0x78
   138e0:	ldrd	sl, [sp, #192]	; 0xc0
   138e4:	eor	r2, r2, r8
   138e8:	lsr	r1, r1, #16
   138ec:	ldrd	r8, [ip]
   138f0:	orr	r1, r1, r0, lsl #16
   138f4:	lsl	ip, r3, #1
   138f8:	adds	sl, sl, r4
   138fc:	orr	r7, ip, r2, lsr #31
   13900:	str	r1, [sp, #164]	; 0xa4
   13904:	lsl	r2, r2, #1
   13908:	adc	fp, fp, r5
   1390c:	orr	r6, r2, r3, lsr #31
   13910:	ldrd	r4, [sp, #216]	; 0xd8
   13914:	ldrd	r2, [sp, #160]	; 0xa0
   13918:	ldr	r1, [sp, #144]	; 0x90
   1391c:	strd	r8, [sp, #120]	; 0x78
   13920:	adds	r4, r4, r2
   13924:	str	r1, [sp, #172]	; 0xac
   13928:	adc	r5, r5, r3
   1392c:	ldrd	r2, [sp, #168]	; 0xa8
   13930:	strd	r4, [sp, #200]	; 0xc8
   13934:	ldrd	r4, [sp, #208]	; 0xd0
   13938:	adds	r2, r2, sl
   1393c:	adc	r3, r3, fp
   13940:	ldrd	r0, [sp, #104]	; 0x68
   13944:	adds	r4, r4, r8
   13948:	strd	r2, [sp, #192]	; 0xc0
   1394c:	adc	r5, r5, r9
   13950:	adds	r2, r4, r6
   13954:	adc	r3, r5, r7
   13958:	ldrd	r4, [sp, #128]	; 0x80
   1395c:	eor	r0, r0, r2
   13960:	eor	r1, r1, r3
   13964:	mov	r8, r1
   13968:	mov	r9, r0
   1396c:	ldrd	r0, [sp, #176]	; 0xb0
   13970:	eor	r5, r5, fp
   13974:	mov	fp, r5
   13978:	add	ip, sp, #384	; 0x180
   1397c:	eor	r4, r4, sl
   13980:	adds	r0, r0, r8
   13984:	mov	sl, r4
   13988:	adc	r1, r1, r9
   1398c:	ldrd	r4, [ip]
   13990:	lsl	ip, fp, #1
   13994:	orr	ip, ip, sl, lsr #31
   13998:	str	ip, [sp, #148]	; 0x94
   1399c:	strd	r0, [sp, #208]	; 0xd0
   139a0:	lsl	ip, sl, #1
   139a4:	eor	r1, r1, r7
   139a8:	mov	r7, r1
   139ac:	orr	r1, ip, fp, lsr #31
   139b0:	ldrd	sl, [sp, #184]	; 0xb8
   139b4:	str	r1, [sp, #144]	; 0x90
   139b8:	add	r1, sp, #408	; 0x198
   139bc:	adds	sl, sl, r4
   139c0:	adc	fp, fp, r5
   139c4:	strd	r4, [sp, #104]	; 0x68
   139c8:	ldrd	r4, [r1]
   139cc:	eor	r0, r0, r6
   139d0:	mov	r6, r0
   139d4:	mov	r1, r5
   139d8:	mov	r0, r4
   139dc:	ldrd	r4, [sp, #144]	; 0x90
   139e0:	strd	r0, [sp, #128]	; 0x80
   139e4:	lsr	ip, r6, #24
   139e8:	adds	r4, r4, sl
   139ec:	adc	r5, r5, fp
   139f0:	mov	sl, r4
   139f4:	mov	fp, r5
   139f8:	ldrd	r4, [sp, #112]	; 0x70
   139fc:	strd	sl, [sp, #112]	; 0x70
   13a00:	eor	r4, r4, sl
   13a04:	adds	sl, r0, r2
   13a08:	eor	r5, r5, fp
   13a0c:	adc	fp, r1, r3
   13a10:	lsr	r1, r7, #24
   13a14:	str	r5, [sp, #176]	; 0xb0
   13a18:	mov	r2, sl
   13a1c:	mov	r3, fp
   13a20:	orr	sl, ip, r7, lsl #8
   13a24:	orr	fp, r1, r6, lsl #8
   13a28:	str	r4, [sp, #180]	; 0xb4
   13a2c:	ldrd	r6, [sp, #136]	; 0x88
   13a30:	ldrd	r0, [sp, #192]	; 0xc0
   13a34:	adds	r4, r2, sl
   13a38:	adc	r5, r3, fp
   13a3c:	eor	r6, r6, r0
   13a40:	eor	r7, r7, r1
   13a44:	add	r1, sp, #376	; 0x178
   13a48:	strd	r6, [sp, #136]	; 0x88
   13a4c:	ldrd	r2, [sp, #80]	; 0x50
   13a50:	ldrd	r6, [sp, #176]	; 0xb0
   13a54:	strd	r4, [sp, #240]	; 0xf0
   13a58:	eor	r4, r4, r8
   13a5c:	eor	r5, r5, r9
   13a60:	ldrd	r8, [r1]
   13a64:	adds	r2, r2, r6
   13a68:	adc	r3, r3, r7
   13a6c:	strd	r8, [sp, #80]	; 0x50
   13a70:	ldrd	r6, [sp, #136]	; 0x88
   13a74:	ldrd	r8, [sp, #144]	; 0x90
   13a78:	strd	r2, [sp, #216]	; 0xd8
   13a7c:	lsr	ip, r4, #16
   13a80:	eor	r9, r9, r3
   13a84:	lsr	r3, r6, #24
   13a88:	orr	r3, r3, r7, lsl #8
   13a8c:	str	r3, [sp, #144]	; 0x90
   13a90:	add	r3, sp, #392	; 0x188
   13a94:	eor	r8, r8, r2
   13a98:	mov	r0, r8
   13a9c:	mov	r1, r9
   13aa0:	ldrd	r8, [r3]
   13aa4:	ldrd	r6, [sp, #232]	; 0xe8
   13aa8:	orr	ip, ip, r5, lsl #16
   13aac:	mov	r2, r8
   13ab0:	mov	r3, r9
   13ab4:	ldrd	r8, [sp, #80]	; 0x50
   13ab8:	str	ip, [sp, #184]	; 0xb8
   13abc:	adds	r6, r6, r8
   13ac0:	adc	r7, r7, r9
   13ac4:	ldrd	r8, [sp, #112]	; 0x70
   13ac8:	strd	r6, [sp, #232]	; 0xe8
   13acc:	ldrd	r6, [sp, #136]	; 0x88
   13ad0:	adds	r8, r8, r2
   13ad4:	strd	r2, [sp, #112]	; 0x70
   13ad8:	adc	r9, r9, r3
   13adc:	add	r3, sp, #256	; 0x100
   13ae0:	lsr	ip, r7, #24
   13ae4:	strd	r8, [r3]
   13ae8:	ldrd	r2, [sp, #152]	; 0x98
   13aec:	ldrd	r8, [sp, #200]	; 0xc8
   13af0:	orr	ip, ip, r6, lsl #8
   13af4:	str	ip, [sp, #148]	; 0x94
   13af8:	ldrd	r6, [sp, #144]	; 0x90
   13afc:	eor	r2, r2, r8
   13b00:	eor	r3, r3, r9
   13b04:	ldrd	r8, [sp, #232]	; 0xe8
   13b08:	lsr	ip, r0, #24
   13b0c:	orr	ip, ip, r1, lsl #8
   13b10:	adds	r8, r8, r6
   13b14:	adc	r9, r9, r7
   13b18:	ldrd	r6, [sp, #168]	; 0xa8
   13b1c:	str	ip, [sp, #152]	; 0x98
   13b20:	lsr	ip, r5, #16
   13b24:	eor	r6, r6, r8
   13b28:	eor	r7, r7, r9
   13b2c:	orr	ip, ip, r4, lsl #16
   13b30:	str	ip, [sp, #188]	; 0xbc
   13b34:	ldrd	r4, [sp, #184]	; 0xb8
   13b38:	strd	r6, [sp, #168]	; 0xa8
   13b3c:	ldrd	r6, [sp, #208]	; 0xd0
   13b40:	lsr	r1, r1, #24
   13b44:	orr	r1, r1, r0, lsl #8
   13b48:	adds	r6, r6, r4
   13b4c:	adc	r7, r7, r5
   13b50:	lsl	lr, r3, #1
   13b54:	strd	r6, [sp, #248]	; 0xf8
   13b58:	str	r1, [sp, #156]	; 0x9c
   13b5c:	add	r1, sp, #256	; 0x100
   13b60:	eor	r6, r6, sl
   13b64:	ldrd	r4, [r1]
   13b68:	ldrd	r0, [sp, #152]	; 0x98
   13b6c:	eor	r7, r7, fp
   13b70:	mov	sl, r6
   13b74:	mov	fp, r7
   13b78:	ldrd	r6, [sp, #176]	; 0xb0
   13b7c:	adds	r4, r4, r0
   13b80:	adc	r5, r5, r1
   13b84:	eor	r6, r6, r4
   13b88:	eor	r7, r7, r5
   13b8c:	mov	r0, r6
   13b90:	mov	r1, r7
   13b94:	ldrd	r6, [sp, #168]	; 0xa8
   13b98:	strd	r4, [sp, #232]	; 0xe8
   13b9c:	orr	r5, lr, r2, lsr #31
   13ba0:	lsr	ip, r6, #16
   13ba4:	lsl	r2, r2, #1
   13ba8:	orr	r4, ip, r7, lsl #16
   13bac:	orr	r3, r2, r3, lsr #31
   13bb0:	lsr	r2, r7, #16
   13bb4:	ldrd	r6, [sp, #32]
   13bb8:	str	r3, [sp, #136]	; 0x88
   13bbc:	ldr	r3, [sp, #168]	; 0xa8
   13bc0:	adds	r6, r6, r8
   13bc4:	str	r5, [sp, #140]	; 0x8c
   13bc8:	adc	r7, r7, r9
   13bcc:	orr	r5, r2, r3, lsl #16
   13bd0:	ldrd	r8, [sp, #120]	; 0x78
   13bd4:	ldrd	r2, [sp, #224]	; 0xe0
   13bd8:	lsr	ip, r0, #16
   13bdc:	lsl	lr, fp, #1
   13be0:	adds	r2, r2, r8
   13be4:	adc	r3, r3, r9
   13be8:	orr	r9, lr, sl, lsr #31
   13bec:	strd	r2, [sp, #168]	; 0xa8
   13bf0:	ldrd	r2, [sp, #136]	; 0x88
   13bf4:	adds	r2, r2, r6
   13bf8:	adc	r3, r3, r7
   13bfc:	strd	r2, [sp, #208]	; 0xd0
   13c00:	ldrd	r2, [sp, #192]	; 0xc0
   13c04:	adds	r2, r2, r4
   13c08:	adc	r3, r3, r5
   13c0c:	mov	r6, r2
   13c10:	mov	r7, r3
   13c14:	ldrd	r2, [sp, #144]	; 0x90
   13c18:	strd	r6, [sp, #224]	; 0xe0
   13c1c:	eor	r2, r2, r6
   13c20:	orr	r6, ip, r1, lsl #16
   13c24:	lsr	r1, r1, #16
   13c28:	eor	r3, r3, r7
   13c2c:	orr	r7, r1, r0, lsl #16
   13c30:	ldrd	r0, [sp, #208]	; 0xd0
   13c34:	lsl	ip, sl, #1
   13c38:	orr	r8, ip, fp, lsr #31
   13c3c:	eor	r0, r0, r6
   13c40:	eor	r1, r1, r7
   13c44:	ldrd	sl, [sp, #168]	; 0xa8
   13c48:	strd	r0, [sp, #168]	; 0xa8
   13c4c:	ldrd	r0, [sp, #216]	; 0xd8
   13c50:	adds	sl, sl, r8
   13c54:	adc	fp, fp, r9
   13c58:	adds	r0, r0, r6
   13c5c:	adc	r1, r1, r7
   13c60:	mov	r6, r0
   13c64:	mov	r7, r1
   13c68:	ldrd	r0, [sp, #168]	; 0xa8
   13c6c:	lsl	ip, r3, #1
   13c70:	eor	r4, r4, sl
   13c74:	str	r1, [sp, #176]	; 0xb0
   13c78:	eor	r5, r5, fp
   13c7c:	orr	r1, ip, r2, lsr #31
   13c80:	str	r0, [sp, #180]	; 0xb4
   13c84:	str	r5, [sp, #168]	; 0xa8
   13c88:	str	r4, [sp, #172]	; 0xac
   13c8c:	str	r1, [sp, #148]	; 0x94
   13c90:	ldrd	r4, [sp, #248]	; 0xf8
   13c94:	ldrd	r0, [sp, #176]	; 0xb0
   13c98:	lsl	r2, r2, #1
   13c9c:	orr	r3, r2, r3, lsr #31
   13ca0:	adds	r4, r4, r0
   13ca4:	adc	r5, r5, r1
   13ca8:	str	r3, [sp, #144]	; 0x90
   13cac:	ldrd	r0, [sp, #64]	; 0x40
   13cb0:	ldrd	r2, [sp, #232]	; 0xe8
   13cb4:	strd	r4, [sp, #216]	; 0xd8
   13cb8:	add	ip, sp, #256	; 0x100
   13cbc:	adds	r0, r0, r2
   13cc0:	adc	r1, r1, r3
   13cc4:	ldrd	r2, [sp, #136]	; 0x88
   13cc8:	strd	r0, [sp, #192]	; 0xc0
   13ccc:	ldrd	r0, [sp, #168]	; 0xa8
   13cd0:	eor	r2, r2, r4
   13cd4:	eor	r3, r3, r5
   13cd8:	adds	r0, r0, r6
   13cdc:	adc	r1, r1, r7
   13ce0:	mov	r4, r2
   13ce4:	mov	r5, r3
   13ce8:	strd	r0, [sp, #232]	; 0xe8
   13cec:	ldrd	r2, [sp, #192]	; 0xc0
   13cf0:	eor	r0, r0, r8
   13cf4:	eor	r1, r1, r9
   13cf8:	ldrd	r8, [sp, #144]	; 0x90
   13cfc:	lsr	lr, r4, #24
   13d00:	adds	r2, r2, r8
   13d04:	adc	r3, r3, r9
   13d08:	mov	r8, r2
   13d0c:	mov	r9, r3
   13d10:	ldrd	r2, [sp, #184]	; 0xb8
   13d14:	strd	r8, [ip]
   13d18:	lsr	ip, r0, #24
   13d1c:	eor	r8, r8, r2
   13d20:	eor	r9, r9, r3
   13d24:	mov	r2, r8
   13d28:	mov	r3, r9
   13d2c:	ldrd	r8, [sp, #56]	; 0x38
   13d30:	strd	r2, [sp, #248]	; 0xf8
   13d34:	ldrd	r2, [sp, #208]	; 0xd0
   13d38:	adds	r8, r8, r2
   13d3c:	adc	r9, r9, r3
   13d40:	orr	r3, lr, r5, lsl #8
   13d44:	str	r3, [sp, #184]	; 0xb8
   13d48:	orr	r3, ip, r1, lsl #8
   13d4c:	str	r3, [sp, #136]	; 0x88
   13d50:	ldrd	r2, [sp, #152]	; 0x98
   13d54:	strd	r8, [sp, #208]	; 0xd0
   13d58:	ldrd	r8, [sp, #72]	; 0x48
   13d5c:	eor	r2, r2, r6
   13d60:	eor	r3, r3, r7
   13d64:	mov	r7, r3
   13d68:	mov	r6, r2
   13d6c:	ldrd	r2, [sp, #248]	; 0xf8
   13d70:	adds	r8, r8, sl
   13d74:	adc	r9, r9, fp
   13d78:	str	r3, [sp, #192]	; 0xc0
   13d7c:	str	r2, [sp, #196]	; 0xc4
   13d80:	mov	sl, r8
   13d84:	ldrd	r2, [sp, #200]	; 0xc8
   13d88:	mov	fp, r9
   13d8c:	ldrd	r8, [sp, #192]	; 0xc0
   13d90:	add	ip, sp, #264	; 0x108
   13d94:	lsr	r1, r1, #24
   13d98:	adds	r2, r2, r8
   13d9c:	adc	r3, r3, r9
   13da0:	ldrd	r8, [sp, #144]	; 0x90
   13da4:	strd	r2, [ip]
   13da8:	lsr	ip, r5, #24
   13dac:	eor	r8, r8, r2
   13db0:	eor	r9, r9, r3
   13db4:	orr	ip, ip, r4, lsl #8
   13db8:	str	ip, [sp, #188]	; 0xbc
   13dbc:	ldrd	r4, [sp, #208]	; 0xd0
   13dc0:	strd	r8, [sp, #200]	; 0xc8
   13dc4:	ldrd	r8, [sp, #184]	; 0xb8
   13dc8:	orr	r1, r1, r0, lsl #8
   13dcc:	str	r1, [sp, #140]	; 0x8c
   13dd0:	adds	r4, r4, r8
   13dd4:	adc	r5, r5, r9
   13dd8:	ldrd	r8, [sp, #136]	; 0x88
   13ddc:	add	r3, sp, #256	; 0x100
   13de0:	lsl	ip, r7, #1
   13de4:	adds	r8, r8, sl
   13de8:	adc	r9, r9, fp
   13dec:	ldrd	sl, [sp, #176]	; 0xb0
   13df0:	strd	r4, [sp, #248]	; 0xf8
   13df4:	strd	r8, [sp, #176]	; 0xb0
   13df8:	eor	sl, sl, r4
   13dfc:	eor	fp, fp, r5
   13e00:	mov	r4, sl
   13e04:	mov	r5, fp
   13e08:	ldrd	sl, [sp, #168]	; 0xa8
   13e0c:	ldrd	r2, [r3]
   13e10:	lsr	lr, r4, #16
   13e14:	eor	sl, sl, r8
   13e18:	eor	fp, fp, r9
   13e1c:	ldrd	r8, [sp, #128]	; 0x80
   13e20:	mov	r1, fp
   13e24:	orr	fp, ip, r6, lsr #31
   13e28:	lsl	r6, r6, #1
   13e2c:	mov	r0, sl
   13e30:	lsr	ip, sl, #16
   13e34:	orr	sl, r6, r7, lsr #31
   13e38:	orr	r7, lr, r5, lsl #16
   13e3c:	lsr	lr, r5, #16
   13e40:	adds	r2, r2, r8
   13e44:	orr	r5, lr, r4, lsl #16
   13e48:	str	r5, [sp, #156]	; 0x9c
   13e4c:	adc	r3, r3, r9
   13e50:	str	r7, [sp, #152]	; 0x98
   13e54:	ldrd	r4, [sp, #216]	; 0xd8
   13e58:	ldrd	r6, [sp, #152]	; 0x98
   13e5c:	mov	r9, r3
   13e60:	ldr	r3, [sp, #200]	; 0xc8
   13e64:	orr	ip, ip, r1, lsl #16
   13e68:	lsr	r1, r1, #16
   13e6c:	orr	r1, r1, r0, lsl #16
   13e70:	adds	r4, r4, r6
   13e74:	str	ip, [sp, #144]	; 0x90
   13e78:	str	r1, [sp, #148]	; 0x94
   13e7c:	lsr	ip, r3, #24
   13e80:	ldr	r3, [sp, #204]	; 0xcc
   13e84:	ldrd	r0, [sp, #232]	; 0xe8
   13e88:	adc	r5, r5, r7
   13e8c:	mov	r8, r2
   13e90:	ldrd	r6, [sp, #144]	; 0x90
   13e94:	ldr	r2, [sp, #200]	; 0xc8
   13e98:	orr	ip, ip, r3, lsl #8
   13e9c:	lsr	r3, r3, #24
   13ea0:	adds	r0, r0, r6
   13ea4:	orr	r3, r3, r2, lsl #8
   13ea8:	str	ip, [sp, #168]	; 0xa8
   13eac:	adc	r1, r1, r7
   13eb0:	str	r3, [sp, #172]	; 0xac
   13eb4:	strd	r4, [sp, #216]	; 0xd8
   13eb8:	ldrd	r4, [sp, #168]	; 0xa8
   13ebc:	ldrd	r2, [sp, #112]	; 0x70
   13ec0:	strd	r0, [sp, #208]	; 0xd0
   13ec4:	ldrd	r0, [sp, #240]	; 0xf0
   13ec8:	adds	r4, r4, r8
   13ecc:	adc	r5, r5, r9
   13ed0:	adds	r0, r0, r2
   13ed4:	adc	r1, r1, r3
   13ed8:	ldrd	r2, [sp, #160]	; 0xa0
   13edc:	adds	r0, r0, sl
   13ee0:	adc	r1, r1, fp
   13ee4:	ldrd	r6, [sp, #224]	; 0xe0
   13ee8:	eor	r3, r3, r1
   13eec:	strd	r4, [sp, #200]	; 0xc8
   13ef0:	eor	r2, r2, r0
   13ef4:	mov	r5, r3
   13ef8:	adds	r6, r6, r5
   13efc:	mov	r4, r2
   13f00:	adc	r7, r7, r4
   13f04:	mov	r2, r3
   13f08:	mov	r3, r4
   13f0c:	mov	r4, r6
   13f10:	eor	r4, r4, sl
   13f14:	strd	r6, [sp, #224]	; 0xe0
   13f18:	mov	r5, r7
   13f1c:	ldrd	r6, [sp, #96]	; 0x60
   13f20:	eor	r5, r5, fp
   13f24:	lsr	ip, r4, #24
   13f28:	orr	r8, ip, r5, lsl #8
   13f2c:	adds	r6, r6, r0
   13f30:	lsr	ip, r5, #24
   13f34:	orr	r9, ip, r4, lsl #8
   13f38:	adc	r7, r7, r1
   13f3c:	adds	sl, r6, r8
   13f40:	adc	fp, r7, r9
   13f44:	mov	r6, sl
   13f48:	mov	r7, fp
   13f4c:	ldrd	r0, [sp, #192]	; 0xc0
   13f50:	ldrd	sl, [sp, #200]	; 0xc8
   13f54:	strd	r6, [sp, #232]	; 0xe8
   13f58:	eor	r0, r0, sl
   13f5c:	eor	r1, r1, fp
   13f60:	mov	sl, r6
   13f64:	mov	fp, r7
   13f68:	eor	sl, sl, r2
   13f6c:	eor	fp, fp, r3
   13f70:	mov	r4, r0
   13f74:	mov	r5, r1
   13f78:	mov	r2, sl
   13f7c:	ldrd	r0, [sp, #184]	; 0xb8
   13f80:	mov	r3, fp
   13f84:	ldrd	sl, [sp, #216]	; 0xd8
   13f88:	lsr	lr, r4, #16
   13f8c:	eor	r1, r1, fp
   13f90:	eor	r0, r0, sl
   13f94:	lsl	ip, r1, #1
   13f98:	orr	ip, ip, r0, lsr #31
   13f9c:	lsl	r0, r0, #1
   13fa0:	orr	r1, r0, r1, lsr #31
   13fa4:	str	ip, [sp, #164]	; 0xa4
   13fa8:	str	r1, [sp, #160]	; 0xa0
   13fac:	ldrd	sl, [sp, #16]
   13fb0:	ldrd	r0, [sp, #176]	; 0xb0
   13fb4:	ldrd	r6, [sp, #136]	; 0x88
   13fb8:	lsr	ip, r2, #16
   13fbc:	adds	sl, sl, r0
   13fc0:	adc	fp, fp, r1
   13fc4:	orr	r1, lr, r5, lsl #16
   13fc8:	str	r1, [sp, #176]	; 0xb0
   13fcc:	ldrd	r0, [sp, #208]	; 0xd0
   13fd0:	eor	r6, r6, r0
   13fd4:	eor	r7, r7, r1
   13fd8:	ldrd	r0, [sp, #160]	; 0xa0
   13fdc:	adds	r0, r0, sl
   13fe0:	adc	r1, r1, fp
   13fe4:	strd	r0, [sp, #192]	; 0xc0
   13fe8:	orr	r0, ip, r3, lsl #16
   13fec:	lsr	ip, r5, #16
   13ff0:	orr	ip, ip, r4, lsl #16
   13ff4:	str	ip, [sp, #180]	; 0xb4
   13ff8:	add	ip, sp, #264	; 0x108
   13ffc:	ldrd	r4, [sp, #176]	; 0xb0
   14000:	ldrd	sl, [ip]
   14004:	lsr	r3, r3, #16
   14008:	orr	r1, r3, r2, lsl #16
   1400c:	adds	sl, sl, r4
   14010:	adc	fp, fp, r5
   14014:	ldrd	r4, [sp, #224]	; 0xe0
   14018:	lsl	ip, r7, #1
   1401c:	adds	r4, r4, r0
   14020:	adc	r5, r5, r1
   14024:	mov	r2, r4
   14028:	mov	r3, r5
   1402c:	ldrd	r4, [sp, #168]	; 0xa8
   14030:	strd	r2, [sp, #240]	; 0xf0
   14034:	eor	r2, r2, r8
   14038:	eor	r3, r3, r9
   1403c:	ldrd	r8, [sp, #192]	; 0xc0
   14040:	eor	r5, r5, fp
   14044:	eor	r4, r4, sl
   14048:	strd	r2, [sp, #184]	; 0xb8
   1404c:	eor	r8, r8, r0
   14050:	orr	r3, ip, r6, lsr #31
   14054:	eor	r9, r9, r1
   14058:	lsl	ip, r6, #1
   1405c:	lsl	r1, r5, #1
   14060:	str	r9, [sp, #168]	; 0xa8
   14064:	str	r8, [sp, #172]	; 0xac
   14068:	str	r3, [sp, #140]	; 0x8c
   1406c:	ldrd	r8, [sp, #248]	; 0xf8
   14070:	orr	r3, ip, r7, lsr #31
   14074:	orr	r7, r1, r4, lsr #31
   14078:	ldrd	r0, [sp, #8]
   1407c:	str	r3, [sp, #136]	; 0x88
   14080:	ldrd	r2, [sp, #184]	; 0xb8
   14084:	adds	r0, r0, r8
   14088:	adc	r1, r1, r9
   1408c:	ldrd	r8, [sp, #80]	; 0x50
   14090:	strd	r0, [sp, #224]	; 0xe0
   14094:	ldrd	r0, [sp, #200]	; 0xc8
   14098:	lsl	ip, r3, #1
   1409c:	lsl	lr, r4, #1
   140a0:	adds	r8, r8, r0
   140a4:	orr	r6, lr, r5, lsr #31
   140a8:	adc	r9, r9, r1
   140ac:	orr	r5, ip, r2, lsr #31
   140b0:	ldrd	r0, [sp, #40]	; 0x28
   140b4:	lsl	ip, r2, #1
   140b8:	ldrd	r2, [sp, #232]	; 0xe8
   140bc:	adds	r0, r0, r2
   140c0:	adc	r1, r1, r3
   140c4:	ldr	r3, [sp, #188]	; 0xbc
   140c8:	strd	r0, [sp, #200]	; 0xc8
   140cc:	ldrd	r0, [sp, #224]	; 0xe0
   140d0:	orr	r4, ip, r3, lsr #31
   140d4:	ldrd	r2, [sp, #168]	; 0xa8
   140d8:	adds	r2, r2, sl
   140dc:	adc	r3, r3, fp
   140e0:	adds	r0, r0, r6
   140e4:	adc	r1, r1, r7
   140e8:	strd	r0, [sp, #224]	; 0xe0
   140ec:	ldrd	sl, [sp, #200]	; 0xc8
   140f0:	ldrd	r0, [sp, #136]	; 0x88
   140f4:	adds	r0, r0, sl
   140f8:	adc	r1, r1, fp
   140fc:	adds	sl, r8, r4
   14100:	adc	fp, r9, r5
   14104:	strd	r0, [sp, #248]	; 0xf8
   14108:	strd	sl, [sp, #232]	; 0xe8
   1410c:	ldrd	sl, [sp, #160]	; 0xa0
   14110:	add	r1, sp, #256	; 0x100
   14114:	ldrd	r8, [sp, #224]	; 0xe0
   14118:	eor	sl, sl, r2
   1411c:	eor	fp, fp, r3
   14120:	strd	r2, [r1]
   14124:	mov	r2, sl
   14128:	mov	r3, fp
   1412c:	ldrd	sl, [sp, #144]	; 0x90
   14130:	ldrd	r0, [sp, #176]	; 0xb0
   14134:	lsr	ip, r2, #24
   14138:	eor	sl, sl, r8
   1413c:	eor	fp, fp, r9
   14140:	mov	r8, sl
   14144:	mov	r9, fp
   14148:	ldrd	sl, [sp, #248]	; 0xf8
   1414c:	eor	r0, r0, sl
   14150:	eor	r1, r1, fp
   14154:	ldrd	sl, [sp, #152]	; 0x98
   14158:	strd	r0, [sp, #160]	; 0xa0
   1415c:	ldrd	r0, [sp, #232]	; 0xe8
   14160:	str	r9, [sp, #152]	; 0x98
   14164:	str	r8, [sp, #156]	; 0x9c
   14168:	eor	fp, fp, r1
   1416c:	orr	r1, ip, r3, lsl #8
   14170:	str	r1, [sp, #144]	; 0x90
   14174:	eor	sl, sl, r0
   14178:	ldrd	r0, [sp, #160]	; 0xa0
   1417c:	str	fp, [sp, #176]	; 0xb0
   14180:	str	sl, [sp, #180]	; 0xb4
   14184:	str	r1, [sp, #184]	; 0xb8
   14188:	ldrd	sl, [sp, #192]	; 0xc0
   1418c:	str	r0, [sp, #188]	; 0xbc
   14190:	ldrd	r0, [sp, #104]	; 0x68
   14194:	lsr	r3, r3, #24
   14198:	orr	r3, r3, r2, lsl #8
   1419c:	adds	r0, r0, sl
   141a0:	adc	r1, r1, fp
   141a4:	str	r3, [sp, #148]	; 0x94
   141a8:	ldrd	sl, [sp, #152]	; 0x98
   141ac:	ldrd	r2, [sp, #240]	; 0xf0
   141b0:	ldrd	r8, [sp, #176]	; 0xb0
   141b4:	adds	r2, r2, sl
   141b8:	adc	r3, r3, fp
   141bc:	ldrd	sl, [sp, #208]	; 0xd0
   141c0:	adds	sl, sl, r8
   141c4:	adc	fp, fp, r9
   141c8:	ldrd	r8, [sp, #216]	; 0xd8
   141cc:	strd	sl, [sp, #240]	; 0xf0
   141d0:	ldrd	sl, [sp, #184]	; 0xb8
   141d4:	adds	sl, sl, r8
   141d8:	adc	fp, fp, r9
   141dc:	mov	r8, sl
   141e0:	mov	r9, fp
   141e4:	ldrd	sl, [sp, #144]	; 0x90
   141e8:	adds	sl, sl, r0
   141ec:	adc	fp, fp, r1
   141f0:	add	r1, sp, #264	; 0x108
   141f4:	strd	sl, [sp, #208]	; 0xd0
   141f8:	mov	r0, r2
   141fc:	strd	r2, [r1]
   14200:	mov	r1, r3
   14204:	ldrd	r2, [sp, #240]	; 0xf0
   14208:	eor	r0, r0, r6
   1420c:	eor	r1, r1, r7
   14210:	eor	r2, r2, r4
   14214:	eor	r3, r3, r5
   14218:	ldrd	r4, [sp, #208]	; 0xd0
   1421c:	strd	r2, [sp, #200]	; 0xc8
   14220:	add	r3, sp, #272	; 0x110
   14224:	mov	r6, r0
   14228:	strd	r8, [r3]
   1422c:	ldrd	r2, [sp, #168]	; 0xa8
   14230:	mov	r7, r1
   14234:	ldrd	r0, [sp, #136]	; 0x88
   14238:	eor	r2, r2, r4
   1423c:	eor	r3, r3, r5
   14240:	eor	r0, r0, r8
   14244:	ldrd	r4, [sp, #224]	; 0xe0
   14248:	eor	r1, r1, r9
   1424c:	ldrd	r8, [sp, #88]	; 0x58
   14250:	strd	r2, [sp, #160]	; 0xa0
   14254:	ldrd	sl, [sp, #24]
   14258:	lsr	ip, r2, #16
   1425c:	ldrd	r2, [sp, #248]	; 0xf8
   14260:	adds	r8, r8, r4
   14264:	adc	r9, r9, r5
   14268:	adds	sl, sl, r2
   1426c:	adc	fp, fp, r3
   14270:	ldrd	r4, [sp, #232]	; 0xe8
   14274:	strd	sl, [sp, #224]	; 0xe0
   14278:	ldrd	sl, [sp, #48]	; 0x30
   1427c:	lsr	lr, r6, #24
   14280:	adds	sl, sl, r4
   14284:	adc	fp, fp, r5
   14288:	ldrd	r4, [sp, #160]	; 0xa0
   1428c:	orr	r3, ip, r5, lsl #16
   14290:	str	r3, [sp, #136]	; 0x88
   14294:	ldr	r3, [sp, #200]	; 0xc8
   14298:	lsr	ip, r3, #24
   1429c:	lsr	r3, r5, #16
   142a0:	orr	r3, r3, r4, lsl #16
   142a4:	str	r3, [sp, #140]	; 0x8c
   142a8:	orr	r3, lr, r7, lsl #8
   142ac:	str	r3, [sp, #160]	; 0xa0
   142b0:	add	r3, sp, #256	; 0x100
   142b4:	ldrd	r4, [sp, #136]	; 0x88
   142b8:	ldrd	r2, [r3]
   142bc:	lsr	lr, r0, #24
   142c0:	adds	r2, r2, r4
   142c4:	adc	r3, r3, r5
   142c8:	ldrd	r4, [sp, #144]	; 0x90
   142cc:	strd	r2, [sp, #232]	; 0xe8
   142d0:	eor	r5, r5, r3
   142d4:	mov	r3, r5
   142d8:	ldr	r5, [sp, #204]	; 0xcc
   142dc:	eor	r4, r4, r2
   142e0:	mov	r2, r4
   142e4:	orr	ip, ip, r5, lsl #8
   142e8:	str	ip, [sp, #168]	; 0xa8
   142ec:	orr	ip, lr, r1, lsl #8
   142f0:	str	ip, [sp, #192]	; 0xc0
   142f4:	lsl	ip, r3, #1
   142f8:	orr	ip, ip, r4, lsr #31
   142fc:	str	ip, [sp, #148]	; 0x94
   14300:	lsr	ip, r7, #24
   14304:	orr	ip, ip, r6, lsl #8
   14308:	ldrd	r4, [sp, #200]	; 0xc8
   1430c:	str	ip, [sp, #164]	; 0xa4
   14310:	ldrd	r6, [sp, #160]	; 0xa0
   14314:	lsr	ip, r5, #24
   14318:	orr	ip, ip, r4, lsl #8
   1431c:	adds	r8, r8, r6
   14320:	adc	r9, r9, r7
   14324:	mov	r4, sl
   14328:	ldrd	r6, [sp, #152]	; 0x98
   1432c:	mov	r5, fp
   14330:	str	ip, [sp, #172]	; 0xac
   14334:	ldrd	sl, [sp, #168]	; 0xa8
   14338:	lsr	r1, r1, #24
   1433c:	orr	r1, r1, r0, lsl #8
   14340:	adds	r4, r4, sl
   14344:	adc	r5, r5, fp
   14348:	str	r1, [sp, #196]	; 0xc4
   1434c:	ldrd	sl, [sp, #192]	; 0xc0
   14350:	strd	r4, [sp, #216]	; 0xd8
   14354:	ldrd	r4, [sp, #224]	; 0xe0
   14358:	ldrd	r0, [sp, #176]	; 0xb0
   1435c:	eor	r6, r6, r8
   14360:	adds	r4, r4, sl
   14364:	adc	r5, r5, fp
   14368:	mov	sl, r4
   1436c:	mov	fp, r5
   14370:	ldrd	r4, [sp, #216]	; 0xd8
   14374:	strd	sl, [sp, #176]	; 0xb0
   14378:	eor	r7, r7, r9
   1437c:	eor	r0, r0, r4
   14380:	eor	r1, r1, r5
   14384:	mov	r4, r0
   14388:	mov	r5, r1
   1438c:	mov	r0, sl
   14390:	mov	r1, fp
   14394:	ldrd	sl, [sp, #184]	; 0xb8
   14398:	lsl	r2, r2, #1
   1439c:	lsr	lr, r6, #16
   143a0:	eor	sl, sl, r0
   143a4:	eor	fp, fp, r1
   143a8:	orr	r3, r2, r3, lsr #31
   143ac:	str	r3, [sp, #144]	; 0x90
   143b0:	mov	r0, sl
   143b4:	orr	r3, lr, r7, lsl #16
   143b8:	str	r3, [sp, #152]	; 0x98
   143bc:	lsr	lr, sl, #16
   143c0:	lsr	r3, r7, #16
   143c4:	lsr	r1, fp, #16
   143c8:	orr	sl, lr, fp, lsl #16
   143cc:	orr	r3, r3, r6, lsl #16
   143d0:	orr	fp, r1, r0, lsl #16
   143d4:	add	r1, sp, #264	; 0x108
   143d8:	str	r3, [sp, #156]	; 0x9c
   143dc:	ldrd	r6, [sp, #152]	; 0x98
   143e0:	ldrd	r0, [r1]
   143e4:	lsr	ip, r4, #16
   143e8:	orr	r2, ip, r5, lsl #16
   143ec:	lsr	ip, r5, #16
   143f0:	orr	r3, ip, r4, lsl #16
   143f4:	adds	r0, r0, r6
   143f8:	ldrd	r4, [sp, #240]	; 0xf0
   143fc:	adc	r1, r1, r7
   14400:	ldrd	r6, [sp, #208]	; 0xd0
   14404:	strd	r0, [sp, #200]	; 0xc8
   14408:	adds	r4, r4, r2
   1440c:	add	r1, sp, #272	; 0x110
   14410:	adc	r5, r5, r3
   14414:	ldrd	r0, [r1]
   14418:	strd	r4, [sp, #224]	; 0xe0
   1441c:	ldrd	r4, [sp, #80]	; 0x50
   14420:	adds	r0, r0, sl
   14424:	adc	r1, r1, fp
   14428:	adds	r4, r4, r6
   1442c:	adc	r5, r5, r7
   14430:	strd	r4, [sp, #248]	; 0xf8
   14434:	ldrd	r4, [sp, #104]	; 0x68
   14438:	adds	r4, r4, r8
   1443c:	adc	r5, r5, r9
   14440:	mov	r8, r4
   14444:	mov	r9, r5
   14448:	ldrd	r4, [sp, #144]	; 0x90
   1444c:	adds	r4, r4, r8
   14450:	adc	r5, r5, r9
   14454:	ldrd	r8, [sp, #168]	; 0xa8
   14458:	strd	r4, [sp, #208]	; 0xd0
   1445c:	eor	r4, r4, r2
   14460:	eor	r5, r5, r3
   14464:	ldrd	r2, [sp, #224]	; 0xe0
   14468:	str	r5, [sp, #168]	; 0xa8
   1446c:	str	r4, [sp, #172]	; 0xac
   14470:	eor	r8, r8, r2
   14474:	ldrd	r4, [sp, #200]	; 0xc8
   14478:	eor	r9, r9, r3
   1447c:	ldrd	r2, [sp, #160]	; 0xa0
   14480:	lsl	ip, r9, #1
   14484:	eor	r2, r2, r4
   14488:	eor	r3, r3, r5
   1448c:	mov	r6, r2
   14490:	mov	r7, r3
   14494:	ldrd	r2, [sp, #192]	; 0xc0
   14498:	eor	r2, r2, r0
   1449c:	eor	r3, r3, r1
   144a0:	mov	r4, r2
   144a4:	mov	r5, r3
   144a8:	ldrd	r2, [sp, #168]	; 0xa8
   144ac:	lsl	lr, r5, #1
   144b0:	adds	r2, r2, r0
   144b4:	adc	r3, r3, r1
   144b8:	orr	r1, ip, r8, lsr #31
   144bc:	str	r1, [sp, #164]	; 0xa4
   144c0:	ldrd	r0, [sp, #144]	; 0x90
   144c4:	strd	r8, [sp, #240]	; 0xf0
   144c8:	lsl	ip, r8, #1
   144cc:	strd	r2, [sp, #192]	; 0xc0
   144d0:	ldrd	r8, [sp, #176]	; 0xb0
   144d4:	eor	r0, r0, r2
   144d8:	eor	r1, r1, r3
   144dc:	ldrd	r2, [sp, #128]	; 0x80
   144e0:	strd	r0, [sp, #184]	; 0xb8
   144e4:	adds	r2, r2, r8
   144e8:	adc	r3, r3, r9
   144ec:	mov	r9, r3
   144f0:	ldr	r3, [sp, #244]	; 0xf4
   144f4:	orr	r3, ip, r3, lsr #31
   144f8:	str	r3, [sp, #160]	; 0xa0
   144fc:	ldrd	r0, [sp, #160]	; 0xa0
   14500:	lsl	r3, r7, #1
   14504:	orr	r3, r3, r6, lsr #31
   14508:	adds	r0, r0, r2
   1450c:	adc	r1, r1, r9
   14510:	str	r3, [sp, #148]	; 0x94
   14514:	ldrd	r8, [sp, #40]	; 0x28
   14518:	ldrd	r2, [sp, #216]	; 0xd8
   1451c:	lsl	ip, r6, #1
   14520:	adds	r8, r8, r2
   14524:	adc	r9, r9, r3
   14528:	add	r3, sp, #264	; 0x108
   1452c:	strd	r8, [sp, #176]	; 0xb0
   14530:	ldrd	r8, [sp, #136]	; 0x88
   14534:	strd	r0, [r3]
   14538:	eor	r8, r8, r0
   1453c:	eor	r9, r9, r1
   14540:	orr	r1, ip, r7, lsr #31
   14544:	str	r1, [sp, #144]	; 0x90
   14548:	ldrd	r6, [sp, #8]
   1454c:	ldr	r1, [sp, #184]	; 0xb8
   14550:	mov	r2, r8
   14554:	mov	r3, r9
   14558:	ldrd	r8, [sp, #208]	; 0xd0
   1455c:	lsr	ip, r1, #24
   14560:	orr	r1, lr, r4, lsr #31
   14564:	adds	r6, r6, r8
   14568:	lsl	lr, r4, #1
   1456c:	str	r1, [sp, #140]	; 0x8c
   14570:	adc	r7, r7, r9
   14574:	orr	r1, lr, r5, lsr #31
   14578:	ldrd	r4, [sp, #184]	; 0xb8
   1457c:	ldrd	r8, [sp, #176]	; 0xb0
   14580:	strd	r6, [sp, #208]	; 0xd0
   14584:	ldrd	r6, [sp, #144]	; 0x90
   14588:	str	r1, [sp, #136]	; 0x88
   1458c:	orr	r1, ip, r5, lsl #8
   14590:	str	r1, [sp, #176]	; 0xb0
   14594:	lsr	r1, r5, #24
   14598:	adds	r6, r6, r8
   1459c:	orr	r1, r1, r4, lsl #8
   145a0:	adc	r7, r7, r9
   145a4:	str	r1, [sp, #180]	; 0xb4
   145a8:	add	r1, sp, #256	; 0x100
   145ac:	mov	r0, r6
   145b0:	strd	r6, [r1]
   145b4:	mov	r1, r7
   145b8:	ldrd	r8, [sp, #136]	; 0x88
   145bc:	eor	r0, r0, sl
   145c0:	eor	r1, r1, fp
   145c4:	ldrd	sl, [sp, #248]	; 0xf8
   145c8:	str	r3, [sp, #184]	; 0xb8
   145cc:	mov	r4, r0
   145d0:	adds	sl, sl, r8
   145d4:	adc	fp, fp, r9
   145d8:	ldrd	r8, [sp, #208]	; 0xd0
   145dc:	ldrd	r6, [sp, #176]	; 0xb0
   145e0:	mov	r5, r1
   145e4:	strd	sl, [sp, #240]	; 0xf0
   145e8:	adds	r8, r8, r6
   145ec:	adc	r9, r9, r7
   145f0:	mov	r0, r8
   145f4:	mov	r1, r9
   145f8:	ldrd	r8, [sp, #152]	; 0x98
   145fc:	strd	r0, [sp, #248]	; 0xf8
   14600:	str	r2, [sp, #188]	; 0xbc
   14604:	eor	r8, r8, sl
   14608:	eor	r9, r9, fp
   1460c:	mov	sl, r0
   14610:	mov	fp, r1
   14614:	ldrd	r0, [sp, #168]	; 0xa8
   14618:	ldrd	r6, [sp, #200]	; 0xc8
   1461c:	mov	r2, r8
   14620:	mov	r3, r9
   14624:	ldrd	r8, [sp, #184]	; 0xb8
   14628:	eor	r0, r0, sl
   1462c:	eor	r1, r1, fp
   14630:	mov	sl, r0
   14634:	mov	fp, r1
   14638:	ldrd	r0, [sp, #160]	; 0xa0
   1463c:	adds	r6, r6, r8
   14640:	adc	r7, r7, r9
   14644:	add	ip, sp, #272	; 0x110
   14648:	eor	r0, r0, r6
   1464c:	eor	r1, r1, r7
   14650:	strd	r6, [ip]
   14654:	mov	r6, r0
   14658:	mov	r7, r1
   1465c:	ldrd	r0, [sp, #232]	; 0xe8
   14660:	str	r3, [sp, #152]	; 0x98
   14664:	lsr	r3, sl, #16
   14668:	adds	r0, r0, r5
   1466c:	adc	r1, r1, r4
   14670:	str	r2, [sp, #156]	; 0x9c
   14674:	orr	r3, r3, fp, lsl #16
   14678:	strd	r0, [sp, #216]	; 0xd8
   1467c:	str	r3, [sp, #160]	; 0xa0
   14680:	ldrd	r0, [sp, #152]	; 0x98
   14684:	ldrd	r2, [sp, #224]	; 0xe0
   14688:	mov	r8, r5
   1468c:	lsr	r5, fp, #16
   14690:	adds	r2, r2, r0
   14694:	adc	r3, r3, r1
   14698:	ldrd	r0, [sp, #216]	; 0xd8
   1469c:	strd	r2, [sp, #208]	; 0xd0
   146a0:	ldrd	r2, [sp, #144]	; 0x90
   146a4:	mov	r9, r4
   146a8:	lsr	ip, r6, #24
   146ac:	eor	r2, r2, r0
   146b0:	eor	r3, r3, r1
   146b4:	ldrd	r0, [sp, #208]	; 0xd0
   146b8:	strd	r2, [sp, #200]	; 0xc8
   146bc:	orr	r3, r5, sl, lsl #16
   146c0:	ldrd	sl, [sp, #136]	; 0x88
   146c4:	str	r3, [sp, #164]	; 0xa4
   146c8:	add	r3, sp, #264	; 0x108
   146cc:	eor	sl, sl, r0
   146d0:	eor	fp, fp, r1
   146d4:	mov	r0, sl
   146d8:	ldrd	r2, [r3]
   146dc:	mov	r1, fp
   146e0:	ldrd	sl, [sp, #112]	; 0x70
   146e4:	ldrd	r4, [sp, #160]	; 0xa0
   146e8:	orr	ip, ip, r7, lsl #8
   146ec:	adds	sl, sl, r2
   146f0:	adc	fp, fp, r3
   146f4:	ldrd	r2, [sp, #192]	; 0xc0
   146f8:	str	ip, [sp, #192]	; 0xc0
   146fc:	lsr	ip, r7, #24
   14700:	adds	r2, r2, r4
   14704:	adc	r3, r3, r5
   14708:	ldrd	r4, [sp, #176]	; 0xb0
   1470c:	strd	r2, [sp, #224]	; 0xe0
   14710:	add	lr, sp, #256	; 0x100
   14714:	eor	r5, r5, r3
   14718:	orr	r3, ip, r6, lsl #8
   1471c:	str	r3, [sp, #196]	; 0xc4
   14720:	ldr	r3, [sp, #200]	; 0xc8
   14724:	eor	r4, r4, r2
   14728:	ldrd	r6, [lr]
   1472c:	lsr	ip, r3, #24
   14730:	ldrd	r2, [sp, #192]	; 0xc0
   14734:	adds	r2, r2, sl
   14738:	adc	r3, r3, fp
   1473c:	ldrd	sl, [sp, #88]	; 0x58
   14740:	strd	r2, [lr]
   14744:	lsl	lr, r4, #1
   14748:	adds	sl, sl, r6
   1474c:	adc	fp, fp, r7
   14750:	ldrd	r6, [sp, #184]	; 0xb8
   14754:	strd	sl, [sp, #176]	; 0xb0
   14758:	ldrd	sl, [sp, #56]	; 0x38
   1475c:	eor	r7, r7, r3
   14760:	ldr	r3, [sp, #204]	; 0xcc
   14764:	eor	r6, r6, r2
   14768:	orr	r3, ip, r3, lsl #8
   1476c:	str	r3, [sp, #144]	; 0x90
   14770:	ldrd	r2, [sp, #240]	; 0xf0
   14774:	lsl	ip, r5, #1
   14778:	adds	sl, sl, r2
   1477c:	adc	fp, fp, r3
   14780:	orr	r3, ip, r4, lsr #31
   14784:	str	r3, [sp, #172]	; 0xac
   14788:	lsr	ip, r0, #24
   1478c:	orr	r3, lr, r5, lsr #31
   14790:	str	r3, [sp, #168]	; 0xa8
   14794:	orr	r3, ip, r1, lsl #8
   14798:	lsr	r1, r1, #24
   1479c:	str	r3, [sp, #136]	; 0x88
   147a0:	orr	r3, r1, r0, lsl #8
   147a4:	ldrd	r0, [sp, #200]	; 0xc8
   147a8:	str	r3, [sp, #140]	; 0x8c
   147ac:	ldrd	r4, [sp, #176]	; 0xb0
   147b0:	lsr	r3, r1, #24
   147b4:	orr	r3, r3, r0, lsl #8
   147b8:	str	r3, [sp, #148]	; 0x94
   147bc:	ldrd	r2, [sp, #144]	; 0x90
   147c0:	ldrd	r0, [sp, #136]	; 0x88
   147c4:	lsr	ip, r6, #16
   147c8:	adds	r4, r4, r2
   147cc:	adc	r5, r5, r3
   147d0:	adds	r0, r0, sl
   147d4:	adc	r1, r1, fp
   147d8:	mov	sl, r0
   147dc:	mov	fp, r1
   147e0:	ldrd	r2, [sp, #72]	; 0x48
   147e4:	mov	r0, r4
   147e8:	mov	r1, r5
   147ec:	eor	r0, r0, r8
   147f0:	eor	r1, r1, r9
   147f4:	ldrd	r8, [sp, #168]	; 0xa8
   147f8:	orr	ip, ip, r7, lsl #16
   147fc:	adds	r2, r2, sl
   14800:	str	ip, [sp, #176]	; 0xb0
   14804:	lsr	ip, r7, #16
   14808:	strd	r4, [sp, #232]	; 0xe8
   1480c:	adc	r3, r3, fp
   14810:	orr	ip, ip, r6, lsl #16
   14814:	adds	r4, r8, r2
   14818:	adc	r5, r9, r3
   1481c:	str	ip, [sp, #180]	; 0xb4
   14820:	mov	r2, r4
   14824:	mov	r3, r5
   14828:	ldrd	r4, [sp, #176]	; 0xb0
   1482c:	lsr	ip, r0, #16
   14830:	orr	ip, ip, r1, lsl #16
   14834:	lsr	r1, r1, #16
   14838:	eor	r4, r4, r2
   1483c:	eor	r5, r5, r3
   14840:	orr	r1, r1, r0, lsl #16
   14844:	str	ip, [sp, #168]	; 0xa8
   14848:	mov	r6, r4
   1484c:	mov	r7, r5
   14850:	str	r1, [sp, #172]	; 0xac
   14854:	ldrd	r4, [sp, #216]	; 0xd8
   14858:	ldrd	r0, [sp, #168]	; 0xa8
   1485c:	str	r7, [sp, #184]	; 0xb8
   14860:	str	r6, [sp, #188]	; 0xbc
   14864:	ldrd	r6, [sp, #152]	; 0x98
   14868:	adds	r0, r0, r4
   1486c:	adc	r1, r1, r5
   14870:	eor	r6, r6, sl
   14874:	eor	r7, r7, fp
   14878:	mov	sl, r6
   1487c:	mov	fp, r7
   14880:	ldrd	r6, [sp, #184]	; 0xb8
   14884:	mov	r4, r0
   14888:	mov	r5, r1
   1488c:	ldrd	r0, [sp, #144]	; 0x90
   14890:	adds	r6, r6, r4
   14894:	adc	r7, r7, r5
   14898:	eor	r1, r1, r5
   1489c:	eor	r0, r0, r4
   148a0:	mov	r5, r7
   148a4:	mov	r4, r6
   148a8:	mov	r7, r9
   148ac:	mov	r6, r8
   148b0:	eor	r6, r6, r4
   148b4:	eor	r7, r7, r5
   148b8:	strd	r4, [sp, #200]	; 0xc8
   148bc:	mov	r4, r6
   148c0:	mov	r5, r7
   148c4:	ldrd	r6, [sp, #120]	; 0x78
   148c8:	lsr	ip, sl, #16
   148cc:	orr	ip, ip, fp, lsl #16
   148d0:	str	ip, [sp, #144]	; 0x90
   148d4:	adds	r6, r6, r2
   148d8:	lsr	ip, fp, #16
   148dc:	adc	r7, r7, r3
   148e0:	ldrd	r8, [sp, #24]
   148e4:	orr	r3, ip, sl, lsl #16
   148e8:	ldrd	sl, [sp, #248]	; 0xf8
   148ec:	str	r3, [sp, #148]	; 0x94
   148f0:	lsr	ip, r5, #24
   148f4:	adds	r8, r8, sl
   148f8:	adc	r9, r9, fp
   148fc:	ldrd	sl, [sp, #144]	; 0x90
   14900:	strd	r8, [sp, #248]	; 0xf8
   14904:	ldrd	r8, [sp, #208]	; 0xd0
   14908:	lsr	r3, r4, #24
   1490c:	orr	r3, r3, r5, lsl #8
   14910:	adds	r8, r8, sl
   14914:	adc	r9, r9, fp
   14918:	orr	ip, ip, r4, lsl #8
   1491c:	ldrd	sl, [sp, #136]	; 0x88
   14920:	str	r3, [sp, #152]	; 0x98
   14924:	str	ip, [sp, #156]	; 0x9c
   14928:	ldrd	r4, [sp, #152]	; 0x98
   1492c:	eor	fp, fp, r9
   14930:	mov	r3, fp
   14934:	adds	r4, r4, r6
   14938:	eor	sl, sl, r8
   1493c:	lsl	ip, r1, #1
   14940:	orr	fp, ip, r0, lsr #31
   14944:	adc	r5, r5, r7
   14948:	lsl	ip, r3, #1
   1494c:	strd	r8, [sp, #216]	; 0xd8
   14950:	orr	ip, ip, sl, lsr #31
   14954:	mov	r8, r4
   14958:	mov	r9, r5
   1495c:	ldrd	r4, [sp, #184]	; 0xb8
   14960:	str	ip, [sp, #140]	; 0x8c
   14964:	add	ip, sp, #272	; 0x110
   14968:	ldrd	r6, [sp, #176]	; 0xb0
   1496c:	eor	r4, r4, r8
   14970:	eor	r5, r5, r9
   14974:	strd	r8, [sp, #240]	; 0xf0
   14978:	ldrd	r8, [ip]
   1497c:	lsl	r0, r0, #1
   14980:	lsl	r2, sl, #1
   14984:	orr	sl, r0, r1, lsr #31
   14988:	ldrd	r0, [sp, #248]	; 0xf8
   1498c:	adds	r8, r8, r6
   14990:	lsr	ip, r4, #16
   14994:	orr	r3, r2, r3, lsr #31
   14998:	adc	r9, r9, r7
   1499c:	str	r3, [sp, #136]	; 0x88
   149a0:	ldrd	r6, [sp, #144]	; 0x90
   149a4:	orr	r3, ip, r5, lsl #16
   149a8:	adds	r0, r0, sl
   149ac:	str	r3, [sp, #144]	; 0x90
   149b0:	lsr	r3, r5, #16
   149b4:	adc	r1, r1, fp
   149b8:	orr	r3, r3, r4, lsl #16
   149bc:	str	r3, [sp, #148]	; 0x94
   149c0:	eor	r6, r6, r0
   149c4:	eor	r7, r7, r1
   149c8:	ldrd	r4, [sp, #200]	; 0xc8
   149cc:	str	r7, [sp, #176]	; 0xb0
   149d0:	str	r6, [sp, #180]	; 0xb4
   149d4:	ldrd	r6, [sp, #144]	; 0x90
   149d8:	strd	r0, [sp, #248]	; 0xf8
   149dc:	adds	r4, r4, r6
   149e0:	adc	r5, r5, r7
   149e4:	strd	r4, [sp, #208]	; 0xd0
   149e8:	ldrd	r6, [sp, #176]	; 0xb0
   149ec:	ldrd	r4, [sp, #64]	; 0x40
   149f0:	adds	r2, r8, r6
   149f4:	adc	r3, r9, r7
   149f8:	ldrd	r6, [sp, #136]	; 0x88
   149fc:	strd	r2, [sp, #200]	; 0xc8
   14a00:	add	r3, sp, #256	; 0x100
   14a04:	ldrd	r0, [r3]
   14a08:	ldrd	r2, [sp, #192]	; 0xc0
   14a0c:	adds	r4, r4, r0
   14a10:	adc	r5, r5, r1
   14a14:	mov	r0, r4
   14a18:	adds	r4, r6, r0
   14a1c:	mov	r1, r5
   14a20:	adc	r5, r7, r1
   14a24:	mov	r0, r4
   14a28:	mov	r1, r5
   14a2c:	ldrd	r4, [sp, #168]	; 0xa8
   14a30:	eor	r3, r3, r9
   14a34:	eor	r2, r2, r8
   14a38:	eor	r4, r4, r0
   14a3c:	eor	r5, r5, r1
   14a40:	mov	r8, r5
   14a44:	mov	r9, r4
   14a48:	ldrd	r4, [sp, #224]	; 0xe0
   14a4c:	lsl	ip, r3, #1
   14a50:	orr	ip, ip, r2, lsr #31
   14a54:	lsl	r2, r2, #1
   14a58:	adds	r4, r4, r8
   14a5c:	orr	r3, r2, r3, lsr #31
   14a60:	str	r3, [sp, #136]	; 0x88
   14a64:	adc	r5, r5, r9
   14a68:	add	r3, sp, #256	; 0x100
   14a6c:	mov	r2, r6
   14a70:	strd	r4, [r3]
   14a74:	mov	r3, r7
   14a78:	eor	r2, r2, r4
   14a7c:	eor	r3, r3, r5
   14a80:	ldrd	r6, [sp, #232]	; 0xe8
   14a84:	mov	r4, r2
   14a88:	mov	r5, r3
   14a8c:	ldrd	r2, [sp, #48]	; 0x30
   14a90:	str	ip, [sp, #140]	; 0x8c
   14a94:	strd	r4, [sp, #168]	; 0xa8
   14a98:	adds	r2, r2, r6
   14a9c:	adc	r3, r3, r7
   14aa0:	ldrd	r6, [sp, #136]	; 0x88
   14aa4:	lsr	ip, r4, #24
   14aa8:	ldrd	r4, [sp, #32]
   14aac:	adds	r6, r6, r2
   14ab0:	adc	r7, r7, r3
   14ab4:	adds	r4, r4, r0
   14ab8:	adc	r5, r5, r1
   14abc:	mov	r0, r4
   14ac0:	mov	r1, r5
   14ac4:	ldrd	r4, [sp, #168]	; 0xa8
   14ac8:	mov	r2, r6
   14acc:	mov	r3, r7
   14ad0:	orr	ip, ip, r5, lsl #8
   14ad4:	ldrd	r6, [sp, #160]	; 0xa0
   14ad8:	str	ip, [sp, #184]	; 0xb8
   14adc:	lsr	ip, r5, #24
   14ae0:	orr	ip, ip, r4, lsl #8
   14ae4:	str	ip, [sp, #188]	; 0xbc
   14ae8:	eor	r6, r6, r2
   14aec:	eor	r7, r7, r3
   14af0:	str	r7, [sp, #168]	; 0xa8
   14af4:	str	r6, [sp, #172]	; 0xac
   14af8:	ldrd	r6, [sp, #184]	; 0xb8
   14afc:	add	ip, sp, #264	; 0x108
   14b00:	adds	r6, r6, r0
   14b04:	adc	r7, r7, r1
   14b08:	mov	r4, r6
   14b0c:	mov	r5, r7
   14b10:	ldrd	r6, [sp, #200]	; 0xc8
   14b14:	ldrd	r0, [sp, #216]	; 0xd8
   14b18:	strd	r4, [ip]
   14b1c:	eor	r6, r6, sl
   14b20:	eor	r7, r7, fp
   14b24:	ldrd	sl, [sp, #168]	; 0xa8
   14b28:	lsr	lr, r6, #24
   14b2c:	adds	r0, r0, sl
   14b30:	adc	r1, r1, fp
   14b34:	mov	sl, r4
   14b38:	mov	fp, r5
   14b3c:	eor	sl, sl, r8
   14b40:	eor	fp, fp, r9
   14b44:	mov	r4, sl
   14b48:	mov	r5, fp
   14b4c:	ldrd	sl, [sp, #136]	; 0x88
   14b50:	ldrd	r8, [sp, #96]	; 0x60
   14b54:	strd	r0, [sp, #224]	; 0xe0
   14b58:	eor	sl, sl, r0
   14b5c:	eor	fp, fp, r1
   14b60:	lsr	ip, r4, #16
   14b64:	strd	sl, [sp, #136]	; 0x88
   14b68:	ldrd	sl, [sp, #248]	; 0xf8
   14b6c:	adds	r8, r8, sl
   14b70:	adc	r9, r9, fp
   14b74:	ldrd	sl, [sp, #16]
   14b78:	ldrd	r0, [sp, #152]	; 0x98
   14b7c:	adds	sl, sl, r2
   14b80:	adc	fp, fp, r3
   14b84:	orr	r3, lr, r7, lsl #8
   14b88:	str	r3, [sp, #160]	; 0xa0
   14b8c:	ldrd	r2, [sp, #208]	; 0xd0
   14b90:	eor	r1, r1, r3
   14b94:	mov	r3, r1
   14b98:	orr	r1, ip, r5, lsl #16
   14b9c:	lsr	ip, r7, #24
   14ba0:	str	r1, [sp, #192]	; 0xc0
   14ba4:	orr	r1, ip, r6, lsl #8
   14ba8:	str	r1, [sp, #164]	; 0xa4
   14bac:	eor	r0, r0, r2
   14bb0:	mov	r2, r0
   14bb4:	ldrd	r0, [sp, #160]	; 0xa0
   14bb8:	ldrd	r6, [sp, #176]	; 0xb0
   14bbc:	lsl	lr, r3, #1
   14bc0:	adds	r0, r0, r8
   14bc4:	adc	r1, r1, r9
   14bc8:	ldrd	r8, [sp, #136]	; 0x88
   14bcc:	strd	r0, [sp, #152]	; 0x98
   14bd0:	eor	r1, r1, r7
   14bd4:	lsr	ip, r8, #24
   14bd8:	mov	r7, r1
   14bdc:	orr	r1, ip, r9, lsl #8
   14be0:	lsr	ip, r5, #16
   14be4:	str	r1, [sp, #176]	; 0xb0
   14be8:	orr	r1, ip, r4, lsl #16
   14bec:	str	r1, [sp, #196]	; 0xc4
   14bf0:	add	r1, sp, #256	; 0x100
   14bf4:	eor	r0, r0, r6
   14bf8:	mov	r6, r0
   14bfc:	ldrd	r4, [r1]
   14c00:	ldrd	r0, [sp, #192]	; 0xc0
   14c04:	lsr	ip, r6, #16
   14c08:	adds	r4, r4, r0
   14c0c:	adc	r5, r5, r1
   14c10:	ldrd	r0, [sp, #184]	; 0xb8
   14c14:	strd	r4, [sp, #248]	; 0xf8
   14c18:	eor	r1, r1, r5
   14c1c:	mov	r5, r1
   14c20:	lsr	r1, r9, #24
   14c24:	orr	r1, r1, r8, lsl #8
   14c28:	str	r1, [sp, #180]	; 0xb4
   14c2c:	eor	r0, r0, r4
   14c30:	mov	r4, r0
   14c34:	orr	r9, lr, r2, lsr #31
   14c38:	ldrd	r0, [sp, #176]	; 0xb0
   14c3c:	lsl	r2, r2, #1
   14c40:	orr	r3, r2, r3, lsr #31
   14c44:	str	r9, [sp, #140]	; 0x8c
   14c48:	str	r3, [sp, #136]	; 0x88
   14c4c:	ldrd	r8, [sp, #240]	; 0xf0
   14c50:	ldrd	r2, [sp, #48]	; 0x30
   14c54:	adds	r0, r0, sl
   14c58:	adc	r1, r1, fp
   14c5c:	mov	sl, r0
   14c60:	adds	r2, r2, r8
   14c64:	mov	fp, r1
   14c68:	ldrd	r0, [sp, #168]	; 0xa8
   14c6c:	adc	r3, r3, r9
   14c70:	strd	sl, [sp, #232]	; 0xe8
   14c74:	eor	r0, r0, sl
   14c78:	ldrd	r8, [sp, #152]	; 0x98
   14c7c:	orr	sl, ip, r7, lsl #16
   14c80:	strd	r2, [sp, #184]	; 0xb8
   14c84:	lsr	ip, r7, #16
   14c88:	ldrd	r2, [sp, #24]
   14c8c:	eor	r1, r1, fp
   14c90:	orr	fp, ip, r6, lsl #16
   14c94:	ldrd	r6, [sp, #136]	; 0x88
   14c98:	adds	r8, r8, r2
   14c9c:	adc	r9, r9, r3
   14ca0:	adds	r6, r6, r8
   14ca4:	adc	r7, r7, r9
   14ca8:	mov	r8, r6
   14cac:	mov	r9, r7
   14cb0:	lsl	lr, r5, #1
   14cb4:	ldrd	r6, [sp, #200]	; 0xc8
   14cb8:	orr	r3, lr, r4, lsr #31
   14cbc:	str	r3, [sp, #172]	; 0xac
   14cc0:	ldrd	r2, [sp, #160]	; 0xa0
   14cc4:	adds	r6, r6, sl
   14cc8:	adc	r7, r7, fp
   14ccc:	lsr	ip, r0, #16
   14cd0:	eor	r2, r2, r6
   14cd4:	eor	r3, r3, r7
   14cd8:	strd	r6, [sp, #216]	; 0xd8
   14cdc:	orr	r6, ip, r1, lsl #16
   14ce0:	lsl	ip, r4, #1
   14ce4:	strd	r2, [sp, #200]	; 0xc8
   14ce8:	orr	r3, ip, r5, lsr #31
   14cec:	str	r3, [sp, #168]	; 0xa8
   14cf0:	ldrd	r2, [sp, #168]	; 0xa8
   14cf4:	ldrd	r4, [sp, #184]	; 0xb8
   14cf8:	lsr	r1, r1, #16
   14cfc:	orr	r7, r1, r0, lsl #16
   14d00:	adds	r4, r4, r2
   14d04:	adc	r5, r5, r3
   14d08:	eor	r0, r6, r8
   14d0c:	strd	r4, [sp, #240]	; 0xf0
   14d10:	eor	r4, r4, sl
   14d14:	eor	r5, r5, fp
   14d18:	mov	sl, r4
   14d1c:	mov	fp, r5
   14d20:	ldrd	r4, [sp, #224]	; 0xe0
   14d24:	eor	r1, r7, r9
   14d28:	ldr	r3, [sp, #204]	; 0xcc
   14d2c:	adds	r4, r4, r6
   14d30:	str	r1, [sp, #184]	; 0xb8
   14d34:	str	r0, [sp, #188]	; 0xbc
   14d38:	adc	r5, r5, r7
   14d3c:	ldrd	r0, [sp, #248]	; 0xf8
   14d40:	mov	r6, r4
   14d44:	mov	r7, r5
   14d48:	str	fp, [sp, #160]	; 0xa0
   14d4c:	str	sl, [sp, #164]	; 0xa4
   14d50:	ldrd	r4, [sp, #184]	; 0xb8
   14d54:	ldrd	sl, [sp, #200]	; 0xc8
   14d58:	lsl	ip, r3, #1
   14d5c:	adds	r4, r4, r0
   14d60:	orr	r3, ip, sl, lsr #31
   14d64:	lsl	r2, sl, #1
   14d68:	adc	r5, r5, r1
   14d6c:	str	r3, [sp, #156]	; 0x9c
   14d70:	ldrd	r0, [sp, #112]	; 0x70
   14d74:	orr	r3, r2, fp, lsr #31
   14d78:	ldrd	sl, [sp, #232]	; 0xe8
   14d7c:	str	r3, [sp, #152]	; 0x98
   14d80:	strd	r4, [sp, #248]	; 0xf8
   14d84:	adds	r0, r0, sl
   14d88:	adc	r1, r1, fp
   14d8c:	mov	r2, r0
   14d90:	ldrd	sl, [sp, #136]	; 0x88
   14d94:	mov	r3, r1
   14d98:	ldrd	r0, [sp, #160]	; 0xa0
   14d9c:	eor	sl, sl, r4
   14da0:	eor	fp, fp, r5
   14da4:	adds	r0, r0, r6
   14da8:	ldrd	r4, [sp, #168]	; 0xa8
   14dac:	adc	r1, r1, r7
   14db0:	lsr	lr, sl, #24
   14db4:	strd	r0, [sp, #224]	; 0xe0
   14db8:	eor	r4, r4, r0
   14dbc:	eor	r5, r5, r1
   14dc0:	ldrd	r0, [sp, #152]	; 0x98
   14dc4:	strd	r4, [sp, #200]	; 0xc8
   14dc8:	ldrd	r4, [sp, #192]	; 0xc0
   14dcc:	adds	r0, r0, r2
   14dd0:	adc	r1, r1, r3
   14dd4:	mov	r3, r1
   14dd8:	eor	r5, r5, r1
   14ddc:	ldr	r1, [sp, #200]	; 0xc8
   14de0:	mov	r2, r0
   14de4:	eor	r4, r4, r0
   14de8:	lsr	ip, r1, #24
   14dec:	ldrd	r0, [sp, #16]
   14df0:	strd	r2, [sp, #192]	; 0xc0
   14df4:	mov	r2, r4
   14df8:	adds	r0, r0, r8
   14dfc:	adc	r1, r1, r9
   14e00:	mov	r3, r5
   14e04:	mov	r8, r0
   14e08:	ldrd	r4, [sp, #64]	; 0x40
   14e0c:	mov	r9, r1
   14e10:	ldrd	r0, [sp, #240]	; 0xf0
   14e14:	adds	r4, r4, r0
   14e18:	adc	r5, r5, r1
   14e1c:	orr	r1, lr, fp, lsl #8
   14e20:	str	r1, [sp, #168]	; 0xa8
   14e24:	ldr	r1, [sp, #204]	; 0xcc
   14e28:	orr	r1, ip, r1, lsl #8
   14e2c:	str	r1, [sp, #136]	; 0x88
   14e30:	ldrd	r0, [sp, #176]	; 0xb0
   14e34:	str	r3, [sp, #176]	; 0xb0
   14e38:	str	r2, [sp, #180]	; 0xb4
   14e3c:	eor	r0, r0, r6
   14e40:	eor	r1, r1, r7
   14e44:	ldrd	r2, [sp, #208]	; 0xd0
   14e48:	mov	r7, r1
   14e4c:	mov	r6, r0
   14e50:	ldrd	r0, [sp, #176]	; 0xb0
   14e54:	add	ip, sp, #256	; 0x100
   14e58:	adds	r2, r2, r0
   14e5c:	adc	r3, r3, r1
   14e60:	ldrd	r0, [sp, #152]	; 0x98
   14e64:	strd	r2, [ip]
   14e68:	lsr	ip, fp, #24
   14e6c:	eor	r1, r1, r3
   14e70:	orr	r3, ip, sl, lsl #8
   14e74:	str	r3, [sp, #172]	; 0xac
   14e78:	ldrd	sl, [sp, #168]	; 0xa8
   14e7c:	eor	r0, r0, r2
   14e80:	lsl	ip, r7, #1
   14e84:	adds	sl, sl, r8
   14e88:	adc	fp, fp, r9
   14e8c:	ldrd	r8, [sp, #200]	; 0xc8
   14e90:	strd	r0, [sp, #208]	; 0xd0
   14e94:	strd	sl, [sp, #240]	; 0xf0
   14e98:	lsr	r1, r9, #24
   14e9c:	orr	r3, r1, r8, lsl #8
   14ea0:	str	r3, [sp, #140]	; 0x8c
   14ea4:	ldrd	r8, [sp, #136]	; 0x88
   14ea8:	ldrd	r2, [sp, #184]	; 0xb8
   14eac:	adds	r0, r4, r8
   14eb0:	adc	r1, r5, r9
   14eb4:	ldrd	r8, [sp, #160]	; 0xa0
   14eb8:	eor	r2, r2, sl
   14ebc:	eor	r3, r3, fp
   14ec0:	eor	r8, r8, r0
   14ec4:	eor	r9, r9, r1
   14ec8:	orr	fp, ip, r6, lsr #31
   14ecc:	mov	r5, r3
   14ed0:	strd	r0, [sp, #232]	; 0xe8
   14ed4:	mov	r4, r2
   14ed8:	mov	r0, r8
   14edc:	mov	r1, r9
   14ee0:	lsr	lr, r2, #16
   14ee4:	lsr	ip, r8, #16
   14ee8:	ldrd	r2, [sp, #192]	; 0xc0
   14eec:	ldrd	r8, [sp, #104]	; 0x68
   14ef0:	lsl	r6, r6, #1
   14ef4:	orr	sl, r6, r7, lsr #31
   14ef8:	adds	r8, r8, r2
   14efc:	adc	r9, r9, r3
   14f00:	orr	r3, lr, r5, lsl #16
   14f04:	lsr	lr, r5, #16
   14f08:	str	r3, [sp, #160]	; 0xa0
   14f0c:	orr	r3, lr, r4, lsl #16
   14f10:	str	r3, [sp, #164]	; 0xa4
   14f14:	orr	r3, ip, r1, lsl #16
   14f18:	ldrd	r6, [sp, #208]	; 0xd0
   14f1c:	str	r3, [sp, #152]	; 0x98
   14f20:	ldrd	r4, [sp, #248]	; 0xf8
   14f24:	ldrd	r2, [sp, #160]	; 0xa0
   14f28:	lsr	ip, r6, #24
   14f2c:	lsr	r1, r1, #16
   14f30:	adds	r4, r4, r2
   14f34:	adc	r5, r5, r3
   14f38:	orr	r3, ip, r7, lsl #8
   14f3c:	str	r3, [sp, #184]	; 0xb8
   14f40:	orr	r3, r1, r0, lsl #16
   14f44:	str	r3, [sp, #156]	; 0x9c
   14f48:	ldrd	r2, [sp, #152]	; 0x98
   14f4c:	strd	r4, [sp, #200]	; 0xc8
   14f50:	ldrd	r4, [sp, #224]	; 0xe0
   14f54:	add	r1, sp, #264	; 0x108
   14f58:	adds	r4, r4, r2
   14f5c:	adc	r5, r5, r3
   14f60:	lsr	r3, r7, #24
   14f64:	orr	r3, r3, r6, lsl #8
   14f68:	str	r3, [sp, #188]	; 0xbc
   14f6c:	strd	r4, [sp, #192]	; 0xc0
   14f70:	ldrd	r2, [sp, #184]	; 0xb8
   14f74:	ldrd	r4, [r1]
   14f78:	ldrd	r6, [sp, #216]	; 0xd8
   14f7c:	adds	r2, r2, r8
   14f80:	adc	r3, r3, r9
   14f84:	strd	r2, [sp, #208]	; 0xd0
   14f88:	ldrd	r2, [sp, #80]	; 0x50
   14f8c:	adds	r2, r2, r4
   14f90:	adc	r3, r3, r5
   14f94:	ldrd	r4, [sp, #144]	; 0x90
   14f98:	adds	r0, r2, sl
   14f9c:	adc	r1, r3, fp
   14fa0:	eor	r5, r5, r1
   14fa4:	adds	r6, r6, r5
   14fa8:	eor	r4, r4, r0
   14fac:	adc	r7, r7, r4
   14fb0:	mov	r3, r4
   14fb4:	mov	r4, r6
   14fb8:	strd	r6, [sp, #224]	; 0xe0
   14fbc:	eor	r4, r4, sl
   14fc0:	mov	r2, r5
   14fc4:	mov	r5, r7
   14fc8:	ldrd	r6, [sp, #120]	; 0x78
   14fcc:	eor	r5, r5, fp
   14fd0:	lsr	ip, r4, #24
   14fd4:	orr	r8, ip, r5, lsl #8
   14fd8:	adds	r6, r6, r0
   14fdc:	lsr	ip, r5, #24
   14fe0:	orr	r9, ip, r4, lsl #8
   14fe4:	adc	r7, r7, r1
   14fe8:	adds	r6, r6, r8
   14fec:	adc	r7, r7, r9
   14ff0:	ldrd	r4, [sp, #176]	; 0xb0
   14ff4:	mov	r0, r6
   14ff8:	mov	r1, r7
   14ffc:	ldrd	r6, [sp, #208]	; 0xd0
   15000:	ldrd	sl, [sp, #200]	; 0xc8
   15004:	strd	r0, [sp, #248]	; 0xf8
   15008:	eor	r4, r4, r6
   1500c:	eor	r5, r5, r7
   15010:	mov	r6, r0
   15014:	mov	r7, r1
   15018:	ldrd	r0, [sp, #168]	; 0xa8
   1501c:	eor	r6, r6, r2
   15020:	lsr	lr, r4, #16
   15024:	eor	r1, r1, fp
   15028:	eor	r0, r0, sl
   1502c:	lsl	ip, r1, #1
   15030:	orr	ip, ip, r0, lsr #31
   15034:	lsl	r0, r0, #1
   15038:	orr	r1, r0, r1, lsr #31
   1503c:	str	r1, [sp, #144]	; 0x90
   15040:	ldrd	sl, [sp, #88]	; 0x58
   15044:	ldrd	r0, [sp, #232]	; 0xe8
   15048:	eor	r7, r7, r3
   1504c:	str	ip, [sp, #148]	; 0x94
   15050:	adds	sl, sl, r0
   15054:	adc	fp, fp, r1
   15058:	orr	r1, lr, r5, lsl #16
   1505c:	str	r1, [sp, #168]	; 0xa8
   15060:	mov	r2, r6
   15064:	ldrd	r0, [sp, #192]	; 0xc0
   15068:	mov	r3, r7
   1506c:	lsr	ip, r6, #16
   15070:	ldrd	r6, [sp, #136]	; 0x88
   15074:	eor	r6, r6, r0
   15078:	eor	r7, r7, r1
   1507c:	ldrd	r0, [sp, #144]	; 0x90
   15080:	adds	r0, r0, sl
   15084:	adc	r1, r1, fp
   15088:	strd	r0, [sp, #216]	; 0xd8
   1508c:	orr	r0, ip, r3, lsl #16
   15090:	lsr	ip, r5, #16
   15094:	orr	ip, ip, r4, lsl #16
   15098:	str	ip, [sp, #172]	; 0xac
   1509c:	add	ip, sp, #256	; 0x100
   150a0:	ldrd	r4, [sp, #168]	; 0xa8
   150a4:	ldrd	sl, [ip]
   150a8:	lsr	r3, r3, #16
   150ac:	orr	r1, r3, r2, lsl #16
   150b0:	adds	sl, sl, r4
   150b4:	adc	fp, fp, r5
   150b8:	ldrd	r4, [sp, #224]	; 0xe0
   150bc:	adds	r4, r4, r0
   150c0:	adc	r5, r5, r1
   150c4:	mov	r2, r4
   150c8:	mov	r3, r5
   150cc:	ldrd	r4, [sp, #184]	; 0xb8
   150d0:	strd	r2, [ip]
   150d4:	eor	r3, r3, r9
   150d8:	eor	r2, r2, r8
   150dc:	ldrd	r8, [sp, #216]	; 0xd8
   150e0:	strd	sl, [sp, #184]	; 0xb8
   150e4:	lsl	ip, r7, #1
   150e8:	eor	fp, fp, r5
   150ec:	eor	sl, sl, r4
   150f0:	orr	ip, ip, r6, lsr #31
   150f4:	eor	r8, r8, r0
   150f8:	eor	r9, r9, r1
   150fc:	str	ip, [sp, #140]	; 0x8c
   15100:	lsl	r1, fp, #1
   15104:	lsl	ip, r6, #1
   15108:	str	r9, [sp, #176]	; 0xb0
   1510c:	orr	ip, ip, r7, lsr #31
   15110:	str	r8, [sp, #180]	; 0xb4
   15114:	orr	r7, r1, sl, lsr #31
   15118:	ldrd	r8, [sp, #240]	; 0xf0
   1511c:	ldrd	r0, [sp, #40]	; 0x28
   15120:	lsl	lr, sl, #1
   15124:	orr	r6, lr, fp, lsr #31
   15128:	adds	r0, r0, r8
   1512c:	adc	r1, r1, r9
   15130:	ldrd	r8, [sp, #32]
   15134:	strd	r0, [sp, #224]	; 0xe0
   15138:	ldrd	r0, [sp, #208]	; 0xd0
   1513c:	ldrd	sl, [sp, #248]	; 0xf8
   15140:	str	ip, [sp, #136]	; 0x88
   15144:	adds	r8, r8, r0
   15148:	adc	r9, r9, r1
   1514c:	ldrd	r0, [sp, #128]	; 0x80
   15150:	lsl	ip, r3, #1
   15154:	orr	r5, ip, r2, lsr #31
   15158:	adds	r0, r0, sl
   1515c:	adc	r1, r1, fp
   15160:	lsl	r2, r2, #1
   15164:	strd	r0, [sp, #232]	; 0xe8
   15168:	orr	r4, r2, r3, lsr #31
   1516c:	ldrd	r0, [sp, #184]	; 0xb8
   15170:	ldrd	r2, [sp, #176]	; 0xb0
   15174:	adds	r0, r0, r2
   15178:	adc	r1, r1, r3
   1517c:	mov	r2, r0
   15180:	mov	r3, r1
   15184:	ldrd	r0, [sp, #224]	; 0xe0
   15188:	strd	r2, [sp, #240]	; 0xf0
   1518c:	adds	r0, r0, r6
   15190:	adc	r1, r1, r7
   15194:	mov	sl, r0
   15198:	mov	fp, r1
   1519c:	ldrd	r0, [sp, #136]	; 0x88
   151a0:	strd	sl, [sp, #208]	; 0xd0
   151a4:	ldrd	sl, [sp, #232]	; 0xe8
   151a8:	adds	r0, r0, sl
   151ac:	adc	r1, r1, fp
   151b0:	adds	sl, r8, r4
   151b4:	adc	fp, r9, r5
   151b8:	strd	r0, [sp, #232]	; 0xe8
   151bc:	ldrd	r8, [sp, #208]	; 0xd0
   151c0:	ldrd	r0, [sp, #144]	; 0x90
   151c4:	strd	sl, [sp, #224]	; 0xe0
   151c8:	ldrd	sl, [sp, #152]	; 0x98
   151cc:	eor	r0, r0, r2
   151d0:	eor	r1, r1, r3
   151d4:	eor	sl, sl, r8
   151d8:	eor	fp, fp, r9
   151dc:	mov	r2, r0
   151e0:	mov	r3, r1
   151e4:	mov	r8, sl
   151e8:	ldrd	r0, [sp, #168]	; 0xa8
   151ec:	mov	r9, fp
   151f0:	ldrd	sl, [sp, #232]	; 0xe8
   151f4:	lsr	ip, r2, #24
   151f8:	str	r9, [sp, #152]	; 0x98
   151fc:	eor	r0, r0, sl
   15200:	eor	r1, r1, fp
   15204:	ldrd	sl, [sp, #160]	; 0xa0
   15208:	strd	r0, [sp, #248]	; 0xf8
   1520c:	ldrd	r0, [sp, #224]	; 0xe0
   15210:	str	r8, [sp, #156]	; 0x9c
   15214:	eor	fp, fp, r1
   15218:	orr	r1, ip, r3, lsl #8
   1521c:	eor	sl, sl, r0
   15220:	str	r1, [sp, #144]	; 0x90
   15224:	ldrd	r0, [sp, #248]	; 0xf8
   15228:	str	fp, [sp, #168]	; 0xa8
   1522c:	str	sl, [sp, #172]	; 0xac
   15230:	lsr	r3, r3, #24
   15234:	str	r1, [sp, #184]	; 0xb8
   15238:	ldrd	r8, [sp, #216]	; 0xd8
   1523c:	str	r0, [sp, #188]	; 0xbc
   15240:	ldrd	r0, [sp, #96]	; 0x60
   15244:	orr	r3, r3, r2, lsl #8
   15248:	str	r3, [sp, #148]	; 0x94
   1524c:	add	r3, sp, #256	; 0x100
   15250:	adds	r0, r0, r8
   15254:	adc	r1, r1, r9
   15258:	ldrd	r2, [r3]
   1525c:	ldrd	r8, [sp, #152]	; 0x98
   15260:	ldrd	sl, [sp, #192]	; 0xc0
   15264:	adds	r2, r2, r8
   15268:	adc	r3, r3, r9
   1526c:	ldrd	r8, [sp, #168]	; 0xa8
   15270:	strd	r2, [sp, #248]	; 0xf8
   15274:	adds	sl, sl, r8
   15278:	adc	fp, fp, r9
   1527c:	ldrd	r8, [sp, #200]	; 0xc8
   15280:	strd	sl, [sp, #216]	; 0xd8
   15284:	ldrd	sl, [sp, #184]	; 0xb8
   15288:	adds	sl, sl, r8
   1528c:	adc	fp, fp, r9
   15290:	mov	r8, sl
   15294:	mov	r9, fp
   15298:	ldrd	sl, [sp, #144]	; 0x90
   1529c:	adds	sl, sl, r0
   152a0:	adc	fp, fp, r1
   152a4:	mov	r0, r2
   152a8:	strd	sl, [sp, #200]	; 0xc8
   152ac:	ldrd	sl, [sp, #216]	; 0xd8
   152b0:	mov	r1, r3
   152b4:	add	r3, sp, #256	; 0x100
   152b8:	eor	r0, r0, r6
   152bc:	eor	r1, r1, r7
   152c0:	eor	sl, sl, r4
   152c4:	eor	fp, fp, r5
   152c8:	mov	r6, r0
   152cc:	mov	r7, r1
   152d0:	mov	r4, sl
   152d4:	ldrd	r0, [sp, #136]	; 0x88
   152d8:	mov	r5, fp
   152dc:	strd	r8, [r3]
   152e0:	ldrd	sl, [sp, #200]	; 0xc8
   152e4:	ldrd	r2, [sp, #176]	; 0xb0
   152e8:	eor	r0, r0, r8
   152ec:	eor	r1, r1, r9
   152f0:	eor	r2, r2, sl
   152f4:	ldrd	r8, [sp, #72]	; 0x48
   152f8:	eor	r3, r3, fp
   152fc:	ldrd	sl, [sp, #208]	; 0xd0
   15300:	lsr	ip, r2, #16
   15304:	orr	ip, ip, r3, lsl #16
   15308:	adds	r8, r8, sl
   1530c:	adc	r9, r9, fp
   15310:	add	sl, sp, #264	; 0x108
   15314:	lsr	r3, r3, #16
   15318:	strd	r8, [sl]
   1531c:	ldrd	r8, [sp, #232]	; 0xe8
   15320:	ldrd	sl, [sp, #56]	; 0x38
   15324:	lsr	lr, r6, #24
   15328:	orr	r3, r3, r2, lsl #16
   1532c:	adds	sl, sl, r8
   15330:	adc	fp, fp, r9
   15334:	ldrd	r8, [sp, #8]
   15338:	strd	sl, [sp, #232]	; 0xe8
   1533c:	ldrd	sl, [sp, #224]	; 0xe0
   15340:	str	ip, [sp, #136]	; 0x88
   15344:	str	r3, [sp, #140]	; 0x8c
   15348:	adds	r8, r8, sl
   1534c:	orr	r3, lr, r7, lsl #8
   15350:	adc	r9, r9, fp
   15354:	mov	sl, r8
   15358:	mov	fp, r9
   1535c:	str	r3, [sp, #160]	; 0xa0
   15360:	ldrd	r8, [sp, #136]	; 0x88
   15364:	ldrd	r2, [sp, #240]	; 0xf0
   15368:	lsr	ip, r4, #24
   1536c:	lsr	lr, r0, #24
   15370:	adds	r2, r2, r8
   15374:	adc	r3, r3, r9
   15378:	orr	ip, ip, r5, lsl #8
   1537c:	strd	r2, [sp, #208]	; 0xd0
   15380:	ldrd	r8, [sp, #144]	; 0x90
   15384:	str	ip, [sp, #176]	; 0xb0
   15388:	orr	ip, lr, r1, lsl #8
   1538c:	eor	r9, r9, r3
   15390:	eor	r8, r8, r2
   15394:	str	ip, [sp, #192]	; 0xc0
   15398:	lsl	ip, r9, #1
   1539c:	orr	ip, ip, r8, lsr #31
   153a0:	str	ip, [sp, #148]	; 0x94
   153a4:	lsr	ip, r7, #24
   153a8:	orr	ip, ip, r6, lsl #8
   153ac:	str	ip, [sp, #164]	; 0xa4
   153b0:	add	ip, sp, #264	; 0x108
   153b4:	mov	r2, r8
   153b8:	ldrd	r6, [ip]
   153bc:	lsr	ip, r5, #24
   153c0:	orr	ip, ip, r4, lsl #8
   153c4:	str	ip, [sp, #180]	; 0xb4
   153c8:	mov	r3, r9
   153cc:	ldrd	r8, [sp, #160]	; 0xa0
   153d0:	mov	r4, sl
   153d4:	mov	r5, fp
   153d8:	ldrd	sl, [sp, #176]	; 0xb0
   153dc:	adds	r6, r6, r8
   153e0:	lsr	r1, r1, #24
   153e4:	adc	r7, r7, r9
   153e8:	orr	r1, r1, r0, lsl #8
   153ec:	adds	r4, r4, sl
   153f0:	adc	r5, r5, fp
   153f4:	str	r1, [sp, #196]	; 0xc4
   153f8:	ldrd	r0, [sp, #192]	; 0xc0
   153fc:	mov	sl, r4
   15400:	mov	fp, r5
   15404:	ldrd	r4, [sp, #232]	; 0xe8
   15408:	mov	r8, r6
   1540c:	mov	r9, r7
   15410:	adds	r4, r4, r0
   15414:	adc	r5, r5, r1
   15418:	ldrd	r6, [sp, #152]	; 0x98
   1541c:	mov	r0, r4
   15420:	mov	r1, r5
   15424:	ldrd	r4, [sp, #168]	; 0xa8
   15428:	eor	r6, r6, r8
   1542c:	strd	sl, [sp, #224]	; 0xe0
   15430:	eor	r4, r4, sl
   15434:	eor	r5, r5, fp
   15438:	ldrd	sl, [sp, #184]	; 0xb8
   1543c:	eor	r7, r7, r9
   15440:	lsl	r2, r2, #1
   15444:	lsr	lr, r6, #16
   15448:	orr	r3, r2, r3, lsr #31
   1544c:	eor	fp, fp, r1
   15450:	str	r3, [sp, #144]	; 0x90
   15454:	orr	r3, lr, r7, lsl #16
   15458:	eor	sl, sl, r0
   1545c:	str	r3, [sp, #152]	; 0x98
   15460:	lsr	r3, r7, #16
   15464:	strd	r0, [sp, #232]	; 0xe8
   15468:	orr	r3, r3, r6, lsl #16
   1546c:	lsr	r1, fp, #16
   15470:	str	r3, [sp, #156]	; 0x9c
   15474:	lsr	ip, r4, #16
   15478:	orr	r1, r1, sl, lsl #16
   1547c:	ldrd	r6, [sp, #152]	; 0x98
   15480:	orr	r2, ip, r5, lsl #16
   15484:	str	r1, [sp, #172]	; 0xac
   15488:	lsr	ip, r5, #16
   1548c:	ldrd	r0, [sp, #248]	; 0xf8
   15490:	orr	r3, ip, r4, lsl #16
   15494:	ldrd	r4, [sp, #216]	; 0xd8
   15498:	adds	r0, r0, r6
   1549c:	lsr	lr, sl, #16
   154a0:	adc	r1, r1, r7
   154a4:	adds	r4, r4, r2
   154a8:	orr	ip, lr, fp, lsl #16
   154ac:	mov	r7, r1
   154b0:	adc	r5, r5, r3
   154b4:	add	r1, sp, #256	; 0x100
   154b8:	str	ip, [sp, #168]	; 0xa8
   154bc:	ldrd	sl, [sp, #168]	; 0xa8
   154c0:	strd	r4, [sp, #184]	; 0xb8
   154c4:	ldrd	r4, [r1]
   154c8:	mov	r6, r0
   154cc:	add	ip, sp, #256	; 0x100
   154d0:	adds	sl, sl, r4
   154d4:	adc	fp, fp, r5
   154d8:	mov	r0, sl
   154dc:	mov	r1, fp
   154e0:	ldrd	r4, [sp, #64]	; 0x40
   154e4:	ldrd	sl, [sp, #200]	; 0xc8
   154e8:	adds	r4, r4, sl
   154ec:	adc	r5, r5, fp
   154f0:	strd	r4, [ip]
   154f4:	ldrd	r4, [sp, #40]	; 0x28
   154f8:	adds	r4, r4, r8
   154fc:	adc	r5, r5, r9
   15500:	mov	r8, r4
   15504:	mov	r9, r5
   15508:	ldrd	r4, [sp, #144]	; 0x90
   1550c:	ldrd	sl, [sp, #176]	; 0xb0
   15510:	strd	r6, [sp, #200]	; 0xc8
   15514:	adds	r4, r4, r8
   15518:	adc	r5, r5, r9
   1551c:	ldrd	r8, [sp, #184]	; 0xb8
   15520:	strd	r4, [sp, #216]	; 0xd8
   15524:	eor	r4, r4, r2
   15528:	eor	sl, sl, r8
   1552c:	eor	fp, fp, r9
   15530:	eor	r5, r5, r3
   15534:	mov	r2, sl
   15538:	mov	r3, fp
   1553c:	ldrd	sl, [sp, #160]	; 0xa0
   15540:	strd	r2, [sp, #176]	; 0xb0
   15544:	mov	r8, r5
   15548:	eor	sl, sl, r6
   1554c:	eor	fp, fp, r7
   15550:	mov	r6, sl
   15554:	mov	r7, fp
   15558:	ldrd	sl, [sp, #192]	; 0xc0
   1555c:	mov	r9, r4
   15560:	adds	r2, r0, r8
   15564:	eor	sl, sl, r0
   15568:	eor	fp, fp, r1
   1556c:	mov	r4, sl
   15570:	mov	r5, fp
   15574:	ldrd	sl, [sp, #176]	; 0xb0
   15578:	lsl	ip, r3, #1
   1557c:	adc	r3, r1, r9
   15580:	orr	r1, ip, sl, lsr #31
   15584:	str	r1, [sp, #164]	; 0xa4
   15588:	ldrd	r0, [sp, #144]	; 0x90
   1558c:	strd	r2, [sp, #240]	; 0xf0
   15590:	lsl	ip, sl, #1
   15594:	eor	r0, r0, r2
   15598:	eor	r1, r1, r3
   1559c:	ldrd	r2, [sp, #232]	; 0xe8
   155a0:	strd	r0, [sp, #176]	; 0xb0
   155a4:	ldrd	r0, [sp, #72]	; 0x48
   155a8:	lsl	lr, r5, #1
   155ac:	adds	r0, r0, r2
   155b0:	adc	r1, r1, r3
   155b4:	orr	r3, ip, fp, lsr #31
   155b8:	str	r3, [sp, #160]	; 0xa0
   155bc:	ldrd	sl, [sp, #160]	; 0xa0
   155c0:	lsl	r3, r7, #1
   155c4:	orr	r3, r3, r6, lsr #31
   155c8:	adds	sl, sl, r0
   155cc:	adc	fp, fp, r1
   155d0:	str	r3, [sp, #148]	; 0x94
   155d4:	ldrd	r0, [sp, #88]	; 0x58
   155d8:	ldrd	r2, [sp, #224]	; 0xe0
   155dc:	lsl	ip, r6, #1
   155e0:	strd	sl, [sp, #232]	; 0xe8
   155e4:	adds	r0, r0, r2
   155e8:	adc	r1, r1, r3
   155ec:	strd	r0, [sp, #224]	; 0xe0
   155f0:	ldrd	r0, [sp, #136]	; 0x88
   155f4:	eor	r1, r1, fp
   155f8:	mov	r3, r1
   155fc:	orr	r1, ip, r7, lsr #31
   15600:	str	r1, [sp, #144]	; 0x90
   15604:	ldr	r1, [sp, #176]	; 0xb0
   15608:	eor	r0, r0, sl
   1560c:	ldrd	r6, [sp, #48]	; 0x30
   15610:	lsr	ip, r1, #24
   15614:	orr	r1, lr, r4, lsr #31
   15618:	mov	r2, r0
   1561c:	str	r1, [sp, #140]	; 0x8c
   15620:	ldrd	r0, [sp, #216]	; 0xd8
   15624:	ldrd	sl, [sp, #144]	; 0x90
   15628:	lsl	lr, r4, #1
   1562c:	adds	r6, r6, r0
   15630:	adc	r7, r7, r1
   15634:	ldrd	r0, [sp, #224]	; 0xe0
   15638:	strd	r6, [sp, #192]	; 0xc0
   1563c:	adds	sl, sl, r0
   15640:	adc	fp, fp, r1
   15644:	orr	r1, lr, r5, lsr #31
   15648:	str	r1, [sp, #136]	; 0x88
   1564c:	ldrd	r6, [sp, #176]	; 0xb0
   15650:	strd	sl, [sp, #248]	; 0xf8
   15654:	str	r3, [sp, #176]	; 0xb0
   15658:	lsr	r1, r7, #24
   1565c:	orr	r5, r1, r6, lsl #8
   15660:	ldrd	r0, [sp, #168]	; 0xa8
   15664:	orr	r4, ip, r7, lsl #8
   15668:	add	ip, sp, #256	; 0x100
   1566c:	ldrd	r6, [sp, #136]	; 0x88
   15670:	eor	r0, r0, sl
   15674:	eor	r1, r1, fp
   15678:	ldrd	sl, [ip]
   1567c:	str	r2, [sp, #180]	; 0xb4
   15680:	ldrd	r2, [sp, #160]	; 0xa0
   15684:	adds	sl, sl, r6
   15688:	adc	fp, fp, r7
   1568c:	ldrd	r6, [sp, #192]	; 0xc0
   15690:	strd	sl, [sp, #224]	; 0xe0
   15694:	adds	r6, r6, r4
   15698:	adc	r7, r7, r5
   1569c:	strd	r6, [sp, #216]	; 0xd8
   156a0:	ldrd	r6, [sp, #152]	; 0x98
   156a4:	eor	r6, r6, sl
   156a8:	eor	r7, r7, fp
   156ac:	strd	r6, [sp, #168]	; 0xa8
   156b0:	ldrd	r6, [sp, #216]	; 0xd8
   156b4:	eor	r6, r6, r8
   156b8:	eor	r7, r7, r9
   156bc:	mov	sl, r6
   156c0:	ldrd	r8, [sp, #176]	; 0xb0
   156c4:	mov	fp, r7
   156c8:	ldrd	r6, [sp, #200]	; 0xc8
   156cc:	lsr	lr, fp, #16
   156d0:	adds	r6, r6, r8
   156d4:	adc	r7, r7, r9
   156d8:	mov	r8, r1
   156dc:	mov	r9, r0
   156e0:	ldrd	r0, [sp, #208]	; 0xd0
   156e4:	eor	r3, r3, r7
   156e8:	strd	r6, [ip]
   156ec:	eor	r2, r2, r6
   156f0:	mov	r7, r3
   156f4:	ldr	r3, [sp, #172]	; 0xac
   156f8:	adds	r0, r0, r8
   156fc:	mov	r6, r2
   15700:	ldr	r2, [sp, #168]	; 0xa8
   15704:	str	r3, [sp, #152]	; 0x98
   15708:	adc	r1, r1, r9
   1570c:	lsr	r3, sl, #16
   15710:	str	r2, [sp, #156]	; 0x9c
   15714:	orr	r3, r3, fp, lsl #16
   15718:	strd	r0, [sp, #200]	; 0xc8
   1571c:	str	r3, [sp, #160]	; 0xa0
   15720:	ldrd	r0, [sp, #152]	; 0x98
   15724:	ldrd	r2, [sp, #184]	; 0xb8
   15728:	lsr	ip, r6, #24
   1572c:	adds	r2, r2, r0
   15730:	adc	r3, r3, r1
   15734:	ldrd	r0, [sp, #144]	; 0x90
   15738:	strd	r2, [sp, #208]	; 0xd0
   1573c:	ldrd	r2, [sp, #200]	; 0xc8
   15740:	eor	r0, r0, r2
   15744:	eor	r1, r1, r3
   15748:	orr	r3, lr, sl, lsl #16
   1574c:	strd	r0, [sp, #192]	; 0xc0
   15750:	str	r3, [sp, #164]	; 0xa4
   15754:	ldrd	r0, [sp, #136]	; 0x88
   15758:	ldrd	r2, [sp, #208]	; 0xd0
   1575c:	ldrd	sl, [sp, #232]	; 0xe8
   15760:	eor	r0, r0, r2
   15764:	eor	r1, r1, r3
   15768:	ldrd	r2, [sp, #128]	; 0x80
   1576c:	strd	r0, [sp, #136]	; 0x88
   15770:	ldrd	r0, [sp, #160]	; 0xa0
   15774:	adds	r2, r2, sl
   15778:	adc	r3, r3, fp
   1577c:	mov	sl, r2
   15780:	mov	fp, r3
   15784:	ldrd	r2, [sp, #240]	; 0xf0
   15788:	adds	r2, r2, r0
   1578c:	adc	r3, r3, r1
   15790:	orr	r1, ip, r7, lsl #8
   15794:	strd	r2, [sp, #232]	; 0xe8
   15798:	lsr	ip, r7, #24
   1579c:	eor	r3, r3, r5
   157a0:	mov	r5, r3
   157a4:	orr	r3, ip, r6, lsl #8
   157a8:	str	r1, [sp, #184]	; 0xb8
   157ac:	str	r3, [sp, #188]	; 0xbc
   157b0:	ldrd	r6, [sp, #184]	; 0xb8
   157b4:	ldr	r3, [sp, #192]	; 0xc0
   157b8:	eor	r2, r2, r4
   157bc:	adds	r6, r6, sl
   157c0:	adc	r7, r7, fp
   157c4:	mov	r4, r2
   157c8:	ldrd	sl, [sp, #32]
   157cc:	mov	r2, r6
   157d0:	lsr	ip, r3, #24
   157d4:	mov	r3, r7
   157d8:	ldrd	r6, [sp, #248]	; 0xf8
   157dc:	strd	r2, [sp, #240]	; 0xf0
   157e0:	ldrd	r0, [sp, #136]	; 0x88
   157e4:	adds	sl, sl, r6
   157e8:	adc	fp, fp, r7
   157ec:	lsl	lr, r4, #1
   157f0:	strd	sl, [sp, #248]	; 0xf8
   157f4:	ldrd	sl, [sp, #176]	; 0xb0
   157f8:	eor	fp, fp, r3
   157fc:	ldr	r3, [sp, #196]	; 0xc4
   15800:	eor	sl, sl, r2
   15804:	mov	r6, sl
   15808:	orr	r3, ip, r3, lsl #8
   1580c:	mov	r7, fp
   15810:	str	r3, [sp, #168]	; 0xa8
   15814:	ldrd	sl, [sp, #8]
   15818:	ldrd	r2, [sp, #224]	; 0xe0
   1581c:	lsl	ip, r5, #1
   15820:	adds	sl, sl, r2
   15824:	adc	fp, fp, r3
   15828:	orr	r3, ip, r4, lsr #31
   1582c:	str	r3, [sp, #148]	; 0x94
   15830:	lsr	ip, r0, #24
   15834:	orr	r3, lr, r5, lsr #31
   15838:	mov	r4, r0
   1583c:	str	r3, [sp, #144]	; 0x90
   15840:	orr	r3, ip, r1, lsl #8
   15844:	lsr	r1, r1, #24
   15848:	str	r3, [sp, #136]	; 0x88
   1584c:	orr	r3, r1, r4, lsl #8
   15850:	ldrd	r0, [sp, #192]	; 0xc0
   15854:	str	r3, [sp, #140]	; 0x8c
   15858:	ldrd	r4, [sp, #248]	; 0xf8
   1585c:	lsr	r3, r1, #24
   15860:	orr	r3, r3, r0, lsl #8
   15864:	str	r3, [sp, #172]	; 0xac
   15868:	ldrd	r0, [sp, #168]	; 0xa8
   1586c:	lsr	ip, r6, #16
   15870:	orr	ip, ip, r7, lsl #16
   15874:	adds	r4, r4, r0
   15878:	adc	r5, r5, r1
   1587c:	ldrd	r0, [sp, #136]	; 0x88
   15880:	strd	r4, [sp, #224]	; 0xe0
   15884:	ldrd	r2, [sp, #120]	; 0x78
   15888:	eor	r4, r4, r8
   1588c:	eor	r5, r5, r9
   15890:	ldrd	r8, [sp, #144]	; 0x90
   15894:	str	ip, [sp, #192]	; 0xc0
   15898:	lsr	ip, r7, #16
   1589c:	adds	r0, r0, sl
   158a0:	orr	ip, ip, r6, lsl #16
   158a4:	mov	sl, r0
   158a8:	str	ip, [sp, #196]	; 0xc4
   158ac:	adc	r1, r1, fp
   158b0:	lsr	ip, r4, #16
   158b4:	mov	fp, r1
   158b8:	adds	r2, r2, sl
   158bc:	mov	r0, r4
   158c0:	orr	ip, ip, r5, lsl #16
   158c4:	mov	r1, r5
   158c8:	ldrd	r4, [sp, #192]	; 0xc0
   158cc:	adc	r3, r3, fp
   158d0:	adds	r8, r8, r2
   158d4:	adc	r9, r9, r3
   158d8:	lsr	r1, r1, #16
   158dc:	mov	r2, r8
   158e0:	mov	r3, r9
   158e4:	eor	r4, r4, r8
   158e8:	eor	r5, r5, r9
   158ec:	orr	r1, r1, r0, lsl #16
   158f0:	ldrd	r8, [sp, #152]	; 0x98
   158f4:	str	ip, [sp, #176]	; 0xb0
   158f8:	str	r1, [sp, #180]	; 0xb4
   158fc:	ldrd	r0, [sp, #176]	; 0xb0
   15900:	mov	r6, r4
   15904:	mov	r7, r5
   15908:	ldrd	r4, [sp, #200]	; 0xc8
   1590c:	eor	r8, r8, sl
   15910:	eor	r9, r9, fp
   15914:	mov	sl, r8
   15918:	mov	fp, r9
   1591c:	ldrd	r8, [sp, #168]	; 0xa8
   15920:	adds	r0, r0, r4
   15924:	adc	r1, r1, r5
   15928:	str	r7, [sp, #200]	; 0xc8
   1592c:	str	r6, [sp, #204]	; 0xcc
   15930:	eor	r8, r8, r0
   15934:	eor	r9, r9, r1
   15938:	mov	r4, r0
   1593c:	mov	r5, r1
   15940:	mov	r0, r8
   15944:	mov	r1, r9
   15948:	ldrd	r8, [sp, #200]	; 0xc8
   1594c:	ldrd	r6, [sp, #16]
   15950:	lsr	ip, sl, #16
   15954:	adds	r8, r8, r4
   15958:	adc	r9, r9, r5
   1595c:	ldrd	r4, [sp, #144]	; 0x90
   15960:	orr	ip, ip, fp, lsl #16
   15964:	adds	r6, r6, r2
   15968:	str	ip, [sp, #144]	; 0x90
   1596c:	lsr	ip, fp, #16
   15970:	eor	r4, r4, r8
   15974:	eor	r5, r5, r9
   15978:	adc	r7, r7, r3
   1597c:	strd	r8, [sp, #248]	; 0xf8
   15980:	orr	r3, ip, sl, lsl #16
   15984:	ldrd	r8, [sp, #80]	; 0x50
   15988:	ldrd	sl, [sp, #216]	; 0xd8
   1598c:	str	r3, [sp, #148]	; 0x94
   15990:	lsr	ip, r5, #24
   15994:	adds	r8, r8, sl
   15998:	adc	r9, r9, fp
   1599c:	ldrd	sl, [sp, #208]	; 0xd0
   159a0:	strd	r8, [sp, #168]	; 0xa8
   159a4:	ldrd	r8, [sp, #144]	; 0x90
   159a8:	lsr	r3, r4, #24
   159ac:	orr	r3, r3, r5, lsl #8
   159b0:	adds	sl, sl, r8
   159b4:	adc	fp, fp, r9
   159b8:	ldrd	r8, [sp, #136]	; 0x88
   159bc:	orr	ip, ip, r4, lsl #8
   159c0:	str	r3, [sp, #152]	; 0x98
   159c4:	str	ip, [sp, #156]	; 0x9c
   159c8:	eor	r8, r8, sl
   159cc:	eor	r9, r9, fp
   159d0:	strd	sl, [sp, #216]	; 0xd8
   159d4:	ldrd	sl, [sp, #152]	; 0x98
   159d8:	ldrd	r4, [sp, #200]	; 0xc8
   159dc:	add	ip, sp, #264	; 0x108
   159e0:	adds	sl, sl, r6
   159e4:	adc	fp, fp, r7
   159e8:	eor	r5, r5, fp
   159ec:	strd	sl, [ip]
   159f0:	lsl	ip, r1, #1
   159f4:	orr	fp, ip, r0, lsr #31
   159f8:	lsl	ip, r9, #1
   159fc:	orr	r7, ip, r8, lsr #31
   15a00:	eor	r4, r4, sl
   15a04:	add	ip, sp, #256	; 0x100
   15a08:	mov	r3, r9
   15a0c:	lsl	r2, r8, #1
   15a10:	strd	r4, [sp, #136]	; 0x88
   15a14:	ldrd	r8, [ip]
   15a18:	lsl	r0, r0, #1
   15a1c:	ldrd	r4, [sp, #192]	; 0xc0
   15a20:	orr	sl, r0, r1, lsr #31
   15a24:	ldrd	r0, [sp, #168]	; 0xa8
   15a28:	adds	r8, r8, r4
   15a2c:	adc	r9, r9, r5
   15a30:	adds	r0, r0, sl
   15a34:	ldrd	r4, [sp, #144]	; 0x90
   15a38:	adc	r1, r1, fp
   15a3c:	ldr	ip, [sp, #136]	; 0x88
   15a40:	orr	r6, r2, r3, lsr #31
   15a44:	ldr	r3, [sp, #140]	; 0x8c
   15a48:	strd	r0, [sp, #192]	; 0xc0
   15a4c:	eor	r4, r4, r0
   15a50:	eor	r5, r5, r1
   15a54:	ldrd	r0, [sp, #136]	; 0x88
   15a58:	lsr	ip, ip, #16
   15a5c:	orr	r3, ip, r3, lsl #16
   15a60:	str	r3, [sp, #144]	; 0x90
   15a64:	lsr	r3, r1, #16
   15a68:	orr	r3, r3, r0, lsl #16
   15a6c:	str	r3, [sp, #148]	; 0x94
   15a70:	ldrd	r0, [sp, #144]	; 0x90
   15a74:	str	r5, [sp, #168]	; 0xa8
   15a78:	str	r4, [sp, #172]	; 0xac
   15a7c:	ldrd	r4, [sp, #248]	; 0xf8
   15a80:	adds	r4, r4, r0
   15a84:	adc	r5, r5, r1
   15a88:	ldrd	r0, [sp, #240]	; 0xf0
   15a8c:	strd	r4, [sp, #200]	; 0xc8
   15a90:	ldrd	r4, [sp, #168]	; 0xa8
   15a94:	adds	r2, r8, r4
   15a98:	adc	r3, r9, r5
   15a9c:	ldrd	r4, [sp, #24]
   15aa0:	strd	r2, [sp, #208]	; 0xd0
   15aa4:	ldrd	r2, [sp, #184]	; 0xb8
   15aa8:	adds	r4, r4, r0
   15aac:	adc	r5, r5, r1
   15ab0:	eor	r3, r3, r9
   15ab4:	eor	r2, r2, r8
   15ab8:	lsl	ip, r3, #1
   15abc:	adds	r0, r4, r6
   15ac0:	orr	ip, ip, r2, lsr #31
   15ac4:	lsl	r2, r2, #1
   15ac8:	adc	r1, r5, r7
   15acc:	orr	r3, r2, r3, lsr #31
   15ad0:	ldrd	r4, [sp, #176]	; 0xb0
   15ad4:	str	r3, [sp, #136]	; 0x88
   15ad8:	ldrd	r2, [sp, #232]	; 0xe8
   15adc:	eor	r5, r5, r1
   15ae0:	eor	r4, r4, r0
   15ae4:	adds	r2, r2, r5
   15ae8:	adc	r3, r3, r4
   15aec:	mov	r8, r5
   15af0:	strd	r2, [sp, #232]	; 0xe8
   15af4:	eor	r2, r2, r6
   15af8:	eor	r3, r3, r7
   15afc:	mov	r5, r3
   15b00:	ldrd	r6, [sp, #224]	; 0xe0
   15b04:	mov	r9, r4
   15b08:	mov	r4, r2
   15b0c:	ldrd	r2, [sp, #96]	; 0x60
   15b10:	str	ip, [sp, #140]	; 0x8c
   15b14:	lsr	ip, r4, #24
   15b18:	adds	r2, r2, r6
   15b1c:	adc	r3, r3, r7
   15b20:	ldrd	r6, [sp, #136]	; 0x88
   15b24:	orr	ip, ip, r5, lsl #8
   15b28:	str	ip, [sp, #184]	; 0xb8
   15b2c:	adds	r6, r6, r2
   15b30:	adc	r7, r7, r3
   15b34:	mov	r2, r6
   15b38:	mov	r3, r7
   15b3c:	ldrd	r6, [sp, #160]	; 0xa0
   15b40:	lsr	ip, r5, #24
   15b44:	orr	ip, ip, r4, lsl #8
   15b48:	eor	r6, r6, r2
   15b4c:	eor	r7, r7, r3
   15b50:	str	ip, [sp, #188]	; 0xbc
   15b54:	strd	r6, [sp, #160]	; 0xa0
   15b58:	ldrd	r6, [sp, #112]	; 0x70
   15b5c:	ldrd	r4, [sp, #160]	; 0xa0
   15b60:	adds	r6, r6, r0
   15b64:	adc	r7, r7, r1
   15b68:	mov	r0, r6
   15b6c:	mov	r1, r7
   15b70:	ldrd	r6, [sp, #184]	; 0xb8
   15b74:	str	r5, [sp, #176]	; 0xb0
   15b78:	str	r4, [sp, #180]	; 0xb4
   15b7c:	adds	r6, r6, r0
   15b80:	adc	r7, r7, r1
   15b84:	mov	r0, r6
   15b88:	mov	r1, r7
   15b8c:	ldrd	r6, [sp, #208]	; 0xd0
   15b90:	ldrd	r4, [sp, #216]	; 0xd8
   15b94:	strd	r0, [sp, #240]	; 0xf0
   15b98:	eor	r6, r6, sl
   15b9c:	eor	r7, r7, fp
   15ba0:	ldrd	sl, [sp, #176]	; 0xb0
   15ba4:	lsr	lr, r6, #24
   15ba8:	adds	r4, r4, sl
   15bac:	adc	r5, r5, fp
   15bb0:	mov	sl, r4
   15bb4:	mov	fp, r5
   15bb8:	mov	r4, r0
   15bbc:	mov	r5, r1
   15bc0:	ldrd	r0, [sp, #136]	; 0x88
   15bc4:	eor	r4, r4, r8
   15bc8:	eor	r5, r5, r9
   15bcc:	eor	r0, r0, sl
   15bd0:	ldrd	r8, [sp, #104]	; 0x68
   15bd4:	strd	sl, [sp, #224]	; 0xe0
   15bd8:	eor	r1, r1, fp
   15bdc:	ldrd	sl, [sp, #192]	; 0xc0
   15be0:	lsr	ip, r4, #16
   15be4:	orr	ip, ip, r5, lsl #16
   15be8:	adds	r8, r8, sl
   15bec:	adc	r9, r9, fp
   15bf0:	ldrd	sl, [sp, #56]	; 0x38
   15bf4:	str	ip, [sp, #192]	; 0xc0
   15bf8:	lsr	ip, r7, #24
   15bfc:	adds	sl, sl, r2
   15c00:	adc	fp, fp, r3
   15c04:	orr	r3, lr, r7, lsl #8
   15c08:	strd	sl, [sp, #136]	; 0x88
   15c0c:	str	r3, [sp, #160]	; 0xa0
   15c10:	ldrd	sl, [sp, #152]	; 0x98
   15c14:	ldrd	r2, [sp, #200]	; 0xc8
   15c18:	orr	ip, ip, r6, lsl #8
   15c1c:	str	ip, [sp, #164]	; 0xa4
   15c20:	eor	sl, sl, r2
   15c24:	eor	fp, fp, r3
   15c28:	mov	r2, sl
   15c2c:	mov	r3, fp
   15c30:	ldrd	sl, [sp, #160]	; 0xa0
   15c34:	lsr	ip, r0, #24
   15c38:	orr	ip, ip, r1, lsl #8
   15c3c:	adds	sl, sl, r8
   15c40:	adc	fp, fp, r9
   15c44:	ldrd	r8, [sp, #168]	; 0xa8
   15c48:	str	ip, [sp, #168]	; 0xa8
   15c4c:	lsr	ip, r5, #16
   15c50:	mov	r6, sl
   15c54:	mov	r7, fp
   15c58:	orr	ip, ip, r4, lsl #16
   15c5c:	str	ip, [sp, #196]	; 0xc4
   15c60:	strd	r6, [sp, #152]	; 0x98
   15c64:	ldrd	r4, [sp, #232]	; 0xe8
   15c68:	eor	r6, r6, r8
   15c6c:	eor	r7, r7, r9
   15c70:	ldrd	r8, [sp, #192]	; 0xc0
   15c74:	lsr	r1, r1, #24
   15c78:	orr	r1, r1, r0, lsl #8
   15c7c:	adds	r4, r4, r8
   15c80:	adc	r5, r5, r9
   15c84:	ldrd	r8, [sp, #184]	; 0xb8
   15c88:	str	r1, [sp, #172]	; 0xac
   15c8c:	strd	r4, [sp, #248]	; 0xf8
   15c90:	eor	r8, r8, r4
   15c94:	eor	r9, r9, r5
   15c98:	mov	r4, r8
   15c9c:	mov	r5, r9
   15ca0:	ldrd	r0, [sp, #136]	; 0x88
   15ca4:	ldrd	r8, [sp, #168]	; 0xa8
   15ca8:	lsl	lr, r3, #1
   15cac:	lsr	ip, r6, #16
   15cb0:	adds	r0, r0, r8
   15cb4:	adc	r1, r1, r9
   15cb8:	mov	r8, r0
   15cbc:	mov	r9, r1
   15cc0:	ldrd	r0, [sp, #176]	; 0xb0
   15cc4:	strd	r8, [sp, #232]	; 0xe8
   15cc8:	orr	sl, ip, r7, lsl #16
   15ccc:	eor	r1, r1, r9
   15cd0:	orr	r9, lr, r2, lsr #31
   15cd4:	lsl	r2, r2, #1
   15cd8:	orr	r3, r2, r3, lsr #31
   15cdc:	str	r3, [sp, #136]	; 0x88
   15ce0:	add	r3, sp, #264	; 0x108
   15ce4:	str	r9, [sp, #140]	; 0x8c
   15ce8:	ldrd	r2, [r3]
   15cec:	eor	r0, r0, r8
   15cf0:	ldrd	r8, [sp, #88]	; 0x58
   15cf4:	lsl	lr, r5, #1
   15cf8:	lsr	ip, r7, #16
   15cfc:	adds	r8, r8, r2
   15d00:	adc	r9, r9, r3
   15d04:	add	r3, sp, #256	; 0x100
   15d08:	orr	fp, ip, r6, lsl #16
   15d0c:	strd	r8, [r3]
   15d10:	ldrd	r8, [sp, #96]	; 0x60
   15d14:	ldrd	r2, [sp, #152]	; 0x98
   15d18:	ldrd	r6, [sp, #208]	; 0xd0
   15d1c:	lsr	ip, r0, #16
   15d20:	adds	r2, r2, r8
   15d24:	adc	r3, r3, r9
   15d28:	mov	r9, r3
   15d2c:	orr	r3, lr, r4, lsr #31
   15d30:	str	r3, [sp, #180]	; 0xb4
   15d34:	mov	r8, r2
   15d38:	ldrd	r2, [sp, #136]	; 0x88
   15d3c:	adds	r2, r2, r8
   15d40:	adc	r3, r3, r9
   15d44:	mov	r8, r2
   15d48:	mov	r9, r3
   15d4c:	ldrd	r2, [sp, #160]	; 0xa0
   15d50:	adds	r6, r6, sl
   15d54:	adc	r7, r7, fp
   15d58:	eor	r2, r2, r6
   15d5c:	eor	r3, r3, r7
   15d60:	strd	r6, [sp, #216]	; 0xd8
   15d64:	orr	r6, ip, r1, lsl #16
   15d68:	lsl	ip, r4, #1
   15d6c:	strd	r2, [sp, #184]	; 0xb8
   15d70:	orr	r3, ip, r5, lsr #31
   15d74:	str	r3, [sp, #176]	; 0xb0
   15d78:	add	r3, sp, #256	; 0x100
   15d7c:	lsr	r1, r1, #16
   15d80:	ldrd	r4, [r3]
   15d84:	ldrd	r2, [sp, #176]	; 0xb0
   15d88:	orr	r7, r1, r0, lsl #16
   15d8c:	eor	r1, r7, r9
   15d90:	adds	r4, r4, r2
   15d94:	adc	r5, r5, r3
   15d98:	eor	r0, r6, r8
   15d9c:	strd	r4, [sp, #208]	; 0xd0
   15da0:	eor	r4, r4, sl
   15da4:	eor	r5, r5, fp
   15da8:	mov	sl, r4
   15dac:	mov	fp, r5
   15db0:	ldrd	r4, [sp, #224]	; 0xe0
   15db4:	ldr	r3, [sp, #188]	; 0xbc
   15db8:	str	fp, [sp, #160]	; 0xa0
   15dbc:	adds	r4, r4, r6
   15dc0:	adc	r5, r5, r7
   15dc4:	mov	r6, r4
   15dc8:	mov	r7, r5
   15dcc:	mov	r4, r1
   15dd0:	mov	r5, r0
   15dd4:	ldrd	r0, [sp, #184]	; 0xb8
   15dd8:	lsl	ip, r3, #1
   15ddc:	str	sl, [sp, #164]	; 0xa4
   15de0:	orr	r3, ip, r0, lsr #31
   15de4:	lsl	r2, r0, #1
   15de8:	ldrd	sl, [sp, #248]	; 0xf8
   15dec:	str	r3, [sp, #156]	; 0x9c
   15df0:	orr	r3, r2, r1, lsr #31
   15df4:	str	r3, [sp, #152]	; 0x98
   15df8:	ldrd	r0, [sp, #232]	; 0xe8
   15dfc:	ldrd	r2, [sp, #8]
   15e00:	adds	sl, sl, r4
   15e04:	adc	fp, fp, r5
   15e08:	adds	r2, r2, r0
   15e0c:	adc	r3, r3, r1
   15e10:	ldrd	r0, [sp, #136]	; 0x88
   15e14:	strd	sl, [sp, #248]	; 0xf8
   15e18:	strd	r2, [sp, #232]	; 0xe8
   15e1c:	eor	r0, r0, sl
   15e20:	eor	r1, r1, fp
   15e24:	mov	sl, r0
   15e28:	mov	fp, r1
   15e2c:	ldrd	r0, [sp, #160]	; 0xa0
   15e30:	ldrd	r2, [sp, #176]	; 0xb0
   15e34:	lsr	lr, sl, #24
   15e38:	adds	r0, r0, r6
   15e3c:	adc	r1, r1, r7
   15e40:	eor	r2, r2, r0
   15e44:	eor	r3, r3, r1
   15e48:	strd	r0, [sp, #224]	; 0xe0
   15e4c:	strd	r2, [sp, #184]	; 0xb8
   15e50:	ldrd	r0, [sp, #152]	; 0x98
   15e54:	ldrd	r2, [sp, #232]	; 0xe8
   15e58:	adds	r2, r2, r0
   15e5c:	adc	r3, r3, r1
   15e60:	ldrd	r0, [sp, #192]	; 0xc0
   15e64:	strd	r2, [sp, #192]	; 0xc0
   15e68:	eor	r1, r1, r3
   15e6c:	mov	r3, r1
   15e70:	ldr	r1, [sp, #184]	; 0xb8
   15e74:	eor	r0, r0, r2
   15e78:	mov	r2, r0
   15e7c:	lsr	ip, r1, #24
   15e80:	ldrd	r0, [sp, #72]	; 0x48
   15e84:	adds	r0, r0, r8
   15e88:	adc	r1, r1, r9
   15e8c:	ldrd	r8, [sp, #104]	; 0x68
   15e90:	strd	r0, [sp, #232]	; 0xe8
   15e94:	ldrd	r0, [sp, #208]	; 0xd0
   15e98:	adds	r8, r8, r0
   15e9c:	adc	r9, r9, r1
   15ea0:	orr	r1, lr, fp, lsl #8
   15ea4:	str	r1, [sp, #176]	; 0xb0
   15ea8:	ldr	r1, [sp, #188]	; 0xbc
   15eac:	orr	r1, ip, r1, lsl #8
   15eb0:	str	r1, [sp, #136]	; 0x88
   15eb4:	ldrd	r0, [sp, #168]	; 0xa8
   15eb8:	str	r3, [sp, #168]	; 0xa8
   15ebc:	str	r2, [sp, #172]	; 0xac
   15ec0:	eor	r0, r0, r6
   15ec4:	eor	r1, r1, r7
   15ec8:	ldrd	r2, [sp, #200]	; 0xc8
   15ecc:	mov	r7, r1
   15ed0:	mov	r6, r0
   15ed4:	ldrd	r0, [sp, #168]	; 0xa8
   15ed8:	add	ip, sp, #264	; 0x108
   15edc:	adds	r2, r2, r0
   15ee0:	adc	r3, r3, r1
   15ee4:	ldrd	r0, [sp, #152]	; 0x98
   15ee8:	strd	r2, [ip]
   15eec:	lsr	ip, fp, #24
   15ef0:	eor	r0, r0, r2
   15ef4:	eor	r1, r1, r3
   15ef8:	orr	r3, ip, sl, lsl #8
   15efc:	str	r3, [sp, #180]	; 0xb4
   15f00:	ldrd	sl, [sp, #176]	; 0xb0
   15f04:	strd	r0, [sp, #200]	; 0xc8
   15f08:	ldrd	r0, [sp, #232]	; 0xe8
   15f0c:	ldrd	r2, [sp, #184]	; 0xb8
   15f10:	lsl	ip, r7, #1
   15f14:	adds	r0, r0, sl
   15f18:	adc	r1, r1, fp
   15f1c:	mov	fp, r1
   15f20:	lsr	r1, r3, #24
   15f24:	orr	r3, r1, r2, lsl #8
   15f28:	str	r3, [sp, #140]	; 0x8c
   15f2c:	mov	sl, r0
   15f30:	mov	r1, r9
   15f34:	mov	r0, r8
   15f38:	ldrd	r8, [sp, #136]	; 0x88
   15f3c:	add	r3, sp, #256	; 0x100
   15f40:	adds	r0, r0, r8
   15f44:	mov	r8, sl
   15f48:	adc	r1, r1, r9
   15f4c:	eor	r8, r8, r4
   15f50:	mov	r9, fp
   15f54:	eor	r9, r9, r5
   15f58:	mov	r5, r9
   15f5c:	strd	sl, [r3]
   15f60:	mov	r4, r8
   15f64:	ldrd	r2, [sp, #192]	; 0xc0
   15f68:	ldrd	sl, [sp, #160]	; 0xa0
   15f6c:	lsr	lr, r8, #16
   15f70:	ldrd	r8, [sp, #80]	; 0x50
   15f74:	eor	sl, sl, r0
   15f78:	eor	fp, fp, r1
   15f7c:	adds	r8, r8, r2
   15f80:	strd	r0, [sp, #232]	; 0xe8
   15f84:	adc	r9, r9, r3
   15f88:	mov	r1, fp
   15f8c:	orr	r3, lr, r5, lsl #16
   15f90:	lsr	lr, r5, #16
   15f94:	str	r3, [sp, #160]	; 0xa0
   15f98:	orr	fp, ip, r6, lsr #31
   15f9c:	orr	r3, lr, r4, lsl #16
   15fa0:	lsr	ip, sl, #16
   15fa4:	str	r3, [sp, #164]	; 0xa4
   15fa8:	lsl	r6, r6, #1
   15fac:	orr	r3, ip, r1, lsl #16
   15fb0:	str	r3, [sp, #152]	; 0x98
   15fb4:	ldrd	r4, [sp, #248]	; 0xf8
   15fb8:	ldrd	r2, [sp, #160]	; 0xa0
   15fbc:	mov	r0, sl
   15fc0:	orr	sl, r6, r7, lsr #31
   15fc4:	ldrd	r6, [sp, #200]	; 0xc8
   15fc8:	adds	r4, r4, r2
   15fcc:	adc	r5, r5, r3
   15fd0:	lsr	ip, r6, #24
   15fd4:	orr	r3, ip, r7, lsl #8
   15fd8:	lsr	r1, r1, #16
   15fdc:	str	r3, [sp, #184]	; 0xb8
   15fe0:	orr	r3, r1, r0, lsl #16
   15fe4:	str	r3, [sp, #156]	; 0x9c
   15fe8:	ldrd	r2, [sp, #152]	; 0x98
   15fec:	strd	r4, [sp, #208]	; 0xd0
   15ff0:	ldrd	r4, [sp, #224]	; 0xe0
   15ff4:	ldrd	r0, [sp, #56]	; 0x38
   15ff8:	adds	r4, r4, r2
   15ffc:	adc	r5, r5, r3
   16000:	lsr	r3, r7, #24
   16004:	orr	r3, r3, r6, lsl #8
   16008:	str	r3, [sp, #188]	; 0xbc
   1600c:	ldrd	r2, [sp, #184]	; 0xb8
   16010:	strd	r4, [sp, #200]	; 0xc8
   16014:	ldrd	r4, [sp, #240]	; 0xf0
   16018:	adds	r2, r2, r8
   1601c:	adc	r3, r3, r9
   16020:	adds	r0, r0, r4
   16024:	adc	r1, r1, r5
   16028:	ldrd	r4, [sp, #144]	; 0x90
   1602c:	adds	r0, r0, sl
   16030:	ldrd	r6, [sp, #216]	; 0xd8
   16034:	adc	r1, r1, fp
   16038:	eor	r5, r5, r1
   1603c:	adds	r6, r6, r5
   16040:	eor	r4, r4, r0
   16044:	adc	r7, r7, r4
   16048:	strd	r2, [sp, #192]	; 0xc0
   1604c:	mov	r3, r4
   16050:	mov	r4, r6
   16054:	eor	r4, r4, sl
   16058:	mov	r2, r5
   1605c:	strd	r6, [sp, #224]	; 0xe0
   16060:	mov	r5, r7
   16064:	ldrd	r6, [sp, #24]
   16068:	eor	r5, r5, fp
   1606c:	lsr	ip, r4, #24
   16070:	orr	r8, ip, r5, lsl #8
   16074:	adds	r6, r6, r0
   16078:	lsr	ip, r5, #24
   1607c:	orr	r9, ip, r4, lsl #8
   16080:	adc	r7, r7, r1
   16084:	adds	r4, r6, r8
   16088:	adc	r5, r7, r9
   1608c:	mov	sl, r4
   16090:	ldrd	r6, [sp, #168]	; 0xa8
   16094:	mov	fp, r5
   16098:	ldrd	r4, [sp, #192]	; 0xc0
   1609c:	ldrd	r0, [sp, #176]	; 0xb0
   160a0:	strd	sl, [sp, #240]	; 0xf0
   160a4:	eor	r6, r6, r4
   160a8:	eor	r7, r7, r5
   160ac:	mov	r4, r6
   160b0:	mov	r5, r7
   160b4:	mov	r6, sl
   160b8:	mov	r7, fp
   160bc:	ldrd	sl, [sp, #208]	; 0xd0
   160c0:	eor	r6, r6, r2
   160c4:	lsr	lr, r4, #16
   160c8:	eor	r1, r1, fp
   160cc:	eor	r0, r0, sl
   160d0:	lsl	ip, r1, #1
   160d4:	orr	ip, ip, r0, lsr #31
   160d8:	lsl	r0, r0, #1
   160dc:	orr	r1, r0, r1, lsr #31
   160e0:	ldrd	sl, [sp, #32]
   160e4:	str	r1, [sp, #144]	; 0x90
   160e8:	ldrd	r0, [sp, #232]	; 0xe8
   160ec:	eor	r7, r7, r3
   160f0:	mov	r2, r6
   160f4:	adds	sl, sl, r0
   160f8:	adc	fp, fp, r1
   160fc:	orr	r1, lr, r5, lsl #16
   16100:	mov	r3, r7
   16104:	str	ip, [sp, #148]	; 0x94
   16108:	str	r1, [sp, #168]	; 0xa8
   1610c:	lsr	ip, r6, #16
   16110:	ldrd	r0, [sp, #200]	; 0xc8
   16114:	ldrd	r6, [sp, #136]	; 0x88
   16118:	eor	r6, r6, r0
   1611c:	eor	r7, r7, r1
   16120:	ldrd	r0, [sp, #144]	; 0x90
   16124:	adds	r0, r0, sl
   16128:	adc	r1, r1, fp
   1612c:	strd	r0, [sp, #216]	; 0xd8
   16130:	orr	r0, ip, r3, lsl #16
   16134:	lsr	ip, r5, #16
   16138:	orr	ip, ip, r4, lsl #16
   1613c:	str	ip, [sp, #172]	; 0xac
   16140:	add	ip, sp, #264	; 0x108
   16144:	ldrd	r4, [sp, #168]	; 0xa8
   16148:	ldrd	sl, [ip]
   1614c:	lsr	r3, r3, #16
   16150:	orr	r1, r3, r2, lsl #16
   16154:	adds	sl, sl, r4
   16158:	adc	fp, fp, r5
   1615c:	ldrd	r4, [sp, #224]	; 0xe0
   16160:	lsl	ip, r7, #1
   16164:	strd	sl, [sp, #224]	; 0xe0
   16168:	adds	r4, r4, r0
   1616c:	adc	r5, r5, r1
   16170:	mov	r2, r4
   16174:	mov	r3, r5
   16178:	ldrd	r4, [sp, #184]	; 0xb8
   1617c:	strd	r2, [sp, #248]	; 0xf8
   16180:	eor	r2, r2, r8
   16184:	eor	r3, r3, r9
   16188:	ldrd	r8, [sp, #216]	; 0xd8
   1618c:	eor	fp, fp, r5
   16190:	eor	sl, sl, r4
   16194:	eor	r8, r8, r0
   16198:	str	r8, [sp, #188]	; 0xbc
   1619c:	orr	ip, ip, r6, lsr #31
   161a0:	add	r8, sp, #256	; 0x100
   161a4:	str	ip, [sp, #140]	; 0x8c
   161a8:	eor	r9, r9, r1
   161ac:	lsl	ip, r6, #1
   161b0:	lsl	r1, fp, #1
   161b4:	mov	r5, fp
   161b8:	orr	ip, ip, r7, lsr #31
   161bc:	lsl	lr, sl, #1
   161c0:	orr	r7, r1, sl, lsr #31
   161c4:	ldrd	sl, [r8]
   161c8:	ldrd	r0, [sp, #48]	; 0x30
   161cc:	str	r9, [sp, #184]	; 0xb8
   161d0:	ldrd	r8, [sp, #128]	; 0x80
   161d4:	adds	r0, r0, sl
   161d8:	adc	r1, r1, fp
   161dc:	ldrd	sl, [sp, #192]	; 0xc0
   161e0:	orr	r6, lr, r5, lsr #31
   161e4:	ldrd	r4, [sp, #240]	; 0xf0
   161e8:	adds	r8, r8, sl
   161ec:	adc	r9, r9, fp
   161f0:	ldrd	sl, [sp, #16]
   161f4:	str	ip, [sp, #136]	; 0x88
   161f8:	lsl	ip, r3, #1
   161fc:	orr	ip, ip, r2, lsr #31
   16200:	lsl	r2, r2, #1
   16204:	adds	sl, sl, r4
   16208:	orr	r3, r2, r3, lsr #31
   1620c:	adc	fp, fp, r5
   16210:	str	r3, [sp, #176]	; 0xb0
   16214:	ldrd	r4, [sp, #224]	; 0xe0
   16218:	ldrd	r2, [sp, #184]	; 0xb8
   1621c:	str	ip, [sp, #180]	; 0xb4
   16220:	add	ip, sp, #256	; 0x100
   16224:	adds	r4, r4, r2
   16228:	mov	r2, r4
   1622c:	adc	r5, r5, r3
   16230:	adds	r4, r0, r6
   16234:	mov	r3, r5
   16238:	adc	r5, r1, r7
   1623c:	ldrd	r0, [sp, #144]	; 0x90
   16240:	strd	r4, [sp, #224]	; 0xe0
   16244:	ldrd	r4, [sp, #136]	; 0x88
   16248:	eor	r0, r0, r2
   1624c:	eor	r1, r1, r3
   16250:	adds	r4, r4, sl
   16254:	adc	r5, r5, fp
   16258:	ldrd	sl, [sp, #176]	; 0xb0
   1625c:	strd	r2, [ip]
   16260:	mov	r2, r0
   16264:	adds	sl, sl, r8
   16268:	adc	fp, fp, r9
   1626c:	ldrd	r8, [sp, #224]	; 0xe0
   16270:	strd	sl, [sp, #232]	; 0xe8
   16274:	ldrd	sl, [sp, #152]	; 0x98
   16278:	mov	r3, r1
   1627c:	add	ip, sp, #264	; 0x108
   16280:	eor	sl, sl, r8
   16284:	eor	fp, fp, r9
   16288:	strd	sl, [sp, #144]	; 0x90
   1628c:	ldrd	r0, [sp, #168]	; 0xa8
   16290:	strd	r4, [ip]
   16294:	ldrd	r8, [sp, #232]	; 0xe8
   16298:	eor	r0, r0, r4
   1629c:	eor	r1, r1, r5
   162a0:	ldrd	r4, [sp, #144]	; 0x90
   162a4:	ldrd	sl, [sp, #160]	; 0xa0
   162a8:	str	r1, [sp, #192]	; 0xc0
   162ac:	str	r5, [sp, #152]	; 0x98
   162b0:	str	r4, [sp, #156]	; 0x9c
   162b4:	str	r0, [sp, #196]	; 0xc4
   162b8:	ldrd	r4, [sp, #216]	; 0xd8
   162bc:	ldrd	r0, [sp, #112]	; 0x70
   162c0:	lsr	ip, r2, #24
   162c4:	eor	sl, sl, r8
   162c8:	adds	r0, r0, r4
   162cc:	orr	r8, ip, r3, lsl #8
   162d0:	lsr	r3, r3, #24
   162d4:	adc	r1, r1, r5
   162d8:	eor	fp, fp, r9
   162dc:	ldrd	r4, [sp, #152]	; 0x98
   162e0:	orr	r9, r3, r2, lsl #8
   162e4:	ldrd	r2, [sp, #248]	; 0xf8
   162e8:	str	fp, [sp, #168]	; 0xa8
   162ec:	str	sl, [sp, #172]	; 0xac
   162f0:	adds	r2, r2, r4
   162f4:	adc	r3, r3, r5
   162f8:	ldrd	r4, [sp, #168]	; 0xa8
   162fc:	strd	r2, [sp, #216]	; 0xd8
   16300:	ldrd	r2, [sp, #200]	; 0xc8
   16304:	adds	r2, r2, r4
   16308:	adc	r3, r3, r5
   1630c:	ldrd	r4, [sp, #192]	; 0xc0
   16310:	strd	r2, [sp, #200]	; 0xc8
   16314:	ldrd	r2, [sp, #208]	; 0xd0
   16318:	adds	r4, r4, r2
   1631c:	adc	r5, r5, r3
   16320:	mov	r2, r4
   16324:	adds	r4, r0, r8
   16328:	mov	r3, r5
   1632c:	adc	r5, r1, r9
   16330:	ldrd	r0, [sp, #216]	; 0xd8
   16334:	strd	r2, [sp, #240]	; 0xf0
   16338:	ldrd	r2, [sp, #200]	; 0xc8
   1633c:	eor	r0, r0, r6
   16340:	eor	r1, r1, r7
   16344:	mov	sl, r4
   16348:	strd	r0, [sp, #144]	; 0x90
   1634c:	ldrd	r0, [sp, #176]	; 0xb0
   16350:	ldrd	r6, [sp, #240]	; 0xf0
   16354:	mov	fp, r5
   16358:	eor	r0, r0, r2
   1635c:	eor	r1, r1, r3
   16360:	mov	r4, r0
   16364:	mov	r5, r1
   16368:	ldrd	r2, [sp, #184]	; 0xb8
   1636c:	ldrd	r0, [sp, #136]	; 0x88
   16370:	ldr	ip, [sp, #144]	; 0x90
   16374:	eor	r2, r2, sl
   16378:	eor	r0, r0, r6
   1637c:	eor	r1, r1, r7
   16380:	eor	r3, r3, fp
   16384:	ldrd	r6, [sp, #40]	; 0x28
   16388:	strd	sl, [sp, #248]	; 0xf8
   1638c:	ldrd	sl, [sp, #224]	; 0xe0
   16390:	lsr	lr, ip, #24
   16394:	lsr	ip, r2, #16
   16398:	adds	r6, r6, sl
   1639c:	adc	r7, r7, fp
   163a0:	add	sl, sp, #264	; 0x108
   163a4:	strd	r6, [sp, #208]	; 0xd0
   163a8:	ldrd	sl, [sl]
   163ac:	ldrd	r6, [sp, #64]	; 0x40
   163b0:	orr	ip, ip, r3, lsl #16
   163b4:	lsr	r3, r3, #16
   163b8:	adds	r6, r6, sl
   163bc:	adc	r7, r7, fp
   163c0:	add	sl, sp, #264	; 0x108
   163c4:	orr	r3, r3, r2, lsl #16
   163c8:	strd	r6, [sl]
   163cc:	ldrd	sl, [sp, #232]	; 0xe8
   163d0:	ldrd	r6, [sp, #120]	; 0x78
   163d4:	str	r3, [sp, #140]	; 0x8c
   163d8:	str	ip, [sp, #136]	; 0x88
   163dc:	adds	r6, r6, sl
   163e0:	adc	r7, r7, fp
   163e4:	ldrd	sl, [sp, #136]	; 0x88
   163e8:	strd	r6, [sp, #232]	; 0xe8
   163ec:	ldrd	r6, [sp, #144]	; 0x90
   163f0:	lsr	ip, r4, #24
   163f4:	orr	ip, ip, r5, lsl #8
   163f8:	orr	r3, lr, r7, lsl #8
   163fc:	str	r3, [sp, #160]	; 0xa0
   16400:	add	r3, sp, #256	; 0x100
   16404:	lsr	lr, r0, #24
   16408:	ldrd	r2, [r3]
   1640c:	str	ip, [sp, #176]	; 0xb0
   16410:	orr	ip, lr, r1, lsl #8
   16414:	adds	r2, r2, sl
   16418:	adc	r3, r3, fp
   1641c:	str	ip, [sp, #184]	; 0xb8
   16420:	strd	r2, [sp, #224]	; 0xe0
   16424:	eor	r3, r3, r9
   16428:	eor	r2, r2, r8
   1642c:	lsl	ip, r3, #1
   16430:	orr	ip, ip, r2, lsr #31
   16434:	str	ip, [sp, #148]	; 0x94
   16438:	lsr	ip, r7, #24
   1643c:	orr	ip, ip, r6, lsl #8
   16440:	str	ip, [sp, #164]	; 0xa4
   16444:	ldrd	r8, [sp, #208]	; 0xd0
   16448:	ldrd	sl, [sp, #160]	; 0xa0
   1644c:	lsr	ip, r5, #24
   16450:	orr	ip, ip, r4, lsl #8
   16454:	adds	r8, r8, sl
   16458:	adc	r9, r9, fp
   1645c:	ldrd	sl, [sp, #152]	; 0x98
   16460:	str	ip, [sp, #180]	; 0xb4
   16464:	ldrd	r4, [sp, #232]	; 0xe8
   16468:	eor	sl, sl, r8
   1646c:	eor	fp, fp, r9
   16470:	mov	r6, sl
   16474:	mov	r7, fp
   16478:	ldrd	sl, [sp, #176]	; 0xb0
   1647c:	lsr	r1, r1, #24
   16480:	orr	r1, r1, r0, lsl #8
   16484:	adds	r4, r4, sl
   16488:	adc	r5, r5, fp
   1648c:	str	r1, [sp, #188]	; 0xbc
   16490:	add	r1, sp, #264	; 0x108
   16494:	strd	r4, [sp, #208]	; 0xd0
   16498:	ldrd	r4, [r1]
   1649c:	ldrd	r0, [sp, #184]	; 0xb8
   164a0:	ldrd	sl, [sp, #168]	; 0xa8
   164a4:	lsl	r2, r2, #1
   164a8:	adds	r4, r4, r0
   164ac:	adc	r5, r5, r1
   164b0:	mov	r0, r4
   164b4:	mov	r1, r5
   164b8:	ldrd	r4, [sp, #208]	; 0xd0
   164bc:	strd	r0, [sp, #232]	; 0xe8
   164c0:	lsr	lr, r6, #16
   164c4:	eor	sl, sl, r4
   164c8:	eor	fp, fp, r5
   164cc:	mov	r4, sl
   164d0:	mov	r5, fp
   164d4:	ldrd	sl, [sp, #192]	; 0xc0
   164d8:	orr	r3, r2, r3, lsr #31
   164dc:	str	r3, [sp, #144]	; 0x90
   164e0:	orr	r3, lr, r7, lsl #16
   164e4:	str	r3, [sp, #152]	; 0x98
   164e8:	eor	sl, sl, r0
   164ec:	eor	fp, fp, r1
   164f0:	lsr	r3, r7, #16
   164f4:	mov	r0, sl
   164f8:	lsr	ip, r4, #16
   164fc:	orr	r3, r3, r6, lsl #16
   16500:	orr	r2, ip, r5, lsl #16
   16504:	str	r3, [sp, #156]	; 0x9c
   16508:	lsr	ip, r5, #16
   1650c:	lsr	lr, sl, #16
   16510:	lsr	r1, fp, #16
   16514:	orr	r3, ip, r4, lsl #16
   16518:	orr	sl, lr, fp, lsl #16
   1651c:	ldrd	r4, [sp, #152]	; 0x98
   16520:	orr	fp, r1, r0, lsl #16
   16524:	ldrd	r0, [sp, #216]	; 0xd8
   16528:	ldrd	r6, [sp, #248]	; 0xf8
   1652c:	add	ip, sp, #264	; 0x108
   16530:	adds	r0, r0, r4
   16534:	adc	r1, r1, r5
   16538:	ldrd	r4, [sp, #200]	; 0xc8
   1653c:	strd	r0, [sp, #192]	; 0xc0
   16540:	adds	r4, r4, r2
   16544:	adc	r5, r5, r3
   16548:	strd	r4, [sp, #200]	; 0xc8
   1654c:	ldrd	r4, [sp, #240]	; 0xf0
   16550:	adds	r4, r4, sl
   16554:	adc	r5, r5, fp
   16558:	mov	r0, r4
   1655c:	mov	r1, r5
   16560:	ldrd	r4, [sp, #104]	; 0x68
   16564:	adds	r4, r4, r6
   16568:	adc	r5, r5, r7
   1656c:	strd	r4, [ip]
   16570:	ldrd	r4, [sp, #16]
   16574:	adds	r4, r4, r8
   16578:	adc	r5, r5, r9
   1657c:	mov	r8, r4
   16580:	mov	r9, r5
   16584:	ldrd	r4, [sp, #144]	; 0x90
   16588:	adds	r4, r4, r8
   1658c:	adc	r5, r5, r9
   16590:	mov	r8, r4
   16594:	mov	r9, r5
   16598:	strd	r8, [sp, #216]	; 0xd8
   1659c:	eor	r8, r8, r2
   165a0:	eor	r9, r9, r3
   165a4:	mov	r4, r8
   165a8:	ldrd	r2, [sp, #200]	; 0xc8
   165ac:	mov	r5, r9
   165b0:	ldrd	r8, [sp, #176]	; 0xb0
   165b4:	str	r5, [sp, #168]	; 0xa8
   165b8:	str	r4, [sp, #172]	; 0xac
   165bc:	eor	r8, r8, r2
   165c0:	eor	r9, r9, r3
   165c4:	ldrd	r4, [sp, #192]	; 0xc0
   165c8:	mov	r2, r8
   165cc:	mov	r3, r9
   165d0:	ldrd	r8, [sp, #160]	; 0xa0
   165d4:	lsl	ip, r3, #1
   165d8:	eor	r8, r8, r4
   165dc:	eor	r9, r9, r5
   165e0:	mov	r6, r8
   165e4:	mov	r7, r9
   165e8:	ldrd	r4, [sp, #168]	; 0xa8
   165ec:	ldrd	r8, [sp, #184]	; 0xb8
   165f0:	adds	r4, r4, r0
   165f4:	eor	r8, r8, r0
   165f8:	eor	r9, r9, r1
   165fc:	adc	r5, r5, r1
   16600:	strd	r8, [sp, #176]	; 0xb0
   16604:	mov	r8, r4
   16608:	mov	r9, r5
   1660c:	ldrd	r4, [sp, #144]	; 0x90
   16610:	orr	r1, ip, r2, lsr #31
   16614:	str	r1, [sp, #164]	; 0xa4
   16618:	eor	r4, r4, r8
   1661c:	eor	r5, r5, r9
   16620:	mov	r0, r4
   16624:	strd	r8, [sp, #240]	; 0xf0
   16628:	mov	r1, r5
   1662c:	ldrd	r8, [sp, #232]	; 0xe8
   16630:	ldrd	r4, [sp, #32]
   16634:	lsl	r2, r2, #1
   16638:	orr	r3, r2, r3, lsr #31
   1663c:	adds	r4, r4, r8
   16640:	str	r3, [sp, #160]	; 0xa0
   16644:	lsl	r3, r7, #1
   16648:	adc	r5, r5, r9
   1664c:	orr	r3, r3, r6, lsr #31
   16650:	ldrd	r8, [sp, #160]	; 0xa0
   16654:	str	r3, [sp, #148]	; 0x94
   16658:	ldr	r3, [sp, #180]	; 0xb4
   1665c:	adds	r8, r8, r4
   16660:	adc	r9, r9, r5
   16664:	lsl	lr, r3, #1
   16668:	ldrd	r4, [sp, #208]	; 0xd0
   1666c:	ldrd	r2, [sp, #120]	; 0x78
   16670:	lsl	ip, r6, #1
   16674:	orr	ip, ip, r7, lsr #31
   16678:	adds	r2, r2, r4
   1667c:	adc	r3, r3, r5
   16680:	ldrd	r4, [sp, #136]	; 0x88
   16684:	strd	r2, [sp, #184]	; 0xb8
   16688:	add	r3, sp, #256	; 0x100
   1668c:	eor	r4, r4, r8
   16690:	strd	r8, [r3]
   16694:	eor	r5, r5, r9
   16698:	ldrd	r8, [sp, #176]	; 0xb0
   1669c:	ldrd	r6, [sp, #216]	; 0xd8
   166a0:	mov	r3, r5
   166a4:	orr	r5, lr, r8, lsr #31
   166a8:	lsl	lr, r8, #1
   166ac:	ldrd	r8, [sp, #128]	; 0x80
   166b0:	str	ip, [sp, #144]	; 0x90
   166b4:	str	r5, [sp, #140]	; 0x8c
   166b8:	adds	r8, r8, r6
   166bc:	adc	r9, r9, r7
   166c0:	mov	r2, r4
   166c4:	mov	r6, r8
   166c8:	ldrd	r4, [sp, #184]	; 0xb8
   166cc:	mov	r7, r9
   166d0:	ldrd	r8, [sp, #144]	; 0x90
   166d4:	lsr	ip, r0, #24
   166d8:	orr	ip, ip, r1, lsl #8
   166dc:	adds	r8, r8, r4
   166e0:	adc	r9, r9, r5
   166e4:	ldr	r5, [sp, #180]	; 0xb4
   166e8:	lsr	r1, r1, #24
   166ec:	str	ip, [sp, #176]	; 0xb0
   166f0:	orr	r5, lr, r5, lsr #31
   166f4:	add	ip, sp, #264	; 0x108
   166f8:	orr	r1, r1, r0, lsl #8
   166fc:	str	r5, [sp, #136]	; 0x88
   16700:	str	r1, [sp, #180]	; 0xb4
   16704:	mov	r0, r8
   16708:	mov	r1, r9
   1670c:	strd	r8, [sp, #248]	; 0xf8
   16710:	eor	r0, r0, sl
   16714:	ldrd	r8, [ip]
   16718:	eor	r1, r1, fp
   1671c:	ldrd	sl, [sp, #136]	; 0x88
   16720:	str	r3, [sp, #184]	; 0xb8
   16724:	str	r2, [sp, #188]	; 0xbc
   16728:	adds	r8, r8, sl
   1672c:	adc	r9, r9, fp
   16730:	ldrd	sl, [sp, #176]	; 0xb0
   16734:	strd	r8, [sp, #216]	; 0xd8
   16738:	add	lr, sp, #256	; 0x100
   1673c:	adds	sl, sl, r6
   16740:	adc	fp, fp, r7
   16744:	mov	r6, sl
   16748:	mov	r7, fp
   1674c:	ldrd	sl, [sp, #152]	; 0x98
   16750:	strd	r6, [sp, #232]	; 0xe8
   16754:	eor	sl, sl, r8
   16758:	eor	fp, fp, r9
   1675c:	mov	r2, sl
   16760:	mov	r3, fp
   16764:	mov	sl, r6
   16768:	mov	fp, r7
   1676c:	ldrd	r6, [sp, #168]	; 0xa8
   16770:	mov	r8, r1
   16774:	mov	r9, r0
   16778:	eor	r6, r6, sl
   1677c:	eor	r7, r7, fp
   16780:	mov	sl, r6
   16784:	mov	fp, r7
   16788:	ldrd	r6, [sp, #192]	; 0xc0
   1678c:	strd	sl, [sp, #168]	; 0xa8
   16790:	ldrd	sl, [sp, #184]	; 0xb8
   16794:	adds	r6, r6, sl
   16798:	adc	r7, r7, fp
   1679c:	ldrd	sl, [sp, #160]	; 0xa0
   167a0:	strd	r6, [ip]
   167a4:	str	r3, [sp, #152]	; 0x98
   167a8:	eor	sl, sl, r6
   167ac:	ldrd	r0, [sp, #224]	; 0xe0
   167b0:	eor	fp, fp, r7
   167b4:	mov	r6, sl
   167b8:	mov	r7, fp
   167bc:	ldrd	sl, [sp, #168]	; 0xa8
   167c0:	adds	r0, r0, r8
   167c4:	adc	r1, r1, r9
   167c8:	lsr	r3, sl, #16
   167cc:	str	r2, [sp, #156]	; 0x9c
   167d0:	orr	r3, r3, fp, lsl #16
   167d4:	strd	r0, [sp, #208]	; 0xd0
   167d8:	str	r3, [sp, #160]	; 0xa0
   167dc:	lsr	r1, fp, #16
   167e0:	ldrd	r2, [sp, #200]	; 0xc8
   167e4:	ldrd	sl, [sp, #152]	; 0x98
   167e8:	lsr	ip, r6, #24
   167ec:	orr	ip, ip, r7, lsl #8
   167f0:	adds	r2, r2, sl
   167f4:	adc	r3, r3, fp
   167f8:	mov	r4, r2
   167fc:	mov	r5, r3
   16800:	ldrd	sl, [sp, #144]	; 0x90
   16804:	ldrd	r2, [sp, #208]	; 0xd0
   16808:	strd	r4, [sp, #224]	; 0xe0
   1680c:	str	ip, [sp, #192]	; 0xc0
   16810:	eor	sl, sl, r2
   16814:	eor	fp, fp, r3
   16818:	ldr	r3, [sp, #168]	; 0xa8
   1681c:	strd	sl, [sp, #200]	; 0xc8
   16820:	ldrd	sl, [sp, #136]	; 0x88
   16824:	orr	r3, r1, r3, lsl #16
   16828:	str	r3, [sp, #164]	; 0xa4
   1682c:	add	r3, sp, #256	; 0x100
   16830:	eor	sl, sl, r4
   16834:	eor	fp, fp, r5
   16838:	ldrd	r2, [r3]
   1683c:	mov	r0, sl
   16840:	mov	r1, fp
   16844:	ldrd	sl, [sp, #72]	; 0x48
   16848:	ldrd	r4, [sp, #160]	; 0xa0
   1684c:	lsr	ip, r7, #24
   16850:	adds	sl, sl, r2
   16854:	adc	fp, fp, r3
   16858:	ldrd	r2, [sp, #240]	; 0xf0
   1685c:	adds	r2, r2, r4
   16860:	adc	r3, r3, r5
   16864:	ldrd	r4, [sp, #176]	; 0xb0
   16868:	strd	r2, [sp, #240]	; 0xf0
   1686c:	eor	r5, r5, r3
   16870:	orr	r3, ip, r6, lsl #8
   16874:	str	r3, [sp, #196]	; 0xc4
   16878:	ldr	r3, [sp, #200]	; 0xc8
   1687c:	eor	r4, r4, r2
   16880:	ldrd	r6, [sp, #248]	; 0xf8
   16884:	lsr	ip, r3, #24
   16888:	ldrd	r2, [sp, #192]	; 0xc0
   1688c:	adds	r2, r2, sl
   16890:	adc	r3, r3, fp
   16894:	ldrd	sl, [sp, #112]	; 0x70
   16898:	strd	r2, [lr]
   1689c:	lsl	lr, r4, #1
   168a0:	adds	sl, sl, r6
   168a4:	adc	fp, fp, r7
   168a8:	ldrd	r6, [sp, #184]	; 0xb8
   168ac:	strd	sl, [sp, #176]	; 0xb0
   168b0:	eor	r7, r7, r3
   168b4:	ldr	r3, [sp, #204]	; 0xcc
   168b8:	eor	r6, r6, r2
   168bc:	orr	r3, ip, r3, lsl #8
   168c0:	str	r3, [sp, #168]	; 0xa8
   168c4:	ldrd	r2, [sp, #40]	; 0x28
   168c8:	ldrd	sl, [sp, #216]	; 0xd8
   168cc:	lsl	ip, r5, #1
   168d0:	adds	r2, r2, sl
   168d4:	adc	r3, r3, fp
   168d8:	mov	fp, r3
   168dc:	orr	r3, ip, r4, lsr #31
   168e0:	str	r3, [sp, #148]	; 0x94
   168e4:	lsr	ip, r0, #24
   168e8:	orr	r3, lr, r5, lsr #31
   168ec:	str	r3, [sp, #144]	; 0x90
   168f0:	orr	r3, ip, r1, lsl #8
   168f4:	lsr	r1, r1, #24
   168f8:	str	r3, [sp, #136]	; 0x88
   168fc:	orr	r3, r1, r0, lsl #8
   16900:	ldrd	r0, [sp, #200]	; 0xc8
   16904:	str	r3, [sp, #140]	; 0x8c
   16908:	ldrd	r4, [sp, #176]	; 0xb0
   1690c:	lsr	r3, r1, #24
   16910:	orr	r3, r3, r0, lsl #8
   16914:	str	r3, [sp, #172]	; 0xac
   16918:	ldrd	r0, [sp, #168]	; 0xa8
   1691c:	mov	sl, r2
   16920:	lsr	ip, r6, #16
   16924:	adds	r4, r4, r0
   16928:	adc	r5, r5, r1
   1692c:	ldrd	r0, [sp, #136]	; 0x88
   16930:	strd	r4, [sp, #248]	; 0xf8
   16934:	orr	ip, ip, r7, lsl #16
   16938:	adds	r0, r0, sl
   1693c:	eor	r4, r4, r8
   16940:	mov	sl, r0
   16944:	str	ip, [sp, #184]	; 0xb8
   16948:	mov	r0, r4
   1694c:	adc	r1, r1, fp
   16950:	eor	r5, r5, r9
   16954:	lsr	ip, r7, #16
   16958:	mov	fp, r1
   1695c:	orr	ip, ip, r6, lsl #16
   16960:	mov	r1, r5
   16964:	str	ip, [sp, #188]	; 0xbc
   16968:	lsr	ip, r0, #16
   1696c:	orr	ip, ip, r1, lsl #16
   16970:	lsr	r1, r1, #16
   16974:	ldrd	r2, [sp, #8]
   16978:	orr	r1, r1, r0, lsl #16
   1697c:	ldrd	r4, [sp, #144]	; 0x90
   16980:	str	ip, [sp, #176]	; 0xb0
   16984:	str	r1, [sp, #180]	; 0xb4
   16988:	ldrd	r8, [sp, #176]	; 0xb0
   1698c:	ldrd	r0, [sp, #208]	; 0xd0
   16990:	adds	r2, r2, sl
   16994:	adc	r3, r3, fp
   16998:	adds	r4, r4, r2
   1699c:	adc	r5, r5, r3
   169a0:	adds	r8, r8, r0
   169a4:	adc	r9, r9, r1
   169a8:	ldrd	r0, [sp, #152]	; 0x98
   169ac:	mov	r2, r4
   169b0:	mov	r3, r5
   169b4:	ldrd	r4, [sp, #184]	; 0xb8
   169b8:	eor	r0, r0, sl
   169bc:	eor	r1, r1, fp
   169c0:	mov	sl, r0
   169c4:	mov	fp, r1
   169c8:	eor	r4, r4, r2
   169cc:	ldrd	r0, [sp, #168]	; 0xa8
   169d0:	eor	r5, r5, r3
   169d4:	mov	r6, r4
   169d8:	mov	r7, r5
   169dc:	str	r7, [sp, #200]	; 0xc8
   169e0:	str	r6, [sp, #204]	; 0xcc
   169e4:	eor	r1, r1, r9
   169e8:	mov	r4, r8
   169ec:	mov	r5, r9
   169f0:	eor	r0, r0, r8
   169f4:	ldrd	r8, [sp, #200]	; 0xc8
   169f8:	ldrd	r6, [sp, #144]	; 0x90
   169fc:	lsr	ip, sl, #16
   16a00:	adds	r8, r8, r4
   16a04:	adc	r9, r9, r5
   16a08:	eor	r6, r6, r8
   16a0c:	eor	r7, r7, r9
   16a10:	mov	r4, r6
   16a14:	mov	r5, r7
   16a18:	ldrd	r6, [sp, #48]	; 0x30
   16a1c:	orr	ip, ip, fp, lsl #16
   16a20:	str	ip, [sp, #144]	; 0x90
   16a24:	adds	r6, r6, r2
   16a28:	lsr	ip, fp, #16
   16a2c:	adc	r7, r7, r3
   16a30:	strd	r8, [sp, #208]	; 0xd0
   16a34:	orr	r3, ip, sl, lsl #16
   16a38:	ldrd	r8, [sp, #232]	; 0xe8
   16a3c:	ldrd	sl, [sp, #96]	; 0x60
   16a40:	str	r3, [sp, #148]	; 0x94
   16a44:	lsr	ip, r5, #24
   16a48:	adds	sl, sl, r8
   16a4c:	adc	fp, fp, r9
   16a50:	lsr	r3, r4, #24
   16a54:	strd	sl, [sp, #168]	; 0xa8
   16a58:	ldrd	r8, [sp, #144]	; 0x90
   16a5c:	ldrd	sl, [sp, #224]	; 0xe0
   16a60:	orr	r3, r3, r5, lsl #8
   16a64:	orr	ip, ip, r4, lsl #8
   16a68:	adds	sl, sl, r8
   16a6c:	adc	fp, fp, r9
   16a70:	ldrd	r8, [sp, #136]	; 0x88
   16a74:	str	r3, [sp, #152]	; 0x98
   16a78:	str	ip, [sp, #156]	; 0x9c
   16a7c:	eor	r8, r8, sl
   16a80:	eor	r9, r9, fp
   16a84:	mov	r2, r8
   16a88:	mov	r3, r9
   16a8c:	ldrd	r8, [sp, #152]	; 0x98
   16a90:	strd	sl, [sp, #216]	; 0xd8
   16a94:	ldrd	sl, [sp, #200]	; 0xc8
   16a98:	adds	r8, r8, r6
   16a9c:	adc	r9, r9, r7
   16aa0:	eor	fp, fp, r9
   16aa4:	lsl	ip, r1, #1
   16aa8:	mov	r5, fp
   16aac:	orr	fp, ip, r0, lsr #31
   16ab0:	lsl	ip, r3, #1
   16ab4:	orr	ip, ip, r2, lsr #31
   16ab8:	str	ip, [sp, #140]	; 0x8c
   16abc:	add	ip, sp, #264	; 0x108
   16ac0:	ldrd	r6, [sp, #184]	; 0xb8
   16ac4:	strd	r8, [sp, #224]	; 0xe0
   16ac8:	eor	sl, sl, r8
   16acc:	ldrd	r8, [ip]
   16ad0:	mov	r4, sl
   16ad4:	lsl	r0, r0, #1
   16ad8:	orr	sl, r0, r1, lsr #31
   16adc:	lsl	r2, r2, #1
   16ae0:	ldrd	r0, [sp, #168]	; 0xa8
   16ae4:	adds	r8, r8, r6
   16ae8:	lsr	ip, r4, #16
   16aec:	orr	r3, r2, r3, lsr #31
   16af0:	adc	r9, r9, r7
   16af4:	str	r3, [sp, #136]	; 0x88
   16af8:	ldrd	r6, [sp, #144]	; 0x90
   16afc:	orr	r3, ip, r5, lsl #16
   16b00:	adds	r0, r0, sl
   16b04:	str	r3, [sp, #144]	; 0x90
   16b08:	lsr	r3, r5, #16
   16b0c:	adc	r1, r1, fp
   16b10:	orr	r3, r3, r4, lsl #16
   16b14:	str	r3, [sp, #148]	; 0x94
   16b18:	eor	r6, r6, r0
   16b1c:	eor	r7, r7, r1
   16b20:	str	r7, [sp, #168]	; 0xa8
   16b24:	str	r6, [sp, #172]	; 0xac
   16b28:	strd	r0, [sp, #232]	; 0xe8
   16b2c:	ldrd	r6, [sp, #144]	; 0x90
   16b30:	ldrd	r0, [sp, #208]	; 0xd0
   16b34:	adds	r0, r0, r6
   16b38:	adc	r1, r1, r7
   16b3c:	ldrd	r6, [sp, #168]	; 0xa8
   16b40:	strd	r0, [sp, #200]	; 0xc8
   16b44:	add	r1, sp, #256	; 0x100
   16b48:	adds	r2, r8, r6
   16b4c:	adc	r3, r9, r7
   16b50:	ldrd	r0, [r1]
   16b54:	strd	r2, [sp, #208]	; 0xd0
   16b58:	ldrd	r2, [sp, #56]	; 0x38
   16b5c:	ldrd	r6, [sp, #136]	; 0x88
   16b60:	adds	r2, r2, r0
   16b64:	adc	r3, r3, r1
   16b68:	adds	r4, r6, r2
   16b6c:	adc	r5, r7, r3
   16b70:	ldrd	r2, [sp, #192]	; 0xc0
   16b74:	mov	r0, r4
   16b78:	mov	r1, r5
   16b7c:	eor	r3, r3, r9
   16b80:	eor	r2, r2, r8
   16b84:	lsl	ip, r3, #1
   16b88:	orr	ip, ip, r2, lsr #31
   16b8c:	lsl	r2, r2, #1
   16b90:	ldrd	r4, [sp, #176]	; 0xb0
   16b94:	orr	r3, r2, r3, lsr #31
   16b98:	str	ip, [sp, #140]	; 0x8c
   16b9c:	str	r3, [sp, #136]	; 0x88
   16ba0:	ldrd	r2, [sp, #240]	; 0xf0
   16ba4:	eor	r5, r5, r1
   16ba8:	eor	r4, r4, r0
   16bac:	adds	r2, r2, r5
   16bb0:	adc	r3, r3, r4
   16bb4:	mov	r8, r5
   16bb8:	strd	r2, [sp, #240]	; 0xf0
   16bbc:	mov	r9, r4
   16bc0:	mov	r5, r3
   16bc4:	mov	r4, r2
   16bc8:	mov	r3, r7
   16bcc:	mov	r2, r6
   16bd0:	eor	r2, r2, r4
   16bd4:	eor	r3, r3, r5
   16bd8:	ldrd	r6, [sp, #248]	; 0xf8
   16bdc:	mov	r4, r2
   16be0:	mov	r5, r3
   16be4:	ldrd	r2, [sp, #64]	; 0x40
   16be8:	lsr	ip, r4, #24
   16bec:	orr	ip, ip, r5, lsl #8
   16bf0:	adds	r2, r2, r6
   16bf4:	adc	r3, r3, r7
   16bf8:	ldrd	r6, [sp, #136]	; 0x88
   16bfc:	str	ip, [sp, #184]	; 0xb8
   16c00:	lsr	ip, r5, #24
   16c04:	adds	r6, r6, r2
   16c08:	adc	r7, r7, r3
   16c0c:	mov	r2, r6
   16c10:	mov	r3, r7
   16c14:	ldrd	r6, [sp, #160]	; 0xa0
   16c18:	orr	ip, ip, r4, lsl #8
   16c1c:	str	ip, [sp, #188]	; 0xbc
   16c20:	eor	r6, r6, r2
   16c24:	eor	r7, r7, r3
   16c28:	strd	r6, [sp, #160]	; 0xa0
   16c2c:	ldrd	r4, [sp, #160]	; 0xa0
   16c30:	ldrd	r6, [sp, #80]	; 0x50
   16c34:	str	r5, [sp, #176]	; 0xb0
   16c38:	str	r4, [sp, #180]	; 0xb4
   16c3c:	ldrd	r4, [sp, #184]	; 0xb8
   16c40:	adds	r6, r6, r0
   16c44:	adc	r7, r7, r1
   16c48:	adds	r4, r4, r6
   16c4c:	adc	r5, r5, r7
   16c50:	ldrd	r6, [sp, #208]	; 0xd0
   16c54:	mov	r0, r4
   16c58:	mov	r1, r5
   16c5c:	eor	r6, r6, sl
   16c60:	ldrd	r4, [sp, #216]	; 0xd8
   16c64:	eor	r7, r7, fp
   16c68:	ldrd	sl, [sp, #176]	; 0xb0
   16c6c:	strd	r0, [sp, #248]	; 0xf8
   16c70:	lsr	lr, r6, #24
   16c74:	adds	r4, r4, sl
   16c78:	adc	r5, r5, fp
   16c7c:	mov	sl, r4
   16c80:	mov	fp, r5
   16c84:	mov	r4, r0
   16c88:	mov	r5, r1
   16c8c:	ldrd	r0, [sp, #136]	; 0x88
   16c90:	eor	r4, r4, r8
   16c94:	eor	r5, r5, r9
   16c98:	strd	sl, [sp, #216]	; 0xd8
   16c9c:	ldrd	r8, [sp, #24]
   16ca0:	eor	r0, r0, sl
   16ca4:	eor	r1, r1, fp
   16ca8:	ldrd	sl, [sp, #232]	; 0xe8
   16cac:	strd	r0, [sp, #136]	; 0x88
   16cb0:	ldrd	r0, [sp, #152]	; 0x98
   16cb4:	adds	r8, r8, sl
   16cb8:	adc	r9, r9, fp
   16cbc:	ldrd	sl, [sp, #88]	; 0x58
   16cc0:	lsr	ip, r4, #16
   16cc4:	adds	sl, sl, r2
   16cc8:	adc	fp, fp, r3
   16ccc:	orr	r3, lr, r7, lsl #8
   16cd0:	str	r3, [sp, #160]	; 0xa0
   16cd4:	ldrd	r2, [sp, #200]	; 0xc8
   16cd8:	eor	r1, r1, r3
   16cdc:	mov	r3, r1
   16ce0:	orr	r1, ip, r5, lsl #16
   16ce4:	lsr	ip, r7, #24
   16ce8:	str	r1, [sp, #192]	; 0xc0
   16cec:	orr	r1, ip, r6, lsl #8
   16cf0:	str	r1, [sp, #164]	; 0xa4
   16cf4:	eor	r0, r0, r2
   16cf8:	mov	r2, r0
   16cfc:	ldrd	r0, [sp, #160]	; 0xa0
   16d00:	lsl	lr, r3, #1
   16d04:	adds	r0, r0, r8
   16d08:	adc	r1, r1, r9
   16d0c:	mov	r9, r1
   16d10:	ldr	r1, [sp, #136]	; 0x88
   16d14:	mov	r8, r0
   16d18:	lsr	ip, r1, #24
   16d1c:	ldrd	r0, [sp, #168]	; 0xa8
   16d20:	eor	r1, r1, r9
   16d24:	mov	r7, r1
   16d28:	ldr	r1, [sp, #140]	; 0x8c
   16d2c:	eor	r0, r0, r8
   16d30:	mov	r6, r0
   16d34:	orr	r1, ip, r1, lsl #8
   16d38:	lsr	ip, r5, #16
   16d3c:	str	r1, [sp, #168]	; 0xa8
   16d40:	orr	r1, ip, r4, lsl #16
   16d44:	str	r1, [sp, #196]	; 0xc4
   16d48:	ldrd	r4, [sp, #240]	; 0xf0
   16d4c:	ldrd	r0, [sp, #192]	; 0xc0
   16d50:	lsr	ip, r6, #16
   16d54:	adds	r4, r4, r0
   16d58:	adc	r5, r5, r1
   16d5c:	ldrd	r0, [sp, #184]	; 0xb8
   16d60:	strd	r4, [sp, #240]	; 0xf0
   16d64:	eor	r1, r1, r5
   16d68:	mov	r5, r1
   16d6c:	eor	r0, r0, r4
   16d70:	ldr	r1, [sp, #140]	; 0x8c
   16d74:	mov	r4, r0
   16d78:	ldr	r0, [sp, #136]	; 0x88
   16d7c:	lsr	r1, r1, #24
   16d80:	strd	r4, [sp, #184]	; 0xb8
   16d84:	orr	r1, r1, r0, lsl #8
   16d88:	str	r1, [sp, #172]	; 0xac
   16d8c:	ldrd	r0, [sp, #168]	; 0xa8
   16d90:	adds	r0, r0, sl
   16d94:	adc	r1, r1, fp
   16d98:	mov	sl, r0
   16d9c:	mov	fp, r1
   16da0:	ldrd	r0, [sp, #176]	; 0xb0
   16da4:	strd	sl, [sp, #232]	; 0xe8
   16da8:	eor	r0, r0, sl
   16dac:	eor	r1, r1, fp
   16db0:	orr	sl, ip, r7, lsl #16
   16db4:	strd	r0, [sp, #152]	; 0x98
   16db8:	orr	r1, lr, r2, lsr #31
   16dbc:	lsl	r2, r2, #1
   16dc0:	orr	r3, r2, r3, lsr #31
   16dc4:	str	r1, [sp, #140]	; 0x8c
   16dc8:	str	r3, [sp, #136]	; 0x88
   16dcc:	ldrd	r0, [sp, #224]	; 0xe0
   16dd0:	lsl	r3, r5, #1
   16dd4:	ldrd	r4, [sp, #112]	; 0x70
   16dd8:	lsr	r2, r7, #16
   16ddc:	orr	fp, r2, r6, lsl #16
   16de0:	adds	r4, r4, r0
   16de4:	adc	r5, r5, r1
   16de8:	ldrd	r0, [sp, #48]	; 0x30
   16dec:	ldrd	r6, [sp, #136]	; 0x88
   16df0:	ldr	r2, [sp, #184]	; 0xb8
   16df4:	adds	r0, r0, r8
   16df8:	adc	r1, r1, r9
   16dfc:	adds	r6, r6, r0
   16e00:	adc	r7, r7, r1
   16e04:	mov	r8, r6
   16e08:	mov	r9, r7
   16e0c:	ldrd	r6, [sp, #208]	; 0xd0
   16e10:	ldrd	r0, [sp, #152]	; 0x98
   16e14:	orr	r3, r3, r2, lsr #31
   16e18:	adds	r6, r6, sl
   16e1c:	str	r3, [sp, #180]	; 0xb4
   16e20:	ldrd	r2, [sp, #160]	; 0xa0
   16e24:	adc	r7, r7, fp
   16e28:	lsr	ip, r0, #16
   16e2c:	strd	r6, [sp, #224]	; 0xe0
   16e30:	eor	r2, r2, r6
   16e34:	orr	r6, ip, r1, lsl #16
   16e38:	ldrd	r0, [sp, #184]	; 0xb8
   16e3c:	eor	r3, r3, r7
   16e40:	lsl	ip, r0, #1
   16e44:	orr	r1, ip, r1, lsr #31
   16e48:	str	r1, [sp, #176]	; 0xb0
   16e4c:	ldrd	r0, [sp, #176]	; 0xb0
   16e50:	lsl	ip, r3, #1
   16e54:	adds	r4, r4, r0
   16e58:	adc	r5, r5, r1
   16e5c:	eor	r0, r6, r8
   16e60:	strd	r4, [sp, #208]	; 0xd0
   16e64:	eor	r4, r4, sl
   16e68:	eor	r5, r5, fp
   16e6c:	mov	sl, r4
   16e70:	mov	fp, r5
   16e74:	ldrd	r4, [sp, #152]	; 0x98
   16e78:	lsr	r1, r5, #16
   16e7c:	orr	r7, r1, r4, lsl #16
   16e80:	ldrd	r4, [sp, #216]	; 0xd8
   16e84:	eor	r1, r7, r9
   16e88:	str	fp, [sp, #160]	; 0xa0
   16e8c:	adds	r4, r4, r6
   16e90:	mov	r6, r4
   16e94:	adc	r5, r5, r7
   16e98:	mov	r4, r1
   16e9c:	orr	r1, ip, r2, lsr #31
   16ea0:	lsl	r2, r2, #1
   16ea4:	mov	r7, r5
   16ea8:	str	r1, [sp, #156]	; 0x9c
   16eac:	mov	r5, r0
   16eb0:	orr	r3, r2, r3, lsr #31
   16eb4:	ldrd	r0, [sp, #240]	; 0xf0
   16eb8:	str	sl, [sp, #164]	; 0xa4
   16ebc:	str	r3, [sp, #152]	; 0x98
   16ec0:	ldrd	sl, [sp, #232]	; 0xe8
   16ec4:	ldrd	r2, [sp, #104]	; 0x68
   16ec8:	adds	r0, r0, r4
   16ecc:	adc	r1, r1, r5
   16ed0:	adds	r2, r2, sl
   16ed4:	adc	r3, r3, fp
   16ed8:	ldrd	sl, [sp, #136]	; 0x88
   16edc:	strd	r0, [sp, #232]	; 0xe8
   16ee0:	strd	r2, [sp, #240]	; 0xf0
   16ee4:	eor	sl, sl, r0
   16ee8:	eor	fp, fp, r1
   16eec:	ldrd	r0, [sp, #160]	; 0xa0
   16ef0:	ldrd	r2, [sp, #176]	; 0xb0
   16ef4:	add	ip, sp, #256	; 0x100
   16ef8:	adds	r0, r0, r6
   16efc:	adc	r1, r1, r7
   16f00:	eor	r2, r2, r0
   16f04:	eor	r3, r3, r1
   16f08:	strd	r0, [sp, #216]	; 0xd8
   16f0c:	strd	r2, [sp, #184]	; 0xb8
   16f10:	ldrd	r0, [sp, #152]	; 0x98
   16f14:	ldrd	r2, [sp, #240]	; 0xf0
   16f18:	lsr	lr, sl, #24
   16f1c:	adds	r2, r2, r0
   16f20:	adc	r3, r3, r1
   16f24:	ldrd	r0, [sp, #192]	; 0xc0
   16f28:	strd	r2, [ip]
   16f2c:	eor	r1, r1, r3
   16f30:	mov	r3, r1
   16f34:	ldr	r1, [sp, #184]	; 0xb8
   16f38:	eor	r0, r0, r2
   16f3c:	mov	r2, r0
   16f40:	lsr	ip, r1, #24
   16f44:	ldrd	r0, [sp, #120]	; 0x78
   16f48:	adds	r0, r0, r8
   16f4c:	adc	r1, r1, r9
   16f50:	ldrd	r8, [sp, #80]	; 0x50
   16f54:	strd	r0, [sp, #192]	; 0xc0
   16f58:	ldrd	r0, [sp, #208]	; 0xd0
   16f5c:	adds	r8, r8, r0
   16f60:	adc	r9, r9, r1
   16f64:	orr	r1, lr, fp, lsl #8
   16f68:	str	r1, [sp, #176]	; 0xb0
   16f6c:	ldr	r1, [sp, #188]	; 0xbc
   16f70:	orr	r1, ip, r1, lsl #8
   16f74:	str	r1, [sp, #136]	; 0x88
   16f78:	ldrd	r0, [sp, #168]	; 0xa8
   16f7c:	str	r3, [sp, #168]	; 0xa8
   16f80:	str	r2, [sp, #172]	; 0xac
   16f84:	eor	r0, r0, r6
   16f88:	eor	r1, r1, r7
   16f8c:	mov	r7, r1
   16f90:	ldrd	r2, [sp, #200]	; 0xc8
   16f94:	mov	r6, r0
   16f98:	ldrd	r0, [sp, #168]	; 0xa8
   16f9c:	add	ip, sp, #264	; 0x108
   16fa0:	adds	r2, r2, r0
   16fa4:	adc	r3, r3, r1
   16fa8:	ldrd	r0, [sp, #152]	; 0x98
   16fac:	strd	r2, [ip]
   16fb0:	lsr	ip, fp, #24
   16fb4:	eor	r1, r1, r3
   16fb8:	mov	r3, r1
   16fbc:	orr	r1, ip, sl, lsl #8
   16fc0:	str	r1, [sp, #180]	; 0xb4
   16fc4:	eor	r0, r0, r2
   16fc8:	ldrd	sl, [sp, #176]	; 0xb0
   16fcc:	mov	r2, r0
   16fd0:	ldrd	r0, [sp, #192]	; 0xc0
   16fd4:	lsl	ip, r7, #1
   16fd8:	adds	r0, r0, sl
   16fdc:	adc	r1, r1, fp
   16fe0:	mov	fp, r1
   16fe4:	ldr	r1, [sp, #188]	; 0xbc
   16fe8:	mov	sl, r0
   16fec:	ldr	r0, [sp, #184]	; 0xb8
   16ff0:	lsr	r1, r1, #24
   16ff4:	strd	sl, [sp, #240]	; 0xf0
   16ff8:	orr	r1, r1, r0, lsl #8
   16ffc:	str	r1, [sp, #140]	; 0x8c
   17000:	mov	r0, r8
   17004:	mov	r1, r9
   17008:	ldrd	r8, [sp, #136]	; 0x88
   1700c:	adds	r0, r0, r8
   17010:	adc	r1, r1, r9
   17014:	mov	r8, sl
   17018:	mov	r9, fp
   1701c:	eor	r8, r8, r4
   17020:	eor	r9, r9, r5
   17024:	ldrd	sl, [sp, #160]	; 0xa0
   17028:	mov	r4, r8
   1702c:	mov	r5, r9
   17030:	eor	sl, sl, r0
   17034:	strd	r4, [sp, #152]	; 0x98
   17038:	add	r4, sp, #256	; 0x100
   1703c:	eor	fp, fp, r1
   17040:	ldrd	r4, [r4]
   17044:	strd	r0, [sp, #192]	; 0xc0
   17048:	lsr	lr, r8, #16
   1704c:	mov	r1, fp
   17050:	ldrd	r8, [sp, #16]
   17054:	orr	fp, ip, r6, lsr #31
   17058:	lsl	r6, r6, #1
   1705c:	mov	r0, sl
   17060:	lsr	ip, sl, #16
   17064:	orr	sl, r6, r7, lsr #31
   17068:	ldrd	r6, [sp, #152]	; 0x98
   1706c:	adds	r8, r8, r4
   17070:	adc	r9, r9, r5
   17074:	orr	r5, lr, r7, lsl #16
   17078:	lsr	lr, r7, #16
   1707c:	str	r5, [sp, #160]	; 0xa0
   17080:	orr	r5, lr, r6, lsl #16
   17084:	str	r5, [sp, #164]	; 0xa4
   17088:	ldrd	r6, [sp, #160]	; 0xa0
   1708c:	ldrd	r4, [sp, #232]	; 0xe8
   17090:	orr	ip, ip, r1, lsl #16
   17094:	lsr	r1, r1, #16
   17098:	adds	r4, r4, r6
   1709c:	adc	r5, r5, r7
   170a0:	orr	r1, r1, r0, lsl #16
   170a4:	str	ip, [sp, #152]	; 0x98
   170a8:	str	r1, [sp, #156]	; 0x9c
   170ac:	ldrd	r0, [sp, #152]	; 0x98
   170b0:	strd	r4, [sp, #208]	; 0xd0
   170b4:	ldrd	r4, [sp, #216]	; 0xd8
   170b8:	lsr	ip, r2, #24
   170bc:	orr	ip, ip, r3, lsl #8
   170c0:	adds	r4, r4, r0
   170c4:	lsr	r3, r3, #24
   170c8:	adc	r5, r5, r1
   170cc:	orr	r3, r3, r2, lsl #8
   170d0:	str	ip, [sp, #184]	; 0xb8
   170d4:	str	r3, [sp, #188]	; 0xbc
   170d8:	strd	r4, [sp, #200]	; 0xc8
   170dc:	ldrd	r4, [sp, #184]	; 0xb8
   170e0:	ldrd	r0, [sp, #24]
   170e4:	adds	r4, r4, r8
   170e8:	adc	r5, r5, r9
   170ec:	strd	r4, [sp, #216]	; 0xd8
   170f0:	ldrd	r4, [sp, #248]	; 0xf8
   170f4:	adds	r0, r0, r4
   170f8:	adc	r1, r1, r5
   170fc:	ldrd	r4, [sp, #144]	; 0x90
   17100:	adds	r0, r0, sl
   17104:	ldrd	r6, [sp, #224]	; 0xe0
   17108:	adc	r1, r1, fp
   1710c:	eor	r5, r5, r1
   17110:	adds	r6, r6, r5
   17114:	eor	r4, r4, r0
   17118:	adc	r7, r7, r4
   1711c:	mov	r3, r4
   17120:	mov	r4, r6
   17124:	strd	r6, [sp, #232]	; 0xe8
   17128:	eor	r4, r4, sl
   1712c:	mov	r2, r5
   17130:	mov	r5, r7
   17134:	ldrd	r6, [sp, #64]	; 0x40
   17138:	eor	r5, r5, fp
   1713c:	lsr	ip, r4, #24
   17140:	orr	r8, ip, r5, lsl #8
   17144:	adds	r6, r6, r0
   17148:	lsr	ip, r5, #24
   1714c:	orr	r9, ip, r4, lsl #8
   17150:	adc	r7, r7, r1
   17154:	adds	r6, r6, r8
   17158:	adc	r7, r7, r9
   1715c:	ldrd	sl, [sp, #168]	; 0xa8
   17160:	mov	r0, r6
   17164:	mov	r1, r7
   17168:	ldrd	r6, [sp, #216]	; 0xd8
   1716c:	strd	r0, [sp, #248]	; 0xf8
   17170:	eor	sl, sl, r6
   17174:	eor	fp, fp, r7
   17178:	mov	r4, sl
   1717c:	mov	r5, fp
   17180:	mov	sl, r0
   17184:	mov	fp, r1
   17188:	eor	sl, sl, r2
   1718c:	eor	fp, fp, r3
   17190:	ldrd	r6, [sp, #176]	; 0xb0
   17194:	mov	r2, sl
   17198:	mov	r3, fp
   1719c:	ldrd	sl, [sp, #208]	; 0xd0
   171a0:	lsr	lr, r4, #16
   171a4:	eor	r6, r6, sl
   171a8:	eor	r7, r7, fp
   171ac:	lsl	r0, r6, #1
   171b0:	orr	r1, r0, r7, lsr #31
   171b4:	str	r1, [sp, #144]	; 0x90
   171b8:	ldrd	sl, [sp, #40]	; 0x28
   171bc:	ldrd	r0, [sp, #192]	; 0xc0
   171c0:	lsl	ip, r7, #1
   171c4:	orr	ip, ip, r6, lsr #31
   171c8:	adds	sl, sl, r0
   171cc:	adc	fp, fp, r1
   171d0:	orr	r1, lr, r5, lsl #16
   171d4:	ldrd	r6, [sp, #136]	; 0x88
   171d8:	str	r1, [sp, #168]	; 0xa8
   171dc:	ldrd	r0, [sp, #200]	; 0xc8
   171e0:	str	ip, [sp, #148]	; 0x94
   171e4:	lsr	ip, r2, #16
   171e8:	eor	r6, r6, r0
   171ec:	eor	r7, r7, r1
   171f0:	ldrd	r0, [sp, #144]	; 0x90
   171f4:	adds	r0, r0, sl
   171f8:	adc	r1, r1, fp
   171fc:	strd	r0, [sp, #224]	; 0xe0
   17200:	orr	r0, ip, r3, lsl #16
   17204:	lsr	ip, r5, #16
   17208:	orr	ip, ip, r4, lsl #16
   1720c:	str	ip, [sp, #172]	; 0xac
   17210:	add	ip, sp, #264	; 0x108
   17214:	ldrd	r4, [sp, #168]	; 0xa8
   17218:	ldrd	sl, [ip]
   1721c:	lsr	r3, r3, #16
   17220:	orr	r1, r3, r2, lsl #16
   17224:	adds	sl, sl, r4
   17228:	adc	fp, fp, r5
   1722c:	ldrd	r4, [sp, #232]	; 0xe8
   17230:	lsl	ip, r7, #1
   17234:	orr	ip, ip, r6, lsr #31
   17238:	adds	r4, r4, r0
   1723c:	adc	r5, r5, r1
   17240:	mov	r2, r4
   17244:	mov	r3, r5
   17248:	ldrd	r4, [sp, #184]	; 0xb8
   1724c:	strd	r2, [sp, #232]	; 0xe8
   17250:	eor	r2, r2, r8
   17254:	eor	r3, r3, r9
   17258:	ldrd	r8, [sp, #224]	; 0xe0
   1725c:	str	ip, [sp, #140]	; 0x8c
   17260:	lsl	ip, r6, #1
   17264:	eor	r8, r8, r0
   17268:	eor	r9, r9, r1
   1726c:	str	r9, [sp, #192]	; 0xc0
   17270:	str	r8, [sp, #196]	; 0xc4
   17274:	orr	ip, ip, r7, lsr #31
   17278:	ldrd	r8, [sp, #240]	; 0xf0
   1727c:	ldrd	r6, [sp, #128]	; 0x80
   17280:	eor	r5, r5, fp
   17284:	eor	r4, r4, sl
   17288:	adds	r6, r6, r8
   1728c:	lsl	r1, r5, #1
   17290:	adc	r7, r7, r9
   17294:	orr	r1, r1, r4, lsr #31
   17298:	str	ip, [sp, #136]	; 0x88
   1729c:	str	r1, [sp, #180]	; 0xb4
   172a0:	mov	r0, r6
   172a4:	mov	r1, r7
   172a8:	ldrd	r6, [sp, #56]	; 0x38
   172ac:	ldrd	r8, [sp, #216]	; 0xd8
   172b0:	lsl	lr, r4, #1
   172b4:	orr	lr, lr, r5, lsr #31
   172b8:	adds	r6, r6, r8
   172bc:	adc	r7, r7, r9
   172c0:	ldrd	r4, [sp, #248]	; 0xf8
   172c4:	mov	r8, r6
   172c8:	mov	r9, r7
   172cc:	ldrd	r6, [sp, #88]	; 0x58
   172d0:	lsl	ip, r3, #1
   172d4:	orr	ip, ip, r2, lsr #31
   172d8:	adds	r6, r6, r4
   172dc:	lsl	r2, r2, #1
   172e0:	str	lr, [sp, #176]	; 0xb0
   172e4:	adc	r7, r7, r5
   172e8:	orr	r3, r2, r3, lsr #31
   172ec:	ldrd	r4, [sp, #192]	; 0xc0
   172f0:	str	r3, [sp, #184]	; 0xb8
   172f4:	ldrd	r2, [sp, #176]	; 0xb0
   172f8:	adds	r4, r4, sl
   172fc:	adc	r5, r5, fp
   17300:	adds	r2, r2, r0
   17304:	adc	r3, r3, r1
   17308:	mov	sl, r2
   1730c:	mov	fp, r3
   17310:	str	ip, [sp, #188]	; 0xbc
   17314:	strd	sl, [sp, #248]	; 0xf8
   17318:	ldrd	sl, [sp, #136]	; 0x88
   1731c:	ldrd	r0, [sp, #184]	; 0xb8
   17320:	strd	r4, [sp, #240]	; 0xf0
   17324:	adds	sl, sl, r6
   17328:	adc	fp, fp, r7
   1732c:	adds	r0, r0, r8
   17330:	adc	r1, r1, r9
   17334:	mov	r6, r0
   17338:	mov	r7, r1
   1733c:	ldrd	r0, [sp, #144]	; 0x90
   17340:	ldrd	r8, [sp, #248]	; 0xf8
   17344:	strd	r6, [sp, #216]	; 0xd8
   17348:	eor	r0, r0, r4
   1734c:	eor	r1, r1, r5
   17350:	mov	r2, r0
   17354:	mov	r3, r1
   17358:	ldrd	r0, [sp, #152]	; 0x98
   1735c:	ldrd	r4, [sp, #168]	; 0xa8
   17360:	lsr	ip, r2, #24
   17364:	eor	r1, r1, r9
   17368:	mov	r7, r1
   1736c:	add	r1, sp, #256	; 0x100
   17370:	eor	r0, r0, r8
   17374:	eor	r4, r4, sl
   17378:	eor	r5, r5, fp
   1737c:	mov	r6, r0
   17380:	strd	sl, [r1]
   17384:	mov	r0, r4
   17388:	ldrd	sl, [sp, #160]	; 0xa0
   1738c:	mov	r1, r5
   17390:	ldrd	r4, [sp, #216]	; 0xd8
   17394:	orr	ip, ip, r3, lsl #8
   17398:	lsr	r3, r3, #24
   1739c:	eor	sl, sl, r4
   173a0:	eor	fp, fp, r5
   173a4:	str	fp, [sp, #168]	; 0xa8
   173a8:	ldrd	r4, [sp, #224]	; 0xe0
   173ac:	mov	fp, r0
   173b0:	str	sl, [sp, #172]	; 0xac
   173b4:	mov	sl, r1
   173b8:	ldrd	r0, [sp, #8]
   173bc:	str	r7, [sp, #152]	; 0x98
   173c0:	str	r6, [sp, #156]	; 0x9c
   173c4:	adds	r0, r0, r4
   173c8:	orr	r3, r3, r2, lsl #8
   173cc:	adc	r1, r1, r5
   173d0:	str	r3, [sp, #148]	; 0x94
   173d4:	ldrd	r4, [sp, #152]	; 0x98
   173d8:	ldrd	r2, [sp, #232]	; 0xe8
   173dc:	str	ip, [sp, #144]	; 0x90
   173e0:	adds	r2, r2, r4
   173e4:	adc	r3, r3, r5
   173e8:	ldrd	r4, [sp, #200]	; 0xc8
   173ec:	ldrd	r6, [sp, #168]	; 0xa8
   173f0:	strd	r2, [sp, #232]	; 0xe8
   173f4:	adds	r4, r4, r6
   173f8:	adc	r5, r5, r7
   173fc:	ldrd	r6, [sp, #208]	; 0xd0
   17400:	strd	r4, [sp, #248]	; 0xf8
   17404:	adds	r6, r6, sl
   17408:	adc	r7, r7, fp
   1740c:	strd	r6, [sp, #224]	; 0xe0
   17410:	ldrd	r6, [sp, #144]	; 0x90
   17414:	adds	r6, r6, r0
   17418:	adc	r7, r7, r1
   1741c:	ldrd	r0, [sp, #136]	; 0x88
   17420:	strd	r6, [sp, #208]	; 0xd0
   17424:	ldrd	r6, [sp, #176]	; 0xb0
   17428:	eor	r6, r6, r2
   1742c:	eor	r7, r7, r3
   17430:	ldrd	r2, [sp, #184]	; 0xb8
   17434:	lsr	lr, r6, #24
   17438:	eor	r2, r2, r4
   1743c:	eor	r3, r3, r5
   17440:	mov	r4, r2
   17444:	mov	r5, r3
   17448:	ldrd	r2, [sp, #192]	; 0xc0
   1744c:	strd	r4, [sp, #200]	; 0xc8
   17450:	ldrd	r4, [sp, #224]	; 0xe0
   17454:	eor	r0, r0, r4
   17458:	eor	r1, r1, r5
   1745c:	ldrd	r4, [sp, #208]	; 0xd0
   17460:	eor	r2, r2, r4
   17464:	eor	r3, r3, r5
   17468:	ldrd	r4, [sp, #32]
   1746c:	strd	r2, [sp, #160]	; 0xa0
   17470:	add	r3, sp, #264	; 0x108
   17474:	adds	r4, r4, r8
   17478:	adc	r5, r5, r9
   1747c:	lsr	ip, r2, #16
   17480:	strd	r4, [r3]
   17484:	add	r3, sp, #256	; 0x100
   17488:	ldrd	r4, [sp, #72]	; 0x48
   1748c:	ldrd	r2, [r3]
   17490:	ldrd	r8, [sp, #216]	; 0xd8
   17494:	adds	r4, r4, r2
   17498:	adc	r5, r5, r3
   1749c:	add	r3, sp, #256	; 0x100
   174a0:	strd	r4, [r3]
   174a4:	ldrd	r4, [sp, #96]	; 0x60
   174a8:	adds	r4, r4, r8
   174ac:	adc	r5, r5, r9
   174b0:	ldrd	r8, [sp, #160]	; 0xa0
   174b4:	orr	r3, ip, r9, lsl #16
   174b8:	str	r3, [sp, #136]	; 0x88
   174bc:	ldr	r3, [sp, #200]	; 0xc8
   174c0:	lsr	ip, r3, #24
   174c4:	lsr	r3, r9, #16
   174c8:	orr	r3, r3, r8, lsl #16
   174cc:	str	r3, [sp, #140]	; 0x8c
   174d0:	orr	r3, lr, r7, lsl #8
   174d4:	ldrd	r8, [sp, #136]	; 0x88
   174d8:	str	r3, [sp, #160]	; 0xa0
   174dc:	ldrd	r2, [sp, #240]	; 0xf0
   174e0:	lsr	lr, r0, #24
   174e4:	adds	r2, r2, r8
   174e8:	adc	r3, r3, r9
   174ec:	ldrd	r8, [sp, #144]	; 0x90
   174f0:	strd	r2, [sp, #216]	; 0xd8
   174f4:	eor	r9, r9, r3
   174f8:	mov	r3, r9
   174fc:	ldr	r9, [sp, #204]	; 0xcc
   17500:	eor	r8, r8, r2
   17504:	mov	r2, r8
   17508:	orr	ip, ip, r9, lsl #8
   1750c:	str	ip, [sp, #176]	; 0xb0
   17510:	orr	ip, lr, r1, lsl #8
   17514:	str	ip, [sp, #184]	; 0xb8
   17518:	lsl	ip, r3, #1
   1751c:	orr	ip, ip, r8, lsr #31
   17520:	str	ip, [sp, #196]	; 0xc4
   17524:	lsr	ip, r7, #24
   17528:	orr	ip, ip, r6, lsl #8
   1752c:	str	ip, [sp, #164]	; 0xa4
   17530:	add	ip, sp, #264	; 0x108
   17534:	ldrd	r6, [sp, #160]	; 0xa0
   17538:	ldrd	r8, [ip]
   1753c:	lsr	r1, r1, #24
   17540:	orr	r1, r1, r0, lsl #8
   17544:	adds	r8, r8, r6
   17548:	adc	r9, r9, r7
   1754c:	ldrd	r6, [sp, #152]	; 0x98
   17550:	strd	r8, [sp, #152]	; 0x98
   17554:	str	r1, [sp, #188]	; 0xbc
   17558:	eor	r8, r8, r6
   1755c:	eor	r9, r9, r7
   17560:	mov	r6, r8
   17564:	mov	r7, r9
   17568:	ldrd	r8, [sp, #200]	; 0xc8
   1756c:	add	r1, sp, #256	; 0x100
   17570:	lsl	r2, r2, #1
   17574:	lsr	ip, r9, #24
   17578:	orr	ip, ip, r8, lsl #8
   1757c:	str	ip, [sp, #180]	; 0xb4
   17580:	ldrd	r8, [sp, #176]	; 0xb0
   17584:	ldrd	r0, [r1]
   17588:	lsr	lr, r6, #16
   1758c:	adds	r4, r4, r8
   17590:	adc	r5, r5, r9
   17594:	ldrd	r8, [sp, #184]	; 0xb8
   17598:	strd	r4, [sp, #240]	; 0xf0
   1759c:	orr	r3, r2, r3, lsr #31
   175a0:	adds	r0, r0, r8
   175a4:	adc	r1, r1, r9
   175a8:	mov	r8, r0
   175ac:	mov	r9, r1
   175b0:	ldrd	r0, [sp, #168]	; 0xa8
   175b4:	str	r3, [sp, #192]	; 0xc0
   175b8:	orr	r3, lr, r7, lsl #16
   175bc:	eor	r1, r1, r5
   175c0:	mov	r5, r1
   175c4:	eor	r0, r0, r4
   175c8:	add	r1, sp, #256	; 0x100
   175cc:	mov	r4, r0
   175d0:	mov	r0, r8
   175d4:	eor	r0, r0, sl
   175d8:	strd	r8, [r1]
   175dc:	mov	r1, r9
   175e0:	str	r3, [sp, #144]	; 0x90
   175e4:	eor	r1, r1, fp
   175e8:	lsr	ip, r4, #16
   175ec:	lsr	r3, r7, #16
   175f0:	orr	r2, ip, r5, lsl #16
   175f4:	orr	r3, r3, r6, lsl #16
   175f8:	lsr	lr, r0, #16
   175fc:	lsr	ip, r5, #16
   17600:	str	r3, [sp, #148]	; 0x94
   17604:	orr	r3, ip, r4, lsl #16
   17608:	orr	ip, lr, r1, lsl #16
   1760c:	lsr	r1, r1, #16
   17610:	orr	r1, r1, r0, lsl #16
   17614:	ldrd	sl, [sp, #144]	; 0x90
   17618:	str	r1, [sp, #172]	; 0xac
   1761c:	ldrd	r0, [sp, #232]	; 0xe8
   17620:	str	ip, [sp, #168]	; 0xa8
   17624:	ldrd	r4, [sp, #208]	; 0xd0
   17628:	adds	r0, r0, sl
   1762c:	adc	r1, r1, fp
   17630:	ldrd	sl, [sp, #248]	; 0xf8
   17634:	mov	r6, r0
   17638:	mov	r7, r1
   1763c:	adds	sl, sl, r2
   17640:	adc	fp, fp, r3
   17644:	ldrd	r0, [sp, #168]	; 0xa8
   17648:	strd	sl, [sp, #200]	; 0xc8
   1764c:	ldrd	sl, [sp, #224]	; 0xe0
   17650:	ldrd	r8, [sp, #152]	; 0x98
   17654:	adds	r0, r0, sl
   17658:	adc	r1, r1, fp
   1765c:	ldrd	sl, [sp, #96]	; 0x60
   17660:	adds	sl, sl, r4
   17664:	adc	fp, fp, r5
   17668:	strd	sl, [sp, #232]	; 0xe8
   1766c:	ldrd	sl, [sp, #120]	; 0x78
   17670:	adds	r8, r8, sl
   17674:	adc	r9, r9, fp
   17678:	ldrd	sl, [sp, #192]	; 0xc0
   1767c:	strd	r6, [sp, #208]	; 0xd0
   17680:	adds	r4, sl, r8
   17684:	adc	r5, fp, r9
   17688:	mov	r8, r4
   1768c:	mov	r9, r5
   17690:	strd	r8, [sp, #192]	; 0xc0
   17694:	eor	r8, r8, r2
   17698:	eor	r9, r9, r3
   1769c:	mov	r4, r8
   176a0:	ldrd	r2, [sp, #176]	; 0xb0
   176a4:	mov	r5, r9
   176a8:	ldrd	r8, [sp, #200]	; 0xc8
   176ac:	str	r5, [sp, #176]	; 0xb0
   176b0:	str	r4, [sp, #180]	; 0xb4
   176b4:	eor	r2, r2, r8
   176b8:	eor	r3, r3, r9
   176bc:	ldrd	r8, [sp, #160]	; 0xa0
   176c0:	ldrd	r4, [sp, #184]	; 0xb8
   176c4:	lsl	ip, r3, #1
   176c8:	eor	r8, r8, r6
   176cc:	eor	r9, r9, r7
   176d0:	mov	r6, r8
   176d4:	mov	r7, r9
   176d8:	ldrd	r8, [sp, #176]	; 0xb0
   176dc:	eor	r5, r5, r1
   176e0:	eor	r4, r4, r0
   176e4:	adds	r8, r8, r0
   176e8:	adc	r9, r9, r1
   176ec:	orr	r1, ip, r2, lsr #31
   176f0:	add	ip, sp, #256	; 0x100
   176f4:	str	r1, [sp, #164]	; 0xa4
   176f8:	mov	r0, sl
   176fc:	mov	r1, fp
   17700:	eor	r0, r0, r8
   17704:	ldrd	sl, [sp, #8]
   17708:	strd	r8, [sp, #248]	; 0xf8
   1770c:	eor	r1, r1, r9
   17710:	ldrd	r8, [ip]
   17714:	lsl	r2, r2, #1
   17718:	orr	r3, r2, r3, lsr #31
   1771c:	adds	sl, sl, r8
   17720:	str	r3, [sp, #160]	; 0xa0
   17724:	adc	fp, fp, r9
   17728:	ldrd	r8, [sp, #160]	; 0xa0
   1772c:	lsl	r3, r7, #1
   17730:	orr	r3, r3, r6, lsr #31
   17734:	adds	r8, r8, sl
   17738:	adc	r9, r9, fp
   1773c:	str	r3, [sp, #156]	; 0x9c
   17740:	strd	r8, [sp, #224]	; 0xe0
   17744:	ldrd	r2, [sp, #240]	; 0xf0
   17748:	ldrd	r8, [sp, #80]	; 0x50
   1774c:	lsl	lr, r5, #1
   17750:	lsl	ip, r6, #1
   17754:	adds	r8, r8, r2
   17758:	adc	r9, r9, r3
   1775c:	mov	sl, r8
   17760:	ldrd	r2, [sp, #224]	; 0xe0
   17764:	mov	fp, r9
   17768:	ldrd	r8, [sp, #136]	; 0x88
   1776c:	orr	ip, ip, r7, lsr #31
   17770:	orr	r7, lr, r4, lsr #31
   17774:	eor	r8, r8, r2
   17778:	eor	r9, r9, r3
   1777c:	mov	r2, r8
   17780:	mov	r3, r9
   17784:	str	r7, [sp, #140]	; 0x8c
   17788:	ldrd	r8, [sp, #64]	; 0x40
   1778c:	ldrd	r6, [sp, #192]	; 0xc0
   17790:	str	ip, [sp, #152]	; 0x98
   17794:	lsr	ip, r0, #24
   17798:	adds	r8, r8, r6
   1779c:	adc	r9, r9, r7
   177a0:	ldrd	r6, [sp, #152]	; 0x98
   177a4:	orr	ip, ip, r1, lsl #8
   177a8:	lsr	r1, r1, #24
   177ac:	adds	r6, r6, sl
   177b0:	orr	r1, r1, r0, lsl #8
   177b4:	adc	r7, r7, fp
   177b8:	lsl	lr, r4, #1
   177bc:	str	r1, [sp, #188]	; 0xbc
   177c0:	add	r1, sp, #256	; 0x100
   177c4:	orr	r5, lr, r5, lsr #31
   177c8:	strd	r8, [sp, #240]	; 0xf0
   177cc:	str	r5, [sp, #136]	; 0x88
   177d0:	str	ip, [sp, #184]	; 0xb8
   177d4:	str	r3, [sp, #192]	; 0xc0
   177d8:	strd	r6, [r1]
   177dc:	ldrd	r4, [sp, #168]	; 0xa8
   177e0:	ldrd	sl, [sp, #232]	; 0xe8
   177e4:	ldrd	r0, [sp, #184]	; 0xb8
   177e8:	eor	r4, r4, r6
   177ec:	eor	r5, r5, r7
   177f0:	ldrd	r6, [sp, #136]	; 0x88
   177f4:	str	r2, [sp, #196]	; 0xc4
   177f8:	add	ip, sp, #264	; 0x108
   177fc:	adds	sl, sl, r6
   17800:	adc	fp, fp, r7
   17804:	ldrd	r6, [sp, #240]	; 0xf0
   17808:	strd	sl, [sp, #232]	; 0xe8
   1780c:	mov	r8, r5
   17810:	adds	r6, r6, r0
   17814:	adc	r7, r7, r1
   17818:	ldrd	r0, [sp, #144]	; 0x90
   1781c:	strd	r6, [sp, #240]	; 0xf0
   17820:	mov	r9, r4
   17824:	eor	r0, r0, sl
   17828:	eor	r1, r1, fp
   1782c:	mov	r2, r0
   17830:	mov	r3, r1
   17834:	mov	r0, r6
   17838:	mov	r1, r7
   1783c:	ldrd	r6, [sp, #176]	; 0xb0
   17840:	str	r3, [sp, #144]	; 0x90
   17844:	str	r2, [sp, #148]	; 0x94
   17848:	eor	r6, r6, r0
   1784c:	eor	r7, r7, r1
   17850:	mov	sl, r6
   17854:	ldrd	r0, [sp, #192]	; 0xc0
   17858:	mov	fp, r7
   1785c:	ldrd	r6, [sp, #208]	; 0xd0
   17860:	lsr	r3, sl, #16
   17864:	orr	r3, r3, fp, lsl #16
   17868:	adds	r6, r6, r0
   1786c:	adc	r7, r7, r1
   17870:	ldrd	r0, [sp, #160]	; 0xa0
   17874:	strd	r6, [ip]
   17878:	str	r3, [sp, #160]	; 0xa0
   1787c:	eor	r0, r0, r6
   17880:	eor	r1, r1, r7
   17884:	mov	r6, r0
   17888:	mov	r7, r1
   1788c:	ldrd	r0, [sp, #216]	; 0xd8
   17890:	ldrd	r2, [sp, #200]	; 0xc8
   17894:	lsr	ip, r6, #24
   17898:	adds	r0, r0, r5
   1789c:	adc	r1, r1, r4
   178a0:	lsr	r5, fp, #16
   178a4:	strd	r0, [sp, #216]	; 0xd8
   178a8:	ldrd	r0, [sp, #144]	; 0x90
   178ac:	orr	ip, ip, r7, lsl #8
   178b0:	add	lr, sp, #256	; 0x100
   178b4:	adds	r2, r2, r0
   178b8:	adc	r3, r3, r1
   178bc:	ldrd	r0, [sp, #152]	; 0x98
   178c0:	strd	r2, [sp, #208]	; 0xd0
   178c4:	ldrd	r2, [sp, #216]	; 0xd8
   178c8:	eor	r0, r0, r2
   178cc:	eor	r1, r1, r3
   178d0:	orr	r3, r5, sl, lsl #16
   178d4:	str	r3, [sp, #164]	; 0xa4
   178d8:	strd	r0, [sp, #176]	; 0xb0
   178dc:	ldrd	r2, [sp, #136]	; 0x88
   178e0:	ldrd	r0, [sp, #208]	; 0xd0
   178e4:	ldrd	sl, [sp, #56]	; 0x38
   178e8:	ldrd	r4, [sp, #160]	; 0xa0
   178ec:	eor	r2, r2, r0
   178f0:	eor	r3, r3, r1
   178f4:	mov	r0, r2
   178f8:	mov	r1, r3
   178fc:	ldrd	r2, [sp, #224]	; 0xe0
   17900:	adds	sl, sl, r2
   17904:	adc	fp, fp, r3
   17908:	ldrd	r2, [sp, #248]	; 0xf8
   1790c:	str	ip, [sp, #200]	; 0xc8
   17910:	lsr	ip, r7, #24
   17914:	adds	r2, r2, r4
   17918:	adc	r3, r3, r5
   1791c:	ldrd	r4, [sp, #184]	; 0xb8
   17920:	strd	r2, [sp, #248]	; 0xf8
   17924:	eor	r4, r4, r2
   17928:	eor	r5, r5, r3
   1792c:	mov	r2, r4
   17930:	mov	r3, r5
   17934:	ldrd	r4, [lr]
   17938:	strd	r2, [sp, #136]	; 0x88
   1793c:	orr	r3, ip, r6, lsl #8
   17940:	str	r3, [sp, #204]	; 0xcc
   17944:	ldr	r3, [sp, #176]	; 0xb0
   17948:	ldrd	r6, [sp, #24]
   1794c:	lsr	ip, r3, #24
   17950:	ldrd	r2, [sp, #200]	; 0xc8
   17954:	adds	r2, r2, sl
   17958:	adc	r3, r3, fp
   1795c:	adds	r6, r6, r4
   17960:	adc	r7, r7, r5
   17964:	strd	r2, [lr]
   17968:	strd	r6, [sp, #184]	; 0xb8
   1796c:	ldrd	r6, [sp, #192]	; 0xc0
   17970:	ldrd	sl, [sp, #232]	; 0xe8
   17974:	ldrd	r4, [sp, #128]	; 0x80
   17978:	eor	r7, r7, r3
   1797c:	ldr	r3, [sp, #180]	; 0xb4
   17980:	eor	r6, r6, r2
   17984:	adds	r4, r4, sl
   17988:	orr	r3, ip, r3, lsl #8
   1798c:	str	r3, [sp, #168]	; 0xa8
   17990:	ldrd	r2, [sp, #136]	; 0x88
   17994:	adc	r5, r5, fp
   17998:	mov	sl, r4
   1799c:	mov	r4, r2
   179a0:	mov	fp, r5
   179a4:	lsl	ip, r3, #1
   179a8:	mov	r5, r3
   179ac:	lsl	lr, r4, #1
   179b0:	orr	r3, ip, r2, lsr #31
   179b4:	str	r3, [sp, #156]	; 0x9c
   179b8:	lsr	ip, r0, #24
   179bc:	orr	r3, lr, r5, lsr #31
   179c0:	str	r3, [sp, #152]	; 0x98
   179c4:	orr	r3, ip, r1, lsl #8
   179c8:	lsr	r1, r1, #24
   179cc:	str	r3, [sp, #136]	; 0x88
   179d0:	orr	r3, r1, r0, lsl #8
   179d4:	ldrd	r0, [sp, #176]	; 0xb0
   179d8:	str	r3, [sp, #140]	; 0x8c
   179dc:	lsr	ip, r6, #16
   179e0:	lsr	r3, r1, #24
   179e4:	orr	r3, r3, r0, lsl #8
   179e8:	str	r3, [sp, #172]	; 0xac
   179ec:	ldrd	r0, [sp, #168]	; 0xa8
   179f0:	ldrd	r2, [sp, #184]	; 0xb8
   179f4:	orr	ip, ip, r7, lsl #16
   179f8:	str	ip, [sp, #184]	; 0xb8
   179fc:	adds	r2, r2, r0
   17a00:	adc	r3, r3, r1
   17a04:	ldrd	r0, [sp, #136]	; 0x88
   17a08:	strd	r2, [sp, #232]	; 0xe8
   17a0c:	lsr	ip, r7, #16
   17a10:	adds	r0, r0, sl
   17a14:	adc	r1, r1, fp
   17a18:	mov	sl, r0
   17a1c:	mov	fp, r1
   17a20:	mov	r0, r2
   17a24:	mov	r1, r3
   17a28:	ldrd	r2, [sp, #104]	; 0x68
   17a2c:	eor	r0, r0, r8
   17a30:	eor	r1, r1, r9
   17a34:	orr	ip, ip, r6, lsl #16
   17a38:	ldrd	r8, [sp, #152]	; 0x98
   17a3c:	str	ip, [sp, #188]	; 0xbc
   17a40:	adds	r2, r2, sl
   17a44:	ldrd	r6, [sp, #184]	; 0xb8
   17a48:	lsr	ip, r0, #16
   17a4c:	adc	r3, r3, fp
   17a50:	orr	ip, ip, r1, lsl #16
   17a54:	adds	r8, r8, r2
   17a58:	lsr	r1, r1, #16
   17a5c:	adc	r9, r9, r3
   17a60:	orr	r1, r1, r0, lsl #16
   17a64:	mov	r2, r8
   17a68:	mov	r3, r9
   17a6c:	str	ip, [sp, #176]	; 0xb0
   17a70:	eor	r6, r6, r8
   17a74:	str	r1, [sp, #180]	; 0xb4
   17a78:	eor	r7, r7, r9
   17a7c:	ldrd	r0, [sp, #216]	; 0xd8
   17a80:	ldrd	r8, [sp, #176]	; 0xb0
   17a84:	str	r7, [sp, #192]	; 0xc0
   17a88:	str	r6, [sp, #196]	; 0xc4
   17a8c:	adds	r8, r8, r0
   17a90:	adc	r9, r9, r1
   17a94:	mov	r4, r8
   17a98:	mov	r5, r9
   17a9c:	ldrd	r8, [sp, #144]	; 0x90
   17aa0:	ldrd	r6, [sp, #152]	; 0x98
   17aa4:	ldrd	r0, [sp, #168]	; 0xa8
   17aa8:	eor	r8, r8, sl
   17aac:	eor	r9, r9, fp
   17ab0:	mov	sl, r8
   17ab4:	mov	fp, r9
   17ab8:	ldrd	r8, [sp, #192]	; 0xc0
   17abc:	lsr	ip, sl, #16
   17ac0:	orr	ip, ip, fp, lsl #16
   17ac4:	adds	r8, r8, r4
   17ac8:	adc	r9, r9, r5
   17acc:	eor	r6, r6, r8
   17ad0:	strd	r8, [sp, #216]	; 0xd8
   17ad4:	eor	r7, r7, r9
   17ad8:	ldrd	r8, [sp, #88]	; 0x58
   17adc:	str	ip, [sp, #144]	; 0x90
   17ae0:	lsr	ip, fp, #16
   17ae4:	adds	r8, r8, r2
   17ae8:	adc	r9, r9, r3
   17aec:	eor	r1, r1, r5
   17af0:	orr	r3, ip, sl, lsl #16
   17af4:	mov	r5, r7
   17af8:	ldrd	sl, [sp, #240]	; 0xf0
   17afc:	eor	r0, r0, r4
   17b00:	mov	r7, r9
   17b04:	mov	r4, r6
   17b08:	mov	r6, r8
   17b0c:	ldrd	r8, [sp, #112]	; 0x70
   17b10:	str	r3, [sp, #148]	; 0x94
   17b14:	lsr	ip, r5, #24
   17b18:	adds	r8, r8, sl
   17b1c:	adc	r9, r9, fp
   17b20:	ldrd	sl, [sp, #208]	; 0xd0
   17b24:	strd	r8, [sp, #168]	; 0xa8
   17b28:	ldrd	r8, [sp, #144]	; 0x90
   17b2c:	lsr	r3, r4, #24
   17b30:	orr	r3, r3, r5, lsl #8
   17b34:	adds	sl, sl, r8
   17b38:	adc	fp, fp, r9
   17b3c:	ldrd	r8, [sp, #136]	; 0x88
   17b40:	orr	ip, ip, r4, lsl #8
   17b44:	str	r3, [sp, #152]	; 0x98
   17b48:	str	ip, [sp, #156]	; 0x9c
   17b4c:	eor	r8, r8, sl
   17b50:	eor	r9, r9, fp
   17b54:	strd	sl, [sp, #224]	; 0xe0
   17b58:	ldrd	sl, [sp, #152]	; 0x98
   17b5c:	ldrd	r4, [sp, #192]	; 0xc0
   17b60:	lsl	ip, r1, #1
   17b64:	adds	sl, sl, r6
   17b68:	adc	fp, fp, r7
   17b6c:	eor	r5, r5, fp
   17b70:	mov	r7, fp
   17b74:	orr	fp, ip, r0, lsr #31
   17b78:	lsl	ip, r9, #1
   17b7c:	orr	ip, ip, r8, lsr #31
   17b80:	mov	r6, sl
   17b84:	str	ip, [sp, #140]	; 0x8c
   17b88:	add	ip, sp, #264	; 0x108
   17b8c:	strd	r6, [sp, #240]	; 0xf0
   17b90:	lsl	r2, r8, #1
   17b94:	ldrd	r6, [sp, #184]	; 0xb8
   17b98:	mov	r3, r9
   17b9c:	ldrd	r8, [ip]
   17ba0:	lsl	r0, r0, #1
   17ba4:	eor	r4, r4, sl
   17ba8:	orr	sl, r0, r1, lsr #31
   17bac:	ldrd	r0, [sp, #168]	; 0xa8
   17bb0:	adds	r8, r8, r6
   17bb4:	adc	r9, r9, r7
   17bb8:	lsr	ip, r4, #16
   17bbc:	ldrd	r6, [sp, #144]	; 0x90
   17bc0:	orr	r3, r2, r3, lsr #31
   17bc4:	adds	r0, r0, sl
   17bc8:	str	r3, [sp, #136]	; 0x88
   17bcc:	orr	r3, ip, r5, lsl #16
   17bd0:	adc	r1, r1, fp
   17bd4:	str	r3, [sp, #144]	; 0x90
   17bd8:	lsr	r3, r5, #16
   17bdc:	eor	r7, r7, r1
   17be0:	orr	r3, r3, r4, lsl #16
   17be4:	strd	r0, [sp, #192]	; 0xc0
   17be8:	eor	r6, r6, r0
   17bec:	str	r7, [sp, #168]	; 0xa8
   17bf0:	str	r3, [sp, #148]	; 0x94
   17bf4:	ldrd	r4, [sp, #216]	; 0xd8
   17bf8:	str	r6, [sp, #172]	; 0xac
   17bfc:	ldrd	r6, [sp, #144]	; 0x90
   17c00:	ldrd	r0, [sp, #168]	; 0xa8
   17c04:	adds	r4, r4, r6
   17c08:	adc	r5, r5, r7
   17c0c:	adds	r2, r8, r0
   17c10:	adc	r3, r9, r1
   17c14:	strd	r4, [sp, #208]	; 0xd0
   17c18:	strd	r2, [sp, #216]	; 0xd8
   17c1c:	add	r3, sp, #256	; 0x100
   17c20:	ldrd	r4, [sp, #72]	; 0x48
   17c24:	ldrd	r0, [r3]
   17c28:	ldrd	r6, [sp, #136]	; 0x88
   17c2c:	ldrd	r2, [sp, #200]	; 0xc8
   17c30:	adds	r4, r4, r0
   17c34:	adc	r5, r5, r1
   17c38:	mov	r0, r4
   17c3c:	adds	r4, r6, r0
   17c40:	mov	r1, r5
   17c44:	adc	r5, r7, r1
   17c48:	mov	r0, r4
   17c4c:	mov	r1, r5
   17c50:	ldrd	r4, [sp, #176]	; 0xb0
   17c54:	eor	r3, r3, r9
   17c58:	eor	r2, r2, r8
   17c5c:	eor	r4, r4, r0
   17c60:	eor	r5, r5, r1
   17c64:	mov	r8, r5
   17c68:	mov	r9, r4
   17c6c:	ldrd	r4, [sp, #248]	; 0xf8
   17c70:	lsl	ip, r3, #1
   17c74:	orr	ip, ip, r2, lsr #31
   17c78:	lsl	r2, r2, #1
   17c7c:	adds	r4, r4, r8
   17c80:	orr	r3, r2, r3, lsr #31
   17c84:	str	r3, [sp, #136]	; 0x88
   17c88:	adc	r5, r5, r9
   17c8c:	mov	r2, r6
   17c90:	mov	r3, r7
   17c94:	eor	r2, r2, r4
   17c98:	eor	r3, r3, r5
   17c9c:	strd	r4, [sp, #248]	; 0xf8
   17ca0:	ldrd	r6, [sp, #16]
   17ca4:	mov	r4, r2
   17ca8:	mov	r5, r3
   17cac:	ldrd	r2, [sp, #232]	; 0xe8
   17cb0:	str	ip, [sp, #140]	; 0x8c
   17cb4:	lsr	ip, r4, #24
   17cb8:	adds	r6, r6, r2
   17cbc:	adc	r7, r7, r3
   17cc0:	mov	r2, r6
   17cc4:	mov	r3, r7
   17cc8:	ldrd	r6, [sp, #136]	; 0x88
   17ccc:	adds	r6, r6, r2
   17cd0:	adc	r7, r7, r3
   17cd4:	ldrd	r2, [sp, #160]	; 0xa0
   17cd8:	strd	r6, [sp, #160]	; 0xa0
   17cdc:	eor	r6, r6, r2
   17ce0:	eor	r7, r7, r3
   17ce4:	ldrd	r2, [sp, #40]	; 0x28
   17ce8:	str	r7, [sp, #176]	; 0xb0
   17cec:	str	r6, [sp, #180]	; 0xb4
   17cf0:	adds	r2, r2, r0
   17cf4:	adc	r3, r3, r1
   17cf8:	mov	r1, r3
   17cfc:	orr	r3, ip, r5, lsl #8
   17d00:	lsr	ip, r5, #24
   17d04:	str	r3, [sp, #184]	; 0xb8
   17d08:	orr	r3, ip, r4, lsl #8
   17d0c:	str	r3, [sp, #188]	; 0xbc
   17d10:	ldrd	r6, [sp, #184]	; 0xb8
   17d14:	ldrd	r4, [sp, #176]	; 0xb0
   17d18:	add	ip, sp, #256	; 0x100
   17d1c:	adds	r6, r6, r2
   17d20:	ldrd	r2, [sp, #224]	; 0xe0
   17d24:	adc	r7, r7, r1
   17d28:	mov	r0, r6
   17d2c:	adds	r2, r2, r4
   17d30:	mov	r1, r7
   17d34:	ldrd	r6, [sp, #216]	; 0xd8
   17d38:	adc	r3, r3, r5
   17d3c:	strd	r0, [ip]
   17d40:	eor	r0, r0, r8
   17d44:	eor	r1, r1, r9
   17d48:	eor	r6, r6, sl
   17d4c:	eor	r7, r7, fp
   17d50:	mov	r4, r0
   17d54:	mov	r5, r1
   17d58:	ldrd	r0, [sp, #136]	; 0x88
   17d5c:	strd	r2, [sp, #200]	; 0xc8
   17d60:	ldrd	sl, [sp, #192]	; 0xc0
   17d64:	ldrd	r8, [sp, #48]	; 0x30
   17d68:	eor	r0, r0, r2
   17d6c:	eor	r1, r1, r3
   17d70:	adds	r8, r8, sl
   17d74:	ldrd	r2, [sp, #160]	; 0xa0
   17d78:	adc	r9, r9, fp
   17d7c:	ldrd	sl, [sp, #32]
   17d80:	lsr	lr, r6, #24
   17d84:	lsr	ip, r4, #16
   17d88:	adds	r2, r2, sl
   17d8c:	adc	r3, r3, fp
   17d90:	mov	sl, r2
   17d94:	mov	fp, r3
   17d98:	orr	r3, lr, r7, lsl #8
   17d9c:	strd	sl, [sp, #136]	; 0x88
   17da0:	str	r3, [sp, #160]	; 0xa0
   17da4:	ldrd	sl, [sp, #152]	; 0x98
   17da8:	ldrd	r2, [sp, #208]	; 0xd0
   17dac:	orr	ip, ip, r5, lsl #16
   17db0:	str	ip, [sp, #192]	; 0xc0
   17db4:	lsr	ip, r7, #24
   17db8:	orr	ip, ip, r6, lsl #8
   17dbc:	str	ip, [sp, #164]	; 0xa4
   17dc0:	eor	sl, sl, r2
   17dc4:	eor	fp, fp, r3
   17dc8:	mov	r2, sl
   17dcc:	mov	r3, fp
   17dd0:	ldrd	sl, [sp, #160]	; 0xa0
   17dd4:	lsr	ip, r0, #24
   17dd8:	orr	ip, ip, r1, lsl #8
   17ddc:	adds	sl, sl, r8
   17de0:	adc	fp, fp, r9
   17de4:	str	ip, [sp, #152]	; 0x98
   17de8:	mov	r6, sl
   17dec:	mov	r7, fp
   17df0:	lsr	ip, r5, #16
   17df4:	ldrd	sl, [sp, #168]	; 0xa8
   17df8:	orr	ip, ip, r4, lsl #16
   17dfc:	str	ip, [sp, #196]	; 0xc4
   17e00:	strd	r6, [sp, #168]	; 0xa8
   17e04:	ldrd	r4, [sp, #248]	; 0xf8
   17e08:	eor	r6, r6, sl
   17e0c:	eor	r7, r7, fp
   17e10:	ldrd	sl, [sp, #192]	; 0xc0
   17e14:	ldrd	r8, [sp, #184]	; 0xb8
   17e18:	lsr	r1, r1, #24
   17e1c:	adds	r4, r4, sl
   17e20:	adc	r5, r5, fp
   17e24:	lsl	lr, r3, #1
   17e28:	eor	r9, r9, r5
   17e2c:	orr	r1, r1, r0, lsl #8
   17e30:	strd	r4, [sp, #248]	; 0xf8
   17e34:	str	r1, [sp, #156]	; 0x9c
   17e38:	mov	r5, r9
   17e3c:	orr	r9, lr, r2, lsr #31
   17e40:	lsl	r2, r2, #1
   17e44:	ldrd	sl, [sp, #152]	; 0x98
   17e48:	ldrd	r0, [sp, #136]	; 0x88
   17e4c:	eor	r8, r8, r4
   17e50:	orr	r3, r2, r3, lsr #31
   17e54:	mov	r4, r8
   17e58:	str	r9, [sp, #140]	; 0x8c
   17e5c:	str	r3, [sp, #136]	; 0x88
   17e60:	ldrd	r8, [sp, #72]	; 0x48
   17e64:	ldrd	r2, [sp, #240]	; 0xf0
   17e68:	adds	r0, r0, sl
   17e6c:	adc	r1, r1, fp
   17e70:	adds	r8, r8, r2
   17e74:	adc	r9, r9, r3
   17e78:	mov	sl, r0
   17e7c:	ldrd	r2, [sp, #168]	; 0xa8
   17e80:	mov	fp, r1
   17e84:	ldrd	r0, [sp, #176]	; 0xb0
   17e88:	strd	r8, [sp, #176]	; 0xb0
   17e8c:	ldrd	r8, [sp, #56]	; 0x38
   17e90:	lsr	ip, r6, #16
   17e94:	lsl	lr, r5, #1
   17e98:	adds	r2, r2, r8
   17e9c:	adc	r3, r3, r9
   17ea0:	strd	sl, [sp, #232]	; 0xe8
   17ea4:	eor	r0, r0, sl
   17ea8:	mov	r9, r3
   17eac:	orr	sl, ip, r7, lsl #16
   17eb0:	orr	r3, lr, r4, lsr #31
   17eb4:	lsr	ip, r7, #16
   17eb8:	eor	r1, r1, fp
   17ebc:	str	r3, [sp, #172]	; 0xac
   17ec0:	orr	fp, ip, r6, lsl #16
   17ec4:	ldrd	r6, [sp, #136]	; 0x88
   17ec8:	lsr	ip, r0, #16
   17ecc:	adds	r6, r6, r2
   17ed0:	adc	r7, r7, r9
   17ed4:	mov	r8, r6
   17ed8:	mov	r9, r7
   17edc:	ldrd	r6, [sp, #216]	; 0xd8
   17ee0:	ldrd	r2, [sp, #160]	; 0xa0
   17ee4:	adds	r6, r6, sl
   17ee8:	adc	r7, r7, fp
   17eec:	eor	r2, r2, r6
   17ef0:	eor	r3, r3, r7
   17ef4:	strd	r6, [sp, #224]	; 0xe0
   17ef8:	orr	r6, ip, r1, lsl #16
   17efc:	lsl	ip, r4, #1
   17f00:	strd	r2, [sp, #160]	; 0xa0
   17f04:	orr	r3, ip, r5, lsr #31
   17f08:	str	r3, [sp, #168]	; 0xa8
   17f0c:	ldrd	r4, [sp, #176]	; 0xb0
   17f10:	ldrd	r2, [sp, #168]	; 0xa8
   17f14:	lsr	r1, r1, #16
   17f18:	orr	r7, r1, r0, lsl #16
   17f1c:	adds	r4, r4, r2
   17f20:	adc	r5, r5, r3
   17f24:	ldrd	r2, [sp, #160]	; 0xa0
   17f28:	strd	r4, [sp, #216]	; 0xd8
   17f2c:	eor	r4, r4, sl
   17f30:	eor	r5, r5, fp
   17f34:	mov	sl, r4
   17f38:	mov	fp, r5
   17f3c:	ldrd	r4, [sp, #200]	; 0xc8
   17f40:	eor	r0, r6, r8
   17f44:	eor	r1, r7, r9
   17f48:	adds	r4, r4, r6
   17f4c:	str	r1, [sp, #176]	; 0xb0
   17f50:	str	r0, [sp, #180]	; 0xb4
   17f54:	adc	r5, r5, r7
   17f58:	ldrd	r0, [sp, #248]	; 0xf8
   17f5c:	mov	r6, r4
   17f60:	mov	r7, r5
   17f64:	str	sl, [sp, #164]	; 0xa4
   17f68:	ldrd	r4, [sp, #176]	; 0xb0
   17f6c:	mov	sl, r2
   17f70:	str	fp, [sp, #160]	; 0xa0
   17f74:	lsl	ip, r3, #1
   17f78:	mov	fp, r3
   17f7c:	orr	r3, ip, r2, lsr #31
   17f80:	lsl	r2, sl, #1
   17f84:	adds	r4, r4, r0
   17f88:	str	r3, [sp, #188]	; 0xbc
   17f8c:	orr	r3, r2, fp, lsr #31
   17f90:	adc	r5, r5, r1
   17f94:	str	r3, [sp, #184]	; 0xb8
   17f98:	ldrd	r0, [sp, #48]	; 0x30
   17f9c:	ldrd	r2, [sp, #232]	; 0xe8
   17fa0:	ldrd	sl, [sp, #136]	; 0x88
   17fa4:	strd	r4, [sp, #248]	; 0xf8
   17fa8:	adds	r0, r0, r2
   17fac:	adc	r1, r1, r3
   17fb0:	mov	r2, r0
   17fb4:	mov	r3, r1
   17fb8:	eor	sl, sl, r4
   17fbc:	ldrd	r0, [sp, #160]	; 0xa0
   17fc0:	eor	fp, fp, r5
   17fc4:	add	ip, sp, #272	; 0x110
   17fc8:	strd	sl, [sp, #200]	; 0xc8
   17fcc:	ldrd	sl, [sp, #168]	; 0xa8
   17fd0:	adds	r0, r0, r6
   17fd4:	adc	r1, r1, r7
   17fd8:	eor	sl, sl, r0
   17fdc:	eor	fp, fp, r1
   17fe0:	strd	r0, [sp, #232]	; 0xe8
   17fe4:	mov	r0, sl
   17fe8:	mov	r1, fp
   17fec:	ldrd	sl, [sp, #184]	; 0xb8
   17ff0:	adds	r4, sl, r2
   17ff4:	adc	r5, fp, r3
   17ff8:	mov	r2, r4
   17ffc:	mov	r3, r5
   18000:	ldrd	r4, [sp, #192]	; 0xc0
   18004:	strd	r2, [ip]
   18008:	lsr	ip, r0, #24
   1800c:	eor	r5, r5, r3
   18010:	ldr	r3, [sp, #200]	; 0xc8
   18014:	eor	r4, r4, r2
   18018:	lsr	lr, r3, #24
   1801c:	strd	r4, [sp, #240]	; 0xf0
   18020:	ldrd	r2, [sp, #32]
   18024:	ldrd	r4, [sp, #88]	; 0x58
   18028:	adds	r2, r2, r8
   1802c:	adc	r3, r3, r9
   18030:	mov	r8, r2
   18034:	mov	r9, r3
   18038:	ldrd	r2, [sp, #216]	; 0xd8
   1803c:	adds	r4, r4, r2
   18040:	adc	r5, r5, r3
   18044:	ldr	r3, [sp, #204]	; 0xcc
   18048:	strd	r4, [sp, #192]	; 0xc0
   1804c:	orr	r3, lr, r3, lsl #8
   18050:	str	r3, [sp, #168]	; 0xa8
   18054:	orr	r3, ip, r1, lsl #8
   18058:	str	r3, [sp, #136]	; 0x88
   1805c:	ldrd	r2, [sp, #152]	; 0x98
   18060:	add	ip, sp, #280	; 0x118
   18064:	lsr	r1, r1, #24
   18068:	eor	r2, r2, r6
   1806c:	eor	r3, r3, r7
   18070:	mov	r7, r3
   18074:	mov	r6, r2
   18078:	ldrd	r2, [sp, #240]	; 0xf0
   1807c:	orr	r1, r1, r0, lsl #8
   18080:	str	r1, [sp, #140]	; 0x8c
   18084:	str	r3, [sp, #184]	; 0xb8
   18088:	str	r2, [sp, #188]	; 0xbc
   1808c:	ldrd	r4, [sp, #184]	; 0xb8
   18090:	ldrd	r2, [sp, #208]	; 0xd0
   18094:	ldrd	r0, [sp, #192]	; 0xc0
   18098:	adds	r2, r2, r4
   1809c:	adc	r3, r3, r5
   180a0:	eor	sl, sl, r2
   180a4:	eor	fp, fp, r3
   180a8:	strd	r2, [ip]
   180ac:	mov	r2, sl
   180b0:	mov	r3, fp
   180b4:	ldrd	sl, [sp, #200]	; 0xc8
   180b8:	lsr	ip, fp, #24
   180bc:	orr	ip, ip, sl, lsl #8
   180c0:	str	ip, [sp, #172]	; 0xac
   180c4:	ldrd	sl, [sp, #168]	; 0xa8
   180c8:	add	ip, sp, #264	; 0x108
   180cc:	adds	sl, sl, r8
   180d0:	adc	fp, fp, r9
   180d4:	ldrd	r8, [sp, #136]	; 0x88
   180d8:	strd	sl, [ip]
   180dc:	lsl	ip, r7, #1
   180e0:	adds	r0, r0, r8
   180e4:	adc	r1, r1, r9
   180e8:	ldrd	r8, [sp, #176]	; 0xb0
   180ec:	orr	ip, ip, r6, lsr #31
   180f0:	strd	r0, [sp, #240]	; 0xf0
   180f4:	eor	r8, r8, sl
   180f8:	eor	r9, r9, fp
   180fc:	ldrd	sl, [sp, #160]	; 0xa0
   18100:	mov	r4, r8
   18104:	str	ip, [sp, #196]	; 0xc4
   18108:	eor	sl, sl, r0
   1810c:	mov	r0, sl
   18110:	lsr	ip, sl, #16
   18114:	add	sl, sp, #272	; 0x110
   18118:	mov	r5, r9
   1811c:	eor	fp, fp, r1
   18120:	ldrd	r8, [sp, #96]	; 0x60
   18124:	mov	r1, fp
   18128:	lsr	lr, r4, #16
   1812c:	ldrd	sl, [sl]
   18130:	lsl	r6, r6, #1
   18134:	orr	r6, r6, r7, lsr #31
   18138:	orr	r7, lr, r5, lsl #16
   1813c:	lsr	lr, r5, #16
   18140:	orr	r5, lr, r4, lsl #16
   18144:	adds	r8, r8, sl
   18148:	str	r7, [sp, #160]	; 0xa0
   1814c:	str	r5, [sp, #164]	; 0xa4
   18150:	orr	ip, ip, r1, lsl #16
   18154:	adc	r9, r9, fp
   18158:	ldrd	r4, [sp, #248]	; 0xf8
   1815c:	str	r6, [sp, #192]	; 0xc0
   18160:	str	ip, [sp, #152]	; 0x98
   18164:	ldrd	sl, [sp, #160]	; 0xa0
   18168:	lsr	r1, r1, #16
   1816c:	orr	r1, r1, r0, lsl #16
   18170:	adds	r4, r4, sl
   18174:	adc	r5, r5, fp
   18178:	str	r1, [sp, #156]	; 0x9c
   1817c:	ldrd	sl, [sp, #152]	; 0x98
   18180:	strd	r4, [sp, #208]	; 0xd0
   18184:	lsr	ip, r2, #24
   18188:	ldrd	r4, [sp, #232]	; 0xe8
   1818c:	orr	ip, ip, r3, lsl #8
   18190:	lsr	r3, r3, #24
   18194:	orr	r3, r3, r2, lsl #8
   18198:	adds	r4, r4, sl
   1819c:	str	ip, [sp, #176]	; 0xb0
   181a0:	str	r3, [sp, #180]	; 0xb4
   181a4:	adc	r5, r5, fp
   181a8:	add	r1, sp, #256	; 0x100
   181ac:	ldrd	sl, [sp, #176]	; 0xb0
   181b0:	ldrd	r0, [r1]
   181b4:	ldrd	r2, [sp, #16]
   181b8:	adds	sl, sl, r8
   181bc:	adc	fp, fp, r9
   181c0:	ldrd	r8, [sp, #192]	; 0xc0
   181c4:	adds	r2, r2, r0
   181c8:	ldrd	r6, [sp, #144]	; 0x90
   181cc:	adc	r3, r3, r1
   181d0:	mov	r0, r2
   181d4:	adds	r2, r8, r0
   181d8:	mov	r1, r3
   181dc:	adc	r3, r9, r1
   181e0:	eor	r6, r6, r2
   181e4:	eor	r7, r7, r3
   181e8:	strd	r4, [sp, #200]	; 0xc8
   181ec:	mov	r0, r2
   181f0:	mov	r1, r3
   181f4:	mov	r4, r6
   181f8:	mov	r5, r7
   181fc:	mov	r2, r7
   18200:	mov	r3, r6
   18204:	ldrd	r6, [sp, #224]	; 0xe0
   18208:	strd	sl, [sp, #216]	; 0xd8
   1820c:	ldrd	sl, [sp, #216]	; 0xd8
   18210:	adds	r6, r6, r5
   18214:	adc	r7, r7, r4
   18218:	mov	r5, r7
   1821c:	strd	r6, [sp, #192]	; 0xc0
   18220:	mov	r4, r6
   18224:	mov	r7, r9
   18228:	mov	r6, r8
   1822c:	eor	r6, r6, r4
   18230:	eor	r7, r7, r5
   18234:	mov	r4, r6
   18238:	mov	r5, r7
   1823c:	ldrd	r6, [sp, #40]	; 0x28
   18240:	lsr	ip, r4, #24
   18244:	orr	r8, ip, r5, lsl #8
   18248:	adds	r6, r6, r0
   1824c:	lsr	ip, r5, #24
   18250:	orr	r9, ip, r4, lsl #8
   18254:	adc	r7, r7, r1
   18258:	adds	r6, r6, r8
   1825c:	adc	r7, r7, r9
   18260:	mov	r0, r6
   18264:	mov	r1, r7
   18268:	ldrd	r6, [sp, #184]	; 0xb8
   1826c:	strd	r0, [sp, #232]	; 0xe8
   18270:	eor	r6, r6, sl
   18274:	eor	r7, r7, fp
   18278:	mov	r4, r6
   1827c:	ldrd	sl, [sp, #208]	; 0xd0
   18280:	mov	r5, r7
   18284:	mov	r6, r0
   18288:	mov	r7, r1
   1828c:	ldrd	r0, [sp, #168]	; 0xa8
   18290:	eor	r6, r6, r2
   18294:	lsr	lr, r4, #16
   18298:	eor	r1, r1, fp
   1829c:	eor	r0, r0, sl
   182a0:	lsl	ip, r1, #1
   182a4:	orr	ip, ip, r0, lsr #31
   182a8:	lsl	r0, r0, #1
   182ac:	orr	r1, r0, r1, lsr #31
   182b0:	str	r1, [sp, #144]	; 0x90
   182b4:	ldrd	sl, [sp, #128]	; 0x80
   182b8:	ldrd	r0, [sp, #240]	; 0xf0
   182bc:	eor	r7, r7, r3
   182c0:	str	ip, [sp, #148]	; 0x94
   182c4:	adds	sl, sl, r0
   182c8:	adc	fp, fp, r1
   182cc:	orr	r1, lr, r5, lsl #16
   182d0:	mov	r2, r6
   182d4:	mov	r3, r7
   182d8:	lsr	ip, r6, #16
   182dc:	str	r1, [sp, #168]	; 0xa8
   182e0:	ldrd	r6, [sp, #136]	; 0x88
   182e4:	ldrd	r0, [sp, #200]	; 0xc8
   182e8:	eor	r6, r6, r0
   182ec:	eor	r7, r7, r1
   182f0:	ldrd	r0, [sp, #144]	; 0x90
   182f4:	adds	r0, r0, sl
   182f8:	adc	r1, r1, fp
   182fc:	strd	r0, [sp, #224]	; 0xe0
   18300:	orr	r0, ip, r3, lsl #16
   18304:	lsr	ip, r5, #16
   18308:	orr	ip, ip, r4, lsl #16
   1830c:	str	ip, [sp, #172]	; 0xac
   18310:	add	ip, sp, #280	; 0x118
   18314:	lsr	r3, r3, #16
   18318:	ldrd	r4, [ip]
   1831c:	ldrd	sl, [sp, #168]	; 0xa8
   18320:	orr	r1, r3, r2, lsl #16
   18324:	lsl	ip, r7, #1
   18328:	adds	r4, r4, sl
   1832c:	adc	r5, r5, fp
   18330:	mov	sl, r4
   18334:	mov	fp, r5
   18338:	ldrd	r4, [sp, #192]	; 0xc0
   1833c:	orr	ip, ip, r6, lsr #31
   18340:	str	ip, [sp, #140]	; 0x8c
   18344:	adds	r4, r4, r0
   18348:	adc	r5, r5, r1
   1834c:	mov	r2, r4
   18350:	mov	r3, r5
   18354:	ldrd	r4, [sp, #176]	; 0xb0
   18358:	strd	r2, [sp, #240]	; 0xf0
   1835c:	eor	r2, r2, r8
   18360:	eor	r3, r3, r9
   18364:	ldrd	r8, [sp, #224]	; 0xe0
   18368:	eor	r5, r5, fp
   1836c:	eor	r4, r4, sl
   18370:	eor	r8, r8, r0
   18374:	str	r8, [sp, #188]	; 0xbc
   18378:	add	r8, sp, #264	; 0x108
   1837c:	eor	r9, r9, r1
   18380:	lsl	ip, r6, #1
   18384:	lsl	r1, r5, #1
   18388:	str	r9, [sp, #184]	; 0xb8
   1838c:	orr	ip, ip, r7, lsr #31
   18390:	ldrd	r8, [r8]
   18394:	orr	r7, r1, r4, lsr #31
   18398:	ldrd	r0, [sp, #64]	; 0x40
   1839c:	str	ip, [sp, #136]	; 0x88
   183a0:	lsl	ip, r3, #1
   183a4:	adds	r0, r0, r8
   183a8:	adc	r1, r1, r9
   183ac:	ldrd	r8, [sp, #24]
   183b0:	strd	r0, [sp, #192]	; 0xc0
   183b4:	ldrd	r0, [sp, #216]	; 0xd8
   183b8:	lsl	lr, r4, #1
   183bc:	orr	r6, lr, r5, lsr #31
   183c0:	adds	r8, r8, r0
   183c4:	adc	r9, r9, r1
   183c8:	orr	r1, ip, r2, lsr #31
   183cc:	lsl	r2, r2, #1
   183d0:	strd	r8, [sp, #216]	; 0xd8
   183d4:	str	r1, [sp, #180]	; 0xb4
   183d8:	ldrd	r8, [sp, #232]	; 0xe8
   183dc:	ldrd	r0, [sp, #112]	; 0x70
   183e0:	orr	r3, r2, r3, lsr #31
   183e4:	str	r3, [sp, #176]	; 0xb0
   183e8:	ldrd	r2, [sp, #184]	; 0xb8
   183ec:	adds	r0, r0, r8
   183f0:	adc	r1, r1, r9
   183f4:	adds	r2, r2, sl
   183f8:	adc	r3, r3, fp
   183fc:	mov	sl, r2
   18400:	mov	fp, r3
   18404:	ldrd	r2, [sp, #192]	; 0xc0
   18408:	add	ip, sp, #256	; 0x100
   1840c:	strd	sl, [sp, #248]	; 0xf8
   18410:	adds	r2, r2, r6
   18414:	adc	r3, r3, r7
   18418:	mov	r8, r2
   1841c:	mov	r9, r3
   18420:	ldrd	r2, [sp, #136]	; 0x88
   18424:	strd	r8, [ip]
   18428:	adds	r2, r2, r0
   1842c:	adc	r3, r3, r1
   18430:	ldrd	r0, [sp, #216]	; 0xd8
   18434:	strd	r2, [sp, #232]	; 0xe8
   18438:	ldrd	r2, [sp, #176]	; 0xb0
   1843c:	adds	r0, r0, r2
   18440:	adc	r1, r1, r3
   18444:	mov	r4, r0
   18448:	mov	r5, r1
   1844c:	ldrd	r0, [sp, #152]	; 0x98
   18450:	ldrd	r2, [sp, #144]	; 0x90
   18454:	eor	r0, r0, r8
   18458:	eor	r1, r1, r9
   1845c:	eor	r2, r2, sl
   18460:	eor	r3, r3, fp
   18464:	mov	r8, r0
   18468:	ldrd	sl, [sp, #168]	; 0xa8
   1846c:	mov	r9, r1
   18470:	ldrd	r0, [sp, #232]	; 0xe8
   18474:	lsr	ip, r2, #24
   18478:	eor	sl, sl, r0
   1847c:	eor	fp, fp, r1
   18480:	orr	r1, ip, r3, lsl #8
   18484:	strd	sl, [sp, #216]	; 0xd8
   18488:	ldrd	sl, [sp, #160]	; 0xa0
   1848c:	str	r1, [sp, #144]	; 0x90
   18490:	ldrd	r0, [sp, #216]	; 0xd8
   18494:	eor	sl, sl, r4
   18498:	eor	fp, fp, r5
   1849c:	str	fp, [sp, #168]	; 0xa8
   184a0:	str	sl, [sp, #172]	; 0xac
   184a4:	str	r1, [sp, #192]	; 0xc0
   184a8:	ldrd	sl, [sp, #224]	; 0xe0
   184ac:	str	r0, [sp, #196]	; 0xc4
   184b0:	ldrd	r0, [sp, #80]	; 0x50
   184b4:	lsr	r3, r3, #24
   184b8:	str	r9, [sp, #152]	; 0x98
   184bc:	adds	r0, r0, sl
   184c0:	str	r8, [sp, #156]	; 0x9c
   184c4:	orr	r3, r3, r2, lsl #8
   184c8:	adc	r1, r1, fp
   184cc:	str	r3, [sp, #148]	; 0x94
   184d0:	ldrd	sl, [sp, #152]	; 0x98
   184d4:	ldrd	r2, [sp, #240]	; 0xf0
   184d8:	ldrd	r8, [sp, #168]	; 0xa8
   184dc:	adds	r2, r2, sl
   184e0:	adc	r3, r3, fp
   184e4:	ldrd	sl, [sp, #200]	; 0xc8
   184e8:	strd	r2, [sp, #240]	; 0xf0
   184ec:	adds	sl, sl, r8
   184f0:	adc	fp, fp, r9
   184f4:	ldrd	r8, [sp, #208]	; 0xd0
   184f8:	strd	sl, [sp, #216]	; 0xd8
   184fc:	ldrd	sl, [sp, #192]	; 0xc0
   18500:	adds	sl, sl, r8
   18504:	adc	fp, fp, r9
   18508:	mov	r8, sl
   1850c:	mov	r9, fp
   18510:	ldrd	sl, [sp, #144]	; 0x90
   18514:	adds	sl, sl, r0
   18518:	adc	fp, fp, r1
   1851c:	mov	r0, r2
   18520:	strd	sl, [sp, #208]	; 0xd0
   18524:	mov	r1, r3
   18528:	ldrd	sl, [sp, #216]	; 0xd8
   1852c:	ldrd	r2, [sp, #176]	; 0xb0
   18530:	eor	r0, r0, r6
   18534:	eor	r1, r1, r7
   18538:	eor	r2, r2, sl
   1853c:	eor	r3, r3, fp
   18540:	mov	sl, r2
   18544:	mov	fp, r3
   18548:	add	r3, sp, #264	; 0x108
   1854c:	strd	sl, [sp, #200]	; 0xc8
   18550:	ldrd	sl, [sp, #136]	; 0x88
   18554:	mov	r6, r0
   18558:	mov	r7, r1
   1855c:	eor	sl, sl, r8
   18560:	eor	fp, fp, r9
   18564:	strd	r8, [r3]
   18568:	mov	r0, sl
   1856c:	ldrd	r2, [sp, #184]	; 0xb8
   18570:	mov	r1, fp
   18574:	ldrd	sl, [sp, #208]	; 0xd0
   18578:	add	r8, sp, #256	; 0x100
   1857c:	lsr	lr, r6, #24
   18580:	ldrd	r8, [r8]
   18584:	eor	r2, r2, sl
   18588:	eor	r3, r3, fp
   1858c:	ldrd	sl, [sp, #120]	; 0x78
   18590:	lsr	ip, r2, #16
   18594:	orr	ip, ip, r3, lsl #16
   18598:	adds	sl, sl, r8
   1859c:	adc	fp, fp, r9
   185a0:	add	r8, sp, #256	; 0x100
   185a4:	lsr	r3, r3, #16
   185a8:	strd	sl, [r8]
   185ac:	ldrd	r8, [sp, #8]
   185b0:	ldrd	sl, [sp, #232]	; 0xe8
   185b4:	orr	r3, r3, r2, lsl #16
   185b8:	str	ip, [sp, #136]	; 0x88
   185bc:	adds	r8, r8, sl
   185c0:	adc	r9, r9, fp
   185c4:	mov	sl, r8
   185c8:	mov	fp, r9
   185cc:	ldrd	r8, [sp, #104]	; 0x68
   185d0:	str	r3, [sp, #140]	; 0x8c
   185d4:	orr	r3, lr, r7, lsl #8
   185d8:	adds	r8, r8, r4
   185dc:	adc	r9, r9, r5
   185e0:	str	r3, [sp, #160]	; 0xa0
   185e4:	strd	r8, [sp, #232]	; 0xe8
   185e8:	ldrd	r2, [sp, #248]	; 0xf8
   185ec:	ldrd	r8, [sp, #136]	; 0x88
   185f0:	ldrd	r4, [sp, #144]	; 0x90
   185f4:	ldr	ip, [sp, #200]	; 0xc8
   185f8:	adds	r2, r2, r8
   185fc:	adc	r3, r3, r9
   18600:	eor	r5, r5, r3
   18604:	strd	r2, [sp, #224]	; 0xe0
   18608:	mov	r3, r5
   1860c:	ldr	r5, [sp, #204]	; 0xcc
   18610:	lsr	ip, ip, #24
   18614:	lsr	lr, r0, #24
   18618:	orr	ip, ip, r5, lsl #8
   1861c:	str	ip, [sp, #176]	; 0xb0
   18620:	eor	r4, r4, r2
   18624:	orr	ip, lr, r1, lsl #8
   18628:	str	ip, [sp, #184]	; 0xb8
   1862c:	lsl	ip, r3, #1
   18630:	orr	ip, ip, r4, lsr #31
   18634:	str	ip, [sp, #148]	; 0x94
   18638:	lsr	ip, r7, #24
   1863c:	orr	ip, ip, r6, lsl #8
   18640:	str	ip, [sp, #164]	; 0xa4
   18644:	add	ip, sp, #256	; 0x100
   18648:	ldrd	r8, [sp, #160]	; 0xa0
   1864c:	ldrd	r6, [ip]
   18650:	mov	r2, r4
   18654:	ldrd	r4, [sp, #200]	; 0xc8
   18658:	adds	r6, r6, r8
   1865c:	adc	r7, r7, r9
   18660:	mov	r8, r6
   18664:	mov	r9, r7
   18668:	ldrd	r6, [sp, #152]	; 0x98
   1866c:	lsr	ip, r5, #24
   18670:	orr	ip, ip, r4, lsl #8
   18674:	eor	r6, r6, r8
   18678:	eor	r7, r7, r9
   1867c:	str	ip, [sp, #180]	; 0xb4
   18680:	ldrd	r4, [sp, #232]	; 0xe8
   18684:	strd	r6, [sp, #152]	; 0x98
   18688:	ldrd	r6, [sp, #176]	; 0xb0
   1868c:	lsr	r1, r1, #24
   18690:	orr	r1, r1, r0, lsl #8
   18694:	adds	r4, r4, r6
   18698:	str	r1, [sp, #188]	; 0xbc
   1869c:	adc	r5, r5, r7
   186a0:	ldrd	r6, [sp, #184]	; 0xb8
   186a4:	strd	r4, [sp, #200]	; 0xc8
   186a8:	ldrd	r0, [sp, #168]	; 0xa8
   186ac:	adds	r4, sl, r6
   186b0:	adc	r5, fp, r7
   186b4:	mov	sl, r4
   186b8:	mov	fp, r5
   186bc:	ldrd	r4, [sp, #200]	; 0xc8
   186c0:	strd	sl, [sp, #232]	; 0xe8
   186c4:	lsl	r2, r2, #1
   186c8:	eor	r0, r0, r4
   186cc:	eor	r1, r1, r5
   186d0:	mov	r4, r0
   186d4:	mov	r5, r1
   186d8:	ldrd	r0, [sp, #192]	; 0xc0
   186dc:	orr	r3, r2, r3, lsr #31
   186e0:	lsr	ip, r4, #16
   186e4:	eor	r0, r0, sl
   186e8:	eor	r1, r1, fp
   186ec:	ldrd	sl, [sp, #152]	; 0x98
   186f0:	str	r3, [sp, #144]	; 0x90
   186f4:	orr	r2, ip, r5, lsl #16
   186f8:	lsr	lr, sl, #16
   186fc:	orr	r3, lr, fp, lsl #16
   18700:	str	r3, [sp, #152]	; 0x98
   18704:	lsr	r3, fp, #16
   18708:	orr	r3, r3, sl, lsl #16
   1870c:	lsr	lr, r0, #16
   18710:	lsr	ip, r5, #16
   18714:	str	r3, [sp, #156]	; 0x9c
   18718:	orr	r3, ip, r4, lsl #16
   1871c:	orr	ip, lr, r1, lsl #16
   18720:	lsr	r1, r1, #16
   18724:	orr	r1, r1, r0, lsl #16
   18728:	ldrd	r6, [sp, #152]	; 0x98
   1872c:	str	r1, [sp, #172]	; 0xac
   18730:	ldrd	r0, [sp, #240]	; 0xf0
   18734:	ldrd	r4, [sp, #216]	; 0xd8
   18738:	str	ip, [sp, #168]	; 0xa8
   1873c:	adds	r0, r0, r6
   18740:	adc	r1, r1, r7
   18744:	mov	r7, r1
   18748:	adds	r4, r4, r2
   1874c:	add	r1, sp, #264	; 0x108
   18750:	adc	r5, r5, r3
   18754:	mov	r6, r0
   18758:	mov	sl, r4
   1875c:	ldrd	r0, [r1]
   18760:	mov	fp, r5
   18764:	ldrd	r4, [sp, #168]	; 0xa8
   18768:	strd	sl, [sp, #216]	; 0xd8
   1876c:	adds	r4, r4, r0
   18770:	adc	r5, r5, r1
   18774:	mov	r0, r4
   18778:	mov	r1, r5
   1877c:	ldrd	r4, [sp, #8]
   18780:	strd	r0, [sp, #192]	; 0xc0
   18784:	ldrd	r0, [sp, #208]	; 0xd0
   18788:	strd	r6, [sp, #208]	; 0xd0
   1878c:	adds	r4, r4, r0
   18790:	adc	r5, r5, r1
   18794:	add	r1, sp, #264	; 0x108
   18798:	strd	r4, [r1]
   1879c:	ldrd	r4, [sp, #88]	; 0x58
   187a0:	ldrd	r0, [sp, #192]	; 0xc0
   187a4:	adds	r4, r4, r8
   187a8:	adc	r5, r5, r9
   187ac:	mov	r8, r4
   187b0:	mov	r9, r5
   187b4:	ldrd	r4, [sp, #144]	; 0x90
   187b8:	adds	r4, r4, r8
   187bc:	adc	r5, r5, r9
   187c0:	strd	r4, [sp, #240]	; 0xf0
   187c4:	eor	r4, r4, r2
   187c8:	eor	r5, r5, r3
   187cc:	ldrd	r2, [sp, #176]	; 0xb0
   187d0:	str	r5, [sp, #176]	; 0xb0
   187d4:	str	r4, [sp, #180]	; 0xb4
   187d8:	ldrd	r8, [sp, #176]	; 0xb0
   187dc:	eor	r2, r2, sl
   187e0:	eor	r3, r3, fp
   187e4:	ldrd	sl, [sp, #160]	; 0xa0
   187e8:	mov	r4, r0
   187ec:	adds	r0, r0, r8
   187f0:	eor	sl, sl, r6
   187f4:	eor	fp, fp, r7
   187f8:	mov	r5, r1
   187fc:	adc	r1, r1, r9
   18800:	ldrd	r8, [sp, #144]	; 0x90
   18804:	mov	r6, sl
   18808:	mov	r7, fp
   1880c:	ldrd	sl, [sp, #184]	; 0xb8
   18810:	eor	r8, r8, r0
   18814:	eor	r9, r9, r1
   18818:	eor	r4, r4, sl
   1881c:	strd	r0, [sp, #248]	; 0xf8
   18820:	eor	r5, r5, fp
   18824:	mov	r0, r8
   18828:	ldrd	sl, [sp, #232]	; 0xe8
   1882c:	mov	r1, r9
   18830:	ldrd	r8, [sp, #96]	; 0x60
   18834:	lsl	ip, r3, #1
   18838:	orr	ip, ip, r2, lsr #31
   1883c:	lsl	r2, r2, #1
   18840:	adds	r8, r8, sl
   18844:	orr	r3, r2, r3, lsr #31
   18848:	adc	r9, r9, fp
   1884c:	str	ip, [sp, #164]	; 0xa4
   18850:	str	r3, [sp, #160]	; 0xa0
   18854:	ldrd	sl, [sp, #160]	; 0xa0
   18858:	lsl	r3, r7, #1
   1885c:	orr	r3, r3, r6, lsr #31
   18860:	adds	sl, sl, r8
   18864:	adc	fp, fp, r9
   18868:	str	r3, [sp, #148]	; 0x94
   1886c:	strd	sl, [sp, #192]	; 0xc0
   18870:	ldrd	r2, [sp, #200]	; 0xc8
   18874:	ldrd	sl, [sp, #32]
   18878:	lsl	lr, r5, #1
   1887c:	lsl	ip, r6, #1
   18880:	adds	sl, sl, r2
   18884:	adc	fp, fp, r3
   18888:	mov	r8, sl
   1888c:	ldrd	r2, [sp, #136]	; 0x88
   18890:	mov	r9, fp
   18894:	ldrd	sl, [sp, #192]	; 0xc0
   18898:	orr	ip, ip, r7, lsr #31
   1889c:	orr	r7, lr, r4, lsr #31
   188a0:	str	r7, [sp, #140]	; 0x8c
   188a4:	eor	r2, r2, sl
   188a8:	ldrd	r6, [sp, #240]	; 0xf0
   188ac:	eor	r3, r3, fp
   188b0:	ldrd	sl, [sp, #24]
   188b4:	str	ip, [sp, #144]	; 0x90
   188b8:	lsl	lr, r4, #1
   188bc:	adds	sl, sl, r6
   188c0:	adc	fp, fp, r7
   188c4:	ldrd	r6, [sp, #144]	; 0x90
   188c8:	lsr	ip, r0, #24
   188cc:	orr	r4, ip, r1, lsl #8
   188d0:	adds	r6, r6, r8
   188d4:	orr	r5, lr, r5, lsr #31
   188d8:	lsr	r1, r1, #24
   188dc:	adc	r7, r7, r9
   188e0:	str	r5, [sp, #136]	; 0x88
   188e4:	orr	r5, r1, r0, lsl #8
   188e8:	add	r1, sp, #256	; 0x100
   188ec:	mov	r0, r6
   188f0:	strd	r6, [r1]
   188f4:	mov	r1, r7
   188f8:	ldrd	r6, [sp, #168]	; 0xa8
   188fc:	add	ip, sp, #264	; 0x108
   18900:	strd	sl, [sp, #200]	; 0xc8
   18904:	eor	r6, r6, r0
   18908:	eor	r7, r7, r1
   1890c:	ldrd	sl, [ip]
   18910:	mov	r0, r6
   18914:	mov	r1, r7
   18918:	ldrd	r6, [sp, #136]	; 0x88
   1891c:	str	r3, [sp, #184]	; 0xb8
   18920:	str	r2, [sp, #188]	; 0xbc
   18924:	adds	sl, sl, r6
   18928:	adc	fp, fp, r7
   1892c:	ldrd	r6, [sp, #200]	; 0xc8
   18930:	ldrd	r2, [sp, #152]	; 0x98
   18934:	strd	sl, [sp, #232]	; 0xe8
   18938:	adds	r6, r6, r4
   1893c:	adc	r7, r7, r5
   18940:	mov	r8, r6
   18944:	mov	r9, r7
   18948:	ldrd	r6, [sp, #176]	; 0xb0
   1894c:	eor	r2, r2, sl
   18950:	eor	r3, r3, fp
   18954:	eor	r6, r6, r8
   18958:	eor	r7, r7, r9
   1895c:	strd	r2, [sp, #168]	; 0xa8
   18960:	mov	sl, r6
   18964:	ldrd	r2, [sp, #184]	; 0xb8
   18968:	mov	fp, r7
   1896c:	ldrd	r6, [sp, #208]	; 0xd0
   18970:	strd	r8, [sp, #240]	; 0xf0
   18974:	mov	r8, r1
   18978:	adds	r6, r6, r2
   1897c:	adc	r7, r7, r3
   18980:	ldrd	r2, [sp, #160]	; 0xa0
   18984:	strd	r6, [ip]
   18988:	mov	r9, r0
   1898c:	eor	r3, r3, r7
   18990:	mov	r7, r3
   18994:	ldr	r3, [sp, #172]	; 0xac
   18998:	eor	r2, r2, r6
   1899c:	mov	r6, r2
   189a0:	str	r3, [sp, #152]	; 0x98
   189a4:	ldr	r2, [sp, #168]	; 0xa8
   189a8:	ldrd	r0, [sp, #224]	; 0xe0
   189ac:	lsr	r3, sl, #16
   189b0:	str	r2, [sp, #156]	; 0x9c
   189b4:	adds	r0, r0, r8
   189b8:	adc	r1, r1, r9
   189bc:	orr	r3, r3, fp, lsl #16
   189c0:	strd	r0, [sp, #200]	; 0xc8
   189c4:	str	r3, [sp, #160]	; 0xa0
   189c8:	ldrd	r0, [sp, #152]	; 0x98
   189cc:	ldrd	r2, [sp, #216]	; 0xd8
   189d0:	lsr	lr, fp, #16
   189d4:	lsr	ip, r6, #24
   189d8:	adds	r2, r2, r0
   189dc:	adc	r3, r3, r1
   189e0:	ldrd	r0, [sp, #144]	; 0x90
   189e4:	strd	r2, [sp, #208]	; 0xd0
   189e8:	ldrd	r2, [sp, #200]	; 0xc8
   189ec:	eor	r0, r0, r2
   189f0:	eor	r1, r1, r3
   189f4:	orr	r3, lr, sl, lsl #16
   189f8:	strd	r0, [sp, #176]	; 0xb0
   189fc:	ldrd	sl, [sp, #136]	; 0x88
   18a00:	ldrd	r0, [sp, #208]	; 0xd0
   18a04:	str	r3, [sp, #164]	; 0xa4
   18a08:	ldrd	r2, [sp, #160]	; 0xa0
   18a0c:	eor	sl, sl, r0
   18a10:	eor	fp, fp, r1
   18a14:	ldrd	r0, [sp, #192]	; 0xc0
   18a18:	strd	sl, [sp, #136]	; 0x88
   18a1c:	ldrd	sl, [sp, #48]	; 0x30
   18a20:	add	lr, sp, #256	; 0x100
   18a24:	adds	sl, sl, r0
   18a28:	adc	fp, fp, r1
   18a2c:	ldrd	r0, [sp, #248]	; 0xf8
   18a30:	adds	r0, r0, r2
   18a34:	adc	r1, r1, r3
   18a38:	orr	r3, ip, r7, lsl #8
   18a3c:	lsr	ip, r7, #24
   18a40:	str	r3, [sp, #192]	; 0xc0
   18a44:	orr	r3, ip, r6, lsl #8
   18a48:	str	r3, [sp, #196]	; 0xc4
   18a4c:	strd	r0, [sp, #224]	; 0xe0
   18a50:	eor	r0, r0, r4
   18a54:	eor	r1, r1, r5
   18a58:	ldrd	r4, [sp, #192]	; 0xc0
   18a5c:	strd	r0, [sp, #144]	; 0x90
   18a60:	ldrd	r6, [sp, #40]	; 0x28
   18a64:	adds	r4, r4, sl
   18a68:	adc	r5, r5, fp
   18a6c:	mov	r0, r4
   18a70:	mov	r1, r5
   18a74:	ldrd	r4, [lr]
   18a78:	ldrd	r2, [sp, #176]	; 0xb0
   18a7c:	strd	r0, [sp, #248]	; 0xf8
   18a80:	adds	r6, r6, r4
   18a84:	adc	r7, r7, r5
   18a88:	lsr	ip, r2, #24
   18a8c:	orr	r3, ip, r3, lsl #8
   18a90:	ldrd	r4, [sp, #16]
   18a94:	strd	r6, [sp, #216]	; 0xd8
   18a98:	str	r3, [sp, #168]	; 0xa8
   18a9c:	ldrd	r6, [sp, #184]	; 0xb8
   18aa0:	ldrd	sl, [sp, #232]	; 0xe8
   18aa4:	ldrd	r2, [sp, #144]	; 0x90
   18aa8:	eor	r6, r6, r0
   18aac:	adds	r4, r4, sl
   18ab0:	eor	r7, r7, r1
   18ab4:	adc	r5, r5, fp
   18ab8:	ldrd	r0, [sp, #136]	; 0x88
   18abc:	mov	sl, r4
   18ac0:	mov	r4, r2
   18ac4:	mov	fp, r5
   18ac8:	lsl	ip, r3, #1
   18acc:	mov	r5, r3
   18ad0:	lsl	lr, r4, #1
   18ad4:	orr	r3, ip, r2, lsr #31
   18ad8:	str	r3, [sp, #148]	; 0x94
   18adc:	lsr	ip, r0, #24
   18ae0:	orr	r3, lr, r5, lsr #31
   18ae4:	mov	r4, r0
   18ae8:	str	r3, [sp, #144]	; 0x90
   18aec:	orr	r3, ip, r1, lsl #8
   18af0:	lsr	r1, r1, #24
   18af4:	str	r3, [sp, #136]	; 0x88
   18af8:	orr	r3, r1, r4, lsl #8
   18afc:	ldrd	r0, [sp, #176]	; 0xb0
   18b00:	str	r3, [sp, #140]	; 0x8c
   18b04:	lsr	ip, r6, #16
   18b08:	lsr	r3, r1, #24
   18b0c:	orr	r3, r3, r0, lsl #8
   18b10:	str	r3, [sp, #172]	; 0xac
   18b14:	ldrd	r4, [sp, #168]	; 0xa8
   18b18:	ldrd	r0, [sp, #216]	; 0xd8
   18b1c:	ldrd	r2, [sp, #136]	; 0x88
   18b20:	orr	ip, ip, r7, lsl #16
   18b24:	adds	r0, r0, r4
   18b28:	adc	r1, r1, r5
   18b2c:	adds	r2, r2, sl
   18b30:	adc	r3, r3, fp
   18b34:	mov	sl, r2
   18b38:	mov	fp, r3
   18b3c:	ldrd	r2, [sp, #56]	; 0x38
   18b40:	ldrd	r4, [sp, #144]	; 0x90
   18b44:	str	ip, [sp, #184]	; 0xb8
   18b48:	adds	r2, r2, sl
   18b4c:	lsr	ip, r7, #16
   18b50:	strd	r0, [sp, #232]	; 0xe8
   18b54:	adc	r3, r3, fp
   18b58:	eor	r0, r0, r8
   18b5c:	adds	r4, r4, r2
   18b60:	orr	ip, ip, r6, lsl #16
   18b64:	str	ip, [sp, #188]	; 0xbc
   18b68:	eor	r1, r1, r9
   18b6c:	adc	r5, r5, r3
   18b70:	mov	r2, r4
   18b74:	mov	r3, r5
   18b78:	lsr	ip, r0, #16
   18b7c:	ldrd	r4, [sp, #184]	; 0xb8
   18b80:	orr	ip, ip, r1, lsl #16
   18b84:	lsr	r1, r1, #16
   18b88:	orr	r1, r1, r0, lsl #16
   18b8c:	str	ip, [sp, #176]	; 0xb0
   18b90:	eor	r4, r4, r2
   18b94:	eor	r5, r5, r3
   18b98:	str	r1, [sp, #180]	; 0xb4
   18b9c:	ldrd	r0, [sp, #176]	; 0xb0
   18ba0:	mov	r6, r4
   18ba4:	mov	r7, r5
   18ba8:	ldrd	r4, [sp, #200]	; 0xc8
   18bac:	str	r7, [sp, #200]	; 0xc8
   18bb0:	str	r6, [sp, #204]	; 0xcc
   18bb4:	adds	r0, r0, r4
   18bb8:	adc	r1, r1, r5
   18bbc:	mov	r4, r0
   18bc0:	mov	r5, r1
   18bc4:	ldrd	r0, [sp, #152]	; 0x98
   18bc8:	ldrd	r8, [sp, #200]	; 0xc8
   18bcc:	ldrd	r6, [sp, #144]	; 0x90
   18bd0:	eor	r0, r0, sl
   18bd4:	eor	r1, r1, fp
   18bd8:	mov	sl, r0
   18bdc:	mov	fp, r1
   18be0:	ldrd	r0, [sp, #168]	; 0xa8
   18be4:	adds	r8, r8, r4
   18be8:	adc	r9, r9, r5
   18bec:	eor	r1, r1, r5
   18bf0:	eor	r0, r0, r4
   18bf4:	mov	r5, r9
   18bf8:	mov	r4, r8
   18bfc:	add	ip, sp, #256	; 0x100
   18c00:	eor	r6, r6, r8
   18c04:	eor	r7, r7, r9
   18c08:	strd	r4, [ip]
   18c0c:	mov	r4, r6
   18c10:	mov	r5, r7
   18c14:	ldrd	r6, [sp, #64]	; 0x40
   18c18:	lsr	ip, sl, #16
   18c1c:	orr	ip, ip, fp, lsl #16
   18c20:	adds	r6, r6, r2
   18c24:	str	ip, [sp, #144]	; 0x90
   18c28:	lsr	ip, fp, #16
   18c2c:	adc	r7, r7, r3
   18c30:	orr	r3, ip, sl, lsl #16
   18c34:	str	r3, [sp, #148]	; 0x94
   18c38:	ldrd	sl, [sp, #72]	; 0x48
   18c3c:	ldrd	r8, [sp, #240]	; 0xf0
   18c40:	lsr	r3, r4, #24
   18c44:	orr	r3, r3, r5, lsl #8
   18c48:	adds	sl, sl, r8
   18c4c:	adc	fp, fp, r9
   18c50:	ldrd	r8, [sp, #144]	; 0x90
   18c54:	strd	sl, [sp, #168]	; 0xa8
   18c58:	ldrd	sl, [sp, #208]	; 0xd0
   18c5c:	str	r3, [sp, #152]	; 0x98
   18c60:	ldrd	r2, [sp, #136]	; 0x88
   18c64:	adds	sl, sl, r8
   18c68:	adc	fp, fp, r9
   18c6c:	eor	r2, r2, sl
   18c70:	eor	r3, r3, fp
   18c74:	lsr	ip, r5, #24
   18c78:	strd	r2, [sp, #136]	; 0x88
   18c7c:	orr	r3, ip, r4, lsl #8
   18c80:	str	r3, [sp, #156]	; 0x9c
   18c84:	ldrd	r8, [sp, #152]	; 0x98
   18c88:	ldrd	r2, [sp, #136]	; 0x88
   18c8c:	ldrd	r4, [sp, #200]	; 0xc8
   18c90:	adds	r8, r8, r6
   18c94:	lsl	ip, r1, #1
   18c98:	adc	r9, r9, r7
   18c9c:	strd	sl, [sp, #216]	; 0xd8
   18ca0:	orr	fp, ip, r0, lsr #31
   18ca4:	lsl	ip, r3, #1
   18ca8:	add	r3, sp, #264	; 0x108
   18cac:	orr	r7, ip, r2, lsr #31
   18cb0:	eor	r4, r4, r8
   18cb4:	eor	r5, r5, r9
   18cb8:	strd	r8, [sp, #240]	; 0xf0
   18cbc:	lsl	lr, r2, #1
   18cc0:	ldrd	r8, [r3]
   18cc4:	ldrd	r2, [sp, #184]	; 0xb8
   18cc8:	lsl	r0, r0, #1
   18ccc:	orr	sl, r0, r1, lsr #31
   18cd0:	ldrd	r0, [sp, #168]	; 0xa8
   18cd4:	adds	r8, r8, r2
   18cd8:	adc	r9, r9, r3
   18cdc:	ldrd	r2, [sp, #144]	; 0x90
   18ce0:	adds	r0, r0, sl
   18ce4:	adc	r1, r1, fp
   18ce8:	add	ip, sp, #264	; 0x108
   18cec:	eor	r3, r3, r1
   18cf0:	strd	r0, [ip]
   18cf4:	mov	r1, r3
   18cf8:	ldr	r3, [sp, #140]	; 0x8c
   18cfc:	lsr	ip, r4, #16
   18d00:	eor	r2, r2, r0
   18d04:	orr	r6, lr, r3, lsr #31
   18d08:	orr	r3, ip, r5, lsl #16
   18d0c:	str	r3, [sp, #144]	; 0x90
   18d10:	lsr	r3, r5, #16
   18d14:	orr	r3, r3, r4, lsl #16
   18d18:	str	r3, [sp, #148]	; 0x94
   18d1c:	add	r3, sp, #256	; 0x100
   18d20:	str	r2, [sp, #172]	; 0xac
   18d24:	ldrd	r4, [r3]
   18d28:	ldrd	r2, [sp, #144]	; 0x90
   18d2c:	str	r1, [sp, #168]	; 0xa8
   18d30:	adds	r4, r4, r2
   18d34:	adc	r5, r5, r3
   18d38:	strd	r4, [sp, #200]	; 0xc8
   18d3c:	ldrd	r4, [sp, #168]	; 0xa8
   18d40:	adds	r2, r8, r4
   18d44:	adc	r3, r9, r5
   18d48:	ldrd	r4, [sp, #120]	; 0x78
   18d4c:	strd	r2, [sp, #208]	; 0xd0
   18d50:	ldrd	r2, [sp, #248]	; 0xf8
   18d54:	adds	r4, r4, r2
   18d58:	adc	r5, r5, r3
   18d5c:	adds	r0, r4, r6
   18d60:	adc	r1, r5, r7
   18d64:	ldrd	r4, [sp, #176]	; 0xb0
   18d68:	ldrd	r2, [sp, #192]	; 0xc0
   18d6c:	eor	r5, r5, r1
   18d70:	eor	r3, r3, r9
   18d74:	eor	r2, r2, r8
   18d78:	lsl	ip, r3, #1
   18d7c:	orr	ip, ip, r2, lsr #31
   18d80:	lsl	r2, r2, #1
   18d84:	orr	r3, r2, r3, lsr #31
   18d88:	str	r3, [sp, #136]	; 0x88
   18d8c:	ldrd	r2, [sp, #224]	; 0xe0
   18d90:	eor	r4, r4, r0
   18d94:	mov	r8, r5
   18d98:	adds	r2, r2, r5
   18d9c:	adc	r3, r3, r4
   18da0:	mov	r9, r4
   18da4:	mov	r5, r3
   18da8:	mov	r4, r2
   18dac:	strd	r2, [sp, #224]	; 0xe0
   18db0:	eor	r4, r4, r6
   18db4:	ldrd	r2, [sp, #104]	; 0x68
   18db8:	eor	r5, r5, r7
   18dbc:	ldrd	r6, [sp, #232]	; 0xe8
   18dc0:	str	ip, [sp, #140]	; 0x8c
   18dc4:	strd	r4, [sp, #184]	; 0xb8
   18dc8:	ldrd	r4, [sp, #136]	; 0x88
   18dcc:	adds	r2, r2, r6
   18dd0:	adc	r3, r3, r7
   18dd4:	ldrd	r6, [sp, #160]	; 0xa0
   18dd8:	adds	r4, r4, r2
   18ddc:	adc	r5, r5, r3
   18de0:	mov	r2, r4
   18de4:	mov	r3, r5
   18de8:	eor	r6, r6, r4
   18dec:	eor	r7, r7, r5
   18df0:	ldrd	r4, [sp, #128]	; 0x80
   18df4:	ldr	ip, [sp, #184]	; 0xb8
   18df8:	str	r7, [sp, #160]	; 0xa0
   18dfc:	adds	r4, r4, r0
   18e00:	adc	r5, r5, r1
   18e04:	mov	r0, r4
   18e08:	mov	r1, r5
   18e0c:	ldrd	r4, [sp, #184]	; 0xb8
   18e10:	lsr	ip, ip, #24
   18e14:	str	r6, [sp, #164]	; 0xa4
   18e18:	orr	ip, ip, r5, lsl #8
   18e1c:	str	ip, [sp, #176]	; 0xb0
   18e20:	lsr	ip, r5, #24
   18e24:	orr	ip, ip, r4, lsl #8
   18e28:	str	ip, [sp, #180]	; 0xb4
   18e2c:	ldrd	r4, [sp, #176]	; 0xb0
   18e30:	ldrd	r6, [sp, #208]	; 0xd0
   18e34:	adds	r4, r4, r0
   18e38:	adc	r5, r5, r1
   18e3c:	eor	r6, r6, sl
   18e40:	eor	r7, r7, fp
   18e44:	mov	r0, r4
   18e48:	ldrd	sl, [sp, #160]	; 0xa0
   18e4c:	mov	r1, r5
   18e50:	ldrd	r4, [sp, #216]	; 0xd8
   18e54:	strd	r0, [sp, #232]	; 0xe8
   18e58:	eor	r0, r0, r8
   18e5c:	adds	r4, r4, sl
   18e60:	adc	r5, r5, fp
   18e64:	eor	r1, r1, r9
   18e68:	mov	sl, r4
   18e6c:	mov	fp, r5
   18e70:	mov	r4, r0
   18e74:	mov	r5, r1
   18e78:	ldrd	r0, [sp, #136]	; 0x88
   18e7c:	ldrd	r8, [sp, #80]	; 0x50
   18e80:	strd	sl, [sp, #216]	; 0xd8
   18e84:	eor	r0, r0, sl
   18e88:	eor	r1, r1, fp
   18e8c:	lsr	lr, r6, #24
   18e90:	strd	r0, [sp, #136]	; 0x88
   18e94:	add	r1, sp, #264	; 0x108
   18e98:	lsr	ip, r4, #16
   18e9c:	ldrd	sl, [r1]
   18ea0:	ldrd	r0, [sp, #152]	; 0x98
   18ea4:	adds	r8, r8, sl
   18ea8:	adc	r9, r9, fp
   18eac:	ldrd	sl, [sp, #112]	; 0x70
   18eb0:	adds	sl, sl, r2
   18eb4:	adc	fp, fp, r3
   18eb8:	add	r3, sp, #256	; 0x100
   18ebc:	strd	sl, [r3]
   18ec0:	ldrd	r2, [sp, #200]	; 0xc8
   18ec4:	orr	sl, lr, r7, lsl #8
   18ec8:	eor	r1, r1, r3
   18ecc:	mov	r3, r1
   18ed0:	orr	r1, ip, r5, lsl #16
   18ed4:	lsr	ip, r7, #24
   18ed8:	orr	fp, ip, r6, lsl #8
   18edc:	eor	r0, r0, r2
   18ee0:	adds	r6, r8, sl
   18ee4:	adc	r7, r9, fp
   18ee8:	mov	r2, r0
   18eec:	str	r1, [sp, #184]	; 0xb8
   18ef0:	ldrd	r8, [sp, #136]	; 0x88
   18ef4:	ldrd	r0, [sp, #168]	; 0xa8
   18ef8:	strd	r6, [sp, #192]	; 0xc0
   18efc:	lsr	ip, r8, #24
   18f00:	eor	r6, r6, r0
   18f04:	eor	r7, r7, r1
   18f08:	mov	r0, r6
   18f0c:	mov	r1, r7
   18f10:	ldrd	r6, [sp, #176]	; 0xb0
   18f14:	strd	r0, [sp, #168]	; 0xa8
   18f18:	orr	r1, ip, r9, lsl #8
   18f1c:	lsr	ip, r5, #16
   18f20:	str	r1, [sp, #152]	; 0x98
   18f24:	orr	r1, ip, r4, lsl #16
   18f28:	str	r1, [sp, #188]	; 0xbc
   18f2c:	ldrd	r0, [sp, #184]	; 0xb8
   18f30:	ldrd	r4, [sp, #224]	; 0xe0
   18f34:	lsl	lr, r3, #1
   18f38:	adds	r4, r4, r0
   18f3c:	adc	r5, r5, r1
   18f40:	lsr	r1, r9, #24
   18f44:	orr	r1, r1, r8, lsl #8
   18f48:	str	r1, [sp, #156]	; 0x9c
   18f4c:	add	r1, sp, #256	; 0x100
   18f50:	ldrd	r8, [sp, #152]	; 0x98
   18f54:	ldrd	r0, [r1]
   18f58:	eor	r7, r7, r5
   18f5c:	strd	r4, [sp, #248]	; 0xf8
   18f60:	adds	r0, r0, r8
   18f64:	adc	r1, r1, r9
   18f68:	ldrd	r8, [sp, #160]	; 0xa0
   18f6c:	strd	r0, [sp, #224]	; 0xe0
   18f70:	mov	r5, r7
   18f74:	eor	r8, r8, r0
   18f78:	eor	r9, r9, r1
   18f7c:	mov	r0, r8
   18f80:	mov	r1, r9
   18f84:	ldrd	r8, [sp, #168]	; 0xa8
   18f88:	eor	r6, r6, r4
   18f8c:	orr	r7, lr, r2, lsr #31
   18f90:	lsr	ip, r8, #16
   18f94:	lsl	lr, r5, #1
   18f98:	lsl	r2, r2, #1
   18f9c:	str	r7, [sp, #140]	; 0x8c
   18fa0:	orr	r3, r2, r3, lsr #31
   18fa4:	mov	r4, r6
   18fa8:	orr	r2, ip, r9, lsl #16
   18fac:	ldrd	r8, [sp, #240]	; 0xf0
   18fb0:	orr	ip, lr, r6, lsr #31
   18fb4:	ldrd	r6, [sp, #120]	; 0x78
   18fb8:	lsl	r4, r4, #1
   18fbc:	str	r3, [sp, #136]	; 0x88
   18fc0:	adds	r6, r6, r8
   18fc4:	adc	r7, r7, r9
   18fc8:	orr	r5, r4, r5, lsr #31
   18fcc:	strd	r6, [sp, #120]	; 0x78
   18fd0:	ldrd	r8, [sp, #192]	; 0xc0
   18fd4:	ldrd	r6, [sp, #32]
   18fd8:	str	r5, [sp, #160]	; 0xa0
   18fdc:	ldrd	r4, [sp, #136]	; 0x88
   18fe0:	adds	r8, r8, r6
   18fe4:	adc	r9, r9, r7
   18fe8:	adds	r4, r4, r8
   18fec:	str	ip, [sp, #164]	; 0xa4
   18ff0:	adc	r5, r5, r9
   18ff4:	ldr	ip, [sp, #172]	; 0xac
   18ff8:	ldr	r6, [sp, #168]	; 0xa8
   18ffc:	mov	r8, r4
   19000:	mov	r9, r5
   19004:	ldrd	r4, [sp, #208]	; 0xd0
   19008:	lsr	lr, ip, #16
   1900c:	orr	r3, lr, r6, lsl #16
   19010:	adds	r4, r4, r2
   19014:	adc	r5, r5, r3
   19018:	lsr	ip, r0, #16
   1901c:	orr	r6, ip, r1, lsl #16
   19020:	lsr	r1, r1, #16
   19024:	orr	r7, r1, r0, lsl #16
   19028:	strd	r4, [sp, #168]	; 0xa8
   1902c:	ldrd	r0, [sp, #120]	; 0x78
   19030:	ldrd	r4, [sp, #160]	; 0xa0
   19034:	adds	r4, r4, r0
   19038:	adc	r5, r5, r1
   1903c:	ldrd	r0, [sp, #168]	; 0xa8
   19040:	strd	r4, [sp, #208]	; 0xd0
   19044:	eor	r0, r0, sl
   19048:	eor	r1, r1, fp
   1904c:	eor	sl, r6, r8
   19050:	eor	fp, r7, r9
   19054:	strd	sl, [sp, #176]	; 0xb0
   19058:	ldr	ip, [sp, #180]	; 0xb4
   1905c:	mov	sl, r4
   19060:	mov	fp, r5
   19064:	ldrd	r4, [sp, #216]	; 0xd8
   19068:	str	ip, [sp, #120]	; 0x78
   1906c:	ldr	ip, [sp, #176]	; 0xb0
   19070:	eor	fp, fp, r3
   19074:	eor	sl, sl, r2
   19078:	lsl	r3, r1, #1
   1907c:	adds	r4, r4, r6
   19080:	str	ip, [sp, #124]	; 0x7c
   19084:	mov	r2, sl
   19088:	orr	r3, r3, r0, lsr #31
   1908c:	mov	sl, fp
   19090:	adc	r5, r5, r7
   19094:	mov	fp, r2
   19098:	str	r3, [sp, #36]	; 0x24
   1909c:	ldrd	r6, [sp, #248]	; 0xf8
   190a0:	ldrd	r2, [sp, #120]	; 0x78
   190a4:	lsl	ip, r0, #1
   190a8:	strd	r4, [sp, #192]	; 0xc0
   190ac:	adds	r6, r6, r2
   190b0:	adc	r7, r7, r3
   190b4:	orr	r3, ip, r1, lsr #31
   190b8:	str	r3, [sp, #32]
   190bc:	ldrd	r0, [sp, #224]	; 0xe0
   190c0:	ldrd	r2, [sp, #64]	; 0x40
   190c4:	adds	r4, r4, sl
   190c8:	adc	r5, r5, fp
   190cc:	adds	r2, r2, r0
   190d0:	strd	r6, [sp, #176]	; 0xb0
   190d4:	adc	r3, r3, r1
   190d8:	mov	r6, r4
   190dc:	ldrd	r0, [sp, #176]	; 0xb0
   190e0:	mov	r7, r5
   190e4:	mov	r4, r2
   190e8:	mov	r5, r3
   190ec:	ldrd	r2, [sp, #136]	; 0x88
   190f0:	eor	r2, r2, r0
   190f4:	eor	r3, r3, r1
   190f8:	mov	r0, r2
   190fc:	mov	r1, r3
   19100:	ldrd	r2, [sp, #160]	; 0xa0
   19104:	strd	r6, [sp, #160]	; 0xa0
   19108:	lsr	lr, r0, #24
   1910c:	eor	r2, r2, r6
   19110:	eor	r3, r3, r7
   19114:	ldrd	r6, [sp, #32]
   19118:	lsr	ip, r2, #24
   1911c:	orr	ip, ip, r3, lsl #8
   19120:	adds	r6, r6, r4
   19124:	adc	r7, r7, r5
   19128:	ldrd	r4, [sp, #184]	; 0xb8
   1912c:	strd	r6, [sp, #184]	; 0xb8
   19130:	lsr	r3, r3, #24
   19134:	eor	r5, r5, r7
   19138:	orr	r7, lr, r1, lsl #8
   1913c:	eor	r4, r4, r6
   19140:	str	r7, [sp, #136]	; 0x88
   19144:	ldrd	r6, [sp, #56]	; 0x38
   19148:	lsr	r1, r1, #24
   1914c:	orr	r1, r1, r0, lsl #8
   19150:	adds	r6, r6, r8
   19154:	adc	r7, r7, r9
   19158:	mov	r8, r6
   1915c:	mov	r9, r7
   19160:	str	r1, [sp, #140]	; 0x8c
   19164:	ldrd	r6, [sp, #208]	; 0xd0
   19168:	ldrd	r0, [sp, #72]	; 0x48
   1916c:	orr	r3, r3, r2, lsl #8
   19170:	str	ip, [sp, #64]	; 0x40
   19174:	str	r5, [sp, #56]	; 0x38
   19178:	str	r4, [sp, #60]	; 0x3c
   1917c:	str	r3, [sp, #68]	; 0x44
   19180:	ldrd	r2, [sp, #136]	; 0x88
   19184:	adds	r0, r0, r6
   19188:	adc	r1, r1, r7
   1918c:	adds	r2, r2, r8
   19190:	adc	r3, r3, r9
   19194:	mov	r8, r2
   19198:	mov	r9, r3
   1919c:	ldrd	r2, [sp, #64]	; 0x40
   191a0:	ldrd	r4, [sp, #120]	; 0x78
   191a4:	ldrd	r6, [sp, #56]	; 0x38
   191a8:	adds	r2, r2, r0
   191ac:	adc	r3, r3, r1
   191b0:	ldrd	r0, [sp, #200]	; 0xc8
   191b4:	eor	r4, r4, r8
   191b8:	strd	r2, [sp, #200]	; 0xc8
   191bc:	eor	r5, r5, r9
   191c0:	eor	r2, r2, sl
   191c4:	eor	r3, r3, fp
   191c8:	adds	r0, r0, r6
   191cc:	strd	r8, [sp, #208]	; 0xd0
   191d0:	mov	r8, r4
   191d4:	mov	r9, r5
   191d8:	mov	r4, r2
   191dc:	mov	r5, r3
   191e0:	ldrd	r2, [sp, #32]
   191e4:	adc	r1, r1, r7
   191e8:	ldrd	sl, [sp, #192]	; 0xc0
   191ec:	ldrd	r6, [sp, #152]	; 0x98
   191f0:	eor	r2, r2, r0
   191f4:	strd	r0, [sp, #216]	; 0xd8
   191f8:	eor	r7, r7, fp
   191fc:	mov	r0, r2
   19200:	eor	r3, r3, r1
   19204:	eor	r6, r6, sl
   19208:	mov	r1, r3
   1920c:	lsr	ip, r8, #16
   19210:	lsr	r3, r0, #24
   19214:	lsl	lr, r7, #1
   19218:	lsr	r2, r4, #16
   1921c:	orr	ip, ip, r9, lsl #16
   19220:	orr	r3, r3, r1, lsl #8
   19224:	orr	lr, lr, r6, lsr #31
   19228:	lsr	r9, r9, #16
   1922c:	lsr	r1, r1, #24
   19230:	str	ip, [sp, #72]	; 0x48
   19234:	str	lr, [sp, #156]	; 0x9c
   19238:	orr	ip, r2, r5, lsl #16
   1923c:	lsl	lr, r6, #1
   19240:	orr	r9, r9, r8, lsl #16
   19244:	orr	r1, r1, r0, lsl #8
   19248:	ldrd	sl, [sp, #184]	; 0xb8
   1924c:	str	ip, [sp, #32]
   19250:	str	r3, [sp, #120]	; 0x78
   19254:	str	r9, [sp, #76]	; 0x4c
   19258:	ldrd	r2, [sp, #128]	; 0x80
   1925c:	str	r1, [sp, #124]	; 0x7c
   19260:	lsr	ip, r5, #16
   19264:	orr	r1, lr, r7, lsr #31
   19268:	str	r1, [sp, #152]	; 0x98
   1926c:	orr	ip, ip, r4, lsl #16
   19270:	ldrd	r0, [sp, #176]	; 0xb0
   19274:	ldrd	r4, [sp, #72]	; 0x48
   19278:	adds	r2, r2, sl
   1927c:	adc	r3, r3, fp
   19280:	adds	r0, r0, r4
   19284:	adc	r1, r1, r5
   19288:	str	ip, [sp, #36]	; 0x24
   1928c:	ldrd	r4, [sp, #32]
   19290:	strd	r0, [sp, #176]	; 0xb0
   19294:	ldrd	r0, [sp, #160]	; 0xa0
   19298:	ldrd	r6, [sp, #232]	; 0xe8
   1929c:	ldrd	sl, [sp, #152]	; 0x98
   192a0:	adds	r0, r0, r4
   192a4:	adc	r1, r1, r5
   192a8:	ldrd	r4, [sp, #120]	; 0x78
   192ac:	strd	r0, [sp, #160]	; 0xa0
   192b0:	adds	r4, r4, r2
   192b4:	adc	r5, r5, r3
   192b8:	ldrd	r2, [sp, #112]	; 0x70
   192bc:	strd	r4, [sp, #184]	; 0xb8
   192c0:	ldrd	r4, [sp, #144]	; 0x90
   192c4:	adds	r2, r2, r6
   192c8:	adc	r3, r3, r7
   192cc:	adds	r0, sl, r2
   192d0:	adc	r1, fp, r3
   192d4:	eor	r4, r4, r0
   192d8:	eor	r5, r5, r1
   192dc:	mov	r2, r0
   192e0:	mov	r3, r1
   192e4:	mov	r0, r5
   192e8:	mov	r1, r4
   192ec:	ldrd	r4, [sp, #168]	; 0xa8
   192f0:	ldrd	r6, [sp, #96]	; 0x60
   192f4:	adds	r4, r4, r0
   192f8:	adc	r5, r5, r1
   192fc:	eor	sl, sl, r4
   19300:	eor	fp, fp, r5
   19304:	lsr	ip, sl, #24
   19308:	orr	r8, ip, fp, lsl #8
   1930c:	adds	r6, r6, r2
   19310:	lsr	ip, fp, #24
   19314:	orr	r9, ip, sl, lsl #8
   19318:	adc	r7, r7, r3
   1931c:	adds	sl, r6, r8
   19320:	adc	fp, r7, r9
   19324:	mov	r2, sl
   19328:	mov	r3, fp
   1932c:	eor	r2, r2, r0
   19330:	eor	r3, r3, r1
   19334:	ldrd	r6, [sp, #184]	; 0xb8
   19338:	mov	r0, r2
   1933c:	mov	r1, r3
   19340:	ldrd	r2, [sp, #56]	; 0x38
   19344:	lsr	lr, r0, #16
   19348:	strd	sl, [sp, #144]	; 0x90
   1934c:	eor	r2, r2, r6
   19350:	eor	r3, r3, r7
   19354:	lsr	ip, r2, #16
   19358:	orr	r7, lr, r1, lsl #16
   1935c:	lsr	r1, r1, #16
   19360:	orr	ip, ip, r3, lsl #16
   19364:	orr	r1, r1, r0, lsl #16
   19368:	lsr	r3, r3, #16
   1936c:	str	r7, [sp, #128]	; 0x80
   19370:	str	r1, [sp, #132]	; 0x84
   19374:	orr	r3, r3, r2, lsl #16
   19378:	str	r3, [sp, #100]	; 0x64
   1937c:	ldrd	r2, [sp, #128]	; 0x80
   19380:	ldrd	r6, [sp, #64]	; 0x40
   19384:	ldrd	r0, [sp, #160]	; 0xa0
   19388:	adds	r2, r2, r4
   1938c:	str	ip, [sp, #96]	; 0x60
   19390:	adc	r3, r3, r5
   19394:	eor	r6, r6, r0
   19398:	mov	r4, r2
   1939c:	mov	r5, r3
   193a0:	eor	r7, r7, r1
   193a4:	ldrd	r2, [sp, #96]	; 0x60
   193a8:	ldrd	r0, [sp, #216]	; 0xd8
   193ac:	strd	r4, [sp, #152]	; 0x98
   193b0:	eor	r4, r4, r8
   193b4:	adds	r0, r0, r2
   193b8:	adc	r1, r1, r3
   193bc:	eor	r5, r5, r9
   193c0:	mov	sl, r0
   193c4:	ldrd	r8, [sp, #136]	; 0x88
   193c8:	mov	fp, r1
   193cc:	mov	r0, r4
   193d0:	mov	r1, r5
   193d4:	ldrd	r4, [sp, #176]	; 0xb0
   193d8:	strd	sl, [sp, #136]	; 0x88
   193dc:	lsl	lr, r6, #1
   193e0:	eor	r8, r8, r4
   193e4:	eor	r9, r9, r5
   193e8:	mov	r2, r8
   193ec:	mov	r3, r9
   193f0:	ldrd	r8, [sp, #120]	; 0x78
   193f4:	lsl	ip, r7, #1
   193f8:	orr	r7, lr, r7, lsr #31
   193fc:	eor	r9, r9, fp
   19400:	mov	r5, r9
   19404:	eor	r8, r8, sl
   19408:	lsl	r9, r1, #1
   1940c:	mov	r4, r8
   19410:	orr	r9, r9, r0, lsr #31
   19414:	lsl	r8, r3, #1
   19418:	str	r9, [sp, #124]	; 0x7c
   1941c:	orr	r9, r8, r2, lsr #31
   19420:	ldrd	sl, [sp, #184]	; 0xb8
   19424:	str	r9, [sp, #68]	; 0x44
   19428:	ldrd	r8, [sp, #80]	; 0x50
   1942c:	orr	ip, ip, r6, lsr #31
   19430:	str	r7, [sp, #56]	; 0x38
   19434:	adds	r8, r8, sl
   19438:	ldrd	r6, [sp, #40]	; 0x28
   1943c:	adc	r9, r9, fp
   19440:	ldrd	sl, [sp, #144]	; 0x90
   19444:	str	ip, [sp, #60]	; 0x3c
   19448:	lsl	r0, r0, #1
   1944c:	lsl	ip, r5, #1
   19450:	lsl	r2, r2, #1
   19454:	adds	sl, sl, r6
   19458:	orr	ip, ip, r4, lsr #31
   1945c:	orr	r1, r0, r1, lsr #31
   19460:	orr	r3, r2, r3, lsr #31
   19464:	adc	fp, fp, r7
   19468:	str	ip, [sp, #116]	; 0x74
   1946c:	ldrd	r6, [sp, #16]
   19470:	str	r3, [sp, #64]	; 0x40
   19474:	str	r1, [sp, #120]	; 0x78
   19478:	ldrd	r0, [sp, #200]	; 0xc8
   1947c:	ldrd	r2, [sp, #8]
   19480:	lsl	ip, r4, #1
   19484:	adds	r6, r6, r0
   19488:	adc	r7, r7, r1
   1948c:	mov	r0, r6
   19490:	mov	r1, r7
   19494:	ldrd	r6, [sp, #208]	; 0xd0
   19498:	orr	ip, ip, r5, lsr #31
   1949c:	str	ip, [sp, #112]	; 0x70
   194a0:	adds	r2, r2, r6
   194a4:	adc	r3, r3, r7
   194a8:	ldrd	r6, [sp, #56]	; 0x38
   194ac:	ldrd	r4, [sp, #72]	; 0x48
   194b0:	adds	r6, r6, sl
   194b4:	adc	r7, r7, fp
   194b8:	mov	sl, r6
   194bc:	mov	fp, r7
   194c0:	ldrd	r6, [sp, #120]	; 0x78
   194c4:	adds	r6, r6, r8
   194c8:	adc	r7, r7, r9
   194cc:	strd	r6, [sp, #80]	; 0x50
   194d0:	ldrd	r6, [sp, #64]	; 0x40
   194d4:	adds	r6, r6, r0
   194d8:	adc	r7, r7, r1
   194dc:	ldrd	r0, [sp, #112]	; 0x70
   194e0:	mov	r8, r6
   194e4:	mov	r9, r7
   194e8:	ldrd	r6, [sp, #80]	; 0x50
   194ec:	adds	r0, r0, r2
   194f0:	adc	r1, r1, r3
   194f4:	eor	r6, r6, r4
   194f8:	eor	r7, r7, r5
   194fc:	ldrd	r4, [sp, #32]
   19500:	mov	r2, r0
   19504:	mov	r3, r1
   19508:	ldrd	r0, [sp, #96]	; 0x60
   1950c:	eor	r4, r4, r2
   19510:	eor	r5, r5, r3
   19514:	strd	r2, [sp, #144]	; 0x90
   19518:	ldrd	r2, [sp, #128]	; 0x80
   1951c:	str	r7, [sp, #40]	; 0x28
   19520:	str	r6, [sp, #44]	; 0x2c
   19524:	eor	r0, r0, sl
   19528:	eor	r1, r1, fp
   1952c:	str	r1, [sp, #72]	; 0x48
   19530:	str	r0, [sp, #76]	; 0x4c
   19534:	strd	r8, [sp, #96]	; 0x60
   19538:	ldrd	r0, [sp, #160]	; 0xa0
   1953c:	eor	r2, r2, r8
   19540:	eor	r3, r3, r9
   19544:	ldrd	r8, [sp, #40]	; 0x28
   19548:	str	r3, [sp, #8]
   1954c:	str	r2, [sp, #12]
   19550:	ldrd	r6, [sp, #176]	; 0xb0
   19554:	ldrd	r2, [sp, #72]	; 0x48
   19558:	adds	r0, r0, r8
   1955c:	adc	r1, r1, r9
   19560:	adds	r6, r6, r2
   19564:	adc	r7, r7, r3
   19568:	mov	r2, r6
   1956c:	mov	r3, r7
   19570:	ldrd	r6, [sp, #120]	; 0x78
   19574:	strd	r0, [sp, #128]	; 0x80
   19578:	eor	r6, r6, r0
   1957c:	eor	r7, r7, r1
   19580:	ldrd	r0, [sp, #136]	; 0x88
   19584:	strd	r6, [sp, #32]
   19588:	ldrd	r6, [sp, #8]
   1958c:	adds	r0, r0, r6
   19590:	adc	r1, r1, r7
   19594:	ldrd	r6, [sp, #56]	; 0x38
   19598:	strd	r2, [sp, #136]	; 0x88
   1959c:	mov	r9, r1
   195a0:	eor	r6, r6, r2
   195a4:	eor	r7, r7, r3
   195a8:	mov	r2, r6
   195ac:	mov	r3, r7
   195b0:	ldrd	r6, [sp, #64]	; 0x40
   195b4:	mov	r8, r0
   195b8:	ldr	ip, [sp, #32]
   195bc:	eor	r7, r7, r9
   195c0:	eor	r6, r6, r8
   195c4:	mov	r1, r7
   195c8:	lsr	r7, r2, #24
   195cc:	strd	r8, [sp, #120]	; 0x78
   195d0:	mov	r0, r6
   195d4:	mov	r9, r7
   195d8:	ldrd	r6, [sp, #32]
   195dc:	lsr	ip, ip, #24
   195e0:	orr	ip, ip, r7, lsl #8
   195e4:	lsr	lr, r7, #24
   195e8:	orr	r7, r9, r3, lsl #8
   195ec:	ldrd	r8, [sp, #24]
   195f0:	str	r7, [sp, #64]	; 0x40
   195f4:	ldrd	r6, [sp, #80]	; 0x50
   195f8:	adds	r8, r8, sl
   195fc:	adc	r9, r9, fp
   19600:	lsr	r3, r3, #24
   19604:	strd	r8, [sp, #160]	; 0xa0
   19608:	ldrd	r8, [sp, #48]	; 0x30
   1960c:	ldrd	sl, [sp, #96]	; 0x60
   19610:	orr	r3, r3, r2, lsl #8
   19614:	adds	r6, r6, r8
   19618:	adc	r7, r7, r9
   1961c:	mov	r8, r6
   19620:	mov	r9, r7
   19624:	str	r3, [sp, #68]	; 0x44
   19628:	strd	r8, [sp, #48]	; 0x30
   1962c:	ldrd	r8, [sp, #104]	; 0x68
   19630:	ldrd	r2, [sp, #152]	; 0x98
   19634:	ldr	r6, [sp, #32]
   19638:	adds	r8, r8, sl
   1963c:	adc	r9, r9, fp
   19640:	adds	r2, r2, r5
   19644:	adc	r3, r3, r4
   19648:	strd	r8, [sp, #32]
   1964c:	mov	r8, r5
   19650:	mov	r9, r4
   19654:	ldrd	r4, [sp, #112]	; 0x70
   19658:	strd	r2, [sp, #96]	; 0x60
   1965c:	ldrd	sl, [sp, #144]	; 0x90
   19660:	eor	r4, r4, r2
   19664:	eor	r5, r5, r3
   19668:	lsr	r3, r4, #24
   1966c:	orr	r3, r3, r5, lsl #8
   19670:	str	r3, [sp, #24]
   19674:	ldrd	r2, [sp, #88]	; 0x58
   19678:	orr	r7, lr, r6, lsl #8
   1967c:	str	ip, [sp, #56]	; 0x38
   19680:	adds	r2, r2, sl
   19684:	str	r7, [sp, #60]	; 0x3c
   19688:	adc	r3, r3, fp
   1968c:	ldrd	r6, [sp, #48]	; 0x30
   19690:	ldrd	sl, [sp, #56]	; 0x38
   19694:	lsr	ip, r0, #24
   19698:	orr	ip, ip, r1, lsl #8
   1969c:	lsr	r1, r1, #24
   196a0:	adds	sl, sl, r6
   196a4:	orr	r1, r1, r0, lsl #8
   196a8:	adc	fp, fp, r7
   196ac:	str	r1, [sp, #20]
   196b0:	ldrd	r6, [sp, #64]	; 0x40
   196b4:	ldrd	r0, [sp, #160]	; 0xa0
   196b8:	str	ip, [sp, #16]
   196bc:	lsr	ip, r5, #24
   196c0:	adds	r0, r0, r6
   196c4:	adc	r1, r1, r7
   196c8:	mov	r6, r0
   196cc:	mov	r7, r1
   196d0:	orr	r1, ip, r4, lsl #8
   196d4:	strd	r6, [sp, #80]	; 0x50
   196d8:	str	r1, [sp, #28]
   196dc:	ldrd	r6, [sp, #40]	; 0x28
   196e0:	strd	sl, [sp, #104]	; 0x68
   196e4:	ldrd	r0, [sp, #32]
   196e8:	ldrd	r4, [sp, #16]
   196ec:	eor	r6, r6, sl
   196f0:	eor	r7, r7, fp
   196f4:	adds	r4, r4, r0
   196f8:	adc	r5, r5, r1
   196fc:	ldrd	sl, [sp, #72]	; 0x48
   19700:	mov	r0, r4
   19704:	mov	r1, r5
   19708:	ldrd	r4, [sp, #80]	; 0x50
   1970c:	strd	r6, [sp, #40]	; 0x28
   19710:	ldrd	r6, [sp, #8]
   19714:	eor	sl, sl, r4
   19718:	eor	fp, fp, r5
   1971c:	mov	r4, sl
   19720:	mov	r5, fp
   19724:	ldrd	sl, [sp, #24]
   19728:	eor	r6, r6, r0
   1972c:	eor	r7, r7, r1
   19730:	adds	sl, sl, r2
   19734:	adc	fp, fp, r3
   19738:	mov	r2, sl
   1973c:	strd	sl, [sp, #88]	; 0x58
   19740:	mov	r3, fp
   19744:	ldrd	sl, [sp, #40]	; 0x28
   19748:	strd	r0, [sp, #72]	; 0x48
   1974c:	mov	r0, r6
   19750:	lsr	lr, sl, #16
   19754:	ldr	r6, [sp, #4]
   19758:	mov	r1, r7
   1975c:	orr	r7, lr, fp, lsl #16
   19760:	str	r7, [sp, #40]	; 0x28
   19764:	lsr	r7, fp, #16
   19768:	orr	r7, r7, sl, lsl #16
   1976c:	eor	r2, r2, r8
   19770:	str	r7, [sp, #44]	; 0x2c
   19774:	eor	r3, r3, r9
   19778:	ldrd	r8, [r6]
   1977c:	ldrd	r6, [r6, #8]
   19780:	lsr	ip, r4, #16
   19784:	strd	r8, [sp, #144]	; 0x90
   19788:	strd	r6, [sp, #152]	; 0x98
   1978c:	ldrd	r8, [sp, #128]	; 0x80
   19790:	ldrd	r6, [sp, #40]	; 0x28
   19794:	orr	ip, ip, r5, lsl #16
   19798:	str	ip, [sp, #48]	; 0x30
   1979c:	adds	r8, r8, r6
   197a0:	lsr	ip, r2, #16
   197a4:	lsr	r5, r5, #16
   197a8:	adc	r9, r9, r7
   197ac:	lsr	lr, r0, #16
   197b0:	ldrd	r6, [sp, #72]	; 0x48
   197b4:	orr	r5, r5, r4, lsl #16
   197b8:	orr	ip, ip, r3, lsl #16
   197bc:	lsr	r3, r3, #16
   197c0:	str	r5, [sp, #52]	; 0x34
   197c4:	orr	r3, r3, r2, lsl #16
   197c8:	orr	r5, lr, r1, lsl #16
   197cc:	lsr	r1, r1, #16
   197d0:	str	r3, [sp, #36]	; 0x24
   197d4:	orr	r1, r1, r0, lsl #16
   197d8:	mov	r2, r8
   197dc:	mov	r3, r9
   197e0:	str	r5, [sp, #8]
   197e4:	ldrd	sl, [sp, #136]	; 0x88
   197e8:	ldrd	r4, [sp, #48]	; 0x30
   197ec:	str	r1, [sp, #12]
   197f0:	eor	r2, r2, r6
   197f4:	eor	r3, r3, r7
   197f8:	ldrd	r0, [sp, #120]	; 0x78
   197fc:	mov	r6, r2
   19800:	mov	r7, r3
   19804:	ldrd	r2, [sp, #8]
   19808:	adds	sl, sl, r4
   1980c:	adc	fp, fp, r5
   19810:	adds	r0, r0, r2
   19814:	adc	r1, r1, r3
   19818:	ldrd	r4, [sp, #88]	; 0x58
   1981c:	mov	r2, r0
   19820:	mov	r3, r1
   19824:	str	ip, [sp, #32]
   19828:	strd	r8, [sp, #112]	; 0x70
   1982c:	ldrd	r0, [sp, #96]	; 0x60
   19830:	ldrd	r8, [sp, #32]
   19834:	eor	r4, r4, sl
   19838:	eor	r5, r5, fp
   1983c:	adds	r0, r0, r8
   19840:	adc	r1, r1, r9
   19844:	ldrd	r8, [sp, #112]	; 0x70
   19848:	strd	r0, [sp, #72]	; 0x48
   1984c:	ldrd	r0, [sp, #56]	; 0x38
   19850:	strd	r2, [sp, #88]	; 0x58
   19854:	ldr	lr, [sp, #4]
   19858:	eor	r8, r8, r0
   1985c:	eor	r9, r9, r1
   19860:	ldrd	r0, [sp, #144]	; 0x90
   19864:	lsl	ip, r9, #1
   19868:	eor	r0, r0, r6
   1986c:	eor	r1, r1, r7
   19870:	mov	r6, r0
   19874:	mov	r7, r1
   19878:	ldrd	r0, [sp, #64]	; 0x40
   1987c:	strd	r6, [lr]
   19880:	ldrd	r6, [lr, #16]
   19884:	eor	r0, r0, sl
   19888:	eor	r1, r1, fp
   1988c:	mov	sl, r0
   19890:	mov	fp, r1
   19894:	ldrd	r0, [sp, #152]	; 0x98
   19898:	strd	r6, [sp, #96]	; 0x60
   1989c:	ldrd	r6, [lr, #32]
   198a0:	eor	r0, r0, r4
   198a4:	eor	r1, r1, r5
   198a8:	mov	r4, r0
   198ac:	mov	r5, r1
   198b0:	ldrd	r0, [sp, #16]
   198b4:	strd	r4, [lr, #8]
   198b8:	lsl	r5, fp, #1
   198bc:	eor	r0, r0, r2
   198c0:	eor	r1, r1, r3
   198c4:	ldrd	r2, [sp, #72]	; 0x48
   198c8:	strd	r0, [sp, #16]
   198cc:	ldrd	r0, [sp, #24]
   198d0:	orr	r5, r5, sl, lsr #31
   198d4:	strd	r6, [sp, #120]	; 0x78
   198d8:	eor	r0, r0, r2
   198dc:	eor	r1, r1, r3
   198e0:	mov	r2, r0
   198e4:	mov	r3, r1
   198e8:	ldrd	r0, [lr, #56]	; 0x38
   198ec:	str	r5, [sp, #28]
   198f0:	lsl	r5, sl, #1
   198f4:	strd	r0, [sp, #152]	; 0x98
   198f8:	ldr	r1, [sp, #20]
   198fc:	lsl	r4, r1, #1
   19900:	ldrd	r0, [lr, #40]	; 0x28
   19904:	strd	r0, [sp, #128]	; 0x80
   19908:	lsl	r1, r3, #1
   1990c:	str	r1, [sp, #136]	; 0x88
   19910:	ldrd	r0, [lr, #48]	; 0x30
   19914:	strd	r0, [sp, #144]	; 0x90
   19918:	ldrd	r0, [lr, #24]
   1991c:	strd	r0, [sp, #112]	; 0x70
   19920:	orr	r1, ip, r8, lsr #31
   19924:	str	r1, [sp, #68]	; 0x44
   19928:	ldrd	r0, [sp, #16]
   1992c:	ldr	r1, [sp, #136]	; 0x88
   19930:	lsl	ip, r8, #1
   19934:	orr	lr, r1, r2, lsr #31
   19938:	str	lr, [sp, #60]	; 0x3c
   1993c:	orr	lr, ip, r9, lsr #31
   19940:	str	lr, [sp, #64]	; 0x40
   19944:	orr	r7, r4, r0, lsr #31
   19948:	orr	lr, r5, fp, lsr #31
   1994c:	ldrd	r8, [sp, #64]	; 0x40
   19950:	ldrd	r4, [sp, #152]	; 0x98
   19954:	ldr	r1, [sp, #20]
   19958:	str	lr, [sp, #24]
   1995c:	eor	r8, r8, r4
   19960:	eor	r9, r9, r5
   19964:	mov	sl, r8
   19968:	ldrd	r4, [sp, #24]
   1996c:	mov	fp, r9
   19970:	ldrd	r8, [sp, #120]	; 0x78
   19974:	lsl	r0, r0, #1
   19978:	lsl	r2, r2, #1
   1997c:	orr	r6, r0, r1, lsr #31
   19980:	orr	r3, r2, r3, lsr #31
   19984:	ldrd	r0, [sp, #128]	; 0x80
   19988:	str	r3, [sp, #56]	; 0x38
   1998c:	eor	r4, r4, r8
   19990:	ldrd	r2, [sp, #96]	; 0x60
   19994:	eor	r5, r5, r9
   19998:	ldrd	r8, [sp, #88]	; 0x58
   1999c:	eor	r0, r0, r6
   199a0:	eor	r1, r1, r7
   199a4:	eor	r8, r8, r2
   199a8:	eor	r9, r9, r3
   199ac:	mov	r6, r0
   199b0:	ldrd	r2, [sp, #144]	; 0x90
   199b4:	mov	r7, r1
   199b8:	ldrd	r0, [sp, #56]	; 0x38
   199bc:	ldr	ip, [sp, #4]
   199c0:	eor	r0, r0, r2
   199c4:	eor	r1, r1, r3
   199c8:	ldrd	r2, [sp, #80]	; 0x50
   199cc:	strd	r0, [sp, #16]
   199d0:	ldrd	r0, [sp, #112]	; 0x70
   199d4:	eor	r2, r2, r0
   199d8:	eor	r3, r3, r1
   199dc:	ldrd	r0, [sp, #8]
   199e0:	eor	r0, r0, sl
   199e4:	eor	r1, r1, fp
   199e8:	ldrd	sl, [sp, #104]	; 0x68
   199ec:	strd	r0, [sp, #8]
   199f0:	ldrd	r0, [sp, #32]
   199f4:	eor	sl, sl, r8
   199f8:	eor	fp, fp, r9
   199fc:	mov	r8, sl
   19a00:	mov	r9, fp
   19a04:	ldrd	sl, [sp, #40]	; 0x28
   19a08:	eor	r0, r0, r4
   19a0c:	eor	r1, r1, r5
   19a10:	eor	sl, sl, r6
   19a14:	eor	fp, fp, r7
   19a18:	mov	r6, sl
   19a1c:	mov	r7, fp
   19a20:	mov	r4, r0
   19a24:	ldrd	sl, [sp, #48]	; 0x30
   19a28:	mov	r5, r1
   19a2c:	ldrd	r0, [sp, #16]
   19a30:	strd	r8, [ip, #16]
   19a34:	strd	r6, [ip, #40]	; 0x28
   19a38:	eor	r0, r0, sl
   19a3c:	eor	r1, r1, fp
   19a40:	ldrd	sl, [sp, #72]	; 0x48
   19a44:	eor	sl, sl, r2
   19a48:	eor	fp, fp, r3
   19a4c:	mov	r2, sl
   19a50:	mov	r3, fp
   19a54:	ldrd	sl, [sp, #8]
   19a58:	strd	sl, [ip, #56]	; 0x38
   19a5c:	strd	r4, [ip, #32]
   19a60:	strd	r0, [ip, #48]	; 0x30
   19a64:	strd	r2, [ip, #24]
   19a68:	add	sp, sp, #548	; 0x224
   19a6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19a70:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   19a74:	mov	r4, r0
   19a78:	ldr	r0, [r0, #224]	; 0xe0
   19a7c:	mov	r5, r2
   19a80:	rsb	r8, r0, #128	; 0x80
   19a84:	cmp	r8, r2
   19a88:	mov	r6, r1
   19a8c:	addcs	r7, r4, #96	; 0x60
   19a90:	bcc	19ab4 <__assert_fail@plt+0x87c8>
   19a94:	mov	r2, r5
   19a98:	mov	r1, r6
   19a9c:	add	r0, r7, r0
   19aa0:	bl	11058 <memcpy@plt>
   19aa4:	ldr	r3, [r4, #224]	; 0xe0
   19aa8:	add	r5, r3, r5
   19aac:	str	r5, [r4, #224]	; 0xe0
   19ab0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   19ab4:	mov	r3, #0
   19ab8:	add	r7, r4, #96	; 0x60
   19abc:	str	r3, [r4, #224]	; 0xe0
   19ac0:	mov	r2, r8
   19ac4:	add	r0, r7, r0
   19ac8:	bl	11058 <memcpy@plt>
   19acc:	ldrd	r2, [r4, #64]	; 0x40
   19ad0:	ldrd	r0, [r4, #72]	; 0x48
   19ad4:	sub	r5, r5, r8
   19ad8:	adds	r2, r2, #128	; 0x80
   19adc:	adc	r3, r3, #0
   19ae0:	cmp	r3, #0
   19ae4:	cmpeq	r2, #127	; 0x7f
   19ae8:	movls	ip, #1
   19aec:	movhi	ip, #0
   19af0:	strd	r2, [r4, #64]	; 0x40
   19af4:	add	r6, r6, r8
   19af8:	adds	r2, r0, ip
   19afc:	adc	r3, r1, #0
   19b00:	mov	r0, r4
   19b04:	mov	r1, r7
   19b08:	strd	r2, [r4, #72]	; 0x48
   19b0c:	bl	131d8 <__assert_fail@plt+0x1eec>
   19b10:	cmp	r5, #128	; 0x80
   19b14:	ldrls	r0, [r4, #224]	; 0xe0
   19b18:	bls	19a94 <__assert_fail@plt+0x87a8>
   19b1c:	mov	r9, r5
   19b20:	mov	r8, r6
   19b24:	ldrd	r2, [r4, #64]	; 0x40
   19b28:	ldrd	r0, [r4, #72]	; 0x48
   19b2c:	sub	r9, r9, #128	; 0x80
   19b30:	adds	r2, r2, #128	; 0x80
   19b34:	adc	r3, r3, #0
   19b38:	cmp	r3, #0
   19b3c:	cmpeq	r2, #127	; 0x7f
   19b40:	movls	ip, #1
   19b44:	movhi	ip, #0
   19b48:	adds	r0, r0, ip
   19b4c:	adc	r1, r1, #0
   19b50:	strd	r2, [r4, #64]	; 0x40
   19b54:	strd	r0, [r4, #72]	; 0x48
   19b58:	mov	r1, r8
   19b5c:	mov	r0, r4
   19b60:	bl	131d8 <__assert_fail@plt+0x1eec>
   19b64:	cmp	r9, #128	; 0x80
   19b68:	add	r8, r8, #128	; 0x80
   19b6c:	bhi	19b24 <__assert_fail@plt+0x8838>
   19b70:	sub	r3, r5, #129	; 0x81
   19b74:	bic	r2, r3, #127	; 0x7f
   19b78:	mov	r3, r2
   19b7c:	sub	r5, r5, #128	; 0x80
   19b80:	add	r2, r2, #128	; 0x80
   19b84:	ldr	r0, [r4, #224]	; 0xe0
   19b88:	sub	r5, r5, r3
   19b8c:	add	r6, r6, r2
   19b90:	b	19a94 <__assert_fail@plt+0x87a8>
   19b94:	push	{r4, r5, r6, r7, lr}
   19b98:	mov	r2, #240	; 0xf0
   19b9c:	ldr	r4, [pc, #144]	; 19c34 <__assert_fail@plt+0x8948>
   19ba0:	mov	r6, r0
   19ba4:	sub	sp, sp, #12
   19ba8:	mov	r7, r1
   19bac:	mov	r1, #0
   19bb0:	bl	111f0 <memset@plt>
   19bb4:	add	r5, r4, #64	; 0x40
   19bb8:	mov	lr, r6
   19bbc:	mov	ip, r4
   19bc0:	add	lr, lr, #16
   19bc4:	ldm	ip!, {r0, r1, r2, r3}
   19bc8:	add	r4, r4, #16
   19bcc:	cmp	ip, r5
   19bd0:	str	r0, [lr, #-16]
   19bd4:	str	r1, [lr, #-12]
   19bd8:	str	r2, [lr, #-8]
   19bdc:	str	r3, [lr, #-4]
   19be0:	bne	19bbc <__assert_fail@plt+0x88d0>
   19be4:	mov	ip, r7
   19be8:	sub	r2, r6, #8
   19bec:	add	lr, r6, #56	; 0x38
   19bf0:	ldr	r0, [ip]
   19bf4:	ldr	r1, [ip, #4]
   19bf8:	mov	r3, sp
   19bfc:	ldrd	r4, [r2, #8]
   19c00:	stmia	r3!, {r0, r1}
   19c04:	ldrd	r0, [sp]
   19c08:	add	ip, ip, #8
   19c0c:	eor	r4, r4, r0
   19c10:	eor	r5, r5, r1
   19c14:	strd	r4, [r2, #8]!
   19c18:	cmp	lr, r2
   19c1c:	bne	19bf0 <__assert_fail@plt+0x8904>
   19c20:	ldrb	r3, [r7]
   19c24:	mov	r0, #0
   19c28:	str	r3, [r6, #228]	; 0xe4
   19c2c:	add	sp, sp, #12
   19c30:	pop	{r4, r5, r6, r7, pc}
   19c34:	andeq	pc, r3, r8, ror #9
   19c38:	sub	r3, r1, #1
   19c3c:	cmp	r3, #63	; 0x3f
   19c40:	bhi	19d38 <__assert_fail@plt+0x8a4c>
   19c44:	push	{r4, r5, r6, r7, r8, r9, lr}
   19c48:	mov	r3, #0
   19c4c:	sub	sp, sp, #76	; 0x4c
   19c50:	ldr	r4, [pc, #232]	; 19d40 <__assert_fail@plt+0x8a54>
   19c54:	mov	ip, #1
   19c58:	mov	r9, r0
   19c5c:	mov	r8, r1
   19c60:	mov	r2, #240	; 0xf0
   19c64:	mov	r1, r3
   19c68:	strb	r8, [sp, #8]
   19c6c:	strb	r3, [sp, #9]
   19c70:	str	r3, [sp, #12]
   19c74:	str	r3, [sp, #16]
   19c78:	str	r3, [sp, #20]
   19c7c:	strb	r3, [sp, #24]
   19c80:	strb	r3, [sp, #25]
   19c84:	str	r3, [sp, #26]
   19c88:	str	r3, [sp, #40]	; 0x28
   19c8c:	str	r3, [sp, #56]	; 0x38
   19c90:	str	r3, [sp, #30]
   19c94:	str	r3, [sp, #34]	; 0x22
   19c98:	strh	r3, [sp, #38]	; 0x26
   19c9c:	str	r3, [sp, #44]	; 0x2c
   19ca0:	str	r3, [sp, #48]	; 0x30
   19ca4:	str	r3, [sp, #52]	; 0x34
   19ca8:	str	r3, [sp, #60]	; 0x3c
   19cac:	str	r3, [sp, #64]	; 0x40
   19cb0:	str	r3, [sp, #68]	; 0x44
   19cb4:	strb	ip, [sp, #10]
   19cb8:	strb	ip, [sp, #11]
   19cbc:	add	r5, r4, #64	; 0x40
   19cc0:	bl	111f0 <memset@plt>
   19cc4:	mov	lr, r9
   19cc8:	mov	ip, r4
   19ccc:	add	lr, lr, #16
   19cd0:	ldm	ip!, {r0, r1, r2, r3}
   19cd4:	add	r4, r4, #16
   19cd8:	cmp	ip, r5
   19cdc:	str	r0, [lr, #-16]
   19ce0:	str	r1, [lr, #-12]
   19ce4:	str	r2, [lr, #-8]
   19ce8:	str	r3, [lr, #-4]
   19cec:	bne	19cc8 <__assert_fail@plt+0x89dc>
   19cf0:	add	r2, sp, #8
   19cf4:	sub	r3, r9, #8
   19cf8:	add	lr, r9, #56	; 0x38
   19cfc:	mov	ip, sp
   19d00:	ldm	r2, {r0, r1}
   19d04:	ldrd	r4, [r3, #8]
   19d08:	add	r2, r2, #8
   19d0c:	stm	ip, {r0, r1}
   19d10:	ldrd	r6, [sp]
   19d14:	eor	r4, r4, r6
   19d18:	eor	r5, r5, r7
   19d1c:	strd	r4, [r3, #8]!
   19d20:	cmp	lr, r3
   19d24:	bne	19d00 <__assert_fail@plt+0x8a14>
   19d28:	mov	r0, #0
   19d2c:	str	r8, [r9, #228]	; 0xe4
   19d30:	add	sp, sp, #76	; 0x4c
   19d34:	pop	{r4, r5, r6, r7, r8, r9, pc}
   19d38:	mvn	r0, #0
   19d3c:	bx	lr
   19d40:	andeq	pc, r3, r8, ror #9
   19d44:	sub	ip, r1, #1
   19d48:	cmp	ip, #63	; 0x3f
   19d4c:	bhi	19ebc <__assert_fail@plt+0x8bd0>
   19d50:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19d54:	sub	ip, r3, #1
   19d58:	clz	lr, r2
   19d5c:	lsr	lr, lr, #5
   19d60:	cmp	ip, #63	; 0x3f
   19d64:	movls	ip, lr
   19d68:	orrhi	ip, lr, #1
   19d6c:	cmp	ip, #0
   19d70:	sub	sp, sp, #196	; 0xc4
   19d74:	bne	19eb4 <__assert_fail@plt+0x8bc8>
   19d78:	ldr	r4, [pc, #324]	; 19ec4 <__assert_fail@plt+0x8bd8>
   19d7c:	mov	r7, r0
   19d80:	strb	r1, [sp]
   19d84:	strb	r3, [sp, #1]
   19d88:	mov	r9, r3
   19d8c:	mov	sl, r2
   19d90:	mov	r3, #1
   19d94:	mov	r8, r1
   19d98:	mov	r2, #240	; 0xf0
   19d9c:	mov	r1, ip
   19da0:	str	ip, [sp, #4]
   19da4:	str	ip, [sp, #8]
   19da8:	str	ip, [sp, #12]
   19dac:	strb	ip, [sp, #16]
   19db0:	strb	ip, [sp, #17]
   19db4:	str	ip, [sp, #18]
   19db8:	str	ip, [sp, #32]
   19dbc:	str	ip, [sp, #48]	; 0x30
   19dc0:	str	ip, [sp, #22]
   19dc4:	str	ip, [sp, #26]
   19dc8:	strh	ip, [sp, #30]
   19dcc:	str	ip, [sp, #36]	; 0x24
   19dd0:	str	ip, [sp, #40]	; 0x28
   19dd4:	str	ip, [sp, #44]	; 0x2c
   19dd8:	str	ip, [sp, #52]	; 0x34
   19ddc:	str	ip, [sp, #56]	; 0x38
   19de0:	str	ip, [sp, #60]	; 0x3c
   19de4:	strb	r3, [sp, #2]
   19de8:	strb	r3, [sp, #3]
   19dec:	add	r5, r4, #64	; 0x40
   19df0:	bl	111f0 <memset@plt>
   19df4:	mov	lr, r7
   19df8:	mov	ip, r4
   19dfc:	add	lr, lr, #16
   19e00:	ldm	ip!, {r0, r1, r2, r3}
   19e04:	add	r4, r4, #16
   19e08:	cmp	ip, r5
   19e0c:	str	r0, [lr, #-16]
   19e10:	str	r1, [lr, #-12]
   19e14:	str	r2, [lr, #-8]
   19e18:	str	r3, [lr, #-4]
   19e1c:	bne	19df8 <__assert_fail@plt+0x8b0c>
   19e20:	mov	lr, sp
   19e24:	sub	ip, r7, #8
   19e28:	add	fp, r7, #56	; 0x38
   19e2c:	add	r6, sp, #64	; 0x40
   19e30:	ldm	lr, {r0, r1}
   19e34:	ldrd	r4, [ip, #8]
   19e38:	add	lr, lr, #8
   19e3c:	stm	r6, {r0, r1}
   19e40:	ldrd	r2, [sp, #64]	; 0x40
   19e44:	eor	r2, r2, r4
   19e48:	eor	r3, r3, r5
   19e4c:	strd	r2, [ip, #8]!
   19e50:	cmp	fp, ip
   19e54:	bne	19e30 <__assert_fail@plt+0x8b44>
   19e58:	mov	r2, #128	; 0x80
   19e5c:	mov	r1, #0
   19e60:	str	r8, [r7, #228]	; 0xe4
   19e64:	mov	r0, r6
   19e68:	bl	111f0 <memset@plt>
   19e6c:	mov	r3, #128	; 0x80
   19e70:	mov	r2, r9
   19e74:	mov	r1, sl
   19e78:	mov	r0, r6
   19e7c:	bl	110d0 <__memcpy_chk@plt>
   19e80:	mov	r0, r7
   19e84:	mov	r2, #128	; 0x80
   19e88:	mov	r1, r6
   19e8c:	bl	19a70 <__assert_fail@plt+0x8784>
   19e90:	ldr	r3, [pc, #48]	; 19ec8 <__assert_fail@plt+0x8bdc>
   19e94:	mov	r0, r6
   19e98:	mov	r2, #128	; 0x80
   19e9c:	ldr	r3, [r3]
   19ea0:	mov	r1, #0
   19ea4:	blx	r3
   19ea8:	mov	r0, #0
   19eac:	add	sp, sp, #196	; 0xc4
   19eb0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19eb4:	mvn	r0, #0
   19eb8:	b	19eac <__assert_fail@plt+0x8bc0>
   19ebc:	mvn	r0, #0
   19ec0:	bx	lr
   19ec4:	andeq	pc, r3, r8, ror #9
   19ec8:	andeq	r2, r5, r4, lsr r1
   19ecc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   19ed0:	subs	r5, r2, #0
   19ed4:	beq	19f10 <__assert_fail@plt+0x8c24>
   19ed8:	mov	r4, r0
   19edc:	ldr	r0, [r0, #224]	; 0xe0
   19ee0:	mov	r6, r1
   19ee4:	rsb	r8, r0, #128	; 0x80
   19ee8:	cmp	r5, r8
   19eec:	addls	r7, r4, #96	; 0x60
   19ef0:	bhi	19f18 <__assert_fail@plt+0x8c2c>
   19ef4:	mov	r2, r5
   19ef8:	mov	r1, r6
   19efc:	add	r0, r7, r0
   19f00:	bl	11058 <memcpy@plt>
   19f04:	ldr	r3, [r4, #224]	; 0xe0
   19f08:	add	r5, r3, r5
   19f0c:	str	r5, [r4, #224]	; 0xe0
   19f10:	mov	r0, #0
   19f14:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   19f18:	mov	r3, #0
   19f1c:	add	r7, r4, #96	; 0x60
   19f20:	str	r3, [r4, #224]	; 0xe0
   19f24:	mov	r2, r8
   19f28:	add	r0, r7, r0
   19f2c:	bl	11058 <memcpy@plt>
   19f30:	ldrd	r2, [r4, #64]	; 0x40
   19f34:	ldrd	r0, [r4, #72]	; 0x48
   19f38:	sub	r5, r5, r8
   19f3c:	adds	r2, r2, #128	; 0x80
   19f40:	adc	r3, r3, #0
   19f44:	cmp	r3, #0
   19f48:	cmpeq	r2, #127	; 0x7f
   19f4c:	movls	ip, #1
   19f50:	movhi	ip, #0
   19f54:	strd	r2, [r4, #64]	; 0x40
   19f58:	add	r6, r6, r8
   19f5c:	adds	r2, r0, ip
   19f60:	adc	r3, r1, #0
   19f64:	mov	r0, r4
   19f68:	mov	r1, r7
   19f6c:	strd	r2, [r4, #72]	; 0x48
   19f70:	bl	131d8 <__assert_fail@plt+0x1eec>
   19f74:	cmp	r5, #128	; 0x80
   19f78:	ldrls	r0, [r4, #224]	; 0xe0
   19f7c:	bls	19ef4 <__assert_fail@plt+0x8c08>
   19f80:	mov	r9, r5
   19f84:	mov	r8, r6
   19f88:	ldrd	r2, [r4, #64]	; 0x40
   19f8c:	ldrd	r0, [r4, #72]	; 0x48
   19f90:	sub	r9, r9, #128	; 0x80
   19f94:	adds	r2, r2, #128	; 0x80
   19f98:	adc	r3, r3, #0
   19f9c:	cmp	r3, #0
   19fa0:	cmpeq	r2, #127	; 0x7f
   19fa4:	movls	ip, #1
   19fa8:	movhi	ip, #0
   19fac:	adds	r0, r0, ip
   19fb0:	adc	r1, r1, #0
   19fb4:	strd	r2, [r4, #64]	; 0x40
   19fb8:	strd	r0, [r4, #72]	; 0x48
   19fbc:	mov	r1, r8
   19fc0:	mov	r0, r4
   19fc4:	bl	131d8 <__assert_fail@plt+0x1eec>
   19fc8:	cmp	r9, #128	; 0x80
   19fcc:	add	r8, r8, #128	; 0x80
   19fd0:	bhi	19f88 <__assert_fail@plt+0x8c9c>
   19fd4:	sub	r3, r5, #129	; 0x81
   19fd8:	bic	r2, r3, #127	; 0x7f
   19fdc:	mov	r3, r2
   19fe0:	sub	r5, r5, #128	; 0x80
   19fe4:	add	r2, r2, #128	; 0x80
   19fe8:	ldr	r0, [r4, #224]	; 0xe0
   19fec:	sub	r5, r5, r3
   19ff0:	add	r6, r6, r2
   19ff4:	b	19ef4 <__assert_fail@plt+0x8c08>
   19ff8:	push	{r4, r5, r6, r7, r8, r9, lr}
   19ffc:	sub	sp, sp, #76	; 0x4c
   1a000:	mov	r6, r1
   1a004:	mov	r7, r0
   1a008:	mov	r4, r2
   1a00c:	add	r0, sp, #8
   1a010:	mov	r2, #64	; 0x40
   1a014:	mov	r1, #0
   1a018:	bl	111f0 <memset@plt>
   1a01c:	cmp	r6, #0
   1a020:	beq	1a11c <__assert_fail@plt+0x8e30>
   1a024:	ldr	r3, [r7, #228]	; 0xe4
   1a028:	cmp	r3, r4
   1a02c:	bhi	1a11c <__assert_fail@plt+0x8e30>
   1a030:	ldrd	r2, [r7, #80]	; 0x50
   1a034:	orrs	r3, r2, r3
   1a038:	bne	1a11c <__assert_fail@plt+0x8e30>
   1a03c:	ldrd	r0, [r7, #64]	; 0x40
   1a040:	ldr	r2, [r7, #224]	; 0xe0
   1a044:	mov	r9, #0
   1a048:	adds	r0, r0, r2
   1a04c:	adc	r1, r1, r9
   1a050:	cmp	r9, r1
   1a054:	ldrd	r4, [r7, #72]	; 0x48
   1a058:	cmpeq	r2, r0
   1a05c:	ldrb	r3, [r7, #232]	; 0xe8
   1a060:	movhi	ip, #1
   1a064:	movls	ip, #0
   1a068:	adds	r4, r4, ip
   1a06c:	adc	r5, r5, #0
   1a070:	cmp	r3, #0
   1a074:	strd	r0, [r7, #64]	; 0x40
   1a078:	strd	r4, [r7, #72]	; 0x48
   1a07c:	bne	1a10c <__assert_fail@plt+0x8e20>
   1a080:	mvn	r0, #0
   1a084:	mvn	r1, #0
   1a088:	add	r4, r7, #96	; 0x60
   1a08c:	strd	r0, [r7, #80]	; 0x50
   1a090:	add	r0, r4, r2
   1a094:	mov	r1, #0
   1a098:	rsb	r2, r2, #128	; 0x80
   1a09c:	bl	111f0 <memset@plt>
   1a0a0:	mov	r1, r4
   1a0a4:	mov	r0, r7
   1a0a8:	bl	131d8 <__assert_fail@plt+0x1eec>
   1a0ac:	sub	r2, r7, #8
   1a0b0:	add	r3, sp, #8
   1a0b4:	add	lr, r7, #56	; 0x38
   1a0b8:	mov	ip, sp
   1a0bc:	ldrd	r0, [r2, #8]!
   1a0c0:	strd	r0, [sp]
   1a0c4:	ldm	ip, {r0, r1}
   1a0c8:	cmp	r2, lr
   1a0cc:	stm	r3, {r0, r1}
   1a0d0:	add	r3, r3, #8
   1a0d4:	bne	1a0bc <__assert_fail@plt+0x8dd0>
   1a0d8:	ldr	r2, [r7, #228]	; 0xe4
   1a0dc:	add	r1, sp, #8
   1a0e0:	mov	r0, r6
   1a0e4:	bl	11058 <memcpy@plt>
   1a0e8:	ldr	r3, [pc, #52]	; 1a124 <__assert_fail@plt+0x8e38>
   1a0ec:	add	r0, sp, #8
   1a0f0:	mov	r2, #64	; 0x40
   1a0f4:	ldr	r3, [r3]
   1a0f8:	mov	r1, #0
   1a0fc:	blx	r3
   1a100:	mov	r0, #0
   1a104:	add	sp, sp, #76	; 0x4c
   1a108:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1a10c:	mvn	r0, #0
   1a110:	mvn	r1, #0
   1a114:	strd	r0, [r7, #88]	; 0x58
   1a118:	b	1a080 <__assert_fail@plt+0x8d94>
   1a11c:	mvn	r0, #0
   1a120:	b	1a104 <__assert_fail@plt+0x8e18>
   1a124:	andeq	r2, r5, r4, lsr r1
   1a128:	cmp	r3, #0
   1a12c:	clz	ip, r2
   1a130:	lsr	ip, ip, #5
   1a134:	moveq	ip, #0
   1a138:	cmp	r0, #0
   1a13c:	orreq	ip, ip, #1
   1a140:	push	{r4, r5, r6, r7, r8, r9, lr}
   1a144:	sub	sp, sp, #316	; 0x13c
   1a148:	cmp	ip, #0
   1a14c:	ldr	ip, [sp, #348]	; 0x15c
   1a150:	bne	1a2cc <__assert_fail@plt+0x8fe0>
   1a154:	cmp	ip, #0
   1a158:	ldr	r4, [sp, #344]	; 0x158
   1a15c:	clz	r4, r4
   1a160:	lsr	r4, r4, #5
   1a164:	moveq	r4, #0
   1a168:	cmp	r4, #0
   1a16c:	bne	1a2cc <__assert_fail@plt+0x8fe0>
   1a170:	sub	r4, r1, #1
   1a174:	cmp	ip, #64	; 0x40
   1a178:	cmpls	r4, #63	; 0x3f
   1a17c:	mov	r8, r1
   1a180:	bhi	1a2cc <__assert_fail@plt+0x8fe0>
   1a184:	cmp	ip, #0
   1a188:	mov	r5, r0
   1a18c:	mov	r6, r3
   1a190:	mov	r7, r2
   1a194:	add	r4, sp, #72	; 0x48
   1a198:	bne	1a2b4 <__assert_fail@plt+0x8fc8>
   1a19c:	mov	r0, r4
   1a1a0:	bl	19c38 <__assert_fail@plt+0x894c>
   1a1a4:	cmp	r0, #0
   1a1a8:	blt	1a2cc <__assert_fail@plt+0x8fe0>
   1a1ac:	cmp	r6, #0
   1a1b0:	bne	1a2d4 <__assert_fail@plt+0x8fe8>
   1a1b4:	add	r0, sp, #8
   1a1b8:	mov	r2, #64	; 0x40
   1a1bc:	mov	r1, #0
   1a1c0:	bl	111f0 <memset@plt>
   1a1c4:	ldr	r3, [sp, #300]	; 0x12c
   1a1c8:	cmp	r8, r3
   1a1cc:	bcc	1a2a8 <__assert_fail@plt+0x8fbc>
   1a1d0:	ldrd	r2, [sp, #152]	; 0x98
   1a1d4:	orrs	r3, r2, r3
   1a1d8:	bne	1a2a8 <__assert_fail@plt+0x8fbc>
   1a1dc:	ldrd	r6, [sp, #136]	; 0x88
   1a1e0:	ldr	r2, [sp, #296]	; 0x128
   1a1e4:	mov	r1, #0
   1a1e8:	adds	r6, r6, r2
   1a1ec:	adc	r7, r7, r1
   1a1f0:	cmp	r1, r7
   1a1f4:	ldrd	r8, [sp, #144]	; 0x90
   1a1f8:	cmpeq	r2, r6
   1a1fc:	ldrb	r3, [sp, #304]	; 0x130
   1a200:	movhi	r1, #1
   1a204:	movls	r1, #0
   1a208:	adds	r8, r8, r1
   1a20c:	adc	r9, r9, #0
   1a210:	cmp	r3, #0
   1a214:	strd	r6, [sp, #136]	; 0x88
   1a218:	strd	r8, [sp, #144]	; 0x90
   1a21c:	mvnne	r0, #0
   1a220:	mvnne	r1, #0
   1a224:	strdne	r0, [sp, #160]	; 0xa0
   1a228:	add	r3, sp, #168	; 0xa8
   1a22c:	mvn	r6, #0
   1a230:	mvn	r7, #0
   1a234:	add	r0, r3, r2
   1a238:	mov	r1, #0
   1a23c:	rsb	r2, r2, #128	; 0x80
   1a240:	strd	r6, [sp, #152]	; 0x98
   1a244:	bl	111f0 <memset@plt>
   1a248:	add	r1, sp, #168	; 0xa8
   1a24c:	mov	r0, r4
   1a250:	bl	131d8 <__assert_fail@plt+0x1eec>
   1a254:	mov	r2, r4
   1a258:	add	r3, sp, #8
   1a25c:	add	lr, sp, #136	; 0x88
   1a260:	mov	ip, sp
   1a264:	ldrd	r0, [r2], #8
   1a268:	strd	r0, [sp]
   1a26c:	ldm	ip, {r0, r1}
   1a270:	cmp	lr, r2
   1a274:	stm	r3, {r0, r1}
   1a278:	add	r3, r3, #8
   1a27c:	bne	1a264 <__assert_fail@plt+0x8f78>
   1a280:	ldr	r2, [sp, #300]	; 0x12c
   1a284:	add	r1, sp, #8
   1a288:	mov	r0, r5
   1a28c:	bl	11058 <memcpy@plt>
   1a290:	ldr	r3, [pc, #80]	; 1a2e8 <__assert_fail@plt+0x8ffc>
   1a294:	add	r0, sp, #8
   1a298:	mov	r2, #64	; 0x40
   1a29c:	ldr	r3, [r3]
   1a2a0:	mov	r1, #0
   1a2a4:	blx	r3
   1a2a8:	mov	r0, #0
   1a2ac:	add	sp, sp, #316	; 0x13c
   1a2b0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1a2b4:	mov	r3, ip
   1a2b8:	mov	r0, r4
   1a2bc:	ldr	r2, [sp, #344]	; 0x158
   1a2c0:	bl	19d44 <__assert_fail@plt+0x8a58>
   1a2c4:	cmp	r0, #0
   1a2c8:	bge	1a1ac <__assert_fail@plt+0x8ec0>
   1a2cc:	mvn	r0, #0
   1a2d0:	b	1a2ac <__assert_fail@plt+0x8fc0>
   1a2d4:	mov	r2, r6
   1a2d8:	mov	r1, r7
   1a2dc:	mov	r0, r4
   1a2e0:	bl	19a70 <__assert_fail@plt+0x8784>
   1a2e4:	b	1a1b4 <__assert_fail@plt+0x8ec8>
   1a2e8:	andeq	r2, r5, r4, lsr r1
   1a2ec:	cmp	r3, #0
   1a2f0:	clz	ip, r2
   1a2f4:	lsr	ip, ip, #5
   1a2f8:	moveq	ip, #0
   1a2fc:	cmp	r0, #0
   1a300:	orreq	ip, ip, #1
   1a304:	push	{r4, r5, r6, r7, r8, r9, lr}
   1a308:	sub	sp, sp, #316	; 0x13c
   1a30c:	cmp	ip, #0
   1a310:	ldr	ip, [sp, #348]	; 0x15c
   1a314:	bne	1a490 <__assert_fail@plt+0x91a4>
   1a318:	cmp	ip, #0
   1a31c:	ldr	r4, [sp, #344]	; 0x158
   1a320:	clz	r4, r4
   1a324:	lsr	r4, r4, #5
   1a328:	moveq	r4, #0
   1a32c:	cmp	r4, #0
   1a330:	bne	1a490 <__assert_fail@plt+0x91a4>
   1a334:	sub	r4, r1, #1
   1a338:	cmp	ip, #64	; 0x40
   1a33c:	cmpls	r4, #63	; 0x3f
   1a340:	mov	r8, r1
   1a344:	bhi	1a490 <__assert_fail@plt+0x91a4>
   1a348:	cmp	ip, #0
   1a34c:	mov	r5, r0
   1a350:	mov	r6, r3
   1a354:	mov	r7, r2
   1a358:	add	r4, sp, #72	; 0x48
   1a35c:	bne	1a478 <__assert_fail@plt+0x918c>
   1a360:	mov	r0, r4
   1a364:	bl	19c38 <__assert_fail@plt+0x894c>
   1a368:	cmp	r0, #0
   1a36c:	blt	1a490 <__assert_fail@plt+0x91a4>
   1a370:	cmp	r6, #0
   1a374:	bne	1a498 <__assert_fail@plt+0x91ac>
   1a378:	add	r0, sp, #8
   1a37c:	mov	r2, #64	; 0x40
   1a380:	mov	r1, #0
   1a384:	bl	111f0 <memset@plt>
   1a388:	ldr	r3, [sp, #300]	; 0x12c
   1a38c:	cmp	r8, r3
   1a390:	bcc	1a46c <__assert_fail@plt+0x9180>
   1a394:	ldrd	r2, [sp, #152]	; 0x98
   1a398:	orrs	r3, r2, r3
   1a39c:	bne	1a46c <__assert_fail@plt+0x9180>
   1a3a0:	ldrd	r6, [sp, #136]	; 0x88
   1a3a4:	ldr	r2, [sp, #296]	; 0x128
   1a3a8:	mov	r1, #0
   1a3ac:	adds	r6, r6, r2
   1a3b0:	adc	r7, r7, r1
   1a3b4:	cmp	r1, r7
   1a3b8:	ldrd	r8, [sp, #144]	; 0x90
   1a3bc:	cmpeq	r2, r6
   1a3c0:	ldrb	r3, [sp, #304]	; 0x130
   1a3c4:	movhi	r1, #1
   1a3c8:	movls	r1, #0
   1a3cc:	adds	r8, r8, r1
   1a3d0:	adc	r9, r9, #0
   1a3d4:	cmp	r3, #0
   1a3d8:	strd	r6, [sp, #136]	; 0x88
   1a3dc:	strd	r8, [sp, #144]	; 0x90
   1a3e0:	mvnne	r0, #0
   1a3e4:	mvnne	r1, #0
   1a3e8:	strdne	r0, [sp, #160]	; 0xa0
   1a3ec:	add	r3, sp, #168	; 0xa8
   1a3f0:	mvn	r6, #0
   1a3f4:	mvn	r7, #0
   1a3f8:	add	r0, r3, r2
   1a3fc:	mov	r1, #0
   1a400:	rsb	r2, r2, #128	; 0x80
   1a404:	strd	r6, [sp, #152]	; 0x98
   1a408:	bl	111f0 <memset@plt>
   1a40c:	add	r1, sp, #168	; 0xa8
   1a410:	mov	r0, r4
   1a414:	bl	131d8 <__assert_fail@plt+0x1eec>
   1a418:	mov	r2, r4
   1a41c:	add	r3, sp, #8
   1a420:	add	lr, sp, #136	; 0x88
   1a424:	mov	ip, sp
   1a428:	ldrd	r0, [r2], #8
   1a42c:	strd	r0, [sp]
   1a430:	ldm	ip, {r0, r1}
   1a434:	cmp	lr, r2
   1a438:	stm	r3, {r0, r1}
   1a43c:	add	r3, r3, #8
   1a440:	bne	1a428 <__assert_fail@plt+0x913c>
   1a444:	ldr	r2, [sp, #300]	; 0x12c
   1a448:	add	r1, sp, #8
   1a44c:	mov	r0, r5
   1a450:	bl	11058 <memcpy@plt>
   1a454:	ldr	r3, [pc, #80]	; 1a4ac <__assert_fail@plt+0x91c0>
   1a458:	add	r0, sp, #8
   1a45c:	mov	r2, #64	; 0x40
   1a460:	ldr	r3, [r3]
   1a464:	mov	r1, #0
   1a468:	blx	r3
   1a46c:	mov	r0, #0
   1a470:	add	sp, sp, #316	; 0x13c
   1a474:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1a478:	mov	r3, ip
   1a47c:	mov	r0, r4
   1a480:	ldr	r2, [sp, #344]	; 0x158
   1a484:	bl	19d44 <__assert_fail@plt+0x8a58>
   1a488:	cmp	r0, #0
   1a48c:	bge	1a370 <__assert_fail@plt+0x9084>
   1a490:	mvn	r0, #0
   1a494:	b	1a470 <__assert_fail@plt+0x9184>
   1a498:	mov	r2, r6
   1a49c:	mov	r1, r7
   1a4a0:	mov	r0, r4
   1a4a4:	bl	19a70 <__assert_fail@plt+0x8784>
   1a4a8:	b	1a378 <__assert_fail@plt+0x908c>
   1a4ac:	andeq	r2, r5, r4, lsr r1
   1a4b0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1a4b4:	mov	r5, r0
   1a4b8:	sub	sp, sp, #240	; 0xf0
   1a4bc:	mov	r0, #32768	; 0x8000
   1a4c0:	mov	r9, r1
   1a4c4:	mov	r8, r2
   1a4c8:	bl	3d47c <__assert_fail@plt+0x2c190>
   1a4cc:	subs	r6, r0, #0
   1a4d0:	beq	1a594 <__assert_fail@plt+0x92a8>
   1a4d4:	mov	r0, sp
   1a4d8:	mov	r1, r8
   1a4dc:	bl	19c38 <__assert_fail@plt+0x894c>
   1a4e0:	mov	r7, #1
   1a4e4:	mov	sl, #32768	; 0x8000
   1a4e8:	mov	r4, #0
   1a4ec:	b	1a504 <__assert_fail@plt+0x9218>
   1a4f0:	cmp	r3, #0
   1a4f4:	beq	1a540 <__assert_fail@plt+0x9254>
   1a4f8:	bl	1119c <feof@plt>
   1a4fc:	cmp	r0, #0
   1a500:	bne	1a550 <__assert_fail@plt+0x9264>
   1a504:	mov	r3, r5
   1a508:	rsb	r2, r4, #32768	; 0x8000
   1a50c:	add	r0, r6, r4
   1a510:	mov	r1, r7
   1a514:	bl	11100 <fread@plt>
   1a518:	mov	r3, r0
   1a51c:	add	r4, r4, r3
   1a520:	cmp	r4, #32768	; 0x8000
   1a524:	mov	r0, r5
   1a528:	bne	1a4f0 <__assert_fail@plt+0x9204>
   1a52c:	mov	r2, sl
   1a530:	mov	r1, r6
   1a534:	mov	r0, sp
   1a538:	bl	19ecc <__assert_fail@plt+0x8be0>
   1a53c:	b	1a4e8 <__assert_fail@plt+0x91fc>
   1a540:	bl	11040 <ferror@plt>
   1a544:	cmp	r0, #0
   1a548:	mvnne	r4, #0
   1a54c:	bne	1a56c <__assert_fail@plt+0x9280>
   1a550:	cmp	r4, #0
   1a554:	bne	1a580 <__assert_fail@plt+0x9294>
   1a558:	mov	r2, r8
   1a55c:	mov	r1, r9
   1a560:	mov	r0, sp
   1a564:	bl	19ff8 <__assert_fail@plt+0x8d0c>
   1a568:	mov	r4, #0
   1a56c:	mov	r0, r6
   1a570:	bl	3618c <__assert_fail@plt+0x24ea0>
   1a574:	mov	r0, r4
   1a578:	add	sp, sp, #240	; 0xf0
   1a57c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a580:	mov	r2, r4
   1a584:	mov	r1, r6
   1a588:	mov	r0, sp
   1a58c:	bl	19ecc <__assert_fail@plt+0x8be0>
   1a590:	b	1a558 <__assert_fail@plt+0x926c>
   1a594:	mvn	r4, #0
   1a598:	b	1a574 <__assert_fail@plt+0x9288>
   1a59c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a5a0:	sub	sp, sp, #20
   1a5a4:	mov	r6, r0
   1a5a8:	mov	r0, #32768	; 0x8000
   1a5ac:	mov	fp, r1
   1a5b0:	str	r2, [sp, #12]
   1a5b4:	bl	3d47c <__assert_fail@plt+0x2c190>
   1a5b8:	subs	r7, r0, #0
   1a5bc:	beq	1a6ec <__assert_fail@plt+0x9400>
   1a5c0:	add	sl, r7, #32512	; 0x7f00
   1a5c4:	ldr	r9, [pc, #296]	; 1a6f4 <__assert_fail@plt+0x9408>
   1a5c8:	mov	r2, #0
   1a5cc:	mov	r3, #0
   1a5d0:	add	sl, sl, #255	; 0xff
   1a5d4:	mov	r4, #0
   1a5d8:	mov	r8, #1
   1a5dc:	strd	r2, [sp]
   1a5e0:	mov	r5, #0
   1a5e4:	b	1a5fc <__assert_fail@plt+0x9310>
   1a5e8:	cmp	r0, #0
   1a5ec:	ldr	r3, [r6]
   1a5f0:	beq	1a65c <__assert_fail@plt+0x9370>
   1a5f4:	tst	r3, #16
   1a5f8:	bne	1a668 <__assert_fail@plt+0x937c>
   1a5fc:	rsb	r2, r5, #32768	; 0x8000
   1a600:	add	r0, r7, r5
   1a604:	mov	r3, r6
   1a608:	mov	r1, r8
   1a60c:	bl	112b0 <fread_unlocked@plt>
   1a610:	add	r5, r5, r0
   1a614:	cmp	r5, #32768	; 0x8000
   1a618:	bne	1a5e8 <__assert_fail@plt+0x92fc>
   1a61c:	sub	r1, r7, #1
   1a620:	ldrb	r2, [r1, #1]!
   1a624:	and	r3, r9, r4, lsl #15
   1a628:	add	r4, r3, r4, lsr #1
   1a62c:	add	r4, r4, r2
   1a630:	cmp	sl, r1
   1a634:	and	r4, r4, r9
   1a638:	bne	1a620 <__assert_fail@plt+0x9334>
   1a63c:	ldrd	r0, [sp]
   1a640:	adds	r2, r0, #32768	; 0x8000
   1a644:	adc	r3, r1, #0
   1a648:	cmp	r1, r3
   1a64c:	cmpeq	r0, r2
   1a650:	bhi	1a6b4 <__assert_fail@plt+0x93c8>
   1a654:	strd	r2, [sp]
   1a658:	b	1a5e0 <__assert_fail@plt+0x92f4>
   1a65c:	tst	r3, #32
   1a660:	mvnne	r4, #0
   1a664:	bne	1a6c4 <__assert_fail@plt+0x93d8>
   1a668:	cmp	r5, #0
   1a66c:	ldrd	r2, [sp]
   1a670:	beq	1a6d8 <__assert_fail@plt+0x93ec>
   1a674:	ldr	r0, [pc, #120]	; 1a6f4 <__assert_fail@plt+0x9408>
   1a678:	mov	r1, r7
   1a67c:	add	ip, r7, r5
   1a680:	ldrb	r2, [r1], #1
   1a684:	and	r3, r0, r4, lsl #15
   1a688:	add	r4, r3, r4, lsr #1
   1a68c:	add	r4, r4, r2
   1a690:	cmp	ip, r1
   1a694:	and	r4, r4, r0
   1a698:	bne	1a680 <__assert_fail@plt+0x9394>
   1a69c:	ldrd	r0, [sp]
   1a6a0:	adds	r2, r0, r5
   1a6a4:	adc	r3, r1, #0
   1a6a8:	cmp	r1, r3
   1a6ac:	cmpeq	r0, r2
   1a6b0:	bls	1a6d8 <__assert_fail@plt+0x93ec>
   1a6b4:	bl	111c0 <__errno_location@plt>
   1a6b8:	mvn	r4, #0
   1a6bc:	mov	r3, #75	; 0x4b
   1a6c0:	str	r3, [r0]
   1a6c4:	mov	r0, r7
   1a6c8:	bl	3618c <__assert_fail@plt+0x24ea0>
   1a6cc:	mov	r0, r4
   1a6d0:	add	sp, sp, #20
   1a6d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a6d8:	ldr	r1, [sp, #12]
   1a6dc:	str	r4, [fp]
   1a6e0:	mov	r4, #0
   1a6e4:	strd	r2, [r1]
   1a6e8:	b	1a6c4 <__assert_fail@plt+0x93d8>
   1a6ec:	mvn	r4, #0
   1a6f0:	b	1a6cc <__assert_fail@plt+0x93e0>
   1a6f4:	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
   1a6f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a6fc:	sub	sp, sp, #12
   1a700:	mov	r5, r0
   1a704:	mov	r0, #32768	; 0x8000
   1a708:	stm	sp, {r1, r2}
   1a70c:	bl	3d47c <__assert_fail@plt+0x2c190>
   1a710:	subs	r9, r0, #0
   1a714:	beq	1a838 <__assert_fail@plt+0x954c>
   1a718:	add	fp, r9, #32512	; 0x7f00
   1a71c:	add	fp, fp, #255	; 0xff
   1a720:	mov	r8, #0
   1a724:	mov	r6, #0
   1a728:	mov	r7, #0
   1a72c:	mov	sl, #1
   1a730:	mov	r4, #0
   1a734:	b	1a74c <__assert_fail@plt+0x9460>
   1a738:	cmp	r0, #0
   1a73c:	ldr	r3, [r5]
   1a740:	beq	1a7a0 <__assert_fail@plt+0x94b4>
   1a744:	tst	r3, #16
   1a748:	bne	1a7ac <__assert_fail@plt+0x94c0>
   1a74c:	rsb	r2, r4, #32768	; 0x8000
   1a750:	add	r0, r9, r4
   1a754:	mov	r3, r5
   1a758:	mov	r1, sl
   1a75c:	bl	112b0 <fread_unlocked@plt>
   1a760:	add	r4, r4, r0
   1a764:	cmp	r4, #32768	; 0x8000
   1a768:	bne	1a738 <__assert_fail@plt+0x944c>
   1a76c:	sub	r3, r9, #1
   1a770:	ldrb	r2, [r3, #1]!
   1a774:	cmp	fp, r3
   1a778:	add	r8, r8, r2
   1a77c:	bne	1a770 <__assert_fail@plt+0x9484>
   1a780:	adds	r2, r6, #32768	; 0x8000
   1a784:	adc	r3, r7, #0
   1a788:	cmp	r7, r3
   1a78c:	cmpeq	r6, r2
   1a790:	bhi	1a7e8 <__assert_fail@plt+0x94fc>
   1a794:	mov	r6, r2
   1a798:	mov	r7, r3
   1a79c:	b	1a730 <__assert_fail@plt+0x9444>
   1a7a0:	tst	r3, #32
   1a7a4:	mvnne	r4, #0
   1a7a8:	bne	1a7f8 <__assert_fail@plt+0x950c>
   1a7ac:	cmp	r4, #0
   1a7b0:	moveq	r2, r6
   1a7b4:	moveq	r3, r7
   1a7b8:	beq	1a80c <__assert_fail@plt+0x9520>
   1a7bc:	mov	r3, r9
   1a7c0:	add	r1, r9, r4
   1a7c4:	ldrb	r2, [r3], #1
   1a7c8:	cmp	r1, r3
   1a7cc:	add	r8, r8, r2
   1a7d0:	bne	1a7c4 <__assert_fail@plt+0x94d8>
   1a7d4:	adds	r2, r6, r4
   1a7d8:	adc	r3, r7, #0
   1a7dc:	cmp	r7, r3
   1a7e0:	cmpeq	r6, r2
   1a7e4:	bls	1a80c <__assert_fail@plt+0x9520>
   1a7e8:	bl	111c0 <__errno_location@plt>
   1a7ec:	mvn	r4, #0
   1a7f0:	mov	r3, #75	; 0x4b
   1a7f4:	str	r3, [r0]
   1a7f8:	mov	r0, r9
   1a7fc:	bl	3618c <__assert_fail@plt+0x24ea0>
   1a800:	mov	r0, r4
   1a804:	add	sp, sp, #12
   1a808:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a80c:	ldr	r1, [pc, #44]	; 1a840 <__assert_fail@plt+0x9554>
   1a810:	mov	r4, #0
   1a814:	and	r0, r8, r1
   1a818:	add	r8, r0, r8, lsr #16
   1a81c:	ldr	r0, [sp]
   1a820:	and	r1, r1, r8
   1a824:	add	r1, r1, r8, asr #16
   1a828:	str	r1, [r0]
   1a82c:	ldr	r1, [sp, #4]
   1a830:	strd	r2, [r1]
   1a834:	b	1a7f8 <__assert_fail@plt+0x950c>
   1a838:	mvn	r4, #0
   1a83c:	b	1a800 <__assert_fail@plt+0x9514>
   1a840:	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
   1a844:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a848:	sub	sp, sp, #676	; 0x2a4
   1a84c:	mov	sl, #1024	; 0x400
   1a850:	mov	fp, #0
   1a854:	mov	r8, #1
   1a858:	mov	r9, #0
   1a85c:	add	r1, sp, #720	; 0x2d0
   1a860:	ldr	r6, [r2]
   1a864:	mov	r3, #0
   1a868:	strd	sl, [sp, #8]
   1a86c:	strd	r8, [sp]
   1a870:	add	r2, sp, #20
   1a874:	mov	r7, r0
   1a878:	ldrd	r0, [r1]
   1a87c:	ldrb	r5, [sp, #716]	; 0x2cc
   1a880:	ldrb	r4, [sp, #712]	; 0x2c8
   1a884:	bl	36288 <__assert_fail@plt+0x24f9c>
   1a888:	mov	r2, r6
   1a88c:	ldr	r1, [pc, #96]	; 1a8f4 <__assert_fail@plt+0x9608>
   1a890:	mov	r3, r0
   1a894:	mov	r0, #1
   1a898:	bl	111fc <__printf_chk@plt>
   1a89c:	cmp	r5, #0
   1a8a0:	bne	1a8d0 <__assert_fail@plt+0x95e4>
   1a8a4:	ldr	r3, [pc, #76]	; 1a8f8 <__assert_fail@plt+0x960c>
   1a8a8:	ldr	r0, [r3]
   1a8ac:	ldr	r3, [r0, #20]
   1a8b0:	ldr	r2, [r0, #24]
   1a8b4:	cmp	r3, r2
   1a8b8:	addcc	r2, r3, #1
   1a8bc:	strcc	r2, [r0, #20]
   1a8c0:	strbcc	r4, [r3]
   1a8c4:	bcs	1a8e4 <__assert_fail@plt+0x95f8>
   1a8c8:	add	sp, sp, #676	; 0x2a4
   1a8cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a8d0:	mov	r2, r7
   1a8d4:	ldr	r1, [pc, #32]	; 1a8fc <__assert_fail@plt+0x9610>
   1a8d8:	mov	r0, #1
   1a8dc:	bl	111fc <__printf_chk@plt>
   1a8e0:	b	1a8a4 <__assert_fail@plt+0x95b8>
   1a8e4:	mov	r1, r4
   1a8e8:	bl	11244 <__overflow@plt>
   1a8ec:	add	sp, sp, #676	; 0x2a4
   1a8f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a8f4:	andeq	pc, r3, r8, lsr #10
   1a8f8:	andeq	r2, r5, r4, lsr #3
   1a8fc:	andeq	r1, r4, ip, asr #11
   1a900:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a904:	sub	sp, sp, #676	; 0x2a4
   1a908:	mov	sl, #512	; 0x200
   1a90c:	mov	fp, #0
   1a910:	mov	r8, #1
   1a914:	mov	r9, #0
   1a918:	add	r1, sp, #720	; 0x2d0
   1a91c:	ldr	r6, [r2]
   1a920:	mov	r3, #0
   1a924:	strd	sl, [sp, #8]
   1a928:	strd	r8, [sp]
   1a92c:	add	r2, sp, #20
   1a930:	mov	r7, r0
   1a934:	ldrd	r0, [r1]
   1a938:	ldrb	r5, [sp, #716]	; 0x2cc
   1a93c:	ldrb	r4, [sp, #712]	; 0x2c8
   1a940:	bl	36288 <__assert_fail@plt+0x24f9c>
   1a944:	mov	r2, r6
   1a948:	ldr	r1, [pc, #96]	; 1a9b0 <__assert_fail@plt+0x96c4>
   1a94c:	mov	r3, r0
   1a950:	mov	r0, #1
   1a954:	bl	111fc <__printf_chk@plt>
   1a958:	cmp	r5, #0
   1a95c:	bne	1a98c <__assert_fail@plt+0x96a0>
   1a960:	ldr	r3, [pc, #76]	; 1a9b4 <__assert_fail@plt+0x96c8>
   1a964:	ldr	r0, [r3]
   1a968:	ldr	r3, [r0, #20]
   1a96c:	ldr	r2, [r0, #24]
   1a970:	cmp	r3, r2
   1a974:	addcc	r2, r3, #1
   1a978:	strcc	r2, [r0, #20]
   1a97c:	strbcc	r4, [r3]
   1a980:	bcs	1a9a0 <__assert_fail@plt+0x96b4>
   1a984:	add	sp, sp, #676	; 0x2a4
   1a988:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a98c:	mov	r2, r7
   1a990:	ldr	r1, [pc, #32]	; 1a9b8 <__assert_fail@plt+0x96cc>
   1a994:	mov	r0, #1
   1a998:	bl	111fc <__printf_chk@plt>
   1a99c:	b	1a960 <__assert_fail@plt+0x9674>
   1a9a0:	mov	r1, r4
   1a9a4:	bl	11244 <__overflow@plt>
   1a9a8:	add	sp, sp, #676	; 0x2a4
   1a9ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a9b0:	andeq	pc, r3, r4, lsr r5	; <UNPREDICTABLE>
   1a9b4:	andeq	r2, r5, r4, lsr #3
   1a9b8:	andeq	r1, r4, ip, asr #11
   1a9bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a9c0:	sub	sp, sp, #65536	; 0x10000
   1a9c4:	ldr	r5, [pc, #436]	; 1ab80 <__assert_fail@plt+0x9894>
   1a9c8:	sub	sp, sp, #20
   1a9cc:	mov	sl, r0
   1a9d0:	mov	r6, #0
   1a9d4:	mov	r7, #0
   1a9d8:	mov	r4, #0
   1a9dc:	str	r1, [sp, #8]
   1a9e0:	str	r2, [sp, #12]
   1a9e4:	mov	r3, #65536	; 0x10000
   1a9e8:	str	sl, [sp]
   1a9ec:	mov	r2, #1
   1a9f0:	mov	r1, r3
   1a9f4:	add	r0, sp, #16
   1a9f8:	bl	11274 <__fread_unlocked_chk@plt>
   1a9fc:	cmp	r0, #0
   1aa00:	beq	1ab30 <__assert_fail@plt+0x9844>
   1aa04:	adds	r8, r6, r0
   1aa08:	adc	r9, r7, #0
   1aa0c:	cmp	r7, r9
   1aa10:	cmpeq	r6, r8
   1aa14:	bhi	1ab60 <__assert_fail@plt+0x9874>
   1aa18:	cmp	r0, #7
   1aa1c:	addhi	ip, sp, #24
   1aa20:	movhi	lr, r0
   1aa24:	bls	1ab54 <__assert_fail@plt+0x9868>
   1aa28:	ldr	r2, [ip, #-4]
   1aa2c:	ldr	r3, [ip, #-8]
   1aa30:	rev	r2, r2
   1aa34:	rev	r3, r3
   1aa38:	eor	r4, r4, r3
   1aa3c:	lsr	r3, r2, #24
   1aa40:	uxtb	r7, r2
   1aa44:	add	r3, r3, #768	; 0x300
   1aa48:	lsr	fp, r4, #24
   1aa4c:	ldr	r1, [r5, r3, lsl #2]
   1aa50:	lsr	r6, r2, #16
   1aa54:	ldr	r3, [r5, r7, lsl #2]
   1aa58:	add	fp, fp, #1792	; 0x700
   1aa5c:	uxtb	r7, r4
   1aa60:	lsr	r2, r2, #8
   1aa64:	eor	r3, r3, r1
   1aa68:	uxtb	r6, r6
   1aa6c:	lsr	r1, r4, #16
   1aa70:	add	r7, r7, #1024	; 0x400
   1aa74:	ldr	fp, [r5, fp, lsl #2]
   1aa78:	add	r6, r6, #512	; 0x200
   1aa7c:	uxtb	r2, r2
   1aa80:	lsr	r4, r4, #8
   1aa84:	ldr	r7, [r5, r7, lsl #2]
   1aa88:	add	r2, r2, #256	; 0x100
   1aa8c:	uxtb	r1, r1
   1aa90:	eor	r3, r3, fp
   1aa94:	ldr	r6, [r5, r6, lsl #2]
   1aa98:	add	r1, r1, #1536	; 0x600
   1aa9c:	uxtb	r4, r4
   1aaa0:	eor	r3, r3, r7
   1aaa4:	add	r4, r4, #1280	; 0x500
   1aaa8:	ldr	r7, [r5, r2, lsl #2]
   1aaac:	eor	r3, r3, r6
   1aab0:	ldr	r2, [r5, r1, lsl #2]
   1aab4:	sub	lr, lr, #8
   1aab8:	eor	r3, r3, r7
   1aabc:	ldr	r4, [r5, r4, lsl #2]
   1aac0:	eor	r3, r3, r2
   1aac4:	cmp	lr, #7
   1aac8:	add	ip, ip, #8
   1aacc:	eor	r4, r4, r3
   1aad0:	bhi	1aa28 <__assert_fail@plt+0x973c>
   1aad4:	sub	r3, r0, #8
   1aad8:	bic	r2, r3, #7
   1aadc:	mov	r3, r2
   1aae0:	tst	r0, #7
   1aae4:	sub	r0, r0, #9
   1aae8:	add	r2, r2, #8
   1aaec:	sub	r0, r0, r3
   1aaf0:	add	r3, sp, #16
   1aaf4:	add	r2, r3, r2
   1aaf8:	beq	1ab1c <__assert_fail@plt+0x9830>
   1aafc:	add	r0, r2, r0
   1ab00:	sub	r2, r2, #1
   1ab04:	ldrb	r3, [r2, #1]!
   1ab08:	eor	r3, r3, r4, lsr #24
   1ab0c:	cmp	r0, r2
   1ab10:	ldr	r3, [r5, r3, lsl #2]
   1ab14:	eor	r4, r3, r4, lsl #8
   1ab18:	bne	1ab04 <__assert_fail@plt+0x9818>
   1ab1c:	ldr	r3, [sl]
   1ab20:	mov	r6, r8
   1ab24:	tst	r3, #16
   1ab28:	mov	r7, r9
   1ab2c:	beq	1a9e4 <__assert_fail@plt+0x96f8>
   1ab30:	ldr	r3, [sp, #8]
   1ab34:	ldr	r2, [sp, #12]
   1ab38:	str	r4, [r3]
   1ab3c:	mov	r3, #1
   1ab40:	mov	r0, r3
   1ab44:	strd	r6, [r2]
   1ab48:	add	sp, sp, #65536	; 0x10000
   1ab4c:	add	sp, sp, #20
   1ab50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ab54:	sub	r0, r0, #1
   1ab58:	add	r2, sp, #16
   1ab5c:	b	1aafc <__assert_fail@plt+0x9810>
   1ab60:	bl	111c0 <__errno_location@plt>
   1ab64:	mov	r2, #75	; 0x4b
   1ab68:	mov	r3, #0
   1ab6c:	str	r2, [r0]
   1ab70:	mov	r0, r3
   1ab74:	add	sp, sp, #65536	; 0x10000
   1ab78:	add	sp, sp, #20
   1ab7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ab80:	andeq	pc, r3, r4, ror #10
   1ab84:	cmp	r2, #0
   1ab88:	cmpne	r1, #0
   1ab8c:	moveq	r3, #1
   1ab90:	movne	r3, #0
   1ab94:	cmp	r0, #0
   1ab98:	orreq	r3, r3, #1
   1ab9c:	cmp	r3, #0
   1aba0:	bne	1aba8 <__assert_fail@plt+0x98bc>
   1aba4:	b	1a9bc <__assert_fail@plt+0x96d0>
   1aba8:	mov	r0, #0
   1abac:	bx	lr
   1abb0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1abb4:	mov	r3, #0
   1abb8:	ldr	r6, [pc, #232]	; 1aca8 <__assert_fail@plt+0x99bc>
   1abbc:	sub	sp, sp, #16
   1abc0:	mov	sl, #0
   1abc4:	ldr	r5, [r6]
   1abc8:	mov	fp, #0
   1abcc:	cmp	r5, r3
   1abd0:	mov	r7, r0
   1abd4:	mov	r4, r1
   1abd8:	mov	r8, r2
   1abdc:	strd	sl, [sp, #8]
   1abe0:	str	r3, [sp, #4]
   1abe4:	beq	1ac58 <__assert_fail@plt+0x996c>
   1abe8:	mov	r0, r7
   1abec:	add	r2, sp, #8
   1abf0:	add	r1, sp, #4
   1abf4:	blx	r5
   1abf8:	cmp	r0, #0
   1abfc:	beq	1aca0 <__assert_fail@plt+0x99b4>
   1ac00:	ldrd	r2, [sp, #8]
   1ac04:	ldr	ip, [sp, #4]
   1ac08:	orrs	r1, r2, r3
   1ac0c:	strd	r2, [r8]
   1ac10:	beq	1ac44 <__assert_fail@plt+0x9958>
   1ac14:	ldr	r5, [pc, #144]	; 1acac <__assert_fail@plt+0x99c0>
   1ac18:	uxtb	r1, r2
   1ac1c:	lsr	r0, r2, #8
   1ac20:	eor	r1, r1, ip, lsr #24
   1ac24:	orr	r0, r0, r3, lsl #24
   1ac28:	lsr	lr, r3, #8
   1ac2c:	mov	r2, r0
   1ac30:	ldr	r1, [r5, r1, lsl #2]
   1ac34:	mov	r3, lr
   1ac38:	orrs	r0, r2, r3
   1ac3c:	eor	ip, r1, ip, lsl #8
   1ac40:	bne	1ac18 <__assert_fail@plt+0x992c>
   1ac44:	mov	r0, #0
   1ac48:	mvn	ip, ip
   1ac4c:	str	ip, [r4]
   1ac50:	add	sp, sp, #16
   1ac54:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1ac58:	ldr	r3, [pc, #80]	; 1acb0 <__assert_fail@plt+0x99c4>
   1ac5c:	ldrb	r3, [r3]
   1ac60:	cmp	r3, #0
   1ac64:	bne	1ac78 <__assert_fail@plt+0x998c>
   1ac68:	ldr	r3, [pc, #68]	; 1acb4 <__assert_fail@plt+0x99c8>
   1ac6c:	mov	r5, r3
   1ac70:	str	r3, [r6]
   1ac74:	b	1abe8 <__assert_fail@plt+0x98fc>
   1ac78:	mov	r2, #5
   1ac7c:	ldr	r1, [pc, #52]	; 1acb8 <__assert_fail@plt+0x99cc>
   1ac80:	mov	r0, r5
   1ac84:	bl	110a0 <dcgettext@plt>
   1ac88:	ldr	r2, [pc, #44]	; 1acbc <__assert_fail@plt+0x99d0>
   1ac8c:	mov	r1, r5
   1ac90:	mov	r3, r0
   1ac94:	mov	r0, r5
   1ac98:	bl	11124 <error@plt>
   1ac9c:	b	1ac68 <__assert_fail@plt+0x997c>
   1aca0:	mvn	r0, #0
   1aca4:	b	1ac50 <__assert_fail@plt+0x9964>
   1aca8:	andeq	r2, r5, ip, asr #3
   1acac:	andeq	pc, r3, r4, ror #10
   1acb0:			; <UNDEFINED> instruction: 0x000521bf
   1acb4:	andeq	sl, r1, r4, lsl #23
   1acb8:	andeq	pc, r3, ip, lsr r5	; <UNPREDICTABLE>
   1acbc:	andeq	lr, r3, ip, lsl pc
   1acc0:	push	{r4, r5, r6, r7, lr}
   1acc4:	sub	sp, sp, #28
   1acc8:	ldr	r6, [r2]
   1accc:	mov	r7, r0
   1acd0:	mov	r2, sp
   1acd4:	ldrd	r0, [sp, #56]	; 0x38
   1acd8:	ldrb	r5, [sp, #52]	; 0x34
   1acdc:	ldrb	r4, [sp, #48]	; 0x30
   1ace0:	bl	37268 <__assert_fail@plt+0x25f7c>
   1ace4:	mov	r2, r6
   1ace8:	ldr	r1, [pc, #96]	; 1ad50 <__assert_fail@plt+0x9a64>
   1acec:	mov	r3, r0
   1acf0:	mov	r0, #1
   1acf4:	bl	111fc <__printf_chk@plt>
   1acf8:	cmp	r5, #0
   1acfc:	bne	1ad2c <__assert_fail@plt+0x9a40>
   1ad00:	ldr	r3, [pc, #76]	; 1ad54 <__assert_fail@plt+0x9a68>
   1ad04:	ldr	r0, [r3]
   1ad08:	ldr	r3, [r0, #20]
   1ad0c:	ldr	r2, [r0, #24]
   1ad10:	cmp	r3, r2
   1ad14:	addcc	r2, r3, #1
   1ad18:	strcc	r2, [r0, #20]
   1ad1c:	strbcc	r4, [r3]
   1ad20:	bcs	1ad40 <__assert_fail@plt+0x9a54>
   1ad24:	add	sp, sp, #28
   1ad28:	pop	{r4, r5, r6, r7, pc}
   1ad2c:	mov	r2, r7
   1ad30:	ldr	r1, [pc, #32]	; 1ad58 <__assert_fail@plt+0x9a6c>
   1ad34:	mov	r0, #1
   1ad38:	bl	111fc <__printf_chk@plt>
   1ad3c:	b	1ad00 <__assert_fail@plt+0x9a14>
   1ad40:	mov	r1, r4
   1ad44:	bl	11244 <__overflow@plt>
   1ad48:	add	sp, sp, #28
   1ad4c:	pop	{r4, r5, r6, r7, pc}
   1ad50:	andeq	pc, r3, ip, asr r5	; <UNPREDICTABLE>
   1ad54:	andeq	r2, r5, r4, lsr #3
   1ad58:	andeq	r1, r4, ip, asr #11
   1ad5c:	mov	r0, #1
   1ad60:	b	12dc0 <__assert_fail@plt+0x1ad4>
   1ad64:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ad68:	mov	r4, r1
   1ad6c:	sub	sp, sp, #12
   1ad70:	mov	r5, r2
   1ad74:	str	r2, [sp, #4]
   1ad78:	mov	r7, r3
   1ad7c:	mov	sl, r0
   1ad80:	bl	111a8 <strlen@plt>
   1ad84:	ldr	fp, [r4]
   1ad88:	cmp	fp, #0
   1ad8c:	beq	1aea0 <__assert_fail@plt+0x9bb4>
   1ad90:	cmp	r5, #0
   1ad94:	mov	r8, r0
   1ad98:	mov	r3, r5
   1ad9c:	beq	1ae48 <__assert_fail@plt+0x9b5c>
   1ada0:	mov	r2, #0
   1ada4:	mov	r5, r2
   1ada8:	mov	r6, r3
   1adac:	mvn	r9, #0
   1adb0:	str	r2, [sp]
   1adb4:	mov	r2, r8
   1adb8:	mov	r1, sl
   1adbc:	mov	r0, fp
   1adc0:	bl	112bc <strncmp@plt>
   1adc4:	cmp	r0, #0
   1adc8:	mov	r0, fp
   1adcc:	bne	1ae0c <__assert_fail@plt+0x9b20>
   1add0:	bl	111a8 <strlen@plt>
   1add4:	ldr	r3, [sp, #4]
   1add8:	mov	r2, r7
   1addc:	mov	r1, r6
   1ade0:	cmp	r8, r0
   1ade4:	mla	r0, r7, r9, r3
   1ade8:	beq	1ae38 <__assert_fail@plt+0x9b4c>
   1adec:	cmn	r9, #1
   1adf0:	moveq	r9, r5
   1adf4:	beq	1ae0c <__assert_fail@plt+0x9b20>
   1adf8:	bl	11088 <memcmp@plt>
   1adfc:	ldr	r3, [sp]
   1ae00:	cmp	r0, #0
   1ae04:	movne	r3, #1
   1ae08:	str	r3, [sp]
   1ae0c:	ldr	fp, [r4, #4]!
   1ae10:	add	r5, r5, #1
   1ae14:	cmp	fp, #0
   1ae18:	add	r6, r6, r7
   1ae1c:	bne	1adb4 <__assert_fail@plt+0x9ac8>
   1ae20:	ldr	r3, [sp]
   1ae24:	cmp	r3, #0
   1ae28:	mvnne	r9, #1
   1ae2c:	mov	r0, r9
   1ae30:	add	sp, sp, #12
   1ae34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ae38:	mov	r9, r5
   1ae3c:	mov	r0, r9
   1ae40:	add	sp, sp, #12
   1ae44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ae48:	mov	r6, r5
   1ae4c:	mvn	r9, #0
   1ae50:	mov	r2, r8
   1ae54:	mov	r1, sl
   1ae58:	mov	r0, fp
   1ae5c:	bl	112bc <strncmp@plt>
   1ae60:	cmp	r0, #0
   1ae64:	mov	r0, fp
   1ae68:	bne	1ae84 <__assert_fail@plt+0x9b98>
   1ae6c:	bl	111a8 <strlen@plt>
   1ae70:	cmp	r8, r0
   1ae74:	beq	1ae38 <__assert_fail@plt+0x9b4c>
   1ae78:	cmn	r9, #1
   1ae7c:	moveq	r9, r5
   1ae80:	movne	r6, #1
   1ae84:	ldr	fp, [r4, #4]!
   1ae88:	add	r5, r5, #1
   1ae8c:	cmp	fp, #0
   1ae90:	bne	1ae50 <__assert_fail@plt+0x9b64>
   1ae94:	str	r6, [sp]
   1ae98:	mov	r3, r6
   1ae9c:	b	1ae24 <__assert_fail@plt+0x9b38>
   1aea0:	mvn	r9, #0
   1aea4:	b	1ae2c <__assert_fail@plt+0x9b40>
   1aea8:	push	{r4, r5, r6, lr}
   1aeac:	mov	r6, r0
   1aeb0:	ldr	r0, [r1]
   1aeb4:	cmp	r0, #0
   1aeb8:	beq	1aef0 <__assert_fail@plt+0x9c04>
   1aebc:	mov	r4, r1
   1aec0:	mov	r5, #0
   1aec4:	b	1aed8 <__assert_fail@plt+0x9bec>
   1aec8:	ldr	r0, [r4, #4]!
   1aecc:	add	r5, r5, #1
   1aed0:	cmp	r0, #0
   1aed4:	beq	1aef0 <__assert_fail@plt+0x9c04>
   1aed8:	mov	r1, r6
   1aedc:	bl	11004 <strcmp@plt>
   1aee0:	cmp	r0, #0
   1aee4:	bne	1aec8 <__assert_fail@plt+0x9bdc>
   1aee8:	mov	r0, r5
   1aeec:	pop	{r4, r5, r6, pc}
   1aef0:	mvn	r0, #0
   1aef4:	pop	{r4, r5, r6, pc}
   1aef8:	cmn	r2, #1
   1aefc:	push	{r4, r5, r6, lr}
   1af00:	mov	r2, #5
   1af04:	sub	sp, sp, #8
   1af08:	mov	r4, r1
   1af0c:	mov	r5, r0
   1af10:	ldreq	r1, [pc, #76]	; 1af64 <__assert_fail@plt+0x9c78>
   1af14:	ldrne	r1, [pc, #76]	; 1af68 <__assert_fail@plt+0x9c7c>
   1af18:	mov	r0, #0
   1af1c:	bl	110a0 <dcgettext@plt>
   1af20:	mov	r2, r4
   1af24:	mov	r1, #8
   1af28:	mov	r6, r0
   1af2c:	mov	r0, #0
   1af30:	bl	3944c <__assert_fail@plt+0x28160>
   1af34:	mov	r1, r5
   1af38:	mov	r4, r0
   1af3c:	mov	r0, #1
   1af40:	bl	3afe8 <__assert_fail@plt+0x29cfc>
   1af44:	mov	r1, #0
   1af48:	mov	r3, r4
   1af4c:	mov	r2, r6
   1af50:	str	r0, [sp]
   1af54:	mov	r0, r1
   1af58:	bl	11124 <error@plt>
   1af5c:	add	sp, sp, #8
   1af60:	pop	{r4, r5, r6, pc}
   1af64:	andeq	r1, r4, r4, ror r5
   1af68:	muleq	r4, r0, r5
   1af6c:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1af70:	mov	r6, r0
   1af74:	ldr	r9, [pc, #232]	; 1b064 <__assert_fail@plt+0x9d78>
   1af78:	mov	r4, r1
   1af7c:	mov	r7, r2
   1af80:	ldr	r1, [pc, #224]	; 1b068 <__assert_fail@plt+0x9d7c>
   1af84:	mov	r2, #5
   1af88:	mov	r0, #0
   1af8c:	bl	110a0 <dcgettext@plt>
   1af90:	ldr	r1, [r9]
   1af94:	bl	10fe0 <fputs_unlocked@plt>
   1af98:	ldr	fp, [r6]
   1af9c:	cmp	fp, #0
   1afa0:	movne	r8, #0
   1afa4:	movne	r5, r8
   1afa8:	movne	sl, #1
   1afac:	bne	1afec <__assert_fail@plt+0x9d00>
   1afb0:	b	1b030 <__assert_fail@plt+0x9d44>
   1afb4:	mov	r0, fp
   1afb8:	ldr	r8, [r9]
   1afbc:	bl	3b19c <__assert_fail@plt+0x29eb0>
   1afc0:	ldr	r2, [pc, #164]	; 1b06c <__assert_fail@plt+0x9d80>
   1afc4:	mov	r1, sl
   1afc8:	mov	r3, r0
   1afcc:	mov	r0, r8
   1afd0:	bl	11214 <__fprintf_chk@plt>
   1afd4:	mov	r8, r4
   1afd8:	ldr	fp, [r6, #4]!
   1afdc:	add	r5, r5, #1
   1afe0:	cmp	fp, #0
   1afe4:	add	r4, r4, r7
   1afe8:	beq	1b030 <__assert_fail@plt+0x9d44>
   1afec:	cmp	r5, #0
   1aff0:	mov	r1, r4
   1aff4:	mov	r2, r7
   1aff8:	mov	r0, r8
   1affc:	beq	1afb4 <__assert_fail@plt+0x9cc8>
   1b000:	bl	11088 <memcmp@plt>
   1b004:	cmp	r0, #0
   1b008:	bne	1afb4 <__assert_fail@plt+0x9cc8>
   1b00c:	mov	r0, fp
   1b010:	ldr	fp, [r9]
   1b014:	bl	3b19c <__assert_fail@plt+0x29eb0>
   1b018:	ldr	r2, [pc, #80]	; 1b070 <__assert_fail@plt+0x9d84>
   1b01c:	mov	r1, sl
   1b020:	mov	r3, r0
   1b024:	mov	r0, fp
   1b028:	bl	11214 <__fprintf_chk@plt>
   1b02c:	b	1afd8 <__assert_fail@plt+0x9cec>
   1b030:	ldr	r0, [r9]
   1b034:	ldr	r3, [r0, #20]
   1b038:	ldr	r2, [r0, #24]
   1b03c:	cmp	r3, r2
   1b040:	bcs	1b058 <__assert_fail@plt+0x9d6c>
   1b044:	add	r1, r3, #1
   1b048:	mov	r2, #10
   1b04c:	str	r1, [r0, #20]
   1b050:	strb	r2, [r3]
   1b054:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b058:	mov	r1, #10
   1b05c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b060:	b	11244 <__overflow@plt>
   1b064:	muleq	r5, r8, r1
   1b068:			; <UNDEFINED> instruction: 0x000415b0
   1b06c:	andeq	r1, r4, r8, asr #11
   1b070:	ldrdeq	r1, [r4], -r0
   1b074:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b078:	sub	sp, sp, #36	; 0x24
   1b07c:	mov	r6, r1
   1b080:	ldrb	ip, [sp, #80]	; 0x50
   1b084:	str	r0, [sp, #28]
   1b088:	str	r2, [sp, #24]
   1b08c:	cmp	ip, #0
   1b090:	str	ip, [sp, #20]
   1b094:	str	r3, [sp, #12]
   1b098:	ldr	r7, [sp, #72]	; 0x48
   1b09c:	bne	1b154 <__assert_fail@plt+0x9e68>
   1b0a0:	ldr	r0, [r2]
   1b0a4:	cmp	r0, #0
   1b0a8:	movne	sl, ip
   1b0ac:	movne	r4, r2
   1b0b0:	bne	1b138 <__assert_fail@plt+0x9e4c>
   1b0b4:	mov	r2, #5
   1b0b8:	ldr	r1, [pc, #512]	; 1b2c0 <__assert_fail@plt+0x9fd4>
   1b0bc:	mov	r0, #0
   1b0c0:	bl	110a0 <dcgettext@plt>
   1b0c4:	mov	r4, r0
   1b0c8:	mov	r2, r6
   1b0cc:	mov	r1, #8
   1b0d0:	mov	r0, #0
   1b0d4:	bl	3944c <__assert_fail@plt+0x28160>
   1b0d8:	ldr	r1, [sp, #28]
   1b0dc:	mvn	sl, #0
   1b0e0:	mov	r5, r0
   1b0e4:	mov	r0, #1
   1b0e8:	bl	3afe8 <__assert_fail@plt+0x29cfc>
   1b0ec:	mov	r1, #0
   1b0f0:	mov	r3, r5
   1b0f4:	mov	r2, r4
   1b0f8:	str	r0, [sp]
   1b0fc:	mov	r0, r1
   1b100:	bl	11124 <error@plt>
   1b104:	ldr	r0, [sp, #24]
   1b108:	mov	r2, r7
   1b10c:	ldr	r1, [sp, #12]
   1b110:	bl	1af6c <__assert_fail@plt+0x9c80>
   1b114:	ldr	r3, [sp, #76]	; 0x4c
   1b118:	blx	r3
   1b11c:	mov	r0, sl
   1b120:	add	sp, sp, #36	; 0x24
   1b124:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b128:	ldr	r0, [r4, #4]!
   1b12c:	add	sl, sl, #1
   1b130:	cmp	r0, #0
   1b134:	beq	1b0b4 <__assert_fail@plt+0x9dc8>
   1b138:	mov	r1, r6
   1b13c:	bl	11004 <strcmp@plt>
   1b140:	cmp	r0, #0
   1b144:	bne	1b128 <__assert_fail@plt+0x9e3c>
   1b148:	mov	r0, sl
   1b14c:	add	sp, sp, #36	; 0x24
   1b150:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b154:	mov	r0, r1
   1b158:	bl	111a8 <strlen@plt>
   1b15c:	ldr	r3, [sp, #24]
   1b160:	ldr	fp, [r3]
   1b164:	cmp	fp, #0
   1b168:	mov	r9, r0
   1b16c:	beq	1b0b4 <__assert_fail@plt+0x9dc8>
   1b170:	ldr	r2, [sp, #12]
   1b174:	cmp	r2, #0
   1b178:	beq	1b234 <__assert_fail@plt+0x9f48>
   1b17c:	mov	r1, #0
   1b180:	mov	r4, r1
   1b184:	mov	r8, r3
   1b188:	mov	r5, r2
   1b18c:	mvn	sl, #0
   1b190:	str	r1, [sp, #16]
   1b194:	mov	r2, r9
   1b198:	mov	r1, r6
   1b19c:	mov	r0, fp
   1b1a0:	bl	112bc <strncmp@plt>
   1b1a4:	cmp	r0, #0
   1b1a8:	mov	r0, fp
   1b1ac:	bne	1b1f0 <__assert_fail@plt+0x9f04>
   1b1b0:	bl	111a8 <strlen@plt>
   1b1b4:	ldr	r3, [sp, #12]
   1b1b8:	mov	r2, r7
   1b1bc:	mov	r1, r5
   1b1c0:	cmp	r9, r0
   1b1c4:	mla	r0, r7, sl, r3
   1b1c8:	beq	1b224 <__assert_fail@plt+0x9f38>
   1b1cc:	cmn	sl, #1
   1b1d0:	moveq	sl, r4
   1b1d4:	beq	1b1f0 <__assert_fail@plt+0x9f04>
   1b1d8:	bl	11088 <memcmp@plt>
   1b1dc:	ldr	r2, [sp, #20]
   1b1e0:	ldr	r3, [sp, #16]
   1b1e4:	cmp	r0, #0
   1b1e8:	movne	r3, r2
   1b1ec:	str	r3, [sp, #16]
   1b1f0:	ldr	fp, [r8, #4]!
   1b1f4:	add	r4, r4, #1
   1b1f8:	cmp	fp, #0
   1b1fc:	add	r5, r5, r7
   1b200:	bne	1b194 <__assert_fail@plt+0x9ea8>
   1b204:	ldr	r3, [sp, #16]
   1b208:	cmp	r3, #0
   1b20c:	bne	1b2a8 <__assert_fail@plt+0x9fbc>
   1b210:	cmn	sl, #1
   1b214:	beq	1b0b4 <__assert_fail@plt+0x9dc8>
   1b218:	mov	r0, sl
   1b21c:	add	sp, sp, #36	; 0x24
   1b220:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b224:	mov	sl, r4
   1b228:	mov	r0, sl
   1b22c:	add	sp, sp, #36	; 0x24
   1b230:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b234:	mov	r5, r3
   1b238:	ldr	r3, [sp, #12]
   1b23c:	str	r7, [sp, #72]	; 0x48
   1b240:	mov	r7, fp
   1b244:	ldr	fp, [sp, #20]
   1b248:	mov	r8, r3
   1b24c:	mvn	sl, #0
   1b250:	mov	r4, r3
   1b254:	mov	r2, r9
   1b258:	mov	r1, r6
   1b25c:	mov	r0, r7
   1b260:	bl	112bc <strncmp@plt>
   1b264:	cmp	r0, #0
   1b268:	mov	r0, r7
   1b26c:	bne	1b288 <__assert_fail@plt+0x9f9c>
   1b270:	bl	111a8 <strlen@plt>
   1b274:	cmp	r9, r0
   1b278:	beq	1b224 <__assert_fail@plt+0x9f38>
   1b27c:	cmn	sl, #1
   1b280:	moveq	sl, r4
   1b284:	movne	r8, fp
   1b288:	ldr	r7, [r5, #4]!
   1b28c:	add	r4, r4, #1
   1b290:	cmp	r7, #0
   1b294:	bne	1b254 <__assert_fail@plt+0x9f68>
   1b298:	str	r8, [sp, #16]
   1b29c:	ldr	r7, [sp, #72]	; 0x48
   1b2a0:	mov	r3, r8
   1b2a4:	b	1b208 <__assert_fail@plt+0x9f1c>
   1b2a8:	mov	r2, #5
   1b2ac:	ldr	r1, [pc, #16]	; 1b2c4 <__assert_fail@plt+0x9fd8>
   1b2b0:	mov	r0, #0
   1b2b4:	bl	110a0 <dcgettext@plt>
   1b2b8:	mov	r4, r0
   1b2bc:	b	1b0c8 <__assert_fail@plt+0x9ddc>
   1b2c0:	andeq	r1, r4, r4, ror r5
   1b2c4:	muleq	r4, r0, r5
   1b2c8:	push	{r4, r5, r6, r7, r8, lr}
   1b2cc:	ldr	r7, [r1]
   1b2d0:	cmp	r7, #0
   1b2d4:	beq	1b314 <__assert_fail@plt+0xa028>
   1b2d8:	mov	r6, r3
   1b2dc:	mov	r8, r0
   1b2e0:	mov	r4, r2
   1b2e4:	mov	r5, r1
   1b2e8:	b	1b2f8 <__assert_fail@plt+0xa00c>
   1b2ec:	ldr	r7, [r5, #4]!
   1b2f0:	cmp	r7, #0
   1b2f4:	beq	1b314 <__assert_fail@plt+0xa028>
   1b2f8:	mov	r1, r4
   1b2fc:	mov	r2, r6
   1b300:	mov	r0, r8
   1b304:	bl	11088 <memcmp@plt>
   1b308:	add	r4, r4, r6
   1b30c:	cmp	r0, #0
   1b310:	bne	1b2ec <__assert_fail@plt+0xa000>
   1b314:	mov	r0, r7
   1b318:	pop	{r4, r5, r6, r7, r8, pc}
   1b31c:	ldr	r3, [pc, #4]	; 1b328 <__assert_fail@plt+0xa03c>
   1b320:	str	r0, [r3]
   1b324:	bx	lr
   1b328:	ldrdeq	r2, [r5], -r0
   1b32c:	ldr	r3, [pc, #4]	; 1b338 <__assert_fail@plt+0xa04c>
   1b330:	strb	r0, [r3, #4]
   1b334:	bx	lr
   1b338:	ldrdeq	r2, [r5], -r0
   1b33c:	ldr	r3, [pc, #192]	; 1b404 <__assert_fail@plt+0xa118>
   1b340:	push	{r4, r5, r6, lr}
   1b344:	sub	sp, sp, #8
   1b348:	ldr	r0, [r3]
   1b34c:	bl	3d504 <__assert_fail@plt+0x2c218>
   1b350:	cmp	r0, #0
   1b354:	beq	1b378 <__assert_fail@plt+0xa08c>
   1b358:	ldr	r4, [pc, #168]	; 1b408 <__assert_fail@plt+0xa11c>
   1b35c:	ldrb	r3, [r4, #4]
   1b360:	cmp	r3, #0
   1b364:	beq	1b394 <__assert_fail@plt+0xa0a8>
   1b368:	bl	111c0 <__errno_location@plt>
   1b36c:	ldr	r3, [r0]
   1b370:	cmp	r3, #32
   1b374:	bne	1b394 <__assert_fail@plt+0xa0a8>
   1b378:	ldr	r3, [pc, #140]	; 1b40c <__assert_fail@plt+0xa120>
   1b37c:	ldr	r0, [r3]
   1b380:	bl	3d504 <__assert_fail@plt+0x2c218>
   1b384:	cmp	r0, #0
   1b388:	bne	1b3dc <__assert_fail@plt+0xa0f0>
   1b38c:	add	sp, sp, #8
   1b390:	pop	{r4, r5, r6, pc}
   1b394:	mov	r2, #5
   1b398:	ldr	r1, [pc, #112]	; 1b410 <__assert_fail@plt+0xa124>
   1b39c:	mov	r0, #0
   1b3a0:	bl	110a0 <dcgettext@plt>
   1b3a4:	ldr	r4, [r4]
   1b3a8:	cmp	r4, #0
   1b3ac:	mov	r5, r0
   1b3b0:	beq	1b3e8 <__assert_fail@plt+0xa0fc>
   1b3b4:	bl	111c0 <__errno_location@plt>
   1b3b8:	ldr	r6, [r0]
   1b3bc:	mov	r0, r4
   1b3c0:	bl	39f3c <__assert_fail@plt+0x28c50>
   1b3c4:	mov	r1, r6
   1b3c8:	str	r5, [sp]
   1b3cc:	ldr	r2, [pc, #64]	; 1b414 <__assert_fail@plt+0xa128>
   1b3d0:	mov	r3, r0
   1b3d4:	mov	r0, #0
   1b3d8:	bl	11124 <error@plt>
   1b3dc:	ldr	r3, [pc, #52]	; 1b418 <__assert_fail@plt+0xa12c>
   1b3e0:	ldr	r0, [r3]
   1b3e4:	bl	1104c <_exit@plt>
   1b3e8:	bl	111c0 <__errno_location@plt>
   1b3ec:	mov	r3, r5
   1b3f0:	ldr	r2, [pc, #36]	; 1b41c <__assert_fail@plt+0xa130>
   1b3f4:	ldr	r1, [r0]
   1b3f8:	mov	r0, r4
   1b3fc:	bl	11124 <error@plt>
   1b400:	b	1b3dc <__assert_fail@plt+0xa0f0>
   1b404:	andeq	r2, r5, r4, lsr #3
   1b408:	ldrdeq	r2, [r5], -r0
   1b40c:	muleq	r5, r8, r1
   1b410:	ldrdeq	r1, [r4], -r8
   1b414:	andeq	r1, r4, r4, ror #11
   1b418:	andeq	r2, r5, r0, asr #2
   1b41c:	andeq	lr, r3, ip, lsl pc
   1b420:	push	{r4, r5, r6, r7, r8, r9, lr}
   1b424:	mov	r5, r0
   1b428:	sub	sp, sp, #164	; 0xa4
   1b42c:	ldr	r0, [pc, #200]	; 1b4fc <__assert_fail@plt+0xa210>
   1b430:	mov	r8, r1
   1b434:	bl	3d47c <__assert_fail@plt+0x2c190>
   1b438:	subs	r6, r0, #0
   1b43c:	moveq	r0, #1
   1b440:	beq	1b4b0 <__assert_fail@plt+0xa1c4>
   1b444:	add	r0, sp, #4
   1b448:	bl	1b500 <__assert_fail@plt+0xa214>
   1b44c:	mov	r7, #1
   1b450:	mov	r9, #32768	; 0x8000
   1b454:	mov	r4, #0
   1b458:	b	1b474 <__assert_fail@plt+0xa188>
   1b45c:	bl	112b0 <fread_unlocked@plt>
   1b460:	add	r4, r4, r0
   1b464:	cmp	r4, #32768	; 0x8000
   1b468:	beq	1b4b8 <__assert_fail@plt+0xa1cc>
   1b46c:	cmp	r0, #0
   1b470:	beq	1b4cc <__assert_fail@plt+0xa1e0>
   1b474:	ldr	ip, [r5]
   1b478:	rsb	r2, r4, #32768	; 0x8000
   1b47c:	tst	ip, #16
   1b480:	add	r0, r6, r4
   1b484:	mov	r3, r5
   1b488:	mov	r1, r7
   1b48c:	beq	1b45c <__assert_fail@plt+0xa170>
   1b490:	cmp	r4, #0
   1b494:	bne	1b4e8 <__assert_fail@plt+0xa1fc>
   1b498:	mov	r1, r8
   1b49c:	add	r0, sp, #4
   1b4a0:	bl	1bfec <__assert_fail@plt+0xad00>
   1b4a4:	mov	r0, r6
   1b4a8:	bl	3618c <__assert_fail@plt+0x24ea0>
   1b4ac:	mov	r0, #0
   1b4b0:	add	sp, sp, #164	; 0xa4
   1b4b4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1b4b8:	add	r2, sp, #4
   1b4bc:	mov	r1, r9
   1b4c0:	mov	r0, r6
   1b4c4:	bl	1b574 <__assert_fail@plt+0xa288>
   1b4c8:	b	1b454 <__assert_fail@plt+0xa168>
   1b4cc:	ldr	r3, [r5]
   1b4d0:	tst	r3, #32
   1b4d4:	beq	1b490 <__assert_fail@plt+0xa1a4>
   1b4d8:	mov	r0, r6
   1b4dc:	bl	3618c <__assert_fail@plt+0x24ea0>
   1b4e0:	mov	r0, #1
   1b4e4:	b	1b4b0 <__assert_fail@plt+0xa1c4>
   1b4e8:	mov	r1, r4
   1b4ec:	add	r2, sp, #4
   1b4f0:	mov	r0, r6
   1b4f4:	bl	1c0ac <__assert_fail@plt+0xadc0>
   1b4f8:	b	1b498 <__assert_fail@plt+0xa1ac>
   1b4fc:	andeq	r8, r0, r8, asr #32
   1b500:	push	{lr}		; (str lr, [sp, #-4]!)
   1b504:	mov	r3, #0
   1b508:	ldr	lr, [pc, #40]	; 1b538 <__assert_fail@plt+0xa24c>
   1b50c:	ldr	ip, [pc, #40]	; 1b53c <__assert_fail@plt+0xa250>
   1b510:	ldr	r1, [pc, #40]	; 1b540 <__assert_fail@plt+0xa254>
   1b514:	ldr	r2, [pc, #40]	; 1b544 <__assert_fail@plt+0xa258>
   1b518:	str	lr, [r0]
   1b51c:	str	ip, [r0, #4]
   1b520:	str	r1, [r0, #8]
   1b524:	str	r2, [r0, #12]
   1b528:	str	r3, [r0, #20]
   1b52c:	str	r3, [r0, #16]
   1b530:	str	r3, [r0, #24]
   1b534:	pop	{pc}		; (ldr pc, [sp], #4)
   1b538:	strbvs	r2, [r5, -r1, lsl #6]
   1b53c:	svc	0x00cdab89
   1b540:	ldmls	sl!, {r1, r2, r3, r4, r5, r6, r7, sl, fp, ip, lr, pc}
   1b544:	eorsne	r5, r2, r6, ror r4
   1b548:	ldr	r2, [r0]
   1b54c:	mov	r3, r0
   1b550:	str	r2, [r1]
   1b554:	ldr	r2, [r3, #4]
   1b558:	mov	r0, r1
   1b55c:	str	r2, [r1, #4]
   1b560:	ldr	r2, [r3, #8]
   1b564:	str	r2, [r1, #8]
   1b568:	ldr	r3, [r3, #12]
   1b56c:	str	r3, [r1, #12]
   1b570:	bx	lr
   1b574:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b578:	sub	sp, sp, #20
   1b57c:	ldr	r3, [r2, #16]
   1b580:	mov	lr, r2
   1b584:	str	r2, [sp, #12]
   1b588:	ldr	r2, [r2, #20]
   1b58c:	add	r3, r1, r3
   1b590:	bic	ip, r1, #3
   1b594:	add	ip, r0, ip
   1b598:	cmp	r1, r3
   1b59c:	movls	r1, r2
   1b5a0:	addhi	r1, r2, #1
   1b5a4:	str	r3, [lr, #16]
   1b5a8:	ldr	r3, [lr]
   1b5ac:	cmp	r0, ip
   1b5b0:	str	r1, [lr, #20]
   1b5b4:	str	r3, [sp, #4]
   1b5b8:	str	ip, [sp, #8]
   1b5bc:	ldr	r3, [lr, #4]
   1b5c0:	ldr	r1, [lr, #8]
   1b5c4:	ldr	r2, [lr, #12]
   1b5c8:	bcs	1befc <__assert_fail@plt+0xac10>
   1b5cc:	mov	lr, r3
   1b5d0:	ldr	r3, [sp, #4]
   1b5d4:	mov	r9, r0
   1b5d8:	mov	r4, r1
   1b5dc:	mov	r6, r2
   1b5e0:	add	r3, r3, #-687865856	; 0xd7000000
   1b5e4:	add	r3, r3, #6946816	; 0x6a0000
   1b5e8:	ldr	r2, [r9]
   1b5ec:	eor	r8, r4, r6
   1b5f0:	add	r3, r3, #41984	; 0xa400
   1b5f4:	and	r8, r8, lr
   1b5f8:	add	r3, r3, #120	; 0x78
   1b5fc:	add	r3, r3, r2
   1b600:	eor	r8, r8, r6
   1b604:	add	r8, r8, r3
   1b608:	ldr	r5, [pc, #2296]	; 1bf08 <__assert_fail@plt+0xac1c>
   1b60c:	add	r8, lr, r8, ror #25
   1b610:	ldr	r2, [r9, #4]
   1b614:	eor	r7, lr, r4
   1b618:	and	r7, r7, r8
   1b61c:	add	r5, r6, r5
   1b620:	add	r5, r5, r2
   1b624:	eor	r7, r7, r4
   1b628:	add	r7, r7, r5
   1b62c:	ldr	r0, [pc, #2264]	; 1bf0c <__assert_fail@plt+0xac20>
   1b630:	add	r7, r8, r7, ror #20
   1b634:	ldr	r2, [r9, #8]
   1b638:	eor	ip, r8, lr
   1b63c:	and	ip, ip, r7
   1b640:	add	r0, r4, r0
   1b644:	add	r0, r0, r2
   1b648:	eor	ip, ip, lr
   1b64c:	add	ip, ip, r0
   1b650:	ldr	r2, [pc, #2232]	; 1bf10 <__assert_fail@plt+0xac24>
   1b654:	add	ip, r7, ip, ror #15
   1b658:	ldr	r0, [r9, #12]
   1b65c:	eor	r1, r8, r7
   1b660:	and	r1, r1, ip
   1b664:	add	r2, lr, r2
   1b668:	add	r2, r2, r0
   1b66c:	eor	r1, r1, r8
   1b670:	ldr	r0, [r9, #16]
   1b674:	add	r1, r1, r2
   1b678:	ldr	r3, [pc, #2196]	; 1bf14 <__assert_fail@plt+0xac28>
   1b67c:	add	r1, ip, r1, ror #10
   1b680:	eor	r2, r7, ip
   1b684:	add	r3, r0, r3
   1b688:	ldr	r0, [r9, #20]
   1b68c:	and	r2, r2, r1
   1b690:	add	r8, r3, r8
   1b694:	add	r0, r0, #1191182336	; 0x47000000
   1b698:	eor	r3, r2, r7
   1b69c:	add	r3, r3, r8
   1b6a0:	add	r0, r0, #8847360	; 0x870000
   1b6a4:	add	r0, r0, #50688	; 0xc600
   1b6a8:	add	r3, r1, r3, ror #25
   1b6ac:	eor	r2, ip, r1
   1b6b0:	add	r0, r0, #42	; 0x2a
   1b6b4:	and	r2, r2, r3
   1b6b8:	add	r7, r0, r7
   1b6bc:	ldr	r0, [r9, #24]
   1b6c0:	eor	r5, r2, ip
   1b6c4:	add	r5, r5, r7
   1b6c8:	add	r0, r0, #-1476395008	; 0xa8000000
   1b6cc:	add	r0, r0, #3162112	; 0x304000
   1b6d0:	add	r5, r3, r5, ror #20
   1b6d4:	eor	r2, r1, r3
   1b6d8:	add	r0, r0, #1552	; 0x610
   1b6dc:	and	r2, r2, r5
   1b6e0:	add	r0, r0, #3
   1b6e4:	add	ip, r0, ip
   1b6e8:	eor	r0, r2, r1
   1b6ec:	ldr	r2, [r9, #28]
   1b6f0:	add	r0, r0, ip
   1b6f4:	add	r2, r2, #-50331648	; 0xfd000000
   1b6f8:	add	r2, r2, #4587520	; 0x460000
   1b6fc:	add	r0, r5, r0, ror #15
   1b700:	eor	ip, r3, r5
   1b704:	add	r2, r2, #38144	; 0x9500
   1b708:	and	ip, ip, r0
   1b70c:	add	r2, r2, #1
   1b710:	add	r1, r2, r1
   1b714:	eor	r2, ip, r3
   1b718:	ldr	ip, [r9, #32]
   1b71c:	add	r2, r2, r1
   1b720:	add	ip, ip, #1761607680	; 0x69000000
   1b724:	add	ip, ip, #8388608	; 0x800000
   1b728:	add	r2, r0, r2, ror #10
   1b72c:	eor	r1, r5, r0
   1b730:	add	ip, ip, #38912	; 0x9800
   1b734:	and	r1, r1, r2
   1b738:	add	ip, ip, #216	; 0xd8
   1b73c:	add	r3, ip, r3
   1b740:	eor	sl, r1, r5
   1b744:	add	sl, sl, r3
   1b748:	ldr	ip, [r9, #36]	; 0x24
   1b74c:	ldr	r1, [pc, #1988]	; 1bf18 <__assert_fail@plt+0xac2c>
   1b750:	add	sl, r2, sl, ror #25
   1b754:	eor	r3, r0, r2
   1b758:	add	r1, ip, r1
   1b75c:	and	r3, r3, sl
   1b760:	add	r5, r1, r5
   1b764:	eor	r7, r3, r0
   1b768:	ldr	r1, [r9, #40]	; 0x28
   1b76c:	add	r7, r7, r5
   1b770:	sub	r1, r1, #41984	; 0xa400
   1b774:	add	r7, sl, r7, ror #20
   1b778:	eor	r3, r2, sl
   1b77c:	sub	r1, r1, #79	; 0x4f
   1b780:	and	r3, r3, r7
   1b784:	add	r0, r1, r0
   1b788:	ldr	r1, [r9, #44]	; 0x2c
   1b78c:	eor	r3, r3, r2
   1b790:	add	r0, r3, r0
   1b794:	add	r1, r1, #-1996488704	; 0x89000000
   1b798:	add	r1, r1, #6029312	; 0x5c0000
   1b79c:	add	ip, r7, r0, ror #15
   1b7a0:	eor	r3, sl, r7
   1b7a4:	add	r1, r1, #55040	; 0xd700
   1b7a8:	and	r3, r3, ip
   1b7ac:	add	r1, r1, #190	; 0xbe
   1b7b0:	add	r2, r1, r2
   1b7b4:	eor	r1, r3, sl
   1b7b8:	add	r1, r1, r2
   1b7bc:	ldr	r8, [r9, #48]	; 0x30
   1b7c0:	ldr	r0, [pc, #1876]	; 1bf1c <__assert_fail@plt+0xac30>
   1b7c4:	add	r1, ip, r1, ror #10
   1b7c8:	eor	r2, r7, ip
   1b7cc:	add	r0, r8, r0
   1b7d0:	and	r2, r2, r1
   1b7d4:	add	sl, r0, sl
   1b7d8:	eor	r3, r2, r7
   1b7dc:	add	r3, r3, sl
   1b7e0:	ldr	r5, [r9, #52]	; 0x34
   1b7e4:	ldr	r0, [pc, #1844]	; 1bf20 <__assert_fail@plt+0xac34>
   1b7e8:	add	r3, r1, r3, ror #25
   1b7ec:	eor	r2, ip, r1
   1b7f0:	add	r0, r5, r0
   1b7f4:	and	r2, r2, r3
   1b7f8:	add	r7, r0, r7
   1b7fc:	eor	r5, r2, ip
   1b800:	add	r5, r5, r7
   1b804:	ldr	sl, [r9, #56]	; 0x38
   1b808:	ldr	r7, [pc, #1812]	; 1bf24 <__assert_fail@plt+0xac38>
   1b80c:	add	r5, r3, r5, ror #20
   1b810:	eor	r2, r1, r3
   1b814:	add	r7, sl, r7
   1b818:	and	r2, r2, r5
   1b81c:	add	ip, r7, ip
   1b820:	eor	r0, r2, r1
   1b824:	add	r0, r0, ip
   1b828:	ldr	r7, [r9, #60]	; 0x3c
   1b82c:	ldr	r2, [pc, #1780]	; 1bf28 <__assert_fail@plt+0xac3c>
   1b830:	add	r0, r5, r0, ror #15
   1b834:	eor	ip, r3, r5
   1b838:	add	r2, r7, r2
   1b83c:	and	ip, ip, r0
   1b840:	add	r1, r2, r1
   1b844:	eor	r2, ip, r3
   1b848:	add	r2, r2, r1
   1b84c:	ldr	ip, [pc, #1752]	; 1bf2c <__assert_fail@plt+0xac40>
   1b850:	ldr	r1, [r9, #4]
   1b854:	add	r2, r0, r2, ror #10
   1b858:	add	ip, r1, ip
   1b85c:	eor	r1, r0, r2
   1b860:	and	r1, r1, r5
   1b864:	add	r3, ip, r3
   1b868:	eor	fp, r1, r0
   1b86c:	add	fp, fp, r3
   1b870:	ldr	ip, [r9, #24]
   1b874:	add	fp, r2, fp, ror #27
   1b878:	ldr	r1, [pc, #1712]	; 1bf30 <__assert_fail@plt+0xac44>
   1b87c:	eor	r3, r2, fp
   1b880:	add	r1, ip, r1
   1b884:	and	r3, r3, r0
   1b888:	eor	r3, r3, r2
   1b88c:	add	r5, r1, r5
   1b890:	add	r5, r3, r5
   1b894:	ldr	r1, [r9, #44]	; 0x2c
   1b898:	add	r5, fp, r5, ror #23
   1b89c:	ldr	ip, [pc, #1680]	; 1bf34 <__assert_fail@plt+0xac48>
   1b8a0:	eor	r3, fp, r5
   1b8a4:	add	ip, r1, ip
   1b8a8:	and	r3, r3, r2
   1b8ac:	add	r0, ip, r0
   1b8b0:	eor	ip, r3, fp
   1b8b4:	add	ip, ip, r0
   1b8b8:	ldr	r1, [pc, #1656]	; 1bf38 <__assert_fail@plt+0xac4c>
   1b8bc:	add	ip, r5, ip, ror #18
   1b8c0:	ldr	r0, [r9]
   1b8c4:	eor	r3, r5, ip
   1b8c8:	add	r1, r0, r1
   1b8cc:	and	r3, r3, fp
   1b8d0:	eor	r3, r3, r5
   1b8d4:	add	r2, r1, r2
   1b8d8:	add	r2, r3, r2
   1b8dc:	ldr	r0, [r9, #20]
   1b8e0:	add	r2, ip, r2, ror #12
   1b8e4:	ldr	r3, [pc, #1616]	; 1bf3c <__assert_fail@plt+0xac50>
   1b8e8:	eor	r1, ip, r2
   1b8ec:	add	r3, r0, r3
   1b8f0:	and	r1, r1, r5
   1b8f4:	add	fp, r3, fp
   1b8f8:	eor	r3, r1, ip
   1b8fc:	add	r3, r3, fp
   1b900:	ldr	r1, [pc, #1592]	; 1bf40 <__assert_fail@plt+0xac54>
   1b904:	add	r3, r2, r3, ror #27
   1b908:	ldr	fp, [r9, #40]	; 0x28
   1b90c:	eor	r0, r2, r3
   1b910:	add	r1, fp, r1
   1b914:	and	r0, r0, ip
   1b918:	add	r5, r1, r5
   1b91c:	eor	r1, r0, r2
   1b920:	add	r1, r1, r5
   1b924:	ldr	r0, [pc, #1560]	; 1bf44 <__assert_fail@plt+0xac58>
   1b928:	add	r1, r3, r1, ror #23
   1b92c:	eor	r5, r3, r1
   1b930:	add	r0, r7, r0
   1b934:	and	r5, r5, r2
   1b938:	add	ip, r0, ip
   1b93c:	eor	r0, r5, r3
   1b940:	add	r0, r0, ip
   1b944:	ldr	fp, [r9, #16]
   1b948:	add	r0, r1, r0, ror #18
   1b94c:	ldr	r5, [pc, #1524]	; 1bf48 <__assert_fail@plt+0xac5c>
   1b950:	eor	ip, r1, r0
   1b954:	add	r5, fp, r5
   1b958:	and	ip, ip, r3
   1b95c:	eor	ip, ip, r1
   1b960:	add	r2, r5, r2
   1b964:	add	r2, ip, r2
   1b968:	ldr	fp, [r9, #36]	; 0x24
   1b96c:	add	r2, r0, r2, ror #12
   1b970:	ldr	r5, [pc, #1492]	; 1bf4c <__assert_fail@plt+0xac60>
   1b974:	eor	ip, r0, r2
   1b978:	add	r5, fp, r5
   1b97c:	and	ip, ip, r1
   1b980:	add	r3, r5, r3
   1b984:	eor	fp, ip, r0
   1b988:	add	fp, fp, r3
   1b98c:	ldr	ip, [pc, #1468]	; 1bf50 <__assert_fail@plt+0xac64>
   1b990:	add	fp, r2, fp, ror #27
   1b994:	eor	r3, r2, fp
   1b998:	add	ip, sl, ip
   1b99c:	and	r3, r3, r0
   1b9a0:	add	r1, ip, r1
   1b9a4:	eor	r5, r3, r2
   1b9a8:	add	r5, r5, r1
   1b9ac:	ldr	ip, [pc, #1440]	; 1bf54 <__assert_fail@plt+0xac68>
   1b9b0:	add	r5, fp, r5, ror #23
   1b9b4:	ldr	r1, [r9, #12]
   1b9b8:	eor	r3, fp, r5
   1b9bc:	add	ip, r1, ip
   1b9c0:	and	r3, r3, r2
   1b9c4:	add	r0, ip, r0
   1b9c8:	eor	ip, r3, fp
   1b9cc:	add	ip, ip, r0
   1b9d0:	ldr	r1, [pc, #1408]	; 1bf58 <__assert_fail@plt+0xac6c>
   1b9d4:	add	ip, r5, ip, ror #18
   1b9d8:	ldr	r0, [r9, #32]
   1b9dc:	eor	r3, r5, ip
   1b9e0:	add	r1, r0, r1
   1b9e4:	and	r3, r3, fp
   1b9e8:	eor	r3, r3, r5
   1b9ec:	add	r2, r1, r2
   1b9f0:	add	r2, r3, r2
   1b9f4:	ldr	r0, [r9, #52]	; 0x34
   1b9f8:	add	r2, ip, r2, ror #12
   1b9fc:	ldr	r3, [pc, #1368]	; 1bf5c <__assert_fail@plt+0xac70>
   1ba00:	eor	r1, ip, r2
   1ba04:	add	r3, r0, r3
   1ba08:	and	r1, r1, r5
   1ba0c:	add	fp, r3, fp
   1ba10:	eor	r3, r1, ip
   1ba14:	add	r3, r3, fp
   1ba18:	ldr	r1, [pc, #1344]	; 1bf60 <__assert_fail@plt+0xac74>
   1ba1c:	add	r3, r2, r3, ror #27
   1ba20:	ldr	fp, [r9, #8]
   1ba24:	eor	r0, r2, r3
   1ba28:	add	r1, fp, r1
   1ba2c:	and	r0, r0, ip
   1ba30:	add	r5, r1, r5
   1ba34:	eor	r1, r0, r2
   1ba38:	add	r1, r1, r5
   1ba3c:	ldr	fp, [r9, #28]
   1ba40:	add	r1, r3, r1, ror #23
   1ba44:	ldr	r0, [pc, #1304]	; 1bf64 <__assert_fail@plt+0xac78>
   1ba48:	eor	r5, r3, r1
   1ba4c:	add	r0, fp, r0
   1ba50:	and	r5, r5, r2
   1ba54:	add	ip, r0, ip
   1ba58:	eor	r0, r5, r3
   1ba5c:	add	r0, r0, ip
   1ba60:	ldr	r5, [pc, #1280]	; 1bf68 <__assert_fail@plt+0xac7c>
   1ba64:	add	r0, r1, r0, ror #18
   1ba68:	eor	fp, r1, r0
   1ba6c:	add	r5, r8, r5
   1ba70:	and	ip, r3, fp
   1ba74:	eor	ip, ip, r1
   1ba78:	add	r2, r5, r2
   1ba7c:	add	r2, ip, r2
   1ba80:	ldr	r5, [pc, #1252]	; 1bf6c <__assert_fail@plt+0xac80>
   1ba84:	ldr	ip, [r9, #20]
   1ba88:	add	r2, r0, r2, ror #12
   1ba8c:	add	r5, ip, r5
   1ba90:	eor	fp, fp, r2
   1ba94:	add	r3, r5, r3
   1ba98:	ldr	ip, [r9, #32]
   1ba9c:	add	r3, fp, r3
   1baa0:	ldr	fp, [pc, #1224]	; 1bf70 <__assert_fail@plt+0xac84>
   1baa4:	add	r3, r2, r3, ror #28
   1baa8:	add	fp, ip, fp
   1baac:	eor	ip, r0, r2
   1bab0:	eor	ip, ip, r3
   1bab4:	add	r1, fp, r1
   1bab8:	add	r1, ip, r1
   1babc:	ldr	r5, [pc, #1200]	; 1bf74 <__assert_fail@plt+0xac88>
   1bac0:	ldr	ip, [r9, #44]	; 0x2c
   1bac4:	add	r1, r3, r1, ror #21
   1bac8:	add	r5, ip, r5
   1bacc:	eor	ip, r2, r3
   1bad0:	eor	ip, ip, r1
   1bad4:	add	r0, r5, r0
   1bad8:	add	r0, ip, r0
   1badc:	ldr	r5, [pc, #1172]	; 1bf78 <__assert_fail@plt+0xac8c>
   1bae0:	add	r0, r1, r0, ror #16
   1bae4:	add	r5, sl, r5
   1bae8:	eor	fp, r3, r1
   1baec:	eor	fp, fp, r0
   1baf0:	add	r2, r5, r2
   1baf4:	ldr	ip, [r9, #4]
   1baf8:	add	r2, fp, r2
   1bafc:	ldr	fp, [pc, #1144]	; 1bf7c <__assert_fail@plt+0xac90>
   1bb00:	add	r2, r0, r2, ror #9
   1bb04:	add	fp, ip, fp
   1bb08:	eor	ip, r1, r0
   1bb0c:	add	r3, fp, r3
   1bb10:	eor	fp, ip, r2
   1bb14:	ldr	r5, [r9, #16]
   1bb18:	add	fp, fp, r3
   1bb1c:	ldr	ip, [pc, #1116]	; 1bf80 <__assert_fail@plt+0xac94>
   1bb20:	add	fp, r2, fp, ror #28
   1bb24:	add	ip, r5, ip
   1bb28:	eor	r3, r0, r2
   1bb2c:	eor	r3, r3, fp
   1bb30:	add	r1, ip, r1
   1bb34:	ldr	r5, [r9, #28]
   1bb38:	add	r1, r3, r1
   1bb3c:	ldr	ip, [pc, #1088]	; 1bf84 <__assert_fail@plt+0xac98>
   1bb40:	add	r1, fp, r1, ror #21
   1bb44:	add	ip, r5, ip
   1bb48:	eor	r3, r2, fp
   1bb4c:	eor	r3, r3, r1
   1bb50:	add	r0, ip, r0
   1bb54:	add	r0, r3, r0
   1bb58:	ldr	ip, [r9, #40]	; 0x28
   1bb5c:	ldr	r5, [pc, #1060]	; 1bf88 <__assert_fail@plt+0xac9c>
   1bb60:	add	r0, r1, r0, ror #16
   1bb64:	eor	r3, fp, r1
   1bb68:	add	r5, ip, r5
   1bb6c:	add	r2, r5, r2
   1bb70:	eor	r5, r3, r0
   1bb74:	ldr	ip, [r9, #52]	; 0x34
   1bb78:	add	r5, r5, r2
   1bb7c:	ldr	r2, [pc, #1032]	; 1bf8c <__assert_fail@plt+0xaca0>
   1bb80:	add	r5, r0, r5, ror #9
   1bb84:	add	r2, ip, r2
   1bb88:	eor	ip, r1, r0
   1bb8c:	add	fp, r2, fp
   1bb90:	eor	r2, ip, r5
   1bb94:	add	r2, r2, fp
   1bb98:	ldr	ip, [pc, #1008]	; 1bf90 <__assert_fail@plt+0xaca4>
   1bb9c:	ldr	fp, [r9]
   1bba0:	add	r2, r5, r2, ror #28
   1bba4:	eor	r3, r0, r5
   1bba8:	add	ip, fp, ip
   1bbac:	add	r1, ip, r1
   1bbb0:	eor	fp, r3, r2
   1bbb4:	add	fp, fp, r1
   1bbb8:	ldr	ip, [pc, #980]	; 1bf94 <__assert_fail@plt+0xaca8>
   1bbbc:	ldr	r1, [r9, #12]
   1bbc0:	add	fp, r2, fp, ror #21
   1bbc4:	eor	r3, r5, r2
   1bbc8:	add	ip, r1, ip
   1bbcc:	add	r0, ip, r0
   1bbd0:	eor	ip, r3, fp
   1bbd4:	ldr	r1, [r9, #24]
   1bbd8:	add	ip, ip, r0
   1bbdc:	ldr	r3, [pc, #948]	; 1bf98 <__assert_fail@plt+0xacac>
   1bbe0:	add	ip, fp, ip, ror #16
   1bbe4:	add	r3, r1, r3
   1bbe8:	eor	r1, r2, fp
   1bbec:	add	r5, r3, r5
   1bbf0:	eor	r3, r1, ip
   1bbf4:	add	r3, r3, r5
   1bbf8:	ldr	r1, [r9, #36]	; 0x24
   1bbfc:	ldr	r0, [pc, #920]	; 1bf9c <__assert_fail@plt+0xacb0>
   1bc00:	add	r3, ip, r3, ror #9
   1bc04:	add	r0, r1, r0
   1bc08:	eor	r1, fp, ip
   1bc0c:	add	r2, r0, r2
   1bc10:	eor	r5, r1, r3
   1bc14:	add	r5, r5, r2
   1bc18:	ldr	r0, [pc, #896]	; 1bfa0 <__assert_fail@plt+0xacb4>
   1bc1c:	add	r5, r3, r5, ror #28
   1bc20:	eor	r2, ip, r3
   1bc24:	add	r0, r8, r0
   1bc28:	add	fp, r0, fp
   1bc2c:	eor	r0, r2, r5
   1bc30:	add	r0, r0, fp
   1bc34:	ldr	r1, [pc, #872]	; 1bfa4 <__assert_fail@plt+0xacb8>
   1bc38:	add	r0, r5, r0, ror #21
   1bc3c:	eor	r2, r3, r5
   1bc40:	add	r1, r7, r1
   1bc44:	add	ip, r1, ip
   1bc48:	eor	r1, r2, r0
   1bc4c:	add	r1, r1, ip
   1bc50:	ldr	r2, [r9, #8]
   1bc54:	ldr	ip, [pc, #844]	; 1bfa8 <__assert_fail@plt+0xacbc>
   1bc58:	add	r1, r0, r1, ror #16
   1bc5c:	add	ip, r2, ip
   1bc60:	eor	r2, r5, r0
   1bc64:	add	r3, ip, r3
   1bc68:	eor	ip, r2, r1
   1bc6c:	add	ip, ip, r3
   1bc70:	ldr	fp, [r9]
   1bc74:	ldr	r2, [pc, #816]	; 1bfac <__assert_fail@plt+0xacc0>
   1bc78:	add	ip, r1, ip, ror #9
   1bc7c:	mvn	r3, r0
   1bc80:	add	r2, fp, r2
   1bc84:	orr	r3, r3, ip
   1bc88:	add	r5, r2, r5
   1bc8c:	eor	r2, r3, r1
   1bc90:	add	r2, r2, r5
   1bc94:	ldr	fp, [pc, #788]	; 1bfb0 <__assert_fail@plt+0xacc4>
   1bc98:	ldr	r5, [r9, #28]
   1bc9c:	add	r2, ip, r2, ror #26
   1bca0:	mvn	r3, r1
   1bca4:	add	fp, r5, fp
   1bca8:	orr	r3, r3, r2
   1bcac:	eor	r3, r3, ip
   1bcb0:	add	r0, fp, r0
   1bcb4:	add	r0, r3, r0
   1bcb8:	ldr	fp, [pc, #756]	; 1bfb4 <__assert_fail@plt+0xacc8>
   1bcbc:	add	r0, r2, r0, ror #22
   1bcc0:	mvn	r5, ip
   1bcc4:	add	fp, sl, fp
   1bcc8:	orr	r5, r5, r0
   1bccc:	eor	r5, r5, r2
   1bcd0:	add	r1, fp, r1
   1bcd4:	add	r1, r5, r1
   1bcd8:	ldr	r3, [pc, #728]	; 1bfb8 <__assert_fail@plt+0xaccc>
   1bcdc:	ldr	r5, [r9, #20]
   1bce0:	add	r1, r0, r1, ror #17
   1bce4:	mvn	sl, r2
   1bce8:	add	r3, r5, r3
   1bcec:	orr	sl, sl, r1
   1bcf0:	add	ip, r3, ip
   1bcf4:	eor	sl, sl, r0
   1bcf8:	add	ip, sl, ip
   1bcfc:	ldr	fp, [pc, #696]	; 1bfbc <__assert_fail@plt+0xacd0>
   1bd00:	add	ip, r1, ip, ror #11
   1bd04:	mvn	r5, r0
   1bd08:	add	fp, r8, fp
   1bd0c:	orr	r5, r5, ip
   1bd10:	eor	r5, r5, r1
   1bd14:	add	r2, fp, r2
   1bd18:	add	r2, r5, r2
   1bd1c:	ldr	r8, [pc, #668]	; 1bfc0 <__assert_fail@plt+0xacd4>
   1bd20:	ldr	r5, [r9, #12]
   1bd24:	add	r2, ip, r2, ror #26
   1bd28:	mvn	r3, r1
   1bd2c:	add	r8, r5, r8
   1bd30:	orr	r3, r3, r2
   1bd34:	eor	r3, r3, ip
   1bd38:	add	r0, r8, r0
   1bd3c:	add	r0, r3, r0
   1bd40:	ldr	r8, [r9, #40]	; 0x28
   1bd44:	ldr	fp, [pc, #632]	; 1bfc4 <__assert_fail@plt+0xacd8>
   1bd48:	add	r0, r2, r0, ror #22
   1bd4c:	mvn	r5, ip
   1bd50:	add	fp, r8, fp
   1bd54:	orr	r5, r5, r0
   1bd58:	eor	r5, r5, r2
   1bd5c:	add	r1, fp, r1
   1bd60:	add	r1, r5, r1
   1bd64:	ldr	r8, [r9, #4]
   1bd68:	ldr	r3, [pc, #600]	; 1bfc8 <__assert_fail@plt+0xacdc>
   1bd6c:	add	r1, r0, r1, ror #17
   1bd70:	mvn	r5, r2
   1bd74:	add	r3, r8, r3
   1bd78:	orr	r5, r5, r1
   1bd7c:	eor	r5, r5, r0
   1bd80:	add	ip, r3, ip
   1bd84:	add	ip, r5, ip
   1bd88:	ldr	fp, [pc, #572]	; 1bfcc <__assert_fail@plt+0xace0>
   1bd8c:	ldr	r5, [r9, #32]
   1bd90:	add	ip, r1, ip, ror #11
   1bd94:	mvn	r3, r0
   1bd98:	add	fp, r5, fp
   1bd9c:	orr	r3, r3, ip
   1bda0:	eor	r3, r3, r1
   1bda4:	add	r2, fp, r2
   1bda8:	add	r2, r3, r2
   1bdac:	ldr	r8, [pc, #540]	; 1bfd0 <__assert_fail@plt+0xace4>
   1bdb0:	add	r2, ip, r2, ror #26
   1bdb4:	mvn	r5, r1
   1bdb8:	add	r8, r7, r8
   1bdbc:	orr	r5, r5, r2
   1bdc0:	eor	r5, r5, ip
   1bdc4:	add	r0, r8, r0
   1bdc8:	add	r0, r5, r0
   1bdcc:	ldr	fp, [pc, #512]	; 1bfd4 <__assert_fail@plt+0xace8>
   1bdd0:	ldr	r5, [r9, #24]
   1bdd4:	add	r0, r2, r0, ror #22
   1bdd8:	mvn	r3, ip
   1bddc:	add	fp, r5, fp
   1bde0:	orr	r3, r3, r0
   1bde4:	eor	r3, r3, r2
   1bde8:	add	r1, fp, r1
   1bdec:	add	r1, r3, r1
   1bdf0:	ldr	r8, [r9, #52]	; 0x34
   1bdf4:	ldr	r7, [pc, #476]	; 1bfd8 <__assert_fail@plt+0xacec>
   1bdf8:	add	r1, r0, r1, ror #17
   1bdfc:	mvn	r5, r2
   1be00:	add	r7, r8, r7
   1be04:	orr	r5, r5, r1
   1be08:	eor	r5, r5, r0
   1be0c:	add	ip, r7, ip
   1be10:	add	ip, r5, ip
   1be14:	ldr	fp, [pc, #448]	; 1bfdc <__assert_fail@plt+0xacf0>
   1be18:	ldr	r5, [r9, #16]
   1be1c:	add	ip, r1, ip, ror #11
   1be20:	mvn	r3, r0
   1be24:	add	fp, r5, fp
   1be28:	orr	r3, r3, ip
   1be2c:	eor	r3, r3, r1
   1be30:	add	r2, fp, r2
   1be34:	add	r2, r3, r2
   1be38:	ldr	r5, [r9, #44]	; 0x2c
   1be3c:	ldr	r8, [pc, #412]	; 1bfe0 <__assert_fail@plt+0xacf4>
   1be40:	add	r2, ip, r2, ror #26
   1be44:	mvn	r3, r1
   1be48:	add	r8, r5, r8
   1be4c:	orr	r3, r3, r2
   1be50:	add	r8, r8, r0
   1be54:	eor	r0, r3, ip
   1be58:	add	r0, r0, r8
   1be5c:	ldr	r5, [r9, #8]
   1be60:	ldr	fp, [pc, #380]	; 1bfe4 <__assert_fail@plt+0xacf8>
   1be64:	add	r0, r2, r0, ror #22
   1be68:	mvn	r3, ip
   1be6c:	add	fp, r5, fp
   1be70:	orr	r3, r3, r0
   1be74:	add	fp, fp, r1
   1be78:	eor	r1, r3, r2
   1be7c:	add	r1, r1, fp
   1be80:	ldr	r5, [r9, #36]	; 0x24
   1be84:	ldr	r7, [pc, #348]	; 1bfe8 <__assert_fail@plt+0xacfc>
   1be88:	add	r1, r0, r1, ror #17
   1be8c:	mvn	r3, r2
   1be90:	add	r7, r5, r7
   1be94:	orr	r3, r3, r1
   1be98:	eor	r3, r3, r0
   1be9c:	add	ip, r7, ip
   1bea0:	add	ip, r3, ip
   1bea4:	ldr	r5, [sp, #8]
   1bea8:	ldr	r3, [sp, #4]
   1beac:	add	r9, r9, #64	; 0x40
   1beb0:	add	ip, r1, ip, ror #11
   1beb4:	add	r3, r3, r2
   1beb8:	cmp	r5, r9
   1bebc:	str	r3, [sp, #4]
   1bec0:	add	r6, r6, r0
   1bec4:	add	r4, r4, r1
   1bec8:	add	lr, lr, ip
   1becc:	bhi	1b5e0 <__assert_fail@plt+0xa2f4>
   1bed0:	mov	ip, lr
   1bed4:	mov	r1, r4
   1bed8:	mov	lr, r6
   1bedc:	ldr	r3, [sp, #12]
   1bee0:	ldr	r2, [sp, #4]
   1bee4:	str	ip, [r3, #4]
   1bee8:	str	r2, [r3]
   1beec:	str	r1, [r3, #8]
   1bef0:	str	lr, [r3, #12]
   1bef4:	add	sp, sp, #20
   1bef8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1befc:	mov	ip, r3
   1bf00:	mov	lr, r2
   1bf04:	b	1bedc <__assert_fail@plt+0xabf0>
   1bf08:	stmia	r7, {r1, r2, r4, r6, r8, r9, sl, ip, sp, pc}^
   1bf0c:	strtcs	r7, [r0], #-219	; 0xffffff25
   1bf10:			; <UNDEFINED> instruction: 0xc1bdceee
   1bf14:			; <UNDEFINED> instruction: 0xf57c0faf
   1bf18:	blhi	1159ddc <optarg@@GLIBC_2.4+0x1107c34>
   1bf1c:	blvs	fe4203ac <optarg@@GLIBC_2.4+0xfe3ce204>
   1bf20:	ldc2	1, cr7, [r8, #588]	; 0x24c
   1bf24:	ldrbtge	r4, [r9], -lr, lsl #7
   1bf28:	ldmibmi	r4!, {r0, r5, fp}
   1bf2c:			; <UNDEFINED> instruction: 0xf61e2562
   1bf30:	subgt	fp, r0, r0, asr #6
   1bf34:			; <UNDEFINED> instruction: 0x265e5a51
   1bf38:	ldmib	r6!, {r1, r3, r5, r7, r8, r9, sl, lr, pc}
   1bf3c:			; <UNDEFINED> instruction: 0xd62f105d
   1bf40:	subeq	r1, r4, #1392508928	; 0x53000000
   1bf44:	stmiale	r1!, {r0, r7, r9, sl, sp, lr, pc}
   1bf48:	ldrb	pc, [r3, r8, asr #23]	; <UNPREDICTABLE>
   1bf4c:	mvncs	ip, r6, ror #27
   1bf50:	teqgt	r7, #56098816	; 0x3580000
   1bf54:			; <UNDEFINED> instruction: 0xf4d50d87
   1bf58:	ldrbmi	r1, [sl, #-1261]	; 0xfffffb13
   1bf5c:	stmibge	r3!, {r0, r2, r8, fp, sp, lr, pc}^
   1bf60:	stc2l	3, cr10, [pc], #992	; 1c348 <__assert_fail@plt+0xb05c>
   1bf64:			; <UNDEFINED> instruction: 0x676f02d9
   1bf68:	stchi	12, cr4, [sl, #-552]!	; 0xfffffdd8
   1bf6c:			; <UNDEFINED> instruction: 0xfffa3942
   1bf70:	ldrbhi	pc, [r1, -r1, lsl #13]!	; <UNPREDICTABLE>
   1bf74:	ldfvss	f6, [sp, #136]	; 0x88
   1bf78:	vcmla.f16	d19, d5, d12, #270
   1bf7c:	ldrtge	lr, [lr], #2628	; 0xa44
   1bf80:	blmi	ff7cfe2c <optarg@@GLIBC_2.4+0xff77dc84>
   1bf84:			; <UNDEFINED> instruction: 0xf6bb4b60
   1bf88:	mrclt	12, 5, fp, cr15, cr0, {3}
   1bf8c:	ldmcs	fp, {r1, r2, r6, r7, r9, sl, fp, ip, sp, lr}
   1bf90:	b	fe865f80 <optarg@@GLIBC_2.4+0xfe813dd8>
   1bf94:	strbtle	r3, [pc], #133	; 1bf9c <__assert_fail@plt+0xacb0>
   1bf98:	streq	r1, [r8], #3333	; 0xd05
   1bf9c:	ldmible	r4, {r0, r3, r4, r5, ip, lr, pc}^
   1bfa0:	ldrb	r9, [fp], r5, ror #19
   1bfa4:	svcne	0x00a27cf8
   1bfa8:	strtgt	r5, [ip], #1637	; 0x665
   1bfac:	vld1.16	{d2-d5}, [r9], r4
   1bfb0:	msrmi	CPSR_fx, #604	; 0x25c
   1bfb4:	blge	fe524e58 <optarg@@GLIBC_2.4+0xfe4d2cb0>
   1bfb8:	ldc2	0, cr10, [r3], {57}	; 0x39
   1bfbc:	ldrbvs	r5, [fp, #-2499]	; 0xfffff63d
   1bfc0:	svchi	0x000ccc92
   1bfc4:			; <UNDEFINED> instruction: 0xffeff47d
   1bfc8:	strhi	r5, [r4, #3537]	; 0xdd1
   1bfcc:	svcvs	0x00a87e4f
   1bfd0:	cdp2	6, 2, cr14, cr12, cr0, {7}
   1bfd4:	movwge	r4, #4884	; 0x1314
   1bfd8:	adfmi<illegal precision>p	f1, f0, f1
   1bfdc:			; <UNDEFINED> instruction: 0xf7537e82
   1bfe0:	lfmlt	f7, 1, [sl, #-212]!	; 0xffffff2c
   1bfe4:	bcs	ff610ad8 <optarg@@GLIBC_2.4+0xff5be930>
   1bfe8:	bl	fe1d0e34 <optarg@@GLIBC_2.4+0xfe17ec8c>
   1bfec:	push	{r4, r5, r6, r7, r8, lr}
   1bff0:	mov	r4, r0
   1bff4:	ldr	r0, [r0, #24]
   1bff8:	ldr	r3, [r4, #16]
   1bffc:	cmp	r0, #55	; 0x37
   1c000:	add	r3, r0, r3
   1c004:	mov	r5, r1
   1c008:	movhi	r6, #128	; 0x80
   1c00c:	movls	r6, #64	; 0x40
   1c010:	movhi	r2, #120	; 0x78
   1c014:	movls	r2, #56	; 0x38
   1c018:	movhi	r1, #31
   1c01c:	movls	r1, #15
   1c020:	movhi	lr, #30
   1c024:	movls	lr, #14
   1c028:	cmp	r0, r3
   1c02c:	add	lr, r4, lr, lsl #2
   1c030:	ldrhi	ip, [r4, #20]
   1c034:	ldrls	r7, [r4, #20]
   1c038:	addhi	r7, ip, #1
   1c03c:	add	r1, r4, r1, lsl #2
   1c040:	lsr	ip, r3, #29
   1c044:	strhi	r7, [r4, #20]
   1c048:	str	r3, [r4, #16]
   1c04c:	orr	ip, ip, r7, lsl #3
   1c050:	lsl	r3, r3, #3
   1c054:	add	r7, r4, #28
   1c058:	str	r3, [lr, #28]
   1c05c:	sub	r2, r2, r0
   1c060:	str	ip, [r1, #28]
   1c064:	add	r0, r7, r0
   1c068:	ldr	r1, [pc, #56]	; 1c0a8 <__assert_fail@plt+0xadbc>
   1c06c:	bl	11058 <memcpy@plt>
   1c070:	mov	r0, r7
   1c074:	mov	r2, r4
   1c078:	mov	r1, r6
   1c07c:	bl	1b574 <__assert_fail@plt+0xa288>
   1c080:	ldr	r3, [r4]
   1c084:	mov	r0, r5
   1c088:	str	r3, [r5]
   1c08c:	ldr	r3, [r4, #4]
   1c090:	str	r3, [r5, #4]
   1c094:	ldr	r3, [r4, #8]
   1c098:	str	r3, [r5, #8]
   1c09c:	ldr	r3, [r4, #12]
   1c0a0:	str	r3, [r5, #12]
   1c0a4:	pop	{r4, r5, r6, r7, r8, pc}
   1c0a8:	andeq	r1, r4, ip, ror #11
   1c0ac:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1c0b0:	mov	r6, r2
   1c0b4:	ldr	r4, [r2, #24]
   1c0b8:	mov	r8, r0
   1c0bc:	cmp	r4, #0
   1c0c0:	mov	r5, r1
   1c0c4:	bne	1c1b4 <__assert_fail@plt+0xaec8>
   1c0c8:	cmp	r5, #63	; 0x3f
   1c0cc:	bls	1c1a4 <__assert_fail@plt+0xaeb8>
   1c0d0:	tst	r8, #3
   1c0d4:	beq	1c188 <__assert_fail@plt+0xae9c>
   1c0d8:	cmp	r5, #64	; 0x40
   1c0dc:	add	r7, r6, #28
   1c0e0:	beq	1c160 <__assert_fail@plt+0xae74>
   1c0e4:	mov	sl, r5
   1c0e8:	mov	r4, r8
   1c0ec:	mov	r9, #64	; 0x40
   1c0f0:	add	r2, r4, #64	; 0x40
   1c0f4:	mov	r3, r7
   1c0f8:	ldr	lr, [r4]
   1c0fc:	ldr	ip, [r4, #4]
   1c100:	ldr	r0, [r4, #8]
   1c104:	ldr	r1, [r4, #12]
   1c108:	add	r4, r4, #16
   1c10c:	cmp	r4, r2
   1c110:	str	lr, [r3]
   1c114:	str	ip, [r3, #4]
   1c118:	str	r0, [r3, #8]
   1c11c:	str	r1, [r3, #12]
   1c120:	add	r3, r3, #16
   1c124:	bne	1c0f8 <__assert_fail@plt+0xae0c>
   1c128:	sub	sl, sl, #64	; 0x40
   1c12c:	mov	r2, r6
   1c130:	mov	r1, r9
   1c134:	mov	r0, r7
   1c138:	bl	1b574 <__assert_fail@plt+0xa288>
   1c13c:	cmp	sl, #64	; 0x40
   1c140:	bhi	1c0f0 <__assert_fail@plt+0xae04>
   1c144:	sub	r3, r5, #65	; 0x41
   1c148:	bic	r2, r3, #63	; 0x3f
   1c14c:	mov	r3, r2
   1c150:	sub	r5, r5, #64	; 0x40
   1c154:	add	r2, r2, #64	; 0x40
   1c158:	sub	r5, r5, r3
   1c15c:	add	r8, r8, r2
   1c160:	ldr	r4, [r6, #24]
   1c164:	mov	r1, r8
   1c168:	add	r0, r7, r4
   1c16c:	mov	r2, r5
   1c170:	add	r4, r4, r5
   1c174:	bl	11058 <memcpy@plt>
   1c178:	cmp	r4, #63	; 0x3f
   1c17c:	bhi	1c1f4 <__assert_fail@plt+0xaf08>
   1c180:	str	r4, [r6, #24]
   1c184:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1c188:	bic	r4, r5, #63	; 0x3f
   1c18c:	mov	r0, r8
   1c190:	mov	r1, r4
   1c194:	mov	r2, r6
   1c198:	bl	1b574 <__assert_fail@plt+0xa288>
   1c19c:	and	r5, r5, #63	; 0x3f
   1c1a0:	add	r8, r8, r4
   1c1a4:	cmp	r5, #0
   1c1a8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1c1ac:	add	r7, r6, #28
   1c1b0:	b	1c160 <__assert_fail@plt+0xae74>
   1c1b4:	rsb	r7, r4, #128	; 0x80
   1c1b8:	cmp	r7, r1
   1c1bc:	movcs	r7, r1
   1c1c0:	add	r9, r2, #28
   1c1c4:	mov	r1, r8
   1c1c8:	mov	r2, r7
   1c1cc:	add	r0, r9, r4
   1c1d0:	bl	11058 <memcpy@plt>
   1c1d4:	ldr	r1, [r6, #24]
   1c1d8:	add	r1, r7, r1
   1c1dc:	cmp	r1, #64	; 0x40
   1c1e0:	str	r1, [r6, #24]
   1c1e4:	bhi	1c220 <__assert_fail@plt+0xaf34>
   1c1e8:	add	r8, r8, r7
   1c1ec:	sub	r5, r5, r7
   1c1f0:	b	1c0c8 <__assert_fail@plt+0xaddc>
   1c1f4:	sub	r4, r4, #64	; 0x40
   1c1f8:	mov	r2, r6
   1c1fc:	mov	r1, #64	; 0x40
   1c200:	mov	r0, r7
   1c204:	bl	1b574 <__assert_fail@plt+0xa288>
   1c208:	mov	r0, r7
   1c20c:	mov	r2, r4
   1c210:	add	r1, r6, #92	; 0x5c
   1c214:	bl	11058 <memcpy@plt>
   1c218:	str	r4, [r6, #24]
   1c21c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1c220:	mov	r2, r6
   1c224:	mov	r0, r9
   1c228:	bic	r1, r1, #63	; 0x3f
   1c22c:	bl	1b574 <__assert_fail@plt+0xa288>
   1c230:	ldr	r2, [r6, #24]
   1c234:	add	r1, r4, r7
   1c238:	and	r2, r2, #63	; 0x3f
   1c23c:	bic	r1, r1, #63	; 0x3f
   1c240:	add	r1, r9, r1
   1c244:	mov	r0, r9
   1c248:	str	r2, [r6, #24]
   1c24c:	bl	11058 <memcpy@plt>
   1c250:	b	1c1e8 <__assert_fail@plt+0xaefc>
   1c254:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c258:	mov	r5, r1
   1c25c:	sub	sp, sp, #164	; 0xa4
   1c260:	ldr	lr, [pc, #640]	; 1c4e8 <__assert_fail@plt+0xb1fc>
   1c264:	ldr	ip, [pc, #640]	; 1c4ec <__assert_fail@plt+0xb200>
   1c268:	ldr	r1, [pc, #640]	; 1c4f0 <__assert_fail@plt+0xb204>
   1c26c:	ldr	r3, [pc, #640]	; 1c4f4 <__assert_fail@plt+0xb208>
   1c270:	mov	r4, #0
   1c274:	cmp	r5, #63	; 0x3f
   1c278:	mov	r7, r2
   1c27c:	str	lr, [sp, #4]
   1c280:	str	ip, [sp, #8]
   1c284:	str	r1, [sp, #12]
   1c288:	str	r3, [sp, #16]
   1c28c:	str	r4, [sp, #24]
   1c290:	str	r4, [sp, #20]
   1c294:	str	r4, [sp, #28]
   1c298:	mov	sl, r0
   1c29c:	bls	1c394 <__assert_fail@plt+0xb0a8>
   1c2a0:	tst	r0, #3
   1c2a4:	beq	1c41c <__assert_fail@plt+0xb130>
   1c2a8:	cmp	r5, #64	; 0x40
   1c2ac:	beq	1c464 <__assert_fail@plt+0xb178>
   1c2b0:	mov	r9, r5
   1c2b4:	mov	r4, r0
   1c2b8:	add	r6, sp, #32
   1c2bc:	add	r8, sp, #4
   1c2c0:	add	fp, r4, #64	; 0x40
   1c2c4:	mov	lr, r6
   1c2c8:	ldr	r0, [r4]
   1c2cc:	ldr	r1, [r4, #4]
   1c2d0:	ldr	r2, [r4, #8]
   1c2d4:	ldr	r3, [r4, #12]
   1c2d8:	mov	ip, lr
   1c2dc:	add	r4, r4, #16
   1c2e0:	cmp	r4, fp
   1c2e4:	stmia	ip!, {r0, r1, r2, r3}
   1c2e8:	mov	lr, ip
   1c2ec:	bne	1c2c8 <__assert_fail@plt+0xafdc>
   1c2f0:	sub	r9, r9, #64	; 0x40
   1c2f4:	mov	r2, r8
   1c2f8:	mov	r1, #64	; 0x40
   1c2fc:	mov	r0, r6
   1c300:	bl	1b574 <__assert_fail@plt+0xa288>
   1c304:	cmp	r9, #64	; 0x40
   1c308:	bhi	1c2c0 <__assert_fail@plt+0xafd4>
   1c30c:	sub	r2, r5, #65	; 0x41
   1c310:	bic	r1, r2, #63	; 0x3f
   1c314:	mov	r2, r1
   1c318:	sub	r5, r5, #64	; 0x40
   1c31c:	add	r1, r1, #64	; 0x40
   1c320:	sub	r2, r5, r2
   1c324:	add	r1, sl, r1
   1c328:	ldr	r5, [sp, #28]
   1c32c:	add	r0, r6, r5
   1c330:	add	r5, r2, r5
   1c334:	bl	11058 <memcpy@plt>
   1c338:	cmp	r5, #63	; 0x3f
   1c33c:	bhi	1c49c <__assert_fail@plt+0xb1b0>
   1c340:	ldr	sl, [sp, #20]
   1c344:	ldr	r4, [sp, #24]
   1c348:	add	sl, r5, sl
   1c34c:	add	r0, r6, r5
   1c350:	lsl	lr, sl, #3
   1c354:	lsr	r1, sl, #29
   1c358:	str	r5, [sp, #28]
   1c35c:	cmp	r5, #55	; 0x37
   1c360:	movhi	r9, #128	; 0x80
   1c364:	movls	r9, #64	; 0x40
   1c368:	movhi	r2, #120	; 0x78
   1c36c:	movls	r2, #56	; 0x38
   1c370:	movhi	ip, #31
   1c374:	movls	ip, #15
   1c378:	movhi	r3, #30
   1c37c:	movls	r3, #14
   1c380:	cmp	sl, r5
   1c384:	str	sl, [sp, #20]
   1c388:	addcc	r4, r4, #1
   1c38c:	strcc	r4, [sp, #24]
   1c390:	b	1c3c8 <__assert_fail@plt+0xb0dc>
   1c394:	cmp	r5, #0
   1c398:	bne	1c4c8 <__assert_fail@plt+0xb1dc>
   1c39c:	add	r6, sp, #32
   1c3a0:	mov	r0, r6
   1c3a4:	mov	r9, #64	; 0x40
   1c3a8:	mov	r2, #56	; 0x38
   1c3ac:	mov	r1, r5
   1c3b0:	mov	lr, r5
   1c3b4:	mov	ip, #15
   1c3b8:	mov	r3, #14
   1c3bc:	mov	r4, r5
   1c3c0:	add	r8, sp, #4
   1c3c4:	str	r5, [sp, #20]
   1c3c8:	add	sl, sp, #160	; 0xa0
   1c3cc:	add	r3, sl, r3, lsl #2
   1c3d0:	add	ip, sl, ip, lsl #2
   1c3d4:	orr	r4, r1, r4, lsl #3
   1c3d8:	sub	r2, r2, r5
   1c3dc:	ldr	r1, [pc, #276]	; 1c4f8 <__assert_fail@plt+0xb20c>
   1c3e0:	str	lr, [r3, #-128]	; 0xffffff80
   1c3e4:	str	r4, [ip, #-128]	; 0xffffff80
   1c3e8:	bl	11058 <memcpy@plt>
   1c3ec:	mov	r2, r8
   1c3f0:	mov	r1, r9
   1c3f4:	mov	r0, r6
   1c3f8:	bl	1b574 <__assert_fail@plt+0xa288>
   1c3fc:	ldmib	sp, {r0, r1, r2, r3}
   1c400:	str	r0, [r7]
   1c404:	str	r1, [r7, #4]
   1c408:	mov	r0, r7
   1c40c:	str	r2, [r7, #8]
   1c410:	str	r3, [r7, #12]
   1c414:	add	sp, sp, #164	; 0xa4
   1c418:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c41c:	bic	r4, r5, #63	; 0x3f
   1c420:	add	r8, sp, #4
   1c424:	mov	r1, r4
   1c428:	mov	r2, r8
   1c42c:	bl	1b574 <__assert_fail@plt+0xa288>
   1c430:	ands	r2, r5, #63	; 0x3f
   1c434:	addne	r1, sl, r4
   1c438:	addne	r6, sp, #32
   1c43c:	bne	1c328 <__assert_fail@plt+0xb03c>
   1c440:	ldr	r5, [sp, #28]
   1c444:	ldr	sl, [sp, #20]
   1c448:	add	r6, sp, #32
   1c44c:	add	sl, r5, sl
   1c450:	add	r0, r6, r5
   1c454:	lsl	lr, sl, #3
   1c458:	lsr	r1, sl, #29
   1c45c:	ldr	r4, [sp, #24]
   1c460:	b	1c35c <__assert_fail@plt+0xb070>
   1c464:	add	r6, sp, #32
   1c468:	add	r4, r0, #64	; 0x40
   1c46c:	mov	lr, r6
   1c470:	ldr	r0, [sl]
   1c474:	ldr	r1, [sl, #4]
   1c478:	ldr	r2, [sl, #8]
   1c47c:	ldr	r3, [sl, #12]
   1c480:	mov	ip, lr
   1c484:	add	sl, sl, #16
   1c488:	cmp	sl, r4
   1c48c:	stmia	ip!, {r0, r1, r2, r3}
   1c490:	mov	lr, ip
   1c494:	bne	1c470 <__assert_fail@plt+0xb184>
   1c498:	add	r8, sp, #4
   1c49c:	mov	r2, r8
   1c4a0:	mov	r0, r6
   1c4a4:	sub	r5, r5, #64	; 0x40
   1c4a8:	mov	r1, #64	; 0x40
   1c4ac:	bl	1b574 <__assert_fail@plt+0xa288>
   1c4b0:	mov	r2, r5
   1c4b4:	mov	r3, #128	; 0x80
   1c4b8:	add	r1, sp, #96	; 0x60
   1c4bc:	mov	r0, r6
   1c4c0:	bl	110d0 <__memcpy_chk@plt>
   1c4c4:	b	1c340 <__assert_fail@plt+0xb054>
   1c4c8:	add	r6, sp, #32
   1c4cc:	mov	r1, sl
   1c4d0:	mov	r0, r6
   1c4d4:	mov	r2, r5
   1c4d8:	bl	11058 <memcpy@plt>
   1c4dc:	mov	sl, r4
   1c4e0:	add	r8, sp, #4
   1c4e4:	b	1c348 <__assert_fail@plt+0xb05c>
   1c4e8:	strbvs	r2, [r5, -r1, lsl #6]
   1c4ec:	svc	0x00cdab89
   1c4f0:	ldmls	sl!, {r1, r2, r3, r4, r5, r6, r7, sl, fp, ip, lr, pc}
   1c4f4:	eorsne	r5, r2, r6, ror r4
   1c4f8:	andeq	r1, r4, ip, ror #11
   1c4fc:	push	{r4, r5, r6, r7, r8, r9, lr}
   1c500:	mov	r5, r0
   1c504:	sub	sp, sp, #164	; 0xa4
   1c508:	ldr	r0, [pc, #200]	; 1c5d8 <__assert_fail@plt+0xb2ec>
   1c50c:	mov	r8, r1
   1c510:	bl	3d47c <__assert_fail@plt+0x2c190>
   1c514:	subs	r6, r0, #0
   1c518:	moveq	r0, #1
   1c51c:	beq	1c58c <__assert_fail@plt+0xb2a0>
   1c520:	mov	r0, sp
   1c524:	bl	1c5dc <__assert_fail@plt+0xb2f0>
   1c528:	mov	r7, #1
   1c52c:	mov	r9, #32768	; 0x8000
   1c530:	mov	r4, #0
   1c534:	b	1c550 <__assert_fail@plt+0xb264>
   1c538:	bl	112b0 <fread_unlocked@plt>
   1c53c:	add	r4, r4, r0
   1c540:	cmp	r4, #32768	; 0x8000
   1c544:	beq	1c594 <__assert_fail@plt+0xb2a8>
   1c548:	cmp	r0, #0
   1c54c:	beq	1c5a8 <__assert_fail@plt+0xb2bc>
   1c550:	ldr	ip, [r5]
   1c554:	rsb	r2, r4, #32768	; 0x8000
   1c558:	tst	ip, #16
   1c55c:	add	r0, r6, r4
   1c560:	mov	r3, r5
   1c564:	mov	r1, r7
   1c568:	beq	1c538 <__assert_fail@plt+0xb24c>
   1c56c:	cmp	r4, #0
   1c570:	bne	1c5c4 <__assert_fail@plt+0xb2d8>
   1c574:	mov	r1, r8
   1c578:	mov	r0, sp
   1c57c:	bl	1dcac <__assert_fail@plt+0xc9c0>
   1c580:	mov	r0, r6
   1c584:	bl	3618c <__assert_fail@plt+0x24ea0>
   1c588:	mov	r0, #0
   1c58c:	add	sp, sp, #164	; 0xa4
   1c590:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1c594:	mov	r2, sp
   1c598:	mov	r1, r9
   1c59c:	mov	r0, r6
   1c5a0:	bl	1c674 <__assert_fail@plt+0xb388>
   1c5a4:	b	1c530 <__assert_fail@plt+0xb244>
   1c5a8:	ldr	r3, [r5]
   1c5ac:	tst	r3, #32
   1c5b0:	beq	1c56c <__assert_fail@plt+0xb280>
   1c5b4:	mov	r0, r6
   1c5b8:	bl	3618c <__assert_fail@plt+0x24ea0>
   1c5bc:	mov	r0, #1
   1c5c0:	b	1c58c <__assert_fail@plt+0xb2a0>
   1c5c4:	mov	r1, r4
   1c5c8:	mov	r2, sp
   1c5cc:	mov	r0, r6
   1c5d0:	bl	1dd90 <__assert_fail@plt+0xcaa4>
   1c5d4:	b	1c574 <__assert_fail@plt+0xb288>
   1c5d8:	andeq	r8, r0, r8, asr #32
   1c5dc:	push	{r4, lr}
   1c5e0:	mov	r3, #0
   1c5e4:	ldr	r4, [pc, #44]	; 1c618 <__assert_fail@plt+0xb32c>
   1c5e8:	ldr	lr, [pc, #44]	; 1c61c <__assert_fail@plt+0xb330>
   1c5ec:	ldr	ip, [pc, #44]	; 1c620 <__assert_fail@plt+0xb334>
   1c5f0:	ldr	r1, [pc, #44]	; 1c624 <__assert_fail@plt+0xb338>
   1c5f4:	ldr	r2, [pc, #44]	; 1c628 <__assert_fail@plt+0xb33c>
   1c5f8:	stm	r0, {r4, lr}
   1c5fc:	str	ip, [r0, #8]
   1c600:	str	r1, [r0, #12]
   1c604:	str	r2, [r0, #16]
   1c608:	str	r3, [r0, #24]
   1c60c:	str	r3, [r0, #20]
   1c610:	str	r3, [r0, #28]
   1c614:	pop	{r4, pc}
   1c618:	strbvs	r2, [r5, -r1, lsl #6]
   1c61c:	svc	0x00cdab89
   1c620:	ldmls	sl!, {r1, r2, r3, r4, r5, r6, r7, sl, fp, ip, lr, pc}
   1c624:	eorsne	r5, r2, r6, ror r4
   1c628:	bicsgt	lr, r2, #240, 2	; 0x3c
   1c62c:	ldr	r2, [r0]
   1c630:	mov	r3, r0
   1c634:	rev	r2, r2
   1c638:	str	r2, [r1]
   1c63c:	ldr	r2, [r3, #4]
   1c640:	mov	r0, r1
   1c644:	rev	r2, r2
   1c648:	str	r2, [r1, #4]
   1c64c:	ldr	r2, [r3, #8]
   1c650:	rev	r2, r2
   1c654:	str	r2, [r1, #8]
   1c658:	ldr	r2, [r3, #12]
   1c65c:	rev	r2, r2
   1c660:	str	r2, [r1, #12]
   1c664:	ldr	r3, [r3, #16]
   1c668:	rev	r3, r3
   1c66c:	str	r3, [r1, #16]
   1c670:	bx	lr
   1c674:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c678:	sub	sp, sp, #100	; 0x64
   1c67c:	ldr	r3, [r2, #20]
   1c680:	mov	lr, r2
   1c684:	str	r2, [sp, #92]	; 0x5c
   1c688:	ldr	r2, [r2, #24]
   1c68c:	add	r3, r1, r3
   1c690:	cmp	r1, r3
   1c694:	addhi	r2, r2, #1
   1c698:	bic	ip, r1, #3
   1c69c:	add	ip, r0, ip
   1c6a0:	mov	r1, lr
   1c6a4:	str	r2, [lr, #24]
   1c6a8:	mov	r2, lr
   1c6ac:	cmp	r0, ip
   1c6b0:	str	ip, [sp, #88]	; 0x58
   1c6b4:	str	r3, [lr, #20]
   1c6b8:	ldr	r5, [r2, #8]
   1c6bc:	ldr	ip, [r2, #12]
   1c6c0:	ldr	lr, [lr]
   1c6c4:	ldr	r1, [r1, #4]
   1c6c8:	ldr	r2, [r2, #16]
   1c6cc:	bcs	1dca4 <__assert_fail@plt+0xc9b8>
   1c6d0:	str	r0, [sp, #44]	; 0x2c
   1c6d4:	mov	r6, ip
   1c6d8:	mov	r0, r1
   1c6dc:	str	r2, [sp, #84]	; 0x54
   1c6e0:	str	ip, [sp, #80]	; 0x50
   1c6e4:	str	r5, [sp, #76]	; 0x4c
   1c6e8:	str	r1, [sp, #72]	; 0x48
   1c6ec:	str	lr, [sp, #68]	; 0x44
   1c6f0:	ldr	fp, [sp, #44]	; 0x2c
   1c6f4:	ldr	r3, [pc, #4088]	; 1d6f4 <__assert_fail@plt+0xc408>
   1c6f8:	eor	r4, r5, r6
   1c6fc:	ldr	r9, [fp]
   1c700:	ldr	r8, [fp, #4]
   1c704:	rev	r9, r9
   1c708:	add	r3, r9, r3
   1c70c:	and	r4, r4, r0
   1c710:	add	r3, r3, lr, ror #27
   1c714:	ror	r0, r0, #2
   1c718:	eor	r4, r4, r6
   1c71c:	eor	r1, r0, r5
   1c720:	rev	r8, r8
   1c724:	add	r4, r4, r3
   1c728:	ldr	r3, [pc, #4036]	; 1d6f4 <__assert_fail@plt+0xc408>
   1c72c:	add	r6, r8, r6
   1c730:	and	r1, r1, lr
   1c734:	add	r4, r4, r2
   1c738:	ldr	sl, [fp, #8]
   1c73c:	eor	r1, r1, r5
   1c740:	add	r3, r6, r3
   1c744:	add	r3, r1, r3
   1c748:	add	r1, r3, r4, ror #27
   1c74c:	ror	lr, lr, #2
   1c750:	rev	sl, sl
   1c754:	ldr	r7, [fp, #12]
   1c758:	ldr	r3, [pc, #3988]	; 1d6f4 <__assert_fail@plt+0xc408>
   1c75c:	add	r2, sl, r5
   1c760:	eor	ip, r0, lr
   1c764:	and	ip, ip, r4
   1c768:	add	r3, r2, r3
   1c76c:	rev	r2, r7
   1c770:	mov	r7, r2
   1c774:	eor	ip, ip, r0
   1c778:	add	r3, ip, r3
   1c77c:	add	ip, r7, #1509949440	; 0x5a000000
   1c780:	ror	r4, r4, #2
   1c784:	add	ip, ip, #8519680	; 0x820000
   1c788:	eor	r2, lr, r4
   1c78c:	add	ip, ip, #30976	; 0x7900
   1c790:	add	ip, ip, #153	; 0x99
   1c794:	and	r2, r2, r1
   1c798:	ldr	r6, [fp, #16]
   1c79c:	eor	r2, r2, lr
   1c7a0:	add	r0, ip, r0
   1c7a4:	ror	r5, r1, #2
   1c7a8:	add	r0, r2, r0
   1c7ac:	ldr	r2, [pc, #3904]	; 1d6f4 <__assert_fail@plt+0xc408>
   1c7b0:	add	r3, r3, r1, ror #27
   1c7b4:	rev	r1, r6
   1c7b8:	eor	r6, r4, r5
   1c7bc:	and	ip, r6, r3
   1c7c0:	str	r1, [sp, #20]
   1c7c4:	add	r2, r1, r2
   1c7c8:	ldr	r1, [fp, #20]
   1c7cc:	add	r2, r2, lr
   1c7d0:	eor	lr, ip, r4
   1c7d4:	add	r0, r0, r3, ror #27
   1c7d8:	add	lr, lr, r2
   1c7dc:	ror	r3, r3, #2
   1c7e0:	rev	r2, r1
   1c7e4:	ldr	ip, [pc, #3848]	; 1d6f4 <__assert_fail@plt+0xc408>
   1c7e8:	str	r7, [sp, #8]
   1c7ec:	mov	r7, r2
   1c7f0:	eor	r2, r5, r3
   1c7f4:	ldr	r6, [fp, #24]
   1c7f8:	add	ip, r7, ip
   1c7fc:	and	r2, r2, r0
   1c800:	add	ip, ip, r4
   1c804:	eor	r2, r2, r5
   1c808:	ror	r1, r0, #2
   1c80c:	add	lr, lr, r0, ror #27
   1c810:	add	r2, r2, ip
   1c814:	rev	r0, r6
   1c818:	ldr	ip, [pc, #3796]	; 1d6f4 <__assert_fail@plt+0xc408>
   1c81c:	str	r7, [sp, #12]
   1c820:	mov	r7, r0
   1c824:	eor	r0, r3, r1
   1c828:	add	ip, r7, ip
   1c82c:	and	r0, r0, lr
   1c830:	eor	r0, r0, r3
   1c834:	add	r5, ip, r5
   1c838:	add	r5, r0, r5
   1c83c:	ldr	r0, [fp, #32]
   1c840:	add	r2, r2, lr, ror #27
   1c844:	ldr	r6, [fp, #28]
   1c848:	rev	r0, r0
   1c84c:	ror	r4, lr, #2
   1c850:	str	r7, [sp, #40]	; 0x28
   1c854:	ldr	ip, [pc, #3736]	; 1d6f4 <__assert_fail@plt+0xc408>
   1c858:	add	r7, r5, r2, ror #27
   1c85c:	mov	r5, r0
   1c860:	rev	r6, r6
   1c864:	eor	lr, r1, r4
   1c868:	add	r0, r5, #1509949440	; 0x5a000000
   1c86c:	and	lr, lr, r2
   1c870:	add	ip, r6, ip
   1c874:	add	r0, r0, #8519680	; 0x820000
   1c878:	ror	r2, r2, #2
   1c87c:	add	ip, ip, r3
   1c880:	add	r0, r0, #30976	; 0x7900
   1c884:	eor	r3, lr, r1
   1c888:	ldr	lr, [fp, #36]	; 0x24
   1c88c:	add	r3, r3, ip
   1c890:	add	r0, r0, #153	; 0x99
   1c894:	eor	ip, r4, r2
   1c898:	str	r5, [sp, #4]
   1c89c:	add	r0, r0, r1
   1c8a0:	ror	r5, r7, #2
   1c8a4:	rev	r1, lr
   1c8a8:	and	ip, ip, r7
   1c8ac:	add	r3, r3, r7, ror #27
   1c8b0:	str	r6, [sp, #48]	; 0x30
   1c8b4:	ldr	r7, [fp, #40]	; 0x28
   1c8b8:	mov	r6, r1
   1c8bc:	eor	ip, ip, r4
   1c8c0:	eor	r1, r2, r5
   1c8c4:	add	ip, ip, r0
   1c8c8:	and	r1, r1, r3
   1c8cc:	ror	lr, r3, #2
   1c8d0:	add	ip, ip, r3, ror #27
   1c8d4:	ldr	r0, [pc, #3608]	; 1d6f4 <__assert_fail@plt+0xc408>
   1c8d8:	eor	r3, r1, r2
   1c8dc:	rev	r1, r7
   1c8e0:	str	r1, [sp, #28]
   1c8e4:	add	r1, r1, #1509949440	; 0x5a000000
   1c8e8:	add	r0, r6, r0
   1c8ec:	add	r1, r1, #8519680	; 0x820000
   1c8f0:	add	r4, r0, r4
   1c8f4:	add	r1, r1, #30976	; 0x7900
   1c8f8:	eor	r0, r5, lr
   1c8fc:	add	r3, r3, r4
   1c900:	add	r1, r1, #153	; 0x99
   1c904:	ldr	r4, [fp, #44]	; 0x2c
   1c908:	and	r0, r0, ip
   1c90c:	add	r2, r1, r2
   1c910:	eor	r0, r0, r5
   1c914:	add	r0, r0, r2
   1c918:	rev	r2, r4
   1c91c:	mov	r7, r2
   1c920:	str	r7, [sp, #24]
   1c924:	add	r7, r7, #1509949440	; 0x5a000000
   1c928:	ldr	r2, [fp, #48]	; 0x30
   1c92c:	add	r7, r7, #8519680	; 0x820000
   1c930:	add	r3, r3, ip, ror #27
   1c934:	add	r7, r7, #30976	; 0x7900
   1c938:	ror	ip, ip, #2
   1c93c:	eor	r4, lr, ip
   1c940:	rev	r2, r2
   1c944:	add	r7, r7, #153	; 0x99
   1c948:	and	r4, r4, r3
   1c94c:	add	r7, r7, r5
   1c950:	mov	r5, r2
   1c954:	add	r1, r0, r3, ror #27
   1c958:	eor	r0, r4, lr
   1c95c:	add	r4, r5, #1509949440	; 0x5a000000
   1c960:	add	r4, r4, #8519680	; 0x820000
   1c964:	ror	r3, r3, #2
   1c968:	str	r6, [sp]
   1c96c:	add	r4, r4, #30976	; 0x7900
   1c970:	ldr	r6, [fp, #52]	; 0x34
   1c974:	eor	r2, ip, r3
   1c978:	add	r0, r0, r7
   1c97c:	add	r4, r4, #153	; 0x99
   1c980:	add	r0, r0, r1, ror #27
   1c984:	str	r5, [sp, #32]
   1c988:	and	r2, r2, r1
   1c98c:	ror	r5, r1, #2
   1c990:	add	r1, r4, lr
   1c994:	rev	lr, r6
   1c998:	ldr	r6, [pc, #3412]	; 1d6f4 <__assert_fail@plt+0xc408>
   1c99c:	eor	r4, r3, r5
   1c9a0:	eor	r2, r2, ip
   1c9a4:	add	r6, lr, r6
   1c9a8:	and	r4, r4, r0
   1c9ac:	add	ip, r6, ip
   1c9b0:	add	r1, r2, r1
   1c9b4:	eor	r4, r4, r3
   1c9b8:	ldr	r2, [fp, #56]	; 0x38
   1c9bc:	ror	r7, r0, #2
   1c9c0:	add	r1, r1, r0, ror #27
   1c9c4:	add	r4, r4, ip
   1c9c8:	ldr	fp, [fp, #60]	; 0x3c
   1c9cc:	ldr	ip, [sp, #4]
   1c9d0:	ldr	r0, [pc, #3356]	; 1d6f4 <__assert_fail@plt+0xc408>
   1c9d4:	rev	r6, r2
   1c9d8:	eor	r9, r9, sl
   1c9dc:	eor	r2, r5, r7
   1c9e0:	eor	r9, r9, ip
   1c9e4:	add	r0, r6, r0
   1c9e8:	and	r2, r2, r1
   1c9ec:	rev	fp, fp
   1c9f0:	add	r0, r0, r3
   1c9f4:	str	lr, [sp, #36]	; 0x24
   1c9f8:	eor	r9, r9, lr
   1c9fc:	eor	r2, r2, r5
   1ca00:	mov	lr, fp
   1ca04:	add	r2, r2, r0
   1ca08:	ldr	fp, [sp, #8]
   1ca0c:	add	r0, lr, #1509949440	; 0x5a000000
   1ca10:	add	r4, r4, r1, ror #27
   1ca14:	str	r6, [sp, #4]
   1ca18:	ror	r1, r1, #2
   1ca1c:	str	lr, [sp, #16]
   1ca20:	add	r0, r0, #8519680	; 0x820000
   1ca24:	ldr	lr, [sp]
   1ca28:	eor	r3, r7, r1
   1ca2c:	eor	r6, r8, fp
   1ca30:	add	r0, r0, #30976	; 0x7900
   1ca34:	and	r3, r3, r4
   1ca38:	eor	r6, r6, lr
   1ca3c:	add	r0, r0, #153	; 0x99
   1ca40:	ldr	lr, [sp, #20]
   1ca44:	add	r0, r0, r5
   1ca48:	eor	r3, r3, r7
   1ca4c:	eor	r5, sl, lr
   1ca50:	add	r3, r3, r0
   1ca54:	ldr	sl, [sp, #4]
   1ca58:	ldr	r0, [pc, #3220]	; 1d6f4 <__assert_fail@plt+0xc408>
   1ca5c:	ror	r9, r9, #31
   1ca60:	eor	r6, r6, sl
   1ca64:	add	r0, r9, r0
   1ca68:	mov	sl, r9
   1ca6c:	ldr	r9, [sp, #28]
   1ca70:	ror	r8, r4, #2
   1ca74:	eor	r5, r5, r9
   1ca78:	mov	r9, fp
   1ca7c:	ldr	fp, [sp, #12]
   1ca80:	add	r2, r2, r4, ror #27
   1ca84:	add	r0, r0, r7
   1ca88:	eor	r4, r1, r8
   1ca8c:	eor	r7, r9, fp
   1ca90:	ldr	fp, [sp, #16]
   1ca94:	and	r4, r4, r2
   1ca98:	add	r3, r3, r2, ror #27
   1ca9c:	eor	r4, r4, r1
   1caa0:	ror	r2, r2, #2
   1caa4:	eor	r5, r5, fp
   1caa8:	ldr	r9, [pc, #3140]	; 1d6f4 <__assert_fail@plt+0xc408>
   1caac:	ldr	fp, [sp, #24]
   1cab0:	ror	r6, r6, #31
   1cab4:	add	r4, r4, r0
   1cab8:	eor	r0, r8, r2
   1cabc:	str	r6, [sp, #24]
   1cac0:	add	r9, r6, r9
   1cac4:	eor	r7, r7, fp
   1cac8:	ldr	r6, [sp, #40]	; 0x28
   1cacc:	and	r0, r0, r3
   1cad0:	ror	r5, r5, #31
   1cad4:	str	sl, [sp, #20]
   1cad8:	eor	r7, r7, sl
   1cadc:	eor	r0, r0, r8
   1cae0:	mov	sl, r5
   1cae4:	add	r5, r9, r1
   1cae8:	str	sl, [sp, #8]
   1caec:	eor	r6, lr, r6
   1caf0:	add	r0, r0, r5
   1caf4:	ldr	lr, [sp, #32]
   1caf8:	mov	r5, sl
   1cafc:	ldr	sl, [pc, #3056]	; 1d6f4 <__assert_fail@plt+0xc408>
   1cb00:	eor	r6, r6, lr
   1cb04:	add	sl, r5, sl
   1cb08:	ldr	lr, [sp, #48]	; 0x30
   1cb0c:	ldr	r5, [sp, #12]
   1cb10:	ror	r7, r7, #31
   1cb14:	eor	r5, r5, lr
   1cb18:	mov	lr, r7
   1cb1c:	ldr	r7, [sp, #24]
   1cb20:	add	r4, r4, r3, ror #27
   1cb24:	ror	r3, r3, #2
   1cb28:	eor	r1, r2, r3
   1cb2c:	eor	r6, r6, r7
   1cb30:	and	r1, r1, r4
   1cb34:	add	sl, sl, r8
   1cb38:	eor	r7, r1, r2
   1cb3c:	ror	r6, r6, #31
   1cb40:	ldr	r1, [sp, #36]	; 0x24
   1cb44:	add	r7, r7, sl
   1cb48:	mov	sl, r6
   1cb4c:	ldr	r6, [sp, #8]
   1cb50:	ror	r9, r4, #2
   1cb54:	add	r0, r0, r4, ror #27
   1cb58:	eor	r5, r5, r1
   1cb5c:	ldr	r4, [sp, #40]	; 0x28
   1cb60:	add	r1, lr, #1509949440	; 0x5a000000
   1cb64:	eor	r5, r5, r6
   1cb68:	ldr	r6, [sp, #4]
   1cb6c:	eor	r4, r4, ip
   1cb70:	add	r1, r1, #8519680	; 0x820000
   1cb74:	eor	r8, r3, r9
   1cb78:	eor	r4, r4, r6
   1cb7c:	add	r1, r1, #30976	; 0x7900
   1cb80:	ldr	r6, [pc, #2928]	; 1d6f8 <__assert_fail@plt+0xc40c>
   1cb84:	and	r8, r8, r0
   1cb88:	add	r1, r1, #153	; 0x99
   1cb8c:	add	r2, r1, r2
   1cb90:	str	sl, [sp, #12]
   1cb94:	eor	r1, r8, r3
   1cb98:	add	r6, sl, r6
   1cb9c:	ldr	r8, [sp]
   1cba0:	ldr	sl, [sp, #48]	; 0x30
   1cba4:	ror	r5, r5, #31
   1cba8:	add	r7, r7, r0, ror #27
   1cbac:	eor	r8, sl, r8
   1cbb0:	ror	r0, r0, #2
   1cbb4:	mov	sl, r5
   1cbb8:	ldr	r5, [sp, #16]
   1cbbc:	add	r1, r1, r2
   1cbc0:	eor	r4, r4, lr
   1cbc4:	eor	r2, r9, r0
   1cbc8:	add	r1, r1, r7, ror #27
   1cbcc:	add	r3, r6, r3
   1cbd0:	eor	r6, r2, r7
   1cbd4:	ror	r2, r7, #2
   1cbd8:	eor	r7, r8, r5
   1cbdc:	ldr	r8, [sp, #28]
   1cbe0:	ror	r4, r4, #31
   1cbe4:	eor	r8, ip, r8
   1cbe8:	ldr	r5, [pc, #2824]	; 1d6f8 <__assert_fail@plt+0xc40c>
   1cbec:	mov	ip, r4
   1cbf0:	ldr	r4, [sp, #12]
   1cbf4:	add	r5, sl, r5
   1cbf8:	add	r6, r6, r3
   1cbfc:	eor	r7, r7, r4
   1cc00:	eor	r3, r0, r2
   1cc04:	add	r4, ip, #1845493760	; 0x6e000000
   1cc08:	add	r6, r6, r1, ror #27
   1cc0c:	add	r9, r5, r9
   1cc10:	add	r4, r4, #14221312	; 0xd90000
   1cc14:	eor	r5, r3, r1
   1cc18:	ror	r3, r1, #2
   1cc1c:	ldr	r1, [sp, #20]
   1cc20:	add	r4, r4, #60160	; 0xeb00
   1cc24:	eor	r8, r8, r1
   1cc28:	add	r4, r4, #161	; 0xa1
   1cc2c:	eor	r1, r2, r3
   1cc30:	ror	r7, r7, #31
   1cc34:	add	r0, r4, r0
   1cc38:	eor	r4, r1, r6
   1cc3c:	add	r0, r4, r0
   1cc40:	add	r5, r5, r9
   1cc44:	ldr	r9, [sp]
   1cc48:	str	r7, [sp]
   1cc4c:	eor	r8, r8, sl
   1cc50:	ldr	r7, [sp, #24]
   1cc54:	str	r0, [sp, #40]	; 0x28
   1cc58:	ldr	r0, [sp]
   1cc5c:	eor	r9, r9, fp
   1cc60:	eor	r9, r9, r7
   1cc64:	ror	r8, r8, #31
   1cc68:	add	r0, r0, #1845493760	; 0x6e000000
   1cc6c:	add	r5, r5, r6, ror #27
   1cc70:	ldr	r7, [sp, #28]
   1cc74:	eor	r9, r9, ip
   1cc78:	ldr	r4, [sp, #32]
   1cc7c:	add	r0, r0, #14221312	; 0xd90000
   1cc80:	str	ip, [sp, #28]
   1cc84:	mov	ip, r8
   1cc88:	ldr	r8, [sp, #40]	; 0x28
   1cc8c:	ror	r6, r6, #2
   1cc90:	add	r0, r0, #60160	; 0xeb00
   1cc94:	eor	r1, r3, r6
   1cc98:	add	r0, r0, #161	; 0xa1
   1cc9c:	eor	r7, r7, r4
   1cca0:	add	r4, r8, r5, ror #27
   1cca4:	ldr	r8, [sp, #8]
   1cca8:	add	r2, r0, r2
   1ccac:	eor	r0, r1, r5
   1ccb0:	eor	r7, r7, r8
   1ccb4:	add	r0, r0, r2
   1ccb8:	ldr	r8, [sp, #36]	; 0x24
   1ccbc:	add	r2, ip, #1845493760	; 0x6e000000
   1ccc0:	ror	r9, r9, #31
   1ccc4:	add	r2, r2, #14221312	; 0xd90000
   1ccc8:	ror	r5, r5, #2
   1cccc:	eor	r8, fp, r8
   1ccd0:	add	r2, r2, #60160	; 0xeb00
   1ccd4:	mov	fp, r9
   1ccd8:	ldr	r9, [sp]
   1ccdc:	eor	r1, r6, r5
   1cce0:	add	r2, r2, #161	; 0xa1
   1cce4:	add	r3, r2, r3
   1cce8:	str	lr, [sp, #48]	; 0x30
   1ccec:	eor	r2, r1, r4
   1ccf0:	eor	r7, r7, r9
   1ccf4:	ldr	r1, [sp, #4]
   1ccf8:	eor	r8, r8, lr
   1ccfc:	add	r9, fp, #1845493760	; 0x6e000000
   1cd00:	mov	lr, fp
   1cd04:	ldr	fp, [sp, #32]
   1cd08:	str	ip, [sp, #56]	; 0x38
   1cd0c:	eor	r8, r8, ip
   1cd10:	ldr	ip, [sp, #12]
   1cd14:	eor	r1, fp, r1
   1cd18:	add	r9, r9, #14221312	; 0xd90000
   1cd1c:	ror	r7, r7, #31
   1cd20:	eor	r1, r1, ip
   1cd24:	add	r9, r9, #60160	; 0xeb00
   1cd28:	mov	fp, r7
   1cd2c:	add	r0, r0, r4, ror #27
   1cd30:	add	r9, r9, #161	; 0xa1
   1cd34:	ror	r4, r4, #2
   1cd38:	eor	r1, r1, lr
   1cd3c:	ldr	r7, [pc, #2484]	; 1d6f8 <__assert_fail@plt+0xc40c>
   1cd40:	add	r6, r9, r6
   1cd44:	add	r2, r2, r3
   1cd48:	ror	r9, r8, #31
   1cd4c:	eor	r3, r5, r4
   1cd50:	ldr	r8, [sp, #16]
   1cd54:	str	lr, [sp, #32]
   1cd58:	ldr	lr, [sp, #36]	; 0x24
   1cd5c:	add	r2, r2, r0, ror #27
   1cd60:	add	r7, fp, r7
   1cd64:	eor	r3, r3, r0
   1cd68:	ror	r1, r1, #31
   1cd6c:	ror	r0, r0, #2
   1cd70:	add	r5, r7, r5
   1cd74:	ldr	ip, [sp, #4]
   1cd78:	mov	r7, r1
   1cd7c:	add	r3, r3, r6
   1cd80:	ldr	r1, [sp, #20]
   1cd84:	eor	r6, r4, r0
   1cd88:	eor	lr, lr, r8
   1cd8c:	ldr	r8, [pc, #2404]	; 1d6f8 <__assert_fail@plt+0xc40c>
   1cd90:	add	r3, r3, r2, ror #27
   1cd94:	eor	r6, r6, r2
   1cd98:	ror	r2, r2, #2
   1cd9c:	add	r8, r9, r8
   1cda0:	add	r6, r6, r5
   1cda4:	eor	ip, ip, r1
   1cda8:	eor	r5, r0, r2
   1cdac:	ldr	r1, [sp, #28]
   1cdb0:	eor	r5, r5, r3
   1cdb4:	eor	lr, lr, sl
   1cdb8:	add	r4, r8, r4
   1cdbc:	eor	lr, lr, fp
   1cdc0:	str	r7, [sp, #36]	; 0x24
   1cdc4:	eor	ip, ip, r1
   1cdc8:	add	r4, r5, r4
   1cdcc:	mov	r5, r7
   1cdd0:	ldr	r7, [pc, #2336]	; 1d6f8 <__assert_fail@plt+0xc40c>
   1cdd4:	eor	ip, ip, r9
   1cdd8:	add	r6, r6, r3, ror #27
   1cddc:	add	r7, r5, r7
   1cde0:	ror	r3, r3, #2
   1cde4:	ror	r5, lr, #31
   1cde8:	ldr	r8, [sp, #24]
   1cdec:	str	fp, [sp, #60]	; 0x3c
   1cdf0:	ldr	fp, [sp, #16]
   1cdf4:	str	r5, [sp, #4]
   1cdf8:	eor	r1, r2, r3
   1cdfc:	add	r0, r7, r0
   1ce00:	ldr	r5, [sp]
   1ce04:	ror	r7, ip, #31
   1ce08:	str	r7, [sp, #16]
   1ce0c:	eor	fp, fp, r8
   1ce10:	ldr	r7, [sp, #36]	; 0x24
   1ce14:	eor	r1, r1, r6
   1ce18:	eor	fp, fp, r5
   1ce1c:	add	r1, r1, r0
   1ce20:	ldr	r5, [sp, #8]
   1ce24:	ldr	r0, [sp, #4]
   1ce28:	ldr	ip, [sp, #20]
   1ce2c:	ldr	lr, [pc, #2244]	; 1d6f8 <__assert_fail@plt+0xc40c>
   1ce30:	eor	fp, fp, r7
   1ce34:	ldr	r7, [sp, #56]	; 0x38
   1ce38:	add	r4, r4, r6, ror #27
   1ce3c:	add	lr, r0, lr
   1ce40:	ror	r6, r6, #2
   1ce44:	eor	ip, ip, r5
   1ce48:	eor	r0, r3, r6
   1ce4c:	add	r2, lr, r2
   1ce50:	eor	ip, ip, r7
   1ce54:	ldr	lr, [sp, #4]
   1ce58:	ldr	r7, [sp, #48]	; 0x30
   1ce5c:	eor	r0, r0, r4
   1ce60:	eor	ip, ip, lr
   1ce64:	add	r0, r0, r2
   1ce68:	eor	r7, r8, r7
   1ce6c:	ldr	r2, [sp, #16]
   1ce70:	ldr	r8, [sp, #32]
   1ce74:	ldr	r5, [pc, #2172]	; 1d6f8 <__assert_fail@plt+0xc40c>
   1ce78:	eor	r7, r7, r8
   1ce7c:	ror	r8, ip, #31
   1ce80:	mov	ip, r8
   1ce84:	ldr	r8, [sp, #16]
   1ce88:	add	r5, r2, r5
   1ce8c:	add	r3, r5, r3
   1ce90:	eor	r7, r7, r8
   1ce94:	ldr	r5, [sp, #8]
   1ce98:	ldr	r8, [sp, #12]
   1ce9c:	add	r1, r1, r4, ror #27
   1cea0:	ror	r4, r4, #2
   1cea4:	eor	r2, r6, r4
   1cea8:	eor	r5, r5, r8
   1ceac:	ldr	lr, [pc, #2116]	; 1d6f8 <__assert_fail@plt+0xc40c>
   1ceb0:	ldr	r8, [sp, #60]	; 0x3c
   1ceb4:	ror	fp, fp, #31
   1ceb8:	add	r0, r0, r1, ror #27
   1cebc:	eor	r2, r2, r1
   1cec0:	ror	r1, r1, #2
   1cec4:	add	lr, fp, lr
   1cec8:	add	r2, r2, r3
   1cecc:	eor	r5, r5, r8
   1ced0:	eor	r3, r4, r1
   1ced4:	ldr	r8, [pc, #2076]	; 1d6f8 <__assert_fail@plt+0xc40c>
   1ced8:	add	r2, r2, r0, ror #27
   1cedc:	eor	r3, r3, r0
   1cee0:	add	r6, lr, r6
   1cee4:	ror	r0, r0, #2
   1cee8:	str	ip, [sp, #40]	; 0x28
   1ceec:	add	r8, ip, r8
   1cef0:	add	r6, r3, r6
   1cef4:	eor	ip, r1, r0
   1cef8:	ror	r3, r7, #31
   1cefc:	ldr	r7, [sp, #48]	; 0x30
   1cf00:	eor	ip, ip, r2
   1cf04:	add	r4, r8, r4
   1cf08:	eor	r7, r7, sl
   1cf0c:	add	r4, ip, r4
   1cf10:	ldr	ip, [sp, #40]	; 0x28
   1cf14:	mov	r8, r3
   1cf18:	eor	r7, r7, r9
   1cf1c:	ldr	r3, [pc, #2004]	; 1d6f8 <__assert_fail@plt+0xc40c>
   1cf20:	str	sl, [sp, #8]
   1cf24:	eor	r7, r7, ip
   1cf28:	ldr	sl, [sp, #12]
   1cf2c:	ldr	ip, [sp, #28]
   1cf30:	add	r6, r6, r2, ror #27
   1cf34:	add	r3, r8, r3
   1cf38:	ror	r2, r2, #2
   1cf3c:	eor	r5, r5, fp
   1cf40:	eor	lr, r0, r2
   1cf44:	add	r1, r3, r1
   1cf48:	eor	sl, sl, ip
   1cf4c:	ldr	r3, [sp, #36]	; 0x24
   1cf50:	ldr	ip, [pc, #1952]	; 1d6f8 <__assert_fail@plt+0xc40c>
   1cf54:	add	r4, r4, r6, ror #27
   1cf58:	ror	r5, r5, #31
   1cf5c:	eor	lr, lr, r6
   1cf60:	ror	r6, r6, #2
   1cf64:	add	ip, r5, ip
   1cf68:	eor	sl, sl, r3
   1cf6c:	add	lr, lr, r1
   1cf70:	ror	r3, r7, #31
   1cf74:	eor	r1, r2, r6
   1cf78:	mov	r7, r3
   1cf7c:	eor	r1, r1, r4
   1cf80:	add	r0, ip, r0
   1cf84:	str	r5, [sp, #48]	; 0x30
   1cf88:	str	r7, [sp, #52]	; 0x34
   1cf8c:	ldr	r5, [sp]
   1cf90:	str	r8, [sp, #64]	; 0x40
   1cf94:	eor	sl, sl, r8
   1cf98:	add	r0, r1, r0
   1cf9c:	ldr	r8, [sp, #8]
   1cfa0:	mov	r1, r7
   1cfa4:	ldr	r7, [pc, #1868]	; 1d6f8 <__assert_fail@plt+0xc40c>
   1cfa8:	ldr	r3, [sp, #4]
   1cfac:	add	r7, r1, r7
   1cfb0:	eor	r5, r8, r5
   1cfb4:	ldr	r1, [sp, #48]	; 0x30
   1cfb8:	ror	sl, sl, #31
   1cfbc:	add	lr, lr, r4, ror #27
   1cfc0:	str	sl, [sp, #8]
   1cfc4:	ror	r4, r4, #2
   1cfc8:	ldr	sl, [sp, #56]	; 0x38
   1cfcc:	ldr	ip, [sp, #28]
   1cfd0:	eor	r5, r5, r3
   1cfd4:	eor	r5, r5, r1
   1cfd8:	eor	r3, r6, r4
   1cfdc:	ldr	r1, [sp, #16]
   1cfe0:	eor	r8, ip, sl
   1cfe4:	add	r2, r7, r2
   1cfe8:	eor	r3, r3, lr
   1cfec:	ror	ip, r5, #31
   1cff0:	ldr	r7, [sp, #52]	; 0x34
   1cff4:	eor	r8, r8, r1
   1cff8:	add	r3, r3, r2
   1cffc:	ldr	r1, [pc, #1780]	; 1d6f8 <__assert_fail@plt+0xc40c>
   1d000:	ldr	r2, [sp, #8]
   1d004:	add	r0, r0, lr, ror #27
   1d008:	ldr	r5, [sp]
   1d00c:	ror	lr, lr, #2
   1d010:	str	ip, [sp, #12]
   1d014:	ldr	ip, [sp, #32]
   1d018:	add	r1, r2, r1
   1d01c:	eor	r8, r8, r7
   1d020:	eor	r2, r4, lr
   1d024:	eor	r7, r5, ip
   1d028:	eor	r2, r2, r0
   1d02c:	add	r6, r1, r6
   1d030:	ldr	r5, [sp, #12]
   1d034:	add	r6, r2, r6
   1d038:	ror	r2, r8, #31
   1d03c:	str	r2, [sp]
   1d040:	add	r5, r5, #1845493760	; 0x6e000000
   1d044:	ldr	r2, [sp, #8]
   1d048:	eor	r7, r7, fp
   1d04c:	add	r5, r5, #14221312	; 0xd90000
   1d050:	eor	r7, r7, r2
   1d054:	add	r5, r5, #60160	; 0xeb00
   1d058:	add	r5, r5, #161	; 0xa1
   1d05c:	mov	r1, sl
   1d060:	add	r4, r5, r4
   1d064:	ldr	sl, [sp, #60]	; 0x3c
   1d068:	ror	r5, r7, #31
   1d06c:	ldr	r2, [sp]
   1d070:	mov	r7, r5
   1d074:	ldr	r5, [sp, #40]	; 0x28
   1d078:	add	r3, r3, r0, ror #27
   1d07c:	eor	r8, r1, sl
   1d080:	ror	r0, r0, #2
   1d084:	eor	ip, lr, r0
   1d088:	eor	r8, r8, r5
   1d08c:	ldr	r1, [pc, #1636]	; 1d6f8 <__assert_fail@plt+0xc40c>
   1d090:	ldr	r5, [sp, #12]
   1d094:	add	r6, r6, r3, ror #27
   1d098:	eor	ip, ip, r3
   1d09c:	ror	r3, r3, #2
   1d0a0:	add	r1, r2, r1
   1d0a4:	eor	r8, r8, r5
   1d0a8:	eor	r2, r0, r3
   1d0ac:	ldr	r5, [pc, #1604]	; 1d6f8 <__assert_fail@plt+0xc40c>
   1d0b0:	eor	r2, r2, r6
   1d0b4:	add	r4, ip, r4
   1d0b8:	add	lr, r1, lr
   1d0bc:	ldr	ip, [sp, #32]
   1d0c0:	add	r5, r7, r5
   1d0c4:	add	lr, r2, lr
   1d0c8:	ror	r8, r8, #31
   1d0cc:	ldr	r2, [sp, #64]	; 0x40
   1d0d0:	eor	ip, ip, r9
   1d0d4:	add	r0, r5, r0
   1d0d8:	mov	r5, r8
   1d0dc:	ldr	r8, [sp]
   1d0e0:	eor	ip, ip, r2
   1d0e4:	eor	ip, ip, r8
   1d0e8:	add	r4, r4, r6, ror #27
   1d0ec:	ror	r6, r6, #2
   1d0f0:	eor	r1, r3, r6
   1d0f4:	mov	r2, sl
   1d0f8:	ror	ip, ip, #31
   1d0fc:	ldr	sl, [sp, #36]	; 0x24
   1d100:	str	r7, [sp, #56]	; 0x38
   1d104:	str	ip, [sp, #24]
   1d108:	eor	r1, r1, r4
   1d10c:	ldr	ip, [sp, #48]	; 0x30
   1d110:	add	lr, lr, r4, ror #27
   1d114:	eor	r7, r2, sl
   1d118:	ror	r4, r4, #2
   1d11c:	ldr	r8, [sp, #56]	; 0x38
   1d120:	add	r0, r1, r0
   1d124:	ldr	r1, [pc, #1488]	; 1d6fc <__assert_fail@plt+0xc410>
   1d128:	orr	r2, lr, r4
   1d12c:	eor	r7, r7, ip
   1d130:	add	r0, r0, lr, ror #27
   1d134:	and	ip, r2, r6
   1d138:	add	r1, r5, r1
   1d13c:	ldr	r2, [sp, #4]
   1d140:	eor	r7, r7, r8
   1d144:	str	r5, [sp, #20]
   1d148:	add	r3, r1, r3
   1d14c:	ror	r5, lr, #2
   1d150:	and	lr, lr, r4
   1d154:	eor	r8, r9, r2
   1d158:	orr	lr, ip, lr
   1d15c:	ldr	r9, [sp, #52]	; 0x34
   1d160:	add	r3, r3, r0, ror #27
   1d164:	ror	r7, r7, #31
   1d168:	add	r3, lr, r3
   1d16c:	ldr	ip, [sp, #24]
   1d170:	mov	lr, r7
   1d174:	ldr	r2, [pc, #1408]	; 1d6fc <__assert_fail@plt+0xc410>
   1d178:	ldr	r7, [sp, #20]
   1d17c:	orr	r1, r0, r5
   1d180:	eor	r8, r8, r9
   1d184:	add	r2, ip, r2
   1d188:	ldr	r9, [sp, #16]
   1d18c:	and	ip, r0, r5
   1d190:	eor	r8, r8, r7
   1d194:	and	r1, r1, r4
   1d198:	orr	r1, r1, ip
   1d19c:	add	r6, r2, r6
   1d1a0:	add	r6, r1, r6
   1d1a4:	ldr	r2, [pc, #1360]	; 1d6fc <__assert_fail@plt+0xc410>
   1d1a8:	eor	r1, sl, r9
   1d1ac:	ror	sl, r8, #31
   1d1b0:	mov	r8, sl
   1d1b4:	ldr	sl, [sp, #8]
   1d1b8:	ror	r0, r0, #2
   1d1bc:	str	lr, [sp, #16]
   1d1c0:	add	r2, lr, r2
   1d1c4:	ldr	lr, [sp, #24]
   1d1c8:	add	ip, r6, r3, ror #27
   1d1cc:	eor	r1, r1, sl
   1d1d0:	orr	r6, r3, r0
   1d1d4:	ror	r7, r3, #2
   1d1d8:	and	r6, r6, r5
   1d1dc:	and	r3, r3, r0
   1d1e0:	eor	r1, r1, lr
   1d1e4:	orr	r3, r6, r3
   1d1e8:	add	r4, r2, r4
   1d1ec:	ldr	lr, [sp, #4]
   1d1f0:	add	r6, r8, #-1895825408	; 0x8f000000
   1d1f4:	ldr	sl, [sp, #12]
   1d1f8:	add	r4, r4, ip, ror #27
   1d1fc:	ror	r1, r1, #31
   1d200:	add	r6, r6, #1802240	; 0x1b8000
   1d204:	add	r4, r3, r4
   1d208:	orr	r2, ip, r7
   1d20c:	mov	r3, r1
   1d210:	eor	lr, lr, fp
   1d214:	ldr	r1, [sp, #16]
   1d218:	add	r6, r6, #15552	; 0x3cc0
   1d21c:	str	r8, [sp, #28]
   1d220:	add	r6, r6, #28
   1d224:	and	r8, ip, r7
   1d228:	and	r2, r2, r0
   1d22c:	eor	lr, lr, sl
   1d230:	add	r5, r6, r5
   1d234:	orr	r2, r2, r8
   1d238:	eor	lr, lr, r1
   1d23c:	add	r2, r2, r5
   1d240:	str	r3, [sp, #32]
   1d244:	mov	r5, r3
   1d248:	ldr	r3, [pc, #1196]	; 1d6fc <__assert_fail@plt+0xc410>
   1d24c:	ldr	r8, [sp, #40]	; 0x28
   1d250:	ror	lr, lr, #31
   1d254:	mov	sl, lr
   1d258:	add	r3, r5, r3
   1d25c:	ldr	lr, [sp]
   1d260:	ror	r6, ip, #2
   1d264:	add	r0, r3, r0
   1d268:	eor	ip, r9, r8
   1d26c:	ldr	r3, [sp, #28]
   1d270:	add	r1, r2, r4, ror #27
   1d274:	eor	ip, ip, lr
   1d278:	orr	r2, r4, r6
   1d27c:	ror	r5, r4, #2
   1d280:	and	lr, r2, r7
   1d284:	eor	ip, ip, r3
   1d288:	and	r4, r4, r6
   1d28c:	ldr	r3, [pc, #1128]	; 1d6fc <__assert_fail@plt+0xc410>
   1d290:	ldr	r9, [sp, #64]	; 0x40
   1d294:	orr	r4, lr, r4
   1d298:	add	r0, r0, r1, ror #27
   1d29c:	add	r0, r4, r0
   1d2a0:	add	r3, sl, r3
   1d2a4:	ror	r4, ip, #31
   1d2a8:	str	sl, [sp, #36]	; 0x24
   1d2ac:	ldr	sl, [sp, #56]	; 0x38
   1d2b0:	add	r7, r3, r7
   1d2b4:	eor	fp, fp, r9
   1d2b8:	mov	r3, r4
   1d2bc:	ldr	r4, [sp, #32]
   1d2c0:	orr	r2, r1, r5
   1d2c4:	eor	fp, fp, sl
   1d2c8:	and	lr, r1, r5
   1d2cc:	eor	fp, fp, r4
   1d2d0:	and	r2, r2, r6
   1d2d4:	orr	r2, r2, lr
   1d2d8:	ldr	sl, [sp, #48]	; 0x30
   1d2dc:	mov	r4, r3
   1d2e0:	str	r3, [sp, #48]	; 0x30
   1d2e4:	add	r2, r2, r7
   1d2e8:	ldr	r3, [pc, #1036]	; 1d6fc <__assert_fail@plt+0xc410>
   1d2ec:	ror	r7, fp, #31
   1d2f0:	ror	r1, r1, #2
   1d2f4:	str	r7, [sp, #4]
   1d2f8:	mov	ip, r8
   1d2fc:	ldr	r7, [sp, #20]
   1d300:	ldr	fp, [sp, #52]	; 0x34
   1d304:	eor	ip, ip, sl
   1d308:	add	r3, r4, r3
   1d30c:	orr	lr, r0, r1
   1d310:	ldr	r4, [sp, #36]	; 0x24
   1d314:	add	r2, r2, r0, ror #27
   1d318:	ror	r8, r0, #2
   1d31c:	and	lr, lr, r5
   1d320:	eor	r7, ip, r7
   1d324:	and	r0, r0, r1
   1d328:	add	ip, r3, r6
   1d32c:	eor	r7, r7, r4
   1d330:	orr	r0, lr, r0
   1d334:	eor	r4, r9, fp
   1d338:	ldr	lr, [pc, #956]	; 1d6fc <__assert_fail@plt+0xc410>
   1d33c:	ldr	r9, [sp, #4]
   1d340:	add	ip, ip, r2, ror #27
   1d344:	add	ip, r0, ip
   1d348:	add	lr, r9, lr
   1d34c:	ror	r0, r7, #31
   1d350:	ldr	r9, [sp, #24]
   1d354:	mov	r7, r0
   1d358:	ldr	r0, [sp, #48]	; 0x30
   1d35c:	orr	r3, r2, r8
   1d360:	eor	r4, r4, r9
   1d364:	and	r6, r2, r8
   1d368:	eor	r4, r4, r0
   1d36c:	and	r3, r3, r1
   1d370:	orr	r3, r3, r6
   1d374:	add	r5, lr, r5
   1d378:	ldr	r6, [sp, #8]
   1d37c:	ror	r9, r2, #2
   1d380:	add	lr, r3, r5
   1d384:	mov	r2, sl
   1d388:	ror	r5, r4, #31
   1d38c:	ldr	r4, [sp, #16]
   1d390:	str	r5, [sp, #8]
   1d394:	eor	sl, r2, r6
   1d398:	ldr	r5, [sp, #4]
   1d39c:	eor	sl, sl, r4
   1d3a0:	ldr	r0, [pc, #852]	; 1d6fc <__assert_fail@plt+0xc410>
   1d3a4:	eor	sl, sl, r5
   1d3a8:	mov	r5, fp
   1d3ac:	ldr	fp, [sp, #12]
   1d3b0:	add	r0, r7, r0
   1d3b4:	add	lr, lr, ip, ror #27
   1d3b8:	orr	r2, ip, r9
   1d3bc:	str	r7, [sp, #52]	; 0x34
   1d3c0:	add	r1, r0, r1
   1d3c4:	eor	r7, r5, fp
   1d3c8:	ldr	r0, [pc, #812]	; 1d6fc <__assert_fail@plt+0xc410>
   1d3cc:	ldr	r5, [sp, #8]
   1d3d0:	ror	r3, ip, #2
   1d3d4:	and	r4, r2, r8
   1d3d8:	and	ip, ip, r9
   1d3dc:	orr	ip, r4, ip
   1d3e0:	add	r0, r5, r0
   1d3e4:	add	r1, r1, lr, ror #27
   1d3e8:	ldr	r5, [sp, #28]
   1d3ec:	add	r1, ip, r1
   1d3f0:	ldr	ip, [sp, #52]	; 0x34
   1d3f4:	orr	r2, lr, r3
   1d3f8:	eor	r7, r7, r5
   1d3fc:	and	r4, lr, r3
   1d400:	eor	r7, r7, ip
   1d404:	and	r2, r2, r9
   1d408:	add	r8, r0, r8
   1d40c:	orr	r2, r2, r4
   1d410:	ror	r0, lr, #2
   1d414:	ldr	ip, [pc, #736]	; 1d6fc <__assert_fail@plt+0xc410>
   1d418:	ldr	lr, [sp]
   1d41c:	ror	sl, sl, #31
   1d420:	add	r2, r2, r8
   1d424:	ror	r8, r7, #31
   1d428:	str	r8, [sp, #40]	; 0x28
   1d42c:	add	ip, sl, ip
   1d430:	ldr	r8, [sp, #32]
   1d434:	eor	lr, r6, lr
   1d438:	orr	r6, r1, r0
   1d43c:	add	r2, r2, r1, ror #27
   1d440:	ror	r4, r1, #2
   1d444:	add	r9, ip, r9
   1d448:	and	r1, r1, r0
   1d44c:	ldr	ip, [sp, #8]
   1d450:	and	r6, r6, r3
   1d454:	eor	lr, lr, r8
   1d458:	orr	r6, r6, r1
   1d45c:	ldr	r8, [pc, #664]	; 1d6fc <__assert_fail@plt+0xc410>
   1d460:	ldr	r1, [sp, #40]	; 0x28
   1d464:	orr	r7, r2, r4
   1d468:	eor	lr, lr, ip
   1d46c:	mov	ip, fp
   1d470:	ldr	fp, [sp, #56]	; 0x38
   1d474:	and	r5, r2, r4
   1d478:	add	r8, r1, r8
   1d47c:	and	r7, r7, r0
   1d480:	ldr	r1, [sp, #36]	; 0x24
   1d484:	add	r9, r9, r2, ror #27
   1d488:	orr	r7, r7, r5
   1d48c:	eor	ip, ip, fp
   1d490:	add	r3, r8, r3
   1d494:	add	r6, r6, r9
   1d498:	eor	ip, ip, r1
   1d49c:	ror	r9, lr, #31
   1d4a0:	add	r3, r7, r3
   1d4a4:	ldr	lr, [sp]
   1d4a8:	ldr	r7, [sp, #20]
   1d4ac:	eor	ip, ip, sl
   1d4b0:	ror	r2, r2, #2
   1d4b4:	eor	r8, lr, r7
   1d4b8:	add	lr, r9, #-1895825408	; 0x8f000000
   1d4bc:	orr	r1, r6, r2
   1d4c0:	ror	ip, ip, #31
   1d4c4:	add	lr, lr, #1802240	; 0x1b8000
   1d4c8:	add	r3, r3, r6, ror #27
   1d4cc:	ror	r5, r6, #2
   1d4d0:	mov	r7, ip
   1d4d4:	and	r6, r6, r2
   1d4d8:	ldr	ip, [sp, #48]	; 0x30
   1d4dc:	and	r1, r1, r4
   1d4e0:	add	lr, lr, #15552	; 0x3cc0
   1d4e4:	str	r9, [sp, #56]	; 0x38
   1d4e8:	orr	r1, r1, r6
   1d4ec:	ldr	r9, [sp, #40]	; 0x28
   1d4f0:	add	r6, r7, #-1895825408	; 0x8f000000
   1d4f4:	add	lr, lr, #28
   1d4f8:	eor	r8, r8, ip
   1d4fc:	add	lr, lr, r0
   1d500:	mov	ip, fp
   1d504:	add	r6, r6, #1802240	; 0x1b8000
   1d508:	ldr	fp, [sp, #24]
   1d50c:	orr	r0, r3, r5
   1d510:	eor	r8, r8, r9
   1d514:	add	lr, lr, r3, ror #27
   1d518:	str	r7, [sp, #60]	; 0x3c
   1d51c:	add	r6, r6, #15552	; 0x3cc0
   1d520:	ldr	r9, [sp, #4]
   1d524:	add	r1, r1, lr
   1d528:	and	r7, r3, r5
   1d52c:	ldr	lr, [sp, #56]	; 0x38
   1d530:	eor	ip, ip, fp
   1d534:	add	r6, r6, #28
   1d538:	and	r0, r0, r2
   1d53c:	add	r4, r6, r4
   1d540:	orr	r0, r0, r7
   1d544:	eor	ip, ip, r9
   1d548:	eor	r9, ip, lr
   1d54c:	ldr	r7, [sp, #20]
   1d550:	add	lr, r0, r4
   1d554:	ldr	r4, [sp, #16]
   1d558:	ror	r6, r8, #31
   1d55c:	eor	r8, r7, r4
   1d560:	ldr	r4, [pc, #404]	; 1d6fc <__assert_fail@plt+0xc410>
   1d564:	str	r6, [sp, #20]
   1d568:	add	r4, r6, r4
   1d56c:	ldr	r6, [sp, #52]	; 0x34
   1d570:	ror	r7, r9, #31
   1d574:	ror	r3, r3, #2
   1d578:	str	r7, [sp]
   1d57c:	eor	r8, r8, r6
   1d580:	ldr	r7, [sp, #60]	; 0x3c
   1d584:	ldr	r6, [sp, #28]
   1d588:	add	lr, lr, r1, ror #27
   1d58c:	orr	r0, r1, r3
   1d590:	add	r2, r4, r2
   1d594:	mov	r4, fp
   1d598:	ror	ip, r1, #2
   1d59c:	eor	r8, r8, r7
   1d5a0:	and	r1, r1, r3
   1d5a4:	ldr	r7, [sp]
   1d5a8:	and	r0, r0, r5
   1d5ac:	eor	r4, r4, r6
   1d5b0:	ldr	r6, [pc, #324]	; 1d6fc <__assert_fail@plt+0xc410>
   1d5b4:	orr	r9, lr, ip
   1d5b8:	add	r2, r2, lr, ror #27
   1d5bc:	orr	r0, r0, r1
   1d5c0:	add	r0, r0, r2
   1d5c4:	add	r6, r7, r6
   1d5c8:	and	r1, r9, r3
   1d5cc:	and	r7, lr, ip
   1d5d0:	ldr	r9, [sp, #8]
   1d5d4:	ror	r2, r8, #31
   1d5d8:	orr	r1, r1, r7
   1d5dc:	mov	r7, r2
   1d5e0:	ldr	r2, [sp, #20]
   1d5e4:	eor	r4, r4, r9
   1d5e8:	eor	r9, r4, r2
   1d5ec:	ldr	r8, [sp, #32]
   1d5f0:	ldr	r4, [sp, #16]
   1d5f4:	add	r5, r6, r5
   1d5f8:	eor	fp, r4, r8
   1d5fc:	add	r4, r7, #-1895825408	; 0x8f000000
   1d600:	add	r4, r4, #1802240	; 0x1b8000
   1d604:	ror	lr, lr, #2
   1d608:	add	r2, r1, r5
   1d60c:	add	r4, r4, #15552	; 0x3cc0
   1d610:	add	r2, r2, r0, ror #27
   1d614:	str	r7, [sp, #16]
   1d618:	add	r4, r4, #28
   1d61c:	orr	r7, r0, lr
   1d620:	ror	r6, r0, #2
   1d624:	ldr	r5, [sp, #28]
   1d628:	ror	r1, r9, #31
   1d62c:	and	r0, r0, lr
   1d630:	ldr	r9, [sp, #36]	; 0x24
   1d634:	add	r4, r4, r3
   1d638:	and	r7, r7, ip
   1d63c:	ldr	r3, [sp]
   1d640:	mov	r8, r1
   1d644:	add	r4, r4, r2, ror #27
   1d648:	eor	fp, fp, sl
   1d64c:	orr	r7, r7, r0
   1d650:	ldr	r0, [sp, #40]	; 0x28
   1d654:	add	r7, r7, r4
   1d658:	orr	r1, r2, r6
   1d65c:	eor	fp, fp, r3
   1d660:	ldr	r4, [sp, #16]
   1d664:	eor	r3, r5, r9
   1d668:	add	r5, r8, #-1895825408	; 0x8f000000
   1d66c:	str	r8, [sp, #24]
   1d670:	and	r1, r1, lr
   1d674:	and	r8, r2, r6
   1d678:	eor	r3, r3, r0
   1d67c:	add	r5, r5, #1802240	; 0x1b8000
   1d680:	ror	r0, fp, #31
   1d684:	orr	r1, r1, r8
   1d688:	ldr	fp, [sp, #48]	; 0x30
   1d68c:	ldr	r8, [sp, #32]
   1d690:	eor	r3, r3, r4
   1d694:	add	r5, r5, #15552	; 0x3cc0
   1d698:	add	r5, r5, #28
   1d69c:	add	r5, r5, ip
   1d6a0:	ror	r3, r3, #31
   1d6a4:	eor	ip, r8, fp
   1d6a8:	ldr	r9, [pc, #76]	; 1d6fc <__assert_fail@plt+0xc410>
   1d6ac:	ldr	r8, [sp, #56]	; 0x38
   1d6b0:	ror	r2, r2, #2
   1d6b4:	str	r3, [sp, #12]
   1d6b8:	ldr	r3, [sp, #24]
   1d6bc:	str	r0, [sp, #28]
   1d6c0:	add	r9, r0, r9
   1d6c4:	add	r1, r1, r5
   1d6c8:	orr	r0, r7, r2
   1d6cc:	eor	ip, ip, r8
   1d6d0:	add	r1, r1, r7, ror #27
   1d6d4:	ror	r5, r7, #2
   1d6d8:	ldr	r8, [sp, #4]
   1d6dc:	and	r7, r7, r2
   1d6e0:	eor	ip, ip, r3
   1d6e4:	ldr	r4, [sp, #36]	; 0x24
   1d6e8:	and	r0, r0, r6
   1d6ec:	add	lr, r9, lr
   1d6f0:	b	1d704 <__assert_fail@plt+0xc418>
   1d6f4:	bpl	fe0bbd60 <optarg@@GLIBC_2.4+0xfe069bb8>
   1d6f8:	vfnmsvs.f64	d30, d25, d17
   1d6fc:	svchi	0x001bbcdc
   1d700:	bgt	18cde60 <optarg@@GLIBC_2.4+0x187bcb8>
   1d704:	orr	r0, r0, r7
   1d708:	ldr	r9, [sp, #60]	; 0x3c
   1d70c:	ldr	r7, [sp, #12]
   1d710:	eor	r4, r4, r8
   1d714:	ror	ip, ip, #31
   1d718:	eor	r4, r4, r9
   1d71c:	add	r7, r7, #-1895825408	; 0x8f000000
   1d720:	mov	r9, ip
   1d724:	ldr	ip, [sp, #28]
   1d728:	add	lr, lr, r1, ror #27
   1d72c:	add	r7, r7, #1802240	; 0x1b8000
   1d730:	add	r0, r0, lr
   1d734:	eor	r4, r4, ip
   1d738:	mov	lr, r9
   1d73c:	mov	ip, fp
   1d740:	add	r7, r7, #15552	; 0x3cc0
   1d744:	ldr	fp, [sp, #52]	; 0x34
   1d748:	str	r9, [sp, #32]
   1d74c:	ldr	r9, [pc, #-84]	; 1d700 <__assert_fail@plt+0xc414>
   1d750:	add	r7, r7, #28
   1d754:	add	r7, r7, r6
   1d758:	add	r9, lr, r9
   1d75c:	ldr	r6, [sp, #20]
   1d760:	ror	lr, r4, #31
   1d764:	mov	r4, lr
   1d768:	orr	r3, r1, r5
   1d76c:	ldr	lr, [sp, #12]
   1d770:	eor	ip, ip, fp
   1d774:	and	r8, r1, r5
   1d778:	and	r3, r3, r2
   1d77c:	eor	ip, ip, r6
   1d780:	eor	r6, ip, lr
   1d784:	orr	r3, r3, r8
   1d788:	ldmib	sp, {r8, ip}
   1d78c:	ror	r1, r1, #2
   1d790:	add	r3, r3, r7
   1d794:	eor	r7, r5, r1
   1d798:	eor	lr, r8, ip
   1d79c:	add	r2, r9, r2
   1d7a0:	eor	ip, r7, r0
   1d7a4:	ror	r9, r6, #31
   1d7a8:	ldr	r7, [sp]
   1d7ac:	add	ip, ip, r2
   1d7b0:	add	r2, r4, #-905969664	; 0xca000000
   1d7b4:	mov	r8, r9
   1d7b8:	add	r2, r2, #6422528	; 0x620000
   1d7bc:	ldr	r9, [sp, #32]
   1d7c0:	add	r3, r3, r0, ror #27
   1d7c4:	eor	lr, lr, r7
   1d7c8:	ror	r0, r0, #2
   1d7cc:	add	r2, r2, #49408	; 0xc100
   1d7d0:	mov	r7, r4
   1d7d4:	eor	lr, lr, r9
   1d7d8:	eor	r4, r1, r0
   1d7dc:	eor	r6, fp, sl
   1d7e0:	add	r2, r2, #214	; 0xd6
   1d7e4:	ldr	fp, [sp, #16]
   1d7e8:	ldr	r9, [pc, #-240]	; 1d700 <__assert_fail@plt+0xc414>
   1d7ec:	add	ip, ip, r3, ror #27
   1d7f0:	add	r5, r2, r5
   1d7f4:	eor	r2, r4, r3
   1d7f8:	ror	r3, r3, #2
   1d7fc:	eor	r4, r0, r3
   1d800:	add	r9, r8, r9
   1d804:	eor	r6, r6, fp
   1d808:	add	r2, r2, r5
   1d80c:	ror	r5, lr, #31
   1d810:	str	r5, [sp, #4]
   1d814:	str	r7, [sp, #48]	; 0x30
   1d818:	eor	r6, r6, r7
   1d81c:	ldr	lr, [sp, #8]
   1d820:	ldr	r7, [sp, #40]	; 0x28
   1d824:	add	r1, r9, r1
   1d828:	eor	r9, r4, ip
   1d82c:	add	r2, r2, ip, ror #27
   1d830:	ror	r5, ip, #2
   1d834:	add	r9, r9, r1
   1d838:	ldr	ip, [sp, #24]
   1d83c:	ldr	r1, [sp, #4]
   1d840:	ldr	r4, [pc, #-328]	; 1d700 <__assert_fail@plt+0xc414>
   1d844:	eor	lr, lr, r7
   1d848:	eor	lr, lr, ip
   1d84c:	add	r4, r1, r4
   1d850:	ror	r1, r6, #31
   1d854:	mov	r6, r1
   1d858:	str	r8, [sp, #36]	; 0x24
   1d85c:	eor	r1, lr, r8
   1d860:	ldr	r8, [sp, #56]	; 0x38
   1d864:	eor	fp, r3, r5
   1d868:	eor	lr, sl, r8
   1d86c:	ldr	sl, [sp, #28]
   1d870:	ror	ip, r2, #2
   1d874:	add	r9, r9, r2, ror #27
   1d878:	add	r0, r4, r0
   1d87c:	eor	fp, fp, r2
   1d880:	eor	r2, lr, sl
   1d884:	ldr	lr, [pc, #-396]	; 1d700 <__assert_fail@plt+0xc414>
   1d888:	add	fp, fp, r0
   1d88c:	ror	r0, r1, #31
   1d890:	ldr	r1, [sp, #4]
   1d894:	ldr	r4, [sp, #60]	; 0x3c
   1d898:	add	lr, r6, lr
   1d89c:	eor	r2, r2, r1
   1d8a0:	add	r3, lr, r3
   1d8a4:	mov	r1, r7
   1d8a8:	ldr	lr, [sp, #12]
   1d8ac:	str	r0, [sp, #8]
   1d8b0:	eor	r7, r1, r4
   1d8b4:	eor	sl, r5, ip
   1d8b8:	eor	r7, r7, lr
   1d8bc:	ldr	r1, [pc, #-452]	; 1d700 <__assert_fail@plt+0xc414>
   1d8c0:	ldr	lr, [sp, #8]
   1d8c4:	add	fp, fp, r9, ror #27
   1d8c8:	eor	sl, sl, r9
   1d8cc:	ror	r9, r9, #2
   1d8d0:	eor	r0, ip, r9
   1d8d4:	add	r1, lr, r1
   1d8d8:	str	r6, [sp, #40]	; 0x28
   1d8dc:	eor	r7, r7, r6
   1d8e0:	ldr	r6, [sp, #20]
   1d8e4:	eor	r0, r0, fp
   1d8e8:	add	sl, sl, r3
   1d8ec:	add	r1, r1, r5
   1d8f0:	ror	r3, r2, #31
   1d8f4:	ldr	lr, [pc, #-508]	; 1d700 <__assert_fail@plt+0xc414>
   1d8f8:	ldr	r2, [sp, #32]
   1d8fc:	eor	r6, r8, r6
   1d900:	add	r1, r0, r1
   1d904:	ldr	r5, [sp]
   1d908:	ldr	r0, [sp, #8]
   1d90c:	add	sl, sl, fp, ror #27
   1d910:	str	r3, [sp, #52]	; 0x34
   1d914:	ror	fp, fp, #2
   1d918:	ldr	r8, [sp, #48]	; 0x30
   1d91c:	eor	r6, r6, r2
   1d920:	add	lr, r3, lr
   1d924:	add	lr, lr, ip
   1d928:	eor	r3, r9, fp
   1d92c:	ldr	ip, [sp, #52]	; 0x34
   1d930:	eor	r6, r6, r0
   1d934:	eor	r5, r4, r5
   1d938:	ldr	r0, [pc, #-576]	; 1d700 <__assert_fail@plt+0xc414>
   1d93c:	ror	r7, r7, #31
   1d940:	add	r1, r1, sl, ror #27
   1d944:	eor	r3, r3, sl
   1d948:	eor	r5, r5, r8
   1d94c:	ror	sl, sl, #2
   1d950:	add	r0, r7, r0
   1d954:	eor	r4, fp, sl
   1d958:	add	r3, r3, lr
   1d95c:	eor	r5, r5, ip
   1d960:	ldr	ip, [sp, #20]
   1d964:	ldr	lr, [sp, #16]
   1d968:	add	r9, r0, r9
   1d96c:	eor	r4, r4, r1
   1d970:	eor	r8, ip, lr
   1d974:	ldr	r0, [sp, #36]	; 0x24
   1d978:	ldr	ip, [sp]
   1d97c:	add	r4, r4, r9
   1d980:	ldr	r9, [sp, #24]
   1d984:	eor	r8, r8, r0
   1d988:	eor	r9, ip, r9
   1d98c:	ldr	ip, [sp, #4]
   1d990:	eor	r8, r8, r7
   1d994:	ldr	lr, [pc, #-668]	; 1d700 <__assert_fail@plt+0xc414>
   1d998:	ror	r6, r6, #31
   1d99c:	eor	r9, r9, ip
   1d9a0:	ldr	ip, [pc, #-680]	; 1d700 <__assert_fail@plt+0xc414>
   1d9a4:	ror	r5, r5, #31
   1d9a8:	add	lr, r6, lr
   1d9ac:	ror	r8, r8, #31
   1d9b0:	add	r3, r3, r1, ror #27
   1d9b4:	str	r5, [sp, #20]
   1d9b8:	ror	r1, r1, #2
   1d9bc:	add	lr, lr, fp
   1d9c0:	add	ip, r5, ip
   1d9c4:	ldr	fp, [sp, #16]
   1d9c8:	mov	r5, r8
   1d9cc:	ldr	r8, [sp, #28]
   1d9d0:	eor	r0, sl, r1
   1d9d4:	add	ip, ip, sl
   1d9d8:	ldr	sl, [sp, #40]	; 0x28
   1d9dc:	eor	r9, r9, r6
   1d9e0:	eor	r8, fp, r8
   1d9e4:	eor	r8, r8, sl
   1d9e8:	add	sl, r5, #-905969664	; 0xca000000
   1d9ec:	ror	fp, r9, #31
   1d9f0:	add	sl, sl, #6422528	; 0x620000
   1d9f4:	ldr	r9, [sp, #20]
   1d9f8:	add	sl, sl, #49408	; 0xc100
   1d9fc:	str	fp, [sp]
   1da00:	add	r4, r4, r3, ror #27
   1da04:	eor	r0, r0, r3
   1da08:	ldr	fp, [sp, #12]
   1da0c:	ror	r3, r3, #2
   1da10:	add	sl, sl, #214	; 0xd6
   1da14:	eor	r8, r8, r9
   1da18:	ldr	r9, [sp, #24]
   1da1c:	add	lr, lr, r0
   1da20:	eor	r0, r1, r3
   1da24:	add	r1, sl, r1
   1da28:	ldr	sl, [sp, #8]
   1da2c:	eor	r9, r9, fp
   1da30:	add	lr, lr, r4, ror #27
   1da34:	eor	r0, r0, r4
   1da38:	ldr	fp, [sp]
   1da3c:	ror	r4, r4, #2
   1da40:	eor	r9, r9, sl
   1da44:	ldr	sl, [pc, #-844]	; 1d700 <__assert_fail@plt+0xc414>
   1da48:	add	ip, ip, r0
   1da4c:	eor	r0, r3, r4
   1da50:	add	ip, ip, lr, ror #27
   1da54:	add	sl, fp, sl
   1da58:	eor	r0, r0, lr
   1da5c:	ldr	fp, [sp, #28]
   1da60:	ror	lr, lr, #2
   1da64:	add	r0, r1, r0
   1da68:	eor	r1, r4, lr
   1da6c:	add	r3, sl, r3
   1da70:	eor	fp, fp, r2
   1da74:	eor	r1, r1, ip
   1da78:	ldr	r2, [sp, #52]	; 0x34
   1da7c:	add	r1, r3, r1
   1da80:	ldr	r3, [sp]
   1da84:	eor	fp, fp, r2
   1da88:	str	r5, [sp, #16]
   1da8c:	eor	r9, r9, r5
   1da90:	eor	fp, fp, r3
   1da94:	ldr	r5, [sp, #48]	; 0x30
   1da98:	ldr	r3, [sp, #12]
   1da9c:	ldr	sl, [pc, #-932]	; 1d700 <__assert_fail@plt+0xc414>
   1daa0:	ror	r8, r8, #31
   1daa4:	add	r0, r0, ip, ror #27
   1daa8:	add	sl, r8, sl
   1daac:	ror	ip, ip, #2
   1dab0:	eor	r3, r3, r5
   1dab4:	eor	r2, lr, ip
   1dab8:	add	r4, sl, r4
   1dabc:	eor	r3, r3, r7
   1dac0:	ldr	sl, [pc, #-968]	; 1d700 <__assert_fail@plt+0xc414>
   1dac4:	add	r1, r1, r0, ror #27
   1dac8:	ldr	r7, [sp, #32]
   1dacc:	ror	r9, r9, #31
   1dad0:	eor	r2, r2, r0
   1dad4:	eor	r3, r3, r8
   1dad8:	ror	r0, r0, #2
   1dadc:	ldr	r8, [sp, #36]	; 0x24
   1dae0:	add	sl, r9, sl
   1dae4:	add	r2, r2, r4
   1dae8:	eor	r4, ip, r0
   1daec:	eor	r8, r7, r8
   1daf0:	eor	r4, r4, r1
   1daf4:	add	lr, sl, lr
   1daf8:	ldr	r7, [pc, #-1024]	; 1d700 <__assert_fail@plt+0xc414>
   1dafc:	ror	fp, fp, #31
   1db00:	add	lr, r4, lr
   1db04:	ldr	r4, [sp, #4]
   1db08:	add	r7, fp, r7
   1db0c:	add	r7, r7, ip
   1db10:	eor	r4, r5, r4
   1db14:	ldr	ip, [pc, #-1052]	; 1d700 <__assert_fail@plt+0xc414>
   1db18:	ldr	r5, [sp, #20]
   1db1c:	add	r2, r2, r1, ror #27
   1db20:	ror	r3, r3, #31
   1db24:	ror	r1, r1, #2
   1db28:	eor	r6, r6, r8
   1db2c:	eor	sl, r0, r1
   1db30:	add	ip, r3, ip
   1db34:	eor	r5, r5, r4
   1db38:	add	lr, lr, r2, ror #27
   1db3c:	eor	r9, r9, r6
   1db40:	eor	sl, sl, r2
   1db44:	add	r0, ip, r0
   1db48:	ror	r2, r2, #2
   1db4c:	ldr	ip, [sp, #36]	; 0x24
   1db50:	eor	fp, fp, r5
   1db54:	ldr	r5, [sp, #40]	; 0x28
   1db58:	eor	r8, r1, r2
   1db5c:	add	sl, r7, sl
   1db60:	ldr	r4, [pc, #-1128]	; 1d700 <__assert_fail@plt+0xc414>
   1db64:	ldr	r7, [sp, #16]
   1db68:	add	sl, sl, lr, ror #27
   1db6c:	eor	r6, ip, r5
   1db70:	ror	r9, r9, #31
   1db74:	eor	r8, r8, lr
   1db78:	ror	lr, lr, #2
   1db7c:	eor	r5, r2, lr
   1db80:	eor	r6, r6, r7
   1db84:	add	r4, r9, r4
   1db88:	ldr	r7, [pc, #-1168]	; 1d700 <__assert_fail@plt+0xc414>
   1db8c:	add	r1, r4, r1
   1db90:	eor	r3, r3, r6
   1db94:	eor	r4, r5, sl
   1db98:	add	r0, r0, r8
   1db9c:	ldmib	sp, {r5, ip}
   1dba0:	add	r0, r0, sl, ror #27
   1dba4:	ror	sl, sl, #2
   1dba8:	eor	r6, lr, sl
   1dbac:	add	fp, r7, fp, ror #31
   1dbb0:	add	r1, r4, r1
   1dbb4:	add	r3, r7, r3, ror #31
   1dbb8:	ldr	r4, [sp]
   1dbbc:	add	r1, r1, r0, ror #27
   1dbc0:	eor	ip, ip, r5
   1dbc4:	add	r2, fp, r2
   1dbc8:	add	lr, r3, lr
   1dbcc:	eor	fp, r6, r0
   1dbd0:	ldr	r3, [sp, #44]	; 0x2c
   1dbd4:	ror	r0, r0, #2
   1dbd8:	eor	ip, ip, r4
   1dbdc:	eor	r4, sl, r0
   1dbe0:	eor	r4, r4, r1
   1dbe4:	add	r3, r3, #64	; 0x40
   1dbe8:	str	r3, [sp, #44]	; 0x2c
   1dbec:	add	lr, lr, r4
   1dbf0:	ldr	r4, [sp, #88]	; 0x58
   1dbf4:	eor	ip, ip, r9
   1dbf8:	add	r2, r2, fp
   1dbfc:	add	r2, r2, r1, ror #27
   1dc00:	cmp	r4, r3
   1dc04:	ror	r1, r1, #2
   1dc08:	ldr	r3, [sp, #76]	; 0x4c
   1dc0c:	eor	r5, r0, r1
   1dc10:	add	ip, r7, ip, ror #31
   1dc14:	add	r3, r3, r2, ror #2
   1dc18:	eor	r5, r5, r2
   1dc1c:	add	sl, ip, sl
   1dc20:	add	sl, sl, r5
   1dc24:	str	r3, [sp, #76]	; 0x4c
   1dc28:	mov	r5, r3
   1dc2c:	ldr	r3, [sp, #84]	; 0x54
   1dc30:	add	lr, lr, r2, ror #27
   1dc34:	add	r3, r3, r0
   1dc38:	mov	r0, r3
   1dc3c:	str	r3, [sp, #84]	; 0x54
   1dc40:	ldr	r3, [sp, #68]	; 0x44
   1dc44:	add	ip, sl, lr, ror #27
   1dc48:	add	r3, r3, ip
   1dc4c:	mov	ip, r3
   1dc50:	str	r3, [sp, #68]	; 0x44
   1dc54:	ldr	r3, [sp, #72]	; 0x48
   1dc58:	mov	r2, r0
   1dc5c:	add	r3, r3, lr
   1dc60:	mov	lr, r3
   1dc64:	str	r3, [sp, #72]	; 0x48
   1dc68:	ldr	r3, [sp, #80]	; 0x50
   1dc6c:	add	r3, r3, r1
   1dc70:	mov	r4, r3
   1dc74:	str	r3, [sp, #80]	; 0x50
   1dc78:	ldr	r3, [sp, #92]	; 0x5c
   1dc7c:	mov	r1, ip
   1dc80:	mov	r6, r4
   1dc84:	str	r0, [r3, #16]
   1dc88:	str	lr, [r3, #4]
   1dc8c:	mov	r0, lr
   1dc90:	str	r5, [r3, #8]
   1dc94:	str	ip, [r3]
   1dc98:	str	r4, [r3, #12]
   1dc9c:	mov	lr, r1
   1dca0:	bhi	1c6f0 <__assert_fail@plt+0xb404>
   1dca4:	add	sp, sp, #100	; 0x64
   1dca8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1dcac:	push	{r4, r5, r6, r7, r8, lr}
   1dcb0:	mov	r4, r0
   1dcb4:	ldr	r0, [r0, #28]
   1dcb8:	ldr	r3, [r4, #20]
   1dcbc:	cmp	r0, #55	; 0x37
   1dcc0:	add	r3, r0, r3
   1dcc4:	movhi	r6, #128	; 0x80
   1dcc8:	movls	r6, #64	; 0x40
   1dccc:	movhi	r2, #120	; 0x78
   1dcd0:	movls	r2, #56	; 0x38
   1dcd4:	movhi	ip, #31
   1dcd8:	movls	ip, #15
   1dcdc:	movhi	lr, #30
   1dce0:	movls	lr, #14
   1dce4:	cmp	r0, r3
   1dce8:	mov	r5, r1
   1dcec:	ldrhi	r1, [r4, #24]
   1dcf0:	ldrls	r7, [r4, #24]
   1dcf4:	addhi	r7, r1, #1
   1dcf8:	lsr	r1, r3, #29
   1dcfc:	str	r3, [r4, #20]
   1dd00:	add	lr, lr, #8
   1dd04:	add	ip, ip, #8
   1dd08:	orr	r1, r1, r7, lsl #3
   1dd0c:	lsl	r3, r3, #3
   1dd10:	strhi	r7, [r4, #24]
   1dd14:	rev	r3, r3
   1dd18:	add	r7, r4, #32
   1dd1c:	rev	r1, r1
   1dd20:	str	r1, [r4, lr, lsl #2]
   1dd24:	sub	r2, r2, r0
   1dd28:	str	r3, [r4, ip, lsl #2]
   1dd2c:	add	r0, r7, r0
   1dd30:	ldr	r1, [pc, #84]	; 1dd8c <__assert_fail@plt+0xcaa0>
   1dd34:	bl	11058 <memcpy@plt>
   1dd38:	mov	r0, r7
   1dd3c:	mov	r2, r4
   1dd40:	mov	r1, r6
   1dd44:	bl	1c674 <__assert_fail@plt+0xb388>
   1dd48:	ldr	r3, [r4]
   1dd4c:	mov	r0, r5
   1dd50:	rev	r3, r3
   1dd54:	str	r3, [r5]
   1dd58:	ldr	r3, [r4, #4]
   1dd5c:	rev	r3, r3
   1dd60:	str	r3, [r5, #4]
   1dd64:	ldr	r3, [r4, #8]
   1dd68:	rev	r3, r3
   1dd6c:	str	r3, [r5, #8]
   1dd70:	ldr	r3, [r4, #12]
   1dd74:	rev	r3, r3
   1dd78:	str	r3, [r5, #12]
   1dd7c:	ldr	r3, [r4, #16]
   1dd80:	rev	r3, r3
   1dd84:	str	r3, [r5, #16]
   1dd88:	pop	{r4, r5, r6, r7, r8, pc}
   1dd8c:	andeq	r1, r4, ip, lsr #12
   1dd90:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1dd94:	mov	r6, r2
   1dd98:	ldr	r4, [r2, #28]
   1dd9c:	mov	r8, r0
   1dda0:	cmp	r4, #0
   1dda4:	mov	r5, r1
   1dda8:	bne	1de98 <__assert_fail@plt+0xcbac>
   1ddac:	cmp	r5, #63	; 0x3f
   1ddb0:	bls	1de88 <__assert_fail@plt+0xcb9c>
   1ddb4:	tst	r8, #3
   1ddb8:	beq	1de6c <__assert_fail@plt+0xcb80>
   1ddbc:	cmp	r5, #64	; 0x40
   1ddc0:	add	r7, r6, #32
   1ddc4:	beq	1de44 <__assert_fail@plt+0xcb58>
   1ddc8:	mov	sl, r5
   1ddcc:	mov	r4, r8
   1ddd0:	mov	r9, #64	; 0x40
   1ddd4:	add	r2, r4, #64	; 0x40
   1ddd8:	mov	r3, r7
   1dddc:	ldr	lr, [r4]
   1dde0:	ldr	ip, [r4, #4]
   1dde4:	ldr	r0, [r4, #8]
   1dde8:	ldr	r1, [r4, #12]
   1ddec:	add	r4, r4, #16
   1ddf0:	cmp	r4, r2
   1ddf4:	str	lr, [r3]
   1ddf8:	str	ip, [r3, #4]
   1ddfc:	str	r0, [r3, #8]
   1de00:	str	r1, [r3, #12]
   1de04:	add	r3, r3, #16
   1de08:	bne	1dddc <__assert_fail@plt+0xcaf0>
   1de0c:	sub	sl, sl, #64	; 0x40
   1de10:	mov	r2, r6
   1de14:	mov	r1, r9
   1de18:	mov	r0, r7
   1de1c:	bl	1c674 <__assert_fail@plt+0xb388>
   1de20:	cmp	sl, #64	; 0x40
   1de24:	bhi	1ddd4 <__assert_fail@plt+0xcae8>
   1de28:	sub	r3, r5, #65	; 0x41
   1de2c:	bic	r2, r3, #63	; 0x3f
   1de30:	mov	r3, r2
   1de34:	sub	r5, r5, #64	; 0x40
   1de38:	add	r2, r2, #64	; 0x40
   1de3c:	sub	r5, r5, r3
   1de40:	add	r8, r8, r2
   1de44:	ldr	r4, [r6, #28]
   1de48:	mov	r1, r8
   1de4c:	add	r0, r7, r4
   1de50:	mov	r2, r5
   1de54:	add	r4, r4, r5
   1de58:	bl	11058 <memcpy@plt>
   1de5c:	cmp	r4, #63	; 0x3f
   1de60:	bhi	1ded8 <__assert_fail@plt+0xcbec>
   1de64:	str	r4, [r6, #28]
   1de68:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1de6c:	bic	r4, r5, #63	; 0x3f
   1de70:	mov	r0, r8
   1de74:	mov	r1, r4
   1de78:	mov	r2, r6
   1de7c:	bl	1c674 <__assert_fail@plt+0xb388>
   1de80:	and	r5, r5, #63	; 0x3f
   1de84:	add	r8, r8, r4
   1de88:	cmp	r5, #0
   1de8c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1de90:	add	r7, r6, #32
   1de94:	b	1de44 <__assert_fail@plt+0xcb58>
   1de98:	rsb	r7, r4, #128	; 0x80
   1de9c:	cmp	r7, r1
   1dea0:	movcs	r7, r1
   1dea4:	add	r9, r2, #32
   1dea8:	mov	r1, r8
   1deac:	mov	r2, r7
   1deb0:	add	r0, r9, r4
   1deb4:	bl	11058 <memcpy@plt>
   1deb8:	ldr	r1, [r6, #28]
   1debc:	add	r1, r7, r1
   1dec0:	cmp	r1, #64	; 0x40
   1dec4:	str	r1, [r6, #28]
   1dec8:	bhi	1df04 <__assert_fail@plt+0xcc18>
   1decc:	add	r8, r8, r7
   1ded0:	sub	r5, r5, r7
   1ded4:	b	1ddac <__assert_fail@plt+0xcac0>
   1ded8:	sub	r4, r4, #64	; 0x40
   1dedc:	mov	r2, r6
   1dee0:	mov	r1, #64	; 0x40
   1dee4:	mov	r0, r7
   1dee8:	bl	1c674 <__assert_fail@plt+0xb388>
   1deec:	mov	r0, r7
   1def0:	mov	r2, r4
   1def4:	add	r1, r6, #96	; 0x60
   1def8:	bl	11058 <memcpy@plt>
   1defc:	str	r4, [r6, #28]
   1df00:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1df04:	mov	r2, r6
   1df08:	mov	r0, r9
   1df0c:	bic	r1, r1, #63	; 0x3f
   1df10:	bl	1c674 <__assert_fail@plt+0xb388>
   1df14:	ldr	r2, [r6, #28]
   1df18:	add	r1, r4, r7
   1df1c:	and	r2, r2, #63	; 0x3f
   1df20:	bic	r1, r1, #63	; 0x3f
   1df24:	add	r1, r9, r1
   1df28:	mov	r0, r9
   1df2c:	str	r2, [r6, #28]
   1df30:	bl	11058 <memcpy@plt>
   1df34:	b	1decc <__assert_fail@plt+0xcbe0>
   1df38:	push	{r4, r5, r6, r7, lr}
   1df3c:	sub	sp, sp, #164	; 0xa4
   1df40:	ldr	r3, [pc, #268]	; 1e054 <__assert_fail@plt+0xcd68>
   1df44:	ldr	r5, [pc, #268]	; 1e058 <__assert_fail@plt+0xcd6c>
   1df48:	ldr	lr, [pc, #268]	; 1e05c <__assert_fail@plt+0xcd70>
   1df4c:	ldr	ip, [pc, #268]	; 1e060 <__assert_fail@plt+0xcd74>
   1df50:	ldr	r6, [pc, #268]	; 1e064 <__assert_fail@plt+0xcd78>
   1df54:	mov	r4, r2
   1df58:	str	r3, [sp, #4]
   1df5c:	mov	r2, sp
   1df60:	mov	r3, #0
   1df64:	str	r6, [sp]
   1df68:	str	lr, [sp, #12]
   1df6c:	str	r5, [sp, #8]
   1df70:	str	ip, [sp, #16]
   1df74:	str	r3, [sp, #24]
   1df78:	str	r3, [sp, #20]
   1df7c:	str	r3, [sp, #28]
   1df80:	bl	1dd90 <__assert_fail@plt+0xcaa4>
   1df84:	ldr	r0, [sp, #28]
   1df88:	ldr	r3, [sp, #20]
   1df8c:	cmp	r0, #55	; 0x37
   1df90:	add	r3, r0, r3
   1df94:	movhi	r5, #128	; 0x80
   1df98:	movls	r5, #64	; 0x40
   1df9c:	movhi	r2, #120	; 0x78
   1dfa0:	movls	r2, #56	; 0x38
   1dfa4:	movhi	lr, #31
   1dfa8:	movls	lr, #15
   1dfac:	movhi	r6, #30
   1dfb0:	movls	r6, #14
   1dfb4:	cmp	r0, r3
   1dfb8:	add	r7, sp, #160	; 0xa0
   1dfbc:	ldrhi	ip, [sp, #24]
   1dfc0:	ldrls	r1, [sp, #24]
   1dfc4:	str	r3, [sp, #20]
   1dfc8:	add	r6, r7, r6, lsl #2
   1dfcc:	addhi	r1, ip, #1
   1dfd0:	lsr	ip, r3, #29
   1dfd4:	strhi	r1, [sp, #24]
   1dfd8:	add	lr, r7, lr, lsl #2
   1dfdc:	orr	ip, ip, r1, lsl #3
   1dfe0:	lsl	r3, r3, #3
   1dfe4:	add	r1, sp, #32
   1dfe8:	rev	ip, ip
   1dfec:	rev	r3, r3
   1dff0:	sub	r2, r2, r0
   1dff4:	add	r0, r1, r0
   1dff8:	ldr	r1, [pc, #104]	; 1e068 <__assert_fail@plt+0xcd7c>
   1dffc:	str	ip, [r6, #-128]	; 0xffffff80
   1e000:	str	r3, [lr, #-128]	; 0xffffff80
   1e004:	bl	11058 <memcpy@plt>
   1e008:	mov	r2, sp
   1e00c:	mov	r1, r5
   1e010:	add	r0, sp, #32
   1e014:	bl	1c674 <__assert_fail@plt+0xb388>
   1e018:	ldmib	sp, {r0, r1, r2, r3}
   1e01c:	ldr	ip, [sp]
   1e020:	rev	r0, r0
   1e024:	rev	ip, ip
   1e028:	rev	r1, r1
   1e02c:	rev	r2, r2
   1e030:	rev	r3, r3
   1e034:	str	r0, [r4, #4]
   1e038:	str	ip, [r4]
   1e03c:	mov	r0, r4
   1e040:	str	r1, [r4, #8]
   1e044:	str	r2, [r4, #12]
   1e048:	str	r3, [r4, #16]
   1e04c:	add	sp, sp, #164	; 0xa4
   1e050:	pop	{r4, r5, r6, r7, pc}
   1e054:	svc	0x00cdab89
   1e058:	ldmls	sl!, {r1, r2, r3, r4, r5, r6, r7, sl, fp, ip, lr, pc}
   1e05c:	eorsne	r5, r2, r6, ror r4
   1e060:	bicsgt	lr, r2, #240, 2	; 0x3c
   1e064:	strbvs	r2, [r5, -r1, lsl #6]
   1e068:	andeq	r1, r4, ip, lsr #12
   1e06c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1e070:	mov	r5, r0
   1e074:	sub	sp, sp, #176	; 0xb0
   1e078:	ldr	r0, [pc, #208]	; 1e150 <__assert_fail@plt+0xce64>
   1e07c:	mov	r9, r1
   1e080:	mov	r4, r2
   1e084:	mov	r8, r3
   1e088:	bl	3d47c <__assert_fail@plt+0x2c190>
   1e08c:	subs	r6, r0, #0
   1e090:	moveq	r0, #1
   1e094:	beq	1e104 <__assert_fail@plt+0xce18>
   1e098:	add	r0, sp, #4
   1e09c:	blx	r4
   1e0a0:	mov	r7, #1
   1e0a4:	mov	sl, #32768	; 0x8000
   1e0a8:	mov	r4, #0
   1e0ac:	b	1e0c8 <__assert_fail@plt+0xcddc>
   1e0b0:	bl	112b0 <fread_unlocked@plt>
   1e0b4:	add	r4, r4, r0
   1e0b8:	cmp	r4, #32768	; 0x8000
   1e0bc:	beq	1e10c <__assert_fail@plt+0xce20>
   1e0c0:	cmp	r0, #0
   1e0c4:	beq	1e120 <__assert_fail@plt+0xce34>
   1e0c8:	ldr	ip, [r5]
   1e0cc:	rsb	r2, r4, #32768	; 0x8000
   1e0d0:	tst	ip, #16
   1e0d4:	add	r0, r6, r4
   1e0d8:	mov	r3, r5
   1e0dc:	mov	r1, r7
   1e0e0:	beq	1e0b0 <__assert_fail@plt+0xcdc4>
   1e0e4:	cmp	r4, #0
   1e0e8:	bne	1e13c <__assert_fail@plt+0xce50>
   1e0ec:	mov	r1, r9
   1e0f0:	add	r0, sp, #4
   1e0f4:	blx	r8
   1e0f8:	mov	r0, r6
   1e0fc:	bl	3618c <__assert_fail@plt+0x24ea0>
   1e100:	mov	r0, #0
   1e104:	add	sp, sp, #176	; 0xb0
   1e108:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1e10c:	add	r2, sp, #4
   1e110:	mov	r1, sl
   1e114:	mov	r0, r6
   1e118:	bl	1e338 <__assert_fail@plt+0xd04c>
   1e11c:	b	1e0a8 <__assert_fail@plt+0xcdbc>
   1e120:	ldr	r3, [r5]
   1e124:	tst	r3, #32
   1e128:	beq	1e0e4 <__assert_fail@plt+0xcdf8>
   1e12c:	mov	r0, r6
   1e130:	bl	3618c <__assert_fail@plt+0x24ea0>
   1e134:	mov	r0, #1
   1e138:	b	1e104 <__assert_fail@plt+0xce18>
   1e13c:	mov	r1, r4
   1e140:	add	r2, sp, #4
   1e144:	mov	r0, r6
   1e148:	bl	20844 <__assert_fail@plt+0xf558>
   1e14c:	b	1e0ec <__assert_fail@plt+0xce00>
   1e150:	andeq	r8, r0, r8, asr #32
   1e154:	ldr	r3, [pc, #4]	; 1e160 <__assert_fail@plt+0xce74>
   1e158:	ldr	r2, [pc, #4]	; 1e164 <__assert_fail@plt+0xce78>
   1e15c:	b	1e06c <__assert_fail@plt+0xcd80>
   1e160:	andeq	r0, r2, r0, ror #14
   1e164:	andeq	lr, r1, ip, ror r1
   1e168:	ldr	r3, [pc, #4]	; 1e174 <__assert_fail@plt+0xce88>
   1e16c:	ldr	r2, [pc, #4]	; 1e178 <__assert_fail@plt+0xce8c>
   1e170:	b	1e06c <__assert_fail@plt+0xcd80>
   1e174:	ldrdeq	r0, [r2], -r8
   1e178:	strdeq	lr, [r1], -r4
   1e17c:	ldr	r2, [pc, #80]	; 1e1d4 <__assert_fail@plt+0xcee8>
   1e180:	ldr	r3, [pc, #80]	; 1e1d8 <__assert_fail@plt+0xceec>
   1e184:	push	{r4, r5, lr}
   1e188:	ldr	ip, [pc, #76]	; 1e1dc <__assert_fail@plt+0xcef0>
   1e18c:	ldr	r5, [pc, #76]	; 1e1e0 <__assert_fail@plt+0xcef4>
   1e190:	ldr	r4, [pc, #76]	; 1e1e4 <__assert_fail@plt+0xcef8>
   1e194:	ldr	lr, [pc, #76]	; 1e1e8 <__assert_fail@plt+0xcefc>
   1e198:	ldr	r1, [pc, #76]	; 1e1ec <__assert_fail@plt+0xcf00>
   1e19c:	str	r2, [r0]
   1e1a0:	ldr	r2, [pc, #72]	; 1e1f0 <__assert_fail@plt+0xcf04>
   1e1a4:	str	r3, [r0, #4]
   1e1a8:	mov	r3, #0
   1e1ac:	str	r5, [r0, #8]
   1e1b0:	str	r4, [r0, #12]
   1e1b4:	str	lr, [r0, #16]
   1e1b8:	str	ip, [r0, #20]
   1e1bc:	str	r1, [r0, #24]
   1e1c0:	str	r2, [r0, #28]
   1e1c4:	str	r3, [r0, #36]	; 0x24
   1e1c8:	str	r3, [r0, #32]
   1e1cc:	str	r3, [r0, #40]	; 0x28
   1e1d0:	pop	{r4, r5, pc}
   1e1d4:	bvs	297b78 <optarg@@GLIBC_2.4+0x2459d0>
   1e1d8:	bllt	1a09bf4 <optarg@@GLIBC_2.4+0x19b7a4c>
   1e1dc:	blls	178414 <optarg@@GLIBC_2.4+0x12626c>
   1e1e0:	stclcc	3, cr15, [lr], #-456	; 0xfffffe38
   1e1e4:	strbge	pc, [pc, #-1338]	; 1dcb2 <__assert_fail@plt+0xc9c6>	; <UNPREDICTABLE>
   1e1e8:	tstpl	lr, pc, ror r2
   1e1ec:	svcne	0x0083d9ab
   1e1f0:	blpl	ff85165c <optarg@@GLIBC_2.4+0xff7ff4b4>
   1e1f4:	ldr	r2, [pc, #80]	; 1e24c <__assert_fail@plt+0xcf60>
   1e1f8:	ldr	r3, [pc, #80]	; 1e250 <__assert_fail@plt+0xcf64>
   1e1fc:	push	{r4, r5, lr}
   1e200:	ldr	ip, [pc, #76]	; 1e254 <__assert_fail@plt+0xcf68>
   1e204:	ldr	r5, [pc, #76]	; 1e258 <__assert_fail@plt+0xcf6c>
   1e208:	ldr	r4, [pc, #76]	; 1e25c <__assert_fail@plt+0xcf70>
   1e20c:	ldr	lr, [pc, #76]	; 1e260 <__assert_fail@plt+0xcf74>
   1e210:	ldr	r1, [pc, #76]	; 1e264 <__assert_fail@plt+0xcf78>
   1e214:	str	r2, [r0]
   1e218:	ldr	r2, [pc, #72]	; 1e268 <__assert_fail@plt+0xcf7c>
   1e21c:	str	r3, [r0, #4]
   1e220:	mov	r3, #0
   1e224:	str	r5, [r0, #8]
   1e228:	str	r4, [r0, #12]
   1e22c:	str	lr, [r0, #16]
   1e230:	str	ip, [r0, #20]
   1e234:	str	r1, [r0, #24]
   1e238:	str	r2, [r0, #28]
   1e23c:	str	r3, [r0, #36]	; 0x24
   1e240:	str	r3, [r0, #32]
   1e244:	str	r3, [r0, #40]	; 0x28
   1e248:	pop	{r4, r5, pc}
   1e24c:	ldrdgt	r9, [r5, -r8]
   1e250:	ldrbtcc	sp, [ip], -r7, lsl #10
   1e254:	ldmdavs	r8, {r0, r4, r8, sl, ip}^
   1e258:	rsbscc	sp, r0, r7, lsl sp
   1e25c:			; <UNDEFINED> instruction: 0xf70e5939
   1e260:			; <UNDEFINED> instruction: 0xffc00b31
   1e264:	ldrbtvs	r8, [r9], #4007	; 0xfa7
   1e268:	cdplt	15, 15, cr4, cr10, cr4, {5}
   1e26c:	ldr	r2, [r0]
   1e270:	mov	r3, r0
   1e274:	rev	r2, r2
   1e278:	str	r2, [r1]
   1e27c:	ldr	r2, [r3, #4]
   1e280:	mov	r0, r1
   1e284:	rev	r2, r2
   1e288:	str	r2, [r1, #4]
   1e28c:	ldr	r2, [r3, #8]
   1e290:	rev	r2, r2
   1e294:	str	r2, [r1, #8]
   1e298:	ldr	r2, [r3, #12]
   1e29c:	rev	r2, r2
   1e2a0:	str	r2, [r1, #12]
   1e2a4:	ldr	r2, [r3, #16]
   1e2a8:	rev	r2, r2
   1e2ac:	str	r2, [r1, #16]
   1e2b0:	ldr	r2, [r3, #20]
   1e2b4:	rev	r2, r2
   1e2b8:	str	r2, [r1, #20]
   1e2bc:	ldr	r2, [r3, #24]
   1e2c0:	rev	r2, r2
   1e2c4:	str	r2, [r1, #24]
   1e2c8:	ldr	r3, [r3, #28]
   1e2cc:	rev	r3, r3
   1e2d0:	str	r3, [r1, #28]
   1e2d4:	bx	lr
   1e2d8:	ldr	r2, [r0]
   1e2dc:	mov	r3, r0
   1e2e0:	rev	r2, r2
   1e2e4:	str	r2, [r1]
   1e2e8:	ldr	r2, [r3, #4]
   1e2ec:	mov	r0, r1
   1e2f0:	rev	r2, r2
   1e2f4:	str	r2, [r1, #4]
   1e2f8:	ldr	r2, [r3, #8]
   1e2fc:	rev	r2, r2
   1e300:	str	r2, [r1, #8]
   1e304:	ldr	r2, [r3, #12]
   1e308:	rev	r2, r2
   1e30c:	str	r2, [r1, #12]
   1e310:	ldr	r2, [r3, #16]
   1e314:	rev	r2, r2
   1e318:	str	r2, [r1, #16]
   1e31c:	ldr	r2, [r3, #20]
   1e320:	rev	r2, r2
   1e324:	str	r2, [r1, #20]
   1e328:	ldr	r3, [r3, #24]
   1e32c:	rev	r3, r3
   1e330:	str	r3, [r1, #24]
   1e334:	bx	lr
   1e338:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e33c:	sub	sp, sp, #132	; 0x84
   1e340:	ldr	r3, [r2, #32]
   1e344:	mov	lr, r2
   1e348:	str	r2, [sp, #124]	; 0x7c
   1e34c:	ldr	r2, [r2, #36]	; 0x24
   1e350:	add	r3, r1, r3
   1e354:	bic	ip, r1, #3
   1e358:	cmp	r1, r3
   1e35c:	addhi	r2, r2, #1
   1e360:	add	ip, r0, ip
   1e364:	str	r3, [lr, #32]
   1e368:	add	r1, lr, #16
   1e36c:	ldr	r3, [lr, #4]
   1e370:	cmp	r0, ip
   1e374:	str	r2, [lr, #36]	; 0x24
   1e378:	str	ip, [sp, #120]	; 0x78
   1e37c:	ldr	r9, [lr]
   1e380:	mov	r6, r3
   1e384:	ldr	r7, [lr, #8]
   1e388:	ldr	r2, [lr, #12]
   1e38c:	ldm	r1, {r1, sl, ip}
   1e390:	ldr	r5, [lr, #28]
   1e394:	bcs	206b0 <__assert_fail@plt+0xf3c4>
   1e398:	str	r5, [sp, #116]	; 0x74
   1e39c:	str	r2, [sp, #100]	; 0x64
   1e3a0:	str	r3, [sp, #92]	; 0x5c
   1e3a4:	mov	r8, r5
   1e3a8:	mov	r3, r9
   1e3ac:	mov	r5, r2
   1e3b0:	mov	r2, ip
   1e3b4:	str	r0, [sp, #4]
   1e3b8:	str	ip, [sp, #112]	; 0x70
   1e3bc:	str	sl, [sp, #108]	; 0x6c
   1e3c0:	str	r1, [sp, #104]	; 0x68
   1e3c4:	str	r7, [sp, #96]	; 0x60
   1e3c8:	str	r9, [sp, #88]	; 0x58
   1e3cc:	ldr	r0, [sp, #4]
   1e3d0:	ror	lr, r1, #11
   1e3d4:	ldr	ip, [pc, #4088]	; 1f3d4 <__assert_fail@plt+0xe0e8>
   1e3d8:	ldr	fp, [r0]
   1e3dc:	eor	lr, lr, r1, ror #6
   1e3e0:	rev	r4, fp
   1e3e4:	add	ip, r4, ip
   1e3e8:	orr	r9, r3, r6
   1e3ec:	str	r4, [sp, #8]
   1e3f0:	eor	lr, lr, r1, ror #25
   1e3f4:	ror	r4, r3, #13
   1e3f8:	add	lr, lr, ip
   1e3fc:	and	r9, r9, r7
   1e400:	and	ip, r3, r6
   1e404:	eor	r4, r4, r3, ror #2
   1e408:	orr	ip, r9, ip
   1e40c:	eor	r4, r4, r3, ror #22
   1e410:	eor	r0, r2, sl
   1e414:	add	r4, r4, ip
   1e418:	ldr	ip, [sp, #4]
   1e41c:	and	r0, r0, r1
   1e420:	eor	r0, r0, r2
   1e424:	ldr	fp, [ip, #4]
   1e428:	add	r0, lr, r0
   1e42c:	add	r0, r0, r8
   1e430:	add	lr, r4, r0
   1e434:	rev	r4, fp
   1e438:	add	r2, r2, r4
   1e43c:	add	r2, r2, #1895825408	; 0x71000000
   1e440:	add	r5, r0, r5
   1e444:	orr	r9, lr, r3
   1e448:	eor	r0, r1, sl
   1e44c:	ror	ip, lr, #13
   1e450:	add	r2, r2, #3620864	; 0x374000
   1e454:	and	r9, r9, r6
   1e458:	and	r8, lr, r3
   1e45c:	and	r0, r0, r5
   1e460:	eor	ip, ip, lr, ror #2
   1e464:	add	r2, r2, #1168	; 0x490
   1e468:	eor	r0, r0, sl
   1e46c:	orr	r8, r9, r8
   1e470:	eor	ip, ip, lr, ror #22
   1e474:	add	r2, r2, #1
   1e478:	add	r2, r0, r2
   1e47c:	add	r0, ip, r8
   1e480:	ldr	ip, [sp, #4]
   1e484:	str	r4, [sp, #12]
   1e488:	ror	r4, r5, #11
   1e48c:	eor	r4, r4, r5, ror #6
   1e490:	ldr	fp, [ip, #8]
   1e494:	eor	r4, r4, r5, ror #25
   1e498:	add	r2, r2, r4
   1e49c:	add	r0, r0, r2
   1e4a0:	add	r7, r2, r7
   1e4a4:	rev	r8, fp
   1e4a8:	eor	r2, r5, r1
   1e4ac:	ldr	fp, [pc, #3876]	; 1f3d8 <__assert_fail@plt+0xe0ec>
   1e4b0:	add	sl, r8, sl
   1e4b4:	and	r2, r2, r7
   1e4b8:	add	fp, sl, fp
   1e4bc:	eor	r2, r2, r1
   1e4c0:	orr	r9, lr, r0
   1e4c4:	ror	ip, r0, #13
   1e4c8:	add	r2, r2, fp
   1e4cc:	ldr	fp, [sp, #4]
   1e4d0:	and	r9, r9, r3
   1e4d4:	str	r8, [sp, #16]
   1e4d8:	eor	ip, ip, r0, ror #2
   1e4dc:	and	r8, lr, r0
   1e4e0:	eor	ip, ip, r0, ror #22
   1e4e4:	ror	r4, r7, #11
   1e4e8:	orr	r8, r9, r8
   1e4ec:	add	r8, ip, r8
   1e4f0:	eor	r4, r4, r7, ror #6
   1e4f4:	ldr	ip, [fp, #12]
   1e4f8:	eor	r4, r4, r7, ror #25
   1e4fc:	add	r2, r2, r4
   1e500:	rev	ip, ip
   1e504:	add	r6, r2, r6
   1e508:	add	r1, ip, r1
   1e50c:	add	r2, r8, r2
   1e510:	add	r1, r1, #-385875968	; 0xe9000000
   1e514:	eor	r4, r5, r7
   1e518:	orr	r8, r0, r2
   1e51c:	str	ip, [sp, #20]
   1e520:	add	r1, r1, #11862016	; 0xb50000
   1e524:	ror	ip, r2, #13
   1e528:	and	sl, r0, r2
   1e52c:	and	r4, r4, r6
   1e530:	ror	r9, r6, #11
   1e534:	and	r8, r8, lr
   1e538:	eor	ip, ip, r2, ror #2
   1e53c:	add	r1, r1, #56064	; 0xdb00
   1e540:	eor	r4, r4, r5
   1e544:	orr	r8, r8, sl
   1e548:	eor	ip, ip, r2, ror #22
   1e54c:	eor	r9, r9, r6, ror #6
   1e550:	add	r1, r1, #165	; 0xa5
   1e554:	eor	r9, r9, r6, ror #25
   1e558:	add	r1, r4, r1
   1e55c:	add	r4, ip, r8
   1e560:	ldr	ip, [fp, #16]
   1e564:	add	r1, r1, r9
   1e568:	add	r4, r4, r1
   1e56c:	add	r3, r1, r3
   1e570:	ldr	sl, [pc, #3684]	; 1f3dc <__assert_fail@plt+0xe0f0>
   1e574:	rev	r1, ip
   1e578:	mov	r9, r1
   1e57c:	eor	r1, r7, r6
   1e580:	add	sl, r9, sl
   1e584:	str	r9, [sp, #56]	; 0x38
   1e588:	and	r1, r1, r3
   1e58c:	ror	r9, r3, #11
   1e590:	orr	r8, r2, r4
   1e594:	eor	r1, r1, r7
   1e598:	ror	ip, r4, #13
   1e59c:	add	r5, sl, r5
   1e5a0:	eor	r9, r9, r3, ror #6
   1e5a4:	and	sl, r2, r4
   1e5a8:	add	r5, r1, r5
   1e5ac:	ldr	fp, [fp, #20]
   1e5b0:	and	r8, r8, r0
   1e5b4:	eor	ip, ip, r4, ror #2
   1e5b8:	eor	r9, r9, r3, ror #25
   1e5bc:	orr	r8, r8, sl
   1e5c0:	add	r9, r5, r9
   1e5c4:	eor	ip, ip, r4, ror #22
   1e5c8:	ldr	sl, [pc, #3600]	; 1f3e0 <__assert_fail@plt+0xe0f4>
   1e5cc:	add	r5, lr, r9
   1e5d0:	eor	r1, r6, r3
   1e5d4:	rev	lr, fp
   1e5d8:	add	ip, ip, r8
   1e5dc:	add	ip, ip, r9
   1e5e0:	add	sl, lr, sl
   1e5e4:	and	r1, r1, r5
   1e5e8:	eor	r1, r1, r6
   1e5ec:	add	r7, sl, r7
   1e5f0:	orr	r8, r4, ip
   1e5f4:	str	lr, [sp, #64]	; 0x40
   1e5f8:	ror	r9, r5, #11
   1e5fc:	ror	lr, ip, #13
   1e600:	add	r7, r1, r7
   1e604:	ldr	r1, [sp, #4]
   1e608:	and	sl, r4, ip
   1e60c:	eor	r9, r9, r5, ror #6
   1e610:	and	r8, r8, r2
   1e614:	eor	lr, lr, ip, ror #2
   1e618:	eor	r9, r9, r5, ror #25
   1e61c:	orr	r8, r8, sl
   1e620:	eor	lr, lr, ip, ror #22
   1e624:	add	r7, r7, r9
   1e628:	ldr	fp, [r1, #24]
   1e62c:	add	lr, lr, r8
   1e630:	add	lr, lr, r7
   1e634:	ldr	sl, [pc, #3496]	; 1f3e4 <__assert_fail@plt+0xe0f8>
   1e638:	add	r0, r0, r7
   1e63c:	rev	r7, fp
   1e640:	eor	r1, r3, r5
   1e644:	ldr	fp, [sp, #4]
   1e648:	add	sl, r7, sl
   1e64c:	orr	r8, ip, lr
   1e650:	str	r7, [sp, #68]	; 0x44
   1e654:	ror	r7, lr, #13
   1e658:	and	r1, r1, r0
   1e65c:	ror	r9, r0, #11
   1e660:	add	r6, sl, r6
   1e664:	and	r8, r8, r4
   1e668:	and	sl, ip, lr
   1e66c:	eor	r7, r7, lr, ror #2
   1e670:	eor	r1, r1, r3
   1e674:	orr	r8, r8, sl
   1e678:	eor	r7, r7, lr, ror #22
   1e67c:	eor	r9, r9, r0, ror #6
   1e680:	eor	r9, r9, r0, ror #25
   1e684:	add	r6, r1, r6
   1e688:	add	r1, r7, r8
   1e68c:	ldr	r7, [fp, #28]
   1e690:	add	r6, r6, r9
   1e694:	add	r1, r1, r6
   1e698:	add	r2, r2, r6
   1e69c:	rev	r6, r7
   1e6a0:	mov	sl, r6
   1e6a4:	str	sl, [sp, #28]
   1e6a8:	add	sl, sl, #-1426063360	; 0xab000000
   1e6ac:	add	sl, sl, #1851392	; 0x1c4000
   1e6b0:	eor	r6, r5, r0
   1e6b4:	add	sl, sl, #7872	; 0x1ec0
   1e6b8:	orr	r8, lr, r1
   1e6bc:	add	sl, sl, #21
   1e6c0:	and	r6, r6, r2
   1e6c4:	ror	r9, r2, #11
   1e6c8:	ror	r7, r1, #13
   1e6cc:	eor	r6, r6, r5
   1e6d0:	add	r3, sl, r3
   1e6d4:	eor	r9, r9, r2, ror #6
   1e6d8:	and	sl, lr, r1
   1e6dc:	and	r8, r8, ip
   1e6e0:	eor	r7, r7, r1, ror #2
   1e6e4:	eor	r9, r9, r2, ror #25
   1e6e8:	eor	r7, r7, r1, ror #22
   1e6ec:	add	r3, r6, r3
   1e6f0:	orr	r8, r8, sl
   1e6f4:	add	r3, r3, r9
   1e6f8:	add	r8, r7, r8
   1e6fc:	ldr	r9, [fp, #32]
   1e700:	add	r8, r8, r3
   1e704:	add	r4, r4, r3
   1e708:	ldr	sl, [pc, #3288]	; 1f3e8 <__assert_fail@plt+0xe0fc>
   1e70c:	rev	r6, r9
   1e710:	eor	r3, r0, r2
   1e714:	add	sl, r6, sl
   1e718:	orr	r7, r1, r8
   1e71c:	str	r6, [sp, #72]	; 0x48
   1e720:	and	r3, r3, r4
   1e724:	ror	r9, r4, #11
   1e728:	ror	r6, r8, #13
   1e72c:	eor	r3, r3, r0
   1e730:	add	r5, sl, r5
   1e734:	eor	r9, r9, r4, ror #6
   1e738:	and	sl, r1, r8
   1e73c:	and	r7, r7, lr
   1e740:	eor	r6, r6, r8, ror #2
   1e744:	eor	r9, r9, r4, ror #25
   1e748:	orr	r7, r7, sl
   1e74c:	eor	r6, r6, r8, ror #22
   1e750:	ldr	sl, [fp, #36]	; 0x24
   1e754:	add	r5, r3, r5
   1e758:	add	r5, r5, r9
   1e75c:	add	r3, r6, r7
   1e760:	add	r3, r3, r5
   1e764:	add	ip, ip, r5
   1e768:	rev	r5, sl
   1e76c:	ldr	sl, [pc, #3192]	; 1f3ec <__assert_fail@plt+0xe100>
   1e770:	mov	r6, r5
   1e774:	eor	r5, r2, r4
   1e778:	add	sl, r6, sl
   1e77c:	and	r5, r5, ip
   1e780:	ror	r9, ip, #11
   1e784:	orr	r7, r8, r3
   1e788:	eor	r5, r5, r2
   1e78c:	str	r6, [sp, #52]	; 0x34
   1e790:	add	r0, sl, r0
   1e794:	ror	r6, r3, #13
   1e798:	eor	r9, r9, ip, ror #6
   1e79c:	and	sl, r8, r3
   1e7a0:	eor	r9, r9, ip, ror #25
   1e7a4:	and	r7, r7, r1
   1e7a8:	eor	r6, r6, r3, ror #2
   1e7ac:	add	r0, r5, r0
   1e7b0:	orr	r7, r7, sl
   1e7b4:	add	r0, r0, r9
   1e7b8:	eor	r6, r6, r3, ror #22
   1e7bc:	ldr	r9, [fp, #40]	; 0x28
   1e7c0:	add	r6, r6, r7
   1e7c4:	ldr	sl, [pc, #3108]	; 1f3f0 <__assert_fail@plt+0xe104>
   1e7c8:	add	lr, lr, r0
   1e7cc:	rev	r7, r9
   1e7d0:	add	r0, r6, r0
   1e7d4:	eor	r5, r4, ip
   1e7d8:	add	sl, r7, sl
   1e7dc:	str	r7, [sp, #60]	; 0x3c
   1e7e0:	orr	r7, r3, r0
   1e7e4:	and	r5, r5, lr
   1e7e8:	ror	r9, lr, #11
   1e7ec:	ror	r6, r0, #13
   1e7f0:	add	r2, sl, r2
   1e7f4:	and	r7, r7, r8
   1e7f8:	and	sl, r3, r0
   1e7fc:	eor	r5, r5, r4
   1e800:	orr	r7, r7, sl
   1e804:	eor	r9, r9, lr, ror #6
   1e808:	ldr	sl, [fp, #44]	; 0x2c
   1e80c:	eor	r6, r6, r0, ror #2
   1e810:	eor	r9, r9, lr, ror #25
   1e814:	add	r2, r5, r2
   1e818:	eor	r6, r6, r0, ror #22
   1e81c:	add	r2, r2, r9
   1e820:	add	r6, r6, r7
   1e824:	rev	r9, sl
   1e828:	ldr	sl, [pc, #3012]	; 1f3f4 <__assert_fail@plt+0xe108>
   1e82c:	add	r1, r1, r2
   1e830:	add	r2, r6, r2
   1e834:	add	sl, r9, sl
   1e838:	orr	r7, r0, r2
   1e83c:	eor	r5, ip, lr
   1e840:	add	r4, sl, r4
   1e844:	and	r7, r7, r3
   1e848:	and	sl, r0, r2
   1e84c:	orr	r7, r7, sl
   1e850:	str	r9, [sp, #32]
   1e854:	ldr	sl, [fp, #48]	; 0x30
   1e858:	and	r5, r5, r1
   1e85c:	ror	r9, r1, #11
   1e860:	ror	r6, r2, #13
   1e864:	eor	r5, r5, ip
   1e868:	eor	r9, r9, r1, ror #6
   1e86c:	eor	r6, r6, r2, ror #2
   1e870:	eor	r9, r9, r1, ror #25
   1e874:	add	r4, r5, r4
   1e878:	eor	r6, r6, r2, ror #22
   1e87c:	rev	sl, sl
   1e880:	add	r4, r4, r9
   1e884:	add	r6, r6, r7
   1e888:	str	sl, [sp, #36]	; 0x24
   1e88c:	add	sl, sl, #1912602624	; 0x72000000
   1e890:	add	r8, r8, r4
   1e894:	add	r6, r6, r4
   1e898:	add	sl, sl, #12451840	; 0xbe0000
   1e89c:	eor	r4, lr, r1
   1e8a0:	add	sl, sl, #23808	; 0x5d00
   1e8a4:	orr	r7, r2, r6
   1e8a8:	add	sl, sl, #116	; 0x74
   1e8ac:	and	r4, r4, r8
   1e8b0:	ror	r9, r8, #11
   1e8b4:	ror	r5, r6, #13
   1e8b8:	eor	r4, r4, lr
   1e8bc:	add	ip, sl, ip
   1e8c0:	eor	r9, r9, r8, ror #6
   1e8c4:	and	sl, r2, r6
   1e8c8:	and	r7, r7, r0
   1e8cc:	eor	r5, r5, r6, ror #2
   1e8d0:	eor	r9, r9, r8, ror #25
   1e8d4:	orr	r7, r7, sl
   1e8d8:	add	ip, r4, ip
   1e8dc:	eor	r5, r5, r6, ror #22
   1e8e0:	add	ip, ip, r9
   1e8e4:	add	r5, r5, r7
   1e8e8:	ldr	r9, [fp, #52]	; 0x34
   1e8ec:	add	r3, r3, ip
   1e8f0:	ldr	sl, [pc, #2816]	; 1f3f8 <__assert_fail@plt+0xe10c>
   1e8f4:	add	ip, r5, ip
   1e8f8:	rev	r5, r9
   1e8fc:	eor	r4, r1, r8
   1e900:	str	r5, [sp, #48]	; 0x30
   1e904:	add	sl, r5, sl
   1e908:	orr	r9, r6, ip
   1e90c:	ror	r5, ip, #13
   1e910:	and	r4, r4, r3
   1e914:	ror	r7, r3, #11
   1e918:	add	lr, sl, lr
   1e91c:	and	r9, r9, r2
   1e920:	and	sl, r6, ip
   1e924:	eor	r5, r5, ip, ror #2
   1e928:	eor	r4, r4, r1
   1e92c:	eor	r5, r5, ip, ror #22
   1e930:	eor	r7, r7, r3, ror #6
   1e934:	orr	r9, r9, sl
   1e938:	eor	r7, r7, r3, ror #25
   1e93c:	add	r9, r5, r9
   1e940:	add	lr, r4, lr
   1e944:	ldr	r5, [fp, #56]	; 0x38
   1e948:	add	lr, lr, r7
   1e94c:	ldr	r7, [pc, #2728]	; 1f3fc <__assert_fail@plt+0xe110>
   1e950:	add	r0, r0, lr
   1e954:	rev	r5, r5
   1e958:	eor	r4, r8, r3
   1e95c:	add	lr, r9, lr
   1e960:	add	r7, r5, r7
   1e964:	and	r4, r4, r0
   1e968:	orr	sl, ip, lr
   1e96c:	eor	r4, r4, r8
   1e970:	ror	r9, r0, #11
   1e974:	add	r1, r7, r1
   1e978:	eor	r9, r9, r0, ror #6
   1e97c:	ror	r7, lr, #13
   1e980:	and	sl, sl, r6
   1e984:	add	r1, r4, r1
   1e988:	and	r4, ip, lr
   1e98c:	eor	r9, r9, r0, ror #25
   1e990:	eor	r7, r7, lr, ror #2
   1e994:	orr	sl, sl, r4
   1e998:	ldr	r4, [fp, #60]	; 0x3c
   1e99c:	eor	r7, r7, lr, ror #22
   1e9a0:	add	r1, r1, r9
   1e9a4:	ldr	fp, [pc, #2644]	; 1f400 <__assert_fail@plt+0xe114>
   1e9a8:	add	r2, r2, r1
   1e9ac:	add	sl, r7, sl
   1e9b0:	rev	r4, r4
   1e9b4:	eor	r7, r3, r0
   1e9b8:	add	fp, r4, fp
   1e9bc:	and	r7, r7, r2
   1e9c0:	add	fp, fp, r8
   1e9c4:	eor	r7, r7, r3
   1e9c8:	str	r5, [sp, #40]	; 0x28
   1e9cc:	add	r7, r7, fp
   1e9d0:	ldr	r5, [sp, #52]	; 0x34
   1e9d4:	ldr	fp, [sp, #8]
   1e9d8:	add	r1, sl, r1
   1e9dc:	ror	sl, r2, #11
   1e9e0:	add	fp, fp, r5
   1e9e4:	eor	sl, sl, r2, ror #6
   1e9e8:	ldr	r5, [sp, #40]	; 0x28
   1e9ec:	str	r4, [sp, #44]	; 0x2c
   1e9f0:	orr	r8, lr, r1
   1e9f4:	ldr	r4, [sp, #12]
   1e9f8:	eor	sl, sl, r2, ror #25
   1e9fc:	ror	r9, r1, #13
   1ea00:	add	r7, r7, sl
   1ea04:	and	r8, r8, ip
   1ea08:	and	sl, lr, r1
   1ea0c:	eor	r9, r9, r1, ror #2
   1ea10:	orr	sl, r8, sl
   1ea14:	eor	r9, r9, r1, ror #22
   1ea18:	ror	r8, r5, #19
   1ea1c:	eor	r8, r8, r5, ror #17
   1ea20:	add	r9, r9, sl
   1ea24:	ror	sl, r4, #18
   1ea28:	eor	r8, r8, r5, lsr #10
   1ea2c:	eor	sl, sl, r4, ror #7
   1ea30:	eor	sl, sl, r4, lsr #3
   1ea34:	add	r8, r8, fp
   1ea38:	ldr	fp, [pc, #2500]	; 1f404 <__assert_fail@plt+0xe118>
   1ea3c:	add	r9, r9, r7
   1ea40:	add	r6, r6, r7
   1ea44:	add	r8, r8, sl
   1ea48:	eor	r7, r0, r2
   1ea4c:	add	fp, r8, fp
   1ea50:	and	r7, r7, r6
   1ea54:	add	fp, fp, r3
   1ea58:	eor	r7, r7, r0
   1ea5c:	add	r7, r7, fp
   1ea60:	ldr	fp, [sp, #60]	; 0x3c
   1ea64:	ror	sl, r6, #11
   1ea68:	add	fp, r4, fp
   1ea6c:	eor	sl, sl, r6, ror #6
   1ea70:	ldr	r4, [sp, #44]	; 0x2c
   1ea74:	ldr	r5, [sp, #16]
   1ea78:	str	r8, [sp, #12]
   1ea7c:	eor	sl, sl, r6, ror #25
   1ea80:	orr	r8, r1, r9
   1ea84:	ror	r3, r9, #13
   1ea88:	add	r7, r7, sl
   1ea8c:	and	r8, r8, lr
   1ea90:	and	sl, r1, r9
   1ea94:	eor	r3, r3, r9, ror #2
   1ea98:	orr	sl, r8, sl
   1ea9c:	eor	r3, r3, r9, ror #22
   1eaa0:	ror	r8, r4, #19
   1eaa4:	eor	r8, r8, r4, ror #17
   1eaa8:	add	r3, r3, sl
   1eaac:	ror	sl, r5, #18
   1eab0:	eor	r8, r8, r4, lsr #10
   1eab4:	eor	sl, sl, r5, ror #7
   1eab8:	add	r8, r8, fp
   1eabc:	eor	sl, sl, r5, lsr #3
   1eac0:	ldr	fp, [pc, #2368]	; 1f408 <__assert_fail@plt+0xe11c>
   1eac4:	add	sl, r8, sl
   1eac8:	add	ip, ip, r7
   1eacc:	add	fp, sl, fp
   1ead0:	add	r3, r3, r7
   1ead4:	add	r0, fp, r0
   1ead8:	eor	r7, r2, r6
   1eadc:	ldr	fp, [sp, #32]
   1eae0:	str	r3, [sp, #24]
   1eae4:	str	sl, [sp, #16]
   1eae8:	and	r7, r7, ip
   1eaec:	ror	sl, ip, #11
   1eaf0:	eor	r7, r7, r2
   1eaf4:	eor	sl, sl, ip, ror #6
   1eaf8:	add	fp, r5, fp
   1eafc:	ldr	r5, [sp, #24]
   1eb00:	eor	sl, sl, ip, ror #25
   1eb04:	add	r7, r7, r0
   1eb08:	ror	r0, r3, #13
   1eb0c:	add	r7, r7, sl
   1eb10:	eor	r0, r0, r3, ror #2
   1eb14:	and	sl, r9, r5
   1eb18:	ldr	r5, [sp, #20]
   1eb1c:	orr	r8, r9, r3
   1eb20:	eor	r0, r0, r3, ror #22
   1eb24:	ldr	r3, [sp, #12]
   1eb28:	and	r8, r8, r1
   1eb2c:	orr	sl, r8, sl
   1eb30:	ror	r8, r5, #18
   1eb34:	eor	r8, r8, r5, ror #7
   1eb38:	add	r0, r0, sl
   1eb3c:	ror	sl, r3, #19
   1eb40:	eor	r8, r8, r5, lsr #3
   1eb44:	eor	sl, sl, r3, ror #17
   1eb48:	eor	sl, sl, r3, lsr #10
   1eb4c:	add	fp, r8, fp
   1eb50:	ldr	r8, [pc, #2228]	; 1f40c <__assert_fail@plt+0xe120>
   1eb54:	add	lr, lr, r7
   1eb58:	add	fp, fp, sl
   1eb5c:	add	r0, r0, r7
   1eb60:	eor	r7, r6, ip
   1eb64:	add	r8, fp, r8
   1eb68:	and	r7, r7, lr
   1eb6c:	str	r0, [sp, #20]
   1eb70:	add	r2, r8, r2
   1eb74:	eor	r7, r7, r6
   1eb78:	ldr	r3, [sp, #20]
   1eb7c:	add	r7, r7, r2
   1eb80:	ldr	r2, [sp, #36]	; 0x24
   1eb84:	mov	r0, fp
   1eb88:	ldr	r8, [sp, #24]
   1eb8c:	ror	fp, lr, #11
   1eb90:	add	r2, r5, r2
   1eb94:	eor	fp, fp, lr, ror #6
   1eb98:	ldr	r5, [sp, #24]
   1eb9c:	orr	sl, r8, r3
   1eba0:	eor	fp, fp, lr, ror #25
   1eba4:	ror	r8, r3, #13
   1eba8:	add	r7, r7, fp
   1ebac:	eor	r8, r8, r3, ror #2
   1ebb0:	and	fp, r5, r3
   1ebb4:	ldr	r5, [sp, #56]	; 0x38
   1ebb8:	eor	r8, r8, r3, ror #22
   1ebbc:	ldr	r3, [sp, #16]
   1ebc0:	and	sl, sl, r9
   1ebc4:	orr	fp, sl, fp
   1ebc8:	ror	sl, r5, #18
   1ebcc:	eor	sl, sl, r5, ror #7
   1ebd0:	add	r8, r8, fp
   1ebd4:	ror	fp, r3, #19
   1ebd8:	eor	sl, sl, r5, lsr #3
   1ebdc:	eor	fp, fp, r3, ror #17
   1ebe0:	add	r8, r8, r7
   1ebe4:	add	r1, r1, r7
   1ebe8:	eor	fp, fp, r3, lsr #10
   1ebec:	add	sl, sl, r2
   1ebf0:	ldr	r7, [pc, #2072]	; 1f410 <__assert_fail@plt+0xe124>
   1ebf4:	add	sl, sl, fp
   1ebf8:	eor	r2, ip, lr
   1ebfc:	add	r7, sl, r7
   1ec00:	and	r2, r2, r1
   1ec04:	add	r6, r7, r6
   1ec08:	eor	r2, r2, ip
   1ec0c:	ldr	r3, [sp, #20]
   1ec10:	add	r2, r2, r6
   1ec14:	ldr	r6, [sp, #48]	; 0x30
   1ec18:	ldr	r7, [sp, #24]
   1ec1c:	ror	fp, r1, #11
   1ec20:	add	r6, r5, r6
   1ec24:	str	sl, [sp, #8]
   1ec28:	ldr	r5, [sp, #64]	; 0x40
   1ec2c:	orr	sl, r3, r8
   1ec30:	eor	fp, fp, r1, ror #6
   1ec34:	and	sl, sl, r7
   1ec38:	eor	fp, fp, r1, ror #25
   1ec3c:	ror	r7, r8, #13
   1ec40:	add	r2, r2, fp
   1ec44:	eor	r7, r7, r8, ror #2
   1ec48:	and	fp, r3, r8
   1ec4c:	orr	fp, sl, fp
   1ec50:	mov	r3, r0
   1ec54:	eor	r7, r7, r8, ror #22
   1ec58:	ror	sl, r5, #18
   1ec5c:	eor	sl, sl, r5, ror #7
   1ec60:	add	r7, r7, fp
   1ec64:	ror	fp, r0, #19
   1ec68:	eor	sl, sl, r5, lsr #3
   1ec6c:	eor	fp, fp, r3, ror #17
   1ec70:	add	sl, sl, r6
   1ec74:	eor	fp, fp, r3, lsr #10
   1ec78:	ldr	r6, [pc, #1940]	; 1f414 <__assert_fail@plt+0xe128>
   1ec7c:	add	r9, r9, r2
   1ec80:	add	fp, sl, fp
   1ec84:	mov	r0, r5
   1ec88:	str	r3, [sp, #64]	; 0x40
   1ec8c:	add	r7, r7, r2
   1ec90:	mov	r5, fp
   1ec94:	eor	r2, lr, r1
   1ec98:	add	r6, fp, r6
   1ec9c:	mov	fp, r0
   1eca0:	ldr	r0, [sp, #40]	; 0x28
   1eca4:	and	r2, r2, r9
   1eca8:	ror	sl, r9, #11
   1ecac:	ldr	r3, [sp, #20]
   1ecb0:	add	ip, r6, ip
   1ecb4:	add	fp, fp, r0
   1ecb8:	eor	r2, r2, lr
   1ecbc:	ldr	r0, [sp, #68]	; 0x44
   1ecc0:	eor	sl, sl, r9, ror #6
   1ecc4:	orr	r6, r8, r7
   1ecc8:	eor	sl, sl, r9, ror #25
   1eccc:	add	r2, r2, ip
   1ecd0:	add	r2, r2, sl
   1ecd4:	and	r6, r6, r3
   1ecd8:	and	sl, r8, r7
   1ecdc:	ldr	r3, [sp, #8]
   1ece0:	orr	sl, r6, sl
   1ece4:	ror	ip, r7, #13
   1ece8:	ror	r6, r0, #18
   1ecec:	eor	ip, ip, r7, ror #2
   1ecf0:	eor	r6, r6, r0, ror #7
   1ecf4:	eor	ip, ip, r7, ror #22
   1ecf8:	eor	r6, r6, r0, lsr #3
   1ecfc:	add	r6, r6, fp
   1ed00:	add	ip, ip, sl
   1ed04:	ldr	fp, [sp, #8]
   1ed08:	ror	sl, r3, #19
   1ed0c:	eor	sl, sl, r3, ror #17
   1ed10:	ldr	r3, [sp, #24]
   1ed14:	eor	sl, sl, fp, lsr #10
   1ed18:	add	r3, r3, r2
   1ed1c:	ldr	fp, [pc, #1780]	; 1f418 <__assert_fail@plt+0xe12c>
   1ed20:	add	ip, ip, r2
   1ed24:	add	sl, r6, sl
   1ed28:	eor	r2, r1, r9
   1ed2c:	str	sl, [sp, #24]
   1ed30:	add	fp, sl, fp
   1ed34:	and	r2, r2, r3
   1ed38:	ror	sl, r3, #11
   1ed3c:	add	lr, fp, lr
   1ed40:	eor	r2, r2, r1
   1ed44:	add	fp, r0, r4
   1ed48:	eor	sl, sl, r3, ror #6
   1ed4c:	ldr	r0, [sp, #28]
   1ed50:	orr	r6, r7, ip
   1ed54:	eor	sl, sl, r3, ror #25
   1ed58:	add	r2, r2, lr
   1ed5c:	ror	lr, ip, #13
   1ed60:	add	r2, r2, sl
   1ed64:	and	r6, r6, r8
   1ed68:	and	sl, r7, ip
   1ed6c:	eor	lr, lr, ip, ror #2
   1ed70:	orr	sl, r6, sl
   1ed74:	eor	lr, lr, ip, ror #22
   1ed78:	ror	r6, r0, #18
   1ed7c:	eor	r6, r6, r0, ror #7
   1ed80:	add	lr, lr, sl
   1ed84:	ror	sl, r5, #19
   1ed88:	eor	r6, r6, r0, lsr #3
   1ed8c:	eor	sl, sl, r5, ror #17
   1ed90:	ldr	r0, [sp, #20]
   1ed94:	add	fp, r6, fp
   1ed98:	eor	sl, sl, r5, lsr #10
   1ed9c:	add	r0, r0, r2
   1eda0:	add	lr, lr, r2
   1eda4:	ldr	r6, [pc, #1648]	; 1f41c <__assert_fail@plt+0xe130>
   1eda8:	add	r2, fp, sl
   1edac:	mov	r4, r2
   1edb0:	eor	r2, r9, r3
   1edb4:	add	r6, r4, r6
   1edb8:	and	r2, r2, r0
   1edbc:	add	r1, r6, r1
   1edc0:	eor	r2, r2, r9
   1edc4:	str	lr, [sp, #20]
   1edc8:	add	r2, r2, r1
   1edcc:	ror	r1, lr, #13
   1edd0:	orr	sl, ip, lr
   1edd4:	eor	r1, r1, lr, ror #2
   1edd8:	ldr	lr, [sp, #20]
   1eddc:	ror	fp, r0, #11
   1ede0:	eor	fp, fp, r0, ror #6
   1ede4:	eor	r1, r1, lr, ror #22
   1ede8:	ldr	lr, [sp, #20]
   1edec:	eor	fp, fp, r0, ror #25
   1edf0:	str	r5, [sp, #84]	; 0x54
   1edf4:	ldr	r5, [sp, #72]	; 0x48
   1edf8:	add	r2, r2, fp
   1edfc:	and	sl, sl, r7
   1ee00:	and	fp, ip, lr
   1ee04:	orr	sl, sl, fp
   1ee08:	ldr	fp, [sp, #24]
   1ee0c:	ror	r6, r5, #18
   1ee10:	ldr	lr, [sp, #28]
   1ee14:	eor	r6, r6, r5, ror #7
   1ee18:	add	r1, r1, sl
   1ee1c:	add	r1, r1, r2
   1ee20:	add	r8, r8, r2
   1ee24:	eor	r6, r6, r5, lsr #3
   1ee28:	ldr	r2, [sp, #12]
   1ee2c:	ror	sl, fp, #19
   1ee30:	eor	sl, sl, fp, ror #17
   1ee34:	add	r6, r6, lr
   1ee38:	eor	sl, sl, fp, lsr #10
   1ee3c:	add	r6, r6, r2
   1ee40:	add	r6, sl, r6
   1ee44:	ldr	r2, [pc, #1492]	; 1f420 <__assert_fail@plt+0xe134>
   1ee48:	mov	sl, r6
   1ee4c:	eor	r6, r3, r0
   1ee50:	add	r2, sl, r2
   1ee54:	and	r6, r6, r8
   1ee58:	ror	fp, r8, #11
   1ee5c:	add	r9, r2, r9
   1ee60:	ldr	lr, [sp, #20]
   1ee64:	eor	r6, r6, r3
   1ee68:	eor	fp, fp, r8, ror #6
   1ee6c:	eor	fp, fp, r8, ror #25
   1ee70:	add	r6, r6, r9
   1ee74:	add	r6, r6, fp
   1ee78:	str	sl, [sp, #28]
   1ee7c:	ldr	fp, [sp, #20]
   1ee80:	orr	sl, lr, r1
   1ee84:	ldr	lr, [sp, #52]	; 0x34
   1ee88:	ror	r2, r1, #13
   1ee8c:	and	fp, fp, r1
   1ee90:	and	sl, sl, ip
   1ee94:	eor	r2, r2, r1, ror #2
   1ee98:	orr	sl, sl, fp
   1ee9c:	ror	r9, lr, #18
   1eea0:	eor	r2, r2, r1, ror #22
   1eea4:	eor	r9, r9, lr, ror #7
   1eea8:	add	r2, r2, sl
   1eeac:	add	r2, r2, r6
   1eeb0:	add	r7, r7, r6
   1eeb4:	eor	r9, r9, lr, lsr #3
   1eeb8:	ldr	r6, [sp, #16]
   1eebc:	ror	sl, r4, #19
   1eec0:	eor	sl, sl, r4, ror #17
   1eec4:	add	r9, r9, r5
   1eec8:	eor	sl, sl, r4, lsr #10
   1eecc:	add	r9, r9, r6
   1eed0:	add	r9, sl, r9
   1eed4:	ldr	r6, [pc, #1352]	; 1f424 <__assert_fail@plt+0xe138>
   1eed8:	mov	sl, r9
   1eedc:	eor	r9, r0, r8
   1eee0:	add	r6, sl, r6
   1eee4:	ldr	r5, [sp, #20]
   1eee8:	str	r4, [sp, #52]	; 0x34
   1eeec:	and	r9, r9, r7
   1eef0:	ldr	r4, [sp, #60]	; 0x3c
   1eef4:	ror	fp, r7, #11
   1eef8:	add	r3, r6, r3
   1eefc:	eor	r9, r9, r0
   1ef00:	orr	r6, r1, r2
   1ef04:	eor	fp, fp, r7, ror #6
   1ef08:	eor	fp, fp, r7, ror #25
   1ef0c:	and	r6, r6, r5
   1ef10:	add	r9, r9, r3
   1ef14:	ldr	r5, [sp, #28]
   1ef18:	ror	r3, r2, #13
   1ef1c:	add	r9, r9, fp
   1ef20:	str	sl, [sp, #56]	; 0x38
   1ef24:	and	fp, r1, r2
   1ef28:	eor	r3, r3, r2, ror #2
   1ef2c:	ror	sl, r4, #18
   1ef30:	orr	r6, r6, fp
   1ef34:	eor	sl, sl, r4, ror #7
   1ef38:	eor	r3, r3, r2, ror #22
   1ef3c:	eor	sl, sl, r4, lsr #3
   1ef40:	add	r3, r3, r6
   1ef44:	ror	fp, r5, #19
   1ef48:	add	r6, ip, r9
   1ef4c:	ldr	ip, [sp, #64]	; 0x40
   1ef50:	eor	fp, fp, r5, ror #17
   1ef54:	add	sl, sl, lr
   1ef58:	eor	fp, fp, r5, lsr #10
   1ef5c:	add	sl, sl, ip
   1ef60:	add	r3, r3, r9
   1ef64:	add	ip, fp, sl
   1ef68:	ldr	r9, [pc, #1208]	; 1f428 <__assert_fail@plt+0xe13c>
   1ef6c:	mov	r5, ip
   1ef70:	eor	ip, r8, r7
   1ef74:	add	r9, r5, r9
   1ef78:	and	ip, ip, r6
   1ef7c:	ror	fp, r6, #11
   1ef80:	eor	ip, ip, r8
   1ef84:	add	r0, r9, r0
   1ef88:	eor	fp, fp, r6, ror #6
   1ef8c:	ldr	lr, [sp, #32]
   1ef90:	orr	sl, r2, r3
   1ef94:	eor	fp, fp, r6, ror #25
   1ef98:	add	r0, ip, r0
   1ef9c:	add	r0, r0, fp
   1efa0:	and	sl, sl, r1
   1efa4:	and	fp, r2, r3
   1efa8:	orr	sl, sl, fp
   1efac:	ror	ip, r3, #13
   1efb0:	ldr	fp, [sp, #56]	; 0x38
   1efb4:	eor	ip, ip, r3, ror #2
   1efb8:	ror	r9, lr, #18
   1efbc:	eor	r9, r9, lr, ror #7
   1efc0:	eor	ip, ip, r3, ror #22
   1efc4:	eor	r9, r9, lr, lsr #3
   1efc8:	add	ip, ip, sl
   1efcc:	ldr	lr, [sp, #20]
   1efd0:	ror	sl, fp, #19
   1efd4:	eor	sl, sl, fp, ror #17
   1efd8:	add	ip, ip, r0
   1efdc:	add	lr, lr, r0
   1efe0:	eor	r0, sl, fp, lsr #10
   1efe4:	ldr	fp, [sp, #8]
   1efe8:	add	r9, r9, r4
   1efec:	add	r9, r9, fp
   1eff0:	ldr	sl, [pc, #1076]	; 1f42c <__assert_fail@plt+0xe140>
   1eff4:	add	r0, r0, r9
   1eff8:	eor	r9, r7, r6
   1effc:	str	r0, [sp, #20]
   1f000:	add	sl, r0, sl
   1f004:	and	r9, r9, lr
   1f008:	ror	r0, lr, #11
   1f00c:	ldr	r4, [sp, #36]	; 0x24
   1f010:	add	sl, sl, r8
   1f014:	eor	r9, r9, r7
   1f018:	eor	r8, r0, lr, ror #6
   1f01c:	orr	fp, r3, ip
   1f020:	eor	r8, r8, lr, ror #25
   1f024:	add	r9, r9, sl
   1f028:	ror	r0, ip, #13
   1f02c:	add	r9, r9, r8
   1f030:	and	fp, fp, r2
   1f034:	and	r8, r3, ip
   1f038:	eor	r0, r0, ip, ror #2
   1f03c:	orr	fp, fp, r8
   1f040:	ror	sl, r4, #18
   1f044:	eor	r0, r0, ip, ror #22
   1f048:	eor	sl, sl, r4, ror #7
   1f04c:	add	r0, r0, fp
   1f050:	ror	fp, r5, #19
   1f054:	eor	sl, sl, r4, lsr #3
   1f058:	eor	fp, fp, r5, ror #17
   1f05c:	ldr	r4, [sp, #32]
   1f060:	str	r5, [sp, #60]	; 0x3c
   1f064:	eor	fp, fp, r5, lsr #10
   1f068:	ldr	r5, [sp, #84]	; 0x54
   1f06c:	add	sl, sl, r4
   1f070:	add	r8, r1, r9
   1f074:	add	r1, sl, r5
   1f078:	ldr	sl, [pc, #944]	; 1f430 <__assert_fail@plt+0xe144>
   1f07c:	add	r0, r0, r9
   1f080:	ldr	r4, [sp, #48]	; 0x30
   1f084:	add	r1, fp, r1
   1f088:	eor	r9, r6, lr
   1f08c:	str	r1, [sp, #32]
   1f090:	add	sl, r1, sl
   1f094:	and	r9, r9, r8
   1f098:	ror	r1, r8, #11
   1f09c:	add	sl, sl, r7
   1f0a0:	eor	r9, r9, r6
   1f0a4:	eor	r7, r1, r8, ror #6
   1f0a8:	ldr	r5, [sp, #20]
   1f0ac:	orr	fp, ip, r0
   1f0b0:	eor	r7, r7, r8, ror #25
   1f0b4:	add	r9, r9, sl
   1f0b8:	ror	r1, r0, #13
   1f0bc:	ror	sl, r4, #18
   1f0c0:	add	r9, r9, r7
   1f0c4:	and	fp, fp, r3
   1f0c8:	and	r7, ip, r0
   1f0cc:	eor	r1, r1, r0, ror #2
   1f0d0:	eor	sl, sl, r4, ror #7
   1f0d4:	orr	fp, fp, r7
   1f0d8:	eor	r1, r1, r0, ror #22
   1f0dc:	eor	sl, sl, r4, lsr #3
   1f0e0:	ldr	r4, [sp, #36]	; 0x24
   1f0e4:	add	r7, r2, r9
   1f0e8:	add	r1, r1, fp
   1f0ec:	ldr	r2, [sp, #24]
   1f0f0:	ror	fp, r5, #19
   1f0f4:	eor	fp, fp, r5, ror #17
   1f0f8:	add	sl, sl, r4
   1f0fc:	eor	fp, fp, r5, lsr #10
   1f100:	add	sl, sl, r2
   1f104:	add	r1, r1, r9
   1f108:	add	r2, fp, sl
   1f10c:	ldr	r9, [pc, #800]	; 1f434 <__assert_fail@plt+0xe148>
   1f110:	ldr	r4, [sp, #40]	; 0x28
   1f114:	mov	sl, r2
   1f118:	eor	r2, lr, r8
   1f11c:	add	r9, sl, r9
   1f120:	and	r2, r2, r7
   1f124:	ror	fp, r7, #11
   1f128:	eor	r2, r2, lr
   1f12c:	add	r6, r9, r6
   1f130:	eor	fp, fp, r7, ror #6
   1f134:	ldr	r5, [sp, #32]
   1f138:	str	sl, [sp, #36]	; 0x24
   1f13c:	eor	fp, fp, r7, ror #25
   1f140:	orr	sl, r0, r1
   1f144:	add	r6, r2, r6
   1f148:	ror	r9, r4, #18
   1f14c:	ror	r2, r1, #13
   1f150:	add	r6, r6, fp
   1f154:	and	sl, sl, ip
   1f158:	and	fp, r0, r1
   1f15c:	eor	r2, r2, r1, ror #2
   1f160:	eor	r9, r9, r4, ror #7
   1f164:	orr	sl, sl, fp
   1f168:	eor	r2, r2, r1, ror #22
   1f16c:	eor	r9, r9, r4, lsr #3
   1f170:	ldr	r4, [sp, #48]	; 0x30
   1f174:	add	r2, r2, sl
   1f178:	ror	fp, r5, #19
   1f17c:	add	sl, r3, r6
   1f180:	ldr	r3, [sp, #52]	; 0x34
   1f184:	eor	fp, fp, r5, ror #17
   1f188:	add	r9, r9, r4
   1f18c:	eor	fp, fp, r5, lsr #10
   1f190:	add	r9, r9, r3
   1f194:	add	r2, r2, r6
   1f198:	ldr	r3, [pc, #664]	; 1f438 <__assert_fail@plt+0xe14c>
   1f19c:	add	r6, fp, r9
   1f1a0:	mov	r4, r6
   1f1a4:	eor	r6, r8, r7
   1f1a8:	ldr	r5, [sp, #44]	; 0x2c
   1f1ac:	add	r3, r4, r3
   1f1b0:	and	r6, r6, sl
   1f1b4:	ror	fp, sl, #11
   1f1b8:	eor	r6, r6, r8
   1f1bc:	add	lr, r3, lr
   1f1c0:	eor	fp, fp, sl, ror #6
   1f1c4:	orr	r3, r1, r2
   1f1c8:	eor	fp, fp, sl, ror #25
   1f1cc:	add	lr, r6, lr
   1f1d0:	add	lr, lr, fp
   1f1d4:	and	r3, r3, r0
   1f1d8:	and	fp, r1, r2
   1f1dc:	ror	r6, r5, #18
   1f1e0:	orr	r3, r3, fp
   1f1e4:	ror	r9, r2, #13
   1f1e8:	ldr	fp, [sp, #36]	; 0x24
   1f1ec:	eor	r6, r6, r5, ror #7
   1f1f0:	eor	r6, r6, r5, lsr #3
   1f1f4:	eor	r9, r9, r2, ror #2
   1f1f8:	ldr	r5, [sp, #40]	; 0x28
   1f1fc:	eor	r9, r9, r2, ror #22
   1f200:	add	r9, r9, r3
   1f204:	add	r5, r6, r5
   1f208:	ror	r3, fp, #19
   1f20c:	ldr	r6, [sp, #28]
   1f210:	eor	r3, r3, fp, ror #17
   1f214:	add	r5, r5, r6
   1f218:	eor	r3, r3, fp, lsr #10
   1f21c:	ldr	fp, [pc, #536]	; 1f43c <__assert_fail@plt+0xe150>
   1f220:	add	ip, ip, lr
   1f224:	add	r3, r3, r5
   1f228:	add	fp, r3, fp
   1f22c:	eor	r5, r7, sl
   1f230:	add	lr, r9, lr
   1f234:	and	r5, r5, ip
   1f238:	ror	r9, ip, #11
   1f23c:	add	r8, fp, r8
   1f240:	ldr	fp, [sp, #12]
   1f244:	eor	r5, r5, r7
   1f248:	eor	r9, r9, ip, ror #6
   1f24c:	str	r3, [sp, #72]	; 0x48
   1f250:	eor	r9, r9, ip, ror #25
   1f254:	orr	r3, r2, lr
   1f258:	add	r8, r5, r8
   1f25c:	ror	r6, lr, #13
   1f260:	add	r8, r8, r9
   1f264:	and	r3, r3, r1
   1f268:	and	r9, r2, lr
   1f26c:	eor	r6, r6, lr, ror #2
   1f270:	ror	r5, fp, #18
   1f274:	orr	r3, r3, r9
   1f278:	eor	r5, r5, fp, ror #7
   1f27c:	eor	r6, r6, lr, ror #22
   1f280:	eor	r5, r5, fp, lsr #3
   1f284:	add	r6, r6, r3
   1f288:	ror	fp, r4, #19
   1f28c:	mov	r3, r4
   1f290:	eor	fp, fp, r4, ror #17
   1f294:	ldr	r4, [sp, #44]	; 0x2c
   1f298:	eor	fp, fp, r3, lsr #10
   1f29c:	str	r3, [sp, #68]	; 0x44
   1f2a0:	ldr	r3, [sp, #56]	; 0x38
   1f2a4:	add	r4, r5, r4
   1f2a8:	add	r4, r4, r3
   1f2ac:	add	r0, r0, r8
   1f2b0:	add	r4, fp, r4
   1f2b4:	ldr	r3, [pc, #388]	; 1f440 <__assert_fail@plt+0xe154>
   1f2b8:	mov	r9, r4
   1f2bc:	eor	r4, sl, ip
   1f2c0:	add	r8, r6, r8
   1f2c4:	add	r3, r9, r3
   1f2c8:	and	r4, r4, r0
   1f2cc:	ror	r6, r0, #11
   1f2d0:	eor	r4, r4, sl
   1f2d4:	add	r7, r3, r7
   1f2d8:	eor	r6, r6, r0, ror #6
   1f2dc:	str	r9, [sp, #40]	; 0x28
   1f2e0:	orr	r3, lr, r8
   1f2e4:	ldr	r9, [sp, #16]
   1f2e8:	eor	r6, r6, r0, ror #25
   1f2ec:	add	r7, r4, r7
   1f2f0:	add	r7, r7, r6
   1f2f4:	and	r3, r3, r2
   1f2f8:	and	r6, lr, r8
   1f2fc:	orr	r3, r3, r6
   1f300:	ldr	r6, [sp, #72]	; 0x48
   1f304:	ror	r4, r9, #18
   1f308:	eor	r4, r4, r9, ror #7
   1f30c:	eor	r4, r4, r9, lsr #3
   1f310:	ror	r9, r6, #19
   1f314:	ldr	fp, [sp, #12]
   1f318:	ror	r5, r8, #13
   1f31c:	eor	r9, r9, r6, ror #17
   1f320:	eor	r9, r9, r6, lsr #10
   1f324:	eor	r5, r5, r8, ror #2
   1f328:	ldr	r6, [sp, #60]	; 0x3c
   1f32c:	eor	r5, r5, r8, ror #22
   1f330:	add	r4, r4, fp
   1f334:	add	r1, r1, r7
   1f338:	add	r5, r5, r3
   1f33c:	add	r4, r4, r6
   1f340:	ldr	r3, [pc, #252]	; 1f444 <__assert_fail@plt+0xe158>
   1f344:	add	r7, r5, r7
   1f348:	add	r4, r9, r4
   1f34c:	eor	r5, ip, r0
   1f350:	and	r5, r5, r1
   1f354:	add	r3, r4, r3
   1f358:	ror	r9, r1, #11
   1f35c:	add	r3, r3, sl
   1f360:	eor	r9, r9, r1, ror #6
   1f364:	eor	sl, r5, ip
   1f368:	eor	r9, r9, r1, ror #25
   1f36c:	str	r4, [sp, #76]	; 0x4c
   1f370:	add	r3, sl, r3
   1f374:	orr	r4, r8, r7
   1f378:	ror	r6, r7, #13
   1f37c:	add	r3, r3, r9
   1f380:	and	r4, r4, lr
   1f384:	and	r9, r8, r7
   1f388:	eor	r6, r6, r7, ror #2
   1f38c:	orr	r4, r4, r9
   1f390:	eor	r6, r6, r7, ror #22
   1f394:	ldr	fp, [sp, #64]	; 0x40
   1f398:	add	r6, r6, r4
   1f39c:	ldr	r4, [sp, #40]	; 0x28
   1f3a0:	ror	r5, fp, #18
   1f3a4:	ldr	r9, [sp, #16]
   1f3a8:	ror	sl, r4, #19
   1f3ac:	eor	r5, r5, fp, ror #7
   1f3b0:	eor	sl, sl, r4, ror #17
   1f3b4:	eor	r5, r5, fp, lsr #3
   1f3b8:	eor	sl, sl, r4, lsr #10
   1f3bc:	ldr	r4, [sp, #20]
   1f3c0:	add	r5, r5, r9
   1f3c4:	add	r2, r2, r3
   1f3c8:	ldr	r9, [sp, #8]
   1f3cc:	add	r5, r5, r4
   1f3d0:	b	1f4bc <__assert_fail@plt+0xe1d0>
   1f3d4:	addmi	r2, sl, #152, 30	; 0x260
   1f3d8:	strblt	pc, [r0, #3023]	; 0xbcf	; <UNPREDICTABLE>
   1f3dc:	ldmdbcc	r6, {r0, r1, r3, r4, r6, r9, lr, pc}^
   1f3e0:	ldmibpl	r1!, {r0, r4, r5, r6, r7, r8, ip}^
   1f3e4:	eorsls	r8, pc, #164, 4	; 0x4000000a
   1f3e8:	stmdale	r7, {r3, r4, r7, r9, fp, sp, pc}
   1f3ec:	addne	r5, r3, #1024	; 0x400
   1f3f0:	ldrtcs	r8, [r1], #-1470	; 0xfffffa42
   1f3f4:	strpl	r7, [ip, #-3523]	; 0xfffff23d
   1f3f8:	ldrshhi	fp, [lr], #30
   1f3fc:	blls	ff720ea0 <optarg@@GLIBC_2.4+0xff6cecf8>
   1f400:	orrsgt	pc, fp, r4, ror r1	; <UNPREDICTABLE>
   1f404:	ldr	r6, [fp], #2497	; 0x9c1
   1f408:	svc	0x00be4786
   1f40c:	svceq	0x00c19dc6
   1f410:	strcs	sl, [ip], #-460	; 0xfffffe34
   1f414:	stclcs	12, cr2, [r9, #444]!	; 0x1bc
   1f418:	bmi	1d406c8 <optarg@@GLIBC_2.4+0x1cee520>
   1f41c:			; <UNDEFINED> instruction: 0x5cb0a9dc
   1f420:	usatvc	r8, #25, sl, asr #17
   1f424:	ldmdals	lr!, {r1, r4, r6, r8, ip, lr}
   1f428:	ldmdage	r1!, {r0, r2, r3, r5, r6, r9, sl, lr, pc}
   1f42c:	andlt	r2, r3, r8, asr #15
   1f430:	svclt	0x00597fc7
   1f434:			; <UNDEFINED> instruction: 0xc6e00bf3
   1f438:	strle	r9, [r7, #327]!	; 0x147
   1f43c:			; <UNDEFINED> instruction: 0x06ca6351
   1f440:	strtne	r2, [r9], #-2407	; 0xfffff699
   1f444:	ldrcs	r0, [r7, r5, lsl #21]!
   1f448:	mrccs	1, 0, r2, cr11, cr8, {1}
   1f44c:	stcmi	13, cr6, [ip, #-1008]!	; 0xfffffc10
   1f450:	teqpl	r8, #1216	; 0x4c0
   1f454:	strvs	r7, [sl, #-852]	; 0xfffffcac
   1f458:			; <UNDEFINED> instruction: 0x766a0abb
   1f45c:	bichi	ip, r2, lr, lsr #18
   1f460:	rsbsls	r2, r2, #34048	; 0x8500
   1f464:	adcsge	lr, pc, #10551296	; 0xa10000
   1f468:	ldmdage	sl, {r0, r1, r3, r6, r9, sl, sp, lr}
   1f46c:	subgt	r8, fp, #112, 22	; 0x1c000
   1f470:	strbgt	r5, [ip, -r3, lsr #3]!
   1f474:	orrsle	lr, r2, r9, lsl r8
   1f478:	ldrle	r0, [r9], r4, lsr #12
   1f47c:	vst3.32	{d3,d5,d7}, [lr], r5
   1f480:	rsbne	sl, sl, r0, ror r0
   1f484:	stmibne	r4!, {r1, r2, r4, r8, lr, pc}
   1f488:	cdpne	12, 3, cr6, cr7, cr8, {0}
   1f48c:	strbcs	r7, [r8, -ip, asr #14]
   1f490:	ldrtcc	fp, [r0], #3253	; 0xcb5
   1f494:	ldmdbcc	ip, {r0, r1, r4, r5, r7, sl, fp}
   1f498:	vfnmami.f32	s21, s16, s20
   1f49c:	blpl	fe751de0 <optarg@@GLIBC_2.4+0xfe6ffc38>
   1f4a0:	stmdavs	lr!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, fp, sp, lr}
   1f4a4:	strvc	r8, [pc], #750	; 1f4ac <__assert_fail@plt+0xe1c0>
   1f4a8:	stmiavc	r5!, {r0, r1, r2, r3, r5, r6, r8, r9, sp, lr}
   1f4ac:	strbhi	r7, [r8], #2068	; 0x814
   1f4b0:	sfmhi	f0, 2, [r7], {8}
   1f4b4:	ldrshtls	pc, [lr], sl	; <UNPREDICTABLE>
   1f4b8:	ldrbge	r6, [r0], #-3307	; 0xfffff315
   1f4bc:	ldr	r4, [pc, #-124]	; 1f448 <__assert_fail@plt+0xe15c>
   1f4c0:	add	sl, sl, r5
   1f4c4:	eor	r5, r0, r1
   1f4c8:	add	r3, r6, r3
   1f4cc:	add	r4, sl, r4
   1f4d0:	and	r5, r5, r2
   1f4d4:	ror	r6, r2, #11
   1f4d8:	str	sl, [sp, #80]	; 0x50
   1f4dc:	eor	r5, r5, r0
   1f4e0:	add	ip, r4, ip
   1f4e4:	eor	r6, r6, r2, ror #6
   1f4e8:	ror	sl, r9, #18
   1f4ec:	orr	r4, r7, r3
   1f4f0:	eor	r6, r6, r2, ror #25
   1f4f4:	add	ip, r5, ip
   1f4f8:	eor	sl, sl, r9, ror #7
   1f4fc:	ror	r5, r3, #13
   1f500:	add	ip, ip, r6
   1f504:	and	r4, r4, r8
   1f508:	and	r6, r7, r3
   1f50c:	eor	r5, r5, r3, ror #2
   1f510:	eor	sl, sl, r9, lsr #3
   1f514:	ldr	r9, [sp, #76]	; 0x4c
   1f518:	orr	r4, r4, r6
   1f51c:	eor	r5, r5, r3, ror #22
   1f520:	add	r5, r5, r4
   1f524:	add	lr, lr, ip
   1f528:	ror	r4, r9, #19
   1f52c:	add	ip, r5, ip
   1f530:	ldr	r5, [sp, #32]
   1f534:	eor	r4, r4, r9, ror #17
   1f538:	add	sl, sl, fp
   1f53c:	add	sl, sl, r5
   1f540:	eor	r4, r4, r9, lsr #10
   1f544:	ldr	r9, [pc, #-256]	; 1f44c <__assert_fail@plt+0xe160>
   1f548:	add	r4, r4, sl
   1f54c:	eor	r5, r1, r2
   1f550:	add	r9, r4, r9
   1f554:	and	r5, r5, lr
   1f558:	ror	r6, lr, #11
   1f55c:	ldr	sl, [sp, #84]	; 0x54
   1f560:	eor	r5, r5, r1
   1f564:	add	r0, r9, r0
   1f568:	eor	r6, r6, lr, ror #6
   1f56c:	str	r4, [sp, #44]	; 0x2c
   1f570:	eor	r6, r6, lr, ror #25
   1f574:	orr	r4, r3, ip
   1f578:	add	r0, r5, r0
   1f57c:	add	r0, r0, r6
   1f580:	and	r4, r4, r7
   1f584:	and	r6, r3, ip
   1f588:	orr	r4, r4, r6
   1f58c:	ror	r5, ip, #13
   1f590:	ldr	r6, [sp, #80]	; 0x50
   1f594:	ror	fp, sl, #18
   1f598:	ldr	r9, [sp, #8]
   1f59c:	eor	r5, r5, ip, ror #2
   1f5a0:	eor	fp, fp, sl, ror #7
   1f5a4:	eor	r5, r5, ip, ror #22
   1f5a8:	eor	fp, fp, sl, lsr #3
   1f5ac:	add	r5, r5, r4
   1f5b0:	add	fp, fp, r9
   1f5b4:	ror	r4, r6, #19
   1f5b8:	ldr	r9, [sp, #36]	; 0x24
   1f5bc:	eor	r4, r4, r6, ror #17
   1f5c0:	add	r8, r8, r0
   1f5c4:	eor	r4, r4, r6, lsr #10
   1f5c8:	add	fp, fp, r9
   1f5cc:	ldr	r9, [pc, #-388]	; 1f450 <__assert_fail@plt+0xe164>
   1f5d0:	add	r0, r5, r0
   1f5d4:	add	fp, r4, fp
   1f5d8:	eor	r5, r2, lr
   1f5dc:	add	r9, fp, r9
   1f5e0:	and	r5, r5, r8
   1f5e4:	ror	r6, r8, #11
   1f5e8:	eor	r5, r5, r2
   1f5ec:	add	r1, r9, r1
   1f5f0:	eor	r6, r6, r8, ror #6
   1f5f4:	orr	r4, ip, r0
   1f5f8:	eor	r6, r6, r8, ror #25
   1f5fc:	add	r1, r5, r1
   1f600:	ror	r5, r0, #13
   1f604:	ldr	r9, [sp, #24]
   1f608:	add	r1, r1, r6
   1f60c:	and	r4, r4, r3
   1f610:	and	r6, ip, r0
   1f614:	eor	r5, r5, r0, ror #2
   1f618:	eor	r5, r5, r0, ror #22
   1f61c:	orr	r4, r4, r6
   1f620:	add	r4, r5, r4
   1f624:	ldr	r5, [sp, #44]	; 0x2c
   1f628:	str	fp, [sp, #48]	; 0x30
   1f62c:	ror	fp, r9, #18
   1f630:	eor	fp, fp, r9, ror #7
   1f634:	add	r7, r7, r1
   1f638:	eor	fp, fp, r9, lsr #3
   1f63c:	add	r1, r4, r1
   1f640:	ror	r9, r5, #19
   1f644:	ldr	r4, [sp, #68]	; 0x44
   1f648:	eor	r9, r9, r5, ror #17
   1f64c:	add	fp, fp, sl
   1f650:	eor	r9, r9, r5, lsr #10
   1f654:	add	fp, fp, r4
   1f658:	ldr	r4, [pc, #-524]	; 1f454 <__assert_fail@plt+0xe168>
   1f65c:	add	sl, r9, fp
   1f660:	eor	r5, lr, r8
   1f664:	add	r4, sl, r4
   1f668:	and	r5, r5, r7
   1f66c:	ror	r6, r7, #11
   1f670:	eor	r5, r5, lr
   1f674:	add	r2, r4, r2
   1f678:	eor	r6, r6, r7, ror #6
   1f67c:	orr	r4, r0, r1
   1f680:	eor	r6, r6, r7, ror #25
   1f684:	add	r2, r5, r2
   1f688:	ror	r5, r1, #13
   1f68c:	ldr	fp, [sp, #52]	; 0x34
   1f690:	add	r2, r2, r6
   1f694:	and	r4, r4, ip
   1f698:	and	r6, r0, r1
   1f69c:	eor	r5, r5, r1, ror #2
   1f6a0:	orr	r4, r4, r6
   1f6a4:	eor	r5, r5, r1, ror #22
   1f6a8:	add	r5, r5, r4
   1f6ac:	ldr	r4, [sp, #48]	; 0x30
   1f6b0:	str	sl, [sp, #84]	; 0x54
   1f6b4:	ror	sl, fp, #18
   1f6b8:	ldr	r9, [sp, #24]
   1f6bc:	eor	sl, sl, fp, ror #7
   1f6c0:	add	r3, r3, r2
   1f6c4:	eor	sl, sl, fp, lsr #3
   1f6c8:	add	r2, r5, r2
   1f6cc:	ror	fp, r4, #19
   1f6d0:	ldr	r5, [sp, #72]	; 0x48
   1f6d4:	eor	fp, fp, r4, ror #17
   1f6d8:	add	sl, sl, r9
   1f6dc:	eor	fp, fp, r4, lsr #10
   1f6e0:	add	sl, sl, r5
   1f6e4:	ldr	r4, [pc, #-660]	; 1f458 <__assert_fail@plt+0xe16c>
   1f6e8:	add	r9, fp, sl
   1f6ec:	eor	r5, r8, r7
   1f6f0:	add	r4, r9, r4
   1f6f4:	and	r5, r5, r3
   1f6f8:	ror	r6, r3, #11
   1f6fc:	str	r9, [sp, #24]
   1f700:	eor	r5, r5, r8
   1f704:	ldr	r9, [sp, #28]
   1f708:	add	lr, r4, lr
   1f70c:	eor	r6, r6, r3, ror #6
   1f710:	orr	r4, r1, r2
   1f714:	eor	r6, r6, r3, ror #25
   1f718:	add	lr, r5, lr
   1f71c:	add	lr, lr, r6
   1f720:	and	r4, r4, r0
   1f724:	and	r6, r1, r2
   1f728:	ror	sl, r9, #18
   1f72c:	orr	r4, r4, r6
   1f730:	ldr	r6, [sp, #84]	; 0x54
   1f734:	ldr	fp, [sp, #52]	; 0x34
   1f738:	ror	r5, r2, #13
   1f73c:	eor	sl, sl, r9, ror #7
   1f740:	eor	r5, r5, r2, ror #2
   1f744:	eor	sl, sl, r9, lsr #3
   1f748:	eor	r5, r5, r2, ror #22
   1f74c:	ror	r9, r6, #19
   1f750:	add	sl, sl, fp
   1f754:	ldr	fp, [sp, #40]	; 0x28
   1f758:	add	r4, r5, r4
   1f75c:	eor	r9, r9, r6, ror #17
   1f760:	add	ip, ip, lr
   1f764:	eor	r9, r9, r6, lsr #10
   1f768:	add	lr, r4, lr
   1f76c:	add	sl, sl, fp
   1f770:	ldr	r4, [pc, #-796]	; 1f45c <__assert_fail@plt+0xe170>
   1f774:	add	sl, r9, sl
   1f778:	eor	r5, r7, r3
   1f77c:	add	r4, sl, r4
   1f780:	and	r5, r5, ip
   1f784:	ror	r9, ip, #11
   1f788:	eor	r5, r5, r7
   1f78c:	add	r8, r4, r8
   1f790:	eor	r9, r9, ip, ror #6
   1f794:	orr	r4, r2, lr
   1f798:	eor	r9, r9, ip, ror #25
   1f79c:	add	r8, r5, r8
   1f7a0:	ror	r5, lr, #13
   1f7a4:	str	sl, [sp, #52]	; 0x34
   1f7a8:	and	r4, r4, r1
   1f7ac:	ldr	sl, [sp, #56]	; 0x38
   1f7b0:	add	r8, r8, r9
   1f7b4:	eor	r5, r5, lr, ror #2
   1f7b8:	and	r9, r2, lr
   1f7bc:	eor	r5, r5, lr, ror #22
   1f7c0:	orr	r9, r4, r9
   1f7c4:	add	r9, r5, r9
   1f7c8:	ldr	r5, [sp, #24]
   1f7cc:	ror	r6, sl, #18
   1f7d0:	ldr	r4, [sp, #28]
   1f7d4:	eor	r6, r6, sl, ror #7
   1f7d8:	add	r0, r0, r8
   1f7dc:	eor	r6, r6, sl, lsr #3
   1f7e0:	add	r8, r9, r8
   1f7e4:	ror	fp, r5, #19
   1f7e8:	ldr	r9, [sp, #76]	; 0x4c
   1f7ec:	eor	fp, fp, r5, ror #17
   1f7f0:	add	r6, r6, r4
   1f7f4:	eor	fp, fp, r5, lsr #10
   1f7f8:	add	r6, r6, r9
   1f7fc:	ldr	r4, [pc, #-932]	; 1f460 <__assert_fail@plt+0xe174>
   1f800:	add	r9, fp, r6
   1f804:	eor	r5, r3, ip
   1f808:	add	r4, r9, r4
   1f80c:	and	r5, r5, r0
   1f810:	ror	r6, r0, #11
   1f814:	eor	r5, r5, r3
   1f818:	add	r7, r4, r7
   1f81c:	eor	r6, r6, r0, ror #6
   1f820:	ldr	fp, [sp, #60]	; 0x3c
   1f824:	orr	r4, lr, r8
   1f828:	eor	r6, r6, r0, ror #25
   1f82c:	add	r7, r5, r7
   1f830:	ror	r5, r8, #13
   1f834:	add	r7, r7, r6
   1f838:	and	r4, r4, r2
   1f83c:	and	r6, lr, r8
   1f840:	eor	r5, r5, r8, ror #2
   1f844:	orr	r4, r4, r6
   1f848:	eor	r5, r5, r8, ror #22
   1f84c:	add	r5, r5, r4
   1f850:	str	r9, [sp, #28]
   1f854:	ldr	r4, [sp, #52]	; 0x34
   1f858:	ror	r9, fp, #18
   1f85c:	eor	r9, r9, fp, ror #7
   1f860:	eor	r9, r9, fp, lsr #3
   1f864:	add	r9, r9, sl
   1f868:	ror	fp, r4, #19
   1f86c:	ldr	sl, [sp, #80]	; 0x50
   1f870:	eor	fp, fp, r4, ror #17
   1f874:	add	r1, r1, r7
   1f878:	eor	fp, fp, r4, lsr #10
   1f87c:	add	r9, r9, sl
   1f880:	ldr	r6, [pc, #-1060]	; 1f464 <__assert_fail@plt+0xe178>
   1f884:	add	sl, fp, r9
   1f888:	eor	r4, ip, r0
   1f88c:	add	r7, r5, r7
   1f890:	add	r6, sl, r6
   1f894:	and	r4, r4, r1
   1f898:	ror	r5, r1, #11
   1f89c:	eor	r4, r4, ip
   1f8a0:	add	r3, r6, r3
   1f8a4:	eor	r5, r5, r1, ror #6
   1f8a8:	ldr	r6, [sp, #20]
   1f8ac:	orr	r9, r8, r7
   1f8b0:	eor	r5, r5, r1, ror #25
   1f8b4:	add	r3, r4, r3
   1f8b8:	add	r3, r3, r5
   1f8bc:	and	r9, r9, lr
   1f8c0:	and	r5, r8, r7
   1f8c4:	ror	r4, r7, #13
   1f8c8:	orr	r9, r9, r5
   1f8cc:	eor	r4, r4, r7, ror #2
   1f8d0:	ldr	r5, [sp, #28]
   1f8d4:	str	sl, [sp, #56]	; 0x38
   1f8d8:	eor	r4, r4, r7, ror #22
   1f8dc:	ror	sl, r6, #18
   1f8e0:	ldr	fp, [sp, #60]	; 0x3c
   1f8e4:	add	r4, r4, r9
   1f8e8:	eor	sl, sl, r6, ror #7
   1f8ec:	add	r2, r2, r3
   1f8f0:	eor	sl, sl, r6, lsr #3
   1f8f4:	add	r3, r4, r3
   1f8f8:	ror	r9, r5, #19
   1f8fc:	ldr	r4, [sp, #44]	; 0x2c
   1f900:	eor	r9, r9, r5, ror #17
   1f904:	add	sl, sl, fp
   1f908:	add	sl, sl, r4
   1f90c:	eor	r9, r9, r5, lsr #10
   1f910:	ldr	r6, [pc, #-1200]	; 1f468 <__assert_fail@plt+0xe17c>
   1f914:	add	r9, r9, sl
   1f918:	eor	r4, r0, r1
   1f91c:	add	r6, r9, r6
   1f920:	and	r4, r4, r2
   1f924:	ror	r5, r2, #11
   1f928:	eor	r4, r4, r0
   1f92c:	add	ip, r6, ip
   1f930:	eor	r5, r5, r2, ror #6
   1f934:	ldr	fp, [sp, #32]
   1f938:	orr	sl, r7, r3
   1f93c:	eor	r5, r5, r2, ror #25
   1f940:	add	ip, r4, ip
   1f944:	and	sl, sl, r8
   1f948:	add	ip, ip, r5
   1f94c:	and	r5, r7, r3
   1f950:	orr	r5, sl, r5
   1f954:	ldr	sl, [sp, #56]	; 0x38
   1f958:	str	r9, [sp, #60]	; 0x3c
   1f95c:	ror	r9, fp, #18
   1f960:	eor	r9, r9, fp, ror #7
   1f964:	ror	r4, r3, #13
   1f968:	eor	r9, r9, fp, lsr #3
   1f96c:	ror	fp, sl, #19
   1f970:	ldr	r6, [sp, #20]
   1f974:	eor	r4, r4, r3, ror #2
   1f978:	eor	fp, fp, sl, ror #17
   1f97c:	eor	r4, r4, r3, ror #22
   1f980:	eor	fp, fp, sl, lsr #10
   1f984:	ldr	sl, [sp, #48]	; 0x30
   1f988:	add	r5, r4, r5
   1f98c:	add	r9, r9, r6
   1f990:	add	lr, lr, ip
   1f994:	add	r9, r9, sl
   1f998:	add	ip, r5, ip
   1f99c:	ldr	r5, [pc, #-1336]	; 1f46c <__assert_fail@plt+0xe180>
   1f9a0:	add	r6, fp, r9
   1f9a4:	eor	r4, r1, r2
   1f9a8:	str	r6, [sp, #64]	; 0x40
   1f9ac:	add	r5, r6, r5
   1f9b0:	and	r4, r4, lr
   1f9b4:	ror	r6, lr, #11
   1f9b8:	eor	r4, r4, r1
   1f9bc:	add	r0, r5, r0
   1f9c0:	eor	r6, r6, lr, ror #6
   1f9c4:	orr	r9, r3, ip
   1f9c8:	eor	r6, r6, lr, ror #25
   1f9cc:	add	r0, r4, r0
   1f9d0:	ror	r5, ip, #13
   1f9d4:	ldr	sl, [sp, #36]	; 0x24
   1f9d8:	add	r0, r0, r6
   1f9dc:	and	r9, r9, r7
   1f9e0:	and	r6, r3, ip
   1f9e4:	eor	r5, r5, ip, ror #2
   1f9e8:	orr	r9, r9, r6
   1f9ec:	eor	r5, r5, ip, ror #22
   1f9f0:	add	r5, r5, r9
   1f9f4:	ldr	r9, [sp, #60]	; 0x3c
   1f9f8:	ror	r4, sl, #18
   1f9fc:	ldr	fp, [sp, #32]
   1fa00:	eor	r4, r4, sl, ror #7
   1fa04:	eor	r4, r4, sl, lsr #3
   1fa08:	ldr	r6, [sp, #84]	; 0x54
   1fa0c:	ror	sl, r9, #19
   1fa10:	eor	sl, sl, r9, ror #17
   1fa14:	add	fp, r4, fp
   1fa18:	eor	sl, sl, r9, lsr #10
   1fa1c:	add	r4, fp, r6
   1fa20:	ldr	r6, [pc, #-1464]	; 1f470 <__assert_fail@plt+0xe184>
   1fa24:	add	r4, sl, r4
   1fa28:	add	r6, r4, r6
   1fa2c:	add	r8, r8, r0
   1fa30:	add	r1, r6, r1
   1fa34:	ldr	r6, [sp, #68]	; 0x44
   1fa38:	eor	r9, r2, lr
   1fa3c:	add	r0, r5, r0
   1fa40:	and	r9, r9, r8
   1fa44:	ror	r5, r8, #11
   1fa48:	eor	r9, r9, r2
   1fa4c:	eor	r5, r5, r8, ror #6
   1fa50:	ror	fp, r6, #18
   1fa54:	str	r4, [sp, #8]
   1fa58:	eor	r5, r5, r8, ror #25
   1fa5c:	orr	r4, ip, r0
   1fa60:	add	r1, r9, r1
   1fa64:	eor	fp, fp, r6, ror #7
   1fa68:	ror	r9, r0, #13
   1fa6c:	add	r1, r1, r5
   1fa70:	and	r4, r4, r3
   1fa74:	and	r5, ip, r0
   1fa78:	eor	r9, r9, r0, ror #2
   1fa7c:	eor	fp, fp, r6, lsr #3
   1fa80:	ldr	r6, [sp, #64]	; 0x40
   1fa84:	orr	r4, r4, r5
   1fa88:	eor	r9, r9, r0, ror #22
   1fa8c:	ldr	sl, [sp, #36]	; 0x24
   1fa90:	add	r9, r9, r4
   1fa94:	add	r9, r9, r1
   1fa98:	add	r7, r7, r1
   1fa9c:	ror	r4, r6, #19
   1faa0:	ldr	r1, [sp, #24]
   1faa4:	eor	r4, r4, r6, ror #17
   1faa8:	add	fp, fp, sl
   1faac:	eor	r4, r4, r6, lsr #10
   1fab0:	add	fp, fp, r1
   1fab4:	ldr	r1, [pc, #-1608]	; 1f474 <__assert_fail@plt+0xe188>
   1fab8:	add	fp, r4, fp
   1fabc:	eor	r6, lr, r8
   1fac0:	ldr	sl, [sp, #72]	; 0x48
   1fac4:	add	r1, fp, r1
   1fac8:	and	r6, r6, r7
   1facc:	ror	r4, r7, #11
   1fad0:	eor	r6, r6, lr
   1fad4:	add	r2, r1, r2
   1fad8:	eor	r4, r4, r7, ror #6
   1fadc:	orr	r1, r0, r9
   1fae0:	eor	r4, r4, r7, ror #25
   1fae4:	add	r2, r6, r2
   1fae8:	ldr	r5, [sp, #8]
   1faec:	add	r2, r2, r4
   1faf0:	str	fp, [sp, #32]
   1faf4:	and	r4, r0, r9
   1faf8:	and	r1, r1, ip
   1fafc:	ror	r6, r9, #13
   1fb00:	ror	fp, sl, #18
   1fb04:	orr	r1, r1, r4
   1fb08:	eor	r6, r6, r9, ror #2
   1fb0c:	ldr	r4, [sp, #68]	; 0x44
   1fb10:	eor	fp, fp, sl, ror #7
   1fb14:	eor	r6, r6, r9, ror #22
   1fb18:	eor	fp, fp, sl, lsr #3
   1fb1c:	add	r6, r6, r1
   1fb20:	add	fp, fp, r4
   1fb24:	ror	r1, r5, #19
   1fb28:	add	r4, r3, r2
   1fb2c:	ldr	r3, [sp, #52]	; 0x34
   1fb30:	eor	r1, r1, r5, ror #17
   1fb34:	eor	r1, r1, r5, lsr #10
   1fb38:	add	fp, fp, r3
   1fb3c:	add	r6, r6, r2
   1fb40:	ldr	r3, [pc, #-1744]	; 1f478 <__assert_fail@plt+0xe18c>
   1fb44:	add	r2, r1, fp
   1fb48:	ldr	fp, [sp, #40]	; 0x28
   1fb4c:	eor	r1, r8, r7
   1fb50:	add	r3, r2, r3
   1fb54:	add	lr, r3, lr
   1fb58:	str	r2, [sp, #12]
   1fb5c:	and	r1, r1, r4
   1fb60:	ror	r2, r4, #11
   1fb64:	ror	r3, fp, #18
   1fb68:	eor	r1, r1, r8
   1fb6c:	eor	r2, r2, r4, ror #6
   1fb70:	eor	r3, r3, fp, ror #7
   1fb74:	orr	r5, r9, r6
   1fb78:	add	r1, r1, lr
   1fb7c:	eor	r2, r2, r4, ror #25
   1fb80:	ror	lr, r6, #13
   1fb84:	eor	r3, r3, fp, lsr #3
   1fb88:	ldr	fp, [sp, #32]
   1fb8c:	add	r2, r1, r2
   1fb90:	and	r5, r5, r0
   1fb94:	and	r1, r9, r6
   1fb98:	eor	lr, lr, r6, ror #2
   1fb9c:	eor	lr, lr, r6, ror #22
   1fba0:	orr	r1, r5, r1
   1fba4:	add	r1, lr, r1
   1fba8:	ldr	r5, [sp, #28]
   1fbac:	ror	lr, fp, #19
   1fbb0:	eor	lr, lr, fp, ror #17
   1fbb4:	add	r3, r3, sl
   1fbb8:	eor	lr, lr, fp, lsr #10
   1fbbc:	add	r3, r3, r5
   1fbc0:	ldr	sl, [pc, #-1868]	; 1f47c <__assert_fail@plt+0xe190>
   1fbc4:	add	ip, ip, r2
   1fbc8:	add	r3, r3, lr
   1fbcc:	add	r1, r1, r2
   1fbd0:	add	sl, r3, sl
   1fbd4:	eor	r2, r7, r4
   1fbd8:	add	r8, sl, r8
   1fbdc:	str	r3, [sp, #16]
   1fbe0:	ldr	sl, [sp, #76]	; 0x4c
   1fbe4:	and	r2, r2, ip
   1fbe8:	ror	r3, ip, #11
   1fbec:	eor	r2, r2, r7
   1fbf0:	eor	r3, r3, ip, ror #6
   1fbf4:	orr	lr, r6, r1
   1fbf8:	add	r2, r2, r8
   1fbfc:	eor	r3, r3, ip, ror #25
   1fc00:	ldr	r8, [sp, #12]
   1fc04:	add	r3, r2, r3
   1fc08:	and	lr, lr, r9
   1fc0c:	and	r2, r6, r1
   1fc10:	ror	r5, r1, #13
   1fc14:	ror	fp, sl, #18
   1fc18:	eor	r5, r5, r1, ror #2
   1fc1c:	eor	fp, fp, sl, ror #7
   1fc20:	orr	r2, lr, r2
   1fc24:	ldr	lr, [sp, #40]	; 0x28
   1fc28:	eor	r5, r5, r1, ror #22
   1fc2c:	eor	fp, fp, sl, lsr #3
   1fc30:	add	r2, r5, r2
   1fc34:	add	fp, fp, lr
   1fc38:	ror	r5, r8, #19
   1fc3c:	add	lr, r0, r3
   1fc40:	ldr	r0, [sp, #56]	; 0x38
   1fc44:	eor	r5, r5, r8, ror #17
   1fc48:	eor	r5, r5, r8, lsr #10
   1fc4c:	add	fp, fp, r0
   1fc50:	ldr	r8, [pc, #-2008]	; 1f480 <__assert_fail@plt+0xe194>
   1fc54:	add	r2, r2, r3
   1fc58:	add	r0, r5, fp
   1fc5c:	eor	r3, r4, ip
   1fc60:	ldr	fp, [sp, #80]	; 0x50
   1fc64:	str	r0, [sp, #20]
   1fc68:	add	r8, r0, r8
   1fc6c:	and	r3, r3, lr
   1fc70:	ror	r0, lr, #11
   1fc74:	add	r7, r8, r7
   1fc78:	eor	r3, r3, r4
   1fc7c:	eor	r0, r0, lr, ror #6
   1fc80:	orr	r8, r1, r2
   1fc84:	add	r3, r3, r7
   1fc88:	eor	r0, r0, lr, ror #25
   1fc8c:	add	r0, r3, r0
   1fc90:	and	r8, r8, r6
   1fc94:	and	r3, r1, r2
   1fc98:	ror	r7, r2, #13
   1fc9c:	ror	r5, fp, #18
   1fca0:	eor	r7, r7, r2, ror #2
   1fca4:	eor	r5, r5, fp, ror #7
   1fca8:	orr	r3, r8, r3
   1fcac:	ldr	r8, [sp, #16]
   1fcb0:	eor	r7, r7, r2, ror #22
   1fcb4:	eor	r5, r5, fp, lsr #3
   1fcb8:	add	r3, r7, r3
   1fcbc:	add	r5, r5, sl
   1fcc0:	ldr	sl, [sp, #16]
   1fcc4:	add	r3, r3, r0
   1fcc8:	add	r9, r9, r0
   1fccc:	ror	r7, r8, #19
   1fcd0:	ldr	r0, [sp, #60]	; 0x3c
   1fcd4:	eor	r7, r7, r8, ror #17
   1fcd8:	add	r5, r5, r0
   1fcdc:	ldr	r8, [sp, #44]	; 0x2c
   1fce0:	eor	r7, r7, sl, lsr #10
   1fce4:	ldr	r0, [pc, #-2152]	; 1f484 <__assert_fail@plt+0xe198>
   1fce8:	add	r7, r7, r5
   1fcec:	eor	r5, ip, lr
   1fcf0:	str	r7, [sp, #36]	; 0x24
   1fcf4:	add	r0, r7, r0
   1fcf8:	and	r5, r5, r9
   1fcfc:	ror	r7, r9, #11
   1fd00:	eor	r5, r5, ip
   1fd04:	add	r4, r0, r4
   1fd08:	eor	r7, r7, r9, ror #6
   1fd0c:	ror	sl, r8, #18
   1fd10:	orr	r0, r2, r3
   1fd14:	eor	r7, r7, r9, ror #25
   1fd18:	add	r4, r5, r4
   1fd1c:	eor	sl, sl, r8, ror #7
   1fd20:	ror	r5, r3, #13
   1fd24:	add	r4, r4, r7
   1fd28:	and	r0, r0, r1
   1fd2c:	and	r7, r2, r3
   1fd30:	eor	r5, r5, r3, ror #2
   1fd34:	eor	sl, sl, r8, lsr #3
   1fd38:	ldr	r8, [sp, #20]
   1fd3c:	orr	r0, r0, r7
   1fd40:	eor	r5, r5, r3, ror #22
   1fd44:	add	r5, r5, r0
   1fd48:	add	r5, r5, r4
   1fd4c:	add	r0, r6, r4
   1fd50:	ror	r7, r8, #19
   1fd54:	ldr	r4, [sp, #64]	; 0x40
   1fd58:	add	sl, sl, fp
   1fd5c:	eor	r7, r7, r8, ror #17
   1fd60:	eor	r7, r7, r8, lsr #10
   1fd64:	ldr	r6, [pc, #-2276]	; 1f488 <__assert_fail@plt+0xe19c>
   1fd68:	add	r8, sl, r4
   1fd6c:	add	r7, r7, r8
   1fd70:	eor	r4, lr, r9
   1fd74:	str	r7, [sp, #40]	; 0x28
   1fd78:	add	r6, r7, r6
   1fd7c:	and	r4, r4, r0
   1fd80:	ror	r7, r0, #11
   1fd84:	ldr	fp, [sp, #48]	; 0x30
   1fd88:	eor	r4, r4, lr
   1fd8c:	add	ip, r6, ip
   1fd90:	eor	r7, r7, r0, ror #6
   1fd94:	orr	r6, r3, r5
   1fd98:	eor	r7, r7, r0, ror #25
   1fd9c:	add	ip, r4, ip
   1fda0:	add	ip, ip, r7
   1fda4:	and	r6, r6, r2
   1fda8:	and	r7, r3, r5
   1fdac:	ror	r4, r5, #13
   1fdb0:	orr	r6, r6, r7
   1fdb4:	eor	r4, r4, r5, ror #2
   1fdb8:	ldr	r7, [sp, #36]	; 0x24
   1fdbc:	ror	sl, fp, #18
   1fdc0:	eor	sl, sl, fp, ror #7
   1fdc4:	eor	r4, r4, r5, ror #22
   1fdc8:	eor	sl, sl, fp, lsr #3
   1fdcc:	add	r4, r4, r6
   1fdd0:	ldr	fp, [sp, #44]	; 0x2c
   1fdd4:	add	r4, r4, ip
   1fdd8:	add	r1, r1, ip
   1fddc:	ror	r6, r7, #19
   1fde0:	ldr	ip, [sp, #8]
   1fde4:	eor	r6, r6, r7, ror #17
   1fde8:	add	sl, sl, fp
   1fdec:	add	sl, sl, ip
   1fdf0:	eor	r6, r6, r7, lsr #10
   1fdf4:	ldr	fp, [pc, #-2416]	; 1f48c <__assert_fail@plt+0xe1a0>
   1fdf8:	add	r7, r6, sl
   1fdfc:	eor	ip, r9, r0
   1fe00:	add	fp, r7, fp
   1fe04:	and	ip, ip, r1
   1fe08:	ror	sl, r1, #11
   1fe0c:	add	lr, fp, lr
   1fe10:	eor	ip, ip, r9
   1fe14:	eor	sl, sl, r1, ror #6
   1fe18:	orr	r6, r5, r4
   1fe1c:	eor	sl, sl, r1, ror #25
   1fe20:	add	ip, ip, lr
   1fe24:	add	ip, ip, sl
   1fe28:	and	r6, r6, r3
   1fe2c:	and	sl, r5, r4
   1fe30:	ldr	r8, [sp, #84]	; 0x54
   1fe34:	orr	r6, r6, sl
   1fe38:	ror	lr, r4, #13
   1fe3c:	ldr	sl, [sp, #40]	; 0x28
   1fe40:	eor	lr, lr, r4, ror #2
   1fe44:	eor	lr, lr, r4, ror #22
   1fe48:	ror	fp, r8, #18
   1fe4c:	add	lr, lr, r6
   1fe50:	ror	r6, sl, #19
   1fe54:	eor	fp, fp, r8, ror #7
   1fe58:	eor	r6, r6, sl, ror #17
   1fe5c:	ldr	sl, [sp, #48]	; 0x30
   1fe60:	add	lr, lr, ip
   1fe64:	add	r2, r2, ip
   1fe68:	eor	fp, fp, r8, lsr #3
   1fe6c:	ldr	ip, [sp, #40]	; 0x28
   1fe70:	add	fp, fp, sl
   1fe74:	ldr	sl, [sp, #32]
   1fe78:	eor	r6, r6, ip, lsr #10
   1fe7c:	add	fp, fp, sl
   1fe80:	add	r6, r6, fp
   1fe84:	ldr	ip, [pc, #-2556]	; 1f490 <__assert_fail@plt+0xe1a4>
   1fe88:	mov	fp, r6
   1fe8c:	eor	r6, r0, r1
   1fe90:	add	ip, fp, ip
   1fe94:	and	r6, r6, r2
   1fe98:	eor	r6, r6, r0
   1fe9c:	add	r9, ip, r9
   1fea0:	add	r9, r6, r9
   1fea4:	ldr	r6, [sp, #24]
   1fea8:	str	r9, [sp, #48]	; 0x30
   1feac:	str	fp, [sp, #44]	; 0x2c
   1feb0:	ror	r9, r6, #18
   1feb4:	ror	fp, r2, #11
   1feb8:	eor	r9, r9, r6, ror #7
   1febc:	eor	fp, fp, r2, ror #6
   1fec0:	eor	r9, r9, r6, lsr #3
   1fec4:	ldr	r6, [sp, #48]	; 0x30
   1fec8:	orr	sl, r4, lr
   1fecc:	eor	fp, fp, r2, ror #25
   1fed0:	ror	ip, lr, #13
   1fed4:	add	r6, r6, fp
   1fed8:	and	sl, sl, r5
   1fedc:	and	fp, r4, lr
   1fee0:	eor	ip, ip, lr, ror #2
   1fee4:	orr	sl, sl, fp
   1fee8:	eor	ip, ip, lr, ror #22
   1feec:	ldr	fp, [sp, #12]
   1fef0:	add	ip, ip, sl
   1fef4:	ror	sl, r7, #19
   1fef8:	add	r9, r9, r8
   1fefc:	eor	sl, sl, r7, ror #17
   1ff00:	add	ip, ip, r6
   1ff04:	add	r3, r3, r6
   1ff08:	eor	sl, sl, r7, lsr #10
   1ff0c:	add	r6, r9, fp
   1ff10:	add	r6, sl, r6
   1ff14:	ldr	r9, [pc, #-2696]	; 1f494 <__assert_fail@plt+0xe1a8>
   1ff18:	mov	sl, r6
   1ff1c:	eor	r6, r1, r2
   1ff20:	add	r9, sl, r9
   1ff24:	and	r6, r6, r3
   1ff28:	ror	fp, r3, #11
   1ff2c:	ldr	r8, [sp, #52]	; 0x34
   1ff30:	add	r0, r9, r0
   1ff34:	eor	r6, r6, r1
   1ff38:	eor	fp, fp, r3, ror #6
   1ff3c:	eor	fp, fp, r3, ror #25
   1ff40:	str	sl, [sp, #48]	; 0x30
   1ff44:	add	r6, r6, r0
   1ff48:	orr	sl, lr, ip
   1ff4c:	add	r6, r6, fp
   1ff50:	and	sl, sl, r4
   1ff54:	and	fp, lr, ip
   1ff58:	ror	r0, ip, #13
   1ff5c:	orr	sl, sl, fp
   1ff60:	eor	r0, r0, ip, ror #2
   1ff64:	ldr	fp, [sp, #44]	; 0x2c
   1ff68:	ror	r9, r8, #18
   1ff6c:	eor	r9, r9, r8, ror #7
   1ff70:	eor	r0, r0, ip, ror #22
   1ff74:	eor	r9, r9, r8, lsr #3
   1ff78:	add	r0, r0, sl
   1ff7c:	ldr	r8, [sp, #24]
   1ff80:	add	r5, r5, r6
   1ff84:	add	r0, r0, r6
   1ff88:	ror	sl, fp, #19
   1ff8c:	ldr	r6, [sp, #16]
   1ff90:	add	r9, r9, r8
   1ff94:	eor	sl, sl, fp, ror #17
   1ff98:	eor	sl, sl, fp, lsr #10
   1ff9c:	add	r6, r9, r6
   1ffa0:	add	r6, r6, sl
   1ffa4:	ldr	r9, [pc, #-2836]	; 1f498 <__assert_fail@plt+0xe1ac>
   1ffa8:	mov	fp, r6
   1ffac:	eor	r6, r2, r3
   1ffb0:	str	fp, [sp, #68]	; 0x44
   1ffb4:	add	r9, fp, r9
   1ffb8:	and	r6, r6, r5
   1ffbc:	ror	fp, r5, #11
   1ffc0:	ldr	r8, [sp, #28]
   1ffc4:	add	r1, r9, r1
   1ffc8:	eor	r6, r6, r2
   1ffcc:	eor	fp, fp, r5, ror #6
   1ffd0:	orr	sl, ip, r0
   1ffd4:	eor	fp, fp, r5, ror #25
   1ffd8:	add	r6, r6, r1
   1ffdc:	add	r6, r6, fp
   1ffe0:	and	sl, sl, lr
   1ffe4:	and	fp, ip, r0
   1ffe8:	ror	r1, r0, #13
   1ffec:	orr	sl, sl, fp
   1fff0:	eor	r1, r1, r0, ror #2
   1fff4:	ldr	fp, [sp, #48]	; 0x30
   1fff8:	ror	r9, r8, #18
   1fffc:	eor	r9, r9, r8, ror #7
   20000:	eor	r1, r1, r0, ror #22
   20004:	eor	r9, r9, r8, lsr #3
   20008:	add	r1, r1, sl
   2000c:	ldr	r8, [sp, #52]	; 0x34
   20010:	add	r1, r1, r6
   20014:	add	r4, r4, r6
   20018:	ror	sl, fp, #19
   2001c:	ldr	r6, [sp, #20]
   20020:	add	r9, r9, r8
   20024:	eor	sl, sl, fp, ror #17
   20028:	add	r6, r9, r6
   2002c:	eor	sl, sl, fp, lsr #10
   20030:	ldr	r9, [pc, #-2972]	; 1f49c <__assert_fail@plt+0xe1b0>
   20034:	add	sl, sl, r6
   20038:	eor	r6, r3, r5
   2003c:	add	r9, sl, r9
   20040:	and	r6, r6, r4
   20044:	ror	fp, r4, #11
   20048:	ldr	r8, [sp, #56]	; 0x38
   2004c:	add	r2, r9, r2
   20050:	eor	r6, r6, r3
   20054:	eor	fp, fp, r4, ror #6
   20058:	str	sl, [sp, #52]	; 0x34
   2005c:	eor	fp, fp, r4, ror #25
   20060:	orr	sl, r0, r1
   20064:	add	r6, r6, r2
   20068:	add	r6, r6, fp
   2006c:	and	sl, sl, ip
   20070:	and	fp, r0, r1
   20074:	ror	r2, r1, #13
   20078:	orr	sl, sl, fp
   2007c:	eor	r2, r2, r1, ror #2
   20080:	ldr	fp, [sp, #68]	; 0x44
   20084:	ror	r9, r8, #18
   20088:	eor	r9, r9, r8, ror #7
   2008c:	eor	r2, r2, r1, ror #22
   20090:	eor	r9, r9, r8, lsr #3
   20094:	add	r2, r2, sl
   20098:	ldr	r8, [sp, #28]
   2009c:	add	r2, r2, r6
   200a0:	add	lr, lr, r6
   200a4:	ror	sl, fp, #19
   200a8:	ldr	r6, [sp, #36]	; 0x24
   200ac:	add	r9, r9, r8
   200b0:	eor	sl, sl, fp, ror #17
   200b4:	eor	sl, sl, fp, lsr #10
   200b8:	add	r6, r9, r6
   200bc:	ldr	r9, [pc, #-3108]	; 1f4a0 <__assert_fail@plt+0xe1b4>
   200c0:	add	r8, sl, r6
   200c4:	eor	r6, r5, r4
   200c8:	add	r9, r8, r9
   200cc:	and	r6, r6, lr
   200d0:	ror	fp, lr, #11
   200d4:	str	r8, [sp, #72]	; 0x48
   200d8:	add	r3, r9, r3
   200dc:	ldr	r8, [sp, #60]	; 0x3c
   200e0:	eor	r6, r6, r5
   200e4:	eor	fp, fp, lr, ror #6
   200e8:	orr	sl, r1, r2
   200ec:	eor	fp, fp, lr, ror #25
   200f0:	add	r6, r6, r3
   200f4:	add	r6, r6, fp
   200f8:	and	sl, sl, r0
   200fc:	and	fp, r1, r2
   20100:	ror	r3, r2, #13
   20104:	orr	sl, sl, fp
   20108:	eor	r3, r3, r2, ror #2
   2010c:	ldr	fp, [sp, #52]	; 0x34
   20110:	ror	r9, r8, #18
   20114:	eor	r9, r9, r8, ror #7
   20118:	eor	r3, r3, r2, ror #22
   2011c:	eor	r9, r9, r8, lsr #3
   20120:	add	r3, r3, sl
   20124:	ldr	r8, [sp, #56]	; 0x38
   20128:	add	r3, r3, r6
   2012c:	add	ip, ip, r6
   20130:	ror	sl, fp, #19
   20134:	ldr	r6, [sp, #40]	; 0x28
   20138:	add	r9, r9, r8
   2013c:	eor	sl, sl, fp, ror #17
   20140:	add	r8, r9, r6
   20144:	eor	sl, sl, fp, lsr #10
   20148:	ldr	r6, [pc, #-3244]	; 1f4a4 <__assert_fail@plt+0xe1b8>
   2014c:	add	r9, sl, r8
   20150:	eor	fp, r4, lr
   20154:	and	fp, fp, ip
   20158:	add	r6, r9, r6
   2015c:	add	r6, r6, r5
   20160:	eor	r5, fp, r4
   20164:	ldr	fp, [sp, #64]	; 0x40
   20168:	str	r9, [sp, #28]
   2016c:	ror	r9, ip, #11
   20170:	eor	r9, r9, ip, ror #6
   20174:	add	r5, r5, r6
   20178:	ror	r6, fp, #18
   2017c:	orr	sl, r2, r3
   20180:	eor	r9, r9, ip, ror #25
   20184:	ror	r8, r3, #13
   20188:	eor	r6, r6, fp, ror #7
   2018c:	add	r5, r5, r9
   20190:	and	sl, sl, r1
   20194:	and	r9, r2, r3
   20198:	eor	r8, r8, r3, ror #2
   2019c:	eor	r6, r6, fp, lsr #3
   201a0:	ldr	fp, [sp, #72]	; 0x48
   201a4:	orr	sl, sl, r9
   201a8:	eor	r8, r8, r3, ror #22
   201ac:	add	r8, r8, sl
   201b0:	ldr	sl, [sp, #60]	; 0x3c
   201b4:	ror	r9, fp, #19
   201b8:	add	r0, r0, r5
   201bc:	add	r6, r6, sl
   201c0:	add	r5, r8, r5
   201c4:	eor	r9, r9, fp, ror #17
   201c8:	mov	sl, r0
   201cc:	eor	r9, r9, fp, lsr #10
   201d0:	mov	r0, r5
   201d4:	add	r6, r6, r7
   201d8:	ldr	r5, [pc, #-3384]	; 1f4a8 <__assert_fail@plt+0xe1bc>
   201dc:	add	r6, r6, r9
   201e0:	eor	r9, lr, ip
   201e4:	ldr	fp, [sp, #8]
   201e8:	add	r5, r6, r5
   201ec:	and	r9, r9, sl
   201f0:	eor	r9, r9, lr
   201f4:	add	r4, r5, r4
   201f8:	str	r6, [sp, #40]	; 0x28
   201fc:	add	r4, r9, r4
   20200:	mov	r6, sl
   20204:	ldr	r9, [sp, #8]
   20208:	ror	r7, sl, #11
   2020c:	ror	r8, r0, #13
   20210:	orr	sl, r3, r0
   20214:	ror	r5, fp, #18
   20218:	eor	r7, r7, r6, ror #6
   2021c:	and	sl, sl, r2
   20220:	eor	r8, r8, r0, ror #2
   20224:	eor	r5, r5, fp, ror #7
   20228:	and	fp, r3, r0
   2022c:	eor	r7, r7, r6, ror #25
   20230:	eor	r8, r8, r0, ror #22
   20234:	orr	sl, sl, fp
   20238:	eor	r5, r5, r9, lsr #3
   2023c:	ldr	r9, [sp, #28]
   20240:	add	r4, r4, r7
   20244:	add	sl, r8, sl
   20248:	ldr	r7, [sp, #28]
   2024c:	ldr	fp, [sp, #64]	; 0x40
   20250:	add	r8, sl, r4
   20254:	add	r1, r1, r4
   20258:	ror	r9, r9, #19
   2025c:	mov	r4, r8
   20260:	ldr	r8, [sp, #44]	; 0x2c
   20264:	add	r5, r5, fp
   20268:	eor	r9, r9, r7, ror #17
   2026c:	eor	r9, r9, r7, lsr #10
   20270:	add	r5, r5, r8
   20274:	ldr	fp, [pc, #-3536]	; 1f4ac <__assert_fail@plt+0xe1c0>
   20278:	add	r5, r5, r9
   2027c:	str	r4, [sp, #24]
   20280:	add	fp, r5, fp
   20284:	eor	r7, ip, r6
   20288:	add	lr, fp, lr
   2028c:	ldr	fp, [sp, #24]
   20290:	str	r6, [sp, #44]	; 0x2c
   20294:	and	r7, r7, r1
   20298:	ldr	r6, [sp, #32]
   2029c:	eor	r7, r7, ip
   202a0:	ror	r8, r4, #13
   202a4:	eor	r8, r8, fp, ror #2
   202a8:	add	lr, r7, lr
   202ac:	ldr	fp, [sp, #24]
   202b0:	ldr	r7, [sp, #24]
   202b4:	orr	sl, r0, r4
   202b8:	ror	r9, r1, #11
   202bc:	ror	r4, r6, #18
   202c0:	and	sl, sl, r3
   202c4:	eor	r9, r9, r1, ror #6
   202c8:	eor	r4, r4, r6, ror #7
   202cc:	and	fp, r0, fp
   202d0:	eor	r9, r9, r1, ror #25
   202d4:	eor	r8, r8, r7, ror #22
   202d8:	orr	fp, sl, fp
   202dc:	eor	r4, r4, r6, lsr #3
   202e0:	ldr	r6, [sp, #40]	; 0x28
   202e4:	add	lr, lr, r9
   202e8:	add	fp, r8, fp
   202ec:	ldr	r9, [sp, #8]
   202f0:	add	r2, r2, lr
   202f4:	add	lr, fp, lr
   202f8:	ror	sl, r6, #19
   202fc:	add	r4, r4, r9
   20300:	mov	r9, lr
   20304:	ldr	lr, [sp, #48]	; 0x30
   20308:	eor	sl, sl, r6, ror #17
   2030c:	add	r4, r4, lr
   20310:	eor	r6, sl, r6, lsr #10
   20314:	ldr	fp, [pc, #-3692]	; 1f4b0 <__assert_fail@plt+0xe1c4>
   20318:	add	r6, r4, r6
   2031c:	ldr	lr, [sp, #44]	; 0x2c
   20320:	add	fp, r6, fp
   20324:	ldr	sl, [sp, #24]
   20328:	mov	r4, r9
   2032c:	eor	r8, lr, r1
   20330:	add	ip, fp, ip
   20334:	ldr	fp, [sp, #44]	; 0x2c
   20338:	str	r4, [sp, #8]
   2033c:	and	r8, r8, r2
   20340:	eor	r8, r8, fp
   20344:	orr	r9, sl, r9
   20348:	mov	fp, sl
   2034c:	ldr	sl, [sp, #8]
   20350:	ror	lr, r4, #13
   20354:	ldr	r4, [sp, #12]
   20358:	and	sl, fp, sl
   2035c:	ldr	fp, [sp, #12]
   20360:	str	r0, [sp, #40]	; 0x28
   20364:	and	r9, r9, r0
   20368:	ldr	r0, [sp, #8]
   2036c:	ror	r4, r4, #18
   20370:	orr	r9, r9, sl
   20374:	ror	r7, r2, #11
   20378:	ldr	sl, [sp, #32]
   2037c:	eor	r4, r4, fp, ror #7
   20380:	eor	r7, r7, r2, ror #6
   20384:	eor	lr, lr, r0, ror #2
   20388:	eor	r4, r4, fp, lsr #3
   2038c:	eor	r7, r7, r2, ror #25
   20390:	add	ip, r8, ip
   20394:	eor	lr, lr, r0, ror #22
   20398:	add	r4, r4, sl
   2039c:	ldr	sl, [sp, #16]
   203a0:	add	ip, ip, r7
   203a4:	add	lr, lr, r9
   203a8:	ror	fp, r5, #19
   203ac:	ldr	r9, [sp, #68]	; 0x44
   203b0:	add	r7, lr, ip
   203b4:	eor	fp, fp, r5, ror #17
   203b8:	add	r3, r3, ip
   203bc:	add	r4, r4, r9
   203c0:	mov	ip, r0
   203c4:	orr	r8, r0, r7
   203c8:	eor	fp, fp, r5, lsr #10
   203cc:	ror	r0, sl, #18
   203d0:	ldr	r9, [pc, #-3876]	; 1f4b4 <__assert_fail@plt+0xe1c8>
   203d4:	add	fp, fp, r4
   203d8:	str	r0, [sp, #16]
   203dc:	ldr	r0, [sp, #44]	; 0x2c
   203e0:	add	r9, fp, r9
   203e4:	eor	r5, r1, r2
   203e8:	add	r0, r9, r0
   203ec:	and	r9, ip, r7
   203f0:	ldr	ip, [sp, #24]
   203f4:	and	r5, r5, r3
   203f8:	ror	lr, r3, #11
   203fc:	eor	r5, r5, r1
   20400:	eor	lr, lr, r3, ror #6
   20404:	and	r8, r8, ip
   20408:	ldr	ip, [sp, #16]
   2040c:	eor	lr, lr, r3, ror #25
   20410:	add	r0, r5, r0
   20414:	add	r0, r0, lr
   20418:	eor	ip, ip, sl, ror #7
   2041c:	ldr	lr, [sp, #12]
   20420:	ror	r4, r7, #13
   20424:	eor	ip, ip, sl, lsr #3
   20428:	str	sl, [sp, #16]
   2042c:	eor	r4, r4, r7, ror #2
   20430:	orr	r8, r8, r9
   20434:	ror	sl, r6, #19
   20438:	ldr	r9, [sp, #52]	; 0x34
   2043c:	add	ip, ip, lr
   20440:	ldr	lr, [sp, #40]	; 0x28
   20444:	eor	r4, r4, r7, ror #22
   20448:	eor	sl, sl, r6, ror #17
   2044c:	add	r8, r4, r8
   20450:	eor	sl, sl, r6, lsr #10
   20454:	add	r4, lr, r0
   20458:	add	ip, ip, r9
   2045c:	ldr	lr, [pc, #-4012]	; 1f4b8 <__assert_fail@plt+0xe1cc>
   20460:	add	r9, ip, sl
   20464:	add	lr, r9, lr
   20468:	add	r0, r8, r0
   2046c:	eor	r6, r2, r3
   20470:	add	r1, lr, r1
   20474:	ldr	lr, [sp, #8]
   20478:	orr	r8, r7, r0
   2047c:	and	r6, r6, r4
   20480:	eor	r6, r6, r2
   20484:	ror	ip, r4, #11
   20488:	and	r8, r8, lr
   2048c:	ldr	lr, [sp, #20]
   20490:	ror	r5, r0, #13
   20494:	eor	ip, ip, r4, ror #6
   20498:	add	r1, r6, r1
   2049c:	ldr	r6, [sp, #20]
   204a0:	and	sl, r7, r0
   204a4:	eor	ip, ip, r4, ror #25
   204a8:	eor	r5, r5, r0, ror #2
   204ac:	add	r1, r1, ip
   204b0:	orr	r8, r8, sl
   204b4:	ldr	ip, [sp, #24]
   204b8:	ldr	sl, [sp, #16]
   204bc:	str	r9, [sp, #12]
   204c0:	eor	r5, r5, r0, ror #22
   204c4:	ldr	r9, [pc, #492]	; 206b8 <__assert_fail@plt+0xf3cc>
   204c8:	ror	lr, lr, #18
   204cc:	add	r5, r5, r8
   204d0:	eor	lr, lr, r6, ror #7
   204d4:	add	r8, ip, r1
   204d8:	add	r9, sl, r9
   204dc:	add	ip, r5, r1
   204e0:	eor	lr, lr, r6, lsr #3
   204e4:	ldr	r5, [sp, #72]	; 0x48
   204e8:	ror	r6, fp, #19
   204ec:	add	lr, lr, r9
   204f0:	eor	r6, r6, fp, ror #17
   204f4:	eor	r1, r3, r4
   204f8:	add	lr, lr, r5
   204fc:	eor	fp, r6, fp, lsr #10
   20500:	add	fp, lr, fp
   20504:	and	r6, r1, r8
   20508:	eor	r6, r6, r3
   2050c:	add	r2, fp, r2
   20510:	ldr	fp, [sp, #36]	; 0x24
   20514:	add	r2, r2, r6
   20518:	ldr	r6, [sp, #36]	; 0x24
   2051c:	ror	r5, r8, #11
   20520:	ror	r1, fp, #18
   20524:	orr	r9, r0, ip
   20528:	ror	lr, ip, #13
   2052c:	eor	r5, r5, r8, ror #6
   20530:	eor	r1, r1, r6, ror #7
   20534:	ldr	sl, [pc, #384]	; 206bc <__assert_fail@plt+0xf3d0>
   20538:	ldr	r6, [sp, #20]
   2053c:	and	fp, r0, ip
   20540:	eor	r5, r5, r8, ror #25
   20544:	and	r9, r9, r7
   20548:	eor	lr, lr, ip, ror #2
   2054c:	eor	lr, lr, ip, ror #22
   20550:	add	r2, r2, r5
   20554:	add	sl, r6, sl
   20558:	orr	r9, r9, fp
   2055c:	ldr	r6, [sp, #36]	; 0x24
   20560:	ldr	r5, [sp, #12]
   20564:	add	r9, lr, r9
   20568:	ldr	lr, [sp, #8]
   2056c:	eor	r1, r1, r6, lsr #3
   20570:	add	fp, lr, r2
   20574:	ror	r6, r5, #19
   20578:	add	r2, r9, r2
   2057c:	mov	lr, r5
   20580:	ldr	r9, [sp, #28]
   20584:	add	r1, r1, sl
   20588:	eor	r6, r6, r5, ror #17
   2058c:	add	r1, r1, r9
   20590:	eor	r5, r4, r8
   20594:	eor	r6, r6, lr, lsr #10
   20598:	add	r6, r1, r6
   2059c:	and	r5, r5, fp
   205a0:	ror	r1, fp, #11
   205a4:	eor	r5, r5, r4
   205a8:	add	r3, r6, r3
   205ac:	eor	r1, r1, fp, ror #6
   205b0:	add	r3, r3, r5
   205b4:	eor	r1, r1, fp, ror #25
   205b8:	orr	r9, ip, r2
   205bc:	add	r3, r3, r1
   205c0:	ror	lr, r2, #13
   205c4:	ldr	r5, [sp, #104]	; 0x68
   205c8:	and	r9, r9, r0
   205cc:	and	r6, ip, r2
   205d0:	add	r7, r7, r3
   205d4:	eor	lr, lr, r2, ror #2
   205d8:	add	r5, r5, r7
   205dc:	orr	r6, r9, r6
   205e0:	eor	lr, lr, r2, ror #22
   205e4:	add	lr, lr, r6
   205e8:	str	r5, [sp, #104]	; 0x68
   205ec:	mov	r6, r5
   205f0:	ldr	r5, [sp, #92]	; 0x5c
   205f4:	ldr	r1, [sp, #4]
   205f8:	add	r2, r5, r2
   205fc:	add	r3, lr, r3
   20600:	ldr	lr, [sp, #120]	; 0x78
   20604:	mov	r7, r2
   20608:	add	r1, r1, #64	; 0x40
   2060c:	str	r2, [sp, #92]	; 0x5c
   20610:	ldr	r2, [sp, #88]	; 0x58
   20614:	cmp	lr, r1
   20618:	str	r1, [sp, #4]
   2061c:	ldr	r1, [sp, #116]	; 0x74
   20620:	add	r3, r2, r3
   20624:	add	r1, r1, r4
   20628:	ldr	lr, [sp, #100]	; 0x64
   2062c:	ldr	r4, [sp, #96]	; 0x60
   20630:	mov	r9, r3
   20634:	str	r3, [sp, #88]	; 0x58
   20638:	ldr	r3, [sp, #124]	; 0x7c
   2063c:	add	r0, lr, r0
   20640:	add	ip, r4, ip
   20644:	ldr	lr, [sp, #112]	; 0x70
   20648:	ldr	r4, [sp, #108]	; 0x6c
   2064c:	str	r0, [r3, #12]
   20650:	str	r0, [sp, #100]	; 0x64
   20654:	mov	r5, r0
   20658:	mov	r0, r3
   2065c:	add	lr, lr, r8
   20660:	add	r4, r4, fp
   20664:	str	r1, [r3, #28]
   20668:	str	r6, [r3, #16]
   2066c:	str	r7, [r3, #4]
   20670:	str	lr, [r3, #24]
   20674:	str	ip, [r3, #8]
   20678:	str	r4, [r3, #20]
   2067c:	str	r1, [sp, #116]	; 0x74
   20680:	mov	r8, r1
   20684:	str	lr, [sp, #112]	; 0x70
   20688:	mov	r1, r6
   2068c:	str	ip, [sp, #96]	; 0x60
   20690:	mov	r6, r7
   20694:	str	r4, [sp, #108]	; 0x6c
   20698:	mov	r3, r9
   2069c:	str	r9, [r0]
   206a0:	mov	sl, r4
   206a4:	mov	r7, ip
   206a8:	mov	r2, lr
   206ac:	bhi	1e3cc <__assert_fail@plt+0xd0e0>
   206b0:	add	sp, sp, #132	; 0x84
   206b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   206b8:	mrclt	3, 7, sl, cr9, cr7, {7}
   206bc:			; <UNDEFINED> instruction: 0xc67178f2
   206c0:	push	{r4, r5, r6, lr}
   206c4:	mov	r4, r0
   206c8:	ldr	r0, [r0, #40]	; 0x28
   206cc:	ldr	r3, [r4, #32]
   206d0:	cmp	r0, #55	; 0x37
   206d4:	add	r3, r0, r3
   206d8:	movhi	r5, #128	; 0x80
   206dc:	movls	r5, #64	; 0x40
   206e0:	movhi	r2, #120	; 0x78
   206e4:	movls	r2, #56	; 0x38
   206e8:	movhi	ip, #31
   206ec:	movls	ip, #15
   206f0:	movhi	lr, #30
   206f4:	movls	lr, #14
   206f8:	cmp	r0, r3
   206fc:	str	r3, [r4, #32]
   20700:	ldrhi	r1, [r4, #36]	; 0x24
   20704:	ldrls	r6, [r4, #36]	; 0x24
   20708:	addhi	r6, r1, #1
   2070c:	lsr	r1, r3, #29
   20710:	add	lr, r4, lr, lsl #2
   20714:	add	ip, r4, ip, lsl #2
   20718:	orr	r1, r1, r6, lsl #3
   2071c:	lsl	r3, r3, #3
   20720:	strhi	r6, [r4, #36]	; 0x24
   20724:	rev	r1, r1
   20728:	add	r6, r4, #44	; 0x2c
   2072c:	rev	r3, r3
   20730:	str	r1, [lr, #44]	; 0x2c
   20734:	sub	r2, r2, r0
   20738:	ldr	r1, [pc, #28]	; 2075c <__assert_fail@plt+0xf470>
   2073c:	add	r0, r6, r0
   20740:	str	r3, [ip, #44]	; 0x2c
   20744:	bl	11058 <memcpy@plt>
   20748:	mov	r2, r4
   2074c:	mov	r1, r5
   20750:	mov	r0, r6
   20754:	pop	{r4, r5, r6, lr}
   20758:	b	1e338 <__assert_fail@plt+0xd04c>
   2075c:	andeq	r1, r4, ip, ror #12
   20760:	push	{r4, r5, r6, lr}
   20764:	mov	r5, r0
   20768:	mov	r4, r1
   2076c:	bl	206c0 <__assert_fail@plt+0xf3d4>
   20770:	ldr	r3, [r5]
   20774:	mov	r0, r4
   20778:	rev	r3, r3
   2077c:	str	r3, [r4]
   20780:	ldr	r3, [r5, #4]
   20784:	rev	r3, r3
   20788:	str	r3, [r4, #4]
   2078c:	ldr	r3, [r5, #8]
   20790:	rev	r3, r3
   20794:	str	r3, [r4, #8]
   20798:	ldr	r3, [r5, #12]
   2079c:	rev	r3, r3
   207a0:	str	r3, [r4, #12]
   207a4:	ldr	r3, [r5, #16]
   207a8:	rev	r3, r3
   207ac:	str	r3, [r4, #16]
   207b0:	ldr	r3, [r5, #20]
   207b4:	rev	r3, r3
   207b8:	str	r3, [r4, #20]
   207bc:	ldr	r3, [r5, #24]
   207c0:	rev	r3, r3
   207c4:	str	r3, [r4, #24]
   207c8:	ldr	r3, [r5, #28]
   207cc:	rev	r3, r3
   207d0:	str	r3, [r4, #28]
   207d4:	pop	{r4, r5, r6, pc}
   207d8:	push	{r4, r5, r6, lr}
   207dc:	mov	r5, r0
   207e0:	mov	r4, r1
   207e4:	bl	206c0 <__assert_fail@plt+0xf3d4>
   207e8:	ldr	r3, [r5]
   207ec:	mov	r0, r4
   207f0:	rev	r3, r3
   207f4:	str	r3, [r4]
   207f8:	ldr	r3, [r5, #4]
   207fc:	rev	r3, r3
   20800:	str	r3, [r4, #4]
   20804:	ldr	r3, [r5, #8]
   20808:	rev	r3, r3
   2080c:	str	r3, [r4, #8]
   20810:	ldr	r3, [r5, #12]
   20814:	rev	r3, r3
   20818:	str	r3, [r4, #12]
   2081c:	ldr	r3, [r5, #16]
   20820:	rev	r3, r3
   20824:	str	r3, [r4, #16]
   20828:	ldr	r3, [r5, #20]
   2082c:	rev	r3, r3
   20830:	str	r3, [r4, #20]
   20834:	ldr	r3, [r5, #24]
   20838:	rev	r3, r3
   2083c:	str	r3, [r4, #24]
   20840:	pop	{r4, r5, r6, pc}
   20844:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   20848:	mov	r6, r2
   2084c:	ldr	r4, [r2, #40]	; 0x28
   20850:	mov	r8, r0
   20854:	cmp	r4, #0
   20858:	mov	r5, r1
   2085c:	bne	2094c <__assert_fail@plt+0xf660>
   20860:	cmp	r5, #63	; 0x3f
   20864:	bls	2093c <__assert_fail@plt+0xf650>
   20868:	tst	r8, #3
   2086c:	beq	20920 <__assert_fail@plt+0xf634>
   20870:	cmp	r5, #64	; 0x40
   20874:	add	r7, r6, #44	; 0x2c
   20878:	beq	208f8 <__assert_fail@plt+0xf60c>
   2087c:	mov	sl, r5
   20880:	mov	r4, r8
   20884:	mov	r9, #64	; 0x40
   20888:	add	r2, r4, #64	; 0x40
   2088c:	mov	r3, r7
   20890:	ldr	lr, [r4]
   20894:	ldr	ip, [r4, #4]
   20898:	ldr	r0, [r4, #8]
   2089c:	ldr	r1, [r4, #12]
   208a0:	add	r4, r4, #16
   208a4:	cmp	r4, r2
   208a8:	str	lr, [r3]
   208ac:	str	ip, [r3, #4]
   208b0:	str	r0, [r3, #8]
   208b4:	str	r1, [r3, #12]
   208b8:	add	r3, r3, #16
   208bc:	bne	20890 <__assert_fail@plt+0xf5a4>
   208c0:	sub	sl, sl, #64	; 0x40
   208c4:	mov	r2, r6
   208c8:	mov	r1, r9
   208cc:	mov	r0, r7
   208d0:	bl	1e338 <__assert_fail@plt+0xd04c>
   208d4:	cmp	sl, #64	; 0x40
   208d8:	bhi	20888 <__assert_fail@plt+0xf59c>
   208dc:	sub	r3, r5, #65	; 0x41
   208e0:	bic	r2, r3, #63	; 0x3f
   208e4:	mov	r3, r2
   208e8:	sub	r5, r5, #64	; 0x40
   208ec:	add	r2, r2, #64	; 0x40
   208f0:	sub	r5, r5, r3
   208f4:	add	r8, r8, r2
   208f8:	ldr	r4, [r6, #40]	; 0x28
   208fc:	mov	r1, r8
   20900:	add	r0, r7, r4
   20904:	mov	r2, r5
   20908:	add	r4, r4, r5
   2090c:	bl	11058 <memcpy@plt>
   20910:	cmp	r4, #63	; 0x3f
   20914:	bhi	2098c <__assert_fail@plt+0xf6a0>
   20918:	str	r4, [r6, #40]	; 0x28
   2091c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   20920:	bic	r4, r5, #63	; 0x3f
   20924:	mov	r0, r8
   20928:	mov	r1, r4
   2092c:	mov	r2, r6
   20930:	bl	1e338 <__assert_fail@plt+0xd04c>
   20934:	and	r5, r5, #63	; 0x3f
   20938:	add	r8, r8, r4
   2093c:	cmp	r5, #0
   20940:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   20944:	add	r7, r6, #44	; 0x2c
   20948:	b	208f8 <__assert_fail@plt+0xf60c>
   2094c:	rsb	r7, r4, #128	; 0x80
   20950:	cmp	r7, r1
   20954:	movcs	r7, r1
   20958:	add	r9, r2, #44	; 0x2c
   2095c:	mov	r1, r8
   20960:	mov	r2, r7
   20964:	add	r0, r9, r4
   20968:	bl	11058 <memcpy@plt>
   2096c:	ldr	r1, [r6, #40]	; 0x28
   20970:	add	r1, r7, r1
   20974:	cmp	r1, #64	; 0x40
   20978:	str	r1, [r6, #40]	; 0x28
   2097c:	bhi	209b8 <__assert_fail@plt+0xf6cc>
   20980:	add	r8, r8, r7
   20984:	sub	r5, r5, r7
   20988:	b	20860 <__assert_fail@plt+0xf574>
   2098c:	sub	r4, r4, #64	; 0x40
   20990:	mov	r2, r6
   20994:	mov	r1, #64	; 0x40
   20998:	mov	r0, r7
   2099c:	bl	1e338 <__assert_fail@plt+0xd04c>
   209a0:	mov	r0, r7
   209a4:	mov	r2, r4
   209a8:	add	r1, r6, #108	; 0x6c
   209ac:	bl	11058 <memcpy@plt>
   209b0:	str	r4, [r6, #40]	; 0x28
   209b4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   209b8:	mov	r2, r6
   209bc:	mov	r0, r9
   209c0:	bic	r1, r1, #63	; 0x3f
   209c4:	bl	1e338 <__assert_fail@plt+0xd04c>
   209c8:	ldr	r2, [r6, #40]	; 0x28
   209cc:	add	r1, r4, r7
   209d0:	and	r2, r2, #63	; 0x3f
   209d4:	bic	r1, r1, #63	; 0x3f
   209d8:	add	r1, r9, r1
   209dc:	mov	r0, r9
   209e0:	str	r2, [r6, #40]	; 0x28
   209e4:	bl	11058 <memcpy@plt>
   209e8:	b	20980 <__assert_fail@plt+0xf694>
   209ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   209f0:	mov	r6, r1
   209f4:	sub	sp, sp, #180	; 0xb4
   209f8:	ldr	ip, [pc, #540]	; 20c1c <__assert_fail@plt+0xf930>
   209fc:	ldr	r1, [pc, #540]	; 20c20 <__assert_fail@plt+0xf934>
   20a00:	ldr	r3, [pc, #540]	; 20c24 <__assert_fail@plt+0xf938>
   20a04:	ldr	r4, [pc, #540]	; 20c28 <__assert_fail@plt+0xf93c>
   20a08:	ldr	lr, [pc, #540]	; 20c2c <__assert_fail@plt+0xf940>
   20a0c:	mov	r5, r2
   20a10:	str	ip, [sp, #4]
   20a14:	str	r1, [sp, #8]
   20a18:	ldr	ip, [pc, #528]	; 20c30 <__assert_fail@plt+0xf944>
   20a1c:	ldr	r1, [pc, #528]	; 20c34 <__assert_fail@plt+0xf948>
   20a20:	ldr	r2, [pc, #528]	; 20c38 <__assert_fail@plt+0xf94c>
   20a24:	str	r3, [sp, #16]
   20a28:	cmp	r6, #63	; 0x3f
   20a2c:	mov	r3, #0
   20a30:	str	r4, [sp, #12]
   20a34:	str	lr, [sp, #20]
   20a38:	str	ip, [sp, #24]
   20a3c:	str	r1, [sp, #28]
   20a40:	str	r2, [sp, #32]
   20a44:	str	r3, [sp, #40]	; 0x28
   20a48:	str	r3, [sp, #36]	; 0x24
   20a4c:	str	r3, [sp, #44]	; 0x2c
   20a50:	mov	sl, r0
   20a54:	bls	20b00 <__assert_fail@plt+0xf814>
   20a58:	tst	r0, #3
   20a5c:	beq	20b78 <__assert_fail@plt+0xf88c>
   20a60:	cmp	r6, #64	; 0x40
   20a64:	beq	20ba0 <__assert_fail@plt+0xf8b4>
   20a68:	mov	r9, r6
   20a6c:	mov	r4, r0
   20a70:	add	r7, sp, #48	; 0x30
   20a74:	add	r8, sp, #4
   20a78:	add	fp, r4, #64	; 0x40
   20a7c:	mov	lr, r7
   20a80:	ldr	r0, [r4]
   20a84:	ldr	r1, [r4, #4]
   20a88:	ldr	r2, [r4, #8]
   20a8c:	ldr	r3, [r4, #12]
   20a90:	mov	ip, lr
   20a94:	add	r4, r4, #16
   20a98:	cmp	r4, fp
   20a9c:	stmia	ip!, {r0, r1, r2, r3}
   20aa0:	mov	lr, ip
   20aa4:	bne	20a80 <__assert_fail@plt+0xf794>
   20aa8:	sub	r9, r9, #64	; 0x40
   20aac:	mov	r2, r8
   20ab0:	mov	r1, #64	; 0x40
   20ab4:	mov	r0, r7
   20ab8:	bl	1e338 <__assert_fail@plt+0xd04c>
   20abc:	cmp	r9, #64	; 0x40
   20ac0:	bhi	20a78 <__assert_fail@plt+0xf78c>
   20ac4:	sub	r2, r6, #65	; 0x41
   20ac8:	bic	r1, r2, #63	; 0x3f
   20acc:	mov	r2, r1
   20ad0:	sub	r6, r6, #64	; 0x40
   20ad4:	add	r1, r1, #64	; 0x40
   20ad8:	sub	r2, r6, r2
   20adc:	add	r1, sl, r1
   20ae0:	ldr	r6, [sp, #44]	; 0x2c
   20ae4:	add	r0, r7, r6
   20ae8:	add	r6, r2, r6
   20aec:	bl	11058 <memcpy@plt>
   20af0:	cmp	r6, #63	; 0x3f
   20af4:	bhi	20bd8 <__assert_fail@plt+0xf8ec>
   20af8:	str	r6, [sp, #44]	; 0x2c
   20afc:	b	20b0c <__assert_fail@plt+0xf820>
   20b00:	cmp	r6, #0
   20b04:	bne	20c04 <__assert_fail@plt+0xf918>
   20b08:	add	r8, sp, #4
   20b0c:	mov	r0, r8
   20b10:	bl	206c0 <__assert_fail@plt+0xf3d4>
   20b14:	add	r0, sp, #20
   20b18:	ldr	r6, [sp, #4]
   20b1c:	ldm	r0, {r0, r1, r2, r3}
   20b20:	rev	r6, r6
   20b24:	ldr	r4, [sp, #8]
   20b28:	ldr	lr, [sp, #12]
   20b2c:	ldr	ip, [sp, #16]
   20b30:	rev	r4, r4
   20b34:	rev	lr, lr
   20b38:	rev	ip, ip
   20b3c:	rev	r0, r0
   20b40:	rev	r1, r1
   20b44:	rev	r2, r2
   20b48:	rev	r3, r3
   20b4c:	str	r0, [r5, #16]
   20b50:	str	r6, [r5]
   20b54:	mov	r0, r5
   20b58:	str	r4, [r5, #4]
   20b5c:	str	lr, [r5, #8]
   20b60:	str	ip, [r5, #12]
   20b64:	str	r1, [r5, #20]
   20b68:	str	r2, [r5, #24]
   20b6c:	str	r3, [r5, #28]
   20b70:	add	sp, sp, #180	; 0xb4
   20b74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20b78:	bic	r4, r6, #63	; 0x3f
   20b7c:	add	r8, sp, #4
   20b80:	mov	r1, r4
   20b84:	mov	r2, r8
   20b88:	bl	1e338 <__assert_fail@plt+0xd04c>
   20b8c:	ands	r2, r6, #63	; 0x3f
   20b90:	addne	r1, sl, r4
   20b94:	addne	r7, sp, #48	; 0x30
   20b98:	beq	20b0c <__assert_fail@plt+0xf820>
   20b9c:	b	20ae0 <__assert_fail@plt+0xf7f4>
   20ba0:	add	r7, sp, #48	; 0x30
   20ba4:	add	r4, r0, #64	; 0x40
   20ba8:	mov	lr, r7
   20bac:	ldr	r0, [sl]
   20bb0:	ldr	r1, [sl, #4]
   20bb4:	ldr	r2, [sl, #8]
   20bb8:	ldr	r3, [sl, #12]
   20bbc:	mov	ip, lr
   20bc0:	add	sl, sl, #16
   20bc4:	cmp	sl, r4
   20bc8:	stmia	ip!, {r0, r1, r2, r3}
   20bcc:	mov	lr, ip
   20bd0:	bne	20bac <__assert_fail@plt+0xf8c0>
   20bd4:	add	r8, sp, #4
   20bd8:	mov	r2, r8
   20bdc:	mov	r0, r7
   20be0:	sub	r6, r6, #64	; 0x40
   20be4:	mov	r1, #64	; 0x40
   20be8:	bl	1e338 <__assert_fail@plt+0xd04c>
   20bec:	mov	r0, r7
   20bf0:	mov	r2, r6
   20bf4:	mov	r3, #128	; 0x80
   20bf8:	add	r1, sp, #112	; 0x70
   20bfc:	bl	110d0 <__memcpy_chk@plt>
   20c00:	b	20af8 <__assert_fail@plt+0xf80c>
   20c04:	mov	r1, sl
   20c08:	mov	r2, r6
   20c0c:	add	r0, sp, #48	; 0x30
   20c10:	bl	11058 <memcpy@plt>
   20c14:	add	r8, sp, #4
   20c18:	b	20af8 <__assert_fail@plt+0xf80c>
   20c1c:	bvs	29a5c0 <optarg@@GLIBC_2.4+0x248418>
   20c20:	bllt	1a0c63c <optarg@@GLIBC_2.4+0x19ba494>
   20c24:	strbge	pc, [pc, #-1338]	; 206f2 <__assert_fail@plt+0xf406>	; <UNPREDICTABLE>
   20c28:	stclcc	3, cr15, [lr], #-456	; 0xfffffe38
   20c2c:	tstpl	lr, pc, ror r2
   20c30:	blls	17ae68 <optarg@@GLIBC_2.4+0x128cc0>
   20c34:	svcne	0x0083d9ab
   20c38:	blpl	ff8540a4 <optarg@@GLIBC_2.4+0xff801efc>
   20c3c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20c40:	mov	r6, r1
   20c44:	sub	sp, sp, #180	; 0xb4
   20c48:	ldr	ip, [pc, #524]	; 20e5c <__assert_fail@plt+0xfb70>
   20c4c:	ldr	r1, [pc, #524]	; 20e60 <__assert_fail@plt+0xfb74>
   20c50:	ldr	r3, [pc, #524]	; 20e64 <__assert_fail@plt+0xfb78>
   20c54:	ldr	r4, [pc, #524]	; 20e68 <__assert_fail@plt+0xfb7c>
   20c58:	ldr	lr, [pc, #524]	; 20e6c <__assert_fail@plt+0xfb80>
   20c5c:	mov	r5, r2
   20c60:	str	ip, [sp, #4]
   20c64:	str	r1, [sp, #8]
   20c68:	ldr	ip, [pc, #512]	; 20e70 <__assert_fail@plt+0xfb84>
   20c6c:	ldr	r1, [pc, #512]	; 20e74 <__assert_fail@plt+0xfb88>
   20c70:	ldr	r2, [pc, #512]	; 20e78 <__assert_fail@plt+0xfb8c>
   20c74:	str	r3, [sp, #16]
   20c78:	cmp	r6, #63	; 0x3f
   20c7c:	mov	r3, #0
   20c80:	str	r4, [sp, #12]
   20c84:	str	lr, [sp, #20]
   20c88:	str	ip, [sp, #24]
   20c8c:	str	r1, [sp, #28]
   20c90:	str	r2, [sp, #32]
   20c94:	str	r3, [sp, #40]	; 0x28
   20c98:	str	r3, [sp, #36]	; 0x24
   20c9c:	str	r3, [sp, #44]	; 0x2c
   20ca0:	mov	sl, r0
   20ca4:	bls	20d50 <__assert_fail@plt+0xfa64>
   20ca8:	tst	r0, #3
   20cac:	beq	20db8 <__assert_fail@plt+0xfacc>
   20cb0:	cmp	r6, #64	; 0x40
   20cb4:	beq	20de0 <__assert_fail@plt+0xfaf4>
   20cb8:	mov	r9, r6
   20cbc:	mov	r4, r0
   20cc0:	add	r7, sp, #48	; 0x30
   20cc4:	add	r8, sp, #4
   20cc8:	add	fp, r4, #64	; 0x40
   20ccc:	mov	lr, r7
   20cd0:	ldr	r0, [r4]
   20cd4:	ldr	r1, [r4, #4]
   20cd8:	ldr	r2, [r4, #8]
   20cdc:	ldr	r3, [r4, #12]
   20ce0:	mov	ip, lr
   20ce4:	add	r4, r4, #16
   20ce8:	cmp	r4, fp
   20cec:	stmia	ip!, {r0, r1, r2, r3}
   20cf0:	mov	lr, ip
   20cf4:	bne	20cd0 <__assert_fail@plt+0xf9e4>
   20cf8:	sub	r9, r9, #64	; 0x40
   20cfc:	mov	r2, r8
   20d00:	mov	r1, #64	; 0x40
   20d04:	mov	r0, r7
   20d08:	bl	1e338 <__assert_fail@plt+0xd04c>
   20d0c:	cmp	r9, #64	; 0x40
   20d10:	bhi	20cc8 <__assert_fail@plt+0xf9dc>
   20d14:	sub	r2, r6, #65	; 0x41
   20d18:	bic	r1, r2, #63	; 0x3f
   20d1c:	mov	r2, r1
   20d20:	sub	r6, r6, #64	; 0x40
   20d24:	add	r1, r1, #64	; 0x40
   20d28:	sub	r2, r6, r2
   20d2c:	add	r1, sl, r1
   20d30:	ldr	r6, [sp, #44]	; 0x2c
   20d34:	add	r0, r7, r6
   20d38:	add	r6, r2, r6
   20d3c:	bl	11058 <memcpy@plt>
   20d40:	cmp	r6, #63	; 0x3f
   20d44:	bhi	20e18 <__assert_fail@plt+0xfb2c>
   20d48:	str	r6, [sp, #44]	; 0x2c
   20d4c:	b	20d5c <__assert_fail@plt+0xfa70>
   20d50:	cmp	r6, #0
   20d54:	bne	20e44 <__assert_fail@plt+0xfb58>
   20d58:	add	r8, sp, #4
   20d5c:	mov	r0, r8
   20d60:	bl	206c0 <__assert_fail@plt+0xf3d4>
   20d64:	add	r0, sp, #16
   20d68:	ldmib	sp, {r4, lr}
   20d6c:	ldm	r0, {r0, r1, r2, r3}
   20d70:	ldr	ip, [sp, #12]
   20d74:	rev	r4, r4
   20d78:	rev	lr, lr
   20d7c:	rev	ip, ip
   20d80:	rev	r0, r0
   20d84:	rev	r1, r1
   20d88:	rev	r2, r2
   20d8c:	rev	r3, r3
   20d90:	str	r0, [r5, #12]
   20d94:	str	r4, [r5]
   20d98:	mov	r0, r5
   20d9c:	str	lr, [r5, #4]
   20da0:	str	ip, [r5, #8]
   20da4:	str	r1, [r5, #16]
   20da8:	str	r2, [r5, #20]
   20dac:	str	r3, [r5, #24]
   20db0:	add	sp, sp, #180	; 0xb4
   20db4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20db8:	bic	r4, r6, #63	; 0x3f
   20dbc:	add	r8, sp, #4
   20dc0:	mov	r1, r4
   20dc4:	mov	r2, r8
   20dc8:	bl	1e338 <__assert_fail@plt+0xd04c>
   20dcc:	ands	r2, r6, #63	; 0x3f
   20dd0:	addne	r1, sl, r4
   20dd4:	addne	r7, sp, #48	; 0x30
   20dd8:	beq	20d5c <__assert_fail@plt+0xfa70>
   20ddc:	b	20d30 <__assert_fail@plt+0xfa44>
   20de0:	add	r7, sp, #48	; 0x30
   20de4:	add	r4, r0, #64	; 0x40
   20de8:	mov	lr, r7
   20dec:	ldr	r0, [sl]
   20df0:	ldr	r1, [sl, #4]
   20df4:	ldr	r2, [sl, #8]
   20df8:	ldr	r3, [sl, #12]
   20dfc:	mov	ip, lr
   20e00:	add	sl, sl, #16
   20e04:	cmp	sl, r4
   20e08:	stmia	ip!, {r0, r1, r2, r3}
   20e0c:	mov	lr, ip
   20e10:	bne	20dec <__assert_fail@plt+0xfb00>
   20e14:	add	r8, sp, #4
   20e18:	mov	r2, r8
   20e1c:	mov	r0, r7
   20e20:	sub	r6, r6, #64	; 0x40
   20e24:	mov	r1, #64	; 0x40
   20e28:	bl	1e338 <__assert_fail@plt+0xd04c>
   20e2c:	mov	r0, r7
   20e30:	mov	r2, r6
   20e34:	mov	r3, #128	; 0x80
   20e38:	add	r1, sp, #112	; 0x70
   20e3c:	bl	110d0 <__memcpy_chk@plt>
   20e40:	b	20d48 <__assert_fail@plt+0xfa5c>
   20e44:	mov	r1, sl
   20e48:	mov	r2, r6
   20e4c:	add	r0, sp, #48	; 0x30
   20e50:	bl	11058 <memcpy@plt>
   20e54:	add	r8, sp, #4
   20e58:	b	20d48 <__assert_fail@plt+0xfa5c>
   20e5c:	ldrdgt	r9, [r5, -r8]
   20e60:	ldrbtcc	sp, [ip], -r7, lsl #10
   20e64:			; <UNDEFINED> instruction: 0xf70e5939
   20e68:	rsbscc	sp, r0, r7, lsl sp
   20e6c:			; <UNDEFINED> instruction: 0xffc00b31
   20e70:	ldmdavs	r8, {r0, r4, r8, sl, ip}^
   20e74:	ldrbtvs	r8, [r9], #4007	; 0xfa7
   20e78:	cdplt	15, 15, cr4, cr10, cr4, {5}
   20e7c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   20e80:	mov	r5, r0
   20e84:	sub	sp, sp, #344	; 0x158
   20e88:	ldr	r0, [pc, #208]	; 20f60 <__assert_fail@plt+0xfc74>
   20e8c:	mov	r9, r1
   20e90:	mov	r4, r2
   20e94:	mov	r8, r3
   20e98:	bl	3d47c <__assert_fail@plt+0x2c190>
   20e9c:	subs	r6, r0, #0
   20ea0:	moveq	r0, #1
   20ea4:	beq	20f14 <__assert_fail@plt+0xfc28>
   20ea8:	mov	r0, sp
   20eac:	blx	r4
   20eb0:	mov	r7, #1
   20eb4:	mov	sl, #32768	; 0x8000
   20eb8:	mov	r4, #0
   20ebc:	b	20ed8 <__assert_fail@plt+0xfbec>
   20ec0:	bl	112b0 <fread_unlocked@plt>
   20ec4:	add	r4, r4, r0
   20ec8:	cmp	r4, #32768	; 0x8000
   20ecc:	beq	20f1c <__assert_fail@plt+0xfc30>
   20ed0:	cmp	r0, #0
   20ed4:	beq	20f30 <__assert_fail@plt+0xfc44>
   20ed8:	ldr	ip, [r5]
   20edc:	rsb	r2, r4, #32768	; 0x8000
   20ee0:	tst	ip, #16
   20ee4:	add	r0, r6, r4
   20ee8:	mov	r3, r5
   20eec:	mov	r1, r7
   20ef0:	beq	20ec0 <__assert_fail@plt+0xfbd4>
   20ef4:	cmp	r4, #0
   20ef8:	bne	20f4c <__assert_fail@plt+0xfc60>
   20efc:	mov	r1, r9
   20f00:	mov	r0, sp
   20f04:	blx	r8
   20f08:	mov	r0, r6
   20f0c:	bl	3618c <__assert_fail@plt+0x24ea0>
   20f10:	mov	r0, #0
   20f14:	add	sp, sp, #344	; 0x158
   20f18:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   20f1c:	mov	r2, sp
   20f20:	mov	r1, sl
   20f24:	mov	r0, r6
   20f28:	bl	211d0 <__assert_fail@plt+0xfee4>
   20f2c:	b	20eb8 <__assert_fail@plt+0xfbcc>
   20f30:	ldr	r3, [r5]
   20f34:	tst	r3, #32
   20f38:	beq	20ef4 <__assert_fail@plt+0xfc08>
   20f3c:	mov	r0, r6
   20f40:	bl	3618c <__assert_fail@plt+0x24ea0>
   20f44:	mov	r0, #1
   20f48:	b	20f14 <__assert_fail@plt+0xfc28>
   20f4c:	mov	r1, r4
   20f50:	mov	r2, sp
   20f54:	mov	r0, r6
   20f58:	bl	32cd4 <__assert_fail@plt+0x219e8>
   20f5c:	b	20efc <__assert_fail@plt+0xfc10>
   20f60:	andeq	r8, r0, r8, asr #32
   20f64:	ldr	r3, [pc, #4]	; 20f70 <__assert_fail@plt+0xfc84>
   20f68:	ldr	r2, [pc, #4]	; 20f74 <__assert_fail@plt+0xfc88>
   20f6c:	b	20e7c <__assert_fail@plt+0xfb90>
   20f70:	andeq	r2, r3, r4, lsl ip
   20f74:	muleq	r2, r0, pc	; <UNPREDICTABLE>
   20f78:	ldr	r3, [pc, #4]	; 20f84 <__assert_fail@plt+0xfc98>
   20f7c:	ldr	r2, [pc, #4]	; 20f88 <__assert_fail@plt+0xfc9c>
   20f80:	b	20e7c <__assert_fail@plt+0xfb90>
   20f84:	andeq	r2, r3, r4, ror ip
   20f88:	andeq	r1, r2, r8, asr r0
   20f8c:	andeq	r0, r0, r0
   20f90:	push	{r4, r5, r6, r7, r8, r9}
   20f94:	mov	r1, #0
   20f98:	add	r7, pc, #120	; 0x78
   20f9c:	ldrd	r6, [r7]
   20fa0:	add	r5, pc, #120	; 0x78
   20fa4:	ldrd	r4, [r5]
   20fa8:	add	r3, pc, #120	; 0x78
   20fac:	ldrd	r2, [r3]
   20fb0:	add	r9, pc, #120	; 0x78
   20fb4:	ldrd	r8, [r9]
   20fb8:	strd	r6, [r0]
   20fbc:	add	r7, pc, #116	; 0x74
   20fc0:	ldrd	r6, [r7]
   20fc4:	strd	r4, [r0, #8]
   20fc8:	strd	r2, [r0, #16]
   20fcc:	add	r5, pc, #108	; 0x6c
   20fd0:	ldrd	r4, [r5]
   20fd4:	add	r3, pc, #108	; 0x6c
   20fd8:	ldrd	r2, [r3]
   20fdc:	strd	r8, [r0, #24]
   20fe0:	add	r9, pc, #104	; 0x68
   20fe4:	ldrd	r8, [r9]
   20fe8:	strd	r6, [r0, #32]
   20fec:	mov	r6, #0
   20ff0:	mov	r7, #0
   20ff4:	strd	r4, [r0, #40]	; 0x28
   20ff8:	strd	r8, [r0, #56]	; 0x38
   20ffc:	strd	r6, [r0, #72]	; 0x48
   21000:	strd	r6, [r0, #64]	; 0x40
   21004:	strd	r2, [r0, #48]	; 0x30
   21008:	str	r1, [r0, #80]	; 0x50
   2100c:	pop	{r4, r5, r6, r7, r8, r9}
   21010:	bx	lr
   21014:	nop			; (mov r0, r0)
   21018:	vtbl.8	d12, {d12-d13}, d8
   2101c:	bvs	29a9c0 <optarg@@GLIBC_2.4+0x248818>
   21020:	strbhi	sl, [sl], #1851	; 0x73b
   21024:	bllt	1a0ca40 <optarg@@GLIBC_2.4+0x19ba898>
   21028:	vcmla.f32	d15, d4, d27[0], #90
   2102c:	stclcc	3, cr15, [lr], #-456	; 0xfffffe38
   21030:	svcpl	0x001d36f1
   21034:	strbge	pc, [pc, #-1338]	; 20b02 <__assert_fail@plt+0xf816>	; <UNPREDICTABLE>
   21038:	sfmge	f0, 3, [r6, #836]!	; 0x344
   2103c:	tstpl	lr, pc, ror r2
   21040:	blcs	fbc0c4 <optarg@@GLIBC_2.4+0xf69f1c>
   21044:	blls	17b27c <optarg@@GLIBC_2.4+0x1290d4>
   21048:	blx	10905fe <optarg@@GLIBC_2.4+0x103e456>
   2104c:	svcne	0x0083d9ab
   21050:	cmnne	lr, #1073741854	; 0x4000001e
   21054:	blpl	ff8544c0 <optarg@@GLIBC_2.4+0xff802318>
   21058:	push	{r4, r5, r6, r7, r8, r9}
   2105c:	mov	r1, #0
   21060:	add	r7, pc, #120	; 0x78
   21064:	ldrd	r6, [r7]
   21068:	add	r5, pc, #120	; 0x78
   2106c:	ldrd	r4, [r5]
   21070:	add	r3, pc, #120	; 0x78
   21074:	ldrd	r2, [r3]
   21078:	add	r9, pc, #120	; 0x78
   2107c:	ldrd	r8, [r9]
   21080:	strd	r6, [r0]
   21084:	add	r7, pc, #116	; 0x74
   21088:	ldrd	r6, [r7]
   2108c:	strd	r4, [r0, #8]
   21090:	strd	r2, [r0, #16]
   21094:	add	r5, pc, #108	; 0x6c
   21098:	ldrd	r4, [r5]
   2109c:	add	r3, pc, #108	; 0x6c
   210a0:	ldrd	r2, [r3]
   210a4:	strd	r8, [r0, #24]
   210a8:	add	r9, pc, #104	; 0x68
   210ac:	ldrd	r8, [r9]
   210b0:	strd	r6, [r0, #32]
   210b4:	mov	r6, #0
   210b8:	mov	r7, #0
   210bc:	strd	r4, [r0, #40]	; 0x28
   210c0:	strd	r8, [r0, #56]	; 0x38
   210c4:	strd	r6, [r0, #72]	; 0x48
   210c8:	strd	r6, [r0, #64]	; 0x40
   210cc:	strd	r2, [r0, #48]	; 0x30
   210d0:	str	r1, [r0, #80]	; 0x50
   210d4:	pop	{r4, r5, r6, r7, r8, r9}
   210d8:	bx	lr
   210dc:	nop			; (mov r0, r0)
   210e0:	ldrdgt	r9, [r5, -r8]
   210e4:	blgt	fef08660 <optarg@@GLIBC_2.4+0xfeeb64b8>
   210e8:	ldrbtcc	sp, [ip], -r7, lsl #10
   210ec:	addsvs	r2, sl, #688128	; 0xa8000
   210f0:	rsbscc	sp, r0, r7, lsl sp
   210f4:	cmpls	r9, sl, asr r1
   210f8:			; <UNDEFINED> instruction: 0xf70e5939
   210fc:	strne	lr, [pc, #-3288]!	; 2042c <__assert_fail@plt+0xf140>
   21100:			; <UNDEFINED> instruction: 0xffc00b31
   21104:	ldrvs	r2, [r3, -r7, ror #12]!
   21108:	ldmdavs	r8, {r0, r4, r8, sl, ip}^
   2110c:			; <UNDEFINED> instruction: 0x8eb44a87
   21110:	ldrbtvs	r8, [r9], #4007	; 0xfa7
   21114:	blle	32c950 <optarg@@GLIBC_2.4+0x2da7a8>
   21118:	cdplt	15, 15, cr4, cr10, cr4, {5}
   2111c:			; <UNDEFINED> instruction: 0x47b5481d
   21120:	push	{r4, r5, lr}
   21124:	sub	ip, r0, #8
   21128:	sub	sp, sp, #12
   2112c:	mov	r5, r1
   21130:	add	r4, r0, #56	; 0x38
   21134:	mov	r2, r1
   21138:	ldr	lr, [ip, #8]!
   2113c:	mov	r3, sp
   21140:	rev	lr, lr
   21144:	ldr	r1, [ip, #4]
   21148:	str	lr, [sp, #4]
   2114c:	rev	r1, r1
   21150:	str	r1, [sp]
   21154:	ldm	r3!, {r0, r1}
   21158:	cmp	ip, r4
   2115c:	add	r2, r2, #8
   21160:	str	r0, [r2, #-8]
   21164:	str	r1, [r2, #-4]
   21168:	bne	21138 <__assert_fail@plt+0xfe4c>
   2116c:	mov	r0, r5
   21170:	add	sp, sp, #12
   21174:	pop	{r4, r5, pc}
   21178:	push	{r4, r5, lr}
   2117c:	sub	ip, r0, #8
   21180:	sub	sp, sp, #12
   21184:	mov	r5, r1
   21188:	add	r4, r0, #40	; 0x28
   2118c:	mov	r2, r1
   21190:	ldr	lr, [ip, #8]!
   21194:	mov	r3, sp
   21198:	rev	lr, lr
   2119c:	ldr	r1, [ip, #4]
   211a0:	str	lr, [sp, #4]
   211a4:	rev	r1, r1
   211a8:	str	r1, [sp]
   211ac:	ldm	r3!, {r0, r1}
   211b0:	cmp	ip, r4
   211b4:	add	r2, r2, #8
   211b8:	str	r0, [r2, #-8]
   211bc:	str	r1, [r2, #-4]
   211c0:	bne	21190 <__assert_fail@plt+0xfea4>
   211c4:	mov	r0, r5
   211c8:	add	sp, sp, #12
   211cc:	pop	{r4, r5, pc}
   211d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   211d4:	sub	sp, sp, #7296	; 0x1c80
   211d8:	sub	sp, sp, #4
   211dc:	add	r3, sp, #7232	; 0x1c40
   211e0:	add	r3, r3, #60	; 0x3c
   211e4:	mov	lr, r2
   211e8:	str	r2, [r3]
   211ec:	ldrd	r2, [r2, #64]	; 0x40
   211f0:	mov	r5, #0
   211f4:	ldrd	r6, [lr, #72]	; 0x48
   211f8:	adds	r2, r2, r1
   211fc:	adc	r3, r3, r5
   21200:	cmp	r5, r3
   21204:	cmpeq	r1, r2
   21208:	ldrd	r8, [lr, #24]
   2120c:	mov	ip, lr
   21210:	movhi	ip, #1
   21214:	movls	ip, #0
   21218:	adds	r6, r6, ip
   2121c:	add	r4, sp, #7232	; 0x1c40
   21220:	adc	r7, r7, #0
   21224:	add	r4, r4, #56	; 0x38
   21228:	bic	r1, r1, #7
   2122c:	strd	r2, [lr, #64]	; 0x40
   21230:	strd	r8, [sp, #40]	; 0x28
   21234:	ldrd	r2, [lr]
   21238:	ldrd	r8, [lr, #40]	; 0x28
   2123c:	add	r1, r0, r1
   21240:	ldrd	sl, [lr, #32]
   21244:	str	r1, [r4]
   21248:	strd	r6, [lr, #72]	; 0x48
   2124c:	ldrd	r4, [lr, #8]
   21250:	ldrd	r6, [lr, #16]
   21254:	strd	r2, [sp, #24]
   21258:	mov	r2, r8
   2125c:	mov	r3, r9
   21260:	cmp	r0, r1
   21264:	strd	sl, [sp, #32]
   21268:	strd	r4, [sp, #56]	; 0x38
   2126c:	strd	r6, [sp, #80]	; 0x50
   21270:	strd	r2, [sp, #48]	; 0x30
   21274:	ldrd	sl, [lr, #48]	; 0x30
   21278:	ldrd	r8, [lr, #56]	; 0x38
   2127c:	bcs	32afc <__assert_fail@plt+0x21810>
   21280:	add	r1, sp, #7168	; 0x1c00
   21284:	add	r1, r1, #32
   21288:	strd	r8, [r1]
   2128c:	add	r1, sp, #1280	; 0x500
   21290:	str	r0, [sp, #12]
   21294:	strd	sl, [r1]
   21298:	add	r1, sp, #7168	; 0x1c00
   2129c:	add	r1, r1, #24
   212a0:	strd	r2, [r1]
   212a4:	ldrd	r0, [sp, #32]
   212a8:	add	r3, sp, #1264	; 0x4f0
   212ac:	add	r3, r3, #8
   212b0:	strd	r0, [r3]
   212b4:	ldrd	r0, [sp, #40]	; 0x28
   212b8:	add	r3, sp, #1264	; 0x4f0
   212bc:	strd	sl, [sp, #16]
   212c0:	strd	r0, [r3]
   212c4:	add	r3, sp, #1248	; 0x4e0
   212c8:	add	r3, r3, #8
   212cc:	strd	r6, [r3]
   212d0:	add	r3, sp, #7168	; 0x1c00
   212d4:	add	r3, r3, #16
   212d8:	add	r1, sp, #7168	; 0x1c00
   212dc:	strd	r4, [r3]
   212e0:	ldrd	r2, [sp, #24]
   212e4:	add	r1, r1, #8
   212e8:	strd	r8, [sp, #64]	; 0x40
   212ec:	strd	r2, [r1]
   212f0:	ldrd	sl, [sp, #32]
   212f4:	ldr	r6, [sp, #12]
   212f8:	add	ip, sp, #1296	; 0x510
   212fc:	lsr	r3, sl, #18
   21300:	orr	r3, r3, fp, lsl #14
   21304:	str	r3, [sp, #1296]	; 0x510
   21308:	lsl	r3, fp, #23
   2130c:	orr	r3, r3, sl, lsr #9
   21310:	str	r3, [sp, #1308]	; 0x51c
   21314:	ldr	r3, [r6, #4]
   21318:	lsr	r2, sl, #14
   2131c:	rev	r3, r3
   21320:	orr	r2, r2, fp, lsl #18
   21324:	str	r3, [sp, #224]	; 0xe0
   21328:	add	r3, sp, #1280	; 0x500
   2132c:	str	r2, [sp, #1288]	; 0x508
   21330:	lsr	r1, fp, #14
   21334:	lsr	r2, fp, #18
   21338:	add	r3, r3, #8
   2133c:	orr	r1, r1, sl, lsl #18
   21340:	orr	r2, r2, sl, lsl #14
   21344:	ldr	r0, [r6]
   21348:	str	r1, [sp, #1292]	; 0x50c
   2134c:	str	r2, [sp, #1300]	; 0x514
   21350:	ldrd	r2, [r3]
   21354:	ldrd	r4, [ip]
   21358:	lsl	r1, sl, #23
   2135c:	rev	r0, r0
   21360:	orr	ip, r1, fp, lsr #9
   21364:	eor	r2, r2, r4
   21368:	eor	r3, r3, r5
   2136c:	str	r0, [sp, #228]	; 0xe4
   21370:	ldrd	r4, [sp, #16]
   21374:	ldrd	r0, [sp, #48]	; 0x30
   21378:	str	ip, [sp, #1304]	; 0x518
   2137c:	ldrd	r8, [sp, #24]
   21380:	eor	r5, r5, r1
   21384:	add	r1, sp, #1296	; 0x510
   21388:	add	r1, r1, #8
   2138c:	eor	r4, r4, r0
   21390:	ldrd	r0, [r1]
   21394:	lsr	lr, r8, #28
   21398:	lsl	ip, r9, #30
   2139c:	eor	r0, r0, r2
   213a0:	eor	r1, r1, r3
   213a4:	add	r3, pc, #884	; 0x374
   213a8:	ldrd	r2, [r3]
   213ac:	strd	r0, [sp, #24]
   213b0:	ldrd	r0, [sp, #224]	; 0xe0
   213b4:	and	sl, sl, r4
   213b8:	and	fp, fp, r5
   213bc:	adds	r0, r0, r2
   213c0:	adc	r1, r1, r3
   213c4:	orr	r3, lr, r9, lsl #4
   213c8:	str	r3, [sp, #1312]	; 0x520
   213cc:	orr	r3, ip, r8, lsr #2
   213d0:	str	r3, [sp, #1324]	; 0x52c
   213d4:	ldrd	r2, [sp, #24]
   213d8:	lsl	lr, r8, #30
   213dc:	orr	lr, lr, r9, lsr #2
   213e0:	adds	r2, r2, r0
   213e4:	adc	r3, r3, r1
   213e8:	ldrd	r0, [sp, #16]
   213ec:	str	lr, [sp, #1320]	; 0x528
   213f0:	add	lr, sp, #1312	; 0x520
   213f4:	eor	r0, r0, sl
   213f8:	eor	r1, r1, fp
   213fc:	mov	r6, r0
   21400:	ldrd	sl, [sp, #56]	; 0x38
   21404:	adds	r6, r6, r2
   21408:	mov	r7, r1
   2140c:	adc	r7, r7, r3
   21410:	lsr	r4, r9, #28
   21414:	lsl	ip, r9, #25
   21418:	add	lr, lr, #8
   2141c:	add	r3, sp, #1312	; 0x520
   21420:	orr	r4, r4, r8, lsl #4
   21424:	orr	ip, ip, r8, lsr #7
   21428:	mov	r5, r9
   2142c:	orr	r0, r8, sl
   21430:	orr	r1, r9, fp
   21434:	str	r4, [sp, #1316]	; 0x524
   21438:	str	ip, [sp, #1332]	; 0x534
   2143c:	mov	r4, r8
   21440:	lsl	ip, r8, #25
   21444:	ldrd	r2, [r3]
   21448:	ldrd	r8, [lr]
   2144c:	eor	r3, r3, r9
   21450:	mov	r9, r3
   21454:	eor	r2, r2, r8
   21458:	orr	r3, ip, r5, lsr #7
   2145c:	mov	r8, r2
   21460:	str	r3, [sp, #1328]	; 0x530
   21464:	ldrd	r2, [sp, #80]	; 0x50
   21468:	strd	r4, [sp, #24]
   2146c:	and	r4, r4, sl
   21470:	and	r2, r2, r0
   21474:	and	r3, r3, r1
   21478:	mov	r0, r2
   2147c:	mov	r1, r3
   21480:	ldrd	r2, [sp, #64]	; 0x40
   21484:	and	r5, r5, fp
   21488:	orr	r0, r0, r4
   2148c:	adds	r2, r2, r6
   21490:	adc	r3, r3, r7
   21494:	mov	r7, r3
   21498:	add	r3, sp, #1328	; 0x530
   2149c:	mov	r6, r2
   214a0:	ldrd	r2, [r3]
   214a4:	orr	r1, r1, r5
   214a8:	eor	r2, r2, r8
   214ac:	eor	r3, r3, r9
   214b0:	ldrd	r8, [sp, #40]	; 0x28
   214b4:	adds	r8, r8, r6
   214b8:	adc	r9, r9, r7
   214bc:	adds	r2, r2, r0
   214c0:	adc	r3, r3, r1
   214c4:	adds	r0, r6, r2
   214c8:	ldr	r6, [sp, #12]
   214cc:	mov	sl, r8
   214d0:	adc	r1, r7, r3
   214d4:	mov	fp, r9
   214d8:	mov	r9, r1
   214dc:	ldr	r1, [r6, #12]
   214e0:	ldr	r5, [r6, #8]
   214e4:	lsr	r3, sl, #18
   214e8:	mov	r8, r0
   214ec:	lsr	r2, sl, #14
   214f0:	rev	ip, r1
   214f4:	orr	r3, r3, fp, lsl #14
   214f8:	mov	r6, r8
   214fc:	mov	r7, r9
   21500:	str	ip, [sp, #64]	; 0x40
   21504:	lsr	r4, fp, #14
   21508:	orr	ip, r2, fp, lsl #18
   2150c:	str	r3, [sp, #1344]	; 0x540
   21510:	lsl	r1, r9, #30
   21514:	ldrd	r2, [sp, #32]
   21518:	ldrd	r8, [sp, #48]	; 0x30
   2151c:	rev	r5, r5
   21520:	str	r5, [sp, #68]	; 0x44
   21524:	orr	r5, r4, sl, lsl #18
   21528:	str	r5, [sp, #1340]	; 0x53c
   2152c:	mov	r4, sl
   21530:	mov	r5, fp
   21534:	str	ip, [sp, #1336]	; 0x538
   21538:	eor	r3, r3, r9
   2153c:	lsl	ip, fp, #23
   21540:	strd	r4, [sp, #40]	; 0x28
   21544:	orr	ip, ip, sl, lsr #9
   21548:	lsr	r0, r0, #28
   2154c:	and	r5, r5, r3
   21550:	mov	r3, r5
   21554:	lsr	lr, fp, #18
   21558:	ldr	r5, [sp, #44]	; 0x2c
   2155c:	str	ip, [sp, #1356]	; 0x54c
   21560:	orr	ip, r0, r7, lsl #4
   21564:	orr	lr, lr, sl, lsl #14
   21568:	str	ip, [sp, #1360]	; 0x550
   2156c:	orr	ip, r1, r6, lsr #2
   21570:	str	lr, [sp, #1348]	; 0x544
   21574:	str	ip, [sp, #1372]	; 0x55c
   21578:	lsl	lr, sl, #23
   2157c:	lsl	ip, r6, #30
   21580:	lsr	r0, r7, #28
   21584:	lsl	r1, r7, #25
   21588:	orr	lr, lr, r5, lsr #9
   2158c:	orr	ip, ip, r7, lsr #2
   21590:	str	lr, [sp, #1352]	; 0x548
   21594:	str	ip, [sp, #1368]	; 0x558
   21598:	orr	lr, r0, r6, lsl #4
   2159c:	orr	ip, r1, r6, lsr #7
   215a0:	add	r1, sp, #1328	; 0x530
   215a4:	str	lr, [sp, #1364]	; 0x554
   215a8:	add	r1, r1, #8
   215ac:	add	lr, sp, #1344	; 0x540
   215b0:	ldrd	sl, [sp, #16]
   215b4:	ldrd	r0, [r1]
   215b8:	str	ip, [sp, #1380]	; 0x564
   215bc:	strd	r6, [sp, #16]
   215c0:	lsl	ip, r6, #25
   215c4:	ldrd	r6, [lr]
   215c8:	eor	r2, r2, r8
   215cc:	ldrd	r8, [sp, #64]	; 0x40
   215d0:	eor	r0, r0, r6
   215d4:	eor	r1, r1, r7
   215d8:	add	r7, pc, #328	; 0x148
   215dc:	ldrd	r6, [r7]
   215e0:	adds	sl, sl, r8
   215e4:	and	r4, r4, r2
   215e8:	adc	fp, fp, r9
   215ec:	mov	r2, r4
   215f0:	ldrd	r4, [sp, #48]	; 0x30
   215f4:	ldrd	r8, [sp, #24]
   215f8:	ldr	lr, [sp, #20]
   215fc:	adds	r6, r6, sl
   21600:	adc	r7, r7, fp
   21604:	mov	sl, r6
   21608:	mov	fp, r7
   2160c:	orr	ip, ip, lr, lsr #7
   21610:	ldrd	r6, [sp, #16]
   21614:	str	ip, [sp, #1376]	; 0x560
   21618:	add	ip, sp, #1344	; 0x540
   2161c:	add	ip, ip, #8
   21620:	orr	r6, r6, r8
   21624:	orr	r7, r7, r9
   21628:	eor	r4, r4, r2
   2162c:	eor	r5, r5, r3
   21630:	mov	r2, r4
   21634:	mov	r3, r5
   21638:	mov	r4, r6
   2163c:	mov	r5, r7
   21640:	ldrd	r6, [ip]
   21644:	add	ip, sp, #1360	; 0x550
   21648:	add	ip, ip, #8
   2164c:	eor	r7, r7, r1
   21650:	add	r1, sp, #1360	; 0x550
   21654:	adds	r2, r2, sl
   21658:	adc	r3, r3, fp
   2165c:	eor	r6, r6, r0
   21660:	ldrd	sl, [ip]
   21664:	ldrd	r0, [r1]
   21668:	strd	r8, [sp, #72]	; 0x48
   2166c:	adds	r6, r6, r2
   21670:	eor	r0, r0, sl
   21674:	eor	r1, r1, fp
   21678:	ldrd	sl, [sp, #56]	; 0x38
   2167c:	add	ip, sp, #1376	; 0x560
   21680:	adc	r7, r7, r3
   21684:	and	sl, sl, r4
   21688:	and	fp, fp, r5
   2168c:	mov	r4, sl
   21690:	mov	r5, fp
   21694:	mov	sl, r8
   21698:	mov	fp, r9
   2169c:	ldrd	r8, [sp, #16]
   216a0:	mov	r2, r6
   216a4:	mov	r3, r7
   216a8:	and	r8, r8, sl
   216ac:	ldrd	r6, [ip]
   216b0:	and	r9, r9, fp
   216b4:	ldrd	sl, [sp, #80]	; 0x50
   216b8:	orr	r4, r4, r8
   216bc:	eor	r6, r6, r0
   216c0:	adds	sl, sl, r2
   216c4:	adc	fp, fp, r3
   216c8:	orr	r5, r5, r9
   216cc:	adds	r0, r6, r4
   216d0:	eor	r7, r7, r1
   216d4:	adc	r1, r7, r5
   216d8:	adds	r6, r0, r2
   216dc:	mov	r8, r6
   216e0:	ldr	r6, [sp, #12]
   216e4:	adc	r7, r1, r3
   216e8:	mov	r9, r7
   216ec:	ldr	r3, [r6, #16]
   216f0:	ldr	ip, [r6, #20]
   216f4:	mov	r7, r3
   216f8:	lsr	r3, sl, #18
   216fc:	lsr	r2, sl, #14
   21700:	orr	r3, r3, fp, lsl #14
   21704:	rev	ip, ip
   21708:	str	ip, [sp, #24]
   2170c:	ldrd	r0, [sp, #40]	; 0x28
   21710:	orr	ip, r2, fp, lsl #18
   21714:	str	r3, [sp, #1392]	; 0x570
   21718:	b	21740 <__assert_fail@plt+0x10454>
   2171c:	nop			; (mov r0, r0)
   21720:	strle	sl, [r8, -r2, lsr #28]!
   21724:	addmi	r2, sl, #152, 30	; 0x260
   21728:	mvncs	r6, #859832320	; 0x33400000
   2172c:	teqvc	r7, r1	; <illegal shifter operand>
   21730:	mcrr	11, 2, r3, sp, cr15
   21734:	strblt	pc, [r0, #3023]	; 0xbcf	; <UNPREDICTABLE>
   21738:			; <UNDEFINED> instruction: 0x8189dbbc
   2173c:	ldmib	r5!, {r0, r2, r5, r7, r8, r9, fp, ip, lr, pc}
   21740:	ldrd	r2, [sp, #32]
   21744:	lsr	r5, fp, #18
   21748:	lsl	r4, fp, #23
   2174c:	orr	r5, r5, sl, lsl #14
   21750:	eor	r1, r1, r3
   21754:	str	r5, [sp, #1396]	; 0x574
   21758:	orr	r5, r4, sl, lsr #9
   2175c:	eor	r0, r0, r2
   21760:	mov	r3, r1
   21764:	str	ip, [sp, #1384]	; 0x568
   21768:	rev	r7, r7
   2176c:	lsr	ip, fp, #14
   21770:	str	r5, [sp, #1404]	; 0x57c
   21774:	mov	r4, sl
   21778:	mov	r5, fp
   2177c:	mov	r6, ip
   21780:	str	r7, [sp, #28]
   21784:	and	r4, r4, r0
   21788:	and	r5, r5, r3
   2178c:	ldrd	r0, [sp, #48]	; 0x30
   21790:	mov	r2, r4
   21794:	mov	r3, r5
   21798:	lsr	lr, r8, #28
   2179c:	ldrd	r4, [sp, #24]
   217a0:	mov	r7, r6
   217a4:	orr	r7, r7, sl, lsl #18
   217a8:	orr	lr, lr, r9, lsl #4
   217ac:	str	r7, [sp, #1388]	; 0x56c
   217b0:	str	lr, [sp, #1408]	; 0x580
   217b4:	lsl	r7, sl, #23
   217b8:	lsr	lr, r9, #28
   217bc:	adds	r4, r4, r0
   217c0:	mov	r6, lr
   217c4:	orr	r7, r7, fp, lsr #9
   217c8:	lsl	ip, r9, #30
   217cc:	lsl	lr, r8, #30
   217d0:	adc	r5, r5, r1
   217d4:	orr	ip, ip, r8, lsr #2
   217d8:	orr	lr, lr, r9, lsr #2
   217dc:	str	r7, [sp, #1400]	; 0x578
   217e0:	add	r1, sp, #1376	; 0x560
   217e4:	orr	r7, r6, r8, lsl #4
   217e8:	str	ip, [sp, #1420]	; 0x58c
   217ec:	strd	sl, [sp, #88]	; 0x58
   217f0:	str	r7, [sp, #1412]	; 0x584
   217f4:	add	r1, r1, #8
   217f8:	str	lr, [sp, #1416]	; 0x588
   217fc:	add	lr, sp, #1392	; 0x570
   21800:	ldrd	r0, [r1]
   21804:	ldrd	r6, [lr]
   21808:	lsl	ip, r9, #25
   2180c:	orr	ip, ip, r8, lsr #7
   21810:	eor	r0, r0, r6
   21814:	eor	r1, r1, r7
   21818:	str	ip, [sp, #1428]	; 0x594
   2181c:	mov	r6, r0
   21820:	mov	r7, r1
   21824:	ldrd	sl, [sp, #32]
   21828:	lsl	ip, r8, #25
   2182c:	sub	r1, pc, #260	; 0x104
   21830:	ldrd	r0, [r1]
   21834:	orr	ip, ip, r9, lsr #7
   21838:	str	ip, [sp, #1424]	; 0x590
   2183c:	add	ip, sp, #1392	; 0x570
   21840:	adds	r0, r0, r4
   21844:	eor	sl, sl, r2
   21848:	add	ip, ip, #8
   2184c:	adc	r1, r1, r5
   21850:	eor	fp, fp, r3
   21854:	ldrd	r4, [sp, #16]
   21858:	mov	r2, sl
   2185c:	adds	r2, r2, r0
   21860:	mov	r3, fp
   21864:	ldrd	sl, [ip]
   21868:	add	ip, sp, #1408	; 0x580
   2186c:	adc	r3, r3, r1
   21870:	add	ip, ip, #8
   21874:	add	r1, sp, #1408	; 0x580
   21878:	orr	r4, r4, r8
   2187c:	orr	r5, r5, r9
   21880:	strd	r8, [sp, #48]	; 0x30
   21884:	ldrd	r8, [sp, #72]	; 0x48
   21888:	eor	sl, sl, r6
   2188c:	eor	fp, fp, r7
   21890:	ldrd	r0, [r1]
   21894:	ldrd	r6, [ip]
   21898:	and	r8, r8, r4
   2189c:	and	r9, r9, r5
   218a0:	eor	r0, r0, r6
   218a4:	eor	r1, r1, r7
   218a8:	mov	r4, r8
   218ac:	mov	r5, r9
   218b0:	ldrd	r6, [sp, #16]
   218b4:	ldrd	r8, [sp, #48]	; 0x30
   218b8:	add	ip, sp, #1424	; 0x590
   218bc:	and	r6, r6, r8
   218c0:	adds	r8, sl, r2
   218c4:	and	r7, r7, r9
   218c8:	adc	r9, fp, r3
   218cc:	mov	r2, r8
   218d0:	mov	r3, r9
   218d4:	ldrd	r8, [ip]
   218d8:	orr	r6, r6, r4
   218dc:	mov	r4, r6
   218e0:	eor	r8, r8, r0
   218e4:	eor	r9, r9, r1
   218e8:	mov	r0, r8
   218ec:	mov	r1, r9
   218f0:	ldrd	r8, [sp, #56]	; 0x38
   218f4:	orr	r7, r7, r5
   218f8:	mov	r5, r7
   218fc:	adds	r8, r8, r2
   21900:	adc	r9, r9, r3
   21904:	adds	r0, r0, r4
   21908:	adc	r1, r1, r5
   2190c:	adds	r4, r0, r2
   21910:	adc	r5, r1, r3
   21914:	ldr	r1, [sp, #12]
   21918:	mov	r6, r8
   2191c:	mov	r7, r9
   21920:	mov	r9, r5
   21924:	ldr	r5, [r1, #24]
   21928:	ldr	r1, [r1, #28]
   2192c:	lsr	r2, r6, #14
   21930:	rev	ip, r1
   21934:	lsr	r3, r6, #18
   21938:	mov	r8, r4
   2193c:	str	ip, [sp, #184]	; 0xb8
   21940:	orr	r3, r3, r7, lsl #14
   21944:	orr	ip, r2, r7, lsl #18
   21948:	ldrd	sl, [sp, #40]	; 0x28
   2194c:	str	ip, [sp, #1432]	; 0x598
   21950:	str	r3, [sp, #1440]	; 0x5a0
   21954:	lsl	ip, r7, #23
   21958:	ldrd	r2, [sp, #88]	; 0x58
   2195c:	lsr	r0, r8, #28
   21960:	orr	ip, ip, r6, lsr #9
   21964:	lsl	r1, r9, #30
   21968:	str	ip, [sp, #1452]	; 0x5ac
   2196c:	orr	ip, r0, r9, lsl #4
   21970:	eor	sl, sl, r2
   21974:	eor	fp, fp, r3
   21978:	rev	r5, r5
   2197c:	str	ip, [sp, #1456]	; 0x5b0
   21980:	mov	r0, r6
   21984:	orr	ip, r1, r8, lsr #2
   21988:	mov	r1, r7
   2198c:	str	r5, [sp, #188]	; 0xbc
   21990:	and	r0, r0, sl
   21994:	and	r1, r1, fp
   21998:	mov	sl, r0
   2199c:	mov	fp, r1
   219a0:	ldrd	r2, [sp, #184]	; 0xb8
   219a4:	ldrd	r0, [sp, #32]
   219a8:	lsr	r4, r7, #14
   219ac:	orr	r5, r4, r6, lsl #18
   219b0:	adds	r2, r2, r0
   219b4:	adc	r3, r3, r1
   219b8:	lsr	lr, r7, #18
   219bc:	str	r5, [sp, #1436]	; 0x59c
   219c0:	lsl	r5, r6, #23
   219c4:	orr	lr, lr, r6, lsl #14
   219c8:	lsr	r4, r9, #28
   219cc:	mov	r1, r3
   219d0:	orr	r3, r5, r7, lsr #9
   219d4:	str	lr, [sp, #1444]	; 0x5a4
   219d8:	str	ip, [sp, #1468]	; 0x5bc
   219dc:	lsl	lr, r8, #30
   219e0:	strd	r6, [sp, #32]
   219e4:	str	r3, [sp, #1448]	; 0x5a8
   219e8:	orr	r3, r4, r8, lsl #4
   219ec:	lsl	ip, r9, #25
   219f0:	str	r3, [sp, #1460]	; 0x5b4
   219f4:	orr	r3, lr, r9, lsr #2
   219f8:	str	r3, [sp, #1464]	; 0x5b8
   219fc:	orr	r3, ip, r8, lsr #7
   21a00:	str	r3, [sp, #1476]	; 0x5c4
   21a04:	add	r3, sp, #1424	; 0x590
   21a08:	add	r3, r3, #8
   21a0c:	ldrd	r4, [r3]
   21a10:	add	r3, sp, #1440	; 0x5a0
   21a14:	mov	r0, r2
   21a18:	ldrd	r6, [r3]
   21a1c:	lsl	ip, r8, #25
   21a20:	orr	ip, ip, r9, lsr #7
   21a24:	eor	r4, r4, r6
   21a28:	eor	r5, r5, r7
   21a2c:	sub	r7, pc, #764	; 0x2fc
   21a30:	ldrd	r6, [r7]
   21a34:	strd	r4, [sp, #56]	; 0x38
   21a38:	ldrd	r4, [sp, #40]	; 0x28
   21a3c:	adds	r6, r6, r0
   21a40:	adc	r7, r7, r1
   21a44:	mov	r0, r6
   21a48:	mov	r1, r7
   21a4c:	ldrd	r6, [sp, #48]	; 0x30
   21a50:	str	ip, [sp, #1472]	; 0x5c0
   21a54:	add	ip, sp, #1440	; 0x5a0
   21a58:	mov	r2, sl
   21a5c:	add	ip, ip, #8
   21a60:	orr	r6, r6, r8
   21a64:	orr	r7, r7, r9
   21a68:	mov	r3, fp
   21a6c:	eor	r2, r2, r4
   21a70:	adds	r2, r2, r0
   21a74:	eor	r3, r3, r5
   21a78:	mov	sl, r6
   21a7c:	ldrd	r4, [sp, #56]	; 0x38
   21a80:	mov	fp, r7
   21a84:	ldrd	r6, [ip]
   21a88:	add	ip, sp, #1456	; 0x5b0
   21a8c:	adc	r3, r3, r1
   21a90:	add	ip, ip, #8
   21a94:	add	r1, sp, #1456	; 0x5b0
   21a98:	eor	r6, r6, r4
   21a9c:	ldrd	r0, [r1]
   21aa0:	eor	r7, r7, r5
   21aa4:	ldrd	r4, [ip]
   21aa8:	strd	r8, [sp, #96]	; 0x60
   21aac:	adds	r6, r6, r2
   21ab0:	eor	r0, r0, r4
   21ab4:	eor	r1, r1, r5
   21ab8:	ldrd	r4, [sp, #48]	; 0x30
   21abc:	add	ip, sp, #1472	; 0x5c0
   21ac0:	adc	r7, r7, r3
   21ac4:	and	r4, r4, r8
   21ac8:	and	r5, r5, r9
   21acc:	mov	r8, r4
   21ad0:	mov	r9, r5
   21ad4:	ldrd	r4, [sp, #16]
   21ad8:	mov	r2, r6
   21adc:	mov	r3, r7
   21ae0:	and	sl, sl, r4
   21ae4:	and	fp, fp, r5
   21ae8:	orr	r8, r8, sl
   21aec:	orr	r9, r9, fp
   21af0:	ldrd	r6, [ip]
   21af4:	mov	r4, r8
   21af8:	mov	r5, r9
   21afc:	ldrd	r8, [sp, #72]	; 0x48
   21b00:	eor	r6, r6, r0
   21b04:	eor	r7, r7, r1
   21b08:	adds	r8, r8, r2
   21b0c:	adc	r9, r9, r3
   21b10:	adds	r0, r6, r4
   21b14:	adc	r1, r7, r5
   21b18:	adds	r4, r0, r2
   21b1c:	adc	r5, r1, r3
   21b20:	ldr	r1, [sp, #12]
   21b24:	lsr	r2, r8, #14
   21b28:	mov	sl, r8
   21b2c:	ldr	lr, [r1, #32]
   21b30:	ldr	r1, [r1, #36]	; 0x24
   21b34:	mov	r7, r5
   21b38:	rev	ip, r1
   21b3c:	str	ip, [sp, #72]	; 0x48
   21b40:	orr	ip, r2, r9, lsl #18
   21b44:	str	ip, [sp, #1480]	; 0x5c8
   21b48:	lsr	ip, r9, #14
   21b4c:	lsr	r0, r9, #18
   21b50:	orr	ip, ip, sl, lsl #18
   21b54:	lsr	r3, r8, #18
   21b58:	mov	r6, r4
   21b5c:	mov	fp, r9
   21b60:	orr	r3, r3, r9, lsl #14
   21b64:	lsl	r1, r9, #23
   21b68:	lsr	r2, r4, #28
   21b6c:	ldrd	r8, [sp, #88]	; 0x58
   21b70:	ldrd	r4, [sp, #32]
   21b74:	str	ip, [sp, #1484]	; 0x5cc
   21b78:	orr	ip, r0, sl, lsl #14
   21b7c:	str	r3, [sp, #1488]	; 0x5d0
   21b80:	str	ip, [sp, #1492]	; 0x5d4
   21b84:	lsl	r3, r7, #30
   21b88:	orr	ip, r1, sl, lsr #9
   21b8c:	orr	r3, r3, r6, lsr #2
   21b90:	rev	lr, lr
   21b94:	str	ip, [sp, #1500]	; 0x5dc
   21b98:	orr	ip, r2, r7, lsl #4
   21b9c:	str	lr, [sp, #76]	; 0x4c
   21ba0:	eor	r8, r8, r4
   21ba4:	eor	r9, r9, r5
   21ba8:	str	ip, [sp, #1504]	; 0x5e0
   21bac:	str	r3, [sp, #1516]	; 0x5ec
   21bb0:	lsr	ip, r7, #28
   21bb4:	lsl	r3, r7, #25
   21bb8:	mov	r4, r8
   21bbc:	mov	r5, r9
   21bc0:	lsl	r2, r6, #30
   21bc4:	add	r9, pc, #868	; 0x364
   21bc8:	ldrd	r8, [r9]
   21bcc:	ldrd	r0, [sp, #72]	; 0x48
   21bd0:	orr	ip, ip, r6, lsl #4
   21bd4:	orr	r3, r3, r6, lsr #7
   21bd8:	str	ip, [sp, #1508]	; 0x5e4
   21bdc:	str	r3, [sp, #1524]	; 0x5f4
   21be0:	orr	ip, r2, r7, lsr #2
   21be4:	ldrd	r2, [sp, #40]	; 0x28
   21be8:	adds	r0, r0, r8
   21bec:	adc	r1, r1, r9
   21bf0:	adds	r2, r2, r0
   21bf4:	adc	r3, r3, r1
   21bf8:	mov	r0, r2
   21bfc:	mov	r1, r3
   21c00:	mov	r9, fp
   21c04:	ldrd	r2, [sp, #88]	; 0x58
   21c08:	and	r9, r9, r5
   21c0c:	mov	r5, r9
   21c10:	eor	r3, r3, r5
   21c14:	mov	r8, sl
   21c18:	and	r8, r8, r4
   21c1c:	mov	r9, r3
   21c20:	add	r3, sp, #1472	; 0x5c0
   21c24:	eor	r2, r2, r8
   21c28:	add	r3, r3, #8
   21c2c:	mov	r8, r2
   21c30:	ldrd	r4, [r3]
   21c34:	adds	r8, r8, r0
   21c38:	add	r3, sp, #1488	; 0x5d0
   21c3c:	adc	r9, r9, r1
   21c40:	add	r1, sp, #1488	; 0x5d0
   21c44:	ldrd	r2, [r3]
   21c48:	lsl	lr, sl, #23
   21c4c:	add	r1, r1, #8
   21c50:	orr	lr, lr, fp, lsr #9
   21c54:	str	lr, [sp, #1496]	; 0x5d8
   21c58:	str	ip, [sp, #1512]	; 0x5e8
   21c5c:	ldrd	r0, [r1]
   21c60:	strd	sl, [sp, #104]	; 0x68
   21c64:	lsl	ip, r6, #25
   21c68:	ldrd	sl, [sp, #96]	; 0x60
   21c6c:	orr	ip, ip, r7, lsr #7
   21c70:	eor	r5, r5, r3
   21c74:	mov	r3, r5
   21c78:	str	ip, [sp, #1520]	; 0x5f0
   21c7c:	eor	r4, r4, r2
   21c80:	add	ip, sp, #1504	; 0x5e0
   21c84:	orr	r5, fp, r7
   21c88:	mov	r2, r4
   21c8c:	eor	r1, r1, r3
   21c90:	orr	r4, sl, r6
   21c94:	add	ip, ip, #8
   21c98:	eor	r0, r0, r2
   21c9c:	mov	r3, r1
   21ca0:	add	r1, sp, #1504	; 0x5e0
   21ca4:	strd	r4, [sp, #40]	; 0x28
   21ca8:	mov	r2, r0
   21cac:	ldrd	r4, [ip]
   21cb0:	add	ip, sp, #1520	; 0x5f0
   21cb4:	adds	r2, r2, r8
   21cb8:	ldrd	r0, [r1]
   21cbc:	adc	r3, r3, r9
   21cc0:	ldrd	r8, [ip]
   21cc4:	eor	r0, r0, r4
   21cc8:	eor	r1, r1, r5
   21ccc:	strd	r6, [sp, #112]	; 0x70
   21cd0:	ldrd	r4, [sp, #48]	; 0x30
   21cd4:	and	sl, sl, r6
   21cd8:	and	fp, fp, r7
   21cdc:	ldrd	r6, [sp, #40]	; 0x28
   21ce0:	eor	r8, r8, r0
   21ce4:	eor	r9, r9, r1
   21ce8:	mov	r0, r8
   21cec:	mov	r1, r9
   21cf0:	ldrd	r8, [sp, #16]
   21cf4:	and	r6, r6, r4
   21cf8:	and	r7, r7, r5
   21cfc:	orr	sl, sl, r6
   21d00:	adds	r8, r8, r2
   21d04:	orr	fp, fp, r7
   21d08:	mov	r4, sl
   21d0c:	adc	r9, r9, r3
   21d10:	mov	r5, fp
   21d14:	adds	r0, r0, r4
   21d18:	adc	r1, r1, r5
   21d1c:	adds	r4, r0, r2
   21d20:	adc	r5, r1, r3
   21d24:	ldr	r1, [sp, #12]
   21d28:	mov	sl, r8
   21d2c:	mov	fp, r9
   21d30:	ldr	r0, [r1, #40]	; 0x28
   21d34:	ldr	r1, [r1, #44]	; 0x2c
   21d38:	lsr	r2, sl, #14
   21d3c:	rev	ip, r1
   21d40:	strd	r4, [sp, #40]	; 0x28
   21d44:	lsr	r3, sl, #18
   21d48:	str	ip, [sp, #80]	; 0x50
   21d4c:	orr	ip, r2, fp, lsl #18
   21d50:	mov	r6, sl
   21d54:	lsr	r4, fp, #14
   21d58:	orr	r3, r3, fp, lsl #14
   21d5c:	mov	r7, fp
   21d60:	str	ip, [sp, #1528]	; 0x5f8
   21d64:	lsr	lr, fp, #18
   21d68:	lsl	ip, fp, #23
   21d6c:	ldrd	sl, [sp, #40]	; 0x28
   21d70:	rev	r5, r0
   21d74:	str	r3, [sp, #1536]	; 0x600
   21d78:	lsr	r2, sl, #28
   21d7c:	lsl	r3, fp, #30
   21d80:	str	r5, [sp, #84]	; 0x54
   21d84:	ldrd	r0, [sp, #104]	; 0x68
   21d88:	ldrd	sl, [sp, #32]
   21d8c:	orr	ip, ip, r6, lsr #9
   21d90:	orr	r5, r4, r6, lsl #18
   21d94:	eor	r0, r0, sl
   21d98:	eor	r1, r1, fp
   21d9c:	orr	lr, lr, r6, lsl #14
   21da0:	strd	r0, [sp, #16]
   21da4:	ldrd	r0, [sp, #40]	; 0x28
   21da8:	str	ip, [sp, #1548]	; 0x60c
   21dac:	add	r9, pc, #388	; 0x184
   21db0:	ldrd	r8, [r9]
   21db4:	orr	ip, r2, r1, lsl #4
   21db8:	orr	r3, r3, r0, lsr #2
   21dbc:	mov	r4, r6
   21dc0:	str	r5, [sp, #1532]	; 0x5fc
   21dc4:	str	lr, [sp, #1540]	; 0x604
   21dc8:	mov	r5, r7
   21dcc:	str	ip, [sp, #1552]	; 0x610
   21dd0:	str	r3, [sp, #1564]	; 0x61c
   21dd4:	lsl	r2, r0, #30
   21dd8:	mov	r7, r1
   21ddc:	lsl	lr, r6, #23
   21de0:	lsr	ip, r1, #28
   21de4:	mov	r6, r0
   21de8:	lsl	r3, r1, #25
   21dec:	ldrd	r0, [sp, #80]	; 0x50
   21df0:	orr	ip, ip, r6, lsl #4
   21df4:	orr	r3, r3, r6, lsr #7
   21df8:	adds	r0, r0, r8
   21dfc:	adc	r1, r1, r9
   21e00:	str	ip, [sp, #1556]	; 0x614
   21e04:	str	r3, [sp, #1572]	; 0x624
   21e08:	orr	ip, r2, r7, lsr #2
   21e0c:	ldrd	r2, [sp, #88]	; 0x58
   21e10:	mov	r8, r0
   21e14:	mov	r9, r1
   21e18:	ldrd	r0, [sp, #16]
   21e1c:	adds	r2, r2, r8
   21e20:	strd	r4, [sp, #56]	; 0x38
   21e24:	and	r0, r0, r4
   21e28:	and	r1, r1, r5
   21e2c:	adc	r3, r3, r9
   21e30:	ldr	r5, [sp, #60]	; 0x3c
   21e34:	mov	r8, r2
   21e38:	mov	r2, sl
   21e3c:	mov	r9, r3
   21e40:	eor	r2, r2, r0
   21e44:	mov	r3, fp
   21e48:	mov	r0, r2
   21e4c:	eor	r3, r3, r1
   21e50:	adds	r8, r8, r0
   21e54:	orr	lr, lr, r5, lsr #9
   21e58:	mov	r1, r3
   21e5c:	add	r3, sp, #1520	; 0x5f0
   21e60:	adc	r9, r9, r1
   21e64:	str	lr, [sp, #1544]	; 0x608
   21e68:	add	r1, sp, #1536	; 0x600
   21e6c:	add	lr, sp, #1536	; 0x600
   21e70:	add	r3, r3, #8
   21e74:	add	r1, r1, #8
   21e78:	ldrd	r4, [lr]
   21e7c:	ldrd	r2, [r3]
   21e80:	str	ip, [sp, #1560]	; 0x618
   21e84:	lsl	ip, r6, #25
   21e88:	ldrd	r6, [r1]
   21e8c:	eor	r2, r2, r4
   21e90:	eor	r3, r3, r5
   21e94:	add	r1, sp, #1552	; 0x610
   21e98:	eor	r6, r6, r2
   21e9c:	eor	r7, r7, r3
   21ea0:	mov	r2, r6
   21ea4:	mov	r3, r7
   21ea8:	ldrd	r6, [r1]
   21eac:	add	r1, sp, #1552	; 0x610
   21eb0:	add	r1, r1, #8
   21eb4:	ldrd	sl, [sp, #112]	; 0x70
   21eb8:	ldrd	r0, [r1]
   21ebc:	ldrd	r4, [sp, #40]	; 0x28
   21ec0:	ldr	lr, [sp, #44]	; 0x2c
   21ec4:	eor	r6, r6, r0
   21ec8:	eor	r7, r7, r1
   21ecc:	orr	r4, r4, sl
   21ed0:	orr	r5, r5, fp
   21ed4:	mov	r0, r6
   21ed8:	mov	r1, r7
   21edc:	mov	r6, sl
   21ee0:	mov	r7, fp
   21ee4:	ldrd	sl, [sp, #40]	; 0x28
   21ee8:	orr	ip, ip, lr, lsr #7
   21eec:	str	ip, [sp, #1568]	; 0x620
   21ef0:	add	ip, sp, #1568	; 0x620
   21ef4:	adds	r2, r2, r8
   21ef8:	and	sl, sl, r6
   21efc:	and	fp, fp, r7
   21f00:	adc	r3, r3, r9
   21f04:	mov	r6, sl
   21f08:	ldrd	r8, [ip]
   21f0c:	mov	r7, fp
   21f10:	ldrd	sl, [sp, #96]	; 0x60
   21f14:	eor	r8, r8, r0
   21f18:	eor	r9, r9, r1
   21f1c:	and	sl, sl, r4
   21f20:	and	fp, fp, r5
   21f24:	mov	r0, r8
   21f28:	b	21f50 <__assert_fail@plt+0x10c64>
   21f2c:	nop			; (mov r0, r0)
   21f30:	vqrshl.u8	d27, d24, d8
   21f34:	ldmdbcc	r6, {r0, r1, r3, r4, r6, r9, lr, pc}^
   21f38:			; <UNDEFINED> instruction: 0xb605d019
   21f3c:	ldmibpl	r1!, {r0, r4, r5, r6, r7, r8, ip}^
   21f40:	svcge	0x00194f9b
   21f44:	eorsls	r8, pc, #164, 4	; 0x4000000a
   21f48:	ble	1b823b0 <optarg@@GLIBC_2.4+0x1b30208>
   21f4c:	blge	739aa8 <optarg@@GLIBC_2.4+0x6e7900>
   21f50:	mov	r1, r9
   21f54:	orr	r8, r6, sl
   21f58:	orr	r9, r7, fp
   21f5c:	ldrd	r6, [sp, #48]	; 0x30
   21f60:	adds	r6, r6, r2
   21f64:	adc	r7, r7, r3
   21f68:	adds	r0, r0, r8
   21f6c:	adc	r1, r1, r9
   21f70:	adds	r4, r0, r2
   21f74:	adc	r5, r1, r3
   21f78:	lsr	r2, r6, #14
   21f7c:	strd	r4, [sp, #16]
   21f80:	ldr	r1, [sp, #12]
   21f84:	lsr	r3, r6, #18
   21f88:	orr	r3, r3, r7, lsl #14
   21f8c:	ldr	lr, [r1, #48]	; 0x30
   21f90:	ldr	r1, [r1, #52]	; 0x34
   21f94:	lsr	r0, r7, #18
   21f98:	rev	ip, r1
   21f9c:	str	ip, [sp, #128]	; 0x80
   21fa0:	orr	ip, r2, r7, lsl #18
   21fa4:	str	ip, [sp, #1576]	; 0x628
   21fa8:	lsr	ip, r7, #14
   21fac:	orr	ip, ip, r6, lsl #18
   21fb0:	str	r3, [sp, #1584]	; 0x630
   21fb4:	lsl	r1, r7, #23
   21fb8:	ldr	r3, [sp, #16]
   21fbc:	str	ip, [sp, #1580]	; 0x62c
   21fc0:	orr	ip, r0, r6, lsl #14
   21fc4:	str	ip, [sp, #1588]	; 0x634
   21fc8:	orr	ip, r1, r6, lsr #9
   21fcc:	ldr	r1, [sp, #20]
   21fd0:	lsr	r2, r3, #28
   21fd4:	ldr	r3, [sp, #20]
   21fd8:	ldrd	sl, [sp, #104]	; 0x68
   21fdc:	str	ip, [sp, #1596]	; 0x63c
   21fe0:	orr	ip, r2, r1, lsl #4
   21fe4:	ldr	r2, [sp, #16]
   21fe8:	ldrd	r4, [sp, #56]	; 0x38
   21fec:	rev	lr, lr
   21ff0:	lsl	r3, r3, #30
   21ff4:	str	lr, [sp, #132]	; 0x84
   21ff8:	orr	r3, r3, r2, lsr #2
   21ffc:	mov	r8, sl
   22000:	mov	r9, fp
   22004:	eor	r8, r8, r4
   22008:	eor	r9, r9, r5
   2200c:	str	ip, [sp, #1600]	; 0x640
   22010:	ldrd	r4, [sp, #128]	; 0x80
   22014:	lsr	ip, r1, #28
   22018:	str	r3, [sp, #1612]	; 0x64c
   2201c:	lsl	r3, r1, #25
   22020:	sub	r1, pc, #232	; 0xe8
   22024:	ldrd	r0, [r1]
   22028:	lsl	lr, r6, #23
   2202c:	lsl	r2, r2, #30
   22030:	adds	r4, r4, r0
   22034:	adc	r5, r5, r1
   22038:	mov	r1, r5
   2203c:	mov	r5, r7
   22040:	mov	r0, r4
   22044:	orr	lr, lr, r5, lsr #9
   22048:	str	lr, [sp, #1592]	; 0x638
   2204c:	ldr	lr, [sp, #16]
   22050:	and	r7, r7, r9
   22054:	mov	r4, r6
   22058:	orr	ip, ip, lr, lsl #4
   2205c:	str	ip, [sp, #1604]	; 0x644
   22060:	ldr	ip, [sp, #20]
   22064:	orr	r3, r3, lr, lsr #7
   22068:	str	r3, [sp, #1620]	; 0x654
   2206c:	orr	ip, r2, ip, lsr #2
   22070:	ldrd	r2, [sp, #32]
   22074:	and	r6, r6, r8
   22078:	str	ip, [sp, #1608]	; 0x648
   2207c:	adds	r2, r2, r0
   22080:	adc	r3, r3, r1
   22084:	mov	r1, r3
   22088:	mov	r3, fp
   2208c:	eor	r3, r3, r7
   22090:	mov	r9, r3
   22094:	add	r3, sp, #1568	; 0x620
   22098:	mov	r0, r2
   2209c:	lsl	ip, lr, #25
   220a0:	mov	r2, sl
   220a4:	add	lr, sp, #1584	; 0x630
   220a8:	add	r3, r3, #8
   220ac:	eor	r2, r2, r6
   220b0:	mov	r8, r2
   220b4:	ldrd	r6, [lr]
   220b8:	ldrd	r2, [r3]
   220bc:	ldrd	sl, [sp, #40]	; 0x28
   220c0:	adds	r8, r8, r0
   220c4:	eor	r2, r2, r6
   220c8:	eor	r3, r3, r7
   220cc:	ldrd	r6, [sp, #16]
   220d0:	adc	r9, r9, r1
   220d4:	add	r1, sp, #1584	; 0x630
   220d8:	add	r1, r1, #8
   220dc:	orr	r6, r6, sl
   220e0:	orr	r7, r7, fp
   220e4:	strd	r4, [sp, #88]	; 0x58
   220e8:	mov	r4, r6
   220ec:	ldr	lr, [sp, #20]
   220f0:	mov	r5, r7
   220f4:	ldrd	r6, [r1]
   220f8:	add	r1, sp, #1600	; 0x640
   220fc:	orr	ip, ip, lr, lsr #7
   22100:	eor	r6, r6, r2
   22104:	eor	r7, r7, r3
   22108:	mov	r2, r6
   2210c:	mov	r3, r7
   22110:	ldrd	r6, [r1]
   22114:	add	r1, sp, #1600	; 0x640
   22118:	add	r1, r1, #8
   2211c:	str	ip, [sp, #1616]	; 0x650
   22120:	ldrd	r0, [r1]
   22124:	add	ip, sp, #1616	; 0x650
   22128:	adds	r2, r2, r8
   2212c:	eor	r6, r6, r0
   22130:	eor	r7, r7, r1
   22134:	mov	r0, r6
   22138:	mov	r1, r7
   2213c:	ldrd	r6, [sp, #16]
   22140:	adc	r3, r3, r9
   22144:	ldrd	r8, [ip]
   22148:	and	r6, r6, sl
   2214c:	and	r7, r7, fp
   22150:	mov	sl, r6
   22154:	mov	fp, r7
   22158:	ldrd	r6, [sp, #112]	; 0x70
   2215c:	eor	r8, r8, r0
   22160:	eor	r9, r9, r1
   22164:	mov	r0, r8
   22168:	mov	r1, r9
   2216c:	ldrd	r8, [sp, #96]	; 0x60
   22170:	and	r6, r6, r4
   22174:	and	r7, r7, r5
   22178:	mov	r4, r6
   2217c:	adds	r8, r8, r2
   22180:	orr	r6, sl, r4
   22184:	mov	r5, r7
   22188:	adc	r9, r9, r3
   2218c:	orr	r7, fp, r5
   22190:	adds	r0, r0, r6
   22194:	adc	r1, r1, r7
   22198:	adds	r4, r0, r2
   2219c:	adc	r5, r1, r3
   221a0:	ldr	r1, [sp, #12]
   221a4:	lsr	r2, r8, #14
   221a8:	lsr	r3, r8, #18
   221ac:	ldr	lr, [r1, #56]	; 0x38
   221b0:	ldr	r1, [r1, #60]	; 0x3c
   221b4:	mov	r6, r4
   221b8:	rev	ip, r1
   221bc:	lsr	r1, r9, #18
   221c0:	str	ip, [sp, #32]
   221c4:	mov	sl, r1
   221c8:	orr	ip, r2, r9, lsl #18
   221cc:	lsl	r1, r9, #23
   221d0:	mov	r7, r5
   221d4:	mov	r4, r8
   221d8:	mov	r5, r9
   221dc:	orr	r3, r3, r9, lsl #14
   221e0:	mov	fp, r1
   221e4:	str	ip, [sp, #1624]	; 0x658
   221e8:	ldrd	r0, [sp, #56]	; 0x38
   221ec:	lsr	ip, r9, #14
   221f0:	ldrd	r8, [sp, #88]	; 0x58
   221f4:	orr	ip, ip, r4, lsl #18
   221f8:	rev	lr, lr
   221fc:	eor	r8, r8, r0
   22200:	eor	r9, r9, r1
   22204:	str	ip, [sp, #1628]	; 0x65c
   22208:	orr	ip, sl, r4, lsl #14
   2220c:	lsr	r2, r6, #28
   22210:	str	lr, [sp, #36]	; 0x24
   22214:	str	ip, [sp, #1636]	; 0x664
   22218:	orr	ip, fp, r4, lsr #9
   2221c:	strd	r8, [sp, #48]	; 0x30
   22220:	ldrd	r0, [sp, #32]
   22224:	sub	r9, pc, #740	; 0x2e4
   22228:	ldrd	r8, [r9]
   2222c:	str	r3, [sp, #1632]	; 0x660
   22230:	str	ip, [sp, #1644]	; 0x66c
   22234:	lsl	r3, r7, #30
   22238:	orr	ip, r2, r7, lsl #4
   2223c:	orr	r3, r3, r6, lsr #2
   22240:	str	ip, [sp, #1648]	; 0x670
   22244:	lsr	ip, r7, #28
   22248:	mov	sl, r4
   2224c:	mov	fp, r5
   22250:	lsl	r2, r6, #30
   22254:	orr	ip, ip, r6, lsl #4
   22258:	lsl	lr, r4, #23
   2225c:	str	r3, [sp, #1660]	; 0x67c
   22260:	lsl	r3, r7, #25
   22264:	adds	r0, r0, r8
   22268:	orr	lr, lr, r5, lsr #9
   2226c:	orr	r3, r3, r6, lsr #7
   22270:	str	ip, [sp, #1652]	; 0x674
   22274:	orr	ip, r2, r7, lsr #2
   22278:	adc	r1, r1, r9
   2227c:	strd	sl, [sp, #96]	; 0x60
   22280:	ldrd	r8, [sp, #48]	; 0x30
   22284:	str	lr, [sp, #1640]	; 0x668
   22288:	str	ip, [sp, #1656]	; 0x678
   2228c:	str	r3, [sp, #1668]	; 0x684
   22290:	ldrd	r2, [sp, #104]	; 0x68
   22294:	and	r8, r8, r4
   22298:	and	r9, r9, r5
   2229c:	adds	r2, r2, r0
   222a0:	adc	r3, r3, r1
   222a4:	mov	r0, r2
   222a8:	mov	r1, r3
   222ac:	ldrd	r2, [sp, #56]	; 0x38
   222b0:	add	lr, sp, #1632	; 0x660
   222b4:	ldrd	sl, [sp, #16]
   222b8:	eor	r2, r2, r8
   222bc:	eor	r3, r3, r9
   222c0:	mov	r8, r2
   222c4:	adds	r8, r8, r0
   222c8:	mov	r9, r3
   222cc:	add	r3, sp, #1616	; 0x650
   222d0:	adc	r9, r9, r1
   222d4:	add	r3, r3, #8
   222d8:	add	r1, sp, #1632	; 0x660
   222dc:	add	r1, r1, #8
   222e0:	ldrd	r4, [lr]
   222e4:	ldrd	r2, [r3]
   222e8:	ldrd	r0, [r1]
   222ec:	orr	sl, sl, r6
   222f0:	eor	r2, r2, r4
   222f4:	eor	r3, r3, r5
   222f8:	eor	r0, r0, r2
   222fc:	eor	r1, r1, r3
   22300:	add	r3, sp, #1648	; 0x670
   22304:	strd	r0, [sp, #48]	; 0x30
   22308:	ldrd	r0, [r3]
   2230c:	add	r3, sp, #1648	; 0x670
   22310:	add	r3, r3, #8
   22314:	orr	fp, fp, r7
   22318:	ldrd	r2, [r3]
   2231c:	mov	r4, sl
   22320:	mov	r5, fp
   22324:	eor	r0, r0, r2
   22328:	eor	r1, r1, r3
   2232c:	ldrd	r2, [sp, #16]
   22330:	ldrd	sl, [sp, #40]	; 0x28
   22334:	lsl	ip, r6, #25
   22338:	and	r2, r2, r6
   2233c:	and	r3, r3, r7
   22340:	orr	ip, ip, r7, lsr #7
   22344:	strd	r6, [sp, #104]	; 0x68
   22348:	mov	r6, r2
   2234c:	mov	r7, r3
   22350:	mov	r2, sl
   22354:	mov	r3, fp
   22358:	and	r2, r2, r4
   2235c:	and	r3, r3, r5
   22360:	mov	r4, r2
   22364:	mov	r5, r3
   22368:	ldrd	r2, [sp, #48]	; 0x30
   2236c:	str	ip, [sp, #1664]	; 0x680
   22370:	add	ip, sp, #1664	; 0x680
   22374:	adds	r2, r2, r8
   22378:	adc	r3, r3, r9
   2237c:	ldrd	r8, [ip]
   22380:	eor	r8, r8, r0
   22384:	eor	r9, r9, r1
   22388:	mov	r0, r8
   2238c:	mov	r1, r9
   22390:	orr	r8, r6, r4
   22394:	orr	r9, r7, r5
   22398:	mov	r4, r8
   2239c:	mov	r5, r9
   223a0:	ldrd	r8, [sp, #112]	; 0x70
   223a4:	adds	r8, r8, r2
   223a8:	adc	r9, r9, r3
   223ac:	adds	r0, r0, r4
   223b0:	adc	r1, r1, r5
   223b4:	adds	r4, r0, r2
   223b8:	adc	r5, r1, r3
   223bc:	ldr	r1, [sp, #12]
   223c0:	lsr	r2, r8, #14
   223c4:	mov	r6, r8
   223c8:	ldr	lr, [r1, #64]	; 0x40
   223cc:	ldr	r1, [r1, #68]	; 0x44
   223d0:	lsr	r0, r9, #18
   223d4:	rev	ip, r1
   223d8:	str	ip, [sp, #176]	; 0xb0
   223dc:	orr	ip, r2, r9, lsl #18
   223e0:	str	ip, [sp, #1672]	; 0x688
   223e4:	lsr	ip, r9, #14
   223e8:	orr	ip, ip, r6, lsl #18
   223ec:	lsl	r1, r9, #23
   223f0:	strd	r4, [sp, #40]	; 0x28
   223f4:	lsr	r3, r8, #18
   223f8:	str	ip, [sp, #1676]	; 0x68c
   223fc:	orr	ip, r0, r6, lsl #14
   22400:	orr	r3, r3, r9, lsl #14
   22404:	str	ip, [sp, #1684]	; 0x694
   22408:	orr	ip, r1, r6, lsr #9
   2240c:	ldrd	r0, [sp, #40]	; 0x28
   22410:	mov	r7, r9
   22414:	lsr	r2, r4, #28
   22418:	ldrd	r8, [sp, #88]	; 0x58
   2241c:	str	r3, [sp, #1680]	; 0x690
   22420:	lsl	r3, r5, #30
   22424:	ldrd	r4, [sp, #96]	; 0x60
   22428:	orr	r3, r3, r0, lsr #2
   2242c:	rev	lr, lr
   22430:	str	ip, [sp, #1692]	; 0x69c
   22434:	orr	ip, r2, r1, lsl #4
   22438:	eor	r8, r8, r4
   2243c:	eor	r9, r9, r5
   22440:	mov	r4, r6
   22444:	mov	r5, r7
   22448:	lsl	r2, r0, #30
   2244c:	str	lr, [sp, #180]	; 0xb4
   22450:	str	ip, [sp, #1696]	; 0x6a0
   22454:	lsl	lr, r6, #23
   22458:	str	r3, [sp, #1708]	; 0x6ac
   2245c:	lsr	ip, r1, #28
   22460:	ldrd	r6, [sp, #176]	; 0xb0
   22464:	lsl	r3, r1, #25
   22468:	add	r1, pc, #848	; 0x350
   2246c:	ldrd	r0, [r1]
   22470:	adds	r6, r6, r0
   22474:	adc	r7, r7, r1
   22478:	mov	r0, r6
   2247c:	mov	r1, r7
   22480:	mov	r6, r4
   22484:	mov	r7, r5
   22488:	and	r4, r4, r8
   2248c:	and	r5, r5, r9
   22490:	mov	r8, r4
   22494:	mov	r9, r5
   22498:	ldrd	r4, [sp, #40]	; 0x28
   2249c:	orr	lr, lr, r7, lsr #9
   224a0:	str	lr, [sp, #1688]	; 0x698
   224a4:	orr	ip, ip, r4, lsl #4
   224a8:	orr	r3, r3, r4, lsr #7
   224ac:	str	ip, [sp, #1700]	; 0x6a4
   224b0:	str	r3, [sp, #1716]	; 0x6b4
   224b4:	orr	ip, r2, r5, lsr #2
   224b8:	ldrd	r2, [sp, #56]	; 0x38
   224bc:	add	lr, sp, #1680	; 0x690
   224c0:	strd	r6, [sp, #112]	; 0x70
   224c4:	adds	r2, r2, r0
   224c8:	adc	r3, r3, r1
   224cc:	mov	r0, r2
   224d0:	mov	r1, r3
   224d4:	ldrd	r2, [sp, #88]	; 0x58
   224d8:	ldrd	r6, [lr]
   224dc:	str	ip, [sp, #1704]	; 0x6a8
   224e0:	eor	r2, r2, r8
   224e4:	eor	r3, r3, r9
   224e8:	mov	r8, r2
   224ec:	adds	r8, r8, r0
   224f0:	mov	r9, r3
   224f4:	add	r3, sp, #1664	; 0x680
   224f8:	adc	r9, r9, r1
   224fc:	add	r3, r3, #8
   22500:	add	r1, sp, #1680	; 0x690
   22504:	add	r1, r1, #8
   22508:	ldrd	r2, [r3]
   2250c:	ldrd	r0, [r1]
   22510:	lsl	ip, r4, #25
   22514:	eor	r2, r2, r6
   22518:	eor	r3, r3, r7
   2251c:	eor	r0, r0, r2
   22520:	ldrd	r6, [sp, #104]	; 0x68
   22524:	eor	r1, r1, r3
   22528:	add	r3, sp, #1696	; 0x6a0
   2252c:	strd	r0, [sp, #48]	; 0x30
   22530:	ldrd	r0, [r3]
   22534:	add	r3, sp, #1696	; 0x6a0
   22538:	orr	r6, r6, r4
   2253c:	orr	r7, r7, r5
   22540:	add	r3, r3, #8
   22544:	strd	r6, [sp, #56]	; 0x38
   22548:	ldrd	r6, [r3]
   2254c:	orr	ip, ip, r5, lsr #7
   22550:	ldrd	r2, [sp, #16]
   22554:	eor	r0, r0, r6
   22558:	eor	r1, r1, r7
   2255c:	ldrd	r6, [sp, #104]	; 0x68
   22560:	str	ip, [sp, #1712]	; 0x6b0
   22564:	add	ip, sp, #1712	; 0x6b0
   22568:	and	r6, r6, r4
   2256c:	and	r7, r7, r5
   22570:	ldrd	r4, [sp, #56]	; 0x38
   22574:	and	r2, r2, r4
   22578:	and	r3, r3, r5
   2257c:	mov	r4, r2
   22580:	mov	r5, r3
   22584:	ldrd	r2, [sp, #48]	; 0x30
   22588:	adds	r2, r2, r8
   2258c:	adc	r3, r3, r9
   22590:	ldrd	r8, [ip]
   22594:	eor	r8, r8, r0
   22598:	eor	r9, r9, r1
   2259c:	mov	r0, r8
   225a0:	orr	r8, r6, r4
   225a4:	adds	r6, sl, r2
   225a8:	mov	r1, r9
   225ac:	orr	r9, r7, r5
   225b0:	adc	r7, fp, r3
   225b4:	adds	r0, r0, r8
   225b8:	adc	r1, r1, r9
   225bc:	adds	r4, r0, r2
   225c0:	adc	r5, r1, r3
   225c4:	ldr	r1, [sp, #12]
   225c8:	lsr	r2, r6, #14
   225cc:	lsr	r3, r6, #18
   225d0:	ldr	lr, [r1, #72]	; 0x48
   225d4:	ldr	r1, [r1, #76]	; 0x4c
   225d8:	orr	r3, r3, r7, lsl #14
   225dc:	rev	ip, r1
   225e0:	str	ip, [sp, #48]	; 0x30
   225e4:	orr	ip, r2, r7, lsl #18
   225e8:	str	ip, [sp, #1720]	; 0x6b8
   225ec:	lsr	ip, r7, #14
   225f0:	lsr	r0, r7, #18
   225f4:	orr	ip, ip, r6, lsl #18
   225f8:	rev	lr, lr
   225fc:	mov	fp, r5
   22600:	mov	sl, r4
   22604:	lsl	r1, r7, #23
   22608:	lsr	r2, r4, #28
   2260c:	ldrd	r8, [sp, #112]	; 0x70
   22610:	str	r3, [sp, #1728]	; 0x6c0
   22614:	str	lr, [sp, #52]	; 0x34
   22618:	ldrd	r4, [sp, #96]	; 0x60
   2261c:	str	ip, [sp, #1724]	; 0x6bc
   22620:	orr	ip, r0, r6, lsl #14
   22624:	str	ip, [sp, #1732]	; 0x6c4
   22628:	orr	ip, r1, r6, lsr #9
   2262c:	str	ip, [sp, #1740]	; 0x6cc
   22630:	strd	r6, [sp, #56]	; 0x38
   22634:	orr	ip, r2, fp, lsl #4
   22638:	str	ip, [sp, #1744]	; 0x6d0
   2263c:	ldr	ip, [sp, #60]	; 0x3c
   22640:	lsl	r3, fp, #30
   22644:	eor	r8, r8, r4
   22648:	eor	r9, r9, r5
   2264c:	lsl	r0, r6, #23
   22650:	orr	r3, r3, sl, lsr #2
   22654:	lsr	r1, fp, #28
   22658:	str	r3, [sp, #1756]	; 0x6dc
   2265c:	orr	ip, r0, ip, lsr #9
   22660:	lsl	r3, fp, #25
   22664:	strd	r8, [sp, #120]	; 0x78
   22668:	lsl	r2, sl, #30
   2266c:	ldrd	r4, [sp, #48]	; 0x30
   22670:	add	r9, pc, #336	; 0x150
   22674:	ldrd	r8, [r9]
   22678:	str	ip, [sp, #1736]	; 0x6c8
   2267c:	orr	r3, r3, sl, lsr #7
   22680:	orr	ip, r1, sl, lsl #4
   22684:	str	ip, [sp, #1748]	; 0x6d4
   22688:	str	r3, [sp, #1764]	; 0x6e4
   2268c:	orr	ip, r2, fp, lsr #2
   22690:	ldrd	r2, [sp, #88]	; 0x58
   22694:	adds	r4, r4, r8
   22698:	adc	r5, r5, r9
   2269c:	adds	r2, r2, r4
   226a0:	adc	r3, r3, r5
   226a4:	ldrd	r8, [sp, #120]	; 0x78
   226a8:	strd	r2, [sp, #120]	; 0x78
   226ac:	ldrd	r2, [sp, #96]	; 0x60
   226b0:	and	r8, r8, r6
   226b4:	and	r9, r9, r7
   226b8:	eor	r2, r2, r8
   226bc:	eor	r3, r3, r9
   226c0:	add	r0, sp, #1728	; 0x6c0
   226c4:	strd	r2, [sp, #88]	; 0x58
   226c8:	add	r3, sp, #1712	; 0x6b0
   226cc:	add	r3, r3, #8
   226d0:	ldrd	r6, [sp, #40]	; 0x28
   226d4:	ldrd	r4, [r0]
   226d8:	ldrd	r2, [r3]
   226dc:	orr	r8, sl, r6
   226e0:	orr	r9, fp, r7
   226e4:	lsl	r1, sl, #25
   226e8:	str	ip, [sp, #1752]	; 0x6d8
   226ec:	eor	r2, r2, r4
   226f0:	orr	ip, r1, fp, lsr #7
   226f4:	eor	r3, r3, r5
   226f8:	ldrd	r0, [sp, #120]	; 0x78
   226fc:	mov	r4, r8
   22700:	mov	r5, r9
   22704:	ldrd	r8, [sp, #88]	; 0x58
   22708:	strd	sl, [sp, #88]	; 0x58
   2270c:	str	ip, [sp, #1760]	; 0x6e0
   22710:	adds	r8, r8, r0
   22714:	adc	r9, r9, r1
   22718:	add	r1, sp, #1728	; 0x6c0
   2271c:	add	r1, r1, #8
   22720:	add	ip, sp, #1760	; 0x6e0
   22724:	ldrd	r0, [r1]
   22728:	eor	r0, r0, r2
   2272c:	eor	r1, r1, r3
   22730:	add	r3, sp, #1744	; 0x6d0
   22734:	strd	r0, [sp, #120]	; 0x78
   22738:	ldrd	r0, [r3]
   2273c:	add	r3, sp, #1744	; 0x6d0
   22740:	add	r3, r3, #8
   22744:	ldrd	r2, [r3]
   22748:	eor	r0, r0, r2
   2274c:	eor	r1, r1, r3
   22750:	mov	r2, sl
   22754:	mov	r3, fp
   22758:	and	r2, r2, r6
   2275c:	and	r3, r3, r7
   22760:	mov	sl, r2
   22764:	mov	fp, r3
   22768:	ldrd	r2, [sp, #120]	; 0x78
   2276c:	ldrd	r6, [sp, #104]	; 0x68
   22770:	adds	r2, r2, r8
   22774:	adc	r3, r3, r9
   22778:	ldrd	r8, [ip]
   2277c:	and	r6, r6, r4
   22780:	and	r7, r7, r5
   22784:	eor	r8, r8, r0
   22788:	eor	r9, r9, r1
   2278c:	mov	r0, r8
   22790:	mov	r1, r9
   22794:	orr	r8, sl, r6
   22798:	orr	r9, fp, r7
   2279c:	ldrd	r6, [sp, #16]
   227a0:	mov	r4, r8
   227a4:	mov	r5, r9
   227a8:	adds	r6, r6, r2
   227ac:	adc	r7, r7, r3
   227b0:	adds	r0, r0, r4
   227b4:	adc	r1, r1, r5
   227b8:	b	227e0 <__assert_fail@plt+0x114f4>
   227bc:	nop			; (mov r0, r0)
   227c0:	movwge	r0, #12866	; 0x3242
   227c4:	stmdale	r7, {r3, r4, r7, r9, fp, sp, pc}
   227c8:	ldrbmi	r6, [r0, #-4030]!	; 0xfffff042
   227cc:	addne	r5, r3, #1024	; 0x400
   227d0:	cdpmi	2, 14, cr11, cr4, cr12, {4}
   227d4:	ldrtcs	r8, [r1], #-1470	; 0xfffffa42
   227d8:	ldrble	fp, [pc, #1250]!	; 22cc2 <__assert_fail@plt+0x119d6>
   227dc:	strpl	r7, [ip, #-3523]	; 0xfffff23d
   227e0:	adds	r4, r0, r2
   227e4:	adc	r5, r1, r3
   227e8:	ldr	r1, [sp, #12]
   227ec:	lsr	r2, r6, #14
   227f0:	mov	sl, r4
   227f4:	ldr	lr, [r1, #80]	; 0x50
   227f8:	ldr	r1, [r1, #84]	; 0x54
   227fc:	mov	r4, r6
   22800:	rev	ip, r1
   22804:	str	ip, [sp, #120]	; 0x78
   22808:	orr	ip, r2, r7, lsl #18
   2280c:	mov	fp, r5
   22810:	str	ip, [sp, #1768]	; 0x6e8
   22814:	lsr	ip, r7, #14
   22818:	lsr	r0, r7, #18
   2281c:	orr	ip, ip, r4, lsl #18
   22820:	lsr	r3, r6, #18
   22824:	strd	sl, [sp, #16]
   22828:	orr	r3, r3, r7, lsl #14
   2282c:	lsl	r1, r7, #23
   22830:	str	ip, [sp, #1772]	; 0x6ec
   22834:	orr	ip, r0, r4, lsl #14
   22838:	str	r3, [sp, #1776]	; 0x6f0
   2283c:	lsr	r2, sl, #28
   22840:	str	ip, [sp, #1780]	; 0x6f4
   22844:	lsl	r3, fp, #30
   22848:	orr	ip, r1, r4, lsr #9
   2284c:	ldrd	sl, [sp, #112]	; 0x70
   22850:	ldrd	r0, [sp, #16]
   22854:	mov	r5, r7
   22858:	ldrd	r6, [sp, #56]	; 0x38
   2285c:	rev	lr, lr
   22860:	str	lr, [sp, #124]	; 0x7c
   22864:	orr	r3, r3, r0, lsr #2
   22868:	mov	r8, sl
   2286c:	mov	r9, fp
   22870:	str	ip, [sp, #1788]	; 0x6fc
   22874:	orr	ip, r2, r1, lsl #4
   22878:	eor	r8, r8, r6
   2287c:	eor	r9, r9, r7
   22880:	lsl	r2, r0, #30
   22884:	sub	r7, pc, #188	; 0xbc
   22888:	ldrd	r6, [r7]
   2288c:	str	ip, [sp, #1792]	; 0x700
   22890:	str	r3, [sp, #1804]	; 0x70c
   22894:	lsr	ip, r1, #28
   22898:	lsl	r3, r1, #25
   2289c:	ldrd	r0, [sp, #120]	; 0x78
   228a0:	lsl	lr, r4, #23
   228a4:	adds	r0, r0, r6
   228a8:	adc	r1, r1, r7
   228ac:	mov	r6, r4
   228b0:	mov	r7, r5
   228b4:	and	r4, r4, r8
   228b8:	and	r5, r5, r9
   228bc:	mov	r8, r4
   228c0:	mov	r9, r5
   228c4:	ldrd	r4, [sp, #16]
   228c8:	orr	lr, lr, r7, lsr #9
   228cc:	strd	r6, [sp, #136]	; 0x88
   228d0:	orr	ip, ip, r4, lsl #4
   228d4:	orr	r3, r3, r4, lsr #7
   228d8:	str	ip, [sp, #1796]	; 0x704
   228dc:	str	r3, [sp, #1812]	; 0x714
   228e0:	orr	ip, r2, r5, lsr #2
   228e4:	ldrd	r2, [sp, #96]	; 0x60
   228e8:	ldrd	r6, [sp, #88]	; 0x58
   228ec:	str	ip, [sp, #1800]	; 0x708
   228f0:	adds	r2, r2, r0
   228f4:	adc	r3, r3, r1
   228f8:	mov	r1, r3
   228fc:	mov	r3, fp
   22900:	eor	r3, r3, r9
   22904:	mov	r9, r3
   22908:	add	r3, sp, #1760	; 0x6e0
   2290c:	add	r3, r3, #8
   22910:	mov	r0, r2
   22914:	mov	r2, sl
   22918:	ldrd	sl, [r3]
   2291c:	add	r3, sp, #1776	; 0x6f0
   22920:	eor	r2, r2, r8
   22924:	mov	r8, r2
   22928:	ldrd	r2, [r3]
   2292c:	adds	r8, r8, r0
   22930:	adc	r9, r9, r1
   22934:	eor	sl, sl, r2
   22938:	eor	fp, fp, r3
   2293c:	mov	r2, sl
   22940:	mov	r3, fp
   22944:	ldrd	sl, [sp, #16]
   22948:	add	r1, sp, #1776	; 0x6f0
   2294c:	lsl	ip, r4, #25
   22950:	add	r1, r1, #8
   22954:	orr	ip, ip, fp, lsr #7
   22958:	orr	r4, r6, sl
   2295c:	orr	r5, r7, fp
   22960:	str	lr, [sp, #1784]	; 0x6f8
   22964:	str	ip, [sp, #1808]	; 0x710
   22968:	ldrd	sl, [r1]
   2296c:	add	r1, sp, #1792	; 0x700
   22970:	add	ip, sp, #1808	; 0x710
   22974:	eor	sl, sl, r2
   22978:	eor	fp, fp, r3
   2297c:	mov	r2, sl
   22980:	mov	r3, fp
   22984:	ldrd	sl, [r1]
   22988:	add	r1, sp, #1792	; 0x700
   2298c:	add	r1, r1, #8
   22990:	adds	r2, r2, r8
   22994:	ldrd	r0, [r1]
   22998:	adc	r3, r3, r9
   2299c:	ldrd	r8, [ip]
   229a0:	eor	sl, sl, r0
   229a4:	eor	fp, fp, r1
   229a8:	mov	r0, sl
   229ac:	mov	r1, fp
   229b0:	ldrd	sl, [sp, #16]
   229b4:	eor	r8, r8, r0
   229b8:	eor	r9, r9, r1
   229bc:	and	r6, r6, sl
   229c0:	and	r7, r7, fp
   229c4:	ldrd	sl, [sp, #40]	; 0x28
   229c8:	and	sl, sl, r4
   229cc:	and	fp, fp, r5
   229d0:	mov	r4, sl
   229d4:	mov	r5, fp
   229d8:	orr	sl, r6, r4
   229dc:	orr	fp, r7, r5
   229e0:	ldrd	r6, [sp, #104]	; 0x68
   229e4:	adds	r6, r6, r2
   229e8:	adc	r7, r7, r3
   229ec:	adds	r0, r8, sl
   229f0:	adc	r1, r9, fp
   229f4:	adds	r4, r0, r2
   229f8:	adc	r5, r1, r3
   229fc:	ldr	r1, [sp, #12]
   22a00:	lsr	r3, r6, #18
   22a04:	orr	r3, r3, r7, lsl #14
   22a08:	ldr	r0, [r1, #88]	; 0x58
   22a0c:	ldr	r1, [r1, #92]	; 0x5c
   22a10:	mov	sl, r4
   22a14:	mov	fp, r5
   22a18:	lsr	r4, r7, #14
   22a1c:	str	r3, [sp, #1824]	; 0x720
   22a20:	lsl	r3, r5, #30
   22a24:	rev	r5, r0
   22a28:	rev	ip, r1
   22a2c:	str	r4, [sp, #96]	; 0x60
   22a30:	str	r5, [sp, #164]	; 0xa4
   22a34:	ldrd	r0, [sp, #136]	; 0x88
   22a38:	ldrd	r4, [sp, #56]	; 0x38
   22a3c:	lsr	r2, r6, #14
   22a40:	str	ip, [sp, #160]	; 0xa0
   22a44:	orr	ip, r2, r7, lsl #18
   22a48:	eor	r0, r0, r4
   22a4c:	str	ip, [sp, #1816]	; 0x718
   22a50:	ldr	r4, [sp, #96]	; 0x60
   22a54:	lsl	ip, r7, #23
   22a58:	lsr	r2, sl, #28
   22a5c:	orr	ip, ip, r6, lsr #9
   22a60:	eor	r1, r1, r5
   22a64:	orr	r3, r3, sl, lsr #2
   22a68:	orr	r5, r4, r6, lsl #18
   22a6c:	str	ip, [sp, #1836]	; 0x72c
   22a70:	orr	ip, r2, fp, lsl #4
   22a74:	sub	r9, pc, #676	; 0x2a4
   22a78:	ldrd	r8, [r9]
   22a7c:	str	r5, [sp, #1820]	; 0x71c
   22a80:	str	ip, [sp, #1840]	; 0x730
   22a84:	ldrd	r4, [sp, #160]	; 0xa0
   22a88:	lsr	ip, fp, #28
   22a8c:	str	r3, [sp, #1852]	; 0x73c
   22a90:	lsl	r3, fp, #25
   22a94:	lsl	r2, sl, #30
   22a98:	orr	ip, ip, sl, lsl #4
   22a9c:	orr	r3, r3, sl, lsr #7
   22aa0:	str	ip, [sp, #1844]	; 0x734
   22aa4:	str	r3, [sp, #1860]	; 0x744
   22aa8:	orr	ip, r2, fp, lsr #2
   22aac:	ldrd	r2, [sp, #112]	; 0x70
   22ab0:	adds	r4, r4, r8
   22ab4:	adc	r5, r5, r9
   22ab8:	mov	r8, r4
   22abc:	adds	r2, r2, r8
   22ac0:	mov	r9, r5
   22ac4:	adc	r3, r3, r9
   22ac8:	mov	r5, r7
   22acc:	mov	r8, r2
   22ad0:	mov	r9, r3
   22ad4:	ldrd	r2, [sp, #56]	; 0x38
   22ad8:	lsr	lr, r7, #18
   22adc:	and	r5, r5, r1
   22ae0:	orr	lr, lr, r6, lsl #14
   22ae4:	mov	r1, r5
   22ae8:	str	lr, [sp, #1828]	; 0x724
   22aec:	eor	r3, r3, r1
   22af0:	lsl	lr, r6, #23
   22af4:	orr	lr, lr, r7, lsr #9
   22af8:	mov	r1, r3
   22afc:	mov	r4, r6
   22b00:	add	r3, sp, #1808	; 0x710
   22b04:	and	r4, r4, r0
   22b08:	str	lr, [sp, #1832]	; 0x728
   22b0c:	add	r3, r3, #8
   22b10:	add	lr, sp, #1824	; 0x720
   22b14:	eor	r2, r2, r4
   22b18:	mov	r0, r2
   22b1c:	strd	r6, [sp, #192]	; 0xc0
   22b20:	str	ip, [sp, #1848]	; 0x738
   22b24:	ldrd	r2, [r3]
   22b28:	ldrd	r6, [lr]
   22b2c:	adds	r8, r8, r0
   22b30:	adc	r9, r9, r1
   22b34:	eor	r2, r2, r6
   22b38:	eor	r3, r3, r7
   22b3c:	ldrd	r6, [sp, #16]
   22b40:	add	r1, sp, #1824	; 0x720
   22b44:	add	r1, r1, #8
   22b48:	orr	r6, r6, sl
   22b4c:	orr	r7, r7, fp
   22b50:	mov	r4, r6
   22b54:	mov	r5, r7
   22b58:	ldrd	r6, [r1]
   22b5c:	add	r1, sp, #1840	; 0x730
   22b60:	lsl	ip, sl, #25
   22b64:	eor	r6, r6, r2
   22b68:	eor	r7, r7, r3
   22b6c:	mov	r2, r6
   22b70:	mov	r3, r7
   22b74:	ldrd	r6, [r1]
   22b78:	add	r1, sp, #1840	; 0x730
   22b7c:	add	r1, r1, #8
   22b80:	mov	lr, fp
   22b84:	ldrd	r0, [r1]
   22b88:	orr	ip, ip, fp, lsr #7
   22b8c:	strd	sl, [sp, #104]	; 0x68
   22b90:	eor	r6, r6, r0
   22b94:	mov	r0, r6
   22b98:	mov	r6, sl
   22b9c:	ldrd	sl, [sp, #16]
   22ba0:	str	ip, [sp, #1856]	; 0x740
   22ba4:	add	ip, sp, #1856	; 0x740
   22ba8:	adds	r2, r2, r8
   22bac:	and	fp, fp, lr
   22bb0:	eor	r7, r7, r1
   22bb4:	and	sl, sl, r6
   22bb8:	adc	r3, r3, r9
   22bbc:	mov	r1, r7
   22bc0:	ldrd	r8, [ip]
   22bc4:	mov	r6, sl
   22bc8:	mov	r7, fp
   22bcc:	ldrd	sl, [sp, #88]	; 0x58
   22bd0:	eor	r8, r8, r0
   22bd4:	eor	r9, r9, r1
   22bd8:	and	sl, sl, r4
   22bdc:	and	fp, fp, r5
   22be0:	mov	r0, r8
   22be4:	mov	r1, r9
   22be8:	orr	r8, r6, sl
   22bec:	orr	r9, r7, fp
   22bf0:	mov	r4, r8
   22bf4:	mov	r5, r9
   22bf8:	ldrd	r8, [sp, #40]	; 0x28
   22bfc:	adds	r8, r8, r2
   22c00:	adc	r9, r9, r3
   22c04:	adds	r0, r0, r4
   22c08:	mov	r6, r8
   22c0c:	adc	r1, r1, r5
   22c10:	adds	r8, r0, r2
   22c14:	mov	r7, r9
   22c18:	adc	r9, r1, r3
   22c1c:	ldr	r1, [sp, #12]
   22c20:	mov	sl, r8
   22c24:	mov	fp, r9
   22c28:	ldr	r0, [r1, #96]	; 0x60
   22c2c:	ldr	r1, [r1, #100]	; 0x64
   22c30:	lsr	r3, r6, #18
   22c34:	lsr	r2, r6, #14
   22c38:	rev	ip, r1
   22c3c:	orr	r3, r3, r7, lsl #14
   22c40:	str	ip, [sp, #168]	; 0xa8
   22c44:	strd	sl, [sp, #40]	; 0x28
   22c48:	orr	ip, r2, r7, lsl #18
   22c4c:	str	r3, [sp, #1872]	; 0x750
   22c50:	lsr	r2, sl, #28
   22c54:	lsl	r3, fp, #30
   22c58:	ldrd	sl, [sp, #136]	; 0x88
   22c5c:	lsr	r4, r7, #14
   22c60:	strd	r6, [sp, #96]	; 0x60
   22c64:	str	ip, [sp, #1864]	; 0x748
   22c68:	lsr	lr, r7, #18
   22c6c:	lsl	ip, r7, #23
   22c70:	ldrd	r6, [sp, #192]	; 0xc0
   22c74:	rev	r5, r0
   22c78:	mov	r1, fp
   22c7c:	mov	r0, sl
   22c80:	eor	r0, r0, r6
   22c84:	eor	r1, r1, r7
   22c88:	ldrd	r6, [sp, #96]	; 0x60
   22c8c:	str	r5, [sp, #172]	; 0xac
   22c90:	add	r9, pc, #880	; 0x370
   22c94:	ldrd	r8, [r9]
   22c98:	orr	r5, r4, r6, lsl #18
   22c9c:	str	r5, [sp, #1868]	; 0x74c
   22ca0:	ldrd	r4, [sp, #40]	; 0x28
   22ca4:	orr	ip, ip, r6, lsr #9
   22ca8:	str	ip, [sp, #1884]	; 0x75c
   22cac:	orr	r3, r3, r4, lsr #2
   22cb0:	orr	ip, r2, r5, lsl #4
   22cb4:	str	ip, [sp, #1888]	; 0x760
   22cb8:	lsl	r2, r4, #30
   22cbc:	lsr	ip, r5, #28
   22cc0:	str	r3, [sp, #1900]	; 0x76c
   22cc4:	lsl	r3, r5, #25
   22cc8:	ldrd	r4, [sp, #168]	; 0xa8
   22ccc:	orr	lr, lr, r6, lsl #14
   22cd0:	str	lr, [sp, #1876]	; 0x754
   22cd4:	adds	r4, r4, r8
   22cd8:	lsl	lr, r6, #23
   22cdc:	adc	r5, r5, r9
   22ce0:	orr	lr, lr, r7, lsr #9
   22ce4:	str	lr, [sp, #1880]	; 0x758
   22ce8:	mov	r8, r4
   22cec:	mov	r9, r5
   22cf0:	mov	r4, r6
   22cf4:	mov	r5, r7
   22cf8:	ldrd	r6, [sp, #40]	; 0x28
   22cfc:	and	r5, r5, r1
   22d00:	mov	r1, r5
   22d04:	orr	ip, ip, r6, lsl #4
   22d08:	orr	r3, r3, r6, lsr #7
   22d0c:	str	ip, [sp, #1892]	; 0x764
   22d10:	str	r3, [sp, #1908]	; 0x774
   22d14:	orr	ip, r2, r7, lsr #2
   22d18:	ldrd	r2, [sp, #56]	; 0x38
   22d1c:	and	r4, r4, r0
   22d20:	add	lr, sp, #1872	; 0x750
   22d24:	adds	r2, r2, r8
   22d28:	adc	r3, r3, r9
   22d2c:	mov	r9, r3
   22d30:	mov	r3, fp
   22d34:	mov	r8, r2
   22d38:	eor	r3, r3, r1
   22d3c:	mov	r2, sl
   22d40:	eor	r2, r2, r4
   22d44:	mov	r1, r3
   22d48:	add	r3, sp, #1856	; 0x740
   22d4c:	mov	r0, r2
   22d50:	add	r3, r3, #8
   22d54:	adds	r8, r8, r0
   22d58:	ldrd	sl, [sp, #104]	; 0x68
   22d5c:	ldrd	r4, [lr]
   22d60:	adc	r9, r9, r1
   22d64:	ldrd	r2, [r3]
   22d68:	add	r1, sp, #1872	; 0x750
   22d6c:	add	r1, r1, #8
   22d70:	str	ip, [sp, #1896]	; 0x768
   22d74:	lsl	ip, r6, #25
   22d78:	eor	r2, r2, r4
   22d7c:	eor	r3, r3, r5
   22d80:	orr	r4, sl, r6
   22d84:	orr	r5, fp, r7
   22d88:	orr	ip, ip, r7, lsr #7
   22d8c:	ldrd	r6, [r1]
   22d90:	add	r1, sp, #1888	; 0x760
   22d94:	strd	sl, [sp, #112]	; 0x70
   22d98:	eor	r6, r6, r2
   22d9c:	eor	r7, r7, r3
   22da0:	mov	r2, r6
   22da4:	mov	r3, r7
   22da8:	ldrd	r6, [r1]
   22dac:	add	r1, sp, #1888	; 0x760
   22db0:	add	r1, r1, #8
   22db4:	str	ip, [sp, #1904]	; 0x770
   22db8:	ldrd	r0, [r1]
   22dbc:	add	ip, sp, #1904	; 0x770
   22dc0:	adds	r2, r2, r8
   22dc4:	eor	r6, r6, r0
   22dc8:	eor	r7, r7, r1
   22dcc:	mov	r0, r6
   22dd0:	mov	r1, r7
   22dd4:	mov	r6, sl
   22dd8:	mov	r7, fp
   22ddc:	ldrd	sl, [sp, #40]	; 0x28
   22de0:	adc	r3, r3, r9
   22de4:	ldrd	r8, [ip]
   22de8:	and	r6, r6, sl
   22dec:	and	r7, r7, fp
   22df0:	mov	sl, r6
   22df4:	mov	fp, r7
   22df8:	ldrd	r6, [sp, #16]
   22dfc:	eor	r8, r8, r0
   22e00:	eor	r9, r9, r1
   22e04:	and	r6, r6, r4
   22e08:	and	r7, r7, r5
   22e0c:	mov	r0, r8
   22e10:	mov	r1, r9
   22e14:	orr	r8, sl, r6
   22e18:	orr	r9, fp, r7
   22e1c:	ldrd	r6, [sp, #88]	; 0x58
   22e20:	ldrd	r4, [sp, #192]	; 0xc0
   22e24:	adds	r6, r6, r2
   22e28:	adc	r7, r7, r3
   22e2c:	adds	r0, r0, r8
   22e30:	adc	r1, r1, r9
   22e34:	adds	r8, r0, r2
   22e38:	adc	r9, r1, r3
   22e3c:	ldr	r1, [sp, #12]
   22e40:	lsr	r2, r6, #14
   22e44:	lsr	r0, r7, #18
   22e48:	ldr	lr, [r1, #104]	; 0x68
   22e4c:	ldr	r1, [r1, #108]	; 0x6c
   22e50:	lsr	r3, r6, #18
   22e54:	rev	ip, r1
   22e58:	str	ip, [sp, #88]	; 0x58
   22e5c:	orr	ip, r2, r7, lsl #18
   22e60:	str	ip, [sp, #1912]	; 0x778
   22e64:	lsr	ip, r7, #14
   22e68:	orr	ip, ip, r6, lsl #18
   22e6c:	mov	sl, r8
   22e70:	mov	fp, r9
   22e74:	orr	r3, r3, r7, lsl #14
   22e78:	lsl	r1, r7, #23
   22e7c:	str	ip, [sp, #1916]	; 0x77c
   22e80:	orr	ip, r0, r6, lsl #14
   22e84:	lsr	r2, r8, #28
   22e88:	str	r3, [sp, #1920]	; 0x780
   22e8c:	str	ip, [sp, #1924]	; 0x784
   22e90:	lsl	r3, r9, #30
   22e94:	orr	ip, r1, r6, lsr #9
   22e98:	orr	r3, r3, sl, lsr #2
   22e9c:	rev	lr, lr
   22ea0:	str	ip, [sp, #1932]	; 0x78c
   22ea4:	orr	ip, r2, fp, lsl #4
   22ea8:	add	r1, pc, #352	; 0x160
   22eac:	ldrd	r0, [r1]
   22eb0:	ldrd	r8, [sp, #96]	; 0x60
   22eb4:	str	lr, [sp, #92]	; 0x5c
   22eb8:	strd	r6, [sp, #104]	; 0x68
   22ebc:	lsl	lr, r6, #23
   22ec0:	str	ip, [sp, #1936]	; 0x790
   22ec4:	str	r3, [sp, #1948]	; 0x79c
   22ec8:	ldrd	r6, [sp, #88]	; 0x58
   22ecc:	lsr	ip, fp, #28
   22ed0:	lsl	r3, fp, #25
   22ed4:	adds	r6, r6, r0
   22ed8:	lsl	r2, sl, #30
   22edc:	adc	r7, r7, r1
   22ee0:	orr	ip, ip, sl, lsl #4
   22ee4:	orr	r3, r3, sl, lsr #7
   22ee8:	mov	r0, r6
   22eec:	mov	r1, r7
   22ef0:	str	ip, [sp, #1940]	; 0x794
   22ef4:	ldrd	r6, [sp, #104]	; 0x68
   22ef8:	orr	ip, r2, fp, lsr #2
   22efc:	str	r3, [sp, #1956]	; 0x7a4
   22f00:	ldrd	r2, [sp, #136]	; 0x88
   22f04:	eor	r9, r9, r5
   22f08:	and	r7, r7, r9
   22f0c:	adds	r2, r2, r0
   22f10:	mov	r9, r7
   22f14:	adc	r3, r3, r1
   22f18:	ldr	r7, [sp, #108]	; 0x6c
   22f1c:	mov	r1, r3
   22f20:	mov	r3, r5
   22f24:	eor	r3, r3, r9
   22f28:	eor	r8, r8, r4
   22f2c:	orr	lr, lr, r7, lsr #9
   22f30:	mov	r9, r3
   22f34:	add	r3, sp, #1904	; 0x770
   22f38:	and	r6, r6, r8
   22f3c:	str	lr, [sp, #1928]	; 0x788
   22f40:	mov	r0, r2
   22f44:	add	lr, sp, #1920	; 0x780
   22f48:	mov	r2, r4
   22f4c:	add	r3, r3, #8
   22f50:	eor	r2, r2, r6
   22f54:	mov	r8, r2
   22f58:	ldrd	r6, [lr]
   22f5c:	ldrd	r2, [r3]
   22f60:	str	ip, [sp, #1944]	; 0x798
   22f64:	lsl	ip, sl, #25
   22f68:	eor	r2, r2, r6
   22f6c:	adds	r6, r8, r0
   22f70:	eor	r3, r3, r7
   22f74:	adc	r7, r9, r1
   22f78:	add	r1, sp, #1920	; 0x780
   22f7c:	add	r1, r1, #8
   22f80:	ldrd	r8, [r1]
   22f84:	add	r1, sp, #1936	; 0x790
   22f88:	strd	r6, [sp, #56]	; 0x38
   22f8c:	eor	r8, r8, r2
   22f90:	eor	r9, r9, r3
   22f94:	mov	r2, r8
   22f98:	mov	r3, r9
   22f9c:	ldrd	r8, [r1]
   22fa0:	add	r1, sp, #1936	; 0x790
   22fa4:	add	r1, r1, #8
   22fa8:	ldrd	r6, [r1]
   22fac:	ldrd	r4, [sp, #40]	; 0x28
   22fb0:	orr	ip, ip, fp, lsr #7
   22fb4:	eor	r8, r8, r6
   22fb8:	eor	r9, r9, r7
   22fbc:	mov	r0, r8
   22fc0:	mov	r1, r9
   22fc4:	ldrd	r8, [sp, #40]	; 0x28
   22fc8:	str	ip, [sp, #1952]	; 0x7a0
   22fcc:	add	ip, sp, #1952	; 0x7a0
   22fd0:	and	r8, r8, sl
   22fd4:	and	r9, r9, fp
   22fd8:	mov	r6, r8
   22fdc:	mov	r7, r9
   22fe0:	ldrd	r8, [sp, #112]	; 0x70
   22fe4:	orr	r4, r4, sl
   22fe8:	orr	r5, r5, fp
   22fec:	strd	sl, [sp, #208]	; 0xd0
   22ff0:	ldrd	sl, [ip]
   22ff4:	and	r8, r8, r4
   22ff8:	and	r9, r9, r5
   22ffc:	mov	r4, r8
   23000:	mov	r5, r9
   23004:	b	23028 <__assert_fail@plt+0x11d3c>
   23008:	vmla.i<illegal width 64>	q12, <illegal reg q5.5>, <illegal reg q15.5>
   2300c:	adcsvc	r5, lr, #116, 26	; 0x1d00
   23010:	blcc	5c8adc <optarg@@GLIBC_2.4+0x576934>
   23014:	ldrshhi	fp, [lr], #30
   23018:	strbcs	r1, [r7, #565]	; 0x235
   2301c:	blls	ff724ac0 <optarg@@GLIBC_2.4+0xff6d2918>
   23020:	svcgt	0x00692694
   23024:	orrsgt	pc, fp, r4, ror r1	; <UNPREDICTABLE>
   23028:	ldrd	r8, [sp, #56]	; 0x38
   2302c:	eor	sl, sl, r0
   23030:	eor	fp, fp, r1
   23034:	mov	r0, sl
   23038:	mov	r1, fp
   2303c:	ldrd	sl, [sp, #16]
   23040:	adds	r8, r8, r2
   23044:	mov	r2, r8
   23048:	adc	r9, r9, r3
   2304c:	mov	r3, r9
   23050:	adds	sl, sl, r2
   23054:	orr	r8, r6, r4
   23058:	adc	fp, fp, r3
   2305c:	orr	r9, r7, r5
   23060:	adds	r0, r0, r8
   23064:	adc	r1, r1, r9
   23068:	adds	r4, r0, r2
   2306c:	adc	r5, r1, r3
   23070:	ldr	r1, [sp, #12]
   23074:	lsr	r2, sl, #14
   23078:	mov	r6, sl
   2307c:	ldr	lr, [r1, #112]	; 0x70
   23080:	ldr	r1, [r1, #116]	; 0x74
   23084:	lsr	r3, sl, #18
   23088:	rev	ip, r1
   2308c:	str	ip, [sp, #56]	; 0x38
   23090:	orr	ip, r2, fp, lsl #18
   23094:	orr	r3, r3, fp, lsl #14
   23098:	str	ip, [sp, #1960]	; 0x7a8
   2309c:	rev	lr, lr
   230a0:	lsr	ip, fp, #14
   230a4:	mov	r7, fp
   230a8:	lsr	r0, fp, #18
   230ac:	lsl	r1, fp, #23
   230b0:	lsr	r2, r4, #28
   230b4:	orr	ip, ip, r6, lsl #18
   230b8:	str	r3, [sp, #1968]	; 0x7b0
   230bc:	strd	r4, [sp, #152]	; 0x98
   230c0:	lsl	r3, r5, #30
   230c4:	str	lr, [sp, #60]	; 0x3c
   230c8:	ldrd	r4, [sp, #96]	; 0x60
   230cc:	ldrd	r8, [sp, #104]	; 0x68
   230d0:	ldrd	sl, [sp, #152]	; 0x98
   230d4:	str	ip, [sp, #1964]	; 0x7ac
   230d8:	orr	ip, r0, r6, lsl #14
   230dc:	str	ip, [sp, #1972]	; 0x7b4
   230e0:	orr	ip, r1, r6, lsr #9
   230e4:	str	ip, [sp, #1980]	; 0x7bc
   230e8:	orr	r3, r3, sl, lsr #2
   230ec:	orr	ip, r2, fp, lsl #4
   230f0:	lsl	r1, sl, #30
   230f4:	lsl	r2, fp, #25
   230f8:	str	r1, [sp, #16]
   230fc:	str	r2, [sp, #96]	; 0x60
   23100:	str	r3, [sp, #1996]	; 0x7cc
   23104:	ldrd	r0, [sp, #56]	; 0x38
   23108:	sub	r3, pc, #248	; 0xf8
   2310c:	ldrd	r2, [r3]
   23110:	strd	r6, [sp, #144]	; 0x90
   23114:	eor	r9, r9, r5
   23118:	adds	r0, r0, r2
   2311c:	adc	r1, r1, r3
   23120:	ldrd	r2, [sp, #144]	; 0x90
   23124:	mov	r7, r1
   23128:	lsl	lr, r6, #23
   2312c:	mov	r1, r3
   23130:	and	r1, r1, r9
   23134:	str	ip, [sp, #1984]	; 0x7c0
   23138:	mov	r9, r1
   2313c:	lsr	ip, fp, #28
   23140:	ldr	r1, [sp, #16]
   23144:	orr	r3, lr, r3, lsr #9
   23148:	mov	r6, r0
   2314c:	str	r3, [sp, #1976]	; 0x7b8
   23150:	mov	r0, r2
   23154:	orr	r3, ip, sl, lsl #4
   23158:	ldr	r2, [sp, #96]	; 0x60
   2315c:	str	r3, [sp, #1988]	; 0x7c4
   23160:	orr	r3, r1, fp, lsr #2
   23164:	str	r3, [sp, #1992]	; 0x7c8
   23168:	orr	r3, r2, sl, lsr #7
   2316c:	str	r3, [sp, #2004]	; 0x7d4
   23170:	ldrd	r2, [sp, #192]	; 0xc0
   23174:	eor	r8, r8, r4
   23178:	and	r0, r0, r8
   2317c:	mov	r8, r0
   23180:	adds	r0, r6, r2
   23184:	adc	r1, r7, r3
   23188:	mov	r3, r5
   2318c:	eor	r3, r3, r9
   23190:	mov	r9, r3
   23194:	add	r3, sp, #1952	; 0x7a0
   23198:	mov	r2, r4
   2319c:	add	lr, sp, #1968	; 0x7b0
   231a0:	add	r3, r3, #8
   231a4:	eor	r2, r2, r8
   231a8:	strd	r4, [sp, #96]	; 0x60
   231ac:	mov	r8, r2
   231b0:	ldrd	r4, [lr]
   231b4:	ldrd	r2, [r3]
   231b8:	adds	r8, r8, r0
   231bc:	adc	r9, r9, r1
   231c0:	eor	r2, r2, r4
   231c4:	eor	r3, r3, r5
   231c8:	add	r1, sp, #1968	; 0x7b0
   231cc:	ldrd	r4, [sp, #208]	; 0xd0
   231d0:	add	r1, r1, #8
   231d4:	lsl	ip, sl, #25
   231d8:	mov	r6, sl
   231dc:	mov	r7, fp
   231e0:	orr	r4, r4, sl
   231e4:	orr	r5, r5, fp
   231e8:	orr	ip, ip, fp, lsr #7
   231ec:	ldrd	sl, [r1]
   231f0:	add	r1, sp, #1984	; 0x7c0
   231f4:	str	ip, [sp, #2000]	; 0x7d0
   231f8:	eor	sl, sl, r2
   231fc:	eor	fp, fp, r3
   23200:	mov	r2, sl
   23204:	mov	r3, fp
   23208:	ldrd	sl, [r1]
   2320c:	add	r1, sp, #1984	; 0x7c0
   23210:	add	r1, r1, #8
   23214:	adds	r2, r2, r8
   23218:	ldrd	r0, [r1]
   2321c:	adc	r3, r3, r9
   23220:	eor	sl, sl, r0
   23224:	eor	fp, fp, r1
   23228:	ldrd	r0, [sp, #40]	; 0x28
   2322c:	strd	sl, [sp, #16]
   23230:	ldrd	sl, [sp, #208]	; 0xd0
   23234:	and	r1, r1, r5
   23238:	mov	r5, r1
   2323c:	add	r1, sp, #2000	; 0x7d0
   23240:	and	r0, r0, r4
   23244:	ldrd	r8, [r1]
   23248:	mov	r4, r0
   2324c:	ldrd	r0, [sp, #16]
   23250:	and	sl, sl, r6
   23254:	and	fp, fp, r7
   23258:	eor	r0, r0, r8
   2325c:	eor	r1, r1, r9
   23260:	ldrd	r8, [sp, #112]	; 0x70
   23264:	orr	r4, r4, sl
   23268:	orr	r5, r5, fp
   2326c:	adds	r8, r8, r2
   23270:	adc	r9, r9, r3
   23274:	adds	r0, r0, r4
   23278:	adc	r1, r1, r5
   2327c:	adds	r4, r0, r2
   23280:	adc	r5, r1, r3
   23284:	ldr	r1, [sp, #12]
   23288:	lsr	r3, r8, #18
   2328c:	strd	r8, [sp, #112]	; 0x70
   23290:	ldr	r0, [r1, #120]	; 0x78
   23294:	orr	r3, r3, r9, lsl #14
   23298:	ldr	r1, [r1, #124]	; 0x7c
   2329c:	str	r3, [sp, #2016]	; 0x7e0
   232a0:	ldr	r3, [sp, #116]	; 0x74
   232a4:	lsr	r2, r8, #14
   232a8:	rev	ip, r1
   232ac:	ldrd	r6, [sp, #104]	; 0x68
   232b0:	str	ip, [sp, #16]
   232b4:	orr	ip, r2, r9, lsl #18
   232b8:	mov	fp, r5
   232bc:	str	ip, [sp, #2008]	; 0x7d8
   232c0:	lsl	ip, r3, #23
   232c4:	lsl	r3, r5, #30
   232c8:	rev	r5, r0
   232cc:	ldrd	r0, [sp, #144]	; 0x90
   232d0:	mov	sl, r4
   232d4:	lsr	lr, r9, #18
   232d8:	lsr	r4, r9, #14
   232dc:	mov	r8, r6
   232e0:	mov	r9, r7
   232e4:	eor	r8, r8, r0
   232e8:	eor	r9, r9, r1
   232ec:	mov	r0, r8
   232f0:	mov	r1, r9
   232f4:	ldrd	r8, [sp, #112]	; 0x70
   232f8:	lsr	r2, sl, #28
   232fc:	str	r5, [sp, #20]
   23300:	orr	ip, ip, r8, lsr #9
   23304:	orr	r5, r4, r8, lsl #18
   23308:	str	r5, [sp, #2012]	; 0x7dc
   2330c:	orr	lr, lr, r8, lsl #14
   23310:	orr	r3, r3, sl, lsr #2
   23314:	str	ip, [sp, #2028]	; 0x7ec
   23318:	mov	r4, r8
   2331c:	orr	ip, r2, fp, lsl #4
   23320:	mov	r5, r9
   23324:	str	lr, [sp, #2020]	; 0x7e4
   23328:	str	ip, [sp, #2032]	; 0x7f0
   2332c:	lsl	lr, r8, #23
   23330:	lsr	ip, fp, #28
   23334:	str	r3, [sp, #2044]	; 0x7fc
   23338:	and	r4, r4, r0
   2333c:	lsl	r3, fp, #25
   23340:	and	r5, r5, r1
   23344:	lsl	r2, sl, #30
   23348:	mov	r0, r4
   2334c:	mov	r1, r5
   23350:	orr	lr, lr, r9, lsr #9
   23354:	ldrd	r4, [sp, #16]
   23358:	orr	ip, ip, sl, lsl #4
   2335c:	orr	r3, r3, sl, lsr #7
   23360:	strd	r8, [sp, #216]	; 0xd8
   23364:	sub	r9, pc, #844	; 0x34c
   23368:	ldrd	r8, [r9]
   2336c:	str	ip, [sp, #2036]	; 0x7f4
   23370:	str	r3, [sp, #2052]	; 0x804
   23374:	orr	ip, r2, fp, lsr #2
   23378:	ldrd	r2, [sp, #96]	; 0x60
   2337c:	adds	r4, r4, r8
   23380:	adc	r5, r5, r9
   23384:	adds	r2, r2, r4
   23388:	adc	r3, r3, r5
   2338c:	mov	r9, r3
   23390:	mov	r3, r7
   23394:	eor	r3, r3, r1
   23398:	mov	r1, r3
   2339c:	add	r3, sp, #2000	; 0x7d0
   233a0:	mov	r8, r2
   233a4:	str	lr, [sp, #2024]	; 0x7e8
   233a8:	mov	r2, r6
   233ac:	add	lr, sp, #2016	; 0x7e0
   233b0:	add	r3, r3, #8
   233b4:	eor	r2, r2, r0
   233b8:	ldrd	r4, [lr]
   233bc:	mov	r0, r2
   233c0:	ldrd	r2, [r3]
   233c4:	ldrd	r6, [sp, #56]	; 0x38
   233c8:	str	ip, [sp, #2040]	; 0x7f8
   233cc:	eor	r2, r2, r4
   233d0:	eor	r3, r3, r5
   233d4:	ldrd	r4, [sp, #152]	; 0x98
   233d8:	lsl	ip, sl, #25
   233dc:	lsr	lr, r6, #6
   233e0:	orr	ip, ip, fp, lsr #7
   233e4:	adds	r0, r0, r8
   233e8:	orr	r4, r4, sl
   233ec:	orr	r5, r5, fp
   233f0:	str	lr, [sp, #232]	; 0xe8
   233f4:	strd	sl, [sp, #200]	; 0xc8
   233f8:	add	r8, sp, #2016	; 0x7e0
   233fc:	str	ip, [sp, #2048]	; 0x800
   23400:	ldrd	sl, [sp, #64]	; 0x40
   23404:	add	r8, r8, #8
   23408:	adc	r1, r1, r9
   2340c:	lsr	lr, sl, #1
   23410:	lsr	r9, sl, #8
   23414:	ldrd	sl, [r8]
   23418:	lsr	ip, r6, #19
   2341c:	orr	ip, ip, r7, lsl #13
   23420:	eor	sl, sl, r2
   23424:	eor	fp, fp, r3
   23428:	mov	r2, sl
   2342c:	mov	r3, fp
   23430:	ldrd	sl, [sp, #208]	; 0xd0
   23434:	str	ip, [sp, #2056]	; 0x808
   23438:	lsl	ip, r7, #3
   2343c:	and	sl, sl, r4
   23440:	and	fp, fp, r5
   23444:	mov	r4, sl
   23448:	mov	r5, fp
   2344c:	ldrd	sl, [sp, #64]	; 0x40
   23450:	orr	ip, ip, r6, lsr #29
   23454:	str	ip, [sp, #2068]	; 0x814
   23458:	lsr	ip, sl, #7
   2345c:	str	ip, [sp, #240]	; 0xf0
   23460:	orr	ip, lr, fp, lsl #31
   23464:	adds	sl, r0, r2
   23468:	str	ip, [sp, #2072]	; 0x818
   2346c:	orr	ip, r9, fp, lsl #24
   23470:	lsr	lr, fp, #1
   23474:	str	ip, [sp, #2080]	; 0x820
   23478:	lsr	ip, fp, #8
   2347c:	adc	fp, r1, r3
   23480:	add	r1, sp, #2032	; 0x7f0
   23484:	add	r3, sp, #2032	; 0x7f0
   23488:	add	r1, r1, #8
   2348c:	ldrd	r2, [r3]
   23490:	ldrd	r0, [r1]
   23494:	ldr	r9, [sp, #232]	; 0xe8
   23498:	lsr	r8, r7, #19
   2349c:	eor	r3, r3, r1
   234a0:	add	r1, sp, #2048	; 0x800
   234a4:	eor	r2, r2, r0
   234a8:	ldrd	r0, [r1]
   234ac:	orr	r9, r9, r7, lsl #26
   234b0:	str	r9, [sp, #232]	; 0xe8
   234b4:	eor	r0, r0, r2
   234b8:	orr	r9, r8, r6, lsl #13
   234bc:	eor	r1, r1, r3
   234c0:	mov	r2, r0
   234c4:	mov	r3, r1
   234c8:	str	r9, [sp, #2060]	; 0x80c
   234cc:	ldrd	r0, [sp, #152]	; 0x98
   234d0:	ldrd	r8, [sp, #200]	; 0xc8
   234d4:	and	r1, r1, r9
   234d8:	orr	r5, r5, r1
   234dc:	lsl	r1, r6, #3
   234e0:	orr	r9, r1, r7, lsr #29
   234e4:	and	r0, r0, r8
   234e8:	str	r9, [sp, #2064]	; 0x810
   234ec:	ldrd	r8, [sp, #64]	; 0x40
   234f0:	ldr	r1, [sp, #240]	; 0xf0
   234f4:	orr	r4, r4, r0
   234f8:	orr	r1, r1, r9, lsl #25
   234fc:	str	r1, [sp, #240]	; 0xf0
   23500:	ldrd	r0, [sp, #40]	; 0x28
   23504:	orr	ip, ip, r8, lsl #24
   23508:	str	ip, [sp, #2084]	; 0x824
   2350c:	adds	r0, r0, sl
   23510:	adc	r1, r1, fp
   23514:	adds	r4, r4, r2
   23518:	adc	r5, r5, r3
   2351c:	add	r3, sp, #2048	; 0x800
   23520:	strd	r0, [sp, #112]	; 0x70
   23524:	add	r3, r3, #8
   23528:	add	r1, sp, #2064	; 0x810
   2352c:	lsr	ip, r7, #6
   23530:	ldrd	r2, [r3]
   23534:	ldrd	r6, [r1]
   23538:	orr	lr, lr, r8, lsl #31
   2353c:	str	ip, [sp, #236]	; 0xec
   23540:	eor	r2, r2, r6
   23544:	eor	r3, r3, r7
   23548:	lsr	ip, r9, #7
   2354c:	ldrd	r6, [sp, #48]	; 0x30
   23550:	ldrd	r8, [sp, #224]	; 0xe0
   23554:	str	ip, [sp, #244]	; 0xf4
   23558:	add	ip, sp, #2080	; 0x820
   2355c:	adds	r8, r8, r6
   23560:	adc	r9, r9, r7
   23564:	mov	r0, r8
   23568:	mov	r1, r9
   2356c:	ldrd	r8, [sp, #232]	; 0xe8
   23570:	adds	sl, sl, r4
   23574:	adc	fp, fp, r5
   23578:	eor	r9, r9, r3
   2357c:	add	r3, sp, #2064	; 0x810
   23580:	add	r3, r3, #8
   23584:	eor	r8, r8, r2
   23588:	str	lr, [sp, #2076]	; 0x81c
   2358c:	mov	r4, r8
   23590:	ldrd	r2, [r3]
   23594:	mov	r5, r9
   23598:	ldrd	r8, [ip]
   2359c:	ldrd	r6, [sp, #112]	; 0x70
   235a0:	adds	r4, r4, r0
   235a4:	eor	r2, r2, r8
   235a8:	eor	r3, r3, r9
   235ac:	ldrd	r8, [sp, #240]	; 0xf0
   235b0:	mov	lr, r7
   235b4:	lsr	ip, r6, #14
   235b8:	eor	r8, r8, r2
   235bc:	mov	r2, r8
   235c0:	mov	r8, r6
   235c4:	adc	r5, r5, r1
   235c8:	orr	ip, ip, r7, lsl #18
   235cc:	lsr	r1, r6, #18
   235d0:	lsr	r0, r7, #14
   235d4:	eor	r9, r9, r3
   235d8:	adds	r6, r4, r2
   235dc:	mov	r3, r9
   235e0:	str	ip, [sp, #2088]	; 0x828
   235e4:	lsl	r2, lr, #23
   235e8:	orr	ip, r1, r7, lsl #14
   235ec:	orr	lr, r0, r8, lsl #18
   235f0:	lsr	r1, r7, #18
   235f4:	str	lr, [sp, #2092]	; 0x82c
   235f8:	adc	r7, r5, r3
   235fc:	orr	lr, r1, r8, lsl #14
   23600:	ldrd	r4, [sp, #216]	; 0xd8
   23604:	ldrd	r0, [sp, #144]	; 0x90
   23608:	lsl	r3, fp, #30
   2360c:	str	ip, [sp, #2096]	; 0x830
   23610:	eor	r0, r0, r4
   23614:	eor	r1, r1, r5
   23618:	add	r5, pc, #864	; 0x360
   2361c:	ldrd	r4, [r5]
   23620:	orr	r3, r3, sl, lsr #2
   23624:	lsr	ip, sl, #28
   23628:	adds	r4, r4, r6
   2362c:	adc	r5, r5, r7
   23630:	strd	r6, [sp, #136]	; 0x88
   23634:	ldrd	r6, [sp, #112]	; 0x70
   23638:	orr	ip, ip, fp, lsl #4
   2363c:	str	r3, [sp, #2124]	; 0x84c
   23640:	lsr	r3, fp, #28
   23644:	str	lr, [sp, #2100]	; 0x834
   23648:	orr	r3, r3, sl, lsl #4
   2364c:	orr	lr, r2, r8, lsr #9
   23650:	str	ip, [sp, #2112]	; 0x840
   23654:	lsl	r2, r8, #23
   23658:	lsl	ip, sl, #30
   2365c:	str	lr, [sp, #2108]	; 0x83c
   23660:	str	r3, [sp, #2116]	; 0x844
   23664:	orr	lr, r2, r7, lsr #9
   23668:	orr	r3, ip, fp, lsr #2
   2366c:	lsl	r2, fp, #25
   23670:	str	r3, [sp, #2120]	; 0x848
   23674:	orr	r3, r2, sl, lsr #7
   23678:	str	r3, [sp, #2132]	; 0x854
   2367c:	ldrd	r2, [sp, #144]	; 0x90
   23680:	mov	r9, r7
   23684:	and	r9, r9, r1
   23688:	eor	r3, r3, r9
   2368c:	mov	r8, r6
   23690:	mov	r1, r3
   23694:	add	r3, sp, #2080	; 0x820
   23698:	and	r8, r8, r0
   2369c:	str	lr, [sp, #2104]	; 0x838
   236a0:	add	r3, r3, #8
   236a4:	add	lr, sp, #2096	; 0x830
   236a8:	eor	r2, r2, r8
   236ac:	mov	r0, r2
   236b0:	ldrd	r8, [lr]
   236b4:	ldrd	r2, [r3]
   236b8:	ldrd	r6, [sp, #104]	; 0x68
   236bc:	lsl	ip, sl, #25
   236c0:	eor	r2, r2, r8
   236c4:	eor	r3, r3, r9
   236c8:	ldrd	r8, [sp, #200]	; 0xc8
   236cc:	adds	r6, r6, r4
   236d0:	adc	r7, r7, r5
   236d4:	orr	r8, r8, sl
   236d8:	adds	r0, r0, r6
   236dc:	orr	r9, r9, fp
   236e0:	adc	r1, r1, r7
   236e4:	mov	r4, r8
   236e8:	ldrd	r6, [sp, #24]
   236ec:	mov	r5, r9
   236f0:	add	r7, sp, #2096	; 0x830
   236f4:	ldrd	r8, [sp, #16]
   236f8:	add	r7, r7, #8
   236fc:	orr	ip, ip, fp, lsr #7
   23700:	lsr	lr, r8, #6
   23704:	str	ip, [sp, #2128]	; 0x850
   23708:	lsr	ip, r8, #19
   2370c:	ldrd	r8, [r7]
   23710:	str	lr, [sp, #248]	; 0xf8
   23714:	lsr	lr, r6, #1
   23718:	eor	r8, r8, r2
   2371c:	eor	r9, r9, r3
   23720:	mov	r2, r8
   23724:	mov	r3, r9
   23728:	ldrd	r8, [sp, #152]	; 0x98
   2372c:	lsr	r6, r6, #8
   23730:	and	r8, r8, r4
   23734:	and	r9, r9, r5
   23738:	mov	r4, r8
   2373c:	mov	r5, r9
   23740:	ldrd	r8, [sp, #16]
   23744:	orr	ip, ip, r9, lsl #13
   23748:	str	ip, [sp, #2136]	; 0x858
   2374c:	lsl	ip, r9, #3
   23750:	orr	ip, ip, r8, lsr #29
   23754:	str	ip, [sp, #2148]	; 0x864
   23758:	ldr	ip, [sp, #24]
   2375c:	adds	r8, r0, r2
   23760:	lsr	r7, r9, #19
   23764:	lsr	ip, ip, #7
   23768:	str	ip, [sp, #256]	; 0x100
   2376c:	ldr	ip, [sp, #28]
   23770:	orr	ip, lr, ip, lsl #31
   23774:	str	ip, [sp, #2152]	; 0x868
   23778:	ldr	ip, [sp, #28]
   2377c:	lsr	lr, ip, #1
   23780:	orr	ip, r6, ip, lsl #24
   23784:	ldr	r6, [sp, #248]	; 0xf8
   23788:	str	ip, [sp, #2160]	; 0x870
   2378c:	orr	r9, r6, r9, lsl #26
   23790:	str	r9, [sp, #248]	; 0xf8
   23794:	adc	r9, r1, r3
   23798:	add	r1, sp, #2112	; 0x840
   2379c:	add	r3, sp, #2112	; 0x840
   237a0:	add	r1, r1, #8
   237a4:	ldrd	r2, [r3]
   237a8:	ldrd	r0, [r1]
   237ac:	ldr	ip, [sp, #28]
   237b0:	str	lr, [sp, #40]	; 0x28
   237b4:	eor	r3, r3, r1
   237b8:	add	r1, sp, #2128	; 0x850
   237bc:	eor	r2, r2, r0
   237c0:	ldrd	r0, [r1]
   237c4:	lsr	ip, ip, #8
   237c8:	str	ip, [sp, #96]	; 0x60
   237cc:	eor	r1, r1, r3
   237d0:	mov	r3, r1
   237d4:	ldr	r1, [sp, #16]
   237d8:	eor	r0, r0, r2
   237dc:	mov	r2, r0
   237e0:	orr	r7, r7, r1, lsl #13
   237e4:	ldrd	r0, [sp, #200]	; 0xc8
   237e8:	str	r7, [sp, #2140]	; 0x85c
   237ec:	ldrd	r6, [sp, #16]
   237f0:	and	r1, r1, fp
   237f4:	orr	r5, r5, r1
   237f8:	lsl	r1, r6, #3
   237fc:	and	r0, r0, sl
   23800:	orr	r1, r1, r7, lsr #29
   23804:	str	r1, [sp, #2144]	; 0x860
   23808:	orr	r4, r4, r0
   2380c:	ldrd	r0, [sp, #24]
   23810:	ldr	ip, [sp, #256]	; 0x100
   23814:	ldr	lr, [sp, #40]	; 0x28
   23818:	orr	ip, ip, r1, lsl #25
   2381c:	str	ip, [sp, #256]	; 0x100
   23820:	orr	ip, lr, r0, lsl #31
   23824:	ldr	r1, [sp, #96]	; 0x60
   23828:	str	ip, [sp, #2156]	; 0x86c
   2382c:	mov	ip, r0
   23830:	orr	ip, r1, ip, lsl #24
   23834:	ldrd	r0, [sp, #208]	; 0xd0
   23838:	str	ip, [sp, #2164]	; 0x874
   2383c:	lsr	ip, r7, #6
   23840:	adds	r0, r0, r8
   23844:	adc	r1, r1, r9
   23848:	adds	r4, r4, r2
   2384c:	adc	r5, r5, r3
   23850:	add	r3, sp, #2128	; 0x850
   23854:	strd	r0, [sp, #192]	; 0xc0
   23858:	add	r3, r3, #8
   2385c:	add	r1, sp, #2144	; 0x860
   23860:	str	ip, [sp, #252]	; 0xfc
   23864:	ldr	ip, [sp, #28]
   23868:	ldrd	r6, [r1]
   2386c:	ldrd	r2, [r3]
   23870:	lsr	ip, ip, #7
   23874:	str	ip, [sp, #260]	; 0x104
   23878:	eor	r2, r2, r6
   2387c:	ldrd	r0, [sp, #120]	; 0x78
   23880:	eor	r3, r3, r7
   23884:	ldrd	r6, [sp, #64]	; 0x40
   23888:	adds	r6, r6, r0
   2388c:	adc	r7, r7, r1
   23890:	adds	r0, r8, r4
   23894:	adc	r1, r9, r5
   23898:	ldrd	r4, [sp, #248]	; 0xf8
   2389c:	strd	r0, [sp, #104]	; 0x68
   238a0:	add	r1, sp, #2160	; 0x870
   238a4:	eor	r5, r5, r3
   238a8:	add	r3, sp, #2144	; 0x860
   238ac:	add	r3, r3, #8
   238b0:	ldrd	r0, [r1]
   238b4:	eor	r4, r4, r2
   238b8:	ldrd	r2, [r3]
   238bc:	ldrd	r8, [sp, #192]	; 0xc0
   238c0:	adds	r4, r4, r6
   238c4:	eor	r3, r3, r1
   238c8:	mov	r1, r3
   238cc:	add	r3, sp, #256	; 0x100
   238d0:	eor	r2, r2, r0
   238d4:	mov	r0, r2
   238d8:	ldrd	r2, [r3]
   238dc:	lsr	ip, r8, #14
   238e0:	lsr	lr, r8, #18
   238e4:	eor	r3, r3, r1
   238e8:	mov	r1, r3
   238ec:	eor	r2, r2, r0
   238f0:	orr	r3, ip, r9, lsl #18
   238f4:	adc	r5, r5, r7
   238f8:	str	r3, [sp, #2168]	; 0x878
   238fc:	adds	r2, r4, r2
   23900:	orr	r3, lr, r9, lsl #14
   23904:	mov	r0, r8
   23908:	lsr	r6, r9, #14
   2390c:	str	r3, [sp, #2176]	; 0x880
   23910:	lsr	lr, r9, #18
   23914:	adc	r3, r5, r1
   23918:	mov	r1, r9
   2391c:	lsl	r5, r9, #23
   23920:	ldrd	r8, [sp, #104]	; 0x68
   23924:	orr	r7, r6, r0, lsl #18
   23928:	str	r7, [sp, #2172]	; 0x87c
   2392c:	lsr	r4, r8, #28
   23930:	ldrd	r6, [sp, #216]	; 0xd8
   23934:	mov	r8, r0
   23938:	orr	lr, lr, r0, lsl #14
   2393c:	lsl	ip, r9, #30
   23940:	mov	r9, r1
   23944:	ldrd	r0, [sp, #112]	; 0x70
   23948:	strd	r6, [sp, #40]	; 0x28
   2394c:	str	lr, [sp, #2180]	; 0x884
   23950:	eor	r0, r0, r6
   23954:	eor	r1, r1, r7
   23958:	ldrd	r6, [sp, #104]	; 0x68
   2395c:	orr	lr, r5, r8, lsr #9
   23960:	strd	r2, [sp, #64]	; 0x40
   23964:	orr	r5, r4, r7, lsl #4
   23968:	str	r5, [sp, #2192]	; 0x890
   2396c:	mov	r5, r7
   23970:	orr	ip, ip, r6, lsr #2
   23974:	mov	r4, r6
   23978:	mov	r6, r4
   2397c:	b	23990 <__assert_fail@plt+0x126a4>
   23980:			; <UNDEFINED> instruction: 0x9ef14ad2
   23984:	ldr	r6, [fp], #2497	; 0x9c1
   23988:	stmdacc	pc, {r0, r1, r5, r6, r7, r8, sl, sp}^	; <UNPREDICTABLE>
   2398c:	svc	0x00be4786
   23990:	mov	r7, r5
   23994:	str	ip, [sp, #2204]	; 0x89c
   23998:	lsr	ip, r5, #28
   2399c:	sub	r5, pc, #28
   239a0:	ldrd	r4, [r5]
   239a4:	orr	ip, ip, r6, lsl #4
   239a8:	str	lr, [sp, #2188]	; 0x88c
   239ac:	adds	r4, r4, r2
   239b0:	adc	r5, r5, r3
   239b4:	mov	r2, r4
   239b8:	mov	r4, r8
   239bc:	mov	r3, r5
   239c0:	and	r4, r4, r0
   239c4:	mov	r5, r9
   239c8:	mov	r0, r4
   239cc:	lsl	lr, r8, #23
   239d0:	lsl	r4, r6, #30
   239d4:	and	r5, r5, r1
   239d8:	mov	r1, r5
   239dc:	orr	lr, lr, r9, lsr #9
   239e0:	str	ip, [sp, #2196]	; 0x894
   239e4:	orr	ip, r4, r7, lsr #2
   239e8:	ldrd	r4, [sp, #144]	; 0x90
   239ec:	str	lr, [sp, #2184]	; 0x888
   239f0:	lsl	lr, r7, #25
   239f4:	str	ip, [sp, #2200]	; 0x898
   239f8:	orr	ip, lr, r6, lsr #7
   239fc:	add	lr, sp, #2160	; 0x870
   23a00:	mov	r9, r7
   23a04:	adds	r4, r4, r2
   23a08:	mov	r8, r6
   23a0c:	str	ip, [sp, #2212]	; 0x8a4
   23a10:	add	lr, lr, #8
   23a14:	lsl	ip, r6, #25
   23a18:	ldrd	r6, [sp, #40]	; 0x28
   23a1c:	adc	r5, r5, r3
   23a20:	mov	r2, r4
   23a24:	mov	r3, r5
   23a28:	ldrd	r4, [lr]
   23a2c:	add	lr, sp, #2176	; 0x880
   23a30:	eor	r6, r6, r0
   23a34:	eor	r7, r7, r1
   23a38:	mov	r0, r6
   23a3c:	mov	r1, r7
   23a40:	ldrd	r6, [lr]
   23a44:	eor	r4, r4, r6
   23a48:	eor	r5, r5, r7
   23a4c:	mov	r7, r9
   23a50:	adds	r6, r2, r0
   23a54:	strd	r4, [sp, #96]	; 0x60
   23a58:	orr	r4, r8, sl
   23a5c:	orr	r5, r9, fp
   23a60:	ldrd	r8, [sp, #184]	; 0xb8
   23a64:	orr	ip, ip, r7, lsr #7
   23a68:	adc	r7, r3, r1
   23a6c:	add	r3, sp, #2176	; 0x880
   23a70:	add	r3, r3, #8
   23a74:	lsr	lr, r8, #7
   23a78:	str	lr, [sp, #264]	; 0x108
   23a7c:	str	ip, [sp, #2208]	; 0x8a0
   23a80:	ldrd	r2, [r3]
   23a84:	ldrd	r0, [sp, #96]	; 0x60
   23a88:	strd	r6, [sp, #40]	; 0x28
   23a8c:	lsr	ip, r8, #1
   23a90:	eor	r1, r1, r3
   23a94:	mov	r7, r1
   23a98:	add	r1, sp, #2192	; 0x890
   23a9c:	add	r3, sp, #2192	; 0x890
   23aa0:	add	r1, r1, #8
   23aa4:	eor	r0, r0, r2
   23aa8:	mov	r6, r0
   23aac:	ldrd	r2, [r3]
   23ab0:	ldrd	r0, [r1]
   23ab4:	eor	r2, r2, r0
   23ab8:	eor	r3, r3, r1
   23abc:	ldrd	r0, [sp, #40]	; 0x28
   23ac0:	strd	r2, [sp, #96]	; 0x60
   23ac4:	ldrd	r2, [sp, #200]	; 0xc8
   23ac8:	adds	r0, r0, r6
   23acc:	adc	r1, r1, r7
   23ad0:	and	r3, r3, r5
   23ad4:	mov	r5, r3
   23ad8:	orr	r3, ip, r9, lsl #31
   23adc:	lsr	ip, r8, #8
   23ae0:	str	r3, [sp, #2216]	; 0x8a8
   23ae4:	orr	r3, ip, r9, lsl #24
   23ae8:	str	r3, [sp, #2224]	; 0x8b0
   23aec:	ldr	r3, [sp, #264]	; 0x108
   23af0:	strd	r0, [sp, #40]	; 0x28
   23af4:	orr	r3, r3, r9, lsl #25
   23af8:	str	r3, [sp, #264]	; 0x108
   23afc:	ldr	r3, [sp, #136]	; 0x88
   23b00:	add	r1, sp, #2208	; 0x8a0
   23b04:	and	r2, r2, r4
   23b08:	lsr	r3, r3, #6
   23b0c:	ldrd	r0, [r1]
   23b10:	str	r3, [sp, #272]	; 0x110
   23b14:	ldrd	r6, [sp, #96]	; 0x60
   23b18:	mov	r4, r2
   23b1c:	ldrd	r2, [sp, #104]	; 0x68
   23b20:	eor	r6, r6, r0
   23b24:	eor	r7, r7, r1
   23b28:	and	r2, r2, sl
   23b2c:	and	r3, r3, fp
   23b30:	mov	r0, r6
   23b34:	mov	r1, r7
   23b38:	orr	r6, r4, r2
   23b3c:	orr	r7, r5, r3
   23b40:	ldrd	r4, [sp, #136]	; 0x88
   23b44:	lsr	ip, r9, #1
   23b48:	orr	ip, ip, r8, lsl #31
   23b4c:	lsr	r2, r4, #19
   23b50:	str	ip, [sp, #2220]	; 0x8ac
   23b54:	lsr	r3, r9, #8
   23b58:	orr	ip, r2, r5, lsl #13
   23b5c:	orr	r3, r3, r8, lsl #24
   23b60:	str	ip, [sp, #2232]	; 0x8b8
   23b64:	lsr	ip, r9, #7
   23b68:	str	r3, [sp, #2228]	; 0x8b4
   23b6c:	str	ip, [sp, #268]	; 0x10c
   23b70:	lsl	r3, r5, #3
   23b74:	ldr	ip, [sp, #272]	; 0x110
   23b78:	orr	r3, r3, r4, lsr #29
   23b7c:	mov	r9, r5
   23b80:	strd	r0, [sp, #96]	; 0x60
   23b84:	lsr	r2, r5, #19
   23b88:	mov	r8, r4
   23b8c:	orr	ip, ip, r5, lsl #26
   23b90:	ldrd	r0, [sp, #40]	; 0x28
   23b94:	str	r3, [sp, #2244]	; 0x8c4
   23b98:	lsl	r3, r4, #3
   23b9c:	ldrd	r4, [sp, #152]	; 0x98
   23ba0:	str	ip, [sp, #272]	; 0x110
   23ba4:	add	ip, sp, #2224	; 0x8b0
   23ba8:	adds	r0, r0, r4
   23bac:	adc	r1, r1, r5
   23bb0:	mov	r4, r0
   23bb4:	mov	r5, r1
   23bb8:	ldrd	r0, [sp, #96]	; 0x60
   23bbc:	strd	r4, [sp, #144]	; 0x90
   23bc0:	orr	r3, r3, r9, lsr #29
   23bc4:	adds	r0, r0, r6
   23bc8:	adc	r1, r1, r7
   23bcc:	mov	r7, r1
   23bd0:	add	r1, sp, #2208	; 0x8a0
   23bd4:	add	r1, r1, #8
   23bd8:	mov	r6, r0
   23bdc:	ldrd	r0, [r1]
   23be0:	ldrd	r4, [ip]
   23be4:	str	r3, [sp, #2240]	; 0x8c0
   23be8:	lsr	r3, r9, #6
   23bec:	eor	r0, r0, r4
   23bf0:	eor	r1, r1, r5
   23bf4:	orr	ip, r2, r8, lsl #13
   23bf8:	mov	r4, r0
   23bfc:	mov	r5, r1
   23c00:	str	r3, [sp, #276]	; 0x114
   23c04:	ldrd	r0, [sp, #160]	; 0xa0
   23c08:	ldrd	r2, [sp, #24]
   23c0c:	str	ip, [sp, #2236]	; 0x8bc
   23c10:	adds	r2, r2, r0
   23c14:	adc	r3, r3, r1
   23c18:	mov	r8, r2
   23c1c:	mov	r9, r3
   23c20:	ldrd	r2, [sp, #40]	; 0x28
   23c24:	adds	r2, r2, r6
   23c28:	adc	r3, r3, r7
   23c2c:	ldrd	r6, [sp, #144]	; 0x90
   23c30:	strd	r2, [sp, #24]
   23c34:	add	r3, sp, #264	; 0x108
   23c38:	lsr	ip, r6, #14
   23c3c:	ldrd	r2, [r3]
   23c40:	lsr	lr, r6, #18
   23c44:	eor	r3, r3, r5
   23c48:	mov	r5, r3
   23c4c:	add	r3, sp, #2224	; 0x8b0
   23c50:	add	r3, r3, #8
   23c54:	ldrd	r0, [r3]
   23c58:	add	r3, sp, #2240	; 0x8c0
   23c5c:	eor	r2, r2, r4
   23c60:	mov	r4, r2
   23c64:	ldrd	r2, [r3]
   23c68:	eor	r0, r0, r2
   23c6c:	adds	r2, r8, r4
   23c70:	eor	r1, r1, r3
   23c74:	adc	r3, r9, r5
   23c78:	mov	r5, r3
   23c7c:	add	r3, sp, #272	; 0x110
   23c80:	mov	r4, r2
   23c84:	ldrd	r2, [r3]
   23c88:	mov	r8, r6
   23c8c:	lsr	r6, r7, #14
   23c90:	eor	r3, r3, r1
   23c94:	mov	r1, r3
   23c98:	eor	r2, r2, r0
   23c9c:	orr	r3, ip, r7, lsl #18
   23ca0:	adds	r2, r4, r2
   23ca4:	str	r3, [sp, #2248]	; 0x8c8
   23ca8:	orr	r3, lr, r7, lsl #14
   23cac:	str	r3, [sp, #2256]	; 0x8d0
   23cb0:	adc	r3, r5, r1
   23cb4:	ldrd	r0, [sp, #24]
   23cb8:	strd	r2, [sp, #96]	; 0x60
   23cbc:	lsr	lr, r7, #18
   23cc0:	orr	r3, r6, r8, lsl #18
   23cc4:	str	r3, [sp, #2252]	; 0x8cc
   23cc8:	orr	r3, lr, r8, lsl #14
   23ccc:	lsr	r4, r0, #28
   23cd0:	lsl	ip, r1, #30
   23cd4:	str	r3, [sp, #2260]	; 0x8d4
   23cd8:	ldrd	r0, [sp, #112]	; 0x70
   23cdc:	ldrd	r2, [sp, #192]	; 0xc0
   23ce0:	mov	r9, r7
   23ce4:	lsl	r5, r7, #23
   23ce8:	ldrd	r6, [sp, #24]
   23cec:	eor	r1, r1, r3
   23cf0:	orr	r3, r5, r8, lsr #9
   23cf4:	str	r3, [sp, #2268]	; 0x8dc
   23cf8:	orr	r3, r4, r7, lsl #4
   23cfc:	str	r3, [sp, #2272]	; 0x8e0
   23d00:	orr	r3, ip, r6, lsr #2
   23d04:	eor	r0, r0, r2
   23d08:	mov	r4, r6
   23d0c:	mov	r5, r7
   23d10:	str	r3, [sp, #2284]	; 0x8ec
   23d14:	lsr	ip, r7, #28
   23d18:	ldrd	r2, [sp, #96]	; 0x60
   23d1c:	add	r7, pc, #860	; 0x35c
   23d20:	ldrd	r6, [r7]
   23d24:	lsl	lr, r8, #23
   23d28:	orr	lr, lr, r9, lsr #9
   23d2c:	adds	r6, r6, r2
   23d30:	adc	r7, r7, r3
   23d34:	mov	r2, r6
   23d38:	mov	r6, r8
   23d3c:	mov	r3, r7
   23d40:	and	r6, r6, r0
   23d44:	mov	r7, r9
   23d48:	mov	r0, r6
   23d4c:	and	r7, r7, r1
   23d50:	mov	r6, r4
   23d54:	mov	r1, r7
   23d58:	mov	r7, r5
   23d5c:	orr	ip, ip, r6, lsl #4
   23d60:	lsl	r4, r4, #30
   23d64:	str	lr, [sp, #2264]	; 0x8d8
   23d68:	str	ip, [sp, #2276]	; 0x8e4
   23d6c:	lsl	lr, r7, #25
   23d70:	orr	ip, r4, r7, lsr #2
   23d74:	str	ip, [sp, #2280]	; 0x8e8
   23d78:	orr	ip, lr, r6, lsr #7
   23d7c:	mov	r8, r6
   23d80:	mov	r9, r7
   23d84:	str	ip, [sp, #2292]	; 0x8f4
   23d88:	lsl	ip, r6, #25
   23d8c:	ldrd	r6, [sp, #216]	; 0xd8
   23d90:	add	lr, sp, #2240	; 0x8c0
   23d94:	add	lr, lr, #8
   23d98:	adds	r6, r6, r2
   23d9c:	adc	r7, r7, r3
   23da0:	mov	r2, r6
   23da4:	mov	r3, r7
   23da8:	ldrd	r6, [sp, #112]	; 0x70
   23dac:	eor	r6, r6, r0
   23db0:	eor	r7, r7, r1
   23db4:	mov	r0, r6
   23db8:	mov	r1, r7
   23dbc:	ldrd	r6, [lr]
   23dc0:	add	lr, sp, #2256	; 0x8d0
   23dc4:	adds	r2, r2, r0
   23dc8:	ldrd	r4, [lr]
   23dcc:	adc	r3, r3, r1
   23dd0:	add	r1, sp, #2256	; 0x8d0
   23dd4:	eor	r6, r6, r4
   23dd8:	eor	r7, r7, r5
   23ddc:	mov	r4, r8
   23de0:	mov	r5, r9
   23de4:	ldrd	r8, [sp, #104]	; 0x68
   23de8:	add	r1, r1, #8
   23dec:	orr	r8, r8, r4
   23df0:	orr	r9, r9, r5
   23df4:	mov	r4, r8
   23df8:	mov	r5, r9
   23dfc:	ldrd	r8, [sp, #72]	; 0x48
   23e00:	ldrd	r0, [r1]
   23e04:	and	r4, r4, sl
   23e08:	lsr	lr, r8, #7
   23e0c:	str	lr, [sp, #280]	; 0x118
   23e10:	ldr	lr, [sp, #28]
   23e14:	eor	r1, r1, r7
   23e18:	mov	r7, r1
   23e1c:	orr	ip, ip, lr, lsr #7
   23e20:	add	lr, sp, #2272	; 0x8e0
   23e24:	add	lr, lr, #8
   23e28:	add	r1, sp, #2272	; 0x8e0
   23e2c:	eor	r0, r0, r6
   23e30:	str	ip, [sp, #2288]	; 0x8f0
   23e34:	mov	r6, r0
   23e38:	lsr	ip, r8, #1
   23e3c:	ldrd	r0, [r1]
   23e40:	ldrd	r8, [lr]
   23e44:	ldr	lr, [sp, #280]	; 0x118
   23e48:	adds	r6, r6, r2
   23e4c:	eor	r0, r0, r8
   23e50:	eor	r1, r1, r9
   23e54:	ldrd	r8, [sp, #72]	; 0x48
   23e58:	adc	r7, r7, r3
   23e5c:	ldrd	r2, [sp, #24]
   23e60:	orr	ip, ip, r9, lsl #31
   23e64:	str	ip, [sp, #2296]	; 0x8f8
   23e68:	lsr	ip, r8, #8
   23e6c:	orr	ip, ip, r9, lsl #24
   23e70:	orr	lr, lr, r9, lsl #25
   23e74:	str	ip, [sp, #2304]	; 0x900
   23e78:	lsr	ip, r9, #1
   23e7c:	ldrd	r8, [sp, #104]	; 0x68
   23e80:	and	r5, r5, fp
   23e84:	str	lr, [sp, #280]	; 0x118
   23e88:	and	r9, r9, r3
   23e8c:	add	r3, sp, #2288	; 0x8f0
   23e90:	and	r8, r8, r2
   23e94:	ldrd	r2, [r3]
   23e98:	ldr	lr, [sp, #64]	; 0x40
   23e9c:	eor	r2, r2, r0
   23ea0:	eor	r3, r3, r1
   23ea4:	mov	r0, r2
   23ea8:	mov	r1, r3
   23eac:	orr	r2, r4, r8
   23eb0:	orr	r3, r5, r9
   23eb4:	ldrd	r4, [sp, #64]	; 0x40
   23eb8:	ldrd	r8, [sp, #72]	; 0x48
   23ebc:	strd	r2, [sp, #40]	; 0x28
   23ec0:	lsr	r2, r4, #19
   23ec4:	orr	ip, ip, r8, lsl #31
   23ec8:	lsr	lr, lr, #6
   23ecc:	lsr	r3, r9, #8
   23ed0:	str	ip, [sp, #2300]	; 0x8fc
   23ed4:	orr	ip, r2, r5, lsl #13
   23ed8:	str	lr, [sp, #288]	; 0x120
   23edc:	orr	r3, r3, r8, lsl #24
   23ee0:	str	ip, [sp, #2312]	; 0x908
   23ee4:	lsr	ip, r9, #7
   23ee8:	str	r3, [sp, #2308]	; 0x904
   23eec:	str	ip, [sp, #284]	; 0x11c
   23ef0:	lsl	r3, r5, #3
   23ef4:	ldr	ip, [sp, #288]	; 0x120
   23ef8:	orr	r3, r3, r4, lsr #29
   23efc:	lsr	r2, r5, #19
   23f00:	orr	ip, ip, r5, lsl #26
   23f04:	str	r3, [sp, #2324]	; 0x914
   23f08:	lsl	r3, r4, #3
   23f0c:	ldrd	r4, [sp, #200]	; 0xc8
   23f10:	str	ip, [sp, #288]	; 0x120
   23f14:	add	ip, sp, #2304	; 0x900
   23f18:	adds	r4, r4, r6
   23f1c:	adc	r5, r5, r7
   23f20:	strd	r4, [sp, #208]	; 0xd0
   23f24:	ldrd	r4, [sp, #40]	; 0x28
   23f28:	ldrd	r8, [ip]
   23f2c:	adds	r4, r4, r0
   23f30:	adc	r5, r5, r1
   23f34:	add	r1, sp, #2288	; 0x8f0
   23f38:	add	r1, r1, #8
   23f3c:	strd	r4, [sp, #40]	; 0x28
   23f40:	ldrd	r0, [r1]
   23f44:	eor	r0, r0, r8
   23f48:	eor	r1, r1, r9
   23f4c:	ldrd	r8, [sp, #64]	; 0x40
   23f50:	mov	r4, r0
   23f54:	mov	r5, r1
   23f58:	orr	r3, r3, r9, lsr #29
   23f5c:	str	r3, [sp, #2320]	; 0x910
   23f60:	lsr	r3, r9, #6
   23f64:	orr	ip, r2, r8, lsl #13
   23f68:	ldrd	r0, [sp, #168]	; 0xa8
   23f6c:	str	r3, [sp, #292]	; 0x124
   23f70:	ldrd	r2, [sp, #184]	; 0xb8
   23f74:	str	ip, [sp, #2316]	; 0x90c
   23f78:	adds	r2, r2, r0
   23f7c:	adc	r3, r3, r1
   23f80:	ldrd	r0, [sp, #40]	; 0x28
   23f84:	strd	r2, [sp, #152]	; 0x98
   23f88:	adds	r0, r0, r6
   23f8c:	adc	r1, r1, r7
   23f90:	mov	r2, r0
   23f94:	mov	r3, r1
   23f98:	ldrd	r6, [sp, #208]	; 0xd0
   23f9c:	strd	r2, [sp, #40]	; 0x28
   23fa0:	add	r3, sp, #280	; 0x118
   23fa4:	lsr	lr, r6, #18
   23fa8:	ldrd	r2, [r3]
   23fac:	lsr	ip, r6, #14
   23fb0:	orr	ip, ip, r7, lsl #18
   23fb4:	eor	r3, r3, r5
   23fb8:	mov	r5, r3
   23fbc:	add	r3, sp, #2304	; 0x900
   23fc0:	add	r3, r3, #8
   23fc4:	ldrd	r0, [r3]
   23fc8:	add	r3, sp, #2320	; 0x910
   23fcc:	eor	r2, r2, r4
   23fd0:	ldrd	r8, [r3]
   23fd4:	mov	r4, r2
   23fd8:	str	ip, [sp, #2328]	; 0x918
   23fdc:	eor	r0, r0, r8
   23fe0:	eor	r1, r1, r9
   23fe4:	mov	r8, r0
   23fe8:	mov	r9, r1
   23fec:	ldrd	r0, [sp, #152]	; 0x98
   23ff0:	orr	ip, lr, r7, lsl #14
   23ff4:	lsr	lr, r7, #18
   23ff8:	adds	r0, r0, r4
   23ffc:	adc	r1, r1, r5
   24000:	mov	r5, r1
   24004:	add	r1, sp, #288	; 0x120
   24008:	mov	r4, r0
   2400c:	ldrd	r0, [r1]
   24010:	str	ip, [sp, #2336]	; 0x920
   24014:	add	r3, pc, #108	; 0x6c
   24018:	ldrd	r2, [r3]
   2401c:	eor	r0, r0, r8
   24020:	mov	r8, r6
   24024:	lsr	r6, r7, #14
   24028:	eor	r1, r1, r9
   2402c:	str	r6, [sp, #152]	; 0x98
   24030:	adds	r6, r4, r0
   24034:	mov	r9, r7
   24038:	adc	r7, r5, r1
   2403c:	mov	r0, r8
   24040:	strd	r6, [sp, #184]	; 0xb8
   24044:	mov	r1, r9
   24048:	lsl	r5, r9, #23
   2404c:	ldr	r6, [sp, #152]	; 0x98
   24050:	ldrd	r8, [sp, #40]	; 0x28
   24054:	orr	r7, r6, r0, lsl #18
   24058:	orr	lr, lr, r0, lsl #14
   2405c:	lsr	r4, r8, #28
   24060:	lsl	ip, r9, #30
   24064:	mov	r8, r0
   24068:	mov	r9, r1
   2406c:	str	r7, [sp, #2332]	; 0x91c
   24070:	ldrd	r0, [sp, #144]	; 0x90
   24074:	ldrd	r6, [sp, #192]	; 0xc0
   24078:	b	24090 <__assert_fail@plt+0x12da4>
   2407c:	nop			; (mov r0, r0)
   24080:	blhi	fe35975c <optarg@@GLIBC_2.4+0xfe3075b4>
   24084:	svceq	0x00c19dc6
   24088:	strvc	r9, [ip, r5, ror #24]!
   2408c:	strcs	sl, [ip], #-460	; 0xfffffe34
   24090:	str	lr, [sp, #2340]	; 0x924
   24094:	orr	lr, r5, r8, lsr #9
   24098:	eor	r0, r0, r6
   2409c:	eor	r1, r1, r7
   240a0:	mov	r6, r8
   240a4:	mov	r7, r9
   240a8:	str	lr, [sp, #2348]	; 0x92c
   240ac:	lsl	lr, r8, #23
   240b0:	ldrd	r8, [sp, #40]	; 0x28
   240b4:	orr	lr, lr, r7, lsr #9
   240b8:	orr	r5, r4, r9, lsl #4
   240bc:	str	r5, [sp, #2352]	; 0x930
   240c0:	mov	r5, r9
   240c4:	orr	ip, ip, r8, lsr #2
   240c8:	mov	r4, r8
   240cc:	str	ip, [sp, #2364]	; 0x93c
   240d0:	mov	r8, r4
   240d4:	mov	r9, r5
   240d8:	lsr	ip, r5, #28
   240dc:	ldrd	r4, [sp, #184]	; 0xb8
   240e0:	orr	ip, ip, r8, lsl #4
   240e4:	str	lr, [sp, #2344]	; 0x928
   240e8:	adds	r4, r4, r2
   240ec:	adc	r5, r5, r3
   240f0:	mov	r2, r4
   240f4:	mov	r3, r5
   240f8:	mov	r4, r6
   240fc:	mov	r5, r7
   24100:	ldrd	r6, [sp, #112]	; 0x70
   24104:	and	r4, r4, r0
   24108:	mov	r0, r4
   2410c:	adds	r6, r6, r2
   24110:	lsl	r4, r8, #30
   24114:	adc	r7, r7, r3
   24118:	lsl	lr, r9, #25
   2411c:	str	ip, [sp, #2356]	; 0x934
   24120:	add	r3, sp, #2320	; 0x910
   24124:	orr	ip, r4, r9, lsr #2
   24128:	str	ip, [sp, #2360]	; 0x938
   2412c:	add	r3, r3, #8
   24130:	orr	ip, lr, r8, lsr #7
   24134:	add	lr, sp, #2336	; 0x920
   24138:	strd	r6, [sp, #112]	; 0x70
   2413c:	str	ip, [sp, #2372]	; 0x944
   24140:	ldrd	r6, [sp, #192]	; 0xc0
   24144:	lsl	ip, r8, #25
   24148:	ldrd	r2, [r3]
   2414c:	ldrd	r8, [lr]
   24150:	and	r5, r5, r1
   24154:	mov	r1, r5
   24158:	eor	r2, r2, r8
   2415c:	eor	r3, r3, r9
   24160:	eor	r6, r6, r0
   24164:	eor	r7, r7, r1
   24168:	mov	r0, r6
   2416c:	mov	r1, r7
   24170:	mov	r6, r2
   24174:	mov	r7, r3
   24178:	ldrd	r4, [sp, #24]
   2417c:	ldrd	r2, [sp, #40]	; 0x28
   24180:	ldrd	r8, [sp, #80]	; 0x50
   24184:	orr	r5, r5, r3
   24188:	orr	r3, ip, r3, lsr #7
   2418c:	orr	r4, r4, r2
   24190:	str	r3, [sp, #2368]	; 0x940
   24194:	ldrd	r2, [sp, #112]	; 0x70
   24198:	lsr	lr, r8, #7
   2419c:	str	lr, [sp, #296]	; 0x128
   241a0:	adds	r2, r2, r0
   241a4:	adc	r3, r3, r1
   241a8:	add	r1, sp, #2336	; 0x920
   241ac:	add	r1, r1, #8
   241b0:	add	lr, sp, #2352	; 0x930
   241b4:	ldrd	r0, [r1]
   241b8:	add	lr, lr, #8
   241bc:	lsr	ip, r8, #1
   241c0:	eor	r1, r1, r7
   241c4:	mov	r7, r1
   241c8:	add	r1, sp, #2352	; 0x930
   241cc:	eor	r0, r0, r6
   241d0:	ldrd	r8, [lr]
   241d4:	mov	r6, r0
   241d8:	ldrd	r0, [r1]
   241dc:	ldr	lr, [sp, #296]	; 0x128
   241e0:	eor	r0, r0, r8
   241e4:	eor	r1, r1, r9
   241e8:	ldrd	r8, [sp, #96]	; 0x60
   241ec:	strd	r0, [sp, #152]	; 0x98
   241f0:	ldrd	r0, [sp, #104]	; 0x68
   241f4:	and	r0, r0, r4
   241f8:	and	r1, r1, r5
   241fc:	mov	r4, r0
   24200:	mov	r5, r1
   24204:	ldrd	r0, [sp, #80]	; 0x50
   24208:	orr	ip, ip, r1, lsl #31
   2420c:	str	ip, [sp, #2376]	; 0x948
   24210:	lsr	ip, r0, #8
   24214:	orr	ip, ip, r1, lsl #24
   24218:	adds	r0, r6, r2
   2421c:	orr	lr, lr, r1, lsl #25
   24220:	str	ip, [sp, #2384]	; 0x950
   24224:	lsr	ip, r1, #1
   24228:	adc	r1, r7, r3
   2422c:	ldrd	r2, [sp, #24]
   24230:	strd	r0, [sp, #112]	; 0x70
   24234:	ldrd	r0, [sp, #40]	; 0x28
   24238:	str	lr, [sp, #296]	; 0x128
   2423c:	lsr	lr, r8, #6
   24240:	and	r3, r3, r1
   24244:	add	r1, sp, #2368	; 0x940
   24248:	and	r2, r2, r0
   2424c:	str	lr, [sp, #304]	; 0x130
   24250:	ldrd	r0, [r1]
   24254:	ldrd	r6, [sp, #152]	; 0x98
   24258:	eor	r6, r6, r0
   2425c:	eor	r7, r7, r1
   24260:	mov	r0, r6
   24264:	mov	r1, r7
   24268:	orr	r6, r4, r2
   2426c:	orr	r7, r5, r3
   24270:	ldrd	r4, [sp, #80]	; 0x50
   24274:	lsr	r2, r8, #19
   24278:	orr	ip, ip, r4, lsl #31
   2427c:	str	ip, [sp, #2380]	; 0x94c
   24280:	lsr	r3, r5, #8
   24284:	orr	ip, r2, r9, lsl #13
   24288:	orr	r3, r3, r4, lsl #24
   2428c:	str	ip, [sp, #2392]	; 0x958
   24290:	lsr	ip, r5, #7
   24294:	ldrd	r4, [sp, #112]	; 0x70
   24298:	str	ip, [sp, #300]	; 0x12c
   2429c:	ldr	ip, [sp, #304]	; 0x130
   242a0:	adds	r4, r4, sl
   242a4:	adc	r5, r5, fp
   242a8:	orr	ip, ip, r9, lsl #26
   242ac:	strd	r4, [sp, #216]	; 0xd8
   242b0:	adds	r4, r6, r0
   242b4:	adc	r5, r7, r1
   242b8:	str	r3, [sp, #2388]	; 0x954
   242bc:	str	ip, [sp, #304]	; 0x130
   242c0:	mov	r0, r4
   242c4:	mov	r1, r5
   242c8:	lsl	r3, r9, #3
   242cc:	ldrd	r4, [sp, #96]	; 0x60
   242d0:	add	ip, sp, #2368	; 0x940
   242d4:	orr	r3, r3, r8, lsr #29
   242d8:	add	ip, ip, #8
   242dc:	str	r3, [sp, #2404]	; 0x964
   242e0:	lsl	r3, r8, #3
   242e4:	ldrd	sl, [ip]
   242e8:	orr	r3, r3, r5, lsr #29
   242ec:	add	ip, sp, #2384	; 0x950
   242f0:	lsr	r2, r9, #19
   242f4:	str	r3, [sp, #2400]	; 0x960
   242f8:	lsr	r3, r5, #6
   242fc:	ldrd	r8, [ip]
   24300:	str	r3, [sp, #308]	; 0x134
   24304:	orr	ip, r2, r4, lsl #13
   24308:	ldrd	r4, [sp, #88]	; 0x58
   2430c:	ldrd	r2, [sp, #72]	; 0x48
   24310:	eor	fp, fp, r9
   24314:	eor	sl, sl, r8
   24318:	adds	r2, r2, r4
   2431c:	adc	r3, r3, r5
   24320:	str	ip, [sp, #2396]	; 0x95c
   24324:	strd	r2, [sp, #72]	; 0x48
   24328:	ldrd	r2, [sp, #112]	; 0x70
   2432c:	add	ip, sp, #304	; 0x130
   24330:	adds	r2, r2, r0
   24334:	adc	r3, r3, r1
   24338:	mov	r5, r3
   2433c:	add	r3, sp, #296	; 0x128
   24340:	mov	r4, r2
   24344:	ldrd	r2, [r3]
   24348:	strd	r4, [sp, #200]	; 0xc8
   2434c:	ldrd	r4, [sp, #72]	; 0x48
   24350:	eor	r3, r3, fp
   24354:	mov	r7, r3
   24358:	add	r3, sp, #2384	; 0x950
   2435c:	add	r3, r3, #8
   24360:	eor	r2, r2, sl
   24364:	ldrd	sl, [r3]
   24368:	add	r3, sp, #2400	; 0x960
   2436c:	mov	r6, r2
   24370:	ldrd	r8, [r3]
   24374:	adds	r4, r4, r6
   24378:	adc	r5, r5, r7
   2437c:	eor	sl, sl, r8
   24380:	eor	fp, fp, r9
   24384:	mov	r6, r4
   24388:	mov	r7, r5
   2438c:	ldrd	r4, [ip]
   24390:	mov	r2, sl
   24394:	mov	r3, fp
   24398:	ldrd	sl, [sp, #216]	; 0xd8
   2439c:	eor	r4, r4, r2
   243a0:	mov	r2, r4
   243a4:	lsr	r1, sl, #14
   243a8:	eor	r5, r5, r3
   243ac:	mov	r4, sl
   243b0:	orr	ip, r1, fp, lsl #18
   243b4:	lsr	r0, sl, #18
   243b8:	mov	r3, r5
   243bc:	adds	sl, r6, r2
   243c0:	mov	r5, fp
   243c4:	lsr	r1, fp, #14
   243c8:	str	ip, [sp, #2408]	; 0x968
   243cc:	orr	ip, r0, fp, lsl #14
   243d0:	lsr	r0, fp, #18
   243d4:	adc	fp, r7, r3
   243d8:	orr	lr, r1, r4, lsl #18
   243dc:	ldrd	r6, [sp, #200]	; 0xc8
   243e0:	strd	sl, [sp, #112]	; 0x70
   243e4:	lsl	r2, r5, #23
   243e8:	mov	sl, r4
   243ec:	mov	fp, r5
   243f0:	str	ip, [sp, #2416]	; 0x970
   243f4:	str	lr, [sp, #2412]	; 0x96c
   243f8:	orr	lr, r0, r4, lsl #14
   243fc:	ldrd	r4, [sp, #208]	; 0xd0
   24400:	ldrd	r0, [sp, #144]	; 0x90
   24404:	add	r9, pc, #876	; 0x36c
   24408:	ldrd	r8, [r9]
   2440c:	str	lr, [sp, #2420]	; 0x974
   24410:	eor	r0, r0, r4
   24414:	eor	r1, r1, r5
   24418:	ldrd	r4, [sp, #112]	; 0x70
   2441c:	orr	lr, r2, sl, lsr #9
   24420:	lsl	r2, sl, #23
   24424:	adds	r4, r4, r8
   24428:	adc	r5, r5, r9
   2442c:	and	sl, sl, r0
   24430:	mov	r9, fp
   24434:	and	fp, fp, r1
   24438:	mov	r0, sl
   2443c:	mov	r1, fp
   24440:	ldrd	sl, [sp, #144]	; 0x90
   24444:	lsl	r3, r7, #30
   24448:	orr	r3, r3, r6, lsr #2
   2444c:	lsr	ip, r6, #28
   24450:	orr	ip, ip, r7, lsl #4
   24454:	str	r3, [sp, #2444]	; 0x98c
   24458:	eor	fp, fp, r1
   2445c:	lsr	r3, r7, #28
   24460:	add	r1, sp, #2400	; 0x960
   24464:	str	ip, [sp, #2432]	; 0x980
   24468:	orr	r3, r3, r6, lsl #4
   2446c:	lsl	ip, r6, #30
   24470:	eor	sl, sl, r0
   24474:	add	r1, r1, #8
   24478:	str	lr, [sp, #2428]	; 0x97c
   2447c:	str	r3, [sp, #2436]	; 0x984
   24480:	orr	lr, r2, r9, lsr #9
   24484:	orr	r3, ip, r7, lsr #2
   24488:	lsl	r2, r7, #25
   2448c:	str	r3, [sp, #2440]	; 0x988
   24490:	strd	sl, [sp, #72]	; 0x48
   24494:	orr	r3, r2, r6, lsr #7
   24498:	ldrd	sl, [r1]
   2449c:	add	r1, sp, #2416	; 0x970
   244a0:	str	lr, [sp, #2424]	; 0x978
   244a4:	str	r3, [sp, #2452]	; 0x994
   244a8:	mov	lr, r6
   244ac:	mov	r3, r7
   244b0:	lsl	ip, r6, #25
   244b4:	ldrd	r6, [sp, #192]	; 0xc0
   244b8:	ldrd	r8, [r1]
   244bc:	ldrd	r0, [sp, #40]	; 0x28
   244c0:	adds	r6, r6, r4
   244c4:	adc	r7, r7, r5
   244c8:	eor	fp, fp, r9
   244cc:	orr	r0, r0, lr
   244d0:	orr	r1, r1, r3
   244d4:	mov	r5, r7
   244d8:	mov	r2, r0
   244dc:	mov	r7, fp
   244e0:	mov	fp, r3
   244e4:	mov	r3, r1
   244e8:	ldrd	r0, [sp, #128]	; 0x80
   244ec:	eor	sl, sl, r8
   244f0:	mov	r4, r6
   244f4:	lsr	lr, r0, #7
   244f8:	str	lr, [sp, #312]	; 0x138
   244fc:	add	lr, sp, #2416	; 0x970
   24500:	add	lr, lr, #8
   24504:	mov	r6, sl
   24508:	orr	ip, ip, fp, lsr #7
   2450c:	ldrd	sl, [lr]
   24510:	add	lr, sp, #2432	; 0x980
   24514:	str	ip, [sp, #2448]	; 0x990
   24518:	eor	sl, sl, r6
   2451c:	eor	fp, fp, r7
   24520:	mov	r6, sl
   24524:	mov	r7, fp
   24528:	ldrd	sl, [lr]
   2452c:	add	lr, sp, #2432	; 0x980
   24530:	add	lr, lr, #8
   24534:	lsr	ip, r0, #1
   24538:	ldrd	r8, [lr]
   2453c:	ldrd	r0, [sp, #72]	; 0x48
   24540:	ldr	lr, [sp, #312]	; 0x138
   24544:	eor	sl, sl, r8
   24548:	adds	r0, r0, r4
   2454c:	eor	fp, fp, r9
   24550:	adc	r1, r1, r5
   24554:	mov	r4, sl
   24558:	mov	r5, fp
   2455c:	ldrd	sl, [sp, #24]
   24560:	ldrd	r8, [sp, #184]	; 0xb8
   24564:	adds	r6, r6, r0
   24568:	and	sl, sl, r2
   2456c:	and	fp, fp, r3
   24570:	mov	r2, sl
   24574:	mov	r3, fp
   24578:	ldrd	sl, [sp, #128]	; 0x80
   2457c:	adc	r7, r7, r1
   24580:	orr	ip, ip, fp, lsl #31
   24584:	orr	lr, lr, fp, lsl #25
   24588:	str	ip, [sp, #2456]	; 0x998
   2458c:	lsr	ip, sl, #8
   24590:	orr	ip, ip, fp, lsl #24
   24594:	str	lr, [sp, #312]	; 0x138
   24598:	lsr	lr, r8, #6
   2459c:	str	ip, [sp, #2464]	; 0x9a0
   245a0:	str	lr, [sp, #320]	; 0x140
   245a4:	lsr	ip, fp, #1
   245a8:	ldrd	sl, [sp, #40]	; 0x28
   245ac:	ldrd	r0, [sp, #200]	; 0xc8
   245b0:	add	lr, sp, #2448	; 0x990
   245b4:	and	sl, sl, r0
   245b8:	and	fp, fp, r1
   245bc:	mov	r0, sl
   245c0:	mov	r1, fp
   245c4:	ldrd	sl, [lr]
   245c8:	eor	sl, sl, r4
   245cc:	eor	fp, fp, r5
   245d0:	mov	r4, sl
   245d4:	mov	r5, fp
   245d8:	orr	sl, r2, r0
   245dc:	orr	fp, r3, r1
   245e0:	ldrd	r2, [sp, #128]	; 0x80
   245e4:	lsr	r1, r8, #19
   245e8:	lsr	r0, r3, #8
   245ec:	lsr	r3, r3, #7
   245f0:	str	r3, [sp, #316]	; 0x13c
   245f4:	ldr	r3, [sp, #320]	; 0x140
   245f8:	orr	lr, r0, r2, lsl #24
   245fc:	orr	r3, r3, r9, lsl #26
   24600:	orr	ip, ip, r2, lsl #31
   24604:	str	r3, [sp, #320]	; 0x140
   24608:	ldrd	r2, [sp, #104]	; 0x68
   2460c:	lsr	r0, r9, #19
   24610:	str	ip, [sp, #2460]	; 0x99c
   24614:	adds	r2, r2, r6
   24618:	adc	r3, r3, r7
   2461c:	str	lr, [sp, #2468]	; 0x9a4
   24620:	strd	r2, [sp, #72]	; 0x48
   24624:	orr	r3, r0, r8, lsl #13
   24628:	add	r0, sp, #2448	; 0x990
   2462c:	add	r0, r0, #8
   24630:	adds	r2, sl, r4
   24634:	str	r3, [sp, #2476]	; 0x9ac
   24638:	adc	r3, fp, r5
   2463c:	ldrd	sl, [r0]
   24640:	add	r0, sp, #2464	; 0x9a0
   24644:	lsl	ip, r9, #3
   24648:	ldrd	r4, [r0]
   2464c:	orr	lr, r1, r9, lsl #13
   24650:	orr	ip, ip, r8, lsr #29
   24654:	lsl	r1, r8, #3
   24658:	eor	sl, sl, r4
   2465c:	str	ip, [sp, #2484]	; 0x9b4
   24660:	mov	r4, sl
   24664:	orr	ip, r1, r9, lsr #29
   24668:	adds	sl, r2, r6
   2466c:	eor	fp, fp, r5
   24670:	mov	r5, fp
   24674:	str	ip, [sp, #2480]	; 0x9b0
   24678:	adc	fp, r3, r7
   2467c:	lsr	ip, r9, #6
   24680:	ldrd	r2, [sp, #56]	; 0x38
   24684:	ldrd	r8, [sp, #80]	; 0x50
   24688:	str	lr, [sp, #2472]	; 0x9a8
   2468c:	str	ip, [sp, #324]	; 0x144
   24690:	adds	r8, r8, r2
   24694:	adc	r9, r9, r3
   24698:	add	r3, sp, #312	; 0x138
   2469c:	mov	r6, r8
   246a0:	mov	r7, r9
   246a4:	ldrd	r8, [r3]
   246a8:	add	r3, sp, #2464	; 0x9a0
   246ac:	add	r3, r3, #8
   246b0:	eor	r8, r8, r4
   246b4:	eor	r9, r9, r5
   246b8:	mov	r4, r8
   246bc:	mov	r5, r9
   246c0:	ldrd	r8, [r3]
   246c4:	add	r3, sp, #2480	; 0x9b0
   246c8:	adds	r4, r4, r6
   246cc:	ldrd	r2, [r3]
   246d0:	add	r6, sp, #320	; 0x140
   246d4:	adc	r5, r5, r7
   246d8:	eor	r8, r8, r2
   246dc:	eor	r9, r9, r3
   246e0:	ldrd	r6, [r6]
   246e4:	mov	r0, r8
   246e8:	mov	r1, r9
   246ec:	ldrd	r8, [sp, #72]	; 0x48
   246f0:	eor	r6, r6, r0
   246f4:	mov	r0, r6
   246f8:	lsr	ip, r8, #14
   246fc:	eor	r7, r7, r1
   24700:	lsr	lr, r8, #18
   24704:	mov	r1, r7
   24708:	adds	r8, r4, r0
   2470c:	orr	ip, ip, r9, lsl #18
   24710:	lsr	r6, r9, #14
   24714:	str	ip, [sp, #2488]	; 0x9b8
   24718:	orr	ip, lr, r9, lsl #14
   2471c:	lsr	lr, r9, #18
   24720:	adc	r9, r5, r1
   24724:	ldrd	r0, [sp, #72]	; 0x48
   24728:	lsr	r5, sl, #28
   2472c:	lsl	r4, fp, #30
   24730:	orr	lr, lr, r0, lsl #14
   24734:	add	r3, pc, #68	; 0x44
   24738:	ldrd	r2, [r3]
   2473c:	orr	r7, r6, r0, lsl #18
   24740:	str	lr, [sp, #2500]	; 0x9c4
   24744:	orr	lr, r5, fp, lsl #4
   24748:	orr	r5, r4, sl, lsr #2
   2474c:	str	ip, [sp, #2496]	; 0x9c0
   24750:	str	r7, [sp, #2492]	; 0x9bc
   24754:	lsl	ip, r1, #23
   24758:	ldrd	r6, [sp, #208]	; 0xd0
   2475c:	ldrd	r0, [sp, #216]	; 0xd8
   24760:	str	lr, [sp, #2512]	; 0x9d0
   24764:	str	r5, [sp, #2524]	; 0x9dc
   24768:	ldr	r5, [sp, #72]	; 0x48
   2476c:	adds	r4, r8, r2
   24770:	mov	r2, r4
   24774:	b	24788 <__assert_fail@plt+0x1349c>
   24778:	stmdbpl	fp!, {r0, r2, r4, r5, r6, r9}
   2477c:	stclcs	12, cr2, [r9, #444]!	; 0x1bc
   24780:	cdpvs	4, 10, cr14, cr6, cr3, {4}
   24784:	bmi	1d45a34 <optarg@@GLIBC_2.4+0x1cf388c>
   24788:	orr	ip, ip, r5, lsr #9
   2478c:	adc	r5, r9, r3
   24790:	mov	r3, r5
   24794:	ldrd	r4, [sp, #72]	; 0x48
   24798:	eor	r1, r1, r7
   2479c:	strd	r8, [sp, #104]	; 0x68
   247a0:	mov	r9, r5
   247a4:	and	r9, r9, r1
   247a8:	str	ip, [sp, #2508]	; 0x9cc
   247ac:	mov	r1, r9
   247b0:	lsr	lr, fp, #28
   247b4:	mov	r9, r5
   247b8:	lsl	ip, sl, #30
   247bc:	orr	lr, lr, sl, lsl #4
   247c0:	orr	ip, ip, fp, lsr #2
   247c4:	mov	r8, r4
   247c8:	lsl	r4, r4, #23
   247cc:	str	lr, [sp, #2516]	; 0x9d4
   247d0:	str	ip, [sp, #2520]	; 0x9d8
   247d4:	lsl	lr, fp, #25
   247d8:	orr	ip, r4, r9, lsr #9
   247dc:	str	ip, [sp, #2504]	; 0x9c8
   247e0:	orr	ip, lr, sl, lsr #7
   247e4:	add	lr, sp, #2480	; 0x9b0
   247e8:	eor	r0, r0, r6
   247ec:	add	lr, lr, #8
   247f0:	and	r8, r8, r0
   247f4:	mov	r0, r8
   247f8:	ldrd	r8, [lr]
   247fc:	add	lr, sp, #2496	; 0x9c0
   24800:	eor	r6, r6, r0
   24804:	eor	r7, r7, r1
   24808:	mov	r0, r6
   2480c:	mov	r1, r7
   24810:	ldrd	r6, [lr]
   24814:	ldrd	r4, [sp, #144]	; 0x90
   24818:	str	ip, [sp, #2532]	; 0x9e4
   2481c:	eor	r8, r8, r6
   24820:	eor	r9, r9, r7
   24824:	mov	r6, r8
   24828:	mov	r7, r9
   2482c:	ldrd	r8, [sp, #200]	; 0xc8
   24830:	adds	r4, r4, r2
   24834:	adc	r5, r5, r3
   24838:	mov	r2, r4
   2483c:	mov	r3, r5
   24840:	orr	r4, r8, sl
   24844:	orr	r5, r9, fp
   24848:	lsl	ip, sl, #25
   2484c:	strd	r4, [sp, #144]	; 0x90
   24850:	ldrd	r4, [sp, #32]
   24854:	orr	ip, ip, fp, lsr #7
   24858:	str	ip, [sp, #2528]	; 0x9e0
   2485c:	lsr	lr, r4, #7
   24860:	lsr	ip, r4, #1
   24864:	adds	r4, r2, r0
   24868:	adc	r5, r3, r1
   2486c:	add	r3, sp, #2496	; 0x9c0
   24870:	add	r3, r3, #8
   24874:	strd	r4, [sp, #80]	; 0x50
   24878:	ldrd	r2, [r3]
   2487c:	ldrd	r4, [sp, #144]	; 0x90
   24880:	str	lr, [sp, #328]	; 0x148
   24884:	eor	r3, r3, r7
   24888:	mov	r7, r3
   2488c:	add	r3, sp, #2512	; 0x9d0
   24890:	eor	r2, r2, r6
   24894:	ldrd	r0, [r3]
   24898:	add	r3, sp, #2512	; 0x9d0
   2489c:	add	r3, r3, #8
   248a0:	mov	r6, r2
   248a4:	ldrd	r2, [r3]
   248a8:	ldr	lr, [sp, #328]	; 0x148
   248ac:	eor	r0, r0, r2
   248b0:	eor	r1, r1, r3
   248b4:	ldrd	r2, [sp, #40]	; 0x28
   248b8:	and	r4, r4, r2
   248bc:	and	r5, r5, r3
   248c0:	ldrd	r2, [sp, #32]
   248c4:	orr	ip, ip, r3, lsl #31
   248c8:	str	ip, [sp, #2536]	; 0x9e8
   248cc:	lsr	ip, r2, #8
   248d0:	orr	ip, ip, r3, lsl #24
   248d4:	str	ip, [sp, #2544]	; 0x9f0
   248d8:	lsr	ip, r3, #1
   248dc:	orr	r3, lr, r3, lsl #25
   248e0:	str	r3, [sp, #328]	; 0x148
   248e4:	ldr	r3, [sp, #112]	; 0x70
   248e8:	add	lr, sp, #2528	; 0x9e0
   248ec:	lsr	r3, r3, #6
   248f0:	str	r3, [sp, #336]	; 0x150
   248f4:	ldrd	r2, [sp, #80]	; 0x50
   248f8:	adds	r2, r2, r6
   248fc:	adc	r3, r3, r7
   24900:	mov	r7, r3
   24904:	mov	r3, r9
   24908:	and	r3, r3, fp
   2490c:	mov	r6, r2
   24910:	orr	r5, r5, r3
   24914:	mov	r2, r8
   24918:	ldrd	r8, [lr]
   2491c:	ldr	r3, [sp, #36]	; 0x24
   24920:	and	r2, r2, sl
   24924:	eor	r8, r8, r0
   24928:	lsr	lr, r3, #8
   2492c:	ldr	r3, [sp, #32]
   24930:	eor	r9, r9, r1
   24934:	mov	r0, r8
   24938:	orr	r3, ip, r3, lsl #31
   2493c:	mov	r1, r9
   24940:	ldr	ip, [sp, #32]
   24944:	ldrd	r8, [sp, #112]	; 0x70
   24948:	orr	r4, r4, r2
   2494c:	orr	ip, lr, ip, lsl #24
   24950:	lsr	r2, r8, #19
   24954:	str	ip, [sp, #2548]	; 0x9f4
   24958:	orr	ip, r2, r9, lsl #13
   2495c:	str	ip, [sp, #2552]	; 0x9f8
   24960:	ldr	ip, [sp, #36]	; 0x24
   24964:	str	r3, [sp, #2540]	; 0x9ec
   24968:	lsl	r3, r9, #3
   2496c:	lsr	ip, ip, #7
   24970:	str	ip, [sp, #332]	; 0x14c
   24974:	ldr	ip, [sp, #336]	; 0x150
   24978:	orr	r3, r3, r8, lsr #29
   2497c:	lsr	r2, r9, #19
   24980:	str	r3, [sp, #2564]	; 0xa04
   24984:	orr	ip, ip, r9, lsl #26
   24988:	lsl	r3, r8, #3
   2498c:	ldrd	r8, [sp, #24]
   24990:	str	ip, [sp, #336]	; 0x150
   24994:	add	ip, sp, #2528	; 0x9e0
   24998:	adds	r8, r8, r6
   2499c:	adc	r9, r9, r7
   249a0:	add	ip, ip, #8
   249a4:	strd	r8, [sp, #152]	; 0x98
   249a8:	ldrd	r8, [ip]
   249ac:	add	ip, sp, #2544	; 0x9f0
   249b0:	adds	r0, r0, r4
   249b4:	adc	r1, r1, r5
   249b8:	ldrd	r4, [ip]
   249bc:	eor	r8, r8, r4
   249c0:	eor	r9, r9, r5
   249c4:	mov	r4, r8
   249c8:	mov	r5, r9
   249cc:	ldrd	r8, [sp, #112]	; 0x70
   249d0:	orr	r3, r3, r9, lsr #29
   249d4:	orr	ip, r2, r8, lsl #13
   249d8:	str	r3, [sp, #2560]	; 0xa00
   249dc:	adds	r8, r0, r6
   249e0:	lsr	r3, r9, #6
   249e4:	str	r3, [sp, #340]	; 0x154
   249e8:	adc	r9, r1, r7
   249ec:	ldrd	r2, [sp, #128]	; 0x80
   249f0:	ldrd	r0, [sp, #16]
   249f4:	str	ip, [sp, #2556]	; 0x9fc
   249f8:	adds	r2, r2, r0
   249fc:	adc	r3, r3, r1
   24a00:	mov	r7, r3
   24a04:	add	r3, sp, #328	; 0x148
   24a08:	mov	r6, r2
   24a0c:	ldrd	r2, [r3]
   24a10:	add	r1, sp, #2560	; 0xa00
   24a14:	eor	r3, r3, r5
   24a18:	mov	r5, r3
   24a1c:	add	r3, sp, #2544	; 0x9f0
   24a20:	add	r3, r3, #8
   24a24:	eor	r2, r2, r4
   24a28:	ldrd	r0, [r1]
   24a2c:	mov	r4, r2
   24a30:	ldrd	r2, [r3]
   24a34:	adds	r4, r4, r6
   24a38:	adc	r5, r5, r7
   24a3c:	eor	r3, r3, r1
   24a40:	mov	r1, r3
   24a44:	ldr	r3, [sp, #152]	; 0x98
   24a48:	eor	r2, r2, r0
   24a4c:	mov	r0, r2
   24a50:	lsr	ip, r3, #14
   24a54:	add	r3, sp, #336	; 0x150
   24a58:	ldrd	r6, [sp, #152]	; 0x98
   24a5c:	ldrd	r2, [r3]
   24a60:	lsr	lr, r6, #18
   24a64:	eor	r3, r3, r1
   24a68:	mov	r1, r3
   24a6c:	orr	r3, ip, r7, lsl #18
   24a70:	str	r3, [sp, #2568]	; 0xa08
   24a74:	ldr	r3, [sp, #156]	; 0x9c
   24a78:	eor	r2, r2, r0
   24a7c:	adds	r2, r4, r2
   24a80:	orr	r3, lr, r3, lsl #14
   24a84:	str	r3, [sp, #2576]	; 0xa10
   24a88:	ldr	r3, [sp, #156]	; 0x9c
   24a8c:	lsr	r6, r7, #14
   24a90:	lsl	r4, r9, #30
   24a94:	lsr	lr, r3, #18
   24a98:	adc	r3, r5, r1
   24a9c:	lsr	r5, r8, #28
   24aa0:	strd	r2, [sp, #24]
   24aa4:	ldrd	r0, [sp, #152]	; 0x98
   24aa8:	orr	r3, r6, r0, lsl #18
   24aac:	str	r3, [sp, #2572]	; 0xa0c
   24ab0:	orr	r3, lr, r0, lsl #14
   24ab4:	mov	r6, r0
   24ab8:	mov	r7, r1
   24abc:	lsl	ip, r1, #23
   24ac0:	str	r3, [sp, #2580]	; 0xa14
   24ac4:	ldrd	r0, [sp, #216]	; 0xd8
   24ac8:	ldrd	r2, [sp, #72]	; 0x48
   24acc:	lsr	lr, r9, #28
   24ad0:	orr	lr, lr, r8, lsl #4
   24ad4:	eor	r1, r1, r3
   24ad8:	orr	r3, r5, r9, lsl #4
   24adc:	str	r3, [sp, #2592]	; 0xa20
   24ae0:	orr	r3, r4, r8, lsr #2
   24ae4:	str	r3, [sp, #2604]	; 0xa2c
   24ae8:	orr	r3, ip, r6, lsr #9
   24aec:	eor	r0, r0, r2
   24af0:	str	r3, [sp, #2588]	; 0xa1c
   24af4:	add	r5, pc, #852	; 0x354
   24af8:	ldrd	r4, [r5]
   24afc:	ldrd	r2, [sp, #24]
   24b00:	lsl	ip, r8, #30
   24b04:	orr	ip, ip, r9, lsr #2
   24b08:	adds	r4, r4, r2
   24b0c:	adc	r5, r5, r3
   24b10:	mov	r3, r5
   24b14:	str	ip, [sp, #2600]	; 0xa28
   24b18:	mov	r5, r7
   24b1c:	ldr	ip, [sp, #176]	; 0xb0
   24b20:	mov	r2, r4
   24b24:	and	r5, r5, r1
   24b28:	mov	r4, r6
   24b2c:	mov	r1, r5
   24b30:	and	r4, r4, r0
   24b34:	lsl	r5, r6, #23
   24b38:	mov	r0, r4
   24b3c:	str	lr, [sp, #2596]	; 0xa24
   24b40:	lsl	r4, r9, #25
   24b44:	lsr	lr, ip, #1
   24b48:	orr	ip, r5, r7, lsr #9
   24b4c:	str	ip, [sp, #2584]	; 0xa18
   24b50:	orr	ip, r4, r8, lsr #7
   24b54:	ldrd	r6, [sp, #216]	; 0xd8
   24b58:	str	ip, [sp, #2612]	; 0xa34
   24b5c:	lsl	ip, r8, #25
   24b60:	str	ip, [sp, #80]	; 0x50
   24b64:	ldrd	r4, [sp, #208]	; 0xd0
   24b68:	add	ip, sp, #2560	; 0xa00
   24b6c:	add	ip, ip, #8
   24b70:	eor	r6, r6, r0
   24b74:	eor	r7, r7, r1
   24b78:	adds	r4, r4, r2
   24b7c:	mov	r0, r6
   24b80:	mov	r1, r7
   24b84:	ldrd	r6, [ip]
   24b88:	add	ip, sp, #2576	; 0xa10
   24b8c:	adc	r5, r5, r3
   24b90:	mov	r2, r4
   24b94:	mov	r3, r5
   24b98:	ldrd	r4, [ip]
   24b9c:	adds	r2, r2, r0
   24ba0:	adc	r3, r3, r1
   24ba4:	add	r1, sp, #2576	; 0xa10
   24ba8:	eor	r6, r6, r4
   24bac:	eor	r7, r7, r5
   24bb0:	add	r1, r1, #8
   24bb4:	ldrd	r4, [sp, #176]	; 0xb0
   24bb8:	ldrd	r0, [r1]
   24bbc:	orr	lr, lr, r5, lsl #31
   24bc0:	str	lr, [sp, #2616]	; 0xa38
   24bc4:	lsr	lr, r4, #8
   24bc8:	orr	ip, lr, r5, lsl #24
   24bcc:	eor	r0, r0, r6
   24bd0:	eor	r1, r1, r7
   24bd4:	str	ip, [sp, #2624]	; 0xa40
   24bd8:	add	lr, sp, #2592	; 0xa20
   24bdc:	lsr	ip, r4, #7
   24be0:	str	ip, [sp, #344]	; 0x158
   24be4:	add	lr, lr, #8
   24be8:	ldr	ip, [sp, #80]	; 0x50
   24bec:	strd	r0, [sp, #80]	; 0x50
   24bf0:	add	r1, sp, #2592	; 0xa20
   24bf4:	ldrd	r6, [lr]
   24bf8:	ldrd	r0, [r1]
   24bfc:	orr	r4, sl, r8
   24c00:	orr	r5, fp, r9
   24c04:	eor	r0, r0, r6
   24c08:	eor	r1, r1, r7
   24c0c:	mov	r6, r0
   24c10:	mov	r7, r1
   24c14:	ldrd	r0, [sp, #200]	; 0xc8
   24c18:	orr	ip, ip, r9, lsr #7
   24c1c:	str	ip, [sp, #2608]	; 0xa30
   24c20:	and	r0, r0, r4
   24c24:	ldr	ip, [sp, #180]	; 0xb4
   24c28:	and	r1, r1, r5
   24c2c:	mov	r4, r0
   24c30:	mov	r5, r1
   24c34:	ldrd	r0, [sp, #176]	; 0xb0
   24c38:	lsr	ip, ip, #1
   24c3c:	orr	ip, ip, r0, lsl #31
   24c40:	str	ip, [sp, #2620]	; 0xa3c
   24c44:	lsr	ip, r1, #8
   24c48:	orr	ip, ip, r0, lsl #24
   24c4c:	str	ip, [sp, #2628]	; 0xa44
   24c50:	ldr	ip, [sp, #344]	; 0x158
   24c54:	orr	ip, ip, r1, lsl #25
   24c58:	ldrd	r0, [sp, #104]	; 0x68
   24c5c:	str	ip, [sp, #344]	; 0x158
   24c60:	lsr	lr, r0, #6
   24c64:	lsr	ip, r0, #19
   24c68:	ldrd	r0, [sp, #80]	; 0x50
   24c6c:	str	lr, [sp, #352]	; 0x160
   24c70:	adds	r0, r0, r2
   24c74:	adc	r1, r1, r3
   24c78:	and	r2, sl, r8
   24c7c:	strd	r0, [sp, #128]	; 0x80
   24c80:	add	r1, sp, #2608	; 0xa30
   24c84:	and	r3, fp, r9
   24c88:	ldrd	r0, [r1]
   24c8c:	eor	r6, r6, r0
   24c90:	eor	r7, r7, r1
   24c94:	mov	r0, r6
   24c98:	mov	r1, r7
   24c9c:	orr	r6, r4, r2
   24ca0:	orr	r7, r5, r3
   24ca4:	ldrd	r4, [sp, #104]	; 0x68
   24ca8:	lsl	r3, r5, #3
   24cac:	orr	r3, r3, r4, lsr #29
   24cb0:	str	r3, [sp, #2644]	; 0xa54
   24cb4:	ldr	r3, [sp, #180]	; 0xb4
   24cb8:	lsl	r2, r4, #3
   24cbc:	orr	ip, ip, r5, lsl #13
   24cc0:	lsr	r3, r3, #7
   24cc4:	str	r3, [sp, #348]	; 0x15c
   24cc8:	ldr	r3, [sp, #352]	; 0x160
   24ccc:	lsr	lr, r5, #19
   24cd0:	orr	r3, r3, r5, lsl #26
   24cd4:	str	r2, [sp, #144]	; 0x90
   24cd8:	ldrd	r4, [sp, #40]	; 0x28
   24cdc:	str	r3, [sp, #352]	; 0x160
   24ce0:	ldrd	r2, [sp, #128]	; 0x80
   24ce4:	str	ip, [sp, #2632]	; 0xa48
   24ce8:	add	ip, sp, #352	; 0x160
   24cec:	adds	r2, r2, r4
   24cf0:	adc	r3, r3, r5
   24cf4:	mov	r4, r2
   24cf8:	adds	r2, r6, r0
   24cfc:	mov	r5, r3
   24d00:	adc	r3, r7, r1
   24d04:	mov	r1, r3
   24d08:	add	r3, sp, #2608	; 0xa30
   24d0c:	add	r3, r3, #8
   24d10:	strd	r4, [sp, #80]	; 0x50
   24d14:	ldrd	r4, [r3]
   24d18:	add	r3, sp, #2624	; 0xa40
   24d1c:	mov	r0, r2
   24d20:	ldrd	r2, [r3]
   24d24:	ldrd	r6, [sp, #104]	; 0x68
   24d28:	eor	r4, r4, r2
   24d2c:	ldr	r2, [sp, #144]	; 0x90
   24d30:	eor	r5, r5, r3
   24d34:	orr	r3, lr, r6, lsl #13
   24d38:	str	r3, [sp, #2636]	; 0xa4c
   24d3c:	orr	r3, r2, r7, lsr #29
   24d40:	str	r3, [sp, #2640]	; 0xa50
   24d44:	add	r3, sp, #344	; 0x158
   24d48:	ldrd	r2, [r3]
   24d4c:	eor	r3, r3, r5
   24d50:	mov	r5, r3
   24d54:	eor	r2, r2, r4
   24d58:	lsr	r3, r7, #6
   24d5c:	mov	r4, r2
   24d60:	str	r3, [sp, #356]	; 0x164
   24d64:	ldrd	r2, [sp, #128]	; 0x80
   24d68:	adds	r2, r2, r0
   24d6c:	adc	r3, r3, r1
   24d70:	add	r1, sp, #2640	; 0xa50
   24d74:	strd	r2, [sp, #192]	; 0xc0
   24d78:	ldrd	r6, [r1]
   24d7c:	ldrd	r0, [sp, #32]
   24d80:	add	r3, sp, #2624	; 0xa40
   24d84:	add	r3, r3, #8
   24d88:	adds	r0, r0, r4
   24d8c:	adc	r1, r1, r5
   24d90:	ldrd	r2, [r3]
   24d94:	ldrd	r4, [sp, #80]	; 0x50
   24d98:	eor	r2, r2, r6
   24d9c:	eor	r3, r3, r7
   24da0:	mov	r6, r0
   24da4:	mov	r7, r1
   24da8:	lsr	r0, r4, #14
   24dac:	lsr	r1, r4, #18
   24db0:	ldrd	r4, [ip]
   24db4:	eor	r4, r4, r2
   24db8:	eor	r5, r5, r3
   24dbc:	mov	r2, r4
   24dc0:	mov	r3, r5
   24dc4:	ldrd	r4, [sp, #136]	; 0x88
   24dc8:	adds	r4, r4, r6
   24dcc:	adc	r5, r5, r7
   24dd0:	mov	r6, r4
   24dd4:	mov	r7, r5
   24dd8:	ldrd	r4, [sp, #80]	; 0x50
   24ddc:	adds	r4, r6, r2
   24de0:	orr	ip, r0, r5, lsl #18
   24de4:	str	ip, [sp, #2648]	; 0xa58
   24de8:	lsr	r0, r5, #14
   24dec:	orr	ip, r1, r5, lsl #14
   24df0:	lsr	r1, r5, #18
   24df4:	adc	r5, r7, r3
   24df8:	ldrd	r6, [sp, #192]	; 0xc0
   24dfc:	strd	r4, [sp, #144]	; 0x90
   24e00:	ldrd	r4, [sp, #80]	; 0x50
   24e04:	lsr	r2, r6, #28
   24e08:	str	ip, [sp, #2656]	; 0xa60
   24e0c:	orr	lr, r0, r4, lsl #18
   24e10:	str	lr, [sp, #2652]	; 0xa5c
   24e14:	lsl	r3, r5, #23
   24e18:	orr	lr, r1, r4, lsl #14
   24e1c:	ldrd	r4, [sp, #72]	; 0x48
   24e20:	ldrd	r0, [sp, #152]	; 0x98
   24e24:	lsl	ip, r7, #30
   24e28:	strd	r6, [sp, #32]
   24e2c:	eor	r0, r0, r4
   24e30:	eor	r1, r1, r5
   24e34:	orr	ip, ip, r6, lsr #2
   24e38:	ldrd	r4, [sp, #144]	; 0x90
   24e3c:	str	lr, [sp, #2660]	; 0xa64
   24e40:	orr	lr, r2, r7, lsl #4
   24e44:	lsr	r2, r7, #28
   24e48:	b	24e60 <__assert_fail@plt+0x13b74>
   24e4c:	nop			; (mov r0, r0)
   24e50:	vstrlt	d31, [r1, #-848]	; 0xfffffcb0
   24e54:			; <UNDEFINED> instruction: 0x5cb0a9dc
   24e58:	tsthi	r1, #-738197502	; 0xd4000002
   24e5c:	usatvc	r8, #25, sl, asr #17
   24e60:	sub	r7, pc, #16
   24e64:	ldrd	r6, [r7]
   24e68:	str	ip, [sp, #2684]	; 0xa7c
   24e6c:	ldr	ip, [sp, #80]	; 0x50
   24e70:	adds	r6, r6, r4
   24e74:	adc	r7, r7, r5
   24e78:	mov	r4, r6
   24e7c:	mov	r5, r7
   24e80:	ldrd	r6, [sp, #80]	; 0x50
   24e84:	strd	r4, [sp, #40]	; 0x28
   24e88:	orr	r3, r3, ip, lsr #9
   24e8c:	mov	r5, r7
   24e90:	str	r3, [sp, #2668]	; 0xa6c
   24e94:	and	r5, r5, r1
   24e98:	ldr	r3, [sp, #32]
   24e9c:	mov	r1, r5
   24ea0:	lsl	ip, r6, #23
   24ea4:	mov	r5, r7
   24ea8:	mov	r4, r6
   24eac:	ldrd	r6, [sp, #32]
   24eb0:	lsl	r3, r3, #30
   24eb4:	str	lr, [sp, #2672]	; 0xa70
   24eb8:	orr	r3, r3, r7, lsr #2
   24ebc:	str	r3, [sp, #2680]	; 0xa78
   24ec0:	ldr	r3, [sp, #48]	; 0x30
   24ec4:	orr	lr, r2, r6, lsl #4
   24ec8:	str	lr, [sp, #2676]	; 0xa74
   24ecc:	lsl	r2, r7, #25
   24ed0:	lsr	lr, r3, #1
   24ed4:	orr	r3, ip, r5, lsr #9
   24ed8:	str	r3, [sp, #2664]	; 0xa68
   24edc:	orr	r3, r2, r6, lsr #7
   24ee0:	lsl	ip, r6, #25
   24ee4:	str	r3, [sp, #2692]	; 0xa84
   24ee8:	ldrd	r6, [sp, #216]	; 0xd8
   24eec:	ldrd	r2, [sp, #40]	; 0x28
   24ef0:	and	r4, r4, r0
   24ef4:	mov	r0, r4
   24ef8:	adds	r2, r2, r6
   24efc:	adc	r3, r3, r7
   24f00:	ldrd	r6, [sp, #72]	; 0x48
   24f04:	mov	r5, r3
   24f08:	add	r3, sp, #2640	; 0xa50
   24f0c:	add	r3, r3, #8
   24f10:	eor	r6, r6, r0
   24f14:	eor	r7, r7, r1
   24f18:	mov	r0, r6
   24f1c:	mov	r1, r7
   24f20:	ldrd	r6, [r3]
   24f24:	add	r3, sp, #2656	; 0xa60
   24f28:	mov	r4, r2
   24f2c:	ldrd	r2, [r3]
   24f30:	adds	r0, r0, r4
   24f34:	adc	r1, r1, r5
   24f38:	eor	r7, r7, r3
   24f3c:	ldr	r3, [sp, #52]	; 0x34
   24f40:	eor	r6, r6, r2
   24f44:	orr	r3, lr, r3, lsl #31
   24f48:	str	r3, [sp, #2696]	; 0xa88
   24f4c:	ldr	r3, [sp, #48]	; 0x30
   24f50:	ldr	lr, [sp, #52]	; 0x34
   24f54:	lsr	r3, r3, #8
   24f58:	orr	r3, r3, lr, lsl #24
   24f5c:	str	r3, [sp, #2704]	; 0xa90
   24f60:	ldr	r3, [sp, #48]	; 0x30
   24f64:	lsr	r3, r3, #7
   24f68:	str	r3, [sp, #360]	; 0x168
   24f6c:	ldrd	r2, [sp, #192]	; 0xc0
   24f70:	orr	r2, r2, r8
   24f74:	orr	r3, r3, r9
   24f78:	strd	r2, [sp, #32]
   24f7c:	ldr	r3, [sp, #196]	; 0xc4
   24f80:	orr	r3, ip, r3, lsr #7
   24f84:	str	r3, [sp, #2688]	; 0xa80
   24f88:	add	r3, sp, #2656	; 0xa60
   24f8c:	add	r3, r3, #8
   24f90:	ldrd	r4, [r3]
   24f94:	lsr	ip, lr, #1
   24f98:	add	r3, sp, #2672	; 0xa70
   24f9c:	ldr	lr, [sp, #48]	; 0x30
   24fa0:	eor	r4, r4, r6
   24fa4:	eor	r5, r5, r7
   24fa8:	mov	r6, r4
   24fac:	adds	r6, r6, r0
   24fb0:	mov	r7, r5
   24fb4:	ldrd	r4, [r3]
   24fb8:	add	r3, sp, #2672	; 0xa70
   24fbc:	adc	r7, r7, r1
   24fc0:	orr	ip, ip, lr, lsl #31
   24fc4:	ldrd	r0, [sp, #192]	; 0xc0
   24fc8:	add	r3, r3, #8
   24fcc:	str	ip, [sp, #2700]	; 0xa8c
   24fd0:	ldr	ip, [sp, #52]	; 0x34
   24fd4:	ldrd	r2, [r3]
   24fd8:	and	r0, r0, r8
   24fdc:	and	r1, r1, r9
   24fe0:	lsr	ip, ip, #8
   24fe4:	eor	r4, r4, r2
   24fe8:	eor	r5, r5, r3
   24fec:	orr	ip, ip, lr, lsl #24
   24ff0:	ldrd	r2, [sp, #32]
   24ff4:	ldr	lr, [sp, #52]	; 0x34
   24ff8:	strd	r0, [sp, #32]
   24ffc:	add	r1, sp, #2688	; 0xa80
   25000:	str	ip, [sp, #2708]	; 0xa94
   25004:	ldr	ip, [sp, #360]	; 0x168
   25008:	ldrd	r0, [r1]
   2500c:	orr	ip, ip, lr, lsl #25
   25010:	ldr	lr, [sp, #24]
   25014:	eor	r0, r0, r4
   25018:	eor	r1, r1, r5
   2501c:	mov	r4, r0
   25020:	mov	r5, r1
   25024:	lsr	lr, lr, #6
   25028:	ldrd	r0, [sp, #32]
   2502c:	str	lr, [sp, #368]	; 0x170
   25030:	ldr	lr, [sp, #28]
   25034:	and	r3, r3, fp
   25038:	orr	r1, r1, r3
   2503c:	mov	r3, r1
   25040:	lsl	r1, lr, #3
   25044:	ldr	lr, [sp, #52]	; 0x34
   25048:	str	ip, [sp, #360]	; 0x168
   2504c:	ldr	ip, [sp, #24]
   25050:	lsr	lr, lr, #7
   25054:	str	lr, [sp, #364]	; 0x16c
   25058:	ldr	lr, [sp, #28]
   2505c:	lsr	ip, ip, #19
   25060:	and	r2, r2, sl
   25064:	orr	ip, ip, lr, lsl #13
   25068:	str	ip, [sp, #2712]	; 0xa98
   2506c:	ldr	ip, [sp, #24]
   25070:	orr	r0, r0, r2
   25074:	mov	r2, r0
   25078:	orr	ip, r1, ip, lsr #29
   2507c:	ldrd	r0, [sp, #24]
   25080:	str	ip, [sp, #2724]	; 0xaa4
   25084:	lsr	lr, lr, #19
   25088:	lsl	ip, r0, #3
   2508c:	str	ip, [sp, #32]
   25090:	ldr	ip, [sp, #368]	; 0x170
   25094:	orr	r1, ip, r1, lsl #26
   25098:	str	r1, [sp, #368]	; 0x170
   2509c:	ldrd	r0, [sp, #200]	; 0xc8
   250a0:	add	ip, sp, #2704	; 0xa90
   250a4:	adds	r0, r0, r6
   250a8:	adc	r1, r1, r7
   250ac:	adds	r2, r2, r4
   250b0:	strd	r0, [sp, #128]	; 0x80
   250b4:	add	r1, sp, #2688	; 0xa80
   250b8:	add	r1, r1, #8
   250bc:	adc	r3, r3, r5
   250c0:	ldrd	r0, [r1]
   250c4:	ldrd	r4, [ip]
   250c8:	add	ip, sp, #360	; 0x168
   250cc:	eor	r0, r0, r4
   250d0:	eor	r1, r1, r5
   250d4:	ldrd	r4, [ip]
   250d8:	eor	r4, r4, r0
   250dc:	eor	r5, r5, r1
   250e0:	mov	r0, r4
   250e4:	mov	r1, r5
   250e8:	ldrd	r4, [sp, #24]
   250ec:	orr	ip, lr, r4, lsl #13
   250f0:	ldr	lr, [sp, #32]
   250f4:	adds	r4, r2, r6
   250f8:	str	ip, [sp, #2716]	; 0xa9c
   250fc:	orr	ip, lr, r5, lsr #29
   25100:	str	ip, [sp, #2720]	; 0xaa0
   25104:	lsr	ip, r5, #6
   25108:	adc	r5, r3, r7
   2510c:	add	r3, sp, #2704	; 0xa90
   25110:	str	ip, [sp, #372]	; 0x174
   25114:	add	r3, r3, #8
   25118:	add	ip, sp, #2720	; 0xaa0
   2511c:	ldrd	r2, [r3]
   25120:	ldrd	r6, [ip]
   25124:	strd	r4, [sp, #32]
   25128:	eor	r2, r2, r6
   2512c:	eor	r3, r3, r7
   25130:	mov	r4, r2
   25134:	mov	r5, r3
   25138:	ldrd	r2, [sp, #176]	; 0xb0
   2513c:	ldrd	r6, [sp, #128]	; 0x80
   25140:	adds	r2, r2, r0
   25144:	adc	r3, r3, r1
   25148:	mov	r0, r2
   2514c:	mov	r1, r3
   25150:	ldrd	r2, [sp, #64]	; 0x40
   25154:	lsr	lr, r6, #14
   25158:	lsr	ip, r6, #18
   2515c:	adds	r2, r2, r0
   25160:	adc	r3, r3, r1
   25164:	mov	r1, r3
   25168:	add	r3, sp, #368	; 0x170
   2516c:	mov	r0, r2
   25170:	ldrd	r2, [r3]
   25174:	lsr	r6, r7, #18
   25178:	eor	r3, r3, r5
   2517c:	mov	r5, r3
   25180:	eor	r2, r2, r4
   25184:	orr	r3, lr, r7, lsl #18
   25188:	adds	r2, r0, r2
   2518c:	str	r3, [sp, #2728]	; 0xaa8
   25190:	orr	r3, ip, r7, lsl #14
   25194:	str	r3, [sp, #2736]	; 0xab0
   25198:	adc	r3, r1, r5
   2519c:	ldrd	r0, [sp, #128]	; 0x80
   251a0:	strd	r2, [sp, #40]	; 0x28
   251a4:	ldr	r3, [sp, #32]
   251a8:	lsr	lr, r7, #14
   251ac:	lsl	r5, r1, #23
   251b0:	lsr	r4, r3, #28
   251b4:	ldr	r3, [sp, #36]	; 0x24
   251b8:	lsl	ip, r3, #30
   251bc:	orr	r3, lr, r0, lsl #18
   251c0:	str	r3, [sp, #2732]	; 0xaac
   251c4:	orr	r3, r6, r0, lsl #14
   251c8:	str	r3, [sp, #2740]	; 0xab4
   251cc:	ldrd	r6, [sp, #152]	; 0x98
   251d0:	ldrd	r2, [sp, #80]	; 0x50
   251d4:	mov	r1, r7
   251d8:	eor	r1, r1, r3
   251dc:	ldr	r3, [sp, #128]	; 0x80
   251e0:	mov	r0, r6
   251e4:	eor	r0, r0, r2
   251e8:	orr	r3, r5, r3, lsr #9
   251ec:	str	r3, [sp, #2748]	; 0xabc
   251f0:	ldr	r3, [sp, #128]	; 0x80
   251f4:	lsl	lr, r3, #23
   251f8:	ldr	r3, [sp, #36]	; 0x24
   251fc:	orr	r3, r4, r3, lsl #4
   25200:	ldrd	r4, [sp, #32]
   25204:	str	r3, [sp, #2752]	; 0xac0
   25208:	orr	r3, ip, r4, lsr #2
   2520c:	str	r3, [sp, #2764]	; 0xacc
   25210:	lsr	ip, r5, #28
   25214:	ldrd	r2, [sp, #40]	; 0x28
   25218:	add	r5, pc, #840	; 0x348
   2521c:	ldrd	r4, [r5]
   25220:	adds	r4, r4, r2
   25224:	adc	r5, r5, r3
   25228:	mov	r2, r4
   2522c:	mov	r3, r5
   25230:	ldrd	r4, [sp, #128]	; 0x80
   25234:	and	r4, r4, r0
   25238:	mov	r0, r4
   2523c:	ldr	r4, [sp, #132]	; 0x84
   25240:	and	r5, r5, r1
   25244:	mov	r1, r5
   25248:	orr	lr, lr, r4, lsr #9
   2524c:	str	lr, [sp, #2744]	; 0xab8
   25250:	ldr	lr, [sp, #36]	; 0x24
   25254:	ldr	r5, [sp, #32]
   25258:	eor	r6, r6, r0
   2525c:	lsl	r4, lr, #25
   25260:	ldr	lr, [sp, #32]
   25264:	lsl	r5, r5, #30
   25268:	eor	r7, r7, r1
   2526c:	orr	ip, ip, lr, lsl #4
   25270:	str	ip, [sp, #2756]	; 0xac4
   25274:	ldr	ip, [sp, #120]	; 0x78
   25278:	mov	r0, r6
   2527c:	mov	r1, r7
   25280:	lsr	lr, ip, #1
   25284:	ldr	ip, [sp, #36]	; 0x24
   25288:	orr	ip, r5, ip, lsr #2
   2528c:	str	ip, [sp, #2760]	; 0xac8
   25290:	ldr	ip, [sp, #32]
   25294:	orr	ip, r4, ip, lsr #7
   25298:	ldrd	r4, [sp, #72]	; 0x48
   2529c:	str	ip, [sp, #2772]	; 0xad4
   252a0:	ldr	ip, [sp, #32]
   252a4:	adds	r4, r4, r2
   252a8:	adc	r5, r5, r3
   252ac:	add	r3, sp, #2720	; 0xaa0
   252b0:	add	r3, r3, #8
   252b4:	ldrd	r6, [r3]
   252b8:	add	r3, sp, #2736	; 0xab0
   252bc:	strd	r4, [sp, #72]	; 0x48
   252c0:	ldrd	r2, [r3]
   252c4:	ldrd	r4, [sp, #192]	; 0xc0
   252c8:	lsl	ip, ip, #25
   252cc:	eor	r6, r6, r2
   252d0:	eor	r7, r7, r3
   252d4:	ldrd	r2, [sp, #120]	; 0x78
   252d8:	orr	lr, lr, r3, lsl #31
   252dc:	str	lr, [sp, #2776]	; 0xad8
   252e0:	lsr	lr, r2, #8
   252e4:	orr	lr, lr, r3, lsl #24
   252e8:	lsr	r3, r2, #7
   252ec:	str	lr, [sp, #2784]	; 0xae0
   252f0:	str	r3, [sp, #376]	; 0x178
   252f4:	ldrd	r2, [sp, #32]
   252f8:	add	lr, sp, #2768	; 0xad0
   252fc:	orr	r5, r5, r3
   25300:	orr	r3, ip, r3, lsr #7
   25304:	str	r3, [sp, #2768]	; 0xad0
   25308:	ldr	r3, [sp, #124]	; 0x7c
   2530c:	orr	r4, r4, r2
   25310:	lsr	ip, r3, #1
   25314:	ldrd	r2, [sp, #72]	; 0x48
   25318:	adds	r2, r2, r0
   2531c:	adc	r3, r3, r1
   25320:	strd	r2, [sp, #72]	; 0x48
   25324:	add	r3, sp, #2736	; 0xab0
   25328:	add	r3, r3, #8
   2532c:	ldrd	r0, [r3]
   25330:	add	r3, sp, #2752	; 0xac0
   25334:	eor	r0, r0, r6
   25338:	eor	r1, r1, r7
   2533c:	mov	r6, r0
   25340:	mov	r7, r1
   25344:	ldrd	r0, [r3]
   25348:	add	r3, sp, #2752	; 0xac0
   2534c:	add	r3, r3, #8
   25350:	ldrd	r2, [r3]
   25354:	eor	r0, r0, r2
   25358:	eor	r1, r1, r3
   2535c:	and	r2, r4, r8
   25360:	and	r3, r5, r9
   25364:	ldrd	r4, [sp, #120]	; 0x78
   25368:	strd	r2, [sp, #176]	; 0xb0
   2536c:	orr	r3, ip, r4, lsl #31
   25370:	lsr	ip, r5, #8
   25374:	str	r3, [sp, #2780]	; 0xadc
   25378:	orr	r3, ip, r4, lsl #24
   2537c:	str	r3, [sp, #2788]	; 0xae4
   25380:	ldr	r3, [sp, #376]	; 0x178
   25384:	orr	r3, r3, r5, lsl #25
   25388:	ldrd	r4, [sp, #144]	; 0x90
   2538c:	str	r3, [sp, #376]	; 0x178
   25390:	lsr	r3, r4, #6
   25394:	str	r3, [sp, #384]	; 0x180
   25398:	ldrd	r2, [sp, #72]	; 0x48
   2539c:	lsr	ip, r4, #19
   253a0:	ldrd	r4, [sp, #32]
   253a4:	adds	r2, r2, r6
   253a8:	adc	r3, r3, r7
   253ac:	mov	r6, r2
   253b0:	mov	r7, r3
   253b4:	ldrd	r2, [sp, #192]	; 0xc0
   253b8:	and	r2, r2, r4
   253bc:	and	r3, r3, r5
   253c0:	ldrd	r4, [lr]
   253c4:	eor	r4, r4, r0
   253c8:	eor	r5, r5, r1
   253cc:	ldrd	r0, [sp, #144]	; 0x90
   253d0:	strd	r4, [sp, #72]	; 0x48
   253d4:	ldrd	r4, [sp, #176]	; 0xb0
   253d8:	orr	ip, ip, r1, lsl #13
   253dc:	str	ip, [sp, #2792]	; 0xae8
   253e0:	orr	r5, r5, r3
   253e4:	lsl	r3, r1, #3
   253e8:	orr	r3, r3, r0, lsr #29
   253ec:	str	r3, [sp, #2804]	; 0xaf4
   253f0:	ldr	r3, [sp, #124]	; 0x7c
   253f4:	ldr	ip, [sp, #384]	; 0x180
   253f8:	orr	r4, r4, r2
   253fc:	lsr	r3, r3, #7
   25400:	str	r3, [sp, #380]	; 0x17c
   25404:	lsl	r3, r0, #3
   25408:	adds	r0, sl, r6
   2540c:	lsr	r2, r1, #19
   25410:	orr	ip, ip, r1, lsl #26
   25414:	adc	r1, fp, r7
   25418:	str	ip, [sp, #384]	; 0x180
   2541c:	add	ip, sp, #2768	; 0xad0
   25420:	strd	r0, [sp, #208]	; 0xd0
   25424:	add	ip, ip, #8
   25428:	ldrd	r0, [sp, #72]	; 0x48
   2542c:	ldrd	sl, [ip]
   25430:	add	ip, sp, #2784	; 0xae0
   25434:	adds	r0, r0, r4
   25438:	adc	r1, r1, r5
   2543c:	ldrd	r4, [ip]
   25440:	eor	sl, sl, r4
   25444:	eor	fp, fp, r5
   25448:	mov	r4, sl
   2544c:	mov	r5, fp
   25450:	ldrd	sl, [sp, #144]	; 0x90
   25454:	orr	r3, r3, fp, lsr #29
   25458:	orr	ip, r2, sl, lsl #13
   2545c:	str	r3, [sp, #2800]	; 0xaf0
   25460:	adds	sl, r0, r6
   25464:	add	r3, sp, #376	; 0x178
   25468:	str	ip, [sp, #2796]	; 0xaec
   2546c:	lsr	ip, fp, #6
   25470:	adc	fp, r1, r7
   25474:	add	r1, sp, #2784	; 0xae0
   25478:	ldrd	r2, [r3]
   2547c:	str	ip, [sp, #388]	; 0x184
   25480:	add	r1, r1, #8
   25484:	add	ip, sp, #2800	; 0xaf0
   25488:	ldrd	r0, [r1]
   2548c:	ldrd	r6, [ip]
   25490:	eor	r2, r2, r4
   25494:	eor	r3, r3, r5
   25498:	ldrd	r4, [sp, #48]	; 0x30
   2549c:	eor	r0, r0, r6
   254a0:	eor	r1, r1, r7
   254a4:	ldrd	r6, [sp, #208]	; 0xd0
   254a8:	adds	r4, r4, r2
   254ac:	add	r2, sp, #384	; 0x180
   254b0:	adc	r5, r5, r3
   254b4:	lsr	lr, r6, #14
   254b8:	lsr	r3, r6, #18
   254bc:	ldrd	r6, [r2]
   254c0:	eor	r6, r6, r0
   254c4:	eor	r7, r7, r1
   254c8:	mov	r0, r6
   254cc:	mov	r1, r7
   254d0:	ldrd	r6, [sp, #96]	; 0x60
   254d4:	adds	r6, r6, r4
   254d8:	adc	r7, r7, r5
   254dc:	ldrd	r4, [sp, #208]	; 0xd0
   254e0:	orr	ip, r3, r5, lsl #14
   254e4:	str	ip, [sp, #2816]	; 0xb00
   254e8:	lsr	ip, r5, #18
   254ec:	mov	r2, r4
   254f0:	str	ip, [sp, #48]	; 0x30
   254f4:	adds	r4, r6, r0
   254f8:	orr	lr, lr, r5, lsl #18
   254fc:	mov	r3, r5
   25500:	str	lr, [sp, #2808]	; 0xaf8
   25504:	lsr	lr, r5, #14
   25508:	adc	r5, r7, r1
   2550c:	ldr	r1, [sp, #48]	; 0x30
   25510:	orr	lr, lr, r2, lsl #18
   25514:	strd	r4, [sp, #72]	; 0x48
   25518:	str	lr, [sp, #2812]	; 0xafc
   2551c:	ldrd	r4, [sp, #80]	; 0x50
   25520:	orr	lr, r1, r2, lsl #14
   25524:	ldrd	r0, [sp, #128]	; 0x80
   25528:	lsl	r6, r3, #23
   2552c:	lsr	r7, sl, #28
   25530:	orr	r7, r7, fp, lsl #4
   25534:	str	lr, [sp, #2820]	; 0xb04
   25538:	orr	lr, r6, r2, lsr #9
   2553c:	eor	r0, r0, r4
   25540:	eor	r1, r1, r5
   25544:	lsl	ip, fp, #30
   25548:	mov	r5, r3
   2554c:	mov	r4, r2
   25550:	str	lr, [sp, #2828]	; 0xb0c
   25554:	str	r7, [sp, #2832]	; 0xb10
   25558:	lsl	lr, r2, #23
   2555c:	ldrd	r6, [sp, #72]	; 0x48
   25560:	b	25580 <__assert_fail@plt+0x14294>
   25564:	nop			; (mov r0, r0)
   25568:	cdp	15, 6, cr13, cr6, cr11, {5}
   2556c:	ldmdals	lr!, {r1, r4, r6, r8, ip, lr}
   25570:	lfmcs	f3, 4, [r4, #64]!	; 0x40
   25574:	ldmdage	r1!, {r0, r2, r3, r5, r6, r9, sl, lr, pc}
   25578:	ldmls	fp!, {r0, r1, r2, r3, r4, r5, r8, sp}^
   2557c:	andlt	r2, r3, r8, asr #15
   25580:	sub	r3, pc, #24
   25584:	ldrd	r2, [r3]
   25588:	orr	ip, ip, sl, lsr #2
   2558c:	str	ip, [sp, #2844]	; 0xb1c
   25590:	lsr	ip, fp, #28
   25594:	adds	r2, r2, r6
   25598:	orr	ip, ip, sl, lsl #4
   2559c:	adc	r3, r3, r7
   255a0:	str	ip, [sp, #2836]	; 0xb14
   255a4:	mov	r7, r5
   255a8:	ldr	ip, [sp, #160]	; 0xa0
   255ac:	and	r5, r5, r1
   255b0:	mov	r1, r5
   255b4:	orr	lr, lr, r7, lsr #9
   255b8:	lsl	r5, sl, #30
   255bc:	and	r4, r4, r0
   255c0:	mov	r0, r4
   255c4:	str	lr, [sp, #2824]	; 0xb08
   255c8:	lsl	r4, fp, #25
   255cc:	lsr	lr, ip, #1
   255d0:	orr	ip, r5, fp, lsr #2
   255d4:	str	ip, [sp, #2840]	; 0xb18
   255d8:	orr	ip, r4, sl, lsr #7
   255dc:	str	ip, [sp, #2852]	; 0xb24
   255e0:	lsl	ip, sl, #25
   255e4:	str	ip, [sp, #48]	; 0x30
   255e8:	ldrd	r6, [sp, #152]	; 0x98
   255ec:	add	ip, sp, #2800	; 0xaf0
   255f0:	add	ip, ip, #8
   255f4:	adds	r6, r6, r2
   255f8:	adc	r7, r7, r3
   255fc:	mov	r2, r6
   25600:	mov	r3, r7
   25604:	ldrd	r6, [sp, #80]	; 0x50
   25608:	eor	r6, r6, r0
   2560c:	eor	r7, r7, r1
   25610:	mov	r0, r6
   25614:	mov	r1, r7
   25618:	ldrd	r6, [ip]
   2561c:	add	ip, sp, #2816	; 0xb00
   25620:	adds	r2, r2, r0
   25624:	ldrd	r4, [ip]
   25628:	adc	r3, r3, r1
   2562c:	add	r1, sp, #2816	; 0xb00
   25630:	eor	r6, r6, r4
   25634:	eor	r7, r7, r5
   25638:	add	r1, r1, #8
   2563c:	ldrd	r4, [sp, #160]	; 0xa0
   25640:	ldrd	r0, [r1]
   25644:	orr	lr, lr, r5, lsl #31
   25648:	str	lr, [sp, #2856]	; 0xb28
   2564c:	lsr	lr, r4, #8
   25650:	orr	ip, lr, r5, lsl #24
   25654:	eor	r0, r0, r6
   25658:	eor	r1, r1, r7
   2565c:	str	ip, [sp, #2864]	; 0xb30
   25660:	add	lr, sp, #2832	; 0xb10
   25664:	lsr	ip, r4, #7
   25668:	str	ip, [sp, #392]	; 0x188
   2566c:	add	lr, lr, #8
   25670:	ldr	ip, [sp, #48]	; 0x30
   25674:	strd	r0, [sp, #48]	; 0x30
   25678:	add	r1, sp, #2832	; 0xb10
   2567c:	ldrd	r6, [lr]
   25680:	ldrd	r0, [r1]
   25684:	ldrd	r4, [sp, #32]
   25688:	orr	ip, ip, fp, lsr #7
   2568c:	eor	r0, r0, r6
   25690:	eor	r1, r1, r7
   25694:	ldrd	r6, [sp, #192]	; 0xc0
   25698:	orr	r4, r4, sl
   2569c:	orr	r5, r5, fp
   256a0:	str	ip, [sp, #2848]	; 0xb20
   256a4:	and	r6, r6, r4
   256a8:	ldr	ip, [sp, #164]	; 0xa4
   256ac:	and	r7, r7, r5
   256b0:	mov	r4, r6
   256b4:	mov	r5, r7
   256b8:	ldrd	r6, [sp, #160]	; 0xa0
   256bc:	lsr	ip, ip, #1
   256c0:	orr	ip, ip, r6, lsl #31
   256c4:	str	ip, [sp, #2860]	; 0xb2c
   256c8:	lsr	ip, r7, #8
   256cc:	orr	ip, ip, r6, lsl #24
   256d0:	str	ip, [sp, #2868]	; 0xb34
   256d4:	ldr	ip, [sp, #392]	; 0x188
   256d8:	orr	ip, ip, r7, lsl #25
   256dc:	ldrd	r6, [sp, #40]	; 0x28
   256e0:	str	ip, [sp, #392]	; 0x188
   256e4:	lsr	lr, r6, #6
   256e8:	lsr	ip, r6, #19
   256ec:	ldrd	r6, [sp, #48]	; 0x30
   256f0:	str	lr, [sp, #400]	; 0x190
   256f4:	adds	r6, r6, r2
   256f8:	adc	r7, r7, r3
   256fc:	ldrd	r2, [sp, #32]
   25700:	and	r2, r2, sl
   25704:	and	r3, r3, fp
   25708:	strd	r2, [sp, #152]	; 0x98
   2570c:	add	r3, sp, #2848	; 0xb20
   25710:	ldrd	r2, [r3]
   25714:	eor	r2, r2, r0
   25718:	eor	r3, r3, r1
   2571c:	ldrd	r0, [sp, #40]	; 0x28
   25720:	strd	r2, [sp, #48]	; 0x30
   25724:	ldrd	r2, [sp, #152]	; 0x98
   25728:	orr	ip, ip, r1, lsl #13
   2572c:	str	ip, [sp, #2872]	; 0xb38
   25730:	orr	r3, r3, r5
   25734:	mov	r5, r3
   25738:	lsl	r3, r1, #3
   2573c:	orr	r3, r3, r0, lsr #29
   25740:	str	r3, [sp, #2884]	; 0xb44
   25744:	ldr	r3, [sp, #164]	; 0xa4
   25748:	ldr	ip, [sp, #400]	; 0x190
   2574c:	orr	r2, r2, r4
   25750:	lsr	r3, r3, #7
   25754:	str	r3, [sp, #396]	; 0x18c
   25758:	lsl	r3, r0, #3
   2575c:	adds	r0, r8, r6
   25760:	mov	r4, r2
   25764:	orr	ip, ip, r1, lsl #26
   25768:	lsr	r2, r1, #19
   2576c:	adc	r1, r9, r7
   25770:	str	ip, [sp, #400]	; 0x190
   25774:	add	ip, sp, #2848	; 0xb20
   25778:	strd	r0, [sp, #152]	; 0x98
   2577c:	add	ip, ip, #8
   25780:	ldrd	r0, [sp, #48]	; 0x30
   25784:	ldrd	r8, [ip]
   25788:	add	ip, sp, #2864	; 0xb30
   2578c:	adds	r0, r0, r4
   25790:	adc	r1, r1, r5
   25794:	ldrd	r4, [ip]
   25798:	eor	r8, r8, r4
   2579c:	eor	r9, r9, r5
   257a0:	ldrd	r4, [sp, #40]	; 0x28
   257a4:	orr	r3, r3, r5, lsr #29
   257a8:	str	r3, [sp, #2880]	; 0xb40
   257ac:	add	r3, sp, #392	; 0x188
   257b0:	orr	ip, r2, r4, lsl #13
   257b4:	ldrd	r2, [r3]
   257b8:	str	ip, [sp, #2876]	; 0xb3c
   257bc:	eor	r2, r2, r8
   257c0:	eor	r3, r3, r9
   257c4:	mov	r8, r2
   257c8:	mov	r9, r3
   257cc:	adds	r2, r0, r6
   257d0:	lsr	r3, r5, #6
   257d4:	str	r3, [sp, #404]	; 0x194
   257d8:	adc	r3, r1, r7
   257dc:	ldrd	r6, [sp, #184]	; 0xb8
   257e0:	strd	r2, [sp, #216]	; 0xd8
   257e4:	add	r3, sp, #2864	; 0xb30
   257e8:	add	r3, r3, #8
   257ec:	ldrd	r0, [r3]
   257f0:	add	r3, sp, #2880	; 0xb40
   257f4:	ldrd	r4, [sp, #152]	; 0x98
   257f8:	ldrd	r2, [r3]
   257fc:	lsr	lr, r4, #14
   25800:	eor	r0, r0, r2
   25804:	eor	r1, r1, r3
   25808:	ldrd	r2, [sp, #120]	; 0x78
   2580c:	lsr	ip, r4, #18
   25810:	lsr	r4, r5, #18
   25814:	adds	r2, r2, r8
   25818:	adc	r3, r3, r9
   2581c:	mov	r9, r3
   25820:	add	r3, sp, #400	; 0x190
   25824:	mov	r8, r2
   25828:	ldrd	r2, [r3]
   2582c:	adds	r6, r6, r8
   25830:	adc	r7, r7, r9
   25834:	eor	r2, r2, r0
   25838:	eor	r3, r3, r1
   2583c:	adds	r6, r6, r2
   25840:	mov	r1, r3
   25844:	mov	r9, r7
   25848:	adc	r7, r9, r1
   2584c:	ldrd	r0, [sp, #152]	; 0x98
   25850:	orr	r3, lr, r5, lsl #18
   25854:	str	r3, [sp, #2888]	; 0xb48
   25858:	lsr	lr, r5, #14
   2585c:	orr	r3, ip, r5, lsl #14
   25860:	str	r3, [sp, #2896]	; 0xb50
   25864:	orr	r3, lr, r0, lsl #18
   25868:	str	r3, [sp, #2892]	; 0xb4c
   2586c:	orr	r3, r4, r0, lsl #14
   25870:	strd	r6, [sp, #120]	; 0x78
   25874:	str	r3, [sp, #2900]	; 0xb54
   25878:	lsl	r6, r1, #23
   2587c:	ldrd	r2, [sp, #208]	; 0xd0
   25880:	ldrd	r0, [sp, #128]	; 0x80
   25884:	ldrd	r8, [sp, #216]	; 0xd8
   25888:	eor	r1, r1, r3
   2588c:	ldr	r3, [sp, #152]	; 0x98
   25890:	lsr	r5, r8, #28
   25894:	lsl	ip, r9, #30
   25898:	orr	r3, r6, r3, lsr #9
   2589c:	ldrd	r6, [sp, #152]	; 0x98
   258a0:	str	r3, [sp, #2908]	; 0xb5c
   258a4:	orr	r3, r5, r9, lsl #4
   258a8:	str	r3, [sp, #2912]	; 0xb60
   258ac:	orr	r3, ip, r8, lsr #2
   258b0:	ldrd	r4, [sp, #120]	; 0x78
   258b4:	eor	r0, r0, r2
   258b8:	str	r3, [sp, #2924]	; 0xb6c
   258bc:	lsr	ip, r9, #28
   258c0:	sub	r3, pc, #848	; 0x350
   258c4:	ldrd	r2, [r3]
   258c8:	and	r7, r7, r1
   258cc:	mov	r1, r7
   258d0:	orr	ip, ip, r8, lsl #4
   258d4:	ldr	r7, [sp, #156]	; 0x9c
   258d8:	str	ip, [sp, #2916]	; 0xb64
   258dc:	ldr	ip, [sp, #168]	; 0xa8
   258e0:	adds	r2, r2, r4
   258e4:	lsl	lr, r6, #23
   258e8:	adc	r3, r3, r5
   258ec:	orr	lr, lr, r7, lsr #9
   258f0:	lsl	r5, r8, #30
   258f4:	str	lr, [sp, #2904]	; 0xb58
   258f8:	lsl	r4, r9, #25
   258fc:	lsr	lr, ip, #1
   25900:	orr	ip, r5, r9, lsr #2
   25904:	str	ip, [sp, #2920]	; 0xb68
   25908:	and	r6, r6, r0
   2590c:	orr	ip, r4, r8, lsr #7
   25910:	mov	r0, r6
   25914:	str	ip, [sp, #2932]	; 0xb74
   25918:	ldrd	r6, [sp, #128]	; 0x80
   2591c:	lsl	ip, r8, #25
   25920:	str	ip, [sp, #48]	; 0x30
   25924:	ldrd	r4, [sp, #80]	; 0x50
   25928:	add	ip, sp, #2880	; 0xb40
   2592c:	add	ip, ip, #8
   25930:	eor	r6, r6, r0
   25934:	eor	r7, r7, r1
   25938:	adds	r4, r4, r2
   2593c:	mov	r0, r6
   25940:	mov	r1, r7
   25944:	ldrd	r6, [ip]
   25948:	add	ip, sp, #2896	; 0xb50
   2594c:	adc	r5, r5, r3
   25950:	mov	r2, r4
   25954:	mov	r3, r5
   25958:	ldrd	r4, [ip]
   2595c:	adds	r2, r2, r0
   25960:	adc	r3, r3, r1
   25964:	eor	r6, r6, r4
   25968:	eor	r7, r7, r5
   2596c:	ldrd	r4, [sp, #168]	; 0xa8
   25970:	add	r1, sp, #2896	; 0xb50
   25974:	add	r1, r1, #8
   25978:	orr	lr, lr, r5, lsl #31
   2597c:	ldrd	r0, [r1]
   25980:	str	lr, [sp, #2936]	; 0xb78
   25984:	lsr	lr, r4, #8
   25988:	orr	ip, lr, r5, lsl #24
   2598c:	ldr	lr, [sp, #48]	; 0x30
   25990:	str	ip, [sp, #2944]	; 0xb80
   25994:	lsr	ip, r4, #7
   25998:	str	ip, [sp, #408]	; 0x198
   2599c:	eor	r1, r1, r7
   259a0:	orr	ip, lr, r9, lsr #7
   259a4:	add	lr, sp, #2912	; 0xb60
   259a8:	mov	r7, r1
   259ac:	add	lr, lr, #8
   259b0:	add	r1, sp, #2912	; 0xb60
   259b4:	eor	r0, r0, r6
   259b8:	orr	r4, r8, sl
   259bc:	orr	r5, r9, fp
   259c0:	mov	r6, r0
   259c4:	ldrd	r8, [lr]
   259c8:	ldrd	r0, [r1]
   259cc:	str	ip, [sp, #2928]	; 0xb70
   259d0:	ldr	ip, [sp, #172]	; 0xac
   259d4:	eor	r0, r0, r8
   259d8:	eor	r1, r1, r9
   259dc:	ldrd	r8, [sp, #32]
   259e0:	lsr	ip, ip, #1
   259e4:	adds	r6, r6, r2
   259e8:	and	r8, r8, r4
   259ec:	and	r9, r9, r5
   259f0:	mov	r4, r8
   259f4:	mov	r5, r9
   259f8:	ldrd	r8, [sp, #168]	; 0xa8
   259fc:	adc	r7, r7, r3
   25a00:	ldrd	r2, [sp, #216]	; 0xd8
   25a04:	orr	ip, ip, r8, lsl #31
   25a08:	str	ip, [sp, #2940]	; 0xb7c
   25a0c:	lsr	ip, r9, #8
   25a10:	orr	ip, ip, r8, lsl #24
   25a14:	str	ip, [sp, #2948]	; 0xb84
   25a18:	ldr	ip, [sp, #408]	; 0x198
   25a1c:	and	r2, r2, sl
   25a20:	orr	ip, ip, r9, lsl #25
   25a24:	ldrd	r8, [sp, #72]	; 0x48
   25a28:	and	r3, r3, fp
   25a2c:	str	ip, [sp, #408]	; 0x198
   25a30:	lsr	lr, r8, #6
   25a34:	str	lr, [sp, #416]	; 0x1a0
   25a38:	strd	r2, [sp, #48]	; 0x30
   25a3c:	add	r3, sp, #2928	; 0xb70
   25a40:	lsr	ip, r8, #19
   25a44:	ldrd	r2, [r3]
   25a48:	orr	ip, ip, r9, lsl #13
   25a4c:	str	ip, [sp, #2952]	; 0xb88
   25a50:	eor	r2, r2, r0
   25a54:	eor	r3, r3, r1
   25a58:	mov	r0, r2
   25a5c:	mov	r1, r3
   25a60:	ldrd	r2, [sp, #48]	; 0x30
   25a64:	ldr	ip, [sp, #76]	; 0x4c
   25a68:	ldr	lr, [sp, #172]	; 0xac
   25a6c:	orr	r3, r3, r5
   25a70:	mov	r5, r3
   25a74:	lsl	r3, r9, #3
   25a78:	orr	r3, r3, r8, lsr #29
   25a7c:	str	r3, [sp, #2964]	; 0xb94
   25a80:	add	r3, sp, #2928	; 0xb70
   25a84:	add	r3, r3, #8
   25a88:	ldrd	r8, [r3]
   25a8c:	add	r3, sp, #2944	; 0xb80
   25a90:	orr	r2, r2, r4
   25a94:	mov	r4, r2
   25a98:	ldrd	r2, [r3]
   25a9c:	lsr	lr, lr, #7
   25aa0:	str	lr, [sp, #412]	; 0x19c
   25aa4:	eor	r9, r9, r3
   25aa8:	ldr	r3, [sp, #416]	; 0x1a0
   25aac:	eor	r8, r8, r2
   25ab0:	orr	r3, r3, ip, lsl #26
   25ab4:	str	r3, [sp, #416]	; 0x1a0
   25ab8:	ldrd	r2, [sp, #192]	; 0xc0
   25abc:	adds	r2, r2, r6
   25ac0:	adc	r3, r3, r7
   25ac4:	adds	r4, r4, r0
   25ac8:	adc	r5, r5, r1
   25acc:	ldrd	r0, [sp, #72]	; 0x48
   25ad0:	strd	r2, [sp, #192]	; 0xc0
   25ad4:	lsr	r2, r1, #19
   25ad8:	add	r1, sp, #408	; 0x198
   25adc:	lsl	r3, r0, #3
   25ae0:	ldrd	r0, [r1]
   25ae4:	eor	r0, r0, r8
   25ae8:	eor	r1, r1, r9
   25aec:	ldrd	r8, [sp, #72]	; 0x48
   25af0:	orr	r3, r3, r9, lsr #29
   25af4:	str	r3, [sp, #2960]	; 0xb90
   25af8:	lsr	r3, r9, #6
   25afc:	orr	ip, r2, r8, lsl #13
   25b00:	str	r3, [sp, #420]	; 0x1a4
   25b04:	ldrd	r2, [sp, #160]	; 0xa0
   25b08:	adds	r8, r4, r6
   25b0c:	adc	r9, r5, r7
   25b10:	adds	r2, r2, r0
   25b14:	adc	r3, r3, r1
   25b18:	mov	r1, r3
   25b1c:	add	r3, sp, #2944	; 0xb80
   25b20:	str	ip, [sp, #2956]	; 0xb8c
   25b24:	add	r3, r3, #8
   25b28:	add	ip, sp, #2960	; 0xb90
   25b2c:	mov	r0, r2
   25b30:	ldrd	r4, [ip]
   25b34:	ldrd	r2, [r3]
   25b38:	ldrd	r6, [sp, #192]	; 0xc0
   25b3c:	eor	r2, r2, r4
   25b40:	eor	r3, r3, r5
   25b44:	mov	r4, r2
   25b48:	mov	r5, r3
   25b4c:	ldrd	r2, [sp, #112]	; 0x70
   25b50:	lsr	lr, r6, #14
   25b54:	lsr	ip, r6, #18
   25b58:	adds	r2, r2, r0
   25b5c:	adc	r3, r3, r1
   25b60:	mov	r1, r3
   25b64:	add	r3, sp, #416	; 0x1a0
   25b68:	mov	r0, r2
   25b6c:	ldrd	r2, [r3]
   25b70:	lsr	r6, r7, #18
   25b74:	eor	r3, r3, r5
   25b78:	mov	r5, r3
   25b7c:	eor	r2, r2, r4
   25b80:	orr	r3, lr, r7, lsl #18
   25b84:	adds	r2, r0, r2
   25b88:	str	r3, [sp, #2968]	; 0xb98
   25b8c:	orr	r3, ip, r7, lsl #14
   25b90:	str	r3, [sp, #2976]	; 0xba0
   25b94:	adc	r3, r1, r5
   25b98:	ldrd	r0, [sp, #192]	; 0xc0
   25b9c:	lsr	lr, r7, #14
   25ba0:	lsr	r4, r8, #28
   25ba4:	orr	lr, lr, r0, lsl #18
   25ba8:	lsl	r5, r1, #23
   25bac:	str	lr, [sp, #2972]	; 0xb9c
   25bb0:	orr	lr, r6, r0, lsl #14
   25bb4:	ldrd	r0, [sp, #152]	; 0x98
   25bb8:	ldrd	r6, [sp, #208]	; 0xd0
   25bbc:	str	lr, [sp, #2980]	; 0xba4
   25bc0:	lsl	ip, r9, #30
   25bc4:	eor	r0, r0, r6
   25bc8:	eor	r1, r1, r7
   25bcc:	ldrd	r6, [sp, #192]	; 0xc0
   25bd0:	orr	ip, ip, r8, lsr #2
   25bd4:	str	ip, [sp, #3004]	; 0xbbc
   25bd8:	orr	lr, r5, r6, lsr #9
   25bdc:	orr	r5, r4, r9, lsl #4
   25be0:	str	r5, [sp, #2992]	; 0xbb0
   25be4:	add	r5, pc, #844	; 0x34c
   25be8:	ldrd	r4, [r5]
   25bec:	lsr	ip, r9, #28
   25bf0:	str	lr, [sp, #2988]	; 0xbac
   25bf4:	adds	r4, r4, r2
   25bf8:	adc	r5, r5, r3
   25bfc:	orr	ip, ip, r8, lsl #4
   25c00:	lsl	lr, r6, #23
   25c04:	strd	r2, [sp, #176]	; 0xb0
   25c08:	orr	lr, lr, r7, lsr #9
   25c0c:	mov	r2, r4
   25c10:	mov	r3, r5
   25c14:	str	ip, [sp, #2996]	; 0xbb4
   25c18:	mov	r4, r6
   25c1c:	ldr	ip, [sp, #88]	; 0x58
   25c20:	mov	r5, r7
   25c24:	ldrd	r6, [sp, #128]	; 0x80
   25c28:	and	r5, r5, r1
   25c2c:	mov	r1, r5
   25c30:	and	r4, r4, r0
   25c34:	lsl	r5, r8, #30
   25c38:	adds	r6, r6, r2
   25c3c:	mov	r0, r4
   25c40:	str	lr, [sp, #2984]	; 0xba8
   25c44:	lsl	r4, r9, #25
   25c48:	lsr	lr, ip, #1
   25c4c:	orr	ip, r5, r9, lsr #2
   25c50:	str	ip, [sp, #3000]	; 0xbb8
   25c54:	adc	r7, r7, r3
   25c58:	orr	ip, r4, r8, lsr #7
   25c5c:	str	ip, [sp, #3012]	; 0xbc4
   25c60:	mov	r2, r6
   25c64:	lsl	ip, r8, #25
   25c68:	mov	r3, r7
   25c6c:	ldrd	r6, [sp, #208]	; 0xd0
   25c70:	str	ip, [sp, #48]	; 0x30
   25c74:	add	ip, sp, #2960	; 0xb90
   25c78:	add	ip, ip, #8
   25c7c:	eor	r6, r6, r0
   25c80:	eor	r7, r7, r1
   25c84:	mov	r0, r6
   25c88:	mov	r1, r7
   25c8c:	ldrd	r6, [ip]
   25c90:	add	ip, sp, #2976	; 0xba0
   25c94:	adds	r2, r2, r0
   25c98:	ldrd	r4, [ip]
   25c9c:	adc	r3, r3, r1
   25ca0:	add	r1, sp, #2976	; 0xba0
   25ca4:	eor	r6, r6, r4
   25ca8:	eor	r7, r7, r5
   25cac:	ldrd	r4, [sp, #88]	; 0x58
   25cb0:	add	r1, r1, #8
   25cb4:	orr	lr, lr, r5, lsl #31
   25cb8:	str	lr, [sp, #3016]	; 0xbc8
   25cbc:	lsr	lr, r4, #8
   25cc0:	orr	ip, lr, r5, lsl #24
   25cc4:	str	ip, [sp, #3024]	; 0xbd0
   25cc8:	lsr	ip, r4, #7
   25ccc:	ldrd	r4, [sp, #216]	; 0xd8
   25cd0:	str	ip, [sp, #424]	; 0x1a8
   25cd4:	ldr	ip, [sp, #48]	; 0x30
   25cd8:	add	lr, sp, #2992	; 0xbb0
   25cdc:	orr	r4, r4, r8
   25ce0:	orr	r5, r5, r9
   25ce4:	orr	ip, ip, r9, lsr #7
   25ce8:	add	lr, lr, #8
   25cec:	str	ip, [sp, #3008]	; 0xbc0
   25cf0:	ldr	ip, [sp, #92]	; 0x5c
   25cf4:	strd	r4, [sp, #80]	; 0x50
   25cf8:	ldrd	r0, [r1]
   25cfc:	ldrd	r4, [lr]
   25d00:	ldr	lr, [sp, #88]	; 0x58
   25d04:	lsr	ip, ip, #1
   25d08:	eor	r1, r1, r7
   25d0c:	orr	ip, ip, lr, lsl #31
   25d10:	mov	r7, r1
   25d14:	str	ip, [sp, #3020]	; 0xbcc
   25d18:	add	r1, sp, #2992	; 0xbb0
   25d1c:	ldr	ip, [sp, #92]	; 0x5c
   25d20:	eor	r0, r0, r6
   25d24:	mov	r6, r0
   25d28:	ldrd	r0, [r1]
   25d2c:	lsr	ip, ip, #8
   25d30:	adds	r6, r6, r2
   25d34:	orr	ip, ip, lr, lsl #24
   25d38:	adc	r7, r7, r3
   25d3c:	eor	r0, r0, r4
   25d40:	eor	r1, r1, r5
   25d44:	str	ip, [sp, #3028]	; 0xbd4
   25d48:	ldrd	r4, [sp, #80]	; 0x50
   25d4c:	ldr	ip, [sp, #424]	; 0x1a8
   25d50:	ldrd	r2, [sp, #216]	; 0xd8
   25d54:	ldr	lr, [sp, #92]	; 0x5c
   25d58:	and	r4, r4, sl
   25d5c:	and	r2, r2, r8
   25d60:	and	r3, r3, r9
   25d64:	and	r5, r5, fp
   25d68:	strd	r2, [sp, #48]	; 0x30
   25d6c:	add	r3, sp, #3008	; 0xbc0
   25d70:	orr	ip, ip, lr, lsl #25
   25d74:	ldrd	r2, [r3]
   25d78:	str	ip, [sp, #424]	; 0x1a8
   25d7c:	ldr	lr, [sp, #120]	; 0x78
   25d80:	eor	r2, r2, r0
   25d84:	eor	r3, r3, r1
   25d88:	mov	r0, r2
   25d8c:	mov	r1, r3
   25d90:	ldrd	r2, [sp, #48]	; 0x30
   25d94:	ldr	ip, [sp, #120]	; 0x78
   25d98:	lsr	lr, lr, #6
   25d9c:	orr	r2, r2, r4
   25da0:	orr	r3, r3, r5
   25da4:	ldrd	r4, [sp, #120]	; 0x78
   25da8:	strd	r2, [sp, #48]	; 0x30
   25dac:	lsr	ip, ip, #19
   25db0:	lsl	r3, r5, #3
   25db4:	orr	r3, r3, r4, lsr #29
   25db8:	str	r3, [sp, #3044]	; 0xbe4
   25dbc:	ldr	r3, [sp, #92]	; 0x5c
   25dc0:	str	lr, [sp, #432]	; 0x1b0
   25dc4:	orr	ip, ip, r5, lsl #13
   25dc8:	str	ip, [sp, #3032]	; 0xbd8
   25dcc:	ldr	ip, [sp, #432]	; 0x1b0
   25dd0:	lsr	r3, r3, #7
   25dd4:	lsr	r2, r5, #19
   25dd8:	str	r3, [sp, #428]	; 0x1ac
   25ddc:	orr	ip, ip, r5, lsl #26
   25de0:	lsl	r3, r4, #3
   25de4:	ldrd	r4, [sp, #32]
   25de8:	str	ip, [sp, #432]	; 0x1b0
   25dec:	adds	r4, r4, r6
   25df0:	adc	r5, r5, r7
   25df4:	strd	r4, [sp, #128]	; 0x80
   25df8:	ldrd	r4, [sp, #48]	; 0x30
   25dfc:	adds	r4, r4, r0
   25e00:	adc	r5, r5, r1
   25e04:	add	r1, sp, #3008	; 0xbc0
   25e08:	add	r1, r1, #8
   25e0c:	strd	r4, [sp, #32]
   25e10:	ldrd	r4, [r1]
   25e14:	add	r1, sp, #3024	; 0xbd0
   25e18:	ldrd	r0, [r1]
   25e1c:	eor	r4, r4, r0
   25e20:	eor	r5, r5, r1
   25e24:	ldrd	r0, [sp, #120]	; 0x78
   25e28:	orr	ip, r2, r0, lsl #13
   25e2c:	orr	r3, r3, r1, lsr #29
   25e30:	str	ip, [sp, #3036]	; 0xbdc
   25e34:	str	r3, [sp, #3040]	; 0xbe0
   25e38:	lsr	ip, r1, #6
   25e3c:	add	r3, sp, #424	; 0x1a8
   25e40:	ldrd	r0, [sp, #32]
   25e44:	ldrd	r2, [r3]
   25e48:	str	ip, [sp, #436]	; 0x1b4
   25e4c:	adds	r0, r0, r6
   25e50:	adc	r1, r1, r7
   25e54:	eor	r3, r3, r5
   25e58:	mov	r5, r1
   25e5c:	add	r1, sp, #3024	; 0xbd0
   25e60:	eor	r2, r2, r4
   25e64:	add	ip, sp, #3040	; 0xbe0
   25e68:	mov	r4, r0
   25e6c:	add	r1, r1, #8
   25e70:	strd	r4, [sp, #200]	; 0xc8
   25e74:	ldrd	r0, [r1]
   25e78:	ldrd	r4, [ip]
   25e7c:	ldrd	r6, [sp, #168]	; 0xa8
   25e80:	eor	r0, r0, r4
   25e84:	adds	r6, r6, r2
   25e88:	adc	r7, r7, r3
   25e8c:	eor	r1, r1, r5
   25e90:	mov	r4, r6
   25e94:	mov	r5, r7
   25e98:	ldrd	r6, [sp, #128]	; 0x80
   25e9c:	add	r3, sp, #432	; 0x1b0
   25ea0:	lsr	lr, r6, #14
   25ea4:	lsr	ip, r6, #18
   25ea8:	ldrd	r6, [sp, #104]	; 0x68
   25eac:	ldrd	r2, [r3]
   25eb0:	adds	r6, r6, r4
   25eb4:	adc	r7, r7, r5
   25eb8:	ldrd	r4, [sp, #128]	; 0x80
   25ebc:	eor	r3, r3, r1
   25ec0:	mov	r1, r3
   25ec4:	eor	r2, r2, r0
   25ec8:	orr	r3, lr, r5, lsl #18
   25ecc:	adds	r2, r6, r2
   25ed0:	str	r3, [sp, #3048]	; 0xbe8
   25ed4:	orr	r3, ip, r5, lsl #14
   25ed8:	str	r3, [sp, #3056]	; 0xbf0
   25edc:	ldr	ip, [sp, #132]	; 0x84
   25ee0:	adc	r3, r7, r1
   25ee4:	ldrd	r0, [sp, #200]	; 0xc8
   25ee8:	lsl	r6, ip, #23
   25eec:	lsr	lr, r5, #14
   25ef0:	lsr	ip, r0, #28
   25ef4:	str	ip, [sp, #32]
   25ef8:	lsl	ip, r1, #30
   25efc:	ldrd	r0, [sp, #128]	; 0x80
   25f00:	lsr	r4, r5, #18
   25f04:	strd	r2, [sp, #80]	; 0x50
   25f08:	orr	lr, lr, r0, lsl #18
   25f0c:	str	lr, [sp, #3052]	; 0xbec
   25f10:	orr	lr, r4, r0, lsl #14
   25f14:	ldrd	r0, [sp, #192]	; 0xc0
   25f18:	ldrd	r4, [sp, #152]	; 0x98
   25f1c:	str	lr, [sp, #3060]	; 0xbf4
   25f20:	eor	r4, r4, r0
   25f24:	eor	r5, r5, r1
   25f28:	mov	r0, r4
   25f2c:	mov	r1, r5
   25f30:	ldrd	r4, [sp, #128]	; 0x80
   25f34:	b	25f48 <__assert_fail@plt+0x14c5c>
   25f38:	cdplt	14, 14, cr0, cr15, cr4, {7}
   25f3c:	svclt	0x00597fc7
   25f40:	stccc	15, cr8, [r8, #776]!	; 0x308
   25f44:			; <UNDEFINED> instruction: 0xc6e00bf3
   25f48:	orr	lr, r6, r4, lsr #9
   25f4c:	ldrd	r6, [sp, #200]	; 0xc8
   25f50:	str	lr, [sp, #3068]	; 0xbfc
   25f54:	lsl	lr, r4, #23
   25f58:	ldr	r4, [sp, #32]
   25f5c:	orr	ip, ip, r6, lsr #2
   25f60:	orr	r5, r4, r7, lsl #4
   25f64:	str	r5, [sp, #3072]	; 0xc00
   25f68:	sub	r5, pc, #48	; 0x30
   25f6c:	ldrd	r4, [r5]
   25f70:	str	ip, [sp, #3084]	; 0xc0c
   25f74:	lsr	ip, r7, #28
   25f78:	adds	r4, r4, r2
   25f7c:	adc	r5, r5, r3
   25f80:	mov	r2, r4
   25f84:	mov	r3, r5
   25f88:	ldrd	r4, [sp, #128]	; 0x80
   25f8c:	orr	ip, ip, r6, lsl #4
   25f90:	str	ip, [sp, #3076]	; 0xc04
   25f94:	and	r4, r4, r0
   25f98:	mov	r0, r4
   25f9c:	ldr	r4, [sp, #132]	; 0x84
   25fa0:	ldr	ip, [sp, #56]	; 0x38
   25fa4:	and	r5, r5, r1
   25fa8:	mov	r1, r5
   25fac:	orr	lr, lr, r4, lsr #9
   25fb0:	lsl	r5, r6, #30
   25fb4:	lsl	r4, r7, #25
   25fb8:	str	lr, [sp, #3064]	; 0xbf8
   25fbc:	lsr	lr, ip, #1
   25fc0:	orr	ip, r5, r7, lsr #2
   25fc4:	str	ip, [sp, #3080]	; 0xc08
   25fc8:	orr	ip, r4, r6, lsr #7
   25fcc:	mov	r5, r7
   25fd0:	str	ip, [sp, #3092]	; 0xc14
   25fd4:	mov	r4, r6
   25fd8:	lsl	ip, r6, #25
   25fdc:	ldrd	r6, [sp, #208]	; 0xd0
   25fe0:	orr	r4, r4, r8
   25fe4:	adds	r6, r6, r2
   25fe8:	adc	r7, r7, r3
   25fec:	mov	r2, r6
   25ff0:	mov	r3, r7
   25ff4:	ldrd	r6, [sp, #152]	; 0x98
   25ff8:	eor	r7, r7, r1
   25ffc:	add	r1, sp, #3040	; 0xbe0
   26000:	eor	r6, r6, r0
   26004:	add	r1, r1, #8
   26008:	strd	r6, [sp, #32]
   2600c:	ldrd	r6, [r1]
   26010:	add	r1, sp, #3056	; 0xbf0
   26014:	ldrd	r0, [r1]
   26018:	eor	r7, r7, r1
   2601c:	ldr	r1, [sp, #60]	; 0x3c
   26020:	eor	r6, r6, r0
   26024:	orr	lr, lr, r1, lsl #31
   26028:	ldrd	r0, [sp, #56]	; 0x38
   2602c:	str	lr, [sp, #3096]	; 0xc18
   26030:	lsr	lr, r0, #8
   26034:	orr	lr, lr, r1, lsl #24
   26038:	mov	r1, r5
   2603c:	str	lr, [sp, #3104]	; 0xc20
   26040:	orr	ip, ip, r1, lsr #7
   26044:	ldrd	r0, [sp, #32]
   26048:	ldr	lr, [sp, #56]	; 0x38
   2604c:	orr	r5, r5, r9
   26050:	adds	r0, r0, r2
   26054:	adc	r1, r1, r3
   26058:	mov	r3, r1
   2605c:	add	r1, sp, #3056	; 0xbf0
   26060:	add	r1, r1, #8
   26064:	mov	r2, r0
   26068:	ldrd	r0, [r1]
   2606c:	lsr	lr, lr, #7
   26070:	str	lr, [sp, #440]	; 0x1b8
   26074:	eor	r0, r0, r6
   26078:	eor	r1, r1, r7
   2607c:	add	lr, sp, #3072	; 0xc00
   26080:	strd	r0, [sp, #32]
   26084:	add	lr, lr, #8
   26088:	add	r1, sp, #3072	; 0xc00
   2608c:	ldrd	r6, [lr]
   26090:	ldrd	r0, [r1]
   26094:	str	ip, [sp, #3088]	; 0xc10
   26098:	ldr	ip, [sp, #60]	; 0x3c
   2609c:	eor	r0, r0, r6
   260a0:	eor	r1, r1, r7
   260a4:	mov	r6, r0
   260a8:	mov	r7, r1
   260ac:	ldrd	r0, [sp, #216]	; 0xd8
   260b0:	lsr	ip, ip, #1
   260b4:	and	r0, r0, r4
   260b8:	and	r1, r1, r5
   260bc:	mov	r4, r0
   260c0:	mov	r5, r1
   260c4:	ldrd	r0, [sp, #56]	; 0x38
   260c8:	orr	ip, ip, r0, lsl #31
   260cc:	str	ip, [sp, #3100]	; 0xc1c
   260d0:	lsr	ip, r1, #8
   260d4:	orr	ip, ip, r0, lsl #24
   260d8:	str	ip, [sp, #3108]	; 0xc24
   260dc:	ldr	ip, [sp, #440]	; 0x1b8
   260e0:	orr	ip, ip, r1, lsl #25
   260e4:	ldrd	r0, [sp, #176]	; 0xb0
   260e8:	str	ip, [sp, #440]	; 0x1b8
   260ec:	lsr	lr, r0, #6
   260f0:	lsr	ip, r0, #19
   260f4:	ldrd	r0, [sp, #32]
   260f8:	str	lr, [sp, #448]	; 0x1c0
   260fc:	adds	r0, r0, r2
   26100:	adc	r1, r1, r3
   26104:	ldrd	r2, [sp, #200]	; 0xc8
   26108:	strd	r0, [sp, #32]
   2610c:	add	r1, sp, #3088	; 0xc10
   26110:	and	r3, r3, r9
   26114:	ldrd	r0, [r1]
   26118:	orr	r5, r5, r3
   2611c:	and	r2, r2, r8
   26120:	eor	r6, r6, r0
   26124:	eor	r7, r7, r1
   26128:	mov	r0, r6
   2612c:	mov	r1, r7
   26130:	orr	r4, r4, r2
   26134:	strd	r0, [sp, #48]	; 0x30
   26138:	ldrd	r0, [sp, #176]	; 0xb0
   2613c:	lsl	r3, r1, #3
   26140:	orr	r3, r3, r0, lsr #29
   26144:	str	r3, [sp, #3124]	; 0xc34
   26148:	ldr	r3, [sp, #60]	; 0x3c
   2614c:	orr	ip, ip, r1, lsl #13
   26150:	str	ip, [sp, #3112]	; 0xc28
   26154:	lsr	r3, r3, #7
   26158:	str	r3, [sp, #444]	; 0x1bc
   2615c:	ldr	ip, [sp, #448]	; 0x1c0
   26160:	mov	r7, r1
   26164:	lsr	r2, r1, #19
   26168:	mov	r6, r0
   2616c:	orr	ip, ip, r1, lsl #26
   26170:	lsl	r3, r0, #3
   26174:	ldrd	r0, [sp, #32]
   26178:	str	ip, [sp, #448]	; 0x1c0
   2617c:	add	ip, sp, #3088	; 0xc10
   26180:	adds	r0, r0, sl
   26184:	adc	r1, r1, fp
   26188:	add	ip, ip, #8
   2618c:	strd	r0, [sp, #208]	; 0xd0
   26190:	ldrd	r0, [sp, #48]	; 0x30
   26194:	ldrd	sl, [ip]
   26198:	orr	r3, r3, r7, lsr #29
   2619c:	add	ip, sp, #3104	; 0xc20
   261a0:	adds	r0, r0, r4
   261a4:	str	r3, [sp, #3120]	; 0xc30
   261a8:	add	r3, sp, #440	; 0x1b8
   261ac:	adc	r1, r1, r5
   261b0:	ldrd	r4, [ip]
   261b4:	orr	ip, r2, r6, lsl #13
   261b8:	ldrd	r2, [r3]
   261bc:	eor	sl, sl, r4
   261c0:	eor	fp, fp, r5
   261c4:	mov	r5, fp
   261c8:	eor	r2, r2, sl
   261cc:	ldrd	sl, [sp, #32]
   261d0:	str	ip, [sp, #3116]	; 0xc2c
   261d4:	lsr	ip, r7, #6
   261d8:	adds	sl, sl, r0
   261dc:	adc	fp, fp, r1
   261e0:	add	r1, sp, #3104	; 0xc20
   261e4:	str	ip, [sp, #452]	; 0x1c4
   261e8:	add	r1, r1, #8
   261ec:	add	ip, sp, #3120	; 0xc30
   261f0:	ldrd	r0, [r1]
   261f4:	ldrd	r6, [ip]
   261f8:	eor	r3, r3, r5
   261fc:	eor	r0, r0, r6
   26200:	eor	r1, r1, r7
   26204:	ldrd	r6, [sp, #88]	; 0x58
   26208:	adds	r6, r6, r2
   2620c:	adc	r7, r7, r3
   26210:	mov	r4, r6
   26214:	mov	r5, r7
   26218:	ldrd	r6, [sp, #208]	; 0xd0
   2621c:	add	r2, sp, #448	; 0x1c0
   26220:	lsr	r3, r6, #18
   26224:	lsr	lr, r6, #14
   26228:	ldrd	r6, [r2]
   2622c:	eor	r6, r6, r0
   26230:	eor	r7, r7, r1
   26234:	mov	r0, r6
   26238:	mov	r1, r7
   2623c:	ldrd	r6, [sp, #24]
   26240:	adds	r6, r6, r4
   26244:	adc	r7, r7, r5
   26248:	ldrd	r4, [sp, #208]	; 0xd0
   2624c:	orr	ip, r3, r5, lsl #14
   26250:	str	ip, [sp, #3136]	; 0xc40
   26254:	lsr	ip, r5, #18
   26258:	mov	r2, r4
   2625c:	orr	lr, lr, r5, lsl #18
   26260:	adds	r4, r6, r0
   26264:	str	ip, [sp, #32]
   26268:	mov	r3, r5
   2626c:	str	lr, [sp, #3128]	; 0xc38
   26270:	lsr	lr, r5, #14
   26274:	adc	r5, r7, r1
   26278:	ldr	r1, [sp, #32]
   2627c:	orr	lr, lr, r2, lsl #18
   26280:	strd	r4, [sp, #48]	; 0x30
   26284:	str	lr, [sp, #3132]	; 0xc3c
   26288:	ldrd	r4, [sp, #128]	; 0x80
   2628c:	orr	lr, r1, r2, lsl #14
   26290:	ldrd	r0, [sp, #192]	; 0xc0
   26294:	lsl	r6, r3, #23
   26298:	lsr	r7, sl, #28
   2629c:	orr	r7, r7, fp, lsl #4
   262a0:	str	lr, [sp, #3140]	; 0xc44
   262a4:	eor	r4, r4, r0
   262a8:	orr	lr, r6, r2, lsr #9
   262ac:	eor	r5, r5, r1
   262b0:	mov	r0, r4
   262b4:	mov	r1, r5
   262b8:	mov	r4, r2
   262bc:	mov	r5, r3
   262c0:	str	lr, [sp, #3148]	; 0xc4c
   262c4:	str	r7, [sp, #3152]	; 0xc50
   262c8:	lsl	lr, r2, #23
   262cc:	ldrd	r6, [sp, #48]	; 0x30
   262d0:	add	r3, pc, #856	; 0x358
   262d4:	ldrd	r2, [r3]
   262d8:	lsl	ip, fp, #30
   262dc:	orr	ip, ip, sl, lsr #2
   262e0:	adds	r2, r2, r6
   262e4:	adc	r3, r3, r7
   262e8:	mov	r7, r5
   262ec:	and	r7, r7, r1
   262f0:	mov	r1, r7
   262f4:	str	ip, [sp, #3164]	; 0xc5c
   262f8:	ldr	r7, [sp, #212]	; 0xd4
   262fc:	lsr	ip, fp, #28
   26300:	mov	r6, r4
   26304:	orr	ip, ip, sl, lsl #4
   26308:	and	r6, r6, r0
   2630c:	mov	r0, r6
   26310:	orr	lr, lr, r7, lsr #9
   26314:	str	ip, [sp, #3156]	; 0xc54
   26318:	ldrd	r6, [sp, #152]	; 0x98
   2631c:	ldr	ip, [sp, #16]
   26320:	lsl	r5, sl, #30
   26324:	adds	r6, r6, r2
   26328:	str	lr, [sp, #3144]	; 0xc48
   2632c:	lsl	r4, fp, #25
   26330:	lsr	lr, ip, #1
   26334:	orr	ip, r5, fp, lsr #2
   26338:	str	ip, [sp, #3160]	; 0xc58
   2633c:	adc	r7, r7, r3
   26340:	orr	ip, r4, sl, lsr #7
   26344:	str	ip, [sp, #3172]	; 0xc64
   26348:	mov	r2, r6
   2634c:	lsl	ip, sl, #25
   26350:	mov	r3, r7
   26354:	ldrd	r6, [sp, #192]	; 0xc0
   26358:	str	ip, [sp, #32]
   2635c:	add	ip, sp, #3120	; 0xc30
   26360:	add	ip, ip, #8
   26364:	eor	r6, r6, r0
   26368:	eor	r7, r7, r1
   2636c:	mov	r0, r6
   26370:	mov	r1, r7
   26374:	ldrd	r6, [ip]
   26378:	add	ip, sp, #3136	; 0xc40
   2637c:	adds	r2, r2, r0
   26380:	ldrd	r4, [ip]
   26384:	adc	r3, r3, r1
   26388:	add	r1, sp, #3136	; 0xc40
   2638c:	eor	r6, r6, r4
   26390:	eor	r7, r7, r5
   26394:	ldrd	r4, [sp, #16]
   26398:	add	r1, r1, #8
   2639c:	orr	lr, lr, r5, lsl #31
   263a0:	str	lr, [sp, #3176]	; 0xc68
   263a4:	lsr	lr, r4, #8
   263a8:	orr	ip, lr, r5, lsl #24
   263ac:	str	ip, [sp, #3184]	; 0xc70
   263b0:	lsr	ip, r4, #7
   263b4:	ldrd	r4, [sp, #200]	; 0xc8
   263b8:	str	ip, [sp, #456]	; 0x1c8
   263bc:	ldr	ip, [sp, #32]
   263c0:	add	lr, sp, #3152	; 0xc50
   263c4:	orr	r4, r4, sl
   263c8:	orr	r5, r5, fp
   263cc:	orr	ip, ip, fp, lsr #7
   263d0:	add	lr, lr, #8
   263d4:	str	ip, [sp, #3168]	; 0xc60
   263d8:	ldr	ip, [sp, #20]
   263dc:	strd	r4, [sp, #88]	; 0x58
   263e0:	ldrd	r4, [lr]
   263e4:	ldr	lr, [sp, #16]
   263e8:	lsr	ip, ip, #1
   263ec:	ldrd	r0, [r1]
   263f0:	orr	ip, ip, lr, lsl #31
   263f4:	str	ip, [sp, #3180]	; 0xc6c
   263f8:	ldr	ip, [sp, #20]
   263fc:	eor	r1, r1, r7
   26400:	mov	r7, r1
   26404:	lsr	ip, ip, #8
   26408:	add	r1, sp, #3152	; 0xc50
   2640c:	orr	ip, ip, lr, lsl #24
   26410:	eor	r0, r0, r6
   26414:	ldr	lr, [sp, #20]
   26418:	mov	r6, r0
   2641c:	str	ip, [sp, #3188]	; 0xc74
   26420:	ldrd	r0, [r1]
   26424:	ldr	ip, [sp, #456]	; 0x1c8
   26428:	adds	r6, r6, r2
   2642c:	orr	ip, ip, lr, lsl #25
   26430:	adc	r7, r7, r3
   26434:	eor	r0, r0, r4
   26438:	eor	r1, r1, r5
   2643c:	str	ip, [sp, #456]	; 0x1c8
   26440:	ldrd	r4, [sp, #88]	; 0x58
   26444:	ldr	ip, [sp, #80]	; 0x50
   26448:	ldr	lr, [sp, #80]	; 0x50
   2644c:	ldrd	r2, [sp, #200]	; 0xc8
   26450:	and	r4, r4, r8
   26454:	and	r5, r5, r9
   26458:	and	r2, r2, sl
   2645c:	and	r3, r3, fp
   26460:	lsr	ip, ip, #19
   26464:	strd	r2, [sp, #88]	; 0x58
   26468:	add	r3, sp, #3168	; 0xc60
   2646c:	lsr	lr, lr, #6
   26470:	ldrd	r2, [r3]
   26474:	str	lr, [sp, #464]	; 0x1d0
   26478:	ldr	lr, [sp, #20]
   2647c:	eor	r2, r2, r0
   26480:	eor	r3, r3, r1
   26484:	ldrd	r0, [sp, #88]	; 0x58
   26488:	strd	r2, [sp, #32]
   2648c:	lsr	lr, lr, #7
   26490:	orr	r0, r0, r4
   26494:	orr	r1, r1, r5
   26498:	mov	r4, r0
   2649c:	mov	r5, r1
   264a0:	ldrd	r0, [sp, #80]	; 0x50
   264a4:	str	lr, [sp, #460]	; 0x1cc
   264a8:	lsl	r3, r1, #3
   264ac:	orr	r3, r3, r0, lsr #29
   264b0:	str	r3, [sp, #3204]	; 0xc84
   264b4:	add	r3, sp, #3168	; 0xc60
   264b8:	orr	ip, ip, r1, lsl #13
   264bc:	add	r3, r3, #8
   264c0:	add	r1, sp, #3184	; 0xc70
   264c4:	ldrd	r2, [r3]
   264c8:	ldrd	r0, [r1]
   264cc:	str	ip, [sp, #3192]	; 0xc78
   264d0:	eor	r2, r2, r0
   264d4:	eor	r3, r3, r1
   264d8:	ldrd	r0, [sp, #80]	; 0x50
   264dc:	strd	r2, [sp, #88]	; 0x58
   264e0:	ldr	r3, [sp, #464]	; 0x1d0
   264e4:	lsr	ip, r1, #19
   264e8:	orr	r3, r3, r1, lsl #26
   264ec:	str	r3, [sp, #464]	; 0x1d0
   264f0:	ldrd	r2, [sp, #216]	; 0xd8
   264f4:	lsl	lr, r0, #3
   264f8:	ldrd	r0, [sp, #88]	; 0x58
   264fc:	adds	r2, r2, r6
   26500:	adc	r3, r3, r7
   26504:	strd	r2, [sp, #160]	; 0xa0
   26508:	ldrd	r2, [sp, #32]
   2650c:	adds	r2, r2, r4
   26510:	adc	r3, r3, r5
   26514:	mov	r5, r3
   26518:	add	r3, sp, #456	; 0x1c8
   2651c:	mov	r4, r2
   26520:	ldrd	r2, [r3]
   26524:	eor	r3, r3, r1
   26528:	mov	r1, r3
   2652c:	ldr	r3, [sp, #80]	; 0x50
   26530:	eor	r2, r2, r0
   26534:	mov	r0, r2
   26538:	orr	r3, ip, r3, lsl #13
   2653c:	str	r3, [sp, #3196]	; 0xc7c
   26540:	ldr	r3, [sp, #84]	; 0x54
   26544:	adds	r2, r4, r6
   26548:	add	ip, sp, #3200	; 0xc80
   2654c:	orr	r3, lr, r3, lsr #29
   26550:	str	r3, [sp, #3200]	; 0xc80
   26554:	ldr	r3, [sp, #84]	; 0x54
   26558:	lsr	r3, r3, #6
   2655c:	str	r3, [sp, #468]	; 0x1d4
   26560:	adc	r3, r5, r7
   26564:	strd	r2, [sp, #152]	; 0x98
   26568:	ldrd	r2, [sp, #56]	; 0x38
   2656c:	adds	r2, r2, r0
   26570:	adc	r3, r3, r1
   26574:	mov	r1, r3
   26578:	add	r3, sp, #3184	; 0xc70
   2657c:	add	r3, r3, #8
   26580:	mov	r0, r2
   26584:	ldrd	r2, [r3]
   26588:	ldrd	r4, [ip]
   2658c:	ldrd	r6, [sp, #160]	; 0xa0
   26590:	eor	r2, r2, r4
   26594:	eor	r3, r3, r5
   26598:	ldrd	r4, [sp, #144]	; 0x90
   2659c:	strd	r2, [sp, #32]
   265a0:	add	r3, sp, #464	; 0x1d0
   265a4:	adds	r4, r4, r0
   265a8:	adc	r5, r5, r1
   265ac:	ldrd	r2, [r3]
   265b0:	mov	r0, r4
   265b4:	mov	r1, r5
   265b8:	ldrd	r4, [sp, #32]
   265bc:	lsr	lr, r6, #14
   265c0:	lsr	ip, r6, #18
   265c4:	eor	r5, r5, r3
   265c8:	eor	r4, r4, r2
   265cc:	orr	r3, lr, r7, lsl #18
   265d0:	adds	r2, r0, r4
   265d4:	str	r3, [sp, #3208]	; 0xc88
   265d8:	orr	r3, ip, r7, lsl #14
   265dc:	str	r3, [sp, #3216]	; 0xc90
   265e0:	adc	r3, r1, r5
   265e4:	ldrd	r0, [sp, #160]	; 0xa0
   265e8:	lsr	lr, r7, #14
   265ec:	lsr	r6, r7, #18
   265f0:	orr	lr, lr, r0, lsl #18
   265f4:	lsl	r5, r1, #23
   265f8:	str	lr, [sp, #3212]	; 0xc8c
   265fc:	orr	lr, r6, r0, lsl #14
   26600:	ldrd	r6, [sp, #208]	; 0xd0
   26604:	ldrd	r0, [sp, #128]	; 0x80
   26608:	ldr	ip, [sp, #152]	; 0x98
   2660c:	str	lr, [sp, #3220]	; 0xc94
   26610:	eor	r0, r0, r6
   26614:	eor	r1, r1, r7
   26618:	ldrd	r6, [sp, #160]	; 0xa0
   2661c:	lsr	r4, ip, #28
   26620:	ldr	ip, [sp, #156]	; 0x9c
   26624:	orr	lr, r5, r6, lsr #9
   26628:	b	26640 <__assert_fail@plt+0x15354>
   2662c:	nop			; (mov r0, r0)
   26630:	movwls	sl, #42789	; 0xa725
   26634:	strle	r9, [r7, #327]!	; 0x147
   26638:	and	r8, r3, pc, ror #4
   2663c:			; <UNDEFINED> instruction: 0x06ca6351
   26640:	ldr	r5, [sp, #156]	; 0x9c
   26644:	lsl	ip, ip, #30
   26648:	strd	r2, [sp, #88]	; 0x58
   2664c:	orr	r5, r4, r5, lsl #4
   26650:	str	r5, [sp, #3232]	; 0xca0
   26654:	ldrd	r4, [sp, #152]	; 0x98
   26658:	str	lr, [sp, #3228]	; 0xc9c
   2665c:	lsl	lr, r6, #23
   26660:	orr	ip, ip, r4, lsr #2
   26664:	str	ip, [sp, #3244]	; 0xcac
   26668:	lsr	ip, r5, #28
   2666c:	sub	r5, pc, #60	; 0x3c
   26670:	ldrd	r4, [r5]
   26674:	str	lr, [sp, #32]
   26678:	ldr	lr, [sp, #152]	; 0x98
   2667c:	adds	r4, r4, r2
   26680:	mov	r2, r4
   26684:	mov	r4, r6
   26688:	adc	r5, r5, r3
   2668c:	and	r4, r4, r0
   26690:	mov	r3, r5
   26694:	mov	r0, r4
   26698:	mov	r5, r7
   2669c:	ldr	r4, [sp, #32]
   266a0:	and	r5, r5, r1
   266a4:	mov	r1, r5
   266a8:	lsl	r5, lr, #30
   266ac:	orr	lr, r4, r7, lsr #9
   266b0:	ldrd	r6, [sp, #152]	; 0x98
   266b4:	str	lr, [sp, #3224]	; 0xc98
   266b8:	orr	ip, ip, r6, lsl #4
   266bc:	str	ip, [sp, #3236]	; 0xca4
   266c0:	ldr	ip, [sp, #136]	; 0x88
   266c4:	lsl	r4, r7, #25
   266c8:	lsr	lr, ip, #1
   266cc:	orr	ip, r5, r7, lsr #2
   266d0:	str	ip, [sp, #3240]	; 0xca8
   266d4:	orr	ip, r4, r6, lsr #7
   266d8:	mov	r5, r7
   266dc:	str	ip, [sp, #3252]	; 0xcb4
   266e0:	mov	r4, r6
   266e4:	lsl	ip, r6, #25
   266e8:	ldrd	r6, [sp, #192]	; 0xc0
   266ec:	orr	r4, r4, sl
   266f0:	adds	r6, r6, r2
   266f4:	adc	r7, r7, r3
   266f8:	mov	r2, r6
   266fc:	mov	r3, r7
   26700:	ldrd	r6, [sp, #128]	; 0x80
   26704:	eor	r7, r7, r1
   26708:	add	r1, sp, #3200	; 0xc80
   2670c:	eor	r6, r6, r0
   26710:	add	r1, r1, #8
   26714:	strd	r6, [sp, #32]
   26718:	ldrd	r6, [r1]
   2671c:	add	r1, sp, #3216	; 0xc90
   26720:	ldrd	r0, [r1]
   26724:	eor	r6, r6, r0
   26728:	ldr	r0, [sp, #140]	; 0x8c
   2672c:	eor	r7, r7, r1
   26730:	orr	lr, lr, r0, lsl #31
   26734:	ldrd	r0, [sp, #136]	; 0x88
   26738:	str	lr, [sp, #3256]	; 0xcb8
   2673c:	lsr	lr, r0, #8
   26740:	orr	lr, lr, r1, lsl #24
   26744:	mov	r1, r5
   26748:	orr	r5, r5, fp
   2674c:	orr	ip, ip, r1, lsr #7
   26750:	ldrd	r0, [sp, #32]
   26754:	str	ip, [sp, #3248]	; 0xcb0
   26758:	ldr	ip, [sp, #140]	; 0x8c
   2675c:	adds	r0, r0, r2
   26760:	adc	r1, r1, r3
   26764:	add	r3, sp, #3216	; 0xc90
   26768:	add	r3, r3, #8
   2676c:	strd	r0, [sp, #32]
   26770:	ldrd	r0, [r3]
   26774:	add	r3, sp, #3232	; 0xca0
   26778:	str	lr, [sp, #3264]	; 0xcc0
   2677c:	eor	r0, r0, r6
   26780:	eor	r1, r1, r7
   26784:	mov	r6, r0
   26788:	mov	r7, r1
   2678c:	ldrd	r0, [r3]
   26790:	add	r3, sp, #3232	; 0xca0
   26794:	add	r3, r3, #8
   26798:	ldr	lr, [sp, #136]	; 0x88
   2679c:	ldrd	r2, [r3]
   267a0:	lsr	ip, ip, #1
   267a4:	lsr	lr, lr, #7
   267a8:	eor	r0, r0, r2
   267ac:	eor	r1, r1, r3
   267b0:	str	lr, [sp, #472]	; 0x1d8
   267b4:	strd	r0, [sp, #56]	; 0x38
   267b8:	ldrd	r0, [sp, #200]	; 0xc8
   267bc:	and	r0, r0, r4
   267c0:	and	r1, r1, r5
   267c4:	mov	r4, r0
   267c8:	mov	r5, r1
   267cc:	ldrd	r0, [sp, #136]	; 0x88
   267d0:	orr	r3, ip, r0, lsl #31
   267d4:	lsr	ip, r1, #8
   267d8:	str	r3, [sp, #3260]	; 0xcbc
   267dc:	orr	r3, ip, r0, lsl #24
   267e0:	str	r3, [sp, #3268]	; 0xcc4
   267e4:	ldr	r3, [sp, #472]	; 0x1d8
   267e8:	orr	r3, r3, r1, lsl #25
   267ec:	ldrd	r0, [sp, #48]	; 0x30
   267f0:	str	r3, [sp, #472]	; 0x1d8
   267f4:	add	r1, sp, #3248	; 0xcb0
   267f8:	lsr	r3, r0, #6
   267fc:	str	r3, [sp, #480]	; 0x1e0
   26800:	ldrd	r2, [sp, #32]
   26804:	lsr	ip, r0, #19
   26808:	ldrd	r0, [r1]
   2680c:	adds	r2, r2, r6
   26810:	adc	r3, r3, r7
   26814:	ldrd	r6, [sp, #56]	; 0x38
   26818:	strd	r2, [sp, #32]
   2681c:	ldrd	r2, [sp, #152]	; 0x98
   26820:	eor	r6, r6, r0
   26824:	eor	r7, r7, r1
   26828:	mov	r0, r6
   2682c:	mov	r1, r7
   26830:	and	r3, r3, fp
   26834:	strd	r0, [sp, #56]	; 0x38
   26838:	ldrd	r0, [sp, #48]	; 0x30
   2683c:	orr	r5, r5, r3
   26840:	and	r2, r2, sl
   26844:	lsl	r3, r1, #3
   26848:	orr	r3, r3, r0, lsr #29
   2684c:	str	r3, [sp, #3284]	; 0xcd4
   26850:	ldr	r3, [sp, #140]	; 0x8c
   26854:	orr	ip, ip, r1, lsl #13
   26858:	str	ip, [sp, #3272]	; 0xcc8
   2685c:	ldr	ip, [sp, #480]	; 0x1e0
   26860:	lsr	r3, r3, #7
   26864:	orr	r4, r4, r2
   26868:	str	r3, [sp, #476]	; 0x1dc
   2686c:	lsr	r2, r1, #19
   26870:	orr	ip, ip, r1, lsl #26
   26874:	lsl	r3, r0, #3
   26878:	ldrd	r0, [sp, #32]
   2687c:	str	ip, [sp, #480]	; 0x1e0
   26880:	add	ip, sp, #3248	; 0xcb0
   26884:	adds	r0, r0, r8
   26888:	adc	r1, r1, r9
   2688c:	mov	r7, r1
   26890:	mov	r6, r0
   26894:	add	ip, ip, #8
   26898:	ldrd	r0, [sp, #56]	; 0x38
   2689c:	ldrd	r8, [ip]
   268a0:	add	ip, sp, #3264	; 0xcc0
   268a4:	adds	r0, r0, r4
   268a8:	adc	r1, r1, r5
   268ac:	ldrd	r4, [ip]
   268b0:	lsr	lr, r6, #14
   268b4:	strd	r6, [sp, #168]	; 0xa8
   268b8:	eor	r8, r8, r4
   268bc:	eor	r9, r9, r5
   268c0:	ldrd	r4, [sp, #48]	; 0x30
   268c4:	orr	lr, lr, r7, lsl #18
   268c8:	str	lr, [sp, #3288]	; 0xcd8
   268cc:	orr	r3, r3, r5, lsr #29
   268d0:	str	r3, [sp, #3280]	; 0xcd0
   268d4:	add	r3, sp, #472	; 0x1d8
   268d8:	orr	ip, r2, r4, lsl #13
   268dc:	ldrd	r2, [r3]
   268e0:	str	ip, [sp, #3276]	; 0xccc
   268e4:	lsr	ip, r6, #18
   268e8:	eor	r3, r3, r9
   268ec:	mov	r9, r3
   268f0:	eor	r2, r2, r8
   268f4:	lsr	r3, r5, #6
   268f8:	mov	r8, r2
   268fc:	str	r3, [sp, #484]	; 0x1e4
   26900:	ldrd	r2, [sp, #32]
   26904:	orr	ip, ip, r7, lsl #14
   26908:	lsr	lr, r7, #14
   2690c:	adds	r2, r2, r0
   26910:	adc	r3, r3, r1
   26914:	mov	r5, r3
   26918:	add	r3, sp, #3264	; 0xcc0
   2691c:	add	r3, r3, #8
   26920:	mov	r4, r2
   26924:	ldrd	r0, [r3]
   26928:	add	r3, sp, #3280	; 0xcd0
   2692c:	strd	r4, [sp, #192]	; 0xc0
   26930:	add	r4, sp, #480	; 0x1e0
   26934:	ldrd	r2, [r3]
   26938:	ldrd	r4, [r4]
   2693c:	str	ip, [sp, #3296]	; 0xce0
   26940:	eor	r0, r0, r2
   26944:	eor	r1, r1, r3
   26948:	ldrd	r2, [sp, #16]
   2694c:	eor	r4, r4, r0
   26950:	eor	r5, r5, r1
   26954:	mov	r0, r4
   26958:	mov	r1, r5
   2695c:	ldrd	r4, [sp, #40]	; 0x28
   26960:	adds	r2, r2, r8
   26964:	adc	r3, r3, r9
   26968:	mov	r8, r2
   2696c:	adds	r4, r4, r8
   26970:	mov	r9, r3
   26974:	adc	r5, r5, r9
   26978:	mov	r8, r4
   2697c:	adds	r6, r8, r0
   26980:	mov	r9, r5
   26984:	lsr	r4, r7, #18
   26988:	adc	r7, r9, r1
   2698c:	ldrd	r0, [sp, #168]	; 0xa8
   26990:	ldrd	r8, [sp, #192]	; 0xc0
   26994:	strd	r6, [sp, #32]
   26998:	orr	lr, lr, r0, lsl #18
   2699c:	lsl	ip, r1, #23
   269a0:	str	lr, [sp, #3292]	; 0xcdc
   269a4:	orr	lr, r4, r0, lsl #14
   269a8:	str	ip, [sp, #16]
   269ac:	str	lr, [sp, #3300]	; 0xce4
   269b0:	ldrd	r0, [sp, #160]	; 0xa0
   269b4:	ldrd	r6, [sp, #208]	; 0xd0
   269b8:	ldr	r4, [sp, #16]
   269bc:	lsr	r5, r8, #28
   269c0:	eor	r0, r0, r6
   269c4:	eor	r1, r1, r7
   269c8:	ldrd	r6, [sp, #168]	; 0xa8
   269cc:	lsl	ip, r9, #30
   269d0:	orr	r5, r5, r9, lsl #4
   269d4:	orr	ip, ip, r8, lsr #2
   269d8:	orr	lr, r4, r6, lsr #9
   269dc:	str	r5, [sp, #3312]	; 0xcf0
   269e0:	mov	r4, r8
   269e4:	mov	r5, r9
   269e8:	str	ip, [sp, #3324]	; 0xcfc
   269ec:	lsr	ip, r9, #28
   269f0:	ldrd	r8, [sp, #168]	; 0xa8
   269f4:	add	r3, pc, #868	; 0x364
   269f8:	ldrd	r2, [r3]
   269fc:	str	lr, [sp, #3308]	; 0xcec
   26a00:	lsl	lr, r6, #23
   26a04:	ldrd	r6, [sp, #32]
   26a08:	and	r8, r8, r0
   26a0c:	and	r9, r9, r1
   26a10:	mov	r0, r8
   26a14:	mov	r1, r9
   26a18:	ldrd	r8, [sp, #64]	; 0x40
   26a1c:	adds	r6, r6, r2
   26a20:	adc	r7, r7, r3
   26a24:	mov	r2, r6
   26a28:	mov	r3, r7
   26a2c:	mov	r6, r4
   26a30:	mov	r7, r5
   26a34:	lsl	r5, r4, #30
   26a38:	lsr	r4, r8, #7
   26a3c:	str	r4, [sp, #488]	; 0x1e8
   26a40:	ldr	r4, [sp, #172]	; 0xac
   26a44:	orr	ip, ip, r6, lsl #4
   26a48:	str	ip, [sp, #3316]	; 0xcf4
   26a4c:	orr	lr, lr, r4, lsr #9
   26a50:	orr	ip, r5, r7, lsr #2
   26a54:	lsl	r4, r7, #25
   26a58:	str	ip, [sp, #3320]	; 0xcf8
   26a5c:	orr	ip, r4, r6, lsr #7
   26a60:	mov	r9, r7
   26a64:	str	lr, [sp, #3304]	; 0xce8
   26a68:	str	ip, [sp, #3332]	; 0xd04
   26a6c:	lsr	lr, r8, #1
   26a70:	lsl	ip, r6, #25
   26a74:	mov	r8, r6
   26a78:	ldrd	r6, [sp, #128]	; 0x80
   26a7c:	add	r4, sp, #3280	; 0xcd0
   26a80:	add	r4, r4, #8
   26a84:	adds	r6, r6, r2
   26a88:	adc	r7, r7, r3
   26a8c:	mov	r2, r6
   26a90:	mov	r3, r7
   26a94:	ldrd	r6, [sp, #208]	; 0xd0
   26a98:	ldrd	r4, [r4]
   26a9c:	eor	r6, r6, r0
   26aa0:	mov	r0, r6
   26aa4:	add	r6, sp, #3296	; 0xce0
   26aa8:	eor	r7, r7, r1
   26aac:	mov	r1, r7
   26ab0:	ldrd	r6, [r6]
   26ab4:	eor	r4, r4, r6
   26ab8:	eor	r5, r5, r7
   26abc:	ldrd	r6, [sp, #64]	; 0x40
   26ac0:	strd	r4, [sp, #56]	; 0x38
   26ac4:	ldrd	r4, [sp, #152]	; 0x98
   26ac8:	orr	lr, lr, r7, lsl #31
   26acc:	str	lr, [sp, #3336]	; 0xd08
   26ad0:	lsr	lr, r6, #8
   26ad4:	orr	lr, lr, r7, lsl #24
   26ad8:	orr	r5, r5, r9
   26adc:	mov	r7, r9
   26ae0:	ldr	r9, [sp, #68]	; 0x44
   26ae4:	str	lr, [sp, #3344]	; 0xd10
   26ae8:	ldr	lr, [sp, #488]	; 0x1e8
   26aec:	adds	r6, r2, r0
   26af0:	orr	lr, lr, r9, lsl #25
   26af4:	orr	ip, ip, r7, lsr #7
   26af8:	mov	r9, r7
   26afc:	adc	r7, r3, r1
   26b00:	add	r3, sp, #3296	; 0xce0
   26b04:	add	r3, r3, #8
   26b08:	strd	r6, [sp, #16]
   26b0c:	ldrd	r0, [r3]
   26b10:	str	lr, [sp, #488]	; 0x1e8
   26b14:	str	ip, [sp, #3328]	; 0xd00
   26b18:	ldr	ip, [sp, #68]	; 0x44
   26b1c:	ldrd	r2, [sp, #56]	; 0x38
   26b20:	add	lr, sp, #3328	; 0xd00
   26b24:	lsr	ip, ip, #1
   26b28:	eor	r3, r3, r1
   26b2c:	mov	r7, r3
   26b30:	add	r3, sp, #3312	; 0xcf0
   26b34:	eor	r2, r2, r0
   26b38:	ldrd	r0, [r3]
   26b3c:	add	r3, sp, #3312	; 0xcf0
   26b40:	add	r3, r3, #8
   26b44:	mov	r6, r2
   26b48:	ldrd	r2, [r3]
   26b4c:	orr	r4, r4, r8
   26b50:	and	r5, r5, fp
   26b54:	eor	r1, r1, r3
   26b58:	ldr	r3, [sp, #64]	; 0x40
   26b5c:	eor	r0, r0, r2
   26b60:	and	r4, r4, sl
   26b64:	orr	r3, ip, r3, lsl #31
   26b68:	str	r3, [sp, #3340]	; 0xd0c
   26b6c:	ldr	r3, [sp, #68]	; 0x44
   26b70:	lsr	ip, r3, #8
   26b74:	ldr	r3, [sp, #64]	; 0x40
   26b78:	orr	r3, ip, r3, lsl #24
   26b7c:	str	r3, [sp, #3348]	; 0xd14
   26b80:	ldr	r3, [sp, #88]	; 0x58
   26b84:	lsr	ip, r3, #19
   26b88:	ldr	r3, [sp, #68]	; 0x44
   26b8c:	lsr	r3, r3, #7
   26b90:	str	r3, [sp, #492]	; 0x1ec
   26b94:	ldr	r3, [sp, #88]	; 0x58
   26b98:	lsr	r3, r3, #6
   26b9c:	str	r3, [sp, #496]	; 0x1f0
   26ba0:	ldrd	r2, [sp, #16]
   26ba4:	adds	r2, r2, r6
   26ba8:	adc	r3, r3, r7
   26bac:	mov	r6, r2
   26bb0:	mov	r7, r3
   26bb4:	ldrd	r2, [sp, #152]	; 0x98
   26bb8:	and	r2, r2, r8
   26bbc:	and	r3, r3, r9
   26bc0:	ldrd	r8, [lr]
   26bc4:	orr	r5, r5, r3
   26bc8:	orr	r4, r4, r2
   26bcc:	eor	r8, r8, r0
   26bd0:	eor	r9, r9, r1
   26bd4:	mov	r0, r8
   26bd8:	mov	r1, r9
   26bdc:	ldrd	r8, [sp, #88]	; 0x58
   26be0:	orr	ip, ip, r9, lsl #13
   26be4:	str	ip, [sp, #3352]	; 0xd18
   26be8:	lsl	r3, r9, #3
   26bec:	ldr	ip, [sp, #496]	; 0x1f0
   26bf0:	orr	r3, r3, r8, lsr #29
   26bf4:	lsr	r2, r9, #19
   26bf8:	orr	ip, ip, r9, lsl #26
   26bfc:	str	r3, [sp, #3364]	; 0xd24
   26c00:	lsl	r3, r8, #3
   26c04:	ldrd	r8, [sp, #200]	; 0xc8
   26c08:	str	ip, [sp, #496]	; 0x1f0
   26c0c:	add	ip, sp, #3328	; 0xd00
   26c10:	adds	r8, r8, r6
   26c14:	adc	r9, r9, r7
   26c18:	add	ip, ip, #8
   26c1c:	strd	r8, [sp, #128]	; 0x80
   26c20:	ldrd	r8, [ip]
   26c24:	add	ip, sp, #3344	; 0xd10
   26c28:	adds	r0, r0, r4
   26c2c:	adc	r1, r1, r5
   26c30:	ldrd	r4, [ip]
   26c34:	eor	r8, r8, r4
   26c38:	eor	r9, r9, r5
   26c3c:	ldrd	r4, [sp, #88]	; 0x58
   26c40:	orr	r3, r3, r5, lsr #29
   26c44:	str	r3, [sp, #3360]	; 0xd20
   26c48:	add	r3, sp, #488	; 0x1e8
   26c4c:	orr	ip, r2, r4, lsl #13
   26c50:	ldrd	r2, [r3]
   26c54:	adds	r4, r0, r6
   26c58:	str	ip, [sp, #3356]	; 0xd1c
   26c5c:	eor	r3, r3, r9
   26c60:	mov	r9, r3
   26c64:	lsr	r3, r5, #6
   26c68:	str	r3, [sp, #500]	; 0x1f4
   26c6c:	add	r3, sp, #3344	; 0xd10
   26c70:	add	r3, r3, #8
   26c74:	adc	r5, r1, r7
   26c78:	ldrd	r0, [r3]
   26c7c:	add	r3, sp, #3360	; 0xd20
   26c80:	eor	r2, r2, r8
   26c84:	mov	r8, r2
   26c88:	strd	r4, [sp, #16]
   26c8c:	ldrd	r2, [r3]
   26c90:	ldrd	r4, [sp, #136]	; 0x88
   26c94:	ldrd	r6, [sp, #128]	; 0x80
   26c98:	eor	r1, r1, r3
   26c9c:	adds	r4, r4, r8
   26ca0:	add	r3, sp, #496	; 0x1f0
   26ca4:	adc	r5, r5, r9
   26ca8:	eor	r0, r0, r2
   26cac:	mov	r8, r4
   26cb0:	mov	r9, r5
   26cb4:	ldrd	r2, [r3]
   26cb8:	ldrd	r4, [sp, #72]	; 0x48
   26cbc:	lsr	lr, r6, #14
   26cc0:	eor	r3, r3, r1
   26cc4:	adds	r4, r4, r8
   26cc8:	lsr	ip, r6, #18
   26ccc:	mov	r1, r3
   26cd0:	mov	r8, r4
   26cd4:	orr	r3, lr, r7, lsl #18
   26cd8:	eor	r2, r2, r0
   26cdc:	adc	r5, r5, r9
   26ce0:	str	r3, [sp, #3368]	; 0xd28
   26ce4:	adds	r2, r8, r2
   26ce8:	orr	r3, ip, r7, lsl #14
   26cec:	mov	r8, r6
   26cf0:	str	r3, [sp, #3376]	; 0xd30
   26cf4:	adc	r3, r5, r1
   26cf8:	lsr	lr, r7, #14
   26cfc:	strd	r2, [sp, #56]	; 0x38
   26d00:	lsr	r4, r7, #18
   26d04:	orr	r3, lr, r8, lsl #18
   26d08:	ldrd	r0, [sp, #16]
   26d0c:	str	r3, [sp, #3372]	; 0xd2c
   26d10:	orr	r3, r4, r8, lsl #14
   26d14:	ldrd	r8, [sp, #160]	; 0xa0
   26d18:	str	r3, [sp, #3380]	; 0xd34
   26d1c:	ldrd	r2, [sp, #168]	; 0xa8
   26d20:	lsl	ip, r1, #30
   26d24:	mov	r1, r9
   26d28:	eor	r1, r1, r3
   26d2c:	ldr	r3, [sp, #128]	; 0x80
   26d30:	lsl	r6, r7, #23
   26d34:	lsr	r5, r0, #28
   26d38:	orr	r3, r6, r3, lsr #9
   26d3c:	str	r3, [sp, #3388]	; 0xd3c
   26d40:	ldr	r3, [sp, #20]
   26d44:	mov	r0, r8
   26d48:	eor	r0, r0, r2
   26d4c:	orr	r3, r5, r3, lsl #4
   26d50:	ldrd	r4, [sp, #16]
   26d54:	str	r3, [sp, #3392]	; 0xd40
   26d58:	b	26d78 <__assert_fail@plt+0x15a8c>
   26d5c:	nop			; (mov r0, r0)
   26d60:	beq	3c2728 <optarg@@GLIBC_2.4+0x370580>
   26d64:	strtne	r2, [r9], #-2407	; 0xfffff699
   26d68:			; <UNDEFINED> instruction: 0x46d22ffc
   26d6c:	ldrcs	r0, [r7, r5, lsl #21]!
   26d70:			; <UNDEFINED> instruction: 0x5c26c926
   26d74:	mrccs	1, 0, r2, cr11, cr8, {1}
   26d78:	ldrd	r6, [sp, #128]	; 0x80
   26d7c:	orr	r3, ip, r4, lsr #2
   26d80:	str	r3, [sp, #3404]	; 0xd4c
   26d84:	lsr	ip, r5, #28
   26d88:	ldrd	r2, [sp, #56]	; 0x38
   26d8c:	sub	r5, pc, #44	; 0x2c
   26d90:	ldrd	r4, [r5]
   26d94:	lsl	lr, r6, #23
   26d98:	orr	lr, lr, r7, lsr #9
   26d9c:	adds	r4, r4, r2
   26da0:	adc	r5, r5, r3
   26da4:	mov	r2, r4
   26da8:	mov	r3, r5
   26dac:	mov	r4, r6
   26db0:	mov	r5, r7
   26db4:	ldrd	r6, [sp, #16]
   26db8:	and	r4, r4, r0
   26dbc:	and	r5, r5, r1
   26dc0:	mov	r0, r4
   26dc4:	mov	r1, r5
   26dc8:	orr	ip, ip, r6, lsl #4
   26dcc:	ldr	r5, [sp, #16]
   26dd0:	ldr	r4, [sp, #96]	; 0x60
   26dd4:	str	ip, [sp, #3396]	; 0xd44
   26dd8:	ldr	ip, [sp, #96]	; 0x60
   26ddc:	lsl	r5, r5, #30
   26de0:	lsr	r4, r4, #7
   26de4:	str	r4, [sp, #504]	; 0x1f8
   26de8:	str	lr, [sp, #3384]	; 0xd38
   26dec:	lsl	r4, r7, #25
   26df0:	lsr	lr, ip, #1
   26df4:	orr	ip, r5, r7, lsr #2
   26df8:	str	ip, [sp, #3400]	; 0xd48
   26dfc:	orr	ip, r4, r6, lsr #7
   26e00:	mov	r5, r7
   26e04:	mov	r4, r6
   26e08:	str	ip, [sp, #3412]	; 0xd54
   26e0c:	lsl	ip, r6, #25
   26e10:	ldrd	r6, [sp, #208]	; 0xd0
   26e14:	str	ip, [sp, #200]	; 0xc8
   26e18:	add	ip, sp, #3376	; 0xd30
   26e1c:	adds	r6, r6, r2
   26e20:	adc	r7, r7, r3
   26e24:	mov	r3, r7
   26e28:	mov	r7, r9
   26e2c:	mov	r2, r6
   26e30:	eor	r7, r7, r1
   26e34:	mov	r6, r8
   26e38:	add	r1, sp, #3360	; 0xd20
   26e3c:	eor	r6, r6, r0
   26e40:	add	r1, r1, #8
   26e44:	strd	r6, [sp, #136]	; 0x88
   26e48:	ldrd	r8, [ip]
   26e4c:	ldrd	r0, [r1]
   26e50:	eor	r0, r0, r8
   26e54:	eor	r1, r1, r9
   26e58:	mov	r6, r0
   26e5c:	mov	r7, r1
   26e60:	ldrd	r0, [sp, #96]	; 0x60
   26e64:	mov	r9, r5
   26e68:	orr	lr, lr, r1, lsl #31
   26e6c:	str	lr, [sp, #3416]	; 0xd58
   26e70:	lsr	lr, r0, #8
   26e74:	orr	lr, lr, r1, lsl #24
   26e78:	ldrd	r0, [sp, #192]	; 0xc0
   26e7c:	str	lr, [sp, #3424]	; 0xd60
   26e80:	ldr	lr, [sp, #504]	; 0x1f8
   26e84:	orr	r0, r0, r4
   26e88:	orr	r1, r1, r5
   26e8c:	mov	r4, r0
   26e90:	mov	r5, r1
   26e94:	ldrd	r0, [sp, #96]	; 0x60
   26e98:	orr	lr, lr, r1, lsl #25
   26e9c:	str	lr, [sp, #504]	; 0x1f8
   26ea0:	ldr	lr, [sp, #200]	; 0xc8
   26ea4:	orr	ip, lr, r9, lsr #7
   26ea8:	str	ip, [sp, #3408]	; 0xd50
   26eac:	lsr	ip, r1, #1
   26eb0:	ldrd	r0, [sp, #136]	; 0x88
   26eb4:	add	lr, sp, #3392	; 0xd40
   26eb8:	add	lr, lr, #8
   26ebc:	adds	r0, r0, r2
   26ec0:	adc	r1, r1, r3
   26ec4:	mov	r3, r1
   26ec8:	add	r1, sp, #3376	; 0xd30
   26ecc:	add	r1, r1, #8
   26ed0:	mov	r2, r0
   26ed4:	ldrd	r0, [r1]
   26ed8:	ldrd	r8, [lr]
   26edc:	eor	r1, r1, r7
   26ee0:	mov	r7, r1
   26ee4:	add	r1, sp, #3392	; 0xd40
   26ee8:	eor	r0, r0, r6
   26eec:	mov	r6, r0
   26ef0:	ldrd	r0, [r1]
   26ef4:	adds	r6, r6, r2
   26ef8:	adc	r7, r7, r3
   26efc:	eor	r0, r0, r8
   26f00:	eor	r1, r1, r9
   26f04:	ldrd	r8, [sp, #152]	; 0x98
   26f08:	ldrd	r2, [sp, #16]
   26f0c:	and	r8, r8, r4
   26f10:	and	r9, r9, r5
   26f14:	mov	r4, r8
   26f18:	mov	r5, r9
   26f1c:	ldrd	r8, [sp, #96]	; 0x60
   26f20:	lsr	lr, r9, #7
   26f24:	orr	ip, ip, r8, lsl #31
   26f28:	str	lr, [sp, #508]	; 0x1fc
   26f2c:	ldr	lr, [sp, #32]
   26f30:	str	ip, [sp, #3420]	; 0xd5c
   26f34:	lsr	ip, r9, #8
   26f38:	orr	ip, ip, r8, lsl #24
   26f3c:	ldrd	r8, [sp, #192]	; 0xc0
   26f40:	lsr	lr, lr, #6
   26f44:	str	lr, [sp, #512]	; 0x200
   26f48:	add	lr, sp, #3408	; 0xd50
   26f4c:	and	r8, r8, r2
   26f50:	and	r9, r9, r3
   26f54:	mov	r2, r8
   26f58:	mov	r3, r9
   26f5c:	ldrd	r8, [lr]
   26f60:	str	ip, [sp, #3428]	; 0xd64
   26f64:	ldr	ip, [sp, #32]
   26f68:	eor	r8, r8, r0
   26f6c:	eor	r9, r9, r1
   26f70:	mov	r0, r8
   26f74:	mov	r1, r9
   26f78:	ldrd	r8, [sp, #32]
   26f7c:	lsr	ip, ip, #19
   26f80:	orr	r5, r5, r3
   26f84:	orr	ip, ip, r9, lsl #13
   26f88:	str	ip, [sp, #3432]	; 0xd68
   26f8c:	ldr	ip, [sp, #512]	; 0x200
   26f90:	lsl	r3, r9, #3
   26f94:	orr	r3, r3, r8, lsr #29
   26f98:	orr	ip, ip, r9, lsl #26
   26f9c:	str	r3, [sp, #3444]	; 0xd74
   26fa0:	str	ip, [sp, #512]	; 0x200
   26fa4:	lsl	r3, r8, #3
   26fa8:	add	ip, sp, #3408	; 0xd50
   26fac:	adds	r8, sl, r6
   26fb0:	orr	r4, r4, r2
   26fb4:	add	ip, ip, #8
   26fb8:	lsr	r2, r9, #19
   26fbc:	adc	r9, fp, r7
   26fc0:	adds	r0, r0, r4
   26fc4:	strd	r8, [sp, #136]	; 0x88
   26fc8:	ldrd	sl, [ip]
   26fcc:	add	ip, sp, #3424	; 0xd60
   26fd0:	adc	r1, r1, r5
   26fd4:	ldrd	r4, [ip]
   26fd8:	eor	sl, sl, r4
   26fdc:	eor	fp, fp, r5
   26fe0:	mov	r8, sl
   26fe4:	mov	r9, fp
   26fe8:	ldrd	sl, [sp, #32]
   26fec:	ldrd	r4, [sp, #64]	; 0x40
   26ff0:	orr	r3, r3, fp, lsr #29
   26ff4:	str	r3, [sp, #3440]	; 0xd70
   26ff8:	add	r3, sp, #504	; 0x1f8
   26ffc:	orr	ip, r2, sl, lsl #13
   27000:	ldrd	r2, [r3]
   27004:	adds	sl, r0, r6
   27008:	str	ip, [sp, #3436]	; 0xd6c
   2700c:	eor	r3, r3, r9
   27010:	mov	r9, r3
   27014:	lsr	r3, fp, #6
   27018:	str	r3, [sp, #516]	; 0x204
   2701c:	add	r3, sp, #3424	; 0xd60
   27020:	eor	r2, r2, r8
   27024:	add	r3, r3, #8
   27028:	mov	r8, r2
   2702c:	adc	fp, r1, r7
   27030:	ldrd	r0, [r3]
   27034:	adds	r4, r4, r8
   27038:	add	r3, sp, #3440	; 0xd70
   2703c:	mov	r8, r4
   27040:	add	r4, sp, #512	; 0x200
   27044:	ldrd	r2, [r3]
   27048:	adc	r5, r5, r9
   2704c:	mov	r9, r5
   27050:	ldrd	r4, [r4]
   27054:	eor	r0, r0, r2
   27058:	eor	r1, r1, r3
   2705c:	eor	r4, r4, r0
   27060:	eor	r5, r5, r1
   27064:	mov	r0, r4
   27068:	mov	r1, r5
   2706c:	ldrd	r4, [sp, #120]	; 0x78
   27070:	ldrd	r6, [sp, #136]	; 0x88
   27074:	sub	r3, pc, #780	; 0x30c
   27078:	ldrd	r2, [r3]
   2707c:	adds	r4, r4, r8
   27080:	adc	r5, r5, r9
   27084:	mov	r8, r4
   27088:	lsr	lr, r6, #14
   2708c:	mov	r9, r5
   27090:	orr	lr, lr, r7, lsl #18
   27094:	lsr	ip, r6, #18
   27098:	adds	r6, r8, r0
   2709c:	orr	ip, ip, r7, lsl #14
   270a0:	lsr	r4, r7, #18
   270a4:	str	lr, [sp, #3448]	; 0xd78
   270a8:	lsr	lr, r7, #14
   270ac:	adc	r7, r9, r1
   270b0:	ldrd	r0, [sp, #136]	; 0x88
   270b4:	mov	r8, r6
   270b8:	mov	r9, r7
   270bc:	orr	lr, lr, r0, lsl #18
   270c0:	ldrd	r6, [sp, #168]	; 0xa8
   270c4:	str	ip, [sp, #3456]	; 0xd80
   270c8:	str	lr, [sp, #3452]	; 0xd7c
   270cc:	lsl	ip, r1, #23
   270d0:	orr	lr, r4, r0, lsl #14
   270d4:	ldrd	r0, [sp, #128]	; 0x80
   270d8:	str	ip, [sp, #64]	; 0x40
   270dc:	ldr	r4, [sp, #64]	; 0x40
   270e0:	eor	r0, r0, r6
   270e4:	eor	r1, r1, r7
   270e8:	ldrd	r6, [sp, #136]	; 0x88
   270ec:	str	lr, [sp, #3460]	; 0xd84
   270f0:	strd	r8, [sp, #64]	; 0x40
   270f4:	orr	lr, r4, r6, lsr #9
   270f8:	str	lr, [sp, #3468]	; 0xd8c
   270fc:	lsl	lr, r6, #23
   27100:	adds	r6, r8, r2
   27104:	adc	r7, r9, r3
   27108:	ldrd	r8, [sp, #136]	; 0x88
   2710c:	lsr	r5, sl, #28
   27110:	orr	r5, r5, fp, lsl #4
   27114:	lsl	ip, fp, #30
   27118:	orr	ip, ip, sl, lsr #2
   2711c:	mov	r2, r6
   27120:	mov	r3, r7
   27124:	str	r5, [sp, #3472]	; 0xd90
   27128:	ldrd	r6, [sp, #184]	; 0xb8
   2712c:	mov	r5, r9
   27130:	str	ip, [sp, #3484]	; 0xd9c
   27134:	mov	r4, r8
   27138:	lsr	ip, fp, #28
   2713c:	and	r5, r5, r1
   27140:	mov	r1, r5
   27144:	orr	ip, ip, sl, lsl #4
   27148:	lsl	r5, sl, #30
   2714c:	and	r4, r4, r0
   27150:	mov	r0, r4
   27154:	orr	lr, lr, r9, lsr #9
   27158:	lsr	r4, r6, #7
   2715c:	str	ip, [sp, #3476]	; 0xd94
   27160:	orr	ip, r5, fp, lsr #2
   27164:	mov	r9, r7
   27168:	mov	r8, r6
   2716c:	str	r4, [sp, #520]	; 0x208
   27170:	str	lr, [sp, #3464]	; 0xd88
   27174:	str	ip, [sp, #3480]	; 0xd98
   27178:	lsr	lr, r6, #1
   2717c:	ldrd	r6, [sp, #160]	; 0xa0
   27180:	lsl	r4, fp, #25
   27184:	orr	ip, r4, sl, lsr #7
   27188:	adds	r6, r6, r2
   2718c:	adc	r7, r7, r3
   27190:	mov	r2, r6
   27194:	mov	r3, r7
   27198:	ldrd	r6, [sp, #168]	; 0xa8
   2719c:	str	ip, [sp, #3492]	; 0xda4
   271a0:	lsl	ip, sl, #25
   271a4:	str	ip, [sp, #200]	; 0xc8
   271a8:	eor	r6, r6, r0
   271ac:	add	ip, sp, #3440	; 0xd70
   271b0:	mov	r0, r6
   271b4:	eor	r7, r7, r1
   271b8:	add	ip, ip, #8
   271bc:	adds	r2, r2, r0
   271c0:	mov	r1, r7
   271c4:	adc	r3, r3, r1
   271c8:	ldrd	r6, [ip]
   271cc:	add	r1, sp, #3456	; 0xd80
   271d0:	add	ip, sp, #3456	; 0xd80
   271d4:	orr	lr, lr, r9, lsl #31
   271d8:	add	r1, r1, #8
   271dc:	ldrd	r4, [ip]
   271e0:	str	lr, [sp, #3496]	; 0xda8
   271e4:	lsr	lr, r8, #8
   271e8:	orr	lr, lr, r9, lsl #24
   271ec:	ldr	ip, [sp, #188]	; 0xbc
   271f0:	ldrd	r0, [r1]
   271f4:	str	lr, [sp, #3504]	; 0xdb0
   271f8:	ldr	lr, [sp, #520]	; 0x208
   271fc:	eor	r6, r6, r4
   27200:	eor	r7, r7, r5
   27204:	orr	lr, lr, ip, lsl #25
   27208:	eor	r0, r0, r6
   2720c:	eor	r1, r1, r7
   27210:	str	lr, [sp, #520]	; 0x208
   27214:	add	lr, sp, #3472	; 0xd90
   27218:	ldrd	r8, [sp, #16]
   2721c:	add	lr, lr, #8
   27220:	strd	r0, [sp, #16]
   27224:	add	r1, sp, #3472	; 0xd90
   27228:	ldrd	r6, [lr]
   2722c:	ldrd	r0, [r1]
   27230:	ldr	ip, [sp, #200]	; 0xc8
   27234:	orr	r4, r8, sl
   27238:	eor	r0, r0, r6
   2723c:	eor	r1, r1, r7
   27240:	ldrd	r6, [sp, #192]	; 0xc0
   27244:	orr	r5, r9, fp
   27248:	orr	ip, ip, fp, lsr #7
   2724c:	and	r6, r6, r4
   27250:	and	r7, r7, r5
   27254:	str	ip, [sp, #3488]	; 0xda0
   27258:	mov	r4, r6
   2725c:	ldr	ip, [sp, #188]	; 0xbc
   27260:	mov	r5, r7
   27264:	ldrd	r6, [sp, #184]	; 0xb8
   27268:	lsr	ip, ip, #1
   2726c:	lsr	lr, r7, #7
   27270:	orr	ip, ip, r6, lsl #31
   27274:	str	lr, [sp, #524]	; 0x20c
   27278:	ldr	lr, [sp, #56]	; 0x38
   2727c:	str	ip, [sp, #3500]	; 0xdac
   27280:	lsr	ip, r7, #8
   27284:	orr	ip, ip, r6, lsl #24
   27288:	ldrd	r6, [sp, #16]
   2728c:	lsr	lr, lr, #6
   27290:	str	lr, [sp, #528]	; 0x210
   27294:	add	lr, sp, #3488	; 0xda0
   27298:	adds	r6, r6, r2
   2729c:	adc	r7, r7, r3
   272a0:	strd	r8, [sp, #16]
   272a4:	mov	r2, r8
   272a8:	mov	r3, r9
   272ac:	ldrd	r8, [lr]
   272b0:	str	ip, [sp, #3508]	; 0xdb4
   272b4:	ldr	ip, [sp, #56]	; 0x38
   272b8:	eor	r8, r8, r0
   272bc:	eor	r9, r9, r1
   272c0:	mov	r0, r8
   272c4:	mov	r1, r9
   272c8:	ldrd	r8, [sp, #56]	; 0x38
   272cc:	and	r3, r3, fp
   272d0:	orr	r5, r5, r3
   272d4:	lsr	ip, ip, #19
   272d8:	lsl	r3, r9, #3
   272dc:	orr	ip, ip, r9, lsl #13
   272e0:	orr	r3, r3, r8, lsr #29
   272e4:	str	ip, [sp, #3512]	; 0xdb8
   272e8:	str	r3, [sp, #3524]	; 0xdc4
   272ec:	ldr	ip, [sp, #528]	; 0x210
   272f0:	and	r2, r2, sl
   272f4:	orr	r4, r4, r2
   272f8:	orr	ip, ip, r9, lsl #26
   272fc:	lsr	r2, r9, #19
   27300:	lsl	r3, r8, #3
   27304:	ldrd	r8, [sp, #152]	; 0x98
   27308:	str	ip, [sp, #528]	; 0x210
   2730c:	add	ip, sp, #3488	; 0xda0
   27310:	adds	r8, r8, r6
   27314:	adc	r9, r9, r7
   27318:	add	ip, ip, #8
   2731c:	strd	r8, [sp, #200]	; 0xc8
   27320:	ldrd	r8, [ip]
   27324:	add	ip, sp, #3504	; 0xdb0
   27328:	adds	r0, r0, r4
   2732c:	adc	r1, r1, r5
   27330:	ldrd	r4, [ip]
   27334:	eor	r8, r8, r4
   27338:	eor	r9, r9, r5
   2733c:	ldrd	r4, [sp, #56]	; 0x38
   27340:	orr	r3, r3, r5, lsr #29
   27344:	str	r3, [sp, #3520]	; 0xdc0
   27348:	add	r3, sp, #520	; 0x208
   2734c:	orr	ip, r2, r4, lsl #13
   27350:	ldrd	r2, [r3]
   27354:	str	ip, [sp, #3516]	; 0xdbc
   27358:	eor	r2, r2, r8
   2735c:	eor	r3, r3, r9
   27360:	mov	r8, r2
   27364:	mov	r9, r3
   27368:	adds	r2, r0, r6
   2736c:	lsr	r3, r5, #6
   27370:	str	r3, [sp, #532]	; 0x214
   27374:	adc	r3, r1, r7
   27378:	ldrd	r4, [sp, #96]	; 0x60
   2737c:	strd	r2, [sp, #152]	; 0x98
   27380:	add	r3, sp, #3504	; 0xdb0
   27384:	add	r3, r3, #8
   27388:	ldrd	r0, [r3]
   2738c:	add	r3, sp, #3520	; 0xdc0
   27390:	adds	r4, r4, r8
   27394:	ldrd	r2, [r3]
   27398:	adc	r5, r5, r9
   2739c:	ldrd	r6, [sp, #200]	; 0xc8
   273a0:	eor	r1, r1, r3
   273a4:	add	r3, sp, #528	; 0x210
   273a8:	eor	r0, r0, r2
   273ac:	mov	r8, r4
   273b0:	mov	r9, r5
   273b4:	ldrd	r2, [r3]
   273b8:	ldrd	r4, [sp, #176]	; 0xb0
   273bc:	lsr	lr, r6, #14
   273c0:	eor	r3, r3, r1
   273c4:	adds	r4, r4, r8
   273c8:	lsr	ip, r6, #18
   273cc:	mov	r1, r3
   273d0:	mov	r8, r4
   273d4:	orr	r3, lr, r7, lsl #18
   273d8:	eor	r2, r2, r0
   273dc:	adc	r5, r5, r9
   273e0:	str	r3, [sp, #3528]	; 0xdc8
   273e4:	adds	r2, r8, r2
   273e8:	orr	r3, ip, r7, lsl #14
   273ec:	mov	r8, r6
   273f0:	str	r3, [sp, #3536]	; 0xdd0
   273f4:	adc	r3, r5, r1
   273f8:	lsr	lr, r7, #14
   273fc:	lsr	r4, r7, #18
   27400:	strd	r2, [sp, #96]	; 0x60
   27404:	orr	r3, lr, r8, lsl #18
   27408:	ldrd	r0, [sp, #152]	; 0x98
   2740c:	str	r3, [sp, #3532]	; 0xdcc
   27410:	orr	r3, r4, r8, lsl #14
   27414:	ldrd	r8, [sp, #128]	; 0x80
   27418:	str	r3, [sp, #3540]	; 0xdd4
   2741c:	ldrd	r2, [sp, #136]	; 0x88
   27420:	lsl	ip, r1, #30
   27424:	mov	r1, r9
   27428:	eor	r1, r1, r3
   2742c:	ldr	r3, [sp, #200]	; 0xc8
   27430:	lsl	r6, r7, #23
   27434:	lsr	r5, r0, #28
   27438:	orr	r3, r6, r3, lsr #9
   2743c:	str	r3, [sp, #3548]	; 0xddc
   27440:	ldr	r3, [sp, #156]	; 0x9c
   27444:	mov	r0, r8
   27448:	ldrd	r6, [sp, #200]	; 0xc8
   2744c:	orr	r3, r5, r3, lsl #4
   27450:	ldrd	r4, [sp, #152]	; 0x98
   27454:	str	r3, [sp, #3552]	; 0xde0
   27458:	eor	r0, r0, r2
   2745c:	orr	r3, ip, r4, lsr #2
   27460:	str	r3, [sp, #3564]	; 0xdec
   27464:	lsr	ip, r5, #28
   27468:	ldrd	r2, [sp, #96]	; 0x60
   2746c:	add	r5, pc, #860	; 0x35c
   27470:	ldrd	r4, [r5]
   27474:	lsl	lr, r6, #23
   27478:	orr	lr, lr, r7, lsr #9
   2747c:	adds	r4, r4, r2
   27480:	adc	r5, r5, r3
   27484:	mov	r2, r4
   27488:	mov	r3, r5
   2748c:	mov	r4, r6
   27490:	mov	r5, r7
   27494:	ldrd	r6, [sp, #152]	; 0x98
   27498:	and	r4, r4, r0
   2749c:	and	r5, r5, r1
   274a0:	mov	r0, r4
   274a4:	mov	r1, r5
   274a8:	orr	ip, ip, r6, lsl #4
   274ac:	ldr	r5, [sp, #152]	; 0x98
   274b0:	ldr	r4, [sp, #112]	; 0x70
   274b4:	str	ip, [sp, #3556]	; 0xde4
   274b8:	ldr	ip, [sp, #112]	; 0x70
   274bc:	lsl	r5, r5, #30
   274c0:	lsr	r4, r4, #7
   274c4:	str	r4, [sp, #536]	; 0x218
   274c8:	str	lr, [sp, #3544]	; 0xdd8
   274cc:	lsl	r4, r7, #25
   274d0:	lsr	lr, ip, #1
   274d4:	orr	ip, r5, r7, lsr #2
   274d8:	str	ip, [sp, #3560]	; 0xde8
   274dc:	orr	ip, r4, r6, lsr #7
   274e0:	mov	r5, r7
   274e4:	mov	r4, r6
   274e8:	str	ip, [sp, #3572]	; 0xdf4
   274ec:	lsl	ip, r6, #25
   274f0:	ldrd	r6, [sp, #168]	; 0xa8
   274f4:	adds	r6, r6, r2
   274f8:	adc	r7, r7, r3
   274fc:	mov	r3, r7
   27500:	mov	r7, r9
   27504:	eor	r7, r7, r1
   27508:	add	r1, sp, #3520	; 0xdc0
   2750c:	add	r1, r1, #8
   27510:	mov	r2, r6
   27514:	mov	r6, r8
   27518:	eor	r6, r6, r0
   2751c:	ldrd	r8, [r1]
   27520:	add	r1, sp, #3536	; 0xdd0
   27524:	strd	r6, [sp, #152]	; 0x98
   27528:	ldrd	r6, [r1]
   2752c:	eor	r8, r8, r6
   27530:	eor	r9, r9, r7
   27534:	mov	r6, r8
   27538:	mov	r7, r9
   2753c:	ldrd	r8, [sp, #112]	; 0x70
   27540:	orr	lr, lr, r9, lsl #31
   27544:	str	lr, [sp, #3576]	; 0xdf8
   27548:	lsr	lr, r8, #8
   2754c:	orr	lr, lr, r9, lsl #24
   27550:	mov	r0, r9
   27554:	str	lr, [sp, #3584]	; 0xe00
   27558:	ldr	lr, [sp, #536]	; 0x218
   2755c:	mov	r9, r5
   27560:	orr	lr, lr, r0, lsl #25
   27564:	ldrd	r0, [sp, #152]	; 0x98
   27568:	orr	ip, ip, r9, lsr #7
   2756c:	str	ip, [sp, #3568]	; 0xdf0
   27570:	adds	r0, r0, r2
   27574:	adc	r1, r1, r3
   27578:	add	r3, sp, #3536	; 0xdd0
   2757c:	add	r3, r3, #8
   27580:	strd	r0, [sp, #152]	; 0x98
   27584:	ldrd	r0, [r3]
   27588:	add	r3, sp, #3552	; 0xde0
   2758c:	ldr	ip, [sp, #116]	; 0x74
   27590:	eor	r0, r0, r6
   27594:	eor	r1, r1, r7
   27598:	mov	r6, r0
   2759c:	mov	r7, r1
   275a0:	ldrd	r0, [r3]
   275a4:	add	r3, sp, #3552	; 0xde0
   275a8:	add	r3, r3, #8
   275ac:	orr	r5, r5, fp
   275b0:	ldrd	r2, [r3]
   275b4:	lsr	ip, ip, #1
   275b8:	mov	r8, r4
   275bc:	eor	r0, r0, r2
   275c0:	eor	r1, r1, r3
   275c4:	ldrd	r2, [sp, #16]
   275c8:	strd	r0, [sp, #160]	; 0xa0
   275cc:	ldrd	r0, [sp, #112]	; 0x70
   275d0:	and	r3, r3, r5
   275d4:	orr	r4, r4, sl
   275d8:	mov	r5, r3
   275dc:	orr	r3, ip, r0, lsl #31
   275e0:	lsr	ip, r1, #8
   275e4:	and	r2, r2, r4
   275e8:	str	r3, [sp, #3580]	; 0xdfc
   275ec:	orr	r3, ip, r0, lsl #24
   275f0:	mov	r4, r2
   275f4:	str	r3, [sp, #3588]	; 0xe04
   275f8:	ldrd	r2, [sp, #64]	; 0x40
   275fc:	str	lr, [sp, #536]	; 0x218
   27600:	lsr	lr, r1, #7
   27604:	lsr	r3, r2, #6
   27608:	str	lr, [sp, #540]	; 0x21c
   2760c:	lsr	ip, r2, #19
   27610:	str	r3, [sp, #544]	; 0x220
   27614:	ldrd	r2, [sp, #152]	; 0x98
   27618:	add	r1, sp, #3568	; 0xdf0
   2761c:	strd	r8, [sp, #152]	; 0x98
   27620:	adds	r2, r2, r6
   27624:	adc	r3, r3, r7
   27628:	ldrd	r0, [r1]
   2762c:	mov	r6, r2
   27630:	mov	r7, r3
   27634:	mov	r2, r8
   27638:	mov	r3, r9
   2763c:	ldrd	r8, [sp, #160]	; 0xa0
   27640:	and	r3, r3, fp
   27644:	orr	r5, r5, r3
   27648:	eor	r8, r8, r0
   2764c:	eor	r9, r9, r1
   27650:	mov	r0, r8
   27654:	mov	r1, r9
   27658:	ldrd	r8, [sp, #64]	; 0x40
   2765c:	and	r2, r2, sl
   27660:	orr	r4, r4, r2
   27664:	orr	ip, ip, r9, lsl #13
   27668:	str	ip, [sp, #3592]	; 0xe08
   2766c:	lsl	r3, r9, #3
   27670:	ldr	ip, [sp, #544]	; 0x220
   27674:	orr	r3, r3, r8, lsr #29
   27678:	str	r3, [sp, #3604]	; 0xe14
   2767c:	lsr	r2, r9, #19
   27680:	orr	ip, ip, r9, lsl #26
   27684:	lsl	r3, r8, #3
   27688:	ldrd	r8, [sp, #192]	; 0xc0
   2768c:	str	ip, [sp, #544]	; 0x220
   27690:	add	ip, sp, #3568	; 0xdf0
   27694:	adds	r8, r8, r6
   27698:	adc	r9, r9, r7
   2769c:	add	ip, ip, #8
   276a0:	strd	r8, [sp, #208]	; 0xd0
   276a4:	ldrd	r8, [ip]
   276a8:	add	ip, sp, #3584	; 0xe00
   276ac:	adds	r0, r0, r4
   276b0:	adc	r1, r1, r5
   276b4:	ldrd	r4, [ip]
   276b8:	eor	r8, r8, r4
   276bc:	eor	r9, r9, r5
   276c0:	ldrd	r4, [sp, #64]	; 0x40
   276c4:	orr	r3, r3, r5, lsr #29
   276c8:	str	r3, [sp, #3600]	; 0xe10
   276cc:	add	r3, sp, #536	; 0x218
   276d0:	orr	ip, r2, r4, lsl #13
   276d4:	ldrd	r2, [r3]
   276d8:	adds	r4, r0, r6
   276dc:	str	ip, [sp, #3596]	; 0xe0c
   276e0:	eor	r3, r3, r9
   276e4:	mov	r9, r3
   276e8:	lsr	r3, r5, #6
   276ec:	str	r3, [sp, #548]	; 0x224
   276f0:	add	r3, sp, #3584	; 0xe00
   276f4:	add	r3, r3, #8
   276f8:	adc	r5, r1, r7
   276fc:	ldrd	r0, [r3]
   27700:	add	r3, sp, #3600	; 0xe10
   27704:	eor	r2, r2, r8
   27708:	add	r6, sp, #544	; 0x220
   2770c:	mov	r8, r2
   27710:	ldrd	r2, [r3]
   27714:	ldrd	r6, [r6]
   27718:	strd	r4, [sp, #192]	; 0xc0
   2771c:	eor	r0, r0, r2
   27720:	eor	r1, r1, r3
   27724:	ldrd	r4, [sp, #184]	; 0xb8
   27728:	eor	r6, r6, r0
   2772c:	eor	r7, r7, r1
   27730:	mov	r0, r6
   27734:	mov	r1, r7
   27738:	ldrd	r6, [sp, #80]	; 0x50
   2773c:	adds	r4, r4, r8
   27740:	adc	r5, r5, r9
   27744:	mov	r8, r4
   27748:	mov	r9, r5
   2774c:	adds	r6, r6, r8
   27750:	ldrd	r4, [sp, #208]	; 0xd0
   27754:	adc	r7, r7, r9
   27758:	mov	r9, r7
   2775c:	adds	r6, r6, r0
   27760:	adc	r7, r9, r1
   27764:	lsr	lr, r4, #14
   27768:	ldrd	r0, [sp, #208]	; 0xd0
   2776c:	ldrd	r8, [sp, #192]	; 0xc0
   27770:	orr	lr, lr, r5, lsl #18
   27774:	lsr	ip, r4, #18
   27778:	orr	ip, ip, r5, lsl #14
   2777c:	str	lr, [sp, #3608]	; 0xe18
   27780:	lsr	lr, r5, #14
   27784:	lsr	r4, r5, #18
   27788:	orr	lr, lr, r0, lsl #18
   2778c:	str	ip, [sp, #3616]	; 0xe20
   27790:	lsl	ip, r1, #23
   27794:	strd	r6, [sp, #160]	; 0xa0
   27798:	str	ip, [sp, #168]	; 0xa8
   2779c:	lsr	r5, r8, #28
   277a0:	str	lr, [sp, #3612]	; 0xe1c
   277a4:	mov	r8, r0
   277a8:	ldrd	r6, [sp, #136]	; 0x88
   277ac:	orr	lr, r4, r0, lsl #14
   277b0:	lsl	ip, r9, #30
   277b4:	ldr	r4, [sp, #168]	; 0xa8
   277b8:	mov	r9, r1
   277bc:	ldrd	r0, [sp, #200]	; 0xc8
   277c0:	str	lr, [sp, #3620]	; 0xe24
   277c4:	orr	lr, r4, r8, lsr #9
   277c8:	b	277e0 <__assert_fail@plt+0x164f4>
   277cc:	nop			; (mov r0, r0)
   277d0:	bpl	ff13238c <optarg@@GLIBC_2.4+0xff0e01e4>
   277d4:	stcmi	13, cr6, [ip, #-1008]!	; 0xfffffc10
   277d8:	ldcls	3, cr11, [r5, #892]	; 0x37c
   277dc:	teqpl	r8, #1216	; 0x4c0
   277e0:	eor	r0, r0, r6
   277e4:	eor	r1, r1, r7
   277e8:	str	lr, [sp, #3628]	; 0xe2c
   277ec:	mov	r7, r9
   277f0:	mov	r6, r8
   277f4:	lsl	lr, r8, #23
   277f8:	ldrd	r8, [sp, #192]	; 0xc0
   277fc:	sub	r3, pc, #44	; 0x2c
   27800:	ldrd	r2, [r3]
   27804:	orr	lr, lr, r7, lsr #9
   27808:	orr	r5, r5, r9, lsl #4
   2780c:	str	r5, [sp, #3632]	; 0xe30
   27810:	mov	r5, r9
   27814:	orr	ip, ip, r8, lsr #2
   27818:	mov	r4, r8
   2781c:	mov	r8, r4
   27820:	mov	r9, r5
   27824:	str	ip, [sp, #3644]	; 0xe3c
   27828:	lsr	ip, r5, #28
   2782c:	ldrd	r4, [sp, #160]	; 0xa0
   27830:	orr	ip, ip, r8, lsl #4
   27834:	str	ip, [sp, #3636]	; 0xe34
   27838:	adds	r4, r4, r2
   2783c:	adc	r5, r5, r3
   27840:	mov	r3, r5
   27844:	mov	r5, r7
   27848:	mov	r2, r4
   2784c:	mov	r7, r9
   27850:	mov	r4, r6
   27854:	and	r5, r5, r1
   27858:	mov	r6, r8
   2785c:	mov	r1, r5
   27860:	and	r4, r4, r0
   27864:	lsl	r5, r8, #30
   27868:	orr	ip, r5, r7, lsr #2
   2786c:	mov	r0, r4
   27870:	lsl	r4, r9, #25
   27874:	str	ip, [sp, #3640]	; 0xe38
   27878:	orr	ip, r4, r6, lsr #7
   2787c:	str	ip, [sp, #3652]	; 0xe44
   27880:	lsl	ip, r6, #25
   27884:	ldrd	r6, [sp, #128]	; 0x80
   27888:	add	r4, sp, #3600	; 0xe10
   2788c:	add	r4, r4, #8
   27890:	adds	r6, r6, r2
   27894:	adc	r7, r7, r3
   27898:	mov	r2, r6
   2789c:	mov	r3, r7
   278a0:	ldrd	r6, [sp, #136]	; 0x88
   278a4:	ldrd	r8, [sp, #104]	; 0x68
   278a8:	str	lr, [sp, #3624]	; 0xe28
   278ac:	eor	r6, r6, r0
   278b0:	eor	r7, r7, r1
   278b4:	mov	r0, r6
   278b8:	mov	r1, r7
   278bc:	ldrd	r6, [r4]
   278c0:	add	r4, sp, #3616	; 0xe20
   278c4:	lsr	lr, r8, #1
   278c8:	ldrd	r4, [r4]
   278cc:	orr	lr, lr, r9, lsl #31
   278d0:	str	lr, [sp, #3656]	; 0xe48
   278d4:	eor	r6, r6, r4
   278d8:	eor	r7, r7, r5
   278dc:	lsr	lr, r8, #8
   278e0:	orr	lr, lr, r9, lsl #24
   278e4:	strd	r6, [sp, #168]	; 0xa8
   278e8:	str	lr, [sp, #3664]	; 0xe50
   278ec:	ldrd	r6, [sp, #192]	; 0xc0
   278f0:	lsr	lr, r8, #7
   278f4:	ldrd	r8, [sp, #152]	; 0x98
   278f8:	orr	ip, ip, r7, lsr #7
   278fc:	str	ip, [sp, #3648]	; 0xe40
   27900:	orr	r4, r8, r6
   27904:	adds	r6, r2, r0
   27908:	orr	r5, r9, r7
   2790c:	adc	r7, r3, r1
   27910:	add	r3, sp, #3616	; 0xe20
   27914:	add	r3, r3, #8
   27918:	ldrd	r0, [r3]
   2791c:	ldrd	r2, [sp, #168]	; 0xa8
   27920:	strd	r6, [sp, #128]	; 0x80
   27924:	ldr	ip, [sp, #108]	; 0x6c
   27928:	eor	r3, r3, r1
   2792c:	mov	r7, r3
   27930:	add	r3, sp, #3632	; 0xe30
   27934:	eor	r2, r2, r0
   27938:	ldrd	r0, [r3]
   2793c:	add	r3, sp, #3632	; 0xe30
   27940:	add	r3, r3, #8
   27944:	mov	r6, r2
   27948:	ldrd	r2, [r3]
   2794c:	lsr	ip, ip, #1
   27950:	str	lr, [sp, #552]	; 0x228
   27954:	eor	r1, r1, r3
   27958:	ldr	r3, [sp, #104]	; 0x68
   2795c:	eor	r0, r0, r2
   27960:	add	lr, sp, #3648	; 0xe40
   27964:	orr	r3, ip, r3, lsl #31
   27968:	str	r3, [sp, #3660]	; 0xe4c
   2796c:	ldr	r3, [sp, #108]	; 0x6c
   27970:	and	r5, r5, fp
   27974:	and	r4, r4, sl
   27978:	lsr	ip, r3, #8
   2797c:	ldr	r3, [sp, #104]	; 0x68
   27980:	orr	r3, ip, r3, lsl #24
   27984:	ldr	ip, [sp, #108]	; 0x6c
   27988:	str	r3, [sp, #3668]	; 0xe54
   2798c:	ldr	r3, [sp, #552]	; 0x228
   27990:	orr	r3, r3, ip, lsl #25
   27994:	str	r3, [sp, #552]	; 0x228
   27998:	ldr	r3, [sp, #96]	; 0x60
   2799c:	lsr	ip, r3, #19
   279a0:	lsr	r3, r3, #6
   279a4:	str	r3, [sp, #560]	; 0x230
   279a8:	ldrd	r2, [sp, #128]	; 0x80
   279ac:	adds	r2, r2, r6
   279b0:	adc	r3, r3, r7
   279b4:	mov	r6, r2
   279b8:	mov	r7, r3
   279bc:	mov	r2, r8
   279c0:	mov	r3, r9
   279c4:	ldrd	r8, [sp, #192]	; 0xc0
   279c8:	and	r2, r2, r8
   279cc:	and	r3, r3, r9
   279d0:	ldrd	r8, [lr]
   279d4:	orr	r5, r5, r3
   279d8:	orr	r4, r4, r2
   279dc:	eor	r8, r8, r0
   279e0:	eor	r9, r9, r1
   279e4:	mov	r0, r8
   279e8:	mov	r1, r9
   279ec:	ldrd	r8, [sp, #96]	; 0x60
   279f0:	lsl	r3, r9, #3
   279f4:	orr	r3, r3, r8, lsr #29
   279f8:	str	r3, [sp, #3684]	; 0xe64
   279fc:	ldr	r3, [sp, #108]	; 0x6c
   27a00:	orr	ip, ip, r9, lsl #13
   27a04:	str	ip, [sp, #3672]	; 0xe58
   27a08:	ldr	ip, [sp, #560]	; 0x230
   27a0c:	lsr	r3, r3, #7
   27a10:	lsr	r2, r9, #19
   27a14:	str	r3, [sp, #556]	; 0x22c
   27a18:	orr	ip, ip, r9, lsl #26
   27a1c:	lsl	r3, r8, #3
   27a20:	ldrd	r8, [sp, #16]
   27a24:	str	ip, [sp, #560]	; 0x230
   27a28:	add	ip, sp, #3648	; 0xe40
   27a2c:	adds	r8, r8, r6
   27a30:	adc	r9, r9, r7
   27a34:	add	ip, ip, #8
   27a38:	strd	r8, [sp, #216]	; 0xd8
   27a3c:	ldrd	r8, [ip]
   27a40:	add	ip, sp, #3664	; 0xe50
   27a44:	adds	r0, r0, r4
   27a48:	adc	r1, r1, r5
   27a4c:	ldrd	r4, [ip]
   27a50:	eor	r8, r8, r4
   27a54:	eor	r9, r9, r5
   27a58:	ldrd	r4, [sp, #96]	; 0x60
   27a5c:	orr	r3, r3, r5, lsr #29
   27a60:	str	r3, [sp, #3680]	; 0xe60
   27a64:	add	r3, sp, #552	; 0x228
   27a68:	orr	ip, r2, r4, lsl #13
   27a6c:	ldrd	r2, [r3]
   27a70:	adds	r4, r0, r6
   27a74:	str	ip, [sp, #3676]	; 0xe5c
   27a78:	eor	r3, r3, r9
   27a7c:	mov	r9, r3
   27a80:	lsr	r3, r5, #6
   27a84:	str	r3, [sp, #564]	; 0x234
   27a88:	add	r3, sp, #3664	; 0xe50
   27a8c:	add	r3, r3, #8
   27a90:	adc	r5, r1, r7
   27a94:	ldrd	r0, [r3]
   27a98:	add	r3, sp, #3680	; 0xe60
   27a9c:	eor	r2, r2, r8
   27aa0:	mov	r8, r2
   27aa4:	ldrd	r2, [r3]
   27aa8:	ldrd	r6, [sp, #216]	; 0xd8
   27aac:	strd	r4, [sp, #16]
   27ab0:	eor	r0, r0, r2
   27ab4:	eor	r1, r1, r3
   27ab8:	ldrd	r2, [sp, #112]	; 0x70
   27abc:	lsr	lr, r6, #14
   27ac0:	lsr	ip, r6, #18
   27ac4:	adds	r2, r2, r8
   27ac8:	adc	r3, r3, r9
   27acc:	mov	r9, r3
   27ad0:	add	r3, sp, #560	; 0x230
   27ad4:	mov	r8, r2
   27ad8:	ldrd	r2, [r3]
   27adc:	ldrd	r4, [sp, #48]	; 0x30
   27ae0:	eor	r2, r2, r0
   27ae4:	adds	r4, r4, r8
   27ae8:	mov	r8, r4
   27aec:	adc	r5, r5, r9
   27af0:	mov	r0, r6
   27af4:	adds	r2, r8, r2
   27af8:	eor	r3, r3, r1
   27afc:	ldrd	r8, [sp, #16]
   27b00:	mov	r1, r3
   27b04:	orr	r3, lr, r7, lsl #18
   27b08:	lsr	lr, r7, #14
   27b0c:	str	r3, [sp, #3688]	; 0xe68
   27b10:	lsr	r4, r7, #18
   27b14:	orr	r3, ip, r7, lsl #14
   27b18:	orr	lr, lr, r0, lsl #18
   27b1c:	str	r3, [sp, #3696]	; 0xe70
   27b20:	str	lr, [sp, #3692]	; 0xe6c
   27b24:	adc	r3, r5, r1
   27b28:	orr	lr, r4, r0, lsl #14
   27b2c:	lsr	r5, r8, #28
   27b30:	ldrd	r0, [sp, #200]	; 0xc8
   27b34:	lsl	ip, r9, #30
   27b38:	ldrd	r8, [sp, #208]	; 0xd0
   27b3c:	lsl	r6, r7, #23
   27b40:	str	lr, [sp, #3700]	; 0xe74
   27b44:	eor	r0, r0, r8
   27b48:	eor	r1, r1, r9
   27b4c:	ldrd	r8, [sp, #216]	; 0xd8
   27b50:	strd	r2, [sp, #128]	; 0x80
   27b54:	mov	r7, r9
   27b58:	ldr	r9, [sp, #20]
   27b5c:	orr	lr, r6, r8, lsr #9
   27b60:	str	lr, [sp, #3708]	; 0xe7c
   27b64:	orr	r5, r5, r9, lsl #4
   27b68:	str	r5, [sp, #3712]	; 0xe80
   27b6c:	ldrd	r4, [sp, #16]
   27b70:	mov	r6, r8
   27b74:	lsl	lr, r8, #23
   27b78:	orr	ip, ip, r4, lsr #2
   27b7c:	mov	r8, r4
   27b80:	mov	r9, r5
   27b84:	str	ip, [sp, #3724]	; 0xe8c
   27b88:	lsr	ip, r5, #28
   27b8c:	add	r5, pc, #884	; 0x374
   27b90:	ldrd	r4, [r5]
   27b94:	orr	lr, lr, r7, lsr #9
   27b98:	orr	ip, ip, r8, lsl #4
   27b9c:	adds	r4, r4, r2
   27ba0:	adc	r5, r5, r3
   27ba4:	mov	r3, r5
   27ba8:	mov	r5, r7
   27bac:	mov	r2, r4
   27bb0:	mov	r7, r9
   27bb4:	mov	r4, r6
   27bb8:	and	r5, r5, r1
   27bbc:	mov	r6, r8
   27bc0:	mov	r1, r5
   27bc4:	and	r4, r4, r0
   27bc8:	lsl	r5, r8, #30
   27bcc:	mov	r0, r4
   27bd0:	str	ip, [sp, #3716]	; 0xe84
   27bd4:	lsl	r4, r9, #25
   27bd8:	orr	ip, r5, r7, lsr #2
   27bdc:	str	ip, [sp, #3720]	; 0xe88
   27be0:	orr	ip, r4, r6, lsr #7
   27be4:	mov	r5, r7
   27be8:	mov	r4, r6
   27bec:	str	ip, [sp, #3732]	; 0xe94
   27bf0:	lsl	ip, r6, #25
   27bf4:	ldrd	r6, [sp, #136]	; 0x88
   27bf8:	ldrd	r8, [sp, #24]
   27bfc:	str	lr, [sp, #3704]	; 0xe78
   27c00:	adds	r6, r6, r2
   27c04:	adc	r7, r7, r3
   27c08:	mov	r2, r6
   27c0c:	mov	r3, r7
   27c10:	ldrd	r6, [sp, #200]	; 0xc8
   27c14:	lsr	lr, r8, #1
   27c18:	orr	lr, lr, r9, lsl #31
   27c1c:	eor	r6, r6, r0
   27c20:	eor	r7, r7, r1
   27c24:	add	r1, sp, #3680	; 0xe60
   27c28:	strd	r6, [sp, #112]	; 0x70
   27c2c:	add	r1, r1, #8
   27c30:	add	r6, sp, #3696	; 0xe70
   27c34:	ldrd	r0, [r1]
   27c38:	ldrd	r6, [r6]
   27c3c:	str	lr, [sp, #3736]	; 0xe98
   27c40:	lsr	lr, r8, #8
   27c44:	eor	r0, r0, r6
   27c48:	eor	r1, r1, r7
   27c4c:	mov	r6, r0
   27c50:	mov	r7, r1
   27c54:	ldrd	r0, [sp, #192]	; 0xc0
   27c58:	orr	lr, lr, r9, lsl #24
   27c5c:	mov	r9, r5
   27c60:	str	lr, [sp, #3744]	; 0xea0
   27c64:	orr	ip, ip, r9, lsr #7
   27c68:	lsr	lr, r8, #7
   27c6c:	orr	r0, r0, r4
   27c70:	orr	r1, r1, r5
   27c74:	mov	r4, r0
   27c78:	mov	r5, r1
   27c7c:	str	lr, [sp, #568]	; 0x238
   27c80:	str	ip, [sp, #3728]	; 0xe90
   27c84:	ldr	ip, [sp, #28]
   27c88:	ldrd	r0, [sp, #112]	; 0x70
   27c8c:	add	lr, sp, #3712	; 0xe80
   27c90:	add	lr, lr, #8
   27c94:	adds	r0, r0, r2
   27c98:	adc	r1, r1, r3
   27c9c:	mov	r3, r1
   27ca0:	add	r1, sp, #3696	; 0xe70
   27ca4:	add	r1, r1, #8
   27ca8:	mov	r2, r0
   27cac:	ldrd	r0, [r1]
   27cb0:	ldrd	r8, [lr]
   27cb4:	lsr	ip, ip, #1
   27cb8:	eor	r1, r1, r7
   27cbc:	mov	r7, r1
   27cc0:	add	r1, sp, #3712	; 0xe80
   27cc4:	eor	r0, r0, r6
   27cc8:	mov	r6, r0
   27ccc:	ldrd	r0, [r1]
   27cd0:	adds	r6, r6, r2
   27cd4:	adc	r7, r7, r3
   27cd8:	eor	r0, r0, r8
   27cdc:	eor	r1, r1, r9
   27ce0:	ldrd	r8, [sp, #152]	; 0x98
   27ce4:	ldrd	r2, [sp, #16]
   27ce8:	adds	sl, sl, r6
   27cec:	and	r8, r8, r4
   27cf0:	and	r9, r9, r5
   27cf4:	mov	r4, r8
   27cf8:	mov	r5, r9
   27cfc:	ldrd	r8, [sp, #24]
   27d00:	adc	fp, fp, r7
   27d04:	orr	ip, ip, r8, lsl #31
   27d08:	str	ip, [sp, #3740]	; 0xe9c
   27d0c:	lsr	ip, r9, #8
   27d10:	orr	ip, ip, r8, lsl #24
   27d14:	str	ip, [sp, #3748]	; 0xea4
   27d18:	ldr	ip, [sp, #568]	; 0x238
   27d1c:	orr	ip, ip, r9, lsl #25
   27d20:	ldrd	r8, [sp, #160]	; 0xa0
   27d24:	str	ip, [sp, #568]	; 0x238
   27d28:	lsr	lr, r8, #6
   27d2c:	lsr	ip, r8, #19
   27d30:	ldrd	r8, [sp, #192]	; 0xc0
   27d34:	str	lr, [sp, #576]	; 0x240
   27d38:	add	lr, sp, #3728	; 0xe90
   27d3c:	and	r8, r8, r2
   27d40:	and	r9, r9, r3
   27d44:	mov	r2, r8
   27d48:	mov	r3, r9
   27d4c:	ldrd	r8, [lr]
   27d50:	orr	r5, r5, r3
   27d54:	orr	r4, r4, r2
   27d58:	eor	r8, r8, r0
   27d5c:	eor	r9, r9, r1
   27d60:	add	r1, sp, #3744	; 0xea0
   27d64:	strd	r8, [sp, #112]	; 0x70
   27d68:	ldrd	r8, [sp, #160]	; 0xa0
   27d6c:	ldrd	r0, [r1]
   27d70:	ldr	lr, [sp, #28]
   27d74:	orr	r3, ip, r9, lsl #13
   27d78:	str	r3, [sp, #3752]	; 0xea8
   27d7c:	lsr	r3, r9, #19
   27d80:	orr	r3, r3, r8, lsl #13
   27d84:	str	r3, [sp, #3756]	; 0xeac
   27d88:	add	r3, sp, #3728	; 0xe90
   27d8c:	add	r3, r3, #8
   27d90:	lsl	r2, r9, #3
   27d94:	orr	ip, r2, r8, lsr #29
   27d98:	ldrd	r2, [r3]
   27d9c:	str	ip, [sp, #3764]	; 0xeb4
   27da0:	lsl	ip, r8, #3
   27da4:	eor	r2, r2, r0
   27da8:	eor	r3, r3, r1
   27dac:	ldrd	r0, [sp, #112]	; 0x70
   27db0:	orr	ip, ip, r9, lsr #29
   27db4:	lsr	lr, lr, #7
   27db8:	adds	r0, r0, r4
   27dbc:	str	lr, [sp, #572]	; 0x23c
   27dc0:	str	ip, [sp, #3760]	; 0xeb0
   27dc4:	ldr	lr, [sp, #576]	; 0x240
   27dc8:	add	ip, sp, #568	; 0x238
   27dcc:	adc	r1, r1, r5
   27dd0:	orr	lr, lr, r9, lsl #26
   27dd4:	mov	r5, r1
   27dd8:	mov	r1, r9
   27ddc:	ldrd	r8, [ip]
   27de0:	lsr	ip, r1, #6
   27de4:	add	r1, sp, #3744	; 0xea0
   27de8:	eor	r8, r8, r2
   27dec:	str	ip, [sp, #580]	; 0x244
   27df0:	add	r1, r1, #8
   27df4:	add	ip, sp, #3760	; 0xeb0
   27df8:	mov	r2, r8
   27dfc:	eor	r9, r9, r3
   27e00:	adds	r8, r0, r6
   27e04:	mov	r3, r9
   27e08:	ldrd	r0, [r1]
   27e0c:	adc	r9, r5, r7
   27e10:	ldrd	r6, [ip]
   27e14:	str	lr, [sp, #576]	; 0x240
   27e18:	ldrd	r4, [sp, #104]	; 0x68
   27e1c:	eor	r0, r0, r6
   27e20:	add	r6, sp, #576	; 0x240
   27e24:	eor	r1, r1, r7
   27e28:	ldrd	r6, [r6]
   27e2c:	lsr	ip, sl, #18
   27e30:	adds	r4, r4, r2
   27e34:	eor	r6, r6, r0
   27e38:	eor	r7, r7, r1
   27e3c:	mov	r0, r6
   27e40:	mov	r1, r7
   27e44:	ldrd	r6, [sp, #88]	; 0x58
   27e48:	orr	ip, ip, fp, lsl #14
   27e4c:	adc	r5, r5, r3
   27e50:	str	ip, [sp, #3776]	; 0xec0
   27e54:	adds	r6, r6, r4
   27e58:	lsr	ip, fp, #18
   27e5c:	lsr	lr, sl, #14
   27e60:	str	ip, [sp, #112]	; 0x70
   27e64:	adc	r7, r7, r5
   27e68:	orr	lr, lr, fp, lsl #18
   27e6c:	adds	r6, r6, r0
   27e70:	adc	r7, r7, r1
   27e74:	str	lr, [sp, #3768]	; 0xeb8
   27e78:	ldr	r1, [sp, #112]	; 0x70
   27e7c:	lsr	lr, fp, #14
   27e80:	orr	lr, lr, sl, lsl #18
   27e84:	strd	r6, [sp, #104]	; 0x68
   27e88:	str	lr, [sp, #3772]	; 0xebc
   27e8c:	ldrd	r6, [sp, #208]	; 0xd0
   27e90:	orr	lr, r1, sl, lsl #14
   27e94:	lsl	ip, fp, #23
   27e98:	ldrd	r0, [sp, #216]	; 0xd8
   27e9c:	orr	ip, ip, sl, lsr #9
   27ea0:	str	ip, [sp, #3788]	; 0xecc
   27ea4:	lsl	ip, r8, #30
   27ea8:	add	r3, pc, #96	; 0x60
   27eac:	ldrd	r2, [r3]
   27eb0:	lsr	r5, r8, #28
   27eb4:	orr	ip, ip, r9, lsr #2
   27eb8:	eor	r0, r0, r6
   27ebc:	eor	r1, r1, r7
   27ec0:	ldrd	r6, [sp, #104]	; 0x68
   27ec4:	lsl	r4, r9, #30
   27ec8:	str	lr, [sp, #3780]	; 0xec4
   27ecc:	str	ip, [sp, #3800]	; 0xed8
   27ed0:	orr	lr, r5, r9, lsl #4
   27ed4:	ldr	ip, [sp, #144]	; 0x90
   27ed8:	orr	r5, r4, r8, lsr #2
   27edc:	str	lr, [sp, #3792]	; 0xed0
   27ee0:	lsr	lr, r9, #28
   27ee4:	adds	r6, r6, r2
   27ee8:	orr	lr, lr, r8, lsl #4
   27eec:	str	r5, [sp, #3804]	; 0xedc
   27ef0:	lsl	r5, sl, #23
   27ef4:	adc	r7, r7, r3
   27ef8:	lsl	r4, r9, #25
   27efc:	str	lr, [sp, #3796]	; 0xed4
   27f00:	b	27f20 <__assert_fail@plt+0x16c34>
   27f04:	nop			; (mov r0, r0)
   27f08:	blhi	fec00e88 <optarg@@GLIBC_2.4+0xfebaece0>
   27f0c:	strvs	r7, [sl, #-852]	; 0xfffffcac
   27f10:	lfmcc	f3, 3, [r7], #-672	; 0xfffffd60
   27f14:			; <UNDEFINED> instruction: 0x766a0abb
   27f18:	strbmi	sl, [sp, r6, ror #29]!
   27f1c:	bichi	ip, r2, lr, lsr #18
   27f20:	lsr	lr, ip, #1
   27f24:	orr	ip, r5, fp, lsr #9
   27f28:	mov	r2, r6
   27f2c:	mov	r3, r7
   27f30:	str	ip, [sp, #3784]	; 0xec8
   27f34:	ldrd	r6, [sp, #200]	; 0xc8
   27f38:	orr	ip, r4, r8, lsr #7
   27f3c:	str	ip, [sp, #3812]	; 0xee4
   27f40:	lsl	ip, r8, #25
   27f44:	str	ip, [sp, #112]	; 0x70
   27f48:	add	ip, sp, #3760	; 0xeb0
   27f4c:	adds	r6, r6, r2
   27f50:	ldrd	r4, [sp, #208]	; 0xd0
   27f54:	add	ip, ip, #8
   27f58:	adc	r7, r7, r3
   27f5c:	and	r0, r0, sl
   27f60:	and	r1, r1, fp
   27f64:	mov	r2, r6
   27f68:	mov	r3, r7
   27f6c:	ldrd	r6, [ip]
   27f70:	add	ip, sp, #3776	; 0xec0
   27f74:	eor	r4, r4, r0
   27f78:	eor	r5, r5, r1
   27f7c:	mov	r0, r4
   27f80:	mov	r1, r5
   27f84:	ldrd	r4, [ip]
   27f88:	eor	r6, r6, r4
   27f8c:	eor	r7, r7, r5
   27f90:	ldrd	r4, [sp, #144]	; 0x90
   27f94:	strd	r6, [sp, #136]	; 0x88
   27f98:	adds	r6, r2, r0
   27f9c:	orr	lr, lr, r5, lsl #31
   27fa0:	str	lr, [sp, #3816]	; 0xee8
   27fa4:	lsr	lr, r4, #8
   27fa8:	orr	ip, lr, r5, lsl #24
   27fac:	str	ip, [sp, #3824]	; 0xef0
   27fb0:	lsr	ip, r4, #7
   27fb4:	mov	r7, r5
   27fb8:	str	ip, [sp, #584]	; 0x248
   27fbc:	ldrd	r4, [sp, #16]
   27fc0:	ldr	ip, [sp, #112]	; 0x70
   27fc4:	orr	ip, ip, r9, lsr #7
   27fc8:	str	ip, [sp, #3808]	; 0xee0
   27fcc:	lsr	ip, r7, #1
   27fd0:	adc	r7, r3, r1
   27fd4:	add	r3, sp, #3776	; 0xec0
   27fd8:	add	r3, r3, #8
   27fdc:	ldrd	r0, [r3]
   27fe0:	ldrd	r2, [sp, #136]	; 0x88
   27fe4:	strd	r6, [sp, #112]	; 0x70
   27fe8:	orr	r4, r4, r8
   27fec:	eor	r3, r3, r1
   27ff0:	mov	r7, r3
   27ff4:	add	r3, sp, #3792	; 0xed0
   27ff8:	eor	r2, r2, r0
   27ffc:	ldrd	r0, [r3]
   28000:	add	r3, sp, #3792	; 0xed0
   28004:	add	r3, r3, #8
   28008:	mov	r6, r2
   2800c:	ldrd	r2, [r3]
   28010:	orr	r5, r5, r9
   28014:	eor	r0, r0, r2
   28018:	eor	r1, r1, r3
   2801c:	ldrd	r2, [sp, #192]	; 0xc0
   28020:	and	r2, r2, r4
   28024:	and	r3, r3, r5
   28028:	mov	r4, r2
   2802c:	mov	r5, r3
   28030:	ldrd	r2, [sp, #144]	; 0x90
   28034:	orr	ip, ip, r2, lsl #31
   28038:	str	ip, [sp, #3820]	; 0xeec
   2803c:	lsr	ip, r3, #8
   28040:	orr	ip, ip, r2, lsl #24
   28044:	str	ip, [sp, #3828]	; 0xef4
   28048:	ldr	ip, [sp, #584]	; 0x248
   2804c:	orr	r3, ip, r3, lsl #25
   28050:	str	r3, [sp, #584]	; 0x248
   28054:	ldrd	r2, [sp, #128]	; 0x80
   28058:	lsr	r3, r2, #6
   2805c:	str	r3, [sp, #592]	; 0x250
   28060:	lsr	ip, r2, #19
   28064:	ldrd	r2, [sp, #112]	; 0x70
   28068:	adds	r2, r2, r6
   2806c:	adc	r3, r3, r7
   28070:	mov	r6, r2
   28074:	mov	r7, r3
   28078:	ldrd	r2, [sp, #16]
   2807c:	and	r2, r2, r8
   28080:	and	r3, r3, r9
   28084:	strd	r2, [sp, #136]	; 0x88
   28088:	add	r3, sp, #3808	; 0xee0
   2808c:	ldrd	r2, [r3]
   28090:	eor	r2, r2, r0
   28094:	eor	r3, r3, r1
   28098:	ldrd	r0, [sp, #128]	; 0x80
   2809c:	strd	r2, [sp, #112]	; 0x70
   280a0:	ldrd	r2, [sp, #136]	; 0x88
   280a4:	orr	ip, ip, r1, lsl #13
   280a8:	lsr	lr, r1, #19
   280ac:	orr	r3, r3, r5
   280b0:	mov	r5, r3
   280b4:	lsl	r3, r1, #3
   280b8:	orr	r3, r3, r0, lsr #29
   280bc:	str	r3, [sp, #3844]	; 0xf04
   280c0:	ldr	r3, [sp, #148]	; 0x94
   280c4:	orr	r2, r2, r4
   280c8:	mov	r4, r2
   280cc:	lsr	r3, r3, #7
   280d0:	str	r3, [sp, #588]	; 0x24c
   280d4:	ldr	r3, [sp, #592]	; 0x250
   280d8:	lsl	r2, r0, #3
   280dc:	orr	r3, r3, r1, lsl #26
   280e0:	ldrd	r0, [sp, #152]	; 0x98
   280e4:	str	r3, [sp, #592]	; 0x250
   280e8:	add	r3, sp, #3808	; 0xee0
   280ec:	adds	r0, r0, r6
   280f0:	adc	r1, r1, r7
   280f4:	add	r3, r3, #8
   280f8:	strd	r0, [sp, #184]	; 0xb8
   280fc:	ldrd	r0, [sp, #112]	; 0x70
   28100:	str	ip, [sp, #3832]	; 0xef8
   28104:	str	r2, [sp, #136]	; 0x88
   28108:	adds	r0, r0, r4
   2810c:	adc	r1, r1, r5
   28110:	ldrd	r4, [r3]
   28114:	add	r3, sp, #3824	; 0xef0
   28118:	ldr	ip, [sp, #132]	; 0x84
   2811c:	ldrd	r2, [r3]
   28120:	lsr	ip, ip, #6
   28124:	eor	r5, r5, r3
   28128:	ldr	r3, [sp, #128]	; 0x80
   2812c:	eor	r4, r4, r2
   28130:	ldr	r2, [sp, #136]	; 0x88
   28134:	orr	r3, lr, r3, lsl #13
   28138:	str	r3, [sp, #3836]	; 0xefc
   2813c:	ldr	r3, [sp, #132]	; 0x84
   28140:	str	ip, [sp, #596]	; 0x254
   28144:	add	ip, sp, #3840	; 0xf00
   28148:	orr	r3, r2, r3, lsr #29
   2814c:	str	r3, [sp, #3840]	; 0xf00
   28150:	add	r3, sp, #584	; 0x248
   28154:	ldrd	r2, [r3]
   28158:	eor	r2, r2, r4
   2815c:	adds	r4, r0, r6
   28160:	eor	r3, r3, r5
   28164:	adc	r5, r1, r7
   28168:	add	r1, sp, #3824	; 0xef0
   2816c:	add	r1, r1, #8
   28170:	ldrd	r6, [ip]
   28174:	ldrd	r0, [r1]
   28178:	strd	r4, [sp, #136]	; 0x88
   2817c:	ldrd	r4, [sp, #24]
   28180:	eor	r0, r0, r6
   28184:	eor	r1, r1, r7
   28188:	ldrd	r6, [sp, #184]	; 0xb8
   2818c:	adds	r4, r4, r2
   28190:	adc	r5, r5, r3
   28194:	lsr	lr, r6, #14
   28198:	lsr	ip, r6, #18
   2819c:	ldrd	r6, [sp, #32]
   281a0:	add	r3, sp, #592	; 0x250
   281a4:	adds	r6, r6, r4
   281a8:	ldrd	r2, [r3]
   281ac:	adc	r7, r7, r5
   281b0:	ldrd	r4, [sp, #184]	; 0xb8
   281b4:	eor	r3, r3, r1
   281b8:	mov	r1, r3
   281bc:	eor	r2, r2, r0
   281c0:	orr	r3, lr, r5, lsl #18
   281c4:	adds	r2, r6, r2
   281c8:	str	r3, [sp, #3848]	; 0xf08
   281cc:	orr	r3, ip, r5, lsl #14
   281d0:	str	r3, [sp, #3856]	; 0xf10
   281d4:	adc	r3, r7, r1
   281d8:	ldrd	r0, [sp, #136]	; 0x88
   281dc:	lsr	r4, r5, #18
   281e0:	lsr	lr, r5, #14
   281e4:	lsr	r6, r0, #28
   281e8:	lsl	r5, r1, #30
   281ec:	ldrd	r0, [sp, #184]	; 0xb8
   281f0:	orr	lr, lr, r0, lsl #18
   281f4:	str	lr, [sp, #3852]	; 0xf0c
   281f8:	orr	lr, r4, r0, lsl #14
   281fc:	str	lr, [sp, #3860]	; 0xf14
   28200:	ldr	lr, [sp, #140]	; 0x8c
   28204:	lsl	ip, r1, #23
   28208:	ldrd	r0, [sp, #216]	; 0xd8
   2820c:	orr	lr, r6, lr, lsl #4
   28210:	ldrd	r6, [sp, #136]	; 0x88
   28214:	str	lr, [sp, #3872]	; 0xf20
   28218:	eor	r0, r0, sl
   2821c:	orr	r5, r5, r6, lsr #2
   28220:	lsr	lr, r7, #28
   28224:	str	r5, [sp, #3884]	; 0xf2c
   28228:	ldrd	r6, [sp, #184]	; 0xb8
   2822c:	sub	r5, pc, #796	; 0x31c
   28230:	ldrd	r4, [r5]
   28234:	eor	r1, r1, fp
   28238:	orr	ip, ip, r6, lsr #9
   2823c:	adds	r4, r4, r2
   28240:	str	ip, [sp, #3868]	; 0xf1c
   28244:	ldr	ip, [sp, #136]	; 0x88
   28248:	strd	r2, [sp, #168]	; 0xa8
   2824c:	mov	r2, r4
   28250:	mov	r4, r6
   28254:	and	r4, r4, r0
   28258:	mov	r0, r4
   2825c:	ldr	r4, [sp, #136]	; 0x88
   28260:	lsl	ip, ip, #30
   28264:	adc	r5, r5, r3
   28268:	orr	lr, lr, r4, lsl #4
   2826c:	str	lr, [sp, #3876]	; 0xf24
   28270:	ldr	lr, [sp, #140]	; 0x8c
   28274:	mov	r3, r5
   28278:	mov	r5, r7
   2827c:	orr	ip, ip, lr, lsr #2
   28280:	str	ip, [sp, #3880]	; 0xf28
   28284:	ldr	ip, [sp, #40]	; 0x28
   28288:	and	r5, r5, r1
   2828c:	mov	r1, r5
   28290:	lsl	r5, r6, #23
   28294:	lsl	r4, lr, #25
   28298:	lsr	lr, ip, #1
   2829c:	orr	ip, r5, r7, lsr #9
   282a0:	ldrd	r6, [sp, #136]	; 0x88
   282a4:	str	ip, [sp, #3864]	; 0xf18
   282a8:	orr	ip, r4, r6, lsr #7
   282ac:	mov	r5, r7
   282b0:	str	ip, [sp, #3892]	; 0xf34
   282b4:	mov	r4, r6
   282b8:	lsl	ip, r6, #25
   282bc:	ldrd	r6, [sp, #208]	; 0xd0
   282c0:	orr	r4, r4, r8
   282c4:	adds	r6, r6, r2
   282c8:	adc	r7, r7, r3
   282cc:	mov	r2, r6
   282d0:	mov	r3, r7
   282d4:	ldrd	r6, [sp, #216]	; 0xd8
   282d8:	eor	r7, r7, r1
   282dc:	add	r1, sp, #3840	; 0xf00
   282e0:	eor	r6, r6, r0
   282e4:	add	r1, r1, #8
   282e8:	strd	r6, [sp, #24]
   282ec:	ldrd	r6, [r1]
   282f0:	add	r1, sp, #3856	; 0xf10
   282f4:	ldrd	r0, [r1]
   282f8:	eor	r7, r7, r1
   282fc:	ldr	r1, [sp, #44]	; 0x2c
   28300:	eor	r6, r6, r0
   28304:	orr	lr, lr, r1, lsl #31
   28308:	ldrd	r0, [sp, #40]	; 0x28
   2830c:	str	lr, [sp, #3896]	; 0xf38
   28310:	lsr	lr, r0, #8
   28314:	orr	lr, lr, r1, lsl #24
   28318:	mov	r1, r5
   2831c:	orr	r5, r5, r9
   28320:	orr	ip, ip, r1, lsr #7
   28324:	ldrd	r0, [sp, #24]
   28328:	str	ip, [sp, #3888]	; 0xf30
   2832c:	ldr	ip, [sp, #44]	; 0x2c
   28330:	adds	r0, r0, r2
   28334:	adc	r1, r1, r3
   28338:	add	r3, sp, #3856	; 0xf10
   2833c:	add	r3, r3, #8
   28340:	strd	r0, [sp, #24]
   28344:	ldrd	r0, [r3]
   28348:	add	r3, sp, #3872	; 0xf20
   2834c:	str	lr, [sp, #3904]	; 0xf40
   28350:	eor	r0, r0, r6
   28354:	eor	r1, r1, r7
   28358:	mov	r6, r0
   2835c:	mov	r7, r1
   28360:	ldrd	r0, [r3]
   28364:	add	r3, sp, #3872	; 0xf20
   28368:	add	r3, r3, #8
   2836c:	ldr	lr, [sp, #40]	; 0x28
   28370:	ldrd	r2, [r3]
   28374:	lsr	ip, ip, #1
   28378:	lsr	lr, lr, #7
   2837c:	eor	r0, r0, r2
   28380:	eor	r1, r1, r3
   28384:	str	lr, [sp, #600]	; 0x258
   28388:	strd	r0, [sp, #112]	; 0x70
   2838c:	ldrd	r0, [sp, #16]
   28390:	and	r0, r0, r4
   28394:	and	r1, r1, r5
   28398:	mov	r4, r0
   2839c:	mov	r5, r1
   283a0:	ldrd	r0, [sp, #40]	; 0x28
   283a4:	orr	r3, ip, r0, lsl #31
   283a8:	lsr	ip, r1, #8
   283ac:	str	r3, [sp, #3900]	; 0xf3c
   283b0:	orr	r3, ip, r0, lsl #24
   283b4:	str	r3, [sp, #3908]	; 0xf44
   283b8:	ldr	r3, [sp, #600]	; 0x258
   283bc:	orr	r3, r3, r1, lsl #25
   283c0:	str	r3, [sp, #600]	; 0x258
   283c4:	ldrd	r0, [sp, #104]	; 0x68
   283c8:	add	r1, sp, #3888	; 0xf30
   283cc:	lsr	r3, r0, #6
   283d0:	str	r3, [sp, #608]	; 0x260
   283d4:	ldrd	r2, [sp, #24]
   283d8:	lsr	ip, r0, #19
   283dc:	ldrd	r0, [r1]
   283e0:	adds	r2, r2, r6
   283e4:	adc	r3, r3, r7
   283e8:	ldrd	r6, [sp, #112]	; 0x70
   283ec:	strd	r2, [sp, #24]
   283f0:	ldrd	r2, [sp, #136]	; 0x88
   283f4:	eor	r6, r6, r0
   283f8:	eor	r7, r7, r1
   283fc:	and	r2, r2, r8
   28400:	and	r3, r3, r9
   28404:	mov	r0, r6
   28408:	mov	r1, r7
   2840c:	orr	r6, r4, r2
   28410:	orr	r7, r5, r3
   28414:	ldrd	r4, [sp, #104]	; 0x68
   28418:	strd	r0, [sp, #112]	; 0x70
   2841c:	ldrd	r0, [sp, #24]
   28420:	orr	ip, ip, r5, lsl #13
   28424:	str	ip, [sp, #3912]	; 0xf48
   28428:	ldr	ip, [sp, #44]	; 0x2c
   2842c:	lsl	r3, r5, #3
   28430:	orr	r3, r3, r4, lsr #29
   28434:	lsr	ip, ip, #7
   28438:	str	ip, [sp, #604]	; 0x25c
   2843c:	ldr	ip, [sp, #608]	; 0x260
   28440:	lsr	r2, r5, #19
   28444:	str	r3, [sp, #3924]	; 0xf54
   28448:	orr	ip, ip, r5, lsl #26
   2844c:	lsl	r3, r4, #3
   28450:	ldrd	r4, [sp, #192]	; 0xc0
   28454:	str	ip, [sp, #608]	; 0x260
   28458:	adds	r0, r0, r4
   2845c:	adc	r1, r1, r5
   28460:	mov	r4, r0
   28464:	mov	r5, r1
   28468:	ldrd	r0, [sp, #112]	; 0x70
   2846c:	strd	r4, [sp, #152]	; 0x98
   28470:	adds	r0, r0, r6
   28474:	adc	r1, r1, r7
   28478:	mov	r7, r1
   2847c:	add	r1, sp, #3888	; 0xf30
   28480:	add	r1, r1, #8
   28484:	ldrd	r4, [r1]
   28488:	add	r1, sp, #3904	; 0xf40
   2848c:	mov	r6, r0
   28490:	ldrd	r0, [r1]
   28494:	eor	r4, r4, r0
   28498:	eor	r5, r5, r1
   2849c:	ldrd	r0, [sp, #104]	; 0x68
   284a0:	orr	r3, r3, r1, lsr #29
   284a4:	str	r3, [sp, #3920]	; 0xf50
   284a8:	add	r3, sp, #600	; 0x258
   284ac:	orr	ip, r2, r0, lsl #13
   284b0:	ldrd	r2, [r3]
   284b4:	str	ip, [sp, #3916]	; 0xf4c
   284b8:	eor	r3, r3, r5
   284bc:	mov	r5, r3
   284c0:	lsr	r3, r1, #6
   284c4:	ldrd	r0, [sp, #24]
   284c8:	eor	r2, r2, r4
   284cc:	mov	r4, r2
   284d0:	adds	r0, r0, r6
   284d4:	adc	r1, r1, r7
   284d8:	mov	r2, r0
   284dc:	str	r3, [sp, #612]	; 0x264
   284e0:	mov	r3, r1
   284e4:	strd	r2, [sp, #112]	; 0x70
   284e8:	add	r3, sp, #3904	; 0xf40
   284ec:	add	r3, r3, #8
   284f0:	ldrd	r0, [r3]
   284f4:	add	r3, sp, #3920	; 0xf50
   284f8:	ldrd	r6, [r3]
   284fc:	eor	r0, r0, r6
   28500:	eor	r1, r1, r7
   28504:	mov	r2, r0
   28508:	mov	r3, r1
   2850c:	ldrd	r0, [sp, #144]	; 0x90
   28510:	adds	r0, r0, r4
   28514:	adc	r1, r1, r5
   28518:	mov	r6, r0
   2851c:	mov	r7, r1
   28520:	ldrd	r0, [sp, #152]	; 0x98
   28524:	add	r1, sp, #608	; 0x260
   28528:	add	r5, pc, #824	; 0x338
   2852c:	ldrd	r4, [r5]
   28530:	lsr	lr, r0, #14
   28534:	lsr	ip, r0, #18
   28538:	ldrd	r0, [r1]
   2853c:	eor	r0, r0, r2
   28540:	eor	r1, r1, r3
   28544:	ldrd	r2, [sp, #56]	; 0x38
   28548:	strd	r0, [sp, #24]
   2854c:	ldrd	r0, [sp, #152]	; 0x98
   28550:	adds	r2, r2, r6
   28554:	adc	r3, r3, r7
   28558:	mov	r7, r3
   2855c:	orr	r3, lr, r1, lsl #18
   28560:	str	r3, [sp, #3928]	; 0xf58
   28564:	ldr	r3, [sp, #156]	; 0x9c
   28568:	mov	r6, r2
   2856c:	lsr	r0, r1, #14
   28570:	orr	r3, ip, r3, lsl #14
   28574:	str	r3, [sp, #3936]	; 0xf60
   28578:	ldr	r3, [sp, #156]	; 0x9c
   2857c:	lsr	r1, r3, #18
   28580:	ldrd	r2, [sp, #24]
   28584:	adds	r2, r2, r6
   28588:	adc	r3, r3, r7
   2858c:	ldrd	r6, [sp, #112]	; 0x70
   28590:	strd	r2, [sp, #192]	; 0xc0
   28594:	lsl	ip, r7, #30
   28598:	lsr	r2, r6, #28
   2859c:	ldrd	r6, [sp, #152]	; 0x98
   285a0:	orr	lr, r0, r6, lsl #18
   285a4:	lsl	r3, r7, #23
   285a8:	orr	r3, r3, r6, lsr #9
   285ac:	str	lr, [sp, #3932]	; 0xf5c
   285b0:	orr	lr, r1, r6, lsl #14
   285b4:	ldrd	r6, [sp, #192]	; 0xc0
   285b8:	str	lr, [sp, #3940]	; 0xf64
   285bc:	ldr	lr, [sp, #116]	; 0x74
   285c0:	adds	r6, r6, r4
   285c4:	ldrd	r0, [sp, #184]	; 0xb8
   285c8:	orr	lr, r2, lr, lsl #4
   285cc:	adc	r7, r7, r5
   285d0:	mov	r4, r6
   285d4:	mov	r5, r7
   285d8:	str	lr, [sp, #3952]	; 0xf70
   285dc:	ldrd	r6, [sp, #152]	; 0x98
   285e0:	ldr	lr, [sp, #116]	; 0x74
   285e4:	eor	r0, r0, sl
   285e8:	eor	r1, r1, fp
   285ec:	lsr	r2, lr, #28
   285f0:	and	r6, r6, r0
   285f4:	ldr	lr, [sp, #112]	; 0x70
   285f8:	and	r7, r7, r1
   285fc:	mov	r0, r6
   28600:	mov	r1, r7
   28604:	ldrd	r6, [sp, #152]	; 0x98
   28608:	orr	ip, ip, lr, lsr #2
   2860c:	str	r3, [sp, #3948]	; 0xf6c
   28610:	lsl	r3, lr, #30
   28614:	orr	lr, r2, lr, lsl #4
   28618:	str	ip, [sp, #3964]	; 0xf7c
   2861c:	str	lr, [sp, #3956]	; 0xf74
   28620:	lsl	ip, r6, #23
   28624:	ldr	lr, [sp, #116]	; 0x74
   28628:	orr	ip, ip, r7, lsr #9
   2862c:	ldrd	r6, [sp, #112]	; 0x70
   28630:	lsl	r2, lr, #25
   28634:	str	ip, [sp, #3944]	; 0xf68
   28638:	orr	ip, r2, r6, lsr #7
   2863c:	str	ip, [sp, #3972]	; 0xf84
   28640:	lsl	ip, r6, #25
   28644:	ldrd	r6, [sp, #216]	; 0xd8
   28648:	add	r2, sp, #3920	; 0xf50
   2864c:	add	r2, r2, #8
   28650:	adds	r6, r6, r4
   28654:	adc	r7, r7, r5
   28658:	orr	r3, r3, lr, lsr #2
   2865c:	str	r3, [sp, #3960]	; 0xf78
   28660:	ldr	r3, [sp, #72]	; 0x48
   28664:	strd	r6, [sp, #24]
   28668:	ldrd	r6, [r2]
   2866c:	add	r2, sp, #3936	; 0xf60
   28670:	lsr	r3, r3, #1
   28674:	ldrd	r4, [r2]
   28678:	eor	r0, r0, sl
   2867c:	eor	r1, r1, fp
   28680:	eor	r6, r6, r4
   28684:	eor	r7, r7, r5
   28688:	ldrd	r4, [sp, #72]	; 0x48
   2868c:	orr	r3, r3, r5, lsl #31
   28690:	str	r3, [sp, #3976]	; 0xf88
   28694:	lsr	r3, r4, #8
   28698:	orr	r3, r3, r5, lsl #24
   2869c:	str	r3, [sp, #3984]	; 0xf90
   286a0:	lsr	r3, r4, #7
   286a4:	str	r3, [sp, #616]	; 0x268
   286a8:	ldrd	r4, [sp, #112]	; 0x70
   286ac:	ldrd	r2, [sp, #136]	; 0x88
   286b0:	orr	r2, r2, r4
   286b4:	orr	r3, r3, r5
   286b8:	strd	r2, [sp, #112]	; 0x70
   286bc:	orr	r3, ip, r5, lsr #7
   286c0:	str	r3, [sp, #3968]	; 0xf80
   286c4:	ldr	r3, [sp, #76]	; 0x4c
   286c8:	lsr	ip, r3, #1
   286cc:	ldrd	r2, [sp, #24]
   286d0:	adds	r2, r2, r0
   286d4:	adc	r3, r3, r1
   286d8:	add	r1, sp, #3952	; 0xf70
   286dc:	strd	r2, [sp, #24]
   286e0:	add	r3, sp, #3936	; 0xf60
   286e4:	add	r3, r3, #8
   286e8:	add	r1, r1, #8
   286ec:	ldrd	r2, [r3]
   286f0:	ldrd	r0, [r1]
   286f4:	eor	r3, r3, r7
   286f8:	mov	r7, r3
   286fc:	add	r3, sp, #3952	; 0xf70
   28700:	eor	r2, r2, r6
   28704:	mov	r6, r2
   28708:	ldrd	r2, [r3]
   2870c:	eor	r2, r2, r0
   28710:	eor	r3, r3, r1
   28714:	ldrd	r0, [sp, #72]	; 0x48
   28718:	strd	r2, [sp, #144]	; 0x90
   2871c:	ldrd	r2, [sp, #112]	; 0x70
   28720:	orr	ip, ip, r0, lsl #31
   28724:	str	ip, [sp, #3980]	; 0xf8c
   28728:	lsr	ip, r1, #8
   2872c:	orr	ip, ip, r0, lsl #24
   28730:	str	ip, [sp, #3988]	; 0xf94
   28734:	ldr	ip, [sp, #616]	; 0x268
   28738:	strd	r4, [sp, #112]	; 0x70
   2873c:	orr	ip, ip, r1, lsl #25
   28740:	ldrd	r0, [sp, #168]	; 0xa8
   28744:	str	ip, [sp, #616]	; 0x268
   28748:	and	r2, r2, r8
   2874c:	lsr	lr, r0, #6
   28750:	lsr	ip, r0, #19
   28754:	ldrd	r0, [sp, #24]
   28758:	str	lr, [sp, #624]	; 0x270
   2875c:	add	lr, sp, #3968	; 0xf80
   28760:	adds	r0, r0, r6
   28764:	adc	r1, r1, r7
   28768:	ldrd	r6, [sp, #144]	; 0x90
   2876c:	strd	r0, [sp, #24]
   28770:	ldrd	r0, [sp, #136]	; 0x88
   28774:	and	r3, r3, r9
   28778:	and	r0, r0, r4
   2877c:	and	r1, r1, r5
   28780:	ldrd	r4, [lr]
   28784:	eor	r6, r6, r4
   28788:	eor	r7, r7, r5
   2878c:	mov	r4, r6
   28790:	mov	r5, r7
   28794:	orr	r6, r2, r0
   28798:	orr	r7, r3, r1
   2879c:	strd	r6, [sp, #144]	; 0x90
   287a0:	ldrd	r6, [sp, #168]	; 0xa8
   287a4:	ldrd	r2, [sp, #24]
   287a8:	ldr	lr, [sp, #76]	; 0x4c
   287ac:	lsl	r1, r7, #3
   287b0:	orr	ip, ip, r7, lsl #13
   287b4:	str	ip, [sp, #3992]	; 0xf98
   287b8:	orr	ip, r1, r6, lsr #29
   287bc:	str	ip, [sp, #4004]	; 0xfa4
   287c0:	lsl	ip, r6, #3
   287c4:	str	ip, [sp, #168]	; 0xa8
   287c8:	ldr	ip, [sp, #624]	; 0x270
   287cc:	lsr	lr, lr, #7
   287d0:	orr	r1, ip, r7, lsl #26
   287d4:	str	r1, [sp, #624]	; 0x270
   287d8:	ldrd	r0, [sp, #16]
   287dc:	add	ip, sp, #3984	; 0xf90
   287e0:	str	lr, [sp, #620]	; 0x26c
   287e4:	adds	r2, r2, r0
   287e8:	adc	r3, r3, r1
   287ec:	mov	r0, r2
   287f0:	mov	r1, r3
   287f4:	ldrd	r2, [sp, #144]	; 0x90
   287f8:	strd	r0, [sp, #200]	; 0xc8
   287fc:	add	r1, sp, #3968	; 0xf80
   28800:	add	r1, r1, #8
   28804:	adds	r2, r2, r4
   28808:	adc	r3, r3, r5
   2880c:	ldrd	r0, [r1]
   28810:	ldrd	r4, [ip]
   28814:	add	ip, sp, #616	; 0x268
   28818:	lsr	lr, r7, #19
   2881c:	eor	r0, r0, r4
   28820:	eor	r1, r1, r5
   28824:	ldrd	r4, [ip]
   28828:	orr	ip, lr, r6, lsl #13
   2882c:	ldr	lr, [sp, #168]	; 0xa8
   28830:	eor	r4, r4, r0
   28834:	eor	r5, r5, r1
   28838:	mov	r0, r4
   2883c:	mov	r1, r5
   28840:	mov	r4, r6
   28844:	mov	r5, r7
   28848:	str	ip, [sp, #3996]	; 0xf9c
   2884c:	strd	r4, [sp, #168]	; 0xa8
   28850:	ldrd	r4, [sp, #24]
   28854:	orr	ip, lr, r7, lsr #29
   28858:	str	ip, [sp, #4000]	; 0xfa0
   2885c:	adds	r4, r4, r2
   28860:	b	28878 <__assert_fail@plt+0x1758c>
   28864:	nop			; (mov r0, r0)
   28868:	strne	r3, [r2], #1339	; 0x53b
   2886c:	rsbsls	r2, r2, #34048	; 0x8500
   28870:	ldclmi	3, cr0, [r1], #400	; 0x190
   28874:	adcsge	lr, pc, #10551296	; 0xa10000
   28878:	adc	r5, r5, r3
   2887c:	lsr	ip, r7, #6
   28880:	add	r3, sp, #3984	; 0xf90
   28884:	str	ip, [sp, #628]	; 0x274
   28888:	add	r3, r3, #8
   2888c:	add	ip, sp, #4000	; 0xfa0
   28890:	ldrd	r2, [r3]
   28894:	ldrd	r6, [ip]
   28898:	strd	r4, [sp, #24]
   2889c:	eor	r2, r2, r6
   288a0:	eor	r3, r3, r7
   288a4:	mov	r4, r2
   288a8:	mov	r5, r3
   288ac:	ldrd	r2, [sp, #40]	; 0x28
   288b0:	ldrd	r6, [sp, #200]	; 0xc8
   288b4:	adds	r2, r2, r0
   288b8:	adc	r3, r3, r1
   288bc:	mov	r0, r2
   288c0:	mov	r1, r3
   288c4:	ldrd	r2, [sp, #64]	; 0x40
   288c8:	lsr	lr, r6, #14
   288cc:	lsr	ip, r6, #18
   288d0:	adds	r2, r2, r0
   288d4:	adc	r3, r3, r1
   288d8:	mov	r1, r3
   288dc:	add	r3, sp, #624	; 0x270
   288e0:	mov	r0, r2
   288e4:	ldrd	r2, [r3]
   288e8:	lsr	r6, r7, #18
   288ec:	eor	r3, r3, r5
   288f0:	mov	r5, r3
   288f4:	eor	r2, r2, r4
   288f8:	orr	r3, lr, r7, lsl #18
   288fc:	adds	r2, r0, r2
   28900:	str	r3, [sp, #4008]	; 0xfa8
   28904:	orr	r3, ip, r7, lsl #14
   28908:	str	r3, [sp, #4016]	; 0xfb0
   2890c:	adc	r3, r1, r5
   28910:	ldrd	r0, [sp, #200]	; 0xc8
   28914:	strd	r2, [sp, #144]	; 0x90
   28918:	ldr	r3, [sp, #24]
   2891c:	lsr	lr, r7, #14
   28920:	lsl	r5, r1, #23
   28924:	lsr	r4, r3, #28
   28928:	ldr	r3, [sp, #28]
   2892c:	lsl	ip, r3, #30
   28930:	orr	r3, lr, r0, lsl #18
   28934:	str	r3, [sp, #4012]	; 0xfac
   28938:	orr	r3, r6, r0, lsl #14
   2893c:	ldrd	r6, [sp, #184]	; 0xb8
   28940:	str	r3, [sp, #4020]	; 0xfb4
   28944:	ldrd	r2, [sp, #152]	; 0x98
   28948:	mov	r1, r7
   2894c:	mov	r0, r6
   28950:	eor	r1, r1, r3
   28954:	ldr	r3, [sp, #200]	; 0xc8
   28958:	eor	r0, r0, r2
   2895c:	orr	r3, r5, r3, lsr #9
   28960:	str	r3, [sp, #4028]	; 0xfbc
   28964:	ldr	r3, [sp, #200]	; 0xc8
   28968:	lsl	lr, r3, #23
   2896c:	ldr	r3, [sp, #28]
   28970:	orr	r3, r4, r3, lsl #4
   28974:	ldrd	r4, [sp, #24]
   28978:	str	r3, [sp, #4032]	; 0xfc0
   2897c:	orr	r3, ip, r4, lsr #2
   28980:	str	r3, [sp, #4044]	; 0xfcc
   28984:	lsr	ip, r5, #28
   28988:	ldrd	r2, [sp, #144]	; 0x90
   2898c:	sub	r5, pc, #292	; 0x124
   28990:	ldrd	r4, [r5]
   28994:	adds	r4, r4, r2
   28998:	adc	r5, r5, r3
   2899c:	mov	r2, r4
   289a0:	mov	r3, r5
   289a4:	ldrd	r4, [sp, #200]	; 0xc8
   289a8:	adds	r2, r2, sl
   289ac:	adc	r3, r3, fp
   289b0:	and	r4, r4, r0
   289b4:	mov	r0, r4
   289b8:	ldr	r4, [sp, #204]	; 0xcc
   289bc:	and	r5, r5, r1
   289c0:	mov	r1, r5
   289c4:	orr	lr, lr, r4, lsr #9
   289c8:	str	lr, [sp, #4024]	; 0xfb8
   289cc:	ldr	lr, [sp, #28]
   289d0:	ldr	r5, [sp, #24]
   289d4:	eor	r6, r6, r0
   289d8:	lsl	r4, lr, #25
   289dc:	ldr	lr, [sp, #24]
   289e0:	lsl	r5, r5, #30
   289e4:	eor	r7, r7, r1
   289e8:	orr	ip, ip, lr, lsl #4
   289ec:	str	ip, [sp, #4036]	; 0xfc4
   289f0:	ldr	ip, [sp, #120]	; 0x78
   289f4:	mov	r0, r6
   289f8:	mov	r1, r7
   289fc:	lsr	lr, ip, #1
   28a00:	ldr	ip, [sp, #28]
   28a04:	adds	r2, r2, r0
   28a08:	adc	r3, r3, r1
   28a0c:	orr	ip, r5, ip, lsr #2
   28a10:	str	ip, [sp, #4040]	; 0xfc8
   28a14:	ldr	ip, [sp, #24]
   28a18:	add	r1, sp, #4016	; 0xfb0
   28a1c:	add	r1, r1, #8
   28a20:	orr	ip, r4, ip, lsr #7
   28a24:	add	r4, sp, #4000	; 0xfa0
   28a28:	add	r4, r4, #8
   28a2c:	ldrd	sl, [r4]
   28a30:	add	r4, sp, #4016	; 0xfb0
   28a34:	str	ip, [sp, #4052]	; 0xfd4
   28a38:	ldrd	r6, [r4]
   28a3c:	ldr	ip, [sp, #24]
   28a40:	eor	sl, sl, r6
   28a44:	eor	fp, fp, r7
   28a48:	mov	r6, sl
   28a4c:	mov	r7, fp
   28a50:	ldrd	sl, [sp, #120]	; 0x78
   28a54:	lsl	ip, ip, #25
   28a58:	orr	lr, lr, fp, lsl #31
   28a5c:	str	lr, [sp, #4056]	; 0xfd8
   28a60:	lsr	lr, sl, #8
   28a64:	orr	lr, lr, fp, lsl #24
   28a68:	str	lr, [sp, #4064]	; 0xfe0
   28a6c:	lsr	lr, sl, #7
   28a70:	str	lr, [sp, #632]	; 0x278
   28a74:	ldrd	r0, [r1]
   28a78:	ldrd	sl, [sp, #24]
   28a7c:	ldrd	r4, [sp, #112]	; 0x70
   28a80:	eor	r1, r1, r7
   28a84:	add	lr, sp, #4032	; 0xfc0
   28a88:	mov	r7, r1
   28a8c:	add	lr, lr, #8
   28a90:	add	r1, sp, #4032	; 0xfc0
   28a94:	eor	r0, r0, r6
   28a98:	orr	r4, r4, sl
   28a9c:	orr	r5, r5, fp
   28aa0:	orr	ip, ip, fp, lsr #7
   28aa4:	mov	r6, r0
   28aa8:	ldrd	sl, [lr]
   28aac:	ldrd	r0, [r1]
   28ab0:	str	ip, [sp, #4048]	; 0xfd0
   28ab4:	ldr	ip, [sp, #124]	; 0x7c
   28ab8:	eor	r0, r0, sl
   28abc:	eor	r1, r1, fp
   28ac0:	ldrd	sl, [sp, #136]	; 0x88
   28ac4:	lsr	ip, ip, #1
   28ac8:	adds	r6, r6, r2
   28acc:	and	sl, sl, r4
   28ad0:	and	fp, fp, r5
   28ad4:	mov	r4, sl
   28ad8:	mov	r5, fp
   28adc:	ldrd	sl, [sp, #120]	; 0x78
   28ae0:	adc	r7, r7, r3
   28ae4:	ldrd	r2, [sp, #112]	; 0x70
   28ae8:	orr	ip, ip, sl, lsl #31
   28aec:	str	ip, [sp, #4060]	; 0xfdc
   28af0:	lsr	ip, fp, #8
   28af4:	orr	ip, ip, sl, lsl #24
   28af8:	str	ip, [sp, #4068]	; 0xfe4
   28afc:	ldr	ip, [sp, #632]	; 0x278
   28b00:	orr	ip, ip, fp, lsl #25
   28b04:	ldrd	sl, [sp, #192]	; 0xc0
   28b08:	str	ip, [sp, #632]	; 0x278
   28b0c:	lsr	lr, sl, #6
   28b10:	lsr	ip, sl, #19
   28b14:	ldrd	sl, [sp, #24]
   28b18:	str	lr, [sp, #640]	; 0x280
   28b1c:	add	lr, sp, #4048	; 0xfd0
   28b20:	and	r2, r2, sl
   28b24:	and	r3, r3, fp
   28b28:	ldrd	sl, [lr]
   28b2c:	orr	r5, r5, r3
   28b30:	orr	r4, r4, r2
   28b34:	eor	sl, sl, r0
   28b38:	eor	fp, fp, r1
   28b3c:	adds	r0, r8, r6
   28b40:	strd	sl, [sp, #16]
   28b44:	ldrd	sl, [sp, #192]	; 0xc0
   28b48:	adc	r1, r9, r7
   28b4c:	orr	ip, ip, fp, lsl #13
   28b50:	lsl	r3, fp, #3
   28b54:	orr	r3, r3, sl, lsr #29
   28b58:	str	ip, [sp, #4072]	; 0xfe8
   28b5c:	ldr	ip, [sp, #640]	; 0x280
   28b60:	str	r3, [sp, #4084]	; 0xff4
   28b64:	ldr	r3, [sp, #124]	; 0x7c
   28b68:	orr	ip, ip, fp, lsl #26
   28b6c:	str	ip, [sp, #640]	; 0x280
   28b70:	add	ip, sp, #4048	; 0xfd0
   28b74:	lsr	r3, r3, #7
   28b78:	strd	r0, [sp, #208]	; 0xd0
   28b7c:	add	ip, ip, #8
   28b80:	ldrd	r0, [sp, #16]
   28b84:	str	r3, [sp, #636]	; 0x27c
   28b88:	lsl	r3, sl, #3
   28b8c:	ldrd	r8, [ip]
   28b90:	orr	r3, r3, fp, lsr #29
   28b94:	add	ip, sp, #4064	; 0xfe0
   28b98:	adds	r0, r0, r4
   28b9c:	lsr	r2, fp, #19
   28ba0:	str	r3, [sp, #4080]	; 0xff0
   28ba4:	add	r3, sp, #632	; 0x278
   28ba8:	adc	r1, r1, r5
   28bac:	ldrd	r4, [ip]
   28bb0:	orr	ip, r2, sl, lsl #13
   28bb4:	str	ip, [sp, #4076]	; 0xfec
   28bb8:	ldrd	r2, [r3]
   28bbc:	eor	r9, r9, r5
   28bc0:	adds	sl, r0, r6
   28bc4:	eor	r3, r3, r9
   28bc8:	mov	r9, r3
   28bcc:	lsr	r3, fp, #6
   28bd0:	str	r3, [sp, #644]	; 0x284
   28bd4:	add	r3, sp, #4064	; 0xfe0
   28bd8:	add	r3, r3, #8
   28bdc:	adc	fp, r1, r7
   28be0:	eor	r8, r8, r4
   28be4:	ldrd	r0, [r3]
   28be8:	add	r3, sp, #4080	; 0xff0
   28bec:	eor	r2, r2, r8
   28bf0:	add	r6, sp, #640	; 0x280
   28bf4:	mov	r8, r2
   28bf8:	ldrd	r2, [r3]
   28bfc:	ldrd	r6, [r6]
   28c00:	ldrd	r4, [sp, #72]	; 0x48
   28c04:	eor	r0, r0, r2
   28c08:	eor	r1, r1, r3
   28c0c:	eor	r6, r6, r0
   28c10:	eor	r7, r7, r1
   28c14:	mov	r0, r6
   28c18:	mov	r1, r7
   28c1c:	ldrd	r6, [sp, #96]	; 0x60
   28c20:	adds	r4, r4, r8
   28c24:	adc	r5, r5, r9
   28c28:	mov	r8, r4
   28c2c:	mov	r9, r5
   28c30:	adds	r6, r6, r8
   28c34:	ldrd	r4, [sp, #208]	; 0xd0
   28c38:	adc	r7, r7, r9
   28c3c:	mov	r9, r7
   28c40:	adds	r6, r6, r0
   28c44:	adc	r7, r9, r1
   28c48:	ldrd	r0, [sp, #208]	; 0xd0
   28c4c:	lsr	lr, r4, #14
   28c50:	orr	lr, lr, r5, lsl #18
   28c54:	lsr	ip, r4, #18
   28c58:	add	r4, sp, #4096	; 0x1000
   28c5c:	str	lr, [sp, #4088]	; 0xff8
   28c60:	orr	ip, ip, r5, lsl #14
   28c64:	strd	r6, [sp, #16]
   28c68:	lsr	lr, r5, #14
   28c6c:	lsl	r6, r1, #23
   28c70:	add	r1, sp, #4096	; 0x1000
   28c74:	str	ip, [r4]
   28c78:	orr	lr, lr, r0, lsl #18
   28c7c:	lsr	r4, r5, #18
   28c80:	add	r1, r1, #4
   28c84:	str	lr, [sp, #4092]	; 0xffc
   28c88:	orr	lr, r4, r0, lsl #14
   28c8c:	str	lr, [r1]
   28c90:	ldr	lr, [sp, #208]	; 0xd0
   28c94:	add	r3, pc, #876	; 0x36c
   28c98:	ldrd	r2, [r3]
   28c9c:	add	r4, sp, #4096	; 0x1000
   28ca0:	orr	lr, r6, lr, lsr #9
   28ca4:	ldrd	r6, [sp, #16]
   28ca8:	add	r4, r4, #12
   28cac:	ldrd	r8, [sp, #152]	; 0x98
   28cb0:	adds	r6, r6, r2
   28cb4:	str	lr, [r4]
   28cb8:	ldrd	r0, [sp, #200]	; 0xc8
   28cbc:	adc	r7, r7, r3
   28cc0:	add	r4, sp, #4096	; 0x1000
   28cc4:	mov	r2, r6
   28cc8:	mov	r3, r7
   28ccc:	lsr	r5, sl, #28
   28cd0:	ldrd	r6, [sp, #208]	; 0xd0
   28cd4:	add	r4, r4, #16
   28cd8:	orr	r5, r5, fp, lsl #4
   28cdc:	str	r5, [r4]
   28ce0:	eor	r1, r1, r9
   28ce4:	add	r4, sp, #4096	; 0x1000
   28ce8:	lsl	ip, fp, #30
   28cec:	ldr	lr, [sp, #208]	; 0xd0
   28cf0:	add	r4, r4, #28
   28cf4:	and	r7, r7, r1
   28cf8:	orr	ip, ip, sl, lsr #2
   28cfc:	mov	r1, r7
   28d00:	ldr	r7, [sp, #212]	; 0xd4
   28d04:	str	ip, [r4]
   28d08:	add	r4, sp, #4096	; 0x1000
   28d0c:	add	r4, r4, #8
   28d10:	lsl	lr, lr, #23
   28d14:	orr	lr, lr, r7, lsr #9
   28d18:	str	lr, [r4]
   28d1c:	add	lr, sp, #4096	; 0x1000
   28d20:	lsr	ip, fp, #28
   28d24:	add	lr, lr, #20
   28d28:	orr	ip, ip, sl, lsl #4
   28d2c:	str	ip, [lr]
   28d30:	ldr	ip, [sp, #176]	; 0xb0
   28d34:	lsl	r5, sl, #30
   28d38:	eor	r0, r0, r8
   28d3c:	lsr	lr, ip, #1
   28d40:	orr	ip, r5, fp, lsr #2
   28d44:	add	r5, sp, #4096	; 0x1000
   28d48:	add	r5, r5, #24
   28d4c:	lsl	r4, fp, #25
   28d50:	str	ip, [r5]
   28d54:	and	r6, r6, r0
   28d58:	orr	ip, r4, sl, lsr #7
   28d5c:	add	r4, sp, #4096	; 0x1000
   28d60:	mov	r0, r6
   28d64:	add	r4, r4, #36	; 0x24
   28d68:	ldrd	r6, [sp, #184]	; 0xb8
   28d6c:	str	ip, [r4]
   28d70:	add	r4, sp, #4080	; 0xff0
   28d74:	adds	r6, r6, r2
   28d78:	add	r4, r4, #8
   28d7c:	adc	r7, r7, r3
   28d80:	mov	r2, r6
   28d84:	mov	r3, r7
   28d88:	mov	r6, r8
   28d8c:	mov	r7, r9
   28d90:	ldrd	r8, [r4]
   28d94:	add	r4, sp, #4096	; 0x1000
   28d98:	eor	r6, r6, r0
   28d9c:	eor	r7, r7, r1
   28da0:	mov	r0, r6
   28da4:	mov	r1, r7
   28da8:	ldrd	r6, [r4]
   28dac:	lsl	ip, sl, #25
   28db0:	orr	ip, ip, fp, lsr #7
   28db4:	eor	r8, r8, r6
   28db8:	eor	r9, r9, r7
   28dbc:	add	r6, sp, #4096	; 0x1000
   28dc0:	strd	r8, [sp, #40]	; 0x28
   28dc4:	ldrd	r4, [sp, #176]	; 0xb0
   28dc8:	add	r6, r6, #40	; 0x28
   28dcc:	ldrd	r8, [sp, #24]
   28dd0:	orr	lr, lr, r5, lsl #31
   28dd4:	str	lr, [r6]
   28dd8:	mov	r6, r4
   28ddc:	lsr	lr, r4, #8
   28de0:	add	r4, sp, #4096	; 0x1000
   28de4:	add	r4, r4, #48	; 0x30
   28de8:	orr	lr, lr, r5, lsl #24
   28dec:	str	lr, [r4]
   28df0:	lsr	lr, r6, #7
   28df4:	str	lr, [sp, #648]	; 0x288
   28df8:	add	lr, sp, #4096	; 0x1000
   28dfc:	mov	r7, r5
   28e00:	add	lr, lr, #32
   28e04:	adds	r6, r2, r0
   28e08:	str	ip, [lr]
   28e0c:	lsr	ip, r7, #1
   28e10:	adc	r7, r3, r1
   28e14:	add	r3, sp, #4096	; 0x1000
   28e18:	add	r3, r3, #8
   28e1c:	ldrd	r0, [r3]
   28e20:	ldrd	r2, [sp, #40]	; 0x28
   28e24:	strd	r6, [sp, #24]
   28e28:	orr	r4, r8, sl
   28e2c:	eor	r3, r3, r1
   28e30:	mov	r7, r3
   28e34:	add	r3, sp, #4096	; 0x1000
   28e38:	add	r3, r3, #16
   28e3c:	eor	r2, r2, r0
   28e40:	ldrd	r0, [r3]
   28e44:	add	r3, sp, #4096	; 0x1000
   28e48:	add	r3, r3, #24
   28e4c:	mov	r6, r2
   28e50:	ldrd	r2, [r3]
   28e54:	orr	r5, r9, fp
   28e58:	add	lr, sp, #4096	; 0x1000
   28e5c:	eor	r0, r0, r2
   28e60:	eor	r1, r1, r3
   28e64:	ldrd	r2, [sp, #112]	; 0x70
   28e68:	add	lr, lr, #44	; 0x2c
   28e6c:	and	r2, r2, r4
   28e70:	and	r3, r3, r5
   28e74:	mov	r4, r2
   28e78:	mov	r5, r3
   28e7c:	ldrd	r2, [sp, #176]	; 0xb0
   28e80:	orr	ip, ip, r2, lsl #31
   28e84:	str	ip, [lr]
   28e88:	add	lr, sp, #4096	; 0x1000
   28e8c:	lsr	ip, r3, #8
   28e90:	add	lr, lr, #52	; 0x34
   28e94:	orr	ip, ip, r2, lsl #24
   28e98:	str	ip, [lr]
   28e9c:	ldr	ip, [sp, #648]	; 0x288
   28ea0:	add	lr, sp, #4096	; 0x1000
   28ea4:	orr	r3, ip, r3, lsl #25
   28ea8:	str	r3, [sp, #648]	; 0x288
   28eac:	ldrd	r2, [sp, #144]	; 0x90
   28eb0:	add	lr, lr, #32
   28eb4:	lsr	r3, r2, #6
   28eb8:	str	r3, [sp, #656]	; 0x290
   28ebc:	lsr	ip, r2, #19
   28ec0:	ldrd	r2, [sp, #24]
   28ec4:	strd	r8, [sp, #24]
   28ec8:	adds	r2, r2, r6
   28ecc:	adc	r3, r3, r7
   28ed0:	mov	r6, r2
   28ed4:	mov	r7, r3
   28ed8:	mov	r2, r8
   28edc:	mov	r3, r9
   28ee0:	ldrd	r8, [lr]
   28ee4:	and	r2, r2, sl
   28ee8:	orr	r4, r4, r2
   28eec:	eor	r8, r8, r0
   28ef0:	eor	r9, r9, r1
   28ef4:	mov	r0, r8
   28ef8:	mov	r1, r9
   28efc:	ldrd	r8, [sp, #144]	; 0x90
   28f00:	add	r2, sp, #4096	; 0x1000
   28f04:	add	r2, r2, #56	; 0x38
   28f08:	orr	ip, ip, r9, lsl #13
   28f0c:	str	ip, [r2]
   28f10:	and	r3, r3, fp
   28f14:	add	r2, sp, #4160	; 0x1040
   28f18:	orr	r5, r5, r3
   28f1c:	add	r2, r2, #4
   28f20:	lsl	r3, r9, #3
   28f24:	orr	r3, r3, r8, lsr #29
   28f28:	str	r3, [r2]
   28f2c:	ldr	r3, [sp, #180]	; 0xb4
   28f30:	ldr	ip, [sp, #656]	; 0x290
   28f34:	lsr	r2, r9, #19
   28f38:	lsr	r3, r3, #7
   28f3c:	orr	ip, ip, r9, lsl #26
   28f40:	str	r3, [sp, #652]	; 0x28c
   28f44:	lsl	r3, r8, #3
   28f48:	ldrd	r8, [sp, #136]	; 0x88
   28f4c:	str	ip, [sp, #656]	; 0x290
   28f50:	add	ip, sp, #4096	; 0x1000
   28f54:	adds	r8, r8, r6
   28f58:	adc	r9, r9, r7
   28f5c:	add	ip, ip, #40	; 0x28
   28f60:	strd	r8, [sp, #136]	; 0x88
   28f64:	ldrd	r8, [ip]
   28f68:	add	ip, sp, #4096	; 0x1000
   28f6c:	add	ip, ip, #48	; 0x30
   28f70:	adds	r0, r0, r4
   28f74:	adc	r1, r1, r5
   28f78:	ldrd	r4, [ip]
   28f7c:	eor	r8, r8, r4
   28f80:	eor	r9, r9, r5
   28f84:	ldrd	r4, [sp, #144]	; 0x90
   28f88:	orr	ip, r2, r4, lsl #13
   28f8c:	add	r2, sp, #4096	; 0x1000
   28f90:	add	r2, r2, #60	; 0x3c
   28f94:	str	ip, [r2]
   28f98:	add	r2, sp, #4160	; 0x1040
   28f9c:	orr	r3, r3, r5, lsr #29
   28fa0:	str	r3, [r2]
   28fa4:	add	r3, sp, #648	; 0x288
   28fa8:	ldrd	r2, [r3]
   28fac:	eor	r2, r2, r8
   28fb0:	eor	r3, r3, r9
   28fb4:	mov	r8, r2
   28fb8:	mov	r9, r3
   28fbc:	adds	r2, r0, r6
   28fc0:	lsr	r3, r5, #6
   28fc4:	str	r3, [sp, #660]	; 0x294
   28fc8:	adc	r3, r1, r7
   28fcc:	ldrd	r4, [sp, #120]	; 0x78
   28fd0:	strd	r2, [sp, #184]	; 0xb8
   28fd4:	add	r3, sp, #4096	; 0x1000
   28fd8:	add	r3, r3, #56	; 0x38
   28fdc:	adds	r4, r4, r8
   28fe0:	ldrd	r0, [r3]
   28fe4:	add	r3, sp, #4160	; 0x1040
   28fe8:	mov	r8, r4
   28fec:	add	r4, sp, #656	; 0x290
   28ff0:	ldrd	r2, [r3]
   28ff4:	adc	r5, r5, r9
   28ff8:	mov	r9, r5
   28ffc:	ldrd	r4, [r4]
   29000:	eor	r0, r0, r2
   29004:	b	29018 <__assert_fail@plt+0x17d2c>
   29008:	mcrrlt	0, 0, r3, r2, cr1
   2900c:	ldmdage	sl, {r0, r1, r3, r6, r9, sl, sp, lr}
   29010:	smlalsle	r9, r8, r1, r7
   29014:	subgt	r8, fp, #112, 22	; 0x1c000
   29018:	eor	r1, r1, r3
   2901c:	eor	r4, r4, r0
   29020:	eor	r5, r5, r1
   29024:	mov	r0, r4
   29028:	mov	r1, r5
   2902c:	ldrd	r4, [sp, #160]	; 0xa0
   29030:	ldrd	r6, [sp, #136]	; 0x88
   29034:	sub	r3, pc, #44	; 0x2c
   29038:	ldrd	r2, [r3]
   2903c:	adds	r4, r4, r8
   29040:	mov	r8, r4
   29044:	add	r4, sp, #4160	; 0x1040
   29048:	lsr	lr, r6, #14
   2904c:	add	r4, r4, #8
   29050:	orr	lr, lr, r7, lsl #18
   29054:	str	lr, [r4]
   29058:	add	r4, sp, #4160	; 0x1040
   2905c:	adc	r5, r5, r9
   29060:	lsr	ip, r6, #18
   29064:	add	r4, r4, #16
   29068:	adds	r6, r8, r0
   2906c:	mov	r9, r5
   29070:	orr	ip, ip, r7, lsl #14
   29074:	str	ip, [r4]
   29078:	lsr	lr, r7, #14
   2907c:	lsr	r4, r7, #18
   29080:	adc	r7, r9, r1
   29084:	ldrd	r0, [sp, #184]	; 0xb8
   29088:	ldrd	r8, [sp, #136]	; 0x88
   2908c:	strd	r6, [sp, #40]	; 0x28
   29090:	lsl	ip, r1, #30
   29094:	add	r1, sp, #4160	; 0x1040
   29098:	add	r1, r1, #12
   2909c:	orr	lr, lr, r8, lsl #18
   290a0:	str	lr, [r1]
   290a4:	add	r1, sp, #4160	; 0x1040
   290a8:	add	r1, r1, #20
   290ac:	orr	lr, r4, r8, lsl #14
   290b0:	lsl	r6, r9, #23
   290b4:	str	lr, [r1]
   290b8:	ldrd	r8, [sp, #208]	; 0xd0
   290bc:	lsr	r5, r0, #28
   290c0:	ldrd	r0, [sp, #200]	; 0xc8
   290c4:	add	r4, sp, #4160	; 0x1040
   290c8:	add	r4, r4, #28
   290cc:	eor	r0, r0, r8
   290d0:	eor	r1, r1, r9
   290d4:	ldrd	r8, [sp, #136]	; 0x88
   290d8:	orr	lr, r6, r8, lsr #9
   290dc:	str	lr, [r4]
   290e0:	mov	r7, r9
   290e4:	mov	r6, r8
   290e8:	lsl	lr, r8, #23
   290ec:	ldrd	r8, [sp, #184]	; 0xb8
   290f0:	add	r4, sp, #4160	; 0x1040
   290f4:	add	r4, r4, #32
   290f8:	orr	r5, r5, r9, lsl #4
   290fc:	str	r5, [r4]
   29100:	add	r4, sp, #4160	; 0x1040
   29104:	add	r4, r4, #44	; 0x2c
   29108:	orr	ip, ip, r8, lsr #2
   2910c:	str	ip, [r4]
   29110:	ldrd	r4, [sp, #40]	; 0x28
   29114:	orr	lr, lr, r7, lsr #9
   29118:	lsr	ip, r9, #28
   2911c:	adds	r4, r4, r2
   29120:	mov	r2, r4
   29124:	mov	r4, r6
   29128:	and	r4, r4, r0
   2912c:	mov	r0, r4
   29130:	add	r4, sp, #4160	; 0x1040
   29134:	add	r4, r4, #24
   29138:	str	lr, [r4]
   2913c:	add	lr, sp, #4160	; 0x1040
   29140:	add	lr, lr, #36	; 0x24
   29144:	adc	r5, r5, r3
   29148:	orr	ip, ip, r8, lsl #4
   2914c:	mov	r3, r5
   29150:	str	ip, [lr]
   29154:	mov	r5, r7
   29158:	ldr	ip, [sp, #80]	; 0x50
   2915c:	and	r5, r5, r1
   29160:	mov	r1, r5
   29164:	lsl	r5, r8, #30
   29168:	lsr	lr, ip, #1
   2916c:	orr	ip, r5, r9, lsr #2
   29170:	add	r5, sp, #4160	; 0x1040
   29174:	add	r5, r5, #40	; 0x28
   29178:	lsl	r4, r9, #25
   2917c:	str	ip, [r5]
   29180:	orr	ip, r4, r8, lsr #7
   29184:	add	r4, sp, #4160	; 0x1040
   29188:	add	r4, r4, #52	; 0x34
   2918c:	str	ip, [r4]
   29190:	ldrd	r6, [sp, #152]	; 0x98
   29194:	lsl	ip, r8, #25
   29198:	str	ip, [sp, #72]	; 0x48
   2919c:	add	ip, sp, #4160	; 0x1040
   291a0:	adds	r6, r6, r2
   291a4:	add	ip, ip, #8
   291a8:	adc	r7, r7, r3
   291ac:	ldrd	r4, [sp, #200]	; 0xc8
   291b0:	mov	r2, r6
   291b4:	mov	r3, r7
   291b8:	ldrd	r6, [ip]
   291bc:	add	ip, sp, #4160	; 0x1040
   291c0:	add	ip, ip, #16
   291c4:	eor	r4, r4, r0
   291c8:	eor	r5, r5, r1
   291cc:	mov	r0, r4
   291d0:	mov	r1, r5
   291d4:	ldrd	r4, [ip]
   291d8:	add	ip, sp, #4160	; 0x1040
   291dc:	add	ip, ip, #56	; 0x38
   291e0:	eor	r6, r6, r4
   291e4:	eor	r7, r7, r5
   291e8:	ldrd	r4, [sp, #80]	; 0x50
   291ec:	adds	r2, r2, r0
   291f0:	adc	r3, r3, r1
   291f4:	orr	lr, lr, r5, lsl #31
   291f8:	str	lr, [ip]
   291fc:	lsr	lr, r4, #8
   29200:	orr	ip, lr, r5, lsl #24
   29204:	add	r1, sp, #4160	; 0x1040
   29208:	add	lr, sp, #4224	; 0x1080
   2920c:	add	r1, r1, #24
   29210:	str	ip, [lr]
   29214:	ldr	lr, [sp, #72]	; 0x48
   29218:	lsr	ip, r4, #7
   2921c:	ldrd	r0, [r1]
   29220:	str	ip, [sp, #664]	; 0x298
   29224:	orr	ip, lr, r9, lsr #7
   29228:	add	lr, sp, #4160	; 0x1040
   2922c:	add	lr, lr, #48	; 0x30
   29230:	eor	r1, r1, r7
   29234:	str	ip, [lr]
   29238:	mov	r7, r1
   2923c:	add	lr, sp, #4160	; 0x1040
   29240:	add	r1, sp, #4160	; 0x1040
   29244:	add	lr, lr, #40	; 0x28
   29248:	add	r1, r1, #32
   2924c:	eor	r0, r0, r6
   29250:	orr	r4, r8, sl
   29254:	orr	r5, r9, fp
   29258:	mov	r6, r0
   2925c:	ldrd	r8, [lr]
   29260:	ldrd	r0, [r1]
   29264:	adds	r6, r6, r2
   29268:	adc	r7, r7, r3
   2926c:	eor	r0, r0, r8
   29270:	eor	r1, r1, r9
   29274:	ldrd	r2, [sp, #184]	; 0xb8
   29278:	ldrd	r8, [sp, #24]
   2927c:	ldr	ip, [sp, #84]	; 0x54
   29280:	and	r2, r2, sl
   29284:	and	r3, r3, fp
   29288:	and	r8, r8, r4
   2928c:	and	r9, r9, r5
   29290:	mov	r4, r8
   29294:	mov	r5, r9
   29298:	ldrd	r8, [sp, #80]	; 0x50
   2929c:	strd	r2, [sp, #72]	; 0x48
   292a0:	add	lr, sp, #4160	; 0x1040
   292a4:	add	r3, sp, #4160	; 0x1040
   292a8:	add	lr, lr, #60	; 0x3c
   292ac:	lsr	ip, ip, #1
   292b0:	add	r3, r3, #48	; 0x30
   292b4:	orr	ip, ip, r8, lsl #31
   292b8:	str	ip, [lr]
   292bc:	ldrd	r2, [r3]
   292c0:	add	lr, sp, #4224	; 0x1080
   292c4:	lsr	ip, r9, #8
   292c8:	add	lr, lr, #4
   292cc:	orr	ip, ip, r8, lsl #24
   292d0:	str	ip, [lr]
   292d4:	eor	r2, r2, r0
   292d8:	ldr	ip, [sp, #664]	; 0x298
   292dc:	ldr	lr, [sp, #16]
   292e0:	eor	r3, r3, r1
   292e4:	mov	r0, r2
   292e8:	mov	r1, r3
   292ec:	ldrd	r2, [sp, #72]	; 0x48
   292f0:	orr	ip, ip, r9, lsl #25
   292f4:	str	ip, [sp, #664]	; 0x298
   292f8:	lsr	lr, lr, #6
   292fc:	ldr	ip, [sp, #16]
   29300:	str	lr, [sp, #672]	; 0x2a0
   29304:	orr	r2, r2, r4
   29308:	lsr	lr, r9, #7
   2930c:	ldrd	r8, [sp, #16]
   29310:	orr	r3, r3, r5
   29314:	mov	r4, r2
   29318:	add	r2, sp, #4224	; 0x1080
   2931c:	mov	r5, r3
   29320:	add	r2, r2, #8
   29324:	ldr	r3, [sp, #20]
   29328:	lsr	ip, ip, #19
   2932c:	orr	ip, ip, r9, lsl #13
   29330:	str	ip, [r2]
   29334:	add	r2, sp, #4224	; 0x1080
   29338:	add	r2, r2, #20
   2933c:	lsl	r3, r3, #3
   29340:	orr	r3, r3, r8, lsr #29
   29344:	str	lr, [sp, #668]	; 0x29c
   29348:	str	r3, [r2]
   2934c:	add	r3, sp, #4160	; 0x1040
   29350:	add	r3, r3, #56	; 0x38
   29354:	ldrd	r8, [r3]
   29358:	add	r3, sp, #4224	; 0x1080
   2935c:	ldr	ip, [sp, #20]
   29360:	ldrd	r2, [r3]
   29364:	eor	r9, r9, r3
   29368:	ldr	r3, [sp, #672]	; 0x2a0
   2936c:	eor	r8, r8, r2
   29370:	orr	r3, r3, ip, lsl #26
   29374:	str	r3, [sp, #672]	; 0x2a0
   29378:	ldrd	r2, [sp, #112]	; 0x70
   2937c:	adds	r2, r2, r6
   29380:	adc	r3, r3, r7
   29384:	adds	r4, r4, r0
   29388:	adc	r5, r5, r1
   2938c:	ldrd	r0, [sp, #16]
   29390:	strd	r2, [sp, #120]	; 0x78
   29394:	lsr	r2, r1, #19
   29398:	add	r1, sp, #664	; 0x298
   2939c:	lsl	r3, r0, #3
   293a0:	ldrd	r0, [r1]
   293a4:	eor	r0, r0, r8
   293a8:	eor	r1, r1, r9
   293ac:	ldrd	r8, [sp, #16]
   293b0:	orr	ip, r2, r8, lsl #13
   293b4:	add	r2, sp, #4224	; 0x1080
   293b8:	add	r2, r2, #12
   293bc:	str	ip, [r2]
   293c0:	add	r2, sp, #4224	; 0x1080
   293c4:	add	r2, r2, #16
   293c8:	orr	r3, r3, r9, lsr #29
   293cc:	str	r3, [r2]
   293d0:	lsr	r3, r9, #6
   293d4:	str	r3, [sp, #676]	; 0x2a4
   293d8:	ldrd	r2, [sp, #176]	; 0xb0
   293dc:	adds	r8, r4, r6
   293e0:	adc	r9, r5, r7
   293e4:	adds	r2, r2, r0
   293e8:	adc	r3, r3, r1
   293ec:	mov	r1, r3
   293f0:	add	ip, sp, #4224	; 0x1080
   293f4:	add	r3, sp, #4224	; 0x1080
   293f8:	add	ip, ip, #16
   293fc:	add	r3, r3, #8
   29400:	ldrd	r6, [ip]
   29404:	mov	r0, r2
   29408:	ldrd	r2, [r3]
   2940c:	eor	r2, r2, r6
   29410:	eor	r3, r3, r7
   29414:	mov	r4, r2
   29418:	mov	r5, r3
   2941c:	ldrd	r2, [sp, #128]	; 0x80
   29420:	ldrd	r6, [sp, #120]	; 0x78
   29424:	adds	r2, r2, r0
   29428:	adc	r3, r3, r1
   2942c:	mov	r1, r3
   29430:	add	r3, sp, #672	; 0x2a0
   29434:	mov	r0, r2
   29438:	ldrd	r2, [r3]
   2943c:	lsr	lr, r6, #14
   29440:	lsr	ip, r6, #18
   29444:	eor	r2, r2, r4
   29448:	mov	r4, r2
   2944c:	add	r2, sp, #4224	; 0x1080
   29450:	eor	r3, r3, r5
   29454:	add	r2, r2, #24
   29458:	mov	r5, r3
   2945c:	orr	r3, lr, r7, lsl #18
   29460:	str	r3, [r2]
   29464:	add	r2, sp, #4224	; 0x1080
   29468:	add	r2, r2, #32
   2946c:	orr	r3, ip, r7, lsl #14
   29470:	str	r3, [r2]
   29474:	adds	r2, r0, r4
   29478:	adc	r3, r1, r5
   2947c:	ldrd	r0, [sp, #120]	; 0x78
   29480:	lsr	r6, r7, #18
   29484:	lsr	lr, r7, #14
   29488:	add	r7, sp, #4224	; 0x1080
   2948c:	lsl	r5, r1, #23
   29490:	add	r7, r7, #28
   29494:	add	r1, sp, #4224	; 0x1080
   29498:	orr	lr, lr, r0, lsl #18
   2949c:	add	r1, r1, #36	; 0x24
   294a0:	str	lr, [r7]
   294a4:	orr	lr, r6, r0, lsl #14
   294a8:	str	lr, [r1]
   294ac:	ldrd	r6, [sp, #208]	; 0xd0
   294b0:	ldrd	r0, [sp, #136]	; 0x88
   294b4:	lsr	r4, r8, #28
   294b8:	lsl	ip, r9, #30
   294bc:	eor	r0, r0, r6
   294c0:	eor	r1, r1, r7
   294c4:	ldrd	r6, [sp, #120]	; 0x78
   294c8:	orr	ip, ip, r8, lsr #2
   294cc:	strd	r2, [sp, #112]	; 0x70
   294d0:	orr	lr, r5, r6, lsr #9
   294d4:	add	r5, sp, #4224	; 0x1080
   294d8:	add	r5, r5, #44	; 0x2c
   294dc:	str	lr, [r5]
   294e0:	orr	r5, r4, r9, lsl #4
   294e4:	add	r4, sp, #4224	; 0x1080
   294e8:	add	r4, r4, #48	; 0x30
   294ec:	str	r5, [r4]
   294f0:	add	r4, sp, #4224	; 0x1080
   294f4:	add	r4, r4, #60	; 0x3c
   294f8:	str	ip, [r4]
   294fc:	add	r5, pc, #876	; 0x36c
   29500:	ldrd	r4, [r5]
   29504:	and	r7, r7, r1
   29508:	mov	r1, r7
   2950c:	adds	r4, r4, r2
   29510:	ldr	r7, [sp, #124]	; 0x7c
   29514:	mov	r2, r4
   29518:	add	r4, sp, #4224	; 0x1080
   2951c:	lsl	lr, r6, #23
   29520:	add	r4, r4, #40	; 0x28
   29524:	orr	lr, lr, r7, lsr #9
   29528:	str	lr, [r4]
   2952c:	add	lr, sp, #4224	; 0x1080
   29530:	lsr	ip, r9, #28
   29534:	add	lr, lr, #52	; 0x34
   29538:	orr	ip, ip, r8, lsl #4
   2953c:	str	ip, [lr]
   29540:	ldr	ip, [sp, #48]	; 0x30
   29544:	adc	r5, r5, r3
   29548:	mov	r3, r5
   2954c:	lsl	r5, r8, #30
   29550:	lsr	lr, ip, #1
   29554:	orr	ip, r5, r9, lsr #2
   29558:	add	r5, sp, #4224	; 0x1080
   2955c:	add	r5, r5, #56	; 0x38
   29560:	lsl	r4, r9, #25
   29564:	str	ip, [r5]
   29568:	orr	ip, r4, r8, lsr #7
   2956c:	add	r4, sp, #4288	; 0x10c0
   29570:	add	r4, r4, #4
   29574:	and	r6, r6, r0
   29578:	mov	r0, r6
   2957c:	str	ip, [r4]
   29580:	ldrd	r6, [sp, #208]	; 0xd0
   29584:	lsl	ip, r8, #25
   29588:	str	ip, [sp, #72]	; 0x48
   2958c:	add	ip, sp, #4224	; 0x1080
   29590:	ldrd	r4, [sp, #200]	; 0xc8
   29594:	add	ip, ip, #24
   29598:	eor	r6, r6, r0
   2959c:	eor	r7, r7, r1
   295a0:	mov	r0, r6
   295a4:	mov	r1, r7
   295a8:	ldrd	r6, [ip]
   295ac:	add	ip, sp, #4224	; 0x1080
   295b0:	adds	r4, r4, r2
   295b4:	add	ip, ip, #32
   295b8:	adc	r5, r5, r3
   295bc:	mov	r2, r4
   295c0:	mov	r3, r5
   295c4:	ldrd	r4, [ip]
   295c8:	add	ip, sp, #4288	; 0x10c0
   295cc:	add	ip, ip, #8
   295d0:	eor	r6, r6, r4
   295d4:	eor	r7, r7, r5
   295d8:	ldrd	r4, [sp, #48]	; 0x30
   295dc:	adds	r2, r2, r0
   295e0:	adc	r3, r3, r1
   295e4:	orr	lr, lr, r5, lsl #31
   295e8:	str	lr, [ip]
   295ec:	lsr	lr, r4, #8
   295f0:	orr	ip, lr, r5, lsl #24
   295f4:	add	lr, sp, #4288	; 0x10c0
   295f8:	add	lr, lr, #16
   295fc:	str	ip, [lr]
   29600:	lsr	ip, r4, #7
   29604:	str	ip, [sp, #680]	; 0x2a8
   29608:	ldr	ip, [sp, #72]	; 0x48
   2960c:	ldrd	r4, [sp, #184]	; 0xb8
   29610:	add	lr, sp, #4288	; 0x10c0
   29614:	orr	ip, ip, r9, lsr #7
   29618:	str	ip, [lr]
   2961c:	add	lr, sp, #4224	; 0x1080
   29620:	orr	r4, r4, r8
   29624:	orr	r5, r5, r9
   29628:	add	lr, lr, #56	; 0x38
   2962c:	ldr	ip, [sp, #52]	; 0x34
   29630:	strd	r4, [sp, #152]	; 0x98
   29634:	ldrd	r4, [lr]
   29638:	ldr	lr, [sp, #48]	; 0x30
   2963c:	lsr	ip, ip, #1
   29640:	add	r1, sp, #4224	; 0x1080
   29644:	orr	ip, ip, lr, lsl #31
   29648:	add	lr, sp, #4288	; 0x10c0
   2964c:	add	lr, lr, #12
   29650:	str	ip, [lr]
   29654:	ldr	ip, [sp, #52]	; 0x34
   29658:	ldr	lr, [sp, #48]	; 0x30
   2965c:	add	r1, r1, #40	; 0x28
   29660:	lsr	ip, ip, #8
   29664:	ldrd	r0, [r1]
   29668:	orr	ip, ip, lr, lsl #24
   2966c:	add	lr, sp, #4288	; 0x10c0
   29670:	add	lr, lr, #20
   29674:	eor	r1, r1, r7
   29678:	str	ip, [lr]
   2967c:	ldr	lr, [sp, #52]	; 0x34
   29680:	ldr	ip, [sp, #680]	; 0x2a8
   29684:	mov	r7, r1
   29688:	add	r1, sp, #4224	; 0x1080
   2968c:	add	r1, r1, #48	; 0x30
   29690:	orr	ip, ip, lr, lsl #25
   29694:	eor	r0, r0, r6
   29698:	ldr	lr, [sp, #40]	; 0x28
   2969c:	mov	r6, r0
   296a0:	ldrd	r0, [r1]
   296a4:	adds	r6, r6, r2
   296a8:	lsr	lr, lr, #6
   296ac:	adc	r7, r7, r3
   296b0:	eor	r0, r0, r4
   296b4:	eor	r1, r1, r5
   296b8:	str	ip, [sp, #680]	; 0x2a8
   296bc:	ldrd	r4, [sp, #152]	; 0x98
   296c0:	ldr	ip, [sp, #40]	; 0x28
   296c4:	str	lr, [sp, #688]	; 0x2b0
   296c8:	ldrd	r2, [sp, #184]	; 0xb8
   296cc:	and	r4, r4, sl
   296d0:	and	r5, r5, fp
   296d4:	and	r2, r2, r8
   296d8:	and	r3, r3, r9
   296dc:	lsr	ip, ip, #19
   296e0:	strd	r2, [sp, #72]	; 0x48
   296e4:	add	r3, sp, #4288	; 0x10c0
   296e8:	ldrd	r2, [r3]
   296ec:	eor	r2, r2, r0
   296f0:	eor	r3, r3, r1
   296f4:	mov	r0, r2
   296f8:	mov	r1, r3
   296fc:	ldrd	r2, [sp, #72]	; 0x48
   29700:	orr	r2, r2, r4
   29704:	orr	r3, r3, r5
   29708:	ldrd	r4, [sp, #40]	; 0x28
   2970c:	strd	r2, [sp, #152]	; 0x98
   29710:	add	r2, sp, #4288	; 0x10c0
   29714:	add	r2, r2, #24
   29718:	orr	ip, ip, r5, lsl #13
   2971c:	str	ip, [r2]
   29720:	add	r2, sp, #4288	; 0x10c0
   29724:	lsl	r3, r5, #3
   29728:	add	r2, r2, #36	; 0x24
   2972c:	orr	r3, r3, r4, lsr #29
   29730:	str	r3, [r2]
   29734:	ldr	r3, [sp, #52]	; 0x34
   29738:	ldr	ip, [sp, #688]	; 0x2b0
   2973c:	lsr	r2, r5, #19
   29740:	lsr	r3, r3, #7
   29744:	str	r3, [sp, #684]	; 0x2ac
   29748:	orr	ip, ip, r5, lsl #26
   2974c:	lsl	r3, r4, #3
   29750:	ldrd	r4, [sp, #24]
   29754:	str	ip, [sp, #688]	; 0x2b0
   29758:	adds	r4, r4, r6
   2975c:	adc	r5, r5, r7
   29760:	strd	r4, [sp, #72]	; 0x48
   29764:	ldrd	r4, [sp, #152]	; 0x98
   29768:	adds	r4, r4, r0
   2976c:	adc	r5, r5, r1
   29770:	add	r1, sp, #4288	; 0x10c0
   29774:	add	r1, r1, #8
   29778:	strd	r4, [sp, #24]
   2977c:	ldrd	r4, [r1]
   29780:	add	r1, sp, #4288	; 0x10c0
   29784:	add	r1, r1, #16
   29788:	ldrd	r0, [r1]
   2978c:	eor	r4, r4, r0
   29790:	eor	r5, r5, r1
   29794:	ldrd	r0, [sp, #40]	; 0x28
   29798:	orr	ip, r2, r0, lsl #13
   2979c:	add	r2, sp, #4288	; 0x10c0
   297a0:	add	r2, r2, #28
   297a4:	str	ip, [r2]
   297a8:	add	r2, sp, #4288	; 0x10c0
   297ac:	add	r2, r2, #32
   297b0:	orr	r3, r3, r1, lsr #29
   297b4:	str	r3, [r2]
   297b8:	lsr	ip, r1, #6
   297bc:	add	r3, sp, #680	; 0x2a8
   297c0:	ldrd	r0, [sp, #24]
   297c4:	ldrd	r2, [r3]
   297c8:	str	ip, [sp, #692]	; 0x2b4
   297cc:	adds	r0, r0, r6
   297d0:	adc	r1, r1, r7
   297d4:	eor	r2, r2, r4
   297d8:	eor	r3, r3, r5
   297dc:	mov	r4, r0
   297e0:	mov	r5, r1
   297e4:	add	ip, sp, #4288	; 0x10c0
   297e8:	strd	r4, [sp, #176]	; 0xb0
   297ec:	ldrd	r4, [sp, #80]	; 0x50
   297f0:	add	r1, sp, #4288	; 0x10c0
   297f4:	add	ip, ip, #32
   297f8:	adds	r4, r4, r2
   297fc:	add	r1, r1, #24
   29800:	adc	r5, r5, r3
   29804:	add	r3, sp, #688	; 0x2b0
   29808:	ldrd	r6, [ip]
   2980c:	ldrd	r0, [r1]
   29810:	ldrd	r2, [r3]
   29814:	eor	r0, r0, r6
   29818:	eor	r1, r1, r7
   2981c:	eor	r2, r2, r0
   29820:	eor	r3, r3, r1
   29824:	mov	r0, r2
   29828:	mov	r1, r3
   2982c:	ldrd	r2, [sp, #104]	; 0x68
   29830:	ldrd	r6, [sp, #72]	; 0x48
   29834:	adds	r2, r2, r4
   29838:	adc	r3, r3, r5
   2983c:	ldrd	r4, [sp, #72]	; 0x48
   29840:	lsr	lr, r6, #14
   29844:	lsr	ip, r6, #18
   29848:	mov	r6, r2
   2984c:	add	r2, sp, #4288	; 0x10c0
   29850:	add	r2, r2, #40	; 0x28
   29854:	mov	r7, r3
   29858:	orr	r3, lr, r5, lsl #18
   2985c:	str	r3, [r2]
   29860:	add	r2, sp, #4288	; 0x10c0
   29864:	add	r2, r2, #48	; 0x30
   29868:	b	29880 <__assert_fail@plt+0x18594>
   2986c:	nop			; (mov r0, r0)
   29870:			; <UNDEFINED> instruction: 0x0654be30
   29874:	strbgt	r5, [ip, -r3, lsr #3]!
   29878:	usatle	r5, #15, r8, lsl #4
   2987c:	orrsle	lr, r2, r9, lsl r8
   29880:	orr	r3, ip, r5, lsl #14
   29884:	str	r3, [r2]
   29888:	adds	r2, r6, r0
   2988c:	adc	r3, r7, r1
   29890:	ldrd	r0, [sp, #176]	; 0xb0
   29894:	strd	r2, [sp, #24]
   29898:	lsr	lr, r5, #14
   2989c:	lsr	r4, r5, #18
   298a0:	ldr	r3, [sp, #76]	; 0x4c
   298a4:	lsr	r5, r0, #28
   298a8:	lsl	ip, r1, #30
   298ac:	ldrd	r0, [sp, #72]	; 0x48
   298b0:	add	r2, sp, #4288	; 0x10c0
   298b4:	add	r2, r2, #44	; 0x2c
   298b8:	lsl	r6, r3, #23
   298bc:	orr	r3, lr, r0, lsl #18
   298c0:	str	r3, [r2]
   298c4:	add	r2, sp, #4288	; 0x10c0
   298c8:	add	r2, r2, #52	; 0x34
   298cc:	orr	r3, r4, r0, lsl #14
   298d0:	str	r3, [r2]
   298d4:	ldrd	r0, [sp, #136]	; 0x88
   298d8:	ldrd	r2, [sp, #120]	; 0x78
   298dc:	eor	r1, r1, r3
   298e0:	ldr	r3, [sp, #72]	; 0x48
   298e4:	eor	r0, r0, r2
   298e8:	add	r2, sp, #4288	; 0x10c0
   298ec:	add	r2, r2, #60	; 0x3c
   298f0:	orr	r3, r6, r3, lsr #9
   298f4:	str	r3, [r2]
   298f8:	ldrd	r6, [sp, #176]	; 0xb0
   298fc:	ldr	r3, [sp, #72]	; 0x48
   29900:	add	r2, sp, #4352	; 0x1100
   29904:	lsl	lr, r3, #23
   29908:	orr	r3, r5, r7, lsl #4
   2990c:	str	r3, [r2]
   29910:	add	r2, sp, #4352	; 0x1100
   29914:	add	r2, r2, #12
   29918:	orr	r3, ip, r6, lsr #2
   2991c:	str	r3, [r2]
   29920:	sub	r5, pc, #176	; 0xb0
   29924:	ldrd	r4, [r5]
   29928:	ldrd	r2, [sp, #24]
   2992c:	lsr	ip, r7, #28
   29930:	orr	ip, ip, r6, lsl #4
   29934:	adds	r4, r4, r2
   29938:	adc	r5, r5, r3
   2993c:	mov	r2, r4
   29940:	mov	r3, r5
   29944:	ldrd	r4, [sp, #72]	; 0x48
   29948:	and	r4, r4, r0
   2994c:	mov	r0, r4
   29950:	ldr	r4, [sp, #76]	; 0x4c
   29954:	and	r5, r5, r1
   29958:	mov	r1, r5
   2995c:	orr	lr, lr, r4, lsr #9
   29960:	add	r4, sp, #4288	; 0x10c0
   29964:	add	r4, r4, #56	; 0x38
   29968:	str	lr, [r4]
   2996c:	add	lr, sp, #4352	; 0x1100
   29970:	add	lr, lr, #4
   29974:	str	ip, [lr]
   29978:	ldr	ip, [sp, #88]	; 0x58
   2997c:	lsl	r5, r6, #30
   29980:	lsl	r4, r7, #25
   29984:	lsr	lr, ip, #1
   29988:	orr	ip, r5, r7, lsr #2
   2998c:	add	r5, sp, #4352	; 0x1100
   29990:	add	r5, r5, #8
   29994:	str	ip, [r5]
   29998:	orr	ip, r4, r6, lsr #7
   2999c:	add	r4, sp, #4352	; 0x1100
   299a0:	add	r4, r4, #20
   299a4:	mov	r5, r7
   299a8:	str	ip, [r4]
   299ac:	mov	r4, r6
   299b0:	lsl	ip, r6, #25
   299b4:	ldrd	r6, [sp, #208]	; 0xd0
   299b8:	orr	r4, r4, r8
   299bc:	adds	r6, r6, r2
   299c0:	adc	r7, r7, r3
   299c4:	mov	r2, r6
   299c8:	mov	r3, r7
   299cc:	ldrd	r6, [sp, #136]	; 0x88
   299d0:	eor	r7, r7, r1
   299d4:	add	r1, sp, #4288	; 0x10c0
   299d8:	eor	r6, r6, r0
   299dc:	add	r1, r1, #40	; 0x28
   299e0:	strd	r6, [sp, #80]	; 0x50
   299e4:	ldrd	r6, [r1]
   299e8:	add	r1, sp, #4288	; 0x10c0
   299ec:	add	r1, r1, #48	; 0x30
   299f0:	ldrd	r0, [r1]
   299f4:	eor	r6, r6, r0
   299f8:	ldr	r0, [sp, #92]	; 0x5c
   299fc:	eor	r7, r7, r1
   29a00:	add	r1, sp, #4352	; 0x1100
   29a04:	add	r1, r1, #24
   29a08:	orr	lr, lr, r0, lsl #31
   29a0c:	str	lr, [r1]
   29a10:	ldrd	r0, [sp, #88]	; 0x58
   29a14:	lsr	lr, r0, #8
   29a18:	orr	lr, lr, r1, lsl #24
   29a1c:	add	r1, sp, #4352	; 0x1100
   29a20:	add	r1, r1, #32
   29a24:	str	lr, [r1]
   29a28:	mov	r1, r5
   29a2c:	ldr	lr, [sp, #88]	; 0x58
   29a30:	orr	ip, ip, r1, lsr #7
   29a34:	add	r1, sp, #4352	; 0x1100
   29a38:	add	r1, r1, #16
   29a3c:	str	ip, [r1]
   29a40:	ldrd	r0, [sp, #80]	; 0x50
   29a44:	lsr	lr, lr, #7
   29a48:	str	lr, [sp, #696]	; 0x2b8
   29a4c:	adds	r0, r0, r2
   29a50:	adc	r1, r1, r3
   29a54:	mov	r3, r1
   29a58:	add	r1, sp, #4288	; 0x10c0
   29a5c:	add	r1, r1, #56	; 0x38
   29a60:	mov	r2, r0
   29a64:	ldrd	r0, [r1]
   29a68:	add	lr, sp, #4352	; 0x1100
   29a6c:	add	lr, lr, #8
   29a70:	eor	r0, r0, r6
   29a74:	eor	r1, r1, r7
   29a78:	ldrd	r6, [lr]
   29a7c:	strd	r0, [sp, #80]	; 0x50
   29a80:	add	r1, sp, #4352	; 0x1100
   29a84:	orr	r5, r5, r9
   29a88:	ldrd	r0, [r1]
   29a8c:	ldr	ip, [sp, #92]	; 0x5c
   29a90:	add	lr, sp, #4352	; 0x1100
   29a94:	eor	r0, r0, r6
   29a98:	eor	r1, r1, r7
   29a9c:	mov	r6, r0
   29aa0:	mov	r7, r1
   29aa4:	ldrd	r0, [sp, #184]	; 0xb8
   29aa8:	add	lr, lr, #28
   29aac:	lsr	ip, ip, #1
   29ab0:	and	r0, r0, r4
   29ab4:	and	r1, r1, r5
   29ab8:	mov	r4, r0
   29abc:	mov	r5, r1
   29ac0:	ldrd	r0, [sp, #88]	; 0x58
   29ac4:	orr	ip, ip, r0, lsl #31
   29ac8:	str	ip, [lr]
   29acc:	add	lr, sp, #4352	; 0x1100
   29ad0:	lsr	ip, r1, #8
   29ad4:	add	lr, lr, #36	; 0x24
   29ad8:	orr	ip, ip, r0, lsl #24
   29adc:	str	ip, [lr]
   29ae0:	ldr	ip, [sp, #696]	; 0x2b8
   29ae4:	orr	ip, ip, r1, lsl #25
   29ae8:	ldrd	r0, [sp, #112]	; 0x70
   29aec:	str	ip, [sp, #696]	; 0x2b8
   29af0:	lsr	lr, r0, #6
   29af4:	lsr	ip, r0, #19
   29af8:	ldrd	r0, [sp, #80]	; 0x50
   29afc:	str	lr, [sp, #704]	; 0x2c0
   29b00:	adds	r0, r0, r2
   29b04:	adc	r1, r1, r3
   29b08:	ldrd	r2, [sp, #176]	; 0xb0
   29b0c:	strd	r0, [sp, #80]	; 0x50
   29b10:	add	r1, sp, #4352	; 0x1100
   29b14:	add	r1, r1, #16
   29b18:	and	r2, r2, r8
   29b1c:	ldrd	r0, [r1]
   29b20:	orr	r4, r4, r2
   29b24:	add	r2, sp, #4352	; 0x1100
   29b28:	eor	r6, r6, r0
   29b2c:	eor	r7, r7, r1
   29b30:	mov	r0, r6
   29b34:	mov	r1, r7
   29b38:	add	r2, r2, #40	; 0x28
   29b3c:	strd	r0, [sp, #152]	; 0x98
   29b40:	ldrd	r0, [sp, #112]	; 0x70
   29b44:	and	r3, r3, r9
   29b48:	orr	r5, r5, r3
   29b4c:	orr	ip, ip, r1, lsl #13
   29b50:	str	ip, [r2]
   29b54:	add	r2, sp, #4352	; 0x1100
   29b58:	lsl	r3, r1, #3
   29b5c:	add	r2, r2, #52	; 0x34
   29b60:	orr	r3, r3, r0, lsr #29
   29b64:	str	r3, [r2]
   29b68:	ldr	r3, [sp, #92]	; 0x5c
   29b6c:	ldr	ip, [sp, #704]	; 0x2c0
   29b70:	mov	r7, r1
   29b74:	lsr	r3, r3, #7
   29b78:	lsr	r2, r1, #19
   29b7c:	mov	r6, r0
   29b80:	orr	ip, ip, r1, lsl #26
   29b84:	str	r3, [sp, #700]	; 0x2bc
   29b88:	lsl	r3, r0, #3
   29b8c:	ldrd	r0, [sp, #80]	; 0x50
   29b90:	str	ip, [sp, #704]	; 0x2c0
   29b94:	add	ip, sp, #4352	; 0x1100
   29b98:	adds	r0, r0, sl
   29b9c:	adc	r1, r1, fp
   29ba0:	add	ip, ip, #24
   29ba4:	strd	r0, [sp, #200]	; 0xc8
   29ba8:	ldrd	r0, [sp, #152]	; 0x98
   29bac:	ldrd	sl, [ip]
   29bb0:	add	ip, sp, #4352	; 0x1100
   29bb4:	add	ip, ip, #32
   29bb8:	adds	r0, r0, r4
   29bbc:	adc	r1, r1, r5
   29bc0:	ldrd	r4, [ip]
   29bc4:	orr	ip, r2, r6, lsl #13
   29bc8:	add	r2, sp, #4352	; 0x1100
   29bcc:	add	r2, r2, #44	; 0x2c
   29bd0:	str	ip, [r2]
   29bd4:	add	r2, sp, #4352	; 0x1100
   29bd8:	add	r2, r2, #48	; 0x30
   29bdc:	orr	r3, r3, r7, lsr #29
   29be0:	str	r3, [r2]
   29be4:	add	r3, sp, #696	; 0x2b8
   29be8:	eor	sl, sl, r4
   29bec:	ldrd	r2, [r3]
   29bf0:	eor	fp, fp, r5
   29bf4:	mov	r5, fp
   29bf8:	eor	r2, r2, sl
   29bfc:	ldrd	sl, [sp, #80]	; 0x50
   29c00:	lsr	ip, r7, #6
   29c04:	str	ip, [sp, #708]	; 0x2c4
   29c08:	adds	sl, sl, r0
   29c0c:	adc	fp, fp, r1
   29c10:	add	ip, sp, #4352	; 0x1100
   29c14:	add	r1, sp, #4352	; 0x1100
   29c18:	add	ip, ip, #48	; 0x30
   29c1c:	add	r1, r1, #40	; 0x28
   29c20:	ldrd	r6, [ip]
   29c24:	ldrd	r0, [r1]
   29c28:	eor	r3, r3, r5
   29c2c:	ldrd	r4, [sp, #48]	; 0x30
   29c30:	eor	r0, r0, r6
   29c34:	eor	r1, r1, r7
   29c38:	ldrd	r6, [sp, #200]	; 0xc8
   29c3c:	adds	r4, r4, r2
   29c40:	add	r2, sp, #704	; 0x2c0
   29c44:	adc	r5, r5, r3
   29c48:	lsr	lr, r6, #14
   29c4c:	lsr	r3, r6, #18
   29c50:	ldrd	r6, [r2]
   29c54:	add	r2, sp, #4352	; 0x1100
   29c58:	add	r2, r2, #56	; 0x38
   29c5c:	eor	r6, r6, r0
   29c60:	eor	r7, r7, r1
   29c64:	mov	r0, r6
   29c68:	mov	r1, r7
   29c6c:	ldrd	r6, [sp, #168]	; 0xa8
   29c70:	adds	r6, r6, r4
   29c74:	adc	r7, r7, r5
   29c78:	ldrd	r4, [sp, #200]	; 0xc8
   29c7c:	orr	ip, r3, r5, lsl #14
   29c80:	add	r3, sp, #4416	; 0x1140
   29c84:	orr	lr, lr, r5, lsl #18
   29c88:	str	ip, [r3]
   29c8c:	mov	r3, r5
   29c90:	str	lr, [r2]
   29c94:	mov	r2, r4
   29c98:	adds	r4, r6, r0
   29c9c:	lsr	ip, r5, #18
   29ca0:	lsl	r6, r3, #23
   29ca4:	lsr	lr, r5, #14
   29ca8:	adc	r5, r7, r1
   29cac:	mov	r1, r3
   29cb0:	add	r3, sp, #4352	; 0x1100
   29cb4:	add	r3, r3, #60	; 0x3c
   29cb8:	str	ip, [sp, #80]	; 0x50
   29cbc:	orr	lr, lr, r2, lsl #18
   29cc0:	str	lr, [r3]
   29cc4:	mov	r3, r1
   29cc8:	ldr	r1, [sp, #80]	; 0x50
   29ccc:	strd	r4, [sp, #48]	; 0x30
   29cd0:	orr	lr, r1, r2, lsl #14
   29cd4:	add	r1, sp, #4416	; 0x1140
   29cd8:	add	r1, r1, #4
   29cdc:	ldrd	r4, [sp, #120]	; 0x78
   29ce0:	str	lr, [r1]
   29ce4:	ldrd	r0, [sp, #72]	; 0x48
   29ce8:	orr	lr, r6, r2, lsr #9
   29cec:	lsr	r7, sl, #28
   29cf0:	eor	r1, r1, r5
   29cf4:	mov	r5, r3
   29cf8:	add	r3, sp, #4416	; 0x1140
   29cfc:	add	r3, r3, #12
   29d00:	str	lr, [r3]
   29d04:	add	r3, sp, #4416	; 0x1140
   29d08:	add	r3, r3, #16
   29d0c:	orr	r7, r7, fp, lsl #4
   29d10:	str	r7, [r3]
   29d14:	add	r3, sp, #4416	; 0x1140
   29d18:	lsl	ip, fp, #30
   29d1c:	add	r3, r3, #28
   29d20:	orr	ip, ip, sl, lsr #2
   29d24:	ldrd	r6, [sp, #48]	; 0x30
   29d28:	eor	r0, r0, r4
   29d2c:	str	ip, [r3]
   29d30:	mov	r4, r2
   29d34:	lsl	lr, r2, #23
   29d38:	add	r3, pc, #872	; 0x368
   29d3c:	ldrd	r2, [r3]
   29d40:	lsr	ip, fp, #28
   29d44:	orr	ip, ip, sl, lsl #4
   29d48:	adds	r2, r2, r6
   29d4c:	adc	r3, r3, r7
   29d50:	mov	r6, r4
   29d54:	mov	r7, r5
   29d58:	and	r6, r6, r0
   29d5c:	and	r7, r7, r1
   29d60:	mov	r0, r6
   29d64:	mov	r1, r7
   29d68:	ldrd	r6, [sp, #32]
   29d6c:	lsl	r5, sl, #30
   29d70:	lsr	r4, r6, #7
   29d74:	str	r4, [sp, #712]	; 0x2c8
   29d78:	ldr	r4, [sp, #204]	; 0xcc
   29d7c:	orr	lr, lr, r4, lsr #9
   29d80:	add	r4, sp, #4416	; 0x1140
   29d84:	add	r4, r4, #8
   29d88:	str	lr, [r4]
   29d8c:	add	lr, sp, #4416	; 0x1140
   29d90:	add	lr, lr, #20
   29d94:	str	ip, [lr]
   29d98:	orr	ip, r5, fp, lsr #2
   29d9c:	add	r5, sp, #4416	; 0x1140
   29da0:	add	r5, r5, #24
   29da4:	lsr	lr, r6, #1
   29da8:	str	ip, [r5]
   29dac:	ldrd	r6, [sp, #136]	; 0x88
   29db0:	lsl	r4, fp, #25
   29db4:	orr	ip, r4, sl, lsr #7
   29db8:	add	r4, sp, #4416	; 0x1140
   29dbc:	adds	r6, r6, r2
   29dc0:	add	r4, r4, #36	; 0x24
   29dc4:	adc	r7, r7, r3
   29dc8:	str	ip, [r4]
   29dcc:	mov	r2, r6
   29dd0:	lsl	ip, sl, #25
   29dd4:	mov	r3, r7
   29dd8:	ldrd	r6, [sp, #120]	; 0x78
   29ddc:	str	ip, [sp, #80]	; 0x50
   29de0:	add	ip, sp, #4352	; 0x1100
   29de4:	add	ip, ip, #56	; 0x38
   29de8:	eor	r6, r6, r0
   29dec:	eor	r7, r7, r1
   29df0:	mov	r0, r6
   29df4:	mov	r1, r7
   29df8:	ldrd	r6, [ip]
   29dfc:	add	ip, sp, #4416	; 0x1140
   29e00:	adds	r2, r2, r0
   29e04:	ldrd	r4, [ip]
   29e08:	add	ip, sp, #4416	; 0x1140
   29e0c:	add	ip, ip, #40	; 0x28
   29e10:	eor	r6, r6, r4
   29e14:	eor	r7, r7, r5
   29e18:	ldrd	r4, [sp, #32]
   29e1c:	adc	r3, r3, r1
   29e20:	add	r1, sp, #4416	; 0x1140
   29e24:	orr	lr, lr, r5, lsl #31
   29e28:	str	lr, [ip]
   29e2c:	lsr	lr, r4, #8
   29e30:	orr	ip, lr, r5, lsl #24
   29e34:	ldrd	r4, [sp, #176]	; 0xb0
   29e38:	add	lr, sp, #4416	; 0x1140
   29e3c:	add	lr, lr, #48	; 0x30
   29e40:	orr	r4, r4, sl
   29e44:	orr	r5, r5, fp
   29e48:	str	ip, [lr]
   29e4c:	strd	r4, [sp, #136]	; 0x88
   29e50:	ldrd	r4, [sp, #32]
   29e54:	ldr	ip, [sp, #712]	; 0x2c8
   29e58:	add	lr, sp, #4416	; 0x1140
   29e5c:	orr	ip, ip, r5, lsl #25
   29e60:	str	ip, [sp, #712]	; 0x2c8
   29e64:	ldr	ip, [sp, #80]	; 0x50
   29e68:	add	lr, lr, #32
   29e6c:	orr	ip, ip, fp, lsr #7
   29e70:	str	ip, [lr]
   29e74:	add	lr, sp, #4416	; 0x1140
   29e78:	add	lr, lr, #24
   29e7c:	lsr	ip, r5, #1
   29e80:	ldrd	r4, [lr]
   29e84:	ldr	lr, [sp, #32]
   29e88:	add	r1, r1, #8
   29e8c:	orr	ip, ip, lr, lsl #31
   29e90:	add	lr, sp, #4416	; 0x1140
   29e94:	add	lr, lr, #44	; 0x2c
   29e98:	str	ip, [lr]
   29e9c:	ldr	ip, [sp, #36]	; 0x24
   29ea0:	ldrd	r0, [r1]
   29ea4:	ldr	lr, [sp, #32]
   29ea8:	lsr	ip, ip, #8
   29eac:	eor	r0, r0, r6
   29eb0:	orr	ip, ip, lr, lsl #24
   29eb4:	add	lr, sp, #4416	; 0x1140
   29eb8:	eor	r1, r1, r7
   29ebc:	mov	r6, r0
   29ec0:	add	lr, lr, #52	; 0x34
   29ec4:	adds	r6, r6, r2
   29ec8:	mov	r7, r1
   29ecc:	add	r1, sp, #4416	; 0x1140
   29ed0:	adc	r7, r7, r3
   29ed4:	str	ip, [lr]
   29ed8:	ldrd	r2, [sp, #176]	; 0xb0
   29edc:	ldr	lr, [sp, #36]	; 0x24
   29ee0:	add	r1, r1, #16
   29ee4:	and	r2, r2, sl
   29ee8:	ldrd	r0, [r1]
   29eec:	and	r3, r3, fp
   29ef0:	lsr	lr, lr, #7
   29ef4:	str	lr, [sp, #716]	; 0x2cc
   29ef8:	ldr	lr, [sp, #24]
   29efc:	eor	r0, r0, r4
   29f00:	eor	r1, r1, r5
   29f04:	ldrd	r4, [sp, #136]	; 0x88
   29f08:	strd	r2, [sp, #136]	; 0x88
   29f0c:	add	r3, sp, #4416	; 0x1140
   29f10:	add	r3, r3, #32
   29f14:	lsr	lr, lr, #6
   29f18:	ldr	ip, [sp, #24]
   29f1c:	str	lr, [sp, #720]	; 0x2d0
   29f20:	ldrd	r2, [r3]
   29f24:	and	r4, r4, r8
   29f28:	and	r5, r5, r9
   29f2c:	eor	r2, r2, r0
   29f30:	eor	r3, r3, r1
   29f34:	ldrd	r0, [sp, #136]	; 0x88
   29f38:	strd	r2, [sp, #80]	; 0x50
   29f3c:	add	r2, sp, #4416	; 0x1140
   29f40:	orr	r0, r0, r4
   29f44:	orr	r1, r1, r5
   29f48:	mov	r4, r0
   29f4c:	mov	r5, r1
   29f50:	ldrd	r0, [sp, #24]
   29f54:	add	r2, r2, #56	; 0x38
   29f58:	lsr	ip, ip, #19
   29f5c:	orr	ip, ip, r1, lsl #13
   29f60:	str	ip, [r2]
   29f64:	add	r2, sp, #4480	; 0x1180
   29f68:	lsl	r3, r1, #3
   29f6c:	add	r2, r2, #4
   29f70:	orr	r3, r3, r0, lsr #29
   29f74:	str	r3, [r2]
   29f78:	add	r1, sp, #4416	; 0x1140
   29f7c:	add	r3, sp, #4416	; 0x1140
   29f80:	add	r3, r3, #40	; 0x28
   29f84:	add	r1, r1, #48	; 0x30
   29f88:	ldrd	r2, [r3]
   29f8c:	ldrd	r0, [r1]
   29f90:	eor	r2, r2, r0
   29f94:	eor	r3, r3, r1
   29f98:	ldrd	r0, [sp, #24]
   29f9c:	strd	r2, [sp, #136]	; 0x88
   29fa0:	ldr	r3, [sp, #720]	; 0x2d0
   29fa4:	lsr	ip, r1, #19
   29fa8:	orr	r3, r3, r1, lsl #26
   29fac:	str	r3, [sp, #720]	; 0x2d0
   29fb0:	ldrd	r2, [sp, #184]	; 0xb8
   29fb4:	lsl	lr, r0, #3
   29fb8:	ldrd	r0, [sp, #136]	; 0x88
   29fbc:	adds	r2, r2, r6
   29fc0:	adc	r3, r3, r7
   29fc4:	strd	r2, [sp, #208]	; 0xd0
   29fc8:	ldrd	r2, [sp, #80]	; 0x50
   29fcc:	adds	r2, r2, r4
   29fd0:	adc	r3, r3, r5
   29fd4:	mov	r5, r3
   29fd8:	add	r3, sp, #712	; 0x2c8
   29fdc:	mov	r4, r2
   29fe0:	ldrd	r2, [r3]
   29fe4:	eor	r3, r3, r1
   29fe8:	mov	r1, r3
   29fec:	eor	r2, r2, r0
   29ff0:	ldr	r3, [sp, #24]
   29ff4:	mov	r0, r2
   29ff8:	add	r2, sp, #4416	; 0x1140
   29ffc:	add	r2, r2, #60	; 0x3c
   2a000:	orr	r3, ip, r3, lsl #13
   2a004:	str	r3, [r2]
   2a008:	ldr	r3, [sp, #28]
   2a00c:	add	r2, sp, #4480	; 0x1180
   2a010:	add	ip, sp, #4480	; 0x1180
   2a014:	orr	r3, lr, r3, lsr #29
   2a018:	str	r3, [r2]
   2a01c:	ldr	r3, [sp, #28]
   2a020:	adds	r2, r4, r6
   2a024:	lsr	r3, r3, #6
   2a028:	str	r3, [sp, #724]	; 0x2d4
   2a02c:	adc	r3, r5, r7
   2a030:	ldrd	r4, [sp, #88]	; 0x58
   2a034:	strd	r2, [sp, #136]	; 0x88
   2a038:	add	r3, sp, #4416	; 0x1140
   2a03c:	add	r3, r3, #56	; 0x38
   2a040:	ldrd	r6, [ip]
   2a044:	ldrd	r2, [r3]
   2a048:	adds	r4, r4, r0
   2a04c:	adc	r5, r5, r1
   2a050:	eor	r2, r2, r6
   2a054:	eor	r3, r3, r7
   2a058:	ldrd	r6, [sp, #208]	; 0xd0
   2a05c:	mov	r0, r4
   2a060:	mov	r1, r5
   2a064:	ldrd	r4, [sp, #192]	; 0xc0
   2a068:	lsr	ip, r6, #18
   2a06c:	str	ip, [sp, #80]	; 0x50
   2a070:	adds	r4, r4, r0
   2a074:	add	ip, sp, #720	; 0x2d0
   2a078:	adc	r5, r5, r1
   2a07c:	mov	r0, r4
   2a080:	mov	r1, r5
   2a084:	ldrd	r4, [ip]
   2a088:	lsr	lr, r6, #14
   2a08c:	orr	lr, lr, r7, lsl #18
   2a090:	eor	r3, r3, r5
   2a094:	mov	r5, r3
   2a098:	add	r3, sp, #4480	; 0x1180
   2a09c:	add	r3, r3, #8
   2a0a0:	b	2a0b8 <__assert_fail@plt+0x18dcc>
   2a0a4:	nop			; (mov r0, r0)
   2a0a8:	strbpl	sl, [r5, #-2320]!	; 0xfffff6f0
   2a0ac:	ldrle	r0, [r9], r4, lsr #12
   2a0b0:	ldrbpl	r2, [r1, -sl, lsr #32]!
   2a0b4:	vst3.32	{d3,d5,d7}, [lr], r5
   2a0b8:	str	lr, [r3]
   2a0bc:	ldr	r3, [sp, #80]	; 0x50
   2a0c0:	eor	r2, r2, r4
   2a0c4:	orr	ip, r3, r7, lsl #14
   2a0c8:	add	r3, sp, #4480	; 0x1180
   2a0cc:	mov	r4, r2
   2a0d0:	add	r3, r3, #16
   2a0d4:	mov	r2, r6
   2a0d8:	adds	r6, r0, r4
   2a0dc:	str	ip, [r3]
   2a0e0:	lsr	lr, r7, #14
   2a0e4:	mov	r3, r7
   2a0e8:	lsr	ip, r7, #18
   2a0ec:	adc	r7, r1, r5
   2a0f0:	str	ip, [sp, #88]	; 0x58
   2a0f4:	strd	r6, [sp, #80]	; 0x50
   2a0f8:	mov	r0, r2
   2a0fc:	add	r6, sp, #4480	; 0x1180
   2a100:	ldr	r1, [sp, #88]	; 0x58
   2a104:	add	r6, r6, #12
   2a108:	orr	lr, lr, r0, lsl #18
   2a10c:	str	lr, [r6]
   2a110:	orr	lr, r1, r0, lsl #14
   2a114:	add	r1, sp, #4480	; 0x1180
   2a118:	add	r1, r1, #20
   2a11c:	ldrd	r6, [sp, #200]	; 0xc8
   2a120:	str	lr, [r1]
   2a124:	ldrd	r0, [sp, #72]	; 0x48
   2a128:	lsl	r5, r3, #23
   2a12c:	ldrd	r2, [sp, #136]	; 0x88
   2a130:	eor	r0, r0, r6
   2a134:	eor	r1, r1, r7
   2a138:	ldrd	r6, [sp, #208]	; 0xd0
   2a13c:	lsr	r4, r2, #28
   2a140:	lsl	ip, r3, #30
   2a144:	orr	lr, r5, r6, lsr #9
   2a148:	add	r5, sp, #4480	; 0x1180
   2a14c:	add	r5, r5, #28
   2a150:	str	lr, [r5]
   2a154:	lsl	lr, r6, #23
   2a158:	str	lr, [sp, #88]	; 0x58
   2a15c:	add	lr, sp, #4480	; 0x1180
   2a160:	add	lr, lr, #32
   2a164:	orr	r5, r4, r3, lsl #4
   2a168:	str	r5, [lr]
   2a16c:	add	lr, sp, #4480	; 0x1180
   2a170:	add	lr, lr, #44	; 0x2c
   2a174:	orr	ip, ip, r2, lsr #2
   2a178:	ldrd	r4, [sp, #80]	; 0x50
   2a17c:	str	ip, [lr]
   2a180:	lsr	ip, r3, #28
   2a184:	sub	r3, pc, #220	; 0xdc
   2a188:	ldrd	r2, [r3]
   2a18c:	ldr	lr, [sp, #136]	; 0x88
   2a190:	adds	r2, r2, r4
   2a194:	adc	r3, r3, r5
   2a198:	mov	r5, r7
   2a19c:	and	r5, r5, r1
   2a1a0:	mov	r1, r5
   2a1a4:	mov	r4, r6
   2a1a8:	lsl	r5, lr, #30
   2a1ac:	ldr	lr, [sp, #56]	; 0x38
   2a1b0:	and	r4, r4, r0
   2a1b4:	mov	r0, r4
   2a1b8:	ldr	r4, [sp, #88]	; 0x58
   2a1bc:	lsr	lr, lr, #7
   2a1c0:	str	lr, [sp, #728]	; 0x2d8
   2a1c4:	orr	lr, r4, r7, lsr #9
   2a1c8:	add	r4, sp, #4480	; 0x1180
   2a1cc:	add	r4, r4, #24
   2a1d0:	ldrd	r6, [sp, #136]	; 0x88
   2a1d4:	str	lr, [r4]
   2a1d8:	add	lr, sp, #4480	; 0x1180
   2a1dc:	add	lr, lr, #36	; 0x24
   2a1e0:	orr	ip, ip, r6, lsl #4
   2a1e4:	str	ip, [lr]
   2a1e8:	ldr	ip, [sp, #56]	; 0x38
   2a1ec:	lsl	r4, r7, #25
   2a1f0:	lsr	lr, ip, #1
   2a1f4:	orr	ip, r5, r7, lsr #2
   2a1f8:	add	r5, sp, #4480	; 0x1180
   2a1fc:	add	r5, r5, #40	; 0x28
   2a200:	str	ip, [r5]
   2a204:	orr	ip, r4, r6, lsr #7
   2a208:	add	r4, sp, #4480	; 0x1180
   2a20c:	add	r4, r4, #52	; 0x34
   2a210:	mov	r5, r7
   2a214:	str	ip, [r4]
   2a218:	mov	r4, r6
   2a21c:	lsl	ip, r6, #25
   2a220:	ldrd	r6, [sp, #120]	; 0x78
   2a224:	orr	r4, r4, sl
   2a228:	orr	r5, r5, fp
   2a22c:	adds	r6, r6, r2
   2a230:	adc	r7, r7, r3
   2a234:	mov	r2, r6
   2a238:	mov	r3, r7
   2a23c:	ldrd	r6, [sp, #72]	; 0x48
   2a240:	eor	r7, r7, r1
   2a244:	add	r1, sp, #4480	; 0x1180
   2a248:	eor	r6, r6, r0
   2a24c:	add	r1, r1, #8
   2a250:	strd	r6, [sp, #88]	; 0x58
   2a254:	ldrd	r6, [r1]
   2a258:	add	r1, sp, #4480	; 0x1180
   2a25c:	add	r1, r1, #16
   2a260:	ldrd	r0, [r1]
   2a264:	eor	r6, r6, r0
   2a268:	ldr	r0, [sp, #60]	; 0x3c
   2a26c:	eor	r7, r7, r1
   2a270:	add	r1, sp, #4480	; 0x1180
   2a274:	add	r1, r1, #56	; 0x38
   2a278:	orr	lr, lr, r0, lsl #31
   2a27c:	str	lr, [r1]
   2a280:	ldrd	r0, [sp, #56]	; 0x38
   2a284:	lsr	lr, r0, #8
   2a288:	orr	lr, lr, r1, lsl #24
   2a28c:	add	r1, sp, #4544	; 0x11c0
   2a290:	str	lr, [r1]
   2a294:	ldr	r1, [sp, #60]	; 0x3c
   2a298:	ldr	lr, [sp, #728]	; 0x2d8
   2a29c:	orr	lr, lr, r1, lsl #25
   2a2a0:	str	lr, [sp, #728]	; 0x2d8
   2a2a4:	ldr	lr, [sp, #140]	; 0x8c
   2a2a8:	add	r1, sp, #4480	; 0x1180
   2a2ac:	add	r1, r1, #48	; 0x30
   2a2b0:	orr	ip, ip, lr, lsr #7
   2a2b4:	str	ip, [r1]
   2a2b8:	ldrd	r0, [sp, #88]	; 0x58
   2a2bc:	ldr	ip, [sp, #60]	; 0x3c
   2a2c0:	adds	r0, r0, r2
   2a2c4:	adc	r1, r1, r3
   2a2c8:	add	r3, sp, #4480	; 0x1180
   2a2cc:	add	r3, r3, #24
   2a2d0:	strd	r0, [sp, #88]	; 0x58
   2a2d4:	ldrd	r0, [r3]
   2a2d8:	add	r3, sp, #4480	; 0x1180
   2a2dc:	add	r3, r3, #32
   2a2e0:	eor	r0, r0, r6
   2a2e4:	eor	r1, r1, r7
   2a2e8:	mov	r6, r0
   2a2ec:	mov	r7, r1
   2a2f0:	ldrd	r0, [r3]
   2a2f4:	add	r3, sp, #4480	; 0x1180
   2a2f8:	add	r3, r3, #40	; 0x28
   2a2fc:	lsr	ip, ip, #1
   2a300:	ldrd	r2, [r3]
   2a304:	eor	r0, r0, r2
   2a308:	eor	r1, r1, r3
   2a30c:	ldrd	r2, [sp, #176]	; 0xb0
   2a310:	strd	r0, [sp, #120]	; 0x78
   2a314:	ldrd	r0, [sp, #56]	; 0x38
   2a318:	and	r2, r2, r4
   2a31c:	mov	r4, r2
   2a320:	add	r2, sp, #4480	; 0x1180
   2a324:	and	r3, r3, r5
   2a328:	add	r2, r2, #60	; 0x3c
   2a32c:	mov	r5, r3
   2a330:	orr	r3, ip, r0, lsl #31
   2a334:	str	r3, [r2]
   2a338:	add	r2, sp, #4544	; 0x11c0
   2a33c:	lsr	ip, r1, #8
   2a340:	add	r2, r2, #4
   2a344:	orr	r3, ip, r0, lsl #24
   2a348:	str	r3, [r2]
   2a34c:	ldrd	r2, [sp, #48]	; 0x30
   2a350:	lsr	lr, r1, #7
   2a354:	add	r1, sp, #4480	; 0x1180
   2a358:	lsr	r3, r2, #6
   2a35c:	str	r3, [sp, #736]	; 0x2e0
   2a360:	lsr	ip, r2, #19
   2a364:	ldrd	r2, [sp, #88]	; 0x58
   2a368:	add	r1, r1, #48	; 0x30
   2a36c:	str	lr, [sp, #732]	; 0x2dc
   2a370:	adds	r2, r2, r6
   2a374:	ldrd	r0, [r1]
   2a378:	adc	r3, r3, r7
   2a37c:	ldrd	r6, [sp, #120]	; 0x78
   2a380:	strd	r2, [sp, #88]	; 0x58
   2a384:	ldrd	r2, [sp, #136]	; 0x88
   2a388:	eor	r6, r6, r0
   2a38c:	eor	r7, r7, r1
   2a390:	mov	r0, r6
   2a394:	mov	r1, r7
   2a398:	and	r2, r2, sl
   2a39c:	strd	r0, [sp, #120]	; 0x78
   2a3a0:	ldrd	r0, [sp, #48]	; 0x30
   2a3a4:	orr	r4, r4, r2
   2a3a8:	add	r2, sp, #4544	; 0x11c0
   2a3ac:	add	r2, r2, #8
   2a3b0:	orr	ip, ip, r1, lsl #13
   2a3b4:	str	ip, [r2]
   2a3b8:	and	r3, r3, fp
   2a3bc:	ldr	ip, [sp, #736]	; 0x2e0
   2a3c0:	add	r2, sp, #4544	; 0x11c0
   2a3c4:	orr	r5, r5, r3
   2a3c8:	add	r2, r2, #20
   2a3cc:	lsl	r3, r1, #3
   2a3d0:	orr	r3, r3, r0, lsr #29
   2a3d4:	orr	ip, ip, r1, lsl #26
   2a3d8:	str	r3, [r2]
   2a3dc:	str	ip, [sp, #736]	; 0x2e0
   2a3e0:	lsr	r2, r1, #19
   2a3e4:	lsl	r3, r0, #3
   2a3e8:	ldrd	r0, [sp, #88]	; 0x58
   2a3ec:	add	ip, sp, #4480	; 0x1180
   2a3f0:	add	ip, ip, #56	; 0x38
   2a3f4:	adds	r0, r0, r8
   2a3f8:	adc	r1, r1, r9
   2a3fc:	mov	r6, r0
   2a400:	mov	r7, r1
   2a404:	ldrd	r0, [sp, #120]	; 0x78
   2a408:	ldrd	r8, [ip]
   2a40c:	add	ip, sp, #4544	; 0x11c0
   2a410:	adds	r0, r0, r4
   2a414:	adc	r1, r1, r5
   2a418:	ldrd	r4, [ip]
   2a41c:	lsr	lr, r6, #14
   2a420:	eor	r8, r8, r4
   2a424:	eor	r9, r9, r5
   2a428:	ldrd	r4, [sp, #48]	; 0x30
   2a42c:	orr	ip, r2, r4, lsl #13
   2a430:	add	r2, sp, #4544	; 0x11c0
   2a434:	add	r2, r2, #12
   2a438:	str	ip, [r2]
   2a43c:	add	r2, sp, #4544	; 0x11c0
   2a440:	add	r2, r2, #16
   2a444:	orr	r3, r3, r5, lsr #29
   2a448:	str	r3, [r2]
   2a44c:	add	r3, sp, #728	; 0x2d8
   2a450:	lsr	ip, r6, #18
   2a454:	ldrd	r2, [r3]
   2a458:	eor	r3, r3, r9
   2a45c:	mov	r9, r3
   2a460:	eor	r2, r2, r8
   2a464:	lsr	r3, r5, #6
   2a468:	mov	r8, r2
   2a46c:	str	r3, [sp, #740]	; 0x2e4
   2a470:	ldrd	r2, [sp, #88]	; 0x58
   2a474:	adds	r2, r2, r0
   2a478:	adc	r3, r3, r1
   2a47c:	mov	r4, r2
   2a480:	mov	r5, r3
   2a484:	add	r3, sp, #4544	; 0x11c0
   2a488:	strd	r4, [sp, #216]	; 0xd8
   2a48c:	add	r3, r3, #8
   2a490:	ldrd	r4, [sp, #32]
   2a494:	ldrd	r0, [r3]
   2a498:	add	r3, sp, #4544	; 0x11c0
   2a49c:	adds	r4, r4, r8
   2a4a0:	add	r3, r3, #16
   2a4a4:	mov	r8, r4
   2a4a8:	mov	r4, r6
   2a4ac:	add	r6, sp, #736	; 0x2e0
   2a4b0:	ldrd	r2, [r3]
   2a4b4:	adc	r5, r5, r9
   2a4b8:	mov	r9, r5
   2a4bc:	mov	r5, r7
   2a4c0:	ldrd	r6, [r6]
   2a4c4:	eor	r0, r0, r2
   2a4c8:	eor	r1, r1, r3
   2a4cc:	eor	r6, r6, r0
   2a4d0:	eor	r7, r7, r1
   2a4d4:	mov	r0, r6
   2a4d8:	mov	r1, r7
   2a4dc:	ldrd	r6, [sp, #144]	; 0x90
   2a4e0:	orr	lr, lr, r5, lsl #18
   2a4e4:	orr	ip, ip, r5, lsl #14
   2a4e8:	adds	r6, r6, r8
   2a4ec:	adc	r7, r7, r9
   2a4f0:	mov	r8, r6
   2a4f4:	mov	r9, r7
   2a4f8:	mov	r6, r4
   2a4fc:	mov	r7, r5
   2a500:	add	r4, sp, #4544	; 0x11c0
   2a504:	add	r4, r4, #24
   2a508:	strd	r6, [sp, #152]	; 0x98
   2a50c:	adds	r6, r8, r0
   2a510:	str	lr, [r4]
   2a514:	adc	r7, r9, r1
   2a518:	add	r4, sp, #4544	; 0x11c0
   2a51c:	ldrd	r0, [sp, #152]	; 0x98
   2a520:	add	r4, r4, #32
   2a524:	strd	r6, [sp, #32]
   2a528:	add	r6, sp, #4544	; 0x11c0
   2a52c:	str	ip, [r4]
   2a530:	lsr	lr, r5, #14
   2a534:	lsl	ip, r1, #23
   2a538:	add	r6, r6, #28
   2a53c:	add	r1, sp, #4544	; 0x11c0
   2a540:	lsr	r4, r5, #18
   2a544:	orr	lr, lr, r0, lsl #18
   2a548:	add	r1, r1, #36	; 0x24
   2a54c:	str	lr, [r6]
   2a550:	orr	lr, r4, r0, lsl #14
   2a554:	ldrd	r6, [sp, #200]	; 0xc8
   2a558:	str	lr, [r1]
   2a55c:	ldrd	r0, [sp, #208]	; 0xd0
   2a560:	str	ip, [sp, #88]	; 0x58
   2a564:	ldr	r4, [sp, #88]	; 0x58
   2a568:	eor	r0, r0, r6
   2a56c:	eor	r1, r1, r7
   2a570:	ldrd	r6, [sp, #152]	; 0x98
   2a574:	ldrd	r8, [sp, #216]	; 0xd8
   2a578:	add	r3, pc, #888	; 0x378
   2a57c:	ldrd	r2, [r3]
   2a580:	orr	lr, r4, r6, lsr #9
   2a584:	add	r4, sp, #4544	; 0x11c0
   2a588:	add	r4, r4, #44	; 0x2c
   2a58c:	str	lr, [r4]
   2a590:	lsl	lr, r6, #23
   2a594:	add	r4, sp, #4544	; 0x11c0
   2a598:	add	r6, sp, #4544	; 0x11c0
   2a59c:	lsr	r5, r8, #28
   2a5a0:	lsl	ip, r9, #30
   2a5a4:	add	r4, r4, #48	; 0x30
   2a5a8:	add	r6, r6, #60	; 0x3c
   2a5ac:	orr	r5, r5, r9, lsl #4
   2a5b0:	orr	ip, ip, r8, lsr #2
   2a5b4:	str	r5, [r4]
   2a5b8:	str	ip, [r6]
   2a5bc:	mov	r4, r8
   2a5c0:	ldrd	r6, [sp, #32]
   2a5c4:	mov	r5, r9
   2a5c8:	lsr	ip, r9, #28
   2a5cc:	ldrd	r8, [sp, #152]	; 0x98
   2a5d0:	adds	r6, r6, r2
   2a5d4:	adc	r7, r7, r3
   2a5d8:	and	r8, r8, r0
   2a5dc:	and	r9, r9, r1
   2a5e0:	mov	r0, r8
   2a5e4:	mov	r1, r9
   2a5e8:	ldrd	r8, [sp, #64]	; 0x40
   2a5ec:	mov	r2, r6
   2a5f0:	mov	r3, r7
   2a5f4:	mov	r6, r4
   2a5f8:	mov	r7, r5
   2a5fc:	lsl	r5, r4, #30
   2a600:	lsr	r4, r8, #7
   2a604:	str	r4, [sp, #744]	; 0x2e8
   2a608:	ldr	r4, [sp, #156]	; 0x9c
   2a60c:	orr	ip, ip, r6, lsl #4
   2a610:	mov	r9, r7
   2a614:	orr	lr, lr, r4, lsr #9
   2a618:	add	r4, sp, #4544	; 0x11c0
   2a61c:	add	r4, r4, #40	; 0x28
   2a620:	str	lr, [r4]
   2a624:	add	lr, sp, #4544	; 0x11c0
   2a628:	add	lr, lr, #52	; 0x34
   2a62c:	str	ip, [lr]
   2a630:	orr	ip, r5, r7, lsr #2
   2a634:	add	r5, sp, #4544	; 0x11c0
   2a638:	add	r5, r5, #56	; 0x38
   2a63c:	lsl	r4, r7, #25
   2a640:	str	ip, [r5]
   2a644:	orr	ip, r4, r6, lsr #7
   2a648:	add	r4, sp, #4608	; 0x1200
   2a64c:	add	r4, r4, #4
   2a650:	lsr	lr, r8, #1
   2a654:	str	ip, [r4]
   2a658:	mov	r8, r6
   2a65c:	lsl	ip, r6, #25
   2a660:	ldrd	r6, [sp, #72]	; 0x48
   2a664:	add	r4, sp, #4544	; 0x11c0
   2a668:	add	r4, r4, #24
   2a66c:	adds	r6, r6, r2
   2a670:	adc	r7, r7, r3
   2a674:	mov	r2, r6
   2a678:	mov	r3, r7
   2a67c:	ldrd	r6, [sp, #200]	; 0xc8
   2a680:	eor	r6, r6, r0
   2a684:	eor	r7, r7, r1
   2a688:	mov	r0, r6
   2a68c:	mov	r1, r7
   2a690:	ldrd	r6, [r4]
   2a694:	add	r4, sp, #4544	; 0x11c0
   2a698:	add	r4, r4, #32
   2a69c:	ldrd	r4, [r4]
   2a6a0:	eor	r6, r6, r4
   2a6a4:	eor	r7, r7, r5
   2a6a8:	add	r4, sp, #4608	; 0x1200
   2a6ac:	strd	r6, [sp, #88]	; 0x58
   2a6b0:	ldrd	r6, [sp, #64]	; 0x40
   2a6b4:	add	r4, r4, #8
   2a6b8:	orr	lr, lr, r7, lsl #31
   2a6bc:	str	lr, [r4]
   2a6c0:	add	r4, sp, #4608	; 0x1200
   2a6c4:	lsr	lr, r6, #8
   2a6c8:	add	r4, r4, #16
   2a6cc:	orr	lr, lr, r7, lsl #24
   2a6d0:	str	lr, [r4]
   2a6d4:	ldrd	r4, [sp, #136]	; 0x88
   2a6d8:	mov	r7, r9
   2a6dc:	ldr	lr, [sp, #744]	; 0x2e8
   2a6e0:	orr	r5, r5, r9
   2a6e4:	ldr	r9, [sp, #68]	; 0x44
   2a6e8:	adds	r6, r2, r0
   2a6ec:	orr	ip, ip, r7, lsr #7
   2a6f0:	orr	lr, lr, r9, lsl #25
   2a6f4:	mov	r9, r7
   2a6f8:	adc	r7, r3, r1
   2a6fc:	add	r3, sp, #4544	; 0x11c0
   2a700:	add	r3, r3, #40	; 0x28
   2a704:	ldrd	r0, [r3]
   2a708:	ldrd	r2, [sp, #88]	; 0x58
   2a70c:	strd	r6, [sp, #72]	; 0x48
   2a710:	str	lr, [sp, #744]	; 0x2e8
   2a714:	eor	r3, r3, r1
   2a718:	mov	r7, r3
   2a71c:	add	r3, sp, #4544	; 0x11c0
   2a720:	add	r3, r3, #48	; 0x30
   2a724:	eor	r2, r2, r0
   2a728:	ldrd	r0, [r3]
   2a72c:	add	r3, sp, #4544	; 0x11c0
   2a730:	add	r3, r3, #56	; 0x38
   2a734:	add	lr, sp, #4608	; 0x1200
   2a738:	mov	r6, r2
   2a73c:	ldrd	r2, [r3]
   2a740:	str	ip, [lr]
   2a744:	ldr	ip, [sp, #68]	; 0x44
   2a748:	eor	r1, r1, r3
   2a74c:	ldr	r3, [sp, #64]	; 0x40
   2a750:	eor	r0, r0, r2
   2a754:	add	r2, sp, #4608	; 0x1200
   2a758:	lsr	ip, ip, #1
   2a75c:	add	r2, r2, #12
   2a760:	orr	r3, ip, r3, lsl #31
   2a764:	str	r3, [r2]
   2a768:	ldr	r3, [sp, #68]	; 0x44
   2a76c:	add	r2, sp, #4608	; 0x1200
   2a770:	add	r2, r2, #20
   2a774:	lsr	ip, r3, #8
   2a778:	ldr	r3, [sp, #64]	; 0x40
   2a77c:	orr	r4, r4, r8
   2a780:	and	r4, r4, sl
   2a784:	orr	r3, ip, r3, lsl #24
   2a788:	str	r3, [r2]
   2a78c:	ldr	r3, [sp, #80]	; 0x50
   2a790:	and	r5, r5, fp
   2a794:	lsr	ip, r3, #19
   2a798:	ldr	r3, [sp, #68]	; 0x44
   2a79c:	lsr	r3, r3, #7
   2a7a0:	str	r3, [sp, #748]	; 0x2ec
   2a7a4:	ldr	r3, [sp, #80]	; 0x50
   2a7a8:	lsr	r3, r3, #6
   2a7ac:	str	r3, [sp, #752]	; 0x2f0
   2a7b0:	ldrd	r2, [sp, #72]	; 0x48
   2a7b4:	adds	r2, r2, r6
   2a7b8:	adc	r3, r3, r7
   2a7bc:	mov	r6, r2
   2a7c0:	mov	r7, r3
   2a7c4:	ldrd	r2, [sp, #136]	; 0x88
   2a7c8:	and	r2, r2, r8
   2a7cc:	and	r3, r3, r9
   2a7d0:	ldrd	r8, [lr]
   2a7d4:	orr	r4, r4, r2
   2a7d8:	add	r2, sp, #4608	; 0x1200
   2a7dc:	eor	r8, r8, r0
   2a7e0:	eor	r9, r9, r1
   2a7e4:	mov	r0, r8
   2a7e8:	mov	r1, r9
   2a7ec:	ldrd	r8, [sp, #80]	; 0x50
   2a7f0:	add	r2, r2, #24
   2a7f4:	orr	r5, r5, r3
   2a7f8:	orr	ip, ip, r9, lsl #13
   2a7fc:	str	ip, [r2]
   2a800:	add	r2, sp, #4608	; 0x1200
   2a804:	ldr	ip, [sp, #752]	; 0x2f0
   2a808:	lsl	r3, r9, #3
   2a80c:	add	r2, r2, #36	; 0x24
   2a810:	orr	r3, r3, r8, lsr #29
   2a814:	str	r3, [r2]
   2a818:	orr	ip, ip, r9, lsl #26
   2a81c:	lsr	r2, r9, #19
   2a820:	lsl	r3, r8, #3
   2a824:	ldrd	r8, [sp, #176]	; 0xb0
   2a828:	str	ip, [sp, #752]	; 0x2f0
   2a82c:	add	ip, sp, #4608	; 0x1200
   2a830:	adds	r8, r8, r6
   2a834:	adc	r9, r9, r7
   2a838:	add	ip, ip, #8
   2a83c:	strd	r8, [sp, #184]	; 0xb8
   2a840:	ldrd	r8, [ip]
   2a844:	add	ip, sp, #4608	; 0x1200
   2a848:	add	ip, ip, #16
   2a84c:	adds	r0, r0, r4
   2a850:	adc	r1, r1, r5
   2a854:	ldrd	r4, [ip]
   2a858:	eor	r8, r8, r4
   2a85c:	eor	r9, r9, r5
   2a860:	ldrd	r4, [sp, #80]	; 0x50
   2a864:	orr	ip, r2, r4, lsl #13
   2a868:	add	r2, sp, #4608	; 0x1200
   2a86c:	add	r2, r2, #28
   2a870:	str	ip, [r2]
   2a874:	add	r2, sp, #4608	; 0x1200
   2a878:	add	r2, r2, #32
   2a87c:	orr	r3, r3, r5, lsr #29
   2a880:	str	r3, [r2]
   2a884:	add	r3, sp, #744	; 0x2e8
   2a888:	adds	r4, r0, r6
   2a88c:	ldrd	r2, [r3]
   2a890:	eor	r3, r3, r9
   2a894:	mov	r9, r3
   2a898:	lsr	r3, r5, #6
   2a89c:	str	r3, [sp, #756]	; 0x2f4
   2a8a0:	add	r3, sp, #4608	; 0x1200
   2a8a4:	add	r3, r3, #24
   2a8a8:	adc	r5, r1, r7
   2a8ac:	ldrd	r0, [r3]
   2a8b0:	add	r3, sp, #4608	; 0x1200
   2a8b4:	add	r3, r3, #32
   2a8b8:	eor	r2, r2, r8
   2a8bc:	mov	r8, r2
   2a8c0:	ldrd	r2, [r3]
   2a8c4:	strd	r4, [sp, #88]	; 0x58
   2a8c8:	ldrd	r4, [sp, #56]	; 0x38
   2a8cc:	eor	r1, r1, r3
   2a8d0:	add	r3, sp, #752	; 0x2f0
   2a8d4:	eor	r0, r0, r2
   2a8d8:	ldrd	r2, [r3]
   2a8dc:	ldrd	r6, [sp, #184]	; 0xb8
   2a8e0:	adds	r4, r4, r8
   2a8e4:	eor	r2, r2, r0
   2a8e8:	adc	r5, r5, r9
   2a8ec:	mov	r0, r2
   2a8f0:	b	2a908 <__assert_fail@plt+0x1961c>
   2a8f4:	nop			; (mov r0, r0)
   2a8f8:	adcscc	sp, fp, #184, 2	; 0x2e
   2a8fc:	rsbne	sl, sl, r0, ror r0
   2a900:	ldmlt	r2, {r3, r6, r7, ip, lr, pc}^
   2a904:	stmibne	r4!, {r1, r2, r4, r8, lr, pc}
   2a908:	add	r2, sp, #4608	; 0x1200
   2a90c:	mov	r8, r4
   2a910:	mov	r9, r5
   2a914:	lsr	lr, r6, #14
   2a918:	ldrd	r4, [sp, #16]
   2a91c:	eor	r3, r3, r1
   2a920:	add	r2, r2, #40	; 0x28
   2a924:	mov	r1, r3
   2a928:	orr	r3, lr, r7, lsl #18
   2a92c:	str	r3, [r2]
   2a930:	add	r2, sp, #4608	; 0x1200
   2a934:	adds	r4, r4, r8
   2a938:	lsr	ip, r6, #18
   2a93c:	add	r2, r2, #48	; 0x30
   2a940:	orr	r3, ip, r7, lsl #14
   2a944:	mov	r8, r4
   2a948:	adc	r5, r5, r9
   2a94c:	str	r3, [r2]
   2a950:	adds	r2, r8, r0
   2a954:	adc	r3, r5, r1
   2a958:	mov	r8, r6
   2a95c:	strd	r2, [sp, #72]	; 0x48
   2a960:	add	r2, sp, #4608	; 0x1200
   2a964:	lsr	lr, r7, #14
   2a968:	add	r2, r2, #44	; 0x2c
   2a96c:	orr	r3, lr, r8, lsl #18
   2a970:	ldrd	r0, [sp, #88]	; 0x58
   2a974:	str	r3, [r2]
   2a978:	add	r2, sp, #4608	; 0x1200
   2a97c:	lsr	r4, r7, #18
   2a980:	add	r2, r2, #52	; 0x34
   2a984:	orr	r3, r4, r8, lsl #14
   2a988:	ldrd	r8, [sp, #208]	; 0xd0
   2a98c:	str	r3, [r2]
   2a990:	ldrd	r2, [sp, #152]	; 0x98
   2a994:	lsl	ip, r1, #30
   2a998:	mov	r1, r9
   2a99c:	lsr	r5, r0, #28
   2a9a0:	eor	r1, r1, r3
   2a9a4:	mov	r0, r8
   2a9a8:	ldr	r3, [sp, #184]	; 0xb8
   2a9ac:	eor	r0, r0, r2
   2a9b0:	add	r2, sp, #4608	; 0x1200
   2a9b4:	lsl	r6, r7, #23
   2a9b8:	add	r2, r2, #60	; 0x3c
   2a9bc:	orr	r3, r6, r3, lsr #9
   2a9c0:	str	r3, [r2]
   2a9c4:	ldr	r3, [sp, #92]	; 0x5c
   2a9c8:	add	r2, sp, #4672	; 0x1240
   2a9cc:	ldrd	r6, [sp, #184]	; 0xb8
   2a9d0:	orr	r3, r5, r3, lsl #4
   2a9d4:	ldrd	r4, [sp, #88]	; 0x58
   2a9d8:	str	r3, [r2]
   2a9dc:	add	r2, sp, #4672	; 0x1240
   2a9e0:	add	r2, r2, #12
   2a9e4:	orr	r3, ip, r4, lsr #2
   2a9e8:	str	r3, [r2]
   2a9ec:	lsr	ip, r5, #28
   2a9f0:	ldrd	r2, [sp, #72]	; 0x48
   2a9f4:	sub	r5, pc, #252	; 0xfc
   2a9f8:	ldrd	r4, [r5]
   2a9fc:	lsl	lr, r6, #23
   2aa00:	orr	lr, lr, r7, lsr #9
   2aa04:	adds	r4, r4, r2
   2aa08:	mov	r2, r4
   2aa0c:	mov	r4, r6
   2aa10:	and	r4, r4, r0
   2aa14:	mov	r0, r4
   2aa18:	ldr	r4, [sp, #96]	; 0x60
   2aa1c:	adc	r5, r5, r3
   2aa20:	mov	r3, r5
   2aa24:	lsr	r4, r4, #7
   2aa28:	str	r4, [sp, #760]	; 0x2f8
   2aa2c:	add	r4, sp, #4608	; 0x1200
   2aa30:	add	r4, r4, #56	; 0x38
   2aa34:	mov	r5, r7
   2aa38:	ldrd	r6, [sp, #88]	; 0x58
   2aa3c:	str	lr, [r4]
   2aa40:	add	lr, sp, #4672	; 0x1240
   2aa44:	and	r5, r5, r1
   2aa48:	add	lr, lr, #4
   2aa4c:	mov	r1, r5
   2aa50:	orr	ip, ip, r6, lsl #4
   2aa54:	ldr	r5, [sp, #88]	; 0x58
   2aa58:	str	ip, [lr]
   2aa5c:	ldr	ip, [sp, #96]	; 0x60
   2aa60:	lsl	r5, r5, #30
   2aa64:	lsl	r4, r7, #25
   2aa68:	lsr	lr, ip, #1
   2aa6c:	orr	ip, r5, r7, lsr #2
   2aa70:	add	r5, sp, #4672	; 0x1240
   2aa74:	add	r5, r5, #8
   2aa78:	str	ip, [r5]
   2aa7c:	orr	ip, r4, r6, lsr #7
   2aa80:	add	r4, sp, #4672	; 0x1240
   2aa84:	add	r4, r4, #20
   2aa88:	mov	r5, r7
   2aa8c:	str	ip, [r4]
   2aa90:	mov	r4, r6
   2aa94:	lsl	ip, r6, #25
   2aa98:	ldrd	r6, [sp, #200]	; 0xc8
   2aa9c:	str	ip, [sp, #120]	; 0x78
   2aaa0:	add	ip, sp, #4608	; 0x1200
   2aaa4:	adds	r6, r6, r2
   2aaa8:	adc	r7, r7, r3
   2aaac:	mov	r3, r7
   2aab0:	mov	r7, r9
   2aab4:	eor	r7, r7, r1
   2aab8:	add	r1, sp, #4608	; 0x1200
   2aabc:	add	ip, ip, #48	; 0x30
   2aac0:	add	r1, r1, #40	; 0x28
   2aac4:	mov	r2, r6
   2aac8:	mov	r6, r8
   2aacc:	eor	r6, r6, r0
   2aad0:	ldrd	r8, [ip]
   2aad4:	ldrd	r0, [r1]
   2aad8:	strd	r6, [sp, #56]	; 0x38
   2aadc:	add	ip, sp, #4672	; 0x1240
   2aae0:	eor	r0, r0, r8
   2aae4:	eor	r1, r1, r9
   2aae8:	mov	r6, r0
   2aaec:	mov	r7, r1
   2aaf0:	ldrd	r0, [sp, #96]	; 0x60
   2aaf4:	add	ip, ip, #24
   2aaf8:	mov	r9, r5
   2aafc:	orr	lr, lr, r1, lsl #31
   2ab00:	str	lr, [ip]
   2ab04:	lsr	lr, r0, #8
   2ab08:	orr	lr, lr, r1, lsl #24
   2ab0c:	add	r1, sp, #4672	; 0x1240
   2ab10:	add	r1, r1, #32
   2ab14:	str	lr, [r1]
   2ab18:	ldrd	r0, [sp, #216]	; 0xd8
   2ab1c:	ldr	lr, [sp, #760]	; 0x2f8
   2ab20:	orr	r0, r0, r4
   2ab24:	orr	r1, r1, r5
   2ab28:	mov	r4, r0
   2ab2c:	mov	r5, r1
   2ab30:	ldrd	r0, [sp, #96]	; 0x60
   2ab34:	orr	lr, lr, r1, lsl #25
   2ab38:	str	lr, [sp, #760]	; 0x2f8
   2ab3c:	ldr	lr, [sp, #120]	; 0x78
   2ab40:	orr	ip, lr, r9, lsr #7
   2ab44:	add	lr, sp, #4672	; 0x1240
   2ab48:	add	lr, lr, #16
   2ab4c:	str	ip, [lr]
   2ab50:	lsr	ip, r1, #1
   2ab54:	add	r1, sp, #4608	; 0x1200
   2ab58:	add	r1, r1, #56	; 0x38
   2ab5c:	ldrd	r8, [sp, #56]	; 0x38
   2ab60:	ldrd	r0, [r1]
   2ab64:	add	lr, sp, #4672	; 0x1240
   2ab68:	adds	r8, r8, r2
   2ab6c:	eor	r1, r1, r7
   2ab70:	mov	r7, r1
   2ab74:	add	lr, lr, #8
   2ab78:	add	r1, sp, #4672	; 0x1240
   2ab7c:	adc	r9, r9, r3
   2ab80:	eor	r0, r0, r6
   2ab84:	mov	r2, r8
   2ab88:	mov	r3, r9
   2ab8c:	mov	r6, r0
   2ab90:	ldrd	r8, [lr]
   2ab94:	ldrd	r0, [r1]
   2ab98:	add	lr, sp, #4672	; 0x1240
   2ab9c:	add	lr, lr, #28
   2aba0:	eor	r0, r0, r8
   2aba4:	eor	r1, r1, r9
   2aba8:	ldrd	r8, [sp, #136]	; 0x88
   2abac:	adds	r6, r6, r2
   2abb0:	adc	r7, r7, r3
   2abb4:	and	r8, r8, r4
   2abb8:	and	r9, r9, r5
   2abbc:	mov	r4, r8
   2abc0:	mov	r5, r9
   2abc4:	ldrd	r8, [sp, #96]	; 0x60
   2abc8:	ldrd	r2, [sp, #88]	; 0x58
   2abcc:	orr	ip, ip, r8, lsl #31
   2abd0:	str	ip, [lr]
   2abd4:	add	lr, sp, #4672	; 0x1240
   2abd8:	lsr	ip, r9, #8
   2abdc:	add	lr, lr, #36	; 0x24
   2abe0:	orr	ip, ip, r8, lsl #24
   2abe4:	str	ip, [lr]
   2abe8:	lsr	lr, r9, #7
   2abec:	str	lr, [sp, #764]	; 0x2fc
   2abf0:	ldr	lr, [sp, #32]
   2abf4:	ldrd	r8, [sp, #216]	; 0xd8
   2abf8:	ldr	ip, [sp, #32]
   2abfc:	lsr	lr, lr, #6
   2ac00:	str	lr, [sp, #768]	; 0x300
   2ac04:	add	lr, sp, #4672	; 0x1240
   2ac08:	add	lr, lr, #16
   2ac0c:	and	r8, r8, r2
   2ac10:	and	r9, r9, r3
   2ac14:	mov	r2, r8
   2ac18:	mov	r3, r9
   2ac1c:	ldrd	r8, [lr]
   2ac20:	orr	r4, r4, r2
   2ac24:	add	r2, sp, #4672	; 0x1240
   2ac28:	eor	r8, r8, r0
   2ac2c:	eor	r9, r9, r1
   2ac30:	mov	r0, r8
   2ac34:	mov	r1, r9
   2ac38:	ldrd	r8, [sp, #32]
   2ac3c:	add	r2, r2, #40	; 0x28
   2ac40:	lsr	ip, ip, #19
   2ac44:	orr	ip, ip, r9, lsl #13
   2ac48:	str	ip, [r2]
   2ac4c:	ldr	ip, [sp, #768]	; 0x300
   2ac50:	add	r2, sp, #4672	; 0x1240
   2ac54:	orr	ip, ip, r9, lsl #26
   2ac58:	orr	r5, r5, r3
   2ac5c:	add	r2, r2, #52	; 0x34
   2ac60:	lsl	r3, r9, #3
   2ac64:	str	ip, [sp, #768]	; 0x300
   2ac68:	add	ip, sp, #4672	; 0x1240
   2ac6c:	orr	r3, r3, r8, lsr #29
   2ac70:	add	ip, ip, #24
   2ac74:	str	r3, [r2]
   2ac78:	lsl	r3, r8, #3
   2ac7c:	adds	r8, sl, r6
   2ac80:	lsr	r2, r9, #19
   2ac84:	adc	r9, fp, r7
   2ac88:	ldrd	sl, [ip]
   2ac8c:	add	ip, sp, #4672	; 0x1240
   2ac90:	add	ip, ip, #32
   2ac94:	adds	r0, r0, r4
   2ac98:	adc	r1, r1, r5
   2ac9c:	ldrd	r4, [ip]
   2aca0:	strd	r8, [sp, #56]	; 0x38
   2aca4:	eor	sl, sl, r4
   2aca8:	eor	fp, fp, r5
   2acac:	mov	r8, sl
   2acb0:	mov	r9, fp
   2acb4:	ldrd	sl, [sp, #32]
   2acb8:	orr	ip, r2, sl, lsl #13
   2acbc:	add	r2, sp, #4672	; 0x1240
   2acc0:	add	r2, r2, #44	; 0x2c
   2acc4:	str	ip, [r2]
   2acc8:	add	r2, sp, #4672	; 0x1240
   2accc:	add	r2, r2, #48	; 0x30
   2acd0:	orr	r3, r3, fp, lsr #29
   2acd4:	str	r3, [r2]
   2acd8:	add	r3, sp, #760	; 0x2f8
   2acdc:	adds	sl, r0, r6
   2ace0:	ldrd	r2, [r3]
   2ace4:	add	r6, sp, #768	; 0x300
   2ace8:	eor	r3, r3, r9
   2acec:	mov	r9, r3
   2acf0:	lsr	r3, fp, #6
   2acf4:	str	r3, [sp, #772]	; 0x304
   2acf8:	add	r3, sp, #4672	; 0x1240
   2acfc:	add	r3, r3, #40	; 0x28
   2ad00:	adc	fp, r1, r7
   2ad04:	ldrd	r0, [r3]
   2ad08:	add	r3, sp, #4672	; 0x1240
   2ad0c:	add	r3, r3, #48	; 0x30
   2ad10:	eor	r2, r2, r8
   2ad14:	mov	r8, r2
   2ad18:	ldrd	r2, [r3]
   2ad1c:	ldrd	r4, [sp, #64]	; 0x40
   2ad20:	ldrd	r6, [r6]
   2ad24:	eor	r0, r0, r2
   2ad28:	eor	r1, r1, r3
   2ad2c:	adds	r4, r4, r8
   2ad30:	eor	r6, r6, r0
   2ad34:	eor	r7, r7, r1
   2ad38:	adc	r5, r5, r9
   2ad3c:	mov	r0, r6
   2ad40:	mov	r1, r7
   2ad44:	ldrd	r6, [sp, #40]	; 0x28
   2ad48:	mov	r8, r4
   2ad4c:	mov	r9, r5
   2ad50:	ldrd	r4, [sp, #56]	; 0x38
   2ad54:	adds	r6, r6, r8
   2ad58:	adc	r7, r7, r9
   2ad5c:	lsr	lr, r4, #14
   2ad60:	lsr	ip, r4, #18
   2ad64:	add	r4, sp, #4672	; 0x1240
   2ad68:	adds	r6, r6, r0
   2ad6c:	mov	r9, r7
   2ad70:	add	r4, r4, #56	; 0x38
   2ad74:	adc	r7, r9, r1
   2ad78:	orr	lr, lr, r5, lsl #18
   2ad7c:	ldrd	r0, [sp, #56]	; 0x38
   2ad80:	str	lr, [r4]
   2ad84:	add	r4, sp, #4736	; 0x1280
   2ad88:	mov	r8, r6
   2ad8c:	orr	ip, ip, r5, lsl #14
   2ad90:	add	r6, sp, #4672	; 0x1240
   2ad94:	str	ip, [r4]
   2ad98:	lsr	lr, r5, #14
   2ad9c:	lsl	ip, r1, #23
   2ada0:	add	r6, r6, #60	; 0x3c
   2ada4:	add	r1, sp, #4736	; 0x1280
   2ada8:	lsr	r4, r5, #18
   2adac:	orr	lr, lr, r0, lsl #18
   2adb0:	add	r1, r1, #4
   2adb4:	str	lr, [r6]
   2adb8:	orr	lr, r4, r0, lsl #14
   2adbc:	mov	r9, r7
   2adc0:	str	lr, [r1]
   2adc4:	ldrd	r6, [sp, #152]	; 0x98
   2adc8:	ldrd	r0, [sp, #184]	; 0xb8
   2adcc:	str	ip, [sp, #64]	; 0x40
   2add0:	ldr	r4, [sp, #64]	; 0x40
   2add4:	eor	r0, r0, r6
   2add8:	eor	r1, r1, r7
   2addc:	ldrd	r6, [sp, #56]	; 0x38
   2ade0:	add	r3, pc, #888	; 0x378
   2ade4:	ldrd	r2, [r3]
   2ade8:	lsr	r5, sl, #28
   2adec:	orr	lr, r4, r6, lsr #9
   2adf0:	add	r4, sp, #4736	; 0x1280
   2adf4:	add	r4, r4, #12
   2adf8:	str	lr, [r4]
   2adfc:	add	r4, sp, #4736	; 0x1280
   2ae00:	add	r4, r4, #16
   2ae04:	orr	r5, r5, fp, lsl #4
   2ae08:	str	r5, [r4]
   2ae0c:	add	r4, sp, #4736	; 0x1280
   2ae10:	lsl	ip, fp, #30
   2ae14:	lsl	lr, r6, #23
   2ae18:	add	r4, r4, #28
   2ae1c:	adds	r6, r8, r2
   2ae20:	adc	r7, r9, r3
   2ae24:	orr	ip, ip, sl, lsr #2
   2ae28:	strd	r8, [sp, #120]	; 0x78
   2ae2c:	ldrd	r8, [sp, #56]	; 0x38
   2ae30:	str	ip, [r4]
   2ae34:	add	r4, sp, #4736	; 0x1280
   2ae38:	add	r4, r4, #8
   2ae3c:	orr	lr, lr, r9, lsr #9
   2ae40:	str	lr, [r4]
   2ae44:	add	lr, sp, #4736	; 0x1280
   2ae48:	mov	r2, r6
   2ae4c:	mov	r3, r7
   2ae50:	lsr	ip, fp, #28
   2ae54:	mov	r6, r8
   2ae58:	mov	r7, r9
   2ae5c:	add	lr, lr, #20
   2ae60:	lsl	r5, sl, #30
   2ae64:	orr	ip, ip, sl, lsl #4
   2ae68:	and	r6, r6, r0
   2ae6c:	and	r7, r7, r1
   2ae70:	mov	r0, r6
   2ae74:	mov	r1, r7
   2ae78:	str	ip, [lr]
   2ae7c:	ldrd	r6, [sp, #208]	; 0xd0
   2ae80:	orr	ip, r5, fp, lsr #2
   2ae84:	add	r5, sp, #4736	; 0x1280
   2ae88:	add	r5, r5, #24
   2ae8c:	lsl	r4, fp, #25
   2ae90:	adds	r6, r6, r2
   2ae94:	str	ip, [r5]
   2ae98:	orr	ip, r4, sl, lsr #7
   2ae9c:	add	r4, sp, #4736	; 0x1280
   2aea0:	adc	r7, r7, r3
   2aea4:	add	r4, r4, #36	; 0x24
   2aea8:	mov	r2, r6
   2aeac:	mov	r3, r7
   2aeb0:	ldrd	r6, [sp, #152]	; 0x98
   2aeb4:	str	ip, [r4]
   2aeb8:	add	r4, sp, #4672	; 0x1240
   2aebc:	add	r4, r4, #56	; 0x38
   2aec0:	eor	r6, r6, r0
   2aec4:	eor	r7, r7, r1
   2aec8:	mov	r0, r6
   2aecc:	mov	r1, r7
   2aed0:	ldrd	r6, [r4]
   2aed4:	add	r4, sp, #4736	; 0x1280
   2aed8:	ldrd	r8, [sp, #160]	; 0xa0
   2aedc:	ldrd	r4, [r4]
   2aee0:	adds	r2, r2, r0
   2aee4:	lsr	lr, r8, #1
   2aee8:	eor	r6, r6, r4
   2aeec:	mov	r4, r8
   2aef0:	add	r8, sp, #4736	; 0x1280
   2aef4:	add	r8, r8, #40	; 0x28
   2aef8:	orr	lr, lr, r9, lsl #31
   2aefc:	str	lr, [r8]
   2af00:	add	r8, sp, #4736	; 0x1280
   2af04:	adc	r3, r3, r1
   2af08:	lsr	lr, r4, #8
   2af0c:	add	r8, r8, #48	; 0x30
   2af10:	add	r1, sp, #4736	; 0x1280
   2af14:	orr	lr, lr, r9, lsl #24
   2af18:	add	r1, r1, #8
   2af1c:	str	lr, [r8]
   2af20:	lsr	lr, r4, #7
   2af24:	str	lr, [sp, #776]	; 0x308
   2af28:	ldrd	r0, [r1]
   2af2c:	eor	r7, r7, r5
   2af30:	add	lr, sp, #4736	; 0x1280
   2af34:	eor	r0, r0, r6
   2af38:	eor	r1, r1, r7
   2af3c:	lsl	ip, sl, #25
   2af40:	add	lr, lr, #32
   2af44:	orr	ip, ip, fp, lsr #7
   2af48:	str	ip, [lr]
   2af4c:	strd	r0, [sp, #64]	; 0x40
   2af50:	add	lr, sp, #4736	; 0x1280
   2af54:	add	r1, sp, #4736	; 0x1280
   2af58:	add	lr, lr, #24
   2af5c:	add	r1, r1, #16
   2af60:	ldrd	r6, [lr]
   2af64:	ldrd	r0, [r1]
   2af68:	ldrd	r8, [sp, #88]	; 0x58
   2af6c:	ldr	ip, [sp, #164]	; 0xa4
   2af70:	eor	r0, r0, r6
   2af74:	eor	r1, r1, r7
   2af78:	ldrd	r6, [sp, #216]	; 0xd8
   2af7c:	orr	r4, r8, sl
   2af80:	orr	r5, r9, fp
   2af84:	and	r6, r6, r4
   2af88:	and	r7, r7, r5
   2af8c:	mov	r4, r6
   2af90:	mov	r5, r7
   2af94:	ldrd	r6, [sp, #160]	; 0xa0
   2af98:	add	lr, sp, #4736	; 0x1280
   2af9c:	add	lr, lr, #44	; 0x2c
   2afa0:	lsr	ip, ip, #1
   2afa4:	orr	ip, ip, r6, lsl #31
   2afa8:	str	ip, [lr]
   2afac:	add	lr, sp, #4736	; 0x1280
   2afb0:	lsr	ip, r7, #8
   2afb4:	add	lr, lr, #52	; 0x34
   2afb8:	orr	ip, ip, r6, lsl #24
   2afbc:	str	ip, [lr]
   2afc0:	ldr	ip, [sp, #776]	; 0x308
   2afc4:	orr	ip, ip, r7, lsl #25
   2afc8:	ldrd	r6, [sp, #72]	; 0x48
   2afcc:	str	ip, [sp, #776]	; 0x308
   2afd0:	lsr	lr, r6, #6
   2afd4:	lsr	ip, r6, #19
   2afd8:	ldrd	r6, [sp, #64]	; 0x40
   2afdc:	str	lr, [sp, #784]	; 0x310
   2afe0:	add	lr, sp, #4736	; 0x1280
   2afe4:	add	lr, lr, #32
   2afe8:	adds	r6, r6, r2
   2afec:	adc	r7, r7, r3
   2aff0:	mov	r2, r8
   2aff4:	mov	r3, r9
   2aff8:	ldrd	r8, [lr]
   2affc:	and	r2, r2, sl
   2b000:	orr	r4, r4, r2
   2b004:	eor	r8, r8, r0
   2b008:	eor	r9, r9, r1
   2b00c:	mov	r0, r8
   2b010:	mov	r1, r9
   2b014:	ldrd	r8, [sp, #72]	; 0x48
   2b018:	add	r2, sp, #4736	; 0x1280
   2b01c:	add	r2, r2, #56	; 0x38
   2b020:	orr	ip, ip, r9, lsl #13
   2b024:	str	ip, [r2]
   2b028:	and	r3, r3, fp
   2b02c:	add	r2, sp, #4800	; 0x12c0
   2b030:	orr	r5, r5, r3
   2b034:	add	r2, r2, #4
   2b038:	lsl	r3, r9, #3
   2b03c:	orr	r3, r3, r8, lsr #29
   2b040:	str	r3, [r2]
   2b044:	ldr	r3, [sp, #164]	; 0xa4
   2b048:	ldr	ip, [sp, #784]	; 0x310
   2b04c:	lsr	r2, r9, #19
   2b050:	lsr	r3, r3, #7
   2b054:	str	r3, [sp, #780]	; 0x30c
   2b058:	orr	ip, ip, r9, lsl #26
   2b05c:	lsl	r3, r8, #3
   2b060:	ldrd	r8, [sp, #136]	; 0x88
   2b064:	str	ip, [sp, #784]	; 0x310
   2b068:	add	ip, sp, #4736	; 0x1280
   2b06c:	adds	r8, r8, r6
   2b070:	adc	r9, r9, r7
   2b074:	add	ip, ip, #40	; 0x28
   2b078:	strd	r8, [sp, #176]	; 0xb0
   2b07c:	ldrd	r8, [ip]
   2b080:	add	ip, sp, #4736	; 0x1280
   2b084:	add	ip, ip, #48	; 0x30
   2b088:	adds	r0, r0, r4
   2b08c:	adc	r1, r1, r5
   2b090:	ldrd	r4, [ip]
   2b094:	eor	r8, r8, r4
   2b098:	eor	r9, r9, r5
   2b09c:	ldrd	r4, [sp, #72]	; 0x48
   2b0a0:	orr	ip, r2, r4, lsl #13
   2b0a4:	add	r2, sp, #4736	; 0x1280
   2b0a8:	add	r2, r2, #60	; 0x3c
   2b0ac:	str	ip, [r2]
   2b0b0:	add	r2, sp, #4800	; 0x12c0
   2b0b4:	orr	r3, r3, r5, lsr #29
   2b0b8:	str	r3, [r2]
   2b0bc:	add	r3, sp, #776	; 0x308
   2b0c0:	ldrd	r2, [r3]
   2b0c4:	eor	r2, r2, r8
   2b0c8:	eor	r3, r3, r9
   2b0cc:	mov	r8, r2
   2b0d0:	mov	r9, r3
   2b0d4:	adds	r2, r0, r6
   2b0d8:	lsr	r3, r5, #6
   2b0dc:	str	r3, [sp, #788]	; 0x314
   2b0e0:	adc	r3, r1, r7
   2b0e4:	ldrd	r4, [sp, #96]	; 0x60
   2b0e8:	strd	r2, [sp, #64]	; 0x40
   2b0ec:	add	r3, sp, #4736	; 0x1280
   2b0f0:	add	r3, r3, #56	; 0x38
   2b0f4:	adds	r4, r4, r8
   2b0f8:	ldrd	r0, [r3]
   2b0fc:	add	r3, sp, #4800	; 0x12c0
   2b100:	mov	r8, r4
   2b104:	add	r4, sp, #784	; 0x310
   2b108:	ldrd	r2, [r3]
   2b10c:	adc	r5, r5, r9
   2b110:	mov	r9, r5
   2b114:	ldrd	r4, [r4]
   2b118:	eor	r0, r0, r2
   2b11c:	eor	r1, r1, r3
   2b120:	eor	r4, r4, r0
   2b124:	eor	r5, r5, r1
   2b128:	mov	r0, r4
   2b12c:	mov	r1, r5
   2b130:	ldrd	r4, [sp, #112]	; 0x70
   2b134:	ldrd	r6, [sp, #176]	; 0xb0
   2b138:	add	r3, pc, #40	; 0x28
   2b13c:	ldrd	r2, [r3]
   2b140:	adds	r4, r4, r8
   2b144:	mov	r8, r4
   2b148:	add	r4, sp, #4800	; 0x12c0
   2b14c:	lsr	lr, r6, #14
   2b150:	add	r4, r4, #8
   2b154:	orr	lr, lr, r7, lsl #18
   2b158:	b	2b170 <__assert_fail@plt+0x19e84>
   2b15c:	nop			; (mov r0, r0)
   2b160:	cmppl	r1, r3, asr fp
   2b164:	cdpne	12, 3, cr6, cr7, cr8, {0}
   2b168:	svcle	0x008eeb99
   2b16c:	strbcs	r7, [r8, -ip, asr #14]
   2b170:	str	lr, [r4]
   2b174:	add	r4, sp, #4800	; 0x12c0
   2b178:	adc	r5, r5, r9
   2b17c:	lsr	ip, r6, #18
   2b180:	add	r4, r4, #16
   2b184:	adds	r6, r8, r0
   2b188:	mov	r9, r5
   2b18c:	orr	ip, ip, r7, lsl #14
   2b190:	str	ip, [r4]
   2b194:	lsr	lr, r7, #14
   2b198:	lsr	r4, r7, #18
   2b19c:	adc	r7, r9, r1
   2b1a0:	ldrd	r8, [sp, #176]	; 0xb0
   2b1a4:	strd	r6, [sp, #136]	; 0x88
   2b1a8:	ldrd	r6, [sp, #56]	; 0x38
   2b1ac:	lsl	r1, r9, #23
   2b1b0:	str	r1, [sp, #200]	; 0xc8
   2b1b4:	ldrd	r0, [sp, #64]	; 0x40
   2b1b8:	orr	lr, lr, r8, lsl #18
   2b1bc:	lsl	ip, r1, #30
   2b1c0:	add	r1, sp, #4800	; 0x12c0
   2b1c4:	add	r1, r1, #12
   2b1c8:	str	lr, [r1]
   2b1cc:	orr	lr, r4, r8, lsl #14
   2b1d0:	add	r1, sp, #4800	; 0x12c0
   2b1d4:	ldrd	r8, [sp, #184]	; 0xb8
   2b1d8:	add	r1, r1, #20
   2b1dc:	lsr	r5, r0, #28
   2b1e0:	str	lr, [r1]
   2b1e4:	mov	r0, r8
   2b1e8:	mov	r1, r9
   2b1ec:	eor	r0, r0, r6
   2b1f0:	eor	r1, r1, r7
   2b1f4:	ldrd	r6, [sp, #176]	; 0xb0
   2b1f8:	strd	r0, [sp, #96]	; 0x60
   2b1fc:	ldr	r4, [sp, #200]	; 0xc8
   2b200:	add	r1, sp, #4800	; 0x12c0
   2b204:	add	r1, r1, #28
   2b208:	orr	lr, r4, r6, lsr #9
   2b20c:	str	lr, [r1]
   2b210:	ldrd	r0, [sp, #64]	; 0x40
   2b214:	add	r4, sp, #4800	; 0x12c0
   2b218:	add	r4, r4, #32
   2b21c:	orr	r5, r5, r1, lsl #4
   2b220:	str	r5, [r4]
   2b224:	mov	r5, r1
   2b228:	add	r1, sp, #4800	; 0x12c0
   2b22c:	add	r1, r1, #44	; 0x2c
   2b230:	orr	ip, ip, r0, lsr #2
   2b234:	str	ip, [r1]
   2b238:	lsr	ip, r5, #28
   2b23c:	ldrd	r4, [sp, #136]	; 0x88
   2b240:	ldrd	r0, [sp, #96]	; 0x60
   2b244:	lsl	lr, r6, #23
   2b248:	adds	r4, r4, r2
   2b24c:	mov	r2, r4
   2b250:	ldr	r4, [sp, #128]	; 0x80
   2b254:	and	r0, r0, r6
   2b258:	and	r1, r1, r7
   2b25c:	lsr	r4, r4, #7
   2b260:	str	r4, [sp, #792]	; 0x318
   2b264:	add	r4, sp, #4800	; 0x12c0
   2b268:	add	r4, r4, #24
   2b26c:	orr	lr, lr, r7, lsr #9
   2b270:	ldrd	r6, [sp, #64]	; 0x40
   2b274:	str	lr, [r4]
   2b278:	add	lr, sp, #4800	; 0x12c0
   2b27c:	adc	r5, r5, r3
   2b280:	add	lr, lr, #36	; 0x24
   2b284:	mov	r3, r5
   2b288:	orr	ip, ip, r6, lsl #4
   2b28c:	ldr	r5, [sp, #64]	; 0x40
   2b290:	str	ip, [lr]
   2b294:	ldr	ip, [sp, #128]	; 0x80
   2b298:	lsl	r5, r5, #30
   2b29c:	lsl	r4, r7, #25
   2b2a0:	lsr	lr, ip, #1
   2b2a4:	orr	ip, r5, r7, lsr #2
   2b2a8:	add	r5, sp, #4800	; 0x12c0
   2b2ac:	add	r5, r5, #40	; 0x28
   2b2b0:	str	ip, [r5]
   2b2b4:	orr	ip, r4, r6, lsr #7
   2b2b8:	add	r4, sp, #4800	; 0x12c0
   2b2bc:	add	r4, r4, #52	; 0x34
   2b2c0:	mov	r5, r7
   2b2c4:	str	ip, [r4]
   2b2c8:	mov	r4, r6
   2b2cc:	lsl	ip, r6, #25
   2b2d0:	ldrd	r6, [sp, #152]	; 0x98
   2b2d4:	str	ip, [sp, #64]	; 0x40
   2b2d8:	add	ip, sp, #4800	; 0x12c0
   2b2dc:	adds	r6, r6, r2
   2b2e0:	add	ip, ip, #8
   2b2e4:	adc	r7, r7, r3
   2b2e8:	mov	r2, r6
   2b2ec:	mov	r3, r7
   2b2f0:	mov	r6, r8
   2b2f4:	mov	r7, r9
   2b2f8:	ldrd	r8, [ip]
   2b2fc:	add	ip, sp, #4800	; 0x12c0
   2b300:	add	ip, ip, #16
   2b304:	eor	r6, r6, r0
   2b308:	eor	r7, r7, r1
   2b30c:	mov	r0, r6
   2b310:	mov	r1, r7
   2b314:	ldrd	r6, [ip]
   2b318:	add	ip, sp, #4800	; 0x12c0
   2b31c:	add	ip, ip, #56	; 0x38
   2b320:	eor	r8, r8, r6
   2b324:	eor	r9, r9, r7
   2b328:	adds	r6, r2, r0
   2b32c:	strd	r8, [sp, #96]	; 0x60
   2b330:	ldrd	r8, [sp, #128]	; 0x80
   2b334:	orr	lr, lr, r9, lsl #31
   2b338:	str	lr, [ip]
   2b33c:	lsr	lr, r8, #8
   2b340:	orr	ip, lr, r9, lsl #24
   2b344:	add	lr, sp, #4864	; 0x1300
   2b348:	mov	r7, r9
   2b34c:	str	ip, [lr]
   2b350:	mov	r9, r5
   2b354:	ldr	lr, [sp, #64]	; 0x40
   2b358:	mov	r8, r4
   2b35c:	orr	ip, lr, r9, lsr #7
   2b360:	add	lr, sp, #4800	; 0x12c0
   2b364:	add	lr, lr, #48	; 0x30
   2b368:	str	ip, [lr]
   2b36c:	lsr	ip, r7, #1
   2b370:	adc	r7, r3, r1
   2b374:	add	r3, sp, #4800	; 0x12c0
   2b378:	add	r3, r3, #24
   2b37c:	ldrd	r0, [r3]
   2b380:	ldrd	r2, [sp, #96]	; 0x60
   2b384:	strd	r6, [sp, #64]	; 0x40
   2b388:	orr	r4, r4, sl
   2b38c:	eor	r3, r3, r1
   2b390:	mov	r7, r3
   2b394:	add	r3, sp, #4800	; 0x12c0
   2b398:	add	r3, r3, #32
   2b39c:	eor	r2, r2, r0
   2b3a0:	ldrd	r0, [r3]
   2b3a4:	add	r3, sp, #4800	; 0x12c0
   2b3a8:	add	r3, r3, #40	; 0x28
   2b3ac:	mov	r6, r2
   2b3b0:	ldrd	r2, [r3]
   2b3b4:	orr	r5, r5, fp
   2b3b8:	add	lr, sp, #4800	; 0x12c0
   2b3bc:	eor	r0, r0, r2
   2b3c0:	eor	r1, r1, r3
   2b3c4:	ldrd	r2, [sp, #88]	; 0x58
   2b3c8:	add	lr, lr, #60	; 0x3c
   2b3cc:	and	r2, r2, r4
   2b3d0:	and	r3, r3, r5
   2b3d4:	mov	r4, r2
   2b3d8:	mov	r5, r3
   2b3dc:	ldrd	r2, [sp, #128]	; 0x80
   2b3e0:	orr	ip, ip, r2, lsl #31
   2b3e4:	str	ip, [lr]
   2b3e8:	add	lr, sp, #4864	; 0x1300
   2b3ec:	lsr	ip, r3, #8
   2b3f0:	add	lr, lr, #4
   2b3f4:	orr	ip, ip, r2, lsl #24
   2b3f8:	str	ip, [lr]
   2b3fc:	ldr	ip, [sp, #792]	; 0x318
   2b400:	add	lr, sp, #4800	; 0x12c0
   2b404:	orr	r3, ip, r3, lsl #25
   2b408:	str	r3, [sp, #792]	; 0x318
   2b40c:	ldrd	r2, [sp, #120]	; 0x78
   2b410:	add	lr, lr, #48	; 0x30
   2b414:	lsr	r3, r2, #6
   2b418:	lsr	ip, r2, #19
   2b41c:	str	r3, [sp, #800]	; 0x320
   2b420:	ldrd	r2, [sp, #64]	; 0x40
   2b424:	strd	r8, [sp, #64]	; 0x40
   2b428:	adds	r2, r2, r6
   2b42c:	adc	r3, r3, r7
   2b430:	mov	r6, r2
   2b434:	mov	r7, r3
   2b438:	mov	r2, r8
   2b43c:	mov	r3, r9
   2b440:	ldrd	r8, [lr]
   2b444:	and	r2, r2, sl
   2b448:	orr	r4, r4, r2
   2b44c:	eor	r8, r8, r0
   2b450:	eor	r9, r9, r1
   2b454:	mov	r0, r8
   2b458:	mov	r1, r9
   2b45c:	ldrd	r8, [sp, #120]	; 0x78
   2b460:	add	r2, sp, #4864	; 0x1300
   2b464:	add	r2, r2, #8
   2b468:	orr	ip, ip, r9, lsl #13
   2b46c:	str	ip, [r2]
   2b470:	and	r3, r3, fp
   2b474:	add	r2, sp, #4864	; 0x1300
   2b478:	orr	r5, r5, r3
   2b47c:	add	r2, r2, #20
   2b480:	lsl	r3, r9, #3
   2b484:	orr	r3, r3, r8, lsr #29
   2b488:	str	r3, [r2]
   2b48c:	ldr	r3, [sp, #132]	; 0x84
   2b490:	ldr	ip, [sp, #800]	; 0x320
   2b494:	lsr	r2, r9, #19
   2b498:	lsr	r3, r3, #7
   2b49c:	str	r3, [sp, #796]	; 0x31c
   2b4a0:	orr	ip, ip, r9, lsl #26
   2b4a4:	lsl	r3, r8, #3
   2b4a8:	ldrd	r8, [sp, #216]	; 0xd8
   2b4ac:	str	ip, [sp, #800]	; 0x320
   2b4b0:	add	ip, sp, #4800	; 0x12c0
   2b4b4:	adds	r8, r8, r6
   2b4b8:	adc	r9, r9, r7
   2b4bc:	add	ip, ip, #56	; 0x38
   2b4c0:	strd	r8, [sp, #208]	; 0xd0
   2b4c4:	ldrd	r8, [ip]
   2b4c8:	add	ip, sp, #4864	; 0x1300
   2b4cc:	adds	r0, r0, r4
   2b4d0:	adc	r1, r1, r5
   2b4d4:	ldrd	r4, [ip]
   2b4d8:	eor	r8, r8, r4
   2b4dc:	eor	r9, r9, r5
   2b4e0:	ldrd	r4, [sp, #120]	; 0x78
   2b4e4:	orr	ip, r2, r4, lsl #13
   2b4e8:	add	r2, sp, #4864	; 0x1300
   2b4ec:	add	r2, r2, #12
   2b4f0:	str	ip, [r2]
   2b4f4:	add	r2, sp, #4864	; 0x1300
   2b4f8:	add	r2, r2, #16
   2b4fc:	orr	r3, r3, r5, lsr #29
   2b500:	str	r3, [r2]
   2b504:	add	r3, sp, #792	; 0x318
   2b508:	adds	r4, r0, r6
   2b50c:	ldrd	r2, [r3]
   2b510:	add	r6, sp, #800	; 0x320
   2b514:	eor	r3, r3, r9
   2b518:	mov	r9, r3
   2b51c:	lsr	r3, r5, #6
   2b520:	str	r3, [sp, #804]	; 0x324
   2b524:	add	r3, sp, #4864	; 0x1300
   2b528:	add	r3, r3, #8
   2b52c:	adc	r5, r1, r7
   2b530:	ldrd	r0, [r3]
   2b534:	add	r3, sp, #4864	; 0x1300
   2b538:	add	r3, r3, #16
   2b53c:	eor	r2, r2, r8
   2b540:	mov	r8, r2
   2b544:	ldrd	r2, [r3]
   2b548:	ldrd	r6, [r6]
   2b54c:	strd	r4, [sp, #96]	; 0x60
   2b550:	ldrd	r4, [sp, #160]	; 0xa0
   2b554:	eor	r0, r0, r2
   2b558:	eor	r1, r1, r3
   2b55c:	eor	r6, r6, r0
   2b560:	eor	r7, r7, r1
   2b564:	adds	r4, r4, r8
   2b568:	mov	r0, r6
   2b56c:	mov	r1, r7
   2b570:	ldrd	r6, [sp, #24]
   2b574:	adc	r5, r5, r9
   2b578:	mov	r8, r4
   2b57c:	mov	r9, r5
   2b580:	ldrd	r4, [sp, #208]	; 0xd0
   2b584:	adds	r6, r6, r8
   2b588:	mov	r8, r6
   2b58c:	add	r6, sp, #4864	; 0x1300
   2b590:	lsr	lr, r4, #14
   2b594:	add	r6, r6, #24
   2b598:	orr	lr, lr, r5, lsl #18
   2b59c:	str	lr, [r6]
   2b5a0:	add	r6, sp, #4864	; 0x1300
   2b5a4:	lsr	ip, r4, #18
   2b5a8:	add	r6, r6, #32
   2b5ac:	adc	r7, r7, r9
   2b5b0:	orr	ip, ip, r5, lsl #14
   2b5b4:	str	ip, [r6]
   2b5b8:	mov	r9, r7
   2b5bc:	adds	r6, r8, r0
   2b5c0:	adc	r7, r9, r1
   2b5c4:	ldrd	r0, [sp, #208]	; 0xd0
   2b5c8:	ldrd	r8, [sp, #96]	; 0x60
   2b5cc:	strd	r6, [sp, #200]	; 0xc8
   2b5d0:	add	r6, sp, #4864	; 0x1300
   2b5d4:	lsl	ip, r1, #23
   2b5d8:	lsr	lr, r5, #14
   2b5dc:	add	r6, r6, #28
   2b5e0:	lsr	r4, r5, #18
   2b5e4:	str	ip, [sp, #152]	; 0x98
   2b5e8:	orr	lr, lr, r0, lsl #18
   2b5ec:	lsl	ip, r9, #30
   2b5f0:	mov	r9, r1
   2b5f4:	add	r1, sp, #4864	; 0x1300
   2b5f8:	str	lr, [r6]
   2b5fc:	lsr	r5, r8, #28
   2b600:	orr	lr, r4, r0, lsl #14
   2b604:	mov	r8, r0
   2b608:	ldr	r4, [sp, #152]	; 0x98
   2b60c:	add	r1, r1, #36	; 0x24
   2b610:	ldrd	r6, [sp, #56]	; 0x38
   2b614:	str	lr, [r1]
   2b618:	orr	lr, r4, r8, lsr #9
   2b61c:	ldrd	r0, [sp, #176]	; 0xb0
   2b620:	add	r4, sp, #4864	; 0x1300
   2b624:	add	r4, r4, #44	; 0x2c
   2b628:	eor	r0, r0, r6
   2b62c:	eor	r1, r1, r7
   2b630:	str	lr, [r4]
   2b634:	mov	r7, r9
   2b638:	mov	r6, r8
   2b63c:	lsl	lr, r8, #23
   2b640:	ldrd	r8, [sp, #96]	; 0x60
   2b644:	add	r4, sp, #4864	; 0x1300
   2b648:	add	r4, r4, #48	; 0x30
   2b64c:	orr	r5, r5, r9, lsl #4
   2b650:	str	r5, [r4]
   2b654:	orr	ip, ip, r8, lsr #2
   2b658:	mov	r4, r8
   2b65c:	add	r8, sp, #4864	; 0x1300
   2b660:	mov	r5, r9
   2b664:	add	r8, r8, #60	; 0x3c
   2b668:	add	r3, pc, #880	; 0x370
   2b66c:	ldrd	r2, [r3]
   2b670:	str	ip, [r8]
   2b674:	mov	r9, r5
   2b678:	mov	r8, r4
   2b67c:	lsr	ip, r5, #28
   2b680:	ldrd	r4, [sp, #200]	; 0xc8
   2b684:	orr	lr, lr, r7, lsr #9
   2b688:	orr	ip, ip, r8, lsl #4
   2b68c:	adds	r4, r4, r2
   2b690:	mov	r2, r4
   2b694:	mov	r4, r6
   2b698:	and	r4, r4, r0
   2b69c:	mov	r0, r4
   2b6a0:	add	r4, sp, #4864	; 0x1300
   2b6a4:	add	r4, r4, #40	; 0x28
   2b6a8:	adc	r5, r5, r3
   2b6ac:	str	lr, [r4]
   2b6b0:	mov	r3, r5
   2b6b4:	add	lr, sp, #4864	; 0x1300
   2b6b8:	mov	r5, r7
   2b6bc:	and	r5, r5, r1
   2b6c0:	mov	r7, r9
   2b6c4:	add	lr, lr, #52	; 0x34
   2b6c8:	mov	r1, r5
   2b6cc:	lsl	r5, r8, #30
   2b6d0:	str	ip, [lr]
   2b6d4:	orr	ip, r5, r7, lsr #2
   2b6d8:	add	r5, sp, #4864	; 0x1300
   2b6dc:	mov	r6, r8
   2b6e0:	add	r5, r5, #56	; 0x38
   2b6e4:	lsl	r4, r9, #25
   2b6e8:	str	ip, [r5]
   2b6ec:	orr	ip, r4, r6, lsr #7
   2b6f0:	add	r4, sp, #4928	; 0x1340
   2b6f4:	add	r4, r4, #4
   2b6f8:	str	ip, [r4]
   2b6fc:	lsl	ip, r6, #25
   2b700:	ldrd	r6, [sp, #184]	; 0xb8
   2b704:	add	r4, sp, #4864	; 0x1300
   2b708:	add	r4, r4, #24
   2b70c:	adds	r6, r6, r2
   2b710:	adc	r7, r7, r3
   2b714:	mov	r2, r6
   2b718:	mov	r3, r7
   2b71c:	ldrd	r6, [sp, #56]	; 0x38
   2b720:	ldrd	r8, [sp, #104]	; 0x68
   2b724:	eor	r6, r6, r0
   2b728:	eor	r7, r7, r1
   2b72c:	mov	r0, r6
   2b730:	mov	r1, r7
   2b734:	ldrd	r6, [r4]
   2b738:	add	r4, sp, #4864	; 0x1300
   2b73c:	add	r4, r4, #32
   2b740:	lsr	lr, r8, #1
   2b744:	ldrd	r4, [r4]
   2b748:	orr	lr, lr, r9, lsl #31
   2b74c:	eor	r6, r6, r4
   2b750:	eor	r7, r7, r5
   2b754:	add	r4, sp, #4928	; 0x1340
   2b758:	add	r4, r4, #8
   2b75c:	strd	r6, [sp, #152]	; 0x98
   2b760:	add	r6, sp, #4928	; 0x1340
   2b764:	str	lr, [r4]
   2b768:	add	r6, r6, #16
   2b76c:	lsr	lr, r8, #8
   2b770:	orr	lr, lr, r9, lsl #24
   2b774:	str	lr, [r6]
   2b778:	ldrd	r6, [sp, #96]	; 0x60
   2b77c:	lsr	lr, r8, #7
   2b780:	ldrd	r8, [sp, #64]	; 0x40
   2b784:	orr	ip, ip, r7, lsr #7
   2b788:	str	lr, [sp, #808]	; 0x328
   2b78c:	orr	r4, r8, r6
   2b790:	adds	r6, r2, r0
   2b794:	orr	r5, r9, r7
   2b798:	adc	r7, r3, r1
   2b79c:	add	r3, sp, #4864	; 0x1300
   2b7a0:	add	r3, r3, #40	; 0x28
   2b7a4:	ldrd	r0, [r3]
   2b7a8:	ldrd	r2, [sp, #152]	; 0x98
   2b7ac:	strd	r6, [sp, #64]	; 0x40
   2b7b0:	add	lr, sp, #4928	; 0x1340
   2b7b4:	eor	r3, r3, r1
   2b7b8:	mov	r7, r3
   2b7bc:	add	r3, sp, #4864	; 0x1300
   2b7c0:	add	r3, r3, #48	; 0x30
   2b7c4:	eor	r2, r2, r0
   2b7c8:	ldrd	r0, [r3]
   2b7cc:	add	r3, sp, #4864	; 0x1300
   2b7d0:	add	r3, r3, #56	; 0x38
   2b7d4:	mov	r6, r2
   2b7d8:	ldrd	r2, [r3]
   2b7dc:	str	ip, [lr]
   2b7e0:	ldr	ip, [sp, #108]	; 0x6c
   2b7e4:	eor	r1, r1, r3
   2b7e8:	ldr	r3, [sp, #104]	; 0x68
   2b7ec:	eor	r0, r0, r2
   2b7f0:	add	r2, sp, #4928	; 0x1340
   2b7f4:	lsr	ip, ip, #1
   2b7f8:	add	r2, r2, #12
   2b7fc:	orr	r3, ip, r3, lsl #31
   2b800:	str	r3, [r2]
   2b804:	ldr	r3, [sp, #108]	; 0x6c
   2b808:	add	r2, sp, #4928	; 0x1340
   2b80c:	add	r2, r2, #20
   2b810:	lsr	ip, r3, #8
   2b814:	ldr	r3, [sp, #104]	; 0x68
   2b818:	and	r4, r4, sl
   2b81c:	and	r5, r5, fp
   2b820:	orr	r3, ip, r3, lsl #24
   2b824:	str	r3, [r2]
   2b828:	ldr	r3, [sp, #808]	; 0x328
   2b82c:	ldr	ip, [sp, #108]	; 0x6c
   2b830:	orr	r3, r3, ip, lsl #25
   2b834:	str	r3, [sp, #808]	; 0x328
   2b838:	ldr	r3, [sp, #136]	; 0x88
   2b83c:	lsr	ip, r3, #19
   2b840:	lsr	r3, r3, #6
   2b844:	str	r3, [sp, #816]	; 0x330
   2b848:	ldrd	r2, [sp, #64]	; 0x40
   2b84c:	strd	r8, [sp, #64]	; 0x40
   2b850:	adds	r2, r2, r6
   2b854:	adc	r3, r3, r7
   2b858:	mov	r6, r2
   2b85c:	mov	r7, r3
   2b860:	mov	r2, r8
   2b864:	mov	r3, r9
   2b868:	ldrd	r8, [sp, #96]	; 0x60
   2b86c:	and	r2, r2, r8
   2b870:	and	r3, r3, r9
   2b874:	ldrd	r8, [lr]
   2b878:	orr	r4, r4, r2
   2b87c:	add	r2, sp, #4928	; 0x1340
   2b880:	eor	r8, r8, r0
   2b884:	eor	r9, r9, r1
   2b888:	mov	r0, r8
   2b88c:	mov	r1, r9
   2b890:	ldrd	r8, [sp, #136]	; 0x88
   2b894:	add	r2, r2, #24
   2b898:	orr	r5, r5, r3
   2b89c:	orr	ip, ip, r9, lsl #13
   2b8a0:	str	ip, [r2]
   2b8a4:	add	r2, sp, #4928	; 0x1340
   2b8a8:	lsl	r3, r9, #3
   2b8ac:	add	r2, r2, #36	; 0x24
   2b8b0:	orr	r3, r3, r8, lsr #29
   2b8b4:	str	r3, [r2]
   2b8b8:	ldr	r3, [sp, #108]	; 0x6c
   2b8bc:	ldr	ip, [sp, #816]	; 0x330
   2b8c0:	lsr	r2, r9, #19
   2b8c4:	lsr	r3, r3, #7
   2b8c8:	str	r3, [sp, #812]	; 0x32c
   2b8cc:	orr	ip, ip, r9, lsl #26
   2b8d0:	lsl	r3, r8, #3
   2b8d4:	ldrd	r8, [sp, #88]	; 0x58
   2b8d8:	str	ip, [sp, #816]	; 0x330
   2b8dc:	add	ip, sp, #4928	; 0x1340
   2b8e0:	adds	r8, r8, r6
   2b8e4:	adc	r9, r9, r7
   2b8e8:	add	ip, ip, #8
   2b8ec:	strd	r8, [sp, #184]	; 0xb8
   2b8f0:	ldrd	r8, [ip]
   2b8f4:	add	ip, sp, #4928	; 0x1340
   2b8f8:	add	ip, ip, #16
   2b8fc:	adds	r0, r0, r4
   2b900:	adc	r1, r1, r5
   2b904:	ldrd	r4, [ip]
   2b908:	eor	r8, r8, r4
   2b90c:	eor	r9, r9, r5
   2b910:	ldrd	r4, [sp, #136]	; 0x88
   2b914:	orr	ip, r2, r4, lsl #13
   2b918:	add	r2, sp, #4928	; 0x1340
   2b91c:	add	r2, r2, #28
   2b920:	str	ip, [r2]
   2b924:	add	r2, sp, #4928	; 0x1340
   2b928:	add	r2, r2, #32
   2b92c:	orr	r3, r3, r5, lsr #29
   2b930:	str	r3, [r2]
   2b934:	add	r3, sp, #808	; 0x328
   2b938:	adds	r4, r0, r6
   2b93c:	ldrd	r2, [r3]
   2b940:	eor	r3, r3, r9
   2b944:	mov	r9, r3
   2b948:	lsr	r3, r5, #6
   2b94c:	str	r3, [sp, #820]	; 0x334
   2b950:	add	r3, sp, #4928	; 0x1340
   2b954:	add	r3, r3, #24
   2b958:	adc	r5, r1, r7
   2b95c:	ldrd	r0, [r3]
   2b960:	add	r3, sp, #4928	; 0x1340
   2b964:	add	r3, r3, #32
   2b968:	eor	r2, r2, r8
   2b96c:	mov	r8, r2
   2b970:	ldrd	r2, [r3]
   2b974:	ldrd	r6, [sp, #184]	; 0xb8
   2b978:	strd	r4, [sp, #88]	; 0x58
   2b97c:	eor	r0, r0, r2
   2b980:	eor	r1, r1, r3
   2b984:	ldrd	r2, [sp, #128]	; 0x80
   2b988:	lsr	lr, r6, #14
   2b98c:	lsr	ip, r6, #18
   2b990:	adds	r2, r2, r8
   2b994:	adc	r3, r3, r9
   2b998:	mov	r9, r3
   2b99c:	add	r3, sp, #816	; 0x330
   2b9a0:	mov	r8, r2
   2b9a4:	ldrd	r2, [r3]
   2b9a8:	lsr	r4, r7, #18
   2b9ac:	eor	r2, r2, r0
   2b9b0:	eor	r3, r3, r1
   2b9b4:	mov	r0, r2
   2b9b8:	mov	r1, r3
   2b9bc:	ldrd	r2, [sp, #48]	; 0x30
   2b9c0:	adds	r2, r2, r8
   2b9c4:	mov	r8, r2
   2b9c8:	add	r2, sp, #4928	; 0x1340
   2b9cc:	adc	r3, r3, r9
   2b9d0:	add	r2, r2, #40	; 0x28
   2b9d4:	mov	r9, r3
   2b9d8:	orr	r3, lr, r7, lsl #18
   2b9dc:	b	2b9f0 <__assert_fail@plt+0x1a704>
   2b9e0:	orrs	r4, fp, r8, lsr #17
   2b9e4:	ldrtcc	fp, [r0], #3253	; 0xcb5
   2b9e8:	strbgt	r5, [r9, #2659]	; 0xa63
   2b9ec:	ldmdbcc	ip, {r0, r1, r4, r5, r7, sl, fp}
   2b9f0:	str	r3, [r2]
   2b9f4:	add	r2, sp, #4928	; 0x1340
   2b9f8:	add	r2, r2, #48	; 0x30
   2b9fc:	orr	r3, ip, r7, lsl #14
   2ba00:	str	r3, [r2]
   2ba04:	adds	r2, r8, r0
   2ba08:	adc	r3, r9, r1
   2ba0c:	mov	r0, r6
   2ba10:	strd	r2, [sp, #128]	; 0x80
   2ba14:	add	r2, sp, #4928	; 0x1340
   2ba18:	lsr	lr, r7, #14
   2ba1c:	add	r2, r2, #44	; 0x2c
   2ba20:	ldrd	r8, [sp, #88]	; 0x58
   2ba24:	orr	r3, lr, r0, lsl #18
   2ba28:	str	r3, [r2]
   2ba2c:	add	r2, sp, #4928	; 0x1340
   2ba30:	add	r2, r2, #52	; 0x34
   2ba34:	orr	r3, r4, r0, lsl #14
   2ba38:	lsr	r5, r8, #28
   2ba3c:	lsl	ip, r9, #30
   2ba40:	ldrd	r8, [sp, #176]	; 0xb0
   2ba44:	str	r3, [r2]
   2ba48:	ldrd	r2, [sp, #208]	; 0xd0
   2ba4c:	mov	r1, r9
   2ba50:	mov	r0, r8
   2ba54:	eor	r1, r1, r3
   2ba58:	ldr	r3, [sp, #184]	; 0xb8
   2ba5c:	eor	r0, r0, r2
   2ba60:	add	r2, sp, #4928	; 0x1340
   2ba64:	lsl	r6, r7, #23
   2ba68:	add	r2, r2, #60	; 0x3c
   2ba6c:	orr	r3, r6, r3, lsr #9
   2ba70:	str	r3, [r2]
   2ba74:	ldr	r3, [sp, #92]	; 0x5c
   2ba78:	add	r2, sp, #4992	; 0x1380
   2ba7c:	ldrd	r6, [sp, #184]	; 0xb8
   2ba80:	orr	r3, r5, r3, lsl #4
   2ba84:	ldrd	r4, [sp, #88]	; 0x58
   2ba88:	str	r3, [r2]
   2ba8c:	add	r2, sp, #4992	; 0x1380
   2ba90:	add	r2, r2, #12
   2ba94:	orr	r3, ip, r4, lsr #2
   2ba98:	str	r3, [r2]
   2ba9c:	lsr	ip, r5, #28
   2baa0:	ldrd	r2, [sp, #128]	; 0x80
   2baa4:	sub	r5, pc, #196	; 0xc4
   2baa8:	ldrd	r4, [r5]
   2baac:	lsl	lr, r6, #23
   2bab0:	orr	lr, lr, r7, lsr #9
   2bab4:	adds	r4, r4, r2
   2bab8:	mov	r2, r4
   2babc:	mov	r4, r6
   2bac0:	and	r4, r4, r0
   2bac4:	mov	r0, r4
   2bac8:	add	r4, sp, #4928	; 0x1340
   2bacc:	adc	r5, r5, r3
   2bad0:	add	r4, r4, #56	; 0x38
   2bad4:	mov	r3, r5
   2bad8:	mov	r5, r7
   2badc:	ldrd	r6, [sp, #88]	; 0x58
   2bae0:	str	lr, [r4]
   2bae4:	add	lr, sp, #4992	; 0x1380
   2bae8:	and	r5, r5, r1
   2baec:	add	lr, lr, #4
   2baf0:	mov	r1, r5
   2baf4:	orr	ip, ip, r6, lsl #4
   2baf8:	ldr	r5, [sp, #88]	; 0x58
   2bafc:	str	ip, [lr]
   2bb00:	ldr	ip, [sp, #168]	; 0xa8
   2bb04:	lsl	r5, r5, #30
   2bb08:	lsl	r4, r7, #25
   2bb0c:	lsr	lr, ip, #1
   2bb10:	orr	ip, r5, r7, lsr #2
   2bb14:	add	r5, sp, #4992	; 0x1380
   2bb18:	add	r5, r5, #8
   2bb1c:	str	ip, [r5]
   2bb20:	orr	ip, r4, r6, lsr #7
   2bb24:	add	r4, sp, #4992	; 0x1380
   2bb28:	add	r4, r4, #20
   2bb2c:	mov	r5, r7
   2bb30:	str	ip, [r4]
   2bb34:	mov	r4, r6
   2bb38:	lsl	ip, r6, #25
   2bb3c:	ldrd	r6, [sp, #56]	; 0x38
   2bb40:	adds	r6, r6, r2
   2bb44:	adc	r7, r7, r3
   2bb48:	mov	r2, r6
   2bb4c:	mov	r3, r7
   2bb50:	mov	r6, r8
   2bb54:	mov	r7, r9
   2bb58:	eor	r6, r6, r0
   2bb5c:	eor	r7, r7, r1
   2bb60:	add	r1, sp, #4928	; 0x1340
   2bb64:	strd	r6, [sp, #56]	; 0x38
   2bb68:	add	r6, sp, #4928	; 0x1340
   2bb6c:	add	r6, r6, #48	; 0x30
   2bb70:	add	r1, r1, #40	; 0x28
   2bb74:	ldrd	r8, [r6]
   2bb78:	ldrd	r0, [r1]
   2bb7c:	eor	r0, r0, r8
   2bb80:	eor	r1, r1, r9
   2bb84:	mov	r6, r0
   2bb88:	mov	r7, r1
   2bb8c:	ldrd	r0, [sp, #168]	; 0xa8
   2bb90:	add	r8, sp, #4992	; 0x1380
   2bb94:	add	r8, r8, #24
   2bb98:	orr	lr, lr, r1, lsl #31
   2bb9c:	str	lr, [r8]
   2bba0:	add	r8, sp, #4992	; 0x1380
   2bba4:	lsr	lr, r0, #8
   2bba8:	add	r8, r8, #32
   2bbac:	orr	lr, lr, r1, lsl #24
   2bbb0:	str	lr, [r8]
   2bbb4:	lsr	lr, r0, #7
   2bbb8:	ldrd	r0, [sp, #96]	; 0x60
   2bbbc:	mov	r9, r5
   2bbc0:	str	lr, [sp, #824]	; 0x338
   2bbc4:	orr	r1, r1, r5
   2bbc8:	mov	r5, r1
   2bbcc:	add	r1, sp, #4992	; 0x1380
   2bbd0:	add	r1, r1, #16
   2bbd4:	orr	ip, ip, r9, lsr #7
   2bbd8:	str	ip, [r1]
   2bbdc:	add	r1, sp, #4928	; 0x1340
   2bbe0:	add	r1, r1, #56	; 0x38
   2bbe4:	orr	r0, r0, r4
   2bbe8:	mov	r4, r0
   2bbec:	ldr	ip, [sp, #172]	; 0xac
   2bbf0:	ldrd	r8, [sp, #56]	; 0x38
   2bbf4:	ldrd	r0, [r1]
   2bbf8:	add	lr, sp, #4992	; 0x1380
   2bbfc:	adds	r8, r8, r2
   2bc00:	eor	r1, r1, r7
   2bc04:	mov	r7, r1
   2bc08:	add	lr, lr, #8
   2bc0c:	add	r1, sp, #4992	; 0x1380
   2bc10:	adc	r9, r9, r3
   2bc14:	eor	r0, r0, r6
   2bc18:	mov	r2, r8
   2bc1c:	mov	r3, r9
   2bc20:	mov	r6, r0
   2bc24:	ldrd	r8, [lr]
   2bc28:	ldrd	r0, [r1]
   2bc2c:	add	lr, sp, #4992	; 0x1380
   2bc30:	add	lr, lr, #28
   2bc34:	eor	r0, r0, r8
   2bc38:	eor	r1, r1, r9
   2bc3c:	ldrd	r8, [sp, #64]	; 0x40
   2bc40:	lsr	ip, ip, #1
   2bc44:	adds	r6, r6, r2
   2bc48:	and	r8, r8, r4
   2bc4c:	and	r9, r9, r5
   2bc50:	ldrd	r4, [sp, #168]	; 0xa8
   2bc54:	strd	r8, [sp, #152]	; 0x98
   2bc58:	ldrd	r8, [sp, #200]	; 0xc8
   2bc5c:	orr	ip, ip, r4, lsl #31
   2bc60:	str	ip, [lr]
   2bc64:	add	lr, sp, #4992	; 0x1380
   2bc68:	lsr	ip, r5, #8
   2bc6c:	add	lr, lr, #36	; 0x24
   2bc70:	orr	ip, ip, r4, lsl #24
   2bc74:	str	ip, [lr]
   2bc78:	ldr	ip, [sp, #824]	; 0x338
   2bc7c:	adc	r7, r7, r3
   2bc80:	orr	ip, ip, r5, lsl #25
   2bc84:	ldrd	r2, [sp, #88]	; 0x58
   2bc88:	lsr	lr, r8, #6
   2bc8c:	ldrd	r4, [sp, #96]	; 0x60
   2bc90:	str	lr, [sp, #832]	; 0x340
   2bc94:	add	lr, sp, #4992	; 0x1380
   2bc98:	add	lr, lr, #16
   2bc9c:	and	r4, r4, r2
   2bca0:	and	r5, r5, r3
   2bca4:	mov	r2, r4
   2bca8:	mov	r3, r5
   2bcac:	ldrd	r4, [lr]
   2bcb0:	str	ip, [sp, #824]	; 0x338
   2bcb4:	lsr	ip, r8, #19
   2bcb8:	eor	r4, r4, r0
   2bcbc:	eor	r5, r5, r1
   2bcc0:	adds	r0, sl, r6
   2bcc4:	strd	r4, [sp, #56]	; 0x38
   2bcc8:	ldrd	r4, [sp, #152]	; 0x98
   2bccc:	adc	r1, fp, r7
   2bcd0:	ldrd	sl, [sp, #200]	; 0xc8
   2bcd4:	orr	r5, r5, r3
   2bcd8:	orr	r3, ip, r9, lsl #13
   2bcdc:	add	ip, sp, #4992	; 0x1380
   2bce0:	add	ip, ip, #40	; 0x28
   2bce4:	orr	r4, r4, r2
   2bce8:	lsl	r2, r9, #3
   2bcec:	str	r3, [ip]
   2bcf0:	orr	ip, r2, r8, lsr #29
   2bcf4:	add	r2, sp, #4992	; 0x1380
   2bcf8:	add	r2, r2, #52	; 0x34
   2bcfc:	ldr	lr, [sp, #172]	; 0xac
   2bd00:	str	ip, [r2]
   2bd04:	add	r2, sp, #4992	; 0x1380
   2bd08:	lsr	r3, r9, #19
   2bd0c:	add	r2, r2, #44	; 0x2c
   2bd10:	orr	r3, r3, sl, lsl #13
   2bd14:	str	r3, [r2]
   2bd18:	lsr	lr, lr, #7
   2bd1c:	add	r3, sp, #4992	; 0x1380
   2bd20:	str	lr, [sp, #828]	; 0x33c
   2bd24:	add	r3, r3, #24
   2bd28:	ldr	lr, [sp, #832]	; 0x340
   2bd2c:	lsl	ip, r8, #3
   2bd30:	orr	lr, lr, r9, lsl #26
   2bd34:	mov	r8, r0
   2bd38:	mov	r9, r1
   2bd3c:	ldrd	r0, [r3]
   2bd40:	add	r3, sp, #4992	; 0x1380
   2bd44:	add	r3, r3, #32
   2bd48:	orr	ip, ip, fp, lsr #29
   2bd4c:	ldrd	r2, [r3]
   2bd50:	str	lr, [sp, #832]	; 0x340
   2bd54:	lsr	lr, r8, #14
   2bd58:	eor	r0, r0, r2
   2bd5c:	eor	r1, r1, r3
   2bd60:	mov	r2, r0
   2bd64:	mov	r3, r1
   2bd68:	ldrd	r0, [sp, #56]	; 0x38
   2bd6c:	adds	r0, r0, r4
   2bd70:	adc	r1, r1, r5
   2bd74:	mov	r5, r1
   2bd78:	add	r1, sp, #4992	; 0x1380
   2bd7c:	add	r1, r1, #48	; 0x30
   2bd80:	str	ip, [r1]
   2bd84:	add	r1, sp, #824	; 0x338
   2bd88:	mov	r4, r0
   2bd8c:	ldrd	r0, [r1]
   2bd90:	lsr	ip, fp, #6
   2bd94:	str	ip, [sp, #836]	; 0x344
   2bd98:	eor	r1, r1, r3
   2bd9c:	mov	r3, r1
   2bda0:	add	ip, sp, #4992	; 0x1380
   2bda4:	add	r1, sp, #4992	; 0x1380
   2bda8:	add	ip, ip, #48	; 0x30
   2bdac:	add	r1, r1, #40	; 0x28
   2bdb0:	adds	sl, r4, r6
   2bdb4:	eor	r0, r0, r2
   2bdb8:	adc	fp, r5, r7
   2bdbc:	mov	r2, r0
   2bdc0:	ldrd	r0, [r1]
   2bdc4:	ldrd	r6, [ip]
   2bdc8:	add	ip, sp, #832	; 0x340
   2bdcc:	ldrd	r4, [sp, #104]	; 0x68
   2bdd0:	eor	r0, r0, r6
   2bdd4:	eor	r1, r1, r7
   2bdd8:	mov	r6, r8
   2bddc:	mov	r7, r9
   2bde0:	adds	r4, r4, r2
   2bde4:	strd	r6, [sp, #216]	; 0xd8
   2bde8:	ldrd	r6, [ip]
   2bdec:	adc	r5, r5, r3
   2bdf0:	add	ip, sp, #4992	; 0x1380
   2bdf4:	eor	r6, r6, r0
   2bdf8:	eor	r7, r7, r1
   2bdfc:	mov	r0, r6
   2be00:	mov	r1, r7
   2be04:	ldrd	r6, [sp, #80]	; 0x50
   2be08:	add	ip, ip, #56	; 0x38
   2be0c:	lsr	r8, r8, #18
   2be10:	adds	r6, r6, r4
   2be14:	adc	r7, r7, r5
   2be18:	mov	r4, r6
   2be1c:	mov	r5, r7
   2be20:	ldrd	r6, [sp, #216]	; 0xd8
   2be24:	add	r3, pc, #892	; 0x37c
   2be28:	ldrd	r2, [r3]
   2be2c:	orr	lr, lr, r7, lsl #18
   2be30:	str	lr, [ip]
   2be34:	orr	ip, r8, r7, lsl #14
   2be38:	add	r8, sp, #5056	; 0x13c0
   2be3c:	mov	r9, r7
   2be40:	str	ip, [r8]
   2be44:	mov	r8, r6
   2be48:	adds	r6, r4, r0
   2be4c:	lsr	ip, r7, #18
   2be50:	lsr	lr, r7, #14
   2be54:	adc	r7, r5, r1
   2be58:	str	ip, [sp, #104]	; 0x68
   2be5c:	strd	r6, [sp, #56]	; 0x38
   2be60:	add	r6, sp, #4992	; 0x1380
   2be64:	ldr	r1, [sp, #104]	; 0x68
   2be68:	add	r6, r6, #60	; 0x3c
   2be6c:	orr	lr, lr, r8, lsl #18
   2be70:	str	lr, [r6]
   2be74:	orr	lr, r1, r8, lsl #14
   2be78:	add	r1, sp, #5056	; 0x13c0
   2be7c:	add	r1, r1, #4
   2be80:	ldrd	r6, [sp, #208]	; 0xd0
   2be84:	str	lr, [r1]
   2be88:	ldrd	r0, [sp, #184]	; 0xb8
   2be8c:	lsr	r5, sl, #28
   2be90:	orr	lr, r5, fp, lsl #4
   2be94:	eor	r0, r0, r6
   2be98:	add	r5, sp, #5056	; 0x13c0
   2be9c:	add	r6, sp, #5056	; 0x13c0
   2bea0:	lsl	ip, r9, #23
   2bea4:	add	r5, r5, #16
   2bea8:	add	r6, r6, #12
   2beac:	lsl	r4, fp, #30
   2beb0:	orr	ip, ip, r8, lsr #9
   2beb4:	str	lr, [r5]
   2beb8:	eor	r1, r1, r7
   2bebc:	orr	r5, r4, sl, lsr #2
   2bec0:	str	ip, [r6]
   2bec4:	add	r4, sp, #5056	; 0x13c0
   2bec8:	ldrd	r6, [sp, #56]	; 0x38
   2becc:	add	r4, r4, #28
   2bed0:	str	r5, [r4]
   2bed4:	adds	r6, r6, r2
   2bed8:	add	r4, sp, #5056	; 0x13c0
   2bedc:	adc	r7, r7, r3
   2bee0:	lsr	lr, fp, #28
   2bee4:	add	r4, r4, #20
   2bee8:	mov	r3, r7
   2beec:	orr	lr, lr, sl, lsl #4
   2bef0:	mov	r7, r9
   2bef4:	str	lr, [r4]
   2bef8:	and	r7, r7, r1
   2befc:	add	lr, sp, #5056	; 0x13c0
   2bf00:	mov	r1, r7
   2bf04:	lsl	ip, sl, #30
   2bf08:	mov	r7, r9
   2bf0c:	add	lr, lr, #24
   2bf10:	lsl	r5, r8, #23
   2bf14:	orr	ip, ip, fp, lsr #2
   2bf18:	str	ip, [lr]
   2bf1c:	orr	ip, r5, r7, lsr #9
   2bf20:	add	r5, sp, #5056	; 0x13c0
   2bf24:	add	r5, r5, #8
   2bf28:	lsl	r4, fp, #25
   2bf2c:	mov	r2, r6
   2bf30:	str	ip, [r5]
   2bf34:	mov	r6, r8
   2bf38:	orr	ip, r4, sl, lsr #7
   2bf3c:	add	r4, sp, #5056	; 0x13c0
   2bf40:	and	r6, r6, r0
   2bf44:	add	r4, r4, #36	; 0x24
   2bf48:	mov	r0, r6
   2bf4c:	ldrd	r6, [sp, #176]	; 0xb0
   2bf50:	str	ip, [r4]
   2bf54:	lsl	ip, sl, #25
   2bf58:	str	ip, [sp, #152]	; 0x98
   2bf5c:	add	ip, sp, #4992	; 0x1380
   2bf60:	adds	r6, r6, r2
   2bf64:	ldrd	r4, [sp, #208]	; 0xd0
   2bf68:	add	ip, ip, #56	; 0x38
   2bf6c:	adc	r7, r7, r3
   2bf70:	ldrd	r8, [sp, #192]	; 0xc0
   2bf74:	mov	r2, r6
   2bf78:	mov	r3, r7
   2bf7c:	ldrd	r6, [ip]
   2bf80:	add	ip, sp, #5056	; 0x13c0
   2bf84:	eor	r4, r4, r0
   2bf88:	eor	r5, r5, r1
   2bf8c:	mov	r0, r4
   2bf90:	mov	r1, r5
   2bf94:	ldrd	r4, [ip]
   2bf98:	add	ip, sp, #5056	; 0x13c0
   2bf9c:	lsr	lr, r8, #1
   2bfa0:	add	ip, ip, #40	; 0x28
   2bfa4:	orr	lr, lr, r9, lsl #31
   2bfa8:	str	lr, [ip]
   2bfac:	lsr	lr, r8, #8
   2bfb0:	orr	ip, lr, r9, lsl #24
   2bfb4:	add	lr, sp, #5056	; 0x13c0
   2bfb8:	eor	r6, r6, r4
   2bfbc:	eor	r7, r7, r5
   2bfc0:	add	lr, lr, #48	; 0x30
   2bfc4:	strd	r6, [sp, #104]	; 0x68
   2bfc8:	str	ip, [lr]
   2bfcc:	lsr	ip, r8, #7
   2bfd0:	str	ip, [sp, #840]	; 0x348
   2bfd4:	add	lr, sp, #5056	; 0x13c0
   2bfd8:	ldr	ip, [sp, #152]	; 0x98
   2bfdc:	mov	r7, r9
   2bfe0:	add	lr, lr, #32
   2bfe4:	adds	r6, r2, r0
   2bfe8:	orr	ip, ip, fp, lsr #7
   2bfec:	str	ip, [lr]
   2bff0:	lsr	ip, r7, #1
   2bff4:	adc	r7, r3, r1
   2bff8:	add	r3, sp, #5056	; 0x13c0
   2bffc:	add	r3, r3, #8
   2c000:	ldrd	r0, [r3]
   2c004:	ldrd	r2, [sp, #104]	; 0x68
   2c008:	ldrd	r8, [sp, #88]	; 0x58
   2c00c:	strd	r6, [sp, #88]	; 0x58
   2c010:	eor	r3, r3, r1
   2c014:	mov	r7, r3
   2c018:	add	r3, sp, #5056	; 0x13c0
   2c01c:	add	r3, r3, #16
   2c020:	eor	r2, r2, r0
   2c024:	ldrd	r0, [r3]
   2c028:	add	r3, sp, #5056	; 0x13c0
   2c02c:	add	r3, r3, #24
   2c030:	mov	r6, r2
   2c034:	ldrd	r2, [r3]
   2c038:	orr	r4, r8, sl
   2c03c:	orr	r5, r9, fp
   2c040:	eor	r0, r0, r2
   2c044:	eor	r1, r1, r3
   2c048:	ldrd	r2, [sp, #96]	; 0x60
   2c04c:	add	lr, sp, #5056	; 0x13c0
   2c050:	add	lr, lr, #44	; 0x2c
   2c054:	and	r2, r2, r4
   2c058:	and	r3, r3, r5
   2c05c:	mov	r4, r2
   2c060:	mov	r5, r3
   2c064:	ldrd	r2, [sp, #192]	; 0xc0
   2c068:	orr	ip, ip, r2, lsl #31
   2c06c:	str	ip, [lr]
   2c070:	add	lr, sp, #5056	; 0x13c0
   2c074:	lsr	ip, r3, #8
   2c078:	add	lr, lr, #52	; 0x34
   2c07c:	orr	ip, ip, r2, lsl #24
   2c080:	str	ip, [lr]
   2c084:	ldr	ip, [sp, #840]	; 0x348
   2c088:	add	lr, sp, #5056	; 0x13c0
   2c08c:	orr	r3, ip, r3, lsl #25
   2c090:	str	r3, [sp, #840]	; 0x348
   2c094:	ldrd	r2, [sp, #128]	; 0x80
   2c098:	add	lr, lr, #32
   2c09c:	lsr	r3, r2, #6
   2c0a0:	str	r3, [sp, #848]	; 0x350
   2c0a4:	lsr	ip, r2, #19
   2c0a8:	ldrd	r2, [sp, #88]	; 0x58
   2c0ac:	strd	r8, [sp, #88]	; 0x58
   2c0b0:	adds	r2, r2, r6
   2c0b4:	adc	r3, r3, r7
   2c0b8:	mov	r6, r2
   2c0bc:	mov	r7, r3
   2c0c0:	mov	r2, r8
   2c0c4:	mov	r3, r9
   2c0c8:	ldrd	r8, [lr]
   2c0cc:	and	r2, r2, sl
   2c0d0:	orr	r4, r4, r2
   2c0d4:	eor	r8, r8, r0
   2c0d8:	eor	r9, r9, r1
   2c0dc:	mov	r0, r8
   2c0e0:	mov	r1, r9
   2c0e4:	ldrd	r8, [sp, #128]	; 0x80
   2c0e8:	add	r2, sp, #5056	; 0x13c0
   2c0ec:	add	r2, r2, #56	; 0x38
   2c0f0:	orr	ip, ip, r9, lsl #13
   2c0f4:	and	r3, r3, fp
   2c0f8:	str	ip, [r2]
   2c0fc:	add	ip, sp, #5120	; 0x1400
   2c100:	orr	r5, r5, r3
   2c104:	add	ip, ip, #4
   2c108:	lsl	r3, r9, #3
   2c10c:	orr	r3, r3, r8, lsr #29
   2c110:	str	r3, [ip]
   2c114:	ldr	ip, [sp, #196]	; 0xc4
   2c118:	lsr	r2, r9, #19
   2c11c:	lsl	r3, r8, #3
   2c120:	lsr	ip, ip, #7
   2c124:	str	ip, [sp, #844]	; 0x34c
   2c128:	ldr	ip, [sp, #848]	; 0x350
   2c12c:	orr	ip, ip, r9, lsl #26
   2c130:	ldrd	r8, [sp, #64]	; 0x40
   2c134:	str	ip, [sp, #848]	; 0x350
   2c138:	add	ip, sp, #5056	; 0x13c0
   2c13c:	adds	r8, r8, r6
   2c140:	adc	r9, r9, r7
   2c144:	add	ip, ip, #40	; 0x28
   2c148:	strd	r8, [sp, #176]	; 0xb0
   2c14c:	ldrd	r8, [ip]
   2c150:	add	ip, sp, #5056	; 0x13c0
   2c154:	add	ip, ip, #48	; 0x30
   2c158:	adds	r0, r0, r4
   2c15c:	adc	r1, r1, r5
   2c160:	ldrd	r4, [ip]
   2c164:	eor	r8, r8, r4
   2c168:	eor	r9, r9, r5
   2c16c:	ldrd	r4, [sp, #128]	; 0x80
   2c170:	orr	ip, r2, r4, lsl #13
   2c174:	add	r2, sp, #5056	; 0x13c0
   2c178:	add	r2, r2, #60	; 0x3c
   2c17c:	str	ip, [r2]
   2c180:	add	r2, sp, #5120	; 0x1400
   2c184:	orr	r3, r3, r5, lsr #29
   2c188:	str	r3, [r2]
   2c18c:	add	r3, sp, #840	; 0x348
   2c190:	ldrd	r2, [r3]
   2c194:	eor	r2, r2, r8
   2c198:	eor	r3, r3, r9
   2c19c:	mov	r8, r2
   2c1a0:	mov	r9, r3
   2c1a4:	b	2c1b8 <__assert_fail@plt+0x1aecc>
   2c1a8:	movt	r8, #6859	; 0x1acb
   2c1ac:	vfnmami.f32	s21, s16, s20
   2c1b0:			; <UNDEFINED> instruction: 0x7763e373
   2c1b4:	blpl	fe75eaf8 <optarg@@GLIBC_2.4+0xfe70c950>
   2c1b8:	adds	r2, r0, r6
   2c1bc:	lsr	r3, r5, #6
   2c1c0:	str	r3, [sp, #852]	; 0x354
   2c1c4:	adc	r3, r1, r7
   2c1c8:	ldrd	r4, [sp, #168]	; 0xa8
   2c1cc:	strd	r2, [sp, #152]	; 0x98
   2c1d0:	add	r3, sp, #5056	; 0x13c0
   2c1d4:	add	r3, r3, #56	; 0x38
   2c1d8:	adds	r4, r4, r8
   2c1dc:	ldrd	r0, [r3]
   2c1e0:	add	r3, sp, #5120	; 0x1400
   2c1e4:	mov	r8, r4
   2c1e8:	add	r4, sp, #848	; 0x350
   2c1ec:	ldrd	r2, [r3]
   2c1f0:	adc	r5, r5, r9
   2c1f4:	mov	r9, r5
   2c1f8:	ldrd	r4, [r4]
   2c1fc:	eor	r0, r0, r2
   2c200:	eor	r1, r1, r3
   2c204:	eor	r4, r4, r0
   2c208:	eor	r5, r5, r1
   2c20c:	mov	r0, r4
   2c210:	mov	r1, r5
   2c214:	ldrd	r4, [sp, #32]
   2c218:	ldrd	r6, [sp, #176]	; 0xb0
   2c21c:	sub	r3, pc, #116	; 0x74
   2c220:	ldrd	r2, [r3]
   2c224:	adds	r4, r4, r8
   2c228:	mov	r8, r4
   2c22c:	add	r4, sp, #5120	; 0x1400
   2c230:	lsr	lr, r6, #14
   2c234:	add	r4, r4, #8
   2c238:	orr	lr, lr, r7, lsl #18
   2c23c:	str	lr, [r4]
   2c240:	add	r4, sp, #5120	; 0x1400
   2c244:	adc	r5, r5, r9
   2c248:	lsr	ip, r6, #18
   2c24c:	add	r4, r4, #16
   2c250:	adds	r6, r8, r0
   2c254:	mov	r9, r5
   2c258:	orr	ip, ip, r7, lsl #14
   2c25c:	str	ip, [r4]
   2c260:	lsr	lr, r7, #14
   2c264:	lsr	r4, r7, #18
   2c268:	adc	r7, r9, r1
   2c26c:	ldrd	r0, [sp, #152]	; 0x98
   2c270:	ldrd	r8, [sp, #176]	; 0xb0
   2c274:	strd	r6, [sp, #160]	; 0xa0
   2c278:	lsl	r5, r1, #30
   2c27c:	add	r1, sp, #5120	; 0x1400
   2c280:	add	r1, r1, #12
   2c284:	orr	lr, lr, r8, lsl #18
   2c288:	str	lr, [r1]
   2c28c:	add	r1, sp, #5120	; 0x1400
   2c290:	add	r1, r1, #20
   2c294:	orr	lr, r4, r8, lsl #14
   2c298:	ldrd	r6, [sp, #216]	; 0xd8
   2c29c:	lsr	ip, r0, #28
   2c2a0:	str	lr, [r1]
   2c2a4:	ldrd	r0, [sp, #184]	; 0xb8
   2c2a8:	str	ip, [sp, #64]	; 0x40
   2c2ac:	ldr	r4, [sp, #64]	; 0x40
   2c2b0:	eor	r0, r0, r6
   2c2b4:	eor	r1, r1, r7
   2c2b8:	ldrd	r6, [sp, #152]	; 0x98
   2c2bc:	lsl	ip, r9, #23
   2c2c0:	orr	ip, ip, r8, lsr #9
   2c2c4:	orr	lr, r4, r7, lsl #4
   2c2c8:	add	r4, sp, #5120	; 0x1400
   2c2cc:	add	r4, r4, #32
   2c2d0:	str	lr, [r4]
   2c2d4:	add	r4, sp, #5120	; 0x1400
   2c2d8:	add	r4, r4, #44	; 0x2c
   2c2dc:	orr	r5, r5, r6, lsr #2
   2c2e0:	str	r5, [r4]
   2c2e4:	add	r4, sp, #5120	; 0x1400
   2c2e8:	add	r4, r4, #28
   2c2ec:	str	ip, [r4]
   2c2f0:	ldrd	r4, [sp, #160]	; 0xa0
   2c2f4:	mov	r6, r8
   2c2f8:	lsr	lr, r7, #28
   2c2fc:	adds	r4, r4, r2
   2c300:	mov	r2, r4
   2c304:	mov	r4, r6
   2c308:	mov	r7, r9
   2c30c:	and	r4, r4, r0
   2c310:	ldrd	r8, [sp, #152]	; 0x98
   2c314:	mov	r0, r4
   2c318:	add	r4, sp, #5120	; 0x1400
   2c31c:	add	r4, r4, #36	; 0x24
   2c320:	orr	lr, lr, r8, lsl #4
   2c324:	str	lr, [r4]
   2c328:	add	lr, sp, #5120	; 0x1400
   2c32c:	lsl	ip, r8, #30
   2c330:	add	lr, lr, #40	; 0x28
   2c334:	adc	r5, r5, r3
   2c338:	orr	ip, ip, r9, lsr #2
   2c33c:	mov	r3, r5
   2c340:	str	ip, [lr]
   2c344:	mov	r5, r7
   2c348:	ldr	ip, [sp, #144]	; 0x90
   2c34c:	and	r5, r5, r1
   2c350:	mov	r1, r5
   2c354:	lsl	r5, r6, #23
   2c358:	lsr	lr, ip, #1
   2c35c:	orr	ip, r5, r7, lsr #9
   2c360:	add	r5, sp, #5120	; 0x1400
   2c364:	add	r5, r5, #24
   2c368:	lsl	r4, r9, #25
   2c36c:	str	ip, [r5]
   2c370:	orr	ip, r4, r8, lsr #7
   2c374:	add	r4, sp, #5120	; 0x1400
   2c378:	add	r4, r4, #52	; 0x34
   2c37c:	str	ip, [r4]
   2c380:	lsl	ip, r8, #25
   2c384:	str	ip, [sp, #64]	; 0x40
   2c388:	ldrd	r4, [sp, #208]	; 0xd0
   2c38c:	add	ip, sp, #5120	; 0x1400
   2c390:	add	ip, ip, #8
   2c394:	adds	r4, r4, r2
   2c398:	adc	r5, r5, r3
   2c39c:	mov	r2, r4
   2c3a0:	mov	r3, r5
   2c3a4:	ldrd	r4, [sp, #184]	; 0xb8
   2c3a8:	ldrd	r6, [ip]
   2c3ac:	add	ip, sp, #5120	; 0x1400
   2c3b0:	add	ip, ip, #16
   2c3b4:	eor	r4, r4, r0
   2c3b8:	eor	r5, r5, r1
   2c3bc:	mov	r0, r4
   2c3c0:	mov	r1, r5
   2c3c4:	ldrd	r4, [ip]
   2c3c8:	add	ip, sp, #5120	; 0x1400
   2c3cc:	add	ip, ip, #56	; 0x38
   2c3d0:	eor	r6, r6, r4
   2c3d4:	eor	r7, r7, r5
   2c3d8:	ldrd	r4, [sp, #144]	; 0x90
   2c3dc:	adds	r2, r2, r0
   2c3e0:	adc	r3, r3, r1
   2c3e4:	orr	lr, lr, r5, lsl #31
   2c3e8:	str	lr, [ip]
   2c3ec:	lsr	lr, r4, #8
   2c3f0:	orr	ip, lr, r5, lsl #24
   2c3f4:	add	r1, sp, #5120	; 0x1400
   2c3f8:	add	lr, sp, #5184	; 0x1440
   2c3fc:	add	r1, r1, #24
   2c400:	str	ip, [lr]
   2c404:	ldr	lr, [sp, #64]	; 0x40
   2c408:	lsr	ip, r4, #7
   2c40c:	ldrd	r0, [r1]
   2c410:	str	ip, [sp, #856]	; 0x358
   2c414:	orr	ip, lr, r9, lsr #7
   2c418:	add	lr, sp, #5120	; 0x1400
   2c41c:	add	lr, lr, #48	; 0x30
   2c420:	eor	r1, r1, r7
   2c424:	str	ip, [lr]
   2c428:	mov	r7, r1
   2c42c:	add	lr, sp, #5120	; 0x1400
   2c430:	add	r1, sp, #5120	; 0x1400
   2c434:	add	lr, lr, #40	; 0x28
   2c438:	add	r1, r1, #32
   2c43c:	eor	r0, r0, r6
   2c440:	orr	r4, r8, sl
   2c444:	orr	r5, r9, fp
   2c448:	mov	r6, r0
   2c44c:	ldrd	r8, [lr]
   2c450:	ldrd	r0, [r1]
   2c454:	adds	r6, r6, r2
   2c458:	adc	r7, r7, r3
   2c45c:	eor	r0, r0, r8
   2c460:	eor	r1, r1, r9
   2c464:	ldrd	r2, [sp, #152]	; 0x98
   2c468:	ldrd	r8, [sp, #88]	; 0x58
   2c46c:	ldr	ip, [sp, #148]	; 0x94
   2c470:	and	r2, r2, sl
   2c474:	and	r3, r3, fp
   2c478:	and	r8, r8, r4
   2c47c:	and	r9, r9, r5
   2c480:	mov	r4, r8
   2c484:	mov	r5, r9
   2c488:	ldrd	r8, [sp, #144]	; 0x90
   2c48c:	strd	r2, [sp, #64]	; 0x40
   2c490:	add	lr, sp, #5120	; 0x1400
   2c494:	add	r3, sp, #5120	; 0x1400
   2c498:	add	lr, lr, #60	; 0x3c
   2c49c:	lsr	ip, ip, #1
   2c4a0:	add	r3, r3, #48	; 0x30
   2c4a4:	orr	ip, ip, r8, lsl #31
   2c4a8:	str	ip, [lr]
   2c4ac:	ldrd	r2, [r3]
   2c4b0:	add	lr, sp, #5184	; 0x1440
   2c4b4:	lsr	ip, r9, #8
   2c4b8:	add	lr, lr, #4
   2c4bc:	orr	ip, ip, r8, lsl #24
   2c4c0:	str	ip, [lr]
   2c4c4:	eor	r2, r2, r0
   2c4c8:	ldr	ip, [sp, #856]	; 0x358
   2c4cc:	ldr	lr, [sp, #56]	; 0x38
   2c4d0:	eor	r3, r3, r1
   2c4d4:	mov	r0, r2
   2c4d8:	mov	r1, r3
   2c4dc:	ldrd	r2, [sp, #64]	; 0x40
   2c4e0:	orr	ip, ip, r9, lsl #25
   2c4e4:	str	ip, [sp, #856]	; 0x358
   2c4e8:	lsr	lr, lr, #6
   2c4ec:	ldr	ip, [sp, #56]	; 0x38
   2c4f0:	str	lr, [sp, #864]	; 0x360
   2c4f4:	orr	r2, r2, r4
   2c4f8:	ldr	lr, [sp, #60]	; 0x3c
   2c4fc:	mov	r4, r2
   2c500:	add	r2, sp, #5184	; 0x1440
   2c504:	orr	r3, r3, r5
   2c508:	add	r2, r2, #8
   2c50c:	lsr	ip, ip, #19
   2c510:	mov	r5, r3
   2c514:	orr	ip, ip, lr, lsl #13
   2c518:	ldr	r3, [sp, #60]	; 0x3c
   2c51c:	str	ip, [r2]
   2c520:	ldr	ip, [sp, #56]	; 0x38
   2c524:	lsl	r3, r3, #3
   2c528:	lsr	r2, lr, #19
   2c52c:	orr	r3, r3, ip, lsr #29
   2c530:	add	ip, sp, #5184	; 0x1440
   2c534:	add	ip, ip, #20
   2c538:	str	r3, [ip]
   2c53c:	lsr	ip, r9, #7
   2c540:	ldr	r3, [sp, #56]	; 0x38
   2c544:	ldrd	r8, [sp, #96]	; 0x60
   2c548:	str	ip, [sp, #860]	; 0x35c
   2c54c:	ldr	ip, [sp, #864]	; 0x360
   2c550:	adds	r8, r8, r6
   2c554:	orr	ip, ip, lr, lsl #26
   2c558:	str	ip, [sp, #864]	; 0x360
   2c55c:	add	ip, sp, #5120	; 0x1400
   2c560:	adc	r9, r9, r7
   2c564:	add	ip, ip, #56	; 0x38
   2c568:	strd	r8, [sp, #208]	; 0xd0
   2c56c:	ldrd	r8, [ip]
   2c570:	add	ip, sp, #5184	; 0x1440
   2c574:	adds	r0, r0, r4
   2c578:	adc	r1, r1, r5
   2c57c:	ldrd	r4, [ip]
   2c580:	lsl	r3, r3, #3
   2c584:	eor	r8, r8, r4
   2c588:	eor	r9, r9, r5
   2c58c:	ldrd	r4, [sp, #56]	; 0x38
   2c590:	orr	ip, r2, r4, lsl #13
   2c594:	add	r2, sp, #5184	; 0x1440
   2c598:	add	r2, r2, #12
   2c59c:	str	ip, [r2]
   2c5a0:	add	r2, sp, #5184	; 0x1440
   2c5a4:	add	r2, r2, #16
   2c5a8:	orr	r3, r3, r5, lsr #29
   2c5ac:	str	r3, [r2]
   2c5b0:	add	r3, sp, #856	; 0x358
   2c5b4:	adds	r4, r0, r6
   2c5b8:	ldrd	r2, [r3]
   2c5bc:	eor	r3, r3, r9
   2c5c0:	mov	r9, r3
   2c5c4:	lsr	r3, r5, #6
   2c5c8:	str	r3, [sp, #868]	; 0x364
   2c5cc:	add	r3, sp, #5184	; 0x1440
   2c5d0:	add	r3, r3, #8
   2c5d4:	adc	r5, r1, r7
   2c5d8:	ldrd	r0, [r3]
   2c5dc:	add	r3, sp, #5184	; 0x1440
   2c5e0:	add	r3, r3, #16
   2c5e4:	eor	r2, r2, r8
   2c5e8:	mov	r8, r2
   2c5ec:	ldrd	r2, [r3]
   2c5f0:	ldrd	r6, [sp, #208]	; 0xd0
   2c5f4:	strd	r4, [sp, #64]	; 0x40
   2c5f8:	eor	r0, r0, r2
   2c5fc:	eor	r1, r1, r3
   2c600:	mov	r2, r0
   2c604:	mov	r3, r1
   2c608:	ldrd	r0, [sp, #192]	; 0xc0
   2c60c:	lsr	lr, r6, #14
   2c610:	orr	ip, lr, r7, lsl #18
   2c614:	adds	r0, r0, r8
   2c618:	adc	r1, r1, r9
   2c61c:	mov	r9, r1
   2c620:	lsr	r1, r6, #18
   2c624:	str	r1, [sp, #96]	; 0x60
   2c628:	add	r1, sp, #864	; 0x360
   2c62c:	mov	r8, r0
   2c630:	ldrd	r0, [r1]
   2c634:	add	r5, pc, #892	; 0x37c
   2c638:	ldrd	r4, [r5]
   2c63c:	eor	r0, r0, r2
   2c640:	eor	r1, r1, r3
   2c644:	mov	r2, r0
   2c648:	mov	r3, r1
   2c64c:	ldrd	r0, [sp, #72]	; 0x48
   2c650:	adds	r0, r0, r8
   2c654:	adc	r1, r1, r9
   2c658:	mov	r9, r1
   2c65c:	add	r1, sp, #5184	; 0x1440
   2c660:	add	r1, r1, #24
   2c664:	str	ip, [r1]
   2c668:	ldr	r1, [sp, #96]	; 0x60
   2c66c:	lsr	ip, r7, #14
   2c670:	str	ip, [sp, #104]	; 0x68
   2c674:	orr	ip, r1, r7, lsl #14
   2c678:	add	r1, sp, #5184	; 0x1440
   2c67c:	add	r1, r1, #32
   2c680:	adds	r0, r0, r2
   2c684:	str	ip, [r1]
   2c688:	lsr	r1, r7, #18
   2c68c:	str	r1, [sp, #168]	; 0xa8
   2c690:	adc	r1, r9, r3
   2c694:	ldrd	r8, [sp, #64]	; 0x40
   2c698:	strd	r0, [sp, #96]	; 0x60
   2c69c:	add	r1, sp, #5184	; 0x1440
   2c6a0:	lsr	r2, r8, #28
   2c6a4:	mov	r8, r6
   2c6a8:	ldr	r6, [sp, #104]	; 0x68
   2c6ac:	add	r1, r1, #28
   2c6b0:	orr	lr, r6, r8, lsl #18
   2c6b4:	str	lr, [r1]
   2c6b8:	ldr	r1, [sp, #168]	; 0xa8
   2c6bc:	lsl	ip, r9, #30
   2c6c0:	orr	lr, r1, r8, lsl #14
   2c6c4:	add	r1, sp, #5184	; 0x1440
   2c6c8:	add	r1, r1, #36	; 0x24
   2c6cc:	mov	r9, r7
   2c6d0:	lsl	r3, r7, #23
   2c6d4:	str	lr, [r1]
   2c6d8:	ldrd	r0, [sp, #176]	; 0xb0
   2c6dc:	ldrd	r6, [sp, #216]	; 0xd8
   2c6e0:	orr	r3, r3, r8, lsr #9
   2c6e4:	eor	r0, r0, r6
   2c6e8:	eor	r1, r1, r7
   2c6ec:	ldrd	r6, [sp, #64]	; 0x40
   2c6f0:	orr	lr, r2, r7, lsl #4
   2c6f4:	add	r2, sp, #5184	; 0x1440
   2c6f8:	add	r2, r2, #48	; 0x30
   2c6fc:	orr	ip, ip, r6, lsr #2
   2c700:	str	lr, [r2]
   2c704:	mov	r6, r8
   2c708:	lsr	r2, r7, #28
   2c70c:	add	lr, sp, #5184	; 0x1440
   2c710:	mov	r7, r9
   2c714:	ldrd	r8, [sp, #96]	; 0x60
   2c718:	add	lr, lr, #60	; 0x3c
   2c71c:	str	ip, [lr]
   2c720:	adds	r8, r8, r4
   2c724:	add	ip, sp, #5184	; 0x1440
   2c728:	adc	r9, r9, r5
   2c72c:	mov	r4, r8
   2c730:	add	ip, ip, #44	; 0x2c
   2c734:	mov	r8, r6
   2c738:	mov	r5, r9
   2c73c:	mov	r9, r7
   2c740:	and	r7, r7, r1
   2c744:	str	r3, [ip]
   2c748:	mov	r1, r7
   2c74c:	lsl	ip, r8, #23
   2c750:	mov	r7, r9
   2c754:	ldrd	r8, [sp, #64]	; 0x40
   2c758:	ldr	r3, [sp, #64]	; 0x40
   2c75c:	and	r6, r6, r0
   2c760:	orr	lr, r2, r8, lsl #4
   2c764:	add	r2, sp, #5184	; 0x1440
   2c768:	add	r2, r2, #52	; 0x34
   2c76c:	str	lr, [r2]
   2c770:	add	lr, sp, #5184	; 0x1440
   2c774:	add	lr, lr, #56	; 0x38
   2c778:	lsl	r3, r3, #30
   2c77c:	mov	r0, r6
   2c780:	orr	r3, r3, r9, lsr #2
   2c784:	orr	ip, ip, r7, lsr #9
   2c788:	ldrd	r6, [sp, #184]	; 0xb8
   2c78c:	str	r3, [lr]
   2c790:	add	lr, sp, #5184	; 0x1440
   2c794:	add	lr, lr, #40	; 0x28
   2c798:	adds	r6, r6, r4
   2c79c:	lsl	r2, r9, #25
   2c7a0:	str	ip, [lr]
   2c7a4:	adc	r7, r7, r5
   2c7a8:	orr	ip, r2, r8, lsr #7
   2c7ac:	add	r2, sp, #5248	; 0x1480
   2c7b0:	add	r2, r2, #4
   2c7b4:	strd	r6, [sp, #104]	; 0x68
   2c7b8:	ldrd	r6, [sp, #216]	; 0xd8
   2c7bc:	str	ip, [r2]
   2c7c0:	add	r2, sp, #5184	; 0x1440
   2c7c4:	add	r2, r2, #24
   2c7c8:	eor	r6, r6, r0
   2c7cc:	eor	r7, r7, r1
   2c7d0:	mov	r0, r6
   2c7d4:	mov	r1, r7
   2c7d8:	ldrd	r6, [r2]
   2c7dc:	add	r2, sp, #5184	; 0x1440
   2c7e0:	ldr	r3, [sp, #16]
   2c7e4:	add	r2, r2, #32
   2c7e8:	ldrd	r4, [sp, #16]
   2c7ec:	lsl	ip, r8, #25
   2c7f0:	ldrd	r8, [r2]
   2c7f4:	add	r2, sp, #5248	; 0x1480
   2c7f8:	add	r2, r2, #8
   2c7fc:	lsr	r3, r3, #1
   2c800:	orr	r3, r3, r5, lsl #31
   2c804:	str	r3, [r2]
   2c808:	add	r2, sp, #5248	; 0x1480
   2c80c:	lsr	r3, r4, #8
   2c810:	add	r2, r2, #16
   2c814:	orr	r3, r3, r5, lsl #24
   2c818:	str	r3, [r2]
   2c81c:	eor	r6, r6, r8
   2c820:	eor	r7, r7, r9
   2c824:	lsr	r3, r4, #7
   2c828:	ldrd	r8, [sp, #152]	; 0x98
   2c82c:	ldrd	r4, [sp, #64]	; 0x40
   2c830:	str	r3, [sp, #872]	; 0x368
   2c834:	orr	r2, r8, r4
   2c838:	orr	r3, r9, r5
   2c83c:	strd	r2, [sp, #152]	; 0x98
   2c840:	add	r2, sp, #5248	; 0x1480
   2c844:	orr	r3, ip, r5, lsr #7
   2c848:	str	r3, [r2]
   2c84c:	ldr	r3, [sp, #20]
   2c850:	ldrd	r4, [sp, #104]	; 0x68
   2c854:	lsr	ip, r3, #1
   2c858:	add	r3, sp, #5184	; 0x1440
   2c85c:	adds	r4, r4, r0
   2c860:	add	r3, r3, #40	; 0x28
   2c864:	adc	r5, r5, r1
   2c868:	mov	r0, r4
   2c86c:	mov	r1, r5
   2c870:	ldrd	r4, [r3]
   2c874:	add	r3, sp, #5184	; 0x1440
   2c878:	add	r3, r3, #48	; 0x30
   2c87c:	eor	r4, r4, r6
   2c880:	eor	r5, r5, r7
   2c884:	mov	r6, r4
   2c888:	mov	r7, r5
   2c88c:	ldrd	r4, [r3]
   2c890:	add	r3, sp, #5184	; 0x1440
   2c894:	add	r3, r3, #56	; 0x38
   2c898:	adds	r6, r6, r0
   2c89c:	ldrd	r2, [r3]
   2c8a0:	adc	r7, r7, r1
   2c8a4:	eor	r4, r4, r2
   2c8a8:	eor	r5, r5, r3
   2c8ac:	ldrd	r2, [sp, #152]	; 0x98
   2c8b0:	ldr	lr, [sp, #16]
   2c8b4:	ldrd	r0, [sp, #64]	; 0x40
   2c8b8:	strd	r8, [sp, #152]	; 0x98
   2c8bc:	orr	ip, ip, lr, lsl #31
   2c8c0:	add	lr, sp, #5248	; 0x1480
   2c8c4:	add	lr, lr, #12
   2c8c8:	str	ip, [lr]
   2c8cc:	ldr	ip, [sp, #20]
   2c8d0:	ldr	lr, [sp, #16]
   2c8d4:	and	r8, r8, r0
   2c8d8:	lsr	ip, ip, #8
   2c8dc:	orr	ip, ip, lr, lsl #24
   2c8e0:	add	lr, sp, #5248	; 0x1480
   2c8e4:	add	lr, lr, #20
   2c8e8:	str	ip, [lr]
   2c8ec:	ldr	lr, [sp, #20]
   2c8f0:	ldr	ip, [sp, #872]	; 0x368
   2c8f4:	and	r9, r9, r1
   2c8f8:	orr	ip, ip, lr, lsl #25
   2c8fc:	ldr	lr, [sp, #160]	; 0xa0
   2c900:	mov	r0, r8
   2c904:	mov	r1, r9
   2c908:	lsr	lr, lr, #6
   2c90c:	str	lr, [sp, #880]	; 0x370
   2c910:	add	lr, sp, #5248	; 0x1480
   2c914:	and	r2, r2, sl
   2c918:	ldrd	r8, [lr]
   2c91c:	and	r3, r3, fp
   2c920:	str	ip, [sp, #872]	; 0x368
   2c924:	eor	r8, r8, r4
   2c928:	eor	r9, r9, r5
   2c92c:	mov	r4, r8
   2c930:	mov	r5, r9
   2c934:	orr	r8, r2, r0
   2c938:	orr	r9, r3, r1
   2c93c:	ldr	ip, [sp, #160]	; 0xa0
   2c940:	strd	r8, [sp, #168]	; 0xa8
   2c944:	ldrd	r8, [sp, #160]	; 0xa0
   2c948:	add	r3, sp, #5248	; 0x1480
   2c94c:	add	r3, r3, #24
   2c950:	lsr	ip, ip, #19
   2c954:	orr	ip, ip, r9, lsl #13
   2c958:	str	ip, [r3]
   2c95c:	add	r3, sp, #5248	; 0x1480
   2c960:	lsl	r1, r9, #3
   2c964:	add	r3, r3, #36	; 0x24
   2c968:	orr	ip, r1, r8, lsr #29
   2c96c:	str	ip, [r3]
   2c970:	ldr	r3, [sp, #880]	; 0x370
   2c974:	ldr	lr, [sp, #20]
   2c978:	orr	r1, r3, r9, lsl #26
   2c97c:	str	r1, [sp, #880]	; 0x370
   2c980:	ldrd	r0, [sp, #88]	; 0x58
   2c984:	ldrd	r2, [sp, #168]	; 0xa8
   2c988:	lsr	lr, lr, #7
   2c98c:	adds	r0, r0, r6
   2c990:	adc	r1, r1, r7
   2c994:	adds	r2, r2, r4
   2c998:	strd	r0, [sp, #104]	; 0x68
   2c99c:	add	r4, sp, #5248	; 0x1480
   2c9a0:	add	r1, sp, #5248	; 0x1480
   2c9a4:	add	r1, r1, #8
   2c9a8:	add	r4, r4, #16
   2c9ac:	adc	r3, r3, r5
   2c9b0:	b	2c9c8 <__assert_fail@plt+0x1b6dc>
   2c9b4:	nop			; (mov r0, r0)
   2c9b8:	ldrtle	fp, [r2], r3, lsr #17
   2c9bc:	stmdavs	lr!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, fp, sp, lr}
   2c9c0:	sfmpl	f3, 3, [pc, #1008]!	; 2cdb8 <__assert_fail@plt+0x1bacc>
   2c9c4:	strvc	r8, [pc], #750	; 2c9cc <__assert_fail@plt+0x1b6e0>
   2c9c8:	ldrd	r0, [r1]
   2c9cc:	ldrd	r4, [r4]
   2c9d0:	str	lr, [sp, #876]	; 0x36c
   2c9d4:	lsr	lr, r9, #19
   2c9d8:	eor	r0, r0, r4
   2c9dc:	add	r4, sp, #872	; 0x368
   2c9e0:	eor	r1, r1, r5
   2c9e4:	ldrd	r4, [r4]
   2c9e8:	orr	lr, lr, r8, lsl #13
   2c9ec:	lsl	ip, r8, #3
   2c9f0:	eor	r4, r4, r0
   2c9f4:	mov	r0, r4
   2c9f8:	add	r4, sp, #5248	; 0x1480
   2c9fc:	add	r4, r4, #28
   2ca00:	str	lr, [r4]
   2ca04:	add	lr, sp, #5248	; 0x1480
   2ca08:	add	lr, lr, #32
   2ca0c:	adds	r8, r2, r6
   2ca10:	orr	ip, ip, r9, lsr #29
   2ca14:	str	ip, [lr]
   2ca18:	lsr	ip, r9, #6
   2ca1c:	adc	r9, r3, r7
   2ca20:	add	r3, sp, #5248	; 0x1480
   2ca24:	add	r3, r3, #24
   2ca28:	str	ip, [sp, #884]	; 0x374
   2ca2c:	ldrd	r2, [r3]
   2ca30:	ldrd	r6, [lr]
   2ca34:	eor	r5, r5, r1
   2ca38:	mov	r1, r5
   2ca3c:	eor	r2, r2, r6
   2ca40:	eor	r3, r3, r7
   2ca44:	mov	r4, r2
   2ca48:	mov	r5, r3
   2ca4c:	ldrd	r2, [sp, #144]	; 0x90
   2ca50:	ldrd	r6, [sp, #104]	; 0x68
   2ca54:	adds	r2, r2, r0
   2ca58:	adc	r3, r3, r1
   2ca5c:	mov	r0, r2
   2ca60:	mov	r1, r3
   2ca64:	ldrd	r2, [sp, #120]	; 0x78
   2ca68:	lsr	lr, r6, #14
   2ca6c:	lsr	ip, r6, #18
   2ca70:	adds	r2, r2, r0
   2ca74:	adc	r3, r3, r1
   2ca78:	mov	r1, r3
   2ca7c:	add	r3, sp, #880	; 0x370
   2ca80:	mov	r0, r2
   2ca84:	ldrd	r2, [r3]
   2ca88:	lsr	r6, r7, #18
   2ca8c:	eor	r2, r2, r4
   2ca90:	mov	r4, r2
   2ca94:	add	r2, sp, #5248	; 0x1480
   2ca98:	eor	r3, r3, r5
   2ca9c:	add	r2, r2, #40	; 0x28
   2caa0:	mov	r5, r3
   2caa4:	orr	r3, lr, r7, lsl #18
   2caa8:	str	r3, [r2]
   2caac:	add	r2, sp, #5248	; 0x1480
   2cab0:	add	r2, r2, #48	; 0x30
   2cab4:	orr	r3, ip, r7, lsl #14
   2cab8:	str	r3, [r2]
   2cabc:	adds	r2, r0, r4
   2cac0:	adc	r3, r1, r5
   2cac4:	ldrd	r0, [sp, #104]	; 0x68
   2cac8:	strd	r2, [sp, #168]	; 0xa8
   2cacc:	add	r2, sp, #5248	; 0x1480
   2cad0:	lsr	lr, r7, #14
   2cad4:	add	r2, r2, #44	; 0x2c
   2cad8:	orr	r3, lr, r0, lsl #18
   2cadc:	str	r3, [r2]
   2cae0:	add	r2, sp, #5248	; 0x1480
   2cae4:	add	r2, r2, #52	; 0x34
   2cae8:	orr	r3, r6, r0, lsl #14
   2caec:	ldrd	r6, [sp, #176]	; 0xb0
   2caf0:	str	r3, [r2]
   2caf4:	ldrd	r2, [sp, #208]	; 0xd0
   2caf8:	lsl	r5, r1, #23
   2cafc:	mov	r1, r7
   2cb00:	eor	r1, r1, r3
   2cb04:	mov	r0, r6
   2cb08:	ldr	r3, [sp, #104]	; 0x68
   2cb0c:	eor	r0, r0, r2
   2cb10:	add	r2, sp, #5248	; 0x1480
   2cb14:	add	r2, r2, #60	; 0x3c
   2cb18:	orr	r3, r5, r3, lsr #9
   2cb1c:	str	r3, [r2]
   2cb20:	ldr	r3, [sp, #104]	; 0x68
   2cb24:	lsr	r4, r8, #28
   2cb28:	add	r2, sp, #5312	; 0x14c0
   2cb2c:	lsl	lr, r3, #23
   2cb30:	orr	r3, r4, r9, lsl #4
   2cb34:	str	r3, [r2]
   2cb38:	add	r2, sp, #5312	; 0x14c0
   2cb3c:	lsl	ip, r9, #30
   2cb40:	add	r2, r2, #12
   2cb44:	orr	r3, ip, r8, lsr #2
   2cb48:	str	r3, [r2]
   2cb4c:	sub	r5, pc, #404	; 0x194
   2cb50:	ldrd	r4, [r5]
   2cb54:	ldrd	r2, [sp, #168]	; 0xa8
   2cb58:	lsr	ip, r9, #28
   2cb5c:	orr	ip, ip, r8, lsl #4
   2cb60:	adds	r4, r4, r2
   2cb64:	adc	r5, r5, r3
   2cb68:	mov	r2, r4
   2cb6c:	mov	r3, r5
   2cb70:	ldrd	r4, [sp, #104]	; 0x68
   2cb74:	and	r4, r4, r0
   2cb78:	mov	r0, r4
   2cb7c:	ldr	r4, [sp, #108]	; 0x6c
   2cb80:	and	r5, r5, r1
   2cb84:	mov	r1, r5
   2cb88:	orr	lr, lr, r4, lsr #9
   2cb8c:	add	r4, sp, #5248	; 0x1480
   2cb90:	add	r4, r4, #56	; 0x38
   2cb94:	str	lr, [r4]
   2cb98:	add	lr, sp, #5312	; 0x14c0
   2cb9c:	add	lr, lr, #4
   2cba0:	str	ip, [lr]
   2cba4:	ldr	ip, [sp, #40]	; 0x28
   2cba8:	lsl	r5, r8, #30
   2cbac:	lsl	r4, r9, #25
   2cbb0:	lsr	lr, ip, #1
   2cbb4:	orr	ip, r5, r9, lsr #2
   2cbb8:	add	r5, sp, #5312	; 0x14c0
   2cbbc:	add	r5, r5, #8
   2cbc0:	str	ip, [r5]
   2cbc4:	orr	ip, r4, r8, lsr #7
   2cbc8:	add	r4, sp, #5312	; 0x14c0
   2cbcc:	add	r4, r4, #20
   2cbd0:	str	ip, [r4]
   2cbd4:	lsl	ip, r8, #25
   2cbd8:	str	ip, [sp, #88]	; 0x58
   2cbdc:	add	ip, sp, #5248	; 0x1480
   2cbe0:	ldrd	r4, [sp, #216]	; 0xd8
   2cbe4:	add	ip, ip, #40	; 0x28
   2cbe8:	eor	r6, r6, r0
   2cbec:	eor	r7, r7, r1
   2cbf0:	mov	r0, r6
   2cbf4:	mov	r1, r7
   2cbf8:	ldrd	r6, [ip]
   2cbfc:	add	ip, sp, #5248	; 0x1480
   2cc00:	adds	r4, r4, r2
   2cc04:	add	ip, ip, #48	; 0x30
   2cc08:	adc	r5, r5, r3
   2cc0c:	mov	r2, r4
   2cc10:	mov	r3, r5
   2cc14:	ldrd	r4, [ip]
   2cc18:	add	ip, sp, #5312	; 0x14c0
   2cc1c:	add	ip, ip, #24
   2cc20:	eor	r6, r6, r4
   2cc24:	eor	r7, r7, r5
   2cc28:	ldrd	r4, [sp, #40]	; 0x28
   2cc2c:	adds	r2, r2, r0
   2cc30:	adc	r3, r3, r1
   2cc34:	orr	lr, lr, r5, lsl #31
   2cc38:	str	lr, [ip]
   2cc3c:	lsr	lr, r4, #8
   2cc40:	orr	ip, lr, r5, lsl #24
   2cc44:	add	r1, sp, #5248	; 0x1480
   2cc48:	add	lr, sp, #5312	; 0x14c0
   2cc4c:	add	lr, lr, #32
   2cc50:	add	r1, r1, #56	; 0x38
   2cc54:	str	ip, [lr]
   2cc58:	ldrd	r0, [r1]
   2cc5c:	lsr	ip, r4, #7
   2cc60:	str	ip, [sp, #888]	; 0x378
   2cc64:	add	lr, sp, #5312	; 0x14c0
   2cc68:	ldr	ip, [sp, #88]	; 0x58
   2cc6c:	add	lr, lr, #16
   2cc70:	orr	ip, ip, r9, lsr #7
   2cc74:	eor	r0, r0, r6
   2cc78:	eor	r1, r1, r7
   2cc7c:	str	ip, [lr]
   2cc80:	add	lr, sp, #5312	; 0x14c0
   2cc84:	strd	r0, [sp, #88]	; 0x58
   2cc88:	add	lr, lr, #8
   2cc8c:	add	r1, sp, #5312	; 0x14c0
   2cc90:	ldrd	r6, [lr]
   2cc94:	ldrd	r0, [r1]
   2cc98:	ldrd	r4, [sp, #64]	; 0x40
   2cc9c:	ldr	ip, [sp, #44]	; 0x2c
   2cca0:	eor	r0, r0, r6
   2cca4:	eor	r1, r1, r7
   2cca8:	mov	r6, r0
   2ccac:	mov	r7, r1
   2ccb0:	ldrd	r0, [sp, #152]	; 0x98
   2ccb4:	orr	r4, r4, r8
   2ccb8:	orr	r5, r5, r9
   2ccbc:	and	r0, r0, r4
   2ccc0:	and	r1, r1, r5
   2ccc4:	mov	r4, r0
   2ccc8:	mov	r5, r1
   2cccc:	ldrd	r0, [sp, #40]	; 0x28
   2ccd0:	add	lr, sp, #5312	; 0x14c0
   2ccd4:	add	lr, lr, #28
   2ccd8:	lsr	ip, ip, #1
   2ccdc:	orr	ip, ip, r0, lsl #31
   2cce0:	str	ip, [lr]
   2cce4:	add	lr, sp, #5312	; 0x14c0
   2cce8:	lsr	ip, r1, #8
   2ccec:	add	lr, lr, #36	; 0x24
   2ccf0:	orr	ip, ip, r0, lsl #24
   2ccf4:	str	ip, [lr]
   2ccf8:	ldr	ip, [sp, #888]	; 0x378
   2ccfc:	orr	ip, ip, r1, lsl #25
   2cd00:	ldrd	r0, [sp, #96]	; 0x60
   2cd04:	str	ip, [sp, #888]	; 0x378
   2cd08:	lsr	lr, r0, #6
   2cd0c:	lsr	ip, r0, #19
   2cd10:	ldrd	r0, [sp, #88]	; 0x58
   2cd14:	str	lr, [sp, #896]	; 0x380
   2cd18:	adds	r0, r0, r2
   2cd1c:	adc	r1, r1, r3
   2cd20:	ldrd	r2, [sp, #64]	; 0x40
   2cd24:	strd	r0, [sp, #88]	; 0x58
   2cd28:	add	r1, sp, #5312	; 0x14c0
   2cd2c:	add	r1, r1, #16
   2cd30:	and	r2, r2, r8
   2cd34:	ldrd	r0, [r1]
   2cd38:	orr	r4, r4, r2
   2cd3c:	add	r2, sp, #5312	; 0x14c0
   2cd40:	eor	r6, r6, r0
   2cd44:	eor	r7, r7, r1
   2cd48:	mov	r0, r6
   2cd4c:	mov	r1, r7
   2cd50:	add	r2, r2, #40	; 0x28
   2cd54:	strd	r0, [sp, #144]	; 0x90
   2cd58:	ldrd	r0, [sp, #96]	; 0x60
   2cd5c:	and	r3, r3, r9
   2cd60:	orr	r5, r5, r3
   2cd64:	orr	ip, ip, r1, lsl #13
   2cd68:	str	ip, [r2]
   2cd6c:	add	r2, sp, #5312	; 0x14c0
   2cd70:	lsl	r3, r1, #3
   2cd74:	add	r2, r2, #52	; 0x34
   2cd78:	orr	r3, r3, r0, lsr #29
   2cd7c:	str	r3, [r2]
   2cd80:	ldr	r3, [sp, #44]	; 0x2c
   2cd84:	ldr	ip, [sp, #896]	; 0x380
   2cd88:	lsr	r2, r1, #19
   2cd8c:	lsr	r3, r3, #7
   2cd90:	orr	ip, ip, r1, lsl #26
   2cd94:	str	r3, [sp, #892]	; 0x37c
   2cd98:	lsl	r3, r0, #3
   2cd9c:	ldrd	r0, [sp, #88]	; 0x58
   2cda0:	str	ip, [sp, #896]	; 0x380
   2cda4:	add	ip, sp, #5312	; 0x14c0
   2cda8:	adds	r0, r0, sl
   2cdac:	adc	r1, r1, fp
   2cdb0:	add	ip, ip, #24
   2cdb4:	mov	r6, r0
   2cdb8:	mov	r7, r1
   2cdbc:	ldrd	r0, [sp, #144]	; 0x90
   2cdc0:	ldrd	sl, [ip]
   2cdc4:	add	ip, sp, #5312	; 0x14c0
   2cdc8:	add	ip, ip, #32
   2cdcc:	adds	r0, r0, r4
   2cdd0:	adc	r1, r1, r5
   2cdd4:	ldrd	r4, [ip]
   2cdd8:	lsr	lr, r6, #14
   2cddc:	eor	sl, sl, r4
   2cde0:	eor	fp, fp, r5
   2cde4:	mov	r4, sl
   2cde8:	mov	r5, fp
   2cdec:	ldrd	sl, [sp, #96]	; 0x60
   2cdf0:	orr	ip, r2, sl, lsl #13
   2cdf4:	add	r2, sp, #5312	; 0x14c0
   2cdf8:	add	r2, r2, #44	; 0x2c
   2cdfc:	str	ip, [r2]
   2ce00:	add	r2, sp, #5312	; 0x14c0
   2ce04:	add	r2, r2, #48	; 0x30
   2ce08:	orr	r3, r3, fp, lsr #29
   2ce0c:	str	r3, [r2]
   2ce10:	add	r3, sp, #888	; 0x378
   2ce14:	lsr	ip, fp, #6
   2ce18:	ldrd	r2, [r3]
   2ce1c:	str	ip, [sp, #900]	; 0x384
   2ce20:	add	ip, sp, #5312	; 0x14c0
   2ce24:	eor	r2, r2, r4
   2ce28:	eor	r3, r3, r5
   2ce2c:	ldrd	r4, [sp, #88]	; 0x58
   2ce30:	add	ip, ip, #48	; 0x30
   2ce34:	ldrd	sl, [ip]
   2ce38:	adds	r4, r4, r0
   2ce3c:	adc	r5, r5, r1
   2ce40:	add	r1, sp, #5312	; 0x14c0
   2ce44:	strd	r4, [sp, #88]	; 0x58
   2ce48:	ldrd	r4, [sp, #16]
   2ce4c:	add	r1, r1, #40	; 0x28
   2ce50:	lsr	ip, r6, #18
   2ce54:	adds	r4, r4, r2
   2ce58:	ldrd	r0, [r1]
   2ce5c:	adc	r5, r5, r3
   2ce60:	add	r3, sp, #896	; 0x380
   2ce64:	eor	r0, r0, sl
   2ce68:	eor	r1, r1, fp
   2ce6c:	mov	sl, r6
   2ce70:	mov	fp, r7
   2ce74:	ldrd	r6, [r3]
   2ce78:	ldrd	r2, [sp, #136]	; 0x88
   2ce7c:	orr	lr, lr, fp, lsl #18
   2ce80:	eor	r7, r7, r1
   2ce84:	adds	r2, r2, r4
   2ce88:	adc	r3, r3, r5
   2ce8c:	mov	r1, r7
   2ce90:	mov	r7, r3
   2ce94:	add	r3, sp, #5312	; 0x14c0
   2ce98:	add	r3, r3, #56	; 0x38
   2ce9c:	eor	r6, r6, r0
   2cea0:	str	lr, [r3]
   2cea4:	mov	r0, r6
   2cea8:	add	r3, sp, #5376	; 0x1500
   2ceac:	adds	r2, r2, r0
   2ceb0:	orr	ip, ip, fp, lsl #14
   2ceb4:	str	ip, [r3]
   2ceb8:	adc	r3, r7, r1
   2cebc:	lsr	lr, fp, #14
   2cec0:	strd	r2, [sp, #192]	; 0xc0
   2cec4:	ldrd	r2, [sp, #88]	; 0x58
   2cec8:	lsr	r4, fp, #18
   2cecc:	ldrd	r0, [sp, #104]	; 0x68
   2ced0:	lsr	r5, r2, #28
   2ced4:	add	r2, sp, #5312	; 0x14c0
   2ced8:	add	r2, r2, #60	; 0x3c
   2cedc:	lsl	ip, r3, #30
   2cee0:	orr	r3, lr, sl, lsl #18
   2cee4:	str	r3, [r2]
   2cee8:	add	r2, sp, #5376	; 0x1500
   2ceec:	add	r2, r2, #4
   2cef0:	orr	r3, r4, sl, lsl #14
   2cef4:	str	r3, [r2]
   2cef8:	ldrd	r2, [sp, #208]	; 0xd0
   2cefc:	lsl	r6, fp, #23
   2cf00:	orr	lr, r6, sl, lsr #9
   2cf04:	eor	r1, r1, r3
   2cf08:	ldrd	r6, [sp, #88]	; 0x58
   2cf0c:	add	r3, sp, #5376	; 0x1500
   2cf10:	eor	r0, r0, r2
   2cf14:	add	r3, r3, #12
   2cf18:	add	r2, sp, #5376	; 0x1500
   2cf1c:	add	r2, r2, #16
   2cf20:	str	lr, [r3]
   2cf24:	orr	r3, r5, r7, lsl #4
   2cf28:	str	r3, [r2]
   2cf2c:	add	r2, sp, #5376	; 0x1500
   2cf30:	add	r2, r2, #28
   2cf34:	orr	r3, ip, r6, lsr #2
   2cf38:	mov	r4, r6
   2cf3c:	str	r3, [r2]
   2cf40:	lsr	ip, r7, #28
   2cf44:	add	r3, pc, #868	; 0x364
   2cf48:	ldrd	r2, [r3]
   2cf4c:	ldrd	r6, [sp, #192]	; 0xc0
   2cf50:	lsl	r5, r4, #30
   2cf54:	add	r4, sp, #5376	; 0x1500
   2cf58:	adds	r2, r2, r6
   2cf5c:	adc	r3, r3, r7
   2cf60:	mov	r6, sl
   2cf64:	mov	r7, fp
   2cf68:	lsl	lr, sl, #23
   2cf6c:	and	r6, r6, r0
   2cf70:	and	r7, r7, r1
   2cf74:	add	r4, r4, #8
   2cf78:	mov	r0, r6
   2cf7c:	mov	r1, r7
   2cf80:	orr	lr, lr, fp, lsr #9
   2cf84:	ldrd	r6, [sp, #88]	; 0x58
   2cf88:	str	lr, [r4]
   2cf8c:	add	lr, sp, #5376	; 0x1500
   2cf90:	add	lr, lr, #20
   2cf94:	orr	ip, ip, r6, lsl #4
   2cf98:	str	ip, [lr]
   2cf9c:	ldr	ip, [sp, #112]	; 0x70
   2cfa0:	lsl	r4, r7, #25
   2cfa4:	strd	sl, [sp, #16]
   2cfa8:	lsr	lr, ip, #1
   2cfac:	orr	ip, r5, r7, lsr #2
   2cfb0:	add	r5, sp, #5376	; 0x1500
   2cfb4:	add	r5, r5, #24
   2cfb8:	str	ip, [r5]
   2cfbc:	orr	ip, r4, r6, lsr #7
   2cfc0:	add	r4, sp, #5376	; 0x1500
   2cfc4:	add	r4, r4, #36	; 0x24
   2cfc8:	str	ip, [r4]
   2cfcc:	lsl	ip, r6, #25
   2cfd0:	ldrd	r6, [sp, #176]	; 0xb0
   2cfd4:	add	r4, sp, #5312	; 0x14c0
   2cfd8:	add	r4, r4, #56	; 0x38
   2cfdc:	adds	r6, r6, r2
   2cfe0:	adc	r7, r7, r3
   2cfe4:	mov	r2, r6
   2cfe8:	mov	r3, r7
   2cfec:	ldrd	r6, [sp, #208]	; 0xd0
   2cff0:	eor	r6, r6, r0
   2cff4:	eor	r7, r7, r1
   2cff8:	mov	r0, r6
   2cffc:	mov	r1, r7
   2d000:	ldrd	r6, [r4]
   2d004:	add	r4, sp, #5376	; 0x1500
   2d008:	ldrd	sl, [r4]
   2d00c:	ldrd	r4, [sp, #112]	; 0x70
   2d010:	eor	r6, r6, sl
   2d014:	add	sl, sp, #5376	; 0x1500
   2d018:	add	sl, sl, #40	; 0x28
   2d01c:	orr	lr, lr, r5, lsl #31
   2d020:	str	lr, [sl]
   2d024:	add	sl, sp, #5376	; 0x1500
   2d028:	lsr	lr, r4, #8
   2d02c:	add	sl, sl, #48	; 0x30
   2d030:	orr	lr, lr, r5, lsl #24
   2d034:	str	lr, [sl]
   2d038:	lsr	lr, r4, #7
   2d03c:	str	lr, [sp, #904]	; 0x388
   2d040:	ldr	lr, [sp, #92]	; 0x5c
   2d044:	eor	r7, r7, fp
   2d048:	mov	fp, r5
   2d04c:	orr	ip, ip, lr, lsr #7
   2d050:	add	lr, sp, #5376	; 0x1500
   2d054:	add	lr, lr, #32
   2d058:	adds	sl, r2, r0
   2d05c:	str	ip, [lr]
   2d060:	lsr	ip, fp, #1
   2d064:	adc	fp, r3, r1
   2d068:	add	r3, sp, #5376	; 0x1500
   2d06c:	add	r3, r3, #8
   2d070:	ldrd	r0, [r3]
   2d074:	add	r3, sp, #5376	; 0x1500
   2d078:	add	r3, r3, #16
   2d07c:	eor	r0, r0, r6
   2d080:	eor	r1, r1, r7
   2d084:	mov	r6, r0
   2d088:	mov	r7, r1
   2d08c:	ldrd	r0, [r3]
   2d090:	add	r3, sp, #5376	; 0x1500
   2d094:	add	r3, r3, #24
   2d098:	ldrd	r4, [sp, #88]	; 0x58
   2d09c:	strd	sl, [sp, #144]	; 0x90
   2d0a0:	ldrd	sl, [r3]
   2d0a4:	ldrd	r2, [sp, #64]	; 0x40
   2d0a8:	orr	r4, r4, r8
   2d0ac:	orr	r5, r5, r9
   2d0b0:	and	r2, r2, r4
   2d0b4:	and	r3, r3, r5
   2d0b8:	mov	r4, r2
   2d0bc:	mov	r5, r3
   2d0c0:	ldrd	r2, [sp, #112]	; 0x70
   2d0c4:	add	lr, sp, #5376	; 0x1500
   2d0c8:	add	lr, lr, #44	; 0x2c
   2d0cc:	orr	ip, ip, r2, lsl #31
   2d0d0:	str	ip, [lr]
   2d0d4:	add	lr, sp, #5376	; 0x1500
   2d0d8:	lsr	ip, r3, #8
   2d0dc:	add	lr, lr, #52	; 0x34
   2d0e0:	orr	ip, ip, r2, lsl #24
   2d0e4:	eor	r0, r0, sl
   2d0e8:	eor	r1, r1, fp
   2d0ec:	str	ip, [lr]
   2d0f0:	ldrd	sl, [sp, #168]	; 0xa8
   2d0f4:	ldr	ip, [sp, #904]	; 0x388
   2d0f8:	orr	r3, ip, r3, lsl #25
   2d0fc:	str	r3, [sp, #904]	; 0x388
   2d100:	lsr	r3, sl, #6
   2d104:	str	r3, [sp, #912]	; 0x390
   2d108:	ldrd	r2, [sp, #144]	; 0x90
   2d10c:	lsr	ip, sl, #19
   2d110:	orr	ip, ip, fp, lsl #13
   2d114:	adds	r2, r2, r6
   2d118:	adc	r3, r3, r7
   2d11c:	mov	r6, r2
   2d120:	mov	r7, r3
   2d124:	ldrd	r2, [sp, #88]	; 0x58
   2d128:	and	r2, r2, r8
   2d12c:	and	r3, r3, r9
   2d130:	strd	r2, [sp, #144]	; 0x90
   2d134:	add	r3, sp, #5376	; 0x1500
   2d138:	add	r3, r3, #32
   2d13c:	ldrd	r2, [r3]
   2d140:	eor	r2, r2, r0
   2d144:	eor	r3, r3, r1
   2d148:	mov	r0, r2
   2d14c:	mov	r1, r3
   2d150:	ldrd	r2, [sp, #144]	; 0x90
   2d154:	orr	r2, r2, r4
   2d158:	orr	r3, r3, r5
   2d15c:	strd	r2, [sp, #144]	; 0x90
   2d160:	add	r2, sp, #5376	; 0x1500
   2d164:	add	r2, r2, #56	; 0x38
   2d168:	str	ip, [r2]
   2d16c:	add	r2, sp, #5440	; 0x1540
   2d170:	lsl	r3, fp, #3
   2d174:	add	r2, r2, #4
   2d178:	orr	r3, r3, sl, lsr #29
   2d17c:	str	r3, [r2]
   2d180:	ldr	r3, [sp, #116]	; 0x74
   2d184:	ldrd	r4, [sp, #152]	; 0x98
   2d188:	ldr	ip, [sp, #912]	; 0x390
   2d18c:	lsr	r3, r3, #7
   2d190:	adds	r4, r4, r6
   2d194:	adc	r5, r5, r7
   2d198:	orr	ip, ip, fp, lsl #26
   2d19c:	strd	r4, [sp, #184]	; 0xb8
   2d1a0:	ldrd	r4, [sp, #144]	; 0x90
   2d1a4:	str	ip, [sp, #912]	; 0x390
   2d1a8:	add	ip, sp, #5376	; 0x1500
   2d1ac:	adds	r4, r4, r0
   2d1b0:	add	ip, ip, #40	; 0x28
   2d1b4:	adc	r5, r5, r1
   2d1b8:	mov	r0, r4
   2d1bc:	mov	r1, r5
   2d1c0:	ldrd	r4, [ip]
   2d1c4:	add	ip, sp, #5376	; 0x1500
   2d1c8:	add	ip, ip, #48	; 0x30
   2d1cc:	lsr	r2, fp, #19
   2d1d0:	str	r3, [sp, #908]	; 0x38c
   2d1d4:	lsl	r3, sl, #3
   2d1d8:	ldrd	sl, [ip]
   2d1dc:	eor	r4, r4, sl
   2d1e0:	eor	r5, r5, fp
   2d1e4:	ldrd	sl, [sp, #168]	; 0xa8
   2d1e8:	orr	ip, r2, sl, lsl #13
   2d1ec:	add	r2, sp, #5376	; 0x1500
   2d1f0:	add	r2, r2, #60	; 0x3c
   2d1f4:	str	ip, [r2]
   2d1f8:	add	r2, sp, #5440	; 0x1540
   2d1fc:	orr	r3, r3, fp, lsr #29
   2d200:	str	r3, [r2]
   2d204:	add	r3, sp, #904	; 0x388
   2d208:	lsr	ip, fp, #6
   2d20c:	ldrd	r2, [r3]
   2d210:	str	ip, [sp, #916]	; 0x394
   2d214:	add	ip, sp, #5440	; 0x1540
   2d218:	eor	r2, r2, r4
   2d21c:	adds	r4, r0, r6
   2d220:	eor	r3, r3, r5
   2d224:	adc	r5, r1, r7
   2d228:	add	r1, sp, #5376	; 0x1500
   2d22c:	add	r1, r1, #56	; 0x38
   2d230:	add	r6, sp, #912	; 0x390
   2d234:	ldrd	r0, [r1]
   2d238:	ldrd	sl, [ip]
   2d23c:	ldrd	r6, [r6]
   2d240:	strd	r4, [sp, #176]	; 0xb0
   2d244:	eor	r0, r0, sl
   2d248:	eor	r1, r1, fp
   2d24c:	ldrd	r4, [sp, #40]	; 0x28
   2d250:	eor	r6, r6, r0
   2d254:	eor	r7, r7, r1
   2d258:	ldrd	sl, [sp, #184]	; 0xb8
   2d25c:	mov	r0, r6
   2d260:	mov	r1, r7
   2d264:	ldrd	r6, [sp, #200]	; 0xc8
   2d268:	adds	r4, r4, r2
   2d26c:	adc	r5, r5, r3
   2d270:	lsr	lr, sl, #14
   2d274:	adds	r6, r6, r4
   2d278:	lsr	ip, sl, #18
   2d27c:	mov	r4, sl
   2d280:	add	sl, sp, #5440	; 0x1540
   2d284:	add	sl, sl, #8
   2d288:	orr	lr, lr, fp, lsl #18
   2d28c:	str	lr, [sl]
   2d290:	add	sl, sp, #5440	; 0x1540
   2d294:	add	sl, sl, #16
   2d298:	orr	ip, ip, fp, lsl #14
   2d29c:	adc	r7, r7, r5
   2d2a0:	str	ip, [sl]
   2d2a4:	mov	sl, r4
   2d2a8:	b	2d2c0 <__assert_fail@plt+0x1bfd4>
   2d2ac:	nop			; (mov r0, r0)
   2d2b0:	tstmi	r7, #96, 30	; 0x180
   2d2b4:	stmiavc	r5!, {r0, r1, r2, r3, r5, r6, r8, r9, sp, lr}
   2d2b8:	mvnsge	sl, r2, ror fp
   2d2bc:	strbhi	r7, [r8], #2068	; 0x814
   2d2c0:	adds	r4, r6, r0
   2d2c4:	adc	r5, r7, r1
   2d2c8:	ldrd	r0, [sp, #176]	; 0xb0
   2d2cc:	lsr	ip, fp, #18
   2d2d0:	str	ip, [sp, #40]	; 0x28
   2d2d4:	lsl	ip, r1, #30
   2d2d8:	add	r1, sp, #5440	; 0x1540
   2d2dc:	lsr	lr, fp, #14
   2d2e0:	add	r1, r1, #12
   2d2e4:	orr	lr, lr, sl, lsl #18
   2d2e8:	str	lr, [r1]
   2d2ec:	ldr	r1, [sp, #40]	; 0x28
   2d2f0:	strd	r4, [sp, #144]	; 0x90
   2d2f4:	orr	lr, r1, sl, lsl #14
   2d2f8:	add	r1, sp, #5440	; 0x1540
   2d2fc:	add	r1, r1, #20
   2d300:	lsl	r4, fp, #23
   2d304:	str	lr, [r1]
   2d308:	ldrd	r6, [sp, #16]
   2d30c:	orr	lr, r4, sl, lsr #9
   2d310:	lsr	r5, r0, #28
   2d314:	add	r4, sp, #5440	; 0x1540
   2d318:	ldrd	r0, [sp, #104]	; 0x68
   2d31c:	add	r4, r4, #28
   2d320:	str	lr, [r4]
   2d324:	eor	r0, r0, r6
   2d328:	eor	r1, r1, r7
   2d32c:	ldrd	r6, [sp, #176]	; 0xb0
   2d330:	add	r4, sp, #5440	; 0x1540
   2d334:	add	r4, r4, #32
   2d338:	orr	r5, r5, r7, lsl #4
   2d33c:	str	r5, [r4]
   2d340:	add	r4, sp, #5440	; 0x1540
   2d344:	add	r4, r4, #44	; 0x2c
   2d348:	orr	ip, ip, r6, lsr #2
   2d34c:	str	ip, [r4]
   2d350:	sub	r3, pc, #160	; 0xa0
   2d354:	ldrd	r2, [r3]
   2d358:	ldrd	r4, [sp, #144]	; 0x90
   2d35c:	lsl	lr, sl, #23
   2d360:	ldrd	sl, [sp, #184]	; 0xb8
   2d364:	adds	r4, r4, r2
   2d368:	mov	r2, r4
   2d36c:	mov	r4, sl
   2d370:	and	r4, r4, r0
   2d374:	mov	r0, r4
   2d378:	add	r4, sp, #5440	; 0x1540
   2d37c:	add	r4, r4, #24
   2d380:	orr	lr, lr, fp, lsr #9
   2d384:	str	lr, [r4]
   2d388:	add	lr, sp, #5440	; 0x1540
   2d38c:	lsr	ip, r7, #28
   2d390:	add	lr, lr, #36	; 0x24
   2d394:	adc	r5, r5, r3
   2d398:	orr	ip, ip, r6, lsl #4
   2d39c:	str	ip, [lr]
   2d3a0:	mov	r3, r5
   2d3a4:	ldr	ip, [sp, #24]
   2d3a8:	mov	r5, fp
   2d3ac:	and	r5, r5, r1
   2d3b0:	mov	r1, r5
   2d3b4:	lsl	r5, r6, #30
   2d3b8:	lsr	lr, ip, #1
   2d3bc:	orr	ip, r5, r7, lsr #2
   2d3c0:	add	r5, sp, #5440	; 0x1540
   2d3c4:	add	r5, r5, #40	; 0x28
   2d3c8:	lsl	r4, r7, #25
   2d3cc:	str	ip, [r5]
   2d3d0:	orr	ip, r4, r6, lsr #7
   2d3d4:	add	r4, sp, #5440	; 0x1540
   2d3d8:	add	r4, r4, #52	; 0x34
   2d3dc:	mov	r5, r7
   2d3e0:	str	ip, [r4]
   2d3e4:	mov	r4, r6
   2d3e8:	lsl	ip, r6, #25
   2d3ec:	ldrd	r6, [sp, #208]	; 0xd0
   2d3f0:	adds	r6, r6, r2
   2d3f4:	adc	r7, r7, r3
   2d3f8:	add	r3, sp, #5440	; 0x1540
   2d3fc:	strd	r6, [sp, #152]	; 0x98
   2d400:	ldrd	r6, [sp, #104]	; 0x68
   2d404:	add	r3, r3, #8
   2d408:	eor	r6, r6, r0
   2d40c:	eor	r7, r7, r1
   2d410:	ldrd	r0, [sp, #24]
   2d414:	strd	r6, [sp, #40]	; 0x28
   2d418:	ldrd	r6, [r3]
   2d41c:	add	r3, sp, #5440	; 0x1540
   2d420:	add	r3, r3, #16
   2d424:	ldrd	sl, [r3]
   2d428:	add	r3, sp, #5440	; 0x1540
   2d42c:	add	r3, r3, #56	; 0x38
   2d430:	orr	lr, lr, r1, lsl #31
   2d434:	str	lr, [r3]
   2d438:	lsr	lr, r0, #8
   2d43c:	add	r3, sp, #5504	; 0x1580
   2d440:	orr	lr, lr, r1, lsl #24
   2d444:	str	lr, [r3]
   2d448:	ldrd	r2, [sp, #88]	; 0x58
   2d44c:	eor	r7, r7, fp
   2d450:	mov	fp, r5
   2d454:	orr	r3, r3, r5
   2d458:	mov	r5, r3
   2d45c:	add	r3, sp, #5440	; 0x1540
   2d460:	add	r3, r3, #48	; 0x30
   2d464:	orr	ip, ip, fp, lsr #7
   2d468:	orr	r2, r2, r4
   2d46c:	lsr	lr, r0, #7
   2d470:	str	ip, [r3]
   2d474:	mov	r4, r2
   2d478:	lsr	ip, r1, #1
   2d47c:	ldrd	r2, [sp, #152]	; 0x98
   2d480:	ldrd	r0, [sp, #40]	; 0x28
   2d484:	str	lr, [sp, #920]	; 0x398
   2d488:	add	lr, sp, #5440	; 0x1540
   2d48c:	adds	r2, r2, r0
   2d490:	adc	r3, r3, r1
   2d494:	add	r1, sp, #5440	; 0x1540
   2d498:	add	r1, r1, #24
   2d49c:	eor	r6, r6, sl
   2d4a0:	ldrd	r0, [r1]
   2d4a4:	add	lr, lr, #40	; 0x28
   2d4a8:	ldrd	sl, [lr]
   2d4ac:	eor	r1, r1, r7
   2d4b0:	mov	r7, r1
   2d4b4:	add	r1, sp, #5440	; 0x1540
   2d4b8:	add	r1, r1, #32
   2d4bc:	eor	r0, r0, r6
   2d4c0:	mov	r6, r0
   2d4c4:	ldrd	r0, [r1]
   2d4c8:	and	r4, r4, r8
   2d4cc:	and	r5, r5, r9
   2d4d0:	eor	r0, r0, sl
   2d4d4:	eor	r1, r1, fp
   2d4d8:	ldrd	sl, [sp, #24]
   2d4dc:	strd	r0, [sp, #152]	; 0x98
   2d4e0:	add	r1, sp, #5440	; 0x1540
   2d4e4:	add	r1, r1, #60	; 0x3c
   2d4e8:	orr	ip, ip, sl, lsl #31
   2d4ec:	str	ip, [r1]
   2d4f0:	add	r1, sp, #5504	; 0x1580
   2d4f4:	lsr	ip, fp, #8
   2d4f8:	add	r1, r1, #4
   2d4fc:	orr	ip, ip, sl, lsl #24
   2d500:	str	ip, [r1]
   2d504:	ldr	ip, [sp, #920]	; 0x398
   2d508:	adds	r0, r6, r2
   2d50c:	orr	ip, ip, fp, lsl #25
   2d510:	str	ip, [sp, #920]	; 0x398
   2d514:	adc	r1, r7, r3
   2d518:	ldrd	r2, [sp, #176]	; 0xb0
   2d51c:	ldrd	r6, [sp, #88]	; 0x58
   2d520:	strd	r0, [sp, #40]	; 0x28
   2d524:	ldrd	r0, [sp, #152]	; 0x98
   2d528:	and	r7, r7, r3
   2d52c:	add	r3, sp, #5440	; 0x1540
   2d530:	add	r3, r3, #48	; 0x30
   2d534:	and	r6, r6, r2
   2d538:	ldrd	r2, [r3]
   2d53c:	ldrd	sl, [sp, #192]	; 0xc0
   2d540:	eor	r0, r0, r2
   2d544:	orr	r2, r6, r4
   2d548:	mov	r4, r2
   2d54c:	add	r2, sp, #5504	; 0x1580
   2d550:	lsr	ip, sl, #19
   2d554:	add	r2, r2, #8
   2d558:	orr	ip, ip, fp, lsl #13
   2d55c:	str	ip, [r2]
   2d560:	eor	r1, r1, r3
   2d564:	add	r2, sp, #5504	; 0x1580
   2d568:	orr	r3, r7, r5
   2d56c:	mov	r5, r3
   2d570:	add	r2, r2, #20
   2d574:	lsl	r3, fp, #3
   2d578:	orr	r3, r3, sl, lsr #29
   2d57c:	str	r3, [r2]
   2d580:	add	r3, sp, #5440	; 0x1540
   2d584:	add	ip, sp, #5504	; 0x1580
   2d588:	add	r3, r3, #56	; 0x38
   2d58c:	mov	r7, fp
   2d590:	mov	r6, sl
   2d594:	lsr	lr, sl, #6
   2d598:	ldrd	r2, [r3]
   2d59c:	ldrd	sl, [ip]
   2d5a0:	str	lr, [sp, #928]	; 0x3a0
   2d5a4:	ldr	lr, [sp, #28]
   2d5a8:	eor	r2, r2, sl
   2d5ac:	eor	r3, r3, fp
   2d5b0:	ldrd	sl, [sp, #40]	; 0x28
   2d5b4:	strd	r2, [sp, #152]	; 0x98
   2d5b8:	ldr	r3, [sp, #928]	; 0x3a0
   2d5bc:	lsr	lr, lr, #7
   2d5c0:	orr	r3, r3, r7, lsl #26
   2d5c4:	str	r3, [sp, #928]	; 0x3a0
   2d5c8:	ldrd	r2, [sp, #64]	; 0x40
   2d5cc:	str	lr, [sp, #924]	; 0x39c
   2d5d0:	adds	sl, sl, r2
   2d5d4:	adc	fp, fp, r3
   2d5d8:	mov	r2, sl
   2d5dc:	mov	r3, fp
   2d5e0:	adds	r4, r4, r0
   2d5e4:	strd	r2, [sp, #208]	; 0xd0
   2d5e8:	lsr	r2, r7, #19
   2d5ec:	orr	ip, r2, r6, lsl #13
   2d5f0:	add	r2, sp, #5504	; 0x1580
   2d5f4:	add	r2, r2, #12
   2d5f8:	str	ip, [r2]
   2d5fc:	add	r2, sp, #5504	; 0x1580
   2d600:	lsl	r3, r6, #3
   2d604:	add	r2, r2, #16
   2d608:	orr	r3, r3, r7, lsr #29
   2d60c:	str	r3, [r2]
   2d610:	lsr	r3, r7, #6
   2d614:	str	r3, [sp, #932]	; 0x3a4
   2d618:	ldrd	r2, [sp, #40]	; 0x28
   2d61c:	adc	r5, r5, r1
   2d620:	add	r1, sp, #920	; 0x398
   2d624:	adds	r2, r2, r4
   2d628:	adc	r3, r3, r5
   2d62c:	ldrd	sl, [r1]
   2d630:	ldrd	r0, [sp, #152]	; 0x98
   2d634:	strd	r2, [sp, #64]	; 0x40
   2d638:	ldrd	r4, [sp, #112]	; 0x70
   2d63c:	add	r3, sp, #5504	; 0x1580
   2d640:	add	r3, r3, #8
   2d644:	eor	sl, sl, r0
   2d648:	eor	fp, fp, r1
   2d64c:	adds	r4, r4, sl
   2d650:	mov	r1, fp
   2d654:	ldrd	sl, [r3]
   2d658:	add	r3, sp, #5504	; 0x1580
   2d65c:	add	r3, r3, #16
   2d660:	ldrd	r6, [r3]
   2d664:	add	r3, sp, #928	; 0x3a0
   2d668:	adc	r5, r5, r1
   2d66c:	eor	sl, sl, r6
   2d670:	eor	fp, fp, r7
   2d674:	mov	r0, r4
   2d678:	ldrd	r6, [sp, #208]	; 0xd0
   2d67c:	mov	r1, r5
   2d680:	strd	sl, [sp, #40]	; 0x28
   2d684:	ldrd	r4, [sp, #128]	; 0x80
   2d688:	ldrd	sl, [r3]
   2d68c:	ldrd	r2, [sp, #40]	; 0x28
   2d690:	adds	r4, r4, r0
   2d694:	mov	r0, r4
   2d698:	eor	r2, r2, sl
   2d69c:	mov	r4, r2
   2d6a0:	add	r2, sp, #5504	; 0x1580
   2d6a4:	lsr	lr, r6, #14
   2d6a8:	adc	r5, r5, r1
   2d6ac:	eor	r3, r3, fp
   2d6b0:	add	r2, r2, #24
   2d6b4:	mov	r1, r5
   2d6b8:	mov	r5, r3
   2d6bc:	orr	r3, lr, r7, lsl #18
   2d6c0:	str	r3, [r2]
   2d6c4:	add	r2, sp, #5504	; 0x1580
   2d6c8:	lsr	ip, r6, #18
   2d6cc:	add	r2, r2, #32
   2d6d0:	orr	r3, ip, r7, lsl #14
   2d6d4:	str	r3, [r2]
   2d6d8:	adds	r2, r0, r4
   2d6dc:	adc	r3, r1, r5
   2d6e0:	ldrd	r0, [sp, #64]	; 0x40
   2d6e4:	mov	sl, r6
   2d6e8:	lsr	lr, r7, #14
   2d6ec:	lsl	ip, r1, #30
   2d6f0:	add	r1, sp, #5504	; 0x1580
   2d6f4:	add	r1, r1, #28
   2d6f8:	orr	lr, lr, sl, lsl #18
   2d6fc:	str	lr, [r1]
   2d700:	add	r1, sp, #5504	; 0x1580
   2d704:	lsr	r6, r7, #18
   2d708:	add	r1, r1, #36	; 0x24
   2d70c:	orr	lr, r6, sl, lsl #14
   2d710:	str	lr, [r1]
   2d714:	mov	fp, r7
   2d718:	lsl	r5, r7, #23
   2d71c:	lsr	r4, r0, #28
   2d720:	ldrd	r6, [sp, #16]
   2d724:	ldrd	r0, [sp, #184]	; 0xb8
   2d728:	orr	lr, r5, sl, lsr #9
   2d72c:	add	r5, sp, #5504	; 0x1580
   2d730:	eor	r0, r0, r6
   2d734:	eor	r1, r1, r7
   2d738:	ldrd	r6, [sp, #64]	; 0x40
   2d73c:	add	r5, r5, #44	; 0x2c
   2d740:	str	lr, [r5]
   2d744:	orr	r5, r4, r7, lsl #4
   2d748:	add	r4, sp, #5504	; 0x1580
   2d74c:	add	r4, r4, #48	; 0x30
   2d750:	str	r5, [r4]
   2d754:	add	r4, sp, #5504	; 0x1580
   2d758:	add	r4, r4, #60	; 0x3c
   2d75c:	orr	ip, ip, r6, lsr #2
   2d760:	str	ip, [r4]
   2d764:	add	r5, pc, #868	; 0x364
   2d768:	ldrd	r4, [r5]
   2d76c:	strd	r2, [sp, #112]	; 0x70
   2d770:	lsl	lr, sl, #23
   2d774:	adds	r4, r4, r2
   2d778:	adc	r5, r5, r3
   2d77c:	mov	r3, r5
   2d780:	mov	r5, fp
   2d784:	ldr	fp, [sp, #48]	; 0x30
   2d788:	mov	r2, r4
   2d78c:	mov	r4, sl
   2d790:	lsr	fp, fp, #7
   2d794:	and	r4, r4, r0
   2d798:	str	fp, [sp, #936]	; 0x3a8
   2d79c:	ldr	fp, [sp, #212]	; 0xd4
   2d7a0:	mov	r0, r4
   2d7a4:	add	r4, sp, #5504	; 0x1580
   2d7a8:	add	r4, r4, #40	; 0x28
   2d7ac:	orr	lr, lr, fp, lsr #9
   2d7b0:	str	lr, [r4]
   2d7b4:	add	lr, sp, #5504	; 0x1580
   2d7b8:	lsr	ip, r7, #28
   2d7bc:	add	lr, lr, #52	; 0x34
   2d7c0:	orr	ip, ip, r6, lsl #4
   2d7c4:	str	ip, [lr]
   2d7c8:	ldr	ip, [sp, #48]	; 0x30
   2d7cc:	and	r5, r5, r1
   2d7d0:	mov	r1, r5
   2d7d4:	lsl	r5, r6, #30
   2d7d8:	lsr	lr, ip, #1
   2d7dc:	orr	ip, r5, r7, lsr #2
   2d7e0:	add	r5, sp, #5504	; 0x1580
   2d7e4:	add	r5, r5, #56	; 0x38
   2d7e8:	lsl	r4, r7, #25
   2d7ec:	str	ip, [r5]
   2d7f0:	orr	ip, r4, r6, lsr #7
   2d7f4:	add	r4, sp, #5568	; 0x15c0
   2d7f8:	add	r4, r4, #4
   2d7fc:	str	ip, [r4]
   2d800:	lsl	ip, r6, #25
   2d804:	ldrd	r6, [sp, #104]	; 0x68
   2d808:	add	r4, sp, #5504	; 0x1580
   2d80c:	add	r4, r4, #24
   2d810:	adds	r6, r6, r2
   2d814:	adc	r7, r7, r3
   2d818:	mov	r2, r6
   2d81c:	mov	r3, r7
   2d820:	ldrd	r6, [sp, #16]
   2d824:	ldrd	sl, [r4]
   2d828:	add	r4, sp, #5504	; 0x1580
   2d82c:	add	r4, r4, #32
   2d830:	eor	r6, r6, r0
   2d834:	eor	r7, r7, r1
   2d838:	mov	r0, r6
   2d83c:	mov	r1, r7
   2d840:	ldrd	r6, [r4]
   2d844:	add	r4, sp, #5568	; 0x15c0
   2d848:	add	r4, r4, #8
   2d84c:	eor	sl, sl, r6
   2d850:	eor	fp, fp, r7
   2d854:	adds	r2, r2, r0
   2d858:	strd	sl, [sp, #40]	; 0x28
   2d85c:	ldrd	sl, [sp, #48]	; 0x30
   2d860:	adc	r3, r3, r1
   2d864:	add	r1, sp, #5504	; 0x1580
   2d868:	orr	lr, lr, fp, lsl #31
   2d86c:	str	lr, [r4]
   2d870:	add	r4, sp, #5568	; 0x15c0
   2d874:	lsr	lr, sl, #8
   2d878:	add	r4, r4, #16
   2d87c:	orr	lr, lr, fp, lsl #24
   2d880:	ldrd	r6, [sp, #64]	; 0x40
   2d884:	str	lr, [r4]
   2d888:	add	r1, r1, #40	; 0x28
   2d88c:	ldrd	r4, [sp, #176]	; 0xb0
   2d890:	ldr	lr, [sp, #936]	; 0x3a8
   2d894:	orr	ip, ip, r7, lsr #7
   2d898:	orr	lr, lr, fp, lsl #25
   2d89c:	ldrd	sl, [r1]
   2d8a0:	ldrd	r0, [sp, #40]	; 0x28
   2d8a4:	orr	r5, r5, r7
   2d8a8:	orr	r4, r4, r6
   2d8ac:	eor	r1, r1, fp
   2d8b0:	mov	r7, r1
   2d8b4:	add	r1, sp, #5504	; 0x1580
   2d8b8:	add	r1, r1, #48	; 0x30
   2d8bc:	eor	r0, r0, sl
   2d8c0:	ldrd	sl, [r1]
   2d8c4:	add	r1, sp, #5504	; 0x1580
   2d8c8:	add	r1, r1, #56	; 0x38
   2d8cc:	mov	r6, r0
   2d8d0:	ldrd	r0, [r1]
   2d8d4:	str	lr, [sp, #936]	; 0x3a8
   2d8d8:	add	lr, sp, #5568	; 0x15c0
   2d8dc:	eor	sl, sl, r0
   2d8e0:	eor	fp, fp, r1
   2d8e4:	mov	r0, sl
   2d8e8:	mov	r1, fp
   2d8ec:	ldrd	sl, [sp, #88]	; 0x58
   2d8f0:	str	ip, [lr]
   2d8f4:	ldr	ip, [sp, #52]	; 0x34
   2d8f8:	and	sl, sl, r4
   2d8fc:	and	fp, fp, r5
   2d900:	ldrd	r4, [sp, #48]	; 0x30
   2d904:	add	lr, sp, #5568	; 0x15c0
   2d908:	add	lr, lr, #12
   2d90c:	lsr	ip, ip, #1
   2d910:	orr	ip, ip, r4, lsl #31
   2d914:	str	ip, [lr]
   2d918:	add	lr, sp, #5568	; 0x15c0
   2d91c:	strd	sl, [sp, #104]	; 0x68
   2d920:	lsr	ip, r5, #8
   2d924:	ldrd	sl, [sp, #144]	; 0x90
   2d928:	add	lr, lr, #20
   2d92c:	orr	ip, ip, r4, lsl #24
   2d930:	adds	r4, r6, r2
   2d934:	str	ip, [lr]
   2d938:	lsr	lr, r5, #7
   2d93c:	adc	r5, r7, r3
   2d940:	str	lr, [sp, #940]	; 0x3ac
   2d944:	ldrd	r6, [sp, #64]	; 0x40
   2d948:	lsr	lr, sl, #6
   2d94c:	ldrd	r2, [sp, #176]	; 0xb0
   2d950:	str	lr, [sp, #944]	; 0x3b0
   2d954:	strd	r4, [sp, #40]	; 0x28
   2d958:	add	lr, sp, #5568	; 0x15c0
   2d95c:	ldrd	r4, [sp, #104]	; 0x68
   2d960:	and	r2, r2, r6
   2d964:	and	r3, r3, r7
   2d968:	lsr	ip, sl, #19
   2d96c:	ldrd	r6, [sp, #144]	; 0x90
   2d970:	ldrd	sl, [lr]
   2d974:	orr	r4, r4, r2
   2d978:	add	r2, sp, #5568	; 0x15c0
   2d97c:	add	r2, r2, #24
   2d980:	eor	sl, sl, r0
   2d984:	eor	fp, fp, r1
   2d988:	orr	ip, ip, r7, lsl #13
   2d98c:	ldrd	r0, [sp, #40]	; 0x28
   2d990:	str	ip, [r2]
   2d994:	ldr	ip, [sp, #944]	; 0x3b0
   2d998:	adds	r0, r0, r8
   2d99c:	orr	ip, ip, r7, lsl #26
   2d9a0:	adc	r1, r1, r9
   2d9a4:	str	ip, [sp, #944]	; 0x3b0
   2d9a8:	add	ip, sp, #5568	; 0x15c0
   2d9ac:	add	ip, ip, #8
   2d9b0:	orr	r5, r5, r3
   2d9b4:	strd	r0, [sp, #216]	; 0xd8
   2d9b8:	add	r2, sp, #5568	; 0x15c0
   2d9bc:	adds	r0, sl, r4
   2d9c0:	adc	r1, fp, r5
   2d9c4:	lsl	r3, r7, #3
   2d9c8:	ldrd	sl, [ip]
   2d9cc:	add	r2, r2, #36	; 0x24
   2d9d0:	add	ip, sp, #5568	; 0x15c0
   2d9d4:	orr	r3, r3, r6, lsr #29
   2d9d8:	add	ip, ip, #16
   2d9dc:	str	r3, [r2]
   2d9e0:	lsr	r2, r7, #19
   2d9e4:	ldrd	r8, [ip]
   2d9e8:	orr	ip, r2, r6, lsl #13
   2d9ec:	add	r2, sp, #5568	; 0x15c0
   2d9f0:	add	r2, r2, #28
   2d9f4:	str	ip, [r2]
   2d9f8:	add	r2, sp, #5568	; 0x15c0
   2d9fc:	lsl	r3, r6, #3
   2da00:	add	r2, r2, #32
   2da04:	orr	r3, r3, r7, lsr #29
   2da08:	str	r3, [r2]
   2da0c:	add	r3, sp, #936	; 0x3a8
   2da10:	eor	sl, sl, r8
   2da14:	eor	fp, fp, r9
   2da18:	mov	r8, sl
   2da1c:	mov	r9, fp
   2da20:	ldrd	sl, [r3]
   2da24:	lsr	r3, r7, #6
   2da28:	str	r3, [sp, #948]	; 0x3b4
   2da2c:	ldrd	r2, [sp, #40]	; 0x28
   2da30:	eor	sl, sl, r8
   2da34:	eor	fp, fp, r9
   2da38:	adds	r2, r2, r0
   2da3c:	adc	r3, r3, r1
   2da40:	mov	r7, r3
   2da44:	add	r3, sp, #5568	; 0x15c0
   2da48:	add	r3, r3, #24
   2da4c:	mov	r8, sl
   2da50:	mov	r9, fp
   2da54:	ldrd	sl, [r3]
   2da58:	add	r3, sp, #5568	; 0x15c0
   2da5c:	add	r3, r3, #32
   2da60:	mov	r6, r2
   2da64:	ldrd	r0, [r3]
   2da68:	ldrd	r4, [sp, #24]
   2da6c:	strd	r6, [sp, #152]	; 0x98
   2da70:	add	r6, sp, #944	; 0x3b0
   2da74:	adds	r4, r4, r8
   2da78:	eor	sl, sl, r0
   2da7c:	eor	fp, fp, r1
   2da80:	mov	r0, sl
   2da84:	mov	r1, fp
   2da88:	adc	r5, r5, r9
   2da8c:	ldrd	sl, [r6]
   2da90:	mov	r8, r4
   2da94:	mov	r9, r5
   2da98:	ldrd	r6, [sp, #56]	; 0x38
   2da9c:	ldrd	r4, [sp, #216]	; 0xd8
   2daa0:	eor	sl, sl, r0
   2daa4:	mov	r0, sl
   2daa8:	adds	r6, r6, r8
   2daac:	mov	sl, r4
   2dab0:	lsr	lr, r4, #14
   2dab4:	lsr	ip, r4, #18
   2dab8:	eor	fp, fp, r1
   2dabc:	add	r4, sp, #5568	; 0x15c0
   2dac0:	mov	r1, fp
   2dac4:	adc	r7, r7, r9
   2dac8:	b	2dae0 <__assert_fail@plt+0x1c7f4>
   2dacc:	nop			; (mov r0, r0)
   2dad0:	bne	193c288 <optarg@@GLIBC_2.4+0x18ea0e0>
   2dad4:	sfmhi	f0, 2, [r7], {8}
   2dad8:	cmncs	r3, #40, 28	; 0x280
   2dadc:	ldrshtls	pc, [lr], sl	; <UNPREDICTABLE>
   2dae0:	add	r4, r4, #40	; 0x28
   2dae4:	adds	r6, r6, r0
   2dae8:	adc	r7, r7, r1
   2daec:	orr	lr, lr, r5, lsl #18
   2daf0:	add	r1, sp, #5568	; 0x15c0
   2daf4:	str	lr, [r4]
   2daf8:	add	r1, r1, #44	; 0x2c
   2dafc:	lsr	lr, r5, #14
   2db00:	add	r4, sp, #5568	; 0x15c0
   2db04:	orr	lr, lr, sl, lsl #18
   2db08:	add	r4, r4, #48	; 0x30
   2db0c:	str	lr, [r1]
   2db10:	orr	ip, ip, r5, lsl #14
   2db14:	add	r1, sp, #5568	; 0x15c0
   2db18:	str	ip, [r4]
   2db1c:	add	r1, r1, #52	; 0x34
   2db20:	lsr	r4, r5, #18
   2db24:	strd	r6, [sp, #104]	; 0x68
   2db28:	ldrd	r8, [sp, #152]	; 0x98
   2db2c:	orr	lr, r4, sl, lsl #14
   2db30:	lsl	r6, r5, #23
   2db34:	add	r4, sp, #5568	; 0x15c0
   2db38:	str	lr, [r1]
   2db3c:	add	r4, r4, #60	; 0x3c
   2db40:	orr	lr, r6, sl, lsr #9
   2db44:	ldrd	r6, [sp, #152]	; 0x98
   2db48:	str	lr, [r4]
   2db4c:	mov	fp, r5
   2db50:	add	r4, sp, #5632	; 0x1600
   2db54:	lsr	r5, r8, #28
   2db58:	orr	r5, r5, r7, lsl #4
   2db5c:	str	r5, [r4]
   2db60:	ldrd	r0, [sp, #184]	; 0xb8
   2db64:	lsl	ip, r9, #30
   2db68:	add	r4, sp, #5632	; 0x1600
   2db6c:	ldrd	r8, [sp, #208]	; 0xd0
   2db70:	add	r4, r4, #12
   2db74:	orr	ip, ip, r6, lsr #2
   2db78:	str	ip, [r4]
   2db7c:	sub	r3, pc, #172	; 0xac
   2db80:	ldrd	r2, [r3]
   2db84:	mov	r4, r6
   2db88:	eor	r1, r1, r9
   2db8c:	lsr	ip, r7, #28
   2db90:	mov	r9, fp
   2db94:	mov	fp, r7
   2db98:	ldrd	r6, [sp, #104]	; 0x68
   2db9c:	eor	r0, r0, r8
   2dba0:	lsl	r5, r4, #30
   2dba4:	adds	r6, r6, r2
   2dba8:	adc	r7, r7, r3
   2dbac:	mov	r3, r7
   2dbb0:	mov	r7, r9
   2dbb4:	ldrd	r8, [sp, #80]	; 0x50
   2dbb8:	and	r7, r7, r1
   2dbbc:	mov	r2, r6
   2dbc0:	mov	r1, r7
   2dbc4:	mov	r6, sl
   2dbc8:	mov	r7, fp
   2dbcc:	lsr	fp, r8, #7
   2dbd0:	and	r6, r6, r0
   2dbd4:	str	fp, [sp, #952]	; 0x3b8
   2dbd8:	ldr	fp, [sp, #220]	; 0xdc
   2dbdc:	mov	r0, r6
   2dbe0:	mov	r6, r4
   2dbe4:	add	r4, sp, #5568	; 0x15c0
   2dbe8:	lsl	lr, sl, #23
   2dbec:	add	r4, r4, #56	; 0x38
   2dbf0:	orr	lr, lr, fp, lsr #9
   2dbf4:	str	lr, [r4]
   2dbf8:	add	lr, sp, #5632	; 0x1600
   2dbfc:	add	lr, lr, #4
   2dc00:	orr	ip, ip, r6, lsl #4
   2dc04:	str	ip, [lr]
   2dc08:	orr	ip, r5, r7, lsr #2
   2dc0c:	add	r5, sp, #5632	; 0x1600
   2dc10:	add	r5, r5, #8
   2dc14:	lsl	r4, r7, #25
   2dc18:	str	ip, [r5]
   2dc1c:	orr	ip, r4, r6, lsr #7
   2dc20:	add	r4, sp, #5632	; 0x1600
   2dc24:	add	r4, r4, #20
   2dc28:	str	ip, [r4]
   2dc2c:	lsl	ip, r6, #25
   2dc30:	ldrd	r6, [sp, #16]
   2dc34:	lsr	lr, r8, #1
   2dc38:	orr	lr, lr, r9, lsl #31
   2dc3c:	adds	r6, r6, r2
   2dc40:	adc	r7, r7, r3
   2dc44:	mov	r2, r6
   2dc48:	mov	r3, r7
   2dc4c:	ldrd	r6, [sp, #184]	; 0xb8
   2dc50:	eor	r7, r7, r1
   2dc54:	add	r1, sp, #5568	; 0x15c0
   2dc58:	eor	r6, r6, r0
   2dc5c:	add	r1, r1, #40	; 0x28
   2dc60:	strd	r6, [sp, #16]
   2dc64:	ldrd	sl, [r1]
   2dc68:	add	r1, sp, #5568	; 0x15c0
   2dc6c:	add	r1, r1, #48	; 0x30
   2dc70:	ldrd	r4, [sp, #64]	; 0x40
   2dc74:	ldrd	r0, [r1]
   2dc78:	eor	fp, fp, r1
   2dc7c:	add	r1, sp, #5632	; 0x1600
   2dc80:	add	r1, r1, #24
   2dc84:	str	lr, [r1]
   2dc88:	add	r1, sp, #5632	; 0x1600
   2dc8c:	lsr	lr, r8, #8
   2dc90:	add	r1, r1, #32
   2dc94:	orr	lr, lr, r9, lsl #24
   2dc98:	str	lr, [r1]
   2dc9c:	ldr	lr, [sp, #952]	; 0x3b8
   2dca0:	eor	sl, sl, r0
   2dca4:	orr	lr, lr, r9, lsl #25
   2dca8:	ldrd	r0, [sp, #152]	; 0x98
   2dcac:	str	lr, [sp, #952]	; 0x3b8
   2dcb0:	add	lr, sp, #5632	; 0x1600
   2dcb4:	add	lr, lr, #16
   2dcb8:	orr	ip, ip, r1, lsr #7
   2dcbc:	str	ip, [lr]
   2dcc0:	add	lr, sp, #5568	; 0x15c0
   2dcc4:	add	lr, lr, #56	; 0x38
   2dcc8:	mov	r6, sl
   2dccc:	mov	r7, fp
   2dcd0:	ldrd	sl, [lr]
   2dcd4:	lsr	ip, r9, #1
   2dcd8:	add	lr, sp, #5632	; 0x1600
   2dcdc:	ldrd	r8, [sp, #16]
   2dce0:	eor	sl, sl, r6
   2dce4:	eor	fp, fp, r7
   2dce8:	mov	r6, sl
   2dcec:	mov	r7, fp
   2dcf0:	ldrd	sl, [lr]
   2dcf4:	add	lr, sp, #5632	; 0x1600
   2dcf8:	adds	r8, r8, r2
   2dcfc:	add	lr, lr, #8
   2dd00:	adc	r9, r9, r3
   2dd04:	mov	r2, r8
   2dd08:	mov	r3, r9
   2dd0c:	ldrd	r8, [lr]
   2dd10:	orr	r4, r4, r0
   2dd14:	orr	r5, r5, r1
   2dd18:	eor	sl, sl, r8
   2dd1c:	eor	fp, fp, r9
   2dd20:	ldrd	r8, [sp, #176]	; 0xb0
   2dd24:	add	lr, sp, #5632	; 0x1600
   2dd28:	adds	r6, r6, r2
   2dd2c:	and	r8, r8, r4
   2dd30:	and	r9, r9, r5
   2dd34:	mov	r4, r8
   2dd38:	mov	r5, r9
   2dd3c:	ldrd	r8, [sp, #80]	; 0x50
   2dd40:	add	lr, lr, #28
   2dd44:	adc	r7, r7, r3
   2dd48:	orr	ip, ip, r8, lsl #31
   2dd4c:	ldrd	r2, [sp, #64]	; 0x40
   2dd50:	str	ip, [lr]
   2dd54:	strd	sl, [sp, #16]
   2dd58:	add	lr, sp, #5632	; 0x1600
   2dd5c:	ldrd	sl, [sp, #112]	; 0x70
   2dd60:	lsr	ip, r9, #8
   2dd64:	add	lr, lr, #36	; 0x24
   2dd68:	orr	ip, ip, r8, lsl #24
   2dd6c:	and	r2, r2, r0
   2dd70:	str	ip, [lr]
   2dd74:	orr	r4, r4, r2
   2dd78:	lsr	lr, r9, #7
   2dd7c:	add	r2, sp, #5632	; 0x1600
   2dd80:	mov	r9, fp
   2dd84:	lsr	ip, sl, #19
   2dd88:	str	lr, [sp, #956]	; 0x3bc
   2dd8c:	add	r2, r2, #40	; 0x28
   2dd90:	lsr	lr, sl, #6
   2dd94:	str	lr, [sp, #960]	; 0x3c0
   2dd98:	orr	ip, ip, r9, lsl #13
   2dd9c:	mov	r8, sl
   2dda0:	str	ip, [r2]
   2dda4:	and	r3, r3, r1
   2dda8:	ldr	ip, [sp, #960]	; 0x3c0
   2ddac:	add	r1, sp, #5632	; 0x1600
   2ddb0:	add	r2, sp, #5632	; 0x1600
   2ddb4:	orr	r5, r5, r3
   2ddb8:	add	r1, r1, #16
   2ddbc:	lsl	r3, r9, #3
   2ddc0:	add	r2, r2, #52	; 0x34
   2ddc4:	orr	r3, r3, r8, lsr #29
   2ddc8:	orr	ip, ip, r9, lsl #26
   2ddcc:	ldrd	sl, [r1]
   2ddd0:	str	r3, [r2]
   2ddd4:	ldrd	r0, [sp, #16]
   2ddd8:	lsr	r2, r9, #19
   2dddc:	lsl	r3, r8, #3
   2dde0:	str	ip, [sp, #960]	; 0x3c0
   2dde4:	ldrd	r8, [sp, #88]	; 0x58
   2dde8:	add	ip, sp, #5632	; 0x1600
   2ddec:	add	ip, ip, #24
   2ddf0:	adds	r8, r8, r6
   2ddf4:	eor	r0, r0, sl
   2ddf8:	eor	r1, r1, fp
   2ddfc:	ldrd	sl, [ip]
   2de00:	add	ip, sp, #5632	; 0x1600
   2de04:	adc	r9, r9, r7
   2de08:	add	ip, ip, #32
   2de0c:	strd	r8, [sp, #88]	; 0x58
   2de10:	ldrd	r8, [ip]
   2de14:	adds	r0, r0, r4
   2de18:	adc	r1, r1, r5
   2de1c:	eor	sl, sl, r8
   2de20:	eor	fp, fp, r9
   2de24:	mov	r8, sl
   2de28:	mov	r9, fp
   2de2c:	ldrd	sl, [sp, #112]	; 0x70
   2de30:	ldrd	r4, [sp, #48]	; 0x30
   2de34:	orr	ip, r2, sl, lsl #13
   2de38:	add	r2, sp, #5632	; 0x1600
   2de3c:	add	r2, r2, #44	; 0x2c
   2de40:	str	ip, [r2]
   2de44:	add	r2, sp, #5632	; 0x1600
   2de48:	add	r2, r2, #48	; 0x30
   2de4c:	orr	r3, r3, fp, lsr #29
   2de50:	str	r3, [r2]
   2de54:	add	r3, sp, #952	; 0x3b8
   2de58:	ldrd	r2, [r3]
   2de5c:	eor	r2, r2, r8
   2de60:	eor	r3, r3, r9
   2de64:	mov	r8, r2
   2de68:	mov	r9, r3
   2de6c:	adds	r2, r0, r6
   2de70:	lsr	r3, fp, #6
   2de74:	str	r3, [sp, #964]	; 0x3c4
   2de78:	adc	r3, r1, r7
   2de7c:	adds	r4, r4, r8
   2de80:	strd	r2, [sp, #16]
   2de84:	add	r3, sp, #5632	; 0x1600
   2de88:	add	r3, r3, #40	; 0x28
   2de8c:	ldrd	r0, [r3]
   2de90:	add	r3, sp, #5632	; 0x1600
   2de94:	add	r3, r3, #48	; 0x30
   2de98:	mov	r8, r4
   2de9c:	add	r4, sp, #960	; 0x3c0
   2dea0:	ldrd	sl, [r3]
   2dea4:	ldrd	r6, [r4]
   2dea8:	adc	r5, r5, r9
   2deac:	eor	r0, r0, sl
   2deb0:	eor	r1, r1, fp
   2deb4:	eor	r6, r6, r0
   2deb8:	eor	r7, r7, r1
   2debc:	mov	r0, r6
   2dec0:	mov	r1, r7
   2dec4:	ldrd	r6, [sp, #160]	; 0xa0
   2dec8:	ldrd	sl, [sp, #88]	; 0x58
   2decc:	add	r4, sp, #5632	; 0x1600
   2ded0:	adds	r6, r6, r8
   2ded4:	adc	r7, r7, r5
   2ded8:	adds	r6, r6, r0
   2dedc:	adc	r7, r7, r1
   2dee0:	lsr	lr, sl, #14
   2dee4:	strd	r6, [sp, #40]	; 0x28
   2dee8:	ldrd	r6, [sp, #16]
   2deec:	add	r4, r4, #56	; 0x38
   2def0:	mov	r0, sl
   2def4:	orr	lr, lr, fp, lsl #18
   2def8:	lsr	r5, r6, #28
   2defc:	add	r6, sp, #5632	; 0x1600
   2df00:	str	lr, [r4]
   2df04:	lsr	ip, sl, #18
   2df08:	lsr	lr, fp, #14
   2df0c:	add	r4, sp, #5696	; 0x1640
   2df10:	add	r6, r6, #60	; 0x3c
   2df14:	orr	ip, ip, fp, lsl #14
   2df18:	orr	lr, lr, r0, lsl #18
   2df1c:	str	ip, [r4]
   2df20:	ldrd	r8, [sp, #208]	; 0xd0
   2df24:	str	lr, [r6]
   2df28:	lsl	ip, r7, #30
   2df2c:	ldrd	r6, [sp, #216]	; 0xd8
   2df30:	lsl	sl, fp, #23
   2df34:	lsr	r4, fp, #18
   2df38:	str	sl, [sp, #24]
   2df3c:	eor	r6, r6, r8
   2df40:	mov	sl, r0
   2df44:	add	r1, sp, #5696	; 0x1640
   2df48:	orr	lr, r4, r0, lsl #14
   2df4c:	add	r1, r1, #4
   2df50:	mov	r0, r6
   2df54:	add	r4, sp, #5696	; 0x1640
   2df58:	mov	r6, sl
   2df5c:	ldr	sl, [sp, #24]
   2df60:	add	r4, r4, #12
   2df64:	str	lr, [r1]
   2df68:	eor	r7, r7, r9
   2df6c:	orr	lr, sl, r6, lsr #9
   2df70:	str	lr, [r4]
   2df74:	mov	r1, r7
   2df78:	mov	sl, r6
   2df7c:	lsl	lr, r6, #23
   2df80:	ldrd	r6, [sp, #16]
   2df84:	add	r3, pc, #884	; 0x374
   2df88:	ldrd	r2, [r3]
   2df8c:	add	r4, sp, #5696	; 0x1640
   2df90:	orr	ip, ip, r6, lsr #2
   2df94:	add	r6, sp, #5696	; 0x1640
   2df98:	add	r6, r6, #28
   2df9c:	orr	r5, r5, r7, lsl #4
   2dfa0:	str	ip, [r6]
   2dfa4:	lsr	ip, r7, #28
   2dfa8:	ldrd	r6, [sp, #40]	; 0x28
   2dfac:	add	r4, r4, #16
   2dfb0:	str	r5, [r4]
   2dfb4:	adds	r6, r6, r2
   2dfb8:	adc	r7, r7, r3
   2dfbc:	mov	r2, r6
   2dfc0:	mov	r3, r7
   2dfc4:	ldrd	r6, [sp, #32]
   2dfc8:	mov	r4, sl
   2dfcc:	mov	r5, fp
   2dfd0:	lsr	fp, r6, #7
   2dfd4:	and	r4, r4, r0
   2dfd8:	str	fp, [sp, #968]	; 0x3c8
   2dfdc:	ldr	fp, [sp, #92]	; 0x5c
   2dfe0:	mov	r0, r4
   2dfe4:	add	r4, sp, #5696	; 0x1640
   2dfe8:	add	r4, r4, #8
   2dfec:	orr	lr, lr, fp, lsr #9
   2dff0:	and	r5, r5, r1
   2dff4:	mov	r1, r5
   2dff8:	str	lr, [r4]
   2dffc:	ldr	r5, [sp, #16]
   2e000:	ldrd	sl, [sp, #16]
   2e004:	add	lr, sp, #5696	; 0x1640
   2e008:	add	lr, lr, #20
   2e00c:	orr	ip, ip, sl, lsl #4
   2e010:	lsl	r5, r5, #30
   2e014:	str	ip, [lr]
   2e018:	orr	ip, r5, fp, lsr #2
   2e01c:	add	r5, sp, #5696	; 0x1640
   2e020:	add	r5, r5, #24
   2e024:	lsl	r4, fp, #25
   2e028:	str	ip, [r5]
   2e02c:	orr	ip, r4, sl, lsr #7
   2e030:	add	r4, sp, #5696	; 0x1640
   2e034:	lsr	lr, r6, #1
   2e038:	add	r4, r4, #36	; 0x24
   2e03c:	ldrd	r6, [sp, #184]	; 0xb8
   2e040:	str	ip, [r4]
   2e044:	add	r4, sp, #5632	; 0x1600
   2e048:	adds	r6, r6, r2
   2e04c:	add	r4, r4, #56	; 0x38
   2e050:	adc	r7, r7, r3
   2e054:	mov	r2, r6
   2e058:	mov	r3, r7
   2e05c:	mov	r6, r8
   2e060:	mov	r7, r9
   2e064:	ldrd	r8, [r4]
   2e068:	add	r4, sp, #5696	; 0x1640
   2e06c:	lsl	ip, sl, #25
   2e070:	ldrd	sl, [r4]
   2e074:	eor	r6, r6, r0
   2e078:	eor	r7, r7, r1
   2e07c:	eor	r8, r8, sl
   2e080:	eor	r9, r9, fp
   2e084:	mov	r0, r6
   2e088:	mov	r1, r7
   2e08c:	mov	r6, r8
   2e090:	mov	r7, r9
   2e094:	ldrd	r8, [sp, #32]
   2e098:	add	r4, sp, #5696	; 0x1640
   2e09c:	add	r4, r4, #40	; 0x28
   2e0a0:	orr	lr, lr, r9, lsl #31
   2e0a4:	str	lr, [r4]
   2e0a8:	add	r4, sp, #5696	; 0x1640
   2e0ac:	lsr	lr, r8, #8
   2e0b0:	add	r4, r4, #48	; 0x30
   2e0b4:	orr	lr, lr, r9, lsl #24
   2e0b8:	str	lr, [r4]
   2e0bc:	ldr	lr, [sp, #968]	; 0x3c8
   2e0c0:	ldrd	r4, [sp, #152]	; 0x98
   2e0c4:	orr	lr, lr, r9, lsl #25
   2e0c8:	str	lr, [sp, #968]	; 0x3c8
   2e0cc:	ldr	lr, [sp, #20]
   2e0d0:	ldrd	sl, [sp, #16]
   2e0d4:	adds	r2, r2, r0
   2e0d8:	orr	ip, ip, lr, lsr #7
   2e0dc:	add	lr, sp, #5696	; 0x1640
   2e0e0:	add	lr, lr, #32
   2e0e4:	str	ip, [lr]
   2e0e8:	lsr	ip, r9, #1
   2e0ec:	ldrd	r8, [sp, #64]	; 0x40
   2e0f0:	adc	r3, r3, r1
   2e0f4:	orr	sl, sl, r4
   2e0f8:	orr	fp, fp, r5
   2e0fc:	add	r1, sp, #5696	; 0x1640
   2e100:	mov	r4, sl
   2e104:	mov	r5, fp
   2e108:	add	lr, sp, #5696	; 0x1640
   2e10c:	add	r1, r1, #8
   2e110:	add	lr, lr, #24
   2e114:	and	r8, r8, r4
   2e118:	and	r9, r9, r5
   2e11c:	ldrd	r0, [r1]
   2e120:	mov	r4, r8
   2e124:	mov	r5, r9
   2e128:	ldrd	r8, [sp, #32]
   2e12c:	ldrd	sl, [lr]
   2e130:	add	lr, sp, #5696	; 0x1640
   2e134:	add	lr, lr, #44	; 0x2c
   2e138:	orr	ip, ip, r8, lsl #31
   2e13c:	eor	r1, r1, r7
   2e140:	str	ip, [lr]
   2e144:	eor	r0, r0, r6
   2e148:	mov	r7, r1
   2e14c:	add	lr, sp, #5696	; 0x1640
   2e150:	add	r1, sp, #5696	; 0x1640
   2e154:	mov	r6, r0
   2e158:	lsr	ip, r9, #8
   2e15c:	add	lr, lr, #52	; 0x34
   2e160:	add	r1, r1, #16
   2e164:	adds	r6, r6, r2
   2e168:	orr	ip, ip, r8, lsl #24
   2e16c:	adc	r7, r7, r3
   2e170:	str	ip, [lr]
   2e174:	ldrd	r2, [sp, #152]	; 0x98
   2e178:	ldrd	r0, [r1]
   2e17c:	lsr	lr, r9, #7
   2e180:	ldrd	r8, [sp, #16]
   2e184:	eor	r0, r0, sl
   2e188:	eor	r1, r1, fp
   2e18c:	and	r8, r8, r2
   2e190:	ldrd	sl, [sp, #104]	; 0x68
   2e194:	mov	r2, r8
   2e198:	orr	r4, r4, r2
   2e19c:	add	r2, sp, #5696	; 0x1640
   2e1a0:	lsr	ip, sl, #19
   2e1a4:	str	lr, [sp, #972]	; 0x3cc
   2e1a8:	add	r2, r2, #56	; 0x38
   2e1ac:	lsr	lr, sl, #6
   2e1b0:	orr	ip, ip, fp, lsl #13
   2e1b4:	str	lr, [sp, #976]	; 0x3d0
   2e1b8:	and	r9, r9, r3
   2e1bc:	add	lr, sp, #5696	; 0x1640
   2e1c0:	str	ip, [r2]
   2e1c4:	mov	r3, r9
   2e1c8:	add	lr, lr, #32
   2e1cc:	add	r2, sp, #5760	; 0x1680
   2e1d0:	orr	r5, r5, r3
   2e1d4:	add	r2, r2, #4
   2e1d8:	lsl	r3, fp, #3
   2e1dc:	ldrd	r8, [lr]
   2e1e0:	orr	r3, r3, sl, lsr #29
   2e1e4:	str	r3, [r2]
   2e1e8:	add	r3, sp, #5696	; 0x1640
   2e1ec:	add	r3, r3, #40	; 0x28
   2e1f0:	eor	r8, r8, r0
   2e1f4:	eor	r9, r9, r1
   2e1f8:	mov	r0, r8
   2e1fc:	mov	r1, r9
   2e200:	ldrd	r8, [r3]
   2e204:	add	r3, sp, #5696	; 0x1640
   2e208:	add	r3, r3, #48	; 0x30
   2e20c:	ldrd	sl, [r3]
   2e210:	ldr	r3, [sp, #976]	; 0x3d0
   2e214:	eor	r8, r8, sl
   2e218:	eor	r9, r9, fp
   2e21c:	ldrd	sl, [sp, #104]	; 0x68
   2e220:	orr	r3, r3, fp, lsl #26
   2e224:	str	r3, [sp, #976]	; 0x3d0
   2e228:	ldrd	r2, [sp, #176]	; 0xb0
   2e22c:	adds	r2, r2, r6
   2e230:	adc	r3, r3, r7
   2e234:	adds	r4, r4, r0
   2e238:	adc	r5, r5, r1
   2e23c:	add	r1, sp, #968	; 0x3c8
   2e240:	strd	r2, [sp, #176]	; 0xb0
   2e244:	ldrd	r0, [r1]
   2e248:	lsr	r2, fp, #19
   2e24c:	orr	ip, r2, sl, lsl #13
   2e250:	eor	r0, r0, r8
   2e254:	mov	r8, r0
   2e258:	eor	r1, r1, r9
   2e25c:	adds	r0, r4, r6
   2e260:	mov	r9, r1
   2e264:	adc	r1, r5, r7
   2e268:	ldrd	r4, [sp, #80]	; 0x50
   2e26c:	add	r2, sp, #5696	; 0x1640
   2e270:	add	r2, r2, #60	; 0x3c
   2e274:	adds	r4, r4, r8
   2e278:	str	ip, [r2]
   2e27c:	adc	r5, r5, r9
   2e280:	add	r2, sp, #5760	; 0x1680
   2e284:	lsl	r3, sl, #3
   2e288:	orr	r3, r3, fp, lsr #29
   2e28c:	mov	r8, r4
   2e290:	mov	r9, r5
   2e294:	ldrd	r4, [sp, #96]	; 0x60
   2e298:	str	r3, [r2]
   2e29c:	lsr	r3, fp, #6
   2e2a0:	str	r3, [sp, #980]	; 0x3d4
   2e2a4:	add	r3, sp, #5696	; 0x1640
   2e2a8:	adds	r4, r4, r8
   2e2ac:	add	r3, r3, #56	; 0x38
   2e2b0:	mov	r8, r4
   2e2b4:	add	r4, sp, #976	; 0x3d0
   2e2b8:	ldrd	sl, [r2]
   2e2bc:	strd	r0, [sp, #184]	; 0xb8
   2e2c0:	adc	r5, r5, r9
   2e2c4:	ldrd	r0, [r3]
   2e2c8:	mov	r9, r5
   2e2cc:	ldrd	r4, [r4]
   2e2d0:	eor	r0, r0, sl
   2e2d4:	eor	r1, r1, fp
   2e2d8:	ldrd	sl, [sp, #176]	; 0xb0
   2e2dc:	eor	r4, r4, r0
   2e2e0:	mov	r0, r4
   2e2e4:	eor	r5, r5, r1
   2e2e8:	add	r4, sp, #5760	; 0x1680
   2e2ec:	adds	r6, r8, r0
   2e2f0:	mov	r1, r5
   2e2f4:	lsr	lr, sl, #14
   2e2f8:	add	r4, r4, #8
   2e2fc:	b	2e310 <__assert_fail@plt+0x1d024>
   2e300:	cdple	13, 8, cr11, cr2, cr9, {7}
   2e304:	ldrbge	r6, [r0], #-3307	; 0xfffff315
   2e308:	sbclt	r7, r6, #344064	; 0x54000
   2e30c:	mrclt	3, 7, sl, cr9, cr7, {7}
   2e310:	adc	r7, r9, r1
   2e314:	orr	lr, lr, fp, lsl #18
   2e318:	lsl	r1, fp, #23
   2e31c:	mov	r8, sl
   2e320:	str	lr, [r4]
   2e324:	str	r1, [sp, #24]
   2e328:	add	r4, sp, #5760	; 0x1680
   2e32c:	add	r1, sp, #5760	; 0x1680
   2e330:	lsr	ip, sl, #18
   2e334:	lsr	lr, fp, #14
   2e338:	add	r4, r4, #16
   2e33c:	add	r1, r1, #12
   2e340:	orr	ip, ip, fp, lsl #14
   2e344:	orr	lr, lr, r8, lsl #18
   2e348:	str	ip, [r4]
   2e34c:	str	lr, [r1]
   2e350:	lsr	r4, fp, #18
   2e354:	add	r1, sp, #5760	; 0x1680
   2e358:	orr	lr, r4, r8, lsl #14
   2e35c:	add	r1, r1, #20
   2e360:	ldr	r4, [sp, #24]
   2e364:	str	lr, [r1]
   2e368:	orr	lr, r4, r8, lsr #9
   2e36c:	add	r4, sp, #5760	; 0x1680
   2e370:	mov	r9, fp
   2e374:	add	r4, r4, #28
   2e378:	ldrd	sl, [sp, #184]	; 0xb8
   2e37c:	str	lr, [r4]
   2e380:	add	r4, sp, #5760	; 0x1680
   2e384:	lsr	r5, sl, #28
   2e388:	add	r4, r4, #32
   2e38c:	strd	r6, [sp, #80]	; 0x50
   2e390:	ldrd	r0, [sp, #216]	; 0xd8
   2e394:	ldrd	r6, [sp, #88]	; 0x58
   2e398:	orr	r5, r5, fp, lsl #4
   2e39c:	sub	r3, pc, #156	; 0x9c
   2e3a0:	ldrd	r2, [r3]
   2e3a4:	str	r5, [r4]
   2e3a8:	ldrd	r4, [sp, #80]	; 0x50
   2e3ac:	eor	r0, r0, r6
   2e3b0:	lsl	lr, r8, #23
   2e3b4:	mov	r6, r8
   2e3b8:	add	r8, sp, #5760	; 0x1680
   2e3bc:	adds	r4, r4, r2
   2e3c0:	lsl	ip, fp, #30
   2e3c4:	add	r8, r8, #44	; 0x2c
   2e3c8:	orr	ip, ip, sl, lsr #2
   2e3cc:	mov	r2, r4
   2e3d0:	mov	r4, r6
   2e3d4:	eor	r1, r1, r7
   2e3d8:	str	ip, [r8]
   2e3dc:	mov	r7, r9
   2e3e0:	lsr	ip, fp, #28
   2e3e4:	mov	r9, fp
   2e3e8:	and	r4, r4, r0
   2e3ec:	ldr	fp, [sp, #72]	; 0x48
   2e3f0:	mov	r0, r4
   2e3f4:	add	r4, sp, #5760	; 0x1680
   2e3f8:	add	r4, r4, #24
   2e3fc:	adc	r5, r5, r3
   2e400:	orr	lr, lr, r7, lsr #9
   2e404:	lsr	fp, fp, #7
   2e408:	str	fp, [sp, #984]	; 0x3d8
   2e40c:	mov	r8, sl
   2e410:	str	lr, [r4]
   2e414:	mov	r3, r5
   2e418:	add	lr, sp, #5760	; 0x1680
   2e41c:	mov	r5, r7
   2e420:	and	r5, r5, r1
   2e424:	mov	r7, r9
   2e428:	add	lr, lr, #36	; 0x24
   2e42c:	mov	r1, r5
   2e430:	orr	ip, ip, r8, lsl #4
   2e434:	lsl	r5, sl, #30
   2e438:	str	ip, [lr]
   2e43c:	orr	ip, r5, r7, lsr #2
   2e440:	add	r5, sp, #5760	; 0x1680
   2e444:	mov	r6, r8
   2e448:	add	r5, r5, #40	; 0x28
   2e44c:	lsl	r4, r9, #25
   2e450:	str	ip, [r5]
   2e454:	orr	ip, r4, r6, lsr #7
   2e458:	add	r4, sp, #5760	; 0x1680
   2e45c:	add	r4, r4, #52	; 0x34
   2e460:	mov	r5, r7
   2e464:	str	ip, [r4]
   2e468:	mov	r4, r6
   2e46c:	lsl	ip, r6, #25
   2e470:	ldrd	r6, [sp, #208]	; 0xd0
   2e474:	ldrd	r8, [sp, #72]	; 0x48
   2e478:	adds	r6, r6, r2
   2e47c:	adc	r7, r7, r3
   2e480:	add	r3, sp, #5760	; 0x1680
   2e484:	strd	r6, [sp, #24]
   2e488:	ldrd	r6, [sp, #216]	; 0xd8
   2e48c:	add	r3, r3, #8
   2e490:	lsr	lr, r8, #1
   2e494:	eor	r6, r6, r0
   2e498:	eor	r7, r7, r1
   2e49c:	mov	r0, r6
   2e4a0:	mov	r1, r7
   2e4a4:	ldrd	r6, [r3]
   2e4a8:	add	r3, sp, #5760	; 0x1680
   2e4ac:	add	r3, r3, #16
   2e4b0:	ldrd	sl, [r3]
   2e4b4:	add	r3, sp, #5760	; 0x1680
   2e4b8:	add	r3, r3, #56	; 0x38
   2e4bc:	orr	lr, lr, r9, lsl #31
   2e4c0:	str	lr, [r3]
   2e4c4:	lsr	lr, r8, #8
   2e4c8:	add	r3, sp, #5824	; 0x16c0
   2e4cc:	orr	lr, lr, r9, lsl #24
   2e4d0:	str	lr, [r3]
   2e4d4:	ldrd	r2, [sp, #16]
   2e4d8:	eor	r7, r7, fp
   2e4dc:	mov	r8, r4
   2e4e0:	orr	r2, r2, r4
   2e4e4:	orr	r3, r3, r5
   2e4e8:	mov	fp, r9
   2e4ec:	mov	r4, r2
   2e4f0:	mov	r9, r5
   2e4f4:	mov	r5, r3
   2e4f8:	ldrd	r2, [sp, #24]
   2e4fc:	ldr	lr, [sp, #984]	; 0x3d8
   2e500:	orr	ip, ip, r9, lsr #7
   2e504:	adds	r2, r2, r0
   2e508:	adc	r3, r3, r1
   2e50c:	add	r1, sp, #5760	; 0x1680
   2e510:	add	r1, r1, #24
   2e514:	orr	lr, lr, fp, lsl #25
   2e518:	ldrd	r0, [r1]
   2e51c:	str	lr, [sp, #984]	; 0x3d8
   2e520:	add	lr, sp, #5760	; 0x1680
   2e524:	add	lr, lr, #48	; 0x30
   2e528:	eor	r1, r1, r7
   2e52c:	str	ip, [lr]
   2e530:	mov	r7, r1
   2e534:	add	lr, sp, #5760	; 0x1680
   2e538:	add	r1, sp, #5760	; 0x1680
   2e53c:	eor	r6, r6, sl
   2e540:	add	lr, lr, #40	; 0x28
   2e544:	add	r1, r1, #32
   2e548:	eor	r0, r0, r6
   2e54c:	lsr	ip, fp, #1
   2e550:	mov	r6, r0
   2e554:	ldrd	sl, [lr]
   2e558:	ldrd	r0, [r1]
   2e55c:	add	lr, sp, #5760	; 0x1680
   2e560:	add	lr, lr, #60	; 0x3c
   2e564:	eor	r0, r0, sl
   2e568:	eor	r1, r1, fp
   2e56c:	adds	r6, r6, r2
   2e570:	strd	r0, [sp, #24]
   2e574:	ldrd	r0, [sp, #152]	; 0x98
   2e578:	ldrd	sl, [sp, #40]	; 0x28
   2e57c:	adc	r7, r7, r3
   2e580:	and	r0, r0, r4
   2e584:	and	r1, r1, r5
   2e588:	mov	r4, r0
   2e58c:	mov	r5, r1
   2e590:	ldrd	r0, [sp, #72]	; 0x48
   2e594:	orr	ip, ip, r0, lsl #31
   2e598:	str	ip, [lr]
   2e59c:	add	lr, sp, #5824	; 0x16c0
   2e5a0:	lsr	ip, r1, #8
   2e5a4:	add	lr, lr, #4
   2e5a8:	orr	ip, ip, r0, lsl #24
   2e5ac:	str	ip, [lr]
   2e5b0:	lsr	lr, r1, #7
   2e5b4:	ldrd	r0, [sp, #16]
   2e5b8:	lsr	ip, sl, #19
   2e5bc:	orr	ip, ip, fp, lsl #13
   2e5c0:	and	r0, r0, r8
   2e5c4:	and	r1, r1, r9
   2e5c8:	mov	r2, r0
   2e5cc:	mov	r3, r1
   2e5d0:	add	r1, sp, #5760	; 0x1680
   2e5d4:	orr	r4, r4, r2
   2e5d8:	add	r1, r1, #48	; 0x30
   2e5dc:	add	r2, sp, #5824	; 0x16c0
   2e5e0:	add	r2, r2, #8
   2e5e4:	ldrd	r0, [r1]
   2e5e8:	ldrd	r8, [sp, #24]
   2e5ec:	str	ip, [r2]
   2e5f0:	add	r2, sp, #5824	; 0x16c0
   2e5f4:	orr	r5, r5, r3
   2e5f8:	add	r2, r2, #20
   2e5fc:	lsl	r3, fp, #3
   2e600:	orr	r3, r3, sl, lsr #29
   2e604:	str	lr, [sp, #988]	; 0x3dc
   2e608:	eor	r8, r8, r0
   2e60c:	lsr	lr, sl, #6
   2e610:	eor	r9, r9, r1
   2e614:	str	lr, [sp, #992]	; 0x3e0
   2e618:	mov	r0, r8
   2e61c:	str	r3, [r2]
   2e620:	mov	r1, r9
   2e624:	ldr	ip, [sp, #992]	; 0x3e0
   2e628:	ldrd	r8, [sp, #64]	; 0x40
   2e62c:	orr	ip, ip, fp, lsl #26
   2e630:	str	ip, [sp, #992]	; 0x3e0
   2e634:	adds	r8, r8, r6
   2e638:	add	ip, sp, #5760	; 0x1680
   2e63c:	adc	r9, r9, r7
   2e640:	add	ip, ip, #56	; 0x38
   2e644:	adds	r0, r0, r4
   2e648:	adc	r1, r1, r5
   2e64c:	ldrd	r4, [sp, #40]	; 0x28
   2e650:	strd	r8, [sp, #208]	; 0xd0
   2e654:	ldrd	r8, [ip]
   2e658:	add	ip, sp, #5824	; 0x16c0
   2e65c:	lsr	r2, fp, #19
   2e660:	lsl	r3, sl, #3
   2e664:	ldrd	sl, [ip]
   2e668:	orr	ip, r2, r4, lsl #13
   2e66c:	add	r2, sp, #5824	; 0x16c0
   2e670:	add	r2, r2, #12
   2e674:	str	ip, [r2]
   2e678:	add	r2, sp, #5824	; 0x16c0
   2e67c:	add	r2, r2, #16
   2e680:	orr	r3, r3, r5, lsr #29
   2e684:	str	r3, [r2]
   2e688:	add	r3, sp, #984	; 0x3d8
   2e68c:	eor	r8, r8, sl
   2e690:	ldrd	r2, [r3]
   2e694:	eor	r9, r9, fp
   2e698:	eor	r2, r2, r8
   2e69c:	eor	r3, r3, r9
   2e6a0:	mov	r8, r2
   2e6a4:	mov	r9, r3
   2e6a8:	adds	r2, r0, r6
   2e6ac:	lsr	r3, r5, #6
   2e6b0:	str	r3, [sp, #996]	; 0x3e4
   2e6b4:	adc	r3, r1, r7
   2e6b8:	ldrd	r4, [sp, #32]
   2e6bc:	strd	r2, [sp, #48]	; 0x30
   2e6c0:	add	r3, sp, #5824	; 0x16c0
   2e6c4:	add	r3, r3, #8
   2e6c8:	ldrd	r0, [r3]
   2e6cc:	add	r3, sp, #5824	; 0x16c0
   2e6d0:	adds	r4, r4, r8
   2e6d4:	add	r3, r3, #16
   2e6d8:	mov	r8, r4
   2e6dc:	add	r4, sp, #992	; 0x3e0
   2e6e0:	ldrd	sl, [r3]
   2e6e4:	adc	r5, r5, r9
   2e6e8:	mov	r9, r5
   2e6ec:	ldrd	r4, [r4]
   2e6f0:	eor	r0, r0, sl
   2e6f4:	eor	r1, r1, fp
   2e6f8:	eor	r4, r4, r0
   2e6fc:	eor	r5, r5, r1
   2e700:	mov	r0, r4
   2e704:	mov	r1, r5
   2e708:	ldrd	r4, [sp, #168]	; 0xa8
   2e70c:	ldrd	sl, [sp, #208]	; 0xd0
   2e710:	add	r3, pc, #904	; 0x388
   2e714:	ldrd	r2, [r3]
   2e718:	adds	r4, r4, r8
   2e71c:	mov	r8, r4
   2e720:	add	r4, sp, #5824	; 0x16c0
   2e724:	adc	r5, r5, r9
   2e728:	lsr	lr, sl, #14
   2e72c:	add	r4, r4, #24
   2e730:	adds	r6, r8, r0
   2e734:	mov	r9, r5
   2e738:	orr	lr, lr, fp, lsl #18
   2e73c:	str	lr, [r4]
   2e740:	adc	r7, r9, r1
   2e744:	add	r4, sp, #5824	; 0x16c0
   2e748:	ldrd	r0, [sp, #48]	; 0x30
   2e74c:	lsr	ip, sl, #18
   2e750:	add	r4, r4, #32
   2e754:	orr	ip, ip, fp, lsl #14
   2e758:	str	ip, [r4]
   2e75c:	lsl	ip, r1, #30
   2e760:	add	r1, sp, #5824	; 0x16c0
   2e764:	lsr	lr, fp, #14
   2e768:	add	r1, r1, #28
   2e76c:	orr	lr, lr, sl, lsl #18
   2e770:	str	lr, [r1]
   2e774:	lsr	r4, fp, #18
   2e778:	add	r1, sp, #5824	; 0x16c0
   2e77c:	orr	lr, r4, sl, lsl #14
   2e780:	add	r1, r1, #36	; 0x24
   2e784:	add	r4, sp, #5824	; 0x16c0
   2e788:	strd	r6, [sp, #24]
   2e78c:	add	r4, r4, #44	; 0x2c
   2e790:	lsl	r6, fp, #23
   2e794:	str	lr, [r1]
   2e798:	orr	lr, r6, sl, lsr #9
   2e79c:	ldrd	r6, [sp, #48]	; 0x30
   2e7a0:	str	lr, [r4]
   2e7a4:	add	r4, sp, #5824	; 0x16c0
   2e7a8:	lsr	r5, r0, #28
   2e7ac:	add	r4, r4, #48	; 0x30
   2e7b0:	orr	r5, r5, r7, lsl #4
   2e7b4:	str	r5, [r4]
   2e7b8:	add	r4, sp, #5824	; 0x16c0
   2e7bc:	add	r4, r4, #60	; 0x3c
   2e7c0:	orr	ip, ip, r6, lsr #2
   2e7c4:	ldrd	r8, [sp, #88]	; 0x58
   2e7c8:	str	ip, [r4]
   2e7cc:	ldrd	r0, [sp, #176]	; 0xb0
   2e7d0:	ldrd	r4, [sp, #24]
   2e7d4:	lsl	lr, sl, #23
   2e7d8:	eor	r0, r0, r8
   2e7dc:	adds	r4, r4, r2
   2e7e0:	mov	r8, sl
   2e7e4:	mov	r2, r4
   2e7e8:	mov	r4, r8
   2e7ec:	and	r4, r4, r0
   2e7f0:	eor	r1, r1, r9
   2e7f4:	mov	r0, r4
   2e7f8:	mov	r9, fp
   2e7fc:	add	r4, sp, #5824	; 0x16c0
   2e800:	add	r4, r4, #40	; 0x28
   2e804:	orr	lr, lr, r9, lsr #9
   2e808:	str	lr, [r4]
   2e80c:	add	lr, sp, #5824	; 0x16c0
   2e810:	lsr	ip, r7, #28
   2e814:	add	lr, lr, #52	; 0x34
   2e818:	adc	r5, r5, r3
   2e81c:	orr	ip, ip, r6, lsl #4
   2e820:	str	ip, [lr]
   2e824:	mov	r3, r5
   2e828:	ldr	ip, [sp, #120]	; 0x78
   2e82c:	mov	r5, r9
   2e830:	and	r5, r5, r1
   2e834:	mov	r1, r5
   2e838:	lsl	r5, r6, #30
   2e83c:	lsr	lr, ip, #1
   2e840:	orr	ip, r5, r7, lsr #2
   2e844:	add	r5, sp, #5824	; 0x16c0
   2e848:	add	r5, r5, #56	; 0x38
   2e84c:	lsl	r4, r7, #25
   2e850:	str	ip, [r5]
   2e854:	orr	ip, r4, r6, lsr #7
   2e858:	add	r4, sp, #5888	; 0x1700
   2e85c:	add	r4, r4, #4
   2e860:	mov	r9, r7
   2e864:	str	ip, [r4]
   2e868:	mov	r8, r6
   2e86c:	lsl	ip, r6, #25
   2e870:	ldrd	r6, [sp, #216]	; 0xd8
   2e874:	add	r4, sp, #5824	; 0x16c0
   2e878:	add	r4, r4, #24
   2e87c:	adds	r6, r6, r2
   2e880:	adc	r7, r7, r3
   2e884:	mov	r2, r6
   2e888:	mov	r3, r7
   2e88c:	ldrd	r6, [sp, #88]	; 0x58
   2e890:	orr	ip, ip, r9, lsr #7
   2e894:	eor	r6, r6, r0
   2e898:	eor	r7, r7, r1
   2e89c:	mov	r0, r6
   2e8a0:	mov	r1, r7
   2e8a4:	ldrd	r6, [r4]
   2e8a8:	add	r4, sp, #5824	; 0x16c0
   2e8ac:	add	r4, r4, #32
   2e8b0:	ldrd	sl, [r4]
   2e8b4:	ldrd	r4, [sp, #120]	; 0x78
   2e8b8:	adds	r2, r2, r0
   2e8bc:	eor	r6, r6, sl
   2e8c0:	add	sl, sp, #5888	; 0x1700
   2e8c4:	add	sl, sl, #8
   2e8c8:	orr	lr, lr, r5, lsl #31
   2e8cc:	str	lr, [sl]
   2e8d0:	add	sl, sp, #5888	; 0x1700
   2e8d4:	lsr	lr, r4, #8
   2e8d8:	add	sl, sl, #16
   2e8dc:	adc	r3, r3, r1
   2e8e0:	orr	lr, lr, r5, lsl #24
   2e8e4:	add	r1, sp, #5824	; 0x16c0
   2e8e8:	str	lr, [sl]
   2e8ec:	add	r1, r1, #40	; 0x28
   2e8f0:	lsr	lr, r4, #7
   2e8f4:	str	lr, [sp, #1000]	; 0x3e8
   2e8f8:	add	lr, sp, #5888	; 0x1700
   2e8fc:	ldrd	r0, [r1]
   2e900:	str	ip, [lr]
   2e904:	eor	r7, r7, fp
   2e908:	mov	sl, r4
   2e90c:	mov	fp, r5
   2e910:	add	lr, sp, #5824	; 0x16c0
   2e914:	ldrd	r4, [sp, #184]	; 0xb8
   2e918:	add	lr, lr, #56	; 0x38
   2e91c:	eor	r1, r1, r7
   2e920:	orr	r4, r4, r8
   2e924:	orr	r5, r5, r9
   2e928:	mov	r8, sl
   2e92c:	mov	r9, fp
   2e930:	mov	r7, r1
   2e934:	lsr	ip, fp, #1
   2e938:	add	r1, sp, #5824	; 0x16c0
   2e93c:	ldrd	sl, [lr]
   2e940:	add	lr, sp, #5888	; 0x1700
   2e944:	add	lr, lr, #12
   2e948:	add	r1, r1, #48	; 0x30
   2e94c:	orr	ip, ip, r8, lsl #31
   2e950:	eor	r0, r0, r6
   2e954:	str	ip, [lr]
   2e958:	mov	r6, r0
   2e95c:	add	lr, sp, #5888	; 0x1700
   2e960:	ldrd	r0, [r1]
   2e964:	lsr	ip, r9, #8
   2e968:	add	lr, lr, #20
   2e96c:	orr	ip, ip, r8, lsl #24
   2e970:	str	ip, [lr]
   2e974:	eor	r0, r0, sl
   2e978:	eor	r1, r1, fp
   2e97c:	ldr	ip, [sp, #1000]	; 0x3e8
   2e980:	ldrd	sl, [sp, #16]
   2e984:	adds	r8, r2, r6
   2e988:	orr	ip, ip, r9, lsl #25
   2e98c:	adc	r9, r3, r7
   2e990:	ldrd	r6, [sp, #48]	; 0x30
   2e994:	ldrd	r2, [sp, #184]	; 0xb8
   2e998:	and	sl, sl, r4
   2e99c:	and	fp, fp, r5
   2e9a0:	mov	r4, sl
   2e9a4:	mov	r5, fp
   2e9a8:	ldrd	sl, [sp, #80]	; 0x50
   2e9ac:	and	r2, r2, r6
   2e9b0:	orr	r4, r4, r2
   2e9b4:	add	r2, sp, #5888	; 0x1700
   2e9b8:	str	ip, [sp, #1000]	; 0x3e8
   2e9bc:	add	r2, r2, #24
   2e9c0:	lsr	ip, sl, #19
   2e9c4:	orr	ip, ip, fp, lsl #13
   2e9c8:	str	ip, [r2]
   2e9cc:	lsr	lr, sl, #6
   2e9d0:	and	r3, r3, r7
   2e9d4:	add	r2, sp, #5888	; 0x1700
   2e9d8:	str	lr, [sp, #1008]	; 0x3f0
   2e9dc:	orr	r5, r5, r3
   2e9e0:	add	lr, sp, #5888	; 0x1700
   2e9e4:	lsl	r3, fp, #3
   2e9e8:	add	r2, r2, #36	; 0x24
   2e9ec:	orr	r3, r3, sl, lsr #29
   2e9f0:	ldrd	r6, [lr]
   2e9f4:	str	r3, [r2]
   2e9f8:	ldr	r3, [sp, #124]	; 0x7c
   2e9fc:	ldr	ip, [sp, #1008]	; 0x3f0
   2ea00:	eor	r6, r6, r0
   2ea04:	orr	ip, ip, fp, lsl #26
   2ea08:	eor	r7, r7, r1
   2ea0c:	lsr	r3, r3, #7
   2ea10:	mov	r0, r6
   2ea14:	mov	r1, r7
   2ea18:	str	r3, [sp, #1004]	; 0x3ec
   2ea1c:	str	ip, [sp, #1008]	; 0x3f0
   2ea20:	ldrd	r6, [sp, #152]	; 0x98
   2ea24:	add	ip, sp, #5888	; 0x1700
   2ea28:	add	ip, ip, #8
   2ea2c:	adds	r6, r6, r8
   2ea30:	adc	r7, r7, r9
   2ea34:	adds	r0, r0, r4
   2ea38:	strd	r8, [sp, #32]
   2ea3c:	adc	r1, r1, r5
   2ea40:	ldrd	r8, [ip]
   2ea44:	ldrd	r4, [sp, #80]	; 0x50
   2ea48:	add	ip, sp, #5888	; 0x1700
   2ea4c:	add	ip, ip, #16
   2ea50:	lsr	r2, fp, #19
   2ea54:	lsl	r3, sl, #3
   2ea58:	ldrd	sl, [ip]
   2ea5c:	orr	ip, r2, r4, lsl #13
   2ea60:	add	r2, sp, #5888	; 0x1700
   2ea64:	add	r2, r2, #28
   2ea68:	str	ip, [r2]
   2ea6c:	add	r2, sp, #5888	; 0x1700
   2ea70:	add	r2, r2, #32
   2ea74:	orr	r3, r3, r5, lsr #29
   2ea78:	str	r3, [r2]
   2ea7c:	add	r3, sp, #1000	; 0x3e8
   2ea80:	eor	r9, r9, fp
   2ea84:	ldrd	r2, [r3]
   2ea88:	eor	r8, r8, sl
   2ea8c:	lsr	ip, r6, #14
   2ea90:	eor	r3, r3, r9
   2ea94:	mov	r9, r3
   2ea98:	eor	r2, r2, r8
   2ea9c:	b	2eaa8 <__assert_fail@plt+0x1d7bc>
   2eaa0:	cmn	r2, #-1409286144	; 0xac000000
   2eaa4:			; <UNDEFINED> instruction: 0xc67178f2
   2eaa8:	lsr	r3, r5, #6
   2eaac:	mov	r8, r2
   2eab0:	str	r3, [sp, #1012]	; 0x3f4
   2eab4:	ldrd	r2, [sp, #32]
   2eab8:	orr	ip, ip, r7, lsl #18
   2eabc:	lsr	lr, r7, #14
   2eac0:	adds	r2, r2, r0
   2eac4:	adc	r3, r3, r1
   2eac8:	mov	r5, r3
   2eacc:	add	r3, sp, #5888	; 0x1700
   2ead0:	add	r3, r3, #24
   2ead4:	ldrd	r0, [r3]
   2ead8:	add	r3, sp, #5888	; 0x1700
   2eadc:	add	r3, r3, #32
   2eae0:	ldrd	sl, [r3]
   2eae4:	mov	r4, r2
   2eae8:	orr	lr, lr, r6, lsl #18
   2eaec:	eor	r0, r0, sl
   2eaf0:	eor	r1, r1, fp
   2eaf4:	mov	r2, r0
   2eaf8:	mov	r3, r1
   2eafc:	ldrd	r0, [sp, #72]	; 0x48
   2eb00:	lsr	fp, r6, #18
   2eb04:	adds	r0, r0, r8
   2eb08:	adc	r1, r1, r9
   2eb0c:	mov	r9, r1
   2eb10:	add	r1, sp, #1008	; 0x3f0
   2eb14:	mov	r8, r0
   2eb18:	ldrd	r0, [r1]
   2eb1c:	eor	r0, r0, r2
   2eb20:	eor	r1, r1, r3
   2eb24:	mov	r2, r0
   2eb28:	mov	r3, r1
   2eb2c:	ldrd	r0, [sp, #192]	; 0xc0
   2eb30:	adds	r0, r0, r8
   2eb34:	adc	r1, r1, r9
   2eb38:	mov	r9, r1
   2eb3c:	add	r1, sp, #5888	; 0x1700
   2eb40:	add	r1, r1, #40	; 0x28
   2eb44:	str	ip, [r1]
   2eb48:	add	r1, sp, #5888	; 0x1700
   2eb4c:	add	r1, r1, #48	; 0x30
   2eb50:	orr	ip, fp, r7, lsl #14
   2eb54:	mov	r8, r0
   2eb58:	lsr	r0, r4, #28
   2eb5c:	str	ip, [r1]
   2eb60:	str	r0, [sp, #72]	; 0x48
   2eb64:	lsl	r1, r7, #23
   2eb68:	adds	r0, r8, r2
   2eb6c:	str	r1, [sp, #32]
   2eb70:	adc	r1, r9, r3
   2eb74:	lsr	ip, r7, #18
   2eb78:	strd	r0, [sp, #64]	; 0x40
   2eb7c:	add	r0, sp, #5888	; 0x1700
   2eb80:	add	r0, r0, #44	; 0x2c
   2eb84:	str	lr, [r0]
   2eb88:	add	r0, sp, #5888	; 0x1700
   2eb8c:	add	r0, r0, #52	; 0x34
   2eb90:	orr	ip, ip, r6, lsl #14
   2eb94:	str	ip, [r0]
   2eb98:	ldr	ip, [sp, #32]
   2eb9c:	add	r0, sp, #5888	; 0x1700
   2eba0:	add	r0, r0, #60	; 0x3c
   2eba4:	orr	ip, ip, r6, lsr #9
   2eba8:	mov	r9, r5
   2ebac:	ldrd	sl, [sp, #176]	; 0xb0
   2ebb0:	str	ip, [r0]
   2ebb4:	ldr	r0, [sp, #72]	; 0x48
   2ebb8:	mov	r8, r4
   2ebbc:	lsl	r1, r5, #30
   2ebc0:	ldrd	r4, [sp, #208]	; 0xd0
   2ebc4:	orr	ip, r0, r9, lsl #4
   2ebc8:	add	r0, sp, #5952	; 0x1740
   2ebcc:	mov	r3, fp
   2ebd0:	str	ip, [r0]
   2ebd4:	eor	r3, r3, r5
   2ebd8:	orr	ip, r1, r8, lsr #2
   2ebdc:	ldr	r5, [sp, #136]	; 0x88
   2ebe0:	add	r1, sp, #5952	; 0x1740
   2ebe4:	add	r1, r1, #12
   2ebe8:	str	ip, [r1]
   2ebec:	lsr	r1, r5, #1
   2ebf0:	add	r5, sp, #5888	; 0x1700
   2ebf4:	mov	r2, sl
   2ebf8:	lsl	lr, r6, #23
   2ebfc:	add	r5, r5, #56	; 0x38
   2ec00:	orr	lr, lr, r7, lsr #9
   2ec04:	eor	r2, r2, r4
   2ec08:	lsr	r4, r9, #28
   2ec0c:	str	lr, [r5]
   2ec10:	orr	lr, r4, r8, lsl #4
   2ec14:	add	r4, sp, #5952	; 0x1740
   2ec18:	add	r4, r4, #4
   2ec1c:	str	lr, [r4]
   2ec20:	add	lr, sp, #5952	; 0x1740
   2ec24:	lsl	ip, r8, #30
   2ec28:	add	lr, lr, #8
   2ec2c:	lsl	r0, r9, #25
   2ec30:	orr	ip, ip, r9, lsr #2
   2ec34:	str	ip, [lr]
   2ec38:	orr	ip, r0, r8, lsr #7
   2ec3c:	add	r0, sp, #5952	; 0x1740
   2ec40:	add	r0, r0, #20
   2ec44:	and	r3, r3, r7
   2ec48:	mov	r5, fp
   2ec4c:	str	ip, [r0]
   2ec50:	eor	r5, r5, r3
   2ec54:	add	ip, sp, #5888	; 0x1700
   2ec58:	add	r3, sp, #5888	; 0x1700
   2ec5c:	add	ip, ip, #48	; 0x30
   2ec60:	add	r3, r3, #40	; 0x28
   2ec64:	and	r2, r2, r6
   2ec68:	mov	r4, sl
   2ec6c:	eor	r4, r4, r2
   2ec70:	ldrd	sl, [ip]
   2ec74:	ldrd	r2, [r3]
   2ec78:	lsl	r0, r8, #25
   2ec7c:	strd	r4, [sp, #32]
   2ec80:	eor	r2, r2, sl
   2ec84:	eor	r3, r3, fp
   2ec88:	ldrd	sl, [sp, #136]	; 0x88
   2ec8c:	ldrd	r4, [sp, #48]	; 0x30
   2ec90:	strd	r8, [sp, #72]	; 0x48
   2ec94:	orr	ip, r1, fp, lsl #31
   2ec98:	add	r1, sp, #5952	; 0x1740
   2ec9c:	add	r1, r1, #24
   2eca0:	str	ip, [r1]
   2eca4:	lsr	r1, sl, #8
   2eca8:	orr	ip, r1, fp, lsl #24
   2ecac:	add	r1, sp, #5952	; 0x1740
   2ecb0:	add	r1, r1, #32
   2ecb4:	str	ip, [r1]
   2ecb8:	add	r1, sp, #5952	; 0x1740
   2ecbc:	lsr	ip, sl, #7
   2ecc0:	add	r1, r1, #16
   2ecc4:	str	ip, [sp, #1016]	; 0x3f8
   2ecc8:	orr	ip, r0, r9, lsr #7
   2eccc:	str	ip, [r1]
   2ecd0:	add	r1, sp, #5888	; 0x1700
   2ecd4:	add	r1, r1, #56	; 0x38
   2ecd8:	lsr	lr, fp, #1
   2ecdc:	ldrd	r0, [r1]
   2ece0:	orr	ip, lr, sl, lsl #31
   2ece4:	eor	r1, r1, r3
   2ece8:	add	r3, sp, #5952	; 0x1740
   2ecec:	add	r3, r3, #28
   2ecf0:	eor	r0, r0, r2
   2ecf4:	add	r2, sp, #5952	; 0x1740
   2ecf8:	str	ip, [r3]
   2ecfc:	add	r2, r2, #36	; 0x24
   2ed00:	lsr	r3, fp, #8
   2ed04:	orr	r3, r3, sl, lsl #24
   2ed08:	str	r3, [r2]
   2ed0c:	ldr	r3, [sp, #1016]	; 0x3f8
   2ed10:	strd	r0, [sp, #152]	; 0x98
   2ed14:	ldrd	r0, [sp, #184]	; 0xb8
   2ed18:	orr	r3, r3, fp, lsl #25
   2ed1c:	orr	r2, r4, r8
   2ed20:	str	r3, [sp, #1016]	; 0x3f8
   2ed24:	orr	r3, r5, r9
   2ed28:	and	r0, r0, r2
   2ed2c:	and	r1, r1, r3
   2ed30:	mov	r2, r0
   2ed34:	mov	r3, r1
   2ed38:	ldrd	r0, [sp, #24]
   2ed3c:	and	r4, r4, r8
   2ed40:	and	r5, r5, r9
   2ed44:	lsr	ip, r0, #6
   2ed48:	str	ip, [sp, #1024]	; 0x400
   2ed4c:	lsr	ip, fp, #7
   2ed50:	str	ip, [sp, #1020]	; 0x3fc
   2ed54:	ldr	ip, [sp, #1024]	; 0x400
   2ed58:	mov	lr, r1
   2ed5c:	orr	ip, ip, r1, lsl #26
   2ed60:	lsr	r1, r0, #19
   2ed64:	str	ip, [sp, #1024]	; 0x400
   2ed68:	orr	ip, r1, lr, lsl #13
   2ed6c:	add	r1, sp, #5952	; 0x1740
   2ed70:	add	r1, r1, #40	; 0x28
   2ed74:	mov	sl, r0
   2ed78:	str	ip, [r1]
   2ed7c:	lsl	r1, lr, #3
   2ed80:	orr	ip, r1, sl, lsr #29
   2ed84:	add	r1, sp, #5952	; 0x1740
   2ed88:	add	r1, r1, #52	; 0x34
   2ed8c:	str	ip, [r1]
   2ed90:	lsr	ip, lr, #6
   2ed94:	str	ip, [sp, #1028]	; 0x404
   2ed98:	add	ip, sp, #5952	; 0x1740
   2ed9c:	add	ip, ip, #8
   2eda0:	add	r1, sp, #5952	; 0x1740
   2eda4:	ldrd	sl, [ip]
   2eda8:	ldrd	r0, [r1]
   2edac:	add	ip, sp, #5952	; 0x1740
   2edb0:	add	ip, ip, #16
   2edb4:	eor	r0, r0, sl
   2edb8:	eor	r1, r1, fp
   2edbc:	ldrd	sl, [ip]
   2edc0:	ldrd	r8, [sp, #24]
   2edc4:	orr	r2, r2, r4
   2edc8:	eor	sl, sl, r0
   2edcc:	adds	r0, sl, r2
   2edd0:	orr	r3, r3, r5
   2edd4:	eor	fp, fp, r1
   2edd8:	add	r2, sp, #5952	; 0x1740
   2eddc:	adc	r1, fp, r3
   2ede0:	add	r2, r2, #44	; 0x2c
   2ede4:	lsr	r3, r9, #19
   2ede8:	orr	r3, r3, r8, lsl #13
   2edec:	str	r3, [r2]
   2edf0:	add	r2, sp, #5952	; 0x1740
   2edf4:	lsl	r3, r8, #3
   2edf8:	add	r2, r2, #48	; 0x30
   2edfc:	orr	r3, r3, r9, lsr #29
   2ee00:	str	r3, [r2]
   2ee04:	add	r3, sp, #5952	; 0x1740
   2ee08:	add	r3, r3, #24
   2ee0c:	ldrd	sl, [r3]
   2ee10:	add	r3, sp, #5952	; 0x1740
   2ee14:	add	r3, r3, #32
   2ee18:	ldrd	r8, [r3]
   2ee1c:	add	r3, sp, #1016	; 0x3f8
   2ee20:	add	ip, sp, #1024	; 0x400
   2ee24:	eor	sl, sl, r8
   2ee28:	eor	fp, fp, r9
   2ee2c:	mov	r8, sl
   2ee30:	mov	r9, fp
   2ee34:	ldrd	sl, [r3]
   2ee38:	ldrd	r2, [sp, #120]	; 0x78
   2ee3c:	eor	sl, sl, r8
   2ee40:	adds	r2, r2, sl
   2ee44:	eor	fp, fp, r9
   2ee48:	adc	r3, r3, fp
   2ee4c:	mov	r8, r2
   2ee50:	mov	r9, r3
   2ee54:	ldrd	r2, [sp, #144]	; 0x90
   2ee58:	adds	r2, r2, r8
   2ee5c:	adc	r3, r3, r9
   2ee60:	mov	r9, r3
   2ee64:	add	r3, sp, #5952	; 0x1740
   2ee68:	add	r3, r3, #40	; 0x28
   2ee6c:	ldrd	sl, [r3]
   2ee70:	add	r3, sp, #5952	; 0x1740
   2ee74:	add	r3, r3, #48	; 0x30
   2ee78:	mov	r8, r2
   2ee7c:	ldrd	r2, [r3]
   2ee80:	eor	sl, sl, r2
   2ee84:	eor	fp, fp, r3
   2ee88:	mov	r2, sl
   2ee8c:	mov	r3, fp
   2ee90:	ldrd	sl, [ip]
   2ee94:	eor	sl, sl, r2
   2ee98:	adds	r4, r8, sl
   2ee9c:	eor	fp, fp, r3
   2eea0:	adc	r5, r9, fp
   2eea4:	ldrd	r8, [sp, #208]	; 0xd0
   2eea8:	strd	r4, [sp, #120]	; 0x78
   2eeac:	ldrd	r4, [sp, #200]	; 0xc8
   2eeb0:	add	r2, sp, #6016	; 0x1780
   2eeb4:	eor	r8, r8, r6
   2eeb8:	eor	r9, r9, r7
   2eebc:	lsr	r3, r4, #1
   2eec0:	add	r2, r2, #40	; 0x28
   2eec4:	orr	r3, r3, r5, lsl #31
   2eec8:	str	r3, [r2]
   2eecc:	strd	r8, [sp, #216]	; 0xd8
   2eed0:	add	r2, sp, #6016	; 0x1780
   2eed4:	ldrd	r8, [sp, #64]	; 0x40
   2eed8:	lsr	r3, r4, #8
   2eedc:	add	r2, r2, #48	; 0x30
   2eee0:	orr	r3, r3, r5, lsl #24
   2eee4:	str	r3, [r2]
   2eee8:	lsr	r3, r9, #6
   2eeec:	add	r2, sp, #6016	; 0x1780
   2eef0:	str	r3, [sp, #1044]	; 0x414
   2eef4:	add	r2, r2, #44	; 0x2c
   2eef8:	lsr	r3, r5, #1
   2eefc:	orr	r3, r3, r4, lsl #31
   2ef00:	str	r3, [r2]
   2ef04:	add	r2, sp, #6016	; 0x1780
   2ef08:	lsr	r3, r5, #8
   2ef0c:	add	r2, r2, #52	; 0x34
   2ef10:	orr	r3, r3, r4, lsl #24
   2ef14:	str	r3, [r2]
   2ef18:	add	r2, sp, #6016	; 0x1780
   2ef1c:	lsr	r3, r8, #19
   2ef20:	add	r2, r2, #56	; 0x38
   2ef24:	orr	r3, r3, r9, lsl #13
   2ef28:	str	r3, [r2]
   2ef2c:	add	r2, sp, #6080	; 0x17c0
   2ef30:	lsl	r3, r9, #3
   2ef34:	add	r2, r2, #4
   2ef38:	orr	r3, r3, r8, lsr #29
   2ef3c:	str	r3, [r2]
   2ef40:	add	r2, sp, #6016	; 0x1780
   2ef44:	lsr	r3, r9, #19
   2ef48:	add	r2, r2, #60	; 0x3c
   2ef4c:	orr	r3, r3, r8, lsl #13
   2ef50:	str	r3, [r2]
   2ef54:	lsl	r3, r8, #3
   2ef58:	add	r2, sp, #6080	; 0x17c0
   2ef5c:	orr	r3, r3, r9, lsr #29
   2ef60:	str	r3, [r2]
   2ef64:	lsr	ip, r4, #7
   2ef68:	add	r3, sp, #6016	; 0x1780
   2ef6c:	orr	ip, ip, r5, lsl #25
   2ef70:	add	r3, r3, #40	; 0x28
   2ef74:	str	ip, [sp, #1032]	; 0x408
   2ef78:	lsr	ip, r8, #6
   2ef7c:	str	ip, [sp, #1040]	; 0x410
   2ef80:	ldrd	sl, [r3]
   2ef84:	lsr	ip, r5, #7
   2ef88:	add	r3, sp, #6016	; 0x1780
   2ef8c:	str	ip, [sp, #1036]	; 0x40c
   2ef90:	add	r3, r3, #48	; 0x30
   2ef94:	ldr	ip, [sp, #1040]	; 0x410
   2ef98:	orr	ip, ip, r9, lsl #26
   2ef9c:	ldrd	r8, [r3]
   2efa0:	add	r3, sp, #1024	; 0x400
   2efa4:	add	r3, r3, #8
   2efa8:	eor	sl, sl, r8
   2efac:	eor	fp, fp, r9
   2efb0:	mov	r4, sl
   2efb4:	ldrd	r8, [sp, #128]	; 0x80
   2efb8:	mov	r5, fp
   2efbc:	ldrd	sl, [r3]
   2efc0:	lsr	r3, r8, #7
   2efc4:	orr	r3, r3, r9, lsl #25
   2efc8:	eor	sl, sl, r4
   2efcc:	eor	fp, fp, r5
   2efd0:	str	ip, [sp, #1040]	; 0x410
   2efd4:	strd	sl, [sp, #224]	; 0xe0
   2efd8:	str	r3, [sp, #1048]	; 0x418
   2efdc:	ldrd	r2, [sp, #120]	; 0x78
   2efe0:	lsr	ip, r2, #6
   2efe4:	str	ip, [sp, #1056]	; 0x420
   2efe8:	lsr	ip, r9, #7
   2efec:	str	ip, [sp, #1052]	; 0x41c
   2eff0:	ldr	ip, [sp, #1056]	; 0x420
   2eff4:	orr	r3, ip, r3, lsl #26
   2eff8:	str	r3, [sp, #1056]	; 0x420
   2effc:	add	r3, sp, #6016	; 0x1780
   2f000:	add	r3, r3, #56	; 0x38
   2f004:	ldrd	sl, [r3]
   2f008:	add	r3, sp, #6080	; 0x17c0
   2f00c:	add	ip, sp, #1040	; 0x410
   2f010:	ldrd	r2, [r3]
   2f014:	ldrd	r4, [ip]
   2f018:	add	ip, sp, #1056	; 0x420
   2f01c:	eor	sl, sl, r2
   2f020:	eor	fp, fp, r3
   2f024:	eor	r4, r4, sl
   2f028:	eor	r5, r5, fp
   2f02c:	add	r3, sp, #7168	; 0x1c00
   2f030:	ldrd	sl, [sp, #120]	; 0x78
   2f034:	add	r3, r3, #40	; 0x28
   2f038:	add	r2, sp, #6080	; 0x17c0
   2f03c:	strd	r4, [r3]
   2f040:	lsr	r3, fp, #6
   2f044:	str	r3, [sp, #1060]	; 0x424
   2f048:	add	r2, r2, #56	; 0x38
   2f04c:	lsr	r3, r8, #1
   2f050:	ldrd	r4, [sp, #56]	; 0x38
   2f054:	orr	r3, r3, r9, lsl #31
   2f058:	str	r3, [r2]
   2f05c:	lsr	r3, r8, #8
   2f060:	add	r2, sp, #6144	; 0x1800
   2f064:	orr	r3, r3, r9, lsl #24
   2f068:	str	r3, [r2]
   2f06c:	lsr	r3, r4, #7
   2f070:	add	r2, sp, #6080	; 0x17c0
   2f074:	str	r3, [sp, #1064]	; 0x428
   2f078:	add	r2, r2, #60	; 0x3c
   2f07c:	lsr	r3, r9, #1
   2f080:	orr	r3, r3, r8, lsl #31
   2f084:	str	r3, [r2]
   2f088:	add	r2, sp, #6144	; 0x1800
   2f08c:	lsr	r3, r9, #8
   2f090:	add	r2, r2, #4
   2f094:	orr	r3, r3, r8, lsl #24
   2f098:	str	r3, [r2]
   2f09c:	ldr	r3, [sp, #1064]	; 0x428
   2f0a0:	add	r2, sp, #6144	; 0x1800
   2f0a4:	orr	r3, r3, r5, lsl #25
   2f0a8:	str	r3, [sp, #1064]	; 0x428
   2f0ac:	add	r2, r2, #8
   2f0b0:	lsr	r3, sl, #19
   2f0b4:	orr	r3, r3, fp, lsl #13
   2f0b8:	str	r3, [r2]
   2f0bc:	add	r2, sp, #6144	; 0x1800
   2f0c0:	lsl	r3, fp, #3
   2f0c4:	add	r2, r2, #20
   2f0c8:	orr	r3, r3, sl, lsr #29
   2f0cc:	str	r3, [r2]
   2f0d0:	lsr	r3, r5, #7
   2f0d4:	add	r2, sp, #6144	; 0x1800
   2f0d8:	str	r3, [sp, #1068]	; 0x42c
   2f0dc:	add	r2, r2, #12
   2f0e0:	lsr	r3, fp, #19
   2f0e4:	orr	r3, r3, sl, lsl #13
   2f0e8:	str	r3, [r2]
   2f0ec:	add	r2, sp, #6144	; 0x1800
   2f0f0:	add	r2, r2, #16
   2f0f4:	lsl	r3, sl, #3
   2f0f8:	orr	r3, r3, fp, lsr #29
   2f0fc:	str	r3, [r2]
   2f100:	add	r3, sp, #6080	; 0x17c0
   2f104:	add	r3, r3, #56	; 0x38
   2f108:	ldrd	sl, [r3]
   2f10c:	add	r3, sp, #6144	; 0x1800
   2f110:	ldrd	r8, [r3]
   2f114:	add	r3, sp, #1040	; 0x410
   2f118:	add	r3, r3, #8
   2f11c:	eor	sl, sl, r8
   2f120:	eor	fp, fp, r9
   2f124:	mov	r8, sl
   2f128:	mov	r9, fp
   2f12c:	ldrd	sl, [r3]
   2f130:	add	r3, sp, #7168	; 0x1c00
   2f134:	add	r3, r3, #56	; 0x38
   2f138:	eor	sl, sl, r8
   2f13c:	eor	fp, fp, r9
   2f140:	ldrd	r8, [r2]
   2f144:	strd	sl, [r3]
   2f148:	add	r3, sp, #6144	; 0x1800
   2f14c:	add	r3, r3, #8
   2f150:	ldrd	sl, [r3]
   2f154:	add	r3, sp, #7232	; 0x1c40
   2f158:	eor	sl, sl, r8
   2f15c:	eor	fp, fp, r9
   2f160:	ldrd	r8, [ip]
   2f164:	eor	r8, r8, sl
   2f168:	eor	r9, r9, fp
   2f16c:	strd	r8, [r3]
   2f170:	ldrd	r2, [sp, #160]	; 0xa0
   2f174:	lsr	ip, r2, #7
   2f178:	orr	ip, ip, r3, lsl #25
   2f17c:	add	r2, sp, #6208	; 0x1840
   2f180:	lsr	r3, r3, #7
   2f184:	str	r3, [sp, #1084]	; 0x43c
   2f188:	add	r2, r2, #8
   2f18c:	lsr	r3, r4, #1
   2f190:	orr	r3, r3, r5, lsl #31
   2f194:	str	r3, [r2]
   2f198:	add	r2, sp, #6208	; 0x1840
   2f19c:	lsr	r3, r4, #8
   2f1a0:	add	r2, r2, #16
   2f1a4:	orr	r3, r3, r5, lsl #24
   2f1a8:	str	r3, [r2]
   2f1ac:	add	r2, sp, #6208	; 0x1840
   2f1b0:	lsr	r3, r5, #1
   2f1b4:	add	r2, r2, #12
   2f1b8:	orr	r3, r3, r4, lsl #31
   2f1bc:	str	r3, [r2]
   2f1c0:	add	r2, sp, #6208	; 0x1840
   2f1c4:	lsr	r3, r5, #8
   2f1c8:	add	r2, r2, #20
   2f1cc:	orr	r3, r3, r4, lsl #24
   2f1d0:	str	r3, [r2]
   2f1d4:	add	r3, sp, #6208	; 0x1840
   2f1d8:	add	r3, r3, #8
   2f1dc:	ldrd	sl, [r3]
   2f1e0:	add	r3, sp, #6208	; 0x1840
   2f1e4:	add	r3, r3, #16
   2f1e8:	ldrd	r8, [r3]
   2f1ec:	add	r3, sp, #1056	; 0x420
   2f1f0:	add	r3, r3, #8
   2f1f4:	eor	sl, sl, r8
   2f1f8:	eor	fp, fp, r9
   2f1fc:	mov	r4, sl
   2f200:	mov	r5, fp
   2f204:	ldrd	sl, [r3]
   2f208:	add	r3, sp, #7232	; 0x1c40
   2f20c:	add	r3, r3, #8
   2f210:	eor	sl, sl, r4
   2f214:	eor	fp, fp, r5
   2f218:	ldrd	r4, [sp, #96]	; 0x60
   2f21c:	ldrd	r8, [sp, #160]	; 0xa0
   2f220:	strd	sl, [r3]
   2f224:	lsr	r3, r4, #7
   2f228:	orr	r3, r3, r5, lsl #25
   2f22c:	str	r3, [sp, #1096]	; 0x448
   2f230:	add	r2, sp, #6272	; 0x1880
   2f234:	lsr	r3, r5, #7
   2f238:	str	r3, [sp, #1100]	; 0x44c
   2f23c:	add	r2, r2, #24
   2f240:	lsr	r3, r8, #1
   2f244:	orr	r3, r3, r9, lsl #31
   2f248:	str	r3, [r2]
   2f24c:	add	r2, sp, #6272	; 0x1880
   2f250:	lsr	r3, r8, #8
   2f254:	add	r2, r2, #32
   2f258:	orr	r3, r3, r9, lsl #24
   2f25c:	str	r3, [r2]
   2f260:	add	r2, sp, #6272	; 0x1880
   2f264:	lsr	r3, r9, #1
   2f268:	add	r2, r2, #28
   2f26c:	orr	r3, r3, r8, lsl #31
   2f270:	str	r3, [r2]
   2f274:	add	r2, sp, #6272	; 0x1880
   2f278:	lsr	r3, r9, #8
   2f27c:	add	r2, r2, #36	; 0x24
   2f280:	orr	r3, r3, r8, lsl #24
   2f284:	str	r3, [r2]
   2f288:	ldrd	r2, [sp, #168]	; 0xa8
   2f28c:	str	ip, [sp, #1080]	; 0x438
   2f290:	lsr	ip, r2, #7
   2f294:	orr	ip, ip, r3, lsl #25
   2f298:	str	ip, [sp, #1112]	; 0x458
   2f29c:	add	ip, sp, #6272	; 0x1880
   2f2a0:	add	ip, ip, #24
   2f2a4:	ldrd	sl, [ip]
   2f2a8:	add	ip, sp, #6272	; 0x1880
   2f2ac:	add	ip, ip, #32
   2f2b0:	ldrd	r8, [ip]
   2f2b4:	add	ip, sp, #1072	; 0x430
   2f2b8:	add	ip, ip, #8
   2f2bc:	eor	sl, sl, r8
   2f2c0:	eor	fp, fp, r9
   2f2c4:	mov	r4, sl
   2f2c8:	mov	r5, fp
   2f2cc:	ldrd	sl, [ip]
   2f2d0:	mov	r8, r2
   2f2d4:	mov	r9, r3
   2f2d8:	eor	sl, sl, r4
   2f2dc:	eor	fp, fp, r5
   2f2e0:	ldrd	r4, [sp, #96]	; 0x60
   2f2e4:	add	ip, sp, #7232	; 0x1c40
   2f2e8:	lsr	r3, r3, #7
   2f2ec:	add	r2, sp, #6336	; 0x18c0
   2f2f0:	add	ip, ip, #16
   2f2f4:	str	r3, [sp, #1116]	; 0x45c
   2f2f8:	add	r2, r2, #40	; 0x28
   2f2fc:	lsr	r3, r4, #1
   2f300:	orr	r3, r3, r5, lsl #31
   2f304:	str	r3, [r2]
   2f308:	strd	sl, [ip]
   2f30c:	add	r2, sp, #6336	; 0x18c0
   2f310:	ldrd	sl, [sp, #192]	; 0xc0
   2f314:	lsr	r3, r4, #8
   2f318:	add	r2, r2, #48	; 0x30
   2f31c:	orr	r3, r3, r5, lsl #24
   2f320:	str	r3, [r2]
   2f324:	lsr	r3, sl, #7
   2f328:	add	r2, sp, #6336	; 0x18c0
   2f32c:	str	r3, [sp, #1128]	; 0x468
   2f330:	add	r2, r2, #44	; 0x2c
   2f334:	lsr	r3, r5, #1
   2f338:	orr	r3, r3, r4, lsl #31
   2f33c:	str	r3, [r2]
   2f340:	add	r2, sp, #6336	; 0x18c0
   2f344:	lsr	r3, r5, #8
   2f348:	add	r2, r2, #52	; 0x34
   2f34c:	orr	r3, r3, r4, lsl #24
   2f350:	str	r3, [r2]
   2f354:	lsr	r3, fp, #7
   2f358:	str	r3, [sp, #1132]	; 0x46c
   2f35c:	add	r3, sp, #6336	; 0x18c0
   2f360:	ldr	ip, [sp, #1128]	; 0x468
   2f364:	add	r3, r3, #40	; 0x28
   2f368:	mov	r4, sl
   2f36c:	mov	r5, fp
   2f370:	orr	ip, ip, fp, lsl #25
   2f374:	ldrd	sl, [r3]
   2f378:	add	r3, sp, #6336	; 0x18c0
   2f37c:	add	r3, r3, #48	; 0x30
   2f380:	str	ip, [sp, #1128]	; 0x468
   2f384:	ldrd	r2, [r3]
   2f388:	add	ip, sp, #1088	; 0x440
   2f38c:	add	ip, ip, #8
   2f390:	eor	sl, sl, r2
   2f394:	eor	fp, fp, r3
   2f398:	mov	r2, sl
   2f39c:	mov	r3, fp
   2f3a0:	ldrd	sl, [ip]
   2f3a4:	eor	fp, fp, r3
   2f3a8:	add	r3, sp, #7232	; 0x1c40
   2f3ac:	eor	sl, sl, r2
   2f3b0:	add	r3, r3, #24
   2f3b4:	strd	sl, [r3]
   2f3b8:	ldrd	sl, [sp, #144]	; 0x90
   2f3bc:	add	r2, sp, #6400	; 0x1900
   2f3c0:	add	r2, r2, #56	; 0x38
   2f3c4:	lsr	ip, sl, #7
   2f3c8:	orr	r3, ip, fp, lsl #25
   2f3cc:	str	r3, [sp, #1144]	; 0x478
   2f3d0:	lsr	r3, r8, #1
   2f3d4:	orr	r3, r3, r9, lsl #31
   2f3d8:	str	r3, [r2]
   2f3dc:	lsr	r3, r8, #8
   2f3e0:	add	r2, sp, #6464	; 0x1940
   2f3e4:	orr	r3, r3, r9, lsl #24
   2f3e8:	str	r3, [r2]
   2f3ec:	lsr	r3, fp, #7
   2f3f0:	add	r2, sp, #6400	; 0x1900
   2f3f4:	str	r3, [sp, #1148]	; 0x47c
   2f3f8:	add	r2, r2, #60	; 0x3c
   2f3fc:	lsr	r3, r9, #1
   2f400:	orr	r3, r3, r8, lsl #31
   2f404:	str	r3, [r2]
   2f408:	add	r2, sp, #6464	; 0x1940
   2f40c:	lsr	r3, r9, #8
   2f410:	add	r2, r2, #4
   2f414:	orr	r3, r3, r8, lsl #24
   2f418:	str	r3, [r2]
   2f41c:	add	r3, sp, #6400	; 0x1900
   2f420:	add	ip, sp, #6464	; 0x1940
   2f424:	add	r3, r3, #56	; 0x38
   2f428:	ldrd	sl, [ip]
   2f42c:	ldrd	r2, [r3]
   2f430:	add	ip, sp, #1104	; 0x450
   2f434:	add	ip, ip, #8
   2f438:	eor	r2, r2, sl
   2f43c:	eor	r3, r3, fp
   2f440:	ldrd	sl, [ip]
   2f444:	eor	fp, fp, r3
   2f448:	add	r3, sp, #7232	; 0x1c40
   2f44c:	eor	sl, sl, r2
   2f450:	add	r3, r3, #32
   2f454:	strd	sl, [r3]
   2f458:	ldrd	r2, [sp, #112]	; 0x70
   2f45c:	lsr	ip, r2, #7
   2f460:	orr	ip, ip, r3, lsl #25
   2f464:	add	r2, sp, #6528	; 0x1980
   2f468:	lsr	r3, r3, #7
   2f46c:	str	r3, [sp, #1164]	; 0x48c
   2f470:	add	r2, r2, #8
   2f474:	lsr	r3, r4, #1
   2f478:	orr	r3, r3, r5, lsl #31
   2f47c:	str	r3, [r2]
   2f480:	add	r2, sp, #6528	; 0x1980
   2f484:	lsr	r3, r4, #8
   2f488:	add	r2, r2, #16
   2f48c:	orr	r3, r3, r5, lsl #24
   2f490:	str	r3, [r2]
   2f494:	add	r2, sp, #6528	; 0x1980
   2f498:	lsr	r3, r5, #1
   2f49c:	add	r2, r2, #12
   2f4a0:	orr	r3, r3, r4, lsl #31
   2f4a4:	str	r3, [r2]
   2f4a8:	add	r2, sp, #6528	; 0x1980
   2f4ac:	lsr	r3, r5, #8
   2f4b0:	add	r2, r2, #20
   2f4b4:	orr	r3, r3, r4, lsl #24
   2f4b8:	str	r3, [r2]
   2f4bc:	str	ip, [sp, #1160]	; 0x488
   2f4c0:	add	r3, sp, #6528	; 0x1980
   2f4c4:	add	ip, sp, #6528	; 0x1980
   2f4c8:	add	ip, ip, #16
   2f4cc:	add	r3, r3, #8
   2f4d0:	ldrd	sl, [ip]
   2f4d4:	ldrd	r2, [r3]
   2f4d8:	add	ip, sp, #7232	; 0x1c40
   2f4dc:	add	ip, ip, #40	; 0x28
   2f4e0:	eor	r3, r3, fp
   2f4e4:	mov	r9, r3
   2f4e8:	add	r3, sp, #1120	; 0x460
   2f4ec:	add	r3, r3, #8
   2f4f0:	eor	r2, r2, sl
   2f4f4:	mov	r8, r2
   2f4f8:	ldrd	r2, [r3]
   2f4fc:	eor	r2, r2, r8
   2f500:	eor	r3, r3, r9
   2f504:	strd	r2, [ip]
   2f508:	ldrd	r2, [sp, #104]	; 0x68
   2f50c:	lsr	ip, r2, #7
   2f510:	orr	ip, ip, r3, lsl #25
   2f514:	lsr	r3, r3, #7
   2f518:	str	ip, [sp, #1176]	; 0x498
   2f51c:	str	r3, [sp, #1180]	; 0x49c
   2f520:	ldrd	r8, [sp, #40]	; 0x28
   2f524:	add	r3, pc, #860	; 0x35c
   2f528:	ldrd	r2, [r3]
   2f52c:	ldrd	r4, [sp, #88]	; 0x58
   2f530:	lsr	ip, r8, #7
   2f534:	orr	ip, ip, r9, lsl #25
   2f538:	ldrd	r8, [sp, #64]	; 0x40
   2f53c:	str	ip, [sp, #1192]	; 0x4a8
   2f540:	ldrd	sl, [sp, #216]	; 0xd8
   2f544:	adds	r8, r8, r2
   2f548:	adc	r9, r9, r3
   2f54c:	adds	r4, r4, r8
   2f550:	adc	r5, r5, r9
   2f554:	mov	r2, r4
   2f558:	mov	r3, r5
   2f55c:	ldrd	r4, [sp, #32]
   2f560:	adds	r4, r4, r2
   2f564:	adc	r5, r5, r3
   2f568:	mov	r2, r4
   2f56c:	mov	r3, r5
   2f570:	ldrd	r4, [sp, #152]	; 0x98
   2f574:	adds	r4, r4, r2
   2f578:	adc	r5, r5, r3
   2f57c:	mov	r2, r4
   2f580:	mov	r3, r5
   2f584:	ldrd	r4, [sp, #16]
   2f588:	adds	r4, r4, r2
   2f58c:	adc	r5, r5, r3
   2f590:	adds	r8, r0, r2
   2f594:	lsr	r2, r4, #18
   2f598:	adc	r9, r1, r3
   2f59c:	orr	ip, r2, r5, lsl #14
   2f5a0:	add	r1, sp, #5952	; 0x1740
   2f5a4:	add	r2, sp, #6016	; 0x1780
   2f5a8:	lsr	r3, r4, #14
   2f5ac:	add	r1, r1, #56	; 0x38
   2f5b0:	str	ip, [r2]
   2f5b4:	orr	r3, r3, r5, lsl #18
   2f5b8:	add	ip, sp, #5952	; 0x1740
   2f5bc:	str	r3, [r1]
   2f5c0:	add	ip, ip, #60	; 0x3c
   2f5c4:	lsr	r3, r5, #14
   2f5c8:	lsr	r0, r5, #18
   2f5cc:	orr	r3, r3, r4, lsl #18
   2f5d0:	str	r3, [ip]
   2f5d4:	orr	ip, r0, r4, lsl #14
   2f5d8:	add	r0, sp, #6016	; 0x1780
   2f5dc:	add	r0, r0, #4
   2f5e0:	lsl	r1, r5, #23
   2f5e4:	str	ip, [r0]
   2f5e8:	orr	ip, r1, r4, lsr #9
   2f5ec:	add	r1, sp, #6016	; 0x1780
   2f5f0:	add	r1, r1, #12
   2f5f4:	lsr	r2, r8, #28
   2f5f8:	and	sl, sl, r4
   2f5fc:	strd	r4, [sp, #216]	; 0xd8
   2f600:	lsl	lr, r4, #23
   2f604:	add	r4, sp, #6016	; 0x1780
   2f608:	str	ip, [r1]
   2f60c:	add	r4, r4, #8
   2f610:	orr	ip, r2, r9, lsl #4
   2f614:	add	r2, sp, #6016	; 0x1780
   2f618:	orr	lr, lr, r5, lsr #9
   2f61c:	add	r2, r2, #16
   2f620:	str	lr, [r4]
   2f624:	add	lr, sp, #6016	; 0x1780
   2f628:	str	ip, [r2]
   2f62c:	add	lr, lr, #20
   2f630:	lsr	ip, r9, #28
   2f634:	lsl	r0, r8, #30
   2f638:	orr	ip, ip, r8, lsl #4
   2f63c:	str	ip, [lr]
   2f640:	orr	ip, r0, r9, lsr #2
   2f644:	add	r0, sp, #6016	; 0x1780
   2f648:	add	r0, r0, #24
   2f64c:	lsl	r1, r9, #25
   2f650:	str	ip, [r0]
   2f654:	orr	ip, r1, r8, lsr #7
   2f658:	add	r1, sp, #6016	; 0x1780
   2f65c:	add	r1, r1, #36	; 0x24
   2f660:	add	r2, sp, #6016	; 0x1780
   2f664:	str	ip, [r1]
   2f668:	lsl	r3, r9, #30
   2f66c:	ldrd	r0, [sp, #208]	; 0xd0
   2f670:	add	r2, r2, #28
   2f674:	orr	r3, r3, r8, lsr #2
   2f678:	str	r3, [r2]
   2f67c:	and	fp, fp, r5
   2f680:	add	r3, sp, #5952	; 0x1740
   2f684:	eor	r0, r0, sl
   2f688:	eor	r1, r1, fp
   2f68c:	add	r3, r3, #56	; 0x38
   2f690:	strd	r0, [sp, #16]
   2f694:	ldrd	r0, [r3]
   2f698:	add	r3, sp, #6016	; 0x1780
   2f69c:	lsl	ip, r8, #25
   2f6a0:	ldrd	r2, [r3]
   2f6a4:	ldrd	sl, [sp, #48]	; 0x30
   2f6a8:	strd	r8, [sp, #152]	; 0x98
   2f6ac:	eor	r0, r0, r2
   2f6b0:	add	r2, sp, #6016	; 0x1780
   2f6b4:	add	r2, r2, #32
   2f6b8:	eor	r1, r1, r3
   2f6bc:	orr	r3, ip, r9, lsr #7
   2f6c0:	str	r3, [r2]
   2f6c4:	ldrd	r2, [r4]
   2f6c8:	add	ip, sp, #6016	; 0x1780
   2f6cc:	add	ip, ip, #16
   2f6d0:	eor	r2, r2, r0
   2f6d4:	eor	r3, r3, r1
   2f6d8:	mov	r0, r2
   2f6dc:	mov	r1, r3
   2f6e0:	ldrd	r2, [sp, #72]	; 0x48
   2f6e4:	orr	r8, r8, r2
   2f6e8:	orr	r9, r9, r3
   2f6ec:	and	sl, sl, r8
   2f6f0:	and	fp, fp, r9
   2f6f4:	ldrd	r8, [ip]
   2f6f8:	add	ip, sp, #6016	; 0x1780
   2f6fc:	add	ip, ip, #24
   2f700:	ldrd	r4, [ip]
   2f704:	add	ip, sp, #6016	; 0x1780
   2f708:	add	ip, ip, #32
   2f70c:	eor	r8, r8, r4
   2f710:	eor	r9, r9, r5
   2f714:	ldrd	r4, [ip]
   2f718:	eor	r4, r4, r8
   2f71c:	eor	r5, r5, r9
   2f720:	mov	r8, r4
   2f724:	mov	r9, r5
   2f728:	ldrd	r4, [sp, #152]	; 0x98
   2f72c:	and	r4, r4, r2
   2f730:	and	r5, r5, r3
   2f734:	orr	r4, r4, sl
   2f738:	orr	r5, r5, fp
   2f73c:	ldrd	sl, [sp, #216]	; 0xd8
   2f740:	add	r3, sp, #7168	; 0x1c00
   2f744:	add	r3, r3, #48	; 0x30
   2f748:	eor	sl, sl, r6
   2f74c:	eor	fp, fp, r7
   2f750:	add	r2, sp, #6592	; 0x19c0
   2f754:	strd	sl, [r3]
   2f758:	ldrd	sl, [sp, #144]	; 0x90
   2f75c:	add	r2, r2, #24
   2f760:	strd	r4, [sp, #88]	; 0x58
   2f764:	lsr	ip, sl, #1
   2f768:	orr	r3, ip, fp, lsl #31
   2f76c:	str	r3, [r2]
   2f770:	add	r2, sp, #6592	; 0x19c0
   2f774:	lsr	ip, sl, #8
   2f778:	add	r2, r2, #32
   2f77c:	orr	r3, ip, fp, lsl #24
   2f780:	str	r3, [r2]
   2f784:	add	r2, sp, #6592	; 0x19c0
   2f788:	lsr	ip, fp, #1
   2f78c:	add	r2, r2, #28
   2f790:	orr	r3, ip, sl, lsl #31
   2f794:	str	r3, [r2]
   2f798:	add	r2, sp, #6592	; 0x19c0
   2f79c:	lsr	ip, fp, #8
   2f7a0:	add	r2, r2, #36	; 0x24
   2f7a4:	orr	r3, ip, sl, lsl #24
   2f7a8:	str	r3, [r2]
   2f7ac:	ldr	r3, [sp, #44]	; 0x2c
   2f7b0:	ldrd	sl, [sp, #80]	; 0x50
   2f7b4:	add	ip, sp, #7232	; 0x1c40
   2f7b8:	lsr	r3, r3, #7
   2f7bc:	str	r3, [sp, #1196]	; 0x4ac
   2f7c0:	add	r3, sp, #6592	; 0x19c0
   2f7c4:	add	r3, r3, #24
   2f7c8:	ldrd	r4, [r3]
   2f7cc:	add	r3, sp, #6592	; 0x19c0
   2f7d0:	add	r3, r3, #32
   2f7d4:	add	ip, ip, #48	; 0x30
   2f7d8:	ldrd	r2, [r3]
   2f7dc:	eor	r5, r5, r3
   2f7e0:	add	r3, sp, #1136	; 0x470
   2f7e4:	add	r3, r3, #8
   2f7e8:	eor	r4, r4, r2
   2f7ec:	ldrd	r2, [r3]
   2f7f0:	eor	r2, r2, r4
   2f7f4:	eor	r3, r3, r5
   2f7f8:	add	r5, pc, #144	; 0x90
   2f7fc:	ldrd	r4, [r5]
   2f800:	strd	r2, [ip]
   2f804:	lsr	r3, sl, #7
   2f808:	orr	r3, r3, fp, lsl #25
   2f80c:	str	r3, [sp, #1208]	; 0x4b8
   2f810:	lsr	r3, fp, #7
   2f814:	ldrd	sl, [sp, #120]	; 0x78
   2f818:	str	r3, [sp, #1212]	; 0x4bc
   2f81c:	ldrd	r2, [sp, #176]	; 0xb0
   2f820:	adds	sl, sl, r4
   2f824:	adc	fp, fp, r5
   2f828:	adds	r2, r2, sl
   2f82c:	adc	r3, r3, fp
   2f830:	mov	r4, r2
   2f834:	mov	r5, r3
   2f838:	ldrd	r2, [sp, #16]
   2f83c:	ldrd	sl, [sp, #184]	; 0xb8
   2f840:	adds	r2, r2, r4
   2f844:	adc	r3, r3, r5
   2f848:	adds	r2, r2, r0
   2f84c:	adc	r3, r3, r1
   2f850:	ldrd	r0, [sp, #88]	; 0x58
   2f854:	adds	sl, sl, r2
   2f858:	adc	fp, fp, r3
   2f85c:	adds	r0, r0, r8
   2f860:	adc	r1, r1, r9
   2f864:	adds	r8, r0, r2
   2f868:	adc	r9, r1, r3
   2f86c:	strd	sl, [sp, #32]
   2f870:	mov	fp, r9
   2f874:	mov	sl, r8
   2f878:	ldrd	r8, [sp, #32]
   2f87c:	add	r2, sp, #6080	; 0x17c0
   2f880:	ldrd	r0, [sp, #224]	; 0xe0
   2f884:	b	2f8a8 <__assert_fail@plt+0x1e5bc>
   2f888:	b	9c7f00 <optarg@@GLIBC_2.4+0x975d58>
   2f88c:	bgt	9ff3cc <optarg@@GLIBC_2.4+0x9ad224>
   2f890:	biccs	ip, r0, r7, lsl #4
   2f894:	orrle	fp, r6, r7, asr #17
   2f898:			; <UNDEFINED> instruction: 0xcde0eb1e
   2f89c:	b	ff6ceffc <optarg@@GLIBC_2.4+0xff67ce54>
   2f8a0:	mcr	1, 3, sp, cr14, cr8, {3}
   2f8a4:			; <UNDEFINED> instruction: 0xf57d4f7f
   2f8a8:	ldrd	r4, [sp, #136]	; 0x88
   2f8ac:	lsr	ip, r8, #14
   2f8b0:	add	r2, r2, #8
   2f8b4:	orr	r3, ip, r9, lsl #18
   2f8b8:	str	r3, [r2]
   2f8bc:	add	r3, sp, #7168	; 0x1c00
   2f8c0:	adds	r4, r4, r0
   2f8c4:	add	r3, r3, #40	; 0x28
   2f8c8:	adc	r5, r5, r1
   2f8cc:	ldrd	r0, [sp, #112]	; 0x70
   2f8d0:	ldrd	r2, [r3]
   2f8d4:	lsr	ip, r9, #18
   2f8d8:	adds	r0, r0, r4
   2f8dc:	adc	r1, r1, r5
   2f8e0:	adds	r2, r2, r0
   2f8e4:	mov	r4, r2
   2f8e8:	mov	r5, r1
   2f8ec:	add	r2, sp, #6080	; 0x17c0
   2f8f0:	adc	r3, r3, r5
   2f8f4:	lsr	r0, r8, #18
   2f8f8:	add	r2, r2, #16
   2f8fc:	mov	r5, r3
   2f900:	orr	r3, r0, r9, lsl #14
   2f904:	str	r3, [r2]
   2f908:	add	r2, sp, #6080	; 0x17c0
   2f90c:	lsr	r1, r9, #14
   2f910:	add	r2, r2, #12
   2f914:	orr	r3, r1, r8, lsl #18
   2f918:	str	r3, [r2]
   2f91c:	add	r2, sp, #6080	; 0x17c0
   2f920:	add	r2, r2, #20
   2f924:	orr	r3, ip, r8, lsl #14
   2f928:	str	r3, [r2]
   2f92c:	add	r2, sp, #6080	; 0x17c0
   2f930:	lsl	r0, r9, #23
   2f934:	add	r2, r2, #28
   2f938:	orr	r3, r0, r8, lsr #9
   2f93c:	str	r3, [r2]
   2f940:	add	r2, sp, #6080	; 0x17c0
   2f944:	lsr	r1, sl, #28
   2f948:	add	r2, r2, #32
   2f94c:	orr	r3, r1, fp, lsl #4
   2f950:	lsl	r1, fp, #30
   2f954:	strd	sl, [sp, #88]	; 0x58
   2f958:	str	r3, [r2]
   2f95c:	orr	r3, r1, sl, lsr #2
   2f960:	lsr	r1, fp, #28
   2f964:	sub	fp, pc, #212	; 0xd4
   2f968:	ldrd	sl, [fp]
   2f96c:	add	r2, sp, #6080	; 0x17c0
   2f970:	add	ip, sp, #7168	; 0x1c00
   2f974:	adds	sl, sl, r4
   2f978:	add	r2, r2, #44	; 0x2c
   2f97c:	add	ip, ip, #48	; 0x30
   2f980:	adc	fp, fp, r5
   2f984:	str	r3, [r2]
   2f988:	mov	r2, sl
   2f98c:	mov	r3, fp
   2f990:	ldrd	sl, [ip]
   2f994:	lsl	r0, r8, #23
   2f998:	orr	ip, r0, r9, lsr #9
   2f99c:	and	sl, sl, r8
   2f9a0:	and	fp, fp, r9
   2f9a4:	strd	r4, [sp, #176]	; 0xb0
   2f9a8:	add	r0, sp, #6080	; 0x17c0
   2f9ac:	mov	r4, sl
   2f9b0:	mov	r5, fp
   2f9b4:	ldrd	sl, [sp, #88]	; 0x58
   2f9b8:	add	r0, r0, #24
   2f9bc:	str	ip, [r0]
   2f9c0:	orr	ip, r1, sl, lsl #4
   2f9c4:	add	r1, sp, #6080	; 0x17c0
   2f9c8:	add	r1, r1, #36	; 0x24
   2f9cc:	lsl	r0, sl, #30
   2f9d0:	str	ip, [r1]
   2f9d4:	orr	ip, r0, fp, lsr #2
   2f9d8:	add	r0, sp, #6080	; 0x17c0
   2f9dc:	add	r0, r0, #40	; 0x28
   2f9e0:	lsl	r1, fp, #25
   2f9e4:	str	ip, [r0]
   2f9e8:	orr	ip, r1, sl, lsr #7
   2f9ec:	add	r1, sp, #6080	; 0x17c0
   2f9f0:	add	r1, r1, #52	; 0x34
   2f9f4:	str	ip, [r1]
   2f9f8:	ldrd	r0, [sp, #208]	; 0xd0
   2f9fc:	lsl	ip, sl, #25
   2fa00:	orr	ip, ip, fp, lsr #7
   2fa04:	adds	r0, r0, r2
   2fa08:	adc	r1, r1, r3
   2fa0c:	eor	r2, r4, r6
   2fa10:	eor	r3, r5, r7
   2fa14:	strd	r2, [sp, #16]
   2fa18:	add	r3, sp, #6080	; 0x17c0
   2fa1c:	add	r3, r3, #8
   2fa20:	ldrd	r8, [r3]
   2fa24:	add	r3, sp, #6080	; 0x17c0
   2fa28:	add	r3, r3, #16
   2fa2c:	ldrd	r4, [r3]
   2fa30:	add	r3, sp, #6080	; 0x17c0
   2fa34:	add	r3, r3, #48	; 0x30
   2fa38:	str	ip, [r3]
   2fa3c:	ldrd	r2, [sp, #152]	; 0x98
   2fa40:	eor	r8, r8, r4
   2fa44:	eor	r9, r9, r5
   2fa48:	orr	r2, r2, sl
   2fa4c:	orr	r3, r3, fp
   2fa50:	mov	r4, r2
   2fa54:	mov	r5, r3
   2fa58:	ldrd	r2, [sp, #16]
   2fa5c:	add	ip, sp, #6080	; 0x17c0
   2fa60:	add	ip, ip, #40	; 0x28
   2fa64:	adds	r2, r2, r0
   2fa68:	adc	r3, r3, r1
   2fa6c:	add	r1, sp, #6080	; 0x17c0
   2fa70:	add	r1, r1, #24
   2fa74:	strd	r4, [sp, #88]	; 0x58
   2fa78:	ldrd	r0, [r1]
   2fa7c:	ldrd	r4, [ip]
   2fa80:	eor	r1, r1, r9
   2fa84:	mov	r9, r1
   2fa88:	add	r1, sp, #6080	; 0x17c0
   2fa8c:	add	r1, r1, #32
   2fa90:	eor	r0, r0, r8
   2fa94:	mov	r8, r0
   2fa98:	ldrd	r0, [r1]
   2fa9c:	adds	r2, r2, r8
   2faa0:	adc	r3, r3, r9
   2faa4:	eor	r0, r0, r4
   2faa8:	eor	r1, r1, r5
   2faac:	ldrd	r4, [sp, #88]	; 0x58
   2fab0:	strd	r0, [sp, #16]
   2fab4:	ldrd	r0, [sp, #72]	; 0x48
   2fab8:	strd	sl, [sp, #88]	; 0x58
   2fabc:	and	r4, r4, r0
   2fac0:	and	r5, r5, r1
   2fac4:	ldrd	r0, [sp, #152]	; 0x98
   2fac8:	and	r1, r1, fp
   2facc:	mov	r9, r1
   2fad0:	add	r1, sp, #6080	; 0x17c0
   2fad4:	and	r0, r0, sl
   2fad8:	add	r1, r1, #48	; 0x30
   2fadc:	mov	r8, r0
   2fae0:	ldrd	sl, [sp, #16]
   2fae4:	ldrd	r0, [r1]
   2fae8:	orr	r4, r4, r8
   2faec:	orr	r5, r5, r9
   2faf0:	ldrd	r8, [sp, #48]	; 0x30
   2faf4:	eor	sl, sl, r0
   2faf8:	eor	fp, fp, r1
   2fafc:	adds	r8, r8, r2
   2fb00:	adc	r9, r9, r3
   2fb04:	adds	r4, r4, sl
   2fb08:	adc	r5, r5, fp
   2fb0c:	adds	r0, r4, r2
   2fb10:	adc	r1, r5, r3
   2fb14:	strd	r8, [sp, #136]	; 0x88
   2fb18:	strd	r0, [sp, #16]
   2fb1c:	add	r1, sp, #7168	; 0x1c00
   2fb20:	add	r1, r1, #56	; 0x38
   2fb24:	ldrd	r2, [sp, #200]	; 0xc8
   2fb28:	ldrd	sl, [r1]
   2fb2c:	ldrd	r4, [sp, #136]	; 0x88
   2fb30:	sub	r1, pc, #664	; 0x298
   2fb34:	ldrd	r0, [r1]
   2fb38:	adds	r2, r2, sl
   2fb3c:	mov	r8, r2
   2fb40:	lsr	r2, r4, #14
   2fb44:	orr	ip, r2, r5, lsl #18
   2fb48:	add	r2, sp, #6144	; 0x1800
   2fb4c:	add	r2, r2, #24
   2fb50:	adc	r3, r3, fp
   2fb54:	str	ip, [r2]
   2fb58:	ldrd	sl, [sp, #104]	; 0x68
   2fb5c:	add	ip, sp, #6144	; 0x1800
   2fb60:	mov	r9, r3
   2fb64:	add	ip, ip, #32
   2fb68:	lsr	r3, r4, #18
   2fb6c:	orr	r3, r3, r5, lsl #14
   2fb70:	str	r3, [ip]
   2fb74:	adds	sl, sl, r8
   2fb78:	add	ip, sp, #7232	; 0x1c40
   2fb7c:	adc	fp, fp, r9
   2fb80:	mov	r8, sl
   2fb84:	mov	r9, fp
   2fb88:	ldrd	sl, [ip]
   2fb8c:	lsr	r2, r5, #14
   2fb90:	lsr	r3, r5, #18
   2fb94:	adds	sl, sl, r8
   2fb98:	mov	r8, r4
   2fb9c:	adc	fp, fp, r9
   2fba0:	orr	ip, r2, r8, lsl #18
   2fba4:	add	r2, sp, #6144	; 0x1800
   2fba8:	add	r2, r2, #28
   2fbac:	str	ip, [r2]
   2fbb0:	add	r2, sp, #6144	; 0x1800
   2fbb4:	add	r2, r2, #36	; 0x24
   2fbb8:	orr	r3, r3, r8, lsl #14
   2fbbc:	str	r3, [r2]
   2fbc0:	strd	sl, [sp, #184]	; 0xb8
   2fbc4:	add	r2, sp, #6144	; 0x1800
   2fbc8:	ldrd	sl, [sp, #16]
   2fbcc:	lsl	lr, r5, #23
   2fbd0:	add	r2, r2, #44	; 0x2c
   2fbd4:	orr	r3, lr, r8, lsr #9
   2fbd8:	lsr	r4, sl, #28
   2fbdc:	str	r3, [r2]
   2fbe0:	lsl	ip, fp, #30
   2fbe4:	ldrd	r2, [sp, #32]
   2fbe8:	ldrd	sl, [sp, #216]	; 0xd8
   2fbec:	mov	r9, r5
   2fbf0:	lsl	lr, r8, #23
   2fbf4:	eor	sl, sl, r2
   2fbf8:	eor	fp, fp, r3
   2fbfc:	mov	r2, sl
   2fc00:	mov	r3, fp
   2fc04:	ldrd	sl, [sp, #16]
   2fc08:	orr	lr, lr, r9, lsr #9
   2fc0c:	orr	r5, r4, fp, lsl #4
   2fc10:	add	r4, sp, #6144	; 0x1800
   2fc14:	add	r4, r4, #48	; 0x30
   2fc18:	str	r5, [r4]
   2fc1c:	mov	r4, r8
   2fc20:	orr	ip, ip, sl, lsr #2
   2fc24:	and	r4, r4, r2
   2fc28:	add	sl, sp, #6144	; 0x1800
   2fc2c:	mov	r5, fp
   2fc30:	mov	r2, r4
   2fc34:	add	sl, sl, #60	; 0x3c
   2fc38:	add	r4, sp, #6144	; 0x1800
   2fc3c:	add	r4, r4, #40	; 0x28
   2fc40:	str	ip, [sl]
   2fc44:	lsr	ip, r5, #28
   2fc48:	mov	r5, r9
   2fc4c:	ldrd	r8, [sp, #16]
   2fc50:	str	lr, [r4]
   2fc54:	add	r4, sp, #6144	; 0x1800
   2fc58:	add	r4, r4, #52	; 0x34
   2fc5c:	ldrd	sl, [sp, #184]	; 0xb8
   2fc60:	orr	ip, ip, r8, lsl #4
   2fc64:	str	ip, [r4]
   2fc68:	add	r4, sp, #6144	; 0x1800
   2fc6c:	lsl	lr, r8, #30
   2fc70:	add	r4, r4, #56	; 0x38
   2fc74:	adds	sl, sl, r0
   2fc78:	orr	lr, lr, r9, lsr #2
   2fc7c:	str	lr, [r4]
   2fc80:	adc	fp, fp, r1
   2fc84:	add	lr, sp, #6208	; 0x1840
   2fc88:	adds	r0, sl, r6
   2fc8c:	adc	r1, fp, r7
   2fc90:	lsl	ip, r9, #25
   2fc94:	ldrd	r6, [sp, #216]	; 0xd8
   2fc98:	add	lr, lr, #4
   2fc9c:	orr	ip, ip, r8, lsr #7
   2fca0:	str	ip, [lr]
   2fca4:	and	r5, r5, r3
   2fca8:	add	lr, sp, #6144	; 0x1800
   2fcac:	mov	r3, r5
   2fcb0:	eor	r6, r6, r2
   2fcb4:	add	lr, lr, #24
   2fcb8:	eor	r7, r7, r3
   2fcbc:	mov	r2, r6
   2fcc0:	adds	r2, r2, r0
   2fcc4:	mov	r3, r7
   2fcc8:	ldrd	r6, [lr]
   2fccc:	add	lr, sp, #6144	; 0x1800
   2fcd0:	adc	r3, r3, r1
   2fcd4:	add	lr, lr, #32
   2fcd8:	add	r1, sp, #6144	; 0x1800
   2fcdc:	add	r1, r1, #40	; 0x28
   2fce0:	ldrd	r4, [lr]
   2fce4:	ldrd	r0, [r1]
   2fce8:	add	lr, sp, #6208	; 0x1840
   2fcec:	eor	r6, r6, r4
   2fcf0:	eor	r7, r7, r5
   2fcf4:	eor	r0, r0, r6
   2fcf8:	eor	r1, r1, r7
   2fcfc:	lsl	ip, r8, #25
   2fd00:	orr	ip, ip, r9, lsr #7
   2fd04:	str	ip, [lr]
   2fd08:	strd	r0, [sp, #16]
   2fd0c:	add	ip, sp, #6144	; 0x1800
   2fd10:	add	r1, sp, #6144	; 0x1800
   2fd14:	add	ip, ip, #56	; 0x38
   2fd18:	add	r1, r1, #48	; 0x30
   2fd1c:	ldrd	r6, [ip]
   2fd20:	ldrd	r0, [r1]
   2fd24:	ldrd	sl, [sp, #88]	; 0x58
   2fd28:	eor	r0, r0, r6
   2fd2c:	eor	r1, r1, r7
   2fd30:	ldrd	r6, [sp, #152]	; 0x98
   2fd34:	orr	r4, sl, r8
   2fd38:	orr	r5, fp, r9
   2fd3c:	and	r6, r6, r4
   2fd40:	and	r7, r7, r5
   2fd44:	mov	r4, r6
   2fd48:	mov	r5, r7
   2fd4c:	ldrd	r6, [sp, #16]
   2fd50:	ldr	ip, [sp, #176]	; 0xb0
   2fd54:	strd	r8, [sp, #16]
   2fd58:	adds	r6, r6, r2
   2fd5c:	adc	r7, r7, r3
   2fd60:	lsr	ip, ip, #6
   2fd64:	str	ip, [sp, #1072]	; 0x430
   2fd68:	mov	r2, r6
   2fd6c:	mov	r3, r7
   2fd70:	mov	r6, sl
   2fd74:	mov	r7, fp
   2fd78:	ldrd	sl, [sp, #176]	; 0xb0
   2fd7c:	ldr	ip, [sp, #1072]	; 0x430
   2fd80:	and	r6, r6, r8
   2fd84:	and	r7, r7, r9
   2fd88:	orr	ip, ip, fp, lsl #26
   2fd8c:	ldrd	r8, [lr]
   2fd90:	add	lr, sp, #6208	; 0x1840
   2fd94:	str	ip, [sp, #1072]	; 0x430
   2fd98:	add	lr, lr, #24
   2fd9c:	lsr	ip, sl, #19
   2fda0:	orr	ip, ip, fp, lsl #13
   2fda4:	str	ip, [lr]
   2fda8:	add	lr, sp, #6208	; 0x1840
   2fdac:	orr	r4, r4, r6
   2fdb0:	orr	r5, r5, r7
   2fdb4:	lsl	ip, fp, #3
   2fdb8:	ldrd	r6, [sp, #72]	; 0x48
   2fdbc:	add	lr, lr, #36	; 0x24
   2fdc0:	orr	ip, ip, sl, lsr #29
   2fdc4:	str	ip, [lr]
   2fdc8:	add	lr, sp, #6208	; 0x1840
   2fdcc:	adds	r6, r6, r2
   2fdd0:	eor	r8, r8, r0
   2fdd4:	lsr	ip, fp, #19
   2fdd8:	add	lr, lr, #28
   2fddc:	adc	r7, r7, r3
   2fde0:	orr	ip, ip, sl, lsl #13
   2fde4:	adds	r0, r8, r4
   2fde8:	eor	r9, r9, r1
   2fdec:	str	ip, [lr]
   2fdf0:	adc	r1, r9, r5
   2fdf4:	add	lr, sp, #6208	; 0x1840
   2fdf8:	adds	r8, r0, r2
   2fdfc:	adc	r9, r1, r3
   2fe00:	add	lr, lr, #32
   2fe04:	lsl	ip, sl, #3
   2fe08:	add	r3, sp, #6208	; 0x1840
   2fe0c:	orr	ip, ip, fp, lsr #29
   2fe10:	add	r3, r3, #24
   2fe14:	str	ip, [lr]
   2fe18:	add	sl, sp, #1072	; 0x430
   2fe1c:	lsr	ip, fp, #6
   2fe20:	ldrd	r0, [r3]
   2fe24:	str	ip, [sp, #1076]	; 0x434
   2fe28:	ldrd	r2, [lr]
   2fe2c:	add	ip, sp, #7232	; 0x1c40
   2fe30:	ldrd	sl, [sl]
   2fe34:	add	ip, ip, #8
   2fe38:	eor	r0, r0, r2
   2fe3c:	ldrd	r4, [ip]
   2fe40:	eor	r1, r1, r3
   2fe44:	ldrd	r2, [sp, #128]	; 0x80
   2fe48:	eor	sl, sl, r0
   2fe4c:	eor	fp, fp, r1
   2fe50:	mov	r0, sl
   2fe54:	mov	r1, fp
   2fe58:	ldrd	sl, [sp, #40]	; 0x28
   2fe5c:	adds	r2, r2, r4
   2fe60:	mov	r4, r2
   2fe64:	adc	r3, r3, r5
   2fe68:	adds	sl, sl, r4
   2fe6c:	mov	r4, sl
   2fe70:	add	sl, sp, #6208	; 0x1840
   2fe74:	lsr	lr, r6, #14
   2fe78:	add	sl, sl, #40	; 0x28
   2fe7c:	orr	lr, lr, r7, lsl #18
   2fe80:	str	lr, [sl]
   2fe84:	add	sl, sp, #6208	; 0x1840
   2fe88:	mov	r5, r3
   2fe8c:	lsr	ip, r6, #18
   2fe90:	add	sl, sl, #48	; 0x30
   2fe94:	adc	fp, fp, r5
   2fe98:	orr	ip, ip, r7, lsl #14
   2fe9c:	str	ip, [sl]
   2fea0:	mov	r5, fp
   2fea4:	adds	sl, r4, r0
   2fea8:	adc	fp, r5, r1
   2feac:	mov	r4, r6
   2feb0:	add	r1, sp, #6208	; 0x1840
   2feb4:	lsr	lr, r7, #14
   2feb8:	add	r1, r1, #44	; 0x2c
   2febc:	orr	lr, lr, r4, lsl #18
   2fec0:	str	lr, [r1]
   2fec4:	add	lr, sp, #6208	; 0x1840
   2fec8:	lsr	ip, r7, #18
   2fecc:	add	lr, lr, #52	; 0x34
   2fed0:	lsl	r0, r7, #23
   2fed4:	orr	ip, ip, r4, lsl #14
   2fed8:	str	ip, [lr]
   2fedc:	mov	r5, r7
   2fee0:	orr	ip, r0, r4, lsr #9
   2fee4:	add	r0, sp, #6208	; 0x1840
   2fee8:	add	r0, r0, #60	; 0x3c
   2feec:	strd	r4, [sp, #72]	; 0x48
   2fef0:	str	ip, [r0]
   2fef4:	ldr	ip, [sp, #72]	; 0x48
   2fef8:	lsr	r6, r8, #28
   2fefc:	add	lr, sp, #6272	; 0x1880
   2ff00:	lsl	r1, r9, #30
   2ff04:	lsl	r0, ip, #23
   2ff08:	orr	ip, r6, r9, lsl #4
   2ff0c:	str	ip, [lr]
   2ff10:	orr	ip, r1, r8, lsr #2
   2ff14:	add	r1, sp, #6272	; 0x1880
   2ff18:	add	r1, r1, #12
   2ff1c:	ldrd	r4, [sp, #136]	; 0x88
   2ff20:	strd	sl, [sp, #200]	; 0xc8
   2ff24:	ldrd	sl, [sp, #32]
   2ff28:	str	ip, [r1]
   2ff2c:	ldr	ip, [sp, #76]	; 0x4c
   2ff30:	add	r3, pc, #904	; 0x388
   2ff34:	ldrd	r2, [r3]
   2ff38:	ldrd	r6, [sp, #200]	; 0xc8
   2ff3c:	orr	ip, r0, ip, lsr #9
   2ff40:	add	r0, sp, #6208	; 0x1840
   2ff44:	adds	r6, r6, r2
   2ff48:	add	r0, r0, #56	; 0x38
   2ff4c:	lsr	r1, r9, #28
   2ff50:	adc	r7, r7, r3
   2ff54:	str	ip, [r0]
   2ff58:	mov	r2, r6
   2ff5c:	orr	ip, r1, r8, lsl #4
   2ff60:	mov	r3, r7
   2ff64:	add	r1, sp, #6272	; 0x1880
   2ff68:	ldrd	r6, [sp, #72]	; 0x48
   2ff6c:	add	r1, r1, #4
   2ff70:	eor	r4, r4, sl
   2ff74:	eor	r5, r5, fp
   2ff78:	lsl	r0, r8, #30
   2ff7c:	str	ip, [r1]
   2ff80:	and	r6, r6, r4
   2ff84:	orr	ip, r0, r9, lsr #2
   2ff88:	and	r7, r7, r5
   2ff8c:	add	r0, sp, #6272	; 0x1880
   2ff90:	mov	r4, r6
   2ff94:	mov	r5, r7
   2ff98:	add	r0, r0, #8
   2ff9c:	ldrd	r6, [sp, #216]	; 0xd8
   2ffa0:	lsl	r1, r9, #25
   2ffa4:	str	ip, [r0]
   2ffa8:	add	lr, sp, #6208	; 0x1840
   2ffac:	orr	ip, r1, r8, lsr #7
   2ffb0:	add	r1, sp, #6272	; 0x1880
   2ffb4:	adds	r6, r6, r2
   2ffb8:	add	r1, r1, #20
   2ffbc:	mov	r2, sl
   2ffc0:	add	lr, lr, #40	; 0x28
   2ffc4:	adc	r7, r7, r3
   2ffc8:	mov	r0, r6
   2ffcc:	mov	r3, fp
   2ffd0:	eor	r2, r2, r4
   2ffd4:	str	ip, [r1]
   2ffd8:	adds	r2, r2, r0
   2ffdc:	mov	r1, r7
   2ffe0:	eor	r3, r3, r5
   2ffe4:	ldrd	r6, [lr]
   2ffe8:	add	lr, sp, #6208	; 0x1840
   2ffec:	adc	r3, r3, r1
   2fff0:	add	lr, lr, #48	; 0x30
   2fff4:	add	r1, sp, #6208	; 0x1840
   2fff8:	add	r1, r1, #56	; 0x38
   2fffc:	ldrd	r4, [lr]
   30000:	ldrd	r0, [r1]
   30004:	add	lr, sp, #6272	; 0x1880
   30008:	add	lr, lr, #16
   3000c:	lsl	ip, r8, #25
   30010:	eor	r7, r7, r5
   30014:	orr	ip, ip, r9, lsr #7
   30018:	str	ip, [lr]
   3001c:	eor	r1, r1, r7
   30020:	add	ip, sp, #6272	; 0x1880
   30024:	eor	r6, r6, r4
   30028:	mov	r7, r1
   3002c:	add	ip, ip, #8
   30030:	add	r1, sp, #6272	; 0x1880
   30034:	eor	r0, r0, r6
   30038:	ldrd	sl, [ip]
   3003c:	mov	r6, r0
   30040:	ldrd	r0, [r1]
   30044:	ldrd	r4, [sp, #16]
   30048:	adds	r2, r2, r6
   3004c:	eor	r0, r0, sl
   30050:	eor	r1, r1, fp
   30054:	ldrd	sl, [sp, #88]	; 0x58
   30058:	adc	r3, r3, r7
   3005c:	ldrd	r6, [sp, #16]
   30060:	orr	r4, r4, r8
   30064:	orr	r5, r5, r9
   30068:	and	sl, sl, r4
   3006c:	and	fp, fp, r5
   30070:	and	r6, r6, r8
   30074:	and	r7, r7, r9
   30078:	mov	r4, sl
   3007c:	mov	r5, fp
   30080:	orr	r4, r4, r6
   30084:	ldrd	sl, [lr]
   30088:	orr	r5, r5, r7
   3008c:	ldrd	r6, [sp, #152]	; 0x98
   30090:	eor	sl, sl, r0
   30094:	eor	fp, fp, r1
   30098:	adds	r6, r6, r2
   3009c:	adc	r7, r7, r3
   300a0:	mov	r0, sl
   300a4:	mov	r1, fp
   300a8:	ldrd	sl, [sp, #184]	; 0xb8
   300ac:	strd	r6, [sp, #128]	; 0x80
   300b0:	add	r6, sp, #6272	; 0x1880
   300b4:	lsr	lr, sl, #19
   300b8:	add	r6, r6, #40	; 0x28
   300bc:	orr	lr, lr, fp, lsl #13
   300c0:	str	lr, [r6]
   300c4:	lsr	ip, sl, #6
   300c8:	add	r6, sp, #6272	; 0x1880
   300cc:	str	ip, [sp, #1088]	; 0x440
   300d0:	add	r6, r6, #52	; 0x34
   300d4:	lsl	ip, fp, #3
   300d8:	adds	r0, r0, r4
   300dc:	orr	ip, ip, sl, lsr #29
   300e0:	ldr	r7, [sp, #1088]	; 0x440
   300e4:	adc	r1, r1, r5
   300e8:	mov	r4, sl
   300ec:	mov	r5, fp
   300f0:	str	ip, [r6]
   300f4:	lsl	ip, sl, #3
   300f8:	adds	sl, r0, r2
   300fc:	orr	r7, r7, fp, lsl #26
   30100:	lsr	lr, fp, #19
   30104:	adc	fp, r1, r3
   30108:	mov	r3, r5
   3010c:	add	r1, sp, #6272	; 0x1880
   30110:	add	r1, r1, #44	; 0x2c
   30114:	orr	lr, lr, r4, lsl #13
   30118:	orr	ip, ip, r3, lsr #29
   3011c:	lsr	r3, r3, #6
   30120:	str	lr, [r1]
   30124:	str	r3, [sp, #1092]	; 0x444
   30128:	add	r1, sp, #6272	; 0x1880
   3012c:	add	r3, sp, #6272	; 0x1880
   30130:	add	r1, r1, #48	; 0x30
   30134:	add	r3, r3, #40	; 0x28
   30138:	str	ip, [r1]
   3013c:	ldrd	r2, [r3]
   30140:	str	r7, [sp, #1088]	; 0x440
   30144:	ldrd	r6, [r1]
   30148:	add	ip, sp, #7232	; 0x1c40
   3014c:	add	ip, ip, #16
   30150:	eor	r2, r2, r6
   30154:	eor	r3, r3, r7
   30158:	mov	r0, r2
   3015c:	mov	r1, r3
   30160:	ldrd	r2, [sp, #56]	; 0x38
   30164:	ldrd	r4, [ip]
   30168:	ldrd	r6, [sp, #128]	; 0x80
   3016c:	adds	r2, r2, r4
   30170:	adc	r3, r3, r5
   30174:	mov	r5, r3
   30178:	add	r3, sp, #1088	; 0x440
   3017c:	mov	r4, r2
   30180:	ldrd	r2, [r3]
   30184:	lsr	lr, r6, #14
   30188:	lsr	ip, r6, #18
   3018c:	eor	r2, r2, r0
   30190:	eor	r3, r3, r1
   30194:	mov	r0, r2
   30198:	mov	r1, r3
   3019c:	ldrd	r2, [sp, #80]	; 0x50
   301a0:	adds	r2, r2, r4
   301a4:	mov	r4, r2
   301a8:	add	r2, sp, #6272	; 0x1880
   301ac:	adc	r3, r3, r5
   301b0:	add	r2, r2, #56	; 0x38
   301b4:	mov	r5, r3
   301b8:	orr	r3, lr, r7, lsl #18
   301bc:	str	r3, [r2]
   301c0:	add	r2, sp, #6336	; 0x18c0
   301c4:	orr	r3, ip, r7, lsl #14
   301c8:	str	r3, [r2]
   301cc:	add	r2, sp, #6336	; 0x18c0
   301d0:	lsr	ip, sl, #28
   301d4:	add	r2, r2, #16
   301d8:	orr	r3, ip, fp, lsl #4
   301dc:	str	r3, [r2]
   301e0:	add	r2, sp, #6336	; 0x18c0
   301e4:	lsl	ip, fp, #30
   301e8:	add	r2, r2, #28
   301ec:	orr	r3, ip, sl, lsr #2
   301f0:	str	r3, [r2]
   301f4:	adds	r2, r4, r0
   301f8:	adc	r3, r5, r1
   301fc:	lsr	lr, r7, #14
   30200:	strd	r2, [sp, #56]	; 0x38
   30204:	add	r2, sp, #6272	; 0x1880
   30208:	add	r2, r2, #60	; 0x3c
   3020c:	orr	r3, lr, r6, lsl #18
   30210:	str	r3, [r2]
   30214:	add	r2, sp, #6336	; 0x18c0
   30218:	lsr	ip, r7, #18
   3021c:	add	r2, r2, #4
   30220:	orr	r3, ip, r6, lsl #14
   30224:	str	r3, [r2]
   30228:	add	r2, sp, #6336	; 0x18c0
   3022c:	lsr	r5, fp, #28
   30230:	add	r2, r2, #20
   30234:	orr	r3, r5, sl, lsl #4
   30238:	str	r3, [r2]
   3023c:	add	r2, sp, #6336	; 0x18c0
   30240:	lsl	r4, sl, #30
   30244:	add	r2, r2, #24
   30248:	orr	r3, r4, fp, lsr #2
   3024c:	str	r3, [r2]
   30250:	ldrd	r4, [sp, #72]	; 0x48
   30254:	ldrd	r2, [sp, #136]	; 0x88
   30258:	lsl	r0, r7, #23
   3025c:	lsl	r1, fp, #25
   30260:	strd	r2, [sp, #48]	; 0x30
   30264:	eor	r2, r2, r4
   30268:	mov	r4, r2
   3026c:	add	r2, sp, #6336	; 0x18c0
   30270:	eor	r3, r3, r5
   30274:	add	r2, r2, #12
   30278:	mov	r5, r3
   3027c:	orr	r3, r0, r6, lsr #9
   30280:	str	r3, [r2]
   30284:	add	r2, sp, #6336	; 0x18c0
   30288:	add	r2, r2, #36	; 0x24
   3028c:	orr	r3, r1, sl, lsr #7
   30290:	str	r3, [r2]
   30294:	add	r1, pc, #44	; 0x2c
   30298:	ldrd	r0, [r1]
   3029c:	ldrd	r2, [sp, #56]	; 0x38
   302a0:	lsl	ip, r6, #23
   302a4:	lsl	lr, sl, #25
   302a8:	adds	r0, r0, r2
   302ac:	adc	r1, r1, r3
   302b0:	mov	r3, r1
   302b4:	mov	r1, r7
   302b8:	b	302d0 <__assert_fail@plt+0x1efe4>
   302bc:	nop			; (mov r0, r0)
   302c0:	andsvc	r6, r7, #744	; 0x2e8
   302c4:	ldrbteq	r6, [r0], sl, lsr #15
   302c8:	sbcge	r9, r8, #10878976	; 0xa60000
   302cc:	beq	190f9e8 <optarg@@GLIBC_2.4+0x18bd840>
   302d0:	mov	r2, r0
   302d4:	orr	ip, ip, r1, lsr #9
   302d8:	add	r1, sp, #6336	; 0x18c0
   302dc:	add	r1, r1, #8
   302e0:	str	ip, [r1]
   302e4:	add	r1, sp, #6336	; 0x18c0
   302e8:	add	r1, r1, #32
   302ec:	orr	ip, lr, fp, lsr #7
   302f0:	str	ip, [r1]
   302f4:	orr	r0, r8, sl
   302f8:	orr	r1, r9, fp
   302fc:	and	r7, r7, r5
   30300:	strd	r0, [sp, #152]	; 0x98
   30304:	ldrd	r0, [sp, #32]
   30308:	and	r6, r6, r4
   3030c:	add	ip, sp, #6336	; 0x18c0
   30310:	adds	r0, r0, r2
   30314:	adc	r1, r1, r3
   30318:	mov	r2, r0
   3031c:	mov	r3, r1
   30320:	ldrd	r0, [sp, #48]	; 0x30
   30324:	eor	r1, r1, r7
   30328:	mov	r5, r1
   3032c:	add	r1, sp, #6272	; 0x1880
   30330:	add	r1, r1, #56	; 0x38
   30334:	eor	r0, r0, r6
   30338:	mov	r4, r0
   3033c:	ldrd	r6, [ip]
   30340:	ldrd	r0, [r1]
   30344:	eor	r0, r0, r6
   30348:	eor	r1, r1, r7
   3034c:	ldrd	r6, [sp, #152]	; 0x98
   30350:	strd	r0, [sp, #48]	; 0x30
   30354:	ldrd	r0, [sp, #16]
   30358:	and	r6, r6, r0
   3035c:	mov	r0, r6
   30360:	and	r7, r7, r1
   30364:	adds	r6, r2, r4
   30368:	mov	r1, r7
   3036c:	adc	r7, r3, r5
   30370:	add	r3, sp, #6336	; 0x18c0
   30374:	add	r3, r3, #16
   30378:	ldrd	r4, [r3]
   3037c:	add	r3, sp, #6336	; 0x18c0
   30380:	add	r3, r3, #24
   30384:	strd	r6, [sp, #32]
   30388:	ldrd	r6, [r3]
   3038c:	add	r3, sp, #6336	; 0x18c0
   30390:	add	r3, r3, #8
   30394:	eor	r4, r4, r6
   30398:	eor	r5, r5, r7
   3039c:	mov	r6, r4
   303a0:	mov	r7, r5
   303a4:	ldrd	r4, [r3]
   303a8:	ldrd	r2, [sp, #48]	; 0x30
   303ac:	eor	r5, r5, r3
   303b0:	add	r3, sp, #6336	; 0x18c0
   303b4:	add	r3, r3, #32
   303b8:	eor	r4, r4, r2
   303bc:	ldrd	r2, [r3]
   303c0:	strd	r4, [sp, #48]	; 0x30
   303c4:	ldrd	r4, [sp, #48]	; 0x30
   303c8:	eor	r2, r2, r6
   303cc:	eor	r3, r3, r7
   303d0:	ldrd	r6, [sp, #200]	; 0xc8
   303d4:	strd	r2, [sp, #152]	; 0x98
   303d8:	lsr	r3, r6, #6
   303dc:	str	r3, [sp, #1104]	; 0x450
   303e0:	ldrd	r2, [sp, #32]
   303e4:	adds	r2, r2, r4
   303e8:	adc	r3, r3, r5
   303ec:	and	r4, r8, sl
   303f0:	and	r5, r9, fp
   303f4:	orr	r4, r4, r0
   303f8:	orr	r5, r5, r1
   303fc:	ldrd	r0, [sp, #152]	; 0x98
   30400:	adds	r0, r0, r4
   30404:	adc	r1, r1, r5
   30408:	ldrd	r4, [sp, #88]	; 0x58
   3040c:	strd	r0, [sp, #48]	; 0x30
   30410:	lsr	r0, r6, #19
   30414:	orr	ip, r0, r7, lsl #13
   30418:	add	r0, sp, #6336	; 0x18c0
   3041c:	add	r0, r0, #56	; 0x38
   30420:	lsl	r1, r7, #3
   30424:	str	ip, [r0]
   30428:	lsr	ip, r7, #19
   3042c:	str	ip, [sp, #152]	; 0x98
   30430:	orr	ip, r1, r6, lsr #29
   30434:	add	r1, sp, #6400	; 0x1900
   30438:	add	r1, r1, #4
   3043c:	str	ip, [r1]
   30440:	lsl	r1, r6, #3
   30444:	str	r1, [sp, #200]	; 0xc8
   30448:	ldrd	r0, [sp, #48]	; 0x30
   3044c:	adds	r4, r4, r2
   30450:	adc	r5, r5, r3
   30454:	adds	r0, r0, r2
   30458:	adc	r1, r1, r3
   3045c:	ldr	ip, [sp, #1104]	; 0x450
   30460:	strd	r0, [sp, #48]	; 0x30
   30464:	add	r3, sp, #6336	; 0x18c0
   30468:	ldr	r0, [sp, #152]	; 0x98
   3046c:	orr	ip, ip, r7, lsl #26
   30470:	add	r3, r3, #60	; 0x3c
   30474:	str	ip, [sp, #1104]	; 0x450
   30478:	orr	ip, r0, r6, lsl #13
   3047c:	str	ip, [r3]
   30480:	mov	r2, r6
   30484:	mov	r3, r7
   30488:	ldr	r1, [sp, #200]	; 0xc8
   3048c:	strd	r2, [sp, #200]	; 0xc8
   30490:	lsr	r3, r7, #6
   30494:	orr	ip, r1, r7, lsr #29
   30498:	str	r3, [sp, #1108]	; 0x454
   3049c:	add	r1, sp, #6400	; 0x1900
   304a0:	add	r3, sp, #6336	; 0x18c0
   304a4:	add	r3, r3, #56	; 0x38
   304a8:	str	ip, [r1]
   304ac:	add	ip, sp, #7232	; 0x1c40
   304b0:	ldrd	r6, [r1]
   304b4:	ldrd	r2, [r3]
   304b8:	add	ip, ip, #24
   304bc:	strd	r4, [sp, #32]
   304c0:	ldrd	r0, [sp, #160]	; 0xa0
   304c4:	ldrd	r4, [ip]
   304c8:	eor	r2, r2, r6
   304cc:	eor	r3, r3, r7
   304d0:	ldrd	r6, [sp, #32]
   304d4:	adds	r0, r0, r4
   304d8:	adc	r1, r1, r5
   304dc:	lsr	r4, r6, #18
   304e0:	lsr	r5, r6, #14
   304e4:	ldrd	r6, [sp, #48]	; 0x30
   304e8:	lsr	lr, r6, #28
   304ec:	add	r6, sp, #1104	; 0x450
   304f0:	lsl	ip, r7, #30
   304f4:	ldrd	r6, [r6]
   304f8:	eor	r6, r6, r2
   304fc:	eor	r7, r7, r3
   30500:	ldrd	r2, [sp, #24]
   30504:	strd	r6, [sp, #88]	; 0x58
   30508:	ldrd	r6, [sp, #32]
   3050c:	adds	r2, r2, r0
   30510:	mov	r0, r2
   30514:	add	r2, sp, #6400	; 0x1900
   30518:	adc	r3, r3, r1
   3051c:	add	r2, r2, #8
   30520:	mov	r1, r3
   30524:	orr	r3, r5, r7, lsl #18
   30528:	str	r3, [r2]
   3052c:	add	r2, sp, #6400	; 0x1900
   30530:	add	r2, r2, #16
   30534:	orr	r3, r4, r7, lsl #14
   30538:	lsr	r5, r7, #14
   3053c:	lsr	r4, r7, #18
   30540:	ldrd	r6, [sp, #48]	; 0x30
   30544:	str	r3, [r2]
   30548:	add	r2, sp, #6400	; 0x1900
   3054c:	add	r2, r2, #32
   30550:	orr	r3, lr, r7, lsl #4
   30554:	str	r3, [r2]
   30558:	add	r2, sp, #6400	; 0x1900
   3055c:	add	r2, r2, #44	; 0x2c
   30560:	orr	r3, ip, r6, lsr #2
   30564:	str	r3, [r2]
   30568:	ldrd	r2, [sp, #88]	; 0x58
   3056c:	lsl	ip, r6, #30
   30570:	add	r6, sp, #6400	; 0x1900
   30574:	adds	r2, r2, r0
   30578:	adc	r3, r3, r1
   3057c:	ldrd	r0, [sp, #32]
   30580:	add	r6, r6, #12
   30584:	strd	r2, [sp, #208]	; 0xd0
   30588:	orr	r5, r5, r0, lsl #18
   3058c:	str	r5, [r6]
   30590:	orr	r5, r4, r0, lsl #14
   30594:	add	r4, sp, #6400	; 0x1900
   30598:	add	r4, r4, #20
   3059c:	lsr	lr, r7, #28
   305a0:	lsl	r3, r7, #25
   305a4:	str	r5, [r4]
   305a8:	ldrd	r6, [sp, #128]	; 0x80
   305ac:	ldrd	r4, [sp, #72]	; 0x48
   305b0:	lsl	r2, r1, #23
   305b4:	eor	r7, r7, r5
   305b8:	mov	r5, r7
   305bc:	eor	r6, r6, r4
   305c0:	ldr	r7, [sp, #48]	; 0x30
   305c4:	mov	r4, r6
   305c8:	add	r6, sp, #6400	; 0x1900
   305cc:	add	r6, r6, #36	; 0x24
   305d0:	orr	lr, lr, r7, lsl #4
   305d4:	str	lr, [r6]
   305d8:	ldrd	r6, [sp, #48]	; 0x30
   305dc:	add	lr, sp, #6400	; 0x1900
   305e0:	add	lr, lr, #40	; 0x28
   305e4:	orr	ip, ip, r7, lsr #2
   305e8:	str	ip, [lr]
   305ec:	orr	ip, r2, r0, lsr #9
   305f0:	add	r2, sp, #6400	; 0x1900
   305f4:	add	r2, r2, #28
   305f8:	str	ip, [r2]
   305fc:	ldr	ip, [sp, #36]	; 0x24
   30600:	lsl	r0, r0, #23
   30604:	add	r2, sp, #6400	; 0x1900
   30608:	orr	ip, r0, ip, lsr #9
   3060c:	add	r0, sp, #6400	; 0x1900
   30610:	add	r0, r0, #24
   30614:	lsl	r1, r6, #25
   30618:	add	r2, r2, #52	; 0x34
   3061c:	orr	r3, r3, r6, lsr #7
   30620:	str	ip, [r0]
   30624:	orr	ip, r1, r7, lsr #7
   30628:	add	r1, sp, #6400	; 0x1900
   3062c:	str	r3, [r2]
   30630:	add	r1, r1, #48	; 0x30
   30634:	ldrd	r2, [sp, #32]
   30638:	str	ip, [r1]
   3063c:	ldrd	r0, [sp, #72]	; 0x48
   30640:	and	r2, r2, r4
   30644:	and	r3, r3, r5
   30648:	mov	r4, r2
   3064c:	mov	r5, r3
   30650:	eor	r0, r0, r4
   30654:	eor	r1, r1, r5
   30658:	ldrd	r4, [sp, #56]	; 0x38
   3065c:	strd	r0, [sp, #88]	; 0x58
   30660:	add	r1, sp, #7232	; 0x1c40
   30664:	lsr	ip, r4, #6
   30668:	orr	ip, ip, r5, lsl #26
   3066c:	add	r1, r1, #32
   30670:	str	ip, [sp, #1120]	; 0x460
   30674:	lsr	ip, r5, #6
   30678:	str	ip, [sp, #1124]	; 0x464
   3067c:	ldrd	r4, [sp, #96]	; 0x60
   30680:	ldrd	r0, [r1]
   30684:	orr	r2, r6, sl
   30688:	orr	r3, r7, fp
   3068c:	adds	r4, r4, r0
   30690:	adc	r5, r5, r1
   30694:	mov	r0, r4
   30698:	mov	r1, r5
   3069c:	ldrd	r4, [sp, #64]	; 0x40
   306a0:	add	ip, sp, #6400	; 0x1900
   306a4:	add	ip, ip, #24
   306a8:	adds	r4, r4, r0
   306ac:	adc	r5, r5, r1
   306b0:	add	r1, sp, #6400	; 0x1900
   306b4:	add	r1, r1, #8
   306b8:	ldrd	r6, [r1]
   306bc:	add	r1, sp, #6400	; 0x1900
   306c0:	add	r1, r1, #16
   306c4:	strd	r4, [sp, #152]	; 0x98
   306c8:	ldrd	r4, [r1]
   306cc:	add	r1, sp, #6400	; 0x1900
   306d0:	add	r1, r1, #32
   306d4:	eor	r6, r6, r4
   306d8:	eor	r7, r7, r5
   306dc:	ldrd	r4, [ip]
   306e0:	add	ip, sp, #6400	; 0x1900
   306e4:	add	ip, ip, #48	; 0x30
   306e8:	eor	r4, r4, r6
   306ec:	eor	r5, r5, r7
   306f0:	ldrd	r6, [r1]
   306f4:	add	r1, sp, #6400	; 0x1900
   306f8:	add	r1, r1, #40	; 0x28
   306fc:	strd	r4, [sp, #96]	; 0x60
   30700:	ldrd	r4, [r1]
   30704:	and	r2, r2, r8
   30708:	and	r3, r3, r9
   3070c:	eor	r6, r6, r4
   30710:	eor	r7, r7, r5
   30714:	ldrd	r4, [sp, #48]	; 0x30
   30718:	mov	r0, r6
   3071c:	mov	r1, r7
   30720:	ldrd	r6, [ip]
   30724:	and	r4, r4, sl
   30728:	and	r5, r5, fp
   3072c:	eor	r6, r6, r0
   30730:	orr	r4, r4, r2
   30734:	adds	r2, r4, r6
   30738:	eor	r7, r7, r1
   3073c:	orr	r5, r5, r3
   30740:	ldrd	r0, [sp, #56]	; 0x38
   30744:	adc	r3, r5, r7
   30748:	ldrd	r4, [sp, #208]	; 0xd0
   3074c:	strd	r2, [sp, #160]	; 0xa0
   30750:	add	r2, sp, #6464	; 0x1940
   30754:	lsr	r3, r0, #19
   30758:	add	r2, r2, #8
   3075c:	orr	r3, r3, r1, lsl #13
   30760:	str	r3, [r2]
   30764:	add	r2, sp, #6464	; 0x1940
   30768:	lsl	r3, r1, #3
   3076c:	add	r2, r2, #20
   30770:	orr	r3, r3, r0, lsr #29
   30774:	str	r3, [r2]
   30778:	add	r2, sp, #6464	; 0x1940
   3077c:	lsr	r3, r1, #19
   30780:	add	r2, r2, #12
   30784:	orr	r3, r3, r0, lsl #13
   30788:	str	r3, [r2]
   3078c:	add	r2, sp, #6464	; 0x1940
   30790:	lsl	r3, r0, #3
   30794:	add	r2, r2, #16
   30798:	orr	r3, r3, r1, lsr #29
   3079c:	lsr	ip, r4, #6
   307a0:	str	r3, [r2]
   307a4:	orr	r3, ip, r5, lsl #26
   307a8:	str	r3, [sp, #1136]	; 0x470
   307ac:	add	r3, sp, #6464	; 0x1940
   307b0:	add	r3, r3, #8
   307b4:	ldrd	r6, [r3]
   307b8:	ldrd	r2, [r2]
   307bc:	add	r1, sp, #1120	; 0x460
   307c0:	eor	r6, r6, r2
   307c4:	eor	r7, r7, r3
   307c8:	mov	r2, r6
   307cc:	mov	r3, r7
   307d0:	ldrd	r6, [r1]
   307d4:	ldrd	r0, [sp, #152]	; 0x98
   307d8:	eor	r6, r6, r2
   307dc:	adds	r0, r0, r6
   307e0:	eor	r7, r7, r3
   307e4:	lsr	r3, r5, #6
   307e8:	mov	r6, r4
   307ec:	adc	r1, r1, r7
   307f0:	str	r3, [sp, #1140]	; 0x474
   307f4:	mov	r7, r5
   307f8:	ldrd	r2, [sp, #32]
   307fc:	ldrd	r4, [sp, #128]	; 0x80
   30800:	eor	r4, r4, r2
   30804:	eor	r5, r5, r3
   30808:	mov	r2, r4
   3080c:	mov	r3, r5
   30810:	mov	r4, r6
   30814:	strd	r2, [sp, #216]	; 0xd8
   30818:	add	r2, sp, #6528	; 0x1980
   3081c:	lsr	r3, r6, #19
   30820:	add	r2, r2, #24
   30824:	orr	r3, r3, r7, lsl #13
   30828:	str	r3, [r2]
   3082c:	add	r2, sp, #6528	; 0x1980
   30830:	lsl	r3, r7, #3
   30834:	add	r2, r2, #36	; 0x24
   30838:	orr	r3, r3, r6, lsr #29
   3083c:	str	r3, [r2]
   30840:	lsr	r3, r0, #6
   30844:	add	r2, sp, #6528	; 0x1980
   30848:	str	r3, [sp, #1152]	; 0x480
   3084c:	add	r2, r2, #28
   30850:	lsr	r3, r7, #19
   30854:	orr	r3, r3, r6, lsl #13
   30858:	str	r3, [r2]
   3085c:	add	r2, sp, #6528	; 0x1980
   30860:	lsl	r3, r6, #3
   30864:	add	r2, r2, #32
   30868:	orr	r3, r3, r7, lsr #29
   3086c:	str	r3, [r2]
   30870:	ldr	r3, [sp, #1152]	; 0x480
   30874:	strd	r0, [sp, #152]	; 0x98
   30878:	orr	r3, r3, r1, lsl #26
   3087c:	str	r3, [sp, #1152]	; 0x480
   30880:	lsr	r3, r1, #6
   30884:	str	r3, [sp, #1156]	; 0x484
   30888:	add	r3, sp, #6528	; 0x1980
   3088c:	add	r3, r3, #24
   30890:	add	r1, sp, #1136	; 0x470
   30894:	mov	r5, r7
   30898:	ldrd	r6, [r3]
   3089c:	ldrd	r2, [r2]
   308a0:	ldrd	r0, [r1]
   308a4:	eor	r6, r6, r2
   308a8:	eor	r7, r7, r3
   308ac:	eor	r0, r0, r6
   308b0:	eor	r1, r1, r7
   308b4:	add	r2, sp, #6592	; 0x19c0
   308b8:	strd	r0, [sp, #224]	; 0xe0
   308bc:	ldrd	r0, [sp, #152]	; 0x98
   308c0:	add	r2, r2, #40	; 0x28
   308c4:	lsr	r3, r0, #19
   308c8:	orr	r3, r3, r1, lsl #13
   308cc:	str	r3, [r2]
   308d0:	add	r2, sp, #6592	; 0x19c0
   308d4:	lsl	r3, r1, #3
   308d8:	add	r2, r2, #52	; 0x34
   308dc:	orr	r3, r3, r0, lsr #29
   308e0:	str	r3, [r2]
   308e4:	add	r2, sp, #6592	; 0x19c0
   308e8:	lsr	r3, r1, #19
   308ec:	add	r2, r2, #44	; 0x2c
   308f0:	orr	r3, r3, r0, lsl #13
   308f4:	str	r3, [r2]
   308f8:	add	r2, sp, #6592	; 0x19c0
   308fc:	lsl	r3, r0, #3
   30900:	add	r2, r2, #48	; 0x30
   30904:	orr	r3, r3, r1, lsr #29
   30908:	str	r3, [r2]
   3090c:	add	r3, sp, #6592	; 0x19c0
   30910:	add	r3, r3, #40	; 0x28
   30914:	add	r1, sp, #1152	; 0x480
   30918:	ldrd	r6, [r3]
   3091c:	ldrd	r2, [r2]
   30920:	ldrd	r0, [r1]
   30924:	eor	r6, r6, r2
   30928:	eor	r7, r7, r3
   3092c:	add	r3, sp, #7168	; 0x1c00
   30930:	eor	r0, r0, r6
   30934:	eor	r1, r1, r7
   30938:	add	r3, r3, #40	; 0x28
   3093c:	strd	r0, [r3]
   30940:	ldrd	r0, [sp, #112]	; 0x70
   30944:	add	r2, sp, #6656	; 0x1a00
   30948:	add	r2, r2, #40	; 0x28
   3094c:	lsr	r3, r0, #1
   30950:	orr	r3, r3, r1, lsl #31
   30954:	str	r3, [r2]
   30958:	add	r2, sp, #6656	; 0x1a00
   3095c:	lsr	r3, r0, #8
   30960:	add	r2, r2, #48	; 0x30
   30964:	orr	r3, r3, r1, lsl #24
   30968:	str	r3, [r2]
   3096c:	add	r2, sp, #6656	; 0x1a00
   30970:	lsr	r3, r1, #1
   30974:	add	r2, r2, #44	; 0x2c
   30978:	orr	r3, r3, r0, lsl #31
   3097c:	str	r3, [r2]
   30980:	add	r2, sp, #6656	; 0x1a00
   30984:	lsr	r3, r1, #8
   30988:	add	r2, r2, #52	; 0x34
   3098c:	orr	r3, r3, r0, lsl #24
   30990:	str	r3, [r2]
   30994:	add	r3, sp, #6656	; 0x1a00
   30998:	add	r3, r3, #40	; 0x28
   3099c:	ldrd	r6, [r3]
   309a0:	add	r3, sp, #6656	; 0x1a00
   309a4:	add	r3, r3, #48	; 0x30
   309a8:	ldrd	r2, [r3]
   309ac:	eor	r7, r7, r3
   309b0:	add	r3, sp, #1152	; 0x480
   309b4:	add	r3, r3, #8
   309b8:	eor	r6, r6, r2
   309bc:	mov	r0, r6
   309c0:	mov	r1, r7
   309c4:	ldrd	r6, [r3]
   309c8:	add	r3, sp, #7168	; 0x1c00
   309cc:	add	r3, r3, #48	; 0x30
   309d0:	eor	r6, r6, r0
   309d4:	eor	r7, r7, r1
   309d8:	ldrd	r0, [sp, #104]	; 0x68
   309dc:	add	r2, sp, #6720	; 0x1a40
   309e0:	strd	r6, [r3]
   309e4:	add	r2, r2, #56	; 0x38
   309e8:	lsr	r3, r0, #1
   309ec:	orr	r3, r3, r1, lsl #31
   309f0:	str	r3, [r2]
   309f4:	lsr	r3, r0, #8
   309f8:	add	r2, sp, #6784	; 0x1a80
   309fc:	orr	r3, r3, r1, lsl #24
   30a00:	str	r3, [r2]
   30a04:	add	r2, sp, #6720	; 0x1a40
   30a08:	lsr	r3, r1, #1
   30a0c:	add	r2, r2, #60	; 0x3c
   30a10:	orr	r3, r3, r0, lsl #31
   30a14:	str	r3, [r2]
   30a18:	add	r2, sp, #6784	; 0x1a80
   30a1c:	lsr	r3, r1, #8
   30a20:	add	r2, r2, #4
   30a24:	orr	r3, r3, r0, lsl #24
   30a28:	str	r3, [r2]
   30a2c:	add	r3, sp, #6720	; 0x1a40
   30a30:	add	r3, r3, #56	; 0x38
   30a34:	ldrd	r6, [r3]
   30a38:	add	r3, sp, #6784	; 0x1a80
   30a3c:	ldrd	r2, [r3]
   30a40:	eor	r7, r7, r3
   30a44:	add	r3, sp, #1168	; 0x490
   30a48:	add	r3, r3, #8
   30a4c:	eor	r6, r6, r2
   30a50:	mov	r0, r6
   30a54:	mov	r1, r7
   30a58:	ldrd	r6, [r3]
   30a5c:	add	r3, sp, #7168	; 0x1c00
   30a60:	add	r3, r3, #56	; 0x38
   30a64:	eor	r6, r6, r0
   30a68:	eor	r7, r7, r1
   30a6c:	ldrd	r0, [sp, #40]	; 0x28
   30a70:	add	r2, sp, #6848	; 0x1ac0
   30a74:	strd	r6, [r3]
   30a78:	add	r2, r2, #8
   30a7c:	lsr	r3, r0, #1
   30a80:	orr	r3, r3, r1, lsl #31
   30a84:	str	r3, [r2]
   30a88:	add	r2, sp, #6848	; 0x1ac0
   30a8c:	lsr	r3, r0, #8
   30a90:	add	r2, r2, #16
   30a94:	orr	r3, r3, r1, lsl #24
   30a98:	str	r3, [r2]
   30a9c:	add	r2, sp, #6848	; 0x1ac0
   30aa0:	lsr	r3, r1, #1
   30aa4:	add	r2, r2, #12
   30aa8:	orr	r3, r3, r0, lsl #31
   30aac:	str	r3, [r2]
   30ab0:	add	r2, sp, #6848	; 0x1ac0
   30ab4:	lsr	r3, r1, #8
   30ab8:	add	r2, r2, #20
   30abc:	orr	r3, r3, r0, lsl #24
   30ac0:	str	r3, [r2]
   30ac4:	ldrd	r2, [sp, #24]
   30ac8:	lsr	ip, r2, #7
   30acc:	orr	ip, ip, r3, lsl #25
   30ad0:	lsr	r3, r3, #7
   30ad4:	str	r3, [sp, #1228]	; 0x4cc
   30ad8:	add	r3, sp, #6848	; 0x1ac0
   30adc:	add	r3, r3, #8
   30ae0:	ldrd	r6, [r3]
   30ae4:	add	r3, sp, #6848	; 0x1ac0
   30ae8:	add	r3, r3, #16
   30aec:	ldrd	r0, [r3]
   30af0:	add	r3, sp, #1184	; 0x4a0
   30af4:	add	r3, r3, #8
   30af8:	eor	r6, r6, r0
   30afc:	eor	r7, r7, r1
   30b00:	mov	r0, r6
   30b04:	mov	r1, r7
   30b08:	ldrd	r6, [r3]
   30b0c:	add	r3, sp, #7232	; 0x1c40
   30b10:	add	r2, sp, #6912	; 0x1b00
   30b14:	eor	r6, r6, r0
   30b18:	eor	r7, r7, r1
   30b1c:	ldrd	r0, [sp, #64]	; 0x40
   30b20:	strd	r6, [r3]
   30b24:	ldrd	r6, [sp, #80]	; 0x50
   30b28:	lsr	r3, r0, #7
   30b2c:	str	r3, [sp, #1240]	; 0x4d8
   30b30:	add	r2, r2, #24
   30b34:	lsr	r3, r6, #1
   30b38:	orr	r3, r3, r7, lsl #31
   30b3c:	str	r3, [r2]
   30b40:	add	r2, sp, #6912	; 0x1b00
   30b44:	lsr	r3, r6, #8
   30b48:	add	r2, r2, #32
   30b4c:	orr	r3, r3, r7, lsl #24
   30b50:	str	r3, [r2]
   30b54:	ldr	r3, [sp, #1240]	; 0x4d8
   30b58:	add	r2, sp, #6912	; 0x1b00
   30b5c:	orr	r3, r3, r1, lsl #25
   30b60:	str	r3, [sp, #1240]	; 0x4d8
   30b64:	add	r2, r2, #28
   30b68:	lsr	r3, r7, #1
   30b6c:	orr	r3, r3, r6, lsl #31
   30b70:	str	r3, [r2]
   30b74:	add	r2, sp, #6912	; 0x1b00
   30b78:	lsr	r3, r7, #8
   30b7c:	add	r2, r2, #36	; 0x24
   30b80:	orr	r3, r3, r6, lsl #24
   30b84:	str	r3, [r2]
   30b88:	lsr	r3, r1, #7
   30b8c:	str	r3, [sp, #1244]	; 0x4dc
   30b90:	add	r3, pc, #872	; 0x368
   30b94:	ldrd	r2, [r3]
   30b98:	ldr	r1, [sp, #12]
   30b9c:	str	ip, [sp, #1224]	; 0x4c8
   30ba0:	adds	r0, r4, r2
   30ba4:	add	r1, r1, #128	; 0x80
   30ba8:	str	r1, [sp, #12]
   30bac:	adc	r1, r5, r3
   30bb0:	mov	r2, r0
   30bb4:	mov	r3, r1
   30bb8:	ldrd	r0, [sp, #136]	; 0x88
   30bbc:	add	ip, sp, #6464	; 0x1940
   30bc0:	add	ip, ip, #32
   30bc4:	adds	r0, r0, r2
   30bc8:	adc	r1, r1, r3
   30bcc:	mov	r2, r0
   30bd0:	mov	r3, r1
   30bd4:	ldrd	r0, [sp, #88]	; 0x58
   30bd8:	adds	r0, r0, r2
   30bdc:	adc	r1, r1, r3
   30be0:	ldrd	r2, [sp, #96]	; 0x60
   30be4:	adds	r2, r2, r0
   30be8:	adc	r3, r3, r1
   30bec:	mov	r0, r2
   30bf0:	mov	r1, r3
   30bf4:	ldrd	r2, [sp, #16]
   30bf8:	adds	r2, r2, r0
   30bfc:	adc	r3, r3, r1
   30c00:	mov	r6, r2
   30c04:	mov	r7, r3
   30c08:	ldrd	r2, [sp, #160]	; 0xa0
   30c0c:	adds	r2, r2, r0
   30c10:	mov	r4, r2
   30c14:	lsr	r2, r6, #14
   30c18:	orr	lr, r2, r7, lsl #18
   30c1c:	add	r2, sp, #6464	; 0x1940
   30c20:	adc	r3, r3, r1
   30c24:	add	r2, r2, #24
   30c28:	mov	r5, r3
   30c2c:	lsr	r3, r6, #18
   30c30:	str	lr, [r2]
   30c34:	orr	r3, r3, r7, lsl #14
   30c38:	lsr	r2, r7, #14
   30c3c:	str	r3, [ip]
   30c40:	orr	lr, r2, r6, lsl #18
   30c44:	add	ip, sp, #6464	; 0x1940
   30c48:	add	r2, sp, #6464	; 0x1940
   30c4c:	lsr	r3, r4, #28
   30c50:	add	ip, ip, #48	; 0x30
   30c54:	add	r2, r2, #28
   30c58:	orr	r3, r3, r5, lsl #4
   30c5c:	str	r3, [ip]
   30c60:	str	lr, [r2]
   30c64:	add	ip, sp, #6464	; 0x1940
   30c68:	lsr	r2, r5, #28
   30c6c:	orr	lr, r2, r4, lsl #4
   30c70:	lsl	r3, r5, #30
   30c74:	add	ip, ip, #60	; 0x3c
   30c78:	add	r2, sp, #6464	; 0x1940
   30c7c:	orr	r3, r3, r4, lsr #2
   30c80:	add	r2, r2, #52	; 0x34
   30c84:	str	r3, [ip]
   30c88:	add	ip, sp, #6464	; 0x1940
   30c8c:	str	lr, [r2]
   30c90:	lsr	r3, r7, #18
   30c94:	lsl	r2, r7, #23
   30c98:	add	ip, ip, #36	; 0x24
   30c9c:	orr	lr, r2, r6, lsr #9
   30ca0:	orr	r3, r3, r6, lsl #14
   30ca4:	add	r2, sp, #6464	; 0x1940
   30ca8:	str	r3, [ip]
   30cac:	add	r2, r2, #44	; 0x2c
   30cb0:	add	ip, sp, #6464	; 0x1940
   30cb4:	lsl	r3, r4, #30
   30cb8:	add	ip, ip, #56	; 0x38
   30cbc:	str	lr, [r2]
   30cc0:	orr	r3, r3, r5, lsr #2
   30cc4:	add	r2, sp, #6528	; 0x1980
   30cc8:	str	r3, [ip]
   30ccc:	add	r2, r2, #4
   30cd0:	lsl	r3, r5, #25
   30cd4:	orr	r3, r3, r4, lsr #7
   30cd8:	add	r1, pc, #552	; 0x228
   30cdc:	ldrd	r0, [r1]
   30ce0:	str	r3, [r2]
   30ce4:	ldrd	r2, [sp, #152]	; 0x98
   30ce8:	strd	r6, [sp, #88]	; 0x58
   30cec:	lsl	lr, r6, #23
   30cf0:	adds	r2, r2, r0
   30cf4:	adc	r3, r3, r1
   30cf8:	ldrd	r0, [sp, #88]	; 0x58
   30cfc:	strd	r2, [sp, #16]
   30d00:	ldrd	r2, [sp, #216]	; 0xd8
   30d04:	orr	lr, lr, r1, lsr #9
   30d08:	lsl	ip, r4, #25
   30d0c:	and	r3, r3, r1
   30d10:	add	r1, sp, #6464	; 0x1940
   30d14:	add	r1, r1, #40	; 0x28
   30d18:	and	r2, r2, r0
   30d1c:	str	lr, [r1]
   30d20:	mov	r0, r4
   30d24:	mov	r1, r5
   30d28:	orr	lr, ip, r5, lsr #7
   30d2c:	ldrd	r4, [sp, #48]	; 0x30
   30d30:	strd	r0, [sp, #96]	; 0x60
   30d34:	add	ip, sp, #6528	; 0x1980
   30d38:	orr	r4, r4, r0
   30d3c:	orr	r5, r5, r1
   30d40:	ldrd	r0, [sp, #16]
   30d44:	strd	r4, [sp, #136]	; 0x88
   30d48:	ldrd	r4, [sp, #72]	; 0x48
   30d4c:	str	lr, [ip]
   30d50:	add	ip, sp, #6464	; 0x1940
   30d54:	adds	r0, r0, r4
   30d58:	adc	r1, r1, r5
   30d5c:	ldrd	r4, [sp, #128]	; 0x80
   30d60:	add	ip, ip, #24
   30d64:	eor	r4, r4, r2
   30d68:	eor	r5, r5, r3
   30d6c:	mov	r2, r4
   30d70:	mov	r3, r5
   30d74:	ldrd	r4, [ip]
   30d78:	add	ip, sp, #6464	; 0x1940
   30d7c:	add	ip, ip, #32
   30d80:	ldrd	r6, [ip]
   30d84:	adds	r2, r2, r0
   30d88:	adc	r3, r3, r1
   30d8c:	eor	r4, r4, r6
   30d90:	eor	r5, r5, r7
   30d94:	mov	r6, r4
   30d98:	mov	r7, r5
   30d9c:	ldrd	r4, [sp, #136]	; 0x88
   30da0:	add	r1, sp, #6464	; 0x1940
   30da4:	add	r1, r1, #48	; 0x30
   30da8:	and	r4, r4, sl
   30dac:	and	r5, r5, fp
   30db0:	add	ip, sp, #6464	; 0x1940
   30db4:	strd	r4, [sp, #16]
   30db8:	ldrd	r4, [r1]
   30dbc:	add	r1, sp, #6464	; 0x1940
   30dc0:	add	r1, r1, #56	; 0x38
   30dc4:	add	ip, ip, #40	; 0x28
   30dc8:	ldrd	r0, [r1]
   30dcc:	eor	r4, r4, r0
   30dd0:	eor	r5, r5, r1
   30dd4:	mov	r0, r4
   30dd8:	mov	r1, r5
   30ddc:	ldrd	r4, [ip]
   30de0:	add	ip, sp, #6528	; 0x1980
   30de4:	eor	r4, r4, r6
   30de8:	eor	r5, r5, r7
   30dec:	ldrd	r6, [ip]
   30df0:	adds	r4, r4, r2
   30df4:	adc	r5, r5, r3
   30df8:	mov	r2, r4
   30dfc:	mov	r3, r5
   30e00:	eor	r6, r6, r0
   30e04:	eor	r7, r7, r1
   30e08:	ldrd	r4, [sp, #96]	; 0x60
   30e0c:	ldrd	r0, [sp, #48]	; 0x30
   30e10:	and	r0, r0, r4
   30e14:	and	r1, r1, r5
   30e18:	ldrd	r4, [sp, #16]
   30e1c:	orr	r4, r4, r0
   30e20:	adds	r0, r6, r4
   30e24:	orr	r5, r5, r1
   30e28:	adc	r1, r7, r5
   30e2c:	adds	r6, r8, r2
   30e30:	adc	r7, r9, r3
   30e34:	adds	r8, r0, r2
   30e38:	adc	r9, r1, r3
   30e3c:	add	r3, sp, #7232	; 0x1c40
   30e40:	add	r3, r3, #40	; 0x28
   30e44:	ldrd	r4, [sp, #168]	; 0xa8
   30e48:	ldrd	r2, [r3]
   30e4c:	strd	r6, [sp, #16]
   30e50:	mov	r6, r8
   30e54:	mov	r7, r9
   30e58:	ldrd	r8, [sp, #120]	; 0x78
   30e5c:	adds	r4, r4, r2
   30e60:	adc	r5, r5, r3
   30e64:	mov	r0, r4
   30e68:	adds	r8, r8, r0
   30e6c:	mov	r1, r5
   30e70:	adc	r9, r9, r1
   30e74:	ldr	r3, [sp, #16]
   30e78:	strd	r8, [sp, #72]	; 0x48
   30e7c:	ldrd	r8, [sp, #16]
   30e80:	add	r1, sp, #6528	; 0x1980
   30e84:	add	r1, r1, #40	; 0x28
   30e88:	lsr	r3, r3, #14
   30e8c:	lsr	r2, r8, #18
   30e90:	orr	r3, r3, r9, lsl #18
   30e94:	str	r3, [r1]
   30e98:	orr	r3, r2, r9, lsl #14
   30e9c:	add	r2, sp, #6528	; 0x1980
   30ea0:	add	r2, r2, #48	; 0x30
   30ea4:	str	r3, [r2]
   30ea8:	lsr	r3, r6, #28
   30eac:	add	r2, sp, #6592	; 0x19c0
   30eb0:	orr	r3, r3, r7, lsl #4
   30eb4:	str	r3, [r2]
   30eb8:	add	r2, sp, #6592	; 0x19c0
   30ebc:	lsl	r3, r7, #30
   30ec0:	add	r2, r2, #12
   30ec4:	orr	r3, r3, r6, lsr #2
   30ec8:	str	r3, [r2]
   30ecc:	lsr	r0, r9, #14
   30ed0:	lsr	r1, r9, #18
   30ed4:	ldrd	r2, [sp, #224]	; 0xe0
   30ed8:	ldrd	r8, [sp, #72]	; 0x48
   30edc:	add	r5, pc, #44	; 0x2c
   30ee0:	ldrd	r4, [r5]
   30ee4:	ldr	ip, [sp, #20]
   30ee8:	adds	r2, r2, r8
   30eec:	adc	r3, r3, r9
   30ef0:	mov	r8, r6
   30ef4:	mov	r9, r7
   30ef8:	b	30f20 <__assert_fail@plt+0x1fc34>
   30efc:	nop			; (mov r0, r0)
   30f00:	cdplt	13, 15, cr0, cr9, cr14, {5}
   30f04:	teqne	pc, r4, lsl #16
   30f08:	tstne	ip, #7077888	; 0x6c0000
   30f0c:	blne	1c73be8 <optarg@@GLIBC_2.4+0x1c21a40>
   30f10:	movwcs	r7, #19844	; 0x4d84
   30f14:	ldmcs	fp, {r0, r2, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr}^
   30f18:	smullmi	r2, r7, r3, r4
   30f1c:	sbccc	sl, sl, #125952	; 0x1ec00
   30f20:	strd	r2, [sp, #160]	; 0xa0
   30f24:	lsr	r2, r7, #28
   30f28:	lsl	r3, r6, #30
   30f2c:	ldrd	r6, [sp, #16]
   30f30:	orr	r3, r3, r9, lsr #2
   30f34:	orr	lr, r0, r6, lsl #18
   30f38:	add	r0, sp, #6528	; 0x1980
   30f3c:	add	r0, r0, #44	; 0x2c
   30f40:	str	lr, [r0]
   30f44:	orr	lr, r1, r6, lsl #14
   30f48:	add	r1, sp, #6528	; 0x1980
   30f4c:	add	r1, r1, #52	; 0x34
   30f50:	str	lr, [r1]
   30f54:	orr	lr, r2, r8, lsl #4
   30f58:	add	r2, sp, #6592	; 0x19c0
   30f5c:	add	r2, r2, #4
   30f60:	str	lr, [r2]
   30f64:	add	r2, sp, #6592	; 0x19c0
   30f68:	add	r2, r2, #8
   30f6c:	mov	r6, r8
   30f70:	lsl	r0, r7, #23
   30f74:	lsl	r1, r9, #25
   30f78:	mov	r7, r9
   30f7c:	str	r3, [r2]
   30f80:	ldrd	r8, [sp, #88]	; 0x58
   30f84:	ldrd	r2, [sp, #32]
   30f88:	strd	r6, [sp, #72]	; 0x48
   30f8c:	eor	r2, r2, r8
   30f90:	eor	r3, r3, r9
   30f94:	ldrd	r8, [sp, #16]
   30f98:	orr	lr, r0, r8, lsr #9
   30f9c:	add	r0, sp, #6528	; 0x1980
   30fa0:	add	r0, r0, #60	; 0x3c
   30fa4:	str	lr, [r0]
   30fa8:	lsl	r0, r8, #23
   30fac:	ldrd	r8, [sp, #160]	; 0xa0
   30fb0:	orr	lr, r1, r6, lsr #7
   30fb4:	add	r1, sp, #6592	; 0x19c0
   30fb8:	adds	r8, r8, r4
   30fbc:	adc	r9, r9, r5
   30fc0:	add	r1, r1, #20
   30fc4:	mov	r4, r8
   30fc8:	mov	r5, r9
   30fcc:	ldrd	r8, [sp, #16]
   30fd0:	str	lr, [r1]
   30fd4:	orr	lr, r0, ip, lsr #9
   30fd8:	add	r0, sp, #6528	; 0x1980
   30fdc:	add	r0, r0, #56	; 0x38
   30fe0:	lsl	r1, r6, #25
   30fe4:	and	r8, r8, r2
   30fe8:	and	r9, r9, r3
   30fec:	mov	r2, r8
   30ff0:	mov	r3, r9
   30ff4:	str	lr, [r0]
   30ff8:	ldrd	r8, [sp, #96]	; 0x60
   30ffc:	orr	lr, r1, r7, lsr #7
   31000:	add	r1, sp, #6592	; 0x19c0
   31004:	add	r1, r1, #16
   31008:	orr	r8, r8, r6
   3100c:	str	lr, [r1]
   31010:	orr	r9, r9, r7
   31014:	ldrd	r6, [sp, #128]	; 0x80
   31018:	add	ip, sp, #6528	; 0x1980
   3101c:	add	ip, ip, #40	; 0x28
   31020:	adds	r6, r6, r4
   31024:	adc	r7, r7, r5
   31028:	mov	r4, r6
   3102c:	mov	r5, r7
   31030:	ldrd	r6, [sp, #32]
   31034:	mov	r0, r8
   31038:	mov	r1, r9
   3103c:	eor	r6, r6, r2
   31040:	eor	r7, r7, r3
   31044:	mov	r2, r6
   31048:	mov	r3, r7
   3104c:	ldrd	r6, [ip]
   31050:	add	ip, sp, #6528	; 0x1980
   31054:	add	ip, ip, #48	; 0x30
   31058:	ldrd	r8, [ip]
   3105c:	add	ip, sp, #6592	; 0x19c0
   31060:	adds	r2, r2, r4
   31064:	eor	r6, r6, r8
   31068:	eor	r7, r7, r9
   3106c:	ldrd	r8, [sp, #48]	; 0x30
   31070:	adc	r3, r3, r5
   31074:	ldrd	r4, [ip]
   31078:	add	ip, sp, #6592	; 0x19c0
   3107c:	add	ip, ip, #8
   31080:	and	r8, r8, r0
   31084:	and	r9, r9, r1
   31088:	mov	r0, r8
   3108c:	mov	r1, r9
   31090:	ldrd	r8, [ip]
   31094:	add	ip, sp, #6528	; 0x1980
   31098:	add	ip, ip, #56	; 0x38
   3109c:	eor	r4, r4, r8
   310a0:	eor	r5, r5, r9
   310a4:	ldrd	r8, [ip]
   310a8:	add	ip, sp, #6592	; 0x19c0
   310ac:	add	ip, ip, #16
   310b0:	eor	r8, r8, r6
   310b4:	eor	r9, r9, r7
   310b8:	mov	r6, r8
   310bc:	mov	r7, r9
   310c0:	ldrd	r8, [ip]
   310c4:	adds	r6, r6, r2
   310c8:	adc	r7, r7, r3
   310cc:	eor	r8, r8, r4
   310d0:	eor	r9, r9, r5
   310d4:	ldrd	r2, [sp, #96]	; 0x60
   310d8:	mov	r4, r8
   310dc:	mov	r5, r9
   310e0:	ldrd	r8, [sp, #72]	; 0x48
   310e4:	and	r2, r2, r8
   310e8:	and	r3, r3, r9
   310ec:	orr	r0, r0, r2
   310f0:	adds	r4, r4, r0
   310f4:	orr	r1, r1, r3
   310f8:	adc	r5, r5, r1
   310fc:	adds	r2, sl, r6
   31100:	adc	r3, fp, r7
   31104:	mov	sl, r2
   31108:	adds	r2, r4, r6
   3110c:	mov	fp, r3
   31110:	adc	r3, r5, r7
   31114:	mov	r9, r3
   31118:	add	r3, sp, #7232	; 0x1c40
   3111c:	add	r3, r3, #48	; 0x30
   31120:	ldrd	r6, [sp, #192]	; 0xc0
   31124:	ldrd	r4, [r3]
   31128:	lsr	r1, sl, #14
   3112c:	mov	r8, r2
   31130:	adds	r6, r6, r4
   31134:	adc	r7, r7, r5
   31138:	mov	r3, r7
   3113c:	mov	r7, fp
   31140:	mov	r2, r6
   31144:	orr	lr, r1, r7, lsl #18
   31148:	add	r1, sp, #6592	; 0x19c0
   3114c:	mov	r6, sl
   31150:	add	r1, r1, #56	; 0x38
   31154:	lsr	ip, r6, #18
   31158:	str	lr, [r1]
   3115c:	add	r1, sp, #6656	; 0x1a00
   31160:	orr	lr, ip, r7, lsl #14
   31164:	str	lr, [r1]
   31168:	lsr	r1, r8, #28
   3116c:	orr	lr, r1, r9, lsl #4
   31170:	add	r1, sp, #6656	; 0x1a00
   31174:	ldrd	sl, [sp, #176]	; 0xb0
   31178:	add	r1, r1, #16
   3117c:	str	lr, [r1]
   31180:	lsl	r1, r9, #30
   31184:	adds	sl, sl, r2
   31188:	orr	lr, r1, r8, lsr #2
   3118c:	add	r1, sp, #6656	; 0x1a00
   31190:	mov	r2, sl
   31194:	add	r1, r1, #28
   31198:	mov	sl, r6
   3119c:	lsr	r0, r7, #14
   311a0:	add	ip, sp, #7168	; 0x1c00
   311a4:	str	lr, [r1]
   311a8:	add	ip, ip, #40	; 0x28
   311ac:	orr	lr, r0, sl, lsl #18
   311b0:	add	r0, sp, #6592	; 0x19c0
   311b4:	adc	fp, fp, r3
   311b8:	add	r0, r0, #60	; 0x3c
   311bc:	mov	r3, fp
   311c0:	lsr	r1, r7, #18
   311c4:	mov	fp, r7
   311c8:	ldrd	r6, [ip]
   311cc:	str	lr, [r0]
   311d0:	orr	lr, r1, sl, lsl #14
   311d4:	add	r1, sp, #6656	; 0x1a00
   311d8:	add	r1, r1, #4
   311dc:	adds	r6, r6, r2
   311e0:	lsr	r2, r9, #28
   311e4:	adc	r7, r7, r3
   311e8:	str	lr, [r1]
   311ec:	orr	lr, r2, r8, lsl #4
   311f0:	add	r2, sp, #6656	; 0x1a00
   311f4:	lsl	r3, r8, #30
   311f8:	add	r2, r2, #20
   311fc:	strd	r6, [sp, #176]	; 0xb0
   31200:	lsl	r1, r9, #25
   31204:	mov	r6, r8
   31208:	mov	r7, r9
   3120c:	orr	r3, r3, r9, lsr #2
   31210:	ldrd	r4, [sp, #16]
   31214:	ldrd	r8, [sp, #88]	; 0x58
   31218:	str	lr, [r2]
   3121c:	add	r2, sp, #6656	; 0x1a00
   31220:	add	r2, r2, #24
   31224:	eor	r4, r4, r8
   31228:	eor	r5, r5, r9
   3122c:	str	r3, [r2]
   31230:	mov	r2, r4
   31234:	mov	r3, r5
   31238:	lsl	r0, fp, #23
   3123c:	strd	r2, [sp, #88]	; 0x58
   31240:	add	r3, sp, #6656	; 0x1a00
   31244:	add	r3, r3, #12
   31248:	orr	lr, r0, sl, lsr #9
   3124c:	str	lr, [r3]
   31250:	add	r3, sp, #6656	; 0x1a00
   31254:	add	r3, r3, #36	; 0x24
   31258:	orr	lr, r1, r6, lsr #7
   3125c:	ldrd	r4, [sp, #176]	; 0xb0
   31260:	str	lr, [r3]
   31264:	sub	r3, pc, #852	; 0x354
   31268:	ldrd	r2, [r3]
   3126c:	strd	sl, [sp, #120]	; 0x78
   31270:	lsl	r0, sl, #23
   31274:	adds	r2, r2, r4
   31278:	adc	r3, r3, r5
   3127c:	mov	r4, r2
   31280:	mov	r5, r3
   31284:	ldrd	r2, [sp, #88]	; 0x58
   31288:	ldr	lr, [sp, #124]	; 0x7c
   3128c:	lsl	r1, r6, #25
   31290:	and	r2, r2, sl
   31294:	orr	lr, r0, lr, lsr #9
   31298:	add	r0, sp, #6656	; 0x1a00
   3129c:	add	r0, r0, #8
   312a0:	and	r3, r3, fp
   312a4:	ldrd	sl, [sp, #72]	; 0x48
   312a8:	str	lr, [r0]
   312ac:	orr	lr, r1, r7, lsr #7
   312b0:	add	r1, sp, #6656	; 0x1a00
   312b4:	add	r1, r1, #32
   312b8:	orr	sl, sl, r6
   312bc:	orr	fp, fp, r7
   312c0:	str	lr, [r1]
   312c4:	mov	r0, sl
   312c8:	mov	r1, fp
   312cc:	ldrd	sl, [sp, #32]
   312d0:	add	ip, sp, #6592	; 0x19c0
   312d4:	add	ip, ip, #56	; 0x38
   312d8:	adds	sl, sl, r4
   312dc:	adc	fp, fp, r5
   312e0:	mov	r4, r8
   312e4:	mov	r5, r9
   312e8:	eor	r4, r4, r2
   312ec:	eor	r5, r5, r3
   312f0:	mov	r2, r4
   312f4:	mov	r3, r5
   312f8:	ldrd	r4, [ip]
   312fc:	add	ip, sp, #6656	; 0x1a00
   31300:	strd	r8, [sp, #88]	; 0x58
   31304:	ldrd	r8, [ip]
   31308:	adds	sl, sl, r2
   3130c:	adc	fp, fp, r3
   31310:	eor	r4, r4, r8
   31314:	eor	r5, r5, r9
   31318:	ldrd	r8, [sp, #96]	; 0x60
   3131c:	add	r3, sp, #6656	; 0x1a00
   31320:	add	r3, r3, #16
   31324:	and	r8, r8, r0
   31328:	and	r9, r9, r1
   3132c:	mov	r0, r8
   31330:	mov	r1, r9
   31334:	ldrd	r8, [r3]
   31338:	add	r3, sp, #6656	; 0x1a00
   3133c:	add	r3, r3, #24
   31340:	add	ip, sp, #6656	; 0x1a00
   31344:	ldrd	r2, [r3]
   31348:	add	ip, ip, #8
   3134c:	strd	r6, [sp, #168]	; 0xa8
   31350:	eor	r8, r8, r2
   31354:	eor	r9, r9, r3
   31358:	mov	r2, r8
   3135c:	mov	r3, r9
   31360:	ldrd	r8, [ip]
   31364:	add	ip, sp, #6656	; 0x1a00
   31368:	add	ip, ip, #32
   3136c:	eor	r8, r8, r4
   31370:	eor	r9, r9, r5
   31374:	mov	r4, r8
   31378:	mov	r5, r9
   3137c:	ldrd	r8, [ip]
   31380:	adds	sl, sl, r4
   31384:	adc	fp, fp, r5
   31388:	eor	r8, r8, r2
   3138c:	eor	r9, r9, r3
   31390:	strd	r8, [sp, #32]
   31394:	ldrd	r8, [sp, #160]	; 0xa0
   31398:	lsr	r3, r8, #6
   3139c:	str	r3, [sp, #1168]	; 0x490
   313a0:	ldrd	r2, [sp, #72]	; 0x48
   313a4:	ldr	lr, [sp, #1168]	; 0x490
   313a8:	and	r2, r2, r6
   313ac:	and	r3, r3, r7
   313b0:	orr	r0, r0, r2
   313b4:	mov	r7, r9
   313b8:	add	r2, sp, #6656	; 0x1a00
   313bc:	orr	r1, r1, r3
   313c0:	add	r2, r2, #56	; 0x38
   313c4:	lsr	r3, r8, #19
   313c8:	mov	r6, r8
   313cc:	orr	r3, r3, r7, lsl #13
   313d0:	str	r3, [r2]
   313d4:	ldrd	r8, [sp, #32]
   313d8:	lsl	ip, r7, #3
   313dc:	lsr	r2, r7, #19
   313e0:	orr	lr, lr, r7, lsl #26
   313e4:	orr	r3, ip, r6, lsr #29
   313e8:	str	lr, [sp, #1168]	; 0x490
   313ec:	add	ip, sp, #6720	; 0x1a40
   313f0:	orr	lr, r2, r6, lsl #13
   313f4:	add	r2, sp, #6656	; 0x1a00
   313f8:	add	ip, ip, #4
   313fc:	add	r2, r2, #60	; 0x3c
   31400:	adds	r8, r8, r0
   31404:	str	lr, [r2]
   31408:	str	r3, [ip]
   3140c:	adc	r9, r9, r1
   31410:	add	r2, sp, #6720	; 0x1a40
   31414:	lsl	r3, r6, #3
   31418:	mov	r0, r8
   3141c:	mov	r1, r9
   31420:	orr	r3, r3, r7, lsr #29
   31424:	ldrd	r8, [sp, #48]	; 0x30
   31428:	str	r3, [r2]
   3142c:	lsr	r3, r7, #6
   31430:	str	r3, [sp, #1172]	; 0x494
   31434:	add	r3, sp, #7168	; 0x1c00
   31438:	adds	r8, r8, sl
   3143c:	add	r3, r3, #48	; 0x30
   31440:	adc	r9, r9, fp
   31444:	adds	r4, r0, sl
   31448:	ldrd	r6, [r3]
   3144c:	adc	r5, r1, fp
   31450:	ldrd	r0, [sp, #144]	; 0x90
   31454:	add	r3, sp, #6656	; 0x1a00
   31458:	add	r3, r3, #56	; 0x38
   3145c:	adds	r0, r0, r6
   31460:	mov	sl, r4
   31464:	mov	fp, r5
   31468:	adc	r1, r1, r7
   3146c:	ldrd	r4, [r2]
   31470:	ldrd	r6, [r3]
   31474:	lsr	lr, r8, #18
   31478:	orr	lr, lr, r9, lsl #14
   3147c:	eor	r6, r6, r4
   31480:	eor	r7, r7, r5
   31484:	mov	r2, r6
   31488:	mov	r3, r7
   3148c:	ldrd	r6, [sp, #184]	; 0xb8
   31490:	lsr	r5, sl, #28
   31494:	lsr	r4, r8, #14
   31498:	adds	r6, r6, r0
   3149c:	mov	r0, r6
   314a0:	add	r6, sp, #1168	; 0x490
   314a4:	adc	r7, r7, r1
   314a8:	mov	r1, r7
   314ac:	ldrd	r6, [r6]
   314b0:	lsl	ip, fp, #30
   314b4:	strd	r8, [sp, #128]	; 0x80
   314b8:	eor	r6, r6, r2
   314bc:	mov	r2, r6
   314c0:	add	r6, sp, #6720	; 0x1a40
   314c4:	add	r6, r6, #16
   314c8:	str	lr, [r6]
   314cc:	lsr	lr, r9, #18
   314d0:	str	lr, [sp, #32]
   314d4:	eor	r7, r7, r3
   314d8:	orr	lr, r5, fp, lsl #4
   314dc:	add	r5, sp, #6720	; 0x1a40
   314e0:	mov	r3, r7
   314e4:	add	r5, r5, #32
   314e8:	orr	r7, r4, r9, lsl #18
   314ec:	add	r4, sp, #6720	; 0x1a40
   314f0:	add	r4, r4, #8
   314f4:	adds	r6, r0, r2
   314f8:	str	lr, [r5]
   314fc:	orr	r5, ip, sl, lsr #2
   31500:	add	ip, sp, #6720	; 0x1a40
   31504:	str	r7, [r4]
   31508:	add	ip, ip, #44	; 0x2c
   3150c:	adc	r7, r1, r3
   31510:	add	r1, sp, #6720	; 0x1a40
   31514:	lsr	r4, r9, #14
   31518:	add	r1, r1, #12
   3151c:	str	r5, [ip]
   31520:	orr	r5, r4, r8, lsl #18
   31524:	str	r5, [r1]
   31528:	ldrd	r4, [sp, #120]	; 0x78
   3152c:	ldrd	r0, [sp, #16]
   31530:	strd	r6, [sp, #48]	; 0x30
   31534:	ldr	r7, [sp, #32]
   31538:	eor	r1, r1, r5
   3153c:	mov	r5, r1
   31540:	add	r1, sp, #6720	; 0x1a40
   31544:	add	r1, r1, #20
   31548:	orr	r7, r7, r8, lsl #14
   3154c:	str	r7, [r1]
   31550:	add	r1, sp, #6720	; 0x1a40
   31554:	lsr	lr, fp, #28
   31558:	add	r1, r1, #36	; 0x24
   3155c:	orr	lr, lr, sl, lsl #4
   31560:	str	lr, [r1]
   31564:	add	r1, sp, #6720	; 0x1a40
   31568:	lsl	ip, sl, #30
   3156c:	add	r1, r1, #40	; 0x28
   31570:	orr	lr, ip, fp, lsr #2
   31574:	lsl	r2, r9, #23
   31578:	str	lr, [r1]
   3157c:	orr	lr, r2, r8, lsr #9
   31580:	add	r2, sp, #6720	; 0x1a40
   31584:	add	r2, r2, #28
   31588:	str	lr, [r2]
   3158c:	ldr	lr, [sp, #132]	; 0x84
   31590:	lsl	r2, r8, #23
   31594:	add	r1, sp, #6720	; 0x1a40
   31598:	orr	lr, r2, lr, lsr #9
   3159c:	add	r2, sp, #6720	; 0x1a40
   315a0:	add	r2, r2, #24
   315a4:	lsl	r3, fp, #25
   315a8:	add	r1, r1, #52	; 0x34
   315ac:	str	lr, [r2]
   315b0:	orr	r3, r3, sl, lsr #7
   315b4:	add	r2, sp, #6720	; 0x1a40
   315b8:	str	r3, [r1]
   315bc:	eor	r0, r0, r4
   315c0:	lsl	r3, sl, #25
   315c4:	add	r2, r2, #48	; 0x30
   315c8:	mov	r4, r0
   315cc:	add	r7, pc, #892	; 0x37c
   315d0:	ldrd	r6, [r7]
   315d4:	ldrd	r0, [sp, #48]	; 0x30
   315d8:	orr	r3, r3, fp, lsr #7
   315dc:	str	r3, [r2]
   315e0:	ldrd	r2, [sp, #88]	; 0x58
   315e4:	adds	r0, r0, r6
   315e8:	adc	r1, r1, r7
   315ec:	and	r8, r8, r4
   315f0:	adds	r2, r2, r0
   315f4:	and	r9, r9, r5
   315f8:	mov	r4, r8
   315fc:	mov	r5, r9
   31600:	adc	r3, r3, r1
   31604:	ldrd	r8, [sp, #16]
   31608:	mov	r1, r3
   3160c:	add	r3, sp, #6720	; 0x1a40
   31610:	add	r3, r3, #8
   31614:	eor	r8, r8, r4
   31618:	eor	r9, r9, r5
   3161c:	ldrd	r6, [sp, #168]	; 0xa8
   31620:	mov	r4, r8
   31624:	mov	r5, r9
   31628:	ldrd	r8, [r3]
   3162c:	add	r3, sp, #6720	; 0x1a40
   31630:	add	r3, r3, #16
   31634:	orr	r6, r6, sl
   31638:	orr	r7, r7, fp
   3163c:	strd	sl, [sp, #136]	; 0x88
   31640:	ldrd	sl, [r3]
   31644:	add	ip, sp, #6720	; 0x1a40
   31648:	add	ip, ip, #32
   3164c:	eor	r8, r8, sl
   31650:	eor	r9, r9, fp
   31654:	mov	r0, r2
   31658:	mov	r3, r9
   3165c:	mov	r2, r8
   31660:	ldrd	r8, [ip]
   31664:	add	ip, sp, #6720	; 0x1a40
   31668:	add	ip, ip, #40	; 0x28
   3166c:	ldrd	sl, [ip]
   31670:	eor	r8, r8, sl
   31674:	eor	r9, r9, fp
   31678:	ldrd	sl, [sp, #72]	; 0x48
   3167c:	strd	r8, [sp, #32]
   31680:	and	sl, sl, r6
   31684:	adds	r6, r0, r4
   31688:	and	fp, fp, r7
   3168c:	adc	r7, r1, r5
   31690:	ldrd	r4, [sp, #168]	; 0xa8
   31694:	ldrd	r0, [sp, #136]	; 0x88
   31698:	and	r5, r5, r1
   3169c:	add	r1, sp, #6720	; 0x1a40
   316a0:	add	r1, r1, #24
   316a4:	ldrd	r8, [r1]
   316a8:	add	r1, sp, #6720	; 0x1a40
   316ac:	add	r1, r1, #48	; 0x30
   316b0:	and	r4, r4, r0
   316b4:	eor	r8, r8, r2
   316b8:	eor	r9, r9, r3
   316bc:	mov	r2, r8
   316c0:	mov	r3, r9
   316c4:	orr	sl, sl, r4
   316c8:	ldrd	r8, [r1]
   316cc:	orr	fp, fp, r5
   316d0:	ldrd	r0, [sp, #32]
   316d4:	mov	r4, sl
   316d8:	mov	r5, fp
   316dc:	ldrd	sl, [sp, #176]	; 0xb0
   316e0:	adds	r6, r6, r2
   316e4:	eor	r0, r0, r8
   316e8:	adc	r7, r7, r3
   316ec:	lsl	ip, fp, #3
   316f0:	adds	r0, r0, r4
   316f4:	eor	r1, r1, r9
   316f8:	adc	r1, r1, r5
   316fc:	orr	r5, ip, sl, lsr #29
   31700:	add	ip, sp, #6784	; 0x1a80
   31704:	add	r4, sp, #6784	; 0x1a80
   31708:	add	ip, ip, #20
   3170c:	lsr	r9, sl, #6
   31710:	lsr	lr, sl, #19
   31714:	add	r4, r4, #8
   31718:	str	r5, [ip]
   3171c:	orr	lr, lr, fp, lsl #13
   31720:	orr	r5, r9, fp, lsl #26
   31724:	str	lr, [r4]
   31728:	str	r5, [sp, #1184]	; 0x4a0
   3172c:	ldrd	r4, [sp, #96]	; 0x60
   31730:	mov	r2, r6
   31734:	mov	r3, r7
   31738:	adds	r4, r4, r2
   3173c:	mov	r6, r4
   31740:	adc	r5, r5, r7
   31744:	adds	r4, r0, r2
   31748:	add	r2, sp, #6784	; 0x1a80
   3174c:	lsr	lr, fp, #19
   31750:	add	r2, r2, #12
   31754:	mov	r7, r5
   31758:	adc	r5, r1, r3
   3175c:	orr	r3, lr, sl, lsl #13
   31760:	str	r3, [r2]
   31764:	add	r2, sp, #6784	; 0x1a80
   31768:	lsl	ip, sl, #3
   3176c:	add	r2, r2, #16
   31770:	orr	r3, ip, fp, lsr #29
   31774:	str	r3, [r2]
   31778:	lsr	r3, fp, #6
   3177c:	str	r3, [sp, #1188]	; 0x4a4
   31780:	add	r3, sp, #7168	; 0x1c00
   31784:	add	r3, r3, #56	; 0x38
   31788:	mov	r8, r4
   3178c:	mov	r9, r5
   31790:	ldrd	r2, [r3]
   31794:	ldrd	r4, [sp, #112]	; 0x70
   31798:	ldrd	sl, [sp, #200]	; 0xc8
   3179c:	lsr	lr, r8, #28
   317a0:	adds	r4, r4, r2
   317a4:	adc	r5, r5, r3
   317a8:	add	r3, sp, #6784	; 0x1a80
   317ac:	add	r3, r3, #8
   317b0:	mov	r0, r4
   317b4:	mov	r1, r5
   317b8:	ldrd	r4, [r3]
   317bc:	add	r3, sp, #6784	; 0x1a80
   317c0:	add	r3, r3, #16
   317c4:	adds	sl, sl, r0
   317c8:	ldrd	r2, [r3]
   317cc:	mov	r0, sl
   317d0:	add	sl, sp, #1184	; 0x4a0
   317d4:	adc	fp, fp, r1
   317d8:	mov	r1, fp
   317dc:	ldrd	sl, [sl]
   317e0:	eor	r4, r4, r2
   317e4:	mov	r2, r4
   317e8:	eor	r5, r5, r3
   317ec:	mov	r3, r5
   317f0:	eor	sl, sl, r2
   317f4:	mov	r2, sl
   317f8:	eor	fp, fp, r3
   317fc:	add	sl, sp, #6784	; 0x1a80
   31800:	mov	r3, fp
   31804:	lsr	r5, r6, #14
   31808:	mov	fp, r7
   3180c:	add	sl, sl, #24
   31810:	lsr	r4, r6, #18
   31814:	orr	r5, r5, r7, lsl #18
   31818:	str	r5, [sl]
   3181c:	orr	r5, r4, fp, lsl #14
   31820:	add	r4, sp, #6784	; 0x1a80
   31824:	add	r4, r4, #32
   31828:	str	r5, [r4]
   3182c:	add	r4, sp, #6784	; 0x1a80
   31830:	add	r4, r4, #48	; 0x30
   31834:	lsl	ip, r9, #30
   31838:	orr	lr, lr, r9, lsl #4
   3183c:	str	lr, [r4]
   31840:	mov	sl, r6
   31844:	orr	lr, ip, r8, lsr #2
   31848:	add	ip, sp, #6784	; 0x1a80
   3184c:	add	ip, ip, #60	; 0x3c
   31850:	strd	sl, [sp, #32]
   31854:	adds	sl, r0, r2
   31858:	lsr	r6, fp, #18
   3185c:	str	lr, [ip]
   31860:	lsl	lr, fp, #23
   31864:	adc	fp, r1, r3
   31868:	ldrd	r2, [sp, #128]	; 0x80
   3186c:	ldrd	r0, [sp, #120]	; 0x78
   31870:	str	lr, [sp, #88]	; 0x58
   31874:	add	lr, sp, #6784	; 0x1a80
   31878:	eor	r0, r0, r2
   3187c:	eor	r1, r1, r3
   31880:	ldrd	r2, [sp, #32]
   31884:	add	lr, lr, #28
   31888:	lsr	r7, r7, #14
   3188c:	orr	r7, r7, r2, lsl #18
   31890:	str	r7, [lr]
   31894:	orr	lr, r6, r2, lsl #14
   31898:	add	r6, sp, #6784	; 0x1a80
   3189c:	add	r6, r6, #36	; 0x24
   318a0:	lsr	r5, r9, #28
   318a4:	str	lr, [r6]
   318a8:	orr	lr, r5, r8, lsl #4
   318ac:	add	r5, sp, #6784	; 0x1a80
   318b0:	add	r5, r5, #52	; 0x34
   318b4:	lsl	r4, r8, #30
   318b8:	str	lr, [r5]
   318bc:	orr	lr, r4, r9, lsr #2
   318c0:	add	r4, sp, #6784	; 0x1a80
   318c4:	add	r4, r4, #56	; 0x38
   318c8:	str	lr, [r4]
   318cc:	ldr	lr, [sp, #88]	; 0x58
   318d0:	mov	r6, r2
   318d4:	orr	r3, lr, r2, lsr #9
   318d8:	add	r2, sp, #6784	; 0x1a80
   318dc:	add	r2, r2, #44	; 0x2c
   318e0:	str	r3, [r2]
   318e4:	ldr	lr, [sp, #36]	; 0x24
   318e8:	lsl	ip, r9, #25
   318ec:	lsl	r2, r6, #23
   318f0:	orr	r3, ip, r8, lsr #7
   318f4:	orr	lr, r2, lr, lsr #9
   318f8:	add	ip, sp, #6848	; 0x1ac0
   318fc:	add	r2, sp, #6784	; 0x1a80
   31900:	add	ip, ip, #4
   31904:	add	r2, r2, #40	; 0x28
   31908:	str	r3, [ip]
   3190c:	str	lr, [r2]
   31910:	lsl	r3, r8, #25
   31914:	add	r7, pc, #60	; 0x3c
   31918:	ldrd	r6, [r7]
   3191c:	add	r2, sp, #6848	; 0x1ac0
   31920:	orr	r3, r3, r9, lsr #7
   31924:	str	r3, [r2]
   31928:	ldrd	r2, [sp, #16]
   3192c:	adds	r6, r6, sl
   31930:	adc	r7, r7, fp
   31934:	mov	r4, r6
   31938:	adds	r2, r2, r4
   3193c:	mov	r5, r7
   31940:	adc	r3, r3, r5
   31944:	ldrd	r6, [sp, #32]
   31948:	b	31968 <__assert_fail@plt+0x2067c>
   3194c:	nop			; (mov r0, r0)
   31950:	strbne	fp, [r9, #3772]	; 0xebc
   31954:	ldccc	14, cr11, [lr], {10}
   31958:	ldcls	13, cr0, [r0], {76}	; 0x4c
   3195c:	tstmi	sp, #196, 14	; 0x3100000
   31960:	blgt	fc2440 <optarg@@GLIBC_2.4+0xf70298>
   31964:	cfstrdmi	mvd13, [r5], {190}	; 0xbe
   31968:	strd	r2, [sp, #96]	; 0x60
   3196c:	ldrd	r4, [sp, #120]	; 0x78
   31970:	add	ip, sp, #6784	; 0x1a80
   31974:	add	r3, sp, #6784	; 0x1a80
   31978:	add	ip, ip, #32
   3197c:	add	r3, r3, #24
   31980:	and	r6, r6, r0
   31984:	and	r7, r7, r1
   31988:	eor	r4, r4, r6
   3198c:	eor	r5, r5, r7
   31990:	ldrd	r2, [r3]
   31994:	ldrd	r6, [ip]
   31998:	add	ip, sp, #6784	; 0x1a80
   3199c:	add	ip, ip, #48	; 0x30
   319a0:	eor	r2, r2, r6
   319a4:	eor	r3, r3, r7
   319a8:	ldrd	r6, [ip]
   319ac:	add	ip, sp, #6784	; 0x1a80
   319b0:	add	ip, ip, #56	; 0x38
   319b4:	strd	r4, [sp, #16]
   319b8:	strd	sl, [sp, #112]	; 0x70
   319bc:	ldrd	r4, [ip]
   319c0:	ldrd	sl, [sp, #136]	; 0x88
   319c4:	strd	r8, [sp, #88]	; 0x58
   319c8:	eor	r6, r6, r4
   319cc:	eor	r7, r7, r5
   319d0:	mov	r4, sl
   319d4:	mov	r5, fp
   319d8:	orr	r0, sl, r8
   319dc:	orr	r1, fp, r9
   319e0:	and	r4, r4, r8
   319e4:	and	r5, r5, r9
   319e8:	ldrd	r8, [sp, #168]	; 0xa8
   319ec:	strd	r6, [sp, #144]	; 0x90
   319f0:	ldrd	r6, [sp, #96]	; 0x60
   319f4:	and	r8, r8, r0
   319f8:	and	r9, r9, r1
   319fc:	mov	r0, r8
   31a00:	mov	r1, r9
   31a04:	ldrd	r8, [sp, #16]
   31a08:	add	ip, sp, #6784	; 0x1a80
   31a0c:	add	ip, ip, #40	; 0x28
   31a10:	adds	r8, r8, r6
   31a14:	adc	r9, r9, r7
   31a18:	ldrd	r6, [ip]
   31a1c:	add	ip, sp, #6848	; 0x1ac0
   31a20:	ldrd	sl, [sp, #144]	; 0x90
   31a24:	eor	r6, r6, r2
   31a28:	eor	r7, r7, r3
   31a2c:	mov	r2, r6
   31a30:	mov	r3, r7
   31a34:	ldrd	r6, [ip]
   31a38:	adds	r2, r2, r8
   31a3c:	orr	r0, r0, r4
   31a40:	eor	sl, sl, r6
   31a44:	eor	fp, fp, r7
   31a48:	mov	r6, sl
   31a4c:	mov	r7, fp
   31a50:	ldrd	sl, [sp, #48]	; 0x30
   31a54:	adc	r3, r3, r9
   31a58:	orr	r1, r1, r5
   31a5c:	adds	r6, r6, r0
   31a60:	adc	r7, r7, r1
   31a64:	add	r1, sp, #6848	; 0x1ac0
   31a68:	lsr	lr, sl, #19
   31a6c:	add	r1, r1, #24
   31a70:	orr	lr, lr, fp, lsl #13
   31a74:	str	lr, [r1]
   31a78:	add	r1, sp, #6848	; 0x1ac0
   31a7c:	lsl	ip, fp, #3
   31a80:	lsr	r5, sl, #6
   31a84:	add	r1, r1, #36	; 0x24
   31a88:	str	r5, [sp, #1200]	; 0x4b0
   31a8c:	orr	lr, ip, sl, lsr #29
   31a90:	str	lr, [r1]
   31a94:	ldr	lr, [sp, #1200]	; 0x4b0
   31a98:	lsr	r0, fp, #19
   31a9c:	lsl	r1, sl, #3
   31aa0:	orr	lr, lr, fp, lsl #26
   31aa4:	ldrd	sl, [sp, #72]	; 0x48
   31aa8:	str	lr, [sp, #1200]	; 0x4b0
   31aac:	add	ip, sp, #6848	; 0x1ac0
   31ab0:	adds	sl, sl, r2
   31ab4:	adc	fp, fp, r3
   31ab8:	adds	r4, r6, r2
   31abc:	adc	r5, r7, r3
   31ac0:	mov	r9, r5
   31ac4:	mov	r8, r4
   31ac8:	ldrd	r4, [sp, #48]	; 0x30
   31acc:	add	r2, sp, #6848	; 0x1ac0
   31ad0:	add	r2, r2, #28
   31ad4:	orr	r3, r0, r4, lsl #13
   31ad8:	str	r3, [r2]
   31adc:	add	r2, sp, #6848	; 0x1ac0
   31ae0:	add	r2, r2, #32
   31ae4:	orr	r3, r1, r5, lsr #29
   31ae8:	str	r3, [r2]
   31aec:	lsr	r3, r5, #6
   31af0:	str	r3, [sp, #1204]	; 0x4b4
   31af4:	add	r3, sp, #7232	; 0x1c40
   31af8:	ldrd	r0, [sp, #104]	; 0x68
   31afc:	ldrd	r2, [r3]
   31b00:	ldrd	r6, [sp, #56]	; 0x38
   31b04:	add	ip, ip, #32
   31b08:	adds	r0, r0, r2
   31b0c:	adc	r1, r1, r3
   31b10:	add	r3, sp, #6848	; 0x1ac0
   31b14:	adds	r6, r6, r0
   31b18:	add	r3, r3, #24
   31b1c:	mov	r0, r6
   31b20:	add	r6, sp, #1200	; 0x4b0
   31b24:	ldrd	r4, [ip]
   31b28:	ldrd	r2, [r3]
   31b2c:	adc	r7, r7, r1
   31b30:	mov	r1, r7
   31b34:	ldrd	r6, [r6]
   31b38:	eor	r2, r2, r4
   31b3c:	eor	r3, r3, r5
   31b40:	eor	r6, r6, r2
   31b44:	mov	r2, r6
   31b48:	add	r6, sp, #6848	; 0x1ac0
   31b4c:	lsr	r5, sl, #14
   31b50:	add	r6, r6, #40	; 0x28
   31b54:	lsr	r4, sl, #18
   31b58:	orr	r5, r5, fp, lsl #18
   31b5c:	str	r5, [r6]
   31b60:	orr	r5, r4, fp, lsl #14
   31b64:	add	r4, sp, #6848	; 0x1ac0
   31b68:	add	r4, r4, #48	; 0x30
   31b6c:	lsr	lr, r8, #28
   31b70:	str	r5, [r4]
   31b74:	add	r4, sp, #6912	; 0x1b00
   31b78:	lsl	ip, r9, #30
   31b7c:	orr	lr, lr, r9, lsl #4
   31b80:	str	lr, [r4]
   31b84:	orr	lr, ip, r8, lsr #2
   31b88:	add	ip, sp, #6912	; 0x1b00
   31b8c:	eor	r7, r7, r3
   31b90:	add	ip, ip, #12
   31b94:	strd	sl, [sp, #48]	; 0x30
   31b98:	mov	r3, r7
   31b9c:	mov	sl, r8
   31ba0:	lsl	r4, r8, #30
   31ba4:	adds	r8, r0, r2
   31ba8:	str	lr, [ip]
   31bac:	lsr	r7, fp, #14
   31bb0:	lsr	r6, fp, #18
   31bb4:	lsr	r5, r9, #28
   31bb8:	lsl	lr, fp, #23
   31bbc:	lsl	ip, r9, #25
   31bc0:	mov	fp, r9
   31bc4:	adc	r9, r1, r3
   31bc8:	ldrd	r2, [sp, #128]	; 0x80
   31bcc:	ldrd	r0, [sp, #32]
   31bd0:	strd	r8, [sp, #72]	; 0x48
   31bd4:	eor	r0, r0, r2
   31bd8:	eor	r1, r1, r3
   31bdc:	mov	r8, r0
   31be0:	mov	r9, r1
   31be4:	ldrd	r0, [sp, #48]	; 0x30
   31be8:	add	r2, sp, #6848	; 0x1ac0
   31bec:	add	r2, r2, #44	; 0x2c
   31bf0:	orr	r3, r7, r0, lsl #18
   31bf4:	str	r3, [r2]
   31bf8:	add	r2, sp, #6848	; 0x1ac0
   31bfc:	add	r2, r2, #52	; 0x34
   31c00:	orr	r3, r6, r0, lsl #14
   31c04:	str	r3, [r2]
   31c08:	add	r2, sp, #6912	; 0x1b00
   31c0c:	add	r2, r2, #4
   31c10:	orr	r3, r5, sl, lsl #4
   31c14:	str	r3, [r2]
   31c18:	add	r2, sp, #6912	; 0x1b00
   31c1c:	orr	r3, r4, fp, lsr #2
   31c20:	sub	r7, pc, #712	; 0x2c8
   31c24:	ldrd	r6, [r7]
   31c28:	ldrd	r4, [sp, #72]	; 0x48
   31c2c:	add	r2, r2, #8
   31c30:	str	r3, [r2]
   31c34:	add	r2, sp, #6848	; 0x1ac0
   31c38:	adds	r4, r4, r6
   31c3c:	add	r2, r2, #60	; 0x3c
   31c40:	orr	r3, lr, r0, lsr #9
   31c44:	adc	r5, r5, r7
   31c48:	mov	r7, r1
   31c4c:	str	r3, [r2]
   31c50:	lsl	r2, r0, #23
   31c54:	orr	lr, r2, r7, lsr #9
   31c58:	ldrd	r6, [sp, #120]	; 0x78
   31c5c:	add	r2, sp, #6848	; 0x1ac0
   31c60:	orr	r3, ip, sl, lsr #7
   31c64:	add	r2, r2, #56	; 0x38
   31c68:	add	ip, sp, #6912	; 0x1b00
   31c6c:	adds	r6, r6, r4
   31c70:	add	ip, ip, #20
   31c74:	str	lr, [r2]
   31c78:	adc	r7, r7, r5
   31c7c:	add	r2, sp, #6912	; 0x1b00
   31c80:	str	r3, [ip]
   31c84:	add	r2, r2, #16
   31c88:	lsl	r3, sl, #25
   31c8c:	orr	r3, r3, fp, lsr #7
   31c90:	strd	r6, [sp, #16]
   31c94:	ldrd	r6, [sp, #128]	; 0x80
   31c98:	str	r3, [r2]
   31c9c:	and	r0, r0, r8
   31ca0:	and	r1, r1, r9
   31ca4:	add	ip, sp, #6848	; 0x1ac0
   31ca8:	add	r3, sp, #6848	; 0x1ac0
   31cac:	mov	r8, r0
   31cb0:	mov	r9, r1
   31cb4:	add	ip, ip, #48	; 0x30
   31cb8:	add	r3, r3, #40	; 0x28
   31cbc:	eor	r6, r6, r8
   31cc0:	eor	r7, r7, r9
   31cc4:	mov	r8, r6
   31cc8:	mov	r9, r7
   31ccc:	ldrd	r2, [r3]
   31cd0:	ldrd	r6, [ip]
   31cd4:	add	ip, sp, #6912	; 0x1b00
   31cd8:	ldrd	r0, [sp, #88]	; 0x58
   31cdc:	eor	r2, r2, r6
   31ce0:	eor	r3, r3, r7
   31ce4:	ldrd	r6, [ip]
   31ce8:	add	ip, sp, #6912	; 0x1b00
   31cec:	add	ip, ip, #8
   31cf0:	ldrd	r4, [ip]
   31cf4:	orr	r0, r0, sl
   31cf8:	orr	r1, r1, fp
   31cfc:	eor	r6, r6, r4
   31d00:	eor	r7, r7, r5
   31d04:	ldrd	r4, [sp, #88]	; 0x58
   31d08:	strd	sl, [sp, #96]	; 0x60
   31d0c:	add	ip, sp, #6848	; 0x1ac0
   31d10:	and	r4, r4, sl
   31d14:	and	r5, r5, fp
   31d18:	ldrd	sl, [sp, #136]	; 0x88
   31d1c:	add	ip, ip, #56	; 0x38
   31d20:	and	sl, sl, r0
   31d24:	and	fp, fp, r1
   31d28:	mov	r0, sl
   31d2c:	mov	r1, fp
   31d30:	ldrd	sl, [sp, #16]
   31d34:	orr	r0, r0, r4
   31d38:	orr	r1, r1, r5
   31d3c:	adds	sl, sl, r8
   31d40:	adc	fp, fp, r9
   31d44:	mov	r8, sl
   31d48:	mov	r9, fp
   31d4c:	ldrd	sl, [ip]
   31d50:	add	ip, sp, #6912	; 0x1b00
   31d54:	add	ip, ip, #16
   31d58:	eor	sl, sl, r2
   31d5c:	eor	fp, fp, r3
   31d60:	mov	r2, sl
   31d64:	mov	r3, fp
   31d68:	ldrd	sl, [ip]
   31d6c:	adds	r2, r2, r8
   31d70:	adc	r3, r3, r9
   31d74:	eor	sl, sl, r6
   31d78:	eor	fp, fp, r7
   31d7c:	adds	r6, sl, r0
   31d80:	mov	r7, fp
   31d84:	adc	r7, r7, r1
   31d88:	add	r8, sp, #6912	; 0x1b00
   31d8c:	add	r1, sp, #6912	; 0x1b00
   31d90:	add	r1, r1, #24
   31d94:	add	r8, r8, #32
   31d98:	ldrd	r4, [sp, #112]	; 0x70
   31d9c:	ldrd	r8, [r8]
   31da0:	ldrd	r0, [r1]
   31da4:	lsr	fp, r4, #6
   31da8:	lsr	lr, r4, #19
   31dac:	eor	r0, r0, r8
   31db0:	mov	r8, r4
   31db4:	add	r4, sp, #6912	; 0x1b00
   31db8:	add	r4, r4, #40	; 0x28
   31dbc:	orr	lr, lr, r5, lsl #13
   31dc0:	lsl	ip, r5, #3
   31dc4:	str	lr, [r4]
   31dc8:	eor	r1, r1, r9
   31dcc:	lsr	lr, r5, #19
   31dd0:	mov	r9, r5
   31dd4:	orr	r5, ip, r8, lsr #29
   31dd8:	add	ip, sp, #6912	; 0x1b00
   31ddc:	add	ip, ip, #52	; 0x34
   31de0:	str	r5, [ip]
   31de4:	orr	r5, fp, r9, lsl #26
   31de8:	lsl	ip, r8, #3
   31dec:	ldrd	r8, [sp, #168]	; 0xa8
   31df0:	str	r5, [sp, #1216]	; 0x4c0
   31df4:	adds	r8, r8, r2
   31df8:	adc	r9, r9, r3
   31dfc:	mov	r4, r8
   31e00:	adds	r8, r6, r2
   31e04:	mov	r5, r9
   31e08:	adc	r9, r7, r3
   31e0c:	add	r3, sp, #1200	; 0x4b0
   31e10:	add	r3, r3, #8
   31e14:	mov	fp, r9
   31e18:	ldrd	r2, [r3]
   31e1c:	mov	sl, r8
   31e20:	ldrd	r8, [sp, #112]	; 0x70
   31e24:	eor	r3, r3, r1
   31e28:	add	r1, sp, #6912	; 0x1b00
   31e2c:	add	r1, r1, #44	; 0x2c
   31e30:	orr	lr, lr, r8, lsl #13
   31e34:	str	lr, [r1]
   31e38:	add	r1, sp, #6912	; 0x1b00
   31e3c:	add	r1, r1, #48	; 0x30
   31e40:	orr	lr, ip, r9, lsr #29
   31e44:	str	lr, [r1]
   31e48:	lsr	lr, r9, #6
   31e4c:	ldrd	r8, [sp, #40]	; 0x28
   31e50:	eor	r2, r2, r0
   31e54:	add	r1, sp, #6912	; 0x1b00
   31e58:	adds	r8, r8, r2
   31e5c:	add	r1, r1, #40	; 0x28
   31e60:	adc	r9, r9, r3
   31e64:	mov	r2, r8
   31e68:	mov	r3, r9
   31e6c:	ldrd	r8, [r1]
   31e70:	add	r1, sp, #6912	; 0x1b00
   31e74:	add	r1, r1, #48	; 0x30
   31e78:	ldrd	r6, [r1]
   31e7c:	str	lr, [sp, #1220]	; 0x4c4
   31e80:	lsr	lr, sl, #28
   31e84:	eor	r8, r8, r6
   31e88:	eor	r9, r9, r7
   31e8c:	mov	r0, r8
   31e90:	mov	r1, r9
   31e94:	ldrd	r8, [sp, #208]	; 0xd0
   31e98:	mov	r7, r5
   31e9c:	lsr	r5, r4, #14
   31ea0:	adds	r8, r8, r2
   31ea4:	mov	r2, r8
   31ea8:	add	r8, sp, #1216	; 0x4c0
   31eac:	adc	r9, r9, r3
   31eb0:	mov	r3, r9
   31eb4:	ldrd	r8, [r8]
   31eb8:	orr	r5, r5, r7, lsl #18
   31ebc:	mov	r6, r4
   31ec0:	eor	r8, r8, r0
   31ec4:	mov	r0, r8
   31ec8:	add	r8, sp, #6912	; 0x1b00
   31ecc:	add	r8, r8, #56	; 0x38
   31ed0:	eor	r9, r9, r1
   31ed4:	str	r5, [r8]
   31ed8:	mov	r1, r9
   31edc:	add	r8, sp, #6976	; 0x1b40
   31ee0:	mov	r9, r7
   31ee4:	lsr	r4, r4, #18
   31ee8:	add	r8, r8, #16
   31eec:	orr	r5, r4, r9, lsl #14
   31ef0:	orr	lr, lr, fp, lsl #4
   31ef4:	add	r4, sp, #6976	; 0x1b40
   31ef8:	lsl	ip, fp, #30
   31efc:	str	lr, [r8]
   31f00:	lsr	lr, fp, #28
   31f04:	str	r5, [r4]
   31f08:	mov	r5, r9
   31f0c:	mov	r4, r6
   31f10:	lsr	r6, r9, #18
   31f14:	mov	r9, lr
   31f18:	orr	lr, ip, sl, lsr #2
   31f1c:	add	ip, sp, #6976	; 0x1b40
   31f20:	add	ip, ip, #28
   31f24:	strd	r4, [sp, #56]	; 0x38
   31f28:	str	lr, [ip]
   31f2c:	adds	r4, r2, r0
   31f30:	lsl	lr, sl, #30
   31f34:	mov	r8, lr
   31f38:	lsl	lr, r5, #23
   31f3c:	adc	r5, r3, r1
   31f40:	lsl	ip, fp, #25
   31f44:	strd	sl, [sp, #16]
   31f48:	ldrd	sl, [sp, #32]
   31f4c:	strd	r4, [sp, #104]	; 0x68
   31f50:	ldrd	r0, [sp, #48]	; 0x30
   31f54:	mov	r2, sl
   31f58:	mov	r3, fp
   31f5c:	eor	r2, r2, r0
   31f60:	eor	r3, r3, r1
   31f64:	ldrd	r0, [sp, #56]	; 0x38
   31f68:	add	r4, sp, #6912	; 0x1b00
   31f6c:	lsr	r7, r7, #14
   31f70:	add	r4, r4, #60	; 0x3c
   31f74:	orr	r5, r7, r0, lsl #18
   31f78:	str	r5, [r4]
   31f7c:	add	r4, sp, #6976	; 0x1b40
   31f80:	add	r4, r4, #4
   31f84:	orr	r5, r6, r0, lsl #14
   31f88:	ldrd	r6, [sp, #16]
   31f8c:	str	r5, [r4]
   31f90:	add	r4, sp, #6976	; 0x1b40
   31f94:	mov	r5, r9
   31f98:	add	r4, r4, #20
   31f9c:	orr	r5, r5, r6, lsl #4
   31fa0:	str	r5, [r4]
   31fa4:	add	r4, sp, #6976	; 0x1b40
   31fa8:	mov	r5, r8
   31fac:	add	r4, r4, #24
   31fb0:	orr	r5, r5, r7, lsr #2
   31fb4:	str	r5, [r4]
   31fb8:	mov	r8, r6
   31fbc:	mov	r7, r1
   31fc0:	add	r4, sp, #6976	; 0x1b40
   31fc4:	add	r1, sp, #6976	; 0x1b40
   31fc8:	add	r4, r4, #12
   31fcc:	add	r1, r1, #36	; 0x24
   31fd0:	orr	r5, ip, r8, lsr #7
   31fd4:	orr	lr, lr, r0, lsr #9
   31fd8:	str	lr, [r4]
   31fdc:	str	r5, [r1]
   31fe0:	mov	r6, r0
   31fe4:	lsl	ip, r8, #25
   31fe8:	lsl	lr, r0, #23
   31fec:	add	r9, pc, #884	; 0x374
   31ff0:	ldrd	r8, [r9]
   31ff4:	ldrd	r0, [sp, #104]	; 0x68
   31ff8:	ldrd	r4, [sp, #96]	; 0x60
   31ffc:	orr	lr, lr, r7, lsr #9
   32000:	adds	r8, r8, r0
   32004:	adc	r9, r9, r1
   32008:	mov	r0, r6
   3200c:	mov	r1, r7
   32010:	and	r0, r0, r2
   32014:	and	r1, r1, r3
   32018:	mov	r2, r0
   3201c:	mov	r3, r1
   32020:	ldrd	r0, [sp, #16]
   32024:	ldrd	r6, [sp, #128]	; 0x80
   32028:	orr	r4, r4, r0
   3202c:	orr	r5, r5, r1
   32030:	adds	r6, r6, r8
   32034:	strd	r4, [sp, #112]	; 0x70
   32038:	add	r4, sp, #6976	; 0x1b40
   3203c:	add	r4, r4, #8
   32040:	adc	r7, r7, r9
   32044:	str	lr, [r4]
   32048:	orr	lr, ip, r1, lsr #7
   3204c:	add	ip, sp, #6976	; 0x1b40
   32050:	mov	r9, r7
   32054:	add	ip, ip, #32
   32058:	mov	r7, fp
   3205c:	eor	r7, r7, r3
   32060:	add	r3, sp, #6912	; 0x1b00
   32064:	str	lr, [ip]
   32068:	mov	r8, r6
   3206c:	add	ip, sp, #6976	; 0x1b40
   32070:	mov	r6, sl
   32074:	add	r3, r3, #56	; 0x38
   32078:	eor	r6, r6, r2
   3207c:	mov	sl, r6
   32080:	ldrd	r2, [r3]
   32084:	mov	fp, r7
   32088:	ldrd	r6, [ip]
   3208c:	adds	sl, sl, r8
   32090:	adc	fp, fp, r9
   32094:	eor	r2, r2, r6
   32098:	eor	r3, r3, r7
   3209c:	mov	r8, sl
   320a0:	strd	r2, [sp, #40]	; 0x28
   320a4:	add	r3, sp, #6976	; 0x1b40
   320a8:	add	r3, r3, #16
   320ac:	ldrd	r6, [r3]
   320b0:	add	r3, sp, #6976	; 0x1b40
   320b4:	add	r3, r3, #24
   320b8:	ldrd	r4, [r3]
   320bc:	ldrd	r2, [sp, #112]	; 0x70
   320c0:	mov	r9, fp
   320c4:	eor	r6, r6, r4
   320c8:	eor	r7, r7, r5
   320cc:	ldrd	r4, [sp, #96]	; 0x60
   320d0:	and	r4, r4, r0
   320d4:	and	r5, r5, r1
   320d8:	ldrd	r0, [sp, #88]	; 0x58
   320dc:	and	r2, r2, r0
   320e0:	and	r3, r3, r1
   320e4:	mov	r0, r2
   320e8:	mov	r1, r3
   320ec:	ldrd	r2, [sp, #24]
   320f0:	add	r3, sp, #6976	; 0x1b40
   320f4:	add	r3, r3, #8
   320f8:	lsr	ip, r2, #8
   320fc:	ldrd	sl, [r3]
   32100:	lsr	lr, r2, #1
   32104:	ldrd	r2, [sp, #40]	; 0x28
   32108:	orr	r4, r4, r0
   3210c:	mov	r0, r4
   32110:	eor	r2, r2, sl
   32114:	add	sl, sp, #6976	; 0x1b40
   32118:	add	sl, sl, #32
   3211c:	eor	r3, r3, fp
   32120:	ldrd	sl, [sl]
   32124:	add	r4, sp, #6976	; 0x1b40
   32128:	orr	r5, r5, r1
   3212c:	eor	sl, sl, r6
   32130:	eor	fp, fp, r7
   32134:	mov	r6, sl
   32138:	mov	r7, fp
   3213c:	ldrd	sl, [sp, #24]
   32140:	add	r4, r4, #40	; 0x28
   32144:	mov	r1, r5
   32148:	orr	lr, lr, fp, lsl #31
   3214c:	orr	r5, ip, fp, lsl #24
   32150:	add	ip, sp, #6976	; 0x1b40
   32154:	str	lr, [r4]
   32158:	add	ip, ip, #48	; 0x30
   3215c:	add	r4, sp, #6976	; 0x1b40
   32160:	lsr	lr, fp, #1
   32164:	add	r4, r4, #44	; 0x2c
   32168:	str	r5, [ip]
   3216c:	orr	lr, lr, sl, lsl #31
   32170:	lsr	ip, fp, #8
   32174:	str	lr, [r4]
   32178:	orr	lr, ip, sl, lsl #24
   3217c:	add	ip, sp, #6976	; 0x1b40
   32180:	add	ip, ip, #52	; 0x34
   32184:	adds	r2, r2, r8
   32188:	str	lr, [ip]
   3218c:	adc	r3, r3, r9
   32190:	ldrd	r8, [sp, #136]	; 0x88
   32194:	adds	r0, r0, r6
   32198:	ldrd	sl, [sp, #72]	; 0x48
   3219c:	adc	r1, r1, r7
   321a0:	adds	r8, r8, r2
   321a4:	mov	r6, r8
   321a8:	adc	r9, r9, r3
   321ac:	adds	r8, r0, r2
   321b0:	mov	r7, r9
   321b4:	adc	r9, r1, r3
   321b8:	add	r3, sp, #6976	; 0x1b40
   321bc:	add	r1, sp, #6976	; 0x1b40
   321c0:	lsr	lr, sl, #19
   321c4:	add	r3, r3, #40	; 0x28
   321c8:	add	r1, r1, #56	; 0x38
   321cc:	lsr	r5, sl, #6
   321d0:	orr	lr, lr, fp, lsl #13
   321d4:	mov	r4, r8
   321d8:	str	lr, [r1]
   321dc:	str	r5, [sp, #1232]	; 0x4d0
   321e0:	add	r1, sp, #7040	; 0x1b80
   321e4:	mov	r5, r9
   321e8:	ldrd	r8, [r3]
   321ec:	add	r3, sp, #6976	; 0x1b40
   321f0:	lsl	ip, fp, #3
   321f4:	add	r1, r1, #4
   321f8:	add	r3, r3, #48	; 0x30
   321fc:	orr	lr, ip, sl, lsr #29
   32200:	ldrd	r2, [r3]
   32204:	str	lr, [r1]
   32208:	ldr	lr, [sp, #1232]	; 0x4d0
   3220c:	add	ip, sp, #1216	; 0x4c0
   32210:	lsr	r0, fp, #19
   32214:	orr	lr, lr, fp, lsl #26
   32218:	add	ip, ip, #8
   3221c:	str	lr, [sp, #1232]	; 0x4d0
   32220:	eor	r8, r8, r2
   32224:	orr	lr, r0, sl, lsl #13
   32228:	eor	r9, r9, r3
   3222c:	add	r0, sp, #6976	; 0x1b40
   32230:	mov	r2, r8
   32234:	mov	r3, r9
   32238:	add	r0, r0, #60	; 0x3c
   3223c:	ldrd	r8, [ip]
   32240:	lsl	r1, sl, #3
   32244:	str	lr, [r0]
   32248:	orr	lr, r1, fp, lsr #29
   3224c:	add	r1, sp, #7040	; 0x1b80
   32250:	eor	r8, r8, r2
   32254:	eor	r9, r9, r3
   32258:	str	lr, [r1]
   3225c:	mov	r2, r8
   32260:	mov	r3, r9
   32264:	lsr	lr, fp, #6
   32268:	add	r9, pc, #256	; 0x100
   3226c:	ldrd	r8, [r9]
   32270:	ldrd	sl, [sp, #80]	; 0x50
   32274:	str	lr, [sp, #1236]	; 0x4d4
   32278:	lsr	ip, r6, #18
   3227c:	adds	sl, sl, r8
   32280:	adc	fp, fp, r9
   32284:	mov	r8, sl
   32288:	adds	r8, r8, r2
   3228c:	mov	r9, fp
   32290:	adc	r9, r9, r3
   32294:	add	r3, sp, #6976	; 0x1b40
   32298:	mov	fp, r5
   3229c:	add	r3, r3, #56	; 0x38
   322a0:	mov	r5, fp
   322a4:	lsl	r1, fp, #30
   322a8:	ldrd	sl, [r3]
   322ac:	add	r3, sp, #7040	; 0x1b80
   322b0:	lsr	lr, r6, #14
   322b4:	ldrd	r2, [r3]
   322b8:	orr	lr, lr, r7, lsl #18
   322bc:	lsr	r0, r4, #28
   322c0:	eor	sl, sl, r2
   322c4:	mov	r2, r6
   322c8:	add	r6, sp, #7040	; 0x1b80
   322cc:	eor	fp, fp, r3
   322d0:	add	r6, r6, #8
   322d4:	mov	r3, r7
   322d8:	str	lr, [r6]
   322dc:	orr	lr, ip, r3, lsl #14
   322e0:	add	ip, sp, #7040	; 0x1b80
   322e4:	add	ip, ip, #16
   322e8:	str	lr, [ip]
   322ec:	orr	lr, r0, r5, lsl #4
   322f0:	add	r0, sp, #7040	; 0x1b80
   322f4:	add	r0, r0, #32
   322f8:	str	lr, [r0]
   322fc:	add	r0, sp, #7040	; 0x1b80
   32300:	add	r0, r0, #44	; 0x2c
   32304:	orr	r1, r1, r4, lsr #2
   32308:	lsr	r6, r3, #18
   3230c:	str	r1, [r0]
   32310:	strd	r2, [sp, #72]	; 0x48
   32314:	lsl	r0, r3, #23
   32318:	ldrd	r2, [sp, #152]	; 0x98
   3231c:	lsr	r7, r7, #14
   32320:	strd	r4, [sp, #40]	; 0x28
   32324:	adds	r2, r2, r8
   32328:	adc	r3, r3, r9
   3232c:	ldr	r9, [sp, #72]	; 0x48
   32330:	add	r8, sp, #7040	; 0x1b80
   32334:	add	r8, r8, #12
   32338:	orr	r7, r7, r9, lsl #18
   3233c:	str	r7, [r8]
   32340:	orr	r7, r6, r9, lsl #14
   32344:	add	r6, sp, #7040	; 0x1b80
   32348:	add	r6, r6, #20
   3234c:	str	r7, [r6]
   32350:	ldrd	r6, [sp, #40]	; 0x28
   32354:	strd	r2, [sp, #80]	; 0x50
   32358:	add	r8, sp, #7040	; 0x1b80
   3235c:	add	r3, sp, #1232	; 0x4d0
   32360:	lsr	lr, r5, #28
   32364:	b	32380 <__assert_fail@plt+0x21094>
   32368:	stc2l	14, cr7, [r5], #-168	; 0xffffff58
   3236c:	ldmdbpl	pc!, {r2, r3, r4, r7, r8, fp, sp}^	; <UNPREDICTABLE>
   32370:	bcc	ff5f0f28 <optarg@@GLIBC_2.4+0xff59ed80>
   32374:	svcpl	0x00cb6fab
   32378:	bmi	12083dc <optarg@@GLIBC_2.4+0x11b6234>
   3237c:	mcrrvs	9, 8, r1, r4, cr12	; <UNPREDICTABLE>
   32380:	add	r8, r8, #36	; 0x24
   32384:	lsl	ip, r4, #30
   32388:	ldrd	r2, [r3]
   3238c:	orr	lr, lr, r6, lsl #4
   32390:	str	lr, [r8]
   32394:	orr	lr, ip, r7, lsr #2
   32398:	add	ip, sp, #7040	; 0x1b80
   3239c:	add	ip, ip, #40	; 0x28
   323a0:	eor	r2, r2, sl
   323a4:	eor	r3, r3, fp
   323a8:	mov	r8, r6
   323ac:	lsl	r1, r5, #25
   323b0:	mov	sl, r2
   323b4:	ldrd	r4, [sp, #48]	; 0x30
   323b8:	mov	fp, r3
   323bc:	mov	r9, r7
   323c0:	ldrd	r2, [sp, #56]	; 0x38
   323c4:	str	lr, [ip]
   323c8:	ldrd	r6, [sp, #72]	; 0x48
   323cc:	eor	r2, r2, r4
   323d0:	eor	r3, r3, r5
   323d4:	orr	lr, r0, r6, lsr #9
   323d8:	add	r0, sp, #7040	; 0x1b80
   323dc:	add	r0, r0, #28
   323e0:	str	lr, [r0]
   323e4:	orr	lr, r1, r8, lsr #7
   323e8:	add	r1, sp, #7040	; 0x1b80
   323ec:	add	r1, r1, #52	; 0x34
   323f0:	mov	r0, r8
   323f4:	str	lr, [r1]
   323f8:	mov	r1, r9
   323fc:	lsl	lr, r8, #25
   32400:	ldrd	r8, [sp, #80]	; 0x50
   32404:	lsl	ip, r6, #23
   32408:	adds	r8, r8, sl
   3240c:	adc	r9, r9, fp
   32410:	mov	fp, r9
   32414:	mov	r9, r7
   32418:	orr	r7, ip, r7, lsr #9
   3241c:	add	ip, sp, #7040	; 0x1b80
   32420:	add	ip, ip, #24
   32424:	mov	sl, r8
   32428:	str	r7, [ip]
   3242c:	mov	r8, r6
   32430:	ldr	r7, [sp, #44]	; 0x2c
   32434:	and	r8, r8, r2
   32438:	and	r9, r9, r3
   3243c:	add	ip, sp, #7040	; 0x1b80
   32440:	mov	r2, r8
   32444:	mov	r3, r9
   32448:	add	ip, ip, #48	; 0x30
   3244c:	ldrd	r8, [sp, #16]
   32450:	orr	lr, lr, r7, lsr #7
   32454:	ldrd	r6, [sp, #32]
   32458:	str	lr, [ip]
   3245c:	add	ip, sp, #7040	; 0x1b80
   32460:	orr	r9, r9, r1
   32464:	add	ip, ip, #16
   32468:	adds	r6, r6, sl
   3246c:	mov	r1, r9
   32470:	mov	r9, r5
   32474:	adc	r7, r7, fp
   32478:	eor	r9, r9, r3
   3247c:	ldrd	sl, [ip]
   32480:	add	r3, sp, #7040	; 0x1b80
   32484:	add	ip, sp, #7040	; 0x1b80
   32488:	orr	r8, r8, r0
   3248c:	add	ip, ip, #32
   32490:	add	r3, r3, #8
   32494:	mov	r0, r8
   32498:	mov	r8, r4
   3249c:	strd	r6, [sp, #32]
   324a0:	eor	r8, r8, r2
   324a4:	ldrd	r6, [ip]
   324a8:	ldrd	r2, [r3]
   324ac:	add	ip, sp, #7040	; 0x1b80
   324b0:	add	ip, ip, #40	; 0x28
   324b4:	eor	r2, r2, sl
   324b8:	eor	r3, r3, fp
   324bc:	ldrd	sl, [ip]
   324c0:	ldrd	r4, [sp, #16]
   324c4:	eor	r6, r6, sl
   324c8:	eor	r7, r7, fp
   324cc:	ldrd	sl, [sp, #40]	; 0x28
   324d0:	and	r4, r4, sl
   324d4:	and	r5, r5, fp
   324d8:	ldrd	sl, [sp, #32]
   324dc:	strd	r4, [sp, #80]	; 0x50
   324e0:	ldrd	r4, [sp, #96]	; 0x60
   324e4:	adds	sl, sl, r8
   324e8:	mov	r8, sl
   324ec:	add	sl, sp, #7040	; 0x1b80
   324f0:	add	sl, sl, #24
   324f4:	adc	fp, fp, r9
   324f8:	mov	r9, fp
   324fc:	ldrd	sl, [sl]
   32500:	and	r4, r4, r0
   32504:	and	r5, r5, r1
   32508:	eor	sl, sl, r2
   3250c:	mov	r2, sl
   32510:	add	sl, sp, #7040	; 0x1b80
   32514:	add	sl, sl, #48	; 0x30
   32518:	eor	fp, fp, r3
   3251c:	mov	r3, fp
   32520:	ldrd	sl, [sl]
   32524:	mov	r0, r4
   32528:	mov	r1, r5
   3252c:	eor	sl, sl, r6
   32530:	eor	fp, fp, r7
   32534:	mov	r6, sl
   32538:	mov	r7, fp
   3253c:	ldrd	sl, [sp, #80]	; 0x50
   32540:	ldrd	r4, [sp, #64]	; 0x40
   32544:	adds	r2, r2, r8
   32548:	orr	sl, sl, r0
   3254c:	lsr	ip, r4, #8
   32550:	lsr	lr, r4, #1
   32554:	mov	r0, sl
   32558:	mov	sl, r4
   3255c:	add	r4, sp, #7040	; 0x1b80
   32560:	add	r4, r4, #56	; 0x38
   32564:	orr	lr, lr, r5, lsl #31
   32568:	orr	fp, fp, r1
   3256c:	str	lr, [r4]
   32570:	mov	r1, fp
   32574:	lsr	lr, r5, #1
   32578:	mov	fp, r5
   3257c:	add	r4, sp, #7040	; 0x1b80
   32580:	orr	r5, ip, r5, lsl #24
   32584:	add	ip, sp, #7104	; 0x1bc0
   32588:	add	r4, r4, #60	; 0x3c
   3258c:	str	r5, [ip]
   32590:	orr	lr, lr, sl, lsl #31
   32594:	lsr	ip, fp, #8
   32598:	str	lr, [r4]
   3259c:	orr	lr, ip, sl, lsl #24
   325a0:	ldrd	sl, [sp, #88]	; 0x58
   325a4:	adc	r3, r3, r9
   325a8:	adds	r0, r0, r6
   325ac:	adc	r1, r1, r7
   325b0:	adds	sl, sl, r2
   325b4:	mov	r6, sl
   325b8:	adc	fp, fp, r3
   325bc:	adds	sl, r0, r2
   325c0:	mov	r7, fp
   325c4:	adc	fp, r1, r3
   325c8:	add	r3, sp, #7040	; 0x1b80
   325cc:	add	r3, r3, #56	; 0x38
   325d0:	ldrd	r4, [sp, #104]	; 0x68
   325d4:	add	ip, sp, #7104	; 0x1bc0
   325d8:	ldrd	r0, [r3]
   325dc:	add	ip, ip, #4
   325e0:	add	r3, sp, #7104	; 0x1bc0
   325e4:	str	lr, [ip]
   325e8:	lsl	ip, r5, #3
   325ec:	ldrd	r2, [r3]
   325f0:	lsr	r5, r4, #6
   325f4:	lsr	lr, r4, #19
   325f8:	str	r5, [sp, #1248]	; 0x4e0
   325fc:	ldrd	r4, [sp, #104]	; 0x68
   32600:	eor	r0, r0, r2
   32604:	eor	r1, r1, r3
   32608:	add	r2, sp, #7104	; 0x1bc0
   3260c:	orr	r3, lr, r5, lsl #13
   32610:	mov	r9, r1
   32614:	ldr	lr, [sp, #1248]	; 0x4e0
   32618:	add	r2, r2, #8
   3261c:	add	r1, sp, #7104	; 0x1bc0
   32620:	add	r1, r1, #20
   32624:	str	r3, [r2]
   32628:	orr	lr, lr, r5, lsl #26
   3262c:	orr	r3, ip, r4, lsr #29
   32630:	lsr	r2, r5, #19
   32634:	str	r3, [r1]
   32638:	str	lr, [sp, #1248]	; 0x4e0
   3263c:	add	r1, sp, #1232	; 0x4d0
   32640:	orr	lr, r2, r4, lsl #13
   32644:	add	r2, sp, #7104	; 0x1bc0
   32648:	add	r2, r2, #12
   3264c:	add	r1, r1, #8
   32650:	str	lr, [r2]
   32654:	mov	r8, r0
   32658:	add	r2, sp, #7104	; 0x1bc0
   3265c:	ldrd	r0, [r1]
   32660:	lsl	r3, r4, #3
   32664:	add	r2, r2, #16
   32668:	orr	r3, r3, r5, lsr #29
   3266c:	str	r3, [r2]
   32670:	eor	r0, r0, r8
   32674:	lsr	r3, r5, #6
   32678:	eor	r1, r1, r9
   3267c:	str	r3, [sp, #1252]	; 0x4e4
   32680:	mov	r8, r0
   32684:	sub	r3, pc, #788	; 0x314
   32688:	ldrd	r2, [r3]
   3268c:	mov	r9, r1
   32690:	ldrd	r0, [sp, #24]
   32694:	lsr	r5, r6, #14
   32698:	orr	r5, r5, r7, lsl #18
   3269c:	adds	r0, r0, r2
   326a0:	adc	r1, r1, r3
   326a4:	add	r3, sp, #7104	; 0x1bc0
   326a8:	add	r3, r3, #8
   326ac:	adds	r8, r8, r0
   326b0:	adc	r9, r9, r1
   326b4:	ldrd	r0, [r3]
   326b8:	add	r3, sp, #7104	; 0x1bc0
   326bc:	add	r3, r3, #16
   326c0:	lsr	r4, r6, #18
   326c4:	ldrd	r2, [r3]
   326c8:	lsr	lr, sl, #28
   326cc:	orr	lr, lr, fp, lsl #4
   326d0:	eor	r0, r0, r2
   326d4:	eor	r1, r1, r3
   326d8:	ldrd	r2, [sp, #56]	; 0x38
   326dc:	strd	r0, [sp, #24]
   326e0:	ldrd	r0, [sp, #72]	; 0x48
   326e4:	lsl	ip, fp, #30
   326e8:	eor	r2, r2, r0
   326ec:	eor	r3, r3, r1
   326f0:	orr	r1, r4, r7, lsl #14
   326f4:	strd	r2, [sp, #32]
   326f8:	add	r3, sp, #7104	; 0x1bc0
   326fc:	add	r3, r3, #24
   32700:	str	r5, [r3]
   32704:	add	r3, sp, #7104	; 0x1bc0
   32708:	add	r3, r3, #32
   3270c:	str	r1, [r3]
   32710:	add	r3, sp, #7104	; 0x1bc0
   32714:	add	r3, r3, #48	; 0x30
   32718:	str	lr, [r3]
   3271c:	add	r3, sp, #7104	; 0x1bc0
   32720:	add	r3, r3, #60	; 0x3c
   32724:	orr	r1, ip, sl, lsr #2
   32728:	str	r1, [r3]
   3272c:	ldrd	r0, [sp, #160]	; 0xa0
   32730:	add	r3, sp, #1248	; 0x4e0
   32734:	lsr	r5, r7, #14
   32738:	adds	r0, r0, r8
   3273c:	adc	r1, r1, r9
   32740:	mov	r8, r0
   32744:	mov	r9, r1
   32748:	ldrd	r0, [r3]
   3274c:	ldrd	r2, [sp, #24]
   32750:	lsr	r4, r7, #18
   32754:	orr	r5, r5, r6, lsl #18
   32758:	eor	r3, r3, r1
   3275c:	mov	r1, r3
   32760:	lsl	r3, r7, #23
   32764:	str	r3, [sp, #24]
   32768:	eor	r2, r2, r0
   3276c:	lsl	r3, fp, #25
   32770:	mov	r0, r2
   32774:	str	r3, [sp, #64]	; 0x40
   32778:	ldrd	r2, [sp, #32]
   3277c:	lsr	lr, fp, #28
   32780:	lsl	ip, sl, #30
   32784:	and	r2, r2, r6
   32788:	and	r3, r3, r7
   3278c:	adds	r8, r8, r0
   32790:	strd	r2, [sp]
   32794:	add	r3, sp, #7104	; 0x1bc0
   32798:	add	r3, r3, #28
   3279c:	str	r5, [r3]
   327a0:	orr	r5, r4, r6, lsl #14
   327a4:	add	r4, sp, #7104	; 0x1bc0
   327a8:	add	r4, r4, #36	; 0x24
   327ac:	str	r5, [r4]
   327b0:	orr	r5, lr, sl, lsl #4
   327b4:	add	lr, sp, #7104	; 0x1bc0
   327b8:	add	lr, lr, #52	; 0x34
   327bc:	str	r5, [lr]
   327c0:	orr	r5, ip, fp, lsr #2
   327c4:	add	ip, sp, #7104	; 0x1bc0
   327c8:	adc	r9, r9, r1
   327cc:	add	ip, ip, #56	; 0x38
   327d0:	ldr	lr, [sp, #24]
   327d4:	add	r1, sp, #7104	; 0x1bc0
   327d8:	add	r1, r1, #44	; 0x2c
   327dc:	str	r5, [ip]
   327e0:	orr	r5, lr, r6, lsr #9
   327e4:	str	r5, [r1]
   327e8:	ldrd	r4, [sp, #40]	; 0x28
   327ec:	ldr	lr, [sp, #64]	; 0x40
   327f0:	add	r1, sp, #7168	; 0x1c00
   327f4:	orr	r4, r4, sl
   327f8:	orr	r5, r5, fp
   327fc:	add	r1, r1, #4
   32800:	strd	r4, [sp, #32]
   32804:	lsl	r0, r6, #23
   32808:	ldrd	r4, [sp, #56]	; 0x38
   3280c:	orr	lr, lr, sl, lsr #7
   32810:	ldrd	r2, [sp]
   32814:	str	lr, [r1]
   32818:	orr	lr, r0, r7, lsr #9
   3281c:	add	r0, sp, #7104	; 0x1bc0
   32820:	add	r0, r0, #40	; 0x28
   32824:	eor	r2, r2, r4
   32828:	eor	r3, r3, r5
   3282c:	ldrd	r4, [sp, #48]	; 0x30
   32830:	str	lr, [r0]
   32834:	add	r0, sp, #7104	; 0x1bc0
   32838:	add	r0, r0, #24
   3283c:	adds	r4, r4, r8
   32840:	adc	r5, r5, r9
   32844:	ldrd	r8, [r0]
   32848:	add	r0, sp, #7104	; 0x1bc0
   3284c:	add	r0, r0, #32
   32850:	strd	r4, [sp, #24]
   32854:	ldrd	r4, [r0]
   32858:	lsl	r1, sl, #25
   3285c:	orr	lr, r1, fp, lsr #7
   32860:	add	r1, sp, #7168	; 0x1c00
   32864:	eor	r8, r8, r4
   32868:	eor	r9, r9, r5
   3286c:	str	lr, [r1]
   32870:	mov	r4, r8
   32874:	mov	r5, r9
   32878:	ldrd	r0, [sp, #16]
   3287c:	ldrd	r8, [sp, #32]
   32880:	and	r0, r0, r8
   32884:	and	r1, r1, r9
   32888:	ldrd	r8, [sp, #40]	; 0x28
   3288c:	strd	r0, [sp, #32]
   32890:	add	r1, sp, #7104	; 0x1bc0
   32894:	and	r8, r8, sl
   32898:	and	r9, r9, fp
   3289c:	add	r1, r1, #48	; 0x30
   328a0:	strd	r8, [sp, #48]	; 0x30
   328a4:	ldrd	r8, [r1]
   328a8:	ldrd	r0, [ip]
   328ac:	eor	r8, r8, r0
   328b0:	eor	r9, r9, r1
   328b4:	mov	r0, r2
   328b8:	mov	r1, r3
   328bc:	ldrd	r2, [sp, #24]
   328c0:	adds	r2, r2, r0
   328c4:	adc	r3, r3, r1
   328c8:	mov	r1, r3
   328cc:	add	r3, sp, #7104	; 0x1bc0
   328d0:	add	r3, r3, #40	; 0x28
   328d4:	mov	r0, r2
   328d8:	ldrd	r2, [r3]
   328dc:	strd	r0, [sp, #24]
   328e0:	ldrd	r0, [sp, #32]
   328e4:	eor	r2, r2, r4
   328e8:	eor	r3, r3, r5
   328ec:	mov	r4, r2
   328f0:	mov	r5, r3
   328f4:	ldrd	r2, [sp, #48]	; 0x30
   328f8:	orr	r3, r3, r1
   328fc:	mov	r1, r3
   32900:	add	r3, sp, #7168	; 0x1c00
   32904:	orr	r2, r2, r0
   32908:	mov	r0, r2
   3290c:	ldrd	r2, [r3]
   32910:	eor	r8, r8, r2
   32914:	eor	r9, r9, r3
   32918:	mov	r2, r8
   3291c:	mov	r3, r9
   32920:	ldrd	r8, [sp, #24]
   32924:	adds	r8, r8, r4
   32928:	adc	r9, r9, r5
   3292c:	adds	r0, r0, r2
   32930:	adc	r1, r1, r3
   32934:	ldrd	r2, [sp, #96]	; 0x60
   32938:	adds	r2, r2, r8
   3293c:	adc	r3, r3, r9
   32940:	adds	r8, r0, r8
   32944:	adc	r9, r1, r9
   32948:	add	r1, sp, #1248	; 0x4e0
   3294c:	add	r1, r1, #8
   32950:	strd	r8, [sp, #24]
   32954:	ldrd	r0, [r1]
   32958:	ldrd	r8, [sp, #40]	; 0x28
   3295c:	adds	r8, r8, r0
   32960:	adc	r9, r9, r1
   32964:	add	r1, sp, #1248	; 0x4e0
   32968:	add	r1, r1, #8
   3296c:	strd	r8, [r1]
   32970:	add	r1, sp, #1280	; 0x500
   32974:	ldrd	r8, [sp, #72]	; 0x48
   32978:	ldrd	r0, [r1]
   3297c:	ldrd	r4, [sp, #16]
   32980:	ldr	ip, [sp, #12]
   32984:	adds	r8, r8, r0
   32988:	adc	r9, r9, r1
   3298c:	add	r1, sp, #1264	; 0x4f0
   32990:	ldrd	r0, [r1]
   32994:	adds	r4, r4, r0
   32998:	adc	r5, r5, r1
   3299c:	add	r1, sp, #1264	; 0x4f0
   329a0:	strd	r4, [r1]
   329a4:	add	r1, sp, #7168	; 0x1c00
   329a8:	add	r1, r1, #32
   329ac:	ldrd	r4, [sp, #56]	; 0x38
   329b0:	ldrd	r0, [r1]
   329b4:	adds	r4, r4, r0
   329b8:	adc	r5, r5, r1
   329bc:	add	r1, sp, #7168	; 0x1c00
   329c0:	add	r1, r1, #32
   329c4:	strd	r4, [r1]
   329c8:	add	r1, sp, #7168	; 0x1c00
   329cc:	add	r1, r1, #24
   329d0:	ldrd	r0, [r1]
   329d4:	adds	r0, r0, r6
   329d8:	adc	r1, r1, r7
   329dc:	mov	r7, r1
   329e0:	add	r1, sp, #7168	; 0x1c00
   329e4:	mov	r6, r0
   329e8:	add	r1, r1, #24
   329ec:	strd	r6, [r1]
   329f0:	add	r1, sp, #7168	; 0x1c00
   329f4:	add	r1, r1, #16
   329f8:	ldrd	r0, [r1]
   329fc:	adds	r0, r0, sl
   32a00:	adc	r1, r1, fp
   32a04:	mov	fp, r1
   32a08:	add	r1, sp, #7168	; 0x1c00
   32a0c:	mov	sl, r0
   32a10:	add	r1, r1, #16
   32a14:	strd	sl, [r1]
   32a18:	add	r1, sp, #1264	; 0x4f0
   32a1c:	add	r1, r1, #8
   32a20:	ldrd	r0, [r1]
   32a24:	adds	r0, r0, r2
   32a28:	adc	r1, r1, r3
   32a2c:	add	r3, sp, #7168	; 0x1c00
   32a30:	add	r3, r3, #8
   32a34:	strd	r0, [sp, #16]
   32a38:	ldrd	r2, [r3]
   32a3c:	ldrd	r0, [sp, #24]
   32a40:	adds	r0, r0, r2
   32a44:	adc	r1, r1, r3
   32a48:	mov	r3, r1
   32a4c:	add	r1, sp, #7168	; 0x1c00
   32a50:	mov	r2, r0
   32a54:	add	r1, r1, #8
   32a58:	strd	r2, [r1]
   32a5c:	add	r1, sp, #7232	; 0x1c40
   32a60:	add	r1, r1, #56	; 0x38
   32a64:	ldr	lr, [r1]
   32a68:	add	r1, sp, #7232	; 0x1c40
   32a6c:	add	r1, r1, #60	; 0x3c
   32a70:	cmp	lr, ip
   32a74:	ldr	ip, [r1]
   32a78:	strd	r2, [sp, #24]
   32a7c:	add	r1, sp, #1264	; 0x4f0
   32a80:	strd	r2, [ip]
   32a84:	ldrd	r2, [sp, #16]
   32a88:	add	r1, r1, #8
   32a8c:	strd	r8, [ip, #48]	; 0x30
   32a90:	strd	r2, [r1]
   32a94:	add	r1, sp, #1280	; 0x500
   32a98:	strd	r2, [ip, #32]
   32a9c:	add	r3, sp, #1248	; 0x4e0
   32aa0:	strd	r8, [r1]
   32aa4:	add	r3, r3, #8
   32aa8:	add	r1, sp, #1264	; 0x4f0
   32aac:	ldrd	r2, [r3]
   32ab0:	ldrd	r0, [r1]
   32ab4:	strd	sl, [ip, #8]
   32ab8:	strd	r2, [ip, #16]
   32abc:	strd	r6, [ip, #40]	; 0x28
   32ac0:	strd	r0, [ip, #24]
   32ac4:	strd	r4, [ip, #56]	; 0x38
   32ac8:	add	ip, sp, #1264	; 0x4f0
   32acc:	strd	r2, [sp, #80]	; 0x50
   32ad0:	add	ip, ip, #8
   32ad4:	add	r3, sp, #1280	; 0x500
   32ad8:	ldrd	r8, [ip]
   32adc:	ldrd	r2, [r3]
   32ae0:	strd	sl, [sp, #56]	; 0x38
   32ae4:	strd	r8, [sp, #32]
   32ae8:	strd	r6, [sp, #48]	; 0x30
   32aec:	strd	r2, [sp, #16]
   32af0:	strd	r0, [sp, #40]	; 0x28
   32af4:	strd	r4, [sp, #64]	; 0x40
   32af8:	bhi	212f0 <__assert_fail@plt+0x10004>
   32afc:	add	sp, sp, #7296	; 0x1c80
   32b00:	add	sp, sp, #4
   32b04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32b08:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32b0c:	mov	r4, r0
   32b10:	ldr	ip, [r0, #80]	; 0x50
   32b14:	ldrd	r0, [r0, #64]	; 0x40
   32b18:	cmp	ip, #111	; 0x6f
   32b1c:	mov	r3, #0
   32b20:	movhi	r5, #336	; 0x150
   32b24:	movls	r5, #208	; 0xd0
   32b28:	movhi	lr, #328	; 0x148
   32b2c:	movls	lr, #200	; 0xc8
   32b30:	movhi	sl, #256	; 0x100
   32b34:	movls	sl, #128	; 0x80
   32b38:	movhi	fp, #240	; 0xf0
   32b3c:	movls	fp, #112	; 0x70
   32b40:	adds	r0, r0, ip
   32b44:	adc	r1, r1, r3
   32b48:	cmp	r3, r1
   32b4c:	cmpeq	ip, r0
   32b50:	sub	sp, sp, #20
   32b54:	strd	r0, [r4, #64]	; 0x40
   32b58:	ldrd	r6, [r4, #72]	; 0x48
   32b5c:	bls	32b6c <__assert_fail@plt+0x21880>
   32b60:	adds	r6, r6, #1
   32b64:	adc	r7, r7, #0
   32b68:	strd	r6, [r4, #72]	; 0x48
   32b6c:	lsl	r3, r7, #3
   32b70:	lsr	r8, r1, #29
   32b74:	orr	r3, r3, r6, lsr #29
   32b78:	lsl	r2, r6, #3
   32b7c:	mov	r9, #0
   32b80:	orr	r2, r2, r8
   32b84:	orr	r3, r3, r9
   32b88:	add	r6, sp, #8
   32b8c:	rev	r2, r2
   32b90:	rev	r3, r3
   32b94:	str	r2, [sp, #12]
   32b98:	str	r3, [sp, #8]
   32b9c:	ldm	r6!, {r0, r1}
   32ba0:	add	r3, r4, lr
   32ba4:	mov	r6, sp
   32ba8:	str	r0, [r4, lr]
   32bac:	str	r1, [r3, #4]
   32bb0:	ldr	r3, [r4, #68]	; 0x44
   32bb4:	ldr	r2, [r4, #64]	; 0x40
   32bb8:	add	lr, r4, r5
   32bbc:	lsl	r3, r3, #3
   32bc0:	orr	r3, r3, r2, lsr #29
   32bc4:	lsl	r2, r2, #3
   32bc8:	rev	r3, r3
   32bcc:	rev	r2, r2
   32bd0:	str	r2, [sp, #4]
   32bd4:	str	r3, [sp]
   32bd8:	ldm	r6!, {r0, r1}
   32bdc:	add	r6, r4, #88	; 0x58
   32be0:	sub	r2, fp, ip
   32be4:	str	r0, [r4, r5]
   32be8:	str	r1, [lr, #4]
   32bec:	add	r0, r6, ip
   32bf0:	ldr	r1, [pc, #24]	; 32c10 <__assert_fail@plt+0x21924>
   32bf4:	bl	11058 <memcpy@plt>
   32bf8:	mov	r2, r4
   32bfc:	mov	r1, sl
   32c00:	mov	r0, r6
   32c04:	add	sp, sp, #20
   32c08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32c0c:	b	211d0 <__assert_fail@plt+0xfee4>
   32c10:	andeq	r1, r4, ip, lsr #13
   32c14:	push	{r4, r5, lr}
   32c18:	mov	r4, r0
   32c1c:	mov	r5, r1
   32c20:	sub	sp, sp, #12
   32c24:	bl	32b08 <__assert_fail@plt+0x2181c>
   32c28:	sub	ip, r4, #8
   32c2c:	mov	r2, r5
   32c30:	add	r4, r4, #56	; 0x38
   32c34:	ldr	lr, [ip, #8]!
   32c38:	mov	r3, sp
   32c3c:	rev	lr, lr
   32c40:	ldr	r1, [ip, #4]
   32c44:	str	lr, [sp, #4]
   32c48:	rev	r1, r1
   32c4c:	str	r1, [sp]
   32c50:	ldm	r3!, {r0, r1}
   32c54:	cmp	ip, r4
   32c58:	add	r2, r2, #8
   32c5c:	str	r0, [r2, #-8]
   32c60:	str	r1, [r2, #-4]
   32c64:	bne	32c34 <__assert_fail@plt+0x21948>
   32c68:	mov	r0, r5
   32c6c:	add	sp, sp, #12
   32c70:	pop	{r4, r5, pc}
   32c74:	push	{r4, r5, lr}
   32c78:	mov	r4, r0
   32c7c:	mov	r5, r1
   32c80:	sub	sp, sp, #12
   32c84:	bl	32b08 <__assert_fail@plt+0x2181c>
   32c88:	sub	ip, r4, #8
   32c8c:	mov	r2, r5
   32c90:	add	r4, r4, #40	; 0x28
   32c94:	ldr	lr, [ip, #8]!
   32c98:	mov	r3, sp
   32c9c:	rev	lr, lr
   32ca0:	ldr	r1, [ip, #4]
   32ca4:	str	lr, [sp, #4]
   32ca8:	rev	r1, r1
   32cac:	str	r1, [sp]
   32cb0:	ldm	r3!, {r0, r1}
   32cb4:	cmp	ip, r4
   32cb8:	add	r2, r2, #8
   32cbc:	str	r0, [r2, #-8]
   32cc0:	str	r1, [r2, #-4]
   32cc4:	bne	32c94 <__assert_fail@plt+0x219a8>
   32cc8:	mov	r0, r5
   32ccc:	add	sp, sp, #12
   32cd0:	pop	{r4, r5, pc}
   32cd4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   32cd8:	mov	r6, r2
   32cdc:	ldr	r4, [r2, #80]	; 0x50
   32ce0:	mov	sl, r0
   32ce4:	cmp	r4, #0
   32ce8:	mov	r8, r1
   32cec:	bne	32db4 <__assert_fail@plt+0x21ac8>
   32cf0:	cmp	r8, #127	; 0x7f
   32cf4:	bls	32da4 <__assert_fail@plt+0x21ab8>
   32cf8:	tst	sl, #7
   32cfc:	beq	32d88 <__assert_fail@plt+0x21a9c>
   32d00:	cmp	r8, #128	; 0x80
   32d04:	add	r9, r6, #88	; 0x58
   32d08:	beq	32d60 <__assert_fail@plt+0x21a74>
   32d0c:	mov	r5, r8
   32d10:	mov	r4, sl
   32d14:	mov	r7, #128	; 0x80
   32d18:	mov	r1, r4
   32d1c:	mov	r2, r7
   32d20:	mov	r0, r9
   32d24:	bl	11058 <memcpy@plt>
   32d28:	sub	r5, r5, #128	; 0x80
   32d2c:	mov	r2, r6
   32d30:	mov	r1, r7
   32d34:	bl	211d0 <__assert_fail@plt+0xfee4>
   32d38:	cmp	r5, #128	; 0x80
   32d3c:	add	r4, r4, #128	; 0x80
   32d40:	bhi	32d18 <__assert_fail@plt+0x21a2c>
   32d44:	sub	r3, r8, #129	; 0x81
   32d48:	bic	r2, r3, #127	; 0x7f
   32d4c:	mov	r3, r2
   32d50:	sub	r8, r8, #128	; 0x80
   32d54:	add	r2, r2, #128	; 0x80
   32d58:	sub	r8, r8, r3
   32d5c:	add	sl, sl, r2
   32d60:	ldr	r4, [r6, #80]	; 0x50
   32d64:	mov	r1, sl
   32d68:	add	r0, r9, r4
   32d6c:	mov	r2, r8
   32d70:	add	r4, r4, r8
   32d74:	bl	11058 <memcpy@plt>
   32d78:	cmp	r4, #127	; 0x7f
   32d7c:	bhi	32df4 <__assert_fail@plt+0x21b08>
   32d80:	str	r4, [r6, #80]	; 0x50
   32d84:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   32d88:	bic	r4, r8, #127	; 0x7f
   32d8c:	mov	r0, sl
   32d90:	mov	r1, r4
   32d94:	mov	r2, r6
   32d98:	bl	211d0 <__assert_fail@plt+0xfee4>
   32d9c:	and	r8, r8, #127	; 0x7f
   32da0:	add	sl, sl, r4
   32da4:	cmp	r8, #0
   32da8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   32dac:	add	r9, r6, #88	; 0x58
   32db0:	b	32d60 <__assert_fail@plt+0x21a74>
   32db4:	rsb	r5, r4, #256	; 0x100
   32db8:	cmp	r5, r1
   32dbc:	movcs	r5, r1
   32dc0:	add	r7, r2, #88	; 0x58
   32dc4:	mov	r1, sl
   32dc8:	mov	r2, r5
   32dcc:	add	r0, r7, r4
   32dd0:	bl	11058 <memcpy@plt>
   32dd4:	ldr	r1, [r6, #80]	; 0x50
   32dd8:	add	r1, r5, r1
   32ddc:	cmp	r1, #128	; 0x80
   32de0:	str	r1, [r6, #80]	; 0x50
   32de4:	bhi	32e20 <__assert_fail@plt+0x21b34>
   32de8:	add	sl, sl, r5
   32dec:	sub	r8, r8, r5
   32df0:	b	32cf0 <__assert_fail@plt+0x21a04>
   32df4:	sub	r4, r4, #128	; 0x80
   32df8:	mov	r2, r6
   32dfc:	mov	r1, #128	; 0x80
   32e00:	mov	r0, r9
   32e04:	bl	211d0 <__assert_fail@plt+0xfee4>
   32e08:	mov	r0, r9
   32e0c:	mov	r2, r4
   32e10:	add	r1, r6, #216	; 0xd8
   32e14:	bl	11058 <memcpy@plt>
   32e18:	str	r4, [r6, #80]	; 0x50
   32e1c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   32e20:	mov	r2, r6
   32e24:	mov	r0, r7
   32e28:	bic	r1, r1, #127	; 0x7f
   32e2c:	bl	211d0 <__assert_fail@plt+0xfee4>
   32e30:	ldr	r2, [r6, #80]	; 0x50
   32e34:	add	r1, r4, r5
   32e38:	and	r2, r2, #127	; 0x7f
   32e3c:	bic	r1, r1, #127	; 0x7f
   32e40:	add	r1, r7, r1
   32e44:	mov	r0, r7
   32e48:	str	r2, [r6, #80]	; 0x50
   32e4c:	bl	11058 <memcpy@plt>
   32e50:	b	32de8 <__assert_fail@plt+0x21afc>
   32e54:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32e58:	mov	r5, r2
   32e5c:	add	r7, pc, #500	; 0x1f4
   32e60:	ldrd	r6, [r7]
   32e64:	sub	sp, sp, #356	; 0x164
   32e68:	add	r3, pc, #496	; 0x1f0
   32e6c:	ldrd	r2, [r3]
   32e70:	strd	r6, [sp, #16]
   32e74:	add	r7, pc, #492	; 0x1ec
   32e78:	ldrd	r6, [r7]
   32e7c:	strd	r2, [sp, #24]
   32e80:	add	r3, pc, #488	; 0x1e8
   32e84:	ldrd	r2, [r3]
   32e88:	strd	r6, [sp, #32]
   32e8c:	add	r7, pc, #484	; 0x1e4
   32e90:	ldrd	r6, [r7]
   32e94:	strd	r2, [sp, #40]	; 0x28
   32e98:	add	r3, pc, #480	; 0x1e0
   32e9c:	ldrd	r2, [r3]
   32ea0:	add	fp, pc, #480	; 0x1e0
   32ea4:	ldrd	sl, [fp]
   32ea8:	strd	r6, [sp, #48]	; 0x30
   32eac:	add	r7, pc, #476	; 0x1dc
   32eb0:	ldrd	r6, [r7]
   32eb4:	strd	r2, [sp, #56]	; 0x38
   32eb8:	mov	r2, #0
   32ebc:	mov	r3, #0
   32ec0:	mov	r8, r1
   32ec4:	cmp	r1, #127	; 0x7f
   32ec8:	mov	r1, #0
   32ecc:	strd	sl, [sp, #8]
   32ed0:	strd	r6, [sp, #64]	; 0x40
   32ed4:	strd	r2, [sp, #80]	; 0x50
   32ed8:	strd	r2, [sp, #72]	; 0x48
   32edc:	str	r1, [sp, #88]	; 0x58
   32ee0:	mov	fp, r0
   32ee4:	bls	32f74 <__assert_fail@plt+0x21c88>
   32ee8:	tst	r0, #7
   32eec:	beq	32fd4 <__assert_fail@plt+0x21ce8>
   32ef0:	cmp	r8, #128	; 0x80
   32ef4:	beq	32ffc <__assert_fail@plt+0x21d10>
   32ef8:	mov	r7, r8
   32efc:	mov	r6, r0
   32f00:	add	r4, sp, #8
   32f04:	add	sl, sp, #96	; 0x60
   32f08:	mov	r9, #128	; 0x80
   32f0c:	mov	r1, r6
   32f10:	mov	r2, r9
   32f14:	mov	r0, sl
   32f18:	bl	11058 <memcpy@plt>
   32f1c:	sub	r7, r7, #128	; 0x80
   32f20:	mov	r2, r4
   32f24:	mov	r1, r9
   32f28:	bl	211d0 <__assert_fail@plt+0xfee4>
   32f2c:	cmp	r7, #128	; 0x80
   32f30:	add	r6, r6, #128	; 0x80
   32f34:	bhi	32f0c <__assert_fail@plt+0x21c20>
   32f38:	sub	r2, r8, #129	; 0x81
   32f3c:	bic	r1, r2, #127	; 0x7f
   32f40:	mov	r2, r1
   32f44:	sub	r8, r8, #128	; 0x80
   32f48:	add	r1, r1, #128	; 0x80
   32f4c:	sub	r2, r8, r2
   32f50:	add	r1, fp, r1
   32f54:	ldr	r8, [sp, #88]	; 0x58
   32f58:	add	r0, sl, r8
   32f5c:	add	r8, r2, r8
   32f60:	bl	11058 <memcpy@plt>
   32f64:	cmp	r8, #127	; 0x7f
   32f68:	bhi	33014 <__assert_fail@plt+0x21d28>
   32f6c:	str	r8, [sp, #88]	; 0x58
   32f70:	b	32f80 <__assert_fail@plt+0x21c94>
   32f74:	cmp	r8, #0
   32f78:	bne	33040 <__assert_fail@plt+0x21d54>
   32f7c:	add	r4, sp, #8
   32f80:	mov	r0, r4
   32f84:	bl	32b08 <__assert_fail@plt+0x2181c>
   32f88:	mov	r2, r4
   32f8c:	mov	r3, r5
   32f90:	add	lr, r5, #64	; 0x40
   32f94:	ldm	r2, {r0, r1}
   32f98:	mov	ip, sp
   32f9c:	add	r3, r3, #8
   32fa0:	rev	r0, r0
   32fa4:	rev	r1, r1
   32fa8:	str	r0, [sp, #4]
   32fac:	str	r1, [sp]
   32fb0:	ldm	ip!, {r0, r1}
   32fb4:	add	r2, r2, #8
   32fb8:	str	r0, [r3, #-8]
   32fbc:	str	r1, [r3, #-4]
   32fc0:	cmp	r3, lr
   32fc4:	bne	32f94 <__assert_fail@plt+0x21ca8>
   32fc8:	mov	r0, r5
   32fcc:	add	sp, sp, #356	; 0x164
   32fd0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32fd4:	bic	r6, r8, #127	; 0x7f
   32fd8:	add	r4, sp, #8
   32fdc:	mov	r1, r6
   32fe0:	mov	r2, r4
   32fe4:	bl	211d0 <__assert_fail@plt+0xfee4>
   32fe8:	ands	r2, r8, #127	; 0x7f
   32fec:	addne	r1, fp, r6
   32ff0:	addne	sl, sp, #96	; 0x60
   32ff4:	beq	32f80 <__assert_fail@plt+0x21c94>
   32ff8:	b	32f54 <__assert_fail@plt+0x21c68>
   32ffc:	add	sl, sp, #96	; 0x60
   33000:	mov	r1, r0
   33004:	mov	r2, r8
   33008:	mov	r0, sl
   3300c:	bl	11058 <memcpy@plt>
   33010:	add	r4, sp, #8
   33014:	mov	r2, r4
   33018:	mov	r0, sl
   3301c:	sub	r8, r8, #128	; 0x80
   33020:	mov	r1, #128	; 0x80
   33024:	bl	211d0 <__assert_fail@plt+0xfee4>
   33028:	mov	r0, sl
   3302c:	mov	r2, r8
   33030:	mov	r3, #256	; 0x100
   33034:	add	r1, sp, #224	; 0xe0
   33038:	bl	110d0 <__memcpy_chk@plt>
   3303c:	b	32f6c <__assert_fail@plt+0x21c80>
   33040:	mov	r1, fp
   33044:	mov	r2, r8
   33048:	add	r0, sp, #96	; 0x60
   3304c:	bl	11058 <memcpy@plt>
   33050:	add	r4, sp, #8
   33054:	b	32f6c <__assert_fail@plt+0x21c80>
   33058:	strbhi	sl, [sl], #1851	; 0x73b
   3305c:	bllt	1a1ea78 <optarg@@GLIBC_2.4+0x19cc8d0>
   33060:	vcmla.f32	d15, d4, d27[0], #90
   33064:	stclcc	3, cr15, [lr], #-456	; 0xfffffe38
   33068:	svcpl	0x001d36f1
   3306c:	strbge	pc, [pc, #-1338]	; 32b3a <__assert_fail@plt+0x2184e>	; <UNPREDICTABLE>
   33070:	sfmge	f0, 3, [r6, #836]!	; 0x344
   33074:	tstpl	lr, pc, ror r2
   33078:	blcs	fce0fc <optarg@@GLIBC_2.4+0xf7bf54>
   3307c:	blls	18d2b4 <optarg@@GLIBC_2.4+0x13b10c>
   33080:	blx	10a2636 <optarg@@GLIBC_2.4+0x105048e>
   33084:	svcne	0x0083d9ab
   33088:	vtbl.8	d12, {d12-d13}, d8
   3308c:	bvs	2aca30 <optarg@@GLIBC_2.4+0x25a888>
   33090:	cmnne	lr, #1073741854	; 0x4000001e
   33094:	blpl	ff866500 <optarg@@GLIBC_2.4+0xff814358>
   33098:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3309c:	mov	r4, r2
   330a0:	add	r9, pc, #504	; 0x1f8
   330a4:	ldrd	r8, [r9]
   330a8:	sub	sp, sp, #356	; 0x164
   330ac:	add	r3, pc, #500	; 0x1f4
   330b0:	ldrd	r2, [r3]
   330b4:	strd	r8, [sp, #16]
   330b8:	add	r9, pc, #496	; 0x1f0
   330bc:	ldrd	r8, [r9]
   330c0:	strd	r2, [sp, #24]
   330c4:	add	r3, pc, #492	; 0x1ec
   330c8:	ldrd	r2, [r3]
   330cc:	strd	r8, [sp, #32]
   330d0:	add	r9, pc, #488	; 0x1e8
   330d4:	ldrd	r8, [r9]
   330d8:	strd	r2, [sp, #40]	; 0x28
   330dc:	add	r3, pc, #484	; 0x1e4
   330e0:	ldrd	r2, [r3]
   330e4:	add	fp, pc, #484	; 0x1e4
   330e8:	ldrd	sl, [fp]
   330ec:	strd	r8, [sp, #48]	; 0x30
   330f0:	add	r9, pc, #480	; 0x1e0
   330f4:	ldrd	r8, [r9]
   330f8:	strd	r2, [sp, #56]	; 0x38
   330fc:	mov	r2, #0
   33100:	mov	r3, #0
   33104:	mov	r7, r1
   33108:	cmp	r1, #127	; 0x7f
   3310c:	mov	r1, #0
   33110:	strd	sl, [sp, #8]
   33114:	strd	r8, [sp, #64]	; 0x40
   33118:	strd	r2, [sp, #80]	; 0x50
   3311c:	strd	r2, [sp, #72]	; 0x48
   33120:	str	r1, [sp, #88]	; 0x58
   33124:	mov	fp, r0
   33128:	bls	331b8 <__assert_fail@plt+0x21ecc>
   3312c:	tst	r0, #7
   33130:	beq	33218 <__assert_fail@plt+0x21f2c>
   33134:	cmp	r7, #128	; 0x80
   33138:	beq	33240 <__assert_fail@plt+0x21f54>
   3313c:	mov	r6, r7
   33140:	mov	r5, r0
   33144:	add	r9, sp, #8
   33148:	add	sl, sp, #96	; 0x60
   3314c:	mov	r8, #128	; 0x80
   33150:	mov	r1, r5
   33154:	mov	r2, r8
   33158:	mov	r0, sl
   3315c:	bl	11058 <memcpy@plt>
   33160:	sub	r6, r6, #128	; 0x80
   33164:	mov	r2, r9
   33168:	mov	r1, r8
   3316c:	bl	211d0 <__assert_fail@plt+0xfee4>
   33170:	cmp	r6, #128	; 0x80
   33174:	add	r5, r5, #128	; 0x80
   33178:	bhi	33150 <__assert_fail@plt+0x21e64>
   3317c:	sub	r2, r7, #129	; 0x81
   33180:	bic	r1, r2, #127	; 0x7f
   33184:	mov	r2, r1
   33188:	sub	r7, r7, #128	; 0x80
   3318c:	add	r1, r1, #128	; 0x80
   33190:	sub	r2, r7, r2
   33194:	add	r1, fp, r1
   33198:	ldr	r7, [sp, #88]	; 0x58
   3319c:	add	r0, sl, r7
   331a0:	add	r7, r2, r7
   331a4:	bl	11058 <memcpy@plt>
   331a8:	cmp	r7, #127	; 0x7f
   331ac:	bhi	33258 <__assert_fail@plt+0x21f6c>
   331b0:	str	r7, [sp, #88]	; 0x58
   331b4:	b	331c4 <__assert_fail@plt+0x21ed8>
   331b8:	cmp	r7, #0
   331bc:	bne	33284 <__assert_fail@plt+0x21f98>
   331c0:	add	r9, sp, #8
   331c4:	mov	r0, r9
   331c8:	bl	32b08 <__assert_fail@plt+0x2181c>
   331cc:	mov	ip, sp
   331d0:	mov	r3, r4
   331d4:	add	lr, r4, #48	; 0x30
   331d8:	ldr	r0, [ip, #8]!
   331dc:	mov	r2, sp
   331e0:	rev	r0, r0
   331e4:	ldr	r1, [ip, #4]
   331e8:	str	r0, [sp, #4]
   331ec:	rev	r1, r1
   331f0:	str	r1, [sp]
   331f4:	ldm	r2!, {r0, r1}
   331f8:	add	r3, r3, #8
   331fc:	str	r0, [r3, #-8]
   33200:	str	r1, [r3, #-4]
   33204:	cmp	lr, r3
   33208:	bne	331d8 <__assert_fail@plt+0x21eec>
   3320c:	mov	r0, r4
   33210:	add	sp, sp, #356	; 0x164
   33214:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33218:	bic	r5, r7, #127	; 0x7f
   3321c:	add	r9, sp, #8
   33220:	mov	r1, r5
   33224:	mov	r2, r9
   33228:	bl	211d0 <__assert_fail@plt+0xfee4>
   3322c:	ands	r2, r7, #127	; 0x7f
   33230:	addne	r1, fp, r5
   33234:	addne	sl, sp, #96	; 0x60
   33238:	beq	331c4 <__assert_fail@plt+0x21ed8>
   3323c:	b	33198 <__assert_fail@plt+0x21eac>
   33240:	add	sl, sp, #96	; 0x60
   33244:	mov	r1, r0
   33248:	mov	r2, r7
   3324c:	mov	r0, sl
   33250:	bl	11058 <memcpy@plt>
   33254:	add	r9, sp, #8
   33258:	mov	r2, r9
   3325c:	mov	r0, sl
   33260:	sub	r7, r7, #128	; 0x80
   33264:	mov	r1, #128	; 0x80
   33268:	bl	211d0 <__assert_fail@plt+0xfee4>
   3326c:	mov	r0, sl
   33270:	mov	r2, r7
   33274:	mov	r3, #256	; 0x100
   33278:	add	r1, sp, #224	; 0xe0
   3327c:	bl	110d0 <__memcpy_chk@plt>
   33280:	b	331b0 <__assert_fail@plt+0x21ec4>
   33284:	mov	r1, fp
   33288:	mov	r2, r7
   3328c:	add	r0, sp, #96	; 0x60
   33290:	bl	11058 <memcpy@plt>
   33294:	add	r9, sp, #8
   33298:	b	331b0 <__assert_fail@plt+0x21ec4>
   3329c:	nop			; (mov r0, r0)
   332a0:	ldrbtcc	sp, [ip], -r7, lsl #10
   332a4:	addsvs	r2, sl, #688128	; 0xa8000
   332a8:	rsbscc	sp, r0, r7, lsl sp
   332ac:	cmpls	r9, sl, asr r1
   332b0:			; <UNDEFINED> instruction: 0xf70e5939
   332b4:	strne	lr, [pc, #-3288]!	; 325e4 <__assert_fail@plt+0x212f8>
   332b8:			; <UNDEFINED> instruction: 0xffc00b31
   332bc:	ldrvs	r2, [r3, -r7, ror #12]!
   332c0:	ldmdavs	r8, {r0, r4, r8, sl, ip}^
   332c4:			; <UNDEFINED> instruction: 0x8eb44a87
   332c8:	ldrbtvs	r8, [r9], #4007	; 0xfa7
   332cc:	blle	33eb08 <optarg@@GLIBC_2.4+0x2ec960>
   332d0:	ldrdgt	r9, [r5, -r8]
   332d4:	blgt	fef1a850 <optarg@@GLIBC_2.4+0xfeec86a8>
   332d8:	cdplt	15, 15, cr4, cr10, cr4, {5}
   332dc:			; <UNDEFINED> instruction: 0x47b5481d
   332e0:	push	{r4, r5, r6, r7, r8, r9, lr}
   332e4:	mov	r5, r0
   332e8:	sub	sp, sp, #180	; 0xb4
   332ec:	ldr	r0, [pc, #200]	; 333bc <__assert_fail@plt+0x220d0>
   332f0:	mov	r8, r1
   332f4:	bl	3d47c <__assert_fail@plt+0x2c190>
   332f8:	subs	r6, r0, #0
   332fc:	moveq	r0, #1
   33300:	beq	33378 <__assert_fail@plt+0x2208c>
   33304:	add	r0, sp, #4
   33308:	bl	333c0 <__assert_fail@plt+0x220d4>
   3330c:	mov	r7, #1
   33310:	mov	r9, #32768	; 0x8000
   33314:	mov	r4, #0
   33318:	b	33330 <__assert_fail@plt+0x22044>
   3331c:	cmp	r0, #0
   33320:	ldr	r3, [r5]
   33324:	beq	33364 <__assert_fail@plt+0x22078>
   33328:	tst	r3, #16
   3332c:	bne	33380 <__assert_fail@plt+0x22094>
   33330:	rsb	r2, r4, #32768	; 0x8000
   33334:	add	r0, r6, r4
   33338:	mov	r3, r5
   3333c:	mov	r1, r7
   33340:	bl	112b0 <fread_unlocked@plt>
   33344:	add	r4, r4, r0
   33348:	cmp	r4, #32768	; 0x8000
   3334c:	bne	3331c <__assert_fail@plt+0x22030>
   33350:	add	r2, sp, #4
   33354:	mov	r1, r9
   33358:	mov	r0, r6
   3335c:	bl	334a4 <__assert_fail@plt+0x221b8>
   33360:	b	33314 <__assert_fail@plt+0x22028>
   33364:	tst	r3, #32
   33368:	beq	33380 <__assert_fail@plt+0x22094>
   3336c:	mov	r0, r6
   33370:	bl	3618c <__assert_fail@plt+0x24ea0>
   33374:	mov	r0, #1
   33378:	add	sp, sp, #180	; 0xb4
   3337c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   33380:	cmp	r4, #0
   33384:	bne	333a8 <__assert_fail@plt+0x220bc>
   33388:	mov	r1, r8
   3338c:	add	r0, sp, #4
   33390:	bl	35b84 <__assert_fail@plt+0x24898>
   33394:	mov	r0, r6
   33398:	bl	3618c <__assert_fail@plt+0x24ea0>
   3339c:	mov	r0, #0
   333a0:	add	sp, sp, #180	; 0xb4
   333a4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   333a8:	mov	r1, r4
   333ac:	add	r2, sp, #4
   333b0:	mov	r0, r6
   333b4:	bl	35c8c <__assert_fail@plt+0x249a0>
   333b8:	b	33388 <__assert_fail@plt+0x2209c>
   333bc:	andeq	r8, r0, r8, asr #32
   333c0:	ldr	r2, [pc, #80]	; 33418 <__assert_fail@plt+0x2212c>
   333c4:	ldr	r3, [pc, #80]	; 3341c <__assert_fail@plt+0x22130>
   333c8:	push	{r4, r5, lr}
   333cc:	ldr	ip, [pc, #76]	; 33420 <__assert_fail@plt+0x22134>
   333d0:	ldr	r5, [pc, #76]	; 33424 <__assert_fail@plt+0x22138>
   333d4:	ldr	r4, [pc, #76]	; 33428 <__assert_fail@plt+0x2213c>
   333d8:	ldr	lr, [pc, #76]	; 3342c <__assert_fail@plt+0x22140>
   333dc:	ldr	r1, [pc, #76]	; 33430 <__assert_fail@plt+0x22144>
   333e0:	str	r2, [r0]
   333e4:	ldr	r2, [pc, #72]	; 33434 <__assert_fail@plt+0x22148>
   333e8:	str	r3, [r0, #4]
   333ec:	mov	r3, #0
   333f0:	str	r5, [r0, #8]
   333f4:	str	r4, [r0, #12]
   333f8:	str	lr, [r0, #16]
   333fc:	str	ip, [r0, #20]
   33400:	str	r1, [r0, #24]
   33404:	str	r2, [r0, #28]
   33408:	str	r3, [r0, #36]	; 0x24
   3340c:	str	r3, [r0, #32]
   33410:	str	r3, [r0, #40]	; 0x28
   33414:	pop	{r4, r5, pc}
   33418:	orrvc	r1, r0, #116391936	; 0x6f00000
   3341c:	ldmdbmi	r4, {r0, r3, r4, r5, r7, r9, ip, sp, pc}
   33420:	ldrtne	r3, [r1], -sl, lsr #17
   33424:			; <UNDEFINED> instruction: 0x172442d7
   33428:	ble	fe2b4c30 <optarg@@GLIBC_2.4+0xfe262a88>
   3342c:	stmdbge	pc!, {r2, r3, r4, r5, r7, ip, sp}^	; <UNPREDICTABLE>
   33430:	orr	lr, sp, #1232	; 0x4d0
   33434:	rscslt	r0, fp, lr, asr #28
   33438:	ldr	r2, [r0]
   3343c:	mov	r3, r0
   33440:	rev	r2, r2
   33444:	str	r2, [r1]
   33448:	ldr	r2, [r3, #4]
   3344c:	mov	r0, r1
   33450:	rev	r2, r2
   33454:	str	r2, [r1, #4]
   33458:	ldr	r2, [r3, #8]
   3345c:	rev	r2, r2
   33460:	str	r2, [r1, #8]
   33464:	ldr	r2, [r3, #12]
   33468:	rev	r2, r2
   3346c:	str	r2, [r1, #12]
   33470:	ldr	r2, [r3, #16]
   33474:	rev	r2, r2
   33478:	str	r2, [r1, #16]
   3347c:	ldr	r2, [r3, #20]
   33480:	rev	r2, r2
   33484:	str	r2, [r1, #20]
   33488:	ldr	r2, [r3, #24]
   3348c:	rev	r2, r2
   33490:	str	r2, [r1, #24]
   33494:	ldr	r3, [r3, #28]
   33498:	rev	r3, r3
   3349c:	str	r3, [r1, #28]
   334a0:	bx	lr
   334a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   334a8:	sub	sp, sp, #116	; 0x74
   334ac:	ldr	r3, [r2, #32]
   334b0:	mov	lr, r2
   334b4:	str	r2, [sp, #108]	; 0x6c
   334b8:	bic	ip, r1, #3
   334bc:	ldr	r2, [r2, #36]	; 0x24
   334c0:	add	r3, r1, r3
   334c4:	add	ip, r0, ip
   334c8:	add	r4, lr, #16
   334cc:	cmp	r1, r3
   334d0:	addhi	r2, r2, #1
   334d4:	cmp	r0, ip
   334d8:	str	r3, [lr, #32]
   334dc:	str	r2, [lr, #36]	; 0x24
   334e0:	str	ip, [sp, #104]	; 0x68
   334e4:	ldr	sl, [lr]
   334e8:	ldmib	lr, {r5, fp}
   334ec:	ldr	r9, [lr, #12]
   334f0:	ldm	r4, {r4, r6, r7}
   334f4:	ldr	r3, [lr, #28]
   334f8:	bcs	35b60 <__assert_fail@plt+0x24874>
   334fc:	mov	r8, r5
   33500:	str	r0, [sp]
   33504:	str	r3, [sp, #100]	; 0x64
   33508:	str	r7, [sp, #96]	; 0x60
   3350c:	str	r6, [sp, #92]	; 0x5c
   33510:	str	r4, [sp, #88]	; 0x58
   33514:	str	r9, [sp, #84]	; 0x54
   33518:	str	fp, [sp, #80]	; 0x50
   3351c:	str	r5, [sp, #76]	; 0x4c
   33520:	str	sl, [sp, #72]	; 0x48
   33524:	ldr	r2, [sp]
   33528:	ldr	r0, [pc, #4088]	; 34528 <__assert_fail@plt+0x2323c>
   3352c:	ror	ip, sl, #20
   33530:	ldr	r1, [r2]
   33534:	ldr	r5, [r2, #16]
   33538:	rev	r1, r1
   3353c:	str	r1, [sp, #4]
   33540:	add	r0, r4, r0
   33544:	eor	r2, r7, r4
   33548:	rev	r1, r5
   3354c:	add	r0, r0, ip
   33550:	ldr	r5, [sp, #4]
   33554:	eor	r2, r2, r6
   33558:	mov	lr, r1
   3355c:	ror	r0, r0, #25
   33560:	eor	r1, sl, r8
   33564:	add	r2, r2, r5
   33568:	str	lr, [sp, #20]
   3356c:	eor	r1, r1, fp
   33570:	add	r2, r2, r0
   33574:	eor	lr, r5, lr
   33578:	add	lr, r1, lr
   3357c:	add	r1, r2, r3
   33580:	ldr	r2, [sp]
   33584:	eor	ip, ip, r0
   33588:	ror	r3, r1, #15
   3358c:	ldr	r5, [r2, #4]
   33590:	add	lr, lr, ip
   33594:	eor	r3, r3, r1, ror #23
   33598:	add	lr, lr, r9
   3359c:	eor	r1, r1, r3
   335a0:	ldr	r9, [r2, #20]
   335a4:	rev	r3, r5
   335a8:	str	r3, [sp, #8]
   335ac:	ldr	r0, [pc, #3960]	; 3452c <__assert_fail@plt+0x23240>
   335b0:	ror	ip, lr, #20
   335b4:	rev	r3, r9
   335b8:	ldr	r9, [sp, #8]
   335bc:	ror	r2, r6, #13
   335c0:	add	r0, ip, r0
   335c4:	mov	r6, r3
   335c8:	ror	r8, r8, #23
   335cc:	eor	r3, r2, r4
   335d0:	eor	r5, r8, sl
   335d4:	str	r6, [sp, #24]
   335d8:	add	r0, r0, r1
   335dc:	eor	r6, r9, r6
   335e0:	add	r7, r7, r9
   335e4:	eor	r5, r5, lr
   335e8:	add	fp, r6, fp
   335ec:	eor	r3, r3, r1
   335f0:	add	r3, r3, r7
   335f4:	ror	r0, r0, #25
   335f8:	add	r7, r5, fp
   335fc:	ldr	r5, [sp]
   33600:	eor	ip, ip, r0
   33604:	add	r0, r0, r3
   33608:	add	r7, ip, r7
   3360c:	ror	r3, r0, #15
   33610:	ldr	ip, [r5, #8]
   33614:	ldr	r9, [r5, #24]
   33618:	eor	r3, r3, r0, ror #23
   3361c:	ldr	r6, [pc, #3852]	; 34530 <__assert_fail@plt+0x23244>
   33620:	eor	r0, r0, r3
   33624:	ror	fp, r7, #20
   33628:	rev	r3, ip
   3362c:	ror	r5, sl, #23
   33630:	add	r6, fp, r6
   33634:	mov	sl, r3
   33638:	rev	r3, r9
   3363c:	mov	ip, r3
   33640:	add	r6, r6, r0
   33644:	str	ip, [sp, #28]
   33648:	eor	r9, lr, r5
   3364c:	eor	ip, sl, ip
   33650:	ror	r4, r4, #13
   33654:	eor	r3, r1, r4
   33658:	eor	r9, r9, r7
   3365c:	ror	r6, r6, #25
   33660:	add	r8, ip, r8
   33664:	add	r2, r2, sl
   33668:	add	r8, r9, r8
   3366c:	eor	ip, fp, r6
   33670:	eor	r3, r3, r0
   33674:	add	ip, ip, r8
   33678:	add	r3, r3, r2
   3367c:	ldr	r8, [sp]
   33680:	add	r3, r6, r3
   33684:	str	sl, [sp, #12]
   33688:	ldr	r6, [r8, #12]
   3368c:	ldr	r9, [r8, #28]
   33690:	ror	r2, r3, #15
   33694:	ldr	r8, [pc, #3736]	; 34534 <__assert_fail@plt+0x23248>
   33698:	ror	sl, ip, #20
   3369c:	eor	r2, r2, r3, ror #23
   336a0:	eor	r3, r3, r2
   336a4:	ror	r1, r1, #13
   336a8:	add	r8, sl, r8
   336ac:	rev	r2, r9
   336b0:	rev	fp, r6
   336b4:	mov	r9, r2
   336b8:	add	r8, r8, r3
   336bc:	eor	r2, r0, r1
   336c0:	add	r4, r4, fp
   336c4:	eor	r2, r2, r3
   336c8:	eor	r6, fp, r9
   336cc:	add	r2, r2, r4
   336d0:	ror	lr, lr, #23
   336d4:	ror	r8, r8, #25
   336d8:	str	r9, [sp, #32]
   336dc:	add	r5, r6, r5
   336e0:	eor	r9, r7, lr
   336e4:	eor	r6, sl, r8
   336e8:	add	r8, r8, r2
   336ec:	eor	r9, r9, ip
   336f0:	ldr	r4, [sp]
   336f4:	add	r5, r9, r5
   336f8:	ror	r2, r8, #15
   336fc:	add	r6, r6, r5
   33700:	eor	r2, r2, r8, ror #23
   33704:	eor	r2, r2, r8
   33708:	ldr	r4, [r4, #32]
   3370c:	ldr	r8, [pc, #3620]	; 34538 <__assert_fail@plt+0x2324c>
   33710:	ror	r9, r6, #20
   33714:	rev	sl, r4
   33718:	ror	r5, r0, #13
   3371c:	ldr	r4, [sp, #20]
   33720:	add	r8, r9, r8
   33724:	eor	r0, r3, r5
   33728:	ror	r7, r7, #23
   3372c:	add	r8, r8, r2
   33730:	eor	r0, r0, r2
   33734:	add	r1, r1, r4
   33738:	str	sl, [sp, #36]	; 0x24
   3373c:	eor	sl, r4, sl
   33740:	eor	r4, ip, r7
   33744:	add	lr, sl, lr
   33748:	add	r1, r0, r1
   3374c:	eor	sl, r4, r6
   33750:	ror	r8, r8, #25
   33754:	add	r1, r8, r1
   33758:	add	r4, sl, lr
   3375c:	eor	r8, r8, r9
   33760:	add	r4, r8, r4
   33764:	ldr	r8, [sp]
   33768:	ror	r0, r1, #15
   3376c:	ror	lr, r4, #20
   33770:	ldr	r9, [r8, #36]	; 0x24
   33774:	ldr	r8, [pc, #3520]	; 3453c <__assert_fail@plt+0x23250>
   33778:	eor	r0, r0, r1, ror #23
   3377c:	eor	r0, r0, r1
   33780:	rev	sl, r9
   33784:	ror	r3, r3, #13
   33788:	ldr	r9, [sp, #24]
   3378c:	add	r8, lr, r8
   33790:	eor	r1, r2, r3
   33794:	add	r8, r8, r0
   33798:	eor	r1, r1, r0
   3379c:	ror	ip, ip, #23
   337a0:	add	r5, r5, r9
   337a4:	ror	r8, r8, #25
   337a8:	str	sl, [sp, #40]	; 0x28
   337ac:	add	r5, r1, r5
   337b0:	eor	sl, r9, sl
   337b4:	eor	r9, r6, ip
   337b8:	add	r1, r8, r5
   337bc:	eor	r9, r9, r4
   337c0:	add	r7, sl, r7
   337c4:	eor	lr, lr, r8
   337c8:	ldr	r8, [sp]
   337cc:	add	r7, r9, r7
   337d0:	add	lr, lr, r7
   337d4:	ldr	r9, [r8, #40]	; 0x28
   337d8:	ror	r7, r1, #15
   337dc:	ldr	r8, [pc, #3420]	; 34540 <__assert_fail@plt+0x23254>
   337e0:	ror	r5, lr, #20
   337e4:	eor	r7, r7, r1, ror #23
   337e8:	eor	r1, r1, r7
   337ec:	ldr	sl, [sp, #28]
   337f0:	ror	r2, r2, #13
   337f4:	add	r8, r5, r8
   337f8:	eor	r7, r0, r2
   337fc:	rev	r9, r9
   33800:	ror	r6, r6, #23
   33804:	add	r8, r8, r1
   33808:	str	r9, [sp, #44]	; 0x2c
   3380c:	eor	r7, r7, r1
   33810:	add	r3, r3, sl
   33814:	eor	sl, sl, r9
   33818:	eor	r9, r4, r6
   3381c:	ror	r8, r8, #25
   33820:	eor	r9, r9, lr
   33824:	add	r3, r7, r3
   33828:	add	ip, sl, ip
   3382c:	ldr	r7, [sp]
   33830:	add	r3, r8, r3
   33834:	add	ip, r9, ip
   33838:	eor	r5, r5, r8
   3383c:	add	r5, r5, ip
   33840:	ldr	r9, [r7, #44]	; 0x2c
   33844:	ror	ip, r3, #15
   33848:	ldr	r7, [pc, #3316]	; 34544 <__assert_fail@plt+0x23258>
   3384c:	ror	r8, r5, #20
   33850:	eor	ip, ip, r3, ror #23
   33854:	eor	r3, r3, ip
   33858:	rev	sl, r9
   3385c:	ror	r0, r0, #13
   33860:	ldr	r9, [sp, #32]
   33864:	add	r7, r8, r7
   33868:	eor	ip, r1, r0
   3386c:	add	r7, r7, r3
   33870:	eor	ip, ip, r3
   33874:	ror	r4, r4, #23
   33878:	add	r2, r2, r9
   3387c:	str	sl, [sp, #48]	; 0x30
   33880:	add	r2, ip, r2
   33884:	eor	sl, r9, sl
   33888:	ror	r7, r7, #25
   3388c:	eor	r9, lr, r4
   33890:	add	r2, r7, r2
   33894:	eor	r9, r9, r5
   33898:	add	r6, sl, r6
   3389c:	eor	r7, r7, r8
   338a0:	ldr	r8, [sp]
   338a4:	add	r6, r9, r6
   338a8:	add	r7, r7, r6
   338ac:	ldr	r9, [r8, #48]	; 0x30
   338b0:	ror	ip, r2, #15
   338b4:	ldr	r8, [pc, #3212]	; 34548 <__assert_fail@plt+0x2325c>
   338b8:	ror	r6, r7, #20
   338bc:	eor	ip, ip, r2, ror #23
   338c0:	eor	ip, ip, r2
   338c4:	rev	sl, r9
   338c8:	ror	r1, r1, #13
   338cc:	ldr	r9, [sp, #36]	; 0x24
   338d0:	add	r8, r6, r8
   338d4:	eor	r2, r3, r1
   338d8:	ror	lr, lr, #23
   338dc:	add	r8, r8, ip
   338e0:	eor	r2, r2, ip
   338e4:	str	sl, [sp, #52]	; 0x34
   338e8:	add	r0, r0, r9
   338ec:	eor	sl, r9, sl
   338f0:	eor	r9, r5, lr
   338f4:	add	r4, sl, r4
   338f8:	eor	r9, r9, r7
   338fc:	add	r0, r2, r0
   33900:	ror	r8, r8, #25
   33904:	add	r2, r8, r0
   33908:	eor	r8, r8, r6
   3390c:	add	r0, r9, r4
   33910:	add	r0, r8, r0
   33914:	ldr	r8, [sp]
   33918:	ror	r6, r2, #15
   3391c:	ror	r4, r0, #20
   33920:	ldr	r9, [r8, #52]	; 0x34
   33924:	ldr	r8, [pc, #3104]	; 3454c <__assert_fail@plt+0x23260>
   33928:	eor	r6, r6, r2, ror #23
   3392c:	eor	r2, r2, r6
   33930:	ldr	sl, [sp, #40]	; 0x28
   33934:	ror	r3, r3, #13
   33938:	add	r8, r4, r8
   3393c:	eor	r6, ip, r3
   33940:	rev	r9, r9
   33944:	ror	r5, r5, #23
   33948:	add	r8, r8, r2
   3394c:	str	r9, [sp, #56]	; 0x38
   33950:	eor	r6, r6, r2
   33954:	add	r1, r1, sl
   33958:	eor	sl, sl, r9
   3395c:	eor	r9, r7, r5
   33960:	ror	r8, r8, #25
   33964:	eor	r9, r9, r0
   33968:	add	r1, r6, r1
   3396c:	add	lr, sl, lr
   33970:	ldr	r6, [sp]
   33974:	add	r1, r8, r1
   33978:	add	lr, r9, lr
   3397c:	eor	r4, r4, r8
   33980:	add	r4, r4, lr
   33984:	ldr	r9, [r6, #56]	; 0x38
   33988:	ror	lr, r1, #15
   3398c:	ldr	r6, [pc, #3004]	; 34550 <__assert_fail@plt+0x23264>
   33990:	ror	r8, r4, #20
   33994:	eor	lr, lr, r1, ror #23
   33998:	eor	r1, r1, lr
   3399c:	rev	sl, r9
   339a0:	ror	ip, ip, #13
   339a4:	ldr	r9, [sp, #44]	; 0x2c
   339a8:	add	r6, r8, r6
   339ac:	eor	lr, r2, ip
   339b0:	ror	r7, r7, #23
   339b4:	add	r6, r6, r1
   339b8:	eor	lr, lr, r1
   339bc:	str	sl, [sp, #60]	; 0x3c
   339c0:	add	r3, r3, r9
   339c4:	eor	sl, r9, sl
   339c8:	eor	r9, r0, r7
   339cc:	eor	r9, r9, r4
   339d0:	add	r3, lr, r3
   339d4:	ror	r6, r6, #25
   339d8:	add	r5, sl, r5
   339dc:	add	lr, r6, r3
   339e0:	add	r5, r9, r5
   339e4:	eor	r6, r6, r8
   339e8:	add	r6, r6, r5
   339ec:	ldr	r5, [sp]
   339f0:	ror	r3, lr, #15
   339f4:	ror	r8, r6, #20
   339f8:	ldr	r9, [r5, #60]	; 0x3c
   339fc:	ldr	r5, [pc, #2896]	; 34554 <__assert_fail@plt+0x23268>
   33a00:	eor	r3, r3, lr, ror #23
   33a04:	eor	lr, lr, r3
   33a08:	ldr	sl, [sp, #48]	; 0x30
   33a0c:	ror	r2, r2, #13
   33a10:	add	r5, r8, r5
   33a14:	eor	r3, r1, r2
   33a18:	add	r5, r5, lr
   33a1c:	rev	r9, r9
   33a20:	add	ip, ip, sl
   33a24:	ror	r0, r0, #23
   33a28:	eor	r3, r3, lr
   33a2c:	eor	sl, sl, r9
   33a30:	str	r9, [sp, #64]	; 0x40
   33a34:	add	r3, r3, ip
   33a38:	eor	r9, r4, r0
   33a3c:	ror	ip, r5, #25
   33a40:	add	r3, ip, r3
   33a44:	eor	r9, r9, r6
   33a48:	eor	r5, r8, ip
   33a4c:	add	r7, sl, r7
   33a50:	ldr	r8, [sp, #4]
   33a54:	ldr	ip, [sp, #32]
   33a58:	add	r7, r9, r7
   33a5c:	ldr	r9, [sp, #56]	; 0x38
   33a60:	eor	sl, r8, ip
   33a64:	ldr	r8, [sp, #44]	; 0x2c
   33a68:	add	r5, r5, r7
   33a6c:	eor	sl, sl, r9, ror #17
   33a70:	eor	r8, r8, fp, ror #25
   33a74:	ror	r7, r3, #15
   33a78:	eor	r8, r8, sl
   33a7c:	ldr	ip, [pc, #2772]	; 34558 <__assert_fail@plt+0x2326c>
   33a80:	ror	r9, r5, #20
   33a84:	eor	r7, r7, r3, ror #23
   33a88:	eor	r8, r8, sl, ror #17
   33a8c:	eor	r3, r3, r7
   33a90:	eor	r8, r8, sl, ror #9
   33a94:	ror	r1, r1, #13
   33a98:	ldr	sl, [sp, #52]	; 0x34
   33a9c:	add	ip, r9, ip
   33aa0:	eor	r7, lr, r1
   33aa4:	ror	r4, r4, #23
   33aa8:	add	ip, ip, r3
   33aac:	eor	r7, r7, r3
   33ab0:	add	r2, r2, sl
   33ab4:	str	r8, [sp, #4]
   33ab8:	eor	sl, r8, sl
   33abc:	eor	r8, r6, r4
   33ac0:	eor	r8, r8, r5
   33ac4:	add	r2, r7, r2
   33ac8:	ror	ip, ip, #25
   33acc:	add	r0, sl, r0
   33ad0:	add	r2, ip, r2
   33ad4:	add	r0, r8, r0
   33ad8:	ldr	r7, [sp, #36]	; 0x24
   33adc:	ldr	r8, [sp, #8]
   33ae0:	eor	ip, ip, r9
   33ae4:	add	ip, ip, r0
   33ae8:	ldr	r9, [sp, #20]
   33aec:	ldr	r0, [sp, #60]	; 0x3c
   33af0:	eor	sl, r8, r7
   33af4:	ldr	r8, [sp, #48]	; 0x30
   33af8:	eor	sl, sl, r0, ror #17
   33afc:	eor	r8, r8, r9, ror #25
   33b00:	ror	r7, r2, #15
   33b04:	eor	r8, r8, sl
   33b08:	ldr	r0, [pc, #2636]	; 3455c <__assert_fail@plt+0x23270>
   33b0c:	ror	r9, ip, #20
   33b10:	eor	r7, r7, r2, ror #23
   33b14:	eor	r8, r8, sl, ror #17
   33b18:	eor	r2, r2, r7
   33b1c:	eor	sl, r8, sl, ror #9
   33b20:	ror	lr, lr, #13
   33b24:	ldr	r8, [sp, #56]	; 0x38
   33b28:	add	r0, r9, r0
   33b2c:	eor	r7, r3, lr
   33b30:	ror	r6, r6, #23
   33b34:	add	r0, r0, r2
   33b38:	str	sl, [sp, #8]
   33b3c:	eor	r7, r7, r2
   33b40:	eor	sl, sl, r8
   33b44:	add	r1, r1, r8
   33b48:	eor	r8, r5, r6
   33b4c:	eor	r8, r8, ip
   33b50:	add	r1, r7, r1
   33b54:	ror	r0, r0, #25
   33b58:	add	r4, sl, r4
   33b5c:	add	r1, r0, r1
   33b60:	add	r4, r8, r4
   33b64:	ldr	r7, [sp, #40]	; 0x28
   33b68:	ldr	r8, [sp, #12]
   33b6c:	eor	r0, r0, r9
   33b70:	add	r0, r0, r4
   33b74:	ldr	r4, [sp, #64]	; 0x40
   33b78:	eor	sl, r8, r7
   33b7c:	ldr	r8, [sp, #24]
   33b80:	ldr	r9, [sp, #52]	; 0x34
   33b84:	eor	sl, sl, r4, ror #17
   33b88:	ror	r7, r1, #15
   33b8c:	ldr	r4, [pc, #2508]	; 34560 <__assert_fail@plt+0x23274>
   33b90:	eor	r8, r9, r8, ror #25
   33b94:	eor	r7, r7, r1, ror #23
   33b98:	ror	r9, r0, #20
   33b9c:	eor	r1, r1, r7
   33ba0:	eor	r8, r8, sl
   33ba4:	add	r4, r9, r4
   33ba8:	eor	r8, r8, sl, ror #17
   33bac:	add	r4, r4, r1
   33bb0:	str	r4, [sp, #16]
   33bb4:	ror	r3, r3, #13
   33bb8:	eor	r4, r8, sl, ror #9
   33bbc:	ldr	sl, [sp, #60]	; 0x3c
   33bc0:	eor	r7, r2, r3
   33bc4:	mov	r8, r4
   33bc8:	add	lr, lr, sl
   33bcc:	eor	r4, r7, r1
   33bd0:	add	r4, r4, lr
   33bd4:	ldr	lr, [sp, #16]
   33bd8:	ror	r5, r5, #23
   33bdc:	str	r8, [sp, #12]
   33be0:	ror	lr, lr, #25
   33be4:	add	r4, lr, r4
   33be8:	eor	lr, lr, r9
   33bec:	ldr	r9, [sp, #44]	; 0x2c
   33bf0:	eor	sl, r8, sl
   33bf4:	eor	r8, ip, r5
   33bf8:	eor	r8, r8, r0
   33bfc:	ldr	r7, [sp, #4]
   33c00:	add	r6, sl, r6
   33c04:	eor	sl, fp, r9
   33c08:	ldr	fp, [sp, #28]
   33c0c:	add	r6, r8, r6
   33c10:	ldr	r8, [sp, #56]	; 0x38
   33c14:	add	lr, lr, r6
   33c18:	eor	sl, sl, r7, ror #17
   33c1c:	eor	r9, r8, fp, ror #25
   33c20:	ror	r6, r4, #15
   33c24:	ldr	r7, [pc, #2360]	; 34564 <__assert_fail@plt+0x23278>
   33c28:	ror	fp, lr, #20
   33c2c:	eor	r6, r6, r4, ror #23
   33c30:	eor	r9, r9, sl
   33c34:	eor	r4, r4, r6
   33c38:	eor	r9, r9, sl, ror #17
   33c3c:	ldr	r6, [sp, #64]	; 0x40
   33c40:	add	r7, fp, r7
   33c44:	ror	ip, ip, #23
   33c48:	eor	r9, r9, sl, ror #9
   33c4c:	add	r7, r7, r4
   33c50:	str	r9, [sp, #16]
   33c54:	add	r3, r3, r6
   33c58:	eor	r9, r9, r6
   33c5c:	eor	r6, r0, ip
   33c60:	eor	r6, r6, lr
   33c64:	ror	r7, r7, #25
   33c68:	ror	r2, r2, #13
   33c6c:	add	r5, r9, r5
   33c70:	eor	r8, r1, r2
   33c74:	add	r5, r6, r5
   33c78:	eor	r6, fp, r7
   33c7c:	add	r6, r6, r5
   33c80:	eor	r8, r8, r4
   33c84:	ldr	r5, [sp, #20]
   33c88:	ldr	fp, [sp, #48]	; 0x30
   33c8c:	add	r3, r8, r3
   33c90:	add	r3, r7, r3
   33c94:	eor	r5, r5, fp
   33c98:	ldr	r7, [sp, #32]
   33c9c:	ldr	fp, [sp, #8]
   33ca0:	ldr	sl, [sp, #60]	; 0x3c
   33ca4:	ror	r9, r3, #15
   33ca8:	eor	r5, r5, fp, ror #17
   33cac:	eor	r7, sl, r7, ror #25
   33cb0:	eor	r7, r7, r5
   33cb4:	ldr	r8, [pc, #2312]	; 345c4 <__assert_fail@plt+0x232d8>
   33cb8:	ror	sl, r6, #20
   33cbc:	eor	r9, r9, r3, ror #23
   33cc0:	eor	r7, r7, r5, ror #17
   33cc4:	eor	r3, r3, r9
   33cc8:	ror	r0, r0, #23
   33ccc:	eor	r5, r7, r5, ror #9
   33cd0:	ldr	fp, [sp, #4]
   33cd4:	add	r8, sl, r8
   33cd8:	mov	r9, r5
   33cdc:	ror	r1, r1, #13
   33ce0:	orr	r5, lr, r0
   33ce4:	add	r8, r8, r3
   33ce8:	eor	r7, r4, r1
   33cec:	add	r2, fp, r2
   33cf0:	str	r9, [sp, #20]
   33cf4:	eor	fp, fp, r9
   33cf8:	and	r5, r5, r6
   33cfc:	and	r9, lr, r0
   33d00:	and	r7, r7, r3
   33d04:	add	fp, fp, ip
   33d08:	ror	r8, r8, #25
   33d0c:	orr	r5, r5, r9
   33d10:	add	r2, r2, r8
   33d14:	eor	ip, r7, r1
   33d18:	eor	r8, r8, sl
   33d1c:	add	r5, r5, fp
   33d20:	add	r5, r8, r5
   33d24:	add	ip, ip, r2
   33d28:	ldr	r8, [sp, #24]
   33d2c:	ldr	r7, [sp, #12]
   33d30:	ldr	r2, [sp, #52]	; 0x34
   33d34:	ror	sl, ip, #15
   33d38:	eor	r2, r8, r2
   33d3c:	ldr	r8, [sp, #36]	; 0x24
   33d40:	eor	r2, r2, r7, ror #17
   33d44:	ldr	r7, [sp, #64]	; 0x40
   33d48:	ror	r9, r5, #20
   33d4c:	eor	r8, r7, r8, ror #25
   33d50:	ldr	r7, [pc, #2160]	; 345c8 <__assert_fail@plt+0x232dc>
   33d54:	eor	sl, sl, ip, ror #23
   33d58:	eor	r8, r8, r2
   33d5c:	eor	ip, ip, sl
   33d60:	add	r7, r9, r7
   33d64:	eor	r8, r8, r2, ror #17
   33d68:	ror	lr, lr, #23
   33d6c:	ror	r4, r4, #13
   33d70:	eor	r2, r8, r2, ror #9
   33d74:	add	r7, r7, ip
   33d78:	ldr	r8, [sp, #8]
   33d7c:	mov	sl, r2
   33d80:	orr	fp, r6, lr
   33d84:	eor	r2, r3, r4
   33d88:	and	fp, fp, r5
   33d8c:	ror	r7, r7, #25
   33d90:	add	r1, r8, r1
   33d94:	str	sl, [sp, #24]
   33d98:	and	r2, r2, ip
   33d9c:	eor	sl, r8, sl
   33da0:	and	r8, r6, lr
   33da4:	orr	r8, fp, r8
   33da8:	eor	r2, r2, r4
   33dac:	add	r0, sl, r0
   33db0:	add	r1, r1, r7
   33db4:	add	r0, r8, r0
   33db8:	eor	r8, r9, r7
   33dbc:	add	r7, r2, r1
   33dc0:	ldr	r9, [sp, #56]	; 0x38
   33dc4:	ldr	r1, [sp, #28]
   33dc8:	add	r8, r8, r0
   33dcc:	eor	r2, r1, r9
   33dd0:	ldr	r1, [sp, #16]
   33dd4:	ldr	fp, [sp, #4]
   33dd8:	ror	sl, r7, #15
   33ddc:	eor	r2, r2, r1, ror #17
   33de0:	ldr	r1, [sp, #40]	; 0x28
   33de4:	ror	r0, r8, #20
   33de8:	eor	sl, sl, r7, ror #23
   33dec:	eor	r9, fp, r1, ror #25
   33df0:	eor	r9, r9, r2
   33df4:	ldr	r1, [pc, #2000]	; 345cc <__assert_fail@plt+0x232e0>
   33df8:	eor	r9, r9, r2, ror #17
   33dfc:	eor	r7, r7, sl
   33e00:	ror	r6, r6, #23
   33e04:	eor	r2, r9, r2, ror #9
   33e08:	add	r1, r0, r1
   33e0c:	ldr	r9, [sp, #12]
   33e10:	mov	sl, r2
   33e14:	orr	fp, r5, r6
   33e18:	add	r1, r1, r7
   33e1c:	str	sl, [sp, #28]
   33e20:	ror	r3, r3, #13
   33e24:	eor	sl, r9, sl
   33e28:	and	fp, fp, r8
   33e2c:	add	r4, r9, r4
   33e30:	and	r9, r5, r6
   33e34:	eor	r2, ip, r3
   33e38:	ror	r1, r1, #25
   33e3c:	orr	r9, fp, r9
   33e40:	add	lr, sl, lr
   33e44:	add	lr, r9, lr
   33e48:	ldr	sl, [sp, #60]	; 0x3c
   33e4c:	eor	r9, r0, r1
   33e50:	and	r2, r2, r7
   33e54:	ldr	r0, [sp, #32]
   33e58:	eor	r2, r2, r3
   33e5c:	add	r4, r4, r1
   33e60:	add	r1, r2, r4
   33e64:	eor	r2, r0, sl
   33e68:	ldr	r4, [sp, #44]	; 0x2c
   33e6c:	ldr	r0, [sp, #20]
   33e70:	add	r9, r9, lr
   33e74:	ldr	lr, [sp, #8]
   33e78:	eor	r2, r2, r0, ror #17
   33e7c:	eor	r4, lr, r4, ror #25
   33e80:	ror	sl, r1, #15
   33e84:	eor	r4, r4, r2
   33e88:	ldr	r0, [pc, #1856]	; 345d0 <__assert_fail@plt+0x232e4>
   33e8c:	ror	lr, r9, #20
   33e90:	eor	sl, sl, r1, ror #23
   33e94:	eor	r4, r4, r2, ror #17
   33e98:	eor	r1, r1, sl
   33e9c:	eor	r4, r4, r2, ror #9
   33ea0:	add	r0, lr, r0
   33ea4:	ror	r5, r5, #23
   33ea8:	ror	ip, ip, #13
   33eac:	mov	sl, r4
   33eb0:	add	r0, r0, r1
   33eb4:	ldr	r4, [sp, #16]
   33eb8:	orr	fp, r8, r5
   33ebc:	eor	r2, r7, ip
   33ec0:	str	sl, [sp, #32]
   33ec4:	and	fp, fp, r9
   33ec8:	eor	sl, r4, sl
   33ecc:	ror	r0, r0, #25
   33ed0:	add	r3, r4, r3
   33ed4:	and	r2, r2, r1
   33ed8:	and	r4, r8, r5
   33edc:	orr	r4, fp, r4
   33ee0:	eor	r2, r2, ip
   33ee4:	add	r6, sl, r6
   33ee8:	add	r3, r3, r0
   33eec:	add	r6, r4, r6
   33ef0:	eor	r4, lr, r0
   33ef4:	add	r0, r2, r3
   33ef8:	ldr	lr, [sp, #36]	; 0x24
   33efc:	ldr	r2, [sp, #24]
   33f00:	ldr	r3, [sp, #64]	; 0x40
   33f04:	add	r4, r4, r6
   33f08:	eor	r3, lr, r3
   33f0c:	ldr	r6, [sp, #48]	; 0x30
   33f10:	eor	r3, r3, r2, ror #17
   33f14:	ldr	r2, [sp, #12]
   33f18:	ror	sl, r0, #15
   33f1c:	eor	r6, r2, r6, ror #25
   33f20:	ldr	r2, [pc, #1708]	; 345d4 <__assert_fail@plt+0x232e8>
   33f24:	ror	lr, r4, #20
   33f28:	eor	sl, sl, r0, ror #23
   33f2c:	eor	r6, r6, r3
   33f30:	eor	r0, r0, sl
   33f34:	add	r2, lr, r2
   33f38:	eor	r6, r6, r3, ror #17
   33f3c:	ror	r7, r7, #13
   33f40:	eor	r3, r6, r3, ror #9
   33f44:	add	r2, r2, r0
   33f48:	ldr	r6, [sp, #20]
   33f4c:	ror	r8, r8, #23
   33f50:	mov	sl, r3
   33f54:	eor	r3, r1, r7
   33f58:	orr	fp, r9, r8
   33f5c:	ror	r2, r2, #25
   33f60:	add	ip, r6, ip
   33f64:	and	r3, r3, r0
   33f68:	and	fp, fp, r4
   33f6c:	eor	r3, r3, r7
   33f70:	str	sl, [sp, #36]	; 0x24
   33f74:	add	ip, ip, r2
   33f78:	eor	sl, r6, sl
   33f7c:	and	r6, r9, r8
   33f80:	orr	r6, fp, r6
   33f84:	eor	lr, lr, r2
   33f88:	ldr	fp, [sp, #4]
   33f8c:	add	r2, r3, ip
   33f90:	ldr	ip, [sp, #40]	; 0x28
   33f94:	add	r5, sl, r5
   33f98:	eor	r3, fp, ip
   33f9c:	ldr	ip, [sp, #28]
   33fa0:	add	r5, r6, r5
   33fa4:	add	r5, lr, r5
   33fa8:	ldr	lr, [sp, #52]	; 0x34
   33fac:	eor	r3, r3, ip, ror #17
   33fb0:	ldr	ip, [sp, #16]
   33fb4:	ror	sl, r2, #15
   33fb8:	eor	lr, ip, lr, ror #25
   33fbc:	eor	lr, lr, r3
   33fc0:	ldr	ip, [pc, #1552]	; 345d8 <__assert_fail@plt+0x232ec>
   33fc4:	ror	r6, r5, #20
   33fc8:	eor	sl, sl, r2, ror #23
   33fcc:	eor	lr, lr, r3, ror #17
   33fd0:	eor	r2, r2, sl
   33fd4:	ror	r9, r9, #23
   33fd8:	eor	r3, lr, r3, ror #9
   33fdc:	add	ip, r6, ip
   33fe0:	ldr	lr, [sp, #24]
   33fe4:	ror	r1, r1, #13
   33fe8:	mov	sl, r3
   33fec:	orr	fp, r4, r9
   33ff0:	add	ip, ip, r2
   33ff4:	eor	r3, r0, r1
   33ff8:	and	fp, fp, r5
   33ffc:	add	r7, lr, r7
   34000:	str	sl, [sp, #40]	; 0x28
   34004:	eor	sl, lr, sl
   34008:	and	lr, r4, r9
   3400c:	ror	ip, ip, #25
   34010:	orr	lr, fp, lr
   34014:	and	r3, r3, r2
   34018:	add	r8, sl, r8
   3401c:	eor	r3, r3, r1
   34020:	add	r8, lr, r8
   34024:	add	r7, r7, ip
   34028:	eor	lr, r6, ip
   3402c:	add	lr, lr, r8
   34030:	add	ip, r3, r7
   34034:	ldr	r6, [sp, #8]
   34038:	ldr	r3, [sp, #44]	; 0x2c
   3403c:	ldr	r8, [sp, #32]
   34040:	eor	r3, r6, r3
   34044:	ldr	r7, [sp, #20]
   34048:	eor	r3, r3, r8, ror #17
   3404c:	ldr	r8, [sp, #56]	; 0x38
   34050:	ror	r6, ip, #15
   34054:	ldr	sl, [pc, #1408]	; 345dc <__assert_fail@plt+0x232f0>
   34058:	eor	r7, r7, r8, ror #25
   3405c:	eor	r7, r7, r3
   34060:	ror	r8, lr, #20
   34064:	eor	r6, r6, ip, ror #23
   34068:	eor	r7, r7, r3, ror #17
   3406c:	eor	ip, ip, r6
   34070:	add	sl, r8, sl
   34074:	ror	r4, r4, #23
   34078:	eor	r3, r7, r3, ror #9
   3407c:	ldr	r7, [sp, #28]
   34080:	ror	r6, r0, #13
   34084:	orr	fp, r5, r4
   34088:	add	r0, sl, ip
   3408c:	mov	sl, r3
   34090:	and	fp, fp, lr
   34094:	add	r1, r7, r1
   34098:	str	sl, [sp, #44]	; 0x2c
   3409c:	eor	sl, r7, sl
   340a0:	and	r7, r5, r4
   340a4:	orr	r7, fp, r7
   340a8:	ror	r0, r0, #25
   340ac:	add	r9, sl, r9
   340b0:	eor	r3, r2, r6
   340b4:	add	r1, r1, r0
   340b8:	add	r9, r7, r9
   340bc:	eor	r0, r0, r8
   340c0:	add	r7, r0, r9
   340c4:	and	r3, r3, ip
   340c8:	ldr	r0, [sp, #12]
   340cc:	ldr	fp, [sp, #48]	; 0x30
   340d0:	eor	r3, r3, r6
   340d4:	add	r1, r3, r1
   340d8:	ldr	sl, [sp, #60]	; 0x3c
   340dc:	eor	r3, r0, fp
   340e0:	ldr	fp, [sp, #36]	; 0x24
   340e4:	ldr	r8, [sp, #24]
   340e8:	ror	r0, r1, #15
   340ec:	eor	r3, r3, fp, ror #17
   340f0:	eor	r9, r8, sl, ror #25
   340f4:	ldr	sl, [pc, #1252]	; 345e0 <__assert_fail@plt+0x232f4>
   340f8:	ror	r8, r7, #20
   340fc:	eor	r0, r0, r1, ror #23
   34100:	eor	r9, r9, r3
   34104:	eor	r0, r0, r1
   34108:	add	sl, r8, sl
   3410c:	eor	r9, r9, r3, ror #17
   34110:	ror	r1, r2, #13
   34114:	ror	r5, r5, #23
   34118:	add	r2, sl, r0
   3411c:	eor	r3, r9, r3, ror #9
   34120:	ldr	sl, [sp, #32]
   34124:	mov	r9, r3
   34128:	orr	fp, lr, r5
   3412c:	eor	r3, ip, r1
   34130:	str	r9, [sp, #48]	; 0x30
   34134:	and	fp, fp, r7
   34138:	add	r6, sl, r6
   3413c:	eor	sl, sl, r9
   34140:	and	r9, lr, r5
   34144:	ror	r2, r2, #25
   34148:	orr	r9, fp, r9
   3414c:	and	r3, r3, r0
   34150:	add	r4, sl, r4
   34154:	eor	r3, r3, r1
   34158:	eor	r8, r8, r2
   3415c:	add	r6, r6, r2
   34160:	add	r4, r9, r4
   34164:	add	r4, r8, r4
   34168:	add	r2, r3, r6
   3416c:	ldr	r8, [sp, #52]	; 0x34
   34170:	ldr	fp, [sp, #40]	; 0x28
   34174:	ldr	r3, [sp, #16]
   34178:	ldr	r9, [sp, #28]
   3417c:	eor	r3, r3, r8
   34180:	eor	r3, r3, fp, ror #17
   34184:	ldr	fp, [sp, #64]	; 0x40
   34188:	ror	r8, r2, #15
   3418c:	ldr	sl, [pc, #1104]	; 345e4 <__assert_fail@plt+0x232f8>
   34190:	eor	r9, r9, fp, ror #25
   34194:	eor	r9, r9, r3
   34198:	ror	r6, r4, #20
   3419c:	eor	r8, r8, r2, ror #23
   341a0:	eor	r9, r9, r3, ror #17
   341a4:	eor	r2, r2, r8
   341a8:	add	sl, r6, sl
   341ac:	ror	lr, lr, #23
   341b0:	eor	r3, r9, r3, ror #9
   341b4:	ldr	r9, [sp, #36]	; 0x24
   341b8:	ror	r8, ip, #13
   341bc:	orr	fp, r7, lr
   341c0:	add	ip, sl, r2
   341c4:	mov	sl, r3
   341c8:	str	sl, [sp, #52]	; 0x34
   341cc:	and	fp, fp, r4
   341d0:	eor	sl, r9, sl
   341d4:	add	r1, r9, r1
   341d8:	and	r9, r7, lr
   341dc:	orr	r9, fp, r9
   341e0:	ror	ip, ip, #25
   341e4:	add	r5, sl, r5
   341e8:	eor	r3, r0, r8
   341ec:	add	r1, r1, ip
   341f0:	add	r5, r9, r5
   341f4:	eor	ip, ip, r6
   341f8:	add	r5, ip, r5
   341fc:	ldr	r9, [sp, #56]	; 0x38
   34200:	ldr	ip, [sp, #20]
   34204:	ldr	r6, [sp, #44]	; 0x2c
   34208:	and	r3, r3, r2
   3420c:	eor	r3, r3, r8
   34210:	add	r1, r3, r1
   34214:	eor	r3, ip, r9
   34218:	ldr	r9, [sp, #4]
   3421c:	eor	r3, r3, r6, ror #17
   34220:	ldr	r6, [sp, #32]
   34224:	ror	ip, r1, #15
   34228:	eor	r6, r6, r9, ror #25
   3422c:	eor	r6, r6, r3
   34230:	ldr	sl, [pc, #816]	; 34568 <__assert_fail@plt+0x2327c>
   34234:	ror	r9, r5, #20
   34238:	eor	ip, ip, r1, ror #23
   3423c:	eor	r6, r6, r3, ror #17
   34240:	eor	r1, r1, ip
   34244:	add	sl, r9, sl
   34248:	ror	r7, r7, #23
   3424c:	eor	r3, r6, r3, ror #9
   34250:	ldr	r6, [sp, #40]	; 0x28
   34254:	ror	ip, r0, #13
   34258:	orr	fp, r4, r7
   3425c:	add	r0, sl, r1
   34260:	mov	sl, r3
   34264:	and	fp, fp, r5
   34268:	add	r8, r6, r8
   3426c:	str	sl, [sp, #68]	; 0x44
   34270:	eor	sl, r6, sl
   34274:	and	r6, r4, r7
   34278:	orr	r6, fp, r6
   3427c:	ror	r0, r0, #25
   34280:	add	lr, sl, lr
   34284:	eor	r3, r2, ip
   34288:	add	r8, r8, r0
   3428c:	add	lr, r6, lr
   34290:	eor	r0, r0, r9
   34294:	add	r6, r0, lr
   34298:	ldr	sl, [sp, #60]	; 0x3c
   3429c:	ldr	lr, [sp, #24]
   342a0:	and	r3, r3, r1
   342a4:	eor	r3, r3, ip
   342a8:	add	r8, r3, r8
   342ac:	eor	r3, lr, sl
   342b0:	ldr	lr, [sp, #48]	; 0x30
   342b4:	ldr	sl, [sp, #36]	; 0x24
   342b8:	ror	r0, r8, #15
   342bc:	eor	r3, r3, lr, ror #17
   342c0:	ldr	lr, [sp, #8]
   342c4:	ror	r9, r6, #20
   342c8:	eor	r0, r0, r8, ror #23
   342cc:	eor	lr, sl, lr, ror #25
   342d0:	ldr	sl, [pc, #660]	; 3456c <__assert_fail@plt+0x23280>
   342d4:	eor	lr, lr, r3
   342d8:	eor	r0, r0, r8
   342dc:	add	sl, r9, sl
   342e0:	eor	lr, lr, r3, ror #17
   342e4:	ror	r8, r2, #13
   342e8:	ror	r4, r4, #23
   342ec:	add	r2, sl, r0
   342f0:	eor	r3, lr, r3, ror #9
   342f4:	ldr	sl, [sp, #44]	; 0x2c
   342f8:	mov	lr, r3
   342fc:	orr	fp, r5, r4
   34300:	and	fp, fp, r6
   34304:	add	ip, sl, ip
   34308:	str	lr, [sp, #56]	; 0x38
   3430c:	eor	sl, sl, lr
   34310:	and	lr, r5, r4
   34314:	orr	lr, fp, lr
   34318:	ror	r2, r2, #25
   3431c:	add	r7, sl, r7
   34320:	eor	r3, r1, r8
   34324:	add	ip, ip, r2
   34328:	add	r7, lr, r7
   3432c:	eor	r2, r2, r9
   34330:	add	lr, r2, r7
   34334:	ldr	sl, [sp, #28]
   34338:	ldr	fp, [sp, #64]	; 0x40
   3433c:	and	r3, r3, r0
   34340:	ldr	r7, [sp, #52]	; 0x34
   34344:	eor	r3, r3, r8
   34348:	add	ip, r3, ip
   3434c:	eor	r3, sl, fp
   34350:	eor	r3, r3, r7, ror #17
   34354:	ldr	fp, [sp, #40]	; 0x28
   34358:	ldr	r7, [sp, #12]
   3435c:	ror	r2, ip, #15
   34360:	ldr	sl, [pc, #520]	; 34570 <__assert_fail@plt+0x23284>
   34364:	eor	r9, fp, r7, ror #25
   34368:	eor	r2, r2, ip, ror #23
   3436c:	ror	r7, lr, #20
   34370:	eor	r9, r9, r3
   34374:	eor	r2, r2, ip
   34378:	add	sl, r7, sl
   3437c:	eor	r9, r9, r3, ror #17
   34380:	ror	ip, r1, #13
   34384:	eor	fp, r9, r3, ror #9
   34388:	ror	r5, r5, #23
   3438c:	ldr	r9, [sp, #48]	; 0x30
   34390:	add	r1, sl, r2
   34394:	eor	r3, r0, ip
   34398:	mov	sl, fp
   3439c:	orr	fp, r6, r5
   343a0:	str	sl, [sp, #60]	; 0x3c
   343a4:	and	fp, fp, lr
   343a8:	eor	sl, r9, sl
   343ac:	ror	r1, r1, #25
   343b0:	add	r8, r9, r8
   343b4:	and	r3, r3, r2
   343b8:	and	r9, r6, r5
   343bc:	orr	r9, fp, r9
   343c0:	eor	r3, r3, ip
   343c4:	add	r4, sl, r4
   343c8:	add	r8, r8, r1
   343cc:	eor	r7, r7, r1
   343d0:	ldr	fp, [sp, #32]
   343d4:	add	r1, r3, r8
   343d8:	add	r4, r9, r4
   343dc:	ldr	r8, [sp, #68]	; 0x44
   343e0:	ldr	r9, [sp, #4]
   343e4:	add	r4, r7, r4
   343e8:	eor	r3, r9, fp
   343ec:	eor	r3, r3, r8, ror #17
   343f0:	ldr	r8, [sp, #16]
   343f4:	ldr	r9, [sp, #44]	; 0x2c
   343f8:	ror	r7, r1, #15
   343fc:	eor	r9, r9, r8, ror #25
   34400:	ldr	sl, [pc, #364]	; 34574 <__assert_fail@plt+0x23288>
   34404:	ror	r8, r4, #20
   34408:	eor	r7, r7, r1, ror #23
   3440c:	eor	r9, r9, r3
   34410:	eor	r1, r1, r7
   34414:	add	sl, r8, sl
   34418:	eor	r9, r9, r3, ror #17
   3441c:	ror	r7, r0, #13
   34420:	ror	r6, r6, #23
   34424:	add	r0, sl, r1
   34428:	eor	r3, r9, r3, ror #9
   3442c:	ldr	sl, [sp, #52]	; 0x34
   34430:	mov	r9, r3
   34434:	orr	fp, lr, r6
   34438:	eor	r3, r2, r7
   3443c:	str	r9, [sp, #64]	; 0x40
   34440:	and	fp, fp, r4
   34444:	ror	r0, r0, #25
   34448:	add	ip, sl, ip
   3444c:	and	r3, r3, r1
   34450:	eor	sl, sl, r9
   34454:	and	r9, lr, r6
   34458:	orr	r9, fp, r9
   3445c:	eor	r3, r3, r7
   34460:	add	r5, sl, r5
   34464:	add	ip, ip, r0
   34468:	eor	r8, r8, r0
   3446c:	add	r5, r9, r5
   34470:	add	r0, r3, ip
   34474:	ldr	r9, [sp, #36]	; 0x24
   34478:	ldr	r3, [sp, #8]
   3447c:	ldr	ip, [sp, #56]	; 0x38
   34480:	eor	r3, r3, r9
   34484:	add	r5, r8, r5
   34488:	eor	r3, r3, ip, ror #17
   3448c:	ldr	ip, [sp, #20]
   34490:	ldr	r8, [sp, #48]	; 0x30
   34494:	ror	fp, r0, #15
   34498:	eor	ip, r8, ip, ror #25
   3449c:	eor	ip, ip, r3
   344a0:	ldr	sl, [pc, #208]	; 34578 <__assert_fail@plt+0x2328c>
   344a4:	ror	r9, r5, #20
   344a8:	eor	r8, fp, r0, ror #23
   344ac:	eor	ip, ip, r3, ror #17
   344b0:	eor	r0, r0, r8
   344b4:	add	sl, r9, sl
   344b8:	ror	lr, lr, #23
   344bc:	eor	r3, ip, r3, ror #9
   344c0:	ldr	ip, [sp, #68]	; 0x44
   344c4:	ror	r8, r2, #13
   344c8:	mov	fp, r3
   344cc:	add	r2, sl, r0
   344d0:	orr	sl, r4, lr
   344d4:	eor	r3, r1, r8
   344d8:	add	r7, ip, r7
   344dc:	str	fp, [sp, #8]
   344e0:	eor	ip, ip, fp
   344e4:	and	sl, sl, r5
   344e8:	and	fp, r4, lr
   344ec:	orr	sl, sl, fp
   344f0:	ror	r2, r2, #25
   344f4:	and	r3, r3, r0
   344f8:	add	r6, ip, r6
   344fc:	add	r7, r7, r2
   34500:	add	r6, sl, r6
   34504:	eor	r2, r2, r9
   34508:	eor	r3, r3, r8
   3450c:	add	ip, r2, r6
   34510:	add	r3, r3, r7
   34514:	ldr	r2, [sp, #40]	; 0x28
   34518:	ldr	r7, [sp, #12]
   3451c:	ldr	r9, [sp, #24]
   34520:	eor	r2, r7, r2
   34524:	b	345e8 <__assert_fail@plt+0x232fc>
   34528:	stmibvc	ip, {r0, r3, r4, r8, sl, lr}^
   3452c:	vshll.u16	q4, d18, #8
   34530:	ldr	r1, [r1, -r5, ror #8]!
   34534:	cdpgt	8, 6, cr2, cr2, cr11, {6}
   34538:	stflse	f5, [r4], {151}	; 0x97
   3453c:	stmibcc	r8, {r0, r1, r2, r3, r5, r8, r9, sp, pc}
   34540:	tstvc	r1, #98566144	; 0x5e00000
   34544:			; <UNDEFINED> instruction: 0xe6228cbc
   34548:	mcrrgt	9, 7, r1, r5, cr9	; <UNPREDICTABLE>
   3454c:	stmls	sl, {r0, r1, r4, r5, r6, r7, r9, ip, sp}
   34550:	tstcc	r4, r7, ror #11
   34554:	eorvs	ip, r8, #210944	; 0x33800
   34558:	ldrbgt	r9, [r1], #-1948	; 0xfffff864
   3455c:	stmiahi	r3!, {r0, r3, r4, r5, r8, r9, sl, fp, sp}
   34560:	hvcne	26083	; 0x65e3
   34564:	addcs	fp, ip, #58880	; 0xe600
   34568:	ldrbtne	r0, [r5], #3899	; 0xf3b
   3456c:	stmibcs	sl!, {r1, r2, r4, r5, r6, r9, sl, fp, ip}^
   34570:	bicspl	r3, r4, #236, 24	; 0xec00
   34574:	sbfxge	r7, r8, #19, #9
   34578:	svcmi	0x0050f3b1
   3457c:	cdpls	7, 10, cr14, cr1, cr2, {3}
   34580:	stclcc	14, cr12, [r3, #-788]	; 0xfffffcec
   34584:	bvc	fe21bbb4 <optarg@@GLIBC_2.4+0xfe1c9a0c>
   34588:			; <UNDEFINED> instruction: 0xf50f3b14
   3458c:	b	7d1e38 <optarg@@GLIBC_2.4+0x77fc90>
   34590:	ldrtle	lr, [ip], #-3155	; 0xfffff3ad
   34594:	ldmdage	r9!, {r0, r1, r2, r5, r7, fp, ip, lr, pc}^
   34598:	rscspl	fp, r3, pc, asr #2
   3459c:			; <UNDEFINED> instruction: 0xa1e7629e
   345a0:	bicmi	ip, lr, #255852544	; 0xf400000
   345a4:			; <UNDEFINED> instruction: 0x879d8a7a
   345a8:	svceq	0x003b14f5
   345ac:	vsubne.f16	s5, s13, s21	; <UNPREDICTABLE>
   345b0:	stclcc	3, cr5, [ip], #848	; 0x350
   345b4:	ldmibvc	r8, {r3, r5, r7, r8, r9, sl, sp, pc}^
   345b8:	vcvt.u32.f32	q2, q0, #15
   345bc:	strb	r9, [r2, -r1, lsr #29]!
   345c0:	cdpgt	13, 12, cr3, cr5, cr3, {2}
   345c4:	vstrls	s14, [sl, #540]	; 0x21c
   345c8:	blcc	571a0c <optarg@@GLIBC_2.4+0x51f864>
   345cc:			; <UNDEFINED> instruction: 0x7629ea1e
   345d0:	cfldrd	mvd13, [r3], {60}	; 0x3c
   345d4:	stmiale	r7!, {r0, r3, r4, r5, r6, fp, sp, pc}
   345d8:	strdlt	r5, [pc, #-3]	; 345dd <__assert_fail@plt+0x232f1>
   345dc:	addsvs	sl, lr, #-1073741767	; 0xc0000039
   345e0:	ldrgt	r4, [sp, #-974]!	; 0xfffffc32
   345e4:	bhi	1ed6460 <optarg@@GLIBC_2.4+0x1e842b8>
   345e8:	ldr	r7, [sp, #60]	; 0x3c
   345ec:	ror	r6, r3, #15
   345f0:	ror	sl, ip, #20
   345f4:	eor	r2, r2, r7, ror #17
   345f8:	ldr	r7, [sp, #52]	; 0x34
   345fc:	eor	r6, r6, r3, ror #23
   34600:	eor	r9, r7, r9, ror #25
   34604:	eor	r9, r9, r2
   34608:	ldr	r7, [pc, #-148]	; 3457c <__assert_fail@plt+0x23290>
   3460c:	eor	r9, r9, r2, ror #17
   34610:	eor	r3, r3, r6
   34614:	ldr	fp, [sp, #56]	; 0x38
   34618:	ror	r6, r1, #13
   3461c:	add	r7, sl, r7
   34620:	eor	r1, r9, r2, ror #9
   34624:	str	r1, [sp, #4]
   34628:	add	r7, r7, r3
   3462c:	eor	r1, r0, r6
   34630:	add	r2, fp, r8
   34634:	ldr	r8, [sp, #4]
   34638:	ror	r7, r7, #25
   3463c:	and	r1, r1, r3
   34640:	eor	r8, fp, r8
   34644:	add	r2, r2, r7
   34648:	eor	r1, r1, r6
   3464c:	add	r1, r1, r2
   34650:	add	lr, r8, lr
   34654:	ldr	r2, [sp, #44]	; 0x2c
   34658:	ldr	r8, [sp, #16]
   3465c:	ror	r4, r4, #23
   34660:	eor	r2, r8, r2
   34664:	ldr	r8, [sp, #64]	; 0x40
   34668:	orr	r9, r5, r4
   3466c:	eor	r7, r7, sl
   34670:	ldr	sl, [sp, #28]
   34674:	eor	r2, r2, r8, ror #17
   34678:	and	fp, r5, r4
   3467c:	ldr	r8, [sp, #68]	; 0x44
   34680:	and	r9, r9, ip
   34684:	orr	r9, r9, fp
   34688:	add	lr, r9, lr
   3468c:	eor	r9, r8, sl, ror #25
   34690:	add	lr, r7, lr
   34694:	eor	r9, r9, r2
   34698:	ror	r7, r1, #15
   3469c:	eor	r9, r9, r2, ror #17
   346a0:	eor	r7, r7, r1, ror #23
   346a4:	eor	r1, r1, r7
   346a8:	ror	r8, r0, #13
   346ac:	ldr	r7, [pc, #-308]	; 34580 <__assert_fail@plt+0x23294>
   346b0:	eor	r0, r9, r2, ror #9
   346b4:	ror	sl, lr, #20
   346b8:	mov	r9, r0
   346bc:	ldr	r0, [sp, #60]	; 0x3c
   346c0:	ror	r5, r5, #23
   346c4:	add	r7, sl, r7
   346c8:	orr	r2, ip, r5
   346cc:	add	r7, r7, r1
   346d0:	add	r6, r0, r6
   346d4:	eor	r0, r0, r9
   346d8:	and	r2, r2, lr
   346dc:	str	r9, [sp, #12]
   346e0:	add	r4, r0, r4
   346e4:	eor	r9, r3, r8
   346e8:	and	r0, ip, r5
   346ec:	orr	r0, r2, r0
   346f0:	ror	r7, r7, #25
   346f4:	and	r9, r9, r1
   346f8:	add	r6, r6, r7
   346fc:	eor	r9, r9, r8
   34700:	eor	r7, r7, sl
   34704:	add	r4, r0, r4
   34708:	add	r4, r7, r4
   3470c:	add	r2, r9, r6
   34710:	ldr	r7, [sp, #20]
   34714:	ldr	r6, [sp, #48]	; 0x30
   34718:	ldr	r9, [sp, #8]
   3471c:	eor	r0, r7, r6
   34720:	ldr	fp, [sp, #32]
   34724:	eor	r0, r0, r9, ror #17
   34728:	ldr	r9, [sp, #56]	; 0x38
   3472c:	ror	r6, r2, #15
   34730:	eor	sl, r9, fp, ror #25
   34734:	eor	sl, sl, r0
   34738:	eor	sl, sl, r0, ror #17
   3473c:	eor	r6, r6, r2, ror #23
   34740:	ldr	r7, [pc, #-452]	; 34584 <__assert_fail@plt+0x23298>
   34744:	eor	r2, r2, r6
   34748:	ror	fp, r4, #20
   3474c:	ror	r9, r3, #13
   34750:	ldr	r6, [sp, #64]	; 0x40
   34754:	eor	r3, sl, r0, ror #9
   34758:	mov	sl, r3
   3475c:	ror	ip, ip, #23
   34760:	add	r7, fp, r7
   34764:	orr	r3, lr, ip
   34768:	add	r0, r6, r8
   3476c:	add	r7, r7, r2
   34770:	eor	r6, r6, sl
   34774:	str	sl, [sp, #16]
   34778:	and	r3, r3, r4
   3477c:	eor	sl, r1, r9
   34780:	add	r5, r6, r5
   34784:	and	r6, lr, ip
   34788:	orr	r6, r3, r6
   3478c:	ror	r7, r7, #25
   34790:	and	sl, sl, r2
   34794:	add	r0, r0, r7
   34798:	eor	sl, sl, r9
   3479c:	eor	r7, r7, fp
   347a0:	add	r5, r6, r5
   347a4:	add	r6, r7, r5
   347a8:	add	r3, sl, r0
   347ac:	ldr	r7, [sp, #52]	; 0x34
   347b0:	ldr	r0, [sp, #24]
   347b4:	ldr	fp, [sp, #60]	; 0x3c
   347b8:	eor	r8, r0, r7
   347bc:	ldr	r0, [sp, #4]
   347c0:	ror	r5, r3, #15
   347c4:	ldr	r7, [pc, #-580]	; 34588 <__assert_fail@plt+0x2329c>
   347c8:	eor	r0, r8, r0, ror #17
   347cc:	ldr	r8, [sp, #36]	; 0x24
   347d0:	eor	r5, r5, r3, ror #23
   347d4:	eor	r3, r3, r5
   347d8:	eor	sl, fp, r8, ror #25
   347dc:	eor	sl, sl, r0
   347e0:	eor	sl, sl, r0, ror #17
   347e4:	ror	fp, r6, #20
   347e8:	ror	r8, r1, #13
   347ec:	eor	r1, sl, r0, ror #9
   347f0:	ldr	r0, [sp, #8]
   347f4:	mov	r5, r1
   347f8:	ror	lr, lr, #23
   347fc:	add	r7, fp, r7
   34800:	orr	r1, r4, lr
   34804:	add	r7, r7, r3
   34808:	add	r9, r0, r9
   3480c:	eor	r0, r0, r5
   34810:	and	r1, r1, r6
   34814:	eor	sl, r2, r8
   34818:	add	ip, r0, ip
   3481c:	and	r0, r4, lr
   34820:	orr	r0, r1, r0
   34824:	ror	r7, r7, #25
   34828:	and	sl, sl, r3
   3482c:	add	r9, r9, r7
   34830:	eor	sl, sl, r8
   34834:	add	ip, r0, ip
   34838:	eor	r7, r7, fp
   3483c:	add	r1, sl, r9
   34840:	str	r5, [sp, #20]
   34844:	ldr	sl, [sp, #28]
   34848:	add	r5, r7, ip
   3484c:	ldr	ip, [sp, #68]	; 0x44
   34850:	ror	r7, r1, #15
   34854:	eor	r9, sl, ip
   34858:	ldr	sl, [sp, #12]
   3485c:	eor	r7, r7, r1, ror #23
   34860:	eor	r1, r1, r7
   34864:	eor	r0, r9, sl, ror #17
   34868:	ldr	sl, [sp, #40]	; 0x28
   3486c:	ldr	r9, [sp, #64]	; 0x40
   34870:	ror	r7, r2, #13
   34874:	eor	r9, r9, sl, ror #25
   34878:	eor	r9, r9, r0
   3487c:	eor	r9, r9, r0, ror #17
   34880:	eor	r2, r9, r0, ror #9
   34884:	ldr	r0, [sp, #4]
   34888:	mov	r9, r2
   3488c:	ror	r4, r4, #23
   34890:	orr	r2, r6, r4
   34894:	eor	fp, r3, r7
   34898:	add	r8, r0, r8
   3489c:	eor	r0, r0, r9
   348a0:	and	fp, fp, r1
   348a4:	and	r2, r2, r5
   348a8:	add	lr, r0, lr
   348ac:	ldr	ip, [pc, #-808]	; 3458c <__assert_fail@plt+0x232a0>
   348b0:	and	r0, r6, r4
   348b4:	ror	sl, r5, #20
   348b8:	orr	r2, r2, r0
   348bc:	str	r9, [sp, #24]
   348c0:	ldr	r0, [sp, #56]	; 0x38
   348c4:	eor	r9, fp, r7
   348c8:	ldr	fp, [sp, #32]
   348cc:	add	ip, sl, ip
   348d0:	add	ip, ip, r1
   348d4:	eor	r0, fp, r0
   348d8:	ldr	fp, [sp, #16]
   348dc:	ror	ip, ip, #25
   348e0:	add	r8, r8, ip
   348e4:	eor	r0, r0, fp, ror #17
   348e8:	ldr	fp, [sp, #44]	; 0x2c
   348ec:	add	r9, r9, r8
   348f0:	ldr	r8, [sp, #8]
   348f4:	eor	ip, ip, sl
   348f8:	add	lr, r2, lr
   348fc:	eor	r8, r8, fp, ror #25
   34900:	add	lr, ip, lr
   34904:	ror	r2, r9, #15
   34908:	eor	r8, r8, r0
   3490c:	eor	r8, r8, r0, ror #17
   34910:	eor	r2, r2, r9, ror #23
   34914:	ldr	ip, [pc, #-908]	; 34590 <__assert_fail@plt+0x232a4>
   34918:	eor	r2, r2, r9
   3491c:	ror	sl, lr, #20
   34920:	ror	r9, r3, #13
   34924:	eor	r3, r8, r0, ror #9
   34928:	ldr	r8, [sp, #12]
   3492c:	mov	fp, r3
   34930:	ror	r6, r6, #23
   34934:	add	ip, sl, ip
   34938:	eor	r0, r8, fp
   3493c:	orr	r3, r5, r6
   34940:	add	ip, ip, r2
   34944:	add	r7, r8, r7
   34948:	and	r3, r3, lr
   3494c:	eor	r8, r1, r9
   34950:	add	r4, r0, r4
   34954:	and	r0, r5, r6
   34958:	ror	ip, ip, #25
   3495c:	orr	r3, r3, r0
   34960:	and	r8, r8, r2
   34964:	eor	r8, r8, r9
   34968:	eor	sl, sl, ip
   3496c:	add	r7, r7, ip
   34970:	add	r4, r3, r4
   34974:	add	ip, r8, r7
   34978:	add	r4, sl, r4
   3497c:	ldr	r3, [sp, #60]	; 0x3c
   34980:	ldr	sl, [sp, #20]
   34984:	ldr	r8, [sp, #36]	; 0x24
   34988:	str	fp, [sp, #28]
   3498c:	eor	r0, r8, r3
   34990:	eor	r0, r0, sl, ror #17
   34994:	ldr	sl, [sp, #4]
   34998:	ldr	r8, [sp, #48]	; 0x30
   3499c:	ror	r3, ip, #15
   349a0:	eor	r3, r3, ip, ror #23
   349a4:	eor	sl, sl, r8, ror #25
   349a8:	eor	sl, sl, r0
   349ac:	eor	sl, sl, r0, ror #17
   349b0:	ldr	r7, [pc, #-1060]	; 34594 <__assert_fail@plt+0x232a8>
   349b4:	eor	r3, r3, ip
   349b8:	ror	fp, r4, #20
   349bc:	ror	r8, r1, #13
   349c0:	ldr	ip, [sp, #16]
   349c4:	eor	r1, sl, r0, ror #9
   349c8:	ror	r5, r5, #23
   349cc:	mov	r0, r1
   349d0:	add	r7, fp, r7
   349d4:	str	r0, [sp, #32]
   349d8:	orr	r1, lr, r5
   349dc:	eor	r0, ip, r0
   349e0:	add	r7, r7, r3
   349e4:	and	r1, r1, r4
   349e8:	eor	sl, r2, r8
   349ec:	add	r6, r0, r6
   349f0:	and	r0, lr, r5
   349f4:	orr	r0, r1, r0
   349f8:	add	r9, ip, r9
   349fc:	ror	r7, r7, #25
   34a00:	and	sl, sl, r3
   34a04:	add	r9, r9, r7
   34a08:	eor	sl, sl, r8
   34a0c:	add	r6, r0, r6
   34a10:	eor	r7, r7, fp
   34a14:	add	ip, r7, r6
   34a18:	add	r1, sl, r9
   34a1c:	ldr	r6, [sp, #64]	; 0x40
   34a20:	ldr	sl, [sp, #40]	; 0x28
   34a24:	ldr	r9, [sp, #24]
   34a28:	ldr	r7, [sp, #52]	; 0x34
   34a2c:	eor	sl, sl, r6
   34a30:	eor	sl, sl, r9, ror #17
   34a34:	ldr	r9, [sp, #12]
   34a38:	ror	r6, r1, #15
   34a3c:	eor	r9, r9, r7, ror #25
   34a40:	eor	r9, r9, sl
   34a44:	eor	r9, r9, sl, ror #17
   34a48:	eor	r6, r6, r1, ror #23
   34a4c:	ldr	r0, [pc, #-1212]	; 34598 <__assert_fail@plt+0x232ac>
   34a50:	eor	r1, r1, r6
   34a54:	ror	fp, ip, #20
   34a58:	ror	r6, lr, #23
   34a5c:	ror	r7, r2, #13
   34a60:	ldr	lr, [sp, #20]
   34a64:	eor	r2, r9, sl, ror #9
   34a68:	mov	sl, r2
   34a6c:	add	r0, fp, r0
   34a70:	orr	r2, r4, r6
   34a74:	add	r0, r0, r1
   34a78:	add	r8, lr, r8
   34a7c:	eor	lr, lr, sl
   34a80:	and	r2, r2, ip
   34a84:	add	r5, lr, r5
   34a88:	and	lr, r4, r6
   34a8c:	orr	lr, r2, lr
   34a90:	ror	r0, r0, #25
   34a94:	add	r8, r8, r0
   34a98:	add	r5, lr, r5
   34a9c:	eor	r0, r0, fp
   34aa0:	ldr	lr, [sp, #8]
   34aa4:	ldr	fp, [sp, #44]	; 0x2c
   34aa8:	eor	r9, r3, r7
   34aac:	eor	lr, fp, lr
   34ab0:	ldr	fp, [sp, #28]
   34ab4:	and	r9, r9, r1
   34ab8:	str	sl, [sp, #36]	; 0x24
   34abc:	eor	lr, lr, fp, ror #17
   34ac0:	ldr	fp, [sp, #68]	; 0x44
   34ac4:	eor	r9, r9, r7
   34ac8:	ldr	sl, [sp, #16]
   34acc:	add	r2, r9, r8
   34ad0:	eor	r9, sl, fp, ror #25
   34ad4:	add	r5, r0, r5
   34ad8:	ror	r8, r2, #15
   34adc:	eor	r9, r9, lr
   34ae0:	eor	r9, r9, lr, ror #17
   34ae4:	eor	r8, r8, r2, ror #23
   34ae8:	ldr	r0, [pc, #-1364]	; 3459c <__assert_fail@plt+0x232b0>
   34aec:	eor	r2, r2, r8
   34af0:	ror	sl, r5, #20
   34af4:	ror	r8, r3, #13
   34af8:	eor	r3, r9, lr, ror #9
   34afc:	ldr	r9, [sp, #24]
   34b00:	ror	r4, r4, #23
   34b04:	mov	lr, r3
   34b08:	add	r0, sl, r0
   34b0c:	orr	r3, ip, r4
   34b10:	add	r0, r0, r2
   34b14:	str	lr, [sp, #40]	; 0x28
   34b18:	eor	lr, r9, lr
   34b1c:	and	r3, r3, r5
   34b20:	add	lr, lr, r6
   34b24:	and	r6, ip, r4
   34b28:	orr	r3, r3, r6
   34b2c:	add	r7, r9, r7
   34b30:	ror	r0, r0, #25
   34b34:	eor	r9, r1, r8
   34b38:	add	r7, r7, r0
   34b3c:	add	lr, r3, lr
   34b40:	eor	r0, r0, sl
   34b44:	add	lr, r0, lr
   34b48:	ldr	r3, [sp, #48]	; 0x30
   34b4c:	ldr	sl, [sp, #4]
   34b50:	and	r9, r9, r2
   34b54:	ldr	r0, [sp, #32]
   34b58:	eor	r9, r9, r8
   34b5c:	add	r7, r9, r7
   34b60:	eor	r9, r3, sl
   34b64:	eor	r0, r9, r0, ror #17
   34b68:	ldr	r9, [sp, #56]	; 0x38
   34b6c:	ldr	sl, [sp, #20]
   34b70:	ror	r3, r7, #15
   34b74:	eor	r9, sl, r9, ror #25
   34b78:	eor	r9, r9, r0
   34b7c:	ldr	r6, [pc, #-1508]	; 345a0 <__assert_fail@plt+0x232b4>
   34b80:	ror	sl, lr, #20
   34b84:	eor	r9, r9, r0, ror #17
   34b88:	eor	r3, r3, r7, ror #23
   34b8c:	eor	r3, r3, r7
   34b90:	add	r6, sl, r6
   34b94:	ror	r7, r1, #13
   34b98:	eor	r1, r9, r0, ror #9
   34b9c:	ldr	r0, [sp, #28]
   34ba0:	mov	r9, r1
   34ba4:	add	r6, r6, r3
   34ba8:	ror	ip, ip, #23
   34bac:	add	r8, r0, r8
   34bb0:	str	r9, [sp, #44]	; 0x2c
   34bb4:	eor	r0, r0, r9
   34bb8:	eor	r9, r2, r7
   34bbc:	orr	r1, r5, ip
   34bc0:	ror	r6, r6, #25
   34bc4:	and	r9, r9, r3
   34bc8:	and	r1, r1, lr
   34bcc:	add	r8, r8, r6
   34bd0:	eor	r9, r9, r7
   34bd4:	add	r4, r0, r4
   34bd8:	and	r0, r5, ip
   34bdc:	orr	r0, r1, r0
   34be0:	eor	r6, r6, sl
   34be4:	add	r1, r9, r8
   34be8:	ldr	sl, [sp, #52]	; 0x34
   34bec:	ldr	r8, [sp, #12]
   34bf0:	add	r4, r0, r4
   34bf4:	eor	r9, sl, r8
   34bf8:	ldr	sl, [sp, #36]	; 0x24
   34bfc:	add	r4, r6, r4
   34c00:	ror	r8, r1, #15
   34c04:	eor	r0, r9, sl, ror #17
   34c08:	ldr	sl, [sp, #60]	; 0x3c
   34c0c:	ldr	r9, [sp, #24]
   34c10:	ldr	r6, [pc, #-1652]	; 345a4 <__assert_fail@plt+0x232b8>
   34c14:	eor	r9, r9, sl, ror #25
   34c18:	eor	r9, r9, r0
   34c1c:	ror	sl, r4, #20
   34c20:	eor	r9, r9, r0, ror #17
   34c24:	eor	r8, r8, r1, ror #23
   34c28:	eor	r1, r1, r8
   34c2c:	add	r6, sl, r6
   34c30:	ror	r8, r2, #13
   34c34:	eor	r2, r9, r0, ror #9
   34c38:	ldr	r0, [sp, #32]
   34c3c:	mov	r9, r2
   34c40:	add	r6, r6, r1
   34c44:	ror	r5, r5, #23
   34c48:	add	r7, r0, r7
   34c4c:	str	r9, [sp, #48]	; 0x30
   34c50:	eor	r0, r0, r9
   34c54:	eor	r9, r3, r8
   34c58:	orr	r2, lr, r5
   34c5c:	ror	r6, r6, #25
   34c60:	and	r9, r9, r1
   34c64:	and	r2, r2, r4
   34c68:	add	r7, r7, r6
   34c6c:	eor	r9, r9, r8
   34c70:	add	ip, r0, ip
   34c74:	and	r0, lr, r5
   34c78:	orr	r0, r2, r0
   34c7c:	add	r2, r9, r7
   34c80:	ldr	r7, [sp, #16]
   34c84:	eor	r6, r6, sl
   34c88:	add	ip, r0, ip
   34c8c:	add	ip, r6, ip
   34c90:	eor	r6, fp, r7
   34c94:	ldr	fp, [sp, #40]	; 0x28
   34c98:	ror	r9, r2, #15
   34c9c:	ldr	r7, [pc, #-1788]	; 345a8 <__assert_fail@plt+0x232bc>
   34ca0:	eor	r0, r6, fp, ror #17
   34ca4:	ldr	fp, [sp, #64]	; 0x40
   34ca8:	ldr	r6, [sp, #28]
   34cac:	ror	lr, lr, #23
   34cb0:	eor	sl, r6, fp, ror #25
   34cb4:	eor	sl, sl, r0
   34cb8:	ror	fp, ip, #20
   34cbc:	eor	r6, r9, r2, ror #23
   34cc0:	eor	sl, sl, r0, ror #17
   34cc4:	eor	r2, r2, r6
   34cc8:	ror	r9, r3, #13
   34ccc:	ldr	r6, [sp, #36]	; 0x24
   34cd0:	eor	r3, sl, r0, ror #9
   34cd4:	add	r7, fp, r7
   34cd8:	mov	r0, r3
   34cdc:	add	r7, r7, r2
   34ce0:	orr	r3, r4, lr
   34ce4:	str	r0, [sp, #52]	; 0x34
   34ce8:	add	r8, r6, r8
   34cec:	eor	r0, r6, r0
   34cf0:	and	r3, r3, ip
   34cf4:	and	r6, r4, lr
   34cf8:	orr	r3, r3, r6
   34cfc:	ror	r7, r7, #25
   34d00:	add	r5, r0, r5
   34d04:	add	r5, r3, r5
   34d08:	add	r8, r8, r7
   34d0c:	eor	r7, r7, fp
   34d10:	add	r6, r7, r5
   34d14:	ldr	r0, [sp, #56]	; 0x38
   34d18:	ldr	r3, [sp, #20]
   34d1c:	ldr	r7, [sp, #44]	; 0x2c
   34d20:	eor	sl, r1, r9
   34d24:	eor	r0, r0, r3
   34d28:	eor	r0, r0, r7, ror #17
   34d2c:	and	sl, sl, r2
   34d30:	ldr	r7, [sp, #8]
   34d34:	eor	sl, sl, r9
   34d38:	ldr	fp, [sp, #32]
   34d3c:	add	r8, sl, r8
   34d40:	eor	r7, fp, r7, ror #25
   34d44:	ror	r3, r8, #15
   34d48:	eor	r7, r7, r0
   34d4c:	eor	r7, r7, r0, ror #17
   34d50:	eor	r3, r3, r8, ror #23
   34d54:	ldr	r5, [pc, #-1968]	; 345ac <__assert_fail@plt+0x232c0>
   34d58:	eor	r3, r3, r8
   34d5c:	ror	sl, r6, #20
   34d60:	ror	r8, r1, #13
   34d64:	eor	r1, r7, r0, ror #9
   34d68:	ldr	r7, [sp, #40]	; 0x28
   34d6c:	ror	r4, r4, #23
   34d70:	mov	r0, r1
   34d74:	add	r5, sl, r5
   34d78:	orr	r1, ip, r4
   34d7c:	str	r0, [sp, #56]	; 0x38
   34d80:	add	r5, r5, r3
   34d84:	eor	r0, r7, r0
   34d88:	and	r1, r1, r6
   34d8c:	add	r9, r7, r9
   34d90:	add	lr, r0, lr
   34d94:	eor	r7, r2, r8
   34d98:	and	r0, ip, r4
   34d9c:	orr	r0, r1, r0
   34da0:	ror	r5, r5, #25
   34da4:	and	r7, r7, r3
   34da8:	add	r9, r9, r5
   34dac:	eor	r7, r7, r8
   34db0:	eor	r5, r5, sl
   34db4:	add	lr, r0, lr
   34db8:	add	lr, r5, lr
   34dbc:	add	r1, r7, r9
   34dc0:	ldr	sl, [sp, #60]	; 0x3c
   34dc4:	ldr	r9, [sp, #24]
   34dc8:	ldr	r5, [sp, #48]	; 0x30
   34dcc:	eor	r9, sl, r9
   34dd0:	ldr	sl, [sp, #4]
   34dd4:	eor	r5, r9, r5, ror #17
   34dd8:	ldr	r9, [sp, #36]	; 0x24
   34ddc:	ror	r7, r1, #15
   34de0:	eor	r9, r9, sl, ror #25
   34de4:	eor	r9, r9, r5
   34de8:	eor	r9, r9, r5, ror #17
   34dec:	eor	r7, r7, r1, ror #23
   34df0:	ldr	r0, [pc, #-2120]	; 345b0 <__assert_fail@plt+0x232c4>
   34df4:	eor	r1, r1, r7
   34df8:	ror	sl, lr, #20
   34dfc:	ror	r7, r2, #13
   34e00:	eor	r2, r9, r5, ror #9
   34e04:	ldr	r5, [sp, #44]	; 0x2c
   34e08:	mov	r9, r2
   34e0c:	ror	ip, ip, #23
   34e10:	add	r0, sl, r0
   34e14:	orr	r2, r6, ip
   34e18:	add	r0, r0, r1
   34e1c:	add	r8, r5, r8
   34e20:	eor	r5, r5, r9
   34e24:	and	r2, r2, lr
   34e28:	add	r4, r5, r4
   34e2c:	and	r5, r6, ip
   34e30:	orr	r5, r2, r5
   34e34:	ror	r0, r0, #25
   34e38:	add	r8, r8, r0
   34e3c:	str	r9, [sp, #60]	; 0x3c
   34e40:	eor	r0, r0, sl
   34e44:	eor	r9, r3, r7
   34e48:	add	r4, r5, r4
   34e4c:	add	r4, r0, r4
   34e50:	ldr	fp, [sp, #64]	; 0x40
   34e54:	ldr	r0, [sp, #28]
   34e58:	and	r9, r9, r1
   34e5c:	eor	r9, r9, r7
   34e60:	add	r2, r9, r8
   34e64:	eor	r9, fp, r0
   34e68:	ldr	fp, [sp, #52]	; 0x34
   34e6c:	ldr	r8, [sp, #12]
   34e70:	ror	sl, r2, #15
   34e74:	eor	r0, r9, fp, ror #17
   34e78:	ldr	fp, [sp, #40]	; 0x28
   34e7c:	ldr	r5, [pc, #-2256]	; 345b4 <__assert_fail@plt+0x232c8>
   34e80:	eor	r8, fp, r8, ror #25
   34e84:	eor	r8, r8, r0
   34e88:	eor	r9, sl, r2, ror #23
   34e8c:	eor	r8, r8, r0, ror #17
   34e90:	ror	sl, r4, #20
   34e94:	eor	r2, r2, r9
   34e98:	ldr	fp, [sp, #48]	; 0x30
   34e9c:	ror	r9, r3, #13
   34ea0:	add	r5, sl, r5
   34ea4:	eor	r3, r8, r0, ror #9
   34ea8:	mov	r8, r3
   34eac:	add	r5, r5, r2
   34eb0:	eor	r0, fp, r8
   34eb4:	ror	r6, r6, #23
   34eb8:	str	r8, [sp, #64]	; 0x40
   34ebc:	eor	r8, r1, r9
   34ec0:	orr	r3, lr, r6
   34ec4:	ror	r5, r5, #25
   34ec8:	add	r7, fp, r7
   34ecc:	and	r8, r8, r2
   34ed0:	eor	r8, r8, r9
   34ed4:	and	r3, r3, r4
   34ed8:	add	ip, r0, ip
   34edc:	add	r7, r7, r5
   34ee0:	and	r0, lr, r6
   34ee4:	orr	r3, r3, r0
   34ee8:	eor	sl, sl, r5
   34eec:	ldr	fp, [sp, #32]
   34ef0:	add	r5, r8, r7
   34ef4:	ldr	r7, [sp, #8]
   34ef8:	add	ip, r3, ip
   34efc:	add	ip, sl, ip
   34f00:	eor	r7, r7, fp
   34f04:	ldr	sl, [sp, #56]	; 0x38
   34f08:	ldr	fp, [sp, #16]
   34f0c:	ldr	r8, [sp, #44]	; 0x2c
   34f10:	eor	r7, r7, sl, ror #17
   34f14:	eor	sl, r8, fp, ror #25
   34f18:	ror	r3, r5, #15
   34f1c:	eor	sl, sl, r7
   34f20:	eor	sl, sl, r7, ror #17
   34f24:	eor	r3, r3, r5, ror #23
   34f28:	ldr	r0, [pc, #-2424]	; 345b8 <__assert_fail@plt+0x232cc>
   34f2c:	eor	r3, r3, r5
   34f30:	ror	fp, ip, #20
   34f34:	ror	r5, lr, #23
   34f38:	ror	r8, r1, #13
   34f3c:	ldr	lr, [sp, #52]	; 0x34
   34f40:	eor	r1, sl, r7, ror #9
   34f44:	mov	r7, r1
   34f48:	add	r0, fp, r0
   34f4c:	orr	r1, r4, r5
   34f50:	add	r0, r0, r3
   34f54:	add	r9, lr, r9
   34f58:	eor	lr, lr, r7
   34f5c:	and	r1, r1, ip
   34f60:	add	r6, lr, r6
   34f64:	and	lr, r4, r5
   34f68:	str	r7, [sp, #8]
   34f6c:	orr	lr, r1, lr
   34f70:	eor	r7, r2, r8
   34f74:	ror	r0, r0, #25
   34f78:	and	r7, r7, r3
   34f7c:	add	r9, r9, r0
   34f80:	add	r6, lr, r6
   34f84:	eor	r0, r0, fp
   34f88:	add	lr, r0, r6
   34f8c:	ldr	sl, [sp, #4]
   34f90:	eor	r1, r7, r8
   34f94:	ldr	r6, [sp, #60]	; 0x3c
   34f98:	ldr	r7, [sp, #36]	; 0x24
   34f9c:	add	r1, r1, r9
   34fa0:	eor	r9, sl, r7
   34fa4:	eor	sl, r9, r6, ror #17
   34fa8:	ldr	r9, [sp, #20]
   34fac:	ldr	r6, [sp, #48]	; 0x30
   34fb0:	ror	r7, r1, #15
   34fb4:	eor	r6, r6, r9, ror #25
   34fb8:	eor	r6, r6, sl
   34fbc:	ldr	r0, [pc, #-2568]	; 345bc <__assert_fail@plt+0x232d0>
   34fc0:	ror	r9, lr, #20
   34fc4:	eor	r6, r6, sl, ror #17
   34fc8:	eor	r7, r7, r1, ror #23
   34fcc:	eor	r1, r1, r7
   34fd0:	ror	fp, r2, #13
   34fd4:	add	r0, r9, r0
   34fd8:	eor	r2, r6, sl, ror #9
   34fdc:	ldr	sl, [sp, #56]	; 0x38
   34fe0:	mov	r6, r2
   34fe4:	add	r0, r0, r1
   34fe8:	str	r6, [sp, #4]
   34fec:	add	r8, sl, r8
   34ff0:	eor	r6, sl, r6
   34ff4:	eor	sl, r3, fp
   34ff8:	and	sl, sl, r1
   34ffc:	ror	r0, r0, #25
   35000:	add	r6, r6, r5
   35004:	add	r8, r8, r0
   35008:	eor	r5, sl, fp
   3500c:	add	r5, r5, r8
   35010:	ror	r4, r4, #23
   35014:	ldr	r8, [sp, #12]
   35018:	ldr	sl, [sp, #40]	; 0x28
   3501c:	orr	r2, ip, r4
   35020:	and	r7, ip, r4
   35024:	eor	r0, r0, r9
   35028:	and	r2, r2, lr
   3502c:	eor	r9, r8, sl
   35030:	ldr	r8, [sp, #64]	; 0x40
   35034:	orr	r2, r2, r7
   35038:	add	r2, r2, r6
   3503c:	add	r7, r0, r2
   35040:	eor	r0, r9, r8, ror #17
   35044:	ldr	r8, [sp, #24]
   35048:	ldr	sl, [sp, #52]	; 0x34
   3504c:	ror	r2, r5, #15
   35050:	eor	sl, sl, r8, ror #25
   35054:	eor	sl, sl, r0
   35058:	eor	r2, r2, r5, ror #23
   3505c:	eor	sl, sl, r0, ror #17
   35060:	ldr	r6, [pc, #-2728]	; 345c0 <__assert_fail@plt+0x232d4>
   35064:	eor	r9, r5, r2
   35068:	ror	r8, r3, #13
   3506c:	ror	r5, r7, #20
   35070:	eor	r3, sl, r0, ror #9
   35074:	ldr	r0, [sp, #60]	; 0x3c
   35078:	mov	sl, r3
   3507c:	ror	ip, ip, #23
   35080:	add	r6, r5, r6
   35084:	orr	r3, lr, ip
   35088:	add	r2, r0, fp
   3508c:	add	r6, r6, r9
   35090:	eor	r0, r0, sl
   35094:	str	sl, [sp, #12]
   35098:	and	r3, r3, r7
   3509c:	and	sl, lr, ip
   350a0:	add	r4, r0, r4
   350a4:	eor	r0, r1, r8
   350a8:	ror	r6, r6, #25
   350ac:	orr	sl, r3, sl
   350b0:	and	r0, r0, r9
   350b4:	add	r2, r2, r6
   350b8:	eor	r3, r0, r8
   350bc:	add	r4, sl, r4
   350c0:	eor	r5, r5, r6
   350c4:	add	r5, r5, r4
   350c8:	add	r3, r3, r2
   350cc:	ldr	fp, [sp, #16]
   350d0:	ldr	r4, [sp, #44]	; 0x2c
   350d4:	ldr	r2, [sp, #8]
   350d8:	eor	r6, fp, r4
   350dc:	ldr	r0, [sp, #28]
   350e0:	eor	r6, r6, r2, ror #17
   350e4:	ldr	r2, [sp, #56]	; 0x38
   350e8:	ror	r4, r3, #15
   350ec:	eor	r2, r2, r0, ror #25
   350f0:	ldr	sl, [pc, #-2868]	; 345c4 <__assert_fail@plt+0x232d8>
   350f4:	eor	r0, r4, r3, ror #23
   350f8:	eor	r2, r2, r6
   350fc:	ror	r4, r5, #20
   35100:	eor	r3, r3, r0
   35104:	eor	r2, r2, r6, ror #17
   35108:	add	sl, r4, sl
   3510c:	eor	fp, r2, r6, ror #9
   35110:	ror	r1, r1, #13
   35114:	ldr	r6, [sp, #64]	; 0x40
   35118:	add	sl, sl, r3
   3511c:	ror	lr, lr, #23
   35120:	eor	r2, r9, r1
   35124:	orr	r0, r7, lr
   35128:	add	r8, r6, r8
   3512c:	ror	sl, sl, #25
   35130:	and	r2, r2, r3
   35134:	eor	r6, r6, fp
   35138:	and	r0, r0, r5
   3513c:	add	r8, r8, sl
   35140:	eor	r2, r2, r1
   35144:	str	fp, [sp, #16]
   35148:	and	fp, r7, lr
   3514c:	orr	fp, r0, fp
   35150:	add	ip, r6, ip
   35154:	add	r0, r2, r8
   35158:	ldr	r6, [sp, #48]	; 0x30
   3515c:	ldr	r2, [sp, #20]
   35160:	eor	sl, sl, r4
   35164:	add	ip, fp, ip
   35168:	ldr	r4, [sp, #4]
   3516c:	ldr	fp, [sp, #32]
   35170:	add	ip, sl, ip
   35174:	eor	sl, r2, r6
   35178:	ldr	r6, [sp, #60]	; 0x3c
   3517c:	eor	r4, sl, r4, ror #17
   35180:	eor	r6, r6, fp, ror #25
   35184:	ror	r2, r0, #15
   35188:	eor	r6, r6, r4
   3518c:	eor	r6, r6, r4, ror #17
   35190:	eor	r2, r2, r0, ror #23
   35194:	ldr	r8, [pc, #-3028]	; 345c8 <__assert_fail@plt+0x232dc>
   35198:	eor	r0, r0, r2
   3519c:	ror	sl, ip, #20
   351a0:	ror	r2, r9, #13
   351a4:	eor	r9, r6, r4, ror #9
   351a8:	ror	r7, r7, #23
   351ac:	mov	fp, r9
   351b0:	add	r8, sl, r8
   351b4:	ldr	r9, [sp, #8]
   351b8:	orr	r6, r5, r7
   351bc:	add	r8, r8, r0
   351c0:	eor	r4, r3, r2
   351c4:	add	r1, r9, r1
   351c8:	str	fp, [sp, #20]
   351cc:	and	r6, r6, ip
   351d0:	eor	fp, r9, fp
   351d4:	and	r9, r5, r7
   351d8:	and	r4, r4, r0
   351dc:	add	fp, fp, lr
   351e0:	ror	r8, r8, #25
   351e4:	orr	r6, r6, r9
   351e8:	add	r1, r1, r8
   351ec:	eor	lr, r4, r2
   351f0:	eor	r8, r8, sl
   351f4:	add	r6, r6, fp
   351f8:	add	r6, r8, r6
   351fc:	add	lr, lr, r1
   35200:	ldr	r8, [sp, #24]
   35204:	ldr	r1, [sp, #52]	; 0x34
   35208:	ror	r4, lr, #15
   3520c:	eor	r9, r8, r1
   35210:	ldr	r1, [sp, #12]
   35214:	ldr	r8, [sp, #64]	; 0x40
   35218:	eor	r4, r4, lr, ror #23
   3521c:	eor	r1, r9, r1, ror #17
   35220:	ldr	r9, [sp, #36]	; 0x24
   35224:	eor	lr, lr, r4
   35228:	ror	r5, r5, #23
   3522c:	eor	sl, r8, r9, ror #25
   35230:	ldr	r8, [pc, #-3180]	; 345cc <__assert_fail@plt+0x232e0>
   35234:	ror	r9, r6, #20
   35238:	eor	sl, sl, r1
   3523c:	add	r8, r9, r8
   35240:	eor	sl, sl, r1, ror #17
   35244:	ldr	r4, [sp, #4]
   35248:	ror	r3, r3, #13
   3524c:	add	r8, r8, lr
   35250:	eor	r1, sl, r1, ror #9
   35254:	mov	sl, r1
   35258:	orr	fp, ip, r5
   3525c:	eor	r1, r0, r3
   35260:	str	sl, [sp, #24]
   35264:	and	fp, fp, r6
   35268:	eor	sl, r4, sl
   3526c:	add	r2, r4, r2
   35270:	ror	r8, r8, #25
   35274:	and	r4, ip, r5
   35278:	and	r1, r1, lr
   3527c:	add	r7, sl, r7
   35280:	add	r2, r2, r8
   35284:	orr	r4, fp, r4
   35288:	eor	r1, r1, r3
   3528c:	add	r1, r1, r2
   35290:	add	r4, r4, r7
   35294:	ldr	r2, [sp, #28]
   35298:	ldr	r7, [sp, #56]	; 0x38
   3529c:	ldr	sl, [sp, #40]	; 0x28
   352a0:	eor	r8, r8, r9
   352a4:	eor	r2, r2, r7
   352a8:	ldr	r7, [sp, #16]
   352ac:	add	r4, r8, r4
   352b0:	ldr	r8, [sp, #8]
   352b4:	eor	r2, r2, r7, ror #17
   352b8:	eor	r7, r8, sl, ror #25
   352bc:	ror	r9, r1, #15
   352c0:	eor	r7, r7, r2
   352c4:	ldr	r8, [pc, #-3324]	; 345d0 <__assert_fail@plt+0x232e4>
   352c8:	ror	sl, r4, #20
   352cc:	eor	r9, r9, r1, ror #23
   352d0:	eor	r7, r7, r2, ror #17
   352d4:	eor	r1, r1, r9
   352d8:	ror	ip, ip, #23
   352dc:	ldr	r9, [sp, #12]
   352e0:	eor	r2, r7, r2, ror #9
   352e4:	add	r8, sl, r8
   352e8:	mov	fp, r2
   352ec:	add	r8, r8, r1
   352f0:	orr	r2, r6, ip
   352f4:	str	fp, [sp, #28]
   352f8:	add	r3, r9, r3
   352fc:	eor	fp, r9, fp
   35300:	and	r2, r2, r4
   35304:	and	r9, r6, ip
   35308:	ror	r0, r0, #13
   3530c:	add	r5, fp, r5
   35310:	ror	r8, r8, #25
   35314:	orr	r2, r2, r9
   35318:	eor	r7, lr, r0
   3531c:	add	r3, r3, r8
   35320:	add	r2, r2, r5
   35324:	eor	r8, r8, sl
   35328:	add	r2, r8, r2
   3532c:	ldr	fp, [sp, #32]
   35330:	ldr	r8, [sp, #60]	; 0x3c
   35334:	and	r7, r7, r1
   35338:	eor	r7, r7, r0
   3533c:	add	r3, r7, r3
   35340:	ldr	r5, [sp, #20]
   35344:	eor	r7, fp, r8
   35348:	ldr	r8, [sp, #44]	; 0x2c
   3534c:	ldr	fp, [sp, #4]
   35350:	eor	r7, r7, r5, ror #17
   35354:	ror	sl, r3, #15
   35358:	eor	r5, fp, r8, ror #25
   3535c:	ldr	r8, [pc, #-3472]	; 345d4 <__assert_fail@plt+0x232e8>
   35360:	ror	r9, r2, #20
   35364:	eor	sl, sl, r3, ror #23
   35368:	eor	r5, r5, r7
   3536c:	eor	r3, r3, sl
   35370:	add	r8, r9, r8
   35374:	eor	r5, r5, r7, ror #17
   35378:	ror	lr, lr, #13
   3537c:	eor	r5, r5, r7, ror #9
   35380:	add	r8, r8, r3
   35384:	ldr	r7, [sp, #16]
   35388:	ror	r6, r6, #23
   3538c:	mov	sl, r5
   35390:	eor	r5, r1, lr
   35394:	orr	fp, r4, r6
   35398:	add	r0, r7, r0
   3539c:	ror	r8, r8, #25
   353a0:	and	r5, r5, r3
   353a4:	and	fp, fp, r2
   353a8:	add	r0, r0, r8
   353ac:	str	sl, [sp, #32]
   353b0:	eor	r5, r5, lr
   353b4:	eor	sl, r7, sl
   353b8:	and	r7, r4, r6
   353bc:	add	r5, r5, r0
   353c0:	orr	r7, fp, r7
   353c4:	eor	r8, r8, r9
   353c8:	ldr	r0, [sp, #64]	; 0x40
   353cc:	ldr	r9, [sp, #36]	; 0x24
   353d0:	add	ip, sl, ip
   353d4:	ldr	fp, [sp, #24]
   353d8:	add	ip, r7, ip
   353dc:	ldr	r7, [sp, #48]	; 0x30
   353e0:	eor	sl, r9, r0
   353e4:	ldr	r9, [sp, #12]
   353e8:	add	ip, r8, ip
   353ec:	eor	sl, sl, fp, ror #17
   353f0:	eor	r8, r9, r7, ror #25
   353f4:	ror	r0, r5, #15
   353f8:	eor	r8, r8, sl
   353fc:	ldr	r7, [pc, #-3628]	; 345d8 <__assert_fail@plt+0x232ec>
   35400:	ror	r9, ip, #20
   35404:	eor	r8, r8, sl, ror #17
   35408:	eor	r0, r0, r5, ror #23
   3540c:	eor	r0, r0, r5
   35410:	ror	r4, r4, #23
   35414:	eor	r5, r8, sl, ror #9
   35418:	add	r7, r9, r7
   3541c:	ldr	r8, [sp, #20]
   35420:	mov	sl, r5
   35424:	orr	fp, r2, r4
   35428:	add	r7, r7, r0
   3542c:	and	fp, fp, ip
   35430:	add	lr, r8, lr
   35434:	str	sl, [sp, #36]	; 0x24
   35438:	eor	sl, r8, sl
   3543c:	and	r8, r2, r4
   35440:	ror	r1, r1, #13
   35444:	ror	r7, r7, #25
   35448:	orr	r8, fp, r8
   3544c:	add	r6, sl, r6
   35450:	eor	r5, r3, r1
   35454:	add	r6, r8, r6
   35458:	eor	r8, r9, r7
   3545c:	add	r8, r8, r6
   35460:	ldr	sl, [sp, #40]	; 0x28
   35464:	ldr	r9, [sp, #8]
   35468:	ldr	r6, [sp, #28]
   3546c:	and	r5, r5, r0
   35470:	add	lr, lr, r7
   35474:	eor	r5, r5, r1
   35478:	add	r5, r5, lr
   3547c:	eor	lr, sl, r9
   35480:	ldr	sl, [sp, #52]	; 0x34
   35484:	eor	lr, lr, r6, ror #17
   35488:	ldr	r6, [sp, #16]
   3548c:	ror	r7, r5, #15
   35490:	eor	sl, r6, sl, ror #25
   35494:	eor	sl, sl, lr
   35498:	ldr	r6, [pc, #-3780]	; 345dc <__assert_fail@plt+0x232f0>
   3549c:	ror	r9, r8, #20
   354a0:	eor	r7, r7, r5, ror #23
   354a4:	eor	sl, sl, lr, ror #17
   354a8:	eor	r7, r7, r5
   354ac:	ror	r2, r2, #23
   354b0:	ldr	r5, [sp, #24]
   354b4:	add	r6, r9, r6
   354b8:	eor	lr, sl, lr, ror #9
   354bc:	mov	sl, lr
   354c0:	orr	fp, ip, r2
   354c4:	add	r6, r6, r7
   354c8:	and	fp, fp, r8
   354cc:	add	r1, r5, r1
   354d0:	str	sl, [sp, #40]	; 0x28
   354d4:	eor	sl, r5, sl
   354d8:	and	r5, ip, r2
   354dc:	ror	r3, r3, #13
   354e0:	ror	r6, r6, #25
   354e4:	orr	r5, fp, r5
   354e8:	add	r4, sl, r4
   354ec:	eor	lr, r0, r3
   354f0:	add	r4, r5, r4
   354f4:	eor	r5, r9, r6
   354f8:	add	r5, r5, r4
   354fc:	and	lr, lr, r7
   35500:	ldr	r4, [sp, #44]	; 0x2c
   35504:	ldr	fp, [sp, #4]
   35508:	add	r1, r1, r6
   3550c:	eor	lr, lr, r3
   35510:	add	lr, lr, r1
   35514:	eor	r1, r4, fp
   35518:	ldr	r4, [sp, #32]
   3551c:	ldr	sl, [sp, #20]
   35520:	ror	r9, lr, #15
   35524:	eor	r1, r1, r4, ror #17
   35528:	ldr	r4, [sp, #56]	; 0x38
   3552c:	ldr	r6, [pc, #-3924]	; 345e0 <__assert_fail@plt+0x232f4>
   35530:	eor	r9, r9, lr, ror #23
   35534:	eor	r4, sl, r4, ror #25
   35538:	eor	r4, r4, r1
   3553c:	ror	sl, r5, #20
   35540:	eor	r4, r4, r1, ror #17
   35544:	eor	lr, lr, r9
   35548:	ror	ip, ip, #23
   3554c:	eor	r1, r4, r1, ror #9
   35550:	ldr	fp, [sp, #28]
   35554:	add	r6, sl, r6
   35558:	mov	r9, r1
   3555c:	ror	r0, r0, #13
   35560:	orr	r4, r8, ip
   35564:	add	r6, r6, lr
   35568:	eor	r1, r7, r0
   3556c:	str	r9, [sp, #44]	; 0x2c
   35570:	add	r3, fp, r3
   35574:	and	r4, r4, r5
   35578:	eor	fp, fp, r9
   3557c:	and	r9, r8, ip
   35580:	and	r1, r1, lr
   35584:	add	fp, fp, r2
   35588:	ror	r6, r6, #25
   3558c:	orr	r4, r4, r9
   35590:	add	r3, r3, r6
   35594:	eor	r2, r1, r0
   35598:	eor	r6, r6, sl
   3559c:	add	r4, r4, fp
   355a0:	add	r4, r6, r4
   355a4:	add	r2, r2, r3
   355a8:	ldr	r1, [sp, #12]
   355ac:	ldr	r3, [sp, #48]	; 0x30
   355b0:	ldr	r6, [sp, #36]	; 0x24
   355b4:	ldr	r9, [sp, #60]	; 0x3c
   355b8:	ldr	fp, [sp, #24]
   355bc:	eor	r3, r3, r1
   355c0:	eor	r3, r3, r6, ror #17
   355c4:	eor	r6, fp, r9, ror #25
   355c8:	ror	r1, r2, #15
   355cc:	eor	r6, r6, r3
   355d0:	ldr	r9, [pc, #-4084]	; 345e4 <__assert_fail@plt+0x232f8>
   355d4:	ror	sl, r4, #20
   355d8:	eor	r1, r1, r2, ror #23
   355dc:	eor	r6, r6, r3, ror #17
   355e0:	eor	r2, r2, r1
   355e4:	ror	r8, r8, #23
   355e8:	ldr	r1, [sp, #32]
   355ec:	add	r9, sl, r9
   355f0:	eor	r3, r6, r3, ror #9
   355f4:	ror	r7, r7, #13
   355f8:	mov	r6, r3
   355fc:	orr	fp, r5, r8
   35600:	add	r9, r9, r2
   35604:	eor	r3, lr, r7
   35608:	str	r6, [sp, #48]	; 0x30
   3560c:	and	fp, fp, r4
   35610:	eor	r6, r1, r6
   35614:	add	r0, r1, r0
   35618:	and	r1, r5, r8
   3561c:	orr	r1, fp, r1
   35620:	ror	r9, r9, #25
   35624:	and	r3, r3, r2
   35628:	add	ip, r6, ip
   3562c:	add	r0, r0, r9
   35630:	add	ip, r1, ip
   35634:	eor	r9, r9, sl
   35638:	eor	r3, r3, r7
   3563c:	add	r6, r9, ip
   35640:	add	r3, r3, r0
   35644:	ldr	sl, [sp, #52]	; 0x34
   35648:	ldr	ip, [sp, #16]
   3564c:	ldr	r0, [sp, #40]	; 0x28
   35650:	eor	r1, sl, ip
   35654:	ldr	ip, [sp, #28]
   35658:	eor	r1, r1, r0, ror #17
   3565c:	ldr	r0, [sp, #64]	; 0x40
   35660:	ror	sl, r3, #15
   35664:	ror	r9, r6, #20
   35668:	eor	ip, ip, r0, ror #25
   3566c:	ldr	r0, [pc, #1268]	; 35b68 <__assert_fail@plt+0x2487c>
   35670:	eor	sl, sl, r3, ror #23
   35674:	eor	r3, r3, sl
   35678:	eor	ip, ip, r1
   3567c:	add	r0, r9, r0
   35680:	ror	lr, lr, #13
   35684:	ldr	sl, [sp, #36]	; 0x24
   35688:	eor	ip, ip, r1, ror #17
   3568c:	add	r0, r0, r3
   35690:	eor	ip, ip, r1, ror #9
   35694:	eor	r1, r2, lr
   35698:	ror	r0, r0, #25
   3569c:	add	r7, sl, r7
   356a0:	and	r1, r1, r3
   356a4:	eor	sl, sl, ip
   356a8:	eor	r1, r1, lr
   356ac:	add	r7, r7, r0
   356b0:	add	r8, sl, r8
   356b4:	eor	r9, r9, r0
   356b8:	ldr	sl, [sp, #20]
   356bc:	add	r0, r1, r7
   356c0:	ldr	r7, [sp, #56]	; 0x38
   356c4:	ror	r5, r5, #23
   356c8:	eor	r1, r7, sl
   356cc:	ldr	r7, [sp, #44]	; 0x2c
   356d0:	orr	fp, r4, r5
   356d4:	and	fp, fp, r6
   356d8:	str	ip, [sp, #52]	; 0x34
   356dc:	and	ip, r4, r5
   356e0:	eor	r1, r1, r7, ror #17
   356e4:	orr	ip, fp, ip
   356e8:	ldr	r7, [sp, #8]
   356ec:	ldr	sl, [sp, #32]
   356f0:	add	ip, ip, r8
   356f4:	add	ip, r9, ip
   356f8:	ror	r8, r0, #15
   356fc:	eor	r7, sl, r7, ror #25
   35700:	ldr	r9, [pc, #1124]	; 35b6c <__assert_fail@plt+0x24880>
   35704:	ror	fp, ip, #20
   35708:	eor	r8, r8, r0, ror #23
   3570c:	eor	r7, r7, r1
   35710:	eor	r0, r0, r8
   35714:	eor	r7, r7, r1, ror #17
   35718:	add	r9, fp, r9
   3571c:	ror	r4, r4, #23
   35720:	eor	r8, r7, r1, ror #9
   35724:	ror	r2, r2, #13
   35728:	ldr	r1, [sp, #40]	; 0x28
   3572c:	add	r9, r9, r0
   35730:	mov	sl, r8
   35734:	eor	r7, r3, r2
   35738:	orr	r8, r6, r4
   3573c:	ror	r9, r9, #25
   35740:	add	lr, r1, lr
   35744:	str	sl, [sp, #68]	; 0x44
   35748:	eor	r1, r1, sl
   3574c:	and	r8, r8, ip
   35750:	and	sl, r6, r4
   35754:	and	r7, r7, r0
   35758:	orr	r8, r8, sl
   3575c:	eor	r7, r7, r2
   35760:	add	r5, r1, r5
   35764:	add	lr, lr, r9
   35768:	add	lr, r7, lr
   3576c:	add	r5, r8, r5
   35770:	ldr	r1, [sp, #24]
   35774:	eor	r8, fp, r9
   35778:	ldr	r7, [sp, #48]	; 0x30
   3577c:	ldr	r9, [sp, #60]	; 0x3c
   35780:	add	r8, r8, r5
   35784:	ldr	fp, [sp, #4]
   35788:	eor	r5, r9, r1
   3578c:	eor	r5, r5, r7, ror #17
   35790:	ldr	r7, [sp, #36]	; 0x24
   35794:	ror	r1, lr, #15
   35798:	eor	r9, r7, fp, ror #25
   3579c:	ldr	r7, [pc, #972]	; 35b70 <__assert_fail@plt+0x24884>
   357a0:	ror	sl, r8, #20
   357a4:	eor	r1, r1, lr, ror #23
   357a8:	eor	r9, r9, r5
   357ac:	eor	lr, lr, r1
   357b0:	eor	r9, r9, r5, ror #17
   357b4:	add	r7, sl, r7
   357b8:	ror	r1, r6, #23
   357bc:	ror	r3, r3, #13
   357c0:	eor	r6, r9, r5, ror #9
   357c4:	add	r7, r7, lr
   357c8:	ldr	r9, [sp, #44]	; 0x2c
   357cc:	mov	fp, r6
   357d0:	eor	r6, r0, r3
   357d4:	add	r2, r9, r2
   357d8:	ror	r7, r7, #25
   357dc:	and	r6, r6, lr
   357e0:	str	fp, [sp, #56]	; 0x38
   357e4:	add	r2, r2, r7
   357e8:	eor	fp, r9, fp
   357ec:	eor	r6, r6, r3
   357f0:	add	r6, r6, r2
   357f4:	add	fp, fp, r4
   357f8:	eor	r7, r7, sl
   357fc:	ldr	r4, [sp, #28]
   35800:	ldr	sl, [sp, #52]	; 0x34
   35804:	ldr	r2, [sp, #64]	; 0x40
   35808:	orr	r5, ip, r1
   3580c:	eor	r2, r2, r4
   35810:	and	r9, ip, r1
   35814:	eor	r2, r2, sl, ror #17
   35818:	and	r5, r5, r8
   3581c:	ldr	sl, [sp, #12]
   35820:	orr	r5, r5, r9
   35824:	ldr	r9, [sp, #40]	; 0x28
   35828:	add	r5, r5, fp
   3582c:	add	r5, r7, r5
   35830:	eor	sl, r9, sl, ror #25
   35834:	ror	r4, r6, #15
   35838:	eor	sl, sl, r2
   3583c:	ldr	r7, [pc, #816]	; 35b74 <__assert_fail@plt+0x24888>
   35840:	ror	r9, r5, #20
   35844:	eor	r4, r4, r6, ror #23
   35848:	eor	sl, sl, r2, ror #17
   3584c:	eor	r4, r4, r6
   35850:	add	r7, r9, r7
   35854:	eor	r2, sl, r2, ror #9
   35858:	ror	r0, r0, #13
   3585c:	mov	sl, r2
   35860:	add	r7, r7, r4
   35864:	ldr	r2, [sp, #48]	; 0x30
   35868:	eor	r6, lr, r0
   3586c:	ror	ip, ip, #23
   35870:	add	r3, r2, r3
   35874:	ror	r7, r7, #25
   35878:	and	r6, r6, r4
   3587c:	orr	fp, r8, ip
   35880:	eor	r6, r6, r0
   35884:	add	r3, r3, r7
   35888:	add	r3, r6, r3
   3588c:	str	sl, [sp, #28]
   35890:	and	fp, fp, r5
   35894:	eor	sl, r2, sl
   35898:	ldr	r6, [sp, #16]
   3589c:	and	r2, r8, ip
   358a0:	add	r1, sl, r1
   358a4:	eor	r7, r7, r9
   358a8:	orr	r2, fp, r2
   358ac:	ldr	r9, [sp, #44]	; 0x2c
   358b0:	add	r2, r2, r1
   358b4:	add	r2, r7, r2
   358b8:	eor	r6, r9, r6, ror #25
   358bc:	ldr	r7, [sp, #8]
   358c0:	ldr	r9, [sp, #32]
   358c4:	ror	r1, r3, #15
   358c8:	eor	r7, r7, r9
   358cc:	ldr	r9, [sp, #52]	; 0x34
   358d0:	ror	sl, r2, #20
   358d4:	eor	r6, r6, r9
   358d8:	ldr	r9, [sp, #68]	; 0x44
   358dc:	eor	r1, r1, r3, ror #23
   358e0:	eor	r3, r3, r1
   358e4:	eor	r7, r7, r9, ror #17
   358e8:	ldr	r9, [pc, #648]	; 35b78 <__assert_fail@plt+0x2488c>
   358ec:	ror	r1, r8, #23
   358f0:	ror	lr, lr, #13
   358f4:	add	r9, sl, r9
   358f8:	eor	r6, r6, r7
   358fc:	orr	fp, r5, r1
   35900:	str	lr, [sp, #8]
   35904:	eor	r8, r4, lr
   35908:	add	r9, r9, r3
   3590c:	ldr	lr, [sp, #52]	; 0x34
   35910:	eor	r6, r6, r7, ror #17
   35914:	eor	r7, r6, r7, ror #9
   35918:	and	r6, fp, r2
   3591c:	and	fp, r5, r1
   35920:	orr	r6, r6, fp
   35924:	add	r0, lr, r0
   35928:	ror	r9, r9, #25
   3592c:	add	ip, r7, ip
   35930:	ldr	lr, [sp, #8]
   35934:	ldr	fp, [sp, #4]
   35938:	ldr	r7, [sp, #36]	; 0x24
   3593c:	add	r0, r0, r9
   35940:	add	ip, ip, r6
   35944:	eor	r9, r9, sl
   35948:	add	r6, r9, ip
   3594c:	and	r8, r8, r3
   35950:	ldr	ip, [sp, #20]
   35954:	eor	r8, r8, lr
   35958:	ldr	r9, [sp, #48]	; 0x30
   3595c:	eor	sl, fp, r7
   35960:	ldr	r7, [sp, #56]	; 0x38
   35964:	add	r0, r8, r0
   35968:	ldr	lr, [sp, #68]	; 0x44
   3596c:	eor	ip, r9, ip, ror #25
   35970:	eor	sl, sl, r7, ror #17
   35974:	ror	r8, r0, #15
   35978:	eor	ip, ip, lr
   3597c:	ldr	r7, [pc, #504]	; 35b7c <__assert_fail@plt+0x24890>
   35980:	ror	r9, r6, #20
   35984:	eor	r8, r8, r0, ror #23
   35988:	eor	ip, ip, sl
   3598c:	eor	r8, r8, r0
   35990:	add	r7, r9, r7
   35994:	eor	ip, ip, sl, ror #17
   35998:	ror	r4, r4, #13
   3599c:	eor	ip, ip, sl, ror #9
   359a0:	add	r7, r7, r8
   359a4:	ldr	sl, [sp, #8]
   359a8:	ror	r5, r5, #23
   359ac:	eor	r0, r3, r4
   359b0:	orr	fp, r2, r5
   359b4:	add	lr, lr, sl
   359b8:	ror	r7, r7, #25
   359bc:	and	r0, r0, r8
   359c0:	and	sl, r2, r5
   359c4:	add	lr, lr, r7
   359c8:	and	fp, fp, r6
   359cc:	eor	r0, r0, r4
   359d0:	add	r0, r0, lr
   359d4:	add	r1, ip, r1
   359d8:	orr	fp, fp, sl
   359dc:	add	fp, r1, fp
   359e0:	eor	r7, r7, r9
   359e4:	add	r7, r7, fp
   359e8:	ldr	sl, [sp, #12]
   359ec:	ldr	ip, [sp, #40]	; 0x28
   359f0:	ldr	fp, [sp, #28]
   359f4:	ror	r1, r0, #15
   359f8:	eor	r1, r1, r0, ror #23
   359fc:	eor	r0, r0, r1
   35a00:	eor	r1, sl, ip
   35a04:	eor	r1, r1, fp, ror #17
   35a08:	ldr	sl, [sp, #56]	; 0x38
   35a0c:	ldr	fp, [sp, #24]
   35a10:	ldr	ip, [sp, #52]	; 0x34
   35a14:	ldr	lr, [pc, #356]	; 35b80 <__assert_fail@plt+0x24894>
   35a18:	ror	r9, r7, #20
   35a1c:	add	lr, r9, lr
   35a20:	eor	ip, ip, sl
   35a24:	ror	r3, r3, #13
   35a28:	add	lr, lr, r0
   35a2c:	eor	ip, ip, fp, ror #25
   35a30:	ldr	fp, [sp, #56]	; 0x38
   35a34:	eor	sl, r8, r3
   35a38:	add	r4, fp, r4
   35a3c:	and	sl, sl, r0
   35a40:	ror	lr, lr, #25
   35a44:	eor	sl, sl, r3
   35a48:	add	r4, r4, lr
   35a4c:	add	r4, sl, r4
   35a50:	eor	ip, ip, r1
   35a54:	eor	ip, ip, r1, ror #17
   35a58:	eor	ip, ip, r1, ror #9
   35a5c:	ror	r1, r4, #15
   35a60:	add	ip, ip, r5
   35a64:	eor	r1, r1, r4, ror #23
   35a68:	ldr	r5, [sp]
   35a6c:	eor	r4, r4, r1
   35a70:	ldr	r1, [sp, #104]	; 0x68
   35a74:	add	r5, r5, #64	; 0x40
   35a78:	ror	r2, r2, #23
   35a7c:	cmp	r1, r5
   35a80:	ldr	r1, [sp, #80]	; 0x50
   35a84:	orr	sl, r6, r2
   35a88:	and	fp, r6, r2
   35a8c:	eor	r1, r1, r6, ror #23
   35a90:	and	sl, sl, r7
   35a94:	orr	sl, sl, fp
   35a98:	str	r1, [sp, #80]	; 0x50
   35a9c:	mov	fp, r1
   35aa0:	ldr	r1, [sp, #84]	; 0x54
   35aa4:	eor	lr, lr, r9
   35aa8:	eor	r1, r1, r2
   35aac:	ldr	r2, [sp, #76]	; 0x4c
   35ab0:	add	ip, ip, sl
   35ab4:	eor	r2, r2, r7
   35ab8:	add	ip, lr, ip
   35abc:	str	r2, [sp, #76]	; 0x4c
   35ac0:	mov	lr, r2
   35ac4:	ldr	r2, [sp, #96]	; 0x60
   35ac8:	str	r5, [sp]
   35acc:	eor	r2, r2, r8, ror #13
   35ad0:	mov	r7, r2
   35ad4:	str	r2, [sp, #96]	; 0x60
   35ad8:	ldr	r2, [sp, #100]	; 0x64
   35adc:	str	r1, [sp, #84]	; 0x54
   35ae0:	eor	r2, r2, r3
   35ae4:	ldr	r3, [sp, #92]	; 0x5c
   35ae8:	mov	r5, r2
   35aec:	eor	r3, r3, r0
   35af0:	mov	r6, r3
   35af4:	str	r3, [sp, #92]	; 0x5c
   35af8:	ldr	r3, [sp, #72]	; 0x48
   35afc:	str	r2, [sp, #100]	; 0x64
   35b00:	eor	r3, r3, ip
   35b04:	mov	r8, r3
   35b08:	str	r3, [sp, #72]	; 0x48
   35b0c:	ldr	r3, [sp, #88]	; 0x58
   35b10:	mov	r0, lr
   35b14:	eor	r3, r3, r4
   35b18:	mov	r4, r3
   35b1c:	str	r3, [sp, #88]	; 0x58
   35b20:	ldr	r3, [sp, #108]	; 0x6c
   35b24:	mov	sl, r8
   35b28:	mov	r2, r3
   35b2c:	str	lr, [r3, #4]
   35b30:	str	fp, [r3, #8]
   35b34:	str	r1, [r3, #12]
   35b38:	str	r7, [r3, #24]
   35b3c:	mov	lr, r8
   35b40:	str	r8, [r2]
   35b44:	mov	r3, r5
   35b48:	str	r5, [r2, #28]
   35b4c:	str	r6, [r2, #20]
   35b50:	str	r4, [r2, #16]
   35b54:	mov	r8, r0
   35b58:	mov	r9, r1
   35b5c:	bhi	33524 <__assert_fail@plt+0x22238>
   35b60:	add	sp, sp, #116	; 0x74
   35b64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   35b68:	ldrbtne	r0, [r5], #3899	; 0xf3b
   35b6c:	stmibcs	sl!, {r1, r2, r4, r5, r6, r9, sl, fp, ip}^
   35b70:	bicspl	r3, r4, #236, 24	; 0xec00
   35b74:	sbfxge	r7, r8, #19, #9
   35b78:	svcmi	0x0050f3b1
   35b7c:	cdpls	7, 10, cr14, cr1, cr2, {3}
   35b80:	stclcc	14, cr12, [r3, #-788]	; 0xfffffcec
   35b84:	push	{r4, r5, r6, r7, r8, lr}
   35b88:	mov	r4, r0
   35b8c:	ldr	r0, [r0, #40]	; 0x28
   35b90:	ldr	r3, [r4, #32]
   35b94:	cmp	r0, #55	; 0x37
   35b98:	add	r3, r0, r3
   35b9c:	movhi	r6, #128	; 0x80
   35ba0:	movls	r6, #64	; 0x40
   35ba4:	movhi	r2, #120	; 0x78
   35ba8:	movls	r2, #56	; 0x38
   35bac:	movhi	ip, #31
   35bb0:	movls	ip, #15
   35bb4:	movhi	lr, #30
   35bb8:	movls	lr, #14
   35bbc:	cmp	r0, r3
   35bc0:	mov	r5, r1
   35bc4:	ldrhi	r1, [r4, #36]	; 0x24
   35bc8:	ldrls	r7, [r4, #36]	; 0x24
   35bcc:	addhi	r7, r1, #1
   35bd0:	lsr	r1, r3, #29
   35bd4:	str	r3, [r4, #32]
   35bd8:	add	lr, r4, lr, lsl #2
   35bdc:	add	ip, r4, ip, lsl #2
   35be0:	orr	r1, r1, r7, lsl #3
   35be4:	lsl	r3, r3, #3
   35be8:	strhi	r7, [r4, #36]	; 0x24
   35bec:	rev	r3, r3
   35bf0:	add	r7, r4, #44	; 0x2c
   35bf4:	rev	r1, r1
   35bf8:	str	r1, [lr, #44]	; 0x2c
   35bfc:	sub	r2, r2, r0
   35c00:	str	r3, [ip, #44]	; 0x2c
   35c04:	add	r0, r7, r0
   35c08:	ldr	r1, [pc, #120]	; 35c88 <__assert_fail@plt+0x2499c>
   35c0c:	bl	11058 <memcpy@plt>
   35c10:	mov	r0, r7
   35c14:	mov	r2, r4
   35c18:	mov	r1, r6
   35c1c:	bl	334a4 <__assert_fail@plt+0x221b8>
   35c20:	ldr	r3, [r4]
   35c24:	mov	r0, r5
   35c28:	rev	r3, r3
   35c2c:	str	r3, [r5]
   35c30:	ldr	r3, [r4, #4]
   35c34:	rev	r3, r3
   35c38:	str	r3, [r5, #4]
   35c3c:	ldr	r3, [r4, #8]
   35c40:	rev	r3, r3
   35c44:	str	r3, [r5, #8]
   35c48:	ldr	r3, [r4, #12]
   35c4c:	rev	r3, r3
   35c50:	str	r3, [r5, #12]
   35c54:	ldr	r3, [r4, #16]
   35c58:	rev	r3, r3
   35c5c:	str	r3, [r5, #16]
   35c60:	ldr	r3, [r4, #20]
   35c64:	rev	r3, r3
   35c68:	str	r3, [r5, #20]
   35c6c:	ldr	r3, [r4, #24]
   35c70:	rev	r3, r3
   35c74:	str	r3, [r5, #24]
   35c78:	ldr	r3, [r4, #28]
   35c7c:	rev	r3, r3
   35c80:	str	r3, [r5, #28]
   35c84:	pop	{r4, r5, r6, r7, r8, pc}
   35c88:	andeq	r1, r4, ip, lsr #14
   35c8c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   35c90:	mov	r6, r2
   35c94:	ldr	r4, [r2, #40]	; 0x28
   35c98:	mov	r8, r0
   35c9c:	cmp	r4, #0
   35ca0:	mov	r5, r1
   35ca4:	bne	35d94 <__assert_fail@plt+0x24aa8>
   35ca8:	cmp	r5, #63	; 0x3f
   35cac:	bls	35d84 <__assert_fail@plt+0x24a98>
   35cb0:	tst	r8, #3
   35cb4:	beq	35d68 <__assert_fail@plt+0x24a7c>
   35cb8:	cmp	r5, #64	; 0x40
   35cbc:	add	r7, r6, #44	; 0x2c
   35cc0:	beq	35d40 <__assert_fail@plt+0x24a54>
   35cc4:	mov	sl, r5
   35cc8:	mov	r4, r8
   35ccc:	mov	r9, #64	; 0x40
   35cd0:	add	r2, r4, #64	; 0x40
   35cd4:	mov	r3, r7
   35cd8:	ldr	lr, [r4]
   35cdc:	ldr	ip, [r4, #4]
   35ce0:	ldr	r0, [r4, #8]
   35ce4:	ldr	r1, [r4, #12]
   35ce8:	add	r4, r4, #16
   35cec:	cmp	r4, r2
   35cf0:	str	lr, [r3]
   35cf4:	str	ip, [r3, #4]
   35cf8:	str	r0, [r3, #8]
   35cfc:	str	r1, [r3, #12]
   35d00:	add	r3, r3, #16
   35d04:	bne	35cd8 <__assert_fail@plt+0x249ec>
   35d08:	sub	sl, sl, #64	; 0x40
   35d0c:	mov	r2, r6
   35d10:	mov	r1, r9
   35d14:	mov	r0, r7
   35d18:	bl	334a4 <__assert_fail@plt+0x221b8>
   35d1c:	cmp	sl, #64	; 0x40
   35d20:	bhi	35cd0 <__assert_fail@plt+0x249e4>
   35d24:	sub	r3, r5, #65	; 0x41
   35d28:	bic	r2, r3, #63	; 0x3f
   35d2c:	mov	r3, r2
   35d30:	sub	r5, r5, #64	; 0x40
   35d34:	add	r2, r2, #64	; 0x40
   35d38:	sub	r5, r5, r3
   35d3c:	add	r8, r8, r2
   35d40:	ldr	r4, [r6, #40]	; 0x28
   35d44:	mov	r1, r8
   35d48:	add	r0, r7, r4
   35d4c:	mov	r2, r5
   35d50:	add	r4, r4, r5
   35d54:	bl	11058 <memcpy@plt>
   35d58:	cmp	r4, #63	; 0x3f
   35d5c:	bhi	35dd4 <__assert_fail@plt+0x24ae8>
   35d60:	str	r4, [r6, #40]	; 0x28
   35d64:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   35d68:	bic	r4, r5, #63	; 0x3f
   35d6c:	mov	r0, r8
   35d70:	mov	r1, r4
   35d74:	mov	r2, r6
   35d78:	bl	334a4 <__assert_fail@plt+0x221b8>
   35d7c:	and	r5, r5, #63	; 0x3f
   35d80:	add	r8, r8, r4
   35d84:	cmp	r5, #0
   35d88:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   35d8c:	add	r7, r6, #44	; 0x2c
   35d90:	b	35d40 <__assert_fail@plt+0x24a54>
   35d94:	rsb	r7, r4, #128	; 0x80
   35d98:	cmp	r7, r1
   35d9c:	movcs	r7, r1
   35da0:	add	r9, r2, #44	; 0x2c
   35da4:	mov	r1, r8
   35da8:	mov	r2, r7
   35dac:	add	r0, r9, r4
   35db0:	bl	11058 <memcpy@plt>
   35db4:	ldr	r1, [r6, #40]	; 0x28
   35db8:	add	r1, r7, r1
   35dbc:	cmp	r1, #64	; 0x40
   35dc0:	str	r1, [r6, #40]	; 0x28
   35dc4:	bhi	35e00 <__assert_fail@plt+0x24b14>
   35dc8:	add	r8, r8, r7
   35dcc:	sub	r5, r5, r7
   35dd0:	b	35ca8 <__assert_fail@plt+0x249bc>
   35dd4:	sub	r4, r4, #64	; 0x40
   35dd8:	mov	r2, r6
   35ddc:	mov	r1, #64	; 0x40
   35de0:	mov	r0, r7
   35de4:	bl	334a4 <__assert_fail@plt+0x221b8>
   35de8:	mov	r0, r7
   35dec:	mov	r2, r4
   35df0:	add	r1, r6, #108	; 0x6c
   35df4:	bl	11058 <memcpy@plt>
   35df8:	str	r4, [r6, #40]	; 0x28
   35dfc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   35e00:	mov	r2, r6
   35e04:	mov	r0, r9
   35e08:	bic	r1, r1, #63	; 0x3f
   35e0c:	bl	334a4 <__assert_fail@plt+0x221b8>
   35e10:	ldr	r2, [r6, #40]	; 0x28
   35e14:	add	r1, r4, r7
   35e18:	and	r2, r2, #63	; 0x3f
   35e1c:	bic	r1, r1, #63	; 0x3f
   35e20:	add	r1, r9, r1
   35e24:	mov	r0, r9
   35e28:	str	r2, [r6, #40]	; 0x28
   35e2c:	bl	11058 <memcpy@plt>
   35e30:	b	35dc8 <__assert_fail@plt+0x24adc>
   35e34:	push	{r4, r5, r6, r7, lr}
   35e38:	sub	sp, sp, #180	; 0xb4
   35e3c:	ldr	lr, [pc, #332]	; 35f90 <__assert_fail@plt+0x24ca4>
   35e40:	ldr	ip, [pc, #332]	; 35f94 <__assert_fail@plt+0x24ca8>
   35e44:	ldr	r3, [pc, #332]	; 35f98 <__assert_fail@plt+0x24cac>
   35e48:	ldr	r5, [pc, #332]	; 35f9c <__assert_fail@plt+0x24cb0>
   35e4c:	ldr	r6, [pc, #332]	; 35fa0 <__assert_fail@plt+0x24cb4>
   35e50:	str	lr, [sp, #4]
   35e54:	str	ip, [sp, #8]
   35e58:	ldr	lr, [pc, #324]	; 35fa4 <__assert_fail@plt+0x24cb8>
   35e5c:	ldr	ip, [pc, #324]	; 35fa8 <__assert_fail@plt+0x24cbc>
   35e60:	ldr	r7, [pc, #324]	; 35fac <__assert_fail@plt+0x24cc0>
   35e64:	mov	r4, r2
   35e68:	str	r3, [sp, #20]
   35e6c:	add	r2, sp, #4
   35e70:	mov	r3, #0
   35e74:	str	r6, [sp, #16]
   35e78:	str	r5, [sp, #24]
   35e7c:	str	lr, [sp, #28]
   35e80:	str	ip, [sp, #32]
   35e84:	str	r7, [sp, #12]
   35e88:	str	r3, [sp, #40]	; 0x28
   35e8c:	str	r3, [sp, #36]	; 0x24
   35e90:	str	r3, [sp, #44]	; 0x2c
   35e94:	bl	35c8c <__assert_fail@plt+0x249a0>
   35e98:	ldr	r0, [sp, #44]	; 0x2c
   35e9c:	ldr	r3, [sp, #36]	; 0x24
   35ea0:	cmp	r0, #55	; 0x37
   35ea4:	add	r3, r0, r3
   35ea8:	movhi	r5, #128	; 0x80
   35eac:	movls	r5, #64	; 0x40
   35eb0:	movhi	r2, #120	; 0x78
   35eb4:	movls	r2, #56	; 0x38
   35eb8:	movhi	lr, #31
   35ebc:	movls	lr, #15
   35ec0:	movhi	r6, #30
   35ec4:	movls	r6, #14
   35ec8:	cmp	r0, r3
   35ecc:	add	r7, sp, #176	; 0xb0
   35ed0:	ldrhi	ip, [sp, #40]	; 0x28
   35ed4:	ldrls	r1, [sp, #40]	; 0x28
   35ed8:	str	r3, [sp, #36]	; 0x24
   35edc:	add	r6, r7, r6, lsl #2
   35ee0:	addhi	r1, ip, #1
   35ee4:	lsr	ip, r3, #29
   35ee8:	strhi	r1, [sp, #40]	; 0x28
   35eec:	add	lr, r7, lr, lsl #2
   35ef0:	orr	ip, ip, r1, lsl #3
   35ef4:	lsl	r3, r3, #3
   35ef8:	add	r1, sp, #48	; 0x30
   35efc:	rev	ip, ip
   35f00:	rev	r3, r3
   35f04:	sub	r2, r2, r0
   35f08:	add	r0, r1, r0
   35f0c:	ldr	r1, [pc, #156]	; 35fb0 <__assert_fail@plt+0x24cc4>
   35f10:	str	ip, [r6, #-128]	; 0xffffff80
   35f14:	str	r3, [lr, #-128]	; 0xffffff80
   35f18:	bl	11058 <memcpy@plt>
   35f1c:	add	r2, sp, #4
   35f20:	mov	r1, r5
   35f24:	add	r0, sp, #48	; 0x30
   35f28:	bl	334a4 <__assert_fail@plt+0x221b8>
   35f2c:	add	r0, sp, #20
   35f30:	ldr	r6, [sp, #4]
   35f34:	ldm	r0, {r0, r1, r2, r3}
   35f38:	rev	r6, r6
   35f3c:	ldr	r5, [sp, #8]
   35f40:	ldr	lr, [sp, #12]
   35f44:	ldr	ip, [sp, #16]
   35f48:	rev	r5, r5
   35f4c:	rev	lr, lr
   35f50:	rev	ip, ip
   35f54:	rev	r0, r0
   35f58:	rev	r1, r1
   35f5c:	rev	r2, r2
   35f60:	rev	r3, r3
   35f64:	str	r0, [r4, #16]
   35f68:	str	r6, [r4]
   35f6c:	mov	r0, r4
   35f70:	str	r5, [r4, #4]
   35f74:	str	lr, [r4, #8]
   35f78:	str	ip, [r4, #12]
   35f7c:	str	r1, [r4, #20]
   35f80:	str	r2, [r4, #24]
   35f84:	str	r3, [r4, #28]
   35f88:	add	sp, sp, #180	; 0xb4
   35f8c:	pop	{r4, r5, r6, r7, pc}
   35f90:	orrvc	r1, r0, #116391936	; 0x6f00000
   35f94:	ldmdbmi	r4, {r0, r3, r4, r5, r7, r9, ip, sp, pc}
   35f98:	stmdbge	pc!, {r2, r3, r4, r5, r7, ip, sp}^	; <UNPREDICTABLE>
   35f9c:	ldrtne	r3, [r1], -sl, lsr #17
   35fa0:	ble	fe2b77a8 <optarg@@GLIBC_2.4+0xfe265600>
   35fa4:	orr	lr, sp, #1232	; 0x4d0
   35fa8:	rscslt	r0, fp, lr, asr #28
   35fac:			; <UNDEFINED> instruction: 0x172442d7
   35fb0:	andeq	r1, r4, ip, lsr #14
   35fb4:	push	{r4, r5}
   35fb8:	pop	{r4, r5}
   35fbc:	b	11010 <posix_fadvise64@plt>
   35fc0:	cmp	r0, #0
   35fc4:	bxeq	lr
   35fc8:	push	{r4, lr}
   35fcc:	sub	sp, sp, #16
   35fd0:	mov	r4, r1
   35fd4:	bl	11208 <fileno@plt>
   35fd8:	mov	r2, #0
   35fdc:	mov	r3, #0
   35fe0:	str	r4, [sp, #8]
   35fe4:	strd	r2, [sp]
   35fe8:	bl	11010 <posix_fadvise64@plt>
   35fec:	add	sp, sp, #16
   35ff0:	pop	{r4, pc}
   35ff4:	push	{r4, r5, lr}
   35ff8:	sub	sp, sp, #12
   35ffc:	mov	r4, r0
   36000:	bl	11208 <fileno@plt>
   36004:	cmp	r0, #0
   36008:	mov	r0, r4
   3600c:	blt	36088 <__assert_fail@plt+0x24d9c>
   36010:	bl	11154 <__freading@plt>
   36014:	cmp	r0, #0
   36018:	bne	36054 <__assert_fail@plt+0x24d68>
   3601c:	mov	r0, r4
   36020:	bl	36094 <__assert_fail@plt+0x24da8>
   36024:	cmp	r0, #0
   36028:	beq	36084 <__assert_fail@plt+0x24d98>
   3602c:	bl	111c0 <__errno_location@plt>
   36030:	mov	r5, r0
   36034:	mov	r0, r4
   36038:	ldr	r4, [r5]
   3603c:	bl	11220 <fclose@plt>
   36040:	cmp	r4, #0
   36044:	mvnne	r0, #0
   36048:	strne	r4, [r5]
   3604c:	add	sp, sp, #12
   36050:	pop	{r4, r5, pc}
   36054:	mov	r0, r4
   36058:	bl	11208 <fileno@plt>
   3605c:	mov	r3, #1
   36060:	str	r3, [sp]
   36064:	mov	r2, #0
   36068:	mov	r3, #0
   3606c:	bl	110e8 <lseek64@plt>
   36070:	mvn	r3, #0
   36074:	mvn	r2, #0
   36078:	cmp	r1, r3
   3607c:	cmpeq	r0, r2
   36080:	bne	3601c <__assert_fail@plt+0x24d30>
   36084:	mov	r0, r4
   36088:	add	sp, sp, #12
   3608c:	pop	{r4, r5, lr}
   36090:	b	11220 <fclose@plt>
   36094:	push	{r4, lr}
   36098:	subs	r4, r0, #0
   3609c:	sub	sp, sp, #8
   360a0:	beq	360bc <__assert_fail@plt+0x24dd0>
   360a4:	bl	11154 <__freading@plt>
   360a8:	cmp	r0, #0
   360ac:	beq	360bc <__assert_fail@plt+0x24dd0>
   360b0:	ldr	r3, [r4]
   360b4:	tst	r3, #256	; 0x100
   360b8:	bne	360cc <__assert_fail@plt+0x24de0>
   360bc:	mov	r0, r4
   360c0:	add	sp, sp, #8
   360c4:	pop	{r4, lr}
   360c8:	b	1101c <fflush@plt>
   360cc:	mov	r3, #1
   360d0:	str	r3, [sp]
   360d4:	mov	r2, #0
   360d8:	mov	r3, #0
   360dc:	mov	r0, r4
   360e0:	bl	361e4 <__assert_fail@plt+0x24ef8>
   360e4:	mov	r0, r4
   360e8:	add	sp, sp, #8
   360ec:	pop	{r4, lr}
   360f0:	b	1101c <fflush@plt>
   360f4:	push	{r4, r5, r6, lr}
   360f8:	mov	r5, r1
   360fc:	bl	11298 <fopen64@plt>
   36100:	subs	r4, r0, #0
   36104:	beq	36114 <__assert_fail@plt+0x24e28>
   36108:	bl	11208 <fileno@plt>
   3610c:	cmp	r0, #2
   36110:	bls	3611c <__assert_fail@plt+0x24e30>
   36114:	mov	r0, r4
   36118:	pop	{r4, r5, r6, pc}
   3611c:	bl	3b31c <__assert_fail@plt+0x2a030>
   36120:	subs	r6, r0, #0
   36124:	blt	3616c <__assert_fail@plt+0x24e80>
   36128:	mov	r0, r4
   3612c:	bl	35ff4 <__assert_fail@plt+0x24d08>
   36130:	cmp	r0, #0
   36134:	bne	3614c <__assert_fail@plt+0x24e60>
   36138:	mov	r1, r5
   3613c:	mov	r0, r6
   36140:	bl	10fc8 <fdopen@plt>
   36144:	subs	r4, r0, #0
   36148:	bne	36114 <__assert_fail@plt+0x24e28>
   3614c:	bl	111c0 <__errno_location@plt>
   36150:	mov	r4, #0
   36154:	mov	r5, r0
   36158:	mov	r0, r6
   3615c:	ldr	r6, [r5]
   36160:	bl	112d4 <close@plt>
   36164:	str	r6, [r5]
   36168:	b	36114 <__assert_fail@plt+0x24e28>
   3616c:	bl	111c0 <__errno_location@plt>
   36170:	mov	r5, r0
   36174:	mov	r0, r4
   36178:	ldr	r6, [r5]
   3617c:	mov	r4, #0
   36180:	bl	35ff4 <__assert_fail@plt+0x24d08>
   36184:	str	r6, [r5]
   36188:	b	36114 <__assert_fail@plt+0x24e28>
   3618c:	push	{r4, r5, lr}
   36190:	sub	sp, sp, #12
   36194:	mov	r5, r0
   36198:	bl	111c0 <__errno_location@plt>
   3619c:	mov	r2, #0
   361a0:	mov	r4, r0
   361a4:	ldr	r3, [r0]
   361a8:	str	r2, [r4]
   361ac:	mov	r0, r5
   361b0:	str	r3, [sp]
   361b4:	str	r3, [sp, #4]
   361b8:	bl	11034 <free@plt>
   361bc:	ldr	r3, [r4]
   361c0:	add	r2, sp, #8
   361c4:	cmp	r3, #0
   361c8:	moveq	r3, #4
   361cc:	movne	r3, #0
   361d0:	add	r3, r2, r3
   361d4:	ldr	r3, [r3, #-8]
   361d8:	str	r3, [r4]
   361dc:	add	sp, sp, #12
   361e0:	pop	{r4, r5, pc}
   361e4:	push	{r4, r5, r6, r7, r8, lr}
   361e8:	sub	sp, sp, #8
   361ec:	ldmib	r0, {ip, lr}
   361f0:	mov	r4, r0
   361f4:	ldr	r5, [sp, #32]
   361f8:	cmp	lr, ip
   361fc:	beq	36214 <__assert_fail@plt+0x24f28>
   36200:	str	r5, [sp, #32]
   36204:	mov	r0, r4
   36208:	add	sp, sp, #8
   3620c:	pop	{r4, r5, r6, r7, r8, lr}
   36210:	b	1122c <fseeko64@plt>
   36214:	ldr	lr, [r0, #20]
   36218:	ldr	ip, [r0, #16]
   3621c:	cmp	lr, ip
   36220:	bne	36200 <__assert_fail@plt+0x24f14>
   36224:	ldr	r8, [r0, #36]	; 0x24
   36228:	cmp	r8, #0
   3622c:	bne	36200 <__assert_fail@plt+0x24f14>
   36230:	mov	r6, r2
   36234:	mov	r7, r3
   36238:	bl	11208 <fileno@plt>
   3623c:	mov	r2, r6
   36240:	mov	r3, r7
   36244:	str	r5, [sp]
   36248:	bl	110e8 <lseek64@plt>
   3624c:	mvn	r3, #0
   36250:	mvn	r2, #0
   36254:	cmp	r1, r3
   36258:	cmpeq	r0, r2
   3625c:	beq	3627c <__assert_fail@plt+0x24f90>
   36260:	ldr	r3, [r4]
   36264:	strd	r0, [r4, #80]	; 0x50
   36268:	mov	r0, r8
   3626c:	bic	r3, r3, #16
   36270:	str	r3, [r4]
   36274:	add	sp, sp, #8
   36278:	pop	{r4, r5, r6, r7, r8, pc}
   3627c:	mvn	r0, #0
   36280:	b	36274 <__assert_fail@plt+0x24f88>
   36284:	andeq	r0, r0, r0
   36288:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3628c:	vpush	{d8-d9}
   36290:	mov	r4, r3
   36294:	ands	r3, r3, #32
   36298:	mov	r9, r1
   3629c:	sub	sp, sp, #108	; 0x6c
   362a0:	mov	r8, r0
   362a4:	str	r3, [sp, #36]	; 0x24
   362a8:	and	r3, r4, #3
   362ac:	str	r3, [sp, #8]
   362b0:	movne	r3, #1024	; 0x400
   362b4:	moveq	r3, #1000	; 0x3e8
   362b8:	str	r2, [sp, #12]
   362bc:	strne	r3, [sp, #40]	; 0x28
   362c0:	movne	r2, #1024	; 0x400
   362c4:	moveq	r2, #1000	; 0x3e8
   362c8:	strne	r3, [sp, #28]
   362cc:	streq	r3, [sp, #40]	; 0x28
   362d0:	streq	r3, [sp, #28]
   362d4:	mov	r3, #0
   362d8:	ldrd	r6, [sp, #160]	; 0xa0
   362dc:	strd	r2, [sp, #16]
   362e0:	bl	11280 <localeconv@plt>
   362e4:	ldr	r3, [sp, #12]
   362e8:	add	r3, r3, #644	; 0x284
   362ec:	str	r3, [sp, #24]
   362f0:	ldr	fp, [r0]
   362f4:	mov	r5, r0
   362f8:	mov	r0, fp
   362fc:	bl	111a8 <strlen@plt>
   36300:	ldr	sl, [r5, #4]
   36304:	ldr	r1, [pc, #684]	; 365b8 <__assert_fail@plt+0x252cc>
   36308:	mov	r2, r0
   3630c:	sub	r0, r0, #1
   36310:	cmp	r0, #16
   36314:	movcs	r2, #1
   36318:	str	r2, [sp, #48]	; 0x30
   3631c:	mov	r0, sl
   36320:	movcc	r2, fp
   36324:	movcs	r2, r1
   36328:	str	r2, [sp, #52]	; 0x34
   3632c:	bl	111a8 <strlen@plt>
   36330:	ldr	r3, [sp, #24]
   36334:	ldr	r2, [pc, #640]	; 365bc <__assert_fail@plt+0x252d0>
   36338:	add	r3, r3, #3
   3633c:	str	r3, [sp, #8]
   36340:	ldr	r5, [r5, #8]
   36344:	cmp	r0, #16
   36348:	movhi	sl, r2
   3634c:	ldrd	r2, [sp, #168]	; 0xa8
   36350:	str	sl, [sp, #32]
   36354:	cmp	r3, r7
   36358:	cmpeq	r2, r6
   3635c:	bhi	365c8 <__assert_fail@plt+0x252dc>
   36360:	mov	r0, r6
   36364:	mov	r1, r7
   36368:	bl	3e120 <__assert_fail@plt+0x2ce34>
   3636c:	orrs	r3, r2, r3
   36370:	bne	363b4 <__assert_fail@plt+0x250c8>
   36374:	ldrd	r2, [sp, #168]	; 0xa8
   36378:	mov	r0, r6
   3637c:	mov	r1, r7
   36380:	bl	3e120 <__assert_fail@plt+0x2ce34>
   36384:	mov	r2, r0
   36388:	mul	r0, r0, r9
   3638c:	umull	sl, fp, r2, r8
   36390:	mla	r0, r8, r1, r0
   36394:	mov	r3, r1
   36398:	add	fp, r0, fp
   3639c:	mov	r1, fp
   363a0:	mov	r0, sl
   363a4:	bl	3e120 <__assert_fail@plt+0x2ce34>
   363a8:	cmp	r9, r1
   363ac:	cmpeq	r8, r0
   363b0:	beq	36c80 <__assert_fail@plt+0x25994>
   363b4:	mov	r0, r6
   363b8:	mov	r1, r7
   363bc:	bl	3e0ac <__assert_fail@plt+0x2cdc0>
   363c0:	vmov	d9, r0, r1
   363c4:	ldrd	r0, [sp, #168]	; 0xa8
   363c8:	bl	3e0ac <__assert_fail@plt+0x2cdc0>
   363cc:	vmov	d7, r0, r1
   363d0:	mov	r0, r8
   363d4:	mov	r1, r9
   363d8:	vdiv.f64	d8, d9, d7
   363dc:	bl	3e0ac <__assert_fail@plt+0x2cdc0>
   363e0:	ands	r8, r4, #16
   363e4:	vmov	d7, r0, r1
   363e8:	vmul.f64	d8, d8, d7
   363ec:	beq	369f8 <__assert_fail@plt+0x2570c>
   363f0:	vldr	s15, [sp, #40]	; 0x28
   363f4:	vcvt.f64.s32	d7, s15
   363f8:	vmul.f64	d6, d7, d7
   363fc:	vcmpe.f64	d8, d6
   36400:	vmrs	APSR_nzcv, fpscr
   36404:	blt	36f58 <__assert_fail@plt+0x25c6c>
   36408:	vmul.f64	d5, d7, d6
   3640c:	vcmpe.f64	d8, d5
   36410:	vmrs	APSR_nzcv, fpscr
   36414:	blt	36f64 <__assert_fail@plt+0x25c78>
   36418:	vmul.f64	d6, d7, d5
   3641c:	vcmpe.f64	d8, d6
   36420:	vmrs	APSR_nzcv, fpscr
   36424:	blt	36f6c <__assert_fail@plt+0x25c80>
   36428:	vmul.f64	d5, d7, d6
   3642c:	vcmpe.f64	d8, d5
   36430:	vmrs	APSR_nzcv, fpscr
   36434:	blt	36f78 <__assert_fail@plt+0x25c8c>
   36438:	vmul.f64	d6, d7, d5
   3643c:	vcmpe.f64	d8, d6
   36440:	vmrs	APSR_nzcv, fpscr
   36444:	blt	36f80 <__assert_fail@plt+0x25c94>
   36448:	vmul.f64	d5, d7, d6
   3644c:	vcmpe.f64	d8, d5
   36450:	vmrs	APSR_nzcv, fpscr
   36454:	blt	36f8c <__assert_fail@plt+0x25ca0>
   36458:	vmul.f64	d6, d7, d5
   3645c:	vcmpe.f64	d8, d6
   36460:	vmrs	APSR_nzcv, fpscr
   36464:	blt	36f94 <__assert_fail@plt+0x25ca8>
   36468:	mov	r9, #8
   3646c:	and	r8, r4, #3
   36470:	cmp	r8, #1
   36474:	vdiv.f64	d9, d8, d6
   36478:	beq	36b24 <__assert_fail@plt+0x25838>
   3647c:	vldr	d7, [pc, #292]	; 365a8 <__assert_fail@plt+0x252bc>
   36480:	vmov	r0, r1, d9
   36484:	vcmpe.f64	d9, d7
   36488:	vmrs	APSR_nzcv, fpscr
   3648c:	bpl	364d4 <__assert_fail@plt+0x251e8>
   36490:	bl	3e170 <__assert_fail@plt+0x2ce84>
   36494:	cmp	r8, #0
   36498:	mov	r6, r0
   3649c:	mov	r7, r1
   364a0:	movne	r0, #0
   364a4:	bne	364c0 <__assert_fail@plt+0x251d4>
   364a8:	bl	3e0ac <__assert_fail@plt+0x2cdc0>
   364ac:	vmov	d7, r0, r1
   364b0:	vcmp.f64	d7, d9
   364b4:	vmrs	APSR_nzcv, fpscr
   364b8:	movne	r0, #1
   364bc:	moveq	r0, #0
   364c0:	adds	r2, r6, r0
   364c4:	adc	r3, r7, #0
   364c8:	mov	r0, r2
   364cc:	mov	r1, r3
   364d0:	bl	3e0ac <__assert_fail@plt+0x2cdc0>
   364d4:	ldr	r6, [sp, #12]
   364d8:	strd	r0, [sp]
   364dc:	ldr	r3, [pc, #220]	; 365c0 <__assert_fail@plt+0x252d4>
   364e0:	mvn	r2, #0
   364e4:	mov	r1, #1
   364e8:	mov	r0, r6
   364ec:	bl	111cc <__sprintf_chk@plt>
   364f0:	ldr	r3, [sp, #48]	; 0x30
   364f4:	mov	r0, r6
   364f8:	add	r6, r3, #1
   364fc:	bl	111a8 <strlen@plt>
   36500:	ands	r3, r4, #32
   36504:	cmp	r3, #0
   36508:	movne	r3, #1
   3650c:	moveq	r3, #2
   36510:	add	r3, r3, r6
   36514:	cmp	r0, r3
   36518:	mov	r7, r0
   3651c:	bls	36b70 <__assert_fail@plt+0x25884>
   36520:	vldr	d7, [pc, #136]	; 365b0 <__assert_fail@plt+0x252c4>
   36524:	vmul.f64	d9, d9, d7
   36528:	vldr	d7, [pc, #120]	; 365a8 <__assert_fail@plt+0x252bc>
   3652c:	vcmpe.f64	d9, d7
   36530:	vmrs	APSR_nzcv, fpscr
   36534:	bpl	36570 <__assert_fail@plt+0x25284>
   36538:	vmov	r0, r1, d9
   3653c:	bl	3e170 <__assert_fail@plt+0x2ce84>
   36540:	and	r3, r4, #3
   36544:	cmp	r3, #0
   36548:	mov	r6, r0
   3654c:	mov	r7, r1
   36550:	movne	r0, #0
   36554:	beq	36ea4 <__assert_fail@plt+0x25bb8>
   36558:	adds	r2, r6, r0
   3655c:	adc	r3, r7, #0
   36560:	mov	r0, r2
   36564:	mov	r1, r3
   36568:	bl	3e0ac <__assert_fail@plt+0x2cdc0>
   3656c:	vmov	d9, r0, r1
   36570:	vldr	d6, [pc, #56]	; 365b0 <__assert_fail@plt+0x252c4>
   36574:	ldr	r7, [sp, #12]
   36578:	ldr	r3, [pc, #68]	; 365c4 <__assert_fail@plt+0x252d8>
   3657c:	mvn	r2, #0
   36580:	vdiv.f64	d7, d9, d6
   36584:	mov	r1, #1
   36588:	mov	r0, r7
   3658c:	mov	r6, #0
   36590:	vstr	d7, [sp]
   36594:	bl	111cc <__sprintf_chk@plt>
   36598:	mov	r0, r7
   3659c:	bl	111a8 <strlen@plt>
   365a0:	mov	r7, r0
   365a4:	b	36a44 <__assert_fail@plt+0x25758>
   365a8:	andeq	r0, r0, r0
   365ac:	mvnsmi	r0, #0
   365b0:	andeq	r0, r0, r0
   365b4:	eormi	r0, r4, r0
   365b8:	andeq	r1, r4, ip, lsl #15
   365bc:	andeq	lr, r3, ip, ror sp
   365c0:	muleq	r4, r8, r7
   365c4:	muleq	r4, r0, r7
   365c8:	orrs	r3, r6, r7
   365cc:	beq	363b4 <__assert_fail@plt+0x250c8>
   365d0:	mov	r2, r6
   365d4:	mov	r3, r7
   365d8:	ldrd	r0, [sp, #168]	; 0xa8
   365dc:	bl	3e120 <__assert_fail@plt+0x2ce34>
   365e0:	orrs	r3, r2, r3
   365e4:	bne	363b4 <__assert_fail@plt+0x250c8>
   365e8:	mov	r2, r6
   365ec:	mov	r3, r7
   365f0:	ldrd	r0, [sp, #168]	; 0xa8
   365f4:	bl	3e120 <__assert_fail@plt+0x2ce34>
   365f8:	mov	sl, r0
   365fc:	mov	fp, r1
   36600:	mov	r2, r0
   36604:	mov	r3, r1
   36608:	mov	r0, r8
   3660c:	mov	r1, r9
   36610:	bl	3e120 <__assert_fail@plt+0x2ce34>
   36614:	mov	r1, #10
   36618:	umull	r6, r7, r2, r1
   3661c:	mla	r7, r1, r3, r7
   36620:	mov	r2, sl
   36624:	mov	r3, fp
   36628:	mov	r0, r6
   3662c:	mov	r1, r7
   36630:	bl	3e120 <__assert_fail@plt+0x2ce34>
   36634:	mov	r0, r8
   36638:	mov	r1, r9
   3663c:	strd	sl, [sp, #40]	; 0x28
   36640:	lsls	r8, r2, #1
   36644:	adc	r9, r3, r3
   36648:	mov	r2, sl
   3664c:	mov	r3, fp
   36650:	bl	3e120 <__assert_fail@plt+0x2ce34>
   36654:	ldrd	r2, [sp, #40]	; 0x28
   36658:	mov	sl, r0
   3665c:	mov	fp, r1
   36660:	mov	r0, r6
   36664:	mov	r1, r7
   36668:	bl	3e120 <__assert_fail@plt+0x2ce34>
   3666c:	ldrd	r2, [sp, #40]	; 0x28
   36670:	cmp	r3, r9
   36674:	cmpeq	r2, r8
   36678:	mov	r6, r0
   3667c:	bls	36e88 <__assert_fail@plt+0x25b9c>
   36680:	orrs	r3, r8, r9
   36684:	movne	r8, #1
   36688:	moveq	r8, #0
   3668c:	ands	r3, r4, #16
   36690:	str	r3, [sp, #40]	; 0x28
   36694:	beq	36d94 <__assert_fail@plt+0x25aa8>
   36698:	ldrd	r2, [sp, #16]
   3669c:	cmp	fp, r3
   366a0:	cmpeq	sl, r2
   366a4:	bcc	36e94 <__assert_fail@plt+0x25ba8>
   366a8:	mov	r0, sl
   366ac:	mov	r1, fp
   366b0:	bl	3e120 <__assert_fail@plt+0x2ce34>
   366b4:	ldr	r1, [sp, #28]
   366b8:	add	r2, r2, r2, lsl #2
   366bc:	add	r7, r6, r2, lsl #1
   366c0:	mov	r0, r7
   366c4:	bl	3db08 <__assert_fail@plt+0x2c81c>
   366c8:	asr	r6, r8, #1
   366cc:	ldrd	r2, [sp, #16]
   366d0:	mov	r0, sl
   366d4:	add	r9, r6, r1, lsl #1
   366d8:	mov	r1, fp
   366dc:	bl	3e120 <__assert_fail@plt+0x2ce34>
   366e0:	mov	sl, r0
   366e4:	mov	fp, r1
   366e8:	mov	r0, r7
   366ec:	ldr	r1, [sp, #28]
   366f0:	bl	3d91c <__assert_fail@plt+0x2c630>
   366f4:	ldr	r3, [sp, #28]
   366f8:	cmp	r3, r9
   366fc:	mov	r6, r0
   36700:	bls	36ecc <__assert_fail@plt+0x25be0>
   36704:	cmn	r8, r9
   36708:	movne	r8, #1
   3670c:	moveq	r8, #0
   36710:	ldrd	r2, [sp, #16]
   36714:	cmp	r3, fp
   36718:	cmpeq	r2, sl
   3671c:	bhi	37040 <__assert_fail@plt+0x25d54>
   36720:	mov	r0, sl
   36724:	mov	r1, fp
   36728:	bl	3e120 <__assert_fail@plt+0x2ce34>
   3672c:	ldr	r1, [sp, #28]
   36730:	add	r2, r2, r2, lsl #2
   36734:	add	r7, r6, r2, lsl #1
   36738:	mov	r0, r7
   3673c:	bl	3db08 <__assert_fail@plt+0x2c81c>
   36740:	asr	r6, r8, #1
   36744:	ldrd	r2, [sp, #16]
   36748:	mov	r0, sl
   3674c:	add	r9, r6, r1, lsl #1
   36750:	mov	r1, fp
   36754:	bl	3e120 <__assert_fail@plt+0x2ce34>
   36758:	mov	sl, r0
   3675c:	mov	fp, r1
   36760:	mov	r0, r7
   36764:	ldr	r1, [sp, #28]
   36768:	bl	3d91c <__assert_fail@plt+0x2c630>
   3676c:	ldr	r3, [sp, #28]
   36770:	cmp	r3, r9
   36774:	mov	r6, r0
   36778:	mov	r7, r0
   3677c:	bls	36ee4 <__assert_fail@plt+0x25bf8>
   36780:	cmn	r8, r9
   36784:	movne	r8, #1
   36788:	moveq	r8, #0
   3678c:	ldrd	r2, [sp, #16]
   36790:	cmp	fp, r3
   36794:	cmpeq	sl, r2
   36798:	bcc	37048 <__assert_fail@plt+0x25d5c>
   3679c:	mov	r0, sl
   367a0:	mov	r1, fp
   367a4:	bl	3e120 <__assert_fail@plt+0x2ce34>
   367a8:	ldr	r9, [sp, #28]
   367ac:	mov	r1, r9
   367b0:	add	r2, r2, r2, lsl #2
   367b4:	add	r6, r7, r2, lsl #1
   367b8:	mov	r0, r6
   367bc:	bl	3db08 <__assert_fail@plt+0x2c81c>
   367c0:	asr	r7, r8, #1
   367c4:	ldrd	r2, [sp, #16]
   367c8:	mov	r0, sl
   367cc:	add	r7, r7, r1, lsl #1
   367d0:	mov	r1, fp
   367d4:	bl	3e120 <__assert_fail@plt+0x2ce34>
   367d8:	mov	sl, r0
   367dc:	mov	fp, r1
   367e0:	mov	r0, r6
   367e4:	mov	r1, r9
   367e8:	bl	3d91c <__assert_fail@plt+0x2c630>
   367ec:	cmp	r9, r7
   367f0:	mov	r6, r0
   367f4:	mov	r9, r0
   367f8:	bls	36efc <__assert_fail@plt+0x25c10>
   367fc:	cmn	r8, r7
   36800:	movne	r8, #1
   36804:	moveq	r8, #0
   36808:	ldrd	r2, [sp, #16]
   3680c:	cmp	fp, r3
   36810:	cmpeq	sl, r2
   36814:	bcc	37050 <__assert_fail@plt+0x25d64>
   36818:	mov	r0, sl
   3681c:	mov	r1, fp
   36820:	bl	3e120 <__assert_fail@plt+0x2ce34>
   36824:	ldr	r1, [sp, #28]
   36828:	asr	r7, r8, #1
   3682c:	add	r2, r2, r2, lsl #2
   36830:	add	r6, r9, r2, lsl #1
   36834:	mov	r0, r6
   36838:	bl	3db08 <__assert_fail@plt+0x2c81c>
   3683c:	ldrd	r2, [sp, #16]
   36840:	mov	r0, sl
   36844:	add	r7, r7, r1, lsl #1
   36848:	mov	r1, fp
   3684c:	bl	3e120 <__assert_fail@plt+0x2ce34>
   36850:	ldr	r9, [sp, #28]
   36854:	mov	sl, r0
   36858:	mov	fp, r1
   3685c:	mov	r0, r6
   36860:	mov	r1, r9
   36864:	bl	3d91c <__assert_fail@plt+0x2c630>
   36868:	cmp	r9, r7
   3686c:	mov	r6, r0
   36870:	mov	r9, r0
   36874:	bls	36f14 <__assert_fail@plt+0x25c28>
   36878:	cmn	r8, r7
   3687c:	movne	r8, #1
   36880:	moveq	r8, #0
   36884:	ldrd	r2, [sp, #16]
   36888:	cmp	fp, r3
   3688c:	cmpeq	sl, r2
   36890:	bcc	37088 <__assert_fail@plt+0x25d9c>
   36894:	mov	r0, sl
   36898:	mov	r1, fp
   3689c:	bl	3e120 <__assert_fail@plt+0x2ce34>
   368a0:	ldr	r1, [sp, #28]
   368a4:	asr	r7, r8, #1
   368a8:	add	r2, r2, r2, lsl #2
   368ac:	add	r6, r9, r2, lsl #1
   368b0:	mov	r0, r6
   368b4:	bl	3db08 <__assert_fail@plt+0x2c81c>
   368b8:	ldrd	r2, [sp, #16]
   368bc:	mov	r0, sl
   368c0:	add	r7, r7, r1, lsl #1
   368c4:	mov	r1, fp
   368c8:	bl	3e120 <__assert_fail@plt+0x2ce34>
   368cc:	ldr	r9, [sp, #28]
   368d0:	mov	sl, r0
   368d4:	mov	fp, r1
   368d8:	mov	r0, r6
   368dc:	mov	r1, r9
   368e0:	bl	3d91c <__assert_fail@plt+0x2c630>
   368e4:	cmp	r9, r7
   368e8:	mov	r6, r0
   368ec:	mov	r9, r0
   368f0:	bls	36f2c <__assert_fail@plt+0x25c40>
   368f4:	cmn	r8, r7
   368f8:	movne	r8, #1
   368fc:	moveq	r8, #0
   36900:	ldrd	r2, [sp, #16]
   36904:	cmp	r3, fp
   36908:	cmpeq	r2, sl
   3690c:	bhi	37090 <__assert_fail@plt+0x25da4>
   36910:	mov	r0, sl
   36914:	mov	r1, fp
   36918:	bl	3e120 <__assert_fail@plt+0x2ce34>
   3691c:	ldr	r1, [sp, #28]
   36920:	asr	r7, r8, #1
   36924:	add	r2, r2, r2, lsl #2
   36928:	add	r6, r9, r2, lsl #1
   3692c:	mov	r0, r6
   36930:	bl	3db08 <__assert_fail@plt+0x2c81c>
   36934:	ldrd	r2, [sp, #16]
   36938:	mov	r0, sl
   3693c:	add	r7, r7, r1, lsl #1
   36940:	mov	r1, fp
   36944:	bl	3e120 <__assert_fail@plt+0x2ce34>
   36948:	ldr	r9, [sp, #28]
   3694c:	mov	sl, r0
   36950:	mov	fp, r1
   36954:	mov	r0, r6
   36958:	mov	r1, r9
   3695c:	bl	3d91c <__assert_fail@plt+0x2c630>
   36960:	cmp	r9, r7
   36964:	mov	r6, r0
   36968:	bls	36f44 <__assert_fail@plt+0x25c58>
   3696c:	cmn	r8, r7
   36970:	movne	r8, #1
   36974:	moveq	r8, #0
   36978:	mov	r9, #6
   3697c:	cmp	fp, #0
   36980:	cmpeq	sl, #9
   36984:	bhi	37034 <__assert_fail@plt+0x25d48>
   36988:	and	r3, r4, #3
   3698c:	cmp	r3, #1
   36990:	beq	36fc8 <__assert_fail@plt+0x25cdc>
   36994:	cmp	r8, #0
   36998:	and	r3, r4, #3
   3699c:	clz	r3, r3
   369a0:	lsr	r3, r3, #5
   369a4:	moveq	r3, #0
   369a8:	cmp	r3, #0
   369ac:	beq	36fa0 <__assert_fail@plt+0x25cb4>
   369b0:	add	r6, r6, #1
   369b4:	cmp	r6, #10
   369b8:	beq	37018 <__assert_fail@plt+0x25d2c>
   369bc:	add	r7, r6, #48	; 0x30
   369c0:	uxtb	r3, r7
   369c4:	ldr	r2, [sp, #24]
   369c8:	ldr	r0, [sp, #12]
   369cc:	add	r7, r2, #2
   369d0:	ldr	r2, [sp, #48]	; 0x30
   369d4:	strb	r3, [r0, #646]	; 0x286
   369d8:	sub	r1, r7, r2
   369dc:	str	r1, [sp, #24]
   369e0:	mov	r0, r1
   369e4:	mov	r8, #0
   369e8:	ldr	r1, [sp, #52]	; 0x34
   369ec:	bl	11058 <memcpy@plt>
   369f0:	mov	r6, r8
   369f4:	b	36da0 <__assert_fail@plt+0x25ab4>
   369f8:	and	r9, r4, #3
   369fc:	cmp	r9, #1
   36a00:	beq	36a14 <__assert_fail@plt+0x25728>
   36a04:	vldr	d7, [pc, #876]	; 36d78 <__assert_fail@plt+0x25a8c>
   36a08:	vcmpe.f64	d8, d7
   36a0c:	vmrs	APSR_nzcv, fpscr
   36a10:	bmi	36c3c <__assert_fail@plt+0x25950>
   36a14:	ldr	r6, [sp, #12]
   36a18:	ldr	r3, [pc, #872]	; 36d88 <__assert_fail@plt+0x25a9c>
   36a1c:	mvn	r2, #0
   36a20:	mov	r1, #1
   36a24:	mov	r0, r6
   36a28:	vstr	d8, [sp]
   36a2c:	bl	111cc <__sprintf_chk@plt>
   36a30:	mov	r0, r6
   36a34:	bl	111a8 <strlen@plt>
   36a38:	mov	r6, #0
   36a3c:	mvn	r9, #0
   36a40:	mov	r7, r0
   36a44:	ldr	r3, [sp, #8]
   36a48:	mov	r2, r7
   36a4c:	sub	r8, r3, r7
   36a50:	mov	r0, r8
   36a54:	ldr	r1, [sp, #12]
   36a58:	bl	11028 <memmove@plt>
   36a5c:	sub	r7, r7, r6
   36a60:	add	r7, r8, r7
   36a64:	tst	r4, #4
   36a68:	bne	36ba4 <__assert_fail@plt+0x258b8>
   36a6c:	tst	r4, #128	; 0x80
   36a70:	beq	36b08 <__assert_fail@plt+0x2581c>
   36a74:	cmn	r9, #1
   36a78:	beq	36c8c <__assert_fail@plt+0x259a0>
   36a7c:	and	r3, r4, #256	; 0x100
   36a80:	orrs	r2, r9, r3
   36a84:	beq	36b08 <__assert_fail@plt+0x2581c>
   36a88:	tst	r4, #64	; 0x40
   36a8c:	ldrne	r1, [sp, #12]
   36a90:	addne	r2, r1, #648	; 0x288
   36a94:	strne	r2, [sp, #8]
   36a98:	movne	r2, #32
   36a9c:	strbne	r2, [r1, #647]	; 0x287
   36aa0:	cmp	r9, #0
   36aa4:	beq	37098 <__assert_fail@plt+0x25dac>
   36aa8:	ldr	r2, [sp, #36]	; 0x24
   36aac:	ldr	r0, [sp, #8]
   36ab0:	cmp	r2, #0
   36ab4:	cmpeq	r9, #1
   36ab8:	ldr	r2, [sp, #8]
   36abc:	ldrne	r1, [pc, #712]	; 36d8c <__assert_fail@plt+0x25aa0>
   36ac0:	moveq	r1, #107	; 0x6b
   36ac4:	add	r2, r2, #1
   36ac8:	ldrbne	r1, [r1, r9]
   36acc:	cmp	r3, #0
   36ad0:	streq	r2, [sp, #8]
   36ad4:	strb	r1, [r0]
   36ad8:	beq	36b08 <__assert_fail@plt+0x2581c>
   36adc:	ldr	r3, [sp, #36]	; 0x24
   36ae0:	cmp	r9, #0
   36ae4:	cmpne	r3, #0
   36ae8:	movne	r2, r0
   36aec:	movne	r3, #105	; 0x69
   36af0:	strbne	r3, [r2, #1]
   36af4:	addne	r2, r2, #2
   36af8:	mov	r3, #66	; 0x42
   36afc:	strb	r3, [r2]
   36b00:	add	r3, r2, #1
   36b04:	str	r3, [sp, #8]
   36b08:	ldr	r2, [sp, #8]
   36b0c:	mov	r3, #0
   36b10:	mov	r0, r8
   36b14:	strb	r3, [r2]
   36b18:	add	sp, sp, #108	; 0x6c
   36b1c:	vpop	{d8-d9}
   36b20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   36b24:	ldr	r6, [sp, #12]
   36b28:	ldr	r3, [pc, #608]	; 36d90 <__assert_fail@plt+0x25aa4>
   36b2c:	mvn	r2, #0
   36b30:	and	r1, r4, #3
   36b34:	mov	r0, r6
   36b38:	vstr	d9, [sp]
   36b3c:	bl	111cc <__sprintf_chk@plt>
   36b40:	ldr	r3, [sp, #48]	; 0x30
   36b44:	mov	r0, r6
   36b48:	add	r6, r3, #1
   36b4c:	bl	111a8 <strlen@plt>
   36b50:	ands	r3, r4, #32
   36b54:	cmp	r3, #0
   36b58:	movne	r3, #1
   36b5c:	moveq	r3, #2
   36b60:	add	r3, r3, r6
   36b64:	cmp	r3, r0
   36b68:	mov	r7, r0
   36b6c:	bcc	36ec0 <__assert_fail@plt+0x25bd4>
   36b70:	tst	r4, #8
   36b74:	beq	36a44 <__assert_fail@plt+0x25758>
   36b78:	ldr	r3, [sp, #12]
   36b7c:	add	r3, r3, r7
   36b80:	ldrb	r3, [r3, #-1]
   36b84:	cmp	r3, #48	; 0x30
   36b88:	bne	36a44 <__assert_fail@plt+0x25758>
   36b8c:	vldr	d7, [pc, #492]	; 36d80 <__assert_fail@plt+0x25a94>
   36b90:	and	r3, r4, #3
   36b94:	cmp	r3, #1
   36b98:	vmul.f64	d9, d9, d7
   36b9c:	beq	36570 <__assert_fail@plt+0x25284>
   36ba0:	b	36528 <__assert_fail@plt+0x2523c>
   36ba4:	ldr	r0, [sp, #32]
   36ba8:	bl	111a8 <strlen@plt>
   36bac:	sub	r6, r7, r8
   36bb0:	mov	r1, r8
   36bb4:	mov	r2, r6
   36bb8:	mov	r3, #41	; 0x29
   36bbc:	mvn	sl, #0
   36bc0:	mov	fp, r0
   36bc4:	add	r0, sp, #60	; 0x3c
   36bc8:	bl	110d0 <__memcpy_chk@plt>
   36bcc:	ldr	r8, [sp, #32]
   36bd0:	b	36bd8 <__assert_fail@plt+0x258ec>
   36bd4:	bl	11058 <memcpy@plt>
   36bd8:	ldrb	r3, [r5]
   36bdc:	cmp	r3, #0
   36be0:	beq	36bf4 <__assert_fail@plt+0x25908>
   36be4:	cmp	r3, #255	; 0xff
   36be8:	movne	sl, r3
   36bec:	moveq	sl, r6
   36bf0:	add	r5, r5, #1
   36bf4:	cmp	sl, r6
   36bf8:	movcs	sl, r6
   36bfc:	sub	r3, r7, sl
   36c00:	sub	r6, r6, sl
   36c04:	add	r2, sp, #60	; 0x3c
   36c08:	add	r1, r2, r6
   36c0c:	mov	r0, r3
   36c10:	mov	r2, sl
   36c14:	sub	r7, r3, fp
   36c18:	bl	11058 <memcpy@plt>
   36c1c:	cmp	r6, #0
   36c20:	mov	r2, fp
   36c24:	mov	r1, r8
   36c28:	mov	r3, r0
   36c2c:	mov	r0, r7
   36c30:	bne	36bd4 <__assert_fail@plt+0x258e8>
   36c34:	mov	r8, r3
   36c38:	b	36a6c <__assert_fail@plt+0x25780>
   36c3c:	vmov	r0, r1, d8
   36c40:	bl	3e170 <__assert_fail@plt+0x2ce84>
   36c44:	cmp	r9, #0
   36c48:	mov	r6, r0
   36c4c:	mov	r7, r1
   36c50:	bne	36c6c <__assert_fail@plt+0x25980>
   36c54:	bl	3e0ac <__assert_fail@plt+0x2cdc0>
   36c58:	vmov	d7, r0, r1
   36c5c:	vcmp.f64	d7, d8
   36c60:	vmrs	APSR_nzcv, fpscr
   36c64:	movne	r8, #1
   36c68:	moveq	r8, #0
   36c6c:	adds	r0, r6, r8
   36c70:	adc	r1, r7, #0
   36c74:	bl	3e0ac <__assert_fail@plt+0x2cdc0>
   36c78:	vmov	d8, r0, r1
   36c7c:	b	36a14 <__assert_fail@plt+0x25728>
   36c80:	mov	r8, #0
   36c84:	mov	r6, r8
   36c88:	b	3668c <__assert_fail@plt+0x253a0>
   36c8c:	ldrd	r2, [sp, #168]	; 0xa8
   36c90:	cmp	r3, #0
   36c94:	cmpeq	r2, #1
   36c98:	bls	36fb8 <__assert_fail@plt+0x25ccc>
   36c9c:	ldrd	r6, [sp, #16]
   36ca0:	mov	r1, r3
   36ca4:	mov	r0, r2
   36ca8:	cmp	r1, r7
   36cac:	cmpeq	r0, r6
   36cb0:	bls	36fc0 <__assert_fail@plt+0x25cd4>
   36cb4:	mul	r1, r6, r7
   36cb8:	umull	r2, r3, r6, r6
   36cbc:	add	r3, r3, r1, lsl #1
   36cc0:	ldrd	r0, [sp, #168]	; 0xa8
   36cc4:	cmp	r1, r3
   36cc8:	cmpeq	r0, r2
   36ccc:	bls	36fe0 <__assert_fail@plt+0x25cf4>
   36cd0:	mul	r3, r6, r3
   36cd4:	umull	r0, r1, r6, r2
   36cd8:	mla	r2, r2, r7, r3
   36cdc:	add	r1, r2, r1
   36ce0:	ldrd	r2, [sp, #168]	; 0xa8
   36ce4:	cmp	r3, r1
   36ce8:	cmpeq	r2, r0
   36cec:	bls	36fe8 <__assert_fail@plt+0x25cfc>
   36cf0:	mul	r1, r6, r1
   36cf4:	umull	r2, r3, r6, r0
   36cf8:	mla	r0, r0, r7, r1
   36cfc:	add	r3, r0, r3
   36d00:	ldrd	r0, [sp, #168]	; 0xa8
   36d04:	cmp	r1, r3
   36d08:	cmpeq	r0, r2
   36d0c:	bls	36ff0 <__assert_fail@plt+0x25d04>
   36d10:	mul	r3, r6, r3
   36d14:	umull	r0, r1, r6, r2
   36d18:	mla	r2, r2, r7, r3
   36d1c:	add	r1, r2, r1
   36d20:	ldrd	r2, [sp, #168]	; 0xa8
   36d24:	cmp	r3, r1
   36d28:	cmpeq	r2, r0
   36d2c:	bls	36ff8 <__assert_fail@plt+0x25d0c>
   36d30:	mul	r1, r6, r1
   36d34:	umull	r2, r3, r6, r0
   36d38:	mla	r0, r0, r7, r1
   36d3c:	add	r3, r0, r3
   36d40:	ldrd	r0, [sp, #168]	; 0xa8
   36d44:	cmp	r1, r3
   36d48:	cmpeq	r0, r2
   36d4c:	bls	37000 <__assert_fail@plt+0x25d14>
   36d50:	mul	r3, r6, r3
   36d54:	umull	r0, r1, r6, r2
   36d58:	mla	r2, r2, r7, r3
   36d5c:	add	r1, r2, r1
   36d60:	ldrd	r2, [sp, #168]	; 0xa8
   36d64:	cmp	r3, r1
   36d68:	cmpeq	r2, r0
   36d6c:	movhi	r9, #8
   36d70:	movls	r9, #7
   36d74:	b	36a7c <__assert_fail@plt+0x25790>
   36d78:	andeq	r0, r0, r0
   36d7c:	mvnsmi	r0, #0
   36d80:	andeq	r0, r0, r0
   36d84:	eormi	r0, r4, r0
   36d88:	muleq	r4, r0, r7
   36d8c:	andeq	r1, r4, ip, ror #14
   36d90:	muleq	r4, r8, r7
   36d94:	ldr	r3, [sp, #8]
   36d98:	mvn	r9, #0
   36d9c:	str	r3, [sp, #24]
   36da0:	and	r3, r4, #3
   36da4:	cmp	r3, #1
   36da8:	beq	36e0c <__assert_fail@plt+0x25b20>
   36dac:	and	r3, r4, #3
   36db0:	cmp	r3, #0
   36db4:	bne	36e34 <__assert_fail@plt+0x25b48>
   36db8:	add	r7, r6, r8
   36dbc:	cmp	r7, #0
   36dc0:	ble	36e34 <__assert_fail@plt+0x25b48>
   36dc4:	adds	sl, sl, #1
   36dc8:	adc	fp, fp, #0
   36dcc:	ands	r3, r4, #16
   36dd0:	cmp	r3, #0
   36dd4:	beq	36e34 <__assert_fail@plt+0x25b48>
   36dd8:	ldrd	r2, [sp, #16]
   36ddc:	cmp	fp, r3
   36de0:	cmpeq	sl, r2
   36de4:	bne	36e34 <__assert_fail@plt+0x25b48>
   36de8:	tst	r4, #8
   36dec:	add	r9, r9, #1
   36df0:	beq	37058 <__assert_fail@plt+0x25d6c>
   36df4:	ldr	r2, [sp, #24]
   36df8:	mov	r3, #49	; 0x31
   36dfc:	sub	r8, r2, #1
   36e00:	strb	r3, [r2, #-1]
   36e04:	mov	r7, r2
   36e08:	b	36a64 <__assert_fail@plt+0x25778>
   36e0c:	and	r2, sl, #1
   36e10:	adds	r2, r2, r8
   36e14:	mov	r3, #0
   36e18:	adc	r3, r3, r8, asr #31
   36e1c:	orr	r7, r2, r3
   36e20:	cmp	r7, #0
   36e24:	moveq	r7, r6
   36e28:	addne	r7, r6, #1
   36e2c:	cmp	r7, #5
   36e30:	bgt	36dc4 <__assert_fail@plt+0x25ad8>
   36e34:	ldr	r8, [sp, #24]
   36e38:	mov	r6, #10
   36e3c:	mov	r7, #0
   36e40:	mov	r0, sl
   36e44:	mov	r1, fp
   36e48:	mov	r2, r6
   36e4c:	mov	r3, r7
   36e50:	bl	3e120 <__assert_fail@plt+0x2ce34>
   36e54:	mov	r0, sl
   36e58:	mov	r1, fp
   36e5c:	mov	r3, r7
   36e60:	add	r2, r2, #48	; 0x30
   36e64:	strb	r2, [r8, #-1]!
   36e68:	mov	r2, r6
   36e6c:	bl	3e120 <__assert_fail@plt+0x2ce34>
   36e70:	mov	sl, r0
   36e74:	mov	fp, r1
   36e78:	orrs	r3, sl, fp
   36e7c:	bne	36e40 <__assert_fail@plt+0x25b54>
   36e80:	ldr	r7, [sp, #24]
   36e84:	b	36a64 <__assert_fail@plt+0x25778>
   36e88:	movcc	r8, #3
   36e8c:	movcs	r8, #2
   36e90:	b	3668c <__assert_fail@plt+0x253a0>
   36e94:	ldr	r3, [sp, #8]
   36e98:	mov	r9, #0
   36e9c:	str	r3, [sp, #24]
   36ea0:	b	36da0 <__assert_fail@plt+0x25ab4>
   36ea4:	bl	3e0ac <__assert_fail@plt+0x2cdc0>
   36ea8:	vmov	d7, r0, r1
   36eac:	vcmp.f64	d7, d9
   36eb0:	vmrs	APSR_nzcv, fpscr
   36eb4:	movne	r0, #1
   36eb8:	moveq	r0, #0
   36ebc:	b	36558 <__assert_fail@plt+0x2526c>
   36ec0:	vldr	d7, [pc, #480]	; 370a8 <__assert_fail@plt+0x25dbc>
   36ec4:	vmul.f64	d9, d9, d7
   36ec8:	b	36570 <__assert_fail@plt+0x25284>
   36ecc:	mov	r2, r3
   36ed0:	add	r3, r8, r9
   36ed4:	cmp	r2, r3
   36ed8:	movcs	r8, #2
   36edc:	movcc	r8, #3
   36ee0:	b	36710 <__assert_fail@plt+0x25424>
   36ee4:	mov	r2, r3
   36ee8:	add	r3, r8, r9
   36eec:	cmp	r2, r3
   36ef0:	movcs	r8, #2
   36ef4:	movcc	r8, #3
   36ef8:	b	3678c <__assert_fail@plt+0x254a0>
   36efc:	ldr	r3, [sp, #28]
   36f00:	add	r7, r8, r7
   36f04:	cmp	r3, r7
   36f08:	movcs	r8, #2
   36f0c:	movcc	r8, #3
   36f10:	b	36808 <__assert_fail@plt+0x2551c>
   36f14:	ldr	r3, [sp, #28]
   36f18:	add	r7, r8, r7
   36f1c:	cmp	r3, r7
   36f20:	movcs	r8, #2
   36f24:	movcc	r8, #3
   36f28:	b	36884 <__assert_fail@plt+0x25598>
   36f2c:	ldr	r3, [sp, #28]
   36f30:	add	r7, r8, r7
   36f34:	cmp	r3, r7
   36f38:	movcs	r8, #2
   36f3c:	movcc	r8, #3
   36f40:	b	36900 <__assert_fail@plt+0x25614>
   36f44:	add	r7, r8, r7
   36f48:	cmp	r9, r7
   36f4c:	movcs	r8, #2
   36f50:	movcc	r8, #3
   36f54:	b	36978 <__assert_fail@plt+0x2568c>
   36f58:	vmov.f64	d6, d7
   36f5c:	mov	r9, #1
   36f60:	b	3646c <__assert_fail@plt+0x25180>
   36f64:	mov	r9, #2
   36f68:	b	3646c <__assert_fail@plt+0x25180>
   36f6c:	vmov.f64	d6, d5
   36f70:	mov	r9, #3
   36f74:	b	3646c <__assert_fail@plt+0x25180>
   36f78:	mov	r9, #4
   36f7c:	b	3646c <__assert_fail@plt+0x25180>
   36f80:	vmov.f64	d6, d5
   36f84:	mov	r9, #5
   36f88:	b	3646c <__assert_fail@plt+0x25180>
   36f8c:	mov	r9, #6
   36f90:	b	3646c <__assert_fail@plt+0x25180>
   36f94:	vmov.f64	d6, d5
   36f98:	mov	r9, #7
   36f9c:	b	3646c <__assert_fail@plt+0x25180>
   36fa0:	cmp	r6, #0
   36fa4:	bne	369bc <__assert_fail@plt+0x256d0>
   36fa8:	tst	r4, #8
   36fac:	bne	37008 <__assert_fail@plt+0x25d1c>
   36fb0:	mov	r3, #48	; 0x30
   36fb4:	b	369c4 <__assert_fail@plt+0x256d8>
   36fb8:	mov	r9, #0
   36fbc:	b	36a7c <__assert_fail@plt+0x25790>
   36fc0:	mov	r9, #1
   36fc4:	b	36a7c <__assert_fail@plt+0x25790>
   36fc8:	and	r3, r6, #1
   36fcc:	add	r3, r3, r8
   36fd0:	cmp	r3, #2
   36fd4:	movle	r3, #0
   36fd8:	movgt	r3, #1
   36fdc:	b	369a8 <__assert_fail@plt+0x256bc>
   36fe0:	mov	r9, #2
   36fe4:	b	36a7c <__assert_fail@plt+0x25790>
   36fe8:	mov	r9, #3
   36fec:	b	36a7c <__assert_fail@plt+0x25790>
   36ff0:	mov	r9, #4
   36ff4:	b	36a7c <__assert_fail@plt+0x25790>
   36ff8:	mov	r9, #5
   36ffc:	b	36a7c <__assert_fail@plt+0x25790>
   37000:	mov	r9, #6
   37004:	b	36a7c <__assert_fail@plt+0x25790>
   37008:	ldr	r3, [sp, #8]
   3700c:	mov	r6, #0
   37010:	str	r3, [sp, #24]
   37014:	b	36da0 <__assert_fail@plt+0x25ab4>
   37018:	adds	sl, sl, #1
   3701c:	adc	fp, fp, #0
   37020:	cmp	fp, #0
   37024:	cmpeq	sl, #10
   37028:	mov	r8, #0
   3702c:	moveq	r6, r8
   37030:	bne	36fa8 <__assert_fail@plt+0x25cbc>
   37034:	ldr	r3, [sp, #8]
   37038:	str	r3, [sp, #24]
   3703c:	b	36da0 <__assert_fail@plt+0x25ab4>
   37040:	mov	r9, #1
   37044:	b	3697c <__assert_fail@plt+0x25690>
   37048:	mov	r9, #2
   3704c:	b	3697c <__assert_fail@plt+0x25690>
   37050:	mov	r9, #3
   37054:	b	3697c <__assert_fail@plt+0x25690>
   37058:	ldr	ip, [sp, #48]	; 0x30
   3705c:	ldr	r1, [sp, #24]
   37060:	mvn	r3, ip
   37064:	add	r3, r1, r3
   37068:	mov	r2, #48	; 0x30
   3706c:	strb	r2, [r1, #-1]
   37070:	mov	r0, r3
   37074:	ldr	r1, [sp, #52]	; 0x34
   37078:	mov	r2, ip
   3707c:	str	r3, [sp, #24]
   37080:	bl	11058 <memcpy@plt>
   37084:	b	36df4 <__assert_fail@plt+0x25b08>
   37088:	mov	r9, #4
   3708c:	b	3697c <__assert_fail@plt+0x25690>
   37090:	mov	r9, #5
   37094:	b	3697c <__assert_fail@plt+0x25690>
   37098:	cmp	r3, #0
   3709c:	ldrne	r2, [sp, #8]
   370a0:	bne	36af8 <__assert_fail@plt+0x2580c>
   370a4:	b	36b08 <__assert_fail@plt+0x2581c>
   370a8:	andeq	r0, r0, r0
   370ac:	eormi	r0, r4, r0
   370b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   370b4:	subs	r4, r0, #0
   370b8:	sub	sp, sp, #20
   370bc:	mov	r8, r1
   370c0:	mov	r7, r2
   370c4:	beq	371d4 <__assert_fail@plt+0x25ee8>
   370c8:	ldrb	r3, [r4]
   370cc:	ldr	r5, [pc, #384]	; 37254 <__assert_fail@plt+0x25f68>
   370d0:	cmp	r3, #39	; 0x27
   370d4:	addeq	r4, r4, #1
   370d8:	mov	r3, #4
   370dc:	add	r2, r5, #12
   370e0:	add	r1, r5, #20
   370e4:	mov	r0, r4
   370e8:	moveq	r9, #164	; 0xa4
   370ec:	moveq	fp, #420	; 0x1a4
   370f0:	moveq	sl, #388	; 0x184
   370f4:	moveq	r6, #4
   370f8:	movne	r9, #160	; 0xa0
   370fc:	movne	fp, #416	; 0x1a0
   37100:	movne	sl, #384	; 0x180
   37104:	movne	r6, #0
   37108:	bl	1ad64 <__assert_fail@plt+0x9a78>
   3710c:	cmp	r0, #0
   37110:	blt	37170 <__assert_fail@plt+0x25e84>
   37114:	add	r5, r5, r0, lsl #2
   37118:	mov	r1, #0
   3711c:	ldr	ip, [r5, #12]
   37120:	mov	r0, #1
   37124:	mov	r2, r0
   37128:	orr	r6, r6, ip
   3712c:	mov	r3, r1
   37130:	str	r0, [r7]
   37134:	str	r1, [r7, #4]
   37138:	mov	r0, #0
   3713c:	str	r6, [r8]
   37140:	orrs	r3, r2, r3
   37144:	bne	37168 <__assert_fail@plt+0x25e7c>
   37148:	ldr	r0, [pc, #264]	; 37258 <__assert_fail@plt+0x25f6c>
   3714c:	bl	11130 <getenv@plt>
   37150:	mov	r3, #0
   37154:	cmp	r0, #0
   37158:	movne	r2, #512	; 0x200
   3715c:	moveq	r2, #1024	; 0x400
   37160:	mov	r0, #4
   37164:	strd	r2, [r7]
   37168:	add	sp, sp, #20
   3716c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   37170:	ldr	r2, [pc, #228]	; 3725c <__assert_fail@plt+0x25f70>
   37174:	mov	r3, r7
   37178:	str	r2, [sp]
   3717c:	add	r1, sp, #12
   37180:	mov	r2, #0
   37184:	mov	r0, r4
   37188:	bl	3c668 <__assert_fail@plt+0x2b37c>
   3718c:	cmp	r0, #0
   37190:	bne	37218 <__assert_fail@plt+0x25f2c>
   37194:	ldrb	r3, [r4]
   37198:	sub	r3, r3, #48	; 0x30
   3719c:	cmp	r3, #9
   371a0:	bls	371cc <__assert_fail@plt+0x25ee0>
   371a4:	ldr	r2, [sp, #12]
   371a8:	cmp	r4, r2
   371ac:	bne	371bc <__assert_fail@plt+0x25ed0>
   371b0:	b	37228 <__assert_fail@plt+0x25f3c>
   371b4:	cmp	r2, r4
   371b8:	beq	37228 <__assert_fail@plt+0x25f3c>
   371bc:	ldrb	r3, [r4, #1]!
   371c0:	sub	r3, r3, #48	; 0x30
   371c4:	cmp	r3, #9
   371c8:	bhi	371b4 <__assert_fail@plt+0x25ec8>
   371cc:	ldrd	r2, [r7]
   371d0:	b	37138 <__assert_fail@plt+0x25e4c>
   371d4:	ldr	r0, [pc, #132]	; 37260 <__assert_fail@plt+0x25f74>
   371d8:	bl	11130 <getenv@plt>
   371dc:	subs	r4, r0, #0
   371e0:	bne	370c8 <__assert_fail@plt+0x25ddc>
   371e4:	ldr	r0, [pc, #120]	; 37264 <__assert_fail@plt+0x25f78>
   371e8:	bl	11130 <getenv@plt>
   371ec:	subs	r4, r0, #0
   371f0:	bne	370c8 <__assert_fail@plt+0x25ddc>
   371f4:	ldr	r0, [pc, #92]	; 37258 <__assert_fail@plt+0x25f6c>
   371f8:	bl	11130 <getenv@plt>
   371fc:	mov	r3, #0
   37200:	mov	r6, #0
   37204:	cmp	r0, #0
   37208:	movne	r2, #512	; 0x200
   3720c:	moveq	r2, #1024	; 0x400
   37210:	strd	r2, [r7]
   37214:	b	37138 <__assert_fail@plt+0x25e4c>
   37218:	mov	r3, #0
   3721c:	str	r3, [r8]
   37220:	ldrd	r2, [r7]
   37224:	b	37140 <__assert_fail@plt+0x25e54>
   37228:	ldrb	r3, [r2, #-1]
   3722c:	cmp	r3, #66	; 0x42
   37230:	beq	3723c <__assert_fail@plt+0x25f50>
   37234:	mov	r6, r9
   37238:	b	371cc <__assert_fail@plt+0x25ee0>
   3723c:	ldrb	r3, [r2, #-2]
   37240:	cmp	r3, #105	; 0x69
   37244:	movne	r6, sl
   37248:	bne	371cc <__assert_fail@plt+0x25ee0>
   3724c:	mov	r9, fp
   37250:	b	37234 <__assert_fail@plt+0x25f48>
   37254:	andeq	r1, r4, ip, ror #14
   37258:			; <UNDEFINED> instruction: 0x000417b8
   3725c:	andeq	r1, r4, r8, asr #15
   37260:	andeq	r1, r4, r0, lsr #15
   37264:	andeq	r1, r4, ip, lsr #15
   37268:	push	{r4, r5, r6, r8, r9, lr}
   3726c:	mov	r4, r0
   37270:	mov	r5, r1
   37274:	add	r6, r2, #20
   37278:	mov	r8, #10
   3727c:	mov	r9, #0
   37280:	mov	r3, #0
   37284:	strb	r3, [r2, #20]
   37288:	mov	r0, r4
   3728c:	mov	r1, r5
   37290:	mov	r2, r8
   37294:	mov	r3, r9
   37298:	bl	3e120 <__assert_fail@plt+0x2ce34>
   3729c:	mov	r0, r4
   372a0:	mov	r1, r5
   372a4:	mov	r3, r9
   372a8:	add	r2, r2, #48	; 0x30
   372ac:	strb	r2, [r6, #-1]!
   372b0:	mov	r2, r8
   372b4:	bl	3e120 <__assert_fail@plt+0x2ce34>
   372b8:	mov	r4, r0
   372bc:	mov	r5, r1
   372c0:	orrs	r3, r4, r5
   372c4:	bne	37288 <__assert_fail@plt+0x25f9c>
   372c8:	mov	r0, r6
   372cc:	pop	{r4, r5, r6, r8, r9, pc}
   372d0:	push	{r4, r5, r6, lr}
   372d4:	subs	r4, r0, #0
   372d8:	beq	3734c <__assert_fail@plt+0x26060>
   372dc:	mov	r1, #47	; 0x2f
   372e0:	bl	1125c <strrchr@plt>
   372e4:	subs	r5, r0, #0
   372e8:	beq	37338 <__assert_fail@plt+0x2604c>
   372ec:	add	r6, r5, #1
   372f0:	sub	r3, r6, r4
   372f4:	cmp	r3, #6
   372f8:	ble	37338 <__assert_fail@plt+0x2604c>
   372fc:	mov	r2, #7
   37300:	ldr	r1, [pc, #96]	; 37368 <__assert_fail@plt+0x2607c>
   37304:	sub	r0, r5, #6
   37308:	bl	112bc <strncmp@plt>
   3730c:	cmp	r0, #0
   37310:	bne	37338 <__assert_fail@plt+0x2604c>
   37314:	mov	r2, #3
   37318:	ldr	r1, [pc, #76]	; 3736c <__assert_fail@plt+0x26080>
   3731c:	mov	r0, r6
   37320:	bl	112bc <strncmp@plt>
   37324:	cmp	r0, #0
   37328:	movne	r4, r6
   3732c:	ldreq	r3, [pc, #60]	; 37370 <__assert_fail@plt+0x26084>
   37330:	addeq	r4, r5, #4
   37334:	streq	r4, [r3]
   37338:	ldr	r2, [pc, #52]	; 37374 <__assert_fail@plt+0x26088>
   3733c:	ldr	r3, [pc, #52]	; 37378 <__assert_fail@plt+0x2608c>
   37340:	str	r4, [r2]
   37344:	str	r4, [r3]
   37348:	pop	{r4, r5, r6, pc}
   3734c:	ldr	r3, [pc, #40]	; 3737c <__assert_fail@plt+0x26090>
   37350:	mov	r2, #55	; 0x37
   37354:	mov	r1, #1
   37358:	ldr	r3, [r3]
   3735c:	ldr	r0, [pc, #28]	; 37380 <__assert_fail@plt+0x26094>
   37360:	bl	110dc <fwrite@plt>
   37364:	bl	112c8 <abort@plt>
   37368:	andeq	r1, r4, r8, lsr #16
   3736c:	andeq	r1, r4, r0, lsr r8
   37370:	andeq	r2, r5, r8, lsl #3
   37374:	ldrdeq	r2, [r5], -r8
   37378:	andeq	r2, r5, ip, lsl #3
   3737c:	muleq	r5, r8, r1
   37380:	strdeq	r1, [r4], -r0
   37384:	push	{r4, r5, r6, lr}
   37388:	mov	r4, r0
   3738c:	mov	r5, r1
   37390:	bl	3d754 <__assert_fail@plt+0x2c468>
   37394:	ldrb	r3, [r0]
   37398:	bic	r3, r3, #32
   3739c:	cmp	r3, #85	; 0x55
   373a0:	bne	37400 <__assert_fail@plt+0x26114>
   373a4:	ldrb	r3, [r0, #1]
   373a8:	bic	r3, r3, #32
   373ac:	cmp	r3, #84	; 0x54
   373b0:	bne	3743c <__assert_fail@plt+0x26150>
   373b4:	ldrb	r3, [r0, #2]
   373b8:	bic	r3, r3, #32
   373bc:	cmp	r3, #70	; 0x46
   373c0:	bne	3743c <__assert_fail@plt+0x26150>
   373c4:	ldrb	r3, [r0, #3]
   373c8:	cmp	r3, #45	; 0x2d
   373cc:	bne	3743c <__assert_fail@plt+0x26150>
   373d0:	ldrb	r3, [r0, #4]
   373d4:	cmp	r3, #56	; 0x38
   373d8:	bne	3743c <__assert_fail@plt+0x26150>
   373dc:	ldrb	r3, [r0, #5]
   373e0:	cmp	r3, #0
   373e4:	bne	3743c <__assert_fail@plt+0x26150>
   373e8:	ldrb	r2, [r4]
   373ec:	ldr	r3, [pc, #152]	; 3748c <__assert_fail@plt+0x261a0>
   373f0:	ldr	r0, [pc, #152]	; 37490 <__assert_fail@plt+0x261a4>
   373f4:	cmp	r2, #96	; 0x60
   373f8:	movne	r0, r3
   373fc:	pop	{r4, r5, r6, pc}
   37400:	cmp	r3, #71	; 0x47
   37404:	bne	3743c <__assert_fail@plt+0x26150>
   37408:	ldrb	r3, [r0, #1]
   3740c:	bic	r3, r3, #32
   37410:	cmp	r3, #66	; 0x42
   37414:	bne	3743c <__assert_fail@plt+0x26150>
   37418:	ldrb	r3, [r0, #2]
   3741c:	cmp	r3, #49	; 0x31
   37420:	bne	3743c <__assert_fail@plt+0x26150>
   37424:	ldrb	r3, [r0, #3]
   37428:	cmp	r3, #56	; 0x38
   3742c:	bne	3743c <__assert_fail@plt+0x26150>
   37430:	ldrb	r3, [r0, #4]
   37434:	cmp	r3, #48	; 0x30
   37438:	beq	37450 <__assert_fail@plt+0x26164>
   3743c:	ldr	r3, [pc, #80]	; 37494 <__assert_fail@plt+0x261a8>
   37440:	cmp	r5, #9
   37444:	ldr	r0, [pc, #76]	; 37498 <__assert_fail@plt+0x261ac>
   37448:	movne	r0, r3
   3744c:	pop	{r4, r5, r6, pc}
   37450:	ldrb	r3, [r0, #5]
   37454:	cmp	r3, #51	; 0x33
   37458:	bne	3743c <__assert_fail@plt+0x26150>
   3745c:	ldrb	r3, [r0, #6]
   37460:	cmp	r3, #48	; 0x30
   37464:	bne	3743c <__assert_fail@plt+0x26150>
   37468:	ldrb	r3, [r0, #7]
   3746c:	cmp	r3, #0
   37470:	bne	3743c <__assert_fail@plt+0x26150>
   37474:	ldrb	r2, [r4]
   37478:	ldr	r3, [pc, #28]	; 3749c <__assert_fail@plt+0x261b0>
   3747c:	ldr	r0, [pc, #28]	; 374a0 <__assert_fail@plt+0x261b4>
   37480:	cmp	r2, #96	; 0x60
   37484:	movne	r0, r3
   37488:	pop	{r4, r5, r6, pc}
   3748c:	andeq	r1, r4, ip, lsl #17
   37490:	andeq	r1, r4, r8, lsl #17
   37494:	muleq	r4, ip, r8
   37498:	muleq	r4, r8, r8
   3749c:	muleq	r4, r4, r8
   374a0:	muleq	r4, r0, r8
   374a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   374a8:	sub	sp, sp, #140	; 0x8c
   374ac:	mov	r9, r1
   374b0:	str	r3, [sp, #24]
   374b4:	mov	r3, #1
   374b8:	mov	sl, r0
   374bc:	str	r2, [sp, #44]	; 0x2c
   374c0:	str	r3, [sp, #28]
   374c4:	bl	110f4 <__ctype_get_mb_cur_max@plt>
   374c8:	ldr	r3, [sp, #180]	; 0xb4
   374cc:	mov	fp, r9
   374d0:	mov	r9, sl
   374d4:	lsr	r3, r3, #1
   374d8:	and	r3, r3, #1
   374dc:	str	r3, [sp, #40]	; 0x28
   374e0:	ldr	r3, [sp, #180]	; 0xb4
   374e4:	mov	r2, #0
   374e8:	and	r3, r3, #4
   374ec:	str	r3, [sp, #100]	; 0x64
   374f0:	ldr	r3, [sp, #180]	; 0xb4
   374f4:	str	r2, [sp, #76]	; 0x4c
   374f8:	and	r3, r3, #1
   374fc:	str	r3, [sp, #96]	; 0x60
   37500:	str	r2, [sp, #36]	; 0x24
   37504:	str	r2, [sp, #56]	; 0x38
   37508:	str	r2, [sp, #68]	; 0x44
   3750c:	str	r2, [sp, #72]	; 0x48
   37510:	str	r2, [sp, #84]	; 0x54
   37514:	str	r0, [sp, #80]	; 0x50
   37518:	ldr	r3, [sp, #176]	; 0xb0
   3751c:	cmp	r3, #10
   37520:	ldrls	pc, [pc, r3, lsl #2]
   37524:	b	386fc <__assert_fail@plt+0x27410>
   37528:	andeq	r7, r3, r4, asr r5
   3752c:	andeq	r7, r3, r4, ror r8
   37530:	andeq	r7, r3, ip, asr #19
   37534:	andeq	r7, r3, r8, lsr #17
   37538:	andeq	r7, r3, r0, lsr #20
   3753c:	andeq	r7, r3, r0, lsl #20
   37540:	andeq	r7, r3, r8, asr #17
   37544:	andeq	r7, r3, ip, ror #17
   37548:	andeq	r7, r3, r4, lsl r9
   3754c:	andeq	r7, r3, r4, lsl r9
   37550:	andeq	r7, r3, r4, lsl r9
   37554:	mov	r3, #0
   37558:	ldr	r1, [sp, #56]	; 0x38
   3755c:	ldr	r2, [sp, #176]	; 0xb0
   37560:	ldr	lr, [sp, #176]	; 0xb0
   37564:	mov	r8, r3
   37568:	mov	ip, r3
   3756c:	str	r3, [sp, #40]	; 0x28
   37570:	mov	r3, r1
   37574:	cmp	r2, #2
   37578:	moveq	r3, #0
   3757c:	andne	r3, r3, #1
   37580:	mov	r0, r3
   37584:	str	r3, [sp, #92]	; 0x5c
   37588:	ldr	r3, [sp, #68]	; 0x44
   3758c:	sub	lr, lr, #2
   37590:	adds	r2, r3, #0
   37594:	movne	r2, #1
   37598:	and	r3, r1, ip
   3759c:	and	r3, r2, r3
   375a0:	clz	lr, lr
   375a4:	str	r3, [sp, #88]	; 0x58
   375a8:	lsr	lr, lr, #5
   375ac:	mov	r3, ip
   375b0:	and	r3, r3, lr
   375b4:	mov	sl, #0
   375b8:	and	r0, r2, r0
   375bc:	str	r3, [sp, #64]	; 0x40
   375c0:	eor	r3, r1, #1
   375c4:	str	lr, [sp, #52]	; 0x34
   375c8:	str	r0, [sp, #48]	; 0x30
   375cc:	str	r3, [sp, #60]	; 0x3c
   375d0:	ldr	r3, [sp, #24]
   375d4:	cmn	r3, #1
   375d8:	beq	37b08 <__assert_fail@plt+0x2681c>
   375dc:	subs	r7, r3, sl
   375e0:	movne	r7, #1
   375e4:	cmp	r7, #0
   375e8:	beq	37b20 <__assert_fail@plt+0x26834>
   375ec:	ldr	r3, [sp, #48]	; 0x30
   375f0:	cmp	r3, #0
   375f4:	beq	37e8c <__assert_fail@plt+0x26ba0>
   375f8:	ldr	r2, [sp, #68]	; 0x44
   375fc:	ldr	r1, [sp, #24]
   37600:	cmp	r2, #1
   37604:	mov	r3, r2
   37608:	movls	r3, #0
   3760c:	movhi	r3, #1
   37610:	cmn	r1, #1
   37614:	movne	r3, #0
   37618:	cmp	r3, #0
   3761c:	add	r4, sl, r2
   37620:	beq	37630 <__assert_fail@plt+0x26344>
   37624:	ldr	r0, [sp, #44]	; 0x2c
   37628:	bl	111a8 <strlen@plt>
   3762c:	str	r0, [sp, #24]
   37630:	ldr	r3, [sp, #24]
   37634:	cmp	r3, r4
   37638:	ldr	r3, [sp, #44]	; 0x2c
   3763c:	add	r5, r3, sl
   37640:	bcc	37e94 <__assert_fail@plt+0x26ba8>
   37644:	mov	r0, r5
   37648:	ldr	r2, [sp, #68]	; 0x44
   3764c:	ldr	r1, [sp, #72]	; 0x48
   37650:	bl	11088 <memcmp@plt>
   37654:	cmp	r0, #0
   37658:	bne	37e94 <__assert_fail@plt+0x26ba8>
   3765c:	ldr	r3, [sp, #40]	; 0x28
   37660:	cmp	r3, #0
   37664:	bne	38850 <__assert_fail@plt+0x27564>
   37668:	ldrb	r4, [r5]
   3766c:	cmp	r4, #126	; 0x7e
   37670:	ldrls	pc, [pc, r4, lsl #2]
   37674:	b	3878c <__assert_fail@plt+0x274a0>
   37678:	andeq	r7, r3, ip, asr #26
   3767c:	andeq	r8, r3, ip, lsl #15
   37680:	andeq	r8, r3, ip, lsl #15
   37684:	andeq	r8, r3, ip, lsl #15
   37688:	andeq	r8, r3, ip, lsl #15
   3768c:	andeq	r8, r3, ip, lsl #15
   37690:	andeq	r8, r3, ip, lsl #15
   37694:	andeq	r7, r3, r8, lsr sp
   37698:	andeq	r7, r3, r4, lsr #26
   3769c:	andeq	r7, r3, r0, lsl #26
   376a0:	andeq	r7, r3, r0, ror #25
   376a4:	andeq	r7, r3, r0, lsl sp
   376a8:	andeq	r7, r3, r8, asr #24
   376ac:	andeq	r7, r3, ip, ror lr
   376b0:	andeq	r8, r3, ip, lsl #15
   376b4:	andeq	r8, r3, ip, lsl #15
   376b8:	andeq	r8, r3, ip, lsl #15
   376bc:	andeq	r8, r3, ip, lsl #15
   376c0:	andeq	r8, r3, ip, lsl #15
   376c4:	andeq	r8, r3, ip, lsl #15
   376c8:	andeq	r8, r3, ip, lsl #15
   376cc:	andeq	r8, r3, ip, lsl #15
   376d0:	andeq	r8, r3, ip, lsl #15
   376d4:	andeq	r8, r3, ip, lsl #15
   376d8:	andeq	r8, r3, ip, lsl #15
   376dc:	andeq	r8, r3, ip, lsl #15
   376e0:	andeq	r8, r3, ip, lsl #15
   376e4:	andeq	r8, r3, ip, lsl #15
   376e8:	andeq	r8, r3, ip, lsl #15
   376ec:	andeq	r8, r3, ip, lsl #15
   376f0:	andeq	r8, r3, ip, lsl #15
   376f4:	andeq	r8, r3, ip, lsl #15
   376f8:	andeq	r7, r3, ip, ror #28
   376fc:	andeq	r7, r3, ip, asr #28
   37700:	andeq	r7, r3, ip, asr #28
   37704:	andeq	r7, r3, ip, lsr #28
   37708:	andeq	r7, r3, ip, asr #28
   3770c:	andeq	r7, r3, r8, lsr ip
   37710:	andeq	r7, r3, ip, asr #28
   37714:	andeq	r7, r3, r4, lsl ip
   37718:	andeq	r7, r3, ip, asr #28
   3771c:	andeq	r7, r3, ip, asr #28
   37720:	andeq	r7, r3, ip, asr #28
   37724:	andeq	r7, r3, r8, lsr ip
   37728:	andeq	r7, r3, r8, lsr ip
   3772c:	andeq	r7, r3, r8, lsr ip
   37730:	andeq	r7, r3, r8, lsr ip
   37734:	andeq	r7, r3, r8, lsr ip
   37738:	andeq	r7, r3, r8, lsr ip
   3773c:	andeq	r7, r3, r8, lsr ip
   37740:	andeq	r7, r3, r8, lsr ip
   37744:	andeq	r7, r3, r8, lsr ip
   37748:	andeq	r7, r3, r8, lsr ip
   3774c:	andeq	r7, r3, r8, lsr ip
   37750:	andeq	r7, r3, r8, lsr ip
   37754:	andeq	r7, r3, r8, lsr ip
   37758:	andeq	r7, r3, r8, lsr ip
   3775c:	andeq	r7, r3, r8, lsr ip
   37760:	andeq	r7, r3, r8, lsr ip
   37764:	andeq	r7, r3, ip, asr #28
   37768:	andeq	r7, r3, ip, asr #28
   3776c:	andeq	r7, r3, ip, asr #28
   37770:	andeq	r7, r3, ip, asr #28
   37774:	andeq	r7, r3, r4, asr #23
   37778:	andeq	r8, r3, ip, lsl #15
   3777c:	andeq	r7, r3, r8, lsr ip
   37780:	andeq	r7, r3, r8, lsr ip
   37784:	andeq	r7, r3, r8, lsr ip
   37788:	andeq	r7, r3, r8, lsr ip
   3778c:	andeq	r7, r3, r8, lsr ip
   37790:	andeq	r7, r3, r8, lsr ip
   37794:	andeq	r7, r3, r8, lsr ip
   37798:	andeq	r7, r3, r8, lsr ip
   3779c:	andeq	r7, r3, r8, lsr ip
   377a0:	andeq	r7, r3, r8, lsr ip
   377a4:	andeq	r7, r3, r8, lsr ip
   377a8:	andeq	r7, r3, r8, lsr ip
   377ac:	andeq	r7, r3, r8, lsr ip
   377b0:	andeq	r7, r3, r8, lsr ip
   377b4:	andeq	r7, r3, r8, lsr ip
   377b8:	andeq	r7, r3, r8, lsr ip
   377bc:	andeq	r7, r3, r8, lsr ip
   377c0:	andeq	r7, r3, r8, lsr ip
   377c4:	andeq	r7, r3, r8, lsr ip
   377c8:	andeq	r7, r3, r8, lsr ip
   377cc:	andeq	r7, r3, r8, lsr ip
   377d0:	andeq	r7, r3, r8, lsr ip
   377d4:	andeq	r7, r3, r8, lsr ip
   377d8:	andeq	r7, r3, r8, lsr ip
   377dc:	andeq	r7, r3, r8, lsr ip
   377e0:	andeq	r7, r3, r8, lsr ip
   377e4:	andeq	r7, r3, ip, asr #28
   377e8:	muleq	r3, r0, fp
   377ec:	andeq	r7, r3, r8, lsr ip
   377f0:	andeq	r7, r3, ip, asr #28
   377f4:	andeq	r7, r3, r8, lsr ip
   377f8:	andeq	r7, r3, ip, asr #28
   377fc:	andeq	r7, r3, r8, lsr ip
   37800:	andeq	r7, r3, r8, lsr ip
   37804:	andeq	r7, r3, r8, lsr ip
   37808:	andeq	r7, r3, r8, lsr ip
   3780c:	andeq	r7, r3, r8, lsr ip
   37810:	andeq	r7, r3, r8, lsr ip
   37814:	andeq	r7, r3, r8, lsr ip
   37818:	andeq	r7, r3, r8, lsr ip
   3781c:	andeq	r7, r3, r8, lsr ip
   37820:	andeq	r7, r3, r8, lsr ip
   37824:	andeq	r7, r3, r8, lsr ip
   37828:	andeq	r7, r3, r8, lsr ip
   3782c:	andeq	r7, r3, r8, lsr ip
   37830:	andeq	r7, r3, r8, lsr ip
   37834:	andeq	r7, r3, r8, lsr ip
   37838:	andeq	r7, r3, r8, lsr ip
   3783c:	andeq	r7, r3, r8, lsr ip
   37840:	andeq	r7, r3, r8, lsr ip
   37844:	andeq	r7, r3, r8, lsr ip
   37848:	andeq	r7, r3, r8, lsr ip
   3784c:	andeq	r7, r3, r8, lsr ip
   37850:	andeq	r7, r3, r8, lsr ip
   37854:	andeq	r7, r3, r8, lsr ip
   37858:	andeq	r7, r3, r8, lsr ip
   3785c:	andeq	r7, r3, r8, lsr ip
   37860:	andeq	r7, r3, r8, lsr ip
   37864:	andeq	r7, r3, r8, asr #20
   37868:	andeq	r7, r3, ip, asr #28
   3786c:	andeq	r7, r3, r8, asr #20
   37870:	andeq	r7, r3, ip, lsr #28
   37874:	mov	r3, #1
   37878:	str	r3, [sp, #40]	; 0x28
   3787c:	str	r3, [sp, #68]	; 0x44
   37880:	mov	r8, #0
   37884:	ldr	r3, [pc, #4056]	; 38864 <__assert_fail@plt+0x27578>
   37888:	str	r3, [sp, #72]	; 0x48
   3788c:	mov	r3, #2
   37890:	str	r3, [sp, #176]	; 0xb0
   37894:	ldr	r1, [sp, #56]	; 0x38
   37898:	mov	r2, r3
   3789c:	ldr	ip, [sp, #40]	; 0x28
   378a0:	mov	lr, r3
   378a4:	b	37570 <__assert_fail@plt+0x26284>
   378a8:	mov	r3, #1
   378ac:	str	r3, [sp, #56]	; 0x38
   378b0:	str	r3, [sp, #68]	; 0x44
   378b4:	str	r3, [sp, #40]	; 0x28
   378b8:	ldr	r3, [pc, #4004]	; 38864 <__assert_fail@plt+0x27578>
   378bc:	mov	r8, #0
   378c0:	str	r3, [sp, #72]	; 0x48
   378c4:	b	3788c <__assert_fail@plt+0x265a0>
   378c8:	mov	r3, #1
   378cc:	str	r3, [sp, #56]	; 0x38
   378d0:	str	r3, [sp, #68]	; 0x44
   378d4:	str	r3, [sp, #40]	; 0x28
   378d8:	ldr	r3, [pc, #3976]	; 38868 <__assert_fail@plt+0x2757c>
   378dc:	mov	r8, #0
   378e0:	str	r3, [sp, #72]	; 0x48
   378e4:	mov	r3, #5
   378e8:	b	37890 <__assert_fail@plt+0x265a4>
   378ec:	mov	r3, #0
   378f0:	str	r3, [sp, #40]	; 0x28
   378f4:	mov	r3, #1
   378f8:	str	r3, [sp, #56]	; 0x38
   378fc:	mov	r8, #0
   37900:	mov	r1, r3
   37904:	ldr	r2, [sp, #176]	; 0xb0
   37908:	ldr	ip, [sp, #40]	; 0x28
   3790c:	ldr	lr, [sp, #176]	; 0xb0
   37910:	b	37570 <__assert_fail@plt+0x26284>
   37914:	ldr	r3, [sp, #176]	; 0xb0
   37918:	cmp	r3, #10
   3791c:	beq	37960 <__assert_fail@plt+0x26674>
   37920:	mov	r2, #5
   37924:	ldr	r1, [pc, #3904]	; 3886c <__assert_fail@plt+0x27580>
   37928:	mov	r0, #0
   3792c:	bl	110a0 <dcgettext@plt>
   37930:	ldr	r2, [pc, #3892]	; 3886c <__assert_fail@plt+0x27580>
   37934:	cmp	r0, r2
   37938:	str	r0, [sp, #188]	; 0xbc
   3793c:	beq	389f8 <__assert_fail@plt+0x2770c>
   37940:	mov	r2, #5
   37944:	ldr	r1, [pc, #3864]	; 38864 <__assert_fail@plt+0x27578>
   37948:	mov	r0, #0
   3794c:	bl	110a0 <dcgettext@plt>
   37950:	ldr	r2, [pc, #3852]	; 38864 <__assert_fail@plt+0x27578>
   37954:	cmp	r0, r2
   37958:	str	r0, [sp, #192]	; 0xc0
   3795c:	beq	389e8 <__assert_fail@plt+0x276fc>
   37960:	ldr	r8, [sp, #40]	; 0x28
   37964:	cmp	r8, #0
   37968:	movne	r8, #0
   3796c:	bne	3799c <__assert_fail@plt+0x266b0>
   37970:	ldr	r3, [sp, #188]	; 0xbc
   37974:	ldrb	r3, [r3]
   37978:	cmp	r3, #0
   3797c:	beq	3799c <__assert_fail@plt+0x266b0>
   37980:	ldr	r2, [sp, #188]	; 0xbc
   37984:	cmp	fp, r8
   37988:	strbhi	r3, [r9, r8]
   3798c:	ldrb	r3, [r2, #1]!
   37990:	add	r8, r8, #1
   37994:	cmp	r3, #0
   37998:	bne	37984 <__assert_fail@plt+0x26698>
   3799c:	ldr	r0, [sp, #192]	; 0xc0
   379a0:	bl	111a8 <strlen@plt>
   379a4:	ldr	r3, [sp, #192]	; 0xc0
   379a8:	ldr	r2, [sp, #176]	; 0xb0
   379ac:	str	r3, [sp, #72]	; 0x48
   379b0:	mov	r3, #1
   379b4:	str	r3, [sp, #56]	; 0x38
   379b8:	mov	r1, r3
   379bc:	ldr	ip, [sp, #40]	; 0x28
   379c0:	ldr	lr, [sp, #176]	; 0xb0
   379c4:	str	r0, [sp, #68]	; 0x44
   379c8:	b	37570 <__assert_fail@plt+0x26284>
   379cc:	ldr	r3, [sp, #40]	; 0x28
   379d0:	cmp	r3, #0
   379d4:	beq	3867c <__assert_fail@plt+0x27390>
   379d8:	mov	r3, #1
   379dc:	str	r3, [sp, #68]	; 0x44
   379e0:	ldr	r3, [pc, #3708]	; 38864 <__assert_fail@plt+0x27578>
   379e4:	str	r3, [sp, #72]	; 0x48
   379e8:	mov	r8, #0
   379ec:	ldr	r1, [sp, #56]	; 0x38
   379f0:	ldr	r2, [sp, #176]	; 0xb0
   379f4:	ldr	ip, [sp, #40]	; 0x28
   379f8:	ldr	lr, [sp, #176]	; 0xb0
   379fc:	b	37570 <__assert_fail@plt+0x26284>
   37a00:	ldr	r3, [sp, #40]	; 0x28
   37a04:	cmp	r3, #0
   37a08:	beq	38700 <__assert_fail@plt+0x27414>
   37a0c:	str	r3, [sp, #56]	; 0x38
   37a10:	mov	r3, #1
   37a14:	str	r3, [sp, #68]	; 0x44
   37a18:	ldr	r3, [pc, #3656]	; 38868 <__assert_fail@plt+0x2757c>
   37a1c:	b	379e4 <__assert_fail@plt+0x266f8>
   37a20:	ldr	r3, [sp, #40]	; 0x28
   37a24:	cmp	r3, #0
   37a28:	mov	r3, #1
   37a2c:	streq	r3, [sp, #56]	; 0x38
   37a30:	beq	3867c <__assert_fail@plt+0x27390>
   37a34:	str	r3, [sp, #68]	; 0x44
   37a38:	ldr	r3, [pc, #3620]	; 38864 <__assert_fail@plt+0x27578>
   37a3c:	mov	r8, #0
   37a40:	str	r3, [sp, #72]	; 0x48
   37a44:	b	3788c <__assert_fail@plt+0x265a0>
   37a48:	ldr	r3, [sp, #24]
   37a4c:	ldr	r6, [sp, #48]	; 0x30
   37a50:	cmn	r3, #1
   37a54:	beq	380b0 <__assert_fail@plt+0x26dc4>
   37a58:	subs	r3, r3, #1
   37a5c:	movne	r3, #1
   37a60:	cmp	r3, #0
   37a64:	beq	37e30 <__assert_fail@plt+0x26b44>
   37a68:	ldr	r1, [sp, #52]	; 0x34
   37a6c:	mov	r7, r3
   37a70:	mov	r3, #0
   37a74:	str	r3, [sp, #32]
   37a78:	ldr	r3, [sp, #60]	; 0x3c
   37a7c:	orr	r2, r1, r3
   37a80:	ldr	r3, [sp, #40]	; 0x28
   37a84:	eor	r2, r2, #1
   37a88:	orr	r2, r3, r2
   37a8c:	tst	r2, #255	; 0xff
   37a90:	bne	383b4 <__assert_fail@plt+0x270c8>
   37a94:	cmp	r6, #0
   37a98:	bne	37c74 <__assert_fail@plt+0x26988>
   37a9c:	ldr	r3, [sp, #36]	; 0x24
   37aa0:	add	sl, sl, #1
   37aa4:	and	r3, r3, r7
   37aa8:	uxtb	r6, r3
   37aac:	cmp	r6, #0
   37ab0:	beq	37adc <__assert_fail@plt+0x267f0>
   37ab4:	cmp	fp, r8
   37ab8:	movhi	r3, #39	; 0x27
   37abc:	strbhi	r3, [r9, r8]
   37ac0:	add	r3, r8, #1
   37ac4:	cmp	fp, r3
   37ac8:	movhi	r2, #39	; 0x27
   37acc:	add	r8, r8, #2
   37ad0:	strbhi	r2, [r9, r3]
   37ad4:	mov	r3, #0
   37ad8:	str	r3, [sp, #36]	; 0x24
   37adc:	ldr	r2, [sp, #32]
   37ae0:	cmp	r8, fp
   37ae4:	ldr	r3, [sp, #28]
   37ae8:	strbcc	r4, [r9, r8]
   37aec:	cmp	r2, #0
   37af0:	moveq	r3, #0
   37af4:	str	r3, [sp, #28]
   37af8:	ldr	r3, [sp, #24]
   37afc:	add	r8, r8, #1
   37b00:	cmn	r3, #1
   37b04:	bne	375dc <__assert_fail@plt+0x262f0>
   37b08:	ldr	r3, [sp, #44]	; 0x2c
   37b0c:	ldrb	r3, [r3, sl]
   37b10:	adds	r7, r3, #0
   37b14:	movne	r7, #1
   37b18:	cmp	r7, #0
   37b1c:	bne	375ec <__assert_fail@plt+0x26300>
   37b20:	ldr	r3, [sp, #64]	; 0x40
   37b24:	cmp	r8, #0
   37b28:	movne	r3, #0
   37b2c:	andeq	r3, r3, #1
   37b30:	cmp	r3, #0
   37b34:	str	r3, [sp, #64]	; 0x40
   37b38:	bne	385dc <__assert_fail@plt+0x272f0>
   37b3c:	ldr	r3, [sp, #40]	; 0x28
   37b40:	ldr	r2, [sp, #52]	; 0x34
   37b44:	eor	r3, r3, #1
   37b48:	ands	r2, r2, r3
   37b4c:	beq	38a08 <__assert_fail@plt+0x2771c>
   37b50:	ldr	r3, [sp, #76]	; 0x4c
   37b54:	cmp	r3, #0
   37b58:	beq	389d8 <__assert_fail@plt+0x276ec>
   37b5c:	ldr	r3, [sp, #28]
   37b60:	cmp	r3, #0
   37b64:	bne	38994 <__assert_fail@plt+0x276a8>
   37b68:	ldr	r2, [sp, #84]	; 0x54
   37b6c:	clz	r3, fp
   37b70:	cmp	r2, #0
   37b74:	lsr	r3, r3, #5
   37b78:	moveq	r3, #0
   37b7c:	cmp	r3, #0
   37b80:	beq	38934 <__assert_fail@plt+0x27648>
   37b84:	mov	fp, r2
   37b88:	str	r3, [sp, #76]	; 0x4c
   37b8c:	b	37518 <__assert_fail@plt+0x2622c>
   37b90:	ldr	r3, [sp, #176]	; 0xb0
   37b94:	ldr	r6, [sp, #48]	; 0x30
   37b98:	cmp	r3, #2
   37b9c:	beq	380d4 <__assert_fail@plt+0x26de8>
   37ba0:	ldr	r3, [sp, #88]	; 0x58
   37ba4:	cmp	r3, #0
   37ba8:	beq	38658 <__assert_fail@plt+0x2736c>
   37bac:	mov	r3, #0
   37bb0:	add	sl, sl, #1
   37bb4:	ldr	r6, [sp, #36]	; 0x24
   37bb8:	str	r3, [sp, #32]
   37bbc:	mov	r4, #92	; 0x5c
   37bc0:	b	37aac <__assert_fail@plt+0x267c0>
   37bc4:	ldr	r3, [sp, #176]	; 0xb0
   37bc8:	ldr	r6, [sp, #48]	; 0x30
   37bcc:	cmp	r3, #2
   37bd0:	beq	38104 <__assert_fail@plt+0x26e18>
   37bd4:	cmp	r3, #5
   37bd8:	bne	38668 <__assert_fail@plt+0x2737c>
   37bdc:	ldr	r3, [sp, #100]	; 0x64
   37be0:	cmp	r3, #0
   37be4:	beq	386cc <__assert_fail@plt+0x273e0>
   37be8:	ldr	r2, [sp, #24]
   37bec:	add	r3, sl, #2
   37bf0:	cmp	r2, r3
   37bf4:	bls	37c04 <__assert_fail@plt+0x26918>
   37bf8:	ldrb	r4, [r5, #1]
   37bfc:	cmp	r4, #63	; 0x3f
   37c00:	beq	38874 <__assert_fail@plt+0x27588>
   37c04:	mov	r1, #0
   37c08:	str	r1, [sp, #32]
   37c0c:	mov	r4, #63	; 0x3f
   37c10:	b	37a78 <__assert_fail@plt+0x2678c>
   37c14:	ldr	r3, [sp, #176]	; 0xb0
   37c18:	ldr	r6, [sp, #48]	; 0x30
   37c1c:	cmp	r3, #2
   37c20:	beq	38130 <__assert_fail@plt+0x26e44>
   37c24:	str	r7, [sp, #32]
   37c28:	str	r7, [sp, #76]	; 0x4c
   37c2c:	mov	r1, #0
   37c30:	mov	r4, #39	; 0x27
   37c34:	b	37a78 <__assert_fail@plt+0x2678c>
   37c38:	ldr	r6, [sp, #48]	; 0x30
   37c3c:	ldr	r1, [sp, #52]	; 0x34
   37c40:	str	r7, [sp, #32]
   37c44:	b	37a78 <__assert_fail@plt+0x2678c>
   37c48:	ldr	r6, [sp, #48]	; 0x30
   37c4c:	ldr	r1, [sp, #52]	; 0x34
   37c50:	mov	r4, #12
   37c54:	mov	r3, #102	; 0x66
   37c58:	ldr	r2, [sp, #56]	; 0x38
   37c5c:	cmp	r2, #0
   37c60:	streq	r2, [sp, #32]
   37c64:	beq	37a78 <__assert_fail@plt+0x2678c>
   37c68:	mov	r4, r3
   37c6c:	mov	r3, #0
   37c70:	str	r3, [sp, #32]
   37c74:	ldr	r3, [sp, #40]	; 0x28
   37c78:	cmp	r3, #0
   37c7c:	bne	383ec <__assert_fail@plt+0x27100>
   37c80:	ldr	r3, [sp, #36]	; 0x24
   37c84:	eor	r3, r3, #1
   37c88:	and	r3, r3, r1
   37c8c:	ands	r3, r3, #255	; 0xff
   37c90:	beq	37cc8 <__assert_fail@plt+0x269dc>
   37c94:	cmp	fp, r8
   37c98:	movhi	r2, #39	; 0x27
   37c9c:	strbhi	r2, [r9, r8]
   37ca0:	add	r2, r8, #1
   37ca4:	cmp	fp, r2
   37ca8:	movhi	r1, #36	; 0x24
   37cac:	strbhi	r1, [r9, r2]
   37cb0:	add	r2, r8, #2
   37cb4:	cmp	fp, r2
   37cb8:	add	r8, r8, #3
   37cbc:	movhi	r1, #39	; 0x27
   37cc0:	strbhi	r1, [r9, r2]
   37cc4:	str	r3, [sp, #36]	; 0x24
   37cc8:	cmp	fp, r8
   37ccc:	movhi	r3, #92	; 0x5c
   37cd0:	strbhi	r3, [r9, r8]
   37cd4:	add	sl, sl, #1
   37cd8:	add	r8, r8, #1
   37cdc:	b	37adc <__assert_fail@plt+0x267f0>
   37ce0:	ldr	r6, [sp, #48]	; 0x30
   37ce4:	mov	r4, #10
   37ce8:	mov	r3, #110	; 0x6e
   37cec:	ldr	r2, [sp, #64]	; 0x40
   37cf0:	cmp	r2, #0
   37cf4:	bne	38774 <__assert_fail@plt+0x27488>
   37cf8:	ldr	r1, [sp, #52]	; 0x34
   37cfc:	b	37c58 <__assert_fail@plt+0x2696c>
   37d00:	ldr	r6, [sp, #48]	; 0x30
   37d04:	ldr	r1, [sp, #52]	; 0x34
   37d08:	mov	r3, #116	; 0x74
   37d0c:	b	37c58 <__assert_fail@plt+0x2696c>
   37d10:	ldr	r6, [sp, #48]	; 0x30
   37d14:	ldr	r1, [sp, #52]	; 0x34
   37d18:	mov	r4, #11
   37d1c:	mov	r3, #118	; 0x76
   37d20:	b	37c58 <__assert_fail@plt+0x2696c>
   37d24:	ldr	r6, [sp, #48]	; 0x30
   37d28:	ldr	r1, [sp, #52]	; 0x34
   37d2c:	mov	r4, #8
   37d30:	mov	r3, #98	; 0x62
   37d34:	b	37c58 <__assert_fail@plt+0x2696c>
   37d38:	ldr	r6, [sp, #48]	; 0x30
   37d3c:	ldr	r1, [sp, #52]	; 0x34
   37d40:	mov	r4, #7
   37d44:	mov	r3, #97	; 0x61
   37d48:	b	37c58 <__assert_fail@plt+0x2696c>
   37d4c:	ldr	r3, [sp, #56]	; 0x38
   37d50:	ldr	r6, [sp, #48]	; 0x30
   37d54:	cmp	r3, #0
   37d58:	beq	3821c <__assert_fail@plt+0x26f30>
   37d5c:	ldr	r3, [sp, #40]	; 0x28
   37d60:	cmp	r3, #0
   37d64:	bne	38850 <__assert_fail@plt+0x27564>
   37d68:	ldr	r3, [sp, #36]	; 0x24
   37d6c:	ldr	r2, [sp, #52]	; 0x34
   37d70:	eor	r3, r3, #1
   37d74:	ands	r3, r2, r3
   37d78:	moveq	r2, r8
   37d7c:	beq	37db4 <__assert_fail@plt+0x26ac8>
   37d80:	cmp	fp, r8
   37d84:	movhi	r2, #39	; 0x27
   37d88:	strbhi	r2, [r9, r8]
   37d8c:	add	r2, r8, #1
   37d90:	cmp	fp, r2
   37d94:	movhi	r1, #36	; 0x24
   37d98:	strbhi	r1, [r9, r2]
   37d9c:	add	r2, r8, #2
   37da0:	cmp	fp, r2
   37da4:	movhi	r1, #39	; 0x27
   37da8:	strbhi	r1, [r9, r2]
   37dac:	add	r2, r8, #3
   37db0:	str	r3, [sp, #36]	; 0x24
   37db4:	cmp	fp, r2
   37db8:	movhi	r3, #92	; 0x5c
   37dbc:	strbhi	r3, [r9, r2]
   37dc0:	ldr	r3, [sp, #92]	; 0x5c
   37dc4:	add	r8, r2, #1
   37dc8:	cmp	r3, #0
   37dcc:	beq	38750 <__assert_fail@plt+0x27464>
   37dd0:	ldr	r1, [sp, #24]
   37dd4:	add	r3, sl, #1
   37dd8:	cmp	r1, r3
   37ddc:	bls	37e14 <__assert_fail@plt+0x26b28>
   37de0:	ldr	r1, [sp, #44]	; 0x2c
   37de4:	ldrb	r3, [r1, r3]
   37de8:	sub	r3, r3, #48	; 0x30
   37dec:	cmp	r3, #9
   37df0:	bhi	37e14 <__assert_fail@plt+0x26b28>
   37df4:	cmp	fp, r8
   37df8:	movhi	r3, #48	; 0x30
   37dfc:	strbhi	r3, [r9, r8]
   37e00:	add	r3, r2, #2
   37e04:	cmp	fp, r3
   37e08:	add	r8, r2, #3
   37e0c:	movhi	r1, #48	; 0x30
   37e10:	strbhi	r1, [r9, r3]
   37e14:	ldr	r3, [sp, #40]	; 0x28
   37e18:	ldr	r1, [sp, #52]	; 0x34
   37e1c:	mov	r7, r3
   37e20:	str	r3, [sp, #32]
   37e24:	mov	r4, #48	; 0x30
   37e28:	b	37a78 <__assert_fail@plt+0x2678c>
   37e2c:	ldr	r6, [sp, #48]	; 0x30
   37e30:	cmp	sl, #0
   37e34:	streq	r7, [sp, #32]
   37e38:	beq	37e58 <__assert_fail@plt+0x26b6c>
   37e3c:	mov	r3, #0
   37e40:	ldr	r1, [sp, #52]	; 0x34
   37e44:	str	r3, [sp, #32]
   37e48:	b	37a78 <__assert_fail@plt+0x2678c>
   37e4c:	ldr	r6, [sp, #48]	; 0x30
   37e50:	mov	r3, #0
   37e54:	str	r3, [sp, #32]
   37e58:	ldr	r3, [sp, #64]	; 0x40
   37e5c:	cmp	r3, #0
   37e60:	bne	385dc <__assert_fail@plt+0x272f0>
   37e64:	ldr	r1, [sp, #52]	; 0x34
   37e68:	b	37a78 <__assert_fail@plt+0x2678c>
   37e6c:	ldr	r3, [sp, #48]	; 0x30
   37e70:	mov	r6, r3
   37e74:	str	r3, [sp, #32]
   37e78:	b	37e58 <__assert_fail@plt+0x26b6c>
   37e7c:	ldr	r6, [sp, #48]	; 0x30
   37e80:	mov	r4, #13
   37e84:	mov	r3, #114	; 0x72
   37e88:	b	37cec <__assert_fail@plt+0x26a00>
   37e8c:	ldr	r3, [sp, #44]	; 0x2c
   37e90:	add	r5, r3, sl
   37e94:	ldrb	r4, [r5]
   37e98:	cmp	r4, #126	; 0x7e
   37e9c:	ldrls	pc, [pc, r4, lsl #2]
   37ea0:	b	3823c <__assert_fail@plt+0x26f50>
   37ea4:	andeq	r8, r3, ip, lsl #4
   37ea8:	andeq	r8, r3, ip, lsr r2
   37eac:	andeq	r8, r3, ip, lsr r2
   37eb0:	andeq	r8, r3, ip, lsr r2
   37eb4:	andeq	r8, r3, ip, lsr r2
   37eb8:	andeq	r8, r3, ip, lsr r2
   37ebc:	andeq	r8, r3, ip, lsr r2
   37ec0:	andeq	r8, r3, r4, lsl #4
   37ec4:	strdeq	r8, [r3], -ip
   37ec8:	strdeq	r8, [r3], -r0
   37ecc:	andeq	r8, r3, r8, ror #3
   37ed0:	andeq	r8, r3, r0, ror #3
   37ed4:	ldrdeq	r8, [r3], -r8	; <UNPREDICTABLE>
   37ed8:	ldrdeq	r8, [r3], -r0
   37edc:	andeq	r8, r3, ip, lsr r2
   37ee0:	andeq	r8, r3, ip, lsr r2
   37ee4:	andeq	r8, r3, ip, lsr r2
   37ee8:	andeq	r8, r3, ip, lsr r2
   37eec:	andeq	r8, r3, ip, lsr r2
   37ef0:	andeq	r8, r3, ip, lsr r2
   37ef4:	andeq	r8, r3, ip, lsr r2
   37ef8:	andeq	r8, r3, ip, lsr r2
   37efc:	andeq	r8, r3, ip, lsr r2
   37f00:	andeq	r8, r3, ip, lsr r2
   37f04:	andeq	r8, r3, ip, lsr r2
   37f08:	andeq	r8, r3, ip, lsr r2
   37f0c:	andeq	r8, r3, ip, lsr r2
   37f10:	andeq	r8, r3, ip, lsr r2
   37f14:	andeq	r8, r3, ip, lsr r2
   37f18:	andeq	r8, r3, ip, lsr r2
   37f1c:	andeq	r8, r3, ip, lsr r2
   37f20:	andeq	r8, r3, ip, lsr r2
   37f24:	andeq	r8, r3, r4, asr #3
   37f28:			; <UNDEFINED> instruction: 0x000381bc
   37f2c:			; <UNDEFINED> instruction: 0x000381bc
   37f30:			; <UNDEFINED> instruction: 0x000381b4
   37f34:			; <UNDEFINED> instruction: 0x000381bc
   37f38:	andeq	r8, r3, ip, lsr #3
   37f3c:			; <UNDEFINED> instruction: 0x000381bc
   37f40:	andeq	r8, r3, r0, lsr #2
   37f44:			; <UNDEFINED> instruction: 0x000381bc
   37f48:			; <UNDEFINED> instruction: 0x000381bc
   37f4c:			; <UNDEFINED> instruction: 0x000381bc
   37f50:	andeq	r8, r3, ip, lsr #3
   37f54:	andeq	r8, r3, ip, lsr #3
   37f58:	andeq	r8, r3, ip, lsr #3
   37f5c:	andeq	r8, r3, ip, lsr #3
   37f60:	andeq	r8, r3, ip, lsr #3
   37f64:	andeq	r8, r3, ip, lsr #3
   37f68:	andeq	r8, r3, ip, lsr #3
   37f6c:	andeq	r8, r3, ip, lsr #3
   37f70:	andeq	r8, r3, ip, lsr #3
   37f74:	andeq	r8, r3, ip, lsr #3
   37f78:	andeq	r8, r3, ip, lsr #3
   37f7c:	andeq	r8, r3, ip, lsr #3
   37f80:	andeq	r8, r3, ip, lsr #3
   37f84:	andeq	r8, r3, ip, lsr #3
   37f88:	andeq	r8, r3, ip, lsr #3
   37f8c:	andeq	r8, r3, ip, lsr #3
   37f90:			; <UNDEFINED> instruction: 0x000381bc
   37f94:			; <UNDEFINED> instruction: 0x000381bc
   37f98:			; <UNDEFINED> instruction: 0x000381bc
   37f9c:			; <UNDEFINED> instruction: 0x000381bc
   37fa0:	strdeq	r8, [r3], -r4
   37fa4:	andeq	r8, r3, ip, lsr r2
   37fa8:	andeq	r8, r3, ip, lsr #3
   37fac:	andeq	r8, r3, ip, lsr #3
   37fb0:	andeq	r8, r3, ip, lsr #3
   37fb4:	andeq	r8, r3, ip, lsr #3
   37fb8:	andeq	r8, r3, ip, lsr #3
   37fbc:	andeq	r8, r3, ip, lsr #3
   37fc0:	andeq	r8, r3, ip, lsr #3
   37fc4:	andeq	r8, r3, ip, lsr #3
   37fc8:	andeq	r8, r3, ip, lsr #3
   37fcc:	andeq	r8, r3, ip, lsr #3
   37fd0:	andeq	r8, r3, ip, lsr #3
   37fd4:	andeq	r8, r3, ip, lsr #3
   37fd8:	andeq	r8, r3, ip, lsr #3
   37fdc:	andeq	r8, r3, ip, lsr #3
   37fe0:	andeq	r8, r3, ip, lsr #3
   37fe4:	andeq	r8, r3, ip, lsr #3
   37fe8:	andeq	r8, r3, ip, lsr #3
   37fec:	andeq	r8, r3, ip, lsr #3
   37ff0:	andeq	r8, r3, ip, lsr #3
   37ff4:	andeq	r8, r3, ip, lsr #3
   37ff8:	andeq	r8, r3, ip, lsr #3
   37ffc:	andeq	r8, r3, ip, lsr #3
   38000:	andeq	r8, r3, ip, lsr #3
   38004:	andeq	r8, r3, ip, lsr #3
   38008:	andeq	r8, r3, ip, lsr #3
   3800c:	andeq	r8, r3, ip, lsr #3
   38010:			; <UNDEFINED> instruction: 0x000381bc
   38014:	andeq	r8, r3, r4, asr #1
   38018:	andeq	r8, r3, ip, lsr #3
   3801c:			; <UNDEFINED> instruction: 0x000381bc
   38020:	andeq	r8, r3, ip, lsr #3
   38024:			; <UNDEFINED> instruction: 0x000381bc
   38028:	andeq	r8, r3, ip, lsr #3
   3802c:	andeq	r8, r3, ip, lsr #3
   38030:	andeq	r8, r3, ip, lsr #3
   38034:	andeq	r8, r3, ip, lsr #3
   38038:	andeq	r8, r3, ip, lsr #3
   3803c:	andeq	r8, r3, ip, lsr #3
   38040:	andeq	r8, r3, ip, lsr #3
   38044:	andeq	r8, r3, ip, lsr #3
   38048:	andeq	r8, r3, ip, lsr #3
   3804c:	andeq	r8, r3, ip, lsr #3
   38050:	andeq	r8, r3, ip, lsr #3
   38054:	andeq	r8, r3, ip, lsr #3
   38058:	andeq	r8, r3, ip, lsr #3
   3805c:	andeq	r8, r3, ip, lsr #3
   38060:	andeq	r8, r3, ip, lsr #3
   38064:	andeq	r8, r3, ip, lsr #3
   38068:	andeq	r8, r3, ip, lsr #3
   3806c:	andeq	r8, r3, ip, lsr #3
   38070:	andeq	r8, r3, ip, lsr #3
   38074:	andeq	r8, r3, ip, lsr #3
   38078:	andeq	r8, r3, ip, lsr #3
   3807c:	andeq	r8, r3, ip, lsr #3
   38080:	andeq	r8, r3, ip, lsr #3
   38084:	andeq	r8, r3, ip, lsr #3
   38088:	andeq	r8, r3, ip, lsr #3
   3808c:	andeq	r8, r3, ip, lsr #3
   38090:	andeq	r8, r3, r0, lsr #1
   38094:			; <UNDEFINED> instruction: 0x000381bc
   38098:	andeq	r8, r3, r0, lsr #1
   3809c:			; <UNDEFINED> instruction: 0x000381b4
   380a0:	ldr	r3, [sp, #24]
   380a4:	mov	r6, #0
   380a8:	cmn	r3, #1
   380ac:	bne	37a58 <__assert_fail@plt+0x2676c>
   380b0:	ldr	r3, [sp, #44]	; 0x2c
   380b4:	ldrb	r3, [r3, #1]
   380b8:	adds	r3, r3, #0
   380bc:	movne	r3, #1
   380c0:	b	37a60 <__assert_fail@plt+0x26774>
   380c4:	ldr	r3, [sp, #176]	; 0xb0
   380c8:	mov	r6, #0
   380cc:	cmp	r3, #2
   380d0:	bne	37ba0 <__assert_fail@plt+0x268b4>
   380d4:	ldr	r3, [sp, #64]	; 0x40
   380d8:	cmp	r3, #0
   380dc:	bne	38914 <__assert_fail@plt+0x27628>
   380e0:	add	sl, sl, #1
   380e4:	ldr	r6, [sp, #36]	; 0x24
   380e8:	str	r3, [sp, #32]
   380ec:	mov	r4, #92	; 0x5c
   380f0:	b	37aac <__assert_fail@plt+0x267c0>
   380f4:	ldr	r3, [sp, #176]	; 0xb0
   380f8:	mov	r6, #0
   380fc:	cmp	r3, #2
   38100:	bne	37bd4 <__assert_fail@plt+0x268e8>
   38104:	ldr	r3, [sp, #40]	; 0x28
   38108:	cmp	r3, #0
   3810c:	bne	383f0 <__assert_fail@plt+0x27104>
   38110:	mov	r1, r7
   38114:	str	r3, [sp, #32]
   38118:	mov	r4, #63	; 0x3f
   3811c:	b	37a78 <__assert_fail@plt+0x2678c>
   38120:	ldr	r3, [sp, #176]	; 0xb0
   38124:	mov	r6, #0
   38128:	cmp	r3, #2
   3812c:	bne	37c24 <__assert_fail@plt+0x26938>
   38130:	ldr	r3, [sp, #64]	; 0x40
   38134:	cmp	r3, #0
   38138:	bne	38914 <__assert_fail@plt+0x27628>
   3813c:	ldr	r2, [sp, #84]	; 0x54
   38140:	adds	r3, fp, #0
   38144:	movne	r3, #1
   38148:	cmp	r2, #0
   3814c:	movne	r3, #0
   38150:	cmp	r3, #0
   38154:	strne	fp, [sp, #84]	; 0x54
   38158:	movne	fp, #0
   3815c:	bne	3818c <__assert_fail@plt+0x26ea0>
   38160:	cmp	fp, r8
   38164:	movhi	r3, #39	; 0x27
   38168:	strbhi	r3, [r9, r8]
   3816c:	add	r3, r8, #1
   38170:	cmp	fp, r3
   38174:	movhi	r2, #92	; 0x5c
   38178:	strbhi	r2, [r9, r3]
   3817c:	add	r3, r8, #2
   38180:	cmp	fp, r3
   38184:	movhi	r2, #39	; 0x27
   38188:	strbhi	r2, [r9, r3]
   3818c:	ldr	r3, [sp, #64]	; 0x40
   38190:	add	r8, r8, #3
   38194:	mov	r1, r7
   38198:	str	r7, [sp, #32]
   3819c:	str	r7, [sp, #76]	; 0x4c
   381a0:	str	r3, [sp, #36]	; 0x24
   381a4:	mov	r4, #39	; 0x27
   381a8:	b	37a78 <__assert_fail@plt+0x2678c>
   381ac:	mov	r6, #0
   381b0:	b	37c3c <__assert_fail@plt+0x26950>
   381b4:	mov	r6, #0
   381b8:	b	37e30 <__assert_fail@plt+0x26b44>
   381bc:	mov	r6, #0
   381c0:	b	37e50 <__assert_fail@plt+0x26b64>
   381c4:	str	r7, [sp, #32]
   381c8:	mov	r6, #0
   381cc:	b	37e58 <__assert_fail@plt+0x26b6c>
   381d0:	mov	r6, #0
   381d4:	b	37e80 <__assert_fail@plt+0x26b94>
   381d8:	mov	r6, #0
   381dc:	b	37c4c <__assert_fail@plt+0x26960>
   381e0:	mov	r6, #0
   381e4:	b	37d14 <__assert_fail@plt+0x26a28>
   381e8:	mov	r6, #0
   381ec:	b	37ce4 <__assert_fail@plt+0x269f8>
   381f0:	mov	r6, #0
   381f4:	mov	r3, #116	; 0x74
   381f8:	b	37cec <__assert_fail@plt+0x26a00>
   381fc:	mov	r6, #0
   38200:	b	37d28 <__assert_fail@plt+0x26a3c>
   38204:	mov	r6, #0
   38208:	b	37d3c <__assert_fail@plt+0x26a50>
   3820c:	ldr	r3, [sp, #56]	; 0x38
   38210:	mov	r6, #0
   38214:	cmp	r3, #0
   38218:	bne	37d5c <__assert_fail@plt+0x26a70>
   3821c:	ldr	r3, [sp, #96]	; 0x60
   38220:	cmp	r3, #0
   38224:	addne	sl, sl, #1
   38228:	bne	375d0 <__assert_fail@plt+0x262e4>
   3822c:	ldr	r1, [sp, #52]	; 0x34
   38230:	str	r3, [sp, #32]
   38234:	mov	r4, r3
   38238:	b	37a78 <__assert_fail@plt+0x2678c>
   3823c:	mov	r6, #0
   38240:	ldr	r3, [sp, #80]	; 0x50
   38244:	cmp	r3, #1
   38248:	bne	38438 <__assert_fail@plt+0x2714c>
   3824c:	bl	11184 <__ctype_b_loc@plt>
   38250:	ldr	r2, [sp, #80]	; 0x50
   38254:	sxth	r3, r4
   38258:	mov	r1, r2
   3825c:	lsl	r3, r3, #1
   38260:	ldr	r2, [r0]
   38264:	ldrh	r3, [r2, r3]
   38268:	and	r3, r3, #16384	; 0x4000
   3826c:	cmp	r3, #0
   38270:	movne	r3, #1
   38274:	moveq	r3, #0
   38278:	str	r3, [sp, #32]
   3827c:	moveq	r3, #1
   38280:	movne	r3, #0
   38284:	ldr	r2, [sp, #56]	; 0x38
   38288:	and	r3, r3, r2
   3828c:	ands	r3, r3, #255	; 0xff
   38290:	beq	37e64 <__assert_fail@plt+0x26b78>
   38294:	add	r1, sl, r1
   38298:	mov	r0, #0
   3829c:	ldr	r7, [sp, #40]	; 0x28
   382a0:	ldr	r2, [sp, #36]	; 0x24
   382a4:	ldr	lr, [sp, #52]	; 0x34
   382a8:	b	38358 <__assert_fail@plt+0x2706c>
   382ac:	cmp	r7, #0
   382b0:	bne	386ac <__assert_fail@plt+0x273c0>
   382b4:	eor	r0, r2, #1
   382b8:	ands	r0, lr, r0
   382bc:	beq	382f4 <__assert_fail@plt+0x27008>
   382c0:	cmp	fp, r8
   382c4:	movhi	r2, #39	; 0x27
   382c8:	strbhi	r2, [r9, r8]
   382cc:	add	r2, r8, #1
   382d0:	cmp	fp, r2
   382d4:	movhi	ip, #36	; 0x24
   382d8:	strbhi	ip, [r9, r2]
   382dc:	add	r2, r8, #2
   382e0:	cmp	fp, r2
   382e4:	movhi	ip, #39	; 0x27
   382e8:	strbhi	ip, [r9, r2]
   382ec:	add	r8, r8, #3
   382f0:	mov	r2, r0
   382f4:	cmp	fp, r8
   382f8:	movhi	r0, #92	; 0x5c
   382fc:	strbhi	r0, [r9, r8]
   38300:	add	r0, r8, #1
   38304:	cmp	fp, r0
   38308:	lsrhi	ip, r4, #6
   3830c:	addhi	ip, ip, #48	; 0x30
   38310:	strbhi	ip, [r9, r0]
   38314:	add	ip, r8, #2
   38318:	cmp	fp, ip
   3831c:	lsrhi	r0, r4, #3
   38320:	andhi	r0, r0, #7
   38324:	addhi	r0, r0, #48	; 0x30
   38328:	add	sl, sl, #1
   3832c:	strbhi	r0, [r9, ip]
   38330:	and	r4, r4, #7
   38334:	cmp	sl, r1
   38338:	add	r4, r4, #48	; 0x30
   3833c:	add	r8, r8, #3
   38340:	bcs	386c4 <__assert_fail@plt+0x273d8>
   38344:	mov	r0, r3
   38348:	cmp	fp, r8
   3834c:	strbhi	r4, [r9, r8]
   38350:	ldrb	r4, [r5, #1]!
   38354:	add	r8, r8, #1
   38358:	cmp	r3, #0
   3835c:	bne	382ac <__assert_fail@plt+0x26fc0>
   38360:	cmp	r6, #0
   38364:	bne	38408 <__assert_fail@plt+0x2711c>
   38368:	eor	r6, r0, #1
   3836c:	and	r6, r6, r2
   38370:	add	sl, sl, #1
   38374:	cmp	r1, sl
   38378:	uxtb	r6, r6
   3837c:	bls	38430 <__assert_fail@plt+0x27144>
   38380:	cmp	r6, #0
   38384:	beq	38348 <__assert_fail@plt+0x2705c>
   38388:	cmp	fp, r8
   3838c:	movhi	r2, #39	; 0x27
   38390:	strbhi	r2, [r9, r8]
   38394:	add	r2, r8, #1
   38398:	cmp	fp, r2
   3839c:	movhi	ip, #39	; 0x27
   383a0:	strbhi	ip, [r9, r2]
   383a4:	add	r8, r8, #2
   383a8:	mov	r6, r3
   383ac:	mov	r2, r3
   383b0:	b	38348 <__assert_fail@plt+0x2705c>
   383b4:	ldr	r3, [sp, #184]	; 0xb8
   383b8:	cmp	r3, #0
   383bc:	beq	37a94 <__assert_fail@plt+0x267a8>
   383c0:	lsr	r2, r4, #5
   383c4:	mov	r0, r3
   383c8:	uxtb	r2, r2
   383cc:	and	r3, r4, #31
   383d0:	ldr	r2, [r0, r2, lsl #2]
   383d4:	lsr	r3, r2, r3
   383d8:	tst	r3, #1
   383dc:	beq	37a94 <__assert_fail@plt+0x267a8>
   383e0:	ldr	r3, [sp, #40]	; 0x28
   383e4:	cmp	r3, #0
   383e8:	beq	37c80 <__assert_fail@plt+0x26994>
   383ec:	mov	r3, r1
   383f0:	str	r3, [sp, #64]	; 0x40
   383f4:	mov	sl, r9
   383f8:	ldr	r3, [sp, #56]	; 0x38
   383fc:	mov	r9, fp
   38400:	ldr	r2, [sp, #64]	; 0x40
   38404:	b	385f4 <__assert_fail@plt+0x27308>
   38408:	cmp	fp, r8
   3840c:	eor	r6, r0, #1
   38410:	movhi	ip, #92	; 0x5c
   38414:	and	r6, r6, r2
   38418:	add	sl, sl, #1
   3841c:	strbhi	ip, [r9, r8]
   38420:	cmp	r1, sl
   38424:	add	r8, r8, #1
   38428:	uxtb	r6, r6
   3842c:	bhi	38380 <__assert_fail@plt+0x27094>
   38430:	str	r2, [sp, #36]	; 0x24
   38434:	b	37aac <__assert_fail@plt+0x267c0>
   38438:	ldr	r3, [sp, #24]
   3843c:	cmn	r3, #1
   38440:	mov	r3, #0
   38444:	str	r3, [sp, #128]	; 0x80
   38448:	str	r3, [sp, #132]	; 0x84
   3844c:	beq	38740 <__assert_fail@plt+0x27454>
   38450:	mov	r2, r7
   38454:	mov	r3, #0
   38458:	str	r7, [sp, #104]	; 0x68
   3845c:	str	r5, [sp, #116]	; 0x74
   38460:	mov	r7, r3
   38464:	mov	r5, r2
   38468:	str	r4, [sp, #32]
   3846c:	str	r6, [sp, #108]	; 0x6c
   38470:	str	r8, [sp, #112]	; 0x70
   38474:	ldr	r3, [sp, #44]	; 0x2c
   38478:	add	r6, sl, r7
   3847c:	add	r4, r3, r6
   38480:	ldr	r3, [sp, #24]
   38484:	mov	r1, r4
   38488:	sub	r2, r3, r6
   3848c:	add	r0, sp, #124	; 0x7c
   38490:	add	r3, sp, #128	; 0x80
   38494:	bl	3d788 <__assert_fail@plt+0x2c49c>
   38498:	subs	r8, r0, #0
   3849c:	beq	38824 <__assert_fail@plt+0x27538>
   384a0:	cmn	r8, #1
   384a4:	beq	387fc <__assert_fail@plt+0x27510>
   384a8:	cmn	r8, #2
   384ac:	beq	38794 <__assert_fail@plt+0x274a8>
   384b0:	ldr	r3, [sp, #64]	; 0x40
   384b4:	cmp	r3, #0
   384b8:	beq	38578 <__assert_fail@plt+0x2728c>
   384bc:	cmp	r8, #1
   384c0:	beq	38578 <__assert_fail@plt+0x2728c>
   384c4:	sub	r3, r8, #1
   384c8:	add	r6, r3, r6
   384cc:	ldr	r3, [sp, #44]	; 0x2c
   384d0:	add	r6, r3, r6
   384d4:	ldrb	r3, [r4, #1]!
   384d8:	sub	r3, r3, #91	; 0x5b
   384dc:	cmp	r3, #33	; 0x21
   384e0:	ldrls	pc, [pc, r3, lsl #2]
   384e4:	b	38570 <__assert_fail@plt+0x27284>
   384e8:	ldrdeq	r8, [r3], -ip
   384ec:	ldrdeq	r8, [r3], -ip
   384f0:	andeq	r8, r3, r0, ror r5
   384f4:	ldrdeq	r8, [r3], -ip
   384f8:	andeq	r8, r3, r0, ror r5
   384fc:	ldrdeq	r8, [r3], -ip
   38500:	andeq	r8, r3, r0, ror r5
   38504:	andeq	r8, r3, r0, ror r5
   38508:	andeq	r8, r3, r0, ror r5
   3850c:	andeq	r8, r3, r0, ror r5
   38510:	andeq	r8, r3, r0, ror r5
   38514:	andeq	r8, r3, r0, ror r5
   38518:	andeq	r8, r3, r0, ror r5
   3851c:	andeq	r8, r3, r0, ror r5
   38520:	andeq	r8, r3, r0, ror r5
   38524:	andeq	r8, r3, r0, ror r5
   38528:	andeq	r8, r3, r0, ror r5
   3852c:	andeq	r8, r3, r0, ror r5
   38530:	andeq	r8, r3, r0, ror r5
   38534:	andeq	r8, r3, r0, ror r5
   38538:	andeq	r8, r3, r0, ror r5
   3853c:	andeq	r8, r3, r0, ror r5
   38540:	andeq	r8, r3, r0, ror r5
   38544:	andeq	r8, r3, r0, ror r5
   38548:	andeq	r8, r3, r0, ror r5
   3854c:	andeq	r8, r3, r0, ror r5
   38550:	andeq	r8, r3, r0, ror r5
   38554:	andeq	r8, r3, r0, ror r5
   38558:	andeq	r8, r3, r0, ror r5
   3855c:	andeq	r8, r3, r0, ror r5
   38560:	andeq	r8, r3, r0, ror r5
   38564:	andeq	r8, r3, r0, ror r5
   38568:	andeq	r8, r3, r0, ror r5
   3856c:	ldrdeq	r8, [r3], -ip
   38570:	cmp	r6, r4
   38574:	bne	384d4 <__assert_fail@plt+0x271e8>
   38578:	ldr	r0, [sp, #124]	; 0x7c
   3857c:	bl	110c4 <iswprint@plt>
   38580:	add	r7, r7, r8
   38584:	cmp	r0, #0
   38588:	add	r0, sp, #128	; 0x80
   3858c:	moveq	r5, #0
   38590:	bl	11070 <mbsinit@plt>
   38594:	cmp	r0, #0
   38598:	beq	38474 <__assert_fail@plt+0x27188>
   3859c:	ldr	r4, [sp, #32]
   385a0:	str	r5, [sp, #32]
   385a4:	ldr	r3, [sp, #32]
   385a8:	mov	r1, r7
   385ac:	eor	r3, r3, #1
   385b0:	ldr	r7, [sp, #104]	; 0x68
   385b4:	ldr	r6, [sp, #108]	; 0x6c
   385b8:	ldr	r8, [sp, #112]	; 0x70
   385bc:	ldr	r5, [sp, #116]	; 0x74
   385c0:	uxtb	r3, r3
   385c4:	cmp	r1, #1
   385c8:	bls	38284 <__assert_fail@plt+0x26f98>
   385cc:	ldr	r2, [sp, #56]	; 0x38
   385d0:	and	r3, r3, r2
   385d4:	uxtb	r3, r3
   385d8:	b	38294 <__assert_fail@plt+0x26fa8>
   385dc:	mov	r3, #2
   385e0:	str	r3, [sp, #176]	; 0xb0
   385e4:	ldr	r2, [sp, #64]	; 0x40
   385e8:	ldr	r3, [sp, #56]	; 0x38
   385ec:	mov	sl, r9
   385f0:	mov	r9, fp
   385f4:	and	r3, r3, r2
   385f8:	tst	r3, #255	; 0xff
   385fc:	ldr	r3, [sp, #176]	; 0xb0
   38600:	movne	r3, #4
   38604:	str	r3, [sp, #176]	; 0xb0
   38608:	ldr	r3, [sp, #180]	; 0xb4
   3860c:	mov	ip, #0
   38610:	bic	r3, r3, #2
   38614:	str	r3, [sp, #4]
   38618:	ldr	r3, [sp, #192]	; 0xc0
   3861c:	ldr	r2, [sp, #44]	; 0x2c
   38620:	str	r3, [sp, #16]
   38624:	ldr	r3, [sp, #188]	; 0xbc
   38628:	mov	r1, r9
   3862c:	str	r3, [sp, #12]
   38630:	ldr	r3, [sp, #176]	; 0xb0
   38634:	mov	r0, sl
   38638:	str	r3, [sp]
   3863c:	str	ip, [sp, #8]
   38640:	ldr	r3, [sp, #24]
   38644:	bl	374a4 <__assert_fail@plt+0x261b8>
   38648:	mov	fp, r0
   3864c:	mov	r0, fp
   38650:	add	sp, sp, #140	; 0x8c
   38654:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   38658:	mov	r4, #92	; 0x5c
   3865c:	mov	r1, #0
   38660:	mov	r3, r4
   38664:	b	37c58 <__assert_fail@plt+0x2696c>
   38668:	mov	r3, #0
   3866c:	ldr	r1, [sp, #52]	; 0x34
   38670:	str	r3, [sp, #32]
   38674:	mov	r4, #63	; 0x3f
   38678:	b	37a78 <__assert_fail@plt+0x2678c>
   3867c:	cmp	fp, #0
   38680:	beq	386dc <__assert_fail@plt+0x273f0>
   38684:	mov	r3, #39	; 0x27
   38688:	strb	r3, [r9]
   3868c:	mov	r3, #0
   38690:	str	r3, [sp, #40]	; 0x28
   38694:	mov	r3, #1
   38698:	str	r3, [sp, #68]	; 0x44
   3869c:	ldr	r3, [pc, #448]	; 38864 <__assert_fail@plt+0x27578>
   386a0:	mov	r8, #1
   386a4:	str	r3, [sp, #72]	; 0x48
   386a8:	b	3788c <__assert_fail@plt+0x265a0>
   386ac:	ldr	r3, [sp, #40]	; 0x28
   386b0:	mov	sl, r9
   386b4:	str	r3, [sp, #56]	; 0x38
   386b8:	mov	r9, fp
   386bc:	ldr	r2, [sp, #64]	; 0x40
   386c0:	b	385f4 <__assert_fail@plt+0x27308>
   386c4:	str	r2, [sp, #36]	; 0x24
   386c8:	b	37adc <__assert_fail@plt+0x267f0>
   386cc:	mov	r1, #0
   386d0:	str	r3, [sp, #32]
   386d4:	mov	r4, #63	; 0x3f
   386d8:	b	37a78 <__assert_fail@plt+0x2678c>
   386dc:	ldr	r3, [pc, #384]	; 38864 <__assert_fail@plt+0x27578>
   386e0:	str	r3, [sp, #72]	; 0x48
   386e4:	mov	r3, #0
   386e8:	str	r3, [sp, #40]	; 0x28
   386ec:	mov	r3, #1
   386f0:	str	r3, [sp, #68]	; 0x44
   386f4:	mov	r8, r3
   386f8:	b	3788c <__assert_fail@plt+0x265a0>
   386fc:	bl	112c8 <abort@plt>
   38700:	cmp	fp, #0
   38704:	beq	38764 <__assert_fail@plt+0x27478>
   38708:	mov	r2, #1
   3870c:	mov	r3, #34	; 0x22
   38710:	strb	r3, [r9]
   38714:	mov	r8, r2
   38718:	mov	r3, r2
   3871c:	str	r2, [sp, #68]	; 0x44
   38720:	str	r3, [sp, #56]	; 0x38
   38724:	ldr	r3, [pc, #316]	; 38868 <__assert_fail@plt+0x2757c>
   38728:	ldr	r1, [sp, #56]	; 0x38
   3872c:	str	r3, [sp, #72]	; 0x48
   38730:	ldr	r2, [sp, #176]	; 0xb0
   38734:	ldr	ip, [sp, #40]	; 0x28
   38738:	ldr	lr, [sp, #176]	; 0xb0
   3873c:	b	37570 <__assert_fail@plt+0x26284>
   38740:	ldr	r0, [sp, #44]	; 0x2c
   38744:	bl	111a8 <strlen@plt>
   38748:	str	r0, [sp, #24]
   3874c:	b	38450 <__assert_fail@plt+0x27164>
   38750:	mov	r7, #0
   38754:	ldr	r1, [sp, #52]	; 0x34
   38758:	str	r3, [sp, #32]
   3875c:	mov	r4, #48	; 0x30
   38760:	b	37a78 <__assert_fail@plt+0x2678c>
   38764:	mov	r3, #1
   38768:	str	r3, [sp, #68]	; 0x44
   3876c:	mov	r8, r3
   38770:	b	38720 <__assert_fail@plt+0x27434>
   38774:	mov	r3, #2
   38778:	mov	sl, r9
   3877c:	str	r3, [sp, #176]	; 0xb0
   38780:	mov	r9, fp
   38784:	ldr	r3, [sp, #56]	; 0x38
   38788:	b	385f4 <__assert_fail@plt+0x27308>
   3878c:	ldr	r6, [sp, #48]	; 0x30
   38790:	b	38240 <__assert_fail@plt+0x26f54>
   38794:	ldr	r0, [sp, #24]
   38798:	mov	ip, r6
   3879c:	cmp	r0, ip
   387a0:	mov	r1, r7
   387a4:	mov	r2, r4
   387a8:	ldr	r7, [sp, #104]	; 0x68
   387ac:	ldr	r4, [sp, #32]
   387b0:	ldr	r6, [sp, #108]	; 0x6c
   387b4:	ldr	r8, [sp, #112]	; 0x70
   387b8:	ldr	r5, [sp, #116]	; 0x74
   387bc:	bls	387ec <__assert_fail@plt+0x27500>
   387c0:	ldrb	r3, [r2]
   387c4:	cmp	r3, #0
   387c8:	bne	387dc <__assert_fail@plt+0x274f0>
   387cc:	b	388fc <__assert_fail@plt+0x27610>
   387d0:	ldrb	r3, [r2, #1]!
   387d4:	cmp	r3, #0
   387d8:	beq	388fc <__assert_fail@plt+0x27610>
   387dc:	add	r1, r1, #1
   387e0:	add	r3, sl, r1
   387e4:	cmp	r0, r3
   387e8:	bhi	387d0 <__assert_fail@plt+0x274e4>
   387ec:	mov	r2, #0
   387f0:	mov	r3, r7
   387f4:	str	r2, [sp, #32]
   387f8:	b	385c4 <__assert_fail@plt+0x272d8>
   387fc:	mov	r1, r7
   38800:	ldr	r7, [sp, #104]	; 0x68
   38804:	mov	r2, #0
   38808:	ldr	r4, [sp, #32]
   3880c:	ldr	r6, [sp, #108]	; 0x6c
   38810:	ldr	r8, [sp, #112]	; 0x70
   38814:	ldr	r5, [sp, #116]	; 0x74
   38818:	mov	r3, r7
   3881c:	str	r2, [sp, #32]
   38820:	b	385c4 <__assert_fail@plt+0x272d8>
   38824:	mov	r3, r5
   38828:	eor	r3, r3, #1
   3882c:	ldr	r4, [sp, #32]
   38830:	mov	r1, r7
   38834:	str	r5, [sp, #32]
   38838:	ldr	r7, [sp, #104]	; 0x68
   3883c:	ldr	r6, [sp, #108]	; 0x6c
   38840:	ldr	r8, [sp, #112]	; 0x70
   38844:	ldr	r5, [sp, #116]	; 0x74
   38848:	uxtb	r3, r3
   3884c:	b	385c4 <__assert_fail@plt+0x272d8>
   38850:	mov	sl, r9
   38854:	str	r3, [sp, #56]	; 0x38
   38858:	mov	r9, fp
   3885c:	ldr	r2, [sp, #64]	; 0x40
   38860:	b	385f4 <__assert_fail@plt+0x27308>
   38864:	muleq	r4, ip, r8
   38868:	muleq	r4, r8, r8
   3886c:	andeq	r1, r4, r0, lsr #17
   38870:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   38874:	ldr	r2, [sp, #44]	; 0x2c
   38878:	ldrb	r1, [r2, r3]
   3887c:	sub	r2, r1, #33	; 0x21
   38880:	uxtb	r2, r2
   38884:	cmp	r2, #29
   38888:	bhi	38908 <__assert_fail@plt+0x2761c>
   3888c:	ldr	r0, [pc, #-36]	; 38870 <__assert_fail@plt+0x27584>
   38890:	mov	ip, #1
   38894:	ands	r2, r0, ip, lsl r2
   38898:	beq	38928 <__assert_fail@plt+0x2763c>
   3889c:	ldr	r2, [sp, #40]	; 0x28
   388a0:	cmp	r2, #0
   388a4:	bne	38a1c <__assert_fail@plt+0x27730>
   388a8:	add	r2, r8, #1
   388ac:	cmp	fp, r8
   388b0:	strbhi	r4, [r9, r8]
   388b4:	cmp	fp, r2
   388b8:	movhi	r0, #34	; 0x22
   388bc:	strbhi	r0, [r9, r2]
   388c0:	add	r2, r8, #2
   388c4:	cmp	fp, r2
   388c8:	movhi	r0, #34	; 0x22
   388cc:	strbhi	r0, [r9, r2]
   388d0:	add	r2, r8, #3
   388d4:	cmp	fp, r2
   388d8:	mov	sl, r3
   388dc:	ldr	r3, [sp, #40]	; 0x28
   388e0:	movhi	r0, #63	; 0x3f
   388e4:	mov	r4, r1
   388e8:	strbhi	r0, [r9, r2]
   388ec:	add	r8, r8, #4
   388f0:	mov	r1, r3
   388f4:	str	r3, [sp, #32]
   388f8:	b	37a78 <__assert_fail@plt+0x2678c>
   388fc:	str	r3, [sp, #32]
   38900:	mov	r3, r7
   38904:	b	385c4 <__assert_fail@plt+0x272d8>
   38908:	mov	r1, #0
   3890c:	str	r1, [sp, #32]
   38910:	b	37a78 <__assert_fail@plt+0x2678c>
   38914:	mov	sl, r9
   38918:	ldr	r3, [sp, #56]	; 0x38
   3891c:	mov	r9, fp
   38920:	ldr	r2, [sp, #64]	; 0x40
   38924:	b	385f4 <__assert_fail@plt+0x27308>
   38928:	str	r2, [sp, #32]
   3892c:	mov	r1, #0
   38930:	b	37a78 <__assert_fail@plt+0x2678c>
   38934:	ldr	r2, [sp, #76]	; 0x4c
   38938:	mov	sl, r9
   3893c:	mov	r9, fp
   38940:	mov	fp, r8
   38944:	ldr	r1, [sp, #72]	; 0x48
   38948:	cmp	r1, #0
   3894c:	moveq	r3, #0
   38950:	andne	r3, r2, #1
   38954:	cmp	r3, #0
   38958:	beq	38984 <__assert_fail@plt+0x27698>
   3895c:	ldrb	r3, [r1]
   38960:	cmp	r3, #0
   38964:	beq	38984 <__assert_fail@plt+0x27698>
   38968:	mov	r2, r1
   3896c:	cmp	r9, fp
   38970:	strbhi	r3, [sl, fp]
   38974:	ldrb	r3, [r2, #1]!
   38978:	add	fp, fp, #1
   3897c:	cmp	r3, #0
   38980:	bne	3896c <__assert_fail@plt+0x27680>
   38984:	cmp	r9, fp
   38988:	movhi	r3, #0
   3898c:	strbhi	r3, [sl, fp]
   38990:	b	3864c <__assert_fail@plt+0x27360>
   38994:	ldr	r3, [sp, #192]	; 0xc0
   38998:	mov	ip, #5
   3899c:	str	r3, [sp, #16]
   389a0:	ldr	r3, [sp, #188]	; 0xbc
   389a4:	ldr	r2, [sp, #44]	; 0x2c
   389a8:	str	r3, [sp, #12]
   389ac:	ldr	r3, [sp, #184]	; 0xb8
   389b0:	ldr	r1, [sp, #84]	; 0x54
   389b4:	str	r3, [sp, #8]
   389b8:	ldr	r3, [sp, #180]	; 0xb4
   389bc:	mov	r0, r9
   389c0:	str	r3, [sp, #4]
   389c4:	str	ip, [sp]
   389c8:	ldr	r3, [sp, #24]
   389cc:	bl	374a4 <__assert_fail@plt+0x261b8>
   389d0:	mov	fp, r0
   389d4:	b	3864c <__assert_fail@plt+0x27360>
   389d8:	mov	sl, r9
   389dc:	mov	r9, fp
   389e0:	mov	fp, r8
   389e4:	b	38944 <__assert_fail@plt+0x27658>
   389e8:	ldr	r1, [sp, #176]	; 0xb0
   389ec:	bl	37384 <__assert_fail@plt+0x26098>
   389f0:	str	r0, [sp, #192]	; 0xc0
   389f4:	b	37960 <__assert_fail@plt+0x26674>
   389f8:	ldr	r1, [sp, #176]	; 0xb0
   389fc:	bl	37384 <__assert_fail@plt+0x26098>
   38a00:	str	r0, [sp, #188]	; 0xbc
   38a04:	b	37940 <__assert_fail@plt+0x26654>
   38a08:	mov	sl, r9
   38a0c:	mov	r2, r3
   38a10:	mov	r9, fp
   38a14:	mov	fp, r8
   38a18:	b	38944 <__assert_fail@plt+0x27658>
   38a1c:	mov	sl, r9
   38a20:	mov	r9, fp
   38a24:	b	38608 <__assert_fail@plt+0x2731c>
   38a28:	push	{r4, r5, r6, lr}
   38a2c:	mov	r5, r0
   38a30:	bl	111c0 <__errno_location@plt>
   38a34:	cmp	r5, #0
   38a38:	mov	r1, #48	; 0x30
   38a3c:	mov	r4, r0
   38a40:	ldr	r0, [pc, #16]	; 38a58 <__assert_fail@plt+0x2776c>
   38a44:	ldr	r6, [r4]
   38a48:	movne	r0, r5
   38a4c:	bl	3c2d0 <__assert_fail@plt+0x2afe4>
   38a50:	str	r6, [r4]
   38a54:	pop	{r4, r5, r6, pc}
   38a58:	ldrdeq	r2, [r5], -ip
   38a5c:	ldr	r3, [pc, #12]	; 38a70 <__assert_fail@plt+0x27784>
   38a60:	cmp	r0, #0
   38a64:	moveq	r0, r3
   38a68:	ldr	r0, [r0]
   38a6c:	bx	lr
   38a70:	ldrdeq	r2, [r5], -ip
   38a74:	ldr	r3, [pc, #12]	; 38a88 <__assert_fail@plt+0x2779c>
   38a78:	cmp	r0, #0
   38a7c:	moveq	r0, r3
   38a80:	str	r1, [r0]
   38a84:	bx	lr
   38a88:	ldrdeq	r2, [r5], -ip
   38a8c:	ldr	r3, [pc, #52]	; 38ac8 <__assert_fail@plt+0x277dc>
   38a90:	cmp	r0, #0
   38a94:	moveq	r0, r3
   38a98:	add	r3, r0, #8
   38a9c:	push	{lr}		; (str lr, [sp, #-4]!)
   38aa0:	lsr	lr, r1, #5
   38aa4:	and	r1, r1, #31
   38aa8:	ldr	ip, [r3, lr, lsl #2]
   38aac:	lsr	r0, ip, r1
   38ab0:	eor	r2, r2, r0
   38ab4:	and	r2, r2, #1
   38ab8:	and	r0, r0, #1
   38abc:	eor	r1, ip, r2, lsl r1
   38ac0:	str	r1, [r3, lr, lsl #2]
   38ac4:	pop	{pc}		; (ldr pc, [sp], #4)
   38ac8:	ldrdeq	r2, [r5], -ip
   38acc:	ldr	r3, [pc, #16]	; 38ae4 <__assert_fail@plt+0x277f8>
   38ad0:	cmp	r0, #0
   38ad4:	movne	r3, r0
   38ad8:	ldr	r0, [r3, #4]
   38adc:	str	r1, [r3, #4]
   38ae0:	bx	lr
   38ae4:	ldrdeq	r2, [r5], -ip
   38ae8:	ldr	r3, [pc, #44]	; 38b1c <__assert_fail@plt+0x27830>
   38aec:	cmp	r0, #0
   38af0:	moveq	r0, r3
   38af4:	mov	ip, #10
   38af8:	cmp	r2, #0
   38afc:	cmpne	r1, #0
   38b00:	str	ip, [r0]
   38b04:	beq	38b14 <__assert_fail@plt+0x27828>
   38b08:	str	r1, [r0, #40]	; 0x28
   38b0c:	str	r2, [r0, #44]	; 0x2c
   38b10:	bx	lr
   38b14:	push	{r4, lr}
   38b18:	bl	112c8 <abort@plt>
   38b1c:	ldrdeq	r2, [r5], -ip
   38b20:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   38b24:	sub	sp, sp, #24
   38b28:	ldr	ip, [pc, #108]	; 38b9c <__assert_fail@plt+0x278b0>
   38b2c:	ldr	r4, [sp, #56]	; 0x38
   38b30:	mov	r9, r2
   38b34:	cmp	r4, #0
   38b38:	moveq	r4, ip
   38b3c:	mov	sl, r3
   38b40:	mov	r7, r0
   38b44:	mov	r8, r1
   38b48:	bl	111c0 <__errno_location@plt>
   38b4c:	ldr	r3, [r4, #44]	; 0x2c
   38b50:	mov	r1, r8
   38b54:	ldr	r6, [r0]
   38b58:	str	r3, [sp, #16]
   38b5c:	ldr	r2, [r4, #40]	; 0x28
   38b60:	add	r3, r4, #8
   38b64:	str	r3, [sp, #8]
   38b68:	str	r2, [sp, #12]
   38b6c:	ldr	r2, [r4, #4]
   38b70:	mov	r5, r0
   38b74:	str	r2, [sp, #4]
   38b78:	ldr	ip, [r4]
   38b7c:	mov	r3, sl
   38b80:	mov	r2, r9
   38b84:	mov	r0, r7
   38b88:	str	ip, [sp]
   38b8c:	bl	374a4 <__assert_fail@plt+0x261b8>
   38b90:	str	r6, [r5]
   38b94:	add	sp, sp, #24
   38b98:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   38b9c:	ldrdeq	r2, [r5], -ip
   38ba0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   38ba4:	cmp	r2, #0
   38ba8:	sub	sp, sp, #36	; 0x24
   38bac:	ldr	r4, [pc, #164]	; 38c58 <__assert_fail@plt+0x2796c>
   38bb0:	mov	r8, r1
   38bb4:	movne	r4, r2
   38bb8:	mov	r7, r0
   38bbc:	bl	111c0 <__errno_location@plt>
   38bc0:	ldr	r3, [r4, #44]	; 0x2c
   38bc4:	ldr	r5, [r4, #4]
   38bc8:	add	r9, r4, #8
   38bcc:	orr	r5, r5, #1
   38bd0:	mov	r1, #0
   38bd4:	mov	r2, r7
   38bd8:	ldr	fp, [r0]
   38bdc:	str	r3, [sp, #16]
   38be0:	ldr	r3, [r4, #40]	; 0x28
   38be4:	stmib	sp, {r5, r9}
   38be8:	str	r3, [sp, #12]
   38bec:	ldr	r3, [r4]
   38bf0:	mov	r6, r0
   38bf4:	str	r3, [sp]
   38bf8:	mov	r0, r1
   38bfc:	mov	r3, r8
   38c00:	bl	374a4 <__assert_fail@plt+0x261b8>
   38c04:	add	r1, r0, #1
   38c08:	mov	r0, r1
   38c0c:	str	r1, [sp, #28]
   38c10:	bl	3bd8c <__assert_fail@plt+0x2aaa0>
   38c14:	ldr	r3, [r4, #44]	; 0x2c
   38c18:	ldr	r1, [sp, #28]
   38c1c:	str	r3, [sp, #16]
   38c20:	ldr	r3, [r4, #40]	; 0x28
   38c24:	str	r5, [sp, #4]
   38c28:	str	r3, [sp, #12]
   38c2c:	str	r9, [sp, #8]
   38c30:	ldr	ip, [r4]
   38c34:	mov	r3, r8
   38c38:	mov	r2, r7
   38c3c:	str	ip, [sp]
   38c40:	mov	sl, r0
   38c44:	bl	374a4 <__assert_fail@plt+0x261b8>
   38c48:	mov	r0, sl
   38c4c:	str	fp, [r6]
   38c50:	add	sp, sp, #36	; 0x24
   38c54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   38c58:	ldrdeq	r2, [r5], -ip
   38c5c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   38c60:	cmp	r3, #0
   38c64:	sub	sp, sp, #44	; 0x2c
   38c68:	ldr	r4, [pc, #192]	; 38d30 <__assert_fail@plt+0x27a44>
   38c6c:	mov	r6, r2
   38c70:	movne	r4, r3
   38c74:	mov	r9, r1
   38c78:	mov	r8, r0
   38c7c:	bl	111c0 <__errno_location@plt>
   38c80:	ldr	r3, [r4, #44]	; 0x2c
   38c84:	ldr	r5, [r4, #4]
   38c88:	add	sl, r4, #8
   38c8c:	cmp	r6, #0
   38c90:	orreq	r5, r5, #1
   38c94:	mov	r1, #0
   38c98:	ldr	r2, [r0]
   38c9c:	str	r3, [sp, #16]
   38ca0:	ldr	r3, [r4, #40]	; 0x28
   38ca4:	stmib	sp, {r5, sl}
   38ca8:	str	r3, [sp, #12]
   38cac:	ldr	r3, [r4]
   38cb0:	mov	r7, r0
   38cb4:	str	r2, [sp, #28]
   38cb8:	str	r3, [sp]
   38cbc:	mov	r2, r8
   38cc0:	mov	r3, r9
   38cc4:	mov	r0, r1
   38cc8:	bl	374a4 <__assert_fail@plt+0x261b8>
   38ccc:	add	r1, r0, #1
   38cd0:	mov	fp, r0
   38cd4:	mov	r0, r1
   38cd8:	str	r1, [sp, #36]	; 0x24
   38cdc:	bl	3bd8c <__assert_fail@plt+0x2aaa0>
   38ce0:	ldr	r3, [r4, #44]	; 0x2c
   38ce4:	mov	r2, r8
   38ce8:	str	r3, [sp, #16]
   38cec:	ldr	r3, [r4, #40]	; 0x28
   38cf0:	str	r5, [sp, #4]
   38cf4:	str	r3, [sp, #12]
   38cf8:	str	sl, [sp, #8]
   38cfc:	ldr	ip, [r4]
   38d00:	ldr	r1, [sp, #36]	; 0x24
   38d04:	mov	r3, r9
   38d08:	str	ip, [sp]
   38d0c:	str	r0, [sp, #32]
   38d10:	bl	374a4 <__assert_fail@plt+0x261b8>
   38d14:	ldr	r2, [sp, #28]
   38d18:	cmp	r6, #0
   38d1c:	str	r2, [r7]
   38d20:	ldr	r0, [sp, #32]
   38d24:	strne	fp, [r6]
   38d28:	add	sp, sp, #44	; 0x2c
   38d2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   38d30:	ldrdeq	r2, [r5], -ip
   38d34:	push	{r4, r5, r6, r7, r8, lr}
   38d38:	ldr	r6, [pc, #116]	; 38db4 <__assert_fail@plt+0x27ac8>
   38d3c:	ldr	r3, [r6, #4]
   38d40:	ldr	r7, [r6]
   38d44:	cmp	r3, #1
   38d48:	movgt	r5, r7
   38d4c:	movgt	r4, #1
   38d50:	ble	38d70 <__assert_fail@plt+0x27a84>
   38d54:	ldr	r0, [r5, #12]
   38d58:	bl	3618c <__assert_fail@plt+0x24ea0>
   38d5c:	ldr	r3, [r6, #4]
   38d60:	add	r4, r4, #1
   38d64:	cmp	r3, r4
   38d68:	add	r5, r5, #8
   38d6c:	bgt	38d54 <__assert_fail@plt+0x27a68>
   38d70:	ldr	r0, [r7, #4]
   38d74:	ldr	r4, [pc, #60]	; 38db8 <__assert_fail@plt+0x27acc>
   38d78:	cmp	r0, r4
   38d7c:	beq	38d90 <__assert_fail@plt+0x27aa4>
   38d80:	bl	3618c <__assert_fail@plt+0x24ea0>
   38d84:	mov	r3, #256	; 0x100
   38d88:	str	r4, [r6, #12]
   38d8c:	str	r3, [r6, #8]
   38d90:	ldr	r4, [pc, #36]	; 38dbc <__assert_fail@plt+0x27ad0>
   38d94:	cmp	r7, r4
   38d98:	beq	38da8 <__assert_fail@plt+0x27abc>
   38d9c:	mov	r0, r7
   38da0:	bl	3618c <__assert_fail@plt+0x24ea0>
   38da4:	str	r4, [r6]
   38da8:	mov	r3, #1
   38dac:	str	r3, [r6, #4]
   38db0:	pop	{r4, r5, r6, r7, r8, pc}
   38db4:	andeq	r2, r5, r4, asr #2
   38db8:	andeq	r2, r5, ip, lsl #4
   38dbc:	andeq	r2, r5, ip, asr #2
   38dc0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   38dc4:	sub	sp, sp, #44	; 0x2c
   38dc8:	mov	r5, r0
   38dcc:	mov	sl, r1
   38dd0:	bl	111c0 <__errno_location@plt>
   38dd4:	ldr	r4, [pc, #400]	; 38f6c <__assert_fail@plt+0x27c80>
   38dd8:	cmn	r5, #-2147483647	; 0x80000001
   38ddc:	ldr	r6, [r4]
   38de0:	mov	r8, r0
   38de4:	movne	r0, #0
   38de8:	moveq	r0, #1
   38dec:	ldr	r3, [r8]
   38df0:	orrs	r0, r0, r5, lsr #31
   38df4:	str	r3, [sp, #24]
   38df8:	bne	38f68 <__assert_fail@plt+0x27c7c>
   38dfc:	ldr	r2, [r4, #4]
   38e00:	cmp	r5, r2
   38e04:	blt	38e64 <__assert_fail@plt+0x27b78>
   38e08:	add	r7, r4, #8
   38e0c:	cmp	r6, r7
   38e10:	str	r2, [sp, #36]	; 0x24
   38e14:	beq	38f38 <__assert_fail@plt+0x27c4c>
   38e18:	mov	r3, #8
   38e1c:	sub	r2, r5, r2
   38e20:	mov	r0, r6
   38e24:	str	r3, [sp]
   38e28:	add	r2, r2, #1
   38e2c:	mvn	r3, #-2147483648	; 0x80000000
   38e30:	add	r1, sp, #36	; 0x24
   38e34:	bl	3bfa8 <__assert_fail@plt+0x2acbc>
   38e38:	mov	r6, r0
   38e3c:	str	r0, [r4]
   38e40:	ldr	r0, [r4, #4]
   38e44:	ldr	r2, [sp, #36]	; 0x24
   38e48:	mov	r1, #0
   38e4c:	sub	r2, r2, r0
   38e50:	add	r0, r6, r0, lsl #3
   38e54:	lsl	r2, r2, #3
   38e58:	bl	111f0 <memset@plt>
   38e5c:	ldr	r3, [sp, #36]	; 0x24
   38e60:	str	r3, [r4, #4]
   38e64:	ldr	r4, [pc, #260]	; 38f70 <__assert_fail@plt+0x27c84>
   38e68:	add	fp, r6, r5, lsl #3
   38e6c:	ldr	r9, [r6, r5, lsl #3]
   38e70:	ldr	r0, [r4, #4]
   38e74:	ldr	r3, [r4]
   38e78:	ldr	r7, [fp, #4]
   38e7c:	ldr	r1, [r4, #44]	; 0x2c
   38e80:	ldr	r2, [r4, #40]	; 0x28
   38e84:	orr	r0, r0, #1
   38e88:	str	r3, [sp]
   38e8c:	add	r3, r4, #8
   38e90:	str	r0, [sp, #28]
   38e94:	str	r0, [sp, #4]
   38e98:	str	r1, [sp, #16]
   38e9c:	str	r2, [sp, #12]
   38ea0:	str	r3, [sp, #8]
   38ea4:	mov	r0, r7
   38ea8:	mov	r1, r9
   38eac:	mvn	r3, #0
   38eb0:	mov	r2, sl
   38eb4:	bl	374a4 <__assert_fail@plt+0x261b8>
   38eb8:	cmp	r9, r0
   38ebc:	bhi	38f24 <__assert_fail@plt+0x27c38>
   38ec0:	add	r3, r4, #48	; 0x30
   38ec4:	add	r9, r0, #1
   38ec8:	cmp	r7, r3
   38ecc:	str	r9, [r6, r5, lsl #3]
   38ed0:	beq	38edc <__assert_fail@plt+0x27bf0>
   38ed4:	mov	r0, r7
   38ed8:	bl	3618c <__assert_fail@plt+0x24ea0>
   38edc:	mov	r0, r9
   38ee0:	bl	3bd8c <__assert_fail@plt+0x2aaa0>
   38ee4:	ldr	ip, [r4, #44]	; 0x2c
   38ee8:	ldr	r3, [r4]
   38eec:	ldr	lr, [r4, #40]	; 0x28
   38ef0:	ldr	r4, [pc, #124]	; 38f74 <__assert_fail@plt+0x27c88>
   38ef4:	mov	r2, sl
   38ef8:	mov	r1, r9
   38efc:	str	r0, [fp, #4]
   38f00:	str	r4, [sp, #8]
   38f04:	ldr	r4, [sp, #28]
   38f08:	str	r3, [sp]
   38f0c:	str	r4, [sp, #4]
   38f10:	str	ip, [sp, #16]
   38f14:	str	lr, [sp, #12]
   38f18:	mvn	r3, #0
   38f1c:	mov	r7, r0
   38f20:	bl	374a4 <__assert_fail@plt+0x261b8>
   38f24:	ldr	r3, [sp, #24]
   38f28:	mov	r0, r7
   38f2c:	str	r3, [r8]
   38f30:	add	sp, sp, #44	; 0x2c
   38f34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   38f38:	mov	r3, #8
   38f3c:	sub	r2, r5, r2
   38f40:	str	r3, [sp]
   38f44:	add	r1, sp, #36	; 0x24
   38f48:	add	r2, r2, #1
   38f4c:	mvn	r3, #-2147483648	; 0x80000000
   38f50:	bl	3bfa8 <__assert_fail@plt+0x2acbc>
   38f54:	mov	r6, r0
   38f58:	ldm	r7, {r0, r1}
   38f5c:	str	r6, [r4]
   38f60:	stm	r6, {r0, r1}
   38f64:	b	38e40 <__assert_fail@plt+0x27b54>
   38f68:	bl	112c8 <abort@plt>
   38f6c:	andeq	r2, r5, r4, asr #2
   38f70:	ldrdeq	r2, [r5], -ip
   38f74:	andeq	r2, r5, r4, ror #3
   38f78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   38f7c:	sub	sp, sp, #52	; 0x34
   38f80:	mov	r5, r0
   38f84:	mov	sl, r1
   38f88:	mov	fp, r2
   38f8c:	bl	111c0 <__errno_location@plt>
   38f90:	ldr	r4, [pc, #408]	; 39130 <__assert_fail@plt+0x27e44>
   38f94:	cmn	r5, #-2147483647	; 0x80000001
   38f98:	ldr	r6, [r4]
   38f9c:	mov	r8, r0
   38fa0:	movne	r0, #0
   38fa4:	moveq	r0, #1
   38fa8:	ldr	r3, [r8]
   38fac:	orrs	r0, r0, r5, lsr #31
   38fb0:	str	r3, [sp, #28]
   38fb4:	bne	3912c <__assert_fail@plt+0x27e40>
   38fb8:	ldr	r2, [r4, #4]
   38fbc:	cmp	r5, r2
   38fc0:	blt	39020 <__assert_fail@plt+0x27d34>
   38fc4:	add	r7, r4, #8
   38fc8:	cmp	r6, r7
   38fcc:	str	r2, [sp, #44]	; 0x2c
   38fd0:	beq	390fc <__assert_fail@plt+0x27e10>
   38fd4:	mov	r3, #8
   38fd8:	sub	r2, r5, r2
   38fdc:	mov	r0, r6
   38fe0:	str	r3, [sp]
   38fe4:	add	r2, r2, #1
   38fe8:	mvn	r3, #-2147483648	; 0x80000000
   38fec:	add	r1, sp, #44	; 0x2c
   38ff0:	bl	3bfa8 <__assert_fail@plt+0x2acbc>
   38ff4:	mov	r6, r0
   38ff8:	str	r0, [r4]
   38ffc:	ldr	r0, [r4, #4]
   39000:	ldr	r2, [sp, #44]	; 0x2c
   39004:	mov	r1, #0
   39008:	sub	r2, r2, r0
   3900c:	add	r0, r6, r0, lsl #3
   39010:	lsl	r2, r2, #3
   39014:	bl	111f0 <memset@plt>
   39018:	ldr	r3, [sp, #44]	; 0x2c
   3901c:	str	r3, [r4, #4]
   39020:	ldr	r4, [pc, #268]	; 39134 <__assert_fail@plt+0x27e48>
   39024:	add	r3, r6, r5, lsl #3
   39028:	str	r3, [sp, #32]
   3902c:	ldr	r7, [r3, #4]
   39030:	ldr	r0, [r4, #4]
   39034:	ldr	r3, [r4]
   39038:	ldr	r9, [r6, r5, lsl #3]
   3903c:	ldr	r1, [r4, #44]	; 0x2c
   39040:	ldr	r2, [r4, #40]	; 0x28
   39044:	orr	r0, r0, #1
   39048:	str	r3, [sp]
   3904c:	add	r3, r4, #8
   39050:	str	r0, [sp, #36]	; 0x24
   39054:	str	r0, [sp, #4]
   39058:	str	r1, [sp, #16]
   3905c:	str	r2, [sp, #12]
   39060:	str	r3, [sp, #8]
   39064:	mov	r0, r7
   39068:	mov	r1, r9
   3906c:	mov	r3, fp
   39070:	mov	r2, sl
   39074:	bl	374a4 <__assert_fail@plt+0x261b8>
   39078:	cmp	r9, r0
   3907c:	bhi	390e8 <__assert_fail@plt+0x27dfc>
   39080:	add	r3, r4, #48	; 0x30
   39084:	add	r9, r0, #1
   39088:	cmp	r7, r3
   3908c:	str	r9, [r6, r5, lsl #3]
   39090:	beq	3909c <__assert_fail@plt+0x27db0>
   39094:	mov	r0, r7
   39098:	bl	3618c <__assert_fail@plt+0x24ea0>
   3909c:	mov	r0, r9
   390a0:	bl	3bd8c <__assert_fail@plt+0x2aaa0>
   390a4:	ldr	ip, [sp, #32]
   390a8:	ldr	lr, [r4, #44]	; 0x2c
   390ac:	ldr	r5, [r4, #40]	; 0x28
   390b0:	mov	r3, fp
   390b4:	mov	r2, sl
   390b8:	mov	r1, r9
   390bc:	str	r0, [ip, #4]
   390c0:	ldr	ip, [r4]
   390c4:	ldr	r4, [pc, #108]	; 39138 <__assert_fail@plt+0x27e4c>
   390c8:	str	lr, [sp, #16]
   390cc:	str	r4, [sp, #8]
   390d0:	ldr	r4, [sp, #36]	; 0x24
   390d4:	str	r5, [sp, #12]
   390d8:	str	r4, [sp, #4]
   390dc:	str	ip, [sp]
   390e0:	mov	r7, r0
   390e4:	bl	374a4 <__assert_fail@plt+0x261b8>
   390e8:	ldr	r3, [sp, #28]
   390ec:	mov	r0, r7
   390f0:	str	r3, [r8]
   390f4:	add	sp, sp, #52	; 0x34
   390f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   390fc:	mov	r3, #8
   39100:	sub	r2, r5, r2
   39104:	str	r3, [sp]
   39108:	add	r1, sp, #44	; 0x2c
   3910c:	add	r2, r2, #1
   39110:	mvn	r3, #-2147483648	; 0x80000000
   39114:	bl	3bfa8 <__assert_fail@plt+0x2acbc>
   39118:	mov	r6, r0
   3911c:	ldm	r7, {r0, r1}
   39120:	str	r6, [r4]
   39124:	stm	r6, {r0, r1}
   39128:	b	38ffc <__assert_fail@plt+0x27d10>
   3912c:	bl	112c8 <abort@plt>
   39130:	andeq	r2, r5, r4, asr #2
   39134:	ldrdeq	r2, [r5], -ip
   39138:	andeq	r2, r5, r4, ror #3
   3913c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   39140:	sub	sp, sp, #44	; 0x2c
   39144:	mov	sl, r0
   39148:	bl	111c0 <__errno_location@plt>
   3914c:	ldr	r4, [pc, #352]	; 392b4 <__assert_fail@plt+0x27fc8>
   39150:	ldr	r2, [r4, #4]
   39154:	ldr	r5, [r4]
   39158:	cmp	r2, #0
   3915c:	ldr	r3, [r0]
   39160:	mov	r8, r0
   39164:	str	r3, [sp, #28]
   39168:	bgt	391c4 <__assert_fail@plt+0x27ed8>
   3916c:	add	r6, r4, #8
   39170:	cmp	r5, r6
   39174:	str	r2, [sp, #36]	; 0x24
   39178:	beq	39284 <__assert_fail@plt+0x27f98>
   3917c:	mov	r3, #8
   39180:	mov	r0, r5
   39184:	str	r3, [sp]
   39188:	rsb	r2, r2, #1
   3918c:	mvn	r3, #-2147483648	; 0x80000000
   39190:	add	r1, sp, #36	; 0x24
   39194:	bl	3bfa8 <__assert_fail@plt+0x2acbc>
   39198:	mov	r5, r0
   3919c:	str	r0, [r4]
   391a0:	ldr	r0, [r4, #4]
   391a4:	ldr	r2, [sp, #36]	; 0x24
   391a8:	mov	r1, #0
   391ac:	sub	r2, r2, r0
   391b0:	add	r0, r5, r0, lsl #3
   391b4:	lsl	r2, r2, #3
   391b8:	bl	111f0 <memset@plt>
   391bc:	ldr	r3, [sp, #36]	; 0x24
   391c0:	str	r3, [r4, #4]
   391c4:	ldr	r4, [pc, #236]	; 392b8 <__assert_fail@plt+0x27fcc>
   391c8:	ldr	r9, [r5]
   391cc:	ldr	r6, [r5, #4]
   391d0:	ldr	r7, [r4, #4]
   391d4:	ldr	r1, [r4, #44]	; 0x2c
   391d8:	ldr	r2, [r4, #40]	; 0x28
   391dc:	ldr	r3, [r4]
   391e0:	orr	r7, r7, #1
   391e4:	add	fp, r4, #8
   391e8:	str	r1, [sp, #16]
   391ec:	str	r2, [sp, #12]
   391f0:	str	r3, [sp]
   391f4:	str	r7, [sp, #4]
   391f8:	str	fp, [sp, #8]
   391fc:	mov	r1, r9
   39200:	mov	r0, r6
   39204:	mvn	r3, #0
   39208:	mov	r2, sl
   3920c:	bl	374a4 <__assert_fail@plt+0x261b8>
   39210:	cmp	r9, r0
   39214:	bhi	39270 <__assert_fail@plt+0x27f84>
   39218:	add	r3, r4, #48	; 0x30
   3921c:	add	r9, r0, #1
   39220:	cmp	r6, r3
   39224:	str	r9, [r5]
   39228:	beq	39234 <__assert_fail@plt+0x27f48>
   3922c:	mov	r0, r6
   39230:	bl	3618c <__assert_fail@plt+0x24ea0>
   39234:	mov	r0, r9
   39238:	bl	3bd8c <__assert_fail@plt+0x2aaa0>
   3923c:	ldr	ip, [r4, #44]	; 0x2c
   39240:	ldr	r3, [r4]
   39244:	ldr	lr, [r4, #40]	; 0x28
   39248:	mov	r2, sl
   3924c:	mov	r1, r9
   39250:	str	r0, [r5, #4]
   39254:	str	r3, [sp]
   39258:	stmib	sp, {r7, fp}
   3925c:	str	ip, [sp, #16]
   39260:	str	lr, [sp, #12]
   39264:	mvn	r3, #0
   39268:	mov	r6, r0
   3926c:	bl	374a4 <__assert_fail@plt+0x261b8>
   39270:	ldr	r3, [sp, #28]
   39274:	mov	r0, r6
   39278:	str	r3, [r8]
   3927c:	add	sp, sp, #44	; 0x2c
   39280:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   39284:	mov	r3, #8
   39288:	str	r3, [sp]
   3928c:	add	r1, sp, #36	; 0x24
   39290:	rsb	r2, r2, #1
   39294:	mvn	r3, #-2147483648	; 0x80000000
   39298:	mov	r0, #0
   3929c:	bl	3bfa8 <__assert_fail@plt+0x2acbc>
   392a0:	mov	r5, r0
   392a4:	ldm	r6, {r0, r1}
   392a8:	str	r5, [r4]
   392ac:	stm	r5, {r0, r1}
   392b0:	b	391a0 <__assert_fail@plt+0x27eb4>
   392b4:	andeq	r2, r5, r4, asr #2
   392b8:	ldrdeq	r2, [r5], -ip
   392bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   392c0:	sub	sp, sp, #44	; 0x2c
   392c4:	mov	r9, r0
   392c8:	mov	sl, r1
   392cc:	bl	111c0 <__errno_location@plt>
   392d0:	ldr	r4, [pc, #364]	; 39444 <__assert_fail@plt+0x28158>
   392d4:	ldr	r2, [r4, #4]
   392d8:	ldr	r5, [r4]
   392dc:	cmp	r2, #0
   392e0:	ldr	r3, [r0]
   392e4:	mov	r7, r0
   392e8:	str	r3, [sp, #24]
   392ec:	bgt	39348 <__assert_fail@plt+0x2805c>
   392f0:	add	r6, r4, #8
   392f4:	cmp	r5, r6
   392f8:	str	r2, [sp, #36]	; 0x24
   392fc:	beq	39414 <__assert_fail@plt+0x28128>
   39300:	mov	r3, #8
   39304:	mov	r0, r5
   39308:	str	r3, [sp]
   3930c:	rsb	r2, r2, #1
   39310:	mvn	r3, #-2147483648	; 0x80000000
   39314:	add	r1, sp, #36	; 0x24
   39318:	bl	3bfa8 <__assert_fail@plt+0x2acbc>
   3931c:	mov	r5, r0
   39320:	str	r0, [r4]
   39324:	ldr	r0, [r4, #4]
   39328:	ldr	r2, [sp, #36]	; 0x24
   3932c:	mov	r1, #0
   39330:	sub	r2, r2, r0
   39334:	add	r0, r5, r0, lsl #3
   39338:	lsl	r2, r2, #3
   3933c:	bl	111f0 <memset@plt>
   39340:	ldr	r3, [sp, #36]	; 0x24
   39344:	str	r3, [r4, #4]
   39348:	ldr	r4, [pc, #248]	; 39448 <__assert_fail@plt+0x2815c>
   3934c:	ldr	r8, [r5]
   39350:	ldr	r6, [r5, #4]
   39354:	ldr	r0, [r4, #4]
   39358:	ldr	r1, [r4, #44]	; 0x2c
   3935c:	ldr	r2, [r4, #40]	; 0x28
   39360:	ldr	r3, [r4]
   39364:	orr	r0, r0, #1
   39368:	add	fp, r4, #8
   3936c:	str	r0, [sp, #28]
   39370:	str	r0, [sp, #4]
   39374:	str	r1, [sp, #16]
   39378:	str	r2, [sp, #12]
   3937c:	str	r3, [sp]
   39380:	str	fp, [sp, #8]
   39384:	mov	r1, r8
   39388:	mov	r0, r6
   3938c:	mov	r3, sl
   39390:	mov	r2, r9
   39394:	bl	374a4 <__assert_fail@plt+0x261b8>
   39398:	cmp	r8, r0
   3939c:	bhi	39400 <__assert_fail@plt+0x28114>
   393a0:	add	r3, r4, #48	; 0x30
   393a4:	add	r8, r0, #1
   393a8:	cmp	r6, r3
   393ac:	str	r8, [r5]
   393b0:	beq	393bc <__assert_fail@plt+0x280d0>
   393b4:	mov	r0, r6
   393b8:	bl	3618c <__assert_fail@plt+0x24ea0>
   393bc:	mov	r0, r8
   393c0:	bl	3bd8c <__assert_fail@plt+0x2aaa0>
   393c4:	ldr	lr, [r4, #44]	; 0x2c
   393c8:	ldr	ip, [r4]
   393cc:	mov	r3, sl
   393d0:	mov	r2, r9
   393d4:	mov	r1, r8
   393d8:	str	r0, [r5, #4]
   393dc:	ldr	r5, [r4, #40]	; 0x28
   393e0:	ldr	r4, [sp, #28]
   393e4:	str	fp, [sp, #8]
   393e8:	str	r4, [sp, #4]
   393ec:	str	lr, [sp, #16]
   393f0:	str	r5, [sp, #12]
   393f4:	str	ip, [sp]
   393f8:	mov	r6, r0
   393fc:	bl	374a4 <__assert_fail@plt+0x261b8>
   39400:	ldr	r3, [sp, #24]
   39404:	mov	r0, r6
   39408:	str	r3, [r7]
   3940c:	add	sp, sp, #44	; 0x2c
   39410:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   39414:	mov	r3, #8
   39418:	str	r3, [sp]
   3941c:	add	r1, sp, #36	; 0x24
   39420:	rsb	r2, r2, #1
   39424:	mvn	r3, #-2147483648	; 0x80000000
   39428:	mov	r0, #0
   3942c:	bl	3bfa8 <__assert_fail@plt+0x2acbc>
   39430:	mov	r5, r0
   39434:	ldm	r6, {r0, r1}
   39438:	str	r5, [r4]
   3943c:	stm	r5, {r0, r1}
   39440:	b	39324 <__assert_fail@plt+0x28038>
   39444:	andeq	r2, r5, r4, asr #2
   39448:	ldrdeq	r2, [r5], -ip
   3944c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   39450:	sub	sp, sp, #132	; 0x84
   39454:	mov	r5, r1
   39458:	mov	r4, r0
   3945c:	mov	r9, r2
   39460:	add	r0, sp, #80	; 0x50
   39464:	mov	r2, #48	; 0x30
   39468:	mov	r1, #0
   3946c:	bl	111f0 <memset@plt>
   39470:	cmp	r5, #10
   39474:	beq	3962c <__assert_fail@plt+0x28340>
   39478:	add	lr, sp, #80	; 0x50
   3947c:	str	r5, [sp, #80]	; 0x50
   39480:	ldm	lr!, {r0, r1, r2, r3}
   39484:	add	ip, sp, #32
   39488:	ldr	r6, [pc, #416]	; 39630 <__assert_fail@plt+0x28344>
   3948c:	stmia	ip!, {r0, r1, r2, r3}
   39490:	ldm	lr!, {r0, r1, r2, r3}
   39494:	stmia	ip!, {r0, r1, r2, r3}
   39498:	ldm	lr, {r0, r1, r2, r3}
   3949c:	stm	ip, {r0, r1, r2, r3}
   394a0:	bl	111c0 <__errno_location@plt>
   394a4:	cmn	r4, #-2147483647	; 0x80000001
   394a8:	ldr	r5, [r6]
   394ac:	mov	r7, r0
   394b0:	movne	r0, #0
   394b4:	moveq	r0, #1
   394b8:	ldr	r3, [r7]
   394bc:	orrs	r0, r0, r4, lsr #31
   394c0:	str	r3, [sp, #24]
   394c4:	bne	3962c <__assert_fail@plt+0x28340>
   394c8:	ldr	r2, [r6, #4]
   394cc:	cmp	r4, r2
   394d0:	blt	39530 <__assert_fail@plt+0x28244>
   394d4:	add	r8, r6, #8
   394d8:	cmp	r5, r8
   394dc:	str	r2, [sp, #80]	; 0x50
   394e0:	beq	395fc <__assert_fail@plt+0x28310>
   394e4:	mov	r3, #8
   394e8:	sub	r2, r4, r2
   394ec:	mov	r0, r5
   394f0:	str	r3, [sp]
   394f4:	add	r2, r2, #1
   394f8:	add	r1, sp, #80	; 0x50
   394fc:	mvn	r3, #-2147483648	; 0x80000000
   39500:	bl	3bfa8 <__assert_fail@plt+0x2acbc>
   39504:	mov	r5, r0
   39508:	str	r0, [r6]
   3950c:	ldr	r0, [r6, #4]
   39510:	ldr	r2, [sp, #80]	; 0x50
   39514:	mov	r1, #0
   39518:	sub	r2, r2, r0
   3951c:	add	r0, r5, r0, lsl #3
   39520:	lsl	r2, r2, #3
   39524:	bl	111f0 <memset@plt>
   39528:	ldr	r3, [sp, #80]	; 0x50
   3952c:	str	r3, [r6, #4]
   39530:	add	fp, r5, r4, lsl #3
   39534:	ldr	r1, [sp, #36]	; 0x24
   39538:	ldr	r8, [r5, r4, lsl #3]
   3953c:	ldr	r6, [fp, #4]
   39540:	ldr	r2, [sp, #72]	; 0x48
   39544:	ldr	r3, [sp, #32]
   39548:	ldr	ip, [sp, #76]	; 0x4c
   3954c:	orr	r1, r1, #1
   39550:	add	sl, sp, #40	; 0x28
   39554:	str	r1, [sp, #28]
   39558:	str	r1, [sp, #4]
   3955c:	str	r2, [sp, #12]
   39560:	str	r3, [sp]
   39564:	mov	r0, r6
   39568:	mov	r1, r8
   3956c:	str	ip, [sp, #16]
   39570:	str	sl, [sp, #8]
   39574:	mvn	r3, #0
   39578:	mov	r2, r9
   3957c:	bl	374a4 <__assert_fail@plt+0x261b8>
   39580:	cmp	r8, r0
   39584:	bhi	395e8 <__assert_fail@plt+0x282fc>
   39588:	ldr	r3, [pc, #164]	; 39634 <__assert_fail@plt+0x28348>
   3958c:	add	r8, r0, #1
   39590:	cmp	r6, r3
   39594:	str	r8, [r5, r4, lsl #3]
   39598:	beq	395a4 <__assert_fail@plt+0x282b8>
   3959c:	mov	r0, r6
   395a0:	bl	3618c <__assert_fail@plt+0x24ea0>
   395a4:	mov	r0, r8
   395a8:	bl	3bd8c <__assert_fail@plt+0x2aaa0>
   395ac:	ldr	lr, [sp, #76]	; 0x4c
   395b0:	ldr	r3, [sp, #32]
   395b4:	ldr	ip, [sp, #72]	; 0x48
   395b8:	ldr	r4, [sp, #28]
   395bc:	mov	r2, r9
   395c0:	mov	r1, r8
   395c4:	str	r0, [fp, #4]
   395c8:	str	r3, [sp]
   395cc:	str	sl, [sp, #8]
   395d0:	str	r4, [sp, #4]
   395d4:	str	lr, [sp, #16]
   395d8:	str	ip, [sp, #12]
   395dc:	mvn	r3, #0
   395e0:	mov	r6, r0
   395e4:	bl	374a4 <__assert_fail@plt+0x261b8>
   395e8:	ldr	r3, [sp, #24]
   395ec:	mov	r0, r6
   395f0:	str	r3, [r7]
   395f4:	add	sp, sp, #132	; 0x84
   395f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   395fc:	mov	r3, #8
   39600:	sub	r2, r4, r2
   39604:	add	r1, sp, #80	; 0x50
   39608:	str	r3, [sp]
   3960c:	add	r2, r2, #1
   39610:	mvn	r3, #-2147483648	; 0x80000000
   39614:	bl	3bfa8 <__assert_fail@plt+0x2acbc>
   39618:	mov	r5, r0
   3961c:	ldm	r8, {r0, r1}
   39620:	str	r5, [r6]
   39624:	stm	r5, {r0, r1}
   39628:	b	3950c <__assert_fail@plt+0x28220>
   3962c:	bl	112c8 <abort@plt>
   39630:	andeq	r2, r5, r4, asr #2
   39634:	andeq	r2, r5, ip, lsl #4
   39638:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3963c:	sub	sp, sp, #132	; 0x84
   39640:	mov	r5, r1
   39644:	mov	r4, r0
   39648:	mov	r9, r2
   3964c:	add	r0, sp, #80	; 0x50
   39650:	mov	r2, #48	; 0x30
   39654:	mov	r1, #0
   39658:	mov	sl, r3
   3965c:	bl	111f0 <memset@plt>
   39660:	cmp	r5, #10
   39664:	beq	39820 <__assert_fail@plt+0x28534>
   39668:	add	lr, sp, #80	; 0x50
   3966c:	str	r5, [sp, #80]	; 0x50
   39670:	ldm	lr!, {r0, r1, r2, r3}
   39674:	add	ip, sp, #32
   39678:	ldr	r6, [pc, #420]	; 39824 <__assert_fail@plt+0x28538>
   3967c:	stmia	ip!, {r0, r1, r2, r3}
   39680:	ldm	lr!, {r0, r1, r2, r3}
   39684:	stmia	ip!, {r0, r1, r2, r3}
   39688:	ldm	lr, {r0, r1, r2, r3}
   3968c:	stm	ip, {r0, r1, r2, r3}
   39690:	bl	111c0 <__errno_location@plt>
   39694:	cmn	r4, #-2147483647	; 0x80000001
   39698:	ldr	r5, [r6]
   3969c:	mov	r7, r0
   396a0:	movne	r0, #0
   396a4:	moveq	r0, #1
   396a8:	ldr	r3, [r7]
   396ac:	orrs	r0, r0, r4, lsr #31
   396b0:	str	r3, [sp, #24]
   396b4:	bne	39820 <__assert_fail@plt+0x28534>
   396b8:	ldr	r2, [r6, #4]
   396bc:	cmp	r4, r2
   396c0:	blt	39720 <__assert_fail@plt+0x28434>
   396c4:	add	r8, r6, #8
   396c8:	cmp	r5, r8
   396cc:	str	r2, [sp, #80]	; 0x50
   396d0:	beq	397f0 <__assert_fail@plt+0x28504>
   396d4:	mov	r3, #8
   396d8:	sub	r2, r4, r2
   396dc:	mov	r0, r5
   396e0:	str	r3, [sp]
   396e4:	add	r2, r2, #1
   396e8:	add	r1, sp, #80	; 0x50
   396ec:	mvn	r3, #-2147483648	; 0x80000000
   396f0:	bl	3bfa8 <__assert_fail@plt+0x2acbc>
   396f4:	mov	r5, r0
   396f8:	str	r0, [r6]
   396fc:	ldr	r0, [r6, #4]
   39700:	ldr	r2, [sp, #80]	; 0x50
   39704:	mov	r1, #0
   39708:	sub	r2, r2, r0
   3970c:	add	r0, r5, r0, lsl #3
   39710:	lsl	r2, r2, #3
   39714:	bl	111f0 <memset@plt>
   39718:	ldr	r3, [sp, #80]	; 0x50
   3971c:	str	r3, [r6, #4]
   39720:	add	fp, r5, r4, lsl #3
   39724:	ldr	r3, [sp, #32]
   39728:	ldr	r1, [sp, #36]	; 0x24
   3972c:	ldr	r8, [r5, r4, lsl #3]
   39730:	ldr	r6, [fp, #4]
   39734:	ldr	r2, [sp, #72]	; 0x48
   39738:	ldr	ip, [sp, #76]	; 0x4c
   3973c:	orr	r1, r1, #1
   39740:	str	r3, [sp]
   39744:	add	r3, sp, #40	; 0x28
   39748:	str	r1, [sp, #28]
   3974c:	str	r1, [sp, #4]
   39750:	str	r2, [sp, #12]
   39754:	str	r3, [sp, #8]
   39758:	mov	r0, r6
   3975c:	mov	r1, r8
   39760:	str	ip, [sp, #16]
   39764:	mov	r3, sl
   39768:	mov	r2, r9
   3976c:	bl	374a4 <__assert_fail@plt+0x261b8>
   39770:	cmp	r8, r0
   39774:	bhi	397dc <__assert_fail@plt+0x284f0>
   39778:	ldr	r3, [pc, #168]	; 39828 <__assert_fail@plt+0x2853c>
   3977c:	add	r8, r0, #1
   39780:	cmp	r6, r3
   39784:	str	r8, [r5, r4, lsl #3]
   39788:	beq	39794 <__assert_fail@plt+0x284a8>
   3978c:	mov	r0, r6
   39790:	bl	3618c <__assert_fail@plt+0x24ea0>
   39794:	mov	r0, r8
   39798:	bl	3bd8c <__assert_fail@plt+0x2aaa0>
   3979c:	add	lr, sp, #40	; 0x28
   397a0:	ldr	ip, [sp, #76]	; 0x4c
   397a4:	ldr	r4, [sp, #72]	; 0x48
   397a8:	ldr	r5, [sp, #28]
   397ac:	mov	r3, sl
   397b0:	mov	r2, r9
   397b4:	mov	r1, r8
   397b8:	str	r0, [fp, #4]
   397bc:	str	lr, [sp, #8]
   397c0:	ldr	lr, [sp, #32]
   397c4:	str	r5, [sp, #4]
   397c8:	str	ip, [sp, #16]
   397cc:	str	r4, [sp, #12]
   397d0:	str	lr, [sp]
   397d4:	mov	r6, r0
   397d8:	bl	374a4 <__assert_fail@plt+0x261b8>
   397dc:	ldr	r3, [sp, #24]
   397e0:	mov	r0, r6
   397e4:	str	r3, [r7]
   397e8:	add	sp, sp, #132	; 0x84
   397ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   397f0:	mov	r3, #8
   397f4:	sub	r2, r4, r2
   397f8:	add	r1, sp, #80	; 0x50
   397fc:	str	r3, [sp]
   39800:	add	r2, r2, #1
   39804:	mvn	r3, #-2147483648	; 0x80000000
   39808:	bl	3bfa8 <__assert_fail@plt+0x2acbc>
   3980c:	mov	r5, r0
   39810:	ldm	r8, {r0, r1}
   39814:	str	r5, [r6]
   39818:	stm	r5, {r0, r1}
   3981c:	b	396fc <__assert_fail@plt+0x28410>
   39820:	bl	112c8 <abort@plt>
   39824:	andeq	r2, r5, r4, asr #2
   39828:	andeq	r2, r5, ip, lsl #4
   3982c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   39830:	sub	sp, sp, #124	; 0x7c
   39834:	mov	r4, r0
   39838:	mov	r9, r1
   3983c:	add	r0, sp, #72	; 0x48
   39840:	mov	r2, #48	; 0x30
   39844:	mov	r1, #0
   39848:	bl	111f0 <memset@plt>
   3984c:	cmp	r4, #10
   39850:	beq	399dc <__assert_fail@plt+0x286f0>
   39854:	add	lr, sp, #72	; 0x48
   39858:	str	r4, [sp, #72]	; 0x48
   3985c:	ldm	lr!, {r0, r1, r2, r3}
   39860:	add	ip, sp, #24
   39864:	ldr	r5, [pc, #372]	; 399e0 <__assert_fail@plt+0x286f4>
   39868:	stmia	ip!, {r0, r1, r2, r3}
   3986c:	ldm	lr!, {r0, r1, r2, r3}
   39870:	stmia	ip!, {r0, r1, r2, r3}
   39874:	ldm	lr, {r0, r1, r2, r3}
   39878:	stm	ip, {r0, r1, r2, r3}
   3987c:	bl	111c0 <__errno_location@plt>
   39880:	ldr	r2, [r5, #4]
   39884:	ldr	r4, [r5]
   39888:	cmp	r2, #0
   3988c:	mov	r7, r0
   39890:	ldr	fp, [r0]
   39894:	bgt	398f0 <__assert_fail@plt+0x28604>
   39898:	add	r6, r5, #8
   3989c:	cmp	r4, r6
   398a0:	str	r2, [sp, #72]	; 0x48
   398a4:	beq	399ac <__assert_fail@plt+0x286c0>
   398a8:	mov	r3, #8
   398ac:	mov	r0, r4
   398b0:	str	r3, [sp]
   398b4:	rsb	r2, r2, #1
   398b8:	add	r1, sp, #72	; 0x48
   398bc:	mvn	r3, #-2147483648	; 0x80000000
   398c0:	bl	3bfa8 <__assert_fail@plt+0x2acbc>
   398c4:	mov	r4, r0
   398c8:	str	r0, [r5]
   398cc:	ldr	r0, [r5, #4]
   398d0:	ldr	r2, [sp, #72]	; 0x48
   398d4:	mov	r1, #0
   398d8:	sub	r2, r2, r0
   398dc:	add	r0, r4, r0, lsl #3
   398e0:	lsl	r2, r2, #3
   398e4:	bl	111f0 <memset@plt>
   398e8:	ldr	r3, [sp, #72]	; 0x48
   398ec:	str	r3, [r5, #4]
   398f0:	ldr	r6, [sp, #28]
   398f4:	ldr	r8, [r4]
   398f8:	ldr	r5, [r4, #4]
   398fc:	ldr	r2, [sp, #64]	; 0x40
   39900:	ldr	r3, [sp, #24]
   39904:	ldr	ip, [sp, #68]	; 0x44
   39908:	orr	r6, r6, #1
   3990c:	add	sl, sp, #32
   39910:	str	r2, [sp, #12]
   39914:	str	r3, [sp]
   39918:	str	r6, [sp, #4]
   3991c:	mov	r1, r8
   39920:	mov	r0, r5
   39924:	str	ip, [sp, #16]
   39928:	str	sl, [sp, #8]
   3992c:	mvn	r3, #0
   39930:	mov	r2, r9
   39934:	bl	374a4 <__assert_fail@plt+0x261b8>
   39938:	cmp	r8, r0
   3993c:	bhi	3999c <__assert_fail@plt+0x286b0>
   39940:	ldr	r3, [pc, #156]	; 399e4 <__assert_fail@plt+0x286f8>
   39944:	add	r8, r0, #1
   39948:	cmp	r5, r3
   3994c:	str	r8, [r4]
   39950:	beq	3995c <__assert_fail@plt+0x28670>
   39954:	mov	r0, r5
   39958:	bl	3618c <__assert_fail@plt+0x24ea0>
   3995c:	mov	r0, r8
   39960:	bl	3bd8c <__assert_fail@plt+0x2aaa0>
   39964:	ldr	lr, [sp, #68]	; 0x44
   39968:	ldr	r3, [sp, #24]
   3996c:	ldr	ip, [sp, #64]	; 0x40
   39970:	mov	r2, r9
   39974:	mov	r1, r8
   39978:	str	r0, [r4, #4]
   3997c:	str	r3, [sp]
   39980:	str	sl, [sp, #8]
   39984:	str	r6, [sp, #4]
   39988:	str	lr, [sp, #16]
   3998c:	str	ip, [sp, #12]
   39990:	mvn	r3, #0
   39994:	mov	r5, r0
   39998:	bl	374a4 <__assert_fail@plt+0x261b8>
   3999c:	mov	r0, r5
   399a0:	str	fp, [r7]
   399a4:	add	sp, sp, #124	; 0x7c
   399a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   399ac:	mov	r3, #8
   399b0:	add	r1, sp, #72	; 0x48
   399b4:	str	r3, [sp]
   399b8:	rsb	r2, r2, #1
   399bc:	mvn	r3, #-2147483648	; 0x80000000
   399c0:	mov	r0, #0
   399c4:	bl	3bfa8 <__assert_fail@plt+0x2acbc>
   399c8:	mov	r4, r0
   399cc:	ldm	r6, {r0, r1}
   399d0:	str	r4, [r5]
   399d4:	stm	r4, {r0, r1}
   399d8:	b	398cc <__assert_fail@plt+0x285e0>
   399dc:	bl	112c8 <abort@plt>
   399e0:	andeq	r2, r5, r4, asr #2
   399e4:	andeq	r2, r5, ip, lsl #4
   399e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   399ec:	sub	sp, sp, #132	; 0x84
   399f0:	mov	r4, r0
   399f4:	mov	r9, r1
   399f8:	mov	sl, r2
   399fc:	add	r0, sp, #80	; 0x50
   39a00:	mov	r2, #48	; 0x30
   39a04:	mov	r1, #0
   39a08:	bl	111f0 <memset@plt>
   39a0c:	cmp	r4, #10
   39a10:	beq	39ba4 <__assert_fail@plt+0x288b8>
   39a14:	add	lr, sp, #80	; 0x50
   39a18:	str	r4, [sp, #80]	; 0x50
   39a1c:	ldm	lr!, {r0, r1, r2, r3}
   39a20:	add	ip, sp, #32
   39a24:	ldr	r5, [pc, #380]	; 39ba8 <__assert_fail@plt+0x288bc>
   39a28:	stmia	ip!, {r0, r1, r2, r3}
   39a2c:	ldm	lr!, {r0, r1, r2, r3}
   39a30:	stmia	ip!, {r0, r1, r2, r3}
   39a34:	ldm	lr, {r0, r1, r2, r3}
   39a38:	stm	ip, {r0, r1, r2, r3}
   39a3c:	bl	111c0 <__errno_location@plt>
   39a40:	ldr	r2, [r5, #4]
   39a44:	ldr	r4, [r5]
   39a48:	cmp	r2, #0
   39a4c:	ldr	r3, [r0]
   39a50:	mov	r7, r0
   39a54:	str	r3, [sp, #28]
   39a58:	bgt	39ab4 <__assert_fail@plt+0x287c8>
   39a5c:	add	r6, r5, #8
   39a60:	cmp	r4, r6
   39a64:	str	r2, [sp, #80]	; 0x50
   39a68:	beq	39b74 <__assert_fail@plt+0x28888>
   39a6c:	mov	r3, #8
   39a70:	mov	r0, r4
   39a74:	str	r3, [sp]
   39a78:	rsb	r2, r2, #1
   39a7c:	add	r1, sp, #80	; 0x50
   39a80:	mvn	r3, #-2147483648	; 0x80000000
   39a84:	bl	3bfa8 <__assert_fail@plt+0x2acbc>
   39a88:	mov	r4, r0
   39a8c:	str	r0, [r5]
   39a90:	ldr	r0, [r5, #4]
   39a94:	ldr	r2, [sp, #80]	; 0x50
   39a98:	mov	r1, #0
   39a9c:	sub	r2, r2, r0
   39aa0:	add	r0, r4, r0, lsl #3
   39aa4:	lsl	r2, r2, #3
   39aa8:	bl	111f0 <memset@plt>
   39aac:	ldr	r3, [sp, #80]	; 0x50
   39ab0:	str	r3, [r5, #4]
   39ab4:	ldr	r6, [sp, #36]	; 0x24
   39ab8:	ldr	r8, [r4]
   39abc:	ldr	r5, [r4, #4]
   39ac0:	ldr	r2, [sp, #72]	; 0x48
   39ac4:	ldr	r3, [sp, #32]
   39ac8:	ldr	ip, [sp, #76]	; 0x4c
   39acc:	orr	r6, r6, #1
   39ad0:	add	fp, sp, #40	; 0x28
   39ad4:	str	r2, [sp, #12]
   39ad8:	str	r3, [sp]
   39adc:	str	r6, [sp, #4]
   39ae0:	mov	r1, r8
   39ae4:	mov	r0, r5
   39ae8:	str	ip, [sp, #16]
   39aec:	str	fp, [sp, #8]
   39af0:	mov	r3, sl
   39af4:	mov	r2, r9
   39af8:	bl	374a4 <__assert_fail@plt+0x261b8>
   39afc:	cmp	r8, r0
   39b00:	bhi	39b60 <__assert_fail@plt+0x28874>
   39b04:	ldr	r3, [pc, #160]	; 39bac <__assert_fail@plt+0x288c0>
   39b08:	add	r8, r0, #1
   39b0c:	cmp	r5, r3
   39b10:	str	r8, [r4]
   39b14:	beq	39b20 <__assert_fail@plt+0x28834>
   39b18:	mov	r0, r5
   39b1c:	bl	3618c <__assert_fail@plt+0x24ea0>
   39b20:	mov	r0, r8
   39b24:	bl	3bd8c <__assert_fail@plt+0x2aaa0>
   39b28:	ldr	ip, [sp, #76]	; 0x4c
   39b2c:	ldr	lr, [sp, #32]
   39b30:	mov	r3, sl
   39b34:	mov	r2, r9
   39b38:	mov	r1, r8
   39b3c:	str	r0, [r4, #4]
   39b40:	ldr	r4, [sp, #72]	; 0x48
   39b44:	str	fp, [sp, #8]
   39b48:	str	r6, [sp, #4]
   39b4c:	str	ip, [sp, #16]
   39b50:	str	r4, [sp, #12]
   39b54:	str	lr, [sp]
   39b58:	mov	r5, r0
   39b5c:	bl	374a4 <__assert_fail@plt+0x261b8>
   39b60:	ldr	r3, [sp, #28]
   39b64:	mov	r0, r5
   39b68:	str	r3, [r7]
   39b6c:	add	sp, sp, #132	; 0x84
   39b70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   39b74:	mov	r3, #8
   39b78:	add	r1, sp, #80	; 0x50
   39b7c:	str	r3, [sp]
   39b80:	rsb	r2, r2, #1
   39b84:	mvn	r3, #-2147483648	; 0x80000000
   39b88:	mov	r0, #0
   39b8c:	bl	3bfa8 <__assert_fail@plt+0x2acbc>
   39b90:	mov	r4, r0
   39b94:	ldm	r6, {r0, r1}
   39b98:	str	r4, [r5]
   39b9c:	stm	r4, {r0, r1}
   39ba0:	b	39a90 <__assert_fail@plt+0x287a4>
   39ba4:	bl	112c8 <abort@plt>
   39ba8:	andeq	r2, r5, r4, asr #2
   39bac:	andeq	r2, r5, ip, lsl #4
   39bb0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   39bb4:	mov	r4, r2
   39bb8:	ldr	lr, [pc, #432]	; 39d70 <__assert_fail@plt+0x28a84>
   39bbc:	mov	sl, r0
   39bc0:	mov	fp, r1
   39bc4:	ldm	lr!, {r0, r1, r2, r3}
   39bc8:	sub	sp, sp, #92	; 0x5c
   39bcc:	add	ip, sp, #40	; 0x28
   39bd0:	lsr	r7, r4, #5
   39bd4:	stmia	ip!, {r0, r1, r2, r3}
   39bd8:	add	r6, sp, #48	; 0x30
   39bdc:	ldm	lr!, {r0, r1, r2, r3}
   39be0:	and	r4, r4, #31
   39be4:	ldr	r5, [pc, #392]	; 39d74 <__assert_fail@plt+0x28a88>
   39be8:	stmia	ip!, {r0, r1, r2, r3}
   39bec:	ldm	lr, {r0, r1, r2, r3}
   39bf0:	stm	ip, {r0, r1, r2, r3}
   39bf4:	ldr	r2, [r6, r7, lsl #2]
   39bf8:	lsr	r3, r2, r4
   39bfc:	eor	r3, r3, #1
   39c00:	and	r3, r3, #1
   39c04:	eor	r4, r2, r3, lsl r4
   39c08:	str	r4, [r6, r7, lsl #2]
   39c0c:	bl	111c0 <__errno_location@plt>
   39c10:	ldr	r2, [r5, #4]
   39c14:	ldr	r4, [r5]
   39c18:	cmp	r2, #0
   39c1c:	ldr	r3, [r0]
   39c20:	mov	r8, r0
   39c24:	str	r3, [sp, #28]
   39c28:	bgt	39c84 <__assert_fail@plt+0x28998>
   39c2c:	add	r7, r5, #8
   39c30:	cmp	r4, r7
   39c34:	str	r2, [sp, #36]	; 0x24
   39c38:	beq	39d40 <__assert_fail@plt+0x28a54>
   39c3c:	mov	r3, #8
   39c40:	mov	r0, r4
   39c44:	str	r3, [sp]
   39c48:	rsb	r2, r2, #1
   39c4c:	mvn	r3, #-2147483648	; 0x80000000
   39c50:	add	r1, sp, #36	; 0x24
   39c54:	bl	3bfa8 <__assert_fail@plt+0x2acbc>
   39c58:	mov	r4, r0
   39c5c:	str	r0, [r5]
   39c60:	ldr	r0, [r5, #4]
   39c64:	ldr	r2, [sp, #36]	; 0x24
   39c68:	mov	r1, #0
   39c6c:	sub	r2, r2, r0
   39c70:	add	r0, r4, r0, lsl #3
   39c74:	lsl	r2, r2, #3
   39c78:	bl	111f0 <memset@plt>
   39c7c:	ldr	r3, [sp, #36]	; 0x24
   39c80:	str	r3, [r5, #4]
   39c84:	ldr	r7, [sp, #44]	; 0x2c
   39c88:	ldr	r9, [r4]
   39c8c:	ldr	r5, [r4, #4]
   39c90:	ldr	r2, [sp, #80]	; 0x50
   39c94:	ldr	r3, [sp, #40]	; 0x28
   39c98:	ldr	ip, [sp, #84]	; 0x54
   39c9c:	orr	r7, r7, #1
   39ca0:	str	r2, [sp, #12]
   39ca4:	str	r3, [sp]
   39ca8:	str	r7, [sp, #4]
   39cac:	str	r6, [sp, #8]
   39cb0:	mov	r1, r9
   39cb4:	mov	r0, r5
   39cb8:	str	ip, [sp, #16]
   39cbc:	mov	r3, fp
   39cc0:	mov	r2, sl
   39cc4:	bl	374a4 <__assert_fail@plt+0x261b8>
   39cc8:	cmp	r9, r0
   39ccc:	bhi	39d2c <__assert_fail@plt+0x28a40>
   39cd0:	ldr	r3, [pc, #160]	; 39d78 <__assert_fail@plt+0x28a8c>
   39cd4:	add	r9, r0, #1
   39cd8:	cmp	r5, r3
   39cdc:	str	r9, [r4]
   39ce0:	beq	39cec <__assert_fail@plt+0x28a00>
   39ce4:	mov	r0, r5
   39ce8:	bl	3618c <__assert_fail@plt+0x24ea0>
   39cec:	mov	r0, r9
   39cf0:	bl	3bd8c <__assert_fail@plt+0x2aaa0>
   39cf4:	ldr	ip, [sp, #84]	; 0x54
   39cf8:	ldr	lr, [sp, #40]	; 0x28
   39cfc:	mov	r3, fp
   39d00:	mov	r2, sl
   39d04:	mov	r1, r9
   39d08:	str	r0, [r4, #4]
   39d0c:	ldr	r4, [sp, #80]	; 0x50
   39d10:	str	r6, [sp, #8]
   39d14:	str	r7, [sp, #4]
   39d18:	str	ip, [sp, #16]
   39d1c:	str	r4, [sp, #12]
   39d20:	str	lr, [sp]
   39d24:	mov	r5, r0
   39d28:	bl	374a4 <__assert_fail@plt+0x261b8>
   39d2c:	ldr	r3, [sp, #28]
   39d30:	mov	r0, r5
   39d34:	str	r3, [r8]
   39d38:	add	sp, sp, #92	; 0x5c
   39d3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   39d40:	mov	r3, #8
   39d44:	str	r3, [sp]
   39d48:	add	r1, sp, #36	; 0x24
   39d4c:	rsb	r2, r2, #1
   39d50:	mvn	r3, #-2147483648	; 0x80000000
   39d54:	mov	r0, #0
   39d58:	bl	3bfa8 <__assert_fail@plt+0x2acbc>
   39d5c:	mov	r4, r0
   39d60:	ldm	r7, {r0, r1}
   39d64:	str	r4, [r5]
   39d68:	stm	r4, {r0, r1}
   39d6c:	b	39c60 <__assert_fail@plt+0x28974>
   39d70:	ldrdeq	r2, [r5], -ip
   39d74:	andeq	r2, r5, r4, asr #2
   39d78:	andeq	r2, r5, ip, lsl #4
   39d7c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   39d80:	mov	r4, r1
   39d84:	ldr	lr, [pc, #420]	; 39f30 <__assert_fail@plt+0x28c44>
   39d88:	mov	r6, r0
   39d8c:	sub	sp, sp, #84	; 0x54
   39d90:	ldm	lr!, {r0, r1, r2, r3}
   39d94:	add	ip, sp, #32
   39d98:	lsr	r8, r4, #5
   39d9c:	add	r5, sp, #40	; 0x28
   39da0:	stmia	ip!, {r0, r1, r2, r3}
   39da4:	and	r4, r4, #31
   39da8:	ldm	lr!, {r0, r1, r2, r3}
   39dac:	ldr	r7, [pc, #384]	; 39f34 <__assert_fail@plt+0x28c48>
   39db0:	stmia	ip!, {r0, r1, r2, r3}
   39db4:	ldm	lr, {r0, r1, r2, r3}
   39db8:	stm	ip, {r0, r1, r2, r3}
   39dbc:	ldr	r2, [r5, r8, lsl #2]
   39dc0:	lsr	r3, r2, r4
   39dc4:	eor	r3, r3, #1
   39dc8:	and	r3, r3, #1
   39dcc:	eor	r4, r2, r3, lsl r4
   39dd0:	str	r4, [r5, r8, lsl #2]
   39dd4:	bl	111c0 <__errno_location@plt>
   39dd8:	ldr	r2, [r7, #4]
   39ddc:	ldr	r4, [r7]
   39de0:	cmp	r2, #0
   39de4:	mov	r9, r0
   39de8:	ldr	sl, [r0]
   39dec:	bgt	39e48 <__assert_fail@plt+0x28b5c>
   39df0:	add	r8, r7, #8
   39df4:	cmp	r4, r8
   39df8:	str	r2, [sp, #28]
   39dfc:	beq	39f00 <__assert_fail@plt+0x28c14>
   39e00:	mov	r3, #8
   39e04:	mov	r0, r4
   39e08:	str	r3, [sp]
   39e0c:	rsb	r2, r2, #1
   39e10:	mvn	r3, #-2147483648	; 0x80000000
   39e14:	add	r1, sp, #28
   39e18:	bl	3bfa8 <__assert_fail@plt+0x2acbc>
   39e1c:	mov	r4, r0
   39e20:	str	r0, [r7]
   39e24:	ldr	r0, [r7, #4]
   39e28:	ldr	r2, [sp, #28]
   39e2c:	mov	r1, #0
   39e30:	sub	r2, r2, r0
   39e34:	add	r0, r4, r0, lsl #3
   39e38:	lsl	r2, r2, #3
   39e3c:	bl	111f0 <memset@plt>
   39e40:	ldr	r3, [sp, #28]
   39e44:	str	r3, [r7, #4]
   39e48:	ldr	r8, [sp, #36]	; 0x24
   39e4c:	ldr	fp, [r4]
   39e50:	ldr	r7, [r4, #4]
   39e54:	ldr	r2, [sp, #72]	; 0x48
   39e58:	ldr	r3, [sp, #32]
   39e5c:	ldr	ip, [sp, #76]	; 0x4c
   39e60:	orr	r8, r8, #1
   39e64:	str	r2, [sp, #12]
   39e68:	str	r3, [sp]
   39e6c:	str	r8, [sp, #4]
   39e70:	str	r5, [sp, #8]
   39e74:	mov	r1, fp
   39e78:	mov	r0, r7
   39e7c:	str	ip, [sp, #16]
   39e80:	mvn	r3, #0
   39e84:	mov	r2, r6
   39e88:	bl	374a4 <__assert_fail@plt+0x261b8>
   39e8c:	cmp	fp, r0
   39e90:	bhi	39ef0 <__assert_fail@plt+0x28c04>
   39e94:	ldr	r3, [pc, #156]	; 39f38 <__assert_fail@plt+0x28c4c>
   39e98:	add	fp, r0, #1
   39e9c:	cmp	r7, r3
   39ea0:	str	fp, [r4]
   39ea4:	beq	39eb0 <__assert_fail@plt+0x28bc4>
   39ea8:	mov	r0, r7
   39eac:	bl	3618c <__assert_fail@plt+0x24ea0>
   39eb0:	mov	r0, fp
   39eb4:	bl	3bd8c <__assert_fail@plt+0x2aaa0>
   39eb8:	ldr	lr, [sp, #76]	; 0x4c
   39ebc:	ldr	r3, [sp, #32]
   39ec0:	ldr	ip, [sp, #72]	; 0x48
   39ec4:	mov	r2, r6
   39ec8:	mov	r1, fp
   39ecc:	str	r0, [r4, #4]
   39ed0:	str	r3, [sp]
   39ed4:	str	r5, [sp, #8]
   39ed8:	str	r8, [sp, #4]
   39edc:	str	lr, [sp, #16]
   39ee0:	str	ip, [sp, #12]
   39ee4:	mvn	r3, #0
   39ee8:	mov	r7, r0
   39eec:	bl	374a4 <__assert_fail@plt+0x261b8>
   39ef0:	mov	r0, r7
   39ef4:	str	sl, [r9]
   39ef8:	add	sp, sp, #84	; 0x54
   39efc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   39f00:	mov	r3, #8
   39f04:	str	r3, [sp]
   39f08:	add	r1, sp, #28
   39f0c:	rsb	r2, r2, #1
   39f10:	mvn	r3, #-2147483648	; 0x80000000
   39f14:	mov	r0, #0
   39f18:	bl	3bfa8 <__assert_fail@plt+0x2acbc>
   39f1c:	mov	r4, r0
   39f20:	ldm	r8, {r0, r1}
   39f24:	str	r4, [r7]
   39f28:	stm	r4, {r0, r1}
   39f2c:	b	39e24 <__assert_fail@plt+0x28b38>
   39f30:	ldrdeq	r2, [r5], -ip
   39f34:	andeq	r2, r5, r4, asr #2
   39f38:	andeq	r2, r5, ip, lsl #4
   39f3c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   39f40:	mov	r6, r0
   39f44:	ldr	lr, [pc, #404]	; 3a0e0 <__assert_fail@plt+0x28df4>
   39f48:	sub	sp, sp, #84	; 0x54
   39f4c:	add	ip, sp, #32
   39f50:	ldm	lr!, {r0, r1, r2, r3}
   39f54:	ldr	r5, [pc, #392]	; 3a0e4 <__assert_fail@plt+0x28df8>
   39f58:	stmia	ip!, {r0, r1, r2, r3}
   39f5c:	ldm	lr!, {r0, r1, r2, r3}
   39f60:	ldr	r4, [sp, #44]	; 0x2c
   39f64:	stmia	ip!, {r0, r1, r2, r3}
   39f68:	ldm	lr, {r0, r1, r2, r3}
   39f6c:	mvn	lr, r4
   39f70:	and	lr, lr, #67108864	; 0x4000000
   39f74:	eor	lr, lr, r4
   39f78:	stm	ip, {r0, r1, r2, r3}
   39f7c:	str	lr, [sp, #44]	; 0x2c
   39f80:	bl	111c0 <__errno_location@plt>
   39f84:	ldr	r2, [r5, #4]
   39f88:	ldr	r4, [r5]
   39f8c:	cmp	r2, #0
   39f90:	mov	r8, r0
   39f94:	ldr	sl, [r0]
   39f98:	bgt	39ff4 <__assert_fail@plt+0x28d08>
   39f9c:	add	r7, r5, #8
   39fa0:	cmp	r4, r7
   39fa4:	str	r2, [sp, #28]
   39fa8:	beq	3a0b0 <__assert_fail@plt+0x28dc4>
   39fac:	mov	r3, #8
   39fb0:	mov	r0, r4
   39fb4:	str	r3, [sp]
   39fb8:	rsb	r2, r2, #1
   39fbc:	mvn	r3, #-2147483648	; 0x80000000
   39fc0:	add	r1, sp, #28
   39fc4:	bl	3bfa8 <__assert_fail@plt+0x2acbc>
   39fc8:	mov	r4, r0
   39fcc:	str	r0, [r5]
   39fd0:	ldr	r0, [r5, #4]
   39fd4:	ldr	r2, [sp, #28]
   39fd8:	mov	r1, #0
   39fdc:	sub	r2, r2, r0
   39fe0:	add	r0, r4, r0, lsl #3
   39fe4:	lsl	r2, r2, #3
   39fe8:	bl	111f0 <memset@plt>
   39fec:	ldr	r3, [sp, #28]
   39ff0:	str	r3, [r5, #4]
   39ff4:	ldr	r7, [sp, #36]	; 0x24
   39ff8:	ldr	r9, [r4]
   39ffc:	ldr	r5, [r4, #4]
   3a000:	ldr	r2, [sp, #72]	; 0x48
   3a004:	ldr	r3, [sp, #32]
   3a008:	ldr	ip, [sp, #76]	; 0x4c
   3a00c:	orr	r7, r7, #1
   3a010:	add	fp, sp, #40	; 0x28
   3a014:	str	r2, [sp, #12]
   3a018:	str	r3, [sp]
   3a01c:	str	r7, [sp, #4]
   3a020:	mov	r1, r9
   3a024:	mov	r0, r5
   3a028:	str	ip, [sp, #16]
   3a02c:	str	fp, [sp, #8]
   3a030:	mvn	r3, #0
   3a034:	mov	r2, r6
   3a038:	bl	374a4 <__assert_fail@plt+0x261b8>
   3a03c:	cmp	r9, r0
   3a040:	bhi	3a0a0 <__assert_fail@plt+0x28db4>
   3a044:	ldr	r3, [pc, #156]	; 3a0e8 <__assert_fail@plt+0x28dfc>
   3a048:	add	r9, r0, #1
   3a04c:	cmp	r5, r3
   3a050:	str	r9, [r4]
   3a054:	beq	3a060 <__assert_fail@plt+0x28d74>
   3a058:	mov	r0, r5
   3a05c:	bl	3618c <__assert_fail@plt+0x24ea0>
   3a060:	mov	r0, r9
   3a064:	bl	3bd8c <__assert_fail@plt+0x2aaa0>
   3a068:	ldr	lr, [sp, #76]	; 0x4c
   3a06c:	ldr	r3, [sp, #32]
   3a070:	ldr	ip, [sp, #72]	; 0x48
   3a074:	mov	r2, r6
   3a078:	mov	r1, r9
   3a07c:	str	r0, [r4, #4]
   3a080:	str	r3, [sp]
   3a084:	str	fp, [sp, #8]
   3a088:	str	r7, [sp, #4]
   3a08c:	str	lr, [sp, #16]
   3a090:	str	ip, [sp, #12]
   3a094:	mvn	r3, #0
   3a098:	mov	r5, r0
   3a09c:	bl	374a4 <__assert_fail@plt+0x261b8>
   3a0a0:	mov	r0, r5
   3a0a4:	str	sl, [r8]
   3a0a8:	add	sp, sp, #84	; 0x54
   3a0ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3a0b0:	mov	r3, #8
   3a0b4:	str	r3, [sp]
   3a0b8:	add	r1, sp, #28
   3a0bc:	rsb	r2, r2, #1
   3a0c0:	mvn	r3, #-2147483648	; 0x80000000
   3a0c4:	mov	r0, #0
   3a0c8:	bl	3bfa8 <__assert_fail@plt+0x2acbc>
   3a0cc:	mov	r4, r0
   3a0d0:	ldm	r7, {r0, r1}
   3a0d4:	str	r4, [r5]
   3a0d8:	stm	r4, {r0, r1}
   3a0dc:	b	39fd0 <__assert_fail@plt+0x28ce4>
   3a0e0:	ldrdeq	r2, [r5], -ip
   3a0e4:	andeq	r2, r5, r4, asr #2
   3a0e8:	andeq	r2, r5, ip, lsl #4
   3a0ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3a0f0:	mov	r9, r0
   3a0f4:	ldr	lr, [pc, #416]	; 3a29c <__assert_fail@plt+0x28fb0>
   3a0f8:	mov	sl, r1
   3a0fc:	sub	sp, sp, #92	; 0x5c
   3a100:	ldm	lr!, {r0, r1, r2, r3}
   3a104:	add	ip, sp, #40	; 0x28
   3a108:	ldr	r5, [pc, #400]	; 3a2a0 <__assert_fail@plt+0x28fb4>
   3a10c:	stmia	ip!, {r0, r1, r2, r3}
   3a110:	ldm	lr!, {r0, r1, r2, r3}
   3a114:	ldr	r4, [sp, #52]	; 0x34
   3a118:	stmia	ip!, {r0, r1, r2, r3}
   3a11c:	ldm	lr, {r0, r1, r2, r3}
   3a120:	mvn	lr, r4
   3a124:	and	lr, lr, #67108864	; 0x4000000
   3a128:	eor	lr, lr, r4
   3a12c:	stm	ip, {r0, r1, r2, r3}
   3a130:	str	lr, [sp, #52]	; 0x34
   3a134:	bl	111c0 <__errno_location@plt>
   3a138:	ldr	r2, [r5, #4]
   3a13c:	ldr	r4, [r5]
   3a140:	cmp	r2, #0
   3a144:	ldr	r3, [r0]
   3a148:	mov	r7, r0
   3a14c:	str	r3, [sp, #28]
   3a150:	bgt	3a1ac <__assert_fail@plt+0x28ec0>
   3a154:	add	r6, r5, #8
   3a158:	cmp	r4, r6
   3a15c:	str	r2, [sp, #36]	; 0x24
   3a160:	beq	3a26c <__assert_fail@plt+0x28f80>
   3a164:	mov	r3, #8
   3a168:	mov	r0, r4
   3a16c:	str	r3, [sp]
   3a170:	rsb	r2, r2, #1
   3a174:	mvn	r3, #-2147483648	; 0x80000000
   3a178:	add	r1, sp, #36	; 0x24
   3a17c:	bl	3bfa8 <__assert_fail@plt+0x2acbc>
   3a180:	mov	r4, r0
   3a184:	str	r0, [r5]
   3a188:	ldr	r0, [r5, #4]
   3a18c:	ldr	r2, [sp, #36]	; 0x24
   3a190:	mov	r1, #0
   3a194:	sub	r2, r2, r0
   3a198:	add	r0, r4, r0, lsl #3
   3a19c:	lsl	r2, r2, #3
   3a1a0:	bl	111f0 <memset@plt>
   3a1a4:	ldr	r3, [sp, #36]	; 0x24
   3a1a8:	str	r3, [r5, #4]
   3a1ac:	ldr	r6, [sp, #44]	; 0x2c
   3a1b0:	ldr	r8, [r4]
   3a1b4:	ldr	r5, [r4, #4]
   3a1b8:	ldr	r2, [sp, #80]	; 0x50
   3a1bc:	ldr	r3, [sp, #40]	; 0x28
   3a1c0:	ldr	ip, [sp, #84]	; 0x54
   3a1c4:	orr	r6, r6, #1
   3a1c8:	add	fp, sp, #48	; 0x30
   3a1cc:	str	r2, [sp, #12]
   3a1d0:	str	r3, [sp]
   3a1d4:	str	r6, [sp, #4]
   3a1d8:	mov	r1, r8
   3a1dc:	mov	r0, r5
   3a1e0:	str	ip, [sp, #16]
   3a1e4:	str	fp, [sp, #8]
   3a1e8:	mov	r3, sl
   3a1ec:	mov	r2, r9
   3a1f0:	bl	374a4 <__assert_fail@plt+0x261b8>
   3a1f4:	cmp	r8, r0
   3a1f8:	bhi	3a258 <__assert_fail@plt+0x28f6c>
   3a1fc:	ldr	r3, [pc, #160]	; 3a2a4 <__assert_fail@plt+0x28fb8>
   3a200:	add	r8, r0, #1
   3a204:	cmp	r5, r3
   3a208:	str	r8, [r4]
   3a20c:	beq	3a218 <__assert_fail@plt+0x28f2c>
   3a210:	mov	r0, r5
   3a214:	bl	3618c <__assert_fail@plt+0x24ea0>
   3a218:	mov	r0, r8
   3a21c:	bl	3bd8c <__assert_fail@plt+0x2aaa0>
   3a220:	ldr	ip, [sp, #84]	; 0x54
   3a224:	ldr	lr, [sp, #40]	; 0x28
   3a228:	mov	r3, sl
   3a22c:	mov	r2, r9
   3a230:	mov	r1, r8
   3a234:	str	r0, [r4, #4]
   3a238:	ldr	r4, [sp, #80]	; 0x50
   3a23c:	str	fp, [sp, #8]
   3a240:	str	r6, [sp, #4]
   3a244:	str	ip, [sp, #16]
   3a248:	str	r4, [sp, #12]
   3a24c:	str	lr, [sp]
   3a250:	mov	r5, r0
   3a254:	bl	374a4 <__assert_fail@plt+0x261b8>
   3a258:	ldr	r3, [sp, #28]
   3a25c:	mov	r0, r5
   3a260:	str	r3, [r7]
   3a264:	add	sp, sp, #92	; 0x5c
   3a268:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3a26c:	mov	r3, #8
   3a270:	str	r3, [sp]
   3a274:	add	r1, sp, #36	; 0x24
   3a278:	rsb	r2, r2, #1
   3a27c:	mvn	r3, #-2147483648	; 0x80000000
   3a280:	mov	r0, #0
   3a284:	bl	3bfa8 <__assert_fail@plt+0x2acbc>
   3a288:	mov	r4, r0
   3a28c:	ldm	r6, {r0, r1}
   3a290:	str	r4, [r5]
   3a294:	stm	r4, {r0, r1}
   3a298:	b	3a188 <__assert_fail@plt+0x28e9c>
   3a29c:	ldrdeq	r2, [r5], -ip
   3a2a0:	andeq	r2, r5, r4, asr #2
   3a2a4:	andeq	r2, r5, ip, lsl #4
   3a2a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3a2ac:	sub	sp, sp, #180	; 0xb4
   3a2b0:	mov	r6, r1
   3a2b4:	mov	r4, r0
   3a2b8:	mov	r9, r2
   3a2bc:	add	r0, sp, #80	; 0x50
   3a2c0:	mov	r2, #48	; 0x30
   3a2c4:	mov	r1, #0
   3a2c8:	bl	111f0 <memset@plt>
   3a2cc:	cmp	r6, #10
   3a2d0:	beq	3a4b0 <__assert_fail@plt+0x291c4>
   3a2d4:	add	r5, sp, #80	; 0x50
   3a2d8:	str	r6, [sp, #80]	; 0x50
   3a2dc:	ldm	r5!, {r0, r1, r2, r3}
   3a2e0:	add	ip, sp, #128	; 0x80
   3a2e4:	mov	r7, ip
   3a2e8:	add	lr, sp, #32
   3a2ec:	stmia	ip!, {r0, r1, r2, r3}
   3a2f0:	mov	r8, #67108864	; 0x4000000
   3a2f4:	ldm	r5!, {r0, r1, r2, r3}
   3a2f8:	ldr	r6, [pc, #436]	; 3a4b4 <__assert_fail@plt+0x291c8>
   3a2fc:	stmia	ip!, {r0, r1, r2, r3}
   3a300:	ldm	r5, {r0, r1, r2, r3}
   3a304:	stm	ip, {r0, r1, r2, r3}
   3a308:	ldm	r7!, {r0, r1, r2, r3}
   3a30c:	stmia	lr!, {r0, r1, r2, r3}
   3a310:	ldm	r7!, {r0, r1, r2, r3}
   3a314:	str	r8, [sp, #44]	; 0x2c
   3a318:	stmia	lr!, {r0, r1, r2, r3}
   3a31c:	ldm	ip, {r0, r1, r2, r3}
   3a320:	stm	lr, {r0, r1, r2, r3}
   3a324:	bl	111c0 <__errno_location@plt>
   3a328:	cmn	r4, #-2147483647	; 0x80000001
   3a32c:	ldr	r5, [r6]
   3a330:	mov	r7, r0
   3a334:	movne	r0, #0
   3a338:	moveq	r0, #1
   3a33c:	ldr	r3, [r7]
   3a340:	orrs	r0, r0, r4, lsr #31
   3a344:	str	r3, [sp, #24]
   3a348:	bne	3a4b0 <__assert_fail@plt+0x291c4>
   3a34c:	ldr	r2, [r6, #4]
   3a350:	cmp	r4, r2
   3a354:	blt	3a3b4 <__assert_fail@plt+0x290c8>
   3a358:	add	r8, r6, #8
   3a35c:	cmp	r5, r8
   3a360:	str	r2, [sp, #80]	; 0x50
   3a364:	beq	3a480 <__assert_fail@plt+0x29194>
   3a368:	mov	r3, #8
   3a36c:	sub	r2, r4, r2
   3a370:	mov	r0, r5
   3a374:	str	r3, [sp]
   3a378:	add	r2, r2, #1
   3a37c:	add	r1, sp, #80	; 0x50
   3a380:	mvn	r3, #-2147483648	; 0x80000000
   3a384:	bl	3bfa8 <__assert_fail@plt+0x2acbc>
   3a388:	mov	r5, r0
   3a38c:	str	r0, [r6]
   3a390:	ldr	r0, [r6, #4]
   3a394:	ldr	r2, [sp, #80]	; 0x50
   3a398:	mov	r1, #0
   3a39c:	sub	r2, r2, r0
   3a3a0:	add	r0, r5, r0, lsl #3
   3a3a4:	lsl	r2, r2, #3
   3a3a8:	bl	111f0 <memset@plt>
   3a3ac:	ldr	r3, [sp, #80]	; 0x50
   3a3b0:	str	r3, [r6, #4]
   3a3b4:	add	fp, r5, r4, lsl #3
   3a3b8:	ldr	r1, [sp, #36]	; 0x24
   3a3bc:	ldr	r8, [r5, r4, lsl #3]
   3a3c0:	ldr	r6, [fp, #4]
   3a3c4:	ldr	r2, [sp, #72]	; 0x48
   3a3c8:	ldr	r3, [sp, #32]
   3a3cc:	ldr	ip, [sp, #76]	; 0x4c
   3a3d0:	orr	r1, r1, #1
   3a3d4:	add	sl, sp, #40	; 0x28
   3a3d8:	str	r1, [sp, #28]
   3a3dc:	str	r1, [sp, #4]
   3a3e0:	str	r2, [sp, #12]
   3a3e4:	str	r3, [sp]
   3a3e8:	mov	r0, r6
   3a3ec:	mov	r1, r8
   3a3f0:	str	ip, [sp, #16]
   3a3f4:	str	sl, [sp, #8]
   3a3f8:	mvn	r3, #0
   3a3fc:	mov	r2, r9
   3a400:	bl	374a4 <__assert_fail@plt+0x261b8>
   3a404:	cmp	r8, r0
   3a408:	bhi	3a46c <__assert_fail@plt+0x29180>
   3a40c:	ldr	r3, [pc, #164]	; 3a4b8 <__assert_fail@plt+0x291cc>
   3a410:	add	r8, r0, #1
   3a414:	cmp	r6, r3
   3a418:	str	r8, [r5, r4, lsl #3]
   3a41c:	beq	3a428 <__assert_fail@plt+0x2913c>
   3a420:	mov	r0, r6
   3a424:	bl	3618c <__assert_fail@plt+0x24ea0>
   3a428:	mov	r0, r8
   3a42c:	bl	3bd8c <__assert_fail@plt+0x2aaa0>
   3a430:	ldr	lr, [sp, #76]	; 0x4c
   3a434:	ldr	r3, [sp, #32]
   3a438:	ldr	ip, [sp, #72]	; 0x48
   3a43c:	ldr	r4, [sp, #28]
   3a440:	mov	r2, r9
   3a444:	mov	r1, r8
   3a448:	str	r0, [fp, #4]
   3a44c:	str	r3, [sp]
   3a450:	str	sl, [sp, #8]
   3a454:	str	r4, [sp, #4]
   3a458:	str	lr, [sp, #16]
   3a45c:	str	ip, [sp, #12]
   3a460:	mvn	r3, #0
   3a464:	mov	r6, r0
   3a468:	bl	374a4 <__assert_fail@plt+0x261b8>
   3a46c:	ldr	r3, [sp, #24]
   3a470:	mov	r0, r6
   3a474:	str	r3, [r7]
   3a478:	add	sp, sp, #180	; 0xb4
   3a47c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3a480:	mov	r3, #8
   3a484:	sub	r2, r4, r2
   3a488:	add	r1, sp, #80	; 0x50
   3a48c:	str	r3, [sp]
   3a490:	add	r2, r2, #1
   3a494:	mvn	r3, #-2147483648	; 0x80000000
   3a498:	bl	3bfa8 <__assert_fail@plt+0x2acbc>
   3a49c:	mov	r5, r0
   3a4a0:	ldm	r8, {r0, r1}
   3a4a4:	str	r5, [r6]
   3a4a8:	stm	r5, {r0, r1}
   3a4ac:	b	3a390 <__assert_fail@plt+0x290a4>
   3a4b0:	bl	112c8 <abort@plt>
   3a4b4:	andeq	r2, r5, r4, asr #2
   3a4b8:	andeq	r2, r5, ip, lsl #4
   3a4bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3a4c0:	mov	r7, r1
   3a4c4:	ldr	lr, [pc, #492]	; 3a6b8 <__assert_fail@plt+0x293cc>
   3a4c8:	mov	r8, r2
   3a4cc:	mov	r4, r0
   3a4d0:	mov	fp, r3
   3a4d4:	ldm	lr!, {r0, r1, r2, r3}
   3a4d8:	sub	sp, sp, #100	; 0x64
   3a4dc:	add	ip, sp, #48	; 0x30
   3a4e0:	mov	sl, #10
   3a4e4:	stmia	ip!, {r0, r1, r2, r3}
   3a4e8:	cmp	r8, #0
   3a4ec:	cmpne	r7, #0
   3a4f0:	ldm	lr!, {r0, r1, r2, r3}
   3a4f4:	str	sl, [sp, #48]	; 0x30
   3a4f8:	stmia	ip!, {r0, r1, r2, r3}
   3a4fc:	ldm	lr, {r0, r1, r2, r3}
   3a500:	stm	ip, {r0, r1, r2, r3}
   3a504:	beq	3a6b4 <__assert_fail@plt+0x293c8>
   3a508:	str	r7, [sp, #88]	; 0x58
   3a50c:	str	r8, [sp, #92]	; 0x5c
   3a510:	bl	111c0 <__errno_location@plt>
   3a514:	ldr	r6, [pc, #416]	; 3a6bc <__assert_fail@plt+0x293d0>
   3a518:	cmn	r4, #-2147483647	; 0x80000001
   3a51c:	ldr	r5, [r6]
   3a520:	mov	r9, r0
   3a524:	movne	r0, #0
   3a528:	moveq	r0, #1
   3a52c:	ldr	r3, [r9]
   3a530:	orrs	r0, r0, r4, lsr #31
   3a534:	str	r3, [sp, #28]
   3a538:	bne	3a6b4 <__assert_fail@plt+0x293c8>
   3a53c:	ldr	r2, [r6, #4]
   3a540:	cmp	r4, r2
   3a544:	movlt	r3, sl
   3a548:	blt	3a5b4 <__assert_fail@plt+0x292c8>
   3a54c:	add	r7, r6, #8
   3a550:	cmp	r5, r7
   3a554:	str	r2, [sp, #44]	; 0x2c
   3a558:	beq	3a684 <__assert_fail@plt+0x29398>
   3a55c:	mov	r3, #8
   3a560:	sub	r2, r4, r2
   3a564:	mov	r0, r5
   3a568:	str	r3, [sp]
   3a56c:	add	r2, r2, #1
   3a570:	mvn	r3, #-2147483648	; 0x80000000
   3a574:	add	r1, sp, #44	; 0x2c
   3a578:	bl	3bfa8 <__assert_fail@plt+0x2acbc>
   3a57c:	mov	r5, r0
   3a580:	str	r0, [r6]
   3a584:	ldr	r0, [r6, #4]
   3a588:	ldr	r2, [sp, #44]	; 0x2c
   3a58c:	mov	r1, #0
   3a590:	sub	r2, r2, r0
   3a594:	add	r0, r5, r0, lsl #3
   3a598:	lsl	r2, r2, #3
   3a59c:	bl	111f0 <memset@plt>
   3a5a0:	ldr	r3, [sp, #48]	; 0x30
   3a5a4:	ldr	r7, [sp, #88]	; 0x58
   3a5a8:	ldr	r8, [sp, #92]	; 0x5c
   3a5ac:	ldr	r2, [sp, #44]	; 0x2c
   3a5b0:	str	r2, [r6, #4]
   3a5b4:	add	r2, r5, r4, lsl #3
   3a5b8:	mov	r1, r2
   3a5bc:	str	r2, [sp, #32]
   3a5c0:	ldr	r2, [sp, #52]	; 0x34
   3a5c4:	ldr	r6, [r1, #4]
   3a5c8:	ldr	sl, [r5, r4, lsl #3]
   3a5cc:	orr	r2, r2, #1
   3a5d0:	str	r3, [sp]
   3a5d4:	add	r3, sp, #56	; 0x38
   3a5d8:	str	r2, [sp, #36]	; 0x24
   3a5dc:	str	r2, [sp, #4]
   3a5e0:	str	r3, [sp, #8]
   3a5e4:	mov	r0, r6
   3a5e8:	str	r8, [sp, #16]
   3a5ec:	str	r7, [sp, #12]
   3a5f0:	mov	r1, sl
   3a5f4:	mvn	r3, #0
   3a5f8:	mov	r2, fp
   3a5fc:	bl	374a4 <__assert_fail@plt+0x261b8>
   3a600:	cmp	sl, r0
   3a604:	bhi	3a670 <__assert_fail@plt+0x29384>
   3a608:	ldr	r3, [pc, #176]	; 3a6c0 <__assert_fail@plt+0x293d4>
   3a60c:	add	r7, r0, #1
   3a610:	cmp	r6, r3
   3a614:	str	r7, [r5, r4, lsl #3]
   3a618:	beq	3a624 <__assert_fail@plt+0x29338>
   3a61c:	mov	r0, r6
   3a620:	bl	3618c <__assert_fail@plt+0x24ea0>
   3a624:	mov	r0, r7
   3a628:	bl	3bd8c <__assert_fail@plt+0x2aaa0>
   3a62c:	ldr	r3, [sp, #32]
   3a630:	ldr	lr, [sp, #92]	; 0x5c
   3a634:	ldr	ip, [sp, #88]	; 0x58
   3a638:	ldr	r4, [sp, #36]	; 0x24
   3a63c:	mov	r2, fp
   3a640:	mov	r1, r7
   3a644:	str	r0, [r3, #4]
   3a648:	add	r3, sp, #56	; 0x38
   3a64c:	str	r3, [sp, #8]
   3a650:	ldr	r3, [sp, #48]	; 0x30
   3a654:	str	r4, [sp, #4]
   3a658:	str	r3, [sp]
   3a65c:	str	lr, [sp, #16]
   3a660:	str	ip, [sp, #12]
   3a664:	mvn	r3, #0
   3a668:	mov	r6, r0
   3a66c:	bl	374a4 <__assert_fail@plt+0x261b8>
   3a670:	ldr	r3, [sp, #28]
   3a674:	mov	r0, r6
   3a678:	str	r3, [r9]
   3a67c:	add	sp, sp, #100	; 0x64
   3a680:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3a684:	mov	r3, #8
   3a688:	sub	r2, r4, r2
   3a68c:	str	r3, [sp]
   3a690:	add	r1, sp, #44	; 0x2c
   3a694:	add	r2, r2, #1
   3a698:	mvn	r3, #-2147483648	; 0x80000000
   3a69c:	bl	3bfa8 <__assert_fail@plt+0x2acbc>
   3a6a0:	mov	r5, r0
   3a6a4:	ldm	r7, {r0, r1}
   3a6a8:	str	r5, [r6]
   3a6ac:	stm	r5, {r0, r1}
   3a6b0:	b	3a584 <__assert_fail@plt+0x29298>
   3a6b4:	bl	112c8 <abort@plt>
   3a6b8:	ldrdeq	r2, [r5], -ip
   3a6bc:	andeq	r2, r5, r4, asr #2
   3a6c0:	andeq	r2, r5, ip, lsl #4
   3a6c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3a6c8:	mov	r7, r1
   3a6cc:	ldr	lr, [pc, #492]	; 3a8c0 <__assert_fail@plt+0x295d4>
   3a6d0:	mov	r8, r2
   3a6d4:	mov	r4, r0
   3a6d8:	mov	fp, r3
   3a6dc:	ldm	lr!, {r0, r1, r2, r3}
   3a6e0:	sub	sp, sp, #100	; 0x64
   3a6e4:	add	ip, sp, #48	; 0x30
   3a6e8:	mov	sl, #10
   3a6ec:	stmia	ip!, {r0, r1, r2, r3}
   3a6f0:	cmp	r8, #0
   3a6f4:	cmpne	r7, #0
   3a6f8:	ldm	lr!, {r0, r1, r2, r3}
   3a6fc:	str	sl, [sp, #48]	; 0x30
   3a700:	stmia	ip!, {r0, r1, r2, r3}
   3a704:	ldm	lr, {r0, r1, r2, r3}
   3a708:	stm	ip, {r0, r1, r2, r3}
   3a70c:	beq	3a8bc <__assert_fail@plt+0x295d0>
   3a710:	str	r7, [sp, #88]	; 0x58
   3a714:	str	r8, [sp, #92]	; 0x5c
   3a718:	bl	111c0 <__errno_location@plt>
   3a71c:	ldr	r6, [pc, #416]	; 3a8c4 <__assert_fail@plt+0x295d8>
   3a720:	cmn	r4, #-2147483647	; 0x80000001
   3a724:	ldr	r5, [r6]
   3a728:	mov	r9, r0
   3a72c:	movne	r0, #0
   3a730:	moveq	r0, #1
   3a734:	ldr	r3, [r9]
   3a738:	orrs	r0, r0, r4, lsr #31
   3a73c:	str	r3, [sp, #28]
   3a740:	bne	3a8bc <__assert_fail@plt+0x295d0>
   3a744:	ldr	r2, [r6, #4]
   3a748:	cmp	r4, r2
   3a74c:	movlt	r3, sl
   3a750:	blt	3a7bc <__assert_fail@plt+0x294d0>
   3a754:	add	r7, r6, #8
   3a758:	cmp	r5, r7
   3a75c:	str	r2, [sp, #44]	; 0x2c
   3a760:	beq	3a88c <__assert_fail@plt+0x295a0>
   3a764:	mov	r3, #8
   3a768:	sub	r2, r4, r2
   3a76c:	mov	r0, r5
   3a770:	str	r3, [sp]
   3a774:	add	r2, r2, #1
   3a778:	mvn	r3, #-2147483648	; 0x80000000
   3a77c:	add	r1, sp, #44	; 0x2c
   3a780:	bl	3bfa8 <__assert_fail@plt+0x2acbc>
   3a784:	mov	r5, r0
   3a788:	str	r0, [r6]
   3a78c:	ldr	r0, [r6, #4]
   3a790:	ldr	r2, [sp, #44]	; 0x2c
   3a794:	mov	r1, #0
   3a798:	sub	r2, r2, r0
   3a79c:	add	r0, r5, r0, lsl #3
   3a7a0:	lsl	r2, r2, #3
   3a7a4:	bl	111f0 <memset@plt>
   3a7a8:	ldr	r3, [sp, #48]	; 0x30
   3a7ac:	ldr	r7, [sp, #88]	; 0x58
   3a7b0:	ldr	r8, [sp, #92]	; 0x5c
   3a7b4:	ldr	r2, [sp, #44]	; 0x2c
   3a7b8:	str	r2, [r6, #4]
   3a7bc:	add	r2, r5, r4, lsl #3
   3a7c0:	mov	r1, r2
   3a7c4:	str	r2, [sp, #32]
   3a7c8:	ldr	r2, [sp, #52]	; 0x34
   3a7cc:	ldr	r6, [r1, #4]
   3a7d0:	ldr	sl, [r5, r4, lsl #3]
   3a7d4:	orr	r2, r2, #1
   3a7d8:	str	r3, [sp]
   3a7dc:	add	r3, sp, #56	; 0x38
   3a7e0:	str	r2, [sp, #36]	; 0x24
   3a7e4:	str	r2, [sp, #4]
   3a7e8:	str	r3, [sp, #8]
   3a7ec:	mov	r0, r6
   3a7f0:	str	r8, [sp, #16]
   3a7f4:	str	r7, [sp, #12]
   3a7f8:	mov	r1, sl
   3a7fc:	ldr	r3, [sp, #136]	; 0x88
   3a800:	mov	r2, fp
   3a804:	bl	374a4 <__assert_fail@plt+0x261b8>
   3a808:	cmp	sl, r0
   3a80c:	bhi	3a878 <__assert_fail@plt+0x2958c>
   3a810:	ldr	r3, [pc, #176]	; 3a8c8 <__assert_fail@plt+0x295dc>
   3a814:	add	r7, r0, #1
   3a818:	cmp	r6, r3
   3a81c:	str	r7, [r5, r4, lsl #3]
   3a820:	beq	3a82c <__assert_fail@plt+0x29540>
   3a824:	mov	r0, r6
   3a828:	bl	3618c <__assert_fail@plt+0x24ea0>
   3a82c:	mov	r0, r7
   3a830:	bl	3bd8c <__assert_fail@plt+0x2aaa0>
   3a834:	ldr	r3, [sp, #32]
   3a838:	ldr	lr, [sp, #92]	; 0x5c
   3a83c:	ldr	ip, [sp, #88]	; 0x58
   3a840:	ldr	r4, [sp, #36]	; 0x24
   3a844:	mov	r2, fp
   3a848:	mov	r1, r7
   3a84c:	str	r0, [r3, #4]
   3a850:	add	r3, sp, #56	; 0x38
   3a854:	str	r3, [sp, #8]
   3a858:	ldr	r3, [sp, #48]	; 0x30
   3a85c:	str	r4, [sp, #4]
   3a860:	str	r3, [sp]
   3a864:	str	lr, [sp, #16]
   3a868:	str	ip, [sp, #12]
   3a86c:	ldr	r3, [sp, #136]	; 0x88
   3a870:	mov	r6, r0
   3a874:	bl	374a4 <__assert_fail@plt+0x261b8>
   3a878:	ldr	r3, [sp, #28]
   3a87c:	mov	r0, r6
   3a880:	str	r3, [r9]
   3a884:	add	sp, sp, #100	; 0x64
   3a888:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3a88c:	mov	r3, #8
   3a890:	sub	r2, r4, r2
   3a894:	str	r3, [sp]
   3a898:	add	r1, sp, #44	; 0x2c
   3a89c:	add	r2, r2, #1
   3a8a0:	mvn	r3, #-2147483648	; 0x80000000
   3a8a4:	bl	3bfa8 <__assert_fail@plt+0x2acbc>
   3a8a8:	mov	r5, r0
   3a8ac:	ldm	r7, {r0, r1}
   3a8b0:	str	r5, [r6]
   3a8b4:	stm	r5, {r0, r1}
   3a8b8:	b	3a78c <__assert_fail@plt+0x294a0>
   3a8bc:	bl	112c8 <abort@plt>
   3a8c0:	ldrdeq	r2, [r5], -ip
   3a8c4:	andeq	r2, r5, r4, asr #2
   3a8c8:	andeq	r2, r5, ip, lsl #4
   3a8cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3a8d0:	mov	r5, r0
   3a8d4:	ldr	lr, [pc, #452]	; 3aaa0 <__assert_fail@plt+0x297b4>
   3a8d8:	mov	r6, r1
   3a8dc:	mov	sl, r2
   3a8e0:	ldm	lr!, {r0, r1, r2, r3}
   3a8e4:	sub	sp, sp, #92	; 0x5c
   3a8e8:	add	ip, sp, #40	; 0x28
   3a8ec:	cmp	r6, #0
   3a8f0:	cmpne	r5, #0
   3a8f4:	stmia	ip!, {r0, r1, r2, r3}
   3a8f8:	mov	r9, #10
   3a8fc:	ldm	lr!, {r0, r1, r2, r3}
   3a900:	moveq	fp, #1
   3a904:	movne	fp, #0
   3a908:	str	r9, [sp, #40]	; 0x28
   3a90c:	stmia	ip!, {r0, r1, r2, r3}
   3a910:	ldm	lr, {r0, r1, r2, r3}
   3a914:	stm	ip, {r0, r1, r2, r3}
   3a918:	beq	3aa9c <__assert_fail@plt+0x297b0>
   3a91c:	str	r5, [sp, #80]	; 0x50
   3a920:	str	r6, [sp, #84]	; 0x54
   3a924:	bl	111c0 <__errno_location@plt>
   3a928:	ldr	r7, [pc, #372]	; 3aaa4 <__assert_fail@plt+0x297b8>
   3a92c:	ldr	r2, [r7, #4]
   3a930:	ldr	r4, [r7]
   3a934:	cmp	r2, #0
   3a938:	ldr	r3, [r0]
   3a93c:	mov	r8, r0
   3a940:	str	r3, [sp, #24]
   3a944:	movgt	r3, r9
   3a948:	bgt	3a9b0 <__assert_fail@plt+0x296c4>
   3a94c:	add	r5, r7, #8
   3a950:	cmp	r4, r5
   3a954:	str	r2, [sp, #36]	; 0x24
   3a958:	beq	3aa6c <__assert_fail@plt+0x29780>
   3a95c:	mov	r3, #8
   3a960:	mov	r0, r4
   3a964:	str	r3, [sp]
   3a968:	rsb	r2, r2, #1
   3a96c:	mvn	r3, #-2147483648	; 0x80000000
   3a970:	add	r1, sp, #36	; 0x24
   3a974:	bl	3bfa8 <__assert_fail@plt+0x2acbc>
   3a978:	mov	r4, r0
   3a97c:	str	r0, [r7]
   3a980:	ldr	r0, [r7, #4]
   3a984:	ldr	r2, [sp, #36]	; 0x24
   3a988:	mov	r1, #0
   3a98c:	sub	r2, r2, r0
   3a990:	add	r0, r4, r0, lsl #3
   3a994:	lsl	r2, r2, #3
   3a998:	bl	111f0 <memset@plt>
   3a99c:	ldr	r3, [sp, #40]	; 0x28
   3a9a0:	ldr	r5, [sp, #80]	; 0x50
   3a9a4:	ldr	r6, [sp, #84]	; 0x54
   3a9a8:	ldr	r2, [sp, #36]	; 0x24
   3a9ac:	str	r2, [r7, #4]
   3a9b0:	ldr	r2, [sp, #44]	; 0x2c
   3a9b4:	ldr	r9, [r4]
   3a9b8:	ldr	r7, [r4, #4]
   3a9bc:	orr	r2, r2, #1
   3a9c0:	add	fp, sp, #48	; 0x30
   3a9c4:	str	r2, [sp, #28]
   3a9c8:	str	r2, [sp, #4]
   3a9cc:	str	r3, [sp]
   3a9d0:	str	r6, [sp, #16]
   3a9d4:	str	r5, [sp, #12]
   3a9d8:	mov	r1, r9
   3a9dc:	mov	r0, r7
   3a9e0:	str	fp, [sp, #8]
   3a9e4:	mvn	r3, #0
   3a9e8:	mov	r2, sl
   3a9ec:	bl	374a4 <__assert_fail@plt+0x261b8>
   3a9f0:	cmp	r9, r0
   3a9f4:	bhi	3aa58 <__assert_fail@plt+0x2976c>
   3a9f8:	ldr	r3, [pc, #168]	; 3aaa8 <__assert_fail@plt+0x297bc>
   3a9fc:	add	r5, r0, #1
   3aa00:	cmp	r7, r3
   3aa04:	str	r5, [r4]
   3aa08:	beq	3aa14 <__assert_fail@plt+0x29728>
   3aa0c:	mov	r0, r7
   3aa10:	bl	3618c <__assert_fail@plt+0x24ea0>
   3aa14:	mov	r0, r5
   3aa18:	bl	3bd8c <__assert_fail@plt+0x2aaa0>
   3aa1c:	ldr	lr, [sp, #84]	; 0x54
   3aa20:	ldr	r3, [sp, #40]	; 0x28
   3aa24:	ldr	ip, [sp, #80]	; 0x50
   3aa28:	mov	r2, sl
   3aa2c:	mov	r1, r5
   3aa30:	str	r0, [r4, #4]
   3aa34:	ldr	r4, [sp, #28]
   3aa38:	str	r3, [sp]
   3aa3c:	str	fp, [sp, #8]
   3aa40:	str	r4, [sp, #4]
   3aa44:	str	lr, [sp, #16]
   3aa48:	str	ip, [sp, #12]
   3aa4c:	mvn	r3, #0
   3aa50:	mov	r7, r0
   3aa54:	bl	374a4 <__assert_fail@plt+0x261b8>
   3aa58:	ldr	r3, [sp, #24]
   3aa5c:	mov	r0, r7
   3aa60:	str	r3, [r8]
   3aa64:	add	sp, sp, #92	; 0x5c
   3aa68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3aa6c:	mov	r3, #8
   3aa70:	str	r3, [sp]
   3aa74:	add	r1, sp, #36	; 0x24
   3aa78:	rsb	r2, r2, #1
   3aa7c:	mov	r0, fp
   3aa80:	mvn	r3, #-2147483648	; 0x80000000
   3aa84:	bl	3bfa8 <__assert_fail@plt+0x2acbc>
   3aa88:	mov	r4, r0
   3aa8c:	ldm	r5, {r0, r1}
   3aa90:	str	r4, [r7]
   3aa94:	stm	r4, {r0, r1}
   3aa98:	b	3a980 <__assert_fail@plt+0x29694>
   3aa9c:	bl	112c8 <abort@plt>
   3aaa0:	ldrdeq	r2, [r5], -ip
   3aaa4:	andeq	r2, r5, r4, asr #2
   3aaa8:	andeq	r2, r5, ip, lsl #4
   3aaac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3aab0:	mov	r5, r0
   3aab4:	ldr	lr, [pc, #464]	; 3ac8c <__assert_fail@plt+0x299a0>
   3aab8:	mov	r6, r1
   3aabc:	mov	sl, r2
   3aac0:	mov	fp, r3
   3aac4:	ldm	lr!, {r0, r1, r2, r3}
   3aac8:	sub	sp, sp, #92	; 0x5c
   3aacc:	add	ip, sp, #40	; 0x28
   3aad0:	cmp	r6, #0
   3aad4:	cmpne	r5, #0
   3aad8:	stmia	ip!, {r0, r1, r2, r3}
   3aadc:	moveq	r4, #1
   3aae0:	ldm	lr!, {r0, r1, r2, r3}
   3aae4:	movne	r4, #0
   3aae8:	mov	r9, #10
   3aaec:	str	r4, [sp, #28]
   3aaf0:	stmia	ip!, {r0, r1, r2, r3}
   3aaf4:	ldm	lr, {r0, r1, r2, r3}
   3aaf8:	str	r9, [sp, #40]	; 0x28
   3aafc:	stm	ip, {r0, r1, r2, r3}
   3ab00:	beq	3ac88 <__assert_fail@plt+0x2999c>
   3ab04:	str	r5, [sp, #80]	; 0x50
   3ab08:	str	r6, [sp, #84]	; 0x54
   3ab0c:	bl	111c0 <__errno_location@plt>
   3ab10:	ldr	r7, [pc, #376]	; 3ac90 <__assert_fail@plt+0x299a4>
   3ab14:	ldr	r2, [r7, #4]
   3ab18:	ldr	r4, [r7]
   3ab1c:	cmp	r2, #0
   3ab20:	ldr	r3, [r0]
   3ab24:	mov	r8, r0
   3ab28:	str	r3, [sp, #24]
   3ab2c:	movgt	r3, r9
   3ab30:	bgt	3ab98 <__assert_fail@plt+0x298ac>
   3ab34:	add	r5, r7, #8
   3ab38:	cmp	r4, r5
   3ab3c:	str	r2, [sp, #36]	; 0x24
   3ab40:	beq	3ac58 <__assert_fail@plt+0x2996c>
   3ab44:	mov	r3, #8
   3ab48:	mov	r0, r4
   3ab4c:	str	r3, [sp]
   3ab50:	rsb	r2, r2, #1
   3ab54:	mvn	r3, #-2147483648	; 0x80000000
   3ab58:	add	r1, sp, #36	; 0x24
   3ab5c:	bl	3bfa8 <__assert_fail@plt+0x2acbc>
   3ab60:	mov	r4, r0
   3ab64:	str	r0, [r7]
   3ab68:	ldr	r0, [r7, #4]
   3ab6c:	ldr	r2, [sp, #36]	; 0x24
   3ab70:	mov	r1, #0
   3ab74:	sub	r2, r2, r0
   3ab78:	add	r0, r4, r0, lsl #3
   3ab7c:	lsl	r2, r2, #3
   3ab80:	bl	111f0 <memset@plt>
   3ab84:	ldr	r3, [sp, #40]	; 0x28
   3ab88:	ldr	r5, [sp, #80]	; 0x50
   3ab8c:	ldr	r6, [sp, #84]	; 0x54
   3ab90:	ldr	r2, [sp, #36]	; 0x24
   3ab94:	str	r2, [r7, #4]
   3ab98:	ldr	r2, [sp, #44]	; 0x2c
   3ab9c:	ldr	r9, [r4]
   3aba0:	ldr	r7, [r4, #4]
   3aba4:	orr	r2, r2, #1
   3aba8:	str	r3, [sp]
   3abac:	add	r3, sp, #48	; 0x30
   3abb0:	str	r2, [sp, #28]
   3abb4:	str	r2, [sp, #4]
   3abb8:	str	r3, [sp, #8]
   3abbc:	str	r6, [sp, #16]
   3abc0:	str	r5, [sp, #12]
   3abc4:	mov	r1, r9
   3abc8:	mov	r0, r7
   3abcc:	mov	r3, fp
   3abd0:	mov	r2, sl
   3abd4:	bl	374a4 <__assert_fail@plt+0x261b8>
   3abd8:	cmp	r9, r0
   3abdc:	bhi	3ac44 <__assert_fail@plt+0x29958>
   3abe0:	ldr	r3, [pc, #172]	; 3ac94 <__assert_fail@plt+0x299a8>
   3abe4:	add	r5, r0, #1
   3abe8:	cmp	r7, r3
   3abec:	str	r5, [r4]
   3abf0:	beq	3abfc <__assert_fail@plt+0x29910>
   3abf4:	mov	r0, r7
   3abf8:	bl	3618c <__assert_fail@plt+0x24ea0>
   3abfc:	mov	r0, r5
   3ac00:	bl	3bd8c <__assert_fail@plt+0x2aaa0>
   3ac04:	add	lr, sp, #48	; 0x30
   3ac08:	ldr	ip, [sp, #84]	; 0x54
   3ac0c:	mov	r1, r5
   3ac10:	ldr	r5, [sp, #28]
   3ac14:	mov	r3, fp
   3ac18:	mov	r2, sl
   3ac1c:	str	r0, [r4, #4]
   3ac20:	ldr	r4, [sp, #80]	; 0x50
   3ac24:	str	lr, [sp, #8]
   3ac28:	ldr	lr, [sp, #40]	; 0x28
   3ac2c:	str	r5, [sp, #4]
   3ac30:	str	ip, [sp, #16]
   3ac34:	str	r4, [sp, #12]
   3ac38:	str	lr, [sp]
   3ac3c:	mov	r7, r0
   3ac40:	bl	374a4 <__assert_fail@plt+0x261b8>
   3ac44:	ldr	r3, [sp, #24]
   3ac48:	mov	r0, r7
   3ac4c:	str	r3, [r8]
   3ac50:	add	sp, sp, #92	; 0x5c
   3ac54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3ac58:	mov	r3, #8
   3ac5c:	str	r3, [sp]
   3ac60:	add	r1, sp, #36	; 0x24
   3ac64:	rsb	r2, r2, #1
   3ac68:	ldr	r0, [sp, #28]
   3ac6c:	mvn	r3, #-2147483648	; 0x80000000
   3ac70:	bl	3bfa8 <__assert_fail@plt+0x2acbc>
   3ac74:	mov	r4, r0
   3ac78:	ldm	r5, {r0, r1}
   3ac7c:	str	r4, [r7]
   3ac80:	stm	r4, {r0, r1}
   3ac84:	b	3ab68 <__assert_fail@plt+0x2987c>
   3ac88:	bl	112c8 <abort@plt>
   3ac8c:	ldrdeq	r2, [r5], -ip
   3ac90:	andeq	r2, r5, r4, asr #2
   3ac94:	andeq	r2, r5, ip, lsl #4
   3ac98:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3ac9c:	sub	sp, sp, #52	; 0x34
   3aca0:	mov	r5, r0
   3aca4:	mov	sl, r1
   3aca8:	mov	fp, r2
   3acac:	bl	111c0 <__errno_location@plt>
   3acb0:	ldr	r4, [pc, #404]	; 3ae4c <__assert_fail@plt+0x29b60>
   3acb4:	cmn	r5, #-2147483647	; 0x80000001
   3acb8:	ldr	r6, [r4]
   3acbc:	mov	r8, r0
   3acc0:	movne	r0, #0
   3acc4:	moveq	r0, #1
   3acc8:	ldr	r3, [r8]
   3accc:	orrs	r0, r0, r5, lsr #31
   3acd0:	str	r3, [sp, #28]
   3acd4:	bne	3ae48 <__assert_fail@plt+0x29b5c>
   3acd8:	ldr	r2, [r4, #4]
   3acdc:	cmp	r5, r2
   3ace0:	blt	3ad40 <__assert_fail@plt+0x29a54>
   3ace4:	add	r7, r4, #8
   3ace8:	cmp	r6, r7
   3acec:	str	r2, [sp, #44]	; 0x2c
   3acf0:	beq	3ae18 <__assert_fail@plt+0x29b2c>
   3acf4:	mov	r3, #8
   3acf8:	sub	r2, r5, r2
   3acfc:	mov	r0, r6
   3ad00:	str	r3, [sp]
   3ad04:	add	r2, r2, #1
   3ad08:	mvn	r3, #-2147483648	; 0x80000000
   3ad0c:	add	r1, sp, #44	; 0x2c
   3ad10:	bl	3bfa8 <__assert_fail@plt+0x2acbc>
   3ad14:	mov	r6, r0
   3ad18:	str	r0, [r4]
   3ad1c:	ldr	r0, [r4, #4]
   3ad20:	ldr	r2, [sp, #44]	; 0x2c
   3ad24:	mov	r1, #0
   3ad28:	sub	r2, r2, r0
   3ad2c:	add	r0, r6, r0, lsl #3
   3ad30:	lsl	r2, r2, #3
   3ad34:	bl	111f0 <memset@plt>
   3ad38:	ldr	r3, [sp, #44]	; 0x2c
   3ad3c:	str	r3, [r4, #4]
   3ad40:	ldr	r2, [r4, #56]	; 0x38
   3ad44:	add	r3, r6, r5, lsl #3
   3ad48:	ldr	r1, [r4, #20]
   3ad4c:	ldr	r7, [r3, #4]
   3ad50:	ldr	r9, [r6, r5, lsl #3]
   3ad54:	ldr	ip, [r4, #60]	; 0x3c
   3ad58:	str	r3, [sp, #32]
   3ad5c:	ldr	r3, [r4, #16]
   3ad60:	str	r2, [sp, #12]
   3ad64:	ldr	r2, [pc, #228]	; 3ae50 <__assert_fail@plt+0x29b64>
   3ad68:	orr	r1, r1, #1
   3ad6c:	str	r1, [sp, #36]	; 0x24
   3ad70:	str	r1, [sp, #4]
   3ad74:	str	r2, [sp, #8]
   3ad78:	str	r3, [sp]
   3ad7c:	mov	r0, r7
   3ad80:	mov	r1, r9
   3ad84:	str	ip, [sp, #16]
   3ad88:	mov	r3, fp
   3ad8c:	mov	r2, sl
   3ad90:	bl	374a4 <__assert_fail@plt+0x261b8>
   3ad94:	cmp	r9, r0
   3ad98:	bhi	3ae04 <__assert_fail@plt+0x29b18>
   3ad9c:	ldr	r3, [pc, #176]	; 3ae54 <__assert_fail@plt+0x29b68>
   3ada0:	add	r9, r0, #1
   3ada4:	cmp	r7, r3
   3ada8:	str	r9, [r6, r5, lsl #3]
   3adac:	beq	3adb8 <__assert_fail@plt+0x29acc>
   3adb0:	mov	r0, r7
   3adb4:	bl	3618c <__assert_fail@plt+0x24ea0>
   3adb8:	mov	r0, r9
   3adbc:	bl	3bd8c <__assert_fail@plt+0x2aaa0>
   3adc0:	ldr	ip, [sp, #32]
   3adc4:	ldr	lr, [r4, #60]	; 0x3c
   3adc8:	ldr	r5, [r4, #56]	; 0x38
   3adcc:	mov	r3, fp
   3add0:	mov	r2, sl
   3add4:	mov	r1, r9
   3add8:	str	r0, [ip, #4]
   3addc:	ldr	ip, [r4, #16]
   3ade0:	ldr	r4, [pc, #104]	; 3ae50 <__assert_fail@plt+0x29b64>
   3ade4:	str	lr, [sp, #16]
   3ade8:	str	r4, [sp, #8]
   3adec:	ldr	r4, [sp, #36]	; 0x24
   3adf0:	str	r5, [sp, #12]
   3adf4:	str	r4, [sp, #4]
   3adf8:	str	ip, [sp]
   3adfc:	mov	r7, r0
   3ae00:	bl	374a4 <__assert_fail@plt+0x261b8>
   3ae04:	ldr	r3, [sp, #28]
   3ae08:	mov	r0, r7
   3ae0c:	str	r3, [r8]
   3ae10:	add	sp, sp, #52	; 0x34
   3ae14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3ae18:	mov	r3, #8
   3ae1c:	sub	r2, r5, r2
   3ae20:	str	r3, [sp]
   3ae24:	add	r1, sp, #44	; 0x2c
   3ae28:	add	r2, r2, #1
   3ae2c:	mvn	r3, #-2147483648	; 0x80000000
   3ae30:	bl	3bfa8 <__assert_fail@plt+0x2acbc>
   3ae34:	mov	r6, r0
   3ae38:	ldm	r7, {r0, r1}
   3ae3c:	str	r6, [r4]
   3ae40:	stm	r6, {r0, r1}
   3ae44:	b	3ad1c <__assert_fail@plt+0x29a30>
   3ae48:	bl	112c8 <abort@plt>
   3ae4c:	andeq	r2, r5, r4, asr #2
   3ae50:	andeq	r2, r5, ip, asr r1
   3ae54:	andeq	r2, r5, ip, lsl #4
   3ae58:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3ae5c:	sub	sp, sp, #44	; 0x2c
   3ae60:	mov	r9, r0
   3ae64:	mov	sl, r1
   3ae68:	bl	111c0 <__errno_location@plt>
   3ae6c:	ldr	r4, [pc, #360]	; 3afdc <__assert_fail@plt+0x29cf0>
   3ae70:	ldr	r2, [r4, #4]
   3ae74:	ldr	r5, [r4]
   3ae78:	cmp	r2, #0
   3ae7c:	ldr	r3, [r0]
   3ae80:	mov	r7, r0
   3ae84:	str	r3, [sp, #24]
   3ae88:	bgt	3aee4 <__assert_fail@plt+0x29bf8>
   3ae8c:	add	r6, r4, #8
   3ae90:	cmp	r5, r6
   3ae94:	str	r2, [sp, #36]	; 0x24
   3ae98:	beq	3afac <__assert_fail@plt+0x29cc0>
   3ae9c:	mov	r3, #8
   3aea0:	mov	r0, r5
   3aea4:	str	r3, [sp]
   3aea8:	rsb	r2, r2, #1
   3aeac:	mvn	r3, #-2147483648	; 0x80000000
   3aeb0:	add	r1, sp, #36	; 0x24
   3aeb4:	bl	3bfa8 <__assert_fail@plt+0x2acbc>
   3aeb8:	mov	r5, r0
   3aebc:	str	r0, [r4]
   3aec0:	ldr	r0, [r4, #4]
   3aec4:	ldr	r2, [sp, #36]	; 0x24
   3aec8:	mov	r1, #0
   3aecc:	sub	r2, r2, r0
   3aed0:	add	r0, r5, r0, lsl #3
   3aed4:	lsl	r2, r2, #3
   3aed8:	bl	111f0 <memset@plt>
   3aedc:	ldr	r3, [sp, #36]	; 0x24
   3aee0:	str	r3, [r4, #4]
   3aee4:	ldr	r1, [r4, #20]
   3aee8:	ldr	r8, [r5]
   3aeec:	ldr	r6, [r5, #4]
   3aef0:	ldr	r2, [r4, #56]	; 0x38
   3aef4:	ldr	r3, [r4, #16]
   3aef8:	ldr	ip, [r4, #60]	; 0x3c
   3aefc:	ldr	fp, [pc, #220]	; 3afe0 <__assert_fail@plt+0x29cf4>
   3af00:	orr	r1, r1, #1
   3af04:	str	r1, [sp, #28]
   3af08:	str	r1, [sp, #4]
   3af0c:	str	r2, [sp, #12]
   3af10:	str	r3, [sp]
   3af14:	mov	r1, r8
   3af18:	mov	r0, r6
   3af1c:	str	ip, [sp, #16]
   3af20:	str	fp, [sp, #8]
   3af24:	mov	r3, sl
   3af28:	mov	r2, r9
   3af2c:	bl	374a4 <__assert_fail@plt+0x261b8>
   3af30:	cmp	r8, r0
   3af34:	bhi	3af98 <__assert_fail@plt+0x29cac>
   3af38:	ldr	r3, [pc, #164]	; 3afe4 <__assert_fail@plt+0x29cf8>
   3af3c:	add	r8, r0, #1
   3af40:	cmp	r6, r3
   3af44:	str	r8, [r5]
   3af48:	beq	3af54 <__assert_fail@plt+0x29c68>
   3af4c:	mov	r0, r6
   3af50:	bl	3618c <__assert_fail@plt+0x24ea0>
   3af54:	mov	r0, r8
   3af58:	bl	3bd8c <__assert_fail@plt+0x2aaa0>
   3af5c:	ldr	lr, [r4, #60]	; 0x3c
   3af60:	ldr	ip, [r4, #16]
   3af64:	mov	r3, sl
   3af68:	mov	r2, r9
   3af6c:	mov	r1, r8
   3af70:	str	r0, [r5, #4]
   3af74:	ldr	r5, [r4, #56]	; 0x38
   3af78:	ldr	r4, [sp, #28]
   3af7c:	str	fp, [sp, #8]
   3af80:	str	r4, [sp, #4]
   3af84:	str	lr, [sp, #16]
   3af88:	str	r5, [sp, #12]
   3af8c:	str	ip, [sp]
   3af90:	mov	r6, r0
   3af94:	bl	374a4 <__assert_fail@plt+0x261b8>
   3af98:	ldr	r3, [sp, #24]
   3af9c:	mov	r0, r6
   3afa0:	str	r3, [r7]
   3afa4:	add	sp, sp, #44	; 0x2c
   3afa8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3afac:	mov	r3, #8
   3afb0:	str	r3, [sp]
   3afb4:	add	r1, sp, #36	; 0x24
   3afb8:	rsb	r2, r2, #1
   3afbc:	mvn	r3, #-2147483648	; 0x80000000
   3afc0:	mov	r0, #0
   3afc4:	bl	3bfa8 <__assert_fail@plt+0x2acbc>
   3afc8:	mov	r5, r0
   3afcc:	ldm	r6, {r0, r1}
   3afd0:	str	r5, [r4]
   3afd4:	stm	r5, {r0, r1}
   3afd8:	b	3aec0 <__assert_fail@plt+0x29bd4>
   3afdc:	andeq	r2, r5, r4, asr #2
   3afe0:	andeq	r2, r5, ip, asr r1
   3afe4:	andeq	r2, r5, ip, lsl #4
   3afe8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3afec:	sub	sp, sp, #44	; 0x2c
   3aff0:	mov	r5, r0
   3aff4:	mov	sl, r1
   3aff8:	bl	111c0 <__errno_location@plt>
   3affc:	ldr	r4, [pc, #396]	; 3b190 <__assert_fail@plt+0x29ea4>
   3b000:	cmn	r5, #-2147483647	; 0x80000001
   3b004:	ldr	r6, [r4]
   3b008:	mov	r8, r0
   3b00c:	movne	r0, #0
   3b010:	moveq	r0, #1
   3b014:	ldr	r3, [r8]
   3b018:	orrs	r0, r0, r5, lsr #31
   3b01c:	str	r3, [sp, #24]
   3b020:	bne	3b18c <__assert_fail@plt+0x29ea0>
   3b024:	ldr	r2, [r4, #4]
   3b028:	cmp	r5, r2
   3b02c:	blt	3b08c <__assert_fail@plt+0x29da0>
   3b030:	add	r7, r4, #8
   3b034:	cmp	r6, r7
   3b038:	str	r2, [sp, #36]	; 0x24
   3b03c:	beq	3b15c <__assert_fail@plt+0x29e70>
   3b040:	mov	r3, #8
   3b044:	sub	r2, r5, r2
   3b048:	mov	r0, r6
   3b04c:	str	r3, [sp]
   3b050:	add	r2, r2, #1
   3b054:	mvn	r3, #-2147483648	; 0x80000000
   3b058:	add	r1, sp, #36	; 0x24
   3b05c:	bl	3bfa8 <__assert_fail@plt+0x2acbc>
   3b060:	mov	r6, r0
   3b064:	str	r0, [r4]
   3b068:	ldr	r0, [r4, #4]
   3b06c:	ldr	r2, [sp, #36]	; 0x24
   3b070:	mov	r1, #0
   3b074:	sub	r2, r2, r0
   3b078:	add	r0, r6, r0, lsl #3
   3b07c:	lsl	r2, r2, #3
   3b080:	bl	111f0 <memset@plt>
   3b084:	ldr	r3, [sp, #36]	; 0x24
   3b088:	str	r3, [r4, #4]
   3b08c:	ldr	r2, [r4, #56]	; 0x38
   3b090:	add	fp, r6, r5, lsl #3
   3b094:	ldr	r1, [r4, #20]
   3b098:	ldr	r9, [r6, r5, lsl #3]
   3b09c:	ldr	r7, [fp, #4]
   3b0a0:	ldr	r3, [r4, #16]
   3b0a4:	ldr	ip, [r4, #60]	; 0x3c
   3b0a8:	str	r2, [sp, #12]
   3b0ac:	ldr	r2, [pc, #224]	; 3b194 <__assert_fail@plt+0x29ea8>
   3b0b0:	orr	r1, r1, #1
   3b0b4:	str	r1, [sp, #28]
   3b0b8:	str	r1, [sp, #4]
   3b0bc:	str	r2, [sp, #8]
   3b0c0:	str	r3, [sp]
   3b0c4:	mov	r0, r7
   3b0c8:	mov	r1, r9
   3b0cc:	str	ip, [sp, #16]
   3b0d0:	mvn	r3, #0
   3b0d4:	mov	r2, sl
   3b0d8:	bl	374a4 <__assert_fail@plt+0x261b8>
   3b0dc:	cmp	r9, r0
   3b0e0:	bhi	3b148 <__assert_fail@plt+0x29e5c>
   3b0e4:	ldr	r3, [pc, #172]	; 3b198 <__assert_fail@plt+0x29eac>
   3b0e8:	add	r9, r0, #1
   3b0ec:	cmp	r7, r3
   3b0f0:	str	r9, [r6, r5, lsl #3]
   3b0f4:	beq	3b100 <__assert_fail@plt+0x29e14>
   3b0f8:	mov	r0, r7
   3b0fc:	bl	3618c <__assert_fail@plt+0x24ea0>
   3b100:	mov	r0, r9
   3b104:	bl	3bd8c <__assert_fail@plt+0x2aaa0>
   3b108:	ldr	ip, [r4, #60]	; 0x3c
   3b10c:	ldr	r3, [r4, #16]
   3b110:	ldr	lr, [r4, #56]	; 0x38
   3b114:	ldr	r4, [pc, #120]	; 3b194 <__assert_fail@plt+0x29ea8>
   3b118:	mov	r2, sl
   3b11c:	mov	r1, r9
   3b120:	str	r0, [fp, #4]
   3b124:	str	r4, [sp, #8]
   3b128:	ldr	r4, [sp, #28]
   3b12c:	str	r3, [sp]
   3b130:	str	r4, [sp, #4]
   3b134:	str	ip, [sp, #16]
   3b138:	str	lr, [sp, #12]
   3b13c:	mvn	r3, #0
   3b140:	mov	r7, r0
   3b144:	bl	374a4 <__assert_fail@plt+0x261b8>
   3b148:	ldr	r3, [sp, #24]
   3b14c:	mov	r0, r7
   3b150:	str	r3, [r8]
   3b154:	add	sp, sp, #44	; 0x2c
   3b158:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3b15c:	mov	r3, #8
   3b160:	sub	r2, r5, r2
   3b164:	str	r3, [sp]
   3b168:	add	r1, sp, #36	; 0x24
   3b16c:	add	r2, r2, #1
   3b170:	mvn	r3, #-2147483648	; 0x80000000
   3b174:	bl	3bfa8 <__assert_fail@plt+0x2acbc>
   3b178:	mov	r6, r0
   3b17c:	ldm	r7, {r0, r1}
   3b180:	str	r6, [r4]
   3b184:	stm	r6, {r0, r1}
   3b188:	b	3b068 <__assert_fail@plt+0x29d7c>
   3b18c:	bl	112c8 <abort@plt>
   3b190:	andeq	r2, r5, r4, asr #2
   3b194:	andeq	r2, r5, ip, asr r1
   3b198:	andeq	r2, r5, ip, lsl #4
   3b19c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3b1a0:	sub	sp, sp, #44	; 0x2c
   3b1a4:	mov	sl, r0
   3b1a8:	bl	111c0 <__errno_location@plt>
   3b1ac:	ldr	r4, [pc, #348]	; 3b310 <__assert_fail@plt+0x2a024>
   3b1b0:	ldr	r2, [r4, #4]
   3b1b4:	ldr	r5, [r4]
   3b1b8:	cmp	r2, #0
   3b1bc:	ldr	r3, [r0]
   3b1c0:	mov	r8, r0
   3b1c4:	str	r3, [sp, #28]
   3b1c8:	bgt	3b224 <__assert_fail@plt+0x29f38>
   3b1cc:	add	r6, r4, #8
   3b1d0:	cmp	r5, r6
   3b1d4:	str	r2, [sp, #36]	; 0x24
   3b1d8:	beq	3b2e0 <__assert_fail@plt+0x29ff4>
   3b1dc:	mov	r3, #8
   3b1e0:	mov	r0, r5
   3b1e4:	str	r3, [sp]
   3b1e8:	rsb	r2, r2, #1
   3b1ec:	mvn	r3, #-2147483648	; 0x80000000
   3b1f0:	add	r1, sp, #36	; 0x24
   3b1f4:	bl	3bfa8 <__assert_fail@plt+0x2acbc>
   3b1f8:	mov	r5, r0
   3b1fc:	str	r0, [r4]
   3b200:	ldr	r0, [r4, #4]
   3b204:	ldr	r2, [sp, #36]	; 0x24
   3b208:	mov	r1, #0
   3b20c:	sub	r2, r2, r0
   3b210:	add	r0, r5, r0, lsl #3
   3b214:	lsl	r2, r2, #3
   3b218:	bl	111f0 <memset@plt>
   3b21c:	ldr	r3, [sp, #36]	; 0x24
   3b220:	str	r3, [r4, #4]
   3b224:	ldr	r7, [r4, #20]
   3b228:	ldr	r9, [r5]
   3b22c:	ldr	r6, [r5, #4]
   3b230:	ldr	r2, [r4, #56]	; 0x38
   3b234:	ldr	r3, [r4, #16]
   3b238:	ldr	ip, [r4, #60]	; 0x3c
   3b23c:	ldr	fp, [pc, #208]	; 3b314 <__assert_fail@plt+0x2a028>
   3b240:	orr	r7, r7, #1
   3b244:	str	r2, [sp, #12]
   3b248:	str	r3, [sp]
   3b24c:	str	r7, [sp, #4]
   3b250:	mov	r1, r9
   3b254:	mov	r0, r6
   3b258:	str	ip, [sp, #16]
   3b25c:	str	fp, [sp, #8]
   3b260:	mvn	r3, #0
   3b264:	mov	r2, sl
   3b268:	bl	374a4 <__assert_fail@plt+0x261b8>
   3b26c:	cmp	r9, r0
   3b270:	bhi	3b2cc <__assert_fail@plt+0x29fe0>
   3b274:	ldr	r3, [pc, #156]	; 3b318 <__assert_fail@plt+0x2a02c>
   3b278:	add	r9, r0, #1
   3b27c:	cmp	r6, r3
   3b280:	str	r9, [r5]
   3b284:	beq	3b290 <__assert_fail@plt+0x29fa4>
   3b288:	mov	r0, r6
   3b28c:	bl	3618c <__assert_fail@plt+0x24ea0>
   3b290:	mov	r0, r9
   3b294:	bl	3bd8c <__assert_fail@plt+0x2aaa0>
   3b298:	ldr	ip, [r4, #60]	; 0x3c
   3b29c:	ldr	r3, [r4, #16]
   3b2a0:	ldr	lr, [r4, #56]	; 0x38
   3b2a4:	mov	r2, sl
   3b2a8:	mov	r1, r9
   3b2ac:	str	r0, [r5, #4]
   3b2b0:	str	r3, [sp]
   3b2b4:	stmib	sp, {r7, fp}
   3b2b8:	str	ip, [sp, #16]
   3b2bc:	str	lr, [sp, #12]
   3b2c0:	mvn	r3, #0
   3b2c4:	mov	r6, r0
   3b2c8:	bl	374a4 <__assert_fail@plt+0x261b8>
   3b2cc:	ldr	r3, [sp, #28]
   3b2d0:	mov	r0, r6
   3b2d4:	str	r3, [r8]
   3b2d8:	add	sp, sp, #44	; 0x2c
   3b2dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3b2e0:	mov	r3, #8
   3b2e4:	str	r3, [sp]
   3b2e8:	add	r1, sp, #36	; 0x24
   3b2ec:	rsb	r2, r2, #1
   3b2f0:	mvn	r3, #-2147483648	; 0x80000000
   3b2f4:	mov	r0, #0
   3b2f8:	bl	3bfa8 <__assert_fail@plt+0x2acbc>
   3b2fc:	mov	r5, r0
   3b300:	ldm	r6, {r0, r1}
   3b304:	str	r5, [r4]
   3b308:	stm	r5, {r0, r1}
   3b30c:	b	3b200 <__assert_fail@plt+0x29f14>
   3b310:	andeq	r2, r5, r4, asr #2
   3b314:	andeq	r2, r5, ip, asr r1
   3b318:	andeq	r2, r5, ip, lsl #4
   3b31c:	mov	r2, #3
   3b320:	mov	r1, #0
   3b324:	b	3d580 <__assert_fail@plt+0x2c294>
   3b328:	push	{r4, r5, r6, lr}
   3b32c:	sub	sp, sp, #32
   3b330:	cmp	r1, #0
   3b334:	mov	r4, r0
   3b338:	ldr	r5, [sp, #48]	; 0x30
   3b33c:	ldr	r6, [sp, #52]	; 0x34
   3b340:	beq	3b658 <__assert_fail@plt+0x2a36c>
   3b344:	stm	sp, {r2, r3}
   3b348:	mov	r3, r1
   3b34c:	ldr	r2, [pc, #808]	; 3b67c <__assert_fail@plt+0x2a390>
   3b350:	mov	r1, #1
   3b354:	bl	11214 <__fprintf_chk@plt>
   3b358:	mov	r2, #5
   3b35c:	ldr	r1, [pc, #796]	; 3b680 <__assert_fail@plt+0x2a394>
   3b360:	mov	r0, #0
   3b364:	bl	110a0 <dcgettext@plt>
   3b368:	ldr	r3, [pc, #788]	; 3b684 <__assert_fail@plt+0x2a398>
   3b36c:	ldr	r2, [pc, #788]	; 3b688 <__assert_fail@plt+0x2a39c>
   3b370:	str	r3, [sp]
   3b374:	mov	r1, #1
   3b378:	mov	r3, r0
   3b37c:	mov	r0, r4
   3b380:	bl	11214 <__fprintf_chk@plt>
   3b384:	mov	r1, r4
   3b388:	mov	r0, #10
   3b38c:	bl	11094 <fputc_unlocked@plt>
   3b390:	mov	r2, #5
   3b394:	ldr	r1, [pc, #752]	; 3b68c <__assert_fail@plt+0x2a3a0>
   3b398:	mov	r0, #0
   3b39c:	bl	110a0 <dcgettext@plt>
   3b3a0:	mov	r1, #1
   3b3a4:	ldr	r3, [pc, #740]	; 3b690 <__assert_fail@plt+0x2a3a4>
   3b3a8:	mov	r2, r0
   3b3ac:	mov	r0, r4
   3b3b0:	bl	11214 <__fprintf_chk@plt>
   3b3b4:	mov	r1, r4
   3b3b8:	mov	r0, #10
   3b3bc:	bl	11094 <fputc_unlocked@plt>
   3b3c0:	cmp	r6, #9
   3b3c4:	ldrls	pc, [pc, r6, lsl #2]
   3b3c8:	b	3b670 <__assert_fail@plt+0x2a384>
   3b3cc:	andeq	fp, r3, r0, asr r4
   3b3d0:	andeq	fp, r3, r8, asr r4
   3b3d4:	andeq	fp, r3, r4, lsl #9
   3b3d8:			; <UNDEFINED> instruction: 0x0003b4b8
   3b3dc:	strdeq	fp, [r3], -r4
   3b3e0:	andeq	fp, r3, r0, lsr r5
   3b3e4:	andeq	fp, r3, ip, ror #10
   3b3e8:			; <UNDEFINED> instruction: 0x0003b5b0
   3b3ec:	andeq	fp, r3, r0, lsl #12
   3b3f0:	strdeq	fp, [r3], -r4
   3b3f4:	ldr	r1, [pc, #664]	; 3b694 <__assert_fail@plt+0x2a3a8>
   3b3f8:	mov	r2, #5
   3b3fc:	mov	r0, #0
   3b400:	bl	110a0 <dcgettext@plt>
   3b404:	ldr	ip, [r5, #32]
   3b408:	ldr	r1, [r5, #28]
   3b40c:	ldr	r2, [r5, #24]
   3b410:	ldr	r3, [r5]
   3b414:	ldr	r6, [r5, #20]
   3b418:	str	ip, [sp, #28]
   3b41c:	ldr	lr, [r5, #16]
   3b420:	str	r1, [sp, #24]
   3b424:	ldr	ip, [r5, #12]
   3b428:	str	r2, [sp, #20]
   3b42c:	ldr	r1, [r5, #8]
   3b430:	ldr	r2, [r5, #4]
   3b434:	str	r6, [sp, #16]
   3b438:	stmib	sp, {r1, ip, lr}
   3b43c:	mov	r1, #1
   3b440:	str	r2, [sp]
   3b444:	mov	r2, r0
   3b448:	mov	r0, r4
   3b44c:	bl	11214 <__fprintf_chk@plt>
   3b450:	add	sp, sp, #32
   3b454:	pop	{r4, r5, r6, pc}
   3b458:	mov	r2, #5
   3b45c:	ldr	r1, [pc, #564]	; 3b698 <__assert_fail@plt+0x2a3ac>
   3b460:	mov	r0, #0
   3b464:	bl	110a0 <dcgettext@plt>
   3b468:	ldr	r3, [r5]
   3b46c:	mov	r1, #1
   3b470:	mov	r2, r0
   3b474:	mov	r0, r4
   3b478:	add	sp, sp, #32
   3b47c:	pop	{r4, r5, r6, lr}
   3b480:	b	11214 <__fprintf_chk@plt>
   3b484:	mov	r2, #5
   3b488:	ldr	r1, [pc, #524]	; 3b69c <__assert_fail@plt+0x2a3b0>
   3b48c:	mov	r0, #0
   3b490:	bl	110a0 <dcgettext@plt>
   3b494:	ldr	r2, [r5, #4]
   3b498:	ldr	r3, [r5]
   3b49c:	mov	r1, #1
   3b4a0:	str	r2, [sp, #48]	; 0x30
   3b4a4:	mov	r2, r0
   3b4a8:	mov	r0, r4
   3b4ac:	add	sp, sp, #32
   3b4b0:	pop	{r4, r5, r6, lr}
   3b4b4:	b	11214 <__fprintf_chk@plt>
   3b4b8:	mov	r2, #5
   3b4bc:	ldr	r1, [pc, #476]	; 3b6a0 <__assert_fail@plt+0x2a3b4>
   3b4c0:	mov	r0, #0
   3b4c4:	bl	110a0 <dcgettext@plt>
   3b4c8:	ldr	r1, [r5, #8]
   3b4cc:	ldr	r2, [r5, #4]
   3b4d0:	ldr	r3, [r5]
   3b4d4:	str	r1, [sp, #52]	; 0x34
   3b4d8:	str	r2, [sp, #48]	; 0x30
   3b4dc:	mov	r1, #1
   3b4e0:	mov	r2, r0
   3b4e4:	mov	r0, r4
   3b4e8:	add	sp, sp, #32
   3b4ec:	pop	{r4, r5, r6, lr}
   3b4f0:	b	11214 <__fprintf_chk@plt>
   3b4f4:	mov	r2, #5
   3b4f8:	ldr	r1, [pc, #420]	; 3b6a4 <__assert_fail@plt+0x2a3b8>
   3b4fc:	mov	r0, #0
   3b500:	bl	110a0 <dcgettext@plt>
   3b504:	ldr	r1, [r5, #8]
   3b508:	ldr	ip, [r5, #12]
   3b50c:	ldr	r2, [r5, #4]
   3b510:	ldr	r3, [r5]
   3b514:	stmib	sp, {r1, ip}
   3b518:	str	r2, [sp]
   3b51c:	mov	r1, #1
   3b520:	mov	r2, r0
   3b524:	mov	r0, r4
   3b528:	bl	11214 <__fprintf_chk@plt>
   3b52c:	b	3b450 <__assert_fail@plt+0x2a164>
   3b530:	mov	r2, #5
   3b534:	ldr	r1, [pc, #364]	; 3b6a8 <__assert_fail@plt+0x2a3bc>
   3b538:	mov	r0, #0
   3b53c:	bl	110a0 <dcgettext@plt>
   3b540:	add	r1, r5, #8
   3b544:	ldr	r2, [r5, #4]
   3b548:	ldm	r1, {r1, ip, lr}
   3b54c:	ldr	r3, [r5]
   3b550:	str	r2, [sp]
   3b554:	stmib	sp, {r1, ip, lr}
   3b558:	mov	r1, #1
   3b55c:	mov	r2, r0
   3b560:	mov	r0, r4
   3b564:	bl	11214 <__fprintf_chk@plt>
   3b568:	b	3b450 <__assert_fail@plt+0x2a164>
   3b56c:	mov	r2, #5
   3b570:	ldr	r1, [pc, #308]	; 3b6ac <__assert_fail@plt+0x2a3c0>
   3b574:	mov	r0, #0
   3b578:	bl	110a0 <dcgettext@plt>
   3b57c:	add	r1, r5, #8
   3b580:	ldr	r2, [r5, #4]
   3b584:	ldm	r1, {r1, ip, lr}
   3b588:	ldr	r6, [r5, #20]
   3b58c:	ldr	r3, [r5]
   3b590:	stmib	sp, {r1, ip, lr}
   3b594:	mov	r1, #1
   3b598:	str	r2, [sp]
   3b59c:	str	r6, [sp, #16]
   3b5a0:	mov	r2, r0
   3b5a4:	mov	r0, r4
   3b5a8:	bl	11214 <__fprintf_chk@plt>
   3b5ac:	b	3b450 <__assert_fail@plt+0x2a164>
   3b5b0:	mov	r2, #5
   3b5b4:	ldr	r1, [pc, #244]	; 3b6b0 <__assert_fail@plt+0x2a3c4>
   3b5b8:	mov	r0, #0
   3b5bc:	bl	110a0 <dcgettext@plt>
   3b5c0:	ldr	r2, [r5, #24]
   3b5c4:	ldr	r3, [r5]
   3b5c8:	ldr	r6, [r5, #20]
   3b5cc:	ldr	lr, [r5, #16]
   3b5d0:	ldr	ip, [r5, #12]
   3b5d4:	str	r2, [sp, #20]
   3b5d8:	ldr	r1, [r5, #8]
   3b5dc:	ldr	r2, [r5, #4]
   3b5e0:	str	r6, [sp, #16]
   3b5e4:	stmib	sp, {r1, ip, lr}
   3b5e8:	mov	r1, #1
   3b5ec:	str	r2, [sp]
   3b5f0:	mov	r2, r0
   3b5f4:	mov	r0, r4
   3b5f8:	bl	11214 <__fprintf_chk@plt>
   3b5fc:	b	3b450 <__assert_fail@plt+0x2a164>
   3b600:	mov	r2, #5
   3b604:	ldr	r1, [pc, #168]	; 3b6b4 <__assert_fail@plt+0x2a3c8>
   3b608:	mov	r0, #0
   3b60c:	bl	110a0 <dcgettext@plt>
   3b610:	ldr	r1, [r5, #28]
   3b614:	ldr	r2, [r5, #24]
   3b618:	ldr	r3, [r5]
   3b61c:	ldr	r6, [r5, #20]
   3b620:	ldr	lr, [r5, #16]
   3b624:	str	r1, [sp, #24]
   3b628:	ldr	ip, [r5, #12]
   3b62c:	str	r2, [sp, #20]
   3b630:	ldr	r1, [r5, #8]
   3b634:	ldr	r2, [r5, #4]
   3b638:	str	r6, [sp, #16]
   3b63c:	stmib	sp, {r1, ip, lr}
   3b640:	mov	r1, #1
   3b644:	str	r2, [sp]
   3b648:	mov	r2, r0
   3b64c:	mov	r0, r4
   3b650:	bl	11214 <__fprintf_chk@plt>
   3b654:	b	3b450 <__assert_fail@plt+0x2a164>
   3b658:	str	r3, [sp]
   3b65c:	mov	r1, #1
   3b660:	mov	r3, r2
   3b664:	ldr	r2, [pc, #76]	; 3b6b8 <__assert_fail@plt+0x2a3cc>
   3b668:	bl	11214 <__fprintf_chk@plt>
   3b66c:	b	3b358 <__assert_fail@plt+0x2a06c>
   3b670:	mov	r2, #5
   3b674:	ldr	r1, [pc, #64]	; 3b6bc <__assert_fail@plt+0x2a3d0>
   3b678:	b	3b3fc <__assert_fail@plt+0x2a110>
   3b67c:	andeq	r1, r4, r8, lsl #18
   3b680:	andeq	r1, r4, ip, lsl r9
   3b684:	andeq	r0, r0, r6, ror #15
   3b688:	strdeq	r1, [r4], -r4
   3b68c:	andeq	r1, r4, r0, lsr #18
   3b690:	andeq	r1, r4, ip, asr #19
   3b694:	strdeq	r1, [r4], -ip
   3b698:	strdeq	r1, [r4], -r0
   3b69c:	andeq	r1, r4, r0, lsl #20
   3b6a0:	andeq	r1, r4, r8, lsl sl
   3b6a4:	andeq	r1, r4, r4, lsr sl
   3b6a8:	andeq	r1, r4, r4, asr sl
   3b6ac:	andeq	r1, r4, r8, ror sl
   3b6b0:	andeq	r1, r4, r0, lsr #21
   3b6b4:	andeq	r1, r4, ip, asr #21
   3b6b8:	andeq	r1, r4, r4, lsl r9
   3b6bc:	andeq	r1, r4, r0, lsr fp
   3b6c0:	push	{r4, r5, lr}
   3b6c4:	sub	sp, sp, #12
   3b6c8:	ldr	r5, [sp, #24]
   3b6cc:	ldr	ip, [r5]
   3b6d0:	cmp	ip, #0
   3b6d4:	beq	3b6f0 <__assert_fail@plt+0x2a404>
   3b6d8:	mov	lr, r5
   3b6dc:	mov	ip, #0
   3b6e0:	ldr	r4, [lr, #4]!
   3b6e4:	add	ip, ip, #1
   3b6e8:	cmp	r4, #0
   3b6ec:	bne	3b6e0 <__assert_fail@plt+0x2a3f4>
   3b6f0:	stm	sp, {r5, ip}
   3b6f4:	bl	3b328 <__assert_fail@plt+0x2a03c>
   3b6f8:	add	sp, sp, #12
   3b6fc:	pop	{r4, r5, pc}
   3b700:	push	{r4, r5, lr}
   3b704:	sub	sp, sp, #76	; 0x4c
   3b708:	mov	r5, r0
   3b70c:	ldr	ip, [sp, #88]	; 0x58
   3b710:	ldr	r0, [ip]
   3b714:	cmp	r0, #0
   3b718:	str	r0, [sp, #32]
   3b71c:	beq	3baf0 <__assert_fail@plt+0x2a804>
   3b720:	ldr	r0, [ip, #4]
   3b724:	cmp	r0, #0
   3b728:	str	r0, [sp, #36]	; 0x24
   3b72c:	beq	3baf8 <__assert_fail@plt+0x2a80c>
   3b730:	ldr	r0, [ip, #8]
   3b734:	cmp	r0, #0
   3b738:	str	r0, [sp, #40]	; 0x28
   3b73c:	beq	3bb00 <__assert_fail@plt+0x2a814>
   3b740:	ldr	r0, [ip, #12]
   3b744:	cmp	r0, #0
   3b748:	str	r0, [sp, #44]	; 0x2c
   3b74c:	beq	3bb08 <__assert_fail@plt+0x2a81c>
   3b750:	ldr	r0, [ip, #16]
   3b754:	cmp	r0, #0
   3b758:	str	r0, [sp, #48]	; 0x30
   3b75c:	beq	3bb10 <__assert_fail@plt+0x2a824>
   3b760:	ldr	r0, [ip, #20]
   3b764:	cmp	r0, #0
   3b768:	str	r0, [sp, #52]	; 0x34
   3b76c:	beq	3bb18 <__assert_fail@plt+0x2a82c>
   3b770:	ldr	r0, [ip, #24]
   3b774:	cmp	r0, #0
   3b778:	str	r0, [sp, #56]	; 0x38
   3b77c:	beq	3bb20 <__assert_fail@plt+0x2a834>
   3b780:	ldr	r0, [ip, #28]
   3b784:	cmp	r0, #0
   3b788:	str	r0, [sp, #60]	; 0x3c
   3b78c:	beq	3bb28 <__assert_fail@plt+0x2a83c>
   3b790:	ldr	r0, [ip, #32]
   3b794:	cmp	r0, #0
   3b798:	str	r0, [sp, #64]	; 0x40
   3b79c:	beq	3bb30 <__assert_fail@plt+0x2a844>
   3b7a0:	ldr	r0, [ip, #36]	; 0x24
   3b7a4:	cmp	r0, #0
   3b7a8:	movne	r4, #10
   3b7ac:	moveq	r4, #9
   3b7b0:	cmp	r1, #0
   3b7b4:	beq	3bac8 <__assert_fail@plt+0x2a7dc>
   3b7b8:	stm	sp, {r2, r3}
   3b7bc:	mov	r0, r5
   3b7c0:	mov	r3, r1
   3b7c4:	ldr	r2, [pc, #876]	; 3bb38 <__assert_fail@plt+0x2a84c>
   3b7c8:	mov	r1, #1
   3b7cc:	bl	11214 <__fprintf_chk@plt>
   3b7d0:	mov	r2, #5
   3b7d4:	ldr	r1, [pc, #864]	; 3bb3c <__assert_fail@plt+0x2a850>
   3b7d8:	mov	r0, #0
   3b7dc:	bl	110a0 <dcgettext@plt>
   3b7e0:	ldr	r3, [pc, #856]	; 3bb40 <__assert_fail@plt+0x2a854>
   3b7e4:	ldr	r2, [pc, #856]	; 3bb44 <__assert_fail@plt+0x2a858>
   3b7e8:	str	r3, [sp]
   3b7ec:	mov	r1, #1
   3b7f0:	mov	r3, r0
   3b7f4:	mov	r0, r5
   3b7f8:	bl	11214 <__fprintf_chk@plt>
   3b7fc:	mov	r1, r5
   3b800:	mov	r0, #10
   3b804:	bl	11094 <fputc_unlocked@plt>
   3b808:	mov	r2, #5
   3b80c:	ldr	r1, [pc, #820]	; 3bb48 <__assert_fail@plt+0x2a85c>
   3b810:	mov	r0, #0
   3b814:	bl	110a0 <dcgettext@plt>
   3b818:	mov	r1, #1
   3b81c:	ldr	r3, [pc, #808]	; 3bb4c <__assert_fail@plt+0x2a860>
   3b820:	mov	r2, r0
   3b824:	mov	r0, r5
   3b828:	bl	11214 <__fprintf_chk@plt>
   3b82c:	mov	r1, r5
   3b830:	mov	r0, #10
   3b834:	bl	11094 <fputc_unlocked@plt>
   3b838:	cmp	r4, #9
   3b83c:	ldrls	pc, [pc, r4, lsl #2]
   3b840:	b	3bae4 <__assert_fail@plt+0x2a7f8>
   3b844:	andeq	fp, r3, r8, asr #17
   3b848:	ldrdeq	fp, [r3], -r0
   3b84c:	strdeq	fp, [r3], -ip
   3b850:	andeq	fp, r3, r0, lsr r9
   3b854:	andeq	fp, r3, r8, ror #18
   3b858:	andeq	fp, r3, r4, lsr #19
   3b85c:	andeq	fp, r3, r0, ror #19
   3b860:	andeq	fp, r3, r4, lsr #20
   3b864:	andeq	fp, r3, r0, ror sl
   3b868:	andeq	fp, r3, ip, ror #16
   3b86c:	ldr	r1, [pc, #732]	; 3bb50 <__assert_fail@plt+0x2a864>
   3b870:	mov	r2, #5
   3b874:	mov	r0, #0
   3b878:	bl	110a0 <dcgettext@plt>
   3b87c:	ldr	ip, [sp, #64]	; 0x40
   3b880:	ldr	r1, [sp, #60]	; 0x3c
   3b884:	ldr	r2, [sp, #56]	; 0x38
   3b888:	ldr	lr, [sp, #48]	; 0x30
   3b88c:	str	ip, [sp, #28]
   3b890:	str	r1, [sp, #24]
   3b894:	ldr	ip, [sp, #44]	; 0x2c
   3b898:	ldr	r1, [sp, #40]	; 0x28
   3b89c:	ldr	r4, [sp, #52]	; 0x34
   3b8a0:	str	r2, [sp, #20]
   3b8a4:	ldr	r2, [sp, #36]	; 0x24
   3b8a8:	stmib	sp, {r1, ip, lr}
   3b8ac:	mov	r1, #1
   3b8b0:	str	r2, [sp]
   3b8b4:	ldr	r3, [sp, #32]
   3b8b8:	str	r4, [sp, #16]
   3b8bc:	mov	r2, r0
   3b8c0:	mov	r0, r5
   3b8c4:	bl	11214 <__fprintf_chk@plt>
   3b8c8:	add	sp, sp, #76	; 0x4c
   3b8cc:	pop	{r4, r5, pc}
   3b8d0:	mov	r2, #5
   3b8d4:	ldr	r1, [pc, #632]	; 3bb54 <__assert_fail@plt+0x2a868>
   3b8d8:	mov	r0, #0
   3b8dc:	bl	110a0 <dcgettext@plt>
   3b8e0:	ldr	r3, [sp, #32]
   3b8e4:	mov	r1, #1
   3b8e8:	mov	r2, r0
   3b8ec:	mov	r0, r5
   3b8f0:	add	sp, sp, #76	; 0x4c
   3b8f4:	pop	{r4, r5, lr}
   3b8f8:	b	11214 <__fprintf_chk@plt>
   3b8fc:	mov	r2, #5
   3b900:	ldr	r1, [pc, #592]	; 3bb58 <__assert_fail@plt+0x2a86c>
   3b904:	mov	r0, #0
   3b908:	bl	110a0 <dcgettext@plt>
   3b90c:	ldr	r2, [sp, #36]	; 0x24
   3b910:	ldr	r3, [sp, #32]
   3b914:	str	r2, [sp, #88]	; 0x58
   3b918:	mov	r1, #1
   3b91c:	mov	r2, r0
   3b920:	mov	r0, r5
   3b924:	add	sp, sp, #76	; 0x4c
   3b928:	pop	{r4, r5, lr}
   3b92c:	b	11214 <__fprintf_chk@plt>
   3b930:	mov	r2, #5
   3b934:	ldr	r1, [pc, #544]	; 3bb5c <__assert_fail@plt+0x2a870>
   3b938:	mov	r0, #0
   3b93c:	bl	110a0 <dcgettext@plt>
   3b940:	ldr	r1, [sp, #40]	; 0x28
   3b944:	ldr	r2, [sp, #36]	; 0x24
   3b948:	str	r1, [sp, #4]
   3b94c:	str	r2, [sp]
   3b950:	ldr	r3, [sp, #32]
   3b954:	mov	r1, #1
   3b958:	mov	r2, r0
   3b95c:	mov	r0, r5
   3b960:	bl	11214 <__fprintf_chk@plt>
   3b964:	b	3b8c8 <__assert_fail@plt+0x2a5dc>
   3b968:	mov	r2, #5
   3b96c:	ldr	r1, [pc, #492]	; 3bb60 <__assert_fail@plt+0x2a874>
   3b970:	mov	r0, #0
   3b974:	bl	110a0 <dcgettext@plt>
   3b978:	ldr	r1, [sp, #40]	; 0x28
   3b97c:	ldr	ip, [sp, #44]	; 0x2c
   3b980:	ldr	r2, [sp, #36]	; 0x24
   3b984:	ldr	r3, [sp, #32]
   3b988:	stmib	sp, {r1, ip}
   3b98c:	str	r2, [sp]
   3b990:	mov	r1, #1
   3b994:	mov	r2, r0
   3b998:	mov	r0, r5
   3b99c:	bl	11214 <__fprintf_chk@plt>
   3b9a0:	b	3b8c8 <__assert_fail@plt+0x2a5dc>
   3b9a4:	mov	r2, #5
   3b9a8:	ldr	r1, [pc, #436]	; 3bb64 <__assert_fail@plt+0x2a878>
   3b9ac:	mov	r0, #0
   3b9b0:	bl	110a0 <dcgettext@plt>
   3b9b4:	add	r1, sp, #40	; 0x28
   3b9b8:	ldr	r2, [sp, #36]	; 0x24
   3b9bc:	ldm	r1, {r1, ip, lr}
   3b9c0:	ldr	r3, [sp, #32]
   3b9c4:	str	r2, [sp]
   3b9c8:	stmib	sp, {r1, ip, lr}
   3b9cc:	mov	r1, #1
   3b9d0:	mov	r2, r0
   3b9d4:	mov	r0, r5
   3b9d8:	bl	11214 <__fprintf_chk@plt>
   3b9dc:	b	3b8c8 <__assert_fail@plt+0x2a5dc>
   3b9e0:	mov	r2, #5
   3b9e4:	ldr	r1, [pc, #380]	; 3bb68 <__assert_fail@plt+0x2a87c>
   3b9e8:	mov	r0, #0
   3b9ec:	bl	110a0 <dcgettext@plt>
   3b9f0:	add	r1, sp, #40	; 0x28
   3b9f4:	ldr	r2, [sp, #36]	; 0x24
   3b9f8:	ldm	r1, {r1, ip, lr}
   3b9fc:	ldr	r4, [sp, #52]	; 0x34
   3ba00:	str	r2, [sp]
   3ba04:	stmib	sp, {r1, ip, lr}
   3ba08:	mov	r1, #1
   3ba0c:	ldr	r3, [sp, #32]
   3ba10:	str	r4, [sp, #16]
   3ba14:	mov	r2, r0
   3ba18:	mov	r0, r5
   3ba1c:	bl	11214 <__fprintf_chk@plt>
   3ba20:	b	3b8c8 <__assert_fail@plt+0x2a5dc>
   3ba24:	mov	r2, #5
   3ba28:	ldr	r1, [pc, #316]	; 3bb6c <__assert_fail@plt+0x2a880>
   3ba2c:	mov	r0, #0
   3ba30:	bl	110a0 <dcgettext@plt>
   3ba34:	add	r1, sp, #40	; 0x28
   3ba38:	ldr	r2, [sp, #56]	; 0x38
   3ba3c:	ldm	r1, {r1, ip, lr}
   3ba40:	ldr	r4, [sp, #52]	; 0x34
   3ba44:	str	r2, [sp, #20]
   3ba48:	ldr	r2, [sp, #36]	; 0x24
   3ba4c:	stmib	sp, {r1, ip, lr}
   3ba50:	mov	r1, #1
   3ba54:	str	r2, [sp]
   3ba58:	ldr	r3, [sp, #32]
   3ba5c:	str	r4, [sp, #16]
   3ba60:	mov	r2, r0
   3ba64:	mov	r0, r5
   3ba68:	bl	11214 <__fprintf_chk@plt>
   3ba6c:	b	3b8c8 <__assert_fail@plt+0x2a5dc>
   3ba70:	mov	r2, #5
   3ba74:	ldr	r1, [pc, #244]	; 3bb70 <__assert_fail@plt+0x2a884>
   3ba78:	mov	r0, #0
   3ba7c:	bl	110a0 <dcgettext@plt>
   3ba80:	ldr	r1, [sp, #60]	; 0x3c
   3ba84:	ldr	r2, [sp, #56]	; 0x38
   3ba88:	ldr	lr, [sp, #48]	; 0x30
   3ba8c:	ldr	ip, [sp, #44]	; 0x2c
   3ba90:	str	r1, [sp, #24]
   3ba94:	ldr	r1, [sp, #40]	; 0x28
   3ba98:	ldr	r4, [sp, #52]	; 0x34
   3ba9c:	str	r2, [sp, #20]
   3baa0:	ldr	r2, [sp, #36]	; 0x24
   3baa4:	stmib	sp, {r1, ip, lr}
   3baa8:	mov	r1, #1
   3baac:	str	r2, [sp]
   3bab0:	ldr	r3, [sp, #32]
   3bab4:	str	r4, [sp, #16]
   3bab8:	mov	r2, r0
   3babc:	mov	r0, r5
   3bac0:	bl	11214 <__fprintf_chk@plt>
   3bac4:	b	3b8c8 <__assert_fail@plt+0x2a5dc>
   3bac8:	str	r3, [sp]
   3bacc:	mov	r1, #1
   3bad0:	mov	r3, r2
   3bad4:	mov	r0, r5
   3bad8:	ldr	r2, [pc, #148]	; 3bb74 <__assert_fail@plt+0x2a888>
   3badc:	bl	11214 <__fprintf_chk@plt>
   3bae0:	b	3b7d0 <__assert_fail@plt+0x2a4e4>
   3bae4:	mov	r2, #5
   3bae8:	ldr	r1, [pc, #136]	; 3bb78 <__assert_fail@plt+0x2a88c>
   3baec:	b	3b874 <__assert_fail@plt+0x2a588>
   3baf0:	mov	r4, r0
   3baf4:	b	3b7b0 <__assert_fail@plt+0x2a4c4>
   3baf8:	mov	r4, #1
   3bafc:	b	3b7b0 <__assert_fail@plt+0x2a4c4>
   3bb00:	mov	r4, #2
   3bb04:	b	3b7b0 <__assert_fail@plt+0x2a4c4>
   3bb08:	mov	r4, #3
   3bb0c:	b	3b7b0 <__assert_fail@plt+0x2a4c4>
   3bb10:	mov	r4, #4
   3bb14:	b	3b7b0 <__assert_fail@plt+0x2a4c4>
   3bb18:	mov	r4, #5
   3bb1c:	b	3b7b0 <__assert_fail@plt+0x2a4c4>
   3bb20:	mov	r4, #6
   3bb24:	b	3b7b0 <__assert_fail@plt+0x2a4c4>
   3bb28:	mov	r4, #7
   3bb2c:	b	3b7b0 <__assert_fail@plt+0x2a4c4>
   3bb30:	mov	r4, #8
   3bb34:	b	3b7b0 <__assert_fail@plt+0x2a4c4>
   3bb38:	andeq	r1, r4, r8, lsl #18
   3bb3c:	andeq	r1, r4, ip, lsl r9
   3bb40:	andeq	r0, r0, r6, ror #15
   3bb44:	strdeq	r1, [r4], -r4
   3bb48:	andeq	r1, r4, r0, lsr #18
   3bb4c:	andeq	r1, r4, ip, asr #19
   3bb50:	strdeq	r1, [r4], -ip
   3bb54:	strdeq	r1, [r4], -r0
   3bb58:	andeq	r1, r4, r0, lsl #20
   3bb5c:	andeq	r1, r4, r8, lsl sl
   3bb60:	andeq	r1, r4, r4, lsr sl
   3bb64:	andeq	r1, r4, r4, asr sl
   3bb68:	andeq	r1, r4, r8, ror sl
   3bb6c:	andeq	r1, r4, r0, lsr #21
   3bb70:	andeq	r1, r4, ip, asr #21
   3bb74:	andeq	r1, r4, r4, lsl r9
   3bb78:	andeq	r1, r4, r0, lsr fp
   3bb7c:	push	{r3}		; (str r3, [sp, #-4]!)
   3bb80:	push	{lr}		; (str lr, [sp, #-4]!)
   3bb84:	sub	sp, sp, #56	; 0x38
   3bb88:	add	r3, sp, #64	; 0x40
   3bb8c:	ldr	ip, [sp, #64]	; 0x40
   3bb90:	str	r3, [sp, #12]
   3bb94:	cmp	ip, #0
   3bb98:	str	ip, [sp, #16]
   3bb9c:	beq	3bc34 <__assert_fail@plt+0x2a948>
   3bba0:	ldr	ip, [sp, #68]	; 0x44
   3bba4:	cmp	ip, #0
   3bba8:	str	ip, [sp, #20]
   3bbac:	beq	3bc54 <__assert_fail@plt+0x2a968>
   3bbb0:	ldr	ip, [sp, #72]	; 0x48
   3bbb4:	cmp	ip, #0
   3bbb8:	str	ip, [sp, #24]
   3bbbc:	beq	3bc5c <__assert_fail@plt+0x2a970>
   3bbc0:	ldr	ip, [sp, #76]	; 0x4c
   3bbc4:	cmp	ip, #0
   3bbc8:	str	ip, [sp, #28]
   3bbcc:	beq	3bc64 <__assert_fail@plt+0x2a978>
   3bbd0:	ldr	ip, [sp, #80]	; 0x50
   3bbd4:	cmp	ip, #0
   3bbd8:	str	ip, [sp, #32]
   3bbdc:	beq	3bc6c <__assert_fail@plt+0x2a980>
   3bbe0:	ldr	ip, [sp, #84]	; 0x54
   3bbe4:	cmp	ip, #0
   3bbe8:	str	ip, [sp, #36]	; 0x24
   3bbec:	beq	3bc74 <__assert_fail@plt+0x2a988>
   3bbf0:	ldr	ip, [sp, #88]	; 0x58
   3bbf4:	cmp	ip, #0
   3bbf8:	str	ip, [sp, #40]	; 0x28
   3bbfc:	beq	3bc7c <__assert_fail@plt+0x2a990>
   3bc00:	ldr	ip, [sp, #92]	; 0x5c
   3bc04:	cmp	ip, #0
   3bc08:	str	ip, [sp, #44]	; 0x2c
   3bc0c:	beq	3bc84 <__assert_fail@plt+0x2a998>
   3bc10:	ldr	ip, [sp, #96]	; 0x60
   3bc14:	cmp	ip, #0
   3bc18:	str	ip, [sp, #48]	; 0x30
   3bc1c:	beq	3bc8c <__assert_fail@plt+0x2a9a0>
   3bc20:	ldr	ip, [sp, #100]	; 0x64
   3bc24:	cmp	ip, #0
   3bc28:	str	ip, [sp, #52]	; 0x34
   3bc2c:	movne	ip, #10
   3bc30:	moveq	ip, #9
   3bc34:	add	r3, sp, #16
   3bc38:	stm	sp, {r3, ip}
   3bc3c:	ldr	r3, [sp, #60]	; 0x3c
   3bc40:	bl	3b328 <__assert_fail@plt+0x2a03c>
   3bc44:	add	sp, sp, #56	; 0x38
   3bc48:	pop	{lr}		; (ldr lr, [sp], #4)
   3bc4c:	add	sp, sp, #4
   3bc50:	bx	lr
   3bc54:	mov	ip, #1
   3bc58:	b	3bc34 <__assert_fail@plt+0x2a948>
   3bc5c:	mov	ip, #2
   3bc60:	b	3bc34 <__assert_fail@plt+0x2a948>
   3bc64:	mov	ip, #3
   3bc68:	b	3bc34 <__assert_fail@plt+0x2a948>
   3bc6c:	mov	ip, #4
   3bc70:	b	3bc34 <__assert_fail@plt+0x2a948>
   3bc74:	mov	ip, #5
   3bc78:	b	3bc34 <__assert_fail@plt+0x2a948>
   3bc7c:	mov	ip, #6
   3bc80:	b	3bc34 <__assert_fail@plt+0x2a948>
   3bc84:	mov	ip, #7
   3bc88:	b	3bc34 <__assert_fail@plt+0x2a948>
   3bc8c:	mov	ip, #8
   3bc90:	b	3bc34 <__assert_fail@plt+0x2a948>
   3bc94:	ldr	r3, [pc, #116]	; 3bd10 <__assert_fail@plt+0x2aa24>
   3bc98:	push	{r4, lr}
   3bc9c:	mov	r0, #10
   3bca0:	ldr	r1, [r3]
   3bca4:	bl	11094 <fputc_unlocked@plt>
   3bca8:	mov	r2, #5
   3bcac:	ldr	r1, [pc, #96]	; 3bd14 <__assert_fail@plt+0x2aa28>
   3bcb0:	mov	r0, #0
   3bcb4:	bl	110a0 <dcgettext@plt>
   3bcb8:	ldr	r2, [pc, #88]	; 3bd18 <__assert_fail@plt+0x2aa2c>
   3bcbc:	mov	r1, r0
   3bcc0:	mov	r0, #1
   3bcc4:	bl	111fc <__printf_chk@plt>
   3bcc8:	mov	r2, #5
   3bccc:	ldr	r1, [pc, #72]	; 3bd1c <__assert_fail@plt+0x2aa30>
   3bcd0:	mov	r0, #0
   3bcd4:	bl	110a0 <dcgettext@plt>
   3bcd8:	ldr	r3, [pc, #64]	; 3bd20 <__assert_fail@plt+0x2aa34>
   3bcdc:	ldr	r2, [pc, #64]	; 3bd24 <__assert_fail@plt+0x2aa38>
   3bce0:	mov	r1, r0
   3bce4:	mov	r0, #1
   3bce8:	bl	111fc <__printf_chk@plt>
   3bcec:	mov	r2, #5
   3bcf0:	ldr	r1, [pc, #48]	; 3bd28 <__assert_fail@plt+0x2aa3c>
   3bcf4:	mov	r0, #0
   3bcf8:	bl	110a0 <dcgettext@plt>
   3bcfc:	ldr	r2, [pc, #40]	; 3bd2c <__assert_fail@plt+0x2aa40>
   3bd00:	pop	{r4, lr}
   3bd04:	mov	r1, r0
   3bd08:	mov	r0, #1
   3bd0c:	b	111fc <__printf_chk@plt>
   3bd10:	andeq	r2, r5, r4, lsr #3
   3bd14:	andeq	r1, r4, ip, ror #22
   3bd18:	andeq	r1, r4, r0, lsl #23
   3bd1c:	muleq	r4, r8, fp
   3bd20:	andeq	lr, r3, r0, lsl #28
   3bd24:	andeq	lr, r3, r8, lsr #28
   3bd28:	andeq	r1, r4, ip, lsr #23
   3bd2c:	ldrdeq	r1, [r4], -r4
   3bd30:	push	{r4, r5, r6, lr}
   3bd34:	mov	r6, r0
   3bd38:	mov	r5, r1
   3bd3c:	mov	r4, r2
   3bd40:	bl	3d7dc <__assert_fail@plt+0x2c4f0>
   3bd44:	cmp	r0, #0
   3bd48:	popne	{r4, r5, r6, pc}
   3bd4c:	cmp	r6, #0
   3bd50:	beq	3bd60 <__assert_fail@plt+0x2aa74>
   3bd54:	cmp	r5, #0
   3bd58:	cmpne	r4, #0
   3bd5c:	popeq	{r4, r5, r6, pc}
   3bd60:	bl	3c3ac <__assert_fail@plt+0x2b0c0>
   3bd64:	push	{r4, lr}
   3bd68:	bl	3d47c <__assert_fail@plt+0x2c190>
   3bd6c:	cmp	r0, #0
   3bd70:	popne	{r4, pc}
   3bd74:	bl	3c3ac <__assert_fail@plt+0x2b0c0>
   3bd78:	push	{r4, lr}
   3bd7c:	bl	3d47c <__assert_fail@plt+0x2c190>
   3bd80:	cmp	r0, #0
   3bd84:	popne	{r4, pc}
   3bd88:	bl	3c3ac <__assert_fail@plt+0x2b0c0>
   3bd8c:	push	{r4, lr}
   3bd90:	bl	3d47c <__assert_fail@plt+0x2c190>
   3bd94:	cmp	r0, #0
   3bd98:	popne	{r4, pc}
   3bd9c:	bl	3c3ac <__assert_fail@plt+0x2b0c0>
   3bda0:	push	{r4, r5, r6, lr}
   3bda4:	mov	r5, r0
   3bda8:	mov	r4, r1
   3bdac:	bl	3d4a8 <__assert_fail@plt+0x2c1bc>
   3bdb0:	cmp	r0, #0
   3bdb4:	popne	{r4, r5, r6, pc}
   3bdb8:	adds	r4, r4, #0
   3bdbc:	movne	r4, #1
   3bdc0:	cmp	r5, #0
   3bdc4:	orreq	r4, r4, #1
   3bdc8:	cmp	r4, #0
   3bdcc:	popeq	{r4, r5, r6, pc}
   3bdd0:	bl	3c3ac <__assert_fail@plt+0x2b0c0>
   3bdd4:	push	{r4, lr}
   3bdd8:	cmp	r1, #0
   3bddc:	orreq	r1, r1, #1
   3bde0:	bl	3d4a8 <__assert_fail@plt+0x2c1bc>
   3bde4:	cmp	r0, #0
   3bde8:	popne	{r4, pc}
   3bdec:	bl	3c3ac <__assert_fail@plt+0x2b0c0>
   3bdf0:	push	{r4, r5, r6, lr}
   3bdf4:	mov	r6, r0
   3bdf8:	mov	r5, r1
   3bdfc:	mov	r4, r2
   3be00:	bl	3d7dc <__assert_fail@plt+0x2c4f0>
   3be04:	cmp	r0, #0
   3be08:	popne	{r4, r5, r6, pc}
   3be0c:	cmp	r6, #0
   3be10:	beq	3be20 <__assert_fail@plt+0x2ab34>
   3be14:	cmp	r5, #0
   3be18:	cmpne	r4, #0
   3be1c:	popeq	{r4, r5, r6, pc}
   3be20:	bl	3c3ac <__assert_fail@plt+0x2b0c0>
   3be24:	cmp	r2, #0
   3be28:	cmpne	r1, #0
   3be2c:	moveq	r2, #1
   3be30:	moveq	r1, r2
   3be34:	push	{r4, lr}
   3be38:	bl	3d7dc <__assert_fail@plt+0x2c4f0>
   3be3c:	cmp	r0, #0
   3be40:	popne	{r4, pc}
   3be44:	bl	3c3ac <__assert_fail@plt+0x2b0c0>
   3be48:	push	{r4, lr}
   3be4c:	mov	r2, r1
   3be50:	mov	r1, r0
   3be54:	mov	r0, #0
   3be58:	bl	3d7dc <__assert_fail@plt+0x2c4f0>
   3be5c:	cmp	r0, #0
   3be60:	popne	{r4, pc}
   3be64:	bl	3c3ac <__assert_fail@plt+0x2b0c0>
   3be68:	cmp	r1, #0
   3be6c:	cmpne	r0, #0
   3be70:	moveq	r2, #1
   3be74:	movne	r2, r1
   3be78:	moveq	r1, r2
   3be7c:	movne	r1, r0
   3be80:	push	{r4, lr}
   3be84:	mov	r0, #0
   3be88:	bl	3d7dc <__assert_fail@plt+0x2c4f0>
   3be8c:	cmp	r0, #0
   3be90:	popne	{r4, pc}
   3be94:	bl	3c3ac <__assert_fail@plt+0x2b0c0>
   3be98:	cmp	r0, #0
   3be9c:	push	{r4, r5, r6, lr}
   3bea0:	mov	r5, r1
   3bea4:	ldr	r4, [r1]
   3bea8:	beq	3bee4 <__assert_fail@plt+0x2abf8>
   3beac:	lsr	r2, r4, #1
   3beb0:	add	r3, r2, #1
   3beb4:	mvn	r3, r3
   3beb8:	cmp	r4, r3
   3bebc:	bhi	3bf00 <__assert_fail@plt+0x2ac14>
   3bec0:	add	r4, r4, #1
   3bec4:	add	r4, r4, r2
   3bec8:	mov	r1, r4
   3becc:	mov	r2, #1
   3bed0:	bl	3d7dc <__assert_fail@plt+0x2c4f0>
   3bed4:	cmp	r0, #0
   3bed8:	beq	3bf04 <__assert_fail@plt+0x2ac18>
   3bedc:	str	r4, [r5]
   3bee0:	pop	{r4, r5, r6, pc}
   3bee4:	cmp	r4, #0
   3bee8:	moveq	r4, #64	; 0x40
   3beec:	mov	r1, r4
   3bef0:	mov	r2, #1
   3bef4:	bl	3d7dc <__assert_fail@plt+0x2c4f0>
   3bef8:	cmp	r0, #0
   3befc:	bne	3bedc <__assert_fail@plt+0x2abf0>
   3bf00:	bl	3c3ac <__assert_fail@plt+0x2b0c0>
   3bf04:	cmp	r4, #0
   3bf08:	bne	3bf00 <__assert_fail@plt+0x2ac14>
   3bf0c:	str	r4, [r5]
   3bf10:	pop	{r4, r5, r6, pc}
   3bf14:	cmp	r0, #0
   3bf18:	push	{r4, r5, r6, lr}
   3bf1c:	mov	r5, r1
   3bf20:	ldr	r4, [r1]
   3bf24:	mov	r6, r2
   3bf28:	beq	3bf6c <__assert_fail@plt+0x2ac80>
   3bf2c:	lsr	r1, r4, #1
   3bf30:	add	r3, r1, #1
   3bf34:	mvn	r3, r3
   3bf38:	cmp	r4, r3
   3bf3c:	bhi	3bfa4 <__assert_fail@plt+0x2acb8>
   3bf40:	add	r4, r4, #1
   3bf44:	add	r4, r4, r1
   3bf48:	mov	r1, r4
   3bf4c:	bl	3d7dc <__assert_fail@plt+0x2c4f0>
   3bf50:	cmp	r0, #0
   3bf54:	bne	3bf64 <__assert_fail@plt+0x2ac78>
   3bf58:	cmp	r4, #0
   3bf5c:	cmpne	r6, #0
   3bf60:	bne	3bfa4 <__assert_fail@plt+0x2acb8>
   3bf64:	str	r4, [r5]
   3bf68:	pop	{r4, r5, r6, pc}
   3bf6c:	cmp	r4, #0
   3bf70:	bne	3bf8c <__assert_fail@plt+0x2aca0>
   3bf74:	mov	r1, r2
   3bf78:	mov	r0, #64	; 0x40
   3bf7c:	bl	3d91c <__assert_fail@plt+0x2c630>
   3bf80:	cmp	r0, #0
   3bf84:	movne	r4, r0
   3bf88:	addeq	r4, r0, #1
   3bf8c:	mov	r2, r6
   3bf90:	mov	r1, r4
   3bf94:	mov	r0, #0
   3bf98:	bl	3d7dc <__assert_fail@plt+0x2c4f0>
   3bf9c:	cmp	r0, #0
   3bfa0:	bne	3bf64 <__assert_fail@plt+0x2ac78>
   3bfa4:	bl	3c3ac <__assert_fail@plt+0x2b0c0>
   3bfa8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3bfac:	sub	sp, sp, #12
   3bfb0:	ldr	r6, [r1]
   3bfb4:	mov	r8, r1
   3bfb8:	mov	r9, r0
   3bfbc:	asrs	r4, r6, #1
   3bfc0:	mov	sl, r2
   3bfc4:	mov	fp, r3
   3bfc8:	ldr	r7, [sp, #48]	; 0x30
   3bfcc:	bmi	3c148 <__assert_fail@plt+0x2ae5c>
   3bfd0:	mvn	r1, #-2147483648	; 0x80000000
   3bfd4:	sub	r1, r1, r4
   3bfd8:	cmp	r6, r1
   3bfdc:	movle	r1, #0
   3bfe0:	movgt	r1, #1
   3bfe4:	mvn	r3, fp
   3bfe8:	cmp	r1, #0
   3bfec:	addeq	r4, r4, r6
   3bff0:	mvnne	r4, #-2147483648	; 0x80000000
   3bff4:	lsr	r3, r3, #31
   3bff8:	cmp	fp, r4
   3bffc:	movge	r2, #0
   3c000:	andlt	r2, r3, #1
   3c004:	cmp	r2, #0
   3c008:	beq	3c0f8 <__assert_fail@plt+0x2ae0c>
   3c00c:	cmp	r7, #0
   3c010:	blt	3c1e0 <__assert_fail@plt+0x2aef4>
   3c014:	bne	3c1d8 <__assert_fail@plt+0x2aeec>
   3c018:	mov	r5, #64	; 0x40
   3c01c:	mov	r1, r7
   3c020:	mov	r0, r5
   3c024:	str	r3, [sp, #4]
   3c028:	bl	3db28 <__assert_fail@plt+0x2c83c>
   3c02c:	mov	r1, r7
   3c030:	mov	r4, r0
   3c034:	mov	r0, r5
   3c038:	bl	3dd48 <__assert_fail@plt+0x2ca5c>
   3c03c:	ldr	r3, [sp, #4]
   3c040:	sub	r5, r5, r1
   3c044:	cmp	r9, #0
   3c048:	sub	r2, r4, r6
   3c04c:	streq	r9, [r8]
   3c050:	cmp	r2, sl
   3c054:	bge	3c0d8 <__assert_fail@plt+0x2adec>
   3c058:	cmp	sl, #0
   3c05c:	blt	3c178 <__assert_fail@plt+0x2ae8c>
   3c060:	cmp	r6, #0
   3c064:	blt	3c084 <__assert_fail@plt+0x2ad98>
   3c068:	mvn	r2, #-2147483648	; 0x80000000
   3c06c:	sub	r2, r2, sl
   3c070:	cmp	r6, r2
   3c074:	movle	r2, #0
   3c078:	movgt	r2, #1
   3c07c:	cmp	r2, #0
   3c080:	bne	3c174 <__assert_fail@plt+0x2ae88>
   3c084:	add	r6, r6, sl
   3c088:	cmp	fp, r6
   3c08c:	movge	r3, #0
   3c090:	andlt	r3, r3, #1
   3c094:	cmp	r3, #0
   3c098:	mov	r4, r6
   3c09c:	bne	3c174 <__assert_fail@plt+0x2ae88>
   3c0a0:	cmp	r7, #0
   3c0a4:	blt	3c18c <__assert_fail@plt+0x2aea0>
   3c0a8:	beq	3c0d4 <__assert_fail@plt+0x2ade8>
   3c0ac:	cmp	r6, #0
   3c0b0:	blt	3c230 <__assert_fail@plt+0x2af44>
   3c0b4:	mov	r1, r7
   3c0b8:	mvn	r0, #-2147483648	; 0x80000000
   3c0bc:	bl	3db28 <__assert_fail@plt+0x2c83c>
   3c0c0:	cmp	r6, r0
   3c0c4:	movle	r0, #0
   3c0c8:	movgt	r0, #1
   3c0cc:	cmp	r0, #0
   3c0d0:	bne	3c174 <__assert_fail@plt+0x2ae88>
   3c0d4:	mul	r5, r6, r7
   3c0d8:	mov	r1, r5
   3c0dc:	mov	r0, r9
   3c0e0:	bl	3d4a8 <__assert_fail@plt+0x2c1bc>
   3c0e4:	cmp	r0, #0
   3c0e8:	beq	3c15c <__assert_fail@plt+0x2ae70>
   3c0ec:	str	r4, [r8]
   3c0f0:	add	sp, sp, #12
   3c0f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3c0f8:	cmp	r7, #0
   3c0fc:	blt	3c1b8 <__assert_fail@plt+0x2aecc>
   3c100:	beq	3c018 <__assert_fail@plt+0x2ad2c>
   3c104:	cmp	r4, #0
   3c108:	blt	3c1e8 <__assert_fail@plt+0x2aefc>
   3c10c:	mov	r1, r7
   3c110:	mvn	r0, #-2147483648	; 0x80000000
   3c114:	str	r3, [sp, #4]
   3c118:	bl	3db28 <__assert_fail@plt+0x2c83c>
   3c11c:	ldr	r3, [sp, #4]
   3c120:	cmp	r0, r4
   3c124:	movge	r0, #0
   3c128:	movlt	r0, #1
   3c12c:	cmp	r0, #0
   3c130:	mvnne	r5, #-2147483648	; 0x80000000
   3c134:	bne	3c01c <__assert_fail@plt+0x2ad30>
   3c138:	mul	r5, r7, r4
   3c13c:	cmp	r5, #63	; 0x3f
   3c140:	bgt	3c044 <__assert_fail@plt+0x2ad58>
   3c144:	b	3c018 <__assert_fail@plt+0x2ad2c>
   3c148:	rsb	r1, r4, #-2147483648	; 0x80000000
   3c14c:	cmp	r6, r1
   3c150:	movge	r1, #0
   3c154:	movlt	r1, #1
   3c158:	b	3bfe4 <__assert_fail@plt+0x2acf8>
   3c15c:	adds	r5, r5, #0
   3c160:	movne	r5, #1
   3c164:	cmp	r9, #0
   3c168:	orreq	r5, r5, #1
   3c16c:	cmp	r5, #0
   3c170:	beq	3c0ec <__assert_fail@plt+0x2ae00>
   3c174:	bl	3c3ac <__assert_fail@plt+0x2b0c0>
   3c178:	rsb	r2, sl, #-2147483648	; 0x80000000
   3c17c:	cmp	r6, r2
   3c180:	movge	r2, #0
   3c184:	movlt	r2, #1
   3c188:	b	3c07c <__assert_fail@plt+0x2ad90>
   3c18c:	cmp	r6, #0
   3c190:	blt	3c214 <__assert_fail@plt+0x2af28>
   3c194:	cmn	r7, #1
   3c198:	beq	3c0d4 <__assert_fail@plt+0x2ade8>
   3c19c:	mov	r1, r7
   3c1a0:	mov	r0, #-2147483648	; 0x80000000
   3c1a4:	bl	3db28 <__assert_fail@plt+0x2c83c>
   3c1a8:	cmp	r6, r0
   3c1ac:	movle	r0, #0
   3c1b0:	movgt	r0, #1
   3c1b4:	b	3c0cc <__assert_fail@plt+0x2ade0>
   3c1b8:	cmp	r4, #0
   3c1bc:	blt	3c254 <__assert_fail@plt+0x2af68>
   3c1c0:	cmn	r7, #1
   3c1c4:	beq	3c138 <__assert_fail@plt+0x2ae4c>
   3c1c8:	str	r3, [sp, #4]
   3c1cc:	mov	r1, r7
   3c1d0:	mov	r0, #-2147483648	; 0x80000000
   3c1d4:	b	3c118 <__assert_fail@plt+0x2ae2c>
   3c1d8:	mov	r4, fp
   3c1dc:	b	3c10c <__assert_fail@plt+0x2ae20>
   3c1e0:	mov	r4, fp
   3c1e4:	b	3c1c0 <__assert_fail@plt+0x2aed4>
   3c1e8:	cmn	r4, #1
   3c1ec:	beq	3c138 <__assert_fail@plt+0x2ae4c>
   3c1f0:	mov	r1, r4
   3c1f4:	mov	r0, #-2147483648	; 0x80000000
   3c1f8:	str	r3, [sp, #4]
   3c1fc:	bl	3db28 <__assert_fail@plt+0x2c83c>
   3c200:	ldr	r3, [sp, #4]
   3c204:	cmp	r7, r0
   3c208:	movle	r0, #0
   3c20c:	movgt	r0, #1
   3c210:	b	3c12c <__assert_fail@plt+0x2ae40>
   3c214:	mov	r1, r7
   3c218:	mvn	r0, #-2147483648	; 0x80000000
   3c21c:	bl	3db28 <__assert_fail@plt+0x2c83c>
   3c220:	cmp	r6, r0
   3c224:	movge	r0, #0
   3c228:	movlt	r0, #1
   3c22c:	b	3c0cc <__assert_fail@plt+0x2ade0>
   3c230:	cmn	r6, #1
   3c234:	beq	3c0d4 <__assert_fail@plt+0x2ade8>
   3c238:	mov	r1, r6
   3c23c:	mov	r0, #-2147483648	; 0x80000000
   3c240:	bl	3db28 <__assert_fail@plt+0x2c83c>
   3c244:	cmp	r7, r0
   3c248:	movle	r0, #0
   3c24c:	movgt	r0, #1
   3c250:	b	3c0cc <__assert_fail@plt+0x2ade0>
   3c254:	mov	r1, r7
   3c258:	mvn	r0, #-2147483648	; 0x80000000
   3c25c:	str	r3, [sp, #4]
   3c260:	bl	3db28 <__assert_fail@plt+0x2c83c>
   3c264:	ldr	r3, [sp, #4]
   3c268:	cmp	r0, r4
   3c26c:	movle	r0, #0
   3c270:	movgt	r0, #1
   3c274:	b	3c12c <__assert_fail@plt+0x2ae40>
   3c278:	push	{r4, lr}
   3c27c:	mov	r1, #1
   3c280:	bl	3d434 <__assert_fail@plt+0x2c148>
   3c284:	cmp	r0, #0
   3c288:	popne	{r4, pc}
   3c28c:	bl	3c3ac <__assert_fail@plt+0x2b0c0>
   3c290:	push	{r4, lr}
   3c294:	mov	r1, #1
   3c298:	bl	3d434 <__assert_fail@plt+0x2c148>
   3c29c:	cmp	r0, #0
   3c2a0:	popne	{r4, pc}
   3c2a4:	bl	3c3ac <__assert_fail@plt+0x2b0c0>
   3c2a8:	push	{r4, lr}
   3c2ac:	bl	3d434 <__assert_fail@plt+0x2c148>
   3c2b0:	cmp	r0, #0
   3c2b4:	popne	{r4, pc}
   3c2b8:	bl	3c3ac <__assert_fail@plt+0x2b0c0>
   3c2bc:	push	{r4, lr}
   3c2c0:	bl	3d434 <__assert_fail@plt+0x2c148>
   3c2c4:	cmp	r0, #0
   3c2c8:	popne	{r4, pc}
   3c2cc:	bl	3c3ac <__assert_fail@plt+0x2b0c0>
   3c2d0:	push	{r4, r5, r6, lr}
   3c2d4:	mov	r6, r0
   3c2d8:	mov	r0, r1
   3c2dc:	mov	r4, r1
   3c2e0:	bl	3d47c <__assert_fail@plt+0x2c190>
   3c2e4:	subs	r5, r0, #0
   3c2e8:	beq	3c300 <__assert_fail@plt+0x2b014>
   3c2ec:	mov	r2, r4
   3c2f0:	mov	r1, r6
   3c2f4:	bl	11058 <memcpy@plt>
   3c2f8:	mov	r0, r5
   3c2fc:	pop	{r4, r5, r6, pc}
   3c300:	bl	3c3ac <__assert_fail@plt+0x2b0c0>
   3c304:	push	{r4, r5, r6, lr}
   3c308:	mov	r6, r0
   3c30c:	mov	r0, r1
   3c310:	mov	r4, r1
   3c314:	bl	3d47c <__assert_fail@plt+0x2c190>
   3c318:	subs	r5, r0, #0
   3c31c:	beq	3c334 <__assert_fail@plt+0x2b048>
   3c320:	mov	r2, r4
   3c324:	mov	r1, r6
   3c328:	bl	11058 <memcpy@plt>
   3c32c:	mov	r0, r5
   3c330:	pop	{r4, r5, r6, pc}
   3c334:	bl	3c3ac <__assert_fail@plt+0x2b0c0>
   3c338:	push	{r4, r5, r6, lr}
   3c33c:	mov	r6, r0
   3c340:	add	r0, r1, #1
   3c344:	mov	r4, r1
   3c348:	bl	3d47c <__assert_fail@plt+0x2c190>
   3c34c:	subs	r5, r0, #0
   3c350:	beq	3c370 <__assert_fail@plt+0x2b084>
   3c354:	mov	r3, #0
   3c358:	mov	r1, r6
   3c35c:	strb	r3, [r5, r4]
   3c360:	mov	r2, r4
   3c364:	bl	11058 <memcpy@plt>
   3c368:	mov	r0, r5
   3c36c:	pop	{r4, r5, r6, pc}
   3c370:	bl	3c3ac <__assert_fail@plt+0x2b0c0>
   3c374:	push	{r4, r5, r6, lr}
   3c378:	mov	r6, r0
   3c37c:	bl	111a8 <strlen@plt>
   3c380:	add	r4, r0, #1
   3c384:	mov	r0, r4
   3c388:	bl	3d47c <__assert_fail@plt+0x2c190>
   3c38c:	subs	r5, r0, #0
   3c390:	beq	3c3a8 <__assert_fail@plt+0x2b0bc>
   3c394:	mov	r2, r4
   3c398:	mov	r1, r6
   3c39c:	bl	11058 <memcpy@plt>
   3c3a0:	mov	r0, r5
   3c3a4:	pop	{r4, r5, r6, pc}
   3c3a8:	bl	3c3ac <__assert_fail@plt+0x2b0c0>
   3c3ac:	ldr	r3, [pc, #44]	; 3c3e0 <__assert_fail@plt+0x2b0f4>
   3c3b0:	push	{r4, lr}
   3c3b4:	mov	r2, #5
   3c3b8:	ldr	r1, [pc, #36]	; 3c3e4 <__assert_fail@plt+0x2b0f8>
   3c3bc:	mov	r0, #0
   3c3c0:	ldr	r4, [r3]
   3c3c4:	bl	110a0 <dcgettext@plt>
   3c3c8:	ldr	r2, [pc, #24]	; 3c3e8 <__assert_fail@plt+0x2b0fc>
   3c3cc:	mov	r1, #0
   3c3d0:	mov	r3, r0
   3c3d4:	mov	r0, r4
   3c3d8:	bl	11124 <error@plt>
   3c3dc:	bl	112c8 <abort@plt>
   3c3e0:	andeq	r2, r5, r0, asr #2
   3c3e4:	andeq	r1, r4, r4, lsr #24
   3c3e8:	andeq	lr, r3, ip, lsl pc
   3c3ec:	push	{r4, r5, r6, r7, lr}
   3c3f0:	sub	sp, sp, #20
   3c3f4:	mov	r6, r2
   3c3f8:	ldr	ip, [sp, #48]	; 0x30
   3c3fc:	mov	r2, r1
   3c400:	mov	r7, r3
   3c404:	str	ip, [sp]
   3c408:	add	r3, sp, #8
   3c40c:	mov	r1, #0
   3c410:	mov	r5, r0
   3c414:	ldr	r4, [sp, #56]	; 0x38
   3c418:	bl	3c668 <__assert_fail@plt+0x2b37c>
   3c41c:	cmp	r0, #0
   3c420:	bne	3c4a4 <__assert_fail@plt+0x2b1b8>
   3c424:	ldrd	r0, [sp, #8]
   3c428:	cmp	r1, r7
   3c42c:	cmpeq	r0, r6
   3c430:	ldrd	r6, [sp, #40]	; 0x28
   3c434:	movcc	r3, #1
   3c438:	movcs	r3, #0
   3c43c:	cmp	r1, r7
   3c440:	cmpeq	r0, r6
   3c444:	orrhi	r3, r3, #1
   3c448:	cmp	r3, #0
   3c44c:	beq	3c49c <__assert_fail@plt+0x2b1b0>
   3c450:	mov	r3, #0
   3c454:	mvn	r2, #-1073741824	; 0xc0000000
   3c458:	cmp	r1, r3
   3c45c:	cmpeq	r0, r2
   3c460:	bhi	3c4d0 <__assert_fail@plt+0x2b1e4>
   3c464:	bl	111c0 <__errno_location@plt>
   3c468:	mov	r3, #34	; 0x22
   3c46c:	mov	r6, r3
   3c470:	str	r3, [r0]
   3c474:	cmp	r4, #0
   3c478:	moveq	r4, #1
   3c47c:	mov	r0, r5
   3c480:	bl	3b19c <__assert_fail@plt+0x29eb0>
   3c484:	mov	r1, r6
   3c488:	ldr	r3, [sp, #52]	; 0x34
   3c48c:	ldr	r2, [pc, #144]	; 3c524 <__assert_fail@plt+0x2b238>
   3c490:	str	r0, [sp]
   3c494:	mov	r0, r4
   3c498:	bl	11124 <error@plt>
   3c49c:	add	sp, sp, #20
   3c4a0:	pop	{r4, r5, r6, r7, pc}
   3c4a4:	cmp	r0, #1
   3c4a8:	beq	3c4e4 <__assert_fail@plt+0x2b1f8>
   3c4ac:	cmp	r0, #3
   3c4b0:	beq	3c514 <__assert_fail@plt+0x2b228>
   3c4b4:	cmp	r4, #0
   3c4b8:	beq	3c504 <__assert_fail@plt+0x2b218>
   3c4bc:	bl	111c0 <__errno_location@plt>
   3c4c0:	ldr	r6, [r0]
   3c4c4:	cmp	r6, #22
   3c4c8:	moveq	r6, #0
   3c4cc:	b	3c47c <__assert_fail@plt+0x2b190>
   3c4d0:	bl	111c0 <__errno_location@plt>
   3c4d4:	mov	r3, #75	; 0x4b
   3c4d8:	mov	r6, r3
   3c4dc:	str	r3, [r0]
   3c4e0:	b	3c474 <__assert_fail@plt+0x2b188>
   3c4e4:	bl	111c0 <__errno_location@plt>
   3c4e8:	mov	r3, #75	; 0x4b
   3c4ec:	mov	r6, r3
   3c4f0:	str	r3, [r0]
   3c4f4:	cmp	r4, #0
   3c4f8:	moveq	r4, #1
   3c4fc:	bne	3c4c4 <__assert_fail@plt+0x2b1d8>
   3c500:	b	3c47c <__assert_fail@plt+0x2b190>
   3c504:	bl	111c0 <__errno_location@plt>
   3c508:	mov	r4, #1
   3c50c:	ldr	r6, [r0]
   3c510:	b	3c4c4 <__assert_fail@plt+0x2b1d8>
   3c514:	bl	111c0 <__errno_location@plt>
   3c518:	mov	r6, #0
   3c51c:	str	r6, [r0]
   3c520:	b	3c4f4 <__assert_fail@plt+0x2b208>
   3c524:	andeq	r1, r4, r4, ror #11
   3c528:	push	{r4, r5, r6, r7, lr}
   3c52c:	sub	sp, sp, #20
   3c530:	mov	r6, r2
   3c534:	ldr	r1, [sp, #48]	; 0x30
   3c538:	mov	r7, r3
   3c53c:	str	r1, [sp]
   3c540:	add	r3, sp, #8
   3c544:	mov	r2, #10
   3c548:	mov	r1, #0
   3c54c:	mov	r5, r0
   3c550:	ldr	r4, [sp, #56]	; 0x38
   3c554:	bl	3c668 <__assert_fail@plt+0x2b37c>
   3c558:	cmp	r0, #0
   3c55c:	bne	3c5e0 <__assert_fail@plt+0x2b2f4>
   3c560:	ldrd	r0, [sp, #8]
   3c564:	cmp	r7, r1
   3c568:	cmpeq	r6, r0
   3c56c:	ldrd	r6, [sp, #40]	; 0x28
   3c570:	movhi	r3, #1
   3c574:	movls	r3, #0
   3c578:	cmp	r7, r1
   3c57c:	cmpeq	r6, r0
   3c580:	orrcc	r3, r3, #1
   3c584:	cmp	r3, #0
   3c588:	beq	3c5d8 <__assert_fail@plt+0x2b2ec>
   3c58c:	mov	r3, #0
   3c590:	mvn	r2, #-1073741824	; 0xc0000000
   3c594:	cmp	r1, r3
   3c598:	cmpeq	r0, r2
   3c59c:	bhi	3c60c <__assert_fail@plt+0x2b320>
   3c5a0:	bl	111c0 <__errno_location@plt>
   3c5a4:	mov	r3, #34	; 0x22
   3c5a8:	mov	r6, r3
   3c5ac:	str	r3, [r0]
   3c5b0:	cmp	r4, #0
   3c5b4:	moveq	r4, #1
   3c5b8:	mov	r0, r5
   3c5bc:	bl	3b19c <__assert_fail@plt+0x29eb0>
   3c5c0:	mov	r1, r6
   3c5c4:	ldr	r3, [sp, #52]	; 0x34
   3c5c8:	ldr	r2, [pc, #144]	; 3c660 <__assert_fail@plt+0x2b374>
   3c5cc:	str	r0, [sp]
   3c5d0:	mov	r0, r4
   3c5d4:	bl	11124 <error@plt>
   3c5d8:	add	sp, sp, #20
   3c5dc:	pop	{r4, r5, r6, r7, pc}
   3c5e0:	cmp	r0, #1
   3c5e4:	beq	3c620 <__assert_fail@plt+0x2b334>
   3c5e8:	cmp	r0, #3
   3c5ec:	beq	3c650 <__assert_fail@plt+0x2b364>
   3c5f0:	cmp	r4, #0
   3c5f4:	beq	3c640 <__assert_fail@plt+0x2b354>
   3c5f8:	bl	111c0 <__errno_location@plt>
   3c5fc:	ldr	r6, [r0]
   3c600:	cmp	r6, #22
   3c604:	moveq	r6, #0
   3c608:	b	3c5b8 <__assert_fail@plt+0x2b2cc>
   3c60c:	bl	111c0 <__errno_location@plt>
   3c610:	mov	r3, #75	; 0x4b
   3c614:	mov	r6, r3
   3c618:	str	r3, [r0]
   3c61c:	b	3c5b0 <__assert_fail@plt+0x2b2c4>
   3c620:	bl	111c0 <__errno_location@plt>
   3c624:	mov	r3, #75	; 0x4b
   3c628:	mov	r6, r3
   3c62c:	str	r3, [r0]
   3c630:	cmp	r4, #0
   3c634:	moveq	r4, #1
   3c638:	bne	3c600 <__assert_fail@plt+0x2b314>
   3c63c:	b	3c5b8 <__assert_fail@plt+0x2b2cc>
   3c640:	bl	111c0 <__errno_location@plt>
   3c644:	mov	r4, #1
   3c648:	ldr	r6, [r0]
   3c64c:	b	3c600 <__assert_fail@plt+0x2b314>
   3c650:	bl	111c0 <__errno_location@plt>
   3c654:	mov	r6, #0
   3c658:	str	r6, [r0]
   3c65c:	b	3c630 <__assert_fail@plt+0x2b344>
   3c660:	andeq	r1, r4, r4, ror #11
   3c664:	andeq	r0, r0, r0
   3c668:	cmp	r2, #36	; 0x24
   3c66c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3c670:	sub	sp, sp, #52	; 0x34
   3c674:	bhi	3d404 <__assert_fail@plt+0x2c118>
   3c678:	cmp	r1, #0
   3c67c:	mov	r6, r2
   3c680:	mov	sl, r0
   3c684:	mov	r5, r1
   3c688:	mov	r8, r3
   3c68c:	addeq	r5, sp, #44	; 0x2c
   3c690:	bl	111c0 <__errno_location@plt>
   3c694:	mov	r3, #0
   3c698:	str	r3, [r0]
   3c69c:	mov	fp, r0
   3c6a0:	bl	11184 <__ctype_b_loc@plt>
   3c6a4:	ldrb	r3, [sl]
   3c6a8:	mov	r2, sl
   3c6ac:	ldr	r0, [r0]
   3c6b0:	b	3c6b8 <__assert_fail@plt+0x2b3cc>
   3c6b4:	ldrb	r3, [r2, #1]!
   3c6b8:	lsl	r1, r3, #1
   3c6bc:	ldrh	r4, [r0, r1]
   3c6c0:	ands	r4, r4, #8192	; 0x2000
   3c6c4:	bne	3c6b4 <__assert_fail@plt+0x2b3c8>
   3c6c8:	cmp	r3, #45	; 0x2d
   3c6cc:	bne	3c6e0 <__assert_fail@plt+0x2b3f4>
   3c6d0:	mov	r4, #4
   3c6d4:	mov	r0, r4
   3c6d8:	add	sp, sp, #52	; 0x34
   3c6dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3c6e0:	mov	r2, r6
   3c6e4:	mov	r3, r4
   3c6e8:	mov	r1, r5
   3c6ec:	mov	r0, sl
   3c6f0:	bl	11064 <__strtoull_internal@plt>
   3c6f4:	ldr	r9, [r5]
   3c6f8:	cmp	sl, r9
   3c6fc:	mov	r6, r0
   3c700:	mov	r7, r1
   3c704:	beq	3c74c <__assert_fail@plt+0x2b460>
   3c708:	ldr	r4, [fp]
   3c70c:	cmp	r4, #0
   3c710:	bne	3c73c <__assert_fail@plt+0x2b450>
   3c714:	ldr	r3, [sp, #88]	; 0x58
   3c718:	cmp	r3, #0
   3c71c:	beq	3c72c <__assert_fail@plt+0x2b440>
   3c720:	ldrb	sl, [r9]
   3c724:	cmp	sl, #0
   3c728:	bne	3c780 <__assert_fail@plt+0x2b494>
   3c72c:	mov	r0, r4
   3c730:	strd	r6, [r8]
   3c734:	add	sp, sp, #52	; 0x34
   3c738:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3c73c:	cmp	r4, #34	; 0x22
   3c740:	bne	3c6d0 <__assert_fail@plt+0x2b3e4>
   3c744:	mov	r4, #1
   3c748:	b	3c714 <__assert_fail@plt+0x2b428>
   3c74c:	ldr	r3, [sp, #88]	; 0x58
   3c750:	cmp	r3, #0
   3c754:	beq	3c6d0 <__assert_fail@plt+0x2b3e4>
   3c758:	ldrb	sl, [r9]
   3c75c:	cmp	sl, #0
   3c760:	beq	3c6d0 <__assert_fail@plt+0x2b3e4>
   3c764:	mov	r1, sl
   3c768:	mov	r0, r3
   3c76c:	bl	111b4 <strchr@plt>
   3c770:	cmp	r0, #0
   3c774:	movne	r6, #1
   3c778:	movne	r7, #0
   3c77c:	beq	3c6d0 <__assert_fail@plt+0x2b3e4>
   3c780:	mov	r1, sl
   3c784:	ldr	r0, [sp, #88]	; 0x58
   3c788:	bl	111b4 <strchr@plt>
   3c78c:	cmp	r0, #0
   3c790:	beq	3d2f0 <__assert_fail@plt+0x2c004>
   3c794:	sub	r3, sl, #69	; 0x45
   3c798:	cmp	r3, #47	; 0x2f
   3c79c:	ldrls	pc, [pc, r3, lsl #2]
   3c7a0:	b	3c894 <__assert_fail@plt+0x2b5a8>
   3c7a4:	andeq	ip, r3, r4, ror #16
   3c7a8:	muleq	r3, r4, r8
   3c7ac:	andeq	ip, r3, r4, ror #16
   3c7b0:	muleq	r3, r4, r8
   3c7b4:	muleq	r3, r4, r8
   3c7b8:	muleq	r3, r4, r8
   3c7bc:	andeq	ip, r3, r4, ror #16
   3c7c0:	muleq	r3, r4, r8
   3c7c4:	andeq	ip, r3, r4, ror #16
   3c7c8:	muleq	r3, r4, r8
   3c7cc:	muleq	r3, r4, r8
   3c7d0:	andeq	ip, r3, r4, ror #16
   3c7d4:	muleq	r3, r4, r8
   3c7d8:	muleq	r3, r4, r8
   3c7dc:	muleq	r3, r4, r8
   3c7e0:	andeq	ip, r3, r4, ror #16
   3c7e4:	muleq	r3, r4, r8
   3c7e8:	muleq	r3, r4, r8
   3c7ec:	muleq	r3, r4, r8
   3c7f0:	muleq	r3, r4, r8
   3c7f4:	andeq	ip, r3, r4, ror #16
   3c7f8:	andeq	ip, r3, r4, ror #16
   3c7fc:	muleq	r3, r4, r8
   3c800:	muleq	r3, r4, r8
   3c804:	muleq	r3, r4, r8
   3c808:	muleq	r3, r4, r8
   3c80c:	muleq	r3, r4, r8
   3c810:	muleq	r3, r4, r8
   3c814:	muleq	r3, r4, r8
   3c818:	muleq	r3, r4, r8
   3c81c:	muleq	r3, r4, r8
   3c820:	muleq	r3, r4, r8
   3c824:	muleq	r3, r4, r8
   3c828:	muleq	r3, r4, r8
   3c82c:	andeq	ip, r3, r4, ror #16
   3c830:	muleq	r3, r4, r8
   3c834:	muleq	r3, r4, r8
   3c838:	muleq	r3, r4, r8
   3c83c:	andeq	ip, r3, r4, ror #16
   3c840:	muleq	r3, r4, r8
   3c844:	andeq	ip, r3, r4, ror #16
   3c848:	muleq	r3, r4, r8
   3c84c:	muleq	r3, r4, r8
   3c850:	muleq	r3, r4, r8
   3c854:	muleq	r3, r4, r8
   3c858:	muleq	r3, r4, r8
   3c85c:	muleq	r3, r4, r8
   3c860:	andeq	ip, r3, r4, ror #16
   3c864:	mov	r1, #48	; 0x30
   3c868:	ldr	r0, [sp, #88]	; 0x58
   3c86c:	bl	111b4 <strchr@plt>
   3c870:	cmp	r0, #0
   3c874:	beq	3d384 <__assert_fail@plt+0x2c098>
   3c878:	ldrb	r3, [r9, #1]
   3c87c:	cmp	r3, #68	; 0x44
   3c880:	beq	3d364 <__assert_fail@plt+0x2c078>
   3c884:	cmp	r3, #105	; 0x69
   3c888:	beq	3d334 <__assert_fail@plt+0x2c048>
   3c88c:	cmp	r3, #66	; 0x42
   3c890:	beq	3d364 <__assert_fail@plt+0x2c078>
   3c894:	ldr	r3, [pc, #2948]	; 3d420 <__assert_fail@plt+0x2c134>
   3c898:	mvn	r2, #0
   3c89c:	mov	r1, #1024	; 0x400
   3c8a0:	mov	lr, #0
   3c8a4:	strd	r2, [sp]
   3c8a8:	mov	r3, #1
   3c8ac:	str	r3, [sp, #12]
   3c8b0:	sub	sl, sl, #66	; 0x42
   3c8b4:	cmp	sl, #53	; 0x35
   3c8b8:	ldrls	pc, [pc, sl, lsl #2]
   3c8bc:	b	3d2f0 <__assert_fail@plt+0x2c004>
   3c8c0:	andeq	sp, r3, r0, asr #5
   3c8c4:	strdeq	sp, [r3], -r0
   3c8c8:	strdeq	sp, [r3], -r0
   3c8cc:	andeq	sp, r3, ip, lsr r1
   3c8d0:	strdeq	sp, [r3], -r0
   3c8d4:	andeq	sp, r3, r8, ror r0
   3c8d8:	strdeq	sp, [r3], -r0
   3c8dc:	strdeq	sp, [r3], -r0
   3c8e0:	strdeq	sp, [r3], -r0
   3c8e4:	strdeq	sp, [r3], -ip
   3c8e8:	strdeq	sp, [r3], -r0
   3c8ec:	muleq	r3, r8, r9
   3c8f0:	strdeq	sp, [r3], -r0
   3c8f4:	strdeq	sp, [r3], -r0
   3c8f8:	andeq	ip, r3, r4, lsr #20
   3c8fc:	strdeq	sp, [r3], -r0
   3c900:	strdeq	sp, [r3], -r0
   3c904:	strdeq	sp, [r3], -r0
   3c908:	andeq	ip, r3, r4, lsr #27
   3c90c:	strdeq	sp, [r3], -r0
   3c910:	strdeq	sp, [r3], -r0
   3c914:	strdeq	sp, [r3], -r0
   3c918:	strdeq	sp, [r3], -r0
   3c91c:	andeq	ip, r3, ip, ror fp
   3c920:	ldrdeq	ip, [r3], -r8
   3c924:	strdeq	sp, [r3], -r0
   3c928:	strdeq	sp, [r3], -r0
   3c92c:	strdeq	sp, [r3], -r0
   3c930:	strdeq	sp, [r3], -r0
   3c934:	strdeq	sp, [r3], -r0
   3c938:	strdeq	sp, [r3], -r0
   3c93c:	strdeq	sp, [r3], -r0
   3c940:	andeq	ip, r3, r8, lsr #29
   3c944:	andeq	ip, r3, r0, lsr #29
   3c948:	strdeq	sp, [r3], -r0
   3c94c:	strdeq	sp, [r3], -r0
   3c950:	strdeq	sp, [r3], -r0
   3c954:	andeq	sp, r3, r8, ror r0
   3c958:	strdeq	sp, [r3], -r0
   3c95c:	strdeq	sp, [r3], -r0
   3c960:	strdeq	sp, [r3], -r0
   3c964:	strdeq	sp, [r3], -ip
   3c968:	strdeq	sp, [r3], -r0
   3c96c:	muleq	r3, r8, r9
   3c970:	strdeq	sp, [r3], -r0
   3c974:	strdeq	sp, [r3], -r0
   3c978:	strdeq	sp, [r3], -r0
   3c97c:	strdeq	sp, [r3], -r0
   3c980:	strdeq	sp, [r3], -r0
   3c984:	strdeq	sp, [r3], -r0
   3c988:	andeq	ip, r3, r4, lsr #27
   3c98c:	strdeq	sp, [r3], -r0
   3c990:	strdeq	sp, [r3], -r0
   3c994:	andeq	ip, r3, r4, lsl #29
   3c998:	mul	r0, r6, lr
   3c99c:	ldrd	sl, [sp]
   3c9a0:	umull	r2, r3, r6, r1
   3c9a4:	mla	r0, r1, r7, r0
   3c9a8:	cmp	r7, fp
   3c9ac:	cmpeq	r6, sl
   3c9b0:	add	r3, r0, r3
   3c9b4:	mvnhi	r3, #0
   3c9b8:	mvnhi	r2, #0
   3c9bc:	mul	r6, r1, r3
   3c9c0:	umull	r0, r1, r1, r2
   3c9c4:	mla	lr, lr, r2, r6
   3c9c8:	ldrd	r6, [sp]
   3c9cc:	movhi	ip, #1
   3c9d0:	movls	ip, #0
   3c9d4:	cmp	r7, r3
   3c9d8:	cmpeq	r6, r2
   3c9dc:	mvncc	r0, #0
   3c9e0:	add	r1, lr, r1
   3c9e4:	mov	sl, r6
   3c9e8:	movcc	r1, r0
   3c9ec:	mov	fp, r7
   3c9f0:	cmp	fp, r3
   3c9f4:	cmpeq	sl, r2
   3c9f8:	mov	r6, r0
   3c9fc:	mov	r7, r1
   3ca00:	orrcc	ip, ip, #1
   3ca04:	ldr	r2, [sp, #12]
   3ca08:	orr	r4, r4, ip
   3ca0c:	add	r3, r9, r2
   3ca10:	str	r3, [r5]
   3ca14:	ldrb	r3, [r9, r2]
   3ca18:	cmp	r3, #0
   3ca1c:	orrne	r4, r4, #2
   3ca20:	b	3c72c <__assert_fail@plt+0x2b440>
   3ca24:	ldrd	sl, [sp]
   3ca28:	umull	r2, r3, r6, r1
   3ca2c:	mul	r0, r6, lr
   3ca30:	cmp	r7, fp
   3ca34:	cmpeq	r6, sl
   3ca38:	mvnhi	r2, #0
   3ca3c:	mla	r0, r1, r7, r0
   3ca40:	umull	sl, fp, r2, r1
   3ca44:	add	r3, r0, r3
   3ca48:	mul	r0, lr, r2
   3ca4c:	mvnhi	r3, #0
   3ca50:	strd	sl, [sp, #16]
   3ca54:	ldrd	sl, [sp]
   3ca58:	mla	r0, r1, r3, r0
   3ca5c:	ldr	ip, [sp, #20]
   3ca60:	cmp	r3, fp
   3ca64:	add	r0, r0, ip
   3ca68:	cmpeq	r2, sl
   3ca6c:	str	r0, [sp, #20]
   3ca70:	bls	3ca88 <__assert_fail@plt+0x2b79c>
   3ca74:	mvn	sl, #0
   3ca78:	mvn	fp, #0
   3ca7c:	strd	sl, [sp, #16]
   3ca80:	ldr	r0, [sp, #20]
   3ca84:	ldrd	sl, [sp]
   3ca88:	cmp	r7, fp
   3ca8c:	cmpeq	r6, sl
   3ca90:	mul	r0, r1, r0
   3ca94:	ldrd	r6, [sp, #16]
   3ca98:	mla	ip, lr, r6, r0
   3ca9c:	mov	r0, r6
   3caa0:	movhi	r0, #1
   3caa4:	movls	r0, #0
   3caa8:	cmp	r3, fp
   3caac:	cmpeq	r2, sl
   3cab0:	ldrd	r2, [sp, #16]
   3cab4:	umull	r6, r7, r1, r6
   3cab8:	orrhi	r0, r0, #1
   3cabc:	cmp	fp, r3
   3cac0:	cmpeq	sl, r2
   3cac4:	add	r7, ip, r7
   3cac8:	bcc	3d3d4 <__assert_fail@plt+0x2c0e8>
   3cacc:	mov	sl, r6
   3cad0:	mov	fp, r7
   3cad4:	strd	r6, [sp, #24]
   3cad8:	mul	r3, r1, fp
   3cadc:	umull	r6, r7, r1, sl
   3cae0:	mla	ip, lr, sl, r3
   3cae4:	ldrd	sl, [sp]
   3cae8:	ldrd	r2, [sp, #16]
   3caec:	add	r7, ip, r7
   3caf0:	cmp	fp, r3
   3caf4:	cmpeq	sl, r2
   3caf8:	mov	r3, fp
   3cafc:	mov	r2, sl
   3cb00:	ldrd	sl, [sp, #24]
   3cb04:	orrcc	r0, r0, #1
   3cb08:	str	r0, [sp, #16]
   3cb0c:	cmp	r3, fp
   3cb10:	cmpeq	r2, sl
   3cb14:	bcs	3d06c <__assert_fail@plt+0x2bd80>
   3cb18:	mvn	r2, #0
   3cb1c:	mvn	r3, #0
   3cb20:	mul	ip, lr, r2
   3cb24:	ldrd	sl, [sp]
   3cb28:	mla	ip, r1, r3, ip
   3cb2c:	umull	r6, r7, r2, r1
   3cb30:	ldrd	r0, [sp, #24]
   3cb34:	add	r7, ip, r7
   3cb38:	cmp	fp, r1
   3cb3c:	ldr	r1, [sp, #16]
   3cb40:	cmpeq	sl, r0
   3cb44:	orrcc	r1, r1, #1
   3cb48:	cmp	r3, fp
   3cb4c:	cmpeq	r2, sl
   3cb50:	mvnhi	r0, #0
   3cb54:	movls	ip, r7
   3cb58:	movhi	ip, r0
   3cb5c:	movls	r0, r6
   3cb60:	cmp	r3, fp
   3cb64:	cmpeq	r2, sl
   3cb68:	mov	r7, ip
   3cb6c:	mov	r6, r0
   3cb70:	movls	ip, r1
   3cb74:	orrhi	ip, r1, #1
   3cb78:	b	3ca04 <__assert_fail@plt+0x2b718>
   3cb7c:	ldrd	sl, [sp]
   3cb80:	umull	r2, r3, r6, r1
   3cb84:	mul	r0, r6, lr
   3cb88:	cmp	r7, fp
   3cb8c:	cmpeq	r6, sl
   3cb90:	mvnhi	r2, #0
   3cb94:	mla	r0, r1, r7, r0
   3cb98:	umull	sl, fp, r2, r1
   3cb9c:	add	r3, r0, r3
   3cba0:	mul	r0, lr, r2
   3cba4:	mvnhi	r3, #0
   3cba8:	strd	sl, [sp, #16]
   3cbac:	ldrd	sl, [sp]
   3cbb0:	mla	r0, r1, r3, r0
   3cbb4:	ldr	ip, [sp, #20]
   3cbb8:	cmp	r3, fp
   3cbbc:	add	r0, r0, ip
   3cbc0:	cmpeq	r2, sl
   3cbc4:	str	r0, [sp, #20]
   3cbc8:	mvnhi	sl, #0
   3cbcc:	mvnhi	fp, #0
   3cbd0:	strdhi	sl, [sp, #16]
   3cbd4:	ldrdhi	sl, [sp]
   3cbd8:	ldr	r0, [sp, #16]
   3cbdc:	cmp	r3, fp
   3cbe0:	ldr	r3, [sp, #20]
   3cbe4:	mul	r0, lr, r0
   3cbe8:	cmpeq	r2, sl
   3cbec:	mla	r0, r1, r3, r0
   3cbf0:	ldr	r3, [sp, #16]
   3cbf4:	umull	r2, r3, r3, r1
   3cbf8:	strd	r2, [sp, #24]
   3cbfc:	movhi	r3, #1
   3cc00:	movls	r3, #0
   3cc04:	cmp	r7, fp
   3cc08:	cmpeq	r6, sl
   3cc0c:	ldrd	r6, [sp, #16]
   3cc10:	ldr	r2, [sp, #28]
   3cc14:	movls	ip, r3
   3cc18:	orrhi	ip, r3, #1
   3cc1c:	cmp	r7, fp
   3cc20:	add	r2, r0, r2
   3cc24:	cmpeq	r6, sl
   3cc28:	str	r2, [sp, #28]
   3cc2c:	mvnhi	r2, #0
   3cc30:	mvnhi	r3, #0
   3cc34:	strdhi	r2, [sp, #24]
   3cc38:	ldrd	r6, [sp, #24]
   3cc3c:	mul	r2, r1, r7
   3cc40:	umull	sl, fp, r1, r6
   3cc44:	mla	r3, lr, r6, r2
   3cc48:	ldrd	r6, [sp]
   3cc4c:	str	r3, [sp, #32]
   3cc50:	ldrd	r2, [sp, #16]
   3cc54:	cmp	r3, r7
   3cc58:	cmpeq	r2, r6
   3cc5c:	ldrd	r2, [sp, #24]
   3cc60:	orrhi	ip, ip, #1
   3cc64:	cmp	r3, r7
   3cc68:	ldr	r3, [sp, #32]
   3cc6c:	cmpeq	r2, r6
   3cc70:	add	r2, r3, fp
   3cc74:	mov	fp, r2
   3cc78:	bhi	3d3bc <__assert_fail@plt+0x2c0d0>
   3cc7c:	strd	sl, [sp, #16]
   3cc80:	mul	r2, r1, fp
   3cc84:	umull	r6, r7, r1, sl
   3cc88:	mla	r3, lr, sl, r2
   3cc8c:	ldrd	sl, [sp]
   3cc90:	str	r3, [sp, #32]
   3cc94:	ldrd	r2, [sp, #24]
   3cc98:	cmp	r3, fp
   3cc9c:	cmpeq	r2, sl
   3cca0:	ldrd	r2, [sp, #16]
   3cca4:	orrhi	ip, ip, #1
   3cca8:	cmp	fp, r3
   3ccac:	ldr	r3, [sp, #32]
   3ccb0:	cmpeq	sl, r2
   3ccb4:	add	r2, r3, r7
   3ccb8:	mov	r7, r2
   3ccbc:	mvncc	r7, #0
   3ccc0:	mvncc	r6, #0
   3ccc4:	mul	r2, r1, r7
   3ccc8:	mov	sl, r6
   3cccc:	strd	r6, [sp, #24]
   3ccd0:	mla	r0, lr, sl, r2
   3ccd4:	ldrd	r2, [sp, #16]
   3ccd8:	ldrd	sl, [sp]
   3ccdc:	umull	r6, r7, r1, r6
   3cce0:	cmp	fp, r3
   3cce4:	cmpeq	sl, r2
   3cce8:	mov	r3, fp
   3ccec:	mov	r2, sl
   3ccf0:	ldrd	sl, [sp, #24]
   3ccf4:	orrcc	ip, ip, #1
   3ccf8:	add	r7, r0, r7
   3ccfc:	cmp	r3, fp
   3cd00:	cmpeq	r2, sl
   3cd04:	mvncc	r6, #0
   3cd08:	mvncc	r7, #0
   3cd0c:	umull	sl, fp, r1, r6
   3cd10:	mul	r3, r1, r7
   3cd14:	strd	sl, [sp, #16]
   3cd18:	mla	r0, lr, r6, r3
   3cd1c:	ldrd	sl, [sp, #24]
   3cd20:	ldrd	r2, [sp]
   3cd24:	cmp	r3, fp
   3cd28:	cmpeq	r2, sl
   3cd2c:	orrcc	ip, ip, #1
   3cd30:	cmp	r3, r7
   3cd34:	ldr	r3, [sp, #20]
   3cd38:	cmpeq	r2, r6
   3cd3c:	add	r3, r0, r3
   3cd40:	str	r3, [sp, #20]
   3cd44:	mvncc	r2, #0
   3cd48:	mvncc	r3, #0
   3cd4c:	ldrdcs	r2, [sp, #16]
   3cd50:	ldrd	sl, [sp]
   3cd54:	mul	r0, r1, r3
   3cd58:	cmp	fp, r7
   3cd5c:	str	r0, [sp, #16]
   3cd60:	cmpeq	sl, r6
   3cd64:	ldr	r6, [sp, #16]
   3cd68:	umull	r0, r1, r1, r2
   3cd6c:	mla	lr, lr, r2, r6
   3cd70:	orrcc	ip, ip, #1
   3cd74:	cmp	r3, fp
   3cd78:	cmpeq	r2, sl
   3cd7c:	add	r1, lr, r1
   3cd80:	bls	3cd8c <__assert_fail@plt+0x2baa0>
   3cd84:	mvn	r0, #0
   3cd88:	mov	r1, r0
   3cd8c:	cmp	r3, fp
   3cd90:	cmpeq	r2, sl
   3cd94:	mov	r6, r0
   3cd98:	mov	r7, r1
   3cd9c:	orrhi	ip, ip, #1
   3cda0:	b	3ca04 <__assert_fail@plt+0x2b718>
   3cda4:	ldrd	sl, [sp]
   3cda8:	umull	r2, r3, r6, r1
   3cdac:	mul	r0, r6, lr
   3cdb0:	cmp	r7, fp
   3cdb4:	cmpeq	r6, sl
   3cdb8:	mvnhi	r2, #0
   3cdbc:	mla	r0, r1, r7, r0
   3cdc0:	umull	sl, fp, r1, r2
   3cdc4:	add	r3, r0, r3
   3cdc8:	mvnhi	r3, #0
   3cdcc:	strd	sl, [sp, #16]
   3cdd0:	mul	r0, r1, r3
   3cdd4:	ldrd	sl, [sp]
   3cdd8:	mla	r0, lr, r2, r0
   3cddc:	ldr	ip, [sp, #20]
   3cde0:	cmp	fp, r3
   3cde4:	add	r0, r0, ip
   3cde8:	cmpeq	sl, r2
   3cdec:	str	r0, [sp, #20]
   3cdf0:	mvncc	sl, #0
   3cdf4:	mvncc	fp, #0
   3cdf8:	strdcc	sl, [sp, #16]
   3cdfc:	ldrdcc	sl, [sp]
   3ce00:	ldr	r0, [sp, #16]
   3ce04:	cmp	fp, r3
   3ce08:	cmpeq	sl, r2
   3ce0c:	mul	r0, lr, r0
   3ce10:	ldr	r2, [sp, #20]
   3ce14:	ldr	r3, [sp, #16]
   3ce18:	movcc	ip, #1
   3ce1c:	movcs	ip, #0
   3ce20:	cmp	r7, fp
   3ce24:	cmpeq	r6, sl
   3ce28:	ldrd	r6, [sp, #16]
   3ce2c:	mla	r0, r1, r2, r0
   3ce30:	umull	r2, r3, r3, r1
   3ce34:	orrhi	ip, ip, #1
   3ce38:	cmp	r7, fp
   3ce3c:	cmpeq	r6, sl
   3ce40:	add	r3, r0, r3
   3ce44:	mvnhi	r3, #0
   3ce48:	mvnhi	r2, #0
   3ce4c:	mul	r0, r1, r3
   3ce50:	cmp	r7, fp
   3ce54:	str	r0, [sp, #24]
   3ce58:	cmpeq	r6, sl
   3ce5c:	ldr	r6, [sp, #24]
   3ce60:	umull	r0, r1, r1, r2
   3ce64:	mla	lr, lr, r2, r6
   3ce68:	orrhi	ip, ip, #1
   3ce6c:	cmp	fp, r3
   3ce70:	cmpeq	sl, r2
   3ce74:	mvncc	r0, #0
   3ce78:	add	r1, lr, r1
   3ce7c:	movcc	r1, r0
   3ce80:	b	3c9f0 <__assert_fail@plt+0x2b704>
   3ce84:	cmp	r6, #0
   3ce88:	sbcs	r3, r7, #0
   3ce8c:	blt	3d324 <__assert_fail@plt+0x2c038>
   3ce90:	adds	r6, r6, r6
   3ce94:	adc	r7, r7, r7
   3ce98:	mov	ip, #0
   3ce9c:	b	3ca04 <__assert_fail@plt+0x2b718>
   3cea0:	mov	ip, #0
   3cea4:	b	3ca04 <__assert_fail@plt+0x2b718>
   3cea8:	ldr	r3, [pc, #1396]	; 3d424 <__assert_fail@plt+0x2c138>
   3ceac:	mvn	r2, #0
   3ceb0:	cmp	r7, r3
   3ceb4:	cmpeq	r6, r2
   3ceb8:	bhi	3d324 <__assert_fail@plt+0x2c038>
   3cebc:	lsl	r3, r7, #9
   3cec0:	orr	r3, r3, r6, lsr #23
   3cec4:	lsl	r2, r6, #9
   3cec8:	mov	r6, r2
   3cecc:	mov	r7, r3
   3ced0:	mov	ip, #0
   3ced4:	b	3ca04 <__assert_fail@plt+0x2b718>
   3ced8:	ldrd	sl, [sp]
   3cedc:	umull	r2, r3, r6, r1
   3cee0:	mul	r0, r6, lr
   3cee4:	cmp	r7, fp
   3cee8:	cmpeq	r6, sl
   3ceec:	mvnhi	r2, #0
   3cef0:	mla	r0, r1, r7, r0
   3cef4:	umull	sl, fp, r2, r1
   3cef8:	add	r3, r0, r3
   3cefc:	mul	r0, lr, r2
   3cf00:	mvnhi	r3, #0
   3cf04:	strd	sl, [sp, #16]
   3cf08:	ldrd	sl, [sp]
   3cf0c:	mla	r0, r1, r3, r0
   3cf10:	ldr	ip, [sp, #20]
   3cf14:	cmp	r3, fp
   3cf18:	add	r0, r0, ip
   3cf1c:	cmpeq	r2, sl
   3cf20:	str	r0, [sp, #20]
   3cf24:	mvnhi	sl, #0
   3cf28:	mvnhi	fp, #0
   3cf2c:	strdhi	sl, [sp, #16]
   3cf30:	ldrdhi	sl, [sp]
   3cf34:	ldr	r0, [sp, #16]
   3cf38:	cmp	r3, fp
   3cf3c:	ldr	r3, [sp, #20]
   3cf40:	mul	r0, lr, r0
   3cf44:	cmpeq	r2, sl
   3cf48:	mla	r0, r1, r3, r0
   3cf4c:	ldr	r3, [sp, #16]
   3cf50:	umull	r2, r3, r3, r1
   3cf54:	strd	r2, [sp, #24]
   3cf58:	movhi	r3, #1
   3cf5c:	movls	r3, #0
   3cf60:	cmp	r7, fp
   3cf64:	cmpeq	r6, sl
   3cf68:	ldrd	r6, [sp, #16]
   3cf6c:	ldr	r2, [sp, #28]
   3cf70:	movls	ip, r3
   3cf74:	orrhi	ip, r3, #1
   3cf78:	cmp	r7, fp
   3cf7c:	add	r2, r0, r2
   3cf80:	cmpeq	r6, sl
   3cf84:	str	r2, [sp, #28]
   3cf88:	mvnhi	r2, #0
   3cf8c:	mvnhi	r3, #0
   3cf90:	strdhi	r2, [sp, #24]
   3cf94:	ldrd	r6, [sp, #24]
   3cf98:	mul	r2, lr, r6
   3cf9c:	umull	sl, fp, r6, r1
   3cfa0:	mla	r3, r1, r7, r2
   3cfa4:	ldrd	r6, [sp]
   3cfa8:	str	r3, [sp, #32]
   3cfac:	ldrd	r2, [sp, #16]
   3cfb0:	cmp	r3, r7
   3cfb4:	cmpeq	r2, r6
   3cfb8:	ldrd	r2, [sp, #24]
   3cfbc:	orrhi	ip, ip, #1
   3cfc0:	cmp	r3, r7
   3cfc4:	ldr	r3, [sp, #32]
   3cfc8:	cmpeq	r2, r6
   3cfcc:	add	r2, r3, fp
   3cfd0:	mov	fp, r2
   3cfd4:	bhi	3d3ec <__assert_fail@plt+0x2c100>
   3cfd8:	strd	sl, [sp, #16]
   3cfdc:	mul	r2, lr, sl
   3cfe0:	umull	r6, r7, sl, r1
   3cfe4:	mla	r3, r1, fp, r2
   3cfe8:	ldrd	sl, [sp]
   3cfec:	str	r3, [sp, #32]
   3cff0:	ldrd	r2, [sp, #24]
   3cff4:	cmp	r3, fp
   3cff8:	cmpeq	r2, sl
   3cffc:	ldrd	r2, [sp, #16]
   3d000:	orrhi	ip, ip, #1
   3d004:	cmp	r3, fp
   3d008:	ldr	r3, [sp, #32]
   3d00c:	cmpeq	r2, sl
   3d010:	add	r2, r3, r7
   3d014:	mov	r7, r2
   3d018:	mvnhi	r7, #0
   3d01c:	mvnhi	r6, #0
   3d020:	mul	r2, r1, r7
   3d024:	mov	sl, r6
   3d028:	strd	r6, [sp, #24]
   3d02c:	mla	r0, lr, sl, r2
   3d030:	ldrd	sl, [sp]
   3d034:	ldrd	r2, [sp, #16]
   3d038:	umull	r6, r7, r1, r6
   3d03c:	cmp	r3, fp
   3d040:	cmpeq	r2, sl
   3d044:	mov	r3, ip
   3d048:	orrhi	r3, r3, #1
   3d04c:	mov	r2, sl
   3d050:	str	r3, [sp, #16]
   3d054:	mov	r3, fp
   3d058:	ldrd	sl, [sp, #24]
   3d05c:	add	r7, r0, r7
   3d060:	cmp	r3, fp
   3d064:	cmpeq	r2, sl
   3d068:	bcc	3cb18 <__assert_fail@plt+0x2b82c>
   3d06c:	mov	r2, r6
   3d070:	mov	r3, r7
   3d074:	b	3cb20 <__assert_fail@plt+0x2b834>
   3d078:	ldrd	sl, [sp]
   3d07c:	umull	r2, r3, r6, r1
   3d080:	mul	r0, r6, lr
   3d084:	cmp	r7, fp
   3d088:	cmpeq	r6, sl
   3d08c:	mvnhi	r2, #0
   3d090:	mla	r0, r1, r7, r0
   3d094:	umull	sl, fp, r2, r1
   3d098:	add	r3, r0, r3
   3d09c:	mul	r0, lr, r2
   3d0a0:	mvnhi	r3, #0
   3d0a4:	strd	sl, [sp, #16]
   3d0a8:	ldrd	sl, [sp]
   3d0ac:	mla	r0, r1, r3, r0
   3d0b0:	ldr	ip, [sp, #20]
   3d0b4:	cmp	r3, fp
   3d0b8:	add	r0, r0, ip
   3d0bc:	cmpeq	r2, sl
   3d0c0:	str	r0, [sp, #20]
   3d0c4:	mvnhi	sl, #0
   3d0c8:	mvnhi	fp, #0
   3d0cc:	strdhi	sl, [sp, #16]
   3d0d0:	ldrdhi	sl, [sp]
   3d0d4:	ldr	r0, [sp, #16]
   3d0d8:	cmp	r3, fp
   3d0dc:	ldr	ip, [sp, #20]
   3d0e0:	mul	r0, lr, r0
   3d0e4:	ldr	r3, [sp, #16]
   3d0e8:	cmpeq	r2, sl
   3d0ec:	mla	r0, r1, ip, r0
   3d0f0:	umull	r2, r3, r3, r1
   3d0f4:	movhi	r1, #1
   3d0f8:	movls	r1, #0
   3d0fc:	cmp	r7, fp
   3d100:	cmpeq	r6, sl
   3d104:	ldrd	r6, [sp, #16]
   3d108:	movls	ip, r1
   3d10c:	orrhi	ip, r1, #1
   3d110:	cmp	r7, fp
   3d114:	cmpeq	r6, sl
   3d118:	mvnhi	r2, #0
   3d11c:	add	r3, r0, r3
   3d120:	movhi	r3, r2
   3d124:	cmp	r7, fp
   3d128:	cmpeq	r6, sl
   3d12c:	mov	r7, r3
   3d130:	mov	r6, r2
   3d134:	orrhi	ip, ip, #1
   3d138:	b	3ca04 <__assert_fail@plt+0x2b718>
   3d13c:	ldrd	sl, [sp]
   3d140:	umull	r2, r3, r6, r1
   3d144:	mul	r0, r6, lr
   3d148:	cmp	r7, fp
   3d14c:	cmpeq	r6, sl
   3d150:	mvnhi	r2, #0
   3d154:	mla	r0, r1, r7, r0
   3d158:	umull	sl, fp, r1, r2
   3d15c:	add	r3, r0, r3
   3d160:	mvnhi	r3, #0
   3d164:	strd	sl, [sp, #16]
   3d168:	mul	r0, r1, r3
   3d16c:	ldrd	sl, [sp]
   3d170:	mla	r0, lr, r2, r0
   3d174:	ldr	ip, [sp, #20]
   3d178:	cmp	fp, r3
   3d17c:	add	r0, r0, ip
   3d180:	cmpeq	sl, r2
   3d184:	str	r0, [sp, #20]
   3d188:	mvncc	sl, #0
   3d18c:	mvncc	fp, #0
   3d190:	strdcc	sl, [sp, #16]
   3d194:	ldrdcc	sl, [sp]
   3d198:	ldr	r0, [sp, #16]
   3d19c:	cmp	fp, r3
   3d1a0:	ldr	r3, [sp, #20]
   3d1a4:	mul	r0, lr, r0
   3d1a8:	cmpeq	sl, r2
   3d1ac:	mla	r0, r1, r3, r0
   3d1b0:	ldr	r3, [sp, #16]
   3d1b4:	umull	r2, r3, r3, r1
   3d1b8:	strd	r2, [sp, #24]
   3d1bc:	movcc	r3, #1
   3d1c0:	movcs	r3, #0
   3d1c4:	cmp	r7, fp
   3d1c8:	cmpeq	r6, sl
   3d1cc:	movls	ip, r3
   3d1d0:	orrhi	ip, r3, #1
   3d1d4:	ldrd	r2, [sp, #16]
   3d1d8:	cmp	r3, fp
   3d1dc:	ldr	r3, [sp, #28]
   3d1e0:	cmpeq	r2, sl
   3d1e4:	add	r3, r0, r3
   3d1e8:	str	r3, [sp, #28]
   3d1ec:	bhi	3d3a4 <__assert_fail@plt+0x2c0b8>
   3d1f0:	ldrd	r2, [sp, #24]
   3d1f4:	mov	sl, r2
   3d1f8:	mov	fp, r3
   3d1fc:	mul	r2, lr, sl
   3d200:	umull	r6, r7, sl, r1
   3d204:	mla	r0, r1, fp, r2
   3d208:	ldrd	r2, [sp]
   3d20c:	add	r7, r0, r7
   3d210:	mov	sl, r2
   3d214:	mov	fp, r3
   3d218:	strd	r2, [sp, #32]
   3d21c:	ldrd	r2, [sp, #16]
   3d220:	cmp	r3, fp
   3d224:	cmpeq	r2, sl
   3d228:	ldrd	r2, [sp, #32]
   3d22c:	ldrd	sl, [sp, #24]
   3d230:	orrhi	ip, ip, #1
   3d234:	cmp	fp, r3
   3d238:	cmpeq	sl, r2
   3d23c:	mvnhi	r6, #0
   3d240:	mvnhi	r7, #0
   3d244:	umull	sl, fp, r6, r1
   3d248:	mul	r3, lr, r6
   3d24c:	strd	sl, [sp, #16]
   3d250:	mla	r0, r1, r7, r3
   3d254:	ldrd	sl, [sp, #24]
   3d258:	ldrd	r2, [sp]
   3d25c:	cmp	fp, r3
   3d260:	cmpeq	sl, r2
   3d264:	orrhi	ip, ip, #1
   3d268:	cmp	r7, r3
   3d26c:	ldr	r3, [sp, #20]
   3d270:	cmpeq	r6, r2
   3d274:	add	r3, r0, r3
   3d278:	str	r3, [sp, #20]
   3d27c:	mvnhi	r2, #0
   3d280:	mvnhi	r3, #0
   3d284:	ldrdls	r2, [sp, #16]
   3d288:	ldrd	sl, [sp]
   3d28c:	mul	r0, r1, r3
   3d290:	cmp	r7, fp
   3d294:	str	r0, [sp, #16]
   3d298:	cmpeq	r6, sl
   3d29c:	ldr	r6, [sp, #16]
   3d2a0:	umull	r0, r1, r1, r2
   3d2a4:	mla	lr, lr, r2, r6
   3d2a8:	orrhi	ip, ip, #1
   3d2ac:	cmp	r3, fp
   3d2b0:	cmpeq	r2, sl
   3d2b4:	add	r1, lr, r1
   3d2b8:	bls	3cd8c <__assert_fail@plt+0x2baa0>
   3d2bc:	b	3cd84 <__assert_fail@plt+0x2ba98>
   3d2c0:	ldr	r3, [pc, #344]	; 3d420 <__assert_fail@plt+0x2c134>
   3d2c4:	mvn	r2, #0
   3d2c8:	cmp	r7, r3
   3d2cc:	cmpeq	r6, r2
   3d2d0:	bhi	3d324 <__assert_fail@plt+0x2c038>
   3d2d4:	lsl	r3, r7, #10
   3d2d8:	orr	r3, r3, r6, lsr #22
   3d2dc:	lsl	r2, r6, #10
   3d2e0:	mov	r6, r2
   3d2e4:	mov	r7, r3
   3d2e8:	mov	ip, #0
   3d2ec:	b	3ca04 <__assert_fail@plt+0x2b718>
   3d2f0:	strd	r6, [r8]
   3d2f4:	orr	r4, r4, #2
   3d2f8:	b	3c6d4 <__assert_fail@plt+0x2b3e8>
   3d2fc:	ldrd	r2, [sp]
   3d300:	cmp	r7, r3
   3d304:	cmpeq	r6, r2
   3d308:	bhi	3d324 <__assert_fail@plt+0x2c038>
   3d30c:	mul	r3, r6, lr
   3d310:	mov	ip, #0
   3d314:	mla	r3, r1, r7, r3
   3d318:	umull	r6, r7, r6, r1
   3d31c:	add	r7, r3, r7
   3d320:	b	3ca04 <__assert_fail@plt+0x2b718>
   3d324:	mvn	r6, #0
   3d328:	mvn	r7, #0
   3d32c:	mov	ip, #1
   3d330:	b	3ca04 <__assert_fail@plt+0x2b718>
   3d334:	ldrb	r3, [r9, #2]
   3d338:	mvn	r2, #0
   3d33c:	mov	r1, #1024	; 0x400
   3d340:	cmp	r3, #66	; 0x42
   3d344:	ldr	r3, [pc, #212]	; 3d420 <__assert_fail@plt+0x2c134>
   3d348:	mov	lr, #0
   3d34c:	strd	r2, [sp]
   3d350:	moveq	r3, #3
   3d354:	streq	r3, [sp, #12]
   3d358:	movne	r3, #1
   3d35c:	strne	r3, [sp, #12]
   3d360:	b	3c8b0 <__assert_fail@plt+0x2b5c4>
   3d364:	add	r3, pc, #172	; 0xac
   3d368:	ldrd	r2, [r3]
   3d36c:	mov	r1, #1000	; 0x3e8
   3d370:	mov	lr, #0
   3d374:	strd	r2, [sp]
   3d378:	mov	r3, #2
   3d37c:	str	r3, [sp, #12]
   3d380:	b	3c8b0 <__assert_fail@plt+0x2b5c4>
   3d384:	ldr	r3, [pc, #148]	; 3d420 <__assert_fail@plt+0x2c134>
   3d388:	mvn	r2, #0
   3d38c:	mov	lr, r0
   3d390:	strd	r2, [sp]
   3d394:	mov	r3, #1
   3d398:	mov	r1, #1024	; 0x400
   3d39c:	str	r3, [sp, #12]
   3d3a0:	b	3c8b0 <__assert_fail@plt+0x2b5c4>
   3d3a4:	mvn	r2, #0
   3d3a8:	mvn	r3, #0
   3d3ac:	mov	sl, r2
   3d3b0:	strd	r2, [sp, #24]
   3d3b4:	mov	fp, r3
   3d3b8:	b	3d1fc <__assert_fail@plt+0x2bf10>
   3d3bc:	mvn	r2, #0
   3d3c0:	mvn	r3, #0
   3d3c4:	mov	sl, r2
   3d3c8:	strd	r2, [sp, #16]
   3d3cc:	mov	fp, r3
   3d3d0:	b	3cc80 <__assert_fail@plt+0x2b994>
   3d3d4:	mvn	r2, #0
   3d3d8:	mvn	r3, #0
   3d3dc:	mov	sl, r2
   3d3e0:	strd	r2, [sp, #24]
   3d3e4:	mov	fp, r3
   3d3e8:	b	3cad8 <__assert_fail@plt+0x2b7ec>
   3d3ec:	mvn	r2, #0
   3d3f0:	mvn	r3, #0
   3d3f4:	mov	sl, r2
   3d3f8:	strd	r2, [sp, #16]
   3d3fc:	mov	fp, r3
   3d400:	b	3cfdc <__assert_fail@plt+0x2bcf0>
   3d404:	ldr	r3, [pc, #28]	; 3d428 <__assert_fail@plt+0x2c13c>
   3d408:	mov	r2, #85	; 0x55
   3d40c:	ldr	r1, [pc, #24]	; 3d42c <__assert_fail@plt+0x2c140>
   3d410:	ldr	r0, [pc, #24]	; 3d430 <__assert_fail@plt+0x2c144>
   3d414:	bl	112ec <__assert_fail@plt>
   3d418:	blmi	ff1e73dc <optarg@@GLIBC_2.4+0xff195234>
   3d41c:	subeq	r8, r1, r7, lsr r9
   3d420:	ldrshteq	pc, [pc], -pc	; <UNPREDICTABLE>
   3d424:	ldrshteq	pc, [pc], #-255	; <UNPREDICTABLE>
   3d428:	andeq	r1, r4, r8, lsr ip
   3d42c:	andeq	r1, r4, r4, asr #24
   3d430:	andeq	r1, r4, r4, asr ip
   3d434:	cmp	r1, #0
   3d438:	cmpne	r0, #0
   3d43c:	moveq	r1, #1
   3d440:	moveq	r0, r1
   3d444:	umull	r2, r3, r0, r1
   3d448:	adds	r3, r3, #0
   3d44c:	movne	r3, #1
   3d450:	cmp	r2, #0
   3d454:	blt	3d464 <__assert_fail@plt+0x2c178>
   3d458:	cmp	r3, #0
   3d45c:	bne	3d464 <__assert_fail@plt+0x2c178>
   3d460:	b	10fd4 <calloc@plt>
   3d464:	push	{r4, lr}
   3d468:	bl	111c0 <__errno_location@plt>
   3d46c:	mov	r3, #12
   3d470:	str	r3, [r0]
   3d474:	mov	r0, #0
   3d478:	pop	{r4, pc}
   3d47c:	cmp	r0, #0
   3d480:	moveq	r0, #1
   3d484:	cmp	r0, #0
   3d488:	blt	3d490 <__assert_fail@plt+0x2c1a4>
   3d48c:	b	1113c <malloc@plt>
   3d490:	push	{r4, lr}
   3d494:	bl	111c0 <__errno_location@plt>
   3d498:	mov	r3, #12
   3d49c:	str	r3, [r0]
   3d4a0:	mov	r0, #0
   3d4a4:	pop	{r4, pc}
   3d4a8:	cmp	r0, #0
   3d4ac:	beq	3d4d0 <__assert_fail@plt+0x2c1e4>
   3d4b0:	cmp	r1, #0
   3d4b4:	push	{lr}		; (str lr, [sp, #-4]!)
   3d4b8:	sub	sp, sp, #12
   3d4bc:	beq	3d4d8 <__assert_fail@plt+0x2c1ec>
   3d4c0:	blt	3d4f0 <__assert_fail@plt+0x2c204>
   3d4c4:	add	sp, sp, #12
   3d4c8:	pop	{lr}		; (ldr lr, [sp], #4)
   3d4cc:	b	110ac <realloc@plt>
   3d4d0:	mov	r0, r1
   3d4d4:	b	3d47c <__assert_fail@plt+0x2c190>
   3d4d8:	str	r1, [sp, #4]
   3d4dc:	bl	3618c <__assert_fail@plt+0x24ea0>
   3d4e0:	ldr	r3, [sp, #4]
   3d4e4:	mov	r0, r3
   3d4e8:	add	sp, sp, #12
   3d4ec:	pop	{pc}		; (ldr pc, [sp], #4)
   3d4f0:	bl	111c0 <__errno_location@plt>
   3d4f4:	mov	r2, #12
   3d4f8:	mov	r3, #0
   3d4fc:	str	r2, [r0]
   3d500:	b	3d4e4 <__assert_fail@plt+0x2c1f8>
   3d504:	push	{r4, r5, r6, lr}
   3d508:	mov	r4, r0
   3d50c:	bl	1110c <__fpending@plt>
   3d510:	ldr	r5, [r4]
   3d514:	and	r5, r5, #32
   3d518:	mov	r6, r0
   3d51c:	mov	r0, r4
   3d520:	bl	35ff4 <__assert_fail@plt+0x24d08>
   3d524:	cmp	r5, #0
   3d528:	mov	r4, r0
   3d52c:	bne	3d54c <__assert_fail@plt+0x2c260>
   3d530:	cmp	r0, #0
   3d534:	beq	3d544 <__assert_fail@plt+0x2c258>
   3d538:	cmp	r6, #0
   3d53c:	beq	3d568 <__assert_fail@plt+0x2c27c>
   3d540:	mvn	r4, #0
   3d544:	mov	r0, r4
   3d548:	pop	{r4, r5, r6, pc}
   3d54c:	cmp	r0, #0
   3d550:	bne	3d540 <__assert_fail@plt+0x2c254>
   3d554:	bl	111c0 <__errno_location@plt>
   3d558:	str	r4, [r0]
   3d55c:	mvn	r4, #0
   3d560:	mov	r0, r4
   3d564:	pop	{r4, r5, r6, pc}
   3d568:	bl	111c0 <__errno_location@plt>
   3d56c:	ldr	r4, [r0]
   3d570:	subs	r4, r4, #9
   3d574:	mvnne	r4, #0
   3d578:	mov	r0, r4
   3d57c:	pop	{r4, r5, r6, pc}
   3d580:	push	{r1, r2, r3}
   3d584:	push	{r4, r5, r6, r7, lr}
   3d588:	sub	sp, sp, #8
   3d58c:	add	r3, sp, #32
   3d590:	ldr	r1, [sp, #28]
   3d594:	str	r3, [sp, #4]
   3d598:	cmp	r1, #0
   3d59c:	beq	3d634 <__assert_fail@plt+0x2c348>
   3d5a0:	ldr	r2, [pc, #412]	; 3d744 <__assert_fail@plt+0x2c458>
   3d5a4:	mov	r5, r0
   3d5a8:	cmp	r1, r2
   3d5ac:	bne	3d5f8 <__assert_fail@plt+0x2c30c>
   3d5b0:	ldr	r6, [pc, #400]	; 3d748 <__assert_fail@plt+0x2c45c>
   3d5b4:	ldr	r7, [r3]
   3d5b8:	add	r2, sp, #36	; 0x24
   3d5bc:	ldr	r3, [r6]
   3d5c0:	str	r2, [sp, #4]
   3d5c4:	cmp	r3, #0
   3d5c8:	mov	r2, r7
   3d5cc:	blt	3d6f8 <__assert_fail@plt+0x2c40c>
   3d5d0:	bl	11238 <fcntl64@plt>
   3d5d4:	subs	r4, r0, #0
   3d5d8:	blt	3d67c <__assert_fail@plt+0x2c390>
   3d5dc:	mov	r3, #1
   3d5e0:	str	r3, [r6]
   3d5e4:	mov	r0, r4
   3d5e8:	add	sp, sp, #8
   3d5ec:	pop	{r4, r5, r6, r7, lr}
   3d5f0:	add	sp, sp, #12
   3d5f4:	bx	lr
   3d5f8:	cmp	r1, #11
   3d5fc:	beq	3d624 <__assert_fail@plt+0x2c338>
   3d600:	bgt	3d644 <__assert_fail@plt+0x2c358>
   3d604:	cmp	r1, #3
   3d608:	beq	3d624 <__assert_fail@plt+0x2c338>
   3d60c:	ble	3d738 <__assert_fail@plt+0x2c44c>
   3d610:	cmp	r1, #8
   3d614:	beq	3d664 <__assert_fail@plt+0x2c378>
   3d618:	ble	3d664 <__assert_fail@plt+0x2c378>
   3d61c:	cmp	r1, #9
   3d620:	bne	3d664 <__assert_fail@plt+0x2c378>
   3d624:	mov	r0, r5
   3d628:	bl	11238 <fcntl64@plt>
   3d62c:	mov	r4, r0
   3d630:	b	3d5e4 <__assert_fail@plt+0x2c2f8>
   3d634:	ldr	r2, [sp, #32]
   3d638:	bl	11238 <fcntl64@plt>
   3d63c:	mov	r4, r0
   3d640:	b	3d5e4 <__assert_fail@plt+0x2c2f8>
   3d644:	ldr	r3, [pc, #256]	; 3d74c <__assert_fail@plt+0x2c460>
   3d648:	cmp	r1, r3
   3d64c:	bgt	3d718 <__assert_fail@plt+0x2c42c>
   3d650:	cmp	r1, r2
   3d654:	bge	3d664 <__assert_fail@plt+0x2c378>
   3d658:	sub	r3, r3, #6
   3d65c:	cmp	r1, r3
   3d660:	beq	3d624 <__assert_fail@plt+0x2c338>
   3d664:	ldr	r3, [sp, #4]
   3d668:	mov	r0, r5
   3d66c:	ldr	r2, [r3]
   3d670:	bl	11238 <fcntl64@plt>
   3d674:	mov	r4, r0
   3d678:	b	3d5e4 <__assert_fail@plt+0x2c2f8>
   3d67c:	bl	111c0 <__errno_location@plt>
   3d680:	ldr	r3, [r0]
   3d684:	cmp	r3, #22
   3d688:	bne	3d5dc <__assert_fail@plt+0x2c2f0>
   3d68c:	mov	r2, r7
   3d690:	mov	r0, r5
   3d694:	mov	r1, #0
   3d698:	bl	11238 <fcntl64@plt>
   3d69c:	subs	r4, r0, #0
   3d6a0:	blt	3d5e4 <__assert_fail@plt+0x2c2f8>
   3d6a4:	mvn	r3, #0
   3d6a8:	str	r3, [r6]
   3d6ac:	mov	r1, #1
   3d6b0:	mov	r0, r4
   3d6b4:	bl	11238 <fcntl64@plt>
   3d6b8:	subs	r2, r0, #0
   3d6bc:	blt	3d6d8 <__assert_fail@plt+0x2c3ec>
   3d6c0:	orr	r2, r2, #1
   3d6c4:	mov	r1, #2
   3d6c8:	mov	r0, r4
   3d6cc:	bl	11238 <fcntl64@plt>
   3d6d0:	cmn	r0, #1
   3d6d4:	bne	3d5e4 <__assert_fail@plt+0x2c2f8>
   3d6d8:	bl	111c0 <__errno_location@plt>
   3d6dc:	mov	r5, r0
   3d6e0:	mov	r0, r4
   3d6e4:	ldr	r6, [r5]
   3d6e8:	mvn	r4, #0
   3d6ec:	bl	112d4 <close@plt>
   3d6f0:	str	r6, [r5]
   3d6f4:	b	3d5e4 <__assert_fail@plt+0x2c2f8>
   3d6f8:	mov	r1, #0
   3d6fc:	bl	11238 <fcntl64@plt>
   3d700:	subs	r4, r0, #0
   3d704:	blt	3d5e4 <__assert_fail@plt+0x2c2f8>
   3d708:	ldr	r3, [r6]
   3d70c:	cmn	r3, #1
   3d710:	beq	3d6ac <__assert_fail@plt+0x2c3c0>
   3d714:	b	3d5e4 <__assert_fail@plt+0x2c2f8>
   3d718:	ldr	r3, [pc, #48]	; 3d750 <__assert_fail@plt+0x2c464>
   3d71c:	cmp	r1, r3
   3d720:	beq	3d664 <__assert_fail@plt+0x2c378>
   3d724:	blt	3d624 <__assert_fail@plt+0x2c338>
   3d728:	add	r3, r3, #1
   3d72c:	cmp	r1, r3
   3d730:	bne	3d664 <__assert_fail@plt+0x2c378>
   3d734:	b	3d624 <__assert_fail@plt+0x2c338>
   3d738:	cmp	r1, #1
   3d73c:	bne	3d664 <__assert_fail@plt+0x2c378>
   3d740:	b	3d624 <__assert_fail@plt+0x2c338>
   3d744:	andeq	r0, r0, r6, lsl #8
   3d748:	andeq	r2, r5, ip, lsl #6
   3d74c:	andeq	r0, r0, r7, lsl #8
   3d750:	andeq	r0, r0, r9, lsl #8
   3d754:	push	{r4, lr}
   3d758:	mov	r0, #14
   3d75c:	bl	11268 <nl_langinfo@plt>
   3d760:	cmp	r0, #0
   3d764:	beq	3d77c <__assert_fail@plt+0x2c490>
   3d768:	ldrb	r2, [r0]
   3d76c:	ldr	r3, [pc, #16]	; 3d784 <__assert_fail@plt+0x2c498>
   3d770:	cmp	r2, #0
   3d774:	moveq	r0, r3
   3d778:	pop	{r4, pc}
   3d77c:	ldr	r0, [pc]	; 3d784 <__assert_fail@plt+0x2c498>
   3d780:	pop	{r4, pc}
   3d784:	andeq	r1, r4, ip, ror ip
   3d788:	push	{r4, r5, r6, r7, lr}
   3d78c:	subs	r6, r0, #0
   3d790:	sub	sp, sp, #12
   3d794:	addeq	r6, sp, #4
   3d798:	mov	r0, r6
   3d79c:	mov	r5, r2
   3d7a0:	mov	r7, r1
   3d7a4:	bl	11118 <mbrtowc@plt>
   3d7a8:	cmp	r5, #0
   3d7ac:	cmnne	r0, #3
   3d7b0:	mov	r4, r0
   3d7b4:	bls	3d7d0 <__assert_fail@plt+0x2c4e4>
   3d7b8:	mov	r0, #0
   3d7bc:	bl	3d828 <__assert_fail@plt+0x2c53c>
   3d7c0:	cmp	r0, #0
   3d7c4:	moveq	r4, #1
   3d7c8:	ldrbeq	r3, [r7]
   3d7cc:	streq	r3, [r6]
   3d7d0:	mov	r0, r4
   3d7d4:	add	sp, sp, #12
   3d7d8:	pop	{r4, r5, r6, r7, pc}
   3d7dc:	push	{r4, r5, r6, lr}
   3d7e0:	subs	r4, r2, #0
   3d7e4:	mov	r6, r0
   3d7e8:	mov	r5, r1
   3d7ec:	beq	3d818 <__assert_fail@plt+0x2c52c>
   3d7f0:	mov	r1, r4
   3d7f4:	mvn	r0, #0
   3d7f8:	bl	3d91c <__assert_fail@plt+0x2c630>
   3d7fc:	cmp	r0, r5
   3d800:	bcs	3d818 <__assert_fail@plt+0x2c52c>
   3d804:	bl	111c0 <__errno_location@plt>
   3d808:	mov	r3, #12
   3d80c:	str	r3, [r0]
   3d810:	mov	r0, #0
   3d814:	pop	{r4, r5, r6, pc}
   3d818:	mul	r1, r5, r4
   3d81c:	mov	r0, r6
   3d820:	pop	{r4, r5, r6, lr}
   3d824:	b	3d4a8 <__assert_fail@plt+0x2c1bc>
   3d828:	push	{lr}		; (str lr, [sp, #-4]!)
   3d82c:	sub	sp, sp, #268	; 0x10c
   3d830:	add	r1, sp, #4
   3d834:	ldr	r2, [pc, #60]	; 3d878 <__assert_fail@plt+0x2c58c>
   3d838:	bl	3d884 <__assert_fail@plt+0x2c598>
   3d83c:	cmp	r0, #0
   3d840:	movne	r0, #0
   3d844:	bne	3d870 <__assert_fail@plt+0x2c584>
   3d848:	ldr	r1, [pc, #44]	; 3d87c <__assert_fail@plt+0x2c590>
   3d84c:	add	r0, sp, #4
   3d850:	bl	11004 <strcmp@plt>
   3d854:	cmp	r0, #0
   3d858:	beq	3d870 <__assert_fail@plt+0x2c584>
   3d85c:	add	r0, sp, #4
   3d860:	ldr	r1, [pc, #24]	; 3d880 <__assert_fail@plt+0x2c594>
   3d864:	bl	11004 <strcmp@plt>
   3d868:	adds	r0, r0, #0
   3d86c:	movne	r0, #1
   3d870:	add	sp, sp, #268	; 0x10c
   3d874:	pop	{pc}		; (ldr pc, [sp], #4)
   3d878:	andeq	r0, r0, r1, lsl #2
   3d87c:	andeq	r1, r4, r4, lsl #25
   3d880:	andeq	r1, r4, r8, lsl #25
   3d884:	push	{r4, r5, r6, lr}
   3d888:	mov	r5, r1
   3d88c:	mov	r1, #0
   3d890:	mov	r4, r2
   3d894:	bl	11250 <setlocale@plt>
   3d898:	subs	r6, r0, #0
   3d89c:	beq	3d8f8 <__assert_fail@plt+0x2c60c>
   3d8a0:	bl	111a8 <strlen@plt>
   3d8a4:	cmp	r4, r0
   3d8a8:	bhi	3d8e0 <__assert_fail@plt+0x2c5f4>
   3d8ac:	cmp	r4, #0
   3d8b0:	bne	3d8bc <__assert_fail@plt+0x2c5d0>
   3d8b4:	mov	r0, #34	; 0x22
   3d8b8:	pop	{r4, r5, r6, pc}
   3d8bc:	sub	r4, r4, #1
   3d8c0:	mov	r1, r6
   3d8c4:	mov	r2, r4
   3d8c8:	mov	r0, r5
   3d8cc:	bl	11058 <memcpy@plt>
   3d8d0:	mov	r3, #0
   3d8d4:	strb	r3, [r5, r4]
   3d8d8:	mov	r0, #34	; 0x22
   3d8dc:	pop	{r4, r5, r6, pc}
   3d8e0:	add	r2, r0, #1
   3d8e4:	mov	r1, r6
   3d8e8:	mov	r0, r5
   3d8ec:	bl	11058 <memcpy@plt>
   3d8f0:	mov	r0, #0
   3d8f4:	pop	{r4, r5, r6, pc}
   3d8f8:	cmp	r4, #0
   3d8fc:	beq	3d90c <__assert_fail@plt+0x2c620>
   3d900:	strb	r6, [r5]
   3d904:	mov	r0, #22
   3d908:	pop	{r4, r5, r6, pc}
   3d90c:	mov	r0, #22
   3d910:	pop	{r4, r5, r6, pc}
   3d914:	mov	r1, #0
   3d918:	b	11250 <setlocale@plt>
   3d91c:	subs	r2, r1, #1
   3d920:	bxeq	lr
   3d924:	bcc	3dafc <__assert_fail@plt+0x2c810>
   3d928:	cmp	r0, r1
   3d92c:	bls	3dae0 <__assert_fail@plt+0x2c7f4>
   3d930:	tst	r1, r2
   3d934:	beq	3daec <__assert_fail@plt+0x2c800>
   3d938:	clz	r3, r0
   3d93c:	clz	r2, r1
   3d940:	sub	r3, r2, r3
   3d944:	rsbs	r3, r3, #31
   3d948:	addne	r3, r3, r3, lsl #1
   3d94c:	mov	r2, #0
   3d950:	addne	pc, pc, r3, lsl #2
   3d954:	nop			; (mov r0, r0)
   3d958:	cmp	r0, r1, lsl #31
   3d95c:	adc	r2, r2, r2
   3d960:	subcs	r0, r0, r1, lsl #31
   3d964:	cmp	r0, r1, lsl #30
   3d968:	adc	r2, r2, r2
   3d96c:	subcs	r0, r0, r1, lsl #30
   3d970:	cmp	r0, r1, lsl #29
   3d974:	adc	r2, r2, r2
   3d978:	subcs	r0, r0, r1, lsl #29
   3d97c:	cmp	r0, r1, lsl #28
   3d980:	adc	r2, r2, r2
   3d984:	subcs	r0, r0, r1, lsl #28
   3d988:	cmp	r0, r1, lsl #27
   3d98c:	adc	r2, r2, r2
   3d990:	subcs	r0, r0, r1, lsl #27
   3d994:	cmp	r0, r1, lsl #26
   3d998:	adc	r2, r2, r2
   3d99c:	subcs	r0, r0, r1, lsl #26
   3d9a0:	cmp	r0, r1, lsl #25
   3d9a4:	adc	r2, r2, r2
   3d9a8:	subcs	r0, r0, r1, lsl #25
   3d9ac:	cmp	r0, r1, lsl #24
   3d9b0:	adc	r2, r2, r2
   3d9b4:	subcs	r0, r0, r1, lsl #24
   3d9b8:	cmp	r0, r1, lsl #23
   3d9bc:	adc	r2, r2, r2
   3d9c0:	subcs	r0, r0, r1, lsl #23
   3d9c4:	cmp	r0, r1, lsl #22
   3d9c8:	adc	r2, r2, r2
   3d9cc:	subcs	r0, r0, r1, lsl #22
   3d9d0:	cmp	r0, r1, lsl #21
   3d9d4:	adc	r2, r2, r2
   3d9d8:	subcs	r0, r0, r1, lsl #21
   3d9dc:	cmp	r0, r1, lsl #20
   3d9e0:	adc	r2, r2, r2
   3d9e4:	subcs	r0, r0, r1, lsl #20
   3d9e8:	cmp	r0, r1, lsl #19
   3d9ec:	adc	r2, r2, r2
   3d9f0:	subcs	r0, r0, r1, lsl #19
   3d9f4:	cmp	r0, r1, lsl #18
   3d9f8:	adc	r2, r2, r2
   3d9fc:	subcs	r0, r0, r1, lsl #18
   3da00:	cmp	r0, r1, lsl #17
   3da04:	adc	r2, r2, r2
   3da08:	subcs	r0, r0, r1, lsl #17
   3da0c:	cmp	r0, r1, lsl #16
   3da10:	adc	r2, r2, r2
   3da14:	subcs	r0, r0, r1, lsl #16
   3da18:	cmp	r0, r1, lsl #15
   3da1c:	adc	r2, r2, r2
   3da20:	subcs	r0, r0, r1, lsl #15
   3da24:	cmp	r0, r1, lsl #14
   3da28:	adc	r2, r2, r2
   3da2c:	subcs	r0, r0, r1, lsl #14
   3da30:	cmp	r0, r1, lsl #13
   3da34:	adc	r2, r2, r2
   3da38:	subcs	r0, r0, r1, lsl #13
   3da3c:	cmp	r0, r1, lsl #12
   3da40:	adc	r2, r2, r2
   3da44:	subcs	r0, r0, r1, lsl #12
   3da48:	cmp	r0, r1, lsl #11
   3da4c:	adc	r2, r2, r2
   3da50:	subcs	r0, r0, r1, lsl #11
   3da54:	cmp	r0, r1, lsl #10
   3da58:	adc	r2, r2, r2
   3da5c:	subcs	r0, r0, r1, lsl #10
   3da60:	cmp	r0, r1, lsl #9
   3da64:	adc	r2, r2, r2
   3da68:	subcs	r0, r0, r1, lsl #9
   3da6c:	cmp	r0, r1, lsl #8
   3da70:	adc	r2, r2, r2
   3da74:	subcs	r0, r0, r1, lsl #8
   3da78:	cmp	r0, r1, lsl #7
   3da7c:	adc	r2, r2, r2
   3da80:	subcs	r0, r0, r1, lsl #7
   3da84:	cmp	r0, r1, lsl #6
   3da88:	adc	r2, r2, r2
   3da8c:	subcs	r0, r0, r1, lsl #6
   3da90:	cmp	r0, r1, lsl #5
   3da94:	adc	r2, r2, r2
   3da98:	subcs	r0, r0, r1, lsl #5
   3da9c:	cmp	r0, r1, lsl #4
   3daa0:	adc	r2, r2, r2
   3daa4:	subcs	r0, r0, r1, lsl #4
   3daa8:	cmp	r0, r1, lsl #3
   3daac:	adc	r2, r2, r2
   3dab0:	subcs	r0, r0, r1, lsl #3
   3dab4:	cmp	r0, r1, lsl #2
   3dab8:	adc	r2, r2, r2
   3dabc:	subcs	r0, r0, r1, lsl #2
   3dac0:	cmp	r0, r1, lsl #1
   3dac4:	adc	r2, r2, r2
   3dac8:	subcs	r0, r0, r1, lsl #1
   3dacc:	cmp	r0, r1
   3dad0:	adc	r2, r2, r2
   3dad4:	subcs	r0, r0, r1
   3dad8:	mov	r0, r2
   3dadc:	bx	lr
   3dae0:	moveq	r0, #1
   3dae4:	movne	r0, #0
   3dae8:	bx	lr
   3daec:	clz	r2, r1
   3daf0:	rsb	r2, r2, #31
   3daf4:	lsr	r0, r0, r2
   3daf8:	bx	lr
   3dafc:	cmp	r0, #0
   3db00:	mvnne	r0, #0
   3db04:	b	3e15c <__assert_fail@plt+0x2ce70>
   3db08:	cmp	r1, #0
   3db0c:	beq	3dafc <__assert_fail@plt+0x2c810>
   3db10:	push	{r0, r1, lr}
   3db14:	bl	3d91c <__assert_fail@plt+0x2c630>
   3db18:	pop	{r1, r2, lr}
   3db1c:	mul	r3, r2, r0
   3db20:	sub	r1, r1, r3
   3db24:	bx	lr
   3db28:	cmp	r1, #0
   3db2c:	beq	3dd38 <__assert_fail@plt+0x2ca4c>
   3db30:	eor	ip, r0, r1
   3db34:	rsbmi	r1, r1, #0
   3db38:	subs	r2, r1, #1
   3db3c:	beq	3dd04 <__assert_fail@plt+0x2ca18>
   3db40:	movs	r3, r0
   3db44:	rsbmi	r3, r0, #0
   3db48:	cmp	r3, r1
   3db4c:	bls	3dd10 <__assert_fail@plt+0x2ca24>
   3db50:	tst	r1, r2
   3db54:	beq	3dd20 <__assert_fail@plt+0x2ca34>
   3db58:	clz	r2, r3
   3db5c:	clz	r0, r1
   3db60:	sub	r2, r0, r2
   3db64:	rsbs	r2, r2, #31
   3db68:	addne	r2, r2, r2, lsl #1
   3db6c:	mov	r0, #0
   3db70:	addne	pc, pc, r2, lsl #2
   3db74:	nop			; (mov r0, r0)
   3db78:	cmp	r3, r1, lsl #31
   3db7c:	adc	r0, r0, r0
   3db80:	subcs	r3, r3, r1, lsl #31
   3db84:	cmp	r3, r1, lsl #30
   3db88:	adc	r0, r0, r0
   3db8c:	subcs	r3, r3, r1, lsl #30
   3db90:	cmp	r3, r1, lsl #29
   3db94:	adc	r0, r0, r0
   3db98:	subcs	r3, r3, r1, lsl #29
   3db9c:	cmp	r3, r1, lsl #28
   3dba0:	adc	r0, r0, r0
   3dba4:	subcs	r3, r3, r1, lsl #28
   3dba8:	cmp	r3, r1, lsl #27
   3dbac:	adc	r0, r0, r0
   3dbb0:	subcs	r3, r3, r1, lsl #27
   3dbb4:	cmp	r3, r1, lsl #26
   3dbb8:	adc	r0, r0, r0
   3dbbc:	subcs	r3, r3, r1, lsl #26
   3dbc0:	cmp	r3, r1, lsl #25
   3dbc4:	adc	r0, r0, r0
   3dbc8:	subcs	r3, r3, r1, lsl #25
   3dbcc:	cmp	r3, r1, lsl #24
   3dbd0:	adc	r0, r0, r0
   3dbd4:	subcs	r3, r3, r1, lsl #24
   3dbd8:	cmp	r3, r1, lsl #23
   3dbdc:	adc	r0, r0, r0
   3dbe0:	subcs	r3, r3, r1, lsl #23
   3dbe4:	cmp	r3, r1, lsl #22
   3dbe8:	adc	r0, r0, r0
   3dbec:	subcs	r3, r3, r1, lsl #22
   3dbf0:	cmp	r3, r1, lsl #21
   3dbf4:	adc	r0, r0, r0
   3dbf8:	subcs	r3, r3, r1, lsl #21
   3dbfc:	cmp	r3, r1, lsl #20
   3dc00:	adc	r0, r0, r0
   3dc04:	subcs	r3, r3, r1, lsl #20
   3dc08:	cmp	r3, r1, lsl #19
   3dc0c:	adc	r0, r0, r0
   3dc10:	subcs	r3, r3, r1, lsl #19
   3dc14:	cmp	r3, r1, lsl #18
   3dc18:	adc	r0, r0, r0
   3dc1c:	subcs	r3, r3, r1, lsl #18
   3dc20:	cmp	r3, r1, lsl #17
   3dc24:	adc	r0, r0, r0
   3dc28:	subcs	r3, r3, r1, lsl #17
   3dc2c:	cmp	r3, r1, lsl #16
   3dc30:	adc	r0, r0, r0
   3dc34:	subcs	r3, r3, r1, lsl #16
   3dc38:	cmp	r3, r1, lsl #15
   3dc3c:	adc	r0, r0, r0
   3dc40:	subcs	r3, r3, r1, lsl #15
   3dc44:	cmp	r3, r1, lsl #14
   3dc48:	adc	r0, r0, r0
   3dc4c:	subcs	r3, r3, r1, lsl #14
   3dc50:	cmp	r3, r1, lsl #13
   3dc54:	adc	r0, r0, r0
   3dc58:	subcs	r3, r3, r1, lsl #13
   3dc5c:	cmp	r3, r1, lsl #12
   3dc60:	adc	r0, r0, r0
   3dc64:	subcs	r3, r3, r1, lsl #12
   3dc68:	cmp	r3, r1, lsl #11
   3dc6c:	adc	r0, r0, r0
   3dc70:	subcs	r3, r3, r1, lsl #11
   3dc74:	cmp	r3, r1, lsl #10
   3dc78:	adc	r0, r0, r0
   3dc7c:	subcs	r3, r3, r1, lsl #10
   3dc80:	cmp	r3, r1, lsl #9
   3dc84:	adc	r0, r0, r0
   3dc88:	subcs	r3, r3, r1, lsl #9
   3dc8c:	cmp	r3, r1, lsl #8
   3dc90:	adc	r0, r0, r0
   3dc94:	subcs	r3, r3, r1, lsl #8
   3dc98:	cmp	r3, r1, lsl #7
   3dc9c:	adc	r0, r0, r0
   3dca0:	subcs	r3, r3, r1, lsl #7
   3dca4:	cmp	r3, r1, lsl #6
   3dca8:	adc	r0, r0, r0
   3dcac:	subcs	r3, r3, r1, lsl #6
   3dcb0:	cmp	r3, r1, lsl #5
   3dcb4:	adc	r0, r0, r0
   3dcb8:	subcs	r3, r3, r1, lsl #5
   3dcbc:	cmp	r3, r1, lsl #4
   3dcc0:	adc	r0, r0, r0
   3dcc4:	subcs	r3, r3, r1, lsl #4
   3dcc8:	cmp	r3, r1, lsl #3
   3dccc:	adc	r0, r0, r0
   3dcd0:	subcs	r3, r3, r1, lsl #3
   3dcd4:	cmp	r3, r1, lsl #2
   3dcd8:	adc	r0, r0, r0
   3dcdc:	subcs	r3, r3, r1, lsl #2
   3dce0:	cmp	r3, r1, lsl #1
   3dce4:	adc	r0, r0, r0
   3dce8:	subcs	r3, r3, r1, lsl #1
   3dcec:	cmp	r3, r1
   3dcf0:	adc	r0, r0, r0
   3dcf4:	subcs	r3, r3, r1
   3dcf8:	cmp	ip, #0
   3dcfc:	rsbmi	r0, r0, #0
   3dd00:	bx	lr
   3dd04:	teq	ip, r0
   3dd08:	rsbmi	r0, r0, #0
   3dd0c:	bx	lr
   3dd10:	movcc	r0, #0
   3dd14:	asreq	r0, ip, #31
   3dd18:	orreq	r0, r0, #1
   3dd1c:	bx	lr
   3dd20:	clz	r2, r1
   3dd24:	rsb	r2, r2, #31
   3dd28:	cmp	ip, #0
   3dd2c:	lsr	r0, r3, r2
   3dd30:	rsbmi	r0, r0, #0
   3dd34:	bx	lr
   3dd38:	cmp	r0, #0
   3dd3c:	mvngt	r0, #-2147483648	; 0x80000000
   3dd40:	movlt	r0, #-2147483648	; 0x80000000
   3dd44:	b	3e15c <__assert_fail@plt+0x2ce70>
   3dd48:	cmp	r1, #0
   3dd4c:	beq	3dd38 <__assert_fail@plt+0x2ca4c>
   3dd50:	push	{r0, r1, lr}
   3dd54:	bl	3db30 <__assert_fail@plt+0x2c844>
   3dd58:	pop	{r1, r2, lr}
   3dd5c:	mul	r3, r2, r0
   3dd60:	sub	r1, r1, r3
   3dd64:	bx	lr
   3dd68:	eor	r1, r1, #-2147483648	; 0x80000000
   3dd6c:	b	3dd74 <__assert_fail@plt+0x2ca88>
   3dd70:	eor	r3, r3, #-2147483648	; 0x80000000
   3dd74:	push	{r4, r5, lr}
   3dd78:	lsl	r4, r1, #1
   3dd7c:	lsl	r5, r3, #1
   3dd80:	teq	r4, r5
   3dd84:	teqeq	r0, r2
   3dd88:	orrsne	ip, r4, r0
   3dd8c:	orrsne	ip, r5, r2
   3dd90:	mvnsne	ip, r4, asr #21
   3dd94:	mvnsne	ip, r5, asr #21
   3dd98:	beq	3df84 <__assert_fail@plt+0x2cc98>
   3dd9c:	lsr	r4, r4, #21
   3dda0:	rsbs	r5, r4, r5, lsr #21
   3dda4:	rsblt	r5, r5, #0
   3dda8:	ble	3ddc8 <__assert_fail@plt+0x2cadc>
   3ddac:	add	r4, r4, r5
   3ddb0:	eor	r2, r0, r2
   3ddb4:	eor	r3, r1, r3
   3ddb8:	eor	r0, r2, r0
   3ddbc:	eor	r1, r3, r1
   3ddc0:	eor	r2, r0, r2
   3ddc4:	eor	r3, r1, r3
   3ddc8:	cmp	r5, #54	; 0x36
   3ddcc:	pophi	{r4, r5, pc}
   3ddd0:	tst	r1, #-2147483648	; 0x80000000
   3ddd4:	lsl	r1, r1, #12
   3ddd8:	mov	ip, #1048576	; 0x100000
   3dddc:	orr	r1, ip, r1, lsr #12
   3dde0:	beq	3ddec <__assert_fail@plt+0x2cb00>
   3dde4:	rsbs	r0, r0, #0
   3dde8:	rsc	r1, r1, #0
   3ddec:	tst	r3, #-2147483648	; 0x80000000
   3ddf0:	lsl	r3, r3, #12
   3ddf4:	orr	r3, ip, r3, lsr #12
   3ddf8:	beq	3de04 <__assert_fail@plt+0x2cb18>
   3ddfc:	rsbs	r2, r2, #0
   3de00:	rsc	r3, r3, #0
   3de04:	teq	r4, r5
   3de08:	beq	3df6c <__assert_fail@plt+0x2cc80>
   3de0c:	sub	r4, r4, #1
   3de10:	rsbs	lr, r5, #32
   3de14:	blt	3de30 <__assert_fail@plt+0x2cb44>
   3de18:	lsl	ip, r2, lr
   3de1c:	adds	r0, r0, r2, lsr r5
   3de20:	adc	r1, r1, #0
   3de24:	adds	r0, r0, r3, lsl lr
   3de28:	adcs	r1, r1, r3, asr r5
   3de2c:	b	3de4c <__assert_fail@plt+0x2cb60>
   3de30:	sub	r5, r5, #32
   3de34:	add	lr, lr, #32
   3de38:	cmp	r2, #1
   3de3c:	lsl	ip, r3, lr
   3de40:	orrcs	ip, ip, #2
   3de44:	adds	r0, r0, r3, asr r5
   3de48:	adcs	r1, r1, r3, asr #31
   3de4c:	and	r5, r1, #-2147483648	; 0x80000000
   3de50:	bpl	3de60 <__assert_fail@plt+0x2cb74>
   3de54:	rsbs	ip, ip, #0
   3de58:	rscs	r0, r0, #0
   3de5c:	rsc	r1, r1, #0
   3de60:	cmp	r1, #1048576	; 0x100000
   3de64:	bcc	3dea4 <__assert_fail@plt+0x2cbb8>
   3de68:	cmp	r1, #2097152	; 0x200000
   3de6c:	bcc	3de8c <__assert_fail@plt+0x2cba0>
   3de70:	lsrs	r1, r1, #1
   3de74:	rrxs	r0, r0
   3de78:	rrx	ip, ip
   3de7c:	add	r4, r4, #1
   3de80:	lsl	r2, r4, #21
   3de84:	cmn	r2, #4194304	; 0x400000
   3de88:	bcs	3dfe4 <__assert_fail@plt+0x2ccf8>
   3de8c:	cmp	ip, #-2147483648	; 0x80000000
   3de90:	lsrseq	ip, r0, #1
   3de94:	adcs	r0, r0, #0
   3de98:	adc	r1, r1, r4, lsl #20
   3de9c:	orr	r1, r1, r5
   3dea0:	pop	{r4, r5, pc}
   3dea4:	lsls	ip, ip, #1
   3dea8:	adcs	r0, r0, r0
   3deac:	adc	r1, r1, r1
   3deb0:	tst	r1, #1048576	; 0x100000
   3deb4:	sub	r4, r4, #1
   3deb8:	bne	3de8c <__assert_fail@plt+0x2cba0>
   3debc:	teq	r1, #0
   3dec0:	moveq	r1, r0
   3dec4:	moveq	r0, #0
   3dec8:	clz	r3, r1
   3decc:	addeq	r3, r3, #32
   3ded0:	sub	r3, r3, #11
   3ded4:	subs	r2, r3, #32
   3ded8:	bge	3defc <__assert_fail@plt+0x2cc10>
   3dedc:	adds	r2, r2, #12
   3dee0:	ble	3def8 <__assert_fail@plt+0x2cc0c>
   3dee4:	add	ip, r2, #20
   3dee8:	rsb	r2, r2, #12
   3deec:	lsl	r0, r1, ip
   3def0:	lsr	r1, r1, r2
   3def4:	b	3df0c <__assert_fail@plt+0x2cc20>
   3def8:	add	r2, r2, #20
   3defc:	rsble	ip, r2, #32
   3df00:	lsl	r1, r1, r2
   3df04:	orrle	r1, r1, r0, lsr ip
   3df08:	lslle	r0, r0, r2
   3df0c:	subs	r4, r4, r3
   3df10:	addge	r1, r1, r4, lsl #20
   3df14:	orrge	r1, r1, r5
   3df18:	popge	{r4, r5, pc}
   3df1c:	mvn	r4, r4
   3df20:	subs	r4, r4, #31
   3df24:	bge	3df60 <__assert_fail@plt+0x2cc74>
   3df28:	adds	r4, r4, #12
   3df2c:	bgt	3df48 <__assert_fail@plt+0x2cc5c>
   3df30:	add	r4, r4, #20
   3df34:	rsb	r2, r4, #32
   3df38:	lsr	r0, r0, r4
   3df3c:	orr	r0, r0, r1, lsl r2
   3df40:	orr	r1, r5, r1, lsr r4
   3df44:	pop	{r4, r5, pc}
   3df48:	rsb	r4, r4, #12
   3df4c:	rsb	r2, r4, #32
   3df50:	lsr	r0, r0, r2
   3df54:	orr	r0, r0, r1, lsl r4
   3df58:	mov	r1, r5
   3df5c:	pop	{r4, r5, pc}
   3df60:	lsr	r0, r1, r4
   3df64:	mov	r1, r5
   3df68:	pop	{r4, r5, pc}
   3df6c:	teq	r4, #0
   3df70:	eor	r3, r3, #1048576	; 0x100000
   3df74:	eoreq	r1, r1, #1048576	; 0x100000
   3df78:	addeq	r4, r4, #1
   3df7c:	subne	r5, r5, #1
   3df80:	b	3de0c <__assert_fail@plt+0x2cb20>
   3df84:	mvns	ip, r4, asr #21
   3df88:	mvnsne	ip, r5, asr #21
   3df8c:	beq	3dff4 <__assert_fail@plt+0x2cd08>
   3df90:	teq	r4, r5
   3df94:	teqeq	r0, r2
   3df98:	beq	3dfac <__assert_fail@plt+0x2ccc0>
   3df9c:	orrs	ip, r4, r0
   3dfa0:	moveq	r1, r3
   3dfa4:	moveq	r0, r2
   3dfa8:	pop	{r4, r5, pc}
   3dfac:	teq	r1, r3
   3dfb0:	movne	r1, #0
   3dfb4:	movne	r0, #0
   3dfb8:	popne	{r4, r5, pc}
   3dfbc:	lsrs	ip, r4, #21
   3dfc0:	bne	3dfd4 <__assert_fail@plt+0x2cce8>
   3dfc4:	lsls	r0, r0, #1
   3dfc8:	adcs	r1, r1, r1
   3dfcc:	orrcs	r1, r1, #-2147483648	; 0x80000000
   3dfd0:	pop	{r4, r5, pc}
   3dfd4:	adds	r4, r4, #4194304	; 0x400000
   3dfd8:	addcc	r1, r1, #1048576	; 0x100000
   3dfdc:	popcc	{r4, r5, pc}
   3dfe0:	and	r5, r1, #-2147483648	; 0x80000000
   3dfe4:	orr	r1, r5, #2130706432	; 0x7f000000
   3dfe8:	orr	r1, r1, #15728640	; 0xf00000
   3dfec:	mov	r0, #0
   3dff0:	pop	{r4, r5, pc}
   3dff4:	mvns	ip, r4, asr #21
   3dff8:	movne	r1, r3
   3dffc:	movne	r0, r2
   3e000:	mvnseq	ip, r5, asr #21
   3e004:	movne	r3, r1
   3e008:	movne	r2, r0
   3e00c:	orrs	r4, r0, r1, lsl #12
   3e010:	orrseq	r5, r2, r3, lsl #12
   3e014:	teqeq	r1, r3
   3e018:	orrne	r1, r1, #524288	; 0x80000
   3e01c:	pop	{r4, r5, pc}
   3e020:	teq	r0, #0
   3e024:	moveq	r1, #0
   3e028:	bxeq	lr
   3e02c:	push	{r4, r5, lr}
   3e030:	mov	r4, #1024	; 0x400
   3e034:	add	r4, r4, #50	; 0x32
   3e038:	mov	r5, #0
   3e03c:	mov	r1, #0
   3e040:	b	3debc <__assert_fail@plt+0x2cbd0>
   3e044:	teq	r0, #0
   3e048:	moveq	r1, #0
   3e04c:	bxeq	lr
   3e050:	push	{r4, r5, lr}
   3e054:	mov	r4, #1024	; 0x400
   3e058:	add	r4, r4, #50	; 0x32
   3e05c:	ands	r5, r0, #-2147483648	; 0x80000000
   3e060:	rsbmi	r0, r0, #0
   3e064:	mov	r1, #0
   3e068:	b	3debc <__assert_fail@plt+0x2cbd0>
   3e06c:	lsls	r2, r0, #1
   3e070:	asr	r1, r2, #3
   3e074:	rrx	r1, r1
   3e078:	lsl	r0, r2, #28
   3e07c:	andsne	r3, r2, #-16777216	; 0xff000000
   3e080:	teqne	r3, #-16777216	; 0xff000000
   3e084:	eorne	r1, r1, #939524096	; 0x38000000
   3e088:	bxne	lr
   3e08c:	teq	r2, #0
   3e090:	teqne	r3, #-16777216	; 0xff000000
   3e094:	bxeq	lr
   3e098:	push	{r4, r5, lr}
   3e09c:	mov	r4, #896	; 0x380
   3e0a0:	and	r5, r1, #-2147483648	; 0x80000000
   3e0a4:	bic	r1, r1, #-2147483648	; 0x80000000
   3e0a8:	b	3debc <__assert_fail@plt+0x2cbd0>
   3e0ac:	orrs	r2, r0, r1
   3e0b0:	bxeq	lr
   3e0b4:	push	{r4, r5, lr}
   3e0b8:	mov	r5, #0
   3e0bc:	b	3e0dc <__assert_fail@plt+0x2cdf0>
   3e0c0:	orrs	r2, r0, r1
   3e0c4:	bxeq	lr
   3e0c8:	push	{r4, r5, lr}
   3e0cc:	ands	r5, r1, #-2147483648	; 0x80000000
   3e0d0:	bpl	3e0dc <__assert_fail@plt+0x2cdf0>
   3e0d4:	rsbs	r0, r0, #0
   3e0d8:	rsc	r1, r1, #0
   3e0dc:	mov	r4, #1024	; 0x400
   3e0e0:	add	r4, r4, #50	; 0x32
   3e0e4:	lsrs	ip, r1, #22
   3e0e8:	beq	3de60 <__assert_fail@plt+0x2cb74>
   3e0ec:	mov	r2, #3
   3e0f0:	lsrs	ip, ip, #3
   3e0f4:	addne	r2, r2, #3
   3e0f8:	lsrs	ip, ip, #3
   3e0fc:	addne	r2, r2, #3
   3e100:	add	r2, r2, ip, lsr #3
   3e104:	rsb	r3, r2, #32
   3e108:	lsl	ip, r0, r3
   3e10c:	lsr	r0, r0, r2
   3e110:	orr	r0, r0, r1, lsl r3
   3e114:	lsr	r1, r1, r2
   3e118:	add	r4, r4, r2
   3e11c:	b	3de60 <__assert_fail@plt+0x2cb74>
   3e120:	cmp	r3, #0
   3e124:	cmpeq	r2, #0
   3e128:	bne	3e140 <__assert_fail@plt+0x2ce54>
   3e12c:	cmp	r1, #0
   3e130:	cmpeq	r0, #0
   3e134:	mvnne	r1, #0
   3e138:	mvnne	r0, #0
   3e13c:	b	3e15c <__assert_fail@plt+0x2ce70>
   3e140:	sub	sp, sp, #8
   3e144:	push	{sp, lr}
   3e148:	bl	3e1b8 <__assert_fail@plt+0x2cecc>
   3e14c:	ldr	lr, [sp, #4]
   3e150:	add	sp, sp, #8
   3e154:	pop	{r2, r3}
   3e158:	bx	lr
   3e15c:	push	{r1, lr}
   3e160:	mov	r0, #8
   3e164:	bl	10fec <raise@plt>
   3e168:	pop	{r1, pc}
   3e16c:	andeq	r0, r0, r0
   3e170:	vmov	d7, r0, r1
   3e174:	vldr	d6, [pc, #44]	; 3e1a8 <__assert_fail@plt+0x2cebc>
   3e178:	vldr	d5, [pc, #48]	; 3e1b0 <__assert_fail@plt+0x2cec4>
   3e17c:	mov	r0, #0
   3e180:	vmul.f64	d6, d7, d6
   3e184:	vcvt.u32.f64	s12, d6
   3e188:	vcvt.f64.u32	d4, s12
   3e18c:	vmov	r1, s12
   3e190:	vmls.f64	d7, d4, d5
   3e194:	vcvt.u32.f64	s14, d7
   3e198:	vmov	r3, s14
   3e19c:	orr	r0, r0, r3
   3e1a0:	bx	lr
   3e1a4:	nop			; (mov r0, r0)
   3e1a8:	andeq	r0, r0, r0
   3e1ac:	ldclcc	0, cr0, [r0]
   3e1b0:	andeq	r0, r0, r0
   3e1b4:	mvnsmi	r0, r0
   3e1b8:	cmp	r1, r3
   3e1bc:	push	{r4, r5, r6, r7, r8, r9, lr}
   3e1c0:	cmpeq	r0, r2
   3e1c4:	mov	r4, r0
   3e1c8:	mov	r5, r1
   3e1cc:	ldr	r9, [sp, #28]
   3e1d0:	movcc	r0, #0
   3e1d4:	movcc	r1, #0
   3e1d8:	bcc	3e2d0 <__assert_fail@plt+0x2cfe4>
   3e1dc:	cmp	r3, #0
   3e1e0:	clzeq	ip, r2
   3e1e4:	clzne	ip, r3
   3e1e8:	addeq	ip, ip, #32
   3e1ec:	cmp	r5, #0
   3e1f0:	clzeq	r1, r4
   3e1f4:	addeq	r1, r1, #32
   3e1f8:	clzne	r1, r5
   3e1fc:	sub	ip, ip, r1
   3e200:	sub	lr, ip, #32
   3e204:	lsl	r7, r3, ip
   3e208:	rsb	r8, ip, #32
   3e20c:	orr	r7, r7, r2, lsl lr
   3e210:	orr	r7, r7, r2, lsr r8
   3e214:	lsl	r6, r2, ip
   3e218:	cmp	r5, r7
   3e21c:	cmpeq	r4, r6
   3e220:	movcc	r0, #0
   3e224:	movcc	r1, #0
   3e228:	bcc	3e244 <__assert_fail@plt+0x2cf58>
   3e22c:	mov	r3, #1
   3e230:	subs	r4, r4, r6
   3e234:	lsl	r1, r3, lr
   3e238:	lsl	r0, r3, ip
   3e23c:	orr	r1, r1, r3, lsr r8
   3e240:	sbc	r5, r5, r7
   3e244:	cmp	ip, #0
   3e248:	beq	3e2d0 <__assert_fail@plt+0x2cfe4>
   3e24c:	lsrs	r3, r7, #1
   3e250:	rrx	r2, r6
   3e254:	mov	r6, ip
   3e258:	b	3e27c <__assert_fail@plt+0x2cf90>
   3e25c:	subs	r4, r4, r2
   3e260:	sbc	r5, r5, r3
   3e264:	adds	r4, r4, r4
   3e268:	adc	r5, r5, r5
   3e26c:	adds	r4, r4, #1
   3e270:	adc	r5, r5, #0
   3e274:	subs	r6, r6, #1
   3e278:	beq	3e298 <__assert_fail@plt+0x2cfac>
   3e27c:	cmp	r5, r3
   3e280:	cmpeq	r4, r2
   3e284:	bcs	3e25c <__assert_fail@plt+0x2cf70>
   3e288:	adds	r4, r4, r4
   3e28c:	adc	r5, r5, r5
   3e290:	subs	r6, r6, #1
   3e294:	bne	3e27c <__assert_fail@plt+0x2cf90>
   3e298:	lsr	r6, r4, ip
   3e29c:	lsr	r7, r5, ip
   3e2a0:	orr	r6, r6, r5, lsl r8
   3e2a4:	adds	r2, r0, r4
   3e2a8:	orr	r6, r6, r5, lsr lr
   3e2ac:	adc	r3, r1, r5
   3e2b0:	lsl	r1, r7, ip
   3e2b4:	orr	r1, r1, r6, lsl lr
   3e2b8:	lsl	r0, r6, ip
   3e2bc:	orr	r1, r1, r6, lsr r8
   3e2c0:	subs	r0, r2, r0
   3e2c4:	mov	r4, r6
   3e2c8:	mov	r5, r7
   3e2cc:	sbc	r1, r3, r1
   3e2d0:	cmp	r9, #0
   3e2d4:	popeq	{r4, r5, r6, r7, r8, r9, pc}
   3e2d8:	strd	r4, [r9]
   3e2dc:	pop	{r4, r5, r6, r7, r8, r9, pc}
   3e2e0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   3e2e4:	mov	r7, r0
   3e2e8:	ldr	r6, [pc, #72]	; 3e338 <__assert_fail@plt+0x2d04c>
   3e2ec:	ldr	r5, [pc, #72]	; 3e33c <__assert_fail@plt+0x2d050>
   3e2f0:	add	r6, pc, r6
   3e2f4:	add	r5, pc, r5
   3e2f8:	sub	r6, r6, r5
   3e2fc:	mov	r8, r1
   3e300:	mov	r9, r2
   3e304:	bl	10fa8 <fdopen@plt-0x20>
   3e308:	asrs	r6, r6, #2
   3e30c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   3e310:	mov	r4, #0
   3e314:	add	r4, r4, #1
   3e318:	ldr	r3, [r5], #4
   3e31c:	mov	r2, r9
   3e320:	mov	r1, r8
   3e324:	mov	r0, r7
   3e328:	blx	r3
   3e32c:	cmp	r6, r4
   3e330:	bne	3e314 <__assert_fail@plt+0x2d028>
   3e334:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   3e338:	andeq	r3, r1, r8, lsl ip
   3e33c:	andeq	r3, r1, r0, lsl ip
   3e340:	bx	lr
   3e344:	ldr	r3, [pc, #12]	; 3e358 <__assert_fail@plt+0x2d06c>
   3e348:	mov	r1, #0
   3e34c:	add	r3, pc, r3
   3e350:	ldr	r2, [r3]
   3e354:	b	111d8 <__cxa_atexit@plt>
   3e358:	ldrdeq	r3, [r1], -r0

Disassembly of section .fini:

0003e35c <.fini>:
   3e35c:	push	{r3, lr}
   3e360:	pop	{r3, pc}
