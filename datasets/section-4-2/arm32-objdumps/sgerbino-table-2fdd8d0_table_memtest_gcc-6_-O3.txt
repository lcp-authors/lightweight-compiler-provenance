
../repos/sgerbino-table-2fdd8d0/bin/table_memtest:     file format elf32-littlearm


Disassembly of section .init:

00011ab8 <.init>:
   11ab8:	push	{r3, lr}
   11abc:	bl	11cec <_start@@Base+0x3c>
   11ac0:	pop	{r3, pc}

Disassembly of section .plt:

00011ac4 <raise@plt-0x14>:
   11ac4:	push	{lr}		; (str lr, [sp, #-4]!)
   11ac8:	ldr	lr, [pc, #4]	; 11ad4 <raise@plt-0x4>
   11acc:	add	lr, pc, lr
   11ad0:	ldr	pc, [lr, #8]!
   11ad4:	andeq	r4, r1, ip, lsr #10

00011ad8 <raise@plt>:
   11ad8:	add	ip, pc, #0, 12
   11adc:	add	ip, ip, #20, 20	; 0x14000
   11ae0:	ldr	pc, [ip, #1324]!	; 0x52c

00011ae4 <strcmp@plt>:
   11ae4:	add	ip, pc, #0, 12
   11ae8:	add	ip, ip, #20, 20	; 0x14000
   11aec:	ldr	pc, [ip, #1316]!	; 0x524

00011af0 <free@plt>:
   11af0:	add	ip, pc, #0, 12
   11af4:	add	ip, ip, #20, 20	; 0x14000
   11af8:	ldr	pc, [ip, #1308]!	; 0x51c

00011afc <time@plt>:
   11afc:	add	ip, pc, #0, 12
   11b00:	add	ip, ip, #20, 20	; 0x14000
   11b04:	ldr	pc, [ip, #1300]!	; 0x514

00011b08 <realloc@plt>:
   11b08:	add	ip, pc, #0, 12
   11b0c:	add	ip, ip, #20, 20	; 0x14000
   11b10:	ldr	pc, [ip, #1292]!	; 0x50c

00011b14 <strcpy@plt>:
   11b14:	add	ip, pc, #0, 12
   11b18:	add	ip, ip, #20, 20	; 0x14000
   11b1c:	ldr	pc, [ip, #1284]!	; 0x504

00011b20 <malloc@plt>:
   11b20:	add	ip, pc, #0, 12
   11b24:	add	ip, ip, #20, 20	; 0x14000
   11b28:	ldr	pc, [ip, #1276]!	; 0x4fc

00011b2c <__libc_start_main@plt>:
   11b2c:	add	ip, pc, #0, 12
   11b30:	add	ip, ip, #20, 20	; 0x14000
   11b34:	ldr	pc, [ip, #1268]!	; 0x4f4

00011b38 <__gmon_start__@plt>:
   11b38:	add	ip, pc, #0, 12
   11b3c:	add	ip, ip, #20, 20	; 0x14000
   11b40:	ldr	pc, [ip, #1260]!	; 0x4ec

00011b44 <strlen@plt>:
   11b44:	add	ip, pc, #0, 12
   11b48:	add	ip, ip, #20, 20	; 0x14000
   11b4c:	ldr	pc, [ip, #1252]!	; 0x4e4

00011b50 <srand@plt>:
   11b50:	add	ip, pc, #0, 12
   11b54:	add	ip, ip, #20, 20	; 0x14000
   11b58:	ldr	pc, [ip, #1244]!	; 0x4dc

00011b5c <snprintf@plt>:
   11b5c:	add	ip, pc, #0, 12
   11b60:	add	ip, ip, #20, 20	; 0x14000
   11b64:	ldr	pc, [ip, #1236]!	; 0x4d4

00011b68 <__isoc99_sscanf@plt>:
   11b68:	add	ip, pc, #0, 12
   11b6c:	add	ip, ip, #20, 20	; 0x14000
   11b70:	ldr	pc, [ip, #1228]!	; 0x4cc

00011b74 <rand@plt>:
   11b74:	add	ip, pc, #0, 12
   11b78:	add	ip, ip, #20, 20	; 0x14000
   11b7c:	ldr	pc, [ip, #1220]!	; 0x4c4

00011b80 <abort@plt>:
   11b80:	add	ip, pc, #0, 12
   11b84:	add	ip, ip, #20, 20	; 0x14000
   11b88:	ldr	pc, [ip, #1212]!	; 0x4bc

Disassembly of section .text:

00011b8c <main@@Base>:
   11b8c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11b90:	sub	sp, sp, #28
   11b94:	mov	r4, #0
   11b98:	str	r4, [sp, #16]
   11b9c:	bl	11dec <table_new@@Base>
   11ba0:	mov	r6, r4
   11ba4:	mov	r5, r0
   11ba8:	add	r0, sp, #20
   11bac:	bl	11afc <time@plt>
   11bb0:	bl	11b50 <srand@plt>
   11bb4:	mov	r0, r5
   11bb8:	mvn	r3, #0
   11bbc:	add	r2, sp, #16
   11bc0:	ldr	r1, [pc, #228]	; 11cac <main@@Base+0x120>
   11bc4:	bl	124b4 <table_register_callback@@Base>
   11bc8:	strh	r6, [sp, #12]
   11bcc:	mov	r2, r4
   11bd0:	strb	r4, [sp, #12]
   11bd4:	add	r1, sp, #12
   11bd8:	add	r4, r4, #1
   11bdc:	mov	r0, r5
   11be0:	bl	12864 <table_add_column@@Base>
   11be4:	cmp	r4, #24
   11be8:	bne	11bc8 <main@@Base+0x3c>
   11bec:	mov	r0, r5
   11bf0:	bl	127e0 <table_get_column_length@@Base>
   11bf4:	mov	r7, #0
   11bf8:	mov	sl, r7
   11bfc:	mov	r9, #64	; 0x40
   11c00:	mov	r8, r0
   11c04:	mov	r0, r9
   11c08:	bl	11b20 <malloc@plt>
   11c0c:	mov	r6, r0
   11c10:	sub	fp, r0, #1
   11c14:	add	r4, r0, #62	; 0x3e
   11c18:	bl	11b74 <rand@plt>
   11c1c:	asr	r3, r0, #31
   11c20:	lsr	r3, r3, #25
   11c24:	add	r0, r0, r3
   11c28:	and	r0, r0, #127	; 0x7f
   11c2c:	sub	r0, r0, r3
   11c30:	strb	r0, [fp, #1]!
   11c34:	cmp	r4, fp
   11c38:	bne	11c18 <main@@Base+0x8c>
   11c3c:	mov	r0, r5
   11c40:	strb	sl, [r6, #63]	; 0x3f
   11c44:	bl	133f0 <table_add_row@@Base>
   11c48:	cmp	r8, #0
   11c4c:	movgt	r4, #0
   11c50:	ble	11c84 <main@@Base+0xf8>
   11c54:	mov	r1, r4
   11c58:	mov	r0, r5
   11c5c:	bl	12850 <table_get_column_data_type@@Base>
   11c60:	mov	r2, r4
   11c64:	mov	r3, r6
   11c68:	mov	r1, r7
   11c6c:	add	r4, r4, #1
   11c70:	str	r0, [sp]
   11c74:	mov	r0, r5
   11c78:	bl	135bc <table_set@@Base>
   11c7c:	cmp	r8, r4
   11c80:	bne	11c54 <main@@Base+0xc8>
   11c84:	mov	r0, r6
   11c88:	add	r7, r7, #1
   11c8c:	bl	11af0 <free@plt>
   11c90:	cmp	r7, #500	; 0x1f4
   11c94:	bne	11c04 <main@@Base+0x78>
   11c98:	mov	r0, r5
   11c9c:	bl	11f50 <table_delete@@Base>
   11ca0:	mov	r0, #0
   11ca4:	add	sp, sp, #28
   11ca8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11cac:	ldrdeq	r1, [r1], -r8

00011cb0 <_start@@Base>:
   11cb0:	mov	fp, #0
   11cb4:	mov	lr, #0
   11cb8:	pop	{r1}		; (ldr r1, [sp], #4)
   11cbc:	mov	r2, sp
   11cc0:	push	{r2}		; (str r2, [sp, #-4]!)
   11cc4:	push	{r0}		; (str r0, [sp, #-4]!)
   11cc8:	ldr	ip, [pc, #16]	; 11ce0 <_start@@Base+0x30>
   11ccc:	push	{ip}		; (str ip, [sp, #-4]!)
   11cd0:	ldr	r0, [pc, #12]	; 11ce4 <_start@@Base+0x34>
   11cd4:	ldr	r3, [pc, #12]	; 11ce8 <_start@@Base+0x38>
   11cd8:	bl	11b2c <__libc_start_main@plt>
   11cdc:	bl	11b80 <abort@plt>
   11ce0:	ldrdeq	r5, [r1], -ip
   11ce4:	andeq	r1, r1, ip, lsl #23
   11ce8:	andeq	r5, r1, ip, ror r1
   11cec:	ldr	r3, [pc, #20]	; 11d08 <_start@@Base+0x58>
   11cf0:	ldr	r2, [pc, #20]	; 11d0c <_start@@Base+0x5c>
   11cf4:	add	r3, pc, r3
   11cf8:	ldr	r2, [r3, r2]
   11cfc:	cmp	r2, #0
   11d00:	bxeq	lr
   11d04:	b	11b38 <__gmon_start__@plt>
   11d08:	andeq	r4, r1, r4, lsl #6
   11d0c:	andeq	r0, r0, r8, asr #32
   11d10:	ldr	r3, [pc, #28]	; 11d34 <_start@@Base+0x84>
   11d14:	ldr	r0, [pc, #28]	; 11d38 <_start@@Base+0x88>
   11d18:	sub	r3, r3, r0
   11d1c:	cmp	r3, #6
   11d20:	bxls	lr
   11d24:	ldr	r3, [pc, #16]	; 11d3c <_start@@Base+0x8c>
   11d28:	cmp	r3, #0
   11d2c:	bxeq	lr
   11d30:	bx	r3
   11d34:	andeq	r6, r2, r7, asr r0
   11d38:	andeq	r6, r2, r4, asr r0
   11d3c:	andeq	r0, r0, r0
   11d40:	ldr	r1, [pc, #36]	; 11d6c <_start@@Base+0xbc>
   11d44:	ldr	r0, [pc, #36]	; 11d70 <_start@@Base+0xc0>
   11d48:	sub	r1, r1, r0
   11d4c:	asr	r1, r1, #2
   11d50:	add	r1, r1, r1, lsr #31
   11d54:	asrs	r1, r1, #1
   11d58:	bxeq	lr
   11d5c:	ldr	r3, [pc, #16]	; 11d74 <_start@@Base+0xc4>
   11d60:	cmp	r3, #0
   11d64:	bxeq	lr
   11d68:	bx	r3
   11d6c:	andeq	r6, r2, r4, asr r0
   11d70:	andeq	r6, r2, r4, asr r0
   11d74:	andeq	r0, r0, r0
   11d78:	push	{r4, lr}
   11d7c:	ldr	r4, [pc, #24]	; 11d9c <_start@@Base+0xec>
   11d80:	ldrb	r3, [r4]
   11d84:	cmp	r3, #0
   11d88:	popne	{r4, pc}
   11d8c:	bl	11d10 <_start@@Base+0x60>
   11d90:	mov	r3, #1
   11d94:	strb	r3, [r4]
   11d98:	pop	{r4, pc}
   11d9c:	andeq	r6, r2, r4, asr r0
   11da0:	ldr	r0, [pc, #40]	; 11dd0 <_start@@Base+0x120>
   11da4:	ldr	r3, [r0]
   11da8:	cmp	r3, #0
   11dac:	bne	11db4 <_start@@Base+0x104>
   11db0:	b	11d40 <_start@@Base+0x90>
   11db4:	ldr	r3, [pc, #24]	; 11dd4 <_start@@Base+0x124>
   11db8:	cmp	r3, #0
   11dbc:	beq	11db0 <_start@@Base+0x100>
   11dc0:	push	{r4, lr}
   11dc4:	blx	r3
   11dc8:	pop	{r4, lr}
   11dcc:	b	11d40 <_start@@Base+0x90>
   11dd0:	andeq	r5, r2, r4, lsl pc
   11dd4:	andeq	r0, r0, r0
   11dd8:	ldr	r1, [sp]
   11ddc:	ldr	r2, [r1]
   11de0:	orr	r3, r2, r3
   11de4:	str	r3, [r1]
   11de8:	bx	lr

00011dec <table_new@@Base>:
   11dec:	push	{r4, lr}
   11df0:	mov	r0, #56	; 0x38
   11df4:	bl	11b20 <malloc@plt>
   11df8:	mov	r2, #0
   11dfc:	mov	r1, #10
   11e00:	mov	ip, #20
   11e04:	str	ip, [r0, #24]
   11e08:	str	r2, [r0]
   11e0c:	str	r2, [r0, #4]
   11e10:	str	r2, [r0, #12]
   11e14:	str	r2, [r0, #16]
   11e18:	str	r2, [r0, #20]
   11e1c:	str	r2, [r0, #28]
   11e20:	str	r2, [r0, #36]	; 0x24
   11e24:	str	r2, [r0, #40]	; 0x28
   11e28:	str	r2, [r0, #44]	; 0x2c
   11e2c:	str	r2, [r0, #32]
   11e30:	str	r2, [r0, #52]	; 0x34
   11e34:	str	r1, [r0, #8]
   11e38:	str	r1, [r0, #48]	; 0x30
   11e3c:	pop	{r4, pc}

00011e40 <table_init@@Base>:
   11e40:	mov	r3, #0
   11e44:	mov	r2, #10
   11e48:	mov	r1, #20
   11e4c:	str	r1, [r0, #24]
   11e50:	str	r3, [r0]
   11e54:	str	r3, [r0, #4]
   11e58:	str	r3, [r0, #12]
   11e5c:	str	r3, [r0, #16]
   11e60:	str	r3, [r0, #20]
   11e64:	str	r3, [r0, #28]
   11e68:	str	r3, [r0, #36]	; 0x24
   11e6c:	str	r3, [r0, #40]	; 0x28
   11e70:	str	r3, [r0, #44]	; 0x2c
   11e74:	str	r3, [r0, #32]
   11e78:	str	r3, [r0, #52]	; 0x34
   11e7c:	str	r2, [r0, #8]
   11e80:	str	r2, [r0, #48]	; 0x30
   11e84:	bx	lr

00011e88 <table_destroy@@Base>:
   11e88:	push	{r4, r5, r6, lr}
   11e8c:	subs	r5, r0, #0
   11e90:	popeq	{r4, r5, r6, pc}
   11e94:	mvn	r2, #0
   11e98:	mov	r1, r2
   11e9c:	mov	r3, #64	; 0x40
   11ea0:	bl	126f0 <table_notify@@Base>
   11ea4:	mov	r0, r5
   11ea8:	bl	133e8 <table_get_row_length@@Base>
   11eac:	subs	r6, r0, #0
   11eb0:	movgt	r4, #0
   11eb4:	ble	11ed0 <table_destroy@@Base+0x48>
   11eb8:	mov	r1, r4
   11ebc:	mov	r0, r5
   11ec0:	add	r4, r4, #1
   11ec4:	bl	13394 <table_row_destroy@@Base>
   11ec8:	cmp	r6, r4
   11ecc:	bne	11eb8 <table_destroy@@Base+0x30>
   11ed0:	ldr	r0, [r5, #16]
   11ed4:	cmp	r0, #0
   11ed8:	beq	11ee0 <table_destroy@@Base+0x58>
   11edc:	bl	11af0 <free@plt>
   11ee0:	mov	r0, r5
   11ee4:	bl	127e0 <table_get_column_length@@Base>
   11ee8:	subs	r6, r0, #0
   11eec:	movgt	r4, #0
   11ef0:	ble	11f0c <table_destroy@@Base+0x84>
   11ef4:	mov	r1, r4
   11ef8:	mov	r0, r5
   11efc:	add	r4, r4, #1
   11f00:	bl	127c8 <table_column_destroy@@Base>
   11f04:	cmp	r6, r4
   11f08:	bne	11ef4 <table_destroy@@Base+0x6c>
   11f0c:	ldr	r0, [r5]
   11f10:	cmp	r0, #0
   11f14:	beq	11f1c <table_destroy@@Base+0x94>
   11f18:	bl	11af0 <free@plt>
   11f1c:	ldr	r0, [r5, #36]	; 0x24
   11f20:	cmp	r0, #0
   11f24:	beq	11f2c <table_destroy@@Base+0xa4>
   11f28:	bl	11af0 <free@plt>
   11f2c:	ldr	r0, [r5, #40]	; 0x28
   11f30:	cmp	r0, #0
   11f34:	beq	11f3c <table_destroy@@Base+0xb4>
   11f38:	bl	11af0 <free@plt>
   11f3c:	ldr	r0, [r5, #44]	; 0x2c
   11f40:	cmp	r0, #0
   11f44:	popeq	{r4, r5, r6, pc}
   11f48:	pop	{r4, r5, r6, lr}
   11f4c:	b	11af0 <free@plt>

00011f50 <table_delete@@Base>:
   11f50:	push	{r4, lr}
   11f54:	mov	r4, r0
   11f58:	bl	11e88 <table_destroy@@Base>
   11f5c:	mov	r0, r4
   11f60:	pop	{r4, lr}
   11f64:	b	11af0 <free@plt>

00011f68 <table_dupe@@Base>:
   11f68:	push	{r4, r5, r6, r7, r8, r9, lr}
   11f6c:	sub	sp, sp, #20
   11f70:	mov	r6, r0
   11f74:	bl	133e8 <table_get_row_length@@Base>
   11f78:	mov	r4, #0
   11f7c:	mov	r9, r0
   11f80:	mov	r0, r6
   11f84:	bl	127e0 <table_get_column_length@@Base>
   11f88:	mov	r8, r0
   11f8c:	mov	r0, #56	; 0x38
   11f90:	bl	11b20 <malloc@plt>
   11f94:	mov	r3, #10
   11f98:	mov	r2, #20
   11f9c:	cmp	r8, #0
   11fa0:	mov	r7, r0
   11fa4:	str	r2, [r0, #24]
   11fa8:	str	r4, [r0]
   11fac:	str	r4, [r0, #4]
   11fb0:	str	r4, [r0, #12]
   11fb4:	str	r4, [r0, #16]
   11fb8:	str	r4, [r0, #20]
   11fbc:	str	r4, [r0, #28]
   11fc0:	str	r4, [r0, #36]	; 0x24
   11fc4:	str	r4, [r0, #40]	; 0x28
   11fc8:	str	r4, [r0, #44]	; 0x2c
   11fcc:	str	r4, [r0, #32]
   11fd0:	str	r4, [r0, #52]	; 0x34
   11fd4:	str	r3, [r0, #8]
   11fd8:	str	r3, [r0, #48]	; 0x30
   11fdc:	ble	12018 <table_dupe@@Base+0xb0>
   11fe0:	mov	r1, r4
   11fe4:	mov	r0, r6
   11fe8:	bl	12b1c <table_get_column_name@@Base>
   11fec:	mov	r1, r4
   11ff0:	add	r4, r4, #1
   11ff4:	mov	r5, r0
   11ff8:	mov	r0, r6
   11ffc:	bl	12850 <table_get_column_data_type@@Base>
   12000:	mov	r1, r5
   12004:	mov	r2, r0
   12008:	mov	r0, r7
   1200c:	bl	12864 <table_add_column@@Base>
   12010:	cmp	r8, r4
   12014:	bne	11fe0 <table_dupe@@Base+0x78>
   12018:	cmp	r9, #0
   1201c:	movgt	r5, #0
   12020:	ble	120f0 <table_dupe@@Base+0x188>
   12024:	mov	r0, r7
   12028:	bl	133f0 <table_add_row@@Base>
   1202c:	cmp	r8, #0
   12030:	movgt	r4, #0
   12034:	ble	120e4 <table_dupe@@Base+0x17c>
   12038:	mov	r1, r4
   1203c:	mov	r0, r6
   12040:	bl	12850 <table_get_column_data_type@@Base>
   12044:	cmp	r0, #23
   12048:	ldrls	pc, [pc, r0, lsl #2]
   1204c:	b	120d8 <table_dupe@@Base+0x170>
   12050:	andeq	r2, r1, ip, asr #2
   12054:	andeq	r2, r1, r0, asr #7
   12058:	muleq	r1, r8, r3
   1205c:	andeq	r2, r1, r0, ror r3
   12060:	andeq	r2, r1, r8, asr #6
   12064:	andeq	r2, r1, r0, ror #8
   12068:	andeq	r2, r1, r8, lsr r4
   1206c:	andeq	r2, r1, r0, lsl r4
   12070:	andeq	r2, r1, r8, ror #7
   12074:	andeq	r2, r1, r0, lsr #6
   12078:	strdeq	r2, [r1], -r8
   1207c:	ldrdeq	r2, [r1], -r0
   12080:	andeq	r2, r1, r8, lsr #5
   12084:	andeq	r2, r1, r0, lsl #5
   12088:	andeq	r2, r1, r8, asr r2
   1208c:	andeq	r2, r1, r0, lsr r2
   12090:	andeq	r2, r1, ip, lsl #4
   12094:	andeq	r2, r1, r8, ror #3
   12098:	andeq	r2, r1, r4, asr #3
   1209c:	muleq	r1, ip, r1
   120a0:	andeq	r2, r1, r4, ror r1
   120a4:	andeq	r2, r1, r4, lsr #2
   120a8:	strdeq	r2, [r1], -ip
   120ac:	strheq	r2, [r1], -r0
   120b0:	mov	r2, r4
   120b4:	mov	r1, r5
   120b8:	mov	r0, r6
   120bc:	bl	13364 <table_get_ptr@@Base>
   120c0:	add	r3, sp, #12
   120c4:	mov	r2, r4
   120c8:	mov	r1, r5
   120cc:	str	r0, [sp, #12]
   120d0:	mov	r0, r7
   120d4:	bl	14494 <table_set_ptr@@Base>
   120d8:	add	r4, r4, #1
   120dc:	cmp	r8, r4
   120e0:	bne	12038 <table_dupe@@Base+0xd0>
   120e4:	add	r5, r5, #1
   120e8:	cmp	r9, r5
   120ec:	bne	12024 <table_dupe@@Base+0xbc>
   120f0:	mov	r0, r7
   120f4:	add	sp, sp, #20
   120f8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   120fc:	mov	r2, r4
   12100:	mov	r1, r5
   12104:	mov	r0, r6
   12108:	bl	1319c <table_get_bool@@Base>
   1210c:	mov	r2, r4
   12110:	mov	r1, r5
   12114:	mov	r3, r0
   12118:	mov	r0, r7
   1211c:	bl	13908 <table_set_bool@@Base>
   12120:	b	120d8 <table_dupe@@Base+0x170>
   12124:	mov	r2, r4
   12128:	mov	r1, r5
   1212c:	mov	r0, r6
   12130:	bl	13354 <table_get_string@@Base>
   12134:	mov	r2, r4
   12138:	mov	r1, r5
   1213c:	mov	r3, r0
   12140:	mov	r0, r7
   12144:	bl	1431c <table_set_string@@Base>
   12148:	b	120d8 <table_dupe@@Base+0x170>
   1214c:	mov	r2, r4
   12150:	mov	r1, r5
   12154:	mov	r0, r6
   12158:	bl	131b0 <table_get_int@@Base>
   1215c:	mov	r2, r4
   12160:	mov	r1, r5
   12164:	mov	r3, r0
   12168:	mov	r0, r7
   1216c:	bl	13984 <table_set_int@@Base>
   12170:	b	120d8 <table_dupe@@Base+0x170>
   12174:	mov	r2, r4
   12178:	mov	r1, r5
   1217c:	mov	r0, r6
   12180:	bl	13340 <table_get_uchar@@Base>
   12184:	mov	r2, r4
   12188:	mov	r1, r5
   1218c:	mov	r3, r0
   12190:	mov	r0, r7
   12194:	bl	14418 <table_set_uchar@@Base>
   12198:	b	120d8 <table_dupe@@Base+0x170>
   1219c:	mov	r2, r4
   121a0:	mov	r1, r5
   121a4:	mov	r0, r6
   121a8:	bl	1332c <table_get_char@@Base>
   121ac:	mov	r2, r4
   121b0:	mov	r1, r5
   121b4:	mov	r3, r0
   121b8:	mov	r0, r7
   121bc:	bl	1439c <table_set_char@@Base>
   121c0:	b	120d8 <table_dupe@@Base+0x170>
   121c4:	mov	r2, r4
   121c8:	mov	r1, r5
   121cc:	mov	r0, r6
   121d0:	bl	13318 <table_get_ldouble@@Base>
   121d4:	mov	r2, r4
   121d8:	mov	r1, r5
   121dc:	mov	r0, r7
   121e0:	bl	14284 <table_set_ldouble@@Base>
   121e4:	b	120d8 <table_dupe@@Base+0x170>
   121e8:	mov	r2, r4
   121ec:	mov	r1, r5
   121f0:	mov	r0, r6
   121f4:	bl	13304 <table_get_double@@Base>
   121f8:	mov	r2, r4
   121fc:	mov	r1, r5
   12200:	mov	r0, r7
   12204:	bl	141ec <table_set_double@@Base>
   12208:	b	120d8 <table_dupe@@Base+0x170>
   1220c:	mov	r2, r4
   12210:	mov	r1, r5
   12214:	mov	r0, r6
   12218:	bl	132f0 <table_get_float@@Base>
   1221c:	mov	r2, r4
   12220:	mov	r1, r5
   12224:	mov	r0, r7
   12228:	bl	14170 <table_set_float@@Base>
   1222c:	b	120d8 <table_dupe@@Base+0x170>
   12230:	mov	r2, r4
   12234:	mov	r1, r5
   12238:	mov	r0, r6
   1223c:	bl	132dc <table_get_ullong@@Base>
   12240:	mov	r2, r4
   12244:	strd	r0, [sp]
   12248:	mov	r1, r5
   1224c:	mov	r0, r7
   12250:	bl	140e8 <table_set_ullong@@Base>
   12254:	b	120d8 <table_dupe@@Base+0x170>
   12258:	mov	r2, r4
   1225c:	mov	r1, r5
   12260:	mov	r0, r6
   12264:	bl	132c8 <table_get_llong@@Base>
   12268:	mov	r2, r4
   1226c:	strd	r0, [sp]
   12270:	mov	r1, r5
   12274:	mov	r0, r7
   12278:	bl	14060 <table_set_llong@@Base>
   1227c:	b	120d8 <table_dupe@@Base+0x170>
   12280:	mov	r2, r4
   12284:	mov	r1, r5
   12288:	mov	r0, r6
   1228c:	bl	132b4 <table_get_ulong@@Base>
   12290:	mov	r2, r4
   12294:	mov	r1, r5
   12298:	mov	r3, r0
   1229c:	mov	r0, r7
   122a0:	bl	13fe4 <table_set_ulong@@Base>
   122a4:	b	120d8 <table_dupe@@Base+0x170>
   122a8:	mov	r2, r4
   122ac:	mov	r1, r5
   122b0:	mov	r0, r6
   122b4:	bl	132a0 <table_get_long@@Base>
   122b8:	mov	r2, r4
   122bc:	mov	r1, r5
   122c0:	mov	r3, r0
   122c4:	mov	r0, r7
   122c8:	bl	13f68 <table_set_long@@Base>
   122cc:	b	120d8 <table_dupe@@Base+0x170>
   122d0:	mov	r2, r4
   122d4:	mov	r1, r5
   122d8:	mov	r0, r6
   122dc:	bl	1328c <table_get_ushort@@Base>
   122e0:	mov	r2, r4
   122e4:	mov	r1, r5
   122e8:	mov	r3, r0
   122ec:	mov	r0, r7
   122f0:	bl	13eec <table_set_ushort@@Base>
   122f4:	b	120d8 <table_dupe@@Base+0x170>
   122f8:	mov	r2, r4
   122fc:	mov	r1, r5
   12300:	mov	r0, r6
   12304:	bl	13278 <table_get_short@@Base>
   12308:	mov	r2, r4
   1230c:	mov	r1, r5
   12310:	mov	r3, r0
   12314:	mov	r0, r7
   12318:	bl	13e70 <table_set_short@@Base>
   1231c:	b	120d8 <table_dupe@@Base+0x170>
   12320:	mov	r2, r4
   12324:	mov	r1, r5
   12328:	mov	r0, r6
   1232c:	bl	13264 <table_get_uint64@@Base>
   12330:	mov	r2, r4
   12334:	strd	r0, [sp]
   12338:	mov	r1, r5
   1233c:	mov	r0, r7
   12340:	bl	13de8 <table_set_uint64@@Base>
   12344:	b	120d8 <table_dupe@@Base+0x170>
   12348:	mov	r2, r4
   1234c:	mov	r1, r5
   12350:	mov	r0, r6
   12354:	bl	13200 <table_get_int16@@Base>
   12358:	mov	r2, r4
   1235c:	mov	r1, r5
   12360:	mov	r3, r0
   12364:	mov	r0, r7
   12368:	bl	13b74 <table_set_int16@@Base>
   1236c:	b	120d8 <table_dupe@@Base+0x170>
   12370:	mov	r2, r4
   12374:	mov	r1, r5
   12378:	mov	r0, r6
   1237c:	bl	131ec <table_get_uint8@@Base>
   12380:	mov	r2, r4
   12384:	mov	r1, r5
   12388:	mov	r3, r0
   1238c:	mov	r0, r7
   12390:	bl	13af8 <table_set_uint8@@Base>
   12394:	b	120d8 <table_dupe@@Base+0x170>
   12398:	mov	r2, r4
   1239c:	mov	r1, r5
   123a0:	mov	r0, r6
   123a4:	bl	131d8 <table_get_int8@@Base>
   123a8:	mov	r2, r4
   123ac:	mov	r1, r5
   123b0:	mov	r3, r0
   123b4:	mov	r0, r7
   123b8:	bl	13a7c <table_set_int8@@Base>
   123bc:	b	120d8 <table_dupe@@Base+0x170>
   123c0:	mov	r2, r4
   123c4:	mov	r1, r5
   123c8:	mov	r0, r6
   123cc:	bl	131c4 <table_get_uint@@Base>
   123d0:	mov	r2, r4
   123d4:	mov	r1, r5
   123d8:	mov	r3, r0
   123dc:	mov	r0, r7
   123e0:	bl	13a00 <table_set_uint@@Base>
   123e4:	b	120d8 <table_dupe@@Base+0x170>
   123e8:	mov	r2, r4
   123ec:	mov	r1, r5
   123f0:	mov	r0, r6
   123f4:	bl	13250 <table_get_int64@@Base>
   123f8:	mov	r2, r4
   123fc:	strd	r0, [sp]
   12400:	mov	r1, r5
   12404:	mov	r0, r7
   12408:	bl	13d64 <table_set_int64@@Base>
   1240c:	b	120d8 <table_dupe@@Base+0x170>
   12410:	mov	r2, r4
   12414:	mov	r1, r5
   12418:	mov	r0, r6
   1241c:	bl	1323c <table_get_uint32@@Base>
   12420:	mov	r2, r4
   12424:	mov	r1, r5
   12428:	mov	r3, r0
   1242c:	mov	r0, r7
   12430:	bl	13ce8 <table_set_uint32@@Base>
   12434:	b	120d8 <table_dupe@@Base+0x170>
   12438:	mov	r2, r4
   1243c:	mov	r1, r5
   12440:	mov	r0, r6
   12444:	bl	13228 <table_get_int32@@Base>
   12448:	mov	r2, r4
   1244c:	mov	r1, r5
   12450:	mov	r3, r0
   12454:	mov	r0, r7
   12458:	bl	13c6c <table_set_int32@@Base>
   1245c:	b	120d8 <table_dupe@@Base+0x170>
   12460:	mov	r2, r4
   12464:	mov	r1, r5
   12468:	mov	r0, r6
   1246c:	bl	13214 <table_get_uint16@@Base>
   12470:	mov	r2, r4
   12474:	mov	r1, r5
   12478:	mov	r3, r0
   1247c:	mov	r0, r7
   12480:	bl	13bf0 <table_set_uint16@@Base>
   12484:	b	120d8 <table_dupe@@Base+0x170>

00012488 <table_get_major_version@@Base>:
   12488:	mov	r0, #0
   1248c:	bx	lr

00012490 <table_get_minor_version@@Base>:
   12490:	mov	r0, #0
   12494:	bx	lr

00012498 <table_get_patch_version@@Base>:
   12498:	mov	r0, #0
   1249c:	bx	lr

000124a0 <table_get_version@@Base>:
   124a0:	ldr	r0, [pc]	; 124a8 <table_get_version@@Base+0x8>
   124a4:	bx	lr
   124a8:	muleq	r1, r0, r2

000124ac <table_get_callback_length@@Base>:
   124ac:	ldr	r0, [r0, #32]
   124b0:	bx	lr

000124b4 <table_register_callback@@Base>:
   124b4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   124b8:	ldr	r5, [r0, #32]
   124bc:	ldr	r7, [r0, #36]	; 0x24
   124c0:	cmp	r5, #0
   124c4:	ble	1251c <table_register_callback@@Base+0x68>
   124c8:	mov	ip, #0
   124cc:	sub	lr, r7, #4
   124d0:	b	124e0 <table_register_callback@@Base+0x2c>
   124d4:	add	ip, ip, #1
   124d8:	cmp	ip, r5
   124dc:	beq	1251c <table_register_callback@@Base+0x68>
   124e0:	ldr	r4, [lr, #4]!
   124e4:	lsl	r6, ip, #2
   124e8:	cmp	r1, r4
   124ec:	bne	124d4 <table_register_callback@@Base+0x20>
   124f0:	ldr	r4, [r0, #40]	; 0x28
   124f4:	ldr	r4, [r4, ip, lsl #2]
   124f8:	cmp	r2, r4
   124fc:	bne	124d4 <table_register_callback@@Base+0x20>
   12500:	cmp	ip, #0
   12504:	beq	1251c <table_register_callback@@Base+0x68>
   12508:	ldr	r1, [r0, #44]	; 0x2c
   1250c:	ldr	r2, [r1, r6]
   12510:	orr	r3, r2, r3
   12514:	str	r3, [r1, r6]
   12518:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1251c:	ldr	sl, [r0, #48]	; 0x30
   12520:	mov	r9, r1
   12524:	mov	r8, r0
   12528:	mov	r1, sl
   1252c:	mov	r0, r5
   12530:	mov	r6, r3
   12534:	mov	r4, r2
   12538:	bl	1514c <table_get_cell_ptr@@Base+0x204>
   1253c:	cmp	r1, #0
   12540:	beq	12568 <table_register_callback@@Base+0xb4>
   12544:	str	r9, [r7, r5, lsl #2]
   12548:	ldr	r3, [r8, #40]	; 0x28
   1254c:	str	r4, [r3, r5, lsl #2]
   12550:	ldr	r3, [r8, #44]	; 0x2c
   12554:	str	r6, [r3, r5, lsl #2]
   12558:	ldr	r3, [r8, #32]
   1255c:	add	r3, r3, #1
   12560:	str	r3, [r8, #32]
   12564:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12568:	ldr	r1, [r8, #52]	; 0x34
   1256c:	mov	r0, r7
   12570:	add	r1, sl, r1
   12574:	str	r1, [r8, #52]	; 0x34
   12578:	lsl	r1, r1, #2
   1257c:	bl	11b08 <realloc@plt>
   12580:	ldr	r1, [r8, #52]	; 0x34
   12584:	lsl	r1, r1, #2
   12588:	str	r0, [r8, #36]	; 0x24
   1258c:	ldr	r0, [r8, #40]	; 0x28
   12590:	bl	11b08 <realloc@plt>
   12594:	ldr	r1, [r8, #52]	; 0x34
   12598:	lsl	r1, r1, #2
   1259c:	str	r0, [r8, #40]	; 0x28
   125a0:	ldr	r0, [r8, #44]	; 0x2c
   125a4:	bl	11b08 <realloc@plt>
   125a8:	ldr	r7, [r8, #36]	; 0x24
   125ac:	ldr	r5, [r8, #32]
   125b0:	str	r0, [r8, #44]	; 0x2c
   125b4:	b	12544 <table_register_callback@@Base+0x90>

000125b8 <table_unregister_callback@@Base>:
   125b8:	push	{r4, r5, r6, lr}
   125bc:	ldr	lr, [r0, #32]
   125c0:	cmp	lr, #0
   125c4:	pople	{r4, r5, r6, pc}
   125c8:	ldr	r6, [r0, #36]	; 0x24
   125cc:	mov	r3, #0
   125d0:	sub	r4, r6, #4
   125d4:	b	125e4 <table_unregister_callback@@Base+0x2c>
   125d8:	add	r3, r3, #1
   125dc:	cmp	r3, lr
   125e0:	beq	126b0 <table_unregister_callback@@Base+0xf8>
   125e4:	ldr	r5, [r4, #4]!
   125e8:	lsl	ip, r3, #2
   125ec:	cmp	r1, r5
   125f0:	bne	125d8 <table_unregister_callback@@Base+0x20>
   125f4:	ldr	r5, [r0, #40]	; 0x28
   125f8:	ldr	r5, [r5, r3, lsl #2]
   125fc:	cmp	r2, r5
   12600:	bne	125d8 <table_unregister_callback@@Base+0x20>
   12604:	sub	lr, lr, #1
   12608:	cmp	lr, r3
   1260c:	bgt	12618 <table_unregister_callback@@Base+0x60>
   12610:	b	12654 <table_unregister_callback@@Base+0x9c>
   12614:	ldr	r6, [r0, #36]	; 0x24
   12618:	add	r2, ip, #4
   1261c:	add	r3, r3, #1
   12620:	ldr	r1, [r6, r2]
   12624:	str	r1, [r6, ip]
   12628:	ldr	r1, [r0, #40]	; 0x28
   1262c:	ldr	lr, [r1, r2]
   12630:	str	lr, [r1, ip]
   12634:	ldr	r1, [r0, #44]	; 0x2c
   12638:	ldr	lr, [r1, r2]
   1263c:	str	lr, [r1, ip]
   12640:	ldr	lr, [r0, #32]
   12644:	mov	ip, r2
   12648:	sub	lr, lr, #1
   1264c:	cmp	lr, r3
   12650:	bgt	12614 <table_unregister_callback@@Base+0x5c>
   12654:	ldr	r6, [r0, #48]	; 0x30
   12658:	str	lr, [r0, #32]
   1265c:	mov	r4, r0
   12660:	mov	r1, r6
   12664:	mov	r0, lr
   12668:	bl	1514c <table_get_cell_ptr@@Base+0x204>
   1266c:	cmp	r1, #0
   12670:	popne	{r4, r5, r6, pc}
   12674:	ldr	r5, [r4, #52]	; 0x34
   12678:	sub	r5, r5, r6
   1267c:	cmp	r5, #0
   12680:	str	r5, [r4, #52]	; 0x34
   12684:	bne	126b4 <table_unregister_callback@@Base+0xfc>
   12688:	ldr	r0, [r4, #36]	; 0x24
   1268c:	bl	11af0 <free@plt>
   12690:	ldr	r0, [r4, #40]	; 0x28
   12694:	bl	11af0 <free@plt>
   12698:	ldr	r0, [r4, #44]	; 0x2c
   1269c:	bl	11af0 <free@plt>
   126a0:	str	r5, [r4, #36]	; 0x24
   126a4:	str	r5, [r4, #40]	; 0x28
   126a8:	str	r5, [r4, #44]	; 0x2c
   126ac:	pop	{r4, r5, r6, pc}
   126b0:	pop	{r4, r5, r6, pc}
   126b4:	lsl	r1, r5, #2
   126b8:	ldr	r0, [r4, #36]	; 0x24
   126bc:	bl	11b08 <realloc@plt>
   126c0:	ldr	r1, [r4, #52]	; 0x34
   126c4:	lsl	r1, r1, #2
   126c8:	str	r0, [r4, #36]	; 0x24
   126cc:	ldr	r0, [r4, #40]	; 0x28
   126d0:	bl	11b08 <realloc@plt>
   126d4:	ldr	r1, [r4, #52]	; 0x34
   126d8:	lsl	r1, r1, #2
   126dc:	str	r0, [r4, #40]	; 0x28
   126e0:	ldr	r0, [r4, #44]	; 0x2c
   126e4:	bl	11b08 <realloc@plt>
   126e8:	str	r0, [r4, #44]	; 0x2c
   126ec:	pop	{r4, r5, r6, pc}

000126f0 <table_notify@@Base>:
   126f0:	ldr	ip, [r0, #32]
   126f4:	cmp	ip, #0
   126f8:	bxle	lr
   126fc:	push	{r4, r5, r6, r7, r8, r9, lr}
   12700:	mov	r6, r3
   12704:	sub	sp, sp, #12
   12708:	mov	r8, r2
   1270c:	mov	r7, r1
   12710:	mov	r5, r0
   12714:	mov	r4, #0
   12718:	b	12728 <table_notify@@Base+0x38>
   1271c:	add	r4, r4, #1
   12720:	cmp	r4, ip
   12724:	bge	12770 <table_notify@@Base+0x80>
   12728:	ldr	r0, [r5, #44]	; 0x2c
   1272c:	ldr	r0, [r0, r4, lsl #2]
   12730:	tst	r6, r0
   12734:	beq	1271c <table_notify@@Base+0x2c>
   12738:	ldr	r2, [r5, #40]	; 0x28
   1273c:	ldr	r0, [r5, #36]	; 0x24
   12740:	mov	r3, r6
   12744:	ldr	r1, [r2, r4, lsl #2]
   12748:	mov	r2, r8
   1274c:	str	r1, [sp]
   12750:	mov	r1, r7
   12754:	ldr	r9, [r0, r4, lsl #2]
   12758:	mov	r0, r5
   1275c:	blx	r9
   12760:	ldr	ip, [r5, #32]
   12764:	add	r4, r4, #1
   12768:	cmp	r4, ip
   1276c:	blt	12728 <table_notify@@Base+0x38>
   12770:	add	sp, sp, #12
   12774:	pop	{r4, r5, r6, r7, r8, r9, pc}

00012778 <table_column_init@@Base>:
   12778:	add	r1, r1, r1, lsl #1
   1277c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12780:	lsl	r4, r1, #2
   12784:	ldr	r6, [r0]
   12788:	mov	r0, r2
   1278c:	mov	r9, r3
   12790:	mov	r7, r2
   12794:	bl	11b44 <strlen@plt>
   12798:	ldr	r8, [sp, #32]
   1279c:	add	r5, r6, r4
   127a0:	add	r0, r0, #1
   127a4:	bl	11b20 <malloc@plt>
   127a8:	subs	r3, r0, #0
   127ac:	str	r0, [r6, r4]
   127b0:	beq	127bc <table_column_init@@Base+0x44>
   127b4:	mov	r1, r7
   127b8:	bl	11b14 <strcpy@plt>
   127bc:	str	r9, [r5, #4]
   127c0:	str	r8, [r5, #8]
   127c4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

000127c8 <table_column_destroy@@Base>:
   127c8:	ldr	r3, [r0]
   127cc:	add	r1, r1, r1, lsl #1
   127d0:	ldr	r0, [r3, r1, lsl #2]
   127d4:	cmp	r0, #0
   127d8:	bxeq	lr
   127dc:	b	11af0 <free@plt>

000127e0 <table_get_column_length@@Base>:
   127e0:	ldr	r0, [r0, #4]
   127e4:	bx	lr

000127e8 <table_get_column@@Base>:
   127e8:	push	{r4, r5, r6, r7, r8, lr}
   127ec:	ldr	r7, [r0, #4]
   127f0:	cmp	r7, #0
   127f4:	ble	12844 <table_get_column@@Base+0x5c>
   127f8:	mov	r4, #0
   127fc:	mov	r6, r1
   12800:	ldr	r8, [r0]
   12804:	mov	r5, r4
   12808:	b	12818 <table_get_column@@Base+0x30>
   1280c:	add	r5, r5, #1
   12810:	cmp	r7, r5
   12814:	beq	12838 <table_get_column@@Base+0x50>
   12818:	ldr	r0, [r8, r4]
   1281c:	mov	r1, r6
   12820:	bl	11ae4 <strcmp@plt>
   12824:	add	r4, r4, #12
   12828:	cmp	r0, #0
   1282c:	bne	1280c <table_get_column@@Base+0x24>
   12830:	mov	r0, r5
   12834:	pop	{r4, r5, r6, r7, r8, pc}
   12838:	mvn	r5, #0
   1283c:	mov	r0, r5
   12840:	pop	{r4, r5, r6, r7, r8, pc}
   12844:	mvneq	r5, #0
   12848:	movne	r5, #0
   1284c:	b	12830 <table_get_column@@Base+0x48>

00012850 <table_get_column_data_type@@Base>:
   12850:	ldr	r3, [r0]
   12854:	add	r1, r1, r1, lsl #1
   12858:	add	r3, r3, r1, lsl #2
   1285c:	ldr	r0, [r3, #4]
   12860:	bx	lr

00012864 <table_add_column@@Base>:
   12864:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12868:	mov	r5, r0
   1286c:	ldmib	r0, {r0, r6}
   12870:	sub	sp, sp, #12
   12874:	mov	r9, r1
   12878:	mov	r1, r6
   1287c:	mov	r8, r2
   12880:	bl	1514c <table_get_cell_ptr@@Base+0x204>
   12884:	subs	r4, r1, #0
   12888:	beq	12938 <table_add_column@@Base+0xd4>
   1288c:	mov	r0, r5
   12890:	bl	133e8 <table_get_row_length@@Base>
   12894:	ldr	r6, [r5, #4]
   12898:	add	r4, r6, r6, lsl #1
   1289c:	lsl	r4, r4, #2
   128a0:	mov	r7, r0
   128a4:	mov	r0, r8
   128a8:	bl	13174 <table_get_default_compare_function_for_data_type@@Base>
   128ac:	mov	fp, r0
   128b0:	mov	r0, r9
   128b4:	bl	11b44 <strlen@plt>
   128b8:	ldr	r3, [r5]
   128bc:	add	sl, r3, r4
   128c0:	str	r3, [sp, #4]
   128c4:	add	r0, r0, #1
   128c8:	bl	11b20 <malloc@plt>
   128cc:	ldr	r3, [sp, #4]
   128d0:	cmp	r0, #0
   128d4:	str	r0, [r3, r4]
   128d8:	beq	128e4 <table_add_column@@Base+0x80>
   128dc:	mov	r1, r9
   128e0:	bl	11b14 <strcpy@plt>
   128e4:	cmp	r7, #0
   128e8:	stmib	sl, {r8, fp}
   128ec:	ble	12910 <table_add_column@@Base+0xac>
   128f0:	mov	r4, #0
   128f4:	mov	r1, r4
   128f8:	mov	r2, r6
   128fc:	mov	r0, r5
   12900:	add	r4, r4, #1
   12904:	bl	144f0 <table_cell_init@@Base>
   12908:	cmp	r7, r4
   1290c:	bne	128f4 <table_add_column@@Base+0x90>
   12910:	mov	r0, r5
   12914:	mov	r3, #8
   12918:	ldr	r2, [r5, #4]
   1291c:	mvn	r1, #0
   12920:	bl	126f0 <table_notify@@Base>
   12924:	ldr	r0, [r5, #4]
   12928:	add	r3, r0, #1
   1292c:	str	r3, [r5, #4]
   12930:	add	sp, sp, #12
   12934:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12938:	ldr	r1, [r5, #12]
   1293c:	ldr	r0, [r5]
   12940:	add	r6, r6, r1
   12944:	str	r6, [r5, #12]
   12948:	add	r6, r6, r6, lsl #1
   1294c:	lsl	r1, r6, #2
   12950:	bl	11b08 <realloc@plt>
   12954:	str	r0, [r5]
   12958:	mov	r0, r5
   1295c:	bl	133e8 <table_get_row_length@@Base>
   12960:	subs	r7, r0, #0
   12964:	ble	1288c <table_add_column@@Base+0x28>
   12968:	mov	r1, r4
   1296c:	mov	r0, r5
   12970:	bl	135a0 <table_get_row_ptr@@Base>
   12974:	ldr	r1, [r5, #12]
   12978:	add	r4, r4, #1
   1297c:	lsl	r1, r1, #2
   12980:	mov	r6, r0
   12984:	ldr	r0, [r0]
   12988:	bl	11b08 <realloc@plt>
   1298c:	cmp	r7, r4
   12990:	str	r0, [r6]
   12994:	bne	12968 <table_add_column@@Base+0x104>
   12998:	b	1288c <table_add_column@@Base+0x28>

0001299c <table_remove_column@@Base>:
   1299c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   129a0:	add	r5, r1, r1, lsl #1
   129a4:	ldr	r3, [r0]
   129a8:	lsl	r5, r5, #2
   129ac:	mov	r6, r0
   129b0:	ldr	r0, [r3, r5]
   129b4:	mov	r9, r1
   129b8:	cmp	r0, #0
   129bc:	beq	129c4 <table_remove_column@@Base+0x28>
   129c0:	bl	11af0 <free@plt>
   129c4:	ldr	r4, [r6, #4]
   129c8:	sub	r4, r4, #1
   129cc:	cmp	r9, r4
   129d0:	movlt	r1, r9
   129d4:	bge	12a10 <table_remove_column@@Base+0x74>
   129d8:	ldr	r3, [r6]
   129dc:	add	r0, r5, #12
   129e0:	add	r2, r3, r0
   129e4:	add	r1, r1, #1
   129e8:	ldr	lr, [r2, #4]
   129ec:	ldr	ip, [r2, #8]
   129f0:	ldr	r7, [r2]
   129f4:	add	r2, r3, r5
   129f8:	cmp	r1, r4
   129fc:	str	r7, [r3, r5]
   12a00:	str	lr, [r2, #4]
   12a04:	str	ip, [r2, #8]
   12a08:	mov	r5, r0
   12a0c:	bne	129d8 <table_remove_column@@Base+0x3c>
   12a10:	mov	r0, r6
   12a14:	bl	133e8 <table_get_row_length@@Base>
   12a18:	subs	r7, r0, #0
   12a1c:	lslgt	r8, r9, #2
   12a20:	movgt	r5, #0
   12a24:	ble	12a80 <table_remove_column@@Base+0xe4>
   12a28:	mov	r2, r9
   12a2c:	mov	r1, r5
   12a30:	mov	r0, r6
   12a34:	bl	1450c <table_cell_destroy@@Base>
   12a38:	mov	r1, r5
   12a3c:	mov	r0, r6
   12a40:	bl	135a0 <table_get_row_ptr@@Base>
   12a44:	cmp	r9, r4
   12a48:	movlt	r2, r8
   12a4c:	movlt	r3, r9
   12a50:	bge	12a74 <table_remove_column@@Base+0xd8>
   12a54:	ldr	ip, [r0]
   12a58:	add	r1, r2, #4
   12a5c:	add	r3, r3, #1
   12a60:	ldr	lr, [ip, r1]
   12a64:	cmp	r3, r4
   12a68:	str	lr, [ip, r2]
   12a6c:	mov	r2, r1
   12a70:	bne	12a54 <table_remove_column@@Base+0xb8>
   12a74:	add	r5, r5, #1
   12a78:	cmp	r7, r5
   12a7c:	bne	12a28 <table_remove_column@@Base+0x8c>
   12a80:	ldmib	r6, {r0, r5}
   12a84:	sub	r0, r0, #1
   12a88:	str	r0, [r6, #4]
   12a8c:	mov	r1, r5
   12a90:	bl	1514c <table_get_cell_ptr@@Base+0x204>
   12a94:	subs	r4, r1, #0
   12a98:	beq	12ab8 <table_remove_column@@Base+0x11c>
   12a9c:	mov	r0, r6
   12aa0:	mov	r2, r9
   12aa4:	mov	r3, #16
   12aa8:	mvn	r1, #0
   12aac:	bl	126f0 <table_notify@@Base>
   12ab0:	mov	r0, #0
   12ab4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12ab8:	ldr	r1, [r6, #12]
   12abc:	ldr	r0, [r6]
   12ac0:	sub	r1, r1, r5
   12ac4:	str	r1, [r6, #12]
   12ac8:	add	r1, r1, r1, lsl #1
   12acc:	lsl	r1, r1, #2
   12ad0:	bl	11b08 <realloc@plt>
   12ad4:	str	r0, [r6]
   12ad8:	mov	r0, r6
   12adc:	bl	133e8 <table_get_row_length@@Base>
   12ae0:	subs	r7, r0, #0
   12ae4:	ble	12a9c <table_remove_column@@Base+0x100>
   12ae8:	mov	r1, r4
   12aec:	mov	r0, r6
   12af0:	bl	135a0 <table_get_row_ptr@@Base>
   12af4:	ldr	r1, [r6, #12]
   12af8:	add	r4, r4, #1
   12afc:	lsl	r1, r1, #2
   12b00:	mov	r5, r0
   12b04:	ldr	r0, [r0]
   12b08:	bl	11b08 <realloc@plt>
   12b0c:	cmp	r7, r4
   12b10:	str	r0, [r5]
   12b14:	bne	12ae8 <table_remove_column@@Base+0x14c>
   12b18:	b	12a9c <table_remove_column@@Base+0x100>

00012b1c <table_get_column_name@@Base>:
   12b1c:	ldr	r3, [r0]
   12b20:	add	r1, r1, r1, lsl #1
   12b24:	ldr	r0, [r3, r1, lsl #2]
   12b28:	bx	lr

00012b2c <table_get_col_ptr@@Base>:
   12b2c:	add	r1, r1, r1, lsl #1
   12b30:	ldr	r0, [r0]
   12b34:	add	r0, r0, r1, lsl #2
   12b38:	bx	lr

00012b3c <table_get_column_compare_function@@Base>:
   12b3c:	ldr	r3, [r0]
   12b40:	add	r1, r1, r1, lsl #1
   12b44:	add	r3, r3, r1, lsl #2
   12b48:	ldr	r0, [r3, #8]
   12b4c:	bx	lr

00012b50 <table_set_column_compare_function@@Base>:
   12b50:	ldr	r3, [r0]
   12b54:	add	r1, r1, r1, lsl #1
   12b58:	add	r3, r3, r1, lsl #2
   12b5c:	str	r2, [r3, #8]
   12b60:	bx	lr

00012b64 <table_compare_bool@@Base>:
   12b64:	cmp	r0, #0
   12b68:	beq	12b98 <table_compare_bool@@Base+0x34>
   12b6c:	cmp	r1, #0
   12b70:	beq	12b90 <table_compare_bool@@Base+0x2c>
   12b74:	ldrb	r2, [r0]
   12b78:	ldrb	r3, [r1]
   12b7c:	cmp	r2, r3
   12b80:	bgt	12b90 <table_compare_bool@@Base+0x2c>
   12b84:	mvnlt	r0, #0
   12b88:	movge	r0, #0
   12b8c:	bx	lr
   12b90:	mov	r0, #1
   12b94:	bx	lr
   12b98:	adds	r0, r1, #0
   12b9c:	mvnne	r0, #0
   12ba0:	bx	lr

00012ba4 <table_compare_int8@@Base>:
   12ba4:	cmp	r0, #0
   12ba8:	beq	12bd8 <table_compare_int8@@Base+0x34>
   12bac:	cmp	r1, #0
   12bb0:	beq	12bd0 <table_compare_int8@@Base+0x2c>
   12bb4:	ldrsb	r2, [r0]
   12bb8:	ldrsb	r3, [r1]
   12bbc:	cmp	r2, r3
   12bc0:	bgt	12bd0 <table_compare_int8@@Base+0x2c>
   12bc4:	mvnlt	r0, #0
   12bc8:	movge	r0, #0
   12bcc:	bx	lr
   12bd0:	mov	r0, #1
   12bd4:	bx	lr
   12bd8:	adds	r0, r1, #0
   12bdc:	mvnne	r0, #0
   12be0:	bx	lr

00012be4 <table_compare_int32@@Base>:
   12be4:	cmp	r0, #0
   12be8:	beq	12c18 <table_compare_int32@@Base+0x34>
   12bec:	cmp	r1, #0
   12bf0:	beq	12c10 <table_compare_int32@@Base+0x2c>
   12bf4:	ldr	r2, [r0]
   12bf8:	ldr	r3, [r1]
   12bfc:	cmp	r2, r3
   12c00:	bgt	12c10 <table_compare_int32@@Base+0x2c>
   12c04:	mvnlt	r0, #0
   12c08:	movge	r0, #0
   12c0c:	bx	lr
   12c10:	mov	r0, #1
   12c14:	bx	lr
   12c18:	adds	r0, r1, #0
   12c1c:	mvnne	r0, #0
   12c20:	bx	lr

00012c24 <table_compare_uint32@@Base>:
   12c24:	cmp	r0, #0
   12c28:	beq	12c58 <table_compare_uint32@@Base+0x34>
   12c2c:	cmp	r1, #0
   12c30:	beq	12c50 <table_compare_uint32@@Base+0x2c>
   12c34:	ldr	r2, [r0]
   12c38:	ldr	r3, [r1]
   12c3c:	cmp	r2, r3
   12c40:	bhi	12c50 <table_compare_uint32@@Base+0x2c>
   12c44:	mvncc	r0, #0
   12c48:	movcs	r0, #0
   12c4c:	bx	lr
   12c50:	mov	r0, #1
   12c54:	bx	lr
   12c58:	adds	r0, r1, #0
   12c5c:	mvnne	r0, #0
   12c60:	bx	lr

00012c64 <table_compare_uint64@@Base>:
   12c64:	cmp	r0, #0
   12c68:	beq	12ca0 <table_compare_uint64@@Base+0x3c>
   12c6c:	cmp	r1, #0
   12c70:	beq	12cac <table_compare_uint64@@Base+0x48>
   12c74:	ldrd	r2, [r1]
   12c78:	push	{r4, r5}
   12c7c:	ldrd	r4, [r0]
   12c80:	cmp	r5, r3
   12c84:	cmpeq	r4, r2
   12c88:	movhi	r0, #1
   12c8c:	bhi	12c98 <table_compare_uint64@@Base+0x34>
   12c90:	mvncc	r0, #0
   12c94:	movcs	r0, #0
   12c98:	pop	{r4, r5}
   12c9c:	bx	lr
   12ca0:	adds	r0, r1, #0
   12ca4:	mvnne	r0, #0
   12ca8:	bx	lr
   12cac:	mov	r0, #1
   12cb0:	bx	lr

00012cb4 <table_compare_short@@Base>:
   12cb4:	cmp	r0, #0
   12cb8:	beq	12ce8 <table_compare_short@@Base+0x34>
   12cbc:	cmp	r1, #0
   12cc0:	beq	12ce0 <table_compare_short@@Base+0x2c>
   12cc4:	ldrsh	r2, [r0]
   12cc8:	ldrsh	r3, [r1]
   12ccc:	cmp	r2, r3
   12cd0:	bgt	12ce0 <table_compare_short@@Base+0x2c>
   12cd4:	mvnlt	r0, #0
   12cd8:	movge	r0, #0
   12cdc:	bx	lr
   12ce0:	mov	r0, #1
   12ce4:	bx	lr
   12ce8:	adds	r0, r1, #0
   12cec:	mvnne	r0, #0
   12cf0:	bx	lr

00012cf4 <table_compare_ushort@@Base>:
   12cf4:	cmp	r0, #0
   12cf8:	beq	12d28 <table_compare_ushort@@Base+0x34>
   12cfc:	cmp	r1, #0
   12d00:	beq	12d20 <table_compare_ushort@@Base+0x2c>
   12d04:	ldrh	r2, [r0]
   12d08:	ldrh	r3, [r1]
   12d0c:	cmp	r2, r3
   12d10:	bhi	12d20 <table_compare_ushort@@Base+0x2c>
   12d14:	mvncc	r0, #0
   12d18:	movcs	r0, #0
   12d1c:	bx	lr
   12d20:	mov	r0, #1
   12d24:	bx	lr
   12d28:	adds	r0, r1, #0
   12d2c:	mvnne	r0, #0
   12d30:	bx	lr

00012d34 <table_compare_long@@Base>:
   12d34:	cmp	r0, #0
   12d38:	beq	12d68 <table_compare_long@@Base+0x34>
   12d3c:	cmp	r1, #0
   12d40:	beq	12d60 <table_compare_long@@Base+0x2c>
   12d44:	ldr	r2, [r0]
   12d48:	ldr	r3, [r1]
   12d4c:	cmp	r2, r3
   12d50:	bgt	12d60 <table_compare_long@@Base+0x2c>
   12d54:	mvnlt	r0, #0
   12d58:	movge	r0, #0
   12d5c:	bx	lr
   12d60:	mov	r0, #1
   12d64:	bx	lr
   12d68:	adds	r0, r1, #0
   12d6c:	mvnne	r0, #0
   12d70:	bx	lr

00012d74 <table_compare_llong@@Base>:
   12d74:	cmp	r0, #0
   12d78:	beq	12db8 <table_compare_llong@@Base+0x44>
   12d7c:	cmp	r1, #0
   12d80:	beq	12dc4 <table_compare_llong@@Base+0x50>
   12d84:	ldrd	r2, [r1]
   12d88:	push	{r4, r5}
   12d8c:	ldrd	r4, [r0]
   12d90:	cmp	r2, r4
   12d94:	sbcs	r1, r3, r5
   12d98:	movlt	r0, #1
   12d9c:	blt	12db0 <table_compare_llong@@Base+0x3c>
   12da0:	cmp	r4, r2
   12da4:	sbcs	r3, r5, r3
   12da8:	mvnlt	r0, #0
   12dac:	movge	r0, #0
   12db0:	pop	{r4, r5}
   12db4:	bx	lr
   12db8:	adds	r0, r1, #0
   12dbc:	mvnne	r0, #0
   12dc0:	bx	lr
   12dc4:	mov	r0, #1
   12dc8:	bx	lr

00012dcc <table_compare_ullong@@Base>:
   12dcc:	cmp	r0, #0
   12dd0:	beq	12e00 <table_compare_ullong@@Base+0x34>
   12dd4:	cmp	r1, #0
   12dd8:	beq	12df8 <table_compare_ullong@@Base+0x2c>
   12ddc:	ldr	r2, [r0]
   12de0:	ldr	r3, [r1]
   12de4:	cmp	r2, r3
   12de8:	bhi	12df8 <table_compare_ullong@@Base+0x2c>
   12dec:	mvncc	r0, #0
   12df0:	movcs	r0, #0
   12df4:	bx	lr
   12df8:	mov	r0, #1
   12dfc:	bx	lr
   12e00:	adds	r0, r1, #0
   12e04:	mvnne	r0, #0
   12e08:	bx	lr

00012e0c <table_compare_float@@Base>:
   12e0c:	cmp	r0, #0
   12e10:	beq	12e44 <table_compare_float@@Base+0x38>
   12e14:	cmp	r1, #0
   12e18:	beq	12e3c <table_compare_float@@Base+0x30>
   12e1c:	vldr	s14, [r0]
   12e20:	vldr	s15, [r1]
   12e24:	vcmpe.f32	s14, s15
   12e28:	vmrs	APSR_nzcv, fpscr
   12e2c:	bgt	12e3c <table_compare_float@@Base+0x30>
   12e30:	mvnmi	r0, #0
   12e34:	movpl	r0, #0
   12e38:	bx	lr
   12e3c:	mov	r0, #1
   12e40:	bx	lr
   12e44:	adds	r0, r1, #0
   12e48:	mvnne	r0, #0
   12e4c:	bx	lr

00012e50 <table_compare_double@@Base>:
   12e50:	cmp	r0, #0
   12e54:	beq	12e88 <table_compare_double@@Base+0x38>
   12e58:	cmp	r1, #0
   12e5c:	beq	12e80 <table_compare_double@@Base+0x30>
   12e60:	vldr	d6, [r0]
   12e64:	vldr	d7, [r1]
   12e68:	vcmpe.f64	d6, d7
   12e6c:	vmrs	APSR_nzcv, fpscr
   12e70:	bgt	12e80 <table_compare_double@@Base+0x30>
   12e74:	mvnmi	r0, #0
   12e78:	movpl	r0, #0
   12e7c:	bx	lr
   12e80:	mov	r0, #1
   12e84:	bx	lr
   12e88:	adds	r0, r1, #0
   12e8c:	mvnne	r0, #0
   12e90:	bx	lr

00012e94 <table_compare_ldouble@@Base>:
   12e94:	cmp	r0, #0
   12e98:	beq	12ecc <table_compare_ldouble@@Base+0x38>
   12e9c:	cmp	r1, #0
   12ea0:	beq	12ec4 <table_compare_ldouble@@Base+0x30>
   12ea4:	vldr	d6, [r0]
   12ea8:	vldr	d7, [r1]
   12eac:	vcmpe.f64	d6, d7
   12eb0:	vmrs	APSR_nzcv, fpscr
   12eb4:	bgt	12ec4 <table_compare_ldouble@@Base+0x30>
   12eb8:	mvnmi	r0, #0
   12ebc:	movpl	r0, #0
   12ec0:	bx	lr
   12ec4:	mov	r0, #1
   12ec8:	bx	lr
   12ecc:	adds	r0, r1, #0
   12ed0:	mvnne	r0, #0
   12ed4:	bx	lr

00012ed8 <table_compare_uchar@@Base>:
   12ed8:	cmp	r0, #0
   12edc:	beq	12f0c <table_compare_uchar@@Base+0x34>
   12ee0:	cmp	r1, #0
   12ee4:	beq	12f04 <table_compare_uchar@@Base+0x2c>
   12ee8:	ldrb	r2, [r0]
   12eec:	ldrb	r3, [r1]
   12ef0:	cmp	r2, r3
   12ef4:	bhi	12f04 <table_compare_uchar@@Base+0x2c>
   12ef8:	mvncc	r0, #0
   12efc:	movcs	r0, #0
   12f00:	bx	lr
   12f04:	mov	r0, #1
   12f08:	bx	lr
   12f0c:	adds	r0, r1, #0
   12f10:	mvnne	r0, #0
   12f14:	bx	lr

00012f18 <table_compare_ptr@@Base>:
   12f18:	cmp	r0, r1
   12f1c:	bhi	12f2c <table_compare_ptr@@Base+0x14>
   12f20:	mvncc	r0, #0
   12f24:	movcs	r0, #0
   12f28:	bx	lr
   12f2c:	mov	r0, #1
   12f30:	bx	lr

00012f34 <table_compare_string@@Base>:
   12f34:	cmp	r0, #0
   12f38:	beq	12f48 <table_compare_string@@Base+0x14>
   12f3c:	cmp	r1, #0
   12f40:	beq	12f54 <table_compare_string@@Base+0x20>
   12f44:	b	11ae4 <strcmp@plt>
   12f48:	adds	r0, r1, #0
   12f4c:	mvnne	r0, #0
   12f50:	bx	lr
   12f54:	mov	r0, #1
   12f58:	bx	lr

00012f5c <table_compare_ulong@@Base>:
   12f5c:	cmp	r0, #0
   12f60:	beq	12f90 <table_compare_ulong@@Base+0x34>
   12f64:	cmp	r1, #0
   12f68:	beq	12f88 <table_compare_ulong@@Base+0x2c>
   12f6c:	ldr	r2, [r0]
   12f70:	ldr	r3, [r1]
   12f74:	cmp	r2, r3
   12f78:	bhi	12f88 <table_compare_ulong@@Base+0x2c>
   12f7c:	mvncc	r0, #0
   12f80:	movcs	r0, #0
   12f84:	bx	lr
   12f88:	mov	r0, #1
   12f8c:	bx	lr
   12f90:	adds	r0, r1, #0
   12f94:	mvnne	r0, #0
   12f98:	bx	lr

00012f9c <table_compare_int@@Base>:
   12f9c:	cmp	r0, #0
   12fa0:	beq	12fd0 <table_compare_int@@Base+0x34>
   12fa4:	cmp	r1, #0
   12fa8:	beq	12fc8 <table_compare_int@@Base+0x2c>
   12fac:	ldr	r2, [r0]
   12fb0:	ldr	r3, [r1]
   12fb4:	cmp	r2, r3
   12fb8:	bgt	12fc8 <table_compare_int@@Base+0x2c>
   12fbc:	mvnlt	r0, #0
   12fc0:	movge	r0, #0
   12fc4:	bx	lr
   12fc8:	mov	r0, #1
   12fcc:	bx	lr
   12fd0:	adds	r0, r1, #0
   12fd4:	mvnne	r0, #0
   12fd8:	bx	lr

00012fdc <table_compare_uint@@Base>:
   12fdc:	cmp	r0, #0
   12fe0:	beq	13010 <table_compare_uint@@Base+0x34>
   12fe4:	cmp	r1, #0
   12fe8:	beq	13008 <table_compare_uint@@Base+0x2c>
   12fec:	ldr	r2, [r0]
   12ff0:	ldr	r3, [r1]
   12ff4:	cmp	r2, r3
   12ff8:	bhi	13008 <table_compare_uint@@Base+0x2c>
   12ffc:	mvncc	r0, #0
   13000:	movcs	r0, #0
   13004:	bx	lr
   13008:	mov	r0, #1
   1300c:	bx	lr
   13010:	adds	r0, r1, #0
   13014:	mvnne	r0, #0
   13018:	bx	lr

0001301c <table_compare_int16@@Base>:
   1301c:	cmp	r0, #0
   13020:	beq	13050 <table_compare_int16@@Base+0x34>
   13024:	cmp	r1, #0
   13028:	beq	13048 <table_compare_int16@@Base+0x2c>
   1302c:	ldrsh	r2, [r0]
   13030:	ldrsh	r3, [r1]
   13034:	cmp	r2, r3
   13038:	bgt	13048 <table_compare_int16@@Base+0x2c>
   1303c:	mvnlt	r0, #0
   13040:	movge	r0, #0
   13044:	bx	lr
   13048:	mov	r0, #1
   1304c:	bx	lr
   13050:	adds	r0, r1, #0
   13054:	mvnne	r0, #0
   13058:	bx	lr

0001305c <table_compare_uint16@@Base>:
   1305c:	cmp	r0, #0
   13060:	beq	13090 <table_compare_uint16@@Base+0x34>
   13064:	cmp	r1, #0
   13068:	beq	13088 <table_compare_uint16@@Base+0x2c>
   1306c:	ldrh	r2, [r0]
   13070:	ldrh	r3, [r1]
   13074:	cmp	r2, r3
   13078:	bhi	13088 <table_compare_uint16@@Base+0x2c>
   1307c:	mvncc	r0, #0
   13080:	movcs	r0, #0
   13084:	bx	lr
   13088:	mov	r0, #1
   1308c:	bx	lr
   13090:	adds	r0, r1, #0
   13094:	mvnne	r0, #0
   13098:	bx	lr

0001309c <table_compare_int64@@Base>:
   1309c:	cmp	r0, #0
   130a0:	beq	130e0 <table_compare_int64@@Base+0x44>
   130a4:	cmp	r1, #0
   130a8:	beq	130ec <table_compare_int64@@Base+0x50>
   130ac:	ldrd	r2, [r1]
   130b0:	push	{r4, r5}
   130b4:	ldrd	r4, [r0]
   130b8:	cmp	r2, r4
   130bc:	sbcs	r1, r3, r5
   130c0:	movlt	r0, #1
   130c4:	blt	130d8 <table_compare_int64@@Base+0x3c>
   130c8:	cmp	r4, r2
   130cc:	sbcs	r3, r5, r3
   130d0:	mvnlt	r0, #0
   130d4:	movge	r0, #0
   130d8:	pop	{r4, r5}
   130dc:	bx	lr
   130e0:	adds	r0, r1, #0
   130e4:	mvnne	r0, #0
   130e8:	bx	lr
   130ec:	mov	r0, #1
   130f0:	bx	lr

000130f4 <table_compare_char@@Base>:
   130f4:	cmp	r0, #0
   130f8:	beq	13128 <table_compare_char@@Base+0x34>
   130fc:	cmp	r1, #0
   13100:	beq	13120 <table_compare_char@@Base+0x2c>
   13104:	ldrb	r2, [r0]
   13108:	ldrb	r3, [r1]
   1310c:	cmp	r2, r3
   13110:	bhi	13120 <table_compare_char@@Base+0x2c>
   13114:	mvncc	r0, #0
   13118:	movcs	r0, #0
   1311c:	bx	lr
   13120:	mov	r0, #1
   13124:	bx	lr
   13128:	adds	r0, r1, #0
   1312c:	mvnne	r0, #0
   13130:	bx	lr

00013134 <table_compare_uint8@@Base>:
   13134:	cmp	r0, #0
   13138:	beq	13168 <table_compare_uint8@@Base+0x34>
   1313c:	cmp	r1, #0
   13140:	beq	13160 <table_compare_uint8@@Base+0x2c>
   13144:	ldrb	r2, [r0]
   13148:	ldrb	r3, [r1]
   1314c:	cmp	r2, r3
   13150:	bhi	13160 <table_compare_uint8@@Base+0x2c>
   13154:	mvncc	r0, #0
   13158:	movcs	r0, #0
   1315c:	bx	lr
   13160:	mov	r0, #1
   13164:	bx	lr
   13168:	adds	r0, r1, #0
   1316c:	mvnne	r0, #0
   13170:	bx	lr

00013174 <table_get_default_compare_function_for_data_type@@Base>:
   13174:	cmp	r0, #23
   13178:	ldrls	r3, [pc, #8]	; 13188 <table_get_default_compare_function_for_data_type@@Base+0x14>
   1317c:	ldrls	r0, [r3, r0, lsl #2]
   13180:	movhi	r0, #0
   13184:	bx	lr
   13188:	andeq	r5, r1, ip, ror #3

0001318c <table_get@@Base>:
   1318c:	push	{r4, lr}
   13190:	bl	14f48 <table_get_cell_ptr@@Base>
   13194:	ldr	r0, [r0]
   13198:	pop	{r4, pc}

0001319c <table_get_bool@@Base>:
   1319c:	push	{r4, lr}
   131a0:	bl	14f48 <table_get_cell_ptr@@Base>
   131a4:	ldr	r3, [r0]
   131a8:	ldrb	r0, [r3]
   131ac:	pop	{r4, pc}

000131b0 <table_get_int@@Base>:
   131b0:	push	{r4, lr}
   131b4:	bl	14f48 <table_get_cell_ptr@@Base>
   131b8:	ldr	r3, [r0]
   131bc:	ldr	r0, [r3]
   131c0:	pop	{r4, pc}

000131c4 <table_get_uint@@Base>:
   131c4:	push	{r4, lr}
   131c8:	bl	14f48 <table_get_cell_ptr@@Base>
   131cc:	ldr	r3, [r0]
   131d0:	ldr	r0, [r3]
   131d4:	pop	{r4, pc}

000131d8 <table_get_int8@@Base>:
   131d8:	push	{r4, lr}
   131dc:	bl	14f48 <table_get_cell_ptr@@Base>
   131e0:	ldr	r3, [r0]
   131e4:	ldrsb	r0, [r3]
   131e8:	pop	{r4, pc}

000131ec <table_get_uint8@@Base>:
   131ec:	push	{r4, lr}
   131f0:	bl	14f48 <table_get_cell_ptr@@Base>
   131f4:	ldr	r3, [r0]
   131f8:	ldrb	r0, [r3]
   131fc:	pop	{r4, pc}

00013200 <table_get_int16@@Base>:
   13200:	push	{r4, lr}
   13204:	bl	14f48 <table_get_cell_ptr@@Base>
   13208:	ldr	r3, [r0]
   1320c:	ldrsh	r0, [r3]
   13210:	pop	{r4, pc}

00013214 <table_get_uint16@@Base>:
   13214:	push	{r4, lr}
   13218:	bl	14f48 <table_get_cell_ptr@@Base>
   1321c:	ldr	r3, [r0]
   13220:	ldrh	r0, [r3]
   13224:	pop	{r4, pc}

00013228 <table_get_int32@@Base>:
   13228:	push	{r4, lr}
   1322c:	bl	14f48 <table_get_cell_ptr@@Base>
   13230:	ldr	r3, [r0]
   13234:	ldr	r0, [r3]
   13238:	pop	{r4, pc}

0001323c <table_get_uint32@@Base>:
   1323c:	push	{r4, lr}
   13240:	bl	14f48 <table_get_cell_ptr@@Base>
   13244:	ldr	r3, [r0]
   13248:	ldr	r0, [r3]
   1324c:	pop	{r4, pc}

00013250 <table_get_int64@@Base>:
   13250:	push	{r4, lr}
   13254:	bl	14f48 <table_get_cell_ptr@@Base>
   13258:	ldr	r3, [r0]
   1325c:	ldrd	r0, [r3]
   13260:	pop	{r4, pc}

00013264 <table_get_uint64@@Base>:
   13264:	push	{r4, lr}
   13268:	bl	14f48 <table_get_cell_ptr@@Base>
   1326c:	ldr	r3, [r0]
   13270:	ldrd	r0, [r3]
   13274:	pop	{r4, pc}

00013278 <table_get_short@@Base>:
   13278:	push	{r4, lr}
   1327c:	bl	14f48 <table_get_cell_ptr@@Base>
   13280:	ldr	r3, [r0]
   13284:	ldrsh	r0, [r3]
   13288:	pop	{r4, pc}

0001328c <table_get_ushort@@Base>:
   1328c:	push	{r4, lr}
   13290:	bl	14f48 <table_get_cell_ptr@@Base>
   13294:	ldr	r3, [r0]
   13298:	ldrh	r0, [r3]
   1329c:	pop	{r4, pc}

000132a0 <table_get_long@@Base>:
   132a0:	push	{r4, lr}
   132a4:	bl	14f48 <table_get_cell_ptr@@Base>
   132a8:	ldr	r3, [r0]
   132ac:	ldr	r0, [r3]
   132b0:	pop	{r4, pc}

000132b4 <table_get_ulong@@Base>:
   132b4:	push	{r4, lr}
   132b8:	bl	14f48 <table_get_cell_ptr@@Base>
   132bc:	ldr	r3, [r0]
   132c0:	ldr	r0, [r3]
   132c4:	pop	{r4, pc}

000132c8 <table_get_llong@@Base>:
   132c8:	push	{r4, lr}
   132cc:	bl	14f48 <table_get_cell_ptr@@Base>
   132d0:	ldr	r3, [r0]
   132d4:	ldrd	r0, [r3]
   132d8:	pop	{r4, pc}

000132dc <table_get_ullong@@Base>:
   132dc:	push	{r4, lr}
   132e0:	bl	14f48 <table_get_cell_ptr@@Base>
   132e4:	ldr	r3, [r0]
   132e8:	ldrd	r0, [r3]
   132ec:	pop	{r4, pc}

000132f0 <table_get_float@@Base>:
   132f0:	push	{r4, lr}
   132f4:	bl	14f48 <table_get_cell_ptr@@Base>
   132f8:	ldr	r3, [r0]
   132fc:	vldr	s0, [r3]
   13300:	pop	{r4, pc}

00013304 <table_get_double@@Base>:
   13304:	push	{r4, lr}
   13308:	bl	14f48 <table_get_cell_ptr@@Base>
   1330c:	ldr	r3, [r0]
   13310:	vldr	d0, [r3]
   13314:	pop	{r4, pc}

00013318 <table_get_ldouble@@Base>:
   13318:	push	{r4, lr}
   1331c:	bl	14f48 <table_get_cell_ptr@@Base>
   13320:	ldr	r3, [r0]
   13324:	vldr	d0, [r3]
   13328:	pop	{r4, pc}

0001332c <table_get_char@@Base>:
   1332c:	push	{r4, lr}
   13330:	bl	14f48 <table_get_cell_ptr@@Base>
   13334:	ldr	r3, [r0]
   13338:	ldrb	r0, [r3]
   1333c:	pop	{r4, pc}

00013340 <table_get_uchar@@Base>:
   13340:	push	{r4, lr}
   13344:	bl	14f48 <table_get_cell_ptr@@Base>
   13348:	ldr	r3, [r0]
   1334c:	ldrb	r0, [r3]
   13350:	pop	{r4, pc}

00013354 <table_get_string@@Base>:
   13354:	push	{r4, lr}
   13358:	bl	14f48 <table_get_cell_ptr@@Base>
   1335c:	ldr	r0, [r0]
   13360:	pop	{r4, pc}

00013364 <table_get_ptr@@Base>:
   13364:	push	{r4, lr}
   13368:	bl	14f48 <table_get_cell_ptr@@Base>
   1336c:	ldr	r0, [r0]
   13370:	pop	{r4, pc}

00013374 <table_row_init@@Base>:
   13374:	ldr	r3, [r0, #12]
   13378:	push	{r4, r5, r6, lr}
   1337c:	mov	r5, r1
   13380:	ldr	r4, [r0, #16]
   13384:	lsl	r0, r3, #2
   13388:	bl	11b20 <malloc@plt>
   1338c:	str	r0, [r4, r5, lsl #2]
   13390:	pop	{r4, r5, r6, pc}

00013394 <table_row_destroy@@Base>:
   13394:	push	{r4, r5, r6, r7, r8, lr}
   13398:	mov	r6, r0
   1339c:	mov	r5, r1
   133a0:	bl	127e0 <table_get_column_length@@Base>
   133a4:	ldr	r8, [r6, #16]
   133a8:	subs	r7, r0, #0
   133ac:	movgt	r4, #0
   133b0:	ble	133d0 <table_row_destroy@@Base+0x3c>
   133b4:	mov	r2, r4
   133b8:	mov	r1, r5
   133bc:	add	r4, r4, #1
   133c0:	mov	r0, r6
   133c4:	bl	1450c <table_cell_destroy@@Base>
   133c8:	cmp	r7, r4
   133cc:	bne	133b4 <table_row_destroy@@Base+0x20>
   133d0:	ldr	r0, [r8, r5, lsl #2]
   133d4:	cmp	r0, #0
   133d8:	beq	133e4 <table_row_destroy@@Base+0x50>
   133dc:	pop	{r4, r5, r6, r7, r8, lr}
   133e0:	b	11af0 <free@plt>
   133e4:	pop	{r4, r5, r6, r7, r8, pc}

000133e8 <table_get_row_length@@Base>:
   133e8:	ldr	r0, [r0, #20]
   133ec:	bx	lr

000133f0 <table_add_row@@Base>:
   133f0:	push	{r4, r5, r6, r7, r8, lr}
   133f4:	mov	r5, r0
   133f8:	ldr	r4, [r0, #24]
   133fc:	ldr	r6, [r0, #20]
   13400:	mov	r1, r4
   13404:	mov	r0, r6
   13408:	bl	1514c <table_get_cell_ptr@@Base+0x204>
   1340c:	cmp	r1, #0
   13410:	bne	13434 <table_add_row@@Base+0x44>
   13414:	ldr	r1, [r5, #28]
   13418:	ldr	r0, [r5, #16]
   1341c:	add	r1, r4, r1
   13420:	str	r1, [r5, #28]
   13424:	lsl	r1, r1, #2
   13428:	bl	11b08 <realloc@plt>
   1342c:	ldr	r6, [r5, #20]
   13430:	str	r0, [r5, #16]
   13434:	mov	r0, r5
   13438:	bl	127e0 <table_get_column_length@@Base>
   1343c:	ldr	r4, [r5, #16]
   13440:	mov	r7, r0
   13444:	ldr	r0, [r5, #12]
   13448:	lsl	r0, r0, #2
   1344c:	bl	11b20 <malloc@plt>
   13450:	cmp	r7, #0
   13454:	str	r0, [r4, r6, lsl #2]
   13458:	ble	1347c <table_add_row@@Base+0x8c>
   1345c:	mov	r4, #0
   13460:	mov	r2, r4
   13464:	mov	r1, r6
   13468:	add	r4, r4, #1
   1346c:	mov	r0, r5
   13470:	bl	144f0 <table_cell_init@@Base>
   13474:	cmp	r7, r4
   13478:	bne	13460 <table_add_row@@Base+0x70>
   1347c:	mov	r0, r5
   13480:	mov	r3, #2
   13484:	mvn	r2, #0
   13488:	ldr	r1, [r5, #20]
   1348c:	bl	126f0 <table_notify@@Base>
   13490:	ldr	r0, [r5, #20]
   13494:	add	r3, r0, #1
   13498:	str	r3, [r5, #20]
   1349c:	pop	{r4, r5, r6, r7, r8, pc}

000134a0 <table_remove_row@@Base>:
   134a0:	push	{r4, r5, r6, r7, r8, lr}
   134a4:	mov	r5, r0
   134a8:	mov	r6, r1
   134ac:	ldr	r7, [r0, #20]
   134b0:	bl	127e0 <table_get_column_length@@Base>
   134b4:	subs	r8, r0, #0
   134b8:	movgt	r4, #0
   134bc:	ble	13500 <table_remove_row@@Base+0x60>
   134c0:	mov	r1, r4
   134c4:	mov	r0, r5
   134c8:	bl	12850 <table_get_column_data_type@@Base>
   134cc:	mov	r2, r4
   134d0:	mov	r1, r6
   134d4:	add	r4, r4, #1
   134d8:	cmp	r0, #23
   134dc:	mov	r0, r5
   134e0:	beq	134f8 <table_remove_row@@Base+0x58>
   134e4:	bl	14f48 <table_get_cell_ptr@@Base>
   134e8:	ldr	r3, [r0]
   134ec:	subs	r0, r3, #0
   134f0:	beq	134f8 <table_remove_row@@Base+0x58>
   134f4:	bl	11af0 <free@plt>
   134f8:	cmp	r8, r4
   134fc:	bne	134c0 <table_remove_row@@Base+0x20>
   13500:	ldr	r3, [r5, #16]
   13504:	lsl	r4, r6, #2
   13508:	ldr	r0, [r3, r6, lsl #2]
   1350c:	cmp	r0, #0
   13510:	beq	13518 <table_remove_row@@Base+0x78>
   13514:	bl	11af0 <free@plt>
   13518:	sub	ip, r7, #1
   1351c:	cmp	r6, ip
   13520:	movlt	r3, r6
   13524:	bge	13548 <table_remove_row@@Base+0xa8>
   13528:	ldr	r1, [r5, #16]
   1352c:	add	r2, r4, #4
   13530:	add	r3, r3, #1
   13534:	ldr	r0, [r1, r2]
   13538:	cmp	r3, ip
   1353c:	str	r0, [r1, r4]
   13540:	mov	r4, r2
   13544:	bne	13528 <table_remove_row@@Base+0x88>
   13548:	ldr	r0, [r5, #20]
   1354c:	ldr	r4, [r5, #24]
   13550:	sub	r0, r0, #1
   13554:	str	r0, [r5, #20]
   13558:	mov	r1, r4
   1355c:	bl	1514c <table_get_cell_ptr@@Base+0x204>
   13560:	cmp	r1, #0
   13564:	bne	13584 <table_remove_row@@Base+0xe4>
   13568:	ldr	r1, [r5, #28]
   1356c:	ldr	r0, [r5, #16]
   13570:	sub	r1, r1, r4
   13574:	str	r1, [r5, #28]
   13578:	lsl	r1, r1, #2
   1357c:	bl	11b08 <realloc@plt>
   13580:	str	r0, [r5, #16]
   13584:	mov	r0, r5
   13588:	mov	r1, r6
   1358c:	mov	r3, #4
   13590:	mvn	r2, #0
   13594:	bl	126f0 <table_notify@@Base>
   13598:	mov	r0, #0
   1359c:	pop	{r4, r5, r6, r7, r8, pc}

000135a0 <table_get_row_ptr@@Base>:
   135a0:	ldr	r0, [r0, #16]
   135a4:	add	r0, r0, r1, lsl #2
   135a8:	bx	lr

000135ac <table_set_row_ptr@@Base>:
   135ac:	ldr	r3, [r0, #16]
   135b0:	ldr	r2, [r2]
   135b4:	str	r2, [r3, r1, lsl #2]
   135b8:	bx	lr

000135bc <table_set@@Base>:
   135bc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   135c0:	mov	r5, r0
   135c4:	mov	r6, r2
   135c8:	ldr	r4, [sp, #32]
   135cc:	mov	r9, r1
   135d0:	mov	r7, r3
   135d4:	bl	14f48 <table_get_cell_ptr@@Base>
   135d8:	mov	r1, r6
   135dc:	mov	r8, r0
   135e0:	mov	r0, r5
   135e4:	bl	12b2c <table_get_col_ptr@@Base>
   135e8:	cmp	r4, #23
   135ec:	ldrls	pc, [pc, r4, lsl #2]
   135f0:	b	13668 <table_set@@Base+0xac>
   135f4:	andeq	r3, r1, ip, lsl #16
   135f8:	strdeq	r3, [r1], -ip
   135fc:	andeq	r3, r1, ip, ror #15
   13600:	ldrdeq	r3, [r1], -ip
   13604:	andeq	r3, r1, ip, asr #15
   13608:	andeq	r3, r1, r8, lsr #15
   1360c:	muleq	r1, r8, r7
   13610:	andeq	r3, r1, r8, lsl #15
   13614:	andeq	r3, r1, ip, asr #16
   13618:	andeq	r3, r1, ip, lsr r8
   1361c:	andeq	r3, r1, ip, lsr #16
   13620:	andeq	r3, r1, ip, lsl r8
   13624:	muleq	r1, r8, r8
   13628:	andeq	r3, r1, r8, ror r8
   1362c:	andeq	r3, r1, r8, lsl #17
   13630:	andeq	r3, r1, r8, ror r7
   13634:	andeq	r3, r1, r4, asr r7
   13638:	andeq	r3, r1, r4, asr #14
   1363c:	andeq	r3, r1, r8, lsl r7
   13640:	andeq	r3, r1, r8, lsl #14
   13644:	strdeq	r3, [r1], -r8
   13648:	andeq	r3, r1, r0, asr #13
   1364c:	muleq	r1, ip, r6
   13650:	andeq	r3, r1, r0, ror r6
   13654:	bl	11b20 <malloc@plt>
   13658:	cmp	r0, #0
   1365c:	mov	r3, r0
   13660:	str	r0, [r8]
   13664:	bne	13864 <table_set@@Base+0x2a8>
   13668:	mvn	r0, #0
   1366c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13670:	ldr	r3, [r0, #4]
   13674:	cmp	r3, #23
   13678:	bne	13668 <table_set@@Base+0xac>
   1367c:	str	r7, [r8]
   13680:	mov	r0, r5
   13684:	mov	r2, r6
   13688:	mov	r1, r9
   1368c:	mov	r3, #1
   13690:	bl	126f0 <table_notify@@Base>
   13694:	mov	r0, #0
   13698:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1369c:	ldr	r3, [r0, #4]
   136a0:	cmp	r3, #22
   136a4:	bne	13668 <table_set@@Base+0xac>
   136a8:	ldr	r0, [r8]
   136ac:	cmp	r0, #0
   136b0:	beq	138c0 <table_set@@Base+0x304>
   136b4:	ldrb	r3, [r7]
   136b8:	strb	r3, [r0]
   136bc:	b	13680 <table_set@@Base+0xc4>
   136c0:	ldr	r3, [r0, #4]
   136c4:	cmp	r3, #21
   136c8:	bne	13668 <table_set@@Base+0xac>
   136cc:	mov	r0, r7
   136d0:	bl	11b44 <strlen@plt>
   136d4:	add	r1, r0, #1
   136d8:	ldr	r0, [r8]
   136dc:	bl	11b08 <realloc@plt>
   136e0:	cmp	r0, #0
   136e4:	str	r0, [r8]
   136e8:	beq	13668 <table_set@@Base+0xac>
   136ec:	mov	r1, r7
   136f0:	bl	11b14 <strcpy@plt>
   136f4:	b	13680 <table_set@@Base+0xc4>
   136f8:	ldr	r3, [r0, #4]
   136fc:	cmp	r3, #20
   13700:	beq	136a8 <table_set@@Base+0xec>
   13704:	b	13668 <table_set@@Base+0xac>
   13708:	ldr	r3, [r0, #4]
   1370c:	cmp	r3, #19
   13710:	beq	136a8 <table_set@@Base+0xec>
   13714:	b	13668 <table_set@@Base+0xac>
   13718:	ldr	r3, [r0, #4]
   1371c:	cmp	r3, #18
   13720:	bne	13668 <table_set@@Base+0xac>
   13724:	ldr	r0, [r8]
   13728:	cmp	r0, #0
   1372c:	beq	138d8 <table_set@@Base+0x31c>
   13730:	ldr	r2, [r7]
   13734:	ldr	r3, [r7, #4]
   13738:	str	r2, [r0]
   1373c:	str	r3, [r0, #4]
   13740:	b	13680 <table_set@@Base+0xc4>
   13744:	ldr	r3, [r0, #4]
   13748:	cmp	r3, #17
   1374c:	beq	13724 <table_set@@Base+0x168>
   13750:	b	13668 <table_set@@Base+0xac>
   13754:	ldr	r3, [r0, #4]
   13758:	cmp	r3, #16
   1375c:	bne	13668 <table_set@@Base+0xac>
   13760:	ldr	r0, [r8]
   13764:	cmp	r0, #0
   13768:	beq	138a8 <table_set@@Base+0x2ec>
   1376c:	ldr	r3, [r7]
   13770:	str	r3, [r0]
   13774:	b	13680 <table_set@@Base+0xc4>
   13778:	ldr	r3, [r0, #4]
   1377c:	cmp	r3, #15
   13780:	beq	13724 <table_set@@Base+0x168>
   13784:	b	13668 <table_set@@Base+0xac>
   13788:	ldr	r3, [r0, #4]
   1378c:	cmp	r3, #7
   13790:	beq	13760 <table_set@@Base+0x1a4>
   13794:	b	13668 <table_set@@Base+0xac>
   13798:	ldr	r3, [r0, #4]
   1379c:	cmp	r3, #6
   137a0:	beq	13760 <table_set@@Base+0x1a4>
   137a4:	b	13668 <table_set@@Base+0xac>
   137a8:	ldr	r3, [r0, #4]
   137ac:	cmp	r3, #5
   137b0:	bne	13668 <table_set@@Base+0xac>
   137b4:	ldr	r0, [r8]
   137b8:	cmp	r0, #0
   137bc:	beq	138f0 <table_set@@Base+0x334>
   137c0:	ldrh	r3, [r7]
   137c4:	strh	r3, [r0]
   137c8:	b	13680 <table_set@@Base+0xc4>
   137cc:	ldr	r3, [r0, #4]
   137d0:	cmp	r3, #4
   137d4:	beq	137b4 <table_set@@Base+0x1f8>
   137d8:	b	13668 <table_set@@Base+0xac>
   137dc:	ldr	r3, [r0, #4]
   137e0:	cmp	r3, #3
   137e4:	beq	136a8 <table_set@@Base+0xec>
   137e8:	b	13668 <table_set@@Base+0xac>
   137ec:	ldr	r3, [r0, #4]
   137f0:	cmp	r3, #2
   137f4:	beq	136a8 <table_set@@Base+0xec>
   137f8:	b	13668 <table_set@@Base+0xac>
   137fc:	ldr	r3, [r0, #4]
   13800:	cmp	r3, #1
   13804:	beq	13760 <table_set@@Base+0x1a4>
   13808:	b	13668 <table_set@@Base+0xac>
   1380c:	ldr	r3, [r0, #4]
   13810:	cmp	r3, #0
   13814:	beq	13760 <table_set@@Base+0x1a4>
   13818:	b	13668 <table_set@@Base+0xac>
   1381c:	ldr	r3, [r0, #4]
   13820:	cmp	r3, #11
   13824:	beq	137b4 <table_set@@Base+0x1f8>
   13828:	b	13668 <table_set@@Base+0xac>
   1382c:	ldr	r3, [r0, #4]
   13830:	cmp	r3, #10
   13834:	beq	137b4 <table_set@@Base+0x1f8>
   13838:	b	13668 <table_set@@Base+0xac>
   1383c:	ldr	r3, [r0, #4]
   13840:	cmp	r3, #9
   13844:	beq	13724 <table_set@@Base+0x168>
   13848:	b	13668 <table_set@@Base+0xac>
   1384c:	ldr	r0, [r0, #4]
   13850:	cmp	r0, #8
   13854:	bne	13668 <table_set@@Base+0xac>
   13858:	ldr	r3, [r8]
   1385c:	cmp	r3, #0
   13860:	beq	13654 <table_set@@Base+0x98>
   13864:	ldr	r1, [r7]
   13868:	ldr	r2, [r7, #4]
   1386c:	str	r1, [r3]
   13870:	str	r2, [r3, #4]
   13874:	b	13680 <table_set@@Base+0xc4>
   13878:	ldr	r3, [r0, #4]
   1387c:	cmp	r3, #13
   13880:	beq	13760 <table_set@@Base+0x1a4>
   13884:	b	13668 <table_set@@Base+0xac>
   13888:	ldr	r3, [r0, #4]
   1388c:	cmp	r3, #14
   13890:	beq	13724 <table_set@@Base+0x168>
   13894:	b	13668 <table_set@@Base+0xac>
   13898:	ldr	r3, [r0, #4]
   1389c:	cmp	r3, #12
   138a0:	beq	13760 <table_set@@Base+0x1a4>
   138a4:	b	13668 <table_set@@Base+0xac>
   138a8:	mov	r0, #4
   138ac:	bl	11b20 <malloc@plt>
   138b0:	cmp	r0, #0
   138b4:	str	r0, [r8]
   138b8:	bne	1376c <table_set@@Base+0x1b0>
   138bc:	b	13668 <table_set@@Base+0xac>
   138c0:	mov	r0, #1
   138c4:	bl	11b20 <malloc@plt>
   138c8:	cmp	r0, #0
   138cc:	str	r0, [r8]
   138d0:	bne	136b4 <table_set@@Base+0xf8>
   138d4:	b	13668 <table_set@@Base+0xac>
   138d8:	mov	r0, #8
   138dc:	bl	11b20 <malloc@plt>
   138e0:	cmp	r0, #0
   138e4:	str	r0, [r8]
   138e8:	bne	13730 <table_set@@Base+0x174>
   138ec:	b	13668 <table_set@@Base+0xac>
   138f0:	mov	r0, #2
   138f4:	bl	11b20 <malloc@plt>
   138f8:	cmp	r0, #0
   138fc:	str	r0, [r8]
   13900:	bne	137c0 <table_set@@Base+0x204>
   13904:	b	13668 <table_set@@Base+0xac>

00013908 <table_set_bool@@Base>:
   13908:	push	{r4, r5, r6, r7, r8, lr}
   1390c:	mov	r5, r2
   13910:	mov	r4, r0
   13914:	mov	r8, r3
   13918:	mov	r7, r1
   1391c:	bl	14f48 <table_get_cell_ptr@@Base>
   13920:	mov	r1, r5
   13924:	mov	r6, r0
   13928:	mov	r0, r4
   1392c:	bl	12b2c <table_get_col_ptr@@Base>
   13930:	ldr	r2, [r0, #4]
   13934:	cmp	r2, #22
   13938:	bne	1397c <table_set_bool@@Base+0x74>
   1393c:	ldr	r0, [r6]
   13940:	cmp	r0, #0
   13944:	beq	13968 <table_set_bool@@Base+0x60>
   13948:	strb	r8, [r0]
   1394c:	mov	r2, r5
   13950:	mov	r0, r4
   13954:	mov	r1, r7
   13958:	mov	r3, #1
   1395c:	bl	126f0 <table_notify@@Base>
   13960:	mov	r0, #0
   13964:	pop	{r4, r5, r6, r7, r8, pc}
   13968:	mov	r0, #1
   1396c:	bl	11b20 <malloc@plt>
   13970:	cmp	r0, #0
   13974:	str	r0, [r6]
   13978:	bne	13948 <table_set_bool@@Base+0x40>
   1397c:	mvn	r0, #0
   13980:	pop	{r4, r5, r6, r7, r8, pc}

00013984 <table_set_int@@Base>:
   13984:	push	{r4, r5, r6, r7, r8, lr}
   13988:	mov	r5, r2
   1398c:	mov	r4, r0
   13990:	mov	r8, r3
   13994:	mov	r7, r1
   13998:	bl	14f48 <table_get_cell_ptr@@Base>
   1399c:	mov	r1, r5
   139a0:	mov	r6, r0
   139a4:	mov	r0, r4
   139a8:	bl	12b2c <table_get_col_ptr@@Base>
   139ac:	ldr	r2, [r0, #4]
   139b0:	cmp	r2, #0
   139b4:	bne	139f8 <table_set_int@@Base+0x74>
   139b8:	ldr	r0, [r6]
   139bc:	cmp	r0, #0
   139c0:	beq	139e4 <table_set_int@@Base+0x60>
   139c4:	str	r8, [r0]
   139c8:	mov	r2, r5
   139cc:	mov	r0, r4
   139d0:	mov	r1, r7
   139d4:	mov	r3, #1
   139d8:	bl	126f0 <table_notify@@Base>
   139dc:	mov	r0, #0
   139e0:	pop	{r4, r5, r6, r7, r8, pc}
   139e4:	mov	r0, #4
   139e8:	bl	11b20 <malloc@plt>
   139ec:	cmp	r0, #0
   139f0:	str	r0, [r6]
   139f4:	bne	139c4 <table_set_int@@Base+0x40>
   139f8:	mvn	r0, #0
   139fc:	pop	{r4, r5, r6, r7, r8, pc}

00013a00 <table_set_uint@@Base>:
   13a00:	push	{r4, r5, r6, r7, r8, lr}
   13a04:	mov	r5, r2
   13a08:	mov	r4, r0
   13a0c:	mov	r8, r3
   13a10:	mov	r7, r1
   13a14:	bl	14f48 <table_get_cell_ptr@@Base>
   13a18:	mov	r1, r5
   13a1c:	mov	r6, r0
   13a20:	mov	r0, r4
   13a24:	bl	12b2c <table_get_col_ptr@@Base>
   13a28:	ldr	r2, [r0, #4]
   13a2c:	cmp	r2, #1
   13a30:	bne	13a74 <table_set_uint@@Base+0x74>
   13a34:	ldr	r0, [r6]
   13a38:	cmp	r0, #0
   13a3c:	beq	13a60 <table_set_uint@@Base+0x60>
   13a40:	str	r8, [r0]
   13a44:	mov	r2, r5
   13a48:	mov	r0, r4
   13a4c:	mov	r1, r7
   13a50:	mov	r3, #1
   13a54:	bl	126f0 <table_notify@@Base>
   13a58:	mov	r0, #0
   13a5c:	pop	{r4, r5, r6, r7, r8, pc}
   13a60:	mov	r0, #4
   13a64:	bl	11b20 <malloc@plt>
   13a68:	cmp	r0, #0
   13a6c:	str	r0, [r6]
   13a70:	bne	13a40 <table_set_uint@@Base+0x40>
   13a74:	mvn	r0, #0
   13a78:	pop	{r4, r5, r6, r7, r8, pc}

00013a7c <table_set_int8@@Base>:
   13a7c:	push	{r4, r5, r6, r7, r8, lr}
   13a80:	mov	r5, r2
   13a84:	mov	r4, r0
   13a88:	mov	r8, r3
   13a8c:	mov	r7, r1
   13a90:	bl	14f48 <table_get_cell_ptr@@Base>
   13a94:	mov	r1, r5
   13a98:	mov	r6, r0
   13a9c:	mov	r0, r4
   13aa0:	bl	12b2c <table_get_col_ptr@@Base>
   13aa4:	ldr	r2, [r0, #4]
   13aa8:	cmp	r2, #2
   13aac:	bne	13af0 <table_set_int8@@Base+0x74>
   13ab0:	ldr	r0, [r6]
   13ab4:	cmp	r0, #0
   13ab8:	beq	13adc <table_set_int8@@Base+0x60>
   13abc:	strb	r8, [r0]
   13ac0:	mov	r2, r5
   13ac4:	mov	r0, r4
   13ac8:	mov	r1, r7
   13acc:	mov	r3, #1
   13ad0:	bl	126f0 <table_notify@@Base>
   13ad4:	mov	r0, #0
   13ad8:	pop	{r4, r5, r6, r7, r8, pc}
   13adc:	mov	r0, #1
   13ae0:	bl	11b20 <malloc@plt>
   13ae4:	cmp	r0, #0
   13ae8:	str	r0, [r6]
   13aec:	bne	13abc <table_set_int8@@Base+0x40>
   13af0:	mvn	r0, #0
   13af4:	pop	{r4, r5, r6, r7, r8, pc}

00013af8 <table_set_uint8@@Base>:
   13af8:	push	{r4, r5, r6, r7, r8, lr}
   13afc:	mov	r5, r2
   13b00:	mov	r4, r0
   13b04:	mov	r8, r3
   13b08:	mov	r7, r1
   13b0c:	bl	14f48 <table_get_cell_ptr@@Base>
   13b10:	mov	r1, r5
   13b14:	mov	r6, r0
   13b18:	mov	r0, r4
   13b1c:	bl	12b2c <table_get_col_ptr@@Base>
   13b20:	ldr	r2, [r0, #4]
   13b24:	cmp	r2, #3
   13b28:	bne	13b6c <table_set_uint8@@Base+0x74>
   13b2c:	ldr	r0, [r6]
   13b30:	cmp	r0, #0
   13b34:	beq	13b58 <table_set_uint8@@Base+0x60>
   13b38:	strb	r8, [r0]
   13b3c:	mov	r2, r5
   13b40:	mov	r0, r4
   13b44:	mov	r1, r7
   13b48:	mov	r3, #1
   13b4c:	bl	126f0 <table_notify@@Base>
   13b50:	mov	r0, #0
   13b54:	pop	{r4, r5, r6, r7, r8, pc}
   13b58:	mov	r0, #1
   13b5c:	bl	11b20 <malloc@plt>
   13b60:	cmp	r0, #0
   13b64:	str	r0, [r6]
   13b68:	bne	13b38 <table_set_uint8@@Base+0x40>
   13b6c:	mvn	r0, #0
   13b70:	pop	{r4, r5, r6, r7, r8, pc}

00013b74 <table_set_int16@@Base>:
   13b74:	push	{r4, r5, r6, r7, r8, lr}
   13b78:	mov	r5, r2
   13b7c:	mov	r4, r0
   13b80:	mov	r8, r3
   13b84:	mov	r7, r1
   13b88:	bl	14f48 <table_get_cell_ptr@@Base>
   13b8c:	mov	r1, r5
   13b90:	mov	r6, r0
   13b94:	mov	r0, r4
   13b98:	bl	12b2c <table_get_col_ptr@@Base>
   13b9c:	ldr	r2, [r0, #4]
   13ba0:	cmp	r2, #4
   13ba4:	bne	13be8 <table_set_int16@@Base+0x74>
   13ba8:	ldr	r0, [r6]
   13bac:	cmp	r0, #0
   13bb0:	beq	13bd4 <table_set_int16@@Base+0x60>
   13bb4:	strh	r8, [r0]
   13bb8:	mov	r2, r5
   13bbc:	mov	r0, r4
   13bc0:	mov	r1, r7
   13bc4:	mov	r3, #1
   13bc8:	bl	126f0 <table_notify@@Base>
   13bcc:	mov	r0, #0
   13bd0:	pop	{r4, r5, r6, r7, r8, pc}
   13bd4:	mov	r0, #2
   13bd8:	bl	11b20 <malloc@plt>
   13bdc:	cmp	r0, #0
   13be0:	str	r0, [r6]
   13be4:	bne	13bb4 <table_set_int16@@Base+0x40>
   13be8:	mvn	r0, #0
   13bec:	pop	{r4, r5, r6, r7, r8, pc}

00013bf0 <table_set_uint16@@Base>:
   13bf0:	push	{r4, r5, r6, r7, r8, lr}
   13bf4:	mov	r5, r2
   13bf8:	mov	r4, r0
   13bfc:	mov	r8, r3
   13c00:	mov	r7, r1
   13c04:	bl	14f48 <table_get_cell_ptr@@Base>
   13c08:	mov	r1, r5
   13c0c:	mov	r6, r0
   13c10:	mov	r0, r4
   13c14:	bl	12b2c <table_get_col_ptr@@Base>
   13c18:	ldr	r2, [r0, #4]
   13c1c:	cmp	r2, #5
   13c20:	bne	13c64 <table_set_uint16@@Base+0x74>
   13c24:	ldr	r0, [r6]
   13c28:	cmp	r0, #0
   13c2c:	beq	13c50 <table_set_uint16@@Base+0x60>
   13c30:	strh	r8, [r0]
   13c34:	mov	r2, r5
   13c38:	mov	r0, r4
   13c3c:	mov	r1, r7
   13c40:	mov	r3, #1
   13c44:	bl	126f0 <table_notify@@Base>
   13c48:	mov	r0, #0
   13c4c:	pop	{r4, r5, r6, r7, r8, pc}
   13c50:	mov	r0, #2
   13c54:	bl	11b20 <malloc@plt>
   13c58:	cmp	r0, #0
   13c5c:	str	r0, [r6]
   13c60:	bne	13c30 <table_set_uint16@@Base+0x40>
   13c64:	mvn	r0, #0
   13c68:	pop	{r4, r5, r6, r7, r8, pc}

00013c6c <table_set_int32@@Base>:
   13c6c:	push	{r4, r5, r6, r7, r8, lr}
   13c70:	mov	r5, r2
   13c74:	mov	r4, r0
   13c78:	mov	r8, r3
   13c7c:	mov	r7, r1
   13c80:	bl	14f48 <table_get_cell_ptr@@Base>
   13c84:	mov	r1, r5
   13c88:	mov	r6, r0
   13c8c:	mov	r0, r4
   13c90:	bl	12b2c <table_get_col_ptr@@Base>
   13c94:	ldr	r2, [r0, #4]
   13c98:	cmp	r2, #6
   13c9c:	bne	13ce0 <table_set_int32@@Base+0x74>
   13ca0:	ldr	r0, [r6]
   13ca4:	cmp	r0, #0
   13ca8:	beq	13ccc <table_set_int32@@Base+0x60>
   13cac:	str	r8, [r0]
   13cb0:	mov	r2, r5
   13cb4:	mov	r0, r4
   13cb8:	mov	r1, r7
   13cbc:	mov	r3, #1
   13cc0:	bl	126f0 <table_notify@@Base>
   13cc4:	mov	r0, #0
   13cc8:	pop	{r4, r5, r6, r7, r8, pc}
   13ccc:	mov	r0, #4
   13cd0:	bl	11b20 <malloc@plt>
   13cd4:	cmp	r0, #0
   13cd8:	str	r0, [r6]
   13cdc:	bne	13cac <table_set_int32@@Base+0x40>
   13ce0:	mvn	r0, #0
   13ce4:	pop	{r4, r5, r6, r7, r8, pc}

00013ce8 <table_set_uint32@@Base>:
   13ce8:	push	{r4, r5, r6, r7, r8, lr}
   13cec:	mov	r5, r2
   13cf0:	mov	r4, r0
   13cf4:	mov	r8, r3
   13cf8:	mov	r7, r1
   13cfc:	bl	14f48 <table_get_cell_ptr@@Base>
   13d00:	mov	r1, r5
   13d04:	mov	r6, r0
   13d08:	mov	r0, r4
   13d0c:	bl	12b2c <table_get_col_ptr@@Base>
   13d10:	ldr	r2, [r0, #4]
   13d14:	cmp	r2, #7
   13d18:	bne	13d5c <table_set_uint32@@Base+0x74>
   13d1c:	ldr	r0, [r6]
   13d20:	cmp	r0, #0
   13d24:	beq	13d48 <table_set_uint32@@Base+0x60>
   13d28:	str	r8, [r0]
   13d2c:	mov	r2, r5
   13d30:	mov	r0, r4
   13d34:	mov	r1, r7
   13d38:	mov	r3, #1
   13d3c:	bl	126f0 <table_notify@@Base>
   13d40:	mov	r0, #0
   13d44:	pop	{r4, r5, r6, r7, r8, pc}
   13d48:	mov	r0, #4
   13d4c:	bl	11b20 <malloc@plt>
   13d50:	cmp	r0, #0
   13d54:	str	r0, [r6]
   13d58:	bne	13d28 <table_set_uint32@@Base+0x40>
   13d5c:	mvn	r0, #0
   13d60:	pop	{r4, r5, r6, r7, r8, pc}

00013d64 <table_set_int64@@Base>:
   13d64:	push	{r4, r5, r6, r7, r8, lr}
   13d68:	mov	r5, r2
   13d6c:	mov	r4, r0
   13d70:	mov	r7, r1
   13d74:	bl	14f48 <table_get_cell_ptr@@Base>
   13d78:	mov	r1, r5
   13d7c:	mov	r6, r0
   13d80:	mov	r0, r4
   13d84:	bl	12b2c <table_get_col_ptr@@Base>
   13d88:	ldr	r0, [r0, #4]
   13d8c:	cmp	r0, #8
   13d90:	bne	13de0 <table_set_int64@@Base+0x7c>
   13d94:	ldr	ip, [r6]
   13d98:	cmp	ip, #0
   13d9c:	beq	13dcc <table_set_int64@@Base+0x68>
   13da0:	add	r3, sp, #24
   13da4:	mov	r2, r5
   13da8:	ldm	r3!, {r0, r1}
   13dac:	mov	r3, #1
   13db0:	str	r0, [ip]
   13db4:	str	r1, [ip, #4]
   13db8:	mov	r0, r4
   13dbc:	mov	r1, r7
   13dc0:	bl	126f0 <table_notify@@Base>
   13dc4:	mov	r0, #0
   13dc8:	pop	{r4, r5, r6, r7, r8, pc}
   13dcc:	bl	11b20 <malloc@plt>
   13dd0:	cmp	r0, #0
   13dd4:	mov	ip, r0
   13dd8:	str	r0, [r6]
   13ddc:	bne	13da0 <table_set_int64@@Base+0x3c>
   13de0:	mvn	r0, #0
   13de4:	pop	{r4, r5, r6, r7, r8, pc}

00013de8 <table_set_uint64@@Base>:
   13de8:	push	{r4, r5, r6, r7, r8, lr}
   13dec:	mov	r5, r2
   13df0:	mov	r4, r0
   13df4:	mov	r7, r1
   13df8:	bl	14f48 <table_get_cell_ptr@@Base>
   13dfc:	mov	r1, r5
   13e00:	mov	r6, r0
   13e04:	mov	r0, r4
   13e08:	bl	12b2c <table_get_col_ptr@@Base>
   13e0c:	ldr	r3, [r0, #4]
   13e10:	cmp	r3, #9
   13e14:	bne	13e68 <table_set_uint64@@Base+0x80>
   13e18:	ldr	ip, [r6]
   13e1c:	cmp	ip, #0
   13e20:	beq	13e50 <table_set_uint64@@Base+0x68>
   13e24:	add	r3, sp, #24
   13e28:	mov	r2, r5
   13e2c:	ldm	r3!, {r0, r1}
   13e30:	mov	r3, #1
   13e34:	str	r0, [ip]
   13e38:	str	r1, [ip, #4]
   13e3c:	mov	r0, r4
   13e40:	mov	r1, r7
   13e44:	bl	126f0 <table_notify@@Base>
   13e48:	mov	r0, #0
   13e4c:	pop	{r4, r5, r6, r7, r8, pc}
   13e50:	mov	r0, #8
   13e54:	bl	11b20 <malloc@plt>
   13e58:	cmp	r0, #0
   13e5c:	mov	ip, r0
   13e60:	str	r0, [r6]
   13e64:	bne	13e24 <table_set_uint64@@Base+0x3c>
   13e68:	mvn	r0, #0
   13e6c:	pop	{r4, r5, r6, r7, r8, pc}

00013e70 <table_set_short@@Base>:
   13e70:	push	{r4, r5, r6, r7, r8, lr}
   13e74:	mov	r5, r2
   13e78:	mov	r4, r0
   13e7c:	mov	r8, r3
   13e80:	mov	r7, r1
   13e84:	bl	14f48 <table_get_cell_ptr@@Base>
   13e88:	mov	r1, r5
   13e8c:	mov	r6, r0
   13e90:	mov	r0, r4
   13e94:	bl	12b2c <table_get_col_ptr@@Base>
   13e98:	ldr	r2, [r0, #4]
   13e9c:	cmp	r2, #10
   13ea0:	bne	13ee4 <table_set_short@@Base+0x74>
   13ea4:	ldr	r0, [r6]
   13ea8:	cmp	r0, #0
   13eac:	beq	13ed0 <table_set_short@@Base+0x60>
   13eb0:	strh	r8, [r0]
   13eb4:	mov	r2, r5
   13eb8:	mov	r0, r4
   13ebc:	mov	r1, r7
   13ec0:	mov	r3, #1
   13ec4:	bl	126f0 <table_notify@@Base>
   13ec8:	mov	r0, #0
   13ecc:	pop	{r4, r5, r6, r7, r8, pc}
   13ed0:	mov	r0, #2
   13ed4:	bl	11b20 <malloc@plt>
   13ed8:	cmp	r0, #0
   13edc:	str	r0, [r6]
   13ee0:	bne	13eb0 <table_set_short@@Base+0x40>
   13ee4:	mvn	r0, #0
   13ee8:	pop	{r4, r5, r6, r7, r8, pc}

00013eec <table_set_ushort@@Base>:
   13eec:	push	{r4, r5, r6, r7, r8, lr}
   13ef0:	mov	r5, r2
   13ef4:	mov	r4, r0
   13ef8:	mov	r8, r3
   13efc:	mov	r7, r1
   13f00:	bl	14f48 <table_get_cell_ptr@@Base>
   13f04:	mov	r1, r5
   13f08:	mov	r6, r0
   13f0c:	mov	r0, r4
   13f10:	bl	12b2c <table_get_col_ptr@@Base>
   13f14:	ldr	r2, [r0, #4]
   13f18:	cmp	r2, #11
   13f1c:	bne	13f60 <table_set_ushort@@Base+0x74>
   13f20:	ldr	r0, [r6]
   13f24:	cmp	r0, #0
   13f28:	beq	13f4c <table_set_ushort@@Base+0x60>
   13f2c:	strh	r8, [r0]
   13f30:	mov	r2, r5
   13f34:	mov	r0, r4
   13f38:	mov	r1, r7
   13f3c:	mov	r3, #1
   13f40:	bl	126f0 <table_notify@@Base>
   13f44:	mov	r0, #0
   13f48:	pop	{r4, r5, r6, r7, r8, pc}
   13f4c:	mov	r0, #2
   13f50:	bl	11b20 <malloc@plt>
   13f54:	cmp	r0, #0
   13f58:	str	r0, [r6]
   13f5c:	bne	13f2c <table_set_ushort@@Base+0x40>
   13f60:	mvn	r0, #0
   13f64:	pop	{r4, r5, r6, r7, r8, pc}

00013f68 <table_set_long@@Base>:
   13f68:	push	{r4, r5, r6, r7, r8, lr}
   13f6c:	mov	r5, r2
   13f70:	mov	r4, r0
   13f74:	mov	r8, r3
   13f78:	mov	r7, r1
   13f7c:	bl	14f48 <table_get_cell_ptr@@Base>
   13f80:	mov	r1, r5
   13f84:	mov	r6, r0
   13f88:	mov	r0, r4
   13f8c:	bl	12b2c <table_get_col_ptr@@Base>
   13f90:	ldr	r2, [r0, #4]
   13f94:	cmp	r2, #12
   13f98:	bne	13fdc <table_set_long@@Base+0x74>
   13f9c:	ldr	r0, [r6]
   13fa0:	cmp	r0, #0
   13fa4:	beq	13fc8 <table_set_long@@Base+0x60>
   13fa8:	str	r8, [r0]
   13fac:	mov	r2, r5
   13fb0:	mov	r0, r4
   13fb4:	mov	r1, r7
   13fb8:	mov	r3, #1
   13fbc:	bl	126f0 <table_notify@@Base>
   13fc0:	mov	r0, #0
   13fc4:	pop	{r4, r5, r6, r7, r8, pc}
   13fc8:	mov	r0, #4
   13fcc:	bl	11b20 <malloc@plt>
   13fd0:	cmp	r0, #0
   13fd4:	str	r0, [r6]
   13fd8:	bne	13fa8 <table_set_long@@Base+0x40>
   13fdc:	mvn	r0, #0
   13fe0:	pop	{r4, r5, r6, r7, r8, pc}

00013fe4 <table_set_ulong@@Base>:
   13fe4:	push	{r4, r5, r6, r7, r8, lr}
   13fe8:	mov	r5, r2
   13fec:	mov	r4, r0
   13ff0:	mov	r8, r3
   13ff4:	mov	r7, r1
   13ff8:	bl	14f48 <table_get_cell_ptr@@Base>
   13ffc:	mov	r1, r5
   14000:	mov	r6, r0
   14004:	mov	r0, r4
   14008:	bl	12b2c <table_get_col_ptr@@Base>
   1400c:	ldr	r2, [r0, #4]
   14010:	cmp	r2, #13
   14014:	bne	14058 <table_set_ulong@@Base+0x74>
   14018:	ldr	r0, [r6]
   1401c:	cmp	r0, #0
   14020:	beq	14044 <table_set_ulong@@Base+0x60>
   14024:	str	r8, [r0]
   14028:	mov	r2, r5
   1402c:	mov	r0, r4
   14030:	mov	r1, r7
   14034:	mov	r3, #1
   14038:	bl	126f0 <table_notify@@Base>
   1403c:	mov	r0, #0
   14040:	pop	{r4, r5, r6, r7, r8, pc}
   14044:	mov	r0, #4
   14048:	bl	11b20 <malloc@plt>
   1404c:	cmp	r0, #0
   14050:	str	r0, [r6]
   14054:	bne	14024 <table_set_ulong@@Base+0x40>
   14058:	mvn	r0, #0
   1405c:	pop	{r4, r5, r6, r7, r8, pc}

00014060 <table_set_llong@@Base>:
   14060:	push	{r4, r5, r6, r7, r8, lr}
   14064:	mov	r5, r2
   14068:	mov	r4, r0
   1406c:	mov	r7, r1
   14070:	bl	14f48 <table_get_cell_ptr@@Base>
   14074:	mov	r1, r5
   14078:	mov	r6, r0
   1407c:	mov	r0, r4
   14080:	bl	12b2c <table_get_col_ptr@@Base>
   14084:	ldr	r3, [r0, #4]
   14088:	cmp	r3, #14
   1408c:	bne	140e0 <table_set_llong@@Base+0x80>
   14090:	ldr	ip, [r6]
   14094:	cmp	ip, #0
   14098:	beq	140c8 <table_set_llong@@Base+0x68>
   1409c:	add	r3, sp, #24
   140a0:	mov	r2, r5
   140a4:	ldm	r3!, {r0, r1}
   140a8:	mov	r3, #1
   140ac:	str	r0, [ip]
   140b0:	str	r1, [ip, #4]
   140b4:	mov	r0, r4
   140b8:	mov	r1, r7
   140bc:	bl	126f0 <table_notify@@Base>
   140c0:	mov	r0, #0
   140c4:	pop	{r4, r5, r6, r7, r8, pc}
   140c8:	mov	r0, #8
   140cc:	bl	11b20 <malloc@plt>
   140d0:	cmp	r0, #0
   140d4:	mov	ip, r0
   140d8:	str	r0, [r6]
   140dc:	bne	1409c <table_set_llong@@Base+0x3c>
   140e0:	mvn	r0, #0
   140e4:	pop	{r4, r5, r6, r7, r8, pc}

000140e8 <table_set_ullong@@Base>:
   140e8:	push	{r4, r5, r6, r7, r8, lr}
   140ec:	mov	r5, r2
   140f0:	mov	r4, r0
   140f4:	mov	r7, r1
   140f8:	bl	14f48 <table_get_cell_ptr@@Base>
   140fc:	mov	r1, r5
   14100:	mov	r6, r0
   14104:	mov	r0, r4
   14108:	bl	12b2c <table_get_col_ptr@@Base>
   1410c:	ldr	r3, [r0, #4]
   14110:	cmp	r3, #15
   14114:	bne	14168 <table_set_ullong@@Base+0x80>
   14118:	ldr	ip, [r6]
   1411c:	cmp	ip, #0
   14120:	beq	14150 <table_set_ullong@@Base+0x68>
   14124:	add	r3, sp, #24
   14128:	mov	r2, r5
   1412c:	ldm	r3!, {r0, r1}
   14130:	mov	r3, #1
   14134:	str	r0, [ip]
   14138:	str	r1, [ip, #4]
   1413c:	mov	r0, r4
   14140:	mov	r1, r7
   14144:	bl	126f0 <table_notify@@Base>
   14148:	mov	r0, #0
   1414c:	pop	{r4, r5, r6, r7, r8, pc}
   14150:	mov	r0, #8
   14154:	bl	11b20 <malloc@plt>
   14158:	cmp	r0, #0
   1415c:	mov	ip, r0
   14160:	str	r0, [r6]
   14164:	bne	14124 <table_set_ullong@@Base+0x3c>
   14168:	mvn	r0, #0
   1416c:	pop	{r4, r5, r6, r7, r8, pc}

00014170 <table_set_float@@Base>:
   14170:	push	{r4, r5, r6, r7, r8, lr}
   14174:	mov	r5, r2
   14178:	mov	r4, r0
   1417c:	mov	r7, r1
   14180:	vmov	r8, s0
   14184:	bl	14f48 <table_get_cell_ptr@@Base>
   14188:	mov	r1, r5
   1418c:	mov	r6, r0
   14190:	mov	r0, r4
   14194:	bl	12b2c <table_get_col_ptr@@Base>
   14198:	ldr	r3, [r0, #4]
   1419c:	cmp	r3, #16
   141a0:	bne	141e4 <table_set_float@@Base+0x74>
   141a4:	ldr	r0, [r6]
   141a8:	cmp	r0, #0
   141ac:	beq	141d0 <table_set_float@@Base+0x60>
   141b0:	str	r8, [r0]
   141b4:	mov	r2, r5
   141b8:	mov	r0, r4
   141bc:	mov	r1, r7
   141c0:	mov	r3, #1
   141c4:	bl	126f0 <table_notify@@Base>
   141c8:	mov	r0, #0
   141cc:	pop	{r4, r5, r6, r7, r8, pc}
   141d0:	mov	r0, #4
   141d4:	bl	11b20 <malloc@plt>
   141d8:	cmp	r0, #0
   141dc:	str	r0, [r6]
   141e0:	bne	141b0 <table_set_float@@Base+0x40>
   141e4:	mvn	r0, #0
   141e8:	pop	{r4, r5, r6, r7, r8, pc}

000141ec <table_set_double@@Base>:
   141ec:	push	{r4, r5, r6, r7, lr}
   141f0:	sub	sp, sp, #12
   141f4:	mov	r5, r2
   141f8:	mov	r4, r0
   141fc:	vstr	d0, [sp]
   14200:	mov	r7, r1
   14204:	bl	14f48 <table_get_cell_ptr@@Base>
   14208:	mov	r1, r5
   1420c:	mov	r6, r0
   14210:	mov	r0, r4
   14214:	bl	12b2c <table_get_col_ptr@@Base>
   14218:	ldr	r3, [r0, #4]
   1421c:	cmp	r3, #17
   14220:	bne	14278 <table_set_double@@Base+0x8c>
   14224:	ldr	ip, [r6]
   14228:	cmp	ip, #0
   1422c:	beq	14260 <table_set_double@@Base+0x74>
   14230:	mov	r3, sp
   14234:	mov	r2, r5
   14238:	ldm	r3!, {r0, r1}
   1423c:	mov	r3, #1
   14240:	str	r0, [ip]
   14244:	str	r1, [ip, #4]
   14248:	mov	r0, r4
   1424c:	mov	r1, r7
   14250:	bl	126f0 <table_notify@@Base>
   14254:	mov	r0, #0
   14258:	add	sp, sp, #12
   1425c:	pop	{r4, r5, r6, r7, pc}
   14260:	mov	r0, #8
   14264:	bl	11b20 <malloc@plt>
   14268:	cmp	r0, #0
   1426c:	mov	ip, r0
   14270:	str	r0, [r6]
   14274:	bne	14230 <table_set_double@@Base+0x44>
   14278:	mvn	r0, #0
   1427c:	add	sp, sp, #12
   14280:	pop	{r4, r5, r6, r7, pc}

00014284 <table_set_ldouble@@Base>:
   14284:	push	{r4, r5, r6, r7, lr}
   14288:	sub	sp, sp, #12
   1428c:	mov	r5, r2
   14290:	mov	r4, r0
   14294:	vstr	d0, [sp]
   14298:	mov	r7, r1
   1429c:	bl	14f48 <table_get_cell_ptr@@Base>
   142a0:	mov	r1, r5
   142a4:	mov	r6, r0
   142a8:	mov	r0, r4
   142ac:	bl	12b2c <table_get_col_ptr@@Base>
   142b0:	ldr	r3, [r0, #4]
   142b4:	cmp	r3, #18
   142b8:	bne	14310 <table_set_ldouble@@Base+0x8c>
   142bc:	ldr	ip, [r6]
   142c0:	cmp	ip, #0
   142c4:	beq	142f8 <table_set_ldouble@@Base+0x74>
   142c8:	mov	r3, sp
   142cc:	mov	r2, r5
   142d0:	ldm	r3!, {r0, r1}
   142d4:	mov	r3, #1
   142d8:	str	r0, [ip]
   142dc:	str	r1, [ip, #4]
   142e0:	mov	r0, r4
   142e4:	mov	r1, r7
   142e8:	bl	126f0 <table_notify@@Base>
   142ec:	mov	r0, #0
   142f0:	add	sp, sp, #12
   142f4:	pop	{r4, r5, r6, r7, pc}
   142f8:	mov	r0, #8
   142fc:	bl	11b20 <malloc@plt>
   14300:	cmp	r0, #0
   14304:	mov	ip, r0
   14308:	str	r0, [r6]
   1430c:	bne	142c8 <table_set_ldouble@@Base+0x44>
   14310:	mvn	r0, #0
   14314:	add	sp, sp, #12
   14318:	pop	{r4, r5, r6, r7, pc}

0001431c <table_set_string@@Base>:
   1431c:	push	{r4, r5, r6, r7, r8, lr}
   14320:	mov	r5, r2
   14324:	mov	r7, r3
   14328:	mov	r4, r0
   1432c:	mov	r8, r1
   14330:	bl	14f48 <table_get_cell_ptr@@Base>
   14334:	mov	r1, r5
   14338:	mov	r6, r0
   1433c:	mov	r0, r4
   14340:	bl	12b2c <table_get_col_ptr@@Base>
   14344:	ldr	r3, [r0, #4]
   14348:	cmp	r3, #21
   1434c:	bne	14394 <table_set_string@@Base+0x78>
   14350:	mov	r0, r7
   14354:	bl	11b44 <strlen@plt>
   14358:	add	r1, r0, #1
   1435c:	ldr	r0, [r6]
   14360:	bl	11b08 <realloc@plt>
   14364:	cmp	r0, #0
   14368:	str	r0, [r6]
   1436c:	beq	14394 <table_set_string@@Base+0x78>
   14370:	mov	r1, r7
   14374:	bl	11b14 <strcpy@plt>
   14378:	mov	r0, r4
   1437c:	mov	r2, r5
   14380:	mov	r1, r8
   14384:	mov	r3, #1
   14388:	bl	126f0 <table_notify@@Base>
   1438c:	mov	r0, #0
   14390:	pop	{r4, r5, r6, r7, r8, pc}
   14394:	mvn	r0, #0
   14398:	pop	{r4, r5, r6, r7, r8, pc}

0001439c <table_set_char@@Base>:
   1439c:	push	{r4, r5, r6, r7, r8, lr}
   143a0:	mov	r5, r2
   143a4:	mov	r4, r0
   143a8:	mov	r8, r3
   143ac:	mov	r7, r1
   143b0:	bl	14f48 <table_get_cell_ptr@@Base>
   143b4:	mov	r1, r5
   143b8:	mov	r6, r0
   143bc:	mov	r0, r4
   143c0:	bl	12b2c <table_get_col_ptr@@Base>
   143c4:	ldr	r2, [r0, #4]
   143c8:	cmp	r2, #19
   143cc:	bne	14410 <table_set_char@@Base+0x74>
   143d0:	ldr	r0, [r6]
   143d4:	cmp	r0, #0
   143d8:	beq	143fc <table_set_char@@Base+0x60>
   143dc:	strb	r8, [r0]
   143e0:	mov	r2, r5
   143e4:	mov	r0, r4
   143e8:	mov	r1, r7
   143ec:	mov	r3, #1
   143f0:	bl	126f0 <table_notify@@Base>
   143f4:	mov	r0, #0
   143f8:	pop	{r4, r5, r6, r7, r8, pc}
   143fc:	mov	r0, #1
   14400:	bl	11b20 <malloc@plt>
   14404:	cmp	r0, #0
   14408:	str	r0, [r6]
   1440c:	bne	143dc <table_set_char@@Base+0x40>
   14410:	mvn	r0, #0
   14414:	pop	{r4, r5, r6, r7, r8, pc}

00014418 <table_set_uchar@@Base>:
   14418:	push	{r4, r5, r6, r7, r8, lr}
   1441c:	mov	r5, r2
   14420:	mov	r4, r0
   14424:	mov	r8, r3
   14428:	mov	r7, r1
   1442c:	bl	14f48 <table_get_cell_ptr@@Base>
   14430:	mov	r1, r5
   14434:	mov	r6, r0
   14438:	mov	r0, r4
   1443c:	bl	12b2c <table_get_col_ptr@@Base>
   14440:	ldr	r2, [r0, #4]
   14444:	cmp	r2, #20
   14448:	bne	1448c <table_set_uchar@@Base+0x74>
   1444c:	ldr	r0, [r6]
   14450:	cmp	r0, #0
   14454:	beq	14478 <table_set_uchar@@Base+0x60>
   14458:	strb	r8, [r0]
   1445c:	mov	r2, r5
   14460:	mov	r0, r4
   14464:	mov	r1, r7
   14468:	mov	r3, #1
   1446c:	bl	126f0 <table_notify@@Base>
   14470:	mov	r0, #0
   14474:	pop	{r4, r5, r6, r7, r8, pc}
   14478:	mov	r0, #1
   1447c:	bl	11b20 <malloc@plt>
   14480:	cmp	r0, #0
   14484:	str	r0, [r6]
   14488:	bne	14458 <table_set_uchar@@Base+0x40>
   1448c:	mvn	r0, #0
   14490:	pop	{r4, r5, r6, r7, r8, pc}

00014494 <table_set_ptr@@Base>:
   14494:	push	{r4, r5, r6, r7, r8, lr}
   14498:	mov	r5, r2
   1449c:	mov	r4, r0
   144a0:	mov	r8, r3
   144a4:	mov	r6, r1
   144a8:	bl	14f48 <table_get_cell_ptr@@Base>
   144ac:	mov	r1, r5
   144b0:	mov	r7, r0
   144b4:	mov	r0, r4
   144b8:	bl	12b2c <table_get_col_ptr@@Base>
   144bc:	ldr	r2, [r0, #4]
   144c0:	cmp	r2, #23
   144c4:	bne	144e8 <table_set_ptr@@Base+0x54>
   144c8:	mov	r0, r4
   144cc:	str	r8, [r7]
   144d0:	mov	r2, r5
   144d4:	mov	r1, r6
   144d8:	mov	r3, #1
   144dc:	bl	126f0 <table_notify@@Base>
   144e0:	mov	r0, #0
   144e4:	pop	{r4, r5, r6, r7, r8, pc}
   144e8:	mvn	r0, #0
   144ec:	pop	{r4, r5, r6, r7, r8, pc}

000144f0 <table_cell_init@@Base>:
   144f0:	push	{r4, lr}
   144f4:	mov	r4, r2
   144f8:	bl	135a0 <table_get_row_ptr@@Base>
   144fc:	mov	r2, #0
   14500:	ldr	r3, [r0]
   14504:	str	r2, [r3, r4, lsl #2]
   14508:	pop	{r4, pc}

0001450c <table_cell_destroy@@Base>:
   1450c:	push	{r4, r5, r6, lr}
   14510:	mov	r6, r1
   14514:	mov	r1, r2
   14518:	mov	r4, r2
   1451c:	mov	r5, r0
   14520:	bl	12850 <table_get_column_data_type@@Base>
   14524:	cmp	r0, #23
   14528:	popeq	{r4, r5, r6, pc}
   1452c:	mov	r1, r6
   14530:	mov	r0, r5
   14534:	bl	135a0 <table_get_row_ptr@@Base>
   14538:	ldr	r3, [r0]
   1453c:	ldr	r0, [r3, r4, lsl #2]
   14540:	cmp	r0, #0
   14544:	popeq	{r4, r5, r6, pc}
   14548:	pop	{r4, r5, r6, lr}
   1454c:	b	11af0 <free@plt>

00014550 <table_cell_to_buffer@@Base>:
   14550:	push	{r4, r5, r6, r7, lr}
   14554:	mov	r7, r1
   14558:	sub	sp, sp, #12
   1455c:	mov	r1, r2
   14560:	mov	r4, r2
   14564:	mov	r5, r3
   14568:	mov	r6, r0
   1456c:	bl	12850 <table_get_column_data_type@@Base>
   14570:	cmp	r0, #23
   14574:	ldrls	pc, [pc, r0, lsl #2]
   14578:	b	14600 <table_cell_to_buffer@@Base+0xb0>
   1457c:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14580:	andeq	r4, r1, r0, asr #17
   14584:	andeq	r4, r1, ip, lsr #17
   14588:	muleq	r1, r8, r8
   1458c:	andeq	r4, r1, r4, lsl #17
   14590:	andeq	r4, r1, r0, ror r8
   14594:	andeq	r4, r1, ip, asr r8
   14598:	andeq	r4, r1, ip, lsr #16
   1459c:	andeq	r4, r1, r8, lsl r8
   145a0:	andeq	r4, r1, r4, lsl #16
   145a4:	ldrdeq	r4, [r1], -ip
   145a8:			; <UNDEFINED> instruction: 0x000147b4
   145ac:	andeq	r4, r1, ip, lsl #15
   145b0:	andeq	r4, r1, r4, ror #14
   145b4:	andeq	r4, r1, ip, lsr r7
   145b8:	andeq	r4, r1, r4, lsl r7
   145bc:	andeq	r4, r1, r8, ror #13
   145c0:	andeq	r4, r1, r0, asr #13
   145c4:	muleq	r1, r8, r6
   145c8:	andeq	r4, r1, r4, lsl #13
   145cc:	andeq	r4, r1, ip, asr r6
   145d0:	andeq	r4, r1, r4, lsr r6
   145d4:	ldrdeq	r4, [r1], -ip
   145d8:	andeq	r4, r1, ip, lsl #12
   145dc:	mov	r2, r4
   145e0:	mov	r1, r7
   145e4:	mov	r0, r6
   145e8:	bl	1319c <table_get_bool@@Base>
   145ec:	mov	r3, r0
   145f0:	ldr	r2, [pc, #752]	; 148e8 <table_cell_to_buffer@@Base+0x398>
   145f4:	mov	r0, r5
   145f8:	ldr	r1, [sp, #32]
   145fc:	bl	11b5c <snprintf@plt>
   14600:	mov	r0, #0
   14604:	add	sp, sp, #12
   14608:	pop	{r4, r5, r6, r7, pc}
   1460c:	mov	r2, r4
   14610:	mov	r1, r7
   14614:	mov	r0, r6
   14618:	bl	13364 <table_get_ptr@@Base>
   1461c:	ldr	r2, [pc, #712]	; 148ec <table_cell_to_buffer@@Base+0x39c>
   14620:	ldr	r1, [sp, #32]
   14624:	mov	r3, r0
   14628:	mov	r0, r5
   1462c:	bl	11b5c <snprintf@plt>
   14630:	b	14600 <table_cell_to_buffer@@Base+0xb0>
   14634:	mov	r2, r4
   14638:	mov	r1, r7
   1463c:	mov	r0, r6
   14640:	bl	13354 <table_get_string@@Base>
   14644:	ldr	r2, [pc, #676]	; 148f0 <table_cell_to_buffer@@Base+0x3a0>
   14648:	ldr	r1, [sp, #32]
   1464c:	mov	r3, r0
   14650:	mov	r0, r5
   14654:	bl	11b5c <snprintf@plt>
   14658:	b	14600 <table_cell_to_buffer@@Base+0xb0>
   1465c:	mov	r2, r4
   14660:	mov	r1, r7
   14664:	mov	r0, r6
   14668:	bl	13340 <table_get_uchar@@Base>
   1466c:	mov	r3, r0
   14670:	ldr	r2, [pc, #636]	; 148f4 <table_cell_to_buffer@@Base+0x3a4>
   14674:	mov	r0, r5
   14678:	ldr	r1, [sp, #32]
   1467c:	bl	11b5c <snprintf@plt>
   14680:	b	14600 <table_cell_to_buffer@@Base+0xb0>
   14684:	mov	r2, r4
   14688:	mov	r1, r7
   1468c:	mov	r0, r6
   14690:	bl	1332c <table_get_char@@Base>
   14694:	b	1466c <table_cell_to_buffer@@Base+0x11c>
   14698:	mov	r2, r4
   1469c:	mov	r1, r7
   146a0:	mov	r0, r6
   146a4:	bl	13318 <table_get_ldouble@@Base>
   146a8:	mov	r0, r5
   146ac:	ldr	r2, [pc, #580]	; 148f8 <table_cell_to_buffer@@Base+0x3a8>
   146b0:	ldr	r1, [sp, #32]
   146b4:	vstr	d0, [sp]
   146b8:	bl	11b5c <snprintf@plt>
   146bc:	b	14600 <table_cell_to_buffer@@Base+0xb0>
   146c0:	mov	r2, r4
   146c4:	mov	r1, r7
   146c8:	mov	r0, r6
   146cc:	bl	13304 <table_get_double@@Base>
   146d0:	mov	r0, r5
   146d4:	ldr	r2, [pc, #544]	; 148fc <table_cell_to_buffer@@Base+0x3ac>
   146d8:	ldr	r1, [sp, #32]
   146dc:	vstr	d0, [sp]
   146e0:	bl	11b5c <snprintf@plt>
   146e4:	b	14600 <table_cell_to_buffer@@Base+0xb0>
   146e8:	mov	r2, r4
   146ec:	mov	r1, r7
   146f0:	mov	r0, r6
   146f4:	bl	132f0 <table_get_float@@Base>
   146f8:	mov	r0, r5
   146fc:	ldr	r2, [pc, #508]	; 14900 <table_cell_to_buffer@@Base+0x3b0>
   14700:	ldr	r1, [sp, #32]
   14704:	vcvt.f64.f32	d0, s0
   14708:	vstr	d0, [sp]
   1470c:	bl	11b5c <snprintf@plt>
   14710:	b	14600 <table_cell_to_buffer@@Base+0xb0>
   14714:	mov	r2, r4
   14718:	mov	r1, r7
   1471c:	mov	r0, r6
   14720:	bl	132dc <table_get_ullong@@Base>
   14724:	strd	r0, [sp]
   14728:	ldr	r2, [pc, #468]	; 14904 <table_cell_to_buffer@@Base+0x3b4>
   1472c:	mov	r0, r5
   14730:	ldr	r1, [sp, #32]
   14734:	bl	11b5c <snprintf@plt>
   14738:	b	14600 <table_cell_to_buffer@@Base+0xb0>
   1473c:	mov	r2, r4
   14740:	mov	r1, r7
   14744:	mov	r0, r6
   14748:	bl	132c8 <table_get_llong@@Base>
   1474c:	strd	r0, [sp]
   14750:	ldr	r2, [pc, #432]	; 14908 <table_cell_to_buffer@@Base+0x3b8>
   14754:	mov	r0, r5
   14758:	ldr	r1, [sp, #32]
   1475c:	bl	11b5c <snprintf@plt>
   14760:	b	14600 <table_cell_to_buffer@@Base+0xb0>
   14764:	mov	r2, r4
   14768:	mov	r1, r7
   1476c:	mov	r0, r6
   14770:	bl	132b4 <table_get_ulong@@Base>
   14774:	ldr	r2, [pc, #400]	; 1490c <table_cell_to_buffer@@Base+0x3bc>
   14778:	ldr	r1, [sp, #32]
   1477c:	mov	r3, r0
   14780:	mov	r0, r5
   14784:	bl	11b5c <snprintf@plt>
   14788:	b	14600 <table_cell_to_buffer@@Base+0xb0>
   1478c:	mov	r2, r4
   14790:	mov	r1, r7
   14794:	mov	r0, r6
   14798:	bl	132a0 <table_get_long@@Base>
   1479c:	ldr	r2, [pc, #364]	; 14910 <table_cell_to_buffer@@Base+0x3c0>
   147a0:	ldr	r1, [sp, #32]
   147a4:	mov	r3, r0
   147a8:	mov	r0, r5
   147ac:	bl	11b5c <snprintf@plt>
   147b0:	b	14600 <table_cell_to_buffer@@Base+0xb0>
   147b4:	mov	r2, r4
   147b8:	mov	r1, r7
   147bc:	mov	r0, r6
   147c0:	bl	1328c <table_get_ushort@@Base>
   147c4:	ldr	r2, [pc, #328]	; 14914 <table_cell_to_buffer@@Base+0x3c4>
   147c8:	ldr	r1, [sp, #32]
   147cc:	mov	r3, r0
   147d0:	mov	r0, r5
   147d4:	bl	11b5c <snprintf@plt>
   147d8:	b	14600 <table_cell_to_buffer@@Base+0xb0>
   147dc:	mov	r2, r4
   147e0:	mov	r1, r7
   147e4:	mov	r0, r6
   147e8:	bl	13278 <table_get_short@@Base>
   147ec:	ldr	r2, [pc, #292]	; 14918 <table_cell_to_buffer@@Base+0x3c8>
   147f0:	ldr	r1, [sp, #32]
   147f4:	mov	r3, r0
   147f8:	mov	r0, r5
   147fc:	bl	11b5c <snprintf@plt>
   14800:	b	14600 <table_cell_to_buffer@@Base+0xb0>
   14804:	mov	r2, r4
   14808:	mov	r1, r7
   1480c:	mov	r0, r6
   14810:	bl	13264 <table_get_uint64@@Base>
   14814:	b	14724 <table_cell_to_buffer@@Base+0x1d4>
   14818:	mov	r2, r4
   1481c:	mov	r1, r7
   14820:	mov	r0, r6
   14824:	bl	13250 <table_get_int64@@Base>
   14828:	b	1474c <table_cell_to_buffer@@Base+0x1fc>
   1482c:	mov	r2, r4
   14830:	mov	r1, r7
   14834:	mov	r0, r6
   14838:	bl	1323c <table_get_uint32@@Base>
   1483c:	mov	r3, r0
   14840:	ldr	r2, [pc, #212]	; 1491c <table_cell_to_buffer@@Base+0x3cc>
   14844:	mov	r0, r5
   14848:	ldr	r1, [sp, #32]
   1484c:	bl	11b5c <snprintf@plt>
   14850:	mov	r0, #0
   14854:	add	sp, sp, #12
   14858:	pop	{r4, r5, r6, r7, pc}
   1485c:	mov	r2, r4
   14860:	mov	r1, r7
   14864:	mov	r0, r6
   14868:	bl	13228 <table_get_int32@@Base>
   1486c:	b	145ec <table_cell_to_buffer@@Base+0x9c>
   14870:	mov	r2, r4
   14874:	mov	r1, r7
   14878:	mov	r0, r6
   1487c:	bl	13214 <table_get_uint16@@Base>
   14880:	b	1483c <table_cell_to_buffer@@Base+0x2ec>
   14884:	mov	r2, r4
   14888:	mov	r1, r7
   1488c:	mov	r0, r6
   14890:	bl	13200 <table_get_int16@@Base>
   14894:	b	145ec <table_cell_to_buffer@@Base+0x9c>
   14898:	mov	r2, r4
   1489c:	mov	r1, r7
   148a0:	mov	r0, r6
   148a4:	bl	131ec <table_get_uint8@@Base>
   148a8:	b	1483c <table_cell_to_buffer@@Base+0x2ec>
   148ac:	mov	r2, r4
   148b0:	mov	r1, r7
   148b4:	mov	r0, r6
   148b8:	bl	131d8 <table_get_int8@@Base>
   148bc:	b	145ec <table_cell_to_buffer@@Base+0x9c>
   148c0:	mov	r2, r4
   148c4:	mov	r1, r7
   148c8:	mov	r0, r6
   148cc:	bl	131c4 <table_get_uint@@Base>
   148d0:	b	1483c <table_cell_to_buffer@@Base+0x2ec>
   148d4:	mov	r2, r4
   148d8:	mov	r1, r7
   148dc:	mov	r0, r6
   148e0:	bl	131b0 <table_get_int@@Base>
   148e4:	b	145ec <table_cell_to_buffer@@Base+0x9c>
   148e8:	andeq	r5, r1, ip, asr #4
   148ec:	andeq	r5, r1, r8, lsl #5
   148f0:	andeq	r5, r1, r4, ror r2
   148f4:	andeq	r5, r1, r4, lsl #5
   148f8:	andeq	r5, r1, r0, lsl #5
   148fc:	andeq	r5, r1, ip, ror r2
   14900:	andeq	r5, r1, r8, ror r2
   14904:	andeq	r5, r1, ip, asr r2
   14908:	andeq	r5, r1, r4, asr r2
   1490c:	andeq	r5, r1, r0, ror r2
   14910:	andeq	r5, r1, ip, ror #4
   14914:	andeq	r5, r1, r8, ror #4
   14918:	andeq	r5, r1, r4, ror #4
   1491c:	andeq	r5, r1, r0, asr r2

00014920 <table_cell_from_buffer@@Base>:
   14920:	push	{r4, r5, r6, r7, r8, lr}
   14924:	mov	r8, r1
   14928:	sub	sp, sp, #264	; 0x108
   1492c:	mov	r1, r2
   14930:	mov	r4, r2
   14934:	mov	r6, r3
   14938:	mov	r5, r0
   1493c:	bl	12850 <table_get_column_data_type@@Base>
   14940:	cmp	r0, #23
   14944:	ldrls	pc, [pc, r0, lsl #2]
   14948:	b	14ed0 <table_cell_from_buffer@@Base+0x5b0>
   1494c:	andeq	r4, r1, r8, ror #28
   14950:	andeq	r4, r1, r4, lsr lr
   14954:	andeq	r4, r1, r0, lsl #28
   14958:	andeq	r4, r1, ip, asr #27
   1495c:	muleq	r1, r8, sp
   14960:	andeq	r4, r1, r4, ror #26
   14964:	andeq	r4, r1, r0, lsr sp
   14968:	strdeq	r4, [r1], -ip
   1496c:	andeq	r4, r1, r4, asr #25
   14970:	andeq	r4, r1, ip, lsl #25
   14974:	andeq	r4, r1, r8, asr ip
   14978:	andeq	r4, r1, r4, lsr #24
   1497c:	strdeq	r4, [r1], -r0
   14980:			; <UNDEFINED> instruction: 0x00014bbc
   14984:	andeq	r4, r1, r4, lsl #23
   14988:	andeq	r4, r1, ip, asr #22
   1498c:	andeq	r4, r1, r4, ror #21
   14990:			; <UNDEFINED> instruction: 0x00014ab0
   14994:	andeq	r4, r1, r8, lsl fp
   14998:	andeq	r4, r1, r4, lsl sl
   1499c:	andeq	r4, r1, ip, ror sl
   149a0:	andeq	r4, r1, r8, asr #20
   149a4:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   149a8:	andeq	r4, r1, ip, lsr #19
   149ac:	mov	r0, r6
   149b0:	add	r2, sp, #8
   149b4:	ldr	r1, [pc, #1308]	; 14ed8 <table_cell_from_buffer@@Base+0x5b8>
   149b8:	bl	11b68 <__isoc99_sscanf@plt>
   149bc:	cmp	r0, #1
   149c0:	beq	14eb4 <table_cell_from_buffer@@Base+0x594>
   149c4:	mvn	r6, #0
   149c8:	mov	r0, r6
   149cc:	add	sp, sp, #264	; 0x108
   149d0:	pop	{r4, r5, r6, r7, r8, pc}
   149d4:	mov	r0, r6
   149d8:	add	r2, sp, #8
   149dc:	ldr	r1, [pc, #1272]	; 14edc <table_cell_from_buffer@@Base+0x5bc>
   149e0:	bl	11b68 <__isoc99_sscanf@plt>
   149e4:	cmp	r0, #1
   149e8:	bne	149c4 <table_cell_from_buffer@@Base+0xa4>
   149ec:	ldr	r6, [sp, #8]
   149f0:	cmp	r6, #0
   149f4:	beq	14e9c <table_cell_from_buffer@@Base+0x57c>
   149f8:	mov	r3, r0
   149fc:	mov	r2, r4
   14a00:	mov	r1, r8
   14a04:	mov	r0, r5
   14a08:	bl	13908 <table_set_bool@@Base>
   14a0c:	mov	r6, #0
   14a10:	b	149c8 <table_cell_from_buffer@@Base+0xa8>
   14a14:	mov	r0, r6
   14a18:	add	r2, sp, #8
   14a1c:	ldr	r1, [pc, #1212]	; 14ee0 <table_cell_from_buffer@@Base+0x5c0>
   14a20:	bl	11b68 <__isoc99_sscanf@plt>
   14a24:	cmp	r0, #1
   14a28:	bne	149c4 <table_cell_from_buffer@@Base+0xa4>
   14a2c:	mov	r2, r4
   14a30:	mov	r1, r8
   14a34:	mov	r0, r5
   14a38:	ldrb	r3, [sp, #8]
   14a3c:	bl	1439c <table_set_char@@Base>
   14a40:	mov	r6, #0
   14a44:	b	149c8 <table_cell_from_buffer@@Base+0xa8>
   14a48:	mov	r0, r6
   14a4c:	add	r2, sp, #8
   14a50:	ldr	r1, [pc, #1164]	; 14ee4 <table_cell_from_buffer@@Base+0x5c4>
   14a54:	bl	11b68 <__isoc99_sscanf@plt>
   14a58:	cmp	r0, #1
   14a5c:	bne	149c4 <table_cell_from_buffer@@Base+0xa4>
   14a60:	add	r3, sp, #8
   14a64:	mov	r2, r4
   14a68:	mov	r1, r8
   14a6c:	mov	r0, r5
   14a70:	bl	1431c <table_set_string@@Base>
   14a74:	mov	r6, #0
   14a78:	b	149c8 <table_cell_from_buffer@@Base+0xa8>
   14a7c:	mov	r0, r6
   14a80:	add	r2, sp, #8
   14a84:	ldr	r1, [pc, #1108]	; 14ee0 <table_cell_from_buffer@@Base+0x5c0>
   14a88:	bl	11b68 <__isoc99_sscanf@plt>
   14a8c:	cmp	r0, #1
   14a90:	bne	149c4 <table_cell_from_buffer@@Base+0xa4>
   14a94:	mov	r2, r4
   14a98:	mov	r1, r8
   14a9c:	mov	r0, r5
   14aa0:	ldrb	r3, [sp, #8]
   14aa4:	bl	14418 <table_set_uchar@@Base>
   14aa8:	mov	r6, #0
   14aac:	b	149c8 <table_cell_from_buffer@@Base+0xa8>
   14ab0:	mov	r0, r6
   14ab4:	add	r2, sp, #8
   14ab8:	ldr	r1, [pc, #1064]	; 14ee8 <table_cell_from_buffer@@Base+0x5c8>
   14abc:	bl	11b68 <__isoc99_sscanf@plt>
   14ac0:	cmp	r0, #1
   14ac4:	bne	149c4 <table_cell_from_buffer@@Base+0xa4>
   14ac8:	mov	r2, r4
   14acc:	mov	r1, r8
   14ad0:	mov	r0, r5
   14ad4:	vldr	d0, [sp, #8]
   14ad8:	bl	141ec <table_set_double@@Base>
   14adc:	mov	r6, #0
   14ae0:	b	149c8 <table_cell_from_buffer@@Base+0xa8>
   14ae4:	mov	r0, r6
   14ae8:	add	r2, sp, #8
   14aec:	ldr	r1, [pc, #1016]	; 14eec <table_cell_from_buffer@@Base+0x5cc>
   14af0:	bl	11b68 <__isoc99_sscanf@plt>
   14af4:	cmp	r0, #1
   14af8:	bne	149c4 <table_cell_from_buffer@@Base+0xa4>
   14afc:	mov	r2, r4
   14b00:	mov	r1, r8
   14b04:	mov	r0, r5
   14b08:	vldr	s0, [sp, #8]
   14b0c:	bl	14170 <table_set_float@@Base>
   14b10:	mov	r6, #0
   14b14:	b	149c8 <table_cell_from_buffer@@Base+0xa8>
   14b18:	mov	r0, r6
   14b1c:	add	r2, sp, #8
   14b20:	ldr	r1, [pc, #968]	; 14ef0 <table_cell_from_buffer@@Base+0x5d0>
   14b24:	bl	11b68 <__isoc99_sscanf@plt>
   14b28:	cmp	r0, #1
   14b2c:	bne	149c4 <table_cell_from_buffer@@Base+0xa4>
   14b30:	mov	r2, r4
   14b34:	mov	r1, r8
   14b38:	mov	r0, r5
   14b3c:	vldr	d0, [sp, #8]
   14b40:	bl	14284 <table_set_ldouble@@Base>
   14b44:	mov	r6, #0
   14b48:	b	149c8 <table_cell_from_buffer@@Base+0xa8>
   14b4c:	mov	r0, r6
   14b50:	add	r2, sp, #8
   14b54:	ldr	r1, [pc, #920]	; 14ef4 <table_cell_from_buffer@@Base+0x5d4>
   14b58:	bl	11b68 <__isoc99_sscanf@plt>
   14b5c:	cmp	r0, #1
   14b60:	bne	149c4 <table_cell_from_buffer@@Base+0xa4>
   14b64:	ldrd	r6, [sp, #8]
   14b68:	mov	r2, r4
   14b6c:	mov	r1, r8
   14b70:	strd	r6, [sp]
   14b74:	mov	r0, r5
   14b78:	bl	140e8 <table_set_ullong@@Base>
   14b7c:	mov	r6, #0
   14b80:	b	149c8 <table_cell_from_buffer@@Base+0xa8>
   14b84:	mov	r0, r6
   14b88:	add	r2, sp, #8
   14b8c:	ldr	r1, [pc, #868]	; 14ef8 <table_cell_from_buffer@@Base+0x5d8>
   14b90:	bl	11b68 <__isoc99_sscanf@plt>
   14b94:	cmp	r0, #1
   14b98:	bne	149c4 <table_cell_from_buffer@@Base+0xa4>
   14b9c:	ldrd	r6, [sp, #8]
   14ba0:	mov	r2, r4
   14ba4:	mov	r1, r8
   14ba8:	strd	r6, [sp]
   14bac:	mov	r0, r5
   14bb0:	bl	14060 <table_set_llong@@Base>
   14bb4:	mov	r6, #0
   14bb8:	b	149c8 <table_cell_from_buffer@@Base+0xa8>
   14bbc:	mov	r0, r6
   14bc0:	add	r2, sp, #8
   14bc4:	ldr	r1, [pc, #816]	; 14efc <table_cell_from_buffer@@Base+0x5dc>
   14bc8:	bl	11b68 <__isoc99_sscanf@plt>
   14bcc:	cmp	r0, #1
   14bd0:	bne	149c4 <table_cell_from_buffer@@Base+0xa4>
   14bd4:	mov	r2, r4
   14bd8:	mov	r1, r8
   14bdc:	mov	r0, r5
   14be0:	ldr	r3, [sp, #8]
   14be4:	bl	13fe4 <table_set_ulong@@Base>
   14be8:	mov	r6, #0
   14bec:	b	149c8 <table_cell_from_buffer@@Base+0xa8>
   14bf0:	mov	r0, r6
   14bf4:	add	r2, sp, #8
   14bf8:	ldr	r1, [pc, #768]	; 14f00 <table_cell_from_buffer@@Base+0x5e0>
   14bfc:	bl	11b68 <__isoc99_sscanf@plt>
   14c00:	cmp	r0, #1
   14c04:	bne	149c4 <table_cell_from_buffer@@Base+0xa4>
   14c08:	mov	r2, r4
   14c0c:	mov	r1, r8
   14c10:	mov	r0, r5
   14c14:	ldr	r3, [sp, #8]
   14c18:	bl	13f68 <table_set_long@@Base>
   14c1c:	mov	r6, #0
   14c20:	b	149c8 <table_cell_from_buffer@@Base+0xa8>
   14c24:	mov	r0, r6
   14c28:	add	r2, sp, #8
   14c2c:	ldr	r1, [pc, #720]	; 14f04 <table_cell_from_buffer@@Base+0x5e4>
   14c30:	bl	11b68 <__isoc99_sscanf@plt>
   14c34:	cmp	r0, #1
   14c38:	bne	149c4 <table_cell_from_buffer@@Base+0xa4>
   14c3c:	ldrh	r3, [sp, #8]
   14c40:	mov	r2, r4
   14c44:	mov	r1, r8
   14c48:	mov	r0, r5
   14c4c:	bl	13eec <table_set_ushort@@Base>
   14c50:	mov	r6, #0
   14c54:	b	149c8 <table_cell_from_buffer@@Base+0xa8>
   14c58:	mov	r0, r6
   14c5c:	add	r2, sp, #8
   14c60:	ldr	r1, [pc, #672]	; 14f08 <table_cell_from_buffer@@Base+0x5e8>
   14c64:	bl	11b68 <__isoc99_sscanf@plt>
   14c68:	cmp	r0, #1
   14c6c:	bne	149c4 <table_cell_from_buffer@@Base+0xa4>
   14c70:	ldrsh	r3, [sp, #8]
   14c74:	mov	r2, r4
   14c78:	mov	r1, r8
   14c7c:	mov	r0, r5
   14c80:	bl	13e70 <table_set_short@@Base>
   14c84:	mov	r6, #0
   14c88:	b	149c8 <table_cell_from_buffer@@Base+0xa8>
   14c8c:	mov	r0, r6
   14c90:	add	r2, sp, #8
   14c94:	ldr	r1, [pc, #600]	; 14ef4 <table_cell_from_buffer@@Base+0x5d4>
   14c98:	bl	11b68 <__isoc99_sscanf@plt>
   14c9c:	cmp	r0, #1
   14ca0:	bne	149c4 <table_cell_from_buffer@@Base+0xa4>
   14ca4:	ldrd	r6, [sp, #8]
   14ca8:	mov	r2, r4
   14cac:	mov	r1, r8
   14cb0:	strd	r6, [sp]
   14cb4:	mov	r0, r5
   14cb8:	bl	13de8 <table_set_uint64@@Base>
   14cbc:	mov	r6, #0
   14cc0:	b	149c8 <table_cell_from_buffer@@Base+0xa8>
   14cc4:	mov	r0, r6
   14cc8:	add	r2, sp, #8
   14ccc:	ldr	r1, [pc, #548]	; 14ef8 <table_cell_from_buffer@@Base+0x5d8>
   14cd0:	bl	11b68 <__isoc99_sscanf@plt>
   14cd4:	cmp	r0, #1
   14cd8:	bne	149c4 <table_cell_from_buffer@@Base+0xa4>
   14cdc:	ldrd	r6, [sp, #8]
   14ce0:	mov	r2, r4
   14ce4:	mov	r1, r8
   14ce8:	strd	r6, [sp]
   14cec:	mov	r0, r5
   14cf0:	bl	13d64 <table_set_int64@@Base>
   14cf4:	mov	r6, #0
   14cf8:	b	149c8 <table_cell_from_buffer@@Base+0xa8>
   14cfc:	mov	r0, r6
   14d00:	add	r2, sp, #8
   14d04:	ldr	r1, [pc, #512]	; 14f0c <table_cell_from_buffer@@Base+0x5ec>
   14d08:	bl	11b68 <__isoc99_sscanf@plt>
   14d0c:	cmp	r0, #1
   14d10:	bne	149c4 <table_cell_from_buffer@@Base+0xa4>
   14d14:	mov	r2, r4
   14d18:	mov	r1, r8
   14d1c:	mov	r0, r5
   14d20:	ldr	r3, [sp, #8]
   14d24:	bl	13ce8 <table_set_uint32@@Base>
   14d28:	mov	r6, #0
   14d2c:	b	149c8 <table_cell_from_buffer@@Base+0xa8>
   14d30:	mov	r0, r6
   14d34:	add	r2, sp, #8
   14d38:	ldr	r1, [pc, #412]	; 14edc <table_cell_from_buffer@@Base+0x5bc>
   14d3c:	bl	11b68 <__isoc99_sscanf@plt>
   14d40:	cmp	r0, #1
   14d44:	bne	149c4 <table_cell_from_buffer@@Base+0xa4>
   14d48:	mov	r2, r4
   14d4c:	mov	r1, r8
   14d50:	mov	r0, r5
   14d54:	ldr	r3, [sp, #8]
   14d58:	bl	13c6c <table_set_int32@@Base>
   14d5c:	mov	r6, #0
   14d60:	b	149c8 <table_cell_from_buffer@@Base+0xa8>
   14d64:	mov	r0, r6
   14d68:	add	r2, sp, #8
   14d6c:	ldr	r1, [pc, #400]	; 14f04 <table_cell_from_buffer@@Base+0x5e4>
   14d70:	bl	11b68 <__isoc99_sscanf@plt>
   14d74:	cmp	r0, #1
   14d78:	bne	149c4 <table_cell_from_buffer@@Base+0xa4>
   14d7c:	ldrh	r3, [sp, #8]
   14d80:	mov	r2, r4
   14d84:	mov	r1, r8
   14d88:	mov	r0, r5
   14d8c:	bl	13bf0 <table_set_uint16@@Base>
   14d90:	mov	r6, #0
   14d94:	b	149c8 <table_cell_from_buffer@@Base+0xa8>
   14d98:	mov	r0, r6
   14d9c:	add	r2, sp, #8
   14da0:	ldr	r1, [pc, #352]	; 14f08 <table_cell_from_buffer@@Base+0x5e8>
   14da4:	bl	11b68 <__isoc99_sscanf@plt>
   14da8:	cmp	r0, #1
   14dac:	bne	149c4 <table_cell_from_buffer@@Base+0xa4>
   14db0:	ldrsh	r3, [sp, #8]
   14db4:	mov	r2, r4
   14db8:	mov	r1, r8
   14dbc:	mov	r0, r5
   14dc0:	bl	13b74 <table_set_int16@@Base>
   14dc4:	mov	r6, #0
   14dc8:	b	149c8 <table_cell_from_buffer@@Base+0xa8>
   14dcc:	mov	r0, r6
   14dd0:	add	r2, sp, #8
   14dd4:	ldr	r1, [pc, #308]	; 14f10 <table_cell_from_buffer@@Base+0x5f0>
   14dd8:	bl	11b68 <__isoc99_sscanf@plt>
   14ddc:	cmp	r0, #1
   14de0:	bne	149c4 <table_cell_from_buffer@@Base+0xa4>
   14de4:	mov	r2, r4
   14de8:	mov	r1, r8
   14dec:	mov	r0, r5
   14df0:	ldrb	r3, [sp, #8]
   14df4:	bl	13af8 <table_set_uint8@@Base>
   14df8:	mov	r6, #0
   14dfc:	b	149c8 <table_cell_from_buffer@@Base+0xa8>
   14e00:	mov	r0, r6
   14e04:	add	r2, sp, #8
   14e08:	ldr	r1, [pc, #260]	; 14f14 <table_cell_from_buffer@@Base+0x5f4>
   14e0c:	bl	11b68 <__isoc99_sscanf@plt>
   14e10:	cmp	r0, #1
   14e14:	bne	149c4 <table_cell_from_buffer@@Base+0xa4>
   14e18:	ldrsb	r3, [sp, #8]
   14e1c:	mov	r2, r4
   14e20:	mov	r1, r8
   14e24:	mov	r0, r5
   14e28:	bl	13a7c <table_set_int8@@Base>
   14e2c:	mov	r6, #0
   14e30:	b	149c8 <table_cell_from_buffer@@Base+0xa8>
   14e34:	mov	r0, r6
   14e38:	add	r2, sp, #8
   14e3c:	ldr	r1, [pc, #200]	; 14f0c <table_cell_from_buffer@@Base+0x5ec>
   14e40:	bl	11b68 <__isoc99_sscanf@plt>
   14e44:	cmp	r0, #1
   14e48:	bne	149c4 <table_cell_from_buffer@@Base+0xa4>
   14e4c:	mov	r2, r4
   14e50:	mov	r1, r8
   14e54:	mov	r0, r5
   14e58:	ldr	r3, [sp, #8]
   14e5c:	bl	13a00 <table_set_uint@@Base>
   14e60:	mov	r6, #0
   14e64:	b	149c8 <table_cell_from_buffer@@Base+0xa8>
   14e68:	mov	r0, r6
   14e6c:	add	r2, sp, #8
   14e70:	ldr	r1, [pc, #100]	; 14edc <table_cell_from_buffer@@Base+0x5bc>
   14e74:	bl	11b68 <__isoc99_sscanf@plt>
   14e78:	cmp	r0, #1
   14e7c:	bne	149c4 <table_cell_from_buffer@@Base+0xa4>
   14e80:	mov	r2, r4
   14e84:	mov	r1, r8
   14e88:	mov	r0, r5
   14e8c:	ldr	r3, [sp, #8]
   14e90:	bl	13984 <table_set_int@@Base>
   14e94:	mov	r6, #0
   14e98:	b	149c8 <table_cell_from_buffer@@Base+0xa8>
   14e9c:	mov	r2, r4
   14ea0:	mov	r1, r8
   14ea4:	mov	r0, r5
   14ea8:	mov	r3, r6
   14eac:	bl	13908 <table_set_bool@@Base>
   14eb0:	b	149c8 <table_cell_from_buffer@@Base+0xa8>
   14eb4:	mov	r2, r4
   14eb8:	mov	r1, r8
   14ebc:	mov	r0, r5
   14ec0:	ldr	r3, [sp, #8]
   14ec4:	bl	14494 <table_set_ptr@@Base>
   14ec8:	mov	r6, #0
   14ecc:	b	149c8 <table_cell_from_buffer@@Base+0xa8>
   14ed0:	mov	r6, #0
   14ed4:	b	149c8 <table_cell_from_buffer@@Base+0xa8>
   14ed8:	andeq	r5, r1, r8, lsl #5
   14edc:	andeq	r5, r1, ip, asr #4
   14ee0:	andeq	r5, r1, r4, lsl #5
   14ee4:	andeq	r5, r1, r4, ror r2
   14ee8:	andeq	r5, r1, ip, ror r2
   14eec:	andeq	r5, r1, r8, ror r2
   14ef0:	andeq	r5, r1, r0, lsl #5
   14ef4:	andeq	r5, r1, ip, asr r2
   14ef8:	andeq	r5, r1, r4, asr r2
   14efc:	andeq	r5, r1, r0, ror r2
   14f00:	andeq	r5, r1, ip, ror #4
   14f04:	andeq	r5, r1, r8, ror #4
   14f08:	andeq	r5, r1, r4, ror #4
   14f0c:	andeq	r5, r1, r0, asr r2
   14f10:	muleq	r1, r4, r2
   14f14:	andeq	r5, r1, ip, lsl #5

00014f18 <table_cell_nullify@@Base>:
   14f18:	push	{r4, r5, r6, lr}
   14f1c:	mov	r5, r2
   14f20:	bl	135a0 <table_get_row_ptr@@Base>
   14f24:	ldr	r4, [r0]
   14f28:	ldr	r0, [r4, r5, lsl #2]
   14f2c:	cmp	r0, #0
   14f30:	beq	14f40 <table_cell_nullify@@Base+0x28>
   14f34:	bl	11af0 <free@plt>
   14f38:	mov	r3, #0
   14f3c:	str	r3, [r4, r5, lsl #2]
   14f40:	mov	r0, #0
   14f44:	pop	{r4, r5, r6, pc}

00014f48 <table_get_cell_ptr@@Base>:
   14f48:	push	{r4, lr}
   14f4c:	mov	r4, r2
   14f50:	bl	135a0 <table_get_row_ptr@@Base>
   14f54:	ldr	r0, [r0]
   14f58:	add	r0, r0, r4, lsl #2
   14f5c:	pop	{r4, pc}
   14f60:	subs	r2, r1, #1
   14f64:	bxeq	lr
   14f68:	bcc	15140 <table_get_cell_ptr@@Base+0x1f8>
   14f6c:	cmp	r0, r1
   14f70:	bls	15124 <table_get_cell_ptr@@Base+0x1dc>
   14f74:	tst	r1, r2
   14f78:	beq	15130 <table_get_cell_ptr@@Base+0x1e8>
   14f7c:	clz	r3, r0
   14f80:	clz	r2, r1
   14f84:	sub	r3, r2, r3
   14f88:	rsbs	r3, r3, #31
   14f8c:	addne	r3, r3, r3, lsl #1
   14f90:	mov	r2, #0
   14f94:	addne	pc, pc, r3, lsl #2
   14f98:	nop			; (mov r0, r0)
   14f9c:	cmp	r0, r1, lsl #31
   14fa0:	adc	r2, r2, r2
   14fa4:	subcs	r0, r0, r1, lsl #31
   14fa8:	cmp	r0, r1, lsl #30
   14fac:	adc	r2, r2, r2
   14fb0:	subcs	r0, r0, r1, lsl #30
   14fb4:	cmp	r0, r1, lsl #29
   14fb8:	adc	r2, r2, r2
   14fbc:	subcs	r0, r0, r1, lsl #29
   14fc0:	cmp	r0, r1, lsl #28
   14fc4:	adc	r2, r2, r2
   14fc8:	subcs	r0, r0, r1, lsl #28
   14fcc:	cmp	r0, r1, lsl #27
   14fd0:	adc	r2, r2, r2
   14fd4:	subcs	r0, r0, r1, lsl #27
   14fd8:	cmp	r0, r1, lsl #26
   14fdc:	adc	r2, r2, r2
   14fe0:	subcs	r0, r0, r1, lsl #26
   14fe4:	cmp	r0, r1, lsl #25
   14fe8:	adc	r2, r2, r2
   14fec:	subcs	r0, r0, r1, lsl #25
   14ff0:	cmp	r0, r1, lsl #24
   14ff4:	adc	r2, r2, r2
   14ff8:	subcs	r0, r0, r1, lsl #24
   14ffc:	cmp	r0, r1, lsl #23
   15000:	adc	r2, r2, r2
   15004:	subcs	r0, r0, r1, lsl #23
   15008:	cmp	r0, r1, lsl #22
   1500c:	adc	r2, r2, r2
   15010:	subcs	r0, r0, r1, lsl #22
   15014:	cmp	r0, r1, lsl #21
   15018:	adc	r2, r2, r2
   1501c:	subcs	r0, r0, r1, lsl #21
   15020:	cmp	r0, r1, lsl #20
   15024:	adc	r2, r2, r2
   15028:	subcs	r0, r0, r1, lsl #20
   1502c:	cmp	r0, r1, lsl #19
   15030:	adc	r2, r2, r2
   15034:	subcs	r0, r0, r1, lsl #19
   15038:	cmp	r0, r1, lsl #18
   1503c:	adc	r2, r2, r2
   15040:	subcs	r0, r0, r1, lsl #18
   15044:	cmp	r0, r1, lsl #17
   15048:	adc	r2, r2, r2
   1504c:	subcs	r0, r0, r1, lsl #17
   15050:	cmp	r0, r1, lsl #16
   15054:	adc	r2, r2, r2
   15058:	subcs	r0, r0, r1, lsl #16
   1505c:	cmp	r0, r1, lsl #15
   15060:	adc	r2, r2, r2
   15064:	subcs	r0, r0, r1, lsl #15
   15068:	cmp	r0, r1, lsl #14
   1506c:	adc	r2, r2, r2
   15070:	subcs	r0, r0, r1, lsl #14
   15074:	cmp	r0, r1, lsl #13
   15078:	adc	r2, r2, r2
   1507c:	subcs	r0, r0, r1, lsl #13
   15080:	cmp	r0, r1, lsl #12
   15084:	adc	r2, r2, r2
   15088:	subcs	r0, r0, r1, lsl #12
   1508c:	cmp	r0, r1, lsl #11
   15090:	adc	r2, r2, r2
   15094:	subcs	r0, r0, r1, lsl #11
   15098:	cmp	r0, r1, lsl #10
   1509c:	adc	r2, r2, r2
   150a0:	subcs	r0, r0, r1, lsl #10
   150a4:	cmp	r0, r1, lsl #9
   150a8:	adc	r2, r2, r2
   150ac:	subcs	r0, r0, r1, lsl #9
   150b0:	cmp	r0, r1, lsl #8
   150b4:	adc	r2, r2, r2
   150b8:	subcs	r0, r0, r1, lsl #8
   150bc:	cmp	r0, r1, lsl #7
   150c0:	adc	r2, r2, r2
   150c4:	subcs	r0, r0, r1, lsl #7
   150c8:	cmp	r0, r1, lsl #6
   150cc:	adc	r2, r2, r2
   150d0:	subcs	r0, r0, r1, lsl #6
   150d4:	cmp	r0, r1, lsl #5
   150d8:	adc	r2, r2, r2
   150dc:	subcs	r0, r0, r1, lsl #5
   150e0:	cmp	r0, r1, lsl #4
   150e4:	adc	r2, r2, r2
   150e8:	subcs	r0, r0, r1, lsl #4
   150ec:	cmp	r0, r1, lsl #3
   150f0:	adc	r2, r2, r2
   150f4:	subcs	r0, r0, r1, lsl #3
   150f8:	cmp	r0, r1, lsl #2
   150fc:	adc	r2, r2, r2
   15100:	subcs	r0, r0, r1, lsl #2
   15104:	cmp	r0, r1, lsl #1
   15108:	adc	r2, r2, r2
   1510c:	subcs	r0, r0, r1, lsl #1
   15110:	cmp	r0, r1
   15114:	adc	r2, r2, r2
   15118:	subcs	r0, r0, r1
   1511c:	mov	r0, r2
   15120:	bx	lr
   15124:	moveq	r0, #1
   15128:	movne	r0, #0
   1512c:	bx	lr
   15130:	clz	r2, r1
   15134:	rsb	r2, r2, #31
   15138:	lsr	r0, r0, r2
   1513c:	bx	lr
   15140:	cmp	r0, #0
   15144:	mvnne	r0, #0
   15148:	b	1516c <table_get_cell_ptr@@Base+0x224>
   1514c:	cmp	r1, #0
   15150:	beq	15140 <table_get_cell_ptr@@Base+0x1f8>
   15154:	push	{r0, r1, lr}
   15158:	bl	14f60 <table_get_cell_ptr@@Base+0x18>
   1515c:	pop	{r1, r2, lr}
   15160:	mul	r3, r2, r0
   15164:	sub	r1, r1, r3
   15168:	bx	lr
   1516c:	push	{r1, lr}
   15170:	mov	r0, #8
   15174:	bl	11ad8 <raise@plt>
   15178:	pop	{r1, pc}

0001517c <__libc_csu_init@@Base>:
   1517c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15180:	mov	r7, r0
   15184:	ldr	r6, [pc, #72]	; 151d4 <__libc_csu_init@@Base+0x58>
   15188:	ldr	r5, [pc, #72]	; 151d8 <__libc_csu_init@@Base+0x5c>
   1518c:	add	r6, pc, r6
   15190:	add	r5, pc, r5
   15194:	sub	r6, r6, r5
   15198:	mov	r8, r1
   1519c:	mov	r9, r2
   151a0:	bl	11ab8 <raise@plt-0x20>
   151a4:	asrs	r6, r6, #2
   151a8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   151ac:	mov	r4, #0
   151b0:	add	r4, r4, #1
   151b4:	ldr	r3, [r5], #4
   151b8:	mov	r2, r9
   151bc:	mov	r1, r8
   151c0:	mov	r0, r7
   151c4:	blx	r3
   151c8:	cmp	r6, r4
   151cc:	bne	151b0 <__libc_csu_init@@Base+0x34>
   151d0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   151d4:	andeq	r0, r1, ip, ror sp
   151d8:	andeq	r0, r1, r4, ror sp

000151dc <__libc_csu_fini@@Base>:
   151dc:	bx	lr

Disassembly of section .fini:

000151e0 <.fini>:
   151e0:	push	{r3, lr}
   151e4:	pop	{r3, pc}
