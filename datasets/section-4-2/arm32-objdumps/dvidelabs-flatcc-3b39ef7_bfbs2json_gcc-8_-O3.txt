
../repos/dvidelabs-flatcc-3b39ef7/samples/reflection/bfbs2json:     file format elf32-littlearm


Disassembly of section .init:

00010844 <.init>:
   10844:	push	{r3, lr}
   10848:	bl	109e8 <_start@@Base+0x3c>
   1084c:	pop	{r3, pc}

Disassembly of section .plt:

00010850 <printf@plt-0x14>:
   10850:	push	{lr}		; (str lr, [sp, #-4]!)
   10854:	ldr	lr, [pc, #4]	; 10860 <printf@plt-0x4>
   10858:	add	lr, pc, lr
   1085c:	ldr	pc, [lr, #8]!
   10860:	andeq	r2, r1, r0, lsr #15

00010864 <printf@plt>:
   10864:	add	ip, pc, #0, 12
   10868:	add	ip, ip, #73728	; 0x12000
   1086c:	ldr	pc, [ip, #1952]!	; 0x7a0

00010870 <fopen@plt>:
   10870:	add	ip, pc, #0, 12
   10874:	add	ip, ip, #73728	; 0x12000
   10878:	ldr	pc, [ip, #1944]!	; 0x798

0001087c <free@plt>:
   1087c:	add	ip, pc, #0, 12
   10880:	add	ip, ip, #73728	; 0x12000
   10884:	ldr	pc, [ip, #1936]!	; 0x790

00010888 <ftell@plt>:
   10888:	add	ip, pc, #0, 12
   1088c:	add	ip, ip, #73728	; 0x12000
   10890:	ldr	pc, [ip, #1928]!	; 0x788

00010894 <rewind@plt>:
   10894:	add	ip, pc, #0, 12
   10898:	add	ip, ip, #73728	; 0x12000
   1089c:	ldr	pc, [ip, #1920]!	; 0x780

000108a0 <fwrite@plt>:
   108a0:	add	ip, pc, #0, 12
   108a4:	add	ip, ip, #73728	; 0x12000
   108a8:	ldr	pc, [ip, #1912]!	; 0x778

000108ac <fread@plt>:
   108ac:	add	ip, pc, #0, 12
   108b0:	add	ip, ip, #73728	; 0x12000
   108b4:	ldr	pc, [ip, #1904]!	; 0x770

000108b8 <puts@plt>:
   108b8:	add	ip, pc, #0, 12
   108bc:	add	ip, ip, #73728	; 0x12000
   108c0:	ldr	pc, [ip, #1896]!	; 0x768

000108c4 <malloc@plt>:
   108c4:	add	ip, pc, #0, 12
   108c8:	add	ip, ip, #73728	; 0x12000
   108cc:	ldr	pc, [ip, #1888]!	; 0x760

000108d0 <__libc_start_main@plt>:
   108d0:	add	ip, pc, #0, 12
   108d4:	add	ip, ip, #73728	; 0x12000
   108d8:	ldr	pc, [ip, #1880]!	; 0x758

000108dc <__gmon_start__@plt>:
   108dc:	add	ip, pc, #0, 12
   108e0:	add	ip, ip, #73728	; 0x12000
   108e4:	ldr	pc, [ip, #1872]!	; 0x750

000108e8 <exit@plt>:
   108e8:	add	ip, pc, #0, 12
   108ec:	add	ip, ip, #73728	; 0x12000
   108f0:	ldr	pc, [ip, #1864]!	; 0x748

000108f4 <fprintf@plt>:
   108f4:	add	ip, pc, #0, 12
   108f8:	add	ip, ip, #73728	; 0x12000
   108fc:	ldr	pc, [ip, #1856]!	; 0x740

00010900 <putchar@plt>:
   10900:	add	ip, pc, #0, 12
   10904:	add	ip, ip, #73728	; 0x12000
   10908:	ldr	pc, [ip, #1848]!	; 0x738

0001090c <fclose@plt>:
   1090c:	add	ip, pc, #0, 12
   10910:	add	ip, ip, #73728	; 0x12000
   10914:	ldr	pc, [ip, #1840]!	; 0x730

00010918 <fseek@plt>:
   10918:	add	ip, pc, #0, 12
   1091c:	add	ip, ip, #73728	; 0x12000
   10920:	ldr	pc, [ip, #1832]!	; 0x728

00010924 <abort@plt>:
   10924:	add	ip, pc, #0, 12
   10928:	add	ip, ip, #73728	; 0x12000
   1092c:	ldr	pc, [ip, #1824]!	; 0x720

00010930 <__assert_fail@plt>:
   10930:	add	ip, pc, #0, 12
   10934:	add	ip, ip, #73728	; 0x12000
   10938:	ldr	pc, [ip, #1816]!	; 0x718

Disassembly of section .text:

0001093c <main@@Base>:
   1093c:	cmp	r0, #2
   10940:	bne	1094c <main@@Base+0x10>
   10944:	ldr	r0, [r1, #4]
   10948:	b	11708 <load_and_dump_schema@@Base>
   1094c:	str	r4, [sp, #-8]!
   10950:	movw	r4, #12384	; 0x3060
   10954:	movt	r4, #2
   10958:	mov	r2, #28
   1095c:	mov	r1, #1
   10960:	ldr	r3, [r4]
   10964:	movw	r0, #7724	; 0x1e2c
   10968:	movt	r0, #1
   1096c:	str	lr, [sp, #4]
   10970:	bl	108a0 <fwrite@plt>
   10974:	mov	r2, #74	; 0x4a
   10978:	mov	r1, #1
   1097c:	ldr	r3, [r4]
   10980:	movw	r0, #7756	; 0x1e4c
   10984:	movt	r0, #1
   10988:	bl	108a0 <fwrite@plt>
   1098c:	movw	r0, #7832	; 0x1e98
   10990:	movt	r0, #1
   10994:	ldr	r3, [r4]
   10998:	mov	r2, #180	; 0xb4
   1099c:	mov	r1, #1
   109a0:	bl	108a0 <fwrite@plt>
   109a4:	mvn	r0, #0
   109a8:	bl	108e8 <exit@plt>

000109ac <_start@@Base>:
   109ac:	mov	fp, #0
   109b0:	mov	lr, #0
   109b4:	pop	{r1}		; (ldr r1, [sp], #4)
   109b8:	mov	r2, sp
   109bc:	push	{r2}		; (str r2, [sp, #-4]!)
   109c0:	push	{r0}		; (str r0, [sp, #-4]!)
   109c4:	ldr	ip, [pc, #16]	; 109dc <_start@@Base+0x30>
   109c8:	push	{ip}		; (str ip, [sp, #-4]!)
   109cc:	ldr	r0, [pc, #12]	; 109e0 <_start@@Base+0x34>
   109d0:	ldr	r3, [pc, #12]	; 109e4 <_start@@Base+0x38>
   109d4:	bl	108d0 <__libc_start_main@plt>
   109d8:	bl	10924 <abort@plt>
   109dc:	andeq	r1, r1, r8, lsr #18
   109e0:	andeq	r0, r1, ip, lsr r9
   109e4:	andeq	r1, r1, r8, asr #17
   109e8:	ldr	r3, [pc, #20]	; 10a04 <_start@@Base+0x58>
   109ec:	ldr	r2, [pc, #20]	; 10a08 <_start@@Base+0x5c>
   109f0:	add	r3, pc, r3
   109f4:	ldr	r2, [r3, r2]
   109f8:	cmp	r2, #0
   109fc:	bxeq	lr
   10a00:	b	108dc <__gmon_start__@plt>
   10a04:	andeq	r2, r1, r8, lsl #12
   10a08:	andeq	r0, r0, r4, asr r0
   10a0c:	ldr	r0, [pc, #24]	; 10a2c <_start@@Base+0x80>
   10a10:	ldr	r3, [pc, #24]	; 10a30 <_start@@Base+0x84>
   10a14:	cmp	r3, r0
   10a18:	bxeq	lr
   10a1c:	ldr	r3, [pc, #16]	; 10a34 <_start@@Base+0x88>
   10a20:	cmp	r3, #0
   10a24:	bxeq	lr
   10a28:	bx	r3
   10a2c:	andeq	r3, r2, r0, rrx
   10a30:	andeq	r3, r2, r0, rrx
   10a34:	andeq	r0, r0, r0
   10a38:	ldr	r0, [pc, #36]	; 10a64 <_start@@Base+0xb8>
   10a3c:	ldr	r1, [pc, #36]	; 10a68 <_start@@Base+0xbc>
   10a40:	sub	r1, r1, r0
   10a44:	asr	r1, r1, #2
   10a48:	add	r1, r1, r1, lsr #31
   10a4c:	asrs	r1, r1, #1
   10a50:	bxeq	lr
   10a54:	ldr	r3, [pc, #16]	; 10a6c <_start@@Base+0xc0>
   10a58:	cmp	r3, #0
   10a5c:	bxeq	lr
   10a60:	bx	r3
   10a64:	andeq	r3, r2, r0, rrx
   10a68:	andeq	r3, r2, r0, rrx
   10a6c:	andeq	r0, r0, r0
   10a70:	push	{r4, lr}
   10a74:	ldr	r4, [pc, #24]	; 10a94 <_start@@Base+0xe8>
   10a78:	ldrb	r3, [r4]
   10a7c:	cmp	r3, #0
   10a80:	popne	{r4, pc}
   10a84:	bl	10a0c <_start@@Base+0x60>
   10a88:	mov	r3, #1
   10a8c:	strb	r3, [r4]
   10a90:	pop	{r4, pc}
   10a94:	andeq	r3, r2, r4, rrx
   10a98:	b	10a38 <_start@@Base+0x8c>
   10a9c:	movw	r3, #6456	; 0x1938
   10aa0:	movt	r3, #1
   10aa4:	str	r4, [sp, #-8]!
   10aa8:	movw	r1, #6924	; 0x1b0c
   10aac:	movt	r1, #1
   10ab0:	str	lr, [sp, #4]
   10ab4:	movw	r0, #7020	; 0x1b6c
   10ab8:	movt	r0, #1
   10abc:	mov	r2, #147	; 0x93
   10ac0:	bl	10930 <__assert_fail@plt>

00010ac4 <print_type@@Base>:
   10ac4:	str	r4, [sp, #-8]!
   10ac8:	mov	r4, r0
   10acc:	mov	r0, #123	; 0x7b
   10ad0:	str	lr, [sp, #4]
   10ad4:	bl	10900 <putchar@plt>
   10ad8:	cmp	r4, #0
   10adc:	beq	10c58 <print_type@@Base+0x194>
   10ae0:	ldr	r3, [r4]
   10ae4:	sub	r3, r4, r3
   10ae8:	ldrh	r2, [r3]
   10aec:	cmp	r2, #5
   10af0:	bls	10bc8 <print_type@@Base+0x104>
   10af4:	ldrh	r1, [r3, #4]
   10af8:	cmp	r1, #0
   10afc:	beq	10c10 <print_type@@Base+0x14c>
   10b00:	ldrb	r2, [r4, r1]
   10b04:	cmp	r2, #16
   10b08:	movwhi	r1, #7616	; 0x1dc0
   10b0c:	movthi	r1, #1
   10b10:	bls	10c3c <print_type@@Base+0x178>
   10b14:	movw	r0, #7068	; 0x1b9c
   10b18:	movt	r0, #1
   10b1c:	bl	10864 <printf@plt>
   10b20:	ldr	r3, [r4]
   10b24:	sub	r3, r4, r3
   10b28:	ldrh	r2, [r3]
   10b2c:	cmp	r2, #7
   10b30:	bls	10bc8 <print_type@@Base+0x104>
   10b34:	ldrh	r1, [r3, #6]
   10b38:	cmp	r1, #0
   10b3c:	beq	10c74 <print_type@@Base+0x1b0>
   10b40:	mov	r0, #44	; 0x2c
   10b44:	bl	10900 <putchar@plt>
   10b48:	ldr	r3, [r4]
   10b4c:	sub	r3, r4, r3
   10b50:	ldrh	r2, [r3]
   10b54:	cmp	r2, #5
   10b58:	bhi	10bdc <print_type@@Base+0x118>
   10b5c:	movw	r1, #7060	; 0x1b94
   10b60:	movt	r1, #1
   10b64:	movw	r0, #7088	; 0x1bb0
   10b68:	movt	r0, #1
   10b6c:	bl	10864 <printf@plt>
   10b70:	ldr	r3, [r4]
   10b74:	sub	r3, r4, r3
   10b78:	ldrh	r2, [r3]
   10b7c:	cmp	r2, #9
   10b80:	bls	10bc8 <print_type@@Base+0x104>
   10b84:	ldrh	r3, [r3, #8]
   10b88:	cmp	r3, #0
   10b8c:	beq	10bc8 <print_type@@Base+0x104>
   10b90:	mov	r0, #44	; 0x2c
   10b94:	bl	10900 <putchar@plt>
   10b98:	ldr	r3, [r4]
   10b9c:	sub	r3, r4, r3
   10ba0:	ldrh	r2, [r3]
   10ba4:	cmp	r2, #9
   10ba8:	bls	10c50 <print_type@@Base+0x18c>
   10bac:	ldrh	r3, [r3, #8]
   10bb0:	cmp	r3, #0
   10bb4:	beq	10c50 <print_type@@Base+0x18c>
   10bb8:	ldr	r1, [r4, r3]
   10bbc:	movw	r0, #7104	; 0x1bc0
   10bc0:	movt	r0, #1
   10bc4:	bl	10864 <printf@plt>
   10bc8:	mov	r0, #125	; 0x7d
   10bcc:	ldr	r4, [sp]
   10bd0:	ldr	lr, [sp, #4]
   10bd4:	add	sp, sp, #8
   10bd8:	b	10900 <putchar@plt>
   10bdc:	ldrh	r3, [r3, #4]
   10be0:	cmp	r3, #0
   10be4:	beq	10b5c <print_type@@Base+0x98>
   10be8:	ldrb	r3, [r4, r3]
   10bec:	cmp	r3, #16
   10bf0:	movwhi	r1, #7616	; 0x1dc0
   10bf4:	movthi	r1, #1
   10bf8:	bhi	10b64 <print_type@@Base+0xa0>
   10bfc:	movw	r2, #6456	; 0x1938
   10c00:	movt	r2, #1
   10c04:	add	r3, r2, r3, lsl #2
   10c08:	ldr	r1, [r3, #68]	; 0x44
   10c0c:	b	10b64 <print_type@@Base+0xa0>
   10c10:	cmp	r2, #7
   10c14:	bls	10bc8 <print_type@@Base+0x104>
   10c18:	ldrh	r1, [r3, #6]
   10c1c:	cmp	r1, #0
   10c20:	bne	10b5c <print_type@@Base+0x98>
   10c24:	cmp	r2, #9
   10c28:	bls	10bc8 <print_type@@Base+0x104>
   10c2c:	ldrh	r3, [r3, #8]
   10c30:	cmp	r3, #0
   10c34:	bne	10bb8 <print_type@@Base+0xf4>
   10c38:	b	10bc8 <print_type@@Base+0x104>
   10c3c:	movw	r3, #6456	; 0x1938
   10c40:	movt	r3, #1
   10c44:	add	r3, r3, r2, lsl #2
   10c48:	ldr	r1, [r3, #68]	; 0x44
   10c4c:	b	10b14 <print_type@@Base+0x50>
   10c50:	mvn	r1, #0
   10c54:	b	10bbc <print_type@@Base+0xf8>
   10c58:	movw	r1, #6924	; 0x1b0c
   10c5c:	movt	r1, #1
   10c60:	ldr	r3, [pc, #24]	; 10c80 <print_type@@Base+0x1bc>
   10c64:	movw	r0, #7020	; 0x1b6c
   10c68:	movt	r0, #1
   10c6c:	mov	r2, #147	; 0x93
   10c70:	bl	10930 <__assert_fail@plt>
   10c74:	cmp	r2, #9
   10c78:	bls	10bc8 <print_type@@Base+0x104>
   10c7c:	b	10b84 <print_type@@Base+0xc0>
   10c80:	andeq	r1, r1, r4, asr r9

00010c84 <print_object@@Base>:
   10c84:	strd	r4, [sp, #-36]!	; 0xffffffdc
   10c88:	strd	r6, [sp, #8]
   10c8c:	strd	r8, [sp, #16]
   10c90:	subs	r8, r0, #0
   10c94:	strd	sl, [sp, #24]
   10c98:	str	lr, [sp, #32]
   10c9c:	sub	sp, sp, #4
   10ca0:	beq	1109c <print_object@@Base+0x418>
   10ca4:	ldr	r3, [r8]
   10ca8:	sub	r3, r8, r3
   10cac:	ldrh	r2, [r3]
   10cb0:	cmp	r2, #7
   10cb4:	bls	11080 <print_object@@Base+0x3fc>
   10cb8:	ldrh	r2, [r3, #6]
   10cbc:	cmp	r2, #0
   10cc0:	beq	11080 <print_object@@Base+0x3fc>
   10cc4:	ldrh	r1, [r3, #4]
   10cc8:	add	r5, r8, r2
   10ccc:	ldr	r4, [r8, r2]
   10cd0:	cmp	r1, #0
   10cd4:	add	r4, r4, #4
   10cd8:	add	r7, r5, r4
   10cdc:	beq	11064 <print_object@@Base+0x3e0>
   10ce0:	ldr	r3, [r8, r1]
   10ce4:	add	r1, r8, r1
   10ce8:	movw	r0, #7168	; 0x1c00
   10cec:	movt	r0, #1
   10cf0:	add	r3, r3, #4
   10cf4:	add	r1, r1, r3
   10cf8:	bl	10864 <printf@plt>
   10cfc:	movw	r0, #7184	; 0x1c10
   10d00:	movt	r0, #1
   10d04:	bl	10864 <printf@plt>
   10d08:	cmp	r7, #0
   10d0c:	beq	10f38 <print_object@@Base+0x2b4>
   10d10:	ldr	r3, [r7, #-4]
   10d14:	cmp	r3, #0
   10d18:	beq	10f38 <print_object@@Base+0x2b4>
   10d1c:	ldr	r3, [r5, r4]
   10d20:	adds	r4, r7, r3
   10d24:	beq	11048 <print_object@@Base+0x3c4>
   10d28:	ldr	r3, [r7, r3]
   10d2c:	sub	r3, r4, r3
   10d30:	ldrh	r2, [r3]
   10d34:	cmp	r2, #5
   10d38:	bls	11010 <print_object@@Base+0x38c>
   10d3c:	ldrh	r1, [r3, #4]
   10d40:	cmp	r1, #0
   10d44:	beq	11010 <print_object@@Base+0x38c>
   10d48:	movw	r9, #7252	; 0x1c54
   10d4c:	movt	r9, #1
   10d50:	movw	fp, #7116	; 0x1bcc
   10d54:	movt	fp, #1
   10d58:	movw	sl, #7124	; 0x1bd4
   10d5c:	movt	sl, #1
   10d60:	mov	r5, r7
   10d64:	mov	r6, #0
   10d68:	b	10ef0 <print_object@@Base+0x26c>
   10d6c:	ldrh	r3, [r3, #6]
   10d70:	cmp	r3, #0
   10d74:	beq	10f1c <print_object@@Base+0x298>
   10d78:	ldr	r0, [r4, r3]
   10d7c:	add	r3, r4, r3
   10d80:	add	r0, r3, r0
   10d84:	bl	10ac4 <print_type@@Base>
   10d88:	ldr	r3, [r4]
   10d8c:	sub	r3, r4, r3
   10d90:	ldrh	r2, [r3]
   10d94:	cmp	r2, #9
   10d98:	bls	10e94 <print_object@@Base+0x210>
   10d9c:	ldrh	r1, [r3, #8]
   10da0:	cmp	r1, #0
   10da4:	beq	10dc4 <print_object@@Base+0x140>
   10da8:	ldrh	r1, [r4, r1]
   10dac:	movw	r0, #7276	; 0x1c6c
   10db0:	movt	r0, #1
   10db4:	bl	10864 <printf@plt>
   10db8:	ldr	r3, [r4]
   10dbc:	sub	r3, r4, r3
   10dc0:	ldrh	r2, [r3]
   10dc4:	cmp	r2, #13
   10dc8:	bls	10e94 <print_object@@Base+0x210>
   10dcc:	ldrh	r1, [r3, #12]
   10dd0:	cmp	r1, #0
   10dd4:	beq	10df4 <print_object@@Base+0x170>
   10dd8:	movw	r0, #7288	; 0x1c78
   10ddc:	movt	r0, #1
   10de0:	ldrd	r2, [r4, r1]
   10de4:	bl	10864 <printf@plt>
   10de8:	ldr	r3, [r4]
   10dec:	sub	r3, r4, r3
   10df0:	ldrh	r2, [r3]
   10df4:	cmp	r2, #15
   10df8:	bls	10e94 <print_object@@Base+0x210>
   10dfc:	ldrh	r1, [r3, #14]
   10e00:	cmp	r1, #0
   10e04:	beq	10e28 <print_object@@Base+0x1a4>
   10e08:	add	r1, r4, r1
   10e0c:	movw	r0, #7312	; 0x1c90
   10e10:	movt	r0, #1
   10e14:	ldrd	r2, [r1]
   10e18:	bl	10864 <printf@plt>
   10e1c:	ldr	r3, [r4]
   10e20:	sub	r3, r4, r3
   10e24:	ldrh	r2, [r3]
   10e28:	cmp	r2, #19
   10e2c:	bls	10e94 <print_object@@Base+0x210>
   10e30:	ldrh	r1, [r3, #18]
   10e34:	cmp	r1, #0
   10e38:	beq	10e64 <print_object@@Base+0x1e0>
   10e3c:	ldrb	r1, [r4, r1]
   10e40:	movw	r0, #7336	; 0x1ca8
   10e44:	movt	r0, #1
   10e48:	cmp	r1, #0
   10e4c:	movne	r1, fp
   10e50:	moveq	r1, sl
   10e54:	bl	10864 <printf@plt>
   10e58:	ldr	r3, [r4]
   10e5c:	sub	r3, r4, r3
   10e60:	ldrh	r2, [r3]
   10e64:	cmp	r2, #21
   10e68:	bls	10e94 <print_object@@Base+0x210>
   10e6c:	ldrh	r3, [r3, #20]
   10e70:	cmp	r3, #0
   10e74:	beq	10e94 <print_object@@Base+0x210>
   10e78:	ldrb	r1, [r4, r3]
   10e7c:	movw	r0, #7352	; 0x1cb8
   10e80:	movt	r0, #1
   10e84:	cmp	r1, #0
   10e88:	movne	r1, fp
   10e8c:	moveq	r1, sl
   10e90:	bl	10864 <printf@plt>
   10e94:	mov	r0, #125	; 0x7d
   10e98:	add	r6, r6, #1
   10e9c:	bl	10900 <putchar@plt>
   10ea0:	ldr	r3, [r7, #-4]
   10ea4:	cmp	r6, r3
   10ea8:	bcs	10f38 <print_object@@Base+0x2b4>
   10eac:	mov	r0, #44	; 0x2c
   10eb0:	add	r5, r5, #4
   10eb4:	bl	10900 <putchar@plt>
   10eb8:	ldr	r3, [r7, #-4]
   10ebc:	cmp	r6, r3
   10ec0:	bcs	1102c <print_object@@Base+0x3a8>
   10ec4:	ldr	r3, [r5]
   10ec8:	adds	r4, r5, r3
   10ecc:	beq	11048 <print_object@@Base+0x3c4>
   10ed0:	ldr	r3, [r5, r3]
   10ed4:	sub	r3, r4, r3
   10ed8:	ldrh	r2, [r3]
   10edc:	cmp	r2, #5
   10ee0:	bls	11010 <print_object@@Base+0x38c>
   10ee4:	ldrh	r1, [r3, #4]
   10ee8:	cmp	r1, #0
   10eec:	beq	11010 <print_object@@Base+0x38c>
   10ef0:	ldr	r3, [r4, r1]
   10ef4:	add	r1, r4, r1
   10ef8:	mov	r0, r9
   10efc:	add	r3, r3, #4
   10f00:	add	r1, r1, r3
   10f04:	bl	10864 <printf@plt>
   10f08:	ldr	r3, [r4]
   10f0c:	sub	r3, r4, r3
   10f10:	ldrh	r2, [r3]
   10f14:	cmp	r2, #7
   10f18:	bhi	10d6c <print_object@@Base+0xe8>
   10f1c:	movw	r1, #6924	; 0x1b0c
   10f20:	movt	r1, #1
   10f24:	ldr	r3, [pc, #396]	; 110b8 <print_object@@Base+0x434>
   10f28:	movw	r0, #7132	; 0x1bdc
   10f2c:	movt	r0, #1
   10f30:	mov	r2, #201	; 0xc9
   10f34:	bl	10930 <__assert_fail@plt>
   10f38:	mov	r0, #93	; 0x5d
   10f3c:	bl	10900 <putchar@plt>
   10f40:	ldr	r3, [r8]
   10f44:	sub	r3, r8, r3
   10f48:	ldrh	r2, [r3]
   10f4c:	cmp	r2, #9
   10f50:	bls	10fec <print_object@@Base+0x368>
   10f54:	ldrh	r1, [r3, #8]
   10f58:	cmp	r1, #0
   10f5c:	beq	10f98 <print_object@@Base+0x314>
   10f60:	ldrb	r1, [r8, r1]
   10f64:	movw	r2, #7116	; 0x1bcc
   10f68:	movt	r2, #1
   10f6c:	movw	r3, #7124	; 0x1bd4
   10f70:	movt	r3, #1
   10f74:	movw	r0, #7364	; 0x1cc4
   10f78:	movt	r0, #1
   10f7c:	cmp	r1, #0
   10f80:	movne	r1, r2
   10f84:	moveq	r1, r3
   10f88:	bl	10864 <printf@plt>
   10f8c:	ldr	r3, [r8]
   10f90:	sub	r3, r8, r3
   10f94:	ldrh	r2, [r3]
   10f98:	cmp	r2, #11
   10f9c:	bls	10fec <print_object@@Base+0x368>
   10fa0:	ldrh	r1, [r3, #10]
   10fa4:	cmp	r1, #0
   10fa8:	beq	10fc8 <print_object@@Base+0x344>
   10fac:	movw	r0, #7380	; 0x1cd4
   10fb0:	movt	r0, #1
   10fb4:	ldr	r1, [r8, r1]
   10fb8:	bl	10864 <printf@plt>
   10fbc:	ldr	r3, [r8]
   10fc0:	sub	r3, r8, r3
   10fc4:	ldrh	r2, [r3]
   10fc8:	cmp	r2, #13
   10fcc:	bls	10fec <print_object@@Base+0x368>
   10fd0:	ldrh	r3, [r3, #12]
   10fd4:	cmp	r3, #0
   10fd8:	beq	10fec <print_object@@Base+0x368>
   10fdc:	movw	r0, #7396	; 0x1ce4
   10fe0:	movt	r0, #1
   10fe4:	ldr	r1, [r8, r3]
   10fe8:	bl	10864 <printf@plt>
   10fec:	mov	r0, #125	; 0x7d
   10ff0:	add	sp, sp, #4
   10ff4:	ldrd	r4, [sp]
   10ff8:	ldrd	r6, [sp, #8]
   10ffc:	ldrd	r8, [sp, #16]
   11000:	ldrd	sl, [sp, #24]
   11004:	ldr	lr, [sp, #32]
   11008:	add	sp, sp, #36	; 0x24
   1100c:	b	10900 <putchar@plt>
   11010:	movw	r1, #6924	; 0x1b0c
   11014:	movt	r1, #1
   11018:	ldr	r3, [pc, #156]	; 110bc <print_object@@Base+0x438>
   1101c:	movw	r0, #7132	; 0x1bdc
   11020:	movt	r0, #1
   11024:	mov	r2, #195	; 0xc3
   11028:	bl	10930 <__assert_fail@plt>
   1102c:	movw	r1, #6924	; 0x1b0c
   11030:	movt	r1, #1
   11034:	ldr	r3, [pc, #132]	; 110c0 <print_object@@Base+0x43c>
   11038:	movw	r0, #7196	; 0x1c1c
   1103c:	movt	r0, #1
   11040:	mov	r2, #192	; 0xc0
   11044:	bl	10930 <__assert_fail@plt>
   11048:	movw	r1, #6924	; 0x1b0c
   1104c:	movt	r1, #1
   11050:	ldr	r3, [pc, #100]	; 110bc <print_object@@Base+0x438>
   11054:	movw	r0, #7020	; 0x1b6c
   11058:	movt	r0, #1
   1105c:	mov	r2, #195	; 0xc3
   11060:	bl	10930 <__assert_fail@plt>
   11064:	movw	r1, #6924	; 0x1b0c
   11068:	movt	r1, #1
   1106c:	ldr	r3, [pc, #80]	; 110c4 <print_object@@Base+0x440>
   11070:	movw	r0, #7132	; 0x1bdc
   11074:	movt	r0, #1
   11078:	mov	r2, #218	; 0xda
   1107c:	bl	10930 <__assert_fail@plt>
   11080:	movw	r1, #6924	; 0x1b0c
   11084:	movt	r1, #1
   11088:	ldr	r3, [pc, #56]	; 110c8 <print_object@@Base+0x444>
   1108c:	movw	r0, #7132	; 0x1bdc
   11090:	movt	r0, #1
   11094:	mov	r2, #224	; 0xe0
   11098:	bl	10930 <__assert_fail@plt>
   1109c:	movw	r1, #6924	; 0x1b0c
   110a0:	movt	r1, #1
   110a4:	ldr	r3, [pc, #28]	; 110c8 <print_object@@Base+0x444>
   110a8:	movw	r0, #7020	; 0x1b6c
   110ac:	movt	r0, #1
   110b0:	mov	r2, #224	; 0xe0
   110b4:	bl	10930 <__assert_fail@plt>
   110b8:	andeq	r1, r1, r4, lsr #20
   110bc:	andeq	r1, r1, ip, lsl #20
   110c0:	strdeq	r1, [r1], -r4
   110c4:	ldrdeq	r1, [r1], -ip
   110c8:	andeq	r1, r1, r0, asr #19

000110cc <print_enum@@Base>:
   110cc:	strd	r4, [sp, #-36]!	; 0xffffffdc
   110d0:	strd	r6, [sp, #8]
   110d4:	subs	r7, r0, #0
   110d8:	strd	r8, [sp, #16]
   110dc:	strd	sl, [sp, #24]
   110e0:	str	lr, [sp, #32]
   110e4:	sub	sp, sp, #12
   110e8:	beq	11400 <print_enum@@Base+0x334>
   110ec:	ldr	r3, [r7]
   110f0:	sub	r3, r7, r3
   110f4:	ldrh	r2, [r3]
   110f8:	cmp	r2, #5
   110fc:	bls	113c8 <print_enum@@Base+0x2fc>
   11100:	ldrh	r1, [r3, #4]
   11104:	cmp	r1, #0
   11108:	beq	113c8 <print_enum@@Base+0x2fc>
   1110c:	ldr	r3, [r7, r1]
   11110:	add	r1, r7, r1
   11114:	movw	r0, #7168	; 0x1c00
   11118:	movt	r0, #1
   1111c:	add	r3, r3, #4
   11120:	add	r1, r1, r3
   11124:	bl	10864 <printf@plt>
   11128:	ldr	r3, [r7]
   1112c:	sub	r3, r7, r3
   11130:	ldrh	r2, [r3]
   11134:	cmp	r2, #7
   11138:	bls	113ac <print_enum@@Base+0x2e0>
   1113c:	ldrh	r3, [r3, #6]
   11140:	cmp	r3, #0
   11144:	beq	113ac <print_enum@@Base+0x2e0>
   11148:	ldr	r5, [r7, r3]
   1114c:	add	r4, r7, r3
   11150:	movw	r0, #7412	; 0x1cf4
   11154:	movt	r0, #1
   11158:	bl	10864 <printf@plt>
   1115c:	add	r5, r5, #4
   11160:	add	r8, r4, r5
   11164:	cmp	r8, #0
   11168:	beq	112d8 <print_enum@@Base+0x20c>
   1116c:	ldr	r3, [r8, #-4]
   11170:	cmp	r3, #0
   11174:	beq	112d8 <print_enum@@Base+0x20c>
   11178:	ldr	r3, [r4, r5]
   1117c:	adds	r4, r8, r3
   11180:	beq	112bc <print_enum@@Base+0x1f0>
   11184:	ldr	r3, [r8, r3]
   11188:	sub	r3, r4, r3
   1118c:	ldrh	r2, [r3]
   11190:	cmp	r2, #5
   11194:	bls	11390 <print_enum@@Base+0x2c4>
   11198:	ldrh	r1, [r3, #4]
   1119c:	cmp	r1, #0
   111a0:	beq	11390 <print_enum@@Base+0x2c4>
   111a4:	movw	r3, #7424	; 0x1d00
   111a8:	movt	r3, #1
   111ac:	movw	r9, #7168	; 0x1c00
   111b0:	movt	r9, #1
   111b4:	movw	fp, #7440	; 0x1d10
   111b8:	movt	fp, #1
   111bc:	str	r3, [sp, #4]
   111c0:	mov	r5, r8
   111c4:	mov	r6, #0
   111c8:	b	111ec <print_enum@@Base+0x120>
   111cc:	ldr	r3, [r5, sl]
   111d0:	sub	r3, r4, r3
   111d4:	ldrh	r2, [r3]
   111d8:	cmp	r2, #5
   111dc:	bls	11390 <print_enum@@Base+0x2c4>
   111e0:	ldrh	r1, [r3, #4]
   111e4:	cmp	r1, #0
   111e8:	beq	11390 <print_enum@@Base+0x2c4>
   111ec:	ldr	r3, [r4, r1]
   111f0:	add	r1, r4, r1
   111f4:	mov	r0, r9
   111f8:	add	r3, r3, #4
   111fc:	add	r1, r1, r3
   11200:	bl	10864 <printf@plt>
   11204:	ldr	r3, [r4]
   11208:	sub	r3, r4, r3
   1120c:	ldrh	r2, [r3]
   11210:	cmp	r2, #7
   11214:	bls	1128c <print_enum@@Base+0x1c0>
   11218:	ldrh	r1, [r3, #6]
   1121c:	cmp	r1, #0
   11220:	beq	1123c <print_enum@@Base+0x170>
   11224:	ldrd	r2, [r4, r1]
   11228:	ldr	r0, [sp, #4]
   1122c:	bl	10864 <printf@plt>
   11230:	ldr	r3, [r4]
   11234:	sub	r3, r4, r3
   11238:	ldrh	r2, [r3]
   1123c:	cmp	r2, #9
   11240:	bls	1128c <print_enum@@Base+0x1c0>
   11244:	ldrh	r3, [r3, #8]
   11248:	cmp	r3, #0
   1124c:	beq	1128c <print_enum@@Base+0x1c0>
   11250:	mov	r0, fp
   11254:	bl	10864 <printf@plt>
   11258:	ldr	r3, [r4]
   1125c:	sub	r3, r4, r3
   11260:	ldrh	r2, [r3]
   11264:	cmp	r2, #9
   11268:	movls	r0, #0
   1126c:	bls	11288 <print_enum@@Base+0x1bc>
   11270:	ldrh	r0, [r3, #8]
   11274:	cmp	r0, #0
   11278:	beq	11288 <print_enum@@Base+0x1bc>
   1127c:	ldr	r3, [r4, r0]
   11280:	add	r0, r4, r0
   11284:	add	r0, r0, r3
   11288:	bl	10c84 <print_object@@Base>
   1128c:	mov	r0, #125	; 0x7d
   11290:	add	r6, r6, #1
   11294:	bl	10900 <putchar@plt>
   11298:	ldr	r3, [r8, #-4]
   1129c:	cmp	r6, r3
   112a0:	bcs	112d8 <print_enum@@Base+0x20c>
   112a4:	ldr	sl, [r5, #4]!
   112a8:	mov	r0, #44	; 0x2c
   112ac:	bl	10900 <putchar@plt>
   112b0:	add	r4, r5, sl
   112b4:	cmp	r4, #0
   112b8:	bne	111cc <print_enum@@Base+0x100>
   112bc:	movw	r1, #6924	; 0x1b0c
   112c0:	movt	r1, #1
   112c4:	ldr	r3, [pc, #336]	; 1141c <print_enum@@Base+0x350>
   112c8:	movw	r0, #7020	; 0x1b6c
   112cc:	movt	r0, #1
   112d0:	mov	r2, #159	; 0x9f
   112d4:	bl	10930 <__assert_fail@plt>
   112d8:	mov	r0, #93	; 0x5d
   112dc:	bl	10900 <putchar@plt>
   112e0:	ldr	r3, [r7]
   112e4:	sub	r3, r7, r3
   112e8:	ldrh	r2, [r3]
   112ec:	cmp	r2, #9
   112f0:	bhi	11354 <print_enum@@Base+0x288>
   112f4:	movw	r0, #7468	; 0x1d2c
   112f8:	movt	r0, #1
   112fc:	bl	10864 <printf@plt>
   11300:	ldr	r3, [r7]
   11304:	sub	r3, r7, r3
   11308:	ldrh	r2, [r3]
   1130c:	cmp	r2, #11
   11310:	bls	113e4 <print_enum@@Base+0x318>
   11314:	ldrh	r3, [r3, #10]
   11318:	cmp	r3, #0
   1131c:	beq	113e4 <print_enum@@Base+0x318>
   11320:	ldr	r0, [r7, r3]
   11324:	add	r7, r7, r3
   11328:	add	r0, r7, r0
   1132c:	bl	10ac4 <print_type@@Base>
   11330:	mov	r0, #125	; 0x7d
   11334:	add	sp, sp, #12
   11338:	ldrd	r4, [sp]
   1133c:	ldrd	r6, [sp, #8]
   11340:	ldrd	r8, [sp, #16]
   11344:	ldrd	sl, [sp, #24]
   11348:	ldr	lr, [sp, #32]
   1134c:	add	sp, sp, #36	; 0x24
   11350:	b	10900 <putchar@plt>
   11354:	ldrh	r3, [r3, #8]
   11358:	cmp	r3, #0
   1135c:	beq	112f4 <print_enum@@Base+0x228>
   11360:	ldrb	r1, [r7, r3]
   11364:	movw	r2, #7116	; 0x1bcc
   11368:	movt	r2, #1
   1136c:	movw	r3, #7124	; 0x1bd4
   11370:	movt	r3, #1
   11374:	movw	r0, #7452	; 0x1d1c
   11378:	movt	r0, #1
   1137c:	cmp	r1, #0
   11380:	movne	r1, r2
   11384:	moveq	r1, r3
   11388:	bl	10864 <printf@plt>
   1138c:	b	112f4 <print_enum@@Base+0x228>
   11390:	movw	r1, #6924	; 0x1b0c
   11394:	movt	r1, #1
   11398:	ldr	r3, [pc, #124]	; 1141c <print_enum@@Base+0x350>
   1139c:	movw	r0, #7132	; 0x1bdc
   113a0:	movt	r0, #1
   113a4:	mov	r2, #159	; 0x9f
   113a8:	bl	10930 <__assert_fail@plt>
   113ac:	movw	r1, #6924	; 0x1b0c
   113b0:	movt	r1, #1
   113b4:	ldr	r3, [pc, #100]	; 11420 <print_enum@@Base+0x354>
   113b8:	movw	r0, #7132	; 0x1bdc
   113bc:	movt	r0, #1
   113c0:	mov	r2, #183	; 0xb7
   113c4:	bl	10930 <__assert_fail@plt>
   113c8:	movw	r1, #6924	; 0x1b0c
   113cc:	movt	r1, #1
   113d0:	ldr	r3, [pc, #76]	; 11424 <print_enum@@Base+0x358>
   113d4:	movw	r0, #7132	; 0x1bdc
   113d8:	movt	r0, #1
   113dc:	mov	r2, #177	; 0xb1
   113e0:	bl	10930 <__assert_fail@plt>
   113e4:	movw	r1, #6924	; 0x1b0c
   113e8:	movt	r1, #1
   113ec:	ldr	r3, [pc, #52]	; 11428 <print_enum@@Base+0x35c>
   113f0:	movw	r0, #7132	; 0x1bdc
   113f4:	movt	r0, #1
   113f8:	mov	r2, #185	; 0xb9
   113fc:	bl	10930 <__assert_fail@plt>
   11400:	movw	r1, #6924	; 0x1b0c
   11404:	movt	r1, #1
   11408:	ldr	r3, [pc, #20]	; 11424 <print_enum@@Base+0x358>
   1140c:	movw	r0, #7020	; 0x1b6c
   11410:	movt	r0, #1
   11414:	mov	r2, #177	; 0xb1
   11418:	bl	10930 <__assert_fail@plt>
   1141c:	andeq	r1, r1, ip, ror #20
   11420:	andeq	r1, r1, r4, asr sl
   11424:	andeq	r1, r1, ip, lsr sl
   11428:	andeq	r1, r1, r4, lsl #21

0001142c <print_schema@@Base>:
   1142c:	strd	r4, [sp, #-16]!
   11430:	str	r6, [sp, #8]
   11434:	subs	r6, r0, #0
   11438:	str	lr, [sp, #12]
   1143c:	beq	116dc <print_schema@@Base+0x2b0>
   11440:	ldr	r3, [r6]
   11444:	sub	r3, r6, r3
   11448:	ldrh	r2, [r3]
   1144c:	cmp	r2, #5
   11450:	bls	116a4 <print_schema@@Base+0x278>
   11454:	ldrh	r3, [r3, #4]
   11458:	cmp	r3, #0
   1145c:	beq	116a4 <print_schema@@Base+0x278>
   11460:	ldr	r5, [r6, r3]
   11464:	mov	r0, #123	; 0x7b
   11468:	add	r3, r6, r3
   1146c:	add	r5, r5, #4
   11470:	add	r5, r3, r5
   11474:	bl	10900 <putchar@plt>
   11478:	movw	r0, #7488	; 0x1d40
   1147c:	movt	r0, #1
   11480:	bl	10864 <printf@plt>
   11484:	cmp	r5, #0
   11488:	beq	114d8 <print_schema@@Base+0xac>
   1148c:	ldr	r3, [r5, #-4]
   11490:	cmp	r3, #0
   11494:	movne	r3, r5
   11498:	movne	r4, #0
   1149c:	bne	114bc <print_schema@@Base+0x90>
   114a0:	b	114d8 <print_schema@@Base+0xac>
   114a4:	mov	r0, #44	; 0x2c
   114a8:	bl	10900 <putchar@plt>
   114ac:	ldr	r2, [r5, #-4]
   114b0:	add	r3, r5, r4, lsl #2
   114b4:	cmp	r4, r2
   114b8:	bcs	1166c <print_schema@@Base+0x240>
   114bc:	ldr	r0, [r3]
   114c0:	add	r4, r4, #1
   114c4:	add	r0, r3, r0
   114c8:	bl	10c84 <print_object@@Base>
   114cc:	ldr	r3, [r5, #-4]
   114d0:	cmp	r4, r3
   114d4:	bcc	114a4 <print_schema@@Base+0x78>
   114d8:	mov	r0, #93	; 0x5d
   114dc:	bl	10900 <putchar@plt>
   114e0:	ldr	r3, [r6]
   114e4:	sub	r3, r6, r3
   114e8:	ldrh	r2, [r3]
   114ec:	cmp	r2, #7
   114f0:	bls	116c0 <print_schema@@Base+0x294>
   114f4:	ldrh	r3, [r3, #6]
   114f8:	cmp	r3, #0
   114fc:	beq	116c0 <print_schema@@Base+0x294>
   11500:	ldr	r5, [r6, r3]
   11504:	add	r3, r6, r3
   11508:	movw	r0, #7500	; 0x1d4c
   1150c:	movt	r0, #1
   11510:	add	r5, r5, #4
   11514:	add	r5, r3, r5
   11518:	bl	10864 <printf@plt>
   1151c:	cmp	r5, #0
   11520:	beq	11570 <print_schema@@Base+0x144>
   11524:	ldr	r3, [r5, #-4]
   11528:	cmp	r3, #0
   1152c:	movne	r3, r5
   11530:	movne	r4, #0
   11534:	bne	11554 <print_schema@@Base+0x128>
   11538:	b	11570 <print_schema@@Base+0x144>
   1153c:	mov	r0, #44	; 0x2c
   11540:	bl	10900 <putchar@plt>
   11544:	ldr	r2, [r5, #-4]
   11548:	add	r3, r5, r4, lsl #2
   1154c:	cmp	r4, r2
   11550:	bcs	11688 <print_schema@@Base+0x25c>
   11554:	ldr	r0, [r3]
   11558:	add	r4, r4, #1
   1155c:	add	r0, r3, r0
   11560:	bl	110cc <print_enum@@Base>
   11564:	ldr	r3, [r5, #-4]
   11568:	cmp	r4, r3
   1156c:	bcc	1153c <print_schema@@Base+0x110>
   11570:	mov	r0, #93	; 0x5d
   11574:	bl	10900 <putchar@plt>
   11578:	ldr	r3, [r6]
   1157c:	sub	r3, r6, r3
   11580:	ldrh	r2, [r3]
   11584:	cmp	r2, #9
   11588:	bls	11650 <print_schema@@Base+0x224>
   1158c:	ldrh	r1, [r3, #8]
   11590:	cmp	r1, #0
   11594:	beq	115c0 <print_schema@@Base+0x194>
   11598:	ldr	r3, [r6, r1]
   1159c:	add	r1, r6, r1
   115a0:	movw	r0, #7512	; 0x1d58
   115a4:	movt	r0, #1
   115a8:	add	r3, r3, #4
   115ac:	add	r1, r1, r3
   115b0:	bl	10864 <printf@plt>
   115b4:	ldr	r3, [r6]
   115b8:	sub	r3, r6, r3
   115bc:	ldrh	r2, [r3]
   115c0:	cmp	r2, #11
   115c4:	bls	11650 <print_schema@@Base+0x224>
   115c8:	ldrh	r1, [r3, #10]
   115cc:	cmp	r1, #0
   115d0:	beq	115fc <print_schema@@Base+0x1d0>
   115d4:	ldr	r3, [r6, r1]
   115d8:	add	r1, r6, r1
   115dc:	movw	r0, #7532	; 0x1d6c
   115e0:	movt	r0, #1
   115e4:	add	r3, r3, #4
   115e8:	add	r1, r1, r3
   115ec:	bl	10864 <printf@plt>
   115f0:	ldr	r3, [r6]
   115f4:	sub	r3, r6, r3
   115f8:	ldrh	r2, [r3]
   115fc:	cmp	r2, #13
   11600:	bls	11650 <print_schema@@Base+0x224>
   11604:	ldrh	r3, [r3, #12]
   11608:	cmp	r3, #0
   1160c:	beq	11650 <print_schema@@Base+0x224>
   11610:	movw	r0, #7552	; 0x1d80
   11614:	movt	r0, #1
   11618:	bl	10864 <printf@plt>
   1161c:	ldr	r3, [r6]
   11620:	sub	r3, r6, r3
   11624:	ldrh	r2, [r3]
   11628:	cmp	r2, #13
   1162c:	movls	r0, #0
   11630:	bls	1164c <print_schema@@Base+0x220>
   11634:	ldrh	r0, [r3, #12]
   11638:	cmp	r0, #0
   1163c:	beq	1164c <print_schema@@Base+0x220>
   11640:	ldr	r3, [r6, r0]
   11644:	add	r6, r6, r0
   11648:	add	r0, r6, r3
   1164c:	bl	10c84 <print_object@@Base>
   11650:	movw	r0, #7568	; 0x1d90
   11654:	movt	r0, #1
   11658:	ldrd	r4, [sp]
   1165c:	ldr	r6, [sp, #8]
   11660:	ldr	lr, [sp, #12]
   11664:	add	sp, sp, #16
   11668:	b	108b8 <puts@plt>
   1166c:	movw	r1, #6924	; 0x1b0c
   11670:	movt	r1, #1
   11674:	ldr	r3, [pc, #124]	; 116f8 <print_schema@@Base+0x2cc>
   11678:	movw	r0, #7196	; 0x1c1c
   1167c:	movt	r0, #1
   11680:	mov	r2, #215	; 0xd7
   11684:	bl	10930 <__assert_fail@plt>
   11688:	movw	r1, #6924	; 0x1b0c
   1168c:	movt	r1, #1
   11690:	ldr	r3, [pc, #100]	; 116fc <print_schema@@Base+0x2d0>
   11694:	movw	r0, #7196	; 0x1c1c
   11698:	movt	r0, #1
   1169c:	mov	r2, #174	; 0xae
   116a0:	bl	10930 <__assert_fail@plt>
   116a4:	movw	r1, #6924	; 0x1b0c
   116a8:	movt	r1, #1
   116ac:	ldr	r3, [pc, #76]	; 11700 <print_schema@@Base+0x2d4>
   116b0:	movw	r0, #7132	; 0x1bdc
   116b4:	movt	r0, #1
   116b8:	mov	r2, #237	; 0xed
   116bc:	bl	10930 <__assert_fail@plt>
   116c0:	movw	r1, #6924	; 0x1b0c
   116c4:	movt	r1, #1
   116c8:	ldr	r3, [pc, #52]	; 11704 <print_schema@@Base+0x2d8>
   116cc:	movw	r0, #7132	; 0x1bdc
   116d0:	movt	r0, #1
   116d4:	mov	r2, #238	; 0xee
   116d8:	bl	10930 <__assert_fail@plt>
   116dc:	movw	r1, #6924	; 0x1b0c
   116e0:	movt	r1, #1
   116e4:	ldr	r3, [pc, #20]	; 11700 <print_schema@@Base+0x2d4>
   116e8:	movw	r0, #7020	; 0x1b6c
   116ec:	movt	r0, #1
   116f0:	mov	r2, #237	; 0xed
   116f4:	bl	10930 <__assert_fail@plt>
   116f8:	andeq	r1, r1, r0, asr #21
   116fc:	strdeq	r1, [r1], -r4
   11700:	andeq	r1, r1, r4, lsr #21
   11704:	ldrdeq	r1, [r1], -ip

00011708 <load_and_dump_schema@@Base>:
   11708:	movw	r1, #7572	; 0x1d94
   1170c:	movt	r1, #1
   11710:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11714:	strd	r6, [sp, #8]
   11718:	str	r8, [sp, #16]
   1171c:	mov	r8, r0
   11720:	str	lr, [sp, #20]
   11724:	bl	10870 <fopen@plt>
   11728:	subs	r6, r0, #0
   1172c:	beq	11848 <load_and_dump_schema@@Base+0x140>
   11730:	mov	r2, #2
   11734:	mov	r1, #0
   11738:	bl	10918 <fseek@plt>
   1173c:	mov	r0, r6
   11740:	bl	10888 <ftell@plt>
   11744:	mov	r5, r0
   11748:	movw	r3, #10000	; 0x2710
   1174c:	cmp	r5, r3
   11750:	mov	r0, r6
   11754:	bhi	11890 <load_and_dump_schema@@Base+0x188>
   11758:	bl	10894 <rewind@plt>
   1175c:	cmp	r5, #0
   11760:	movne	r0, r5
   11764:	moveq	r0, #1
   11768:	bl	108c4 <malloc@plt>
   1176c:	subs	r4, r0, #0
   11770:	beq	11898 <load_and_dump_schema@@Base+0x190>
   11774:	mov	r7, #0
   11778:	b	11780 <load_and_dump_schema@@Base+0x78>
   1177c:	add	r7, r7, r0
   11780:	mov	r3, r6
   11784:	sub	r2, r5, r7
   11788:	mov	r1, #1
   1178c:	add	r0, r4, r7
   11790:	bl	108ac <fread@plt>
   11794:	cmp	r0, #0
   11798:	bne	1177c <load_and_dump_schema@@Base+0x74>
   1179c:	cmp	r5, r7
   117a0:	mov	r0, r6
   117a4:	bne	1183c <load_and_dump_schema@@Base+0x134>
   117a8:	bl	1090c <fclose@plt>
   117ac:	cmp	r5, #11
   117b0:	bls	118a4 <load_and_dump_schema@@Base+0x19c>
   117b4:	ldr	r2, [r4, #4]
   117b8:	movw	r3, #17986	; 0x4642
   117bc:	movt	r3, #21314	; 0x5342
   117c0:	cmp	r2, r3
   117c4:	beq	11804 <load_and_dump_schema@@Base+0xfc>
   117c8:	ldr	r0, [r4, #8]
   117cc:	movw	r1, #17986	; 0x4642
   117d0:	movt	r1, #21314	; 0x5342
   117d4:	movw	r3, #12384	; 0x3060
   117d8:	movt	r3, #2
   117dc:	ldr	r3, [r3]
   117e0:	cmp	r0, r1
   117e4:	beq	1186c <load_and_dump_schema@@Base+0x164>
   117e8:	movw	r0, #7696	; 0x1e10
   117ec:	movt	r0, #1
   117f0:	mov	r2, #27
   117f4:	mov	r1, #1
   117f8:	mvn	r5, #0
   117fc:	bl	108a0 <fwrite@plt>
   11800:	b	1181c <load_and_dump_schema@@Base+0x114>
   11804:	ldr	r0, [r4]
   11808:	adds	r5, r4, r0
   1180c:	beq	117c8 <load_and_dump_schema@@Base+0xc0>
   11810:	mov	r0, r5
   11814:	mov	r5, #0
   11818:	bl	1142c <print_schema@@Base>
   1181c:	mov	r0, r4
   11820:	bl	1087c <free@plt>
   11824:	mov	r0, r5
   11828:	ldrd	r4, [sp]
   1182c:	ldrd	r6, [sp, #8]
   11830:	ldr	r8, [sp, #16]
   11834:	add	sp, sp, #20
   11838:	pop	{pc}		; (ldr pc, [sp], #4)
   1183c:	bl	1090c <fclose@plt>
   11840:	mov	r0, r4
   11844:	bl	1087c <free@plt>
   11848:	movw	r3, #12384	; 0x3060
   1184c:	movt	r3, #2
   11850:	mov	r2, r8
   11854:	movw	r1, #7576	; 0x1d98
   11858:	movt	r1, #1
   1185c:	ldr	r0, [r3]
   11860:	mvn	r5, #0
   11864:	bl	108f4 <fprintf@plt>
   11868:	b	11824 <load_and_dump_schema@@Base+0x11c>
   1186c:	add	r0, r2, #4
   11870:	adds	r5, r4, r0
   11874:	beq	117e8 <load_and_dump_schema@@Base+0xe0>
   11878:	movw	r0, #7652	; 0x1de4
   1187c:	movt	r0, #1
   11880:	mov	r2, #40	; 0x28
   11884:	mov	r1, #1
   11888:	bl	108a0 <fwrite@plt>
   1188c:	b	11810 <load_and_dump_schema@@Base+0x108>
   11890:	bl	1090c <fclose@plt>
   11894:	b	11848 <load_and_dump_schema@@Base+0x140>
   11898:	mov	r0, r6
   1189c:	bl	1090c <fclose@plt>
   118a0:	b	11848 <load_and_dump_schema@@Base+0x140>
   118a4:	movw	r3, #12384	; 0x3060
   118a8:	movt	r3, #2
   118ac:	mov	r2, r8
   118b0:	movw	r1, #7620	; 0x1dc4
   118b4:	movt	r1, #1
   118b8:	ldr	r0, [r3]
   118bc:	mvn	r5, #0
   118c0:	bl	108f4 <fprintf@plt>
   118c4:	b	1181c <load_and_dump_schema@@Base+0x114>

000118c8 <__libc_csu_init@@Base>:
   118c8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   118cc:	mov	r7, r0
   118d0:	ldr	r6, [pc, #72]	; 11920 <__libc_csu_init@@Base+0x58>
   118d4:	ldr	r5, [pc, #72]	; 11924 <__libc_csu_init@@Base+0x5c>
   118d8:	add	r6, pc, r6
   118dc:	add	r5, pc, r5
   118e0:	sub	r6, r6, r5
   118e4:	mov	r8, r1
   118e8:	mov	r9, r2
   118ec:	bl	10844 <printf@plt-0x20>
   118f0:	asrs	r6, r6, #2
   118f4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   118f8:	mov	r4, #0
   118fc:	add	r4, r4, #1
   11900:	ldr	r3, [r5], #4
   11904:	mov	r2, r9
   11908:	mov	r1, r8
   1190c:	mov	r0, r7
   11910:	blx	r3
   11914:	cmp	r6, r4
   11918:	bne	118fc <__libc_csu_init@@Base+0x34>
   1191c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11920:	andeq	r1, r1, r4, lsr r6
   11924:	andeq	r1, r1, ip, lsr #12

00011928 <__libc_csu_fini@@Base>:
   11928:	bx	lr

Disassembly of section .fini:

0001192c <.fini>:
   1192c:	push	{r3, lr}
   11930:	pop	{r3, pc}
