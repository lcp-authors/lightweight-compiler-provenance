
../repos/coreutils/src/expr:     file format elf32-littlearm


Disassembly of section .init:

0001115c <.init>:
   1115c:	push	{r3, lr}
   11160:	bl	114dc <__assert_fail@plt+0x48>
   11164:	pop	{r3, pc}

Disassembly of section .plt:

00011168 <pthread_mutex_unlock@plt-0x14>:
   11168:	push	{lr}		; (str lr, [sp, #-4]!)
   1116c:	ldr	lr, [pc, #4]	; 11178 <pthread_mutex_unlock@plt-0x4>
   11170:	add	lr, pc, lr
   11174:	ldr	pc, [lr, #8]!
   11178:	andeq	r4, r4, r8, lsl #29

0001117c <pthread_mutex_unlock@plt>:
   1117c:	add	ip, pc, #0, 12
   11180:	add	ip, ip, #68, 20	; 0x44000
   11184:	ldr	pc, [ip, #3720]!	; 0xe88

00011188 <calloc@plt>:
   11188:	add	ip, pc, #0, 12
   1118c:	add	ip, ip, #68, 20	; 0x44000
   11190:	ldr	pc, [ip, #3712]!	; 0xe80

00011194 <fputs_unlocked@plt>:
   11194:	add	ip, pc, #0, 12
   11198:	add	ip, ip, #68, 20	; 0x44000
   1119c:	ldr	pc, [ip, #3704]!	; 0xe78

000111a0 <wctype@plt>:
   111a0:	add	ip, pc, #0, 12
   111a4:	add	ip, ip, #68, 20	; 0x44000
   111a8:	ldr	pc, [ip, #3696]!	; 0xe70

000111ac <raise@plt>:
   111ac:	add	ip, pc, #0, 12
   111b0:	add	ip, ip, #68, 20	; 0x44000
   111b4:	ldr	pc, [ip, #3688]!	; 0xe68

000111b8 <wcrtomb@plt>:
   111b8:	add	ip, pc, #0, 12
   111bc:	add	ip, ip, #68, 20	; 0x44000
   111c0:	ldr	pc, [ip, #3680]!	; 0xe60

000111c4 <iswctype@plt>:
   111c4:	add	ip, pc, #0, 12
   111c8:	add	ip, ip, #68, 20	; 0x44000
   111cc:	ldr	pc, [ip, #3672]!	; 0xe58

000111d0 <strcmp@plt>:
   111d0:	add	ip, pc, #0, 12
   111d4:	add	ip, ip, #68, 20	; 0x44000
   111d8:	ldr	pc, [ip, #3664]!	; 0xe50

000111dc <strcspn@plt>:
   111dc:	add	ip, pc, #0, 12
   111e0:	add	ip, ip, #68, 20	; 0x44000
   111e4:	ldr	pc, [ip, #3656]!	; 0xe48

000111e8 <printf@plt>:
   111e8:	add	ip, pc, #0, 12
   111ec:	add	ip, ip, #68, 20	; 0x44000
   111f0:	ldr	pc, [ip, #3648]!	; 0xe40

000111f4 <pthread_mutex_destroy@plt>:
   111f4:	add	ip, pc, #0, 12
   111f8:	add	ip, ip, #68, 20	; 0x44000
   111fc:	ldr	pc, [ip, #3640]!	; 0xe38

00011200 <fflush@plt>:
   11200:	add	ip, pc, #0, 12
   11204:	add	ip, ip, #68, 20	; 0x44000
   11208:	ldr	pc, [ip, #3632]!	; 0xe30

0001120c <wcwidth@plt>:
   1120c:	add	ip, pc, #0, 12
   11210:	add	ip, ip, #68, 20	; 0x44000
   11214:	ldr	pc, [ip, #3624]!	; 0xe28

00011218 <memmove@plt>:
   11218:	add	ip, pc, #0, 12
   1121c:	add	ip, ip, #68, 20	; 0x44000
   11220:	ldr	pc, [ip, #3616]!	; 0xe20

00011224 <free@plt>:
   11224:	add	ip, pc, #0, 12
   11228:	add	ip, ip, #68, 20	; 0x44000
   1122c:	ldr	pc, [ip, #3608]!	; 0xe18

00011230 <pthread_mutex_lock@plt>:
   11230:	add	ip, pc, #0, 12
   11234:	add	ip, ip, #68, 20	; 0x44000
   11238:	ldr	pc, [ip, #3600]!	; 0xe10

0001123c <_exit@plt>:
   1123c:	add	ip, pc, #0, 12
   11240:	add	ip, ip, #68, 20	; 0x44000
   11244:	ldr	pc, [ip, #3592]!	; 0xe08

00011248 <memcpy@plt>:
   11248:	add	ip, pc, #0, 12
   1124c:	add	ip, ip, #68, 20	; 0x44000
   11250:	ldr	pc, [ip, #3584]!	; 0xe00

00011254 <tolower@plt>:
   11254:	add	ip, pc, #0, 12
   11258:	add	ip, ip, #68, 20	; 0x44000
   1125c:	ldr	pc, [ip, #3576]!	; 0xdf8

00011260 <pthread_mutex_init@plt>:
   11260:	add	ip, pc, #0, 12
   11264:	add	ip, ip, #68, 20	; 0x44000
   11268:	ldr	pc, [ip, #3568]!	; 0xdf0

0001126c <towlower@plt>:
   1126c:	add	ip, pc, #0, 12
   11270:	add	ip, ip, #68, 20	; 0x44000
   11274:	ldr	pc, [ip, #3560]!	; 0xde8

00011278 <mbsinit@plt>:
   11278:	add	ip, pc, #0, 12
   1127c:	add	ip, ip, #68, 20	; 0x44000
   11280:	ldr	pc, [ip, #3552]!	; 0xde0

00011284 <memcmp@plt>:
   11284:	add	ip, pc, #0, 12
   11288:	add	ip, ip, #68, 20	; 0x44000
   1128c:	ldr	pc, [ip, #3544]!	; 0xdd8

00011290 <realloc@plt>:
   11290:	add	ip, pc, #0, 12
   11294:	add	ip, ip, #68, 20	; 0x44000
   11298:	ldr	pc, [ip, #3536]!	; 0xdd0

0001129c <textdomain@plt>:
   1129c:	add	ip, pc, #0, 12
   112a0:	add	ip, ip, #68, 20	; 0x44000
   112a4:	ldr	pc, [ip, #3528]!	; 0xdc8

000112a8 <iswcntrl@plt>:
   112a8:	add	ip, pc, #0, 12
   112ac:	add	ip, ip, #68, 20	; 0x44000
   112b0:	ldr	pc, [ip, #3520]!	; 0xdc0

000112b4 <iswprint@plt>:
   112b4:	add	ip, pc, #0, 12
   112b8:	add	ip, ip, #68, 20	; 0x44000
   112bc:	ldr	pc, [ip, #3512]!	; 0xdb8

000112c0 <fwrite@plt>:
   112c0:	add	ip, pc, #0, 12
   112c4:	add	ip, ip, #68, 20	; 0x44000
   112c8:	ldr	pc, [ip, #3504]!	; 0xdb0

000112cc <lseek64@plt>:
   112cc:	add	ip, pc, #0, 12
   112d0:	add	ip, ip, #68, 20	; 0x44000
   112d4:	ldr	pc, [ip, #3496]!	; 0xda8

000112d8 <__ctype_get_mb_cur_max@plt>:
   112d8:	add	ip, pc, #0, 12
   112dc:	add	ip, ip, #68, 20	; 0x44000
   112e0:	ldr	pc, [ip, #3488]!	; 0xda0

000112e4 <__fpending@plt>:
   112e4:	add	ip, pc, #0, 12
   112e8:	add	ip, ip, #68, 20	; 0x44000
   112ec:	ldr	pc, [ip, #3480]!	; 0xd98

000112f0 <ferror_unlocked@plt>:
   112f0:	add	ip, pc, #0, 12
   112f4:	add	ip, ip, #68, 20	; 0x44000
   112f8:	ldr	pc, [ip, #3472]!	; 0xd90

000112fc <mbrtowc@plt>:
   112fc:	add	ip, pc, #0, 12
   11300:	add	ip, ip, #68, 20	; 0x44000
   11304:	ldr	pc, [ip, #3464]!	; 0xd88

00011308 <error@plt>:
   11308:	add	ip, pc, #0, 12
   1130c:	add	ip, ip, #68, 20	; 0x44000
   11310:	ldr	pc, [ip, #3456]!	; 0xd80

00011314 <strcoll@plt>:
   11314:	add	ip, pc, #0, 12
   11318:	add	ip, ip, #68, 20	; 0x44000
   1131c:	ldr	pc, [ip, #3448]!	; 0xd78

00011320 <puts@plt>:
   11320:	add	ip, pc, #0, 12
   11324:	add	ip, ip, #68, 20	; 0x44000
   11328:	ldr	pc, [ip, #3440]!	; 0xd70

0001132c <malloc@plt>:
   1132c:	add	ip, pc, #0, 12
   11330:	add	ip, ip, #68, 20	; 0x44000
   11334:	ldr	pc, [ip, #3432]!	; 0xd68

00011338 <__libc_start_main@plt>:
   11338:	add	ip, pc, #0, 12
   1133c:	add	ip, ip, #68, 20	; 0x44000
   11340:	ldr	pc, [ip, #3424]!	; 0xd60

00011344 <__freading@plt>:
   11344:	add	ip, pc, #0, 12
   11348:	add	ip, ip, #68, 20	; 0x44000
   1134c:	ldr	pc, [ip, #3416]!	; 0xd58

00011350 <__gmon_start__@plt>:
   11350:	add	ip, pc, #0, 12
   11354:	add	ip, ip, #68, 20	; 0x44000
   11358:	ldr	pc, [ip, #3408]!	; 0xd50

0001135c <getopt_long@plt>:
   1135c:	add	ip, pc, #0, 12
   11360:	add	ip, ip, #68, 20	; 0x44000
   11364:	ldr	pc, [ip, #3400]!	; 0xd48

00011368 <__ctype_b_loc@plt>:
   11368:	add	ip, pc, #0, 12
   1136c:	add	ip, ip, #68, 20	; 0x44000
   11370:	ldr	pc, [ip, #3392]!	; 0xd40

00011374 <exit@plt>:
   11374:	add	ip, pc, #0, 12
   11378:	add	ip, ip, #68, 20	; 0x44000
   1137c:	ldr	pc, [ip, #3384]!	; 0xd38

00011380 <gettext@plt>:
   11380:	add	ip, pc, #0, 12
   11384:	add	ip, ip, #68, 20	; 0x44000
   11388:	ldr	pc, [ip, #3376]!	; 0xd30

0001138c <strlen@plt>:
   1138c:	add	ip, pc, #0, 12
   11390:	add	ip, ip, #68, 20	; 0x44000
   11394:	ldr	pc, [ip, #3368]!	; 0xd28

00011398 <strchr@plt>:
   11398:	add	ip, pc, #0, 12
   1139c:	add	ip, ip, #68, 20	; 0x44000
   113a0:	ldr	pc, [ip, #3360]!	; 0xd20

000113a4 <fprintf@plt>:
   113a4:	add	ip, pc, #0, 12
   113a8:	add	ip, ip, #68, 20	; 0x44000
   113ac:	ldr	pc, [ip, #3352]!	; 0xd18

000113b0 <__errno_location@plt>:
   113b0:	add	ip, pc, #0, 12
   113b4:	add	ip, ip, #68, 20	; 0x44000
   113b8:	ldr	pc, [ip, #3344]!	; 0xd10

000113bc <iswalnum@plt>:
   113bc:	add	ip, pc, #0, 12
   113c0:	add	ip, ip, #68, 20	; 0x44000
   113c4:	ldr	pc, [ip, #3336]!	; 0xd08

000113c8 <__cxa_atexit@plt>:
   113c8:	add	ip, pc, #0, 12
   113cc:	add	ip, ip, #68, 20	; 0x44000
   113d0:	ldr	pc, [ip, #3328]!	; 0xd00

000113d4 <memset@plt>:
   113d4:	add	ip, pc, #0, 12
   113d8:	add	ip, ip, #68, 20	; 0x44000
   113dc:	ldr	pc, [ip, #3320]!	; 0xcf8

000113e0 <btowc@plt>:
   113e0:	add	ip, pc, #0, 12
   113e4:	add	ip, ip, #68, 20	; 0x44000
   113e8:	ldr	pc, [ip, #3312]!	; 0xcf0

000113ec <fileno@plt>:
   113ec:	add	ip, pc, #0, 12
   113f0:	add	ip, ip, #68, 20	; 0x44000
   113f4:	ldr	pc, [ip, #3304]!	; 0xce8

000113f8 <memchr@plt>:
   113f8:	add	ip, pc, #0, 12
   113fc:	add	ip, ip, #68, 20	; 0x44000
   11400:	ldr	pc, [ip, #3296]!	; 0xce0

00011404 <fclose@plt>:
   11404:	add	ip, pc, #0, 12
   11408:	add	ip, ip, #68, 20	; 0x44000
   1140c:	ldr	pc, [ip, #3288]!	; 0xcd8

00011410 <fseeko64@plt>:
   11410:	add	ip, pc, #0, 12
   11414:	add	ip, ip, #68, 20	; 0x44000
   11418:	ldr	pc, [ip, #3280]!	; 0xcd0

0001141c <setlocale@plt>:
   1141c:	add	ip, pc, #0, 12
   11420:	add	ip, ip, #68, 20	; 0x44000
   11424:	ldr	pc, [ip, #3272]!	; 0xcc8

00011428 <toupper@plt>:
   11428:	add	ip, pc, #0, 12
   1142c:	add	ip, ip, #68, 20	; 0x44000
   11430:	ldr	pc, [ip, #3264]!	; 0xcc0

00011434 <strrchr@plt>:
   11434:	add	ip, pc, #0, 12
   11438:	add	ip, ip, #68, 20	; 0x44000
   1143c:	ldr	pc, [ip, #3256]!	; 0xcb8

00011440 <nl_langinfo@plt>:
   11440:	add	ip, pc, #0, 12
   11444:	add	ip, ip, #68, 20	; 0x44000
   11448:	ldr	pc, [ip, #3248]!	; 0xcb0

0001144c <bindtextdomain@plt>:
   1144c:	add	ip, pc, #0, 12
   11450:	add	ip, ip, #68, 20	; 0x44000
   11454:	ldr	pc, [ip, #3240]!	; 0xca8

00011458 <towupper@plt>:
   11458:	add	ip, pc, #0, 12
   1145c:	add	ip, ip, #68, 20	; 0x44000
   11460:	ldr	pc, [ip, #3232]!	; 0xca0

00011464 <fputs@plt>:
   11464:	add	ip, pc, #0, 12
   11468:	add	ip, ip, #68, 20	; 0x44000
   1146c:	ldr	pc, [ip, #3224]!	; 0xc98

00011470 <strncmp@plt>:
   11470:	add	ip, pc, #0, 12
   11474:	add	ip, ip, #68, 20	; 0x44000
   11478:	ldr	pc, [ip, #3216]!	; 0xc90

0001147c <abort@plt>:
   1147c:	add	ip, pc, #0, 12
   11480:	add	ip, ip, #68, 20	; 0x44000
   11484:	ldr	pc, [ip, #3208]!	; 0xc88

00011488 <putchar_unlocked@plt>:
   11488:	add	ip, pc, #0, 12
   1148c:	add	ip, ip, #68, 20	; 0x44000
   11490:	ldr	pc, [ip, #3200]!	; 0xc80

00011494 <__assert_fail@plt>:
   11494:	add	ip, pc, #0, 12
   11498:	add	ip, ip, #68, 20	; 0x44000
   1149c:	ldr	pc, [ip, #3192]!	; 0xc78

Disassembly of section .text:

000114a0 <.text>:
   114a0:	mov	fp, #0
   114a4:	mov	lr, #0
   114a8:	pop	{r1}		; (ldr r1, [sp], #4)
   114ac:	mov	r2, sp
   114b0:	push	{r2}		; (str r2, [sp, #-4]!)
   114b4:	push	{r0}		; (str r0, [sp, #-4]!)
   114b8:	ldr	ip, [pc, #16]	; 114d0 <__assert_fail@plt+0x3c>
   114bc:	push	{ip}		; (str ip, [sp, #-4]!)
   114c0:	ldr	r0, [pc, #12]	; 114d4 <__assert_fail@plt+0x40>
   114c4:	ldr	r3, [pc, #12]	; 114d8 <__assert_fail@plt+0x44>
   114c8:	bl	11338 <__libc_start_main@plt>
   114cc:	bl	1147c <abort@plt>
   114d0:	andeq	r3, r4, ip, asr r8
   114d4:	andeq	r1, r1, r0, ror #18
   114d8:	strdeq	r3, [r4], -ip
   114dc:	ldr	r3, [pc, #20]	; 114f8 <__assert_fail@plt+0x64>
   114e0:	ldr	r2, [pc, #20]	; 114fc <__assert_fail@plt+0x68>
   114e4:	add	r3, pc, r3
   114e8:	ldr	r2, [r3, r2]
   114ec:	cmp	r2, #0
   114f0:	bxeq	lr
   114f4:	b	11350 <__gmon_start__@plt>
   114f8:	andeq	r4, r4, r4, lsl fp
   114fc:	andeq	r0, r0, r8, lsl r1
   11500:	ldr	r0, [pc, #24]	; 11520 <__assert_fail@plt+0x8c>
   11504:	ldr	r3, [pc, #24]	; 11524 <__assert_fail@plt+0x90>
   11508:	cmp	r3, r0
   1150c:	bxeq	lr
   11510:	ldr	r3, [pc, #16]	; 11528 <__assert_fail@plt+0x94>
   11514:	cmp	r3, #0
   11518:	bxeq	lr
   1151c:	bx	r3
   11520:	andeq	r6, r5, r4, ror r1
   11524:	andeq	r6, r5, r4, ror r1
   11528:	andeq	r0, r0, r0
   1152c:	ldr	r0, [pc, #36]	; 11558 <__assert_fail@plt+0xc4>
   11530:	ldr	r1, [pc, #36]	; 1155c <__assert_fail@plt+0xc8>
   11534:	sub	r1, r1, r0
   11538:	asr	r1, r1, #2
   1153c:	add	r1, r1, r1, lsr #31
   11540:	asrs	r1, r1, #1
   11544:	bxeq	lr
   11548:	ldr	r3, [pc, #16]	; 11560 <__assert_fail@plt+0xcc>
   1154c:	cmp	r3, #0
   11550:	bxeq	lr
   11554:	bx	r3
   11558:	andeq	r6, r5, r4, ror r1
   1155c:	andeq	r6, r5, r4, ror r1
   11560:	andeq	r0, r0, r0
   11564:	push	{r4, lr}
   11568:	ldr	r4, [pc, #24]	; 11588 <__assert_fail@plt+0xf4>
   1156c:	ldrb	r3, [r4]
   11570:	cmp	r3, #0
   11574:	popne	{r4, pc}
   11578:	bl	11500 <__assert_fail@plt+0x6c>
   1157c:	mov	r3, #1
   11580:	strb	r3, [r4]
   11584:	pop	{r4, pc}
   11588:	muleq	r5, r4, r1
   1158c:	b	1152c <__assert_fail@plt+0x98>
   11590:	push	{fp, lr}
   11594:	mov	fp, sp
   11598:	sub	sp, sp, #64	; 0x40
   1159c:	str	r0, [fp, #-4]
   115a0:	ldr	r0, [fp, #-4]
   115a4:	cmp	r0, #0
   115a8:	beq	115f8 <__assert_fail@plt+0x164>
   115ac:	b	115b0 <__assert_fail@plt+0x11c>
   115b0:	movw	r0, #24968	; 0x6188
   115b4:	movt	r0, #5
   115b8:	ldr	r0, [r0]
   115bc:	movw	r1, #14468	; 0x3884
   115c0:	movt	r1, #4
   115c4:	str	r0, [fp, #-8]
   115c8:	mov	r0, r1
   115cc:	bl	11380 <gettext@plt>
   115d0:	movw	r1, #24996	; 0x61a4
   115d4:	movt	r1, #5
   115d8:	ldr	r2, [r1]
   115dc:	ldr	r1, [fp, #-8]
   115e0:	str	r0, [fp, #-12]
   115e4:	mov	r0, r1
   115e8:	ldr	r1, [fp, #-12]
   115ec:	bl	113a4 <fprintf@plt>
   115f0:	str	r0, [fp, #-16]
   115f4:	b	117a4 <__assert_fail@plt+0x310>
   115f8:	movw	r0, #14507	; 0x38ab
   115fc:	movt	r0, #4
   11600:	bl	11380 <gettext@plt>
   11604:	movw	lr, #24996	; 0x61a4
   11608:	movt	lr, #5
   1160c:	ldr	r1, [lr]
   11610:	ldr	r2, [lr]
   11614:	bl	111e8 <printf@plt>
   11618:	movw	r1, #10
   1161c:	str	r0, [fp, #-20]	; 0xffffffec
   11620:	mov	r0, r1
   11624:	bl	11488 <putchar_unlocked@plt>
   11628:	movw	r1, #14546	; 0x38d2
   1162c:	movt	r1, #4
   11630:	str	r0, [fp, #-24]	; 0xffffffe8
   11634:	mov	r0, r1
   11638:	bl	11380 <gettext@plt>
   1163c:	movw	r1, #24972	; 0x618c
   11640:	movt	r1, #5
   11644:	ldr	r1, [r1]
   11648:	bl	11194 <fputs_unlocked@plt>
   1164c:	movw	r1, #14591	; 0x38ff
   11650:	movt	r1, #4
   11654:	str	r0, [fp, #-28]	; 0xffffffe4
   11658:	mov	r0, r1
   1165c:	bl	11380 <gettext@plt>
   11660:	movw	r1, #24972	; 0x618c
   11664:	movt	r1, #5
   11668:	ldr	r1, [r1]
   1166c:	bl	11194 <fputs_unlocked@plt>
   11670:	movw	r1, #14645	; 0x3935
   11674:	movt	r1, #4
   11678:	str	r0, [sp, #32]
   1167c:	mov	r0, r1
   11680:	bl	11380 <gettext@plt>
   11684:	movw	r1, #24972	; 0x618c
   11688:	movt	r1, #5
   1168c:	ldr	r1, [r1]
   11690:	bl	11194 <fputs_unlocked@plt>
   11694:	movw	r1, #14919	; 0x3a47
   11698:	movt	r1, #4
   1169c:	str	r0, [sp, #28]
   116a0:	mov	r0, r1
   116a4:	bl	11380 <gettext@plt>
   116a8:	movw	r1, #24972	; 0x618c
   116ac:	movt	r1, #5
   116b0:	ldr	r1, [r1]
   116b4:	bl	11194 <fputs_unlocked@plt>
   116b8:	movw	r1, #15209	; 0x3b69
   116bc:	movt	r1, #4
   116c0:	str	r0, [sp, #24]
   116c4:	mov	r0, r1
   116c8:	bl	11380 <gettext@plt>
   116cc:	movw	r1, #24972	; 0x618c
   116d0:	movt	r1, #5
   116d4:	ldr	r1, [r1]
   116d8:	bl	11194 <fputs_unlocked@plt>
   116dc:	movw	r1, #15322	; 0x3bda
   116e0:	movt	r1, #4
   116e4:	str	r0, [sp, #20]
   116e8:	mov	r0, r1
   116ec:	bl	11380 <gettext@plt>
   116f0:	movw	r1, #24972	; 0x618c
   116f4:	movt	r1, #5
   116f8:	ldr	r1, [r1]
   116fc:	bl	11194 <fputs_unlocked@plt>
   11700:	movw	r1, #15509	; 0x3c95
   11704:	movt	r1, #4
   11708:	str	r0, [sp, #16]
   1170c:	mov	r0, r1
   11710:	bl	11380 <gettext@plt>
   11714:	movw	r1, #24972	; 0x618c
   11718:	movt	r1, #5
   1171c:	ldr	r1, [r1]
   11720:	bl	11194 <fputs_unlocked@plt>
   11724:	movw	r1, #15819	; 0x3dcb
   11728:	movt	r1, #4
   1172c:	str	r0, [sp, #12]
   11730:	mov	r0, r1
   11734:	bl	11380 <gettext@plt>
   11738:	movw	r1, #24972	; 0x618c
   1173c:	movt	r1, #5
   11740:	ldr	r1, [r1]
   11744:	bl	11194 <fputs_unlocked@plt>
   11748:	movw	r1, #16020	; 0x3e94
   1174c:	movt	r1, #4
   11750:	str	r0, [sp, #8]
   11754:	mov	r0, r1
   11758:	bl	11380 <gettext@plt>
   1175c:	movw	r1, #24972	; 0x618c
   11760:	movt	r1, #5
   11764:	ldr	r1, [r1]
   11768:	bl	11194 <fputs_unlocked@plt>
   1176c:	movw	r1, #16312	; 0x3fb8
   11770:	movt	r1, #4
   11774:	str	r0, [sp, #4]
   11778:	mov	r0, r1
   1177c:	bl	11380 <gettext@plt>
   11780:	movw	r1, #24972	; 0x618c
   11784:	movt	r1, #5
   11788:	ldr	r1, [r1]
   1178c:	bl	11194 <fputs_unlocked@plt>
   11790:	movw	r1, #16468	; 0x4054
   11794:	movt	r1, #4
   11798:	str	r0, [sp]
   1179c:	mov	r0, r1
   117a0:	bl	117ac <__assert_fail@plt+0x318>
   117a4:	ldr	r0, [fp, #-4]
   117a8:	bl	11374 <exit@plt>
   117ac:	push	{fp, lr}
   117b0:	mov	fp, sp
   117b4:	sub	sp, sp, #96	; 0x60
   117b8:	add	r1, sp, #36	; 0x24
   117bc:	movw	r2, #17316	; 0x43a4
   117c0:	movt	r2, #4
   117c4:	str	r0, [fp, #-4]
   117c8:	mov	r0, r1
   117cc:	str	r1, [sp, #20]
   117d0:	mov	r1, r2
   117d4:	movw	r2, #56	; 0x38
   117d8:	bl	11248 <memcpy@plt>
   117dc:	ldr	r0, [fp, #-4]
   117e0:	str	r0, [sp, #32]
   117e4:	ldr	r0, [sp, #20]
   117e8:	str	r0, [sp, #28]
   117ec:	ldr	r0, [sp, #28]
   117f0:	ldr	r0, [r0]
   117f4:	movw	r1, #0
   117f8:	cmp	r0, r1
   117fc:	movw	r0, #0
   11800:	str	r0, [sp, #16]
   11804:	beq	11830 <__assert_fail@plt+0x39c>
   11808:	ldr	r0, [fp, #-4]
   1180c:	ldr	r1, [sp, #28]
   11810:	ldr	r1, [r1]
   11814:	bl	111d0 <strcmp@plt>
   11818:	cmp	r0, #0
   1181c:	movw	r0, #0
   11820:	moveq	r0, #1
   11824:	mvn	r1, #0
   11828:	eor	r0, r0, r1
   1182c:	str	r0, [sp, #16]
   11830:	ldr	r0, [sp, #16]
   11834:	tst	r0, #1
   11838:	beq	1184c <__assert_fail@plt+0x3b8>
   1183c:	ldr	r0, [sp, #28]
   11840:	add	r0, r0, #8
   11844:	str	r0, [sp, #28]
   11848:	b	117ec <__assert_fail@plt+0x358>
   1184c:	ldr	r0, [sp, #28]
   11850:	ldr	r0, [r0, #4]
   11854:	movw	r1, #0
   11858:	cmp	r0, r1
   1185c:	beq	1186c <__assert_fail@plt+0x3d8>
   11860:	ldr	r0, [sp, #28]
   11864:	ldr	r0, [r0, #4]
   11868:	str	r0, [sp, #32]
   1186c:	movw	r0, #16716	; 0x414c
   11870:	movt	r0, #4
   11874:	bl	11380 <gettext@plt>
   11878:	movw	r1, #16497	; 0x4071
   1187c:	movt	r1, #4
   11880:	movw	r2, #16739	; 0x4163
   11884:	movt	r2, #4
   11888:	bl	111e8 <printf@plt>
   1188c:	movw	r1, #5
   11890:	str	r0, [sp, #12]
   11894:	mov	r0, r1
   11898:	movw	r1, #0
   1189c:	bl	1141c <setlocale@plt>
   118a0:	str	r0, [sp, #24]
   118a4:	ldr	r0, [sp, #24]
   118a8:	movw	r1, #0
   118ac:	cmp	r0, r1
   118b0:	beq	118f0 <__assert_fail@plt+0x45c>
   118b4:	ldr	r0, [sp, #24]
   118b8:	movw	r1, #16779	; 0x418b
   118bc:	movt	r1, #4
   118c0:	movw	r2, #3
   118c4:	bl	11470 <strncmp@plt>
   118c8:	cmp	r0, #0
   118cc:	beq	118f0 <__assert_fail@plt+0x45c>
   118d0:	movw	r0, #16783	; 0x418f
   118d4:	movt	r0, #4
   118d8:	bl	11380 <gettext@plt>
   118dc:	movw	lr, #24972	; 0x618c
   118e0:	movt	lr, #5
   118e4:	ldr	r1, [lr]
   118e8:	bl	11194 <fputs_unlocked@plt>
   118ec:	str	r0, [sp, #8]
   118f0:	movw	r0, #16854	; 0x41d6
   118f4:	movt	r0, #4
   118f8:	bl	11380 <gettext@plt>
   118fc:	ldr	r2, [fp, #-4]
   11900:	movw	r1, #16739	; 0x4163
   11904:	movt	r1, #4
   11908:	bl	111e8 <printf@plt>
   1190c:	movw	r1, #16881	; 0x41f1
   11910:	movt	r1, #4
   11914:	str	r0, [sp, #4]
   11918:	mov	r0, r1
   1191c:	bl	11380 <gettext@plt>
   11920:	ldr	r1, [sp, #32]
   11924:	ldr	r2, [sp, #32]
   11928:	ldr	lr, [fp, #-4]
   1192c:	cmp	r2, lr
   11930:	movw	r2, #0
   11934:	moveq	r2, #1
   11938:	tst	r2, #1
   1193c:	movw	r2, #16931	; 0x4223
   11940:	movt	r2, #4
   11944:	movw	lr, #16649	; 0x4109
   11948:	movt	lr, #4
   1194c:	movne	r2, lr
   11950:	bl	111e8 <printf@plt>
   11954:	str	r0, [sp]
   11958:	mov	sp, fp
   1195c:	pop	{fp, pc}
   11960:	push	{fp, lr}
   11964:	mov	fp, sp
   11968:	sub	sp, sp, #72	; 0x48
   1196c:	movw	r2, #0
   11970:	str	r2, [fp, #-4]
   11974:	str	r0, [fp, #-8]
   11978:	str	r1, [fp, #-12]
   1197c:	ldr	r0, [fp, #-12]
   11980:	ldr	r0, [r0]
   11984:	bl	21220 <__assert_fail@plt+0xfd8c>
   11988:	movw	r0, #6
   1198c:	movw	r1, #16931	; 0x4223
   11990:	movt	r1, #4
   11994:	bl	1141c <setlocale@plt>
   11998:	movw	r1, #16501	; 0x4075
   1199c:	movt	r1, #4
   119a0:	str	r0, [fp, #-24]	; 0xffffffe8
   119a4:	mov	r0, r1
   119a8:	movw	r1, #16473	; 0x4059
   119ac:	movt	r1, #4
   119b0:	bl	1144c <bindtextdomain@plt>
   119b4:	movw	r1, #16501	; 0x4075
   119b8:	movt	r1, #4
   119bc:	str	r0, [fp, #-28]	; 0xffffffe4
   119c0:	mov	r0, r1
   119c4:	bl	1129c <textdomain@plt>
   119c8:	movw	r1, #3
   119cc:	str	r0, [fp, #-32]	; 0xffffffe0
   119d0:	mov	r0, r1
   119d4:	bl	11b70 <__assert_fail@plt+0x6dc>
   119d8:	movw	r0, #14212	; 0x3784
   119dc:	movt	r0, #1
   119e0:	bl	43860 <__assert_fail@plt+0x323cc>
   119e4:	ldr	r1, [fp, #-8]
   119e8:	ldr	r2, [fp, #-12]
   119ec:	str	r0, [sp, #36]	; 0x24
   119f0:	mov	r0, r1
   119f4:	mov	r1, r2
   119f8:	movw	r2, #16468	; 0x4054
   119fc:	movt	r2, #4
   11a00:	movw	r3, #16497	; 0x4071
   11a04:	movt	r3, #4
   11a08:	movw	lr, #16511	; 0x407f
   11a0c:	movt	lr, #4
   11a10:	str	lr, [sp]
   11a14:	movw	lr, #5520	; 0x1590
   11a18:	movt	lr, #1
   11a1c:	str	lr, [sp, #4]
   11a20:	movw	lr, #16526	; 0x408e
   11a24:	movt	lr, #4
   11a28:	str	lr, [sp, #8]
   11a2c:	movw	lr, #16538	; 0x409a
   11a30:	movt	lr, #4
   11a34:	str	lr, [sp, #12]
   11a38:	movw	lr, #16553	; 0x40a9
   11a3c:	movt	lr, #4
   11a40:	str	lr, [sp, #16]
   11a44:	movw	lr, #0
   11a48:	str	lr, [sp, #20]
   11a4c:	bl	20a70 <__assert_fail@plt+0xf5dc>
   11a50:	ldr	r0, [fp, #-8]
   11a54:	str	r0, [fp, #-20]	; 0xffffffec
   11a58:	ldr	r0, [fp, #-20]	; 0xffffffec
   11a5c:	movw	r1, #1
   11a60:	cmp	r1, r0
   11a64:	bcs	11aa0 <__assert_fail@plt+0x60c>
   11a68:	ldr	r0, [fp, #-12]
   11a6c:	ldr	r0, [r0, #4]
   11a70:	movw	r1, #16565	; 0x40b5
   11a74:	movt	r1, #4
   11a78:	bl	111d0 <strcmp@plt>
   11a7c:	cmp	r0, #0
   11a80:	bne	11aa0 <__assert_fail@plt+0x60c>
   11a84:	ldr	r0, [fp, #-20]	; 0xffffffec
   11a88:	mvn	r1, #0
   11a8c:	add	r0, r0, r1
   11a90:	str	r0, [fp, #-20]	; 0xffffffec
   11a94:	ldr	r0, [fp, #-12]
   11a98:	add	r0, r0, #4
   11a9c:	str	r0, [fp, #-12]
   11aa0:	ldr	r0, [fp, #-20]	; 0xffffffec
   11aa4:	cmp	r0, #1
   11aa8:	bhi	11ad8 <__assert_fail@plt+0x644>
   11aac:	movw	r0, #16568	; 0x40b8
   11ab0:	movt	r0, #4
   11ab4:	bl	11380 <gettext@plt>
   11ab8:	movw	lr, #0
   11abc:	str	r0, [sp, #32]
   11ac0:	mov	r0, lr
   11ac4:	mov	r1, lr
   11ac8:	ldr	r2, [sp, #32]
   11acc:	bl	11308 <error@plt>
   11ad0:	movw	r0, #2
   11ad4:	bl	11590 <__assert_fail@plt+0xfc>
   11ad8:	ldr	r0, [fp, #-12]
   11adc:	add	r0, r0, #4
   11ae0:	movw	r1, #24984	; 0x6198
   11ae4:	movt	r1, #5
   11ae8:	str	r0, [r1]
   11aec:	movw	r0, #1
   11af0:	and	r0, r0, #1
   11af4:	bl	11b9c <__assert_fail@plt+0x708>
   11af8:	str	r0, [fp, #-16]
   11afc:	bl	11c68 <__assert_fail@plt+0x7d4>
   11b00:	tst	r0, #1
   11b04:	bne	11b54 <__assert_fail@plt+0x6c0>
   11b08:	movw	r0, #16584	; 0x40c8
   11b0c:	movt	r0, #4
   11b10:	bl	11380 <gettext@plt>
   11b14:	movw	lr, #24984	; 0x6198
   11b18:	movt	lr, #5
   11b1c:	ldr	lr, [lr]
   11b20:	ldr	r2, [lr]
   11b24:	movw	lr, #0
   11b28:	str	r0, [sp, #28]
   11b2c:	mov	r0, lr
   11b30:	movw	r1, #8
   11b34:	bl	23410 <__assert_fail@plt+0x11f7c>
   11b38:	movw	r1, #2
   11b3c:	str	r0, [sp, #24]
   11b40:	mov	r0, r1
   11b44:	movw	r1, #0
   11b48:	ldr	r2, [sp, #28]
   11b4c:	ldr	r3, [sp, #24]
   11b50:	bl	11308 <error@plt>
   11b54:	ldr	r0, [fp, #-16]
   11b58:	bl	11c90 <__assert_fail@plt+0x7fc>
   11b5c:	ldr	r0, [fp, #-16]
   11b60:	bl	11d28 <__assert_fail@plt+0x894>
   11b64:	and	r0, r0, #1
   11b68:	mov	sp, fp
   11b6c:	pop	{fp, pc}
   11b70:	sub	sp, sp, #4
   11b74:	str	r0, [sp]
   11b78:	ldr	r0, [sp]
   11b7c:	cmp	r0, #1
   11b80:	beq	11b94 <__assert_fail@plt+0x700>
   11b84:	ldr	r0, [sp]
   11b88:	movw	r1, #24868	; 0x6124
   11b8c:	movt	r1, #5
   11b90:	str	r0, [r1]
   11b94:	add	sp, sp, #4
   11b98:	bx	lr
   11b9c:	push	{fp, lr}
   11ba0:	mov	fp, sp
   11ba4:	sub	sp, sp, #16
   11ba8:	and	r0, r0, #1
   11bac:	strb	r0, [fp, #-1]
   11bb0:	ldrb	r0, [fp, #-1]
   11bb4:	and	r0, r0, #1
   11bb8:	bl	11e34 <__assert_fail@plt+0x9a0>
   11bbc:	str	r0, [sp, #8]
   11bc0:	movw	r0, #16932	; 0x4224
   11bc4:	movt	r0, #4
   11bc8:	bl	11f00 <__assert_fail@plt+0xa6c>
   11bcc:	tst	r0, #1
   11bd0:	beq	11c58 <__assert_fail@plt+0x7c4>
   11bd4:	ldrb	r0, [fp, #-1]
   11bd8:	tst	r0, #1
   11bdc:	movw	r0, #0
   11be0:	str	r0, [sp]
   11be4:	beq	11bf4 <__assert_fail@plt+0x760>
   11be8:	ldr	r0, [sp, #8]
   11bec:	bl	11d28 <__assert_fail@plt+0x894>
   11bf0:	str	r0, [sp]
   11bf4:	ldr	r0, [sp]
   11bf8:	and	r0, r0, #1
   11bfc:	bl	11e34 <__assert_fail@plt+0x9a0>
   11c00:	str	r0, [sp, #4]
   11c04:	ldr	r0, [sp, #8]
   11c08:	bl	11d28 <__assert_fail@plt+0x894>
   11c0c:	tst	r0, #1
   11c10:	beq	11c4c <__assert_fail@plt+0x7b8>
   11c14:	ldr	r0, [sp, #8]
   11c18:	bl	11fa8 <__assert_fail@plt+0xb14>
   11c1c:	ldr	r0, [sp, #4]
   11c20:	str	r0, [sp, #8]
   11c24:	ldr	r0, [sp, #8]
   11c28:	bl	11d28 <__assert_fail@plt+0x894>
   11c2c:	tst	r0, #1
   11c30:	beq	11c48 <__assert_fail@plt+0x7b4>
   11c34:	ldr	r0, [sp, #8]
   11c38:	bl	11fa8 <__assert_fail@plt+0xb14>
   11c3c:	movw	r0, #0
   11c40:	bl	11ff4 <__assert_fail@plt+0xb60>
   11c44:	str	r0, [sp, #8]
   11c48:	b	11c54 <__assert_fail@plt+0x7c0>
   11c4c:	ldr	r0, [sp, #4]
   11c50:	bl	11fa8 <__assert_fail@plt+0xb14>
   11c54:	b	11c64 <__assert_fail@plt+0x7d0>
   11c58:	ldr	r0, [sp, #8]
   11c5c:	mov	sp, fp
   11c60:	pop	{fp, pc}
   11c64:	b	11bc0 <__assert_fail@plt+0x72c>
   11c68:	movw	r0, #24984	; 0x6198
   11c6c:	movt	r0, #5
   11c70:	ldr	r0, [r0]
   11c74:	ldr	r0, [r0]
   11c78:	movw	r1, #0
   11c7c:	cmp	r0, r1
   11c80:	movw	r0, #0
   11c84:	moveq	r0, #1
   11c88:	and	r0, r0, #1
   11c8c:	bx	lr
   11c90:	push	{fp, lr}
   11c94:	mov	fp, sp
   11c98:	sub	sp, sp, #24
   11c9c:	str	r0, [fp, #-4]
   11ca0:	ldr	r0, [fp, #-4]
   11ca4:	ldr	r0, [r0]
   11ca8:	cmp	r0, #0
   11cac:	str	r0, [fp, #-8]
   11cb0:	beq	11cc8 <__assert_fail@plt+0x834>
   11cb4:	b	11cb8 <__assert_fail@plt+0x824>
   11cb8:	ldr	r0, [fp, #-8]
   11cbc:	cmp	r0, #1
   11cc0:	beq	11d08 <__assert_fail@plt+0x874>
   11cc4:	b	11d1c <__assert_fail@plt+0x888>
   11cc8:	movw	r0, #24972	; 0x618c
   11ccc:	movt	r0, #5
   11cd0:	ldr	r0, [r0]
   11cd4:	ldr	r1, [fp, #-4]
   11cd8:	add	r1, r1, #4
   11cdc:	movw	r2, #10
   11ce0:	str	r1, [sp, #12]
   11ce4:	mov	r1, r2
   11ce8:	ldr	r2, [sp, #12]
   11cec:	bl	1e810 <__assert_fail@plt+0xd37c>
   11cf0:	movw	r1, #10
   11cf4:	str	r0, [sp, #8]
   11cf8:	mov	r0, r1
   11cfc:	bl	11488 <putchar_unlocked@plt>
   11d00:	str	r0, [sp, #4]
   11d04:	b	11d20 <__assert_fail@plt+0x88c>
   11d08:	ldr	r0, [fp, #-4]
   11d0c:	ldr	r0, [r0, #4]
   11d10:	bl	11320 <puts@plt>
   11d14:	str	r0, [sp]
   11d18:	b	11d20 <__assert_fail@plt+0x88c>
   11d1c:	bl	1147c <abort@plt>
   11d20:	mov	sp, fp
   11d24:	pop	{fp, pc}
   11d28:	push	{fp, lr}
   11d2c:	mov	fp, sp
   11d30:	sub	sp, sp, #16
   11d34:	str	r0, [sp, #8]
   11d38:	ldr	r0, [sp, #8]
   11d3c:	ldr	r0, [r0]
   11d40:	cmp	r0, #0
   11d44:	str	r0, [sp]
   11d48:	beq	11d60 <__assert_fail@plt+0x8cc>
   11d4c:	b	11d50 <__assert_fail@plt+0x8bc>
   11d50:	ldr	r0, [sp]
   11d54:	cmp	r0, #1
   11d58:	beq	11d84 <__assert_fail@plt+0x8f0>
   11d5c:	b	11e20 <__assert_fail@plt+0x98c>
   11d60:	ldr	r0, [sp, #8]
   11d64:	add	r0, r0, #4
   11d68:	bl	172ac <__assert_fail@plt+0x5e18>
   11d6c:	cmp	r0, #0
   11d70:	movw	r0, #0
   11d74:	moveq	r0, #1
   11d78:	and	r0, r0, #1
   11d7c:	strb	r0, [fp, #-1]
   11d80:	b	11e24 <__assert_fail@plt+0x990>
   11d84:	ldr	r0, [sp, #8]
   11d88:	ldr	r0, [r0, #4]
   11d8c:	str	r0, [sp, #4]
   11d90:	ldr	r0, [sp, #4]
   11d94:	ldrb	r0, [r0]
   11d98:	cmp	r0, #0
   11d9c:	bne	11db0 <__assert_fail@plt+0x91c>
   11da0:	movw	r0, #1
   11da4:	and	r0, r0, #1
   11da8:	strb	r0, [fp, #-1]
   11dac:	b	11e24 <__assert_fail@plt+0x990>
   11db0:	ldr	r0, [sp, #4]
   11db4:	ldrb	r0, [r0]
   11db8:	cmp	r0, #45	; 0x2d
   11dbc:	movw	r0, #0
   11dc0:	moveq	r0, #1
   11dc4:	and	r0, r0, #1
   11dc8:	ldr	r1, [sp, #4]
   11dcc:	add	r0, r1, r0
   11dd0:	str	r0, [sp, #4]
   11dd4:	ldr	r0, [sp, #4]
   11dd8:	ldrb	r0, [r0]
   11ddc:	cmp	r0, #48	; 0x30
   11de0:	beq	11df4 <__assert_fail@plt+0x960>
   11de4:	movw	r0, #0
   11de8:	and	r0, r0, #1
   11dec:	strb	r0, [fp, #-1]
   11df0:	b	11e24 <__assert_fail@plt+0x990>
   11df4:	b	11df8 <__assert_fail@plt+0x964>
   11df8:	ldr	r0, [sp, #4]
   11dfc:	add	r1, r0, #1
   11e00:	str	r1, [sp, #4]
   11e04:	ldrsb	r0, [r0, #1]
   11e08:	cmp	r0, #0
   11e0c:	bne	11dd4 <__assert_fail@plt+0x940>
   11e10:	movw	r0, #1
   11e14:	and	r0, r0, #1
   11e18:	strb	r0, [fp, #-1]
   11e1c:	b	11e24 <__assert_fail@plt+0x990>
   11e20:	bl	1147c <abort@plt>
   11e24:	ldrb	r0, [fp, #-1]
   11e28:	and	r0, r0, #1
   11e2c:	mov	sp, fp
   11e30:	pop	{fp, pc}
   11e34:	push	{fp, lr}
   11e38:	mov	fp, sp
   11e3c:	sub	sp, sp, #16
   11e40:	and	r0, r0, #1
   11e44:	strb	r0, [fp, #-1]
   11e48:	ldrb	r0, [fp, #-1]
   11e4c:	and	r0, r0, #1
   11e50:	bl	12038 <__assert_fail@plt+0xba4>
   11e54:	str	r0, [sp, #8]
   11e58:	movw	r0, #16934	; 0x4226
   11e5c:	movt	r0, #4
   11e60:	bl	11f00 <__assert_fail@plt+0xa6c>
   11e64:	tst	r0, #1
   11e68:	beq	11ef0 <__assert_fail@plt+0xa5c>
   11e6c:	ldrb	r0, [fp, #-1]
   11e70:	tst	r0, #1
   11e74:	movw	r0, #0
   11e78:	str	r0, [sp]
   11e7c:	beq	11e94 <__assert_fail@plt+0xa00>
   11e80:	ldr	r0, [sp, #8]
   11e84:	bl	11d28 <__assert_fail@plt+0x894>
   11e88:	mvn	lr, #0
   11e8c:	eor	r0, r0, lr
   11e90:	str	r0, [sp]
   11e94:	ldr	r0, [sp]
   11e98:	and	r0, r0, #1
   11e9c:	bl	12038 <__assert_fail@plt+0xba4>
   11ea0:	str	r0, [sp, #4]
   11ea4:	ldr	r0, [sp, #8]
   11ea8:	bl	11d28 <__assert_fail@plt+0x894>
   11eac:	tst	r0, #1
   11eb0:	bne	11ec4 <__assert_fail@plt+0xa30>
   11eb4:	ldr	r0, [sp, #4]
   11eb8:	bl	11d28 <__assert_fail@plt+0x894>
   11ebc:	tst	r0, #1
   11ec0:	beq	11ee4 <__assert_fail@plt+0xa50>
   11ec4:	ldr	r0, [sp, #8]
   11ec8:	bl	11fa8 <__assert_fail@plt+0xb14>
   11ecc:	ldr	r0, [sp, #4]
   11ed0:	bl	11fa8 <__assert_fail@plt+0xb14>
   11ed4:	movw	r0, #0
   11ed8:	bl	11ff4 <__assert_fail@plt+0xb60>
   11edc:	str	r0, [sp, #8]
   11ee0:	b	11eec <__assert_fail@plt+0xa58>
   11ee4:	ldr	r0, [sp, #4]
   11ee8:	bl	11fa8 <__assert_fail@plt+0xb14>
   11eec:	b	11efc <__assert_fail@plt+0xa68>
   11ef0:	ldr	r0, [sp, #8]
   11ef4:	mov	sp, fp
   11ef8:	pop	{fp, pc}
   11efc:	b	11e58 <__assert_fail@plt+0x9c4>
   11f00:	push	{fp, lr}
   11f04:	mov	fp, sp
   11f08:	sub	sp, sp, #16
   11f0c:	str	r0, [sp, #8]
   11f10:	movw	r0, #24984	; 0x6198
   11f14:	movt	r0, #5
   11f18:	ldr	r0, [r0]
   11f1c:	ldr	r0, [r0]
   11f20:	movw	r1, #0
   11f24:	cmp	r0, r1
   11f28:	bne	11f3c <__assert_fail@plt+0xaa8>
   11f2c:	movw	r0, #0
   11f30:	and	r0, r0, #1
   11f34:	strb	r0, [fp, #-1]
   11f38:	b	11f98 <__assert_fail@plt+0xb04>
   11f3c:	movw	r0, #24984	; 0x6198
   11f40:	movt	r0, #5
   11f44:	ldr	r1, [r0]
   11f48:	ldr	r1, [r1]
   11f4c:	ldr	r2, [sp, #8]
   11f50:	str	r0, [sp]
   11f54:	mov	r0, r1
   11f58:	mov	r1, r2
   11f5c:	bl	111d0 <strcmp@plt>
   11f60:	clz	r0, r0
   11f64:	lsr	r0, r0, #5
   11f68:	strb	r0, [sp, #7]
   11f6c:	ldrb	r0, [sp, #7]
   11f70:	and	r0, r0, #1
   11f74:	ldr	r1, [sp]
   11f78:	ldr	r2, [r1]
   11f7c:	add	r0, r2, r0, lsl #2
   11f80:	movw	r2, #24984	; 0x6198
   11f84:	movt	r2, #5
   11f88:	str	r0, [r2]
   11f8c:	ldrb	r0, [sp, #7]
   11f90:	and	r0, r0, #1
   11f94:	strb	r0, [fp, #-1]
   11f98:	ldrb	r0, [fp, #-1]
   11f9c:	and	r0, r0, #1
   11fa0:	mov	sp, fp
   11fa4:	pop	{fp, pc}
   11fa8:	push	{fp, lr}
   11fac:	mov	fp, sp
   11fb0:	sub	sp, sp, #8
   11fb4:	str	r0, [sp, #4]
   11fb8:	ldr	r0, [sp, #4]
   11fbc:	ldr	r0, [r0]
   11fc0:	cmp	r0, #1
   11fc4:	bne	11fd8 <__assert_fail@plt+0xb44>
   11fc8:	ldr	r0, [sp, #4]
   11fcc:	ldr	r0, [r0, #4]
   11fd0:	bl	138a4 <__assert_fail@plt+0x2410>
   11fd4:	b	11fe4 <__assert_fail@plt+0xb50>
   11fd8:	ldr	r0, [sp, #4]
   11fdc:	add	r0, r0, #4
   11fe0:	bl	15f6c <__assert_fail@plt+0x4ad8>
   11fe4:	ldr	r0, [sp, #4]
   11fe8:	bl	138a4 <__assert_fail@plt+0x2410>
   11fec:	mov	sp, fp
   11ff0:	pop	{fp, pc}
   11ff4:	push	{fp, lr}
   11ff8:	mov	fp, sp
   11ffc:	sub	sp, sp, #8
   12000:	str	r0, [sp, #4]
   12004:	movw	r0, #16
   12008:	bl	3cd10 <__assert_fail@plt+0x2b87c>
   1200c:	str	r0, [sp]
   12010:	ldr	r0, [sp]
   12014:	movw	lr, #0
   12018:	str	lr, [r0]
   1201c:	ldr	r0, [sp]
   12020:	add	r0, r0, #4
   12024:	ldr	r1, [sp, #4]
   12028:	bl	162fc <__assert_fail@plt+0x4e68>
   1202c:	ldr	r0, [sp]
   12030:	mov	sp, fp
   12034:	pop	{fp, pc}
   12038:	push	{fp, lr}
   1203c:	mov	fp, sp
   12040:	sub	sp, sp, #56	; 0x38
   12044:	and	r0, r0, #1
   12048:	strb	r0, [fp, #-1]
   1204c:	ldrb	r0, [fp, #-1]
   12050:	and	r0, r0, #1
   12054:	bl	123c4 <__assert_fail@plt+0xf30>
   12058:	str	r0, [fp, #-8]
   1205c:	movw	r0, #0
   12060:	strb	r0, [fp, #-17]	; 0xffffffef
   12064:	movw	r0, #16936	; 0x4228
   12068:	movt	r0, #4
   1206c:	bl	11f00 <__assert_fail@plt+0xa6c>
   12070:	tst	r0, #1
   12074:	beq	12084 <__assert_fail@plt+0xbf0>
   12078:	movw	r0, #0
   1207c:	str	r0, [fp, #-16]
   12080:	b	12158 <__assert_fail@plt+0xcc4>
   12084:	movw	r0, #16938	; 0x422a
   12088:	movt	r0, #4
   1208c:	bl	11f00 <__assert_fail@plt+0xa6c>
   12090:	tst	r0, #1
   12094:	beq	120a4 <__assert_fail@plt+0xc10>
   12098:	movw	r0, #1
   1209c:	str	r0, [fp, #-16]
   120a0:	b	12154 <__assert_fail@plt+0xcc0>
   120a4:	movw	r0, #16945	; 0x4231
   120a8:	movt	r0, #4
   120ac:	bl	11f00 <__assert_fail@plt+0xa6c>
   120b0:	tst	r0, #1
   120b4:	bne	120cc <__assert_fail@plt+0xc38>
   120b8:	movw	r0, #16941	; 0x422d
   120bc:	movt	r0, #4
   120c0:	bl	11f00 <__assert_fail@plt+0xa6c>
   120c4:	tst	r0, #1
   120c8:	beq	120d8 <__assert_fail@plt+0xc44>
   120cc:	movw	r0, #2
   120d0:	str	r0, [fp, #-16]
   120d4:	b	12150 <__assert_fail@plt+0xcbc>
   120d8:	movw	r0, #16944	; 0x4230
   120dc:	movt	r0, #4
   120e0:	bl	11f00 <__assert_fail@plt+0xa6c>
   120e4:	tst	r0, #1
   120e8:	beq	120f8 <__assert_fail@plt+0xc64>
   120ec:	movw	r0, #3
   120f0:	str	r0, [fp, #-16]
   120f4:	b	1214c <__assert_fail@plt+0xcb8>
   120f8:	movw	r0, #16947	; 0x4233
   120fc:	movt	r0, #4
   12100:	bl	11f00 <__assert_fail@plt+0xa6c>
   12104:	tst	r0, #1
   12108:	beq	12118 <__assert_fail@plt+0xc84>
   1210c:	movw	r0, #4
   12110:	str	r0, [fp, #-16]
   12114:	b	12148 <__assert_fail@plt+0xcb4>
   12118:	movw	r0, #16950	; 0x4236
   1211c:	movt	r0, #4
   12120:	bl	11f00 <__assert_fail@plt+0xa6c>
   12124:	tst	r0, #1
   12128:	beq	12138 <__assert_fail@plt+0xca4>
   1212c:	movw	r0, #5
   12130:	str	r0, [fp, #-16]
   12134:	b	12144 <__assert_fail@plt+0xcb0>
   12138:	ldr	r0, [fp, #-8]
   1213c:	mov	sp, fp
   12140:	pop	{fp, pc}
   12144:	b	12148 <__assert_fail@plt+0xcb4>
   12148:	b	1214c <__assert_fail@plt+0xcb8>
   1214c:	b	12150 <__assert_fail@plt+0xcbc>
   12150:	b	12154 <__assert_fail@plt+0xcc0>
   12154:	b	12158 <__assert_fail@plt+0xcc4>
   12158:	ldrb	r0, [fp, #-1]
   1215c:	and	r0, r0, #1
   12160:	bl	123c4 <__assert_fail@plt+0xf30>
   12164:	str	r0, [fp, #-12]
   12168:	ldrb	r0, [fp, #-1]
   1216c:	tst	r0, #1
   12170:	beq	123a0 <__assert_fail@plt+0xf0c>
   12174:	ldr	r0, [fp, #-8]
   12178:	bl	124fc <__assert_fail@plt+0x1068>
   1217c:	ldr	r0, [fp, #-12]
   12180:	bl	124fc <__assert_fail@plt+0x1068>
   12184:	ldr	r0, [fp, #-8]
   12188:	ldr	r0, [r0, #4]
   1218c:	bl	12590 <__assert_fail@plt+0x10fc>
   12190:	tst	r0, #1
   12194:	beq	121c8 <__assert_fail@plt+0xd34>
   12198:	ldr	r0, [fp, #-12]
   1219c:	ldr	r0, [r0, #4]
   121a0:	bl	12590 <__assert_fail@plt+0x10fc>
   121a4:	tst	r0, #1
   121a8:	beq	121c8 <__assert_fail@plt+0xd34>
   121ac:	ldr	r0, [fp, #-8]
   121b0:	ldr	r0, [r0, #4]
   121b4:	ldr	r1, [fp, #-12]
   121b8:	ldr	r1, [r1, #4]
   121bc:	bl	3b9c4 <__assert_fail@plt+0x2a530>
   121c0:	str	r0, [fp, #-24]	; 0xffffffe8
   121c4:	b	122b8 <__assert_fail@plt+0xe24>
   121c8:	bl	113b0 <__errno_location@plt>
   121cc:	movw	lr, #0
   121d0:	str	lr, [r0]
   121d4:	ldr	r0, [fp, #-8]
   121d8:	ldr	r0, [r0, #4]
   121dc:	ldr	lr, [fp, #-12]
   121e0:	ldr	r1, [lr, #4]
   121e4:	bl	11314 <strcoll@plt>
   121e8:	str	r0, [fp, #-24]	; 0xffffffe8
   121ec:	bl	113b0 <__errno_location@plt>
   121f0:	ldr	r0, [r0]
   121f4:	cmp	r0, #0
   121f8:	beq	122b4 <__assert_fail@plt+0xe20>
   121fc:	bl	113b0 <__errno_location@plt>
   12200:	ldr	r1, [r0]
   12204:	movw	r0, #16952	; 0x4238
   12208:	movt	r0, #4
   1220c:	str	r1, [sp, #28]
   12210:	bl	11380 <gettext@plt>
   12214:	movw	r1, #0
   12218:	str	r0, [sp, #24]
   1221c:	mov	r0, r1
   12220:	ldr	r1, [sp, #28]
   12224:	ldr	r2, [sp, #24]
   12228:	bl	11308 <error@plt>
   1222c:	movw	r0, #16977	; 0x4251
   12230:	movt	r0, #4
   12234:	bl	11380 <gettext@plt>
   12238:	movw	r1, #0
   1223c:	str	r0, [sp, #20]
   12240:	mov	r0, r1
   12244:	ldr	r2, [sp, #20]
   12248:	bl	11308 <error@plt>
   1224c:	movw	r0, #17019	; 0x427b
   12250:	movt	r0, #4
   12254:	bl	11380 <gettext@plt>
   12258:	ldr	r1, [fp, #-8]
   1225c:	ldr	r2, [r1, #4]
   12260:	movw	r1, #0
   12264:	str	r0, [sp, #16]
   12268:	mov	r0, r1
   1226c:	movw	r1, #8
   12270:	bl	23410 <__assert_fail@plt+0x11f7c>
   12274:	ldr	r1, [fp, #-12]
   12278:	ldr	r2, [r1, #4]
   1227c:	movw	r1, #1
   12280:	str	r0, [sp, #12]
   12284:	mov	r0, r1
   12288:	movw	r1, #8
   1228c:	bl	23410 <__assert_fail@plt+0x11f7c>
   12290:	movw	r1, #2
   12294:	str	r0, [sp, #8]
   12298:	mov	r0, r1
   1229c:	movw	r1, #0
   122a0:	ldr	r2, [sp, #16]
   122a4:	ldr	r3, [sp, #12]
   122a8:	ldr	lr, [sp, #8]
   122ac:	str	lr, [sp]
   122b0:	bl	11308 <error@plt>
   122b4:	b	122b8 <__assert_fail@plt+0xe24>
   122b8:	ldr	r0, [fp, #-16]
   122bc:	cmp	r0, #5
   122c0:	str	r0, [sp, #4]
   122c4:	bhi	12398 <__assert_fail@plt+0xf04>
   122c8:	add	r0, pc, #8
   122cc:	ldr	r1, [sp, #4]
   122d0:	ldr	r0, [r0, r1, lsl #2]
   122d4:	mov	pc, r0
   122d8:	strdeq	r2, [r1], -r0
   122dc:	andeq	r2, r1, ip, lsl #6
   122e0:	andeq	r2, r1, r8, lsr #6
   122e4:	andeq	r2, r1, r4, asr #6
   122e8:	andeq	r2, r1, r0, ror #6
   122ec:	andeq	r2, r1, ip, ror r3
   122f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   122f4:	cmp	r0, #0
   122f8:	movw	r0, #0
   122fc:	movlt	r0, #1
   12300:	and	r0, r0, #1
   12304:	strb	r0, [fp, #-17]	; 0xffffffef
   12308:	b	1239c <__assert_fail@plt+0xf08>
   1230c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12310:	cmp	r0, #0
   12314:	movw	r0, #0
   12318:	movle	r0, #1
   1231c:	and	r0, r0, #1
   12320:	strb	r0, [fp, #-17]	; 0xffffffef
   12324:	b	1239c <__assert_fail@plt+0xf08>
   12328:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1232c:	cmp	r0, #0
   12330:	movw	r0, #0
   12334:	moveq	r0, #1
   12338:	and	r0, r0, #1
   1233c:	strb	r0, [fp, #-17]	; 0xffffffef
   12340:	b	1239c <__assert_fail@plt+0xf08>
   12344:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12348:	cmp	r0, #0
   1234c:	movw	r0, #0
   12350:	movne	r0, #1
   12354:	and	r0, r0, #1
   12358:	strb	r0, [fp, #-17]	; 0xffffffef
   1235c:	b	1239c <__assert_fail@plt+0xf08>
   12360:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12364:	cmp	r0, #0
   12368:	movw	r0, #0
   1236c:	movge	r0, #1
   12370:	and	r0, r0, #1
   12374:	strb	r0, [fp, #-17]	; 0xffffffef
   12378:	b	1239c <__assert_fail@plt+0xf08>
   1237c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12380:	cmp	r0, #0
   12384:	movw	r0, #0
   12388:	movgt	r0, #1
   1238c:	and	r0, r0, #1
   12390:	strb	r0, [fp, #-17]	; 0xffffffef
   12394:	b	1239c <__assert_fail@plt+0xf08>
   12398:	bl	1147c <abort@plt>
   1239c:	b	123a0 <__assert_fail@plt+0xf0c>
   123a0:	ldr	r0, [fp, #-8]
   123a4:	bl	11fa8 <__assert_fail@plt+0xb14>
   123a8:	ldr	r0, [fp, #-12]
   123ac:	bl	11fa8 <__assert_fail@plt+0xb14>
   123b0:	ldrb	r0, [fp, #-17]	; 0xffffffef
   123b4:	and	r0, r0, #1
   123b8:	bl	11ff4 <__assert_fail@plt+0xb60>
   123bc:	str	r0, [fp, #-8]
   123c0:	b	1205c <__assert_fail@plt+0xbc8>
   123c4:	push	{fp, lr}
   123c8:	mov	fp, sp
   123cc:	sub	sp, sp, #24
   123d0:	and	r0, r0, #1
   123d4:	strb	r0, [fp, #-1]
   123d8:	ldrb	r0, [fp, #-1]
   123dc:	and	r0, r0, #1
   123e0:	bl	12618 <__assert_fail@plt+0x1184>
   123e4:	str	r0, [fp, #-8]
   123e8:	movw	r0, #17055	; 0x429f
   123ec:	movt	r0, #4
   123f0:	bl	11f00 <__assert_fail@plt+0xa6c>
   123f4:	tst	r0, #1
   123f8:	beq	12408 <__assert_fail@plt+0xf74>
   123fc:	movw	r0, #0
   12400:	str	r0, [sp, #8]
   12404:	b	12438 <__assert_fail@plt+0xfa4>
   12408:	movw	r0, #16566	; 0x40b6
   1240c:	movt	r0, #4
   12410:	bl	11f00 <__assert_fail@plt+0xa6c>
   12414:	tst	r0, #1
   12418:	beq	12428 <__assert_fail@plt+0xf94>
   1241c:	movw	r0, #1
   12420:	str	r0, [sp, #8]
   12424:	b	12434 <__assert_fail@plt+0xfa0>
   12428:	ldr	r0, [fp, #-8]
   1242c:	mov	sp, fp
   12430:	pop	{fp, pc}
   12434:	b	12438 <__assert_fail@plt+0xfa4>
   12438:	ldrb	r0, [fp, #-1]
   1243c:	and	r0, r0, #1
   12440:	bl	12618 <__assert_fail@plt+0x1184>
   12444:	str	r0, [sp, #12]
   12448:	ldrb	r0, [fp, #-1]
   1244c:	tst	r0, #1
   12450:	beq	124f0 <__assert_fail@plt+0x105c>
   12454:	ldr	r0, [fp, #-8]
   12458:	bl	127dc <__assert_fail@plt+0x1348>
   1245c:	tst	r0, #1
   12460:	beq	12474 <__assert_fail@plt+0xfe0>
   12464:	ldr	r0, [sp, #12]
   12468:	bl	127dc <__assert_fail@plt+0x1348>
   1246c:	tst	r0, #1
   12470:	bne	12498 <__assert_fail@plt+0x1004>
   12474:	movw	r0, #17057	; 0x42a1
   12478:	movt	r0, #4
   1247c:	bl	11380 <gettext@plt>
   12480:	movw	lr, #2
   12484:	str	r0, [sp, #4]
   12488:	mov	r0, lr
   1248c:	movw	r1, #0
   12490:	ldr	r2, [sp, #4]
   12494:	bl	11308 <error@plt>
   12498:	ldr	r0, [sp, #8]
   1249c:	cmp	r0, #0
   124a0:	movw	r0, #0
   124a4:	moveq	r0, #1
   124a8:	tst	r0, #1
   124ac:	movw	r0, #31624	; 0x7b88
   124b0:	movt	r0, #1
   124b4:	movw	r1, #30400	; 0x76c0
   124b8:	movt	r1, #1
   124bc:	movne	r0, r1
   124c0:	ldr	r1, [fp, #-8]
   124c4:	add	r1, r1, #4
   124c8:	ldr	r2, [fp, #-8]
   124cc:	add	r2, r2, #4
   124d0:	ldr	r3, [sp, #12]
   124d4:	add	r3, r3, #4
   124d8:	str	r0, [sp]
   124dc:	mov	r0, r1
   124e0:	mov	r1, r2
   124e4:	mov	r2, r3
   124e8:	ldr	r3, [sp]
   124ec:	blx	r3
   124f0:	ldr	r0, [sp, #12]
   124f4:	bl	11fa8 <__assert_fail@plt+0xb14>
   124f8:	b	123e8 <__assert_fail@plt+0xf54>
   124fc:	push	{fp, lr}
   12500:	mov	fp, sp
   12504:	sub	sp, sp, #16
   12508:	str	r0, [fp, #-4]
   1250c:	ldr	r0, [fp, #-4]
   12510:	ldr	r0, [r0]
   12514:	cmp	r0, #0
   12518:	str	r0, [sp, #4]
   1251c:	beq	12534 <__assert_fail@plt+0x10a0>
   12520:	b	12524 <__assert_fail@plt+0x1090>
   12524:	ldr	r0, [sp, #4]
   12528:	cmp	r0, #1
   1252c:	beq	12580 <__assert_fail@plt+0x10ec>
   12530:	b	12584 <__assert_fail@plt+0x10f0>
   12534:	ldr	r0, [fp, #-4]
   12538:	add	r0, r0, #4
   1253c:	movw	r1, #0
   12540:	str	r0, [sp]
   12544:	mov	r0, r1
   12548:	movw	r1, #10
   1254c:	ldr	r2, [sp]
   12550:	bl	1debc <__assert_fail@plt+0xca28>
   12554:	str	r0, [sp, #8]
   12558:	ldr	r0, [fp, #-4]
   1255c:	add	r0, r0, #4
   12560:	bl	15f6c <__assert_fail@plt+0x4ad8>
   12564:	ldr	r0, [sp, #8]
   12568:	ldr	r1, [fp, #-4]
   1256c:	str	r0, [r1, #4]
   12570:	ldr	r0, [fp, #-4]
   12574:	movw	r1, #1
   12578:	str	r1, [r0]
   1257c:	b	12588 <__assert_fail@plt+0x10f4>
   12580:	b	12588 <__assert_fail@plt+0x10f4>
   12584:	bl	1147c <abort@plt>
   12588:	mov	sp, fp
   1258c:	pop	{fp, pc}
   12590:	sub	sp, sp, #8
   12594:	str	r0, [sp]
   12598:	ldr	r0, [sp]
   1259c:	ldrb	r0, [r0]
   125a0:	cmp	r0, #45	; 0x2d
   125a4:	movw	r0, #0
   125a8:	moveq	r0, #1
   125ac:	and	r0, r0, #1
   125b0:	ldr	r1, [sp]
   125b4:	add	r0, r1, r0
   125b8:	str	r0, [sp]
   125bc:	ldr	r0, [sp]
   125c0:	ldrb	r0, [r0]
   125c4:	sub	r0, r0, #48	; 0x30
   125c8:	cmp	r0, #9
   125cc:	bls	125e0 <__assert_fail@plt+0x114c>
   125d0:	movw	r0, #0
   125d4:	and	r0, r0, #1
   125d8:	strb	r0, [sp, #7]
   125dc:	b	12608 <__assert_fail@plt+0x1174>
   125e0:	b	125e4 <__assert_fail@plt+0x1150>
   125e4:	ldr	r0, [sp]
   125e8:	add	r1, r0, #1
   125ec:	str	r1, [sp]
   125f0:	ldrsb	r0, [r0, #1]
   125f4:	cmp	r0, #0
   125f8:	bne	125bc <__assert_fail@plt+0x1128>
   125fc:	movw	r0, #1
   12600:	and	r0, r0, #1
   12604:	strb	r0, [sp, #7]
   12608:	ldrb	r0, [sp, #7]
   1260c:	and	r0, r0, #1
   12610:	add	sp, sp, #8
   12614:	bx	lr
   12618:	push	{fp, lr}
   1261c:	mov	fp, sp
   12620:	sub	sp, sp, #32
   12624:	and	r0, r0, #1
   12628:	strb	r0, [fp, #-1]
   1262c:	ldrb	r0, [fp, #-1]
   12630:	and	r0, r0, #1
   12634:	bl	128bc <__assert_fail@plt+0x1428>
   12638:	str	r0, [fp, #-8]
   1263c:	movw	r0, #17078	; 0x42b6
   12640:	movt	r0, #4
   12644:	bl	11f00 <__assert_fail@plt+0xa6c>
   12648:	tst	r0, #1
   1264c:	beq	1265c <__assert_fail@plt+0x11c8>
   12650:	movw	r0, #0
   12654:	str	r0, [sp, #16]
   12658:	b	126b0 <__assert_fail@plt+0x121c>
   1265c:	movw	r0, #24030	; 0x5dde
   12660:	movt	r0, #4
   12664:	bl	11f00 <__assert_fail@plt+0xa6c>
   12668:	tst	r0, #1
   1266c:	beq	1267c <__assert_fail@plt+0x11e8>
   12670:	movw	r0, #1
   12674:	str	r0, [sp, #16]
   12678:	b	126ac <__assert_fail@plt+0x1218>
   1267c:	movw	r0, #17080	; 0x42b8
   12680:	movt	r0, #4
   12684:	bl	11f00 <__assert_fail@plt+0xa6c>
   12688:	tst	r0, #1
   1268c:	beq	1269c <__assert_fail@plt+0x1208>
   12690:	movw	r0, #2
   12694:	str	r0, [sp, #16]
   12698:	b	126a8 <__assert_fail@plt+0x1214>
   1269c:	ldr	r0, [fp, #-8]
   126a0:	mov	sp, fp
   126a4:	pop	{fp, pc}
   126a8:	b	126ac <__assert_fail@plt+0x1218>
   126ac:	b	126b0 <__assert_fail@plt+0x121c>
   126b0:	ldrb	r0, [fp, #-1]
   126b4:	and	r0, r0, #1
   126b8:	bl	128bc <__assert_fail@plt+0x1428>
   126bc:	str	r0, [fp, #-12]
   126c0:	ldrb	r0, [fp, #-1]
   126c4:	tst	r0, #1
   126c8:	beq	127d0 <__assert_fail@plt+0x133c>
   126cc:	ldr	r0, [fp, #-8]
   126d0:	bl	127dc <__assert_fail@plt+0x1348>
   126d4:	tst	r0, #1
   126d8:	beq	126ec <__assert_fail@plt+0x1258>
   126dc:	ldr	r0, [fp, #-12]
   126e0:	bl	127dc <__assert_fail@plt+0x1348>
   126e4:	tst	r0, #1
   126e8:	bne	12710 <__assert_fail@plt+0x127c>
   126ec:	movw	r0, #17057	; 0x42a1
   126f0:	movt	r0, #4
   126f4:	bl	11380 <gettext@plt>
   126f8:	movw	lr, #2
   126fc:	str	r0, [sp, #12]
   12700:	mov	r0, lr
   12704:	movw	r1, #0
   12708:	ldr	r2, [sp, #12]
   1270c:	bl	11308 <error@plt>
   12710:	ldr	r0, [sp, #16]
   12714:	cmp	r0, #0
   12718:	beq	12754 <__assert_fail@plt+0x12c0>
   1271c:	ldr	r0, [fp, #-12]
   12720:	add	r0, r0, #4
   12724:	bl	172ac <__assert_fail@plt+0x5e18>
   12728:	cmp	r0, #0
   1272c:	bne	12754 <__assert_fail@plt+0x12c0>
   12730:	movw	r0, #17082	; 0x42ba
   12734:	movt	r0, #4
   12738:	bl	11380 <gettext@plt>
   1273c:	movw	lr, #2
   12740:	str	r0, [sp, #8]
   12744:	mov	r0, lr
   12748:	movw	r1, #0
   1274c:	ldr	r2, [sp, #8]
   12750:	bl	11308 <error@plt>
   12754:	ldr	r0, [sp, #16]
   12758:	cmp	r0, #0
   1275c:	bne	12770 <__assert_fail@plt+0x12dc>
   12760:	movw	r0, #31964	; 0x7cdc
   12764:	movt	r0, #1
   12768:	str	r0, [sp, #4]
   1276c:	b	1279c <__assert_fail@plt+0x1308>
   12770:	ldr	r0, [sp, #16]
   12774:	cmp	r0, #1
   12778:	movw	r0, #0
   1277c:	moveq	r0, #1
   12780:	tst	r0, #1
   12784:	movw	r0, #34964	; 0x8894
   12788:	movt	r0, #1
   1278c:	movw	r1, #34768	; 0x87d0
   12790:	movt	r1, #1
   12794:	movne	r0, r1
   12798:	str	r0, [sp, #4]
   1279c:	ldr	r0, [sp, #4]
   127a0:	ldr	r1, [fp, #-8]
   127a4:	add	r1, r1, #4
   127a8:	ldr	r2, [fp, #-8]
   127ac:	add	r2, r2, #4
   127b0:	ldr	r3, [fp, #-12]
   127b4:	add	r3, r3, #4
   127b8:	str	r0, [sp]
   127bc:	mov	r0, r1
   127c0:	mov	r1, r2
   127c4:	mov	r2, r3
   127c8:	ldr	r3, [sp]
   127cc:	blx	r3
   127d0:	ldr	r0, [fp, #-12]
   127d4:	bl	11fa8 <__assert_fail@plt+0xb14>
   127d8:	b	1263c <__assert_fail@plt+0x11a8>
   127dc:	push	{fp, lr}
   127e0:	mov	fp, sp
   127e4:	sub	sp, sp, #16
   127e8:	str	r0, [sp, #8]
   127ec:	ldr	r0, [sp, #8]
   127f0:	ldr	r0, [r0]
   127f4:	cmp	r0, #0
   127f8:	str	r0, [sp]
   127fc:	beq	12814 <__assert_fail@plt+0x1380>
   12800:	b	12804 <__assert_fail@plt+0x1370>
   12804:	ldr	r0, [sp]
   12808:	cmp	r0, #1
   1280c:	beq	12824 <__assert_fail@plt+0x1390>
   12810:	b	128a8 <__assert_fail@plt+0x1414>
   12814:	movw	r0, #1
   12818:	and	r0, r0, #1
   1281c:	strb	r0, [fp, #-1]
   12820:	b	128ac <__assert_fail@plt+0x1418>
   12824:	ldr	r0, [sp, #8]
   12828:	ldr	r0, [r0, #4]
   1282c:	str	r0, [sp, #4]
   12830:	ldr	r0, [sp, #4]
   12834:	bl	12590 <__assert_fail@plt+0x10fc>
   12838:	tst	r0, #1
   1283c:	bne	12850 <__assert_fail@plt+0x13bc>
   12840:	movw	r0, #0
   12844:	and	r0, r0, #1
   12848:	strb	r0, [fp, #-1]
   1284c:	b	128ac <__assert_fail@plt+0x1418>
   12850:	ldr	r0, [sp, #8]
   12854:	add	r0, r0, #4
   12858:	ldr	r1, [sp, #4]
   1285c:	movw	r2, #10
   12860:	bl	1e7d8 <__assert_fail@plt+0xd344>
   12864:	cmp	r0, #0
   12868:	beq	12884 <__assert_fail@plt+0x13f0>
   1286c:	ldr	r3, [sp, #4]
   12870:	movw	r0, #3
   12874:	movw	r1, #34	; 0x22
   12878:	movw	r2, #17388	; 0x43ec
   1287c:	movt	r2, #4
   12880:	bl	11308 <error@plt>
   12884:	ldr	r0, [sp, #4]
   12888:	bl	138a4 <__assert_fail@plt+0x2410>
   1288c:	ldr	r0, [sp, #8]
   12890:	movw	lr, #0
   12894:	str	lr, [r0]
   12898:	movw	r0, #1
   1289c:	and	r0, r0, #1
   128a0:	strb	r0, [fp, #-1]
   128a4:	b	128ac <__assert_fail@plt+0x1418>
   128a8:	bl	1147c <abort@plt>
   128ac:	ldrb	r0, [fp, #-1]
   128b0:	and	r0, r0, #1
   128b4:	mov	sp, fp
   128b8:	pop	{fp, pc}
   128bc:	push	{fp, lr}
   128c0:	mov	fp, sp
   128c4:	sub	sp, sp, #16
   128c8:	and	r0, r0, #1
   128cc:	strb	r0, [fp, #-1]
   128d0:	ldrb	r0, [fp, #-1]
   128d4:	and	r0, r0, #1
   128d8:	bl	1294c <__assert_fail@plt+0x14b8>
   128dc:	str	r0, [sp, #8]
   128e0:	movw	r0, #17099	; 0x42cb
   128e4:	movt	r0, #4
   128e8:	bl	11f00 <__assert_fail@plt+0xa6c>
   128ec:	tst	r0, #1
   128f0:	beq	1293c <__assert_fail@plt+0x14a8>
   128f4:	ldrb	r0, [fp, #-1]
   128f8:	and	r0, r0, #1
   128fc:	bl	1294c <__assert_fail@plt+0x14b8>
   12900:	str	r0, [sp, #4]
   12904:	ldrb	r0, [fp, #-1]
   12908:	tst	r0, #1
   1290c:	beq	12930 <__assert_fail@plt+0x149c>
   12910:	ldr	r0, [sp, #8]
   12914:	ldr	r1, [sp, #4]
   12918:	bl	12bf8 <__assert_fail@plt+0x1764>
   1291c:	str	r0, [sp]
   12920:	ldr	r0, [sp, #8]
   12924:	bl	11fa8 <__assert_fail@plt+0xb14>
   12928:	ldr	r0, [sp]
   1292c:	str	r0, [sp, #8]
   12930:	ldr	r0, [sp, #4]
   12934:	bl	11fa8 <__assert_fail@plt+0xb14>
   12938:	b	12948 <__assert_fail@plt+0x14b4>
   1293c:	ldr	r0, [sp, #8]
   12940:	mov	sp, fp
   12944:	pop	{fp, pc}
   12948:	b	128e0 <__assert_fail@plt+0x144c>
   1294c:	push	{fp, lr}
   12950:	mov	fp, sp
   12954:	sub	sp, sp, #48	; 0x30
   12958:	and	r0, r0, #1
   1295c:	strb	r0, [fp, #-5]
   12960:	movw	r0, #17055	; 0x429f
   12964:	movt	r0, #4
   12968:	bl	11f00 <__assert_fail@plt+0xa6c>
   1296c:	tst	r0, #1
   12970:	beq	1299c <__assert_fail@plt+0x1508>
   12974:	bl	12e90 <__assert_fail@plt+0x19fc>
   12978:	movw	lr, #24984	; 0x6198
   1297c:	movt	lr, #5
   12980:	ldr	r0, [lr]
   12984:	add	r1, r0, #4
   12988:	str	r1, [lr]
   1298c:	ldr	r0, [r0]
   12990:	bl	12f04 <__assert_fail@plt+0x1a70>
   12994:	str	r0, [fp, #-4]
   12998:	b	12bec <__assert_fail@plt+0x1758>
   1299c:	movw	r0, #17101	; 0x42cd
   129a0:	movt	r0, #4
   129a4:	bl	11f00 <__assert_fail@plt+0xa6c>
   129a8:	tst	r0, #1
   129ac:	beq	129f0 <__assert_fail@plt+0x155c>
   129b0:	ldrb	r0, [fp, #-5]
   129b4:	and	r0, r0, #1
   129b8:	bl	1294c <__assert_fail@plt+0x14b8>
   129bc:	str	r0, [fp, #-16]
   129c0:	ldr	r0, [fp, #-16]
   129c4:	bl	124fc <__assert_fail@plt+0x1068>
   129c8:	ldr	r0, [fp, #-16]
   129cc:	ldr	r0, [r0, #4]
   129d0:	bl	20e14 <__assert_fail@plt+0xf980>
   129d4:	bl	11ff4 <__assert_fail@plt+0xb60>
   129d8:	str	r0, [fp, #-20]	; 0xffffffec
   129dc:	ldr	r0, [fp, #-16]
   129e0:	bl	11fa8 <__assert_fail@plt+0xb14>
   129e4:	ldr	r0, [fp, #-20]	; 0xffffffec
   129e8:	str	r0, [fp, #-4]
   129ec:	b	12bec <__assert_fail@plt+0x1758>
   129f0:	movw	r0, #17108	; 0x42d4
   129f4:	movt	r0, #4
   129f8:	bl	11f00 <__assert_fail@plt+0xa6c>
   129fc:	tst	r0, #1
   12a00:	beq	12a68 <__assert_fail@plt+0x15d4>
   12a04:	ldrb	r0, [fp, #-5]
   12a08:	and	r0, r0, #1
   12a0c:	bl	1294c <__assert_fail@plt+0x14b8>
   12a10:	str	r0, [fp, #-12]
   12a14:	ldrb	r0, [fp, #-5]
   12a18:	and	r0, r0, #1
   12a1c:	bl	1294c <__assert_fail@plt+0x14b8>
   12a20:	str	r0, [fp, #-16]
   12a24:	ldrb	r0, [fp, #-5]
   12a28:	tst	r0, #1
   12a2c:	beq	12a4c <__assert_fail@plt+0x15b8>
   12a30:	ldr	r0, [fp, #-12]
   12a34:	ldr	r1, [fp, #-16]
   12a38:	bl	12bf8 <__assert_fail@plt+0x1764>
   12a3c:	str	r0, [fp, #-20]	; 0xffffffec
   12a40:	ldr	r0, [fp, #-12]
   12a44:	bl	11fa8 <__assert_fail@plt+0xb14>
   12a48:	b	12a54 <__assert_fail@plt+0x15c0>
   12a4c:	ldr	r0, [fp, #-12]
   12a50:	str	r0, [fp, #-20]	; 0xffffffec
   12a54:	ldr	r0, [fp, #-16]
   12a58:	bl	11fa8 <__assert_fail@plt+0xb14>
   12a5c:	ldr	r0, [fp, #-20]	; 0xffffffec
   12a60:	str	r0, [fp, #-4]
   12a64:	b	12bec <__assert_fail@plt+0x1758>
   12a68:	movw	r0, #17114	; 0x42da
   12a6c:	movt	r0, #4
   12a70:	bl	11f00 <__assert_fail@plt+0xa6c>
   12a74:	tst	r0, #1
   12a78:	beq	12aec <__assert_fail@plt+0x1658>
   12a7c:	ldrb	r0, [fp, #-5]
   12a80:	and	r0, r0, #1
   12a84:	bl	1294c <__assert_fail@plt+0x14b8>
   12a88:	str	r0, [fp, #-12]
   12a8c:	ldrb	r0, [fp, #-5]
   12a90:	and	r0, r0, #1
   12a94:	bl	1294c <__assert_fail@plt+0x14b8>
   12a98:	str	r0, [fp, #-16]
   12a9c:	ldr	r0, [fp, #-12]
   12aa0:	bl	124fc <__assert_fail@plt+0x1068>
   12aa4:	ldr	r0, [fp, #-16]
   12aa8:	bl	124fc <__assert_fail@plt+0x1068>
   12aac:	ldr	r0, [fp, #-12]
   12ab0:	ldr	r0, [r0, #4]
   12ab4:	ldr	lr, [fp, #-16]
   12ab8:	ldr	r1, [lr, #4]
   12abc:	bl	12f48 <__assert_fail@plt+0x1ab4>
   12ac0:	str	r0, [sp, #16]
   12ac4:	ldr	r0, [sp, #16]
   12ac8:	bl	11ff4 <__assert_fail@plt+0xb60>
   12acc:	str	r0, [fp, #-20]	; 0xffffffec
   12ad0:	ldr	r0, [fp, #-12]
   12ad4:	bl	11fa8 <__assert_fail@plt+0xb14>
   12ad8:	ldr	r0, [fp, #-16]
   12adc:	bl	11fa8 <__assert_fail@plt+0xb14>
   12ae0:	ldr	r0, [fp, #-20]	; 0xffffffec
   12ae4:	str	r0, [fp, #-4]
   12ae8:	b	12bec <__assert_fail@plt+0x1758>
   12aec:	movw	r0, #17120	; 0x42e0
   12af0:	movt	r0, #4
   12af4:	bl	11f00 <__assert_fail@plt+0xa6c>
   12af8:	tst	r0, #1
   12afc:	beq	12bdc <__assert_fail@plt+0x1748>
   12b00:	ldrb	r0, [fp, #-5]
   12b04:	and	r0, r0, #1
   12b08:	bl	1294c <__assert_fail@plt+0x14b8>
   12b0c:	str	r0, [fp, #-12]
   12b10:	ldrb	r0, [fp, #-5]
   12b14:	and	r0, r0, #1
   12b18:	bl	1294c <__assert_fail@plt+0x14b8>
   12b1c:	str	r0, [sp, #24]
   12b20:	ldrb	r0, [fp, #-5]
   12b24:	and	r0, r0, #1
   12b28:	bl	1294c <__assert_fail@plt+0x14b8>
   12b2c:	str	r0, [sp, #20]
   12b30:	ldr	r0, [fp, #-12]
   12b34:	bl	124fc <__assert_fail@plt+0x1068>
   12b38:	ldr	r0, [sp, #24]
   12b3c:	bl	127dc <__assert_fail@plt+0x1348>
   12b40:	tst	r0, #1
   12b44:	beq	12b58 <__assert_fail@plt+0x16c4>
   12b48:	ldr	r0, [sp, #20]
   12b4c:	bl	127dc <__assert_fail@plt+0x1348>
   12b50:	tst	r0, #1
   12b54:	bne	12b6c <__assert_fail@plt+0x16d8>
   12b58:	movw	r0, #16931	; 0x4223
   12b5c:	movt	r0, #4
   12b60:	bl	12f04 <__assert_fail@plt+0x1a70>
   12b64:	str	r0, [fp, #-20]	; 0xffffffec
   12b68:	b	12bb8 <__assert_fail@plt+0x1724>
   12b6c:	ldr	r0, [sp, #24]
   12b70:	add	r0, r0, #4
   12b74:	bl	131d0 <__assert_fail@plt+0x1d3c>
   12b78:	str	r0, [sp, #12]
   12b7c:	ldr	r0, [sp, #20]
   12b80:	add	r0, r0, #4
   12b84:	bl	131d0 <__assert_fail@plt+0x1d3c>
   12b88:	str	r0, [sp, #8]
   12b8c:	ldr	r0, [fp, #-12]
   12b90:	ldr	r0, [r0, #4]
   12b94:	ldr	r1, [sp, #12]
   12b98:	ldr	r2, [sp, #8]
   12b9c:	bl	13248 <__assert_fail@plt+0x1db4>
   12ba0:	str	r0, [sp, #4]
   12ba4:	ldr	r0, [sp, #4]
   12ba8:	bl	12f04 <__assert_fail@plt+0x1a70>
   12bac:	str	r0, [fp, #-20]	; 0xffffffec
   12bb0:	ldr	r0, [sp, #4]
   12bb4:	bl	138a4 <__assert_fail@plt+0x2410>
   12bb8:	ldr	r0, [fp, #-12]
   12bbc:	bl	11fa8 <__assert_fail@plt+0xb14>
   12bc0:	ldr	r0, [sp, #24]
   12bc4:	bl	11fa8 <__assert_fail@plt+0xb14>
   12bc8:	ldr	r0, [sp, #20]
   12bcc:	bl	11fa8 <__assert_fail@plt+0xb14>
   12bd0:	ldr	r0, [fp, #-20]	; 0xffffffec
   12bd4:	str	r0, [fp, #-4]
   12bd8:	b	12bec <__assert_fail@plt+0x1758>
   12bdc:	ldrb	r0, [fp, #-5]
   12be0:	and	r0, r0, #1
   12be4:	bl	134e0 <__assert_fail@plt+0x204c>
   12be8:	str	r0, [fp, #-4]
   12bec:	ldr	r0, [fp, #-4]
   12bf0:	mov	sp, fp
   12bf4:	pop	{fp, pc}
   12bf8:	push	{r4, r5, fp, lr}
   12bfc:	add	fp, sp, #8
   12c00:	sub	sp, sp, #360	; 0x168
   12c04:	str	r0, [fp, #-12]
   12c08:	str	r1, [fp, #-16]
   12c0c:	ldr	r0, [fp, #-12]
   12c10:	bl	124fc <__assert_fail@plt+0x1068>
   12c14:	ldr	r0, [fp, #-16]
   12c18:	bl	124fc <__assert_fail@plt+0x1068>
   12c1c:	add	r0, sp, #56	; 0x38
   12c20:	movw	r1, #0
   12c24:	str	r1, [sp, #44]	; 0x2c
   12c28:	str	r1, [sp, #48]	; 0x30
   12c2c:	str	r1, [sp, #52]	; 0x34
   12c30:	str	r1, [fp, #-56]	; 0xffffffc8
   12c34:	str	r1, [fp, #-52]	; 0xffffffcc
   12c38:	str	r0, [fp, #-40]	; 0xffffffd8
   12c3c:	str	r1, [fp, #-36]	; 0xffffffdc
   12c40:	movw	r0, #25304	; 0x62d8
   12c44:	movt	r0, #5
   12c48:	movw	r1, #710	; 0x2c6
   12c4c:	str	r1, [r0]
   12c50:	ldr	r0, [fp, #-16]
   12c54:	ldr	r0, [r0, #4]
   12c58:	ldr	r1, [fp, #-16]
   12c5c:	ldr	r1, [r1, #4]
   12c60:	str	r0, [sp, #32]
   12c64:	mov	r0, r1
   12c68:	bl	1138c <strlen@plt>
   12c6c:	ldr	r1, [sp, #32]
   12c70:	str	r0, [sp, #28]
   12c74:	mov	r0, r1
   12c78:	ldr	r1, [sp, #28]
   12c7c:	sub	r2, fp, #56	; 0x38
   12c80:	bl	239b4 <__assert_fail@plt+0x12520>
   12c84:	str	r0, [fp, #-24]	; 0xffffffe8
   12c88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12c8c:	movw	r1, #0
   12c90:	cmp	r0, r1
   12c94:	beq	12cb0 <__assert_fail@plt+0x181c>
   12c98:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12c9c:	movw	r0, #2
   12ca0:	movw	r1, #0
   12ca4:	movw	r2, #17388	; 0x43ec
   12ca8:	movt	r2, #4
   12cac:	bl	11308 <error@plt>
   12cb0:	ldrb	r0, [fp, #-28]	; 0xffffffe4
   12cb4:	and	r0, r0, #127	; 0x7f
   12cb8:	strb	r0, [fp, #-28]	; 0xffffffe4
   12cbc:	ldr	r0, [fp, #-12]
   12cc0:	ldr	r1, [r0, #4]
   12cc4:	ldr	r0, [fp, #-12]
   12cc8:	ldr	r0, [r0, #4]
   12ccc:	str	r1, [sp, #24]
   12cd0:	bl	1138c <strlen@plt>
   12cd4:	sub	r1, fp, #56	; 0x38
   12cd8:	str	r0, [sp, #20]
   12cdc:	mov	r0, r1
   12ce0:	ldr	r1, [sp, #24]
   12ce4:	ldr	r2, [sp, #20]
   12ce8:	movw	r3, #0
   12cec:	add	lr, sp, #44	; 0x2c
   12cf0:	str	lr, [sp]
   12cf4:	bl	25de0 <__assert_fail@plt+0x1494c>
   12cf8:	str	r0, [sp, #40]	; 0x28
   12cfc:	ldr	r0, [sp, #40]	; 0x28
   12d00:	movw	r1, #0
   12d04:	cmp	r1, r0
   12d08:	bgt	12dbc <__assert_fail@plt+0x1928>
   12d0c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12d10:	cmp	r0, #0
   12d14:	bls	12d78 <__assert_fail@plt+0x18e4>
   12d18:	ldr	r0, [sp, #52]	; 0x34
   12d1c:	ldr	r0, [r0, #4]
   12d20:	cmp	r0, #0
   12d24:	bge	12d3c <__assert_fail@plt+0x18a8>
   12d28:	movw	r0, #16931	; 0x4223
   12d2c:	movt	r0, #4
   12d30:	bl	12f04 <__assert_fail@plt+0x1a70>
   12d34:	str	r0, [fp, #-20]	; 0xffffffec
   12d38:	b	12d74 <__assert_fail@plt+0x18e0>
   12d3c:	ldr	r0, [fp, #-12]
   12d40:	ldr	r0, [r0, #4]
   12d44:	ldr	r1, [sp, #52]	; 0x34
   12d48:	ldr	r1, [r1, #4]
   12d4c:	add	r0, r0, r1
   12d50:	movw	r1, #0
   12d54:	strb	r1, [r0]
   12d58:	ldr	r0, [fp, #-12]
   12d5c:	ldr	r0, [r0, #4]
   12d60:	ldr	r1, [sp, #48]	; 0x30
   12d64:	ldr	r1, [r1, #4]
   12d68:	add	r0, r0, r1
   12d6c:	bl	12f04 <__assert_fail@plt+0x1a70>
   12d70:	str	r0, [fp, #-20]	; 0xffffffec
   12d74:	b	12db8 <__assert_fail@plt+0x1924>
   12d78:	bl	112d8 <__ctype_get_mb_cur_max@plt>
   12d7c:	cmp	r0, #1
   12d80:	bne	12d90 <__assert_fail@plt+0x18fc>
   12d84:	ldr	r0, [sp, #40]	; 0x28
   12d88:	str	r0, [sp, #16]
   12d8c:	b	12da4 <__assert_fail@plt+0x1910>
   12d90:	ldr	r0, [fp, #-12]
   12d94:	ldr	r0, [r0, #4]
   12d98:	ldr	r1, [sp, #40]	; 0x28
   12d9c:	bl	1364c <__assert_fail@plt+0x21b8>
   12da0:	str	r0, [sp, #16]
   12da4:	ldr	r0, [sp, #16]
   12da8:	str	r0, [sp, #36]	; 0x24
   12dac:	ldr	r0, [sp, #36]	; 0x24
   12db0:	bl	11ff4 <__assert_fail@plt+0xb60>
   12db4:	str	r0, [fp, #-20]	; 0xffffffec
   12db8:	b	12e54 <__assert_fail@plt+0x19c0>
   12dbc:	ldr	r0, [sp, #40]	; 0x28
   12dc0:	cmn	r0, #1
   12dc4:	bne	12df8 <__assert_fail@plt+0x1964>
   12dc8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12dcc:	cmp	r0, #0
   12dd0:	bls	12de8 <__assert_fail@plt+0x1954>
   12dd4:	movw	r0, #16931	; 0x4223
   12dd8:	movt	r0, #4
   12ddc:	bl	12f04 <__assert_fail@plt+0x1a70>
   12de0:	str	r0, [fp, #-20]	; 0xffffffec
   12de4:	b	12df4 <__assert_fail@plt+0x1960>
   12de8:	movw	r0, #0
   12dec:	bl	11ff4 <__assert_fail@plt+0xb60>
   12df0:	str	r0, [fp, #-20]	; 0xffffffec
   12df4:	b	12e50 <__assert_fail@plt+0x19bc>
   12df8:	ldr	r0, [sp, #40]	; 0x28
   12dfc:	cmn	r0, #2
   12e00:	bne	12e14 <__assert_fail@plt+0x1980>
   12e04:	bl	113b0 <__errno_location@plt>
   12e08:	ldr	r0, [r0]
   12e0c:	str	r0, [sp, #12]
   12e10:	b	12e20 <__assert_fail@plt+0x198c>
   12e14:	movw	r0, #75	; 0x4b
   12e18:	str	r0, [sp, #12]
   12e1c:	b	12e20 <__assert_fail@plt+0x198c>
   12e20:	ldr	r0, [sp, #12]
   12e24:	movw	r1, #17277	; 0x437d
   12e28:	movt	r1, #4
   12e2c:	str	r0, [sp, #8]
   12e30:	mov	r0, r1
   12e34:	bl	11380 <gettext@plt>
   12e38:	movw	r1, #3
   12e3c:	str	r0, [sp, #4]
   12e40:	mov	r0, r1
   12e44:	ldr	r1, [sp, #8]
   12e48:	ldr	r2, [sp, #4]
   12e4c:	bl	11308 <error@plt>
   12e50:	b	12e54 <__assert_fail@plt+0x19c0>
   12e54:	ldr	r0, [sp, #44]	; 0x2c
   12e58:	movw	r1, #0
   12e5c:	cmp	r1, r0
   12e60:	bcs	12e74 <__assert_fail@plt+0x19e0>
   12e64:	ldr	r0, [sp, #48]	; 0x30
   12e68:	bl	138a4 <__assert_fail@plt+0x2410>
   12e6c:	ldr	r0, [sp, #52]	; 0x34
   12e70:	bl	138a4 <__assert_fail@plt+0x2410>
   12e74:	movw	r0, #0
   12e78:	str	r0, [fp, #-40]	; 0xffffffd8
   12e7c:	sub	r0, fp, #56	; 0x38
   12e80:	bl	249c8 <__assert_fail@plt+0x13534>
   12e84:	ldr	r0, [fp, #-20]	; 0xffffffec
   12e88:	sub	sp, fp, #8
   12e8c:	pop	{r4, r5, fp, pc}
   12e90:	push	{fp, lr}
   12e94:	mov	fp, sp
   12e98:	sub	sp, sp, #8
   12e9c:	bl	11c68 <__assert_fail@plt+0x7d4>
   12ea0:	tst	r0, #1
   12ea4:	beq	12efc <__assert_fail@plt+0x1a68>
   12ea8:	movw	r0, #17127	; 0x42e7
   12eac:	movt	r0, #4
   12eb0:	bl	11380 <gettext@plt>
   12eb4:	movw	lr, #24984	; 0x6198
   12eb8:	movt	lr, #5
   12ebc:	ldr	lr, [lr]
   12ec0:	mvn	r1, #3
   12ec4:	add	r1, lr, r1
   12ec8:	ldr	r2, [r1]
   12ecc:	movw	r1, #0
   12ed0:	str	r0, [sp, #4]
   12ed4:	mov	r0, r1
   12ed8:	movw	r1, #8
   12edc:	bl	23410 <__assert_fail@plt+0x11f7c>
   12ee0:	movw	r1, #2
   12ee4:	str	r0, [sp]
   12ee8:	mov	r0, r1
   12eec:	movw	r1, #0
   12ef0:	ldr	r2, [sp, #4]
   12ef4:	ldr	r3, [sp]
   12ef8:	bl	11308 <error@plt>
   12efc:	mov	sp, fp
   12f00:	pop	{fp, pc}
   12f04:	push	{fp, lr}
   12f08:	mov	fp, sp
   12f0c:	sub	sp, sp, #8
   12f10:	str	r0, [sp, #4]
   12f14:	movw	r0, #16
   12f18:	bl	3cd10 <__assert_fail@plt+0x2b87c>
   12f1c:	str	r0, [sp]
   12f20:	ldr	r0, [sp]
   12f24:	movw	lr, #1
   12f28:	str	lr, [r0]
   12f2c:	ldr	r0, [sp, #4]
   12f30:	bl	3fab4 <__assert_fail@plt+0x2e620>
   12f34:	ldr	lr, [sp]
   12f38:	str	r0, [lr, #4]
   12f3c:	ldr	r0, [sp]
   12f40:	mov	sp, fp
   12f44:	pop	{fp, pc}
   12f48:	push	{fp, lr}
   12f4c:	mov	fp, sp
   12f50:	sub	sp, sp, #152	; 0x98
   12f54:	str	r0, [fp, #-8]
   12f58:	str	r1, [fp, #-12]
   12f5c:	movw	r0, #0
   12f60:	str	r0, [fp, #-16]
   12f64:	ldr	r0, [fp, #-12]
   12f68:	ldrb	r0, [r0]
   12f6c:	cmp	r0, #0
   12f70:	bne	12f80 <__assert_fail@plt+0x1aec>
   12f74:	movw	r0, #0
   12f78:	str	r0, [fp, #-4]
   12f7c:	b	131c4 <__assert_fail@plt+0x1d30>
   12f80:	bl	112d8 <__ctype_get_mb_cur_max@plt>
   12f84:	cmp	r0, #1
   12f88:	bls	13178 <__assert_fail@plt+0x1ce4>
   12f8c:	ldr	r0, [fp, #-8]
   12f90:	str	r0, [fp, #-56]	; 0xffffffc8
   12f94:	movw	r0, #0
   12f98:	strb	r0, [fp, #-72]	; 0xffffffb8
   12f9c:	sub	r1, fp, #72	; 0x48
   12fa0:	add	r1, r1, #4
   12fa4:	str	r0, [sp, #16]
   12fa8:	mov	r0, r1
   12fac:	ldr	r1, [sp, #16]
   12fb0:	and	r1, r1, #255	; 0xff
   12fb4:	movw	r2, #8
   12fb8:	bl	113d4 <memset@plt>
   12fbc:	ldr	r0, [sp, #16]
   12fc0:	strb	r0, [fp, #-60]	; 0xffffffc4
   12fc4:	sub	r0, fp, #72	; 0x48
   12fc8:	bl	20f00 <__assert_fail@plt+0xfa6c>
   12fcc:	ldrb	r0, [fp, #-48]	; 0xffffffd0
   12fd0:	tst	r0, #1
   12fd4:	movw	r0, #0
   12fd8:	str	r0, [sp, #12]
   12fdc:	beq	12ff4 <__assert_fail@plt+0x1b60>
   12fe0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12fe4:	cmp	r0, #0
   12fe8:	movw	r0, #0
   12fec:	moveq	r0, #1
   12ff0:	str	r0, [sp, #12]
   12ff4:	ldr	r0, [sp, #12]
   12ff8:	mvn	r1, #0
   12ffc:	eor	r0, r0, r1
   13000:	tst	r0, #1
   13004:	beq	1316c <__assert_fail@plt+0x1cd8>
   13008:	ldr	r0, [fp, #-16]
   1300c:	add	r0, r0, #1
   13010:	str	r0, [fp, #-16]
   13014:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13018:	cmp	r0, #1
   1301c:	bne	1304c <__assert_fail@plt+0x1bb8>
   13020:	ldr	r0, [fp, #-12]
   13024:	ldr	r1, [fp, #-56]	; 0xffffffc8
   13028:	ldrb	r1, [r1]
   1302c:	bl	20ce8 <__assert_fail@plt+0xf854>
   13030:	movw	r1, #0
   13034:	cmp	r0, r1
   13038:	beq	13048 <__assert_fail@plt+0x1bb4>
   1303c:	ldr	r0, [fp, #-16]
   13040:	str	r0, [fp, #-4]
   13044:	b	131c4 <__assert_fail@plt+0x1d30>
   13048:	b	1314c <__assert_fail@plt+0x1cb8>
   1304c:	ldr	r0, [fp, #-12]
   13050:	str	r0, [sp, #40]	; 0x28
   13054:	movw	r0, #0
   13058:	strb	r0, [sp, #24]
   1305c:	add	r1, sp, #24
   13060:	add	r1, r1, #4
   13064:	str	r0, [sp, #8]
   13068:	mov	r0, r1
   1306c:	ldr	r1, [sp, #8]
   13070:	and	r1, r1, #255	; 0xff
   13074:	movw	r2, #8
   13078:	bl	113d4 <memset@plt>
   1307c:	ldr	r0, [sp, #8]
   13080:	strb	r0, [sp, #36]	; 0x24
   13084:	add	r0, sp, #24
   13088:	bl	20f00 <__assert_fail@plt+0xfa6c>
   1308c:	ldrb	r0, [sp, #48]	; 0x30
   13090:	tst	r0, #1
   13094:	movw	r0, #0
   13098:	str	r0, [sp, #4]
   1309c:	beq	130b4 <__assert_fail@plt+0x1c20>
   130a0:	ldr	r0, [sp, #52]	; 0x34
   130a4:	cmp	r0, #0
   130a8:	movw	r0, #0
   130ac:	moveq	r0, #1
   130b0:	str	r0, [sp, #4]
   130b4:	ldr	r0, [sp, #4]
   130b8:	mvn	r1, #0
   130bc:	eor	r0, r0, r1
   130c0:	tst	r0, #1
   130c4:	beq	13148 <__assert_fail@plt+0x1cb4>
   130c8:	ldrb	r0, [sp, #48]	; 0x30
   130cc:	tst	r0, #1
   130d0:	beq	130f4 <__assert_fail@plt+0x1c60>
   130d4:	ldrb	r0, [fp, #-48]	; 0xffffffd0
   130d8:	tst	r0, #1
   130dc:	beq	130f4 <__assert_fail@plt+0x1c60>
   130e0:	ldr	r0, [sp, #52]	; 0x34
   130e4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   130e8:	cmp	r0, r1
   130ec:	beq	1311c <__assert_fail@plt+0x1c88>
   130f0:	b	13128 <__assert_fail@plt+0x1c94>
   130f4:	ldr	r0, [sp, #44]	; 0x2c
   130f8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   130fc:	cmp	r0, r1
   13100:	bne	13128 <__assert_fail@plt+0x1c94>
   13104:	ldr	r0, [sp, #40]	; 0x28
   13108:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1310c:	ldr	r2, [sp, #44]	; 0x2c
   13110:	bl	11284 <memcmp@plt>
   13114:	cmp	r0, #0
   13118:	bne	13128 <__assert_fail@plt+0x1c94>
   1311c:	ldr	r0, [fp, #-16]
   13120:	str	r0, [fp, #-4]
   13124:	b	131c4 <__assert_fail@plt+0x1d30>
   13128:	b	1312c <__assert_fail@plt+0x1c98>
   1312c:	ldr	r0, [sp, #44]	; 0x2c
   13130:	ldr	r1, [sp, #40]	; 0x28
   13134:	add	r0, r1, r0
   13138:	str	r0, [sp, #40]	; 0x28
   1313c:	movw	r0, #0
   13140:	strb	r0, [sp, #36]	; 0x24
   13144:	b	13084 <__assert_fail@plt+0x1bf0>
   13148:	b	1314c <__assert_fail@plt+0x1cb8>
   1314c:	b	13150 <__assert_fail@plt+0x1cbc>
   13150:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13154:	ldr	r1, [fp, #-56]	; 0xffffffc8
   13158:	add	r0, r1, r0
   1315c:	str	r0, [fp, #-56]	; 0xffffffc8
   13160:	movw	r0, #0
   13164:	strb	r0, [fp, #-60]	; 0xffffffc4
   13168:	b	12fc4 <__assert_fail@plt+0x1b30>
   1316c:	movw	r0, #0
   13170:	str	r0, [fp, #-4]
   13174:	b	131c4 <__assert_fail@plt+0x1d30>
   13178:	ldr	r0, [fp, #-8]
   1317c:	ldr	r1, [fp, #-12]
   13180:	bl	111dc <strcspn@plt>
   13184:	str	r0, [sp, #20]
   13188:	ldr	r0, [fp, #-8]
   1318c:	ldr	r1, [sp, #20]
   13190:	add	r0, r0, r1
   13194:	ldrb	r0, [r0]
   13198:	cmp	r0, #0
   1319c:	beq	131b0 <__assert_fail@plt+0x1d1c>
   131a0:	ldr	r0, [sp, #20]
   131a4:	add	r0, r0, #1
   131a8:	str	r0, [sp]
   131ac:	b	131bc <__assert_fail@plt+0x1d28>
   131b0:	movw	r0, #0
   131b4:	str	r0, [sp]
   131b8:	b	131bc <__assert_fail@plt+0x1d28>
   131bc:	ldr	r0, [sp]
   131c0:	str	r0, [fp, #-4]
   131c4:	ldr	r0, [fp, #-4]
   131c8:	mov	sp, fp
   131cc:	pop	{fp, pc}
   131d0:	push	{fp, lr}
   131d4:	mov	fp, sp
   131d8:	sub	sp, sp, #16
   131dc:	str	r0, [sp, #8]
   131e0:	ldr	r0, [sp, #8]
   131e4:	bl	172ac <__assert_fail@plt+0x5e18>
   131e8:	cmp	r0, #0
   131ec:	bge	131fc <__assert_fail@plt+0x1d68>
   131f0:	mvn	r0, #0
   131f4:	str	r0, [fp, #-4]
   131f8:	b	1323c <__assert_fail@plt+0x1da8>
   131fc:	ldr	r0, [sp, #8]
   13200:	bl	16448 <__assert_fail@plt+0x4fb4>
   13204:	cmp	r0, #0
   13208:	beq	13234 <__assert_fail@plt+0x1da0>
   1320c:	ldr	r0, [sp, #8]
   13210:	bl	167dc <__assert_fail@plt+0x5348>
   13214:	str	r0, [sp, #4]
   13218:	ldr	r0, [sp, #4]
   1321c:	cmn	r0, #1
   13220:	bcs	13230 <__assert_fail@plt+0x1d9c>
   13224:	ldr	r0, [sp, #4]
   13228:	str	r0, [fp, #-4]
   1322c:	b	1323c <__assert_fail@plt+0x1da8>
   13230:	b	13234 <__assert_fail@plt+0x1da0>
   13234:	mvn	r0, #1
   13238:	str	r0, [fp, #-4]
   1323c:	ldr	r0, [fp, #-4]
   13240:	mov	sp, fp
   13244:	pop	{fp, pc}
   13248:	push	{fp, lr}
   1324c:	mov	fp, sp
   13250:	sub	sp, sp, #144	; 0x90
   13254:	str	r0, [fp, #-8]
   13258:	str	r1, [fp, #-12]
   1325c:	str	r2, [fp, #-16]
   13260:	ldr	r0, [fp, #-8]
   13264:	bl	1138c <strlen@plt>
   13268:	str	r0, [fp, #-28]	; 0xffffffe4
   1326c:	bl	112d8 <__ctype_get_mb_cur_max@plt>
   13270:	cmp	r0, #1
   13274:	bls	13288 <__assert_fail@plt+0x1df4>
   13278:	ldr	r0, [fp, #-8]
   1327c:	bl	20e14 <__assert_fail@plt+0xf980>
   13280:	str	r0, [sp, #44]	; 0x2c
   13284:	b	13290 <__assert_fail@plt+0x1dfc>
   13288:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1328c:	str	r0, [sp, #44]	; 0x2c
   13290:	ldr	r0, [sp, #44]	; 0x2c
   13294:	str	r0, [fp, #-32]	; 0xffffffe0
   13298:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1329c:	ldr	r1, [fp, #-12]
   132a0:	cmp	r0, r1
   132a4:	bcc	132cc <__assert_fail@plt+0x1e38>
   132a8:	ldr	r0, [fp, #-12]
   132ac:	cmp	r0, #0
   132b0:	beq	132cc <__assert_fail@plt+0x1e38>
   132b4:	ldr	r0, [fp, #-16]
   132b8:	cmp	r0, #0
   132bc:	beq	132cc <__assert_fail@plt+0x1e38>
   132c0:	ldr	r0, [fp, #-16]
   132c4:	cmn	r0, #1
   132c8:	bne	132e0 <__assert_fail@plt+0x1e4c>
   132cc:	movw	r0, #16931	; 0x4223
   132d0:	movt	r0, #4
   132d4:	bl	3fab4 <__assert_fail@plt+0x2e620>
   132d8:	str	r0, [fp, #-4]
   132dc:	b	134d4 <__assert_fail@plt+0x2040>
   132e0:	ldr	r0, [fp, #-16]
   132e4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   132e8:	ldr	r2, [fp, #-12]
   132ec:	sub	r1, r1, r2
   132f0:	add	r1, r1, #1
   132f4:	cmp	r0, r1
   132f8:	bcs	13308 <__assert_fail@plt+0x1e74>
   132fc:	ldr	r0, [fp, #-16]
   13300:	str	r0, [sp, #40]	; 0x28
   13304:	b	1331c <__assert_fail@plt+0x1e88>
   13308:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1330c:	ldr	r1, [fp, #-12]
   13310:	sub	r0, r0, r1
   13314:	add	r0, r0, #1
   13318:	str	r0, [sp, #40]	; 0x28
   1331c:	ldr	r0, [sp, #40]	; 0x28
   13320:	str	r0, [fp, #-36]	; 0xffffffdc
   13324:	bl	112d8 <__ctype_get_mb_cur_max@plt>
   13328:	cmp	r0, #1
   1332c:	bne	13384 <__assert_fail@plt+0x1ef0>
   13330:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13334:	add	r0, r0, #1
   13338:	bl	3cd10 <__assert_fail@plt+0x2b87c>
   1333c:	str	r0, [fp, #-20]	; 0xffffffec
   13340:	ldr	r0, [fp, #-20]	; 0xffffffec
   13344:	ldr	lr, [fp, #-8]
   13348:	ldr	r1, [fp, #-12]
   1334c:	add	r1, lr, r1
   13350:	mvn	lr, #0
   13354:	add	r1, r1, lr
   13358:	ldr	lr, [fp, #-36]	; 0xffffffdc
   1335c:	str	r0, [sp, #36]	; 0x24
   13360:	mov	r2, lr
   13364:	str	lr, [sp, #32]
   13368:	bl	11248 <memcpy@plt>
   1336c:	ldr	r1, [sp, #36]	; 0x24
   13370:	ldr	r2, [sp, #32]
   13374:	add	lr, r1, r2
   13378:	str	lr, [fp, #-24]	; 0xffffffe8
   1337c:	str	r0, [sp, #28]
   13380:	b	134c0 <__assert_fail@plt+0x202c>
   13384:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13388:	add	r0, r0, #1
   1338c:	bl	3cd10 <__assert_fail@plt+0x2b87c>
   13390:	str	r0, [fp, #-20]	; 0xffffffec
   13394:	str	r0, [fp, #-24]	; 0xffffffe8
   13398:	movw	r0, #1
   1339c:	str	r0, [sp, #48]	; 0x30
   133a0:	ldr	r0, [fp, #-8]
   133a4:	str	r0, [sp, #68]	; 0x44
   133a8:	movw	r0, #0
   133ac:	strb	r0, [sp, #52]	; 0x34
   133b0:	add	lr, sp, #52	; 0x34
   133b4:	add	lr, lr, #4
   133b8:	str	r0, [sp, #24]
   133bc:	mov	r0, lr
   133c0:	ldr	lr, [sp, #24]
   133c4:	and	r1, lr, #255	; 0xff
   133c8:	movw	r2, #8
   133cc:	bl	113d4 <memset@plt>
   133d0:	ldr	r0, [sp, #24]
   133d4:	strb	r0, [sp, #64]	; 0x40
   133d8:	add	r0, sp, #52	; 0x34
   133dc:	bl	20f00 <__assert_fail@plt+0xfa6c>
   133e0:	ldrb	r0, [sp, #76]	; 0x4c
   133e4:	tst	r0, #1
   133e8:	movw	r0, #0
   133ec:	str	r0, [sp, #20]
   133f0:	beq	13408 <__assert_fail@plt+0x1f74>
   133f4:	ldr	r0, [sp, #80]	; 0x50
   133f8:	cmp	r0, #0
   133fc:	movw	r0, #0
   13400:	moveq	r0, #1
   13404:	str	r0, [sp, #20]
   13408:	ldr	r0, [sp, #20]
   1340c:	mvn	r1, #0
   13410:	eor	r0, r0, r1
   13414:	tst	r0, #1
   13418:	movw	r0, #0
   1341c:	str	r0, [sp, #16]
   13420:	beq	13438 <__assert_fail@plt+0x1fa4>
   13424:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13428:	cmp	r0, #0
   1342c:	movw	r0, #0
   13430:	movhi	r0, #1
   13434:	str	r0, [sp, #16]
   13438:	ldr	r0, [sp, #16]
   1343c:	tst	r0, #1
   13440:	beq	134bc <__assert_fail@plt+0x2028>
   13444:	ldr	r0, [sp, #48]	; 0x30
   13448:	ldr	r1, [fp, #-12]
   1344c:	cmp	r0, r1
   13450:	bcs	13458 <__assert_fail@plt+0x1fc4>
   13454:	b	13494 <__assert_fail@plt+0x2000>
   13458:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1345c:	mvn	r1, #0
   13460:	add	r0, r0, r1
   13464:	str	r0, [fp, #-36]	; 0xffffffdc
   13468:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1346c:	ldr	r1, [sp, #68]	; 0x44
   13470:	ldr	r2, [sp, #72]	; 0x48
   13474:	str	r0, [sp, #12]
   13478:	str	r2, [sp, #8]
   1347c:	bl	11248 <memcpy@plt>
   13480:	ldr	r1, [sp, #12]
   13484:	ldr	r2, [sp, #8]
   13488:	add	lr, r1, r2
   1348c:	str	lr, [fp, #-24]	; 0xffffffe8
   13490:	str	r0, [sp, #4]
   13494:	ldr	r0, [sp, #72]	; 0x48
   13498:	ldr	r1, [sp, #68]	; 0x44
   1349c:	add	r0, r1, r0
   134a0:	str	r0, [sp, #68]	; 0x44
   134a4:	movw	r0, #0
   134a8:	strb	r0, [sp, #64]	; 0x40
   134ac:	ldr	r0, [sp, #48]	; 0x30
   134b0:	add	r0, r0, #1
   134b4:	str	r0, [sp, #48]	; 0x30
   134b8:	b	133d8 <__assert_fail@plt+0x1f44>
   134bc:	b	134c0 <__assert_fail@plt+0x202c>
   134c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   134c4:	movw	r1, #0
   134c8:	strb	r1, [r0]
   134cc:	ldr	r0, [fp, #-20]	; 0xffffffec
   134d0:	str	r0, [fp, #-4]
   134d4:	ldr	r0, [fp, #-4]
   134d8:	mov	sp, fp
   134dc:	pop	{fp, pc}
   134e0:	push	{fp, lr}
   134e4:	mov	fp, sp
   134e8:	sub	sp, sp, #32
   134ec:	and	r0, r0, #1
   134f0:	strb	r0, [fp, #-5]
   134f4:	bl	12e90 <__assert_fail@plt+0x19fc>
   134f8:	movw	r0, #17167	; 0x430f
   134fc:	movt	r0, #4
   13500:	bl	11f00 <__assert_fail@plt+0xa6c>
   13504:	tst	r0, #1
   13508:	beq	135e8 <__assert_fail@plt+0x2154>
   1350c:	ldrb	r0, [fp, #-5]
   13510:	and	r0, r0, #1
   13514:	bl	11b9c <__assert_fail@plt+0x708>
   13518:	str	r0, [fp, #-12]
   1351c:	bl	11c68 <__assert_fail@plt+0x7d4>
   13520:	tst	r0, #1
   13524:	beq	1357c <__assert_fail@plt+0x20e8>
   13528:	movw	r0, #17169	; 0x4311
   1352c:	movt	r0, #4
   13530:	bl	11380 <gettext@plt>
   13534:	movw	lr, #24984	; 0x6198
   13538:	movt	lr, #5
   1353c:	ldr	lr, [lr]
   13540:	mvn	r1, #3
   13544:	add	r1, lr, r1
   13548:	ldr	r2, [r1]
   1354c:	movw	r1, #0
   13550:	str	r0, [sp, #16]
   13554:	mov	r0, r1
   13558:	movw	r1, #8
   1355c:	bl	23410 <__assert_fail@plt+0x11f7c>
   13560:	movw	r1, #2
   13564:	str	r0, [sp, #12]
   13568:	mov	r0, r1
   1356c:	movw	r1, #0
   13570:	ldr	r2, [sp, #16]
   13574:	ldr	r3, [sp, #12]
   13578:	bl	11308 <error@plt>
   1357c:	movw	r0, #19872	; 0x4da0
   13580:	movt	r0, #4
   13584:	bl	11f00 <__assert_fail@plt+0xa6c>
   13588:	tst	r0, #1
   1358c:	bne	135dc <__assert_fail@plt+0x2148>
   13590:	movw	r0, #17206	; 0x4336
   13594:	movt	r0, #4
   13598:	bl	11380 <gettext@plt>
   1359c:	movw	lr, #24984	; 0x6198
   135a0:	movt	lr, #5
   135a4:	ldr	lr, [lr]
   135a8:	ldr	r2, [lr]
   135ac:	movw	lr, #0
   135b0:	str	r0, [sp, #8]
   135b4:	mov	r0, lr
   135b8:	movw	r1, #8
   135bc:	bl	23410 <__assert_fail@plt+0x11f7c>
   135c0:	movw	r1, #2
   135c4:	str	r0, [sp, #4]
   135c8:	mov	r0, r1
   135cc:	movw	r1, #0
   135d0:	ldr	r2, [sp, #8]
   135d4:	ldr	r3, [sp, #4]
   135d8:	bl	11308 <error@plt>
   135dc:	ldr	r0, [fp, #-12]
   135e0:	str	r0, [fp, #-4]
   135e4:	b	13640 <__assert_fail@plt+0x21ac>
   135e8:	movw	r0, #19872	; 0x4da0
   135ec:	movt	r0, #4
   135f0:	bl	11f00 <__assert_fail@plt+0xa6c>
   135f4:	tst	r0, #1
   135f8:	beq	13620 <__assert_fail@plt+0x218c>
   135fc:	movw	r0, #17248	; 0x4360
   13600:	movt	r0, #4
   13604:	bl	11380 <gettext@plt>
   13608:	movw	lr, #2
   1360c:	str	r0, [sp]
   13610:	mov	r0, lr
   13614:	movw	r1, #0
   13618:	ldr	r2, [sp]
   1361c:	bl	11308 <error@plt>
   13620:	movw	r0, #24984	; 0x6198
   13624:	movt	r0, #5
   13628:	ldr	r1, [r0]
   1362c:	add	r2, r1, #4
   13630:	str	r2, [r0]
   13634:	ldr	r0, [r1]
   13638:	bl	12f04 <__assert_fail@plt+0x1a70>
   1363c:	str	r0, [fp, #-4]
   13640:	ldr	r0, [fp, #-4]
   13644:	mov	sp, fp
   13648:	pop	{fp, pc}
   1364c:	push	{fp, lr}
   13650:	mov	fp, sp
   13654:	sub	sp, sp, #80	; 0x50
   13658:	str	r0, [fp, #-4]
   1365c:	str	r1, [fp, #-8]
   13660:	movw	r0, #0
   13664:	str	r0, [sp, #12]
   13668:	ldr	r0, [fp, #-4]
   1366c:	str	r0, [sp, #32]
   13670:	movw	r0, #0
   13674:	strb	r0, [sp, #16]
   13678:	add	r1, sp, #16
   1367c:	add	r1, r1, #4
   13680:	str	r0, [sp, #4]
   13684:	mov	r0, r1
   13688:	ldr	r1, [sp, #4]
   1368c:	and	r1, r1, #255	; 0xff
   13690:	movw	r2, #8
   13694:	bl	113d4 <memset@plt>
   13698:	ldr	r0, [sp, #4]
   1369c:	strb	r0, [sp, #28]
   136a0:	add	r0, sp, #16
   136a4:	bl	20f00 <__assert_fail@plt+0xfa6c>
   136a8:	ldrb	r0, [sp, #40]	; 0x28
   136ac:	tst	r0, #1
   136b0:	movw	r0, #0
   136b4:	str	r0, [sp]
   136b8:	beq	136d0 <__assert_fail@plt+0x223c>
   136bc:	ldr	r0, [sp, #44]	; 0x2c
   136c0:	cmp	r0, #0
   136c4:	movw	r0, #0
   136c8:	moveq	r0, #1
   136cc:	str	r0, [sp]
   136d0:	ldr	r0, [sp]
   136d4:	mvn	r1, #0
   136d8:	eor	r0, r0, r1
   136dc:	tst	r0, #1
   136e0:	beq	13730 <__assert_fail@plt+0x229c>
   136e4:	ldr	r0, [sp, #32]
   136e8:	ldr	r1, [fp, #-4]
   136ec:	sub	r0, r0, r1
   136f0:	str	r0, [sp, #8]
   136f4:	ldr	r0, [sp, #8]
   136f8:	ldr	r1, [fp, #-8]
   136fc:	cmp	r0, r1
   13700:	bcc	13708 <__assert_fail@plt+0x2274>
   13704:	b	13730 <__assert_fail@plt+0x229c>
   13708:	ldr	r0, [sp, #12]
   1370c:	add	r0, r0, #1
   13710:	str	r0, [sp, #12]
   13714:	ldr	r0, [sp, #36]	; 0x24
   13718:	ldr	r1, [sp, #32]
   1371c:	add	r0, r1, r0
   13720:	str	r0, [sp, #32]
   13724:	movw	r0, #0
   13728:	strb	r0, [sp, #28]
   1372c:	b	136a0 <__assert_fail@plt+0x220c>
   13730:	ldr	r0, [sp, #12]
   13734:	mov	sp, fp
   13738:	pop	{fp, pc}
   1373c:	sub	sp, sp, #4
   13740:	str	r0, [sp]
   13744:	ldr	r0, [sp]
   13748:	movw	r1, #24988	; 0x619c
   1374c:	movt	r1, #5
   13750:	str	r0, [r1]
   13754:	add	sp, sp, #4
   13758:	bx	lr
   1375c:	sub	sp, sp, #4
   13760:	and	r0, r0, #1
   13764:	strb	r0, [sp, #3]
   13768:	ldrb	r0, [sp, #3]
   1376c:	and	r0, r0, #1
   13770:	movw	r1, #24992	; 0x61a0
   13774:	movt	r1, #5
   13778:	strb	r0, [r1]
   1377c:	add	sp, sp, #4
   13780:	bx	lr
   13784:	push	{fp, lr}
   13788:	mov	fp, sp
   1378c:	sub	sp, sp, #24
   13790:	movw	r0, #24972	; 0x618c
   13794:	movt	r0, #5
   13798:	ldr	r0, [r0]
   1379c:	bl	3fda4 <__assert_fail@plt+0x2e910>
   137a0:	cmp	r0, #0
   137a4:	beq	13874 <__assert_fail@plt+0x23e0>
   137a8:	movw	r0, #24992	; 0x61a0
   137ac:	movt	r0, #5
   137b0:	ldrb	r0, [r0]
   137b4:	tst	r0, #1
   137b8:	beq	137cc <__assert_fail@plt+0x2338>
   137bc:	bl	113b0 <__errno_location@plt>
   137c0:	ldr	r0, [r0]
   137c4:	cmp	r0, #32
   137c8:	beq	13874 <__assert_fail@plt+0x23e0>
   137cc:	movw	r0, #17372	; 0x43dc
   137d0:	movt	r0, #4
   137d4:	bl	11380 <gettext@plt>
   137d8:	str	r0, [fp, #-4]
   137dc:	movw	r0, #24988	; 0x619c
   137e0:	movt	r0, #5
   137e4:	ldr	r0, [r0]
   137e8:	movw	lr, #0
   137ec:	cmp	r0, lr
   137f0:	beq	13848 <__assert_fail@plt+0x23b4>
   137f4:	bl	113b0 <__errno_location@plt>
   137f8:	ldr	r1, [r0]
   137fc:	movw	r0, #24988	; 0x619c
   13800:	movt	r0, #5
   13804:	ldr	r0, [r0]
   13808:	str	r1, [fp, #-8]
   1380c:	bl	235e0 <__assert_fail@plt+0x1214c>
   13810:	ldr	r1, [fp, #-4]
   13814:	movw	lr, #0
   13818:	str	r0, [sp, #12]
   1381c:	mov	r0, lr
   13820:	ldr	lr, [fp, #-8]
   13824:	str	r1, [sp, #8]
   13828:	mov	r1, lr
   1382c:	movw	r2, #17384	; 0x43e8
   13830:	movt	r2, #4
   13834:	ldr	r3, [sp, #12]
   13838:	ldr	ip, [sp, #8]
   1383c:	str	ip, [sp]
   13840:	bl	11308 <error@plt>
   13844:	b	13864 <__assert_fail@plt+0x23d0>
   13848:	bl	113b0 <__errno_location@plt>
   1384c:	ldr	r1, [r0]
   13850:	ldr	r3, [fp, #-4]
   13854:	movw	r0, #0
   13858:	movw	r2, #17388	; 0x43ec
   1385c:	movt	r2, #4
   13860:	bl	11308 <error@plt>
   13864:	movw	r0, #24868	; 0x6124
   13868:	movt	r0, #5
   1386c:	ldr	r0, [r0]
   13870:	bl	1123c <_exit@plt>
   13874:	movw	r0, #24968	; 0x6188
   13878:	movt	r0, #5
   1387c:	ldr	r0, [r0]
   13880:	bl	3fda4 <__assert_fail@plt+0x2e910>
   13884:	cmp	r0, #0
   13888:	beq	1389c <__assert_fail@plt+0x2408>
   1388c:	movw	r0, #24868	; 0x6124
   13890:	movt	r0, #5
   13894:	ldr	r0, [r0]
   13898:	bl	1123c <_exit@plt>
   1389c:	mov	sp, fp
   138a0:	pop	{fp, pc}
   138a4:	push	{fp, lr}
   138a8:	mov	fp, sp
   138ac:	sub	sp, sp, #16
   138b0:	str	r0, [fp, #-4]
   138b4:	bl	113b0 <__errno_location@plt>
   138b8:	ldr	r0, [r0]
   138bc:	str	r0, [sp, #8]
   138c0:	ldr	r0, [fp, #-4]
   138c4:	bl	11224 <free@plt>
   138c8:	ldr	r0, [sp, #8]
   138cc:	str	r0, [sp, #4]
   138d0:	bl	113b0 <__errno_location@plt>
   138d4:	ldr	lr, [sp, #4]
   138d8:	str	lr, [r0]
   138dc:	mov	sp, fp
   138e0:	pop	{fp, pc}
   138e4:	andeq	r0, r0, r0
   138e8:	sub	sp, sp, #12
   138ec:	str	r0, [sp, #8]
   138f0:	str	r1, [sp, #4]
   138f4:	str	r2, [sp]
   138f8:	ldr	r0, [sp, #8]
   138fc:	movw	r1, #0
   13900:	cmp	r0, r1
   13904:	beq	1391c <__assert_fail@plt+0x2488>
   13908:	movw	r0, #24872	; 0x6128
   1390c:	movt	r0, #5
   13910:	ldr	r0, [r0]
   13914:	ldr	r1, [sp, #8]
   13918:	str	r0, [r1]
   1391c:	ldr	r0, [sp, #4]
   13920:	movw	r1, #0
   13924:	cmp	r0, r1
   13928:	beq	13940 <__assert_fail@plt+0x24ac>
   1392c:	movw	r0, #24876	; 0x612c
   13930:	movt	r0, #5
   13934:	ldr	r0, [r0]
   13938:	ldr	r1, [sp, #4]
   1393c:	str	r0, [r1]
   13940:	ldr	r0, [sp]
   13944:	movw	r1, #0
   13948:	cmp	r0, r1
   1394c:	beq	13964 <__assert_fail@plt+0x24d0>
   13950:	movw	r0, #24880	; 0x6130
   13954:	movt	r0, #5
   13958:	ldr	r0, [r0]
   1395c:	ldr	r1, [sp]
   13960:	str	r0, [r1]
   13964:	add	sp, sp, #12
   13968:	bx	lr
   1396c:	sub	sp, sp, #12
   13970:	str	r0, [sp, #8]
   13974:	str	r1, [sp, #4]
   13978:	str	r2, [sp]
   1397c:	ldr	r0, [sp, #8]
   13980:	movw	r1, #0
   13984:	cmp	r0, r1
   13988:	bne	13998 <__assert_fail@plt+0x2504>
   1398c:	movw	r0, #14856	; 0x3a08
   13990:	movt	r0, #1
   13994:	str	r0, [sp, #8]
   13998:	ldr	r0, [sp, #4]
   1399c:	movw	r1, #0
   139a0:	cmp	r0, r1
   139a4:	bne	139b4 <__assert_fail@plt+0x2520>
   139a8:	movw	r0, #14972	; 0x3a7c
   139ac:	movt	r0, #1
   139b0:	str	r0, [sp, #4]
   139b4:	ldr	r0, [sp]
   139b8:	movw	r1, #0
   139bc:	cmp	r0, r1
   139c0:	bne	139d0 <__assert_fail@plt+0x253c>
   139c4:	movw	r0, #15052	; 0x3acc
   139c8:	movt	r0, #1
   139cc:	str	r0, [sp]
   139d0:	ldr	r0, [sp, #8]
   139d4:	movw	r1, #24872	; 0x6128
   139d8:	movt	r1, #5
   139dc:	str	r0, [r1]
   139e0:	ldr	r0, [sp, #4]
   139e4:	movw	r1, #24876	; 0x612c
   139e8:	movt	r1, #5
   139ec:	str	r0, [r1]
   139f0:	ldr	r0, [sp]
   139f4:	movw	r1, #24880	; 0x6130
   139f8:	movt	r1, #5
   139fc:	str	r0, [r1]
   13a00:	add	sp, sp, #12
   13a04:	bx	lr
   13a08:	push	{fp, lr}
   13a0c:	mov	fp, sp
   13a10:	sub	sp, sp, #8
   13a14:	str	r0, [sp, #4]
   13a18:	ldr	r0, [sp, #4]
   13a1c:	cmp	r0, #0
   13a20:	bls	13a28 <__assert_fail@plt+0x2594>
   13a24:	b	13a48 <__assert_fail@plt+0x25b4>
   13a28:	movw	r0, #20968	; 0x51e8
   13a2c:	movt	r0, #4
   13a30:	movw	r1, #17404	; 0x43fc
   13a34:	movt	r1, #4
   13a38:	movw	r2, #291	; 0x123
   13a3c:	movw	r3, #20098	; 0x4e82
   13a40:	movt	r3, #4
   13a44:	bl	11494 <__assert_fail@plt>
   13a48:	ldr	r0, [sp, #4]
   13a4c:	bl	3fbd8 <__assert_fail@plt+0x2e744>
   13a50:	str	r0, [sp]
   13a54:	ldr	r0, [sp]
   13a58:	movw	lr, #0
   13a5c:	cmp	r0, lr
   13a60:	bne	13a70 <__assert_fail@plt+0x25dc>
   13a64:	movw	r0, #20130	; 0x4ea2
   13a68:	movt	r0, #4
   13a6c:	bl	1a9ec <__assert_fail@plt+0x9558>
   13a70:	ldr	r0, [sp]
   13a74:	mov	sp, fp
   13a78:	pop	{fp, pc}
   13a7c:	push	{fp, lr}
   13a80:	mov	fp, sp
   13a84:	sub	sp, sp, #16
   13a88:	str	r0, [fp, #-4]
   13a8c:	str	r1, [sp, #8]
   13a90:	str	r2, [sp, #4]
   13a94:	ldr	r0, [fp, #-4]
   13a98:	ldr	r1, [sp, #4]
   13a9c:	bl	3fc48 <__assert_fail@plt+0x2e7b4>
   13aa0:	str	r0, [sp]
   13aa4:	ldr	r0, [sp]
   13aa8:	movw	r1, #0
   13aac:	cmp	r0, r1
   13ab0:	bne	13ac0 <__assert_fail@plt+0x262c>
   13ab4:	movw	r0, #20175	; 0x4ecf
   13ab8:	movt	r0, #4
   13abc:	bl	1a9ec <__assert_fail@plt+0x9558>
   13ac0:	ldr	r0, [sp]
   13ac4:	mov	sp, fp
   13ac8:	pop	{fp, pc}
   13acc:	push	{fp, lr}
   13ad0:	mov	fp, sp
   13ad4:	sub	sp, sp, #8
   13ad8:	str	r0, [sp, #4]
   13adc:	str	r1, [sp]
   13ae0:	ldr	r0, [sp, #4]
   13ae4:	bl	138a4 <__assert_fail@plt+0x2410>
   13ae8:	mov	sp, fp
   13aec:	pop	{fp, pc}
   13af0:	sub	sp, sp, #16
   13af4:	str	r0, [sp, #12]
   13af8:	str	r1, [sp, #8]
   13afc:	str	r2, [sp, #4]
   13b00:	movw	r0, #0
   13b04:	str	r0, [sp]
   13b08:	ldr	r0, [sp]
   13b0c:	ldr	r1, [sp, #4]
   13b10:	cmp	r0, r1
   13b14:	bge	13b40 <__assert_fail@plt+0x26ac>
   13b18:	ldr	r0, [sp, #8]
   13b1c:	ldr	r1, [sp]
   13b20:	ldr	r0, [r0, r1, lsl #2]
   13b24:	ldr	r2, [sp, #12]
   13b28:	add	r1, r2, r1, lsl #2
   13b2c:	str	r0, [r1]
   13b30:	ldr	r0, [sp]
   13b34:	add	r0, r0, #1
   13b38:	str	r0, [sp]
   13b3c:	b	13b08 <__assert_fail@plt+0x2674>
   13b40:	add	sp, sp, #16
   13b44:	bx	lr
   13b48:	sub	sp, sp, #12
   13b4c:	str	r0, [sp, #8]
   13b50:	str	r1, [sp, #4]
   13b54:	str	r2, [sp]
   13b58:	ldr	r0, [sp]
   13b5c:	mvn	r1, #0
   13b60:	add	r0, r0, r1
   13b64:	str	r0, [sp]
   13b68:	cmp	r0, #0
   13b6c:	blt	13b8c <__assert_fail@plt+0x26f8>
   13b70:	ldr	r0, [sp, #4]
   13b74:	ldr	r1, [sp]
   13b78:	ldr	r0, [r0, r1, lsl #2]
   13b7c:	ldr	r2, [sp, #8]
   13b80:	add	r1, r2, r1, lsl #2
   13b84:	str	r0, [r1]
   13b88:	b	13b58 <__assert_fail@plt+0x26c4>
   13b8c:	add	sp, sp, #12
   13b90:	bx	lr
   13b94:	sub	sp, sp, #16
   13b98:	str	r0, [sp, #8]
   13b9c:	str	r1, [sp, #4]
   13ba0:	str	r2, [sp]
   13ba4:	ldr	r0, [sp]
   13ba8:	mvn	r1, #0
   13bac:	add	r0, r0, r1
   13bb0:	str	r0, [sp]
   13bb4:	cmp	r0, #0
   13bb8:	blt	13c18 <__assert_fail@plt+0x2784>
   13bbc:	ldr	r0, [sp, #8]
   13bc0:	ldr	r1, [sp]
   13bc4:	ldr	r0, [r0, r1, lsl #2]
   13bc8:	ldr	r2, [sp, #4]
   13bcc:	add	r1, r2, r1, lsl #2
   13bd0:	ldr	r1, [r1]
   13bd4:	cmp	r0, r1
   13bd8:	beq	13c14 <__assert_fail@plt+0x2780>
   13bdc:	ldr	r0, [sp, #8]
   13be0:	ldr	r1, [sp]
   13be4:	ldr	r0, [r0, r1, lsl #2]
   13be8:	ldr	r2, [sp, #4]
   13bec:	add	r1, r2, r1, lsl #2
   13bf0:	ldr	r1, [r1]
   13bf4:	cmp	r0, r1
   13bf8:	movw	r0, #0
   13bfc:	movhi	r0, #1
   13c00:	tst	r0, #1
   13c04:	movw	r0, #1
   13c08:	mvneq	r0, #0
   13c0c:	str	r0, [sp, #12]
   13c10:	b	13c20 <__assert_fail@plt+0x278c>
   13c14:	b	13ba4 <__assert_fail@plt+0x2710>
   13c18:	movw	r0, #0
   13c1c:	str	r0, [sp, #12]
   13c20:	ldr	r0, [sp, #12]
   13c24:	add	sp, sp, #16
   13c28:	bx	lr
   13c2c:	push	{fp, lr}
   13c30:	mov	fp, sp
   13c34:	sub	sp, sp, #8
   13c38:	str	r0, [sp, #4]
   13c3c:	str	r1, [sp]
   13c40:	ldr	r0, [sp, #4]
   13c44:	ldr	r1, [sp]
   13c48:	bl	13c64 <__assert_fail@plt+0x27d0>
   13c4c:	cmp	r0, #0
   13c50:	movw	r0, #0
   13c54:	moveq	r0, #1
   13c58:	and	r0, r0, #1
   13c5c:	mov	sp, fp
   13c60:	pop	{fp, pc}
   13c64:	sub	sp, sp, #12
   13c68:	str	r0, [sp, #8]
   13c6c:	str	r1, [sp, #4]
   13c70:	ldr	r0, [sp, #4]
   13c74:	cmp	r0, #0
   13c78:	movw	r0, #0
   13c7c:	str	r0, [sp]
   13c80:	ble	13ca8 <__assert_fail@plt+0x2814>
   13c84:	ldr	r0, [sp, #8]
   13c88:	ldr	r1, [sp, #4]
   13c8c:	sub	r1, r1, #1
   13c90:	add	r0, r0, r1, lsl #2
   13c94:	ldr	r0, [r0]
   13c98:	cmp	r0, #0
   13c9c:	movw	r0, #0
   13ca0:	moveq	r0, #1
   13ca4:	str	r0, [sp]
   13ca8:	ldr	r0, [sp]
   13cac:	tst	r0, #1
   13cb0:	beq	13cc8 <__assert_fail@plt+0x2834>
   13cb4:	ldr	r0, [sp, #4]
   13cb8:	mvn	r1, #0
   13cbc:	add	r0, r0, r1
   13cc0:	str	r0, [sp, #4]
   13cc4:	b	13c70 <__assert_fail@plt+0x27dc>
   13cc8:	ldr	r0, [sp, #4]
   13ccc:	add	sp, sp, #12
   13cd0:	bx	lr
   13cd4:	sub	sp, sp, #8
   13cd8:	str	r0, [sp, #4]
   13cdc:	str	r1, [sp]
   13ce0:	ldr	r0, [sp]
   13ce4:	mvn	r1, #0
   13ce8:	add	r0, r0, r1
   13cec:	str	r0, [sp]
   13cf0:	cmp	r0, #0
   13cf4:	blt	13d10 <__assert_fail@plt+0x287c>
   13cf8:	ldr	r0, [sp, #4]
   13cfc:	ldr	r1, [sp]
   13d00:	add	r0, r0, r1, lsl #2
   13d04:	movw	r1, #0
   13d08:	str	r1, [r0]
   13d0c:	b	13ce0 <__assert_fail@plt+0x284c>
   13d10:	add	sp, sp, #8
   13d14:	bx	lr
   13d18:	push	{fp, lr}
   13d1c:	mov	fp, sp
   13d20:	sub	sp, sp, #24
   13d24:	str	r0, [fp, #-4]
   13d28:	str	r1, [fp, #-8]
   13d2c:	str	r2, [sp, #12]
   13d30:	str	r3, [sp, #8]
   13d34:	ldr	r0, [sp, #12]
   13d38:	cmp	r0, #0
   13d3c:	ble	13d44 <__assert_fail@plt+0x28b0>
   13d40:	b	13d64 <__assert_fail@plt+0x28d0>
   13d44:	movw	r0, #20785	; 0x5131
   13d48:	movt	r0, #4
   13d4c:	movw	r1, #17404	; 0x43fc
   13d50:	movt	r1, #4
   13d54:	movw	r2, #442	; 0x1ba
   13d58:	movw	r3, #17421	; 0x440d
   13d5c:	movt	r3, #4
   13d60:	bl	11494 <__assert_fail@plt>
   13d64:	movw	r0, #0
   13d68:	str	r0, [sp, #4]
   13d6c:	ldr	r0, [fp, #-8]
   13d70:	ldr	r1, [sp, #4]
   13d74:	ldr	r0, [r0, r1, lsl #2]
   13d78:	ldr	r1, [sp, #8]
   13d7c:	add	r0, r0, r1
   13d80:	str	r0, [sp]
   13d84:	ldr	r0, [sp]
   13d88:	ldr	r1, [sp, #8]
   13d8c:	mov	r2, #0
   13d90:	cmp	r0, r1
   13d94:	movwcc	r2, #1
   13d98:	str	r2, [sp, #8]
   13d9c:	ldr	r0, [sp]
   13da0:	ldr	r1, [fp, #-4]
   13da4:	ldr	r2, [sp, #4]
   13da8:	add	r1, r1, r2, lsl #2
   13dac:	str	r0, [r1]
   13db0:	ldr	r0, [sp, #4]
   13db4:	add	r0, r0, #1
   13db8:	str	r0, [sp, #4]
   13dbc:	ldr	r1, [sp, #12]
   13dc0:	cmp	r0, r1
   13dc4:	blt	13d6c <__assert_fail@plt+0x28d8>
   13dc8:	ldr	r0, [sp, #8]
   13dcc:	mov	sp, fp
   13dd0:	pop	{fp, pc}
   13dd4:	sub	sp, sp, #36	; 0x24
   13dd8:	str	r0, [sp, #32]
   13ddc:	str	r1, [sp, #28]
   13de0:	str	r2, [sp, #24]
   13de4:	str	r3, [sp, #20]
   13de8:	movw	r0, #0
   13dec:	str	r0, [sp, #16]
   13df0:	str	r0, [sp, #12]
   13df4:	ldr	r0, [sp, #16]
   13df8:	ldr	r1, [sp, #20]
   13dfc:	cmp	r0, r1
   13e00:	bge	13e9c <__assert_fail@plt+0x2a08>
   13e04:	ldr	r0, [sp, #28]
   13e08:	ldr	r1, [sp, #16]
   13e0c:	ldr	r0, [r0, r1, lsl #2]
   13e10:	str	r0, [sp, #8]
   13e14:	ldr	r0, [sp, #24]
   13e18:	ldr	r1, [sp, #16]
   13e1c:	ldr	r0, [r0, r1, lsl #2]
   13e20:	str	r0, [sp, #4]
   13e24:	ldr	r0, [sp, #8]
   13e28:	ldr	r1, [sp, #12]
   13e2c:	add	r0, r0, r1
   13e30:	str	r0, [sp]
   13e34:	ldr	r0, [sp]
   13e38:	ldr	r1, [sp, #12]
   13e3c:	mov	r2, #0
   13e40:	cmp	r0, r1
   13e44:	movwcc	r2, #1
   13e48:	str	r2, [sp, #12]
   13e4c:	ldr	r0, [sp, #4]
   13e50:	ldr	r1, [sp]
   13e54:	add	r0, r1, r0
   13e58:	str	r0, [sp]
   13e5c:	ldr	r0, [sp]
   13e60:	ldr	r1, [sp, #4]
   13e64:	ldr	r2, [sp, #12]
   13e68:	add	r3, r2, #1
   13e6c:	cmp	r0, r1
   13e70:	movcc	r2, r3
   13e74:	str	r2, [sp, #12]
   13e78:	ldr	r0, [sp]
   13e7c:	ldr	r1, [sp, #32]
   13e80:	ldr	r2, [sp, #16]
   13e84:	add	r1, r1, r2, lsl #2
   13e88:	str	r0, [r1]
   13e8c:	ldr	r0, [sp, #16]
   13e90:	add	r0, r0, #1
   13e94:	str	r0, [sp, #16]
   13e98:	b	13df4 <__assert_fail@plt+0x2960>
   13e9c:	ldr	r0, [sp, #12]
   13ea0:	add	sp, sp, #36	; 0x24
   13ea4:	bx	lr
   13ea8:	push	{fp, lr}
   13eac:	mov	fp, sp
   13eb0:	sub	sp, sp, #24
   13eb4:	ldr	ip, [fp, #8]
   13eb8:	str	r0, [fp, #-4]
   13ebc:	str	r1, [fp, #-8]
   13ec0:	str	r2, [sp, #12]
   13ec4:	str	r3, [sp, #8]
   13ec8:	ldr	r0, [sp, #12]
   13ecc:	ldr	r1, [fp, #8]
   13ed0:	cmp	r0, r1
   13ed4:	str	ip, [sp]
   13ed8:	blt	13ee0 <__assert_fail@plt+0x2a4c>
   13edc:	b	13f00 <__assert_fail@plt+0x2a6c>
   13ee0:	movw	r0, #17482	; 0x444a
   13ee4:	movt	r0, #4
   13ee8:	movw	r1, #17404	; 0x43fc
   13eec:	movt	r1, #4
   13ef0:	movw	r2, #480	; 0x1e0
   13ef4:	movw	r3, #17491	; 0x4453
   13ef8:	movt	r3, #4
   13efc:	bl	11494 <__assert_fail@plt>
   13f00:	ldr	r0, [fp, #-4]
   13f04:	ldr	r1, [fp, #-8]
   13f08:	ldr	r2, [sp, #8]
   13f0c:	ldr	r3, [fp, #8]
   13f10:	bl	13dd4 <__assert_fail@plt+0x2940>
   13f14:	str	r0, [sp, #4]
   13f18:	ldr	r0, [sp, #12]
   13f1c:	ldr	r1, [fp, #8]
   13f20:	cmp	r0, r1
   13f24:	ble	13f54 <__assert_fail@plt+0x2ac0>
   13f28:	ldr	r0, [fp, #-4]
   13f2c:	ldr	r1, [fp, #8]
   13f30:	add	r0, r0, r1, lsl #2
   13f34:	ldr	r2, [fp, #-8]
   13f38:	add	r1, r2, r1, lsl #2
   13f3c:	ldr	r2, [sp, #12]
   13f40:	ldr	r3, [fp, #8]
   13f44:	sub	r2, r2, r3
   13f48:	ldr	r3, [sp, #4]
   13f4c:	bl	13d18 <__assert_fail@plt+0x2884>
   13f50:	str	r0, [sp, #4]
   13f54:	ldr	r0, [sp, #4]
   13f58:	mov	sp, fp
   13f5c:	pop	{fp, pc}
   13f60:	push	{fp, lr}
   13f64:	mov	fp, sp
   13f68:	sub	sp, sp, #32
   13f6c:	str	r0, [fp, #-4]
   13f70:	str	r1, [fp, #-8]
   13f74:	str	r2, [fp, #-12]
   13f78:	str	r3, [sp, #16]
   13f7c:	ldr	r0, [fp, #-12]
   13f80:	cmp	r0, #0
   13f84:	ble	13f8c <__assert_fail@plt+0x2af8>
   13f88:	b	13fac <__assert_fail@plt+0x2b18>
   13f8c:	movw	r0, #20785	; 0x5131
   13f90:	movt	r0, #4
   13f94:	movw	r1, #17404	; 0x43fc
   13f98:	movt	r1, #4
   13f9c:	movw	r2, #493	; 0x1ed
   13fa0:	movw	r3, #17561	; 0x4499
   13fa4:	movt	r3, #4
   13fa8:	bl	11494 <__assert_fail@plt>
   13fac:	movw	r0, #0
   13fb0:	str	r0, [sp, #12]
   13fb4:	ldr	r0, [fp, #-8]
   13fb8:	ldr	r1, [sp, #12]
   13fbc:	ldr	r0, [r0, r1, lsl #2]
   13fc0:	str	r0, [sp, #8]
   13fc4:	ldr	r0, [sp, #8]
   13fc8:	ldr	r1, [sp, #16]
   13fcc:	mov	r2, #0
   13fd0:	cmp	r0, r1
   13fd4:	movwcc	r2, #1
   13fd8:	str	r2, [sp, #4]
   13fdc:	ldr	r0, [sp, #8]
   13fe0:	ldr	r1, [sp, #16]
   13fe4:	sub	r0, r0, r1
   13fe8:	ldr	r1, [fp, #-4]
   13fec:	ldr	r2, [sp, #12]
   13ff0:	add	r1, r1, r2, lsl #2
   13ff4:	str	r0, [r1]
   13ff8:	ldr	r0, [sp, #4]
   13ffc:	str	r0, [sp, #16]
   14000:	ldr	r0, [sp, #12]
   14004:	add	r0, r0, #1
   14008:	str	r0, [sp, #12]
   1400c:	ldr	r1, [fp, #-12]
   14010:	cmp	r0, r1
   14014:	blt	13fb4 <__assert_fail@plt+0x2b20>
   14018:	ldr	r0, [sp, #16]
   1401c:	mov	sp, fp
   14020:	pop	{fp, pc}
   14024:	sub	sp, sp, #32
   14028:	str	r0, [sp, #28]
   1402c:	str	r1, [sp, #24]
   14030:	str	r2, [sp, #20]
   14034:	str	r3, [sp, #16]
   14038:	movw	r0, #0
   1403c:	str	r0, [sp, #12]
   14040:	str	r0, [sp, #8]
   14044:	ldr	r0, [sp, #12]
   14048:	ldr	r1, [sp, #16]
   1404c:	cmp	r0, r1
   14050:	bge	140e4 <__assert_fail@plt+0x2c50>
   14054:	ldr	r0, [sp, #24]
   14058:	ldr	r1, [sp, #12]
   1405c:	ldr	r0, [r0, r1, lsl #2]
   14060:	str	r0, [sp, #4]
   14064:	ldr	r0, [sp, #20]
   14068:	ldr	r1, [sp, #12]
   1406c:	ldr	r0, [r0, r1, lsl #2]
   14070:	str	r0, [sp]
   14074:	ldr	r0, [sp, #8]
   14078:	ldr	r1, [sp]
   1407c:	add	r0, r1, r0
   14080:	str	r0, [sp]
   14084:	ldr	r0, [sp]
   14088:	ldr	r1, [sp, #8]
   1408c:	mov	r2, #0
   14090:	cmp	r0, r1
   14094:	movwcc	r2, #1
   14098:	str	r2, [sp, #8]
   1409c:	ldr	r0, [sp, #4]
   140a0:	ldr	r1, [sp]
   140a4:	ldr	r2, [sp, #8]
   140a8:	add	r3, r2, #1
   140ac:	cmp	r0, r1
   140b0:	movcc	r2, r3
   140b4:	str	r2, [sp, #8]
   140b8:	ldr	r0, [sp, #4]
   140bc:	ldr	r1, [sp]
   140c0:	sub	r0, r0, r1
   140c4:	ldr	r1, [sp, #28]
   140c8:	ldr	r2, [sp, #12]
   140cc:	add	r1, r1, r2, lsl #2
   140d0:	str	r0, [r1]
   140d4:	ldr	r0, [sp, #12]
   140d8:	add	r0, r0, #1
   140dc:	str	r0, [sp, #12]
   140e0:	b	14044 <__assert_fail@plt+0x2bb0>
   140e4:	ldr	r0, [sp, #8]
   140e8:	add	sp, sp, #32
   140ec:	bx	lr
   140f0:	push	{fp, lr}
   140f4:	mov	fp, sp
   140f8:	sub	sp, sp, #24
   140fc:	ldr	ip, [fp, #8]
   14100:	str	r0, [fp, #-4]
   14104:	str	r1, [fp, #-8]
   14108:	str	r2, [sp, #12]
   1410c:	str	r3, [sp, #8]
   14110:	ldr	r0, [sp, #12]
   14114:	ldr	r1, [fp, #8]
   14118:	cmp	r0, r1
   1411c:	str	ip, [sp]
   14120:	blt	14128 <__assert_fail@plt+0x2c94>
   14124:	b	14148 <__assert_fail@plt+0x2cb4>
   14128:	movw	r0, #17482	; 0x444a
   1412c:	movt	r0, #4
   14130:	movw	r1, #17404	; 0x43fc
   14134:	movt	r1, #4
   14138:	movw	r2, #532	; 0x214
   1413c:	movw	r3, #17622	; 0x44d6
   14140:	movt	r3, #4
   14144:	bl	11494 <__assert_fail@plt>
   14148:	ldr	r0, [fp, #-4]
   1414c:	ldr	r1, [fp, #-8]
   14150:	ldr	r2, [sp, #8]
   14154:	ldr	r3, [fp, #8]
   14158:	bl	14024 <__assert_fail@plt+0x2b90>
   1415c:	str	r0, [sp, #4]
   14160:	ldr	r0, [sp, #12]
   14164:	ldr	r1, [fp, #8]
   14168:	cmp	r0, r1
   1416c:	ble	1419c <__assert_fail@plt+0x2d08>
   14170:	ldr	r0, [fp, #-4]
   14174:	ldr	r1, [fp, #8]
   14178:	add	r0, r0, r1, lsl #2
   1417c:	ldr	r2, [fp, #-8]
   14180:	add	r1, r2, r1, lsl #2
   14184:	ldr	r2, [sp, #12]
   14188:	ldr	r3, [fp, #8]
   1418c:	sub	r2, r2, r3
   14190:	ldr	r3, [sp, #4]
   14194:	bl	13f60 <__assert_fail@plt+0x2acc>
   14198:	str	r0, [sp, #4]
   1419c:	ldr	r0, [sp, #4]
   141a0:	mov	sp, fp
   141a4:	pop	{fp, pc}
   141a8:	push	{fp, lr}
   141ac:	mov	fp, sp
   141b0:	sub	sp, sp, #80	; 0x50
   141b4:	str	r0, [fp, #-4]
   141b8:	str	r1, [fp, #-8]
   141bc:	str	r2, [fp, #-12]
   141c0:	str	r3, [fp, #-16]
   141c4:	ldr	r0, [fp, #-12]
   141c8:	cmp	r0, #1
   141cc:	blt	141d4 <__assert_fail@plt+0x2d40>
   141d0:	b	141f4 <__assert_fail@plt+0x2d60>
   141d4:	movw	r0, #17961	; 0x4629
   141d8:	movt	r0, #4
   141dc:	movw	r1, #17404	; 0x43fc
   141e0:	movt	r1, #4
   141e4:	movw	r2, #545	; 0x221
   141e8:	movw	r3, #17692	; 0x451c
   141ec:	movt	r3, #4
   141f0:	bl	11494 <__assert_fail@plt>
   141f4:	movw	r0, #0
   141f8:	str	r0, [fp, #-24]	; 0xffffffe8
   141fc:	ldr	r0, [fp, #-8]
   14200:	add	r1, r0, #4
   14204:	str	r1, [fp, #-8]
   14208:	ldr	r0, [r0]
   1420c:	str	r0, [fp, #-20]	; 0xffffffec
   14210:	movw	r0, #32
   14214:	str	r0, [fp, #-36]	; 0xffffffdc
   14218:	ldr	r0, [fp, #-20]	; 0xffffffec
   1421c:	str	r0, [sp, #8]
   14220:	ldr	r0, [fp, #-16]
   14224:	str	r0, [sp, #4]
   14228:	ldr	r0, [sp, #8]
   1422c:	movw	r1, #65535	; 0xffff
   14230:	and	r0, r0, r1
   14234:	str	r0, [sp, #24]
   14238:	ldr	r0, [sp, #8]
   1423c:	lsr	r0, r0, #16
   14240:	str	r0, [sp, #16]
   14244:	ldr	r0, [sp, #4]
   14248:	and	r0, r0, r1
   1424c:	str	r0, [sp, #20]
   14250:	ldr	r0, [sp, #4]
   14254:	lsr	r0, r0, #16
   14258:	str	r0, [sp, #12]
   1425c:	ldr	r0, [sp, #24]
   14260:	ldr	r1, [sp, #20]
   14264:	mul	r0, r0, r1
   14268:	str	r0, [sp, #40]	; 0x28
   1426c:	ldr	r0, [sp, #24]
   14270:	ldr	r1, [sp, #12]
   14274:	mul	r0, r0, r1
   14278:	str	r0, [sp, #36]	; 0x24
   1427c:	ldr	r0, [sp, #16]
   14280:	ldr	r1, [sp, #20]
   14284:	mul	r0, r0, r1
   14288:	str	r0, [sp, #32]
   1428c:	ldr	r0, [sp, #16]
   14290:	ldr	r1, [sp, #12]
   14294:	mul	r0, r0, r1
   14298:	str	r0, [sp, #28]
   1429c:	ldr	r0, [sp, #40]	; 0x28
   142a0:	lsr	r0, r0, #16
   142a4:	ldr	r1, [sp, #36]	; 0x24
   142a8:	add	r0, r1, r0
   142ac:	str	r0, [sp, #36]	; 0x24
   142b0:	ldr	r0, [sp, #32]
   142b4:	ldr	r1, [sp, #36]	; 0x24
   142b8:	add	r0, r1, r0
   142bc:	str	r0, [sp, #36]	; 0x24
   142c0:	ldr	r0, [sp, #36]	; 0x24
   142c4:	ldr	r1, [sp, #32]
   142c8:	cmp	r0, r1
   142cc:	bcs	142dc <__assert_fail@plt+0x2e48>
   142d0:	ldr	r0, [sp, #28]
   142d4:	add	r0, r0, #65536	; 0x10000
   142d8:	str	r0, [sp, #28]
   142dc:	ldr	r0, [sp, #28]
   142e0:	ldr	r1, [sp, #36]	; 0x24
   142e4:	lsr	r1, r1, #16
   142e8:	add	r0, r0, r1
   142ec:	str	r0, [fp, #-28]	; 0xffffffe4
   142f0:	ldr	r0, [sp, #36]	; 0x24
   142f4:	lsl	r0, r0, #16
   142f8:	ldr	r1, [sp, #40]	; 0x28
   142fc:	movw	r2, #65535	; 0xffff
   14300:	and	r1, r1, r2
   14304:	add	r0, r0, r1
   14308:	str	r0, [fp, #-32]	; 0xffffffe0
   1430c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14310:	ldr	r1, [fp, #-32]	; 0xffffffe0
   14314:	add	r0, r1, r0
   14318:	str	r0, [fp, #-32]	; 0xffffffe0
   1431c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14320:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14324:	cmp	r0, r1
   14328:	movw	r0, #0
   1432c:	movcc	r0, #1
   14330:	and	r0, r0, #1
   14334:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14338:	add	r0, r0, r1
   1433c:	str	r0, [fp, #-24]	; 0xffffffe8
   14340:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14344:	ldr	r1, [fp, #-4]
   14348:	add	r2, r1, #4
   1434c:	str	r2, [fp, #-4]
   14350:	str	r0, [r1]
   14354:	ldr	r0, [fp, #-12]
   14358:	mvn	r1, #0
   1435c:	add	r0, r0, r1
   14360:	str	r0, [fp, #-12]
   14364:	cmp	r0, #0
   14368:	bne	141fc <__assert_fail@plt+0x2d68>
   1436c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14370:	mov	sp, fp
   14374:	pop	{fp, pc}
   14378:	push	{fp, lr}
   1437c:	mov	fp, sp
   14380:	sub	sp, sp, #80	; 0x50
   14384:	str	r0, [fp, #-4]
   14388:	str	r1, [fp, #-8]
   1438c:	str	r2, [fp, #-12]
   14390:	str	r3, [fp, #-16]
   14394:	ldr	r0, [fp, #-12]
   14398:	cmp	r0, #1
   1439c:	blt	143a4 <__assert_fail@plt+0x2f10>
   143a0:	b	143c4 <__assert_fail@plt+0x2f30>
   143a4:	movw	r0, #17961	; 0x4629
   143a8:	movt	r0, #4
   143ac:	movw	r1, #17404	; 0x43fc
   143b0:	movt	r1, #4
   143b4:	movw	r2, #568	; 0x238
   143b8:	movw	r3, #17753	; 0x4559
   143bc:	movt	r3, #4
   143c0:	bl	11494 <__assert_fail@plt>
   143c4:	movw	r0, #0
   143c8:	str	r0, [fp, #-24]	; 0xffffffe8
   143cc:	ldr	r0, [fp, #-8]
   143d0:	add	r1, r0, #4
   143d4:	str	r1, [fp, #-8]
   143d8:	ldr	r0, [r0]
   143dc:	str	r0, [fp, #-20]	; 0xffffffec
   143e0:	movw	r0, #32
   143e4:	str	r0, [sp, #40]	; 0x28
   143e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   143ec:	str	r0, [sp, #4]
   143f0:	ldr	r0, [fp, #-16]
   143f4:	str	r0, [sp]
   143f8:	ldr	r0, [sp, #4]
   143fc:	movw	r1, #65535	; 0xffff
   14400:	and	r0, r0, r1
   14404:	str	r0, [sp, #20]
   14408:	ldr	r0, [sp, #4]
   1440c:	lsr	r0, r0, #16
   14410:	str	r0, [sp, #12]
   14414:	ldr	r0, [sp]
   14418:	and	r0, r0, r1
   1441c:	str	r0, [sp, #16]
   14420:	ldr	r0, [sp]
   14424:	lsr	r0, r0, #16
   14428:	str	r0, [sp, #8]
   1442c:	ldr	r0, [sp, #20]
   14430:	ldr	r1, [sp, #16]
   14434:	mul	r0, r0, r1
   14438:	str	r0, [sp, #36]	; 0x24
   1443c:	ldr	r0, [sp, #20]
   14440:	ldr	r1, [sp, #8]
   14444:	mul	r0, r0, r1
   14448:	str	r0, [sp, #32]
   1444c:	ldr	r0, [sp, #12]
   14450:	ldr	r1, [sp, #16]
   14454:	mul	r0, r0, r1
   14458:	str	r0, [sp, #28]
   1445c:	ldr	r0, [sp, #12]
   14460:	ldr	r1, [sp, #8]
   14464:	mul	r0, r0, r1
   14468:	str	r0, [sp, #24]
   1446c:	ldr	r0, [sp, #36]	; 0x24
   14470:	lsr	r0, r0, #16
   14474:	ldr	r1, [sp, #32]
   14478:	add	r0, r1, r0
   1447c:	str	r0, [sp, #32]
   14480:	ldr	r0, [sp, #28]
   14484:	ldr	r1, [sp, #32]
   14488:	add	r0, r1, r0
   1448c:	str	r0, [sp, #32]
   14490:	ldr	r0, [sp, #32]
   14494:	ldr	r1, [sp, #28]
   14498:	cmp	r0, r1
   1449c:	bcs	144ac <__assert_fail@plt+0x3018>
   144a0:	ldr	r0, [sp, #24]
   144a4:	add	r0, r0, #65536	; 0x10000
   144a8:	str	r0, [sp, #24]
   144ac:	ldr	r0, [sp, #24]
   144b0:	ldr	r1, [sp, #32]
   144b4:	lsr	r1, r1, #16
   144b8:	add	r0, r0, r1
   144bc:	str	r0, [fp, #-28]	; 0xffffffe4
   144c0:	ldr	r0, [sp, #32]
   144c4:	lsl	r0, r0, #16
   144c8:	ldr	r1, [sp, #36]	; 0x24
   144cc:	movw	r2, #65535	; 0xffff
   144d0:	and	r1, r1, r2
   144d4:	add	r0, r0, r1
   144d8:	str	r0, [fp, #-32]	; 0xffffffe0
   144dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   144e0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   144e4:	add	r0, r1, r0
   144e8:	str	r0, [fp, #-32]	; 0xffffffe0
   144ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   144f0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   144f4:	cmp	r0, r1
   144f8:	movw	r0, #0
   144fc:	movcc	r0, #1
   14500:	and	r0, r0, #1
   14504:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14508:	add	r0, r0, r1
   1450c:	str	r0, [fp, #-24]	; 0xffffffe8
   14510:	ldr	r0, [fp, #-4]
   14514:	ldr	r0, [r0]
   14518:	str	r0, [fp, #-36]	; 0xffffffdc
   1451c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14520:	ldr	r1, [fp, #-32]	; 0xffffffe0
   14524:	add	r0, r0, r1
   14528:	str	r0, [fp, #-32]	; 0xffffffe0
   1452c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14530:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14534:	cmp	r0, r1
   14538:	movw	r0, #0
   1453c:	movcc	r0, #1
   14540:	and	r0, r0, #1
   14544:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14548:	add	r0, r1, r0
   1454c:	str	r0, [fp, #-24]	; 0xffffffe8
   14550:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14554:	ldr	r1, [fp, #-4]
   14558:	add	r2, r1, #4
   1455c:	str	r2, [fp, #-4]
   14560:	str	r0, [r1]
   14564:	ldr	r0, [fp, #-12]
   14568:	mvn	r1, #0
   1456c:	add	r0, r0, r1
   14570:	str	r0, [fp, #-12]
   14574:	cmp	r0, #0
   14578:	bne	143cc <__assert_fail@plt+0x2f38>
   1457c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14580:	mov	sp, fp
   14584:	pop	{fp, pc}
   14588:	push	{fp, lr}
   1458c:	mov	fp, sp
   14590:	sub	sp, sp, #80	; 0x50
   14594:	str	r0, [fp, #-4]
   14598:	str	r1, [fp, #-8]
   1459c:	str	r2, [fp, #-12]
   145a0:	str	r3, [fp, #-16]
   145a4:	ldr	r0, [fp, #-12]
   145a8:	cmp	r0, #1
   145ac:	blt	145b4 <__assert_fail@plt+0x3120>
   145b0:	b	145d4 <__assert_fail@plt+0x3140>
   145b4:	movw	r0, #17961	; 0x4629
   145b8:	movt	r0, #4
   145bc:	movw	r1, #17404	; 0x43fc
   145c0:	movt	r1, #4
   145c4:	movw	r2, #594	; 0x252
   145c8:	movw	r3, #17817	; 0x4599
   145cc:	movt	r3, #4
   145d0:	bl	11494 <__assert_fail@plt>
   145d4:	movw	r0, #0
   145d8:	str	r0, [fp, #-24]	; 0xffffffe8
   145dc:	ldr	r0, [fp, #-8]
   145e0:	add	r1, r0, #4
   145e4:	str	r1, [fp, #-8]
   145e8:	ldr	r0, [r0]
   145ec:	str	r0, [fp, #-20]	; 0xffffffec
   145f0:	movw	r0, #32
   145f4:	str	r0, [sp, #40]	; 0x28
   145f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   145fc:	str	r0, [sp, #4]
   14600:	ldr	r0, [fp, #-16]
   14604:	str	r0, [sp]
   14608:	ldr	r0, [sp, #4]
   1460c:	movw	r1, #65535	; 0xffff
   14610:	and	r0, r0, r1
   14614:	str	r0, [sp, #20]
   14618:	ldr	r0, [sp, #4]
   1461c:	lsr	r0, r0, #16
   14620:	str	r0, [sp, #12]
   14624:	ldr	r0, [sp]
   14628:	and	r0, r0, r1
   1462c:	str	r0, [sp, #16]
   14630:	ldr	r0, [sp]
   14634:	lsr	r0, r0, #16
   14638:	str	r0, [sp, #8]
   1463c:	ldr	r0, [sp, #20]
   14640:	ldr	r1, [sp, #16]
   14644:	mul	r0, r0, r1
   14648:	str	r0, [sp, #36]	; 0x24
   1464c:	ldr	r0, [sp, #20]
   14650:	ldr	r1, [sp, #8]
   14654:	mul	r0, r0, r1
   14658:	str	r0, [sp, #32]
   1465c:	ldr	r0, [sp, #12]
   14660:	ldr	r1, [sp, #16]
   14664:	mul	r0, r0, r1
   14668:	str	r0, [sp, #28]
   1466c:	ldr	r0, [sp, #12]
   14670:	ldr	r1, [sp, #8]
   14674:	mul	r0, r0, r1
   14678:	str	r0, [sp, #24]
   1467c:	ldr	r0, [sp, #36]	; 0x24
   14680:	lsr	r0, r0, #16
   14684:	ldr	r1, [sp, #32]
   14688:	add	r0, r1, r0
   1468c:	str	r0, [sp, #32]
   14690:	ldr	r0, [sp, #28]
   14694:	ldr	r1, [sp, #32]
   14698:	add	r0, r1, r0
   1469c:	str	r0, [sp, #32]
   146a0:	ldr	r0, [sp, #32]
   146a4:	ldr	r1, [sp, #28]
   146a8:	cmp	r0, r1
   146ac:	bcs	146bc <__assert_fail@plt+0x3228>
   146b0:	ldr	r0, [sp, #24]
   146b4:	add	r0, r0, #65536	; 0x10000
   146b8:	str	r0, [sp, #24]
   146bc:	ldr	r0, [sp, #24]
   146c0:	ldr	r1, [sp, #32]
   146c4:	lsr	r1, r1, #16
   146c8:	add	r0, r0, r1
   146cc:	str	r0, [fp, #-28]	; 0xffffffe4
   146d0:	ldr	r0, [sp, #32]
   146d4:	lsl	r0, r0, #16
   146d8:	ldr	r1, [sp, #36]	; 0x24
   146dc:	movw	r2, #65535	; 0xffff
   146e0:	and	r1, r1, r2
   146e4:	add	r0, r0, r1
   146e8:	str	r0, [fp, #-32]	; 0xffffffe0
   146ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   146f0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   146f4:	add	r0, r1, r0
   146f8:	str	r0, [fp, #-32]	; 0xffffffe0
   146fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14700:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14704:	cmp	r0, r1
   14708:	movw	r0, #0
   1470c:	movcc	r0, #1
   14710:	and	r0, r0, #1
   14714:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14718:	add	r0, r0, r1
   1471c:	str	r0, [fp, #-24]	; 0xffffffe8
   14720:	ldr	r0, [fp, #-4]
   14724:	ldr	r0, [r0]
   14728:	str	r0, [fp, #-36]	; 0xffffffdc
   1472c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14730:	ldr	r1, [fp, #-32]	; 0xffffffe0
   14734:	sub	r0, r0, r1
   14738:	str	r0, [fp, #-32]	; 0xffffffe0
   1473c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14740:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14744:	cmp	r0, r1
   14748:	movw	r0, #0
   1474c:	movhi	r0, #1
   14750:	and	r0, r0, #1
   14754:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14758:	add	r0, r1, r0
   1475c:	str	r0, [fp, #-24]	; 0xffffffe8
   14760:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14764:	ldr	r1, [fp, #-4]
   14768:	add	r2, r1, #4
   1476c:	str	r2, [fp, #-4]
   14770:	str	r0, [r1]
   14774:	ldr	r0, [fp, #-12]
   14778:	mvn	r1, #0
   1477c:	add	r0, r0, r1
   14780:	str	r0, [fp, #-12]
   14784:	cmp	r0, #0
   14788:	bne	145dc <__assert_fail@plt+0x3148>
   1478c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14790:	mov	sp, fp
   14794:	pop	{fp, pc}
   14798:	push	{fp, lr}
   1479c:	mov	fp, sp
   147a0:	sub	sp, sp, #24
   147a4:	ldr	ip, [fp, #8]
   147a8:	str	r0, [fp, #-4]
   147ac:	str	r1, [fp, #-8]
   147b0:	str	r2, [sp, #12]
   147b4:	str	r3, [sp, #8]
   147b8:	ldr	r0, [sp, #12]
   147bc:	ldr	r1, [fp, #8]
   147c0:	cmp	r0, r1
   147c4:	str	ip, [sp, #4]
   147c8:	blt	147d0 <__assert_fail@plt+0x333c>
   147cc:	b	147f0 <__assert_fail@plt+0x335c>
   147d0:	movw	r0, #17881	; 0x45d9
   147d4:	movt	r0, #4
   147d8:	movw	r1, #17404	; 0x43fc
   147dc:	movt	r1, #4
   147e0:	movw	r2, #618	; 0x26a
   147e4:	movw	r3, #17890	; 0x45e2
   147e8:	movt	r3, #4
   147ec:	bl	11494 <__assert_fail@plt>
   147f0:	ldr	r0, [fp, #8]
   147f4:	cmp	r0, #1
   147f8:	blt	14800 <__assert_fail@plt+0x336c>
   147fc:	b	14820 <__assert_fail@plt+0x338c>
   14800:	movw	r0, #17960	; 0x4628
   14804:	movt	r0, #4
   14808:	movw	r1, #17404	; 0x43fc
   1480c:	movt	r1, #4
   14810:	movw	r2, #619	; 0x26b
   14814:	movw	r3, #17890	; 0x45e2
   14818:	movt	r3, #4
   1481c:	bl	11494 <__assert_fail@plt>
   14820:	ldr	r0, [fp, #-4]
   14824:	ldr	r1, [sp, #12]
   14828:	ldr	r2, [fp, #8]
   1482c:	add	r1, r1, r2
   14830:	add	r0, r0, r1, lsl #2
   14834:	ldr	r1, [fp, #-8]
   14838:	cmp	r0, r1
   1483c:	bls	14858 <__assert_fail@plt+0x33c4>
   14840:	ldr	r0, [fp, #-8]
   14844:	ldr	r1, [sp, #12]
   14848:	add	r0, r0, r1, lsl #2
   1484c:	ldr	r1, [fp, #-4]
   14850:	cmp	r0, r1
   14854:	bhi	1485c <__assert_fail@plt+0x33c8>
   14858:	b	1487c <__assert_fail@plt+0x33e8>
   1485c:	movw	r0, #17968	; 0x4630
   14860:	movt	r0, #4
   14864:	movw	r1, #17404	; 0x43fc
   14868:	movt	r1, #4
   1486c:	movw	r2, #620	; 0x26c
   14870:	movw	r3, #17890	; 0x45e2
   14874:	movt	r3, #4
   14878:	bl	11494 <__assert_fail@plt>
   1487c:	ldr	r0, [fp, #-4]
   14880:	ldr	r1, [sp, #12]
   14884:	ldr	r2, [fp, #8]
   14888:	add	r1, r1, r2
   1488c:	add	r0, r0, r1, lsl #2
   14890:	ldr	r1, [sp, #8]
   14894:	cmp	r0, r1
   14898:	bls	148b4 <__assert_fail@plt+0x3420>
   1489c:	ldr	r0, [sp, #8]
   148a0:	ldr	r1, [fp, #8]
   148a4:	add	r0, r0, r1, lsl #2
   148a8:	ldr	r1, [fp, #-4]
   148ac:	cmp	r0, r1
   148b0:	bhi	148b8 <__assert_fail@plt+0x3424>
   148b4:	b	148d8 <__assert_fail@plt+0x3444>
   148b8:	movw	r0, #18008	; 0x4658
   148bc:	movt	r0, #4
   148c0:	movw	r1, #17404	; 0x43fc
   148c4:	movt	r1, #4
   148c8:	movw	r2, #621	; 0x26d
   148cc:	movw	r3, #17890	; 0x45e2
   148d0:	movt	r3, #4
   148d4:	bl	11494 <__assert_fail@plt>
   148d8:	ldr	r0, [fp, #-4]
   148dc:	ldr	r1, [fp, #-8]
   148e0:	ldr	r2, [sp, #12]
   148e4:	ldr	r3, [sp, #8]
   148e8:	ldr	r3, [r3]
   148ec:	bl	141a8 <__assert_fail@plt+0x2d14>
   148f0:	ldr	r1, [fp, #-4]
   148f4:	ldr	r2, [sp, #12]
   148f8:	add	r1, r1, r2, lsl #2
   148fc:	str	r0, [r1]
   14900:	ldr	r0, [fp, #8]
   14904:	mvn	r1, #0
   14908:	add	r0, r0, r1
   1490c:	str	r0, [fp, #8]
   14910:	cmp	r0, #1
   14914:	blt	1495c <__assert_fail@plt+0x34c8>
   14918:	ldr	r0, [fp, #-4]
   1491c:	add	r0, r0, #4
   14920:	str	r0, [fp, #-4]
   14924:	ldr	r0, [sp, #8]
   14928:	add	r0, r0, #4
   1492c:	str	r0, [sp, #8]
   14930:	ldr	r0, [fp, #-4]
   14934:	ldr	r1, [fp, #-8]
   14938:	ldr	r2, [sp, #12]
   1493c:	ldr	r3, [sp, #8]
   14940:	ldr	r3, [r3]
   14944:	bl	14378 <__assert_fail@plt+0x2ee4>
   14948:	ldr	r1, [fp, #-4]
   1494c:	ldr	r2, [sp, #12]
   14950:	add	r1, r1, r2, lsl #2
   14954:	str	r0, [r1]
   14958:	b	14900 <__assert_fail@plt+0x346c>
   1495c:	ldr	r0, [fp, #-4]
   14960:	ldr	r1, [sp, #12]
   14964:	add	r0, r0, r1, lsl #2
   14968:	ldr	r0, [r0]
   1496c:	mov	sp, fp
   14970:	pop	{fp, pc}
   14974:	push	{fp, lr}
   14978:	mov	fp, sp
   1497c:	sub	sp, sp, #24
   14980:	str	r0, [fp, #-4]
   14984:	str	r1, [fp, #-8]
   14988:	str	r2, [sp, #12]
   1498c:	str	r3, [sp, #8]
   14990:	ldr	r0, [fp, #-4]
   14994:	ldr	r1, [fp, #-8]
   14998:	ldr	r2, [sp, #8]
   1499c:	ldr	r3, [sp, #12]
   149a0:	ldr	ip, [sp, #8]
   149a4:	str	ip, [sp]
   149a8:	bl	14798 <__assert_fail@plt+0x3304>
   149ac:	str	r0, [sp, #4]
   149b0:	mov	sp, fp
   149b4:	pop	{fp, pc}
   149b8:	push	{fp, lr}
   149bc:	mov	fp, sp
   149c0:	sub	sp, sp, #24
   149c4:	str	r0, [fp, #-4]
   149c8:	str	r1, [fp, #-8]
   149cc:	str	r2, [sp, #12]
   149d0:	ldr	r0, [fp, #-4]
   149d4:	ldr	r1, [fp, #-8]
   149d8:	ldr	r2, [sp, #12]
   149dc:	ldr	r3, [fp, #-8]
   149e0:	ldr	ip, [sp, #12]
   149e4:	str	ip, [sp]
   149e8:	bl	14798 <__assert_fail@plt+0x3304>
   149ec:	str	r0, [sp, #8]
   149f0:	mov	sp, fp
   149f4:	pop	{fp, pc}
   149f8:	push	{fp, lr}
   149fc:	mov	fp, sp
   14a00:	sub	sp, sp, #32
   14a04:	str	r0, [fp, #-4]
   14a08:	str	r1, [fp, #-8]
   14a0c:	str	r2, [fp, #-12]
   14a10:	str	r3, [sp, #16]
   14a14:	ldr	r0, [fp, #-12]
   14a18:	cmp	r0, #1
   14a1c:	blt	14a24 <__assert_fail@plt+0x3590>
   14a20:	b	14a44 <__assert_fail@plt+0x35b0>
   14a24:	movw	r0, #17961	; 0x4629
   14a28:	movt	r0, #4
   14a2c:	movw	r1, #17404	; 0x43fc
   14a30:	movt	r1, #4
   14a34:	movw	r2, #659	; 0x293
   14a38:	movw	r3, #18048	; 0x4680
   14a3c:	movt	r3, #4
   14a40:	bl	11494 <__assert_fail@plt>
   14a44:	ldr	r0, [sp, #16]
   14a48:	cmp	r0, #1
   14a4c:	bcc	14a54 <__assert_fail@plt+0x35c0>
   14a50:	b	14a74 <__assert_fail@plt+0x35e0>
   14a54:	movw	r0, #18113	; 0x46c1
   14a58:	movt	r0, #4
   14a5c:	movw	r1, #17404	; 0x43fc
   14a60:	movt	r1, #4
   14a64:	movw	r2, #660	; 0x294
   14a68:	movw	r3, #18048	; 0x4680
   14a6c:	movt	r3, #4
   14a70:	bl	11494 <__assert_fail@plt>
   14a74:	ldr	r0, [sp, #16]
   14a78:	cmp	r0, #32
   14a7c:	bcs	14a84 <__assert_fail@plt+0x35f0>
   14a80:	b	14aa4 <__assert_fail@plt+0x3610>
   14a84:	movw	r0, #18122	; 0x46ca
   14a88:	movt	r0, #4
   14a8c:	movw	r1, #17404	; 0x43fc
   14a90:	movt	r1, #4
   14a94:	movw	r2, #661	; 0x295
   14a98:	movw	r3, #18048	; 0x4680
   14a9c:	movt	r3, #4
   14aa0:	bl	11494 <__assert_fail@plt>
   14aa4:	ldr	r0, [fp, #-12]
   14aa8:	ldr	r1, [fp, #-8]
   14aac:	add	r0, r1, r0, lsl #2
   14ab0:	str	r0, [fp, #-8]
   14ab4:	ldr	r0, [fp, #-12]
   14ab8:	ldr	r1, [fp, #-4]
   14abc:	add	r0, r1, r0, lsl #2
   14ac0:	str	r0, [fp, #-4]
   14ac4:	ldr	r0, [sp, #16]
   14ac8:	movw	r1, #32
   14acc:	sub	r0, r1, r0
   14ad0:	str	r0, [sp, #4]
   14ad4:	ldr	r0, [fp, #-8]
   14ad8:	mvn	r1, #3
   14adc:	add	r2, r0, r1
   14ae0:	str	r2, [fp, #-8]
   14ae4:	add	r0, r0, r1
   14ae8:	ldr	r0, [r0]
   14aec:	str	r0, [sp, #8]
   14af0:	ldr	r0, [sp, #8]
   14af4:	ldr	r1, [sp, #4]
   14af8:	lsr	r0, r0, r1
   14afc:	str	r0, [sp]
   14b00:	ldr	r0, [sp, #8]
   14b04:	ldr	r1, [sp, #16]
   14b08:	lsl	r0, r0, r1
   14b0c:	str	r0, [sp, #12]
   14b10:	ldr	r0, [fp, #-12]
   14b14:	mvn	r1, #0
   14b18:	add	r0, r0, r1
   14b1c:	str	r0, [fp, #-12]
   14b20:	cmp	r0, #0
   14b24:	beq	14b80 <__assert_fail@plt+0x36ec>
   14b28:	ldr	r0, [fp, #-8]
   14b2c:	mvn	r1, #3
   14b30:	add	r2, r0, r1
   14b34:	str	r2, [fp, #-8]
   14b38:	add	r0, r0, r1
   14b3c:	ldr	r0, [r0]
   14b40:	str	r0, [sp, #8]
   14b44:	ldr	r0, [sp, #12]
   14b48:	ldr	r2, [sp, #8]
   14b4c:	ldr	r3, [sp, #4]
   14b50:	lsr	r2, r2, r3
   14b54:	orr	r0, r0, r2
   14b58:	ldr	r2, [fp, #-4]
   14b5c:	add	r3, r2, r1
   14b60:	str	r3, [fp, #-4]
   14b64:	add	r1, r2, r1
   14b68:	str	r0, [r1]
   14b6c:	ldr	r0, [sp, #8]
   14b70:	ldr	r1, [sp, #16]
   14b74:	lsl	r0, r0, r1
   14b78:	str	r0, [sp, #12]
   14b7c:	b	14b10 <__assert_fail@plt+0x367c>
   14b80:	ldr	r0, [sp, #12]
   14b84:	ldr	r1, [fp, #-4]
   14b88:	mvn	r2, #3
   14b8c:	add	r3, r1, r2
   14b90:	str	r3, [fp, #-4]
   14b94:	add	r1, r1, r2
   14b98:	str	r0, [r1]
   14b9c:	ldr	r0, [sp]
   14ba0:	mov	sp, fp
   14ba4:	pop	{fp, pc}
   14ba8:	push	{fp, lr}
   14bac:	mov	fp, sp
   14bb0:	sub	sp, sp, #32
   14bb4:	str	r0, [fp, #-4]
   14bb8:	str	r1, [fp, #-8]
   14bbc:	str	r2, [fp, #-12]
   14bc0:	str	r3, [sp, #16]
   14bc4:	ldr	r0, [fp, #-12]
   14bc8:	cmp	r0, #1
   14bcc:	blt	14bd4 <__assert_fail@plt+0x3740>
   14bd0:	b	14bf4 <__assert_fail@plt+0x3760>
   14bd4:	movw	r0, #17961	; 0x4629
   14bd8:	movt	r0, #4
   14bdc:	movw	r1, #17404	; 0x43fc
   14be0:	movt	r1, #4
   14be4:	movw	r2, #689	; 0x2b1
   14be8:	movw	r3, #18142	; 0x46de
   14bec:	movt	r3, #4
   14bf0:	bl	11494 <__assert_fail@plt>
   14bf4:	ldr	r0, [sp, #16]
   14bf8:	cmp	r0, #1
   14bfc:	bcc	14c04 <__assert_fail@plt+0x3770>
   14c00:	b	14c24 <__assert_fail@plt+0x3790>
   14c04:	movw	r0, #18113	; 0x46c1
   14c08:	movt	r0, #4
   14c0c:	movw	r1, #17404	; 0x43fc
   14c10:	movt	r1, #4
   14c14:	movw	r2, #690	; 0x2b2
   14c18:	movw	r3, #18142	; 0x46de
   14c1c:	movt	r3, #4
   14c20:	bl	11494 <__assert_fail@plt>
   14c24:	ldr	r0, [sp, #16]
   14c28:	cmp	r0, #32
   14c2c:	bcs	14c34 <__assert_fail@plt+0x37a0>
   14c30:	b	14c54 <__assert_fail@plt+0x37c0>
   14c34:	movw	r0, #18122	; 0x46ca
   14c38:	movt	r0, #4
   14c3c:	movw	r1, #17404	; 0x43fc
   14c40:	movt	r1, #4
   14c44:	movw	r2, #691	; 0x2b3
   14c48:	movw	r3, #18142	; 0x46de
   14c4c:	movt	r3, #4
   14c50:	bl	11494 <__assert_fail@plt>
   14c54:	ldr	r0, [sp, #16]
   14c58:	movw	r1, #32
   14c5c:	sub	r0, r1, r0
   14c60:	str	r0, [sp, #4]
   14c64:	ldr	r0, [fp, #-8]
   14c68:	add	r1, r0, #4
   14c6c:	str	r1, [fp, #-8]
   14c70:	ldr	r0, [r0]
   14c74:	str	r0, [sp, #12]
   14c78:	ldr	r0, [sp, #12]
   14c7c:	ldr	r1, [sp, #4]
   14c80:	lsl	r0, r0, r1
   14c84:	str	r0, [sp]
   14c88:	ldr	r0, [sp, #12]
   14c8c:	ldr	r1, [sp, #16]
   14c90:	lsr	r0, r0, r1
   14c94:	str	r0, [sp, #8]
   14c98:	ldr	r0, [fp, #-12]
   14c9c:	mvn	r1, #0
   14ca0:	add	r0, r0, r1
   14ca4:	str	r0, [fp, #-12]
   14ca8:	cmp	r0, #0
   14cac:	beq	14cfc <__assert_fail@plt+0x3868>
   14cb0:	ldr	r0, [fp, #-8]
   14cb4:	add	r1, r0, #4
   14cb8:	str	r1, [fp, #-8]
   14cbc:	ldr	r0, [r0]
   14cc0:	str	r0, [sp, #12]
   14cc4:	ldr	r0, [sp, #8]
   14cc8:	ldr	r1, [sp, #12]
   14ccc:	ldr	r2, [sp, #4]
   14cd0:	lsl	r1, r1, r2
   14cd4:	orr	r0, r0, r1
   14cd8:	ldr	r1, [fp, #-4]
   14cdc:	add	r2, r1, #4
   14ce0:	str	r2, [fp, #-4]
   14ce4:	str	r0, [r1]
   14ce8:	ldr	r0, [sp, #12]
   14cec:	ldr	r1, [sp, #16]
   14cf0:	lsr	r0, r0, r1
   14cf4:	str	r0, [sp, #8]
   14cf8:	b	14c98 <__assert_fail@plt+0x3804>
   14cfc:	ldr	r0, [sp, #8]
   14d00:	ldr	r1, [fp, #-4]
   14d04:	str	r0, [r1]
   14d08:	ldr	r0, [sp]
   14d0c:	mov	sp, fp
   14d10:	pop	{fp, pc}
   14d14:	push	{fp, lr}
   14d18:	mov	fp, sp
   14d1c:	sub	sp, sp, #16
   14d20:	str	r0, [fp, #-4]
   14d24:	str	r1, [sp, #8]
   14d28:	ldr	r0, [sp, #8]
   14d2c:	lsr	r0, r0, #5
   14d30:	str	r0, [sp, #4]
   14d34:	ldr	r0, [fp, #-4]
   14d38:	ldr	r1, [sp, #4]
   14d3c:	add	r0, r0, r1, lsl #2
   14d40:	ldr	r0, [r0]
   14d44:	ldr	r1, [sp, #8]
   14d48:	and	r1, r1, #31
   14d4c:	mvn	r2, #0
   14d50:	lsl	r1, r2, r1
   14d54:	and	r0, r0, r1
   14d58:	ldr	r1, [sp, #4]
   14d5c:	ldr	r2, [fp, #-4]
   14d60:	ldr	r3, [sp, #4]
   14d64:	movw	ip, #0
   14d68:	str	ip, [sp]
   14d6c:	bl	14d78 <__assert_fail@plt+0x38e4>
   14d70:	mov	sp, fp
   14d74:	pop	{fp, pc}
   14d78:	push	{fp, lr}
   14d7c:	mov	fp, sp
   14d80:	sub	sp, sp, #56	; 0x38
   14d84:	ldr	ip, [fp, #8]
   14d88:	str	r0, [fp, #-8]
   14d8c:	str	r1, [fp, #-12]
   14d90:	str	r2, [fp, #-16]
   14d94:	str	r3, [fp, #-20]	; 0xffffffec
   14d98:	ldr	r0, [fp, #8]
   14d9c:	cmp	r0, #0
   14da0:	str	ip, [sp, #8]
   14da4:	beq	14db4 <__assert_fail@plt+0x3920>
   14da8:	ldr	r0, [fp, #8]
   14dac:	cmn	r0, #1
   14db0:	bne	14db8 <__assert_fail@plt+0x3924>
   14db4:	b	14dd8 <__assert_fail@plt+0x3944>
   14db8:	movw	r0, #20222	; 0x4efe
   14dbc:	movt	r0, #4
   14dc0:	movw	r1, #17404	; 0x43fc
   14dc4:	movt	r1, #4
   14dc8:	movw	r2, #715	; 0x2cb
   14dcc:	movw	r3, #20252	; 0x4f1c
   14dd0:	movt	r3, #4
   14dd4:	bl	11494 <__assert_fail@plt>
   14dd8:	ldr	r0, [fp, #-12]
   14ddc:	movw	r1, #0
   14de0:	cmp	r1, r0
   14de4:	bgt	14dfc <__assert_fail@plt+0x3968>
   14de8:	ldr	r0, [fp, #-12]
   14dec:	ldr	r1, [fp, #-20]	; 0xffffffec
   14df0:	cmp	r0, r1
   14df4:	bgt	14dfc <__assert_fail@plt+0x3968>
   14df8:	b	14e1c <__assert_fail@plt+0x3988>
   14dfc:	movw	r0, #20335	; 0x4f6f
   14e00:	movt	r0, #4
   14e04:	movw	r1, #17404	; 0x43fc
   14e08:	movt	r1, #4
   14e0c:	movw	r2, #716	; 0x2cc
   14e10:	movw	r3, #20252	; 0x4f1c
   14e14:	movt	r3, #4
   14e18:	bl	11494 <__assert_fail@plt>
   14e1c:	b	14e20 <__assert_fail@plt+0x398c>
   14e20:	ldr	r0, [fp, #-8]
   14e24:	cmp	r0, #0
   14e28:	bne	14e98 <__assert_fail@plt+0x3a04>
   14e2c:	ldr	r0, [fp, #-12]
   14e30:	add	r0, r0, #1
   14e34:	str	r0, [fp, #-12]
   14e38:	ldr	r0, [fp, #-12]
   14e3c:	ldr	r1, [fp, #-20]	; 0xffffffec
   14e40:	cmp	r0, r1
   14e44:	bne	14e78 <__assert_fail@plt+0x39e4>
   14e48:	ldr	r0, [fp, #8]
   14e4c:	cmp	r0, #0
   14e50:	bne	14e60 <__assert_fail@plt+0x39cc>
   14e54:	mvn	r0, #0
   14e58:	str	r0, [sp, #4]
   14e5c:	b	14e6c <__assert_fail@plt+0x39d8>
   14e60:	ldr	r0, [fp, #-20]	; 0xffffffec
   14e64:	lsl	r0, r0, #5
   14e68:	str	r0, [sp, #4]
   14e6c:	ldr	r0, [sp, #4]
   14e70:	str	r0, [fp, #-4]
   14e74:	b	14f74 <__assert_fail@plt+0x3ae0>
   14e78:	ldr	r0, [fp, #8]
   14e7c:	ldr	r1, [fp, #-16]
   14e80:	ldr	r2, [fp, #-12]
   14e84:	add	r1, r1, r2, lsl #2
   14e88:	ldr	r1, [r1]
   14e8c:	eor	r0, r0, r1
   14e90:	str	r0, [fp, #-8]
   14e94:	b	14e20 <__assert_fail@plt+0x398c>
   14e98:	b	14e9c <__assert_fail@plt+0x3a08>
   14e9c:	ldr	r0, [fp, #-8]
   14ea0:	str	r0, [sp, #28]
   14ea4:	movw	r0, #0
   14ea8:	str	r0, [sp, #24]
   14eac:	ldr	r0, [sp, #28]
   14eb0:	ldr	r1, [sp, #28]
   14eb4:	movw	r2, #0
   14eb8:	sub	r1, r2, r1
   14ebc:	and	r0, r0, r1
   14ec0:	str	r0, [sp, #20]
   14ec4:	str	r2, [sp, #16]
   14ec8:	movw	r0, #8
   14ecc:	str	r0, [sp, #12]
   14ed0:	ldr	r0, [sp, #12]
   14ed4:	movw	r1, #32
   14ed8:	cmp	r1, r0
   14edc:	bls	14f18 <__assert_fail@plt+0x3a84>
   14ee0:	b	14ee4 <__assert_fail@plt+0x3a50>
   14ee4:	ldr	r0, [sp, #20]
   14ee8:	and	r0, r0, #-16777216	; 0xff000000
   14eec:	cmp	r0, #0
   14ef0:	bne	14f14 <__assert_fail@plt+0x3a80>
   14ef4:	ldr	r0, [sp, #12]
   14ef8:	ldr	r1, [sp, #20]
   14efc:	lsl	r0, r1, r0
   14f00:	str	r0, [sp, #20]
   14f04:	ldr	r0, [sp, #16]
   14f08:	add	r0, r0, #8
   14f0c:	str	r0, [sp, #16]
   14f10:	b	14ee4 <__assert_fail@plt+0x3a50>
   14f14:	b	14f18 <__assert_fail@plt+0x3a84>
   14f18:	b	14f1c <__assert_fail@plt+0x3a88>
   14f1c:	ldr	r0, [sp, #20]
   14f20:	and	r0, r0, #-2147483648	; 0x80000000
   14f24:	cmp	r0, #0
   14f28:	bne	14f48 <__assert_fail@plt+0x3ab4>
   14f2c:	ldr	r0, [sp, #20]
   14f30:	lsl	r0, r0, #1
   14f34:	str	r0, [sp, #20]
   14f38:	ldr	r0, [sp, #16]
   14f3c:	add	r0, r0, #1
   14f40:	str	r0, [sp, #16]
   14f44:	b	14f1c <__assert_fail@plt+0x3a88>
   14f48:	ldr	r0, [sp, #16]
   14f4c:	str	r0, [sp, #24]
   14f50:	ldr	r0, [sp, #24]
   14f54:	movw	r1, #31
   14f58:	sub	r0, r1, r0
   14f5c:	str	r0, [fp, #-24]	; 0xffffffe8
   14f60:	ldr	r0, [fp, #-12]
   14f64:	lsl	r0, r0, #5
   14f68:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14f6c:	add	r0, r0, r1
   14f70:	str	r0, [fp, #-4]
   14f74:	ldr	r0, [fp, #-4]
   14f78:	mov	sp, fp
   14f7c:	pop	{fp, pc}
   14f80:	push	{fp, lr}
   14f84:	mov	fp, sp
   14f88:	sub	sp, sp, #24
   14f8c:	str	r0, [fp, #-4]
   14f90:	str	r1, [fp, #-8]
   14f94:	ldr	r0, [fp, #-8]
   14f98:	lsr	r0, r0, #5
   14f9c:	str	r0, [sp, #12]
   14fa0:	ldr	r0, [fp, #-4]
   14fa4:	ldr	r1, [sp, #12]
   14fa8:	add	r0, r0, r1, lsl #2
   14fac:	ldr	r0, [r0]
   14fb0:	mvn	r1, #0
   14fb4:	eor	r0, r0, r1
   14fb8:	ldr	r2, [fp, #-8]
   14fbc:	and	r2, r2, #31
   14fc0:	lsl	r2, r1, r2
   14fc4:	and	r0, r0, r2
   14fc8:	ldr	r2, [sp, #12]
   14fcc:	ldr	r3, [fp, #-4]
   14fd0:	ldr	ip, [sp, #12]
   14fd4:	str	r1, [sp, #8]
   14fd8:	mov	r1, r2
   14fdc:	mov	r2, r3
   14fe0:	mov	r3, ip
   14fe4:	ldr	ip, [sp, #8]
   14fe8:	str	ip, [sp]
   14fec:	bl	14d78 <__assert_fail@plt+0x38e4>
   14ff0:	mov	sp, fp
   14ff4:	pop	{fp, pc}
   14ff8:	sub	sp, sp, #12
   14ffc:	str	r0, [sp, #8]
   15000:	str	r1, [sp, #4]
   15004:	str	r2, [sp]
   15008:	ldr	r0, [sp]
   1500c:	mvn	r1, #0
   15010:	add	r0, r0, r1
   15014:	str	r0, [sp]
   15018:	cmp	r0, #0
   1501c:	blt	1504c <__assert_fail@plt+0x3bb8>
   15020:	ldr	r0, [sp, #4]
   15024:	add	r1, r0, #4
   15028:	str	r1, [sp, #4]
   1502c:	ldr	r0, [r0]
   15030:	mvn	r1, #0
   15034:	eor	r0, r0, r1
   15038:	ldr	r1, [sp, #8]
   1503c:	add	r2, r1, #4
   15040:	str	r2, [sp, #8]
   15044:	str	r0, [r1]
   15048:	b	15008 <__assert_fail@plt+0x3b74>
   1504c:	add	sp, sp, #12
   15050:	bx	lr
   15054:	push	{fp, lr}
   15058:	mov	fp, sp
   1505c:	sub	sp, sp, #16
   15060:	str	r0, [sp, #8]
   15064:	str	r1, [sp, #4]
   15068:	str	r2, [sp]
   1506c:	ldr	r0, [sp, #4]
   15070:	ldr	r0, [r0]
   15074:	cmp	r0, #0
   15078:	bne	150c8 <__assert_fail@plt+0x3c34>
   1507c:	ldr	r0, [sp, #8]
   15080:	movw	r1, #0
   15084:	str	r1, [r0]
   15088:	ldr	r0, [sp]
   1508c:	mvn	r1, #0
   15090:	add	r0, r0, r1
   15094:	str	r0, [sp]
   15098:	cmp	r0, #0
   1509c:	bne	150ac <__assert_fail@plt+0x3c18>
   150a0:	movw	r0, #0
   150a4:	str	r0, [fp, #-4]
   150a8:	b	15114 <__assert_fail@plt+0x3c80>
   150ac:	ldr	r0, [sp, #4]
   150b0:	add	r0, r0, #4
   150b4:	str	r0, [sp, #4]
   150b8:	ldr	r0, [sp, #8]
   150bc:	add	r0, r0, #4
   150c0:	str	r0, [sp, #8]
   150c4:	b	1506c <__assert_fail@plt+0x3bd8>
   150c8:	ldr	r0, [sp, #4]
   150cc:	ldr	r0, [r0]
   150d0:	movw	r1, #0
   150d4:	sub	r0, r1, r0
   150d8:	ldr	r1, [sp, #8]
   150dc:	str	r0, [r1]
   150e0:	ldr	r0, [sp, #8]
   150e4:	add	r0, r0, #4
   150e8:	str	r0, [sp, #8]
   150ec:	ldr	r1, [sp, #4]
   150f0:	add	r1, r1, #4
   150f4:	str	r1, [sp, #4]
   150f8:	ldr	r2, [sp]
   150fc:	mvn	r3, #0
   15100:	add	r2, r2, r3
   15104:	str	r2, [sp]
   15108:	bl	14ff8 <__assert_fail@plt+0x3b64>
   1510c:	movw	r0, #1
   15110:	str	r0, [fp, #-4]
   15114:	ldr	r0, [fp, #-4]
   15118:	mov	sp, fp
   1511c:	pop	{fp, pc}
   15120:	sub	sp, sp, #88	; 0x58
   15124:	str	r0, [sp, #84]	; 0x54
   15128:	str	r1, [sp, #80]	; 0x50
   1512c:	ldr	r0, [sp, #84]	; 0x54
   15130:	movw	r1, #65535	; 0xffff
   15134:	and	r0, r0, r1
   15138:	str	r0, [sp, #60]	; 0x3c
   1513c:	ldr	r0, [sp, #84]	; 0x54
   15140:	lsr	r0, r0, #16
   15144:	str	r0, [sp, #56]	; 0x38
   15148:	ldr	r0, [sp, #84]	; 0x54
   1514c:	mvn	r2, #0
   15150:	eor	r0, r0, r2
   15154:	ldr	r3, [sp, #56]	; 0x38
   15158:	udiv	r0, r0, r3
   1515c:	str	r0, [sp, #52]	; 0x34
   15160:	ldr	r0, [sp, #84]	; 0x54
   15164:	eor	r0, r0, r2
   15168:	ldr	r2, [sp, #52]	; 0x34
   1516c:	ldr	r3, [sp, #56]	; 0x38
   15170:	mul	r2, r2, r3
   15174:	sub	r0, r0, r2
   15178:	lsl	r0, r0, #16
   1517c:	orr	r0, r0, r1
   15180:	str	r0, [sp, #76]	; 0x4c
   15184:	ldr	r0, [sp, #52]	; 0x34
   15188:	ldr	r1, [sp, #60]	; 0x3c
   1518c:	mul	r0, r0, r1
   15190:	str	r0, [sp, #68]	; 0x44
   15194:	ldr	r0, [sp, #76]	; 0x4c
   15198:	ldr	r1, [sp, #68]	; 0x44
   1519c:	cmp	r0, r1
   151a0:	bcs	1520c <__assert_fail@plt+0x3d78>
   151a4:	ldr	r0, [sp, #52]	; 0x34
   151a8:	mvn	r1, #0
   151ac:	add	r0, r0, r1
   151b0:	str	r0, [sp, #52]	; 0x34
   151b4:	ldr	r0, [sp, #84]	; 0x54
   151b8:	ldr	r1, [sp, #76]	; 0x4c
   151bc:	add	r0, r1, r0
   151c0:	str	r0, [sp, #76]	; 0x4c
   151c4:	ldr	r0, [sp, #76]	; 0x4c
   151c8:	ldr	r1, [sp, #84]	; 0x54
   151cc:	cmp	r0, r1
   151d0:	bcc	15208 <__assert_fail@plt+0x3d74>
   151d4:	ldr	r0, [sp, #76]	; 0x4c
   151d8:	ldr	r1, [sp, #68]	; 0x44
   151dc:	cmp	r0, r1
   151e0:	bcs	15204 <__assert_fail@plt+0x3d70>
   151e4:	ldr	r0, [sp, #52]	; 0x34
   151e8:	mvn	r1, #0
   151ec:	add	r0, r0, r1
   151f0:	str	r0, [sp, #52]	; 0x34
   151f4:	ldr	r0, [sp, #84]	; 0x54
   151f8:	ldr	r1, [sp, #76]	; 0x4c
   151fc:	add	r0, r1, r0
   15200:	str	r0, [sp, #76]	; 0x4c
   15204:	b	15208 <__assert_fail@plt+0x3d74>
   15208:	b	1520c <__assert_fail@plt+0x3d78>
   1520c:	ldr	r0, [sp, #68]	; 0x44
   15210:	ldr	r1, [sp, #76]	; 0x4c
   15214:	sub	r0, r1, r0
   15218:	str	r0, [sp, #76]	; 0x4c
   1521c:	ldr	r0, [sp, #76]	; 0x4c
   15220:	lsr	r0, r0, #16
   15224:	ldr	r1, [sp, #52]	; 0x34
   15228:	mul	r0, r0, r1
   1522c:	ldr	r1, [sp, #76]	; 0x4c
   15230:	add	r0, r0, r1
   15234:	str	r0, [sp, #68]	; 0x44
   15238:	ldr	r0, [sp, #68]	; 0x44
   1523c:	lsr	r0, r0, #16
   15240:	add	r0, r0, #1
   15244:	str	r0, [sp, #64]	; 0x40
   15248:	ldr	r0, [sp, #76]	; 0x4c
   1524c:	lsl	r0, r0, #16
   15250:	movw	r1, #65535	; 0xffff
   15254:	add	r0, r0, r1
   15258:	ldr	r1, [sp, #64]	; 0x40
   1525c:	ldr	r2, [sp, #84]	; 0x54
   15260:	mul	r1, r1, r2
   15264:	sub	r0, r0, r1
   15268:	str	r0, [sp, #76]	; 0x4c
   1526c:	ldr	r0, [sp, #76]	; 0x4c
   15270:	ldr	r1, [sp, #68]	; 0x44
   15274:	lsl	r1, r1, #16
   15278:	mvn	r2, #0
   1527c:	and	r1, r1, r2
   15280:	cmp	r0, r1
   15284:	bcc	152a8 <__assert_fail@plt+0x3e14>
   15288:	ldr	r0, [sp, #64]	; 0x40
   1528c:	mvn	r1, #0
   15290:	add	r0, r0, r1
   15294:	str	r0, [sp, #64]	; 0x40
   15298:	ldr	r0, [sp, #84]	; 0x54
   1529c:	ldr	r1, [sp, #76]	; 0x4c
   152a0:	add	r0, r1, r0
   152a4:	str	r0, [sp, #76]	; 0x4c
   152a8:	ldr	r0, [sp, #52]	; 0x34
   152ac:	lsl	r0, r0, #16
   152b0:	ldr	r1, [sp, #64]	; 0x40
   152b4:	add	r0, r0, r1
   152b8:	str	r0, [sp, #72]	; 0x48
   152bc:	ldr	r0, [sp, #76]	; 0x4c
   152c0:	ldr	r1, [sp, #84]	; 0x54
   152c4:	cmp	r0, r1
   152c8:	bcc	152e8 <__assert_fail@plt+0x3e54>
   152cc:	ldr	r0, [sp, #72]	; 0x48
   152d0:	add	r0, r0, #1
   152d4:	str	r0, [sp, #72]	; 0x48
   152d8:	ldr	r0, [sp, #84]	; 0x54
   152dc:	ldr	r1, [sp, #76]	; 0x4c
   152e0:	sub	r0, r1, r0
   152e4:	str	r0, [sp, #76]	; 0x4c
   152e8:	ldr	r0, [sp, #80]	; 0x50
   152ec:	cmp	r0, #0
   152f0:	bls	15504 <__assert_fail@plt+0x4070>
   152f4:	ldr	r0, [sp, #76]	; 0x4c
   152f8:	mvn	r1, #0
   152fc:	eor	r0, r0, r1
   15300:	str	r0, [sp, #76]	; 0x4c
   15304:	ldr	r0, [sp, #80]	; 0x50
   15308:	ldr	r1, [sp, #76]	; 0x4c
   1530c:	add	r0, r1, r0
   15310:	str	r0, [sp, #76]	; 0x4c
   15314:	ldr	r0, [sp, #76]	; 0x4c
   15318:	ldr	r1, [sp, #80]	; 0x50
   1531c:	cmp	r0, r1
   15320:	bcs	15374 <__assert_fail@plt+0x3ee0>
   15324:	ldr	r0, [sp, #72]	; 0x48
   15328:	mvn	r1, #0
   1532c:	add	r0, r0, r1
   15330:	str	r0, [sp, #72]	; 0x48
   15334:	ldr	r0, [sp, #76]	; 0x4c
   15338:	ldr	r1, [sp, #84]	; 0x54
   1533c:	cmp	r0, r1
   15340:	bcc	15364 <__assert_fail@plt+0x3ed0>
   15344:	ldr	r0, [sp, #72]	; 0x48
   15348:	mvn	r1, #0
   1534c:	add	r0, r0, r1
   15350:	str	r0, [sp, #72]	; 0x48
   15354:	ldr	r0, [sp, #84]	; 0x54
   15358:	ldr	r1, [sp, #76]	; 0x4c
   1535c:	sub	r0, r1, r0
   15360:	str	r0, [sp, #76]	; 0x4c
   15364:	ldr	r0, [sp, #84]	; 0x54
   15368:	ldr	r1, [sp, #76]	; 0x4c
   1536c:	sub	r0, r1, r0
   15370:	str	r0, [sp, #76]	; 0x4c
   15374:	b	15378 <__assert_fail@plt+0x3ee4>
   15378:	movw	r0, #32
   1537c:	str	r0, [sp, #40]	; 0x28
   15380:	ldr	r0, [sp, #80]	; 0x50
   15384:	str	r0, [sp, #4]
   15388:	ldr	r0, [sp, #72]	; 0x48
   1538c:	str	r0, [sp]
   15390:	ldr	r0, [sp, #4]
   15394:	movw	r1, #65535	; 0xffff
   15398:	and	r0, r0, r1
   1539c:	str	r0, [sp, #20]
   153a0:	ldr	r0, [sp, #4]
   153a4:	lsr	r0, r0, #16
   153a8:	str	r0, [sp, #12]
   153ac:	ldr	r0, [sp]
   153b0:	and	r0, r0, r1
   153b4:	str	r0, [sp, #16]
   153b8:	ldr	r0, [sp]
   153bc:	lsr	r0, r0, #16
   153c0:	str	r0, [sp, #8]
   153c4:	ldr	r0, [sp, #20]
   153c8:	ldr	r1, [sp, #16]
   153cc:	mul	r0, r0, r1
   153d0:	str	r0, [sp, #36]	; 0x24
   153d4:	ldr	r0, [sp, #20]
   153d8:	ldr	r1, [sp, #8]
   153dc:	mul	r0, r0, r1
   153e0:	str	r0, [sp, #32]
   153e4:	ldr	r0, [sp, #12]
   153e8:	ldr	r1, [sp, #16]
   153ec:	mul	r0, r0, r1
   153f0:	str	r0, [sp, #28]
   153f4:	ldr	r0, [sp, #12]
   153f8:	ldr	r1, [sp, #8]
   153fc:	mul	r0, r0, r1
   15400:	str	r0, [sp, #24]
   15404:	ldr	r0, [sp, #36]	; 0x24
   15408:	lsr	r0, r0, #16
   1540c:	ldr	r1, [sp, #32]
   15410:	add	r0, r1, r0
   15414:	str	r0, [sp, #32]
   15418:	ldr	r0, [sp, #28]
   1541c:	ldr	r1, [sp, #32]
   15420:	add	r0, r1, r0
   15424:	str	r0, [sp, #32]
   15428:	ldr	r0, [sp, #32]
   1542c:	ldr	r1, [sp, #28]
   15430:	cmp	r0, r1
   15434:	bcs	15444 <__assert_fail@plt+0x3fb0>
   15438:	ldr	r0, [sp, #24]
   1543c:	add	r0, r0, #65536	; 0x10000
   15440:	str	r0, [sp, #24]
   15444:	ldr	r0, [sp, #24]
   15448:	ldr	r1, [sp, #32]
   1544c:	lsr	r1, r1, #16
   15450:	add	r0, r0, r1
   15454:	str	r0, [sp, #48]	; 0x30
   15458:	ldr	r0, [sp, #32]
   1545c:	lsl	r0, r0, #16
   15460:	ldr	r1, [sp, #36]	; 0x24
   15464:	movw	r2, #65535	; 0xffff
   15468:	and	r1, r1, r2
   1546c:	add	r0, r0, r1
   15470:	str	r0, [sp, #44]	; 0x2c
   15474:	ldr	r0, [sp, #48]	; 0x30
   15478:	ldr	r1, [sp, #76]	; 0x4c
   1547c:	add	r0, r1, r0
   15480:	str	r0, [sp, #76]	; 0x4c
   15484:	ldr	r0, [sp, #76]	; 0x4c
   15488:	ldr	r1, [sp, #48]	; 0x30
   1548c:	cmp	r0, r1
   15490:	bcs	15500 <__assert_fail@plt+0x406c>
   15494:	ldr	r0, [sp, #72]	; 0x48
   15498:	mvn	r1, #0
   1549c:	add	r0, r0, r1
   154a0:	str	r0, [sp, #72]	; 0x48
   154a4:	ldr	r0, [sp, #76]	; 0x4c
   154a8:	ldr	r1, [sp, #84]	; 0x54
   154ac:	cmp	r0, r1
   154b0:	movw	r0, #0
   154b4:	movhi	r0, #1
   154b8:	and	r0, r0, #1
   154bc:	ldr	r1, [sp, #76]	; 0x4c
   154c0:	ldr	r2, [sp, #84]	; 0x54
   154c4:	cmp	r1, r2
   154c8:	movw	r1, #0
   154cc:	moveq	r1, #1
   154d0:	and	r1, r1, #1
   154d4:	ldr	r2, [sp, #44]	; 0x2c
   154d8:	ldr	r3, [sp, #80]	; 0x50
   154dc:	cmp	r2, r3
   154e0:	movw	r2, #0
   154e4:	movhi	r2, #1
   154e8:	and	r2, r2, #1
   154ec:	and	r1, r1, r2
   154f0:	orr	r0, r0, r1
   154f4:	ldr	r1, [sp, #72]	; 0x48
   154f8:	sub	r0, r1, r0
   154fc:	str	r0, [sp, #72]	; 0x48
   15500:	b	15504 <__assert_fail@plt+0x4070>
   15504:	ldr	r0, [sp, #72]	; 0x48
   15508:	add	sp, sp, #88	; 0x58
   1550c:	bx	lr
   15510:	push	{fp, lr}
   15514:	mov	fp, sp
   15518:	sub	sp, sp, #40	; 0x28
   1551c:	str	r0, [fp, #-8]
   15520:	str	r1, [fp, #-12]
   15524:	str	r2, [fp, #-16]
   15528:	str	r3, [sp, #20]
   1552c:	ldr	r0, [sp, #20]
   15530:	cmp	r0, #0
   15534:	ble	1553c <__assert_fail@plt+0x40a8>
   15538:	b	1555c <__assert_fail@plt+0x40c8>
   1553c:	movw	r0, #18207	; 0x471f
   15540:	movt	r0, #4
   15544:	movw	r1, #17404	; 0x43fc
   15548:	movt	r1, #4
   1554c:	movw	r2, #1316	; 0x524
   15550:	movw	r3, #18214	; 0x4726
   15554:	movt	r3, #4
   15558:	bl	11494 <__assert_fail@plt>
   1555c:	ldr	r0, [fp, #-16]
   15560:	ldr	r1, [sp, #20]
   15564:	sub	r1, r1, #1
   15568:	add	r0, r0, r1, lsl #2
   1556c:	ldr	r0, [r0]
   15570:	cmp	r0, #0
   15574:	bls	1557c <__assert_fail@plt+0x40e8>
   15578:	b	1559c <__assert_fail@plt+0x4108>
   1557c:	movw	r0, #18274	; 0x4762
   15580:	movt	r0, #4
   15584:	movw	r1, #17404	; 0x43fc
   15588:	movt	r1, #4
   1558c:	movw	r2, #1317	; 0x525
   15590:	movw	r3, #18214	; 0x4726
   15594:	movt	r3, #4
   15598:	bl	11494 <__assert_fail@plt>
   1559c:	ldr	r0, [fp, #-12]
   155a0:	bl	15608 <__assert_fail@plt+0x4174>
   155a4:	str	r0, [sp, #16]
   155a8:	ldr	r0, [sp, #16]
   155ac:	cmp	r0, #0
   155b0:	beq	155d0 <__assert_fail@plt+0x413c>
   155b4:	ldr	r0, [fp, #-8]
   155b8:	ldr	r1, [sp, #16]
   155bc:	ldr	r2, [fp, #-16]
   155c0:	ldr	r3, [sp, #20]
   155c4:	bl	15708 <__assert_fail@plt+0x4274>
   155c8:	str	r0, [fp, #-4]
   155cc:	b	155fc <__assert_fail@plt+0x4168>
   155d0:	ldr	r1, [fp, #-12]
   155d4:	add	r0, sp, #8
   155d8:	bl	15858 <__assert_fail@plt+0x43c4>
   155dc:	ldr	r0, [fp, #-8]
   155e0:	ldr	r1, [fp, #-12]
   155e4:	ldr	r3, [fp, #-16]
   155e8:	ldr	lr, [sp, #20]
   155ec:	add	r2, sp, #8
   155f0:	str	lr, [sp]
   155f4:	bl	158d4 <__assert_fail@plt+0x4440>
   155f8:	str	r0, [fp, #-4]
   155fc:	ldr	r0, [fp, #-4]
   15600:	mov	sp, fp
   15604:	pop	{fp, pc}
   15608:	sub	sp, sp, #12
   1560c:	str	r0, [sp, #4]
   15610:	ldr	r0, [sp, #4]
   15614:	cmp	r0, #2
   15618:	str	r0, [sp]
   1561c:	beq	15694 <__assert_fail@plt+0x4200>
   15620:	b	15624 <__assert_fail@plt+0x4190>
   15624:	ldr	r0, [sp]
   15628:	cmp	r0, #4
   1562c:	beq	156a0 <__assert_fail@plt+0x420c>
   15630:	b	15634 <__assert_fail@plt+0x41a0>
   15634:	ldr	r0, [sp]
   15638:	cmp	r0, #8
   1563c:	beq	156ac <__assert_fail@plt+0x4218>
   15640:	b	15644 <__assert_fail@plt+0x41b0>
   15644:	ldr	r0, [sp]
   15648:	cmp	r0, #16
   1564c:	beq	156b8 <__assert_fail@plt+0x4224>
   15650:	b	15654 <__assert_fail@plt+0x41c0>
   15654:	ldr	r0, [sp]
   15658:	cmp	r0, #32
   1565c:	beq	156c4 <__assert_fail@plt+0x4230>
   15660:	b	15664 <__assert_fail@plt+0x41d0>
   15664:	ldr	r0, [sp]
   15668:	cmp	r0, #64	; 0x40
   1566c:	beq	156d0 <__assert_fail@plt+0x423c>
   15670:	b	15674 <__assert_fail@plt+0x41e0>
   15674:	ldr	r0, [sp]
   15678:	cmp	r0, #128	; 0x80
   1567c:	beq	156dc <__assert_fail@plt+0x4248>
   15680:	b	15684 <__assert_fail@plt+0x41f0>
   15684:	ldr	r0, [sp]
   15688:	cmp	r0, #256	; 0x100
   1568c:	beq	156e8 <__assert_fail@plt+0x4254>
   15690:	b	156f4 <__assert_fail@plt+0x4260>
   15694:	movw	r0, #1
   15698:	str	r0, [sp, #8]
   1569c:	b	156fc <__assert_fail@plt+0x4268>
   156a0:	movw	r0, #2
   156a4:	str	r0, [sp, #8]
   156a8:	b	156fc <__assert_fail@plt+0x4268>
   156ac:	movw	r0, #3
   156b0:	str	r0, [sp, #8]
   156b4:	b	156fc <__assert_fail@plt+0x4268>
   156b8:	movw	r0, #4
   156bc:	str	r0, [sp, #8]
   156c0:	b	156fc <__assert_fail@plt+0x4268>
   156c4:	movw	r0, #5
   156c8:	str	r0, [sp, #8]
   156cc:	b	156fc <__assert_fail@plt+0x4268>
   156d0:	movw	r0, #6
   156d4:	str	r0, [sp, #8]
   156d8:	b	156fc <__assert_fail@plt+0x4268>
   156dc:	movw	r0, #7
   156e0:	str	r0, [sp, #8]
   156e4:	b	156fc <__assert_fail@plt+0x4268>
   156e8:	movw	r0, #8
   156ec:	str	r0, [sp, #8]
   156f0:	b	156fc <__assert_fail@plt+0x4268>
   156f4:	movw	r0, #0
   156f8:	str	r0, [sp, #8]
   156fc:	ldr	r0, [sp, #8]
   15700:	add	sp, sp, #12
   15704:	bx	lr
   15708:	push	{fp, lr}
   1570c:	mov	fp, sp
   15710:	sub	sp, sp, #48	; 0x30
   15714:	str	r0, [fp, #-4]
   15718:	str	r1, [fp, #-8]
   1571c:	str	r2, [fp, #-12]
   15720:	str	r3, [fp, #-16]
   15724:	ldr	r0, [fp, #-16]
   15728:	sub	r0, r0, #1
   1572c:	lsl	r1, r0, #5
   15730:	ldr	r2, [fp, #-12]
   15734:	add	r0, r2, r0, lsl #2
   15738:	ldr	r0, [r0]
   1573c:	str	r1, [sp, #4]
   15740:	bl	1d988 <__assert_fail@plt+0xc4f4>
   15744:	ldr	r1, [sp, #4]
   15748:	add	r0, r1, r0
   1574c:	ldr	r1, [fp, #-8]
   15750:	add	r0, r0, r1
   15754:	sub	r0, r0, #1
   15758:	ldr	r1, [fp, #-8]
   1575c:	udiv	r0, r0, r1
   15760:	str	r0, [sp, #24]
   15764:	ldr	r0, [fp, #-8]
   15768:	movw	r1, #1
   1576c:	lsl	r0, r1, r0
   15770:	sub	r0, r0, #1
   15774:	strb	r0, [fp, #-17]	; 0xffffffef
   15778:	movw	r0, #0
   1577c:	str	r0, [sp, #16]
   15780:	ldr	r1, [sp, #24]
   15784:	str	r1, [sp, #20]
   15788:	str	r0, [sp, #12]
   1578c:	ldr	r0, [sp, #20]
   15790:	mvn	r1, #0
   15794:	add	r1, r0, r1
   15798:	str	r1, [sp, #20]
   1579c:	cmp	r0, #0
   157a0:	bls	1584c <__assert_fail@plt+0x43b8>
   157a4:	ldr	r0, [fp, #-12]
   157a8:	ldr	r1, [sp, #16]
   157ac:	add	r0, r0, r1, lsl #2
   157b0:	ldr	r0, [r0]
   157b4:	ldr	r1, [sp, #12]
   157b8:	lsr	r0, r0, r1
   157bc:	strb	r0, [sp, #11]
   157c0:	ldr	r0, [fp, #-8]
   157c4:	ldr	r1, [sp, #12]
   157c8:	add	r0, r1, r0
   157cc:	str	r0, [sp, #12]
   157d0:	ldr	r0, [sp, #12]
   157d4:	cmp	r0, #32
   157d8:	bcc	1582c <__assert_fail@plt+0x4398>
   157dc:	ldr	r0, [sp, #16]
   157e0:	add	r0, r0, #1
   157e4:	str	r0, [sp, #16]
   157e8:	ldr	r1, [fp, #-16]
   157ec:	cmp	r0, r1
   157f0:	bge	1582c <__assert_fail@plt+0x4398>
   157f4:	ldr	r0, [sp, #12]
   157f8:	sub	r0, r0, #32
   157fc:	str	r0, [sp, #12]
   15800:	ldr	r0, [fp, #-12]
   15804:	ldr	r1, [sp, #16]
   15808:	add	r0, r0, r1, lsl #2
   1580c:	ldr	r0, [r0]
   15810:	ldr	r1, [fp, #-8]
   15814:	ldr	r2, [sp, #12]
   15818:	sub	r1, r1, r2
   1581c:	lsl	r0, r0, r1
   15820:	ldrb	r1, [sp, #11]
   15824:	orr	r0, r1, r0
   15828:	strb	r0, [sp, #11]
   1582c:	ldrb	r0, [sp, #11]
   15830:	ldrb	r1, [fp, #-17]	; 0xffffffef
   15834:	and	r0, r0, r1
   15838:	ldr	r1, [fp, #-4]
   1583c:	ldr	r2, [sp, #20]
   15840:	add	r1, r1, r2
   15844:	strb	r0, [r1]
   15848:	b	1578c <__assert_fail@plt+0x42f8>
   1584c:	ldr	r0, [sp, #24]
   15850:	mov	sp, fp
   15854:	pop	{fp, pc}
   15858:	sub	sp, sp, #20
   1585c:	str	r0, [sp, #16]
   15860:	str	r1, [sp, #12]
   15864:	ldr	r0, [sp, #12]
   15868:	mvn	r1, #0
   1586c:	udiv	r0, r1, r0
   15870:	str	r0, [sp, #8]
   15874:	movw	r0, #1
   15878:	str	r0, [sp]
   1587c:	ldr	r0, [sp, #12]
   15880:	str	r0, [sp, #4]
   15884:	ldr	r0, [sp, #4]
   15888:	ldr	r1, [sp, #8]
   1588c:	cmp	r0, r1
   15890:	bhi	158b4 <__assert_fail@plt+0x4420>
   15894:	ldr	r0, [sp, #12]
   15898:	ldr	r1, [sp, #4]
   1589c:	mul	r0, r1, r0
   158a0:	str	r0, [sp, #4]
   158a4:	ldr	r0, [sp]
   158a8:	add	r0, r0, #1
   158ac:	str	r0, [sp]
   158b0:	b	15884 <__assert_fail@plt+0x43f0>
   158b4:	ldr	r0, [sp]
   158b8:	ldr	r1, [sp, #16]
   158bc:	str	r0, [r1]
   158c0:	ldr	r0, [sp, #4]
   158c4:	ldr	r1, [sp, #16]
   158c8:	str	r0, [r1, #4]
   158cc:	add	sp, sp, #20
   158d0:	bx	lr
   158d4:	push	{fp, lr}
   158d8:	mov	fp, sp
   158dc:	sub	sp, sp, #80	; 0x50
   158e0:	ldr	ip, [fp, #8]
   158e4:	str	r0, [fp, #-4]
   158e8:	str	r1, [fp, #-8]
   158ec:	str	r2, [fp, #-12]
   158f0:	str	r3, [fp, #-16]
   158f4:	ldr	r1, [fp, #-8]
   158f8:	sub	r0, fp, #32
   158fc:	str	ip, [sp, #8]
   15900:	bl	1da78 <__assert_fail@plt+0xc5e4>
   15904:	movw	r0, #0
   15908:	str	r0, [fp, #-36]	; 0xffffffdc
   1590c:	ldr	r0, [fp, #8]
   15910:	cmp	r0, #1
   15914:	ble	159f4 <__assert_fail@plt+0x4560>
   15918:	ldr	r0, [fp, #-12]
   1591c:	ldr	r1, [r0, #4]
   15920:	add	r0, sp, #24
   15924:	bl	1da78 <__assert_fail@plt+0xc5e4>
   15928:	ldr	r0, [fp, #-16]
   1592c:	ldr	r2, [fp, #8]
   15930:	add	r3, sp, #24
   15934:	str	r0, [sp, #4]
   15938:	ldr	r1, [sp, #4]
   1593c:	bl	1db98 <__assert_fail@plt+0xc704>
   15940:	str	r0, [sp, #20]
   15944:	ldr	r0, [fp, #-16]
   15948:	ldr	r1, [fp, #8]
   1594c:	sub	r1, r1, #1
   15950:	add	r0, r0, r1, lsl #2
   15954:	ldr	r0, [r0]
   15958:	cmp	r0, #0
   1595c:	movw	r0, #0
   15960:	moveq	r0, #1
   15964:	and	r0, r0, #1
   15968:	ldr	r1, [fp, #8]
   1596c:	sub	r0, r1, r0
   15970:	str	r0, [fp, #8]
   15974:	ldr	r0, [fp, #-4]
   15978:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1597c:	add	r0, r0, r1
   15980:	ldr	r1, [sp, #20]
   15984:	sub	r2, fp, #32
   15988:	bl	1f0b0 <__assert_fail@plt+0xdc1c>
   1598c:	str	r0, [sp, #16]
   15990:	ldr	r0, [sp, #16]
   15994:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15998:	add	r0, r1, r0
   1599c:	str	r0, [fp, #-36]	; 0xffffffdc
   159a0:	ldr	r0, [sp, #16]
   159a4:	ldr	r1, [fp, #-12]
   159a8:	ldr	r1, [r1]
   159ac:	cmp	r0, r1
   159b0:	bcs	159e0 <__assert_fail@plt+0x454c>
   159b4:	ldr	r0, [fp, #-4]
   159b8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   159bc:	add	r2, r1, #1
   159c0:	str	r2, [fp, #-36]	; 0xffffffdc
   159c4:	add	r0, r0, r1
   159c8:	movw	r1, #0
   159cc:	strb	r1, [r0]
   159d0:	ldr	r0, [sp, #16]
   159d4:	add	r0, r0, #1
   159d8:	str	r0, [sp, #16]
   159dc:	b	159a0 <__assert_fail@plt+0x450c>
   159e0:	b	159e4 <__assert_fail@plt+0x4550>
   159e4:	ldr	r0, [fp, #8]
   159e8:	cmp	r0, #1
   159ec:	bgt	15928 <__assert_fail@plt+0x4494>
   159f0:	b	159f4 <__assert_fail@plt+0x4560>
   159f4:	ldr	r0, [fp, #-4]
   159f8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   159fc:	add	r0, r0, r1
   15a00:	ldr	r1, [fp, #-16]
   15a04:	ldr	r1, [r1]
   15a08:	sub	r2, fp, #32
   15a0c:	bl	1f0b0 <__assert_fail@plt+0xdc1c>
   15a10:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15a14:	add	r0, r1, r0
   15a18:	str	r0, [fp, #-36]	; 0xffffffdc
   15a1c:	movw	r0, #0
   15a20:	str	r0, [sp, #40]	; 0x28
   15a24:	ldr	r0, [sp, #40]	; 0x28
   15a28:	lsl	r0, r0, #1
   15a2c:	add	r0, r0, #1
   15a30:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15a34:	cmp	r0, r1
   15a38:	bcs	15aac <__assert_fail@plt+0x4618>
   15a3c:	ldr	r0, [fp, #-4]
   15a40:	ldr	r1, [sp, #40]	; 0x28
   15a44:	add	r0, r0, r1
   15a48:	ldrb	r0, [r0]
   15a4c:	strb	r0, [sp, #15]
   15a50:	ldr	r0, [fp, #-4]
   15a54:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15a58:	ldr	r2, [sp, #40]	; 0x28
   15a5c:	sub	r1, r1, r2
   15a60:	sub	r1, r1, #1
   15a64:	add	r0, r0, r1
   15a68:	ldrb	r0, [r0]
   15a6c:	ldr	r1, [fp, #-4]
   15a70:	ldr	r2, [sp, #40]	; 0x28
   15a74:	add	r1, r1, r2
   15a78:	strb	r0, [r1]
   15a7c:	ldrb	r0, [sp, #15]
   15a80:	ldr	r1, [fp, #-4]
   15a84:	ldr	r2, [fp, #-36]	; 0xffffffdc
   15a88:	ldr	r3, [sp, #40]	; 0x28
   15a8c:	sub	r2, r2, r3
   15a90:	sub	r2, r2, #1
   15a94:	add	r1, r1, r2
   15a98:	strb	r0, [r1]
   15a9c:	ldr	r0, [sp, #40]	; 0x28
   15aa0:	add	r0, r0, #1
   15aa4:	str	r0, [sp, #40]	; 0x28
   15aa8:	b	15a24 <__assert_fail@plt+0x4590>
   15aac:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15ab0:	mov	sp, fp
   15ab4:	pop	{fp, pc}
   15ab8:	push	{fp, lr}
   15abc:	mov	fp, sp
   15ac0:	sub	sp, sp, #40	; 0x28
   15ac4:	str	r0, [fp, #-8]
   15ac8:	str	r1, [fp, #-12]
   15acc:	str	r2, [fp, #-16]
   15ad0:	str	r3, [sp, #20]
   15ad4:	ldr	r0, [fp, #-16]
   15ad8:	cmp	r0, #0
   15adc:	bne	15aec <__assert_fail@plt+0x4658>
   15ae0:	movw	r0, #0
   15ae4:	str	r0, [fp, #-4]
   15ae8:	b	15b4c <__assert_fail@plt+0x46b8>
   15aec:	ldr	r0, [sp, #20]
   15af0:	bl	15608 <__assert_fail@plt+0x4174>
   15af4:	str	r0, [sp, #16]
   15af8:	ldr	r0, [sp, #16]
   15afc:	cmp	r0, #0
   15b00:	beq	15b20 <__assert_fail@plt+0x468c>
   15b04:	ldr	r0, [fp, #-8]
   15b08:	ldr	r1, [fp, #-12]
   15b0c:	ldr	r2, [fp, #-16]
   15b10:	ldr	r3, [sp, #16]
   15b14:	bl	15b58 <__assert_fail@plt+0x46c4>
   15b18:	str	r0, [fp, #-4]
   15b1c:	b	15b4c <__assert_fail@plt+0x46b8>
   15b20:	ldr	r1, [sp, #20]
   15b24:	add	r0, sp, #8
   15b28:	bl	15858 <__assert_fail@plt+0x43c4>
   15b2c:	ldr	r0, [fp, #-8]
   15b30:	ldr	r1, [fp, #-12]
   15b34:	ldr	r2, [fp, #-16]
   15b38:	ldr	r3, [sp, #20]
   15b3c:	add	lr, sp, #8
   15b40:	str	lr, [sp]
   15b44:	bl	15c74 <__assert_fail@plt+0x47e0>
   15b48:	str	r0, [fp, #-4]
   15b4c:	ldr	r0, [fp, #-4]
   15b50:	mov	sp, fp
   15b54:	pop	{fp, pc}
   15b58:	push	{fp, lr}
   15b5c:	mov	fp, sp
   15b60:	sub	sp, sp, #32
   15b64:	str	r0, [fp, #-4]
   15b68:	str	r1, [fp, #-8]
   15b6c:	str	r2, [fp, #-12]
   15b70:	str	r3, [sp, #16]
   15b74:	movw	r0, #0
   15b78:	str	r0, [sp, #8]
   15b7c:	str	r0, [sp, #12]
   15b80:	str	r0, [sp, #4]
   15b84:	ldr	r0, [fp, #-12]
   15b88:	mvn	r1, #0
   15b8c:	add	r1, r0, r1
   15b90:	str	r1, [fp, #-12]
   15b94:	cmp	r0, #0
   15b98:	bls	15c2c <__assert_fail@plt+0x4798>
   15b9c:	ldr	r0, [fp, #-8]
   15ba0:	ldr	r1, [fp, #-12]
   15ba4:	add	r0, r0, r1
   15ba8:	ldrb	r0, [r0]
   15bac:	ldr	r1, [sp, #4]
   15bb0:	lsl	r0, r0, r1
   15bb4:	ldr	r1, [sp, #8]
   15bb8:	orr	r0, r1, r0
   15bbc:	str	r0, [sp, #8]
   15bc0:	ldr	r0, [sp, #16]
   15bc4:	ldr	r1, [sp, #4]
   15bc8:	add	r0, r1, r0
   15bcc:	str	r0, [sp, #4]
   15bd0:	ldr	r0, [sp, #4]
   15bd4:	cmp	r0, #32
   15bd8:	bcc	15c28 <__assert_fail@plt+0x4794>
   15bdc:	ldr	r0, [sp, #4]
   15be0:	sub	r0, r0, #32
   15be4:	str	r0, [sp, #4]
   15be8:	ldr	r0, [sp, #8]
   15bec:	ldr	r1, [fp, #-4]
   15bf0:	ldr	r2, [sp, #12]
   15bf4:	add	r3, r2, #1
   15bf8:	str	r3, [sp, #12]
   15bfc:	add	r1, r1, r2, lsl #2
   15c00:	str	r0, [r1]
   15c04:	ldr	r0, [fp, #-8]
   15c08:	ldr	r1, [fp, #-12]
   15c0c:	add	r0, r0, r1
   15c10:	ldrb	r0, [r0]
   15c14:	ldr	r1, [sp, #16]
   15c18:	ldr	r2, [sp, #4]
   15c1c:	sub	r1, r1, r2
   15c20:	lsr	r0, r0, r1
   15c24:	str	r0, [sp, #8]
   15c28:	b	15b84 <__assert_fail@plt+0x46f0>
   15c2c:	ldr	r0, [sp, #8]
   15c30:	cmp	r0, #0
   15c34:	beq	15c58 <__assert_fail@plt+0x47c4>
   15c38:	ldr	r0, [sp, #8]
   15c3c:	ldr	r1, [fp, #-4]
   15c40:	ldr	r2, [sp, #12]
   15c44:	add	r3, r2, #1
   15c48:	str	r3, [sp, #12]
   15c4c:	add	r1, r1, r2, lsl #2
   15c50:	str	r0, [r1]
   15c54:	b	15c68 <__assert_fail@plt+0x47d4>
   15c58:	ldr	r0, [fp, #-4]
   15c5c:	ldr	r1, [sp, #12]
   15c60:	bl	13c64 <__assert_fail@plt+0x27d0>
   15c64:	str	r0, [sp, #12]
   15c68:	ldr	r0, [sp, #12]
   15c6c:	mov	sp, fp
   15c70:	pop	{fp, pc}
   15c74:	push	{fp, lr}
   15c78:	mov	fp, sp
   15c7c:	sub	sp, sp, #40	; 0x28
   15c80:	ldr	ip, [fp, #8]
   15c84:	str	r0, [fp, #-4]
   15c88:	str	r1, [fp, #-8]
   15c8c:	str	r2, [fp, #-12]
   15c90:	str	r3, [fp, #-16]
   15c94:	ldr	r0, [fp, #-12]
   15c98:	cmp	r0, #0
   15c9c:	str	ip, [sp]
   15ca0:	bls	15ca8 <__assert_fail@plt+0x4814>
   15ca4:	b	15cc8 <__assert_fail@plt+0x4834>
   15ca8:	movw	r0, #20496	; 0x5010
   15cac:	movt	r0, #4
   15cb0:	movw	r1, #17404	; 0x43fc
   15cb4:	movt	r1, #4
   15cb8:	movw	r2, #1370	; 0x55a
   15cbc:	movw	r3, #20503	; 0x5017
   15cc0:	movt	r3, #4
   15cc4:	bl	11494 <__assert_fail@plt>
   15cc8:	ldr	r0, [fp, #-12]
   15ccc:	sub	r0, r0, #1
   15cd0:	ldr	r1, [fp, #8]
   15cd4:	ldr	r1, [r1]
   15cd8:	udiv	r2, r0, r1
   15cdc:	mls	r0, r2, r1, r0
   15ce0:	add	r0, r0, #1
   15ce4:	str	r0, [sp, #12]
   15ce8:	movw	r0, #0
   15cec:	str	r0, [sp, #8]
   15cf0:	ldr	r0, [fp, #-8]
   15cf4:	ldr	r1, [sp, #8]
   15cf8:	add	r2, r1, #1
   15cfc:	str	r2, [sp, #8]
   15d00:	add	r0, r0, r1
   15d04:	ldrb	r0, [r0]
   15d08:	str	r0, [sp, #16]
   15d0c:	ldr	r0, [sp, #12]
   15d10:	mvn	r1, #0
   15d14:	add	r0, r0, r1
   15d18:	str	r0, [sp, #12]
   15d1c:	cmp	r0, #0
   15d20:	beq	15d54 <__assert_fail@plt+0x48c0>
   15d24:	ldr	r0, [sp, #16]
   15d28:	ldr	r1, [fp, #-16]
   15d2c:	mul	r0, r0, r1
   15d30:	ldr	r1, [fp, #-8]
   15d34:	ldr	r2, [sp, #8]
   15d38:	add	r3, r2, #1
   15d3c:	str	r3, [sp, #8]
   15d40:	add	r1, r1, r2
   15d44:	ldrb	r1, [r1]
   15d48:	add	r0, r0, r1
   15d4c:	str	r0, [sp, #16]
   15d50:	b	15d0c <__assert_fail@plt+0x4878>
   15d54:	ldr	r0, [sp, #16]
   15d58:	ldr	r1, [fp, #-4]
   15d5c:	str	r0, [r1]
   15d60:	movw	r0, #1
   15d64:	str	r0, [sp, #20]
   15d68:	ldr	r0, [sp, #8]
   15d6c:	ldr	r1, [fp, #-12]
   15d70:	cmp	r0, r1
   15d74:	bcs	15e54 <__assert_fail@plt+0x49c0>
   15d78:	ldr	r0, [fp, #-8]
   15d7c:	ldr	r1, [sp, #8]
   15d80:	add	r2, r1, #1
   15d84:	str	r2, [sp, #8]
   15d88:	add	r0, r0, r1
   15d8c:	ldrb	r0, [r0]
   15d90:	str	r0, [sp, #16]
   15d94:	movw	r0, #1
   15d98:	str	r0, [sp, #12]
   15d9c:	ldr	r0, [sp, #12]
   15da0:	ldr	r1, [fp, #8]
   15da4:	ldr	r1, [r1]
   15da8:	cmp	r0, r1
   15dac:	bcs	15dec <__assert_fail@plt+0x4958>
   15db0:	ldr	r0, [sp, #16]
   15db4:	ldr	r1, [fp, #-16]
   15db8:	mul	r0, r0, r1
   15dbc:	ldr	r1, [fp, #-8]
   15dc0:	ldr	r2, [sp, #8]
   15dc4:	add	r3, r2, #1
   15dc8:	str	r3, [sp, #8]
   15dcc:	add	r1, r1, r2
   15dd0:	ldrb	r1, [r1]
   15dd4:	add	r0, r0, r1
   15dd8:	str	r0, [sp, #16]
   15ddc:	ldr	r0, [sp, #12]
   15de0:	add	r0, r0, #1
   15de4:	str	r0, [sp, #12]
   15de8:	b	15d9c <__assert_fail@plt+0x4908>
   15dec:	ldr	r0, [fp, #-4]
   15df0:	ldr	r1, [fp, #-4]
   15df4:	ldr	r2, [sp, #20]
   15df8:	ldr	r3, [fp, #8]
   15dfc:	ldr	r3, [r3, #4]
   15e00:	bl	141a8 <__assert_fail@plt+0x2d14>
   15e04:	str	r0, [sp, #4]
   15e08:	ldr	r0, [fp, #-4]
   15e0c:	ldr	r1, [fp, #-4]
   15e10:	ldr	r2, [sp, #20]
   15e14:	ldr	r3, [sp, #16]
   15e18:	bl	13d18 <__assert_fail@plt+0x2884>
   15e1c:	ldr	r1, [sp, #4]
   15e20:	add	r0, r1, r0
   15e24:	str	r0, [sp, #4]
   15e28:	ldr	r0, [sp, #4]
   15e2c:	cmp	r0, #0
   15e30:	bls	15e50 <__assert_fail@plt+0x49bc>
   15e34:	ldr	r0, [sp, #4]
   15e38:	ldr	r1, [fp, #-4]
   15e3c:	ldr	r2, [sp, #20]
   15e40:	add	r3, r2, #1
   15e44:	str	r3, [sp, #20]
   15e48:	add	r1, r1, r2, lsl #2
   15e4c:	str	r0, [r1]
   15e50:	b	15d68 <__assert_fail@plt+0x48d4>
   15e54:	ldr	r0, [sp, #8]
   15e58:	ldr	r1, [fp, #-12]
   15e5c:	cmp	r0, r1
   15e60:	bne	15e68 <__assert_fail@plt+0x49d4>
   15e64:	b	15e88 <__assert_fail@plt+0x49f4>
   15e68:	movw	r0, #20611	; 0x5083
   15e6c:	movt	r0, #4
   15e70:	movw	r1, #17404	; 0x43fc
   15e74:	movt	r1, #4
   15e78:	movw	r2, #1394	; 0x572
   15e7c:	movw	r3, #20503	; 0x5017
   15e80:	movt	r3, #4
   15e84:	bl	11494 <__assert_fail@plt>
   15e88:	ldr	r0, [sp, #20]
   15e8c:	mov	sp, fp
   15e90:	pop	{fp, pc}
   15e94:	sub	sp, sp, #4
   15e98:	str	r0, [sp]
   15e9c:	ldr	r0, [sp]
   15ea0:	movw	r1, #0
   15ea4:	str	r1, [r0]
   15ea8:	ldr	r0, [sp]
   15eac:	str	r1, [r0, #4]
   15eb0:	ldr	r0, [sp]
   15eb4:	movw	r1, #17396	; 0x43f4
   15eb8:	movt	r1, #4
   15ebc:	str	r1, [r0, #8]
   15ec0:	add	sp, sp, #4
   15ec4:	bx	lr
   15ec8:	push	{fp, lr}
   15ecc:	mov	fp, sp
   15ed0:	sub	sp, sp, #16
   15ed4:	str	r0, [fp, #-4]
   15ed8:	str	r1, [sp, #8]
   15edc:	ldr	r0, [sp, #8]
   15ee0:	sub	r1, r0, #1
   15ee4:	cmp	r0, #0
   15ee8:	movne	r0, r1
   15eec:	str	r0, [sp, #8]
   15ef0:	ldr	r0, [sp, #8]
   15ef4:	lsr	r0, r0, #5
   15ef8:	add	r0, r0, #1
   15efc:	str	r0, [sp, #4]
   15f00:	ldr	r0, [sp, #4]
   15f04:	ldr	r1, [fp, #-4]
   15f08:	str	r0, [r1]
   15f0c:	ldr	r0, [fp, #-4]
   15f10:	movw	r1, #0
   15f14:	str	r1, [r0, #4]
   15f18:	ldr	r0, [sp, #4]
   15f1c:	bl	15f30 <__assert_fail@plt+0x4a9c>
   15f20:	ldr	r1, [fp, #-4]
   15f24:	str	r0, [r1, #8]
   15f28:	mov	sp, fp
   15f2c:	pop	{fp, pc}
   15f30:	push	{fp, lr}
   15f34:	mov	fp, sp
   15f38:	sub	sp, sp, #8
   15f3c:	str	r0, [sp, #4]
   15f40:	movw	r0, #24872	; 0x6128
   15f44:	movt	r0, #5
   15f48:	ldr	r0, [r0]
   15f4c:	ldr	r1, [sp, #4]
   15f50:	lsl	r1, r1, #2
   15f54:	str	r0, [sp]
   15f58:	mov	r0, r1
   15f5c:	ldr	r1, [sp]
   15f60:	blx	r1
   15f64:	mov	sp, fp
   15f68:	pop	{fp, pc}
   15f6c:	push	{fp, lr}
   15f70:	mov	fp, sp
   15f74:	sub	sp, sp, #8
   15f78:	str	r0, [sp, #4]
   15f7c:	ldr	r0, [sp, #4]
   15f80:	ldr	r0, [r0]
   15f84:	cmp	r0, #0
   15f88:	beq	15fa0 <__assert_fail@plt+0x4b0c>
   15f8c:	ldr	r0, [sp, #4]
   15f90:	ldr	r0, [r0, #8]
   15f94:	ldr	r1, [sp, #4]
   15f98:	ldr	r1, [r1]
   15f9c:	bl	15fa8 <__assert_fail@plt+0x4b14>
   15fa0:	mov	sp, fp
   15fa4:	pop	{fp, pc}
   15fa8:	push	{fp, lr}
   15fac:	mov	fp, sp
   15fb0:	sub	sp, sp, #16
   15fb4:	str	r0, [fp, #-4]
   15fb8:	str	r1, [sp, #8]
   15fbc:	movw	r0, #24880	; 0x6130
   15fc0:	movt	r0, #5
   15fc4:	ldr	r0, [r0]
   15fc8:	ldr	r1, [fp, #-4]
   15fcc:	ldr	r2, [sp, #8]
   15fd0:	lsl	r2, r2, #2
   15fd4:	str	r0, [sp, #4]
   15fd8:	mov	r0, r1
   15fdc:	mov	r1, r2
   15fe0:	ldr	r2, [sp, #4]
   15fe4:	blx	r2
   15fe8:	mov	sp, fp
   15fec:	pop	{fp, pc}
   15ff0:	push	{fp, lr}
   15ff4:	mov	fp, sp
   15ff8:	sub	sp, sp, #16
   15ffc:	str	r0, [fp, #-4]
   16000:	str	r1, [sp, #8]
   16004:	ldr	r0, [sp, #8]
   16008:	cmp	r0, #0
   1600c:	blt	16020 <__assert_fail@plt+0x4b8c>
   16010:	ldr	r0, [fp, #-4]
   16014:	ldr	r1, [sp, #8]
   16018:	bl	1608c <__assert_fail@plt+0x4bf8>
   1601c:	b	16084 <__assert_fail@plt+0x4bf0>
   16020:	ldr	r0, [fp, #-4]
   16024:	mvn	r1, #0
   16028:	str	r1, [r0, #4]
   1602c:	ldr	r0, [sp, #8]
   16030:	add	r0, r0, #1
   16034:	sub	r0, r0, #1
   16038:	movw	r1, #0
   1603c:	sub	r0, r1, r0
   16040:	ldr	r1, [fp, #-4]
   16044:	ldr	r1, [r1]
   16048:	movw	r2, #1
   1604c:	cmp	r2, r1
   16050:	str	r0, [sp, #4]
   16054:	ble	1606c <__assert_fail@plt+0x4bd8>
   16058:	ldr	r0, [fp, #-4]
   1605c:	movw	r1, #1
   16060:	bl	16114 <__assert_fail@plt+0x4c80>
   16064:	str	r0, [sp]
   16068:	b	16078 <__assert_fail@plt+0x4be4>
   1606c:	ldr	r0, [fp, #-4]
   16070:	ldr	r0, [r0, #8]
   16074:	str	r0, [sp]
   16078:	ldr	r0, [sp]
   1607c:	ldr	r1, [sp, #4]
   16080:	str	r1, [r0]
   16084:	mov	sp, fp
   16088:	pop	{fp, pc}
   1608c:	push	{fp, lr}
   16090:	mov	fp, sp
   16094:	sub	sp, sp, #16
   16098:	str	r0, [fp, #-4]
   1609c:	str	r1, [sp, #8]
   160a0:	ldr	r0, [sp, #8]
   160a4:	cmp	r0, #0
   160a8:	bls	16100 <__assert_fail@plt+0x4c6c>
   160ac:	ldr	r0, [fp, #-4]
   160b0:	movw	r1, #1
   160b4:	str	r1, [r0, #4]
   160b8:	ldr	r0, [sp, #8]
   160bc:	ldr	r2, [fp, #-4]
   160c0:	ldr	r2, [r2]
   160c4:	cmp	r1, r2
   160c8:	str	r0, [sp, #4]
   160cc:	ble	160e4 <__assert_fail@plt+0x4c50>
   160d0:	ldr	r0, [fp, #-4]
   160d4:	movw	r1, #1
   160d8:	bl	16114 <__assert_fail@plt+0x4c80>
   160dc:	str	r0, [sp]
   160e0:	b	160f0 <__assert_fail@plt+0x4c5c>
   160e4:	ldr	r0, [fp, #-4]
   160e8:	ldr	r0, [r0, #8]
   160ec:	str	r0, [sp]
   160f0:	ldr	r0, [sp]
   160f4:	ldr	r1, [sp, #4]
   160f8:	str	r1, [r0]
   160fc:	b	1610c <__assert_fail@plt+0x4c78>
   16100:	ldr	r0, [fp, #-4]
   16104:	movw	r1, #0
   16108:	str	r1, [r0, #4]
   1610c:	mov	sp, fp
   16110:	pop	{fp, pc}
   16114:	push	{fp, lr}
   16118:	mov	fp, sp
   1611c:	sub	sp, sp, #16
   16120:	str	r0, [fp, #-4]
   16124:	str	r1, [sp, #8]
   16128:	ldr	r0, [sp, #8]
   1612c:	cmp	r0, #1
   16130:	ble	16140 <__assert_fail@plt+0x4cac>
   16134:	ldr	r0, [sp, #8]
   16138:	str	r0, [sp, #4]
   1613c:	b	1614c <__assert_fail@plt+0x4cb8>
   16140:	movw	r0, #1
   16144:	str	r0, [sp, #4]
   16148:	b	1614c <__assert_fail@plt+0x4cb8>
   1614c:	ldr	r0, [sp, #4]
   16150:	str	r0, [sp, #8]
   16154:	ldr	r0, [fp, #-4]
   16158:	ldr	r0, [r0]
   1615c:	cmp	r0, #0
   16160:	beq	16188 <__assert_fail@plt+0x4cf4>
   16164:	ldr	r0, [fp, #-4]
   16168:	ldr	r0, [r0, #8]
   1616c:	ldr	r1, [fp, #-4]
   16170:	ldr	r1, [r1]
   16174:	ldr	r2, [sp, #8]
   16178:	bl	1f39c <__assert_fail@plt+0xdf08>
   1617c:	ldr	r1, [fp, #-4]
   16180:	str	r0, [r1, #8]
   16184:	b	16198 <__assert_fail@plt+0x4d04>
   16188:	ldr	r0, [sp, #8]
   1618c:	bl	15f30 <__assert_fail@plt+0x4a9c>
   16190:	ldr	lr, [fp, #-4]
   16194:	str	r0, [lr, #8]
   16198:	ldr	r0, [sp, #8]
   1619c:	ldr	r1, [fp, #-4]
   161a0:	str	r0, [r1]
   161a4:	ldr	r0, [fp, #-4]
   161a8:	ldr	r0, [r0, #4]
   161ac:	cmp	r0, #0
   161b0:	blt	161c4 <__assert_fail@plt+0x4d30>
   161b4:	ldr	r0, [fp, #-4]
   161b8:	ldr	r0, [r0, #4]
   161bc:	str	r0, [sp]
   161c0:	b	161d8 <__assert_fail@plt+0x4d44>
   161c4:	ldr	r0, [fp, #-4]
   161c8:	ldr	r0, [r0, #4]
   161cc:	movw	r1, #0
   161d0:	sub	r0, r1, r0
   161d4:	str	r0, [sp]
   161d8:	ldr	r0, [sp]
   161dc:	ldr	r1, [sp, #8]
   161e0:	cmp	r0, r1
   161e4:	ble	161f4 <__assert_fail@plt+0x4d60>
   161e8:	ldr	r0, [fp, #-4]
   161ec:	movw	r1, #0
   161f0:	str	r1, [r0, #4]
   161f4:	ldr	r0, [fp, #-4]
   161f8:	ldr	r0, [r0, #8]
   161fc:	mov	sp, fp
   16200:	pop	{fp, pc}
   16204:	push	{fp, lr}
   16208:	mov	fp, sp
   1620c:	sub	sp, sp, #24
   16210:	str	r0, [fp, #-4]
   16214:	str	r1, [fp, #-8]
   16218:	ldr	r0, [fp, #-4]
   1621c:	ldr	r1, [fp, #-8]
   16220:	cmp	r0, r1
   16224:	beq	162c4 <__assert_fail@plt+0x4e30>
   16228:	ldr	r0, [fp, #-8]
   1622c:	ldr	r0, [r0, #4]
   16230:	cmp	r0, #0
   16234:	blt	16248 <__assert_fail@plt+0x4db4>
   16238:	ldr	r0, [fp, #-8]
   1623c:	ldr	r0, [r0, #4]
   16240:	str	r0, [sp, #4]
   16244:	b	1625c <__assert_fail@plt+0x4dc8>
   16248:	ldr	r0, [fp, #-8]
   1624c:	ldr	r0, [r0, #4]
   16250:	movw	r1, #0
   16254:	sub	r0, r1, r0
   16258:	str	r0, [sp, #4]
   1625c:	ldr	r0, [sp, #4]
   16260:	str	r0, [sp, #12]
   16264:	ldr	r0, [sp, #12]
   16268:	ldr	r1, [fp, #-4]
   1626c:	ldr	r1, [r1]
   16270:	cmp	r0, r1
   16274:	ble	1628c <__assert_fail@plt+0x4df8>
   16278:	ldr	r0, [fp, #-4]
   1627c:	ldr	r1, [sp, #12]
   16280:	bl	16114 <__assert_fail@plt+0x4c80>
   16284:	str	r0, [sp]
   16288:	b	16298 <__assert_fail@plt+0x4e04>
   1628c:	ldr	r0, [fp, #-4]
   16290:	ldr	r0, [r0, #8]
   16294:	str	r0, [sp]
   16298:	ldr	r0, [sp]
   1629c:	str	r0, [sp, #8]
   162a0:	ldr	r0, [sp, #8]
   162a4:	ldr	r1, [fp, #-8]
   162a8:	ldr	r1, [r1, #8]
   162ac:	ldr	r2, [sp, #12]
   162b0:	bl	13af0 <__assert_fail@plt+0x265c>
   162b4:	ldr	r0, [fp, #-8]
   162b8:	ldr	r0, [r0, #4]
   162bc:	ldr	r1, [fp, #-4]
   162c0:	str	r0, [r1, #4]
   162c4:	mov	sp, fp
   162c8:	pop	{fp, pc}
   162cc:	push	{fp, lr}
   162d0:	mov	fp, sp
   162d4:	sub	sp, sp, #8
   162d8:	str	r0, [sp, #4]
   162dc:	str	r1, [sp]
   162e0:	ldr	r0, [sp, #4]
   162e4:	bl	15e94 <__assert_fail@plt+0x4a00>
   162e8:	ldr	r0, [sp, #4]
   162ec:	ldr	r1, [sp]
   162f0:	bl	15ff0 <__assert_fail@plt+0x4b5c>
   162f4:	mov	sp, fp
   162f8:	pop	{fp, pc}
   162fc:	push	{fp, lr}
   16300:	mov	fp, sp
   16304:	sub	sp, sp, #8
   16308:	str	r0, [sp, #4]
   1630c:	str	r1, [sp]
   16310:	ldr	r0, [sp, #4]
   16314:	bl	15e94 <__assert_fail@plt+0x4a00>
   16318:	ldr	r0, [sp, #4]
   1631c:	ldr	r1, [sp]
   16320:	bl	1608c <__assert_fail@plt+0x4bf8>
   16324:	mov	sp, fp
   16328:	pop	{fp, pc}
   1632c:	push	{fp, lr}
   16330:	mov	fp, sp
   16334:	sub	sp, sp, #8
   16338:	str	r0, [sp, #4]
   1633c:	str	r1, [sp]
   16340:	ldr	r0, [sp, #4]
   16344:	bl	15e94 <__assert_fail@plt+0x4a00>
   16348:	ldr	r0, [sp, #4]
   1634c:	ldr	r1, [sp]
   16350:	bl	16204 <__assert_fail@plt+0x4d70>
   16354:	mov	sp, fp
   16358:	pop	{fp, pc}
   1635c:	push	{fp, lr}
   16360:	mov	fp, sp
   16364:	sub	sp, sp, #8
   16368:	ldr	r1, [pc, #68]	; 163b4 <__assert_fail@plt+0x4f20>
   1636c:	str	r0, [sp, #4]
   16370:	ldr	r0, [sp, #4]
   16374:	bl	163bc <__assert_fail@plt+0x4f28>
   16378:	cmp	r0, #0
   1637c:	movw	r0, #0
   16380:	str	r0, [sp]
   16384:	bgt	163a4 <__assert_fail@plt+0x4f10>
   16388:	ldr	r1, [pc, #40]	; 163b8 <__assert_fail@plt+0x4f24>
   1638c:	ldr	r0, [sp, #4]
   16390:	bl	163bc <__assert_fail@plt+0x4f28>
   16394:	cmp	r0, #0
   16398:	movw	r0, #0
   1639c:	movge	r0, #1
   163a0:	str	r0, [sp]
   163a4:	ldr	r0, [sp]
   163a8:	and	r0, r0, #1
   163ac:	mov	sp, fp
   163b0:	pop	{fp, pc}
   163b4:	svcvc	0x00ffffff
   163b8:	andhi	r0, r0, r0
   163bc:	push	{fp, lr}
   163c0:	mov	fp, sp
   163c4:	sub	sp, sp, #16
   163c8:	str	r0, [sp, #8]
   163cc:	str	r1, [sp, #4]
   163d0:	ldr	r0, [sp, #8]
   163d4:	ldr	r0, [r0, #4]
   163d8:	str	r0, [sp]
   163dc:	ldr	r0, [sp, #4]
   163e0:	cmp	r0, #0
   163e4:	blt	163fc <__assert_fail@plt+0x4f68>
   163e8:	ldr	r0, [sp, #8]
   163ec:	ldr	r1, [sp, #4]
   163f0:	bl	172f0 <__assert_fail@plt+0x5e5c>
   163f4:	str	r0, [fp, #-4]
   163f8:	b	1643c <__assert_fail@plt+0x4fa8>
   163fc:	ldr	r0, [sp]
   16400:	cmp	r0, #0
   16404:	blt	16414 <__assert_fail@plt+0x4f80>
   16408:	movw	r0, #1
   1640c:	str	r0, [fp, #-4]
   16410:	b	1643c <__assert_fail@plt+0x4fa8>
   16414:	ldr	r0, [sp, #8]
   16418:	ldr	r1, [sp, #4]
   1641c:	add	r1, r1, #1
   16420:	sub	r1, r1, #1
   16424:	movw	r2, #0
   16428:	sub	r1, r2, r1
   1642c:	bl	165e8 <__assert_fail@plt+0x5154>
   16430:	movw	r1, #0
   16434:	sub	r0, r1, r0
   16438:	str	r0, [fp, #-4]
   1643c:	ldr	r0, [fp, #-4]
   16440:	mov	sp, fp
   16444:	pop	{fp, pc}
   16448:	push	{fp, lr}
   1644c:	mov	fp, sp
   16450:	sub	sp, sp, #16
   16454:	str	r0, [fp, #-4]
   16458:	ldr	r0, [fp, #-4]
   1645c:	ldr	r0, [r0, #4]
   16460:	str	r0, [sp, #8]
   16464:	ldr	r0, [sp, #8]
   16468:	cmp	r0, #0
   1646c:	movw	r0, #0
   16470:	str	r0, [sp, #4]
   16474:	blt	16498 <__assert_fail@plt+0x5004>
   16478:	ldr	r0, [fp, #-4]
   1647c:	ldr	r0, [r0, #8]
   16480:	ldr	r1, [sp, #8]
   16484:	bl	164a8 <__assert_fail@plt+0x5014>
   16488:	cmp	r0, #0
   1648c:	movw	r0, #0
   16490:	movne	r0, #1
   16494:	str	r0, [sp, #4]
   16498:	ldr	r0, [sp, #4]
   1649c:	and	r0, r0, #1
   164a0:	mov	sp, fp
   164a4:	pop	{fp, pc}
   164a8:	sub	sp, sp, #24
   164ac:	str	r0, [sp, #20]
   164b0:	str	r1, [sp, #16]
   164b4:	movw	r0, #1
   164b8:	str	r0, [sp, #12]
   164bc:	movw	r0, #0
   164c0:	str	r0, [sp, #8]
   164c4:	ldr	r0, [sp, #16]
   164c8:	ldr	r1, [sp, #12]
   164cc:	cmp	r0, r1
   164d0:	movw	r0, #1
   164d4:	str	r0, [sp, #4]
   164d8:	ble	16524 <__assert_fail@plt+0x5090>
   164dc:	ldr	r0, [sp, #20]
   164e0:	ldr	r1, [sp, #12]
   164e4:	add	r0, r0, r1, lsl #2
   164e8:	ldr	r0, [r0]
   164ec:	ldr	r1, [sp, #8]
   164f0:	cmp	r0, r1
   164f4:	movw	r0, #0
   164f8:	str	r0, [sp]
   164fc:	bcs	1651c <__assert_fail@plt+0x5088>
   16500:	ldr	r0, [sp, #16]
   16504:	ldr	r1, [sp, #12]
   16508:	add	r1, r1, #1
   1650c:	cmp	r0, r1
   16510:	movw	r0, #0
   16514:	moveq	r0, #1
   16518:	str	r0, [sp]
   1651c:	ldr	r0, [sp]
   16520:	str	r0, [sp, #4]
   16524:	ldr	r0, [sp, #4]
   16528:	and	r0, r0, #1
   1652c:	add	sp, sp, #24
   16530:	bx	lr
   16534:	push	{fp, lr}
   16538:	mov	fp, sp
   1653c:	sub	sp, sp, #8
   16540:	ldr	r1, [pc, #68]	; 1658c <__assert_fail@plt+0x50f8>
   16544:	str	r0, [sp, #4]
   16548:	ldr	r0, [sp, #4]
   1654c:	bl	163bc <__assert_fail@plt+0x4f28>
   16550:	cmp	r0, #0
   16554:	movw	r0, #0
   16558:	str	r0, [sp]
   1655c:	bgt	1657c <__assert_fail@plt+0x50e8>
   16560:	ldr	r1, [pc, #40]	; 16590 <__assert_fail@plt+0x50fc>
   16564:	ldr	r0, [sp, #4]
   16568:	bl	163bc <__assert_fail@plt+0x4f28>
   1656c:	cmp	r0, #0
   16570:	movw	r0, #0
   16574:	movge	r0, #1
   16578:	str	r0, [sp]
   1657c:	ldr	r0, [sp]
   16580:	and	r0, r0, #1
   16584:	mov	sp, fp
   16588:	pop	{fp, pc}
   1658c:	svcvc	0x00ffffff
   16590:	andhi	r0, r0, r0
   16594:	push	{fp, lr}
   16598:	mov	fp, sp
   1659c:	sub	sp, sp, #8
   165a0:	str	r0, [sp, #4]
   165a4:	ldr	r0, [sp, #4]
   165a8:	ldr	r0, [r0, #4]
   165ac:	cmp	r0, #0
   165b0:	movw	r0, #0
   165b4:	str	r0, [sp]
   165b8:	blt	165d8 <__assert_fail@plt+0x5144>
   165bc:	ldr	r0, [sp, #4]
   165c0:	mvn	r1, #0
   165c4:	bl	165e8 <__assert_fail@plt+0x5154>
   165c8:	cmp	r0, #0
   165cc:	movw	r0, #0
   165d0:	movle	r0, #1
   165d4:	str	r0, [sp]
   165d8:	ldr	r0, [sp]
   165dc:	and	r0, r0, #1
   165e0:	mov	sp, fp
   165e4:	pop	{fp, pc}
   165e8:	push	{fp, lr}
   165ec:	mov	fp, sp
   165f0:	sub	sp, sp, #24
   165f4:	str	r0, [fp, #-8]
   165f8:	str	r1, [sp, #12]
   165fc:	ldr	r0, [fp, #-8]
   16600:	ldr	r0, [r0, #4]
   16604:	cmp	r0, #0
   16608:	blt	1661c <__assert_fail@plt+0x5188>
   1660c:	ldr	r0, [fp, #-8]
   16610:	ldr	r0, [r0, #4]
   16614:	str	r0, [sp]
   16618:	b	16630 <__assert_fail@plt+0x519c>
   1661c:	ldr	r0, [fp, #-8]
   16620:	ldr	r0, [r0, #4]
   16624:	movw	r1, #0
   16628:	sub	r0, r1, r0
   1662c:	str	r0, [sp]
   16630:	ldr	r0, [sp]
   16634:	str	r0, [sp, #8]
   16638:	ldr	r0, [fp, #-8]
   1663c:	ldr	r0, [r0, #8]
   16640:	ldr	r1, [sp, #8]
   16644:	bl	164a8 <__assert_fail@plt+0x5014>
   16648:	cmp	r0, #0
   1664c:	bne	1665c <__assert_fail@plt+0x51c8>
   16650:	movw	r0, #1
   16654:	str	r0, [fp, #-4]
   16658:	b	166a0 <__assert_fail@plt+0x520c>
   1665c:	ldr	r0, [fp, #-8]
   16660:	bl	167dc <__assert_fail@plt+0x5348>
   16664:	str	r0, [sp, #4]
   16668:	ldr	r0, [sp, #4]
   1666c:	ldr	lr, [sp, #12]
   16670:	cmp	r0, lr
   16674:	movw	r0, #0
   16678:	movhi	r0, #1
   1667c:	and	r0, r0, #1
   16680:	ldr	lr, [sp, #4]
   16684:	ldr	r1, [sp, #12]
   16688:	cmp	lr, r1
   1668c:	movw	r1, #0
   16690:	movcc	r1, #1
   16694:	and	r1, r1, #1
   16698:	sub	r0, r0, r1
   1669c:	str	r0, [fp, #-4]
   166a0:	ldr	r0, [fp, #-4]
   166a4:	mov	sp, fp
   166a8:	pop	{fp, pc}
   166ac:	push	{fp, lr}
   166b0:	mov	fp, sp
   166b4:	sub	sp, sp, #8
   166b8:	str	r0, [sp, #4]
   166bc:	ldr	r0, [sp, #4]
   166c0:	movw	r1, #32767	; 0x7fff
   166c4:	bl	163bc <__assert_fail@plt+0x4f28>
   166c8:	cmp	r0, #0
   166cc:	movw	r0, #0
   166d0:	str	r0, [sp]
   166d4:	bgt	166f4 <__assert_fail@plt+0x5260>
   166d8:	ldr	r1, [pc, #36]	; 16704 <__assert_fail@plt+0x5270>
   166dc:	ldr	r0, [sp, #4]
   166e0:	bl	163bc <__assert_fail@plt+0x4f28>
   166e4:	cmp	r0, #0
   166e8:	movw	r0, #0
   166ec:	movge	r0, #1
   166f0:	str	r0, [sp]
   166f4:	ldr	r0, [sp]
   166f8:	and	r0, r0, #1
   166fc:	mov	sp, fp
   16700:	pop	{fp, pc}
   16704:			; <UNDEFINED> instruction: 0xffff8000
   16708:	push	{fp, lr}
   1670c:	mov	fp, sp
   16710:	sub	sp, sp, #8
   16714:	str	r0, [sp, #4]
   16718:	ldr	r0, [sp, #4]
   1671c:	ldr	r0, [r0, #4]
   16720:	cmp	r0, #0
   16724:	movw	r0, #0
   16728:	str	r0, [sp]
   1672c:	blt	1674c <__assert_fail@plt+0x52b8>
   16730:	ldr	r0, [sp, #4]
   16734:	movw	r1, #65535	; 0xffff
   16738:	bl	165e8 <__assert_fail@plt+0x5154>
   1673c:	cmp	r0, #0
   16740:	movw	r0, #0
   16744:	movle	r0, #1
   16748:	str	r0, [sp]
   1674c:	ldr	r0, [sp]
   16750:	and	r0, r0, #1
   16754:	mov	sp, fp
   16758:	pop	{fp, pc}
   1675c:	push	{fp, lr}
   16760:	mov	fp, sp
   16764:	sub	sp, sp, #16
   16768:	str	r0, [sp, #8]
   1676c:	ldr	r0, [sp, #8]
   16770:	bl	167dc <__assert_fail@plt+0x5348>
   16774:	str	r0, [sp, #4]
   16778:	movw	r0, #1
   1677c:	str	r0, [sp]
   16780:	ldr	r0, [sp, #8]
   16784:	ldr	r0, [r0, #4]
   16788:	cmp	r0, #0
   1678c:	bge	167bc <__assert_fail@plt+0x5328>
   16790:	ldr	r0, [pc, #64]	; 167d8 <__assert_fail@plt+0x5344>
   16794:	ldr	r1, [sp]
   16798:	movw	r2, #0
   1679c:	sub	r1, r2, r1
   167a0:	ldr	r2, [sp, #4]
   167a4:	ldr	r3, [sp]
   167a8:	sub	r2, r2, r3
   167ac:	and	r0, r2, r0
   167b0:	sub	r0, r1, r0
   167b4:	str	r0, [fp, #-4]
   167b8:	b	167cc <__assert_fail@plt+0x5338>
   167bc:	ldr	r0, [pc, #20]	; 167d8 <__assert_fail@plt+0x5344>
   167c0:	ldr	r1, [sp, #4]
   167c4:	and	r0, r1, r0
   167c8:	str	r0, [fp, #-4]
   167cc:	ldr	r0, [fp, #-4]
   167d0:	mov	sp, fp
   167d4:	pop	{fp, pc}
   167d8:	svcvc	0x00ffffff
   167dc:	sub	sp, sp, #8
   167e0:	str	r0, [sp, #4]
   167e4:	ldr	r0, [sp, #4]
   167e8:	ldr	r0, [r0, #4]
   167ec:	cmp	r0, #0
   167f0:	bne	16800 <__assert_fail@plt+0x536c>
   167f4:	movw	r0, #0
   167f8:	str	r0, [sp]
   167fc:	b	16810 <__assert_fail@plt+0x537c>
   16800:	ldr	r0, [sp, #4]
   16804:	ldr	r0, [r0, #8]
   16808:	ldr	r0, [r0]
   1680c:	str	r0, [sp]
   16810:	ldr	r0, [sp]
   16814:	add	sp, sp, #8
   16818:	bx	lr
   1681c:	sub	sp, sp, #8
   16820:	str	r0, [sp, #4]
   16824:	ldr	r0, [sp, #4]
   16828:	ldr	r0, [r0, #4]
   1682c:	cmp	r0, #0
   16830:	blt	16844 <__assert_fail@plt+0x53b0>
   16834:	ldr	r0, [sp, #4]
   16838:	ldr	r0, [r0, #4]
   1683c:	str	r0, [sp]
   16840:	b	16858 <__assert_fail@plt+0x53c4>
   16844:	ldr	r0, [sp, #4]
   16848:	ldr	r0, [r0, #4]
   1684c:	movw	r1, #0
   16850:	sub	r0, r1, r0
   16854:	str	r0, [sp]
   16858:	ldr	r0, [sp]
   1685c:	add	sp, sp, #8
   16860:	bx	lr
   16864:	sub	sp, sp, #20
   16868:	str	r0, [sp, #12]
   1686c:	str	r1, [sp, #8]
   16870:	ldr	r0, [sp, #8]
   16874:	cmp	r0, #0
   16878:	blt	168e4 <__assert_fail@plt+0x5450>
   1687c:	ldr	r0, [sp, #8]
   16880:	ldr	r1, [sp, #12]
   16884:	ldr	r1, [r1, #4]
   16888:	cmp	r1, #0
   1688c:	str	r0, [sp, #4]
   16890:	blt	168a4 <__assert_fail@plt+0x5410>
   16894:	ldr	r0, [sp, #12]
   16898:	ldr	r0, [r0, #4]
   1689c:	str	r0, [sp]
   168a0:	b	168b8 <__assert_fail@plt+0x5424>
   168a4:	ldr	r0, [sp, #12]
   168a8:	ldr	r0, [r0, #4]
   168ac:	movw	r1, #0
   168b0:	sub	r0, r1, r0
   168b4:	str	r0, [sp]
   168b8:	ldr	r0, [sp]
   168bc:	ldr	r1, [sp, #4]
   168c0:	cmp	r1, r0
   168c4:	bge	168e4 <__assert_fail@plt+0x5450>
   168c8:	ldr	r0, [sp, #12]
   168cc:	ldr	r0, [r0, #8]
   168d0:	ldr	r1, [sp, #8]
   168d4:	add	r0, r0, r1, lsl #2
   168d8:	ldr	r0, [r0]
   168dc:	str	r0, [sp, #16]
   168e0:	b	168ec <__assert_fail@plt+0x5458>
   168e4:	movw	r0, #0
   168e8:	str	r0, [sp, #16]
   168ec:	ldr	r0, [sp, #16]
   168f0:	add	sp, sp, #20
   168f4:	bx	lr
   168f8:	push	{fp, lr}
   168fc:	mov	fp, sp
   16900:	sub	sp, sp, #16
   16904:	str	r0, [fp, #-4]
   16908:	str	r1, [sp, #8]
   1690c:	ldr	r0, [fp, #-4]
   16910:	ldr	r1, [sp, #8]
   16914:	sub	r2, r1, #1
   16918:	cmp	r1, #0
   1691c:	movne	r1, r2
   16920:	lsr	r1, r1, #5
   16924:	add	r1, r1, #1
   16928:	bl	16114 <__assert_fail@plt+0x4c80>
   1692c:	str	r0, [sp, #4]
   16930:	mov	sp, fp
   16934:	pop	{fp, pc}
   16938:	sub	sp, sp, #4
   1693c:	str	r0, [sp]
   16940:	ldr	r0, [sp]
   16944:	ldr	r0, [r0, #8]
   16948:	add	sp, sp, #4
   1694c:	bx	lr
   16950:	push	{fp, lr}
   16954:	mov	fp, sp
   16958:	sub	sp, sp, #16
   1695c:	str	r0, [fp, #-4]
   16960:	str	r1, [sp, #8]
   16964:	ldr	r0, [sp, #8]
   16968:	cmp	r0, #0
   1696c:	ble	16974 <__assert_fail@plt+0x54e0>
   16970:	b	16994 <__assert_fail@plt+0x5500>
   16974:	movw	r0, #20785	; 0x5131
   16978:	movt	r0, #4
   1697c:	movw	r1, #17404	; 0x43fc
   16980:	movt	r1, #4
   16984:	movw	r2, #1663	; 0x67f
   16988:	movw	r3, #18287	; 0x476f
   1698c:	movt	r3, #4
   16990:	bl	11494 <__assert_fail@plt>
   16994:	ldr	r0, [sp, #8]
   16998:	ldr	r1, [fp, #-4]
   1699c:	ldr	r1, [r1]
   169a0:	cmp	r0, r1
   169a4:	ble	169bc <__assert_fail@plt+0x5528>
   169a8:	ldr	r0, [fp, #-4]
   169ac:	ldr	r1, [sp, #8]
   169b0:	bl	16114 <__assert_fail@plt+0x4c80>
   169b4:	str	r0, [sp, #4]
   169b8:	b	169c8 <__assert_fail@plt+0x5534>
   169bc:	ldr	r0, [fp, #-4]
   169c0:	ldr	r0, [r0, #8]
   169c4:	str	r0, [sp, #4]
   169c8:	ldr	r0, [sp, #4]
   169cc:	mov	sp, fp
   169d0:	pop	{fp, pc}
   169d4:	push	{fp, lr}
   169d8:	mov	fp, sp
   169dc:	sub	sp, sp, #8
   169e0:	str	r0, [sp, #4]
   169e4:	str	r1, [sp]
   169e8:	ldr	r0, [sp, #4]
   169ec:	ldr	r1, [sp]
   169f0:	bl	16950 <__assert_fail@plt+0x54bc>
   169f4:	mov	sp, fp
   169f8:	pop	{fp, pc}
   169fc:	push	{fp, lr}
   16a00:	mov	fp, sp
   16a04:	sub	sp, sp, #32
   16a08:	str	r0, [fp, #-4]
   16a0c:	str	r1, [fp, #-8]
   16a10:	ldr	r0, [fp, #-4]
   16a14:	ldr	r0, [r0, #8]
   16a18:	ldr	r1, [fp, #-8]
   16a1c:	cmp	r1, #0
   16a20:	str	r0, [sp, #16]
   16a24:	blt	16a34 <__assert_fail@plt+0x55a0>
   16a28:	ldr	r0, [fp, #-8]
   16a2c:	str	r0, [sp, #12]
   16a30:	b	16a44 <__assert_fail@plt+0x55b0>
   16a34:	ldr	r0, [fp, #-8]
   16a38:	movw	r1, #0
   16a3c:	sub	r0, r1, r0
   16a40:	str	r0, [sp, #12]
   16a44:	ldr	r0, [sp, #12]
   16a48:	ldr	r1, [sp, #16]
   16a4c:	str	r0, [sp, #8]
   16a50:	mov	r0, r1
   16a54:	ldr	r1, [sp, #8]
   16a58:	bl	13c64 <__assert_fail@plt+0x27d0>
   16a5c:	str	r0, [fp, #-12]
   16a60:	ldr	r0, [fp, #-8]
   16a64:	cmp	r0, #0
   16a68:	bge	16a80 <__assert_fail@plt+0x55ec>
   16a6c:	ldr	r0, [fp, #-12]
   16a70:	movw	r1, #0
   16a74:	sub	r0, r1, r0
   16a78:	str	r0, [sp, #4]
   16a7c:	b	16a88 <__assert_fail@plt+0x55f4>
   16a80:	ldr	r0, [fp, #-12]
   16a84:	str	r0, [sp, #4]
   16a88:	ldr	r0, [sp, #4]
   16a8c:	ldr	r1, [fp, #-4]
   16a90:	str	r0, [r1, #4]
   16a94:	mov	sp, fp
   16a98:	pop	{fp, pc}
   16a9c:	push	{fp, lr}
   16aa0:	mov	fp, sp
   16aa4:	sub	sp, sp, #16
   16aa8:	str	r0, [fp, #-4]
   16aac:	str	r1, [sp, #8]
   16ab0:	str	r2, [sp, #4]
   16ab4:	ldr	r0, [fp, #-4]
   16ab8:	ldr	r1, [sp, #8]
   16abc:	ldr	r2, [sp, #4]
   16ac0:	bl	16ae8 <__assert_fail@plt+0x5654>
   16ac4:	ldr	r1, [fp, #-4]
   16ac8:	ldr	r2, [sp, #4]
   16acc:	str	r0, [sp]
   16ad0:	mov	r0, r1
   16ad4:	mov	r1, r2
   16ad8:	bl	169fc <__assert_fail@plt+0x5568>
   16adc:	ldr	r0, [fp, #-4]
   16ae0:	mov	sp, fp
   16ae4:	pop	{fp, pc}
   16ae8:	sub	sp, sp, #12
   16aec:	str	r0, [sp, #8]
   16af0:	str	r1, [sp, #4]
   16af4:	str	r2, [sp]
   16af8:	ldr	r0, [sp, #8]
   16afc:	movw	r1, #0
   16b00:	str	r1, [r0]
   16b04:	ldr	r0, [sp, #4]
   16b08:	ldr	r1, [sp, #8]
   16b0c:	str	r0, [r1, #8]
   16b10:	ldr	r0, [sp]
   16b14:	ldr	r1, [sp, #8]
   16b18:	str	r0, [r1, #4]
   16b1c:	ldr	r0, [sp, #8]
   16b20:	add	sp, sp, #12
   16b24:	bx	lr
   16b28:	push	{fp, lr}
   16b2c:	mov	fp, sp
   16b30:	sub	sp, sp, #64	; 0x40
   16b34:	str	r0, [fp, #-4]
   16b38:	vstr	d0, [fp, #-16]
   16b3c:	vldr	d0, [fp, #-16]
   16b40:	vldr	d16, [fp, #-16]
   16b44:	vcmp.f64	d0, d16
   16b48:	vmrs	APSR_nzcv, fpscr
   16b4c:	bne	16b6c <__assert_fail@plt+0x56d8>
   16b50:	vldr	d16, [fp, #-16]
   16b54:	vldr	d17, [fp, #-16]
   16b58:	vmov.f64	d18, #96	; 0x3f000000  0.5
   16b5c:	vmul.f64	d17, d17, d18
   16b60:	vcmp.f64	d16, d17
   16b64:	vmrs	APSR_nzcv, fpscr
   16b68:	bne	16b7c <__assert_fail@plt+0x56e8>
   16b6c:	ldr	r0, [fp, #-4]
   16b70:	movw	r1, #0
   16b74:	str	r1, [r0, #4]
   16b78:	b	16db8 <__assert_fail@plt+0x5924>
   16b7c:	vldr	d16, [fp, #-16]
   16b80:	vcmpe.f64	d16, #0.0
   16b84:	vmrs	APSR_nzcv, fpscr
   16b88:	movw	r0, #0
   16b8c:	movmi	r0, #1
   16b90:	and	r0, r0, #1
   16b94:	str	r0, [fp, #-20]	; 0xffffffec
   16b98:	ldr	r0, [fp, #-20]	; 0xffffffec
   16b9c:	cmp	r0, #0
   16ba0:	beq	16bb0 <__assert_fail@plt+0x571c>
   16ba4:	vldr	d16, [fp, #-16]
   16ba8:	vneg.f64	d16, d16
   16bac:	vstr	d16, [fp, #-16]
   16bb0:	vldr	d16, [fp, #-16]
   16bb4:	vmov.f64	d17, #112	; 0x3f800000  1.0
   16bb8:	vcmpe.f64	d16, d17
   16bbc:	vmrs	APSR_nzcv, fpscr
   16bc0:	bpl	16bd4 <__assert_fail@plt+0x5740>
   16bc4:	ldr	r0, [fp, #-4]
   16bc8:	movw	r1, #0
   16bcc:	str	r1, [r0, #4]
   16bd0:	b	16db8 <__assert_fail@plt+0x5924>
   16bd4:	vldr	d16, [pc, #484]	; 16dc0 <__assert_fail@plt+0x592c>
   16bd8:	vstr	d16, [sp, #24]
   16bdc:	vldr	d16, [sp, #24]
   16be0:	vmov.f64	d17, #112	; 0x3f800000  1.0
   16be4:	vdiv.f64	d16, d17, d16
   16be8:	vstr	d16, [sp, #16]
   16bec:	movw	r0, #1
   16bf0:	str	r0, [fp, #-28]	; 0xffffffe4
   16bf4:	vldr	d16, [fp, #-16]
   16bf8:	vldr	d17, [sp, #24]
   16bfc:	vcmpe.f64	d16, d17
   16c00:	vmrs	APSR_nzcv, fpscr
   16c04:	blt	16c28 <__assert_fail@plt+0x5794>
   16c08:	vldr	d16, [sp, #16]
   16c0c:	vldr	d17, [fp, #-16]
   16c10:	vmul.f64	d16, d17, d16
   16c14:	vstr	d16, [fp, #-16]
   16c18:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16c1c:	add	r0, r0, #1
   16c20:	str	r0, [fp, #-28]	; 0xffffffe4
   16c24:	b	16bf4 <__assert_fail@plt+0x5760>
   16c28:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16c2c:	ldr	r1, [fp, #-4]
   16c30:	ldr	r1, [r1]
   16c34:	cmp	r0, r1
   16c38:	ble	16c50 <__assert_fail@plt+0x57bc>
   16c3c:	ldr	r0, [fp, #-4]
   16c40:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16c44:	bl	16114 <__assert_fail@plt+0x4c80>
   16c48:	str	r0, [sp, #8]
   16c4c:	b	16c5c <__assert_fail@plt+0x57c8>
   16c50:	ldr	r0, [fp, #-4]
   16c54:	ldr	r0, [r0, #8]
   16c58:	str	r0, [sp, #8]
   16c5c:	ldr	r0, [sp, #8]
   16c60:	str	r0, [fp, #-24]	; 0xffffffe8
   16c64:	vldr	d16, [fp, #-16]
   16c68:	vcvt.u32.f64	s0, d16
   16c6c:	vmov	r0, s0
   16c70:	str	r0, [sp, #12]
   16c74:	ldr	r0, [sp, #12]
   16c78:	vmov	s0, r0
   16c7c:	vcvt.f64.u32	d16, s0
   16c80:	vldr	d17, [fp, #-16]
   16c84:	vsub.f64	d16, d17, d16
   16c88:	vstr	d16, [fp, #-16]
   16c8c:	vldr	d16, [fp, #-16]
   16c90:	vmov.f64	d17, #112	; 0x3f800000  1.0
   16c94:	vcmpe.f64	d16, d17
   16c98:	vmrs	APSR_nzcv, fpscr
   16c9c:	bpl	16ca4 <__assert_fail@plt+0x5810>
   16ca0:	b	16cc4 <__assert_fail@plt+0x5830>
   16ca4:	movw	r0, #18338	; 0x47a2
   16ca8:	movt	r0, #4
   16cac:	movw	r1, #17404	; 0x43fc
   16cb0:	movt	r1, #4
   16cb4:	movw	r2, #1736	; 0x6c8
   16cb8:	movw	r3, #18346	; 0x47aa
   16cbc:	movt	r3, #4
   16cc0:	bl	11494 <__assert_fail@plt>
   16cc4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16cc8:	sub	r0, r0, #1
   16ccc:	str	r0, [sp, #32]
   16cd0:	ldr	r0, [sp, #12]
   16cd4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16cd8:	ldr	r2, [sp, #32]
   16cdc:	add	r1, r1, r2, lsl #2
   16ce0:	str	r0, [r1]
   16ce4:	ldr	r0, [sp, #32]
   16ce8:	mvn	r1, #0
   16cec:	add	r0, r0, r1
   16cf0:	str	r0, [sp, #32]
   16cf4:	cmp	r0, #0
   16cf8:	blt	16d84 <__assert_fail@plt+0x58f0>
   16cfc:	vldr	d16, [sp, #24]
   16d00:	vldr	d17, [fp, #-16]
   16d04:	vmul.f64	d16, d16, d17
   16d08:	vstr	d16, [fp, #-16]
   16d0c:	vldr	d16, [fp, #-16]
   16d10:	vcvt.u32.f64	s0, d16
   16d14:	vmov	r0, s0
   16d18:	str	r0, [sp, #12]
   16d1c:	ldr	r0, [sp, #12]
   16d20:	vmov	s0, r0
   16d24:	vcvt.f64.u32	d16, s0
   16d28:	vldr	d17, [fp, #-16]
   16d2c:	vsub.f64	d16, d17, d16
   16d30:	vstr	d16, [fp, #-16]
   16d34:	vldr	d16, [fp, #-16]
   16d38:	vmov.f64	d17, #112	; 0x3f800000  1.0
   16d3c:	vcmpe.f64	d16, d17
   16d40:	vmrs	APSR_nzcv, fpscr
   16d44:	bpl	16d4c <__assert_fail@plt+0x58b8>
   16d48:	b	16d6c <__assert_fail@plt+0x58d8>
   16d4c:	movw	r0, #18338	; 0x47a2
   16d50:	movt	r0, #4
   16d54:	movw	r1, #17404	; 0x43fc
   16d58:	movt	r1, #4
   16d5c:	movw	r2, #1744	; 0x6d0
   16d60:	movw	r3, #18346	; 0x47aa
   16d64:	movt	r3, #4
   16d68:	bl	11494 <__assert_fail@plt>
   16d6c:	ldr	r0, [sp, #12]
   16d70:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16d74:	ldr	r2, [sp, #32]
   16d78:	add	r1, r1, r2, lsl #2
   16d7c:	str	r0, [r1]
   16d80:	b	16ce4 <__assert_fail@plt+0x5850>
   16d84:	ldr	r0, [fp, #-20]	; 0xffffffec
   16d88:	cmp	r0, #0
   16d8c:	beq	16da4 <__assert_fail@plt+0x5910>
   16d90:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16d94:	movw	r1, #0
   16d98:	sub	r0, r1, r0
   16d9c:	str	r0, [sp, #4]
   16da0:	b	16dac <__assert_fail@plt+0x5918>
   16da4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16da8:	str	r0, [sp, #4]
   16dac:	ldr	r0, [sp, #4]
   16db0:	ldr	r1, [fp, #-4]
   16db4:	str	r0, [r1, #4]
   16db8:	mov	sp, fp
   16dbc:	pop	{fp, pc}
   16dc0:	andeq	r0, r0, r0
   16dc4:	mvnsmi	r0, r0
   16dc8:	push	{fp, lr}
   16dcc:	mov	fp, sp
   16dd0:	sub	sp, sp, #16
   16dd4:	str	r0, [fp, #-4]
   16dd8:	vstr	d0, [sp]
   16ddc:	ldr	r0, [fp, #-4]
   16de0:	bl	15e94 <__assert_fail@plt+0x4a00>
   16de4:	ldr	r0, [fp, #-4]
   16de8:	vldr	d0, [sp]
   16dec:	bl	16b28 <__assert_fail@plt+0x5694>
   16df0:	mov	sp, fp
   16df4:	pop	{fp, pc}
   16df8:	sub	sp, sp, #56	; 0x38
   16dfc:	vldr	d16, [pc, #556]	; 17030 <__assert_fail@plt+0x5b9c>
   16e00:	str	r0, [sp, #44]	; 0x2c
   16e04:	vstr	d16, [sp, #16]
   16e08:	ldr	r0, [sp, #44]	; 0x2c
   16e0c:	ldr	r0, [r0, #4]
   16e10:	cmp	r0, #0
   16e14:	blt	16e28 <__assert_fail@plt+0x5994>
   16e18:	ldr	r0, [sp, #44]	; 0x2c
   16e1c:	ldr	r0, [r0, #4]
   16e20:	str	r0, [sp]
   16e24:	b	16e3c <__assert_fail@plt+0x59a8>
   16e28:	ldr	r0, [sp, #44]	; 0x2c
   16e2c:	ldr	r0, [r0, #4]
   16e30:	movw	r1, #0
   16e34:	sub	r0, r1, r0
   16e38:	str	r0, [sp]
   16e3c:	ldr	r0, [sp]
   16e40:	str	r0, [sp, #32]
   16e44:	ldr	r0, [sp, #32]
   16e48:	cmp	r0, #0
   16e4c:	bne	16e5c <__assert_fail@plt+0x59c8>
   16e50:	vldr	d16, [pc, #480]	; 17038 <__assert_fail@plt+0x5ba4>
   16e54:	vstr	d16, [sp, #48]	; 0x30
   16e58:	b	17024 <__assert_fail@plt+0x5b90>
   16e5c:	ldr	r0, [sp, #44]	; 0x2c
   16e60:	ldr	r0, [r0, #8]
   16e64:	ldr	r1, [sp, #32]
   16e68:	sub	r1, r1, #1
   16e6c:	str	r1, [sp, #32]
   16e70:	add	r0, r0, r1, lsl #2
   16e74:	ldr	r0, [r0]
   16e78:	str	r0, [sp, #36]	; 0x24
   16e7c:	ldr	r0, [sp, #36]	; 0x24
   16e80:	str	r0, [sp, #12]
   16e84:	movw	r0, #0
   16e88:	str	r0, [sp, #8]
   16e8c:	movw	r0, #8
   16e90:	str	r0, [sp, #4]
   16e94:	ldr	r0, [sp, #4]
   16e98:	movw	r1, #32
   16e9c:	cmp	r1, r0
   16ea0:	bls	16edc <__assert_fail@plt+0x5a48>
   16ea4:	b	16ea8 <__assert_fail@plt+0x5a14>
   16ea8:	ldr	r0, [sp, #12]
   16eac:	and	r0, r0, #-16777216	; 0xff000000
   16eb0:	cmp	r0, #0
   16eb4:	bne	16ed8 <__assert_fail@plt+0x5a44>
   16eb8:	ldr	r0, [sp, #4]
   16ebc:	ldr	r1, [sp, #12]
   16ec0:	lsl	r0, r1, r0
   16ec4:	str	r0, [sp, #12]
   16ec8:	ldr	r0, [sp, #8]
   16ecc:	add	r0, r0, #8
   16ed0:	str	r0, [sp, #8]
   16ed4:	b	16ea8 <__assert_fail@plt+0x5a14>
   16ed8:	b	16edc <__assert_fail@plt+0x5a48>
   16edc:	b	16ee0 <__assert_fail@plt+0x5a4c>
   16ee0:	ldr	r0, [sp, #12]
   16ee4:	and	r0, r0, #-2147483648	; 0x80000000
   16ee8:	cmp	r0, #0
   16eec:	bne	16f0c <__assert_fail@plt+0x5a78>
   16ef0:	ldr	r0, [sp, #12]
   16ef4:	lsl	r0, r0, #1
   16ef8:	str	r0, [sp, #12]
   16efc:	ldr	r0, [sp, #8]
   16f00:	add	r0, r0, #1
   16f04:	str	r0, [sp, #8]
   16f08:	b	16ee0 <__assert_fail@plt+0x5a4c>
   16f0c:	ldr	r0, [sp, #8]
   16f10:	str	r0, [sp, #40]	; 0x28
   16f14:	ldr	r0, [sp, #40]	; 0x28
   16f18:	add	r0, r0, #53	; 0x35
   16f1c:	sub	r0, r0, #32
   16f20:	str	r0, [sp, #40]	; 0x28
   16f24:	ldr	r0, [sp, #40]	; 0x28
   16f28:	cmp	r0, #0
   16f2c:	bge	16f50 <__assert_fail@plt+0x5abc>
   16f30:	ldr	r0, [sp, #40]	; 0x28
   16f34:	movw	r1, #0
   16f38:	sub	r0, r1, r0
   16f3c:	mvn	r1, #0
   16f40:	lsl	r0, r1, r0
   16f44:	ldr	r1, [sp, #36]	; 0x24
   16f48:	and	r0, r1, r0
   16f4c:	str	r0, [sp, #36]	; 0x24
   16f50:	ldr	r0, [sp, #36]	; 0x24
   16f54:	vmov	s0, r0
   16f58:	vcvt.f64.u32	d16, s0
   16f5c:	vstr	d16, [sp, #24]
   16f60:	ldr	r0, [sp, #32]
   16f64:	mvn	r1, #0
   16f68:	add	r0, r0, r1
   16f6c:	str	r0, [sp, #32]
   16f70:	cmp	r0, #0
   16f74:	blt	17000 <__assert_fail@plt+0x5b6c>
   16f78:	vldr	d16, [sp, #16]
   16f7c:	vldr	d17, [sp, #24]
   16f80:	vmul.f64	d16, d16, d17
   16f84:	vstr	d16, [sp, #24]
   16f88:	ldr	r0, [sp, #40]	; 0x28
   16f8c:	cmp	r0, #0
   16f90:	ble	16ffc <__assert_fail@plt+0x5b68>
   16f94:	ldr	r0, [sp, #44]	; 0x2c
   16f98:	ldr	r0, [r0, #8]
   16f9c:	ldr	r1, [sp, #32]
   16fa0:	add	r0, r0, r1, lsl #2
   16fa4:	ldr	r0, [r0]
   16fa8:	str	r0, [sp, #36]	; 0x24
   16fac:	ldr	r0, [sp, #40]	; 0x28
   16fb0:	sub	r0, r0, #32
   16fb4:	str	r0, [sp, #40]	; 0x28
   16fb8:	ldr	r0, [sp, #40]	; 0x28
   16fbc:	cmp	r0, #0
   16fc0:	bge	16fe4 <__assert_fail@plt+0x5b50>
   16fc4:	ldr	r0, [sp, #40]	; 0x28
   16fc8:	movw	r1, #0
   16fcc:	sub	r0, r1, r0
   16fd0:	mvn	r1, #0
   16fd4:	lsl	r0, r1, r0
   16fd8:	ldr	r1, [sp, #36]	; 0x24
   16fdc:	and	r0, r1, r0
   16fe0:	str	r0, [sp, #36]	; 0x24
   16fe4:	ldr	r0, [sp, #36]	; 0x24
   16fe8:	vmov	s0, r0
   16fec:	vcvt.f64.u32	d16, s0
   16ff0:	vldr	d17, [sp, #24]
   16ff4:	vadd.f64	d16, d17, d16
   16ff8:	vstr	d16, [sp, #24]
   16ffc:	b	16f60 <__assert_fail@plt+0x5acc>
   17000:	ldr	r0, [sp, #44]	; 0x2c
   17004:	ldr	r0, [r0, #4]
   17008:	cmp	r0, #0
   1700c:	bge	1701c <__assert_fail@plt+0x5b88>
   17010:	vldr	d16, [sp, #24]
   17014:	vneg.f64	d16, d16
   17018:	vstr	d16, [sp, #24]
   1701c:	vldr	d16, [sp, #24]
   17020:	vstr	d16, [sp, #48]	; 0x30
   17024:	vldr	d0, [sp, #48]	; 0x30
   17028:	add	sp, sp, #56	; 0x38
   1702c:	bx	lr
   17030:	andeq	r0, r0, r0
   17034:	mvnsmi	r0, r0
	...
   17040:	sub	sp, sp, #72	; 0x48
   17044:	str	r0, [sp, #64]	; 0x40
   17048:	vstr	d0, [sp, #56]	; 0x38
   1704c:	ldr	r0, [sp, #64]	; 0x40
   17050:	ldr	r0, [r0, #4]
   17054:	str	r0, [sp, #52]	; 0x34
   17058:	vldr	d0, [sp, #56]	; 0x38
   1705c:	vcmpe.f64	d0, #0.0
   17060:	vmrs	APSR_nzcv, fpscr
   17064:	blt	17074 <__assert_fail@plt+0x5be0>
   17068:	vldr	d16, [sp, #56]	; 0x38
   1706c:	vstr	d16, [sp, #8]
   17070:	b	17080 <__assert_fail@plt+0x5bec>
   17074:	vldr	d16, [sp, #56]	; 0x38
   17078:	vneg.f64	d16, d16
   1707c:	vstr	d16, [sp, #8]
   17080:	vldr	d16, [sp, #8]
   17084:	vstr	d16, [sp, #56]	; 0x38
   17088:	ldr	r0, [sp, #52]	; 0x34
   1708c:	cmp	r0, #0
   17090:	beq	171dc <__assert_fail@plt+0x5d48>
   17094:	ldr	r0, [sp, #52]	; 0x34
   17098:	cmp	r0, #0
   1709c:	blt	170ac <__assert_fail@plt+0x5c18>
   170a0:	ldr	r0, [sp, #52]	; 0x34
   170a4:	str	r0, [sp, #4]
   170a8:	b	170bc <__assert_fail@plt+0x5c28>
   170ac:	ldr	r0, [sp, #52]	; 0x34
   170b0:	movw	r1, #0
   170b4:	sub	r0, r1, r0
   170b8:	str	r0, [sp, #4]
   170bc:	ldr	r0, [sp, #4]
   170c0:	vldr	d16, [pc, #328]	; 17210 <__assert_fail@plt+0x5d7c>
   170c4:	str	r0, [sp, #52]	; 0x34
   170c8:	vstr	d16, [sp, #40]	; 0x28
   170cc:	vldr	d16, [sp, #40]	; 0x28
   170d0:	vmov.f64	d17, #112	; 0x3f800000  1.0
   170d4:	vdiv.f64	d16, d17, d16
   170d8:	vstr	d16, [sp, #32]
   170dc:	movw	r0, #1
   170e0:	str	r0, [sp, #28]
   170e4:	ldr	r0, [sp, #28]
   170e8:	ldr	r1, [sp, #52]	; 0x34
   170ec:	cmp	r0, r1
   170f0:	bge	17114 <__assert_fail@plt+0x5c80>
   170f4:	vldr	d16, [sp, #32]
   170f8:	vldr	d17, [sp, #56]	; 0x38
   170fc:	vmul.f64	d16, d17, d16
   17100:	vstr	d16, [sp, #56]	; 0x38
   17104:	ldr	r0, [sp, #28]
   17108:	add	r0, r0, #1
   1710c:	str	r0, [sp, #28]
   17110:	b	170e4 <__assert_fail@plt+0x5c50>
   17114:	vldr	d16, [sp, #56]	; 0x38
   17118:	vldr	d17, [sp, #40]	; 0x28
   1711c:	vcmpe.f64	d16, d17
   17120:	vmrs	APSR_nzcv, fpscr
   17124:	blt	17134 <__assert_fail@plt+0x5ca0>
   17128:	mvn	r0, #0
   1712c:	str	r0, [sp, #68]	; 0x44
   17130:	b	17200 <__assert_fail@plt+0x5d6c>
   17134:	ldr	r0, [sp, #52]	; 0x34
   17138:	str	r0, [sp, #28]
   1713c:	ldr	r0, [sp, #28]
   17140:	mvn	r1, #0
   17144:	add	r1, r0, r1
   17148:	str	r1, [sp, #28]
   1714c:	cmp	r0, #0
   17150:	ble	171d8 <__assert_fail@plt+0x5d44>
   17154:	vldr	d16, [sp, #56]	; 0x38
   17158:	vcvt.u32.f64	s0, d16
   1715c:	vstr	s0, [sp, #24]
   17160:	ldr	r0, [sp, #64]	; 0x40
   17164:	ldr	r0, [r0, #8]
   17168:	ldr	r1, [sp, #28]
   1716c:	add	r0, r0, r1, lsl #2
   17170:	ldr	r0, [r0]
   17174:	str	r0, [sp, #20]
   17178:	ldr	r0, [sp, #20]
   1717c:	ldr	r1, [sp, #24]
   17180:	cmp	r0, r1
   17184:	bls	17194 <__assert_fail@plt+0x5d00>
   17188:	movw	r0, #1
   1718c:	str	r0, [sp, #68]	; 0x44
   17190:	b	17200 <__assert_fail@plt+0x5d6c>
   17194:	ldr	r0, [sp, #20]
   17198:	ldr	r1, [sp, #24]
   1719c:	cmp	r0, r1
   171a0:	bcs	171b0 <__assert_fail@plt+0x5d1c>
   171a4:	mvn	r0, #0
   171a8:	str	r0, [sp, #68]	; 0x44
   171ac:	b	17200 <__assert_fail@plt+0x5d6c>
   171b0:	b	171b4 <__assert_fail@plt+0x5d20>
   171b4:	vldr	d16, [sp, #40]	; 0x28
   171b8:	vldr	d17, [sp, #56]	; 0x38
   171bc:	ldr	r0, [sp, #24]
   171c0:	vmov	s0, r0
   171c4:	vcvt.f64.u32	d18, s0
   171c8:	vsub.f64	d17, d17, d18
   171cc:	vmul.f64	d16, d16, d17
   171d0:	vstr	d16, [sp, #56]	; 0x38
   171d4:	b	1713c <__assert_fail@plt+0x5ca8>
   171d8:	b	171dc <__assert_fail@plt+0x5d48>
   171dc:	vldr	d16, [sp, #56]	; 0x38
   171e0:	vcmpe.f64	d16, #0.0
   171e4:	vmrs	APSR_nzcv, fpscr
   171e8:	movw	r0, #0
   171ec:	movgt	r0, #1
   171f0:	and	r0, r0, #1
   171f4:	movw	r1, #0
   171f8:	sub	r0, r1, r0
   171fc:	str	r0, [sp, #68]	; 0x44
   17200:	ldr	r0, [sp, #68]	; 0x44
   17204:	add	sp, sp, #72	; 0x48
   17208:	bx	lr
   1720c:	nop	{0}
   17210:	andeq	r0, r0, r0
   17214:	mvnsmi	r0, r0
   17218:	push	{fp, lr}
   1721c:	mov	fp, sp
   17220:	sub	sp, sp, #16
   17224:	str	r0, [sp, #8]
   17228:	vstr	d0, [sp]
   1722c:	ldr	r0, [sp, #8]
   17230:	ldr	r0, [r0, #4]
   17234:	cmp	r0, #0
   17238:	bge	17274 <__assert_fail@plt+0x5de0>
   1723c:	vldr	d16, [sp]
   17240:	vcmpe.f64	d16, #0.0
   17244:	vmrs	APSR_nzcv, fpscr
   17248:	blt	17258 <__assert_fail@plt+0x5dc4>
   1724c:	mvn	r0, #0
   17250:	str	r0, [fp, #-4]
   17254:	b	172a0 <__assert_fail@plt+0x5e0c>
   17258:	ldr	r0, [sp, #8]
   1725c:	vldr	d0, [sp]
   17260:	bl	17040 <__assert_fail@plt+0x5bac>
   17264:	movw	lr, #0
   17268:	sub	r0, lr, r0
   1726c:	str	r0, [fp, #-4]
   17270:	b	172a0 <__assert_fail@plt+0x5e0c>
   17274:	vldr	d16, [sp]
   17278:	vcmpe.f64	d16, #0.0
   1727c:	vmrs	APSR_nzcv, fpscr
   17280:	bpl	17290 <__assert_fail@plt+0x5dfc>
   17284:	movw	r0, #1
   17288:	str	r0, [fp, #-4]
   1728c:	b	172a0 <__assert_fail@plt+0x5e0c>
   17290:	ldr	r0, [sp, #8]
   17294:	vldr	d0, [sp]
   17298:	bl	17040 <__assert_fail@plt+0x5bac>
   1729c:	str	r0, [fp, #-4]
   172a0:	ldr	r0, [fp, #-4]
   172a4:	mov	sp, fp
   172a8:	pop	{fp, pc}
   172ac:	sub	sp, sp, #4
   172b0:	str	r0, [sp]
   172b4:	ldr	r0, [sp]
   172b8:	ldr	r0, [r0, #4]
   172bc:	cmp	r0, #0
   172c0:	movw	r0, #0
   172c4:	movgt	r0, #1
   172c8:	and	r0, r0, #1
   172cc:	ldr	r1, [sp]
   172d0:	ldr	r1, [r1, #4]
   172d4:	cmp	r1, #0
   172d8:	movw	r1, #0
   172dc:	movlt	r1, #1
   172e0:	and	r1, r1, #1
   172e4:	sub	r0, r0, r1
   172e8:	add	sp, sp, #4
   172ec:	bx	lr
   172f0:	push	{fp, lr}
   172f4:	mov	fp, sp
   172f8:	sub	sp, sp, #16
   172fc:	str	r0, [sp, #8]
   17300:	str	r1, [sp, #4]
   17304:	ldr	r0, [sp, #8]
   17308:	ldr	r0, [r0, #4]
   1730c:	str	r0, [sp]
   17310:	ldr	r0, [sp]
   17314:	cmp	r0, #0
   17318:	bge	17328 <__assert_fail@plt+0x5e94>
   1731c:	mvn	r0, #0
   17320:	str	r0, [fp, #-4]
   17324:	b	17338 <__assert_fail@plt+0x5ea4>
   17328:	ldr	r0, [sp, #8]
   1732c:	ldr	r1, [sp, #4]
   17330:	bl	165e8 <__assert_fail@plt+0x5154>
   17334:	str	r0, [fp, #-4]
   17338:	ldr	r0, [fp, #-4]
   1733c:	mov	sp, fp
   17340:	pop	{fp, pc}
   17344:	push	{fp, lr}
   17348:	mov	fp, sp
   1734c:	sub	sp, sp, #24
   17350:	str	r0, [fp, #-8]
   17354:	str	r1, [sp, #12]
   17358:	ldr	r0, [fp, #-8]
   1735c:	ldr	r0, [r0, #4]
   17360:	str	r0, [sp, #8]
   17364:	ldr	r0, [sp, #12]
   17368:	ldr	r0, [r0, #4]
   1736c:	str	r0, [sp, #4]
   17370:	ldr	r0, [sp, #8]
   17374:	ldr	r1, [sp, #4]
   17378:	cmp	r0, r1
   1737c:	beq	173a8 <__assert_fail@plt+0x5f14>
   17380:	ldr	r0, [sp, #8]
   17384:	ldr	r1, [sp, #4]
   17388:	cmp	r0, r1
   1738c:	movw	r0, #0
   17390:	movlt	r0, #1
   17394:	tst	r0, #1
   17398:	mvn	r0, #0
   1739c:	moveq	r0, #1
   173a0:	str	r0, [fp, #-4]
   173a4:	b	173f8 <__assert_fail@plt+0x5f64>
   173a8:	ldr	r0, [sp, #8]
   173ac:	cmp	r0, #0
   173b0:	blt	173d4 <__assert_fail@plt+0x5f40>
   173b4:	ldr	r0, [fp, #-8]
   173b8:	ldr	r0, [r0, #8]
   173bc:	ldr	r1, [sp, #12]
   173c0:	ldr	r1, [r1, #8]
   173c4:	ldr	r2, [sp, #8]
   173c8:	bl	13b94 <__assert_fail@plt+0x2700>
   173cc:	str	r0, [fp, #-4]
   173d0:	b	173f8 <__assert_fail@plt+0x5f64>
   173d4:	ldr	r0, [sp, #12]
   173d8:	ldr	r0, [r0, #8]
   173dc:	ldr	r1, [fp, #-8]
   173e0:	ldr	r1, [r1, #8]
   173e4:	ldr	r2, [sp, #8]
   173e8:	movw	r3, #0
   173ec:	sub	r2, r3, r2
   173f0:	bl	13b94 <__assert_fail@plt+0x2700>
   173f4:	str	r0, [fp, #-4]
   173f8:	ldr	r0, [fp, #-4]
   173fc:	mov	sp, fp
   17400:	pop	{fp, pc}
   17404:	push	{fp, lr}
   17408:	mov	fp, sp
   1740c:	sub	sp, sp, #32
   17410:	str	r0, [fp, #-4]
   17414:	str	r1, [fp, #-8]
   17418:	ldr	r0, [fp, #-4]
   1741c:	ldr	r0, [r0, #8]
   17420:	ldr	r1, [fp, #-4]
   17424:	ldr	r1, [r1, #4]
   17428:	cmp	r1, #0
   1742c:	str	r0, [fp, #-12]
   17430:	blt	17444 <__assert_fail@plt+0x5fb0>
   17434:	ldr	r0, [fp, #-4]
   17438:	ldr	r0, [r0, #4]
   1743c:	str	r0, [sp, #16]
   17440:	b	17458 <__assert_fail@plt+0x5fc4>
   17444:	ldr	r0, [fp, #-4]
   17448:	ldr	r0, [r0, #4]
   1744c:	movw	r1, #0
   17450:	sub	r0, r1, r0
   17454:	str	r0, [sp, #16]
   17458:	ldr	r0, [sp, #16]
   1745c:	ldr	r1, [fp, #-8]
   17460:	ldr	r2, [r1, #8]
   17464:	ldr	r1, [fp, #-8]
   17468:	ldr	r1, [r1, #4]
   1746c:	cmp	r1, #0
   17470:	str	r0, [sp, #12]
   17474:	str	r2, [sp, #8]
   17478:	blt	1748c <__assert_fail@plt+0x5ff8>
   1747c:	ldr	r0, [fp, #-8]
   17480:	ldr	r0, [r0, #4]
   17484:	str	r0, [sp, #4]
   17488:	b	174a0 <__assert_fail@plt+0x600c>
   1748c:	ldr	r0, [fp, #-8]
   17490:	ldr	r0, [r0, #4]
   17494:	movw	r1, #0
   17498:	sub	r0, r1, r0
   1749c:	str	r0, [sp, #4]
   174a0:	ldr	r0, [sp, #4]
   174a4:	ldr	r1, [fp, #-12]
   174a8:	str	r0, [sp]
   174ac:	mov	r0, r1
   174b0:	ldr	r1, [sp, #12]
   174b4:	ldr	r2, [sp, #8]
   174b8:	ldr	r3, [sp]
   174bc:	bl	174c8 <__assert_fail@plt+0x6034>
   174c0:	mov	sp, fp
   174c4:	pop	{fp, pc}
   174c8:	push	{fp, lr}
   174cc:	mov	fp, sp
   174d0:	sub	sp, sp, #24
   174d4:	str	r0, [fp, #-8]
   174d8:	str	r1, [sp, #12]
   174dc:	str	r2, [sp, #8]
   174e0:	str	r3, [sp, #4]
   174e4:	ldr	r0, [sp, #12]
   174e8:	ldr	r1, [sp, #4]
   174ec:	cmp	r0, r1
   174f0:	beq	1751c <__assert_fail@plt+0x6088>
   174f4:	ldr	r0, [sp, #12]
   174f8:	ldr	r1, [sp, #4]
   174fc:	cmp	r0, r1
   17500:	movw	r0, #0
   17504:	movlt	r0, #1
   17508:	tst	r0, #1
   1750c:	mvn	r0, #0
   17510:	moveq	r0, #1
   17514:	str	r0, [fp, #-4]
   17518:	b	17530 <__assert_fail@plt+0x609c>
   1751c:	ldr	r0, [fp, #-8]
   17520:	ldr	r1, [sp, #8]
   17524:	ldr	r2, [sp, #12]
   17528:	bl	13b94 <__assert_fail@plt+0x2700>
   1752c:	str	r0, [fp, #-4]
   17530:	ldr	r0, [fp, #-4]
   17534:	mov	sp, fp
   17538:	pop	{fp, pc}
   1753c:	push	{fp, lr}
   17540:	mov	fp, sp
   17544:	sub	sp, sp, #16
   17548:	str	r0, [fp, #-4]
   1754c:	str	r1, [sp, #8]
   17550:	ldr	r0, [fp, #-4]
   17554:	ldr	r1, [sp, #8]
   17558:	bl	16204 <__assert_fail@plt+0x4d70>
   1755c:	ldr	r0, [fp, #-4]
   17560:	ldr	r0, [r0, #4]
   17564:	cmp	r0, #0
   17568:	blt	1757c <__assert_fail@plt+0x60e8>
   1756c:	ldr	r0, [fp, #-4]
   17570:	ldr	r0, [r0, #4]
   17574:	str	r0, [sp, #4]
   17578:	b	17590 <__assert_fail@plt+0x60fc>
   1757c:	ldr	r0, [fp, #-4]
   17580:	ldr	r0, [r0, #4]
   17584:	movw	r1, #0
   17588:	sub	r0, r1, r0
   1758c:	str	r0, [sp, #4]
   17590:	ldr	r0, [sp, #4]
   17594:	ldr	r1, [fp, #-4]
   17598:	str	r0, [r1, #4]
   1759c:	mov	sp, fp
   175a0:	pop	{fp, pc}
   175a4:	push	{fp, lr}
   175a8:	mov	fp, sp
   175ac:	sub	sp, sp, #8
   175b0:	str	r0, [sp, #4]
   175b4:	str	r1, [sp]
   175b8:	ldr	r0, [sp, #4]
   175bc:	ldr	r1, [sp]
   175c0:	bl	16204 <__assert_fail@plt+0x4d70>
   175c4:	ldr	r0, [sp, #4]
   175c8:	ldr	r0, [r0, #4]
   175cc:	movw	r1, #0
   175d0:	sub	r0, r1, r0
   175d4:	ldr	r1, [sp, #4]
   175d8:	str	r0, [r1, #4]
   175dc:	mov	sp, fp
   175e0:	pop	{fp, pc}
   175e4:	sub	sp, sp, #20
   175e8:	str	r0, [sp, #16]
   175ec:	str	r1, [sp, #12]
   175f0:	ldr	r0, [sp, #16]
   175f4:	ldr	r0, [r0, #4]
   175f8:	str	r0, [sp, #8]
   175fc:	ldr	r0, [sp, #12]
   17600:	ldr	r0, [r0, #4]
   17604:	ldr	r1, [sp, #16]
   17608:	str	r0, [r1, #4]
   1760c:	ldr	r0, [sp, #8]
   17610:	ldr	r1, [sp, #12]
   17614:	str	r0, [r1, #4]
   17618:	b	1761c <__assert_fail@plt+0x6188>
   1761c:	ldr	r0, [sp, #16]
   17620:	ldr	r0, [r0]
   17624:	str	r0, [sp, #4]
   17628:	ldr	r0, [sp, #12]
   1762c:	ldr	r0, [r0]
   17630:	ldr	r1, [sp, #16]
   17634:	str	r0, [r1]
   17638:	ldr	r0, [sp, #4]
   1763c:	ldr	r1, [sp, #12]
   17640:	str	r0, [r1]
   17644:	b	17648 <__assert_fail@plt+0x61b4>
   17648:	ldr	r0, [sp, #16]
   1764c:	ldr	r0, [r0, #8]
   17650:	str	r0, [sp]
   17654:	ldr	r0, [sp, #12]
   17658:	ldr	r0, [r0, #8]
   1765c:	ldr	r1, [sp, #16]
   17660:	str	r0, [r1, #8]
   17664:	ldr	r0, [sp]
   17668:	ldr	r1, [sp, #12]
   1766c:	str	r0, [r1, #8]
   17670:	add	sp, sp, #20
   17674:	bx	lr
   17678:	push	{fp, lr}
   1767c:	mov	fp, sp
   17680:	sub	sp, sp, #24
   17684:	mov	r3, sp
   17688:	str	r0, [fp, #-4]
   1768c:	str	r1, [fp, #-8]
   17690:	str	r2, [sp, #12]
   17694:	ldr	r1, [sp, #12]
   17698:	mov	r0, r3
   1769c:	bl	162fc <__assert_fail@plt+0x4e68>
   176a0:	mov	r2, sp
   176a4:	ldr	r0, [fp, #-4]
   176a8:	ldr	r1, [fp, #-8]
   176ac:	bl	176c0 <__assert_fail@plt+0x622c>
   176b0:	mov	r0, sp
   176b4:	bl	15f6c <__assert_fail@plt+0x4ad8>
   176b8:	mov	sp, fp
   176bc:	pop	{fp, pc}
   176c0:	push	{fp, lr}
   176c4:	mov	fp, sp
   176c8:	sub	sp, sp, #24
   176cc:	str	r0, [fp, #-4]
   176d0:	str	r1, [fp, #-8]
   176d4:	str	r2, [sp, #12]
   176d8:	ldr	r0, [fp, #-8]
   176dc:	ldr	r0, [r0, #4]
   176e0:	ldr	r1, [sp, #12]
   176e4:	ldr	r1, [r1, #4]
   176e8:	eor	r0, r0, r1
   176ec:	cmp	r0, #0
   176f0:	blt	1770c <__assert_fail@plt+0x6278>
   176f4:	ldr	r0, [fp, #-4]
   176f8:	ldr	r1, [fp, #-8]
   176fc:	ldr	r2, [sp, #12]
   17700:	bl	177d8 <__assert_fail@plt+0x6344>
   17704:	str	r0, [sp, #8]
   17708:	b	17720 <__assert_fail@plt+0x628c>
   1770c:	ldr	r0, [fp, #-4]
   17710:	ldr	r1, [fp, #-8]
   17714:	ldr	r2, [sp, #12]
   17718:	bl	1794c <__assert_fail@plt+0x64b8>
   1771c:	str	r0, [sp, #8]
   17720:	ldr	r0, [fp, #-8]
   17724:	ldr	r0, [r0, #4]
   17728:	cmp	r0, #0
   1772c:	blt	1773c <__assert_fail@plt+0x62a8>
   17730:	ldr	r0, [sp, #8]
   17734:	str	r0, [sp, #4]
   17738:	b	1774c <__assert_fail@plt+0x62b8>
   1773c:	ldr	r0, [sp, #8]
   17740:	movw	r1, #0
   17744:	sub	r0, r1, r0
   17748:	str	r0, [sp, #4]
   1774c:	ldr	r0, [sp, #4]
   17750:	ldr	r1, [fp, #-4]
   17754:	str	r0, [r1, #4]
   17758:	mov	sp, fp
   1775c:	pop	{fp, pc}
   17760:	push	{fp, lr}
   17764:	mov	fp, sp
   17768:	sub	sp, sp, #16
   1776c:	str	r0, [fp, #-4]
   17770:	str	r1, [sp, #8]
   17774:	str	r2, [sp, #4]
   17778:	ldr	r0, [fp, #-4]
   1777c:	ldr	r1, [sp, #4]
   17780:	ldr	r2, [sp, #8]
   17784:	bl	1779c <__assert_fail@plt+0x6308>
   17788:	ldr	r0, [fp, #-4]
   1778c:	ldr	r1, [fp, #-4]
   17790:	bl	175a4 <__assert_fail@plt+0x6110>
   17794:	mov	sp, fp
   17798:	pop	{fp, pc}
   1779c:	push	{fp, lr}
   177a0:	mov	fp, sp
   177a4:	sub	sp, sp, #16
   177a8:	str	r0, [fp, #-4]
   177ac:	str	r1, [sp, #8]
   177b0:	str	r2, [sp, #4]
   177b4:	ldr	r0, [fp, #-4]
   177b8:	ldr	r1, [sp, #4]
   177bc:	bl	175a4 <__assert_fail@plt+0x6110>
   177c0:	ldr	r0, [fp, #-4]
   177c4:	ldr	r1, [fp, #-4]
   177c8:	ldr	r2, [sp, #8]
   177cc:	bl	17678 <__assert_fail@plt+0x61e4>
   177d0:	mov	sp, fp
   177d4:	pop	{fp, pc}
   177d8:	push	{fp, lr}
   177dc:	mov	fp, sp
   177e0:	sub	sp, sp, #56	; 0x38
   177e4:	str	r0, [fp, #-4]
   177e8:	str	r1, [fp, #-8]
   177ec:	str	r2, [fp, #-12]
   177f0:	ldr	r0, [fp, #-8]
   177f4:	ldr	r0, [r0, #4]
   177f8:	cmp	r0, #0
   177fc:	blt	17810 <__assert_fail@plt+0x637c>
   17800:	ldr	r0, [fp, #-8]
   17804:	ldr	r0, [r0, #4]
   17808:	str	r0, [sp, #16]
   1780c:	b	17824 <__assert_fail@plt+0x6390>
   17810:	ldr	r0, [fp, #-8]
   17814:	ldr	r0, [r0, #4]
   17818:	movw	r1, #0
   1781c:	sub	r0, r1, r0
   17820:	str	r0, [sp, #16]
   17824:	ldr	r0, [sp, #16]
   17828:	str	r0, [fp, #-16]
   1782c:	ldr	r0, [fp, #-12]
   17830:	ldr	r0, [r0, #4]
   17834:	cmp	r0, #0
   17838:	blt	1784c <__assert_fail@plt+0x63b8>
   1783c:	ldr	r0, [fp, #-12]
   17840:	ldr	r0, [r0, #4]
   17844:	str	r0, [sp, #12]
   17848:	b	17860 <__assert_fail@plt+0x63cc>
   1784c:	ldr	r0, [fp, #-12]
   17850:	ldr	r0, [r0, #4]
   17854:	movw	r1, #0
   17858:	sub	r0, r1, r0
   1785c:	str	r0, [sp, #12]
   17860:	ldr	r0, [sp, #12]
   17864:	str	r0, [fp, #-20]	; 0xffffffec
   17868:	ldr	r0, [fp, #-16]
   1786c:	ldr	r1, [fp, #-20]	; 0xffffffec
   17870:	cmp	r0, r1
   17874:	bge	178b4 <__assert_fail@plt+0x6420>
   17878:	b	1787c <__assert_fail@plt+0x63e8>
   1787c:	ldr	r0, [fp, #-8]
   17880:	str	r0, [sp, #24]
   17884:	ldr	r0, [fp, #-12]
   17888:	str	r0, [fp, #-8]
   1788c:	ldr	r0, [sp, #24]
   17890:	str	r0, [fp, #-12]
   17894:	b	17898 <__assert_fail@plt+0x6404>
   17898:	ldr	r0, [fp, #-16]
   1789c:	str	r0, [sp, #20]
   178a0:	ldr	r0, [fp, #-20]	; 0xffffffec
   178a4:	str	r0, [fp, #-16]
   178a8:	ldr	r0, [sp, #20]
   178ac:	str	r0, [fp, #-20]	; 0xffffffec
   178b0:	b	178b4 <__assert_fail@plt+0x6420>
   178b4:	ldr	r0, [fp, #-16]
   178b8:	add	r0, r0, #1
   178bc:	ldr	r1, [fp, #-4]
   178c0:	ldr	r1, [r1]
   178c4:	cmp	r0, r1
   178c8:	ble	178e4 <__assert_fail@plt+0x6450>
   178cc:	ldr	r0, [fp, #-4]
   178d0:	ldr	r1, [fp, #-16]
   178d4:	add	r1, r1, #1
   178d8:	bl	16114 <__assert_fail@plt+0x4c80>
   178dc:	str	r0, [sp, #8]
   178e0:	b	178f0 <__assert_fail@plt+0x645c>
   178e4:	ldr	r0, [fp, #-4]
   178e8:	ldr	r0, [r0, #8]
   178ec:	str	r0, [sp, #8]
   178f0:	ldr	r0, [sp, #8]
   178f4:	str	r0, [fp, #-24]	; 0xffffffe8
   178f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   178fc:	ldr	r1, [fp, #-8]
   17900:	ldr	r1, [r1, #8]
   17904:	ldr	r2, [fp, #-16]
   17908:	ldr	r3, [fp, #-12]
   1790c:	ldr	r3, [r3, #8]
   17910:	ldr	ip, [fp, #-20]	; 0xffffffec
   17914:	mov	lr, sp
   17918:	str	ip, [lr]
   1791c:	bl	13ea8 <__assert_fail@plt+0x2a14>
   17920:	str	r0, [sp, #28]
   17924:	ldr	r0, [sp, #28]
   17928:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1792c:	ldr	r2, [fp, #-16]
   17930:	add	r1, r1, r2, lsl #2
   17934:	str	r0, [r1]
   17938:	ldr	r0, [fp, #-16]
   1793c:	ldr	r1, [sp, #28]
   17940:	add	r0, r0, r1
   17944:	mov	sp, fp
   17948:	pop	{fp, pc}
   1794c:	push	{fp, lr}
   17950:	mov	fp, sp
   17954:	sub	sp, sp, #64	; 0x40
   17958:	str	r0, [fp, #-8]
   1795c:	str	r1, [fp, #-12]
   17960:	str	r2, [fp, #-16]
   17964:	ldr	r0, [fp, #-12]
   17968:	ldr	r0, [r0, #4]
   1796c:	cmp	r0, #0
   17970:	blt	17984 <__assert_fail@plt+0x64f0>
   17974:	ldr	r0, [fp, #-12]
   17978:	ldr	r0, [r0, #4]
   1797c:	str	r0, [sp, #20]
   17980:	b	17998 <__assert_fail@plt+0x6504>
   17984:	ldr	r0, [fp, #-12]
   17988:	ldr	r0, [r0, #4]
   1798c:	movw	r1, #0
   17990:	sub	r0, r1, r0
   17994:	str	r0, [sp, #20]
   17998:	ldr	r0, [sp, #20]
   1799c:	str	r0, [fp, #-20]	; 0xffffffec
   179a0:	ldr	r0, [fp, #-16]
   179a4:	ldr	r0, [r0, #4]
   179a8:	cmp	r0, #0
   179ac:	blt	179c0 <__assert_fail@plt+0x652c>
   179b0:	ldr	r0, [fp, #-16]
   179b4:	ldr	r0, [r0, #4]
   179b8:	str	r0, [sp, #16]
   179bc:	b	179d4 <__assert_fail@plt+0x6540>
   179c0:	ldr	r0, [fp, #-16]
   179c4:	ldr	r0, [r0, #4]
   179c8:	movw	r1, #0
   179cc:	sub	r0, r1, r0
   179d0:	str	r0, [sp, #16]
   179d4:	ldr	r0, [sp, #16]
   179d8:	str	r0, [fp, #-24]	; 0xffffffe8
   179dc:	ldr	r0, [fp, #-12]
   179e0:	ldr	r0, [r0, #8]
   179e4:	ldr	r1, [fp, #-20]	; 0xffffffec
   179e8:	ldr	r2, [fp, #-16]
   179ec:	ldr	r2, [r2, #8]
   179f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   179f4:	bl	174c8 <__assert_fail@plt+0x6034>
   179f8:	str	r0, [fp, #-28]	; 0xffffffe4
   179fc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17a00:	cmp	r0, #0
   17a04:	ble	17ab4 <__assert_fail@plt+0x6620>
   17a08:	ldr	r0, [fp, #-20]	; 0xffffffec
   17a0c:	ldr	r1, [fp, #-8]
   17a10:	ldr	r1, [r1]
   17a14:	cmp	r0, r1
   17a18:	ble	17a30 <__assert_fail@plt+0x659c>
   17a1c:	ldr	r0, [fp, #-8]
   17a20:	ldr	r1, [fp, #-20]	; 0xffffffec
   17a24:	bl	16114 <__assert_fail@plt+0x4c80>
   17a28:	str	r0, [sp, #12]
   17a2c:	b	17a3c <__assert_fail@plt+0x65a8>
   17a30:	ldr	r0, [fp, #-8]
   17a34:	ldr	r0, [r0, #8]
   17a38:	str	r0, [sp, #12]
   17a3c:	ldr	r0, [sp, #12]
   17a40:	str	r0, [sp, #32]
   17a44:	ldr	r0, [sp, #32]
   17a48:	ldr	r1, [fp, #-12]
   17a4c:	ldr	r1, [r1, #8]
   17a50:	ldr	r2, [fp, #-20]	; 0xffffffec
   17a54:	ldr	r3, [fp, #-16]
   17a58:	ldr	r3, [r3, #8]
   17a5c:	ldr	ip, [fp, #-24]	; 0xffffffe8
   17a60:	str	ip, [sp]
   17a64:	bl	140f0 <__assert_fail@plt+0x2c5c>
   17a68:	str	r0, [sp, #28]
   17a6c:	ldr	r0, [sp, #28]
   17a70:	cmp	r0, #0
   17a74:	bne	17a7c <__assert_fail@plt+0x65e8>
   17a78:	b	17a9c <__assert_fail@plt+0x6608>
   17a7c:	movw	r0, #18385	; 0x47d1
   17a80:	movt	r0, #4
   17a84:	movw	r1, #17404	; 0x43fc
   17a88:	movt	r1, #4
   17a8c:	movw	r2, #2006	; 0x7d6
   17a90:	movw	r3, #20674	; 0x50c2
   17a94:	movt	r3, #4
   17a98:	bl	11494 <__assert_fail@plt>
   17a9c:	b	17aa0 <__assert_fail@plt+0x660c>
   17aa0:	ldr	r0, [sp, #32]
   17aa4:	ldr	r1, [fp, #-20]	; 0xffffffec
   17aa8:	bl	13c64 <__assert_fail@plt+0x27d0>
   17aac:	str	r0, [fp, #-4]
   17ab0:	b	17b7c <__assert_fail@plt+0x66e8>
   17ab4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17ab8:	cmp	r0, #0
   17abc:	bge	17b74 <__assert_fail@plt+0x66e0>
   17ac0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17ac4:	ldr	r1, [fp, #-8]
   17ac8:	ldr	r1, [r1]
   17acc:	cmp	r0, r1
   17ad0:	ble	17ae8 <__assert_fail@plt+0x6654>
   17ad4:	ldr	r0, [fp, #-8]
   17ad8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17adc:	bl	16114 <__assert_fail@plt+0x4c80>
   17ae0:	str	r0, [sp, #8]
   17ae4:	b	17af4 <__assert_fail@plt+0x6660>
   17ae8:	ldr	r0, [fp, #-8]
   17aec:	ldr	r0, [r0, #8]
   17af0:	str	r0, [sp, #8]
   17af4:	ldr	r0, [sp, #8]
   17af8:	str	r0, [sp, #32]
   17afc:	ldr	r0, [sp, #32]
   17b00:	ldr	r1, [fp, #-16]
   17b04:	ldr	r1, [r1, #8]
   17b08:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17b0c:	ldr	r3, [fp, #-12]
   17b10:	ldr	r3, [r3, #8]
   17b14:	ldr	ip, [fp, #-20]	; 0xffffffec
   17b18:	str	ip, [sp]
   17b1c:	bl	140f0 <__assert_fail@plt+0x2c5c>
   17b20:	str	r0, [sp, #24]
   17b24:	ldr	r0, [sp, #24]
   17b28:	cmp	r0, #0
   17b2c:	bne	17b34 <__assert_fail@plt+0x66a0>
   17b30:	b	17b54 <__assert_fail@plt+0x66c0>
   17b34:	movw	r0, #18385	; 0x47d1
   17b38:	movt	r0, #4
   17b3c:	movw	r1, #17404	; 0x43fc
   17b40:	movt	r1, #4
   17b44:	movw	r2, #2012	; 0x7dc
   17b48:	movw	r3, #20674	; 0x50c2
   17b4c:	movt	r3, #4
   17b50:	bl	11494 <__assert_fail@plt>
   17b54:	b	17b58 <__assert_fail@plt+0x66c4>
   17b58:	ldr	r0, [sp, #32]
   17b5c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17b60:	bl	13c64 <__assert_fail@plt+0x27d0>
   17b64:	movw	r1, #0
   17b68:	sub	r0, r1, r0
   17b6c:	str	r0, [fp, #-4]
   17b70:	b	17b7c <__assert_fail@plt+0x66e8>
   17b74:	movw	r0, #0
   17b78:	str	r0, [fp, #-4]
   17b7c:	ldr	r0, [fp, #-4]
   17b80:	mov	sp, fp
   17b84:	pop	{fp, pc}
   17b88:	push	{fp, lr}
   17b8c:	mov	fp, sp
   17b90:	sub	sp, sp, #24
   17b94:	str	r0, [fp, #-4]
   17b98:	str	r1, [fp, #-8]
   17b9c:	str	r2, [sp, #12]
   17ba0:	ldr	r0, [fp, #-8]
   17ba4:	ldr	r0, [r0, #4]
   17ba8:	ldr	r1, [sp, #12]
   17bac:	ldr	r1, [r1, #4]
   17bb0:	eor	r0, r0, r1
   17bb4:	cmp	r0, #0
   17bb8:	blt	17bd4 <__assert_fail@plt+0x6740>
   17bbc:	ldr	r0, [fp, #-4]
   17bc0:	ldr	r1, [fp, #-8]
   17bc4:	ldr	r2, [sp, #12]
   17bc8:	bl	1794c <__assert_fail@plt+0x64b8>
   17bcc:	str	r0, [sp, #8]
   17bd0:	b	17be8 <__assert_fail@plt+0x6754>
   17bd4:	ldr	r0, [fp, #-4]
   17bd8:	ldr	r1, [fp, #-8]
   17bdc:	ldr	r2, [sp, #12]
   17be0:	bl	177d8 <__assert_fail@plt+0x6344>
   17be4:	str	r0, [sp, #8]
   17be8:	ldr	r0, [fp, #-8]
   17bec:	ldr	r0, [r0, #4]
   17bf0:	cmp	r0, #0
   17bf4:	blt	17c04 <__assert_fail@plt+0x6770>
   17bf8:	ldr	r0, [sp, #8]
   17bfc:	str	r0, [sp, #4]
   17c00:	b	17c14 <__assert_fail@plt+0x6780>
   17c04:	ldr	r0, [sp, #8]
   17c08:	movw	r1, #0
   17c0c:	sub	r0, r1, r0
   17c10:	str	r0, [sp, #4]
   17c14:	ldr	r0, [sp, #4]
   17c18:	ldr	r1, [fp, #-4]
   17c1c:	str	r0, [r1, #4]
   17c20:	mov	sp, fp
   17c24:	pop	{fp, pc}
   17c28:	push	{fp, lr}
   17c2c:	mov	fp, sp
   17c30:	sub	sp, sp, #16
   17c34:	str	r0, [fp, #-4]
   17c38:	str	r1, [sp, #8]
   17c3c:	str	r2, [sp, #4]
   17c40:	ldr	r0, [sp, #4]
   17c44:	cmp	r0, #0
   17c48:	bge	17c7c <__assert_fail@plt+0x67e8>
   17c4c:	ldr	r0, [fp, #-4]
   17c50:	ldr	r1, [sp, #8]
   17c54:	ldr	r2, [sp, #4]
   17c58:	add	r2, r2, #1
   17c5c:	sub	r2, r2, #1
   17c60:	movw	r3, #0
   17c64:	sub	r2, r3, r2
   17c68:	bl	17c94 <__assert_fail@plt+0x6800>
   17c6c:	ldr	r0, [fp, #-4]
   17c70:	ldr	r1, [fp, #-4]
   17c74:	bl	175a4 <__assert_fail@plt+0x6110>
   17c78:	b	17c8c <__assert_fail@plt+0x67f8>
   17c7c:	ldr	r0, [fp, #-4]
   17c80:	ldr	r1, [sp, #8]
   17c84:	ldr	r2, [sp, #4]
   17c88:	bl	17c94 <__assert_fail@plt+0x6800>
   17c8c:	mov	sp, fp
   17c90:	pop	{fp, pc}
   17c94:	push	{fp, lr}
   17c98:	mov	fp, sp
   17c9c:	sub	sp, sp, #24
   17ca0:	mov	r3, sp
   17ca4:	str	r0, [fp, #-4]
   17ca8:	str	r1, [fp, #-8]
   17cac:	str	r2, [sp, #12]
   17cb0:	ldr	r1, [sp, #12]
   17cb4:	mov	r0, r3
   17cb8:	bl	162fc <__assert_fail@plt+0x4e68>
   17cbc:	mov	r2, sp
   17cc0:	ldr	r0, [fp, #-4]
   17cc4:	ldr	r1, [fp, #-8]
   17cc8:	bl	17cdc <__assert_fail@plt+0x6848>
   17ccc:	mov	r0, sp
   17cd0:	bl	15f6c <__assert_fail@plt+0x4ad8>
   17cd4:	mov	sp, fp
   17cd8:	pop	{fp, pc}
   17cdc:	push	{fp, lr}
   17ce0:	mov	fp, sp
   17ce4:	sub	sp, sp, #72	; 0x48
   17ce8:	str	r0, [fp, #-4]
   17cec:	str	r1, [fp, #-8]
   17cf0:	str	r2, [fp, #-12]
   17cf4:	ldr	r0, [fp, #-8]
   17cf8:	ldr	r0, [r0, #4]
   17cfc:	str	r0, [fp, #-20]	; 0xffffffec
   17d00:	ldr	r0, [fp, #-12]
   17d04:	ldr	r0, [r0, #4]
   17d08:	str	r0, [fp, #-24]	; 0xffffffe8
   17d0c:	ldr	r0, [fp, #-20]	; 0xffffffec
   17d10:	cmp	r0, #0
   17d14:	beq	17d24 <__assert_fail@plt+0x6890>
   17d18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17d1c:	cmp	r0, #0
   17d20:	bne	17d34 <__assert_fail@plt+0x68a0>
   17d24:	ldr	r0, [fp, #-4]
   17d28:	movw	r1, #0
   17d2c:	str	r1, [r0, #4]
   17d30:	b	17ebc <__assert_fail@plt+0x6a28>
   17d34:	ldr	r0, [fp, #-20]	; 0xffffffec
   17d38:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17d3c:	eor	r0, r0, r1
   17d40:	cmp	r0, #0
   17d44:	movw	r0, #0
   17d48:	movlt	r0, #1
   17d4c:	and	r0, r0, #1
   17d50:	str	r0, [fp, #-16]
   17d54:	ldr	r0, [fp, #-20]	; 0xffffffec
   17d58:	cmp	r0, #0
   17d5c:	blt	17d6c <__assert_fail@plt+0x68d8>
   17d60:	ldr	r0, [fp, #-20]	; 0xffffffec
   17d64:	str	r0, [sp, #24]
   17d68:	b	17d7c <__assert_fail@plt+0x68e8>
   17d6c:	ldr	r0, [fp, #-20]	; 0xffffffec
   17d70:	movw	r1, #0
   17d74:	sub	r0, r1, r0
   17d78:	str	r0, [sp, #24]
   17d7c:	ldr	r0, [sp, #24]
   17d80:	str	r0, [fp, #-20]	; 0xffffffec
   17d84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17d88:	cmp	r0, #0
   17d8c:	blt	17d9c <__assert_fail@plt+0x6908>
   17d90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17d94:	str	r0, [sp, #20]
   17d98:	b	17dac <__assert_fail@plt+0x6918>
   17d9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17da0:	movw	r1, #0
   17da4:	sub	r0, r1, r0
   17da8:	str	r0, [sp, #20]
   17dac:	ldr	r0, [sp, #20]
   17db0:	str	r0, [fp, #-24]	; 0xffffffe8
   17db4:	add	r0, sp, #32
   17db8:	ldr	r1, [fp, #-20]	; 0xffffffec
   17dbc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17dc0:	add	r1, r1, r2
   17dc4:	lsl	r1, r1, #5
   17dc8:	bl	15ec8 <__assert_fail@plt+0x4a34>
   17dcc:	ldr	r0, [sp, #40]	; 0x28
   17dd0:	str	r0, [sp, #28]
   17dd4:	ldr	r0, [fp, #-20]	; 0xffffffec
   17dd8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17ddc:	cmp	r0, r1
   17de0:	blt	17e10 <__assert_fail@plt+0x697c>
   17de4:	ldr	r0, [sp, #28]
   17de8:	ldr	r1, [fp, #-8]
   17dec:	ldr	r1, [r1, #8]
   17df0:	ldr	r2, [fp, #-20]	; 0xffffffec
   17df4:	ldr	r3, [fp, #-12]
   17df8:	ldr	r3, [r3, #8]
   17dfc:	ldr	ip, [fp, #-24]	; 0xffffffe8
   17e00:	str	ip, [sp]
   17e04:	bl	14798 <__assert_fail@plt+0x3304>
   17e08:	str	r0, [sp, #16]
   17e0c:	b	17e38 <__assert_fail@plt+0x69a4>
   17e10:	ldr	r0, [sp, #28]
   17e14:	ldr	r1, [fp, #-12]
   17e18:	ldr	r1, [r1, #8]
   17e1c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17e20:	ldr	r3, [fp, #-8]
   17e24:	ldr	r3, [r3, #8]
   17e28:	ldr	ip, [fp, #-20]	; 0xffffffec
   17e2c:	str	ip, [sp]
   17e30:	bl	14798 <__assert_fail@plt+0x3304>
   17e34:	str	r0, [sp, #12]
   17e38:	ldr	r0, [fp, #-20]	; 0xffffffec
   17e3c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17e40:	add	r0, r0, r1
   17e44:	str	r0, [fp, #-28]	; 0xffffffe4
   17e48:	ldr	r0, [sp, #28]
   17e4c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17e50:	sub	r1, r1, #1
   17e54:	add	r0, r0, r1, lsl #2
   17e58:	ldr	r0, [r0]
   17e5c:	cmp	r0, #0
   17e60:	movw	r0, #0
   17e64:	moveq	r0, #1
   17e68:	and	r0, r0, #1
   17e6c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17e70:	sub	r0, r1, r0
   17e74:	str	r0, [fp, #-28]	; 0xffffffe4
   17e78:	ldr	r0, [fp, #-16]
   17e7c:	cmp	r0, #0
   17e80:	beq	17e98 <__assert_fail@plt+0x6a04>
   17e84:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17e88:	movw	r1, #0
   17e8c:	sub	r0, r1, r0
   17e90:	str	r0, [sp, #8]
   17e94:	b	17ea0 <__assert_fail@plt+0x6a0c>
   17e98:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17e9c:	str	r0, [sp, #8]
   17ea0:	ldr	r0, [sp, #8]
   17ea4:	add	r1, sp, #32
   17ea8:	str	r0, [sp, #36]	; 0x24
   17eac:	ldr	r0, [fp, #-4]
   17eb0:	bl	175e4 <__assert_fail@plt+0x6150>
   17eb4:	add	r0, sp, #32
   17eb8:	bl	15f6c <__assert_fail@plt+0x4ad8>
   17ebc:	mov	sp, fp
   17ec0:	pop	{fp, pc}
   17ec4:	push	{fp, lr}
   17ec8:	mov	fp, sp
   17ecc:	sub	sp, sp, #48	; 0x30
   17ed0:	str	r0, [fp, #-4]
   17ed4:	str	r1, [fp, #-8]
   17ed8:	str	r2, [fp, #-12]
   17edc:	ldr	r0, [fp, #-8]
   17ee0:	ldr	r0, [r0, #4]
   17ee4:	cmp	r0, #0
   17ee8:	blt	17efc <__assert_fail@plt+0x6a68>
   17eec:	ldr	r0, [fp, #-8]
   17ef0:	ldr	r0, [r0, #4]
   17ef4:	str	r0, [sp, #8]
   17ef8:	b	17f10 <__assert_fail@plt+0x6a7c>
   17efc:	ldr	r0, [fp, #-8]
   17f00:	ldr	r0, [r0, #4]
   17f04:	movw	r1, #0
   17f08:	sub	r0, r1, r0
   17f0c:	str	r0, [sp, #8]
   17f10:	ldr	r0, [sp, #8]
   17f14:	str	r0, [fp, #-16]
   17f18:	ldr	r0, [fp, #-16]
   17f1c:	cmp	r0, #0
   17f20:	bne	17f34 <__assert_fail@plt+0x6aa0>
   17f24:	ldr	r0, [fp, #-4]
   17f28:	movw	r1, #0
   17f2c:	str	r1, [r0, #4]
   17f30:	b	1807c <__assert_fail@plt+0x6be8>
   17f34:	ldr	r0, [fp, #-12]
   17f38:	lsr	r0, r0, #5
   17f3c:	str	r0, [sp, #24]
   17f40:	ldr	r0, [fp, #-12]
   17f44:	and	r0, r0, #31
   17f48:	str	r0, [sp, #20]
   17f4c:	ldr	r0, [fp, #-16]
   17f50:	ldr	r1, [sp, #24]
   17f54:	add	r0, r0, r1
   17f58:	ldr	r1, [sp, #20]
   17f5c:	cmp	r1, #0
   17f60:	movw	r1, #0
   17f64:	movhi	r1, #1
   17f68:	and	r1, r1, #1
   17f6c:	add	r0, r0, r1
   17f70:	str	r0, [fp, #-20]	; 0xffffffec
   17f74:	ldr	r0, [fp, #-20]	; 0xffffffec
   17f78:	ldr	r1, [fp, #-4]
   17f7c:	ldr	r1, [r1]
   17f80:	cmp	r0, r1
   17f84:	ble	17f9c <__assert_fail@plt+0x6b08>
   17f88:	ldr	r0, [fp, #-4]
   17f8c:	ldr	r1, [fp, #-20]	; 0xffffffec
   17f90:	bl	16114 <__assert_fail@plt+0x4c80>
   17f94:	str	r0, [sp, #4]
   17f98:	b	17fa8 <__assert_fail@plt+0x6b14>
   17f9c:	ldr	r0, [fp, #-4]
   17fa0:	ldr	r0, [r0, #8]
   17fa4:	str	r0, [sp, #4]
   17fa8:	ldr	r0, [sp, #4]
   17fac:	str	r0, [sp, #16]
   17fb0:	ldr	r0, [sp, #20]
   17fb4:	cmp	r0, #0
   17fb8:	bls	1801c <__assert_fail@plt+0x6b88>
   17fbc:	ldr	r0, [sp, #16]
   17fc0:	ldr	r1, [sp, #24]
   17fc4:	add	r0, r0, r1, lsl #2
   17fc8:	ldr	r1, [fp, #-8]
   17fcc:	ldr	r1, [r1, #8]
   17fd0:	ldr	r2, [fp, #-16]
   17fd4:	ldr	r3, [sp, #20]
   17fd8:	bl	149f8 <__assert_fail@plt+0x3564>
   17fdc:	str	r0, [sp, #12]
   17fe0:	ldr	r0, [sp, #12]
   17fe4:	ldr	r1, [sp, #16]
   17fe8:	ldr	r2, [fp, #-20]	; 0xffffffec
   17fec:	sub	r2, r2, #1
   17ff0:	add	r1, r1, r2, lsl #2
   17ff4:	str	r0, [r1]
   17ff8:	ldr	r0, [sp, #12]
   17ffc:	cmp	r0, #0
   18000:	movw	r0, #0
   18004:	moveq	r0, #1
   18008:	and	r0, r0, #1
   1800c:	ldr	r1, [fp, #-20]	; 0xffffffec
   18010:	sub	r0, r1, r0
   18014:	str	r0, [fp, #-20]	; 0xffffffec
   18018:	b	18038 <__assert_fail@plt+0x6ba4>
   1801c:	ldr	r0, [sp, #16]
   18020:	ldr	r1, [sp, #24]
   18024:	add	r0, r0, r1, lsl #2
   18028:	ldr	r1, [fp, #-8]
   1802c:	ldr	r1, [r1, #8]
   18030:	ldr	r2, [fp, #-16]
   18034:	bl	13b48 <__assert_fail@plt+0x26b4>
   18038:	ldr	r0, [sp, #16]
   1803c:	ldr	r1, [sp, #24]
   18040:	bl	13cd4 <__assert_fail@plt+0x2840>
   18044:	ldr	r0, [fp, #-8]
   18048:	ldr	r0, [r0, #4]
   1804c:	cmp	r0, #0
   18050:	bge	18068 <__assert_fail@plt+0x6bd4>
   18054:	ldr	r0, [fp, #-20]	; 0xffffffec
   18058:	movw	r1, #0
   1805c:	sub	r0, r1, r0
   18060:	str	r0, [sp]
   18064:	b	18070 <__assert_fail@plt+0x6bdc>
   18068:	ldr	r0, [fp, #-20]	; 0xffffffec
   1806c:	str	r0, [sp]
   18070:	ldr	r0, [sp]
   18074:	ldr	r1, [fp, #-4]
   18078:	str	r0, [r1, #4]
   1807c:	mov	sp, fp
   18080:	pop	{fp, pc}
   18084:	push	{fp, lr}
   18088:	mov	fp, sp
   1808c:	sub	sp, sp, #32
   18090:	add	r3, sp, #8
   18094:	str	r0, [fp, #-4]
   18098:	str	r1, [fp, #-8]
   1809c:	str	r2, [fp, #-12]
   180a0:	ldr	r1, [fp, #-12]
   180a4:	mov	r0, r3
   180a8:	bl	162fc <__assert_fail@plt+0x4e68>
   180ac:	add	r0, sp, #8
   180b0:	ldr	r1, [fp, #-8]
   180b4:	str	r0, [sp, #4]
   180b8:	ldr	r2, [sp, #4]
   180bc:	bl	17cdc <__assert_fail@plt+0x6848>
   180c0:	add	r2, sp, #8
   180c4:	ldr	r0, [fp, #-4]
   180c8:	ldr	r1, [fp, #-4]
   180cc:	bl	176c0 <__assert_fail@plt+0x622c>
   180d0:	add	r0, sp, #8
   180d4:	bl	15f6c <__assert_fail@plt+0x4ad8>
   180d8:	mov	sp, fp
   180dc:	pop	{fp, pc}
   180e0:	push	{fp, lr}
   180e4:	mov	fp, sp
   180e8:	sub	sp, sp, #32
   180ec:	add	r3, sp, #8
   180f0:	str	r0, [fp, #-4]
   180f4:	str	r1, [fp, #-8]
   180f8:	str	r2, [fp, #-12]
   180fc:	ldr	r1, [fp, #-12]
   18100:	mov	r0, r3
   18104:	bl	162fc <__assert_fail@plt+0x4e68>
   18108:	add	r0, sp, #8
   1810c:	ldr	r1, [fp, #-8]
   18110:	str	r0, [sp, #4]
   18114:	ldr	r2, [sp, #4]
   18118:	bl	17cdc <__assert_fail@plt+0x6848>
   1811c:	add	r2, sp, #8
   18120:	ldr	r0, [fp, #-4]
   18124:	ldr	r1, [fp, #-4]
   18128:	bl	17b88 <__assert_fail@plt+0x66f4>
   1812c:	add	r0, sp, #8
   18130:	bl	15f6c <__assert_fail@plt+0x4ad8>
   18134:	mov	sp, fp
   18138:	pop	{fp, pc}
   1813c:	push	{fp, lr}
   18140:	mov	fp, sp
   18144:	sub	sp, sp, #24
   18148:	mov	r3, sp
   1814c:	str	r0, [fp, #-4]
   18150:	str	r1, [fp, #-8]
   18154:	str	r2, [sp, #12]
   18158:	mov	r0, r3
   1815c:	bl	15e94 <__assert_fail@plt+0x4a00>
   18160:	mov	r0, sp
   18164:	ldr	r1, [fp, #-8]
   18168:	ldr	r2, [sp, #12]
   1816c:	bl	17cdc <__assert_fail@plt+0x6848>
   18170:	mov	r2, sp
   18174:	ldr	r0, [fp, #-4]
   18178:	ldr	r1, [fp, #-4]
   1817c:	bl	176c0 <__assert_fail@plt+0x622c>
   18180:	mov	r0, sp
   18184:	bl	15f6c <__assert_fail@plt+0x4ad8>
   18188:	mov	sp, fp
   1818c:	pop	{fp, pc}
   18190:	push	{fp, lr}
   18194:	mov	fp, sp
   18198:	sub	sp, sp, #24
   1819c:	mov	r3, sp
   181a0:	str	r0, [fp, #-4]
   181a4:	str	r1, [fp, #-8]
   181a8:	str	r2, [sp, #12]
   181ac:	mov	r0, r3
   181b0:	bl	15e94 <__assert_fail@plt+0x4a00>
   181b4:	mov	r0, sp
   181b8:	ldr	r1, [fp, #-8]
   181bc:	ldr	r2, [sp, #12]
   181c0:	bl	17cdc <__assert_fail@plt+0x6848>
   181c4:	mov	r2, sp
   181c8:	ldr	r0, [fp, #-4]
   181cc:	ldr	r1, [fp, #-4]
   181d0:	bl	17b88 <__assert_fail@plt+0x66f4>
   181d4:	mov	r0, sp
   181d8:	bl	15f6c <__assert_fail@plt+0x4ad8>
   181dc:	mov	sp, fp
   181e0:	pop	{fp, pc}
   181e4:	push	{fp, lr}
   181e8:	mov	fp, sp
   181ec:	sub	sp, sp, #24
   181f0:	str	r0, [fp, #-4]
   181f4:	str	r1, [fp, #-8]
   181f8:	str	r2, [sp, #12]
   181fc:	str	r3, [sp, #8]
   18200:	ldr	r0, [fp, #-4]
   18204:	ldr	r1, [fp, #-8]
   18208:	ldr	r2, [sp, #12]
   1820c:	ldr	r3, [sp, #8]
   18210:	movw	ip, #1
   18214:	str	ip, [sp]
   18218:	bl	18228 <__assert_fail@plt+0x6d94>
   1821c:	str	r0, [sp, #4]
   18220:	mov	sp, fp
   18224:	pop	{fp, pc}
   18228:	push	{fp, lr}
   1822c:	mov	fp, sp
   18230:	sub	sp, sp, #120	; 0x78
   18234:	ldr	ip, [fp, #8]
   18238:	str	r0, [fp, #-8]
   1823c:	str	r1, [fp, #-12]
   18240:	str	r2, [fp, #-16]
   18244:	str	r3, [fp, #-20]	; 0xffffffec
   18248:	ldr	r0, [fp, #-16]
   1824c:	ldr	r0, [r0, #4]
   18250:	str	r0, [fp, #-24]	; 0xffffffe8
   18254:	ldr	r0, [fp, #-20]	; 0xffffffec
   18258:	ldr	r0, [r0, #4]
   1825c:	str	r0, [fp, #-28]	; 0xffffffe4
   18260:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18264:	cmp	r0, #0
   18268:	str	ip, [sp, #36]	; 0x24
   1826c:	bne	1827c <__assert_fail@plt+0x6de8>
   18270:	movw	r0, #20756	; 0x5114
   18274:	movt	r0, #4
   18278:	bl	1a9ec <__assert_fail@plt+0x9558>
   1827c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18280:	cmp	r0, #0
   18284:	bne	182cc <__assert_fail@plt+0x6e38>
   18288:	ldr	r0, [fp, #-8]
   1828c:	movw	r1, #0
   18290:	cmp	r0, r1
   18294:	beq	182a4 <__assert_fail@plt+0x6e10>
   18298:	ldr	r0, [fp, #-8]
   1829c:	movw	r1, #0
   182a0:	str	r1, [r0, #4]
   182a4:	ldr	r0, [fp, #-12]
   182a8:	movw	r1, #0
   182ac:	cmp	r0, r1
   182b0:	beq	182c0 <__assert_fail@plt+0x6e2c>
   182b4:	ldr	r0, [fp, #-12]
   182b8:	movw	r1, #0
   182bc:	str	r1, [r0, #4]
   182c0:	movw	r0, #0
   182c4:	str	r0, [fp, #-4]
   182c8:	b	186b8 <__assert_fail@plt+0x7224>
   182cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   182d0:	cmp	r0, #0
   182d4:	blt	182e4 <__assert_fail@plt+0x6e50>
   182d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   182dc:	str	r0, [sp, #32]
   182e0:	b	182f4 <__assert_fail@plt+0x6e60>
   182e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   182e8:	movw	r1, #0
   182ec:	sub	r0, r1, r0
   182f0:	str	r0, [sp, #32]
   182f4:	ldr	r0, [sp, #32]
   182f8:	str	r0, [fp, #-32]	; 0xffffffe0
   182fc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18300:	cmp	r0, #0
   18304:	blt	18314 <__assert_fail@plt+0x6e80>
   18308:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1830c:	str	r0, [sp, #28]
   18310:	b	18324 <__assert_fail@plt+0x6e90>
   18314:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18318:	movw	r1, #0
   1831c:	sub	r0, r1, r0
   18320:	str	r0, [sp, #28]
   18324:	ldr	r0, [sp, #28]
   18328:	str	r0, [fp, #-36]	; 0xffffffdc
   1832c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18330:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18334:	eor	r0, r0, r1
   18338:	str	r0, [fp, #-40]	; 0xffffffd8
   1833c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18340:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18344:	cmp	r0, r1
   18348:	bge	18448 <__assert_fail@plt+0x6fb4>
   1834c:	ldr	r0, [fp, #8]
   18350:	cmp	r0, #1
   18354:	bne	183a4 <__assert_fail@plt+0x6f10>
   18358:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1835c:	cmp	r0, #0
   18360:	blt	183a4 <__assert_fail@plt+0x6f10>
   18364:	ldr	r0, [fp, #-12]
   18368:	movw	r1, #0
   1836c:	cmp	r0, r1
   18370:	beq	18384 <__assert_fail@plt+0x6ef0>
   18374:	ldr	r0, [fp, #-12]
   18378:	ldr	r1, [fp, #-16]
   1837c:	ldr	r2, [fp, #-20]	; 0xffffffec
   18380:	bl	17b88 <__assert_fail@plt+0x66f4>
   18384:	ldr	r0, [fp, #-8]
   18388:	movw	r1, #0
   1838c:	cmp	r0, r1
   18390:	beq	183a0 <__assert_fail@plt+0x6f0c>
   18394:	ldr	r0, [fp, #-8]
   18398:	movw	r1, #1
   1839c:	bl	1608c <__assert_fail@plt+0x4bf8>
   183a0:	b	1843c <__assert_fail@plt+0x6fa8>
   183a4:	ldr	r0, [fp, #8]
   183a8:	cmp	r0, #0
   183ac:	bne	183fc <__assert_fail@plt+0x6f68>
   183b0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   183b4:	cmp	r0, #0
   183b8:	bge	183fc <__assert_fail@plt+0x6f68>
   183bc:	ldr	r0, [fp, #-12]
   183c0:	movw	r1, #0
   183c4:	cmp	r0, r1
   183c8:	beq	183dc <__assert_fail@plt+0x6f48>
   183cc:	ldr	r0, [fp, #-12]
   183d0:	ldr	r1, [fp, #-16]
   183d4:	ldr	r2, [fp, #-20]	; 0xffffffec
   183d8:	bl	176c0 <__assert_fail@plt+0x622c>
   183dc:	ldr	r0, [fp, #-8]
   183e0:	movw	r1, #0
   183e4:	cmp	r0, r1
   183e8:	beq	183f8 <__assert_fail@plt+0x6f64>
   183ec:	ldr	r0, [fp, #-8]
   183f0:	mvn	r1, #0
   183f4:	bl	15ff0 <__assert_fail@plt+0x4b5c>
   183f8:	b	18438 <__assert_fail@plt+0x6fa4>
   183fc:	ldr	r0, [fp, #-12]
   18400:	movw	r1, #0
   18404:	cmp	r0, r1
   18408:	beq	18418 <__assert_fail@plt+0x6f84>
   1840c:	ldr	r0, [fp, #-12]
   18410:	ldr	r1, [fp, #-16]
   18414:	bl	16204 <__assert_fail@plt+0x4d70>
   18418:	ldr	r0, [fp, #-8]
   1841c:	movw	r1, #0
   18420:	cmp	r0, r1
   18424:	beq	18434 <__assert_fail@plt+0x6fa0>
   18428:	ldr	r0, [fp, #-8]
   1842c:	movw	r1, #0
   18430:	str	r1, [r0, #4]
   18434:	b	18438 <__assert_fail@plt+0x6fa4>
   18438:	b	1843c <__assert_fail@plt+0x6fa8>
   1843c:	movw	r0, #1
   18440:	str	r0, [fp, #-4]
   18444:	b	186b8 <__assert_fail@plt+0x7224>
   18448:	add	r0, sp, #40	; 0x28
   1844c:	ldr	r1, [fp, #-16]
   18450:	bl	1632c <__assert_fail@plt+0x4e98>
   18454:	ldr	r0, [sp, #48]	; 0x30
   18458:	str	r0, [fp, #-44]	; 0xffffffd4
   1845c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18460:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18464:	sub	r0, r0, r1
   18468:	add	r0, r0, #1
   1846c:	str	r0, [fp, #-52]	; 0xffffffcc
   18470:	ldr	r0, [fp, #-8]
   18474:	movw	r1, #0
   18478:	cmp	r0, r1
   1847c:	beq	1849c <__assert_fail@plt+0x7008>
   18480:	add	r0, sp, #52	; 0x34
   18484:	ldr	r1, [fp, #-52]	; 0xffffffcc
   18488:	lsl	r1, r1, #5
   1848c:	bl	15ec8 <__assert_fail@plt+0x4a34>
   18490:	ldr	r0, [sp, #60]	; 0x3c
   18494:	str	r0, [fp, #-48]	; 0xffffffd0
   18498:	b	184a4 <__assert_fail@plt+0x7010>
   1849c:	movw	r0, #0
   184a0:	str	r0, [fp, #-48]	; 0xffffffd0
   184a4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   184a8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   184ac:	ldr	r2, [fp, #-32]	; 0xffffffe0
   184b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   184b4:	ldr	r3, [r3, #8]
   184b8:	ldr	ip, [fp, #-36]	; 0xffffffdc
   184bc:	str	ip, [sp]
   184c0:	bl	1f424 <__assert_fail@plt+0xdf90>
   184c4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   184c8:	movw	r1, #0
   184cc:	cmp	r0, r1
   184d0:	beq	18534 <__assert_fail@plt+0x70a0>
   184d4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   184d8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   184dc:	sub	r1, r1, #1
   184e0:	add	r0, r0, r1, lsl #2
   184e4:	ldr	r0, [r0]
   184e8:	cmp	r0, #0
   184ec:	movw	r0, #0
   184f0:	moveq	r0, #1
   184f4:	and	r0, r0, #1
   184f8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   184fc:	sub	r0, r1, r0
   18500:	str	r0, [fp, #-52]	; 0xffffffcc
   18504:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18508:	cmp	r0, #0
   1850c:	bge	18524 <__assert_fail@plt+0x7090>
   18510:	ldr	r0, [fp, #-52]	; 0xffffffcc
   18514:	movw	r1, #0
   18518:	sub	r0, r1, r0
   1851c:	str	r0, [sp, #24]
   18520:	b	1852c <__assert_fail@plt+0x7098>
   18524:	ldr	r0, [fp, #-52]	; 0xffffffcc
   18528:	str	r0, [sp, #24]
   1852c:	ldr	r0, [sp, #24]
   18530:	str	r0, [sp, #56]	; 0x38
   18534:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18538:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1853c:	bl	13c64 <__assert_fail@plt+0x27d0>
   18540:	str	r0, [fp, #-56]	; 0xffffffc8
   18544:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18548:	cmp	r0, #0
   1854c:	bge	18564 <__assert_fail@plt+0x70d0>
   18550:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18554:	movw	r1, #0
   18558:	sub	r0, r1, r0
   1855c:	str	r0, [sp, #20]
   18560:	b	1856c <__assert_fail@plt+0x70d8>
   18564:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18568:	str	r0, [sp, #20]
   1856c:	ldr	r0, [sp, #20]
   18570:	str	r0, [sp, #44]	; 0x2c
   18574:	ldr	r0, [fp, #8]
   18578:	cmp	r0, #0
   1857c:	bne	185e4 <__assert_fail@plt+0x7150>
   18580:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18584:	cmp	r0, #0
   18588:	bge	185e4 <__assert_fail@plt+0x7150>
   1858c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18590:	cmp	r0, #0
   18594:	beq	185e4 <__assert_fail@plt+0x7150>
   18598:	ldr	r0, [fp, #-8]
   1859c:	movw	r1, #0
   185a0:	cmp	r0, r1
   185a4:	beq	185bc <__assert_fail@plt+0x7128>
   185a8:	add	r0, sp, #52	; 0x34
   185ac:	str	r0, [sp, #16]
   185b0:	ldr	r1, [sp, #16]
   185b4:	movw	r2, #1
   185b8:	bl	17760 <__assert_fail@plt+0x62cc>
   185bc:	ldr	r0, [fp, #-12]
   185c0:	movw	r1, #0
   185c4:	cmp	r0, r1
   185c8:	beq	185e0 <__assert_fail@plt+0x714c>
   185cc:	add	r0, sp, #40	; 0x28
   185d0:	ldr	r2, [fp, #-20]	; 0xffffffec
   185d4:	str	r0, [sp, #12]
   185d8:	ldr	r1, [sp, #12]
   185dc:	bl	176c0 <__assert_fail@plt+0x622c>
   185e0:	b	18658 <__assert_fail@plt+0x71c4>
   185e4:	ldr	r0, [fp, #8]
   185e8:	cmp	r0, #1
   185ec:	bne	18654 <__assert_fail@plt+0x71c0>
   185f0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   185f4:	cmp	r0, #0
   185f8:	blt	18654 <__assert_fail@plt+0x71c0>
   185fc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18600:	cmp	r0, #0
   18604:	beq	18654 <__assert_fail@plt+0x71c0>
   18608:	ldr	r0, [fp, #-8]
   1860c:	movw	r1, #0
   18610:	cmp	r0, r1
   18614:	beq	1862c <__assert_fail@plt+0x7198>
   18618:	add	r0, sp, #52	; 0x34
   1861c:	str	r0, [sp, #8]
   18620:	ldr	r1, [sp, #8]
   18624:	movw	r2, #1
   18628:	bl	17678 <__assert_fail@plt+0x61e4>
   1862c:	ldr	r0, [fp, #-12]
   18630:	movw	r1, #0
   18634:	cmp	r0, r1
   18638:	beq	18650 <__assert_fail@plt+0x71bc>
   1863c:	add	r0, sp, #40	; 0x28
   18640:	ldr	r2, [fp, #-20]	; 0xffffffec
   18644:	str	r0, [sp, #4]
   18648:	ldr	r1, [sp, #4]
   1864c:	bl	17b88 <__assert_fail@plt+0x66f4>
   18650:	b	18654 <__assert_fail@plt+0x71c0>
   18654:	b	18658 <__assert_fail@plt+0x71c4>
   18658:	ldr	r0, [fp, #-8]
   1865c:	movw	r1, #0
   18660:	cmp	r0, r1
   18664:	beq	1867c <__assert_fail@plt+0x71e8>
   18668:	add	r0, sp, #52	; 0x34
   1866c:	ldr	r1, [fp, #-8]
   18670:	bl	175e4 <__assert_fail@plt+0x6150>
   18674:	add	r0, sp, #52	; 0x34
   18678:	bl	15f6c <__assert_fail@plt+0x4ad8>
   1867c:	ldr	r0, [fp, #-12]
   18680:	movw	r1, #0
   18684:	cmp	r0, r1
   18688:	beq	18698 <__assert_fail@plt+0x7204>
   1868c:	add	r0, sp, #40	; 0x28
   18690:	ldr	r1, [fp, #-12]
   18694:	bl	175e4 <__assert_fail@plt+0x6150>
   18698:	add	r0, sp, #40	; 0x28
   1869c:	bl	15f6c <__assert_fail@plt+0x4ad8>
   186a0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   186a4:	cmp	r0, #0
   186a8:	movw	r0, #0
   186ac:	movne	r0, #1
   186b0:	and	r0, r0, #1
   186b4:	str	r0, [fp, #-4]
   186b8:	ldr	r0, [fp, #-4]
   186bc:	mov	sp, fp
   186c0:	pop	{fp, pc}
   186c4:	push	{fp, lr}
   186c8:	mov	fp, sp
   186cc:	sub	sp, sp, #24
   186d0:	str	r0, [fp, #-4]
   186d4:	str	r1, [fp, #-8]
   186d8:	str	r2, [sp, #12]
   186dc:	str	r3, [sp, #8]
   186e0:	ldr	r0, [fp, #-4]
   186e4:	ldr	r1, [fp, #-8]
   186e8:	ldr	r2, [sp, #12]
   186ec:	ldr	r3, [sp, #8]
   186f0:	movw	ip, #0
   186f4:	str	ip, [sp]
   186f8:	bl	18228 <__assert_fail@plt+0x6d94>
   186fc:	str	r0, [sp, #4]
   18700:	mov	sp, fp
   18704:	pop	{fp, pc}
   18708:	push	{fp, lr}
   1870c:	mov	fp, sp
   18710:	sub	sp, sp, #24
   18714:	str	r0, [fp, #-4]
   18718:	str	r1, [fp, #-8]
   1871c:	str	r2, [sp, #12]
   18720:	str	r3, [sp, #8]
   18724:	ldr	r0, [fp, #-4]
   18728:	ldr	r1, [fp, #-8]
   1872c:	ldr	r2, [sp, #12]
   18730:	ldr	r3, [sp, #8]
   18734:	movw	ip, #2
   18738:	str	ip, [sp]
   1873c:	bl	18228 <__assert_fail@plt+0x6d94>
   18740:	str	r0, [sp, #4]
   18744:	mov	sp, fp
   18748:	pop	{fp, pc}
   1874c:	push	{fp, lr}
   18750:	mov	fp, sp
   18754:	sub	sp, sp, #24
   18758:	str	r0, [fp, #-4]
   1875c:	str	r1, [fp, #-8]
   18760:	str	r2, [sp, #12]
   18764:	ldr	r0, [fp, #-4]
   18768:	ldr	r2, [fp, #-8]
   1876c:	ldr	r3, [sp, #12]
   18770:	movw	r1, #0
   18774:	movw	ip, #1
   18778:	str	ip, [sp]
   1877c:	bl	18228 <__assert_fail@plt+0x6d94>
   18780:	str	r0, [sp, #8]
   18784:	mov	sp, fp
   18788:	pop	{fp, pc}
   1878c:	push	{fp, lr}
   18790:	mov	fp, sp
   18794:	sub	sp, sp, #24
   18798:	str	r0, [fp, #-4]
   1879c:	str	r1, [fp, #-8]
   187a0:	str	r2, [sp, #12]
   187a4:	ldr	r0, [fp, #-4]
   187a8:	ldr	r2, [fp, #-8]
   187ac:	ldr	r3, [sp, #12]
   187b0:	movw	r1, #0
   187b4:	str	r1, [sp, #8]
   187b8:	ldr	ip, [sp, #8]
   187bc:	str	ip, [sp]
   187c0:	bl	18228 <__assert_fail@plt+0x6d94>
   187c4:	str	r0, [sp, #4]
   187c8:	mov	sp, fp
   187cc:	pop	{fp, pc}
   187d0:	push	{fp, lr}
   187d4:	mov	fp, sp
   187d8:	sub	sp, sp, #24
   187dc:	str	r0, [fp, #-4]
   187e0:	str	r1, [fp, #-8]
   187e4:	str	r2, [sp, #12]
   187e8:	ldr	r0, [fp, #-4]
   187ec:	ldr	r2, [fp, #-8]
   187f0:	ldr	r3, [sp, #12]
   187f4:	movw	r1, #0
   187f8:	movw	ip, #2
   187fc:	str	ip, [sp]
   18800:	bl	18228 <__assert_fail@plt+0x6d94>
   18804:	str	r0, [sp, #8]
   18808:	mov	sp, fp
   1880c:	pop	{fp, pc}
   18810:	push	{fp, lr}
   18814:	mov	fp, sp
   18818:	sub	sp, sp, #24
   1881c:	str	r0, [fp, #-4]
   18820:	str	r1, [fp, #-8]
   18824:	str	r2, [sp, #12]
   18828:	ldr	r1, [fp, #-4]
   1882c:	ldr	r2, [fp, #-8]
   18830:	ldr	r3, [sp, #12]
   18834:	movw	r0, #0
   18838:	movw	ip, #1
   1883c:	str	ip, [sp]
   18840:	bl	18228 <__assert_fail@plt+0x6d94>
   18844:	str	r0, [sp, #8]
   18848:	mov	sp, fp
   1884c:	pop	{fp, pc}
   18850:	push	{fp, lr}
   18854:	mov	fp, sp
   18858:	sub	sp, sp, #24
   1885c:	str	r0, [fp, #-4]
   18860:	str	r1, [fp, #-8]
   18864:	str	r2, [sp, #12]
   18868:	ldr	r1, [fp, #-4]
   1886c:	ldr	r2, [fp, #-8]
   18870:	ldr	r3, [sp, #12]
   18874:	movw	r0, #0
   18878:	str	r0, [sp, #8]
   1887c:	ldr	ip, [sp, #8]
   18880:	str	ip, [sp]
   18884:	bl	18228 <__assert_fail@plt+0x6d94>
   18888:	str	r0, [sp, #4]
   1888c:	mov	sp, fp
   18890:	pop	{fp, pc}
   18894:	push	{fp, lr}
   18898:	mov	fp, sp
   1889c:	sub	sp, sp, #24
   188a0:	str	r0, [fp, #-4]
   188a4:	str	r1, [fp, #-8]
   188a8:	str	r2, [sp, #12]
   188ac:	ldr	r1, [fp, #-4]
   188b0:	ldr	r2, [fp, #-8]
   188b4:	ldr	r3, [sp, #12]
   188b8:	movw	r0, #0
   188bc:	movw	ip, #2
   188c0:	str	ip, [sp]
   188c4:	bl	18228 <__assert_fail@plt+0x6d94>
   188c8:	str	r0, [sp, #8]
   188cc:	mov	sp, fp
   188d0:	pop	{fp, pc}
   188d4:	push	{fp, lr}
   188d8:	mov	fp, sp
   188dc:	sub	sp, sp, #24
   188e0:	str	r0, [fp, #-4]
   188e4:	str	r1, [fp, #-8]
   188e8:	str	r2, [sp, #12]
   188ec:	ldr	r1, [fp, #-4]
   188f0:	ldr	r2, [fp, #-8]
   188f4:	ldr	r3, [sp, #12]
   188f8:	ldr	r0, [sp, #12]
   188fc:	ldr	r0, [r0, #4]
   18900:	cmp	r0, #0
   18904:	movw	r0, #0
   18908:	movge	r0, #1
   1890c:	tst	r0, #1
   18910:	movw	r0, #0
   18914:	mov	ip, r0
   18918:	moveq	ip, #1
   1891c:	str	ip, [sp]
   18920:	bl	18228 <__assert_fail@plt+0x6d94>
   18924:	str	r0, [sp, #8]
   18928:	mov	sp, fp
   1892c:	pop	{fp, pc}
   18930:	push	{fp, lr}
   18934:	mov	fp, sp
   18938:	sub	sp, sp, #16
   1893c:	str	r0, [fp, #-4]
   18940:	str	r1, [sp, #8]
   18944:	str	r2, [sp, #4]
   18948:	ldr	r0, [fp, #-4]
   1894c:	ldr	r1, [sp, #8]
   18950:	ldr	r2, [sp, #4]
   18954:	movw	r3, #1
   18958:	bl	18964 <__assert_fail@plt+0x74d0>
   1895c:	mov	sp, fp
   18960:	pop	{fp, pc}
   18964:	push	{fp, lr}
   18968:	mov	fp, sp
   1896c:	sub	sp, sp, #56	; 0x38
   18970:	str	r0, [fp, #-4]
   18974:	str	r1, [fp, #-8]
   18978:	str	r2, [fp, #-12]
   1897c:	str	r3, [fp, #-16]
   18980:	ldr	r0, [fp, #-8]
   18984:	ldr	r0, [r0, #4]
   18988:	str	r0, [fp, #-20]	; 0xffffffec
   1898c:	ldr	r0, [fp, #-20]	; 0xffffffec
   18990:	cmp	r0, #0
   18994:	bne	189a8 <__assert_fail@plt+0x7514>
   18998:	ldr	r0, [fp, #-4]
   1899c:	movw	r1, #0
   189a0:	str	r1, [r0, #4]
   189a4:	b	18bbc <__assert_fail@plt+0x7728>
   189a8:	ldr	r0, [fp, #-12]
   189ac:	lsr	r0, r0, #5
   189b0:	str	r0, [sp, #28]
   189b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   189b8:	cmp	r0, #0
   189bc:	blt	189cc <__assert_fail@plt+0x7538>
   189c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   189c4:	str	r0, [sp, #16]
   189c8:	b	189dc <__assert_fail@plt+0x7548>
   189cc:	ldr	r0, [fp, #-20]	; 0xffffffec
   189d0:	movw	r1, #0
   189d4:	sub	r0, r1, r0
   189d8:	str	r0, [sp, #16]
   189dc:	ldr	r0, [sp, #16]
   189e0:	ldr	r1, [sp, #28]
   189e4:	sub	r0, r0, r1
   189e8:	str	r0, [fp, #-24]	; 0xffffffe8
   189ec:	ldr	r0, [fp, #-12]
   189f0:	and	r0, r0, #31
   189f4:	str	r0, [fp, #-12]
   189f8:	ldr	r0, [fp, #-16]
   189fc:	ldr	r1, [fp, #-20]	; 0xffffffec
   18a00:	cmp	r1, #0
   18a04:	movw	r1, #0
   18a08:	movgt	r1, #1
   18a0c:	tst	r1, #1
   18a10:	movw	r1, #1
   18a14:	moveq	r1, #0
   18a18:	cmp	r0, r1
   18a1c:	bne	18a9c <__assert_fail@plt+0x7608>
   18a20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18a24:	cmp	r0, #0
   18a28:	movw	r0, #1
   18a2c:	str	r0, [sp, #12]
   18a30:	ble	18a8c <__assert_fail@plt+0x75f8>
   18a34:	ldr	r0, [fp, #-8]
   18a38:	ldr	r0, [r0, #8]
   18a3c:	ldr	r1, [sp, #28]
   18a40:	bl	13c2c <__assert_fail@plt+0x2798>
   18a44:	cmp	r0, #0
   18a48:	movw	r0, #1
   18a4c:	str	r0, [sp, #12]
   18a50:	beq	18a8c <__assert_fail@plt+0x75f8>
   18a54:	ldr	r0, [fp, #-8]
   18a58:	ldr	r0, [r0, #8]
   18a5c:	ldr	r1, [sp, #28]
   18a60:	add	r0, r0, r1, lsl #2
   18a64:	ldr	r0, [r0]
   18a68:	ldr	r1, [fp, #-12]
   18a6c:	movw	r2, #1
   18a70:	lsl	r1, r2, r1
   18a74:	sub	r1, r1, #1
   18a78:	and	r0, r0, r1
   18a7c:	cmp	r0, #0
   18a80:	movw	r0, #0
   18a84:	movne	r0, #1
   18a88:	str	r0, [sp, #12]
   18a8c:	ldr	r0, [sp, #12]
   18a90:	and	r0, r0, #1
   18a94:	str	r0, [sp, #20]
   18a98:	b	18aa4 <__assert_fail@plt+0x7610>
   18a9c:	movw	r0, #0
   18aa0:	str	r0, [sp, #20]
   18aa4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18aa8:	cmp	r0, #0
   18aac:	bgt	18abc <__assert_fail@plt+0x7628>
   18ab0:	movw	r0, #0
   18ab4:	str	r0, [fp, #-24]	; 0xffffffe8
   18ab8:	b	18b7c <__assert_fail@plt+0x76e8>
   18abc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ac0:	ldr	r1, [fp, #-4]
   18ac4:	ldr	r1, [r1]
   18ac8:	cmp	r0, r1
   18acc:	ble	18ae4 <__assert_fail@plt+0x7650>
   18ad0:	ldr	r0, [fp, #-4]
   18ad4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18ad8:	bl	16114 <__assert_fail@plt+0x4c80>
   18adc:	str	r0, [sp, #8]
   18ae0:	b	18af0 <__assert_fail@plt+0x765c>
   18ae4:	ldr	r0, [fp, #-4]
   18ae8:	ldr	r0, [r0, #8]
   18aec:	str	r0, [sp, #8]
   18af0:	ldr	r0, [sp, #8]
   18af4:	str	r0, [sp, #24]
   18af8:	ldr	r0, [fp, #-12]
   18afc:	cmp	r0, #0
   18b00:	beq	18b5c <__assert_fail@plt+0x76c8>
   18b04:	ldr	r0, [sp, #24]
   18b08:	ldr	r1, [fp, #-8]
   18b0c:	ldr	r1, [r1, #8]
   18b10:	ldr	r2, [sp, #28]
   18b14:	add	r1, r1, r2, lsl #2
   18b18:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18b1c:	ldr	r3, [fp, #-12]
   18b20:	bl	14ba8 <__assert_fail@plt+0x3714>
   18b24:	ldr	r1, [sp, #24]
   18b28:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18b2c:	sub	r2, r2, #1
   18b30:	add	r1, r1, r2, lsl #2
   18b34:	ldr	r1, [r1]
   18b38:	cmp	r1, #0
   18b3c:	movw	r1, #0
   18b40:	moveq	r1, #1
   18b44:	and	r1, r1, #1
   18b48:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18b4c:	sub	r1, r2, r1
   18b50:	str	r1, [fp, #-24]	; 0xffffffe8
   18b54:	str	r0, [sp, #4]
   18b58:	b	18b78 <__assert_fail@plt+0x76e4>
   18b5c:	ldr	r0, [sp, #24]
   18b60:	ldr	r1, [fp, #-8]
   18b64:	ldr	r1, [r1, #8]
   18b68:	ldr	r2, [sp, #28]
   18b6c:	add	r1, r1, r2, lsl #2
   18b70:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18b74:	bl	13af0 <__assert_fail@plt+0x265c>
   18b78:	b	18b7c <__assert_fail@plt+0x76e8>
   18b7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18b80:	ldr	r1, [fp, #-4]
   18b84:	str	r0, [r1, #4]
   18b88:	ldr	r0, [sp, #20]
   18b8c:	cmp	r0, #0
   18b90:	beq	18ba4 <__assert_fail@plt+0x7710>
   18b94:	ldr	r0, [fp, #-4]
   18b98:	ldr	r1, [fp, #-4]
   18b9c:	movw	r2, #1
   18ba0:	bl	17678 <__assert_fail@plt+0x61e4>
   18ba4:	ldr	r0, [fp, #-20]	; 0xffffffec
   18ba8:	cmp	r0, #0
   18bac:	bge	18bbc <__assert_fail@plt+0x7728>
   18bb0:	ldr	r0, [fp, #-4]
   18bb4:	ldr	r1, [fp, #-4]
   18bb8:	bl	175a4 <__assert_fail@plt+0x6110>
   18bbc:	mov	sp, fp
   18bc0:	pop	{fp, pc}
   18bc4:	push	{fp, lr}
   18bc8:	mov	fp, sp
   18bcc:	sub	sp, sp, #16
   18bd0:	str	r0, [fp, #-4]
   18bd4:	str	r1, [sp, #8]
   18bd8:	str	r2, [sp, #4]
   18bdc:	ldr	r0, [fp, #-4]
   18be0:	ldr	r1, [sp, #8]
   18be4:	ldr	r2, [sp, #4]
   18be8:	movw	r3, #0
   18bec:	bl	18964 <__assert_fail@plt+0x74d0>
   18bf0:	mov	sp, fp
   18bf4:	pop	{fp, pc}
   18bf8:	push	{fp, lr}
   18bfc:	mov	fp, sp
   18c00:	sub	sp, sp, #16
   18c04:	str	r0, [fp, #-4]
   18c08:	str	r1, [sp, #8]
   18c0c:	str	r2, [sp, #4]
   18c10:	ldr	r0, [fp, #-4]
   18c14:	ldr	r1, [sp, #8]
   18c18:	ldr	r2, [sp, #4]
   18c1c:	movw	r3, #2
   18c20:	bl	18964 <__assert_fail@plt+0x74d0>
   18c24:	mov	sp, fp
   18c28:	pop	{fp, pc}
   18c2c:	push	{fp, lr}
   18c30:	mov	fp, sp
   18c34:	sub	sp, sp, #16
   18c38:	str	r0, [fp, #-4]
   18c3c:	str	r1, [sp, #8]
   18c40:	str	r2, [sp, #4]
   18c44:	ldr	r0, [fp, #-4]
   18c48:	ldr	r1, [sp, #8]
   18c4c:	ldr	r2, [sp, #4]
   18c50:	movw	r3, #1
   18c54:	bl	18c60 <__assert_fail@plt+0x77cc>
   18c58:	mov	sp, fp
   18c5c:	pop	{fp, pc}
   18c60:	push	{fp, lr}
   18c64:	mov	fp, sp
   18c68:	sub	sp, sp, #64	; 0x40
   18c6c:	str	r0, [fp, #-4]
   18c70:	str	r1, [fp, #-8]
   18c74:	str	r2, [fp, #-12]
   18c78:	str	r3, [fp, #-16]
   18c7c:	ldr	r0, [fp, #-8]
   18c80:	ldr	r0, [r0, #4]
   18c84:	str	r0, [fp, #-20]	; 0xffffffec
   18c88:	ldr	r0, [fp, #-20]	; 0xffffffec
   18c8c:	cmp	r0, #0
   18c90:	beq	18ca0 <__assert_fail@plt+0x780c>
   18c94:	ldr	r0, [fp, #-12]
   18c98:	cmp	r0, #0
   18c9c:	bne	18cb0 <__assert_fail@plt+0x781c>
   18ca0:	ldr	r0, [fp, #-4]
   18ca4:	movw	r1, #0
   18ca8:	str	r1, [r0, #4]
   18cac:	b	18fbc <__assert_fail@plt+0x7b28>
   18cb0:	ldr	r0, [fp, #-12]
   18cb4:	add	r0, r0, #31
   18cb8:	lsr	r0, r0, #5
   18cbc:	str	r0, [fp, #-28]	; 0xffffffe4
   18cc0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18cc4:	cmp	r0, #0
   18cc8:	ble	18cd0 <__assert_fail@plt+0x783c>
   18ccc:	b	18cf0 <__assert_fail@plt+0x785c>
   18cd0:	movw	r0, #19716	; 0x4d04
   18cd4:	movt	r0, #4
   18cd8:	movw	r1, #17404	; 0x43fc
   18cdc:	movt	r1, #4
   18ce0:	movw	r2, #2427	; 0x97b
   18ce4:	movw	r3, #20865	; 0x5181
   18ce8:	movt	r3, #4
   18cec:	bl	11494 <__assert_fail@plt>
   18cf0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18cf4:	ldr	r1, [fp, #-4]
   18cf8:	ldr	r1, [r1]
   18cfc:	cmp	r0, r1
   18d00:	ble	18d18 <__assert_fail@plt+0x7884>
   18d04:	ldr	r0, [fp, #-4]
   18d08:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18d0c:	bl	16114 <__assert_fail@plt+0x4c80>
   18d10:	str	r0, [sp, #16]
   18d14:	b	18d24 <__assert_fail@plt+0x7890>
   18d18:	ldr	r0, [fp, #-4]
   18d1c:	ldr	r0, [r0, #8]
   18d20:	str	r0, [sp, #16]
   18d24:	ldr	r0, [sp, #16]
   18d28:	str	r0, [sp, #32]
   18d2c:	ldr	r0, [fp, #-20]	; 0xffffffec
   18d30:	cmp	r0, #0
   18d34:	blt	18d44 <__assert_fail@plt+0x78b0>
   18d38:	ldr	r0, [fp, #-20]	; 0xffffffec
   18d3c:	str	r0, [sp, #12]
   18d40:	b	18d54 <__assert_fail@plt+0x78c0>
   18d44:	ldr	r0, [fp, #-20]	; 0xffffffec
   18d48:	movw	r1, #0
   18d4c:	sub	r0, r1, r0
   18d50:	str	r0, [sp, #12]
   18d54:	ldr	r0, [sp, #12]
   18d58:	str	r0, [fp, #-24]	; 0xffffffe8
   18d5c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18d60:	lsl	r0, r0, #5
   18d64:	ldr	r1, [fp, #-12]
   18d68:	sub	r0, r0, r1
   18d6c:	mvn	r1, #0
   18d70:	lsr	r0, r1, r0
   18d74:	str	r0, [sp, #28]
   18d78:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18d7c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18d80:	cmp	r0, r1
   18d84:	ble	18eb4 <__assert_fail@plt+0x7a20>
   18d88:	ldr	r0, [fp, #-16]
   18d8c:	ldr	r1, [fp, #-20]	; 0xffffffec
   18d90:	cmp	r1, #0
   18d94:	movw	r1, #0
   18d98:	movgt	r1, #1
   18d9c:	tst	r1, #1
   18da0:	movw	r1, #1
   18da4:	moveq	r1, #0
   18da8:	cmp	r0, r1
   18dac:	bne	18e84 <__assert_fail@plt+0x79f0>
   18db0:	b	18db4 <__assert_fail@plt+0x7920>
   18db4:	ldr	r0, [sp, #32]
   18db8:	ldr	r1, [fp, #-8]
   18dbc:	ldr	r1, [r1, #8]
   18dc0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18dc4:	bl	15054 <__assert_fail@plt+0x3bc0>
   18dc8:	cmp	r0, #0
   18dcc:	movw	r0, #0
   18dd0:	movne	r0, #1
   18dd4:	mvn	r1, #0
   18dd8:	eor	r0, r0, r1
   18ddc:	and	r0, r0, #1
   18de0:	str	r0, [sp, #20]
   18de4:	ldr	r0, [sp, #20]
   18de8:	cmp	r0, #0
   18dec:	bne	18df4 <__assert_fail@plt+0x7960>
   18df0:	b	18e14 <__assert_fail@plt+0x7980>
   18df4:	movw	r0, #18385	; 0x47d1
   18df8:	movt	r0, #4
   18dfc:	movw	r1, #17404	; 0x43fc
   18e00:	movt	r1, #4
   18e04:	movw	r2, #2443	; 0x98b
   18e08:	movw	r3, #20865	; 0x5181
   18e0c:	movt	r3, #4
   18e10:	bl	11494 <__assert_fail@plt>
   18e14:	b	18e18 <__assert_fail@plt+0x7984>
   18e18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e1c:	str	r0, [sp, #24]
   18e20:	ldr	r0, [sp, #24]
   18e24:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18e28:	sub	r1, r1, #1
   18e2c:	cmp	r0, r1
   18e30:	bge	18e58 <__assert_fail@plt+0x79c4>
   18e34:	ldr	r0, [sp, #32]
   18e38:	ldr	r1, [sp, #24]
   18e3c:	add	r0, r0, r1, lsl #2
   18e40:	mvn	r1, #0
   18e44:	str	r1, [r0]
   18e48:	ldr	r0, [sp, #24]
   18e4c:	add	r0, r0, #1
   18e50:	str	r0, [sp, #24]
   18e54:	b	18e20 <__assert_fail@plt+0x798c>
   18e58:	ldr	r0, [sp, #28]
   18e5c:	ldr	r1, [sp, #32]
   18e60:	ldr	r2, [fp, #-28]	; 0xffffffe4
   18e64:	sub	r2, r2, #1
   18e68:	add	r1, r1, r2, lsl #2
   18e6c:	str	r0, [r1]
   18e70:	ldr	r0, [fp, #-20]	; 0xffffffec
   18e74:	movw	r1, #0
   18e78:	sub	r0, r1, r0
   18e7c:	str	r0, [fp, #-20]	; 0xffffffec
   18e80:	b	18eb0 <__assert_fail@plt+0x7a1c>
   18e84:	ldr	r0, [fp, #-4]
   18e88:	ldr	r1, [fp, #-8]
   18e8c:	cmp	r0, r1
   18e90:	beq	18ea8 <__assert_fail@plt+0x7a14>
   18e94:	ldr	r0, [sp, #32]
   18e98:	ldr	r1, [fp, #-8]
   18e9c:	ldr	r1, [r1, #8]
   18ea0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18ea4:	bl	13af0 <__assert_fail@plt+0x265c>
   18ea8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18eac:	str	r0, [fp, #-28]	; 0xffffffe4
   18eb0:	b	18f78 <__assert_fail@plt+0x7ae4>
   18eb4:	ldr	r0, [fp, #-4]
   18eb8:	ldr	r1, [fp, #-8]
   18ebc:	cmp	r0, r1
   18ec0:	beq	18edc <__assert_fail@plt+0x7a48>
   18ec4:	ldr	r0, [sp, #32]
   18ec8:	ldr	r1, [fp, #-8]
   18ecc:	ldr	r1, [r1, #8]
   18ed0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   18ed4:	sub	r2, r2, #1
   18ed8:	bl	13af0 <__assert_fail@plt+0x265c>
   18edc:	ldr	r0, [fp, #-8]
   18ee0:	ldr	r0, [r0, #8]
   18ee4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18ee8:	sub	r1, r1, #1
   18eec:	ldr	r0, [r0, r1, lsl #2]
   18ef0:	ldr	r2, [sp, #28]
   18ef4:	and	r0, r0, r2
   18ef8:	ldr	r2, [sp, #32]
   18efc:	add	r1, r2, r1, lsl #2
   18f00:	str	r0, [r1]
   18f04:	ldr	r0, [fp, #-16]
   18f08:	ldr	r1, [fp, #-20]	; 0xffffffec
   18f0c:	cmp	r1, #0
   18f10:	movw	r1, #0
   18f14:	movgt	r1, #1
   18f18:	tst	r1, #1
   18f1c:	movw	r1, #1
   18f20:	moveq	r1, #0
   18f24:	cmp	r0, r1
   18f28:	bne	18f74 <__assert_fail@plt+0x7ae0>
   18f2c:	ldr	r0, [sp, #32]
   18f30:	ldr	r2, [fp, #-28]	; 0xffffffe4
   18f34:	str	r0, [sp, #8]
   18f38:	ldr	r1, [sp, #8]
   18f3c:	bl	15054 <__assert_fail@plt+0x3bc0>
   18f40:	ldr	r1, [sp, #28]
   18f44:	ldr	r2, [sp, #32]
   18f48:	ldr	lr, [fp, #-28]	; 0xffffffe4
   18f4c:	sub	lr, lr, #1
   18f50:	add	r2, r2, lr, lsl #2
   18f54:	ldr	lr, [r2]
   18f58:	and	r1, lr, r1
   18f5c:	str	r1, [r2]
   18f60:	ldr	r1, [fp, #-20]	; 0xffffffec
   18f64:	movw	r2, #0
   18f68:	sub	r1, r2, r1
   18f6c:	str	r1, [fp, #-20]	; 0xffffffec
   18f70:	str	r0, [sp, #4]
   18f74:	b	18f78 <__assert_fail@plt+0x7ae4>
   18f78:	ldr	r0, [sp, #32]
   18f7c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18f80:	bl	13c64 <__assert_fail@plt+0x27d0>
   18f84:	str	r0, [fp, #-28]	; 0xffffffe4
   18f88:	ldr	r0, [fp, #-20]	; 0xffffffec
   18f8c:	cmp	r0, #0
   18f90:	bge	18fa8 <__assert_fail@plt+0x7b14>
   18f94:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18f98:	movw	r1, #0
   18f9c:	sub	r0, r1, r0
   18fa0:	str	r0, [sp]
   18fa4:	b	18fb0 <__assert_fail@plt+0x7b1c>
   18fa8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18fac:	str	r0, [sp]
   18fb0:	ldr	r0, [sp]
   18fb4:	ldr	r1, [fp, #-4]
   18fb8:	str	r0, [r1, #4]
   18fbc:	mov	sp, fp
   18fc0:	pop	{fp, pc}
   18fc4:	push	{fp, lr}
   18fc8:	mov	fp, sp
   18fcc:	sub	sp, sp, #16
   18fd0:	str	r0, [fp, #-4]
   18fd4:	str	r1, [sp, #8]
   18fd8:	str	r2, [sp, #4]
   18fdc:	ldr	r0, [fp, #-4]
   18fe0:	ldr	r1, [sp, #8]
   18fe4:	ldr	r2, [sp, #4]
   18fe8:	movw	r3, #0
   18fec:	bl	18c60 <__assert_fail@plt+0x77cc>
   18ff0:	mov	sp, fp
   18ff4:	pop	{fp, pc}
   18ff8:	push	{fp, lr}
   18ffc:	mov	fp, sp
   19000:	sub	sp, sp, #16
   19004:	str	r0, [fp, #-4]
   19008:	str	r1, [sp, #8]
   1900c:	str	r2, [sp, #4]
   19010:	ldr	r0, [fp, #-4]
   19014:	ldr	r1, [sp, #8]
   19018:	ldr	r2, [sp, #4]
   1901c:	movw	r3, #2
   19020:	bl	18c60 <__assert_fail@plt+0x77cc>
   19024:	mov	sp, fp
   19028:	pop	{fp, pc}
   1902c:	push	{fp, lr}
   19030:	mov	fp, sp
   19034:	sub	sp, sp, #24
   19038:	str	r0, [fp, #-4]
   1903c:	str	r1, [fp, #-8]
   19040:	str	r2, [sp, #12]
   19044:	ldr	r0, [fp, #-4]
   19048:	ldr	r2, [fp, #-8]
   1904c:	ldr	r3, [sp, #12]
   19050:	movw	r1, #0
   19054:	movw	ip, #2
   19058:	str	ip, [sp]
   1905c:	bl	18228 <__assert_fail@plt+0x6d94>
   19060:	str	r0, [sp, #8]
   19064:	ldr	r0, [sp, #8]
   19068:	cmp	r0, #0
   1906c:	bne	19074 <__assert_fail@plt+0x7be0>
   19070:	b	19094 <__assert_fail@plt+0x7c00>
   19074:	movw	r0, #18385	; 0x47d1
   19078:	movt	r0, #4
   1907c:	movw	r1, #17404	; 0x43fc
   19080:	movt	r1, #4
   19084:	movw	r2, #2521	; 0x9d9
   19088:	movw	r3, #18395	; 0x47db
   1908c:	movt	r3, #4
   19090:	bl	11494 <__assert_fail@plt>
   19094:	b	19098 <__assert_fail@plt+0x7c04>
   19098:	mov	sp, fp
   1909c:	pop	{fp, pc}
   190a0:	push	{fp, lr}
   190a4:	mov	fp, sp
   190a8:	sub	sp, sp, #16
   190ac:	str	r0, [fp, #-4]
   190b0:	str	r1, [sp, #8]
   190b4:	ldr	r2, [fp, #-4]
   190b8:	ldr	r3, [sp, #8]
   190bc:	movw	r0, #0
   190c0:	str	r0, [sp, #4]
   190c4:	ldr	r1, [sp, #4]
   190c8:	movw	ip, #2
   190cc:	str	ip, [sp]
   190d0:	bl	18228 <__assert_fail@plt+0x6d94>
   190d4:	cmp	r0, #0
   190d8:	movw	r0, #0
   190dc:	moveq	r0, #1
   190e0:	and	r0, r0, #1
   190e4:	mov	sp, fp
   190e8:	pop	{fp, pc}
   190ec:	push	{fp, lr}
   190f0:	mov	fp, sp
   190f4:	sub	sp, sp, #32
   190f8:	str	r0, [fp, #-8]
   190fc:	str	r1, [fp, #-12]
   19100:	str	r2, [sp, #16]
   19104:	ldr	r0, [sp, #16]
   19108:	bl	172ac <__assert_fail@plt+0x5e18>
   1910c:	cmp	r0, #0
   19110:	bne	19138 <__assert_fail@plt+0x7ca4>
   19114:	ldr	r0, [fp, #-8]
   19118:	ldr	r1, [fp, #-12]
   1911c:	bl	17344 <__assert_fail@plt+0x5eb0>
   19120:	cmp	r0, #0
   19124:	movw	r0, #0
   19128:	moveq	r0, #1
   1912c:	and	r0, r0, #1
   19130:	str	r0, [fp, #-4]
   19134:	b	19174 <__assert_fail@plt+0x7ce0>
   19138:	add	r0, sp, #4
   1913c:	bl	15e94 <__assert_fail@plt+0x4a00>
   19140:	add	r0, sp, #4
   19144:	ldr	r1, [fp, #-8]
   19148:	ldr	r2, [fp, #-12]
   1914c:	bl	17b88 <__assert_fail@plt+0x66f4>
   19150:	add	r0, sp, #4
   19154:	ldr	r1, [sp, #16]
   19158:	bl	190a0 <__assert_fail@plt+0x7c0c>
   1915c:	add	r1, sp, #4
   19160:	str	r0, [sp]
   19164:	mov	r0, r1
   19168:	bl	15f6c <__assert_fail@plt+0x4ad8>
   1916c:	ldr	r0, [sp]
   19170:	str	r0, [fp, #-4]
   19174:	ldr	r0, [fp, #-4]
   19178:	mov	sp, fp
   1917c:	pop	{fp, pc}
   19180:	push	{fp, lr}
   19184:	mov	fp, sp
   19188:	sub	sp, sp, #24
   1918c:	str	r0, [fp, #-4]
   19190:	str	r1, [fp, #-8]
   19194:	str	r2, [sp, #12]
   19198:	str	r3, [sp, #8]
   1919c:	ldr	r0, [fp, #-4]
   191a0:	ldr	r1, [fp, #-8]
   191a4:	ldr	r2, [sp, #12]
   191a8:	ldr	r3, [sp, #8]
   191ac:	movw	ip, #1
   191b0:	str	ip, [sp]
   191b4:	bl	191c0 <__assert_fail@plt+0x7d2c>
   191b8:	mov	sp, fp
   191bc:	pop	{fp, pc}
   191c0:	push	{fp, lr}
   191c4:	mov	fp, sp
   191c8:	sub	sp, sp, #56	; 0x38
   191cc:	ldr	ip, [fp, #8]
   191d0:	add	lr, sp, #24
   191d4:	str	r0, [fp, #-4]
   191d8:	str	r1, [fp, #-8]
   191dc:	str	r2, [fp, #-12]
   191e0:	str	r3, [fp, #-16]
   191e4:	mov	r0, lr
   191e8:	str	ip, [sp, #8]
   191ec:	bl	15e94 <__assert_fail@plt+0x4a00>
   191f0:	add	r0, sp, #12
   191f4:	ldr	r1, [fp, #-16]
   191f8:	bl	162fc <__assert_fail@plt+0x4e68>
   191fc:	add	r3, sp, #12
   19200:	add	r1, sp, #24
   19204:	ldr	r0, [fp, #-4]
   19208:	ldr	r2, [fp, #-12]
   1920c:	ldr	ip, [fp, #8]
   19210:	str	ip, [sp]
   19214:	bl	18228 <__assert_fail@plt+0x6d94>
   19218:	add	r1, sp, #12
   1921c:	str	r0, [sp, #4]
   19220:	mov	r0, r1
   19224:	bl	15f6c <__assert_fail@plt+0x4ad8>
   19228:	add	r0, sp, #24
   1922c:	bl	167dc <__assert_fail@plt+0x5348>
   19230:	str	r0, [fp, #-20]	; 0xffffffec
   19234:	ldr	r0, [fp, #-8]
   19238:	movw	r1, #0
   1923c:	cmp	r0, r1
   19240:	beq	19250 <__assert_fail@plt+0x7dbc>
   19244:	add	r1, sp, #24
   19248:	ldr	r0, [fp, #-8]
   1924c:	bl	175e4 <__assert_fail@plt+0x6150>
   19250:	add	r0, sp, #24
   19254:	bl	15f6c <__assert_fail@plt+0x4ad8>
   19258:	ldr	r0, [fp, #-20]	; 0xffffffec
   1925c:	mov	sp, fp
   19260:	pop	{fp, pc}
   19264:	push	{fp, lr}
   19268:	mov	fp, sp
   1926c:	sub	sp, sp, #24
   19270:	str	r0, [fp, #-4]
   19274:	str	r1, [fp, #-8]
   19278:	str	r2, [sp, #12]
   1927c:	str	r3, [sp, #8]
   19280:	ldr	r0, [fp, #-4]
   19284:	ldr	r1, [fp, #-8]
   19288:	ldr	r2, [sp, #12]
   1928c:	ldr	r3, [sp, #8]
   19290:	movw	ip, #0
   19294:	str	ip, [sp]
   19298:	bl	191c0 <__assert_fail@plt+0x7d2c>
   1929c:	mov	sp, fp
   192a0:	pop	{fp, pc}
   192a4:	push	{fp, lr}
   192a8:	mov	fp, sp
   192ac:	sub	sp, sp, #24
   192b0:	str	r0, [fp, #-4]
   192b4:	str	r1, [fp, #-8]
   192b8:	str	r2, [sp, #12]
   192bc:	str	r3, [sp, #8]
   192c0:	ldr	r0, [fp, #-4]
   192c4:	ldr	r1, [fp, #-8]
   192c8:	ldr	r2, [sp, #12]
   192cc:	ldr	r3, [sp, #8]
   192d0:	movw	ip, #2
   192d4:	str	ip, [sp]
   192d8:	bl	191c0 <__assert_fail@plt+0x7d2c>
   192dc:	mov	sp, fp
   192e0:	pop	{fp, pc}
   192e4:	push	{fp, lr}
   192e8:	mov	fp, sp
   192ec:	sub	sp, sp, #16
   192f0:	str	r0, [fp, #-4]
   192f4:	str	r1, [sp, #8]
   192f8:	str	r2, [sp, #4]
   192fc:	ldr	r0, [fp, #-4]
   19300:	ldr	r2, [sp, #8]
   19304:	ldr	r3, [sp, #4]
   19308:	movw	r1, #0
   1930c:	movw	ip, #1
   19310:	str	ip, [sp]
   19314:	bl	191c0 <__assert_fail@plt+0x7d2c>
   19318:	mov	sp, fp
   1931c:	pop	{fp, pc}
   19320:	push	{fp, lr}
   19324:	mov	fp, sp
   19328:	sub	sp, sp, #24
   1932c:	str	r0, [fp, #-4]
   19330:	str	r1, [fp, #-8]
   19334:	str	r2, [sp, #12]
   19338:	ldr	r0, [fp, #-4]
   1933c:	ldr	r2, [fp, #-8]
   19340:	ldr	r3, [sp, #12]
   19344:	movw	r1, #0
   19348:	str	r1, [sp, #8]
   1934c:	ldr	ip, [sp, #8]
   19350:	str	ip, [sp]
   19354:	bl	191c0 <__assert_fail@plt+0x7d2c>
   19358:	mov	sp, fp
   1935c:	pop	{fp, pc}
   19360:	push	{fp, lr}
   19364:	mov	fp, sp
   19368:	sub	sp, sp, #16
   1936c:	str	r0, [fp, #-4]
   19370:	str	r1, [sp, #8]
   19374:	str	r2, [sp, #4]
   19378:	ldr	r0, [fp, #-4]
   1937c:	ldr	r2, [sp, #8]
   19380:	ldr	r3, [sp, #4]
   19384:	movw	r1, #0
   19388:	movw	ip, #2
   1938c:	str	ip, [sp]
   19390:	bl	191c0 <__assert_fail@plt+0x7d2c>
   19394:	mov	sp, fp
   19398:	pop	{fp, pc}
   1939c:	push	{fp, lr}
   193a0:	mov	fp, sp
   193a4:	sub	sp, sp, #16
   193a8:	str	r0, [fp, #-4]
   193ac:	str	r1, [sp, #8]
   193b0:	str	r2, [sp, #4]
   193b4:	ldr	r1, [fp, #-4]
   193b8:	ldr	r2, [sp, #8]
   193bc:	ldr	r3, [sp, #4]
   193c0:	movw	r0, #0
   193c4:	movw	ip, #1
   193c8:	str	ip, [sp]
   193cc:	bl	191c0 <__assert_fail@plt+0x7d2c>
   193d0:	mov	sp, fp
   193d4:	pop	{fp, pc}
   193d8:	push	{fp, lr}
   193dc:	mov	fp, sp
   193e0:	sub	sp, sp, #24
   193e4:	str	r0, [fp, #-4]
   193e8:	str	r1, [fp, #-8]
   193ec:	str	r2, [sp, #12]
   193f0:	ldr	r1, [fp, #-4]
   193f4:	ldr	r2, [fp, #-8]
   193f8:	ldr	r3, [sp, #12]
   193fc:	movw	r0, #0
   19400:	str	r0, [sp, #8]
   19404:	ldr	ip, [sp, #8]
   19408:	str	ip, [sp]
   1940c:	bl	191c0 <__assert_fail@plt+0x7d2c>
   19410:	mov	sp, fp
   19414:	pop	{fp, pc}
   19418:	push	{fp, lr}
   1941c:	mov	fp, sp
   19420:	sub	sp, sp, #16
   19424:	str	r0, [fp, #-4]
   19428:	str	r1, [sp, #8]
   1942c:	str	r2, [sp, #4]
   19430:	ldr	r1, [fp, #-4]
   19434:	ldr	r2, [sp, #8]
   19438:	ldr	r3, [sp, #4]
   1943c:	movw	r0, #0
   19440:	movw	ip, #2
   19444:	str	ip, [sp]
   19448:	bl	191c0 <__assert_fail@plt+0x7d2c>
   1944c:	mov	sp, fp
   19450:	pop	{fp, pc}
   19454:	push	{fp, lr}
   19458:	mov	fp, sp
   1945c:	sub	sp, sp, #16
   19460:	str	r0, [fp, #-4]
   19464:	str	r1, [sp, #8]
   19468:	ldr	r2, [fp, #-4]
   1946c:	ldr	r3, [sp, #8]
   19470:	movw	r0, #0
   19474:	str	r0, [sp, #4]
   19478:	ldr	r1, [sp, #4]
   1947c:	movw	ip, #1
   19480:	str	ip, [sp]
   19484:	bl	191c0 <__assert_fail@plt+0x7d2c>
   19488:	mov	sp, fp
   1948c:	pop	{fp, pc}
   19490:	push	{fp, lr}
   19494:	mov	fp, sp
   19498:	sub	sp, sp, #16
   1949c:	str	r0, [fp, #-4]
   194a0:	str	r1, [sp, #8]
   194a4:	ldr	r2, [fp, #-4]
   194a8:	ldr	r3, [sp, #8]
   194ac:	movw	r0, #0
   194b0:	str	r0, [sp, #4]
   194b4:	ldr	r1, [sp, #4]
   194b8:	ldr	ip, [sp, #4]
   194bc:	str	ip, [sp]
   194c0:	bl	191c0 <__assert_fail@plt+0x7d2c>
   194c4:	mov	sp, fp
   194c8:	pop	{fp, pc}
   194cc:	push	{fp, lr}
   194d0:	mov	fp, sp
   194d4:	sub	sp, sp, #16
   194d8:	str	r0, [fp, #-4]
   194dc:	str	r1, [sp, #8]
   194e0:	ldr	r2, [fp, #-4]
   194e4:	ldr	r3, [sp, #8]
   194e8:	movw	r0, #0
   194ec:	str	r0, [sp, #4]
   194f0:	ldr	r1, [sp, #4]
   194f4:	movw	ip, #2
   194f8:	str	ip, [sp]
   194fc:	bl	191c0 <__assert_fail@plt+0x7d2c>
   19500:	mov	sp, fp
   19504:	pop	{fp, pc}
   19508:	push	{fp, lr}
   1950c:	mov	fp, sp
   19510:	sub	sp, sp, #24
   19514:	str	r0, [fp, #-4]
   19518:	str	r1, [fp, #-8]
   1951c:	str	r2, [sp, #12]
   19520:	ldr	r1, [fp, #-4]
   19524:	ldr	r2, [fp, #-8]
   19528:	ldr	r3, [sp, #12]
   1952c:	movw	r0, #0
   19530:	str	r0, [sp, #8]
   19534:	ldr	ip, [sp, #8]
   19538:	str	ip, [sp]
   1953c:	bl	191c0 <__assert_fail@plt+0x7d2c>
   19540:	mov	sp, fp
   19544:	pop	{fp, pc}
   19548:	push	{fp, lr}
   1954c:	mov	fp, sp
   19550:	sub	sp, sp, #24
   19554:	str	r0, [fp, #-4]
   19558:	str	r1, [fp, #-8]
   1955c:	str	r2, [sp, #12]
   19560:	ldr	r0, [fp, #-4]
   19564:	ldr	r2, [fp, #-8]
   19568:	ldr	r3, [sp, #12]
   1956c:	movw	r1, #0
   19570:	movw	ip, #2
   19574:	str	ip, [sp]
   19578:	bl	191c0 <__assert_fail@plt+0x7d2c>
   1957c:	str	r0, [sp, #8]
   19580:	ldr	r0, [sp, #8]
   19584:	cmp	r0, #0
   19588:	bne	19590 <__assert_fail@plt+0x80fc>
   1958c:	b	195b0 <__assert_fail@plt+0x811c>
   19590:	movw	r0, #18385	; 0x47d1
   19594:	movt	r0, #4
   19598:	movw	r1, #17404	; 0x43fc
   1959c:	movt	r1, #4
   195a0:	movw	r2, #2647	; 0xa57
   195a4:	movw	r3, #18473	; 0x4829
   195a8:	movt	r3, #4
   195ac:	bl	11494 <__assert_fail@plt>
   195b0:	b	195b4 <__assert_fail@plt+0x8120>
   195b4:	mov	sp, fp
   195b8:	pop	{fp, pc}
   195bc:	push	{fp, lr}
   195c0:	mov	fp, sp
   195c4:	sub	sp, sp, #16
   195c8:	str	r0, [fp, #-4]
   195cc:	str	r1, [sp, #8]
   195d0:	ldr	r2, [fp, #-4]
   195d4:	ldr	r3, [sp, #8]
   195d8:	movw	r0, #0
   195dc:	str	r0, [sp, #4]
   195e0:	ldr	r1, [sp, #4]
   195e4:	movw	ip, #2
   195e8:	str	ip, [sp]
   195ec:	bl	191c0 <__assert_fail@plt+0x7d2c>
   195f0:	cmp	r0, #0
   195f4:	movw	r0, #0
   195f8:	moveq	r0, #1
   195fc:	and	r0, r0, #1
   19600:	mov	sp, fp
   19604:	pop	{fp, pc}
   19608:	push	{fp, lr}
   1960c:	mov	fp, sp
   19610:	sub	sp, sp, #32
   19614:	add	r3, sp, #8
   19618:	str	r0, [fp, #-4]
   1961c:	str	r1, [fp, #-8]
   19620:	str	r2, [fp, #-12]
   19624:	ldr	r1, [fp, #-12]
   19628:	mov	r0, r3
   1962c:	bl	162fc <__assert_fail@plt+0x4e68>
   19630:	add	r0, sp, #8
   19634:	ldr	r1, [fp, #-8]
   19638:	str	r0, [sp, #4]
   1963c:	ldr	r2, [sp, #4]
   19640:	bl	1968c <__assert_fail@plt+0x81f8>
   19644:	ldr	r0, [fp, #-12]
   19648:	cmp	r0, #0
   1964c:	bls	1965c <__assert_fail@plt+0x81c8>
   19650:	add	r0, sp, #8
   19654:	bl	167dc <__assert_fail@plt+0x5348>
   19658:	str	r0, [fp, #-12]
   1965c:	ldr	r0, [fp, #-4]
   19660:	movw	r1, #0
   19664:	cmp	r0, r1
   19668:	beq	19678 <__assert_fail@plt+0x81e4>
   1966c:	add	r0, sp, #8
   19670:	ldr	r1, [fp, #-4]
   19674:	bl	175e4 <__assert_fail@plt+0x6150>
   19678:	add	r0, sp, #8
   1967c:	bl	15f6c <__assert_fail@plt+0x4ad8>
   19680:	ldr	r0, [fp, #-12]
   19684:	mov	sp, fp
   19688:	pop	{fp, pc}
   1968c:	push	{fp, lr}
   19690:	mov	fp, sp
   19694:	sub	sp, sp, #88	; 0x58
   19698:	str	r0, [fp, #-4]
   1969c:	str	r1, [fp, #-8]
   196a0:	str	r2, [fp, #-12]
   196a4:	ldr	r0, [fp, #-8]
   196a8:	ldr	r0, [r0, #4]
   196ac:	cmp	r0, #0
   196b0:	bne	196c4 <__assert_fail@plt+0x8230>
   196b4:	ldr	r0, [fp, #-4]
   196b8:	ldr	r1, [fp, #-12]
   196bc:	bl	1753c <__assert_fail@plt+0x60a8>
   196c0:	b	198d8 <__assert_fail@plt+0x8444>
   196c4:	ldr	r0, [fp, #-12]
   196c8:	ldr	r0, [r0, #4]
   196cc:	cmp	r0, #0
   196d0:	bne	196e4 <__assert_fail@plt+0x8250>
   196d4:	ldr	r0, [fp, #-4]
   196d8:	ldr	r1, [fp, #-8]
   196dc:	bl	1753c <__assert_fail@plt+0x60a8>
   196e0:	b	198d8 <__assert_fail@plt+0x8444>
   196e4:	sub	r0, fp, #24
   196e8:	bl	15e94 <__assert_fail@plt+0x4a00>
   196ec:	sub	r0, fp, #36	; 0x24
   196f0:	bl	15e94 <__assert_fail@plt+0x4a00>
   196f4:	sub	r0, fp, #24
   196f8:	ldr	r1, [fp, #-8]
   196fc:	bl	1753c <__assert_fail@plt+0x60a8>
   19700:	sub	r0, fp, #24
   19704:	bl	198e0 <__assert_fail@plt+0x844c>
   19708:	sub	r1, fp, #36	; 0x24
   1970c:	str	r0, [fp, #-40]	; 0xffffffd8
   19710:	ldr	r0, [fp, #-12]
   19714:	str	r0, [sp, #28]
   19718:	mov	r0, r1
   1971c:	ldr	r1, [sp, #28]
   19720:	bl	1753c <__assert_fail@plt+0x60a8>
   19724:	sub	r0, fp, #36	; 0x24
   19728:	bl	198e0 <__assert_fail@plt+0x844c>
   1972c:	str	r0, [sp, #44]	; 0x2c
   19730:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19734:	ldr	r1, [sp, #44]	; 0x2c
   19738:	cmp	r0, r1
   1973c:	bcs	1974c <__assert_fail@plt+0x82b8>
   19740:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19744:	str	r0, [sp, #24]
   19748:	b	19754 <__assert_fail@plt+0x82c0>
   1974c:	ldr	r0, [sp, #44]	; 0x2c
   19750:	str	r0, [sp, #24]
   19754:	ldr	r0, [sp, #24]
   19758:	str	r0, [sp, #40]	; 0x28
   1975c:	ldr	r0, [fp, #-20]	; 0xffffffec
   19760:	ldr	r1, [fp, #-32]	; 0xffffffe0
   19764:	cmp	r0, r1
   19768:	bge	19778 <__assert_fail@plt+0x82e4>
   1976c:	sub	r1, fp, #36	; 0x24
   19770:	sub	r0, fp, #24
   19774:	bl	175e4 <__assert_fail@plt+0x6150>
   19778:	sub	r2, fp, #36	; 0x24
   1977c:	sub	r0, fp, #24
   19780:	str	r0, [sp, #20]
   19784:	ldr	r1, [sp, #20]
   19788:	bl	18894 <__assert_fail@plt+0x7400>
   1978c:	ldr	r0, [fp, #-20]	; 0xffffffec
   19790:	cmp	r0, #0
   19794:	bne	197a8 <__assert_fail@plt+0x8314>
   19798:	sub	r1, fp, #36	; 0x24
   1979c:	ldr	r0, [fp, #-4]
   197a0:	bl	175e4 <__assert_fail@plt+0x6150>
   197a4:	b	198b8 <__assert_fail@plt+0x8424>
   197a8:	b	197ac <__assert_fail@plt+0x8318>
   197ac:	sub	r0, fp, #24
   197b0:	bl	198e0 <__assert_fail@plt+0x844c>
   197b4:	sub	r1, fp, #36	; 0x24
   197b8:	sub	lr, fp, #24
   197bc:	str	r0, [sp, #16]
   197c0:	mov	r0, lr
   197c4:	bl	17344 <__assert_fail@plt+0x5eb0>
   197c8:	str	r0, [sp, #36]	; 0x24
   197cc:	ldr	r0, [sp, #36]	; 0x24
   197d0:	cmp	r0, #0
   197d4:	bne	197e8 <__assert_fail@plt+0x8354>
   197d8:	sub	r1, fp, #24
   197dc:	ldr	r0, [fp, #-4]
   197e0:	bl	175e4 <__assert_fail@plt+0x6150>
   197e4:	b	198b4 <__assert_fail@plt+0x8420>
   197e8:	ldr	r0, [sp, #36]	; 0x24
   197ec:	cmp	r0, #0
   197f0:	bge	19800 <__assert_fail@plt+0x836c>
   197f4:	sub	r1, fp, #36	; 0x24
   197f8:	sub	r0, fp, #24
   197fc:	bl	175e4 <__assert_fail@plt+0x6150>
   19800:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19804:	cmp	r0, #1
   19808:	bne	1989c <__assert_fail@plt+0x8408>
   1980c:	sub	r2, fp, #36	; 0x24
   19810:	sub	r0, fp, #24
   19814:	str	r0, [sp, #12]
   19818:	ldr	r1, [sp, #12]
   1981c:	bl	18894 <__assert_fail@plt+0x7400>
   19820:	ldr	r0, [fp, #-4]
   19824:	ldr	r0, [r0]
   19828:	movw	r1, #1
   1982c:	cmp	r1, r0
   19830:	ble	19848 <__assert_fail@plt+0x83b4>
   19834:	ldr	r0, [fp, #-4]
   19838:	movw	r1, #1
   1983c:	bl	16114 <__assert_fail@plt+0x4c80>
   19840:	str	r0, [sp, #8]
   19844:	b	19854 <__assert_fail@plt+0x83c0>
   19848:	ldr	r0, [fp, #-4]
   1984c:	ldr	r0, [r0, #8]
   19850:	str	r0, [sp, #8]
   19854:	ldr	r0, [sp, #8]
   19858:	str	r0, [sp, #32]
   1985c:	ldr	r0, [fp, #-16]
   19860:	ldr	r0, [r0]
   19864:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19868:	ldr	r1, [r1]
   1986c:	bl	19954 <__assert_fail@plt+0x84c0>
   19870:	ldr	r1, [sp, #32]
   19874:	str	r0, [r1]
   19878:	ldr	r0, [sp, #32]
   1987c:	ldr	r0, [r0]
   19880:	cmp	r0, #0
   19884:	movw	r0, #0
   19888:	movne	r0, #1
   1988c:	and	r0, r0, #1
   19890:	ldr	r1, [fp, #-4]
   19894:	str	r0, [r1, #4]
   19898:	b	198b4 <__assert_fail@plt+0x8420>
   1989c:	sub	r2, fp, #36	; 0x24
   198a0:	sub	r0, fp, #24
   198a4:	str	r0, [sp, #4]
   198a8:	ldr	r1, [sp, #4]
   198ac:	bl	17b88 <__assert_fail@plt+0x66f4>
   198b0:	b	197ac <__assert_fail@plt+0x8318>
   198b4:	b	198b8 <__assert_fail@plt+0x8424>
   198b8:	sub	r0, fp, #24
   198bc:	bl	15f6c <__assert_fail@plt+0x4ad8>
   198c0:	sub	r0, fp, #36	; 0x24
   198c4:	bl	15f6c <__assert_fail@plt+0x4ad8>
   198c8:	ldr	r0, [fp, #-4]
   198cc:	ldr	r1, [fp, #-4]
   198d0:	ldr	r2, [sp, #40]	; 0x28
   198d4:	bl	17ec4 <__assert_fail@plt+0x6a30>
   198d8:	mov	sp, fp
   198dc:	pop	{fp, pc}
   198e0:	push	{fp, lr}
   198e4:	mov	fp, sp
   198e8:	sub	sp, sp, #8
   198ec:	str	r0, [sp, #4]
   198f0:	ldr	r0, [sp, #4]
   198f4:	ldr	r0, [r0, #4]
   198f8:	cmp	r0, #0
   198fc:	ble	19904 <__assert_fail@plt+0x8470>
   19900:	b	19924 <__assert_fail@plt+0x8490>
   19904:	movw	r0, #20961	; 0x51e1
   19908:	movt	r0, #4
   1990c:	movw	r1, #17404	; 0x43fc
   19910:	movt	r1, #4
   19914:	movw	r2, #2723	; 0xaa3
   19918:	movw	r3, #20977	; 0x51f1
   1991c:	movt	r3, #4
   19920:	bl	11494 <__assert_fail@plt>
   19924:	ldr	r0, [sp, #4]
   19928:	ldr	r0, [r0, #8]
   1992c:	movw	r1, #0
   19930:	bl	14d14 <__assert_fail@plt+0x3880>
   19934:	str	r0, [sp]
   19938:	ldr	r0, [sp, #4]
   1993c:	ldr	r1, [sp, #4]
   19940:	ldr	r2, [sp]
   19944:	bl	18bf8 <__assert_fail@plt+0x7764>
   19948:	ldr	r0, [sp]
   1994c:	mov	sp, fp
   19950:	pop	{fp, pc}
   19954:	push	{fp, lr}
   19958:	mov	fp, sp
   1995c:	sub	sp, sp, #40	; 0x28
   19960:	str	r0, [fp, #-8]
   19964:	str	r1, [fp, #-12]
   19968:	ldr	r0, [fp, #-8]
   1996c:	ldr	r1, [fp, #-12]
   19970:	orr	r0, r0, r1
   19974:	cmp	r0, #0
   19978:	bls	19980 <__assert_fail@plt+0x84ec>
   1997c:	b	199a0 <__assert_fail@plt+0x850c>
   19980:	movw	r0, #21018	; 0x521a
   19984:	movt	r0, #4
   19988:	movw	r1, #17404	; 0x43fc
   1998c:	movt	r1, #4
   19990:	movw	r2, #2663	; 0xa67
   19994:	movw	r3, #21030	; 0x5226
   19998:	movt	r3, #4
   1999c:	bl	11494 <__assert_fail@plt>
   199a0:	ldr	r0, [fp, #-8]
   199a4:	cmp	r0, #0
   199a8:	bne	199b8 <__assert_fail@plt+0x8524>
   199ac:	ldr	r0, [fp, #-12]
   199b0:	str	r0, [fp, #-4]
   199b4:	b	19bb0 <__assert_fail@plt+0x871c>
   199b8:	ldr	r0, [fp, #-12]
   199bc:	cmp	r0, #0
   199c0:	bne	199d0 <__assert_fail@plt+0x853c>
   199c4:	ldr	r0, [fp, #-8]
   199c8:	str	r0, [fp, #-4]
   199cc:	b	19bb0 <__assert_fail@plt+0x871c>
   199d0:	b	199d4 <__assert_fail@plt+0x8540>
   199d4:	b	199d8 <__assert_fail@plt+0x8544>
   199d8:	ldr	r0, [fp, #-8]
   199dc:	ldr	r1, [fp, #-12]
   199e0:	orr	r0, r0, r1
   199e4:	str	r0, [sp, #20]
   199e8:	movw	r0, #0
   199ec:	str	r0, [sp, #16]
   199f0:	ldr	r0, [sp, #20]
   199f4:	ldr	r1, [sp, #20]
   199f8:	movw	r2, #0
   199fc:	sub	r1, r2, r1
   19a00:	and	r0, r0, r1
   19a04:	str	r0, [sp, #12]
   19a08:	str	r2, [sp, #8]
   19a0c:	movw	r0, #8
   19a10:	str	r0, [sp, #4]
   19a14:	ldr	r0, [sp, #4]
   19a18:	movw	r1, #32
   19a1c:	cmp	r1, r0
   19a20:	bls	19a5c <__assert_fail@plt+0x85c8>
   19a24:	b	19a28 <__assert_fail@plt+0x8594>
   19a28:	ldr	r0, [sp, #12]
   19a2c:	and	r0, r0, #-16777216	; 0xff000000
   19a30:	cmp	r0, #0
   19a34:	bne	19a58 <__assert_fail@plt+0x85c4>
   19a38:	ldr	r0, [sp, #4]
   19a3c:	ldr	r1, [sp, #12]
   19a40:	lsl	r0, r1, r0
   19a44:	str	r0, [sp, #12]
   19a48:	ldr	r0, [sp, #8]
   19a4c:	add	r0, r0, #8
   19a50:	str	r0, [sp, #8]
   19a54:	b	19a28 <__assert_fail@plt+0x8594>
   19a58:	b	19a5c <__assert_fail@plt+0x85c8>
   19a5c:	b	19a60 <__assert_fail@plt+0x85cc>
   19a60:	ldr	r0, [sp, #12]
   19a64:	and	r0, r0, #-2147483648	; 0x80000000
   19a68:	cmp	r0, #0
   19a6c:	bne	19a8c <__assert_fail@plt+0x85f8>
   19a70:	ldr	r0, [sp, #12]
   19a74:	lsl	r0, r0, #1
   19a78:	str	r0, [sp, #12]
   19a7c:	ldr	r0, [sp, #8]
   19a80:	add	r0, r0, #1
   19a84:	str	r0, [sp, #8]
   19a88:	b	19a60 <__assert_fail@plt+0x85cc>
   19a8c:	ldr	r0, [sp, #8]
   19a90:	str	r0, [sp, #16]
   19a94:	ldr	r0, [sp, #16]
   19a98:	movw	r1, #31
   19a9c:	sub	r0, r1, r0
   19aa0:	str	r0, [fp, #-16]
   19aa4:	ldr	r0, [fp, #-16]
   19aa8:	ldr	r1, [fp, #-8]
   19aac:	lsr	r0, r1, r0
   19ab0:	str	r0, [fp, #-8]
   19ab4:	ldr	r0, [fp, #-16]
   19ab8:	ldr	r1, [fp, #-12]
   19abc:	lsr	r0, r1, r0
   19ac0:	str	r0, [fp, #-12]
   19ac4:	ldr	r0, [fp, #-8]
   19ac8:	and	r0, r0, #1
   19acc:	cmp	r0, #0
   19ad0:	bne	19af4 <__assert_fail@plt+0x8660>
   19ad4:	b	19ad8 <__assert_fail@plt+0x8644>
   19ad8:	ldr	r0, [fp, #-8]
   19adc:	str	r0, [sp]
   19ae0:	ldr	r0, [fp, #-12]
   19ae4:	str	r0, [fp, #-8]
   19ae8:	ldr	r0, [sp]
   19aec:	str	r0, [fp, #-12]
   19af0:	b	19af4 <__assert_fail@plt+0x8660>
   19af4:	b	19af8 <__assert_fail@plt+0x8664>
   19af8:	ldr	r0, [fp, #-12]
   19afc:	and	r0, r0, #1
   19b00:	cmp	r0, #0
   19b04:	bne	19b18 <__assert_fail@plt+0x8684>
   19b08:	ldr	r0, [fp, #-12]
   19b0c:	lsr	r0, r0, #1
   19b10:	str	r0, [fp, #-12]
   19b14:	b	19af8 <__assert_fail@plt+0x8664>
   19b18:	b	19b1c <__assert_fail@plt+0x8688>
   19b1c:	ldr	r0, [fp, #-8]
   19b20:	ldr	r1, [fp, #-12]
   19b24:	cmp	r0, r1
   19b28:	beq	19ba0 <__assert_fail@plt+0x870c>
   19b2c:	ldr	r0, [fp, #-8]
   19b30:	ldr	r1, [fp, #-12]
   19b34:	cmp	r0, r1
   19b38:	bls	19b6c <__assert_fail@plt+0x86d8>
   19b3c:	ldr	r0, [fp, #-12]
   19b40:	ldr	r1, [fp, #-8]
   19b44:	sub	r0, r1, r0
   19b48:	str	r0, [fp, #-8]
   19b4c:	ldr	r0, [fp, #-8]
   19b50:	lsr	r0, r0, #1
   19b54:	str	r0, [fp, #-8]
   19b58:	ldr	r0, [fp, #-8]
   19b5c:	and	r0, r0, #1
   19b60:	cmp	r0, #0
   19b64:	beq	19b4c <__assert_fail@plt+0x86b8>
   19b68:	b	19b9c <__assert_fail@plt+0x8708>
   19b6c:	ldr	r0, [fp, #-8]
   19b70:	ldr	r1, [fp, #-12]
   19b74:	sub	r0, r1, r0
   19b78:	str	r0, [fp, #-12]
   19b7c:	ldr	r0, [fp, #-12]
   19b80:	lsr	r0, r0, #1
   19b84:	str	r0, [fp, #-12]
   19b88:	ldr	r0, [fp, #-12]
   19b8c:	and	r0, r0, #1
   19b90:	cmp	r0, #0
   19b94:	beq	19b7c <__assert_fail@plt+0x86e8>
   19b98:	b	19b9c <__assert_fail@plt+0x8708>
   19b9c:	b	19b1c <__assert_fail@plt+0x8688>
   19ba0:	ldr	r0, [fp, #-8]
   19ba4:	ldr	r1, [fp, #-16]
   19ba8:	lsl	r0, r0, r1
   19bac:	str	r0, [fp, #-4]
   19bb0:	ldr	r0, [fp, #-4]
   19bb4:	mov	sp, fp
   19bb8:	pop	{fp, pc}
   19bbc:	push	{fp, lr}
   19bc0:	mov	fp, sp
   19bc4:	sub	sp, sp, #232	; 0xe8
   19bc8:	ldr	ip, [fp, #8]
   19bcc:	str	r0, [fp, #-4]
   19bd0:	str	r1, [fp, #-8]
   19bd4:	str	r2, [fp, #-12]
   19bd8:	str	r3, [fp, #-16]
   19bdc:	ldr	r0, [fp, #-16]
   19be0:	ldr	r0, [r0, #4]
   19be4:	cmp	r0, #0
   19be8:	str	ip, [sp, #96]	; 0x60
   19bec:	bne	19c44 <__assert_fail@plt+0x87b0>
   19bf0:	ldr	r0, [fp, #8]
   19bf4:	bl	172ac <__assert_fail@plt+0x5e18>
   19bf8:	str	r0, [fp, #-108]	; 0xffffff94
   19bfc:	ldr	r0, [fp, #-4]
   19c00:	ldr	r1, [fp, #8]
   19c04:	bl	1753c <__assert_fail@plt+0x60a8>
   19c08:	ldr	r0, [fp, #-8]
   19c0c:	movw	r1, #0
   19c10:	cmp	r0, r1
   19c14:	beq	19c24 <__assert_fail@plt+0x8790>
   19c18:	ldr	r0, [fp, #-8]
   19c1c:	movw	r1, #0
   19c20:	str	r1, [r0, #4]
   19c24:	ldr	r0, [fp, #-12]
   19c28:	movw	r1, #0
   19c2c:	cmp	r0, r1
   19c30:	beq	19c40 <__assert_fail@plt+0x87ac>
   19c34:	ldr	r0, [fp, #-12]
   19c38:	ldr	r1, [fp, #-108]	; 0xffffff94
   19c3c:	bl	15ff0 <__assert_fail@plt+0x4b5c>
   19c40:	b	1a21c <__assert_fail@plt+0x8d88>
   19c44:	ldr	r0, [fp, #8]
   19c48:	ldr	r0, [r0, #4]
   19c4c:	cmp	r0, #0
   19c50:	bne	19ca8 <__assert_fail@plt+0x8814>
   19c54:	ldr	r0, [fp, #-16]
   19c58:	bl	172ac <__assert_fail@plt+0x5e18>
   19c5c:	str	r0, [fp, #-112]	; 0xffffff90
   19c60:	ldr	r0, [fp, #-4]
   19c64:	ldr	r1, [fp, #-16]
   19c68:	bl	1753c <__assert_fail@plt+0x60a8>
   19c6c:	ldr	r0, [fp, #-8]
   19c70:	movw	r1, #0
   19c74:	cmp	r0, r1
   19c78:	beq	19c88 <__assert_fail@plt+0x87f4>
   19c7c:	ldr	r0, [fp, #-8]
   19c80:	ldr	r1, [fp, #-112]	; 0xffffff90
   19c84:	bl	15ff0 <__assert_fail@plt+0x4b5c>
   19c88:	ldr	r0, [fp, #-12]
   19c8c:	movw	r1, #0
   19c90:	cmp	r0, r1
   19c94:	beq	19ca4 <__assert_fail@plt+0x8810>
   19c98:	ldr	r0, [fp, #-12]
   19c9c:	movw	r1, #0
   19ca0:	str	r1, [r0, #4]
   19ca4:	b	1a21c <__assert_fail@plt+0x8d88>
   19ca8:	sub	r0, fp, #28
   19cac:	bl	15e94 <__assert_fail@plt+0x4a00>
   19cb0:	sub	r0, fp, #40	; 0x28
   19cb4:	bl	15e94 <__assert_fail@plt+0x4a00>
   19cb8:	sub	r0, fp, #52	; 0x34
   19cbc:	bl	15e94 <__assert_fail@plt+0x4a00>
   19cc0:	sub	r0, fp, #64	; 0x40
   19cc4:	bl	15e94 <__assert_fail@plt+0x4a00>
   19cc8:	sub	r0, fp, #76	; 0x4c
   19ccc:	bl	15e94 <__assert_fail@plt+0x4a00>
   19cd0:	sub	r0, fp, #88	; 0x58
   19cd4:	bl	15e94 <__assert_fail@plt+0x4a00>
   19cd8:	sub	r0, fp, #28
   19cdc:	ldr	r1, [fp, #-16]
   19ce0:	bl	1753c <__assert_fail@plt+0x60a8>
   19ce4:	sub	r0, fp, #28
   19ce8:	bl	198e0 <__assert_fail@plt+0x844c>
   19cec:	sub	r1, fp, #40	; 0x28
   19cf0:	str	r0, [fp, #-92]	; 0xffffffa4
   19cf4:	ldr	r0, [fp, #8]
   19cf8:	str	r0, [sp, #92]	; 0x5c
   19cfc:	mov	r0, r1
   19d00:	ldr	r1, [sp, #92]	; 0x5c
   19d04:	bl	1753c <__assert_fail@plt+0x60a8>
   19d08:	sub	r0, fp, #40	; 0x28
   19d0c:	bl	198e0 <__assert_fail@plt+0x844c>
   19d10:	str	r0, [fp, #-96]	; 0xffffffa0
   19d14:	ldr	r0, [fp, #-92]	; 0xffffffa4
   19d18:	ldr	r1, [fp, #-96]	; 0xffffffa0
   19d1c:	cmp	r0, r1
   19d20:	bcs	19d30 <__assert_fail@plt+0x889c>
   19d24:	ldr	r0, [fp, #-92]	; 0xffffffa4
   19d28:	str	r0, [sp, #88]	; 0x58
   19d2c:	b	19d38 <__assert_fail@plt+0x88a4>
   19d30:	ldr	r0, [fp, #-96]	; 0xffffffa0
   19d34:	str	r0, [sp, #88]	; 0x58
   19d38:	ldr	r0, [sp, #88]	; 0x58
   19d3c:	str	r0, [fp, #-100]	; 0xffffff9c
   19d40:	ldr	r0, [fp, #-100]	; 0xffffff9c
   19d44:	ldr	r1, [fp, #-92]	; 0xffffffa4
   19d48:	sub	r0, r1, r0
   19d4c:	str	r0, [fp, #-92]	; 0xffffffa4
   19d50:	ldr	r0, [fp, #-100]	; 0xffffff9c
   19d54:	ldr	r1, [fp, #-96]	; 0xffffffa0
   19d58:	sub	r0, r1, r0
   19d5c:	str	r0, [fp, #-96]	; 0xffffffa0
   19d60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19d64:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19d68:	cmp	r0, r1
   19d6c:	bge	19dd0 <__assert_fail@plt+0x893c>
   19d70:	sub	r1, fp, #40	; 0x28
   19d74:	sub	r0, fp, #28
   19d78:	bl	175e4 <__assert_fail@plt+0x6150>
   19d7c:	ldr	r0, [fp, #-16]
   19d80:	str	r0, [sp, #116]	; 0x74
   19d84:	ldr	r0, [fp, #8]
   19d88:	str	r0, [fp, #-16]
   19d8c:	ldr	r0, [sp, #116]	; 0x74
   19d90:	str	r0, [fp, #8]
   19d94:	b	19d98 <__assert_fail@plt+0x8904>
   19d98:	ldr	r0, [fp, #-8]
   19d9c:	str	r0, [sp, #112]	; 0x70
   19da0:	ldr	r0, [fp, #-12]
   19da4:	str	r0, [fp, #-8]
   19da8:	ldr	r0, [sp, #112]	; 0x70
   19dac:	str	r0, [fp, #-12]
   19db0:	b	19db4 <__assert_fail@plt+0x8920>
   19db4:	ldr	r0, [fp, #-92]	; 0xffffffa4
   19db8:	str	r0, [sp, #108]	; 0x6c
   19dbc:	ldr	r0, [fp, #-96]	; 0xffffffa0
   19dc0:	str	r0, [fp, #-92]	; 0xffffffa4
   19dc4:	ldr	r0, [sp, #108]	; 0x6c
   19dc8:	str	r0, [fp, #-96]	; 0xffffffa0
   19dcc:	b	19dd0 <__assert_fail@plt+0x893c>
   19dd0:	sub	r3, fp, #40	; 0x28
   19dd4:	sub	r0, fp, #28
   19dd8:	sub	r1, fp, #88	; 0x58
   19ddc:	str	r0, [sp, #84]	; 0x54
   19de0:	mov	r0, r1
   19de4:	ldr	r1, [sp, #84]	; 0x54
   19de8:	ldr	r2, [sp, #84]	; 0x54
   19dec:	bl	18708 <__assert_fail@plt+0x7274>
   19df0:	sub	r0, fp, #88	; 0x58
   19df4:	ldr	r2, [fp, #-92]	; 0xffffffa4
   19df8:	str	r0, [sp, #80]	; 0x50
   19dfc:	ldr	r1, [sp, #80]	; 0x50
   19e00:	bl	17ec4 <__assert_fail@plt+0x6a30>
   19e04:	sub	r0, fp, #64	; 0x40
   19e08:	ldr	r1, [fp, #-96]	; 0xffffffa0
   19e0c:	bl	1a224 <__assert_fail@plt+0x8d90>
   19e10:	ldr	r0, [fp, #-92]	; 0xffffffa4
   19e14:	ldr	r1, [fp, #-96]	; 0xffffffa0
   19e18:	add	r0, r0, r1
   19e1c:	str	r0, [fp, #-104]	; 0xffffff98
   19e20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19e24:	cmp	r0, #0
   19e28:	ble	19f80 <__assert_fail@plt+0x8aec>
   19e2c:	sub	r0, fp, #28
   19e30:	bl	198e0 <__assert_fail@plt+0x844c>
   19e34:	sub	lr, fp, #76	; 0x4c
   19e38:	str	r0, [sp, #104]	; 0x68
   19e3c:	ldr	r0, [fp, #-92]	; 0xffffffa4
   19e40:	ldr	r1, [sp, #104]	; 0x68
   19e44:	add	r1, r0, r1
   19e48:	mov	r0, lr
   19e4c:	bl	1a224 <__assert_fail@plt+0x8d90>
   19e50:	ldr	r0, [sp, #104]	; 0x68
   19e54:	ldr	r1, [fp, #-104]	; 0xffffff98
   19e58:	add	r0, r1, r0
   19e5c:	str	r0, [fp, #-104]	; 0xffffff98
   19e60:	sub	r1, fp, #40	; 0x28
   19e64:	sub	r0, fp, #28
   19e68:	bl	17344 <__assert_fail@plt+0x5eb0>
   19e6c:	str	r0, [sp, #100]	; 0x64
   19e70:	ldr	r0, [sp, #100]	; 0x64
   19e74:	cmp	r0, #0
   19e78:	bne	19e80 <__assert_fail@plt+0x89ec>
   19e7c:	b	19f7c <__assert_fail@plt+0x8ae8>
   19e80:	ldr	r0, [sp, #100]	; 0x64
   19e84:	cmp	r0, #0
   19e88:	bge	19efc <__assert_fail@plt+0x8a68>
   19e8c:	sub	r2, fp, #28
   19e90:	sub	r0, fp, #40	; 0x28
   19e94:	str	r0, [sp, #76]	; 0x4c
   19e98:	ldr	r1, [sp, #76]	; 0x4c
   19e9c:	bl	17b88 <__assert_fail@plt+0x66f4>
   19ea0:	sub	r2, fp, #88	; 0x58
   19ea4:	sub	r0, fp, #76	; 0x4c
   19ea8:	str	r0, [sp, #72]	; 0x48
   19eac:	ldr	r1, [sp, #72]	; 0x48
   19eb0:	bl	176c0 <__assert_fail@plt+0x622c>
   19eb4:	sub	r2, fp, #64	; 0x40
   19eb8:	sub	r0, fp, #52	; 0x34
   19ebc:	str	r0, [sp, #68]	; 0x44
   19ec0:	ldr	r1, [sp, #68]	; 0x44
   19ec4:	bl	176c0 <__assert_fail@plt+0x622c>
   19ec8:	sub	r0, fp, #40	; 0x28
   19ecc:	bl	198e0 <__assert_fail@plt+0x844c>
   19ed0:	sub	r1, fp, #88	; 0x58
   19ed4:	str	r0, [sp, #104]	; 0x68
   19ed8:	ldr	r2, [sp, #104]	; 0x68
   19edc:	mov	r0, r1
   19ee0:	bl	17ec4 <__assert_fail@plt+0x6a30>
   19ee4:	sub	r0, fp, #64	; 0x40
   19ee8:	ldr	r2, [sp, #104]	; 0x68
   19eec:	str	r0, [sp, #64]	; 0x40
   19ef0:	ldr	r1, [sp, #64]	; 0x40
   19ef4:	bl	17ec4 <__assert_fail@plt+0x6a30>
   19ef8:	b	19f68 <__assert_fail@plt+0x8ad4>
   19efc:	sub	r2, fp, #40	; 0x28
   19f00:	sub	r0, fp, #28
   19f04:	str	r0, [sp, #60]	; 0x3c
   19f08:	ldr	r1, [sp, #60]	; 0x3c
   19f0c:	bl	17b88 <__assert_fail@plt+0x66f4>
   19f10:	sub	r0, fp, #88	; 0x58
   19f14:	sub	r1, fp, #76	; 0x4c
   19f18:	str	r0, [sp, #56]	; 0x38
   19f1c:	ldr	r2, [sp, #56]	; 0x38
   19f20:	bl	176c0 <__assert_fail@plt+0x622c>
   19f24:	sub	r0, fp, #64	; 0x40
   19f28:	sub	r1, fp, #52	; 0x34
   19f2c:	str	r0, [sp, #52]	; 0x34
   19f30:	ldr	r2, [sp, #52]	; 0x34
   19f34:	bl	176c0 <__assert_fail@plt+0x622c>
   19f38:	sub	r0, fp, #28
   19f3c:	bl	198e0 <__assert_fail@plt+0x844c>
   19f40:	sub	r1, fp, #76	; 0x4c
   19f44:	str	r0, [sp, #104]	; 0x68
   19f48:	ldr	r2, [sp, #104]	; 0x68
   19f4c:	mov	r0, r1
   19f50:	bl	17ec4 <__assert_fail@plt+0x6a30>
   19f54:	sub	r0, fp, #52	; 0x34
   19f58:	ldr	r2, [sp, #104]	; 0x68
   19f5c:	str	r0, [sp, #48]	; 0x30
   19f60:	ldr	r1, [sp, #48]	; 0x30
   19f64:	bl	17ec4 <__assert_fail@plt+0x6a30>
   19f68:	ldr	r0, [sp, #104]	; 0x68
   19f6c:	ldr	r1, [fp, #-104]	; 0xffffff98
   19f70:	add	r0, r1, r0
   19f74:	str	r0, [fp, #-104]	; 0xffffff98
   19f78:	b	19e60 <__assert_fail@plt+0x89cc>
   19f7c:	b	19f8c <__assert_fail@plt+0x8af8>
   19f80:	sub	r0, fp, #76	; 0x4c
   19f84:	ldr	r1, [fp, #-92]	; 0xffffffa4
   19f88:	bl	1a224 <__assert_fail@plt+0x8d90>
   19f8c:	sub	r0, fp, #40	; 0x28
   19f90:	ldr	r2, [fp, #-100]	; 0xffffff9c
   19f94:	str	r0, [sp, #44]	; 0x2c
   19f98:	ldr	r1, [sp, #44]	; 0x2c
   19f9c:	bl	17ec4 <__assert_fail@plt+0x6a30>
   19fa0:	sub	r0, fp, #52	; 0x34
   19fa4:	str	r0, [sp, #40]	; 0x28
   19fa8:	ldr	r1, [sp, #40]	; 0x28
   19fac:	bl	175a4 <__assert_fail@plt+0x6110>
   19fb0:	sub	r2, fp, #40	; 0x28
   19fb4:	sub	r0, fp, #64	; 0x40
   19fb8:	ldr	r1, [fp, #8]
   19fbc:	bl	1902c <__assert_fail@plt+0x7b98>
   19fc0:	sub	r0, fp, #64	; 0x40
   19fc4:	str	r0, [sp, #36]	; 0x24
   19fc8:	ldr	r1, [sp, #36]	; 0x24
   19fcc:	bl	1753c <__assert_fail@plt+0x60a8>
   19fd0:	sub	r2, fp, #40	; 0x28
   19fd4:	sub	r0, fp, #88	; 0x58
   19fd8:	ldr	r1, [fp, #-16]
   19fdc:	bl	1902c <__assert_fail@plt+0x7b98>
   19fe0:	sub	r0, fp, #88	; 0x58
   19fe4:	str	r0, [sp, #32]
   19fe8:	ldr	r1, [sp, #32]
   19fec:	bl	1753c <__assert_fail@plt+0x60a8>
   19ff0:	ldr	r0, [fp, #-104]	; 0xffffff98
   19ff4:	mvn	r1, #0
   19ff8:	add	r1, r0, r1
   19ffc:	str	r1, [fp, #-104]	; 0xffffff98
   1a000:	cmp	r0, #0
   1a004:	bls	1a120 <__assert_fail@plt+0x8c8c>
   1a008:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1a00c:	cmp	r0, #0
   1a010:	movw	r0, #0
   1a014:	movne	r0, #1
   1a018:	and	r0, r0, #1
   1a01c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a020:	ldr	r1, [r1]
   1a024:	and	r0, r0, r1
   1a028:	cmp	r0, #0
   1a02c:	bne	1a058 <__assert_fail@plt+0x8bc4>
   1a030:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1a034:	cmp	r0, #0
   1a038:	movw	r0, #0
   1a03c:	movne	r0, #1
   1a040:	and	r0, r0, #1
   1a044:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1a048:	ldr	r1, [r1]
   1a04c:	and	r0, r0, r1
   1a050:	cmp	r0, #0
   1a054:	beq	1a080 <__assert_fail@plt+0x8bec>
   1a058:	sub	r2, fp, #64	; 0x40
   1a05c:	sub	r0, fp, #52	; 0x34
   1a060:	str	r0, [sp, #28]
   1a064:	ldr	r1, [sp, #28]
   1a068:	bl	17b88 <__assert_fail@plt+0x66f4>
   1a06c:	sub	r2, fp, #88	; 0x58
   1a070:	sub	r0, fp, #76	; 0x4c
   1a074:	str	r0, [sp, #24]
   1a078:	ldr	r1, [sp, #24]
   1a07c:	bl	176c0 <__assert_fail@plt+0x622c>
   1a080:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1a084:	cmp	r0, #0
   1a088:	movw	r0, #0
   1a08c:	movne	r0, #1
   1a090:	and	r0, r0, #1
   1a094:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1a098:	ldr	r1, [r1]
   1a09c:	and	r0, r0, r1
   1a0a0:	cmp	r0, #0
   1a0a4:	bne	1a0d4 <__assert_fail@plt+0x8c40>
   1a0a8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1a0ac:	cmp	r0, #0
   1a0b0:	movw	r0, #0
   1a0b4:	movne	r0, #1
   1a0b8:	and	r0, r0, #1
   1a0bc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a0c0:	ldr	r1, [r1]
   1a0c4:	and	r0, r0, r1
   1a0c8:	cmp	r0, #0
   1a0cc:	bne	1a0d4 <__assert_fail@plt+0x8c40>
   1a0d0:	b	1a0f4 <__assert_fail@plt+0x8c60>
   1a0d4:	movw	r0, #18547	; 0x4873
   1a0d8:	movt	r0, #4
   1a0dc:	movw	r1, #17404	; 0x43fc
   1a0e0:	movt	r1, #4
   1a0e4:	movw	r2, #2950	; 0xb86
   1a0e8:	movw	r3, #18582	; 0x4896
   1a0ec:	movt	r3, #4
   1a0f0:	bl	11494 <__assert_fail@plt>
   1a0f4:	sub	r0, fp, #52	; 0x34
   1a0f8:	str	r0, [sp, #20]
   1a0fc:	ldr	r1, [sp, #20]
   1a100:	movw	r2, #1
   1a104:	bl	18bf8 <__assert_fail@plt+0x7764>
   1a108:	sub	r0, fp, #76	; 0x4c
   1a10c:	str	r0, [sp, #16]
   1a110:	ldr	r1, [sp, #16]
   1a114:	movw	r2, #1
   1a118:	bl	18bf8 <__assert_fail@plt+0x7764>
   1a11c:	b	19ff0 <__assert_fail@plt+0x8b5c>
   1a120:	sub	r0, fp, #64	; 0x40
   1a124:	sub	r1, fp, #52	; 0x34
   1a128:	str	r0, [sp, #12]
   1a12c:	ldr	r2, [sp, #12]
   1a130:	bl	176c0 <__assert_fail@plt+0x622c>
   1a134:	sub	r1, fp, #64	; 0x40
   1a138:	sub	r0, fp, #52	; 0x34
   1a13c:	bl	17404 <__assert_fail@plt+0x5f70>
   1a140:	cmp	r0, #0
   1a144:	ble	1a168 <__assert_fail@plt+0x8cd4>
   1a148:	sub	r1, fp, #64	; 0x40
   1a14c:	sub	r0, fp, #52	; 0x34
   1a150:	bl	175e4 <__assert_fail@plt+0x6150>
   1a154:	sub	r2, fp, #88	; 0x58
   1a158:	sub	r0, fp, #76	; 0x4c
   1a15c:	str	r0, [sp, #8]
   1a160:	ldr	r1, [sp, #8]
   1a164:	bl	17b88 <__assert_fail@plt+0x66f4>
   1a168:	ldr	r0, [fp, #-16]
   1a16c:	ldr	r0, [r0, #4]
   1a170:	cmp	r0, #0
   1a174:	bge	1a188 <__assert_fail@plt+0x8cf4>
   1a178:	sub	r0, fp, #52	; 0x34
   1a17c:	str	r0, [sp, #4]
   1a180:	ldr	r1, [sp, #4]
   1a184:	bl	175a4 <__assert_fail@plt+0x6110>
   1a188:	ldr	r0, [fp, #8]
   1a18c:	ldr	r0, [r0, #4]
   1a190:	cmp	r0, #0
   1a194:	bge	1a1a8 <__assert_fail@plt+0x8d14>
   1a198:	sub	r0, fp, #76	; 0x4c
   1a19c:	str	r0, [sp]
   1a1a0:	ldr	r1, [sp]
   1a1a4:	bl	175a4 <__assert_fail@plt+0x6110>
   1a1a8:	sub	r1, fp, #40	; 0x28
   1a1ac:	ldr	r0, [fp, #-4]
   1a1b0:	bl	175e4 <__assert_fail@plt+0x6150>
   1a1b4:	ldr	r0, [fp, #-8]
   1a1b8:	movw	r1, #0
   1a1bc:	cmp	r0, r1
   1a1c0:	beq	1a1d0 <__assert_fail@plt+0x8d3c>
   1a1c4:	sub	r1, fp, #52	; 0x34
   1a1c8:	ldr	r0, [fp, #-8]
   1a1cc:	bl	175e4 <__assert_fail@plt+0x6150>
   1a1d0:	ldr	r0, [fp, #-12]
   1a1d4:	movw	r1, #0
   1a1d8:	cmp	r0, r1
   1a1dc:	beq	1a1ec <__assert_fail@plt+0x8d58>
   1a1e0:	sub	r1, fp, #76	; 0x4c
   1a1e4:	ldr	r0, [fp, #-12]
   1a1e8:	bl	175e4 <__assert_fail@plt+0x6150>
   1a1ec:	sub	r0, fp, #28
   1a1f0:	bl	15f6c <__assert_fail@plt+0x4ad8>
   1a1f4:	sub	r0, fp, #40	; 0x28
   1a1f8:	bl	15f6c <__assert_fail@plt+0x4ad8>
   1a1fc:	sub	r0, fp, #52	; 0x34
   1a200:	bl	15f6c <__assert_fail@plt+0x4ad8>
   1a204:	sub	r0, fp, #64	; 0x40
   1a208:	bl	15f6c <__assert_fail@plt+0x4ad8>
   1a20c:	sub	r0, fp, #76	; 0x4c
   1a210:	bl	15f6c <__assert_fail@plt+0x4ad8>
   1a214:	sub	r0, fp, #88	; 0x58
   1a218:	bl	15f6c <__assert_fail@plt+0x4ad8>
   1a21c:	mov	sp, fp
   1a220:	pop	{fp, pc}
   1a224:	push	{fp, lr}
   1a228:	mov	fp, sp
   1a22c:	sub	sp, sp, #8
   1a230:	str	r0, [sp, #4]
   1a234:	str	r1, [sp]
   1a238:	ldr	r0, [sp, #4]
   1a23c:	ldr	r1, [sp]
   1a240:	bl	1c064 <__assert_fail@plt+0xabd0>
   1a244:	cmp	r0, #0
   1a248:	bne	1a27c <__assert_fail@plt+0x8de8>
   1a24c:	ldr	r0, [sp, #4]
   1a250:	ldr	r0, [r0, #4]
   1a254:	cmp	r0, #0
   1a258:	blt	1a26c <__assert_fail@plt+0x8dd8>
   1a25c:	ldr	r0, [sp, #4]
   1a260:	ldr	r1, [sp]
   1a264:	bl	1c1c4 <__assert_fail@plt+0xad30>
   1a268:	b	1a278 <__assert_fail@plt+0x8de4>
   1a26c:	ldr	r0, [sp, #4]
   1a270:	ldr	r1, [sp]
   1a274:	bl	1c3d8 <__assert_fail@plt+0xaf44>
   1a278:	b	1a27c <__assert_fail@plt+0x8de8>
   1a27c:	mov	sp, fp
   1a280:	pop	{fp, pc}
   1a284:	push	{fp, lr}
   1a288:	mov	fp, sp
   1a28c:	sub	sp, sp, #32
   1a290:	str	r0, [fp, #-4]
   1a294:	str	r1, [fp, #-8]
   1a298:	str	r2, [fp, #-12]
   1a29c:	ldr	r0, [fp, #-8]
   1a2a0:	ldr	r0, [r0, #4]
   1a2a4:	cmp	r0, #0
   1a2a8:	beq	1a2bc <__assert_fail@plt+0x8e28>
   1a2ac:	ldr	r0, [fp, #-12]
   1a2b0:	ldr	r0, [r0, #4]
   1a2b4:	cmp	r0, #0
   1a2b8:	bne	1a2cc <__assert_fail@plt+0x8e38>
   1a2bc:	ldr	r0, [fp, #-4]
   1a2c0:	movw	r1, #0
   1a2c4:	str	r1, [r0, #4]
   1a2c8:	b	1a31c <__assert_fail@plt+0x8e88>
   1a2cc:	add	r0, sp, #8
   1a2d0:	bl	15e94 <__assert_fail@plt+0x4a00>
   1a2d4:	add	r0, sp, #8
   1a2d8:	ldr	r1, [fp, #-8]
   1a2dc:	ldr	r2, [fp, #-12]
   1a2e0:	bl	1968c <__assert_fail@plt+0x81f8>
   1a2e4:	add	r0, sp, #8
   1a2e8:	ldr	r1, [fp, #-8]
   1a2ec:	str	r0, [sp, #4]
   1a2f0:	ldr	r2, [sp, #4]
   1a2f4:	bl	1902c <__assert_fail@plt+0x7b98>
   1a2f8:	add	r1, sp, #8
   1a2fc:	ldr	r0, [fp, #-4]
   1a300:	ldr	r2, [fp, #-12]
   1a304:	bl	17cdc <__assert_fail@plt+0x6848>
   1a308:	add	r0, sp, #8
   1a30c:	bl	15f6c <__assert_fail@plt+0x4ad8>
   1a310:	ldr	r0, [fp, #-4]
   1a314:	ldr	r1, [fp, #-4]
   1a318:	bl	1753c <__assert_fail@plt+0x60a8>
   1a31c:	mov	sp, fp
   1a320:	pop	{fp, pc}
   1a324:	push	{fp, lr}
   1a328:	mov	fp, sp
   1a32c:	sub	sp, sp, #16
   1a330:	str	r0, [fp, #-4]
   1a334:	str	r1, [sp, #8]
   1a338:	str	r2, [sp, #4]
   1a33c:	ldr	r0, [sp, #4]
   1a340:	cmp	r0, #0
   1a344:	beq	1a358 <__assert_fail@plt+0x8ec4>
   1a348:	ldr	r0, [sp, #8]
   1a34c:	ldr	r0, [r0, #4]
   1a350:	cmp	r0, #0
   1a354:	bne	1a368 <__assert_fail@plt+0x8ed4>
   1a358:	ldr	r0, [fp, #-4]
   1a35c:	movw	r1, #0
   1a360:	str	r1, [r0, #4]
   1a364:	b	1a3a0 <__assert_fail@plt+0x8f0c>
   1a368:	ldr	r1, [sp, #8]
   1a36c:	ldr	r2, [sp, #4]
   1a370:	movw	r0, #0
   1a374:	bl	19608 <__assert_fail@plt+0x8174>
   1a378:	ldr	r1, [sp, #4]
   1a37c:	udiv	r0, r1, r0
   1a380:	str	r0, [sp, #4]
   1a384:	ldr	r0, [fp, #-4]
   1a388:	ldr	r1, [sp, #8]
   1a38c:	ldr	r2, [sp, #4]
   1a390:	bl	17c94 <__assert_fail@plt+0x6800>
   1a394:	ldr	r0, [fp, #-4]
   1a398:	ldr	r1, [fp, #-4]
   1a39c:	bl	1753c <__assert_fail@plt+0x60a8>
   1a3a0:	mov	sp, fp
   1a3a4:	pop	{fp, pc}
   1a3a8:	push	{fp, lr}
   1a3ac:	mov	fp, sp
   1a3b0:	sub	sp, sp, #56	; 0x38
   1a3b4:	str	r0, [fp, #-8]
   1a3b8:	str	r1, [fp, #-12]
   1a3bc:	str	r2, [fp, #-16]
   1a3c0:	ldr	r0, [fp, #-12]
   1a3c4:	ldr	r0, [r0, #4]
   1a3c8:	cmp	r0, #0
   1a3cc:	beq	1a3e4 <__assert_fail@plt+0x8f50>
   1a3d0:	ldr	r0, [fp, #-16]
   1a3d4:	movw	r1, #1
   1a3d8:	bl	165e8 <__assert_fail@plt+0x5154>
   1a3dc:	cmp	r0, #0
   1a3e0:	bgt	1a3f0 <__assert_fail@plt+0x8f5c>
   1a3e4:	movw	r0, #0
   1a3e8:	str	r0, [fp, #-4]
   1a3ec:	b	1a4b8 <__assert_fail@plt+0x9024>
   1a3f0:	add	r0, sp, #28
   1a3f4:	bl	15e94 <__assert_fail@plt+0x4a00>
   1a3f8:	add	r0, sp, #16
   1a3fc:	bl	15e94 <__assert_fail@plt+0x4a00>
   1a400:	add	r1, sp, #16
   1a404:	add	r0, sp, #28
   1a408:	ldr	r3, [fp, #-12]
   1a40c:	ldr	lr, [fp, #-16]
   1a410:	movw	r2, #0
   1a414:	str	lr, [sp]
   1a418:	bl	19bbc <__assert_fail@plt+0x8728>
   1a41c:	add	r0, sp, #28
   1a420:	movw	r1, #1
   1a424:	bl	172f0 <__assert_fail@plt+0x5e5c>
   1a428:	cmp	r0, #0
   1a42c:	movw	r0, #0
   1a430:	moveq	r0, #1
   1a434:	and	r0, r0, #1
   1a438:	str	r0, [sp, #12]
   1a43c:	ldr	r0, [sp, #12]
   1a440:	cmp	r0, #0
   1a444:	beq	1a4a0 <__assert_fail@plt+0x900c>
   1a448:	ldr	r0, [sp, #20]
   1a44c:	cmp	r0, #0
   1a450:	bge	1a494 <__assert_fail@plt+0x9000>
   1a454:	ldr	r0, [fp, #-16]
   1a458:	ldr	r0, [r0, #4]
   1a45c:	cmp	r0, #0
   1a460:	blt	1a47c <__assert_fail@plt+0x8fe8>
   1a464:	add	r0, sp, #16
   1a468:	ldr	r2, [fp, #-16]
   1a46c:	str	r0, [sp, #8]
   1a470:	ldr	r1, [sp, #8]
   1a474:	bl	176c0 <__assert_fail@plt+0x622c>
   1a478:	b	1a490 <__assert_fail@plt+0x8ffc>
   1a47c:	add	r0, sp, #16
   1a480:	ldr	r2, [fp, #-16]
   1a484:	str	r0, [sp, #4]
   1a488:	ldr	r1, [sp, #4]
   1a48c:	bl	17b88 <__assert_fail@plt+0x66f4>
   1a490:	b	1a494 <__assert_fail@plt+0x9000>
   1a494:	add	r1, sp, #16
   1a498:	ldr	r0, [fp, #-8]
   1a49c:	bl	175e4 <__assert_fail@plt+0x6150>
   1a4a0:	add	r0, sp, #28
   1a4a4:	bl	15f6c <__assert_fail@plt+0x4ad8>
   1a4a8:	add	r0, sp, #16
   1a4ac:	bl	15f6c <__assert_fail@plt+0x4ad8>
   1a4b0:	ldr	r0, [sp, #12]
   1a4b4:	str	r0, [fp, #-4]
   1a4b8:	ldr	r0, [fp, #-4]
   1a4bc:	mov	sp, fp
   1a4c0:	pop	{fp, pc}
   1a4c4:	push	{fp, lr}
   1a4c8:	mov	fp, sp
   1a4cc:	sub	sp, sp, #40	; 0x28
   1a4d0:	add	r3, sp, #12
   1a4d4:	str	r0, [fp, #-4]
   1a4d8:	str	r1, [fp, #-8]
   1a4dc:	str	r2, [fp, #-12]
   1a4e0:	mov	r0, r3
   1a4e4:	movw	r1, #1
   1a4e8:	bl	162fc <__assert_fail@plt+0x4e68>
   1a4ec:	ldr	r0, [pc, #112]	; 1a564 <__assert_fail@plt+0x90d0>
   1a4f0:	str	r0, [fp, #-16]
   1a4f4:	add	r0, sp, #12
   1a4f8:	str	r0, [sp, #8]
   1a4fc:	ldr	r1, [sp, #8]
   1a500:	ldr	r2, [sp, #8]
   1a504:	bl	17cdc <__assert_fail@plt+0x6848>
   1a508:	ldr	r0, [fp, #-12]
   1a50c:	ldr	r1, [fp, #-16]
   1a510:	and	r0, r0, r1
   1a514:	cmp	r0, #0
   1a518:	beq	1a530 <__assert_fail@plt+0x909c>
   1a51c:	add	r0, sp, #12
   1a520:	ldr	r2, [fp, #-8]
   1a524:	str	r0, [sp, #4]
   1a528:	ldr	r1, [sp, #4]
   1a52c:	bl	17cdc <__assert_fail@plt+0x6848>
   1a530:	ldr	r0, [fp, #-16]
   1a534:	lsr	r0, r0, #1
   1a538:	str	r0, [fp, #-16]
   1a53c:	ldr	r0, [fp, #-16]
   1a540:	cmp	r0, #0
   1a544:	bhi	1a4f4 <__assert_fail@plt+0x9060>
   1a548:	add	r1, sp, #12
   1a54c:	ldr	r0, [fp, #-4]
   1a550:	bl	175e4 <__assert_fail@plt+0x6150>
   1a554:	add	r0, sp, #12
   1a558:	bl	15f6c <__assert_fail@plt+0x4ad8>
   1a55c:	mov	sp, fp
   1a560:	pop	{fp, pc}
   1a564:	andhi	r0, r0, r0
   1a568:	push	{fp, lr}
   1a56c:	mov	fp, sp
   1a570:	sub	sp, sp, #24
   1a574:	mov	r3, sp
   1a578:	str	r0, [fp, #-4]
   1a57c:	str	r1, [fp, #-8]
   1a580:	str	r2, [sp, #12]
   1a584:	ldr	r1, [fp, #-8]
   1a588:	mov	r0, r3
   1a58c:	bl	162fc <__assert_fail@plt+0x4e68>
   1a590:	mov	r1, sp
   1a594:	ldr	r0, [fp, #-4]
   1a598:	ldr	r2, [sp, #12]
   1a59c:	bl	1a4c4 <__assert_fail@plt+0x9030>
   1a5a0:	mov	r0, sp
   1a5a4:	bl	15f6c <__assert_fail@plt+0x4ad8>
   1a5a8:	mov	sp, fp
   1a5ac:	pop	{fp, pc}
   1a5b0:	push	{fp, lr}
   1a5b4:	mov	fp, sp
   1a5b8:	sub	sp, sp, #144	; 0x90
   1a5bc:	str	r0, [fp, #-4]
   1a5c0:	str	r1, [fp, #-8]
   1a5c4:	str	r2, [fp, #-12]
   1a5c8:	str	r3, [fp, #-16]
   1a5cc:	movw	r0, #0
   1a5d0:	str	r0, [sp, #68]	; 0x44
   1a5d4:	ldr	r0, [fp, #-12]
   1a5d8:	ldr	r0, [r0, #4]
   1a5dc:	cmp	r0, #0
   1a5e0:	blt	1a5f4 <__assert_fail@plt+0x9160>
   1a5e4:	ldr	r0, [fp, #-12]
   1a5e8:	ldr	r0, [r0, #4]
   1a5ec:	str	r0, [sp, #40]	; 0x28
   1a5f0:	b	1a608 <__assert_fail@plt+0x9174>
   1a5f4:	ldr	r0, [fp, #-12]
   1a5f8:	ldr	r0, [r0, #4]
   1a5fc:	movw	r1, #0
   1a600:	sub	r0, r1, r0
   1a604:	str	r0, [sp, #40]	; 0x28
   1a608:	ldr	r0, [sp, #40]	; 0x28
   1a60c:	str	r0, [fp, #-44]	; 0xffffffd4
   1a610:	ldr	r0, [fp, #-16]
   1a614:	ldr	r0, [r0, #4]
   1a618:	cmp	r0, #0
   1a61c:	blt	1a630 <__assert_fail@plt+0x919c>
   1a620:	ldr	r0, [fp, #-16]
   1a624:	ldr	r0, [r0, #4]
   1a628:	str	r0, [sp, #36]	; 0x24
   1a62c:	b	1a644 <__assert_fail@plt+0x91b0>
   1a630:	ldr	r0, [fp, #-16]
   1a634:	ldr	r0, [r0, #4]
   1a638:	movw	r1, #0
   1a63c:	sub	r0, r1, r0
   1a640:	str	r0, [sp, #36]	; 0x24
   1a644:	ldr	r0, [sp, #36]	; 0x24
   1a648:	str	r0, [fp, #-48]	; 0xffffffd0
   1a64c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1a650:	cmp	r0, #0
   1a654:	bne	1a664 <__assert_fail@plt+0x91d0>
   1a658:	movw	r0, #18690	; 0x4902
   1a65c:	movt	r0, #4
   1a660:	bl	1a9ec <__assert_fail@plt+0x9558>
   1a664:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a668:	cmp	r0, #0
   1a66c:	bne	1a680 <__assert_fail@plt+0x91ec>
   1a670:	ldr	r0, [fp, #-4]
   1a674:	movw	r1, #1
   1a678:	bl	1608c <__assert_fail@plt+0x4bf8>
   1a67c:	b	1a9e0 <__assert_fail@plt+0x954c>
   1a680:	ldr	r0, [fp, #-16]
   1a684:	ldr	r0, [r0, #8]
   1a688:	str	r0, [fp, #-52]	; 0xffffffcc
   1a68c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1a690:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1a694:	sub	r0, fp, #68	; 0x44
   1a698:	bl	1aa20 <__assert_fail@plt+0x958c>
   1a69c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1a6a0:	str	r0, [sp, #72]	; 0x48
   1a6a4:	ldr	r0, [sp, #72]	; 0x48
   1a6a8:	cmp	r0, #0
   1a6ac:	bls	1a718 <__assert_fail@plt+0x9284>
   1a6b0:	movw	r0, #0
   1a6b4:	str	r0, [fp, #-68]	; 0xffffffbc
   1a6b8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1a6bc:	bl	15f30 <__assert_fail@plt+0x4a9c>
   1a6c0:	str	r0, [sp, #68]	; 0x44
   1a6c4:	ldr	r0, [sp, #68]	; 0x44
   1a6c8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1a6cc:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1a6d0:	ldr	r3, [sp, #72]	; 0x48
   1a6d4:	bl	149f8 <__assert_fail@plt+0x3564>
   1a6d8:	str	r0, [sp, #64]	; 0x40
   1a6dc:	ldr	r0, [sp, #64]	; 0x40
   1a6e0:	cmp	r0, #0
   1a6e4:	bne	1a6ec <__assert_fail@plt+0x9258>
   1a6e8:	b	1a70c <__assert_fail@plt+0x9278>
   1a6ec:	movw	r0, #18385	; 0x47d1
   1a6f0:	movt	r0, #4
   1a6f4:	movw	r1, #17404	; 0x43fc
   1a6f8:	movt	r1, #4
   1a6fc:	movw	r2, #3116	; 0xc2c
   1a700:	movw	r3, #18713	; 0x4919
   1a704:	movt	r3, #4
   1a708:	bl	11494 <__assert_fail@plt>
   1a70c:	b	1a710 <__assert_fail@plt+0x927c>
   1a710:	ldr	r0, [sp, #68]	; 0x44
   1a714:	str	r0, [fp, #-52]	; 0xffffffcc
   1a718:	sub	r0, fp, #40	; 0x28
   1a71c:	bl	15e94 <__assert_fail@plt+0x4a00>
   1a720:	ldr	r0, [fp, #-12]
   1a724:	ldr	r0, [r0, #4]
   1a728:	cmp	r0, #0
   1a72c:	bge	1a758 <__assert_fail@plt+0x92c4>
   1a730:	sub	r0, fp, #40	; 0x28
   1a734:	ldr	r1, [fp, #-8]
   1a738:	ldr	r2, [fp, #-16]
   1a73c:	bl	1a3a8 <__assert_fail@plt+0x8f14>
   1a740:	cmp	r0, #0
   1a744:	bne	1a754 <__assert_fail@plt+0x92c0>
   1a748:	movw	r0, #18809	; 0x4979
   1a74c:	movt	r0, #4
   1a750:	bl	1a9ec <__assert_fail@plt+0x9558>
   1a754:	b	1a864 <__assert_fail@plt+0x93d0>
   1a758:	sub	r0, fp, #40	; 0x28
   1a75c:	ldr	r1, [fp, #-8]
   1a760:	bl	1753c <__assert_fail@plt+0x60a8>
   1a764:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a768:	str	r0, [sp, #60]	; 0x3c
   1a76c:	ldr	r0, [sp, #60]	; 0x3c
   1a770:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1a774:	cmp	r0, r1
   1a778:	blt	1a7b4 <__assert_fail@plt+0x9320>
   1a77c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1a780:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1a784:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1a788:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1a78c:	movw	ip, #0
   1a790:	str	r0, [sp, #32]
   1a794:	mov	r0, ip
   1a798:	ldr	ip, [sp, #32]
   1a79c:	str	ip, [sp]
   1a7a0:	sub	lr, fp, #68	; 0x44
   1a7a4:	str	lr, [sp, #4]
   1a7a8:	bl	1ac4c <__assert_fail@plt+0x97b8>
   1a7ac:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1a7b0:	str	r0, [sp, #60]	; 0x3c
   1a7b4:	ldr	r0, [fp, #-8]
   1a7b8:	ldr	r0, [r0, #4]
   1a7bc:	cmp	r0, #0
   1a7c0:	bge	1a854 <__assert_fail@plt+0x93c0>
   1a7c4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1a7c8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a7cc:	cmp	r0, r1
   1a7d0:	ble	1a7e8 <__assert_fail@plt+0x9354>
   1a7d4:	sub	r0, fp, #40	; 0x28
   1a7d8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1a7dc:	bl	16114 <__assert_fail@plt+0x4c80>
   1a7e0:	str	r0, [sp, #28]
   1a7e4:	b	1a7f0 <__assert_fail@plt+0x935c>
   1a7e8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a7ec:	str	r0, [sp, #28]
   1a7f0:	ldr	r0, [sp, #28]
   1a7f4:	str	r0, [sp, #56]	; 0x38
   1a7f8:	ldr	r0, [sp, #56]	; 0x38
   1a7fc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1a800:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1a804:	ldr	r3, [sp, #56]	; 0x38
   1a808:	ldr	ip, [sp, #60]	; 0x3c
   1a80c:	str	ip, [sp]
   1a810:	bl	140f0 <__assert_fail@plt+0x2c5c>
   1a814:	str	r0, [sp, #52]	; 0x34
   1a818:	ldr	r0, [sp, #52]	; 0x34
   1a81c:	cmp	r0, #0
   1a820:	bne	1a828 <__assert_fail@plt+0x9394>
   1a824:	b	1a848 <__assert_fail@plt+0x93b4>
   1a828:	movw	r0, #18385	; 0x47d1
   1a82c:	movt	r0, #4
   1a830:	movw	r1, #17404	; 0x43fc
   1a834:	movt	r1, #4
   1a838:	movw	r2, #3145	; 0xc49
   1a83c:	movw	r3, #18713	; 0x4919
   1a840:	movt	r3, #4
   1a844:	bl	11494 <__assert_fail@plt>
   1a848:	b	1a84c <__assert_fail@plt+0x93b8>
   1a84c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1a850:	str	r0, [sp, #60]	; 0x3c
   1a854:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a858:	ldr	r1, [sp, #60]	; 0x3c
   1a85c:	bl	13c64 <__assert_fail@plt+0x27d0>
   1a860:	str	r0, [fp, #-36]	; 0xffffffdc
   1a864:	sub	r0, fp, #28
   1a868:	movw	r1, #1
   1a86c:	bl	162fc <__assert_fail@plt+0x4e68>
   1a870:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a874:	mvn	r1, #0
   1a878:	add	r0, r0, r1
   1a87c:	str	r0, [fp, #-44]	; 0xffffffd4
   1a880:	cmp	r0, #0
   1a884:	blt	1a950 <__assert_fail@plt+0x94bc>
   1a888:	ldr	r0, [pc, #344]	; 1a9e8 <__assert_fail@plt+0x9554>
   1a88c:	ldr	r1, [fp, #-12]
   1a890:	ldr	r1, [r1, #8]
   1a894:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1a898:	add	r1, r1, r2, lsl #2
   1a89c:	ldr	r1, [r1]
   1a8a0:	str	r1, [sp, #48]	; 0x30
   1a8a4:	str	r0, [sp, #44]	; 0x2c
   1a8a8:	sub	r0, fp, #28
   1a8ac:	str	r0, [sp, #24]
   1a8b0:	ldr	r1, [sp, #24]
   1a8b4:	ldr	r2, [sp, #24]
   1a8b8:	bl	17cdc <__assert_fail@plt+0x6848>
   1a8bc:	ldr	r0, [sp, #48]	; 0x30
   1a8c0:	ldr	r1, [sp, #44]	; 0x2c
   1a8c4:	and	r0, r0, r1
   1a8c8:	cmp	r0, #0
   1a8cc:	beq	1a8e4 <__assert_fail@plt+0x9450>
   1a8d0:	sub	r2, fp, #40	; 0x28
   1a8d4:	sub	r0, fp, #28
   1a8d8:	str	r0, [sp, #20]
   1a8dc:	ldr	r1, [sp, #20]
   1a8e0:	bl	17cdc <__assert_fail@plt+0x6848>
   1a8e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a8e8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1a8ec:	cmp	r0, r1
   1a8f0:	ble	1a934 <__assert_fail@plt+0x94a0>
   1a8f4:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a8f8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a8fc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1a900:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1a904:	movw	ip, #0
   1a908:	str	r0, [sp, #16]
   1a90c:	mov	r0, ip
   1a910:	ldr	ip, [sp, #16]
   1a914:	str	ip, [sp]
   1a918:	sub	lr, fp, #68	; 0x44
   1a91c:	str	lr, [sp, #4]
   1a920:	bl	1ac4c <__assert_fail@plt+0x97b8>
   1a924:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a928:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1a92c:	bl	13c64 <__assert_fail@plt+0x27d0>
   1a930:	str	r0, [fp, #-24]	; 0xffffffe8
   1a934:	ldr	r0, [sp, #44]	; 0x2c
   1a938:	lsr	r0, r0, #1
   1a93c:	str	r0, [sp, #44]	; 0x2c
   1a940:	ldr	r0, [sp, #44]	; 0x2c
   1a944:	cmp	r0, #0
   1a948:	bhi	1a8a8 <__assert_fail@plt+0x9414>
   1a94c:	b	1a870 <__assert_fail@plt+0x93dc>
   1a950:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a954:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1a958:	cmp	r0, r1
   1a95c:	blt	1a9a8 <__assert_fail@plt+0x9514>
   1a960:	ldr	r0, [sp, #72]	; 0x48
   1a964:	str	r0, [fp, #-68]	; 0xffffffbc
   1a968:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a96c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a970:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1a974:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1a978:	movw	ip, #0
   1a97c:	str	r0, [sp, #12]
   1a980:	mov	r0, ip
   1a984:	ldr	ip, [sp, #12]
   1a988:	str	ip, [sp]
   1a98c:	sub	lr, fp, #68	; 0x44
   1a990:	str	lr, [sp, #4]
   1a994:	bl	1ac4c <__assert_fail@plt+0x97b8>
   1a998:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a99c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1a9a0:	bl	13c64 <__assert_fail@plt+0x27d0>
   1a9a4:	str	r0, [fp, #-24]	; 0xffffffe8
   1a9a8:	ldr	r0, [sp, #68]	; 0x44
   1a9ac:	movw	r1, #0
   1a9b0:	cmp	r0, r1
   1a9b4:	beq	1a9c4 <__assert_fail@plt+0x9530>
   1a9b8:	ldr	r0, [sp, #68]	; 0x44
   1a9bc:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1a9c0:	bl	15fa8 <__assert_fail@plt+0x4b14>
   1a9c4:	sub	r1, fp, #28
   1a9c8:	ldr	r0, [fp, #-4]
   1a9cc:	bl	175e4 <__assert_fail@plt+0x6150>
   1a9d0:	sub	r0, fp, #28
   1a9d4:	bl	15f6c <__assert_fail@plt+0x4ad8>
   1a9d8:	sub	r0, fp, #40	; 0x28
   1a9dc:	bl	15f6c <__assert_fail@plt+0x4ad8>
   1a9e0:	mov	sp, fp
   1a9e4:	pop	{fp, pc}
   1a9e8:	andhi	r0, r0, r0
   1a9ec:	push	{fp, lr}
   1a9f0:	mov	fp, sp
   1a9f4:	sub	sp, sp, #8
   1a9f8:	str	r0, [sp, #4]
   1a9fc:	movw	r0, #24968	; 0x6188
   1aa00:	movt	r0, #5
   1aa04:	ldr	r0, [r0]
   1aa08:	ldr	r2, [sp, #4]
   1aa0c:	movw	r1, #23303	; 0x5b07
   1aa10:	movt	r1, #4
   1aa14:	bl	113a4 <fprintf@plt>
   1aa18:	str	r0, [sp]
   1aa1c:	bl	1147c <abort@plt>
   1aa20:	push	{fp, lr}
   1aa24:	mov	fp, sp
   1aa28:	sub	sp, sp, #40	; 0x28
   1aa2c:	str	r0, [fp, #-4]
   1aa30:	str	r1, [fp, #-8]
   1aa34:	str	r2, [fp, #-12]
   1aa38:	ldr	r0, [fp, #-12]
   1aa3c:	cmp	r0, #0
   1aa40:	ble	1aa48 <__assert_fail@plt+0x95b4>
   1aa44:	b	1aa68 <__assert_fail@plt+0x95d4>
   1aa48:	movw	r0, #20784	; 0x5130
   1aa4c:	movt	r0, #4
   1aa50:	movw	r1, #17404	; 0x43fc
   1aa54:	movt	r1, #4
   1aa58:	movw	r2, #932	; 0x3a4
   1aa5c:	movw	r3, #21073	; 0x5251
   1aa60:	movt	r3, #4
   1aa64:	bl	11494 <__assert_fail@plt>
   1aa68:	ldr	r0, [fp, #-12]
   1aa6c:	cmp	r0, #1
   1aa70:	bne	1aa88 <__assert_fail@plt+0x95f4>
   1aa74:	ldr	r0, [fp, #-4]
   1aa78:	ldr	r1, [fp, #-8]
   1aa7c:	ldr	r1, [r1]
   1aa80:	bl	1da78 <__assert_fail@plt+0xc5e4>
   1aa84:	b	1ac44 <__assert_fail@plt+0x97b0>
   1aa88:	ldr	r0, [fp, #-12]
   1aa8c:	cmp	r0, #2
   1aa90:	bne	1aab0 <__assert_fail@plt+0x961c>
   1aa94:	ldr	r0, [fp, #-4]
   1aa98:	ldr	r1, [fp, #-8]
   1aa9c:	ldr	r1, [r1, #4]
   1aaa0:	ldr	r2, [fp, #-8]
   1aaa4:	ldr	r2, [r2]
   1aaa8:	bl	1f584 <__assert_fail@plt+0xe0f0>
   1aaac:	b	1ac40 <__assert_fail@plt+0x97ac>
   1aab0:	ldr	r0, [fp, #-8]
   1aab4:	ldr	r1, [fp, #-12]
   1aab8:	add	r0, r0, r1, lsl #2
   1aabc:	ldr	r0, [r0, #-4]
   1aac0:	str	r0, [sp, #20]
   1aac4:	ldr	r0, [fp, #-8]
   1aac8:	ldr	r1, [fp, #-12]
   1aacc:	sub	r1, r1, #2
   1aad0:	add	r0, r0, r1, lsl #2
   1aad4:	ldr	r0, [r0]
   1aad8:	str	r0, [sp, #16]
   1aadc:	ldr	r0, [sp, #20]
   1aae0:	cmp	r0, #0
   1aae4:	bls	1aaec <__assert_fail@plt+0x9658>
   1aae8:	b	1ab0c <__assert_fail@plt+0x9678>
   1aaec:	movw	r0, #21144	; 0x5298
   1aaf0:	movt	r0, #4
   1aaf4:	movw	r1, #17404	; 0x43fc
   1aaf8:	movt	r1, #4
   1aafc:	movw	r2, #945	; 0x3b1
   1ab00:	movw	r3, #21073	; 0x5251
   1ab04:	movt	r3, #4
   1ab08:	bl	11494 <__assert_fail@plt>
   1ab0c:	b	1ab10 <__assert_fail@plt+0x967c>
   1ab10:	ldr	r0, [sp, #20]
   1ab14:	str	r0, [sp, #12]
   1ab18:	movw	r0, #0
   1ab1c:	str	r0, [sp, #8]
   1ab20:	movw	r0, #8
   1ab24:	str	r0, [sp, #4]
   1ab28:	ldr	r0, [sp, #4]
   1ab2c:	movw	r1, #32
   1ab30:	cmp	r1, r0
   1ab34:	bls	1ab70 <__assert_fail@plt+0x96dc>
   1ab38:	b	1ab3c <__assert_fail@plt+0x96a8>
   1ab3c:	ldr	r0, [sp, #12]
   1ab40:	and	r0, r0, #-16777216	; 0xff000000
   1ab44:	cmp	r0, #0
   1ab48:	bne	1ab6c <__assert_fail@plt+0x96d8>
   1ab4c:	ldr	r0, [sp, #4]
   1ab50:	ldr	r1, [sp, #12]
   1ab54:	lsl	r0, r1, r0
   1ab58:	str	r0, [sp, #12]
   1ab5c:	ldr	r0, [sp, #8]
   1ab60:	add	r0, r0, #8
   1ab64:	str	r0, [sp, #8]
   1ab68:	b	1ab3c <__assert_fail@plt+0x96a8>
   1ab6c:	b	1ab70 <__assert_fail@plt+0x96dc>
   1ab70:	b	1ab74 <__assert_fail@plt+0x96e0>
   1ab74:	ldr	r0, [sp, #12]
   1ab78:	and	r0, r0, #-2147483648	; 0x80000000
   1ab7c:	cmp	r0, #0
   1ab80:	bne	1aba0 <__assert_fail@plt+0x970c>
   1ab84:	ldr	r0, [sp, #12]
   1ab88:	lsl	r0, r0, #1
   1ab8c:	str	r0, [sp, #12]
   1ab90:	ldr	r0, [sp, #8]
   1ab94:	add	r0, r0, #1
   1ab98:	str	r0, [sp, #8]
   1ab9c:	b	1ab74 <__assert_fail@plt+0x96e0>
   1aba0:	ldr	r0, [sp, #8]
   1aba4:	str	r0, [fp, #-16]
   1aba8:	ldr	r0, [fp, #-16]
   1abac:	ldr	r1, [fp, #-4]
   1abb0:	str	r0, [r1]
   1abb4:	ldr	r0, [fp, #-16]
   1abb8:	cmp	r0, #0
   1abbc:	bls	1ac14 <__assert_fail@plt+0x9780>
   1abc0:	ldr	r0, [sp, #20]
   1abc4:	ldr	r1, [fp, #-16]
   1abc8:	lsl	r0, r0, r1
   1abcc:	ldr	r2, [sp, #16]
   1abd0:	rsb	r1, r1, #32
   1abd4:	orr	r0, r0, r2, lsr r1
   1abd8:	str	r0, [sp, #20]
   1abdc:	ldr	r0, [sp, #16]
   1abe0:	ldr	r1, [fp, #-16]
   1abe4:	lsl	r0, r0, r1
   1abe8:	ldr	r1, [fp, #-8]
   1abec:	ldr	r2, [fp, #-12]
   1abf0:	sub	r2, r2, #3
   1abf4:	add	r1, r1, r2, lsl #2
   1abf8:	ldr	r1, [r1]
   1abfc:	ldr	r2, [fp, #-16]
   1ac00:	movw	r3, #32
   1ac04:	sub	r2, r3, r2
   1ac08:	lsr	r1, r1, r2
   1ac0c:	orr	r0, r0, r1
   1ac10:	str	r0, [sp, #16]
   1ac14:	ldr	r0, [sp, #20]
   1ac18:	ldr	r1, [fp, #-4]
   1ac1c:	str	r0, [r1, #4]
   1ac20:	ldr	r0, [sp, #16]
   1ac24:	ldr	r1, [fp, #-4]
   1ac28:	str	r0, [r1, #8]
   1ac2c:	ldr	r0, [sp, #20]
   1ac30:	ldr	r1, [sp, #16]
   1ac34:	bl	15120 <__assert_fail@plt+0x3c8c>
   1ac38:	ldr	r1, [fp, #-4]
   1ac3c:	str	r0, [r1, #12]
   1ac40:	b	1ac44 <__assert_fail@plt+0x97b0>
   1ac44:	mov	sp, fp
   1ac48:	pop	{fp, pc}
   1ac4c:	push	{r4, sl, fp, lr}
   1ac50:	add	fp, sp, #8
   1ac54:	sub	sp, sp, #48	; 0x30
   1ac58:	ldr	ip, [fp, #12]
   1ac5c:	ldr	lr, [fp, #8]
   1ac60:	str	r0, [fp, #-12]
   1ac64:	str	r1, [fp, #-16]
   1ac68:	str	r2, [fp, #-20]	; 0xffffffec
   1ac6c:	str	r3, [fp, #-24]	; 0xffffffe8
   1ac70:	ldr	r0, [fp, #8]
   1ac74:	cmp	r0, #0
   1ac78:	str	lr, [sp, #16]
   1ac7c:	str	ip, [sp, #12]
   1ac80:	ble	1ac88 <__assert_fail@plt+0x97f4>
   1ac84:	b	1aca8 <__assert_fail@plt+0x9814>
   1ac88:	movw	r0, #20784	; 0x5130
   1ac8c:	movt	r0, #4
   1ac90:	movw	r1, #17404	; 0x43fc
   1ac94:	movt	r1, #4
   1ac98:	movw	r2, #1113	; 0x459
   1ac9c:	movw	r3, #21224	; 0x52e8
   1aca0:	movt	r3, #4
   1aca4:	bl	11494 <__assert_fail@plt>
   1aca8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1acac:	ldr	r1, [fp, #8]
   1acb0:	cmp	r0, r1
   1acb4:	blt	1acbc <__assert_fail@plt+0x9828>
   1acb8:	b	1acdc <__assert_fail@plt+0x9848>
   1acbc:	movw	r0, #20856	; 0x5178
   1acc0:	movt	r0, #4
   1acc4:	movw	r1, #17404	; 0x43fc
   1acc8:	movt	r1, #4
   1accc:	movw	r2, #1114	; 0x45a
   1acd0:	movw	r3, #21224	; 0x52e8
   1acd4:	movt	r3, #4
   1acd8:	bl	11494 <__assert_fail@plt>
   1acdc:	ldr	r0, [fp, #8]
   1ace0:	cmp	r0, #1
   1ace4:	bne	1ad08 <__assert_fail@plt+0x9874>
   1ace8:	ldr	r0, [fp, #-12]
   1acec:	ldr	r1, [fp, #-16]
   1acf0:	ldr	r2, [fp, #-20]	; 0xffffffec
   1acf4:	ldr	r3, [fp, #12]
   1acf8:	bl	1db98 <__assert_fail@plt+0xc704>
   1acfc:	ldr	r1, [fp, #-16]
   1ad00:	str	r0, [r1]
   1ad04:	b	1aec8 <__assert_fail@plt+0x9a34>
   1ad08:	ldr	r0, [fp, #8]
   1ad0c:	cmp	r0, #2
   1ad10:	bne	1ad2c <__assert_fail@plt+0x9898>
   1ad14:	ldr	r0, [fp, #-12]
   1ad18:	ldr	r1, [fp, #-16]
   1ad1c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1ad20:	ldr	r3, [fp, #12]
   1ad24:	bl	1f6ec <__assert_fail@plt+0xe258>
   1ad28:	b	1aec4 <__assert_fail@plt+0x9a30>
   1ad2c:	ldr	r0, [fp, #12]
   1ad30:	ldr	r0, [r0, #4]
   1ad34:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ad38:	ldr	r2, [fp, #8]
   1ad3c:	sub	r2, r2, #1
   1ad40:	add	r1, r1, r2, lsl #2
   1ad44:	ldr	r1, [r1]
   1ad48:	cmp	r0, r1
   1ad4c:	bne	1ad54 <__assert_fail@plt+0x98c0>
   1ad50:	b	1ad74 <__assert_fail@plt+0x98e0>
   1ad54:	movw	r0, #21328	; 0x5350
   1ad58:	movt	r0, #4
   1ad5c:	movw	r1, #17404	; 0x43fc
   1ad60:	movt	r1, #4
   1ad64:	movw	r2, #1125	; 0x465
   1ad68:	movw	r3, #21224	; 0x52e8
   1ad6c:	movt	r3, #4
   1ad70:	bl	11494 <__assert_fail@plt>
   1ad74:	ldr	r0, [fp, #12]
   1ad78:	ldr	r0, [r0, #8]
   1ad7c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ad80:	ldr	r2, [fp, #8]
   1ad84:	sub	r2, r2, #2
   1ad88:	add	r1, r1, r2, lsl #2
   1ad8c:	ldr	r1, [r1]
   1ad90:	cmp	r0, r1
   1ad94:	bne	1ad9c <__assert_fail@plt+0x9908>
   1ad98:	b	1adbc <__assert_fail@plt+0x9928>
   1ad9c:	movw	r0, #21348	; 0x5364
   1ada0:	movt	r0, #4
   1ada4:	movw	r1, #17404	; 0x43fc
   1ada8:	movt	r1, #4
   1adac:	movw	r2, #1126	; 0x466
   1adb0:	movw	r3, #21224	; 0x52e8
   1adb4:	movt	r3, #4
   1adb8:	bl	11494 <__assert_fail@plt>
   1adbc:	ldr	r0, [fp, #12]
   1adc0:	ldr	r0, [r0, #4]
   1adc4:	and	r0, r0, #-2147483648	; 0x80000000
   1adc8:	cmp	r0, #0
   1adcc:	beq	1add4 <__assert_fail@plt+0x9940>
   1add0:	b	1adf4 <__assert_fail@plt+0x9960>
   1add4:	movw	r0, #21368	; 0x5378
   1add8:	movt	r0, #4
   1addc:	movw	r1, #17404	; 0x43fc
   1ade0:	movt	r1, #4
   1ade4:	movw	r2, #1127	; 0x467
   1ade8:	movw	r3, #21224	; 0x52e8
   1adec:	movt	r3, #4
   1adf0:	bl	11494 <__assert_fail@plt>
   1adf4:	ldr	r0, [fp, #12]
   1adf8:	ldr	r0, [r0]
   1adfc:	str	r0, [sp, #24]
   1ae00:	ldr	r0, [sp, #24]
   1ae04:	cmp	r0, #0
   1ae08:	bls	1ae28 <__assert_fail@plt+0x9994>
   1ae0c:	ldr	r0, [fp, #-16]
   1ae10:	ldr	r1, [fp, #-16]
   1ae14:	ldr	r2, [fp, #-20]	; 0xffffffec
   1ae18:	ldr	r3, [sp, #24]
   1ae1c:	bl	149f8 <__assert_fail@plt+0x3564>
   1ae20:	str	r0, [sp, #28]
   1ae24:	b	1ae30 <__assert_fail@plt+0x999c>
   1ae28:	movw	r0, #0
   1ae2c:	str	r0, [sp, #28]
   1ae30:	ldr	r0, [fp, #-12]
   1ae34:	ldr	r1, [fp, #-16]
   1ae38:	ldr	r2, [fp, #-20]	; 0xffffffec
   1ae3c:	ldr	r3, [sp, #28]
   1ae40:	ldr	ip, [fp, #-24]	; 0xffffffe8
   1ae44:	ldr	lr, [fp, #8]
   1ae48:	ldr	r4, [fp, #12]
   1ae4c:	ldr	r4, [r4, #12]
   1ae50:	str	ip, [sp]
   1ae54:	str	lr, [sp, #4]
   1ae58:	str	r4, [sp, #8]
   1ae5c:	bl	1fcc8 <__assert_fail@plt+0xe834>
   1ae60:	ldr	r0, [sp, #24]
   1ae64:	cmp	r0, #0
   1ae68:	bls	1aec0 <__assert_fail@plt+0x9a2c>
   1ae6c:	b	1ae70 <__assert_fail@plt+0x99dc>
   1ae70:	ldr	r0, [fp, #-16]
   1ae74:	ldr	r1, [fp, #-16]
   1ae78:	ldr	r2, [fp, #8]
   1ae7c:	ldr	r3, [sp, #24]
   1ae80:	bl	14ba8 <__assert_fail@plt+0x3714>
   1ae84:	str	r0, [sp, #20]
   1ae88:	ldr	r0, [sp, #20]
   1ae8c:	cmp	r0, #0
   1ae90:	bne	1ae98 <__assert_fail@plt+0x9a04>
   1ae94:	b	1aeb8 <__assert_fail@plt+0x9a24>
   1ae98:	movw	r0, #18385	; 0x47d1
   1ae9c:	movt	r0, #4
   1aea0:	movw	r1, #17404	; 0x43fc
   1aea4:	movt	r1, #4
   1aea8:	movw	r2, #1138	; 0x472
   1aeac:	movw	r3, #21224	; 0x52e8
   1aeb0:	movt	r3, #4
   1aeb4:	bl	11494 <__assert_fail@plt>
   1aeb8:	b	1aebc <__assert_fail@plt+0x9a28>
   1aebc:	b	1aec0 <__assert_fail@plt+0x9a2c>
   1aec0:	b	1aec4 <__assert_fail@plt+0x9a30>
   1aec4:	b	1aec8 <__assert_fail@plt+0x9a34>
   1aec8:	sub	sp, fp, #8
   1aecc:	pop	{r4, sl, fp, pc}
   1aed0:	push	{fp, lr}
   1aed4:	mov	fp, sp
   1aed8:	sub	sp, sp, #32
   1aedc:	add	ip, sp, #4
   1aee0:	str	r0, [fp, #-4]
   1aee4:	str	r1, [fp, #-8]
   1aee8:	str	r2, [fp, #-12]
   1aeec:	str	r3, [sp, #16]
   1aef0:	ldr	r1, [fp, #-12]
   1aef4:	mov	r0, ip
   1aef8:	bl	162fc <__assert_fail@plt+0x4e68>
   1aefc:	add	r2, sp, #4
   1af00:	ldr	r0, [fp, #-4]
   1af04:	ldr	r1, [fp, #-8]
   1af08:	ldr	r3, [sp, #16]
   1af0c:	bl	1a5b0 <__assert_fail@plt+0x911c>
   1af10:	add	r0, sp, #4
   1af14:	bl	15f6c <__assert_fail@plt+0x4ad8>
   1af18:	mov	sp, fp
   1af1c:	pop	{fp, pc}
   1af20:	push	{fp, lr}
   1af24:	mov	fp, sp
   1af28:	sub	sp, sp, #96	; 0x60
   1af2c:	str	r0, [fp, #-4]
   1af30:	str	r1, [fp, #-8]
   1af34:	str	r2, [fp, #-12]
   1af38:	str	r3, [fp, #-16]
   1af3c:	ldr	r0, [fp, #-12]
   1af40:	ldr	r0, [r0, #4]
   1af44:	cmp	r0, #0
   1af48:	movw	r0, #0
   1af4c:	movlt	r0, #1
   1af50:	and	r0, r0, #1
   1af54:	str	r0, [fp, #-20]	; 0xffffffec
   1af58:	ldr	r0, [fp, #-16]
   1af5c:	mvn	r1, #0
   1af60:	eor	r0, r0, r1
   1af64:	ldr	r1, [fp, #-20]	; 0xffffffec
   1af68:	and	r0, r0, r1
   1af6c:	cmp	r0, #0
   1af70:	beq	1af80 <__assert_fail@plt+0x9aec>
   1af74:	movw	r0, #18862	; 0x49ae
   1af78:	movt	r0, #4
   1af7c:	bl	1a9ec <__assert_fail@plt+0x9558>
   1af80:	ldr	r0, [fp, #-16]
   1af84:	cmp	r0, #0
   1af88:	bne	1af98 <__assert_fail@plt+0x9b04>
   1af8c:	movw	r0, #18910	; 0x49de
   1af90:	movt	r0, #4
   1af94:	bl	1a9ec <__assert_fail@plt+0x9558>
   1af98:	ldr	r0, [fp, #-12]
   1af9c:	movw	r1, #1
   1afa0:	bl	165e8 <__assert_fail@plt+0x5154>
   1afa4:	cmp	r0, #0
   1afa8:	bgt	1afe8 <__assert_fail@plt+0x9b54>
   1afac:	ldr	r0, [fp, #-4]
   1afb0:	movw	r1, #0
   1afb4:	cmp	r0, r1
   1afb8:	beq	1afc8 <__assert_fail@plt+0x9b34>
   1afbc:	ldr	r0, [fp, #-4]
   1afc0:	ldr	r1, [fp, #-12]
   1afc4:	bl	16204 <__assert_fail@plt+0x4d70>
   1afc8:	ldr	r0, [fp, #-8]
   1afcc:	movw	r1, #0
   1afd0:	cmp	r0, r1
   1afd4:	beq	1afe4 <__assert_fail@plt+0x9b50>
   1afd8:	ldr	r0, [fp, #-8]
   1afdc:	movw	r1, #0
   1afe0:	str	r1, [r0, #4]
   1afe4:	b	1b1b0 <__assert_fail@plt+0x9d1c>
   1afe8:	add	r0, sp, #48	; 0x30
   1afec:	bl	15e94 <__assert_fail@plt+0x4a00>
   1aff0:	sub	r0, fp, #36	; 0x24
   1aff4:	bl	15e94 <__assert_fail@plt+0x4a00>
   1aff8:	ldr	r0, [fp, #-12]
   1affc:	movw	r1, #2
   1b000:	bl	1b1b8 <__assert_fail@plt+0x9d24>
   1b004:	sub	r1, fp, #36	; 0x24
   1b008:	sub	r0, r0, #1
   1b00c:	ldr	lr, [fp, #-16]
   1b010:	udiv	r0, r0, lr
   1b014:	add	r0, r0, #1
   1b018:	str	r0, [fp, #-24]	; 0xffffffe8
   1b01c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b020:	str	r0, [sp, #32]
   1b024:	mov	r0, r1
   1b028:	ldr	r1, [sp, #32]
   1b02c:	bl	1a224 <__assert_fail@plt+0x8d90>
   1b030:	ldr	r0, [fp, #-16]
   1b034:	cmp	r0, #2
   1b038:	bne	1b09c <__assert_fail@plt+0x9c08>
   1b03c:	b	1b040 <__assert_fail@plt+0x9bac>
   1b040:	sub	r1, fp, #36	; 0x24
   1b044:	add	r0, sp, #48	; 0x30
   1b048:	bl	175e4 <__assert_fail@plt+0x6150>
   1b04c:	add	r2, sp, #48	; 0x30
   1b050:	sub	r0, fp, #36	; 0x24
   1b054:	ldr	r1, [fp, #-12]
   1b058:	bl	187d0 <__assert_fail@plt+0x733c>
   1b05c:	add	r2, sp, #48	; 0x30
   1b060:	sub	r0, fp, #36	; 0x24
   1b064:	str	r0, [sp, #28]
   1b068:	ldr	r1, [sp, #28]
   1b06c:	bl	176c0 <__assert_fail@plt+0x622c>
   1b070:	sub	r0, fp, #36	; 0x24
   1b074:	str	r0, [sp, #24]
   1b078:	ldr	r1, [sp, #24]
   1b07c:	movw	r2, #1
   1b080:	bl	18bf8 <__assert_fail@plt+0x7764>
   1b084:	add	r1, sp, #48	; 0x30
   1b088:	sub	r0, fp, #36	; 0x24
   1b08c:	bl	17404 <__assert_fail@plt+0x5f70>
   1b090:	cmp	r0, #0
   1b094:	blt	1b040 <__assert_fail@plt+0x9bac>
   1b098:	b	1b154 <__assert_fail@plt+0x9cc0>
   1b09c:	add	r0, sp, #36	; 0x24
   1b0a0:	bl	15e94 <__assert_fail@plt+0x4a00>
   1b0a4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b0a8:	cmp	r0, #0
   1b0ac:	beq	1b0c0 <__assert_fail@plt+0x9c2c>
   1b0b0:	sub	r0, fp, #36	; 0x24
   1b0b4:	str	r0, [sp, #20]
   1b0b8:	ldr	r1, [sp, #20]
   1b0bc:	bl	175a4 <__assert_fail@plt+0x6110>
   1b0c0:	b	1b0c4 <__assert_fail@plt+0x9c30>
   1b0c4:	sub	r1, fp, #36	; 0x24
   1b0c8:	add	r0, sp, #48	; 0x30
   1b0cc:	bl	175e4 <__assert_fail@plt+0x6150>
   1b0d0:	add	r1, sp, #48	; 0x30
   1b0d4:	sub	r0, fp, #36	; 0x24
   1b0d8:	ldr	lr, [fp, #-16]
   1b0dc:	sub	r2, lr, #1
   1b0e0:	bl	1a4c4 <__assert_fail@plt+0x9030>
   1b0e4:	sub	r0, fp, #36	; 0x24
   1b0e8:	ldr	r1, [fp, #-12]
   1b0ec:	str	r0, [sp, #16]
   1b0f0:	ldr	r2, [sp, #16]
   1b0f4:	bl	187d0 <__assert_fail@plt+0x733c>
   1b0f8:	add	r1, sp, #48	; 0x30
   1b0fc:	add	r0, sp, #36	; 0x24
   1b100:	ldr	r2, [fp, #-16]
   1b104:	sub	r2, r2, #1
   1b108:	bl	17c94 <__assert_fail@plt+0x6800>
   1b10c:	add	r2, sp, #36	; 0x24
   1b110:	sub	r0, fp, #36	; 0x24
   1b114:	str	r0, [sp, #12]
   1b118:	ldr	r1, [sp, #12]
   1b11c:	bl	176c0 <__assert_fail@plt+0x622c>
   1b120:	sub	r0, fp, #36	; 0x24
   1b124:	ldr	r2, [fp, #-16]
   1b128:	str	r0, [sp, #8]
   1b12c:	ldr	r1, [sp, #8]
   1b130:	bl	19360 <__assert_fail@plt+0x7ecc>
   1b134:	str	r0, [sp, #4]
   1b138:	add	r1, sp, #48	; 0x30
   1b13c:	sub	r0, fp, #36	; 0x24
   1b140:	bl	17404 <__assert_fail@plt+0x5f70>
   1b144:	cmp	r0, #0
   1b148:	blt	1b0c4 <__assert_fail@plt+0x9c30>
   1b14c:	add	r0, sp, #36	; 0x24
   1b150:	bl	15f6c <__assert_fail@plt+0x4ad8>
   1b154:	ldr	r0, [fp, #-8]
   1b158:	movw	r1, #0
   1b15c:	cmp	r0, r1
   1b160:	beq	1b184 <__assert_fail@plt+0x9cf0>
   1b164:	add	r1, sp, #48	; 0x30
   1b168:	sub	r0, fp, #36	; 0x24
   1b16c:	ldr	r2, [fp, #-16]
   1b170:	bl	1a4c4 <__assert_fail@plt+0x9030>
   1b174:	sub	r2, fp, #36	; 0x24
   1b178:	ldr	r0, [fp, #-8]
   1b17c:	ldr	r1, [fp, #-12]
   1b180:	bl	17b88 <__assert_fail@plt+0x66f4>
   1b184:	ldr	r0, [fp, #-4]
   1b188:	movw	r1, #0
   1b18c:	cmp	r0, r1
   1b190:	beq	1b1a0 <__assert_fail@plt+0x9d0c>
   1b194:	add	r1, sp, #48	; 0x30
   1b198:	ldr	r0, [fp, #-4]
   1b19c:	bl	175e4 <__assert_fail@plt+0x6150>
   1b1a0:	add	r0, sp, #48	; 0x30
   1b1a4:	bl	15f6c <__assert_fail@plt+0x4ad8>
   1b1a8:	sub	r0, fp, #36	; 0x24
   1b1ac:	bl	15f6c <__assert_fail@plt+0x4ad8>
   1b1b0:	mov	sp, fp
   1b1b4:	pop	{fp, pc}
   1b1b8:	push	{fp, lr}
   1b1bc:	mov	fp, sp
   1b1c0:	sub	sp, sp, #72	; 0x48
   1b1c4:	str	r0, [fp, #-8]
   1b1c8:	str	r1, [fp, #-12]
   1b1cc:	ldr	r0, [fp, #-12]
   1b1d0:	cmp	r0, #2
   1b1d4:	blt	1b1dc <__assert_fail@plt+0x9d48>
   1b1d8:	b	1b1fc <__assert_fail@plt+0x9d68>
   1b1dc:	movw	r0, #19456	; 0x4c00
   1b1e0:	movt	r0, #4
   1b1e4:	movw	r1, #17404	; 0x43fc
   1b1e8:	movt	r1, #4
   1b1ec:	movw	r2, #4191	; 0x105f
   1b1f0:	movw	r3, #19466	; 0x4c0a
   1b1f4:	movt	r3, #4
   1b1f8:	bl	11494 <__assert_fail@plt>
   1b1fc:	ldr	r0, [fp, #-12]
   1b200:	cmp	r0, #62	; 0x3e
   1b204:	bgt	1b20c <__assert_fail@plt+0x9d78>
   1b208:	b	1b22c <__assert_fail@plt+0x9d98>
   1b20c:	movw	r0, #19515	; 0x4c3b
   1b210:	movt	r0, #4
   1b214:	movw	r1, #17404	; 0x43fc
   1b218:	movt	r1, #4
   1b21c:	movw	r2, #4192	; 0x1060
   1b220:	movw	r3, #19466	; 0x4c0a
   1b224:	movt	r3, #4
   1b228:	bl	11494 <__assert_fail@plt>
   1b22c:	ldr	r0, [fp, #-8]
   1b230:	ldr	r0, [r0, #4]
   1b234:	cmp	r0, #0
   1b238:	blt	1b24c <__assert_fail@plt+0x9db8>
   1b23c:	ldr	r0, [fp, #-8]
   1b240:	ldr	r0, [r0, #4]
   1b244:	str	r0, [sp, #16]
   1b248:	b	1b260 <__assert_fail@plt+0x9dcc>
   1b24c:	ldr	r0, [fp, #-8]
   1b250:	ldr	r0, [r0, #4]
   1b254:	movw	r1, #0
   1b258:	sub	r0, r1, r0
   1b25c:	str	r0, [sp, #16]
   1b260:	ldr	r0, [sp, #16]
   1b264:	str	r0, [fp, #-16]
   1b268:	ldr	r0, [fp, #-16]
   1b26c:	cmp	r0, #0
   1b270:	bne	1b280 <__assert_fail@plt+0x9dec>
   1b274:	movw	r0, #1
   1b278:	str	r0, [fp, #-4]
   1b27c:	b	1b468 <__assert_fail@plt+0x9fd4>
   1b280:	ldr	r0, [fp, #-8]
   1b284:	ldr	r0, [r0, #8]
   1b288:	str	r0, [fp, #-24]	; 0xffffffe8
   1b28c:	ldr	r0, [fp, #-16]
   1b290:	sub	r0, r0, #1
   1b294:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b298:	ldr	r1, [r1, r0, lsl #2]
   1b29c:	str	r0, [sp, #12]
   1b2a0:	mov	r0, r1
   1b2a4:	bl	1d988 <__assert_fail@plt+0xc4f4>
   1b2a8:	ldr	r1, [sp, #12]
   1b2ac:	add	r0, r0, r1, lsl #5
   1b2b0:	str	r0, [fp, #-32]	; 0xffffffe0
   1b2b4:	ldr	r0, [fp, #-12]
   1b2b8:	sub	r0, r0, #2
   1b2bc:	cmp	r0, #30
   1b2c0:	str	r0, [sp, #8]
   1b2c4:	bhi	1b3b8 <__assert_fail@plt+0x9f24>
   1b2c8:	add	r0, pc, #8
   1b2cc:	ldr	r1, [sp, #8]
   1b2d0:	ldr	r0, [r0, r1, lsl #2]
   1b2d4:	mov	pc, r0
   1b2d8:	andeq	fp, r1, r4, asr r3
   1b2dc:			; <UNDEFINED> instruction: 0x0001b3b8
   1b2e0:	andeq	fp, r1, r0, ror #6
   1b2e4:			; <UNDEFINED> instruction: 0x0001b3b8
   1b2e8:			; <UNDEFINED> instruction: 0x0001b3b8
   1b2ec:			; <UNDEFINED> instruction: 0x0001b3b8
   1b2f0:	andeq	fp, r1, r4, ror r3
   1b2f4:			; <UNDEFINED> instruction: 0x0001b3b8
   1b2f8:			; <UNDEFINED> instruction: 0x0001b3b8
   1b2fc:			; <UNDEFINED> instruction: 0x0001b3b8
   1b300:			; <UNDEFINED> instruction: 0x0001b3b8
   1b304:			; <UNDEFINED> instruction: 0x0001b3b8
   1b308:			; <UNDEFINED> instruction: 0x0001b3b8
   1b30c:			; <UNDEFINED> instruction: 0x0001b3b8
   1b310:	andeq	fp, r1, ip, lsl #7
   1b314:			; <UNDEFINED> instruction: 0x0001b3b8
   1b318:			; <UNDEFINED> instruction: 0x0001b3b8
   1b31c:			; <UNDEFINED> instruction: 0x0001b3b8
   1b320:			; <UNDEFINED> instruction: 0x0001b3b8
   1b324:			; <UNDEFINED> instruction: 0x0001b3b8
   1b328:			; <UNDEFINED> instruction: 0x0001b3b8
   1b32c:			; <UNDEFINED> instruction: 0x0001b3b8
   1b330:			; <UNDEFINED> instruction: 0x0001b3b8
   1b334:			; <UNDEFINED> instruction: 0x0001b3b8
   1b338:			; <UNDEFINED> instruction: 0x0001b3b8
   1b33c:			; <UNDEFINED> instruction: 0x0001b3b8
   1b340:			; <UNDEFINED> instruction: 0x0001b3b8
   1b344:			; <UNDEFINED> instruction: 0x0001b3b8
   1b348:			; <UNDEFINED> instruction: 0x0001b3b8
   1b34c:			; <UNDEFINED> instruction: 0x0001b3b8
   1b350:	andeq	fp, r1, r0, lsr #7
   1b354:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b358:	str	r0, [fp, #-4]
   1b35c:	b	1b468 <__assert_fail@plt+0x9fd4>
   1b360:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b364:	add	r0, r0, #1
   1b368:	lsr	r0, r0, #1
   1b36c:	str	r0, [fp, #-4]
   1b370:	b	1b468 <__assert_fail@plt+0x9fd4>
   1b374:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b378:	add	r0, r0, #2
   1b37c:	movw	r1, #3
   1b380:	udiv	r0, r0, r1
   1b384:	str	r0, [fp, #-4]
   1b388:	b	1b468 <__assert_fail@plt+0x9fd4>
   1b38c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b390:	add	r0, r0, #3
   1b394:	lsr	r0, r0, #2
   1b398:	str	r0, [fp, #-4]
   1b39c:	b	1b468 <__assert_fail@plt+0x9fd4>
   1b3a0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b3a4:	add	r0, r0, #4
   1b3a8:	movw	r1, #5
   1b3ac:	udiv	r0, r0, r1
   1b3b0:	str	r0, [fp, #-4]
   1b3b4:	b	1b468 <__assert_fail@plt+0x9fd4>
   1b3b8:	ldr	r0, [fp, #-16]
   1b3bc:	bl	15f30 <__assert_fail@plt+0x4a9c>
   1b3c0:	str	r0, [fp, #-28]	; 0xffffffe4
   1b3c4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b3c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b3cc:	ldr	r2, [fp, #-16]
   1b3d0:	bl	13af0 <__assert_fail@plt+0x265c>
   1b3d4:	ldr	r1, [fp, #-12]
   1b3d8:	add	r0, sp, #24
   1b3dc:	bl	1da78 <__assert_fail@plt+0xc5e4>
   1b3e0:	ldr	r0, [fp, #-16]
   1b3e4:	str	r0, [fp, #-20]	; 0xffffffec
   1b3e8:	movw	r0, #0
   1b3ec:	str	r0, [sp, #20]
   1b3f0:	ldr	r0, [sp, #20]
   1b3f4:	add	r0, r0, #1
   1b3f8:	str	r0, [sp, #20]
   1b3fc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b400:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b404:	add	r3, sp, #24
   1b408:	str	r0, [sp, #4]
   1b40c:	ldr	r1, [sp, #4]
   1b410:	bl	1db98 <__assert_fail@plt+0xc704>
   1b414:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b418:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b41c:	sub	r2, r2, #1
   1b420:	add	r1, r1, r2, lsl #2
   1b424:	ldr	r1, [r1]
   1b428:	cmp	r1, #0
   1b42c:	movw	r1, #0
   1b430:	moveq	r1, #1
   1b434:	and	r1, r1, #1
   1b438:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b43c:	sub	r1, r2, r1
   1b440:	str	r1, [fp, #-20]	; 0xffffffec
   1b444:	str	r0, [sp]
   1b448:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b44c:	cmp	r0, #0
   1b450:	bgt	1b3f0 <__assert_fail@plt+0x9f5c>
   1b454:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b458:	ldr	r1, [fp, #-16]
   1b45c:	bl	15fa8 <__assert_fail@plt+0x4b14>
   1b460:	ldr	r0, [sp, #20]
   1b464:	str	r0, [fp, #-4]
   1b468:	ldr	r0, [fp, #-4]
   1b46c:	mov	sp, fp
   1b470:	pop	{fp, pc}
   1b474:	push	{fp, lr}
   1b478:	mov	fp, sp
   1b47c:	sub	sp, sp, #32
   1b480:	add	r3, sp, #4
   1b484:	str	r0, [fp, #-4]
   1b488:	str	r1, [fp, #-8]
   1b48c:	str	r2, [fp, #-12]
   1b490:	mov	r0, r3
   1b494:	bl	15e94 <__assert_fail@plt+0x4a00>
   1b498:	add	r1, sp, #4
   1b49c:	ldr	r0, [fp, #-4]
   1b4a0:	ldr	r2, [fp, #-8]
   1b4a4:	ldr	r3, [fp, #-12]
   1b4a8:	bl	1af20 <__assert_fail@plt+0x9a8c>
   1b4ac:	add	r0, sp, #4
   1b4b0:	ldr	r1, [sp, #8]
   1b4b4:	cmp	r1, #0
   1b4b8:	movw	r1, #0
   1b4bc:	moveq	r1, #1
   1b4c0:	and	r1, r1, #1
   1b4c4:	str	r1, [sp, #16]
   1b4c8:	bl	15f6c <__assert_fail@plt+0x4ad8>
   1b4cc:	ldr	r0, [sp, #16]
   1b4d0:	mov	sp, fp
   1b4d4:	pop	{fp, pc}
   1b4d8:	push	{fp, lr}
   1b4dc:	mov	fp, sp
   1b4e0:	sub	sp, sp, #16
   1b4e4:	str	r0, [fp, #-4]
   1b4e8:	str	r1, [sp, #8]
   1b4ec:	str	r2, [sp, #4]
   1b4f0:	ldr	r0, [fp, #-4]
   1b4f4:	ldr	r1, [sp, #8]
   1b4f8:	ldr	r2, [sp, #4]
   1b4fc:	movw	r3, #2
   1b500:	bl	1af20 <__assert_fail@plt+0x9a8c>
   1b504:	mov	sp, fp
   1b508:	pop	{fp, pc}
   1b50c:	push	{fp, lr}
   1b510:	mov	fp, sp
   1b514:	sub	sp, sp, #8
   1b518:	str	r0, [sp, #4]
   1b51c:	str	r1, [sp]
   1b520:	ldr	r0, [sp, #4]
   1b524:	ldr	r2, [sp]
   1b528:	movw	r1, #0
   1b52c:	movw	r3, #2
   1b530:	bl	1af20 <__assert_fail@plt+0x9a8c>
   1b534:	mov	sp, fp
   1b538:	pop	{fp, pc}
   1b53c:	push	{fp, lr}
   1b540:	mov	fp, sp
   1b544:	sub	sp, sp, #8
   1b548:	str	r0, [sp]
   1b54c:	ldr	r0, [sp]
   1b550:	ldr	r0, [r0, #4]
   1b554:	cmp	r0, #0
   1b558:	bgt	1b57c <__assert_fail@plt+0xa0e8>
   1b55c:	ldr	r0, [sp]
   1b560:	ldr	r0, [r0, #4]
   1b564:	cmp	r0, #0
   1b568:	movw	r0, #0
   1b56c:	moveq	r0, #1
   1b570:	and	r0, r0, #1
   1b574:	str	r0, [sp, #4]
   1b578:	b	1b590 <__assert_fail@plt+0xa0fc>
   1b57c:	ldr	r1, [sp]
   1b580:	movw	r0, #0
   1b584:	movw	r2, #2
   1b588:	bl	1b474 <__assert_fail@plt+0x9fe0>
   1b58c:	str	r0, [sp, #4]
   1b590:	ldr	r0, [sp, #4]
   1b594:	mov	sp, fp
   1b598:	pop	{fp, pc}
   1b59c:	push	{fp, lr}
   1b5a0:	mov	fp, sp
   1b5a4:	sub	sp, sp, #24
   1b5a8:	str	r0, [fp, #-4]
   1b5ac:	str	r1, [fp, #-8]
   1b5b0:	ldr	r0, [fp, #-8]
   1b5b4:	cmp	r0, #0
   1b5b8:	ble	1b5c0 <__assert_fail@plt+0xa12c>
   1b5bc:	b	1b5e0 <__assert_fail@plt+0xa14c>
   1b5c0:	movw	r0, #20785	; 0x5131
   1b5c4:	movt	r0, #4
   1b5c8:	movw	r1, #17404	; 0x43fc
   1b5cc:	movt	r1, #4
   1b5d0:	movw	r2, #3302	; 0xce6
   1b5d4:	movw	r3, #18936	; 0x49f8
   1b5d8:	movt	r3, #4
   1b5dc:	bl	11494 <__assert_fail@plt>
   1b5e0:	ldr	r0, [fp, #-4]
   1b5e4:	ldr	r1, [fp, #-8]
   1b5e8:	sub	r1, r1, #1
   1b5ec:	add	r0, r0, r1, lsl #2
   1b5f0:	ldr	r0, [r0]
   1b5f4:	cmp	r0, #0
   1b5f8:	beq	1b600 <__assert_fail@plt+0xa16c>
   1b5fc:	b	1b620 <__assert_fail@plt+0xa18c>
   1b600:	movw	r0, #18983	; 0x4a27
   1b604:	movt	r0, #4
   1b608:	movw	r1, #17404	; 0x43fc
   1b60c:	movt	r1, #4
   1b610:	movw	r2, #3303	; 0xce7
   1b614:	movw	r3, #18936	; 0x49f8
   1b618:	movt	r3, #4
   1b61c:	bl	11494 <__assert_fail@plt>
   1b620:	add	r0, sp, #4
   1b624:	ldr	r1, [fp, #-4]
   1b628:	ldr	r2, [fp, #-8]
   1b62c:	bl	16ae8 <__assert_fail@plt+0x5654>
   1b630:	movw	r1, #0
   1b634:	str	r0, [sp]
   1b638:	mov	r0, r1
   1b63c:	ldr	r1, [sp]
   1b640:	movw	r2, #2
   1b644:	bl	1b474 <__assert_fail@plt+0x9fe0>
   1b648:	mov	sp, fp
   1b64c:	pop	{fp, pc}
   1b650:	push	{fp, lr}
   1b654:	mov	fp, sp
   1b658:	sub	sp, sp, #72	; 0x48
   1b65c:	str	r0, [fp, #-4]
   1b660:	str	r1, [fp, #-8]
   1b664:	str	r2, [fp, #-12]
   1b668:	str	r3, [fp, #-16]
   1b66c:	ldr	r0, [fp, #-16]
   1b670:	cmp	r0, #0
   1b674:	ble	1b67c <__assert_fail@plt+0xa1e8>
   1b678:	b	1b69c <__assert_fail@plt+0xa208>
   1b67c:	movw	r0, #20785	; 0x5131
   1b680:	movt	r0, #4
   1b684:	movw	r1, #17404	; 0x43fc
   1b688:	movt	r1, #4
   1b68c:	movw	r2, #3313	; 0xcf1
   1b690:	movw	r3, #18996	; 0x4a34
   1b694:	movt	r3, #4
   1b698:	bl	11494 <__assert_fail@plt>
   1b69c:	ldr	r0, [fp, #-12]
   1b6a0:	ldr	r1, [fp, #-16]
   1b6a4:	sub	r1, r1, #1
   1b6a8:	add	r0, r0, r1, lsl #2
   1b6ac:	ldr	r0, [r0]
   1b6b0:	cmp	r0, #0
   1b6b4:	beq	1b6bc <__assert_fail@plt+0xa228>
   1b6b8:	b	1b6dc <__assert_fail@plt+0xa248>
   1b6bc:	movw	r0, #18983	; 0x4a27
   1b6c0:	movt	r0, #4
   1b6c4:	movw	r1, #17404	; 0x43fc
   1b6c8:	movt	r1, #4
   1b6cc:	movw	r2, #3314	; 0xcf2
   1b6d0:	movw	r3, #18996	; 0x4a34
   1b6d4:	movt	r3, #4
   1b6d8:	bl	11494 <__assert_fail@plt>
   1b6dc:	add	r0, sp, #32
   1b6e0:	bl	15e94 <__assert_fail@plt+0x4a00>
   1b6e4:	sub	r0, fp, #28
   1b6e8:	bl	15e94 <__assert_fail@plt+0x4a00>
   1b6ec:	add	r0, sp, #20
   1b6f0:	add	r1, sp, #32
   1b6f4:	sub	lr, fp, #28
   1b6f8:	ldr	r2, [fp, #-12]
   1b6fc:	ldr	r3, [fp, #-16]
   1b700:	str	r1, [sp, #12]
   1b704:	mov	r1, r2
   1b708:	mov	r2, r3
   1b70c:	str	lr, [sp, #8]
   1b710:	bl	16ae8 <__assert_fail@plt+0x5654>
   1b714:	ldr	r1, [sp, #8]
   1b718:	str	r0, [sp, #4]
   1b71c:	mov	r0, r1
   1b720:	ldr	r1, [sp, #12]
   1b724:	ldr	r2, [sp, #4]
   1b728:	movw	r3, #2
   1b72c:	bl	1af20 <__assert_fail@plt+0x9a8c>
   1b730:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b734:	ldr	r1, [fp, #-16]
   1b738:	add	r1, r1, #1
   1b73c:	movw	r2, #2
   1b740:	sdiv	r1, r1, r2
   1b744:	cmp	r0, r1
   1b748:	bne	1b750 <__assert_fail@plt+0xa2bc>
   1b74c:	b	1b770 <__assert_fail@plt+0xa2dc>
   1b750:	movw	r0, #19056	; 0x4a70
   1b754:	movt	r0, #4
   1b758:	movw	r1, #17404	; 0x43fc
   1b75c:	movt	r1, #4
   1b760:	movw	r2, #3320	; 0xcf8
   1b764:	movw	r3, #18996	; 0x4a34
   1b768:	movt	r3, #4
   1b76c:	bl	11494 <__assert_fail@plt>
   1b770:	ldr	r0, [fp, #-4]
   1b774:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b778:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1b77c:	bl	13b48 <__assert_fail@plt+0x26b4>
   1b780:	sub	r0, fp, #28
   1b784:	bl	15f6c <__assert_fail@plt+0x4ad8>
   1b788:	ldr	r0, [sp, #36]	; 0x24
   1b78c:	str	r0, [sp, #16]
   1b790:	ldr	r0, [fp, #-8]
   1b794:	movw	r1, #0
   1b798:	cmp	r0, r1
   1b79c:	beq	1b7b0 <__assert_fail@plt+0xa31c>
   1b7a0:	ldr	r0, [fp, #-8]
   1b7a4:	ldr	r1, [sp, #40]	; 0x28
   1b7a8:	ldr	r2, [sp, #16]
   1b7ac:	bl	13b48 <__assert_fail@plt+0x26b4>
   1b7b0:	add	r0, sp, #32
   1b7b4:	bl	15f6c <__assert_fail@plt+0x4ad8>
   1b7b8:	ldr	r0, [sp, #16]
   1b7bc:	mov	sp, fp
   1b7c0:	pop	{fp, pc}
   1b7c4:	push	{fp, lr}
   1b7c8:	mov	fp, sp
   1b7cc:	sub	sp, sp, #16
   1b7d0:	str	r0, [fp, #-4]
   1b7d4:	str	r1, [sp, #8]
   1b7d8:	str	r2, [sp, #4]
   1b7dc:	ldr	r0, [fp, #-4]
   1b7e0:	ldr	r1, [sp, #8]
   1b7e4:	ldr	r2, [sp, #8]
   1b7e8:	cmp	r2, #0
   1b7ec:	movw	r2, #0
   1b7f0:	moveq	r2, #1
   1b7f4:	and	r2, r2, #1
   1b7f8:	add	r1, r1, r2
   1b7fc:	bl	1608c <__assert_fail@plt+0x4bf8>
   1b800:	ldr	r0, [sp, #4]
   1b804:	add	r0, r0, #1
   1b808:	cmp	r0, #2
   1b80c:	bcs	1b814 <__assert_fail@plt+0xa380>
   1b810:	b	1b84c <__assert_fail@plt+0xa3b8>
   1b814:	b	1b818 <__assert_fail@plt+0xa384>
   1b818:	ldr	r0, [sp, #8]
   1b81c:	ldr	r1, [sp, #4]
   1b820:	add	r1, r1, #1
   1b824:	cmp	r0, r1
   1b828:	bls	1b84c <__assert_fail@plt+0xa3b8>
   1b82c:	ldr	r0, [fp, #-4]
   1b830:	ldr	r1, [fp, #-4]
   1b834:	ldr	r2, [sp, #4]
   1b838:	ldr	r3, [sp, #8]
   1b83c:	sub	r2, r3, r2
   1b840:	str	r2, [sp, #8]
   1b844:	bl	17c94 <__assert_fail@plt+0x6800>
   1b848:	b	1b818 <__assert_fail@plt+0xa384>
   1b84c:	mov	sp, fp
   1b850:	pop	{fp, pc}
   1b854:	push	{fp, lr}
   1b858:	mov	fp, sp
   1b85c:	sub	sp, sp, #8
   1b860:	str	r0, [sp, #4]
   1b864:	str	r1, [sp]
   1b868:	ldr	r0, [sp, #4]
   1b86c:	ldr	r1, [sp]
   1b870:	movw	r2, #2
   1b874:	bl	1b7c4 <__assert_fail@plt+0xa330>
   1b878:	mov	sp, fp
   1b87c:	pop	{fp, pc}
   1b880:	push	{fp, lr}
   1b884:	mov	fp, sp
   1b888:	sub	sp, sp, #8
   1b88c:	str	r0, [sp, #4]
   1b890:	str	r1, [sp]
   1b894:	ldr	r0, [sp, #4]
   1b898:	ldr	r1, [sp]
   1b89c:	movw	r2, #1
   1b8a0:	bl	1b7c4 <__assert_fail@plt+0xa330>
   1b8a4:	mov	sp, fp
   1b8a8:	pop	{fp, pc}
   1b8ac:	push	{fp, lr}
   1b8b0:	mov	fp, sp
   1b8b4:	sub	sp, sp, #32
   1b8b8:	str	r0, [fp, #-4]
   1b8bc:	str	r1, [fp, #-8]
   1b8c0:	str	r2, [fp, #-12]
   1b8c4:	ldr	r0, [fp, #-4]
   1b8c8:	ldr	r1, [fp, #-12]
   1b8cc:	ldr	r2, [fp, #-8]
   1b8d0:	cmp	r1, r2
   1b8d4:	movw	r1, #0
   1b8d8:	movls	r1, #1
   1b8dc:	and	r1, r1, #1
   1b8e0:	bl	1608c <__assert_fail@plt+0x4bf8>
   1b8e4:	ldr	r0, [fp, #-12]
   1b8e8:	ldr	r1, [fp, #-8]
   1b8ec:	lsr	r1, r1, #1
   1b8f0:	cmp	r0, r1
   1b8f4:	bls	1b930 <__assert_fail@plt+0xa49c>
   1b8f8:	ldr	r0, [fp, #-12]
   1b8fc:	ldr	r1, [fp, #-8]
   1b900:	cmp	r0, r1
   1b904:	bhi	1b91c <__assert_fail@plt+0xa488>
   1b908:	ldr	r0, [fp, #-8]
   1b90c:	ldr	r1, [fp, #-12]
   1b910:	sub	r0, r0, r1
   1b914:	str	r0, [sp, #4]
   1b918:	b	1b928 <__assert_fail@plt+0xa494>
   1b91c:	movw	r0, #0
   1b920:	str	r0, [sp, #4]
   1b924:	b	1b928 <__assert_fail@plt+0xa494>
   1b928:	ldr	r0, [sp, #4]
   1b92c:	str	r0, [fp, #-12]
   1b930:	add	r0, sp, #8
   1b934:	bl	15e94 <__assert_fail@plt+0x4a00>
   1b938:	add	r0, sp, #8
   1b93c:	ldr	r1, [fp, #-12]
   1b940:	bl	1b880 <__assert_fail@plt+0xa3ec>
   1b944:	ldr	r0, [fp, #-12]
   1b948:	cmp	r0, #0
   1b94c:	bls	1b980 <__assert_fail@plt+0xa4ec>
   1b950:	ldr	r0, [fp, #-4]
   1b954:	ldr	r1, [fp, #-4]
   1b958:	ldr	r2, [fp, #-8]
   1b95c:	mvn	r3, #0
   1b960:	add	r3, r2, r3
   1b964:	str	r3, [fp, #-8]
   1b968:	bl	17c94 <__assert_fail@plt+0x6800>
   1b96c:	ldr	r0, [fp, #-12]
   1b970:	mvn	r1, #0
   1b974:	add	r0, r0, r1
   1b978:	str	r0, [fp, #-12]
   1b97c:	b	1b944 <__assert_fail@plt+0xa4b0>
   1b980:	add	r2, sp, #8
   1b984:	ldr	r0, [fp, #-4]
   1b988:	ldr	r1, [fp, #-4]
   1b98c:	bl	1902c <__assert_fail@plt+0x7b98>
   1b990:	add	r0, sp, #8
   1b994:	bl	15f6c <__assert_fail@plt+0x4ad8>
   1b998:	mov	sp, fp
   1b99c:	pop	{fp, pc}
   1b9a0:	push	{fp, lr}
   1b9a4:	mov	fp, sp
   1b9a8:	sub	sp, sp, #72	; 0x48
   1b9ac:	str	r0, [fp, #-8]
   1b9b0:	str	r1, [fp, #-12]
   1b9b4:	ldr	r0, [fp, #-8]
   1b9b8:	ldr	r0, [r0, #4]
   1b9bc:	cmp	r0, #0
   1b9c0:	movw	r0, #0
   1b9c4:	movne	r0, #1
   1b9c8:	and	r0, r0, #1
   1b9cc:	ldr	r1, [fp, #-8]
   1b9d0:	ldr	r1, [r1, #8]
   1b9d4:	ldr	r1, [r1]
   1b9d8:	and	r0, r0, r1
   1b9dc:	cmp	r0, #0
   1b9e0:	bne	1ba10 <__assert_fail@plt+0xa57c>
   1b9e4:	ldr	r0, [fp, #-8]
   1b9e8:	movw	r1, #2
   1b9ec:	bl	165e8 <__assert_fail@plt+0x5154>
   1b9f0:	cmp	r0, #0
   1b9f4:	movw	r0, #0
   1b9f8:	moveq	r0, #1
   1b9fc:	tst	r0, #1
   1ba00:	movw	r0, #2
   1ba04:	moveq	r0, #0
   1ba08:	str	r0, [fp, #-4]
   1ba0c:	b	1bc64 <__assert_fail@plt+0xa7d0>
   1ba10:	ldr	r0, [fp, #-8]
   1ba14:	ldr	r0, [r0, #4]
   1ba18:	cmp	r0, #0
   1ba1c:	beq	1ba24 <__assert_fail@plt+0xa590>
   1ba20:	b	1ba44 <__assert_fail@plt+0xa5b0>
   1ba24:	movw	r0, #19079	; 0x4a87
   1ba28:	movt	r0, #4
   1ba2c:	movw	r1, #17404	; 0x43fc
   1ba30:	movt	r1, #4
   1ba34:	movw	r2, #3590	; 0xe06
   1ba38:	movw	r3, #19096	; 0x4a98
   1ba3c:	movt	r3, #4
   1ba40:	bl	11494 <__assert_fail@plt>
   1ba44:	ldr	r0, [fp, #-8]
   1ba48:	movw	r1, #64	; 0x40
   1ba4c:	bl	165e8 <__assert_fail@plt+0x5154>
   1ba50:	cmp	r0, #0
   1ba54:	bge	1ba7c <__assert_fail@plt+0xa5e8>
   1ba58:	ldr	r0, [pc, #532]	; 1bc74 <__assert_fail@plt+0xa7e0>
   1ba5c:	ldr	r1, [fp, #-8]
   1ba60:	ldr	r1, [r1, #8]
   1ba64:	ldr	r1, [r1]
   1ba68:	lsr	r1, r1, #1
   1ba6c:	lsr	r0, r0, r1
   1ba70:	and	r0, r0, #2
   1ba74:	str	r0, [fp, #-4]
   1ba78:	b	1bc64 <__assert_fail@plt+0xa7d0>
   1ba7c:	ldr	r2, [pc, #492]	; 1bc70 <__assert_fail@plt+0xa7dc>
   1ba80:	ldr	r1, [fp, #-8]
   1ba84:	movw	r0, #0
   1ba88:	bl	19608 <__assert_fail@plt+0x8174>
   1ba8c:	cmp	r0, #1
   1ba90:	beq	1baa0 <__assert_fail@plt+0xa60c>
   1ba94:	movw	r0, #0
   1ba98:	str	r0, [fp, #-4]
   1ba9c:	b	1bc64 <__assert_fail@plt+0xa7d0>
   1baa0:	ldr	r0, [fp, #-8]
   1baa4:	movw	r1, #961	; 0x3c1
   1baa8:	bl	165e8 <__assert_fail@plt+0x5154>
   1baac:	cmp	r0, #0
   1bab0:	bge	1bac0 <__assert_fail@plt+0xa62c>
   1bab4:	movw	r0, #2
   1bab8:	str	r0, [fp, #-4]
   1babc:	b	1bc64 <__assert_fail@plt+0xa7d0>
   1bac0:	sub	r0, fp, #24
   1bac4:	bl	15e94 <__assert_fail@plt+0x4a00>
   1bac8:	add	r0, sp, #36	; 0x24
   1bacc:	bl	15e94 <__assert_fail@plt+0x4a00>
   1bad0:	sub	r0, fp, #24
   1bad4:	ldr	r1, [fp, #-8]
   1bad8:	bl	1753c <__assert_fail@plt+0x60a8>
   1badc:	ldr	r0, [fp, #-16]
   1bae0:	ldr	r1, [r0]
   1bae4:	sub	r1, r1, #1
   1bae8:	str	r1, [r0]
   1baec:	ldr	r0, [fp, #-16]
   1baf0:	movw	r1, #0
   1baf4:	bl	14d14 <__assert_fail@plt+0x3880>
   1baf8:	sub	r1, fp, #24
   1bafc:	add	lr, sp, #36	; 0x24
   1bb00:	str	r0, [sp, #20]
   1bb04:	ldr	r2, [sp, #20]
   1bb08:	mov	r0, lr
   1bb0c:	bl	18bf8 <__assert_fail@plt+0x7764>
   1bb10:	add	r0, sp, #24
   1bb14:	movw	r1, #2
   1bb18:	bl	162fc <__assert_fail@plt+0x4e68>
   1bb1c:	add	r3, sp, #36	; 0x24
   1bb20:	add	r2, sp, #24
   1bb24:	sub	r1, fp, #24
   1bb28:	ldr	r0, [fp, #-8]
   1bb2c:	ldr	lr, [sp, #20]
   1bb30:	str	lr, [sp]
   1bb34:	bl	1bc78 <__assert_fail@plt+0xa7e4>
   1bb38:	cmp	r0, #0
   1bb3c:	movw	r0, #0
   1bb40:	str	r0, [sp, #8]
   1bb44:	beq	1bb64 <__assert_fail@plt+0xa6d0>
   1bb48:	add	r1, sp, #24
   1bb4c:	ldr	r0, [fp, #-8]
   1bb50:	bl	1bd7c <__assert_fail@plt+0xa8e8>
   1bb54:	cmp	r0, #0
   1bb58:	movw	r0, #0
   1bb5c:	movne	r0, #1
   1bb60:	str	r0, [sp, #8]
   1bb64:	ldr	r0, [sp, #8]
   1bb68:	and	r0, r0, #1
   1bb6c:	str	r0, [sp, #16]
   1bb70:	ldr	r0, [fp, #-12]
   1bb74:	sub	r0, r0, #24
   1bb78:	str	r0, [fp, #-12]
   1bb7c:	movw	r0, #0
   1bb80:	str	r0, [sp, #12]
   1bb84:	ldr	r0, [sp, #16]
   1bb88:	ldr	r1, [sp, #12]
   1bb8c:	ldr	r2, [fp, #-12]
   1bb90:	cmp	r1, r2
   1bb94:	movw	r1, #0
   1bb98:	movlt	r1, #1
   1bb9c:	and	r1, r1, #1
   1bba0:	and	r0, r0, r1
   1bba4:	cmp	r0, #0
   1bba8:	beq	1bc44 <__assert_fail@plt+0xa7b0>
   1bbac:	add	r0, sp, #24
   1bbb0:	ldr	r1, [sp, #12]
   1bbb4:	ldr	r2, [sp, #12]
   1bbb8:	mul	r1, r1, r2
   1bbbc:	ldr	r2, [sp, #12]
   1bbc0:	add	r1, r1, r2
   1bbc4:	add	r1, r1, #41	; 0x29
   1bbc8:	bl	1608c <__assert_fail@plt+0x4bf8>
   1bbcc:	sub	r1, fp, #24
   1bbd0:	add	r0, sp, #24
   1bbd4:	bl	17344 <__assert_fail@plt+0x5eb0>
   1bbd8:	cmp	r0, #0
   1bbdc:	blt	1bc14 <__assert_fail@plt+0xa780>
   1bbe0:	ldr	r0, [sp, #12]
   1bbe4:	cmp	r0, #30
   1bbe8:	blt	1bbf0 <__assert_fail@plt+0xa75c>
   1bbec:	b	1bc10 <__assert_fail@plt+0xa77c>
   1bbf0:	movw	r0, #19146	; 0x4aca
   1bbf4:	movt	r0, #4
   1bbf8:	movw	r1, #17404	; 0x43fc
   1bbfc:	movt	r1, #4
   1bc00:	movw	r2, #3629	; 0xe2d
   1bc04:	movw	r3, #19096	; 0x4a98
   1bc08:	movt	r3, #4
   1bc0c:	bl	11494 <__assert_fail@plt>
   1bc10:	b	1bc44 <__assert_fail@plt+0xa7b0>
   1bc14:	add	r3, sp, #36	; 0x24
   1bc18:	add	r2, sp, #24
   1bc1c:	sub	r1, fp, #24
   1bc20:	ldr	r0, [fp, #-8]
   1bc24:	ldr	ip, [sp, #20]
   1bc28:	str	ip, [sp]
   1bc2c:	bl	1bc78 <__assert_fail@plt+0xa7e4>
   1bc30:	str	r0, [sp, #16]
   1bc34:	ldr	r0, [sp, #12]
   1bc38:	add	r0, r0, #1
   1bc3c:	str	r0, [sp, #12]
   1bc40:	b	1bb84 <__assert_fail@plt+0xa6f0>
   1bc44:	sub	r0, fp, #24
   1bc48:	bl	15f6c <__assert_fail@plt+0x4ad8>
   1bc4c:	add	r0, sp, #36	; 0x24
   1bc50:	bl	15f6c <__assert_fail@plt+0x4ad8>
   1bc54:	add	r0, sp, #24
   1bc58:	bl	15f6c <__assert_fail@plt+0x4ad8>
   1bc5c:	ldr	r0, [sp, #16]
   1bc60:	str	r0, [fp, #-4]
   1bc64:	ldr	r0, [fp, #-4]
   1bc68:	mov	sp, fp
   1bc6c:	pop	{fp, pc}
   1bc70:	smullgt	sp, pc, r7, r7	; <UNPREDICTABLE>
   1bc74:	stmdbgt	r9!, {r2, r3, r4, r6, r7, r9, sl, ip, pc}^
   1bc78:	push	{fp, lr}
   1bc7c:	mov	fp, sp
   1bc80:	sub	sp, sp, #24
   1bc84:	ldr	ip, [fp, #8]
   1bc88:	str	r0, [fp, #-8]
   1bc8c:	str	r1, [sp, #12]
   1bc90:	str	r2, [sp, #8]
   1bc94:	str	r3, [sp, #4]
   1bc98:	ldr	r0, [fp, #8]
   1bc9c:	cmp	r0, #0
   1bca0:	str	ip, [sp]
   1bca4:	bls	1bcac <__assert_fail@plt+0xa818>
   1bca8:	b	1bccc <__assert_fail@plt+0xa838>
   1bcac:	movw	r0, #21675	; 0x54ab
   1bcb0:	movt	r0, #4
   1bcb4:	movw	r1, #17404	; 0x43fc
   1bcb8:	movt	r1, #4
   1bcbc:	movw	r2, #3550	; 0xdde
   1bcc0:	movw	r3, #21681	; 0x54b1
   1bcc4:	movt	r3, #4
   1bcc8:	bl	11494 <__assert_fail@plt>
   1bccc:	ldr	r0, [sp, #8]
   1bcd0:	ldr	r1, [sp, #8]
   1bcd4:	ldr	r2, [sp, #4]
   1bcd8:	ldr	r3, [fp, #-8]
   1bcdc:	bl	1a5b0 <__assert_fail@plt+0x911c>
   1bce0:	ldr	r0, [sp, #8]
   1bce4:	movw	r1, #1
   1bce8:	bl	172f0 <__assert_fail@plt+0x5e5c>
   1bcec:	cmp	r0, #0
   1bcf0:	beq	1bd08 <__assert_fail@plt+0xa874>
   1bcf4:	ldr	r0, [sp, #8]
   1bcf8:	ldr	r1, [sp, #12]
   1bcfc:	bl	17344 <__assert_fail@plt+0x5eb0>
   1bd00:	cmp	r0, #0
   1bd04:	bne	1bd14 <__assert_fail@plt+0xa880>
   1bd08:	movw	r0, #1
   1bd0c:	str	r0, [fp, #-4]
   1bd10:	b	1bd70 <__assert_fail@plt+0xa8dc>
   1bd14:	b	1bd18 <__assert_fail@plt+0xa884>
   1bd18:	ldr	r0, [fp, #8]
   1bd1c:	mvn	r1, #0
   1bd20:	add	r0, r0, r1
   1bd24:	str	r0, [fp, #8]
   1bd28:	cmp	r0, #0
   1bd2c:	bls	1bd68 <__assert_fail@plt+0xa8d4>
   1bd30:	ldr	r0, [sp, #8]
   1bd34:	ldr	r1, [sp, #8]
   1bd38:	ldr	r3, [fp, #-8]
   1bd3c:	movw	r2, #2
   1bd40:	bl	1aed0 <__assert_fail@plt+0x9a3c>
   1bd44:	ldr	r0, [sp, #8]
   1bd48:	ldr	r1, [sp, #12]
   1bd4c:	bl	17344 <__assert_fail@plt+0x5eb0>
   1bd50:	cmp	r0, #0
   1bd54:	bne	1bd64 <__assert_fail@plt+0xa8d0>
   1bd58:	movw	r0, #1
   1bd5c:	str	r0, [fp, #-4]
   1bd60:	b	1bd70 <__assert_fail@plt+0xa8dc>
   1bd64:	b	1bd18 <__assert_fail@plt+0xa884>
   1bd68:	movw	r0, #0
   1bd6c:	str	r0, [fp, #-4]
   1bd70:	ldr	r0, [fp, #-4]
   1bd74:	mov	sp, fp
   1bd78:	pop	{fp, pc}
   1bd7c:	push	{fp, lr}
   1bd80:	mov	fp, sp
   1bd84:	sub	sp, sp, #104	; 0x68
   1bd88:	sub	r2, fp, #40	; 0x28
   1bd8c:	str	r0, [fp, #-8]
   1bd90:	str	r1, [fp, #-12]
   1bd94:	ldr	r0, [fp, #-8]
   1bd98:	ldr	r1, [r0, #8]
   1bd9c:	ldr	r0, [fp, #-8]
   1bda0:	ldr	r0, [r0, #4]
   1bda4:	cmp	r0, #0
   1bda8:	str	r2, [sp, #44]	; 0x2c
   1bdac:	str	r1, [sp, #40]	; 0x28
   1bdb0:	blt	1bdc4 <__assert_fail@plt+0xa930>
   1bdb4:	ldr	r0, [fp, #-8]
   1bdb8:	ldr	r0, [r0, #4]
   1bdbc:	str	r0, [sp, #36]	; 0x24
   1bdc0:	b	1bdd8 <__assert_fail@plt+0xa944>
   1bdc4:	ldr	r0, [fp, #-8]
   1bdc8:	ldr	r0, [r0, #4]
   1bdcc:	movw	r1, #0
   1bdd0:	sub	r0, r1, r0
   1bdd4:	str	r0, [sp, #36]	; 0x24
   1bdd8:	ldr	r0, [sp, #36]	; 0x24
   1bddc:	ldr	r1, [sp, #44]	; 0x2c
   1bde0:	str	r0, [sp, #32]
   1bde4:	mov	r0, r1
   1bde8:	ldr	r1, [sp, #40]	; 0x28
   1bdec:	ldr	r2, [sp, #32]
   1bdf0:	bl	16ae8 <__assert_fail@plt+0x5654>
   1bdf4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1bdf8:	cmp	r1, #0
   1bdfc:	movw	r1, #0
   1be00:	movne	r1, #1
   1be04:	and	r1, r1, #1
   1be08:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1be0c:	ldr	r2, [r2]
   1be10:	and	r1, r1, r2
   1be14:	cmp	r1, #0
   1be18:	str	r0, [sp, #28]
   1be1c:	beq	1be24 <__assert_fail@plt+0xa990>
   1be20:	b	1be44 <__assert_fail@plt+0xa9b0>
   1be24:	movw	r0, #21796	; 0x5524
   1be28:	movt	r0, #4
   1be2c:	movw	r1, #17404	; 0x43fc
   1be30:	movt	r1, #4
   1be34:	movw	r2, #3504	; 0xdb0
   1be38:	movw	r3, #21810	; 0x5532
   1be3c:	movt	r3, #4
   1be40:	bl	11494 <__assert_fail@plt>
   1be44:	sub	r1, fp, #40	; 0x28
   1be48:	ldr	r0, [fp, #-12]
   1be4c:	movw	r2, #2
   1be50:	bl	1b474 <__assert_fail@plt+0x9fe0>
   1be54:	cmp	r0, #0
   1be58:	beq	1be68 <__assert_fail@plt+0xa9d4>
   1be5c:	movw	r0, #0
   1be60:	str	r0, [fp, #-4]
   1be64:	b	1c058 <__assert_fail@plt+0xabc4>
   1be68:	ldr	r0, [fp, #-12]
   1be6c:	ldr	r0, [r0, #4]
   1be70:	cmp	r0, #1
   1be74:	bne	1be90 <__assert_fail@plt+0xa9fc>
   1be78:	ldr	r0, [fp, #-12]
   1be7c:	ldr	r0, [r0, #8]
   1be80:	ldr	r0, [r0]
   1be84:	sub	r0, r0, #1
   1be88:	str	r0, [sp, #24]
   1be8c:	b	1be9c <__assert_fail@plt+0xaa08>
   1be90:	mvn	r0, #0
   1be94:	str	r0, [sp, #24]
   1be98:	b	1be9c <__assert_fail@plt+0xaa08>
   1be9c:	ldr	r0, [sp, #24]
   1bea0:	str	r0, [fp, #-44]	; 0xffffffd4
   1bea4:	movw	r0, #3
   1bea8:	str	r0, [fp, #-48]	; 0xffffffd0
   1beac:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1beb0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1beb4:	cmp	r0, r1
   1beb8:	bcc	1bedc <__assert_fail@plt+0xaa48>
   1bebc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1bec0:	cmn	r0, #1
   1bec4:	movw	r0, #0
   1bec8:	movne	r0, #1
   1becc:	and	r0, r0, #1
   1bed0:	add	r0, r0, #1
   1bed4:	str	r0, [fp, #-4]
   1bed8:	b	1c058 <__assert_fail@plt+0xabc4>
   1bedc:	sub	r0, fp, #40	; 0x28
   1bee0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1bee4:	add	r1, r1, #2
   1bee8:	str	r1, [fp, #-48]	; 0xffffffd0
   1beec:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1bef0:	bl	194cc <__assert_fail@plt+0x8038>
   1bef4:	str	r0, [sp, #48]	; 0x30
   1bef8:	ldr	r0, [sp, #48]	; 0x30
   1befc:	cmp	r0, #0
   1bf00:	bne	1bf10 <__assert_fail@plt+0xaa7c>
   1bf04:	movw	r0, #0
   1bf08:	str	r0, [fp, #-4]
   1bf0c:	b	1c058 <__assert_fail@plt+0xabc4>
   1bf10:	b	1bf14 <__assert_fail@plt+0xaa80>
   1bf14:	ldr	r0, [sp, #48]	; 0x30
   1bf18:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1bf1c:	bl	203f4 <__assert_fail@plt+0xef60>
   1bf20:	cmp	r0, #1
   1bf24:	beq	1beac <__assert_fail@plt+0xaa18>
   1bf28:	sub	r0, fp, #28
   1bf2c:	bl	15e94 <__assert_fail@plt+0x4a00>
   1bf30:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1bf34:	ldr	r0, [r0]
   1bf38:	mvn	lr, #0
   1bf3c:	eor	r0, r0, lr
   1bf40:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1bf44:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1bf48:	movw	r1, #0
   1bf4c:	str	lr, [sp]
   1bf50:	bl	14d78 <__assert_fail@plt+0x38e4>
   1bf54:	str	r0, [fp, #-16]
   1bf58:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1bf5c:	and	r0, r0, #2
   1bf60:	cmp	r0, #0
   1bf64:	beq	1bf7c <__assert_fail@plt+0xaae8>
   1bf68:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1bf6c:	lsr	r0, r0, #2
   1bf70:	add	r0, r0, #1
   1bf74:	str	r0, [sp, #20]
   1bf78:	b	1bf90 <__assert_fail@plt+0xaafc>
   1bf7c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1bf80:	lsr	r0, r0, #2
   1bf84:	movw	r1, #0
   1bf88:	sub	r0, r1, r0
   1bf8c:	str	r0, [sp, #20]
   1bf90:	ldr	r0, [sp, #20]
   1bf94:	sub	r1, fp, #40	; 0x28
   1bf98:	sub	r2, fp, #28
   1bf9c:	str	r0, [sp, #52]	; 0x34
   1bfa0:	ldr	r0, [fp, #-12]
   1bfa4:	ldr	r3, [sp, #52]	; 0x34
   1bfa8:	ldr	ip, [fp, #-16]
   1bfac:	str	r0, [sp, #16]
   1bfb0:	mov	r0, r2
   1bfb4:	ldr	r2, [sp, #16]
   1bfb8:	str	r1, [sp, #12]
   1bfbc:	mov	r1, r2
   1bfc0:	mov	r2, r3
   1bfc4:	mov	r3, ip
   1bfc8:	ldr	ip, [sp, #12]
   1bfcc:	str	ip, [sp]
   1bfd0:	bl	20720 <__assert_fail@plt+0xf28c>
   1bfd4:	cmp	r0, #0
   1bfd8:	bne	1c038 <__assert_fail@plt+0xaba4>
   1bfdc:	b	1bfe0 <__assert_fail@plt+0xab4c>
   1bfe0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bfe4:	cmp	r0, #0
   1bfe8:	movw	r0, #0
   1bfec:	str	r0, [sp, #8]
   1bff0:	beq	1c014 <__assert_fail@plt+0xab80>
   1bff4:	ldr	r0, [fp, #-16]
   1bff8:	mvn	r1, #0
   1bffc:	add	r0, r0, r1
   1c000:	str	r0, [fp, #-16]
   1c004:	cmp	r0, #0
   1c008:	movw	r0, #0
   1c00c:	movne	r0, #1
   1c010:	str	r0, [sp, #8]
   1c014:	ldr	r0, [sp, #8]
   1c018:	tst	r0, #1
   1c01c:	beq	1c034 <__assert_fail@plt+0xaba0>
   1c020:	sub	r2, fp, #40	; 0x28
   1c024:	sub	r0, fp, #28
   1c028:	ldr	r1, [fp, #-12]
   1c02c:	bl	20a00 <__assert_fail@plt+0xf56c>
   1c030:	b	1bfe0 <__assert_fail@plt+0xab4c>
   1c034:	b	1c038 <__assert_fail@plt+0xaba4>
   1c038:	sub	r0, fp, #28
   1c03c:	bl	15f6c <__assert_fail@plt+0x4ad8>
   1c040:	ldr	r0, [fp, #-16]
   1c044:	cmp	r0, #0
   1c048:	movw	r0, #0
   1c04c:	movne	r0, #1
   1c050:	and	r0, r0, #1
   1c054:	str	r0, [fp, #-4]
   1c058:	ldr	r0, [fp, #-4]
   1c05c:	mov	sp, fp
   1c060:	pop	{fp, pc}
   1c064:	sub	sp, sp, #40	; 0x28
   1c068:	str	r0, [sp, #32]
   1c06c:	str	r1, [sp, #28]
   1c070:	ldr	r0, [sp, #32]
   1c074:	ldr	r0, [r0, #4]
   1c078:	str	r0, [sp, #16]
   1c07c:	ldr	r0, [sp, #16]
   1c080:	cmp	r0, #0
   1c084:	blt	1c094 <__assert_fail@plt+0xac00>
   1c088:	ldr	r0, [sp, #16]
   1c08c:	str	r0, [sp]
   1c090:	b	1c0a4 <__assert_fail@plt+0xac10>
   1c094:	ldr	r0, [sp, #16]
   1c098:	movw	r1, #0
   1c09c:	sub	r0, r1, r0
   1c0a0:	str	r0, [sp]
   1c0a4:	ldr	r0, [sp]
   1c0a8:	str	r0, [sp, #12]
   1c0ac:	ldr	r0, [sp, #28]
   1c0b0:	lsr	r0, r0, #5
   1c0b4:	str	r0, [sp, #24]
   1c0b8:	ldr	r0, [sp, #24]
   1c0bc:	ldr	r1, [sp, #12]
   1c0c0:	cmp	r0, r1
   1c0c4:	blt	1c0e4 <__assert_fail@plt+0xac50>
   1c0c8:	ldr	r0, [sp, #16]
   1c0cc:	cmp	r0, #0
   1c0d0:	movw	r0, #0
   1c0d4:	movlt	r0, #1
   1c0d8:	and	r0, r0, #1
   1c0dc:	str	r0, [sp, #36]	; 0x24
   1c0e0:	b	1c1b8 <__assert_fail@plt+0xad24>
   1c0e4:	ldr	r0, [sp, #28]
   1c0e8:	and	r0, r0, #31
   1c0ec:	str	r0, [sp, #20]
   1c0f0:	ldr	r0, [sp, #32]
   1c0f4:	ldr	r0, [r0, #8]
   1c0f8:	ldr	r1, [sp, #24]
   1c0fc:	add	r0, r0, r1, lsl #2
   1c100:	ldr	r0, [r0]
   1c104:	str	r0, [sp, #8]
   1c108:	ldr	r0, [sp, #8]
   1c10c:	ldr	r1, [sp, #20]
   1c110:	lsr	r0, r0, r1
   1c114:	and	r0, r0, #1
   1c118:	str	r0, [sp, #4]
   1c11c:	ldr	r0, [sp, #16]
   1c120:	cmp	r0, #0
   1c124:	bge	1c1b0 <__assert_fail@plt+0xad1c>
   1c128:	ldr	r0, [sp, #20]
   1c12c:	cmp	r0, #0
   1c130:	bls	1c160 <__assert_fail@plt+0xaccc>
   1c134:	ldr	r0, [sp, #8]
   1c138:	ldr	r1, [sp, #20]
   1c13c:	movw	r2, #32
   1c140:	sub	r1, r2, r1
   1c144:	lsl	r0, r0, r1
   1c148:	cmp	r0, #0
   1c14c:	bls	1c160 <__assert_fail@plt+0xaccc>
   1c150:	ldr	r0, [sp, #4]
   1c154:	eor	r0, r0, #1
   1c158:	str	r0, [sp, #36]	; 0x24
   1c15c:	b	1c1b8 <__assert_fail@plt+0xad24>
   1c160:	b	1c164 <__assert_fail@plt+0xacd0>
   1c164:	ldr	r0, [sp, #24]
   1c168:	mvn	r1, #0
   1c16c:	add	r0, r0, r1
   1c170:	str	r0, [sp, #24]
   1c174:	cmp	r0, #0
   1c178:	blt	1c1ac <__assert_fail@plt+0xad18>
   1c17c:	ldr	r0, [sp, #32]
   1c180:	ldr	r0, [r0, #8]
   1c184:	ldr	r1, [sp, #24]
   1c188:	add	r0, r0, r1, lsl #2
   1c18c:	ldr	r0, [r0]
   1c190:	cmp	r0, #0
   1c194:	bls	1c1a8 <__assert_fail@plt+0xad14>
   1c198:	ldr	r0, [sp, #4]
   1c19c:	eor	r0, r0, #1
   1c1a0:	str	r0, [sp, #36]	; 0x24
   1c1a4:	b	1c1b8 <__assert_fail@plt+0xad24>
   1c1a8:	b	1c164 <__assert_fail@plt+0xacd0>
   1c1ac:	b	1c1b0 <__assert_fail@plt+0xad1c>
   1c1b0:	ldr	r0, [sp, #4]
   1c1b4:	str	r0, [sp, #36]	; 0x24
   1c1b8:	ldr	r0, [sp, #36]	; 0x24
   1c1bc:	add	sp, sp, #40	; 0x28
   1c1c0:	bx	lr
   1c1c4:	push	{fp, lr}
   1c1c8:	mov	fp, sp
   1c1cc:	sub	sp, sp, #56	; 0x38
   1c1d0:	str	r0, [fp, #-4]
   1c1d4:	str	r1, [fp, #-8]
   1c1d8:	ldr	r0, [fp, #-4]
   1c1dc:	ldr	r0, [r0, #4]
   1c1e0:	cmp	r0, #0
   1c1e4:	blt	1c1f8 <__assert_fail@plt+0xad64>
   1c1e8:	ldr	r0, [fp, #-4]
   1c1ec:	ldr	r0, [r0, #4]
   1c1f0:	str	r0, [sp, #20]
   1c1f4:	b	1c20c <__assert_fail@plt+0xad78>
   1c1f8:	ldr	r0, [fp, #-4]
   1c1fc:	ldr	r0, [r0, #4]
   1c200:	movw	r1, #0
   1c204:	sub	r0, r1, r0
   1c208:	str	r0, [sp, #20]
   1c20c:	ldr	r0, [sp, #20]
   1c210:	str	r0, [fp, #-12]
   1c214:	ldr	r0, [fp, #-8]
   1c218:	lsr	r0, r0, #5
   1c21c:	str	r0, [fp, #-16]
   1c220:	ldr	r0, [fp, #-8]
   1c224:	and	r0, r0, #31
   1c228:	movw	r1, #1
   1c22c:	lsl	r0, r1, r0
   1c230:	str	r0, [fp, #-20]	; 0xffffffec
   1c234:	ldr	r0, [fp, #-16]
   1c238:	ldr	r1, [fp, #-12]
   1c23c:	cmp	r0, r1
   1c240:	blt	1c2e8 <__assert_fail@plt+0xae54>
   1c244:	ldr	r0, [fp, #-16]
   1c248:	add	r0, r0, #1
   1c24c:	ldr	r1, [fp, #-4]
   1c250:	ldr	r1, [r1]
   1c254:	cmp	r0, r1
   1c258:	ble	1c274 <__assert_fail@plt+0xade0>
   1c25c:	ldr	r0, [fp, #-4]
   1c260:	ldr	r1, [fp, #-16]
   1c264:	add	r1, r1, #1
   1c268:	bl	16114 <__assert_fail@plt+0x4c80>
   1c26c:	str	r0, [sp, #16]
   1c270:	b	1c280 <__assert_fail@plt+0xadec>
   1c274:	ldr	r0, [fp, #-4]
   1c278:	ldr	r0, [r0, #8]
   1c27c:	str	r0, [sp, #16]
   1c280:	ldr	r0, [sp, #16]
   1c284:	str	r0, [fp, #-24]	; 0xffffffe8
   1c288:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c28c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c290:	ldr	r2, [fp, #-16]
   1c294:	add	r1, r1, r2, lsl #2
   1c298:	str	r0, [r1]
   1c29c:	ldr	r0, [fp, #-12]
   1c2a0:	str	r0, [sp, #28]
   1c2a4:	ldr	r0, [sp, #28]
   1c2a8:	ldr	r1, [fp, #-16]
   1c2ac:	cmp	r0, r1
   1c2b0:	bge	1c2d8 <__assert_fail@plt+0xae44>
   1c2b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c2b8:	ldr	r1, [sp, #28]
   1c2bc:	add	r0, r0, r1, lsl #2
   1c2c0:	movw	r1, #0
   1c2c4:	str	r1, [r0]
   1c2c8:	ldr	r0, [sp, #28]
   1c2cc:	add	r0, r0, #1
   1c2d0:	str	r0, [sp, #28]
   1c2d4:	b	1c2a4 <__assert_fail@plt+0xae10>
   1c2d8:	ldr	r0, [fp, #-16]
   1c2dc:	add	r0, r0, #1
   1c2e0:	str	r0, [fp, #-12]
   1c2e4:	b	1c398 <__assert_fail@plt+0xaf04>
   1c2e8:	ldr	r0, [fp, #-4]
   1c2ec:	ldr	r0, [r0, #8]
   1c2f0:	str	r0, [fp, #-24]	; 0xffffffe8
   1c2f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c2f8:	ldr	r1, [fp, #-16]
   1c2fc:	add	r0, r0, r1, lsl #2
   1c300:	mov	r1, r0
   1c304:	ldr	r2, [fp, #-12]
   1c308:	ldr	r3, [fp, #-16]
   1c30c:	sub	r2, r2, r3
   1c310:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c314:	str	r0, [sp, #12]
   1c318:	mov	r0, r1
   1c31c:	ldr	r1, [sp, #12]
   1c320:	bl	13d18 <__assert_fail@plt+0x2884>
   1c324:	str	r0, [sp, #24]
   1c328:	ldr	r0, [sp, #24]
   1c32c:	cmp	r0, #0
   1c330:	bls	1c394 <__assert_fail@plt+0xaf00>
   1c334:	ldr	r0, [fp, #-12]
   1c338:	add	r0, r0, #1
   1c33c:	ldr	r1, [fp, #-4]
   1c340:	ldr	r1, [r1]
   1c344:	cmp	r0, r1
   1c348:	ble	1c364 <__assert_fail@plt+0xaed0>
   1c34c:	ldr	r0, [fp, #-4]
   1c350:	ldr	r1, [fp, #-12]
   1c354:	add	r1, r1, #1
   1c358:	bl	16114 <__assert_fail@plt+0x4c80>
   1c35c:	str	r0, [sp, #8]
   1c360:	b	1c370 <__assert_fail@plt+0xaedc>
   1c364:	ldr	r0, [fp, #-4]
   1c368:	ldr	r0, [r0, #8]
   1c36c:	str	r0, [sp, #8]
   1c370:	ldr	r0, [sp, #8]
   1c374:	str	r0, [fp, #-24]	; 0xffffffe8
   1c378:	ldr	r0, [sp, #24]
   1c37c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c380:	ldr	r2, [fp, #-12]
   1c384:	add	r3, r2, #1
   1c388:	str	r3, [fp, #-12]
   1c38c:	add	r1, r1, r2, lsl #2
   1c390:	str	r0, [r1]
   1c394:	b	1c398 <__assert_fail@plt+0xaf04>
   1c398:	ldr	r0, [fp, #-4]
   1c39c:	ldr	r0, [r0, #4]
   1c3a0:	cmp	r0, #0
   1c3a4:	bge	1c3bc <__assert_fail@plt+0xaf28>
   1c3a8:	ldr	r0, [fp, #-12]
   1c3ac:	movw	r1, #0
   1c3b0:	sub	r0, r1, r0
   1c3b4:	str	r0, [sp, #4]
   1c3b8:	b	1c3c4 <__assert_fail@plt+0xaf30>
   1c3bc:	ldr	r0, [fp, #-12]
   1c3c0:	str	r0, [sp, #4]
   1c3c4:	ldr	r0, [sp, #4]
   1c3c8:	ldr	r1, [fp, #-4]
   1c3cc:	str	r0, [r1, #4]
   1c3d0:	mov	sp, fp
   1c3d4:	pop	{fp, pc}
   1c3d8:	push	{fp, lr}
   1c3dc:	mov	fp, sp
   1c3e0:	sub	sp, sp, #40	; 0x28
   1c3e4:	str	r0, [fp, #-4]
   1c3e8:	str	r1, [fp, #-8]
   1c3ec:	ldr	r0, [fp, #-4]
   1c3f0:	ldr	r0, [r0, #4]
   1c3f4:	cmp	r0, #0
   1c3f8:	blt	1c40c <__assert_fail@plt+0xaf78>
   1c3fc:	ldr	r0, [fp, #-4]
   1c400:	ldr	r0, [r0, #4]
   1c404:	str	r0, [sp, #8]
   1c408:	b	1c420 <__assert_fail@plt+0xaf8c>
   1c40c:	ldr	r0, [fp, #-4]
   1c410:	ldr	r0, [r0, #4]
   1c414:	movw	r1, #0
   1c418:	sub	r0, r1, r0
   1c41c:	str	r0, [sp, #8]
   1c420:	ldr	r0, [sp, #8]
   1c424:	str	r0, [fp, #-12]
   1c428:	ldr	r0, [fp, #-4]
   1c42c:	ldr	r0, [r0, #8]
   1c430:	str	r0, [sp, #20]
   1c434:	ldr	r0, [fp, #-8]
   1c438:	lsr	r0, r0, #5
   1c43c:	str	r0, [fp, #-16]
   1c440:	ldr	r0, [fp, #-8]
   1c444:	and	r0, r0, #31
   1c448:	movw	r1, #1
   1c44c:	lsl	r0, r1, r0
   1c450:	str	r0, [sp, #16]
   1c454:	ldr	r0, [fp, #-16]
   1c458:	ldr	r1, [fp, #-12]
   1c45c:	cmp	r0, r1
   1c460:	bge	1c468 <__assert_fail@plt+0xafd4>
   1c464:	b	1c488 <__assert_fail@plt+0xaff4>
   1c468:	movw	r0, #22090	; 0x564a
   1c46c:	movt	r0, #4
   1c470:	movw	r1, #17404	; 0x43fc
   1c474:	movt	r1, #4
   1c478:	movw	r2, #3753	; 0xea9
   1c47c:	movw	r3, #22106	; 0x565a
   1c480:	movt	r3, #4
   1c484:	bl	11494 <__assert_fail@plt>
   1c488:	b	1c48c <__assert_fail@plt+0xaff8>
   1c48c:	ldr	r0, [sp, #20]
   1c490:	ldr	r1, [fp, #-16]
   1c494:	add	r0, r0, r1, lsl #2
   1c498:	mov	r1, r0
   1c49c:	ldr	r2, [fp, #-12]
   1c4a0:	ldr	r3, [fp, #-16]
   1c4a4:	sub	r2, r2, r3
   1c4a8:	ldr	r3, [sp, #16]
   1c4ac:	str	r0, [sp, #4]
   1c4b0:	mov	r0, r1
   1c4b4:	ldr	r1, [sp, #4]
   1c4b8:	bl	13f60 <__assert_fail@plt+0x2acc>
   1c4bc:	str	r0, [sp, #12]
   1c4c0:	ldr	r0, [sp, #12]
   1c4c4:	cmp	r0, #0
   1c4c8:	bne	1c4d0 <__assert_fail@plt+0xb03c>
   1c4cc:	b	1c4f0 <__assert_fail@plt+0xb05c>
   1c4d0:	movw	r0, #18385	; 0x47d1
   1c4d4:	movt	r0, #4
   1c4d8:	movw	r1, #17404	; 0x43fc
   1c4dc:	movt	r1, #4
   1c4e0:	movw	r2, #3756	; 0xeac
   1c4e4:	movw	r3, #22106	; 0x565a
   1c4e8:	movt	r3, #4
   1c4ec:	bl	11494 <__assert_fail@plt>
   1c4f0:	b	1c4f4 <__assert_fail@plt+0xb060>
   1c4f4:	ldr	r0, [sp, #20]
   1c4f8:	ldr	r1, [fp, #-12]
   1c4fc:	bl	13c64 <__assert_fail@plt+0x27d0>
   1c500:	str	r0, [fp, #-12]
   1c504:	ldr	r0, [fp, #-4]
   1c508:	ldr	r0, [r0, #4]
   1c50c:	cmp	r0, #0
   1c510:	bge	1c528 <__assert_fail@plt+0xb094>
   1c514:	ldr	r0, [fp, #-12]
   1c518:	movw	r1, #0
   1c51c:	sub	r0, r1, r0
   1c520:	str	r0, [sp]
   1c524:	b	1c530 <__assert_fail@plt+0xb09c>
   1c528:	ldr	r0, [fp, #-12]
   1c52c:	str	r0, [sp]
   1c530:	ldr	r0, [sp]
   1c534:	ldr	r1, [fp, #-4]
   1c538:	str	r0, [r1, #4]
   1c53c:	mov	sp, fp
   1c540:	pop	{fp, pc}
   1c544:	push	{fp, lr}
   1c548:	mov	fp, sp
   1c54c:	sub	sp, sp, #8
   1c550:	str	r0, [sp, #4]
   1c554:	str	r1, [sp]
   1c558:	ldr	r0, [sp, #4]
   1c55c:	ldr	r1, [sp]
   1c560:	bl	1c064 <__assert_fail@plt+0xabd0>
   1c564:	cmp	r0, #0
   1c568:	beq	1c59c <__assert_fail@plt+0xb108>
   1c56c:	ldr	r0, [sp, #4]
   1c570:	ldr	r0, [r0, #4]
   1c574:	cmp	r0, #0
   1c578:	blt	1c58c <__assert_fail@plt+0xb0f8>
   1c57c:	ldr	r0, [sp, #4]
   1c580:	ldr	r1, [sp]
   1c584:	bl	1c3d8 <__assert_fail@plt+0xaf44>
   1c588:	b	1c598 <__assert_fail@plt+0xb104>
   1c58c:	ldr	r0, [sp, #4]
   1c590:	ldr	r1, [sp]
   1c594:	bl	1c1c4 <__assert_fail@plt+0xad30>
   1c598:	b	1c59c <__assert_fail@plt+0xb108>
   1c59c:	mov	sp, fp
   1c5a0:	pop	{fp, pc}
   1c5a4:	push	{fp, lr}
   1c5a8:	mov	fp, sp
   1c5ac:	sub	sp, sp, #8
   1c5b0:	str	r0, [sp, #4]
   1c5b4:	str	r1, [sp]
   1c5b8:	ldr	r0, [sp, #4]
   1c5bc:	ldr	r1, [sp]
   1c5c0:	bl	1c064 <__assert_fail@plt+0xabd0>
   1c5c4:	ldr	r1, [sp, #4]
   1c5c8:	ldr	r1, [r1, #4]
   1c5cc:	cmp	r1, #0
   1c5d0:	movw	r1, #0
   1c5d4:	movlt	r1, #1
   1c5d8:	and	r1, r1, #1
   1c5dc:	eor	r0, r0, r1
   1c5e0:	cmp	r0, #0
   1c5e4:	beq	1c5f8 <__assert_fail@plt+0xb164>
   1c5e8:	ldr	r0, [sp, #4]
   1c5ec:	ldr	r1, [sp]
   1c5f0:	bl	1c3d8 <__assert_fail@plt+0xaf44>
   1c5f4:	b	1c604 <__assert_fail@plt+0xb170>
   1c5f8:	ldr	r0, [sp, #4]
   1c5fc:	ldr	r1, [sp]
   1c600:	bl	1c1c4 <__assert_fail@plt+0xad30>
   1c604:	mov	sp, fp
   1c608:	pop	{fp, pc}
   1c60c:	push	{fp, lr}
   1c610:	mov	fp, sp
   1c614:	sub	sp, sp, #8
   1c618:	str	r0, [sp, #4]
   1c61c:	str	r1, [sp]
   1c620:	ldr	r0, [sp, #4]
   1c624:	ldr	r1, [sp]
   1c628:	movw	r2, #1
   1c62c:	bl	17678 <__assert_fail@plt+0x61e4>
   1c630:	ldr	r0, [sp, #4]
   1c634:	ldr	r1, [sp, #4]
   1c638:	bl	175a4 <__assert_fail@plt+0x6110>
   1c63c:	mov	sp, fp
   1c640:	pop	{fp, pc}
   1c644:	push	{fp, lr}
   1c648:	mov	fp, sp
   1c64c:	sub	sp, sp, #104	; 0x68
   1c650:	str	r0, [fp, #-4]
   1c654:	str	r1, [fp, #-8]
   1c658:	str	r2, [fp, #-12]
   1c65c:	ldr	r0, [fp, #-8]
   1c660:	ldr	r0, [r0, #4]
   1c664:	cmp	r0, #0
   1c668:	blt	1c67c <__assert_fail@plt+0xb1e8>
   1c66c:	ldr	r0, [fp, #-8]
   1c670:	ldr	r0, [r0, #4]
   1c674:	str	r0, [sp, #16]
   1c678:	b	1c690 <__assert_fail@plt+0xb1fc>
   1c67c:	ldr	r0, [fp, #-8]
   1c680:	ldr	r0, [r0, #4]
   1c684:	movw	r1, #0
   1c688:	sub	r0, r1, r0
   1c68c:	str	r0, [sp, #16]
   1c690:	ldr	r0, [sp, #16]
   1c694:	str	r0, [fp, #-16]
   1c698:	ldr	r0, [fp, #-12]
   1c69c:	ldr	r0, [r0, #4]
   1c6a0:	cmp	r0, #0
   1c6a4:	blt	1c6b8 <__assert_fail@plt+0xb224>
   1c6a8:	ldr	r0, [fp, #-12]
   1c6ac:	ldr	r0, [r0, #4]
   1c6b0:	str	r0, [sp, #12]
   1c6b4:	b	1c6cc <__assert_fail@plt+0xb238>
   1c6b8:	ldr	r0, [fp, #-12]
   1c6bc:	ldr	r0, [r0, #4]
   1c6c0:	movw	r1, #0
   1c6c4:	sub	r0, r1, r0
   1c6c8:	str	r0, [sp, #12]
   1c6cc:	ldr	r0, [sp, #12]
   1c6d0:	str	r0, [fp, #-20]	; 0xffffffec
   1c6d4:	ldr	r0, [fp, #-16]
   1c6d8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1c6dc:	cmp	r0, r1
   1c6e0:	bge	1c720 <__assert_fail@plt+0xb28c>
   1c6e4:	b	1c6e8 <__assert_fail@plt+0xb254>
   1c6e8:	ldr	r0, [fp, #-8]
   1c6ec:	str	r0, [sp, #24]
   1c6f0:	ldr	r0, [fp, #-12]
   1c6f4:	str	r0, [fp, #-8]
   1c6f8:	ldr	r0, [sp, #24]
   1c6fc:	str	r0, [fp, #-12]
   1c700:	b	1c704 <__assert_fail@plt+0xb270>
   1c704:	ldr	r0, [fp, #-16]
   1c708:	str	r0, [sp, #20]
   1c70c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c710:	str	r0, [fp, #-16]
   1c714:	ldr	r0, [sp, #20]
   1c718:	str	r0, [fp, #-20]	; 0xffffffec
   1c71c:	b	1c720 <__assert_fail@plt+0xb28c>
   1c720:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c724:	cmp	r0, #0
   1c728:	bne	1c73c <__assert_fail@plt+0xb2a8>
   1c72c:	ldr	r0, [fp, #-4]
   1c730:	movw	r1, #0
   1c734:	str	r1, [r0, #4]
   1c738:	b	1ca5c <__assert_fail@plt+0xb5c8>
   1c73c:	ldr	r0, [fp, #-8]
   1c740:	ldr	r0, [r0, #4]
   1c744:	cmp	r0, #0
   1c748:	movw	r0, #0
   1c74c:	movlt	r0, #1
   1c750:	and	r0, r0, #1
   1c754:	str	r0, [sp, #48]	; 0x30
   1c758:	ldr	r0, [fp, #-12]
   1c75c:	ldr	r0, [r0, #4]
   1c760:	cmp	r0, #0
   1c764:	movw	r0, #0
   1c768:	movlt	r0, #1
   1c76c:	and	r0, r0, #1
   1c770:	str	r0, [sp, #44]	; 0x2c
   1c774:	ldr	r0, [sp, #48]	; 0x30
   1c778:	ldr	r1, [sp, #44]	; 0x2c
   1c77c:	and	r0, r0, r1
   1c780:	str	r0, [sp, #40]	; 0x28
   1c784:	ldr	r0, [sp, #48]	; 0x30
   1c788:	movw	r1, #0
   1c78c:	sub	r0, r1, r0
   1c790:	str	r0, [fp, #-44]	; 0xffffffd4
   1c794:	ldr	r0, [sp, #44]	; 0x2c
   1c798:	sub	r0, r1, r0
   1c79c:	str	r0, [fp, #-48]	; 0xffffffd0
   1c7a0:	ldr	r0, [sp, #40]	; 0x28
   1c7a4:	sub	r0, r1, r0
   1c7a8:	str	r0, [sp, #52]	; 0x34
   1c7ac:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1c7b0:	cmp	r0, #0
   1c7b4:	beq	1c7c4 <__assert_fail@plt+0xb330>
   1c7b8:	ldr	r0, [fp, #-16]
   1c7bc:	str	r0, [sp, #8]
   1c7c0:	b	1c7cc <__assert_fail@plt+0xb338>
   1c7c4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c7c8:	str	r0, [sp, #8]
   1c7cc:	ldr	r0, [sp, #8]
   1c7d0:	str	r0, [fp, #-24]	; 0xffffffe8
   1c7d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c7d8:	ldr	r1, [sp, #40]	; 0x28
   1c7dc:	add	r0, r0, r1
   1c7e0:	ldr	r1, [fp, #-4]
   1c7e4:	ldr	r1, [r1]
   1c7e8:	cmp	r0, r1
   1c7ec:	ble	1c80c <__assert_fail@plt+0xb378>
   1c7f0:	ldr	r0, [fp, #-4]
   1c7f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c7f8:	ldr	r2, [sp, #40]	; 0x28
   1c7fc:	add	r1, r1, r2
   1c800:	bl	16114 <__assert_fail@plt+0x4c80>
   1c804:	str	r0, [sp, #4]
   1c808:	b	1c818 <__assert_fail@plt+0xb384>
   1c80c:	ldr	r0, [fp, #-4]
   1c810:	ldr	r0, [r0, #8]
   1c814:	str	r0, [sp, #4]
   1c818:	ldr	r0, [sp, #4]
   1c81c:	str	r0, [fp, #-40]	; 0xffffffd8
   1c820:	ldr	r0, [fp, #-8]
   1c824:	ldr	r0, [r0, #8]
   1c828:	str	r0, [fp, #-32]	; 0xffffffe0
   1c82c:	ldr	r0, [fp, #-12]
   1c830:	ldr	r0, [r0, #8]
   1c834:	str	r0, [fp, #-36]	; 0xffffffdc
   1c838:	movw	r0, #0
   1c83c:	str	r0, [fp, #-28]	; 0xffffffe4
   1c840:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c844:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1c848:	ldr	r0, [r0, r1, lsl #2]
   1c84c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1c850:	eor	r0, r0, r1
   1c854:	ldr	r1, [sp, #48]	; 0x30
   1c858:	add	r0, r0, r1
   1c85c:	str	r0, [sp, #36]	; 0x24
   1c860:	ldr	r0, [sp, #36]	; 0x24
   1c864:	ldr	r1, [sp, #48]	; 0x30
   1c868:	mov	r2, #0
   1c86c:	cmp	r0, r1
   1c870:	mov	r0, r2
   1c874:	movwcc	r0, #1
   1c878:	str	r0, [sp, #48]	; 0x30
   1c87c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c880:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1c884:	ldr	r0, [r0, r1, lsl #2]
   1c888:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1c88c:	eor	r0, r0, r1
   1c890:	ldr	r1, [sp, #44]	; 0x2c
   1c894:	add	r0, r0, r1
   1c898:	str	r0, [sp, #32]
   1c89c:	ldr	r0, [sp, #32]
   1c8a0:	ldr	r1, [sp, #44]	; 0x2c
   1c8a4:	cmp	r0, r1
   1c8a8:	mov	r0, r2
   1c8ac:	movwcc	r0, #1
   1c8b0:	str	r0, [sp, #44]	; 0x2c
   1c8b4:	ldr	r0, [sp, #36]	; 0x24
   1c8b8:	ldr	r1, [sp, #32]
   1c8bc:	and	r0, r0, r1
   1c8c0:	ldr	r1, [sp, #52]	; 0x34
   1c8c4:	eor	r0, r0, r1
   1c8c8:	ldr	r1, [sp, #40]	; 0x28
   1c8cc:	add	r0, r0, r1
   1c8d0:	str	r0, [sp, #28]
   1c8d4:	ldr	r0, [sp, #28]
   1c8d8:	ldr	r1, [sp, #40]	; 0x28
   1c8dc:	cmp	r0, r1
   1c8e0:	movwcc	r2, #1
   1c8e4:	str	r2, [sp, #40]	; 0x28
   1c8e8:	ldr	r0, [sp, #28]
   1c8ec:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1c8f0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1c8f4:	add	r1, r1, r2, lsl #2
   1c8f8:	str	r0, [r1]
   1c8fc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1c900:	add	r0, r0, #1
   1c904:	str	r0, [fp, #-28]	; 0xffffffe4
   1c908:	ldr	r1, [fp, #-20]	; 0xffffffec
   1c90c:	cmp	r0, r1
   1c910:	blt	1c840 <__assert_fail@plt+0xb3ac>
   1c914:	ldr	r0, [sp, #44]	; 0x2c
   1c918:	cmp	r0, #0
   1c91c:	bne	1c924 <__assert_fail@plt+0xb490>
   1c920:	b	1c944 <__assert_fail@plt+0xb4b0>
   1c924:	movw	r0, #19154	; 0x4ad2
   1c928:	movt	r0, #4
   1c92c:	movw	r1, #17404	; 0x43fc
   1c930:	movt	r1, #4
   1c934:	movw	r2, #3854	; 0xf0e
   1c938:	movw	r3, #19162	; 0x4ada
   1c93c:	movt	r3, #4
   1c940:	bl	11494 <__assert_fail@plt>
   1c944:	b	1c948 <__assert_fail@plt+0xb4b4>
   1c948:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1c94c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c950:	cmp	r0, r1
   1c954:	bge	1c9ec <__assert_fail@plt+0xb558>
   1c958:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c95c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1c960:	ldr	r0, [r0, r1, lsl #2]
   1c964:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1c968:	eor	r0, r0, r1
   1c96c:	ldr	r1, [sp, #48]	; 0x30
   1c970:	add	r0, r0, r1
   1c974:	str	r0, [sp, #36]	; 0x24
   1c978:	ldr	r0, [sp, #36]	; 0x24
   1c97c:	ldr	r1, [sp, #48]	; 0x30
   1c980:	mov	r2, #0
   1c984:	cmp	r0, r1
   1c988:	mov	r0, r2
   1c98c:	movwcc	r0, #1
   1c990:	str	r0, [sp, #48]	; 0x30
   1c994:	ldr	r0, [sp, #36]	; 0x24
   1c998:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1c99c:	and	r0, r0, r1
   1c9a0:	ldr	r1, [sp, #52]	; 0x34
   1c9a4:	eor	r0, r0, r1
   1c9a8:	ldr	r1, [sp, #40]	; 0x28
   1c9ac:	add	r0, r0, r1
   1c9b0:	str	r0, [sp, #28]
   1c9b4:	ldr	r0, [sp, #28]
   1c9b8:	ldr	r1, [sp, #40]	; 0x28
   1c9bc:	cmp	r0, r1
   1c9c0:	movwcc	r2, #1
   1c9c4:	str	r2, [sp, #40]	; 0x28
   1c9c8:	ldr	r0, [sp, #28]
   1c9cc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1c9d0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1c9d4:	add	r1, r1, r2, lsl #2
   1c9d8:	str	r0, [r1]
   1c9dc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1c9e0:	add	r0, r0, #1
   1c9e4:	str	r0, [fp, #-28]	; 0xffffffe4
   1c9e8:	b	1c948 <__assert_fail@plt+0xb4b4>
   1c9ec:	ldr	r0, [sp, #40]	; 0x28
   1c9f0:	cmp	r0, #0
   1c9f4:	beq	1ca18 <__assert_fail@plt+0xb584>
   1c9f8:	ldr	r0, [sp, #40]	; 0x28
   1c9fc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1ca00:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1ca04:	add	r3, r2, #1
   1ca08:	str	r3, [fp, #-24]	; 0xffffffe8
   1ca0c:	add	r1, r1, r2, lsl #2
   1ca10:	str	r0, [r1]
   1ca14:	b	1ca28 <__assert_fail@plt+0xb594>
   1ca18:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ca1c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ca20:	bl	13c64 <__assert_fail@plt+0x27d0>
   1ca24:	str	r0, [fp, #-24]	; 0xffffffe8
   1ca28:	ldr	r0, [sp, #52]	; 0x34
   1ca2c:	cmp	r0, #0
   1ca30:	beq	1ca48 <__assert_fail@plt+0xb5b4>
   1ca34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ca38:	movw	r1, #0
   1ca3c:	sub	r0, r1, r0
   1ca40:	str	r0, [sp]
   1ca44:	b	1ca50 <__assert_fail@plt+0xb5bc>
   1ca48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ca4c:	str	r0, [sp]
   1ca50:	ldr	r0, [sp]
   1ca54:	ldr	r1, [fp, #-4]
   1ca58:	str	r0, [r1, #4]
   1ca5c:	mov	sp, fp
   1ca60:	pop	{fp, pc}
   1ca64:	push	{fp, lr}
   1ca68:	mov	fp, sp
   1ca6c:	sub	sp, sp, #104	; 0x68
   1ca70:	str	r0, [fp, #-4]
   1ca74:	str	r1, [fp, #-8]
   1ca78:	str	r2, [fp, #-12]
   1ca7c:	ldr	r0, [fp, #-8]
   1ca80:	ldr	r0, [r0, #4]
   1ca84:	cmp	r0, #0
   1ca88:	blt	1ca9c <__assert_fail@plt+0xb608>
   1ca8c:	ldr	r0, [fp, #-8]
   1ca90:	ldr	r0, [r0, #4]
   1ca94:	str	r0, [sp, #16]
   1ca98:	b	1cab0 <__assert_fail@plt+0xb61c>
   1ca9c:	ldr	r0, [fp, #-8]
   1caa0:	ldr	r0, [r0, #4]
   1caa4:	movw	r1, #0
   1caa8:	sub	r0, r1, r0
   1caac:	str	r0, [sp, #16]
   1cab0:	ldr	r0, [sp, #16]
   1cab4:	str	r0, [fp, #-16]
   1cab8:	ldr	r0, [fp, #-12]
   1cabc:	ldr	r0, [r0, #4]
   1cac0:	cmp	r0, #0
   1cac4:	blt	1cad8 <__assert_fail@plt+0xb644>
   1cac8:	ldr	r0, [fp, #-12]
   1cacc:	ldr	r0, [r0, #4]
   1cad0:	str	r0, [sp, #12]
   1cad4:	b	1caec <__assert_fail@plt+0xb658>
   1cad8:	ldr	r0, [fp, #-12]
   1cadc:	ldr	r0, [r0, #4]
   1cae0:	movw	r1, #0
   1cae4:	sub	r0, r1, r0
   1cae8:	str	r0, [sp, #12]
   1caec:	ldr	r0, [sp, #12]
   1caf0:	str	r0, [fp, #-20]	; 0xffffffec
   1caf4:	ldr	r0, [fp, #-16]
   1caf8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1cafc:	cmp	r0, r1
   1cb00:	bge	1cb40 <__assert_fail@plt+0xb6ac>
   1cb04:	b	1cb08 <__assert_fail@plt+0xb674>
   1cb08:	ldr	r0, [fp, #-8]
   1cb0c:	str	r0, [sp, #24]
   1cb10:	ldr	r0, [fp, #-12]
   1cb14:	str	r0, [fp, #-8]
   1cb18:	ldr	r0, [sp, #24]
   1cb1c:	str	r0, [fp, #-12]
   1cb20:	b	1cb24 <__assert_fail@plt+0xb690>
   1cb24:	ldr	r0, [fp, #-16]
   1cb28:	str	r0, [sp, #20]
   1cb2c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1cb30:	str	r0, [fp, #-16]
   1cb34:	ldr	r0, [sp, #20]
   1cb38:	str	r0, [fp, #-20]	; 0xffffffec
   1cb3c:	b	1cb40 <__assert_fail@plt+0xb6ac>
   1cb40:	ldr	r0, [fp, #-20]	; 0xffffffec
   1cb44:	cmp	r0, #0
   1cb48:	bne	1cb5c <__assert_fail@plt+0xb6c8>
   1cb4c:	ldr	r0, [fp, #-4]
   1cb50:	ldr	r1, [fp, #-8]
   1cb54:	bl	16204 <__assert_fail@plt+0x4d70>
   1cb58:	b	1ce7c <__assert_fail@plt+0xb9e8>
   1cb5c:	ldr	r0, [fp, #-8]
   1cb60:	ldr	r0, [r0, #4]
   1cb64:	cmp	r0, #0
   1cb68:	movw	r0, #0
   1cb6c:	movlt	r0, #1
   1cb70:	and	r0, r0, #1
   1cb74:	str	r0, [sp, #48]	; 0x30
   1cb78:	ldr	r0, [fp, #-12]
   1cb7c:	ldr	r0, [r0, #4]
   1cb80:	cmp	r0, #0
   1cb84:	movw	r0, #0
   1cb88:	movlt	r0, #1
   1cb8c:	and	r0, r0, #1
   1cb90:	str	r0, [sp, #44]	; 0x2c
   1cb94:	ldr	r0, [sp, #48]	; 0x30
   1cb98:	ldr	r1, [sp, #44]	; 0x2c
   1cb9c:	orr	r0, r0, r1
   1cba0:	str	r0, [sp, #40]	; 0x28
   1cba4:	ldr	r0, [sp, #48]	; 0x30
   1cba8:	movw	r1, #0
   1cbac:	sub	r0, r1, r0
   1cbb0:	str	r0, [fp, #-44]	; 0xffffffd4
   1cbb4:	ldr	r0, [sp, #44]	; 0x2c
   1cbb8:	sub	r0, r1, r0
   1cbbc:	str	r0, [fp, #-48]	; 0xffffffd0
   1cbc0:	ldr	r0, [sp, #40]	; 0x28
   1cbc4:	sub	r0, r1, r0
   1cbc8:	str	r0, [sp, #52]	; 0x34
   1cbcc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1cbd0:	cmp	r0, #0
   1cbd4:	beq	1cbe4 <__assert_fail@plt+0xb750>
   1cbd8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1cbdc:	str	r0, [sp, #8]
   1cbe0:	b	1cbec <__assert_fail@plt+0xb758>
   1cbe4:	ldr	r0, [fp, #-16]
   1cbe8:	str	r0, [sp, #8]
   1cbec:	ldr	r0, [sp, #8]
   1cbf0:	str	r0, [fp, #-24]	; 0xffffffe8
   1cbf4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cbf8:	ldr	r1, [sp, #40]	; 0x28
   1cbfc:	add	r0, r0, r1
   1cc00:	ldr	r1, [fp, #-4]
   1cc04:	ldr	r1, [r1]
   1cc08:	cmp	r0, r1
   1cc0c:	ble	1cc2c <__assert_fail@plt+0xb798>
   1cc10:	ldr	r0, [fp, #-4]
   1cc14:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cc18:	ldr	r2, [sp, #40]	; 0x28
   1cc1c:	add	r1, r1, r2
   1cc20:	bl	16114 <__assert_fail@plt+0x4c80>
   1cc24:	str	r0, [sp, #4]
   1cc28:	b	1cc38 <__assert_fail@plt+0xb7a4>
   1cc2c:	ldr	r0, [fp, #-4]
   1cc30:	ldr	r0, [r0, #8]
   1cc34:	str	r0, [sp, #4]
   1cc38:	ldr	r0, [sp, #4]
   1cc3c:	str	r0, [fp, #-40]	; 0xffffffd8
   1cc40:	ldr	r0, [fp, #-8]
   1cc44:	ldr	r0, [r0, #8]
   1cc48:	str	r0, [fp, #-32]	; 0xffffffe0
   1cc4c:	ldr	r0, [fp, #-12]
   1cc50:	ldr	r0, [r0, #8]
   1cc54:	str	r0, [fp, #-36]	; 0xffffffdc
   1cc58:	movw	r0, #0
   1cc5c:	str	r0, [fp, #-28]	; 0xffffffe4
   1cc60:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1cc64:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1cc68:	ldr	r0, [r0, r1, lsl #2]
   1cc6c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1cc70:	eor	r0, r0, r1
   1cc74:	ldr	r1, [sp, #48]	; 0x30
   1cc78:	add	r0, r0, r1
   1cc7c:	str	r0, [sp, #36]	; 0x24
   1cc80:	ldr	r0, [sp, #36]	; 0x24
   1cc84:	ldr	r1, [sp, #48]	; 0x30
   1cc88:	mov	r2, #0
   1cc8c:	cmp	r0, r1
   1cc90:	mov	r0, r2
   1cc94:	movwcc	r0, #1
   1cc98:	str	r0, [sp, #48]	; 0x30
   1cc9c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1cca0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1cca4:	ldr	r0, [r0, r1, lsl #2]
   1cca8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1ccac:	eor	r0, r0, r1
   1ccb0:	ldr	r1, [sp, #44]	; 0x2c
   1ccb4:	add	r0, r0, r1
   1ccb8:	str	r0, [sp, #32]
   1ccbc:	ldr	r0, [sp, #32]
   1ccc0:	ldr	r1, [sp, #44]	; 0x2c
   1ccc4:	cmp	r0, r1
   1ccc8:	mov	r0, r2
   1cccc:	movwcc	r0, #1
   1ccd0:	str	r0, [sp, #44]	; 0x2c
   1ccd4:	ldr	r0, [sp, #36]	; 0x24
   1ccd8:	ldr	r1, [sp, #32]
   1ccdc:	orr	r0, r0, r1
   1cce0:	ldr	r1, [sp, #52]	; 0x34
   1cce4:	eor	r0, r0, r1
   1cce8:	ldr	r1, [sp, #40]	; 0x28
   1ccec:	add	r0, r0, r1
   1ccf0:	str	r0, [sp, #28]
   1ccf4:	ldr	r0, [sp, #28]
   1ccf8:	ldr	r1, [sp, #40]	; 0x28
   1ccfc:	cmp	r0, r1
   1cd00:	movwcc	r2, #1
   1cd04:	str	r2, [sp, #40]	; 0x28
   1cd08:	ldr	r0, [sp, #28]
   1cd0c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1cd10:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1cd14:	add	r1, r1, r2, lsl #2
   1cd18:	str	r0, [r1]
   1cd1c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1cd20:	add	r0, r0, #1
   1cd24:	str	r0, [fp, #-28]	; 0xffffffe4
   1cd28:	ldr	r1, [fp, #-20]	; 0xffffffec
   1cd2c:	cmp	r0, r1
   1cd30:	blt	1cc60 <__assert_fail@plt+0xb7cc>
   1cd34:	ldr	r0, [sp, #44]	; 0x2c
   1cd38:	cmp	r0, #0
   1cd3c:	bne	1cd44 <__assert_fail@plt+0xb8b0>
   1cd40:	b	1cd64 <__assert_fail@plt+0xb8d0>
   1cd44:	movw	r0, #19154	; 0x4ad2
   1cd48:	movt	r0, #4
   1cd4c:	movw	r1, #17404	; 0x43fc
   1cd50:	movt	r1, #4
   1cd54:	movw	r2, #3927	; 0xf57
   1cd58:	movw	r3, #19235	; 0x4b23
   1cd5c:	movt	r3, #4
   1cd60:	bl	11494 <__assert_fail@plt>
   1cd64:	b	1cd68 <__assert_fail@plt+0xb8d4>
   1cd68:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1cd6c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cd70:	cmp	r0, r1
   1cd74:	bge	1ce0c <__assert_fail@plt+0xb978>
   1cd78:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1cd7c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1cd80:	ldr	r0, [r0, r1, lsl #2]
   1cd84:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1cd88:	eor	r0, r0, r1
   1cd8c:	ldr	r1, [sp, #48]	; 0x30
   1cd90:	add	r0, r0, r1
   1cd94:	str	r0, [sp, #36]	; 0x24
   1cd98:	ldr	r0, [sp, #36]	; 0x24
   1cd9c:	ldr	r1, [sp, #48]	; 0x30
   1cda0:	mov	r2, #0
   1cda4:	cmp	r0, r1
   1cda8:	mov	r0, r2
   1cdac:	movwcc	r0, #1
   1cdb0:	str	r0, [sp, #48]	; 0x30
   1cdb4:	ldr	r0, [sp, #36]	; 0x24
   1cdb8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1cdbc:	orr	r0, r0, r1
   1cdc0:	ldr	r1, [sp, #52]	; 0x34
   1cdc4:	eor	r0, r0, r1
   1cdc8:	ldr	r1, [sp, #40]	; 0x28
   1cdcc:	add	r0, r0, r1
   1cdd0:	str	r0, [sp, #28]
   1cdd4:	ldr	r0, [sp, #28]
   1cdd8:	ldr	r1, [sp, #40]	; 0x28
   1cddc:	cmp	r0, r1
   1cde0:	movwcc	r2, #1
   1cde4:	str	r2, [sp, #40]	; 0x28
   1cde8:	ldr	r0, [sp, #28]
   1cdec:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1cdf0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1cdf4:	add	r1, r1, r2, lsl #2
   1cdf8:	str	r0, [r1]
   1cdfc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ce00:	add	r0, r0, #1
   1ce04:	str	r0, [fp, #-28]	; 0xffffffe4
   1ce08:	b	1cd68 <__assert_fail@plt+0xb8d4>
   1ce0c:	ldr	r0, [sp, #40]	; 0x28
   1ce10:	cmp	r0, #0
   1ce14:	beq	1ce38 <__assert_fail@plt+0xb9a4>
   1ce18:	ldr	r0, [sp, #40]	; 0x28
   1ce1c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1ce20:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1ce24:	add	r3, r2, #1
   1ce28:	str	r3, [fp, #-24]	; 0xffffffe8
   1ce2c:	add	r1, r1, r2, lsl #2
   1ce30:	str	r0, [r1]
   1ce34:	b	1ce48 <__assert_fail@plt+0xb9b4>
   1ce38:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ce3c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ce40:	bl	13c64 <__assert_fail@plt+0x27d0>
   1ce44:	str	r0, [fp, #-24]	; 0xffffffe8
   1ce48:	ldr	r0, [sp, #52]	; 0x34
   1ce4c:	cmp	r0, #0
   1ce50:	beq	1ce68 <__assert_fail@plt+0xb9d4>
   1ce54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ce58:	movw	r1, #0
   1ce5c:	sub	r0, r1, r0
   1ce60:	str	r0, [sp]
   1ce64:	b	1ce70 <__assert_fail@plt+0xb9dc>
   1ce68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ce6c:	str	r0, [sp]
   1ce70:	ldr	r0, [sp]
   1ce74:	ldr	r1, [fp, #-4]
   1ce78:	str	r0, [r1, #4]
   1ce7c:	mov	sp, fp
   1ce80:	pop	{fp, pc}
   1ce84:	push	{fp, lr}
   1ce88:	mov	fp, sp
   1ce8c:	sub	sp, sp, #96	; 0x60
   1ce90:	str	r0, [fp, #-4]
   1ce94:	str	r1, [fp, #-8]
   1ce98:	str	r2, [fp, #-12]
   1ce9c:	ldr	r0, [fp, #-8]
   1cea0:	ldr	r0, [r0, #4]
   1cea4:	cmp	r0, #0
   1cea8:	blt	1cebc <__assert_fail@plt+0xba28>
   1ceac:	ldr	r0, [fp, #-8]
   1ceb0:	ldr	r0, [r0, #4]
   1ceb4:	str	r0, [sp, #12]
   1ceb8:	b	1ced0 <__assert_fail@plt+0xba3c>
   1cebc:	ldr	r0, [fp, #-8]
   1cec0:	ldr	r0, [r0, #4]
   1cec4:	movw	r1, #0
   1cec8:	sub	r0, r1, r0
   1cecc:	str	r0, [sp, #12]
   1ced0:	ldr	r0, [sp, #12]
   1ced4:	str	r0, [fp, #-16]
   1ced8:	ldr	r0, [fp, #-12]
   1cedc:	ldr	r0, [r0, #4]
   1cee0:	cmp	r0, #0
   1cee4:	blt	1cef8 <__assert_fail@plt+0xba64>
   1cee8:	ldr	r0, [fp, #-12]
   1ceec:	ldr	r0, [r0, #4]
   1cef0:	str	r0, [sp, #8]
   1cef4:	b	1cf0c <__assert_fail@plt+0xba78>
   1cef8:	ldr	r0, [fp, #-12]
   1cefc:	ldr	r0, [r0, #4]
   1cf00:	movw	r1, #0
   1cf04:	sub	r0, r1, r0
   1cf08:	str	r0, [sp, #8]
   1cf0c:	ldr	r0, [sp, #8]
   1cf10:	str	r0, [fp, #-20]	; 0xffffffec
   1cf14:	ldr	r0, [fp, #-16]
   1cf18:	ldr	r1, [fp, #-20]	; 0xffffffec
   1cf1c:	cmp	r0, r1
   1cf20:	bge	1cf60 <__assert_fail@plt+0xbacc>
   1cf24:	b	1cf28 <__assert_fail@plt+0xba94>
   1cf28:	ldr	r0, [fp, #-8]
   1cf2c:	str	r0, [sp, #20]
   1cf30:	ldr	r0, [fp, #-12]
   1cf34:	str	r0, [fp, #-8]
   1cf38:	ldr	r0, [sp, #20]
   1cf3c:	str	r0, [fp, #-12]
   1cf40:	b	1cf44 <__assert_fail@plt+0xbab0>
   1cf44:	ldr	r0, [fp, #-16]
   1cf48:	str	r0, [sp, #16]
   1cf4c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1cf50:	str	r0, [fp, #-16]
   1cf54:	ldr	r0, [sp, #16]
   1cf58:	str	r0, [fp, #-20]	; 0xffffffec
   1cf5c:	b	1cf60 <__assert_fail@plt+0xbacc>
   1cf60:	ldr	r0, [fp, #-20]	; 0xffffffec
   1cf64:	cmp	r0, #0
   1cf68:	bne	1cf7c <__assert_fail@plt+0xbae8>
   1cf6c:	ldr	r0, [fp, #-4]
   1cf70:	ldr	r1, [fp, #-8]
   1cf74:	bl	16204 <__assert_fail@plt+0x4d70>
   1cf78:	b	1d26c <__assert_fail@plt+0xbdd8>
   1cf7c:	ldr	r0, [fp, #-8]
   1cf80:	ldr	r0, [r0, #4]
   1cf84:	cmp	r0, #0
   1cf88:	movw	r0, #0
   1cf8c:	movlt	r0, #1
   1cf90:	and	r0, r0, #1
   1cf94:	str	r0, [sp, #44]	; 0x2c
   1cf98:	ldr	r0, [fp, #-12]
   1cf9c:	ldr	r0, [r0, #4]
   1cfa0:	cmp	r0, #0
   1cfa4:	movw	r0, #0
   1cfa8:	movlt	r0, #1
   1cfac:	and	r0, r0, #1
   1cfb0:	str	r0, [sp, #40]	; 0x28
   1cfb4:	ldr	r0, [sp, #44]	; 0x2c
   1cfb8:	ldr	r1, [sp, #40]	; 0x28
   1cfbc:	eor	r0, r0, r1
   1cfc0:	str	r0, [sp, #36]	; 0x24
   1cfc4:	ldr	r0, [sp, #44]	; 0x2c
   1cfc8:	movw	r1, #0
   1cfcc:	sub	r0, r1, r0
   1cfd0:	str	r0, [fp, #-40]	; 0xffffffd8
   1cfd4:	ldr	r0, [sp, #40]	; 0x28
   1cfd8:	sub	r0, r1, r0
   1cfdc:	str	r0, [fp, #-44]	; 0xffffffd4
   1cfe0:	ldr	r0, [sp, #36]	; 0x24
   1cfe4:	sub	r0, r1, r0
   1cfe8:	str	r0, [sp, #48]	; 0x30
   1cfec:	ldr	r0, [fp, #-16]
   1cff0:	ldr	r1, [sp, #36]	; 0x24
   1cff4:	add	r0, r0, r1
   1cff8:	ldr	r1, [fp, #-4]
   1cffc:	ldr	r1, [r1]
   1d000:	cmp	r0, r1
   1d004:	ble	1d024 <__assert_fail@plt+0xbb90>
   1d008:	ldr	r0, [fp, #-4]
   1d00c:	ldr	r1, [fp, #-16]
   1d010:	ldr	r2, [sp, #36]	; 0x24
   1d014:	add	r1, r1, r2
   1d018:	bl	16114 <__assert_fail@plt+0x4c80>
   1d01c:	str	r0, [sp, #4]
   1d020:	b	1d030 <__assert_fail@plt+0xbb9c>
   1d024:	ldr	r0, [fp, #-4]
   1d028:	ldr	r0, [r0, #8]
   1d02c:	str	r0, [sp, #4]
   1d030:	ldr	r0, [sp, #4]
   1d034:	str	r0, [fp, #-36]	; 0xffffffdc
   1d038:	ldr	r0, [fp, #-8]
   1d03c:	ldr	r0, [r0, #8]
   1d040:	str	r0, [fp, #-28]	; 0xffffffe4
   1d044:	ldr	r0, [fp, #-12]
   1d048:	ldr	r0, [r0, #8]
   1d04c:	str	r0, [fp, #-32]	; 0xffffffe0
   1d050:	movw	r0, #0
   1d054:	str	r0, [fp, #-24]	; 0xffffffe8
   1d058:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d05c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d060:	ldr	r0, [r0, r1, lsl #2]
   1d064:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1d068:	eor	r0, r0, r1
   1d06c:	ldr	r1, [sp, #44]	; 0x2c
   1d070:	add	r0, r0, r1
   1d074:	str	r0, [sp, #32]
   1d078:	ldr	r0, [sp, #32]
   1d07c:	ldr	r1, [sp, #44]	; 0x2c
   1d080:	mov	r2, #0
   1d084:	cmp	r0, r1
   1d088:	mov	r0, r2
   1d08c:	movwcc	r0, #1
   1d090:	str	r0, [sp, #44]	; 0x2c
   1d094:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1d098:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d09c:	ldr	r0, [r0, r1, lsl #2]
   1d0a0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1d0a4:	eor	r0, r0, r1
   1d0a8:	ldr	r1, [sp, #40]	; 0x28
   1d0ac:	add	r0, r0, r1
   1d0b0:	str	r0, [sp, #28]
   1d0b4:	ldr	r0, [sp, #28]
   1d0b8:	ldr	r1, [sp, #40]	; 0x28
   1d0bc:	cmp	r0, r1
   1d0c0:	mov	r0, r2
   1d0c4:	movwcc	r0, #1
   1d0c8:	str	r0, [sp, #40]	; 0x28
   1d0cc:	ldr	r0, [sp, #32]
   1d0d0:	ldr	r1, [sp, #28]
   1d0d4:	eor	r0, r0, r1
   1d0d8:	ldr	r1, [sp, #48]	; 0x30
   1d0dc:	eor	r0, r0, r1
   1d0e0:	ldr	r1, [sp, #36]	; 0x24
   1d0e4:	add	r0, r0, r1
   1d0e8:	str	r0, [sp, #24]
   1d0ec:	ldr	r0, [sp, #24]
   1d0f0:	ldr	r1, [sp, #36]	; 0x24
   1d0f4:	cmp	r0, r1
   1d0f8:	movwcc	r2, #1
   1d0fc:	str	r2, [sp, #36]	; 0x24
   1d100:	ldr	r0, [sp, #24]
   1d104:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1d108:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d10c:	add	r1, r1, r2, lsl #2
   1d110:	str	r0, [r1]
   1d114:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d118:	add	r0, r0, #1
   1d11c:	str	r0, [fp, #-24]	; 0xffffffe8
   1d120:	ldr	r1, [fp, #-20]	; 0xffffffec
   1d124:	cmp	r0, r1
   1d128:	blt	1d058 <__assert_fail@plt+0xbbc4>
   1d12c:	ldr	r0, [sp, #40]	; 0x28
   1d130:	cmp	r0, #0
   1d134:	bne	1d13c <__assert_fail@plt+0xbca8>
   1d138:	b	1d15c <__assert_fail@plt+0xbcc8>
   1d13c:	movw	r0, #19154	; 0x4ad2
   1d140:	movt	r0, #4
   1d144:	movw	r1, #17404	; 0x43fc
   1d148:	movt	r1, #4
   1d14c:	movw	r2, #3996	; 0xf9c
   1d150:	movw	r3, #19308	; 0x4b6c
   1d154:	movt	r3, #4
   1d158:	bl	11494 <__assert_fail@plt>
   1d15c:	b	1d160 <__assert_fail@plt+0xbccc>
   1d160:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d164:	ldr	r1, [fp, #-16]
   1d168:	cmp	r0, r1
   1d16c:	bge	1d1fc <__assert_fail@plt+0xbd68>
   1d170:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d174:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d178:	ldr	r0, [r0, r1, lsl #2]
   1d17c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1d180:	eor	r0, r0, r1
   1d184:	ldr	r1, [sp, #44]	; 0x2c
   1d188:	add	r0, r0, r1
   1d18c:	str	r0, [sp, #32]
   1d190:	ldr	r0, [sp, #32]
   1d194:	ldr	r1, [sp, #44]	; 0x2c
   1d198:	mov	r2, #0
   1d19c:	cmp	r0, r1
   1d1a0:	mov	r0, r2
   1d1a4:	movwcc	r0, #1
   1d1a8:	str	r0, [sp, #44]	; 0x2c
   1d1ac:	ldr	r0, [sp, #32]
   1d1b0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1d1b4:	eor	r0, r0, r1
   1d1b8:	ldr	r1, [sp, #36]	; 0x24
   1d1bc:	add	r0, r0, r1
   1d1c0:	str	r0, [sp, #24]
   1d1c4:	ldr	r0, [sp, #24]
   1d1c8:	ldr	r1, [sp, #36]	; 0x24
   1d1cc:	cmp	r0, r1
   1d1d0:	movwcc	r2, #1
   1d1d4:	str	r2, [sp, #36]	; 0x24
   1d1d8:	ldr	r0, [sp, #24]
   1d1dc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1d1e0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d1e4:	add	r1, r1, r2, lsl #2
   1d1e8:	str	r0, [r1]
   1d1ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d1f0:	add	r0, r0, #1
   1d1f4:	str	r0, [fp, #-24]	; 0xffffffe8
   1d1f8:	b	1d160 <__assert_fail@plt+0xbccc>
   1d1fc:	ldr	r0, [sp, #36]	; 0x24
   1d200:	cmp	r0, #0
   1d204:	beq	1d228 <__assert_fail@plt+0xbd94>
   1d208:	ldr	r0, [sp, #36]	; 0x24
   1d20c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1d210:	ldr	r2, [fp, #-16]
   1d214:	add	r3, r2, #1
   1d218:	str	r3, [fp, #-16]
   1d21c:	add	r1, r1, r2, lsl #2
   1d220:	str	r0, [r1]
   1d224:	b	1d238 <__assert_fail@plt+0xbda4>
   1d228:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1d22c:	ldr	r1, [fp, #-16]
   1d230:	bl	13c64 <__assert_fail@plt+0x27d0>
   1d234:	str	r0, [fp, #-16]
   1d238:	ldr	r0, [sp, #48]	; 0x30
   1d23c:	cmp	r0, #0
   1d240:	beq	1d258 <__assert_fail@plt+0xbdc4>
   1d244:	ldr	r0, [fp, #-16]
   1d248:	movw	r1, #0
   1d24c:	sub	r0, r1, r0
   1d250:	str	r0, [sp]
   1d254:	b	1d260 <__assert_fail@plt+0xbdcc>
   1d258:	ldr	r0, [fp, #-16]
   1d25c:	str	r0, [sp]
   1d260:	ldr	r0, [sp]
   1d264:	ldr	r1, [fp, #-4]
   1d268:	str	r0, [r1, #4]
   1d26c:	mov	sp, fp
   1d270:	pop	{fp, pc}
   1d274:	push	{fp, lr}
   1d278:	mov	fp, sp
   1d27c:	sub	sp, sp, #16
   1d280:	str	r0, [fp, #-4]
   1d284:	str	r1, [sp, #8]
   1d288:	movw	r0, #0
   1d28c:	str	r0, [sp]
   1d290:	str	r0, [sp, #4]
   1d294:	ldr	r0, [sp, #4]
   1d298:	ldr	r1, [sp, #8]
   1d29c:	cmp	r0, r1
   1d2a0:	bge	1d2d4 <__assert_fail@plt+0xbe40>
   1d2a4:	ldr	r0, [fp, #-4]
   1d2a8:	ldr	r1, [sp, #4]
   1d2ac:	add	r0, r0, r1, lsl #2
   1d2b0:	ldr	r0, [r0]
   1d2b4:	bl	1d2e0 <__assert_fail@plt+0xbe4c>
   1d2b8:	ldr	r1, [sp]
   1d2bc:	add	r0, r1, r0
   1d2c0:	str	r0, [sp]
   1d2c4:	ldr	r0, [sp, #4]
   1d2c8:	add	r0, r0, #1
   1d2cc:	str	r0, [sp, #4]
   1d2d0:	b	1d294 <__assert_fail@plt+0xbe00>
   1d2d4:	ldr	r0, [sp]
   1d2d8:	mov	sp, fp
   1d2dc:	pop	{fp, pc}
   1d2e0:	sub	sp, sp, #16
   1d2e4:	str	r0, [sp, #12]
   1d2e8:	movw	r0, #16
   1d2ec:	str	r0, [sp, #4]
   1d2f0:	movw	r0, #0
   1d2f4:	str	r0, [sp, #8]
   1d2f8:	ldr	r0, [sp, #12]
   1d2fc:	cmp	r0, #0
   1d300:	bls	1d3b0 <__assert_fail@plt+0xbf1c>
   1d304:	ldr	r0, [sp, #12]
   1d308:	ldr	r1, [sp, #12]
   1d30c:	lsr	r1, r1, #1
   1d310:	movw	r2, #21845	; 0x5555
   1d314:	and	r1, r1, r2
   1d318:	sub	r0, r0, r1
   1d31c:	str	r0, [sp]
   1d320:	ldr	r0, [sp]
   1d324:	lsr	r0, r0, #2
   1d328:	movw	r1, #13107	; 0x3333
   1d32c:	and	r0, r0, r1
   1d330:	ldr	r2, [sp]
   1d334:	and	r1, r2, r1
   1d338:	add	r0, r0, r1
   1d33c:	str	r0, [sp]
   1d340:	ldr	r0, [sp]
   1d344:	lsr	r0, r0, #4
   1d348:	ldr	r1, [sp]
   1d34c:	add	r0, r0, r1
   1d350:	str	r0, [sp]
   1d354:	ldr	r0, [sp]
   1d358:	lsr	r0, r0, #8
   1d35c:	and	r0, r0, #15
   1d360:	ldr	r1, [sp]
   1d364:	and	r1, r1, #15
   1d368:	add	r0, r0, r1
   1d36c:	str	r0, [sp]
   1d370:	ldr	r0, [sp]
   1d374:	ldr	r1, [sp, #8]
   1d378:	add	r0, r1, r0
   1d37c:	str	r0, [sp, #8]
   1d380:	ldr	r0, [sp, #4]
   1d384:	movw	r1, #32
   1d388:	cmp	r1, r0
   1d38c:	bls	1d3a4 <__assert_fail@plt+0xbf10>
   1d390:	ldr	r0, [sp, #4]
   1d394:	ldr	r1, [sp, #12]
   1d398:	lsr	r0, r1, r0
   1d39c:	str	r0, [sp, #12]
   1d3a0:	b	1d3ac <__assert_fail@plt+0xbf18>
   1d3a4:	movw	r0, #0
   1d3a8:	str	r0, [sp, #12]
   1d3ac:	b	1d2f8 <__assert_fail@plt+0xbe64>
   1d3b0:	ldr	r0, [sp, #8]
   1d3b4:	add	sp, sp, #16
   1d3b8:	bx	lr
   1d3bc:	push	{fp, lr}
   1d3c0:	mov	fp, sp
   1d3c4:	sub	sp, sp, #16
   1d3c8:	str	r0, [sp, #8]
   1d3cc:	ldr	r0, [sp, #8]
   1d3d0:	ldr	r0, [r0, #4]
   1d3d4:	str	r0, [sp, #4]
   1d3d8:	ldr	r0, [sp, #4]
   1d3dc:	cmp	r0, #0
   1d3e0:	bge	1d3f0 <__assert_fail@plt+0xbf5c>
   1d3e4:	mvn	r0, #0
   1d3e8:	str	r0, [fp, #-4]
   1d3ec:	b	1d404 <__assert_fail@plt+0xbf70>
   1d3f0:	ldr	r0, [sp, #8]
   1d3f4:	ldr	r0, [r0, #8]
   1d3f8:	ldr	r1, [sp, #4]
   1d3fc:	bl	1d274 <__assert_fail@plt+0xbde0>
   1d400:	str	r0, [fp, #-4]
   1d404:	ldr	r0, [fp, #-4]
   1d408:	mov	sp, fp
   1d40c:	pop	{fp, pc}
   1d410:	push	{fp, lr}
   1d414:	mov	fp, sp
   1d418:	sub	sp, sp, #64	; 0x40
   1d41c:	str	r0, [fp, #-8]
   1d420:	str	r1, [fp, #-12]
   1d424:	ldr	r0, [fp, #-8]
   1d428:	ldr	r0, [r0, #4]
   1d42c:	str	r0, [fp, #-16]
   1d430:	ldr	r0, [fp, #-12]
   1d434:	ldr	r0, [r0, #4]
   1d438:	str	r0, [fp, #-20]	; 0xffffffec
   1d43c:	ldr	r0, [fp, #-16]
   1d440:	ldr	r1, [fp, #-20]	; 0xffffffec
   1d444:	eor	r0, r0, r1
   1d448:	cmp	r0, #0
   1d44c:	bge	1d45c <__assert_fail@plt+0xbfc8>
   1d450:	mvn	r0, #0
   1d454:	str	r0, [fp, #-4]
   1d458:	b	1d6c0 <__assert_fail@plt+0xc22c>
   1d45c:	ldr	r0, [fp, #-16]
   1d460:	cmp	r0, #0
   1d464:	movw	r0, #0
   1d468:	movlt	r0, #1
   1d46c:	and	r0, r0, #1
   1d470:	str	r0, [sp, #32]
   1d474:	str	r0, [fp, #-28]	; 0xffffffe4
   1d478:	movw	r1, #0
   1d47c:	sub	r0, r1, r0
   1d480:	str	r0, [sp, #20]
   1d484:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d488:	cmp	r0, #0
   1d48c:	beq	1d4dc <__assert_fail@plt+0xc048>
   1d490:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d494:	cmp	r0, #0
   1d498:	bge	1d4a0 <__assert_fail@plt+0xc00c>
   1d49c:	b	1d4c0 <__assert_fail@plt+0xc02c>
   1d4a0:	movw	r0, #19381	; 0x4bb5
   1d4a4:	movt	r0, #4
   1d4a8:	movw	r1, #17404	; 0x43fc
   1d4ac:	movt	r1, #4
   1d4b0:	movw	r2, #4079	; 0xfef
   1d4b4:	movw	r3, #19388	; 0x4bbc
   1d4b8:	movt	r3, #4
   1d4bc:	bl	11494 <__assert_fail@plt>
   1d4c0:	ldr	r0, [fp, #-16]
   1d4c4:	movw	r1, #0
   1d4c8:	sub	r0, r1, r0
   1d4cc:	str	r0, [fp, #-16]
   1d4d0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d4d4:	sub	r0, r1, r0
   1d4d8:	str	r0, [fp, #-20]	; 0xffffffec
   1d4dc:	ldr	r0, [fp, #-8]
   1d4e0:	ldr	r0, [r0, #8]
   1d4e4:	str	r0, [sp, #16]
   1d4e8:	ldr	r0, [fp, #-12]
   1d4ec:	ldr	r0, [r0, #8]
   1d4f0:	str	r0, [sp, #12]
   1d4f4:	ldr	r0, [fp, #-16]
   1d4f8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1d4fc:	cmp	r0, r1
   1d500:	bge	1d548 <__assert_fail@plt+0xc0b4>
   1d504:	b	1d508 <__assert_fail@plt+0xc074>
   1d508:	b	1d50c <__assert_fail@plt+0xc078>
   1d50c:	ldr	r0, [sp, #16]
   1d510:	str	r0, [sp, #4]
   1d514:	ldr	r0, [sp, #12]
   1d518:	str	r0, [sp, #16]
   1d51c:	ldr	r0, [sp, #4]
   1d520:	str	r0, [sp, #12]
   1d524:	b	1d528 <__assert_fail@plt+0xc094>
   1d528:	ldr	r0, [fp, #-16]
   1d52c:	str	r0, [sp]
   1d530:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d534:	str	r0, [fp, #-16]
   1d538:	ldr	r0, [sp]
   1d53c:	str	r0, [fp, #-20]	; 0xffffffec
   1d540:	b	1d544 <__assert_fail@plt+0xc0b0>
   1d544:	b	1d548 <__assert_fail@plt+0xc0b4>
   1d548:	movw	r0, #0
   1d54c:	str	r0, [fp, #-24]	; 0xffffffe8
   1d550:	str	r0, [sp, #8]
   1d554:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d558:	ldr	r1, [fp, #-20]	; 0xffffffec
   1d55c:	cmp	r0, r1
   1d560:	bge	1d608 <__assert_fail@plt+0xc174>
   1d564:	ldr	r0, [sp, #16]
   1d568:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d56c:	ldr	r0, [r0, r1, lsl #2]
   1d570:	ldr	r1, [sp, #20]
   1d574:	eor	r0, r0, r1
   1d578:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1d57c:	add	r0, r0, r1
   1d580:	str	r0, [sp, #28]
   1d584:	ldr	r0, [sp, #28]
   1d588:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1d58c:	mov	r2, #0
   1d590:	cmp	r0, r1
   1d594:	movwcc	r2, #1
   1d598:	str	r2, [fp, #-28]	; 0xffffffe4
   1d59c:	ldr	r0, [sp, #12]
   1d5a0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d5a4:	add	r0, r0, r1, lsl #2
   1d5a8:	ldr	r0, [r0]
   1d5ac:	ldr	r1, [sp, #20]
   1d5b0:	eor	r0, r0, r1
   1d5b4:	ldr	r1, [sp, #32]
   1d5b8:	add	r0, r0, r1
   1d5bc:	str	r0, [sp, #24]
   1d5c0:	ldr	r0, [sp, #24]
   1d5c4:	ldr	r1, [sp, #32]
   1d5c8:	cmp	r0, r1
   1d5cc:	movw	r0, #0
   1d5d0:	movcc	r0, #1
   1d5d4:	and	r0, r0, #1
   1d5d8:	str	r0, [sp, #32]
   1d5dc:	ldr	r0, [sp, #28]
   1d5e0:	ldr	r1, [sp, #24]
   1d5e4:	eor	r0, r0, r1
   1d5e8:	bl	1d2e0 <__assert_fail@plt+0xbe4c>
   1d5ec:	ldr	r1, [sp, #8]
   1d5f0:	add	r0, r1, r0
   1d5f4:	str	r0, [sp, #8]
   1d5f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d5fc:	add	r0, r0, #1
   1d600:	str	r0, [fp, #-24]	; 0xffffffe8
   1d604:	b	1d554 <__assert_fail@plt+0xc0c0>
   1d608:	ldr	r0, [sp, #32]
   1d60c:	cmp	r0, #0
   1d610:	bne	1d618 <__assert_fail@plt+0xc184>
   1d614:	b	1d638 <__assert_fail@plt+0xc1a4>
   1d618:	movw	r0, #19154	; 0x4ad2
   1d61c:	movt	r0, #4
   1d620:	movw	r1, #17404	; 0x43fc
   1d624:	movt	r1, #4
   1d628:	movw	r2, #4100	; 0x1004
   1d62c:	movw	r3, #19388	; 0x4bbc
   1d630:	movt	r3, #4
   1d634:	bl	11494 <__assert_fail@plt>
   1d638:	b	1d63c <__assert_fail@plt+0xc1a8>
   1d63c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d640:	ldr	r1, [fp, #-16]
   1d644:	cmp	r0, r1
   1d648:	bge	1d6b8 <__assert_fail@plt+0xc224>
   1d64c:	ldr	r0, [sp, #16]
   1d650:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d654:	add	r0, r0, r1, lsl #2
   1d658:	ldr	r0, [r0]
   1d65c:	ldr	r1, [sp, #20]
   1d660:	eor	r0, r0, r1
   1d664:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1d668:	add	r0, r0, r1
   1d66c:	str	r0, [sp, #28]
   1d670:	ldr	r0, [sp, #28]
   1d674:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1d678:	cmp	r0, r1
   1d67c:	movw	r0, #0
   1d680:	movcc	r0, #1
   1d684:	and	r0, r0, #1
   1d688:	str	r0, [fp, #-28]	; 0xffffffe4
   1d68c:	ldr	r0, [sp, #28]
   1d690:	ldr	r1, [sp, #20]
   1d694:	eor	r0, r0, r1
   1d698:	bl	1d2e0 <__assert_fail@plt+0xbe4c>
   1d69c:	ldr	r1, [sp, #8]
   1d6a0:	add	r0, r1, r0
   1d6a4:	str	r0, [sp, #8]
   1d6a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d6ac:	add	r0, r0, #1
   1d6b0:	str	r0, [fp, #-24]	; 0xffffffe8
   1d6b4:	b	1d63c <__assert_fail@plt+0xc1a8>
   1d6b8:	ldr	r0, [sp, #8]
   1d6bc:	str	r0, [fp, #-4]
   1d6c0:	ldr	r0, [fp, #-4]
   1d6c4:	mov	sp, fp
   1d6c8:	pop	{fp, pc}
   1d6cc:	push	{fp, lr}
   1d6d0:	mov	fp, sp
   1d6d4:	sub	sp, sp, #48	; 0x30
   1d6d8:	str	r0, [fp, #-8]
   1d6dc:	str	r1, [fp, #-12]
   1d6e0:	ldr	r0, [fp, #-8]
   1d6e4:	ldr	r0, [r0, #4]
   1d6e8:	str	r0, [fp, #-20]	; 0xffffffec
   1d6ec:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d6f0:	cmp	r0, #0
   1d6f4:	blt	1d704 <__assert_fail@plt+0xc270>
   1d6f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d6fc:	str	r0, [sp, #8]
   1d700:	b	1d714 <__assert_fail@plt+0xc280>
   1d704:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d708:	movw	r1, #0
   1d70c:	sub	r0, r1, r0
   1d710:	str	r0, [sp, #8]
   1d714:	ldr	r0, [sp, #8]
   1d718:	str	r0, [sp, #24]
   1d71c:	ldr	r0, [fp, #-12]
   1d720:	lsr	r0, r0, #5
   1d724:	str	r0, [sp, #20]
   1d728:	ldr	r0, [sp, #20]
   1d72c:	ldr	r1, [sp, #24]
   1d730:	cmp	r0, r1
   1d734:	blt	1d764 <__assert_fail@plt+0xc2d0>
   1d738:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d73c:	cmp	r0, #0
   1d740:	blt	1d750 <__assert_fail@plt+0xc2bc>
   1d744:	mvn	r0, #0
   1d748:	str	r0, [sp, #4]
   1d74c:	b	1d758 <__assert_fail@plt+0xc2c4>
   1d750:	ldr	r0, [fp, #-12]
   1d754:	str	r0, [sp, #4]
   1d758:	ldr	r0, [sp, #4]
   1d75c:	str	r0, [fp, #-4]
   1d760:	b	1d82c <__assert_fail@plt+0xc398>
   1d764:	ldr	r0, [fp, #-8]
   1d768:	ldr	r0, [r0, #8]
   1d76c:	str	r0, [fp, #-16]
   1d770:	mov	r0, #0
   1d774:	str	r0, [sp, #12]
   1d778:	ldr	r0, [fp, #-16]
   1d77c:	ldr	r1, [sp, #20]
   1d780:	add	r0, r0, r1, lsl #2
   1d784:	ldr	r0, [r0]
   1d788:	str	r0, [sp, #16]
   1d78c:	ldr	r0, [fp, #-12]
   1d790:	cmp	r0, #0
   1d794:	beq	1d80c <__assert_fail@plt+0xc378>
   1d798:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d79c:	cmp	r0, #0
   1d7a0:	bge	1d7f0 <__assert_fail@plt+0xc35c>
   1d7a4:	ldr	r0, [fp, #-16]
   1d7a8:	ldr	r1, [sp, #20]
   1d7ac:	bl	13c2c <__assert_fail@plt+0x2798>
   1d7b0:	str	r0, [sp, #12]
   1d7b4:	ldr	r0, [sp, #16]
   1d7b8:	mvn	r1, #0
   1d7bc:	eor	r0, r0, r1
   1d7c0:	ldr	r1, [sp, #12]
   1d7c4:	add	r0, r0, r1
   1d7c8:	str	r0, [sp, #16]
   1d7cc:	ldr	r0, [sp, #16]
   1d7d0:	ldr	r1, [sp, #12]
   1d7d4:	cmp	r0, r1
   1d7d8:	movw	r0, #0
   1d7dc:	movcs	r0, #1
   1d7e0:	and	r0, r0, #1
   1d7e4:	movw	r1, #0
   1d7e8:	sub	r0, r1, r0
   1d7ec:	str	r0, [sp, #12]
   1d7f0:	ldr	r0, [fp, #-12]
   1d7f4:	and	r0, r0, #31
   1d7f8:	mvn	r1, #0
   1d7fc:	lsl	r0, r1, r0
   1d800:	ldr	r1, [sp, #16]
   1d804:	and	r0, r1, r0
   1d808:	str	r0, [sp, #16]
   1d80c:	ldr	r0, [sp, #16]
   1d810:	ldr	r1, [sp, #20]
   1d814:	ldr	r2, [fp, #-16]
   1d818:	ldr	r3, [sp, #24]
   1d81c:	ldr	ip, [sp, #12]
   1d820:	str	ip, [sp]
   1d824:	bl	14d78 <__assert_fail@plt+0x38e4>
   1d828:	str	r0, [fp, #-4]
   1d82c:	ldr	r0, [fp, #-4]
   1d830:	mov	sp, fp
   1d834:	pop	{fp, pc}
   1d838:	push	{fp, lr}
   1d83c:	mov	fp, sp
   1d840:	sub	sp, sp, #48	; 0x30
   1d844:	str	r0, [fp, #-8]
   1d848:	str	r1, [fp, #-12]
   1d84c:	ldr	r0, [fp, #-8]
   1d850:	ldr	r0, [r0, #4]
   1d854:	str	r0, [fp, #-20]	; 0xffffffec
   1d858:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d85c:	cmp	r0, #0
   1d860:	movw	r0, #0
   1d864:	movge	r0, #1
   1d868:	and	r0, r0, #1
   1d86c:	movw	r1, #0
   1d870:	sub	r0, r1, r0
   1d874:	str	r0, [sp, #12]
   1d878:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d87c:	cmp	r0, #0
   1d880:	blt	1d890 <__assert_fail@plt+0xc3fc>
   1d884:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d888:	str	r0, [sp, #8]
   1d88c:	b	1d8a0 <__assert_fail@plt+0xc40c>
   1d890:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d894:	movw	r1, #0
   1d898:	sub	r0, r1, r0
   1d89c:	str	r0, [sp, #8]
   1d8a0:	ldr	r0, [sp, #8]
   1d8a4:	str	r0, [sp, #24]
   1d8a8:	ldr	r0, [fp, #-12]
   1d8ac:	lsr	r0, r0, #5
   1d8b0:	str	r0, [sp, #20]
   1d8b4:	ldr	r0, [sp, #20]
   1d8b8:	ldr	r1, [sp, #24]
   1d8bc:	cmp	r0, r1
   1d8c0:	blt	1d8f4 <__assert_fail@plt+0xc460>
   1d8c4:	ldr	r0, [sp, #12]
   1d8c8:	cmp	r0, #0
   1d8cc:	beq	1d8dc <__assert_fail@plt+0xc448>
   1d8d0:	ldr	r0, [fp, #-12]
   1d8d4:	str	r0, [sp, #4]
   1d8d8:	b	1d8e8 <__assert_fail@plt+0xc454>
   1d8dc:	mvn	r0, #0
   1d8e0:	str	r0, [sp, #4]
   1d8e4:	b	1d8e8 <__assert_fail@plt+0xc454>
   1d8e8:	ldr	r0, [sp, #4]
   1d8ec:	str	r0, [fp, #-4]
   1d8f0:	b	1d97c <__assert_fail@plt+0xc4e8>
   1d8f4:	ldr	r0, [fp, #-8]
   1d8f8:	ldr	r0, [r0, #8]
   1d8fc:	str	r0, [fp, #-16]
   1d900:	ldr	r0, [fp, #-16]
   1d904:	ldr	r1, [sp, #20]
   1d908:	add	r0, r0, r1, lsl #2
   1d90c:	ldr	r0, [r0]
   1d910:	ldr	r1, [sp, #12]
   1d914:	eor	r0, r0, r1
   1d918:	str	r0, [sp, #16]
   1d91c:	ldr	r0, [sp, #12]
   1d920:	cmp	r0, #0
   1d924:	bne	1d940 <__assert_fail@plt+0xc4ac>
   1d928:	ldr	r0, [fp, #-16]
   1d92c:	ldr	r1, [sp, #20]
   1d930:	bl	13c2c <__assert_fail@plt+0x2798>
   1d934:	ldr	r1, [sp, #16]
   1d938:	sub	r0, r1, r0
   1d93c:	str	r0, [sp, #16]
   1d940:	ldr	r0, [fp, #-12]
   1d944:	and	r0, r0, #31
   1d948:	mvn	r1, #0
   1d94c:	lsl	r0, r1, r0
   1d950:	ldr	r1, [sp, #16]
   1d954:	and	r0, r1, r0
   1d958:	str	r0, [sp, #16]
   1d95c:	ldr	r0, [sp, #16]
   1d960:	ldr	r1, [sp, #20]
   1d964:	ldr	r2, [fp, #-16]
   1d968:	ldr	r3, [sp, #24]
   1d96c:	ldr	ip, [sp, #12]
   1d970:	str	ip, [sp]
   1d974:	bl	14d78 <__assert_fail@plt+0x38e4>
   1d978:	str	r0, [fp, #-4]
   1d97c:	ldr	r0, [fp, #-4]
   1d980:	mov	sp, fp
   1d984:	pop	{fp, pc}
   1d988:	push	{fp, lr}
   1d98c:	mov	fp, sp
   1d990:	sub	sp, sp, #24
   1d994:	str	r0, [fp, #-4]
   1d998:	ldr	r0, [fp, #-4]
   1d99c:	cmp	r0, #0
   1d9a0:	bls	1d9a8 <__assert_fail@plt+0xc514>
   1d9a4:	b	1d9c8 <__assert_fail@plt+0xc534>
   1d9a8:	movw	r0, #22156	; 0x568c
   1d9ac:	movt	r0, #4
   1d9b0:	movw	r1, #17404	; 0x43fc
   1d9b4:	movt	r1, #4
   1d9b8:	movw	r2, #1210	; 0x4ba
   1d9bc:	movw	r3, #22162	; 0x5692
   1d9c0:	movt	r3, #4
   1d9c4:	bl	11494 <__assert_fail@plt>
   1d9c8:	b	1d9cc <__assert_fail@plt+0xc538>
   1d9cc:	ldr	r0, [fp, #-4]
   1d9d0:	str	r0, [sp, #12]
   1d9d4:	movw	r0, #0
   1d9d8:	str	r0, [sp, #8]
   1d9dc:	movw	r0, #8
   1d9e0:	str	r0, [sp, #4]
   1d9e4:	ldr	r0, [sp, #4]
   1d9e8:	movw	r1, #32
   1d9ec:	cmp	r1, r0
   1d9f0:	bls	1da2c <__assert_fail@plt+0xc598>
   1d9f4:	b	1d9f8 <__assert_fail@plt+0xc564>
   1d9f8:	ldr	r0, [sp, #12]
   1d9fc:	and	r0, r0, #-16777216	; 0xff000000
   1da00:	cmp	r0, #0
   1da04:	bne	1da28 <__assert_fail@plt+0xc594>
   1da08:	ldr	r0, [sp, #4]
   1da0c:	ldr	r1, [sp, #12]
   1da10:	lsl	r0, r1, r0
   1da14:	str	r0, [sp, #12]
   1da18:	ldr	r0, [sp, #8]
   1da1c:	add	r0, r0, #8
   1da20:	str	r0, [sp, #8]
   1da24:	b	1d9f8 <__assert_fail@plt+0xc564>
   1da28:	b	1da2c <__assert_fail@plt+0xc598>
   1da2c:	b	1da30 <__assert_fail@plt+0xc59c>
   1da30:	ldr	r0, [sp, #12]
   1da34:	and	r0, r0, #-2147483648	; 0x80000000
   1da38:	cmp	r0, #0
   1da3c:	bne	1da5c <__assert_fail@plt+0xc5c8>
   1da40:	ldr	r0, [sp, #12]
   1da44:	lsl	r0, r0, #1
   1da48:	str	r0, [sp, #12]
   1da4c:	ldr	r0, [sp, #8]
   1da50:	add	r0, r0, #1
   1da54:	str	r0, [sp, #8]
   1da58:	b	1da30 <__assert_fail@plt+0xc59c>
   1da5c:	ldr	r0, [sp, #8]
   1da60:	str	r0, [fp, #-8]
   1da64:	ldr	r0, [fp, #-8]
   1da68:	movw	r1, #32
   1da6c:	sub	r0, r1, r0
   1da70:	mov	sp, fp
   1da74:	pop	{fp, pc}
   1da78:	push	{fp, lr}
   1da7c:	mov	fp, sp
   1da80:	sub	sp, sp, #24
   1da84:	str	r0, [fp, #-4]
   1da88:	str	r1, [fp, #-8]
   1da8c:	ldr	r0, [fp, #-8]
   1da90:	cmp	r0, #0
   1da94:	bls	1da9c <__assert_fail@plt+0xc608>
   1da98:	b	1dabc <__assert_fail@plt+0xc628>
   1da9c:	movw	r0, #22209	; 0x56c1
   1daa0:	movt	r0, #4
   1daa4:	movw	r1, #17404	; 0x43fc
   1daa8:	movt	r1, #4
   1daac:	movw	r2, #902	; 0x386
   1dab0:	movw	r3, #22215	; 0x56c7
   1dab4:	movt	r3, #4
   1dab8:	bl	11494 <__assert_fail@plt>
   1dabc:	b	1dac0 <__assert_fail@plt+0xc62c>
   1dac0:	ldr	r0, [fp, #-8]
   1dac4:	str	r0, [sp, #8]
   1dac8:	movw	r0, #0
   1dacc:	str	r0, [sp, #4]
   1dad0:	movw	r0, #8
   1dad4:	str	r0, [sp]
   1dad8:	ldr	r0, [sp]
   1dadc:	movw	r1, #32
   1dae0:	cmp	r1, r0
   1dae4:	bls	1db20 <__assert_fail@plt+0xc68c>
   1dae8:	b	1daec <__assert_fail@plt+0xc658>
   1daec:	ldr	r0, [sp, #8]
   1daf0:	and	r0, r0, #-16777216	; 0xff000000
   1daf4:	cmp	r0, #0
   1daf8:	bne	1db1c <__assert_fail@plt+0xc688>
   1dafc:	ldr	r0, [sp]
   1db00:	ldr	r1, [sp, #8]
   1db04:	lsl	r0, r1, r0
   1db08:	str	r0, [sp, #8]
   1db0c:	ldr	r0, [sp, #4]
   1db10:	add	r0, r0, #8
   1db14:	str	r0, [sp, #4]
   1db18:	b	1daec <__assert_fail@plt+0xc658>
   1db1c:	b	1db20 <__assert_fail@plt+0xc68c>
   1db20:	b	1db24 <__assert_fail@plt+0xc690>
   1db24:	ldr	r0, [sp, #8]
   1db28:	and	r0, r0, #-2147483648	; 0x80000000
   1db2c:	cmp	r0, #0
   1db30:	bne	1db50 <__assert_fail@plt+0xc6bc>
   1db34:	ldr	r0, [sp, #8]
   1db38:	lsl	r0, r0, #1
   1db3c:	str	r0, [sp, #8]
   1db40:	ldr	r0, [sp, #4]
   1db44:	add	r0, r0, #1
   1db48:	str	r0, [sp, #4]
   1db4c:	b	1db24 <__assert_fail@plt+0xc690>
   1db50:	ldr	r0, [sp, #4]
   1db54:	str	r0, [sp, #12]
   1db58:	ldr	r0, [sp, #12]
   1db5c:	ldr	r1, [fp, #-4]
   1db60:	str	r0, [r1]
   1db64:	ldr	r0, [fp, #-8]
   1db68:	ldr	r1, [sp, #12]
   1db6c:	lsl	r0, r0, r1
   1db70:	ldr	r1, [fp, #-4]
   1db74:	str	r0, [r1, #4]
   1db78:	ldr	r0, [fp, #-4]
   1db7c:	ldr	r0, [r0, #4]
   1db80:	movw	r1, #0
   1db84:	bl	15120 <__assert_fail@plt+0x3c8c>
   1db88:	ldr	r1, [fp, #-4]
   1db8c:	str	r0, [r1, #12]
   1db90:	mov	sp, fp
   1db94:	pop	{fp, pc}
   1db98:	push	{fp, lr}
   1db9c:	mov	fp, sp
   1dba0:	sub	sp, sp, #104	; 0x68
   1dba4:	str	r0, [fp, #-4]
   1dba8:	str	r1, [fp, #-8]
   1dbac:	str	r2, [fp, #-12]
   1dbb0:	str	r3, [fp, #-16]
   1dbb4:	movw	r0, #0
   1dbb8:	str	r0, [fp, #-32]	; 0xffffffe0
   1dbbc:	str	r0, [fp, #-36]	; 0xffffffdc
   1dbc0:	ldr	r0, [fp, #-16]
   1dbc4:	ldr	r0, [r0]
   1dbc8:	cmp	r0, #0
   1dbcc:	bls	1dc24 <__assert_fail@plt+0xc790>
   1dbd0:	ldr	r0, [fp, #-4]
   1dbd4:	str	r0, [fp, #-32]	; 0xffffffe0
   1dbd8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1dbdc:	movw	r1, #0
   1dbe0:	cmp	r0, r1
   1dbe4:	bne	1dbfc <__assert_fail@plt+0xc768>
   1dbe8:	ldr	r0, [fp, #-12]
   1dbec:	str	r0, [fp, #-36]	; 0xffffffdc
   1dbf0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1dbf4:	bl	15f30 <__assert_fail@plt+0x4a9c>
   1dbf8:	str	r0, [fp, #-32]	; 0xffffffe0
   1dbfc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1dc00:	ldr	r1, [fp, #-8]
   1dc04:	ldr	r2, [fp, #-12]
   1dc08:	ldr	r3, [fp, #-16]
   1dc0c:	ldr	r3, [r3]
   1dc10:	bl	149f8 <__assert_fail@plt+0x3564>
   1dc14:	str	r0, [fp, #-28]	; 0xffffffe4
   1dc18:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1dc1c:	str	r0, [fp, #-8]
   1dc20:	b	1dc2c <__assert_fail@plt+0xc798>
   1dc24:	movw	r0, #0
   1dc28:	str	r0, [fp, #-28]	; 0xffffffe4
   1dc2c:	ldr	r0, [fp, #-16]
   1dc30:	ldr	r0, [r0, #4]
   1dc34:	str	r0, [fp, #-20]	; 0xffffffec
   1dc38:	ldr	r0, [fp, #-16]
   1dc3c:	ldr	r0, [r0, #12]
   1dc40:	str	r0, [fp, #-24]	; 0xffffffe8
   1dc44:	ldr	r0, [fp, #-12]
   1dc48:	mvn	r1, #0
   1dc4c:	add	r0, r0, r1
   1dc50:	str	r0, [fp, #-12]
   1dc54:	cmp	r0, #0
   1dc58:	blt	1de8c <__assert_fail@plt+0xc9f8>
   1dc5c:	b	1dc60 <__assert_fail@plt+0xc7cc>
   1dc60:	b	1dc64 <__assert_fail@plt+0xc7d0>
   1dc64:	movw	r0, #32
   1dc68:	str	r0, [sp, #44]	; 0x2c
   1dc6c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1dc70:	str	r0, [sp, #8]
   1dc74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dc78:	str	r0, [sp, #4]
   1dc7c:	ldr	r0, [sp, #8]
   1dc80:	movw	r1, #65535	; 0xffff
   1dc84:	and	r0, r0, r1
   1dc88:	str	r0, [sp, #24]
   1dc8c:	ldr	r0, [sp, #8]
   1dc90:	lsr	r0, r0, #16
   1dc94:	str	r0, [sp, #16]
   1dc98:	ldr	r0, [sp, #4]
   1dc9c:	and	r0, r0, r1
   1dca0:	str	r0, [sp, #20]
   1dca4:	ldr	r0, [sp, #4]
   1dca8:	lsr	r0, r0, #16
   1dcac:	str	r0, [sp, #12]
   1dcb0:	ldr	r0, [sp, #24]
   1dcb4:	ldr	r1, [sp, #20]
   1dcb8:	mul	r0, r0, r1
   1dcbc:	str	r0, [sp, #40]	; 0x28
   1dcc0:	ldr	r0, [sp, #24]
   1dcc4:	ldr	r1, [sp, #12]
   1dcc8:	mul	r0, r0, r1
   1dccc:	str	r0, [sp, #36]	; 0x24
   1dcd0:	ldr	r0, [sp, #16]
   1dcd4:	ldr	r1, [sp, #20]
   1dcd8:	mul	r0, r0, r1
   1dcdc:	str	r0, [sp, #32]
   1dce0:	ldr	r0, [sp, #16]
   1dce4:	ldr	r1, [sp, #12]
   1dce8:	mul	r0, r0, r1
   1dcec:	str	r0, [sp, #28]
   1dcf0:	ldr	r0, [sp, #40]	; 0x28
   1dcf4:	lsr	r0, r0, #16
   1dcf8:	ldr	r1, [sp, #36]	; 0x24
   1dcfc:	add	r0, r1, r0
   1dd00:	str	r0, [sp, #36]	; 0x24
   1dd04:	ldr	r0, [sp, #32]
   1dd08:	ldr	r1, [sp, #36]	; 0x24
   1dd0c:	add	r0, r1, r0
   1dd10:	str	r0, [sp, #36]	; 0x24
   1dd14:	ldr	r0, [sp, #36]	; 0x24
   1dd18:	ldr	r1, [sp, #32]
   1dd1c:	cmp	r0, r1
   1dd20:	bcs	1dd30 <__assert_fail@plt+0xc89c>
   1dd24:	ldr	r0, [sp, #28]
   1dd28:	add	r0, r0, #65536	; 0x10000
   1dd2c:	str	r0, [sp, #28]
   1dd30:	ldr	r0, [sp, #28]
   1dd34:	ldr	r1, [sp, #36]	; 0x24
   1dd38:	lsr	r1, r1, #16
   1dd3c:	add	r0, r0, r1
   1dd40:	str	r0, [fp, #-44]	; 0xffffffd4
   1dd44:	ldr	r0, [sp, #36]	; 0x24
   1dd48:	lsl	r0, r0, #16
   1dd4c:	ldr	r1, [sp, #40]	; 0x28
   1dd50:	movw	r2, #65535	; 0xffff
   1dd54:	and	r1, r1, r2
   1dd58:	add	r0, r0, r1
   1dd5c:	str	r0, [fp, #-48]	; 0xffffffd0
   1dd60:	b	1dd64 <__assert_fail@plt+0xc8d0>
   1dd64:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1dd68:	ldr	r1, [fp, #-8]
   1dd6c:	ldr	r2, [fp, #-12]
   1dd70:	add	r1, r1, r2, lsl #2
   1dd74:	ldr	r1, [r1]
   1dd78:	add	r0, r0, r1
   1dd7c:	str	r0, [sp]
   1dd80:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1dd84:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1dd88:	add	r1, r1, #1
   1dd8c:	add	r0, r0, r1
   1dd90:	ldr	r1, [sp]
   1dd94:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1dd98:	cmp	r1, r2
   1dd9c:	movw	r1, #0
   1dda0:	movcc	r1, #1
   1dda4:	and	r1, r1, #1
   1dda8:	add	r0, r0, r1
   1ddac:	str	r0, [fp, #-44]	; 0xffffffd4
   1ddb0:	ldr	r0, [sp]
   1ddb4:	str	r0, [fp, #-48]	; 0xffffffd0
   1ddb8:	ldr	r0, [fp, #-8]
   1ddbc:	ldr	r1, [fp, #-12]
   1ddc0:	add	r0, r0, r1, lsl #2
   1ddc4:	ldr	r0, [r0]
   1ddc8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1ddcc:	ldr	r2, [fp, #-20]	; 0xffffffec
   1ddd0:	mul	r1, r1, r2
   1ddd4:	sub	r0, r0, r1
   1ddd8:	str	r0, [sp, #52]	; 0x34
   1dddc:	ldr	r0, [sp, #52]	; 0x34
   1dde0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1dde4:	cmp	r0, r1
   1dde8:	movw	r0, #0
   1ddec:	movhi	r0, #1
   1ddf0:	and	r0, r0, #1
   1ddf4:	movw	r1, #0
   1ddf8:	sub	r0, r1, r0
   1ddfc:	str	r0, [sp, #48]	; 0x30
   1de00:	ldr	r0, [sp, #48]	; 0x30
   1de04:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1de08:	add	r0, r1, r0
   1de0c:	str	r0, [fp, #-44]	; 0xffffffd4
   1de10:	ldr	r0, [sp, #48]	; 0x30
   1de14:	ldr	r1, [fp, #-20]	; 0xffffffec
   1de18:	and	r0, r0, r1
   1de1c:	ldr	r1, [sp, #52]	; 0x34
   1de20:	add	r0, r1, r0
   1de24:	str	r0, [sp, #52]	; 0x34
   1de28:	ldr	r0, [sp, #52]	; 0x34
   1de2c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1de30:	cmp	r0, r1
   1de34:	bcc	1de54 <__assert_fail@plt+0xc9c0>
   1de38:	ldr	r0, [fp, #-20]	; 0xffffffec
   1de3c:	ldr	r1, [sp, #52]	; 0x34
   1de40:	sub	r0, r1, r0
   1de44:	str	r0, [sp, #52]	; 0x34
   1de48:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1de4c:	add	r0, r0, #1
   1de50:	str	r0, [fp, #-44]	; 0xffffffd4
   1de54:	ldr	r0, [sp, #52]	; 0x34
   1de58:	str	r0, [fp, #-28]	; 0xffffffe4
   1de5c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1de60:	str	r0, [fp, #-40]	; 0xffffffd8
   1de64:	ldr	r0, [fp, #-4]
   1de68:	movw	r1, #0
   1de6c:	cmp	r0, r1
   1de70:	beq	1de88 <__assert_fail@plt+0xc9f4>
   1de74:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1de78:	ldr	r1, [fp, #-4]
   1de7c:	ldr	r2, [fp, #-12]
   1de80:	add	r1, r1, r2, lsl #2
   1de84:	str	r0, [r1]
   1de88:	b	1dc44 <__assert_fail@plt+0xc7b0>
   1de8c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1de90:	cmp	r0, #0
   1de94:	beq	1dea4 <__assert_fail@plt+0xca10>
   1de98:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1de9c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1dea0:	bl	15fa8 <__assert_fail@plt+0x4b14>
   1dea4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1dea8:	ldr	r1, [fp, #-16]
   1deac:	ldr	r1, [r1]
   1deb0:	lsr	r0, r0, r1
   1deb4:	mov	sp, fp
   1deb8:	pop	{fp, pc}
   1debc:	push	{fp, lr}
   1dec0:	mov	fp, sp
   1dec4:	sub	sp, sp, #80	; 0x50
   1dec8:	str	r0, [fp, #-8]
   1decc:	str	r1, [fp, #-12]
   1ded0:	str	r2, [fp, #-16]
   1ded4:	movw	r0, #19526	; 0x4c46
   1ded8:	movt	r0, #4
   1dedc:	str	r0, [fp, #-24]	; 0xffffffe8
   1dee0:	ldr	r0, [fp, #-12]
   1dee4:	cmp	r0, #1
   1dee8:	ble	1df28 <__assert_fail@plt+0xca94>
   1deec:	ldr	r0, [fp, #-12]
   1def0:	cmp	r0, #36	; 0x24
   1def4:	bgt	1df08 <__assert_fail@plt+0xca74>
   1def8:	movw	r0, #19589	; 0x4c85
   1defc:	movt	r0, #4
   1df00:	str	r0, [fp, #-24]	; 0xffffffe8
   1df04:	b	1df24 <__assert_fail@plt+0xca90>
   1df08:	ldr	r0, [fp, #-12]
   1df0c:	cmp	r0, #62	; 0x3e
   1df10:	ble	1df20 <__assert_fail@plt+0xca8c>
   1df14:	movw	r0, #0
   1df18:	str	r0, [fp, #-4]
   1df1c:	b	1e204 <__assert_fail@plt+0xcd70>
   1df20:	b	1df24 <__assert_fail@plt+0xca90>
   1df24:	b	1df70 <__assert_fail@plt+0xcadc>
   1df28:	ldr	r0, [fp, #-12]
   1df2c:	cmn	r0, #1
   1df30:	blt	1df40 <__assert_fail@plt+0xcaac>
   1df34:	movw	r0, #10
   1df38:	str	r0, [fp, #-12]
   1df3c:	b	1df6c <__assert_fail@plt+0xcad8>
   1df40:	ldr	r0, [fp, #-12]
   1df44:	movw	r1, #0
   1df48:	sub	r0, r1, r0
   1df4c:	str	r0, [fp, #-12]
   1df50:	ldr	r0, [fp, #-12]
   1df54:	cmp	r0, #36	; 0x24
   1df58:	ble	1df68 <__assert_fail@plt+0xcad4>
   1df5c:	movw	r0, #0
   1df60:	str	r0, [fp, #-4]
   1df64:	b	1e204 <__assert_fail@plt+0xcd70>
   1df68:	b	1df6c <__assert_fail@plt+0xcad8>
   1df6c:	b	1df70 <__assert_fail@plt+0xcadc>
   1df70:	ldr	r0, [fp, #-16]
   1df74:	ldr	r1, [fp, #-12]
   1df78:	bl	1b1b8 <__assert_fail@plt+0x9d24>
   1df7c:	add	r0, r0, #1
   1df80:	str	r0, [fp, #-36]	; 0xffffffdc
   1df84:	ldr	r0, [fp, #-8]
   1df88:	movw	r1, #0
   1df8c:	cmp	r0, r1
   1df90:	bne	1dfc8 <__assert_fail@plt+0xcb34>
   1df94:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1df98:	add	r0, r0, #1
   1df9c:	str	r0, [sp, #40]	; 0x28
   1dfa0:	movw	r0, #24872	; 0x6128
   1dfa4:	movt	r0, #5
   1dfa8:	ldr	r0, [r0]
   1dfac:	ldr	r1, [sp, #40]	; 0x28
   1dfb0:	str	r0, [sp, #24]
   1dfb4:	mov	r0, r1
   1dfb8:	ldr	r1, [sp, #24]
   1dfbc:	blx	r1
   1dfc0:	str	r0, [fp, #-8]
   1dfc4:	b	1dfd0 <__assert_fail@plt+0xcb3c>
   1dfc8:	movw	r0, #0
   1dfcc:	str	r0, [sp, #40]	; 0x28
   1dfd0:	ldr	r0, [fp, #-16]
   1dfd4:	ldr	r0, [r0, #4]
   1dfd8:	cmp	r0, #0
   1dfdc:	blt	1dff0 <__assert_fail@plt+0xcb5c>
   1dfe0:	ldr	r0, [fp, #-16]
   1dfe4:	ldr	r0, [r0, #4]
   1dfe8:	str	r0, [sp, #20]
   1dfec:	b	1e004 <__assert_fail@plt+0xcb70>
   1dff0:	ldr	r0, [fp, #-16]
   1dff4:	ldr	r0, [r0, #4]
   1dff8:	movw	r1, #0
   1dffc:	sub	r0, r1, r0
   1e000:	str	r0, [sp, #20]
   1e004:	ldr	r0, [sp, #20]
   1e008:	str	r0, [fp, #-28]	; 0xffffffe4
   1e00c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e010:	cmp	r0, #0
   1e014:	bne	1e030 <__assert_fail@plt+0xcb9c>
   1e018:	ldr	r0, [fp, #-8]
   1e01c:	movw	r1, #48	; 0x30
   1e020:	strb	r1, [r0]
   1e024:	movw	r0, #1
   1e028:	str	r0, [fp, #-36]	; 0xffffffdc
   1e02c:	b	1e190 <__assert_fail@plt+0xccfc>
   1e030:	movw	r0, #0
   1e034:	str	r0, [fp, #-32]	; 0xffffffe0
   1e038:	ldr	r0, [fp, #-16]
   1e03c:	ldr	r0, [r0, #4]
   1e040:	cmp	r0, #0
   1e044:	bge	1e064 <__assert_fail@plt+0xcbd0>
   1e048:	ldr	r0, [fp, #-8]
   1e04c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1e050:	add	r2, r1, #1
   1e054:	str	r2, [fp, #-32]	; 0xffffffe0
   1e058:	add	r0, r0, r1
   1e05c:	movw	r1, #45	; 0x2d
   1e060:	strb	r1, [r0]
   1e064:	ldr	r0, [fp, #-12]
   1e068:	bl	15608 <__assert_fail@plt+0x4174>
   1e06c:	str	r0, [fp, #-20]	; 0xffffffec
   1e070:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e074:	cmp	r0, #0
   1e078:	beq	1e0c4 <__assert_fail@plt+0xcc30>
   1e07c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e080:	ldr	r1, [fp, #-8]
   1e084:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1e088:	add	r1, r1, r2
   1e08c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1e090:	ldr	r3, [fp, #-16]
   1e094:	ldr	r3, [r3, #8]
   1e098:	ldr	ip, [fp, #-28]	; 0xffffffe4
   1e09c:	str	r0, [sp, #16]
   1e0a0:	mov	r0, r1
   1e0a4:	mov	r1, r2
   1e0a8:	mov	r2, r3
   1e0ac:	mov	r3, ip
   1e0b0:	bl	15708 <__assert_fail@plt+0x4274>
   1e0b4:	ldr	r1, [sp, #16]
   1e0b8:	add	r0, r1, r0
   1e0bc:	str	r0, [fp, #-36]	; 0xffffffdc
   1e0c0:	b	1e13c <__assert_fail@plt+0xcca8>
   1e0c4:	ldr	r1, [fp, #-12]
   1e0c8:	add	r0, sp, #32
   1e0cc:	bl	15858 <__assert_fail@plt+0x43c4>
   1e0d0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e0d4:	bl	15f30 <__assert_fail@plt+0x4a9c>
   1e0d8:	str	r0, [sp, #28]
   1e0dc:	ldr	r0, [sp, #28]
   1e0e0:	ldr	r1, [fp, #-16]
   1e0e4:	ldr	r1, [r1, #8]
   1e0e8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1e0ec:	bl	13af0 <__assert_fail@plt+0x265c>
   1e0f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e0f4:	ldr	r1, [fp, #-8]
   1e0f8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1e0fc:	add	r1, r1, r2
   1e100:	ldr	r2, [fp, #-12]
   1e104:	ldr	r3, [sp, #28]
   1e108:	ldr	lr, [fp, #-28]	; 0xffffffe4
   1e10c:	str	r0, [sp, #12]
   1e110:	mov	r0, r1
   1e114:	mov	r1, r2
   1e118:	add	r2, sp, #32
   1e11c:	str	lr, [sp]
   1e120:	bl	158d4 <__assert_fail@plt+0x4440>
   1e124:	ldr	r1, [sp, #12]
   1e128:	add	r0, r1, r0
   1e12c:	str	r0, [fp, #-36]	; 0xffffffdc
   1e130:	ldr	r0, [sp, #28]
   1e134:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1e138:	bl	15fa8 <__assert_fail@plt+0x4b14>
   1e13c:	b	1e140 <__assert_fail@plt+0xccac>
   1e140:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e144:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1e148:	cmp	r0, r1
   1e14c:	bcs	1e18c <__assert_fail@plt+0xccf8>
   1e150:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e154:	ldr	r1, [fp, #-8]
   1e158:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1e15c:	add	r1, r1, r2
   1e160:	ldrb	r1, [r1]
   1e164:	add	r0, r0, r1
   1e168:	ldrb	r0, [r0]
   1e16c:	ldr	r1, [fp, #-8]
   1e170:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1e174:	add	r1, r1, r2
   1e178:	strb	r0, [r1]
   1e17c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e180:	add	r0, r0, #1
   1e184:	str	r0, [fp, #-32]	; 0xffffffe0
   1e188:	b	1e140 <__assert_fail@plt+0xccac>
   1e18c:	b	1e190 <__assert_fail@plt+0xccfc>
   1e190:	ldr	r0, [fp, #-8]
   1e194:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1e198:	add	r0, r0, r1
   1e19c:	movw	r1, #0
   1e1a0:	strb	r1, [r0]
   1e1a4:	ldr	r0, [sp, #40]	; 0x28
   1e1a8:	cmp	r0, #0
   1e1ac:	beq	1e1fc <__assert_fail@plt+0xcd68>
   1e1b0:	ldr	r0, [sp, #40]	; 0x28
   1e1b4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1e1b8:	add	r1, r1, #1
   1e1bc:	cmp	r0, r1
   1e1c0:	beq	1e1fc <__assert_fail@plt+0xcd68>
   1e1c4:	movw	r0, #24876	; 0x612c
   1e1c8:	movt	r0, #5
   1e1cc:	ldr	r0, [r0]
   1e1d0:	ldr	r1, [fp, #-8]
   1e1d4:	ldr	r2, [sp, #40]	; 0x28
   1e1d8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1e1dc:	add	r3, r3, #1
   1e1e0:	str	r0, [sp, #8]
   1e1e4:	mov	r0, r1
   1e1e8:	mov	r1, r2
   1e1ec:	mov	r2, r3
   1e1f0:	ldr	r3, [sp, #8]
   1e1f4:	blx	r3
   1e1f8:	str	r0, [fp, #-8]
   1e1fc:	ldr	r0, [fp, #-8]
   1e200:	str	r0, [fp, #-4]
   1e204:	ldr	r0, [fp, #-4]
   1e208:	mov	sp, fp
   1e20c:	pop	{fp, pc}
   1e210:	push	{fp, lr}
   1e214:	mov	fp, sp
   1e218:	sub	sp, sp, #104	; 0x68
   1e21c:	str	r0, [fp, #-8]
   1e220:	str	r1, [fp, #-12]
   1e224:	str	r2, [fp, #-16]
   1e228:	ldr	r0, [fp, #-16]
   1e22c:	cmp	r0, #0
   1e230:	beq	1e24c <__assert_fail@plt+0xcdb8>
   1e234:	ldr	r0, [fp, #-16]
   1e238:	cmp	r0, #2
   1e23c:	blt	1e250 <__assert_fail@plt+0xcdbc>
   1e240:	ldr	r0, [fp, #-16]
   1e244:	cmp	r0, #62	; 0x3e
   1e248:	bgt	1e250 <__assert_fail@plt+0xcdbc>
   1e24c:	b	1e270 <__assert_fail@plt+0xcddc>
   1e250:	movw	r0, #19626	; 0x4caa
   1e254:	movt	r0, #4
   1e258:	movw	r1, #17404	; 0x43fc
   1e25c:	movt	r1, #4
   1e260:	movw	r2, #4320	; 0x10e0
   1e264:	movw	r3, #19665	; 0x4cd1
   1e268:	movt	r3, #4
   1e26c:	bl	11494 <__assert_fail@plt>
   1e270:	b	1e274 <__assert_fail@plt+0xcde0>
   1e274:	bl	11368 <__ctype_b_loc@plt>
   1e278:	ldr	r0, [r0]
   1e27c:	ldr	lr, [fp, #-12]
   1e280:	ldrb	lr, [lr]
   1e284:	mov	r1, lr
   1e288:	add	r0, r0, lr, lsl #1
   1e28c:	ldrh	r0, [r0]
   1e290:	and	r0, r0, #8192	; 0x2000
   1e294:	cmp	r0, #0
   1e298:	str	r1, [sp, #36]	; 0x24
   1e29c:	beq	1e2b0 <__assert_fail@plt+0xce1c>
   1e2a0:	ldr	r0, [fp, #-12]
   1e2a4:	add	r0, r0, #1
   1e2a8:	str	r0, [fp, #-12]
   1e2ac:	b	1e274 <__assert_fail@plt+0xcde0>
   1e2b0:	ldr	r0, [fp, #-12]
   1e2b4:	ldrb	r0, [r0]
   1e2b8:	cmp	r0, #45	; 0x2d
   1e2bc:	movw	r0, #0
   1e2c0:	moveq	r0, #1
   1e2c4:	and	r0, r0, #1
   1e2c8:	str	r0, [fp, #-48]	; 0xffffffd0
   1e2cc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1e2d0:	ldr	r1, [fp, #-12]
   1e2d4:	add	r0, r1, r0
   1e2d8:	str	r0, [fp, #-12]
   1e2dc:	ldr	r0, [fp, #-16]
   1e2e0:	cmp	r0, #0
   1e2e4:	bne	1e384 <__assert_fail@plt+0xcef0>
   1e2e8:	ldr	r0, [fp, #-12]
   1e2ec:	ldrb	r0, [r0]
   1e2f0:	cmp	r0, #48	; 0x30
   1e2f4:	bne	1e378 <__assert_fail@plt+0xcee4>
   1e2f8:	ldr	r0, [fp, #-12]
   1e2fc:	ldrb	r0, [r0, #1]
   1e300:	cmp	r0, #120	; 0x78
   1e304:	beq	1e318 <__assert_fail@plt+0xce84>
   1e308:	ldr	r0, [fp, #-12]
   1e30c:	ldrb	r0, [r0, #1]
   1e310:	cmp	r0, #88	; 0x58
   1e314:	bne	1e330 <__assert_fail@plt+0xce9c>
   1e318:	movw	r0, #16
   1e31c:	str	r0, [fp, #-16]
   1e320:	ldr	r0, [fp, #-12]
   1e324:	add	r0, r0, #2
   1e328:	str	r0, [fp, #-12]
   1e32c:	b	1e374 <__assert_fail@plt+0xcee0>
   1e330:	ldr	r0, [fp, #-12]
   1e334:	ldrb	r0, [r0, #1]
   1e338:	cmp	r0, #98	; 0x62
   1e33c:	beq	1e350 <__assert_fail@plt+0xcebc>
   1e340:	ldr	r0, [fp, #-12]
   1e344:	ldrb	r0, [r0, #1]
   1e348:	cmp	r0, #66	; 0x42
   1e34c:	bne	1e368 <__assert_fail@plt+0xced4>
   1e350:	movw	r0, #2
   1e354:	str	r0, [fp, #-16]
   1e358:	ldr	r0, [fp, #-12]
   1e35c:	add	r0, r0, #2
   1e360:	str	r0, [fp, #-12]
   1e364:	b	1e370 <__assert_fail@plt+0xcedc>
   1e368:	movw	r0, #8
   1e36c:	str	r0, [fp, #-16]
   1e370:	b	1e374 <__assert_fail@plt+0xcee0>
   1e374:	b	1e380 <__assert_fail@plt+0xceec>
   1e378:	movw	r0, #10
   1e37c:	str	r0, [fp, #-16]
   1e380:	b	1e384 <__assert_fail@plt+0xcef0>
   1e384:	ldr	r0, [fp, #-12]
   1e388:	ldrsb	r0, [r0]
   1e38c:	cmp	r0, #0
   1e390:	bne	1e3ac <__assert_fail@plt+0xcf18>
   1e394:	ldr	r0, [fp, #-8]
   1e398:	movw	r1, #0
   1e39c:	str	r1, [r0, #4]
   1e3a0:	mvn	r0, #0
   1e3a4:	str	r0, [fp, #-4]
   1e3a8:	b	1e7cc <__assert_fail@plt+0xd338>
   1e3ac:	ldr	r0, [fp, #-12]
   1e3b0:	bl	1138c <strlen@plt>
   1e3b4:	str	r0, [fp, #-44]	; 0xffffffd4
   1e3b8:	movw	r0, #24872	; 0x6128
   1e3bc:	movt	r0, #5
   1e3c0:	ldr	r0, [r0]
   1e3c4:	ldr	lr, [fp, #-44]	; 0xffffffd4
   1e3c8:	str	r0, [sp, #32]
   1e3cc:	mov	r0, lr
   1e3d0:	ldr	lr, [sp, #32]
   1e3d4:	blx	lr
   1e3d8:	str	r0, [sp, #52]	; 0x34
   1e3dc:	ldr	r0, [fp, #-16]
   1e3e0:	cmp	r0, #36	; 0x24
   1e3e4:	movw	r0, #0
   1e3e8:	movgt	r0, #1
   1e3ec:	tst	r0, #1
   1e3f0:	movw	r0, #36	; 0x24
   1e3f4:	moveq	r0, #10
   1e3f8:	str	r0, [fp, #-24]	; 0xffffffe8
   1e3fc:	movw	r0, #0
   1e400:	str	r0, [fp, #-40]	; 0xffffffd8
   1e404:	ldr	r0, [fp, #-12]
   1e408:	ldrsb	r0, [r0]
   1e40c:	cmp	r0, #0
   1e410:	beq	1e57c <__assert_fail@plt+0xd0e8>
   1e414:	bl	11368 <__ctype_b_loc@plt>
   1e418:	ldr	r0, [r0]
   1e41c:	ldr	lr, [fp, #-12]
   1e420:	ldrb	lr, [lr]
   1e424:	mov	r1, lr
   1e428:	add	r0, r0, lr, lsl #1
   1e42c:	ldrh	r0, [r0]
   1e430:	and	r0, r0, #8192	; 0x2000
   1e434:	cmp	r0, #0
   1e438:	str	r1, [sp, #28]
   1e43c:	beq	1e444 <__assert_fail@plt+0xcfb0>
   1e440:	b	1e56c <__assert_fail@plt+0xd0d8>
   1e444:	ldr	r0, [fp, #-12]
   1e448:	ldrb	r0, [r0]
   1e44c:	cmp	r0, #48	; 0x30
   1e450:	blt	1e478 <__assert_fail@plt+0xcfe4>
   1e454:	ldr	r0, [fp, #-12]
   1e458:	ldrb	r0, [r0]
   1e45c:	cmp	r0, #57	; 0x39
   1e460:	bgt	1e478 <__assert_fail@plt+0xcfe4>
   1e464:	ldr	r0, [fp, #-12]
   1e468:	ldrb	r0, [r0]
   1e46c:	sub	r0, r0, #48	; 0x30
   1e470:	str	r0, [sp, #48]	; 0x30
   1e474:	b	1e4fc <__assert_fail@plt+0xd068>
   1e478:	ldr	r0, [fp, #-12]
   1e47c:	ldrb	r0, [r0]
   1e480:	cmp	r0, #97	; 0x61
   1e484:	blt	1e4b4 <__assert_fail@plt+0xd020>
   1e488:	ldr	r0, [fp, #-12]
   1e48c:	ldrb	r0, [r0]
   1e490:	cmp	r0, #122	; 0x7a
   1e494:	bgt	1e4b4 <__assert_fail@plt+0xd020>
   1e498:	ldr	r0, [fp, #-12]
   1e49c:	ldrb	r0, [r0]
   1e4a0:	sub	r0, r0, #97	; 0x61
   1e4a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e4a8:	add	r0, r0, r1
   1e4ac:	str	r0, [sp, #48]	; 0x30
   1e4b0:	b	1e4f8 <__assert_fail@plt+0xd064>
   1e4b4:	ldr	r0, [fp, #-12]
   1e4b8:	ldrb	r0, [r0]
   1e4bc:	cmp	r0, #65	; 0x41
   1e4c0:	blt	1e4ec <__assert_fail@plt+0xd058>
   1e4c4:	ldr	r0, [fp, #-12]
   1e4c8:	ldrb	r0, [r0]
   1e4cc:	cmp	r0, #90	; 0x5a
   1e4d0:	bgt	1e4ec <__assert_fail@plt+0xd058>
   1e4d4:	ldr	r0, [fp, #-12]
   1e4d8:	ldrb	r0, [r0]
   1e4dc:	sub	r0, r0, #65	; 0x41
   1e4e0:	add	r0, r0, #10
   1e4e4:	str	r0, [sp, #48]	; 0x30
   1e4e8:	b	1e4f4 <__assert_fail@plt+0xd060>
   1e4ec:	ldr	r0, [fp, #-16]
   1e4f0:	str	r0, [sp, #48]	; 0x30
   1e4f4:	b	1e4f8 <__assert_fail@plt+0xd064>
   1e4f8:	b	1e4fc <__assert_fail@plt+0xd068>
   1e4fc:	b	1e500 <__assert_fail@plt+0xd06c>
   1e500:	ldr	r0, [sp, #48]	; 0x30
   1e504:	ldr	r1, [fp, #-16]
   1e508:	cmp	r0, r1
   1e50c:	bcc	1e550 <__assert_fail@plt+0xd0bc>
   1e510:	movw	r0, #24880	; 0x6130
   1e514:	movt	r0, #5
   1e518:	ldr	r0, [r0]
   1e51c:	ldr	r1, [sp, #52]	; 0x34
   1e520:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1e524:	str	r0, [sp, #24]
   1e528:	mov	r0, r1
   1e52c:	mov	r1, r2
   1e530:	ldr	r2, [sp, #24]
   1e534:	blx	r2
   1e538:	ldr	r0, [fp, #-8]
   1e53c:	movw	r1, #0
   1e540:	str	r1, [r0, #4]
   1e544:	mvn	r0, #0
   1e548:	str	r0, [fp, #-4]
   1e54c:	b	1e7cc <__assert_fail@plt+0xd338>
   1e550:	ldr	r0, [sp, #48]	; 0x30
   1e554:	ldr	r1, [sp, #52]	; 0x34
   1e558:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1e55c:	add	r3, r2, #1
   1e560:	str	r3, [fp, #-40]	; 0xffffffd8
   1e564:	add	r1, r1, r2
   1e568:	strb	r0, [r1]
   1e56c:	ldr	r0, [fp, #-12]
   1e570:	add	r0, r0, #1
   1e574:	str	r0, [fp, #-12]
   1e578:	b	1e404 <__assert_fail@plt+0xcf70>
   1e57c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1e580:	cmp	r0, #0
   1e584:	bne	1e5c8 <__assert_fail@plt+0xd134>
   1e588:	movw	r0, #24880	; 0x6130
   1e58c:	movt	r0, #5
   1e590:	ldr	r0, [r0]
   1e594:	ldr	r1, [sp, #52]	; 0x34
   1e598:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1e59c:	str	r0, [sp, #20]
   1e5a0:	mov	r0, r1
   1e5a4:	mov	r1, r2
   1e5a8:	ldr	r2, [sp, #20]
   1e5ac:	blx	r2
   1e5b0:	ldr	r0, [fp, #-8]
   1e5b4:	movw	r1, #0
   1e5b8:	str	r1, [r0, #4]
   1e5bc:	mvn	r0, #0
   1e5c0:	str	r0, [fp, #-4]
   1e5c4:	b	1e7cc <__assert_fail@plt+0xd338>
   1e5c8:	ldr	r0, [fp, #-16]
   1e5cc:	bl	15608 <__assert_fail@plt+0x4174>
   1e5d0:	str	r0, [fp, #-20]	; 0xffffffec
   1e5d4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e5d8:	cmp	r0, #0
   1e5dc:	bls	1e650 <__assert_fail@plt+0xd1bc>
   1e5e0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1e5e4:	ldr	r1, [fp, #-20]	; 0xffffffec
   1e5e8:	mul	r0, r0, r1
   1e5ec:	add	r0, r0, #31
   1e5f0:	lsr	r0, r0, #5
   1e5f4:	str	r0, [fp, #-32]	; 0xffffffe0
   1e5f8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e5fc:	ldr	r1, [fp, #-8]
   1e600:	ldr	r1, [r1]
   1e604:	cmp	r0, r1
   1e608:	ble	1e620 <__assert_fail@plt+0xd18c>
   1e60c:	ldr	r0, [fp, #-8]
   1e610:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1e614:	bl	16114 <__assert_fail@plt+0x4c80>
   1e618:	str	r0, [sp, #16]
   1e61c:	b	1e62c <__assert_fail@plt+0xd198>
   1e620:	ldr	r0, [fp, #-8]
   1e624:	ldr	r0, [r0, #8]
   1e628:	str	r0, [sp, #16]
   1e62c:	ldr	r0, [sp, #16]
   1e630:	str	r0, [fp, #-36]	; 0xffffffdc
   1e634:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1e638:	ldr	r1, [sp, #52]	; 0x34
   1e63c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1e640:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e644:	bl	15b58 <__assert_fail@plt+0x46c4>
   1e648:	str	r0, [fp, #-28]	; 0xffffffe4
   1e64c:	b	1e734 <__assert_fail@plt+0xd2a0>
   1e650:	ldr	r1, [fp, #-16]
   1e654:	add	r0, sp, #40	; 0x28
   1e658:	bl	15858 <__assert_fail@plt+0x43c4>
   1e65c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1e660:	ldr	r1, [sp, #40]	; 0x28
   1e664:	add	r0, r0, r1
   1e668:	sub	r0, r0, #1
   1e66c:	ldr	r1, [sp, #40]	; 0x28
   1e670:	udiv	r0, r0, r1
   1e674:	str	r0, [fp, #-32]	; 0xffffffe0
   1e678:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e67c:	ldr	r1, [fp, #-8]
   1e680:	ldr	r1, [r1]
   1e684:	cmp	r0, r1
   1e688:	ble	1e6a0 <__assert_fail@plt+0xd20c>
   1e68c:	ldr	r0, [fp, #-8]
   1e690:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1e694:	bl	16114 <__assert_fail@plt+0x4c80>
   1e698:	str	r0, [sp, #12]
   1e69c:	b	1e6ac <__assert_fail@plt+0xd218>
   1e6a0:	ldr	r0, [fp, #-8]
   1e6a4:	ldr	r0, [r0, #8]
   1e6a8:	str	r0, [sp, #12]
   1e6ac:	ldr	r0, [sp, #12]
   1e6b0:	str	r0, [fp, #-36]	; 0xffffffdc
   1e6b4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1e6b8:	ldr	r1, [sp, #52]	; 0x34
   1e6bc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1e6c0:	ldr	r3, [fp, #-16]
   1e6c4:	add	ip, sp, #40	; 0x28
   1e6c8:	str	ip, [sp]
   1e6cc:	bl	15c74 <__assert_fail@plt+0x47e0>
   1e6d0:	str	r0, [fp, #-28]	; 0xffffffe4
   1e6d4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e6d8:	cmp	r0, #0
   1e6dc:	ble	1e6e4 <__assert_fail@plt+0xd250>
   1e6e0:	b	1e704 <__assert_fail@plt+0xd270>
   1e6e4:	movw	r0, #19716	; 0x4d04
   1e6e8:	movt	r0, #4
   1e6ec:	movw	r1, #17404	; 0x43fc
   1e6f0:	movt	r1, #4
   1e6f4:	movw	r2, #4405	; 0x1135
   1e6f8:	movw	r3, #19665	; 0x4cd1
   1e6fc:	movt	r3, #4
   1e700:	bl	11494 <__assert_fail@plt>
   1e704:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1e708:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1e70c:	sub	r1, r1, #1
   1e710:	add	r0, r0, r1, lsl #2
   1e714:	ldr	r0, [r0]
   1e718:	cmp	r0, #0
   1e71c:	movw	r0, #0
   1e720:	moveq	r0, #1
   1e724:	and	r0, r0, #1
   1e728:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1e72c:	sub	r0, r1, r0
   1e730:	str	r0, [fp, #-28]	; 0xffffffe4
   1e734:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e738:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1e73c:	cmp	r0, r1
   1e740:	bgt	1e748 <__assert_fail@plt+0xd2b4>
   1e744:	b	1e768 <__assert_fail@plt+0xd2d4>
   1e748:	movw	r0, #19723	; 0x4d0b
   1e74c:	movt	r0, #4
   1e750:	movw	r1, #17404	; 0x43fc
   1e754:	movt	r1, #4
   1e758:	movw	r2, #4408	; 0x1138
   1e75c:	movw	r3, #19665	; 0x4cd1
   1e760:	movt	r3, #4
   1e764:	bl	11494 <__assert_fail@plt>
   1e768:	movw	r0, #24880	; 0x6130
   1e76c:	movt	r0, #5
   1e770:	ldr	r0, [r0]
   1e774:	ldr	r1, [sp, #52]	; 0x34
   1e778:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1e77c:	str	r0, [sp, #8]
   1e780:	mov	r0, r1
   1e784:	mov	r1, r2
   1e788:	ldr	r2, [sp, #8]
   1e78c:	blx	r2
   1e790:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1e794:	cmp	r0, #0
   1e798:	beq	1e7b0 <__assert_fail@plt+0xd31c>
   1e79c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e7a0:	movw	r1, #0
   1e7a4:	sub	r0, r1, r0
   1e7a8:	str	r0, [sp, #4]
   1e7ac:	b	1e7b8 <__assert_fail@plt+0xd324>
   1e7b0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e7b4:	str	r0, [sp, #4]
   1e7b8:	ldr	r0, [sp, #4]
   1e7bc:	ldr	r1, [fp, #-8]
   1e7c0:	str	r0, [r1, #4]
   1e7c4:	movw	r0, #0
   1e7c8:	str	r0, [fp, #-4]
   1e7cc:	ldr	r0, [fp, #-4]
   1e7d0:	mov	sp, fp
   1e7d4:	pop	{fp, pc}
   1e7d8:	push	{fp, lr}
   1e7dc:	mov	fp, sp
   1e7e0:	sub	sp, sp, #16
   1e7e4:	str	r0, [fp, #-4]
   1e7e8:	str	r1, [sp, #8]
   1e7ec:	str	r2, [sp, #4]
   1e7f0:	ldr	r0, [fp, #-4]
   1e7f4:	bl	15e94 <__assert_fail@plt+0x4a00>
   1e7f8:	ldr	r0, [fp, #-4]
   1e7fc:	ldr	r1, [sp, #8]
   1e800:	ldr	r2, [sp, #4]
   1e804:	bl	1e210 <__assert_fail@plt+0xcd7c>
   1e808:	mov	sp, fp
   1e80c:	pop	{fp, pc}
   1e810:	push	{fp, lr}
   1e814:	mov	fp, sp
   1e818:	sub	sp, sp, #32
   1e81c:	str	r0, [fp, #-8]
   1e820:	str	r1, [fp, #-12]
   1e824:	str	r2, [sp, #16]
   1e828:	ldr	r1, [fp, #-12]
   1e82c:	ldr	r2, [sp, #16]
   1e830:	movw	r0, #0
   1e834:	bl	1debc <__assert_fail@plt+0xca28>
   1e838:	str	r0, [sp, #12]
   1e83c:	ldr	r0, [sp, #12]
   1e840:	movw	r1, #0
   1e844:	cmp	r0, r1
   1e848:	bne	1e858 <__assert_fail@plt+0xd3c4>
   1e84c:	movw	r0, #0
   1e850:	str	r0, [fp, #-4]
   1e854:	b	1e8b0 <__assert_fail@plt+0xd41c>
   1e858:	ldr	r0, [sp, #12]
   1e85c:	bl	1138c <strlen@plt>
   1e860:	str	r0, [sp, #8]
   1e864:	ldr	r0, [sp, #12]
   1e868:	ldr	r2, [sp, #8]
   1e86c:	ldr	r3, [fp, #-8]
   1e870:	movw	r1, #1
   1e874:	bl	112c0 <fwrite@plt>
   1e878:	str	r0, [sp, #4]
   1e87c:	movw	r0, #24880	; 0x6130
   1e880:	movt	r0, #5
   1e884:	ldr	r0, [r0]
   1e888:	ldr	r1, [sp, #12]
   1e88c:	ldr	r2, [sp, #8]
   1e890:	add	r2, r2, #1
   1e894:	str	r0, [sp]
   1e898:	mov	r0, r1
   1e89c:	mov	r1, r2
   1e8a0:	ldr	r2, [sp]
   1e8a4:	blx	r2
   1e8a8:	ldr	r0, [sp, #4]
   1e8ac:	str	r0, [fp, #-4]
   1e8b0:	ldr	r0, [fp, #-4]
   1e8b4:	mov	sp, fp
   1e8b8:	pop	{fp, pc}
   1e8bc:	push	{r4, sl, fp, lr}
   1e8c0:	add	fp, sp, #8
   1e8c4:	sub	sp, sp, #72	; 0x48
   1e8c8:	ldr	ip, [fp, #16]
   1e8cc:	ldr	lr, [fp, #12]
   1e8d0:	ldr	r4, [fp, #8]
   1e8d4:	str	r0, [fp, #-12]
   1e8d8:	str	r1, [fp, #-16]
   1e8dc:	str	r2, [fp, #-20]	; 0xffffffec
   1e8e0:	str	r3, [fp, #-24]	; 0xffffffe8
   1e8e4:	ldr	r0, [fp, #12]
   1e8e8:	cmp	r0, #0
   1e8ec:	str	r4, [sp, #20]
   1e8f0:	str	lr, [sp, #16]
   1e8f4:	str	ip, [sp, #12]
   1e8f8:	beq	1e908 <__assert_fail@plt+0xd474>
   1e8fc:	movw	r0, #19735	; 0x4d17
   1e900:	movt	r0, #4
   1e904:	bl	1a9ec <__assert_fail@plt+0x9558>
   1e908:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e90c:	cmp	r0, #1
   1e910:	beq	1e920 <__assert_fail@plt+0xd48c>
   1e914:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e918:	cmn	r0, #1
   1e91c:	bne	1e924 <__assert_fail@plt+0xd490>
   1e920:	b	1e944 <__assert_fail@plt+0xd4b0>
   1e924:	movw	r0, #19768	; 0x4d38
   1e928:	movt	r0, #4
   1e92c:	movw	r1, #17404	; 0x43fc
   1e930:	movt	r1, #4
   1e934:	movw	r2, #4468	; 0x1174
   1e938:	movw	r3, #19794	; 0x4d52
   1e93c:	movt	r3, #4
   1e940:	bl	11494 <__assert_fail@plt>
   1e944:	ldr	r0, [fp, #8]
   1e948:	cmn	r0, #1
   1e94c:	blt	1e960 <__assert_fail@plt+0xd4cc>
   1e950:	ldr	r0, [fp, #8]
   1e954:	cmp	r0, #1
   1e958:	bgt	1e960 <__assert_fail@plt+0xd4cc>
   1e95c:	b	1e980 <__assert_fail@plt+0xd4ec>
   1e960:	movw	r0, #19874	; 0x4da2
   1e964:	movt	r0, #4
   1e968:	movw	r1, #17404	; 0x43fc
   1e96c:	movt	r1, #4
   1e970:	movw	r2, #4469	; 0x1175
   1e974:	movw	r3, #19794	; 0x4d52
   1e978:	movt	r3, #4
   1e97c:	bl	11494 <__assert_fail@plt>
   1e980:	ldr	r0, [fp, #8]
   1e984:	cmp	r0, #0
   1e988:	bne	1e994 <__assert_fail@plt+0xd500>
   1e98c:	bl	1ebfc <__assert_fail@plt+0xd768>
   1e990:	str	r0, [fp, #8]
   1e994:	ldr	r0, [fp, #16]
   1e998:	str	r0, [fp, #-28]	; 0xffffffe4
   1e99c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e9a0:	ldr	r1, [fp, #8]
   1e9a4:	cmp	r0, r1
   1e9a8:	beq	1e9bc <__assert_fail@plt+0xd528>
   1e9ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e9b0:	lsl	r0, r0, #1
   1e9b4:	str	r0, [sp, #8]
   1e9b8:	b	1e9c8 <__assert_fail@plt+0xd534>
   1e9bc:	movw	r0, #0
   1e9c0:	str	r0, [sp, #8]
   1e9c4:	b	1e9c8 <__assert_fail@plt+0xd534>
   1e9c8:	ldr	r0, [sp, #8]
   1e9cc:	str	r0, [fp, #-32]	; 0xffffffe0
   1e9d0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e9d4:	cmp	r0, #1
   1e9d8:	bne	1ea08 <__assert_fail@plt+0xd574>
   1e9dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e9e0:	ldr	r1, [fp, #-16]
   1e9e4:	sub	r1, r1, #1
   1e9e8:	mul	r0, r0, r1
   1e9ec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1e9f0:	add	r0, r1, r0
   1e9f4:	str	r0, [fp, #-28]	; 0xffffffe4
   1e9f8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e9fc:	movw	r1, #0
   1ea00:	sub	r0, r1, r0
   1ea04:	str	r0, [fp, #-32]	; 0xffffffe0
   1ea08:	ldr	r0, [fp, #8]
   1ea0c:	cmp	r0, #1
   1ea10:	bne	1ea28 <__assert_fail@plt+0xd594>
   1ea14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ea18:	sub	r0, r0, #1
   1ea1c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ea20:	add	r0, r1, r0
   1ea24:	str	r0, [fp, #-28]	; 0xffffffe4
   1ea28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ea2c:	ldr	r1, [fp, #-16]
   1ea30:	mul	r0, r0, r1
   1ea34:	add	r0, r0, #3
   1ea38:	lsr	r0, r0, #2
   1ea3c:	str	r0, [sp, #40]	; 0x28
   1ea40:	ldr	r0, [sp, #40]	; 0x28
   1ea44:	ldr	r1, [fp, #-12]
   1ea48:	ldr	r1, [r1]
   1ea4c:	cmp	r0, r1
   1ea50:	ble	1ea68 <__assert_fail@plt+0xd5d4>
   1ea54:	ldr	r0, [fp, #-12]
   1ea58:	ldr	r1, [sp, #40]	; 0x28
   1ea5c:	bl	16114 <__assert_fail@plt+0x4c80>
   1ea60:	str	r0, [sp, #4]
   1ea64:	b	1ea74 <__assert_fail@plt+0xd5e0>
   1ea68:	ldr	r0, [fp, #-12]
   1ea6c:	ldr	r0, [r0, #8]
   1ea70:	str	r0, [sp, #4]
   1ea74:	ldr	r0, [sp, #4]
   1ea78:	str	r0, [fp, #-36]	; 0xffffffdc
   1ea7c:	movw	r0, #0
   1ea80:	str	r0, [sp, #36]	; 0x24
   1ea84:	str	r0, [sp, #32]
   1ea88:	str	r0, [sp, #28]
   1ea8c:	ldr	r0, [fp, #-16]
   1ea90:	cmp	r0, #0
   1ea94:	bls	1eb60 <__assert_fail@plt+0xd6cc>
   1ea98:	movw	r0, #0
   1ea9c:	str	r0, [sp, #24]
   1eaa0:	ldr	r0, [sp, #24]
   1eaa4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1eaa8:	cmp	r0, r1
   1eaac:	bcs	1eb38 <__assert_fail@plt+0xd6a4>
   1eab0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1eab4:	ldrb	r0, [r0]
   1eab8:	ldr	r1, [sp, #32]
   1eabc:	add	r2, r1, #1
   1eac0:	str	r2, [sp, #32]
   1eac4:	lsl	r1, r1, #3
   1eac8:	lsl	r0, r0, r1
   1eacc:	ldr	r1, [sp, #36]	; 0x24
   1ead0:	orr	r0, r1, r0
   1ead4:	str	r0, [sp, #36]	; 0x24
   1ead8:	ldr	r0, [sp, #32]
   1eadc:	cmp	r0, #4
   1eae0:	bne	1eb0c <__assert_fail@plt+0xd678>
   1eae4:	ldr	r0, [sp, #36]	; 0x24
   1eae8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1eaec:	ldr	r2, [sp, #28]
   1eaf0:	add	r3, r2, #1
   1eaf4:	str	r3, [sp, #28]
   1eaf8:	add	r1, r1, r2, lsl #2
   1eafc:	str	r0, [r1]
   1eb00:	movw	r0, #0
   1eb04:	str	r0, [sp, #32]
   1eb08:	str	r0, [sp, #36]	; 0x24
   1eb0c:	b	1eb10 <__assert_fail@plt+0xd67c>
   1eb10:	ldr	r0, [sp, #24]
   1eb14:	add	r0, r0, #1
   1eb18:	str	r0, [sp, #24]
   1eb1c:	ldr	r0, [fp, #8]
   1eb20:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1eb24:	movw	r2, #0
   1eb28:	sub	r0, r2, r0
   1eb2c:	add	r0, r1, r0
   1eb30:	str	r0, [fp, #-28]	; 0xffffffe4
   1eb34:	b	1eaa0 <__assert_fail@plt+0xd60c>
   1eb38:	b	1eb3c <__assert_fail@plt+0xd6a8>
   1eb3c:	ldr	r0, [fp, #-16]
   1eb40:	mvn	r1, #0
   1eb44:	add	r0, r0, r1
   1eb48:	str	r0, [fp, #-16]
   1eb4c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1eb50:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1eb54:	add	r0, r1, r0
   1eb58:	str	r0, [fp, #-28]	; 0xffffffe4
   1eb5c:	b	1ea8c <__assert_fail@plt+0xd5f8>
   1eb60:	ldr	r0, [sp, #28]
   1eb64:	ldr	r1, [sp, #32]
   1eb68:	cmp	r1, #0
   1eb6c:	movw	r1, #0
   1eb70:	movhi	r1, #1
   1eb74:	and	r1, r1, #1
   1eb78:	add	r0, r0, r1
   1eb7c:	ldr	r1, [sp, #40]	; 0x28
   1eb80:	cmp	r0, r1
   1eb84:	bne	1eb8c <__assert_fail@plt+0xd6f8>
   1eb88:	b	1ebac <__assert_fail@plt+0xd718>
   1eb8c:	movw	r0, #19902	; 0x4dbe
   1eb90:	movt	r0, #4
   1eb94:	movw	r1, #17404	; 0x43fc
   1eb98:	movt	r1, #4
   1eb9c:	movw	r2, #4507	; 0x119b
   1eba0:	movw	r3, #19794	; 0x4d52
   1eba4:	movt	r3, #4
   1eba8:	bl	11494 <__assert_fail@plt>
   1ebac:	ldr	r0, [sp, #36]	; 0x24
   1ebb0:	cmp	r0, #0
   1ebb4:	beq	1ebd8 <__assert_fail@plt+0xd744>
   1ebb8:	ldr	r0, [sp, #36]	; 0x24
   1ebbc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1ebc0:	ldr	r2, [sp, #28]
   1ebc4:	add	r3, r2, #1
   1ebc8:	str	r3, [sp, #28]
   1ebcc:	add	r1, r1, r2, lsl #2
   1ebd0:	str	r0, [r1]
   1ebd4:	b	1ebe8 <__assert_fail@plt+0xd754>
   1ebd8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1ebdc:	ldr	r1, [sp, #28]
   1ebe0:	bl	13c64 <__assert_fail@plt+0x27d0>
   1ebe4:	str	r0, [sp, #28]
   1ebe8:	ldr	r0, [sp, #28]
   1ebec:	ldr	r1, [fp, #-12]
   1ebf0:	str	r0, [r1, #4]
   1ebf4:	sub	sp, fp, #8
   1ebf8:	pop	{r4, sl, fp, pc}
   1ebfc:	sub	sp, sp, #4
   1ec00:	movw	r0, #17400	; 0x43f8
   1ec04:	movt	r0, #4
   1ec08:	str	r0, [sp]
   1ec0c:	ldr	r0, [sp]
   1ec10:	ldrb	r0, [r0]
   1ec14:	movw	r1, #1
   1ec18:	sub	r0, r1, r0
   1ec1c:	add	sp, sp, #4
   1ec20:	bx	lr
   1ec24:	push	{r4, sl, fp, lr}
   1ec28:	add	fp, sp, #8
   1ec2c:	sub	sp, sp, #88	; 0x58
   1ec30:	ldr	ip, [fp, #16]
   1ec34:	ldr	lr, [fp, #12]
   1ec38:	ldr	r4, [fp, #8]
   1ec3c:	str	r0, [fp, #-12]
   1ec40:	str	r1, [fp, #-16]
   1ec44:	str	r2, [fp, #-20]	; 0xffffffec
   1ec48:	str	r3, [fp, #-24]	; 0xffffffe8
   1ec4c:	ldr	r0, [fp, #12]
   1ec50:	cmp	r0, #0
   1ec54:	str	r4, [sp, #24]
   1ec58:	str	lr, [sp, #20]
   1ec5c:	str	ip, [sp, #16]
   1ec60:	beq	1ec70 <__assert_fail@plt+0xd7dc>
   1ec64:	movw	r0, #19924	; 0x4dd4
   1ec68:	movt	r0, #4
   1ec6c:	bl	1a9ec <__assert_fail@plt+0x9558>
   1ec70:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ec74:	cmp	r0, #1
   1ec78:	beq	1ec88 <__assert_fail@plt+0xd7f4>
   1ec7c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ec80:	cmn	r0, #1
   1ec84:	bne	1ec8c <__assert_fail@plt+0xd7f8>
   1ec88:	b	1ecac <__assert_fail@plt+0xd818>
   1ec8c:	movw	r0, #19768	; 0x4d38
   1ec90:	movt	r0, #4
   1ec94:	movw	r1, #17404	; 0x43fc
   1ec98:	movt	r1, #4
   1ec9c:	movw	r2, #4526	; 0x11ae
   1eca0:	movw	r3, #19957	; 0x4df5
   1eca4:	movt	r3, #4
   1eca8:	bl	11494 <__assert_fail@plt>
   1ecac:	ldr	r0, [fp, #8]
   1ecb0:	cmn	r0, #1
   1ecb4:	blt	1ecc8 <__assert_fail@plt+0xd834>
   1ecb8:	ldr	r0, [fp, #8]
   1ecbc:	cmp	r0, #1
   1ecc0:	bgt	1ecc8 <__assert_fail@plt+0xd834>
   1ecc4:	b	1ece8 <__assert_fail@plt+0xd854>
   1ecc8:	movw	r0, #19874	; 0x4da2
   1eccc:	movt	r0, #4
   1ecd0:	movw	r1, #17404	; 0x43fc
   1ecd4:	movt	r1, #4
   1ecd8:	movw	r2, #4527	; 0x11af
   1ecdc:	movw	r3, #19957	; 0x4df5
   1ece0:	movt	r3, #4
   1ece4:	bl	11494 <__assert_fail@plt>
   1ece8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ecec:	cmp	r0, #0
   1ecf0:	bhi	1ed04 <__assert_fail@plt+0xd870>
   1ecf4:	ldr	r0, [fp, #16]
   1ecf8:	ldr	r0, [r0, #4]
   1ecfc:	cmp	r0, #0
   1ed00:	bne	1ed08 <__assert_fail@plt+0xd874>
   1ed04:	b	1ed28 <__assert_fail@plt+0xd894>
   1ed08:	movw	r0, #20040	; 0x4e48
   1ed0c:	movt	r0, #4
   1ed10:	movw	r1, #17404	; 0x43fc
   1ed14:	movt	r1, #4
   1ed18:	movw	r2, #4528	; 0x11b0
   1ed1c:	movw	r3, #19957	; 0x4df5
   1ed20:	movt	r3, #4
   1ed24:	bl	11494 <__assert_fail@plt>
   1ed28:	ldr	r0, [fp, #16]
   1ed2c:	ldr	r0, [r0, #4]
   1ed30:	str	r0, [fp, #-32]	; 0xffffffe0
   1ed34:	movw	r0, #0
   1ed38:	str	r0, [fp, #-28]	; 0xffffffe4
   1ed3c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ed40:	cmp	r0, #0
   1ed44:	beq	1f088 <__assert_fail@plt+0xdbf4>
   1ed48:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ed4c:	cmp	r0, #0
   1ed50:	blt	1ed60 <__assert_fail@plt+0xd8cc>
   1ed54:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ed58:	str	r0, [sp, #12]
   1ed5c:	b	1ed70 <__assert_fail@plt+0xd8dc>
   1ed60:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ed64:	movw	r1, #0
   1ed68:	sub	r0, r1, r0
   1ed6c:	str	r0, [sp, #12]
   1ed70:	ldr	r0, [sp, #12]
   1ed74:	str	r0, [fp, #-32]	; 0xffffffe0
   1ed78:	ldr	r0, [fp, #16]
   1ed7c:	ldr	r0, [r0, #8]
   1ed80:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1ed84:	sub	r1, r1, #1
   1ed88:	add	r0, r0, r1, lsl #2
   1ed8c:	ldr	r0, [r0]
   1ed90:	str	r0, [sp, #48]	; 0x30
   1ed94:	ldr	r0, [sp, #48]	; 0x30
   1ed98:	cmp	r0, #0
   1ed9c:	beq	1eda4 <__assert_fail@plt+0xd910>
   1eda0:	b	1edc4 <__assert_fail@plt+0xd930>
   1eda4:	movw	r0, #20069	; 0x4e65
   1eda8:	movt	r0, #4
   1edac:	movw	r1, #17404	; 0x43fc
   1edb0:	movt	r1, #4
   1edb4:	movw	r2, #4548	; 0x11c4
   1edb8:	movw	r3, #19957	; 0x4df5
   1edbc:	movt	r3, #4
   1edc0:	bl	11494 <__assert_fail@plt>
   1edc4:	movw	r0, #0
   1edc8:	str	r0, [fp, #-36]	; 0xffffffdc
   1edcc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1edd0:	cmp	r0, #0
   1edd4:	bne	1ee10 <__assert_fail@plt+0xd97c>
   1edd8:	b	1eddc <__assert_fail@plt+0xd948>
   1eddc:	movw	r0, #8
   1ede0:	str	r0, [sp, #36]	; 0x24
   1ede4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1ede8:	add	r0, r0, #1
   1edec:	str	r0, [fp, #-36]	; 0xffffffdc
   1edf0:	ldr	r0, [sp, #36]	; 0x24
   1edf4:	ldr	r1, [sp, #48]	; 0x30
   1edf8:	lsr	r0, r1, r0
   1edfc:	str	r0, [sp, #48]	; 0x30
   1ee00:	ldr	r0, [sp, #48]	; 0x30
   1ee04:	cmp	r0, #0
   1ee08:	bne	1eddc <__assert_fail@plt+0xd948>
   1ee0c:	b	1ee10 <__assert_fail@plt+0xd97c>
   1ee10:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1ee14:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1ee18:	sub	r1, r1, #1
   1ee1c:	lsl	r1, r1, #2
   1ee20:	add	r0, r0, r1
   1ee24:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ee28:	add	r0, r0, r1
   1ee2c:	sub	r0, r0, #1
   1ee30:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ee34:	udiv	r0, r0, r1
   1ee38:	str	r0, [fp, #-28]	; 0xffffffe4
   1ee3c:	ldr	r0, [fp, #-12]
   1ee40:	movw	r1, #0
   1ee44:	cmp	r0, r1
   1ee48:	bne	1ee78 <__assert_fail@plt+0xd9e4>
   1ee4c:	movw	r0, #24872	; 0x6128
   1ee50:	movt	r0, #5
   1ee54:	ldr	r0, [r0]
   1ee58:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ee5c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1ee60:	mul	r1, r1, r2
   1ee64:	str	r0, [sp, #8]
   1ee68:	mov	r0, r1
   1ee6c:	ldr	r1, [sp, #8]
   1ee70:	blx	r1
   1ee74:	str	r0, [fp, #-12]
   1ee78:	ldr	r0, [fp, #8]
   1ee7c:	cmp	r0, #0
   1ee80:	bne	1ee8c <__assert_fail@plt+0xd9f8>
   1ee84:	bl	1ebfc <__assert_fail@plt+0xd768>
   1ee88:	str	r0, [fp, #8]
   1ee8c:	ldr	r0, [fp, #-12]
   1ee90:	str	r0, [fp, #-40]	; 0xffffffd8
   1ee94:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ee98:	ldr	r1, [fp, #8]
   1ee9c:	cmp	r0, r1
   1eea0:	beq	1eeb4 <__assert_fail@plt+0xda20>
   1eea4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eea8:	lsl	r0, r0, #1
   1eeac:	str	r0, [sp, #4]
   1eeb0:	b	1eec0 <__assert_fail@plt+0xda2c>
   1eeb4:	movw	r0, #0
   1eeb8:	str	r0, [sp, #4]
   1eebc:	b	1eec0 <__assert_fail@plt+0xda2c>
   1eec0:	ldr	r0, [sp, #4]
   1eec4:	str	r0, [fp, #-44]	; 0xffffffd4
   1eec8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1eecc:	cmp	r0, #1
   1eed0:	bne	1ef00 <__assert_fail@plt+0xda6c>
   1eed4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eed8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1eedc:	sub	r1, r1, #1
   1eee0:	mul	r0, r0, r1
   1eee4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1eee8:	add	r0, r1, r0
   1eeec:	str	r0, [fp, #-40]	; 0xffffffd8
   1eef0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1eef4:	movw	r1, #0
   1eef8:	sub	r0, r1, r0
   1eefc:	str	r0, [fp, #-44]	; 0xffffffd4
   1ef00:	ldr	r0, [fp, #8]
   1ef04:	cmp	r0, #1
   1ef08:	bne	1ef20 <__assert_fail@plt+0xda8c>
   1ef0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ef10:	sub	r0, r0, #1
   1ef14:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1ef18:	add	r0, r1, r0
   1ef1c:	str	r0, [fp, #-40]	; 0xffffffd8
   1ef20:	movw	r0, #0
   1ef24:	str	r0, [sp, #44]	; 0x2c
   1ef28:	str	r0, [sp, #40]	; 0x28
   1ef2c:	str	r0, [fp, #-36]	; 0xffffffdc
   1ef30:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1ef34:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ef38:	cmp	r0, r1
   1ef3c:	bcs	1f01c <__assert_fail@plt+0xdb88>
   1ef40:	movw	r0, #0
   1ef44:	str	r0, [sp, #32]
   1ef48:	ldr	r0, [sp, #32]
   1ef4c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ef50:	cmp	r0, r1
   1ef54:	bcs	1eff8 <__assert_fail@plt+0xdb64>
   1ef58:	movw	r0, #8
   1ef5c:	str	r0, [sp, #28]
   1ef60:	ldr	r0, [sp, #44]	; 0x2c
   1ef64:	cmp	r0, #0
   1ef68:	bne	1efa4 <__assert_fail@plt+0xdb10>
   1ef6c:	ldr	r0, [sp, #40]	; 0x28
   1ef70:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1ef74:	cmp	r0, r1
   1ef78:	bge	1ef9c <__assert_fail@plt+0xdb08>
   1ef7c:	ldr	r0, [fp, #16]
   1ef80:	ldr	r0, [r0, #8]
   1ef84:	ldr	r1, [sp, #40]	; 0x28
   1ef88:	add	r2, r1, #1
   1ef8c:	str	r2, [sp, #40]	; 0x28
   1ef90:	add	r0, r0, r1, lsl #2
   1ef94:	ldr	r0, [r0]
   1ef98:	str	r0, [sp, #48]	; 0x30
   1ef9c:	movw	r0, #4
   1efa0:	str	r0, [sp, #44]	; 0x2c
   1efa4:	ldr	r0, [sp, #48]	; 0x30
   1efa8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1efac:	strb	r0, [r1]
   1efb0:	ldr	r0, [sp, #28]
   1efb4:	ldr	r1, [sp, #48]	; 0x30
   1efb8:	lsr	r0, r1, r0
   1efbc:	str	r0, [sp, #48]	; 0x30
   1efc0:	ldr	r0, [sp, #44]	; 0x2c
   1efc4:	mvn	r1, #0
   1efc8:	add	r0, r0, r1
   1efcc:	str	r0, [sp, #44]	; 0x2c
   1efd0:	ldr	r0, [sp, #32]
   1efd4:	add	r0, r0, #1
   1efd8:	str	r0, [sp, #32]
   1efdc:	ldr	r0, [fp, #8]
   1efe0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1efe4:	movw	r2, #0
   1efe8:	sub	r0, r2, r0
   1efec:	add	r0, r1, r0
   1eff0:	str	r0, [fp, #-40]	; 0xffffffd8
   1eff4:	b	1ef48 <__assert_fail@plt+0xdab4>
   1eff8:	b	1effc <__assert_fail@plt+0xdb68>
   1effc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1f000:	add	r0, r0, #1
   1f004:	str	r0, [fp, #-36]	; 0xffffffdc
   1f008:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1f00c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1f010:	add	r0, r1, r0
   1f014:	str	r0, [fp, #-40]	; 0xffffffd8
   1f018:	b	1ef30 <__assert_fail@plt+0xda9c>
   1f01c:	ldr	r0, [sp, #40]	; 0x28
   1f020:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1f024:	cmp	r0, r1
   1f028:	bne	1f030 <__assert_fail@plt+0xdb9c>
   1f02c:	b	1f050 <__assert_fail@plt+0xdbbc>
   1f030:	movw	r0, #20079	; 0x4e6f
   1f034:	movt	r0, #4
   1f038:	movw	r1, #17404	; 0x43fc
   1f03c:	movt	r1, #4
   1f040:	movw	r2, #4611	; 0x1203
   1f044:	movw	r3, #19957	; 0x4df5
   1f048:	movt	r3, #4
   1f04c:	bl	11494 <__assert_fail@plt>
   1f050:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1f054:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1f058:	cmp	r0, r1
   1f05c:	bne	1f064 <__assert_fail@plt+0xdbd0>
   1f060:	b	1f084 <__assert_fail@plt+0xdbf0>
   1f064:	movw	r0, #20087	; 0x4e77
   1f068:	movt	r0, #4
   1f06c:	movw	r1, #17404	; 0x43fc
   1f070:	movt	r1, #4
   1f074:	movw	r2, #4612	; 0x1204
   1f078:	movw	r3, #19957	; 0x4df5
   1f07c:	movt	r3, #4
   1f080:	bl	11494 <__assert_fail@plt>
   1f084:	b	1f088 <__assert_fail@plt+0xdbf4>
   1f088:	ldr	r0, [fp, #-16]
   1f08c:	movw	r1, #0
   1f090:	cmp	r0, r1
   1f094:	beq	1f0a4 <__assert_fail@plt+0xdc10>
   1f098:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1f09c:	ldr	r1, [fp, #-16]
   1f0a0:	str	r0, [r1]
   1f0a4:	ldr	r0, [fp, #-12]
   1f0a8:	sub	sp, fp, #8
   1f0ac:	pop	{r4, sl, fp, pc}
   1f0b0:	push	{fp, lr}
   1f0b4:	mov	fp, sp
   1f0b8:	sub	sp, sp, #96	; 0x60
   1f0bc:	str	r0, [fp, #-4]
   1f0c0:	str	r1, [fp, #-8]
   1f0c4:	str	r2, [fp, #-12]
   1f0c8:	movw	r0, #0
   1f0cc:	str	r0, [fp, #-16]
   1f0d0:	ldr	r0, [fp, #-8]
   1f0d4:	cmp	r0, #0
   1f0d8:	bls	1f390 <__assert_fail@plt+0xdefc>
   1f0dc:	ldr	r0, [fp, #-8]
   1f0e0:	ldr	r1, [fp, #-12]
   1f0e4:	ldr	r1, [r1]
   1f0e8:	movw	r2, #32
   1f0ec:	sub	r1, r2, r1
   1f0f0:	lsr	r0, r0, r1
   1f0f4:	str	r0, [fp, #-20]	; 0xffffffec
   1f0f8:	ldr	r0, [fp, #-8]
   1f0fc:	ldr	r1, [fp, #-12]
   1f100:	ldr	r1, [r1]
   1f104:	lsl	r0, r0, r1
   1f108:	str	r0, [fp, #-24]	; 0xffffffe8
   1f10c:	b	1f110 <__assert_fail@plt+0xdc7c>
   1f110:	movw	r0, #32
   1f114:	str	r0, [sp, #48]	; 0x30
   1f118:	ldr	r0, [fp, #-20]	; 0xffffffec
   1f11c:	str	r0, [sp, #12]
   1f120:	ldr	r0, [fp, #-12]
   1f124:	ldr	r0, [r0, #12]
   1f128:	str	r0, [sp, #8]
   1f12c:	ldr	r0, [sp, #12]
   1f130:	movw	r1, #65535	; 0xffff
   1f134:	and	r0, r0, r1
   1f138:	str	r0, [sp, #28]
   1f13c:	ldr	r0, [sp, #12]
   1f140:	lsr	r0, r0, #16
   1f144:	str	r0, [sp, #20]
   1f148:	ldr	r0, [sp, #8]
   1f14c:	and	r0, r0, r1
   1f150:	str	r0, [sp, #24]
   1f154:	ldr	r0, [sp, #8]
   1f158:	lsr	r0, r0, #16
   1f15c:	str	r0, [sp, #16]
   1f160:	ldr	r0, [sp, #28]
   1f164:	ldr	r1, [sp, #24]
   1f168:	mul	r0, r0, r1
   1f16c:	str	r0, [sp, #44]	; 0x2c
   1f170:	ldr	r0, [sp, #28]
   1f174:	ldr	r1, [sp, #16]
   1f178:	mul	r0, r0, r1
   1f17c:	str	r0, [sp, #40]	; 0x28
   1f180:	ldr	r0, [sp, #20]
   1f184:	ldr	r1, [sp, #24]
   1f188:	mul	r0, r0, r1
   1f18c:	str	r0, [sp, #36]	; 0x24
   1f190:	ldr	r0, [sp, #20]
   1f194:	ldr	r1, [sp, #16]
   1f198:	mul	r0, r0, r1
   1f19c:	str	r0, [sp, #32]
   1f1a0:	ldr	r0, [sp, #44]	; 0x2c
   1f1a4:	lsr	r0, r0, #16
   1f1a8:	ldr	r1, [sp, #40]	; 0x28
   1f1ac:	add	r0, r1, r0
   1f1b0:	str	r0, [sp, #40]	; 0x28
   1f1b4:	ldr	r0, [sp, #36]	; 0x24
   1f1b8:	ldr	r1, [sp, #40]	; 0x28
   1f1bc:	add	r0, r1, r0
   1f1c0:	str	r0, [sp, #40]	; 0x28
   1f1c4:	ldr	r0, [sp, #40]	; 0x28
   1f1c8:	ldr	r1, [sp, #36]	; 0x24
   1f1cc:	cmp	r0, r1
   1f1d0:	bcs	1f1e0 <__assert_fail@plt+0xdd4c>
   1f1d4:	ldr	r0, [sp, #32]
   1f1d8:	add	r0, r0, #65536	; 0x10000
   1f1dc:	str	r0, [sp, #32]
   1f1e0:	ldr	r0, [sp, #32]
   1f1e4:	ldr	r1, [sp, #40]	; 0x28
   1f1e8:	lsr	r1, r1, #16
   1f1ec:	add	r0, r0, r1
   1f1f0:	str	r0, [fp, #-32]	; 0xffffffe0
   1f1f4:	ldr	r0, [sp, #40]	; 0x28
   1f1f8:	lsl	r0, r0, #16
   1f1fc:	ldr	r1, [sp, #44]	; 0x2c
   1f200:	movw	r2, #65535	; 0xffff
   1f204:	and	r1, r1, r2
   1f208:	add	r0, r0, r1
   1f20c:	str	r0, [fp, #-36]	; 0xffffffdc
   1f210:	b	1f214 <__assert_fail@plt+0xdd80>
   1f214:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1f218:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f21c:	add	r0, r0, r1
   1f220:	str	r0, [sp, #4]
   1f224:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1f228:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f22c:	add	r1, r1, #1
   1f230:	add	r0, r0, r1
   1f234:	ldr	r1, [sp, #4]
   1f238:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1f23c:	cmp	r1, r2
   1f240:	movw	r1, #0
   1f244:	movcc	r1, #1
   1f248:	and	r1, r1, #1
   1f24c:	add	r0, r0, r1
   1f250:	str	r0, [fp, #-32]	; 0xffffffe0
   1f254:	ldr	r0, [sp, #4]
   1f258:	str	r0, [fp, #-36]	; 0xffffffdc
   1f25c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f260:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1f264:	ldr	r2, [fp, #-12]
   1f268:	ldr	r2, [r2, #4]
   1f26c:	mul	r1, r1, r2
   1f270:	sub	r0, r0, r1
   1f274:	str	r0, [fp, #-40]	; 0xffffffd8
   1f278:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1f27c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1f280:	cmp	r0, r1
   1f284:	movw	r0, #0
   1f288:	movhi	r0, #1
   1f28c:	and	r0, r0, #1
   1f290:	movw	r1, #0
   1f294:	sub	r0, r1, r0
   1f298:	str	r0, [fp, #-44]	; 0xffffffd4
   1f29c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1f2a0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1f2a4:	add	r0, r1, r0
   1f2a8:	str	r0, [fp, #-32]	; 0xffffffe0
   1f2ac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1f2b0:	ldr	r1, [fp, #-12]
   1f2b4:	ldr	r1, [r1, #4]
   1f2b8:	and	r0, r0, r1
   1f2bc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1f2c0:	add	r0, r1, r0
   1f2c4:	str	r0, [fp, #-40]	; 0xffffffd8
   1f2c8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1f2cc:	ldr	r1, [fp, #-12]
   1f2d0:	ldr	r1, [r1, #4]
   1f2d4:	cmp	r0, r1
   1f2d8:	bcc	1f2fc <__assert_fail@plt+0xde68>
   1f2dc:	ldr	r0, [fp, #-12]
   1f2e0:	ldr	r0, [r0, #4]
   1f2e4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1f2e8:	sub	r0, r1, r0
   1f2ec:	str	r0, [fp, #-40]	; 0xffffffd8
   1f2f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1f2f4:	add	r0, r0, #1
   1f2f8:	str	r0, [fp, #-32]	; 0xffffffe0
   1f2fc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1f300:	str	r0, [fp, #-28]	; 0xffffffe4
   1f304:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1f308:	str	r0, [fp, #-8]
   1f30c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1f310:	ldr	r1, [fp, #-12]
   1f314:	ldr	r1, [r1]
   1f318:	movw	r2, #32
   1f31c:	sub	r1, r2, r1
   1f320:	mvn	r2, #0
   1f324:	lsr	r1, r2, r1
   1f328:	and	r0, r0, r1
   1f32c:	cmp	r0, #0
   1f330:	bne	1f338 <__assert_fail@plt+0xdea4>
   1f334:	b	1f358 <__assert_fail@plt+0xdec4>
   1f338:	movw	r0, #20353	; 0x4f81
   1f33c:	movt	r0, #4
   1f340:	movw	r1, #17404	; 0x43fc
   1f344:	movt	r1, #4
   1f348:	movw	r2, #1259	; 0x4eb
   1f34c:	movw	r3, #20412	; 0x4fbc
   1f350:	movt	r3, #4
   1f354:	bl	11494 <__assert_fail@plt>
   1f358:	ldr	r0, [fp, #-12]
   1f35c:	ldr	r0, [r0]
   1f360:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1f364:	lsr	r0, r1, r0
   1f368:	str	r0, [fp, #-28]	; 0xffffffe4
   1f36c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1f370:	ldr	r1, [fp, #-4]
   1f374:	ldr	r2, [fp, #-16]
   1f378:	add	r1, r1, r2
   1f37c:	strb	r0, [r1]
   1f380:	ldr	r0, [fp, #-16]
   1f384:	add	r0, r0, #1
   1f388:	str	r0, [fp, #-16]
   1f38c:	b	1f0d0 <__assert_fail@plt+0xdc3c>
   1f390:	ldr	r0, [fp, #-16]
   1f394:	mov	sp, fp
   1f398:	pop	{fp, pc}
   1f39c:	push	{fp, lr}
   1f3a0:	mov	fp, sp
   1f3a4:	sub	sp, sp, #16
   1f3a8:	str	r0, [fp, #-4]
   1f3ac:	str	r1, [sp, #8]
   1f3b0:	str	r2, [sp, #4]
   1f3b4:	ldr	r0, [sp, #4]
   1f3b8:	cmp	r0, #0
   1f3bc:	ble	1f3c4 <__assert_fail@plt+0xdf30>
   1f3c0:	b	1f3e4 <__assert_fail@plt+0xdf50>
   1f3c4:	movw	r0, #20968	; 0x51e8
   1f3c8:	movt	r0, #4
   1f3cc:	movw	r1, #17404	; 0x43fc
   1f3d0:	movt	r1, #4
   1f3d4:	movw	r2, #368	; 0x170
   1f3d8:	movw	r3, #20619	; 0x508b
   1f3dc:	movt	r3, #4
   1f3e0:	bl	11494 <__assert_fail@plt>
   1f3e4:	movw	r0, #24876	; 0x612c
   1f3e8:	movt	r0, #5
   1f3ec:	ldr	r0, [r0]
   1f3f0:	ldr	r1, [fp, #-4]
   1f3f4:	ldr	r2, [sp, #8]
   1f3f8:	lsl	r2, r2, #2
   1f3fc:	ldr	r3, [sp, #4]
   1f400:	lsl	r3, r3, #2
   1f404:	str	r0, [sp]
   1f408:	mov	r0, r1
   1f40c:	mov	r1, r2
   1f410:	mov	r2, r3
   1f414:	ldr	r3, [sp]
   1f418:	blx	r3
   1f41c:	mov	sp, fp
   1f420:	pop	{fp, pc}
   1f424:	push	{fp, lr}
   1f428:	mov	fp, sp
   1f42c:	sub	sp, sp, #56	; 0x38
   1f430:	ldr	ip, [fp, #8]
   1f434:	str	r0, [fp, #-4]
   1f438:	str	r1, [fp, #-8]
   1f43c:	str	r2, [fp, #-12]
   1f440:	str	r3, [fp, #-16]
   1f444:	movw	r0, #0
   1f448:	str	r0, [sp, #20]
   1f44c:	ldr	r0, [fp, #8]
   1f450:	cmp	r0, #0
   1f454:	str	ip, [sp, #12]
   1f458:	ble	1f460 <__assert_fail@plt+0xdfcc>
   1f45c:	b	1f480 <__assert_fail@plt+0xdfec>
   1f460:	movw	r0, #20784	; 0x5130
   1f464:	movt	r0, #4
   1f468:	movw	r1, #17404	; 0x43fc
   1f46c:	movt	r1, #4
   1f470:	movw	r2, #1148	; 0x47c
   1f474:	movw	r3, #20791	; 0x5137
   1f478:	movt	r3, #4
   1f47c:	bl	11494 <__assert_fail@plt>
   1f480:	ldr	r0, [fp, #-12]
   1f484:	ldr	r1, [fp, #8]
   1f488:	cmp	r0, r1
   1f48c:	blt	1f494 <__assert_fail@plt+0xe000>
   1f490:	b	1f4b4 <__assert_fail@plt+0xe020>
   1f494:	movw	r0, #20856	; 0x5178
   1f498:	movt	r0, #4
   1f49c:	movw	r1, #17404	; 0x43fc
   1f4a0:	movt	r1, #4
   1f4a4:	movw	r2, #1149	; 0x47d
   1f4a8:	movw	r3, #20791	; 0x5137
   1f4ac:	movt	r3, #4
   1f4b0:	bl	11494 <__assert_fail@plt>
   1f4b4:	ldr	r1, [fp, #-16]
   1f4b8:	ldr	r2, [fp, #8]
   1f4bc:	add	r0, sp, #24
   1f4c0:	bl	1aa20 <__assert_fail@plt+0x958c>
   1f4c4:	ldr	r0, [fp, #8]
   1f4c8:	cmp	r0, #2
   1f4cc:	ble	1f53c <__assert_fail@plt+0xe0a8>
   1f4d0:	ldr	r0, [sp, #24]
   1f4d4:	cmp	r0, #0
   1f4d8:	bls	1f53c <__assert_fail@plt+0xe0a8>
   1f4dc:	ldr	r0, [fp, #8]
   1f4e0:	bl	15f30 <__assert_fail@plt+0x4a9c>
   1f4e4:	str	r0, [sp, #20]
   1f4e8:	ldr	r0, [sp, #20]
   1f4ec:	ldr	r1, [fp, #-16]
   1f4f0:	ldr	r2, [fp, #8]
   1f4f4:	ldr	r3, [sp, #24]
   1f4f8:	bl	149f8 <__assert_fail@plt+0x3564>
   1f4fc:	str	r0, [sp, #16]
   1f500:	ldr	r0, [sp, #16]
   1f504:	cmp	r0, #0
   1f508:	bne	1f510 <__assert_fail@plt+0xe07c>
   1f50c:	b	1f530 <__assert_fail@plt+0xe09c>
   1f510:	movw	r0, #18385	; 0x47d1
   1f514:	movt	r0, #4
   1f518:	movw	r1, #17404	; 0x43fc
   1f51c:	movt	r1, #4
   1f520:	movw	r2, #1155	; 0x483
   1f524:	movw	r3, #20791	; 0x5137
   1f528:	movt	r3, #4
   1f52c:	bl	11494 <__assert_fail@plt>
   1f530:	b	1f534 <__assert_fail@plt+0xe0a0>
   1f534:	ldr	r0, [sp, #20]
   1f538:	str	r0, [fp, #-16]
   1f53c:	ldr	r0, [fp, #-4]
   1f540:	ldr	r1, [fp, #-8]
   1f544:	ldr	r2, [fp, #-12]
   1f548:	ldr	r3, [fp, #-16]
   1f54c:	ldr	ip, [fp, #8]
   1f550:	str	ip, [sp]
   1f554:	add	ip, sp, #24
   1f558:	str	ip, [sp, #4]
   1f55c:	bl	1ac4c <__assert_fail@plt+0x97b8>
   1f560:	ldr	r0, [sp, #20]
   1f564:	movw	r1, #0
   1f568:	cmp	r0, r1
   1f56c:	beq	1f57c <__assert_fail@plt+0xe0e8>
   1f570:	ldr	r0, [sp, #20]
   1f574:	ldr	r1, [fp, #8]
   1f578:	bl	15fa8 <__assert_fail@plt+0x4b14>
   1f57c:	mov	sp, fp
   1f580:	pop	{fp, pc}
   1f584:	push	{fp, lr}
   1f588:	mov	fp, sp
   1f58c:	sub	sp, sp, #32
   1f590:	str	r0, [fp, #-4]
   1f594:	str	r1, [fp, #-8]
   1f598:	str	r2, [fp, #-12]
   1f59c:	ldr	r0, [fp, #-8]
   1f5a0:	cmp	r0, #0
   1f5a4:	bls	1f5ac <__assert_fail@plt+0xe118>
   1f5a8:	b	1f5cc <__assert_fail@plt+0xe138>
   1f5ac:	movw	r0, #21144	; 0x5298
   1f5b0:	movt	r0, #4
   1f5b4:	movw	r1, #17404	; 0x43fc
   1f5b8:	movt	r1, #4
   1f5bc:	movw	r2, #915	; 0x393
   1f5c0:	movw	r3, #21151	; 0x529f
   1f5c4:	movt	r3, #4
   1f5c8:	bl	11494 <__assert_fail@plt>
   1f5cc:	b	1f5d0 <__assert_fail@plt+0xe13c>
   1f5d0:	ldr	r0, [fp, #-8]
   1f5d4:	str	r0, [sp, #12]
   1f5d8:	movw	r0, #0
   1f5dc:	str	r0, [sp, #8]
   1f5e0:	movw	r0, #8
   1f5e4:	str	r0, [sp, #4]
   1f5e8:	ldr	r0, [sp, #4]
   1f5ec:	movw	r1, #32
   1f5f0:	cmp	r1, r0
   1f5f4:	bls	1f630 <__assert_fail@plt+0xe19c>
   1f5f8:	b	1f5fc <__assert_fail@plt+0xe168>
   1f5fc:	ldr	r0, [sp, #12]
   1f600:	and	r0, r0, #-16777216	; 0xff000000
   1f604:	cmp	r0, #0
   1f608:	bne	1f62c <__assert_fail@plt+0xe198>
   1f60c:	ldr	r0, [sp, #4]
   1f610:	ldr	r1, [sp, #12]
   1f614:	lsl	r0, r1, r0
   1f618:	str	r0, [sp, #12]
   1f61c:	ldr	r0, [sp, #8]
   1f620:	add	r0, r0, #8
   1f624:	str	r0, [sp, #8]
   1f628:	b	1f5fc <__assert_fail@plt+0xe168>
   1f62c:	b	1f630 <__assert_fail@plt+0xe19c>
   1f630:	b	1f634 <__assert_fail@plt+0xe1a0>
   1f634:	ldr	r0, [sp, #12]
   1f638:	and	r0, r0, #-2147483648	; 0x80000000
   1f63c:	cmp	r0, #0
   1f640:	bne	1f660 <__assert_fail@plt+0xe1cc>
   1f644:	ldr	r0, [sp, #12]
   1f648:	lsl	r0, r0, #1
   1f64c:	str	r0, [sp, #12]
   1f650:	ldr	r0, [sp, #8]
   1f654:	add	r0, r0, #1
   1f658:	str	r0, [sp, #8]
   1f65c:	b	1f634 <__assert_fail@plt+0xe1a0>
   1f660:	ldr	r0, [sp, #8]
   1f664:	str	r0, [sp, #16]
   1f668:	ldr	r0, [sp, #16]
   1f66c:	ldr	r1, [fp, #-4]
   1f670:	str	r0, [r1]
   1f674:	ldr	r0, [sp, #16]
   1f678:	cmp	r0, #0
   1f67c:	bls	1f6b8 <__assert_fail@plt+0xe224>
   1f680:	ldr	r0, [fp, #-8]
   1f684:	ldr	r1, [sp, #16]
   1f688:	lsl	r0, r0, r1
   1f68c:	ldr	r1, [fp, #-12]
   1f690:	ldr	r2, [sp, #16]
   1f694:	movw	r3, #32
   1f698:	sub	r2, r3, r2
   1f69c:	lsr	r1, r1, r2
   1f6a0:	orr	r0, r0, r1
   1f6a4:	str	r0, [fp, #-8]
   1f6a8:	ldr	r0, [sp, #16]
   1f6ac:	ldr	r1, [fp, #-12]
   1f6b0:	lsl	r0, r1, r0
   1f6b4:	str	r0, [fp, #-12]
   1f6b8:	ldr	r0, [fp, #-8]
   1f6bc:	ldr	r1, [fp, #-4]
   1f6c0:	str	r0, [r1, #4]
   1f6c4:	ldr	r0, [fp, #-12]
   1f6c8:	ldr	r1, [fp, #-4]
   1f6cc:	str	r0, [r1, #8]
   1f6d0:	ldr	r0, [fp, #-8]
   1f6d4:	ldr	r1, [fp, #-12]
   1f6d8:	bl	15120 <__assert_fail@plt+0x3c8c>
   1f6dc:	ldr	r1, [fp, #-4]
   1f6e0:	str	r0, [r1, #12]
   1f6e4:	mov	sp, fp
   1f6e8:	pop	{fp, pc}
   1f6ec:	push	{fp, lr}
   1f6f0:	mov	fp, sp
   1f6f4:	sub	sp, sp, #176	; 0xb0
   1f6f8:	str	r0, [fp, #-4]
   1f6fc:	str	r1, [fp, #-8]
   1f700:	str	r2, [fp, #-12]
   1f704:	str	r3, [fp, #-16]
   1f708:	ldr	r0, [fp, #-12]
   1f70c:	cmp	r0, #2
   1f710:	blt	1f718 <__assert_fail@plt+0xe284>
   1f714:	b	1f738 <__assert_fail@plt+0xe2a4>
   1f718:	movw	r0, #21402	; 0x539a
   1f71c:	movt	r0, #4
   1f720:	movw	r1, #17404	; 0x43fc
   1f724:	movt	r1, #4
   1f728:	movw	r2, #1009	; 0x3f1
   1f72c:	movw	r3, #21410	; 0x53a2
   1f730:	movt	r3, #4
   1f734:	bl	11494 <__assert_fail@plt>
   1f738:	ldr	r0, [fp, #-16]
   1f73c:	ldr	r0, [r0]
   1f740:	str	r0, [fp, #-20]	; 0xffffffec
   1f744:	ldr	r0, [fp, #-16]
   1f748:	ldr	r0, [r0, #4]
   1f74c:	str	r0, [fp, #-28]	; 0xffffffe4
   1f750:	ldr	r0, [fp, #-16]
   1f754:	ldr	r0, [r0, #8]
   1f758:	str	r0, [fp, #-32]	; 0xffffffe0
   1f75c:	ldr	r0, [fp, #-16]
   1f760:	ldr	r0, [r0, #12]
   1f764:	str	r0, [fp, #-36]	; 0xffffffdc
   1f768:	ldr	r0, [fp, #-20]	; 0xffffffec
   1f76c:	cmp	r0, #0
   1f770:	bls	1f790 <__assert_fail@plt+0xe2fc>
   1f774:	ldr	r0, [fp, #-8]
   1f778:	ldr	r1, [fp, #-8]
   1f77c:	ldr	r2, [fp, #-12]
   1f780:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f784:	bl	149f8 <__assert_fail@plt+0x3564>
   1f788:	str	r0, [fp, #-40]	; 0xffffffd8
   1f78c:	b	1f798 <__assert_fail@plt+0xe304>
   1f790:	movw	r0, #0
   1f794:	str	r0, [fp, #-40]	; 0xffffffd8
   1f798:	ldr	r0, [fp, #-8]
   1f79c:	ldr	r1, [fp, #-12]
   1f7a0:	sub	r1, r1, #1
   1f7a4:	add	r0, r0, r1, lsl #2
   1f7a8:	ldr	r0, [r0]
   1f7ac:	str	r0, [fp, #-44]	; 0xffffffd4
   1f7b0:	ldr	r0, [fp, #-12]
   1f7b4:	sub	r0, r0, #2
   1f7b8:	str	r0, [fp, #-24]	; 0xffffffe8
   1f7bc:	ldr	r0, [fp, #-8]
   1f7c0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f7c4:	add	r0, r0, r1, lsl #2
   1f7c8:	ldr	r0, [r0]
   1f7cc:	str	r0, [fp, #-48]	; 0xffffffd0
   1f7d0:	b	1f7d4 <__assert_fail@plt+0xe340>
   1f7d4:	movw	r0, #32
   1f7d8:	str	r0, [fp, #-72]	; 0xffffffb8
   1f7dc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1f7e0:	str	r0, [sp, #68]	; 0x44
   1f7e4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1f7e8:	str	r0, [sp, #64]	; 0x40
   1f7ec:	ldr	r0, [sp, #68]	; 0x44
   1f7f0:	movw	r1, #65535	; 0xffff
   1f7f4:	and	r0, r0, r1
   1f7f8:	str	r0, [sp, #84]	; 0x54
   1f7fc:	ldr	r0, [sp, #68]	; 0x44
   1f800:	lsr	r0, r0, #16
   1f804:	str	r0, [sp, #76]	; 0x4c
   1f808:	ldr	r0, [sp, #64]	; 0x40
   1f80c:	and	r0, r0, r1
   1f810:	str	r0, [sp, #80]	; 0x50
   1f814:	ldr	r0, [sp, #64]	; 0x40
   1f818:	lsr	r0, r0, #16
   1f81c:	str	r0, [sp, #72]	; 0x48
   1f820:	ldr	r0, [sp, #84]	; 0x54
   1f824:	ldr	r1, [sp, #80]	; 0x50
   1f828:	mul	r0, r0, r1
   1f82c:	str	r0, [fp, #-76]	; 0xffffffb4
   1f830:	ldr	r0, [sp, #84]	; 0x54
   1f834:	ldr	r1, [sp, #72]	; 0x48
   1f838:	mul	r0, r0, r1
   1f83c:	str	r0, [fp, #-80]	; 0xffffffb0
   1f840:	ldr	r0, [sp, #76]	; 0x4c
   1f844:	ldr	r1, [sp, #80]	; 0x50
   1f848:	mul	r0, r0, r1
   1f84c:	str	r0, [fp, #-84]	; 0xffffffac
   1f850:	ldr	r0, [sp, #76]	; 0x4c
   1f854:	ldr	r1, [sp, #72]	; 0x48
   1f858:	mul	r0, r0, r1
   1f85c:	str	r0, [sp, #88]	; 0x58
   1f860:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1f864:	lsr	r0, r0, #16
   1f868:	ldr	r1, [fp, #-80]	; 0xffffffb0
   1f86c:	add	r0, r1, r0
   1f870:	str	r0, [fp, #-80]	; 0xffffffb0
   1f874:	ldr	r0, [fp, #-84]	; 0xffffffac
   1f878:	ldr	r1, [fp, #-80]	; 0xffffffb0
   1f87c:	add	r0, r1, r0
   1f880:	str	r0, [fp, #-80]	; 0xffffffb0
   1f884:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1f888:	ldr	r1, [fp, #-84]	; 0xffffffac
   1f88c:	cmp	r0, r1
   1f890:	bcs	1f8a0 <__assert_fail@plt+0xe40c>
   1f894:	ldr	r0, [sp, #88]	; 0x58
   1f898:	add	r0, r0, #65536	; 0x10000
   1f89c:	str	r0, [sp, #88]	; 0x58
   1f8a0:	ldr	r0, [sp, #88]	; 0x58
   1f8a4:	ldr	r1, [fp, #-80]	; 0xffffffb0
   1f8a8:	lsr	r1, r1, #16
   1f8ac:	add	r0, r0, r1
   1f8b0:	str	r0, [fp, #-52]	; 0xffffffcc
   1f8b4:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1f8b8:	lsl	r0, r0, #16
   1f8bc:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1f8c0:	movw	r2, #65535	; 0xffff
   1f8c4:	and	r1, r1, r2
   1f8c8:	add	r0, r0, r1
   1f8cc:	str	r0, [fp, #-56]	; 0xffffffc8
   1f8d0:	b	1f8d4 <__assert_fail@plt+0xe440>
   1f8d4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1f8d8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1f8dc:	add	r0, r0, r1
   1f8e0:	str	r0, [sp, #60]	; 0x3c
   1f8e4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1f8e8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1f8ec:	add	r0, r0, r1
   1f8f0:	ldr	r1, [sp, #60]	; 0x3c
   1f8f4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1f8f8:	cmp	r1, r2
   1f8fc:	movw	r1, #0
   1f900:	movcc	r1, #1
   1f904:	and	r1, r1, #1
   1f908:	add	r0, r0, r1
   1f90c:	str	r0, [fp, #-52]	; 0xffffffcc
   1f910:	ldr	r0, [sp, #60]	; 0x3c
   1f914:	str	r0, [fp, #-56]	; 0xffffffc8
   1f918:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1f91c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1f920:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1f924:	mul	r1, r1, r2
   1f928:	sub	r0, r0, r1
   1f92c:	str	r0, [fp, #-40]	; 0xffffffd8
   1f930:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1f934:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1f938:	sub	r0, r0, r1
   1f93c:	str	r0, [sp, #56]	; 0x38
   1f940:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1f944:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1f948:	sub	r0, r0, r1
   1f94c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1f950:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1f954:	cmp	r1, r2
   1f958:	movw	r1, #0
   1f95c:	movcc	r1, #1
   1f960:	and	r1, r1, #1
   1f964:	sub	r0, r0, r1
   1f968:	str	r0, [fp, #-40]	; 0xffffffd8
   1f96c:	ldr	r0, [sp, #56]	; 0x38
   1f970:	str	r0, [fp, #-44]	; 0xffffffd4
   1f974:	b	1f978 <__assert_fail@plt+0xe4e4>
   1f978:	movw	r0, #32
   1f97c:	str	r0, [sp, #52]	; 0x34
   1f980:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1f984:	str	r0, [sp, #16]
   1f988:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1f98c:	str	r0, [sp, #12]
   1f990:	ldr	r0, [sp, #16]
   1f994:	movw	r1, #65535	; 0xffff
   1f998:	and	r0, r0, r1
   1f99c:	str	r0, [sp, #32]
   1f9a0:	ldr	r0, [sp, #16]
   1f9a4:	lsr	r0, r0, #16
   1f9a8:	str	r0, [sp, #24]
   1f9ac:	ldr	r0, [sp, #12]
   1f9b0:	and	r0, r0, r1
   1f9b4:	str	r0, [sp, #28]
   1f9b8:	ldr	r0, [sp, #12]
   1f9bc:	lsr	r0, r0, #16
   1f9c0:	str	r0, [sp, #20]
   1f9c4:	ldr	r0, [sp, #32]
   1f9c8:	ldr	r1, [sp, #28]
   1f9cc:	mul	r0, r0, r1
   1f9d0:	str	r0, [sp, #48]	; 0x30
   1f9d4:	ldr	r0, [sp, #32]
   1f9d8:	ldr	r1, [sp, #20]
   1f9dc:	mul	r0, r0, r1
   1f9e0:	str	r0, [sp, #44]	; 0x2c
   1f9e4:	ldr	r0, [sp, #24]
   1f9e8:	ldr	r1, [sp, #28]
   1f9ec:	mul	r0, r0, r1
   1f9f0:	str	r0, [sp, #40]	; 0x28
   1f9f4:	ldr	r0, [sp, #24]
   1f9f8:	ldr	r1, [sp, #20]
   1f9fc:	mul	r0, r0, r1
   1fa00:	str	r0, [sp, #36]	; 0x24
   1fa04:	ldr	r0, [sp, #48]	; 0x30
   1fa08:	lsr	r0, r0, #16
   1fa0c:	ldr	r1, [sp, #44]	; 0x2c
   1fa10:	add	r0, r1, r0
   1fa14:	str	r0, [sp, #44]	; 0x2c
   1fa18:	ldr	r0, [sp, #40]	; 0x28
   1fa1c:	ldr	r1, [sp, #44]	; 0x2c
   1fa20:	add	r0, r1, r0
   1fa24:	str	r0, [sp, #44]	; 0x2c
   1fa28:	ldr	r0, [sp, #44]	; 0x2c
   1fa2c:	ldr	r1, [sp, #40]	; 0x28
   1fa30:	cmp	r0, r1
   1fa34:	bcs	1fa44 <__assert_fail@plt+0xe5b0>
   1fa38:	ldr	r0, [sp, #36]	; 0x24
   1fa3c:	add	r0, r0, #65536	; 0x10000
   1fa40:	str	r0, [sp, #36]	; 0x24
   1fa44:	ldr	r0, [sp, #36]	; 0x24
   1fa48:	ldr	r1, [sp, #44]	; 0x2c
   1fa4c:	lsr	r1, r1, #16
   1fa50:	add	r0, r0, r1
   1fa54:	str	r0, [fp, #-60]	; 0xffffffc4
   1fa58:	ldr	r0, [sp, #44]	; 0x2c
   1fa5c:	lsl	r0, r0, #16
   1fa60:	ldr	r1, [sp, #48]	; 0x30
   1fa64:	movw	r2, #65535	; 0xffff
   1fa68:	and	r1, r1, r2
   1fa6c:	add	r0, r0, r1
   1fa70:	str	r0, [fp, #-64]	; 0xffffffc0
   1fa74:	b	1fa78 <__assert_fail@plt+0xe5e4>
   1fa78:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1fa7c:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1fa80:	sub	r0, r0, r1
   1fa84:	str	r0, [sp, #8]
   1fa88:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1fa8c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1fa90:	sub	r0, r0, r1
   1fa94:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1fa98:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1fa9c:	cmp	r1, r2
   1faa0:	movw	r1, #0
   1faa4:	movcc	r1, #1
   1faa8:	and	r1, r1, #1
   1faac:	sub	r0, r0, r1
   1fab0:	str	r0, [fp, #-40]	; 0xffffffd8
   1fab4:	ldr	r0, [sp, #8]
   1fab8:	str	r0, [fp, #-44]	; 0xffffffd4
   1fabc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1fac0:	add	r0, r0, #1
   1fac4:	str	r0, [fp, #-52]	; 0xffffffcc
   1fac8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1facc:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1fad0:	cmp	r0, r1
   1fad4:	movw	r0, #0
   1fad8:	movcs	r0, #1
   1fadc:	and	r0, r0, #1
   1fae0:	movw	r1, #0
   1fae4:	sub	r0, r1, r0
   1fae8:	str	r0, [fp, #-68]	; 0xffffffbc
   1faec:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1faf0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1faf4:	add	r0, r1, r0
   1faf8:	str	r0, [fp, #-52]	; 0xffffffcc
   1fafc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1fb00:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1fb04:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1fb08:	and	r1, r1, r2
   1fb0c:	add	r0, r0, r1
   1fb10:	str	r0, [sp, #4]
   1fb14:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1fb18:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1fb1c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1fb20:	and	r1, r1, r2
   1fb24:	add	r0, r0, r1
   1fb28:	ldr	r1, [sp, #4]
   1fb2c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1fb30:	cmp	r1, r2
   1fb34:	movw	r1, #0
   1fb38:	movcc	r1, #1
   1fb3c:	and	r1, r1, #1
   1fb40:	add	r0, r0, r1
   1fb44:	str	r0, [fp, #-40]	; 0xffffffd8
   1fb48:	ldr	r0, [sp, #4]
   1fb4c:	str	r0, [fp, #-44]	; 0xffffffd4
   1fb50:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1fb54:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1fb58:	cmp	r0, r1
   1fb5c:	bcc	1fbd8 <__assert_fail@plt+0xe744>
   1fb60:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1fb64:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1fb68:	cmp	r0, r1
   1fb6c:	bhi	1fb80 <__assert_fail@plt+0xe6ec>
   1fb70:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1fb74:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1fb78:	cmp	r0, r1
   1fb7c:	bcc	1fbd4 <__assert_fail@plt+0xe740>
   1fb80:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1fb84:	add	r0, r0, #1
   1fb88:	str	r0, [fp, #-52]	; 0xffffffcc
   1fb8c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1fb90:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1fb94:	sub	r0, r0, r1
   1fb98:	str	r0, [sp]
   1fb9c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1fba0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1fba4:	sub	r0, r0, r1
   1fba8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1fbac:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1fbb0:	cmp	r1, r2
   1fbb4:	movw	r1, #0
   1fbb8:	movcc	r1, #1
   1fbbc:	and	r1, r1, #1
   1fbc0:	sub	r0, r0, r1
   1fbc4:	str	r0, [fp, #-40]	; 0xffffffd8
   1fbc8:	ldr	r0, [sp]
   1fbcc:	str	r0, [fp, #-44]	; 0xffffffd4
   1fbd0:	b	1fbd4 <__assert_fail@plt+0xe740>
   1fbd4:	b	1fbd8 <__assert_fail@plt+0xe744>
   1fbd8:	b	1fbdc <__assert_fail@plt+0xe748>
   1fbdc:	ldr	r0, [fp, #-4]
   1fbe0:	movw	r1, #0
   1fbe4:	cmp	r0, r1
   1fbe8:	beq	1fc00 <__assert_fail@plt+0xe76c>
   1fbec:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1fbf0:	ldr	r1, [fp, #-4]
   1fbf4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1fbf8:	add	r1, r1, r2, lsl #2
   1fbfc:	str	r0, [r1]
   1fc00:	b	1fc04 <__assert_fail@plt+0xe770>
   1fc04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1fc08:	mvn	r1, #0
   1fc0c:	add	r0, r0, r1
   1fc10:	str	r0, [fp, #-24]	; 0xffffffe8
   1fc14:	cmp	r0, #0
   1fc18:	bge	1f7bc <__assert_fail@plt+0xe328>
   1fc1c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1fc20:	cmp	r0, #0
   1fc24:	bls	1fca8 <__assert_fail@plt+0xe814>
   1fc28:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1fc2c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1fc30:	movw	r2, #32
   1fc34:	sub	r1, r2, r1
   1fc38:	mvn	r2, #0
   1fc3c:	lsr	r1, r2, r1
   1fc40:	and	r0, r0, r1
   1fc44:	cmp	r0, #0
   1fc48:	bne	1fc50 <__assert_fail@plt+0xe7bc>
   1fc4c:	b	1fc70 <__assert_fail@plt+0xe7dc>
   1fc50:	movw	r0, #21494	; 0x53f6
   1fc54:	movt	r0, #4
   1fc58:	movw	r1, #17404	; 0x43fc
   1fc5c:	movt	r1, #4
   1fc60:	movw	r2, #1036	; 0x40c
   1fc64:	movw	r3, #21410	; 0x53a2
   1fc68:	movt	r3, #4
   1fc6c:	bl	11494 <__assert_fail@plt>
   1fc70:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1fc74:	ldr	r1, [fp, #-20]	; 0xffffffec
   1fc78:	lsr	r0, r0, r1
   1fc7c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1fc80:	ldr	r2, [fp, #-20]	; 0xffffffec
   1fc84:	movw	r3, #32
   1fc88:	sub	r2, r3, r2
   1fc8c:	lsl	r1, r1, r2
   1fc90:	orr	r0, r0, r1
   1fc94:	str	r0, [fp, #-44]	; 0xffffffd4
   1fc98:	ldr	r0, [fp, #-20]	; 0xffffffec
   1fc9c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1fca0:	lsr	r0, r1, r0
   1fca4:	str	r0, [fp, #-40]	; 0xffffffd8
   1fca8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1fcac:	ldr	r1, [fp, #-8]
   1fcb0:	str	r0, [r1, #4]
   1fcb4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1fcb8:	ldr	r1, [fp, #-8]
   1fcbc:	str	r0, [r1]
   1fcc0:	mov	sp, fp
   1fcc4:	pop	{fp, pc}
   1fcc8:	push	{r4, sl, fp, lr}
   1fccc:	add	fp, sp, #8
   1fcd0:	sub	sp, sp, #192	; 0xc0
   1fcd4:	ldr	ip, [fp, #16]
   1fcd8:	ldr	lr, [fp, #12]
   1fcdc:	ldr	r4, [fp, #8]
   1fce0:	str	r0, [fp, #-12]
   1fce4:	str	r1, [fp, #-16]
   1fce8:	str	r2, [fp, #-20]	; 0xffffffec
   1fcec:	str	r3, [fp, #-24]	; 0xffffffe8
   1fcf0:	ldr	r0, [fp, #12]
   1fcf4:	cmp	r0, #2
   1fcf8:	str	r4, [sp, #20]
   1fcfc:	str	lr, [sp, #16]
   1fd00:	str	ip, [sp, #12]
   1fd04:	ble	1fd0c <__assert_fail@plt+0xe878>
   1fd08:	b	1fd2c <__assert_fail@plt+0xe898>
   1fd0c:	movw	r0, #21548	; 0x542c
   1fd10:	movt	r0, #4
   1fd14:	movw	r1, #17404	; 0x43fc
   1fd18:	movt	r1, #4
   1fd1c:	movw	r2, #1057	; 0x421
   1fd20:	movw	r3, #21555	; 0x5433
   1fd24:	movt	r3, #4
   1fd28:	bl	11494 <__assert_fail@plt>
   1fd2c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1fd30:	ldr	r1, [fp, #12]
   1fd34:	cmp	r0, r1
   1fd38:	blt	1fd40 <__assert_fail@plt+0xe8ac>
   1fd3c:	b	1fd60 <__assert_fail@plt+0xe8cc>
   1fd40:	movw	r0, #20856	; 0x5178
   1fd44:	movt	r0, #4
   1fd48:	movw	r1, #17404	; 0x43fc
   1fd4c:	movt	r1, #4
   1fd50:	movw	r2, #1058	; 0x422
   1fd54:	movw	r3, #21555	; 0x5433
   1fd58:	movt	r3, #4
   1fd5c:	bl	11494 <__assert_fail@plt>
   1fd60:	ldr	r0, [fp, #8]
   1fd64:	ldr	r1, [fp, #12]
   1fd68:	add	r0, r0, r1, lsl #2
   1fd6c:	ldr	r0, [r0, #-4]
   1fd70:	str	r0, [fp, #-32]	; 0xffffffe0
   1fd74:	ldr	r0, [fp, #8]
   1fd78:	ldr	r1, [fp, #12]
   1fd7c:	sub	r1, r1, #2
   1fd80:	add	r0, r0, r1, lsl #2
   1fd84:	ldr	r0, [r0]
   1fd88:	str	r0, [fp, #-36]	; 0xffffffdc
   1fd8c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1fd90:	and	r0, r0, #-2147483648	; 0x80000000
   1fd94:	cmp	r0, #0
   1fd98:	beq	1fda0 <__assert_fail@plt+0xe90c>
   1fd9c:	b	1fdc0 <__assert_fail@plt+0xe92c>
   1fda0:	movw	r0, #21646	; 0x548e
   1fda4:	movt	r0, #4
   1fda8:	movw	r1, #17404	; 0x43fc
   1fdac:	movt	r1, #4
   1fdb0:	movw	r2, #1063	; 0x427
   1fdb4:	movw	r3, #21555	; 0x5433
   1fdb8:	movt	r3, #4
   1fdbc:	bl	11494 <__assert_fail@plt>
   1fdc0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1fdc4:	ldr	r1, [fp, #12]
   1fdc8:	sub	r0, r0, r1
   1fdcc:	str	r0, [fp, #-28]	; 0xffffffe4
   1fdd0:	ldr	r0, [fp, #-16]
   1fdd4:	ldr	r1, [fp, #12]
   1fdd8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1fddc:	add	r1, r1, r2
   1fde0:	sub	r1, r1, #1
   1fde4:	add	r0, r0, r1, lsl #2
   1fde8:	ldr	r0, [r0]
   1fdec:	str	r0, [fp, #-52]	; 0xffffffcc
   1fdf0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1fdf4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1fdf8:	cmp	r0, r1
   1fdfc:	bne	1fe5c <__assert_fail@plt+0xe9c8>
   1fe00:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1fe04:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1fe08:	cmp	r0, r1
   1fe0c:	bne	1fe5c <__assert_fail@plt+0xe9c8>
   1fe10:	mvn	r0, #0
   1fe14:	str	r0, [fp, #-48]	; 0xffffffd0
   1fe18:	ldr	r0, [fp, #-16]
   1fe1c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1fe20:	add	r0, r0, r1, lsl #2
   1fe24:	ldr	r1, [fp, #8]
   1fe28:	ldr	r2, [fp, #12]
   1fe2c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1fe30:	bl	14588 <__assert_fail@plt+0x30f4>
   1fe34:	ldr	r1, [fp, #-16]
   1fe38:	ldr	r2, [fp, #12]
   1fe3c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1fe40:	add	r2, r2, r3
   1fe44:	sub	r2, r2, #1
   1fe48:	add	r1, r1, r2, lsl #2
   1fe4c:	ldr	r1, [r1]
   1fe50:	str	r1, [fp, #-24]	; 0xffffffe8
   1fe54:	str	r0, [sp, #8]
   1fe58:	b	20394 <__assert_fail@plt+0xef00>
   1fe5c:	b	1fe60 <__assert_fail@plt+0xe9cc>
   1fe60:	b	1fe64 <__assert_fail@plt+0xe9d0>
   1fe64:	movw	r0, #32
   1fe68:	str	r0, [fp, #-72]	; 0xffffffb8
   1fe6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1fe70:	str	r0, [sp, #92]	; 0x5c
   1fe74:	ldr	r0, [fp, #16]
   1fe78:	str	r0, [sp, #88]	; 0x58
   1fe7c:	ldr	r0, [sp, #92]	; 0x5c
   1fe80:	movw	r1, #65535	; 0xffff
   1fe84:	and	r0, r0, r1
   1fe88:	str	r0, [fp, #-92]	; 0xffffffa4
   1fe8c:	ldr	r0, [sp, #92]	; 0x5c
   1fe90:	lsr	r0, r0, #16
   1fe94:	str	r0, [sp, #100]	; 0x64
   1fe98:	ldr	r0, [sp, #88]	; 0x58
   1fe9c:	and	r0, r0, r1
   1fea0:	str	r0, [fp, #-96]	; 0xffffffa0
   1fea4:	ldr	r0, [sp, #88]	; 0x58
   1fea8:	lsr	r0, r0, #16
   1feac:	str	r0, [sp, #96]	; 0x60
   1feb0:	ldr	r0, [fp, #-92]	; 0xffffffa4
   1feb4:	ldr	r1, [fp, #-96]	; 0xffffffa0
   1feb8:	mul	r0, r0, r1
   1febc:	str	r0, [fp, #-76]	; 0xffffffb4
   1fec0:	ldr	r0, [fp, #-92]	; 0xffffffa4
   1fec4:	ldr	r1, [sp, #96]	; 0x60
   1fec8:	mul	r0, r0, r1
   1fecc:	str	r0, [fp, #-80]	; 0xffffffb0
   1fed0:	ldr	r0, [sp, #100]	; 0x64
   1fed4:	ldr	r1, [fp, #-96]	; 0xffffffa0
   1fed8:	mul	r0, r0, r1
   1fedc:	str	r0, [fp, #-84]	; 0xffffffac
   1fee0:	ldr	r0, [sp, #100]	; 0x64
   1fee4:	ldr	r1, [sp, #96]	; 0x60
   1fee8:	mul	r0, r0, r1
   1feec:	str	r0, [fp, #-88]	; 0xffffffa8
   1fef0:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1fef4:	lsr	r0, r0, #16
   1fef8:	ldr	r1, [fp, #-80]	; 0xffffffb0
   1fefc:	add	r0, r1, r0
   1ff00:	str	r0, [fp, #-80]	; 0xffffffb0
   1ff04:	ldr	r0, [fp, #-84]	; 0xffffffac
   1ff08:	ldr	r1, [fp, #-80]	; 0xffffffb0
   1ff0c:	add	r0, r1, r0
   1ff10:	str	r0, [fp, #-80]	; 0xffffffb0
   1ff14:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1ff18:	ldr	r1, [fp, #-84]	; 0xffffffac
   1ff1c:	cmp	r0, r1
   1ff20:	bcs	1ff30 <__assert_fail@plt+0xea9c>
   1ff24:	ldr	r0, [fp, #-88]	; 0xffffffa8
   1ff28:	add	r0, r0, #65536	; 0x10000
   1ff2c:	str	r0, [fp, #-88]	; 0xffffffa8
   1ff30:	ldr	r0, [fp, #-88]	; 0xffffffa8
   1ff34:	ldr	r1, [fp, #-80]	; 0xffffffb0
   1ff38:	lsr	r1, r1, #16
   1ff3c:	add	r0, r0, r1
   1ff40:	str	r0, [fp, #-48]	; 0xffffffd0
   1ff44:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1ff48:	lsl	r0, r0, #16
   1ff4c:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1ff50:	movw	r2, #65535	; 0xffff
   1ff54:	and	r1, r1, r2
   1ff58:	add	r0, r0, r1
   1ff5c:	str	r0, [fp, #-56]	; 0xffffffc8
   1ff60:	b	1ff64 <__assert_fail@plt+0xead0>
   1ff64:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1ff68:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1ff6c:	add	r0, r0, r1
   1ff70:	str	r0, [sp, #84]	; 0x54
   1ff74:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1ff78:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ff7c:	add	r0, r0, r1
   1ff80:	ldr	r1, [sp, #84]	; 0x54
   1ff84:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1ff88:	cmp	r1, r2
   1ff8c:	movw	r1, #0
   1ff90:	movcc	r1, #1
   1ff94:	and	r1, r1, #1
   1ff98:	add	r0, r0, r1
   1ff9c:	str	r0, [fp, #-48]	; 0xffffffd0
   1ffa0:	ldr	r0, [sp, #84]	; 0x54
   1ffa4:	str	r0, [fp, #-56]	; 0xffffffc8
   1ffa8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1ffac:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1ffb0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1ffb4:	mul	r1, r1, r2
   1ffb8:	sub	r0, r0, r1
   1ffbc:	str	r0, [fp, #-24]	; 0xffffffe8
   1ffc0:	ldr	r0, [fp, #-16]
   1ffc4:	ldr	r1, [fp, #12]
   1ffc8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1ffcc:	add	r1, r1, r2
   1ffd0:	add	r0, r0, r1, lsl #2
   1ffd4:	ldr	r0, [r0, #-8]
   1ffd8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1ffdc:	sub	r0, r0, r1
   1ffe0:	str	r0, [sp, #80]	; 0x50
   1ffe4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ffe8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1ffec:	sub	r0, r0, r1
   1fff0:	ldr	r1, [fp, #-16]
   1fff4:	ldr	r2, [fp, #12]
   1fff8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1fffc:	add	r2, r2, r3
   20000:	sub	r2, r2, #2
   20004:	add	r1, r1, r2, lsl #2
   20008:	ldr	r1, [r1]
   2000c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   20010:	cmp	r1, r2
   20014:	movw	r1, #0
   20018:	movcc	r1, #1
   2001c:	and	r1, r1, #1
   20020:	sub	r0, r0, r1
   20024:	str	r0, [fp, #-24]	; 0xffffffe8
   20028:	ldr	r0, [sp, #80]	; 0x50
   2002c:	str	r0, [fp, #-52]	; 0xffffffcc
   20030:	b	20034 <__assert_fail@plt+0xeba0>
   20034:	movw	r0, #32
   20038:	str	r0, [sp, #76]	; 0x4c
   2003c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   20040:	str	r0, [sp, #40]	; 0x28
   20044:	ldr	r0, [fp, #-48]	; 0xffffffd0
   20048:	str	r0, [sp, #36]	; 0x24
   2004c:	ldr	r0, [sp, #40]	; 0x28
   20050:	movw	r1, #65535	; 0xffff
   20054:	and	r0, r0, r1
   20058:	str	r0, [sp, #56]	; 0x38
   2005c:	ldr	r0, [sp, #40]	; 0x28
   20060:	lsr	r0, r0, #16
   20064:	str	r0, [sp, #48]	; 0x30
   20068:	ldr	r0, [sp, #36]	; 0x24
   2006c:	and	r0, r0, r1
   20070:	str	r0, [sp, #52]	; 0x34
   20074:	ldr	r0, [sp, #36]	; 0x24
   20078:	lsr	r0, r0, #16
   2007c:	str	r0, [sp, #44]	; 0x2c
   20080:	ldr	r0, [sp, #56]	; 0x38
   20084:	ldr	r1, [sp, #52]	; 0x34
   20088:	mul	r0, r0, r1
   2008c:	str	r0, [sp, #72]	; 0x48
   20090:	ldr	r0, [sp, #56]	; 0x38
   20094:	ldr	r1, [sp, #44]	; 0x2c
   20098:	mul	r0, r0, r1
   2009c:	str	r0, [sp, #68]	; 0x44
   200a0:	ldr	r0, [sp, #48]	; 0x30
   200a4:	ldr	r1, [sp, #52]	; 0x34
   200a8:	mul	r0, r0, r1
   200ac:	str	r0, [sp, #64]	; 0x40
   200b0:	ldr	r0, [sp, #48]	; 0x30
   200b4:	ldr	r1, [sp, #44]	; 0x2c
   200b8:	mul	r0, r0, r1
   200bc:	str	r0, [sp, #60]	; 0x3c
   200c0:	ldr	r0, [sp, #72]	; 0x48
   200c4:	lsr	r0, r0, #16
   200c8:	ldr	r1, [sp, #68]	; 0x44
   200cc:	add	r0, r1, r0
   200d0:	str	r0, [sp, #68]	; 0x44
   200d4:	ldr	r0, [sp, #64]	; 0x40
   200d8:	ldr	r1, [sp, #68]	; 0x44
   200dc:	add	r0, r1, r0
   200e0:	str	r0, [sp, #68]	; 0x44
   200e4:	ldr	r0, [sp, #68]	; 0x44
   200e8:	ldr	r1, [sp, #64]	; 0x40
   200ec:	cmp	r0, r1
   200f0:	bcs	20100 <__assert_fail@plt+0xec6c>
   200f4:	ldr	r0, [sp, #60]	; 0x3c
   200f8:	add	r0, r0, #65536	; 0x10000
   200fc:	str	r0, [sp, #60]	; 0x3c
   20100:	ldr	r0, [sp, #60]	; 0x3c
   20104:	ldr	r1, [sp, #68]	; 0x44
   20108:	lsr	r1, r1, #16
   2010c:	add	r0, r0, r1
   20110:	str	r0, [fp, #-60]	; 0xffffffc4
   20114:	ldr	r0, [sp, #68]	; 0x44
   20118:	lsl	r0, r0, #16
   2011c:	ldr	r1, [sp, #72]	; 0x48
   20120:	movw	r2, #65535	; 0xffff
   20124:	and	r1, r1, r2
   20128:	add	r0, r0, r1
   2012c:	str	r0, [fp, #-64]	; 0xffffffc0
   20130:	b	20134 <__assert_fail@plt+0xeca0>
   20134:	ldr	r0, [fp, #-52]	; 0xffffffcc
   20138:	ldr	r1, [fp, #-64]	; 0xffffffc0
   2013c:	sub	r0, r0, r1
   20140:	str	r0, [sp, #32]
   20144:	ldr	r0, [fp, #-24]	; 0xffffffe8
   20148:	ldr	r1, [fp, #-60]	; 0xffffffc4
   2014c:	sub	r0, r0, r1
   20150:	ldr	r1, [fp, #-52]	; 0xffffffcc
   20154:	ldr	r2, [fp, #-64]	; 0xffffffc0
   20158:	cmp	r1, r2
   2015c:	movw	r1, #0
   20160:	movcc	r1, #1
   20164:	and	r1, r1, #1
   20168:	sub	r0, r0, r1
   2016c:	str	r0, [fp, #-24]	; 0xffffffe8
   20170:	ldr	r0, [sp, #32]
   20174:	str	r0, [fp, #-52]	; 0xffffffcc
   20178:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2017c:	add	r0, r0, #1
   20180:	str	r0, [fp, #-48]	; 0xffffffd0
   20184:	ldr	r0, [fp, #-24]	; 0xffffffe8
   20188:	ldr	r1, [fp, #-56]	; 0xffffffc8
   2018c:	cmp	r0, r1
   20190:	movw	r0, #0
   20194:	movcs	r0, #1
   20198:	and	r0, r0, #1
   2019c:	movw	r1, #0
   201a0:	sub	r0, r1, r0
   201a4:	str	r0, [fp, #-68]	; 0xffffffbc
   201a8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   201ac:	ldr	r1, [fp, #-48]	; 0xffffffd0
   201b0:	add	r0, r1, r0
   201b4:	str	r0, [fp, #-48]	; 0xffffffd0
   201b8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   201bc:	ldr	r1, [fp, #-68]	; 0xffffffbc
   201c0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   201c4:	and	r1, r1, r2
   201c8:	add	r0, r0, r1
   201cc:	str	r0, [sp, #28]
   201d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   201d4:	ldr	r1, [fp, #-68]	; 0xffffffbc
   201d8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   201dc:	and	r1, r1, r2
   201e0:	add	r0, r0, r1
   201e4:	ldr	r1, [sp, #28]
   201e8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   201ec:	cmp	r1, r2
   201f0:	movw	r1, #0
   201f4:	movcc	r1, #1
   201f8:	and	r1, r1, #1
   201fc:	add	r0, r0, r1
   20200:	str	r0, [fp, #-24]	; 0xffffffe8
   20204:	ldr	r0, [sp, #28]
   20208:	str	r0, [fp, #-52]	; 0xffffffcc
   2020c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   20210:	ldr	r1, [fp, #-32]	; 0xffffffe0
   20214:	cmp	r0, r1
   20218:	bcc	20294 <__assert_fail@plt+0xee00>
   2021c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   20220:	ldr	r1, [fp, #-32]	; 0xffffffe0
   20224:	cmp	r0, r1
   20228:	bhi	2023c <__assert_fail@plt+0xeda8>
   2022c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   20230:	ldr	r1, [fp, #-36]	; 0xffffffdc
   20234:	cmp	r0, r1
   20238:	bcc	20290 <__assert_fail@plt+0xedfc>
   2023c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   20240:	add	r0, r0, #1
   20244:	str	r0, [fp, #-48]	; 0xffffffd0
   20248:	ldr	r0, [fp, #-52]	; 0xffffffcc
   2024c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   20250:	sub	r0, r0, r1
   20254:	str	r0, [sp, #24]
   20258:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2025c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   20260:	sub	r0, r0, r1
   20264:	ldr	r1, [fp, #-52]	; 0xffffffcc
   20268:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2026c:	cmp	r1, r2
   20270:	movw	r1, #0
   20274:	movcc	r1, #1
   20278:	and	r1, r1, #1
   2027c:	sub	r0, r0, r1
   20280:	str	r0, [fp, #-24]	; 0xffffffe8
   20284:	ldr	r0, [sp, #24]
   20288:	str	r0, [fp, #-52]	; 0xffffffcc
   2028c:	b	20290 <__assert_fail@plt+0xedfc>
   20290:	b	20294 <__assert_fail@plt+0xee00>
   20294:	b	20298 <__assert_fail@plt+0xee04>
   20298:	ldr	r0, [fp, #-16]
   2029c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   202a0:	add	r0, r0, r1, lsl #2
   202a4:	ldr	r1, [fp, #8]
   202a8:	ldr	r2, [fp, #12]
   202ac:	sub	r2, r2, #2
   202b0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   202b4:	bl	14588 <__assert_fail@plt+0x30f4>
   202b8:	str	r0, [fp, #-40]	; 0xffffffd8
   202bc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   202c0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   202c4:	mov	r2, #0
   202c8:	cmp	r0, r1
   202cc:	mov	r0, r2
   202d0:	movwcc	r0, #1
   202d4:	str	r0, [fp, #-44]	; 0xffffffd4
   202d8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   202dc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   202e0:	sub	r0, r0, r1
   202e4:	str	r0, [fp, #-52]	; 0xffffffcc
   202e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   202ec:	ldr	r1, [fp, #-44]	; 0xffffffd4
   202f0:	cmp	r0, r1
   202f4:	movwcc	r2, #1
   202f8:	str	r2, [fp, #-40]	; 0xffffffd8
   202fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   20300:	ldr	r1, [fp, #-44]	; 0xffffffd4
   20304:	sub	r0, r0, r1
   20308:	str	r0, [fp, #-24]	; 0xffffffe8
   2030c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   20310:	ldr	r1, [fp, #-16]
   20314:	ldr	r2, [fp, #12]
   20318:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2031c:	add	r2, r2, r3
   20320:	sub	r2, r2, #2
   20324:	add	r1, r1, r2, lsl #2
   20328:	str	r0, [r1]
   2032c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   20330:	cmp	r0, #0
   20334:	beq	20390 <__assert_fail@plt+0xeefc>
   20338:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2033c:	ldr	r1, [fp, #-16]
   20340:	ldr	r2, [fp, #-28]	; 0xffffffe4
   20344:	add	r1, r1, r2, lsl #2
   20348:	mov	r2, r1
   2034c:	ldr	r3, [fp, #8]
   20350:	ldr	ip, [fp, #12]
   20354:	sub	ip, ip, #1
   20358:	str	r0, [sp, #4]
   2035c:	mov	r0, r2
   20360:	mov	r2, r3
   20364:	mov	r3, ip
   20368:	bl	13dd4 <__assert_fail@plt+0x2940>
   2036c:	ldr	r1, [sp, #4]
   20370:	add	r0, r1, r0
   20374:	ldr	r1, [fp, #-24]	; 0xffffffe8
   20378:	add	r0, r1, r0
   2037c:	str	r0, [fp, #-24]	; 0xffffffe8
   20380:	ldr	r0, [fp, #-48]	; 0xffffffd0
   20384:	mvn	r1, #0
   20388:	add	r0, r0, r1
   2038c:	str	r0, [fp, #-48]	; 0xffffffd0
   20390:	b	20394 <__assert_fail@plt+0xef00>
   20394:	ldr	r0, [fp, #-12]
   20398:	movw	r1, #0
   2039c:	cmp	r0, r1
   203a0:	beq	203b8 <__assert_fail@plt+0xef24>
   203a4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   203a8:	ldr	r1, [fp, #-12]
   203ac:	ldr	r2, [fp, #-28]	; 0xffffffe4
   203b0:	add	r1, r1, r2, lsl #2
   203b4:	str	r0, [r1]
   203b8:	b	203bc <__assert_fail@plt+0xef28>
   203bc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   203c0:	mvn	r1, #0
   203c4:	add	r0, r0, r1
   203c8:	str	r0, [fp, #-28]	; 0xffffffe4
   203cc:	cmp	r0, #0
   203d0:	bge	1fdd0 <__assert_fail@plt+0xe93c>
   203d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   203d8:	ldr	r1, [fp, #-16]
   203dc:	ldr	r2, [fp, #12]
   203e0:	sub	r2, r2, #1
   203e4:	add	r1, r1, r2, lsl #2
   203e8:	str	r0, [r1]
   203ec:	sub	sp, fp, #8
   203f0:	pop	{r4, sl, fp, pc}
   203f4:	push	{fp, lr}
   203f8:	mov	fp, sp
   203fc:	sub	sp, sp, #56	; 0x38
   20400:	str	r0, [fp, #-4]
   20404:	str	r1, [fp, #-8]
   20408:	movw	r0, #0
   2040c:	str	r0, [fp, #-16]
   20410:	ldr	r0, [fp, #-8]
   20414:	and	r0, r0, #1
   20418:	cmp	r0, #0
   2041c:	beq	20424 <__assert_fail@plt+0xef90>
   20420:	b	20444 <__assert_fail@plt+0xefb0>
   20424:	movw	r0, #21868	; 0x556c
   20428:	movt	r0, #4
   2042c:	movw	r1, #17404	; 0x43fc
   20430:	movt	r1, #4
   20434:	movw	r2, #3383	; 0xd37
   20438:	movw	r3, #21874	; 0x5572
   2043c:	movt	r3, #4
   20440:	bl	11494 <__assert_fail@plt>
   20444:	ldr	r0, [fp, #-4]
   20448:	cmp	r0, #0
   2044c:	beq	20454 <__assert_fail@plt+0xefc0>
   20450:	b	20474 <__assert_fail@plt+0xefe0>
   20454:	movw	r0, #21919	; 0x559f
   20458:	movt	r0, #4
   2045c:	movw	r1, #17404	; 0x43fc
   20460:	movt	r1, #4
   20464:	movw	r2, #3384	; 0xd38
   20468:	movw	r3, #21874	; 0x5572
   2046c:	movt	r3, #4
   20470:	bl	11494 <__assert_fail@plt>
   20474:	ldr	r0, [fp, #-8]
   20478:	lsr	r0, r0, #1
   2047c:	str	r0, [fp, #-8]
   20480:	ldr	r0, [fp, #-4]
   20484:	str	r0, [fp, #-20]	; 0xffffffec
   20488:	movw	r0, #0
   2048c:	str	r0, [fp, #-24]	; 0xffffffe8
   20490:	ldr	r0, [fp, #-20]	; 0xffffffec
   20494:	ldr	r1, [fp, #-20]	; 0xffffffec
   20498:	movw	r2, #0
   2049c:	sub	r1, r2, r1
   204a0:	and	r0, r0, r1
   204a4:	str	r0, [sp, #28]
   204a8:	str	r2, [sp, #24]
   204ac:	movw	r0, #8
   204b0:	str	r0, [sp, #20]
   204b4:	ldr	r0, [sp, #20]
   204b8:	movw	r1, #32
   204bc:	cmp	r1, r0
   204c0:	bls	204fc <__assert_fail@plt+0xf068>
   204c4:	b	204c8 <__assert_fail@plt+0xf034>
   204c8:	ldr	r0, [sp, #28]
   204cc:	and	r0, r0, #-16777216	; 0xff000000
   204d0:	cmp	r0, #0
   204d4:	bne	204f8 <__assert_fail@plt+0xf064>
   204d8:	ldr	r0, [sp, #20]
   204dc:	ldr	r1, [sp, #28]
   204e0:	lsl	r0, r1, r0
   204e4:	str	r0, [sp, #28]
   204e8:	ldr	r0, [sp, #24]
   204ec:	add	r0, r0, #8
   204f0:	str	r0, [sp, #24]
   204f4:	b	204c8 <__assert_fail@plt+0xf034>
   204f8:	b	204fc <__assert_fail@plt+0xf068>
   204fc:	b	20500 <__assert_fail@plt+0xf06c>
   20500:	ldr	r0, [sp, #28]
   20504:	and	r0, r0, #-2147483648	; 0x80000000
   20508:	cmp	r0, #0
   2050c:	bne	2052c <__assert_fail@plt+0xf098>
   20510:	ldr	r0, [sp, #28]
   20514:	lsl	r0, r0, #1
   20518:	str	r0, [sp, #28]
   2051c:	ldr	r0, [sp, #24]
   20520:	add	r0, r0, #1
   20524:	str	r0, [sp, #24]
   20528:	b	20500 <__assert_fail@plt+0xf06c>
   2052c:	ldr	r0, [sp, #24]
   20530:	str	r0, [fp, #-24]	; 0xffffffe8
   20534:	ldr	r0, [fp, #-24]	; 0xffffffe8
   20538:	movw	r1, #31
   2053c:	sub	r0, r1, r0
   20540:	str	r0, [fp, #-12]
   20544:	ldr	r0, [fp, #-4]
   20548:	lsr	r0, r0, #1
   2054c:	str	r0, [fp, #-4]
   20550:	ldr	r0, [fp, #-12]
   20554:	ldr	r1, [fp, #-4]
   20558:	lsr	r0, r1, r0
   2055c:	str	r0, [fp, #-4]
   20560:	ldr	r0, [fp, #-12]
   20564:	ldr	r1, [fp, #-8]
   20568:	ldr	r2, [fp, #-8]
   2056c:	lsr	r2, r2, #1
   20570:	eor	r1, r1, r2
   20574:	and	r0, r0, r1
   20578:	ldr	r1, [fp, #-16]
   2057c:	eor	r0, r1, r0
   20580:	str	r0, [fp, #-16]
   20584:	ldr	r0, [fp, #-4]
   20588:	ldr	r1, [fp, #-8]
   2058c:	cmp	r0, r1
   20590:	bcs	20604 <__assert_fail@plt+0xf170>
   20594:	ldr	r0, [fp, #-4]
   20598:	cmp	r0, #0
   2059c:	bne	205c8 <__assert_fail@plt+0xf134>
   205a0:	ldr	r0, [fp, #-16]
   205a4:	and	r0, r0, #1
   205a8:	cmp	r0, #0
   205ac:	movw	r0, #0
   205b0:	movne	r0, #1
   205b4:	tst	r0, #1
   205b8:	mvn	r0, #0
   205bc:	moveq	r0, #1
   205c0:	mov	sp, fp
   205c4:	pop	{fp, pc}
   205c8:	ldr	r0, [fp, #-4]
   205cc:	ldr	r1, [fp, #-8]
   205d0:	and	r0, r0, r1
   205d4:	ldr	r1, [fp, #-16]
   205d8:	eor	r0, r1, r0
   205dc:	str	r0, [fp, #-16]
   205e0:	ldr	r0, [fp, #-8]
   205e4:	ldr	r1, [fp, #-4]
   205e8:	sub	r0, r0, r1
   205ec:	str	r0, [fp, #-4]
   205f0:	ldr	r0, [fp, #-4]
   205f4:	ldr	r1, [fp, #-8]
   205f8:	sub	r0, r1, r0
   205fc:	str	r0, [fp, #-8]
   20600:	b	20648 <__assert_fail@plt+0xf1b4>
   20604:	ldr	r0, [fp, #-8]
   20608:	ldr	r1, [fp, #-4]
   2060c:	sub	r0, r1, r0
   20610:	str	r0, [fp, #-4]
   20614:	ldr	r0, [fp, #-4]
   20618:	cmp	r0, #0
   2061c:	beq	20624 <__assert_fail@plt+0xf190>
   20620:	b	20644 <__assert_fail@plt+0xf1b0>
   20624:	movw	r0, #21919	; 0x559f
   20628:	movt	r0, #4
   2062c:	movw	r1, #17404	; 0x43fc
   20630:	movt	r1, #4
   20634:	movw	r2, #3410	; 0xd52
   20638:	movw	r3, #21874	; 0x5572
   2063c:	movt	r3, #4
   20640:	bl	11494 <__assert_fail@plt>
   20644:	b	20648 <__assert_fail@plt+0xf1b4>
   20648:	b	2064c <__assert_fail@plt+0xf1b8>
   2064c:	ldr	r0, [fp, #-4]
   20650:	str	r0, [sp, #16]
   20654:	movw	r0, #0
   20658:	str	r0, [sp, #12]
   2065c:	ldr	r0, [sp, #16]
   20660:	ldr	r1, [sp, #16]
   20664:	movw	r2, #0
   20668:	sub	r1, r2, r1
   2066c:	and	r0, r0, r1
   20670:	str	r0, [sp, #8]
   20674:	str	r2, [sp, #4]
   20678:	movw	r0, #8
   2067c:	str	r0, [sp]
   20680:	ldr	r0, [sp]
   20684:	movw	r1, #32
   20688:	cmp	r1, r0
   2068c:	bls	206c8 <__assert_fail@plt+0xf234>
   20690:	b	20694 <__assert_fail@plt+0xf200>
   20694:	ldr	r0, [sp, #8]
   20698:	and	r0, r0, #-16777216	; 0xff000000
   2069c:	cmp	r0, #0
   206a0:	bne	206c4 <__assert_fail@plt+0xf230>
   206a4:	ldr	r0, [sp]
   206a8:	ldr	r1, [sp, #8]
   206ac:	lsl	r0, r1, r0
   206b0:	str	r0, [sp, #8]
   206b4:	ldr	r0, [sp, #4]
   206b8:	add	r0, r0, #8
   206bc:	str	r0, [sp, #4]
   206c0:	b	20694 <__assert_fail@plt+0xf200>
   206c4:	b	206c8 <__assert_fail@plt+0xf234>
   206c8:	b	206cc <__assert_fail@plt+0xf238>
   206cc:	ldr	r0, [sp, #8]
   206d0:	and	r0, r0, #-2147483648	; 0x80000000
   206d4:	cmp	r0, #0
   206d8:	bne	206f8 <__assert_fail@plt+0xf264>
   206dc:	ldr	r0, [sp, #8]
   206e0:	lsl	r0, r0, #1
   206e4:	str	r0, [sp, #8]
   206e8:	ldr	r0, [sp, #4]
   206ec:	add	r0, r0, #1
   206f0:	str	r0, [sp, #4]
   206f4:	b	206cc <__assert_fail@plt+0xf238>
   206f8:	ldr	r0, [sp, #4]
   206fc:	str	r0, [sp, #12]
   20700:	ldr	r0, [sp, #12]
   20704:	movw	r1, #31
   20708:	sub	r0, r1, r0
   2070c:	str	r0, [fp, #-12]
   20710:	ldr	r0, [fp, #-12]
   20714:	add	r0, r0, #1
   20718:	str	r0, [fp, #-12]
   2071c:	b	20550 <__assert_fail@plt+0xf0bc>
   20720:	push	{fp, lr}
   20724:	mov	fp, sp
   20728:	sub	sp, sp, #64	; 0x40
   2072c:	ldr	ip, [fp, #8]
   20730:	str	r0, [fp, #-4]
   20734:	str	r1, [fp, #-8]
   20738:	str	r2, [fp, #-12]
   2073c:	str	r3, [fp, #-16]
   20740:	ldr	r0, [fp, #-16]
   20744:	cmp	r0, #0
   20748:	str	ip, [sp, #24]
   2074c:	bls	20754 <__assert_fail@plt+0xf2c0>
   20750:	b	20774 <__assert_fail@plt+0xf2e0>
   20754:	movw	r0, #21926	; 0x55a6
   20758:	movt	r0, #4
   2075c:	movw	r1, #17404	; 0x43fc
   20760:	movt	r1, #4
   20764:	movw	r2, #3442	; 0xd72
   20768:	movw	r3, #21933	; 0x55ad
   2076c:	movt	r3, #4
   20770:	bl	11494 <__assert_fail@plt>
   20774:	ldr	r0, [fp, #-12]
   20778:	cmp	r0, #1073741824	; 0x40000000
   2077c:	bgt	20784 <__assert_fail@plt+0xf2f0>
   20780:	b	207a4 <__assert_fail@plt+0xf310>
   20784:	movw	r0, #22024	; 0x5608
   20788:	movt	r0, #4
   2078c:	movw	r1, #17404	; 0x43fc
   20790:	movt	r1, #4
   20794:	movw	r2, #3443	; 0xd73
   20798:	movw	r3, #21933	; 0x55ad
   2079c:	movt	r3, #4
   207a0:	bl	11494 <__assert_fail@plt>
   207a4:	ldr	r0, [pc, #592]	; 209fc <__assert_fail@plt+0xf568>
   207a8:	ldr	r1, [fp, #-12]
   207ac:	cmp	r1, r0
   207b0:	blt	207b8 <__assert_fail@plt+0xf324>
   207b4:	b	207d8 <__assert_fail@plt+0xf344>
   207b8:	movw	r0, #22046	; 0x561e
   207bc:	movt	r0, #4
   207c0:	movw	r1, #17404	; 0x43fc
   207c4:	movt	r1, #4
   207c8:	movw	r2, #3444	; 0xd74
   207cc:	movw	r3, #21933	; 0x55ad
   207d0:	movt	r3, #4
   207d4:	bl	11494 <__assert_fail@plt>
   207d8:	ldr	r0, [fp, #8]
   207dc:	movw	r1, #4
   207e0:	bl	172f0 <__assert_fail@plt+0x5e5c>
   207e4:	cmp	r0, #0
   207e8:	ble	207f0 <__assert_fail@plt+0xf35c>
   207ec:	b	20810 <__assert_fail@plt+0xf37c>
   207f0:	movw	r0, #22068	; 0x5634
   207f4:	movt	r0, #4
   207f8:	movw	r1, #17404	; 0x43fc
   207fc:	movt	r1, #4
   20800:	movw	r2, #3445	; 0xd75
   20804:	movw	r3, #21933	; 0x55ad
   20808:	movt	r3, #4
   2080c:	bl	11494 <__assert_fail@plt>
   20810:	ldr	r0, [fp, #8]
   20814:	ldr	r0, [r0, #4]
   20818:	cmp	r0, #0
   2081c:	movw	r0, #0
   20820:	movne	r0, #1
   20824:	and	r0, r0, #1
   20828:	ldr	r1, [fp, #8]
   2082c:	ldr	r1, [r1, #8]
   20830:	ldr	r1, [r1]
   20834:	and	r0, r0, r1
   20838:	cmp	r0, #0
   2083c:	beq	20844 <__assert_fail@plt+0xf3b0>
   20840:	b	20864 <__assert_fail@plt+0xf3d0>
   20844:	movw	r0, #21796	; 0x5524
   20848:	movt	r0, #4
   2084c:	movw	r1, #17404	; 0x43fc
   20850:	movt	r1, #4
   20854:	movw	r2, #3446	; 0xd76
   20858:	movw	r3, #21933	; 0x55ad
   2085c:	movt	r3, #4
   20860:	bl	11494 <__assert_fail@plt>
   20864:	add	r0, sp, #32
   20868:	movw	r1, #1
   2086c:	bl	162fc <__assert_fail@plt+0x4e68>
   20870:	ldr	r0, [fp, #-4]
   20874:	movw	r1, #1
   20878:	bl	1608c <__assert_fail@plt+0x4bf8>
   2087c:	ldr	r0, [fp, #-8]
   20880:	ldr	r1, [fp, #-12]
   20884:	bl	15ff0 <__assert_fail@plt+0x4b5c>
   20888:	ldr	r0, [fp, #8]
   2088c:	movw	r1, #2
   20890:	bl	1b1b8 <__assert_fail@plt+0x9d24>
   20894:	sub	r0, r0, #1
   20898:	str	r0, [fp, #-20]	; 0xffffffec
   2089c:	ldr	r0, [fp, #-20]	; 0xffffffec
   208a0:	mvn	r1, #0
   208a4:	add	r0, r0, r1
   208a8:	str	r0, [fp, #-20]	; 0xffffffec
   208ac:	ldr	r1, [fp, #-16]
   208b0:	cmp	r0, r1
   208b4:	bcc	209d0 <__assert_fail@plt+0xf53c>
   208b8:	add	r0, sp, #32
   208bc:	ldr	r2, [fp, #-4]
   208c0:	str	r0, [sp, #20]
   208c4:	ldr	r1, [sp, #20]
   208c8:	bl	17cdc <__assert_fail@plt+0x6848>
   208cc:	ldr	r0, [fp, #-4]
   208d0:	ldr	r1, [fp, #-8]
   208d4:	ldr	r2, [fp, #8]
   208d8:	bl	20a00 <__assert_fail@plt+0xf56c>
   208dc:	ldr	r0, [fp, #-16]
   208e0:	ldr	r1, [fp, #-20]	; 0xffffffec
   208e4:	cmp	r0, r1
   208e8:	beq	20900 <__assert_fail@plt+0xf46c>
   208ec:	ldr	r0, [fp, #8]
   208f0:	ldr	r1, [fp, #-20]	; 0xffffffec
   208f4:	bl	1c064 <__assert_fail@plt+0xabd0>
   208f8:	cmp	r0, #0
   208fc:	beq	209b8 <__assert_fail@plt+0xf524>
   20900:	ldr	r0, [fp, #-8]
   20904:	ldr	r1, [fp, #-8]
   20908:	ldr	r2, [fp, #-12]
   2090c:	bl	17c28 <__assert_fail@plt+0x6794>
   20910:	add	r0, sp, #32
   20914:	ldr	r1, [fp, #-4]
   20918:	bl	175e4 <__assert_fail@plt+0x6150>
   2091c:	add	r0, sp, #32
   20920:	ldr	r2, [fp, #-4]
   20924:	str	r0, [sp, #16]
   20928:	ldr	r1, [sp, #16]
   2092c:	bl	176c0 <__assert_fail@plt+0x622c>
   20930:	ldr	r0, [sp, #36]	; 0x24
   20934:	cmp	r0, #0
   20938:	movw	r0, #0
   2093c:	movne	r0, #1
   20940:	and	r0, r0, #1
   20944:	ldr	r1, [sp, #40]	; 0x28
   20948:	ldr	r1, [r1]
   2094c:	and	r0, r0, r1
   20950:	cmp	r0, #0
   20954:	beq	2096c <__assert_fail@plt+0xf4d8>
   20958:	add	r0, sp, #32
   2095c:	ldr	r2, [fp, #8]
   20960:	str	r0, [sp, #12]
   20964:	ldr	r1, [sp, #12]
   20968:	bl	176c0 <__assert_fail@plt+0x622c>
   2096c:	add	r0, sp, #32
   20970:	str	r0, [sp, #8]
   20974:	ldr	r1, [sp, #8]
   20978:	movw	r2, #1
   2097c:	bl	18bf8 <__assert_fail@plt+0x7764>
   20980:	ldr	r0, [fp, #-4]
   20984:	ldr	r1, [fp, #-4]
   20988:	ldr	r2, [fp, #-12]
   2098c:	mvn	lr, #1
   20990:	mul	r2, r2, lr
   20994:	bl	17c28 <__assert_fail@plt+0x6794>
   20998:	add	r1, sp, #32
   2099c:	ldr	r0, [fp, #-4]
   209a0:	ldr	r2, [fp, #-4]
   209a4:	bl	176c0 <__assert_fail@plt+0x622c>
   209a8:	ldr	r0, [fp, #-4]
   209ac:	ldr	r1, [fp, #-4]
   209b0:	ldr	r2, [fp, #8]
   209b4:	bl	18894 <__assert_fail@plt+0x7400>
   209b8:	add	r0, sp, #32
   209bc:	ldr	r2, [fp, #8]
   209c0:	str	r0, [sp, #4]
   209c4:	ldr	r1, [sp, #4]
   209c8:	bl	18894 <__assert_fail@plt+0x7400>
   209cc:	b	2089c <__assert_fail@plt+0xf408>
   209d0:	add	r0, sp, #32
   209d4:	ldr	r1, [sp, #36]	; 0x24
   209d8:	cmp	r1, #0
   209dc:	movw	r1, #0
   209e0:	moveq	r1, #1
   209e4:	and	r1, r1, #1
   209e8:	str	r1, [sp, #28]
   209ec:	bl	15f6c <__assert_fail@plt+0x4ad8>
   209f0:	ldr	r0, [sp, #28]
   209f4:	mov	sp, fp
   209f8:	pop	{fp, pc}
   209fc:	andgt	r0, r0, r1
   20a00:	push	{fp, lr}
   20a04:	mov	fp, sp
   20a08:	sub	sp, sp, #16
   20a0c:	str	r0, [fp, #-4]
   20a10:	str	r1, [sp, #8]
   20a14:	str	r2, [sp, #4]
   20a18:	ldr	r0, [sp, #8]
   20a1c:	ldr	r1, [sp, #8]
   20a20:	ldr	r2, [sp, #4]
   20a24:	bl	188d4 <__assert_fail@plt+0x7440>
   20a28:	ldr	r0, [fp, #-4]
   20a2c:	ldr	r1, [fp, #-4]
   20a30:	ldr	r2, [fp, #-4]
   20a34:	bl	17cdc <__assert_fail@plt+0x6848>
   20a38:	ldr	r0, [fp, #-4]
   20a3c:	ldr	r1, [sp, #8]
   20a40:	movw	r2, #2
   20a44:	bl	180e0 <__assert_fail@plt+0x6c4c>
   20a48:	ldr	r0, [fp, #-4]
   20a4c:	ldr	r1, [fp, #-4]
   20a50:	ldr	r2, [sp, #4]
   20a54:	bl	18894 <__assert_fail@plt+0x7400>
   20a58:	ldr	r0, [sp, #8]
   20a5c:	ldr	r1, [sp, #8]
   20a60:	ldr	r2, [sp, #8]
   20a64:	bl	17cdc <__assert_fail@plt+0x6848>
   20a68:	mov	sp, fp
   20a6c:	pop	{fp, pc}
   20a70:	push	{fp, lr}
   20a74:	mov	fp, sp
   20a78:	sub	sp, sp, #48	; 0x30
   20a7c:	ldr	ip, [fp, #12]
   20a80:	ldr	lr, [fp, #8]
   20a84:	str	r0, [fp, #-4]
   20a88:	str	r1, [fp, #-8]
   20a8c:	str	r2, [fp, #-12]
   20a90:	str	r3, [fp, #-16]
   20a94:	movw	r0, #24976	; 0x6190
   20a98:	movt	r0, #5
   20a9c:	ldr	r1, [r0]
   20aa0:	str	r1, [sp, #24]
   20aa4:	movw	r1, #0
   20aa8:	str	r1, [r0]
   20aac:	ldr	r0, [fp, #-4]
   20ab0:	cmp	r0, #2
   20ab4:	str	lr, [sp, #16]
   20ab8:	str	ip, [sp, #12]
   20abc:	bne	20b70 <__assert_fail@plt+0xf6dc>
   20ac0:	ldr	r0, [fp, #-4]
   20ac4:	ldr	r1, [fp, #-8]
   20ac8:	movw	r2, #17055	; 0x429f
   20acc:	movt	r2, #4
   20ad0:	movw	r3, #22292	; 0x5714
   20ad4:	movt	r3, #4
   20ad8:	movw	ip, #0
   20adc:	str	ip, [sp]
   20ae0:	bl	1135c <getopt_long@plt>
   20ae4:	str	r0, [fp, #-20]	; 0xffffffec
   20ae8:	cmn	r0, #1
   20aec:	beq	20b70 <__assert_fail@plt+0xf6dc>
   20af0:	ldr	r0, [fp, #-20]	; 0xffffffec
   20af4:	cmp	r0, #104	; 0x68
   20af8:	str	r0, [sp, #8]
   20afc:	beq	20b14 <__assert_fail@plt+0xf680>
   20b00:	b	20b04 <__assert_fail@plt+0xf670>
   20b04:	ldr	r0, [sp, #8]
   20b08:	cmp	r0, #118	; 0x76
   20b0c:	beq	20b30 <__assert_fail@plt+0xf69c>
   20b10:	b	20b68 <__assert_fail@plt+0xf6d4>
   20b14:	ldr	r0, [fp, #12]
   20b18:	movw	r1, #0
   20b1c:	str	r0, [sp, #4]
   20b20:	mov	r0, r1
   20b24:	ldr	r1, [sp, #4]
   20b28:	blx	r1
   20b2c:	b	20b6c <__assert_fail@plt+0xf6d8>
   20b30:	add	r0, fp, #16
   20b34:	str	r0, [sp, #20]
   20b38:	movw	r0, #24972	; 0x618c
   20b3c:	movt	r0, #5
   20b40:	ldr	r0, [r0]
   20b44:	ldr	r1, [fp, #-12]
   20b48:	ldr	r2, [fp, #-16]
   20b4c:	ldr	r3, [fp, #8]
   20b50:	ldr	ip, [sp, #20]
   20b54:	mov	lr, sp
   20b58:	str	ip, [lr]
   20b5c:	bl	3caa8 <__assert_fail@plt+0x2b614>
   20b60:	movw	r0, #0
   20b64:	bl	11374 <exit@plt>
   20b68:	b	20b6c <__assert_fail@plt+0xf6d8>
   20b6c:	b	20b70 <__assert_fail@plt+0xf6dc>
   20b70:	ldr	r0, [sp, #24]
   20b74:	movw	r1, #24976	; 0x6190
   20b78:	movt	r1, #5
   20b7c:	str	r0, [r1]
   20b80:	movw	r0, #24960	; 0x6180
   20b84:	movt	r0, #5
   20b88:	movw	r1, #0
   20b8c:	str	r1, [r0]
   20b90:	mov	sp, fp
   20b94:	pop	{fp, pc}
   20b98:	push	{r4, sl, fp, lr}
   20b9c:	add	fp, sp, #8
   20ba0:	sub	sp, sp, #64	; 0x40
   20ba4:	ldr	ip, [fp, #16]
   20ba8:	ldr	lr, [fp, #12]
   20bac:	ldr	r4, [fp, #8]
   20bb0:	str	r0, [fp, #-12]
   20bb4:	str	r1, [fp, #-16]
   20bb8:	str	r2, [fp, #-20]	; 0xffffffec
   20bbc:	str	r3, [fp, #-24]	; 0xffffffe8
   20bc0:	and	r0, lr, #1
   20bc4:	strb	r0, [fp, #-25]	; 0xffffffe7
   20bc8:	movw	r0, #24976	; 0x6190
   20bcc:	movt	r0, #5
   20bd0:	ldr	r1, [r0]
   20bd4:	str	r1, [sp, #36]	; 0x24
   20bd8:	movw	r1, #1
   20bdc:	str	r1, [r0]
   20be0:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   20be4:	tst	r0, #1
   20be8:	movw	r0, #17055	; 0x429f
   20bec:	movt	r0, #4
   20bf0:	movw	r1, #16931	; 0x4223
   20bf4:	movt	r1, #4
   20bf8:	movne	r0, r1
   20bfc:	str	r0, [sp, #32]
   20c00:	ldr	r0, [fp, #-12]
   20c04:	ldr	r1, [fp, #-16]
   20c08:	ldr	r2, [sp, #32]
   20c0c:	movw	r3, #22292	; 0x5714
   20c10:	movt	r3, #4
   20c14:	movw	lr, #0
   20c18:	str	lr, [sp]
   20c1c:	str	r4, [sp, #24]
   20c20:	str	ip, [sp, #20]
   20c24:	bl	1135c <getopt_long@plt>
   20c28:	str	r0, [fp, #-32]	; 0xffffffe0
   20c2c:	cmn	r0, #1
   20c30:	beq	20cd0 <__assert_fail@plt+0xf83c>
   20c34:	ldr	r0, [fp, #-32]	; 0xffffffe0
   20c38:	cmp	r0, #104	; 0x68
   20c3c:	str	r0, [sp, #16]
   20c40:	beq	20c58 <__assert_fail@plt+0xf7c4>
   20c44:	b	20c48 <__assert_fail@plt+0xf7b4>
   20c48:	ldr	r0, [sp, #16]
   20c4c:	cmp	r0, #118	; 0x76
   20c50:	beq	20c74 <__assert_fail@plt+0xf7e0>
   20c54:	b	20cac <__assert_fail@plt+0xf818>
   20c58:	ldr	r0, [fp, #16]
   20c5c:	movw	r1, #0
   20c60:	str	r0, [sp, #12]
   20c64:	mov	r0, r1
   20c68:	ldr	r1, [sp, #12]
   20c6c:	blx	r1
   20c70:	b	20ccc <__assert_fail@plt+0xf838>
   20c74:	add	r0, fp, #20
   20c78:	str	r0, [sp, #28]
   20c7c:	movw	r0, #24972	; 0x618c
   20c80:	movt	r0, #5
   20c84:	ldr	r0, [r0]
   20c88:	ldr	r1, [fp, #-20]	; 0xffffffec
   20c8c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   20c90:	ldr	r3, [fp, #8]
   20c94:	ldr	ip, [sp, #28]
   20c98:	mov	lr, sp
   20c9c:	str	ip, [lr]
   20ca0:	bl	3caa8 <__assert_fail@plt+0x2b614>
   20ca4:	movw	r0, #0
   20ca8:	bl	11374 <exit@plt>
   20cac:	ldr	r0, [fp, #16]
   20cb0:	movw	r1, #24868	; 0x6124
   20cb4:	movt	r1, #5
   20cb8:	ldr	r1, [r1]
   20cbc:	str	r0, [sp, #8]
   20cc0:	mov	r0, r1
   20cc4:	ldr	r1, [sp, #8]
   20cc8:	blx	r1
   20ccc:	b	20cd0 <__assert_fail@plt+0xf83c>
   20cd0:	ldr	r0, [sp, #36]	; 0x24
   20cd4:	movw	r1, #24976	; 0x6190
   20cd8:	movt	r1, #5
   20cdc:	str	r0, [r1]
   20ce0:	sub	sp, fp, #8
   20ce4:	pop	{r4, sl, fp, pc}
   20ce8:	push	{fp, lr}
   20cec:	mov	fp, sp
   20cf0:	sub	sp, sp, #80	; 0x50
   20cf4:	str	r0, [fp, #-8]
   20cf8:	str	r1, [fp, #-12]
   20cfc:	bl	112d8 <__ctype_get_mb_cur_max@plt>
   20d00:	cmp	r0, #1
   20d04:	bls	20df8 <__assert_fail@plt+0xf964>
   20d08:	ldr	r0, [fp, #-12]
   20d0c:	and	r0, r0, #255	; 0xff
   20d10:	cmp	r0, #48	; 0x30
   20d14:	blt	20df8 <__assert_fail@plt+0xf964>
   20d18:	ldr	r0, [fp, #-8]
   20d1c:	str	r0, [sp, #28]
   20d20:	movw	r0, #0
   20d24:	strb	r0, [sp, #12]
   20d28:	add	r1, sp, #12
   20d2c:	add	r1, r1, #4
   20d30:	str	r0, [sp, #8]
   20d34:	mov	r0, r1
   20d38:	ldr	r1, [sp, #8]
   20d3c:	and	r1, r1, #255	; 0xff
   20d40:	movw	r2, #8
   20d44:	bl	113d4 <memset@plt>
   20d48:	ldr	r0, [sp, #8]
   20d4c:	strb	r0, [sp, #24]
   20d50:	add	r0, sp, #12
   20d54:	bl	20f00 <__assert_fail@plt+0xfa6c>
   20d58:	ldrb	r0, [sp, #36]	; 0x24
   20d5c:	tst	r0, #1
   20d60:	movw	r0, #0
   20d64:	str	r0, [sp, #4]
   20d68:	beq	20d80 <__assert_fail@plt+0xf8ec>
   20d6c:	ldr	r0, [sp, #40]	; 0x28
   20d70:	cmp	r0, #0
   20d74:	movw	r0, #0
   20d78:	moveq	r0, #1
   20d7c:	str	r0, [sp, #4]
   20d80:	ldr	r0, [sp, #4]
   20d84:	mvn	r1, #0
   20d88:	eor	r0, r0, r1
   20d8c:	tst	r0, #1
   20d90:	bne	20d98 <__assert_fail@plt+0xf904>
   20d94:	b	20dec <__assert_fail@plt+0xf958>
   20d98:	ldr	r0, [sp, #32]
   20d9c:	cmp	r0, #1
   20da0:	bne	20dc0 <__assert_fail@plt+0xf92c>
   20da4:	ldr	r0, [sp, #28]
   20da8:	ldrb	r0, [r0]
   20dac:	ldr	r1, [fp, #-12]
   20db0:	and	r1, r1, #255	; 0xff
   20db4:	cmp	r0, r1
   20db8:	bne	20dc0 <__assert_fail@plt+0xf92c>
   20dbc:	b	20de0 <__assert_fail@plt+0xf94c>
   20dc0:	b	20dc4 <__assert_fail@plt+0xf930>
   20dc4:	ldr	r0, [sp, #32]
   20dc8:	ldr	r1, [sp, #28]
   20dcc:	add	r0, r1, r0
   20dd0:	str	r0, [sp, #28]
   20dd4:	movw	r0, #0
   20dd8:	strb	r0, [sp, #24]
   20ddc:	b	20d50 <__assert_fail@plt+0xf8bc>
   20de0:	ldr	r0, [sp, #28]
   20de4:	str	r0, [fp, #-4]
   20de8:	b	20e08 <__assert_fail@plt+0xf974>
   20dec:	movw	r0, #0
   20df0:	str	r0, [fp, #-4]
   20df4:	b	20e08 <__assert_fail@plt+0xf974>
   20df8:	ldr	r0, [fp, #-8]
   20dfc:	ldr	r1, [fp, #-12]
   20e00:	bl	11398 <strchr@plt>
   20e04:	str	r0, [fp, #-4]
   20e08:	ldr	r0, [fp, #-4]
   20e0c:	mov	sp, fp
   20e10:	pop	{fp, pc}
   20e14:	push	{fp, lr}
   20e18:	mov	fp, sp
   20e1c:	sub	sp, sp, #80	; 0x50
   20e20:	str	r0, [fp, #-8]
   20e24:	bl	112d8 <__ctype_get_mb_cur_max@plt>
   20e28:	cmp	r0, #1
   20e2c:	bls	20ee8 <__assert_fail@plt+0xfa54>
   20e30:	movw	r0, #0
   20e34:	str	r0, [fp, #-12]
   20e38:	ldr	r0, [fp, #-8]
   20e3c:	str	r0, [sp, #28]
   20e40:	movw	r0, #0
   20e44:	strb	r0, [sp, #12]
   20e48:	add	r1, sp, #12
   20e4c:	add	r1, r1, #4
   20e50:	str	r0, [sp, #8]
   20e54:	mov	r0, r1
   20e58:	ldr	r1, [sp, #8]
   20e5c:	and	r1, r1, #255	; 0xff
   20e60:	movw	r2, #8
   20e64:	bl	113d4 <memset@plt>
   20e68:	ldr	r0, [sp, #8]
   20e6c:	strb	r0, [sp, #24]
   20e70:	add	r0, sp, #12
   20e74:	bl	20f00 <__assert_fail@plt+0xfa6c>
   20e78:	ldrb	r0, [sp, #36]	; 0x24
   20e7c:	tst	r0, #1
   20e80:	movw	r0, #0
   20e84:	str	r0, [sp, #4]
   20e88:	beq	20ea0 <__assert_fail@plt+0xfa0c>
   20e8c:	ldr	r0, [sp, #40]	; 0x28
   20e90:	cmp	r0, #0
   20e94:	movw	r0, #0
   20e98:	moveq	r0, #1
   20e9c:	str	r0, [sp, #4]
   20ea0:	ldr	r0, [sp, #4]
   20ea4:	mvn	r1, #0
   20ea8:	eor	r0, r0, r1
   20eac:	tst	r0, #1
   20eb0:	beq	20edc <__assert_fail@plt+0xfa48>
   20eb4:	ldr	r0, [fp, #-12]
   20eb8:	add	r0, r0, #1
   20ebc:	str	r0, [fp, #-12]
   20ec0:	ldr	r0, [sp, #32]
   20ec4:	ldr	r1, [sp, #28]
   20ec8:	add	r0, r1, r0
   20ecc:	str	r0, [sp, #28]
   20ed0:	movw	r0, #0
   20ed4:	strb	r0, [sp, #24]
   20ed8:	b	20e70 <__assert_fail@plt+0xf9dc>
   20edc:	ldr	r0, [fp, #-12]
   20ee0:	str	r0, [fp, #-4]
   20ee4:	b	20ef4 <__assert_fail@plt+0xfa60>
   20ee8:	ldr	r0, [fp, #-8]
   20eec:	bl	1138c <strlen@plt>
   20ef0:	str	r0, [fp, #-4]
   20ef4:	ldr	r0, [fp, #-4]
   20ef8:	mov	sp, fp
   20efc:	pop	{fp, pc}
   20f00:	push	{fp, lr}
   20f04:	mov	fp, sp
   20f08:	sub	sp, sp, #24
   20f0c:	str	r0, [fp, #-4]
   20f10:	ldr	r0, [fp, #-4]
   20f14:	ldrb	r0, [r0, #12]
   20f18:	tst	r0, #1
   20f1c:	beq	20f24 <__assert_fail@plt+0xfa90>
   20f20:	b	2115c <__assert_fail@plt+0xfcc8>
   20f24:	ldr	r0, [fp, #-4]
   20f28:	ldrb	r0, [r0]
   20f2c:	tst	r0, #1
   20f30:	beq	20f38 <__assert_fail@plt+0xfaa4>
   20f34:	b	20fc4 <__assert_fail@plt+0xfb30>
   20f38:	ldr	r0, [fp, #-4]
   20f3c:	ldr	r0, [r0, #16]
   20f40:	ldrb	r0, [r0]
   20f44:	bl	418e8 <__assert_fail@plt+0x30454>
   20f48:	tst	r0, #1
   20f4c:	beq	20f80 <__assert_fail@plt+0xfaec>
   20f50:	ldr	r0, [fp, #-4]
   20f54:	movw	r1, #1
   20f58:	str	r1, [r0, #20]
   20f5c:	ldr	r0, [fp, #-4]
   20f60:	ldr	r0, [r0, #16]
   20f64:	ldrb	r0, [r0]
   20f68:	ldr	r1, [fp, #-4]
   20f6c:	str	r0, [r1, #28]
   20f70:	ldr	r0, [fp, #-4]
   20f74:	movw	r1, #1
   20f78:	strb	r1, [r0, #24]
   20f7c:	b	21150 <__assert_fail@plt+0xfcbc>
   20f80:	ldr	r0, [fp, #-4]
   20f84:	add	r0, r0, #4
   20f88:	bl	11278 <mbsinit@plt>
   20f8c:	cmp	r0, #0
   20f90:	beq	20f98 <__assert_fail@plt+0xfb04>
   20f94:	b	20fb8 <__assert_fail@plt+0xfb24>
   20f98:	movw	r0, #22340	; 0x5744
   20f9c:	movt	r0, #4
   20fa0:	movw	r1, #22363	; 0x575b
   20fa4:	movt	r1, #4
   20fa8:	movw	r2, #143	; 0x8f
   20fac:	movw	r3, #22379	; 0x576b
   20fb0:	movt	r3, #4
   20fb4:	bl	11494 <__assert_fail@plt>
   20fb8:	ldr	r0, [fp, #-4]
   20fbc:	movw	r1, #1
   20fc0:	strb	r1, [r0]
   20fc4:	ldr	r0, [fp, #-4]
   20fc8:	add	r0, r0, #16
   20fcc:	add	r0, r0, #12
   20fd0:	ldr	r1, [fp, #-4]
   20fd4:	ldr	r1, [r1, #16]
   20fd8:	ldr	r2, [fp, #-4]
   20fdc:	ldr	r2, [r2, #16]
   20fe0:	str	r0, [fp, #-8]
   20fe4:	str	r1, [sp, #12]
   20fe8:	str	r2, [sp, #8]
   20fec:	bl	112d8 <__ctype_get_mb_cur_max@plt>
   20ff0:	ldr	r1, [sp, #8]
   20ff4:	str	r0, [sp, #4]
   20ff8:	mov	r0, r1
   20ffc:	ldr	r1, [sp, #4]
   21000:	bl	3b960 <__assert_fail@plt+0x2a4cc>
   21004:	ldr	r1, [fp, #-4]
   21008:	add	r3, r1, #4
   2100c:	ldr	r1, [fp, #-8]
   21010:	str	r0, [sp]
   21014:	mov	r0, r1
   21018:	ldr	r1, [sp, #12]
   2101c:	ldr	r2, [sp]
   21020:	bl	4193c <__assert_fail@plt+0x304a8>
   21024:	ldr	r1, [fp, #-4]
   21028:	str	r0, [r1, #20]
   2102c:	ldr	r0, [fp, #-4]
   21030:	ldr	r0, [r0, #20]
   21034:	cmn	r0, #1
   21038:	bne	21058 <__assert_fail@plt+0xfbc4>
   2103c:	ldr	r0, [fp, #-4]
   21040:	movw	r1, #1
   21044:	str	r1, [r0, #20]
   21048:	ldr	r0, [fp, #-4]
   2104c:	movw	r1, #0
   21050:	strb	r1, [r0, #24]
   21054:	b	2114c <__assert_fail@plt+0xfcb8>
   21058:	ldr	r0, [fp, #-4]
   2105c:	ldr	r0, [r0, #20]
   21060:	cmn	r0, #2
   21064:	bne	2108c <__assert_fail@plt+0xfbf8>
   21068:	ldr	r0, [fp, #-4]
   2106c:	ldr	r0, [r0, #16]
   21070:	bl	1138c <strlen@plt>
   21074:	ldr	lr, [fp, #-4]
   21078:	str	r0, [lr, #20]
   2107c:	ldr	r0, [fp, #-4]
   21080:	movw	lr, #0
   21084:	strb	lr, [r0, #24]
   21088:	b	21148 <__assert_fail@plt+0xfcb4>
   2108c:	ldr	r0, [fp, #-4]
   21090:	ldr	r0, [r0, #20]
   21094:	cmp	r0, #0
   21098:	bne	21118 <__assert_fail@plt+0xfc84>
   2109c:	ldr	r0, [fp, #-4]
   210a0:	movw	r1, #1
   210a4:	str	r1, [r0, #20]
   210a8:	ldr	r0, [fp, #-4]
   210ac:	ldr	r0, [r0, #16]
   210b0:	ldrb	r0, [r0]
   210b4:	cmp	r0, #0
   210b8:	bne	210c0 <__assert_fail@plt+0xfc2c>
   210bc:	b	210e0 <__assert_fail@plt+0xfc4c>
   210c0:	movw	r0, #22427	; 0x579b
   210c4:	movt	r0, #4
   210c8:	movw	r1, #22363	; 0x575b
   210cc:	movt	r1, #4
   210d0:	movw	r2, #171	; 0xab
   210d4:	movw	r3, #22379	; 0x576b
   210d8:	movt	r3, #4
   210dc:	bl	11494 <__assert_fail@plt>
   210e0:	ldr	r0, [fp, #-4]
   210e4:	ldr	r0, [r0, #28]
   210e8:	cmp	r0, #0
   210ec:	bne	210f4 <__assert_fail@plt+0xfc60>
   210f0:	b	21114 <__assert_fail@plt+0xfc80>
   210f4:	movw	r0, #22450	; 0x57b2
   210f8:	movt	r0, #4
   210fc:	movw	r1, #22363	; 0x575b
   21100:	movt	r1, #4
   21104:	movw	r2, #172	; 0xac
   21108:	movw	r3, #22379	; 0x576b
   2110c:	movt	r3, #4
   21110:	bl	11494 <__assert_fail@plt>
   21114:	b	21118 <__assert_fail@plt+0xfc84>
   21118:	ldr	r0, [fp, #-4]
   2111c:	movw	r1, #1
   21120:	strb	r1, [r0, #24]
   21124:	ldr	r0, [fp, #-4]
   21128:	add	r0, r0, #4
   2112c:	bl	11278 <mbsinit@plt>
   21130:	cmp	r0, #0
   21134:	beq	21144 <__assert_fail@plt+0xfcb0>
   21138:	ldr	r0, [fp, #-4]
   2113c:	movw	r1, #0
   21140:	strb	r1, [r0]
   21144:	b	21148 <__assert_fail@plt+0xfcb4>
   21148:	b	2114c <__assert_fail@plt+0xfcb8>
   2114c:	b	21150 <__assert_fail@plt+0xfcbc>
   21150:	ldr	r0, [fp, #-4]
   21154:	movw	r1, #1
   21158:	strb	r1, [r0, #12]
   2115c:	mov	sp, fp
   21160:	pop	{fp, pc}
   21164:	sub	sp, sp, #8
   21168:	str	r0, [sp, #4]
   2116c:	str	r1, [sp]
   21170:	ldr	r0, [sp]
   21174:	ldr	r1, [sp, #4]
   21178:	ldr	r2, [r1, #16]
   2117c:	add	r0, r2, r0
   21180:	str	r0, [r1, #16]
   21184:	add	sp, sp, #8
   21188:	bx	lr
   2118c:	push	{fp, lr}
   21190:	mov	fp, sp
   21194:	sub	sp, sp, #8
   21198:	str	r0, [sp, #4]
   2119c:	str	r1, [sp]
   211a0:	ldr	r0, [sp]
   211a4:	ldrb	r0, [r0]
   211a8:	ldr	r1, [sp, #4]
   211ac:	and	r2, r0, #1
   211b0:	strb	r2, [r1]
   211b4:	tst	r0, #1
   211b8:	beq	211d8 <__assert_fail@plt+0xfd44>
   211bc:	ldr	r0, [sp, #4]
   211c0:	ldr	r1, [sp]
   211c4:	ldr	r2, [r1, #4]
   211c8:	str	r2, [r0, #4]
   211cc:	ldr	r1, [r1, #8]
   211d0:	str	r1, [r0, #8]
   211d4:	b	211f0 <__assert_fail@plt+0xfd5c>
   211d8:	ldr	r0, [sp, #4]
   211dc:	add	r0, r0, #4
   211e0:	movw	r1, #0
   211e4:	and	r1, r1, #255	; 0xff
   211e8:	movw	r2, #8
   211ec:	bl	113d4 <memset@plt>
   211f0:	ldr	r0, [sp]
   211f4:	ldrb	r0, [r0, #12]
   211f8:	ldr	r1, [sp, #4]
   211fc:	and	r0, r0, #1
   21200:	strb	r0, [r1, #12]
   21204:	ldr	r0, [sp, #4]
   21208:	add	r0, r0, #16
   2120c:	ldr	r1, [sp]
   21210:	add	r1, r1, #16
   21214:	bl	41838 <__assert_fail@plt+0x303a4>
   21218:	mov	sp, fp
   2121c:	pop	{fp, pc}
   21220:	push	{fp, lr}
   21224:	mov	fp, sp
   21228:	sub	sp, sp, #24
   2122c:	str	r0, [fp, #-4]
   21230:	ldr	r0, [fp, #-4]
   21234:	movw	r1, #0
   21238:	cmp	r0, r1
   2123c:	bne	21260 <__assert_fail@plt+0xfdcc>
   21240:	movw	r0, #24968	; 0x6188
   21244:	movt	r0, #5
   21248:	ldr	r1, [r0]
   2124c:	movw	r0, #22468	; 0x57c4
   21250:	movt	r0, #4
   21254:	bl	11464 <fputs@plt>
   21258:	str	r0, [sp, #8]
   2125c:	bl	1147c <abort@plt>
   21260:	ldr	r0, [fp, #-4]
   21264:	movw	r1, #47	; 0x2f
   21268:	bl	11434 <strrchr@plt>
   2126c:	str	r0, [fp, #-8]
   21270:	ldr	r0, [fp, #-8]
   21274:	movw	r1, #0
   21278:	cmp	r0, r1
   2127c:	beq	21290 <__assert_fail@plt+0xfdfc>
   21280:	ldr	r0, [fp, #-8]
   21284:	add	r0, r0, #1
   21288:	str	r0, [sp, #4]
   2128c:	b	21298 <__assert_fail@plt+0xfe04>
   21290:	ldr	r0, [fp, #-4]
   21294:	str	r0, [sp, #4]
   21298:	ldr	r0, [sp, #4]
   2129c:	str	r0, [sp, #12]
   212a0:	ldr	r0, [sp, #12]
   212a4:	ldr	r1, [fp, #-4]
   212a8:	sub	r0, r0, r1
   212ac:	cmp	r0, #7
   212b0:	blt	2131c <__assert_fail@plt+0xfe88>
   212b4:	ldr	r0, [sp, #12]
   212b8:	mvn	r1, #6
   212bc:	add	r0, r0, r1
   212c0:	movw	r1, #22524	; 0x57fc
   212c4:	movt	r1, #4
   212c8:	movw	r2, #7
   212cc:	bl	11470 <strncmp@plt>
   212d0:	cmp	r0, #0
   212d4:	bne	2131c <__assert_fail@plt+0xfe88>
   212d8:	ldr	r0, [sp, #12]
   212dc:	str	r0, [fp, #-4]
   212e0:	ldr	r0, [sp, #12]
   212e4:	movw	r1, #22532	; 0x5804
   212e8:	movt	r1, #4
   212ec:	movw	r2, #3
   212f0:	bl	11470 <strncmp@plt>
   212f4:	cmp	r0, #0
   212f8:	bne	21318 <__assert_fail@plt+0xfe84>
   212fc:	ldr	r0, [sp, #12]
   21300:	add	r0, r0, #3
   21304:	str	r0, [fp, #-4]
   21308:	ldr	r0, [fp, #-4]
   2130c:	movw	r1, #24952	; 0x6178
   21310:	movt	r1, #5
   21314:	str	r0, [r1]
   21318:	b	2131c <__assert_fail@plt+0xfe88>
   2131c:	ldr	r0, [fp, #-4]
   21320:	movw	r1, #24996	; 0x61a4
   21324:	movt	r1, #5
   21328:	str	r0, [r1]
   2132c:	ldr	r0, [fp, #-4]
   21330:	movw	r1, #24956	; 0x617c
   21334:	movt	r1, #5
   21338:	str	r0, [r1]
   2133c:	mov	sp, fp
   21340:	pop	{fp, pc}
   21344:	push	{fp, lr}
   21348:	mov	fp, sp
   2134c:	sub	sp, sp, #24
   21350:	str	r0, [fp, #-4]
   21354:	bl	113b0 <__errno_location@plt>
   21358:	ldr	r0, [r0]
   2135c:	str	r0, [fp, #-8]
   21360:	ldr	r0, [fp, #-4]
   21364:	movw	lr, #0
   21368:	cmp	r0, lr
   2136c:	beq	2137c <__assert_fail@plt+0xfee8>
   21370:	ldr	r0, [fp, #-4]
   21374:	str	r0, [sp, #8]
   21378:	b	2138c <__assert_fail@plt+0xfef8>
   2137c:	movw	r0, #25000	; 0x61a8
   21380:	movt	r0, #5
   21384:	str	r0, [sp, #8]
   21388:	b	2138c <__assert_fail@plt+0xfef8>
   2138c:	ldr	r0, [sp, #8]
   21390:	movw	r1, #48	; 0x30
   21394:	bl	3f9ec <__assert_fail@plt+0x2e558>
   21398:	str	r0, [sp, #12]
   2139c:	ldr	r0, [fp, #-8]
   213a0:	str	r0, [sp, #4]
   213a4:	bl	113b0 <__errno_location@plt>
   213a8:	ldr	r1, [sp, #4]
   213ac:	str	r1, [r0]
   213b0:	ldr	r0, [sp, #12]
   213b4:	mov	sp, fp
   213b8:	pop	{fp, pc}
   213bc:	sub	sp, sp, #8
   213c0:	str	r0, [sp, #4]
   213c4:	ldr	r0, [sp, #4]
   213c8:	movw	r1, #0
   213cc:	cmp	r0, r1
   213d0:	beq	213e0 <__assert_fail@plt+0xff4c>
   213d4:	ldr	r0, [sp, #4]
   213d8:	str	r0, [sp]
   213dc:	b	213f0 <__assert_fail@plt+0xff5c>
   213e0:	movw	r0, #25000	; 0x61a8
   213e4:	movt	r0, #5
   213e8:	str	r0, [sp]
   213ec:	b	213f0 <__assert_fail@plt+0xff5c>
   213f0:	ldr	r0, [sp]
   213f4:	ldr	r0, [r0]
   213f8:	add	sp, sp, #8
   213fc:	bx	lr
   21400:	sub	sp, sp, #16
   21404:	str	r0, [sp, #12]
   21408:	str	r1, [sp, #8]
   2140c:	ldr	r0, [sp, #8]
   21410:	ldr	r1, [sp, #12]
   21414:	movw	r2, #0
   21418:	cmp	r1, r2
   2141c:	str	r0, [sp, #4]
   21420:	beq	21430 <__assert_fail@plt+0xff9c>
   21424:	ldr	r0, [sp, #12]
   21428:	str	r0, [sp]
   2142c:	b	21440 <__assert_fail@plt+0xffac>
   21430:	movw	r0, #25000	; 0x61a8
   21434:	movt	r0, #5
   21438:	str	r0, [sp]
   2143c:	b	21440 <__assert_fail@plt+0xffac>
   21440:	ldr	r0, [sp]
   21444:	ldr	r1, [sp, #4]
   21448:	str	r1, [r0]
   2144c:	add	sp, sp, #16
   21450:	bx	lr
   21454:	sub	sp, sp, #32
   21458:	str	r0, [sp, #28]
   2145c:	strb	r1, [sp, #27]
   21460:	str	r2, [sp, #20]
   21464:	ldrb	r0, [sp, #27]
   21468:	strb	r0, [sp, #19]
   2146c:	ldr	r0, [sp, #28]
   21470:	movw	r1, #0
   21474:	cmp	r0, r1
   21478:	beq	21488 <__assert_fail@plt+0xfff4>
   2147c:	ldr	r0, [sp, #28]
   21480:	str	r0, [sp]
   21484:	b	21498 <__assert_fail@plt+0x10004>
   21488:	movw	r0, #25000	; 0x61a8
   2148c:	movt	r0, #5
   21490:	str	r0, [sp]
   21494:	b	21498 <__assert_fail@plt+0x10004>
   21498:	ldr	r0, [sp]
   2149c:	add	r0, r0, #8
   214a0:	ldrb	r1, [sp, #19]
   214a4:	lsr	r1, r1, #5
   214a8:	add	r0, r0, r1, lsl #2
   214ac:	str	r0, [sp, #12]
   214b0:	ldrb	r0, [sp, #19]
   214b4:	and	r0, r0, #31
   214b8:	str	r0, [sp, #8]
   214bc:	ldr	r0, [sp, #12]
   214c0:	ldr	r0, [r0]
   214c4:	ldr	r1, [sp, #8]
   214c8:	lsr	r0, r0, r1
   214cc:	and	r0, r0, #1
   214d0:	str	r0, [sp, #4]
   214d4:	ldr	r0, [sp, #20]
   214d8:	and	r0, r0, #1
   214dc:	ldr	r1, [sp, #4]
   214e0:	eor	r0, r0, r1
   214e4:	ldr	r1, [sp, #8]
   214e8:	lsl	r0, r0, r1
   214ec:	ldr	r1, [sp, #12]
   214f0:	ldr	r2, [r1]
   214f4:	eor	r0, r2, r0
   214f8:	str	r0, [r1]
   214fc:	ldr	r0, [sp, #4]
   21500:	add	sp, sp, #32
   21504:	bx	lr
   21508:	sub	sp, sp, #12
   2150c:	str	r0, [sp, #8]
   21510:	str	r1, [sp, #4]
   21514:	ldr	r0, [sp, #8]
   21518:	movw	r1, #0
   2151c:	cmp	r0, r1
   21520:	bne	21530 <__assert_fail@plt+0x1009c>
   21524:	movw	r0, #25000	; 0x61a8
   21528:	movt	r0, #5
   2152c:	str	r0, [sp, #8]
   21530:	ldr	r0, [sp, #8]
   21534:	ldr	r0, [r0, #4]
   21538:	str	r0, [sp]
   2153c:	ldr	r0, [sp, #4]
   21540:	ldr	r1, [sp, #8]
   21544:	str	r0, [r1, #4]
   21548:	ldr	r0, [sp]
   2154c:	add	sp, sp, #12
   21550:	bx	lr
   21554:	push	{fp, lr}
   21558:	mov	fp, sp
   2155c:	sub	sp, sp, #16
   21560:	str	r0, [fp, #-4]
   21564:	str	r1, [sp, #8]
   21568:	str	r2, [sp, #4]
   2156c:	ldr	r0, [fp, #-4]
   21570:	movw	r1, #0
   21574:	cmp	r0, r1
   21578:	bne	21588 <__assert_fail@plt+0x100f4>
   2157c:	movw	r0, #25000	; 0x61a8
   21580:	movt	r0, #5
   21584:	str	r0, [fp, #-4]
   21588:	ldr	r0, [fp, #-4]
   2158c:	movw	r1, #10
   21590:	str	r1, [r0]
   21594:	ldr	r0, [sp, #8]
   21598:	movw	r1, #0
   2159c:	cmp	r0, r1
   215a0:	beq	215b4 <__assert_fail@plt+0x10120>
   215a4:	ldr	r0, [sp, #4]
   215a8:	movw	r1, #0
   215ac:	cmp	r0, r1
   215b0:	bne	215b8 <__assert_fail@plt+0x10124>
   215b4:	bl	1147c <abort@plt>
   215b8:	ldr	r0, [sp, #8]
   215bc:	ldr	r1, [fp, #-4]
   215c0:	str	r0, [r1, #40]	; 0x28
   215c4:	ldr	r0, [sp, #4]
   215c8:	ldr	r1, [fp, #-4]
   215cc:	str	r0, [r1, #44]	; 0x2c
   215d0:	mov	sp, fp
   215d4:	pop	{fp, pc}
   215d8:	push	{r4, r5, r6, sl, fp, lr}
   215dc:	add	fp, sp, #16
   215e0:	sub	sp, sp, #64	; 0x40
   215e4:	ldr	ip, [fp, #8]
   215e8:	str	r0, [fp, #-20]	; 0xffffffec
   215ec:	str	r1, [fp, #-24]	; 0xffffffe8
   215f0:	str	r2, [fp, #-28]	; 0xffffffe4
   215f4:	str	r3, [fp, #-32]	; 0xffffffe0
   215f8:	ldr	r0, [fp, #8]
   215fc:	movw	r1, #0
   21600:	cmp	r0, r1
   21604:	str	ip, [sp, #32]
   21608:	beq	21618 <__assert_fail@plt+0x10184>
   2160c:	ldr	r0, [fp, #8]
   21610:	str	r0, [sp, #28]
   21614:	b	21628 <__assert_fail@plt+0x10194>
   21618:	movw	r0, #25000	; 0x61a8
   2161c:	movt	r0, #5
   21620:	str	r0, [sp, #28]
   21624:	b	21628 <__assert_fail@plt+0x10194>
   21628:	ldr	r0, [sp, #28]
   2162c:	str	r0, [fp, #-36]	; 0xffffffdc
   21630:	bl	113b0 <__errno_location@plt>
   21634:	ldr	r0, [r0]
   21638:	str	r0, [sp, #40]	; 0x28
   2163c:	ldr	r0, [fp, #-20]	; 0xffffffec
   21640:	ldr	r1, [fp, #-24]	; 0xffffffe8
   21644:	ldr	r2, [fp, #-28]	; 0xffffffe4
   21648:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2164c:	ldr	lr, [fp, #-36]	; 0xffffffdc
   21650:	ldr	lr, [lr]
   21654:	ldr	ip, [fp, #-36]	; 0xffffffdc
   21658:	ldr	ip, [ip, #4]
   2165c:	ldr	r4, [fp, #-36]	; 0xffffffdc
   21660:	add	r4, r4, #8
   21664:	ldr	r5, [fp, #-36]	; 0xffffffdc
   21668:	ldr	r5, [r5, #40]	; 0x28
   2166c:	ldr	r6, [fp, #-36]	; 0xffffffdc
   21670:	ldr	r6, [r6, #44]	; 0x2c
   21674:	str	lr, [sp]
   21678:	str	ip, [sp, #4]
   2167c:	str	r4, [sp, #8]
   21680:	str	r5, [sp, #12]
   21684:	str	r6, [sp, #16]
   21688:	bl	216b0 <__assert_fail@plt+0x1021c>
   2168c:	str	r0, [sp, #36]	; 0x24
   21690:	ldr	r0, [sp, #40]	; 0x28
   21694:	str	r0, [sp, #24]
   21698:	bl	113b0 <__errno_location@plt>
   2169c:	ldr	r1, [sp, #24]
   216a0:	str	r1, [r0]
   216a4:	ldr	r0, [sp, #36]	; 0x24
   216a8:	sub	sp, fp, #16
   216ac:	pop	{r4, r5, r6, sl, fp, pc}
   216b0:	push	{r4, r5, r6, sl, fp, lr}
   216b4:	add	fp, sp, #16
   216b8:	sub	sp, sp, #168	; 0xa8
   216bc:	ldr	ip, [fp, #24]
   216c0:	ldr	lr, [fp, #20]
   216c4:	ldr	r4, [fp, #16]
   216c8:	ldr	r5, [fp, #12]
   216cc:	ldr	r6, [fp, #8]
   216d0:	str	r0, [fp, #-24]	; 0xffffffe8
   216d4:	str	r1, [fp, #-28]	; 0xffffffe4
   216d8:	str	r2, [fp, #-32]	; 0xffffffe0
   216dc:	str	r3, [fp, #-36]	; 0xffffffdc
   216e0:	movw	r0, #0
   216e4:	str	r0, [fp, #-44]	; 0xffffffd4
   216e8:	str	r0, [fp, #-48]	; 0xffffffd0
   216ec:	str	r0, [fp, #-52]	; 0xffffffcc
   216f0:	str	r0, [fp, #-56]	; 0xffffffc8
   216f4:	movw	r0, #0
   216f8:	strb	r0, [fp, #-57]	; 0xffffffc7
   216fc:	str	r6, [sp, #80]	; 0x50
   21700:	str	lr, [sp, #76]	; 0x4c
   21704:	str	r4, [sp, #72]	; 0x48
   21708:	str	r5, [sp, #68]	; 0x44
   2170c:	str	ip, [sp, #64]	; 0x40
   21710:	bl	112d8 <__ctype_get_mb_cur_max@plt>
   21714:	cmp	r0, #1
   21718:	movw	r0, #0
   2171c:	moveq	r0, #1
   21720:	and	r0, r0, #1
   21724:	strb	r0, [fp, #-58]	; 0xffffffc6
   21728:	ldr	r0, [fp, #12]
   2172c:	and	r0, r0, #2
   21730:	cmp	r0, #0
   21734:	movw	r0, #0
   21738:	movne	r0, #1
   2173c:	and	r0, r0, #1
   21740:	strb	r0, [fp, #-59]	; 0xffffffc5
   21744:	movw	r0, #0
   21748:	strb	r0, [fp, #-60]	; 0xffffffc4
   2174c:	strb	r0, [fp, #-61]	; 0xffffffc3
   21750:	movw	r0, #1
   21754:	strb	r0, [fp, #-62]	; 0xffffffc2
   21758:	ldr	r0, [fp, #8]
   2175c:	cmp	r0, #10
   21760:	str	r0, [sp, #60]	; 0x3c
   21764:	bhi	2198c <__assert_fail@plt+0x104f8>
   21768:	add	r0, pc, #8
   2176c:	ldr	r1, [sp, #60]	; 0x3c
   21770:	ldr	r0, [r0, r1, lsl #2]
   21774:	mov	pc, r0
   21778:	andeq	r1, r2, r0, lsl #19
   2177c:	strdeq	r1, [r2], -ip
   21780:	andeq	r1, r2, ip, lsl r9
   21784:	strdeq	r1, [r2], -r4
   21788:	andeq	r1, r2, r4, lsl #18
   2178c:			; <UNDEFINED> instruction: 0x000217b4
   21790:	andeq	r1, r2, r4, lsr #15
   21794:	andeq	r1, r2, r8, lsl r8
   21798:	andeq	r1, r2, ip, lsr #16
   2179c:	andeq	r1, r2, ip, lsr #16
   217a0:	andeq	r1, r2, ip, lsr #16
   217a4:	movw	r0, #5
   217a8:	str	r0, [fp, #8]
   217ac:	movw	r0, #1
   217b0:	strb	r0, [fp, #-59]	; 0xffffffc5
   217b4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   217b8:	tst	r0, #1
   217bc:	bne	217f8 <__assert_fail@plt+0x10364>
   217c0:	b	217c4 <__assert_fail@plt+0x10330>
   217c4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   217c8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   217cc:	cmp	r0, r1
   217d0:	bcs	217e8 <__assert_fail@plt+0x10354>
   217d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   217d8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   217dc:	add	r0, r0, r1
   217e0:	movw	r1, #34	; 0x22
   217e4:	strb	r1, [r0]
   217e8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   217ec:	add	r0, r0, #1
   217f0:	str	r0, [fp, #-44]	; 0xffffffd4
   217f4:	b	217f8 <__assert_fail@plt+0x10364>
   217f8:	movw	r0, #1
   217fc:	strb	r0, [fp, #-57]	; 0xffffffc7
   21800:	movw	r0, #22612	; 0x5854
   21804:	movt	r0, #4
   21808:	str	r0, [fp, #-52]	; 0xffffffcc
   2180c:	movw	r0, #1
   21810:	str	r0, [fp, #-56]	; 0xffffffc8
   21814:	b	21990 <__assert_fail@plt+0x104fc>
   21818:	movw	r0, #1
   2181c:	strb	r0, [fp, #-57]	; 0xffffffc7
   21820:	movw	r0, #0
   21824:	strb	r0, [fp, #-59]	; 0xffffffc5
   21828:	b	21990 <__assert_fail@plt+0x104fc>
   2182c:	ldr	r0, [fp, #8]
   21830:	cmp	r0, #10
   21834:	beq	21860 <__assert_fail@plt+0x103cc>
   21838:	ldr	r1, [fp, #8]
   2183c:	movw	r0, #22614	; 0x5856
   21840:	movt	r0, #4
   21844:	bl	238a0 <__assert_fail@plt+0x1240c>
   21848:	str	r0, [fp, #20]
   2184c:	ldr	r1, [fp, #8]
   21850:	movw	r0, #17275	; 0x437b
   21854:	movt	r0, #4
   21858:	bl	238a0 <__assert_fail@plt+0x1240c>
   2185c:	str	r0, [fp, #24]
   21860:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   21864:	tst	r0, #1
   21868:	bne	218d4 <__assert_fail@plt+0x10440>
   2186c:	ldr	r0, [fp, #20]
   21870:	str	r0, [fp, #-52]	; 0xffffffcc
   21874:	ldr	r0, [fp, #-52]	; 0xffffffcc
   21878:	ldrsb	r0, [r0]
   2187c:	cmp	r0, #0
   21880:	beq	218d0 <__assert_fail@plt+0x1043c>
   21884:	b	21888 <__assert_fail@plt+0x103f4>
   21888:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2188c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   21890:	cmp	r0, r1
   21894:	bcs	218b0 <__assert_fail@plt+0x1041c>
   21898:	ldr	r0, [fp, #-52]	; 0xffffffcc
   2189c:	ldrb	r0, [r0]
   218a0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   218a4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   218a8:	add	r1, r1, r2
   218ac:	strb	r0, [r1]
   218b0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   218b4:	add	r0, r0, #1
   218b8:	str	r0, [fp, #-44]	; 0xffffffd4
   218bc:	b	218c0 <__assert_fail@plt+0x1042c>
   218c0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   218c4:	add	r0, r0, #1
   218c8:	str	r0, [fp, #-52]	; 0xffffffcc
   218cc:	b	21874 <__assert_fail@plt+0x103e0>
   218d0:	b	218d4 <__assert_fail@plt+0x10440>
   218d4:	movw	r0, #1
   218d8:	strb	r0, [fp, #-57]	; 0xffffffc7
   218dc:	ldr	r0, [fp, #24]
   218e0:	str	r0, [fp, #-52]	; 0xffffffcc
   218e4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   218e8:	bl	1138c <strlen@plt>
   218ec:	str	r0, [fp, #-56]	; 0xffffffc8
   218f0:	b	21990 <__assert_fail@plt+0x104fc>
   218f4:	movw	r0, #1
   218f8:	strb	r0, [fp, #-57]	; 0xffffffc7
   218fc:	movw	r0, #1
   21900:	strb	r0, [fp, #-59]	; 0xffffffc5
   21904:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   21908:	tst	r0, #1
   2190c:	bne	21918 <__assert_fail@plt+0x10484>
   21910:	movw	r0, #1
   21914:	strb	r0, [fp, #-57]	; 0xffffffc7
   21918:	b	2191c <__assert_fail@plt+0x10488>
   2191c:	movw	r0, #2
   21920:	str	r0, [fp, #8]
   21924:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   21928:	tst	r0, #1
   2192c:	bne	21968 <__assert_fail@plt+0x104d4>
   21930:	b	21934 <__assert_fail@plt+0x104a0>
   21934:	ldr	r0, [fp, #-44]	; 0xffffffd4
   21938:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2193c:	cmp	r0, r1
   21940:	bcs	21958 <__assert_fail@plt+0x104c4>
   21944:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21948:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2194c:	add	r0, r0, r1
   21950:	movw	r1, #39	; 0x27
   21954:	strb	r1, [r0]
   21958:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2195c:	add	r0, r0, #1
   21960:	str	r0, [fp, #-44]	; 0xffffffd4
   21964:	b	21968 <__assert_fail@plt+0x104d4>
   21968:	movw	r0, #17275	; 0x437b
   2196c:	movt	r0, #4
   21970:	str	r0, [fp, #-52]	; 0xffffffcc
   21974:	movw	r0, #1
   21978:	str	r0, [fp, #-56]	; 0xffffffc8
   2197c:	b	21990 <__assert_fail@plt+0x104fc>
   21980:	movw	r0, #0
   21984:	strb	r0, [fp, #-59]	; 0xffffffc5
   21988:	b	21990 <__assert_fail@plt+0x104fc>
   2198c:	bl	1147c <abort@plt>
   21990:	movw	r0, #0
   21994:	str	r0, [fp, #-40]	; 0xffffffd8
   21998:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2199c:	cmn	r0, #1
   219a0:	bne	219cc <__assert_fail@plt+0x10538>
   219a4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   219a8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   219ac:	add	r0, r0, r1
   219b0:	ldrb	r0, [r0]
   219b4:	cmp	r0, #0
   219b8:	movw	r0, #0
   219bc:	moveq	r0, #1
   219c0:	and	r0, r0, #1
   219c4:	str	r0, [sp, #56]	; 0x38
   219c8:	b	219e8 <__assert_fail@plt+0x10554>
   219cc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   219d0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   219d4:	cmp	r0, r1
   219d8:	movw	r0, #0
   219dc:	moveq	r0, #1
   219e0:	and	r0, r0, #1
   219e4:	str	r0, [sp, #56]	; 0x38
   219e8:	ldr	r0, [sp, #56]	; 0x38
   219ec:	cmp	r0, #0
   219f0:	movw	r0, #0
   219f4:	movne	r0, #1
   219f8:	mvn	r1, #0
   219fc:	eor	r0, r0, r1
   21a00:	tst	r0, #1
   21a04:	beq	22bf4 <__assert_fail@plt+0x11760>
   21a08:	movw	r0, #0
   21a0c:	strb	r0, [fp, #-65]	; 0xffffffbf
   21a10:	strb	r0, [fp, #-66]	; 0xffffffbe
   21a14:	strb	r0, [fp, #-67]	; 0xffffffbd
   21a18:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   21a1c:	tst	r0, #1
   21a20:	beq	21acc <__assert_fail@plt+0x10638>
   21a24:	ldr	r0, [fp, #8]
   21a28:	cmp	r0, #2
   21a2c:	beq	21acc <__assert_fail@plt+0x10638>
   21a30:	ldr	r0, [fp, #-56]	; 0xffffffc8
   21a34:	cmp	r0, #0
   21a38:	beq	21acc <__assert_fail@plt+0x10638>
   21a3c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   21a40:	ldr	r1, [fp, #-56]	; 0xffffffc8
   21a44:	add	r0, r0, r1
   21a48:	ldr	r1, [fp, #-36]	; 0xffffffdc
   21a4c:	cmn	r1, #1
   21a50:	str	r0, [sp, #52]	; 0x34
   21a54:	bne	21a7c <__assert_fail@plt+0x105e8>
   21a58:	ldr	r0, [fp, #-56]	; 0xffffffc8
   21a5c:	movw	r1, #1
   21a60:	cmp	r1, r0
   21a64:	bcs	21a7c <__assert_fail@plt+0x105e8>
   21a68:	ldr	r0, [fp, #-32]	; 0xffffffe0
   21a6c:	bl	1138c <strlen@plt>
   21a70:	str	r0, [fp, #-36]	; 0xffffffdc
   21a74:	str	r0, [sp, #48]	; 0x30
   21a78:	b	21a84 <__assert_fail@plt+0x105f0>
   21a7c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   21a80:	str	r0, [sp, #48]	; 0x30
   21a84:	ldr	r0, [sp, #48]	; 0x30
   21a88:	ldr	r1, [sp, #52]	; 0x34
   21a8c:	cmp	r1, r0
   21a90:	bhi	21acc <__assert_fail@plt+0x10638>
   21a94:	ldr	r0, [fp, #-32]	; 0xffffffe0
   21a98:	ldr	r1, [fp, #-40]	; 0xffffffd8
   21a9c:	add	r0, r0, r1
   21aa0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   21aa4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   21aa8:	bl	11284 <memcmp@plt>
   21aac:	cmp	r0, #0
   21ab0:	bne	21acc <__assert_fail@plt+0x10638>
   21ab4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   21ab8:	tst	r0, #1
   21abc:	beq	21ac4 <__assert_fail@plt+0x10630>
   21ac0:	b	22d74 <__assert_fail@plt+0x118e0>
   21ac4:	movw	r0, #1
   21ac8:	strb	r0, [fp, #-65]	; 0xffffffbf
   21acc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   21ad0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   21ad4:	ldrb	r0, [r0, r1]
   21ad8:	strb	r0, [fp, #-63]	; 0xffffffc1
   21adc:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   21ae0:	mov	r1, r0
   21ae4:	cmp	r0, #126	; 0x7e
   21ae8:	str	r1, [sp, #44]	; 0x2c
   21aec:	bhi	2235c <__assert_fail@plt+0x10ec8>
   21af0:	add	r0, pc, #8
   21af4:	ldr	r1, [sp, #44]	; 0x2c
   21af8:	ldr	r0, [r0, r1, lsl #2]
   21afc:	mov	pc, r0
   21b00:	strdeq	r1, [r2], -ip
   21b04:	andeq	r2, r2, ip, asr r3
   21b08:	andeq	r2, r2, ip, asr r3
   21b0c:	andeq	r2, r2, ip, asr r3
   21b10:	andeq	r2, r2, ip, asr r3
   21b14:	andeq	r2, r2, ip, asr r3
   21b18:	andeq	r2, r2, ip, asr r3
   21b1c:	andeq	r2, r2, r4, lsl #2
   21b20:	andeq	r2, r2, r0, lsl r1
   21b24:	andeq	r2, r2, r0, asr #2
   21b28:	andeq	r2, r2, r8, lsr #2
   21b2c:	andeq	r2, r2, ip, asr #2
   21b30:	andeq	r2, r2, ip, lsl r1
   21b34:	andeq	r2, r2, r4, lsr r1
   21b38:	andeq	r2, r2, ip, asr r3
   21b3c:	andeq	r2, r2, ip, asr r3
   21b40:	andeq	r2, r2, ip, asr r3
   21b44:	andeq	r2, r2, ip, asr r3
   21b48:	andeq	r2, r2, ip, asr r3
   21b4c:	andeq	r2, r2, ip, asr r3
   21b50:	andeq	r2, r2, ip, asr r3
   21b54:	andeq	r2, r2, ip, asr r3
   21b58:	andeq	r2, r2, ip, asr r3
   21b5c:	andeq	r2, r2, ip, asr r3
   21b60:	andeq	r2, r2, ip, asr r3
   21b64:	andeq	r2, r2, ip, asr r3
   21b68:	andeq	r2, r2, ip, asr r3
   21b6c:	andeq	r2, r2, ip, asr r3
   21b70:	andeq	r2, r2, ip, asr r3
   21b74:	andeq	r2, r2, ip, asr r3
   21b78:	andeq	r2, r2, ip, asr r3
   21b7c:	andeq	r2, r2, ip, asr r3
   21b80:	andeq	r2, r2, r0, lsr r2
   21b84:	andeq	r2, r2, r8, lsr r2
   21b88:	andeq	r2, r2, r8, lsr r2
   21b8c:	andeq	r2, r2, ip, lsl r2
   21b90:	andeq	r2, r2, r8, lsr r2
   21b94:	andeq	r2, r2, r0, asr r3
   21b98:	andeq	r2, r2, r8, lsr r2
   21b9c:	andeq	r2, r2, r8, asr r2
   21ba0:	andeq	r2, r2, r8, lsr r2
   21ba4:	andeq	r2, r2, r8, lsr r2
   21ba8:	andeq	r2, r2, r8, lsr r2
   21bac:	andeq	r2, r2, r0, asr r3
   21bb0:	andeq	r2, r2, r0, asr r3
   21bb4:	andeq	r2, r2, r0, asr r3
   21bb8:	andeq	r2, r2, r0, asr r3
   21bbc:	andeq	r2, r2, r0, asr r3
   21bc0:	andeq	r2, r2, r0, asr r3
   21bc4:	andeq	r2, r2, r0, asr r3
   21bc8:	andeq	r2, r2, r0, asr r3
   21bcc:	andeq	r2, r2, r0, asr r3
   21bd0:	andeq	r2, r2, r0, asr r3
   21bd4:	andeq	r2, r2, r0, asr r3
   21bd8:	andeq	r2, r2, r0, asr r3
   21bdc:	andeq	r2, r2, r0, asr r3
   21be0:	andeq	r2, r2, r0, asr r3
   21be4:	andeq	r2, r2, r0, asr r3
   21be8:	andeq	r2, r2, r0, asr r3
   21bec:	andeq	r2, r2, r8, lsr r2
   21bf0:	andeq	r2, r2, r8, lsr r2
   21bf4:	andeq	r2, r2, r8, lsr r2
   21bf8:	andeq	r2, r2, r8, lsr r2
   21bfc:	andeq	r1, r2, r8, lsl #30
   21c00:	andeq	r2, r2, ip, asr r3
   21c04:	andeq	r2, r2, r0, asr r3
   21c08:	andeq	r2, r2, r0, asr r3
   21c0c:	andeq	r2, r2, r0, asr r3
   21c10:	andeq	r2, r2, r0, asr r3
   21c14:	andeq	r2, r2, r0, asr r3
   21c18:	andeq	r2, r2, r0, asr r3
   21c1c:	andeq	r2, r2, r0, asr r3
   21c20:	andeq	r2, r2, r0, asr r3
   21c24:	andeq	r2, r2, r0, asr r3
   21c28:	andeq	r2, r2, r0, asr r3
   21c2c:	andeq	r2, r2, r0, asr r3
   21c30:	andeq	r2, r2, r0, asr r3
   21c34:	andeq	r2, r2, r0, asr r3
   21c38:	andeq	r2, r2, r0, asr r3
   21c3c:	andeq	r2, r2, r0, asr r3
   21c40:	andeq	r2, r2, r0, asr r3
   21c44:	andeq	r2, r2, r0, asr r3
   21c48:	andeq	r2, r2, r0, asr r3
   21c4c:	andeq	r2, r2, r0, asr r3
   21c50:	andeq	r2, r2, r0, asr r3
   21c54:	andeq	r2, r2, r0, asr r3
   21c58:	andeq	r2, r2, r0, asr r3
   21c5c:	andeq	r2, r2, r0, asr r3
   21c60:	andeq	r2, r2, r0, asr r3
   21c64:	andeq	r2, r2, r0, asr r3
   21c68:	andeq	r2, r2, r0, asr r3
   21c6c:	andeq	r2, r2, r8, lsr r2
   21c70:	andeq	r2, r2, r8, asr r1
   21c74:	andeq	r2, r2, r0, asr r3
   21c78:	andeq	r2, r2, r8, lsr r2
   21c7c:	andeq	r2, r2, r0, asr r3
   21c80:	andeq	r2, r2, r8, lsr r2
   21c84:	andeq	r2, r2, r0, asr r3
   21c88:	andeq	r2, r2, r0, asr r3
   21c8c:	andeq	r2, r2, r0, asr r3
   21c90:	andeq	r2, r2, r0, asr r3
   21c94:	andeq	r2, r2, r0, asr r3
   21c98:	andeq	r2, r2, r0, asr r3
   21c9c:	andeq	r2, r2, r0, asr r3
   21ca0:	andeq	r2, r2, r0, asr r3
   21ca4:	andeq	r2, r2, r0, asr r3
   21ca8:	andeq	r2, r2, r0, asr r3
   21cac:	andeq	r2, r2, r0, asr r3
   21cb0:	andeq	r2, r2, r0, asr r3
   21cb4:	andeq	r2, r2, r0, asr r3
   21cb8:	andeq	r2, r2, r0, asr r3
   21cbc:	andeq	r2, r2, r0, asr r3
   21cc0:	andeq	r2, r2, r0, asr r3
   21cc4:	andeq	r2, r2, r0, asr r3
   21cc8:	andeq	r2, r2, r0, asr r3
   21ccc:	andeq	r2, r2, r0, asr r3
   21cd0:	andeq	r2, r2, r0, asr r3
   21cd4:	andeq	r2, r2, r0, asr r3
   21cd8:	andeq	r2, r2, r0, asr r3
   21cdc:	andeq	r2, r2, r0, asr r3
   21ce0:	andeq	r2, r2, r0, asr r3
   21ce4:	andeq	r2, r2, r0, asr r3
   21ce8:	andeq	r2, r2, r0, asr r3
   21cec:	andeq	r2, r2, r8, ror #3
   21cf0:	andeq	r2, r2, r8, lsr r2
   21cf4:	andeq	r2, r2, r8, ror #3
   21cf8:	andeq	r2, r2, ip, lsl r2
   21cfc:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   21d00:	tst	r0, #1
   21d04:	beq	21eec <__assert_fail@plt+0x10a58>
   21d08:	b	21d0c <__assert_fail@plt+0x10878>
   21d0c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   21d10:	tst	r0, #1
   21d14:	beq	21d1c <__assert_fail@plt+0x10888>
   21d18:	b	22d74 <__assert_fail@plt+0x118e0>
   21d1c:	movw	r0, #1
   21d20:	strb	r0, [fp, #-66]	; 0xffffffbe
   21d24:	ldr	r0, [fp, #8]
   21d28:	cmp	r0, #2
   21d2c:	bne	21de0 <__assert_fail@plt+0x1094c>
   21d30:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   21d34:	tst	r0, #1
   21d38:	bne	21de0 <__assert_fail@plt+0x1094c>
   21d3c:	b	21d40 <__assert_fail@plt+0x108ac>
   21d40:	ldr	r0, [fp, #-44]	; 0xffffffd4
   21d44:	ldr	r1, [fp, #-28]	; 0xffffffe4
   21d48:	cmp	r0, r1
   21d4c:	bcs	21d64 <__assert_fail@plt+0x108d0>
   21d50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21d54:	ldr	r1, [fp, #-44]	; 0xffffffd4
   21d58:	add	r0, r0, r1
   21d5c:	movw	r1, #39	; 0x27
   21d60:	strb	r1, [r0]
   21d64:	ldr	r0, [fp, #-44]	; 0xffffffd4
   21d68:	add	r0, r0, #1
   21d6c:	str	r0, [fp, #-44]	; 0xffffffd4
   21d70:	b	21d74 <__assert_fail@plt+0x108e0>
   21d74:	ldr	r0, [fp, #-44]	; 0xffffffd4
   21d78:	ldr	r1, [fp, #-28]	; 0xffffffe4
   21d7c:	cmp	r0, r1
   21d80:	bcs	21d98 <__assert_fail@plt+0x10904>
   21d84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21d88:	ldr	r1, [fp, #-44]	; 0xffffffd4
   21d8c:	add	r0, r0, r1
   21d90:	movw	r1, #36	; 0x24
   21d94:	strb	r1, [r0]
   21d98:	ldr	r0, [fp, #-44]	; 0xffffffd4
   21d9c:	add	r0, r0, #1
   21da0:	str	r0, [fp, #-44]	; 0xffffffd4
   21da4:	b	21da8 <__assert_fail@plt+0x10914>
   21da8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   21dac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   21db0:	cmp	r0, r1
   21db4:	bcs	21dcc <__assert_fail@plt+0x10938>
   21db8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21dbc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   21dc0:	add	r0, r0, r1
   21dc4:	movw	r1, #39	; 0x27
   21dc8:	strb	r1, [r0]
   21dcc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   21dd0:	add	r0, r0, #1
   21dd4:	str	r0, [fp, #-44]	; 0xffffffd4
   21dd8:	movw	r0, #1
   21ddc:	strb	r0, [fp, #-60]	; 0xffffffc4
   21de0:	b	21de4 <__assert_fail@plt+0x10950>
   21de4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   21de8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   21dec:	cmp	r0, r1
   21df0:	bcs	21e08 <__assert_fail@plt+0x10974>
   21df4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21df8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   21dfc:	add	r0, r0, r1
   21e00:	movw	r1, #92	; 0x5c
   21e04:	strb	r1, [r0]
   21e08:	ldr	r0, [fp, #-44]	; 0xffffffd4
   21e0c:	add	r0, r0, #1
   21e10:	str	r0, [fp, #-44]	; 0xffffffd4
   21e14:	b	21e18 <__assert_fail@plt+0x10984>
   21e18:	ldr	r0, [fp, #8]
   21e1c:	cmp	r0, #2
   21e20:	beq	21ee0 <__assert_fail@plt+0x10a4c>
   21e24:	ldr	r0, [fp, #-40]	; 0xffffffd8
   21e28:	add	r0, r0, #1
   21e2c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   21e30:	cmp	r0, r1
   21e34:	bcs	21ee0 <__assert_fail@plt+0x10a4c>
   21e38:	ldr	r0, [fp, #-32]	; 0xffffffe0
   21e3c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   21e40:	add	r1, r1, #1
   21e44:	add	r0, r0, r1
   21e48:	ldrb	r0, [r0]
   21e4c:	movw	r1, #48	; 0x30
   21e50:	cmp	r1, r0
   21e54:	bgt	21ee0 <__assert_fail@plt+0x10a4c>
   21e58:	ldr	r0, [fp, #-32]	; 0xffffffe0
   21e5c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   21e60:	add	r1, r1, #1
   21e64:	add	r0, r0, r1
   21e68:	ldrb	r0, [r0]
   21e6c:	cmp	r0, #57	; 0x39
   21e70:	bgt	21ee0 <__assert_fail@plt+0x10a4c>
   21e74:	b	21e78 <__assert_fail@plt+0x109e4>
   21e78:	ldr	r0, [fp, #-44]	; 0xffffffd4
   21e7c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   21e80:	cmp	r0, r1
   21e84:	bcs	21e9c <__assert_fail@plt+0x10a08>
   21e88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21e8c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   21e90:	add	r0, r0, r1
   21e94:	movw	r1, #48	; 0x30
   21e98:	strb	r1, [r0]
   21e9c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   21ea0:	add	r0, r0, #1
   21ea4:	str	r0, [fp, #-44]	; 0xffffffd4
   21ea8:	b	21eac <__assert_fail@plt+0x10a18>
   21eac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   21eb0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   21eb4:	cmp	r0, r1
   21eb8:	bcs	21ed0 <__assert_fail@plt+0x10a3c>
   21ebc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21ec0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   21ec4:	add	r0, r0, r1
   21ec8:	movw	r1, #48	; 0x30
   21ecc:	strb	r1, [r0]
   21ed0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   21ed4:	add	r0, r0, #1
   21ed8:	str	r0, [fp, #-44]	; 0xffffffd4
   21edc:	b	21ee0 <__assert_fail@plt+0x10a4c>
   21ee0:	movw	r0, #48	; 0x30
   21ee4:	strb	r0, [fp, #-63]	; 0xffffffc1
   21ee8:	b	21f04 <__assert_fail@plt+0x10a70>
   21eec:	ldr	r0, [fp, #12]
   21ef0:	and	r0, r0, #1
   21ef4:	cmp	r0, #0
   21ef8:	beq	21f00 <__assert_fail@plt+0x10a6c>
   21efc:	b	22be4 <__assert_fail@plt+0x11750>
   21f00:	b	21f04 <__assert_fail@plt+0x10a70>
   21f04:	b	22980 <__assert_fail@plt+0x114ec>
   21f08:	ldr	r0, [fp, #8]
   21f0c:	cmp	r0, #2
   21f10:	str	r0, [sp, #40]	; 0x28
   21f14:	beq	21f2c <__assert_fail@plt+0x10a98>
   21f18:	b	21f1c <__assert_fail@plt+0x10a88>
   21f1c:	ldr	r0, [sp, #40]	; 0x28
   21f20:	cmp	r0, #5
   21f24:	beq	21f40 <__assert_fail@plt+0x10aac>
   21f28:	b	220fc <__assert_fail@plt+0x10c68>
   21f2c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   21f30:	tst	r0, #1
   21f34:	beq	21f3c <__assert_fail@plt+0x10aa8>
   21f38:	b	22d74 <__assert_fail@plt+0x118e0>
   21f3c:	b	22100 <__assert_fail@plt+0x10c6c>
   21f40:	ldr	r0, [fp, #12]
   21f44:	and	r0, r0, #4
   21f48:	cmp	r0, #0
   21f4c:	beq	220f8 <__assert_fail@plt+0x10c64>
   21f50:	ldr	r0, [fp, #-40]	; 0xffffffd8
   21f54:	add	r0, r0, #2
   21f58:	ldr	r1, [fp, #-36]	; 0xffffffdc
   21f5c:	cmp	r0, r1
   21f60:	bcs	220f8 <__assert_fail@plt+0x10c64>
   21f64:	ldr	r0, [fp, #-32]	; 0xffffffe0
   21f68:	ldr	r1, [fp, #-40]	; 0xffffffd8
   21f6c:	add	r1, r1, #1
   21f70:	add	r0, r0, r1
   21f74:	ldrb	r0, [r0]
   21f78:	cmp	r0, #63	; 0x3f
   21f7c:	bne	220f8 <__assert_fail@plt+0x10c64>
   21f80:	ldr	r0, [fp, #-32]	; 0xffffffe0
   21f84:	ldr	r1, [fp, #-40]	; 0xffffffd8
   21f88:	add	r0, r0, r1
   21f8c:	ldrb	r0, [r0, #2]
   21f90:	mov	r1, r0
   21f94:	cmp	r0, #33	; 0x21
   21f98:	str	r1, [sp, #36]	; 0x24
   21f9c:	beq	21fec <__assert_fail@plt+0x10b58>
   21fa0:	b	21fa4 <__assert_fail@plt+0x10b10>
   21fa4:	ldr	r0, [sp, #36]	; 0x24
   21fa8:	sub	r1, r0, #39	; 0x27
   21fac:	cmp	r1, #3
   21fb0:	bcc	21fec <__assert_fail@plt+0x10b58>
   21fb4:	b	21fb8 <__assert_fail@plt+0x10b24>
   21fb8:	ldr	r0, [sp, #36]	; 0x24
   21fbc:	cmp	r0, #45	; 0x2d
   21fc0:	beq	21fec <__assert_fail@plt+0x10b58>
   21fc4:	b	21fc8 <__assert_fail@plt+0x10b34>
   21fc8:	ldr	r0, [sp, #36]	; 0x24
   21fcc:	cmp	r0, #47	; 0x2f
   21fd0:	beq	21fec <__assert_fail@plt+0x10b58>
   21fd4:	b	21fd8 <__assert_fail@plt+0x10b44>
   21fd8:	ldr	r0, [sp, #36]	; 0x24
   21fdc:	sub	r1, r0, #60	; 0x3c
   21fe0:	cmp	r1, #2
   21fe4:	bhi	220f0 <__assert_fail@plt+0x10c5c>
   21fe8:	b	21fec <__assert_fail@plt+0x10b58>
   21fec:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   21ff0:	tst	r0, #1
   21ff4:	beq	21ffc <__assert_fail@plt+0x10b68>
   21ff8:	b	22d74 <__assert_fail@plt+0x118e0>
   21ffc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   22000:	ldr	r1, [fp, #-40]	; 0xffffffd8
   22004:	add	r1, r1, #2
   22008:	add	r0, r0, r1
   2200c:	ldrb	r0, [r0]
   22010:	strb	r0, [fp, #-63]	; 0xffffffc1
   22014:	ldr	r0, [fp, #-40]	; 0xffffffd8
   22018:	add	r0, r0, #2
   2201c:	str	r0, [fp, #-40]	; 0xffffffd8
   22020:	ldr	r0, [fp, #-44]	; 0xffffffd4
   22024:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22028:	cmp	r0, r1
   2202c:	bcs	22044 <__assert_fail@plt+0x10bb0>
   22030:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22034:	ldr	r1, [fp, #-44]	; 0xffffffd4
   22038:	add	r0, r0, r1
   2203c:	movw	r1, #63	; 0x3f
   22040:	strb	r1, [r0]
   22044:	ldr	r0, [fp, #-44]	; 0xffffffd4
   22048:	add	r0, r0, #1
   2204c:	str	r0, [fp, #-44]	; 0xffffffd4
   22050:	b	22054 <__assert_fail@plt+0x10bc0>
   22054:	ldr	r0, [fp, #-44]	; 0xffffffd4
   22058:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2205c:	cmp	r0, r1
   22060:	bcs	22078 <__assert_fail@plt+0x10be4>
   22064:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22068:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2206c:	add	r0, r0, r1
   22070:	movw	r1, #34	; 0x22
   22074:	strb	r1, [r0]
   22078:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2207c:	add	r0, r0, #1
   22080:	str	r0, [fp, #-44]	; 0xffffffd4
   22084:	b	22088 <__assert_fail@plt+0x10bf4>
   22088:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2208c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22090:	cmp	r0, r1
   22094:	bcs	220ac <__assert_fail@plt+0x10c18>
   22098:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2209c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   220a0:	add	r0, r0, r1
   220a4:	movw	r1, #34	; 0x22
   220a8:	strb	r1, [r0]
   220ac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   220b0:	add	r0, r0, #1
   220b4:	str	r0, [fp, #-44]	; 0xffffffd4
   220b8:	b	220bc <__assert_fail@plt+0x10c28>
   220bc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   220c0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   220c4:	cmp	r0, r1
   220c8:	bcs	220e0 <__assert_fail@plt+0x10c4c>
   220cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   220d0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   220d4:	add	r0, r0, r1
   220d8:	movw	r1, #63	; 0x3f
   220dc:	strb	r1, [r0]
   220e0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   220e4:	add	r0, r0, #1
   220e8:	str	r0, [fp, #-44]	; 0xffffffd4
   220ec:	b	220f4 <__assert_fail@plt+0x10c60>
   220f0:	b	220f4 <__assert_fail@plt+0x10c60>
   220f4:	b	220f8 <__assert_fail@plt+0x10c64>
   220f8:	b	22100 <__assert_fail@plt+0x10c6c>
   220fc:	b	22100 <__assert_fail@plt+0x10c6c>
   22100:	b	22980 <__assert_fail@plt+0x114ec>
   22104:	movw	r0, #97	; 0x61
   22108:	strb	r0, [fp, #-64]	; 0xffffffc0
   2210c:	b	221cc <__assert_fail@plt+0x10d38>
   22110:	movw	r0, #98	; 0x62
   22114:	strb	r0, [fp, #-64]	; 0xffffffc0
   22118:	b	221cc <__assert_fail@plt+0x10d38>
   2211c:	movw	r0, #102	; 0x66
   22120:	strb	r0, [fp, #-64]	; 0xffffffc0
   22124:	b	221cc <__assert_fail@plt+0x10d38>
   22128:	movw	r0, #110	; 0x6e
   2212c:	strb	r0, [fp, #-64]	; 0xffffffc0
   22130:	b	221ac <__assert_fail@plt+0x10d18>
   22134:	movw	r0, #114	; 0x72
   22138:	strb	r0, [fp, #-64]	; 0xffffffc0
   2213c:	b	221ac <__assert_fail@plt+0x10d18>
   22140:	movw	r0, #116	; 0x74
   22144:	strb	r0, [fp, #-64]	; 0xffffffc0
   22148:	b	221ac <__assert_fail@plt+0x10d18>
   2214c:	movw	r0, #118	; 0x76
   22150:	strb	r0, [fp, #-64]	; 0xffffffc0
   22154:	b	221cc <__assert_fail@plt+0x10d38>
   22158:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   2215c:	strb	r0, [fp, #-64]	; 0xffffffc0
   22160:	ldr	r0, [fp, #8]
   22164:	cmp	r0, #2
   22168:	bne	22180 <__assert_fail@plt+0x10cec>
   2216c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   22170:	tst	r0, #1
   22174:	beq	2217c <__assert_fail@plt+0x10ce8>
   22178:	b	22d74 <__assert_fail@plt+0x118e0>
   2217c:	b	22b08 <__assert_fail@plt+0x11674>
   22180:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   22184:	tst	r0, #1
   22188:	beq	221a8 <__assert_fail@plt+0x10d14>
   2218c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   22190:	tst	r0, #1
   22194:	beq	221a8 <__assert_fail@plt+0x10d14>
   22198:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2219c:	cmp	r0, #0
   221a0:	beq	221a8 <__assert_fail@plt+0x10d14>
   221a4:	b	22b08 <__assert_fail@plt+0x11674>
   221a8:	b	221ac <__assert_fail@plt+0x10d18>
   221ac:	ldr	r0, [fp, #8]
   221b0:	cmp	r0, #2
   221b4:	bne	221c8 <__assert_fail@plt+0x10d34>
   221b8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   221bc:	tst	r0, #1
   221c0:	beq	221c8 <__assert_fail@plt+0x10d34>
   221c4:	b	22d74 <__assert_fail@plt+0x118e0>
   221c8:	b	221cc <__assert_fail@plt+0x10d38>
   221cc:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   221d0:	tst	r0, #1
   221d4:	beq	221e4 <__assert_fail@plt+0x10d50>
   221d8:	ldrb	r0, [fp, #-64]	; 0xffffffc0
   221dc:	strb	r0, [fp, #-63]	; 0xffffffc1
   221e0:	b	229f4 <__assert_fail@plt+0x11560>
   221e4:	b	22980 <__assert_fail@plt+0x114ec>
   221e8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   221ec:	cmn	r0, #1
   221f0:	bne	22208 <__assert_fail@plt+0x10d74>
   221f4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   221f8:	ldrb	r0, [r0, #1]
   221fc:	cmp	r0, #0
   22200:	beq	22218 <__assert_fail@plt+0x10d84>
   22204:	b	22214 <__assert_fail@plt+0x10d80>
   22208:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2220c:	cmp	r0, #1
   22210:	beq	22218 <__assert_fail@plt+0x10d84>
   22214:	b	22980 <__assert_fail@plt+0x114ec>
   22218:	b	2221c <__assert_fail@plt+0x10d88>
   2221c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   22220:	cmp	r0, #0
   22224:	beq	2222c <__assert_fail@plt+0x10d98>
   22228:	b	22980 <__assert_fail@plt+0x114ec>
   2222c:	b	22230 <__assert_fail@plt+0x10d9c>
   22230:	movw	r0, #1
   22234:	strb	r0, [fp, #-67]	; 0xffffffbd
   22238:	ldr	r0, [fp, #8]
   2223c:	cmp	r0, #2
   22240:	bne	22254 <__assert_fail@plt+0x10dc0>
   22244:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   22248:	tst	r0, #1
   2224c:	beq	22254 <__assert_fail@plt+0x10dc0>
   22250:	b	22d74 <__assert_fail@plt+0x118e0>
   22254:	b	22980 <__assert_fail@plt+0x114ec>
   22258:	movw	r0, #1
   2225c:	strb	r0, [fp, #-61]	; 0xffffffc3
   22260:	strb	r0, [fp, #-67]	; 0xffffffbd
   22264:	ldr	r0, [fp, #8]
   22268:	cmp	r0, #2
   2226c:	bne	2234c <__assert_fail@plt+0x10eb8>
   22270:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   22274:	tst	r0, #1
   22278:	beq	22280 <__assert_fail@plt+0x10dec>
   2227c:	b	22d74 <__assert_fail@plt+0x118e0>
   22280:	ldr	r0, [fp, #-28]	; 0xffffffe4
   22284:	cmp	r0, #0
   22288:	beq	222a8 <__assert_fail@plt+0x10e14>
   2228c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   22290:	cmp	r0, #0
   22294:	bne	222a8 <__assert_fail@plt+0x10e14>
   22298:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2229c:	str	r0, [fp, #-48]	; 0xffffffd0
   222a0:	movw	r0, #0
   222a4:	str	r0, [fp, #-28]	; 0xffffffe4
   222a8:	b	222ac <__assert_fail@plt+0x10e18>
   222ac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   222b0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   222b4:	cmp	r0, r1
   222b8:	bcs	222d0 <__assert_fail@plt+0x10e3c>
   222bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   222c0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   222c4:	add	r0, r0, r1
   222c8:	movw	r1, #39	; 0x27
   222cc:	strb	r1, [r0]
   222d0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   222d4:	add	r0, r0, #1
   222d8:	str	r0, [fp, #-44]	; 0xffffffd4
   222dc:	b	222e0 <__assert_fail@plt+0x10e4c>
   222e0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   222e4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   222e8:	cmp	r0, r1
   222ec:	bcs	22304 <__assert_fail@plt+0x10e70>
   222f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   222f4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   222f8:	add	r0, r0, r1
   222fc:	movw	r1, #92	; 0x5c
   22300:	strb	r1, [r0]
   22304:	ldr	r0, [fp, #-44]	; 0xffffffd4
   22308:	add	r0, r0, #1
   2230c:	str	r0, [fp, #-44]	; 0xffffffd4
   22310:	b	22314 <__assert_fail@plt+0x10e80>
   22314:	ldr	r0, [fp, #-44]	; 0xffffffd4
   22318:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2231c:	cmp	r0, r1
   22320:	bcs	22338 <__assert_fail@plt+0x10ea4>
   22324:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22328:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2232c:	add	r0, r0, r1
   22330:	movw	r1, #39	; 0x27
   22334:	strb	r1, [r0]
   22338:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2233c:	add	r0, r0, #1
   22340:	str	r0, [fp, #-44]	; 0xffffffd4
   22344:	movw	r0, #0
   22348:	strb	r0, [fp, #-60]	; 0xffffffc4
   2234c:	b	22980 <__assert_fail@plt+0x114ec>
   22350:	movw	r0, #1
   22354:	strb	r0, [fp, #-67]	; 0xffffffbd
   22358:	b	22980 <__assert_fail@plt+0x114ec>
   2235c:	ldrb	r0, [fp, #-58]	; 0xffffffc6
   22360:	tst	r0, #1
   22364:	beq	223a8 <__assert_fail@plt+0x10f14>
   22368:	mov	r0, #1
   2236c:	str	r0, [fp, #-72]	; 0xffffffb8
   22370:	bl	11368 <__ctype_b_loc@plt>
   22374:	ldr	r0, [r0]
   22378:	ldrb	lr, [fp, #-63]	; 0xffffffc1
   2237c:	mov	r1, lr
   22380:	add	r0, r0, lr, lsl #1
   22384:	ldrh	r0, [r0]
   22388:	and	r0, r0, #16384	; 0x4000
   2238c:	cmp	r0, #0
   22390:	movw	r0, #0
   22394:	movne	r0, #1
   22398:	and	r0, r0, #1
   2239c:	strb	r0, [fp, #-73]	; 0xffffffb7
   223a0:	str	r1, [sp, #32]
   223a4:	b	22634 <__assert_fail@plt+0x111a0>
   223a8:	sub	r0, fp, #84	; 0x54
   223ac:	movw	r1, #0
   223b0:	and	r1, r1, #255	; 0xff
   223b4:	movw	r2, #8
   223b8:	bl	113d4 <memset@plt>
   223bc:	movw	r0, #0
   223c0:	str	r0, [fp, #-72]	; 0xffffffb8
   223c4:	movw	r0, #1
   223c8:	strb	r0, [fp, #-73]	; 0xffffffb7
   223cc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   223d0:	cmn	r0, #1
   223d4:	bne	223e4 <__assert_fail@plt+0x10f50>
   223d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   223dc:	bl	1138c <strlen@plt>
   223e0:	str	r0, [fp, #-36]	; 0xffffffdc
   223e4:	b	223e8 <__assert_fail@plt+0x10f54>
   223e8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   223ec:	ldr	r1, [fp, #-40]	; 0xffffffd8
   223f0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   223f4:	add	r1, r1, r2
   223f8:	add	r1, r0, r1
   223fc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   22400:	ldr	r2, [fp, #-40]	; 0xffffffd8
   22404:	ldr	r3, [fp, #-72]	; 0xffffffb8
   22408:	add	r2, r2, r3
   2240c:	sub	r2, r0, r2
   22410:	sub	r0, fp, #88	; 0x58
   22414:	sub	r3, fp, #84	; 0x54
   22418:	bl	4193c <__assert_fail@plt+0x304a8>
   2241c:	str	r0, [sp, #92]	; 0x5c
   22420:	ldr	r0, [sp, #92]	; 0x5c
   22424:	cmp	r0, #0
   22428:	bne	22430 <__assert_fail@plt+0x10f9c>
   2242c:	b	22630 <__assert_fail@plt+0x1119c>
   22430:	ldr	r0, [sp, #92]	; 0x5c
   22434:	cmn	r0, #1
   22438:	bne	22448 <__assert_fail@plt+0x10fb4>
   2243c:	movw	r0, #0
   22440:	strb	r0, [fp, #-73]	; 0xffffffb7
   22444:	b	22630 <__assert_fail@plt+0x1119c>
   22448:	ldr	r0, [sp, #92]	; 0x5c
   2244c:	cmn	r0, #2
   22450:	bne	224c4 <__assert_fail@plt+0x11030>
   22454:	movw	r0, #0
   22458:	strb	r0, [fp, #-73]	; 0xffffffb7
   2245c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   22460:	ldr	r1, [fp, #-72]	; 0xffffffb8
   22464:	add	r0, r0, r1
   22468:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2246c:	cmp	r0, r1
   22470:	movw	r0, #0
   22474:	str	r0, [sp, #28]
   22478:	bcs	224a4 <__assert_fail@plt+0x11010>
   2247c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   22480:	ldr	r1, [fp, #-40]	; 0xffffffd8
   22484:	ldr	r2, [fp, #-72]	; 0xffffffb8
   22488:	add	r1, r1, r2
   2248c:	add	r0, r0, r1
   22490:	ldrb	r0, [r0]
   22494:	cmp	r0, #0
   22498:	movw	r0, #0
   2249c:	movne	r0, #1
   224a0:	str	r0, [sp, #28]
   224a4:	ldr	r0, [sp, #28]
   224a8:	tst	r0, #1
   224ac:	beq	224c0 <__assert_fail@plt+0x1102c>
   224b0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   224b4:	add	r0, r0, #1
   224b8:	str	r0, [fp, #-72]	; 0xffffffb8
   224bc:	b	2245c <__assert_fail@plt+0x10fc8>
   224c0:	b	22630 <__assert_fail@plt+0x1119c>
   224c4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   224c8:	tst	r0, #1
   224cc:	beq	225d8 <__assert_fail@plt+0x11144>
   224d0:	ldr	r0, [fp, #8]
   224d4:	cmp	r0, #2
   224d8:	bne	225d8 <__assert_fail@plt+0x11144>
   224dc:	movw	r0, #1
   224e0:	str	r0, [sp, #88]	; 0x58
   224e4:	ldr	r0, [sp, #88]	; 0x58
   224e8:	ldr	r1, [sp, #92]	; 0x5c
   224ec:	cmp	r0, r1
   224f0:	bcs	225d4 <__assert_fail@plt+0x11140>
   224f4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   224f8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   224fc:	ldr	r2, [fp, #-72]	; 0xffffffb8
   22500:	add	r1, r1, r2
   22504:	ldr	r2, [sp, #88]	; 0x58
   22508:	add	r1, r1, r2
   2250c:	ldrb	r0, [r0, r1]
   22510:	sub	r0, r0, #91	; 0x5b
   22514:	cmp	r0, #33	; 0x21
   22518:	str	r0, [sp, #24]
   2251c:	bhi	225bc <__assert_fail@plt+0x11128>
   22520:	add	r0, pc, #8
   22524:	ldr	r1, [sp, #24]
   22528:	ldr	r0, [r0, r1, lsl #2]
   2252c:	mov	pc, r0
   22530:			; <UNDEFINED> instruction: 0x000225b8
   22534:			; <UNDEFINED> instruction: 0x000225b8
   22538:			; <UNDEFINED> instruction: 0x000225bc
   2253c:			; <UNDEFINED> instruction: 0x000225b8
   22540:			; <UNDEFINED> instruction: 0x000225bc
   22544:			; <UNDEFINED> instruction: 0x000225b8
   22548:			; <UNDEFINED> instruction: 0x000225bc
   2254c:			; <UNDEFINED> instruction: 0x000225bc
   22550:			; <UNDEFINED> instruction: 0x000225bc
   22554:			; <UNDEFINED> instruction: 0x000225bc
   22558:			; <UNDEFINED> instruction: 0x000225bc
   2255c:			; <UNDEFINED> instruction: 0x000225bc
   22560:			; <UNDEFINED> instruction: 0x000225bc
   22564:			; <UNDEFINED> instruction: 0x000225bc
   22568:			; <UNDEFINED> instruction: 0x000225bc
   2256c:			; <UNDEFINED> instruction: 0x000225bc
   22570:			; <UNDEFINED> instruction: 0x000225bc
   22574:			; <UNDEFINED> instruction: 0x000225bc
   22578:			; <UNDEFINED> instruction: 0x000225bc
   2257c:			; <UNDEFINED> instruction: 0x000225bc
   22580:			; <UNDEFINED> instruction: 0x000225bc
   22584:			; <UNDEFINED> instruction: 0x000225bc
   22588:			; <UNDEFINED> instruction: 0x000225bc
   2258c:			; <UNDEFINED> instruction: 0x000225bc
   22590:			; <UNDEFINED> instruction: 0x000225bc
   22594:			; <UNDEFINED> instruction: 0x000225bc
   22598:			; <UNDEFINED> instruction: 0x000225bc
   2259c:			; <UNDEFINED> instruction: 0x000225bc
   225a0:			; <UNDEFINED> instruction: 0x000225bc
   225a4:			; <UNDEFINED> instruction: 0x000225bc
   225a8:			; <UNDEFINED> instruction: 0x000225bc
   225ac:			; <UNDEFINED> instruction: 0x000225bc
   225b0:			; <UNDEFINED> instruction: 0x000225bc
   225b4:			; <UNDEFINED> instruction: 0x000225b8
   225b8:	b	22d74 <__assert_fail@plt+0x118e0>
   225bc:	b	225c0 <__assert_fail@plt+0x1112c>
   225c0:	b	225c4 <__assert_fail@plt+0x11130>
   225c4:	ldr	r0, [sp, #88]	; 0x58
   225c8:	add	r0, r0, #1
   225cc:	str	r0, [sp, #88]	; 0x58
   225d0:	b	224e4 <__assert_fail@plt+0x11050>
   225d4:	b	225d8 <__assert_fail@plt+0x11144>
   225d8:	ldr	r0, [fp, #-88]	; 0xffffffa8
   225dc:	bl	112b4 <iswprint@plt>
   225e0:	cmp	r0, #0
   225e4:	bne	225f0 <__assert_fail@plt+0x1115c>
   225e8:	movw	r0, #0
   225ec:	strb	r0, [fp, #-73]	; 0xffffffb7
   225f0:	ldr	r0, [sp, #92]	; 0x5c
   225f4:	ldr	r1, [fp, #-72]	; 0xffffffb8
   225f8:	add	r0, r1, r0
   225fc:	str	r0, [fp, #-72]	; 0xffffffb8
   22600:	b	22604 <__assert_fail@plt+0x11170>
   22604:	b	22608 <__assert_fail@plt+0x11174>
   22608:	b	2260c <__assert_fail@plt+0x11178>
   2260c:	sub	r0, fp, #84	; 0x54
   22610:	bl	11278 <mbsinit@plt>
   22614:	cmp	r0, #0
   22618:	movw	r0, #0
   2261c:	movne	r0, #1
   22620:	mvn	lr, #0
   22624:	eor	r0, r0, lr
   22628:	tst	r0, #1
   2262c:	bne	223e8 <__assert_fail@plt+0x10f54>
   22630:	b	22634 <__assert_fail@plt+0x111a0>
   22634:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   22638:	and	r0, r0, #1
   2263c:	strb	r0, [fp, #-67]	; 0xffffffbd
   22640:	ldr	r0, [fp, #-72]	; 0xffffffb8
   22644:	movw	r1, #1
   22648:	cmp	r1, r0
   2264c:	bcc	22668 <__assert_fail@plt+0x111d4>
   22650:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   22654:	tst	r0, #1
   22658:	beq	2297c <__assert_fail@plt+0x114e8>
   2265c:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   22660:	tst	r0, #1
   22664:	bne	2297c <__assert_fail@plt+0x114e8>
   22668:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2266c:	ldr	r1, [fp, #-72]	; 0xffffffb8
   22670:	add	r0, r0, r1
   22674:	str	r0, [sp, #84]	; 0x54
   22678:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   2267c:	tst	r0, #1
   22680:	beq	22830 <__assert_fail@plt+0x1139c>
   22684:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   22688:	tst	r0, #1
   2268c:	bne	22830 <__assert_fail@plt+0x1139c>
   22690:	b	22694 <__assert_fail@plt+0x11200>
   22694:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   22698:	tst	r0, #1
   2269c:	beq	226a4 <__assert_fail@plt+0x11210>
   226a0:	b	22d74 <__assert_fail@plt+0x118e0>
   226a4:	movw	r0, #1
   226a8:	strb	r0, [fp, #-66]	; 0xffffffbe
   226ac:	ldr	r0, [fp, #8]
   226b0:	cmp	r0, #2
   226b4:	bne	22768 <__assert_fail@plt+0x112d4>
   226b8:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   226bc:	tst	r0, #1
   226c0:	bne	22768 <__assert_fail@plt+0x112d4>
   226c4:	b	226c8 <__assert_fail@plt+0x11234>
   226c8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   226cc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   226d0:	cmp	r0, r1
   226d4:	bcs	226ec <__assert_fail@plt+0x11258>
   226d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   226dc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   226e0:	add	r0, r0, r1
   226e4:	movw	r1, #39	; 0x27
   226e8:	strb	r1, [r0]
   226ec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   226f0:	add	r0, r0, #1
   226f4:	str	r0, [fp, #-44]	; 0xffffffd4
   226f8:	b	226fc <__assert_fail@plt+0x11268>
   226fc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   22700:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22704:	cmp	r0, r1
   22708:	bcs	22720 <__assert_fail@plt+0x1128c>
   2270c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22710:	ldr	r1, [fp, #-44]	; 0xffffffd4
   22714:	add	r0, r0, r1
   22718:	movw	r1, #36	; 0x24
   2271c:	strb	r1, [r0]
   22720:	ldr	r0, [fp, #-44]	; 0xffffffd4
   22724:	add	r0, r0, #1
   22728:	str	r0, [fp, #-44]	; 0xffffffd4
   2272c:	b	22730 <__assert_fail@plt+0x1129c>
   22730:	ldr	r0, [fp, #-44]	; 0xffffffd4
   22734:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22738:	cmp	r0, r1
   2273c:	bcs	22754 <__assert_fail@plt+0x112c0>
   22740:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22744:	ldr	r1, [fp, #-44]	; 0xffffffd4
   22748:	add	r0, r0, r1
   2274c:	movw	r1, #39	; 0x27
   22750:	strb	r1, [r0]
   22754:	ldr	r0, [fp, #-44]	; 0xffffffd4
   22758:	add	r0, r0, #1
   2275c:	str	r0, [fp, #-44]	; 0xffffffd4
   22760:	movw	r0, #1
   22764:	strb	r0, [fp, #-60]	; 0xffffffc4
   22768:	b	2276c <__assert_fail@plt+0x112d8>
   2276c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   22770:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22774:	cmp	r0, r1
   22778:	bcs	22790 <__assert_fail@plt+0x112fc>
   2277c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22780:	ldr	r1, [fp, #-44]	; 0xffffffd4
   22784:	add	r0, r0, r1
   22788:	movw	r1, #92	; 0x5c
   2278c:	strb	r1, [r0]
   22790:	ldr	r0, [fp, #-44]	; 0xffffffd4
   22794:	add	r0, r0, #1
   22798:	str	r0, [fp, #-44]	; 0xffffffd4
   2279c:	b	227a0 <__assert_fail@plt+0x1130c>
   227a0:	b	227a4 <__assert_fail@plt+0x11310>
   227a4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   227a8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   227ac:	cmp	r0, r1
   227b0:	bcs	227d0 <__assert_fail@plt+0x1133c>
   227b4:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   227b8:	asr	r0, r0, #6
   227bc:	add	r0, r0, #48	; 0x30
   227c0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   227c4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   227c8:	add	r1, r1, r2
   227cc:	strb	r0, [r1]
   227d0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   227d4:	add	r0, r0, #1
   227d8:	str	r0, [fp, #-44]	; 0xffffffd4
   227dc:	b	227e0 <__assert_fail@plt+0x1134c>
   227e0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   227e4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   227e8:	cmp	r0, r1
   227ec:	bcs	22810 <__assert_fail@plt+0x1137c>
   227f0:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   227f4:	asr	r0, r0, #3
   227f8:	and	r0, r0, #7
   227fc:	add	r0, r0, #48	; 0x30
   22800:	ldr	r1, [fp, #-24]	; 0xffffffe8
   22804:	ldr	r2, [fp, #-44]	; 0xffffffd4
   22808:	add	r1, r1, r2
   2280c:	strb	r0, [r1]
   22810:	ldr	r0, [fp, #-44]	; 0xffffffd4
   22814:	add	r0, r0, #1
   22818:	str	r0, [fp, #-44]	; 0xffffffd4
   2281c:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   22820:	and	r0, r0, #7
   22824:	add	r0, r0, #48	; 0x30
   22828:	strb	r0, [fp, #-63]	; 0xffffffc1
   2282c:	b	2287c <__assert_fail@plt+0x113e8>
   22830:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   22834:	tst	r0, #1
   22838:	beq	22878 <__assert_fail@plt+0x113e4>
   2283c:	b	22840 <__assert_fail@plt+0x113ac>
   22840:	ldr	r0, [fp, #-44]	; 0xffffffd4
   22844:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22848:	cmp	r0, r1
   2284c:	bcs	22864 <__assert_fail@plt+0x113d0>
   22850:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22854:	ldr	r1, [fp, #-44]	; 0xffffffd4
   22858:	add	r0, r0, r1
   2285c:	movw	r1, #92	; 0x5c
   22860:	strb	r1, [r0]
   22864:	ldr	r0, [fp, #-44]	; 0xffffffd4
   22868:	add	r0, r0, #1
   2286c:	str	r0, [fp, #-44]	; 0xffffffd4
   22870:	movw	r0, #0
   22874:	strb	r0, [fp, #-65]	; 0xffffffbf
   22878:	b	2287c <__assert_fail@plt+0x113e8>
   2287c:	ldr	r0, [sp, #84]	; 0x54
   22880:	ldr	r1, [fp, #-40]	; 0xffffffd8
   22884:	add	r1, r1, #1
   22888:	cmp	r0, r1
   2288c:	bhi	22894 <__assert_fail@plt+0x11400>
   22890:	b	22978 <__assert_fail@plt+0x114e4>
   22894:	b	22898 <__assert_fail@plt+0x11404>
   22898:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   2289c:	tst	r0, #1
   228a0:	beq	22920 <__assert_fail@plt+0x1148c>
   228a4:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   228a8:	tst	r0, #1
   228ac:	bne	22920 <__assert_fail@plt+0x1148c>
   228b0:	b	228b4 <__assert_fail@plt+0x11420>
   228b4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   228b8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   228bc:	cmp	r0, r1
   228c0:	bcs	228d8 <__assert_fail@plt+0x11444>
   228c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   228c8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   228cc:	add	r0, r0, r1
   228d0:	movw	r1, #39	; 0x27
   228d4:	strb	r1, [r0]
   228d8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   228dc:	add	r0, r0, #1
   228e0:	str	r0, [fp, #-44]	; 0xffffffd4
   228e4:	b	228e8 <__assert_fail@plt+0x11454>
   228e8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   228ec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   228f0:	cmp	r0, r1
   228f4:	bcs	2290c <__assert_fail@plt+0x11478>
   228f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   228fc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   22900:	add	r0, r0, r1
   22904:	movw	r1, #39	; 0x27
   22908:	strb	r1, [r0]
   2290c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   22910:	add	r0, r0, #1
   22914:	str	r0, [fp, #-44]	; 0xffffffd4
   22918:	movw	r0, #0
   2291c:	strb	r0, [fp, #-60]	; 0xffffffc4
   22920:	b	22924 <__assert_fail@plt+0x11490>
   22924:	b	22928 <__assert_fail@plt+0x11494>
   22928:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2292c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22930:	cmp	r0, r1
   22934:	bcs	2294c <__assert_fail@plt+0x114b8>
   22938:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   2293c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   22940:	ldr	r2, [fp, #-44]	; 0xffffffd4
   22944:	add	r1, r1, r2
   22948:	strb	r0, [r1]
   2294c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   22950:	add	r0, r0, #1
   22954:	str	r0, [fp, #-44]	; 0xffffffd4
   22958:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2295c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   22960:	add	r1, r1, #1
   22964:	str	r1, [fp, #-40]	; 0xffffffd8
   22968:	add	r0, r0, r1
   2296c:	ldrb	r0, [r0]
   22970:	strb	r0, [fp, #-63]	; 0xffffffc1
   22974:	b	22678 <__assert_fail@plt+0x111e4>
   22978:	b	22b08 <__assert_fail@plt+0x11674>
   2297c:	b	22980 <__assert_fail@plt+0x114ec>
   22980:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   22984:	tst	r0, #1
   22988:	beq	22998 <__assert_fail@plt+0x11504>
   2298c:	ldr	r0, [fp, #8]
   22990:	cmp	r0, #2
   22994:	bne	229a4 <__assert_fail@plt+0x11510>
   22998:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   2299c:	tst	r0, #1
   229a0:	beq	229e0 <__assert_fail@plt+0x1154c>
   229a4:	ldr	r0, [fp, #16]
   229a8:	movw	r1, #0
   229ac:	cmp	r0, r1
   229b0:	beq	229e0 <__assert_fail@plt+0x1154c>
   229b4:	ldr	r0, [fp, #16]
   229b8:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   229bc:	lsr	r1, r1, #5
   229c0:	add	r0, r0, r1, lsl #2
   229c4:	ldr	r0, [r0]
   229c8:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   229cc:	and	r1, r1, #31
   229d0:	lsr	r0, r0, r1
   229d4:	and	r0, r0, #1
   229d8:	cmp	r0, #0
   229dc:	bne	229f0 <__assert_fail@plt+0x1155c>
   229e0:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   229e4:	tst	r0, #1
   229e8:	bne	229f0 <__assert_fail@plt+0x1155c>
   229ec:	b	22b08 <__assert_fail@plt+0x11674>
   229f0:	b	229f4 <__assert_fail@plt+0x11560>
   229f4:	b	229f8 <__assert_fail@plt+0x11564>
   229f8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   229fc:	tst	r0, #1
   22a00:	beq	22a08 <__assert_fail@plt+0x11574>
   22a04:	b	22d74 <__assert_fail@plt+0x118e0>
   22a08:	movw	r0, #1
   22a0c:	strb	r0, [fp, #-66]	; 0xffffffbe
   22a10:	ldr	r0, [fp, #8]
   22a14:	cmp	r0, #2
   22a18:	bne	22acc <__assert_fail@plt+0x11638>
   22a1c:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   22a20:	tst	r0, #1
   22a24:	bne	22acc <__assert_fail@plt+0x11638>
   22a28:	b	22a2c <__assert_fail@plt+0x11598>
   22a2c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   22a30:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22a34:	cmp	r0, r1
   22a38:	bcs	22a50 <__assert_fail@plt+0x115bc>
   22a3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22a40:	ldr	r1, [fp, #-44]	; 0xffffffd4
   22a44:	add	r0, r0, r1
   22a48:	movw	r1, #39	; 0x27
   22a4c:	strb	r1, [r0]
   22a50:	ldr	r0, [fp, #-44]	; 0xffffffd4
   22a54:	add	r0, r0, #1
   22a58:	str	r0, [fp, #-44]	; 0xffffffd4
   22a5c:	b	22a60 <__assert_fail@plt+0x115cc>
   22a60:	ldr	r0, [fp, #-44]	; 0xffffffd4
   22a64:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22a68:	cmp	r0, r1
   22a6c:	bcs	22a84 <__assert_fail@plt+0x115f0>
   22a70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22a74:	ldr	r1, [fp, #-44]	; 0xffffffd4
   22a78:	add	r0, r0, r1
   22a7c:	movw	r1, #36	; 0x24
   22a80:	strb	r1, [r0]
   22a84:	ldr	r0, [fp, #-44]	; 0xffffffd4
   22a88:	add	r0, r0, #1
   22a8c:	str	r0, [fp, #-44]	; 0xffffffd4
   22a90:	b	22a94 <__assert_fail@plt+0x11600>
   22a94:	ldr	r0, [fp, #-44]	; 0xffffffd4
   22a98:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22a9c:	cmp	r0, r1
   22aa0:	bcs	22ab8 <__assert_fail@plt+0x11624>
   22aa4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22aa8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   22aac:	add	r0, r0, r1
   22ab0:	movw	r1, #39	; 0x27
   22ab4:	strb	r1, [r0]
   22ab8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   22abc:	add	r0, r0, #1
   22ac0:	str	r0, [fp, #-44]	; 0xffffffd4
   22ac4:	movw	r0, #1
   22ac8:	strb	r0, [fp, #-60]	; 0xffffffc4
   22acc:	b	22ad0 <__assert_fail@plt+0x1163c>
   22ad0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   22ad4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22ad8:	cmp	r0, r1
   22adc:	bcs	22af4 <__assert_fail@plt+0x11660>
   22ae0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22ae4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   22ae8:	add	r0, r0, r1
   22aec:	movw	r1, #92	; 0x5c
   22af0:	strb	r1, [r0]
   22af4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   22af8:	add	r0, r0, #1
   22afc:	str	r0, [fp, #-44]	; 0xffffffd4
   22b00:	b	22b04 <__assert_fail@plt+0x11670>
   22b04:	b	22b08 <__assert_fail@plt+0x11674>
   22b08:	b	22b0c <__assert_fail@plt+0x11678>
   22b0c:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   22b10:	tst	r0, #1
   22b14:	beq	22b94 <__assert_fail@plt+0x11700>
   22b18:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   22b1c:	tst	r0, #1
   22b20:	bne	22b94 <__assert_fail@plt+0x11700>
   22b24:	b	22b28 <__assert_fail@plt+0x11694>
   22b28:	ldr	r0, [fp, #-44]	; 0xffffffd4
   22b2c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22b30:	cmp	r0, r1
   22b34:	bcs	22b4c <__assert_fail@plt+0x116b8>
   22b38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22b3c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   22b40:	add	r0, r0, r1
   22b44:	movw	r1, #39	; 0x27
   22b48:	strb	r1, [r0]
   22b4c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   22b50:	add	r0, r0, #1
   22b54:	str	r0, [fp, #-44]	; 0xffffffd4
   22b58:	b	22b5c <__assert_fail@plt+0x116c8>
   22b5c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   22b60:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22b64:	cmp	r0, r1
   22b68:	bcs	22b80 <__assert_fail@plt+0x116ec>
   22b6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22b70:	ldr	r1, [fp, #-44]	; 0xffffffd4
   22b74:	add	r0, r0, r1
   22b78:	movw	r1, #39	; 0x27
   22b7c:	strb	r1, [r0]
   22b80:	ldr	r0, [fp, #-44]	; 0xffffffd4
   22b84:	add	r0, r0, #1
   22b88:	str	r0, [fp, #-44]	; 0xffffffd4
   22b8c:	movw	r0, #0
   22b90:	strb	r0, [fp, #-60]	; 0xffffffc4
   22b94:	b	22b98 <__assert_fail@plt+0x11704>
   22b98:	b	22b9c <__assert_fail@plt+0x11708>
   22b9c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   22ba0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22ba4:	cmp	r0, r1
   22ba8:	bcs	22bc0 <__assert_fail@plt+0x1172c>
   22bac:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   22bb0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   22bb4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   22bb8:	add	r1, r1, r2
   22bbc:	strb	r0, [r1]
   22bc0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   22bc4:	add	r0, r0, #1
   22bc8:	str	r0, [fp, #-44]	; 0xffffffd4
   22bcc:	ldrb	r0, [fp, #-67]	; 0xffffffbd
   22bd0:	tst	r0, #1
   22bd4:	bne	22be0 <__assert_fail@plt+0x1174c>
   22bd8:	movw	r0, #0
   22bdc:	strb	r0, [fp, #-62]	; 0xffffffc2
   22be0:	b	22be4 <__assert_fail@plt+0x11750>
   22be4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   22be8:	add	r0, r0, #1
   22bec:	str	r0, [fp, #-40]	; 0xffffffd8
   22bf0:	b	21998 <__assert_fail@plt+0x10504>
   22bf4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   22bf8:	cmp	r0, #0
   22bfc:	bne	22c1c <__assert_fail@plt+0x11788>
   22c00:	ldr	r0, [fp, #8]
   22c04:	cmp	r0, #2
   22c08:	bne	22c1c <__assert_fail@plt+0x11788>
   22c0c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   22c10:	tst	r0, #1
   22c14:	beq	22c1c <__assert_fail@plt+0x11788>
   22c18:	b	22d74 <__assert_fail@plt+0x118e0>
   22c1c:	ldr	r0, [fp, #8]
   22c20:	cmp	r0, #2
   22c24:	bne	22cc4 <__assert_fail@plt+0x11830>
   22c28:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   22c2c:	tst	r0, #1
   22c30:	bne	22cc4 <__assert_fail@plt+0x11830>
   22c34:	ldrb	r0, [fp, #-61]	; 0xffffffc3
   22c38:	tst	r0, #1
   22c3c:	beq	22cc4 <__assert_fail@plt+0x11830>
   22c40:	ldrb	r0, [fp, #-62]	; 0xffffffc2
   22c44:	tst	r0, #1
   22c48:	beq	22c90 <__assert_fail@plt+0x117fc>
   22c4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22c50:	ldr	r1, [fp, #-48]	; 0xffffffd0
   22c54:	ldr	r2, [fp, #-32]	; 0xffffffe0
   22c58:	ldr	r3, [fp, #-36]	; 0xffffffdc
   22c5c:	ldr	ip, [fp, #12]
   22c60:	ldr	lr, [fp, #16]
   22c64:	ldr	r4, [fp, #20]
   22c68:	ldr	r5, [fp, #24]
   22c6c:	movw	r6, #5
   22c70:	str	r6, [sp]
   22c74:	str	ip, [sp, #4]
   22c78:	str	lr, [sp, #8]
   22c7c:	str	r4, [sp, #12]
   22c80:	str	r5, [sp, #16]
   22c84:	bl	216b0 <__assert_fail@plt+0x1021c>
   22c88:	str	r0, [fp, #-20]	; 0xffffffec
   22c8c:	b	22ddc <__assert_fail@plt+0x11948>
   22c90:	ldr	r0, [fp, #-28]	; 0xffffffe4
   22c94:	cmp	r0, #0
   22c98:	bne	22cbc <__assert_fail@plt+0x11828>
   22c9c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   22ca0:	cmp	r0, #0
   22ca4:	beq	22cbc <__assert_fail@plt+0x11828>
   22ca8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   22cac:	str	r0, [fp, #-28]	; 0xffffffe4
   22cb0:	movw	r0, #0
   22cb4:	str	r0, [fp, #-44]	; 0xffffffd4
   22cb8:	b	21758 <__assert_fail@plt+0x102c4>
   22cbc:	b	22cc0 <__assert_fail@plt+0x1182c>
   22cc0:	b	22cc4 <__assert_fail@plt+0x11830>
   22cc4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   22cc8:	movw	r1, #0
   22ccc:	cmp	r0, r1
   22cd0:	beq	22d44 <__assert_fail@plt+0x118b0>
   22cd4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   22cd8:	tst	r0, #1
   22cdc:	bne	22d44 <__assert_fail@plt+0x118b0>
   22ce0:	b	22ce4 <__assert_fail@plt+0x11850>
   22ce4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   22ce8:	ldrsb	r0, [r0]
   22cec:	cmp	r0, #0
   22cf0:	beq	22d40 <__assert_fail@plt+0x118ac>
   22cf4:	b	22cf8 <__assert_fail@plt+0x11864>
   22cf8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   22cfc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22d00:	cmp	r0, r1
   22d04:	bcs	22d20 <__assert_fail@plt+0x1188c>
   22d08:	ldr	r0, [fp, #-52]	; 0xffffffcc
   22d0c:	ldrb	r0, [r0]
   22d10:	ldr	r1, [fp, #-24]	; 0xffffffe8
   22d14:	ldr	r2, [fp, #-44]	; 0xffffffd4
   22d18:	add	r1, r1, r2
   22d1c:	strb	r0, [r1]
   22d20:	ldr	r0, [fp, #-44]	; 0xffffffd4
   22d24:	add	r0, r0, #1
   22d28:	str	r0, [fp, #-44]	; 0xffffffd4
   22d2c:	b	22d30 <__assert_fail@plt+0x1189c>
   22d30:	ldr	r0, [fp, #-52]	; 0xffffffcc
   22d34:	add	r0, r0, #1
   22d38:	str	r0, [fp, #-52]	; 0xffffffcc
   22d3c:	b	22ce4 <__assert_fail@plt+0x11850>
   22d40:	b	22d44 <__assert_fail@plt+0x118b0>
   22d44:	ldr	r0, [fp, #-44]	; 0xffffffd4
   22d48:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22d4c:	cmp	r0, r1
   22d50:	bcs	22d68 <__assert_fail@plt+0x118d4>
   22d54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22d58:	ldr	r1, [fp, #-44]	; 0xffffffd4
   22d5c:	add	r0, r0, r1
   22d60:	movw	r1, #0
   22d64:	strb	r1, [r0]
   22d68:	ldr	r0, [fp, #-44]	; 0xffffffd4
   22d6c:	str	r0, [fp, #-20]	; 0xffffffec
   22d70:	b	22ddc <__assert_fail@plt+0x11948>
   22d74:	ldr	r0, [fp, #8]
   22d78:	cmp	r0, #2
   22d7c:	bne	22d94 <__assert_fail@plt+0x11900>
   22d80:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   22d84:	tst	r0, #1
   22d88:	beq	22d94 <__assert_fail@plt+0x11900>
   22d8c:	movw	r0, #4
   22d90:	str	r0, [fp, #8]
   22d94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22d98:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22d9c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   22da0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   22da4:	ldr	ip, [fp, #8]
   22da8:	ldr	lr, [fp, #12]
   22dac:	mvn	r4, #2
   22db0:	and	lr, lr, r4
   22db4:	ldr	r4, [fp, #20]
   22db8:	ldr	r5, [fp, #24]
   22dbc:	str	ip, [sp]
   22dc0:	str	lr, [sp, #4]
   22dc4:	movw	ip, #0
   22dc8:	str	ip, [sp, #8]
   22dcc:	str	r4, [sp, #12]
   22dd0:	str	r5, [sp, #16]
   22dd4:	bl	216b0 <__assert_fail@plt+0x1021c>
   22dd8:	str	r0, [fp, #-20]	; 0xffffffec
   22ddc:	ldr	r0, [fp, #-20]	; 0xffffffec
   22de0:	sub	sp, fp, #16
   22de4:	pop	{r4, r5, r6, sl, fp, pc}
   22de8:	push	{fp, lr}
   22dec:	mov	fp, sp
   22df0:	sub	sp, sp, #16
   22df4:	str	r0, [fp, #-4]
   22df8:	str	r1, [sp, #8]
   22dfc:	str	r2, [sp, #4]
   22e00:	ldr	r0, [fp, #-4]
   22e04:	ldr	r1, [sp, #8]
   22e08:	ldr	r3, [sp, #4]
   22e0c:	movw	r2, #0
   22e10:	bl	22e1c <__assert_fail@plt+0x11988>
   22e14:	mov	sp, fp
   22e18:	pop	{fp, pc}
   22e1c:	push	{r4, r5, r6, sl, fp, lr}
   22e20:	add	fp, sp, #16
   22e24:	sub	sp, sp, #72	; 0x48
   22e28:	str	r0, [fp, #-20]	; 0xffffffec
   22e2c:	str	r1, [fp, #-24]	; 0xffffffe8
   22e30:	str	r2, [fp, #-28]	; 0xffffffe4
   22e34:	str	r3, [fp, #-32]	; 0xffffffe0
   22e38:	ldr	r0, [fp, #-32]	; 0xffffffe0
   22e3c:	movw	r1, #0
   22e40:	cmp	r0, r1
   22e44:	beq	22e54 <__assert_fail@plt+0x119c0>
   22e48:	ldr	r0, [fp, #-32]	; 0xffffffe0
   22e4c:	str	r0, [sp, #32]
   22e50:	b	22e64 <__assert_fail@plt+0x119d0>
   22e54:	movw	r0, #25000	; 0x61a8
   22e58:	movt	r0, #5
   22e5c:	str	r0, [sp, #32]
   22e60:	b	22e64 <__assert_fail@plt+0x119d0>
   22e64:	ldr	r0, [sp, #32]
   22e68:	str	r0, [fp, #-36]	; 0xffffffdc
   22e6c:	bl	113b0 <__errno_location@plt>
   22e70:	ldr	r0, [r0]
   22e74:	str	r0, [fp, #-40]	; 0xffffffd8
   22e78:	ldr	r0, [fp, #-36]	; 0xffffffdc
   22e7c:	ldr	r0, [r0, #4]
   22e80:	ldr	lr, [fp, #-28]	; 0xffffffe4
   22e84:	movw	r1, #0
   22e88:	cmp	lr, r1
   22e8c:	movw	lr, #0
   22e90:	movne	lr, #1
   22e94:	tst	lr, #1
   22e98:	mov	lr, r1
   22e9c:	moveq	lr, #1
   22ea0:	orr	r0, r0, lr
   22ea4:	str	r0, [sp, #44]	; 0x2c
   22ea8:	ldr	r2, [fp, #-20]	; 0xffffffec
   22eac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   22eb0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   22eb4:	ldr	r0, [r0]
   22eb8:	ldr	lr, [sp, #44]	; 0x2c
   22ebc:	ldr	ip, [fp, #-36]	; 0xffffffdc
   22ec0:	add	ip, ip, #8
   22ec4:	ldr	r4, [fp, #-36]	; 0xffffffdc
   22ec8:	ldr	r4, [r4, #40]	; 0x28
   22ecc:	ldr	r5, [fp, #-36]	; 0xffffffdc
   22ed0:	ldr	r5, [r5, #44]	; 0x2c
   22ed4:	str	r0, [sp, #28]
   22ed8:	mov	r0, r1
   22edc:	ldr	r6, [sp, #28]
   22ee0:	str	r6, [sp]
   22ee4:	str	lr, [sp, #4]
   22ee8:	str	ip, [sp, #8]
   22eec:	str	r4, [sp, #12]
   22ef0:	str	r5, [sp, #16]
   22ef4:	bl	216b0 <__assert_fail@plt+0x1021c>
   22ef8:	add	r0, r0, #1
   22efc:	str	r0, [sp, #40]	; 0x28
   22f00:	ldr	r0, [sp, #40]	; 0x28
   22f04:	bl	3cd88 <__assert_fail@plt+0x2b8f4>
   22f08:	str	r0, [sp, #36]	; 0x24
   22f0c:	ldr	r0, [sp, #36]	; 0x24
   22f10:	ldr	r1, [sp, #40]	; 0x28
   22f14:	ldr	r2, [fp, #-20]	; 0xffffffec
   22f18:	ldr	r3, [fp, #-24]	; 0xffffffe8
   22f1c:	ldr	ip, [fp, #-36]	; 0xffffffdc
   22f20:	ldr	ip, [ip]
   22f24:	ldr	lr, [sp, #44]	; 0x2c
   22f28:	ldr	r4, [fp, #-36]	; 0xffffffdc
   22f2c:	add	r4, r4, #8
   22f30:	ldr	r5, [fp, #-36]	; 0xffffffdc
   22f34:	ldr	r5, [r5, #40]	; 0x28
   22f38:	ldr	r6, [fp, #-36]	; 0xffffffdc
   22f3c:	ldr	r6, [r6, #44]	; 0x2c
   22f40:	str	ip, [sp]
   22f44:	str	lr, [sp, #4]
   22f48:	str	r4, [sp, #8]
   22f4c:	str	r5, [sp, #12]
   22f50:	str	r6, [sp, #16]
   22f54:	bl	216b0 <__assert_fail@plt+0x1021c>
   22f58:	ldr	r1, [fp, #-40]	; 0xffffffd8
   22f5c:	str	r0, [sp, #24]
   22f60:	str	r1, [sp, #20]
   22f64:	bl	113b0 <__errno_location@plt>
   22f68:	ldr	r1, [sp, #20]
   22f6c:	str	r1, [r0]
   22f70:	ldr	r0, [fp, #-28]	; 0xffffffe4
   22f74:	movw	r2, #0
   22f78:	cmp	r0, r2
   22f7c:	beq	22f90 <__assert_fail@plt+0x11afc>
   22f80:	ldr	r0, [sp, #40]	; 0x28
   22f84:	sub	r0, r0, #1
   22f88:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22f8c:	str	r0, [r1]
   22f90:	ldr	r0, [sp, #36]	; 0x24
   22f94:	sub	sp, fp, #16
   22f98:	pop	{r4, r5, r6, sl, fp, pc}
   22f9c:	push	{fp, lr}
   22fa0:	mov	fp, sp
   22fa4:	sub	sp, sp, #8
   22fa8:	movw	r0, #24884	; 0x6134
   22fac:	movt	r0, #5
   22fb0:	ldr	r0, [r0]
   22fb4:	str	r0, [sp, #4]
   22fb8:	movw	r0, #1
   22fbc:	str	r0, [sp]
   22fc0:	ldr	r0, [sp]
   22fc4:	movw	r1, #24888	; 0x6138
   22fc8:	movt	r1, #5
   22fcc:	ldr	r1, [r1]
   22fd0:	cmp	r0, r1
   22fd4:	bge	22ffc <__assert_fail@plt+0x11b68>
   22fd8:	ldr	r0, [sp, #4]
   22fdc:	ldr	r1, [sp]
   22fe0:	add	r0, r0, r1, lsl #3
   22fe4:	ldr	r0, [r0, #4]
   22fe8:	bl	138a4 <__assert_fail@plt+0x2410>
   22fec:	ldr	r0, [sp]
   22ff0:	add	r0, r0, #1
   22ff4:	str	r0, [sp]
   22ff8:	b	22fc0 <__assert_fail@plt+0x11b2c>
   22ffc:	ldr	r0, [sp, #4]
   23000:	ldr	r0, [r0, #4]
   23004:	movw	r1, #25048	; 0x61d8
   23008:	movt	r1, #5
   2300c:	cmp	r0, r1
   23010:	beq	2303c <__assert_fail@plt+0x11ba8>
   23014:	ldr	r0, [sp, #4]
   23018:	ldr	r0, [r0, #4]
   2301c:	bl	138a4 <__assert_fail@plt+0x2410>
   23020:	movw	r0, #256	; 0x100
   23024:	movw	lr, #24892	; 0x613c
   23028:	movt	lr, #5
   2302c:	str	r0, [lr]
   23030:	movw	r0, #25048	; 0x61d8
   23034:	movt	r0, #5
   23038:	str	r0, [lr, #4]
   2303c:	ldr	r0, [sp, #4]
   23040:	movw	r1, #24892	; 0x613c
   23044:	movt	r1, #5
   23048:	cmp	r0, r1
   2304c:	beq	2306c <__assert_fail@plt+0x11bd8>
   23050:	ldr	r0, [sp, #4]
   23054:	bl	138a4 <__assert_fail@plt+0x2410>
   23058:	movw	r0, #24884	; 0x6134
   2305c:	movt	r0, #5
   23060:	movw	lr, #24892	; 0x613c
   23064:	movt	lr, #5
   23068:	str	lr, [r0]
   2306c:	movw	r0, #24888	; 0x6138
   23070:	movt	r0, #5
   23074:	movw	r1, #1
   23078:	str	r1, [r0]
   2307c:	mov	sp, fp
   23080:	pop	{fp, pc}
   23084:	push	{fp, lr}
   23088:	mov	fp, sp
   2308c:	sub	sp, sp, #8
   23090:	str	r0, [sp, #4]
   23094:	str	r1, [sp]
   23098:	ldr	r0, [sp, #4]
   2309c:	ldr	r1, [sp]
   230a0:	mvn	r2, #0
   230a4:	movw	r3, #25000	; 0x61a8
   230a8:	movt	r3, #5
   230ac:	bl	230b8 <__assert_fail@plt+0x11c24>
   230b0:	mov	sp, fp
   230b4:	pop	{fp, pc}
   230b8:	push	{r4, r5, r6, sl, fp, lr}
   230bc:	add	fp, sp, #16
   230c0:	sub	sp, sp, #88	; 0x58
   230c4:	str	r0, [fp, #-20]	; 0xffffffec
   230c8:	str	r1, [fp, #-24]	; 0xffffffe8
   230cc:	str	r2, [fp, #-28]	; 0xffffffe4
   230d0:	str	r3, [fp, #-32]	; 0xffffffe0
   230d4:	bl	113b0 <__errno_location@plt>
   230d8:	ldr	r1, [pc, #676]	; 23384 <__assert_fail@plt+0x11ef0>
   230dc:	ldr	r0, [r0]
   230e0:	str	r0, [fp, #-36]	; 0xffffffdc
   230e4:	movw	r0, #24884	; 0x6134
   230e8:	movt	r0, #5
   230ec:	ldr	r0, [r0]
   230f0:	str	r0, [fp, #-40]	; 0xffffffd8
   230f4:	str	r1, [fp, #-44]	; 0xffffffd4
   230f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   230fc:	movw	r1, #0
   23100:	cmp	r1, r0
   23104:	bgt	23118 <__assert_fail@plt+0x11c84>
   23108:	ldr	r0, [fp, #-20]	; 0xffffffec
   2310c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   23110:	cmp	r0, r1
   23114:	blt	2311c <__assert_fail@plt+0x11c88>
   23118:	bl	1147c <abort@plt>
   2311c:	movw	r0, #24888	; 0x6138
   23120:	movt	r0, #5
   23124:	ldr	r0, [r0]
   23128:	ldr	r1, [fp, #-20]	; 0xffffffec
   2312c:	cmp	r0, r1
   23130:	bgt	23228 <__assert_fail@plt+0x11d94>
   23134:	ldr	r0, [fp, #-40]	; 0xffffffd8
   23138:	movw	r1, #24892	; 0x613c
   2313c:	movt	r1, #5
   23140:	cmp	r0, r1
   23144:	movw	r0, #0
   23148:	moveq	r0, #1
   2314c:	and	r0, r0, #1
   23150:	strb	r0, [fp, #-45]	; 0xffffffd3
   23154:	movw	r0, #24888	; 0x6138
   23158:	movt	r0, #5
   2315c:	ldr	r0, [r0]
   23160:	str	r0, [sp, #52]	; 0x34
   23164:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   23168:	tst	r0, #1
   2316c:	beq	2317c <__assert_fail@plt+0x11ce8>
   23170:	movw	r0, #0
   23174:	str	r0, [sp, #32]
   23178:	b	23184 <__assert_fail@plt+0x11cf0>
   2317c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   23180:	str	r0, [sp, #32]
   23184:	ldr	r0, [sp, #32]
   23188:	ldr	r1, [fp, #-20]	; 0xffffffec
   2318c:	movw	r2, #24888	; 0x6138
   23190:	movt	r2, #5
   23194:	ldr	r2, [r2]
   23198:	sub	r1, r1, r2
   2319c:	add	r2, r1, #1
   231a0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   231a4:	add	r1, sp, #52	; 0x34
   231a8:	movw	ip, #8
   231ac:	str	ip, [sp]
   231b0:	bl	3cfc4 <__assert_fail@plt+0x2bb30>
   231b4:	str	r0, [fp, #-40]	; 0xffffffd8
   231b8:	movw	r1, #24884	; 0x6134
   231bc:	movt	r1, #5
   231c0:	str	r0, [r1]
   231c4:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   231c8:	tst	r0, #1
   231cc:	beq	231ec <__assert_fail@plt+0x11d58>
   231d0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   231d4:	movw	r1, #24892	; 0x613c
   231d8:	movt	r1, #5
   231dc:	ldr	r2, [r1]
   231e0:	str	r2, [r0]
   231e4:	ldr	r1, [r1, #4]
   231e8:	str	r1, [r0, #4]
   231ec:	ldr	r0, [fp, #-40]	; 0xffffffd8
   231f0:	movw	r1, #24888	; 0x6138
   231f4:	movt	r1, #5
   231f8:	ldr	r1, [r1]
   231fc:	add	r0, r0, r1, lsl #3
   23200:	ldr	r2, [sp, #52]	; 0x34
   23204:	sub	r1, r2, r1
   23208:	lsl	r2, r1, #3
   2320c:	movw	r1, #0
   23210:	and	r1, r1, #255	; 0xff
   23214:	bl	113d4 <memset@plt>
   23218:	ldr	r0, [sp, #52]	; 0x34
   2321c:	movw	r1, #24888	; 0x6138
   23220:	movt	r1, #5
   23224:	str	r0, [r1]
   23228:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2322c:	ldr	r1, [fp, #-20]	; 0xffffffec
   23230:	ldr	r0, [r0, r1, lsl #3]
   23234:	str	r0, [sp, #48]	; 0x30
   23238:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2323c:	ldr	r1, [fp, #-20]	; 0xffffffec
   23240:	add	r0, r0, r1, lsl #3
   23244:	ldr	r0, [r0, #4]
   23248:	str	r0, [sp, #44]	; 0x2c
   2324c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23250:	ldr	r0, [r0, #4]
   23254:	orr	r0, r0, #1
   23258:	str	r0, [sp, #40]	; 0x28
   2325c:	ldr	r0, [sp, #44]	; 0x2c
   23260:	ldr	r1, [sp, #48]	; 0x30
   23264:	ldr	r2, [fp, #-24]	; 0xffffffe8
   23268:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2326c:	ldr	ip, [fp, #-32]	; 0xffffffe0
   23270:	ldr	ip, [ip]
   23274:	ldr	lr, [sp, #40]	; 0x28
   23278:	ldr	r4, [fp, #-32]	; 0xffffffe0
   2327c:	add	r4, r4, #8
   23280:	ldr	r5, [fp, #-32]	; 0xffffffe0
   23284:	ldr	r5, [r5, #40]	; 0x28
   23288:	ldr	r6, [fp, #-32]	; 0xffffffe0
   2328c:	ldr	r6, [r6, #44]	; 0x2c
   23290:	str	ip, [sp]
   23294:	str	lr, [sp, #4]
   23298:	str	r4, [sp, #8]
   2329c:	str	r5, [sp, #12]
   232a0:	str	r6, [sp, #16]
   232a4:	bl	216b0 <__assert_fail@plt+0x1021c>
   232a8:	str	r0, [sp, #36]	; 0x24
   232ac:	ldr	r0, [sp, #48]	; 0x30
   232b0:	ldr	r1, [sp, #36]	; 0x24
   232b4:	cmp	r0, r1
   232b8:	bhi	23364 <__assert_fail@plt+0x11ed0>
   232bc:	ldr	r0, [sp, #36]	; 0x24
   232c0:	add	r0, r0, #1
   232c4:	str	r0, [sp, #48]	; 0x30
   232c8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   232cc:	ldr	r2, [fp, #-20]	; 0xffffffec
   232d0:	add	r1, r1, r2, lsl #3
   232d4:	str	r0, [r1]
   232d8:	ldr	r0, [sp, #44]	; 0x2c
   232dc:	movw	r1, #25048	; 0x61d8
   232e0:	movt	r1, #5
   232e4:	cmp	r0, r1
   232e8:	beq	232f4 <__assert_fail@plt+0x11e60>
   232ec:	ldr	r0, [sp, #44]	; 0x2c
   232f0:	bl	138a4 <__assert_fail@plt+0x2410>
   232f4:	ldr	r0, [sp, #48]	; 0x30
   232f8:	bl	3cd88 <__assert_fail@plt+0x2b8f4>
   232fc:	mov	lr, r0
   23300:	str	r0, [sp, #44]	; 0x2c
   23304:	ldr	r0, [fp, #-40]	; 0xffffffd8
   23308:	ldr	r1, [fp, #-20]	; 0xffffffec
   2330c:	add	r0, r0, r1, lsl #3
   23310:	str	lr, [r0, #4]
   23314:	ldr	r0, [sp, #44]	; 0x2c
   23318:	ldr	r1, [sp, #48]	; 0x30
   2331c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   23320:	ldr	r3, [fp, #-28]	; 0xffffffe4
   23324:	ldr	lr, [fp, #-32]	; 0xffffffe0
   23328:	ldr	lr, [lr]
   2332c:	ldr	ip, [sp, #40]	; 0x28
   23330:	ldr	r4, [fp, #-32]	; 0xffffffe0
   23334:	add	r4, r4, #8
   23338:	ldr	r5, [fp, #-32]	; 0xffffffe0
   2333c:	ldr	r5, [r5, #40]	; 0x28
   23340:	ldr	r6, [fp, #-32]	; 0xffffffe0
   23344:	ldr	r6, [r6, #44]	; 0x2c
   23348:	str	lr, [sp]
   2334c:	str	ip, [sp, #4]
   23350:	str	r4, [sp, #8]
   23354:	str	r5, [sp, #12]
   23358:	str	r6, [sp, #16]
   2335c:	bl	216b0 <__assert_fail@plt+0x1021c>
   23360:	str	r0, [sp, #28]
   23364:	ldr	r0, [fp, #-36]	; 0xffffffdc
   23368:	str	r0, [sp, #24]
   2336c:	bl	113b0 <__errno_location@plt>
   23370:	ldr	lr, [sp, #24]
   23374:	str	lr, [r0]
   23378:	ldr	r0, [sp, #44]	; 0x2c
   2337c:	sub	sp, fp, #16
   23380:	pop	{r4, r5, r6, sl, fp, pc}
   23384:	svcvc	0x00ffffff
   23388:	push	{fp, lr}
   2338c:	mov	fp, sp
   23390:	sub	sp, sp, #16
   23394:	str	r0, [fp, #-4]
   23398:	str	r1, [sp, #8]
   2339c:	str	r2, [sp, #4]
   233a0:	ldr	r0, [fp, #-4]
   233a4:	ldr	r1, [sp, #8]
   233a8:	ldr	r2, [sp, #4]
   233ac:	movw	r3, #25000	; 0x61a8
   233b0:	movt	r3, #5
   233b4:	bl	230b8 <__assert_fail@plt+0x11c24>
   233b8:	mov	sp, fp
   233bc:	pop	{fp, pc}
   233c0:	push	{fp, lr}
   233c4:	mov	fp, sp
   233c8:	sub	sp, sp, #8
   233cc:	str	r0, [sp, #4]
   233d0:	ldr	r1, [sp, #4]
   233d4:	movw	r0, #0
   233d8:	bl	23084 <__assert_fail@plt+0x11bf0>
   233dc:	mov	sp, fp
   233e0:	pop	{fp, pc}
   233e4:	push	{fp, lr}
   233e8:	mov	fp, sp
   233ec:	sub	sp, sp, #8
   233f0:	str	r0, [sp, #4]
   233f4:	str	r1, [sp]
   233f8:	ldr	r1, [sp, #4]
   233fc:	ldr	r2, [sp]
   23400:	movw	r0, #0
   23404:	bl	23388 <__assert_fail@plt+0x11ef4>
   23408:	mov	sp, fp
   2340c:	pop	{fp, pc}
   23410:	push	{fp, lr}
   23414:	mov	fp, sp
   23418:	sub	sp, sp, #64	; 0x40
   2341c:	str	r0, [fp, #-4]
   23420:	str	r1, [fp, #-8]
   23424:	str	r2, [fp, #-12]
   23428:	ldr	r1, [fp, #-8]
   2342c:	add	r0, sp, #4
   23430:	bl	23450 <__assert_fail@plt+0x11fbc>
   23434:	ldr	r0, [fp, #-4]
   23438:	ldr	r1, [fp, #-12]
   2343c:	mvn	r2, #0
   23440:	add	r3, sp, #4
   23444:	bl	230b8 <__assert_fail@plt+0x11c24>
   23448:	mov	sp, fp
   2344c:	pop	{fp, pc}
   23450:	push	{fp, lr}
   23454:	mov	fp, sp
   23458:	sub	sp, sp, #8
   2345c:	str	r1, [sp, #4]
   23460:	mov	r1, r0
   23464:	str	r0, [sp]
   23468:	mov	r0, r1
   2346c:	movw	r1, #0
   23470:	and	r1, r1, #255	; 0xff
   23474:	movw	r2, #48	; 0x30
   23478:	bl	113d4 <memset@plt>
   2347c:	ldr	r0, [sp, #4]
   23480:	cmp	r0, #10
   23484:	bne	2348c <__assert_fail@plt+0x11ff8>
   23488:	bl	1147c <abort@plt>
   2348c:	ldr	r0, [sp, #4]
   23490:	ldr	r1, [sp]
   23494:	str	r0, [r1]
   23498:	mov	sp, fp
   2349c:	pop	{fp, pc}
   234a0:	push	{fp, lr}
   234a4:	mov	fp, sp
   234a8:	sub	sp, sp, #64	; 0x40
   234ac:	str	r0, [fp, #-4]
   234b0:	str	r1, [fp, #-8]
   234b4:	str	r2, [fp, #-12]
   234b8:	str	r3, [fp, #-16]
   234bc:	ldr	r1, [fp, #-8]
   234c0:	mov	r0, sp
   234c4:	bl	23450 <__assert_fail@plt+0x11fbc>
   234c8:	ldr	r0, [fp, #-4]
   234cc:	ldr	r1, [fp, #-12]
   234d0:	ldr	r2, [fp, #-16]
   234d4:	mov	r3, sp
   234d8:	bl	230b8 <__assert_fail@plt+0x11c24>
   234dc:	mov	sp, fp
   234e0:	pop	{fp, pc}
   234e4:	push	{fp, lr}
   234e8:	mov	fp, sp
   234ec:	sub	sp, sp, #8
   234f0:	str	r0, [sp, #4]
   234f4:	str	r1, [sp]
   234f8:	ldr	r1, [sp, #4]
   234fc:	ldr	r2, [sp]
   23500:	movw	r0, #0
   23504:	bl	23410 <__assert_fail@plt+0x11f7c>
   23508:	mov	sp, fp
   2350c:	pop	{fp, pc}
   23510:	push	{fp, lr}
   23514:	mov	fp, sp
   23518:	sub	sp, sp, #16
   2351c:	str	r0, [fp, #-4]
   23520:	str	r1, [sp, #8]
   23524:	str	r2, [sp, #4]
   23528:	ldr	r1, [fp, #-4]
   2352c:	ldr	r2, [sp, #8]
   23530:	ldr	r3, [sp, #4]
   23534:	movw	r0, #0
   23538:	bl	234a0 <__assert_fail@plt+0x1200c>
   2353c:	mov	sp, fp
   23540:	pop	{fp, pc}
   23544:	push	{fp, lr}
   23548:	mov	fp, sp
   2354c:	sub	sp, sp, #72	; 0x48
   23550:	movw	r3, #25000	; 0x61a8
   23554:	movt	r3, #5
   23558:	str	r0, [fp, #-4]
   2355c:	str	r1, [fp, #-8]
   23560:	strb	r2, [fp, #-9]
   23564:	add	r0, sp, #12
   23568:	mov	r1, r0
   2356c:	str	r0, [sp, #8]
   23570:	mov	r0, r1
   23574:	mov	r1, r3
   23578:	movw	r2, #48	; 0x30
   2357c:	bl	11248 <memcpy@plt>
   23580:	ldr	r0, [sp, #8]
   23584:	ldrb	r1, [fp, #-9]
   23588:	movw	r2, #1
   2358c:	bl	21454 <__assert_fail@plt+0xffc0>
   23590:	ldr	r1, [fp, #-4]
   23594:	ldr	r2, [fp, #-8]
   23598:	movw	r3, #0
   2359c:	str	r0, [sp, #4]
   235a0:	mov	r0, r3
   235a4:	add	r3, sp, #12
   235a8:	bl	230b8 <__assert_fail@plt+0x11c24>
   235ac:	mov	sp, fp
   235b0:	pop	{fp, pc}
   235b4:	push	{fp, lr}
   235b8:	mov	fp, sp
   235bc:	sub	sp, sp, #8
   235c0:	str	r0, [sp, #4]
   235c4:	strb	r1, [sp, #3]
   235c8:	ldr	r0, [sp, #4]
   235cc:	mvn	r1, #0
   235d0:	ldrb	r2, [sp, #3]
   235d4:	bl	23544 <__assert_fail@plt+0x120b0>
   235d8:	mov	sp, fp
   235dc:	pop	{fp, pc}
   235e0:	push	{fp, lr}
   235e4:	mov	fp, sp
   235e8:	sub	sp, sp, #8
   235ec:	str	r0, [sp, #4]
   235f0:	ldr	r0, [sp, #4]
   235f4:	movw	r1, #58	; 0x3a
   235f8:	and	r1, r1, #255	; 0xff
   235fc:	bl	235b4 <__assert_fail@plt+0x12120>
   23600:	mov	sp, fp
   23604:	pop	{fp, pc}
   23608:	push	{fp, lr}
   2360c:	mov	fp, sp
   23610:	sub	sp, sp, #8
   23614:	str	r0, [sp, #4]
   23618:	str	r1, [sp]
   2361c:	ldr	r0, [sp, #4]
   23620:	ldr	r1, [sp]
   23624:	movw	r2, #58	; 0x3a
   23628:	and	r2, r2, #255	; 0xff
   2362c:	bl	23544 <__assert_fail@plt+0x120b0>
   23630:	mov	sp, fp
   23634:	pop	{fp, pc}
   23638:	push	{fp, lr}
   2363c:	mov	fp, sp
   23640:	sub	sp, sp, #120	; 0x78
   23644:	str	r0, [fp, #-4]
   23648:	str	r1, [fp, #-8]
   2364c:	str	r2, [fp, #-12]
   23650:	ldr	r1, [fp, #-8]
   23654:	add	r0, sp, #12
   23658:	bl	23450 <__assert_fail@plt+0x11fbc>
   2365c:	add	r0, sp, #60	; 0x3c
   23660:	mov	r1, r0
   23664:	add	r2, sp, #12
   23668:	str	r0, [sp, #8]
   2366c:	mov	r0, r1
   23670:	mov	r1, r2
   23674:	movw	r2, #48	; 0x30
   23678:	bl	11248 <memcpy@plt>
   2367c:	ldr	r0, [sp, #8]
   23680:	movw	r1, #58	; 0x3a
   23684:	and	r1, r1, #255	; 0xff
   23688:	movw	r2, #1
   2368c:	bl	21454 <__assert_fail@plt+0xffc0>
   23690:	ldr	r1, [fp, #-4]
   23694:	ldr	r2, [fp, #-12]
   23698:	str	r0, [sp, #4]
   2369c:	mov	r0, r1
   236a0:	mov	r1, r2
   236a4:	mvn	r2, #0
   236a8:	add	r3, sp, #60	; 0x3c
   236ac:	bl	230b8 <__assert_fail@plt+0x11c24>
   236b0:	mov	sp, fp
   236b4:	pop	{fp, pc}
   236b8:	push	{fp, lr}
   236bc:	mov	fp, sp
   236c0:	sub	sp, sp, #24
   236c4:	str	r0, [fp, #-4]
   236c8:	str	r1, [fp, #-8]
   236cc:	str	r2, [sp, #12]
   236d0:	str	r3, [sp, #8]
   236d4:	ldr	r0, [fp, #-4]
   236d8:	ldr	r1, [fp, #-8]
   236dc:	ldr	r2, [sp, #12]
   236e0:	ldr	r3, [sp, #8]
   236e4:	mvn	ip, #0
   236e8:	str	ip, [sp]
   236ec:	bl	236f8 <__assert_fail@plt+0x12264>
   236f0:	mov	sp, fp
   236f4:	pop	{fp, pc}
   236f8:	push	{fp, lr}
   236fc:	mov	fp, sp
   23700:	sub	sp, sp, #72	; 0x48
   23704:	ldr	ip, [fp, #8]
   23708:	movw	lr, #25000	; 0x61a8
   2370c:	movt	lr, #5
   23710:	str	r0, [fp, #-4]
   23714:	str	r1, [fp, #-8]
   23718:	str	r2, [fp, #-12]
   2371c:	str	r3, [fp, #-16]
   23720:	add	r0, sp, #8
   23724:	mov	r1, r0
   23728:	str	r0, [sp, #4]
   2372c:	mov	r0, r1
   23730:	mov	r1, lr
   23734:	movw	r2, #48	; 0x30
   23738:	str	ip, [sp]
   2373c:	bl	11248 <memcpy@plt>
   23740:	ldr	r1, [fp, #-8]
   23744:	ldr	r2, [fp, #-12]
   23748:	ldr	r0, [sp, #4]
   2374c:	bl	21554 <__assert_fail@plt+0x100c0>
   23750:	ldr	r0, [fp, #-4]
   23754:	ldr	r1, [fp, #-16]
   23758:	ldr	r2, [fp, #8]
   2375c:	add	r3, sp, #8
   23760:	bl	230b8 <__assert_fail@plt+0x11c24>
   23764:	mov	sp, fp
   23768:	pop	{fp, pc}
   2376c:	push	{fp, lr}
   23770:	mov	fp, sp
   23774:	sub	sp, sp, #16
   23778:	str	r0, [fp, #-4]
   2377c:	str	r1, [sp, #8]
   23780:	str	r2, [sp, #4]
   23784:	ldr	r1, [fp, #-4]
   23788:	ldr	r2, [sp, #8]
   2378c:	ldr	r3, [sp, #4]
   23790:	movw	r0, #0
   23794:	bl	236b8 <__assert_fail@plt+0x12224>
   23798:	mov	sp, fp
   2379c:	pop	{fp, pc}
   237a0:	push	{fp, lr}
   237a4:	mov	fp, sp
   237a8:	sub	sp, sp, #24
   237ac:	str	r0, [fp, #-4]
   237b0:	str	r1, [fp, #-8]
   237b4:	str	r2, [sp, #12]
   237b8:	str	r3, [sp, #8]
   237bc:	ldr	r1, [fp, #-4]
   237c0:	ldr	r2, [fp, #-8]
   237c4:	ldr	r3, [sp, #12]
   237c8:	ldr	r0, [sp, #8]
   237cc:	movw	ip, #0
   237d0:	str	r0, [sp, #4]
   237d4:	mov	r0, ip
   237d8:	ldr	ip, [sp, #4]
   237dc:	str	ip, [sp]
   237e0:	bl	236f8 <__assert_fail@plt+0x12264>
   237e4:	mov	sp, fp
   237e8:	pop	{fp, pc}
   237ec:	push	{fp, lr}
   237f0:	mov	fp, sp
   237f4:	sub	sp, sp, #16
   237f8:	str	r0, [fp, #-4]
   237fc:	str	r1, [sp, #8]
   23800:	str	r2, [sp, #4]
   23804:	ldr	r0, [fp, #-4]
   23808:	ldr	r1, [sp, #8]
   2380c:	ldr	r2, [sp, #4]
   23810:	movw	r3, #24900	; 0x6144
   23814:	movt	r3, #5
   23818:	bl	230b8 <__assert_fail@plt+0x11c24>
   2381c:	mov	sp, fp
   23820:	pop	{fp, pc}
   23824:	push	{fp, lr}
   23828:	mov	fp, sp
   2382c:	sub	sp, sp, #8
   23830:	str	r0, [sp, #4]
   23834:	str	r1, [sp]
   23838:	ldr	r1, [sp, #4]
   2383c:	ldr	r2, [sp]
   23840:	movw	r0, #0
   23844:	bl	237ec <__assert_fail@plt+0x12358>
   23848:	mov	sp, fp
   2384c:	pop	{fp, pc}
   23850:	push	{fp, lr}
   23854:	mov	fp, sp
   23858:	sub	sp, sp, #8
   2385c:	str	r0, [sp, #4]
   23860:	str	r1, [sp]
   23864:	ldr	r0, [sp, #4]
   23868:	ldr	r1, [sp]
   2386c:	mvn	r2, #0
   23870:	bl	237ec <__assert_fail@plt+0x12358>
   23874:	mov	sp, fp
   23878:	pop	{fp, pc}
   2387c:	push	{fp, lr}
   23880:	mov	fp, sp
   23884:	sub	sp, sp, #8
   23888:	str	r0, [sp, #4]
   2388c:	ldr	r1, [sp, #4]
   23890:	movw	r0, #0
   23894:	bl	23850 <__assert_fail@plt+0x123bc>
   23898:	mov	sp, fp
   2389c:	pop	{fp, pc}
   238a0:	push	{fp, lr}
   238a4:	mov	fp, sp
   238a8:	sub	sp, sp, #24
   238ac:	str	r0, [fp, #-8]
   238b0:	str	r1, [sp, #12]
   238b4:	ldr	r0, [fp, #-8]
   238b8:	bl	11380 <gettext@plt>
   238bc:	str	r0, [sp, #8]
   238c0:	ldr	r0, [sp, #8]
   238c4:	ldr	r1, [fp, #-8]
   238c8:	cmp	r0, r1
   238cc:	beq	238dc <__assert_fail@plt+0x12448>
   238d0:	ldr	r0, [sp, #8]
   238d4:	str	r0, [fp, #-4]
   238d8:	b	239a8 <__assert_fail@plt+0x12514>
   238dc:	bl	41778 <__assert_fail@plt+0x302e4>
   238e0:	str	r0, [sp, #4]
   238e4:	ldr	r0, [sp, #4]
   238e8:	movw	r1, #22616	; 0x5858
   238ec:	movt	r1, #4
   238f0:	bl	3fcec <__assert_fail@plt+0x2e858>
   238f4:	cmp	r0, #0
   238f8:	bne	23930 <__assert_fail@plt+0x1249c>
   238fc:	ldr	r0, [fp, #-8]
   23900:	ldrb	r0, [r0]
   23904:	cmp	r0, #96	; 0x60
   23908:	movw	r0, #0
   2390c:	moveq	r0, #1
   23910:	tst	r0, #1
   23914:	movw	r0, #22626	; 0x5862
   23918:	movt	r0, #4
   2391c:	movw	r1, #22622	; 0x585e
   23920:	movt	r1, #4
   23924:	movne	r0, r1
   23928:	str	r0, [fp, #-4]
   2392c:	b	239a8 <__assert_fail@plt+0x12514>
   23930:	ldr	r0, [sp, #4]
   23934:	movw	r1, #22630	; 0x5866
   23938:	movt	r1, #4
   2393c:	bl	3fcec <__assert_fail@plt+0x2e858>
   23940:	cmp	r0, #0
   23944:	bne	2397c <__assert_fail@plt+0x124e8>
   23948:	ldr	r0, [fp, #-8]
   2394c:	ldrb	r0, [r0]
   23950:	cmp	r0, #96	; 0x60
   23954:	movw	r0, #0
   23958:	moveq	r0, #1
   2395c:	tst	r0, #1
   23960:	movw	r0, #22642	; 0x5872
   23964:	movt	r0, #4
   23968:	movw	r1, #22638	; 0x586e
   2396c:	movt	r1, #4
   23970:	movne	r0, r1
   23974:	str	r0, [fp, #-4]
   23978:	b	239a8 <__assert_fail@plt+0x12514>
   2397c:	ldr	r0, [sp, #12]
   23980:	cmp	r0, #9
   23984:	movw	r0, #0
   23988:	moveq	r0, #1
   2398c:	tst	r0, #1
   23990:	movw	r0, #17275	; 0x437b
   23994:	movt	r0, #4
   23998:	movw	r1, #22612	; 0x5854
   2399c:	movt	r1, #4
   239a0:	movne	r0, r1
   239a4:	str	r0, [fp, #-4]
   239a8:	ldr	r0, [fp, #-4]
   239ac:	mov	sp, fp
   239b0:	pop	{fp, pc}
   239b4:	push	{fp, lr}
   239b8:	mov	fp, sp
   239bc:	sub	sp, sp, #24
   239c0:	str	r0, [fp, #-8]
   239c4:	str	r1, [sp, #12]
   239c8:	str	r2, [sp, #8]
   239cc:	movw	r0, #25304	; 0x62d8
   239d0:	movt	r0, #5
   239d4:	ldr	r0, [r0]
   239d8:	and	r0, r0, #33554432	; 0x2000000
   239dc:	ldr	r1, [sp, #8]
   239e0:	ldrb	r2, [r1, #28]
   239e4:	and	r2, r2, #239	; 0xef
   239e8:	orr	r0, r2, r0, lsr #21
   239ec:	strb	r0, [r1, #28]
   239f0:	ldr	r0, [sp, #8]
   239f4:	ldrb	r1, [r0, #28]
   239f8:	and	r1, r1, #127	; 0x7f
   239fc:	movw	r2, #128	; 0x80
   23a00:	orr	r1, r1, r2
   23a04:	strb	r1, [r0, #28]
   23a08:	ldr	r0, [sp, #8]
   23a0c:	ldr	r1, [fp, #-8]
   23a10:	ldr	r2, [sp, #12]
   23a14:	movw	r3, #25304	; 0x62d8
   23a18:	movt	r3, #5
   23a1c:	ldr	r3, [r3]
   23a20:	bl	23a74 <__assert_fail@plt+0x125e0>
   23a24:	str	r0, [sp, #4]
   23a28:	ldr	r0, [sp, #4]
   23a2c:	cmp	r0, #0
   23a30:	bne	23a40 <__assert_fail@plt+0x125ac>
   23a34:	movw	r0, #0
   23a38:	str	r0, [fp, #-4]
   23a3c:	b	23a68 <__assert_fail@plt+0x125d4>
   23a40:	ldr	r0, [sp, #4]
   23a44:	movw	r1, #23116	; 0x5a4c
   23a48:	movt	r1, #4
   23a4c:	add	r0, r1, r0, lsl #2
   23a50:	ldr	r0, [r0]
   23a54:	movw	r1, #22732	; 0x58cc
   23a58:	movt	r1, #4
   23a5c:	add	r0, r1, r0
   23a60:	bl	11380 <gettext@plt>
   23a64:	str	r0, [fp, #-4]
   23a68:	ldr	r0, [fp, #-4]
   23a6c:	mov	sp, fp
   23a70:	pop	{fp, pc}
   23a74:	push	{r4, sl, fp, lr}
   23a78:	add	fp, sp, #8
   23a7c:	sub	sp, sp, #144	; 0x90
   23a80:	str	r0, [fp, #-16]
   23a84:	str	r1, [fp, #-20]	; 0xffffffec
   23a88:	str	r2, [fp, #-24]	; 0xffffffe8
   23a8c:	str	r3, [fp, #-28]	; 0xffffffe4
   23a90:	mov	r0, #0
   23a94:	str	r0, [fp, #-32]	; 0xffffffe0
   23a98:	ldr	r1, [fp, #-16]
   23a9c:	ldrb	r2, [r1, #28]
   23aa0:	and	r2, r2, #247	; 0xf7
   23aa4:	strb	r2, [r1, #28]
   23aa8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   23aac:	ldr	r2, [fp, #-16]
   23ab0:	str	r1, [r2, #12]
   23ab4:	ldr	r1, [fp, #-16]
   23ab8:	ldrb	r2, [r1, #28]
   23abc:	and	r2, r2, #191	; 0xbf
   23ac0:	strb	r2, [r1, #28]
   23ac4:	ldr	r1, [fp, #-16]
   23ac8:	ldrb	r2, [r1, #28]
   23acc:	and	r2, r2, #223	; 0xdf
   23ad0:	strb	r2, [r1, #28]
   23ad4:	ldr	r1, [fp, #-16]
   23ad8:	str	r0, [r1, #8]
   23adc:	ldr	r1, [fp, #-16]
   23ae0:	str	r0, [r1, #24]
   23ae4:	ldr	r0, [fp, #-16]
   23ae8:	ldrb	r1, [r0, #28]
   23aec:	and	r1, r1, #254	; 0xfe
   23af0:	strb	r1, [r0, #28]
   23af4:	ldr	r0, [fp, #-16]
   23af8:	ldrb	r1, [r0, #28]
   23afc:	bic	r1, r1, #6
   23b00:	strb	r1, [r0, #28]
   23b04:	ldr	r0, [fp, #-16]
   23b08:	ldr	r0, [r0]
   23b0c:	str	r0, [fp, #-36]	; 0xffffffdc
   23b10:	ldr	r0, [fp, #-16]
   23b14:	ldr	r0, [r0, #4]
   23b18:	cmp	r0, #160	; 0xa0
   23b1c:	bcs	23b68 <__assert_fail@plt+0x126d4>
   23b20:	ldr	r0, [fp, #-16]
   23b24:	ldr	r0, [r0]
   23b28:	movw	r1, #160	; 0xa0
   23b2c:	bl	3fc48 <__assert_fail@plt+0x2e7b4>
   23b30:	str	r0, [fp, #-36]	; 0xffffffdc
   23b34:	ldr	r0, [fp, #-36]	; 0xffffffdc
   23b38:	movw	r1, #0
   23b3c:	cmp	r0, r1
   23b40:	bne	23b50 <__assert_fail@plt+0x126bc>
   23b44:	movw	r0, #12
   23b48:	str	r0, [fp, #-12]
   23b4c:	b	23e40 <__assert_fail@plt+0x129ac>
   23b50:	ldr	r0, [fp, #-16]
   23b54:	movw	r1, #160	; 0xa0
   23b58:	str	r1, [r0, #4]
   23b5c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   23b60:	ldr	r1, [fp, #-16]
   23b64:	str	r0, [r1]
   23b68:	ldr	r0, [fp, #-16]
   23b6c:	movw	r1, #160	; 0xa0
   23b70:	str	r1, [r0, #8]
   23b74:	ldr	r0, [fp, #-36]	; 0xffffffdc
   23b78:	ldr	r1, [fp, #-24]	; 0xffffffe8
   23b7c:	bl	26878 <__assert_fail@plt+0x153e4>
   23b80:	str	r0, [fp, #-32]	; 0xffffffe0
   23b84:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23b88:	cmp	r0, #0
   23b8c:	movw	r0, #0
   23b90:	str	r0, [sp, #28]
   23b94:	bne	23bf8 <__assert_fail@plt+0x12764>
   23b98:	movw	r0, #0
   23b9c:	movt	r0, #0
   23ba0:	cmp	r0, #0
   23ba4:	bne	23bc0 <__assert_fail@plt+0x1272c>
   23ba8:	b	23bac <__assert_fail@plt+0x12718>
   23bac:	movw	r0, #0
   23bb0:	movt	r0, #0
   23bb4:	cmp	r0, #0
   23bb8:	beq	23bd8 <__assert_fail@plt+0x12744>
   23bbc:	b	23bc0 <__assert_fail@plt+0x1272c>
   23bc0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   23bc4:	add	r0, r0, #136	; 0x88
   23bc8:	movw	r1, #0
   23bcc:	bl	11260 <pthread_mutex_init@plt>
   23bd0:	str	r0, [sp, #24]
   23bd4:	b	23be4 <__assert_fail@plt+0x12750>
   23bd8:	movw	r0, #0
   23bdc:	str	r0, [sp, #24]
   23be0:	b	23be4 <__assert_fail@plt+0x12750>
   23be4:	ldr	r0, [sp, #24]
   23be8:	cmp	r0, #0
   23bec:	movw	r0, #0
   23bf0:	movne	r0, #1
   23bf4:	str	r0, [sp, #28]
   23bf8:	ldr	r0, [sp, #28]
   23bfc:	tst	r0, #1
   23c00:	beq	23c0c <__assert_fail@plt+0x12778>
   23c04:	movw	r0, #12
   23c08:	str	r0, [fp, #-32]	; 0xffffffe0
   23c0c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23c10:	cmp	r0, #0
   23c14:	beq	23c40 <__assert_fail@plt+0x127ac>
   23c18:	ldr	r0, [fp, #-36]	; 0xffffffdc
   23c1c:	bl	24a88 <__assert_fail@plt+0x135f4>
   23c20:	ldr	r0, [fp, #-16]
   23c24:	movw	lr, #0
   23c28:	str	lr, [r0]
   23c2c:	ldr	r0, [fp, #-16]
   23c30:	str	lr, [r0, #4]
   23c34:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23c38:	str	r0, [fp, #-12]
   23c3c:	b	23e40 <__assert_fail@plt+0x129ac>
   23c40:	ldr	r1, [fp, #-20]	; 0xffffffec
   23c44:	ldr	r2, [fp, #-24]	; 0xffffffe8
   23c48:	ldr	r0, [fp, #-16]
   23c4c:	ldr	r3, [r0, #20]
   23c50:	ldr	r0, [fp, #-28]	; 0xffffffe4
   23c54:	and	r0, r0, #4194304	; 0x400000
   23c58:	cmp	r0, #0
   23c5c:	movw	r0, #0
   23c60:	movne	r0, #1
   23c64:	ldr	ip, [fp, #-36]	; 0xffffffdc
   23c68:	add	lr, sp, #32
   23c6c:	str	r0, [sp, #20]
   23c70:	mov	r0, lr
   23c74:	ldr	lr, [sp, #20]
   23c78:	and	r4, lr, #1
   23c7c:	str	r4, [sp]
   23c80:	str	ip, [sp, #4]
   23c84:	bl	26e84 <__assert_fail@plt+0x159f0>
   23c88:	str	r0, [fp, #-32]	; 0xffffffe0
   23c8c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23c90:	cmp	r0, #0
   23c94:	beq	23d14 <__assert_fail@plt+0x12880>
   23c98:	b	23c9c <__assert_fail@plt+0x12808>
   23c9c:	ldr	r0, [fp, #-16]
   23ca0:	bl	27098 <__assert_fail@plt+0x15c04>
   23ca4:	add	r0, sp, #32
   23ca8:	bl	27130 <__assert_fail@plt+0x15c9c>
   23cac:	movw	r0, #0
   23cb0:	movt	r0, #0
   23cb4:	cmp	r0, #0
   23cb8:	bne	23cd4 <__assert_fail@plt+0x12840>
   23cbc:	b	23cc0 <__assert_fail@plt+0x1282c>
   23cc0:	movw	r0, #0
   23cc4:	movt	r0, #0
   23cc8:	cmp	r0, #0
   23ccc:	beq	23ce8 <__assert_fail@plt+0x12854>
   23cd0:	b	23cd4 <__assert_fail@plt+0x12840>
   23cd4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   23cd8:	add	r0, r0, #136	; 0x88
   23cdc:	bl	111f4 <pthread_mutex_destroy@plt>
   23ce0:	str	r0, [sp, #16]
   23ce4:	b	23cec <__assert_fail@plt+0x12858>
   23ce8:	b	23cec <__assert_fail@plt+0x12858>
   23cec:	ldr	r0, [fp, #-36]	; 0xffffffdc
   23cf0:	bl	24a88 <__assert_fail@plt+0x135f4>
   23cf4:	ldr	r0, [fp, #-16]
   23cf8:	movw	lr, #0
   23cfc:	str	lr, [r0]
   23d00:	ldr	r0, [fp, #-16]
   23d04:	str	lr, [r0, #4]
   23d08:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23d0c:	str	r0, [fp, #-12]
   23d10:	b	23e40 <__assert_fail@plt+0x129ac>
   23d14:	ldr	r0, [fp, #-16]
   23d18:	movw	r1, #0
   23d1c:	str	r1, [r0, #24]
   23d20:	ldr	r1, [fp, #-16]
   23d24:	ldr	r2, [fp, #-28]	; 0xffffffe4
   23d28:	add	r0, sp, #32
   23d2c:	sub	r3, fp, #32
   23d30:	bl	2717c <__assert_fail@plt+0x15ce8>
   23d34:	ldr	r1, [fp, #-36]	; 0xffffffdc
   23d38:	str	r0, [r1, #52]	; 0x34
   23d3c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   23d40:	ldr	r0, [r0, #52]	; 0x34
   23d44:	movw	r1, #0
   23d48:	cmp	r0, r1
   23d4c:	bne	23d54 <__assert_fail@plt+0x128c0>
   23d50:	b	23c9c <__assert_fail@plt+0x12808>
   23d54:	ldr	r0, [fp, #-16]
   23d58:	bl	272f8 <__assert_fail@plt+0x15e64>
   23d5c:	str	r0, [fp, #-32]	; 0xffffffe0
   23d60:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23d64:	cmp	r0, #0
   23d68:	beq	23d70 <__assert_fail@plt+0x128dc>
   23d6c:	b	23c9c <__assert_fail@plt+0x12808>
   23d70:	ldr	r0, [fp, #-36]	; 0xffffffdc
   23d74:	ldrb	r0, [r0, #88]	; 0x58
   23d78:	ubfx	r0, r0, #2, #1
   23d7c:	and	r0, r0, #255	; 0xff
   23d80:	cmp	r0, #0
   23d84:	beq	23db4 <__assert_fail@plt+0x12920>
   23d88:	ldr	r0, [fp, #-28]	; 0xffffffe4
   23d8c:	and	r0, r0, #4194304	; 0x400000
   23d90:	cmp	r0, #0
   23d94:	bne	23db4 <__assert_fail@plt+0x12920>
   23d98:	ldr	r0, [fp, #-16]
   23d9c:	ldr	r0, [r0, #20]
   23da0:	movw	r1, #0
   23da4:	cmp	r0, r1
   23da8:	bne	23db4 <__assert_fail@plt+0x12920>
   23dac:	ldr	r0, [fp, #-36]	; 0xffffffdc
   23db0:	bl	276d0 <__assert_fail@plt+0x1623c>
   23db4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   23db8:	bl	279dc <__assert_fail@plt+0x16548>
   23dbc:	str	r0, [fp, #-32]	; 0xffffffe0
   23dc0:	ldr	r0, [fp, #-16]
   23dc4:	bl	27098 <__assert_fail@plt+0x15c04>
   23dc8:	add	r0, sp, #32
   23dcc:	bl	27130 <__assert_fail@plt+0x15c9c>
   23dd0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23dd4:	cmp	r0, #0
   23dd8:	beq	23e38 <__assert_fail@plt+0x129a4>
   23ddc:	movw	r0, #0
   23de0:	movt	r0, #0
   23de4:	cmp	r0, #0
   23de8:	bne	23e04 <__assert_fail@plt+0x12970>
   23dec:	b	23df0 <__assert_fail@plt+0x1295c>
   23df0:	movw	r0, #0
   23df4:	movt	r0, #0
   23df8:	cmp	r0, #0
   23dfc:	beq	23e18 <__assert_fail@plt+0x12984>
   23e00:	b	23e04 <__assert_fail@plt+0x12970>
   23e04:	ldr	r0, [fp, #-36]	; 0xffffffdc
   23e08:	add	r0, r0, #136	; 0x88
   23e0c:	bl	111f4 <pthread_mutex_destroy@plt>
   23e10:	str	r0, [sp, #12]
   23e14:	b	23e1c <__assert_fail@plt+0x12988>
   23e18:	b	23e1c <__assert_fail@plt+0x12988>
   23e1c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   23e20:	bl	24a88 <__assert_fail@plt+0x135f4>
   23e24:	ldr	r0, [fp, #-16]
   23e28:	movw	lr, #0
   23e2c:	str	lr, [r0]
   23e30:	ldr	r0, [fp, #-16]
   23e34:	str	lr, [r0, #4]
   23e38:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23e3c:	str	r0, [fp, #-12]
   23e40:	ldr	r0, [fp, #-12]
   23e44:	sub	sp, fp, #8
   23e48:	pop	{r4, sl, fp, pc}
   23e4c:	sub	sp, sp, #8
   23e50:	str	r0, [sp, #4]
   23e54:	movw	r0, #25304	; 0x62d8
   23e58:	movt	r0, #5
   23e5c:	ldr	r1, [r0]
   23e60:	str	r1, [sp]
   23e64:	ldr	r1, [sp, #4]
   23e68:	str	r1, [r0]
   23e6c:	ldr	r0, [sp]
   23e70:	add	sp, sp, #8
   23e74:	bx	lr
   23e78:	push	{fp, lr}
   23e7c:	mov	fp, sp
   23e80:	sub	sp, sp, #16
   23e84:	str	r0, [fp, #-4]
   23e88:	ldr	r0, [fp, #-4]
   23e8c:	ldr	r0, [r0]
   23e90:	str	r0, [sp, #8]
   23e94:	ldr	r0, [fp, #-4]
   23e98:	ldr	r0, [r0, #16]
   23e9c:	str	r0, [sp, #4]
   23ea0:	ldr	r0, [sp, #4]
   23ea4:	movw	r1, #0
   23ea8:	and	r1, r1, #255	; 0xff
   23eac:	movw	r2, #256	; 0x100
   23eb0:	bl	113d4 <memset@plt>
   23eb4:	ldr	r0, [fp, #-4]
   23eb8:	ldr	r1, [sp, #8]
   23ebc:	ldr	r1, [r1, #36]	; 0x24
   23ec0:	ldr	r2, [sp, #4]
   23ec4:	bl	23f70 <__assert_fail@plt+0x12adc>
   23ec8:	ldr	r0, [sp, #8]
   23ecc:	ldr	r0, [r0, #36]	; 0x24
   23ed0:	ldr	r1, [sp, #8]
   23ed4:	ldr	r1, [r1, #40]	; 0x28
   23ed8:	cmp	r0, r1
   23edc:	beq	23ef4 <__assert_fail@plt+0x12a60>
   23ee0:	ldr	r0, [fp, #-4]
   23ee4:	ldr	r1, [sp, #8]
   23ee8:	ldr	r1, [r1, #40]	; 0x28
   23eec:	ldr	r2, [sp, #4]
   23ef0:	bl	23f70 <__assert_fail@plt+0x12adc>
   23ef4:	ldr	r0, [sp, #8]
   23ef8:	ldr	r0, [r0, #36]	; 0x24
   23efc:	ldr	r1, [sp, #8]
   23f00:	ldr	r1, [r1, #44]	; 0x2c
   23f04:	cmp	r0, r1
   23f08:	beq	23f20 <__assert_fail@plt+0x12a8c>
   23f0c:	ldr	r0, [fp, #-4]
   23f10:	ldr	r1, [sp, #8]
   23f14:	ldr	r1, [r1, #44]	; 0x2c
   23f18:	ldr	r2, [sp, #4]
   23f1c:	bl	23f70 <__assert_fail@plt+0x12adc>
   23f20:	ldr	r0, [sp, #8]
   23f24:	ldr	r0, [r0, #36]	; 0x24
   23f28:	ldr	r1, [sp, #8]
   23f2c:	ldr	r1, [r1, #48]	; 0x30
   23f30:	cmp	r0, r1
   23f34:	beq	23f4c <__assert_fail@plt+0x12ab8>
   23f38:	ldr	r0, [fp, #-4]
   23f3c:	ldr	r1, [sp, #8]
   23f40:	ldr	r1, [r1, #48]	; 0x30
   23f44:	ldr	r2, [sp, #4]
   23f48:	bl	23f70 <__assert_fail@plt+0x12adc>
   23f4c:	ldr	r0, [fp, #-4]
   23f50:	ldrb	r1, [r0, #28]
   23f54:	bic	r1, r1, #8
   23f58:	movw	r2, #8
   23f5c:	orr	r1, r1, r2
   23f60:	strb	r1, [r0, #28]
   23f64:	movw	r0, #0
   23f68:	mov	sp, fp
   23f6c:	pop	{fp, pc}
   23f70:	push	{r4, r5, fp, lr}
   23f74:	add	fp, sp, #8
   23f78:	sub	sp, sp, #504	; 0x1f8
   23f7c:	str	r0, [fp, #-84]	; 0xffffffac
   23f80:	str	r1, [fp, #-88]	; 0xffffffa8
   23f84:	str	r2, [fp, #-92]	; 0xffffffa4
   23f88:	ldr	r0, [fp, #-84]	; 0xffffffac
   23f8c:	ldr	r0, [r0]
   23f90:	str	r0, [fp, #-96]	; 0xffffffa0
   23f94:	ldr	r0, [fp, #-96]	; 0xffffffa0
   23f98:	ldr	r0, [r0, #92]	; 0x5c
   23f9c:	cmp	r0, #1
   23fa0:	movw	r0, #0
   23fa4:	str	r0, [sp, #60]	; 0x3c
   23fa8:	bne	23fc8 <__assert_fail@plt+0x12b34>
   23fac:	ldr	r0, [fp, #-84]	; 0xffffffac
   23fb0:	ldr	r0, [r0, #12]
   23fb4:	and	r0, r0, #4194304	; 0x400000
   23fb8:	cmp	r0, #0
   23fbc:	movw	r0, #0
   23fc0:	movne	r0, #1
   23fc4:	str	r0, [sp, #60]	; 0x3c
   23fc8:	ldr	r0, [sp, #60]	; 0x3c
   23fcc:	and	r0, r0, #1
   23fd0:	strb	r0, [fp, #-101]	; 0xffffff9b
   23fd4:	movw	r0, #0
   23fd8:	str	r0, [fp, #-100]	; 0xffffff9c
   23fdc:	ldr	r0, [fp, #-100]	; 0xffffff9c
   23fe0:	ldr	r1, [fp, #-88]	; 0xffffffa8
   23fe4:	ldr	r1, [r1, #8]
   23fe8:	cmp	r0, r1
   23fec:	bge	246ec <__assert_fail@plt+0x13258>
   23ff0:	ldr	r0, [fp, #-88]	; 0xffffffa8
   23ff4:	ldr	r0, [r0, #12]
   23ff8:	ldr	r1, [fp, #-100]	; 0xffffff9c
   23ffc:	ldr	r0, [r0, r1, lsl #2]
   24000:	str	r0, [fp, #-108]	; 0xffffff94
   24004:	ldr	r0, [fp, #-96]	; 0xffffffa0
   24008:	ldr	r0, [r0]
   2400c:	ldr	r1, [fp, #-108]	; 0xffffff94
   24010:	add	r0, r0, r1, lsl #3
   24014:	ldr	r0, [r0, #4]
   24018:	and	r0, r0, #255	; 0xff
   2401c:	str	r0, [fp, #-112]	; 0xffffff90
   24020:	ldr	r0, [fp, #-112]	; 0xffffff90
   24024:	cmp	r0, #1
   24028:	bne	2428c <__assert_fail@plt+0x12df8>
   2402c:	ldr	r0, [fp, #-92]	; 0xffffffa4
   24030:	ldrb	r1, [fp, #-101]	; 0xffffff9b
   24034:	ldr	r2, [fp, #-96]	; 0xffffffa0
   24038:	ldr	r2, [r2]
   2403c:	ldr	r3, [fp, #-108]	; 0xffffff94
   24040:	add	r2, r2, r3, lsl #3
   24044:	ldrb	r2, [r2]
   24048:	str	r0, [fp, #-72]	; 0xffffffb8
   2404c:	and	r0, r1, #1
   24050:	strb	r0, [fp, #-73]	; 0xffffffb7
   24054:	str	r2, [fp, #-80]	; 0xffffffb0
   24058:	ldr	r0, [fp, #-72]	; 0xffffffb8
   2405c:	ldr	r1, [fp, #-80]	; 0xffffffb0
   24060:	add	r0, r0, r1
   24064:	movw	r1, #1
   24068:	strb	r1, [r0]
   2406c:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   24070:	tst	r0, #1
   24074:	beq	2409c <__assert_fail@plt+0x12c08>
   24078:	ldr	r0, [fp, #-72]	; 0xffffffb8
   2407c:	ldr	r1, [fp, #-80]	; 0xffffffb0
   24080:	str	r0, [sp, #56]	; 0x38
   24084:	mov	r0, r1
   24088:	bl	11254 <tolower@plt>
   2408c:	ldr	r1, [sp, #56]	; 0x38
   24090:	add	r0, r1, r0
   24094:	movw	r1, #1
   24098:	strb	r1, [r0]
   2409c:	ldr	r0, [fp, #-84]	; 0xffffffac
   240a0:	ldr	r0, [r0, #12]
   240a4:	and	r0, r0, #4194304	; 0x400000
   240a8:	cmp	r0, #0
   240ac:	beq	24288 <__assert_fail@plt+0x12df4>
   240b0:	ldr	r0, [fp, #-96]	; 0xffffffa0
   240b4:	ldr	r0, [r0, #92]	; 0x5c
   240b8:	cmp	r0, #1
   240bc:	ble	24288 <__assert_fail@plt+0x12df4>
   240c0:	sub	r0, fp, #128	; 0x80
   240c4:	str	r0, [fp, #-132]	; 0xffffff7c
   240c8:	ldr	r0, [fp, #-96]	; 0xffffffa0
   240cc:	ldr	r0, [r0]
   240d0:	ldr	r1, [fp, #-108]	; 0xffffff94
   240d4:	add	r0, r0, r1, lsl #3
   240d8:	ldrb	r0, [r0]
   240dc:	ldr	r1, [fp, #-132]	; 0xffffff7c
   240e0:	add	r2, r1, #1
   240e4:	str	r2, [fp, #-132]	; 0xffffff7c
   240e8:	strb	r0, [r1]
   240ec:	ldr	r0, [fp, #-108]	; 0xffffff94
   240f0:	add	r0, r0, #1
   240f4:	str	r0, [fp, #-108]	; 0xffffff94
   240f8:	ldr	r1, [fp, #-96]	; 0xffffffa0
   240fc:	ldr	r1, [r1, #8]
   24100:	cmp	r0, r1
   24104:	movw	r0, #0
   24108:	str	r0, [sp, #52]	; 0x34
   2410c:	bcs	24164 <__assert_fail@plt+0x12cd0>
   24110:	ldr	r0, [fp, #-96]	; 0xffffffa0
   24114:	ldr	r0, [r0]
   24118:	ldr	r1, [fp, #-108]	; 0xffffff94
   2411c:	add	r0, r0, r1, lsl #3
   24120:	ldr	r0, [r0, #4]
   24124:	and	r0, r0, #255	; 0xff
   24128:	cmp	r0, #1
   2412c:	movw	r0, #0
   24130:	str	r0, [sp, #52]	; 0x34
   24134:	bne	24164 <__assert_fail@plt+0x12cd0>
   24138:	ldr	r0, [fp, #-96]	; 0xffffffa0
   2413c:	ldr	r0, [r0]
   24140:	ldr	r1, [fp, #-108]	; 0xffffff94
   24144:	add	r0, r0, r1, lsl #3
   24148:	ldr	r0, [r0, #4]
   2414c:	lsr	r0, r0, #21
   24150:	and	r0, r0, #1
   24154:	cmp	r0, #0
   24158:	movw	r0, #0
   2415c:	movne	r0, #1
   24160:	str	r0, [sp, #52]	; 0x34
   24164:	ldr	r0, [sp, #52]	; 0x34
   24168:	tst	r0, #1
   2416c:	beq	24198 <__assert_fail@plt+0x12d04>
   24170:	ldr	r0, [fp, #-96]	; 0xffffffa0
   24174:	ldr	r0, [r0]
   24178:	ldr	r1, [fp, #-108]	; 0xffffff94
   2417c:	add	r0, r0, r1, lsl #3
   24180:	ldrb	r0, [r0]
   24184:	ldr	r1, [fp, #-132]	; 0xffffff7c
   24188:	add	r2, r1, #1
   2418c:	str	r2, [fp, #-132]	; 0xffffff7c
   24190:	strb	r0, [r1]
   24194:	b	240ec <__assert_fail@plt+0x12c58>
   24198:	sub	r0, fp, #128	; 0x80
   2419c:	sub	r1, fp, #144	; 0x90
   241a0:	mov	r2, r1
   241a4:	str	r0, [sp, #48]	; 0x30
   241a8:	mov	r0, r2
   241ac:	movw	r2, #0
   241b0:	and	r2, r2, #255	; 0xff
   241b4:	str	r1, [sp, #44]	; 0x2c
   241b8:	mov	r1, r2
   241bc:	movw	r2, #8
   241c0:	bl	113d4 <memset@plt>
   241c4:	ldr	r0, [fp, #-132]	; 0xffffff7c
   241c8:	ldr	r1, [sp, #48]	; 0x30
   241cc:	sub	r2, r0, r1
   241d0:	sub	r0, fp, #136	; 0x88
   241d4:	ldr	r3, [sp, #44]	; 0x2c
   241d8:	bl	4193c <__assert_fail@plt+0x304a8>
   241dc:	sub	r1, fp, #128	; 0x80
   241e0:	ldr	r2, [fp, #-132]	; 0xffffff7c
   241e4:	sub	r1, r2, r1
   241e8:	cmp	r0, r1
   241ec:	bne	24284 <__assert_fail@plt+0x12df0>
   241f0:	sub	r0, fp, #128	; 0x80
   241f4:	ldr	r1, [fp, #-136]	; 0xffffff78
   241f8:	str	r0, [sp, #40]	; 0x28
   241fc:	mov	r0, r1
   24200:	bl	1126c <towlower@plt>
   24204:	ldr	r1, [sp, #40]	; 0x28
   24208:	str	r0, [sp, #36]	; 0x24
   2420c:	mov	r0, r1
   24210:	ldr	r1, [sp, #36]	; 0x24
   24214:	sub	r2, fp, #144	; 0x90
   24218:	bl	111b8 <wcrtomb@plt>
   2421c:	cmn	r0, #1
   24220:	beq	24284 <__assert_fail@plt+0x12df0>
   24224:	ldr	r0, [fp, #-92]	; 0xffffffa4
   24228:	ldrb	r1, [fp, #-128]	; 0xffffff80
   2422c:	str	r0, [fp, #-60]	; 0xffffffc4
   24230:	movw	r0, #0
   24234:	strb	r0, [fp, #-61]	; 0xffffffc3
   24238:	str	r1, [fp, #-68]	; 0xffffffbc
   2423c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   24240:	ldr	r1, [fp, #-68]	; 0xffffffbc
   24244:	add	r0, r0, r1
   24248:	movw	r1, #1
   2424c:	strb	r1, [r0]
   24250:	ldrb	r0, [fp, #-61]	; 0xffffffc3
   24254:	tst	r0, #1
   24258:	beq	24280 <__assert_fail@plt+0x12dec>
   2425c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   24260:	ldr	r1, [fp, #-68]	; 0xffffffbc
   24264:	str	r0, [sp, #32]
   24268:	mov	r0, r1
   2426c:	bl	11254 <tolower@plt>
   24270:	ldr	r1, [sp, #32]
   24274:	add	r0, r1, r0
   24278:	movw	r1, #1
   2427c:	strb	r1, [r0]
   24280:	b	24284 <__assert_fail@plt+0x12df0>
   24284:	b	24288 <__assert_fail@plt+0x12df4>
   24288:	b	246d8 <__assert_fail@plt+0x13244>
   2428c:	ldr	r0, [fp, #-112]	; 0xffffff90
   24290:	cmp	r0, #3
   24294:	bne	2439c <__assert_fail@plt+0x12f08>
   24298:	movw	r0, #0
   2429c:	str	r0, [fp, #-148]	; 0xffffff6c
   242a0:	str	r0, [fp, #-152]	; 0xffffff68
   242a4:	ldr	r0, [fp, #-148]	; 0xffffff6c
   242a8:	cmp	r0, #8
   242ac:	bge	24398 <__assert_fail@plt+0x12f04>
   242b0:	ldr	r0, [fp, #-96]	; 0xffffffa0
   242b4:	ldr	r0, [r0]
   242b8:	ldr	r1, [fp, #-108]	; 0xffffff94
   242bc:	ldr	r0, [r0, r1, lsl #3]
   242c0:	ldr	r1, [fp, #-148]	; 0xffffff6c
   242c4:	add	r0, r0, r1, lsl #2
   242c8:	ldr	r0, [r0]
   242cc:	str	r0, [fp, #-160]	; 0xffffff60
   242d0:	movw	r0, #0
   242d4:	str	r0, [fp, #-156]	; 0xffffff64
   242d8:	ldr	r0, [fp, #-156]	; 0xffffff64
   242dc:	cmp	r0, #32
   242e0:	bge	24384 <__assert_fail@plt+0x12ef0>
   242e4:	ldr	r0, [fp, #-160]	; 0xffffff60
   242e8:	ldr	r1, [fp, #-156]	; 0xffffff64
   242ec:	movw	r2, #1
   242f0:	lsl	r1, r2, r1
   242f4:	and	r0, r0, r1
   242f8:	cmp	r0, #0
   242fc:	beq	24364 <__assert_fail@plt+0x12ed0>
   24300:	ldr	r0, [fp, #-92]	; 0xffffffa4
   24304:	ldrb	r1, [fp, #-101]	; 0xffffff9b
   24308:	ldr	r2, [fp, #-152]	; 0xffffff68
   2430c:	str	r0, [fp, #-48]	; 0xffffffd0
   24310:	and	r0, r1, #1
   24314:	strb	r0, [fp, #-49]	; 0xffffffcf
   24318:	str	r2, [fp, #-56]	; 0xffffffc8
   2431c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   24320:	ldr	r1, [fp, #-56]	; 0xffffffc8
   24324:	add	r0, r0, r1
   24328:	movw	r1, #1
   2432c:	strb	r1, [r0]
   24330:	ldrb	r0, [fp, #-49]	; 0xffffffcf
   24334:	tst	r0, #1
   24338:	beq	24360 <__assert_fail@plt+0x12ecc>
   2433c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   24340:	ldr	r1, [fp, #-56]	; 0xffffffc8
   24344:	str	r0, [sp, #28]
   24348:	mov	r0, r1
   2434c:	bl	11254 <tolower@plt>
   24350:	ldr	r1, [sp, #28]
   24354:	add	r0, r1, r0
   24358:	movw	r1, #1
   2435c:	strb	r1, [r0]
   24360:	b	24364 <__assert_fail@plt+0x12ed0>
   24364:	b	24368 <__assert_fail@plt+0x12ed4>
   24368:	ldr	r0, [fp, #-156]	; 0xffffff64
   2436c:	add	r0, r0, #1
   24370:	str	r0, [fp, #-156]	; 0xffffff64
   24374:	ldr	r0, [fp, #-152]	; 0xffffff68
   24378:	add	r0, r0, #1
   2437c:	str	r0, [fp, #-152]	; 0xffffff68
   24380:	b	242d8 <__assert_fail@plt+0x12e44>
   24384:	b	24388 <__assert_fail@plt+0x12ef4>
   24388:	ldr	r0, [fp, #-148]	; 0xffffff6c
   2438c:	add	r0, r0, #1
   24390:	str	r0, [fp, #-148]	; 0xffffff6c
   24394:	b	242a4 <__assert_fail@plt+0x12e10>
   24398:	b	246d4 <__assert_fail@plt+0x13240>
   2439c:	ldr	r0, [fp, #-112]	; 0xffffff90
   243a0:	cmp	r0, #6
   243a4:	bne	2466c <__assert_fail@plt+0x131d8>
   243a8:	ldr	r0, [fp, #-96]	; 0xffffffa0
   243ac:	ldr	r0, [r0]
   243b0:	ldr	r1, [fp, #-108]	; 0xffffff94
   243b4:	add	r0, r0, r1, lsl #3
   243b8:	ldr	r0, [r0]
   243bc:	str	r0, [fp, #-164]	; 0xffffff5c
   243c0:	ldr	r0, [fp, #-96]	; 0xffffffa0
   243c4:	ldr	r0, [r0, #92]	; 0x5c
   243c8:	cmp	r0, #1
   243cc:	ble	244d0 <__assert_fail@plt+0x1303c>
   243d0:	ldr	r0, [fp, #-164]	; 0xffffff5c
   243d4:	ldr	r0, [r0, #36]	; 0x24
   243d8:	cmp	r0, #0
   243dc:	bne	24408 <__assert_fail@plt+0x12f74>
   243e0:	ldr	r0, [fp, #-164]	; 0xffffff5c
   243e4:	ldrb	r0, [r0, #16]
   243e8:	and	r0, r0, #1
   243ec:	and	r0, r0, #255	; 0xff
   243f0:	cmp	r0, #0
   243f4:	bne	24408 <__assert_fail@plt+0x12f74>
   243f8:	ldr	r0, [fp, #-164]	; 0xffffff5c
   243fc:	ldr	r0, [r0, #32]
   24400:	cmp	r0, #0
   24404:	beq	244d0 <__assert_fail@plt+0x1303c>
   24408:	movw	r0, #0
   2440c:	strb	r0, [fp, #-169]	; 0xffffff57
   24410:	sub	r0, fp, #180	; 0xb4
   24414:	mov	r1, r0
   24418:	str	r0, [sp, #24]
   2441c:	mov	r0, r1
   24420:	movw	r1, #0
   24424:	and	r1, r1, #255	; 0xff
   24428:	movw	r2, #8
   2442c:	bl	113d4 <memset@plt>
   24430:	movw	r0, #0
   24434:	sub	r1, fp, #169	; 0xa9
   24438:	movw	r2, #1
   2443c:	ldr	r3, [sp, #24]
   24440:	bl	4193c <__assert_fail@plt+0x304a8>
   24444:	cmn	r0, #2
   24448:	bne	244ac <__assert_fail@plt+0x13018>
   2444c:	ldr	r0, [fp, #-92]	; 0xffffffa4
   24450:	ldrb	r1, [fp, #-169]	; 0xffffff57
   24454:	str	r0, [fp, #-36]	; 0xffffffdc
   24458:	movw	r0, #0
   2445c:	strb	r0, [fp, #-37]	; 0xffffffdb
   24460:	str	r1, [fp, #-44]	; 0xffffffd4
   24464:	ldr	r0, [fp, #-36]	; 0xffffffdc
   24468:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2446c:	add	r0, r0, r1
   24470:	movw	r1, #1
   24474:	strb	r1, [r0]
   24478:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   2447c:	tst	r0, #1
   24480:	beq	244a8 <__assert_fail@plt+0x13014>
   24484:	ldr	r0, [fp, #-36]	; 0xffffffdc
   24488:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2448c:	str	r0, [sp, #20]
   24490:	mov	r0, r1
   24494:	bl	11254 <tolower@plt>
   24498:	ldr	r1, [sp, #20]
   2449c:	add	r0, r1, r0
   244a0:	movw	r1, #1
   244a4:	strb	r1, [r0]
   244a8:	b	244ac <__assert_fail@plt+0x13018>
   244ac:	b	244b0 <__assert_fail@plt+0x1301c>
   244b0:	ldrb	r0, [fp, #-169]	; 0xffffff57
   244b4:	movw	r1, #1
   244b8:	add	r0, r0, r1
   244bc:	strb	r0, [fp, #-169]	; 0xffffff57
   244c0:	and	r0, r0, #255	; 0xff
   244c4:	cmp	r0, #0
   244c8:	bne	24410 <__assert_fail@plt+0x12f7c>
   244cc:	b	24668 <__assert_fail@plt+0x131d4>
   244d0:	movw	r0, #0
   244d4:	str	r0, [fp, #-168]	; 0xffffff58
   244d8:	ldr	r0, [fp, #-168]	; 0xffffff58
   244dc:	ldr	r1, [fp, #-164]	; 0xffffff5c
   244e0:	ldr	r1, [r1, #20]
   244e4:	cmp	r0, r1
   244e8:	bge	24664 <__assert_fail@plt+0x131d0>
   244ec:	mov	r0, #0
   244f0:	str	r0, [sp, #68]	; 0x44
   244f4:	str	r0, [sp, #64]	; 0x40
   244f8:	add	r0, sp, #76	; 0x4c
   244fc:	ldr	r1, [fp, #-164]	; 0xffffff5c
   24500:	ldr	r1, [r1]
   24504:	ldr	r2, [fp, #-168]	; 0xffffff58
   24508:	add	r1, r1, r2, lsl #2
   2450c:	ldr	r1, [r1]
   24510:	add	r2, sp, #64	; 0x40
   24514:	bl	111b8 <wcrtomb@plt>
   24518:	cmn	r0, #1
   2451c:	beq	24584 <__assert_fail@plt+0x130f0>
   24520:	ldr	r0, [fp, #-92]	; 0xffffffa4
   24524:	ldrb	r1, [fp, #-101]	; 0xffffff9b
   24528:	ldrb	r2, [sp, #76]	; 0x4c
   2452c:	str	r0, [fp, #-24]	; 0xffffffe8
   24530:	and	r0, r1, #1
   24534:	strb	r0, [fp, #-25]	; 0xffffffe7
   24538:	str	r2, [fp, #-32]	; 0xffffffe0
   2453c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24540:	ldr	r1, [fp, #-32]	; 0xffffffe0
   24544:	add	r0, r0, r1
   24548:	movw	r1, #1
   2454c:	strb	r1, [r0]
   24550:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   24554:	tst	r0, #1
   24558:	beq	24580 <__assert_fail@plt+0x130ec>
   2455c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24560:	ldr	r1, [fp, #-32]	; 0xffffffe0
   24564:	str	r0, [sp, #16]
   24568:	mov	r0, r1
   2456c:	bl	11254 <tolower@plt>
   24570:	ldr	r1, [sp, #16]
   24574:	add	r0, r1, r0
   24578:	movw	r1, #1
   2457c:	strb	r1, [r0]
   24580:	b	24584 <__assert_fail@plt+0x130f0>
   24584:	ldr	r0, [fp, #-84]	; 0xffffffac
   24588:	ldr	r0, [r0, #12]
   2458c:	and	r0, r0, #4194304	; 0x400000
   24590:	cmp	r0, #0
   24594:	beq	24650 <__assert_fail@plt+0x131bc>
   24598:	ldr	r0, [fp, #-96]	; 0xffffffa0
   2459c:	ldr	r0, [r0, #92]	; 0x5c
   245a0:	cmp	r0, #1
   245a4:	ble	24650 <__assert_fail@plt+0x131bc>
   245a8:	add	r0, sp, #76	; 0x4c
   245ac:	ldr	r1, [fp, #-164]	; 0xffffff5c
   245b0:	ldr	r1, [r1]
   245b4:	ldr	r2, [fp, #-168]	; 0xffffff58
   245b8:	add	r1, r1, r2, lsl #2
   245bc:	ldr	r1, [r1]
   245c0:	str	r0, [sp, #12]
   245c4:	mov	r0, r1
   245c8:	bl	1126c <towlower@plt>
   245cc:	ldr	r1, [sp, #12]
   245d0:	str	r0, [sp, #8]
   245d4:	mov	r0, r1
   245d8:	ldr	r1, [sp, #8]
   245dc:	add	r2, sp, #64	; 0x40
   245e0:	bl	111b8 <wcrtomb@plt>
   245e4:	cmn	r0, #1
   245e8:	beq	2464c <__assert_fail@plt+0x131b8>
   245ec:	ldr	r0, [fp, #-92]	; 0xffffffa4
   245f0:	ldrb	r1, [sp, #76]	; 0x4c
   245f4:	str	r0, [fp, #-12]
   245f8:	movw	r0, #0
   245fc:	strb	r0, [fp, #-13]
   24600:	str	r1, [fp, #-20]	; 0xffffffec
   24604:	ldr	r0, [fp, #-12]
   24608:	ldr	r1, [fp, #-20]	; 0xffffffec
   2460c:	add	r0, r0, r1
   24610:	movw	r1, #1
   24614:	strb	r1, [r0]
   24618:	ldrb	r0, [fp, #-13]
   2461c:	tst	r0, #1
   24620:	beq	24648 <__assert_fail@plt+0x131b4>
   24624:	ldr	r0, [fp, #-12]
   24628:	ldr	r1, [fp, #-20]	; 0xffffffec
   2462c:	str	r0, [sp, #4]
   24630:	mov	r0, r1
   24634:	bl	11254 <tolower@plt>
   24638:	ldr	r1, [sp, #4]
   2463c:	add	r0, r1, r0
   24640:	movw	r1, #1
   24644:	strb	r1, [r0]
   24648:	b	2464c <__assert_fail@plt+0x131b8>
   2464c:	b	24650 <__assert_fail@plt+0x131bc>
   24650:	b	24654 <__assert_fail@plt+0x131c0>
   24654:	ldr	r0, [fp, #-168]	; 0xffffff58
   24658:	add	r0, r0, #1
   2465c:	str	r0, [fp, #-168]	; 0xffffff58
   24660:	b	244d8 <__assert_fail@plt+0x13044>
   24664:	b	24668 <__assert_fail@plt+0x131d4>
   24668:	b	246d0 <__assert_fail@plt+0x1323c>
   2466c:	ldr	r0, [fp, #-112]	; 0xffffff90
   24670:	cmp	r0, #5
   24674:	beq	24690 <__assert_fail@plt+0x131fc>
   24678:	ldr	r0, [fp, #-112]	; 0xffffff90
   2467c:	cmp	r0, #7
   24680:	beq	24690 <__assert_fail@plt+0x131fc>
   24684:	ldr	r0, [fp, #-112]	; 0xffffff90
   24688:	cmp	r0, #2
   2468c:	bne	246cc <__assert_fail@plt+0x13238>
   24690:	ldr	r0, [fp, #-92]	; 0xffffffa4
   24694:	movw	r1, #1
   24698:	and	r1, r1, #255	; 0xff
   2469c:	movw	r2, #256	; 0x100
   246a0:	bl	113d4 <memset@plt>
   246a4:	ldr	r0, [fp, #-112]	; 0xffffff90
   246a8:	cmp	r0, #2
   246ac:	bne	246c8 <__assert_fail@plt+0x13234>
   246b0:	ldr	r0, [fp, #-84]	; 0xffffffac
   246b4:	ldrb	r1, [r0, #28]
   246b8:	bic	r1, r1, #1
   246bc:	movw	r2, #1
   246c0:	orr	r1, r1, r2
   246c4:	strb	r1, [r0, #28]
   246c8:	b	246ec <__assert_fail@plt+0x13258>
   246cc:	b	246d0 <__assert_fail@plt+0x1323c>
   246d0:	b	246d4 <__assert_fail@plt+0x13240>
   246d4:	b	246d8 <__assert_fail@plt+0x13244>
   246d8:	b	246dc <__assert_fail@plt+0x13248>
   246dc:	ldr	r0, [fp, #-100]	; 0xffffff9c
   246e0:	add	r0, r0, #1
   246e4:	str	r0, [fp, #-100]	; 0xffffff9c
   246e8:	b	23fdc <__assert_fail@plt+0x12b48>
   246ec:	sub	sp, fp, #8
   246f0:	pop	{r4, r5, fp, pc}
   246f4:	push	{fp, lr}
   246f8:	mov	fp, sp
   246fc:	sub	sp, sp, #40	; 0x28
   24700:	ldr	r3, [pc, #444]	; 248c4 <__assert_fail@plt+0x13430>
   24704:	ldr	ip, [pc, #444]	; 248c8 <__assert_fail@plt+0x13434>
   24708:	str	r0, [fp, #-8]
   2470c:	str	r1, [fp, #-12]
   24710:	str	r2, [fp, #-16]
   24714:	ldr	r0, [fp, #-16]
   24718:	and	r0, r0, #1
   2471c:	cmp	r0, #0
   24720:	movw	r0, #0
   24724:	movne	r0, #1
   24728:	tst	r0, #1
   2472c:	movne	ip, r3
   24730:	str	ip, [sp, #16]
   24734:	ldr	r0, [fp, #-8]
   24738:	movw	r1, #0
   2473c:	str	r1, [r0]
   24740:	ldr	r0, [fp, #-8]
   24744:	str	r1, [r0, #4]
   24748:	ldr	r0, [fp, #-8]
   2474c:	str	r1, [r0, #8]
   24750:	movw	r0, #256	; 0x100
   24754:	bl	3fbd8 <__assert_fail@plt+0x2e744>
   24758:	ldr	r1, [fp, #-8]
   2475c:	str	r0, [r1, #16]
   24760:	ldr	r0, [fp, #-8]
   24764:	ldr	r0, [r0, #16]
   24768:	movw	r1, #0
   2476c:	cmp	r0, r1
   24770:	bne	24780 <__assert_fail@plt+0x132ec>
   24774:	movw	r0, #12
   24778:	str	r0, [fp, #-4]
   2477c:	b	248b8 <__assert_fail@plt+0x13424>
   24780:	ldr	r0, [pc, #324]	; 248cc <__assert_fail@plt+0x13438>
   24784:	ldr	r1, [fp, #-16]
   24788:	and	r1, r1, #2
   2478c:	cmp	r1, #0
   24790:	movw	r1, #0
   24794:	movne	r1, #1
   24798:	tst	r1, #1
   2479c:	moveq	r0, #0
   247a0:	ldr	r1, [sp, #16]
   247a4:	orr	r0, r1, r0
   247a8:	str	r0, [sp, #16]
   247ac:	ldr	r0, [fp, #-16]
   247b0:	and	r0, r0, #4
   247b4:	cmp	r0, #0
   247b8:	beq	247f0 <__assert_fail@plt+0x1335c>
   247bc:	ldr	r0, [sp, #16]
   247c0:	bic	r0, r0, #64	; 0x40
   247c4:	str	r0, [sp, #16]
   247c8:	ldr	r0, [sp, #16]
   247cc:	orr	r0, r0, #256	; 0x100
   247d0:	str	r0, [sp, #16]
   247d4:	ldr	r0, [fp, #-8]
   247d8:	ldrb	r1, [r0, #28]
   247dc:	and	r1, r1, #127	; 0x7f
   247e0:	movw	r2, #128	; 0x80
   247e4:	orr	r1, r1, r2
   247e8:	strb	r1, [r0, #28]
   247ec:	b	24800 <__assert_fail@plt+0x1336c>
   247f0:	ldr	r0, [fp, #-8]
   247f4:	ldrb	r1, [r0, #28]
   247f8:	and	r1, r1, #127	; 0x7f
   247fc:	strb	r1, [r0, #28]
   24800:	ldrb	r0, [fp, #-16]
   24804:	and	r0, r0, #8
   24808:	ldr	r1, [fp, #-8]
   2480c:	ldrb	r2, [r1, #28]
   24810:	lsl	r0, r0, #1
   24814:	bic	r2, r2, #16
   24818:	orr	r0, r2, r0
   2481c:	strb	r0, [r1, #28]
   24820:	ldr	r0, [fp, #-8]
   24824:	movw	r1, #0
   24828:	str	r1, [r0, #20]
   2482c:	ldr	r0, [fp, #-8]
   24830:	ldr	r1, [fp, #-12]
   24834:	ldr	r2, [fp, #-12]
   24838:	str	r0, [sp, #12]
   2483c:	mov	r0, r2
   24840:	str	r1, [sp, #8]
   24844:	bl	1138c <strlen@plt>
   24848:	ldr	r3, [sp, #16]
   2484c:	ldr	r1, [sp, #12]
   24850:	str	r0, [sp, #4]
   24854:	mov	r0, r1
   24858:	ldr	r1, [sp, #8]
   2485c:	ldr	r2, [sp, #4]
   24860:	bl	23a74 <__assert_fail@plt+0x125e0>
   24864:	str	r0, [sp, #20]
   24868:	ldr	r0, [sp, #20]
   2486c:	cmp	r0, #16
   24870:	bne	2487c <__assert_fail@plt+0x133e8>
   24874:	movw	r0, #8
   24878:	str	r0, [sp, #20]
   2487c:	ldr	r0, [sp, #20]
   24880:	cmp	r0, #0
   24884:	bne	24898 <__assert_fail@plt+0x13404>
   24888:	ldr	r0, [fp, #-8]
   2488c:	bl	23e78 <__assert_fail@plt+0x129e4>
   24890:	str	r0, [sp]
   24894:	b	248b0 <__assert_fail@plt+0x1341c>
   24898:	ldr	r0, [fp, #-8]
   2489c:	ldr	r0, [r0, #16]
   248a0:	bl	138a4 <__assert_fail@plt+0x2410>
   248a4:	ldr	r0, [fp, #-8]
   248a8:	movw	lr, #0
   248ac:	str	lr, [r0, #16]
   248b0:	ldr	r0, [sp, #20]
   248b4:	str	r0, [fp, #-4]
   248b8:	ldr	r0, [fp, #-4]
   248bc:	mov	sp, fp
   248c0:	pop	{fp, pc}
   248c4:	strdeq	fp, [r3], -ip
   248c8:	smlabteq	r1, r6, r2, r0
   248cc:	subeq	r0, r0, r0
   248d0:	push	{fp, lr}
   248d4:	mov	fp, sp
   248d8:	sub	sp, sp, #40	; 0x28
   248dc:	str	r0, [fp, #-4]
   248e0:	str	r1, [fp, #-8]
   248e4:	str	r2, [fp, #-12]
   248e8:	str	r3, [fp, #-16]
   248ec:	movw	r0, #17
   248f0:	str	r0, [sp, #12]
   248f4:	ldr	r0, [fp, #-4]
   248f8:	cmp	r0, #0
   248fc:	movw	r0, #1
   24900:	str	r0, [sp, #4]
   24904:	blt	24920 <__assert_fail@plt+0x1348c>
   24908:	ldr	r0, [fp, #-4]
   2490c:	ldr	r1, [sp, #12]
   24910:	cmp	r0, r1
   24914:	movw	r0, #0
   24918:	movge	r0, #1
   2491c:	str	r0, [sp, #4]
   24920:	ldr	r0, [sp, #4]
   24924:	tst	r0, #1
   24928:	beq	24930 <__assert_fail@plt+0x1349c>
   2492c:	bl	1147c <abort@plt>
   24930:	ldr	r0, [fp, #-4]
   24934:	movw	r1, #23116	; 0x5a4c
   24938:	movt	r1, #4
   2493c:	add	r0, r1, r0, lsl #2
   24940:	ldr	r0, [r0]
   24944:	movw	r1, #22732	; 0x58cc
   24948:	movt	r1, #4
   2494c:	add	r0, r1, r0
   24950:	bl	11380 <gettext@plt>
   24954:	str	r0, [sp, #20]
   24958:	ldr	r0, [sp, #20]
   2495c:	bl	1138c <strlen@plt>
   24960:	add	r0, r0, #1
   24964:	str	r0, [sp, #16]
   24968:	ldr	r0, [fp, #-16]
   2496c:	cmp	r0, #0
   24970:	beq	249bc <__assert_fail@plt+0x13528>
   24974:	ldr	r0, [sp, #16]
   24978:	str	r0, [sp, #8]
   2497c:	ldr	r0, [sp, #16]
   24980:	ldr	r1, [fp, #-16]
   24984:	cmp	r0, r1
   24988:	bls	249ac <__assert_fail@plt+0x13518>
   2498c:	ldr	r0, [fp, #-16]
   24990:	sub	r0, r0, #1
   24994:	str	r0, [sp, #8]
   24998:	ldr	r0, [fp, #-12]
   2499c:	ldr	r1, [sp, #8]
   249a0:	add	r0, r0, r1
   249a4:	movw	r1, #0
   249a8:	strb	r1, [r0]
   249ac:	ldr	r0, [fp, #-12]
   249b0:	ldr	r1, [sp, #20]
   249b4:	ldr	r2, [sp, #8]
   249b8:	bl	11248 <memcpy@plt>
   249bc:	ldr	r0, [sp, #16]
   249c0:	mov	sp, fp
   249c4:	pop	{fp, pc}
   249c8:	push	{fp, lr}
   249cc:	mov	fp, sp
   249d0:	sub	sp, sp, #16
   249d4:	str	r0, [fp, #-4]
   249d8:	ldr	r0, [fp, #-4]
   249dc:	ldr	r0, [r0]
   249e0:	str	r0, [sp, #8]
   249e4:	ldr	r0, [sp, #8]
   249e8:	movw	r1, #0
   249ec:	cmp	r0, r1
   249f0:	beq	24a3c <__assert_fail@plt+0x135a8>
   249f4:	movw	r0, #0
   249f8:	movt	r0, #0
   249fc:	cmp	r0, #0
   24a00:	bne	24a1c <__assert_fail@plt+0x13588>
   24a04:	b	24a08 <__assert_fail@plt+0x13574>
   24a08:	movw	r0, #0
   24a0c:	movt	r0, #0
   24a10:	cmp	r0, #0
   24a14:	beq	24a30 <__assert_fail@plt+0x1359c>
   24a18:	b	24a1c <__assert_fail@plt+0x13588>
   24a1c:	ldr	r0, [sp, #8]
   24a20:	add	r0, r0, #136	; 0x88
   24a24:	bl	111f4 <pthread_mutex_destroy@plt>
   24a28:	str	r0, [sp, #4]
   24a2c:	b	24a34 <__assert_fail@plt+0x135a0>
   24a30:	b	24a34 <__assert_fail@plt+0x135a0>
   24a34:	ldr	r0, [sp, #8]
   24a38:	bl	24a88 <__assert_fail@plt+0x135f4>
   24a3c:	ldr	r0, [fp, #-4]
   24a40:	movw	r1, #0
   24a44:	str	r1, [r0]
   24a48:	ldr	r0, [fp, #-4]
   24a4c:	str	r1, [r0, #4]
   24a50:	ldr	r0, [fp, #-4]
   24a54:	ldr	r0, [r0, #16]
   24a58:	bl	138a4 <__assert_fail@plt+0x2410>
   24a5c:	ldr	r0, [fp, #-4]
   24a60:	movw	r1, #0
   24a64:	str	r1, [r0, #16]
   24a68:	ldr	r0, [fp, #-4]
   24a6c:	ldr	r0, [r0, #20]
   24a70:	bl	138a4 <__assert_fail@plt+0x2410>
   24a74:	ldr	r0, [fp, #-4]
   24a78:	movw	r1, #0
   24a7c:	str	r1, [r0, #20]
   24a80:	mov	sp, fp
   24a84:	pop	{fp, pc}
   24a88:	push	{fp, lr}
   24a8c:	mov	fp, sp
   24a90:	sub	sp, sp, #24
   24a94:	str	r0, [fp, #-4]
   24a98:	ldr	r0, [fp, #-4]
   24a9c:	ldr	r0, [r0]
   24aa0:	movw	r1, #0
   24aa4:	cmp	r0, r1
   24aa8:	beq	24af0 <__assert_fail@plt+0x1365c>
   24aac:	movw	r0, #0
   24ab0:	str	r0, [fp, #-8]
   24ab4:	ldr	r0, [fp, #-8]
   24ab8:	ldr	r1, [fp, #-4]
   24abc:	ldr	r1, [r1, #8]
   24ac0:	cmp	r0, r1
   24ac4:	bcs	24aec <__assert_fail@plt+0x13658>
   24ac8:	ldr	r0, [fp, #-4]
   24acc:	ldr	r0, [r0]
   24ad0:	ldr	r1, [fp, #-8]
   24ad4:	add	r0, r0, r1, lsl #3
   24ad8:	bl	26708 <__assert_fail@plt+0x15274>
   24adc:	ldr	r0, [fp, #-8]
   24ae0:	add	r0, r0, #1
   24ae4:	str	r0, [fp, #-8]
   24ae8:	b	24ab4 <__assert_fail@plt+0x13620>
   24aec:	b	24af0 <__assert_fail@plt+0x1365c>
   24af0:	ldr	r0, [fp, #-4]
   24af4:	ldr	r0, [r0, #12]
   24af8:	bl	138a4 <__assert_fail@plt+0x2410>
   24afc:	movw	r0, #0
   24b00:	str	r0, [fp, #-8]
   24b04:	ldr	r0, [fp, #-8]
   24b08:	ldr	r1, [fp, #-4]
   24b0c:	ldr	r1, [r1, #8]
   24b10:	cmp	r0, r1
   24b14:	bcs	24bc8 <__assert_fail@plt+0x13734>
   24b18:	ldr	r0, [fp, #-4]
   24b1c:	ldr	r0, [r0, #24]
   24b20:	movw	r1, #0
   24b24:	cmp	r0, r1
   24b28:	beq	24b4c <__assert_fail@plt+0x136b8>
   24b2c:	ldr	r0, [fp, #-4]
   24b30:	ldr	r0, [r0, #24]
   24b34:	ldr	r1, [fp, #-8]
   24b38:	movw	r2, #12
   24b3c:	mul	r1, r1, r2
   24b40:	add	r0, r0, r1
   24b44:	ldr	r0, [r0, #8]
   24b48:	bl	138a4 <__assert_fail@plt+0x2410>
   24b4c:	ldr	r0, [fp, #-4]
   24b50:	ldr	r0, [r0, #28]
   24b54:	movw	r1, #0
   24b58:	cmp	r0, r1
   24b5c:	beq	24b80 <__assert_fail@plt+0x136ec>
   24b60:	ldr	r0, [fp, #-4]
   24b64:	ldr	r0, [r0, #28]
   24b68:	ldr	r1, [fp, #-8]
   24b6c:	movw	r2, #12
   24b70:	mul	r1, r1, r2
   24b74:	add	r0, r0, r1
   24b78:	ldr	r0, [r0, #8]
   24b7c:	bl	138a4 <__assert_fail@plt+0x2410>
   24b80:	ldr	r0, [fp, #-4]
   24b84:	ldr	r0, [r0, #20]
   24b88:	movw	r1, #0
   24b8c:	cmp	r0, r1
   24b90:	beq	24bb4 <__assert_fail@plt+0x13720>
   24b94:	ldr	r0, [fp, #-4]
   24b98:	ldr	r0, [r0, #20]
   24b9c:	ldr	r1, [fp, #-8]
   24ba0:	movw	r2, #12
   24ba4:	mul	r1, r1, r2
   24ba8:	add	r0, r0, r1
   24bac:	ldr	r0, [r0, #8]
   24bb0:	bl	138a4 <__assert_fail@plt+0x2410>
   24bb4:	b	24bb8 <__assert_fail@plt+0x13724>
   24bb8:	ldr	r0, [fp, #-8]
   24bbc:	add	r0, r0, #1
   24bc0:	str	r0, [fp, #-8]
   24bc4:	b	24b04 <__assert_fail@plt+0x13670>
   24bc8:	ldr	r0, [fp, #-4]
   24bcc:	ldr	r0, [r0, #20]
   24bd0:	bl	138a4 <__assert_fail@plt+0x2410>
   24bd4:	ldr	r0, [fp, #-4]
   24bd8:	ldr	r0, [r0, #24]
   24bdc:	bl	138a4 <__assert_fail@plt+0x2410>
   24be0:	ldr	r0, [fp, #-4]
   24be4:	ldr	r0, [r0, #28]
   24be8:	bl	138a4 <__assert_fail@plt+0x2410>
   24bec:	ldr	r0, [fp, #-4]
   24bf0:	ldr	r0, [r0]
   24bf4:	bl	138a4 <__assert_fail@plt+0x2410>
   24bf8:	ldr	r0, [fp, #-4]
   24bfc:	ldr	r0, [r0, #32]
   24c00:	movw	lr, #0
   24c04:	cmp	r0, lr
   24c08:	beq	24cb0 <__assert_fail@plt+0x1381c>
   24c0c:	movw	r0, #0
   24c10:	str	r0, [fp, #-8]
   24c14:	ldr	r0, [fp, #-8]
   24c18:	ldr	r1, [fp, #-4]
   24c1c:	ldr	r1, [r1, #68]	; 0x44
   24c20:	cmp	r0, r1
   24c24:	bhi	24cac <__assert_fail@plt+0x13818>
   24c28:	ldr	r0, [fp, #-4]
   24c2c:	ldr	r0, [r0, #32]
   24c30:	ldr	r1, [fp, #-8]
   24c34:	movw	r2, #12
   24c38:	mul	r1, r1, r2
   24c3c:	add	r0, r0, r1
   24c40:	str	r0, [sp, #8]
   24c44:	movw	r0, #0
   24c48:	str	r0, [sp, #12]
   24c4c:	ldr	r0, [sp, #12]
   24c50:	ldr	r1, [sp, #8]
   24c54:	ldr	r1, [r1]
   24c58:	cmp	r0, r1
   24c5c:	bge	24c90 <__assert_fail@plt+0x137fc>
   24c60:	ldr	r0, [sp, #8]
   24c64:	ldr	r0, [r0, #8]
   24c68:	ldr	r1, [sp, #12]
   24c6c:	add	r0, r0, r1, lsl #2
   24c70:	ldr	r0, [r0]
   24c74:	str	r0, [sp, #4]
   24c78:	ldr	r0, [sp, #4]
   24c7c:	bl	26798 <__assert_fail@plt+0x15304>
   24c80:	ldr	r0, [sp, #12]
   24c84:	add	r0, r0, #1
   24c88:	str	r0, [sp, #12]
   24c8c:	b	24c4c <__assert_fail@plt+0x137b8>
   24c90:	ldr	r0, [sp, #8]
   24c94:	ldr	r0, [r0, #8]
   24c98:	bl	138a4 <__assert_fail@plt+0x2410>
   24c9c:	ldr	r0, [fp, #-8]
   24ca0:	add	r0, r0, #1
   24ca4:	str	r0, [fp, #-8]
   24ca8:	b	24c14 <__assert_fail@plt+0x13780>
   24cac:	b	24cb0 <__assert_fail@plt+0x1381c>
   24cb0:	ldr	r0, [fp, #-4]
   24cb4:	ldr	r0, [r0, #32]
   24cb8:	bl	138a4 <__assert_fail@plt+0x2410>
   24cbc:	ldr	r0, [fp, #-4]
   24cc0:	ldr	r0, [r0, #60]	; 0x3c
   24cc4:	movw	lr, #23184	; 0x5a90
   24cc8:	movt	lr, #4
   24ccc:	cmp	r0, lr
   24cd0:	beq	24ce0 <__assert_fail@plt+0x1384c>
   24cd4:	ldr	r0, [fp, #-4]
   24cd8:	ldr	r0, [r0, #60]	; 0x3c
   24cdc:	bl	138a4 <__assert_fail@plt+0x2410>
   24ce0:	ldr	r0, [fp, #-4]
   24ce4:	ldr	r0, [r0, #132]	; 0x84
   24ce8:	bl	138a4 <__assert_fail@plt+0x2410>
   24cec:	ldr	r0, [fp, #-4]
   24cf0:	bl	138a4 <__assert_fail@plt+0x2410>
   24cf4:	mov	sp, fp
   24cf8:	pop	{fp, pc}
   24cfc:	push	{r4, r5, r6, sl, fp, lr}
   24d00:	add	fp, sp, #16
   24d04:	sub	sp, sp, #72	; 0x48
   24d08:	ldr	ip, [fp, #8]
   24d0c:	str	r0, [fp, #-24]	; 0xffffffe8
   24d10:	str	r1, [fp, #-28]	; 0xffffffe4
   24d14:	str	r2, [fp, #-32]	; 0xffffffe0
   24d18:	str	r3, [fp, #-36]	; 0xffffffdc
   24d1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24d20:	ldr	r0, [r0]
   24d24:	str	r0, [sp, #36]	; 0x24
   24d28:	ldr	r0, [fp, #8]
   24d2c:	mvn	r1, #7
   24d30:	and	r0, r0, r1
   24d34:	cmp	r0, #0
   24d38:	str	ip, [sp, #32]
   24d3c:	beq	24d4c <__assert_fail@plt+0x138b8>
   24d40:	movw	r0, #2
   24d44:	str	r0, [fp, #-20]	; 0xffffffec
   24d48:	b	24ebc <__assert_fail@plt+0x13a28>
   24d4c:	ldr	r0, [fp, #8]
   24d50:	and	r0, r0, #4
   24d54:	cmp	r0, #0
   24d58:	beq	24d78 <__assert_fail@plt+0x138e4>
   24d5c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   24d60:	ldr	r0, [r0]
   24d64:	str	r0, [sp, #44]	; 0x2c
   24d68:	ldr	r0, [fp, #-36]	; 0xffffffdc
   24d6c:	ldr	r0, [r0, #4]
   24d70:	str	r0, [sp, #40]	; 0x28
   24d74:	b	24d8c <__assert_fail@plt+0x138f8>
   24d78:	movw	r0, #0
   24d7c:	str	r0, [sp, #44]	; 0x2c
   24d80:	ldr	r0, [fp, #-28]	; 0xffffffe4
   24d84:	bl	1138c <strlen@plt>
   24d88:	str	r0, [sp, #40]	; 0x28
   24d8c:	movw	r0, #0
   24d90:	movt	r0, #0
   24d94:	cmp	r0, #0
   24d98:	bne	24db4 <__assert_fail@plt+0x13920>
   24d9c:	b	24da0 <__assert_fail@plt+0x1390c>
   24da0:	movw	r0, #0
   24da4:	movt	r0, #0
   24da8:	cmp	r0, #0
   24dac:	beq	24dc8 <__assert_fail@plt+0x13934>
   24db0:	b	24db4 <__assert_fail@plt+0x13920>
   24db4:	ldr	r0, [sp, #36]	; 0x24
   24db8:	add	r0, r0, #136	; 0x88
   24dbc:	bl	11230 <pthread_mutex_lock@plt>
   24dc0:	str	r0, [sp, #28]
   24dc4:	b	24dcc <__assert_fail@plt+0x13938>
   24dc8:	b	24dcc <__assert_fail@plt+0x13938>
   24dcc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24dd0:	ldrb	r0, [r0, #28]
   24dd4:	ubfx	r0, r0, #4, #1
   24dd8:	and	r0, r0, #255	; 0xff
   24ddc:	cmp	r0, #0
   24de0:	beq	24e24 <__assert_fail@plt+0x13990>
   24de4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24de8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   24dec:	ldr	r2, [sp, #40]	; 0x28
   24df0:	ldr	r3, [sp, #44]	; 0x2c
   24df4:	ldr	ip, [sp, #40]	; 0x28
   24df8:	ldr	lr, [sp, #40]	; 0x28
   24dfc:	ldr	r4, [fp, #8]
   24e00:	str	ip, [sp]
   24e04:	str	lr, [sp, #4]
   24e08:	movw	ip, #0
   24e0c:	str	ip, [sp, #8]
   24e10:	str	ip, [sp, #12]
   24e14:	str	r4, [sp, #16]
   24e18:	bl	24ec8 <__assert_fail@plt+0x13a34>
   24e1c:	str	r0, [fp, #-40]	; 0xffffffd8
   24e20:	b	24e64 <__assert_fail@plt+0x139d0>
   24e24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24e28:	ldr	r1, [fp, #-28]	; 0xffffffe4
   24e2c:	ldr	r2, [sp, #40]	; 0x28
   24e30:	ldr	r3, [sp, #44]	; 0x2c
   24e34:	ldr	ip, [sp, #40]	; 0x28
   24e38:	ldr	lr, [sp, #40]	; 0x28
   24e3c:	ldr	r4, [fp, #-32]	; 0xffffffe0
   24e40:	ldr	r5, [fp, #-36]	; 0xffffffdc
   24e44:	ldr	r6, [fp, #8]
   24e48:	str	ip, [sp]
   24e4c:	str	lr, [sp, #4]
   24e50:	str	r4, [sp, #8]
   24e54:	str	r5, [sp, #12]
   24e58:	str	r6, [sp, #16]
   24e5c:	bl	24ec8 <__assert_fail@plt+0x13a34>
   24e60:	str	r0, [fp, #-40]	; 0xffffffd8
   24e64:	movw	r0, #0
   24e68:	movt	r0, #0
   24e6c:	cmp	r0, #0
   24e70:	bne	24e8c <__assert_fail@plt+0x139f8>
   24e74:	b	24e78 <__assert_fail@plt+0x139e4>
   24e78:	movw	r0, #0
   24e7c:	movt	r0, #0
   24e80:	cmp	r0, #0
   24e84:	beq	24ea0 <__assert_fail@plt+0x13a0c>
   24e88:	b	24e8c <__assert_fail@plt+0x139f8>
   24e8c:	ldr	r0, [sp, #36]	; 0x24
   24e90:	add	r0, r0, #136	; 0x88
   24e94:	bl	1117c <pthread_mutex_unlock@plt>
   24e98:	str	r0, [sp, #24]
   24e9c:	b	24ea4 <__assert_fail@plt+0x13a10>
   24ea0:	b	24ea4 <__assert_fail@plt+0x13a10>
   24ea4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   24ea8:	cmp	r0, #0
   24eac:	movw	r0, #0
   24eb0:	movne	r0, #1
   24eb4:	and	r0, r0, #1
   24eb8:	str	r0, [fp, #-20]	; 0xffffffec
   24ebc:	ldr	r0, [fp, #-20]	; 0xffffffec
   24ec0:	sub	sp, fp, #16
   24ec4:	pop	{r4, r5, r6, sl, fp, pc}
   24ec8:	push	{r4, r5, r6, sl, fp, lr}
   24ecc:	add	fp, sp, #16
   24ed0:	sub	sp, sp, #384	; 0x180
   24ed4:	ldr	ip, [fp, #24]
   24ed8:	ldr	lr, [fp, #20]
   24edc:	ldr	r4, [fp, #16]
   24ee0:	ldr	r5, [fp, #12]
   24ee4:	ldr	r6, [fp, #8]
   24ee8:	str	r0, [fp, #-24]	; 0xffffffe8
   24eec:	str	r1, [fp, #-28]	; 0xffffffe4
   24ef0:	str	r2, [fp, #-32]	; 0xffffffe0
   24ef4:	str	r3, [fp, #-36]	; 0xffffffdc
   24ef8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24efc:	ldr	r0, [r0]
   24f00:	str	r0, [fp, #-44]	; 0xffffffd4
   24f04:	mvn	r0, #0
   24f08:	str	r0, [fp, #-72]	; 0xffffffb8
   24f0c:	add	r0, sp, #180	; 0xb4
   24f10:	mov	r1, #0
   24f14:	mov	r2, #136	; 0x88
   24f18:	str	r6, [sp, #156]	; 0x9c
   24f1c:	str	lr, [sp, #152]	; 0x98
   24f20:	str	r4, [sp, #148]	; 0x94
   24f24:	str	r5, [sp, #144]	; 0x90
   24f28:	str	ip, [sp, #140]	; 0x8c
   24f2c:	bl	113d4 <memset@plt>
   24f30:	ldr	r1, [fp, #-44]	; 0xffffffd4
   24f34:	str	r1, [sp, #264]	; 0x108
   24f38:	ldr	r1, [fp, #-24]	; 0xffffffe8
   24f3c:	ldr	r1, [r1, #16]
   24f40:	movw	r2, #0
   24f44:	cmp	r1, r2
   24f48:	str	r0, [sp, #136]	; 0x88
   24f4c:	beq	24fa0 <__assert_fail@plt+0x13b0c>
   24f50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24f54:	ldrb	r0, [r0, #28]
   24f58:	ubfx	r0, r0, #3, #1
   24f5c:	and	r0, r0, #255	; 0xff
   24f60:	cmp	r0, #0
   24f64:	beq	24fa0 <__assert_fail@plt+0x13b0c>
   24f68:	ldr	r0, [fp, #-36]	; 0xffffffdc
   24f6c:	ldr	r1, [fp, #8]
   24f70:	cmp	r0, r1
   24f74:	beq	24fa0 <__assert_fail@plt+0x13b0c>
   24f78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24f7c:	ldrb	r0, [r0, #28]
   24f80:	and	r0, r0, #1
   24f84:	and	r0, r0, #255	; 0xff
   24f88:	cmp	r0, #0
   24f8c:	bne	24fa0 <__assert_fail@plt+0x13b0c>
   24f90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24f94:	ldr	r0, [r0, #16]
   24f98:	str	r0, [sp, #132]	; 0x84
   24f9c:	b	24fac <__assert_fail@plt+0x13b18>
   24fa0:	movw	r0, #0
   24fa4:	str	r0, [sp, #132]	; 0x84
   24fa8:	b	24fac <__assert_fail@plt+0x13b18>
   24fac:	ldr	r0, [sp, #132]	; 0x84
   24fb0:	str	r0, [sp, #176]	; 0xb0
   24fb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24fb8:	ldr	r0, [r0, #20]
   24fbc:	str	r0, [sp, #172]	; 0xac
   24fc0:	ldr	r0, [fp, #16]
   24fc4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   24fc8:	ldr	r1, [r1, #24]
   24fcc:	cmp	r0, r1
   24fd0:	bls	24ff0 <__assert_fail@plt+0x13b5c>
   24fd4:	ldr	r0, [fp, #16]
   24fd8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   24fdc:	ldr	r1, [r1, #24]
   24fe0:	add	r1, r1, #1
   24fe4:	sub	r0, r0, r1
   24fe8:	str	r0, [sp, #128]	; 0x80
   24fec:	b	24ffc <__assert_fail@plt+0x13b68>
   24ff0:	movw	r0, #0
   24ff4:	str	r0, [sp, #128]	; 0x80
   24ff8:	b	24ffc <__assert_fail@plt+0x13b68>
   24ffc:	ldr	r0, [sp, #128]	; 0x80
   25000:	str	r0, [fp, #-76]	; 0xffffffb4
   25004:	ldr	r0, [fp, #-76]	; 0xffffffb4
   25008:	ldr	r1, [fp, #16]
   2500c:	sub	r0, r1, r0
   25010:	str	r0, [fp, #16]
   25014:	ldr	r0, [fp, #-24]	; 0xffffffe8
   25018:	ldr	r0, [r0, #8]
   2501c:	cmp	r0, #0
   25020:	movw	r0, #1
   25024:	str	r0, [sp, #124]	; 0x7c
   25028:	beq	2509c <__assert_fail@plt+0x13c08>
   2502c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   25030:	ldr	r0, [r0, #36]	; 0x24
   25034:	movw	r1, #0
   25038:	cmp	r0, r1
   2503c:	movw	r0, #1
   25040:	str	r0, [sp, #124]	; 0x7c
   25044:	beq	2509c <__assert_fail@plt+0x13c08>
   25048:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2504c:	ldr	r0, [r0, #40]	; 0x28
   25050:	movw	r1, #0
   25054:	cmp	r0, r1
   25058:	movw	r0, #1
   2505c:	str	r0, [sp, #124]	; 0x7c
   25060:	beq	2509c <__assert_fail@plt+0x13c08>
   25064:	ldr	r0, [fp, #-44]	; 0xffffffd4
   25068:	ldr	r0, [r0, #44]	; 0x2c
   2506c:	movw	r1, #0
   25070:	cmp	r0, r1
   25074:	movw	r0, #1
   25078:	str	r0, [sp, #124]	; 0x7c
   2507c:	beq	2509c <__assert_fail@plt+0x13c08>
   25080:	ldr	r0, [fp, #-44]	; 0xffffffd4
   25084:	ldr	r0, [r0, #48]	; 0x30
   25088:	movw	r1, #0
   2508c:	cmp	r0, r1
   25090:	movw	r0, #0
   25094:	moveq	r0, #1
   25098:	str	r0, [sp, #124]	; 0x7c
   2509c:	ldr	r0, [sp, #124]	; 0x7c
   250a0:	tst	r0, #1
   250a4:	beq	250b4 <__assert_fail@plt+0x13c20>
   250a8:	movw	r0, #1
   250ac:	str	r0, [fp, #-20]	; 0xffffffec
   250b0:	b	25dd0 <__assert_fail@plt+0x1493c>
   250b4:	ldr	r0, [fp, #8]
   250b8:	movw	r1, #0
   250bc:	cmp	r1, r0
   250c0:	bgt	250d8 <__assert_fail@plt+0x13c44>
   250c4:	ldr	r0, [fp, #8]
   250c8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   250cc:	cmp	r0, r1
   250d0:	bgt	250d8 <__assert_fail@plt+0x13c44>
   250d4:	b	250d8 <__assert_fail@plt+0x13c44>
   250d8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   250dc:	ldr	r0, [r0, #36]	; 0x24
   250e0:	ldr	r0, [r0, #8]
   250e4:	cmp	r0, #0
   250e8:	bne	2515c <__assert_fail@plt+0x13cc8>
   250ec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   250f0:	ldr	r0, [r0, #40]	; 0x28
   250f4:	ldr	r0, [r0, #8]
   250f8:	cmp	r0, #0
   250fc:	bne	2515c <__assert_fail@plt+0x13cc8>
   25100:	ldr	r0, [fp, #-44]	; 0xffffffd4
   25104:	ldr	r0, [r0, #44]	; 0x2c
   25108:	ldr	r0, [r0, #8]
   2510c:	cmp	r0, #0
   25110:	beq	2512c <__assert_fail@plt+0x13c98>
   25114:	ldr	r0, [fp, #-24]	; 0xffffffe8
   25118:	ldrb	r0, [r0, #28]
   2511c:	lsr	r0, r0, #7
   25120:	and	r0, r0, #255	; 0xff
   25124:	cmp	r0, #0
   25128:	bne	2515c <__assert_fail@plt+0x13cc8>
   2512c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   25130:	cmp	r0, #0
   25134:	beq	25150 <__assert_fail@plt+0x13cbc>
   25138:	ldr	r0, [fp, #8]
   2513c:	cmp	r0, #0
   25140:	beq	25150 <__assert_fail@plt+0x13cbc>
   25144:	movw	r0, #1
   25148:	str	r0, [fp, #-20]	; 0xffffffec
   2514c:	b	25dd0 <__assert_fail@plt+0x1493c>
   25150:	movw	r0, #0
   25154:	str	r0, [fp, #8]
   25158:	str	r0, [fp, #-36]	; 0xffffffdc
   2515c:	ldr	r0, [fp, #16]
   25160:	cmp	r0, #0
   25164:	movw	r0, #1
   25168:	str	r0, [sp, #120]	; 0x78
   2516c:	bne	25188 <__assert_fail@plt+0x13cf4>
   25170:	ldr	r0, [fp, #-44]	; 0xffffffd4
   25174:	ldr	r0, [r0, #76]	; 0x4c
   25178:	cmp	r0, #0
   2517c:	movw	r0, #0
   25180:	movne	r0, #1
   25184:	str	r0, [sp, #120]	; 0x78
   25188:	ldr	r0, [sp, #120]	; 0x78
   2518c:	add	r1, sp, #180	; 0xb4
   25190:	and	r0, r0, #1
   25194:	strb	r0, [fp, #-57]	; 0xffffffc7
   25198:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2519c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   251a0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   251a4:	ldr	r3, [r3, #8]
   251a8:	add	r3, r3, #1
   251ac:	ldr	ip, [fp, #-24]	; 0xffffffe8
   251b0:	ldr	ip, [ip, #20]
   251b4:	ldr	lr, [fp, #-24]	; 0xffffffe8
   251b8:	ldr	lr, [lr, #12]
   251bc:	and	lr, lr, #4194304	; 0x400000
   251c0:	cmp	lr, #0
   251c4:	movw	lr, #0
   251c8:	movne	lr, #1
   251cc:	ldr	r4, [fp, #-44]	; 0xffffffd4
   251d0:	str	r0, [sp, #116]	; 0x74
   251d4:	mov	r0, r1
   251d8:	ldr	r1, [sp, #116]	; 0x74
   251dc:	str	ip, [sp]
   251e0:	and	ip, lr, #1
   251e4:	str	ip, [sp, #4]
   251e8:	str	r4, [sp, #8]
   251ec:	bl	319ec <__assert_fail@plt+0x20558>
   251f0:	str	r0, [fp, #-40]	; 0xffffffd8
   251f4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   251f8:	cmp	r0, #0
   251fc:	beq	25204 <__assert_fail@plt+0x13d70>
   25200:	b	25da0 <__assert_fail@plt+0x1490c>
   25204:	ldr	r0, [fp, #12]
   25208:	str	r0, [sp, #236]	; 0xec
   2520c:	ldr	r0, [fp, #12]
   25210:	str	r0, [sp, #232]	; 0xe8
   25214:	ldr	r0, [fp, #-24]	; 0xffffffe8
   25218:	ldrb	r0, [r0, #28]
   2521c:	lsr	r0, r0, #7
   25220:	strb	r0, [sp, #257]	; 0x101
   25224:	ldr	r1, [fp, #24]
   25228:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2522c:	ldr	r0, [r0, #76]	; 0x4c
   25230:	lsl	r2, r0, #1
   25234:	add	r0, sp, #180	; 0xb4
   25238:	bl	31b88 <__assert_fail@plt+0x206f4>
   2523c:	str	r0, [fp, #-40]	; 0xffffffd8
   25240:	ldr	r0, [fp, #-40]	; 0xffffffd8
   25244:	cmp	r0, #0
   25248:	beq	25250 <__assert_fail@plt+0x13dbc>
   2524c:	b	25da0 <__assert_fail@plt+0x1490c>
   25250:	ldr	r0, [fp, #16]
   25254:	cmp	r0, #1
   25258:	bhi	25274 <__assert_fail@plt+0x13de0>
   2525c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   25260:	ldrb	r0, [r0, #88]	; 0x58
   25264:	ubfx	r0, r0, #1, #1
   25268:	and	r0, r0, #255	; 0xff
   2526c:	cmp	r0, #0
   25270:	beq	252c4 <__assert_fail@plt+0x13e30>
   25274:	ldr	r0, [pc, #2912]	; 25ddc <__assert_fail@plt+0x14948>
   25278:	ldr	r1, [sp, #216]	; 0xd8
   2527c:	cmp	r0, r1
   25280:	bhi	25290 <__assert_fail@plt+0x13dfc>
   25284:	movw	r0, #12
   25288:	str	r0, [fp, #-40]	; 0xffffffd8
   2528c:	b	25da0 <__assert_fail@plt+0x1490c>
   25290:	ldr	r0, [sp, #216]	; 0xd8
   25294:	add	r0, r0, #1
   25298:	lsl	r0, r0, #2
   2529c:	bl	3fbd8 <__assert_fail@plt+0x2e744>
   252a0:	str	r0, [sp, #280]	; 0x118
   252a4:	ldr	r0, [sp, #280]	; 0x118
   252a8:	movw	lr, #0
   252ac:	cmp	r0, lr
   252b0:	bne	252c0 <__assert_fail@plt+0x13e2c>
   252b4:	movw	r0, #12
   252b8:	str	r0, [fp, #-40]	; 0xffffffd8
   252bc:	b	25da0 <__assert_fail@plt+0x1490c>
   252c0:	b	252c4 <__assert_fail@plt+0x13e30>
   252c4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   252c8:	str	r0, [fp, #-68]	; 0xffffffbc
   252cc:	ldr	r0, [fp, #24]
   252d0:	and	r0, r0, #1
   252d4:	cmp	r0, #0
   252d8:	movw	r0, #0
   252dc:	movne	r0, #1
   252e0:	tst	r0, #1
   252e4:	movw	r0, #4
   252e8:	moveq	r0, #6
   252ec:	str	r0, [sp, #240]	; 0xf0
   252f0:	ldr	r0, [fp, #8]
   252f4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   252f8:	cmp	r0, r1
   252fc:	movw	r0, #0
   25300:	movlt	r0, #1
   25304:	tst	r0, #1
   25308:	mvn	r0, #0
   2530c:	moveq	r0, #1
   25310:	str	r0, [fp, #-56]	; 0xffffffc8
   25314:	ldr	r0, [fp, #8]
   25318:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2531c:	cmp	r0, r1
   25320:	bge	25330 <__assert_fail@plt+0x13e9c>
   25324:	ldr	r0, [fp, #8]
   25328:	str	r0, [sp, #112]	; 0x70
   2532c:	b	25338 <__assert_fail@plt+0x13ea4>
   25330:	ldr	r0, [fp, #-36]	; 0xffffffdc
   25334:	str	r0, [sp, #112]	; 0x70
   25338:	ldr	r0, [sp, #112]	; 0x70
   2533c:	str	r0, [fp, #-48]	; 0xffffffd0
   25340:	ldr	r0, [fp, #8]
   25344:	ldr	r1, [fp, #-36]	; 0xffffffdc
   25348:	cmp	r0, r1
   2534c:	bge	2535c <__assert_fail@plt+0x13ec8>
   25350:	ldr	r0, [fp, #-36]	; 0xffffffdc
   25354:	str	r0, [sp, #108]	; 0x6c
   25358:	b	25364 <__assert_fail@plt+0x13ed0>
   2535c:	ldr	r0, [fp, #8]
   25360:	str	r0, [sp, #108]	; 0x6c
   25364:	ldr	r0, [sp, #108]	; 0x6c
   25368:	str	r0, [fp, #-52]	; 0xffffffcc
   2536c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   25370:	ldr	r0, [r0, #92]	; 0x5c
   25374:	cmp	r0, #1
   25378:	movw	r0, #0
   2537c:	moveq	r0, #1
   25380:	and	r0, r0, #1
   25384:	strb	r0, [fp, #-77]	; 0xffffffb3
   25388:	ldr	r0, [sp, #176]	; 0xb0
   2538c:	movw	r1, #0
   25390:	cmp	r0, r1
   25394:	beq	25450 <__assert_fail@plt+0x13fbc>
   25398:	ldrb	r0, [fp, #-77]	; 0xffffffb3
   2539c:	tst	r0, #1
   253a0:	movw	r0, #1
   253a4:	str	r0, [sp, #104]	; 0x68
   253a8:	bne	253f0 <__assert_fail@plt+0x13f5c>
   253ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   253b0:	ldr	r0, [r0, #12]
   253b4:	and	r0, r0, #4194304	; 0x400000
   253b8:	cmp	r0, #0
   253bc:	movw	r0, #1
   253c0:	str	r0, [sp, #100]	; 0x64
   253c4:	bne	253e0 <__assert_fail@plt+0x13f4c>
   253c8:	ldr	r0, [sp, #172]	; 0xac
   253cc:	movw	r1, #0
   253d0:	cmp	r0, r1
   253d4:	movw	r0, #0
   253d8:	movne	r0, #1
   253dc:	str	r0, [sp, #100]	; 0x64
   253e0:	ldr	r0, [sp, #100]	; 0x64
   253e4:	mvn	r1, #0
   253e8:	eor	r0, r0, r1
   253ec:	str	r0, [sp, #104]	; 0x68
   253f0:	ldr	r0, [sp, #104]	; 0x68
   253f4:	tst	r0, #1
   253f8:	movw	r0, #4
   253fc:	moveq	r0, #0
   25400:	ldr	r1, [fp, #-36]	; 0xffffffdc
   25404:	ldr	r2, [fp, #8]
   25408:	cmp	r1, r2
   2540c:	movw	r1, #0
   25410:	movle	r1, #1
   25414:	tst	r1, #1
   25418:	movw	r1, #2
   2541c:	moveq	r1, #0
   25420:	orr	r0, r0, r1
   25424:	ldr	r1, [sp, #172]	; 0xac
   25428:	movw	r2, #0
   2542c:	cmp	r1, r2
   25430:	movw	r1, #0
   25434:	movne	r1, #1
   25438:	tst	r1, #1
   2543c:	movw	r1, #1
   25440:	moveq	r1, #0
   25444:	orr	r0, r0, r1
   25448:	str	r0, [sp, #96]	; 0x60
   2544c:	b	2545c <__assert_fail@plt+0x13fc8>
   25450:	movw	r0, #8
   25454:	str	r0, [sp, #96]	; 0x60
   25458:	b	2545c <__assert_fail@plt+0x13fc8>
   2545c:	ldr	r0, [sp, #96]	; 0x60
   25460:	str	r0, [fp, #-64]	; 0xffffffc0
   25464:	movw	r0, #1
   25468:	str	r0, [fp, #-40]	; 0xffffffd8
   2546c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   25470:	ldr	r1, [fp, #-48]	; 0xffffffd0
   25474:	cmp	r0, r1
   25478:	blt	2548c <__assert_fail@plt+0x13ff8>
   2547c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   25480:	ldr	r1, [fp, #-68]	; 0xffffffbc
   25484:	cmp	r0, r1
   25488:	bge	25490 <__assert_fail@plt+0x13ffc>
   2548c:	b	25da0 <__assert_fail@plt+0x1490c>
   25490:	ldr	r0, [fp, #-64]	; 0xffffffc0
   25494:	sub	r0, r0, #4
   25498:	cmp	r0, #4
   2549c:	str	r0, [sp, #92]	; 0x5c
   254a0:	bhi	25728 <__assert_fail@plt+0x14294>
   254a4:	add	r0, pc, #8
   254a8:	ldr	r1, [sp, #92]	; 0x5c
   254ac:	ldr	r0, [r0, r1, lsl #2]
   254b0:	mov	pc, r0
   254b4:	andeq	r5, r2, ip, asr r6
   254b8:	andeq	r5, r2, ip, asr r6
   254bc:	andeq	r5, r2, r8, asr #10
   254c0:	andeq	r5, r2, ip, asr #9
   254c4:	andeq	r5, r2, r8, asr #9
   254c8:	b	2581c <__assert_fail@plt+0x14388>
   254cc:	b	254d0 <__assert_fail@plt+0x1403c>
   254d0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   254d4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   254d8:	cmp	r0, r1
   254dc:	movw	r0, #0
   254e0:	str	r0, [sp, #88]	; 0x58
   254e4:	bge	25528 <__assert_fail@plt+0x14094>
   254e8:	ldr	r0, [sp, #176]	; 0xb0
   254ec:	ldr	r1, [sp, #172]	; 0xac
   254f0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   254f4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   254f8:	add	r2, r2, r3
   254fc:	ldrb	r2, [r2]
   25500:	add	r1, r1, r2
   25504:	ldrb	r1, [r1]
   25508:	add	r0, r0, r1
   2550c:	ldrsb	r0, [r0]
   25510:	cmp	r0, #0
   25514:	movw	r0, #0
   25518:	movne	r0, #1
   2551c:	mvn	r1, #0
   25520:	eor	r0, r0, r1
   25524:	str	r0, [sp, #88]	; 0x58
   25528:	ldr	r0, [sp, #88]	; 0x58
   2552c:	tst	r0, #1
   25530:	beq	25544 <__assert_fail@plt+0x140b0>
   25534:	ldr	r0, [fp, #-68]	; 0xffffffbc
   25538:	add	r0, r0, #1
   2553c:	str	r0, [fp, #-68]	; 0xffffffbc
   25540:	b	254d0 <__assert_fail@plt+0x1403c>
   25544:	b	255b8 <__assert_fail@plt+0x14124>
   25548:	b	2554c <__assert_fail@plt+0x140b8>
   2554c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   25550:	ldr	r1, [fp, #-52]	; 0xffffffcc
   25554:	cmp	r0, r1
   25558:	movw	r0, #0
   2555c:	str	r0, [sp, #84]	; 0x54
   25560:	bge	25598 <__assert_fail@plt+0x14104>
   25564:	ldr	r0, [sp, #176]	; 0xb0
   25568:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2556c:	ldr	r2, [fp, #-68]	; 0xffffffbc
   25570:	add	r1, r1, r2
   25574:	ldrb	r1, [r1]
   25578:	add	r0, r0, r1
   2557c:	ldrsb	r0, [r0]
   25580:	cmp	r0, #0
   25584:	movw	r0, #0
   25588:	movne	r0, #1
   2558c:	mvn	r1, #0
   25590:	eor	r0, r0, r1
   25594:	str	r0, [sp, #84]	; 0x54
   25598:	ldr	r0, [sp, #84]	; 0x54
   2559c:	tst	r0, #1
   255a0:	beq	255b4 <__assert_fail@plt+0x14120>
   255a4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   255a8:	add	r0, r0, #1
   255ac:	str	r0, [fp, #-68]	; 0xffffffbc
   255b0:	b	2554c <__assert_fail@plt+0x140b8>
   255b4:	b	255b8 <__assert_fail@plt+0x14124>
   255b8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   255bc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   255c0:	cmp	r0, r1
   255c4:	bne	25658 <__assert_fail@plt+0x141c4>
   255c8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   255cc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   255d0:	cmp	r0, r1
   255d4:	blt	255e4 <__assert_fail@plt+0x14150>
   255d8:	movw	r0, #0
   255dc:	str	r0, [sp, #80]	; 0x50
   255e0:	b	255f8 <__assert_fail@plt+0x14164>
   255e4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   255e8:	ldr	r1, [fp, #-68]	; 0xffffffbc
   255ec:	add	r0, r0, r1
   255f0:	ldrb	r0, [r0]
   255f4:	str	r0, [sp, #80]	; 0x50
   255f8:	ldr	r0, [sp, #80]	; 0x50
   255fc:	str	r0, [fp, #-84]	; 0xffffffac
   25600:	ldr	r0, [sp, #176]	; 0xb0
   25604:	ldr	r1, [sp, #172]	; 0xac
   25608:	movw	r2, #0
   2560c:	cmp	r1, r2
   25610:	str	r0, [sp, #76]	; 0x4c
   25614:	beq	25630 <__assert_fail@plt+0x1419c>
   25618:	ldr	r0, [sp, #172]	; 0xac
   2561c:	ldr	r1, [fp, #-84]	; 0xffffffac
   25620:	add	r0, r0, r1
   25624:	ldrb	r0, [r0]
   25628:	str	r0, [sp, #72]	; 0x48
   2562c:	b	25638 <__assert_fail@plt+0x141a4>
   25630:	ldr	r0, [fp, #-84]	; 0xffffffac
   25634:	str	r0, [sp, #72]	; 0x48
   25638:	ldr	r0, [sp, #72]	; 0x48
   2563c:	ldr	r1, [sp, #76]	; 0x4c
   25640:	add	r0, r1, r0
   25644:	ldrsb	r0, [r0]
   25648:	cmp	r0, #0
   2564c:	bne	25654 <__assert_fail@plt+0x141c0>
   25650:	b	25da0 <__assert_fail@plt+0x1490c>
   25654:	b	25658 <__assert_fail@plt+0x141c4>
   25658:	b	2581c <__assert_fail@plt+0x14388>
   2565c:	b	25660 <__assert_fail@plt+0x141cc>
   25660:	ldr	r0, [fp, #-68]	; 0xffffffbc
   25664:	ldr	r1, [fp, #-48]	; 0xffffffd0
   25668:	cmp	r0, r1
   2566c:	blt	25710 <__assert_fail@plt+0x1427c>
   25670:	ldr	r0, [fp, #-68]	; 0xffffffbc
   25674:	ldr	r1, [fp, #-32]	; 0xffffffe0
   25678:	cmp	r0, r1
   2567c:	blt	2568c <__assert_fail@plt+0x141f8>
   25680:	movw	r0, #0
   25684:	str	r0, [sp, #68]	; 0x44
   25688:	b	256a0 <__assert_fail@plt+0x1420c>
   2568c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   25690:	ldr	r1, [fp, #-68]	; 0xffffffbc
   25694:	add	r0, r0, r1
   25698:	ldrb	r0, [r0]
   2569c:	str	r0, [sp, #68]	; 0x44
   256a0:	ldr	r0, [sp, #68]	; 0x44
   256a4:	str	r0, [fp, #-84]	; 0xffffffac
   256a8:	ldr	r0, [sp, #176]	; 0xb0
   256ac:	ldr	r1, [sp, #172]	; 0xac
   256b0:	movw	r2, #0
   256b4:	cmp	r1, r2
   256b8:	str	r0, [sp, #64]	; 0x40
   256bc:	beq	256d8 <__assert_fail@plt+0x14244>
   256c0:	ldr	r0, [sp, #172]	; 0xac
   256c4:	ldr	r1, [fp, #-84]	; 0xffffffac
   256c8:	add	r0, r0, r1
   256cc:	ldrb	r0, [r0]
   256d0:	str	r0, [sp, #60]	; 0x3c
   256d4:	b	256e0 <__assert_fail@plt+0x1424c>
   256d8:	ldr	r0, [fp, #-84]	; 0xffffffac
   256dc:	str	r0, [sp, #60]	; 0x3c
   256e0:	ldr	r0, [sp, #60]	; 0x3c
   256e4:	ldr	r1, [sp, #64]	; 0x40
   256e8:	add	r0, r1, r0
   256ec:	ldrsb	r0, [r0]
   256f0:	cmp	r0, #0
   256f4:	beq	256fc <__assert_fail@plt+0x14268>
   256f8:	b	25710 <__assert_fail@plt+0x1427c>
   256fc:	ldr	r0, [fp, #-68]	; 0xffffffbc
   25700:	mvn	r1, #0
   25704:	add	r0, r0, r1
   25708:	str	r0, [fp, #-68]	; 0xffffffbc
   2570c:	b	25660 <__assert_fail@plt+0x141cc>
   25710:	ldr	r0, [fp, #-68]	; 0xffffffbc
   25714:	ldr	r1, [fp, #-48]	; 0xffffffd0
   25718:	cmp	r0, r1
   2571c:	bge	25724 <__assert_fail@plt+0x14290>
   25720:	b	25da0 <__assert_fail@plt+0x1490c>
   25724:	b	2581c <__assert_fail@plt+0x14388>
   25728:	b	2572c <__assert_fail@plt+0x14298>
   2572c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   25730:	ldr	r1, [sp, #204]	; 0xcc
   25734:	sub	r0, r0, r1
   25738:	str	r0, [sp, #168]	; 0xa8
   2573c:	ldr	r0, [sp, #168]	; 0xa8
   25740:	ldr	r1, [sp, #212]	; 0xd4
   25744:	cmp	r0, r1
   25748:	bcc	25780 <__assert_fail@plt+0x142ec>
   2574c:	add	r0, sp, #180	; 0xb4
   25750:	ldr	r1, [fp, #-68]	; 0xffffffbc
   25754:	ldr	r2, [fp, #24]
   25758:	bl	31cd8 <__assert_fail@plt+0x20844>
   2575c:	str	r0, [fp, #-40]	; 0xffffffd8
   25760:	ldr	r0, [fp, #-40]	; 0xffffffd8
   25764:	cmp	r0, #0
   25768:	beq	25770 <__assert_fail@plt+0x142dc>
   2576c:	b	25da0 <__assert_fail@plt+0x1490c>
   25770:	ldr	r0, [fp, #-68]	; 0xffffffbc
   25774:	ldr	r1, [sp, #204]	; 0xcc
   25778:	sub	r0, r0, r1
   2577c:	str	r0, [sp, #168]	; 0xa8
   25780:	ldr	r0, [sp, #168]	; 0xa8
   25784:	ldr	r1, [sp, #208]	; 0xd0
   25788:	cmp	r0, r1
   2578c:	bcs	257a8 <__assert_fail@plt+0x14314>
   25790:	ldr	r0, [sp, #184]	; 0xb8
   25794:	ldr	r1, [sp, #168]	; 0xa8
   25798:	add	r0, r0, r1
   2579c:	ldrb	r0, [r0]
   257a0:	str	r0, [sp, #56]	; 0x38
   257a4:	b	257b4 <__assert_fail@plt+0x14320>
   257a8:	movw	r0, #0
   257ac:	str	r0, [sp, #56]	; 0x38
   257b0:	b	257b4 <__assert_fail@plt+0x14320>
   257b4:	ldr	r0, [sp, #56]	; 0x38
   257b8:	str	r0, [fp, #-84]	; 0xffffffac
   257bc:	ldr	r0, [sp, #176]	; 0xb0
   257c0:	ldr	r1, [fp, #-84]	; 0xffffffac
   257c4:	add	r0, r0, r1
   257c8:	ldrsb	r0, [r0]
   257cc:	cmp	r0, #0
   257d0:	beq	257d8 <__assert_fail@plt+0x14344>
   257d4:	b	25818 <__assert_fail@plt+0x14384>
   257d8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   257dc:	ldr	r1, [fp, #-68]	; 0xffffffbc
   257e0:	add	r0, r1, r0
   257e4:	str	r0, [fp, #-68]	; 0xffffffbc
   257e8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   257ec:	ldr	r1, [fp, #-48]	; 0xffffffd0
   257f0:	cmp	r0, r1
   257f4:	blt	25808 <__assert_fail@plt+0x14374>
   257f8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   257fc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   25800:	cmp	r0, r1
   25804:	ble	25814 <__assert_fail@plt+0x14380>
   25808:	movw	r0, #1
   2580c:	str	r0, [fp, #-40]	; 0xffffffd8
   25810:	b	25da0 <__assert_fail@plt+0x1490c>
   25814:	b	2572c <__assert_fail@plt+0x14298>
   25818:	b	2581c <__assert_fail@plt+0x14388>
   2581c:	add	r0, sp, #180	; 0xb4
   25820:	ldr	r1, [fp, #-68]	; 0xffffffbc
   25824:	ldr	r2, [fp, #24]
   25828:	bl	31cd8 <__assert_fail@plt+0x20844>
   2582c:	str	r0, [fp, #-40]	; 0xffffffd8
   25830:	ldr	r0, [fp, #-40]	; 0xffffffd8
   25834:	cmp	r0, #0
   25838:	beq	25840 <__assert_fail@plt+0x143ac>
   2583c:	b	25da0 <__assert_fail@plt+0x1490c>
   25840:	ldrb	r0, [fp, #-77]	; 0xffffffb3
   25844:	tst	r0, #1
   25848:	bne	25870 <__assert_fail@plt+0x143dc>
   2584c:	ldr	r0, [sp, #208]	; 0xd0
   25850:	movw	r1, #0
   25854:	cmp	r1, r0
   25858:	beq	25870 <__assert_fail@plt+0x143dc>
   2585c:	ldr	r0, [sp, #188]	; 0xbc
   25860:	ldr	r0, [r0]
   25864:	cmn	r0, #1
   25868:	bne	25870 <__assert_fail@plt+0x143dc>
   2586c:	b	259f4 <__assert_fail@plt+0x14560>
   25870:	movw	r0, #0
   25874:	str	r0, [sp, #300]	; 0x12c
   25878:	str	r0, [sp, #288]	; 0x120
   2587c:	str	r0, [sp, #284]	; 0x11c
   25880:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   25884:	ldr	r1, [fp, #-36]	; 0xffffffdc
   25888:	ldr	r2, [fp, #8]
   2588c:	cmp	r1, r2
   25890:	str	r0, [sp, #52]	; 0x34
   25894:	bgt	258a4 <__assert_fail@plt+0x14410>
   25898:	sub	r0, fp, #68	; 0x44
   2589c:	str	r0, [sp, #48]	; 0x30
   258a0:	b	258b0 <__assert_fail@plt+0x1441c>
   258a4:	movw	r0, #0
   258a8:	str	r0, [sp, #48]	; 0x30
   258ac:	b	258b0 <__assert_fail@plt+0x1441c>
   258b0:	ldr	r0, [sp, #48]	; 0x30
   258b4:	add	r1, sp, #180	; 0xb4
   258b8:	str	r0, [sp, #44]	; 0x2c
   258bc:	mov	r0, r1
   258c0:	ldr	r1, [sp, #52]	; 0x34
   258c4:	and	r1, r1, #1
   258c8:	ldr	r2, [sp, #44]	; 0x2c
   258cc:	bl	328c4 <__assert_fail@plt+0x21430>
   258d0:	str	r0, [fp, #-72]	; 0xffffffb8
   258d4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   258d8:	cmn	r0, #1
   258dc:	beq	259ec <__assert_fail@plt+0x14558>
   258e0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   258e4:	cmn	r0, #2
   258e8:	bne	258f8 <__assert_fail@plt+0x14464>
   258ec:	movw	r0, #12
   258f0:	str	r0, [fp, #-40]	; 0xffffffd8
   258f4:	b	25da0 <__assert_fail@plt+0x1490c>
   258f8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   258fc:	str	r0, [sp, #272]	; 0x110
   25900:	ldr	r0, [fp, #-24]	; 0xffffffe8
   25904:	ldrb	r0, [r0, #28]
   25908:	ubfx	r0, r0, #4, #1
   2590c:	and	r0, r0, #255	; 0xff
   25910:	cmp	r0, #0
   25914:	bne	25924 <__assert_fail@plt+0x14490>
   25918:	ldr	r0, [fp, #16]
   2591c:	cmp	r0, #1
   25920:	bhi	25934 <__assert_fail@plt+0x144a0>
   25924:	ldr	r0, [fp, #-44]	; 0xffffffd4
   25928:	ldr	r0, [r0, #76]	; 0x4c
   2592c:	cmp	r0, #0
   25930:	beq	2595c <__assert_fail@plt+0x144c8>
   25934:	ldr	r0, [sp, #280]	; 0x118
   25938:	ldr	r1, [fp, #-72]	; 0xffffffb8
   2593c:	add	r0, r0, r1, lsl #2
   25940:	ldr	r0, [r0]
   25944:	str	r0, [sp, #164]	; 0xa4
   25948:	ldr	r1, [sp, #164]	; 0xa4
   2594c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   25950:	add	r0, sp, #180	; 0xb4
   25954:	bl	32e50 <__assert_fail@plt+0x219bc>
   25958:	str	r0, [sp, #276]	; 0x114
   2595c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   25960:	ldrb	r0, [r0, #28]
   25964:	ubfx	r0, r0, #4, #1
   25968:	and	r0, r0, #255	; 0xff
   2596c:	cmp	r0, #0
   25970:	bne	25998 <__assert_fail@plt+0x14504>
   25974:	ldr	r0, [fp, #16]
   25978:	cmp	r0, #1
   2597c:	bls	25998 <__assert_fail@plt+0x14504>
   25980:	ldr	r0, [fp, #-44]	; 0xffffffd4
   25984:	ldrb	r0, [r0, #88]	; 0x58
   25988:	and	r0, r0, #1
   2598c:	and	r0, r0, #255	; 0xff
   25990:	cmp	r0, #0
   25994:	bne	259a8 <__assert_fail@plt+0x14514>
   25998:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2599c:	ldr	r0, [r0, #76]	; 0x4c
   259a0:	cmp	r0, #0
   259a4:	beq	259e0 <__assert_fail@plt+0x1454c>
   259a8:	add	r0, sp, #180	; 0xb4
   259ac:	bl	32f28 <__assert_fail@plt+0x21a94>
   259b0:	str	r0, [fp, #-40]	; 0xffffffd8
   259b4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   259b8:	cmp	r0, #0
   259bc:	bne	259c4 <__assert_fail@plt+0x14530>
   259c0:	b	25a08 <__assert_fail@plt+0x14574>
   259c4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   259c8:	cmp	r0, #1
   259cc:	beq	259d4 <__assert_fail@plt+0x14540>
   259d0:	b	25da0 <__assert_fail@plt+0x1490c>
   259d4:	mvn	r0, #0
   259d8:	str	r0, [fp, #-72]	; 0xffffffb8
   259dc:	b	259e4 <__assert_fail@plt+0x14550>
   259e0:	b	25a08 <__assert_fail@plt+0x14574>
   259e4:	b	259e8 <__assert_fail@plt+0x14554>
   259e8:	b	259ec <__assert_fail@plt+0x14558>
   259ec:	add	r0, sp, #180	; 0xb4
   259f0:	bl	33274 <__assert_fail@plt+0x21de0>
   259f4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   259f8:	ldr	r1, [fp, #-68]	; 0xffffffbc
   259fc:	add	r0, r1, r0
   25a00:	str	r0, [fp, #-68]	; 0xffffffbc
   25a04:	b	25464 <__assert_fail@plt+0x13fd0>
   25a08:	ldr	r0, [fp, #-72]	; 0xffffffb8
   25a0c:	cmn	r0, #1
   25a10:	beq	25a18 <__assert_fail@plt+0x14584>
   25a14:	b	25a18 <__assert_fail@plt+0x14584>
   25a18:	ldr	r0, [fp, #-40]	; 0xffffffd8
   25a1c:	cmp	r0, #0
   25a20:	bne	25a28 <__assert_fail@plt+0x14594>
   25a24:	b	25a28 <__assert_fail@plt+0x14594>
   25a28:	ldr	r0, [fp, #16]
   25a2c:	cmp	r0, #0
   25a30:	bls	25d9c <__assert_fail@plt+0x14908>
   25a34:	movw	r0, #1
   25a38:	str	r0, [sp, #160]	; 0xa0
   25a3c:	ldr	r0, [sp, #160]	; 0xa0
   25a40:	ldr	r1, [fp, #16]
   25a44:	cmp	r0, r1
   25a48:	bcs	25a84 <__assert_fail@plt+0x145f0>
   25a4c:	ldr	r0, [fp, #20]
   25a50:	ldr	r1, [sp, #160]	; 0xa0
   25a54:	add	r0, r0, r1, lsl #3
   25a58:	mvn	r1, #0
   25a5c:	str	r1, [r0, #4]
   25a60:	ldr	r0, [fp, #20]
   25a64:	ldr	r1, [sp, #160]	; 0xa0
   25a68:	add	r0, r0, r1, lsl #3
   25a6c:	mvn	r1, #0
   25a70:	str	r1, [r0]
   25a74:	ldr	r0, [sp, #160]	; 0xa0
   25a78:	add	r0, r0, #1
   25a7c:	str	r0, [sp, #160]	; 0xa0
   25a80:	b	25a3c <__assert_fail@plt+0x145a8>
   25a84:	ldr	r0, [fp, #20]
   25a88:	mov	r1, #0
   25a8c:	str	r1, [r0]
   25a90:	ldr	r0, [sp, #272]	; 0x110
   25a94:	ldr	r1, [fp, #20]
   25a98:	str	r0, [r1, #4]
   25a9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   25aa0:	ldrb	r0, [r0, #28]
   25aa4:	ubfx	r0, r0, #4, #1
   25aa8:	and	r0, r0, #255	; 0xff
   25aac:	cmp	r0, #0
   25ab0:	bne	25b54 <__assert_fail@plt+0x146c0>
   25ab4:	ldr	r0, [fp, #16]
   25ab8:	cmp	r0, #1
   25abc:	bls	25b54 <__assert_fail@plt+0x146c0>
   25ac0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   25ac4:	ldr	r2, [fp, #16]
   25ac8:	ldr	r3, [fp, #20]
   25acc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   25ad0:	ldrb	r1, [r1, #88]	; 0x58
   25ad4:	and	r1, r1, #1
   25ad8:	and	r1, r1, #255	; 0xff
   25adc:	cmp	r1, #0
   25ae0:	movw	r1, #0
   25ae4:	str	r0, [sp, #40]	; 0x28
   25ae8:	str	r2, [sp, #36]	; 0x24
   25aec:	str	r3, [sp, #32]
   25af0:	str	r1, [sp, #28]
   25af4:	beq	25b10 <__assert_fail@plt+0x1467c>
   25af8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   25afc:	ldr	r0, [r0, #76]	; 0x4c
   25b00:	cmp	r0, #0
   25b04:	movw	r0, #0
   25b08:	movgt	r0, #1
   25b0c:	str	r0, [sp, #28]
   25b10:	ldr	r0, [sp, #28]
   25b14:	ldr	r1, [sp, #40]	; 0x28
   25b18:	str	r0, [sp, #24]
   25b1c:	mov	r0, r1
   25b20:	add	r1, sp, #180	; 0xb4
   25b24:	ldr	r2, [sp, #36]	; 0x24
   25b28:	ldr	r3, [sp, #32]
   25b2c:	ldr	ip, [sp, #24]
   25b30:	and	lr, ip, #1
   25b34:	str	lr, [sp]
   25b38:	bl	33380 <__assert_fail@plt+0x21eec>
   25b3c:	str	r0, [fp, #-40]	; 0xffffffd8
   25b40:	ldr	r0, [fp, #-40]	; 0xffffffd8
   25b44:	cmp	r0, #0
   25b48:	beq	25b50 <__assert_fail@plt+0x146bc>
   25b4c:	b	25da0 <__assert_fail@plt+0x1490c>
   25b50:	b	25b54 <__assert_fail@plt+0x146c0>
   25b54:	movw	r0, #0
   25b58:	str	r0, [sp, #160]	; 0xa0
   25b5c:	ldr	r0, [sp, #160]	; 0xa0
   25b60:	ldr	r1, [fp, #16]
   25b64:	cmp	r0, r1
   25b68:	bcs	25c88 <__assert_fail@plt+0x147f4>
   25b6c:	ldr	r0, [fp, #20]
   25b70:	ldr	r1, [sp, #160]	; 0xa0
   25b74:	add	r0, r0, r1, lsl #3
   25b78:	ldr	r0, [r0]
   25b7c:	cmn	r0, #1
   25b80:	beq	25c74 <__assert_fail@plt+0x147e0>
   25b84:	ldrb	r0, [sp, #256]	; 0x100
   25b88:	cmp	r0, #0
   25b8c:	beq	25c40 <__assert_fail@plt+0x147ac>
   25b90:	ldr	r0, [fp, #20]
   25b94:	ldr	r1, [sp, #160]	; 0xa0
   25b98:	add	r0, r0, r1, lsl #3
   25b9c:	ldr	r0, [r0]
   25ba0:	ldr	r1, [sp, #208]	; 0xd0
   25ba4:	cmp	r0, r1
   25ba8:	bne	25bb8 <__assert_fail@plt+0x14724>
   25bac:	ldr	r0, [sp, #212]	; 0xd4
   25bb0:	str	r0, [sp, #20]
   25bb4:	b	25bd4 <__assert_fail@plt+0x14740>
   25bb8:	ldr	r0, [sp, #192]	; 0xc0
   25bbc:	ldr	r1, [fp, #20]
   25bc0:	ldr	r2, [sp, #160]	; 0xa0
   25bc4:	ldr	r1, [r1, r2, lsl #3]
   25bc8:	add	r0, r0, r1, lsl #2
   25bcc:	ldr	r0, [r0]
   25bd0:	str	r0, [sp, #20]
   25bd4:	ldr	r0, [sp, #20]
   25bd8:	ldr	r1, [fp, #20]
   25bdc:	ldr	r2, [sp, #160]	; 0xa0
   25be0:	str	r0, [r1, r2, lsl #3]
   25be4:	ldr	r0, [fp, #20]
   25be8:	ldr	r1, [sp, #160]	; 0xa0
   25bec:	add	r0, r0, r1, lsl #3
   25bf0:	ldr	r0, [r0, #4]
   25bf4:	ldr	r1, [sp, #208]	; 0xd0
   25bf8:	cmp	r0, r1
   25bfc:	bne	25c0c <__assert_fail@plt+0x14778>
   25c00:	ldr	r0, [sp, #212]	; 0xd4
   25c04:	str	r0, [sp, #16]
   25c08:	b	25c2c <__assert_fail@plt+0x14798>
   25c0c:	ldr	r0, [sp, #192]	; 0xc0
   25c10:	ldr	r1, [fp, #20]
   25c14:	ldr	r2, [sp, #160]	; 0xa0
   25c18:	add	r1, r1, r2, lsl #3
   25c1c:	ldr	r1, [r1, #4]
   25c20:	add	r0, r0, r1, lsl #2
   25c24:	ldr	r0, [r0]
   25c28:	str	r0, [sp, #16]
   25c2c:	ldr	r0, [sp, #16]
   25c30:	ldr	r1, [fp, #20]
   25c34:	ldr	r2, [sp, #160]	; 0xa0
   25c38:	add	r1, r1, r2, lsl #3
   25c3c:	str	r0, [r1, #4]
   25c40:	ldr	r0, [fp, #-68]	; 0xffffffbc
   25c44:	ldr	r1, [fp, #20]
   25c48:	ldr	r2, [sp, #160]	; 0xa0
   25c4c:	ldr	r3, [r1, r2, lsl #3]
   25c50:	add	r0, r3, r0
   25c54:	str	r0, [r1, r2, lsl #3]
   25c58:	ldr	r0, [fp, #-68]	; 0xffffffbc
   25c5c:	ldr	r1, [fp, #20]
   25c60:	ldr	r2, [sp, #160]	; 0xa0
   25c64:	add	r1, r1, r2, lsl #3
   25c68:	ldr	r2, [r1, #4]
   25c6c:	add	r0, r2, r0
   25c70:	str	r0, [r1, #4]
   25c74:	b	25c78 <__assert_fail@plt+0x147e4>
   25c78:	ldr	r0, [sp, #160]	; 0xa0
   25c7c:	add	r0, r0, #1
   25c80:	str	r0, [sp, #160]	; 0xa0
   25c84:	b	25b5c <__assert_fail@plt+0x146c8>
   25c88:	movw	r0, #0
   25c8c:	str	r0, [sp, #160]	; 0xa0
   25c90:	ldr	r0, [sp, #160]	; 0xa0
   25c94:	ldr	r1, [fp, #-76]	; 0xffffffb4
   25c98:	cmp	r0, r1
   25c9c:	bge	25ce4 <__assert_fail@plt+0x14850>
   25ca0:	ldr	r0, [fp, #20]
   25ca4:	ldr	r1, [fp, #16]
   25ca8:	ldr	r2, [sp, #160]	; 0xa0
   25cac:	add	r1, r1, r2
   25cb0:	mvn	r2, #0
   25cb4:	str	r2, [r0, r1, lsl #3]
   25cb8:	ldr	r0, [fp, #20]
   25cbc:	ldr	r1, [fp, #16]
   25cc0:	ldr	r2, [sp, #160]	; 0xa0
   25cc4:	add	r1, r1, r2
   25cc8:	add	r0, r0, r1, lsl #3
   25ccc:	mvn	r1, #0
   25cd0:	str	r1, [r0, #4]
   25cd4:	ldr	r0, [sp, #160]	; 0xa0
   25cd8:	add	r0, r0, #1
   25cdc:	str	r0, [sp, #160]	; 0xa0
   25ce0:	b	25c90 <__assert_fail@plt+0x147fc>
   25ce4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   25ce8:	ldr	r0, [r0, #132]	; 0x84
   25cec:	movw	r1, #0
   25cf0:	cmp	r0, r1
   25cf4:	beq	25d98 <__assert_fail@plt+0x14904>
   25cf8:	movw	r0, #0
   25cfc:	str	r0, [sp, #160]	; 0xa0
   25d00:	ldr	r0, [sp, #160]	; 0xa0
   25d04:	add	r0, r0, #1
   25d08:	ldr	r1, [fp, #16]
   25d0c:	cmp	r0, r1
   25d10:	bcs	25d94 <__assert_fail@plt+0x14900>
   25d14:	ldr	r0, [fp, #-44]	; 0xffffffd4
   25d18:	ldr	r0, [r0, #132]	; 0x84
   25d1c:	ldr	r1, [sp, #160]	; 0xa0
   25d20:	add	r0, r0, r1, lsl #2
   25d24:	ldr	r0, [r0]
   25d28:	ldr	r1, [sp, #160]	; 0xa0
   25d2c:	cmp	r0, r1
   25d30:	beq	25d80 <__assert_fail@plt+0x148ec>
   25d34:	ldr	r0, [fp, #20]
   25d38:	ldr	r1, [sp, #160]	; 0xa0
   25d3c:	add	r2, r0, r1, lsl #3
   25d40:	ldr	r3, [fp, #-44]	; 0xffffffd4
   25d44:	ldr	r3, [r3, #132]	; 0x84
   25d48:	ldr	r1, [r3, r1, lsl #2]
   25d4c:	add	r0, r0, r1, lsl #3
   25d50:	ldr	r0, [r0, #8]
   25d54:	str	r0, [r2, #8]
   25d58:	ldr	r0, [fp, #20]
   25d5c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   25d60:	ldr	r1, [r1, #132]	; 0x84
   25d64:	ldr	r2, [sp, #160]	; 0xa0
   25d68:	ldr	r1, [r1, r2, lsl #2]
   25d6c:	add	r1, r0, r1, lsl #3
   25d70:	ldr	r1, [r1, #12]
   25d74:	add	r2, r2, #1
   25d78:	add	r0, r0, r2, lsl #3
   25d7c:	str	r1, [r0, #4]
   25d80:	b	25d84 <__assert_fail@plt+0x148f0>
   25d84:	ldr	r0, [sp, #160]	; 0xa0
   25d88:	add	r0, r0, #1
   25d8c:	str	r0, [sp, #160]	; 0xa0
   25d90:	b	25d00 <__assert_fail@plt+0x1486c>
   25d94:	b	25d98 <__assert_fail@plt+0x14904>
   25d98:	b	25d9c <__assert_fail@plt+0x14908>
   25d9c:	b	25da0 <__assert_fail@plt+0x1490c>
   25da0:	ldr	r0, [sp, #280]	; 0x118
   25da4:	bl	138a4 <__assert_fail@plt+0x2410>
   25da8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   25dac:	ldr	r0, [r0, #76]	; 0x4c
   25db0:	cmp	r0, #0
   25db4:	beq	25dc0 <__assert_fail@plt+0x1492c>
   25db8:	add	r0, sp, #180	; 0xb4
   25dbc:	bl	33754 <__assert_fail@plt+0x222c0>
   25dc0:	add	r0, sp, #180	; 0xb4
   25dc4:	bl	27130 <__assert_fail@plt+0x15c9c>
   25dc8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   25dcc:	str	r0, [fp, #-20]	; 0xffffffec
   25dd0:	ldr	r0, [fp, #-20]	; 0xffffffec
   25dd4:	sub	sp, fp, #16
   25dd8:	pop	{r4, r5, r6, sl, fp, pc}
   25ddc:	svccc	0x00ffffff
   25de0:	push	{r4, r5, fp, lr}
   25de4:	add	fp, sp, #8
   25de8:	sub	sp, sp, #40	; 0x28
   25dec:	ldr	ip, [fp, #8]
   25df0:	str	r0, [fp, #-12]
   25df4:	str	r1, [fp, #-16]
   25df8:	str	r2, [fp, #-20]	; 0xffffffec
   25dfc:	str	r3, [sp, #24]
   25e00:	ldr	r0, [fp, #-12]
   25e04:	ldr	r1, [fp, #-16]
   25e08:	ldr	r2, [fp, #-20]	; 0xffffffec
   25e0c:	ldr	r3, [sp, #24]
   25e10:	ldr	lr, [fp, #-20]	; 0xffffffec
   25e14:	ldr	r4, [fp, #8]
   25e18:	movw	r5, #0
   25e1c:	str	r5, [sp]
   25e20:	str	lr, [sp, #4]
   25e24:	str	r4, [sp, #8]
   25e28:	movw	lr, #1
   25e2c:	and	lr, lr, #1
   25e30:	str	lr, [sp, #12]
   25e34:	str	ip, [sp, #20]
   25e38:	bl	25e44 <__assert_fail@plt+0x149b0>
   25e3c:	sub	sp, fp, #8
   25e40:	pop	{r4, r5, fp, pc}
   25e44:	push	{r4, r5, r6, sl, fp, lr}
   25e48:	add	fp, sp, #16
   25e4c:	sub	sp, sp, #120	; 0x78
   25e50:	ldr	ip, [fp, #20]
   25e54:	ldr	lr, [fp, #16]
   25e58:	ldr	r4, [fp, #12]
   25e5c:	ldr	r5, [fp, #8]
   25e60:	str	r0, [fp, #-24]	; 0xffffffe8
   25e64:	str	r1, [fp, #-28]	; 0xffffffe4
   25e68:	str	r2, [fp, #-32]	; 0xffffffe0
   25e6c:	str	r3, [fp, #-36]	; 0xffffffdc
   25e70:	and	r0, ip, #1
   25e74:	strb	r0, [fp, #-37]	; 0xffffffdb
   25e78:	movw	r0, #0
   25e7c:	str	r0, [fp, #-60]	; 0xffffffc4
   25e80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   25e84:	ldr	r0, [r0]
   25e88:	str	r0, [fp, #-64]	; 0xffffffc0
   25e8c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   25e90:	ldr	r1, [fp, #8]
   25e94:	add	r0, r0, r1
   25e98:	str	r0, [sp, #68]	; 0x44
   25e9c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   25ea0:	cmp	r0, #0
   25ea4:	movw	r0, #1
   25ea8:	str	r5, [sp, #64]	; 0x40
   25eac:	str	r4, [sp, #60]	; 0x3c
   25eb0:	str	lr, [sp, #56]	; 0x38
   25eb4:	str	r0, [sp, #52]	; 0x34
   25eb8:	blt	25ed4 <__assert_fail@plt+0x14a40>
   25ebc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   25ec0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   25ec4:	cmp	r0, r1
   25ec8:	movw	r0, #0
   25ecc:	movgt	r0, #1
   25ed0:	str	r0, [sp, #52]	; 0x34
   25ed4:	ldr	r0, [sp, #52]	; 0x34
   25ed8:	tst	r0, #1
   25edc:	beq	25eec <__assert_fail@plt+0x14a58>
   25ee0:	mvn	r0, #0
   25ee4:	str	r0, [fp, #-20]	; 0xffffffec
   25ee8:	b	26310 <__assert_fail@plt+0x14e7c>
   25eec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   25ef0:	ldr	r1, [sp, #68]	; 0x44
   25ef4:	cmp	r0, r1
   25ef8:	movw	r0, #1
   25efc:	str	r0, [sp, #48]	; 0x30
   25f00:	blt	25f3c <__assert_fail@plt+0x14aa8>
   25f04:	ldr	r0, [fp, #8]
   25f08:	movw	r1, #0
   25f0c:	cmp	r1, r0
   25f10:	movw	r0, #0
   25f14:	str	r0, [sp, #44]	; 0x2c
   25f18:	bgt	25f34 <__assert_fail@plt+0x14aa0>
   25f1c:	ldr	r0, [sp, #68]	; 0x44
   25f20:	ldr	r1, [fp, #-36]	; 0xffffffdc
   25f24:	cmp	r0, r1
   25f28:	movw	r0, #0
   25f2c:	movlt	r0, #1
   25f30:	str	r0, [sp, #44]	; 0x2c
   25f34:	ldr	r0, [sp, #44]	; 0x2c
   25f38:	str	r0, [sp, #48]	; 0x30
   25f3c:	ldr	r0, [sp, #48]	; 0x30
   25f40:	tst	r0, #1
   25f44:	beq	25f54 <__assert_fail@plt+0x14ac0>
   25f48:	ldr	r0, [fp, #-32]	; 0xffffffe0
   25f4c:	str	r0, [sp, #68]	; 0x44
   25f50:	b	25fb4 <__assert_fail@plt+0x14b20>
   25f54:	ldr	r0, [sp, #68]	; 0x44
   25f58:	cmp	r0, #0
   25f5c:	movw	r0, #1
   25f60:	str	r0, [sp, #40]	; 0x28
   25f64:	blt	25f9c <__assert_fail@plt+0x14b08>
   25f68:	ldr	r0, [fp, #8]
   25f6c:	cmp	r0, #0
   25f70:	movw	r0, #0
   25f74:	str	r0, [sp, #36]	; 0x24
   25f78:	bge	25f94 <__assert_fail@plt+0x14b00>
   25f7c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   25f80:	ldr	r1, [sp, #68]	; 0x44
   25f84:	cmp	r0, r1
   25f88:	movw	r0, #0
   25f8c:	movle	r0, #1
   25f90:	str	r0, [sp, #36]	; 0x24
   25f94:	ldr	r0, [sp, #36]	; 0x24
   25f98:	str	r0, [sp, #40]	; 0x28
   25f9c:	ldr	r0, [sp, #40]	; 0x28
   25fa0:	tst	r0, #1
   25fa4:	beq	25fb0 <__assert_fail@plt+0x14b1c>
   25fa8:	movw	r0, #0
   25fac:	str	r0, [sp, #68]	; 0x44
   25fb0:	b	25fb4 <__assert_fail@plt+0x14b20>
   25fb4:	movw	r0, #0
   25fb8:	movt	r0, #0
   25fbc:	cmp	r0, #0
   25fc0:	bne	25fdc <__assert_fail@plt+0x14b48>
   25fc4:	b	25fc8 <__assert_fail@plt+0x14b34>
   25fc8:	movw	r0, #0
   25fcc:	movt	r0, #0
   25fd0:	cmp	r0, #0
   25fd4:	beq	25ff0 <__assert_fail@plt+0x14b5c>
   25fd8:	b	25fdc <__assert_fail@plt+0x14b48>
   25fdc:	ldr	r0, [fp, #-64]	; 0xffffffc0
   25fe0:	add	r0, r0, #136	; 0x88
   25fe4:	bl	11230 <pthread_mutex_lock@plt>
   25fe8:	str	r0, [sp, #32]
   25fec:	b	25ff4 <__assert_fail@plt+0x14b60>
   25ff0:	b	25ff4 <__assert_fail@plt+0x14b60>
   25ff4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   25ff8:	ldrb	r0, [r0, #28]
   25ffc:	ldr	r1, [fp, #-60]	; 0xffffffc4
   26000:	orr	r2, r1, #1
   26004:	mov	r3, #1
   26008:	tst	r3, r0, lsr #5
   2600c:	movne	r1, r2
   26010:	str	r1, [fp, #-60]	; 0xffffffc4
   26014:	ldr	r0, [fp, #-24]	; 0xffffffe8
   26018:	ldrb	r0, [r0, #28]
   2601c:	ubfx	r0, r0, #6, #1
   26020:	and	r0, r0, #255	; 0xff
   26024:	cmp	r0, #0
   26028:	movw	r0, #0
   2602c:	movne	r0, #1
   26030:	tst	r0, #1
   26034:	movw	r0, #2
   26038:	moveq	r0, #0
   2603c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   26040:	orr	r0, r1, r0
   26044:	str	r0, [fp, #-60]	; 0xffffffc4
   26048:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2604c:	ldr	r1, [sp, #68]	; 0x44
   26050:	cmp	r0, r1
   26054:	bge	26090 <__assert_fail@plt+0x14bfc>
   26058:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2605c:	ldr	r0, [r0, #16]
   26060:	movw	r1, #0
   26064:	cmp	r0, r1
   26068:	beq	26090 <__assert_fail@plt+0x14bfc>
   2606c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   26070:	ldrb	r0, [r0, #28]
   26074:	ubfx	r0, r0, #3, #1
   26078:	and	r0, r0, #255	; 0xff
   2607c:	cmp	r0, #0
   26080:	bne	26090 <__assert_fail@plt+0x14bfc>
   26084:	ldr	r0, [fp, #-24]	; 0xffffffe8
   26088:	bl	23e78 <__assert_fail@plt+0x129e4>
   2608c:	str	r0, [sp, #28]
   26090:	ldr	r0, [fp, #-24]	; 0xffffffe8
   26094:	ldrb	r0, [r0, #28]
   26098:	ubfx	r0, r0, #4, #1
   2609c:	and	r0, r0, #255	; 0xff
   260a0:	cmp	r0, #0
   260a4:	beq	260b0 <__assert_fail@plt+0x14c1c>
   260a8:	movw	r0, #0
   260ac:	str	r0, [fp, #16]
   260b0:	ldr	r0, [fp, #16]
   260b4:	movw	r1, #0
   260b8:	cmp	r0, r1
   260bc:	bne	260cc <__assert_fail@plt+0x14c38>
   260c0:	movw	r0, #1
   260c4:	str	r0, [fp, #-52]	; 0xffffffcc
   260c8:	b	26158 <__assert_fail@plt+0x14cc4>
   260cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   260d0:	ldrb	r0, [r0, #28]
   260d4:	ubfx	r0, r0, #1, #2
   260d8:	and	r0, r0, #255	; 0xff
   260dc:	cmp	r0, #2
   260e0:	movw	r0, #0
   260e4:	str	r0, [sp, #24]
   260e8:	bne	2610c <__assert_fail@plt+0x14c78>
   260ec:	ldr	r0, [fp, #16]
   260f0:	ldr	r0, [r0]
   260f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   260f8:	ldr	r1, [r1, #24]
   260fc:	cmp	r0, r1
   26100:	movw	r0, #0
   26104:	movls	r0, #1
   26108:	str	r0, [sp, #24]
   2610c:	ldr	r0, [sp, #24]
   26110:	tst	r0, #1
   26114:	beq	26144 <__assert_fail@plt+0x14cb0>
   26118:	ldr	r0, [fp, #16]
   2611c:	ldr	r0, [r0]
   26120:	str	r0, [fp, #-52]	; 0xffffffcc
   26124:	ldr	r0, [fp, #-52]	; 0xffffffcc
   26128:	cmp	r0, #1
   2612c:	bge	26140 <__assert_fail@plt+0x14cac>
   26130:	movw	r0, #0
   26134:	str	r0, [fp, #16]
   26138:	movw	r0, #1
   2613c:	str	r0, [fp, #-52]	; 0xffffffcc
   26140:	b	26154 <__assert_fail@plt+0x14cc0>
   26144:	ldr	r0, [fp, #-24]	; 0xffffffe8
   26148:	ldr	r0, [r0, #24]
   2614c:	add	r0, r0, #1
   26150:	str	r0, [fp, #-52]	; 0xffffffcc
   26154:	b	26158 <__assert_fail@plt+0x14cc4>
   26158:	ldr	r0, [fp, #-52]	; 0xffffffcc
   2615c:	lsl	r0, r0, #3
   26160:	bl	3fbd8 <__assert_fail@plt+0x2e744>
   26164:	str	r0, [fp, #-48]	; 0xffffffd0
   26168:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2616c:	movw	lr, #0
   26170:	cmp	r0, lr
   26174:	bne	26184 <__assert_fail@plt+0x14cf0>
   26178:	mvn	r0, #1
   2617c:	str	r0, [fp, #-56]	; 0xffffffc8
   26180:	b	262c8 <__assert_fail@plt+0x14e34>
   26184:	ldr	r0, [fp, #-24]	; 0xffffffe8
   26188:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2618c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   26190:	ldr	r3, [fp, #-36]	; 0xffffffdc
   26194:	ldr	ip, [sp, #68]	; 0x44
   26198:	ldr	lr, [fp, #12]
   2619c:	ldr	r4, [fp, #-52]	; 0xffffffcc
   261a0:	ldr	r5, [fp, #-48]	; 0xffffffd0
   261a4:	ldr	r6, [fp, #-60]	; 0xffffffc4
   261a8:	str	ip, [sp]
   261ac:	str	lr, [sp, #4]
   261b0:	str	r4, [sp, #8]
   261b4:	str	r5, [sp, #12]
   261b8:	str	r6, [sp, #16]
   261bc:	bl	24ec8 <__assert_fail@plt+0x13a34>
   261c0:	str	r0, [fp, #-44]	; 0xffffffd4
   261c4:	movw	r0, #0
   261c8:	str	r0, [fp, #-56]	; 0xffffffc8
   261cc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   261d0:	cmp	r0, #0
   261d4:	beq	261fc <__assert_fail@plt+0x14d68>
   261d8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   261dc:	cmp	r0, #1
   261e0:	movw	r0, #0
   261e4:	moveq	r0, #1
   261e8:	tst	r0, #1
   261ec:	mvn	r0, #0
   261f0:	mvneq	r0, #1
   261f4:	str	r0, [fp, #-56]	; 0xffffffc8
   261f8:	b	26268 <__assert_fail@plt+0x14dd4>
   261fc:	ldr	r0, [fp, #16]
   26200:	movw	r1, #0
   26204:	cmp	r0, r1
   26208:	beq	26264 <__assert_fail@plt+0x14dd0>
   2620c:	ldr	r0, [fp, #16]
   26210:	ldr	r1, [fp, #-48]	; 0xffffffd0
   26214:	ldr	r2, [fp, #-52]	; 0xffffffcc
   26218:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2621c:	ldrb	r3, [r3, #28]
   26220:	ubfx	r3, r3, #1, #2
   26224:	bl	31778 <__assert_fail@plt+0x202e4>
   26228:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2622c:	ldrb	r2, [r1, #28]
   26230:	and	r0, r0, #3
   26234:	and	r2, r2, #249	; 0xf9
   26238:	orr	r0, r2, r0, lsl #1
   2623c:	strb	r0, [r1, #28]
   26240:	ldr	r0, [fp, #-24]	; 0xffffffe8
   26244:	ldrb	r0, [r0, #28]
   26248:	ubfx	r0, r0, #1, #2
   2624c:	and	r0, r0, #255	; 0xff
   26250:	cmp	r0, #0
   26254:	bne	26260 <__assert_fail@plt+0x14dcc>
   26258:	mvn	r0, #1
   2625c:	str	r0, [fp, #-56]	; 0xffffffc8
   26260:	b	26264 <__assert_fail@plt+0x14dd0>
   26264:	b	26268 <__assert_fail@plt+0x14dd4>
   26268:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2626c:	cmp	r0, #0
   26270:	bne	262c0 <__assert_fail@plt+0x14e2c>
   26274:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   26278:	tst	r0, #1
   2627c:	beq	262b0 <__assert_fail@plt+0x14e1c>
   26280:	ldr	r0, [fp, #-48]	; 0xffffffd0
   26284:	ldr	r0, [r0]
   26288:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2628c:	cmp	r0, r1
   26290:	bne	26298 <__assert_fail@plt+0x14e04>
   26294:	b	26298 <__assert_fail@plt+0x14e04>
   26298:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2629c:	ldr	r0, [r0, #4]
   262a0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   262a4:	sub	r0, r0, r1
   262a8:	str	r0, [fp, #-56]	; 0xffffffc8
   262ac:	b	262bc <__assert_fail@plt+0x14e28>
   262b0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   262b4:	ldr	r0, [r0]
   262b8:	str	r0, [fp, #-56]	; 0xffffffc8
   262bc:	b	262c0 <__assert_fail@plt+0x14e2c>
   262c0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   262c4:	bl	138a4 <__assert_fail@plt+0x2410>
   262c8:	movw	r0, #0
   262cc:	movt	r0, #0
   262d0:	cmp	r0, #0
   262d4:	bne	262f0 <__assert_fail@plt+0x14e5c>
   262d8:	b	262dc <__assert_fail@plt+0x14e48>
   262dc:	movw	r0, #0
   262e0:	movt	r0, #0
   262e4:	cmp	r0, #0
   262e8:	beq	26304 <__assert_fail@plt+0x14e70>
   262ec:	b	262f0 <__assert_fail@plt+0x14e5c>
   262f0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   262f4:	add	r0, r0, #136	; 0x88
   262f8:	bl	1117c <pthread_mutex_unlock@plt>
   262fc:	str	r0, [sp, #20]
   26300:	b	26308 <__assert_fail@plt+0x14e74>
   26304:	b	26308 <__assert_fail@plt+0x14e74>
   26308:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2630c:	str	r0, [fp, #-20]	; 0xffffffec
   26310:	ldr	r0, [fp, #-20]	; 0xffffffec
   26314:	sub	sp, fp, #16
   26318:	pop	{r4, r5, r6, sl, fp, pc}
   2631c:	push	{r4, r5, r6, sl, fp, lr}
   26320:	add	fp, sp, #16
   26324:	sub	sp, sp, #40	; 0x28
   26328:	ldr	ip, [fp, #12]
   2632c:	ldr	lr, [fp, #8]
   26330:	str	r0, [fp, #-20]	; 0xffffffec
   26334:	str	r1, [fp, #-24]	; 0xffffffe8
   26338:	str	r2, [sp, #28]
   2633c:	str	r3, [sp, #24]
   26340:	ldr	r0, [fp, #-20]	; 0xffffffec
   26344:	ldr	r1, [fp, #-24]	; 0xffffffe8
   26348:	ldr	r2, [sp, #28]
   2634c:	ldr	r3, [sp, #24]
   26350:	ldr	r4, [fp, #8]
   26354:	ldr	r5, [sp, #28]
   26358:	ldr	r6, [fp, #12]
   2635c:	str	r4, [sp]
   26360:	str	r5, [sp, #4]
   26364:	str	r6, [sp, #8]
   26368:	movw	r4, #0
   2636c:	and	r4, r4, #1
   26370:	str	r4, [sp, #12]
   26374:	str	lr, [sp, #20]
   26378:	str	ip, [sp, #16]
   2637c:	bl	25e44 <__assert_fail@plt+0x149b0>
   26380:	sub	sp, fp, #16
   26384:	pop	{r4, r5, r6, sl, fp, pc}
   26388:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2638c:	add	fp, sp, #24
   26390:	sub	sp, sp, #56	; 0x38
   26394:	ldr	ip, [fp, #20]
   26398:	ldr	lr, [fp, #16]
   2639c:	ldr	r4, [fp, #12]
   263a0:	ldr	r5, [fp, #8]
   263a4:	str	r0, [fp, #-28]	; 0xffffffe4
   263a8:	str	r1, [fp, #-32]	; 0xffffffe0
   263ac:	str	r2, [fp, #-36]	; 0xffffffdc
   263b0:	str	r3, [sp, #40]	; 0x28
   263b4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   263b8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   263bc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   263c0:	ldr	r3, [sp, #40]	; 0x28
   263c4:	ldr	r6, [fp, #8]
   263c8:	ldr	r7, [fp, #12]
   263cc:	ldr	r8, [fp, #16]
   263d0:	ldr	r9, [fp, #20]
   263d4:	str	r6, [sp]
   263d8:	str	r7, [sp, #4]
   263dc:	movw	r6, #0
   263e0:	str	r6, [sp, #8]
   263e4:	str	r8, [sp, #12]
   263e8:	str	r9, [sp, #16]
   263ec:	movw	r6, #1
   263f0:	and	r6, r6, #1
   263f4:	str	r6, [sp, #20]
   263f8:	str	r5, [sp, #36]	; 0x24
   263fc:	str	ip, [sp, #32]
   26400:	str	lr, [sp, #28]
   26404:	str	r4, [sp, #24]
   26408:	bl	26414 <__assert_fail@plt+0x14f80>
   2640c:	sub	sp, fp, #24
   26410:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   26414:	push	{r4, r5, r6, r7, fp, lr}
   26418:	add	fp, sp, #16
   2641c:	sub	sp, sp, #88	; 0x58
   26420:	ldr	ip, [fp, #28]
   26424:	ldr	lr, [fp, #24]
   26428:	ldr	r4, [fp, #20]
   2642c:	ldr	r5, [fp, #16]
   26430:	ldr	r6, [fp, #12]
   26434:	ldr	r7, [fp, #8]
   26438:	str	r0, [fp, #-24]	; 0xffffffe8
   2643c:	str	r1, [fp, #-28]	; 0xffffffe4
   26440:	str	r2, [fp, #-32]	; 0xffffffe0
   26444:	str	r3, [fp, #-36]	; 0xffffffdc
   26448:	and	r0, ip, #1
   2644c:	strb	r0, [fp, #-37]	; 0xffffffdb
   26450:	movw	r0, #0
   26454:	str	r0, [sp, #48]	; 0x30
   26458:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2645c:	cmp	r0, #0
   26460:	movw	r0, #1
   26464:	str	r7, [sp, #44]	; 0x2c
   26468:	str	r4, [sp, #40]	; 0x28
   2646c:	str	r5, [sp, #36]	; 0x24
   26470:	str	r6, [sp, #32]
   26474:	str	lr, [sp, #28]
   26478:	str	r0, [sp, #24]
   2647c:	blt	264c8 <__assert_fail@plt+0x15034>
   26480:	ldr	r0, [fp, #8]
   26484:	cmp	r0, #0
   26488:	movw	r0, #1
   2648c:	str	r0, [sp, #24]
   26490:	blt	264c8 <__assert_fail@plt+0x15034>
   26494:	ldr	r0, [fp, #24]
   26498:	cmp	r0, #0
   2649c:	movw	r0, #1
   264a0:	str	r0, [sp, #24]
   264a4:	blt	264c8 <__assert_fail@plt+0x15034>
   264a8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   264ac:	ldr	r1, [fp, #8]
   264b0:	add	r1, r0, r1
   264b4:	mov	r2, #1
   264b8:	cmp	r1, r0
   264bc:	movwvc	r2, #0
   264c0:	str	r1, [sp, #52]	; 0x34
   264c4:	str	r2, [sp, #24]
   264c8:	ldr	r0, [sp, #24]
   264cc:	tst	r0, #1
   264d0:	beq	264e0 <__assert_fail@plt+0x1504c>
   264d4:	mvn	r0, #1
   264d8:	str	r0, [fp, #-20]	; 0xffffffec
   264dc:	b	265bc <__assert_fail@plt+0x15128>
   264e0:	ldr	r0, [fp, #8]
   264e4:	cmp	r0, #0
   264e8:	ble	26568 <__assert_fail@plt+0x150d4>
   264ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   264f0:	cmp	r0, #0
   264f4:	ble	2655c <__assert_fail@plt+0x150c8>
   264f8:	ldr	r0, [sp, #52]	; 0x34
   264fc:	mov	r1, r0
   26500:	str	r1, [sp, #20]
   26504:	bl	3fbd8 <__assert_fail@plt+0x2e744>
   26508:	str	r0, [sp, #48]	; 0x30
   2650c:	ldr	r0, [sp, #48]	; 0x30
   26510:	movw	r1, #0
   26514:	cmp	r0, r1
   26518:	bne	26528 <__assert_fail@plt+0x15094>
   2651c:	mvn	r0, #1
   26520:	str	r0, [fp, #-20]	; 0xffffffec
   26524:	b	265bc <__assert_fail@plt+0x15128>
   26528:	ldr	r0, [sp, #48]	; 0x30
   2652c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   26530:	ldr	r2, [fp, #-32]	; 0xffffffe0
   26534:	bl	11248 <memcpy@plt>
   26538:	ldr	r0, [sp, #48]	; 0x30
   2653c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   26540:	add	r0, r0, r1
   26544:	ldr	r1, [fp, #-36]	; 0xffffffdc
   26548:	ldr	r2, [fp, #8]
   2654c:	bl	11248 <memcpy@plt>
   26550:	ldr	r0, [sp, #48]	; 0x30
   26554:	str	r0, [fp, #-44]	; 0xffffffd4
   26558:	b	26564 <__assert_fail@plt+0x150d0>
   2655c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   26560:	str	r0, [fp, #-44]	; 0xffffffd4
   26564:	b	26570 <__assert_fail@plt+0x150dc>
   26568:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2656c:	str	r0, [fp, #-44]	; 0xffffffd4
   26570:	ldr	r0, [fp, #-24]	; 0xffffffe8
   26574:	ldr	r1, [fp, #-44]	; 0xffffffd4
   26578:	ldr	r2, [sp, #52]	; 0x34
   2657c:	ldr	r3, [fp, #12]
   26580:	ldr	ip, [fp, #16]
   26584:	ldr	lr, [fp, #24]
   26588:	ldr	r4, [fp, #20]
   2658c:	ldrb	r5, [fp, #-37]	; 0xffffffdb
   26590:	str	ip, [sp]
   26594:	str	lr, [sp, #4]
   26598:	str	r4, [sp, #8]
   2659c:	and	ip, r5, #1
   265a0:	str	ip, [sp, #12]
   265a4:	bl	25e44 <__assert_fail@plt+0x149b0>
   265a8:	str	r0, [fp, #-48]	; 0xffffffd0
   265ac:	ldr	r0, [sp, #48]	; 0x30
   265b0:	bl	138a4 <__assert_fail@plt+0x2410>
   265b4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   265b8:	str	r0, [fp, #-20]	; 0xffffffec
   265bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   265c0:	sub	sp, fp, #16
   265c4:	pop	{r4, r5, r6, r7, fp, pc}
   265c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   265cc:	add	fp, sp, #28
   265d0:	sub	sp, sp, #68	; 0x44
   265d4:	ldr	ip, [fp, #24]
   265d8:	ldr	lr, [fp, #20]
   265dc:	ldr	r4, [fp, #16]
   265e0:	ldr	r5, [fp, #12]
   265e4:	ldr	r6, [fp, #8]
   265e8:	str	r0, [fp, #-32]	; 0xffffffe0
   265ec:	str	r1, [fp, #-36]	; 0xffffffdc
   265f0:	str	r2, [fp, #-40]	; 0xffffffd8
   265f4:	str	r3, [fp, #-44]	; 0xffffffd4
   265f8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   265fc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   26600:	ldr	r2, [fp, #-40]	; 0xffffffd8
   26604:	ldr	r3, [fp, #-44]	; 0xffffffd4
   26608:	ldr	r7, [fp, #8]
   2660c:	ldr	r8, [fp, #12]
   26610:	ldr	r9, [fp, #16]
   26614:	ldr	sl, [fp, #20]
   26618:	str	r0, [sp, #48]	; 0x30
   2661c:	ldr	r0, [fp, #24]
   26620:	str	r0, [sp, #44]	; 0x2c
   26624:	ldr	r0, [sp, #48]	; 0x30
   26628:	str	r7, [sp]
   2662c:	str	r8, [sp, #4]
   26630:	str	r9, [sp, #8]
   26634:	str	sl, [sp, #12]
   26638:	ldr	r7, [sp, #44]	; 0x2c
   2663c:	str	r7, [sp, #16]
   26640:	movw	r8, #0
   26644:	and	r8, r8, #1
   26648:	str	r8, [sp, #20]
   2664c:	str	r6, [sp, #40]	; 0x28
   26650:	str	lr, [sp, #36]	; 0x24
   26654:	str	r4, [sp, #32]
   26658:	str	r5, [sp, #28]
   2665c:	str	ip, [sp, #24]
   26660:	bl	26414 <__assert_fail@plt+0x14f80>
   26664:	sub	sp, fp, #28
   26668:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2666c:	sub	sp, sp, #20
   26670:	ldr	ip, [sp, #20]
   26674:	str	r0, [sp, #16]
   26678:	str	r1, [sp, #12]
   2667c:	str	r2, [sp, #8]
   26680:	str	r3, [sp, #4]
   26684:	ldr	r0, [sp, #8]
   26688:	cmp	r0, #0
   2668c:	str	ip, [sp]
   26690:	beq	266d4 <__assert_fail@plt+0x15240>
   26694:	ldr	r0, [sp, #16]
   26698:	ldrb	r1, [r0, #28]
   2669c:	bic	r1, r1, #6
   266a0:	movw	r2, #2
   266a4:	orr	r1, r1, r2
   266a8:	strb	r1, [r0, #28]
   266ac:	ldr	r0, [sp, #8]
   266b0:	ldr	r1, [sp, #12]
   266b4:	str	r0, [r1]
   266b8:	ldr	r0, [sp, #4]
   266bc:	ldr	r1, [sp, #12]
   266c0:	str	r0, [r1, #4]
   266c4:	ldr	r0, [sp, #20]
   266c8:	ldr	r1, [sp, #12]
   266cc:	str	r0, [r1, #8]
   266d0:	b	26700 <__assert_fail@plt+0x1526c>
   266d4:	ldr	r0, [sp, #16]
   266d8:	ldrb	r1, [r0, #28]
   266dc:	bic	r1, r1, #6
   266e0:	strb	r1, [r0, #28]
   266e4:	ldr	r0, [sp, #12]
   266e8:	movw	r1, #0
   266ec:	str	r1, [r0]
   266f0:	ldr	r0, [sp, #12]
   266f4:	str	r1, [r0, #8]
   266f8:	ldr	r0, [sp, #12]
   266fc:	str	r1, [r0, #4]
   26700:	add	sp, sp, #20
   26704:	bx	lr
   26708:	push	{fp, lr}
   2670c:	mov	fp, sp
   26710:	sub	sp, sp, #8
   26714:	str	r0, [sp, #4]
   26718:	ldr	r0, [sp, #4]
   2671c:	ldr	r0, [r0, #4]
   26720:	and	r0, r0, #255	; 0xff
   26724:	cmp	r0, #6
   26728:	bne	26754 <__assert_fail@plt+0x152c0>
   2672c:	ldr	r0, [sp, #4]
   26730:	ldr	r0, [r0, #4]
   26734:	lsr	r0, r0, #18
   26738:	and	r0, r0, #1
   2673c:	cmp	r0, #0
   26740:	bne	26754 <__assert_fail@plt+0x152c0>
   26744:	ldr	r0, [sp, #4]
   26748:	ldr	r0, [r0]
   2674c:	bl	26828 <__assert_fail@plt+0x15394>
   26750:	b	26790 <__assert_fail@plt+0x152fc>
   26754:	ldr	r0, [sp, #4]
   26758:	ldr	r0, [r0, #4]
   2675c:	and	r0, r0, #255	; 0xff
   26760:	cmp	r0, #3
   26764:	bne	2678c <__assert_fail@plt+0x152f8>
   26768:	ldr	r0, [sp, #4]
   2676c:	ldr	r0, [r0, #4]
   26770:	lsr	r0, r0, #18
   26774:	and	r0, r0, #1
   26778:	cmp	r0, #0
   2677c:	bne	2678c <__assert_fail@plt+0x152f8>
   26780:	ldr	r0, [sp, #4]
   26784:	ldr	r0, [r0]
   26788:	bl	138a4 <__assert_fail@plt+0x2410>
   2678c:	b	26790 <__assert_fail@plt+0x152fc>
   26790:	mov	sp, fp
   26794:	pop	{fp, pc}
   26798:	push	{fp, lr}
   2679c:	mov	fp, sp
   267a0:	sub	sp, sp, #8
   267a4:	str	r0, [sp, #4]
   267a8:	ldr	r0, [sp, #4]
   267ac:	ldr	r0, [r0, #24]
   267b0:	bl	138a4 <__assert_fail@plt+0x2410>
   267b4:	ldr	r0, [sp, #4]
   267b8:	ldr	r0, [r0, #36]	; 0x24
   267bc:	bl	138a4 <__assert_fail@plt+0x2410>
   267c0:	ldr	r0, [sp, #4]
   267c4:	ldr	r0, [r0, #40]	; 0x28
   267c8:	ldr	lr, [sp, #4]
   267cc:	add	lr, lr, #4
   267d0:	cmp	r0, lr
   267d4:	beq	267f4 <__assert_fail@plt+0x15360>
   267d8:	ldr	r0, [sp, #4]
   267dc:	ldr	r0, [r0, #40]	; 0x28
   267e0:	ldr	r0, [r0, #8]
   267e4:	bl	138a4 <__assert_fail@plt+0x2410>
   267e8:	ldr	r0, [sp, #4]
   267ec:	ldr	r0, [r0, #40]	; 0x28
   267f0:	bl	138a4 <__assert_fail@plt+0x2410>
   267f4:	ldr	r0, [sp, #4]
   267f8:	ldr	r0, [r0, #12]
   267fc:	bl	138a4 <__assert_fail@plt+0x2410>
   26800:	ldr	r0, [sp, #4]
   26804:	ldr	r0, [r0, #48]	; 0x30
   26808:	bl	138a4 <__assert_fail@plt+0x2410>
   2680c:	ldr	r0, [sp, #4]
   26810:	ldr	r0, [r0, #44]	; 0x2c
   26814:	bl	138a4 <__assert_fail@plt+0x2410>
   26818:	ldr	r0, [sp, #4]
   2681c:	bl	138a4 <__assert_fail@plt+0x2410>
   26820:	mov	sp, fp
   26824:	pop	{fp, pc}
   26828:	push	{fp, lr}
   2682c:	mov	fp, sp
   26830:	sub	sp, sp, #8
   26834:	str	r0, [sp, #4]
   26838:	ldr	r0, [sp, #4]
   2683c:	ldr	r0, [r0]
   26840:	bl	138a4 <__assert_fail@plt+0x2410>
   26844:	ldr	r0, [sp, #4]
   26848:	ldr	r0, [r0, #4]
   2684c:	bl	138a4 <__assert_fail@plt+0x2410>
   26850:	ldr	r0, [sp, #4]
   26854:	ldr	r0, [r0, #8]
   26858:	bl	138a4 <__assert_fail@plt+0x2410>
   2685c:	ldr	r0, [sp, #4]
   26860:	ldr	r0, [r0, #12]
   26864:	bl	138a4 <__assert_fail@plt+0x2410>
   26868:	ldr	r0, [sp, #4]
   2686c:	bl	138a4 <__assert_fail@plt+0x2410>
   26870:	mov	sp, fp
   26874:	pop	{fp, pc}
   26878:	push	{fp, lr}
   2687c:	mov	fp, sp
   26880:	sub	sp, sp, #120	; 0x78
   26884:	str	r0, [fp, #-8]
   26888:	str	r1, [fp, #-12]
   2688c:	movw	r0, #4
   26890:	str	r0, [fp, #-24]	; 0xffffffe8
   26894:	ldr	r0, [fp, #-24]	; 0xffffffe8
   26898:	movw	r1, #8
   2689c:	cmp	r1, r0
   268a0:	bcs	268b0 <__assert_fail@plt+0x1541c>
   268a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   268a8:	str	r0, [fp, #-48]	; 0xffffffd0
   268ac:	b	268bc <__assert_fail@plt+0x15428>
   268b0:	movw	r0, #8
   268b4:	str	r0, [fp, #-48]	; 0xffffffd0
   268b8:	b	268bc <__assert_fail@plt+0x15428>
   268bc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   268c0:	movw	r1, #12
   268c4:	cmp	r1, r0
   268c8:	bcs	26900 <__assert_fail@plt+0x1546c>
   268cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   268d0:	movw	r1, #8
   268d4:	cmp	r1, r0
   268d8:	bcs	268e8 <__assert_fail@plt+0x15454>
   268dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   268e0:	str	r0, [fp, #-52]	; 0xffffffcc
   268e4:	b	268f4 <__assert_fail@plt+0x15460>
   268e8:	movw	r0, #8
   268ec:	str	r0, [fp, #-52]	; 0xffffffcc
   268f0:	b	268f4 <__assert_fail@plt+0x15460>
   268f4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   268f8:	str	r0, [fp, #-56]	; 0xffffffc8
   268fc:	b	2690c <__assert_fail@plt+0x15478>
   26900:	movw	r0, #12
   26904:	str	r0, [fp, #-56]	; 0xffffffc8
   26908:	b	2690c <__assert_fail@plt+0x15478>
   2690c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   26910:	movw	r1, #8
   26914:	cmp	r1, r0
   26918:	bcs	269a0 <__assert_fail@plt+0x1550c>
   2691c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   26920:	movw	r1, #8
   26924:	cmp	r1, r0
   26928:	bcs	26938 <__assert_fail@plt+0x154a4>
   2692c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   26930:	str	r0, [sp, #60]	; 0x3c
   26934:	b	26944 <__assert_fail@plt+0x154b0>
   26938:	movw	r0, #8
   2693c:	str	r0, [sp, #60]	; 0x3c
   26940:	b	26944 <__assert_fail@plt+0x154b0>
   26944:	ldr	r0, [sp, #60]	; 0x3c
   26948:	movw	r1, #12
   2694c:	cmp	r1, r0
   26950:	bcs	26988 <__assert_fail@plt+0x154f4>
   26954:	ldr	r0, [fp, #-24]	; 0xffffffe8
   26958:	movw	r1, #8
   2695c:	cmp	r1, r0
   26960:	bcs	26970 <__assert_fail@plt+0x154dc>
   26964:	ldr	r0, [fp, #-24]	; 0xffffffe8
   26968:	str	r0, [sp, #56]	; 0x38
   2696c:	b	2697c <__assert_fail@plt+0x154e8>
   26970:	movw	r0, #8
   26974:	str	r0, [sp, #56]	; 0x38
   26978:	b	2697c <__assert_fail@plt+0x154e8>
   2697c:	ldr	r0, [sp, #56]	; 0x38
   26980:	str	r0, [sp, #52]	; 0x34
   26984:	b	26994 <__assert_fail@plt+0x15500>
   26988:	movw	r0, #12
   2698c:	str	r0, [sp, #52]	; 0x34
   26990:	b	26994 <__assert_fail@plt+0x15500>
   26994:	ldr	r0, [sp, #52]	; 0x34
   26998:	str	r0, [sp, #48]	; 0x30
   2699c:	b	269ac <__assert_fail@plt+0x15518>
   269a0:	movw	r0, #8
   269a4:	str	r0, [sp, #48]	; 0x30
   269a8:	b	269ac <__assert_fail@plt+0x15518>
   269ac:	ldr	r0, [sp, #48]	; 0x30
   269b0:	movw	r1, #12
   269b4:	cmp	r1, r0
   269b8:	bcs	26ae0 <__assert_fail@plt+0x1564c>
   269bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   269c0:	movw	r1, #8
   269c4:	cmp	r1, r0
   269c8:	bcs	269d8 <__assert_fail@plt+0x15544>
   269cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   269d0:	str	r0, [sp, #44]	; 0x2c
   269d4:	b	269e4 <__assert_fail@plt+0x15550>
   269d8:	movw	r0, #8
   269dc:	str	r0, [sp, #44]	; 0x2c
   269e0:	b	269e4 <__assert_fail@plt+0x15550>
   269e4:	ldr	r0, [sp, #44]	; 0x2c
   269e8:	movw	r1, #12
   269ec:	cmp	r1, r0
   269f0:	bcs	26a28 <__assert_fail@plt+0x15594>
   269f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   269f8:	movw	r1, #8
   269fc:	cmp	r1, r0
   26a00:	bcs	26a10 <__assert_fail@plt+0x1557c>
   26a04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   26a08:	str	r0, [sp, #40]	; 0x28
   26a0c:	b	26a1c <__assert_fail@plt+0x15588>
   26a10:	movw	r0, #8
   26a14:	str	r0, [sp, #40]	; 0x28
   26a18:	b	26a1c <__assert_fail@plt+0x15588>
   26a1c:	ldr	r0, [sp, #40]	; 0x28
   26a20:	str	r0, [sp, #36]	; 0x24
   26a24:	b	26a34 <__assert_fail@plt+0x155a0>
   26a28:	movw	r0, #12
   26a2c:	str	r0, [sp, #36]	; 0x24
   26a30:	b	26a34 <__assert_fail@plt+0x155a0>
   26a34:	ldr	r0, [sp, #36]	; 0x24
   26a38:	movw	r1, #8
   26a3c:	cmp	r1, r0
   26a40:	bcs	26ac8 <__assert_fail@plt+0x15634>
   26a44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   26a48:	movw	r1, #8
   26a4c:	cmp	r1, r0
   26a50:	bcs	26a60 <__assert_fail@plt+0x155cc>
   26a54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   26a58:	str	r0, [sp, #32]
   26a5c:	b	26a6c <__assert_fail@plt+0x155d8>
   26a60:	movw	r0, #8
   26a64:	str	r0, [sp, #32]
   26a68:	b	26a6c <__assert_fail@plt+0x155d8>
   26a6c:	ldr	r0, [sp, #32]
   26a70:	movw	r1, #12
   26a74:	cmp	r1, r0
   26a78:	bcs	26ab0 <__assert_fail@plt+0x1561c>
   26a7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   26a80:	movw	r1, #8
   26a84:	cmp	r1, r0
   26a88:	bcs	26a98 <__assert_fail@plt+0x15604>
   26a8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   26a90:	str	r0, [sp, #28]
   26a94:	b	26aa4 <__assert_fail@plt+0x15610>
   26a98:	movw	r0, #8
   26a9c:	str	r0, [sp, #28]
   26aa0:	b	26aa4 <__assert_fail@plt+0x15610>
   26aa4:	ldr	r0, [sp, #28]
   26aa8:	str	r0, [sp, #24]
   26aac:	b	26abc <__assert_fail@plt+0x15628>
   26ab0:	movw	r0, #12
   26ab4:	str	r0, [sp, #24]
   26ab8:	b	26abc <__assert_fail@plt+0x15628>
   26abc:	ldr	r0, [sp, #24]
   26ac0:	str	r0, [sp, #20]
   26ac4:	b	26ad4 <__assert_fail@plt+0x15640>
   26ac8:	movw	r0, #8
   26acc:	str	r0, [sp, #20]
   26ad0:	b	26ad4 <__assert_fail@plt+0x15640>
   26ad4:	ldr	r0, [sp, #20]
   26ad8:	str	r0, [sp, #16]
   26adc:	b	26aec <__assert_fail@plt+0x15658>
   26ae0:	movw	r0, #12
   26ae4:	str	r0, [sp, #16]
   26ae8:	b	26aec <__assert_fail@plt+0x15658>
   26aec:	ldr	r0, [sp, #16]
   26af0:	ldr	r1, [pc, #904]	; 26e80 <__assert_fail@plt+0x159ec>
   26af4:	str	r0, [fp, #-28]	; 0xffffffe4
   26af8:	ldr	r0, [fp, #-8]
   26afc:	movw	r2, #0
   26b00:	and	r2, r2, #255	; 0xff
   26b04:	str	r1, [sp, #12]
   26b08:	mov	r1, r2
   26b0c:	movw	r2, #160	; 0xa0
   26b10:	bl	113d4 <memset@plt>
   26b14:	ldr	r0, [fp, #-8]
   26b18:	movw	r1, #31
   26b1c:	str	r1, [r0, #64]	; 0x40
   26b20:	ldr	r0, [fp, #-28]	; 0xffffffe4
   26b24:	mvn	r1, #0
   26b28:	udiv	r0, r1, r0
   26b2c:	ldr	r1, [sp, #12]
   26b30:	cmp	r1, r0
   26b34:	bcs	26b44 <__assert_fail@plt+0x156b0>
   26b38:	ldr	r0, [pc, #832]	; 26e80 <__assert_fail@plt+0x159ec>
   26b3c:	str	r0, [sp, #8]
   26b40:	b	26b54 <__assert_fail@plt+0x156c0>
   26b44:	ldr	r0, [fp, #-28]	; 0xffffffe4
   26b48:	mvn	r1, #0
   26b4c:	udiv	r0, r1, r0
   26b50:	str	r0, [sp, #8]
   26b54:	ldr	r0, [sp, #8]
   26b58:	lsr	r0, r0, #1
   26b5c:	ldr	r1, [fp, #-12]
   26b60:	cmp	r0, r1
   26b64:	bhi	26b74 <__assert_fail@plt+0x156e0>
   26b68:	movw	r0, #12
   26b6c:	str	r0, [fp, #-4]
   26b70:	b	26e74 <__assert_fail@plt+0x159e0>
   26b74:	ldr	r0, [fp, #-12]
   26b78:	add	r0, r0, #1
   26b7c:	ldr	r1, [fp, #-8]
   26b80:	str	r0, [r1, #4]
   26b84:	ldr	r0, [fp, #-8]
   26b88:	ldr	r0, [r0, #4]
   26b8c:	lsl	r0, r0, #3
   26b90:	bl	3fbd8 <__assert_fail@plt+0x2e744>
   26b94:	ldr	r1, [fp, #-8]
   26b98:	str	r0, [r1]
   26b9c:	movw	r0, #1
   26ba0:	str	r0, [fp, #-16]
   26ba4:	ldr	r0, [fp, #-16]
   26ba8:	ldr	r1, [fp, #-12]
   26bac:	cmp	r0, r1
   26bb0:	bls	26bb8 <__assert_fail@plt+0x15724>
   26bb4:	b	26bcc <__assert_fail@plt+0x15738>
   26bb8:	b	26bbc <__assert_fail@plt+0x15728>
   26bbc:	ldr	r0, [fp, #-16]
   26bc0:	lsl	r0, r0, #1
   26bc4:	str	r0, [fp, #-16]
   26bc8:	b	26ba4 <__assert_fail@plt+0x15710>
   26bcc:	ldr	r1, [fp, #-16]
   26bd0:	movw	r0, #12
   26bd4:	bl	3fb3c <__assert_fail@plt+0x2e6a8>
   26bd8:	ldr	r1, [fp, #-8]
   26bdc:	str	r0, [r1, #32]
   26be0:	ldr	r0, [fp, #-16]
   26be4:	sub	r0, r0, #1
   26be8:	ldr	r1, [fp, #-8]
   26bec:	str	r0, [r1, #68]	; 0x44
   26bf0:	bl	112d8 <__ctype_get_mb_cur_max@plt>
   26bf4:	ldr	r1, [fp, #-8]
   26bf8:	str	r0, [r1, #92]	; 0x5c
   26bfc:	movw	r0, #14
   26c00:	bl	11440 <nl_langinfo@plt>
   26c04:	str	r0, [fp, #-20]	; 0xffffffec
   26c08:	ldr	r0, [fp, #-20]	; 0xffffffec
   26c0c:	ldrb	r0, [r0]
   26c10:	cmp	r0, #85	; 0x55
   26c14:	beq	26c28 <__assert_fail@plt+0x15794>
   26c18:	ldr	r0, [fp, #-20]	; 0xffffffec
   26c1c:	ldrb	r0, [r0]
   26c20:	cmp	r0, #117	; 0x75
   26c24:	bne	26cb8 <__assert_fail@plt+0x15824>
   26c28:	ldr	r0, [fp, #-20]	; 0xffffffec
   26c2c:	ldrb	r0, [r0, #1]
   26c30:	cmp	r0, #84	; 0x54
   26c34:	beq	26c48 <__assert_fail@plt+0x157b4>
   26c38:	ldr	r0, [fp, #-20]	; 0xffffffec
   26c3c:	ldrb	r0, [r0, #1]
   26c40:	cmp	r0, #116	; 0x74
   26c44:	bne	26cb8 <__assert_fail@plt+0x15824>
   26c48:	ldr	r0, [fp, #-20]	; 0xffffffec
   26c4c:	ldrb	r0, [r0, #2]
   26c50:	cmp	r0, #70	; 0x46
   26c54:	beq	26c68 <__assert_fail@plt+0x157d4>
   26c58:	ldr	r0, [fp, #-20]	; 0xffffffec
   26c5c:	ldrb	r0, [r0, #2]
   26c60:	cmp	r0, #102	; 0x66
   26c64:	bne	26cb8 <__assert_fail@plt+0x15824>
   26c68:	ldr	r0, [fp, #-20]	; 0xffffffec
   26c6c:	add	r0, r0, #3
   26c70:	ldr	r1, [fp, #-20]	; 0xffffffec
   26c74:	ldrb	r1, [r1, #3]
   26c78:	cmp	r1, #45	; 0x2d
   26c7c:	movw	r1, #0
   26c80:	moveq	r1, #1
   26c84:	and	r1, r1, #1
   26c88:	add	r0, r0, r1
   26c8c:	movw	r1, #22620	; 0x585c
   26c90:	movt	r1, #4
   26c94:	bl	111d0 <strcmp@plt>
   26c98:	cmp	r0, #0
   26c9c:	bne	26cb8 <__assert_fail@plt+0x15824>
   26ca0:	ldr	r0, [fp, #-8]
   26ca4:	ldrb	r1, [r0, #88]	; 0x58
   26ca8:	bic	r1, r1, #4
   26cac:	movw	r2, #4
   26cb0:	orr	r1, r1, r2
   26cb4:	strb	r1, [r0, #88]	; 0x58
   26cb8:	ldr	r0, [fp, #-8]
   26cbc:	ldrb	r1, [r0, #88]	; 0x58
   26cc0:	bic	r1, r1, #8
   26cc4:	strb	r1, [r0, #88]	; 0x58
   26cc8:	ldr	r0, [fp, #-8]
   26ccc:	ldr	r0, [r0, #92]	; 0x5c
   26cd0:	cmp	r0, #1
   26cd4:	ble	26e1c <__assert_fail@plt+0x15988>
   26cd8:	ldr	r0, [fp, #-8]
   26cdc:	ldrb	r0, [r0, #88]	; 0x58
   26ce0:	ubfx	r0, r0, #2, #1
   26ce4:	and	r0, r0, #255	; 0xff
   26ce8:	cmp	r0, #0
   26cec:	beq	26d04 <__assert_fail@plt+0x15870>
   26cf0:	ldr	r0, [fp, #-8]
   26cf4:	movw	r1, #23184	; 0x5a90
   26cf8:	movt	r1, #4
   26cfc:	str	r1, [r0, #60]	; 0x3c
   26d00:	b	26e18 <__assert_fail@plt+0x15984>
   26d04:	movw	r0, #32
   26d08:	movw	r1, #1
   26d0c:	bl	3fb3c <__assert_fail@plt+0x2e6a8>
   26d10:	ldr	r1, [fp, #-8]
   26d14:	str	r0, [r1, #60]	; 0x3c
   26d18:	ldr	r0, [fp, #-8]
   26d1c:	ldr	r0, [r0, #60]	; 0x3c
   26d20:	movw	r1, #0
   26d24:	cmp	r0, r1
   26d28:	bne	26d38 <__assert_fail@plt+0x158a4>
   26d2c:	movw	r0, #12
   26d30:	str	r0, [fp, #-4]
   26d34:	b	26e74 <__assert_fail@plt+0x159e0>
   26d38:	movw	r0, #0
   26d3c:	str	r0, [fp, #-32]	; 0xffffffe0
   26d40:	str	r0, [fp, #-40]	; 0xffffffd8
   26d44:	ldr	r0, [fp, #-32]	; 0xffffffe0
   26d48:	cmp	r0, #8
   26d4c:	bge	26e14 <__assert_fail@plt+0x15980>
   26d50:	movw	r0, #0
   26d54:	str	r0, [fp, #-36]	; 0xffffffdc
   26d58:	ldr	r0, [fp, #-36]	; 0xffffffdc
   26d5c:	cmp	r0, #32
   26d60:	bge	26e00 <__assert_fail@plt+0x1596c>
   26d64:	ldr	r0, [fp, #-40]	; 0xffffffd8
   26d68:	bl	113e0 <btowc@plt>
   26d6c:	str	r0, [fp, #-44]	; 0xffffffd4
   26d70:	ldr	r0, [fp, #-44]	; 0xffffffd4
   26d74:	cmn	r0, #1
   26d78:	beq	26da4 <__assert_fail@plt+0x15910>
   26d7c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   26d80:	mov	r1, #1
   26d84:	lsl	r0, r1, r0
   26d88:	ldr	r1, [fp, #-8]
   26d8c:	ldr	r1, [r1, #60]	; 0x3c
   26d90:	ldr	r2, [fp, #-32]	; 0xffffffe0
   26d94:	add	r1, r1, r2, lsl #2
   26d98:	ldr	r2, [r1]
   26d9c:	orr	r0, r2, r0
   26da0:	str	r0, [r1]
   26da4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   26da8:	mvn	r1, #127	; 0x7f
   26dac:	and	r0, r0, r1
   26db0:	cmp	r0, #0
   26db4:	bne	26de0 <__assert_fail@plt+0x1594c>
   26db8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   26dbc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   26dc0:	cmp	r0, r1
   26dc4:	beq	26de0 <__assert_fail@plt+0x1594c>
   26dc8:	ldr	r0, [fp, #-8]
   26dcc:	ldrb	r1, [r0, #88]	; 0x58
   26dd0:	bic	r1, r1, #8
   26dd4:	movw	r2, #8
   26dd8:	orr	r1, r1, r2
   26ddc:	strb	r1, [r0, #88]	; 0x58
   26de0:	b	26de4 <__assert_fail@plt+0x15950>
   26de4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   26de8:	add	r0, r0, #1
   26dec:	str	r0, [fp, #-36]	; 0xffffffdc
   26df0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   26df4:	add	r0, r0, #1
   26df8:	str	r0, [fp, #-40]	; 0xffffffd8
   26dfc:	b	26d58 <__assert_fail@plt+0x158c4>
   26e00:	b	26e04 <__assert_fail@plt+0x15970>
   26e04:	ldr	r0, [fp, #-32]	; 0xffffffe0
   26e08:	add	r0, r0, #1
   26e0c:	str	r0, [fp, #-32]	; 0xffffffe0
   26e10:	b	26d44 <__assert_fail@plt+0x158b0>
   26e14:	b	26e18 <__assert_fail@plt+0x15984>
   26e18:	b	26e1c <__assert_fail@plt+0x15988>
   26e1c:	ldr	r0, [fp, #-8]
   26e20:	ldr	r0, [r0]
   26e24:	movw	r1, #0
   26e28:	cmp	r0, r1
   26e2c:	movw	r0, #1
   26e30:	str	r0, [sp, #4]
   26e34:	beq	26e54 <__assert_fail@plt+0x159c0>
   26e38:	ldr	r0, [fp, #-8]
   26e3c:	ldr	r0, [r0, #32]
   26e40:	movw	r1, #0
   26e44:	cmp	r0, r1
   26e48:	movw	r0, #0
   26e4c:	moveq	r0, #1
   26e50:	str	r0, [sp, #4]
   26e54:	ldr	r0, [sp, #4]
   26e58:	tst	r0, #1
   26e5c:	beq	26e6c <__assert_fail@plt+0x159d8>
   26e60:	movw	r0, #12
   26e64:	str	r0, [fp, #-4]
   26e68:	b	26e74 <__assert_fail@plt+0x159e0>
   26e6c:	movw	r0, #0
   26e70:	str	r0, [fp, #-4]
   26e74:	ldr	r0, [fp, #-4]
   26e78:	mov	sp, fp
   26e7c:	pop	{fp, pc}
   26e80:	svcvc	0x00ffffff
   26e84:	push	{fp, lr}
   26e88:	mov	fp, sp
   26e8c:	sub	sp, sp, #48	; 0x30
   26e90:	ldr	ip, [fp, #12]
   26e94:	ldr	lr, [fp, #8]
   26e98:	str	r0, [fp, #-8]
   26e9c:	str	r1, [fp, #-12]
   26ea0:	str	r2, [fp, #-16]
   26ea4:	str	r3, [fp, #-20]	; 0xffffffec
   26ea8:	and	r0, lr, #1
   26eac:	strb	r0, [fp, #-21]	; 0xffffffeb
   26eb0:	ldr	r0, [fp, #-8]
   26eb4:	movw	r1, #0
   26eb8:	and	r1, r1, #255	; 0xff
   26ebc:	movw	r2, #84	; 0x54
   26ec0:	str	ip, [sp, #16]
   26ec4:	bl	113d4 <memset@plt>
   26ec8:	ldr	r0, [fp, #-12]
   26ecc:	ldr	r1, [fp, #-16]
   26ed0:	ldr	r2, [fp, #-8]
   26ed4:	ldr	r3, [fp, #-20]	; 0xffffffec
   26ed8:	ldrb	ip, [fp, #-21]	; 0xffffffeb
   26edc:	ldr	lr, [fp, #12]
   26ee0:	and	ip, ip, #1
   26ee4:	str	ip, [sp]
   26ee8:	str	lr, [sp, #4]
   26eec:	bl	27d40 <__assert_fail@plt+0x168ac>
   26ef0:	ldr	r0, [fp, #-16]
   26ef4:	cmp	r0, #0
   26ef8:	ble	26f2c <__assert_fail@plt+0x15a98>
   26efc:	ldr	r0, [fp, #-8]
   26f00:	ldr	r1, [fp, #-16]
   26f04:	add	r1, r1, #1
   26f08:	bl	27e44 <__assert_fail@plt+0x169b0>
   26f0c:	str	r0, [sp, #20]
   26f10:	ldr	r0, [sp, #20]
   26f14:	cmp	r0, #0
   26f18:	beq	26f28 <__assert_fail@plt+0x15a94>
   26f1c:	ldr	r0, [sp, #20]
   26f20:	str	r0, [fp, #-4]
   26f24:	b	2708c <__assert_fail@plt+0x15bf8>
   26f28:	b	26f2c <__assert_fail@plt+0x15a98>
   26f2c:	ldr	r0, [fp, #-8]
   26f30:	ldrb	r0, [r0, #75]	; 0x4b
   26f34:	cmp	r0, #0
   26f38:	beq	26f4c <__assert_fail@plt+0x15ab8>
   26f3c:	ldr	r0, [fp, #-8]
   26f40:	ldr	r0, [r0, #4]
   26f44:	str	r0, [sp, #12]
   26f48:	b	26f54 <__assert_fail@plt+0x15ac0>
   26f4c:	ldr	r0, [fp, #-12]
   26f50:	str	r0, [sp, #12]
   26f54:	ldr	r0, [sp, #12]
   26f58:	ldr	r1, [fp, #-8]
   26f5c:	str	r0, [r1, #4]
   26f60:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   26f64:	tst	r0, #1
   26f68:	beq	27024 <__assert_fail@plt+0x15b90>
   26f6c:	ldr	r0, [fp, #12]
   26f70:	ldr	r0, [r0, #92]	; 0x5c
   26f74:	cmp	r0, #1
   26f78:	ble	27018 <__assert_fail@plt+0x15b84>
   26f7c:	b	26f80 <__assert_fail@plt+0x15aec>
   26f80:	ldr	r0, [fp, #-8]
   26f84:	bl	27f9c <__assert_fail@plt+0x16b08>
   26f88:	str	r0, [sp, #20]
   26f8c:	ldr	r0, [sp, #20]
   26f90:	cmp	r0, #0
   26f94:	beq	26fa4 <__assert_fail@plt+0x15b10>
   26f98:	ldr	r0, [sp, #20]
   26f9c:	str	r0, [fp, #-4]
   26fa0:	b	2708c <__assert_fail@plt+0x15bf8>
   26fa4:	ldr	r0, [fp, #-8]
   26fa8:	ldr	r0, [r0, #32]
   26fac:	ldr	r1, [fp, #-16]
   26fb0:	cmp	r0, r1
   26fb4:	blt	26fbc <__assert_fail@plt+0x15b28>
   26fb8:	b	27014 <__assert_fail@plt+0x15b80>
   26fbc:	ldr	r0, [fp, #-8]
   26fc0:	ldr	r0, [r0, #36]	; 0x24
   26fc4:	ldr	r1, [fp, #-8]
   26fc8:	ldr	r1, [r1, #28]
   26fcc:	ldr	r2, [fp, #12]
   26fd0:	ldr	r2, [r2, #92]	; 0x5c
   26fd4:	add	r1, r1, r2
   26fd8:	cmp	r0, r1
   26fdc:	ble	26fe4 <__assert_fail@plt+0x15b50>
   26fe0:	b	27014 <__assert_fail@plt+0x15b80>
   26fe4:	ldr	r0, [fp, #-8]
   26fe8:	ldr	r1, [r0, #36]	; 0x24
   26fec:	lsl	r1, r1, #1
   26ff0:	bl	27e44 <__assert_fail@plt+0x169b0>
   26ff4:	str	r0, [sp, #20]
   26ff8:	ldr	r0, [sp, #20]
   26ffc:	cmp	r0, #0
   27000:	beq	27010 <__assert_fail@plt+0x15b7c>
   27004:	ldr	r0, [sp, #20]
   27008:	str	r0, [fp, #-4]
   2700c:	b	2708c <__assert_fail@plt+0x15bf8>
   27010:	b	26f80 <__assert_fail@plt+0x15aec>
   27014:	b	27020 <__assert_fail@plt+0x15b8c>
   27018:	ldr	r0, [fp, #-8]
   2701c:	bl	28a48 <__assert_fail@plt+0x175b4>
   27020:	b	27084 <__assert_fail@plt+0x15bf0>
   27024:	ldr	r0, [fp, #12]
   27028:	ldr	r0, [r0, #92]	; 0x5c
   2702c:	cmp	r0, #1
   27030:	ble	27040 <__assert_fail@plt+0x15bac>
   27034:	ldr	r0, [fp, #-8]
   27038:	bl	28b4c <__assert_fail@plt+0x176b8>
   2703c:	b	27080 <__assert_fail@plt+0x15bec>
   27040:	ldr	r0, [fp, #-20]	; 0xffffffec
   27044:	movw	r1, #0
   27048:	cmp	r0, r1
   2704c:	beq	2705c <__assert_fail@plt+0x15bc8>
   27050:	ldr	r0, [fp, #-8]
   27054:	bl	28e8c <__assert_fail@plt+0x179f8>
   27058:	b	2707c <__assert_fail@plt+0x15be8>
   2705c:	ldr	r0, [fp, #-8]
   27060:	ldr	r0, [r0, #36]	; 0x24
   27064:	ldr	r1, [fp, #-8]
   27068:	str	r0, [r1, #28]
   2706c:	ldr	r0, [fp, #-8]
   27070:	ldr	r0, [r0, #36]	; 0x24
   27074:	ldr	r1, [fp, #-8]
   27078:	str	r0, [r1, #32]
   2707c:	b	27080 <__assert_fail@plt+0x15bec>
   27080:	b	27084 <__assert_fail@plt+0x15bf0>
   27084:	movw	r0, #0
   27088:	str	r0, [fp, #-4]
   2708c:	ldr	r0, [fp, #-4]
   27090:	mov	sp, fp
   27094:	pop	{fp, pc}
   27098:	push	{fp, lr}
   2709c:	mov	fp, sp
   270a0:	sub	sp, sp, #16
   270a4:	str	r0, [fp, #-4]
   270a8:	ldr	r0, [fp, #-4]
   270ac:	ldr	r0, [r0]
   270b0:	str	r0, [sp, #8]
   270b4:	ldr	r0, [sp, #8]
   270b8:	ldr	r0, [r0, #56]	; 0x38
   270bc:	str	r0, [sp, #4]
   270c0:	ldr	r0, [sp, #4]
   270c4:	movw	r1, #0
   270c8:	cmp	r0, r1
   270cc:	beq	270f0 <__assert_fail@plt+0x15c5c>
   270d0:	ldr	r0, [sp, #4]
   270d4:	ldr	r0, [r0]
   270d8:	str	r0, [sp]
   270dc:	ldr	r0, [sp, #4]
   270e0:	bl	138a4 <__assert_fail@plt+0x2410>
   270e4:	ldr	r0, [sp]
   270e8:	str	r0, [sp, #4]
   270ec:	b	270c0 <__assert_fail@plt+0x15c2c>
   270f0:	ldr	r0, [sp, #8]
   270f4:	movw	r1, #0
   270f8:	str	r1, [r0, #56]	; 0x38
   270fc:	ldr	r0, [sp, #8]
   27100:	movw	r2, #31
   27104:	str	r2, [r0, #64]	; 0x40
   27108:	ldr	r0, [sp, #8]
   2710c:	str	r1, [r0, #52]	; 0x34
   27110:	ldr	r0, [sp, #8]
   27114:	ldr	r0, [r0, #16]
   27118:	bl	138a4 <__assert_fail@plt+0x2410>
   2711c:	ldr	r0, [sp, #8]
   27120:	movw	r1, #0
   27124:	str	r1, [r0, #16]
   27128:	mov	sp, fp
   2712c:	pop	{fp, pc}
   27130:	push	{fp, lr}
   27134:	mov	fp, sp
   27138:	sub	sp, sp, #8
   2713c:	str	r0, [sp, #4]
   27140:	ldr	r0, [sp, #4]
   27144:	ldr	r0, [r0, #8]
   27148:	bl	138a4 <__assert_fail@plt+0x2410>
   2714c:	ldr	r0, [sp, #4]
   27150:	ldr	r0, [r0, #12]
   27154:	bl	138a4 <__assert_fail@plt+0x2410>
   27158:	ldr	r0, [sp, #4]
   2715c:	ldrsb	r0, [r0, #75]	; 0x4b
   27160:	cmp	r0, #0
   27164:	beq	27174 <__assert_fail@plt+0x15ce0>
   27168:	ldr	r0, [sp, #4]
   2716c:	ldr	r0, [r0, #4]
   27170:	bl	138a4 <__assert_fail@plt+0x2410>
   27174:	mov	sp, fp
   27178:	pop	{fp, pc}
   2717c:	push	{fp, lr}
   27180:	mov	fp, sp
   27184:	sub	sp, sp, #72	; 0x48
   27188:	str	r0, [fp, #-8]
   2718c:	str	r1, [fp, #-12]
   27190:	str	r2, [fp, #-16]
   27194:	str	r3, [fp, #-20]	; 0xffffffec
   27198:	ldr	r0, [fp, #-12]
   2719c:	ldr	r0, [r0]
   271a0:	str	r0, [fp, #-24]	; 0xffffffe8
   271a4:	ldr	r0, [fp, #-16]
   271a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   271ac:	str	r0, [r1, #128]	; 0x80
   271b0:	ldr	r1, [fp, #-8]
   271b4:	ldr	r0, [fp, #-16]
   271b8:	orr	r2, r0, #8388608	; 0x800000
   271bc:	add	r0, sp, #28
   271c0:	bl	28f68 <__assert_fail@plt+0x17ad4>
   271c4:	ldr	r0, [fp, #-8]
   271c8:	ldr	r1, [fp, #-12]
   271cc:	ldr	r3, [fp, #-16]
   271d0:	ldr	r2, [fp, #-20]	; 0xffffffec
   271d4:	add	lr, sp, #28
   271d8:	str	r2, [sp, #24]
   271dc:	mov	r2, lr
   271e0:	movw	lr, #0
   271e4:	str	lr, [sp]
   271e8:	ldr	lr, [sp, #24]
   271ec:	str	lr, [sp, #4]
   271f0:	bl	28fa8 <__assert_fail@plt+0x17b14>
   271f4:	str	r0, [fp, #-28]	; 0xffffffe4
   271f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   271fc:	ldr	r0, [r0]
   27200:	cmp	r0, #0
   27204:	movw	r0, #0
   27208:	str	r0, [sp, #20]
   2720c:	beq	27228 <__assert_fail@plt+0x15d94>
   27210:	ldr	r0, [fp, #-28]	; 0xffffffe4
   27214:	movw	r1, #0
   27218:	cmp	r0, r1
   2721c:	movw	r0, #0
   27220:	moveq	r0, #1
   27224:	str	r0, [sp, #20]
   27228:	ldr	r0, [sp, #20]
   2722c:	tst	r0, #1
   27230:	beq	27240 <__assert_fail@plt+0x15dac>
   27234:	movw	r0, #0
   27238:	str	r0, [fp, #-4]
   2723c:	b	272ec <__assert_fail@plt+0x15e58>
   27240:	ldr	r0, [fp, #-24]	; 0xffffffe8
   27244:	movw	r1, #0
   27248:	str	r1, [sp, #16]
   2724c:	ldr	r2, [sp, #16]
   27250:	movw	r3, #2
   27254:	bl	29200 <__assert_fail@plt+0x17d6c>
   27258:	str	r0, [fp, #-32]	; 0xffffffe0
   2725c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   27260:	movw	r1, #0
   27264:	cmp	r0, r1
   27268:	beq	27288 <__assert_fail@plt+0x15df4>
   2726c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   27270:	ldr	r1, [fp, #-28]	; 0xffffffe4
   27274:	ldr	r2, [fp, #-32]	; 0xffffffe0
   27278:	movw	r3, #16
   2727c:	bl	29200 <__assert_fail@plt+0x17d6c>
   27280:	str	r0, [sp, #36]	; 0x24
   27284:	b	27290 <__assert_fail@plt+0x15dfc>
   27288:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2728c:	str	r0, [sp, #36]	; 0x24
   27290:	ldr	r0, [fp, #-32]	; 0xffffffe0
   27294:	movw	r1, #0
   27298:	cmp	r0, r1
   2729c:	movw	r0, #1
   272a0:	str	r0, [sp, #12]
   272a4:	beq	272c0 <__assert_fail@plt+0x15e2c>
   272a8:	ldr	r0, [sp, #36]	; 0x24
   272ac:	movw	r1, #0
   272b0:	cmp	r0, r1
   272b4:	movw	r0, #0
   272b8:	moveq	r0, #1
   272bc:	str	r0, [sp, #12]
   272c0:	ldr	r0, [sp, #12]
   272c4:	tst	r0, #1
   272c8:	beq	272e4 <__assert_fail@plt+0x15e50>
   272cc:	ldr	r0, [fp, #-20]	; 0xffffffec
   272d0:	movw	r1, #12
   272d4:	str	r1, [r0]
   272d8:	movw	r0, #0
   272dc:	str	r0, [fp, #-4]
   272e0:	b	272ec <__assert_fail@plt+0x15e58>
   272e4:	ldr	r0, [sp, #36]	; 0x24
   272e8:	str	r0, [fp, #-4]
   272ec:	ldr	r0, [fp, #-4]
   272f0:	mov	sp, fp
   272f4:	pop	{fp, pc}
   272f8:	push	{fp, lr}
   272fc:	mov	fp, sp
   27300:	sub	sp, sp, #48	; 0x30
   27304:	str	r0, [fp, #-8]
   27308:	ldr	r0, [fp, #-8]
   2730c:	ldr	r0, [r0]
   27310:	str	r0, [fp, #-12]
   27314:	ldr	r0, [fp, #-12]
   27318:	ldr	r0, [r0, #4]
   2731c:	lsl	r0, r0, #2
   27320:	bl	3fbd8 <__assert_fail@plt+0x2e744>
   27324:	ldr	lr, [fp, #-12]
   27328:	str	r0, [lr, #12]
   2732c:	ldr	r0, [fp, #-12]
   27330:	ldr	r0, [r0, #4]
   27334:	lsl	r0, r0, #2
   27338:	bl	3fbd8 <__assert_fail@plt+0x2e744>
   2733c:	ldr	lr, [fp, #-12]
   27340:	str	r0, [lr, #16]
   27344:	ldr	r0, [fp, #-12]
   27348:	ldr	r0, [r0, #4]
   2734c:	movw	lr, #12
   27350:	mul	r0, r0, lr
   27354:	bl	3fbd8 <__assert_fail@plt+0x2e744>
   27358:	ldr	lr, [fp, #-12]
   2735c:	str	r0, [lr, #20]
   27360:	ldr	r0, [fp, #-12]
   27364:	ldr	r0, [r0, #4]
   27368:	movw	lr, #12
   2736c:	mul	r0, r0, lr
   27370:	bl	3fbd8 <__assert_fail@plt+0x2e744>
   27374:	ldr	lr, [fp, #-12]
   27378:	str	r0, [lr, #24]
   2737c:	ldr	r0, [fp, #-12]
   27380:	ldr	r0, [r0, #12]
   27384:	movw	lr, #0
   27388:	cmp	r0, lr
   2738c:	movw	r0, #1
   27390:	str	r0, [sp, #24]
   27394:	beq	273ec <__assert_fail@plt+0x15f58>
   27398:	ldr	r0, [fp, #-12]
   2739c:	ldr	r0, [r0, #16]
   273a0:	movw	r1, #0
   273a4:	cmp	r0, r1
   273a8:	movw	r0, #1
   273ac:	str	r0, [sp, #24]
   273b0:	beq	273ec <__assert_fail@plt+0x15f58>
   273b4:	ldr	r0, [fp, #-12]
   273b8:	ldr	r0, [r0, #20]
   273bc:	movw	r1, #0
   273c0:	cmp	r0, r1
   273c4:	movw	r0, #1
   273c8:	str	r0, [sp, #24]
   273cc:	beq	273ec <__assert_fail@plt+0x15f58>
   273d0:	ldr	r0, [fp, #-12]
   273d4:	ldr	r0, [r0, #24]
   273d8:	movw	r1, #0
   273dc:	cmp	r0, r1
   273e0:	movw	r0, #0
   273e4:	moveq	r0, #1
   273e8:	str	r0, [sp, #24]
   273ec:	ldr	r0, [sp, #24]
   273f0:	tst	r0, #1
   273f4:	beq	27404 <__assert_fail@plt+0x15f70>
   273f8:	movw	r0, #12
   273fc:	str	r0, [fp, #-4]
   27400:	b	276c4 <__assert_fail@plt+0x16230>
   27404:	ldr	r0, [fp, #-8]
   27408:	ldr	r0, [r0, #24]
   2740c:	lsl	r0, r0, #2
   27410:	bl	3fbd8 <__assert_fail@plt+0x2e744>
   27414:	ldr	lr, [fp, #-12]
   27418:	str	r0, [lr, #132]	; 0x84
   2741c:	ldr	r0, [fp, #-12]
   27420:	ldr	r0, [r0, #132]	; 0x84
   27424:	movw	lr, #0
   27428:	cmp	r0, lr
   2742c:	beq	27520 <__assert_fail@plt+0x1608c>
   27430:	movw	r0, #0
   27434:	str	r0, [fp, #-20]	; 0xffffffec
   27438:	ldr	r0, [fp, #-20]	; 0xffffffec
   2743c:	ldr	r1, [fp, #-8]
   27440:	ldr	r1, [r1, #24]
   27444:	cmp	r0, r1
   27448:	bcs	27474 <__assert_fail@plt+0x15fe0>
   2744c:	ldr	r0, [fp, #-20]	; 0xffffffec
   27450:	mov	r1, r0
   27454:	ldr	r2, [fp, #-12]
   27458:	ldr	r2, [r2, #132]	; 0x84
   2745c:	add	r0, r2, r0, lsl #2
   27460:	str	r1, [r0]
   27464:	ldr	r0, [fp, #-20]	; 0xffffffec
   27468:	add	r0, r0, #1
   2746c:	str	r0, [fp, #-20]	; 0xffffffec
   27470:	b	27438 <__assert_fail@plt+0x15fa4>
   27474:	ldr	r0, [fp, #-12]
   27478:	ldr	r0, [r0, #52]	; 0x34
   2747c:	ldr	r1, [fp, #-12]
   27480:	movw	r2, #60172	; 0xeb0c
   27484:	movt	r2, #2
   27488:	str	r1, [sp, #20]
   2748c:	mov	r1, r2
   27490:	ldr	r2, [sp, #20]
   27494:	bl	2e9f0 <__assert_fail@plt+0x1d55c>
   27498:	movw	r1, #0
   2749c:	str	r1, [fp, #-20]	; 0xffffffec
   274a0:	str	r0, [sp, #16]
   274a4:	ldr	r0, [fp, #-20]	; 0xffffffec
   274a8:	ldr	r1, [fp, #-8]
   274ac:	ldr	r1, [r1, #24]
   274b0:	cmp	r0, r1
   274b4:	bcs	274f0 <__assert_fail@plt+0x1605c>
   274b8:	ldr	r0, [fp, #-12]
   274bc:	ldr	r0, [r0, #132]	; 0x84
   274c0:	ldr	r1, [fp, #-20]	; 0xffffffec
   274c4:	add	r0, r0, r1, lsl #2
   274c8:	ldr	r0, [r0]
   274cc:	ldr	r1, [fp, #-20]	; 0xffffffec
   274d0:	cmp	r0, r1
   274d4:	beq	274dc <__assert_fail@plt+0x16048>
   274d8:	b	274f0 <__assert_fail@plt+0x1605c>
   274dc:	b	274e0 <__assert_fail@plt+0x1604c>
   274e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   274e4:	add	r0, r0, #1
   274e8:	str	r0, [fp, #-20]	; 0xffffffec
   274ec:	b	274a4 <__assert_fail@plt+0x16010>
   274f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   274f4:	ldr	r1, [fp, #-8]
   274f8:	ldr	r1, [r1, #24]
   274fc:	cmp	r0, r1
   27500:	bne	2751c <__assert_fail@plt+0x16088>
   27504:	ldr	r0, [fp, #-12]
   27508:	ldr	r0, [r0, #132]	; 0x84
   2750c:	bl	138a4 <__assert_fail@plt+0x2410>
   27510:	ldr	r0, [fp, #-12]
   27514:	movw	lr, #0
   27518:	str	lr, [r0, #132]	; 0x84
   2751c:	b	27520 <__assert_fail@plt+0x1608c>
   27520:	ldr	r0, [fp, #-12]
   27524:	ldr	r0, [r0, #52]	; 0x34
   27528:	ldr	r1, [fp, #-8]
   2752c:	movw	r2, #60544	; 0xec80
   27530:	movt	r2, #2
   27534:	str	r1, [sp, #12]
   27538:	mov	r1, r2
   2753c:	ldr	r2, [sp, #12]
   27540:	bl	2a604 <__assert_fail@plt+0x19170>
   27544:	str	r0, [fp, #-16]
   27548:	ldr	r0, [fp, #-16]
   2754c:	cmp	r0, #0
   27550:	beq	27560 <__assert_fail@plt+0x160cc>
   27554:	ldr	r0, [fp, #-16]
   27558:	str	r0, [fp, #-4]
   2755c:	b	276c4 <__assert_fail@plt+0x16230>
   27560:	ldr	r0, [fp, #-12]
   27564:	ldr	r0, [r0, #52]	; 0x34
   27568:	ldr	r1, [fp, #-12]
   2756c:	movw	r2, #60812	; 0xed8c
   27570:	movt	r2, #2
   27574:	str	r1, [sp, #8]
   27578:	mov	r1, r2
   2757c:	ldr	r2, [sp, #8]
   27580:	bl	2a604 <__assert_fail@plt+0x19170>
   27584:	str	r0, [fp, #-16]
   27588:	ldr	r0, [fp, #-16]
   2758c:	cmp	r0, #0
   27590:	beq	275a0 <__assert_fail@plt+0x1610c>
   27594:	ldr	r0, [fp, #-16]
   27598:	str	r0, [fp, #-4]
   2759c:	b	276c4 <__assert_fail@plt+0x16230>
   275a0:	ldr	r0, [fp, #-12]
   275a4:	ldr	r0, [r0, #52]	; 0x34
   275a8:	ldr	r1, [fp, #-12]
   275ac:	movw	r2, #61084	; 0xee9c
   275b0:	movt	r2, #2
   275b4:	str	r1, [sp, #4]
   275b8:	mov	r1, r2
   275bc:	ldr	r2, [sp, #4]
   275c0:	bl	2e9f0 <__assert_fail@plt+0x1d55c>
   275c4:	ldr	r1, [fp, #-12]
   275c8:	ldr	r1, [r1, #52]	; 0x34
   275cc:	ldr	r2, [fp, #-12]
   275d0:	str	r0, [sp]
   275d4:	mov	r0, r1
   275d8:	movw	r1, #61304	; 0xef78
   275dc:	movt	r1, #2
   275e0:	bl	2e9f0 <__assert_fail@plt+0x1d55c>
   275e4:	str	r0, [fp, #-16]
   275e8:	ldr	r0, [fp, #-16]
   275ec:	cmp	r0, #0
   275f0:	beq	27600 <__assert_fail@plt+0x1616c>
   275f4:	ldr	r0, [fp, #-16]
   275f8:	str	r0, [fp, #-4]
   275fc:	b	276c4 <__assert_fail@plt+0x16230>
   27600:	ldr	r0, [fp, #-12]
   27604:	bl	2f1e0 <__assert_fail@plt+0x1dd4c>
   27608:	str	r0, [fp, #-16]
   2760c:	ldr	r0, [fp, #-16]
   27610:	cmp	r0, #0
   27614:	beq	27624 <__assert_fail@plt+0x16190>
   27618:	ldr	r0, [fp, #-16]
   2761c:	str	r0, [fp, #-4]
   27620:	b	276c4 <__assert_fail@plt+0x16230>
   27624:	ldr	r0, [fp, #-8]
   27628:	ldrb	r0, [r0, #28]
   2762c:	ubfx	r0, r0, #4, #1
   27630:	and	r0, r0, #255	; 0xff
   27634:	cmp	r0, #0
   27638:	bne	27664 <__assert_fail@plt+0x161d0>
   2763c:	ldr	r0, [fp, #-8]
   27640:	ldr	r0, [r0, #24]
   27644:	cmp	r0, #0
   27648:	bls	27664 <__assert_fail@plt+0x161d0>
   2764c:	ldr	r0, [fp, #-12]
   27650:	ldrb	r0, [r0, #88]	; 0x58
   27654:	and	r0, r0, #1
   27658:	and	r0, r0, #255	; 0xff
   2765c:	cmp	r0, #0
   27660:	bne	27674 <__assert_fail@plt+0x161e0>
   27664:	ldr	r0, [fp, #-12]
   27668:	ldr	r0, [r0, #76]	; 0x4c
   2766c:	cmp	r0, #0
   27670:	beq	276bc <__assert_fail@plt+0x16228>
   27674:	ldr	r0, [fp, #-12]
   27678:	ldr	r0, [r0, #8]
   2767c:	movw	r1, #12
   27680:	mul	r0, r0, r1
   27684:	bl	3fbd8 <__assert_fail@plt+0x2e744>
   27688:	ldr	r1, [fp, #-12]
   2768c:	str	r0, [r1, #28]
   27690:	ldr	r0, [fp, #-12]
   27694:	ldr	r0, [r0, #28]
   27698:	movw	r1, #0
   2769c:	cmp	r0, r1
   276a0:	bne	276b0 <__assert_fail@plt+0x1621c>
   276a4:	movw	r0, #12
   276a8:	str	r0, [fp, #-4]
   276ac:	b	276c4 <__assert_fail@plt+0x16230>
   276b0:	ldr	r0, [fp, #-12]
   276b4:	bl	2f328 <__assert_fail@plt+0x1de94>
   276b8:	str	r0, [fp, #-16]
   276bc:	ldr	r0, [fp, #-16]
   276c0:	str	r0, [fp, #-4]
   276c4:	ldr	r0, [fp, #-4]
   276c8:	mov	sp, fp
   276cc:	pop	{fp, pc}
   276d0:	push	{fp, lr}
   276d4:	mov	fp, sp
   276d8:	sub	sp, sp, #32
   276dc:	str	r0, [fp, #-4]
   276e0:	movw	r0, #0
   276e4:	strb	r0, [fp, #-13]
   276e8:	strb	r0, [fp, #-14]
   276ec:	movw	r0, #0
   276f0:	str	r0, [fp, #-8]
   276f4:	ldr	r0, [fp, #-8]
   276f8:	ldr	r1, [fp, #-4]
   276fc:	ldr	r1, [r1, #8]
   27700:	cmp	r0, r1
   27704:	bcs	27884 <__assert_fail@plt+0x163f0>
   27708:	ldr	r0, [fp, #-4]
   2770c:	ldr	r0, [r0]
   27710:	ldr	r1, [fp, #-8]
   27714:	add	r0, r0, r1, lsl #3
   27718:	ldrb	r0, [r0, #4]
   2771c:	sub	r0, r0, #1
   27720:	cmp	r0, #11
   27724:	str	r0, [sp, #8]
   27728:	bhi	2786c <__assert_fail@plt+0x163d8>
   2772c:	add	r0, pc, #8
   27730:	ldr	r1, [sp, #8]
   27734:	ldr	r0, [r0, r1, lsl #2]
   27738:	mov	pc, r0
   2773c:	andeq	r7, r2, ip, ror #14
   27740:	strdeq	r7, [r2], -ip
   27744:	andeq	r7, r2, r4, lsl #16
   27748:	strdeq	r7, [r2], -ip
   2774c:	strdeq	r7, [r2], -r0
   27750:	andeq	r7, r2, r0, lsl #16
   27754:	andeq	r7, r2, ip, ror #16
   27758:	strdeq	r7, [r2], -ip
   2775c:	strdeq	r7, [r2], -ip
   27760:	strdeq	r7, [r2], -ip
   27764:	strdeq	r7, [r2], -ip
   27768:	muleq	r2, r4, r7
   2776c:	ldr	r0, [fp, #-4]
   27770:	ldr	r0, [r0]
   27774:	ldr	r1, [fp, #-8]
   27778:	add	r0, r0, r1, lsl #3
   2777c:	ldrb	r0, [r0]
   27780:	cmp	r0, #128	; 0x80
   27784:	blt	27790 <__assert_fail@plt+0x162fc>
   27788:	movw	r0, #1
   2778c:	strb	r0, [fp, #-13]
   27790:	b	27870 <__assert_fail@plt+0x163dc>
   27794:	ldr	r0, [fp, #-4]
   27798:	ldr	r0, [r0]
   2779c:	ldr	r1, [fp, #-8]
   277a0:	ldr	r0, [r0, r1, lsl #3]
   277a4:	cmp	r0, #16
   277a8:	str	r0, [sp, #4]
   277ac:	beq	277e4 <__assert_fail@plt+0x16350>
   277b0:	b	277b4 <__assert_fail@plt+0x16320>
   277b4:	ldr	r0, [sp, #4]
   277b8:	cmp	r0, #32
   277bc:	beq	277e4 <__assert_fail@plt+0x16350>
   277c0:	b	277c4 <__assert_fail@plt+0x16330>
   277c4:	ldr	r0, [sp, #4]
   277c8:	cmp	r0, #64	; 0x40
   277cc:	beq	277e4 <__assert_fail@plt+0x16350>
   277d0:	b	277d4 <__assert_fail@plt+0x16340>
   277d4:	ldr	r0, [sp, #4]
   277d8:	cmp	r0, #128	; 0x80
   277dc:	bne	277e8 <__assert_fail@plt+0x16354>
   277e0:	b	277e4 <__assert_fail@plt+0x16350>
   277e4:	b	277ec <__assert_fail@plt+0x16358>
   277e8:	b	279d4 <__assert_fail@plt+0x16540>
   277ec:	b	27870 <__assert_fail@plt+0x163dc>
   277f0:	movw	r0, #1
   277f4:	strb	r0, [fp, #-14]
   277f8:	b	27870 <__assert_fail@plt+0x163dc>
   277fc:	b	27870 <__assert_fail@plt+0x163dc>
   27800:	b	279d4 <__assert_fail@plt+0x16540>
   27804:	movw	r0, #0
   27808:	str	r0, [sp, #12]
   2780c:	movw	r0, #4
   27810:	str	r0, [fp, #-12]
   27814:	ldr	r0, [fp, #-12]
   27818:	cmp	r0, #8
   2781c:	bge	27868 <__assert_fail@plt+0x163d4>
   27820:	ldr	r0, [fp, #-4]
   27824:	ldr	r0, [r0]
   27828:	ldr	r1, [fp, #-8]
   2782c:	ldr	r0, [r0, r1, lsl #3]
   27830:	ldr	r1, [fp, #-12]
   27834:	add	r0, r0, r1, lsl #2
   27838:	ldr	r0, [r0]
   2783c:	ldr	r1, [sp, #12]
   27840:	lsr	r0, r0, r1
   27844:	cmp	r0, #0
   27848:	beq	27850 <__assert_fail@plt+0x163bc>
   2784c:	b	279d4 <__assert_fail@plt+0x16540>
   27850:	movw	r0, #0
   27854:	str	r0, [sp, #12]
   27858:	ldr	r0, [fp, #-12]
   2785c:	add	r0, r0, #1
   27860:	str	r0, [fp, #-12]
   27864:	b	27814 <__assert_fail@plt+0x16380>
   27868:	b	27870 <__assert_fail@plt+0x163dc>
   2786c:	bl	1147c <abort@plt>
   27870:	b	27874 <__assert_fail@plt+0x163e0>
   27874:	ldr	r0, [fp, #-8]
   27878:	add	r0, r0, #1
   2787c:	str	r0, [fp, #-8]
   27880:	b	276f4 <__assert_fail@plt+0x16260>
   27884:	ldrb	r0, [fp, #-13]
   27888:	tst	r0, #1
   2788c:	bne	2789c <__assert_fail@plt+0x16408>
   27890:	ldrb	r0, [fp, #-14]
   27894:	tst	r0, #1
   27898:	beq	27978 <__assert_fail@plt+0x164e4>
   2789c:	movw	r0, #0
   278a0:	str	r0, [fp, #-8]
   278a4:	ldr	r0, [fp, #-8]
   278a8:	ldr	r1, [fp, #-4]
   278ac:	ldr	r1, [r1, #8]
   278b0:	cmp	r0, r1
   278b4:	bcs	27974 <__assert_fail@plt+0x164e0>
   278b8:	ldr	r0, [fp, #-4]
   278bc:	ldr	r0, [r0]
   278c0:	ldr	r1, [fp, #-8]
   278c4:	add	r0, r0, r1, lsl #3
   278c8:	ldr	r0, [r0, #4]
   278cc:	and	r0, r0, #255	; 0xff
   278d0:	cmp	r0, #1
   278d4:	bne	27918 <__assert_fail@plt+0x16484>
   278d8:	ldr	r0, [fp, #-4]
   278dc:	ldr	r0, [r0]
   278e0:	ldr	r1, [fp, #-8]
   278e4:	add	r0, r0, r1, lsl #3
   278e8:	ldrb	r0, [r0]
   278ec:	cmp	r0, #128	; 0x80
   278f0:	blt	27918 <__assert_fail@plt+0x16484>
   278f4:	ldr	r0, [fp, #-4]
   278f8:	ldr	r0, [r0]
   278fc:	ldr	r1, [fp, #-8]
   27900:	add	r0, r0, r1, lsl #3
   27904:	ldr	r1, [r0, #4]
   27908:	mvn	r2, #2097152	; 0x200000
   2790c:	and	r1, r1, r2
   27910:	str	r1, [r0, #4]
   27914:	b	27960 <__assert_fail@plt+0x164cc>
   27918:	ldr	r0, [fp, #-4]
   2791c:	ldr	r0, [r0]
   27920:	ldr	r1, [fp, #-8]
   27924:	add	r0, r0, r1, lsl #3
   27928:	ldr	r0, [r0, #4]
   2792c:	and	r0, r0, #255	; 0xff
   27930:	cmp	r0, #5
   27934:	bne	2795c <__assert_fail@plt+0x164c8>
   27938:	ldr	r0, [fp, #-4]
   2793c:	ldr	r0, [r0]
   27940:	ldr	r1, [fp, #-8]
   27944:	add	r0, r0, r1, lsl #3
   27948:	ldr	r1, [r0, #4]
   2794c:	mvn	r2, #255	; 0xff
   27950:	and	r1, r1, r2
   27954:	orr	r1, r1, #7
   27958:	str	r1, [r0, #4]
   2795c:	b	27960 <__assert_fail@plt+0x164cc>
   27960:	b	27964 <__assert_fail@plt+0x164d0>
   27964:	ldr	r0, [fp, #-8]
   27968:	add	r0, r0, #1
   2796c:	str	r0, [fp, #-8]
   27970:	b	278a4 <__assert_fail@plt+0x16410>
   27974:	b	27978 <__assert_fail@plt+0x164e4>
   27978:	ldr	r0, [fp, #-4]
   2797c:	mov	r1, #1
   27980:	str	r1, [r0, #92]	; 0x5c
   27984:	ldr	r0, [fp, #-4]
   27988:	ldrb	r1, [r0, #88]	; 0x58
   2798c:	bic	r1, r1, #4
   27990:	strb	r1, [r0, #88]	; 0x58
   27994:	ldr	r0, [fp, #-4]
   27998:	ldr	r0, [r0, #76]	; 0x4c
   2799c:	cmp	r0, #0
   279a0:	movw	r0, #1
   279a4:	str	r0, [sp]
   279a8:	bgt	279b4 <__assert_fail@plt+0x16520>
   279ac:	ldrb	r0, [fp, #-14]
   279b0:	str	r0, [sp]
   279b4:	ldr	r0, [sp]
   279b8:	ldr	r1, [fp, #-4]
   279bc:	and	r0, r0, #1
   279c0:	ldrb	r2, [r1, #88]	; 0x58
   279c4:	lsl	r0, r0, #1
   279c8:	bic	r2, r2, #2
   279cc:	orr	r0, r2, r0
   279d0:	strb	r0, [r1, #88]	; 0x58
   279d4:	mov	sp, fp
   279d8:	pop	{fp, pc}
   279dc:	push	{fp, lr}
   279e0:	mov	fp, sp
   279e4:	sub	sp, sp, #64	; 0x40
   279e8:	str	r0, [fp, #-8]
   279ec:	ldr	r0, [fp, #-8]
   279f0:	ldr	r0, [r0, #52]	; 0x34
   279f4:	ldr	r0, [r0, #12]
   279f8:	ldr	r0, [r0, #28]
   279fc:	str	r0, [fp, #-12]
   27a00:	ldr	r0, [fp, #-12]
   27a04:	ldr	r1, [fp, #-8]
   27a08:	str	r0, [r1, #72]	; 0x48
   27a0c:	ldr	r0, [fp, #-8]
   27a10:	ldr	r0, [r0, #24]
   27a14:	ldr	r1, [fp, #-12]
   27a18:	movw	r2, #12
   27a1c:	mul	r1, r1, r2
   27a20:	add	r1, r0, r1
   27a24:	add	r0, sp, #32
   27a28:	bl	30d78 <__assert_fail@plt+0x1f8e4>
   27a2c:	str	r0, [fp, #-20]	; 0xffffffec
   27a30:	ldr	r0, [fp, #-20]	; 0xffffffec
   27a34:	cmp	r0, #0
   27a38:	beq	27a48 <__assert_fail@plt+0x165b4>
   27a3c:	ldr	r0, [fp, #-20]	; 0xffffffec
   27a40:	str	r0, [fp, #-4]
   27a44:	b	27d34 <__assert_fail@plt+0x168a0>
   27a48:	ldr	r0, [fp, #-8]
   27a4c:	ldr	r0, [r0, #76]	; 0x4c
   27a50:	cmp	r0, #0
   27a54:	ble	27be8 <__assert_fail@plt+0x16754>
   27a58:	movw	r0, #0
   27a5c:	str	r0, [fp, #-16]
   27a60:	ldr	r0, [fp, #-16]
   27a64:	ldr	r1, [sp, #36]	; 0x24
   27a68:	cmp	r0, r1
   27a6c:	bge	27be4 <__assert_fail@plt+0x16750>
   27a70:	ldr	r0, [sp, #40]	; 0x28
   27a74:	ldr	r1, [fp, #-16]
   27a78:	ldr	r0, [r0, r1, lsl #2]
   27a7c:	str	r0, [sp, #28]
   27a80:	ldr	r0, [fp, #-8]
   27a84:	ldr	r0, [r0]
   27a88:	ldr	r1, [sp, #28]
   27a8c:	add	r0, r0, r1, lsl #3
   27a90:	ldr	r0, [r0, #4]
   27a94:	and	r0, r0, #255	; 0xff
   27a98:	str	r0, [sp, #24]
   27a9c:	ldr	r0, [sp, #24]
   27aa0:	cmp	r0, #4
   27aa4:	beq	27aac <__assert_fail@plt+0x16618>
   27aa8:	b	27bd4 <__assert_fail@plt+0x16740>
   27aac:	movw	r0, #0
   27ab0:	str	r0, [sp, #20]
   27ab4:	ldr	r0, [sp, #20]
   27ab8:	ldr	r1, [sp, #36]	; 0x24
   27abc:	cmp	r0, r1
   27ac0:	bge	27b30 <__assert_fail@plt+0x1669c>
   27ac4:	ldr	r0, [fp, #-8]
   27ac8:	ldr	r0, [r0]
   27acc:	ldr	r1, [sp, #40]	; 0x28
   27ad0:	ldr	r2, [sp, #20]
   27ad4:	ldr	r1, [r1, r2, lsl #2]
   27ad8:	add	r0, r0, r1, lsl #3
   27adc:	str	r0, [sp, #16]
   27ae0:	ldr	r0, [sp, #16]
   27ae4:	ldr	r0, [r0, #4]
   27ae8:	and	r0, r0, #255	; 0xff
   27aec:	cmp	r0, #9
   27af0:	bne	27b1c <__assert_fail@plt+0x16688>
   27af4:	ldr	r0, [sp, #16]
   27af8:	ldr	r0, [r0]
   27afc:	ldr	r1, [fp, #-8]
   27b00:	ldr	r1, [r1]
   27b04:	ldr	r2, [sp, #28]
   27b08:	add	r1, r1, r2, lsl #3
   27b0c:	ldr	r1, [r1]
   27b10:	cmp	r0, r1
   27b14:	bne	27b1c <__assert_fail@plt+0x16688>
   27b18:	b	27b30 <__assert_fail@plt+0x1669c>
   27b1c:	b	27b20 <__assert_fail@plt+0x1668c>
   27b20:	ldr	r0, [sp, #20]
   27b24:	add	r0, r0, #1
   27b28:	str	r0, [sp, #20]
   27b2c:	b	27ab4 <__assert_fail@plt+0x16620>
   27b30:	ldr	r0, [sp, #20]
   27b34:	ldr	r1, [sp, #36]	; 0x24
   27b38:	cmp	r0, r1
   27b3c:	bne	27b44 <__assert_fail@plt+0x166b0>
   27b40:	b	27bd4 <__assert_fail@plt+0x16740>
   27b44:	ldr	r0, [sp, #24]
   27b48:	cmp	r0, #4
   27b4c:	bne	27bd0 <__assert_fail@plt+0x1673c>
   27b50:	ldr	r0, [fp, #-8]
   27b54:	ldr	r0, [r0, #20]
   27b58:	ldr	r1, [sp, #28]
   27b5c:	movw	r2, #12
   27b60:	mul	r1, r1, r2
   27b64:	add	r0, r0, r1
   27b68:	ldr	r0, [r0, #8]
   27b6c:	ldr	r0, [r0]
   27b70:	str	r0, [sp, #12]
   27b74:	ldr	r1, [sp, #12]
   27b78:	add	r0, sp, #32
   27b7c:	bl	30e4c <__assert_fail@plt+0x1f9b8>
   27b80:	cmp	r0, #0
   27b84:	bne	27bcc <__assert_fail@plt+0x16738>
   27b88:	ldr	r0, [fp, #-8]
   27b8c:	ldr	r0, [r0, #24]
   27b90:	ldr	r1, [sp, #12]
   27b94:	movw	r2, #12
   27b98:	mul	r1, r1, r2
   27b9c:	add	r1, r0, r1
   27ba0:	add	r0, sp, #32
   27ba4:	bl	304a4 <__assert_fail@plt+0x1f010>
   27ba8:	str	r0, [sp, #8]
   27bac:	ldr	r0, [sp, #8]
   27bb0:	cmp	r0, #0
   27bb4:	beq	27bc4 <__assert_fail@plt+0x16730>
   27bb8:	ldr	r0, [sp, #8]
   27bbc:	str	r0, [fp, #-4]
   27bc0:	b	27d34 <__assert_fail@plt+0x168a0>
   27bc4:	movw	r0, #0
   27bc8:	str	r0, [fp, #-16]
   27bcc:	b	27bd0 <__assert_fail@plt+0x1673c>
   27bd0:	b	27bd4 <__assert_fail@plt+0x16740>
   27bd4:	ldr	r0, [fp, #-16]
   27bd8:	add	r0, r0, #1
   27bdc:	str	r0, [fp, #-16]
   27be0:	b	27a60 <__assert_fail@plt+0x165cc>
   27be4:	b	27be8 <__assert_fail@plt+0x16754>
   27be8:	ldr	r1, [fp, #-8]
   27bec:	sub	r0, fp, #20
   27bf0:	add	r2, sp, #32
   27bf4:	movw	r3, #0
   27bf8:	bl	30f3c <__assert_fail@plt+0x1faa8>
   27bfc:	ldr	r1, [fp, #-8]
   27c00:	str	r0, [r1, #36]	; 0x24
   27c04:	ldr	r0, [fp, #-8]
   27c08:	ldr	r0, [r0, #36]	; 0x24
   27c0c:	movw	r1, #0
   27c10:	cmp	r0, r1
   27c14:	bne	27c24 <__assert_fail@plt+0x16790>
   27c18:	ldr	r0, [fp, #-20]	; 0xffffffec
   27c1c:	str	r0, [fp, #-4]
   27c20:	b	27d34 <__assert_fail@plt+0x168a0>
   27c24:	ldr	r0, [fp, #-8]
   27c28:	ldr	r0, [r0, #36]	; 0x24
   27c2c:	ldrb	r0, [r0, #52]	; 0x34
   27c30:	lsr	r0, r0, #7
   27c34:	and	r0, r0, #255	; 0xff
   27c38:	cmp	r0, #0
   27c3c:	beq	27d04 <__assert_fail@plt+0x16870>
   27c40:	ldr	r1, [fp, #-8]
   27c44:	sub	r0, fp, #20
   27c48:	add	r2, sp, #32
   27c4c:	movw	r3, #1
   27c50:	bl	30f3c <__assert_fail@plt+0x1faa8>
   27c54:	ldr	r1, [fp, #-8]
   27c58:	str	r0, [r1, #40]	; 0x28
   27c5c:	ldr	r1, [fp, #-8]
   27c60:	sub	r0, fp, #20
   27c64:	add	r2, sp, #32
   27c68:	movw	r3, #2
   27c6c:	bl	30f3c <__assert_fail@plt+0x1faa8>
   27c70:	ldr	r1, [fp, #-8]
   27c74:	str	r0, [r1, #44]	; 0x2c
   27c78:	ldr	r1, [fp, #-8]
   27c7c:	sub	r0, fp, #20
   27c80:	add	r2, sp, #32
   27c84:	movw	r3, #6
   27c88:	bl	30f3c <__assert_fail@plt+0x1faa8>
   27c8c:	ldr	r1, [fp, #-8]
   27c90:	str	r0, [r1, #48]	; 0x30
   27c94:	ldr	r0, [fp, #-8]
   27c98:	ldr	r0, [r0, #40]	; 0x28
   27c9c:	movw	r1, #0
   27ca0:	cmp	r0, r1
   27ca4:	movw	r0, #1
   27ca8:	str	r0, [sp, #4]
   27cac:	beq	27ce8 <__assert_fail@plt+0x16854>
   27cb0:	ldr	r0, [fp, #-8]
   27cb4:	ldr	r0, [r0, #44]	; 0x2c
   27cb8:	movw	r1, #0
   27cbc:	cmp	r0, r1
   27cc0:	movw	r0, #1
   27cc4:	str	r0, [sp, #4]
   27cc8:	beq	27ce8 <__assert_fail@plt+0x16854>
   27ccc:	ldr	r0, [fp, #-8]
   27cd0:	ldr	r0, [r0, #48]	; 0x30
   27cd4:	movw	r1, #0
   27cd8:	cmp	r0, r1
   27cdc:	movw	r0, #0
   27ce0:	moveq	r0, #1
   27ce4:	str	r0, [sp, #4]
   27ce8:	ldr	r0, [sp, #4]
   27cec:	tst	r0, #1
   27cf0:	beq	27d00 <__assert_fail@plt+0x1686c>
   27cf4:	ldr	r0, [fp, #-20]	; 0xffffffec
   27cf8:	str	r0, [fp, #-4]
   27cfc:	b	27d34 <__assert_fail@plt+0x168a0>
   27d00:	b	27d24 <__assert_fail@plt+0x16890>
   27d04:	ldr	r0, [fp, #-8]
   27d08:	ldr	r0, [r0, #36]	; 0x24
   27d0c:	ldr	r1, [fp, #-8]
   27d10:	str	r0, [r1, #48]	; 0x30
   27d14:	ldr	r1, [fp, #-8]
   27d18:	str	r0, [r1, #44]	; 0x2c
   27d1c:	ldr	r1, [fp, #-8]
   27d20:	str	r0, [r1, #40]	; 0x28
   27d24:	ldr	r0, [sp, #40]	; 0x28
   27d28:	bl	138a4 <__assert_fail@plt+0x2410>
   27d2c:	movw	r0, #0
   27d30:	str	r0, [fp, #-4]
   27d34:	ldr	r0, [fp, #-4]
   27d38:	mov	sp, fp
   27d3c:	pop	{fp, pc}
   27d40:	push	{fp, lr}
   27d44:	mov	fp, sp
   27d48:	sub	sp, sp, #28
   27d4c:	ldr	ip, [fp, #12]
   27d50:	ldr	lr, [fp, #8]
   27d54:	str	r0, [fp, #-4]
   27d58:	str	r1, [fp, #-8]
   27d5c:	str	r2, [fp, #-12]
   27d60:	str	r3, [sp, #12]
   27d64:	and	r0, lr, #1
   27d68:	strb	r0, [sp, #11]
   27d6c:	ldr	r0, [fp, #-4]
   27d70:	ldr	r1, [fp, #-12]
   27d74:	str	r0, [r1]
   27d78:	ldr	r0, [fp, #-8]
   27d7c:	ldr	r1, [fp, #-12]
   27d80:	str	r0, [r1, #48]	; 0x30
   27d84:	ldr	r0, [fp, #-8]
   27d88:	ldr	r1, [fp, #-12]
   27d8c:	str	r0, [r1, #44]	; 0x2c
   27d90:	ldr	r0, [sp, #12]
   27d94:	ldr	r1, [fp, #-12]
   27d98:	str	r0, [r1, #64]	; 0x40
   27d9c:	ldrb	r0, [sp, #11]
   27da0:	and	r0, r0, #1
   27da4:	ldr	r1, [fp, #-12]
   27da8:	strb	r0, [r1, #72]	; 0x48
   27dac:	ldr	r0, [sp, #12]
   27db0:	movw	r1, #0
   27db4:	cmp	r0, r1
   27db8:	movw	r0, #1
   27dbc:	str	ip, [sp, #4]
   27dc0:	str	r0, [sp]
   27dc4:	bne	27dd0 <__assert_fail@plt+0x1693c>
   27dc8:	ldrb	r0, [sp, #11]
   27dcc:	str	r0, [sp]
   27dd0:	ldr	r0, [sp]
   27dd4:	and	r0, r0, #1
   27dd8:	ldr	r1, [fp, #-12]
   27ddc:	strb	r0, [r1, #75]	; 0x4b
   27de0:	ldr	r0, [fp, #12]
   27de4:	ldr	r0, [r0, #92]	; 0x5c
   27de8:	ldr	r1, [fp, #-12]
   27dec:	str	r0, [r1, #80]	; 0x50
   27df0:	ldr	r0, [fp, #12]
   27df4:	ldrb	r0, [r0, #88]	; 0x58
   27df8:	ubfx	r0, r0, #2, #1
   27dfc:	ldr	r1, [fp, #-12]
   27e00:	strb	r0, [r1, #73]	; 0x49
   27e04:	ldr	r0, [fp, #12]
   27e08:	ldrb	r0, [r0, #88]	; 0x58
   27e0c:	ubfx	r0, r0, #3, #1
   27e10:	and	r0, r0, #255	; 0xff
   27e14:	ldr	r1, [fp, #-12]
   27e18:	strb	r0, [r1, #74]	; 0x4a
   27e1c:	ldr	r0, [fp, #-12]
   27e20:	ldr	r0, [r0, #48]	; 0x30
   27e24:	ldr	r1, [fp, #-12]
   27e28:	str	r0, [r1, #56]	; 0x38
   27e2c:	ldr	r0, [fp, #-12]
   27e30:	ldr	r0, [r0, #56]	; 0x38
   27e34:	ldr	r1, [fp, #-12]
   27e38:	str	r0, [r1, #52]	; 0x34
   27e3c:	mov	sp, fp
   27e40:	pop	{fp, pc}
   27e44:	push	{fp, lr}
   27e48:	mov	fp, sp
   27e4c:	sub	sp, sp, #32
   27e50:	str	r0, [fp, #-8]
   27e54:	str	r1, [fp, #-12]
   27e58:	ldr	r0, [fp, #-8]
   27e5c:	ldr	r0, [r0, #80]	; 0x50
   27e60:	cmp	r0, #1
   27e64:	ble	27f24 <__assert_fail@plt+0x16a90>
   27e68:	ldr	r0, [pc, #296]	; 27f98 <__assert_fail@plt+0x16b04>
   27e6c:	movw	r1, #4
   27e70:	str	r1, [sp, #12]
   27e74:	ldr	r1, [fp, #-12]
   27e78:	cmp	r0, r1
   27e7c:	bcs	27e8c <__assert_fail@plt+0x169f8>
   27e80:	movw	r0, #12
   27e84:	str	r0, [fp, #-4]
   27e88:	b	27f8c <__assert_fail@plt+0x16af8>
   27e8c:	ldr	r0, [fp, #-8]
   27e90:	ldr	r0, [r0, #8]
   27e94:	ldr	r1, [fp, #-12]
   27e98:	lsl	r1, r1, #2
   27e9c:	bl	3fc48 <__assert_fail@plt+0x2e7b4>
   27ea0:	str	r0, [sp, #16]
   27ea4:	ldr	r0, [sp, #16]
   27ea8:	movw	r1, #0
   27eac:	cmp	r0, r1
   27eb0:	bne	27ec0 <__assert_fail@plt+0x16a2c>
   27eb4:	movw	r0, #12
   27eb8:	str	r0, [fp, #-4]
   27ebc:	b	27f8c <__assert_fail@plt+0x16af8>
   27ec0:	ldr	r0, [sp, #16]
   27ec4:	ldr	r1, [fp, #-8]
   27ec8:	str	r0, [r1, #8]
   27ecc:	ldr	r0, [fp, #-8]
   27ed0:	ldr	r0, [r0, #12]
   27ed4:	movw	r1, #0
   27ed8:	cmp	r0, r1
   27edc:	beq	27f20 <__assert_fail@plt+0x16a8c>
   27ee0:	ldr	r0, [fp, #-8]
   27ee4:	ldr	r0, [r0, #12]
   27ee8:	ldr	r1, [fp, #-12]
   27eec:	lsl	r1, r1, #2
   27ef0:	bl	3fc48 <__assert_fail@plt+0x2e7b4>
   27ef4:	str	r0, [sp, #8]
   27ef8:	ldr	r0, [sp, #8]
   27efc:	movw	r1, #0
   27f00:	cmp	r0, r1
   27f04:	bne	27f14 <__assert_fail@plt+0x16a80>
   27f08:	movw	r0, #12
   27f0c:	str	r0, [fp, #-4]
   27f10:	b	27f8c <__assert_fail@plt+0x16af8>
   27f14:	ldr	r0, [sp, #8]
   27f18:	ldr	r1, [fp, #-8]
   27f1c:	str	r0, [r1, #12]
   27f20:	b	27f24 <__assert_fail@plt+0x16a90>
   27f24:	ldr	r0, [fp, #-8]
   27f28:	ldrsb	r0, [r0, #75]	; 0x4b
   27f2c:	cmp	r0, #0
   27f30:	beq	27f78 <__assert_fail@plt+0x16ae4>
   27f34:	ldr	r0, [fp, #-8]
   27f38:	ldr	r0, [r0, #4]
   27f3c:	ldr	r1, [fp, #-12]
   27f40:	mov	r2, r1
   27f44:	str	r2, [sp]
   27f48:	bl	3fc48 <__assert_fail@plt+0x2e7b4>
   27f4c:	str	r0, [sp, #4]
   27f50:	ldr	r0, [sp, #4]
   27f54:	movw	r1, #0
   27f58:	cmp	r0, r1
   27f5c:	bne	27f6c <__assert_fail@plt+0x16ad8>
   27f60:	movw	r0, #12
   27f64:	str	r0, [fp, #-4]
   27f68:	b	27f8c <__assert_fail@plt+0x16af8>
   27f6c:	ldr	r0, [sp, #4]
   27f70:	ldr	r1, [fp, #-8]
   27f74:	str	r0, [r1, #4]
   27f78:	ldr	r0, [fp, #-12]
   27f7c:	ldr	r1, [fp, #-8]
   27f80:	str	r0, [r1, #36]	; 0x24
   27f84:	movw	r0, #0
   27f88:	str	r0, [fp, #-4]
   27f8c:	ldr	r0, [fp, #-4]
   27f90:	mov	sp, fp
   27f94:	pop	{fp, pc}
   27f98:	svccc	0x00ffffff
   27f9c:	push	{fp, lr}
   27fa0:	mov	fp, sp
   27fa4:	sub	sp, sp, #192	; 0xc0
   27fa8:	str	r0, [fp, #-8]
   27fac:	ldr	r0, [fp, #-8]
   27fb0:	ldr	r0, [r0, #28]
   27fb4:	str	r0, [fp, #-24]	; 0xffffffe8
   27fb8:	ldr	r0, [fp, #-8]
   27fbc:	ldr	r0, [r0, #36]	; 0x24
   27fc0:	ldr	r1, [fp, #-8]
   27fc4:	ldr	r1, [r1, #48]	; 0x30
   27fc8:	cmp	r0, r1
   27fcc:	ble	27fe0 <__assert_fail@plt+0x16b4c>
   27fd0:	ldr	r0, [fp, #-8]
   27fd4:	ldr	r0, [r0, #48]	; 0x30
   27fd8:	str	r0, [sp, #32]
   27fdc:	b	27fec <__assert_fail@plt+0x16b58>
   27fe0:	ldr	r0, [fp, #-8]
   27fe4:	ldr	r0, [r0, #36]	; 0x24
   27fe8:	str	r0, [sp, #32]
   27fec:	ldr	r0, [sp, #32]
   27ff0:	str	r0, [fp, #-28]	; 0xffffffe4
   27ff4:	ldr	r0, [fp, #-8]
   27ff8:	ldrsb	r0, [r0, #74]	; 0x4a
   27ffc:	cmp	r0, #0
   28000:	bne	28360 <__assert_fail@plt+0x16ecc>
   28004:	ldr	r0, [fp, #-8]
   28008:	ldr	r0, [r0, #64]	; 0x40
   2800c:	movw	r1, #0
   28010:	cmp	r0, r1
   28014:	bne	28360 <__assert_fail@plt+0x16ecc>
   28018:	ldr	r0, [fp, #-8]
   2801c:	ldrsb	r0, [r0, #76]	; 0x4c
   28020:	cmp	r0, #0
   28024:	bne	28360 <__assert_fail@plt+0x16ecc>
   28028:	b	2802c <__assert_fail@plt+0x16b98>
   2802c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   28030:	ldr	r1, [fp, #-28]	; 0xffffffe4
   28034:	cmp	r0, r1
   28038:	bge	2833c <__assert_fail@plt+0x16ea8>
   2803c:	ldr	r0, [fp, #-8]
   28040:	ldr	r0, [r0]
   28044:	ldr	r1, [fp, #-8]
   28048:	ldr	r1, [r1, #24]
   2804c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   28050:	add	r1, r1, r2
   28054:	add	r0, r0, r1
   28058:	ldrb	r0, [r0]
   2805c:	strb	r0, [sp, #87]	; 0x57
   28060:	ldrb	r0, [sp, #87]	; 0x57
   28064:	mvn	r1, #127	; 0x7f
   28068:	and	r0, r0, r1
   2806c:	cmp	r0, #0
   28070:	bne	280e8 <__assert_fail@plt+0x16c54>
   28074:	ldr	r0, [fp, #-8]
   28078:	add	r0, r0, #16
   2807c:	bl	11278 <mbsinit@plt>
   28080:	cmp	r0, #0
   28084:	beq	280e8 <__assert_fail@plt+0x16c54>
   28088:	ldrb	r0, [sp, #87]	; 0x57
   2808c:	bl	11458 <towupper@plt>
   28090:	str	r0, [sp, #80]	; 0x50
   28094:	ldr	r0, [sp, #80]	; 0x50
   28098:	mvn	lr, #127	; 0x7f
   2809c:	and	r0, r0, lr
   280a0:	cmp	r0, #0
   280a4:	bne	280e4 <__assert_fail@plt+0x16c50>
   280a8:	ldr	r0, [sp, #80]	; 0x50
   280ac:	ldr	r1, [fp, #-8]
   280b0:	ldr	r1, [r1, #4]
   280b4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   280b8:	strb	r0, [r1, r2]
   280bc:	ldr	r0, [sp, #80]	; 0x50
   280c0:	ldr	r1, [fp, #-8]
   280c4:	ldr	r1, [r1, #8]
   280c8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   280cc:	add	r1, r1, r2, lsl #2
   280d0:	str	r0, [r1]
   280d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   280d8:	add	r0, r0, #1
   280dc:	str	r0, [fp, #-24]	; 0xffffffe8
   280e0:	b	2802c <__assert_fail@plt+0x16b98>
   280e4:	b	280e8 <__assert_fail@plt+0x16c54>
   280e8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   280ec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   280f0:	sub	r0, r0, r1
   280f4:	str	r0, [fp, #-32]	; 0xffffffe0
   280f8:	ldr	r0, [fp, #-8]
   280fc:	ldr	r1, [r0, #16]
   28100:	str	r1, [fp, #-16]
   28104:	ldr	r0, [r0, #20]
   28108:	str	r0, [fp, #-12]
   2810c:	ldr	r0, [fp, #-8]
   28110:	ldr	r0, [r0]
   28114:	ldr	r1, [fp, #-8]
   28118:	ldr	r1, [r1, #24]
   2811c:	add	r0, r0, r1
   28120:	ldr	r1, [fp, #-24]	; 0xffffffe8
   28124:	add	r1, r0, r1
   28128:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2812c:	ldr	r0, [fp, #-8]
   28130:	add	r3, r0, #16
   28134:	add	r0, sp, #88	; 0x58
   28138:	bl	4193c <__assert_fail@plt+0x304a8>
   2813c:	str	r0, [fp, #-36]	; 0xffffffdc
   28140:	ldr	r0, [fp, #-36]	; 0xffffffdc
   28144:	movw	r1, #0
   28148:	cmp	r1, r0
   2814c:	movw	r0, #0
   28150:	str	r0, [sp, #28]
   28154:	bcs	2816c <__assert_fail@plt+0x16cd8>
   28158:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2815c:	cmn	r0, #2
   28160:	movw	r0, #0
   28164:	movcc	r0, #1
   28168:	str	r0, [sp, #28]
   2816c:	ldr	r0, [sp, #28]
   28170:	tst	r0, #1
   28174:	beq	28288 <__assert_fail@plt+0x16df4>
   28178:	ldr	r0, [sp, #88]	; 0x58
   2817c:	bl	11458 <towupper@plt>
   28180:	str	r0, [sp, #76]	; 0x4c
   28184:	ldr	r0, [sp, #76]	; 0x4c
   28188:	ldr	lr, [sp, #88]	; 0x58
   2818c:	cmp	r0, lr
   28190:	beq	281e8 <__assert_fail@plt+0x16d54>
   28194:	add	r0, sp, #92	; 0x5c
   28198:	ldr	r1, [sp, #76]	; 0x4c
   2819c:	sub	r2, fp, #16
   281a0:	bl	111b8 <wcrtomb@plt>
   281a4:	str	r0, [sp, #72]	; 0x48
   281a8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   281ac:	ldr	r1, [sp, #72]	; 0x48
   281b0:	cmp	r0, r1
   281b4:	bne	281d8 <__assert_fail@plt+0x16d44>
   281b8:	add	r1, sp, #92	; 0x5c
   281bc:	ldr	r0, [fp, #-8]
   281c0:	ldr	r0, [r0, #4]
   281c4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   281c8:	add	r0, r0, r2
   281cc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   281d0:	bl	11248 <memcpy@plt>
   281d4:	b	281e4 <__assert_fail@plt+0x16d50>
   281d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   281dc:	str	r0, [fp, #-20]	; 0xffffffec
   281e0:	b	28380 <__assert_fail@plt+0x16eec>
   281e4:	b	2821c <__assert_fail@plt+0x16d88>
   281e8:	ldr	r0, [fp, #-8]
   281ec:	ldr	r0, [r0, #4]
   281f0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   281f4:	add	r0, r0, r1
   281f8:	ldr	r1, [fp, #-8]
   281fc:	ldr	r1, [r1]
   28200:	ldr	r2, [fp, #-8]
   28204:	ldr	r2, [r2, #24]
   28208:	add	r1, r1, r2
   2820c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   28210:	add	r1, r1, r2
   28214:	ldr	r2, [fp, #-36]	; 0xffffffdc
   28218:	bl	11248 <memcpy@plt>
   2821c:	ldr	r0, [sp, #76]	; 0x4c
   28220:	ldr	r1, [fp, #-8]
   28224:	ldr	r1, [r1, #8]
   28228:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2822c:	add	r3, r2, #1
   28230:	str	r3, [fp, #-24]	; 0xffffffe8
   28234:	add	r1, r1, r2, lsl #2
   28238:	str	r0, [r1]
   2823c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   28240:	ldr	r1, [fp, #-36]	; 0xffffffdc
   28244:	add	r0, r0, r1
   28248:	sub	r0, r0, #1
   2824c:	str	r0, [fp, #-32]	; 0xffffffe0
   28250:	ldr	r0, [fp, #-24]	; 0xffffffe8
   28254:	ldr	r1, [fp, #-32]	; 0xffffffe0
   28258:	cmp	r0, r1
   2825c:	bge	28284 <__assert_fail@plt+0x16df0>
   28260:	ldr	r0, [fp, #-8]
   28264:	ldr	r0, [r0, #8]
   28268:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2826c:	add	r2, r1, #1
   28270:	str	r2, [fp, #-24]	; 0xffffffe8
   28274:	add	r0, r0, r1, lsl #2
   28278:	mvn	r1, #0
   2827c:	str	r1, [r0]
   28280:	b	28250 <__assert_fail@plt+0x16dbc>
   28284:	b	28338 <__assert_fail@plt+0x16ea4>
   28288:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2828c:	cmn	r0, #1
   28290:	beq	282c4 <__assert_fail@plt+0x16e30>
   28294:	ldr	r0, [fp, #-36]	; 0xffffffdc
   28298:	cmp	r0, #0
   2829c:	beq	282c4 <__assert_fail@plt+0x16e30>
   282a0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   282a4:	cmn	r0, #2
   282a8:	bne	2831c <__assert_fail@plt+0x16e88>
   282ac:	ldr	r0, [fp, #-8]
   282b0:	ldr	r0, [r0, #36]	; 0x24
   282b4:	ldr	r1, [fp, #-8]
   282b8:	ldr	r1, [r1, #48]	; 0x30
   282bc:	cmp	r0, r1
   282c0:	blt	2831c <__assert_fail@plt+0x16e88>
   282c4:	ldrb	r0, [sp, #87]	; 0x57
   282c8:	ldr	r1, [fp, #-8]
   282cc:	ldr	r1, [r1, #4]
   282d0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   282d4:	strb	r0, [r1, r2]
   282d8:	ldrb	r0, [sp, #87]	; 0x57
   282dc:	ldr	r1, [fp, #-8]
   282e0:	ldr	r1, [r1, #8]
   282e4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   282e8:	add	r3, r2, #1
   282ec:	str	r3, [fp, #-24]	; 0xffffffe8
   282f0:	add	r1, r1, r2, lsl #2
   282f4:	str	r0, [r1]
   282f8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   282fc:	cmn	r0, #1
   28300:	bne	28318 <__assert_fail@plt+0x16e84>
   28304:	ldr	r0, [fp, #-8]
   28308:	ldr	r1, [fp, #-16]
   2830c:	str	r1, [r0, #16]
   28310:	ldr	r1, [fp, #-12]
   28314:	str	r1, [r0, #20]
   28318:	b	28334 <__assert_fail@plt+0x16ea0>
   2831c:	ldr	r0, [fp, #-8]
   28320:	ldr	r1, [fp, #-16]
   28324:	str	r1, [r0, #16]
   28328:	ldr	r1, [fp, #-12]
   2832c:	str	r1, [r0, #20]
   28330:	b	2833c <__assert_fail@plt+0x16ea8>
   28334:	b	28338 <__assert_fail@plt+0x16ea4>
   28338:	b	2802c <__assert_fail@plt+0x16b98>
   2833c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   28340:	ldr	r1, [fp, #-8]
   28344:	str	r0, [r1, #28]
   28348:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2834c:	ldr	r1, [fp, #-8]
   28350:	str	r0, [r1, #32]
   28354:	movw	r0, #0
   28358:	str	r0, [fp, #-4]
   2835c:	b	28a3c <__assert_fail@plt+0x175a8>
   28360:	ldr	r0, [fp, #-8]
   28364:	ldr	r0, [r0, #32]
   28368:	str	r0, [fp, #-20]	; 0xffffffec
   2836c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   28370:	ldr	r1, [fp, #-28]	; 0xffffffe4
   28374:	cmp	r0, r1
   28378:	bge	28a18 <__assert_fail@plt+0x17584>
   2837c:	b	28380 <__assert_fail@plt+0x16eec>
   28380:	ldr	r0, [fp, #-28]	; 0xffffffe4
   28384:	ldr	r1, [fp, #-24]	; 0xffffffe8
   28388:	sub	r0, r0, r1
   2838c:	str	r0, [fp, #-32]	; 0xffffffe0
   28390:	ldr	r0, [fp, #-8]
   28394:	ldr	r1, [r0, #16]
   28398:	str	r1, [fp, #-16]
   2839c:	ldr	r0, [r0, #20]
   283a0:	str	r0, [fp, #-12]
   283a4:	ldr	r0, [fp, #-8]
   283a8:	ldr	r0, [r0, #64]	; 0x40
   283ac:	movw	r1, #0
   283b0:	cmp	r0, r1
   283b4:	beq	2846c <__assert_fail@plt+0x16fd8>
   283b8:	movw	r0, #0
   283bc:	str	r0, [sp, #60]	; 0x3c
   283c0:	ldr	r0, [sp, #60]	; 0x3c
   283c4:	ldr	r1, [fp, #-8]
   283c8:	ldr	r1, [r1, #80]	; 0x50
   283cc:	cmp	r0, r1
   283d0:	movw	r0, #0
   283d4:	str	r0, [sp, #24]
   283d8:	bge	283f4 <__assert_fail@plt+0x16f60>
   283dc:	ldr	r0, [sp, #60]	; 0x3c
   283e0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   283e4:	cmp	r0, r1
   283e8:	movw	r0, #0
   283ec:	movlt	r0, #1
   283f0:	str	r0, [sp, #24]
   283f4:	ldr	r0, [sp, #24]
   283f8:	tst	r0, #1
   283fc:	beq	28460 <__assert_fail@plt+0x16fcc>
   28400:	ldr	r0, [fp, #-8]
   28404:	ldr	r0, [r0]
   28408:	ldr	r1, [fp, #-8]
   2840c:	ldr	r1, [r1, #24]
   28410:	ldr	r2, [fp, #-20]	; 0xffffffec
   28414:	add	r1, r1, r2
   28418:	ldr	r2, [sp, #60]	; 0x3c
   2841c:	add	r1, r1, r2
   28420:	add	r0, r0, r1
   28424:	ldrb	r0, [r0]
   28428:	str	r0, [sp, #56]	; 0x38
   2842c:	ldr	r0, [fp, #-8]
   28430:	ldr	r0, [r0, #64]	; 0x40
   28434:	ldr	r1, [sp, #56]	; 0x38
   28438:	add	r0, r0, r1
   2843c:	ldrb	r0, [r0]
   28440:	ldr	r1, [sp, #60]	; 0x3c
   28444:	add	r2, sp, #92	; 0x5c
   28448:	add	r1, r2, r1
   2844c:	strb	r0, [r1]
   28450:	ldr	r0, [sp, #60]	; 0x3c
   28454:	add	r0, r0, #1
   28458:	str	r0, [sp, #60]	; 0x3c
   2845c:	b	283c0 <__assert_fail@plt+0x16f2c>
   28460:	add	r0, sp, #92	; 0x5c
   28464:	str	r0, [sp, #64]	; 0x40
   28468:	b	2848c <__assert_fail@plt+0x16ff8>
   2846c:	ldr	r0, [fp, #-8]
   28470:	ldr	r0, [r0]
   28474:	ldr	r1, [fp, #-8]
   28478:	ldr	r1, [r1, #24]
   2847c:	add	r0, r0, r1
   28480:	ldr	r1, [fp, #-20]	; 0xffffffec
   28484:	add	r0, r0, r1
   28488:	str	r0, [sp, #64]	; 0x40
   2848c:	ldr	r1, [sp, #64]	; 0x40
   28490:	ldr	r2, [fp, #-32]	; 0xffffffe0
   28494:	ldr	r0, [fp, #-8]
   28498:	add	r3, r0, #16
   2849c:	add	r0, sp, #68	; 0x44
   284a0:	bl	4193c <__assert_fail@plt+0x304a8>
   284a4:	str	r0, [fp, #-36]	; 0xffffffdc
   284a8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   284ac:	movw	r1, #0
   284b0:	cmp	r1, r0
   284b4:	movw	r0, #0
   284b8:	str	r0, [sp, #20]
   284bc:	bcs	284d4 <__assert_fail@plt+0x17040>
   284c0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   284c4:	cmn	r0, #2
   284c8:	movw	r0, #0
   284cc:	movcc	r0, #1
   284d0:	str	r0, [sp, #20]
   284d4:	ldr	r0, [sp, #20]
   284d8:	tst	r0, #1
   284dc:	beq	288dc <__assert_fail@plt+0x17448>
   284e0:	ldr	r0, [sp, #68]	; 0x44
   284e4:	bl	11458 <towupper@plt>
   284e8:	str	r0, [sp, #52]	; 0x34
   284ec:	ldr	r0, [sp, #52]	; 0x34
   284f0:	ldr	lr, [sp, #68]	; 0x44
   284f4:	cmp	r0, lr
   284f8:	beq	287e4 <__assert_fail@plt+0x17350>
   284fc:	add	r0, sp, #92	; 0x5c
   28500:	ldr	r1, [sp, #52]	; 0x34
   28504:	sub	r2, fp, #16
   28508:	bl	111b8 <wcrtomb@plt>
   2850c:	str	r0, [sp, #48]	; 0x30
   28510:	ldr	r0, [fp, #-36]	; 0xffffffdc
   28514:	ldr	r1, [sp, #48]	; 0x30
   28518:	cmp	r0, r1
   2851c:	bne	28540 <__assert_fail@plt+0x170ac>
   28520:	add	r1, sp, #92	; 0x5c
   28524:	ldr	r0, [fp, #-8]
   28528:	ldr	r0, [r0, #4]
   2852c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   28530:	add	r0, r0, r2
   28534:	ldr	r2, [fp, #-36]	; 0xffffffdc
   28538:	bl	11248 <memcpy@plt>
   2853c:	b	287e0 <__assert_fail@plt+0x1734c>
   28540:	ldr	r0, [sp, #48]	; 0x30
   28544:	cmn	r0, #1
   28548:	beq	287c0 <__assert_fail@plt+0x1732c>
   2854c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   28550:	ldr	r1, [sp, #48]	; 0x30
   28554:	add	r0, r0, r1
   28558:	ldr	r1, [fp, #-8]
   2855c:	ldr	r1, [r1, #36]	; 0x24
   28560:	cmp	r0, r1
   28564:	bls	28580 <__assert_fail@plt+0x170ec>
   28568:	ldr	r0, [fp, #-8]
   2856c:	ldr	r1, [fp, #-16]
   28570:	str	r1, [r0, #16]
   28574:	ldr	r1, [fp, #-12]
   28578:	str	r1, [r0, #20]
   2857c:	b	28a18 <__assert_fail@plt+0x17584>
   28580:	ldr	r0, [fp, #-8]
   28584:	ldr	r0, [r0, #12]
   28588:	movw	r1, #0
   2858c:	cmp	r0, r1
   28590:	bne	285d0 <__assert_fail@plt+0x1713c>
   28594:	ldr	r0, [fp, #-8]
   28598:	ldr	r0, [r0, #36]	; 0x24
   2859c:	lsl	r0, r0, #2
   285a0:	bl	3fbd8 <__assert_fail@plt+0x2e744>
   285a4:	ldr	lr, [fp, #-8]
   285a8:	str	r0, [lr, #12]
   285ac:	ldr	r0, [fp, #-8]
   285b0:	ldr	r0, [r0, #12]
   285b4:	movw	lr, #0
   285b8:	cmp	r0, lr
   285bc:	bne	285cc <__assert_fail@plt+0x17138>
   285c0:	movw	r0, #12
   285c4:	str	r0, [fp, #-4]
   285c8:	b	28a3c <__assert_fail@plt+0x175a8>
   285cc:	b	285d0 <__assert_fail@plt+0x1713c>
   285d0:	ldr	r0, [fp, #-8]
   285d4:	ldrsb	r0, [r0, #76]	; 0x4c
   285d8:	cmp	r0, #0
   285dc:	bne	2862c <__assert_fail@plt+0x17198>
   285e0:	movw	r0, #0
   285e4:	str	r0, [sp, #44]	; 0x2c
   285e8:	ldr	r0, [sp, #44]	; 0x2c
   285ec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   285f0:	cmp	r0, r1
   285f4:	bcs	28620 <__assert_fail@plt+0x1718c>
   285f8:	ldr	r0, [sp, #44]	; 0x2c
   285fc:	mov	r1, r0
   28600:	ldr	r2, [fp, #-8]
   28604:	ldr	r2, [r2, #12]
   28608:	add	r0, r2, r0, lsl #2
   2860c:	str	r1, [r0]
   28610:	ldr	r0, [sp, #44]	; 0x2c
   28614:	add	r0, r0, #1
   28618:	str	r0, [sp, #44]	; 0x2c
   2861c:	b	285e8 <__assert_fail@plt+0x17154>
   28620:	ldr	r0, [fp, #-8]
   28624:	movw	r1, #1
   28628:	strb	r1, [r0, #76]	; 0x4c
   2862c:	ldr	r0, [fp, #-8]
   28630:	ldr	r0, [r0, #4]
   28634:	ldr	r1, [fp, #-24]	; 0xffffffe8
   28638:	add	r0, r0, r1
   2863c:	ldr	r2, [sp, #48]	; 0x30
   28640:	add	r1, sp, #92	; 0x5c
   28644:	bl	11248 <memcpy@plt>
   28648:	ldr	r1, [sp, #52]	; 0x34
   2864c:	ldr	r2, [fp, #-8]
   28650:	ldr	r2, [r2, #8]
   28654:	ldr	lr, [fp, #-24]	; 0xffffffe8
   28658:	str	r1, [r2, lr, lsl #2]
   2865c:	ldr	r1, [fp, #-20]	; 0xffffffec
   28660:	ldr	r2, [fp, #-8]
   28664:	ldr	r2, [r2, #12]
   28668:	ldr	lr, [fp, #-24]	; 0xffffffe8
   2866c:	add	r2, r2, lr, lsl #2
   28670:	str	r1, [r2]
   28674:	movw	r1, #1
   28678:	str	r1, [sp, #44]	; 0x2c
   2867c:	str	r0, [sp, #16]
   28680:	ldr	r0, [sp, #44]	; 0x2c
   28684:	ldr	r1, [sp, #48]	; 0x30
   28688:	cmp	r0, r1
   2868c:	bcs	28714 <__assert_fail@plt+0x17280>
   28690:	ldr	r0, [fp, #-20]	; 0xffffffec
   28694:	ldr	r1, [sp, #44]	; 0x2c
   28698:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2869c:	cmp	r1, r2
   286a0:	str	r0, [sp, #12]
   286a4:	bcs	286b4 <__assert_fail@plt+0x17220>
   286a8:	ldr	r0, [sp, #44]	; 0x2c
   286ac:	str	r0, [sp, #8]
   286b0:	b	286c0 <__assert_fail@plt+0x1722c>
   286b4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   286b8:	sub	r0, r0, #1
   286bc:	str	r0, [sp, #8]
   286c0:	ldr	r0, [sp, #8]
   286c4:	ldr	r1, [sp, #12]
   286c8:	add	r0, r1, r0
   286cc:	ldr	r2, [fp, #-8]
   286d0:	ldr	r2, [r2, #12]
   286d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   286d8:	ldr	ip, [sp, #44]	; 0x2c
   286dc:	add	r3, r3, ip
   286e0:	str	r0, [r2, r3, lsl #2]
   286e4:	ldr	r0, [fp, #-8]
   286e8:	ldr	r0, [r0, #8]
   286ec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   286f0:	ldr	r3, [sp, #44]	; 0x2c
   286f4:	add	r2, r2, r3
   286f8:	add	r0, r0, r2, lsl #2
   286fc:	mvn	r2, #0
   28700:	str	r2, [r0]
   28704:	ldr	r0, [sp, #44]	; 0x2c
   28708:	add	r0, r0, #1
   2870c:	str	r0, [sp, #44]	; 0x2c
   28710:	b	28680 <__assert_fail@plt+0x171ec>
   28714:	ldr	r0, [sp, #48]	; 0x30
   28718:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2871c:	sub	r0, r0, r1
   28720:	ldr	r1, [fp, #-8]
   28724:	ldr	r2, [r1, #48]	; 0x30
   28728:	add	r0, r2, r0
   2872c:	str	r0, [r1, #48]	; 0x30
   28730:	ldr	r0, [fp, #-8]
   28734:	ldr	r0, [r0, #52]	; 0x34
   28738:	ldr	r1, [fp, #-20]	; 0xffffffec
   2873c:	cmp	r0, r1
   28740:	ble	28760 <__assert_fail@plt+0x172cc>
   28744:	ldr	r0, [sp, #48]	; 0x30
   28748:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2874c:	sub	r0, r0, r1
   28750:	ldr	r1, [fp, #-8]
   28754:	ldr	r2, [r1, #56]	; 0x38
   28758:	add	r0, r2, r0
   2875c:	str	r0, [r1, #56]	; 0x38
   28760:	ldr	r0, [fp, #-8]
   28764:	ldr	r0, [r0, #36]	; 0x24
   28768:	ldr	r1, [fp, #-8]
   2876c:	ldr	r1, [r1, #48]	; 0x30
   28770:	cmp	r0, r1
   28774:	ble	28788 <__assert_fail@plt+0x172f4>
   28778:	ldr	r0, [fp, #-8]
   2877c:	ldr	r0, [r0, #48]	; 0x30
   28780:	str	r0, [sp, #4]
   28784:	b	28794 <__assert_fail@plt+0x17300>
   28788:	ldr	r0, [fp, #-8]
   2878c:	ldr	r0, [r0, #36]	; 0x24
   28790:	str	r0, [sp, #4]
   28794:	ldr	r0, [sp, #4]
   28798:	str	r0, [fp, #-28]	; 0xffffffe4
   2879c:	ldr	r0, [sp, #48]	; 0x30
   287a0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   287a4:	add	r0, r1, r0
   287a8:	str	r0, [fp, #-24]	; 0xffffffe8
   287ac:	ldr	r0, [fp, #-36]	; 0xffffffdc
   287b0:	ldr	r1, [fp, #-20]	; 0xffffffec
   287b4:	add	r0, r1, r0
   287b8:	str	r0, [fp, #-20]	; 0xffffffec
   287bc:	b	2836c <__assert_fail@plt+0x16ed8>
   287c0:	ldr	r0, [fp, #-8]
   287c4:	ldr	r0, [r0, #4]
   287c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   287cc:	add	r0, r0, r1
   287d0:	ldr	r1, [sp, #64]	; 0x40
   287d4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   287d8:	bl	11248 <memcpy@plt>
   287dc:	b	287e0 <__assert_fail@plt+0x1734c>
   287e0:	b	28800 <__assert_fail@plt+0x1736c>
   287e4:	ldr	r0, [fp, #-8]
   287e8:	ldr	r0, [r0, #4]
   287ec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   287f0:	add	r0, r0, r1
   287f4:	ldr	r1, [sp, #64]	; 0x40
   287f8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   287fc:	bl	11248 <memcpy@plt>
   28800:	ldr	r0, [fp, #-8]
   28804:	ldrb	r0, [r0, #76]	; 0x4c
   28808:	cmp	r0, #0
   2880c:	beq	28860 <__assert_fail@plt+0x173cc>
   28810:	movw	r0, #0
   28814:	str	r0, [sp, #40]	; 0x28
   28818:	ldr	r0, [sp, #40]	; 0x28
   2881c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   28820:	cmp	r0, r1
   28824:	bcs	2885c <__assert_fail@plt+0x173c8>
   28828:	ldr	r0, [fp, #-20]	; 0xffffffec
   2882c:	ldr	r1, [sp, #40]	; 0x28
   28830:	add	r0, r0, r1
   28834:	ldr	r2, [fp, #-8]
   28838:	ldr	r2, [r2, #12]
   2883c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28840:	add	r1, r3, r1
   28844:	add	r1, r2, r1, lsl #2
   28848:	str	r0, [r1]
   2884c:	ldr	r0, [sp, #40]	; 0x28
   28850:	add	r0, r0, #1
   28854:	str	r0, [sp, #40]	; 0x28
   28858:	b	28818 <__assert_fail@plt+0x17384>
   2885c:	b	28860 <__assert_fail@plt+0x173cc>
   28860:	ldr	r0, [fp, #-36]	; 0xffffffdc
   28864:	ldr	r1, [fp, #-20]	; 0xffffffec
   28868:	add	r0, r1, r0
   2886c:	str	r0, [fp, #-20]	; 0xffffffec
   28870:	ldr	r0, [sp, #52]	; 0x34
   28874:	ldr	r1, [fp, #-8]
   28878:	ldr	r1, [r1, #8]
   2887c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   28880:	add	r3, r2, #1
   28884:	str	r3, [fp, #-24]	; 0xffffffe8
   28888:	add	r1, r1, r2, lsl #2
   2888c:	str	r0, [r1]
   28890:	ldr	r0, [fp, #-24]	; 0xffffffe8
   28894:	ldr	r1, [fp, #-36]	; 0xffffffdc
   28898:	add	r0, r0, r1
   2889c:	sub	r0, r0, #1
   288a0:	str	r0, [fp, #-32]	; 0xffffffe0
   288a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   288a8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   288ac:	cmp	r0, r1
   288b0:	bge	288d8 <__assert_fail@plt+0x17444>
   288b4:	ldr	r0, [fp, #-8]
   288b8:	ldr	r0, [r0, #8]
   288bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   288c0:	add	r2, r1, #1
   288c4:	str	r2, [fp, #-24]	; 0xffffffe8
   288c8:	add	r0, r0, r1, lsl #2
   288cc:	mvn	r1, #0
   288d0:	str	r1, [r0]
   288d4:	b	288a4 <__assert_fail@plt+0x17410>
   288d8:	b	28a14 <__assert_fail@plt+0x17580>
   288dc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   288e0:	cmn	r0, #1
   288e4:	beq	28918 <__assert_fail@plt+0x17484>
   288e8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   288ec:	cmp	r0, #0
   288f0:	beq	28918 <__assert_fail@plt+0x17484>
   288f4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   288f8:	cmn	r0, #2
   288fc:	bne	289f8 <__assert_fail@plt+0x17564>
   28900:	ldr	r0, [fp, #-8]
   28904:	ldr	r0, [r0, #36]	; 0x24
   28908:	ldr	r1, [fp, #-8]
   2890c:	ldr	r1, [r1, #48]	; 0x30
   28910:	cmp	r0, r1
   28914:	blt	289f8 <__assert_fail@plt+0x17564>
   28918:	ldr	r0, [fp, #-8]
   2891c:	ldr	r0, [r0]
   28920:	ldr	r1, [fp, #-8]
   28924:	ldr	r1, [r1, #24]
   28928:	ldr	r2, [fp, #-20]	; 0xffffffec
   2892c:	add	r1, r1, r2
   28930:	add	r0, r0, r1
   28934:	ldrb	r0, [r0]
   28938:	str	r0, [sp, #36]	; 0x24
   2893c:	ldr	r0, [fp, #-8]
   28940:	ldr	r0, [r0, #64]	; 0x40
   28944:	movw	r1, #0
   28948:	cmp	r0, r1
   2894c:	beq	28968 <__assert_fail@plt+0x174d4>
   28950:	ldr	r0, [fp, #-8]
   28954:	ldr	r0, [r0, #64]	; 0x40
   28958:	ldr	r1, [sp, #36]	; 0x24
   2895c:	add	r0, r0, r1
   28960:	ldrb	r0, [r0]
   28964:	str	r0, [sp, #36]	; 0x24
   28968:	ldr	r0, [sp, #36]	; 0x24
   2896c:	ldr	r1, [fp, #-8]
   28970:	ldr	r1, [r1, #4]
   28974:	ldr	r2, [fp, #-24]	; 0xffffffe8
   28978:	add	r1, r1, r2
   2897c:	strb	r0, [r1]
   28980:	ldr	r0, [fp, #-8]
   28984:	ldrb	r0, [r0, #76]	; 0x4c
   28988:	cmp	r0, #0
   2898c:	beq	289a8 <__assert_fail@plt+0x17514>
   28990:	ldr	r0, [fp, #-20]	; 0xffffffec
   28994:	ldr	r1, [fp, #-8]
   28998:	ldr	r1, [r1, #12]
   2899c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   289a0:	add	r1, r1, r2, lsl #2
   289a4:	str	r0, [r1]
   289a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   289ac:	add	r0, r0, #1
   289b0:	str	r0, [fp, #-20]	; 0xffffffec
   289b4:	ldr	r0, [sp, #36]	; 0x24
   289b8:	ldr	r1, [fp, #-8]
   289bc:	ldr	r1, [r1, #8]
   289c0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   289c4:	add	r3, r2, #1
   289c8:	str	r3, [fp, #-24]	; 0xffffffe8
   289cc:	add	r1, r1, r2, lsl #2
   289d0:	str	r0, [r1]
   289d4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   289d8:	cmn	r0, #1
   289dc:	bne	289f4 <__assert_fail@plt+0x17560>
   289e0:	ldr	r0, [fp, #-8]
   289e4:	ldr	r1, [fp, #-16]
   289e8:	str	r1, [r0, #16]
   289ec:	ldr	r1, [fp, #-12]
   289f0:	str	r1, [r0, #20]
   289f4:	b	28a10 <__assert_fail@plt+0x1757c>
   289f8:	ldr	r0, [fp, #-8]
   289fc:	ldr	r1, [fp, #-16]
   28a00:	str	r1, [r0, #16]
   28a04:	ldr	r1, [fp, #-12]
   28a08:	str	r1, [r0, #20]
   28a0c:	b	28a18 <__assert_fail@plt+0x17584>
   28a10:	b	28a14 <__assert_fail@plt+0x17580>
   28a14:	b	2836c <__assert_fail@plt+0x16ed8>
   28a18:	b	28a1c <__assert_fail@plt+0x17588>
   28a1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   28a20:	ldr	r1, [fp, #-8]
   28a24:	str	r0, [r1, #28]
   28a28:	ldr	r0, [fp, #-20]	; 0xffffffec
   28a2c:	ldr	r1, [fp, #-8]
   28a30:	str	r0, [r1, #32]
   28a34:	movw	r0, #0
   28a38:	str	r0, [fp, #-4]
   28a3c:	ldr	r0, [fp, #-4]
   28a40:	mov	sp, fp
   28a44:	pop	{fp, pc}
   28a48:	push	{fp, lr}
   28a4c:	mov	fp, sp
   28a50:	sub	sp, sp, #24
   28a54:	str	r0, [fp, #-4]
   28a58:	ldr	r0, [fp, #-4]
   28a5c:	ldr	r0, [r0, #36]	; 0x24
   28a60:	ldr	r1, [fp, #-4]
   28a64:	ldr	r1, [r1, #48]	; 0x30
   28a68:	cmp	r0, r1
   28a6c:	ble	28a80 <__assert_fail@plt+0x175ec>
   28a70:	ldr	r0, [fp, #-4]
   28a74:	ldr	r0, [r0, #48]	; 0x30
   28a78:	str	r0, [sp, #4]
   28a7c:	b	28a8c <__assert_fail@plt+0x175f8>
   28a80:	ldr	r0, [fp, #-4]
   28a84:	ldr	r0, [r0, #36]	; 0x24
   28a88:	str	r0, [sp, #4]
   28a8c:	ldr	r0, [sp, #4]
   28a90:	str	r0, [sp, #12]
   28a94:	ldr	r0, [fp, #-4]
   28a98:	ldr	r0, [r0, #28]
   28a9c:	str	r0, [fp, #-8]
   28aa0:	ldr	r0, [fp, #-8]
   28aa4:	ldr	r1, [sp, #12]
   28aa8:	cmp	r0, r1
   28aac:	bge	28b2c <__assert_fail@plt+0x17698>
   28ab0:	ldr	r0, [fp, #-4]
   28ab4:	ldr	r0, [r0]
   28ab8:	ldr	r1, [fp, #-4]
   28abc:	ldr	r1, [r1, #24]
   28ac0:	ldr	r2, [fp, #-8]
   28ac4:	add	r1, r1, r2
   28ac8:	add	r0, r0, r1
   28acc:	ldrb	r0, [r0]
   28ad0:	str	r0, [sp, #8]
   28ad4:	ldr	r0, [fp, #-4]
   28ad8:	ldr	r0, [r0, #64]	; 0x40
   28adc:	movw	r1, #0
   28ae0:	cmp	r0, r1
   28ae4:	beq	28b00 <__assert_fail@plt+0x1766c>
   28ae8:	ldr	r0, [fp, #-4]
   28aec:	ldr	r0, [r0, #64]	; 0x40
   28af0:	ldr	r1, [sp, #8]
   28af4:	add	r0, r0, r1
   28af8:	ldrb	r0, [r0]
   28afc:	str	r0, [sp, #8]
   28b00:	ldr	r0, [sp, #8]
   28b04:	bl	11428 <toupper@plt>
   28b08:	ldr	lr, [fp, #-4]
   28b0c:	ldr	lr, [lr, #4]
   28b10:	ldr	r1, [fp, #-8]
   28b14:	add	r1, lr, r1
   28b18:	strb	r0, [r1]
   28b1c:	ldr	r0, [fp, #-8]
   28b20:	add	r0, r0, #1
   28b24:	str	r0, [fp, #-8]
   28b28:	b	28aa0 <__assert_fail@plt+0x1760c>
   28b2c:	ldr	r0, [fp, #-8]
   28b30:	ldr	r1, [fp, #-4]
   28b34:	str	r0, [r1, #28]
   28b38:	ldr	r0, [fp, #-8]
   28b3c:	ldr	r1, [fp, #-4]
   28b40:	str	r0, [r1, #32]
   28b44:	mov	sp, fp
   28b48:	pop	{fp, pc}
   28b4c:	push	{fp, lr}
   28b50:	mov	fp, sp
   28b54:	sub	sp, sp, #128	; 0x80
   28b58:	str	r0, [fp, #-4]
   28b5c:	ldr	r0, [fp, #-4]
   28b60:	ldr	r0, [r0, #36]	; 0x24
   28b64:	ldr	r1, [fp, #-4]
   28b68:	ldr	r1, [r1, #48]	; 0x30
   28b6c:	cmp	r0, r1
   28b70:	ble	28b84 <__assert_fail@plt+0x176f0>
   28b74:	ldr	r0, [fp, #-4]
   28b78:	ldr	r0, [r0, #48]	; 0x30
   28b7c:	str	r0, [sp, #16]
   28b80:	b	28b90 <__assert_fail@plt+0x176fc>
   28b84:	ldr	r0, [fp, #-4]
   28b88:	ldr	r0, [r0, #36]	; 0x24
   28b8c:	str	r0, [sp, #16]
   28b90:	ldr	r0, [sp, #16]
   28b94:	str	r0, [sp, #44]	; 0x2c
   28b98:	ldr	r0, [fp, #-4]
   28b9c:	ldr	r0, [r0, #28]
   28ba0:	str	r0, [sp, #48]	; 0x30
   28ba4:	ldr	r0, [sp, #48]	; 0x30
   28ba8:	ldr	r1, [sp, #44]	; 0x2c
   28bac:	cmp	r0, r1
   28bb0:	bge	28e6c <__assert_fail@plt+0x179d8>
   28bb4:	ldr	r0, [sp, #44]	; 0x2c
   28bb8:	ldr	r1, [sp, #48]	; 0x30
   28bbc:	sub	r0, r0, r1
   28bc0:	str	r0, [sp, #40]	; 0x28
   28bc4:	ldr	r0, [fp, #-4]
   28bc8:	ldr	r1, [r0, #16]
   28bcc:	str	r1, [sp, #52]	; 0x34
   28bd0:	ldr	r0, [r0, #20]
   28bd4:	str	r0, [sp, #56]	; 0x38
   28bd8:	ldr	r0, [fp, #-4]
   28bdc:	ldr	r0, [r0, #64]	; 0x40
   28be0:	movw	r1, #0
   28be4:	cmp	r0, r1
   28be8:	beq	28cbc <__assert_fail@plt+0x17828>
   28bec:	movw	r0, #0
   28bf0:	str	r0, [sp, #24]
   28bf4:	ldr	r0, [sp, #24]
   28bf8:	ldr	r1, [fp, #-4]
   28bfc:	ldr	r1, [r1, #80]	; 0x50
   28c00:	cmp	r0, r1
   28c04:	movw	r0, #0
   28c08:	str	r0, [sp, #12]
   28c0c:	bge	28c28 <__assert_fail@plt+0x17794>
   28c10:	ldr	r0, [sp, #24]
   28c14:	ldr	r1, [sp, #40]	; 0x28
   28c18:	cmp	r0, r1
   28c1c:	movw	r0, #0
   28c20:	movlt	r0, #1
   28c24:	str	r0, [sp, #12]
   28c28:	ldr	r0, [sp, #12]
   28c2c:	tst	r0, #1
   28c30:	beq	28cb0 <__assert_fail@plt+0x1781c>
   28c34:	ldr	r0, [fp, #-4]
   28c38:	ldr	r0, [r0]
   28c3c:	ldr	r1, [fp, #-4]
   28c40:	ldr	r1, [r1, #24]
   28c44:	ldr	r2, [sp, #48]	; 0x30
   28c48:	add	r1, r1, r2
   28c4c:	ldr	r2, [sp, #24]
   28c50:	add	r1, r1, r2
   28c54:	add	r0, r0, r1
   28c58:	ldrb	r0, [r0]
   28c5c:	str	r0, [sp, #20]
   28c60:	ldr	r0, [fp, #-4]
   28c64:	ldr	r0, [r0, #64]	; 0x40
   28c68:	ldr	r1, [sp, #20]
   28c6c:	add	r0, r0, r1
   28c70:	ldrb	r0, [r0]
   28c74:	ldr	r1, [fp, #-4]
   28c78:	ldr	r1, [r1, #4]
   28c7c:	ldr	r2, [sp, #48]	; 0x30
   28c80:	ldr	r3, [sp, #24]
   28c84:	add	r2, r2, r3
   28c88:	add	r1, r1, r2
   28c8c:	strb	r0, [r1]
   28c90:	ldr	r1, [sp, #24]
   28c94:	add	r2, sp, #60	; 0x3c
   28c98:	add	r1, r2, r1
   28c9c:	strb	r0, [r1]
   28ca0:	ldr	r0, [sp, #24]
   28ca4:	add	r0, r0, #1
   28ca8:	str	r0, [sp, #24]
   28cac:	b	28bf4 <__assert_fail@plt+0x17760>
   28cb0:	add	r0, sp, #60	; 0x3c
   28cb4:	str	r0, [sp, #28]
   28cb8:	b	28cdc <__assert_fail@plt+0x17848>
   28cbc:	ldr	r0, [fp, #-4]
   28cc0:	ldr	r0, [r0]
   28cc4:	ldr	r1, [fp, #-4]
   28cc8:	ldr	r1, [r1, #24]
   28ccc:	add	r0, r0, r1
   28cd0:	ldr	r1, [sp, #48]	; 0x30
   28cd4:	add	r0, r0, r1
   28cd8:	str	r0, [sp, #28]
   28cdc:	ldr	r1, [sp, #28]
   28ce0:	ldr	r2, [sp, #40]	; 0x28
   28ce4:	ldr	r0, [fp, #-4]
   28ce8:	add	r3, r0, #16
   28cec:	add	r0, sp, #32
   28cf0:	bl	4193c <__assert_fail@plt+0x304a8>
   28cf4:	str	r0, [sp, #36]	; 0x24
   28cf8:	ldr	r0, [sp, #36]	; 0x24
   28cfc:	cmn	r0, #1
   28d00:	movw	r0, #1
   28d04:	str	r0, [sp, #8]
   28d08:	beq	28d5c <__assert_fail@plt+0x178c8>
   28d0c:	ldr	r0, [sp, #36]	; 0x24
   28d10:	cmp	r0, #0
   28d14:	movw	r0, #1
   28d18:	str	r0, [sp, #8]
   28d1c:	beq	28d5c <__assert_fail@plt+0x178c8>
   28d20:	ldr	r0, [sp, #36]	; 0x24
   28d24:	cmn	r0, #2
   28d28:	movw	r0, #0
   28d2c:	str	r0, [sp, #4]
   28d30:	bne	28d54 <__assert_fail@plt+0x178c0>
   28d34:	ldr	r0, [fp, #-4]
   28d38:	ldr	r0, [r0, #36]	; 0x24
   28d3c:	ldr	r1, [fp, #-4]
   28d40:	ldr	r1, [r1, #48]	; 0x30
   28d44:	cmp	r0, r1
   28d48:	movw	r0, #0
   28d4c:	movge	r0, #1
   28d50:	str	r0, [sp, #4]
   28d54:	ldr	r0, [sp, #4]
   28d58:	str	r0, [sp, #8]
   28d5c:	ldr	r0, [sp, #8]
   28d60:	tst	r0, #1
   28d64:	beq	28dd8 <__assert_fail@plt+0x17944>
   28d68:	movw	r0, #1
   28d6c:	str	r0, [sp, #36]	; 0x24
   28d70:	ldr	r0, [fp, #-4]
   28d74:	ldr	r0, [r0]
   28d78:	ldr	r1, [fp, #-4]
   28d7c:	ldr	r1, [r1, #24]
   28d80:	ldr	r2, [sp, #48]	; 0x30
   28d84:	add	r1, r1, r2
   28d88:	add	r0, r0, r1
   28d8c:	ldrb	r0, [r0]
   28d90:	str	r0, [sp, #32]
   28d94:	ldr	r0, [fp, #-4]
   28d98:	ldr	r0, [r0, #64]	; 0x40
   28d9c:	movw	r1, #0
   28da0:	cmp	r0, r1
   28da4:	beq	28dc0 <__assert_fail@plt+0x1792c>
   28da8:	ldr	r0, [fp, #-4]
   28dac:	ldr	r0, [r0, #64]	; 0x40
   28db0:	ldr	r1, [sp, #32]
   28db4:	add	r0, r0, r1
   28db8:	ldrb	r0, [r0]
   28dbc:	str	r0, [sp, #32]
   28dc0:	ldr	r0, [fp, #-4]
   28dc4:	ldr	r1, [sp, #52]	; 0x34
   28dc8:	str	r1, [r0, #16]
   28dcc:	ldr	r1, [sp, #56]	; 0x38
   28dd0:	str	r1, [r0, #20]
   28dd4:	b	28e00 <__assert_fail@plt+0x1796c>
   28dd8:	ldr	r0, [sp, #36]	; 0x24
   28ddc:	cmn	r0, #2
   28de0:	bne	28dfc <__assert_fail@plt+0x17968>
   28de4:	ldr	r0, [fp, #-4]
   28de8:	ldr	r1, [sp, #52]	; 0x34
   28dec:	str	r1, [r0, #16]
   28df0:	ldr	r1, [sp, #56]	; 0x38
   28df4:	str	r1, [r0, #20]
   28df8:	b	28e6c <__assert_fail@plt+0x179d8>
   28dfc:	b	28e00 <__assert_fail@plt+0x1796c>
   28e00:	ldr	r0, [sp, #32]
   28e04:	ldr	r1, [fp, #-4]
   28e08:	ldr	r1, [r1, #8]
   28e0c:	ldr	r2, [sp, #48]	; 0x30
   28e10:	add	r3, r2, #1
   28e14:	str	r3, [sp, #48]	; 0x30
   28e18:	add	r1, r1, r2, lsl #2
   28e1c:	str	r0, [r1]
   28e20:	ldr	r0, [sp, #48]	; 0x30
   28e24:	ldr	r1, [sp, #36]	; 0x24
   28e28:	add	r0, r0, r1
   28e2c:	sub	r0, r0, #1
   28e30:	str	r0, [sp, #40]	; 0x28
   28e34:	ldr	r0, [sp, #48]	; 0x30
   28e38:	ldr	r1, [sp, #40]	; 0x28
   28e3c:	cmp	r0, r1
   28e40:	bge	28e68 <__assert_fail@plt+0x179d4>
   28e44:	ldr	r0, [fp, #-4]
   28e48:	ldr	r0, [r0, #8]
   28e4c:	ldr	r1, [sp, #48]	; 0x30
   28e50:	add	r2, r1, #1
   28e54:	str	r2, [sp, #48]	; 0x30
   28e58:	add	r0, r0, r1, lsl #2
   28e5c:	mvn	r1, #0
   28e60:	str	r1, [r0]
   28e64:	b	28e34 <__assert_fail@plt+0x179a0>
   28e68:	b	28ba4 <__assert_fail@plt+0x17710>
   28e6c:	ldr	r0, [sp, #48]	; 0x30
   28e70:	ldr	r1, [fp, #-4]
   28e74:	str	r0, [r1, #28]
   28e78:	ldr	r0, [sp, #48]	; 0x30
   28e7c:	ldr	r1, [fp, #-4]
   28e80:	str	r0, [r1, #32]
   28e84:	mov	sp, fp
   28e88:	pop	{fp, pc}
   28e8c:	sub	sp, sp, #20
   28e90:	str	r0, [sp, #16]
   28e94:	ldr	r0, [sp, #16]
   28e98:	ldr	r0, [r0, #36]	; 0x24
   28e9c:	ldr	r1, [sp, #16]
   28ea0:	ldr	r1, [r1, #48]	; 0x30
   28ea4:	cmp	r0, r1
   28ea8:	ble	28ebc <__assert_fail@plt+0x17a28>
   28eac:	ldr	r0, [sp, #16]
   28eb0:	ldr	r0, [r0, #48]	; 0x30
   28eb4:	str	r0, [sp]
   28eb8:	b	28ec8 <__assert_fail@plt+0x17a34>
   28ebc:	ldr	r0, [sp, #16]
   28ec0:	ldr	r0, [r0, #36]	; 0x24
   28ec4:	str	r0, [sp]
   28ec8:	ldr	r0, [sp]
   28ecc:	str	r0, [sp, #8]
   28ed0:	ldr	r0, [sp, #16]
   28ed4:	ldr	r0, [r0, #28]
   28ed8:	str	r0, [sp, #12]
   28edc:	ldr	r0, [sp, #12]
   28ee0:	ldr	r1, [sp, #8]
   28ee4:	cmp	r0, r1
   28ee8:	bge	28f48 <__assert_fail@plt+0x17ab4>
   28eec:	ldr	r0, [sp, #16]
   28ef0:	ldr	r0, [r0]
   28ef4:	ldr	r1, [sp, #16]
   28ef8:	ldr	r1, [r1, #24]
   28efc:	ldr	r2, [sp, #12]
   28f00:	add	r1, r1, r2
   28f04:	add	r0, r0, r1
   28f08:	ldrb	r0, [r0]
   28f0c:	str	r0, [sp, #4]
   28f10:	ldr	r0, [sp, #16]
   28f14:	ldr	r0, [r0, #64]	; 0x40
   28f18:	ldr	r1, [sp, #4]
   28f1c:	add	r0, r0, r1
   28f20:	ldrb	r0, [r0]
   28f24:	ldr	r1, [sp, #16]
   28f28:	ldr	r1, [r1, #4]
   28f2c:	ldr	r2, [sp, #12]
   28f30:	add	r1, r1, r2
   28f34:	strb	r0, [r1]
   28f38:	ldr	r0, [sp, #12]
   28f3c:	add	r0, r0, #1
   28f40:	str	r0, [sp, #12]
   28f44:	b	28edc <__assert_fail@plt+0x17a48>
   28f48:	ldr	r0, [sp, #12]
   28f4c:	ldr	r1, [sp, #16]
   28f50:	str	r0, [r1, #28]
   28f54:	ldr	r0, [sp, #12]
   28f58:	ldr	r1, [sp, #16]
   28f5c:	str	r0, [r1, #32]
   28f60:	add	sp, sp, #20
   28f64:	bx	lr
   28f68:	push	{fp, lr}
   28f6c:	mov	fp, sp
   28f70:	sub	sp, sp, #16
   28f74:	str	r0, [fp, #-4]
   28f78:	str	r1, [sp, #8]
   28f7c:	str	r2, [sp, #4]
   28f80:	ldr	r0, [fp, #-4]
   28f84:	ldr	r1, [sp, #8]
   28f88:	ldr	r2, [sp, #4]
   28f8c:	bl	292dc <__assert_fail@plt+0x17e48>
   28f90:	ldr	r1, [sp, #8]
   28f94:	ldr	r2, [r1, #40]	; 0x28
   28f98:	add	r0, r2, r0
   28f9c:	str	r0, [r1, #40]	; 0x28
   28fa0:	mov	sp, fp
   28fa4:	pop	{fp, pc}
   28fa8:	push	{r4, r5, fp, lr}
   28fac:	add	fp, sp, #8
   28fb0:	sub	sp, sp, #72	; 0x48
   28fb4:	ldr	ip, [fp, #12]
   28fb8:	ldr	lr, [fp, #8]
   28fbc:	str	r0, [fp, #-16]
   28fc0:	str	r1, [fp, #-20]	; 0xffffffec
   28fc4:	str	r2, [fp, #-24]	; 0xffffffe8
   28fc8:	str	r3, [fp, #-28]	; 0xffffffe4
   28fcc:	ldr	r0, [fp, #-20]	; 0xffffffec
   28fd0:	ldr	r0, [r0]
   28fd4:	str	r0, [fp, #-32]	; 0xffffffe0
   28fd8:	movw	r0, #0
   28fdc:	str	r0, [sp, #40]	; 0x28
   28fe0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   28fe4:	ldr	r0, [r0, #84]	; 0x54
   28fe8:	str	r0, [sp, #36]	; 0x24
   28fec:	ldr	r0, [fp, #-16]
   28ff0:	ldr	r1, [fp, #-20]	; 0xffffffec
   28ff4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   28ff8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   28ffc:	ldr	r4, [fp, #8]
   29000:	ldr	r5, [fp, #12]
   29004:	str	r4, [sp]
   29008:	str	r5, [sp, #4]
   2900c:	str	lr, [sp, #28]
   29010:	str	ip, [sp, #24]
   29014:	bl	2a370 <__assert_fail@plt+0x18edc>
   29018:	str	r0, [fp, #-36]	; 0xffffffdc
   2901c:	ldr	r0, [fp, #12]
   29020:	ldr	r0, [r0]
   29024:	cmp	r0, #0
   29028:	movw	r0, #0
   2902c:	str	r0, [sp, #20]
   29030:	beq	2904c <__assert_fail@plt+0x17bb8>
   29034:	ldr	r0, [fp, #-36]	; 0xffffffdc
   29038:	movw	r1, #0
   2903c:	cmp	r0, r1
   29040:	movw	r0, #0
   29044:	moveq	r0, #1
   29048:	str	r0, [sp, #20]
   2904c:	ldr	r0, [sp, #20]
   29050:	tst	r0, #1
   29054:	beq	29064 <__assert_fail@plt+0x17bd0>
   29058:	movw	r0, #0
   2905c:	str	r0, [fp, #-12]
   29060:	b	291f4 <__assert_fail@plt+0x17d60>
   29064:	b	29068 <__assert_fail@plt+0x17bd4>
   29068:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2906c:	ldr	r0, [r0, #4]
   29070:	and	r0, r0, #255	; 0xff
   29074:	cmp	r0, #10
   29078:	bne	291ec <__assert_fail@plt+0x17d58>
   2907c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   29080:	ldr	r1, [fp, #-16]
   29084:	ldr	r2, [fp, #-28]	; 0xffffffe4
   29088:	orr	r2, r2, #8388608	; 0x800000
   2908c:	bl	28f68 <__assert_fail@plt+0x17ad4>
   29090:	ldr	r0, [fp, #-24]	; 0xffffffe8
   29094:	ldr	r0, [r0, #4]
   29098:	and	r0, r0, #255	; 0xff
   2909c:	cmp	r0, #10
   290a0:	beq	291a0 <__assert_fail@plt+0x17d0c>
   290a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   290a8:	ldr	r0, [r0, #4]
   290ac:	and	r0, r0, #255	; 0xff
   290b0:	cmp	r0, #2
   290b4:	beq	291a0 <__assert_fail@plt+0x17d0c>
   290b8:	ldr	r0, [fp, #8]
   290bc:	cmp	r0, #0
   290c0:	beq	290d8 <__assert_fail@plt+0x17c44>
   290c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   290c8:	ldr	r0, [r0, #4]
   290cc:	and	r0, r0, #255	; 0xff
   290d0:	cmp	r0, #9
   290d4:	beq	291a0 <__assert_fail@plt+0x17d0c>
   290d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   290dc:	ldr	r0, [r0, #84]	; 0x54
   290e0:	str	r0, [sp, #32]
   290e4:	ldr	r0, [sp, #36]	; 0x24
   290e8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   290ec:	str	r0, [r1, #84]	; 0x54
   290f0:	ldr	r0, [fp, #-16]
   290f4:	ldr	r1, [fp, #-20]	; 0xffffffec
   290f8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   290fc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   29100:	ldr	ip, [fp, #8]
   29104:	ldr	lr, [fp, #12]
   29108:	str	ip, [sp]
   2910c:	str	lr, [sp, #4]
   29110:	bl	2a370 <__assert_fail@plt+0x18edc>
   29114:	str	r0, [sp, #40]	; 0x28
   29118:	ldr	r0, [fp, #12]
   2911c:	ldr	r0, [r0]
   29120:	cmp	r0, #0
   29124:	movw	r0, #0
   29128:	str	r0, [sp, #16]
   2912c:	beq	29148 <__assert_fail@plt+0x17cb4>
   29130:	ldr	r0, [sp, #40]	; 0x28
   29134:	movw	r1, #0
   29138:	cmp	r0, r1
   2913c:	movw	r0, #0
   29140:	moveq	r0, #1
   29144:	str	r0, [sp, #16]
   29148:	ldr	r0, [sp, #16]
   2914c:	tst	r0, #1
   29150:	beq	29188 <__assert_fail@plt+0x17cf4>
   29154:	ldr	r0, [fp, #-36]	; 0xffffffdc
   29158:	movw	r1, #0
   2915c:	cmp	r0, r1
   29160:	beq	2917c <__assert_fail@plt+0x17ce8>
   29164:	ldr	r0, [fp, #-36]	; 0xffffffdc
   29168:	movw	r1, #42868	; 0xa774
   2916c:	movt	r1, #2
   29170:	movw	r2, #0
   29174:	bl	2a604 <__assert_fail@plt+0x19170>
   29178:	str	r0, [sp, #12]
   2917c:	movw	r0, #0
   29180:	str	r0, [fp, #-12]
   29184:	b	291f4 <__assert_fail@plt+0x17d60>
   29188:	ldr	r0, [sp, #32]
   2918c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   29190:	ldr	r2, [r1, #84]	; 0x54
   29194:	orr	r0, r2, r0
   29198:	str	r0, [r1, #84]	; 0x54
   2919c:	b	291a8 <__assert_fail@plt+0x17d14>
   291a0:	movw	r0, #0
   291a4:	str	r0, [sp, #40]	; 0x28
   291a8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   291ac:	ldr	r1, [fp, #-36]	; 0xffffffdc
   291b0:	ldr	r2, [sp, #40]	; 0x28
   291b4:	movw	r3, #10
   291b8:	bl	29200 <__assert_fail@plt+0x17d6c>
   291bc:	str	r0, [fp, #-36]	; 0xffffffdc
   291c0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   291c4:	movw	r1, #0
   291c8:	cmp	r0, r1
   291cc:	bne	291e8 <__assert_fail@plt+0x17d54>
   291d0:	ldr	r0, [fp, #12]
   291d4:	movw	r1, #12
   291d8:	str	r1, [r0]
   291dc:	movw	r0, #0
   291e0:	str	r0, [fp, #-12]
   291e4:	b	291f4 <__assert_fail@plt+0x17d60>
   291e8:	b	29068 <__assert_fail@plt+0x17bd4>
   291ec:	ldr	r0, [fp, #-36]	; 0xffffffdc
   291f0:	str	r0, [fp, #-12]
   291f4:	ldr	r0, [fp, #-12]
   291f8:	sub	sp, fp, #8
   291fc:	pop	{r4, r5, fp, pc}
   29200:	push	{fp, lr}
   29204:	mov	fp, sp
   29208:	sub	sp, sp, #32
   2920c:	add	ip, sp, #8
   29210:	ldr	lr, [pc, #192]	; 292d8 <__assert_fail@plt+0x17e44>
   29214:	str	r0, [fp, #-4]
   29218:	str	r1, [fp, #-8]
   2921c:	str	r2, [fp, #-12]
   29220:	str	r3, [sp, #16]
   29224:	mov	r0, ip
   29228:	movw	r1, #0
   2922c:	and	r1, r1, #255	; 0xff
   29230:	movw	r2, #4
   29234:	str	lr, [sp, #4]
   29238:	str	ip, [sp]
   2923c:	bl	113d4 <memset@plt>
   29240:	ldr	r0, [sp, #16]
   29244:	ldr	r1, [sp, #12]
   29248:	and	r0, r0, #255	; 0xff
   2924c:	mvn	r2, #255	; 0xff
   29250:	and	r1, r1, r2
   29254:	orr	r0, r1, r0
   29258:	str	r0, [sp, #12]
   2925c:	ldr	r0, [sp, #12]
   29260:	ldr	r1, [sp, #4]
   29264:	and	r0, r0, r1
   29268:	str	r0, [sp, #12]
   2926c:	ldr	r0, [sp, #12]
   29270:	mvn	r2, #262144	; 0x40000
   29274:	and	r0, r0, r2
   29278:	str	r0, [sp, #12]
   2927c:	ldr	r0, [sp, #12]
   29280:	mvn	r2, #524288	; 0x80000
   29284:	and	r0, r0, r2
   29288:	str	r0, [sp, #12]
   2928c:	ldr	r0, [sp, #12]
   29290:	mvn	r2, #1048576	; 0x100000
   29294:	and	r0, r0, r2
   29298:	str	r0, [sp, #12]
   2929c:	ldr	r0, [sp, #12]
   292a0:	mvn	r2, #2097152	; 0x200000
   292a4:	and	r0, r0, r2
   292a8:	str	r0, [sp, #12]
   292ac:	ldr	r0, [sp, #12]
   292b0:	mvn	r2, #4194304	; 0x400000
   292b4:	and	r0, r0, r2
   292b8:	str	r0, [sp, #12]
   292bc:	ldr	r0, [fp, #-4]
   292c0:	ldr	r1, [fp, #-8]
   292c4:	ldr	r2, [fp, #-12]
   292c8:	ldr	r3, [sp]
   292cc:	bl	2b290 <__assert_fail@plt+0x19dfc>
   292d0:	mov	sp, fp
   292d4:	pop	{fp, pc}
   292d8:			; <UNDEFINED> instruction: 0xfffc00ff
   292dc:	push	{fp, lr}
   292e0:	mov	fp, sp
   292e4:	sub	sp, sp, #80	; 0x50
   292e8:	str	r0, [fp, #-8]
   292ec:	str	r1, [fp, #-12]
   292f0:	str	r2, [fp, #-16]
   292f4:	ldr	r0, [fp, #-12]
   292f8:	ldr	r0, [r0, #56]	; 0x38
   292fc:	ldr	r1, [fp, #-12]
   29300:	ldr	r1, [r1, #40]	; 0x28
   29304:	cmp	r0, r1
   29308:	bgt	29330 <__assert_fail@plt+0x17e9c>
   2930c:	ldr	r0, [fp, #-8]
   29310:	ldr	r1, [r0, #4]
   29314:	mvn	r2, #255	; 0xff
   29318:	and	r1, r1, r2
   2931c:	orr	r1, r1, #2
   29320:	str	r1, [r0, #4]
   29324:	movw	r0, #0
   29328:	str	r0, [fp, #-4]
   2932c:	b	2a144 <__assert_fail@plt+0x18cb0>
   29330:	ldr	r0, [fp, #-12]
   29334:	ldr	r0, [r0, #4]
   29338:	ldr	r1, [fp, #-12]
   2933c:	ldr	r1, [r1, #40]	; 0x28
   29340:	add	r1, r1, #0
   29344:	add	r0, r0, r1
   29348:	ldrb	r0, [r0]
   2934c:	strb	r0, [fp, #-17]	; 0xffffffef
   29350:	ldrb	r0, [fp, #-17]	; 0xffffffef
   29354:	ldr	r1, [fp, #-8]
   29358:	strb	r0, [r1]
   2935c:	ldr	r0, [fp, #-8]
   29360:	ldr	r1, [r0, #4]
   29364:	mvn	r2, #4194304	; 0x400000
   29368:	and	r1, r1, r2
   2936c:	str	r1, [r0, #4]
   29370:	ldr	r0, [fp, #-8]
   29374:	ldr	r1, [r0, #4]
   29378:	mvn	r2, #2097152	; 0x200000
   2937c:	and	r1, r1, r2
   29380:	str	r1, [r0, #4]
   29384:	ldr	r0, [fp, #-12]
   29388:	ldr	r0, [r0, #80]	; 0x50
   2938c:	cmp	r0, #1
   29390:	ble	29404 <__assert_fail@plt+0x17f70>
   29394:	ldr	r0, [fp, #-12]
   29398:	ldr	r0, [r0, #40]	; 0x28
   2939c:	ldr	r1, [fp, #-12]
   293a0:	ldr	r1, [r1, #28]
   293a4:	cmp	r0, r1
   293a8:	beq	29404 <__assert_fail@plt+0x17f70>
   293ac:	ldr	r0, [fp, #-12]
   293b0:	ldr	r1, [r0, #8]
   293b4:	ldr	r0, [r0, #40]	; 0x28
   293b8:	add	r0, r1, r0, lsl #2
   293bc:	ldr	r0, [r0]
   293c0:	cmn	r0, #1
   293c4:	bne	29404 <__assert_fail@plt+0x17f70>
   293c8:	ldr	r0, [fp, #-8]
   293cc:	ldr	r1, [r0, #4]
   293d0:	mvn	r2, #255	; 0xff
   293d4:	and	r1, r1, r2
   293d8:	orr	r1, r1, #1
   293dc:	str	r1, [r0, #4]
   293e0:	ldr	r0, [fp, #-8]
   293e4:	ldr	r1, [r0, #4]
   293e8:	mvn	r2, #2097152	; 0x200000
   293ec:	and	r1, r1, r2
   293f0:	orr	r1, r1, #2097152	; 0x200000
   293f4:	str	r1, [r0, #4]
   293f8:	movw	r0, #1
   293fc:	str	r0, [fp, #-4]
   29400:	b	2a144 <__assert_fail@plt+0x18cb0>
   29404:	ldrb	r0, [fp, #-17]	; 0xffffffef
   29408:	cmp	r0, #92	; 0x5c
   2940c:	bne	29ae0 <__assert_fail@plt+0x1864c>
   29410:	ldr	r0, [fp, #-12]
   29414:	ldr	r0, [r0, #40]	; 0x28
   29418:	add	r0, r0, #1
   2941c:	ldr	r1, [fp, #-12]
   29420:	ldr	r1, [r1, #48]	; 0x30
   29424:	cmp	r0, r1
   29428:	blt	29450 <__assert_fail@plt+0x17fbc>
   2942c:	ldr	r0, [fp, #-8]
   29430:	ldr	r1, [r0, #4]
   29434:	mvn	r2, #255	; 0xff
   29438:	and	r1, r1, r2
   2943c:	orr	r1, r1, #36	; 0x24
   29440:	str	r1, [r0, #4]
   29444:	movw	r0, #1
   29448:	str	r0, [fp, #-4]
   2944c:	b	2a144 <__assert_fail@plt+0x18cb0>
   29450:	ldr	r0, [fp, #-12]
   29454:	movw	r1, #1
   29458:	bl	2a154 <__assert_fail@plt+0x18cc0>
   2945c:	strb	r0, [fp, #-18]	; 0xffffffee
   29460:	ldrb	r0, [fp, #-18]	; 0xffffffee
   29464:	ldr	r1, [fp, #-8]
   29468:	strb	r0, [r1]
   2946c:	ldr	r0, [fp, #-8]
   29470:	ldr	r1, [r0, #4]
   29474:	mvn	lr, #255	; 0xff
   29478:	and	r1, r1, lr
   2947c:	orr	r1, r1, #1
   29480:	str	r1, [r0, #4]
   29484:	ldr	r0, [fp, #-12]
   29488:	ldr	r0, [r0, #80]	; 0x50
   2948c:	cmp	r0, #1
   29490:	ble	29514 <__assert_fail@plt+0x18080>
   29494:	ldr	r0, [fp, #-12]
   29498:	ldr	r1, [fp, #-12]
   2949c:	ldr	r1, [r1, #40]	; 0x28
   294a0:	add	r1, r1, #1
   294a4:	bl	2a314 <__assert_fail@plt+0x18e80>
   294a8:	str	r0, [fp, #-24]	; 0xffffffe8
   294ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   294b0:	bl	113bc <iswalnum@plt>
   294b4:	cmp	r0, #0
   294b8:	movw	r0, #1
   294bc:	str	r0, [sp, #36]	; 0x24
   294c0:	bne	294d8 <__assert_fail@plt+0x18044>
   294c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   294c8:	cmp	r0, #95	; 0x5f
   294cc:	movw	r0, #0
   294d0:	moveq	r0, #1
   294d4:	str	r0, [sp, #36]	; 0x24
   294d8:	ldr	r0, [sp, #36]	; 0x24
   294dc:	and	r0, r0, #1
   294e0:	cmp	r0, #0
   294e4:	movw	r0, #0
   294e8:	movne	r0, #1
   294ec:	and	r0, r0, #1
   294f0:	ldr	r1, [fp, #-8]
   294f4:	ldr	r2, [r1, #4]
   294f8:	and	r0, r0, #1
   294fc:	lsl	r0, r0, #22
   29500:	mvn	r3, #4194304	; 0x400000
   29504:	and	r2, r2, r3
   29508:	orr	r0, r2, r0
   2950c:	str	r0, [r1, #4]
   29510:	b	29590 <__assert_fail@plt+0x180fc>
   29514:	bl	11368 <__ctype_b_loc@plt>
   29518:	ldr	r0, [r0]
   2951c:	ldrb	lr, [fp, #-18]	; 0xffffffee
   29520:	mov	r1, lr
   29524:	add	r0, r0, lr, lsl #1
   29528:	ldrh	r0, [r0]
   2952c:	and	r0, r0, #8
   29530:	cmp	r0, #0
   29534:	movw	r0, #1
   29538:	str	r1, [sp, #32]
   2953c:	str	r0, [sp, #28]
   29540:	bne	29558 <__assert_fail@plt+0x180c4>
   29544:	ldrb	r0, [fp, #-18]	; 0xffffffee
   29548:	cmp	r0, #95	; 0x5f
   2954c:	movw	r0, #0
   29550:	moveq	r0, #1
   29554:	str	r0, [sp, #28]
   29558:	ldr	r0, [sp, #28]
   2955c:	and	r0, r0, #1
   29560:	cmp	r0, #0
   29564:	movw	r0, #0
   29568:	movne	r0, #1
   2956c:	and	r0, r0, #1
   29570:	ldr	r1, [fp, #-8]
   29574:	ldr	r2, [r1, #4]
   29578:	and	r0, r0, #1
   2957c:	lsl	r0, r0, #22
   29580:	mvn	r3, #4194304	; 0x400000
   29584:	and	r2, r2, r3
   29588:	orr	r0, r2, r0
   2958c:	str	r0, [r1, #4]
   29590:	ldrb	r0, [fp, #-18]	; 0xffffffee
   29594:	sub	r0, r0, #39	; 0x27
   29598:	cmp	r0, #86	; 0x56
   2959c:	str	r0, [sp, #24]
   295a0:	bhi	29ad0 <__assert_fail@plt+0x1863c>
   295a4:	add	r0, pc, #8
   295a8:	ldr	r1, [sp, #24]
   295ac:	ldr	r0, [r0, r1, lsl #2]
   295b0:	mov	pc, r0
   295b4:	andeq	r9, r2, r0, asr r9
   295b8:	andeq	r9, r2, r8, lsl #19
   295bc:			; <UNDEFINED> instruction: 0x000299b4
   295c0:	ldrdeq	r9, [r2], -r0
   295c4:	andeq	r9, r2, r0, ror #19
   295c8:	ldrdeq	r9, [r2], -r0
   295cc:	ldrdeq	r9, [r2], -r0
   295d0:	ldrdeq	r9, [r2], -r0
   295d4:	ldrdeq	r9, [r2], -r0
   295d8:	ldrdeq	r9, [r2], -r0
   295dc:	andeq	r9, r2, ip, asr #14
   295e0:	andeq	r9, r2, ip, asr #14
   295e4:	andeq	r9, r2, ip, asr #14
   295e8:	andeq	r9, r2, ip, asr #14
   295ec:	andeq	r9, r2, ip, asr #14
   295f0:	andeq	r9, r2, ip, asr #14
   295f4:	andeq	r9, r2, ip, asr #14
   295f8:	andeq	r9, r2, ip, asr #14
   295fc:	andeq	r9, r2, ip, asr #14
   29600:	ldrdeq	r9, [r2], -r0
   29604:	ldrdeq	r9, [r2], -r0
   29608:	andeq	r9, r2, r8, lsl #15
   2960c:	ldrdeq	r9, [r2], -r0
   29610:	andeq	r9, r2, r0, asr #15
   29614:	andeq	r9, r2, ip, lsl sl
   29618:	ldrdeq	r9, [r2], -r0
   2961c:	ldrdeq	r9, [r2], -r0
   29620:	andeq	r9, r2, r0, lsr r8
   29624:	ldrdeq	r9, [r2], -r0
   29628:	ldrdeq	r9, [r2], -r0
   2962c:	ldrdeq	r9, [r2], -r0
   29630:	ldrdeq	r9, [r2], -r0
   29634:	ldrdeq	r9, [r2], -r0
   29638:	ldrdeq	r9, [r2], -r0
   2963c:	ldrdeq	r9, [r2], -r0
   29640:	ldrdeq	r9, [r2], -r0
   29644:	ldrdeq	r9, [r2], -r0
   29648:	ldrdeq	r9, [r2], -r0
   2964c:	ldrdeq	r9, [r2], -r0
   29650:	ldrdeq	r9, [r2], -r0
   29654:	ldrdeq	r9, [r2], -r0
   29658:	ldrdeq	r9, [r2], -r0
   2965c:	ldrdeq	r9, [r2], -r0
   29660:	ldrdeq	r9, [r2], -r0
   29664:	andeq	r9, r2, ip, ror #17
   29668:	ldrdeq	r9, [r2], -r0
   2966c:	ldrdeq	r9, [r2], -r0
   29670:	ldrdeq	r9, [r2], -r0
   29674:	muleq	r2, r4, r8
   29678:	ldrdeq	r9, [r2], -r0
   2967c:	ldrdeq	r9, [r2], -r0
   29680:	ldrdeq	r9, [r2], -r0
   29684:	ldrdeq	r9, [r2], -r0
   29688:	ldrdeq	r9, [r2], -r0
   2968c:	ldrdeq	r9, [r2], -r0
   29690:	ldrdeq	r9, [r2], -r0
   29694:	ldrdeq	r9, [r2], -r0
   29698:	andeq	r9, r2, r8, lsl r9
   2969c:	ldrdeq	r9, [r2], -r0
   296a0:	strdeq	r9, [r2], -r8
   296a4:	ldrdeq	r9, [r2], -r0
   296a8:	ldrdeq	r9, [r2], -r0
   296ac:	ldrdeq	r9, [r2], -r0
   296b0:	ldrdeq	r9, [r2], -r0
   296b4:	ldrdeq	r9, [r2], -r0
   296b8:	ldrdeq	r9, [r2], -r0
   296bc:	ldrdeq	r9, [r2], -r0
   296c0:	ldrdeq	r9, [r2], -r0
   296c4:	ldrdeq	r9, [r2], -r0
   296c8:	ldrdeq	r9, [r2], -r0
   296cc:	ldrdeq	r9, [r2], -r0
   296d0:	ldrdeq	r9, [r2], -r0
   296d4:	ldrdeq	r9, [r2], -r0
   296d8:	ldrdeq	r9, [r2], -r0
   296dc:	ldrdeq	r9, [r2], -r0
   296e0:	ldrdeq	r9, [r2], -r0
   296e4:	andeq	r9, r2, r0, asr #17
   296e8:	ldrdeq	r9, [r2], -r0
   296ec:	ldrdeq	r9, [r2], -r0
   296f0:	ldrdeq	r9, [r2], -r0
   296f4:	andeq	r9, r2, r8, ror #16
   296f8:	ldrdeq	r9, [r2], -r0
   296fc:	ldrdeq	r9, [r2], -r0
   29700:	ldrdeq	r9, [r2], -r0
   29704:	andeq	r9, r2, r8, asr sl
   29708:	andeq	r9, r2, r0, lsl r7
   2970c:	muleq	r2, r4, sl
   29710:	ldr	r0, [fp, #-16]
   29714:	and	r0, r0, #1024	; 0x400
   29718:	cmp	r0, #0
   2971c:	bne	29748 <__assert_fail@plt+0x182b4>
   29720:	ldr	r0, [fp, #-16]
   29724:	and	r0, r0, #32768	; 0x8000
   29728:	cmp	r0, #0
   2972c:	bne	29748 <__assert_fail@plt+0x182b4>
   29730:	ldr	r0, [fp, #-8]
   29734:	ldr	r1, [r0, #4]
   29738:	mvn	r2, #255	; 0xff
   2973c:	and	r1, r1, r2
   29740:	orr	r1, r1, #10
   29744:	str	r1, [r0, #4]
   29748:	b	29ad4 <__assert_fail@plt+0x18640>
   2974c:	ldr	r0, [fp, #-16]
   29750:	and	r0, r0, #16384	; 0x4000
   29754:	cmp	r0, #0
   29758:	bne	29784 <__assert_fail@plt+0x182f0>
   2975c:	ldr	r0, [fp, #-8]
   29760:	ldr	r1, [r0, #4]
   29764:	mvn	r2, #255	; 0xff
   29768:	and	r1, r1, r2
   2976c:	orr	r1, r1, #4
   29770:	str	r1, [r0, #4]
   29774:	ldrb	r0, [fp, #-18]	; 0xffffffee
   29778:	sub	r0, r0, #49	; 0x31
   2977c:	ldr	r1, [fp, #-8]
   29780:	str	r0, [r1]
   29784:	b	29ad4 <__assert_fail@plt+0x18640>
   29788:	ldr	r0, [fp, #-16]
   2978c:	and	r0, r0, #524288	; 0x80000
   29790:	cmp	r0, #0
   29794:	bne	297bc <__assert_fail@plt+0x18328>
   29798:	ldr	r0, [fp, #-8]
   2979c:	ldr	r1, [r0, #4]
   297a0:	mvn	r2, #255	; 0xff
   297a4:	and	r1, r1, r2
   297a8:	orr	r1, r1, #12
   297ac:	str	r1, [r0, #4]
   297b0:	ldr	r0, [fp, #-8]
   297b4:	movw	r1, #6
   297b8:	str	r1, [r0]
   297bc:	b	29ad4 <__assert_fail@plt+0x18640>
   297c0:	ldr	r0, [fp, #-16]
   297c4:	and	r0, r0, #524288	; 0x80000
   297c8:	cmp	r0, #0
   297cc:	bne	297f4 <__assert_fail@plt+0x18360>
   297d0:	ldr	r0, [fp, #-8]
   297d4:	ldr	r1, [r0, #4]
   297d8:	mvn	r2, #255	; 0xff
   297dc:	and	r1, r1, r2
   297e0:	orr	r1, r1, #12
   297e4:	str	r1, [r0, #4]
   297e8:	ldr	r0, [fp, #-8]
   297ec:	movw	r1, #9
   297f0:	str	r1, [r0]
   297f4:	b	29ad4 <__assert_fail@plt+0x18640>
   297f8:	ldr	r0, [fp, #-16]
   297fc:	and	r0, r0, #524288	; 0x80000
   29800:	cmp	r0, #0
   29804:	bne	2982c <__assert_fail@plt+0x18398>
   29808:	ldr	r0, [fp, #-8]
   2980c:	ldr	r1, [r0, #4]
   29810:	mvn	r2, #255	; 0xff
   29814:	and	r1, r1, r2
   29818:	orr	r1, r1, #12
   2981c:	str	r1, [r0, #4]
   29820:	ldr	r0, [fp, #-8]
   29824:	movw	r1, #256	; 0x100
   29828:	str	r1, [r0]
   2982c:	b	29ad4 <__assert_fail@plt+0x18640>
   29830:	ldr	r0, [fp, #-16]
   29834:	and	r0, r0, #524288	; 0x80000
   29838:	cmp	r0, #0
   2983c:	bne	29864 <__assert_fail@plt+0x183d0>
   29840:	ldr	r0, [fp, #-8]
   29844:	ldr	r1, [r0, #4]
   29848:	mvn	r2, #255	; 0xff
   2984c:	and	r1, r1, r2
   29850:	orr	r1, r1, #12
   29854:	str	r1, [r0, #4]
   29858:	ldr	r0, [fp, #-8]
   2985c:	movw	r1, #512	; 0x200
   29860:	str	r1, [r0]
   29864:	b	29ad4 <__assert_fail@plt+0x18640>
   29868:	ldr	r0, [fp, #-16]
   2986c:	and	r0, r0, #524288	; 0x80000
   29870:	cmp	r0, #0
   29874:	bne	29890 <__assert_fail@plt+0x183fc>
   29878:	ldr	r0, [fp, #-8]
   2987c:	ldr	r1, [r0, #4]
   29880:	mvn	r2, #255	; 0xff
   29884:	and	r1, r1, r2
   29888:	orr	r1, r1, #32
   2988c:	str	r1, [r0, #4]
   29890:	b	29ad4 <__assert_fail@plt+0x18640>
   29894:	ldr	r0, [fp, #-16]
   29898:	and	r0, r0, #524288	; 0x80000
   2989c:	cmp	r0, #0
   298a0:	bne	298bc <__assert_fail@plt+0x18428>
   298a4:	ldr	r0, [fp, #-8]
   298a8:	ldr	r1, [r0, #4]
   298ac:	mvn	r2, #255	; 0xff
   298b0:	and	r1, r1, r2
   298b4:	orr	r1, r1, #33	; 0x21
   298b8:	str	r1, [r0, #4]
   298bc:	b	29ad4 <__assert_fail@plt+0x18640>
   298c0:	ldr	r0, [fp, #-16]
   298c4:	and	r0, r0, #524288	; 0x80000
   298c8:	cmp	r0, #0
   298cc:	bne	298e8 <__assert_fail@plt+0x18454>
   298d0:	ldr	r0, [fp, #-8]
   298d4:	ldr	r1, [r0, #4]
   298d8:	mvn	r2, #255	; 0xff
   298dc:	and	r1, r1, r2
   298e0:	orr	r1, r1, #34	; 0x22
   298e4:	str	r1, [r0, #4]
   298e8:	b	29ad4 <__assert_fail@plt+0x18640>
   298ec:	ldr	r0, [fp, #-16]
   298f0:	and	r0, r0, #524288	; 0x80000
   298f4:	cmp	r0, #0
   298f8:	bne	29914 <__assert_fail@plt+0x18480>
   298fc:	ldr	r0, [fp, #-8]
   29900:	ldr	r1, [r0, #4]
   29904:	mvn	r2, #255	; 0xff
   29908:	and	r1, r1, r2
   2990c:	orr	r1, r1, #35	; 0x23
   29910:	str	r1, [r0, #4]
   29914:	b	29ad4 <__assert_fail@plt+0x18640>
   29918:	ldr	r0, [fp, #-16]
   2991c:	and	r0, r0, #524288	; 0x80000
   29920:	cmp	r0, #0
   29924:	bne	2994c <__assert_fail@plt+0x184b8>
   29928:	ldr	r0, [fp, #-8]
   2992c:	ldr	r1, [r0, #4]
   29930:	mvn	r2, #255	; 0xff
   29934:	and	r1, r1, r2
   29938:	orr	r1, r1, #12
   2993c:	str	r1, [r0, #4]
   29940:	ldr	r0, [fp, #-8]
   29944:	movw	r1, #64	; 0x40
   29948:	str	r1, [r0]
   2994c:	b	29ad4 <__assert_fail@plt+0x18640>
   29950:	ldr	r0, [fp, #-16]
   29954:	and	r0, r0, #524288	; 0x80000
   29958:	cmp	r0, #0
   2995c:	bne	29984 <__assert_fail@plt+0x184f0>
   29960:	ldr	r0, [fp, #-8]
   29964:	ldr	r1, [r0, #4]
   29968:	mvn	r2, #255	; 0xff
   2996c:	and	r1, r1, r2
   29970:	orr	r1, r1, #12
   29974:	str	r1, [r0, #4]
   29978:	ldr	r0, [fp, #-8]
   2997c:	movw	r1, #128	; 0x80
   29980:	str	r1, [r0]
   29984:	b	29ad4 <__assert_fail@plt+0x18640>
   29988:	ldr	r0, [fp, #-16]
   2998c:	and	r0, r0, #8192	; 0x2000
   29990:	cmp	r0, #0
   29994:	bne	299b0 <__assert_fail@plt+0x1851c>
   29998:	ldr	r0, [fp, #-8]
   2999c:	ldr	r1, [r0, #4]
   299a0:	mvn	r2, #255	; 0xff
   299a4:	and	r1, r1, r2
   299a8:	orr	r1, r1, #8
   299ac:	str	r1, [r0, #4]
   299b0:	b	29ad4 <__assert_fail@plt+0x18640>
   299b4:	ldr	r0, [fp, #-16]
   299b8:	and	r0, r0, #8192	; 0x2000
   299bc:	cmp	r0, #0
   299c0:	bne	299dc <__assert_fail@plt+0x18548>
   299c4:	ldr	r0, [fp, #-8]
   299c8:	ldr	r1, [r0, #4]
   299cc:	mvn	r2, #255	; 0xff
   299d0:	and	r1, r1, r2
   299d4:	orr	r1, r1, #9
   299d8:	str	r1, [r0, #4]
   299dc:	b	29ad4 <__assert_fail@plt+0x18640>
   299e0:	ldr	r0, [fp, #-16]
   299e4:	and	r0, r0, #1024	; 0x400
   299e8:	cmp	r0, #0
   299ec:	bne	29a18 <__assert_fail@plt+0x18584>
   299f0:	ldr	r0, [fp, #-16]
   299f4:	and	r0, r0, #2
   299f8:	cmp	r0, #0
   299fc:	beq	29a18 <__assert_fail@plt+0x18584>
   29a00:	ldr	r0, [fp, #-8]
   29a04:	ldr	r1, [r0, #4]
   29a08:	mvn	r2, #255	; 0xff
   29a0c:	and	r1, r1, r2
   29a10:	orr	r1, r1, #18
   29a14:	str	r1, [r0, #4]
   29a18:	b	29ad4 <__assert_fail@plt+0x18640>
   29a1c:	ldr	r0, [fp, #-16]
   29a20:	and	r0, r0, #1024	; 0x400
   29a24:	cmp	r0, #0
   29a28:	bne	29a54 <__assert_fail@plt+0x185c0>
   29a2c:	ldr	r0, [fp, #-16]
   29a30:	and	r0, r0, #2
   29a34:	cmp	r0, #0
   29a38:	beq	29a54 <__assert_fail@plt+0x185c0>
   29a3c:	ldr	r0, [fp, #-8]
   29a40:	ldr	r1, [r0, #4]
   29a44:	mvn	r2, #255	; 0xff
   29a48:	and	r1, r1, r2
   29a4c:	orr	r1, r1, #19
   29a50:	str	r1, [r0, #4]
   29a54:	b	29ad4 <__assert_fail@plt+0x18640>
   29a58:	ldr	r0, [fp, #-16]
   29a5c:	and	r0, r0, #512	; 0x200
   29a60:	cmp	r0, #0
   29a64:	beq	29a90 <__assert_fail@plt+0x185fc>
   29a68:	ldr	r0, [fp, #-16]
   29a6c:	and	r0, r0, #4096	; 0x1000
   29a70:	cmp	r0, #0
   29a74:	bne	29a90 <__assert_fail@plt+0x185fc>
   29a78:	ldr	r0, [fp, #-8]
   29a7c:	ldr	r1, [r0, #4]
   29a80:	mvn	r2, #255	; 0xff
   29a84:	and	r1, r1, r2
   29a88:	orr	r1, r1, #23
   29a8c:	str	r1, [r0, #4]
   29a90:	b	29ad4 <__assert_fail@plt+0x18640>
   29a94:	ldr	r0, [fp, #-16]
   29a98:	and	r0, r0, #512	; 0x200
   29a9c:	cmp	r0, #0
   29aa0:	beq	29acc <__assert_fail@plt+0x18638>
   29aa4:	ldr	r0, [fp, #-16]
   29aa8:	and	r0, r0, #4096	; 0x1000
   29aac:	cmp	r0, #0
   29ab0:	bne	29acc <__assert_fail@plt+0x18638>
   29ab4:	ldr	r0, [fp, #-8]
   29ab8:	ldr	r1, [r0, #4]
   29abc:	mvn	r2, #255	; 0xff
   29ac0:	and	r1, r1, r2
   29ac4:	orr	r1, r1, #24
   29ac8:	str	r1, [r0, #4]
   29acc:	b	29ad4 <__assert_fail@plt+0x18640>
   29ad0:	b	29ad4 <__assert_fail@plt+0x18640>
   29ad4:	movw	r0, #2
   29ad8:	str	r0, [fp, #-4]
   29adc:	b	2a144 <__assert_fail@plt+0x18cb0>
   29ae0:	ldr	r0, [fp, #-8]
   29ae4:	ldr	r1, [r0, #4]
   29ae8:	mvn	r2, #255	; 0xff
   29aec:	and	r1, r1, r2
   29af0:	orr	r1, r1, #1
   29af4:	str	r1, [r0, #4]
   29af8:	ldr	r0, [fp, #-12]
   29afc:	ldr	r0, [r0, #80]	; 0x50
   29b00:	cmp	r0, #1
   29b04:	ble	29b84 <__assert_fail@plt+0x186f0>
   29b08:	ldr	r0, [fp, #-12]
   29b0c:	ldr	r1, [fp, #-12]
   29b10:	ldr	r1, [r1, #40]	; 0x28
   29b14:	bl	2a314 <__assert_fail@plt+0x18e80>
   29b18:	str	r0, [fp, #-28]	; 0xffffffe4
   29b1c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   29b20:	bl	113bc <iswalnum@plt>
   29b24:	cmp	r0, #0
   29b28:	movw	r0, #1
   29b2c:	str	r0, [sp, #20]
   29b30:	bne	29b48 <__assert_fail@plt+0x186b4>
   29b34:	ldr	r0, [fp, #-28]	; 0xffffffe4
   29b38:	cmp	r0, #95	; 0x5f
   29b3c:	movw	r0, #0
   29b40:	moveq	r0, #1
   29b44:	str	r0, [sp, #20]
   29b48:	ldr	r0, [sp, #20]
   29b4c:	and	r0, r0, #1
   29b50:	cmp	r0, #0
   29b54:	movw	r0, #0
   29b58:	movne	r0, #1
   29b5c:	and	r0, r0, #1
   29b60:	ldr	r1, [fp, #-8]
   29b64:	ldr	r2, [r1, #4]
   29b68:	and	r0, r0, #1
   29b6c:	lsl	r0, r0, #22
   29b70:	mvn	r3, #4194304	; 0x400000
   29b74:	and	r2, r2, r3
   29b78:	orr	r0, r2, r0
   29b7c:	str	r0, [r1, #4]
   29b80:	b	29bf8 <__assert_fail@plt+0x18764>
   29b84:	bl	11368 <__ctype_b_loc@plt>
   29b88:	ldr	r0, [r0]
   29b8c:	ldr	lr, [fp, #-8]
   29b90:	ldrb	lr, [lr]
   29b94:	mov	r1, lr
   29b98:	add	r0, r0, lr, lsl #1
   29b9c:	ldrh	r0, [r0]
   29ba0:	and	r0, r0, #8
   29ba4:	cmp	r0, #0
   29ba8:	movw	r0, #1
   29bac:	str	r1, [sp, #16]
   29bb0:	str	r0, [sp, #12]
   29bb4:	bne	29bd0 <__assert_fail@plt+0x1873c>
   29bb8:	ldr	r0, [fp, #-8]
   29bbc:	ldrb	r0, [r0]
   29bc0:	cmp	r0, #95	; 0x5f
   29bc4:	movw	r0, #0
   29bc8:	moveq	r0, #1
   29bcc:	str	r0, [sp, #12]
   29bd0:	ldr	r0, [sp, #12]
   29bd4:	and	r0, r0, #1
   29bd8:	ldr	r1, [fp, #-8]
   29bdc:	ldr	r2, [r1, #4]
   29be0:	and	r0, r0, #1
   29be4:	lsl	r0, r0, #22
   29be8:	mvn	r3, #4194304	; 0x400000
   29bec:	and	r2, r2, r3
   29bf0:	orr	r0, r2, r0
   29bf4:	str	r0, [r1, #4]
   29bf8:	ldrb	r0, [fp, #-17]	; 0xffffffef
   29bfc:	sub	r0, r0, #10
   29c00:	cmp	r0, #115	; 0x73
   29c04:	str	r0, [sp, #8]
   29c08:	bhi	2a138 <__assert_fail@plt+0x18ca4>
   29c0c:	add	r0, pc, #8
   29c10:	ldr	r1, [sp, #8]
   29c14:	ldr	r0, [r0, r1, lsl #2]
   29c18:	mov	pc, r0
   29c1c:	andeq	r9, r2, ip, ror #27
   29c20:	andeq	sl, r2, r8, lsr r1
   29c24:	andeq	sl, r2, r8, lsr r1
   29c28:	andeq	sl, r2, r8, lsr r1
   29c2c:	andeq	sl, r2, r8, lsr r1
   29c30:	andeq	sl, r2, r8, lsr r1
   29c34:	andeq	sl, r2, r8, lsr r1
   29c38:	andeq	sl, r2, r8, lsr r1
   29c3c:	andeq	sl, r2, r8, lsr r1
   29c40:	andeq	sl, r2, r8, lsr r1
   29c44:	andeq	sl, r2, r8, lsr r1
   29c48:	andeq	sl, r2, r8, lsr r1
   29c4c:	andeq	sl, r2, r8, lsr r1
   29c50:	andeq	sl, r2, r8, lsr r1
   29c54:	andeq	sl, r2, r8, lsr r1
   29c58:	andeq	sl, r2, r8, lsr r1
   29c5c:	andeq	sl, r2, r8, lsr r1
   29c60:	andeq	sl, r2, r8, lsr r1
   29c64:	andeq	sl, r2, r8, lsr r1
   29c68:	andeq	sl, r2, r8, lsr r1
   29c6c:	andeq	sl, r2, r8, lsr r1
   29c70:	andeq	sl, r2, r8, lsr r1
   29c74:	andeq	sl, r2, r8, lsr r1
   29c78:	andeq	sl, r2, r8, lsr r1
   29c7c:	andeq	sl, r2, r8, lsr r1
   29c80:	andeq	sl, r2, r8, lsr r1
   29c84:	andeq	sl, r2, r4, lsl #1
   29c88:	andeq	sl, r2, r8, lsr r1
   29c8c:	andeq	sl, r2, r8, lsr r1
   29c90:	andeq	sl, r2, r8, lsr r1
   29c94:	andeq	r9, r2, r0, ror #30
   29c98:	andeq	r9, r2, ip, lsl #31
   29c9c:	andeq	r9, r2, r4, asr lr
   29ca0:	andeq	r9, r2, r0, ror lr
   29ca4:	andeq	sl, r2, r8, lsr r1
   29ca8:	andeq	sl, r2, r8, lsr r1
   29cac:	ldrdeq	r9, [r2], -r4
   29cb0:	andeq	sl, r2, r8, lsr r1
   29cb4:	andeq	sl, r2, r8, lsr r1
   29cb8:	andeq	sl, r2, r8, lsr r1
   29cbc:	andeq	sl, r2, r8, lsr r1
   29cc0:	andeq	sl, r2, r8, lsr r1
   29cc4:	andeq	sl, r2, r8, lsr r1
   29cc8:	andeq	sl, r2, r8, lsr r1
   29ccc:	andeq	sl, r2, r8, lsr r1
   29cd0:	andeq	sl, r2, r8, lsr r1
   29cd4:	andeq	sl, r2, r8, lsr r1
   29cd8:	andeq	sl, r2, r8, lsr r1
   29cdc:	andeq	sl, r2, r8, lsr r1
   29ce0:	andeq	sl, r2, r8, lsr r1
   29ce4:	andeq	sl, r2, r8, lsr r1
   29ce8:	andeq	sl, r2, r8, lsr r1
   29cec:	andeq	sl, r2, r8, lsr r1
   29cf0:	andeq	r9, r2, ip, lsr #29
   29cf4:	andeq	sl, r2, r8, lsr r1
   29cf8:	andeq	sl, r2, r8, lsr r1
   29cfc:	andeq	sl, r2, r8, lsr r1
   29d00:	andeq	sl, r2, r8, lsr r1
   29d04:	andeq	sl, r2, r8, lsr r1
   29d08:	andeq	sl, r2, r8, lsr r1
   29d0c:	andeq	sl, r2, r8, lsr r1
   29d10:	andeq	sl, r2, r8, lsr r1
   29d14:	andeq	sl, r2, r8, lsr r1
   29d18:	andeq	sl, r2, r8, lsr r1
   29d1c:	andeq	sl, r2, r8, lsr r1
   29d20:	andeq	sl, r2, r8, lsr r1
   29d24:	andeq	sl, r2, r8, lsr r1
   29d28:	andeq	sl, r2, r8, lsr r1
   29d2c:	andeq	sl, r2, r8, lsr r1
   29d30:	andeq	sl, r2, r8, lsr r1
   29d34:	andeq	sl, r2, r8, lsr r1
   29d38:	andeq	sl, r2, r8, lsr r1
   29d3c:	andeq	sl, r2, r8, lsr r1
   29d40:	andeq	sl, r2, r8, lsr r1
   29d44:	andeq	sl, r2, r8, lsr r1
   29d48:	andeq	sl, r2, r8, lsr r1
   29d4c:	andeq	sl, r2, r8, lsr r1
   29d50:	andeq	sl, r2, r8, lsr r1
   29d54:	andeq	sl, r2, r8, lsr r1
   29d58:	andeq	sl, r2, r8, lsr r1
   29d5c:	andeq	sl, r2, r8, lsr r1
   29d60:			; <UNDEFINED> instruction: 0x00029fb8
   29d64:	andeq	sl, r2, r8, lsr r1
   29d68:	andeq	sl, r2, r8, lsr r1
   29d6c:	strdeq	r9, [r2], -r0
   29d70:	andeq	sl, r2, r8, lsr r1
   29d74:	andeq	sl, r2, r8, lsr r1
   29d78:	andeq	sl, r2, r8, lsr r1
   29d7c:	andeq	sl, r2, r8, lsr r1
   29d80:	andeq	sl, r2, r8, lsr r1
   29d84:	andeq	sl, r2, r8, lsr r1
   29d88:	andeq	sl, r2, r8, lsr r1
   29d8c:	andeq	sl, r2, r8, lsr r1
   29d90:	andeq	sl, r2, r8, lsr r1
   29d94:	andeq	sl, r2, r8, lsr r1
   29d98:	andeq	sl, r2, r8, lsr r1
   29d9c:	andeq	sl, r2, r8, lsr r1
   29da0:	andeq	sl, r2, r8, lsr r1
   29da4:	andeq	sl, r2, r8, lsr r1
   29da8:	andeq	sl, r2, r8, lsr r1
   29dac:	andeq	sl, r2, r8, lsr r1
   29db0:	andeq	sl, r2, r8, lsr r1
   29db4:	andeq	sl, r2, r8, lsr r1
   29db8:	andeq	sl, r2, r8, lsr r1
   29dbc:	andeq	sl, r2, r8, lsr r1
   29dc0:	andeq	sl, r2, r8, lsr r1
   29dc4:	andeq	sl, r2, r8, lsr r1
   29dc8:	andeq	sl, r2, r8, lsr r1
   29dcc:	andeq	sl, r2, r8, lsr r1
   29dd0:	andeq	sl, r2, r8, lsr r1
   29dd4:	andeq	sl, r2, r8, lsr r1
   29dd8:	andeq	sl, r2, r8, lsr r1
   29ddc:	andeq	sl, r2, r8, lsr r1
   29de0:	andeq	r9, r2, r8, ror #29
   29de4:	andeq	r9, r2, r8, lsl lr
   29de8:	andeq	r9, r2, r4, lsr #30
   29dec:	ldr	r0, [fp, #-16]
   29df0:	and	r0, r0, #2048	; 0x800
   29df4:	cmp	r0, #0
   29df8:	beq	29e14 <__assert_fail@plt+0x18980>
   29dfc:	ldr	r0, [fp, #-8]
   29e00:	ldr	r1, [r0, #4]
   29e04:	mvn	r2, #255	; 0xff
   29e08:	and	r1, r1, r2
   29e0c:	orr	r1, r1, #10
   29e10:	str	r1, [r0, #4]
   29e14:	b	2a13c <__assert_fail@plt+0x18ca8>
   29e18:	ldr	r0, [fp, #-16]
   29e1c:	and	r0, r0, #1024	; 0x400
   29e20:	cmp	r0, #0
   29e24:	bne	29e50 <__assert_fail@plt+0x189bc>
   29e28:	ldr	r0, [fp, #-16]
   29e2c:	and	r0, r0, #32768	; 0x8000
   29e30:	cmp	r0, #0
   29e34:	beq	29e50 <__assert_fail@plt+0x189bc>
   29e38:	ldr	r0, [fp, #-8]
   29e3c:	ldr	r1, [r0, #4]
   29e40:	mvn	r2, #255	; 0xff
   29e44:	and	r1, r1, r2
   29e48:	orr	r1, r1, #10
   29e4c:	str	r1, [r0, #4]
   29e50:	b	2a13c <__assert_fail@plt+0x18ca8>
   29e54:	ldr	r0, [fp, #-8]
   29e58:	ldr	r1, [r0, #4]
   29e5c:	mvn	r2, #255	; 0xff
   29e60:	and	r1, r1, r2
   29e64:	orr	r1, r1, #11
   29e68:	str	r1, [r0, #4]
   29e6c:	b	2a13c <__assert_fail@plt+0x18ca8>
   29e70:	ldr	r0, [fp, #-16]
   29e74:	and	r0, r0, #1024	; 0x400
   29e78:	cmp	r0, #0
   29e7c:	bne	29ea8 <__assert_fail@plt+0x18a14>
   29e80:	ldr	r0, [fp, #-16]
   29e84:	and	r0, r0, #2
   29e88:	cmp	r0, #0
   29e8c:	bne	29ea8 <__assert_fail@plt+0x18a14>
   29e90:	ldr	r0, [fp, #-8]
   29e94:	ldr	r1, [r0, #4]
   29e98:	mvn	r2, #255	; 0xff
   29e9c:	and	r1, r1, r2
   29ea0:	orr	r1, r1, #18
   29ea4:	str	r1, [r0, #4]
   29ea8:	b	2a13c <__assert_fail@plt+0x18ca8>
   29eac:	ldr	r0, [fp, #-16]
   29eb0:	and	r0, r0, #1024	; 0x400
   29eb4:	cmp	r0, #0
   29eb8:	bne	29ee4 <__assert_fail@plt+0x18a50>
   29ebc:	ldr	r0, [fp, #-16]
   29ec0:	and	r0, r0, #2
   29ec4:	cmp	r0, #0
   29ec8:	bne	29ee4 <__assert_fail@plt+0x18a50>
   29ecc:	ldr	r0, [fp, #-8]
   29ed0:	ldr	r1, [r0, #4]
   29ed4:	mvn	r2, #255	; 0xff
   29ed8:	and	r1, r1, r2
   29edc:	orr	r1, r1, #19
   29ee0:	str	r1, [r0, #4]
   29ee4:	b	2a13c <__assert_fail@plt+0x18ca8>
   29ee8:	ldr	r0, [fp, #-16]
   29eec:	and	r0, r0, #512	; 0x200
   29ef0:	cmp	r0, #0
   29ef4:	beq	29f20 <__assert_fail@plt+0x18a8c>
   29ef8:	ldr	r0, [fp, #-16]
   29efc:	and	r0, r0, #4096	; 0x1000
   29f00:	cmp	r0, #0
   29f04:	beq	29f20 <__assert_fail@plt+0x18a8c>
   29f08:	ldr	r0, [fp, #-8]
   29f0c:	ldr	r1, [r0, #4]
   29f10:	mvn	r2, #255	; 0xff
   29f14:	and	r1, r1, r2
   29f18:	orr	r1, r1, #23
   29f1c:	str	r1, [r0, #4]
   29f20:	b	2a13c <__assert_fail@plt+0x18ca8>
   29f24:	ldr	r0, [fp, #-16]
   29f28:	and	r0, r0, #512	; 0x200
   29f2c:	cmp	r0, #0
   29f30:	beq	29f5c <__assert_fail@plt+0x18ac8>
   29f34:	ldr	r0, [fp, #-16]
   29f38:	and	r0, r0, #4096	; 0x1000
   29f3c:	cmp	r0, #0
   29f40:	beq	29f5c <__assert_fail@plt+0x18ac8>
   29f44:	ldr	r0, [fp, #-8]
   29f48:	ldr	r1, [r0, #4]
   29f4c:	mvn	r2, #255	; 0xff
   29f50:	and	r1, r1, r2
   29f54:	orr	r1, r1, #24
   29f58:	str	r1, [r0, #4]
   29f5c:	b	2a13c <__assert_fail@plt+0x18ca8>
   29f60:	ldr	r0, [fp, #-16]
   29f64:	and	r0, r0, #8192	; 0x2000
   29f68:	cmp	r0, #0
   29f6c:	beq	29f88 <__assert_fail@plt+0x18af4>
   29f70:	ldr	r0, [fp, #-8]
   29f74:	ldr	r1, [r0, #4]
   29f78:	mvn	r2, #255	; 0xff
   29f7c:	and	r1, r1, r2
   29f80:	orr	r1, r1, #8
   29f84:	str	r1, [r0, #4]
   29f88:	b	2a13c <__assert_fail@plt+0x18ca8>
   29f8c:	ldr	r0, [fp, #-16]
   29f90:	and	r0, r0, #8192	; 0x2000
   29f94:	cmp	r0, #0
   29f98:	beq	29fb4 <__assert_fail@plt+0x18b20>
   29f9c:	ldr	r0, [fp, #-8]
   29fa0:	ldr	r1, [r0, #4]
   29fa4:	mvn	r2, #255	; 0xff
   29fa8:	and	r1, r1, r2
   29fac:	orr	r1, r1, #9
   29fb0:	str	r1, [r0, #4]
   29fb4:	b	2a13c <__assert_fail@plt+0x18ca8>
   29fb8:	ldr	r0, [fp, #-8]
   29fbc:	ldr	r1, [r0, #4]
   29fc0:	mvn	r2, #255	; 0xff
   29fc4:	and	r1, r1, r2
   29fc8:	orr	r1, r1, #20
   29fcc:	str	r1, [r0, #4]
   29fd0:	b	2a13c <__assert_fail@plt+0x18ca8>
   29fd4:	ldr	r0, [fp, #-8]
   29fd8:	ldr	r1, [r0, #4]
   29fdc:	mvn	r2, #255	; 0xff
   29fe0:	and	r1, r1, r2
   29fe4:	orr	r1, r1, #5
   29fe8:	str	r1, [r0, #4]
   29fec:	b	2a13c <__assert_fail@plt+0x18ca8>
   29ff0:	ldr	r0, [pc, #344]	; 2a150 <__assert_fail@plt+0x18cbc>
   29ff4:	ldr	r1, [fp, #-16]
   29ff8:	and	r0, r1, r0
   29ffc:	cmp	r0, #0
   2a000:	bne	2a05c <__assert_fail@plt+0x18bc8>
   2a004:	ldr	r0, [fp, #-12]
   2a008:	ldr	r0, [r0, #40]	; 0x28
   2a00c:	cmp	r0, #0
   2a010:	beq	2a05c <__assert_fail@plt+0x18bc8>
   2a014:	ldr	r0, [fp, #-12]
   2a018:	ldr	r0, [r0, #4]
   2a01c:	ldr	r1, [fp, #-12]
   2a020:	ldr	r1, [r1, #40]	; 0x28
   2a024:	mvn	r2, #0
   2a028:	add	r1, r1, r2
   2a02c:	add	r0, r0, r1
   2a030:	ldrb	r0, [r0]
   2a034:	strb	r0, [fp, #-29]	; 0xffffffe3
   2a038:	ldr	r0, [fp, #-16]
   2a03c:	and	r0, r0, #2048	; 0x800
   2a040:	cmp	r0, #0
   2a044:	beq	2a054 <__assert_fail@plt+0x18bc0>
   2a048:	ldrb	r0, [fp, #-29]	; 0xffffffe3
   2a04c:	cmp	r0, #10
   2a050:	beq	2a058 <__assert_fail@plt+0x18bc4>
   2a054:	b	2a13c <__assert_fail@plt+0x18ca8>
   2a058:	b	2a05c <__assert_fail@plt+0x18bc8>
   2a05c:	ldr	r0, [fp, #-8]
   2a060:	ldr	r1, [r0, #4]
   2a064:	mvn	r2, #255	; 0xff
   2a068:	and	r1, r1, r2
   2a06c:	orr	r1, r1, #12
   2a070:	str	r1, [r0, #4]
   2a074:	ldr	r0, [fp, #-8]
   2a078:	movw	r1, #16
   2a07c:	str	r1, [r0]
   2a080:	b	2a13c <__assert_fail@plt+0x18ca8>
   2a084:	ldr	r0, [fp, #-16]
   2a088:	and	r0, r0, #8
   2a08c:	cmp	r0, #0
   2a090:	bne	2a110 <__assert_fail@plt+0x18c7c>
   2a094:	ldr	r0, [fp, #-12]
   2a098:	ldr	r0, [r0, #40]	; 0x28
   2a09c:	add	r0, r0, #1
   2a0a0:	ldr	r1, [fp, #-12]
   2a0a4:	ldr	r1, [r1, #48]	; 0x30
   2a0a8:	cmp	r0, r1
   2a0ac:	beq	2a110 <__assert_fail@plt+0x18c7c>
   2a0b0:	ldr	r0, [fp, #-12]
   2a0b4:	ldr	r1, [r0, #40]	; 0x28
   2a0b8:	add	r1, r1, #1
   2a0bc:	str	r1, [r0, #40]	; 0x28
   2a0c0:	ldr	r1, [fp, #-12]
   2a0c4:	ldr	r2, [fp, #-16]
   2a0c8:	add	r0, sp, #40	; 0x28
   2a0cc:	bl	292dc <__assert_fail@plt+0x17e48>
   2a0d0:	ldr	r1, [fp, #-12]
   2a0d4:	ldr	r2, [r1, #40]	; 0x28
   2a0d8:	mvn	lr, #0
   2a0dc:	add	r2, r2, lr
   2a0e0:	str	r2, [r1, #40]	; 0x28
   2a0e4:	ldr	r1, [sp, #44]	; 0x2c
   2a0e8:	and	r1, r1, #255	; 0xff
   2a0ec:	cmp	r1, #10
   2a0f0:	str	r0, [sp, #4]
   2a0f4:	beq	2a10c <__assert_fail@plt+0x18c78>
   2a0f8:	ldr	r0, [sp, #44]	; 0x2c
   2a0fc:	and	r0, r0, #255	; 0xff
   2a100:	cmp	r0, #9
   2a104:	beq	2a10c <__assert_fail@plt+0x18c78>
   2a108:	b	2a13c <__assert_fail@plt+0x18ca8>
   2a10c:	b	2a110 <__assert_fail@plt+0x18c7c>
   2a110:	ldr	r0, [fp, #-8]
   2a114:	ldr	r1, [r0, #4]
   2a118:	mvn	r2, #255	; 0xff
   2a11c:	and	r1, r1, r2
   2a120:	orr	r1, r1, #12
   2a124:	str	r1, [r0, #4]
   2a128:	ldr	r0, [fp, #-8]
   2a12c:	movw	r1, #32
   2a130:	str	r1, [r0]
   2a134:	b	2a13c <__assert_fail@plt+0x18ca8>
   2a138:	b	2a13c <__assert_fail@plt+0x18ca8>
   2a13c:	movw	r0, #1
   2a140:	str	r0, [fp, #-4]
   2a144:	ldr	r0, [fp, #-4]
   2a148:	mov	sp, fp
   2a14c:	pop	{fp, pc}
   2a150:	addeq	r0, r0, r8
   2a154:	sub	sp, sp, #20
   2a158:	str	r0, [sp, #12]
   2a15c:	str	r1, [sp, #8]
   2a160:	ldr	r0, [sp, #12]
   2a164:	ldrsb	r0, [r0, #75]	; 0x4b
   2a168:	cmp	r0, #0
   2a16c:	movw	r0, #0
   2a170:	movne	r0, #1
   2a174:	mvn	r1, #0
   2a178:	eor	r0, r0, r1
   2a17c:	tst	r0, #1
   2a180:	beq	2a1ac <__assert_fail@plt+0x18d18>
   2a184:	ldr	r0, [sp, #12]
   2a188:	ldr	r0, [r0, #4]
   2a18c:	ldr	r1, [sp, #12]
   2a190:	ldr	r1, [r1, #40]	; 0x28
   2a194:	ldr	r2, [sp, #8]
   2a198:	add	r1, r1, r2
   2a19c:	add	r0, r0, r1
   2a1a0:	ldrb	r0, [r0]
   2a1a4:	strb	r0, [sp, #19]
   2a1a8:	b	2a308 <__assert_fail@plt+0x18e74>
   2a1ac:	ldr	r0, [sp, #12]
   2a1b0:	ldr	r0, [r0, #80]	; 0x50
   2a1b4:	cmp	r0, #1
   2a1b8:	ble	2a254 <__assert_fail@plt+0x18dc0>
   2a1bc:	ldr	r0, [sp, #12]
   2a1c0:	ldr	r1, [r0, #8]
   2a1c4:	ldr	r0, [r0, #40]	; 0x28
   2a1c8:	ldr	r2, [sp, #8]
   2a1cc:	add	r0, r0, r2
   2a1d0:	add	r0, r1, r0, lsl #2
   2a1d4:	ldr	r0, [r0]
   2a1d8:	cmn	r0, #1
   2a1dc:	beq	2a22c <__assert_fail@plt+0x18d98>
   2a1e0:	ldr	r0, [sp, #12]
   2a1e4:	ldr	r0, [r0, #28]
   2a1e8:	ldr	r1, [sp, #12]
   2a1ec:	ldr	r1, [r1, #40]	; 0x28
   2a1f0:	ldr	r2, [sp, #8]
   2a1f4:	add	r1, r1, r2
   2a1f8:	add	r1, r1, #1
   2a1fc:	cmp	r0, r1
   2a200:	beq	2a254 <__assert_fail@plt+0x18dc0>
   2a204:	ldr	r0, [sp, #12]
   2a208:	ldr	r1, [r0, #8]
   2a20c:	ldr	r0, [r0, #40]	; 0x28
   2a210:	ldr	r2, [sp, #8]
   2a214:	add	r0, r0, r2
   2a218:	add	r0, r0, #1
   2a21c:	add	r0, r1, r0, lsl #2
   2a220:	ldr	r0, [r0]
   2a224:	cmn	r0, #1
   2a228:	bne	2a254 <__assert_fail@plt+0x18dc0>
   2a22c:	ldr	r0, [sp, #12]
   2a230:	ldr	r0, [r0, #4]
   2a234:	ldr	r1, [sp, #12]
   2a238:	ldr	r1, [r1, #40]	; 0x28
   2a23c:	ldr	r2, [sp, #8]
   2a240:	add	r1, r1, r2
   2a244:	add	r0, r0, r1
   2a248:	ldrb	r0, [r0]
   2a24c:	strb	r0, [sp, #19]
   2a250:	b	2a308 <__assert_fail@plt+0x18e74>
   2a254:	ldr	r0, [sp, #12]
   2a258:	ldr	r0, [r0, #40]	; 0x28
   2a25c:	ldr	r1, [sp, #8]
   2a260:	add	r0, r0, r1
   2a264:	str	r0, [sp]
   2a268:	ldr	r0, [sp, #12]
   2a26c:	ldrsb	r0, [r0, #76]	; 0x4c
   2a270:	cmp	r0, #0
   2a274:	beq	2a290 <__assert_fail@plt+0x18dfc>
   2a278:	ldr	r0, [sp, #12]
   2a27c:	ldr	r0, [r0, #12]
   2a280:	ldr	r1, [sp]
   2a284:	add	r0, r0, r1, lsl #2
   2a288:	ldr	r0, [r0]
   2a28c:	str	r0, [sp]
   2a290:	ldr	r0, [sp, #12]
   2a294:	ldr	r0, [r0]
   2a298:	ldr	r1, [sp, #12]
   2a29c:	ldr	r1, [r1, #24]
   2a2a0:	ldr	r2, [sp]
   2a2a4:	add	r1, r1, r2
   2a2a8:	add	r0, r0, r1
   2a2ac:	ldrb	r0, [r0]
   2a2b0:	str	r0, [sp, #4]
   2a2b4:	ldr	r0, [sp, #12]
   2a2b8:	ldrb	r0, [r0, #76]	; 0x4c
   2a2bc:	cmp	r0, #0
   2a2c0:	beq	2a300 <__assert_fail@plt+0x18e6c>
   2a2c4:	ldr	r0, [sp, #4]
   2a2c8:	mvn	r1, #127	; 0x7f
   2a2cc:	and	r0, r0, r1
   2a2d0:	cmp	r0, #0
   2a2d4:	beq	2a300 <__assert_fail@plt+0x18e6c>
   2a2d8:	ldr	r0, [sp, #12]
   2a2dc:	ldr	r0, [r0, #4]
   2a2e0:	ldr	r1, [sp, #12]
   2a2e4:	ldr	r1, [r1, #40]	; 0x28
   2a2e8:	ldr	r2, [sp, #8]
   2a2ec:	add	r1, r1, r2
   2a2f0:	add	r0, r0, r1
   2a2f4:	ldrb	r0, [r0]
   2a2f8:	strb	r0, [sp, #19]
   2a2fc:	b	2a308 <__assert_fail@plt+0x18e74>
   2a300:	ldr	r0, [sp, #4]
   2a304:	strb	r0, [sp, #19]
   2a308:	ldrb	r0, [sp, #19]
   2a30c:	add	sp, sp, #20
   2a310:	bx	lr
   2a314:	sub	sp, sp, #12
   2a318:	str	r0, [sp, #4]
   2a31c:	str	r1, [sp]
   2a320:	ldr	r0, [sp, #4]
   2a324:	ldr	r0, [r0, #80]	; 0x50
   2a328:	cmp	r0, #1
   2a32c:	bne	2a34c <__assert_fail@plt+0x18eb8>
   2a330:	ldr	r0, [sp, #4]
   2a334:	ldr	r0, [r0, #4]
   2a338:	ldr	r1, [sp]
   2a33c:	add	r0, r0, r1
   2a340:	ldrb	r0, [r0]
   2a344:	str	r0, [sp, #8]
   2a348:	b	2a364 <__assert_fail@plt+0x18ed0>
   2a34c:	ldr	r0, [sp, #4]
   2a350:	ldr	r0, [r0, #8]
   2a354:	ldr	r1, [sp]
   2a358:	add	r0, r0, r1, lsl #2
   2a35c:	ldr	r0, [r0]
   2a360:	str	r0, [sp, #8]
   2a364:	ldr	r0, [sp, #8]
   2a368:	add	sp, sp, #12
   2a36c:	bx	lr
   2a370:	push	{r4, r5, fp, lr}
   2a374:	add	fp, sp, #8
   2a378:	sub	sp, sp, #80	; 0x50
   2a37c:	ldr	ip, [fp, #12]
   2a380:	ldr	lr, [fp, #8]
   2a384:	str	r0, [fp, #-16]
   2a388:	str	r1, [fp, #-20]	; 0xffffffec
   2a38c:	str	r2, [fp, #-24]	; 0xffffffe8
   2a390:	str	r3, [fp, #-28]	; 0xffffffe4
   2a394:	ldr	r0, [fp, #-20]	; 0xffffffec
   2a398:	ldr	r0, [r0]
   2a39c:	str	r0, [fp, #-40]	; 0xffffffd8
   2a3a0:	ldr	r0, [fp, #-16]
   2a3a4:	ldr	r1, [fp, #-20]	; 0xffffffec
   2a3a8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2a3ac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2a3b0:	ldr	r4, [fp, #8]
   2a3b4:	ldr	r5, [fp, #12]
   2a3b8:	str	r4, [sp]
   2a3bc:	str	r5, [sp, #4]
   2a3c0:	str	lr, [sp, #40]	; 0x28
   2a3c4:	str	ip, [sp, #36]	; 0x24
   2a3c8:	bl	2a7a0 <__assert_fail@plt+0x1930c>
   2a3cc:	str	r0, [fp, #-32]	; 0xffffffe0
   2a3d0:	ldr	r0, [fp, #12]
   2a3d4:	ldr	r0, [r0]
   2a3d8:	cmp	r0, #0
   2a3dc:	movw	r0, #0
   2a3e0:	str	r0, [sp, #32]
   2a3e4:	beq	2a400 <__assert_fail@plt+0x18f6c>
   2a3e8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a3ec:	movw	r1, #0
   2a3f0:	cmp	r0, r1
   2a3f4:	movw	r0, #0
   2a3f8:	moveq	r0, #1
   2a3fc:	str	r0, [sp, #32]
   2a400:	ldr	r0, [sp, #32]
   2a404:	tst	r0, #1
   2a408:	beq	2a418 <__assert_fail@plt+0x18f84>
   2a40c:	movw	r0, #0
   2a410:	str	r0, [fp, #-12]
   2a414:	b	2a5f8 <__assert_fail@plt+0x19164>
   2a418:	b	2a41c <__assert_fail@plt+0x18f88>
   2a41c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2a420:	ldr	r0, [r0, #4]
   2a424:	and	r0, r0, #255	; 0xff
   2a428:	cmp	r0, #10
   2a42c:	movw	r0, #0
   2a430:	str	r0, [sp, #28]
   2a434:	beq	2a48c <__assert_fail@plt+0x18ff8>
   2a438:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2a43c:	ldr	r0, [r0, #4]
   2a440:	and	r0, r0, #255	; 0xff
   2a444:	cmp	r0, #2
   2a448:	movw	r0, #0
   2a44c:	str	r0, [sp, #28]
   2a450:	beq	2a48c <__assert_fail@plt+0x18ff8>
   2a454:	ldr	r0, [fp, #8]
   2a458:	cmp	r0, #0
   2a45c:	movw	r0, #1
   2a460:	str	r0, [sp, #24]
   2a464:	beq	2a484 <__assert_fail@plt+0x18ff0>
   2a468:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2a46c:	ldr	r0, [r0, #4]
   2a470:	and	r0, r0, #255	; 0xff
   2a474:	cmp	r0, #9
   2a478:	movw	r0, #0
   2a47c:	movne	r0, #1
   2a480:	str	r0, [sp, #24]
   2a484:	ldr	r0, [sp, #24]
   2a488:	str	r0, [sp, #28]
   2a48c:	ldr	r0, [sp, #28]
   2a490:	tst	r0, #1
   2a494:	beq	2a5f0 <__assert_fail@plt+0x1915c>
   2a498:	ldr	r0, [fp, #-16]
   2a49c:	ldr	r1, [fp, #-20]	; 0xffffffec
   2a4a0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2a4a4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2a4a8:	ldr	ip, [fp, #8]
   2a4ac:	ldr	lr, [fp, #12]
   2a4b0:	str	ip, [sp]
   2a4b4:	str	lr, [sp, #4]
   2a4b8:	bl	2a7a0 <__assert_fail@plt+0x1930c>
   2a4bc:	str	r0, [fp, #-36]	; 0xffffffdc
   2a4c0:	ldr	r0, [fp, #12]
   2a4c4:	ldr	r0, [r0]
   2a4c8:	cmp	r0, #0
   2a4cc:	movw	r0, #0
   2a4d0:	str	r0, [sp, #20]
   2a4d4:	beq	2a4f0 <__assert_fail@plt+0x1905c>
   2a4d8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2a4dc:	movw	r1, #0
   2a4e0:	cmp	r0, r1
   2a4e4:	movw	r0, #0
   2a4e8:	moveq	r0, #1
   2a4ec:	str	r0, [sp, #20]
   2a4f0:	ldr	r0, [sp, #20]
   2a4f4:	tst	r0, #1
   2a4f8:	beq	2a530 <__assert_fail@plt+0x1909c>
   2a4fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a500:	movw	r1, #0
   2a504:	cmp	r0, r1
   2a508:	beq	2a524 <__assert_fail@plt+0x19090>
   2a50c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a510:	movw	r1, #42868	; 0xa774
   2a514:	movt	r1, #2
   2a518:	movw	r2, #0
   2a51c:	bl	2a604 <__assert_fail@plt+0x19170>
   2a520:	str	r0, [sp, #16]
   2a524:	movw	r0, #0
   2a528:	str	r0, [fp, #-12]
   2a52c:	b	2a5f8 <__assert_fail@plt+0x19164>
   2a530:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a534:	movw	r1, #0
   2a538:	cmp	r0, r1
   2a53c:	beq	2a5d0 <__assert_fail@plt+0x1913c>
   2a540:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2a544:	movw	r1, #0
   2a548:	cmp	r0, r1
   2a54c:	beq	2a5d0 <__assert_fail@plt+0x1913c>
   2a550:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2a554:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2a558:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2a55c:	movw	r3, #16
   2a560:	bl	29200 <__assert_fail@plt+0x17d6c>
   2a564:	str	r0, [sp, #44]	; 0x2c
   2a568:	ldr	r0, [sp, #44]	; 0x2c
   2a56c:	movw	r1, #0
   2a570:	cmp	r0, r1
   2a574:	bne	2a5c4 <__assert_fail@plt+0x19130>
   2a578:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2a57c:	movw	r1, #42868	; 0xa774
   2a580:	movt	r1, #2
   2a584:	movw	r2, #0
   2a588:	bl	2a604 <__assert_fail@plt+0x19170>
   2a58c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2a590:	str	r0, [sp, #12]
   2a594:	mov	r0, r1
   2a598:	movw	r1, #42868	; 0xa774
   2a59c:	movt	r1, #2
   2a5a0:	movw	r2, #0
   2a5a4:	bl	2a604 <__assert_fail@plt+0x19170>
   2a5a8:	ldr	r1, [fp, #12]
   2a5ac:	movw	r2, #12
   2a5b0:	str	r2, [r1]
   2a5b4:	movw	r1, #0
   2a5b8:	str	r1, [fp, #-12]
   2a5bc:	str	r0, [sp, #8]
   2a5c0:	b	2a5f8 <__assert_fail@plt+0x19164>
   2a5c4:	ldr	r0, [sp, #44]	; 0x2c
   2a5c8:	str	r0, [fp, #-32]	; 0xffffffe0
   2a5cc:	b	2a5ec <__assert_fail@plt+0x19158>
   2a5d0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a5d4:	movw	r1, #0
   2a5d8:	cmp	r0, r1
   2a5dc:	bne	2a5e8 <__assert_fail@plt+0x19154>
   2a5e0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2a5e4:	str	r0, [fp, #-32]	; 0xffffffe0
   2a5e8:	b	2a5ec <__assert_fail@plt+0x19158>
   2a5ec:	b	2a41c <__assert_fail@plt+0x18f88>
   2a5f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a5f4:	str	r0, [fp, #-12]
   2a5f8:	ldr	r0, [fp, #-12]
   2a5fc:	sub	sp, fp, #8
   2a600:	pop	{r4, r5, fp, pc}
   2a604:	push	{fp, lr}
   2a608:	mov	fp, sp
   2a60c:	sub	sp, sp, #40	; 0x28
   2a610:	str	r0, [fp, #-8]
   2a614:	str	r1, [fp, #-12]
   2a618:	str	r2, [fp, #-16]
   2a61c:	ldr	r0, [fp, #-8]
   2a620:	str	r0, [sp, #20]
   2a624:	b	2a628 <__assert_fail@plt+0x19194>
   2a628:	ldr	r0, [sp, #20]
   2a62c:	ldr	r0, [r0, #4]
   2a630:	movw	r1, #0
   2a634:	cmp	r0, r1
   2a638:	movw	r0, #1
   2a63c:	str	r0, [sp, #8]
   2a640:	bne	2a660 <__assert_fail@plt+0x191cc>
   2a644:	ldr	r0, [sp, #20]
   2a648:	ldr	r0, [r0, #8]
   2a64c:	movw	r1, #0
   2a650:	cmp	r0, r1
   2a654:	movw	r0, #0
   2a658:	movne	r0, #1
   2a65c:	str	r0, [sp, #8]
   2a660:	ldr	r0, [sp, #8]
   2a664:	tst	r0, #1
   2a668:	beq	2a6a0 <__assert_fail@plt+0x1920c>
   2a66c:	ldr	r0, [sp, #20]
   2a670:	ldr	r0, [r0, #4]
   2a674:	movw	r1, #0
   2a678:	cmp	r0, r1
   2a67c:	beq	2a690 <__assert_fail@plt+0x191fc>
   2a680:	ldr	r0, [sp, #20]
   2a684:	ldr	r0, [r0, #4]
   2a688:	str	r0, [sp, #20]
   2a68c:	b	2a69c <__assert_fail@plt+0x19208>
   2a690:	ldr	r0, [sp, #20]
   2a694:	ldr	r0, [r0, #8]
   2a698:	str	r0, [sp, #20]
   2a69c:	b	2a628 <__assert_fail@plt+0x19194>
   2a6a0:	b	2a6a4 <__assert_fail@plt+0x19210>
   2a6a4:	ldr	r0, [fp, #-12]
   2a6a8:	ldr	r1, [fp, #-16]
   2a6ac:	ldr	r2, [sp, #20]
   2a6b0:	str	r0, [sp, #4]
   2a6b4:	mov	r0, r1
   2a6b8:	mov	r1, r2
   2a6bc:	ldr	r2, [sp, #4]
   2a6c0:	blx	r2
   2a6c4:	str	r0, [sp, #12]
   2a6c8:	ldr	r0, [sp, #12]
   2a6cc:	cmp	r0, #0
   2a6d0:	beq	2a6e0 <__assert_fail@plt+0x1924c>
   2a6d4:	ldr	r0, [sp, #12]
   2a6d8:	str	r0, [fp, #-4]
   2a6dc:	b	2a768 <__assert_fail@plt+0x192d4>
   2a6e0:	ldr	r0, [sp, #20]
   2a6e4:	ldr	r0, [r0]
   2a6e8:	movw	r1, #0
   2a6ec:	cmp	r0, r1
   2a6f0:	bne	2a700 <__assert_fail@plt+0x1926c>
   2a6f4:	movw	r0, #0
   2a6f8:	str	r0, [fp, #-4]
   2a6fc:	b	2a768 <__assert_fail@plt+0x192d4>
   2a700:	ldr	r0, [sp, #20]
   2a704:	str	r0, [sp, #16]
   2a708:	ldr	r0, [sp, #20]
   2a70c:	ldr	r0, [r0]
   2a710:	str	r0, [sp, #20]
   2a714:	ldr	r0, [sp, #20]
   2a718:	ldr	r0, [r0, #8]
   2a71c:	ldr	r1, [sp, #16]
   2a720:	cmp	r0, r1
   2a724:	movw	r0, #1
   2a728:	str	r0, [sp]
   2a72c:	beq	2a74c <__assert_fail@plt+0x192b8>
   2a730:	ldr	r0, [sp, #20]
   2a734:	ldr	r0, [r0, #8]
   2a738:	movw	r1, #0
   2a73c:	cmp	r0, r1
   2a740:	movw	r0, #0
   2a744:	moveq	r0, #1
   2a748:	str	r0, [sp]
   2a74c:	ldr	r0, [sp]
   2a750:	tst	r0, #1
   2a754:	bne	2a6a4 <__assert_fail@plt+0x19210>
   2a758:	ldr	r0, [sp, #20]
   2a75c:	ldr	r0, [r0, #8]
   2a760:	str	r0, [sp, #20]
   2a764:	b	2a624 <__assert_fail@plt+0x19190>
   2a768:	ldr	r0, [fp, #-4]
   2a76c:	mov	sp, fp
   2a770:	pop	{fp, pc}
   2a774:	push	{fp, lr}
   2a778:	mov	fp, sp
   2a77c:	sub	sp, sp, #8
   2a780:	str	r0, [sp, #4]
   2a784:	str	r1, [sp]
   2a788:	ldr	r0, [sp]
   2a78c:	add	r0, r0, #20
   2a790:	bl	26708 <__assert_fail@plt+0x15274>
   2a794:	movw	r0, #0
   2a798:	mov	sp, fp
   2a79c:	pop	{fp, pc}
   2a7a0:	push	{fp, lr}
   2a7a4:	mov	fp, sp
   2a7a8:	sub	sp, sp, #168	; 0xa8
   2a7ac:	ldr	ip, [fp, #12]
   2a7b0:	ldr	lr, [fp, #8]
   2a7b4:	str	r0, [fp, #-8]
   2a7b8:	str	r1, [fp, #-12]
   2a7bc:	str	r2, [fp, #-16]
   2a7c0:	str	r3, [fp, #-20]	; 0xffffffec
   2a7c4:	ldr	r0, [fp, #-12]
   2a7c8:	ldr	r0, [r0]
   2a7cc:	str	r0, [fp, #-24]	; 0xffffffe8
   2a7d0:	ldr	r0, [fp, #-16]
   2a7d4:	ldrb	r0, [r0, #4]
   2a7d8:	sub	r0, r0, #1
   2a7dc:	cmp	r0, #35	; 0x23
   2a7e0:	str	lr, [fp, #-48]	; 0xffffffd0
   2a7e4:	str	ip, [fp, #-52]	; 0xffffffcc
   2a7e8:	str	r0, [fp, #-56]	; 0xffffffc8
   2a7ec:	bhi	2b0d4 <__assert_fail@plt+0x19c40>
   2a7f0:	add	r0, pc, #8
   2a7f4:	ldr	r1, [fp, #-56]	; 0xffffffc8
   2a7f8:	ldr	r0, [r0, r1, lsl #2]
   2a7fc:	mov	pc, r0
   2a800:	muleq	r2, r0, r8
   2a804:	strheq	fp, [r2], -r0
   2a808:	ldrdeq	fp, [r2], -r4
   2a80c:	strdeq	sl, [r2], -r0
   2a810:	andeq	sl, r2, r0, ror #29
   2a814:	ldrdeq	fp, [r2], -r4
   2a818:	ldrdeq	fp, [r2], -r4
   2a81c:	andeq	sl, r2, ip, lsl #20
   2a820:	andeq	sl, r2, r4, ror #24
   2a824:	strheq	fp, [r2], -r0
   2a828:	andeq	sl, r2, r8, ror #23
   2a82c:	andeq	sl, r2, r4, lsl #26
   2a830:	ldrdeq	fp, [r2], -r4
   2a834:	ldrdeq	fp, [r2], -r4
   2a838:	ldrdeq	fp, [r2], -r4
   2a83c:	ldrdeq	fp, [r2], -r4
   2a840:	ldrdeq	fp, [r2], -r4
   2a844:	andeq	sl, r2, r8, ror #23
   2a848:	andeq	sl, r2, r8, ror #23
   2a84c:	andeq	sl, r2, r4, lsl #21
   2a850:	ldrdeq	fp, [r2], -r4
   2a854:	ldrdeq	fp, [r2], -r4
   2a858:			; <UNDEFINED> instruction: 0x0002abbc
   2a85c:	andeq	sl, r2, r4, lsr #25
   2a860:	ldrdeq	fp, [r2], -r4
   2a864:	ldrdeq	fp, [r2], -r4
   2a868:	ldrdeq	fp, [r2], -r4
   2a86c:	ldrdeq	fp, [r2], -r4
   2a870:	ldrdeq	fp, [r2], -r4
   2a874:	ldrdeq	fp, [r2], -r4
   2a878:	ldrdeq	fp, [r2], -r4
   2a87c:	andeq	sl, r2, r0, asr pc
   2a880:	andeq	sl, r2, r0, asr pc
   2a884:	andeq	fp, r2, r0
   2a888:	andeq	fp, r2, r0
   2a88c:	strheq	fp, [r2], -ip
   2a890:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2a894:	ldr	r3, [fp, #-16]
   2a898:	movw	r1, #0
   2a89c:	str	r1, [fp, #-60]	; 0xffffffc4
   2a8a0:	ldr	r2, [fp, #-60]	; 0xffffffc4
   2a8a4:	bl	2b290 <__assert_fail@plt+0x19dfc>
   2a8a8:	str	r0, [fp, #-28]	; 0xffffffe4
   2a8ac:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2a8b0:	movw	r1, #0
   2a8b4:	cmp	r0, r1
   2a8b8:	bne	2a8d4 <__assert_fail@plt+0x19440>
   2a8bc:	ldr	r0, [fp, #12]
   2a8c0:	movw	r1, #12
   2a8c4:	str	r1, [r0]
   2a8c8:	movw	r0, #0
   2a8cc:	str	r0, [fp, #-4]
   2a8d0:	b	2b284 <__assert_fail@plt+0x19df0>
   2a8d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2a8d8:	ldr	r0, [r0, #92]	; 0x5c
   2a8dc:	cmp	r0, #1
   2a8e0:	ble	2aa08 <__assert_fail@plt+0x19574>
   2a8e4:	b	2a8e8 <__assert_fail@plt+0x19454>
   2a8e8:	ldr	r0, [fp, #-8]
   2a8ec:	ldr	r0, [r0, #56]	; 0x38
   2a8f0:	ldr	r1, [fp, #-8]
   2a8f4:	ldr	r1, [r1, #40]	; 0x28
   2a8f8:	cmp	r0, r1
   2a8fc:	movw	r0, #0
   2a900:	str	r0, [fp, #-64]	; 0xffffffc0
   2a904:	ble	2a95c <__assert_fail@plt+0x194c8>
   2a908:	ldr	r0, [fp, #-8]
   2a90c:	ldr	r0, [r0, #40]	; 0x28
   2a910:	ldr	r1, [fp, #-8]
   2a914:	ldr	r1, [r1, #28]
   2a918:	cmp	r0, r1
   2a91c:	movw	r0, #1
   2a920:	str	r0, [fp, #-68]	; 0xffffffbc
   2a924:	beq	2a94c <__assert_fail@plt+0x194b8>
   2a928:	ldr	r0, [fp, #-8]
   2a92c:	ldr	r1, [r0, #8]
   2a930:	ldr	r0, [r0, #40]	; 0x28
   2a934:	add	r0, r1, r0, lsl #2
   2a938:	ldr	r0, [r0]
   2a93c:	cmn	r0, #1
   2a940:	movw	r0, #0
   2a944:	movne	r0, #1
   2a948:	str	r0, [fp, #-68]	; 0xffffffbc
   2a94c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   2a950:	mvn	r1, #0
   2a954:	eor	r0, r0, r1
   2a958:	str	r0, [fp, #-64]	; 0xffffffc0
   2a95c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2a960:	tst	r0, #1
   2a964:	beq	2aa04 <__assert_fail@plt+0x19570>
   2a968:	ldr	r0, [fp, #-16]
   2a96c:	ldr	r1, [fp, #-8]
   2a970:	ldr	r2, [fp, #-20]	; 0xffffffec
   2a974:	bl	28f68 <__assert_fail@plt+0x17ad4>
   2a978:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2a97c:	ldr	r3, [fp, #-16]
   2a980:	movw	r1, #0
   2a984:	str	r1, [fp, #-72]	; 0xffffffb8
   2a988:	ldr	r2, [fp, #-72]	; 0xffffffb8
   2a98c:	bl	2b290 <__assert_fail@plt+0x19dfc>
   2a990:	str	r0, [fp, #-32]	; 0xffffffe0
   2a994:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2a998:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2a99c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2a9a0:	movw	r3, #16
   2a9a4:	bl	29200 <__assert_fail@plt+0x17d6c>
   2a9a8:	str	r0, [fp, #-28]	; 0xffffffe4
   2a9ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a9b0:	movw	r1, #0
   2a9b4:	cmp	r0, r1
   2a9b8:	movw	r0, #1
   2a9bc:	str	r0, [fp, #-76]	; 0xffffffb4
   2a9c0:	beq	2a9dc <__assert_fail@plt+0x19548>
   2a9c4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2a9c8:	movw	r1, #0
   2a9cc:	cmp	r0, r1
   2a9d0:	movw	r0, #0
   2a9d4:	moveq	r0, #1
   2a9d8:	str	r0, [fp, #-76]	; 0xffffffb4
   2a9dc:	ldr	r0, [fp, #-76]	; 0xffffffb4
   2a9e0:	tst	r0, #1
   2a9e4:	beq	2aa00 <__assert_fail@plt+0x1956c>
   2a9e8:	ldr	r0, [fp, #12]
   2a9ec:	movw	r1, #12
   2a9f0:	str	r1, [r0]
   2a9f4:	movw	r0, #0
   2a9f8:	str	r0, [fp, #-4]
   2a9fc:	b	2b284 <__assert_fail@plt+0x19df0>
   2aa00:	b	2a8e8 <__assert_fail@plt+0x19454>
   2aa04:	b	2aa08 <__assert_fail@plt+0x19574>
   2aa08:	b	2b0d4 <__assert_fail@plt+0x19c40>
   2aa0c:	ldr	r0, [fp, #-8]
   2aa10:	ldr	r1, [fp, #-12]
   2aa14:	ldr	r2, [fp, #-16]
   2aa18:	ldr	r3, [fp, #-20]	; 0xffffffec
   2aa1c:	ldr	ip, [fp, #8]
   2aa20:	add	ip, ip, #1
   2aa24:	ldr	lr, [fp, #12]
   2aa28:	str	ip, [sp]
   2aa2c:	str	lr, [sp, #4]
   2aa30:	bl	2b3f4 <__assert_fail@plt+0x19f60>
   2aa34:	str	r0, [fp, #-28]	; 0xffffffe4
   2aa38:	ldr	r0, [fp, #12]
   2aa3c:	ldr	r0, [r0]
   2aa40:	cmp	r0, #0
   2aa44:	movw	r0, #0
   2aa48:	str	r0, [fp, #-80]	; 0xffffffb0
   2aa4c:	beq	2aa68 <__assert_fail@plt+0x195d4>
   2aa50:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2aa54:	movw	r1, #0
   2aa58:	cmp	r0, r1
   2aa5c:	movw	r0, #0
   2aa60:	moveq	r0, #1
   2aa64:	str	r0, [fp, #-80]	; 0xffffffb0
   2aa68:	ldr	r0, [fp, #-80]	; 0xffffffb0
   2aa6c:	tst	r0, #1
   2aa70:	beq	2aa80 <__assert_fail@plt+0x195ec>
   2aa74:	movw	r0, #0
   2aa78:	str	r0, [fp, #-4]
   2aa7c:	b	2b284 <__assert_fail@plt+0x19df0>
   2aa80:	b	2b0d4 <__assert_fail@plt+0x19c40>
   2aa84:	ldr	r0, [fp, #-8]
   2aa88:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2aa8c:	ldr	r2, [fp, #-16]
   2aa90:	ldr	r3, [fp, #-20]	; 0xffffffec
   2aa94:	ldr	ip, [fp, #12]
   2aa98:	str	ip, [sp]
   2aa9c:	bl	2b5b8 <__assert_fail@plt+0x1a124>
   2aaa0:	str	r0, [fp, #-28]	; 0xffffffe4
   2aaa4:	ldr	r0, [fp, #12]
   2aaa8:	ldr	r0, [r0]
   2aaac:	cmp	r0, #0
   2aab0:	movw	r0, #0
   2aab4:	str	r0, [sp, #84]	; 0x54
   2aab8:	beq	2aad4 <__assert_fail@plt+0x19640>
   2aabc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2aac0:	movw	r1, #0
   2aac4:	cmp	r0, r1
   2aac8:	movw	r0, #0
   2aacc:	moveq	r0, #1
   2aad0:	str	r0, [sp, #84]	; 0x54
   2aad4:	ldr	r0, [sp, #84]	; 0x54
   2aad8:	tst	r0, #1
   2aadc:	beq	2aaec <__assert_fail@plt+0x19658>
   2aae0:	movw	r0, #0
   2aae4:	str	r0, [fp, #-4]
   2aae8:	b	2b284 <__assert_fail@plt+0x19df0>
   2aaec:	b	2b0d4 <__assert_fail@plt+0x19c40>
   2aaf0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2aaf4:	ldr	r0, [r0, #84]	; 0x54
   2aaf8:	ldr	r1, [fp, #-16]
   2aafc:	ldr	r1, [r1]
   2ab00:	movw	r2, #1
   2ab04:	lsl	r1, r2, r1
   2ab08:	and	r0, r0, r1
   2ab0c:	cmp	r0, #0
   2ab10:	bne	2ab2c <__assert_fail@plt+0x19698>
   2ab14:	ldr	r0, [fp, #12]
   2ab18:	movw	r1, #6
   2ab1c:	str	r1, [r0]
   2ab20:	movw	r0, #0
   2ab24:	str	r0, [fp, #-4]
   2ab28:	b	2b284 <__assert_fail@plt+0x19df0>
   2ab2c:	ldr	r0, [fp, #-16]
   2ab30:	ldr	r0, [r0]
   2ab34:	movw	r1, #1
   2ab38:	lsl	r0, r1, r0
   2ab3c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2ab40:	ldr	r2, [r1, #80]	; 0x50
   2ab44:	orr	r0, r2, r0
   2ab48:	str	r0, [r1, #80]	; 0x50
   2ab4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ab50:	ldr	r3, [fp, #-16]
   2ab54:	movw	r1, #0
   2ab58:	str	r1, [sp, #80]	; 0x50
   2ab5c:	ldr	r2, [sp, #80]	; 0x50
   2ab60:	bl	2b290 <__assert_fail@plt+0x19dfc>
   2ab64:	str	r0, [fp, #-28]	; 0xffffffe4
   2ab68:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2ab6c:	movw	r1, #0
   2ab70:	cmp	r0, r1
   2ab74:	bne	2ab90 <__assert_fail@plt+0x196fc>
   2ab78:	ldr	r0, [fp, #12]
   2ab7c:	movw	r1, #12
   2ab80:	str	r1, [r0]
   2ab84:	movw	r0, #0
   2ab88:	str	r0, [fp, #-4]
   2ab8c:	b	2b284 <__assert_fail@plt+0x19df0>
   2ab90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ab94:	ldr	r1, [r0, #76]	; 0x4c
   2ab98:	add	r1, r1, #1
   2ab9c:	str	r1, [r0, #76]	; 0x4c
   2aba0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2aba4:	ldrb	r1, [r0, #88]	; 0x58
   2aba8:	bic	r1, r1, #2
   2abac:	movw	r2, #2
   2abb0:	orr	r1, r1, r2
   2abb4:	strb	r1, [r0, #88]	; 0x58
   2abb8:	b	2b0d4 <__assert_fail@plt+0x19c40>
   2abbc:	ldr	r0, [fp, #-20]	; 0xffffffec
   2abc0:	and	r0, r0, #16777216	; 0x1000000
   2abc4:	cmp	r0, #0
   2abc8:	beq	2abe4 <__assert_fail@plt+0x19750>
   2abcc:	ldr	r0, [fp, #12]
   2abd0:	movw	r1, #13
   2abd4:	str	r1, [r0]
   2abd8:	movw	r0, #0
   2abdc:	str	r0, [fp, #-4]
   2abe0:	b	2b284 <__assert_fail@plt+0x19df0>
   2abe4:	b	2abe8 <__assert_fail@plt+0x19754>
   2abe8:	ldr	r0, [fp, #-20]	; 0xffffffec
   2abec:	and	r0, r0, #32
   2abf0:	cmp	r0, #0
   2abf4:	beq	2ac10 <__assert_fail@plt+0x1977c>
   2abf8:	ldr	r0, [fp, #12]
   2abfc:	movw	r1, #13
   2ac00:	str	r1, [r0]
   2ac04:	movw	r0, #0
   2ac08:	str	r0, [fp, #-4]
   2ac0c:	b	2b284 <__assert_fail@plt+0x19df0>
   2ac10:	ldr	r0, [fp, #-20]	; 0xffffffec
   2ac14:	and	r0, r0, #16
   2ac18:	cmp	r0, #0
   2ac1c:	beq	2ac5c <__assert_fail@plt+0x197c8>
   2ac20:	ldr	r0, [fp, #-16]
   2ac24:	ldr	r1, [fp, #-8]
   2ac28:	ldr	r2, [fp, #-20]	; 0xffffffec
   2ac2c:	bl	28f68 <__assert_fail@plt+0x17ad4>
   2ac30:	ldr	r0, [fp, #-8]
   2ac34:	ldr	r1, [fp, #-12]
   2ac38:	ldr	r2, [fp, #-16]
   2ac3c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2ac40:	ldr	lr, [fp, #8]
   2ac44:	ldr	ip, [fp, #12]
   2ac48:	str	lr, [sp]
   2ac4c:	str	ip, [sp, #4]
   2ac50:	bl	2a7a0 <__assert_fail@plt+0x1930c>
   2ac54:	str	r0, [fp, #-4]
   2ac58:	b	2b284 <__assert_fail@plt+0x19df0>
   2ac5c:	b	2ac60 <__assert_fail@plt+0x197cc>
   2ac60:	b	2ac64 <__assert_fail@plt+0x197d0>
   2ac64:	ldr	r0, [fp, #-16]
   2ac68:	ldr	r0, [r0, #4]
   2ac6c:	and	r0, r0, #255	; 0xff
   2ac70:	cmp	r0, #9
   2ac74:	bne	2aca0 <__assert_fail@plt+0x1980c>
   2ac78:	ldr	r0, [fp, #-20]	; 0xffffffec
   2ac7c:	and	r0, r0, #131072	; 0x20000
   2ac80:	cmp	r0, #0
   2ac84:	bne	2aca0 <__assert_fail@plt+0x1980c>
   2ac88:	ldr	r0, [fp, #12]
   2ac8c:	movw	r1, #16
   2ac90:	str	r1, [r0]
   2ac94:	movw	r0, #0
   2ac98:	str	r0, [fp, #-4]
   2ac9c:	b	2b284 <__assert_fail@plt+0x19df0>
   2aca0:	b	2aca4 <__assert_fail@plt+0x19810>
   2aca4:	ldr	r0, [fp, #-16]
   2aca8:	ldr	r1, [r0, #4]
   2acac:	mvn	r2, #255	; 0xff
   2acb0:	and	r1, r1, r2
   2acb4:	orr	r1, r1, #1
   2acb8:	str	r1, [r0, #4]
   2acbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2acc0:	ldr	r3, [fp, #-16]
   2acc4:	movw	r1, #0
   2acc8:	str	r1, [sp, #76]	; 0x4c
   2accc:	ldr	r2, [sp, #76]	; 0x4c
   2acd0:	bl	2b290 <__assert_fail@plt+0x19dfc>
   2acd4:	str	r0, [fp, #-28]	; 0xffffffe4
   2acd8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2acdc:	movw	r1, #0
   2ace0:	cmp	r0, r1
   2ace4:	bne	2ad00 <__assert_fail@plt+0x1986c>
   2ace8:	ldr	r0, [fp, #12]
   2acec:	movw	r1, #12
   2acf0:	str	r1, [r0]
   2acf4:	movw	r0, #0
   2acf8:	str	r0, [fp, #-4]
   2acfc:	b	2b284 <__assert_fail@plt+0x19df0>
   2ad00:	b	2b0d4 <__assert_fail@plt+0x19c40>
   2ad04:	ldr	r0, [fp, #-16]
   2ad08:	ldr	r0, [r0]
   2ad0c:	movw	r1, #783	; 0x30f
   2ad10:	and	r0, r0, r1
   2ad14:	cmp	r0, #0
   2ad18:	beq	2ad3c <__assert_fail@plt+0x198a8>
   2ad1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ad20:	ldrb	r0, [r0, #88]	; 0x58
   2ad24:	ubfx	r0, r0, #4, #1
   2ad28:	and	r0, r0, #255	; 0xff
   2ad2c:	cmp	r0, #0
   2ad30:	bne	2ad3c <__assert_fail@plt+0x198a8>
   2ad34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ad38:	bl	2bee8 <__assert_fail@plt+0x1aa54>
   2ad3c:	ldr	r0, [fp, #-16]
   2ad40:	ldr	r0, [r0]
   2ad44:	cmp	r0, #256	; 0x100
   2ad48:	beq	2ad5c <__assert_fail@plt+0x198c8>
   2ad4c:	ldr	r0, [fp, #-16]
   2ad50:	ldr	r0, [r0]
   2ad54:	cmp	r0, #512	; 0x200
   2ad58:	bne	2ae7c <__assert_fail@plt+0x199e8>
   2ad5c:	ldr	r0, [fp, #-16]
   2ad60:	ldr	r0, [r0]
   2ad64:	cmp	r0, #256	; 0x100
   2ad68:	bne	2ada4 <__assert_fail@plt+0x19910>
   2ad6c:	ldr	r0, [fp, #-16]
   2ad70:	movw	r1, #6
   2ad74:	str	r1, [r0]
   2ad78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ad7c:	ldr	r3, [fp, #-16]
   2ad80:	movw	r1, #0
   2ad84:	str	r1, [sp, #72]	; 0x48
   2ad88:	ldr	r2, [sp, #72]	; 0x48
   2ad8c:	bl	2b290 <__assert_fail@plt+0x19dfc>
   2ad90:	str	r0, [fp, #-36]	; 0xffffffdc
   2ad94:	ldr	r0, [fp, #-16]
   2ad98:	movw	r1, #9
   2ad9c:	str	r1, [r0]
   2ada0:	b	2add8 <__assert_fail@plt+0x19944>
   2ada4:	ldr	r0, [fp, #-16]
   2ada8:	movw	r1, #5
   2adac:	str	r1, [r0]
   2adb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2adb4:	ldr	r3, [fp, #-16]
   2adb8:	movw	r1, #0
   2adbc:	str	r1, [sp, #68]	; 0x44
   2adc0:	ldr	r2, [sp, #68]	; 0x44
   2adc4:	bl	2b290 <__assert_fail@plt+0x19dfc>
   2adc8:	str	r0, [fp, #-36]	; 0xffffffdc
   2adcc:	ldr	r0, [fp, #-16]
   2add0:	movw	r1, #10
   2add4:	str	r1, [r0]
   2add8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2addc:	ldr	r3, [fp, #-16]
   2ade0:	movw	r1, #0
   2ade4:	str	r1, [sp, #64]	; 0x40
   2ade8:	ldr	r2, [sp, #64]	; 0x40
   2adec:	bl	2b290 <__assert_fail@plt+0x19dfc>
   2adf0:	str	r0, [fp, #-40]	; 0xffffffd8
   2adf4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2adf8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2adfc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2ae00:	movw	r3, #10
   2ae04:	bl	29200 <__assert_fail@plt+0x17d6c>
   2ae08:	str	r0, [fp, #-28]	; 0xffffffe4
   2ae0c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2ae10:	movw	r1, #0
   2ae14:	cmp	r0, r1
   2ae18:	movw	r0, #1
   2ae1c:	str	r0, [sp, #60]	; 0x3c
   2ae20:	beq	2ae54 <__assert_fail@plt+0x199c0>
   2ae24:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2ae28:	movw	r1, #0
   2ae2c:	cmp	r0, r1
   2ae30:	movw	r0, #1
   2ae34:	str	r0, [sp, #60]	; 0x3c
   2ae38:	beq	2ae54 <__assert_fail@plt+0x199c0>
   2ae3c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2ae40:	movw	r1, #0
   2ae44:	cmp	r0, r1
   2ae48:	movw	r0, #0
   2ae4c:	moveq	r0, #1
   2ae50:	str	r0, [sp, #60]	; 0x3c
   2ae54:	ldr	r0, [sp, #60]	; 0x3c
   2ae58:	tst	r0, #1
   2ae5c:	beq	2ae78 <__assert_fail@plt+0x199e4>
   2ae60:	ldr	r0, [fp, #12]
   2ae64:	movw	r1, #12
   2ae68:	str	r1, [r0]
   2ae6c:	movw	r0, #0
   2ae70:	str	r0, [fp, #-4]
   2ae74:	b	2b284 <__assert_fail@plt+0x19df0>
   2ae78:	b	2aec4 <__assert_fail@plt+0x19a30>
   2ae7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ae80:	ldr	r3, [fp, #-16]
   2ae84:	movw	r1, #0
   2ae88:	str	r1, [sp, #56]	; 0x38
   2ae8c:	ldr	r2, [sp, #56]	; 0x38
   2ae90:	bl	2b290 <__assert_fail@plt+0x19dfc>
   2ae94:	str	r0, [fp, #-28]	; 0xffffffe4
   2ae98:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2ae9c:	movw	r1, #0
   2aea0:	cmp	r0, r1
   2aea4:	bne	2aec0 <__assert_fail@plt+0x19a2c>
   2aea8:	ldr	r0, [fp, #12]
   2aeac:	movw	r1, #12
   2aeb0:	str	r1, [r0]
   2aeb4:	movw	r0, #0
   2aeb8:	str	r0, [fp, #-4]
   2aebc:	b	2b284 <__assert_fail@plt+0x19df0>
   2aec0:	b	2aec4 <__assert_fail@plt+0x19a30>
   2aec4:	ldr	r0, [fp, #-16]
   2aec8:	ldr	r1, [fp, #-8]
   2aecc:	ldr	r2, [fp, #-20]	; 0xffffffec
   2aed0:	bl	28f68 <__assert_fail@plt+0x17ad4>
   2aed4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2aed8:	str	r0, [fp, #-4]
   2aedc:	b	2b284 <__assert_fail@plt+0x19df0>
   2aee0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2aee4:	ldr	r3, [fp, #-16]
   2aee8:	movw	r1, #0
   2aeec:	str	r1, [sp, #52]	; 0x34
   2aef0:	ldr	r2, [sp, #52]	; 0x34
   2aef4:	bl	2b290 <__assert_fail@plt+0x19dfc>
   2aef8:	str	r0, [fp, #-28]	; 0xffffffe4
   2aefc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2af00:	movw	r1, #0
   2af04:	cmp	r0, r1
   2af08:	bne	2af24 <__assert_fail@plt+0x19a90>
   2af0c:	ldr	r0, [fp, #12]
   2af10:	movw	r1, #12
   2af14:	str	r1, [r0]
   2af18:	movw	r0, #0
   2af1c:	str	r0, [fp, #-4]
   2af20:	b	2b284 <__assert_fail@plt+0x19df0>
   2af24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2af28:	ldr	r0, [r0, #92]	; 0x5c
   2af2c:	cmp	r0, #1
   2af30:	ble	2af4c <__assert_fail@plt+0x19ab8>
   2af34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2af38:	ldrb	r1, [r0, #88]	; 0x58
   2af3c:	bic	r1, r1, #2
   2af40:	movw	r2, #2
   2af44:	orr	r1, r1, r2
   2af48:	strb	r1, [r0, #88]	; 0x58
   2af4c:	b	2b0d4 <__assert_fail@plt+0x19c40>
   2af50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2af54:	ldr	r1, [fp, #-8]
   2af58:	ldr	r1, [r1, #64]	; 0x40
   2af5c:	ldr	r2, [fp, #-16]
   2af60:	ldr	r2, [r2, #4]
   2af64:	and	r2, r2, #255	; 0xff
   2af68:	cmp	r2, #33	; 0x21
   2af6c:	movw	r2, #0
   2af70:	moveq	r2, #1
   2af74:	ldr	r3, [fp, #12]
   2af78:	movw	ip, #23228	; 0x5abc
   2af7c:	movt	ip, #4
   2af80:	str	r2, [sp, #48]	; 0x30
   2af84:	mov	r2, ip
   2af88:	movw	ip, #16781	; 0x418d
   2af8c:	movt	ip, #4
   2af90:	str	r3, [sp, #44]	; 0x2c
   2af94:	mov	r3, ip
   2af98:	ldr	ip, [sp, #48]	; 0x30
   2af9c:	and	lr, ip, #1
   2afa0:	str	lr, [sp]
   2afa4:	ldr	lr, [sp, #44]	; 0x2c
   2afa8:	str	lr, [sp, #4]
   2afac:	bl	2c098 <__assert_fail@plt+0x1ac04>
   2afb0:	str	r0, [fp, #-28]	; 0xffffffe4
   2afb4:	ldr	r0, [fp, #12]
   2afb8:	ldr	r0, [r0]
   2afbc:	cmp	r0, #0
   2afc0:	movw	r0, #0
   2afc4:	str	r0, [sp, #40]	; 0x28
   2afc8:	beq	2afe4 <__assert_fail@plt+0x19b50>
   2afcc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2afd0:	movw	r1, #0
   2afd4:	cmp	r0, r1
   2afd8:	movw	r0, #0
   2afdc:	moveq	r0, #1
   2afe0:	str	r0, [sp, #40]	; 0x28
   2afe4:	ldr	r0, [sp, #40]	; 0x28
   2afe8:	tst	r0, #1
   2afec:	beq	2affc <__assert_fail@plt+0x19b68>
   2aff0:	movw	r0, #0
   2aff4:	str	r0, [fp, #-4]
   2aff8:	b	2b284 <__assert_fail@plt+0x19df0>
   2affc:	b	2b0d4 <__assert_fail@plt+0x19c40>
   2b000:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2b004:	ldr	r1, [fp, #-8]
   2b008:	ldr	r1, [r1, #64]	; 0x40
   2b00c:	ldr	r2, [fp, #-16]
   2b010:	ldr	r2, [r2, #4]
   2b014:	and	r2, r2, #255	; 0xff
   2b018:	cmp	r2, #35	; 0x23
   2b01c:	movw	r2, #0
   2b020:	moveq	r2, #1
   2b024:	ldr	r3, [fp, #12]
   2b028:	movw	ip, #23234	; 0x5ac2
   2b02c:	movt	ip, #4
   2b030:	str	r2, [sp, #36]	; 0x24
   2b034:	mov	r2, ip
   2b038:	movw	ip, #16931	; 0x4223
   2b03c:	movt	ip, #4
   2b040:	str	r3, [sp, #32]
   2b044:	mov	r3, ip
   2b048:	ldr	ip, [sp, #36]	; 0x24
   2b04c:	and	lr, ip, #1
   2b050:	str	lr, [sp]
   2b054:	ldr	lr, [sp, #32]
   2b058:	str	lr, [sp, #4]
   2b05c:	bl	2c098 <__assert_fail@plt+0x1ac04>
   2b060:	str	r0, [fp, #-28]	; 0xffffffe4
   2b064:	ldr	r0, [fp, #12]
   2b068:	ldr	r0, [r0]
   2b06c:	cmp	r0, #0
   2b070:	movw	r0, #0
   2b074:	str	r0, [sp, #28]
   2b078:	beq	2b094 <__assert_fail@plt+0x19c00>
   2b07c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2b080:	movw	r1, #0
   2b084:	cmp	r0, r1
   2b088:	movw	r0, #0
   2b08c:	moveq	r0, #1
   2b090:	str	r0, [sp, #28]
   2b094:	ldr	r0, [sp, #28]
   2b098:	tst	r0, #1
   2b09c:	beq	2b0ac <__assert_fail@plt+0x19c18>
   2b0a0:	movw	r0, #0
   2b0a4:	str	r0, [fp, #-4]
   2b0a8:	b	2b284 <__assert_fail@plt+0x19df0>
   2b0ac:	b	2b0d4 <__assert_fail@plt+0x19c40>
   2b0b0:	movw	r0, #0
   2b0b4:	str	r0, [fp, #-4]
   2b0b8:	b	2b284 <__assert_fail@plt+0x19df0>
   2b0bc:	ldr	r0, [fp, #12]
   2b0c0:	movw	r1, #5
   2b0c4:	str	r1, [r0]
   2b0c8:	movw	r0, #0
   2b0cc:	str	r0, [fp, #-4]
   2b0d0:	b	2b284 <__assert_fail@plt+0x19df0>
   2b0d4:	ldr	r0, [fp, #-16]
   2b0d8:	ldr	r1, [fp, #-8]
   2b0dc:	ldr	r2, [fp, #-20]	; 0xffffffec
   2b0e0:	bl	28f68 <__assert_fail@plt+0x17ad4>
   2b0e4:	ldr	r0, [fp, #-16]
   2b0e8:	ldr	r0, [r0, #4]
   2b0ec:	and	r0, r0, #255	; 0xff
   2b0f0:	cmp	r0, #11
   2b0f4:	movw	r0, #1
   2b0f8:	str	r0, [sp, #24]
   2b0fc:	beq	2b154 <__assert_fail@plt+0x19cc0>
   2b100:	ldr	r0, [fp, #-16]
   2b104:	ldr	r0, [r0, #4]
   2b108:	and	r0, r0, #255	; 0xff
   2b10c:	cmp	r0, #18
   2b110:	movw	r0, #1
   2b114:	str	r0, [sp, #24]
   2b118:	beq	2b154 <__assert_fail@plt+0x19cc0>
   2b11c:	ldr	r0, [fp, #-16]
   2b120:	ldr	r0, [r0, #4]
   2b124:	and	r0, r0, #255	; 0xff
   2b128:	cmp	r0, #19
   2b12c:	movw	r0, #1
   2b130:	str	r0, [sp, #24]
   2b134:	beq	2b154 <__assert_fail@plt+0x19cc0>
   2b138:	ldr	r0, [fp, #-16]
   2b13c:	ldr	r0, [r0, #4]
   2b140:	and	r0, r0, #255	; 0xff
   2b144:	cmp	r0, #23
   2b148:	movw	r0, #0
   2b14c:	moveq	r0, #1
   2b150:	str	r0, [sp, #24]
   2b154:	ldr	r0, [sp, #24]
   2b158:	tst	r0, #1
   2b15c:	beq	2b27c <__assert_fail@plt+0x19de8>
   2b160:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2b164:	ldr	r1, [fp, #-8]
   2b168:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2b16c:	ldr	r3, [fp, #-16]
   2b170:	ldr	ip, [fp, #-20]	; 0xffffffec
   2b174:	ldr	lr, [fp, #12]
   2b178:	str	ip, [sp]
   2b17c:	str	lr, [sp, #4]
   2b180:	bl	2c3cc <__assert_fail@plt+0x1af38>
   2b184:	str	r0, [fp, #-44]	; 0xffffffd4
   2b188:	ldr	r0, [fp, #12]
   2b18c:	ldr	r0, [r0]
   2b190:	cmp	r0, #0
   2b194:	movw	r0, #0
   2b198:	str	r0, [sp, #20]
   2b19c:	beq	2b1b8 <__assert_fail@plt+0x19d24>
   2b1a0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2b1a4:	movw	r1, #0
   2b1a8:	cmp	r0, r1
   2b1ac:	movw	r0, #0
   2b1b0:	moveq	r0, #1
   2b1b4:	str	r0, [sp, #20]
   2b1b8:	ldr	r0, [sp, #20]
   2b1bc:	tst	r0, #1
   2b1c0:	beq	2b1f8 <__assert_fail@plt+0x19d64>
   2b1c4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2b1c8:	movw	r1, #0
   2b1cc:	cmp	r0, r1
   2b1d0:	beq	2b1ec <__assert_fail@plt+0x19d58>
   2b1d4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2b1d8:	movw	r1, #42868	; 0xa774
   2b1dc:	movt	r1, #2
   2b1e0:	movw	r2, #0
   2b1e4:	bl	2a604 <__assert_fail@plt+0x19170>
   2b1e8:	str	r0, [sp, #16]
   2b1ec:	movw	r0, #0
   2b1f0:	str	r0, [fp, #-4]
   2b1f4:	b	2b284 <__assert_fail@plt+0x19df0>
   2b1f8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2b1fc:	str	r0, [fp, #-28]	; 0xffffffe4
   2b200:	ldr	r0, [fp, #-20]	; 0xffffffec
   2b204:	and	r0, r0, #16777216	; 0x1000000
   2b208:	cmp	r0, #0
   2b20c:	beq	2b278 <__assert_fail@plt+0x19de4>
   2b210:	ldr	r0, [fp, #-16]
   2b214:	ldr	r0, [r0, #4]
   2b218:	and	r0, r0, #255	; 0xff
   2b21c:	cmp	r0, #11
   2b220:	beq	2b238 <__assert_fail@plt+0x19da4>
   2b224:	ldr	r0, [fp, #-16]
   2b228:	ldr	r0, [r0, #4]
   2b22c:	and	r0, r0, #255	; 0xff
   2b230:	cmp	r0, #23
   2b234:	bne	2b278 <__assert_fail@plt+0x19de4>
   2b238:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2b23c:	movw	r1, #0
   2b240:	cmp	r0, r1
   2b244:	beq	2b260 <__assert_fail@plt+0x19dcc>
   2b248:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2b24c:	movw	r1, #42868	; 0xa774
   2b250:	movt	r1, #2
   2b254:	movw	r2, #0
   2b258:	bl	2a604 <__assert_fail@plt+0x19170>
   2b25c:	str	r0, [sp, #12]
   2b260:	ldr	r0, [fp, #12]
   2b264:	movw	r1, #13
   2b268:	str	r1, [r0]
   2b26c:	movw	r0, #0
   2b270:	str	r0, [fp, #-4]
   2b274:	b	2b284 <__assert_fail@plt+0x19df0>
   2b278:	b	2b0e4 <__assert_fail@plt+0x19c50>
   2b27c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2b280:	str	r0, [fp, #-4]
   2b284:	ldr	r0, [fp, #-4]
   2b288:	mov	sp, fp
   2b28c:	pop	{fp, pc}
   2b290:	push	{fp, lr}
   2b294:	mov	fp, sp
   2b298:	sub	sp, sp, #32
   2b29c:	str	r0, [fp, #-8]
   2b2a0:	str	r1, [fp, #-12]
   2b2a4:	str	r2, [sp, #16]
   2b2a8:	str	r3, [sp, #12]
   2b2ac:	ldr	r0, [fp, #-8]
   2b2b0:	ldr	r0, [r0, #64]	; 0x40
   2b2b4:	cmp	r0, #31
   2b2b8:	bne	2b30c <__assert_fail@plt+0x19e78>
   2b2bc:	movw	r0, #996	; 0x3e4
   2b2c0:	bl	3fbd8 <__assert_fail@plt+0x2e744>
   2b2c4:	str	r0, [sp, #4]
   2b2c8:	ldr	r0, [sp, #4]
   2b2cc:	movw	lr, #0
   2b2d0:	cmp	r0, lr
   2b2d4:	bne	2b2e4 <__assert_fail@plt+0x19e50>
   2b2d8:	movw	r0, #0
   2b2dc:	str	r0, [fp, #-4]
   2b2e0:	b	2b3e8 <__assert_fail@plt+0x19f54>
   2b2e4:	ldr	r0, [fp, #-8]
   2b2e8:	ldr	r0, [r0, #56]	; 0x38
   2b2ec:	ldr	r1, [sp, #4]
   2b2f0:	str	r0, [r1]
   2b2f4:	ldr	r0, [sp, #4]
   2b2f8:	ldr	r1, [fp, #-8]
   2b2fc:	str	r0, [r1, #56]	; 0x38
   2b300:	ldr	r0, [fp, #-8]
   2b304:	movw	r1, #0
   2b308:	str	r1, [r0, #64]	; 0x40
   2b30c:	ldr	r0, [fp, #-8]
   2b310:	ldr	r1, [r0, #56]	; 0x38
   2b314:	ldr	r2, [r0, #64]	; 0x40
   2b318:	add	r1, r1, #4
   2b31c:	add	r3, r2, #1
   2b320:	str	r3, [r0, #64]	; 0x40
   2b324:	add	r0, r1, r2, lsl #5
   2b328:	str	r0, [sp, #8]
   2b32c:	ldr	r0, [sp, #8]
   2b330:	movw	r1, #0
   2b334:	str	r1, [r0]
   2b338:	ldr	r0, [fp, #-12]
   2b33c:	ldr	r2, [sp, #8]
   2b340:	str	r0, [r2, #4]
   2b344:	ldr	r0, [sp, #16]
   2b348:	ldr	r2, [sp, #8]
   2b34c:	str	r0, [r2, #8]
   2b350:	ldr	r0, [sp, #8]
   2b354:	ldr	r2, [sp, #12]
   2b358:	ldr	r3, [r2]
   2b35c:	str	r3, [r0, #20]
   2b360:	ldr	r2, [r2, #4]
   2b364:	str	r2, [r0, #24]
   2b368:	ldr	r0, [sp, #8]
   2b36c:	ldr	r2, [r0, #24]
   2b370:	mvn	r3, #262144	; 0x40000
   2b374:	and	r2, r2, r3
   2b378:	str	r2, [r0, #24]
   2b37c:	ldr	r0, [sp, #8]
   2b380:	ldr	r2, [r0, #24]
   2b384:	mvn	r3, #524288	; 0x80000
   2b388:	and	r2, r2, r3
   2b38c:	str	r2, [r0, #24]
   2b390:	ldr	r0, [sp, #8]
   2b394:	str	r1, [r0, #12]
   2b398:	ldr	r0, [sp, #8]
   2b39c:	str	r1, [r0, #16]
   2b3a0:	ldr	r0, [sp, #8]
   2b3a4:	mvn	r2, #0
   2b3a8:	str	r2, [r0, #28]
   2b3ac:	ldr	r0, [fp, #-12]
   2b3b0:	cmp	r0, r1
   2b3b4:	beq	2b3c4 <__assert_fail@plt+0x19f30>
   2b3b8:	ldr	r0, [sp, #8]
   2b3bc:	ldr	r1, [fp, #-12]
   2b3c0:	str	r0, [r1]
   2b3c4:	ldr	r0, [sp, #16]
   2b3c8:	movw	r1, #0
   2b3cc:	cmp	r0, r1
   2b3d0:	beq	2b3e0 <__assert_fail@plt+0x19f4c>
   2b3d4:	ldr	r0, [sp, #8]
   2b3d8:	ldr	r1, [sp, #16]
   2b3dc:	str	r0, [r1]
   2b3e0:	ldr	r0, [sp, #8]
   2b3e4:	str	r0, [fp, #-4]
   2b3e8:	ldr	r0, [fp, #-4]
   2b3ec:	mov	sp, fp
   2b3f0:	pop	{fp, pc}
   2b3f4:	push	{fp, lr}
   2b3f8:	mov	fp, sp
   2b3fc:	sub	sp, sp, #56	; 0x38
   2b400:	ldr	ip, [fp, #12]
   2b404:	ldr	lr, [fp, #8]
   2b408:	str	r0, [fp, #-8]
   2b40c:	str	r1, [fp, #-12]
   2b410:	str	r2, [fp, #-16]
   2b414:	str	r3, [fp, #-20]	; 0xffffffec
   2b418:	ldr	r0, [fp, #-12]
   2b41c:	ldr	r0, [r0]
   2b420:	str	r0, [fp, #-24]	; 0xffffffe8
   2b424:	ldr	r0, [fp, #-12]
   2b428:	ldr	r1, [r0, #24]
   2b42c:	add	r2, r1, #1
   2b430:	str	r2, [r0, #24]
   2b434:	str	r1, [sp, #24]
   2b438:	ldr	r0, [fp, #-16]
   2b43c:	ldr	r1, [fp, #-8]
   2b440:	ldr	r2, [fp, #-20]	; 0xffffffec
   2b444:	orr	r2, r2, #8388608	; 0x800000
   2b448:	str	lr, [sp, #20]
   2b44c:	str	ip, [sp, #16]
   2b450:	bl	28f68 <__assert_fail@plt+0x17ad4>
   2b454:	ldr	r0, [fp, #-16]
   2b458:	ldr	r0, [r0, #4]
   2b45c:	and	r0, r0, #255	; 0xff
   2b460:	cmp	r0, #9
   2b464:	bne	2b474 <__assert_fail@plt+0x19fe0>
   2b468:	movw	r0, #0
   2b46c:	str	r0, [sp, #28]
   2b470:	b	2b530 <__assert_fail@plt+0x1a09c>
   2b474:	ldr	r0, [fp, #-8]
   2b478:	ldr	r1, [fp, #-12]
   2b47c:	ldr	r2, [fp, #-16]
   2b480:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b484:	ldr	ip, [fp, #8]
   2b488:	ldr	lr, [fp, #12]
   2b48c:	str	ip, [sp]
   2b490:	str	lr, [sp, #4]
   2b494:	bl	28fa8 <__assert_fail@plt+0x17b14>
   2b498:	str	r0, [sp, #28]
   2b49c:	ldr	r0, [fp, #12]
   2b4a0:	ldr	r0, [r0]
   2b4a4:	cmp	r0, #0
   2b4a8:	movw	r0, #0
   2b4ac:	str	r0, [sp, #12]
   2b4b0:	bne	2b4d0 <__assert_fail@plt+0x1a03c>
   2b4b4:	ldr	r0, [fp, #-16]
   2b4b8:	ldr	r0, [r0, #4]
   2b4bc:	and	r0, r0, #255	; 0xff
   2b4c0:	cmp	r0, #9
   2b4c4:	movw	r0, #0
   2b4c8:	movne	r0, #1
   2b4cc:	str	r0, [sp, #12]
   2b4d0:	ldr	r0, [sp, #12]
   2b4d4:	tst	r0, #1
   2b4d8:	beq	2b510 <__assert_fail@plt+0x1a07c>
   2b4dc:	ldr	r0, [sp, #28]
   2b4e0:	movw	r1, #0
   2b4e4:	cmp	r0, r1
   2b4e8:	beq	2b504 <__assert_fail@plt+0x1a070>
   2b4ec:	ldr	r0, [sp, #28]
   2b4f0:	movw	r1, #42868	; 0xa774
   2b4f4:	movt	r1, #2
   2b4f8:	movw	r2, #0
   2b4fc:	bl	2a604 <__assert_fail@plt+0x19170>
   2b500:	str	r0, [sp, #8]
   2b504:	ldr	r0, [fp, #12]
   2b508:	movw	r1, #8
   2b50c:	str	r1, [r0]
   2b510:	ldr	r0, [fp, #12]
   2b514:	ldr	r0, [r0]
   2b518:	cmp	r0, #0
   2b51c:	beq	2b52c <__assert_fail@plt+0x1a098>
   2b520:	movw	r0, #0
   2b524:	str	r0, [fp, #-4]
   2b528:	b	2b5ac <__assert_fail@plt+0x1a118>
   2b52c:	b	2b530 <__assert_fail@plt+0x1a09c>
   2b530:	ldr	r0, [sp, #24]
   2b534:	cmp	r0, #8
   2b538:	bhi	2b558 <__assert_fail@plt+0x1a0c4>
   2b53c:	ldr	r0, [sp, #24]
   2b540:	movw	r1, #1
   2b544:	lsl	r0, r1, r0
   2b548:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2b54c:	ldr	r2, [r1, #84]	; 0x54
   2b550:	orr	r0, r2, r0
   2b554:	str	r0, [r1, #84]	; 0x54
   2b558:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2b55c:	ldr	r1, [sp, #28]
   2b560:	movw	r2, #0
   2b564:	movw	r3, #17
   2b568:	bl	29200 <__assert_fail@plt+0x17d6c>
   2b56c:	str	r0, [sp, #28]
   2b570:	ldr	r0, [sp, #28]
   2b574:	movw	r1, #0
   2b578:	cmp	r0, r1
   2b57c:	bne	2b598 <__assert_fail@plt+0x1a104>
   2b580:	ldr	r0, [fp, #12]
   2b584:	movw	r1, #12
   2b588:	str	r1, [r0]
   2b58c:	movw	r0, #0
   2b590:	str	r0, [fp, #-4]
   2b594:	b	2b5ac <__assert_fail@plt+0x1a118>
   2b598:	ldr	r0, [sp, #24]
   2b59c:	ldr	r1, [sp, #28]
   2b5a0:	str	r0, [r1, #20]
   2b5a4:	ldr	r0, [sp, #28]
   2b5a8:	str	r0, [fp, #-4]
   2b5ac:	ldr	r0, [fp, #-4]
   2b5b0:	mov	sp, fp
   2b5b4:	pop	{fp, pc}
   2b5b8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2b5bc:	add	fp, sp, #24
   2b5c0:	sub	sp, sp, #296	; 0x128
   2b5c4:	ldr	ip, [fp, #8]
   2b5c8:	str	r0, [fp, #-32]	; 0xffffffe0
   2b5cc:	str	r1, [fp, #-36]	; 0xffffffdc
   2b5d0:	str	r2, [fp, #-40]	; 0xffffffd8
   2b5d4:	str	r3, [fp, #-44]	; 0xffffffd4
   2b5d8:	movw	r0, #0
   2b5dc:	str	r0, [fp, #-48]	; 0xffffffd0
   2b5e0:	str	r0, [fp, #-52]	; 0xffffffcc
   2b5e4:	str	r0, [fp, #-56]	; 0xffffffc8
   2b5e8:	str	r0, [fp, #-60]	; 0xffffffc4
   2b5ec:	str	r0, [fp, #-64]	; 0xffffffc0
   2b5f0:	str	r0, [fp, #-68]	; 0xffffffbc
   2b5f4:	str	r0, [fp, #-88]	; 0xffffffa8
   2b5f8:	str	r0, [fp, #-92]	; 0xffffffa4
   2b5fc:	str	r0, [fp, #-96]	; 0xffffffa0
   2b600:	str	r0, [fp, #-100]	; 0xffffff9c
   2b604:	str	r0, [fp, #-104]	; 0xffffff98
   2b608:	movw	r0, #0
   2b60c:	strb	r0, [fp, #-105]	; 0xffffff97
   2b610:	movw	r0, #1
   2b614:	strb	r0, [fp, #-117]	; 0xffffff8b
   2b618:	movw	r0, #32
   2b61c:	movw	r1, #1
   2b620:	str	ip, [sp, #84]	; 0x54
   2b624:	bl	3fb3c <__assert_fail@plt+0x2e6a8>
   2b628:	str	r0, [fp, #-80]	; 0xffffffb0
   2b62c:	movw	r0, #40	; 0x28
   2b630:	movw	r1, #1
   2b634:	bl	3fb3c <__assert_fail@plt+0x2e6a8>
   2b638:	str	r0, [fp, #-84]	; 0xffffffac
   2b63c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   2b640:	movw	r1, #0
   2b644:	cmp	r0, r1
   2b648:	movw	r0, #1
   2b64c:	str	r0, [sp, #80]	; 0x50
   2b650:	beq	2b66c <__assert_fail@plt+0x1a1d8>
   2b654:	ldr	r0, [fp, #-84]	; 0xffffffac
   2b658:	movw	r1, #0
   2b65c:	cmp	r0, r1
   2b660:	movw	r0, #0
   2b664:	moveq	r0, #1
   2b668:	str	r0, [sp, #80]	; 0x50
   2b66c:	ldr	r0, [sp, #80]	; 0x50
   2b670:	tst	r0, #1
   2b674:	beq	2b6a0 <__assert_fail@plt+0x1a20c>
   2b678:	ldr	r0, [fp, #-80]	; 0xffffffb0
   2b67c:	bl	138a4 <__assert_fail@plt+0x2410>
   2b680:	ldr	r0, [fp, #-84]	; 0xffffffac
   2b684:	bl	138a4 <__assert_fail@plt+0x2410>
   2b688:	ldr	r0, [fp, #8]
   2b68c:	movw	lr, #12
   2b690:	str	lr, [r0]
   2b694:	movw	r0, #0
   2b698:	str	r0, [fp, #-28]	; 0xffffffe4
   2b69c:	b	2bedc <__assert_fail@plt+0x1aa48>
   2b6a0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2b6a4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2b6a8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2b6ac:	bl	2ca28 <__assert_fail@plt+0x1b594>
   2b6b0:	str	r0, [fp, #-116]	; 0xffffff8c
   2b6b4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2b6b8:	ldr	r0, [r0, #4]
   2b6bc:	and	r0, r0, #255	; 0xff
   2b6c0:	cmp	r0, #2
   2b6c4:	bne	2b6d8 <__assert_fail@plt+0x1a244>
   2b6c8:	ldr	r0, [fp, #8]
   2b6cc:	movw	r1, #2
   2b6d0:	str	r1, [r0]
   2b6d4:	b	2bec4 <__assert_fail@plt+0x1aa30>
   2b6d8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2b6dc:	ldr	r0, [r0, #4]
   2b6e0:	and	r0, r0, #255	; 0xff
   2b6e4:	cmp	r0, #25
   2b6e8:	bne	2b774 <__assert_fail@plt+0x1a2e0>
   2b6ec:	ldr	r0, [fp, #-84]	; 0xffffffac
   2b6f0:	ldrb	r1, [r0, #16]
   2b6f4:	bic	r1, r1, #1
   2b6f8:	movw	r2, #1
   2b6fc:	orr	r1, r1, r2
   2b700:	strb	r1, [r0, #16]
   2b704:	strb	r2, [fp, #-105]	; 0xffffff97
   2b708:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2b70c:	and	r0, r0, #256	; 0x100
   2b710:	cmp	r0, #0
   2b714:	beq	2b724 <__assert_fail@plt+0x1a290>
   2b718:	ldr	r0, [fp, #-80]	; 0xffffffb0
   2b71c:	movw	r1, #10
   2b720:	bl	2cd98 <__assert_fail@plt+0x1b904>
   2b724:	ldr	r0, [fp, #-116]	; 0xffffff8c
   2b728:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2b72c:	ldr	r2, [r1, #40]	; 0x28
   2b730:	add	r0, r2, r0
   2b734:	str	r0, [r1, #40]	; 0x28
   2b738:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2b73c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2b740:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2b744:	bl	2ca28 <__assert_fail@plt+0x1b594>
   2b748:	str	r0, [fp, #-116]	; 0xffffff8c
   2b74c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2b750:	ldr	r0, [r0, #4]
   2b754:	and	r0, r0, #255	; 0xff
   2b758:	cmp	r0, #2
   2b75c:	bne	2b770 <__assert_fail@plt+0x1a2dc>
   2b760:	ldr	r0, [fp, #8]
   2b764:	movw	r1, #2
   2b768:	str	r1, [r0]
   2b76c:	b	2bec4 <__assert_fail@plt+0x1aa30>
   2b770:	b	2b774 <__assert_fail@plt+0x1a2e0>
   2b774:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2b778:	ldr	r0, [r0, #4]
   2b77c:	and	r0, r0, #255	; 0xff
   2b780:	cmp	r0, #21
   2b784:	bne	2b7a0 <__assert_fail@plt+0x1a30c>
   2b788:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2b78c:	ldr	r1, [r0, #4]
   2b790:	mvn	r2, #255	; 0xff
   2b794:	and	r1, r1, r2
   2b798:	orr	r1, r1, #1
   2b79c:	str	r1, [r0, #4]
   2b7a0:	b	2b7a4 <__assert_fail@plt+0x1a310>
   2b7a4:	add	r0, sp, #152	; 0x98
   2b7a8:	movw	r1, #0
   2b7ac:	str	r1, [sp, #112]	; 0x70
   2b7b0:	movw	r1, #0
   2b7b4:	strb	r1, [sp, #111]	; 0x6f
   2b7b8:	str	r0, [fp, #-124]	; 0xffffff84
   2b7bc:	movw	r0, #3
   2b7c0:	str	r0, [fp, #-128]	; 0xffffff80
   2b7c4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2b7c8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2b7cc:	ldr	r3, [fp, #-116]	; 0xffffff8c
   2b7d0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2b7d4:	ldr	ip, [fp, #-44]	; 0xffffffd4
   2b7d8:	ldrb	lr, [fp, #-117]	; 0xffffff8b
   2b7dc:	sub	r4, fp, #128	; 0x80
   2b7e0:	str	r0, [sp, #76]	; 0x4c
   2b7e4:	mov	r0, r4
   2b7e8:	ldr	r4, [sp, #76]	; 0x4c
   2b7ec:	str	r4, [sp]
   2b7f0:	str	ip, [sp, #4]
   2b7f4:	and	ip, lr, #1
   2b7f8:	str	ip, [sp, #8]
   2b7fc:	bl	2cde0 <__assert_fail@plt+0x1b94c>
   2b800:	str	r0, [sp, #116]	; 0x74
   2b804:	ldr	r0, [sp, #116]	; 0x74
   2b808:	cmp	r0, #0
   2b80c:	beq	2b820 <__assert_fail@plt+0x1a38c>
   2b810:	ldr	r0, [sp, #116]	; 0x74
   2b814:	ldr	r1, [fp, #8]
   2b818:	str	r0, [r1]
   2b81c:	b	2bec4 <__assert_fail@plt+0x1aa30>
   2b820:	movw	r0, #0
   2b824:	strb	r0, [fp, #-117]	; 0xffffff8b
   2b828:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2b82c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2b830:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2b834:	bl	2ca28 <__assert_fail@plt+0x1b594>
   2b838:	str	r0, [fp, #-116]	; 0xffffff8c
   2b83c:	ldr	r0, [fp, #-128]	; 0xffffff80
   2b840:	cmp	r0, #4
   2b844:	beq	2b92c <__assert_fail@plt+0x1a498>
   2b848:	ldr	r0, [fp, #-128]	; 0xffffff80
   2b84c:	cmp	r0, #2
   2b850:	beq	2b92c <__assert_fail@plt+0x1a498>
   2b854:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2b858:	ldr	r0, [r0, #4]
   2b85c:	and	r0, r0, #255	; 0xff
   2b860:	cmp	r0, #2
   2b864:	bne	2b878 <__assert_fail@plt+0x1a3e4>
   2b868:	ldr	r0, [fp, #8]
   2b86c:	movw	r1, #7
   2b870:	str	r1, [r0]
   2b874:	b	2bec4 <__assert_fail@plt+0x1aa30>
   2b878:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2b87c:	ldr	r0, [r0, #4]
   2b880:	and	r0, r0, #255	; 0xff
   2b884:	cmp	r0, #22
   2b888:	bne	2b928 <__assert_fail@plt+0x1a494>
   2b88c:	ldr	r0, [fp, #-116]	; 0xffffff8c
   2b890:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2b894:	ldr	r2, [r1, #40]	; 0x28
   2b898:	add	r0, r2, r0
   2b89c:	str	r0, [r1, #40]	; 0x28
   2b8a0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2b8a4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2b8a8:	add	r0, sp, #100	; 0x64
   2b8ac:	bl	2ca28 <__assert_fail@plt+0x1b594>
   2b8b0:	str	r0, [sp, #112]	; 0x70
   2b8b4:	ldr	r0, [sp, #104]	; 0x68
   2b8b8:	and	r0, r0, #255	; 0xff
   2b8bc:	cmp	r0, #2
   2b8c0:	bne	2b8d4 <__assert_fail@plt+0x1a440>
   2b8c4:	ldr	r0, [fp, #8]
   2b8c8:	movw	r1, #7
   2b8cc:	str	r1, [r0]
   2b8d0:	b	2bec4 <__assert_fail@plt+0x1aa30>
   2b8d4:	ldr	r0, [sp, #104]	; 0x68
   2b8d8:	and	r0, r0, #255	; 0xff
   2b8dc:	cmp	r0, #21
   2b8e0:	bne	2b91c <__assert_fail@plt+0x1a488>
   2b8e4:	ldr	r0, [fp, #-116]	; 0xffffff8c
   2b8e8:	movw	r1, #0
   2b8ec:	sub	r0, r1, r0
   2b8f0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2b8f4:	ldr	r2, [r1, #40]	; 0x28
   2b8f8:	add	r0, r2, r0
   2b8fc:	str	r0, [r1, #40]	; 0x28
   2b900:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2b904:	ldr	r1, [r0, #4]
   2b908:	mvn	r2, #255	; 0xff
   2b90c:	and	r1, r1, r2
   2b910:	orr	r1, r1, #1
   2b914:	str	r1, [r0, #4]
   2b918:	b	2b924 <__assert_fail@plt+0x1a490>
   2b91c:	movw	r0, #1
   2b920:	strb	r0, [sp, #111]	; 0x6f
   2b924:	b	2b928 <__assert_fail@plt+0x1a494>
   2b928:	b	2b92c <__assert_fail@plt+0x1a498>
   2b92c:	ldrb	r0, [sp, #111]	; 0x6f
   2b930:	and	r0, r0, #1
   2b934:	cmp	r0, #1
   2b938:	bne	2ba5c <__assert_fail@plt+0x1a5c8>
   2b93c:	add	r0, sp, #120	; 0x78
   2b940:	str	r0, [fp, #-132]	; 0xffffff7c
   2b944:	movw	r0, #3
   2b948:	str	r0, [fp, #-136]	; 0xffffff78
   2b94c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2b950:	ldr	r3, [sp, #112]	; 0x70
   2b954:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2b958:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2b95c:	sub	ip, fp, #136	; 0x88
   2b960:	str	r0, [sp, #72]	; 0x48
   2b964:	mov	r0, ip
   2b968:	add	ip, sp, #100	; 0x64
   2b96c:	str	r2, [sp, #68]	; 0x44
   2b970:	mov	r2, ip
   2b974:	ldr	ip, [sp, #72]	; 0x48
   2b978:	str	ip, [sp]
   2b97c:	ldr	lr, [sp, #68]	; 0x44
   2b980:	str	lr, [sp, #4]
   2b984:	movw	r4, #1
   2b988:	and	r4, r4, #1
   2b98c:	str	r4, [sp, #8]
   2b990:	bl	2cde0 <__assert_fail@plt+0x1b94c>
   2b994:	str	r0, [sp, #116]	; 0x74
   2b998:	ldr	r0, [sp, #116]	; 0x74
   2b99c:	cmp	r0, #0
   2b9a0:	beq	2b9b4 <__assert_fail@plt+0x1a520>
   2b9a4:	ldr	r0, [sp, #116]	; 0x74
   2b9a8:	ldr	r1, [fp, #8]
   2b9ac:	str	r0, [r1]
   2b9b0:	b	2bec4 <__assert_fail@plt+0x1aa30>
   2b9b4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2b9b8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2b9bc:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2b9c0:	bl	2ca28 <__assert_fail@plt+0x1b594>
   2b9c4:	str	r0, [fp, #-116]	; 0xffffff8c
   2b9c8:	ldr	r0, [fp, #-80]	; 0xffffffb0
   2b9cc:	ldr	r1, [fp, #-84]	; 0xffffffac
   2b9d0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2b9d4:	ldr	lr, [fp, #-44]	; 0xffffffd4
   2b9d8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2b9dc:	ldr	ip, [fp, #-48]	; 0xffffffd0
   2b9e0:	ldr	r4, [fp, #-52]	; 0xffffffcc
   2b9e4:	ldr	r5, [fp, #-60]	; 0xffffffc4
   2b9e8:	ldr	r6, [fp, #-64]	; 0xffffffc0
   2b9ec:	ldr	r7, [fp, #-68]	; 0xffffffbc
   2b9f0:	sub	r8, fp, #92	; 0x5c
   2b9f4:	str	r2, [sp, #64]	; 0x40
   2b9f8:	mov	r2, r8
   2b9fc:	sub	r8, fp, #128	; 0x80
   2ba00:	str	r3, [sp, #60]	; 0x3c
   2ba04:	mov	r3, r8
   2ba08:	sub	r8, fp, #136	; 0x88
   2ba0c:	str	r8, [sp]
   2ba10:	ldr	r8, [sp, #64]	; 0x40
   2ba14:	str	r8, [sp, #4]
   2ba18:	str	lr, [sp, #8]
   2ba1c:	ldr	lr, [sp, #60]	; 0x3c
   2ba20:	str	lr, [sp, #12]
   2ba24:	str	ip, [sp, #16]
   2ba28:	str	r4, [sp, #20]
   2ba2c:	str	r5, [sp, #24]
   2ba30:	str	r6, [sp, #28]
   2ba34:	str	r7, [sp, #32]
   2ba38:	bl	2cf64 <__assert_fail@plt+0x1bad0>
   2ba3c:	ldr	r1, [fp, #8]
   2ba40:	str	r0, [r1]
   2ba44:	ldr	r0, [fp, #8]
   2ba48:	ldr	r0, [r0]
   2ba4c:	cmp	r0, #0
   2ba50:	beq	2ba58 <__assert_fail@plt+0x1a5c4>
   2ba54:	b	2bec4 <__assert_fail@plt+0x1aa30>
   2ba58:	b	2bc10 <__assert_fail@plt+0x1a77c>
   2ba5c:	ldr	r0, [fp, #-128]	; 0xffffff80
   2ba60:	cmp	r0, #4
   2ba64:	str	r0, [sp, #56]	; 0x38
   2ba68:	bhi	2bc0c <__assert_fail@plt+0x1a778>
   2ba6c:	add	r0, pc, #8
   2ba70:	ldr	r1, [sp, #56]	; 0x38
   2ba74:	ldr	r0, [r0, r1, lsl #2]
   2ba78:	mov	pc, r0
   2ba7c:	muleq	r2, r0, sl
   2ba80:	andeq	fp, r2, r0, lsr #21
   2ba84:	andeq	fp, r2, r4, lsr #22
   2ba88:	andeq	fp, r2, r8, asr fp
   2ba8c:			; <UNDEFINED> instruction: 0x0002bbb8
   2ba90:	ldr	r0, [fp, #-80]	; 0xffffffb0
   2ba94:	ldrb	r1, [fp, #-124]	; 0xffffff84
   2ba98:	bl	2cd98 <__assert_fail@plt+0x1b904>
   2ba9c:	b	2bc0c <__assert_fail@plt+0x1a778>
   2baa0:	ldr	r0, [fp, #-96]	; 0xffffffa0
   2baa4:	ldr	r1, [fp, #-84]	; 0xffffffac
   2baa8:	ldr	r1, [r1, #20]
   2baac:	cmp	r0, r1
   2bab0:	bne	2bb00 <__assert_fail@plt+0x1a66c>
   2bab4:	ldr	r0, [fp, #-84]	; 0xffffffac
   2bab8:	ldr	r0, [r0, #20]
   2babc:	mov	r1, #1
   2bac0:	orr	r0, r1, r0, lsl #1
   2bac4:	str	r0, [fp, #-96]	; 0xffffffa0
   2bac8:	ldr	r0, [fp, #-84]	; 0xffffffac
   2bacc:	ldr	r0, [r0]
   2bad0:	ldr	r1, [fp, #-96]	; 0xffffffa0
   2bad4:	lsl	r1, r1, #2
   2bad8:	bl	3fc48 <__assert_fail@plt+0x2e7b4>
   2badc:	str	r0, [sp, #96]	; 0x60
   2bae0:	ldr	r0, [sp, #96]	; 0x60
   2bae4:	movw	r1, #0
   2bae8:	cmp	r0, r1
   2baec:	bne	2baf4 <__assert_fail@plt+0x1a660>
   2baf0:	b	2beb8 <__assert_fail@plt+0x1aa24>
   2baf4:	ldr	r0, [sp, #96]	; 0x60
   2baf8:	ldr	r1, [fp, #-84]	; 0xffffffac
   2bafc:	str	r0, [r1]
   2bb00:	ldr	r0, [fp, #-124]	; 0xffffff84
   2bb04:	ldr	r1, [fp, #-84]	; 0xffffffac
   2bb08:	ldr	r2, [r1]
   2bb0c:	ldr	r3, [r1, #20]
   2bb10:	add	ip, r3, #1
   2bb14:	str	ip, [r1, #20]
   2bb18:	add	r1, r2, r3, lsl #2
   2bb1c:	str	r0, [r1]
   2bb20:	b	2bc0c <__assert_fail@plt+0x1a778>
   2bb24:	ldr	r0, [fp, #-80]	; 0xffffffb0
   2bb28:	ldr	r1, [fp, #-84]	; 0xffffffac
   2bb2c:	ldr	r3, [fp, #-124]	; 0xffffff84
   2bb30:	sub	r2, fp, #100	; 0x64
   2bb34:	bl	2d40c <__assert_fail@plt+0x1bf78>
   2bb38:	ldr	r1, [fp, #8]
   2bb3c:	str	r0, [r1]
   2bb40:	ldr	r0, [fp, #8]
   2bb44:	ldr	r0, [r0]
   2bb48:	cmp	r0, #0
   2bb4c:	beq	2bb54 <__assert_fail@plt+0x1a6c0>
   2bb50:	b	2bec4 <__assert_fail@plt+0x1aa30>
   2bb54:	b	2bc0c <__assert_fail@plt+0x1a778>
   2bb58:	ldr	r0, [fp, #-80]	; 0xffffffb0
   2bb5c:	ldr	r1, [fp, #-84]	; 0xffffffac
   2bb60:	ldr	r3, [fp, #-124]	; 0xffffff84
   2bb64:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2bb68:	ldr	ip, [fp, #-60]	; 0xffffffc4
   2bb6c:	ldr	lr, [fp, #-64]	; 0xffffffc0
   2bb70:	ldr	r4, [fp, #-68]	; 0xffffffbc
   2bb74:	sub	r5, fp, #88	; 0x58
   2bb78:	str	r2, [sp, #52]	; 0x34
   2bb7c:	mov	r2, r5
   2bb80:	ldr	r5, [sp, #52]	; 0x34
   2bb84:	str	r5, [sp]
   2bb88:	str	ip, [sp, #4]
   2bb8c:	str	lr, [sp, #8]
   2bb90:	str	r4, [sp, #12]
   2bb94:	bl	2d468 <__assert_fail@plt+0x1bfd4>
   2bb98:	ldr	r1, [fp, #8]
   2bb9c:	str	r0, [r1]
   2bba0:	ldr	r0, [fp, #8]
   2bba4:	ldr	r0, [r0]
   2bba8:	cmp	r0, #0
   2bbac:	beq	2bbb4 <__assert_fail@plt+0x1a720>
   2bbb0:	b	2bec4 <__assert_fail@plt+0x1aa30>
   2bbb4:	b	2bc0c <__assert_fail@plt+0x1a778>
   2bbb8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2bbbc:	ldr	r0, [r0, #64]	; 0x40
   2bbc0:	ldr	r1, [fp, #-80]	; 0xffffffb0
   2bbc4:	ldr	r2, [fp, #-84]	; 0xffffffac
   2bbc8:	ldr	r3, [fp, #-124]	; 0xffffff84
   2bbcc:	ldr	ip, [fp, #-44]	; 0xffffffd4
   2bbd0:	sub	lr, fp, #104	; 0x68
   2bbd4:	str	r3, [sp, #48]	; 0x30
   2bbd8:	mov	r3, lr
   2bbdc:	ldr	lr, [sp, #48]	; 0x30
   2bbe0:	str	lr, [sp]
   2bbe4:	str	ip, [sp, #4]
   2bbe8:	bl	2d4ec <__assert_fail@plt+0x1c058>
   2bbec:	ldr	r1, [fp, #8]
   2bbf0:	str	r0, [r1]
   2bbf4:	ldr	r0, [fp, #8]
   2bbf8:	ldr	r0, [r0]
   2bbfc:	cmp	r0, #0
   2bc00:	beq	2bc08 <__assert_fail@plt+0x1a774>
   2bc04:	b	2bec4 <__assert_fail@plt+0x1aa30>
   2bc08:	b	2bc0c <__assert_fail@plt+0x1a778>
   2bc0c:	b	2bc10 <__assert_fail@plt+0x1a77c>
   2bc10:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2bc14:	ldr	r0, [r0, #4]
   2bc18:	and	r0, r0, #255	; 0xff
   2bc1c:	cmp	r0, #2
   2bc20:	bne	2bc34 <__assert_fail@plt+0x1a7a0>
   2bc24:	ldr	r0, [fp, #8]
   2bc28:	movw	r1, #7
   2bc2c:	str	r1, [r0]
   2bc30:	b	2bec4 <__assert_fail@plt+0x1aa30>
   2bc34:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2bc38:	ldr	r0, [r0, #4]
   2bc3c:	and	r0, r0, #255	; 0xff
   2bc40:	cmp	r0, #21
   2bc44:	bne	2bc4c <__assert_fail@plt+0x1a7b8>
   2bc48:	b	2bc50 <__assert_fail@plt+0x1a7bc>
   2bc4c:	b	2b7a4 <__assert_fail@plt+0x1a310>
   2bc50:	ldr	r0, [fp, #-116]	; 0xffffff8c
   2bc54:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2bc58:	ldr	r2, [r1, #40]	; 0x28
   2bc5c:	add	r0, r2, r0
   2bc60:	str	r0, [r1, #40]	; 0x28
   2bc64:	ldrb	r0, [fp, #-105]	; 0xffffff97
   2bc68:	tst	r0, #1
   2bc6c:	beq	2bc78 <__assert_fail@plt+0x1a7e4>
   2bc70:	ldr	r0, [fp, #-80]	; 0xffffffb0
   2bc74:	bl	2e194 <__assert_fail@plt+0x1cd00>
   2bc78:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2bc7c:	ldr	r0, [r0, #92]	; 0x5c
   2bc80:	cmp	r0, #1
   2bc84:	ble	2bc98 <__assert_fail@plt+0x1a804>
   2bc88:	ldr	r0, [fp, #-80]	; 0xffffffb0
   2bc8c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2bc90:	ldr	r1, [r1, #60]	; 0x3c
   2bc94:	bl	2e1dc <__assert_fail@plt+0x1cd48>
   2bc98:	ldr	r0, [fp, #-84]	; 0xffffffac
   2bc9c:	ldr	r0, [r0, #20]
   2bca0:	cmp	r0, #0
   2bca4:	bne	2bd10 <__assert_fail@plt+0x1a87c>
   2bca8:	ldr	r0, [fp, #-84]	; 0xffffffac
   2bcac:	ldr	r0, [r0, #24]
   2bcb0:	cmp	r0, #0
   2bcb4:	bne	2bd10 <__assert_fail@plt+0x1a87c>
   2bcb8:	ldr	r0, [fp, #-84]	; 0xffffffac
   2bcbc:	ldr	r0, [r0, #28]
   2bcc0:	cmp	r0, #0
   2bcc4:	bne	2bd10 <__assert_fail@plt+0x1a87c>
   2bcc8:	ldr	r0, [fp, #-84]	; 0xffffffac
   2bccc:	ldr	r0, [r0, #32]
   2bcd0:	cmp	r0, #0
   2bcd4:	bne	2bd10 <__assert_fail@plt+0x1a87c>
   2bcd8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2bcdc:	ldr	r0, [r0, #92]	; 0x5c
   2bce0:	cmp	r0, #1
   2bce4:	ble	2be54 <__assert_fail@plt+0x1a9c0>
   2bce8:	ldr	r0, [fp, #-84]	; 0xffffffac
   2bcec:	ldr	r0, [r0, #36]	; 0x24
   2bcf0:	cmp	r0, #0
   2bcf4:	bne	2bd10 <__assert_fail@plt+0x1a87c>
   2bcf8:	ldr	r0, [fp, #-84]	; 0xffffffac
   2bcfc:	ldrb	r0, [r0, #16]
   2bd00:	and	r0, r0, #1
   2bd04:	and	r0, r0, #255	; 0xff
   2bd08:	cmp	r0, #0
   2bd0c:	beq	2be54 <__assert_fail@plt+0x1a9c0>
   2bd10:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2bd14:	ldrb	r1, [r0, #88]	; 0x58
   2bd18:	bic	r1, r1, #2
   2bd1c:	movw	r2, #2
   2bd20:	orr	r1, r1, r2
   2bd24:	strb	r1, [r0, #88]	; 0x58
   2bd28:	ldr	r0, [fp, #-72]	; 0xffffffb8
   2bd2c:	mvn	r1, #255	; 0xff
   2bd30:	and	r0, r0, r1
   2bd34:	orr	r0, r0, #6
   2bd38:	str	r0, [fp, #-72]	; 0xffffffb8
   2bd3c:	ldr	r0, [fp, #-84]	; 0xffffffac
   2bd40:	str	r0, [fp, #-76]	; 0xffffffb4
   2bd44:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2bd48:	movw	r1, #0
   2bd4c:	str	r1, [sp, #44]	; 0x2c
   2bd50:	ldr	r2, [sp, #44]	; 0x2c
   2bd54:	sub	r3, fp, #76	; 0x4c
   2bd58:	bl	2b290 <__assert_fail@plt+0x19dfc>
   2bd5c:	str	r0, [sp, #92]	; 0x5c
   2bd60:	ldr	r0, [sp, #92]	; 0x5c
   2bd64:	movw	r1, #0
   2bd68:	cmp	r0, r1
   2bd6c:	bne	2bd74 <__assert_fail@plt+0x1a8e0>
   2bd70:	b	2beb8 <__assert_fail@plt+0x1aa24>
   2bd74:	movw	r0, #0
   2bd78:	str	r0, [sp, #88]	; 0x58
   2bd7c:	ldr	r0, [sp, #88]	; 0x58
   2bd80:	cmp	r0, #8
   2bd84:	bge	2bdb8 <__assert_fail@plt+0x1a924>
   2bd88:	ldr	r0, [fp, #-80]	; 0xffffffb0
   2bd8c:	ldr	r1, [sp, #88]	; 0x58
   2bd90:	add	r0, r0, r1, lsl #2
   2bd94:	ldr	r0, [r0]
   2bd98:	cmp	r0, #0
   2bd9c:	beq	2bda4 <__assert_fail@plt+0x1a910>
   2bda0:	b	2bdb8 <__assert_fail@plt+0x1a924>
   2bda4:	b	2bda8 <__assert_fail@plt+0x1a914>
   2bda8:	ldr	r0, [sp, #88]	; 0x58
   2bdac:	add	r0, r0, #1
   2bdb0:	str	r0, [sp, #88]	; 0x58
   2bdb4:	b	2bd7c <__assert_fail@plt+0x1a8e8>
   2bdb8:	ldr	r0, [sp, #88]	; 0x58
   2bdbc:	cmp	r0, #8
   2bdc0:	bge	2be40 <__assert_fail@plt+0x1a9ac>
   2bdc4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   2bdc8:	mvn	r1, #255	; 0xff
   2bdcc:	and	r0, r0, r1
   2bdd0:	orr	r0, r0, #3
   2bdd4:	str	r0, [fp, #-72]	; 0xffffffb8
   2bdd8:	ldr	r0, [fp, #-80]	; 0xffffffb0
   2bddc:	str	r0, [fp, #-76]	; 0xffffffb4
   2bde0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2bde4:	movw	r1, #0
   2bde8:	str	r1, [sp, #40]	; 0x28
   2bdec:	ldr	r2, [sp, #40]	; 0x28
   2bdf0:	sub	r3, fp, #76	; 0x4c
   2bdf4:	bl	2b290 <__assert_fail@plt+0x19dfc>
   2bdf8:	str	r0, [fp, #-112]	; 0xffffff90
   2bdfc:	ldr	r0, [fp, #-112]	; 0xffffff90
   2be00:	movw	r1, #0
   2be04:	cmp	r0, r1
   2be08:	bne	2be10 <__assert_fail@plt+0x1a97c>
   2be0c:	b	2beb8 <__assert_fail@plt+0x1aa24>
   2be10:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2be14:	ldr	r1, [fp, #-112]	; 0xffffff90
   2be18:	ldr	r2, [sp, #92]	; 0x5c
   2be1c:	movw	r3, #10
   2be20:	bl	29200 <__assert_fail@plt+0x17d6c>
   2be24:	str	r0, [fp, #-112]	; 0xffffff90
   2be28:	ldr	r0, [fp, #-112]	; 0xffffff90
   2be2c:	movw	r1, #0
   2be30:	cmp	r0, r1
   2be34:	bne	2be3c <__assert_fail@plt+0x1a9a8>
   2be38:	b	2beb8 <__assert_fail@plt+0x1aa24>
   2be3c:	b	2be50 <__assert_fail@plt+0x1a9bc>
   2be40:	ldr	r0, [fp, #-80]	; 0xffffffb0
   2be44:	bl	138a4 <__assert_fail@plt+0x2410>
   2be48:	ldr	r0, [sp, #92]	; 0x5c
   2be4c:	str	r0, [fp, #-112]	; 0xffffff90
   2be50:	b	2beac <__assert_fail@plt+0x1aa18>
   2be54:	ldr	r0, [fp, #-84]	; 0xffffffac
   2be58:	bl	26828 <__assert_fail@plt+0x15394>
   2be5c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   2be60:	mvn	lr, #255	; 0xff
   2be64:	and	r0, r0, lr
   2be68:	orr	r0, r0, #3
   2be6c:	str	r0, [fp, #-72]	; 0xffffffb8
   2be70:	ldr	r0, [fp, #-80]	; 0xffffffb0
   2be74:	str	r0, [fp, #-76]	; 0xffffffb4
   2be78:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2be7c:	movw	lr, #0
   2be80:	mov	r1, lr
   2be84:	mov	r2, lr
   2be88:	sub	r3, fp, #76	; 0x4c
   2be8c:	bl	2b290 <__assert_fail@plt+0x19dfc>
   2be90:	str	r0, [fp, #-112]	; 0xffffff90
   2be94:	ldr	r0, [fp, #-112]	; 0xffffff90
   2be98:	movw	r1, #0
   2be9c:	cmp	r0, r1
   2bea0:	bne	2bea8 <__assert_fail@plt+0x1aa14>
   2bea4:	b	2beb8 <__assert_fail@plt+0x1aa24>
   2bea8:	b	2beac <__assert_fail@plt+0x1aa18>
   2beac:	ldr	r0, [fp, #-112]	; 0xffffff90
   2beb0:	str	r0, [fp, #-28]	; 0xffffffe4
   2beb4:	b	2bedc <__assert_fail@plt+0x1aa48>
   2beb8:	ldr	r0, [fp, #8]
   2bebc:	movw	r1, #12
   2bec0:	str	r1, [r0]
   2bec4:	ldr	r0, [fp, #-80]	; 0xffffffb0
   2bec8:	bl	138a4 <__assert_fail@plt+0x2410>
   2becc:	ldr	r0, [fp, #-84]	; 0xffffffac
   2bed0:	bl	26828 <__assert_fail@plt+0x15394>
   2bed4:	movw	r0, #0
   2bed8:	str	r0, [fp, #-28]	; 0xffffffe4
   2bedc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2bee0:	sub	sp, fp, #24
   2bee4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2bee8:	push	{fp, lr}
   2beec:	mov	fp, sp
   2bef0:	sub	sp, sp, #32
   2bef4:	str	r0, [fp, #-4]
   2bef8:	mov	r0, #0
   2befc:	str	r0, [fp, #-8]
   2bf00:	str	r0, [sp, #16]
   2bf04:	ldr	r0, [fp, #-4]
   2bf08:	ldrb	r1, [r0, #88]	; 0x58
   2bf0c:	orr	r1, r1, #16
   2bf10:	strb	r1, [r0, #88]	; 0x58
   2bf14:	ldr	r0, [fp, #-4]
   2bf18:	ldrb	r0, [r0, #88]	; 0x58
   2bf1c:	ubfx	r0, r0, #3, #1
   2bf20:	and	r0, r0, #255	; 0xff
   2bf24:	cmp	r0, #0
   2bf28:	bne	2bfe0 <__assert_fail@plt+0x1ab4c>
   2bf2c:	mov	r0, #0
   2bf30:	str	r0, [sp, #12]
   2bf34:	movw	r0, #0
   2bf38:	movt	r0, #1023	; 0x3ff
   2bf3c:	str	r0, [sp, #8]
   2bf40:	mvn	r0, #2013265921	; 0x78000001
   2bf44:	str	r0, [sp, #4]
   2bf48:	mvn	r0, #-134217727	; 0xf8000001
   2bf4c:	str	r0, [sp]
   2bf50:	ldr	r0, [sp, #12]
   2bf54:	ldr	r1, [fp, #-4]
   2bf58:	str	r0, [r1, #96]	; 0x60
   2bf5c:	ldr	r0, [sp, #8]
   2bf60:	ldr	r1, [fp, #-4]
   2bf64:	str	r0, [r1, #100]	; 0x64
   2bf68:	ldr	r0, [sp, #4]
   2bf6c:	ldr	r1, [fp, #-4]
   2bf70:	str	r0, [r1, #104]	; 0x68
   2bf74:	ldr	r0, [sp]
   2bf78:	ldr	r1, [fp, #-4]
   2bf7c:	str	r0, [r1, #108]	; 0x6c
   2bf80:	mov	r0, #4
   2bf84:	str	r0, [fp, #-8]
   2bf88:	mov	r0, #128	; 0x80
   2bf8c:	str	r0, [sp, #16]
   2bf90:	ldr	r0, [fp, #-4]
   2bf94:	ldrb	r0, [r0, #88]	; 0x58
   2bf98:	ubfx	r0, r0, #2, #1
   2bf9c:	and	r0, r0, #255	; 0xff
   2bfa0:	cmp	r0, #0
   2bfa4:	beq	2bfdc <__assert_fail@plt+0x1ab48>
   2bfa8:	ldr	r0, [fp, #-4]
   2bfac:	add	r0, r0, #96	; 0x60
   2bfb0:	ldr	r1, [fp, #-8]
   2bfb4:	add	r0, r0, r1, lsl #2
   2bfb8:	ldr	r1, [sp, #16]
   2bfbc:	movw	r2, #256	; 0x100
   2bfc0:	sub	r1, r2, r1
   2bfc4:	movw	r2, #8
   2bfc8:	sdiv	r2, r1, r2
   2bfcc:	movw	r1, #0
   2bfd0:	and	r1, r1, #255	; 0xff
   2bfd4:	bl	113d4 <memset@plt>
   2bfd8:	b	2c090 <__assert_fail@plt+0x1abfc>
   2bfdc:	b	2bfe0 <__assert_fail@plt+0x1ab4c>
   2bfe0:	b	2bfe4 <__assert_fail@plt+0x1ab50>
   2bfe4:	b	2bfe8 <__assert_fail@plt+0x1ab54>
   2bfe8:	ldr	r0, [fp, #-8]
   2bfec:	cmp	r0, #8
   2bff0:	bge	2c090 <__assert_fail@plt+0x1abfc>
   2bff4:	movw	r0, #0
   2bff8:	str	r0, [fp, #-12]
   2bffc:	ldr	r0, [fp, #-12]
   2c000:	cmp	r0, #32
   2c004:	bge	2c07c <__assert_fail@plt+0x1abe8>
   2c008:	bl	11368 <__ctype_b_loc@plt>
   2c00c:	ldr	r0, [r0]
   2c010:	ldr	lr, [sp, #16]
   2c014:	add	r0, r0, lr, lsl #1
   2c018:	ldrh	r0, [r0]
   2c01c:	and	r0, r0, #8
   2c020:	cmp	r0, #0
   2c024:	bne	2c034 <__assert_fail@plt+0x1aba0>
   2c028:	ldr	r0, [sp, #16]
   2c02c:	cmp	r0, #95	; 0x5f
   2c030:	bne	2c05c <__assert_fail@plt+0x1abc8>
   2c034:	ldr	r0, [fp, #-12]
   2c038:	mov	r1, #1
   2c03c:	lsl	r0, r1, r0
   2c040:	ldr	r1, [fp, #-4]
   2c044:	add	r1, r1, #96	; 0x60
   2c048:	ldr	r2, [fp, #-8]
   2c04c:	add	r1, r1, r2, lsl #2
   2c050:	ldr	r2, [r1]
   2c054:	orr	r0, r2, r0
   2c058:	str	r0, [r1]
   2c05c:	b	2c060 <__assert_fail@plt+0x1abcc>
   2c060:	ldr	r0, [fp, #-12]
   2c064:	add	r0, r0, #1
   2c068:	str	r0, [fp, #-12]
   2c06c:	ldr	r0, [sp, #16]
   2c070:	add	r0, r0, #1
   2c074:	str	r0, [sp, #16]
   2c078:	b	2bffc <__assert_fail@plt+0x1ab68>
   2c07c:	b	2c080 <__assert_fail@plt+0x1abec>
   2c080:	ldr	r0, [fp, #-8]
   2c084:	add	r0, r0, #1
   2c088:	str	r0, [fp, #-8]
   2c08c:	b	2bfe8 <__assert_fail@plt+0x1ab54>
   2c090:	mov	sp, fp
   2c094:	pop	{fp, pc}
   2c098:	push	{fp, lr}
   2c09c:	mov	fp, sp
   2c0a0:	sub	sp, sp, #80	; 0x50
   2c0a4:	ldr	ip, [fp, #12]
   2c0a8:	ldr	lr, [fp, #8]
   2c0ac:	str	r0, [fp, #-8]
   2c0b0:	str	r1, [fp, #-12]
   2c0b4:	str	r2, [fp, #-16]
   2c0b8:	str	r3, [fp, #-20]	; 0xffffffec
   2c0bc:	and	r0, lr, #1
   2c0c0:	strb	r0, [fp, #-21]	; 0xffffffeb
   2c0c4:	movw	r0, #0
   2c0c8:	str	r0, [fp, #-36]	; 0xffffffdc
   2c0cc:	movw	r0, #32
   2c0d0:	movw	r1, #1
   2c0d4:	str	ip, [sp, #20]
   2c0d8:	bl	3fb3c <__assert_fail@plt+0x2e6a8>
   2c0dc:	str	r0, [fp, #-28]	; 0xffffffe4
   2c0e0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2c0e4:	movw	r1, #0
   2c0e8:	cmp	r0, r1
   2c0ec:	bne	2c108 <__assert_fail@plt+0x1ac74>
   2c0f0:	ldr	r0, [fp, #12]
   2c0f4:	movw	r1, #12
   2c0f8:	str	r1, [r0]
   2c0fc:	movw	r0, #0
   2c100:	str	r0, [fp, #-4]
   2c104:	b	2c3bc <__assert_fail@plt+0x1af28>
   2c108:	movw	r0, #40	; 0x28
   2c10c:	movw	r1, #1
   2c110:	bl	3fb3c <__assert_fail@plt+0x2e6a8>
   2c114:	str	r0, [fp, #-32]	; 0xffffffe0
   2c118:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2c11c:	movw	r1, #0
   2c120:	cmp	r0, r1
   2c124:	bne	2c148 <__assert_fail@plt+0x1acb4>
   2c128:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2c12c:	bl	138a4 <__assert_fail@plt+0x2410>
   2c130:	ldr	r0, [fp, #12]
   2c134:	movw	lr, #12
   2c138:	str	lr, [r0]
   2c13c:	movw	r0, #0
   2c140:	str	r0, [fp, #-4]
   2c144:	b	2c3bc <__assert_fail@plt+0x1af28>
   2c148:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   2c14c:	and	r0, r0, #1
   2c150:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2c154:	ldrb	r2, [r1, #16]
   2c158:	bic	r2, r2, #1
   2c15c:	orr	r0, r2, r0
   2c160:	strb	r0, [r1, #16]
   2c164:	ldr	r0, [fp, #-12]
   2c168:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2c16c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2c170:	ldr	r3, [fp, #-16]
   2c174:	sub	ip, fp, #36	; 0x24
   2c178:	str	r3, [sp, #16]
   2c17c:	mov	r3, ip
   2c180:	ldr	ip, [sp, #16]
   2c184:	str	ip, [sp]
   2c188:	movw	lr, #0
   2c18c:	str	lr, [sp, #4]
   2c190:	bl	2d4ec <__assert_fail@plt+0x1c058>
   2c194:	str	r0, [sp, #40]	; 0x28
   2c198:	ldr	r0, [sp, #40]	; 0x28
   2c19c:	cmp	r0, #0
   2c1a0:	beq	2c1cc <__assert_fail@plt+0x1ad38>
   2c1a4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2c1a8:	bl	138a4 <__assert_fail@plt+0x2410>
   2c1ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2c1b0:	bl	26828 <__assert_fail@plt+0x15394>
   2c1b4:	ldr	r0, [sp, #40]	; 0x28
   2c1b8:	ldr	lr, [fp, #12]
   2c1bc:	str	r0, [lr]
   2c1c0:	movw	r0, #0
   2c1c4:	str	r0, [fp, #-4]
   2c1c8:	b	2c3bc <__assert_fail@plt+0x1af28>
   2c1cc:	b	2c1d0 <__assert_fail@plt+0x1ad3c>
   2c1d0:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c1d4:	ldrsb	r0, [r0]
   2c1d8:	cmp	r0, #0
   2c1dc:	beq	2c200 <__assert_fail@plt+0x1ad6c>
   2c1e0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2c1e4:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c1e8:	ldrb	r1, [r1]
   2c1ec:	bl	2cd98 <__assert_fail@plt+0x1b904>
   2c1f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c1f4:	add	r0, r0, #1
   2c1f8:	str	r0, [fp, #-20]	; 0xffffffec
   2c1fc:	b	2c1d0 <__assert_fail@plt+0x1ad3c>
   2c200:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   2c204:	tst	r0, #1
   2c208:	beq	2c214 <__assert_fail@plt+0x1ad80>
   2c20c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2c210:	bl	2e194 <__assert_fail@plt+0x1cd00>
   2c214:	ldr	r0, [fp, #-8]
   2c218:	ldr	r0, [r0, #92]	; 0x5c
   2c21c:	cmp	r0, #1
   2c220:	ble	2c234 <__assert_fail@plt+0x1ada0>
   2c224:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2c228:	ldr	r1, [fp, #-8]
   2c22c:	ldr	r1, [r1, #60]	; 0x3c
   2c230:	bl	2e1dc <__assert_fail@plt+0x1cd48>
   2c234:	ldr	r0, [pc, #396]	; 2c3c8 <__assert_fail@plt+0x1af34>
   2c238:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2c23c:	str	r1, [sp, #28]
   2c240:	ldr	r1, [sp, #32]
   2c244:	mvn	r2, #255	; 0xff
   2c248:	and	r1, r1, r2
   2c24c:	orr	r1, r1, #3
   2c250:	str	r1, [sp, #32]
   2c254:	ldr	r1, [sp, #32]
   2c258:	and	r0, r1, r0
   2c25c:	str	r0, [sp, #32]
   2c260:	ldr	r0, [sp, #32]
   2c264:	mvn	r1, #262144	; 0x40000
   2c268:	and	r0, r0, r1
   2c26c:	str	r0, [sp, #32]
   2c270:	ldr	r0, [sp, #32]
   2c274:	mvn	r1, #524288	; 0x80000
   2c278:	and	r0, r0, r1
   2c27c:	str	r0, [sp, #32]
   2c280:	ldr	r0, [sp, #32]
   2c284:	mvn	r1, #1048576	; 0x100000
   2c288:	and	r0, r0, r1
   2c28c:	str	r0, [sp, #32]
   2c290:	ldr	r0, [sp, #32]
   2c294:	mvn	r1, #2097152	; 0x200000
   2c298:	and	r0, r0, r1
   2c29c:	str	r0, [sp, #32]
   2c2a0:	ldr	r0, [sp, #32]
   2c2a4:	mvn	r1, #4194304	; 0x400000
   2c2a8:	and	r0, r0, r1
   2c2ac:	str	r0, [sp, #32]
   2c2b0:	ldr	r0, [fp, #-8]
   2c2b4:	movw	r1, #0
   2c2b8:	str	r1, [sp, #12]
   2c2bc:	ldr	r2, [sp, #12]
   2c2c0:	add	r3, sp, #28
   2c2c4:	bl	2b290 <__assert_fail@plt+0x19dfc>
   2c2c8:	str	r0, [sp, #36]	; 0x24
   2c2cc:	ldr	r0, [sp, #36]	; 0x24
   2c2d0:	movw	r1, #0
   2c2d4:	cmp	r0, r1
   2c2d8:	bne	2c2e0 <__assert_fail@plt+0x1ae4c>
   2c2dc:	b	2c398 <__assert_fail@plt+0x1af04>
   2c2e0:	ldr	r0, [fp, #-8]
   2c2e4:	ldr	r0, [r0, #92]	; 0x5c
   2c2e8:	cmp	r0, #1
   2c2ec:	ble	2c380 <__assert_fail@plt+0x1aeec>
   2c2f0:	mov	r0, #6
   2c2f4:	strb	r0, [sp, #32]
   2c2f8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2c2fc:	str	r0, [sp, #28]
   2c300:	ldr	r0, [fp, #-8]
   2c304:	ldrb	r1, [r0, #88]	; 0x58
   2c308:	bic	r1, r1, #2
   2c30c:	movw	r2, #2
   2c310:	orr	r1, r1, r2
   2c314:	strb	r1, [r0, #88]	; 0x58
   2c318:	ldr	r0, [fp, #-8]
   2c31c:	movw	r1, #0
   2c320:	str	r1, [sp, #8]
   2c324:	ldr	r2, [sp, #8]
   2c328:	add	r3, sp, #28
   2c32c:	bl	2b290 <__assert_fail@plt+0x19dfc>
   2c330:	str	r0, [sp, #24]
   2c334:	ldr	r0, [sp, #24]
   2c338:	movw	r1, #0
   2c33c:	cmp	r0, r1
   2c340:	bne	2c348 <__assert_fail@plt+0x1aeb4>
   2c344:	b	2c398 <__assert_fail@plt+0x1af04>
   2c348:	ldr	r0, [fp, #-8]
   2c34c:	ldr	r1, [sp, #36]	; 0x24
   2c350:	ldr	r2, [sp, #24]
   2c354:	movw	r3, #10
   2c358:	bl	29200 <__assert_fail@plt+0x17d6c>
   2c35c:	str	r0, [sp, #36]	; 0x24
   2c360:	ldr	r0, [sp, #24]
   2c364:	movw	r1, #0
   2c368:	cmp	r0, r1
   2c36c:	beq	2c37c <__assert_fail@plt+0x1aee8>
   2c370:	ldr	r0, [sp, #36]	; 0x24
   2c374:	str	r0, [fp, #-4]
   2c378:	b	2c3bc <__assert_fail@plt+0x1af28>
   2c37c:	b	2c394 <__assert_fail@plt+0x1af00>
   2c380:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2c384:	bl	26828 <__assert_fail@plt+0x15394>
   2c388:	ldr	r0, [sp, #36]	; 0x24
   2c38c:	str	r0, [fp, #-4]
   2c390:	b	2c3bc <__assert_fail@plt+0x1af28>
   2c394:	b	2c398 <__assert_fail@plt+0x1af04>
   2c398:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2c39c:	bl	138a4 <__assert_fail@plt+0x2410>
   2c3a0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2c3a4:	bl	26828 <__assert_fail@plt+0x15394>
   2c3a8:	ldr	r0, [fp, #12]
   2c3ac:	movw	lr, #12
   2c3b0:	str	lr, [r0]
   2c3b4:	movw	r0, #0
   2c3b8:	str	r0, [fp, #-4]
   2c3bc:	ldr	r0, [fp, #-4]
   2c3c0:	mov	sp, fp
   2c3c4:	pop	{fp, pc}
   2c3c8:			; <UNDEFINED> instruction: 0xfffc00ff
   2c3cc:	push	{fp, lr}
   2c3d0:	mov	fp, sp
   2c3d4:	sub	sp, sp, #112	; 0x70
   2c3d8:	ldr	ip, [fp, #12]
   2c3dc:	ldr	lr, [fp, #8]
   2c3e0:	str	r0, [fp, #-8]
   2c3e4:	str	r1, [fp, #-12]
   2c3e8:	str	r2, [fp, #-16]
   2c3ec:	str	r3, [fp, #-20]	; 0xffffffec
   2c3f0:	movw	r0, #0
   2c3f4:	str	r0, [fp, #-24]	; 0xffffffe8
   2c3f8:	str	r0, [fp, #-28]	; 0xffffffe4
   2c3fc:	ldr	r0, [fp, #-12]
   2c400:	ldr	r0, [r0, #40]	; 0x28
   2c404:	str	r0, [fp, #-44]	; 0xffffffd4
   2c408:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c40c:	ldr	r1, [r0]
   2c410:	str	r1, [fp, #-52]	; 0xffffffcc
   2c414:	ldr	r0, [r0, #4]
   2c418:	str	r0, [fp, #-48]	; 0xffffffd0
   2c41c:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c420:	ldr	r0, [r0, #4]
   2c424:	and	r0, r0, #255	; 0xff
   2c428:	cmp	r0, #23
   2c42c:	str	lr, [sp, #52]	; 0x34
   2c430:	str	ip, [sp, #48]	; 0x30
   2c434:	bne	2c6b8 <__assert_fail@plt+0x1b224>
   2c438:	movw	r0, #0
   2c43c:	str	r0, [fp, #-40]	; 0xffffffd8
   2c440:	ldr	r0, [fp, #-12]
   2c444:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c448:	ldr	r2, [fp, #8]
   2c44c:	bl	2e6a0 <__assert_fail@plt+0x1d20c>
   2c450:	str	r0, [fp, #-36]	; 0xffffffdc
   2c454:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2c458:	cmn	r0, #1
   2c45c:	bne	2c4ac <__assert_fail@plt+0x1b018>
   2c460:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c464:	ldr	r0, [r0, #4]
   2c468:	and	r0, r0, #255	; 0xff
   2c46c:	cmp	r0, #1
   2c470:	bne	2c490 <__assert_fail@plt+0x1affc>
   2c474:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c478:	ldrb	r0, [r0]
   2c47c:	cmp	r0, #44	; 0x2c
   2c480:	bne	2c490 <__assert_fail@plt+0x1affc>
   2c484:	movw	r0, #0
   2c488:	str	r0, [fp, #-36]	; 0xffffffdc
   2c48c:	b	2c4a8 <__assert_fail@plt+0x1b014>
   2c490:	ldr	r0, [fp, #12]
   2c494:	movw	r1, #10
   2c498:	str	r1, [r0]
   2c49c:	movw	r0, #0
   2c4a0:	str	r0, [fp, #-4]
   2c4a4:	b	2ca1c <__assert_fail@plt+0x1b588>
   2c4a8:	b	2c4ac <__assert_fail@plt+0x1b018>
   2c4ac:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2c4b0:	cmn	r0, #2
   2c4b4:	beq	2c530 <__assert_fail@plt+0x1b09c>
   2c4b8:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c4bc:	ldr	r0, [r0, #4]
   2c4c0:	and	r0, r0, #255	; 0xff
   2c4c4:	cmp	r0, #24
   2c4c8:	bne	2c4d8 <__assert_fail@plt+0x1b044>
   2c4cc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2c4d0:	str	r0, [sp, #44]	; 0x2c
   2c4d4:	b	2c528 <__assert_fail@plt+0x1b094>
   2c4d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c4dc:	ldr	r0, [r0, #4]
   2c4e0:	and	r0, r0, #255	; 0xff
   2c4e4:	cmp	r0, #1
   2c4e8:	bne	2c514 <__assert_fail@plt+0x1b080>
   2c4ec:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c4f0:	ldrb	r0, [r0]
   2c4f4:	cmp	r0, #44	; 0x2c
   2c4f8:	bne	2c514 <__assert_fail@plt+0x1b080>
   2c4fc:	ldr	r0, [fp, #-12]
   2c500:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c504:	ldr	r2, [fp, #8]
   2c508:	bl	2e6a0 <__assert_fail@plt+0x1d20c>
   2c50c:	str	r0, [sp, #40]	; 0x28
   2c510:	b	2c520 <__assert_fail@plt+0x1b08c>
   2c514:	mvn	r0, #1
   2c518:	str	r0, [sp, #40]	; 0x28
   2c51c:	b	2c520 <__assert_fail@plt+0x1b08c>
   2c520:	ldr	r0, [sp, #40]	; 0x28
   2c524:	str	r0, [sp, #44]	; 0x2c
   2c528:	ldr	r0, [sp, #44]	; 0x2c
   2c52c:	str	r0, [fp, #-40]	; 0xffffffd8
   2c530:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2c534:	cmn	r0, #2
   2c538:	movw	r0, #1
   2c53c:	str	r0, [sp, #36]	; 0x24
   2c540:	beq	2c558 <__assert_fail@plt+0x1b0c4>
   2c544:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2c548:	cmn	r0, #2
   2c54c:	movw	r0, #0
   2c550:	moveq	r0, #1
   2c554:	str	r0, [sp, #36]	; 0x24
   2c558:	ldr	r0, [sp, #36]	; 0x24
   2c55c:	tst	r0, #1
   2c560:	beq	2c608 <__assert_fail@plt+0x1b174>
   2c564:	ldr	r0, [fp, #8]
   2c568:	and	r0, r0, #2097152	; 0x200000
   2c56c:	cmp	r0, #0
   2c570:	movw	r0, #0
   2c574:	movne	r0, #1
   2c578:	mvn	r1, #0
   2c57c:	eor	r0, r0, r1
   2c580:	tst	r0, #1
   2c584:	beq	2c5c4 <__assert_fail@plt+0x1b130>
   2c588:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c58c:	ldr	r0, [r0, #4]
   2c590:	and	r0, r0, #255	; 0xff
   2c594:	cmp	r0, #2
   2c598:	bne	2c5ac <__assert_fail@plt+0x1b118>
   2c59c:	ldr	r0, [fp, #12]
   2c5a0:	movw	r1, #9
   2c5a4:	str	r1, [r0]
   2c5a8:	b	2c5b8 <__assert_fail@plt+0x1b124>
   2c5ac:	ldr	r0, [fp, #12]
   2c5b0:	movw	r1, #10
   2c5b4:	str	r1, [r0]
   2c5b8:	movw	r0, #0
   2c5bc:	str	r0, [fp, #-4]
   2c5c0:	b	2ca1c <__assert_fail@plt+0x1b588>
   2c5c4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2c5c8:	ldr	r1, [fp, #-12]
   2c5cc:	str	r0, [r1, #40]	; 0x28
   2c5d0:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c5d4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2c5d8:	str	r1, [r0]
   2c5dc:	ldr	r1, [fp, #-48]	; 0xffffffd0
   2c5e0:	str	r1, [r0, #4]
   2c5e4:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c5e8:	ldr	r1, [r0, #4]
   2c5ec:	mvn	r2, #255	; 0xff
   2c5f0:	and	r1, r1, r2
   2c5f4:	orr	r1, r1, #1
   2c5f8:	str	r1, [r0, #4]
   2c5fc:	ldr	r0, [fp, #-8]
   2c600:	str	r0, [fp, #-4]
   2c604:	b	2ca1c <__assert_fail@plt+0x1b588>
   2c608:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2c60c:	cmn	r0, #1
   2c610:	beq	2c62c <__assert_fail@plt+0x1b198>
   2c614:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2c618:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2c61c:	cmp	r0, r1
   2c620:	movw	r0, #1
   2c624:	str	r0, [sp, #32]
   2c628:	bgt	2c648 <__assert_fail@plt+0x1b1b4>
   2c62c:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c630:	ldr	r0, [r0, #4]
   2c634:	and	r0, r0, #255	; 0xff
   2c638:	cmp	r0, #24
   2c63c:	movw	r0, #0
   2c640:	movne	r0, #1
   2c644:	str	r0, [sp, #32]
   2c648:	ldr	r0, [sp, #32]
   2c64c:	tst	r0, #1
   2c650:	beq	2c66c <__assert_fail@plt+0x1b1d8>
   2c654:	ldr	r0, [fp, #12]
   2c658:	movw	r1, #10
   2c65c:	str	r1, [r0]
   2c660:	movw	r0, #0
   2c664:	str	r0, [fp, #-4]
   2c668:	b	2ca1c <__assert_fail@plt+0x1b588>
   2c66c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2c670:	cmn	r0, #1
   2c674:	bne	2c684 <__assert_fail@plt+0x1b1f0>
   2c678:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2c67c:	str	r0, [sp, #28]
   2c680:	b	2c68c <__assert_fail@plt+0x1b1f8>
   2c684:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2c688:	str	r0, [sp, #28]
   2c68c:	ldr	r0, [sp, #28]
   2c690:	movw	r1, #32767	; 0x7fff
   2c694:	cmp	r1, r0
   2c698:	bge	2c6b4 <__assert_fail@plt+0x1b220>
   2c69c:	ldr	r0, [fp, #12]
   2c6a0:	movw	r1, #15
   2c6a4:	str	r1, [r0]
   2c6a8:	movw	r0, #0
   2c6ac:	str	r0, [fp, #-4]
   2c6b0:	b	2ca1c <__assert_fail@plt+0x1b588>
   2c6b4:	b	2c708 <__assert_fail@plt+0x1b274>
   2c6b8:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c6bc:	ldr	r0, [r0, #4]
   2c6c0:	and	r0, r0, #255	; 0xff
   2c6c4:	cmp	r0, #18
   2c6c8:	movw	r0, #0
   2c6cc:	moveq	r0, #1
   2c6d0:	tst	r0, #1
   2c6d4:	movw	r0, #1
   2c6d8:	mov	r1, r0
   2c6dc:	moveq	r1, #0
   2c6e0:	str	r1, [fp, #-36]	; 0xffffffdc
   2c6e4:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c6e8:	ldr	r1, [r1, #4]
   2c6ec:	and	r1, r1, #255	; 0xff
   2c6f0:	cmp	r1, #19
   2c6f4:	movw	r1, #0
   2c6f8:	moveq	r1, #1
   2c6fc:	tst	r1, #1
   2c700:	mvneq	r0, #0
   2c704:	str	r0, [fp, #-40]	; 0xffffffd8
   2c708:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c70c:	ldr	r1, [fp, #-12]
   2c710:	ldr	r2, [fp, #8]
   2c714:	bl	28f68 <__assert_fail@plt+0x17ad4>
   2c718:	ldr	r0, [fp, #-8]
   2c71c:	movw	r1, #0
   2c720:	cmp	r0, r1
   2c724:	bne	2c734 <__assert_fail@plt+0x1b2a0>
   2c728:	movw	r0, #0
   2c72c:	str	r0, [fp, #-4]
   2c730:	b	2ca1c <__assert_fail@plt+0x1b588>
   2c734:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2c738:	cmp	r0, #0
   2c73c:	movw	r0, #0
   2c740:	str	r0, [sp, #24]
   2c744:	bne	2c75c <__assert_fail@plt+0x1b2c8>
   2c748:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2c74c:	cmp	r0, #0
   2c750:	movw	r0, #0
   2c754:	moveq	r0, #1
   2c758:	str	r0, [sp, #24]
   2c75c:	ldr	r0, [sp, #24]
   2c760:	tst	r0, #1
   2c764:	beq	2c78c <__assert_fail@plt+0x1b2f8>
   2c768:	ldr	r0, [fp, #-8]
   2c76c:	movw	r1, #42868	; 0xa774
   2c770:	movt	r1, #2
   2c774:	movw	r2, #0
   2c778:	bl	2a604 <__assert_fail@plt+0x19170>
   2c77c:	movw	r1, #0
   2c780:	str	r1, [fp, #-4]
   2c784:	str	r0, [sp, #20]
   2c788:	b	2ca1c <__assert_fail@plt+0x1b588>
   2c78c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2c790:	cmp	r0, #0
   2c794:	ble	2c880 <__assert_fail@plt+0x1b3ec>
   2c798:	ldr	r0, [fp, #-8]
   2c79c:	str	r0, [fp, #-24]	; 0xffffffe8
   2c7a0:	movw	r0, #2
   2c7a4:	str	r0, [fp, #-32]	; 0xffffffe0
   2c7a8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2c7ac:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2c7b0:	cmp	r0, r1
   2c7b4:	bgt	2c834 <__assert_fail@plt+0x1b3a0>
   2c7b8:	ldr	r0, [fp, #-8]
   2c7bc:	ldr	r1, [fp, #-16]
   2c7c0:	bl	2e800 <__assert_fail@plt+0x1d36c>
   2c7c4:	str	r0, [fp, #-8]
   2c7c8:	ldr	r0, [fp, #-16]
   2c7cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2c7d0:	ldr	r2, [fp, #-8]
   2c7d4:	movw	r3, #16
   2c7d8:	bl	29200 <__assert_fail@plt+0x17d6c>
   2c7dc:	str	r0, [fp, #-24]	; 0xffffffe8
   2c7e0:	ldr	r0, [fp, #-8]
   2c7e4:	movw	r1, #0
   2c7e8:	cmp	r0, r1
   2c7ec:	movw	r0, #1
   2c7f0:	str	r0, [sp, #16]
   2c7f4:	beq	2c810 <__assert_fail@plt+0x1b37c>
   2c7f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2c7fc:	movw	r1, #0
   2c800:	cmp	r0, r1
   2c804:	movw	r0, #0
   2c808:	moveq	r0, #1
   2c80c:	str	r0, [sp, #16]
   2c810:	ldr	r0, [sp, #16]
   2c814:	tst	r0, #1
   2c818:	beq	2c820 <__assert_fail@plt+0x1b38c>
   2c81c:	b	2ca08 <__assert_fail@plt+0x1b574>
   2c820:	b	2c824 <__assert_fail@plt+0x1b390>
   2c824:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2c828:	add	r0, r0, #1
   2c82c:	str	r0, [fp, #-32]	; 0xffffffe0
   2c830:	b	2c7a8 <__assert_fail@plt+0x1b314>
   2c834:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2c838:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2c83c:	cmp	r0, r1
   2c840:	bne	2c850 <__assert_fail@plt+0x1b3bc>
   2c844:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2c848:	str	r0, [fp, #-4]
   2c84c:	b	2ca1c <__assert_fail@plt+0x1b588>
   2c850:	ldr	r0, [fp, #-8]
   2c854:	ldr	r1, [fp, #-16]
   2c858:	bl	2e800 <__assert_fail@plt+0x1d36c>
   2c85c:	str	r0, [fp, #-8]
   2c860:	ldr	r0, [fp, #-8]
   2c864:	movw	r1, #0
   2c868:	cmp	r0, r1
   2c86c:	bne	2c874 <__assert_fail@plt+0x1b3e0>
   2c870:	b	2ca08 <__assert_fail@plt+0x1b574>
   2c874:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2c878:	str	r0, [fp, #-28]	; 0xffffffe4
   2c87c:	b	2c888 <__assert_fail@plt+0x1b3f4>
   2c880:	movw	r0, #0
   2c884:	str	r0, [fp, #-28]	; 0xffffffe4
   2c888:	ldr	r0, [fp, #-8]
   2c88c:	ldr	r0, [r0, #24]
   2c890:	and	r0, r0, #255	; 0xff
   2c894:	cmp	r0, #17
   2c898:	bne	2c8c0 <__assert_fail@plt+0x1b42c>
   2c89c:	ldr	r0, [fp, #-8]
   2c8a0:	ldr	r0, [r0, #20]
   2c8a4:	str	r0, [sp, #56]	; 0x38
   2c8a8:	ldr	r0, [fp, #-8]
   2c8ac:	ldr	r2, [sp, #56]	; 0x38
   2c8b0:	movw	r1, #59792	; 0xe990
   2c8b4:	movt	r1, #2
   2c8b8:	bl	2a604 <__assert_fail@plt+0x19170>
   2c8bc:	str	r0, [sp, #12]
   2c8c0:	ldr	r0, [fp, #-16]
   2c8c4:	ldr	r1, [fp, #-8]
   2c8c8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2c8cc:	cmn	r2, #1
   2c8d0:	movw	r2, #0
   2c8d4:	moveq	r2, #1
   2c8d8:	tst	r2, #1
   2c8dc:	movw	r2, #11
   2c8e0:	moveq	r2, #10
   2c8e4:	movw	r3, #0
   2c8e8:	str	r2, [sp, #8]
   2c8ec:	mov	r2, r3
   2c8f0:	ldr	r3, [sp, #8]
   2c8f4:	bl	29200 <__assert_fail@plt+0x17d6c>
   2c8f8:	str	r0, [fp, #-24]	; 0xffffffe8
   2c8fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2c900:	movw	r1, #0
   2c904:	cmp	r0, r1
   2c908:	bne	2c910 <__assert_fail@plt+0x1b47c>
   2c90c:	b	2ca08 <__assert_fail@plt+0x1b574>
   2c910:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2c914:	add	r0, r0, #2
   2c918:	str	r0, [fp, #-32]	; 0xffffffe0
   2c91c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2c920:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2c924:	cmp	r0, r1
   2c928:	bgt	2c9d4 <__assert_fail@plt+0x1b540>
   2c92c:	ldr	r0, [fp, #-8]
   2c930:	ldr	r1, [fp, #-16]
   2c934:	bl	2e800 <__assert_fail@plt+0x1d36c>
   2c938:	str	r0, [fp, #-8]
   2c93c:	ldr	r0, [fp, #-16]
   2c940:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2c944:	ldr	r2, [fp, #-8]
   2c948:	movw	r3, #16
   2c94c:	bl	29200 <__assert_fail@plt+0x17d6c>
   2c950:	str	r0, [fp, #-24]	; 0xffffffe8
   2c954:	ldr	r0, [fp, #-8]
   2c958:	movw	r1, #0
   2c95c:	cmp	r0, r1
   2c960:	movw	r0, #1
   2c964:	str	r0, [sp, #4]
   2c968:	beq	2c984 <__assert_fail@plt+0x1b4f0>
   2c96c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2c970:	movw	r1, #0
   2c974:	cmp	r0, r1
   2c978:	movw	r0, #0
   2c97c:	moveq	r0, #1
   2c980:	str	r0, [sp, #4]
   2c984:	ldr	r0, [sp, #4]
   2c988:	tst	r0, #1
   2c98c:	beq	2c994 <__assert_fail@plt+0x1b500>
   2c990:	b	2ca08 <__assert_fail@plt+0x1b574>
   2c994:	ldr	r0, [fp, #-16]
   2c998:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2c99c:	movw	r2, #0
   2c9a0:	movw	r3, #10
   2c9a4:	bl	29200 <__assert_fail@plt+0x17d6c>
   2c9a8:	str	r0, [fp, #-24]	; 0xffffffe8
   2c9ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2c9b0:	movw	r1, #0
   2c9b4:	cmp	r0, r1
   2c9b8:	bne	2c9c0 <__assert_fail@plt+0x1b52c>
   2c9bc:	b	2ca08 <__assert_fail@plt+0x1b574>
   2c9c0:	b	2c9c4 <__assert_fail@plt+0x1b530>
   2c9c4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2c9c8:	add	r0, r0, #1
   2c9cc:	str	r0, [fp, #-32]	; 0xffffffe0
   2c9d0:	b	2c91c <__assert_fail@plt+0x1b488>
   2c9d4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2c9d8:	movw	r1, #0
   2c9dc:	cmp	r0, r1
   2c9e0:	beq	2c9fc <__assert_fail@plt+0x1b568>
   2c9e4:	ldr	r0, [fp, #-16]
   2c9e8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2c9ec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2c9f0:	movw	r3, #16
   2c9f4:	bl	29200 <__assert_fail@plt+0x17d6c>
   2c9f8:	str	r0, [fp, #-24]	; 0xffffffe8
   2c9fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ca00:	str	r0, [fp, #-4]
   2ca04:	b	2ca1c <__assert_fail@plt+0x1b588>
   2ca08:	ldr	r0, [fp, #12]
   2ca0c:	movw	r1, #12
   2ca10:	str	r1, [r0]
   2ca14:	movw	r0, #0
   2ca18:	str	r0, [fp, #-4]
   2ca1c:	ldr	r0, [fp, #-4]
   2ca20:	mov	sp, fp
   2ca24:	pop	{fp, pc}
   2ca28:	sub	sp, sp, #32
   2ca2c:	str	r0, [sp, #24]
   2ca30:	str	r1, [sp, #20]
   2ca34:	str	r2, [sp, #16]
   2ca38:	ldr	r0, [sp, #20]
   2ca3c:	ldr	r0, [r0, #56]	; 0x38
   2ca40:	ldr	r1, [sp, #20]
   2ca44:	ldr	r1, [r1, #40]	; 0x28
   2ca48:	cmp	r0, r1
   2ca4c:	bgt	2ca74 <__assert_fail@plt+0x1b5e0>
   2ca50:	ldr	r0, [sp, #24]
   2ca54:	ldr	r1, [r0, #4]
   2ca58:	mvn	r2, #255	; 0xff
   2ca5c:	and	r1, r1, r2
   2ca60:	orr	r1, r1, #2
   2ca64:	str	r1, [r0, #4]
   2ca68:	movw	r0, #0
   2ca6c:	str	r0, [sp, #28]
   2ca70:	b	2cd8c <__assert_fail@plt+0x1b8f8>
   2ca74:	ldr	r0, [sp, #20]
   2ca78:	ldr	r0, [r0, #4]
   2ca7c:	ldr	r1, [sp, #20]
   2ca80:	ldr	r1, [r1, #40]	; 0x28
   2ca84:	add	r1, r1, #0
   2ca88:	add	r0, r0, r1
   2ca8c:	ldrb	r0, [r0]
   2ca90:	strb	r0, [sp, #15]
   2ca94:	ldrb	r0, [sp, #15]
   2ca98:	ldr	r1, [sp, #24]
   2ca9c:	strb	r0, [r1]
   2caa0:	ldr	r0, [sp, #20]
   2caa4:	ldr	r0, [r0, #80]	; 0x50
   2caa8:	cmp	r0, #1
   2caac:	ble	2cb08 <__assert_fail@plt+0x1b674>
   2cab0:	ldr	r0, [sp, #20]
   2cab4:	ldr	r0, [r0, #40]	; 0x28
   2cab8:	ldr	r1, [sp, #20]
   2cabc:	ldr	r1, [r1, #28]
   2cac0:	cmp	r0, r1
   2cac4:	beq	2cb08 <__assert_fail@plt+0x1b674>
   2cac8:	ldr	r0, [sp, #20]
   2cacc:	ldr	r1, [r0, #8]
   2cad0:	ldr	r0, [r0, #40]	; 0x28
   2cad4:	add	r0, r1, r0, lsl #2
   2cad8:	ldr	r0, [r0]
   2cadc:	cmn	r0, #1
   2cae0:	bne	2cb08 <__assert_fail@plt+0x1b674>
   2cae4:	ldr	r0, [sp, #24]
   2cae8:	ldr	r1, [r0, #4]
   2caec:	mvn	r2, #255	; 0xff
   2caf0:	and	r1, r1, r2
   2caf4:	orr	r1, r1, #1
   2caf8:	str	r1, [r0, #4]
   2cafc:	movw	r0, #1
   2cb00:	str	r0, [sp, #28]
   2cb04:	b	2cd8c <__assert_fail@plt+0x1b8f8>
   2cb08:	ldrb	r0, [sp, #15]
   2cb0c:	cmp	r0, #92	; 0x5c
   2cb10:	bne	2cba0 <__assert_fail@plt+0x1b70c>
   2cb14:	ldr	r0, [sp, #16]
   2cb18:	and	r0, r0, #1
   2cb1c:	cmp	r0, #0
   2cb20:	beq	2cba0 <__assert_fail@plt+0x1b70c>
   2cb24:	ldr	r0, [sp, #20]
   2cb28:	ldr	r0, [r0, #40]	; 0x28
   2cb2c:	add	r0, r0, #1
   2cb30:	ldr	r1, [sp, #20]
   2cb34:	ldr	r1, [r1, #48]	; 0x30
   2cb38:	cmp	r0, r1
   2cb3c:	bge	2cba0 <__assert_fail@plt+0x1b70c>
   2cb40:	ldr	r0, [sp, #20]
   2cb44:	ldr	r1, [r0, #40]	; 0x28
   2cb48:	add	r1, r1, #1
   2cb4c:	str	r1, [r0, #40]	; 0x28
   2cb50:	ldr	r0, [sp, #20]
   2cb54:	ldr	r0, [r0, #4]
   2cb58:	ldr	r1, [sp, #20]
   2cb5c:	ldr	r1, [r1, #40]	; 0x28
   2cb60:	add	r1, r1, #0
   2cb64:	add	r0, r0, r1
   2cb68:	ldrb	r0, [r0]
   2cb6c:	strb	r0, [sp, #14]
   2cb70:	ldrb	r0, [sp, #14]
   2cb74:	ldr	r1, [sp, #24]
   2cb78:	strb	r0, [r1]
   2cb7c:	ldr	r0, [sp, #24]
   2cb80:	ldr	r1, [r0, #4]
   2cb84:	mvn	r2, #255	; 0xff
   2cb88:	and	r1, r1, r2
   2cb8c:	orr	r1, r1, #1
   2cb90:	str	r1, [r0, #4]
   2cb94:	movw	r0, #1
   2cb98:	str	r0, [sp, #28]
   2cb9c:	b	2cd8c <__assert_fail@plt+0x1b8f8>
   2cba0:	ldrb	r0, [sp, #15]
   2cba4:	cmp	r0, #91	; 0x5b
   2cba8:	bne	2cce0 <__assert_fail@plt+0x1b84c>
   2cbac:	ldr	r0, [sp, #20]
   2cbb0:	ldr	r0, [r0, #40]	; 0x28
   2cbb4:	add	r0, r0, #1
   2cbb8:	ldr	r1, [sp, #20]
   2cbbc:	ldr	r1, [r1, #48]	; 0x30
   2cbc0:	cmp	r0, r1
   2cbc4:	bge	2cbec <__assert_fail@plt+0x1b758>
   2cbc8:	ldr	r0, [sp, #20]
   2cbcc:	ldr	r0, [r0, #4]
   2cbd0:	ldr	r1, [sp, #20]
   2cbd4:	ldr	r1, [r1, #40]	; 0x28
   2cbd8:	add	r1, r1, #1
   2cbdc:	add	r0, r0, r1
   2cbe0:	ldrb	r0, [r0]
   2cbe4:	strb	r0, [sp, #13]
   2cbe8:	b	2cbf4 <__assert_fail@plt+0x1b760>
   2cbec:	movw	r0, #0
   2cbf0:	strb	r0, [sp, #13]
   2cbf4:	ldrb	r0, [sp, #13]
   2cbf8:	ldr	r1, [sp, #24]
   2cbfc:	strb	r0, [r1]
   2cc00:	mov	r0, #2
   2cc04:	str	r0, [sp, #8]
   2cc08:	ldrb	r0, [sp, #13]
   2cc0c:	mov	r1, r0
   2cc10:	cmp	r0, #46	; 0x2e
   2cc14:	str	r1, [sp, #4]
   2cc18:	beq	2cc40 <__assert_fail@plt+0x1b7ac>
   2cc1c:	b	2cc20 <__assert_fail@plt+0x1b78c>
   2cc20:	ldr	r0, [sp, #4]
   2cc24:	cmp	r0, #58	; 0x3a
   2cc28:	beq	2cc78 <__assert_fail@plt+0x1b7e4>
   2cc2c:	b	2cc30 <__assert_fail@plt+0x1b79c>
   2cc30:	ldr	r0, [sp, #4]
   2cc34:	cmp	r0, #61	; 0x3d
   2cc38:	beq	2cc5c <__assert_fail@plt+0x1b7c8>
   2cc3c:	b	2cca8 <__assert_fail@plt+0x1b814>
   2cc40:	ldr	r0, [sp, #24]
   2cc44:	ldr	r1, [r0, #4]
   2cc48:	mvn	r2, #255	; 0xff
   2cc4c:	and	r1, r1, r2
   2cc50:	orr	r1, r1, #26
   2cc54:	str	r1, [r0, #4]
   2cc58:	b	2ccd4 <__assert_fail@plt+0x1b840>
   2cc5c:	ldr	r0, [sp, #24]
   2cc60:	ldr	r1, [r0, #4]
   2cc64:	mvn	r2, #255	; 0xff
   2cc68:	and	r1, r1, r2
   2cc6c:	orr	r1, r1, #28
   2cc70:	str	r1, [r0, #4]
   2cc74:	b	2ccd4 <__assert_fail@plt+0x1b840>
   2cc78:	ldr	r0, [sp, #16]
   2cc7c:	and	r0, r0, #4
   2cc80:	cmp	r0, #0
   2cc84:	beq	2cca4 <__assert_fail@plt+0x1b810>
   2cc88:	ldr	r0, [sp, #24]
   2cc8c:	ldr	r1, [r0, #4]
   2cc90:	mvn	r2, #255	; 0xff
   2cc94:	and	r1, r1, r2
   2cc98:	orr	r1, r1, #30
   2cc9c:	str	r1, [r0, #4]
   2cca0:	b	2ccd4 <__assert_fail@plt+0x1b840>
   2cca4:	b	2cca8 <__assert_fail@plt+0x1b814>
   2cca8:	ldr	r0, [sp, #24]
   2ccac:	ldr	r1, [r0, #4]
   2ccb0:	mvn	r2, #255	; 0xff
   2ccb4:	and	r1, r1, r2
   2ccb8:	orr	r1, r1, #1
   2ccbc:	str	r1, [r0, #4]
   2ccc0:	ldrb	r0, [sp, #15]
   2ccc4:	ldr	r1, [sp, #24]
   2ccc8:	strb	r0, [r1]
   2cccc:	movw	r0, #1
   2ccd0:	str	r0, [sp, #8]
   2ccd4:	ldr	r0, [sp, #8]
   2ccd8:	str	r0, [sp, #28]
   2ccdc:	b	2cd8c <__assert_fail@plt+0x1b8f8>
   2cce0:	ldrb	r0, [sp, #15]
   2cce4:	mov	r1, r0
   2cce8:	cmp	r0, #45	; 0x2d
   2ccec:	str	r1, [sp]
   2ccf0:	beq	2cd18 <__assert_fail@plt+0x1b884>
   2ccf4:	b	2ccf8 <__assert_fail@plt+0x1b864>
   2ccf8:	ldr	r0, [sp]
   2ccfc:	cmp	r0, #93	; 0x5d
   2cd00:	beq	2cd34 <__assert_fail@plt+0x1b8a0>
   2cd04:	b	2cd08 <__assert_fail@plt+0x1b874>
   2cd08:	ldr	r0, [sp]
   2cd0c:	cmp	r0, #94	; 0x5e
   2cd10:	beq	2cd50 <__assert_fail@plt+0x1b8bc>
   2cd14:	b	2cd6c <__assert_fail@plt+0x1b8d8>
   2cd18:	ldr	r0, [sp, #24]
   2cd1c:	ldr	r1, [r0, #4]
   2cd20:	mvn	r2, #255	; 0xff
   2cd24:	and	r1, r1, r2
   2cd28:	orr	r1, r1, #22
   2cd2c:	str	r1, [r0, #4]
   2cd30:	b	2cd84 <__assert_fail@plt+0x1b8f0>
   2cd34:	ldr	r0, [sp, #24]
   2cd38:	ldr	r1, [r0, #4]
   2cd3c:	mvn	r2, #255	; 0xff
   2cd40:	and	r1, r1, r2
   2cd44:	orr	r1, r1, #21
   2cd48:	str	r1, [r0, #4]
   2cd4c:	b	2cd84 <__assert_fail@plt+0x1b8f0>
   2cd50:	ldr	r0, [sp, #24]
   2cd54:	ldr	r1, [r0, #4]
   2cd58:	mvn	r2, #255	; 0xff
   2cd5c:	and	r1, r1, r2
   2cd60:	orr	r1, r1, #25
   2cd64:	str	r1, [r0, #4]
   2cd68:	b	2cd84 <__assert_fail@plt+0x1b8f0>
   2cd6c:	ldr	r0, [sp, #24]
   2cd70:	ldr	r1, [r0, #4]
   2cd74:	mvn	r2, #255	; 0xff
   2cd78:	and	r1, r1, r2
   2cd7c:	orr	r1, r1, #1
   2cd80:	str	r1, [r0, #4]
   2cd84:	movw	r0, #1
   2cd88:	str	r0, [sp, #28]
   2cd8c:	ldr	r0, [sp, #28]
   2cd90:	add	sp, sp, #32
   2cd94:	bx	lr
   2cd98:	sub	sp, sp, #8
   2cd9c:	str	r0, [sp, #4]
   2cda0:	str	r1, [sp]
   2cda4:	ldr	r0, [sp]
   2cda8:	asr	r1, r0, #31
   2cdac:	add	r1, r0, r1, lsr #27
   2cdb0:	bic	r2, r1, #31
   2cdb4:	sub	r0, r0, r2
   2cdb8:	mov	r2, #1
   2cdbc:	lsl	r0, r2, r0
   2cdc0:	ldr	r2, [sp, #4]
   2cdc4:	asr	r1, r1, #5
   2cdc8:	add	r1, r2, r1, lsl #2
   2cdcc:	ldr	r2, [r1]
   2cdd0:	orr	r0, r2, r0
   2cdd4:	str	r0, [r1]
   2cdd8:	add	sp, sp, #8
   2cddc:	bx	lr
   2cde0:	push	{r4, sl, fp, lr}
   2cde4:	add	fp, sp, #8
   2cde8:	sub	sp, sp, #48	; 0x30
   2cdec:	ldr	ip, [fp, #16]
   2cdf0:	ldr	lr, [fp, #12]
   2cdf4:	ldr	r4, [fp, #8]
   2cdf8:	str	r0, [fp, #-16]
   2cdfc:	str	r1, [fp, #-20]	; 0xffffffec
   2ce00:	str	r2, [fp, #-24]	; 0xffffffe8
   2ce04:	str	r3, [sp, #28]
   2ce08:	and	r0, ip, #1
   2ce0c:	strb	r0, [sp, #27]
   2ce10:	ldr	r0, [fp, #-20]	; 0xffffffec
   2ce14:	ldr	r1, [fp, #-20]	; 0xffffffec
   2ce18:	ldr	r1, [r1, #40]	; 0x28
   2ce1c:	str	r4, [sp, #8]
   2ce20:	str	lr, [sp, #4]
   2ce24:	bl	2e234 <__assert_fail@plt+0x1cda0>
   2ce28:	str	r0, [sp, #20]
   2ce2c:	ldr	r0, [sp, #20]
   2ce30:	cmp	r0, #1
   2ce34:	ble	2ce7c <__assert_fail@plt+0x1b9e8>
   2ce38:	ldr	r0, [fp, #-16]
   2ce3c:	movw	r1, #1
   2ce40:	str	r1, [r0]
   2ce44:	ldr	r0, [fp, #-20]	; 0xffffffec
   2ce48:	ldr	r1, [fp, #-20]	; 0xffffffec
   2ce4c:	ldr	r1, [r1, #40]	; 0x28
   2ce50:	bl	2a314 <__assert_fail@plt+0x18e80>
   2ce54:	ldr	r1, [fp, #-16]
   2ce58:	str	r0, [r1, #4]
   2ce5c:	ldr	r0, [sp, #20]
   2ce60:	ldr	r1, [fp, #-20]	; 0xffffffec
   2ce64:	ldr	lr, [r1, #40]	; 0x28
   2ce68:	add	r0, lr, r0
   2ce6c:	str	r0, [r1, #40]	; 0x28
   2ce70:	movw	r0, #0
   2ce74:	str	r0, [fp, #-12]
   2ce78:	b	2cf58 <__assert_fail@plt+0x1bac4>
   2ce7c:	ldr	r0, [sp, #28]
   2ce80:	ldr	r1, [fp, #-20]	; 0xffffffec
   2ce84:	ldr	r2, [r1, #40]	; 0x28
   2ce88:	add	r0, r2, r0
   2ce8c:	str	r0, [r1, #40]	; 0x28
   2ce90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ce94:	ldr	r0, [r0, #4]
   2ce98:	and	r0, r0, #255	; 0xff
   2ce9c:	cmp	r0, #26
   2cea0:	beq	2cecc <__assert_fail@plt+0x1ba38>
   2cea4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2cea8:	ldr	r0, [r0, #4]
   2ceac:	and	r0, r0, #255	; 0xff
   2ceb0:	cmp	r0, #30
   2ceb4:	beq	2cecc <__assert_fail@plt+0x1ba38>
   2ceb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2cebc:	ldr	r0, [r0, #4]
   2cec0:	and	r0, r0, #255	; 0xff
   2cec4:	cmp	r0, #28
   2cec8:	bne	2cee4 <__assert_fail@plt+0x1ba50>
   2cecc:	ldr	r0, [fp, #-16]
   2ced0:	ldr	r1, [fp, #-20]	; 0xffffffec
   2ced4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2ced8:	bl	2e2d0 <__assert_fail@plt+0x1ce3c>
   2cedc:	str	r0, [fp, #-12]
   2cee0:	b	2cf58 <__assert_fail@plt+0x1bac4>
   2cee4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2cee8:	ldr	r0, [r0, #4]
   2ceec:	and	r0, r0, #255	; 0xff
   2cef0:	cmp	r0, #22
   2cef4:	bne	2cf38 <__assert_fail@plt+0x1baa4>
   2cef8:	ldrb	r0, [sp, #27]
   2cefc:	tst	r0, #1
   2cf00:	bne	2cf38 <__assert_fail@plt+0x1baa4>
   2cf04:	ldr	r1, [fp, #-20]	; 0xffffffec
   2cf08:	ldr	r2, [fp, #12]
   2cf0c:	add	r0, sp, #12
   2cf10:	bl	2ca28 <__assert_fail@plt+0x1b594>
   2cf14:	ldr	r1, [sp, #16]
   2cf18:	and	r1, r1, #255	; 0xff
   2cf1c:	cmp	r1, #21
   2cf20:	str	r0, [sp]
   2cf24:	beq	2cf34 <__assert_fail@plt+0x1baa0>
   2cf28:	movw	r0, #11
   2cf2c:	str	r0, [fp, #-12]
   2cf30:	b	2cf58 <__assert_fail@plt+0x1bac4>
   2cf34:	b	2cf38 <__assert_fail@plt+0x1baa4>
   2cf38:	ldr	r0, [fp, #-16]
   2cf3c:	movw	r1, #0
   2cf40:	str	r1, [r0]
   2cf44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2cf48:	ldrb	r0, [r0]
   2cf4c:	ldr	r2, [fp, #-16]
   2cf50:	strb	r0, [r2, #4]
   2cf54:	str	r1, [fp, #-12]
   2cf58:	ldr	r0, [fp, #-12]
   2cf5c:	sub	sp, fp, #8
   2cf60:	pop	{r4, sl, fp, pc}
   2cf64:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2cf68:	add	fp, sp, #28
   2cf6c:	sub	sp, sp, #132	; 0x84
   2cf70:	ldr	ip, [fp, #40]	; 0x28
   2cf74:	ldr	lr, [fp, #36]	; 0x24
   2cf78:	ldr	r4, [fp, #32]
   2cf7c:	ldr	r5, [fp, #28]
   2cf80:	ldr	r6, [fp, #24]
   2cf84:	ldr	r7, [fp, #20]
   2cf88:	ldr	r8, [fp, #16]
   2cf8c:	ldr	r9, [fp, #12]
   2cf90:	ldr	sl, [fp, #8]
   2cf94:	str	r0, [fp, #-36]	; 0xffffffdc
   2cf98:	str	r1, [fp, #-40]	; 0xffffffd8
   2cf9c:	str	r2, [fp, #-44]	; 0xffffffd4
   2cfa0:	str	r3, [fp, #-48]	; 0xffffffd0
   2cfa4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2cfa8:	ldr	r0, [r0]
   2cfac:	cmp	r0, #2
   2cfb0:	movw	r0, #1
   2cfb4:	str	sl, [sp, #76]	; 0x4c
   2cfb8:	str	r7, [sp, #72]	; 0x48
   2cfbc:	str	r8, [sp, #68]	; 0x44
   2cfc0:	str	r9, [sp, #64]	; 0x40
   2cfc4:	str	ip, [sp, #60]	; 0x3c
   2cfc8:	str	lr, [sp, #56]	; 0x38
   2cfcc:	str	r4, [sp, #52]	; 0x34
   2cfd0:	str	r5, [sp, #48]	; 0x30
   2cfd4:	str	r6, [sp, #44]	; 0x2c
   2cfd8:	str	r0, [sp, #40]	; 0x28
   2cfdc:	beq	2d028 <__assert_fail@plt+0x1bb94>
   2cfe0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2cfe4:	ldr	r0, [r0]
   2cfe8:	cmp	r0, #4
   2cfec:	movw	r0, #1
   2cff0:	str	r0, [sp, #40]	; 0x28
   2cff4:	beq	2d028 <__assert_fail@plt+0x1bb94>
   2cff8:	ldr	r0, [fp, #8]
   2cffc:	ldr	r0, [r0]
   2d000:	cmp	r0, #2
   2d004:	movw	r0, #1
   2d008:	str	r0, [sp, #40]	; 0x28
   2d00c:	beq	2d028 <__assert_fail@plt+0x1bb94>
   2d010:	ldr	r0, [fp, #8]
   2d014:	ldr	r0, [r0]
   2d018:	cmp	r0, #4
   2d01c:	movw	r0, #0
   2d020:	moveq	r0, #1
   2d024:	str	r0, [sp, #40]	; 0x28
   2d028:	ldr	r0, [sp, #40]	; 0x28
   2d02c:	tst	r0, #1
   2d030:	beq	2d040 <__assert_fail@plt+0x1bbac>
   2d034:	movw	r0, #11
   2d038:	str	r0, [fp, #-32]	; 0xffffffe0
   2d03c:	b	2d400 <__assert_fail@plt+0x1bf6c>
   2d040:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2d044:	ldr	r0, [r0]
   2d048:	cmp	r0, #3
   2d04c:	bne	2d06c <__assert_fail@plt+0x1bbd8>
   2d050:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2d054:	ldr	r0, [r0, #4]
   2d058:	bl	1138c <strlen@plt>
   2d05c:	cmp	r0, #1
   2d060:	movw	r0, #1
   2d064:	str	r0, [sp, #36]	; 0x24
   2d068:	bhi	2d0a8 <__assert_fail@plt+0x1bc14>
   2d06c:	ldr	r0, [fp, #8]
   2d070:	ldr	r0, [r0]
   2d074:	cmp	r0, #3
   2d078:	movw	r0, #0
   2d07c:	str	r0, [sp, #32]
   2d080:	bne	2d0a0 <__assert_fail@plt+0x1bc0c>
   2d084:	ldr	r0, [fp, #8]
   2d088:	ldr	r0, [r0, #4]
   2d08c:	bl	1138c <strlen@plt>
   2d090:	cmp	r0, #1
   2d094:	movw	r0, #0
   2d098:	movhi	r0, #1
   2d09c:	str	r0, [sp, #32]
   2d0a0:	ldr	r0, [sp, #32]
   2d0a4:	str	r0, [sp, #36]	; 0x24
   2d0a8:	ldr	r0, [sp, #36]	; 0x24
   2d0ac:	tst	r0, #1
   2d0b0:	beq	2d0c0 <__assert_fail@plt+0x1bc2c>
   2d0b4:	movw	r0, #3
   2d0b8:	str	r0, [fp, #-32]	; 0xffffffe0
   2d0bc:	b	2d400 <__assert_fail@plt+0x1bf6c>
   2d0c0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2d0c4:	ldr	r0, [r0]
   2d0c8:	cmp	r0, #0
   2d0cc:	bne	2d0e0 <__assert_fail@plt+0x1bc4c>
   2d0d0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2d0d4:	ldrb	r0, [r0, #4]
   2d0d8:	str	r0, [sp, #28]
   2d0dc:	b	2d118 <__assert_fail@plt+0x1bc84>
   2d0e0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2d0e4:	ldr	r0, [r0]
   2d0e8:	cmp	r0, #3
   2d0ec:	bne	2d104 <__assert_fail@plt+0x1bc70>
   2d0f0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2d0f4:	ldr	r0, [r0, #4]
   2d0f8:	ldrb	r0, [r0]
   2d0fc:	str	r0, [sp, #24]
   2d100:	b	2d110 <__assert_fail@plt+0x1bc7c>
   2d104:	movw	r0, #0
   2d108:	str	r0, [sp, #24]
   2d10c:	b	2d110 <__assert_fail@plt+0x1bc7c>
   2d110:	ldr	r0, [sp, #24]
   2d114:	str	r0, [sp, #28]
   2d118:	ldr	r0, [sp, #28]
   2d11c:	str	r0, [fp, #-52]	; 0xffffffcc
   2d120:	ldr	r0, [fp, #8]
   2d124:	ldr	r0, [r0]
   2d128:	cmp	r0, #0
   2d12c:	bne	2d140 <__assert_fail@plt+0x1bcac>
   2d130:	ldr	r0, [fp, #8]
   2d134:	ldrb	r0, [r0, #4]
   2d138:	str	r0, [sp, #20]
   2d13c:	b	2d178 <__assert_fail@plt+0x1bce4>
   2d140:	ldr	r0, [fp, #8]
   2d144:	ldr	r0, [r0]
   2d148:	cmp	r0, #3
   2d14c:	bne	2d164 <__assert_fail@plt+0x1bcd0>
   2d150:	ldr	r0, [fp, #8]
   2d154:	ldr	r0, [r0, #4]
   2d158:	ldrb	r0, [r0]
   2d15c:	str	r0, [sp, #16]
   2d160:	b	2d170 <__assert_fail@plt+0x1bcdc>
   2d164:	movw	r0, #0
   2d168:	str	r0, [sp, #16]
   2d16c:	b	2d170 <__assert_fail@plt+0x1bcdc>
   2d170:	ldr	r0, [sp, #16]
   2d174:	str	r0, [sp, #20]
   2d178:	ldr	r0, [sp, #20]
   2d17c:	str	r0, [fp, #-56]	; 0xffffffc8
   2d180:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2d184:	ldr	r0, [r0]
   2d188:	cmp	r0, #0
   2d18c:	beq	2d1a0 <__assert_fail@plt+0x1bd0c>
   2d190:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2d194:	ldr	r0, [r0]
   2d198:	cmp	r0, #3
   2d19c:	bne	2d1b8 <__assert_fail@plt+0x1bd24>
   2d1a0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   2d1a4:	ldr	r1, [fp, #12]
   2d1a8:	and	r0, r0, #255	; 0xff
   2d1ac:	bl	2e658 <__assert_fail@plt+0x1d1c4>
   2d1b0:	str	r0, [sp, #12]
   2d1b4:	b	2d1c4 <__assert_fail@plt+0x1bd30>
   2d1b8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2d1bc:	ldr	r0, [r0, #4]
   2d1c0:	str	r0, [sp, #12]
   2d1c4:	ldr	r0, [sp, #12]
   2d1c8:	str	r0, [fp, #-60]	; 0xffffffc4
   2d1cc:	ldr	r0, [fp, #8]
   2d1d0:	ldr	r0, [r0]
   2d1d4:	cmp	r0, #0
   2d1d8:	beq	2d1ec <__assert_fail@plt+0x1bd58>
   2d1dc:	ldr	r0, [fp, #8]
   2d1e0:	ldr	r0, [r0]
   2d1e4:	cmp	r0, #3
   2d1e8:	bne	2d204 <__assert_fail@plt+0x1bd70>
   2d1ec:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2d1f0:	ldr	r1, [fp, #12]
   2d1f4:	and	r0, r0, #255	; 0xff
   2d1f8:	bl	2e658 <__assert_fail@plt+0x1d1c4>
   2d1fc:	str	r0, [sp, #8]
   2d200:	b	2d210 <__assert_fail@plt+0x1bd7c>
   2d204:	ldr	r0, [fp, #8]
   2d208:	ldr	r0, [r0, #4]
   2d20c:	str	r0, [sp, #8]
   2d210:	ldr	r0, [sp, #8]
   2d214:	str	r0, [fp, #-64]	; 0xffffffc0
   2d218:	ldr	r0, [fp, #-60]	; 0xffffffc4
   2d21c:	cmn	r0, #1
   2d220:	beq	2d230 <__assert_fail@plt+0x1bd9c>
   2d224:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2d228:	cmn	r0, #1
   2d22c:	bne	2d23c <__assert_fail@plt+0x1bda8>
   2d230:	movw	r0, #3
   2d234:	str	r0, [fp, #-32]	; 0xffffffe0
   2d238:	b	2d400 <__assert_fail@plt+0x1bf6c>
   2d23c:	ldr	r0, [fp, #16]
   2d240:	and	r0, r0, #65536	; 0x10000
   2d244:	cmp	r0, #0
   2d248:	movw	r0, #0
   2d24c:	str	r0, [sp, #4]
   2d250:	beq	2d26c <__assert_fail@plt+0x1bdd8>
   2d254:	ldr	r0, [fp, #-60]	; 0xffffffc4
   2d258:	ldr	r1, [fp, #-64]	; 0xffffffc0
   2d25c:	cmp	r0, r1
   2d260:	movw	r0, #0
   2d264:	movhi	r0, #1
   2d268:	str	r0, [sp, #4]
   2d26c:	ldr	r0, [sp, #4]
   2d270:	tst	r0, #1
   2d274:	beq	2d284 <__assert_fail@plt+0x1bdf0>
   2d278:	movw	r0, #11
   2d27c:	str	r0, [fp, #-32]	; 0xffffffe0
   2d280:	b	2d400 <__assert_fail@plt+0x1bf6c>
   2d284:	b	2d288 <__assert_fail@plt+0x1bdf4>
   2d288:	ldr	r0, [fp, #12]
   2d28c:	ldr	r0, [r0, #92]	; 0x5c
   2d290:	cmp	r0, #1
   2d294:	ble	2d3a4 <__assert_fail@plt+0x1bf10>
   2d298:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2d29c:	ldr	r0, [r0]
   2d2a0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2d2a4:	ldr	r1, [r1, #32]
   2d2a8:	cmp	r0, r1
   2d2ac:	bne	2d370 <__assert_fail@plt+0x1bedc>
   2d2b0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2d2b4:	ldr	r0, [r0, #32]
   2d2b8:	mov	r1, #1
   2d2bc:	orr	r0, r1, r0, lsl #1
   2d2c0:	str	r0, [fp, #-76]	; 0xffffffb4
   2d2c4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2d2c8:	ldr	r0, [r0, #4]
   2d2cc:	ldr	r1, [fp, #-76]	; 0xffffffb4
   2d2d0:	lsl	r1, r1, #2
   2d2d4:	bl	3fc48 <__assert_fail@plt+0x2e7b4>
   2d2d8:	str	r0, [fp, #-68]	; 0xffffffbc
   2d2dc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2d2e0:	ldr	r0, [r0, #8]
   2d2e4:	ldr	r1, [fp, #-76]	; 0xffffffb4
   2d2e8:	lsl	r1, r1, #2
   2d2ec:	bl	3fc48 <__assert_fail@plt+0x2e7b4>
   2d2f0:	str	r0, [fp, #-72]	; 0xffffffb8
   2d2f4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   2d2f8:	movw	r1, #0
   2d2fc:	cmp	r0, r1
   2d300:	movw	r0, #1
   2d304:	str	r0, [sp]
   2d308:	beq	2d324 <__assert_fail@plt+0x1be90>
   2d30c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   2d310:	movw	r1, #0
   2d314:	cmp	r0, r1
   2d318:	movw	r0, #0
   2d31c:	moveq	r0, #1
   2d320:	str	r0, [sp]
   2d324:	ldr	r0, [sp]
   2d328:	tst	r0, #1
   2d32c:	beq	2d34c <__assert_fail@plt+0x1beb8>
   2d330:	ldr	r0, [fp, #-68]	; 0xffffffbc
   2d334:	bl	138a4 <__assert_fail@plt+0x2410>
   2d338:	ldr	r0, [fp, #-72]	; 0xffffffb8
   2d33c:	bl	138a4 <__assert_fail@plt+0x2410>
   2d340:	movw	r0, #12
   2d344:	str	r0, [fp, #-32]	; 0xffffffe0
   2d348:	b	2d400 <__assert_fail@plt+0x1bf6c>
   2d34c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   2d350:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2d354:	str	r0, [r1, #4]
   2d358:	ldr	r0, [fp, #-72]	; 0xffffffb8
   2d35c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2d360:	str	r0, [r1, #8]
   2d364:	ldr	r0, [fp, #-76]	; 0xffffffb4
   2d368:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2d36c:	str	r0, [r1]
   2d370:	ldr	r0, [fp, #-60]	; 0xffffffc4
   2d374:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2d378:	ldr	r2, [r1, #4]
   2d37c:	ldr	r1, [r1, #32]
   2d380:	str	r0, [r2, r1, lsl #2]
   2d384:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2d388:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2d38c:	ldr	r2, [r1, #8]
   2d390:	ldr	r3, [r1, #32]
   2d394:	add	ip, r3, #1
   2d398:	str	ip, [r1, #32]
   2d39c:	add	r1, r2, r3, lsl #2
   2d3a0:	str	r0, [r1]
   2d3a4:	movw	r0, #0
   2d3a8:	str	r0, [sp, #80]	; 0x50
   2d3ac:	ldr	r0, [sp, #80]	; 0x50
   2d3b0:	cmp	r0, #256	; 0x100
   2d3b4:	bcs	2d3f8 <__assert_fail@plt+0x1bf64>
   2d3b8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   2d3bc:	ldr	r1, [sp, #80]	; 0x50
   2d3c0:	cmp	r0, r1
   2d3c4:	bhi	2d3e4 <__assert_fail@plt+0x1bf50>
   2d3c8:	ldr	r0, [sp, #80]	; 0x50
   2d3cc:	ldr	r1, [fp, #-64]	; 0xffffffc0
   2d3d0:	cmp	r0, r1
   2d3d4:	bhi	2d3e4 <__assert_fail@plt+0x1bf50>
   2d3d8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2d3dc:	ldr	r1, [sp, #80]	; 0x50
   2d3e0:	bl	2cd98 <__assert_fail@plt+0x1b904>
   2d3e4:	b	2d3e8 <__assert_fail@plt+0x1bf54>
   2d3e8:	ldr	r0, [sp, #80]	; 0x50
   2d3ec:	add	r0, r0, #1
   2d3f0:	str	r0, [sp, #80]	; 0x50
   2d3f4:	b	2d3ac <__assert_fail@plt+0x1bf18>
   2d3f8:	movw	r0, #0
   2d3fc:	str	r0, [fp, #-32]	; 0xffffffe0
   2d400:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2d404:	sub	sp, fp, #28
   2d408:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d40c:	push	{fp, lr}
   2d410:	mov	fp, sp
   2d414:	sub	sp, sp, #24
   2d418:	str	r0, [fp, #-8]
   2d41c:	str	r1, [sp, #12]
   2d420:	str	r2, [sp, #8]
   2d424:	str	r3, [sp, #4]
   2d428:	ldr	r0, [sp, #4]
   2d42c:	bl	1138c <strlen@plt>
   2d430:	cmp	r0, #1
   2d434:	beq	2d444 <__assert_fail@plt+0x1bfb0>
   2d438:	movw	r0, #3
   2d43c:	str	r0, [fp, #-4]
   2d440:	b	2d45c <__assert_fail@plt+0x1bfc8>
   2d444:	ldr	r0, [fp, #-8]
   2d448:	ldr	r1, [sp, #4]
   2d44c:	ldrb	r1, [r1]
   2d450:	bl	2cd98 <__assert_fail@plt+0x1b904>
   2d454:	movw	r0, #0
   2d458:	str	r0, [fp, #-4]
   2d45c:	ldr	r0, [fp, #-4]
   2d460:	mov	sp, fp
   2d464:	pop	{fp, pc}
   2d468:	push	{r4, r5, fp, lr}
   2d46c:	add	fp, sp, #8
   2d470:	sub	sp, sp, #40	; 0x28
   2d474:	ldr	ip, [fp, #20]
   2d478:	ldr	lr, [fp, #16]
   2d47c:	ldr	r4, [fp, #12]
   2d480:	ldr	r5, [fp, #8]
   2d484:	str	r0, [fp, #-16]
   2d488:	str	r1, [fp, #-20]	; 0xffffffec
   2d48c:	str	r2, [sp, #24]
   2d490:	str	r3, [sp, #20]
   2d494:	ldr	r0, [sp, #20]
   2d498:	str	r5, [sp, #12]
   2d49c:	str	ip, [sp, #8]
   2d4a0:	str	lr, [sp, #4]
   2d4a4:	str	r4, [sp]
   2d4a8:	bl	1138c <strlen@plt>
   2d4ac:	str	r0, [sp, #16]
   2d4b0:	ldr	r0, [sp, #16]
   2d4b4:	cmp	r0, #1
   2d4b8:	beq	2d4c8 <__assert_fail@plt+0x1c034>
   2d4bc:	movw	r0, #3
   2d4c0:	str	r0, [fp, #-12]
   2d4c4:	b	2d4e0 <__assert_fail@plt+0x1c04c>
   2d4c8:	ldr	r0, [fp, #-16]
   2d4cc:	ldr	r1, [sp, #20]
   2d4d0:	ldrb	r1, [r1]
   2d4d4:	bl	2cd98 <__assert_fail@plt+0x1b904>
   2d4d8:	movw	r0, #0
   2d4dc:	str	r0, [fp, #-12]
   2d4e0:	ldr	r0, [fp, #-12]
   2d4e4:	sub	sp, fp, #8
   2d4e8:	pop	{r4, r5, fp, pc}
   2d4ec:	push	{fp, lr}
   2d4f0:	mov	fp, sp
   2d4f4:	sub	sp, sp, #48	; 0x30
   2d4f8:	ldr	ip, [fp, #12]
   2d4fc:	ldr	lr, [fp, #8]
   2d500:	str	r0, [fp, #-8]
   2d504:	str	r1, [fp, #-12]
   2d508:	str	r2, [fp, #-16]
   2d50c:	str	r3, [fp, #-20]	; 0xffffffec
   2d510:	ldr	r0, [fp, #8]
   2d514:	str	r0, [sp, #20]
   2d518:	ldr	r0, [fp, #12]
   2d51c:	and	r0, r0, #4194304	; 0x400000
   2d520:	cmp	r0, #0
   2d524:	str	lr, [sp, #8]
   2d528:	str	ip, [sp, #4]
   2d52c:	beq	2d56c <__assert_fail@plt+0x1c0d8>
   2d530:	ldr	r0, [sp, #20]
   2d534:	movw	r1, #23240	; 0x5ac8
   2d538:	movt	r1, #4
   2d53c:	bl	111d0 <strcmp@plt>
   2d540:	cmp	r0, #0
   2d544:	beq	2d560 <__assert_fail@plt+0x1c0cc>
   2d548:	ldr	r0, [sp, #20]
   2d54c:	movw	r1, #23246	; 0x5ace
   2d550:	movt	r1, #4
   2d554:	bl	111d0 <strcmp@plt>
   2d558:	cmp	r0, #0
   2d55c:	bne	2d56c <__assert_fail@plt+0x1c0d8>
   2d560:	movw	r0, #23252	; 0x5ad4
   2d564:	movt	r0, #4
   2d568:	str	r0, [sp, #20]
   2d56c:	ldr	r0, [fp, #-20]	; 0xffffffec
   2d570:	ldr	r0, [r0]
   2d574:	ldr	r1, [fp, #-16]
   2d578:	ldr	r1, [r1, #36]	; 0x24
   2d57c:	cmp	r0, r1
   2d580:	bne	2d5e4 <__assert_fail@plt+0x1c150>
   2d584:	ldr	r0, [fp, #-16]
   2d588:	ldr	r0, [r0, #36]	; 0x24
   2d58c:	mov	r1, #1
   2d590:	orr	r0, r1, r0, lsl #1
   2d594:	str	r0, [sp, #16]
   2d598:	ldr	r0, [fp, #-16]
   2d59c:	ldr	r0, [r0, #12]
   2d5a0:	ldr	r1, [sp, #16]
   2d5a4:	lsl	r1, r1, #2
   2d5a8:	bl	3fc48 <__assert_fail@plt+0x2e7b4>
   2d5ac:	str	r0, [sp, #12]
   2d5b0:	ldr	r0, [sp, #12]
   2d5b4:	movw	r1, #0
   2d5b8:	cmp	r0, r1
   2d5bc:	bne	2d5cc <__assert_fail@plt+0x1c138>
   2d5c0:	movw	r0, #12
   2d5c4:	str	r0, [fp, #-4]
   2d5c8:	b	2e188 <__assert_fail@plt+0x1ccf4>
   2d5cc:	ldr	r0, [sp, #12]
   2d5d0:	ldr	r1, [fp, #-16]
   2d5d4:	str	r0, [r1, #12]
   2d5d8:	ldr	r0, [sp, #16]
   2d5dc:	ldr	r1, [fp, #-20]	; 0xffffffec
   2d5e0:	str	r0, [r1]
   2d5e4:	ldr	r0, [sp, #20]
   2d5e8:	bl	111a0 <wctype@plt>
   2d5ec:	ldr	lr, [fp, #-16]
   2d5f0:	ldr	r1, [lr, #12]
   2d5f4:	ldr	r2, [lr, #36]	; 0x24
   2d5f8:	add	r3, r2, #1
   2d5fc:	str	r3, [lr, #36]	; 0x24
   2d600:	add	r1, r1, r2, lsl #2
   2d604:	str	r0, [r1]
   2d608:	ldr	r0, [sp, #20]
   2d60c:	movw	r1, #23228	; 0x5abc
   2d610:	movt	r1, #4
   2d614:	bl	111d0 <strcmp@plt>
   2d618:	cmp	r0, #0
   2d61c:	bne	2d6f8 <__assert_fail@plt+0x1c264>
   2d620:	b	2d624 <__assert_fail@plt+0x1c190>
   2d624:	ldr	r0, [fp, #-8]
   2d628:	movw	r1, #0
   2d62c:	cmp	r0, r1
   2d630:	beq	2d698 <__assert_fail@plt+0x1c204>
   2d634:	movw	r0, #0
   2d638:	str	r0, [sp, #24]
   2d63c:	ldr	r0, [sp, #24]
   2d640:	cmp	r0, #256	; 0x100
   2d644:	bge	2d694 <__assert_fail@plt+0x1c200>
   2d648:	bl	11368 <__ctype_b_loc@plt>
   2d64c:	ldr	r0, [r0]
   2d650:	ldr	lr, [sp, #24]
   2d654:	add	r0, r0, lr, lsl #1
   2d658:	ldrh	r0, [r0]
   2d65c:	and	r0, r0, #8
   2d660:	cmp	r0, #0
   2d664:	beq	2d680 <__assert_fail@plt+0x1c1ec>
   2d668:	ldr	r0, [fp, #-12]
   2d66c:	ldr	r1, [fp, #-8]
   2d670:	ldr	r2, [sp, #24]
   2d674:	add	r1, r1, r2
   2d678:	ldrb	r1, [r1]
   2d67c:	bl	2cd98 <__assert_fail@plt+0x1b904>
   2d680:	b	2d684 <__assert_fail@plt+0x1c1f0>
   2d684:	ldr	r0, [sp, #24]
   2d688:	add	r0, r0, #1
   2d68c:	str	r0, [sp, #24]
   2d690:	b	2d63c <__assert_fail@plt+0x1c1a8>
   2d694:	b	2d6f0 <__assert_fail@plt+0x1c25c>
   2d698:	movw	r0, #0
   2d69c:	str	r0, [sp, #24]
   2d6a0:	ldr	r0, [sp, #24]
   2d6a4:	cmp	r0, #256	; 0x100
   2d6a8:	bge	2d6ec <__assert_fail@plt+0x1c258>
   2d6ac:	bl	11368 <__ctype_b_loc@plt>
   2d6b0:	ldr	r0, [r0]
   2d6b4:	ldr	lr, [sp, #24]
   2d6b8:	add	r0, r0, lr, lsl #1
   2d6bc:	ldrh	r0, [r0]
   2d6c0:	and	r0, r0, #8
   2d6c4:	cmp	r0, #0
   2d6c8:	beq	2d6d8 <__assert_fail@plt+0x1c244>
   2d6cc:	ldr	r0, [fp, #-12]
   2d6d0:	ldr	r1, [sp, #24]
   2d6d4:	bl	2cd98 <__assert_fail@plt+0x1b904>
   2d6d8:	b	2d6dc <__assert_fail@plt+0x1c248>
   2d6dc:	ldr	r0, [sp, #24]
   2d6e0:	add	r0, r0, #1
   2d6e4:	str	r0, [sp, #24]
   2d6e8:	b	2d6a0 <__assert_fail@plt+0x1c20c>
   2d6ec:	b	2d6f0 <__assert_fail@plt+0x1c25c>
   2d6f0:	b	2d6f4 <__assert_fail@plt+0x1c260>
   2d6f4:	b	2e180 <__assert_fail@plt+0x1ccec>
   2d6f8:	ldr	r0, [sp, #20]
   2d6fc:	movw	r1, #23258	; 0x5ada
   2d700:	movt	r1, #4
   2d704:	bl	111d0 <strcmp@plt>
   2d708:	cmp	r0, #0
   2d70c:	bne	2d7e8 <__assert_fail@plt+0x1c354>
   2d710:	b	2d714 <__assert_fail@plt+0x1c280>
   2d714:	ldr	r0, [fp, #-8]
   2d718:	movw	r1, #0
   2d71c:	cmp	r0, r1
   2d720:	beq	2d788 <__assert_fail@plt+0x1c2f4>
   2d724:	movw	r0, #0
   2d728:	str	r0, [sp, #24]
   2d72c:	ldr	r0, [sp, #24]
   2d730:	cmp	r0, #256	; 0x100
   2d734:	bge	2d784 <__assert_fail@plt+0x1c2f0>
   2d738:	bl	11368 <__ctype_b_loc@plt>
   2d73c:	ldr	r0, [r0]
   2d740:	ldr	lr, [sp, #24]
   2d744:	add	r0, r0, lr, lsl #1
   2d748:	ldrh	r0, [r0]
   2d74c:	and	r0, r0, #2
   2d750:	cmp	r0, #0
   2d754:	beq	2d770 <__assert_fail@plt+0x1c2dc>
   2d758:	ldr	r0, [fp, #-12]
   2d75c:	ldr	r1, [fp, #-8]
   2d760:	ldr	r2, [sp, #24]
   2d764:	add	r1, r1, r2
   2d768:	ldrb	r1, [r1]
   2d76c:	bl	2cd98 <__assert_fail@plt+0x1b904>
   2d770:	b	2d774 <__assert_fail@plt+0x1c2e0>
   2d774:	ldr	r0, [sp, #24]
   2d778:	add	r0, r0, #1
   2d77c:	str	r0, [sp, #24]
   2d780:	b	2d72c <__assert_fail@plt+0x1c298>
   2d784:	b	2d7e0 <__assert_fail@plt+0x1c34c>
   2d788:	movw	r0, #0
   2d78c:	str	r0, [sp, #24]
   2d790:	ldr	r0, [sp, #24]
   2d794:	cmp	r0, #256	; 0x100
   2d798:	bge	2d7dc <__assert_fail@plt+0x1c348>
   2d79c:	bl	11368 <__ctype_b_loc@plt>
   2d7a0:	ldr	r0, [r0]
   2d7a4:	ldr	lr, [sp, #24]
   2d7a8:	add	r0, r0, lr, lsl #1
   2d7ac:	ldrh	r0, [r0]
   2d7b0:	and	r0, r0, #2
   2d7b4:	cmp	r0, #0
   2d7b8:	beq	2d7c8 <__assert_fail@plt+0x1c334>
   2d7bc:	ldr	r0, [fp, #-12]
   2d7c0:	ldr	r1, [sp, #24]
   2d7c4:	bl	2cd98 <__assert_fail@plt+0x1b904>
   2d7c8:	b	2d7cc <__assert_fail@plt+0x1c338>
   2d7cc:	ldr	r0, [sp, #24]
   2d7d0:	add	r0, r0, #1
   2d7d4:	str	r0, [sp, #24]
   2d7d8:	b	2d790 <__assert_fail@plt+0x1c2fc>
   2d7dc:	b	2d7e0 <__assert_fail@plt+0x1c34c>
   2d7e0:	b	2d7e4 <__assert_fail@plt+0x1c350>
   2d7e4:	b	2e17c <__assert_fail@plt+0x1cce8>
   2d7e8:	ldr	r0, [sp, #20]
   2d7ec:	movw	r1, #23246	; 0x5ace
   2d7f0:	movt	r1, #4
   2d7f4:	bl	111d0 <strcmp@plt>
   2d7f8:	cmp	r0, #0
   2d7fc:	bne	2d8d8 <__assert_fail@plt+0x1c444>
   2d800:	b	2d804 <__assert_fail@plt+0x1c370>
   2d804:	ldr	r0, [fp, #-8]
   2d808:	movw	r1, #0
   2d80c:	cmp	r0, r1
   2d810:	beq	2d878 <__assert_fail@plt+0x1c3e4>
   2d814:	movw	r0, #0
   2d818:	str	r0, [sp, #24]
   2d81c:	ldr	r0, [sp, #24]
   2d820:	cmp	r0, #256	; 0x100
   2d824:	bge	2d874 <__assert_fail@plt+0x1c3e0>
   2d828:	bl	11368 <__ctype_b_loc@plt>
   2d82c:	ldr	r0, [r0]
   2d830:	ldr	lr, [sp, #24]
   2d834:	add	r0, r0, lr, lsl #1
   2d838:	ldrh	r0, [r0]
   2d83c:	and	r0, r0, #512	; 0x200
   2d840:	cmp	r0, #0
   2d844:	beq	2d860 <__assert_fail@plt+0x1c3cc>
   2d848:	ldr	r0, [fp, #-12]
   2d84c:	ldr	r1, [fp, #-8]
   2d850:	ldr	r2, [sp, #24]
   2d854:	add	r1, r1, r2
   2d858:	ldrb	r1, [r1]
   2d85c:	bl	2cd98 <__assert_fail@plt+0x1b904>
   2d860:	b	2d864 <__assert_fail@plt+0x1c3d0>
   2d864:	ldr	r0, [sp, #24]
   2d868:	add	r0, r0, #1
   2d86c:	str	r0, [sp, #24]
   2d870:	b	2d81c <__assert_fail@plt+0x1c388>
   2d874:	b	2d8d0 <__assert_fail@plt+0x1c43c>
   2d878:	movw	r0, #0
   2d87c:	str	r0, [sp, #24]
   2d880:	ldr	r0, [sp, #24]
   2d884:	cmp	r0, #256	; 0x100
   2d888:	bge	2d8cc <__assert_fail@plt+0x1c438>
   2d88c:	bl	11368 <__ctype_b_loc@plt>
   2d890:	ldr	r0, [r0]
   2d894:	ldr	lr, [sp, #24]
   2d898:	add	r0, r0, lr, lsl #1
   2d89c:	ldrh	r0, [r0]
   2d8a0:	and	r0, r0, #512	; 0x200
   2d8a4:	cmp	r0, #0
   2d8a8:	beq	2d8b8 <__assert_fail@plt+0x1c424>
   2d8ac:	ldr	r0, [fp, #-12]
   2d8b0:	ldr	r1, [sp, #24]
   2d8b4:	bl	2cd98 <__assert_fail@plt+0x1b904>
   2d8b8:	b	2d8bc <__assert_fail@plt+0x1c428>
   2d8bc:	ldr	r0, [sp, #24]
   2d8c0:	add	r0, r0, #1
   2d8c4:	str	r0, [sp, #24]
   2d8c8:	b	2d880 <__assert_fail@plt+0x1c3ec>
   2d8cc:	b	2d8d0 <__assert_fail@plt+0x1c43c>
   2d8d0:	b	2d8d4 <__assert_fail@plt+0x1c440>
   2d8d4:	b	2e178 <__assert_fail@plt+0x1cce4>
   2d8d8:	ldr	r0, [sp, #20]
   2d8dc:	movw	r1, #23234	; 0x5ac2
   2d8e0:	movt	r1, #4
   2d8e4:	bl	111d0 <strcmp@plt>
   2d8e8:	cmp	r0, #0
   2d8ec:	bne	2d9c8 <__assert_fail@plt+0x1c534>
   2d8f0:	b	2d8f4 <__assert_fail@plt+0x1c460>
   2d8f4:	ldr	r0, [fp, #-8]
   2d8f8:	movw	r1, #0
   2d8fc:	cmp	r0, r1
   2d900:	beq	2d968 <__assert_fail@plt+0x1c4d4>
   2d904:	movw	r0, #0
   2d908:	str	r0, [sp, #24]
   2d90c:	ldr	r0, [sp, #24]
   2d910:	cmp	r0, #256	; 0x100
   2d914:	bge	2d964 <__assert_fail@plt+0x1c4d0>
   2d918:	bl	11368 <__ctype_b_loc@plt>
   2d91c:	ldr	r0, [r0]
   2d920:	ldr	lr, [sp, #24]
   2d924:	add	r0, r0, lr, lsl #1
   2d928:	ldrh	r0, [r0]
   2d92c:	and	r0, r0, #8192	; 0x2000
   2d930:	cmp	r0, #0
   2d934:	beq	2d950 <__assert_fail@plt+0x1c4bc>
   2d938:	ldr	r0, [fp, #-12]
   2d93c:	ldr	r1, [fp, #-8]
   2d940:	ldr	r2, [sp, #24]
   2d944:	add	r1, r1, r2
   2d948:	ldrb	r1, [r1]
   2d94c:	bl	2cd98 <__assert_fail@plt+0x1b904>
   2d950:	b	2d954 <__assert_fail@plt+0x1c4c0>
   2d954:	ldr	r0, [sp, #24]
   2d958:	add	r0, r0, #1
   2d95c:	str	r0, [sp, #24]
   2d960:	b	2d90c <__assert_fail@plt+0x1c478>
   2d964:	b	2d9c0 <__assert_fail@plt+0x1c52c>
   2d968:	movw	r0, #0
   2d96c:	str	r0, [sp, #24]
   2d970:	ldr	r0, [sp, #24]
   2d974:	cmp	r0, #256	; 0x100
   2d978:	bge	2d9bc <__assert_fail@plt+0x1c528>
   2d97c:	bl	11368 <__ctype_b_loc@plt>
   2d980:	ldr	r0, [r0]
   2d984:	ldr	lr, [sp, #24]
   2d988:	add	r0, r0, lr, lsl #1
   2d98c:	ldrh	r0, [r0]
   2d990:	and	r0, r0, #8192	; 0x2000
   2d994:	cmp	r0, #0
   2d998:	beq	2d9a8 <__assert_fail@plt+0x1c514>
   2d99c:	ldr	r0, [fp, #-12]
   2d9a0:	ldr	r1, [sp, #24]
   2d9a4:	bl	2cd98 <__assert_fail@plt+0x1b904>
   2d9a8:	b	2d9ac <__assert_fail@plt+0x1c518>
   2d9ac:	ldr	r0, [sp, #24]
   2d9b0:	add	r0, r0, #1
   2d9b4:	str	r0, [sp, #24]
   2d9b8:	b	2d970 <__assert_fail@plt+0x1c4dc>
   2d9bc:	b	2d9c0 <__assert_fail@plt+0x1c52c>
   2d9c0:	b	2d9c4 <__assert_fail@plt+0x1c530>
   2d9c4:	b	2e174 <__assert_fail@plt+0x1cce0>
   2d9c8:	ldr	r0, [sp, #20]
   2d9cc:	movw	r1, #23252	; 0x5ad4
   2d9d0:	movt	r1, #4
   2d9d4:	bl	111d0 <strcmp@plt>
   2d9d8:	cmp	r0, #0
   2d9dc:	bne	2dab8 <__assert_fail@plt+0x1c624>
   2d9e0:	b	2d9e4 <__assert_fail@plt+0x1c550>
   2d9e4:	ldr	r0, [fp, #-8]
   2d9e8:	movw	r1, #0
   2d9ec:	cmp	r0, r1
   2d9f0:	beq	2da58 <__assert_fail@plt+0x1c5c4>
   2d9f4:	movw	r0, #0
   2d9f8:	str	r0, [sp, #24]
   2d9fc:	ldr	r0, [sp, #24]
   2da00:	cmp	r0, #256	; 0x100
   2da04:	bge	2da54 <__assert_fail@plt+0x1c5c0>
   2da08:	bl	11368 <__ctype_b_loc@plt>
   2da0c:	ldr	r0, [r0]
   2da10:	ldr	lr, [sp, #24]
   2da14:	add	r0, r0, lr, lsl #1
   2da18:	ldrh	r0, [r0]
   2da1c:	and	r0, r0, #1024	; 0x400
   2da20:	cmp	r0, #0
   2da24:	beq	2da40 <__assert_fail@plt+0x1c5ac>
   2da28:	ldr	r0, [fp, #-12]
   2da2c:	ldr	r1, [fp, #-8]
   2da30:	ldr	r2, [sp, #24]
   2da34:	add	r1, r1, r2
   2da38:	ldrb	r1, [r1]
   2da3c:	bl	2cd98 <__assert_fail@plt+0x1b904>
   2da40:	b	2da44 <__assert_fail@plt+0x1c5b0>
   2da44:	ldr	r0, [sp, #24]
   2da48:	add	r0, r0, #1
   2da4c:	str	r0, [sp, #24]
   2da50:	b	2d9fc <__assert_fail@plt+0x1c568>
   2da54:	b	2dab0 <__assert_fail@plt+0x1c61c>
   2da58:	movw	r0, #0
   2da5c:	str	r0, [sp, #24]
   2da60:	ldr	r0, [sp, #24]
   2da64:	cmp	r0, #256	; 0x100
   2da68:	bge	2daac <__assert_fail@plt+0x1c618>
   2da6c:	bl	11368 <__ctype_b_loc@plt>
   2da70:	ldr	r0, [r0]
   2da74:	ldr	lr, [sp, #24]
   2da78:	add	r0, r0, lr, lsl #1
   2da7c:	ldrh	r0, [r0]
   2da80:	and	r0, r0, #1024	; 0x400
   2da84:	cmp	r0, #0
   2da88:	beq	2da98 <__assert_fail@plt+0x1c604>
   2da8c:	ldr	r0, [fp, #-12]
   2da90:	ldr	r1, [sp, #24]
   2da94:	bl	2cd98 <__assert_fail@plt+0x1b904>
   2da98:	b	2da9c <__assert_fail@plt+0x1c608>
   2da9c:	ldr	r0, [sp, #24]
   2daa0:	add	r0, r0, #1
   2daa4:	str	r0, [sp, #24]
   2daa8:	b	2da60 <__assert_fail@plt+0x1c5cc>
   2daac:	b	2dab0 <__assert_fail@plt+0x1c61c>
   2dab0:	b	2dab4 <__assert_fail@plt+0x1c620>
   2dab4:	b	2e170 <__assert_fail@plt+0x1ccdc>
   2dab8:	ldr	r0, [sp, #20]
   2dabc:	movw	r1, #23289	; 0x5af9
   2dac0:	movt	r1, #4
   2dac4:	bl	111d0 <strcmp@plt>
   2dac8:	cmp	r0, #0
   2dacc:	bne	2dba8 <__assert_fail@plt+0x1c714>
   2dad0:	b	2dad4 <__assert_fail@plt+0x1c640>
   2dad4:	ldr	r0, [fp, #-8]
   2dad8:	movw	r1, #0
   2dadc:	cmp	r0, r1
   2dae0:	beq	2db48 <__assert_fail@plt+0x1c6b4>
   2dae4:	movw	r0, #0
   2dae8:	str	r0, [sp, #24]
   2daec:	ldr	r0, [sp, #24]
   2daf0:	cmp	r0, #256	; 0x100
   2daf4:	bge	2db44 <__assert_fail@plt+0x1c6b0>
   2daf8:	bl	11368 <__ctype_b_loc@plt>
   2dafc:	ldr	r0, [r0]
   2db00:	ldr	lr, [sp, #24]
   2db04:	add	r0, r0, lr, lsl #1
   2db08:	ldrh	r0, [r0]
   2db0c:	and	r0, r0, #2048	; 0x800
   2db10:	cmp	r0, #0
   2db14:	beq	2db30 <__assert_fail@plt+0x1c69c>
   2db18:	ldr	r0, [fp, #-12]
   2db1c:	ldr	r1, [fp, #-8]
   2db20:	ldr	r2, [sp, #24]
   2db24:	add	r1, r1, r2
   2db28:	ldrb	r1, [r1]
   2db2c:	bl	2cd98 <__assert_fail@plt+0x1b904>
   2db30:	b	2db34 <__assert_fail@plt+0x1c6a0>
   2db34:	ldr	r0, [sp, #24]
   2db38:	add	r0, r0, #1
   2db3c:	str	r0, [sp, #24]
   2db40:	b	2daec <__assert_fail@plt+0x1c658>
   2db44:	b	2dba0 <__assert_fail@plt+0x1c70c>
   2db48:	movw	r0, #0
   2db4c:	str	r0, [sp, #24]
   2db50:	ldr	r0, [sp, #24]
   2db54:	cmp	r0, #256	; 0x100
   2db58:	bge	2db9c <__assert_fail@plt+0x1c708>
   2db5c:	bl	11368 <__ctype_b_loc@plt>
   2db60:	ldr	r0, [r0]
   2db64:	ldr	lr, [sp, #24]
   2db68:	add	r0, r0, lr, lsl #1
   2db6c:	ldrh	r0, [r0]
   2db70:	and	r0, r0, #2048	; 0x800
   2db74:	cmp	r0, #0
   2db78:	beq	2db88 <__assert_fail@plt+0x1c6f4>
   2db7c:	ldr	r0, [fp, #-12]
   2db80:	ldr	r1, [sp, #24]
   2db84:	bl	2cd98 <__assert_fail@plt+0x1b904>
   2db88:	b	2db8c <__assert_fail@plt+0x1c6f8>
   2db8c:	ldr	r0, [sp, #24]
   2db90:	add	r0, r0, #1
   2db94:	str	r0, [sp, #24]
   2db98:	b	2db50 <__assert_fail@plt+0x1c6bc>
   2db9c:	b	2dba0 <__assert_fail@plt+0x1c70c>
   2dba0:	b	2dba4 <__assert_fail@plt+0x1c710>
   2dba4:	b	2e16c <__assert_fail@plt+0x1ccd8>
   2dba8:	ldr	r0, [sp, #20]
   2dbac:	movw	r1, #23264	; 0x5ae0
   2dbb0:	movt	r1, #4
   2dbb4:	bl	111d0 <strcmp@plt>
   2dbb8:	cmp	r0, #0
   2dbbc:	bne	2dc98 <__assert_fail@plt+0x1c804>
   2dbc0:	b	2dbc4 <__assert_fail@plt+0x1c730>
   2dbc4:	ldr	r0, [fp, #-8]
   2dbc8:	movw	r1, #0
   2dbcc:	cmp	r0, r1
   2dbd0:	beq	2dc38 <__assert_fail@plt+0x1c7a4>
   2dbd4:	movw	r0, #0
   2dbd8:	str	r0, [sp, #24]
   2dbdc:	ldr	r0, [sp, #24]
   2dbe0:	cmp	r0, #256	; 0x100
   2dbe4:	bge	2dc34 <__assert_fail@plt+0x1c7a0>
   2dbe8:	bl	11368 <__ctype_b_loc@plt>
   2dbec:	ldr	r0, [r0]
   2dbf0:	ldr	lr, [sp, #24]
   2dbf4:	add	r0, r0, lr, lsl #1
   2dbf8:	ldrh	r0, [r0]
   2dbfc:	and	r0, r0, #16384	; 0x4000
   2dc00:	cmp	r0, #0
   2dc04:	beq	2dc20 <__assert_fail@plt+0x1c78c>
   2dc08:	ldr	r0, [fp, #-12]
   2dc0c:	ldr	r1, [fp, #-8]
   2dc10:	ldr	r2, [sp, #24]
   2dc14:	add	r1, r1, r2
   2dc18:	ldrb	r1, [r1]
   2dc1c:	bl	2cd98 <__assert_fail@plt+0x1b904>
   2dc20:	b	2dc24 <__assert_fail@plt+0x1c790>
   2dc24:	ldr	r0, [sp, #24]
   2dc28:	add	r0, r0, #1
   2dc2c:	str	r0, [sp, #24]
   2dc30:	b	2dbdc <__assert_fail@plt+0x1c748>
   2dc34:	b	2dc90 <__assert_fail@plt+0x1c7fc>
   2dc38:	movw	r0, #0
   2dc3c:	str	r0, [sp, #24]
   2dc40:	ldr	r0, [sp, #24]
   2dc44:	cmp	r0, #256	; 0x100
   2dc48:	bge	2dc8c <__assert_fail@plt+0x1c7f8>
   2dc4c:	bl	11368 <__ctype_b_loc@plt>
   2dc50:	ldr	r0, [r0]
   2dc54:	ldr	lr, [sp, #24]
   2dc58:	add	r0, r0, lr, lsl #1
   2dc5c:	ldrh	r0, [r0]
   2dc60:	and	r0, r0, #16384	; 0x4000
   2dc64:	cmp	r0, #0
   2dc68:	beq	2dc78 <__assert_fail@plt+0x1c7e4>
   2dc6c:	ldr	r0, [fp, #-12]
   2dc70:	ldr	r1, [sp, #24]
   2dc74:	bl	2cd98 <__assert_fail@plt+0x1b904>
   2dc78:	b	2dc7c <__assert_fail@plt+0x1c7e8>
   2dc7c:	ldr	r0, [sp, #24]
   2dc80:	add	r0, r0, #1
   2dc84:	str	r0, [sp, #24]
   2dc88:	b	2dc40 <__assert_fail@plt+0x1c7ac>
   2dc8c:	b	2dc90 <__assert_fail@plt+0x1c7fc>
   2dc90:	b	2dc94 <__assert_fail@plt+0x1c800>
   2dc94:	b	2e168 <__assert_fail@plt+0x1ccd4>
   2dc98:	ldr	r0, [sp, #20]
   2dc9c:	movw	r1, #23240	; 0x5ac8
   2dca0:	movt	r1, #4
   2dca4:	bl	111d0 <strcmp@plt>
   2dca8:	cmp	r0, #0
   2dcac:	bne	2dd88 <__assert_fail@plt+0x1c8f4>
   2dcb0:	b	2dcb4 <__assert_fail@plt+0x1c820>
   2dcb4:	ldr	r0, [fp, #-8]
   2dcb8:	movw	r1, #0
   2dcbc:	cmp	r0, r1
   2dcc0:	beq	2dd28 <__assert_fail@plt+0x1c894>
   2dcc4:	movw	r0, #0
   2dcc8:	str	r0, [sp, #24]
   2dccc:	ldr	r0, [sp, #24]
   2dcd0:	cmp	r0, #256	; 0x100
   2dcd4:	bge	2dd24 <__assert_fail@plt+0x1c890>
   2dcd8:	bl	11368 <__ctype_b_loc@plt>
   2dcdc:	ldr	r0, [r0]
   2dce0:	ldr	lr, [sp, #24]
   2dce4:	add	r0, r0, lr, lsl #1
   2dce8:	ldrh	r0, [r0]
   2dcec:	and	r0, r0, #256	; 0x100
   2dcf0:	cmp	r0, #0
   2dcf4:	beq	2dd10 <__assert_fail@plt+0x1c87c>
   2dcf8:	ldr	r0, [fp, #-12]
   2dcfc:	ldr	r1, [fp, #-8]
   2dd00:	ldr	r2, [sp, #24]
   2dd04:	add	r1, r1, r2
   2dd08:	ldrb	r1, [r1]
   2dd0c:	bl	2cd98 <__assert_fail@plt+0x1b904>
   2dd10:	b	2dd14 <__assert_fail@plt+0x1c880>
   2dd14:	ldr	r0, [sp, #24]
   2dd18:	add	r0, r0, #1
   2dd1c:	str	r0, [sp, #24]
   2dd20:	b	2dccc <__assert_fail@plt+0x1c838>
   2dd24:	b	2dd80 <__assert_fail@plt+0x1c8ec>
   2dd28:	movw	r0, #0
   2dd2c:	str	r0, [sp, #24]
   2dd30:	ldr	r0, [sp, #24]
   2dd34:	cmp	r0, #256	; 0x100
   2dd38:	bge	2dd7c <__assert_fail@plt+0x1c8e8>
   2dd3c:	bl	11368 <__ctype_b_loc@plt>
   2dd40:	ldr	r0, [r0]
   2dd44:	ldr	lr, [sp, #24]
   2dd48:	add	r0, r0, lr, lsl #1
   2dd4c:	ldrh	r0, [r0]
   2dd50:	and	r0, r0, #256	; 0x100
   2dd54:	cmp	r0, #0
   2dd58:	beq	2dd68 <__assert_fail@plt+0x1c8d4>
   2dd5c:	ldr	r0, [fp, #-12]
   2dd60:	ldr	r1, [sp, #24]
   2dd64:	bl	2cd98 <__assert_fail@plt+0x1b904>
   2dd68:	b	2dd6c <__assert_fail@plt+0x1c8d8>
   2dd6c:	ldr	r0, [sp, #24]
   2dd70:	add	r0, r0, #1
   2dd74:	str	r0, [sp, #24]
   2dd78:	b	2dd30 <__assert_fail@plt+0x1c89c>
   2dd7c:	b	2dd80 <__assert_fail@plt+0x1c8ec>
   2dd80:	b	2dd84 <__assert_fail@plt+0x1c8f0>
   2dd84:	b	2e164 <__assert_fail@plt+0x1ccd0>
   2dd88:	ldr	r0, [sp, #20]
   2dd8c:	movw	r1, #23270	; 0x5ae6
   2dd90:	movt	r1, #4
   2dd94:	bl	111d0 <strcmp@plt>
   2dd98:	cmp	r0, #0
   2dd9c:	bne	2de78 <__assert_fail@plt+0x1c9e4>
   2dda0:	b	2dda4 <__assert_fail@plt+0x1c910>
   2dda4:	ldr	r0, [fp, #-8]
   2dda8:	movw	r1, #0
   2ddac:	cmp	r0, r1
   2ddb0:	beq	2de18 <__assert_fail@plt+0x1c984>
   2ddb4:	movw	r0, #0
   2ddb8:	str	r0, [sp, #24]
   2ddbc:	ldr	r0, [sp, #24]
   2ddc0:	cmp	r0, #256	; 0x100
   2ddc4:	bge	2de14 <__assert_fail@plt+0x1c980>
   2ddc8:	bl	11368 <__ctype_b_loc@plt>
   2ddcc:	ldr	r0, [r0]
   2ddd0:	ldr	lr, [sp, #24]
   2ddd4:	add	r0, r0, lr, lsl #1
   2ddd8:	ldrh	r0, [r0]
   2dddc:	and	r0, r0, #1
   2dde0:	cmp	r0, #0
   2dde4:	beq	2de00 <__assert_fail@plt+0x1c96c>
   2dde8:	ldr	r0, [fp, #-12]
   2ddec:	ldr	r1, [fp, #-8]
   2ddf0:	ldr	r2, [sp, #24]
   2ddf4:	add	r1, r1, r2
   2ddf8:	ldrb	r1, [r1]
   2ddfc:	bl	2cd98 <__assert_fail@plt+0x1b904>
   2de00:	b	2de04 <__assert_fail@plt+0x1c970>
   2de04:	ldr	r0, [sp, #24]
   2de08:	add	r0, r0, #1
   2de0c:	str	r0, [sp, #24]
   2de10:	b	2ddbc <__assert_fail@plt+0x1c928>
   2de14:	b	2de70 <__assert_fail@plt+0x1c9dc>
   2de18:	movw	r0, #0
   2de1c:	str	r0, [sp, #24]
   2de20:	ldr	r0, [sp, #24]
   2de24:	cmp	r0, #256	; 0x100
   2de28:	bge	2de6c <__assert_fail@plt+0x1c9d8>
   2de2c:	bl	11368 <__ctype_b_loc@plt>
   2de30:	ldr	r0, [r0]
   2de34:	ldr	lr, [sp, #24]
   2de38:	add	r0, r0, lr, lsl #1
   2de3c:	ldrh	r0, [r0]
   2de40:	and	r0, r0, #1
   2de44:	cmp	r0, #0
   2de48:	beq	2de58 <__assert_fail@plt+0x1c9c4>
   2de4c:	ldr	r0, [fp, #-12]
   2de50:	ldr	r1, [sp, #24]
   2de54:	bl	2cd98 <__assert_fail@plt+0x1b904>
   2de58:	b	2de5c <__assert_fail@plt+0x1c9c8>
   2de5c:	ldr	r0, [sp, #24]
   2de60:	add	r0, r0, #1
   2de64:	str	r0, [sp, #24]
   2de68:	b	2de20 <__assert_fail@plt+0x1c98c>
   2de6c:	b	2de70 <__assert_fail@plt+0x1c9dc>
   2de70:	b	2de74 <__assert_fail@plt+0x1c9e0>
   2de74:	b	2e160 <__assert_fail@plt+0x1cccc>
   2de78:	ldr	r0, [sp, #20]
   2de7c:	movw	r1, #23276	; 0x5aec
   2de80:	movt	r1, #4
   2de84:	bl	111d0 <strcmp@plt>
   2de88:	cmp	r0, #0
   2de8c:	bne	2df68 <__assert_fail@plt+0x1cad4>
   2de90:	b	2de94 <__assert_fail@plt+0x1ca00>
   2de94:	ldr	r0, [fp, #-8]
   2de98:	movw	r1, #0
   2de9c:	cmp	r0, r1
   2dea0:	beq	2df08 <__assert_fail@plt+0x1ca74>
   2dea4:	movw	r0, #0
   2dea8:	str	r0, [sp, #24]
   2deac:	ldr	r0, [sp, #24]
   2deb0:	cmp	r0, #256	; 0x100
   2deb4:	bge	2df04 <__assert_fail@plt+0x1ca70>
   2deb8:	bl	11368 <__ctype_b_loc@plt>
   2debc:	ldr	r0, [r0]
   2dec0:	ldr	lr, [sp, #24]
   2dec4:	add	r0, r0, lr, lsl #1
   2dec8:	ldrh	r0, [r0]
   2decc:	and	r0, r0, #32768	; 0x8000
   2ded0:	cmp	r0, #0
   2ded4:	beq	2def0 <__assert_fail@plt+0x1ca5c>
   2ded8:	ldr	r0, [fp, #-12]
   2dedc:	ldr	r1, [fp, #-8]
   2dee0:	ldr	r2, [sp, #24]
   2dee4:	add	r1, r1, r2
   2dee8:	ldrb	r1, [r1]
   2deec:	bl	2cd98 <__assert_fail@plt+0x1b904>
   2def0:	b	2def4 <__assert_fail@plt+0x1ca60>
   2def4:	ldr	r0, [sp, #24]
   2def8:	add	r0, r0, #1
   2defc:	str	r0, [sp, #24]
   2df00:	b	2deac <__assert_fail@plt+0x1ca18>
   2df04:	b	2df60 <__assert_fail@plt+0x1cacc>
   2df08:	movw	r0, #0
   2df0c:	str	r0, [sp, #24]
   2df10:	ldr	r0, [sp, #24]
   2df14:	cmp	r0, #256	; 0x100
   2df18:	bge	2df5c <__assert_fail@plt+0x1cac8>
   2df1c:	bl	11368 <__ctype_b_loc@plt>
   2df20:	ldr	r0, [r0]
   2df24:	ldr	lr, [sp, #24]
   2df28:	add	r0, r0, lr, lsl #1
   2df2c:	ldrh	r0, [r0]
   2df30:	and	r0, r0, #32768	; 0x8000
   2df34:	cmp	r0, #0
   2df38:	beq	2df48 <__assert_fail@plt+0x1cab4>
   2df3c:	ldr	r0, [fp, #-12]
   2df40:	ldr	r1, [sp, #24]
   2df44:	bl	2cd98 <__assert_fail@plt+0x1b904>
   2df48:	b	2df4c <__assert_fail@plt+0x1cab8>
   2df4c:	ldr	r0, [sp, #24]
   2df50:	add	r0, r0, #1
   2df54:	str	r0, [sp, #24]
   2df58:	b	2df10 <__assert_fail@plt+0x1ca7c>
   2df5c:	b	2df60 <__assert_fail@plt+0x1cacc>
   2df60:	b	2df64 <__assert_fail@plt+0x1cad0>
   2df64:	b	2e15c <__assert_fail@plt+0x1ccc8>
   2df68:	ldr	r0, [sp, #20]
   2df6c:	movw	r1, #23282	; 0x5af2
   2df70:	movt	r1, #4
   2df74:	bl	111d0 <strcmp@plt>
   2df78:	cmp	r0, #0
   2df7c:	bne	2e058 <__assert_fail@plt+0x1cbc4>
   2df80:	b	2df84 <__assert_fail@plt+0x1caf0>
   2df84:	ldr	r0, [fp, #-8]
   2df88:	movw	r1, #0
   2df8c:	cmp	r0, r1
   2df90:	beq	2dff8 <__assert_fail@plt+0x1cb64>
   2df94:	movw	r0, #0
   2df98:	str	r0, [sp, #24]
   2df9c:	ldr	r0, [sp, #24]
   2dfa0:	cmp	r0, #256	; 0x100
   2dfa4:	bge	2dff4 <__assert_fail@plt+0x1cb60>
   2dfa8:	bl	11368 <__ctype_b_loc@plt>
   2dfac:	ldr	r0, [r0]
   2dfb0:	ldr	lr, [sp, #24]
   2dfb4:	add	r0, r0, lr, lsl #1
   2dfb8:	ldrh	r0, [r0]
   2dfbc:	and	r0, r0, #4
   2dfc0:	cmp	r0, #0
   2dfc4:	beq	2dfe0 <__assert_fail@plt+0x1cb4c>
   2dfc8:	ldr	r0, [fp, #-12]
   2dfcc:	ldr	r1, [fp, #-8]
   2dfd0:	ldr	r2, [sp, #24]
   2dfd4:	add	r1, r1, r2
   2dfd8:	ldrb	r1, [r1]
   2dfdc:	bl	2cd98 <__assert_fail@plt+0x1b904>
   2dfe0:	b	2dfe4 <__assert_fail@plt+0x1cb50>
   2dfe4:	ldr	r0, [sp, #24]
   2dfe8:	add	r0, r0, #1
   2dfec:	str	r0, [sp, #24]
   2dff0:	b	2df9c <__assert_fail@plt+0x1cb08>
   2dff4:	b	2e050 <__assert_fail@plt+0x1cbbc>
   2dff8:	movw	r0, #0
   2dffc:	str	r0, [sp, #24]
   2e000:	ldr	r0, [sp, #24]
   2e004:	cmp	r0, #256	; 0x100
   2e008:	bge	2e04c <__assert_fail@plt+0x1cbb8>
   2e00c:	bl	11368 <__ctype_b_loc@plt>
   2e010:	ldr	r0, [r0]
   2e014:	ldr	lr, [sp, #24]
   2e018:	add	r0, r0, lr, lsl #1
   2e01c:	ldrh	r0, [r0]
   2e020:	and	r0, r0, #4
   2e024:	cmp	r0, #0
   2e028:	beq	2e038 <__assert_fail@plt+0x1cba4>
   2e02c:	ldr	r0, [fp, #-12]
   2e030:	ldr	r1, [sp, #24]
   2e034:	bl	2cd98 <__assert_fail@plt+0x1b904>
   2e038:	b	2e03c <__assert_fail@plt+0x1cba8>
   2e03c:	ldr	r0, [sp, #24]
   2e040:	add	r0, r0, #1
   2e044:	str	r0, [sp, #24]
   2e048:	b	2e000 <__assert_fail@plt+0x1cb6c>
   2e04c:	b	2e050 <__assert_fail@plt+0x1cbbc>
   2e050:	b	2e054 <__assert_fail@plt+0x1cbc0>
   2e054:	b	2e158 <__assert_fail@plt+0x1ccc4>
   2e058:	ldr	r0, [sp, #20]
   2e05c:	movw	r1, #23288	; 0x5af8
   2e060:	movt	r1, #4
   2e064:	bl	111d0 <strcmp@plt>
   2e068:	cmp	r0, #0
   2e06c:	bne	2e148 <__assert_fail@plt+0x1ccb4>
   2e070:	b	2e074 <__assert_fail@plt+0x1cbe0>
   2e074:	ldr	r0, [fp, #-8]
   2e078:	movw	r1, #0
   2e07c:	cmp	r0, r1
   2e080:	beq	2e0e8 <__assert_fail@plt+0x1cc54>
   2e084:	movw	r0, #0
   2e088:	str	r0, [sp, #24]
   2e08c:	ldr	r0, [sp, #24]
   2e090:	cmp	r0, #256	; 0x100
   2e094:	bge	2e0e4 <__assert_fail@plt+0x1cc50>
   2e098:	bl	11368 <__ctype_b_loc@plt>
   2e09c:	ldr	r0, [r0]
   2e0a0:	ldr	lr, [sp, #24]
   2e0a4:	add	r0, r0, lr, lsl #1
   2e0a8:	ldrh	r0, [r0]
   2e0ac:	and	r0, r0, #4096	; 0x1000
   2e0b0:	cmp	r0, #0
   2e0b4:	beq	2e0d0 <__assert_fail@plt+0x1cc3c>
   2e0b8:	ldr	r0, [fp, #-12]
   2e0bc:	ldr	r1, [fp, #-8]
   2e0c0:	ldr	r2, [sp, #24]
   2e0c4:	add	r1, r1, r2
   2e0c8:	ldrb	r1, [r1]
   2e0cc:	bl	2cd98 <__assert_fail@plt+0x1b904>
   2e0d0:	b	2e0d4 <__assert_fail@plt+0x1cc40>
   2e0d4:	ldr	r0, [sp, #24]
   2e0d8:	add	r0, r0, #1
   2e0dc:	str	r0, [sp, #24]
   2e0e0:	b	2e08c <__assert_fail@plt+0x1cbf8>
   2e0e4:	b	2e140 <__assert_fail@plt+0x1ccac>
   2e0e8:	movw	r0, #0
   2e0ec:	str	r0, [sp, #24]
   2e0f0:	ldr	r0, [sp, #24]
   2e0f4:	cmp	r0, #256	; 0x100
   2e0f8:	bge	2e13c <__assert_fail@plt+0x1cca8>
   2e0fc:	bl	11368 <__ctype_b_loc@plt>
   2e100:	ldr	r0, [r0]
   2e104:	ldr	lr, [sp, #24]
   2e108:	add	r0, r0, lr, lsl #1
   2e10c:	ldrh	r0, [r0]
   2e110:	and	r0, r0, #4096	; 0x1000
   2e114:	cmp	r0, #0
   2e118:	beq	2e128 <__assert_fail@plt+0x1cc94>
   2e11c:	ldr	r0, [fp, #-12]
   2e120:	ldr	r1, [sp, #24]
   2e124:	bl	2cd98 <__assert_fail@plt+0x1b904>
   2e128:	b	2e12c <__assert_fail@plt+0x1cc98>
   2e12c:	ldr	r0, [sp, #24]
   2e130:	add	r0, r0, #1
   2e134:	str	r0, [sp, #24]
   2e138:	b	2e0f0 <__assert_fail@plt+0x1cc5c>
   2e13c:	b	2e140 <__assert_fail@plt+0x1ccac>
   2e140:	b	2e144 <__assert_fail@plt+0x1ccb0>
   2e144:	b	2e154 <__assert_fail@plt+0x1ccc0>
   2e148:	movw	r0, #4
   2e14c:	str	r0, [fp, #-4]
   2e150:	b	2e188 <__assert_fail@plt+0x1ccf4>
   2e154:	b	2e158 <__assert_fail@plt+0x1ccc4>
   2e158:	b	2e15c <__assert_fail@plt+0x1ccc8>
   2e15c:	b	2e160 <__assert_fail@plt+0x1cccc>
   2e160:	b	2e164 <__assert_fail@plt+0x1ccd0>
   2e164:	b	2e168 <__assert_fail@plt+0x1ccd4>
   2e168:	b	2e16c <__assert_fail@plt+0x1ccd8>
   2e16c:	b	2e170 <__assert_fail@plt+0x1ccdc>
   2e170:	b	2e174 <__assert_fail@plt+0x1cce0>
   2e174:	b	2e178 <__assert_fail@plt+0x1cce4>
   2e178:	b	2e17c <__assert_fail@plt+0x1cce8>
   2e17c:	b	2e180 <__assert_fail@plt+0x1ccec>
   2e180:	movw	r0, #0
   2e184:	str	r0, [fp, #-4]
   2e188:	ldr	r0, [fp, #-4]
   2e18c:	mov	sp, fp
   2e190:	pop	{fp, pc}
   2e194:	sub	sp, sp, #8
   2e198:	str	r0, [sp, #4]
   2e19c:	movw	r0, #0
   2e1a0:	str	r0, [sp]
   2e1a4:	ldr	r0, [sp]
   2e1a8:	cmp	r0, #8
   2e1ac:	bge	2e1d4 <__assert_fail@plt+0x1cd40>
   2e1b0:	ldr	r0, [sp, #4]
   2e1b4:	ldr	r1, [sp]
   2e1b8:	ldr	r1, [r0, r1, lsl #2]!
   2e1bc:	mvn	r1, r1
   2e1c0:	str	r1, [r0]
   2e1c4:	ldr	r0, [sp]
   2e1c8:	add	r0, r0, #1
   2e1cc:	str	r0, [sp]
   2e1d0:	b	2e1a4 <__assert_fail@plt+0x1cd10>
   2e1d4:	add	sp, sp, #8
   2e1d8:	bx	lr
   2e1dc:	sub	sp, sp, #12
   2e1e0:	str	r0, [sp, #8]
   2e1e4:	str	r1, [sp, #4]
   2e1e8:	movw	r0, #0
   2e1ec:	str	r0, [sp]
   2e1f0:	ldr	r0, [sp]
   2e1f4:	cmp	r0, #8
   2e1f8:	bge	2e22c <__assert_fail@plt+0x1cd98>
   2e1fc:	ldr	r0, [sp, #4]
   2e200:	ldr	r1, [sp]
   2e204:	ldr	r0, [r0, r1, lsl #2]
   2e208:	ldr	r2, [sp, #8]
   2e20c:	add	r1, r2, r1, lsl #2
   2e210:	ldr	r2, [r1]
   2e214:	and	r0, r2, r0
   2e218:	str	r0, [r1]
   2e21c:	ldr	r0, [sp]
   2e220:	add	r0, r0, #1
   2e224:	str	r0, [sp]
   2e228:	b	2e1f0 <__assert_fail@plt+0x1cd5c>
   2e22c:	add	sp, sp, #12
   2e230:	bx	lr
   2e234:	sub	sp, sp, #16
   2e238:	str	r0, [sp, #8]
   2e23c:	str	r1, [sp, #4]
   2e240:	ldr	r0, [sp, #8]
   2e244:	ldr	r0, [r0, #80]	; 0x50
   2e248:	cmp	r0, #1
   2e24c:	bne	2e25c <__assert_fail@plt+0x1cdc8>
   2e250:	movw	r0, #1
   2e254:	str	r0, [sp, #12]
   2e258:	b	2e2c4 <__assert_fail@plt+0x1ce30>
   2e25c:	movw	r0, #1
   2e260:	str	r0, [sp]
   2e264:	ldr	r0, [sp, #4]
   2e268:	ldr	r1, [sp]
   2e26c:	add	r0, r0, r1
   2e270:	ldr	r1, [sp, #8]
   2e274:	ldr	r1, [r1, #28]
   2e278:	cmp	r0, r1
   2e27c:	bge	2e2bc <__assert_fail@plt+0x1ce28>
   2e280:	ldr	r0, [sp, #8]
   2e284:	ldr	r0, [r0, #8]
   2e288:	ldr	r1, [sp, #4]
   2e28c:	ldr	r2, [sp]
   2e290:	add	r1, r1, r2
   2e294:	add	r0, r0, r1, lsl #2
   2e298:	ldr	r0, [r0]
   2e29c:	cmn	r0, #1
   2e2a0:	beq	2e2a8 <__assert_fail@plt+0x1ce14>
   2e2a4:	b	2e2bc <__assert_fail@plt+0x1ce28>
   2e2a8:	b	2e2ac <__assert_fail@plt+0x1ce18>
   2e2ac:	ldr	r0, [sp]
   2e2b0:	add	r0, r0, #1
   2e2b4:	str	r0, [sp]
   2e2b8:	b	2e264 <__assert_fail@plt+0x1cdd0>
   2e2bc:	ldr	r0, [sp]
   2e2c0:	str	r0, [sp, #12]
   2e2c4:	ldr	r0, [sp, #12]
   2e2c8:	add	sp, sp, #16
   2e2cc:	bx	lr
   2e2d0:	push	{fp, lr}
   2e2d4:	mov	fp, sp
   2e2d8:	sub	sp, sp, #32
   2e2dc:	str	r0, [fp, #-8]
   2e2e0:	str	r1, [fp, #-12]
   2e2e4:	str	r2, [sp, #16]
   2e2e8:	ldr	r0, [sp, #16]
   2e2ec:	ldrb	r0, [r0]
   2e2f0:	strb	r0, [sp, #14]
   2e2f4:	movw	r0, #0
   2e2f8:	str	r0, [sp, #8]
   2e2fc:	ldr	r0, [fp, #-12]
   2e300:	ldr	r0, [r0, #56]	; 0x38
   2e304:	ldr	r1, [fp, #-12]
   2e308:	ldr	r1, [r1, #40]	; 0x28
   2e30c:	cmp	r0, r1
   2e310:	bgt	2e320 <__assert_fail@plt+0x1ce8c>
   2e314:	movw	r0, #7
   2e318:	str	r0, [fp, #-4]
   2e31c:	b	2e4a4 <__assert_fail@plt+0x1d010>
   2e320:	b	2e324 <__assert_fail@plt+0x1ce90>
   2e324:	ldr	r0, [sp, #8]
   2e328:	cmp	r0, #32
   2e32c:	blt	2e33c <__assert_fail@plt+0x1cea8>
   2e330:	movw	r0, #7
   2e334:	str	r0, [fp, #-4]
   2e338:	b	2e4a4 <__assert_fail@plt+0x1d010>
   2e33c:	ldr	r0, [sp, #16]
   2e340:	ldr	r0, [r0, #4]
   2e344:	and	r0, r0, #255	; 0xff
   2e348:	cmp	r0, #30
   2e34c:	bne	2e360 <__assert_fail@plt+0x1cecc>
   2e350:	ldr	r0, [fp, #-12]
   2e354:	bl	2e4b0 <__assert_fail@plt+0x1d01c>
   2e358:	strb	r0, [sp, #15]
   2e35c:	b	2e384 <__assert_fail@plt+0x1cef0>
   2e360:	ldr	r0, [fp, #-12]
   2e364:	ldr	r0, [r0, #4]
   2e368:	ldr	r1, [fp, #-12]
   2e36c:	ldr	r2, [r1, #40]	; 0x28
   2e370:	add	r3, r2, #1
   2e374:	str	r3, [r1, #40]	; 0x28
   2e378:	add	r0, r0, r2
   2e37c:	ldrb	r0, [r0]
   2e380:	strb	r0, [sp, #15]
   2e384:	ldr	r0, [fp, #-12]
   2e388:	ldr	r0, [r0, #56]	; 0x38
   2e38c:	ldr	r1, [fp, #-12]
   2e390:	ldr	r1, [r1, #40]	; 0x28
   2e394:	cmp	r0, r1
   2e398:	bgt	2e3a8 <__assert_fail@plt+0x1cf14>
   2e39c:	movw	r0, #7
   2e3a0:	str	r0, [fp, #-4]
   2e3a4:	b	2e4a4 <__assert_fail@plt+0x1d010>
   2e3a8:	ldrb	r0, [sp, #15]
   2e3ac:	ldrb	r1, [sp, #14]
   2e3b0:	cmp	r0, r1
   2e3b4:	bne	2e3e0 <__assert_fail@plt+0x1cf4c>
   2e3b8:	ldr	r0, [fp, #-12]
   2e3bc:	ldr	r0, [r0, #4]
   2e3c0:	ldr	r1, [fp, #-12]
   2e3c4:	ldr	r1, [r1, #40]	; 0x28
   2e3c8:	add	r1, r1, #0
   2e3cc:	add	r0, r0, r1
   2e3d0:	ldrb	r0, [r0]
   2e3d4:	cmp	r0, #93	; 0x5d
   2e3d8:	bne	2e3e0 <__assert_fail@plt+0x1cf4c>
   2e3dc:	b	2e408 <__assert_fail@plt+0x1cf74>
   2e3e0:	ldrb	r0, [sp, #15]
   2e3e4:	ldr	r1, [fp, #-8]
   2e3e8:	ldr	r1, [r1, #4]
   2e3ec:	ldr	r2, [sp, #8]
   2e3f0:	add	r1, r1, r2
   2e3f4:	strb	r0, [r1]
   2e3f8:	ldr	r0, [sp, #8]
   2e3fc:	add	r0, r0, #1
   2e400:	str	r0, [sp, #8]
   2e404:	b	2e324 <__assert_fail@plt+0x1ce90>
   2e408:	ldr	r0, [fp, #-12]
   2e40c:	ldr	r1, [r0, #40]	; 0x28
   2e410:	add	r1, r1, #1
   2e414:	str	r1, [r0, #40]	; 0x28
   2e418:	ldr	r0, [fp, #-8]
   2e41c:	ldr	r0, [r0, #4]
   2e420:	ldr	r1, [sp, #8]
   2e424:	mov	r2, #0
   2e428:	strb	r2, [r0, r1]
   2e42c:	ldr	r0, [sp, #16]
   2e430:	ldrb	r0, [r0, #4]
   2e434:	mov	r1, r0
   2e438:	cmp	r0, #26
   2e43c:	str	r1, [sp, #4]
   2e440:	beq	2e468 <__assert_fail@plt+0x1cfd4>
   2e444:	b	2e448 <__assert_fail@plt+0x1cfb4>
   2e448:	ldr	r0, [sp, #4]
   2e44c:	cmp	r0, #28
   2e450:	beq	2e478 <__assert_fail@plt+0x1cfe4>
   2e454:	b	2e458 <__assert_fail@plt+0x1cfc4>
   2e458:	ldr	r0, [sp, #4]
   2e45c:	cmp	r0, #30
   2e460:	beq	2e488 <__assert_fail@plt+0x1cff4>
   2e464:	b	2e498 <__assert_fail@plt+0x1d004>
   2e468:	ldr	r0, [fp, #-8]
   2e46c:	movw	r1, #3
   2e470:	str	r1, [r0]
   2e474:	b	2e49c <__assert_fail@plt+0x1d008>
   2e478:	ldr	r0, [fp, #-8]
   2e47c:	movw	r1, #2
   2e480:	str	r1, [r0]
   2e484:	b	2e49c <__assert_fail@plt+0x1d008>
   2e488:	ldr	r0, [fp, #-8]
   2e48c:	movw	r1, #4
   2e490:	str	r1, [r0]
   2e494:	b	2e49c <__assert_fail@plt+0x1d008>
   2e498:	b	2e49c <__assert_fail@plt+0x1d008>
   2e49c:	movw	r0, #0
   2e4a0:	str	r0, [fp, #-4]
   2e4a4:	ldr	r0, [fp, #-4]
   2e4a8:	mov	sp, fp
   2e4ac:	pop	{fp, pc}
   2e4b0:	push	{fp, lr}
   2e4b4:	mov	fp, sp
   2e4b8:	sub	sp, sp, #16
   2e4bc:	str	r0, [sp, #8]
   2e4c0:	ldr	r0, [sp, #8]
   2e4c4:	ldrsb	r0, [r0, #75]	; 0x4b
   2e4c8:	cmp	r0, #0
   2e4cc:	movw	r0, #0
   2e4d0:	movne	r0, #1
   2e4d4:	mvn	r1, #0
   2e4d8:	eor	r0, r0, r1
   2e4dc:	tst	r0, #1
   2e4e0:	beq	2e50c <__assert_fail@plt+0x1d078>
   2e4e4:	ldr	r0, [sp, #8]
   2e4e8:	ldr	r0, [r0, #4]
   2e4ec:	ldr	r1, [sp, #8]
   2e4f0:	ldr	r2, [r1, #40]	; 0x28
   2e4f4:	add	r3, r2, #1
   2e4f8:	str	r3, [r1, #40]	; 0x28
   2e4fc:	add	r0, r0, r2
   2e500:	ldrb	r0, [r0]
   2e504:	strb	r0, [fp, #-1]
   2e508:	b	2e64c <__assert_fail@plt+0x1d1b8>
   2e50c:	ldr	r0, [sp, #8]
   2e510:	ldrsb	r0, [r0, #76]	; 0x4c
   2e514:	cmp	r0, #0
   2e518:	beq	2e61c <__assert_fail@plt+0x1d188>
   2e51c:	ldr	r0, [sp, #8]
   2e520:	ldr	r0, [r0, #40]	; 0x28
   2e524:	ldr	r1, [sp, #8]
   2e528:	ldr	r1, [r1, #28]
   2e52c:	cmp	r0, r1
   2e530:	beq	2e578 <__assert_fail@plt+0x1d0e4>
   2e534:	ldr	r0, [sp, #8]
   2e538:	ldr	r1, [r0, #8]
   2e53c:	ldr	r0, [r0, #40]	; 0x28
   2e540:	add	r0, r1, r0, lsl #2
   2e544:	ldr	r0, [r0]
   2e548:	cmn	r0, #1
   2e54c:	bne	2e578 <__assert_fail@plt+0x1d0e4>
   2e550:	ldr	r0, [sp, #8]
   2e554:	ldr	r0, [r0, #4]
   2e558:	ldr	r1, [sp, #8]
   2e55c:	ldr	r2, [r1, #40]	; 0x28
   2e560:	add	r3, r2, #1
   2e564:	str	r3, [r1, #40]	; 0x28
   2e568:	add	r0, r0, r2
   2e56c:	ldrb	r0, [r0]
   2e570:	strb	r0, [fp, #-1]
   2e574:	b	2e64c <__assert_fail@plt+0x1d1b8>
   2e578:	ldr	r0, [sp, #8]
   2e57c:	ldr	r1, [r0, #12]
   2e580:	ldr	r0, [r0, #40]	; 0x28
   2e584:	add	r0, r1, r0, lsl #2
   2e588:	ldr	r0, [r0]
   2e58c:	str	r0, [sp, #4]
   2e590:	ldr	r0, [sp, #8]
   2e594:	ldr	r0, [r0]
   2e598:	ldr	r1, [sp, #8]
   2e59c:	ldr	r1, [r1, #24]
   2e5a0:	ldr	r2, [sp, #4]
   2e5a4:	add	r1, r1, r2
   2e5a8:	add	r0, r0, r1
   2e5ac:	ldrb	r0, [r0]
   2e5b0:	str	r0, [sp]
   2e5b4:	ldr	r0, [sp]
   2e5b8:	mvn	r1, #127	; 0x7f
   2e5bc:	and	r0, r0, r1
   2e5c0:	cmp	r0, #0
   2e5c4:	beq	2e5f0 <__assert_fail@plt+0x1d15c>
   2e5c8:	ldr	r0, [sp, #8]
   2e5cc:	ldr	r0, [r0, #4]
   2e5d0:	ldr	r1, [sp, #8]
   2e5d4:	ldr	r2, [r1, #40]	; 0x28
   2e5d8:	add	r3, r2, #1
   2e5dc:	str	r3, [r1, #40]	; 0x28
   2e5e0:	add	r0, r0, r2
   2e5e4:	ldrb	r0, [r0]
   2e5e8:	strb	r0, [fp, #-1]
   2e5ec:	b	2e64c <__assert_fail@plt+0x1d1b8>
   2e5f0:	ldr	r0, [sp, #8]
   2e5f4:	ldr	r1, [sp, #8]
   2e5f8:	ldr	r1, [r1, #40]	; 0x28
   2e5fc:	bl	2e234 <__assert_fail@plt+0x1cda0>
   2e600:	ldr	r1, [sp, #8]
   2e604:	ldr	lr, [r1, #40]	; 0x28
   2e608:	add	r0, lr, r0
   2e60c:	str	r0, [r1, #40]	; 0x28
   2e610:	ldr	r0, [sp]
   2e614:	strb	r0, [fp, #-1]
   2e618:	b	2e64c <__assert_fail@plt+0x1d1b8>
   2e61c:	ldr	r0, [sp, #8]
   2e620:	ldr	r0, [r0]
   2e624:	ldr	r1, [sp, #8]
   2e628:	ldr	r1, [r1, #24]
   2e62c:	ldr	r2, [sp, #8]
   2e630:	ldr	r3, [r2, #40]	; 0x28
   2e634:	add	ip, r3, #1
   2e638:	str	ip, [r2, #40]	; 0x28
   2e63c:	add	r1, r1, r3
   2e640:	add	r0, r0, r1
   2e644:	ldrb	r0, [r0]
   2e648:	strb	r0, [fp, #-1]
   2e64c:	ldrb	r0, [fp, #-1]
   2e650:	mov	sp, fp
   2e654:	pop	{fp, pc}
   2e658:	push	{fp, lr}
   2e65c:	mov	fp, sp
   2e660:	sub	sp, sp, #16
   2e664:	strb	r0, [fp, #-1]
   2e668:	str	r1, [sp, #8]
   2e66c:	ldr	r0, [sp, #8]
   2e670:	ldr	r0, [r0, #92]	; 0x5c
   2e674:	cmp	r0, #1
   2e678:	ble	2e68c <__assert_fail@plt+0x1d1f8>
   2e67c:	ldrb	r0, [fp, #-1]
   2e680:	bl	113e0 <btowc@plt>
   2e684:	str	r0, [sp, #4]
   2e688:	b	2e694 <__assert_fail@plt+0x1d200>
   2e68c:	ldrb	r0, [fp, #-1]
   2e690:	str	r0, [sp, #4]
   2e694:	ldr	r0, [sp, #4]
   2e698:	mov	sp, fp
   2e69c:	pop	{fp, pc}
   2e6a0:	push	{fp, lr}
   2e6a4:	mov	fp, sp
   2e6a8:	sub	sp, sp, #40	; 0x28
   2e6ac:	str	r0, [fp, #-8]
   2e6b0:	str	r1, [fp, #-12]
   2e6b4:	str	r2, [fp, #-16]
   2e6b8:	mvn	r0, #0
   2e6bc:	str	r0, [sp, #20]
   2e6c0:	ldr	r0, [fp, #-12]
   2e6c4:	ldr	r1, [fp, #-8]
   2e6c8:	ldr	r2, [fp, #-16]
   2e6cc:	bl	28f68 <__assert_fail@plt+0x17ad4>
   2e6d0:	ldr	r0, [fp, #-12]
   2e6d4:	ldrb	r0, [r0]
   2e6d8:	strb	r0, [sp, #19]
   2e6dc:	ldr	r0, [fp, #-12]
   2e6e0:	ldr	r0, [r0, #4]
   2e6e4:	and	r0, r0, #255	; 0xff
   2e6e8:	cmp	r0, #2
   2e6ec:	bne	2e6fc <__assert_fail@plt+0x1d268>
   2e6f0:	mvn	r0, #1
   2e6f4:	str	r0, [fp, #-4]
   2e6f8:	b	2e7f4 <__assert_fail@plt+0x1d360>
   2e6fc:	ldr	r0, [fp, #-12]
   2e700:	ldr	r0, [r0, #4]
   2e704:	and	r0, r0, #255	; 0xff
   2e708:	cmp	r0, #24
   2e70c:	beq	2e71c <__assert_fail@plt+0x1d288>
   2e710:	ldrb	r0, [sp, #19]
   2e714:	cmp	r0, #44	; 0x2c
   2e718:	bne	2e720 <__assert_fail@plt+0x1d28c>
   2e71c:	b	2e7ec <__assert_fail@plt+0x1d358>
   2e720:	ldr	r0, [fp, #-12]
   2e724:	ldr	r0, [r0, #4]
   2e728:	and	r0, r0, #255	; 0xff
   2e72c:	cmp	r0, #1
   2e730:	bne	2e75c <__assert_fail@plt+0x1d2c8>
   2e734:	ldrb	r0, [sp, #19]
   2e738:	cmp	r0, #48	; 0x30
   2e73c:	blt	2e75c <__assert_fail@plt+0x1d2c8>
   2e740:	ldrb	r0, [sp, #19]
   2e744:	movw	r1, #57	; 0x39
   2e748:	cmp	r1, r0
   2e74c:	blt	2e75c <__assert_fail@plt+0x1d2c8>
   2e750:	ldr	r0, [sp, #20]
   2e754:	cmn	r0, #2
   2e758:	bne	2e768 <__assert_fail@plt+0x1d2d4>
   2e75c:	mvn	r0, #1
   2e760:	str	r0, [sp, #12]
   2e764:	b	2e7e0 <__assert_fail@plt+0x1d34c>
   2e768:	ldr	r0, [sp, #20]
   2e76c:	cmn	r0, #1
   2e770:	bne	2e784 <__assert_fail@plt+0x1d2f0>
   2e774:	ldrb	r0, [sp, #19]
   2e778:	sub	r0, r0, #48	; 0x30
   2e77c:	str	r0, [sp, #8]
   2e780:	b	2e7d8 <__assert_fail@plt+0x1d344>
   2e784:	ldr	r0, [sp, #20]
   2e788:	movw	r1, #10
   2e78c:	mul	r0, r0, r1
   2e790:	ldrb	r1, [sp, #19]
   2e794:	add	r0, r0, r1
   2e798:	sub	r0, r0, #48	; 0x30
   2e79c:	movw	r1, #32768	; 0x8000
   2e7a0:	cmp	r1, r0
   2e7a4:	bge	2e7b4 <__assert_fail@plt+0x1d320>
   2e7a8:	movw	r0, #32768	; 0x8000
   2e7ac:	str	r0, [sp, #4]
   2e7b0:	b	2e7d0 <__assert_fail@plt+0x1d33c>
   2e7b4:	ldr	r0, [sp, #20]
   2e7b8:	movw	r1, #10
   2e7bc:	mul	r0, r0, r1
   2e7c0:	ldrb	r1, [sp, #19]
   2e7c4:	add	r0, r0, r1
   2e7c8:	sub	r0, r0, #48	; 0x30
   2e7cc:	str	r0, [sp, #4]
   2e7d0:	ldr	r0, [sp, #4]
   2e7d4:	str	r0, [sp, #8]
   2e7d8:	ldr	r0, [sp, #8]
   2e7dc:	str	r0, [sp, #12]
   2e7e0:	ldr	r0, [sp, #12]
   2e7e4:	str	r0, [sp, #20]
   2e7e8:	b	2e6c0 <__assert_fail@plt+0x1d22c>
   2e7ec:	ldr	r0, [sp, #20]
   2e7f0:	str	r0, [fp, #-4]
   2e7f4:	ldr	r0, [fp, #-4]
   2e7f8:	mov	sp, fp
   2e7fc:	pop	{fp, pc}
   2e800:	push	{fp, lr}
   2e804:	mov	fp, sp
   2e808:	sub	sp, sp, #40	; 0x28
   2e80c:	str	r0, [fp, #-8]
   2e810:	str	r1, [fp, #-12]
   2e814:	add	r0, sp, #20
   2e818:	str	r0, [sp, #16]
   2e81c:	ldr	r0, [fp, #-8]
   2e820:	ldr	r0, [r0]
   2e824:	str	r0, [sp, #12]
   2e828:	ldr	r0, [fp, #-8]
   2e82c:	str	r0, [fp, #-16]
   2e830:	ldr	r0, [fp, #-12]
   2e834:	ldr	r1, [fp, #-16]
   2e838:	add	r3, r1, #20
   2e83c:	movw	r1, #0
   2e840:	str	r1, [sp, #4]
   2e844:	ldr	r2, [sp, #4]
   2e848:	bl	2b290 <__assert_fail@plt+0x19dfc>
   2e84c:	ldr	r1, [sp, #16]
   2e850:	str	r0, [r1]
   2e854:	ldr	r0, [sp, #16]
   2e858:	ldr	r0, [r0]
   2e85c:	movw	r1, #0
   2e860:	cmp	r0, r1
   2e864:	bne	2e874 <__assert_fail@plt+0x1d3e0>
   2e868:	movw	r0, #0
   2e86c:	str	r0, [fp, #-4]
   2e870:	b	2e984 <__assert_fail@plt+0x1d4f0>
   2e874:	ldr	r0, [sp, #12]
   2e878:	ldr	r1, [sp, #16]
   2e87c:	ldr	r1, [r1]
   2e880:	str	r0, [r1]
   2e884:	ldr	r0, [sp, #16]
   2e888:	ldr	r0, [r0]
   2e88c:	ldr	r1, [r0, #24]
   2e890:	mvn	r2, #262144	; 0x40000
   2e894:	and	r1, r1, r2
   2e898:	orr	r1, r1, #262144	; 0x40000
   2e89c:	str	r1, [r0, #24]
   2e8a0:	ldr	r0, [sp, #16]
   2e8a4:	ldr	r0, [r0]
   2e8a8:	str	r0, [sp, #12]
   2e8ac:	ldr	r0, [fp, #-16]
   2e8b0:	ldr	r0, [r0, #4]
   2e8b4:	movw	r1, #0
   2e8b8:	cmp	r0, r1
   2e8bc:	beq	2e8dc <__assert_fail@plt+0x1d448>
   2e8c0:	ldr	r0, [fp, #-16]
   2e8c4:	ldr	r0, [r0, #4]
   2e8c8:	str	r0, [fp, #-16]
   2e8cc:	ldr	r0, [sp, #12]
   2e8d0:	add	r0, r0, #4
   2e8d4:	str	r0, [sp, #16]
   2e8d8:	b	2e980 <__assert_fail@plt+0x1d4ec>
   2e8dc:	movw	r0, #0
   2e8e0:	str	r0, [sp, #8]
   2e8e4:	ldr	r0, [fp, #-16]
   2e8e8:	ldr	r0, [r0, #8]
   2e8ec:	ldr	r1, [sp, #8]
   2e8f0:	cmp	r0, r1
   2e8f4:	movw	r0, #1
   2e8f8:	str	r0, [sp]
   2e8fc:	beq	2e91c <__assert_fail@plt+0x1d488>
   2e900:	ldr	r0, [fp, #-16]
   2e904:	ldr	r0, [r0, #8]
   2e908:	movw	r1, #0
   2e90c:	cmp	r0, r1
   2e910:	movw	r0, #0
   2e914:	moveq	r0, #1
   2e918:	str	r0, [sp]
   2e91c:	ldr	r0, [sp]
   2e920:	tst	r0, #1
   2e924:	beq	2e968 <__assert_fail@plt+0x1d4d4>
   2e928:	ldr	r0, [fp, #-16]
   2e92c:	str	r0, [sp, #8]
   2e930:	ldr	r0, [fp, #-16]
   2e934:	ldr	r0, [r0]
   2e938:	str	r0, [fp, #-16]
   2e93c:	ldr	r0, [sp, #12]
   2e940:	ldr	r0, [r0]
   2e944:	str	r0, [sp, #12]
   2e948:	ldr	r0, [fp, #-16]
   2e94c:	movw	r1, #0
   2e950:	cmp	r0, r1
   2e954:	bne	2e964 <__assert_fail@plt+0x1d4d0>
   2e958:	ldr	r0, [sp, #20]
   2e95c:	str	r0, [fp, #-4]
   2e960:	b	2e984 <__assert_fail@plt+0x1d4f0>
   2e964:	b	2e8e4 <__assert_fail@plt+0x1d450>
   2e968:	ldr	r0, [fp, #-16]
   2e96c:	ldr	r0, [r0, #8]
   2e970:	str	r0, [fp, #-16]
   2e974:	ldr	r0, [sp, #12]
   2e978:	add	r0, r0, #8
   2e97c:	str	r0, [sp, #16]
   2e980:	b	2e830 <__assert_fail@plt+0x1d39c>
   2e984:	ldr	r0, [fp, #-4]
   2e988:	mov	sp, fp
   2e98c:	pop	{fp, pc}
   2e990:	sub	sp, sp, #12
   2e994:	str	r0, [sp, #8]
   2e998:	str	r1, [sp, #4]
   2e99c:	ldr	r0, [sp, #8]
   2e9a0:	str	r0, [sp]
   2e9a4:	ldr	r0, [sp, #4]
   2e9a8:	ldr	r0, [r0, #24]
   2e9ac:	and	r0, r0, #255	; 0xff
   2e9b0:	cmp	r0, #17
   2e9b4:	bne	2e9e4 <__assert_fail@plt+0x1d550>
   2e9b8:	ldr	r0, [sp, #4]
   2e9bc:	ldr	r0, [r0, #20]
   2e9c0:	ldr	r1, [sp]
   2e9c4:	cmp	r0, r1
   2e9c8:	bne	2e9e4 <__assert_fail@plt+0x1d550>
   2e9cc:	ldr	r0, [sp, #4]
   2e9d0:	ldr	r1, [r0, #24]
   2e9d4:	mvn	r2, #524288	; 0x80000
   2e9d8:	and	r1, r1, r2
   2e9dc:	orr	r1, r1, #524288	; 0x80000
   2e9e0:	str	r1, [r0, #24]
   2e9e4:	movw	r0, #0
   2e9e8:	add	sp, sp, #12
   2e9ec:	bx	lr
   2e9f0:	push	{fp, lr}
   2e9f4:	mov	fp, sp
   2e9f8:	sub	sp, sp, #40	; 0x28
   2e9fc:	str	r0, [fp, #-8]
   2ea00:	str	r1, [fp, #-12]
   2ea04:	str	r2, [fp, #-16]
   2ea08:	ldr	r0, [fp, #-8]
   2ea0c:	str	r0, [sp, #20]
   2ea10:	ldr	r0, [fp, #-12]
   2ea14:	ldr	r1, [fp, #-16]
   2ea18:	ldr	r2, [sp, #20]
   2ea1c:	str	r0, [sp, #8]
   2ea20:	mov	r0, r1
   2ea24:	mov	r1, r2
   2ea28:	ldr	r2, [sp, #8]
   2ea2c:	blx	r2
   2ea30:	str	r0, [sp, #16]
   2ea34:	ldr	r0, [sp, #16]
   2ea38:	cmp	r0, #0
   2ea3c:	beq	2ea4c <__assert_fail@plt+0x1d5b8>
   2ea40:	ldr	r0, [sp, #16]
   2ea44:	str	r0, [fp, #-4]
   2ea48:	b	2eb00 <__assert_fail@plt+0x1d66c>
   2ea4c:	ldr	r0, [sp, #20]
   2ea50:	ldr	r0, [r0, #4]
   2ea54:	movw	r1, #0
   2ea58:	cmp	r0, r1
   2ea5c:	beq	2ea70 <__assert_fail@plt+0x1d5dc>
   2ea60:	ldr	r0, [sp, #20]
   2ea64:	ldr	r0, [r0, #4]
   2ea68:	str	r0, [sp, #20]
   2ea6c:	b	2eafc <__assert_fail@plt+0x1d668>
   2ea70:	movw	r0, #0
   2ea74:	str	r0, [sp, #12]
   2ea78:	ldr	r0, [sp, #20]
   2ea7c:	ldr	r0, [r0, #8]
   2ea80:	ldr	r1, [sp, #12]
   2ea84:	cmp	r0, r1
   2ea88:	movw	r0, #1
   2ea8c:	str	r0, [sp, #4]
   2ea90:	beq	2eab0 <__assert_fail@plt+0x1d61c>
   2ea94:	ldr	r0, [sp, #20]
   2ea98:	ldr	r0, [r0, #8]
   2ea9c:	movw	r1, #0
   2eaa0:	cmp	r0, r1
   2eaa4:	movw	r0, #0
   2eaa8:	moveq	r0, #1
   2eaac:	str	r0, [sp, #4]
   2eab0:	ldr	r0, [sp, #4]
   2eab4:	tst	r0, #1
   2eab8:	beq	2eaf0 <__assert_fail@plt+0x1d65c>
   2eabc:	ldr	r0, [sp, #20]
   2eac0:	str	r0, [sp, #12]
   2eac4:	ldr	r0, [sp, #20]
   2eac8:	ldr	r0, [r0]
   2eacc:	str	r0, [sp, #20]
   2ead0:	ldr	r0, [sp, #20]
   2ead4:	movw	r1, #0
   2ead8:	cmp	r0, r1
   2eadc:	bne	2eaec <__assert_fail@plt+0x1d658>
   2eae0:	movw	r0, #0
   2eae4:	str	r0, [fp, #-4]
   2eae8:	b	2eb00 <__assert_fail@plt+0x1d66c>
   2eaec:	b	2ea78 <__assert_fail@plt+0x1d5e4>
   2eaf0:	ldr	r0, [sp, #20]
   2eaf4:	ldr	r0, [r0, #8]
   2eaf8:	str	r0, [sp, #20]
   2eafc:	b	2ea10 <__assert_fail@plt+0x1d57c>
   2eb00:	ldr	r0, [fp, #-4]
   2eb04:	mov	sp, fp
   2eb08:	pop	{fp, pc}
   2eb0c:	sub	sp, sp, #20
   2eb10:	str	r0, [sp, #16]
   2eb14:	str	r1, [sp, #12]
   2eb18:	ldr	r0, [sp, #16]
   2eb1c:	str	r0, [sp, #8]
   2eb20:	ldr	r0, [sp, #12]
   2eb24:	ldr	r0, [r0, #24]
   2eb28:	and	r0, r0, #255	; 0xff
   2eb2c:	cmp	r0, #4
   2eb30:	bne	2eb94 <__assert_fail@plt+0x1d700>
   2eb34:	ldr	r0, [sp, #8]
   2eb38:	ldr	r0, [r0, #132]	; 0x84
   2eb3c:	movw	r1, #0
   2eb40:	cmp	r0, r1
   2eb44:	beq	2eb94 <__assert_fail@plt+0x1d700>
   2eb48:	ldr	r0, [sp, #12]
   2eb4c:	ldr	r0, [r0, #20]
   2eb50:	str	r0, [sp, #4]
   2eb54:	ldr	r0, [sp, #8]
   2eb58:	ldr	r0, [r0, #132]	; 0x84
   2eb5c:	ldr	r1, [sp, #4]
   2eb60:	add	r0, r0, r1, lsl #2
   2eb64:	ldr	r0, [r0]
   2eb68:	ldr	r1, [sp, #12]
   2eb6c:	str	r0, [r1, #20]
   2eb70:	ldr	r0, [sp, #12]
   2eb74:	ldr	r0, [r0, #20]
   2eb78:	movw	r1, #1
   2eb7c:	lsl	r0, r1, r0
   2eb80:	ldr	r1, [sp, #8]
   2eb84:	ldr	r2, [r1, #80]	; 0x50
   2eb88:	orr	r0, r2, r0
   2eb8c:	str	r0, [r1, #80]	; 0x50
   2eb90:	b	2ec74 <__assert_fail@plt+0x1d7e0>
   2eb94:	ldr	r0, [sp, #12]
   2eb98:	ldr	r0, [r0, #24]
   2eb9c:	and	r0, r0, #255	; 0xff
   2eba0:	cmp	r0, #17
   2eba4:	bne	2ec70 <__assert_fail@plt+0x1d7dc>
   2eba8:	ldr	r0, [sp, #12]
   2ebac:	ldr	r0, [r0, #4]
   2ebb0:	movw	r1, #0
   2ebb4:	cmp	r0, r1
   2ebb8:	beq	2ec70 <__assert_fail@plt+0x1d7dc>
   2ebbc:	ldr	r0, [sp, #12]
   2ebc0:	ldr	r0, [r0, #4]
   2ebc4:	ldr	r0, [r0, #24]
   2ebc8:	and	r0, r0, #255	; 0xff
   2ebcc:	cmp	r0, #17
   2ebd0:	bne	2ec70 <__assert_fail@plt+0x1d7dc>
   2ebd4:	ldr	r0, [sp, #12]
   2ebd8:	ldr	r0, [r0, #4]
   2ebdc:	ldr	r0, [r0, #20]
   2ebe0:	str	r0, [sp]
   2ebe4:	ldr	r0, [sp, #12]
   2ebe8:	ldr	r0, [r0, #4]
   2ebec:	ldr	r0, [r0, #4]
   2ebf0:	ldr	r1, [sp, #12]
   2ebf4:	str	r0, [r1, #4]
   2ebf8:	ldr	r0, [sp, #12]
   2ebfc:	ldr	r0, [r0, #4]
   2ec00:	movw	r1, #0
   2ec04:	cmp	r0, r1
   2ec08:	beq	2ec1c <__assert_fail@plt+0x1d788>
   2ec0c:	ldr	r0, [sp, #12]
   2ec10:	ldr	r1, [sp, #12]
   2ec14:	ldr	r1, [r1, #4]
   2ec18:	str	r0, [r1]
   2ec1c:	ldr	r0, [sp, #8]
   2ec20:	ldr	r0, [r0, #132]	; 0x84
   2ec24:	ldr	r1, [sp, #12]
   2ec28:	ldr	r1, [r1, #20]
   2ec2c:	ldr	r1, [r0, r1, lsl #2]
   2ec30:	ldr	r2, [sp]
   2ec34:	add	r0, r0, r2, lsl #2
   2ec38:	str	r1, [r0]
   2ec3c:	ldr	r0, [sp]
   2ec40:	cmp	r0, #32
   2ec44:	bge	2ec6c <__assert_fail@plt+0x1d7d8>
   2ec48:	ldr	r0, [sp]
   2ec4c:	movw	r1, #1
   2ec50:	lsl	r0, r1, r0
   2ec54:	mvn	r1, #0
   2ec58:	eor	r0, r0, r1
   2ec5c:	ldr	r1, [sp, #8]
   2ec60:	ldr	r2, [r1, #80]	; 0x50
   2ec64:	and	r0, r2, r0
   2ec68:	str	r0, [r1, #80]	; 0x50
   2ec6c:	b	2ec70 <__assert_fail@plt+0x1d7dc>
   2ec70:	b	2ec74 <__assert_fail@plt+0x1d7e0>
   2ec74:	movw	r0, #0
   2ec78:	add	sp, sp, #20
   2ec7c:	bx	lr
   2ec80:	push	{fp, lr}
   2ec84:	mov	fp, sp
   2ec88:	sub	sp, sp, #16
   2ec8c:	str	r0, [fp, #-4]
   2ec90:	str	r1, [sp, #8]
   2ec94:	ldr	r0, [fp, #-4]
   2ec98:	str	r0, [sp, #4]
   2ec9c:	movw	r0, #0
   2eca0:	str	r0, [sp]
   2eca4:	ldr	r1, [sp, #8]
   2eca8:	ldr	r1, [r1, #4]
   2ecac:	cmp	r1, r0
   2ecb0:	beq	2ed10 <__assert_fail@plt+0x1d87c>
   2ecb4:	ldr	r0, [sp, #8]
   2ecb8:	ldr	r0, [r0, #4]
   2ecbc:	ldr	r0, [r0, #24]
   2ecc0:	and	r0, r0, #255	; 0xff
   2ecc4:	cmp	r0, #17
   2ecc8:	bne	2ed10 <__assert_fail@plt+0x1d87c>
   2eccc:	ldr	r1, [sp, #4]
   2ecd0:	ldr	r0, [sp, #8]
   2ecd4:	ldr	r2, [r0, #4]
   2ecd8:	mov	r0, sp
   2ecdc:	bl	2f484 <__assert_fail@plt+0x1dff0>
   2ece0:	ldr	r1, [sp, #8]
   2ece4:	str	r0, [r1, #4]
   2ece8:	ldr	r0, [sp, #8]
   2ecec:	ldr	r0, [r0, #4]
   2ecf0:	movw	r1, #0
   2ecf4:	cmp	r0, r1
   2ecf8:	beq	2ed0c <__assert_fail@plt+0x1d878>
   2ecfc:	ldr	r0, [sp, #8]
   2ed00:	ldr	r1, [sp, #8]
   2ed04:	ldr	r1, [r1, #4]
   2ed08:	str	r0, [r1]
   2ed0c:	b	2ed10 <__assert_fail@plt+0x1d87c>
   2ed10:	ldr	r0, [sp, #8]
   2ed14:	ldr	r0, [r0, #8]
   2ed18:	movw	r1, #0
   2ed1c:	cmp	r0, r1
   2ed20:	beq	2ed80 <__assert_fail@plt+0x1d8ec>
   2ed24:	ldr	r0, [sp, #8]
   2ed28:	ldr	r0, [r0, #8]
   2ed2c:	ldr	r0, [r0, #24]
   2ed30:	and	r0, r0, #255	; 0xff
   2ed34:	cmp	r0, #17
   2ed38:	bne	2ed80 <__assert_fail@plt+0x1d8ec>
   2ed3c:	ldr	r1, [sp, #4]
   2ed40:	ldr	r0, [sp, #8]
   2ed44:	ldr	r2, [r0, #8]
   2ed48:	mov	r0, sp
   2ed4c:	bl	2f484 <__assert_fail@plt+0x1dff0>
   2ed50:	ldr	r1, [sp, #8]
   2ed54:	str	r0, [r1, #8]
   2ed58:	ldr	r0, [sp, #8]
   2ed5c:	ldr	r0, [r0, #8]
   2ed60:	movw	r1, #0
   2ed64:	cmp	r0, r1
   2ed68:	beq	2ed7c <__assert_fail@plt+0x1d8e8>
   2ed6c:	ldr	r0, [sp, #8]
   2ed70:	ldr	r1, [sp, #8]
   2ed74:	ldr	r1, [r1, #8]
   2ed78:	str	r0, [r1]
   2ed7c:	b	2ed80 <__assert_fail@plt+0x1d8ec>
   2ed80:	ldr	r0, [sp]
   2ed84:	mov	sp, fp
   2ed88:	pop	{fp, pc}
   2ed8c:	push	{fp, lr}
   2ed90:	mov	fp, sp
   2ed94:	sub	sp, sp, #24
   2ed98:	str	r0, [fp, #-8]
   2ed9c:	str	r1, [sp, #12]
   2eda0:	ldr	r0, [fp, #-8]
   2eda4:	str	r0, [sp, #8]
   2eda8:	ldr	r0, [sp, #12]
   2edac:	ldr	r0, [r0, #24]
   2edb0:	and	r0, r0, #255	; 0xff
   2edb4:	cmp	r0, #16
   2edb8:	bne	2ede8 <__assert_fail@plt+0x1d954>
   2edbc:	ldr	r0, [sp, #12]
   2edc0:	ldr	r0, [r0, #4]
   2edc4:	ldr	r0, [r0, #12]
   2edc8:	ldr	r1, [sp, #12]
   2edcc:	str	r0, [r1, #12]
   2edd0:	ldr	r0, [sp, #12]
   2edd4:	ldr	r0, [r0, #4]
   2edd8:	ldr	r0, [r0, #28]
   2eddc:	ldr	r1, [sp, #12]
   2ede0:	str	r0, [r1, #28]
   2ede4:	b	2ee84 <__assert_fail@plt+0x1d9f0>
   2ede8:	ldr	r0, [sp, #12]
   2edec:	str	r0, [r0, #12]
   2edf0:	ldr	r0, [sp, #8]
   2edf4:	ldr	r1, [sp, #12]
   2edf8:	ldr	r2, [r1, #20]
   2edfc:	ldr	r1, [r1, #24]
   2ee00:	str	r1, [sp, #4]
   2ee04:	mov	r1, r2
   2ee08:	ldr	r2, [sp, #4]
   2ee0c:	bl	2f6ac <__assert_fail@plt+0x1e218>
   2ee10:	ldr	r1, [sp, #12]
   2ee14:	str	r0, [r1, #28]
   2ee18:	ldr	r0, [sp, #12]
   2ee1c:	ldr	r0, [r0, #28]
   2ee20:	cmn	r0, #1
   2ee24:	bne	2ee34 <__assert_fail@plt+0x1d9a0>
   2ee28:	movw	r0, #12
   2ee2c:	str	r0, [fp, #-4]
   2ee30:	b	2ee8c <__assert_fail@plt+0x1d9f8>
   2ee34:	ldr	r0, [sp, #12]
   2ee38:	ldr	r0, [r0, #24]
   2ee3c:	and	r0, r0, #255	; 0xff
   2ee40:	cmp	r0, #12
   2ee44:	bne	2ee80 <__assert_fail@plt+0x1d9ec>
   2ee48:	ldr	r0, [pc, #72]	; 2ee98 <__assert_fail@plt+0x1da04>
   2ee4c:	ldr	r1, [sp, #12]
   2ee50:	ldr	r2, [r1, #20]
   2ee54:	ldr	r1, [r1, #28]
   2ee58:	ldr	r3, [sp, #8]
   2ee5c:	ldr	r3, [r3]
   2ee60:	add	r1, r3, r1, lsl #3
   2ee64:	ldr	r3, [r1, #4]
   2ee68:	movw	ip, #1023	; 0x3ff
   2ee6c:	and	r2, r2, ip
   2ee70:	lsl	r2, r2, #8
   2ee74:	and	r0, r3, r0
   2ee78:	orr	r0, r0, r2
   2ee7c:	str	r0, [r1, #4]
   2ee80:	b	2ee84 <__assert_fail@plt+0x1d9f0>
   2ee84:	movw	r0, #0
   2ee88:	str	r0, [fp, #-4]
   2ee8c:	ldr	r0, [fp, #-4]
   2ee90:	mov	sp, fp
   2ee94:	pop	{fp, pc}
   2ee98:			; <UNDEFINED> instruction: 0xfffc00ff
   2ee9c:	sub	sp, sp, #12
   2eea0:	str	r0, [sp, #8]
   2eea4:	str	r1, [sp, #4]
   2eea8:	ldr	r0, [sp, #4]
   2eeac:	ldrb	r0, [r0, #24]
   2eeb0:	mov	r1, r0
   2eeb4:	cmp	r0, #11
   2eeb8:	str	r1, [sp]
   2eebc:	beq	2eed4 <__assert_fail@plt+0x1da40>
   2eec0:	b	2eec4 <__assert_fail@plt+0x1da30>
   2eec4:	ldr	r0, [sp]
   2eec8:	cmp	r0, #16
   2eecc:	beq	2eee8 <__assert_fail@plt+0x1da54>
   2eed0:	b	2ef18 <__assert_fail@plt+0x1da84>
   2eed4:	ldr	r0, [sp, #4]
   2eed8:	ldr	r1, [sp, #4]
   2eedc:	ldr	r1, [r1, #4]
   2eee0:	str	r0, [r1, #16]
   2eee4:	b	2ef6c <__assert_fail@plt+0x1dad8>
   2eee8:	ldr	r0, [sp, #4]
   2eeec:	ldr	r0, [r0, #8]
   2eef0:	ldr	r0, [r0, #12]
   2eef4:	ldr	r1, [sp, #4]
   2eef8:	ldr	r1, [r1, #4]
   2eefc:	str	r0, [r1, #16]
   2ef00:	ldr	r0, [sp, #4]
   2ef04:	ldr	r0, [r0, #16]
   2ef08:	ldr	r1, [sp, #4]
   2ef0c:	ldr	r1, [r1, #8]
   2ef10:	str	r0, [r1, #16]
   2ef14:	b	2ef6c <__assert_fail@plt+0x1dad8>
   2ef18:	ldr	r0, [sp, #4]
   2ef1c:	ldr	r0, [r0, #4]
   2ef20:	movw	r1, #0
   2ef24:	cmp	r0, r1
   2ef28:	beq	2ef40 <__assert_fail@plt+0x1daac>
   2ef2c:	ldr	r0, [sp, #4]
   2ef30:	ldr	r0, [r0, #16]
   2ef34:	ldr	r1, [sp, #4]
   2ef38:	ldr	r1, [r1, #4]
   2ef3c:	str	r0, [r1, #16]
   2ef40:	ldr	r0, [sp, #4]
   2ef44:	ldr	r0, [r0, #8]
   2ef48:	movw	r1, #0
   2ef4c:	cmp	r0, r1
   2ef50:	beq	2ef68 <__assert_fail@plt+0x1dad4>
   2ef54:	ldr	r0, [sp, #4]
   2ef58:	ldr	r0, [r0, #16]
   2ef5c:	ldr	r1, [sp, #4]
   2ef60:	ldr	r1, [r1, #8]
   2ef64:	str	r0, [r1, #16]
   2ef68:	b	2ef6c <__assert_fail@plt+0x1dad8>
   2ef6c:	movw	r0, #0
   2ef70:	add	sp, sp, #12
   2ef74:	bx	lr
   2ef78:	push	{fp, lr}
   2ef7c:	mov	fp, sp
   2ef80:	sub	sp, sp, #32
   2ef84:	str	r0, [fp, #-4]
   2ef88:	str	r1, [fp, #-8]
   2ef8c:	ldr	r0, [fp, #-4]
   2ef90:	str	r0, [fp, #-12]
   2ef94:	ldr	r0, [fp, #-8]
   2ef98:	ldr	r0, [r0, #28]
   2ef9c:	str	r0, [sp, #16]
   2efa0:	mov	r0, #0
   2efa4:	str	r0, [sp, #12]
   2efa8:	ldr	r0, [fp, #-8]
   2efac:	ldrb	r0, [r0, #24]
   2efb0:	sub	r0, r0, #2
   2efb4:	cmp	r0, #14
   2efb8:	str	r0, [sp]
   2efbc:	bhi	2f198 <__assert_fail@plt+0x1dd04>
   2efc0:	add	r0, pc, #8
   2efc4:	ldr	r1, [sp]
   2efc8:	ldr	r0, [r0, r1, lsl #2]
   2efcc:	mov	pc, r0
   2efd0:	andeq	pc, r2, r0, lsl r0	; <UNPREDICTABLE>
   2efd4:	muleq	r2, r8, r1
   2efd8:	andeq	pc, r2, r8, lsr r1	; <UNPREDICTABLE>
   2efdc:	muleq	r2, r8, r1
   2efe0:	muleq	r2, r8, r1
   2efe4:	muleq	r2, r8, r1
   2efe8:	andeq	pc, r2, r8, lsl #2
   2efec:	andeq	pc, r2, r8, lsl #2
   2eff0:	andeq	pc, r2, ip, lsr #32
   2eff4:	andeq	pc, r2, ip, lsr #32
   2eff8:	andeq	pc, r2, r8, lsl #2
   2effc:	muleq	r2, r8, r1
   2f000:	muleq	r2, r8, r1
   2f004:	muleq	r2, r8, r1
   2f008:	andeq	pc, r2, ip
   2f00c:	b	2f1d4 <__assert_fail@plt+0x1dd40>
   2f010:	ldr	r0, [fp, #-8]
   2f014:	ldr	r0, [r0, #16]
   2f018:	movw	r1, #0
   2f01c:	cmp	r0, r1
   2f020:	bne	2f028 <__assert_fail@plt+0x1db94>
   2f024:	b	2f028 <__assert_fail@plt+0x1db94>
   2f028:	b	2f1d4 <__assert_fail@plt+0x1dd40>
   2f02c:	ldr	r0, [fp, #-12]
   2f030:	ldrb	r1, [r0, #88]	; 0x58
   2f034:	bic	r1, r1, #1
   2f038:	movw	r2, #1
   2f03c:	orr	r1, r1, r2
   2f040:	strb	r1, [r0, #88]	; 0x58
   2f044:	ldr	r0, [fp, #-8]
   2f048:	ldr	r0, [r0, #4]
   2f04c:	movw	r1, #0
   2f050:	cmp	r0, r1
   2f054:	beq	2f070 <__assert_fail@plt+0x1dbdc>
   2f058:	ldr	r0, [fp, #-8]
   2f05c:	ldr	r0, [r0, #4]
   2f060:	ldr	r0, [r0, #12]
   2f064:	ldr	r0, [r0, #28]
   2f068:	str	r0, [sp, #8]
   2f06c:	b	2f080 <__assert_fail@plt+0x1dbec>
   2f070:	ldr	r0, [fp, #-8]
   2f074:	ldr	r0, [r0, #16]
   2f078:	ldr	r0, [r0, #28]
   2f07c:	str	r0, [sp, #8]
   2f080:	ldr	r0, [fp, #-8]
   2f084:	ldr	r0, [r0, #8]
   2f088:	movw	r1, #0
   2f08c:	cmp	r0, r1
   2f090:	beq	2f0ac <__assert_fail@plt+0x1dc18>
   2f094:	ldr	r0, [fp, #-8]
   2f098:	ldr	r0, [r0, #8]
   2f09c:	ldr	r0, [r0, #12]
   2f0a0:	ldr	r0, [r0, #28]
   2f0a4:	str	r0, [sp, #4]
   2f0a8:	b	2f0bc <__assert_fail@plt+0x1dc28>
   2f0ac:	ldr	r0, [fp, #-8]
   2f0b0:	ldr	r0, [r0, #16]
   2f0b4:	ldr	r0, [r0, #28]
   2f0b8:	str	r0, [sp, #4]
   2f0bc:	ldr	r0, [sp, #8]
   2f0c0:	cmn	r0, #1
   2f0c4:	ble	2f0cc <__assert_fail@plt+0x1dc38>
   2f0c8:	b	2f0cc <__assert_fail@plt+0x1dc38>
   2f0cc:	ldr	r0, [sp, #4]
   2f0d0:	cmn	r0, #1
   2f0d4:	ble	2f0dc <__assert_fail@plt+0x1dc48>
   2f0d8:	b	2f0dc <__assert_fail@plt+0x1dc48>
   2f0dc:	ldr	r0, [fp, #-12]
   2f0e0:	ldr	r0, [r0, #20]
   2f0e4:	ldr	r1, [sp, #16]
   2f0e8:	movw	r2, #12
   2f0ec:	mul	r1, r1, r2
   2f0f0:	add	r0, r0, r1
   2f0f4:	ldr	r1, [sp, #8]
   2f0f8:	ldr	r2, [sp, #4]
   2f0fc:	bl	2f9c8 <__assert_fail@plt+0x1e534>
   2f100:	str	r0, [sp, #12]
   2f104:	b	2f1d4 <__assert_fail@plt+0x1dd40>
   2f108:	ldr	r0, [fp, #-12]
   2f10c:	ldr	r0, [r0, #20]
   2f110:	ldr	r1, [sp, #16]
   2f114:	movw	r2, #12
   2f118:	mul	r1, r1, r2
   2f11c:	add	r0, r0, r1
   2f120:	ldr	r1, [fp, #-8]
   2f124:	ldr	r1, [r1, #16]
   2f128:	ldr	r1, [r1, #28]
   2f12c:	bl	2fac4 <__assert_fail@plt+0x1e630>
   2f130:	str	r0, [sp, #12]
   2f134:	b	2f1d4 <__assert_fail@plt+0x1dd40>
   2f138:	ldr	r0, [fp, #-8]
   2f13c:	ldr	r0, [r0, #16]
   2f140:	ldr	r0, [r0, #28]
   2f144:	ldr	r1, [fp, #-12]
   2f148:	ldr	r1, [r1, #12]
   2f14c:	ldr	r2, [sp, #16]
   2f150:	add	r1, r1, r2, lsl #2
   2f154:	str	r0, [r1]
   2f158:	ldr	r0, [fp, #-8]
   2f15c:	ldr	r0, [r0, #24]
   2f160:	and	r0, r0, #255	; 0xff
   2f164:	cmp	r0, #4
   2f168:	bne	2f194 <__assert_fail@plt+0x1dd00>
   2f16c:	ldr	r0, [fp, #-12]
   2f170:	ldr	r1, [r0, #12]
   2f174:	ldr	r0, [r0, #20]
   2f178:	ldr	r2, [sp, #16]
   2f17c:	add	r3, r2, r2, lsl #1
   2f180:	add	r0, r0, r3, lsl #2
   2f184:	add	r1, r1, r2, lsl #2
   2f188:	ldr	r1, [r1]
   2f18c:	bl	2fac4 <__assert_fail@plt+0x1e630>
   2f190:	str	r0, [sp, #12]
   2f194:	b	2f1d4 <__assert_fail@plt+0x1dd40>
   2f198:	ldr	r0, [fp, #-8]
   2f19c:	ldr	r0, [r0, #24]
   2f1a0:	and	r0, r0, #255	; 0xff
   2f1a4:	and	r0, r0, #8
   2f1a8:	cmp	r0, #0
   2f1ac:	bne	2f1b4 <__assert_fail@plt+0x1dd20>
   2f1b0:	b	2f1b4 <__assert_fail@plt+0x1dd20>
   2f1b4:	ldr	r0, [fp, #-8]
   2f1b8:	ldr	r0, [r0, #16]
   2f1bc:	ldr	r0, [r0, #28]
   2f1c0:	ldr	r1, [fp, #-12]
   2f1c4:	ldr	r1, [r1, #12]
   2f1c8:	ldr	r2, [sp, #16]
   2f1cc:	add	r1, r1, r2, lsl #2
   2f1d0:	str	r0, [r1]
   2f1d4:	ldr	r0, [sp, #12]
   2f1d8:	mov	sp, fp
   2f1dc:	pop	{fp, pc}
   2f1e0:	push	{fp, lr}
   2f1e4:	mov	fp, sp
   2f1e8:	sub	sp, sp, #32
   2f1ec:	str	r0, [fp, #-8]
   2f1f0:	ldr	r0, [fp, #-8]
   2f1f4:	ldr	r0, [r0, #8]
   2f1f8:	cmp	r0, #0
   2f1fc:	bls	2f204 <__assert_fail@plt+0x1dd70>
   2f200:	b	2f204 <__assert_fail@plt+0x1dd70>
   2f204:	movw	r0, #0
   2f208:	strb	r0, [fp, #-13]
   2f20c:	movw	r0, #0
   2f210:	str	r0, [fp, #-12]
   2f214:	ldr	r0, [fp, #-12]
   2f218:	ldr	r1, [fp, #-8]
   2f21c:	ldr	r1, [r1, #8]
   2f220:	cmp	r0, r1
   2f224:	bne	2f248 <__assert_fail@plt+0x1ddb4>
   2f228:	ldrb	r0, [fp, #-13]
   2f22c:	tst	r0, #1
   2f230:	bne	2f238 <__assert_fail@plt+0x1dda4>
   2f234:	b	2f314 <__assert_fail@plt+0x1de80>
   2f238:	movw	r0, #0
   2f23c:	strb	r0, [fp, #-13]
   2f240:	movw	r0, #0
   2f244:	str	r0, [fp, #-12]
   2f248:	ldr	r0, [fp, #-8]
   2f24c:	ldr	r0, [r0, #24]
   2f250:	ldr	r1, [fp, #-12]
   2f254:	movw	r2, #12
   2f258:	mul	r1, r1, r2
   2f25c:	add	r0, r0, r1
   2f260:	ldr	r0, [r0, #4]
   2f264:	cmn	r0, #1
   2f268:	beq	2f270 <__assert_fail@plt+0x1dddc>
   2f26c:	b	2f270 <__assert_fail@plt+0x1dddc>
   2f270:	ldr	r0, [fp, #-8]
   2f274:	ldr	r0, [r0, #24]
   2f278:	ldr	r1, [fp, #-12]
   2f27c:	movw	r2, #12
   2f280:	mul	r1, r1, r2
   2f284:	add	r0, r0, r1
   2f288:	ldr	r0, [r0, #4]
   2f28c:	cmp	r0, #0
   2f290:	beq	2f298 <__assert_fail@plt+0x1de04>
   2f294:	b	2f304 <__assert_fail@plt+0x1de70>
   2f298:	ldr	r1, [fp, #-8]
   2f29c:	ldr	r2, [fp, #-12]
   2f2a0:	mov	r0, sp
   2f2a4:	movw	r3, #1
   2f2a8:	and	r3, r3, #1
   2f2ac:	bl	2fb54 <__assert_fail@plt+0x1e6c0>
   2f2b0:	str	r0, [sp, #12]
   2f2b4:	ldr	r0, [sp, #12]
   2f2b8:	cmp	r0, #0
   2f2bc:	beq	2f2cc <__assert_fail@plt+0x1de38>
   2f2c0:	ldr	r0, [sp, #12]
   2f2c4:	str	r0, [fp, #-4]
   2f2c8:	b	2f31c <__assert_fail@plt+0x1de88>
   2f2cc:	ldr	r0, [fp, #-8]
   2f2d0:	ldr	r0, [r0, #24]
   2f2d4:	ldr	r1, [fp, #-12]
   2f2d8:	movw	r2, #12
   2f2dc:	mul	r1, r1, r2
   2f2e0:	add	r0, r0, r1
   2f2e4:	ldr	r0, [r0, #4]
   2f2e8:	cmp	r0, #0
   2f2ec:	bne	2f300 <__assert_fail@plt+0x1de6c>
   2f2f0:	movw	r0, #1
   2f2f4:	strb	r0, [fp, #-13]
   2f2f8:	ldr	r0, [sp, #8]
   2f2fc:	bl	138a4 <__assert_fail@plt+0x2410>
   2f300:	b	2f304 <__assert_fail@plt+0x1de70>
   2f304:	ldr	r0, [fp, #-12]
   2f308:	add	r0, r0, #1
   2f30c:	str	r0, [fp, #-12]
   2f310:	b	2f214 <__assert_fail@plt+0x1dd80>
   2f314:	movw	r0, #0
   2f318:	str	r0, [fp, #-4]
   2f31c:	ldr	r0, [fp, #-4]
   2f320:	mov	sp, fp
   2f324:	pop	{fp, pc}
   2f328:	push	{fp, lr}
   2f32c:	mov	fp, sp
   2f330:	sub	sp, sp, #24
   2f334:	str	r0, [fp, #-8]
   2f338:	movw	r0, #0
   2f33c:	str	r0, [sp, #8]
   2f340:	ldr	r0, [sp, #8]
   2f344:	ldr	r1, [fp, #-8]
   2f348:	ldr	r1, [r1, #8]
   2f34c:	cmp	r0, r1
   2f350:	bcs	2f388 <__assert_fail@plt+0x1def4>
   2f354:	ldr	r0, [fp, #-8]
   2f358:	ldr	r0, [r0, #28]
   2f35c:	ldr	r1, [sp, #8]
   2f360:	movw	r2, #12
   2f364:	mul	r1, r1, r2
   2f368:	add	r0, r0, r1
   2f36c:	movw	r1, #0
   2f370:	and	r1, r1, #255	; 0xff
   2f374:	bl	113d4 <memset@plt>
   2f378:	ldr	r0, [sp, #8]
   2f37c:	add	r0, r0, #1
   2f380:	str	r0, [sp, #8]
   2f384:	b	2f340 <__assert_fail@plt+0x1deac>
   2f388:	movw	r0, #0
   2f38c:	str	r0, [sp, #12]
   2f390:	ldr	r0, [sp, #12]
   2f394:	ldr	r1, [fp, #-8]
   2f398:	ldr	r1, [r1, #8]
   2f39c:	cmp	r0, r1
   2f3a0:	bcs	2f470 <__assert_fail@plt+0x1dfdc>
   2f3a4:	ldr	r0, [fp, #-8]
   2f3a8:	ldr	r0, [r0, #24]
   2f3ac:	ldr	r1, [sp, #12]
   2f3b0:	movw	r2, #12
   2f3b4:	mul	r1, r1, r2
   2f3b8:	add	r0, r0, r1
   2f3bc:	ldr	r0, [r0, #8]
   2f3c0:	str	r0, [sp]
   2f3c4:	movw	r0, #0
   2f3c8:	str	r0, [sp, #8]
   2f3cc:	ldr	r0, [sp, #8]
   2f3d0:	ldr	r1, [fp, #-8]
   2f3d4:	ldr	r1, [r1, #24]
   2f3d8:	ldr	r2, [sp, #12]
   2f3dc:	movw	r3, #12
   2f3e0:	mul	r2, r2, r3
   2f3e4:	add	r1, r1, r2
   2f3e8:	ldr	r1, [r1, #4]
   2f3ec:	cmp	r0, r1
   2f3f0:	bge	2f45c <__assert_fail@plt+0x1dfc8>
   2f3f4:	ldr	r0, [fp, #-8]
   2f3f8:	ldr	r0, [r0, #28]
   2f3fc:	ldr	r1, [sp]
   2f400:	ldr	r2, [sp, #8]
   2f404:	add	r1, r1, r2, lsl #2
   2f408:	ldr	r1, [r1]
   2f40c:	movw	r2, #12
   2f410:	mul	r1, r1, r2
   2f414:	add	r0, r0, r1
   2f418:	ldr	r1, [sp, #12]
   2f41c:	bl	30cb8 <__assert_fail@plt+0x1f824>
   2f420:	and	r0, r0, #1
   2f424:	strb	r0, [sp, #7]
   2f428:	ldrb	r0, [sp, #7]
   2f42c:	mvn	r1, #0
   2f430:	eor	r0, r0, r1
   2f434:	tst	r0, #1
   2f438:	beq	2f448 <__assert_fail@plt+0x1dfb4>
   2f43c:	movw	r0, #12
   2f440:	str	r0, [fp, #-4]
   2f444:	b	2f478 <__assert_fail@plt+0x1dfe4>
   2f448:	b	2f44c <__assert_fail@plt+0x1dfb8>
   2f44c:	ldr	r0, [sp, #8]
   2f450:	add	r0, r0, #1
   2f454:	str	r0, [sp, #8]
   2f458:	b	2f3cc <__assert_fail@plt+0x1df38>
   2f45c:	b	2f460 <__assert_fail@plt+0x1dfcc>
   2f460:	ldr	r0, [sp, #12]
   2f464:	add	r0, r0, #1
   2f468:	str	r0, [sp, #12]
   2f46c:	b	2f390 <__assert_fail@plt+0x1defc>
   2f470:	movw	r0, #0
   2f474:	str	r0, [fp, #-4]
   2f478:	ldr	r0, [fp, #-4]
   2f47c:	mov	sp, fp
   2f480:	pop	{fp, pc}
   2f484:	push	{fp, lr}
   2f488:	mov	fp, sp
   2f48c:	sub	sp, sp, #56	; 0x38
   2f490:	str	r0, [fp, #-8]
   2f494:	str	r1, [fp, #-12]
   2f498:	str	r2, [fp, #-16]
   2f49c:	ldr	r0, [fp, #-12]
   2f4a0:	ldr	r0, [r0]
   2f4a4:	str	r0, [fp, #-20]	; 0xffffffec
   2f4a8:	ldr	r0, [fp, #-16]
   2f4ac:	ldr	r0, [r0, #4]
   2f4b0:	str	r0, [fp, #-24]	; 0xffffffe8
   2f4b4:	ldr	r0, [fp, #-12]
   2f4b8:	ldrb	r0, [r0, #28]
   2f4bc:	ubfx	r0, r0, #4, #1
   2f4c0:	and	r0, r0, #255	; 0xff
   2f4c4:	cmp	r0, #0
   2f4c8:	beq	2f524 <__assert_fail@plt+0x1e090>
   2f4cc:	ldr	r0, [fp, #-16]
   2f4d0:	ldr	r0, [r0, #4]
   2f4d4:	movw	r1, #0
   2f4d8:	cmp	r0, r1
   2f4dc:	beq	2f524 <__assert_fail@plt+0x1e090>
   2f4e0:	ldr	r0, [fp, #-16]
   2f4e4:	ldr	r0, [r0, #20]
   2f4e8:	cmp	r0, #32
   2f4ec:	bge	2f514 <__assert_fail@plt+0x1e080>
   2f4f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   2f4f4:	ldr	r0, [r0, #80]	; 0x50
   2f4f8:	ldr	r1, [fp, #-16]
   2f4fc:	ldr	r1, [r1, #20]
   2f500:	movw	r2, #1
   2f504:	lsl	r1, r2, r1
   2f508:	and	r0, r0, r1
   2f50c:	cmp	r0, #0
   2f510:	bne	2f524 <__assert_fail@plt+0x1e090>
   2f514:	ldr	r0, [fp, #-16]
   2f518:	ldr	r0, [r0, #4]
   2f51c:	str	r0, [fp, #-4]
   2f520:	b	2f6a0 <__assert_fail@plt+0x1e20c>
   2f524:	ldr	r0, [fp, #-20]	; 0xffffffec
   2f528:	movw	r1, #0
   2f52c:	str	r1, [sp, #12]
   2f530:	ldr	r2, [sp, #12]
   2f534:	movw	r3, #8
   2f538:	bl	29200 <__assert_fail@plt+0x17d6c>
   2f53c:	str	r0, [sp, #28]
   2f540:	ldr	r0, [fp, #-20]	; 0xffffffec
   2f544:	movw	r1, #0
   2f548:	str	r1, [sp, #8]
   2f54c:	ldr	r2, [sp, #8]
   2f550:	movw	r3, #9
   2f554:	bl	29200 <__assert_fail@plt+0x17d6c>
   2f558:	str	r0, [sp, #24]
   2f55c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f560:	movw	r1, #0
   2f564:	cmp	r0, r1
   2f568:	beq	2f588 <__assert_fail@plt+0x1e0f4>
   2f56c:	ldr	r0, [fp, #-20]	; 0xffffffec
   2f570:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2f574:	ldr	r2, [sp, #24]
   2f578:	movw	r3, #16
   2f57c:	bl	29200 <__assert_fail@plt+0x17d6c>
   2f580:	str	r0, [sp, #4]
   2f584:	b	2f590 <__assert_fail@plt+0x1e0fc>
   2f588:	ldr	r0, [sp, #24]
   2f58c:	str	r0, [sp, #4]
   2f590:	ldr	r0, [sp, #4]
   2f594:	str	r0, [sp, #20]
   2f598:	ldr	r0, [fp, #-20]	; 0xffffffec
   2f59c:	ldr	r1, [sp, #28]
   2f5a0:	ldr	r2, [sp, #20]
   2f5a4:	movw	r3, #16
   2f5a8:	bl	29200 <__assert_fail@plt+0x17d6c>
   2f5ac:	str	r0, [sp, #16]
   2f5b0:	ldr	r0, [sp, #16]
   2f5b4:	movw	r1, #0
   2f5b8:	cmp	r0, r1
   2f5bc:	movw	r0, #1
   2f5c0:	str	r0, [sp]
   2f5c4:	beq	2f610 <__assert_fail@plt+0x1e17c>
   2f5c8:	ldr	r0, [sp, #20]
   2f5cc:	movw	r1, #0
   2f5d0:	cmp	r0, r1
   2f5d4:	movw	r0, #1
   2f5d8:	str	r0, [sp]
   2f5dc:	beq	2f610 <__assert_fail@plt+0x1e17c>
   2f5e0:	ldr	r0, [sp, #28]
   2f5e4:	movw	r1, #0
   2f5e8:	cmp	r0, r1
   2f5ec:	movw	r0, #1
   2f5f0:	str	r0, [sp]
   2f5f4:	beq	2f610 <__assert_fail@plt+0x1e17c>
   2f5f8:	ldr	r0, [sp, #24]
   2f5fc:	movw	r1, #0
   2f600:	cmp	r0, r1
   2f604:	movw	r0, #0
   2f608:	moveq	r0, #1
   2f60c:	str	r0, [sp]
   2f610:	ldr	r0, [sp]
   2f614:	tst	r0, #1
   2f618:	beq	2f634 <__assert_fail@plt+0x1e1a0>
   2f61c:	ldr	r0, [fp, #-8]
   2f620:	movw	r1, #12
   2f624:	str	r1, [r0]
   2f628:	movw	r0, #0
   2f62c:	str	r0, [fp, #-4]
   2f630:	b	2f6a0 <__assert_fail@plt+0x1e20c>
   2f634:	ldr	r0, [fp, #-16]
   2f638:	ldr	r0, [r0, #20]
   2f63c:	ldr	r1, [sp, #24]
   2f640:	str	r0, [r1, #20]
   2f644:	ldr	r1, [sp, #28]
   2f648:	str	r0, [r1, #20]
   2f64c:	ldr	r0, [fp, #-16]
   2f650:	ldr	r0, [r0, #24]
   2f654:	lsr	r0, r0, #19
   2f658:	and	r0, r0, #1
   2f65c:	ldr	r1, [sp, #24]
   2f660:	ldr	r2, [r1, #24]
   2f664:	and	r0, r0, #1
   2f668:	lsl	r3, r0, #19
   2f66c:	mvn	ip, #524288	; 0x80000
   2f670:	and	r2, r2, ip
   2f674:	orr	r2, r2, r3
   2f678:	str	r2, [r1, #24]
   2f67c:	ldr	r1, [sp, #28]
   2f680:	ldr	r2, [r1, #24]
   2f684:	and	r0, r0, #1
   2f688:	lsl	r0, r0, #19
   2f68c:	and	r2, r2, ip
   2f690:	orr	r0, r2, r0
   2f694:	str	r0, [r1, #24]
   2f698:	ldr	r0, [sp, #16]
   2f69c:	str	r0, [fp, #-4]
   2f6a0:	ldr	r0, [fp, #-4]
   2f6a4:	mov	sp, fp
   2f6a8:	pop	{fp, pc}
   2f6ac:	push	{fp, lr}
   2f6b0:	mov	fp, sp
   2f6b4:	sub	sp, sp, #64	; 0x40
   2f6b8:	str	r1, [fp, #-12]
   2f6bc:	str	r2, [fp, #-8]
   2f6c0:	str	r0, [fp, #-16]
   2f6c4:	ldr	r0, [fp, #-16]
   2f6c8:	ldr	r0, [r0, #8]
   2f6cc:	ldr	r1, [fp, #-16]
   2f6d0:	ldr	r1, [r1, #4]
   2f6d4:	cmp	r0, r1
   2f6d8:	bcc	2f88c <__assert_fail@plt+0x1e3f8>
   2f6dc:	ldr	r0, [pc, #732]	; 2f9c0 <__assert_fail@plt+0x1e52c>
   2f6e0:	ldr	r1, [fp, #-16]
   2f6e4:	ldr	r1, [r1, #4]
   2f6e8:	lsl	r1, r1, #1
   2f6ec:	str	r1, [fp, #-20]	; 0xffffffec
   2f6f0:	movw	r1, #12
   2f6f4:	str	r1, [sp, #20]
   2f6f8:	ldr	r1, [fp, #-20]	; 0xffffffec
   2f6fc:	cmp	r0, r1
   2f700:	bcs	2f710 <__assert_fail@plt+0x1e27c>
   2f704:	mvn	r0, #0
   2f708:	str	r0, [fp, #-4]
   2f70c:	b	2f9b4 <__assert_fail@plt+0x1e520>
   2f710:	ldr	r0, [fp, #-16]
   2f714:	ldr	r0, [r0]
   2f718:	ldr	r1, [fp, #-20]	; 0xffffffec
   2f71c:	lsl	r1, r1, #3
   2f720:	bl	3fc48 <__assert_fail@plt+0x2e7b4>
   2f724:	str	r0, [sp, #24]
   2f728:	ldr	r0, [sp, #24]
   2f72c:	movw	r1, #0
   2f730:	cmp	r0, r1
   2f734:	bne	2f744 <__assert_fail@plt+0x1e2b0>
   2f738:	mvn	r0, #0
   2f73c:	str	r0, [fp, #-4]
   2f740:	b	2f9b4 <__assert_fail@plt+0x1e520>
   2f744:	ldr	r0, [sp, #24]
   2f748:	ldr	r1, [fp, #-16]
   2f74c:	str	r0, [r1]
   2f750:	ldr	r0, [fp, #-16]
   2f754:	ldr	r0, [r0, #12]
   2f758:	ldr	r1, [fp, #-20]	; 0xffffffec
   2f75c:	lsl	r1, r1, #2
   2f760:	bl	3fc48 <__assert_fail@plt+0x2e7b4>
   2f764:	str	r0, [fp, #-24]	; 0xffffffe8
   2f768:	ldr	r0, [fp, #-16]
   2f76c:	ldr	r0, [r0, #16]
   2f770:	ldr	r1, [fp, #-20]	; 0xffffffec
   2f774:	lsl	r1, r1, #2
   2f778:	bl	3fc48 <__assert_fail@plt+0x2e7b4>
   2f77c:	str	r0, [fp, #-28]	; 0xffffffe4
   2f780:	ldr	r0, [fp, #-16]
   2f784:	ldr	r0, [r0, #20]
   2f788:	ldr	r1, [fp, #-20]	; 0xffffffec
   2f78c:	movw	lr, #12
   2f790:	mul	r1, r1, lr
   2f794:	bl	3fc48 <__assert_fail@plt+0x2e7b4>
   2f798:	str	r0, [sp, #32]
   2f79c:	ldr	r0, [fp, #-16]
   2f7a0:	ldr	r0, [r0, #24]
   2f7a4:	ldr	r1, [fp, #-20]	; 0xffffffec
   2f7a8:	movw	lr, #12
   2f7ac:	mul	r1, r1, lr
   2f7b0:	bl	3fc48 <__assert_fail@plt+0x2e7b4>
   2f7b4:	str	r0, [sp, #28]
   2f7b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f7bc:	movw	r1, #0
   2f7c0:	cmp	r0, r1
   2f7c4:	movw	r0, #1
   2f7c8:	str	r0, [sp, #16]
   2f7cc:	beq	2f818 <__assert_fail@plt+0x1e384>
   2f7d0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2f7d4:	movw	r1, #0
   2f7d8:	cmp	r0, r1
   2f7dc:	movw	r0, #1
   2f7e0:	str	r0, [sp, #16]
   2f7e4:	beq	2f818 <__assert_fail@plt+0x1e384>
   2f7e8:	ldr	r0, [sp, #32]
   2f7ec:	movw	r1, #0
   2f7f0:	cmp	r0, r1
   2f7f4:	movw	r0, #1
   2f7f8:	str	r0, [sp, #16]
   2f7fc:	beq	2f818 <__assert_fail@plt+0x1e384>
   2f800:	ldr	r0, [sp, #28]
   2f804:	movw	r1, #0
   2f808:	cmp	r0, r1
   2f80c:	movw	r0, #0
   2f810:	moveq	r0, #1
   2f814:	str	r0, [sp, #16]
   2f818:	ldr	r0, [sp, #16]
   2f81c:	tst	r0, #1
   2f820:	beq	2f850 <__assert_fail@plt+0x1e3bc>
   2f824:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f828:	bl	138a4 <__assert_fail@plt+0x2410>
   2f82c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2f830:	bl	138a4 <__assert_fail@plt+0x2410>
   2f834:	ldr	r0, [sp, #32]
   2f838:	bl	138a4 <__assert_fail@plt+0x2410>
   2f83c:	ldr	r0, [sp, #28]
   2f840:	bl	138a4 <__assert_fail@plt+0x2410>
   2f844:	mvn	r0, #0
   2f848:	str	r0, [fp, #-4]
   2f84c:	b	2f9b4 <__assert_fail@plt+0x1e520>
   2f850:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f854:	ldr	r1, [fp, #-16]
   2f858:	str	r0, [r1, #12]
   2f85c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2f860:	ldr	r1, [fp, #-16]
   2f864:	str	r0, [r1, #16]
   2f868:	ldr	r0, [sp, #32]
   2f86c:	ldr	r1, [fp, #-16]
   2f870:	str	r0, [r1, #20]
   2f874:	ldr	r0, [sp, #28]
   2f878:	ldr	r1, [fp, #-16]
   2f87c:	str	r0, [r1, #24]
   2f880:	ldr	r0, [fp, #-20]	; 0xffffffec
   2f884:	ldr	r1, [fp, #-16]
   2f888:	str	r0, [r1, #4]
   2f88c:	ldr	r0, [pc, #304]	; 2f9c4 <__assert_fail@plt+0x1e530>
   2f890:	ldr	r1, [fp, #-16]
   2f894:	ldr	r2, [r1]
   2f898:	ldr	r1, [r1, #8]
   2f89c:	add	r1, r2, r1, lsl #3
   2f8a0:	vldr	d16, [fp, #-12]
   2f8a4:	vstr	d16, [r1]
   2f8a8:	ldr	r1, [fp, #-16]
   2f8ac:	ldr	r2, [r1]
   2f8b0:	ldr	r1, [r1, #8]
   2f8b4:	add	r1, r2, r1, lsl #3
   2f8b8:	ldr	r2, [r1, #4]
   2f8bc:	and	r0, r2, r0
   2f8c0:	str	r0, [r1, #4]
   2f8c4:	ldr	r0, [fp, #-8]
   2f8c8:	and	r0, r0, #255	; 0xff
   2f8cc:	cmp	r0, #5
   2f8d0:	bne	2f8ec <__assert_fail@plt+0x1e458>
   2f8d4:	ldr	r0, [fp, #-16]
   2f8d8:	ldr	r0, [r0, #92]	; 0x5c
   2f8dc:	cmp	r0, #1
   2f8e0:	movw	r0, #1
   2f8e4:	str	r0, [sp, #12]
   2f8e8:	bgt	2f904 <__assert_fail@plt+0x1e470>
   2f8ec:	ldr	r0, [fp, #-8]
   2f8f0:	and	r0, r0, #255	; 0xff
   2f8f4:	cmp	r0, #6
   2f8f8:	movw	r0, #0
   2f8fc:	moveq	r0, #1
   2f900:	str	r0, [sp, #12]
   2f904:	ldr	r0, [sp, #12]
   2f908:	and	r0, r0, #1
   2f90c:	ldr	r1, [fp, #-16]
   2f910:	ldr	r2, [r1]
   2f914:	ldr	r1, [r1, #8]
   2f918:	add	r1, r2, r1, lsl #3
   2f91c:	ldr	r2, [r1, #4]
   2f920:	bic	r2, r2, #1048576	; 0x100000
   2f924:	orr	r0, r2, r0, lsl #20
   2f928:	str	r0, [r1, #4]
   2f92c:	ldr	r0, [fp, #-16]
   2f930:	ldr	r1, [r0, #8]
   2f934:	ldr	r0, [r0, #12]
   2f938:	add	r0, r0, r1, lsl #2
   2f93c:	mvn	r1, #0
   2f940:	str	r1, [r0]
   2f944:	ldr	r0, [fp, #-16]
   2f948:	ldr	r0, [r0, #20]
   2f94c:	ldr	r1, [fp, #-16]
   2f950:	ldr	r1, [r1, #8]
   2f954:	movw	r2, #12
   2f958:	mul	r1, r1, r2
   2f95c:	add	r0, r0, r1
   2f960:	movw	r1, #0
   2f964:	and	r3, r1, #255	; 0xff
   2f968:	str	r1, [sp, #8]
   2f96c:	mov	r1, r3
   2f970:	str	r2, [sp, #4]
   2f974:	bl	113d4 <memset@plt>
   2f978:	ldr	r0, [fp, #-16]
   2f97c:	ldr	r0, [r0, #24]
   2f980:	ldr	r1, [fp, #-16]
   2f984:	ldr	r1, [r1, #8]
   2f988:	ldr	r2, [sp, #4]
   2f98c:	mul	r1, r1, r2
   2f990:	add	r0, r0, r1
   2f994:	ldr	r1, [sp, #8]
   2f998:	and	r1, r1, #255	; 0xff
   2f99c:	bl	113d4 <memset@plt>
   2f9a0:	ldr	r0, [fp, #-16]
   2f9a4:	ldr	r1, [r0, #8]
   2f9a8:	add	r2, r1, #1
   2f9ac:	str	r2, [r0, #8]
   2f9b0:	str	r1, [fp, #-4]
   2f9b4:	ldr	r0, [fp, #-4]
   2f9b8:	mov	sp, fp
   2f9bc:	pop	{fp, pc}
   2f9c0:	ldrbne	r5, [r5, #-1365]	; 0xfffffaab
   2f9c4:			; <UNDEFINED> instruction: 0xfffc00ff
   2f9c8:	push	{fp, lr}
   2f9cc:	mov	fp, sp
   2f9d0:	sub	sp, sp, #16
   2f9d4:	str	r0, [sp, #8]
   2f9d8:	str	r1, [sp, #4]
   2f9dc:	str	r2, [sp]
   2f9e0:	ldr	r0, [sp, #8]
   2f9e4:	movw	r1, #2
   2f9e8:	str	r1, [r0]
   2f9ec:	movw	r0, #8
   2f9f0:	bl	3fbd8 <__assert_fail@plt+0x2e744>
   2f9f4:	ldr	r1, [sp, #8]
   2f9f8:	str	r0, [r1, #8]
   2f9fc:	ldr	r0, [sp, #8]
   2fa00:	ldr	r0, [r0, #8]
   2fa04:	movw	r1, #0
   2fa08:	cmp	r0, r1
   2fa0c:	bne	2fa1c <__assert_fail@plt+0x1e588>
   2fa10:	movw	r0, #12
   2fa14:	str	r0, [fp, #-4]
   2fa18:	b	2fab8 <__assert_fail@plt+0x1e624>
   2fa1c:	ldr	r0, [sp, #4]
   2fa20:	ldr	r1, [sp]
   2fa24:	cmp	r0, r1
   2fa28:	bne	2fa4c <__assert_fail@plt+0x1e5b8>
   2fa2c:	ldr	r0, [sp, #8]
   2fa30:	movw	r1, #1
   2fa34:	str	r1, [r0, #4]
   2fa38:	ldr	r0, [sp, #4]
   2fa3c:	ldr	r1, [sp, #8]
   2fa40:	ldr	r1, [r1, #8]
   2fa44:	str	r0, [r1]
   2fa48:	b	2fab0 <__assert_fail@plt+0x1e61c>
   2fa4c:	ldr	r0, [sp, #8]
   2fa50:	movw	r1, #2
   2fa54:	str	r1, [r0, #4]
   2fa58:	ldr	r0, [sp, #4]
   2fa5c:	ldr	r1, [sp]
   2fa60:	cmp	r0, r1
   2fa64:	bge	2fa8c <__assert_fail@plt+0x1e5f8>
   2fa68:	ldr	r0, [sp, #4]
   2fa6c:	ldr	r1, [sp, #8]
   2fa70:	ldr	r1, [r1, #8]
   2fa74:	str	r0, [r1]
   2fa78:	ldr	r0, [sp]
   2fa7c:	ldr	r1, [sp, #8]
   2fa80:	ldr	r1, [r1, #8]
   2fa84:	str	r0, [r1, #4]
   2fa88:	b	2faac <__assert_fail@plt+0x1e618>
   2fa8c:	ldr	r0, [sp]
   2fa90:	ldr	r1, [sp, #8]
   2fa94:	ldr	r1, [r1, #8]
   2fa98:	str	r0, [r1]
   2fa9c:	ldr	r0, [sp, #4]
   2faa0:	ldr	r1, [sp, #8]
   2faa4:	ldr	r1, [r1, #8]
   2faa8:	str	r0, [r1, #4]
   2faac:	b	2fab0 <__assert_fail@plt+0x1e61c>
   2fab0:	movw	r0, #0
   2fab4:	str	r0, [fp, #-4]
   2fab8:	ldr	r0, [fp, #-4]
   2fabc:	mov	sp, fp
   2fac0:	pop	{fp, pc}
   2fac4:	push	{fp, lr}
   2fac8:	mov	fp, sp
   2facc:	sub	sp, sp, #16
   2fad0:	str	r0, [sp, #8]
   2fad4:	str	r1, [sp, #4]
   2fad8:	ldr	r0, [sp, #8]
   2fadc:	movw	r1, #1
   2fae0:	str	r1, [r0]
   2fae4:	ldr	r0, [sp, #8]
   2fae8:	str	r1, [r0, #4]
   2faec:	movw	r0, #4
   2faf0:	bl	3fbd8 <__assert_fail@plt+0x2e744>
   2faf4:	ldr	r1, [sp, #8]
   2faf8:	str	r0, [r1, #8]
   2fafc:	ldr	r0, [sp, #8]
   2fb00:	ldr	r0, [r0, #8]
   2fb04:	movw	r1, #0
   2fb08:	cmp	r0, r1
   2fb0c:	bne	2fb30 <__assert_fail@plt+0x1e69c>
   2fb10:	ldr	r0, [sp, #8]
   2fb14:	movw	r1, #0
   2fb18:	str	r1, [r0, #4]
   2fb1c:	ldr	r0, [sp, #8]
   2fb20:	str	r1, [r0]
   2fb24:	movw	r0, #12
   2fb28:	str	r0, [fp, #-4]
   2fb2c:	b	2fb48 <__assert_fail@plt+0x1e6b4>
   2fb30:	ldr	r0, [sp, #4]
   2fb34:	ldr	r1, [sp, #8]
   2fb38:	ldr	r1, [r1, #8]
   2fb3c:	str	r0, [r1]
   2fb40:	movw	r0, #0
   2fb44:	str	r0, [fp, #-4]
   2fb48:	ldr	r0, [fp, #-4]
   2fb4c:	mov	sp, fp
   2fb50:	pop	{fp, pc}
   2fb54:	push	{fp, lr}
   2fb58:	mov	fp, sp
   2fb5c:	sub	sp, sp, #72	; 0x48
   2fb60:	str	r0, [fp, #-8]
   2fb64:	str	r1, [fp, #-12]
   2fb68:	str	r2, [fp, #-16]
   2fb6c:	and	r0, r3, #1
   2fb70:	strb	r0, [fp, #-17]	; 0xffffffef
   2fb74:	movw	r0, #0
   2fb78:	strb	r0, [sp, #31]
   2fb7c:	ldr	r0, [fp, #-12]
   2fb80:	ldr	r0, [r0, #20]
   2fb84:	ldr	r1, [fp, #-16]
   2fb88:	movw	r2, #12
   2fb8c:	mul	r1, r1, r2
   2fb90:	add	r0, r0, r1
   2fb94:	ldr	r0, [r0, #4]
   2fb98:	add	r1, r0, #1
   2fb9c:	add	r0, sp, #32
   2fba0:	bl	2ff28 <__assert_fail@plt+0x1ea94>
   2fba4:	str	r0, [fp, #-24]	; 0xffffffe8
   2fba8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fbac:	cmp	r0, #0
   2fbb0:	beq	2fbc0 <__assert_fail@plt+0x1e72c>
   2fbb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fbb8:	str	r0, [fp, #-4]
   2fbbc:	b	2ff1c <__assert_fail@plt+0x1ea88>
   2fbc0:	ldr	r0, [fp, #-16]
   2fbc4:	ldr	r1, [sp, #36]	; 0x24
   2fbc8:	ldr	r2, [sp, #40]	; 0x28
   2fbcc:	add	r3, r1, #1
   2fbd0:	str	r3, [sp, #36]	; 0x24
   2fbd4:	str	r0, [r2, r1, lsl #2]
   2fbd8:	ldr	r0, [fp, #-12]
   2fbdc:	ldr	r0, [r0, #24]
   2fbe0:	ldr	r1, [fp, #-16]
   2fbe4:	add	r1, r1, r1, lsl #1
   2fbe8:	add	r0, r0, r1, lsl #2
   2fbec:	mvn	r1, #0
   2fbf0:	str	r1, [r0, #4]
   2fbf4:	ldr	r0, [fp, #-12]
   2fbf8:	ldr	r0, [r0]
   2fbfc:	ldr	r1, [fp, #-16]
   2fc00:	add	r0, r0, r1, lsl #3
   2fc04:	ldr	r0, [r0, #4]
   2fc08:	lsr	r0, r0, #8
   2fc0c:	movw	r1, #1023	; 0x3ff
   2fc10:	and	r0, r0, r1
   2fc14:	cmp	r0, #0
   2fc18:	beq	2fce0 <__assert_fail@plt+0x1e84c>
   2fc1c:	ldr	r0, [fp, #-12]
   2fc20:	ldr	r0, [r0, #20]
   2fc24:	ldr	r1, [fp, #-16]
   2fc28:	movw	r2, #12
   2fc2c:	mul	r1, r1, r2
   2fc30:	add	r0, r0, r1
   2fc34:	ldr	r0, [r0, #4]
   2fc38:	cmp	r0, #0
   2fc3c:	beq	2fce0 <__assert_fail@plt+0x1e84c>
   2fc40:	ldr	r0, [fp, #-12]
   2fc44:	ldr	r1, [r0]
   2fc48:	ldr	r0, [r0, #20]
   2fc4c:	ldr	r2, [fp, #-16]
   2fc50:	add	r2, r2, r2, lsl #1
   2fc54:	add	r0, r0, r2, lsl #2
   2fc58:	ldr	r0, [r0, #8]
   2fc5c:	ldr	r0, [r0]
   2fc60:	add	r0, r1, r0, lsl #3
   2fc64:	ldr	r0, [r0, #4]
   2fc68:	lsr	r0, r0, #18
   2fc6c:	and	r0, r0, #1
   2fc70:	cmp	r0, #0
   2fc74:	bne	2fce0 <__assert_fail@plt+0x1e84c>
   2fc78:	ldr	r0, [fp, #-12]
   2fc7c:	ldr	r1, [fp, #-16]
   2fc80:	mov	r2, r1
   2fc84:	mov	r3, r1
   2fc88:	mov	ip, r1
   2fc8c:	ldr	lr, [r0]
   2fc90:	add	r1, lr, r1, lsl #3
   2fc94:	ldr	r1, [r1, #4]
   2fc98:	lsr	r1, r1, #8
   2fc9c:	movw	lr, #1023	; 0x3ff
   2fca0:	and	r1, r1, lr
   2fca4:	str	r1, [sp, #8]
   2fca8:	mov	r1, r2
   2fcac:	mov	r2, r3
   2fcb0:	mov	r3, ip
   2fcb4:	ldr	ip, [sp, #8]
   2fcb8:	str	ip, [sp]
   2fcbc:	bl	2ff9c <__assert_fail@plt+0x1eb08>
   2fcc0:	str	r0, [fp, #-24]	; 0xffffffe8
   2fcc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fcc8:	cmp	r0, #0
   2fccc:	beq	2fcdc <__assert_fail@plt+0x1e848>
   2fcd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fcd4:	str	r0, [fp, #-4]
   2fcd8:	b	2ff1c <__assert_fail@plt+0x1ea88>
   2fcdc:	b	2fce0 <__assert_fail@plt+0x1e84c>
   2fce0:	ldr	r0, [fp, #-12]
   2fce4:	ldr	r0, [r0]
   2fce8:	ldr	r1, [fp, #-16]
   2fcec:	add	r0, r0, r1, lsl #3
   2fcf0:	ldr	r0, [r0, #4]
   2fcf4:	and	r0, r0, #255	; 0xff
   2fcf8:	and	r0, r0, #8
   2fcfc:	cmp	r0, #0
   2fd00:	beq	2fe8c <__assert_fail@plt+0x1e9f8>
   2fd04:	movw	r0, #0
   2fd08:	str	r0, [fp, #-28]	; 0xffffffe4
   2fd0c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2fd10:	ldr	r1, [fp, #-12]
   2fd14:	ldr	r1, [r1, #20]
   2fd18:	ldr	r2, [fp, #-16]
   2fd1c:	movw	r3, #12
   2fd20:	mul	r2, r2, r3
   2fd24:	add	r1, r1, r2
   2fd28:	ldr	r1, [r1, #4]
   2fd2c:	cmp	r0, r1
   2fd30:	bge	2fe88 <__assert_fail@plt+0x1e9f4>
   2fd34:	ldr	r0, [fp, #-12]
   2fd38:	ldr	r0, [r0, #20]
   2fd3c:	ldr	r1, [fp, #-16]
   2fd40:	add	r1, r1, r1, lsl #1
   2fd44:	add	r0, r0, r1, lsl #2
   2fd48:	ldr	r0, [r0, #8]
   2fd4c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2fd50:	add	r0, r0, r1, lsl #2
   2fd54:	ldr	r0, [r0]
   2fd58:	str	r0, [sp, #12]
   2fd5c:	ldr	r0, [fp, #-12]
   2fd60:	ldr	r0, [r0, #24]
   2fd64:	ldr	r1, [sp, #12]
   2fd68:	movw	r2, #12
   2fd6c:	mul	r1, r1, r2
   2fd70:	add	r0, r0, r1
   2fd74:	ldr	r0, [r0, #4]
   2fd78:	cmn	r0, #1
   2fd7c:	bne	2fd8c <__assert_fail@plt+0x1e8f8>
   2fd80:	movw	r0, #1
   2fd84:	strb	r0, [sp, #31]
   2fd88:	b	2fe78 <__assert_fail@plt+0x1e9e4>
   2fd8c:	ldr	r0, [fp, #-12]
   2fd90:	ldr	r0, [r0, #24]
   2fd94:	ldr	r1, [sp, #12]
   2fd98:	movw	r2, #12
   2fd9c:	mul	r1, r1, r2
   2fda0:	add	r0, r0, r1
   2fda4:	ldr	r0, [r0, #4]
   2fda8:	cmp	r0, #0
   2fdac:	bne	2fde8 <__assert_fail@plt+0x1e954>
   2fdb0:	ldr	r1, [fp, #-12]
   2fdb4:	ldr	r2, [sp, #12]
   2fdb8:	add	r0, sp, #16
   2fdbc:	movw	r3, #0
   2fdc0:	and	r3, r3, #1
   2fdc4:	bl	2fb54 <__assert_fail@plt+0x1e6c0>
   2fdc8:	str	r0, [fp, #-24]	; 0xffffffe8
   2fdcc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fdd0:	cmp	r0, #0
   2fdd4:	beq	2fde4 <__assert_fail@plt+0x1e950>
   2fdd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fddc:	str	r0, [fp, #-4]
   2fde0:	b	2ff1c <__assert_fail@plt+0x1ea88>
   2fde4:	b	2fe18 <__assert_fail@plt+0x1e984>
   2fde8:	ldr	r0, [fp, #-12]
   2fdec:	ldr	r0, [r0, #24]
   2fdf0:	ldr	r1, [sp, #12]
   2fdf4:	movw	r2, #12
   2fdf8:	mul	r1, r1, r2
   2fdfc:	add	r0, r0, r1
   2fe00:	ldr	r1, [r0]
   2fe04:	str	r1, [sp, #16]
   2fe08:	ldr	r1, [r0, #4]
   2fe0c:	str	r1, [sp, #20]
   2fe10:	ldr	r0, [r0, #8]
   2fe14:	str	r0, [sp, #24]
   2fe18:	add	r0, sp, #32
   2fe1c:	add	r1, sp, #16
   2fe20:	bl	304a4 <__assert_fail@plt+0x1f010>
   2fe24:	str	r0, [fp, #-24]	; 0xffffffe8
   2fe28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fe2c:	cmp	r0, #0
   2fe30:	beq	2fe40 <__assert_fail@plt+0x1e9ac>
   2fe34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fe38:	str	r0, [fp, #-4]
   2fe3c:	b	2ff1c <__assert_fail@plt+0x1ea88>
   2fe40:	ldr	r0, [fp, #-12]
   2fe44:	ldr	r0, [r0, #24]
   2fe48:	ldr	r1, [sp, #12]
   2fe4c:	movw	r2, #12
   2fe50:	mul	r1, r1, r2
   2fe54:	add	r0, r0, r1
   2fe58:	ldr	r0, [r0, #4]
   2fe5c:	cmp	r0, #0
   2fe60:	bne	2fe74 <__assert_fail@plt+0x1e9e0>
   2fe64:	movw	r0, #1
   2fe68:	strb	r0, [sp, #31]
   2fe6c:	ldr	r0, [sp, #24]
   2fe70:	bl	138a4 <__assert_fail@plt+0x2410>
   2fe74:	b	2fe78 <__assert_fail@plt+0x1e9e4>
   2fe78:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2fe7c:	add	r0, r0, #1
   2fe80:	str	r0, [fp, #-28]	; 0xffffffe4
   2fe84:	b	2fd0c <__assert_fail@plt+0x1e878>
   2fe88:	b	2fe8c <__assert_fail@plt+0x1e9f8>
   2fe8c:	ldrb	r0, [sp, #31]
   2fe90:	tst	r0, #1
   2fe94:	beq	2fec8 <__assert_fail@plt+0x1ea34>
   2fe98:	ldrb	r0, [fp, #-17]	; 0xffffffef
   2fe9c:	tst	r0, #1
   2fea0:	bne	2fec8 <__assert_fail@plt+0x1ea34>
   2fea4:	ldr	r0, [fp, #-12]
   2fea8:	ldr	r0, [r0, #24]
   2feac:	ldr	r1, [fp, #-16]
   2feb0:	movw	r2, #12
   2feb4:	mul	r1, r1, r2
   2feb8:	add	r0, r0, r1
   2febc:	movw	r1, #0
   2fec0:	str	r1, [r0, #4]
   2fec4:	b	2fef8 <__assert_fail@plt+0x1ea64>
   2fec8:	ldr	r0, [fp, #-12]
   2fecc:	ldr	r0, [r0, #24]
   2fed0:	ldr	r1, [fp, #-16]
   2fed4:	movw	r2, #12
   2fed8:	mul	r1, r1, r2
   2fedc:	add	r0, r0, r1
   2fee0:	ldr	r1, [sp, #32]
   2fee4:	str	r1, [r0]
   2fee8:	ldr	r1, [sp, #36]	; 0x24
   2feec:	str	r1, [r0, #4]
   2fef0:	ldr	r1, [sp, #40]	; 0x28
   2fef4:	str	r1, [r0, #8]
   2fef8:	ldr	r0, [fp, #-8]
   2fefc:	ldr	r1, [sp, #32]
   2ff00:	str	r1, [r0]
   2ff04:	ldr	r1, [sp, #36]	; 0x24
   2ff08:	str	r1, [r0, #4]
   2ff0c:	ldr	r1, [sp, #40]	; 0x28
   2ff10:	str	r1, [r0, #8]
   2ff14:	movw	r0, #0
   2ff18:	str	r0, [fp, #-4]
   2ff1c:	ldr	r0, [fp, #-4]
   2ff20:	mov	sp, fp
   2ff24:	pop	{fp, pc}
   2ff28:	push	{fp, lr}
   2ff2c:	mov	fp, sp
   2ff30:	sub	sp, sp, #16
   2ff34:	str	r0, [sp, #8]
   2ff38:	str	r1, [sp, #4]
   2ff3c:	ldr	r0, [sp, #4]
   2ff40:	ldr	r1, [sp, #8]
   2ff44:	str	r0, [r1]
   2ff48:	ldr	r0, [sp, #8]
   2ff4c:	mov	r1, #0
   2ff50:	str	r1, [r0, #4]
   2ff54:	ldr	r0, [sp, #4]
   2ff58:	lsl	r0, r0, #2
   2ff5c:	bl	3fbd8 <__assert_fail@plt+0x2e744>
   2ff60:	ldr	r1, [sp, #8]
   2ff64:	str	r0, [r1, #8]
   2ff68:	ldr	r0, [sp, #8]
   2ff6c:	ldr	r0, [r0, #8]
   2ff70:	movw	r1, #0
   2ff74:	cmp	r0, r1
   2ff78:	bne	2ff88 <__assert_fail@plt+0x1eaf4>
   2ff7c:	movw	r0, #12
   2ff80:	str	r0, [fp, #-4]
   2ff84:	b	2ff90 <__assert_fail@plt+0x1eafc>
   2ff88:	movw	r0, #0
   2ff8c:	str	r0, [fp, #-4]
   2ff90:	ldr	r0, [fp, #-4]
   2ff94:	mov	sp, fp
   2ff98:	pop	{fp, pc}
   2ff9c:	push	{fp, lr}
   2ffa0:	mov	fp, sp
   2ffa4:	sub	sp, sp, #56	; 0x38
   2ffa8:	ldr	ip, [fp, #8]
   2ffac:	str	r0, [fp, #-8]
   2ffb0:	str	r1, [fp, #-12]
   2ffb4:	str	r2, [fp, #-16]
   2ffb8:	str	r3, [fp, #-20]	; 0xffffffec
   2ffbc:	ldr	r0, [fp, #8]
   2ffc0:	str	r0, [sp, #20]
   2ffc4:	ldr	r0, [fp, #-12]
   2ffc8:	str	r0, [fp, #-24]	; 0xffffffe8
   2ffcc:	ldr	r0, [fp, #-16]
   2ffd0:	str	r0, [sp, #28]
   2ffd4:	str	ip, [sp, #4]
   2ffd8:	ldr	r0, [fp, #-8]
   2ffdc:	ldr	r0, [r0]
   2ffe0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2ffe4:	add	r0, r0, r1, lsl #3
   2ffe8:	ldr	r0, [r0, #4]
   2ffec:	and	r0, r0, #255	; 0xff
   2fff0:	cmp	r0, #4
   2fff4:	bne	300c4 <__assert_fail@plt+0x1ec30>
   2fff8:	ldr	r0, [fp, #-8]
   2fffc:	ldr	r0, [r0, #12]
   30000:	ldr	r1, [fp, #-24]	; 0xffffffe8
   30004:	add	r0, r0, r1, lsl #2
   30008:	ldr	r0, [r0]
   3000c:	str	r0, [sp, #16]
   30010:	ldr	r0, [fp, #-8]
   30014:	ldr	r0, [r0, #20]
   30018:	ldr	r1, [sp, #28]
   3001c:	movw	r2, #12
   30020:	mul	r1, r1, r2
   30024:	add	r0, r0, r1
   30028:	movw	r1, #0
   3002c:	str	r1, [r0, #4]
   30030:	ldr	r0, [fp, #-8]
   30034:	ldr	r1, [sp, #16]
   30038:	ldr	r2, [sp, #20]
   3003c:	bl	308ac <__assert_fail@plt+0x1f418>
   30040:	str	r0, [sp, #12]
   30044:	ldr	r0, [sp, #12]
   30048:	cmn	r0, #1
   3004c:	bne	3005c <__assert_fail@plt+0x1ebc8>
   30050:	movw	r0, #12
   30054:	str	r0, [fp, #-4]
   30058:	b	30498 <__assert_fail@plt+0x1f004>
   3005c:	ldr	r0, [fp, #-8]
   30060:	ldr	r0, [r0, #12]
   30064:	ldr	r1, [fp, #-24]	; 0xffffffe8
   30068:	ldr	r1, [r0, r1, lsl #2]
   3006c:	ldr	r2, [sp, #28]
   30070:	add	r0, r0, r2, lsl #2
   30074:	str	r1, [r0]
   30078:	ldr	r0, [fp, #-8]
   3007c:	ldr	r0, [r0, #20]
   30080:	ldr	r1, [sp, #28]
   30084:	movw	r2, #12
   30088:	mul	r1, r1, r2
   3008c:	add	r0, r0, r1
   30090:	ldr	r1, [sp, #12]
   30094:	bl	30990 <__assert_fail@plt+0x1f4fc>
   30098:	and	r0, r0, #1
   3009c:	strb	r0, [sp, #27]
   300a0:	ldrb	r0, [sp, #27]
   300a4:	mvn	r1, #0
   300a8:	eor	r0, r0, r1
   300ac:	tst	r0, #1
   300b0:	beq	300c0 <__assert_fail@plt+0x1ec2c>
   300b4:	movw	r0, #12
   300b8:	str	r0, [fp, #-4]
   300bc:	b	30498 <__assert_fail@plt+0x1f004>
   300c0:	b	3047c <__assert_fail@plt+0x1efe8>
   300c4:	ldr	r0, [fp, #-8]
   300c8:	ldr	r0, [r0, #20]
   300cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   300d0:	movw	r2, #12
   300d4:	mul	r1, r1, r2
   300d8:	add	r0, r0, r1
   300dc:	ldr	r0, [r0, #4]
   300e0:	cmp	r0, #0
   300e4:	bne	30108 <__assert_fail@plt+0x1ec74>
   300e8:	ldr	r0, [fp, #-8]
   300ec:	ldr	r0, [r0, #12]
   300f0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   300f4:	ldr	r1, [r0, r1, lsl #2]
   300f8:	ldr	r2, [sp, #28]
   300fc:	add	r0, r0, r2, lsl #2
   30100:	str	r1, [r0]
   30104:	b	30490 <__assert_fail@plt+0x1effc>
   30108:	ldr	r0, [fp, #-8]
   3010c:	ldr	r0, [r0, #20]
   30110:	ldr	r1, [fp, #-24]	; 0xffffffe8
   30114:	movw	r2, #12
   30118:	mul	r1, r1, r2
   3011c:	add	r0, r0, r1
   30120:	ldr	r0, [r0, #4]
   30124:	cmp	r0, #1
   30128:	bne	3027c <__assert_fail@plt+0x1ede8>
   3012c:	ldr	r0, [fp, #-8]
   30130:	ldr	r0, [r0, #20]
   30134:	ldr	r1, [fp, #-24]	; 0xffffffe8
   30138:	movw	r2, #12
   3013c:	mul	r1, r1, r2
   30140:	add	r0, r0, r1
   30144:	ldr	r0, [r0, #8]
   30148:	ldr	r0, [r0]
   3014c:	str	r0, [sp, #16]
   30150:	ldr	r0, [fp, #-8]
   30154:	ldr	r0, [r0, #20]
   30158:	ldr	r1, [sp, #28]
   3015c:	mul	r1, r1, r2
   30160:	add	r0, r0, r1
   30164:	movw	r1, #0
   30168:	str	r1, [r0, #4]
   3016c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30170:	ldr	r1, [fp, #-20]	; 0xffffffec
   30174:	cmp	r0, r1
   30178:	bne	301d8 <__assert_fail@plt+0x1ed44>
   3017c:	ldr	r0, [sp, #28]
   30180:	ldr	r1, [fp, #-24]	; 0xffffffe8
   30184:	cmp	r0, r1
   30188:	beq	301d8 <__assert_fail@plt+0x1ed44>
   3018c:	ldr	r0, [fp, #-8]
   30190:	ldr	r0, [r0, #20]
   30194:	ldr	r1, [sp, #28]
   30198:	movw	r2, #12
   3019c:	mul	r1, r1, r2
   301a0:	add	r0, r0, r1
   301a4:	ldr	r1, [sp, #16]
   301a8:	bl	30990 <__assert_fail@plt+0x1f4fc>
   301ac:	and	r0, r0, #1
   301b0:	strb	r0, [sp, #27]
   301b4:	ldrb	r0, [sp, #27]
   301b8:	mvn	r1, #0
   301bc:	eor	r0, r0, r1
   301c0:	tst	r0, #1
   301c4:	beq	301d4 <__assert_fail@plt+0x1ed40>
   301c8:	movw	r0, #12
   301cc:	str	r0, [fp, #-4]
   301d0:	b	30498 <__assert_fail@plt+0x1f004>
   301d4:	b	30490 <__assert_fail@plt+0x1effc>
   301d8:	ldr	r0, [fp, #-8]
   301dc:	ldr	r0, [r0]
   301e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   301e4:	add	r0, r0, r1, lsl #3
   301e8:	ldr	r0, [r0, #4]
   301ec:	lsr	r0, r0, #8
   301f0:	movw	r1, #1023	; 0x3ff
   301f4:	and	r0, r0, r1
   301f8:	ldr	r1, [sp, #20]
   301fc:	orr	r0, r1, r0
   30200:	str	r0, [sp, #20]
   30204:	ldr	r0, [fp, #-8]
   30208:	ldr	r1, [sp, #16]
   3020c:	ldr	r2, [sp, #20]
   30210:	bl	308ac <__assert_fail@plt+0x1f418>
   30214:	str	r0, [sp, #12]
   30218:	ldr	r0, [sp, #12]
   3021c:	cmn	r0, #1
   30220:	bne	30230 <__assert_fail@plt+0x1ed9c>
   30224:	movw	r0, #12
   30228:	str	r0, [fp, #-4]
   3022c:	b	30498 <__assert_fail@plt+0x1f004>
   30230:	ldr	r0, [fp, #-8]
   30234:	ldr	r0, [r0, #20]
   30238:	ldr	r1, [sp, #28]
   3023c:	movw	r2, #12
   30240:	mul	r1, r1, r2
   30244:	add	r0, r0, r1
   30248:	ldr	r1, [sp, #12]
   3024c:	bl	30990 <__assert_fail@plt+0x1f4fc>
   30250:	and	r0, r0, #1
   30254:	strb	r0, [sp, #27]
   30258:	ldrb	r0, [sp, #27]
   3025c:	mvn	r1, #0
   30260:	eor	r0, r0, r1
   30264:	tst	r0, #1
   30268:	beq	30278 <__assert_fail@plt+0x1ede4>
   3026c:	movw	r0, #12
   30270:	str	r0, [fp, #-4]
   30274:	b	30498 <__assert_fail@plt+0x1f004>
   30278:	b	30474 <__assert_fail@plt+0x1efe0>
   3027c:	ldr	r0, [fp, #-8]
   30280:	ldr	r0, [r0, #20]
   30284:	ldr	r1, [fp, #-24]	; 0xffffffe8
   30288:	movw	r2, #12
   3028c:	mul	r1, r1, r2
   30290:	add	r0, r0, r1
   30294:	ldr	r0, [r0, #8]
   30298:	ldr	r0, [r0]
   3029c:	str	r0, [sp, #16]
   302a0:	ldr	r0, [fp, #-8]
   302a4:	ldr	r0, [r0, #20]
   302a8:	ldr	r1, [sp, #28]
   302ac:	mul	r1, r1, r2
   302b0:	add	r0, r0, r1
   302b4:	movw	r1, #0
   302b8:	str	r1, [r0, #4]
   302bc:	ldr	r0, [fp, #-8]
   302c0:	ldr	r1, [sp, #16]
   302c4:	ldr	r2, [sp, #20]
   302c8:	bl	30bc8 <__assert_fail@plt+0x1f734>
   302cc:	str	r0, [sp, #12]
   302d0:	ldr	r0, [sp, #12]
   302d4:	cmn	r0, #1
   302d8:	bne	3038c <__assert_fail@plt+0x1eef8>
   302dc:	ldr	r0, [fp, #-8]
   302e0:	ldr	r1, [sp, #16]
   302e4:	ldr	r2, [sp, #20]
   302e8:	bl	308ac <__assert_fail@plt+0x1f418>
   302ec:	str	r0, [sp, #12]
   302f0:	ldr	r0, [sp, #12]
   302f4:	cmn	r0, #1
   302f8:	bne	30308 <__assert_fail@plt+0x1ee74>
   302fc:	movw	r0, #12
   30300:	str	r0, [fp, #-4]
   30304:	b	30498 <__assert_fail@plt+0x1f004>
   30308:	ldr	r0, [fp, #-8]
   3030c:	ldr	r0, [r0, #20]
   30310:	ldr	r1, [sp, #28]
   30314:	movw	r2, #12
   30318:	mul	r1, r1, r2
   3031c:	add	r0, r0, r1
   30320:	ldr	r1, [sp, #12]
   30324:	bl	30990 <__assert_fail@plt+0x1f4fc>
   30328:	and	r0, r0, #1
   3032c:	strb	r0, [sp, #27]
   30330:	ldrb	r0, [sp, #27]
   30334:	mvn	r1, #0
   30338:	eor	r0, r0, r1
   3033c:	tst	r0, #1
   30340:	beq	30350 <__assert_fail@plt+0x1eebc>
   30344:	movw	r0, #12
   30348:	str	r0, [fp, #-4]
   3034c:	b	30498 <__assert_fail@plt+0x1f004>
   30350:	ldr	r0, [fp, #-8]
   30354:	ldr	r1, [sp, #16]
   30358:	ldr	r2, [sp, #12]
   3035c:	ldr	r3, [fp, #-20]	; 0xffffffec
   30360:	ldr	ip, [sp, #20]
   30364:	str	ip, [sp]
   30368:	bl	2ff9c <__assert_fail@plt+0x1eb08>
   3036c:	str	r0, [sp, #8]
   30370:	ldr	r0, [sp, #8]
   30374:	cmp	r0, #0
   30378:	beq	30388 <__assert_fail@plt+0x1eef4>
   3037c:	ldr	r0, [sp, #8]
   30380:	str	r0, [fp, #-4]
   30384:	b	30498 <__assert_fail@plt+0x1f004>
   30388:	b	303d8 <__assert_fail@plt+0x1ef44>
   3038c:	ldr	r0, [fp, #-8]
   30390:	ldr	r0, [r0, #20]
   30394:	ldr	r1, [sp, #28]
   30398:	movw	r2, #12
   3039c:	mul	r1, r1, r2
   303a0:	add	r0, r0, r1
   303a4:	ldr	r1, [sp, #12]
   303a8:	bl	30990 <__assert_fail@plt+0x1f4fc>
   303ac:	and	r0, r0, #1
   303b0:	strb	r0, [sp, #27]
   303b4:	ldrb	r0, [sp, #27]
   303b8:	mvn	r1, #0
   303bc:	eor	r0, r0, r1
   303c0:	tst	r0, #1
   303c4:	beq	303d4 <__assert_fail@plt+0x1ef40>
   303c8:	movw	r0, #12
   303cc:	str	r0, [fp, #-4]
   303d0:	b	30498 <__assert_fail@plt+0x1f004>
   303d4:	b	303d8 <__assert_fail@plt+0x1ef44>
   303d8:	ldr	r0, [fp, #-8]
   303dc:	ldr	r0, [r0, #20]
   303e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   303e4:	movw	r2, #12
   303e8:	mul	r1, r1, r2
   303ec:	add	r0, r0, r1
   303f0:	ldr	r0, [r0, #8]
   303f4:	ldr	r0, [r0, #4]
   303f8:	str	r0, [sp, #16]
   303fc:	ldr	r0, [fp, #-8]
   30400:	ldr	r1, [sp, #16]
   30404:	ldr	r2, [sp, #20]
   30408:	bl	308ac <__assert_fail@plt+0x1f418>
   3040c:	str	r0, [sp, #12]
   30410:	ldr	r0, [sp, #12]
   30414:	cmn	r0, #1
   30418:	bne	30428 <__assert_fail@plt+0x1ef94>
   3041c:	movw	r0, #12
   30420:	str	r0, [fp, #-4]
   30424:	b	30498 <__assert_fail@plt+0x1f004>
   30428:	ldr	r0, [fp, #-8]
   3042c:	ldr	r0, [r0, #20]
   30430:	ldr	r1, [sp, #28]
   30434:	movw	r2, #12
   30438:	mul	r1, r1, r2
   3043c:	add	r0, r0, r1
   30440:	ldr	r1, [sp, #12]
   30444:	bl	30990 <__assert_fail@plt+0x1f4fc>
   30448:	and	r0, r0, #1
   3044c:	strb	r0, [sp, #27]
   30450:	ldrb	r0, [sp, #27]
   30454:	mvn	r1, #0
   30458:	eor	r0, r0, r1
   3045c:	tst	r0, #1
   30460:	beq	30470 <__assert_fail@plt+0x1efdc>
   30464:	movw	r0, #12
   30468:	str	r0, [fp, #-4]
   3046c:	b	30498 <__assert_fail@plt+0x1f004>
   30470:	b	30474 <__assert_fail@plt+0x1efe0>
   30474:	b	30478 <__assert_fail@plt+0x1efe4>
   30478:	b	3047c <__assert_fail@plt+0x1efe8>
   3047c:	ldr	r0, [sp, #16]
   30480:	str	r0, [fp, #-24]	; 0xffffffe8
   30484:	ldr	r0, [sp, #12]
   30488:	str	r0, [sp, #28]
   3048c:	b	2ffd8 <__assert_fail@plt+0x1eb44>
   30490:	movw	r0, #0
   30494:	str	r0, [fp, #-4]
   30498:	ldr	r0, [fp, #-4]
   3049c:	mov	sp, fp
   304a0:	pop	{fp, pc}
   304a4:	push	{fp, lr}
   304a8:	mov	fp, sp
   304ac:	sub	sp, sp, #40	; 0x28
   304b0:	str	r0, [fp, #-8]
   304b4:	str	r1, [fp, #-12]
   304b8:	ldr	r0, [fp, #-12]
   304bc:	movw	r1, #0
   304c0:	cmp	r0, r1
   304c4:	beq	304d8 <__assert_fail@plt+0x1f044>
   304c8:	ldr	r0, [fp, #-12]
   304cc:	ldr	r0, [r0, #4]
   304d0:	cmp	r0, #0
   304d4:	bne	304e4 <__assert_fail@plt+0x1f050>
   304d8:	movw	r0, #0
   304dc:	str	r0, [fp, #-4]
   304e0:	b	308a0 <__assert_fail@plt+0x1f40c>
   304e4:	ldr	r0, [fp, #-8]
   304e8:	ldr	r0, [r0]
   304ec:	ldr	r1, [fp, #-12]
   304f0:	ldr	r1, [r1, #4]
   304f4:	lsl	r1, r1, #1
   304f8:	ldr	r2, [fp, #-8]
   304fc:	ldr	r2, [r2, #4]
   30500:	add	r1, r1, r2
   30504:	cmp	r0, r1
   30508:	bge	30574 <__assert_fail@plt+0x1f0e0>
   3050c:	ldr	r0, [fp, #-12]
   30510:	ldr	r0, [r0, #4]
   30514:	ldr	r1, [fp, #-8]
   30518:	ldr	r1, [r1]
   3051c:	add	r0, r0, r1
   30520:	lsl	r0, r0, #1
   30524:	str	r0, [sp, #8]
   30528:	ldr	r0, [fp, #-8]
   3052c:	ldr	r0, [r0, #8]
   30530:	ldr	r1, [sp, #8]
   30534:	lsl	r1, r1, #2
   30538:	bl	3fc48 <__assert_fail@plt+0x2e7b4>
   3053c:	str	r0, [sp, #4]
   30540:	ldr	r0, [sp, #4]
   30544:	movw	r1, #0
   30548:	cmp	r0, r1
   3054c:	bne	3055c <__assert_fail@plt+0x1f0c8>
   30550:	movw	r0, #12
   30554:	str	r0, [fp, #-4]
   30558:	b	308a0 <__assert_fail@plt+0x1f40c>
   3055c:	ldr	r0, [sp, #4]
   30560:	ldr	r1, [fp, #-8]
   30564:	str	r0, [r1, #8]
   30568:	ldr	r0, [sp, #8]
   3056c:	ldr	r1, [fp, #-8]
   30570:	str	r0, [r1]
   30574:	ldr	r0, [fp, #-8]
   30578:	ldr	r0, [r0, #4]
   3057c:	cmp	r0, #0
   30580:	bne	305d4 <__assert_fail@plt+0x1f140>
   30584:	ldr	r0, [fp, #-8]
   30588:	ldr	r0, [r0, #8]
   3058c:	movw	r1, #0
   30590:	cmp	r0, r1
   30594:	beq	3059c <__assert_fail@plt+0x1f108>
   30598:	b	3059c <__assert_fail@plt+0x1f108>
   3059c:	ldr	r0, [fp, #-12]
   305a0:	ldr	r0, [r0, #4]
   305a4:	ldr	r1, [fp, #-8]
   305a8:	str	r0, [r1, #4]
   305ac:	ldr	r0, [fp, #-8]
   305b0:	ldr	r0, [r0, #8]
   305b4:	ldr	r1, [fp, #-12]
   305b8:	ldr	r2, [r1, #4]
   305bc:	ldr	r1, [r1, #8]
   305c0:	lsl	r2, r2, #2
   305c4:	bl	11248 <memcpy@plt>
   305c8:	movw	r0, #0
   305cc:	str	r0, [fp, #-4]
   305d0:	b	308a0 <__assert_fail@plt+0x1f40c>
   305d4:	ldr	r0, [fp, #-8]
   305d8:	ldr	r0, [r0, #4]
   305dc:	ldr	r1, [fp, #-12]
   305e0:	ldr	r1, [r1, #4]
   305e4:	lsl	r1, r1, #1
   305e8:	add	r0, r0, r1
   305ec:	str	r0, [sp, #16]
   305f0:	ldr	r0, [fp, #-12]
   305f4:	ldr	r0, [r0, #4]
   305f8:	sub	r0, r0, #1
   305fc:	str	r0, [fp, #-16]
   30600:	ldr	r0, [fp, #-8]
   30604:	ldr	r0, [r0, #4]
   30608:	sub	r0, r0, #1
   3060c:	str	r0, [sp, #20]
   30610:	ldr	r0, [fp, #-16]
   30614:	cmp	r0, #0
   30618:	movw	r0, #0
   3061c:	str	r0, [sp]
   30620:	blt	30638 <__assert_fail@plt+0x1f1a4>
   30624:	ldr	r0, [sp, #20]
   30628:	cmp	r0, #0
   3062c:	movw	r0, #0
   30630:	movge	r0, #1
   30634:	str	r0, [sp]
   30638:	ldr	r0, [sp]
   3063c:	tst	r0, #1
   30640:	beq	3070c <__assert_fail@plt+0x1f278>
   30644:	ldr	r0, [fp, #-8]
   30648:	ldr	r0, [r0, #8]
   3064c:	ldr	r1, [sp, #20]
   30650:	ldr	r0, [r0, r1, lsl #2]
   30654:	ldr	r1, [fp, #-12]
   30658:	ldr	r1, [r1, #8]
   3065c:	ldr	r2, [fp, #-16]
   30660:	add	r1, r1, r2, lsl #2
   30664:	ldr	r1, [r1]
   30668:	cmp	r0, r1
   3066c:	bne	30690 <__assert_fail@plt+0x1f1fc>
   30670:	ldr	r0, [fp, #-16]
   30674:	mvn	r1, #0
   30678:	add	r0, r0, r1
   3067c:	str	r0, [fp, #-16]
   30680:	ldr	r0, [sp, #20]
   30684:	add	r0, r0, r1
   30688:	str	r0, [sp, #20]
   3068c:	b	30708 <__assert_fail@plt+0x1f274>
   30690:	ldr	r0, [fp, #-8]
   30694:	ldr	r0, [r0, #8]
   30698:	ldr	r1, [sp, #20]
   3069c:	ldr	r0, [r0, r1, lsl #2]
   306a0:	ldr	r1, [fp, #-12]
   306a4:	ldr	r1, [r1, #8]
   306a8:	ldr	r2, [fp, #-16]
   306ac:	add	r1, r1, r2, lsl #2
   306b0:	ldr	r1, [r1]
   306b4:	cmp	r0, r1
   306b8:	bge	306f4 <__assert_fail@plt+0x1f260>
   306bc:	ldr	r0, [fp, #-12]
   306c0:	ldr	r0, [r0, #8]
   306c4:	ldr	r1, [fp, #-16]
   306c8:	sub	r2, r1, #1
   306cc:	str	r2, [fp, #-16]
   306d0:	ldr	r0, [r0, r1, lsl #2]
   306d4:	ldr	r1, [fp, #-8]
   306d8:	ldr	r1, [r1, #8]
   306dc:	ldr	r2, [sp, #16]
   306e0:	sub	r2, r2, #1
   306e4:	str	r2, [sp, #16]
   306e8:	add	r1, r1, r2, lsl #2
   306ec:	str	r0, [r1]
   306f0:	b	30704 <__assert_fail@plt+0x1f270>
   306f4:	ldr	r0, [sp, #20]
   306f8:	mvn	r1, #0
   306fc:	add	r0, r0, r1
   30700:	str	r0, [sp, #20]
   30704:	b	30708 <__assert_fail@plt+0x1f274>
   30708:	b	30610 <__assert_fail@plt+0x1f17c>
   3070c:	ldr	r0, [fp, #-16]
   30710:	cmp	r0, #0
   30714:	blt	30754 <__assert_fail@plt+0x1f2c0>
   30718:	ldr	r0, [fp, #-16]
   3071c:	add	r0, r0, #1
   30720:	ldr	r1, [sp, #16]
   30724:	sub	r0, r1, r0
   30728:	str	r0, [sp, #16]
   3072c:	ldr	r0, [fp, #-8]
   30730:	ldr	r0, [r0, #8]
   30734:	ldr	r1, [sp, #16]
   30738:	add	r0, r0, r1, lsl #2
   3073c:	ldr	r1, [fp, #-12]
   30740:	ldr	r1, [r1, #8]
   30744:	ldr	r2, [fp, #-16]
   30748:	add	r2, r2, #1
   3074c:	lsl	r2, r2, #2
   30750:	bl	11248 <memcpy@plt>
   30754:	ldr	r0, [fp, #-8]
   30758:	ldr	r0, [r0, #4]
   3075c:	sub	r0, r0, #1
   30760:	str	r0, [sp, #20]
   30764:	ldr	r0, [fp, #-8]
   30768:	ldr	r0, [r0, #4]
   3076c:	ldr	r1, [fp, #-12]
   30770:	ldr	r1, [r1, #4]
   30774:	lsl	r1, r1, #1
   30778:	add	r0, r0, r1
   3077c:	sub	r0, r0, #1
   30780:	str	r0, [fp, #-16]
   30784:	ldr	r0, [fp, #-16]
   30788:	ldr	r1, [sp, #16]
   3078c:	sub	r0, r0, r1
   30790:	add	r0, r0, #1
   30794:	str	r0, [sp, #12]
   30798:	ldr	r0, [sp, #12]
   3079c:	cmp	r0, #0
   307a0:	bne	307b0 <__assert_fail@plt+0x1f31c>
   307a4:	movw	r0, #0
   307a8:	str	r0, [fp, #-4]
   307ac:	b	308a0 <__assert_fail@plt+0x1f40c>
   307b0:	ldr	r0, [sp, #12]
   307b4:	ldr	r1, [fp, #-8]
   307b8:	ldr	r2, [r1, #4]
   307bc:	add	r0, r2, r0
   307c0:	str	r0, [r1, #4]
   307c4:	ldr	r0, [fp, #-8]
   307c8:	ldr	r0, [r0, #8]
   307cc:	ldr	r1, [fp, #-16]
   307d0:	ldr	r1, [r0, r1, lsl #2]
   307d4:	ldr	r2, [sp, #20]
   307d8:	add	r0, r0, r2, lsl #2
   307dc:	ldr	r0, [r0]
   307e0:	cmp	r1, r0
   307e4:	ble	30838 <__assert_fail@plt+0x1f3a4>
   307e8:	ldr	r0, [fp, #-8]
   307ec:	ldr	r0, [r0, #8]
   307f0:	ldr	r1, [fp, #-16]
   307f4:	sub	r2, r1, #1
   307f8:	str	r2, [fp, #-16]
   307fc:	ldr	r0, [r0, r1, lsl #2]
   30800:	ldr	r1, [fp, #-8]
   30804:	ldr	r1, [r1, #8]
   30808:	ldr	r2, [sp, #20]
   3080c:	ldr	r3, [sp, #12]
   30810:	sub	ip, r3, #1
   30814:	str	ip, [sp, #12]
   30818:	add	r2, r2, r3
   3081c:	add	r1, r1, r2, lsl #2
   30820:	str	r0, [r1]
   30824:	ldr	r0, [sp, #12]
   30828:	cmp	r0, #0
   3082c:	bne	30834 <__assert_fail@plt+0x1f3a0>
   30830:	b	30898 <__assert_fail@plt+0x1f404>
   30834:	b	30894 <__assert_fail@plt+0x1f400>
   30838:	ldr	r0, [fp, #-8]
   3083c:	ldr	r0, [r0, #8]
   30840:	ldr	r1, [sp, #20]
   30844:	ldr	r2, [r0, r1, lsl #2]
   30848:	ldr	r3, [sp, #12]
   3084c:	add	r1, r1, r3
   30850:	add	r0, r0, r1, lsl #2
   30854:	str	r2, [r0]
   30858:	ldr	r0, [sp, #20]
   3085c:	mvn	r1, #0
   30860:	add	r0, r0, r1
   30864:	str	r0, [sp, #20]
   30868:	cmp	r0, #0
   3086c:	bge	30890 <__assert_fail@plt+0x1f3fc>
   30870:	ldr	r0, [fp, #-8]
   30874:	ldr	r0, [r0, #8]
   30878:	ldr	r1, [sp, #16]
   3087c:	add	r1, r0, r1, lsl #2
   30880:	ldr	r2, [sp, #12]
   30884:	lsl	r2, r2, #2
   30888:	bl	11248 <memcpy@plt>
   3088c:	b	30898 <__assert_fail@plt+0x1f404>
   30890:	b	30894 <__assert_fail@plt+0x1f400>
   30894:	b	307c4 <__assert_fail@plt+0x1f330>
   30898:	movw	r0, #0
   3089c:	str	r0, [fp, #-4]
   308a0:	ldr	r0, [fp, #-4]
   308a4:	mov	sp, fp
   308a8:	pop	{fp, pc}
   308ac:	push	{fp, lr}
   308b0:	mov	fp, sp
   308b4:	sub	sp, sp, #24
   308b8:	str	r0, [fp, #-4]
   308bc:	str	r1, [fp, #-8]
   308c0:	str	r2, [sp, #12]
   308c4:	ldr	r0, [fp, #-4]
   308c8:	ldr	r1, [r0]
   308cc:	ldr	r2, [fp, #-8]
   308d0:	ldr	r2, [r1, r2, lsl #3]!
   308d4:	ldr	r1, [r1, #4]
   308d8:	str	r1, [sp, #4]
   308dc:	mov	r1, r2
   308e0:	ldr	r2, [sp, #4]
   308e4:	bl	2f6ac <__assert_fail@plt+0x1e218>
   308e8:	str	r0, [sp, #8]
   308ec:	ldr	r0, [sp, #8]
   308f0:	cmn	r0, #1
   308f4:	beq	30984 <__assert_fail@plt+0x1f4f0>
   308f8:	ldr	r0, [sp, #12]
   308fc:	ldr	r1, [fp, #-4]
   30900:	ldr	r1, [r1]
   30904:	ldr	r2, [sp, #8]
   30908:	add	r1, r1, r2, lsl #3
   3090c:	ldr	r2, [r1, #4]
   30910:	bfc	r0, #10, #22
   30914:	bfc	r2, #8, #10
   30918:	orr	r0, r2, r0, lsl #8
   3091c:	str	r0, [r1, #4]
   30920:	ldr	r0, [fp, #-4]
   30924:	ldr	r0, [r0]
   30928:	ldr	r1, [fp, #-8]
   3092c:	add	r1, r0, r1, lsl #3
   30930:	ldr	r1, [r1, #4]
   30934:	ldr	r2, [sp, #8]
   30938:	add	r0, r0, r2, lsl #3
   3093c:	ldr	r2, [r0, #4]
   30940:	orr	r1, r2, r1
   30944:	lsr	r1, r1, #8
   30948:	bfi	r2, r1, #8, #10
   3094c:	str	r2, [r0, #4]
   30950:	ldr	r0, [fp, #-4]
   30954:	ldr	r0, [r0]
   30958:	ldr	r1, [sp, #8]
   3095c:	add	r0, r0, r1, lsl #3
   30960:	ldr	r1, [r0, #4]
   30964:	orr	r1, r1, #262144	; 0x40000
   30968:	str	r1, [r0, #4]
   3096c:	ldr	r0, [fp, #-8]
   30970:	ldr	r1, [fp, #-4]
   30974:	ldr	r1, [r1, #16]
   30978:	ldr	r2, [sp, #8]
   3097c:	add	r1, r1, r2, lsl #2
   30980:	str	r0, [r1]
   30984:	ldr	r0, [sp, #8]
   30988:	mov	sp, fp
   3098c:	pop	{fp, pc}
   30990:	push	{fp, lr}
   30994:	mov	fp, sp
   30998:	sub	sp, sp, #24
   3099c:	str	r0, [fp, #-8]
   309a0:	str	r1, [sp, #12]
   309a4:	ldr	r0, [fp, #-8]
   309a8:	ldr	r0, [r0]
   309ac:	cmp	r0, #0
   309b0:	bne	309d8 <__assert_fail@plt+0x1f544>
   309b4:	ldr	r0, [fp, #-8]
   309b8:	ldr	r1, [sp, #12]
   309bc:	bl	2fac4 <__assert_fail@plt+0x1e630>
   309c0:	cmp	r0, #0
   309c4:	movw	r0, #0
   309c8:	moveq	r0, #1
   309cc:	and	r0, r0, #1
   309d0:	strb	r0, [fp, #-1]
   309d4:	b	30bb8 <__assert_fail@plt+0x1f724>
   309d8:	ldr	r0, [fp, #-8]
   309dc:	ldr	r0, [r0, #4]
   309e0:	cmp	r0, #0
   309e4:	bne	30a30 <__assert_fail@plt+0x1f59c>
   309e8:	ldr	r0, [fp, #-8]
   309ec:	ldr	r0, [r0, #8]
   309f0:	movw	r1, #0
   309f4:	cmp	r0, r1
   309f8:	beq	30a00 <__assert_fail@plt+0x1f56c>
   309fc:	b	30a00 <__assert_fail@plt+0x1f56c>
   30a00:	ldr	r0, [sp, #12]
   30a04:	ldr	r1, [fp, #-8]
   30a08:	ldr	r1, [r1, #8]
   30a0c:	str	r0, [r1]
   30a10:	ldr	r0, [fp, #-8]
   30a14:	ldr	r1, [r0, #4]
   30a18:	add	r1, r1, #1
   30a1c:	str	r1, [r0, #4]
   30a20:	movw	r0, #1
   30a24:	and	r0, r0, #1
   30a28:	strb	r0, [fp, #-1]
   30a2c:	b	30bb8 <__assert_fail@plt+0x1f724>
   30a30:	ldr	r0, [fp, #-8]
   30a34:	ldr	r0, [r0]
   30a38:	ldr	r1, [fp, #-8]
   30a3c:	ldr	r1, [r1, #4]
   30a40:	cmp	r0, r1
   30a44:	bne	30a9c <__assert_fail@plt+0x1f608>
   30a48:	ldr	r0, [fp, #-8]
   30a4c:	ldr	r1, [r0]
   30a50:	lsl	r1, r1, #1
   30a54:	str	r1, [r0]
   30a58:	ldr	r0, [fp, #-8]
   30a5c:	ldr	r1, [r0]
   30a60:	ldr	r0, [r0, #8]
   30a64:	lsl	r1, r1, #2
   30a68:	bl	3fc48 <__assert_fail@plt+0x2e7b4>
   30a6c:	str	r0, [sp, #4]
   30a70:	ldr	r0, [sp, #4]
   30a74:	movw	r1, #0
   30a78:	cmp	r0, r1
   30a7c:	bne	30a90 <__assert_fail@plt+0x1f5fc>
   30a80:	movw	r0, #0
   30a84:	and	r0, r0, #1
   30a88:	strb	r0, [fp, #-1]
   30a8c:	b	30bb8 <__assert_fail@plt+0x1f724>
   30a90:	ldr	r0, [sp, #4]
   30a94:	ldr	r1, [fp, #-8]
   30a98:	str	r0, [r1, #8]
   30a9c:	ldr	r0, [sp, #12]
   30aa0:	ldr	r1, [fp, #-8]
   30aa4:	ldr	r1, [r1, #8]
   30aa8:	ldr	r1, [r1]
   30aac:	cmp	r0, r1
   30ab0:	bge	30afc <__assert_fail@plt+0x1f668>
   30ab4:	ldr	r0, [fp, #-8]
   30ab8:	ldr	r0, [r0, #4]
   30abc:	str	r0, [sp, #8]
   30ac0:	ldr	r0, [sp, #8]
   30ac4:	cmp	r0, #0
   30ac8:	ble	30af8 <__assert_fail@plt+0x1f664>
   30acc:	ldr	r0, [fp, #-8]
   30ad0:	ldr	r0, [r0, #8]
   30ad4:	ldr	r1, [sp, #8]
   30ad8:	add	r0, r0, r1, lsl #2
   30adc:	ldr	r1, [r0, #-4]
   30ae0:	str	r1, [r0]
   30ae4:	ldr	r0, [sp, #8]
   30ae8:	mvn	r1, #0
   30aec:	add	r0, r0, r1
   30af0:	str	r0, [sp, #8]
   30af4:	b	30ac0 <__assert_fail@plt+0x1f62c>
   30af8:	b	30b84 <__assert_fail@plt+0x1f6f0>
   30afc:	ldr	r0, [fp, #-8]
   30b00:	ldr	r0, [r0, #4]
   30b04:	str	r0, [sp, #8]
   30b08:	ldr	r0, [fp, #-8]
   30b0c:	ldr	r0, [r0, #8]
   30b10:	ldr	r1, [sp, #8]
   30b14:	sub	r1, r1, #1
   30b18:	add	r0, r0, r1, lsl #2
   30b1c:	ldr	r0, [r0]
   30b20:	ldr	r1, [sp, #12]
   30b24:	cmp	r0, r1
   30b28:	ble	30b58 <__assert_fail@plt+0x1f6c4>
   30b2c:	ldr	r0, [fp, #-8]
   30b30:	ldr	r0, [r0, #8]
   30b34:	ldr	r1, [sp, #8]
   30b38:	add	r0, r0, r1, lsl #2
   30b3c:	ldr	r1, [r0, #-4]
   30b40:	str	r1, [r0]
   30b44:	ldr	r0, [sp, #8]
   30b48:	mvn	r1, #0
   30b4c:	add	r0, r0, r1
   30b50:	str	r0, [sp, #8]
   30b54:	b	30b08 <__assert_fail@plt+0x1f674>
   30b58:	ldr	r0, [fp, #-8]
   30b5c:	ldr	r0, [r0, #8]
   30b60:	ldr	r1, [sp, #8]
   30b64:	sub	r1, r1, #1
   30b68:	add	r0, r0, r1, lsl #2
   30b6c:	ldr	r0, [r0]
   30b70:	ldr	r1, [sp, #12]
   30b74:	cmp	r0, r1
   30b78:	bge	30b80 <__assert_fail@plt+0x1f6ec>
   30b7c:	b	30b80 <__assert_fail@plt+0x1f6ec>
   30b80:	b	30b84 <__assert_fail@plt+0x1f6f0>
   30b84:	ldr	r0, [sp, #12]
   30b88:	ldr	r1, [fp, #-8]
   30b8c:	ldr	r1, [r1, #8]
   30b90:	ldr	r2, [sp, #8]
   30b94:	add	r1, r1, r2, lsl #2
   30b98:	str	r0, [r1]
   30b9c:	ldr	r0, [fp, #-8]
   30ba0:	ldr	r1, [r0, #4]
   30ba4:	add	r1, r1, #1
   30ba8:	str	r1, [r0, #4]
   30bac:	movw	r0, #1
   30bb0:	and	r0, r0, #1
   30bb4:	strb	r0, [fp, #-1]
   30bb8:	ldrb	r0, [fp, #-1]
   30bbc:	and	r0, r0, #1
   30bc0:	mov	sp, fp
   30bc4:	pop	{fp, pc}
   30bc8:	sub	sp, sp, #24
   30bcc:	str	r0, [sp, #16]
   30bd0:	str	r1, [sp, #12]
   30bd4:	str	r2, [sp, #8]
   30bd8:	ldr	r0, [sp, #16]
   30bdc:	ldr	r0, [r0, #8]
   30be0:	sub	r0, r0, #1
   30be4:	str	r0, [sp, #4]
   30be8:	ldr	r0, [sp, #16]
   30bec:	ldr	r0, [r0]
   30bf0:	ldr	r1, [sp, #4]
   30bf4:	add	r0, r0, r1, lsl #3
   30bf8:	ldr	r0, [r0, #4]
   30bfc:	lsr	r0, r0, #18
   30c00:	and	r0, r0, #1
   30c04:	cmp	r0, #0
   30c08:	movw	r0, #0
   30c0c:	str	r0, [sp]
   30c10:	beq	30c28 <__assert_fail@plt+0x1f794>
   30c14:	ldr	r0, [sp, #4]
   30c18:	cmp	r0, #0
   30c1c:	movw	r0, #0
   30c20:	movgt	r0, #1
   30c24:	str	r0, [sp]
   30c28:	ldr	r0, [sp]
   30c2c:	tst	r0, #1
   30c30:	beq	30ca4 <__assert_fail@plt+0x1f810>
   30c34:	ldr	r0, [sp, #12]
   30c38:	ldr	r1, [sp, #16]
   30c3c:	ldr	r1, [r1, #16]
   30c40:	ldr	r2, [sp, #4]
   30c44:	add	r1, r1, r2, lsl #2
   30c48:	ldr	r1, [r1]
   30c4c:	cmp	r0, r1
   30c50:	bne	30c8c <__assert_fail@plt+0x1f7f8>
   30c54:	ldr	r0, [sp, #8]
   30c58:	ldr	r1, [sp, #16]
   30c5c:	ldr	r1, [r1]
   30c60:	ldr	r2, [sp, #4]
   30c64:	add	r1, r1, r2, lsl #3
   30c68:	ldr	r1, [r1, #4]
   30c6c:	lsr	r1, r1, #8
   30c70:	movw	r2, #1023	; 0x3ff
   30c74:	and	r1, r1, r2
   30c78:	cmp	r0, r1
   30c7c:	bne	30c8c <__assert_fail@plt+0x1f7f8>
   30c80:	ldr	r0, [sp, #4]
   30c84:	str	r0, [sp, #20]
   30c88:	b	30cac <__assert_fail@plt+0x1f818>
   30c8c:	b	30c90 <__assert_fail@plt+0x1f7fc>
   30c90:	ldr	r0, [sp, #4]
   30c94:	mvn	r1, #0
   30c98:	add	r0, r0, r1
   30c9c:	str	r0, [sp, #4]
   30ca0:	b	30be8 <__assert_fail@plt+0x1f754>
   30ca4:	mvn	r0, #0
   30ca8:	str	r0, [sp, #20]
   30cac:	ldr	r0, [sp, #20]
   30cb0:	add	sp, sp, #24
   30cb4:	bx	lr
   30cb8:	push	{fp, lr}
   30cbc:	mov	fp, sp
   30cc0:	sub	sp, sp, #16
   30cc4:	str	r0, [sp, #8]
   30cc8:	str	r1, [sp, #4]
   30ccc:	ldr	r0, [sp, #8]
   30cd0:	ldr	r0, [r0]
   30cd4:	ldr	r1, [sp, #8]
   30cd8:	ldr	r1, [r1, #4]
   30cdc:	cmp	r0, r1
   30ce0:	bne	30d3c <__assert_fail@plt+0x1f8a8>
   30ce4:	ldr	r0, [sp, #8]
   30ce8:	ldr	r1, [r0]
   30cec:	mov	r2, #2
   30cf0:	add	r1, r2, r1, lsl #1
   30cf4:	str	r1, [r0]
   30cf8:	ldr	r0, [sp, #8]
   30cfc:	ldr	r1, [r0]
   30d00:	ldr	r0, [r0, #8]
   30d04:	lsl	r1, r1, #2
   30d08:	bl	3fc48 <__assert_fail@plt+0x2e7b4>
   30d0c:	str	r0, [sp]
   30d10:	ldr	r0, [sp]
   30d14:	movw	r1, #0
   30d18:	cmp	r0, r1
   30d1c:	bne	30d30 <__assert_fail@plt+0x1f89c>
   30d20:	movw	r0, #0
   30d24:	and	r0, r0, #1
   30d28:	strb	r0, [fp, #-1]
   30d2c:	b	30d68 <__assert_fail@plt+0x1f8d4>
   30d30:	ldr	r0, [sp]
   30d34:	ldr	r1, [sp, #8]
   30d38:	str	r0, [r1, #8]
   30d3c:	ldr	r0, [sp, #4]
   30d40:	ldr	r1, [sp, #8]
   30d44:	ldr	r2, [r1, #4]
   30d48:	ldr	r3, [r1, #8]
   30d4c:	add	ip, r2, #1
   30d50:	str	ip, [r1, #4]
   30d54:	add	r1, r3, r2, lsl #2
   30d58:	str	r0, [r1]
   30d5c:	movw	r0, #1
   30d60:	and	r0, r0, #1
   30d64:	strb	r0, [fp, #-1]
   30d68:	ldrb	r0, [fp, #-1]
   30d6c:	and	r0, r0, #1
   30d70:	mov	sp, fp
   30d74:	pop	{fp, pc}
   30d78:	push	{fp, lr}
   30d7c:	mov	fp, sp
   30d80:	sub	sp, sp, #16
   30d84:	str	r0, [sp, #8]
   30d88:	str	r1, [sp, #4]
   30d8c:	ldr	r0, [sp, #4]
   30d90:	ldr	r0, [r0, #4]
   30d94:	ldr	r1, [sp, #8]
   30d98:	str	r0, [r1, #4]
   30d9c:	ldr	r0, [sp, #4]
   30da0:	ldr	r0, [r0, #4]
   30da4:	cmp	r0, #0
   30da8:	ble	30e24 <__assert_fail@plt+0x1f990>
   30dac:	ldr	r0, [sp, #8]
   30db0:	ldr	r1, [r0, #4]
   30db4:	str	r1, [r0]
   30db8:	ldr	r0, [sp, #8]
   30dbc:	ldr	r0, [r0]
   30dc0:	lsl	r0, r0, #2
   30dc4:	bl	3fbd8 <__assert_fail@plt+0x2e744>
   30dc8:	ldr	r1, [sp, #8]
   30dcc:	str	r0, [r1, #8]
   30dd0:	ldr	r0, [sp, #8]
   30dd4:	ldr	r0, [r0, #8]
   30dd8:	movw	r1, #0
   30ddc:	cmp	r0, r1
   30de0:	bne	30e04 <__assert_fail@plt+0x1f970>
   30de4:	ldr	r0, [sp, #8]
   30de8:	movw	r1, #0
   30dec:	str	r1, [r0, #4]
   30df0:	ldr	r0, [sp, #8]
   30df4:	str	r1, [r0]
   30df8:	movw	r0, #12
   30dfc:	str	r0, [fp, #-4]
   30e00:	b	30e40 <__assert_fail@plt+0x1f9ac>
   30e04:	ldr	r0, [sp, #8]
   30e08:	ldr	r0, [r0, #8]
   30e0c:	ldr	r1, [sp, #4]
   30e10:	ldr	r2, [r1, #4]
   30e14:	ldr	r1, [r1, #8]
   30e18:	lsl	r2, r2, #2
   30e1c:	bl	11248 <memcpy@plt>
   30e20:	b	30e38 <__assert_fail@plt+0x1f9a4>
   30e24:	ldr	r0, [sp, #8]
   30e28:	movw	r1, #0
   30e2c:	and	r1, r1, #255	; 0xff
   30e30:	movw	r2, #12
   30e34:	bl	113d4 <memset@plt>
   30e38:	movw	r0, #0
   30e3c:	str	r0, [fp, #-4]
   30e40:	ldr	r0, [fp, #-4]
   30e44:	mov	sp, fp
   30e48:	pop	{fp, pc}
   30e4c:	sub	sp, sp, #28
   30e50:	str	r0, [sp, #20]
   30e54:	str	r1, [sp, #16]
   30e58:	ldr	r0, [sp, #20]
   30e5c:	ldr	r0, [r0, #4]
   30e60:	cmp	r0, #0
   30e64:	bgt	30e74 <__assert_fail@plt+0x1f9e0>
   30e68:	movw	r0, #0
   30e6c:	str	r0, [sp, #24]
   30e70:	b	30f30 <__assert_fail@plt+0x1fa9c>
   30e74:	movw	r0, #0
   30e78:	str	r0, [sp, #12]
   30e7c:	ldr	r0, [sp, #20]
   30e80:	ldr	r0, [r0, #4]
   30e84:	sub	r0, r0, #1
   30e88:	str	r0, [sp, #8]
   30e8c:	ldr	r0, [sp, #12]
   30e90:	ldr	r1, [sp, #8]
   30e94:	cmp	r0, r1
   30e98:	bcs	30eec <__assert_fail@plt+0x1fa58>
   30e9c:	ldr	r0, [sp, #12]
   30ea0:	ldr	r1, [sp, #8]
   30ea4:	add	r0, r0, r1
   30ea8:	lsr	r0, r0, #1
   30eac:	str	r0, [sp, #4]
   30eb0:	ldr	r0, [sp, #20]
   30eb4:	ldr	r0, [r0, #8]
   30eb8:	ldr	r1, [sp, #4]
   30ebc:	add	r0, r0, r1, lsl #2
   30ec0:	ldr	r0, [r0]
   30ec4:	ldr	r1, [sp, #16]
   30ec8:	cmp	r0, r1
   30ecc:	bge	30ee0 <__assert_fail@plt+0x1fa4c>
   30ed0:	ldr	r0, [sp, #4]
   30ed4:	add	r0, r0, #1
   30ed8:	str	r0, [sp, #12]
   30edc:	b	30ee8 <__assert_fail@plt+0x1fa54>
   30ee0:	ldr	r0, [sp, #4]
   30ee4:	str	r0, [sp, #8]
   30ee8:	b	30e8c <__assert_fail@plt+0x1f9f8>
   30eec:	ldr	r0, [sp, #20]
   30ef0:	ldr	r0, [r0, #8]
   30ef4:	ldr	r1, [sp, #12]
   30ef8:	add	r0, r0, r1, lsl #2
   30efc:	ldr	r0, [r0]
   30f00:	ldr	r1, [sp, #16]
   30f04:	cmp	r0, r1
   30f08:	bne	30f1c <__assert_fail@plt+0x1fa88>
   30f0c:	ldr	r0, [sp, #12]
   30f10:	add	r0, r0, #1
   30f14:	str	r0, [sp]
   30f18:	b	30f28 <__assert_fail@plt+0x1fa94>
   30f1c:	movw	r0, #0
   30f20:	str	r0, [sp]
   30f24:	b	30f28 <__assert_fail@plt+0x1fa94>
   30f28:	ldr	r0, [sp]
   30f2c:	str	r0, [sp, #24]
   30f30:	ldr	r0, [sp, #24]
   30f34:	add	sp, sp, #28
   30f38:	bx	lr
   30f3c:	push	{fp, lr}
   30f40:	mov	fp, sp
   30f44:	sub	sp, sp, #40	; 0x28
   30f48:	str	r0, [fp, #-8]
   30f4c:	str	r1, [fp, #-12]
   30f50:	str	r2, [fp, #-16]
   30f54:	str	r3, [sp, #20]
   30f58:	ldr	r0, [fp, #-16]
   30f5c:	ldr	r0, [r0, #4]
   30f60:	cmp	r0, #0
   30f64:	bne	30f7c <__assert_fail@plt+0x1fae8>
   30f68:	ldr	r0, [fp, #-8]
   30f6c:	movw	r1, #0
   30f70:	str	r1, [r0]
   30f74:	str	r1, [fp, #-4]
   30f78:	b	3108c <__assert_fail@plt+0x1fbf8>
   30f7c:	ldr	r0, [fp, #-16]
   30f80:	ldr	r1, [sp, #20]
   30f84:	bl	31098 <__assert_fail@plt+0x1fc04>
   30f88:	str	r0, [sp, #16]
   30f8c:	ldr	r0, [fp, #-12]
   30f90:	ldr	r0, [r0, #32]
   30f94:	ldr	r1, [sp, #16]
   30f98:	ldr	lr, [fp, #-12]
   30f9c:	ldr	lr, [lr, #68]	; 0x44
   30fa0:	and	r1, r1, lr
   30fa4:	movw	lr, #12
   30fa8:	mul	r1, r1, lr
   30fac:	add	r0, r0, r1
   30fb0:	str	r0, [sp, #8]
   30fb4:	movw	r0, #0
   30fb8:	str	r0, [sp, #4]
   30fbc:	ldr	r0, [sp, #4]
   30fc0:	ldr	r1, [sp, #8]
   30fc4:	ldr	r1, [r1]
   30fc8:	cmp	r0, r1
   30fcc:	bge	31050 <__assert_fail@plt+0x1fbbc>
   30fd0:	ldr	r0, [sp, #8]
   30fd4:	ldr	r0, [r0, #8]
   30fd8:	ldr	r1, [sp, #4]
   30fdc:	add	r0, r0, r1, lsl #2
   30fe0:	ldr	r0, [r0]
   30fe4:	str	r0, [sp]
   30fe8:	ldr	r0, [sp]
   30fec:	ldr	r0, [r0]
   30ff0:	ldr	r1, [sp, #16]
   30ff4:	cmp	r0, r1
   30ff8:	bne	3103c <__assert_fail@plt+0x1fba8>
   30ffc:	ldr	r0, [sp]
   31000:	ldrb	r0, [r0, #52]	; 0x34
   31004:	and	r0, r0, #15
   31008:	and	r0, r0, #255	; 0xff
   3100c:	ldr	r1, [sp, #20]
   31010:	cmp	r0, r1
   31014:	bne	3103c <__assert_fail@plt+0x1fba8>
   31018:	ldr	r0, [sp]
   3101c:	ldr	r0, [r0, #40]	; 0x28
   31020:	ldr	r1, [fp, #-16]
   31024:	bl	31110 <__assert_fail@plt+0x1fc7c>
   31028:	tst	r0, #1
   3102c:	beq	3103c <__assert_fail@plt+0x1fba8>
   31030:	ldr	r0, [sp]
   31034:	str	r0, [fp, #-4]
   31038:	b	3108c <__assert_fail@plt+0x1fbf8>
   3103c:	b	31040 <__assert_fail@plt+0x1fbac>
   31040:	ldr	r0, [sp, #4]
   31044:	add	r0, r0, #1
   31048:	str	r0, [sp, #4]
   3104c:	b	30fbc <__assert_fail@plt+0x1fb28>
   31050:	ldr	r0, [fp, #-12]
   31054:	ldr	r1, [fp, #-16]
   31058:	ldr	r2, [sp, #20]
   3105c:	ldr	r3, [sp, #16]
   31060:	bl	311e0 <__assert_fail@plt+0x1fd4c>
   31064:	str	r0, [sp, #12]
   31068:	ldr	r0, [sp, #12]
   3106c:	movw	r1, #0
   31070:	cmp	r0, r1
   31074:	bne	31084 <__assert_fail@plt+0x1fbf0>
   31078:	ldr	r0, [fp, #-8]
   3107c:	movw	r1, #12
   31080:	str	r1, [r0]
   31084:	ldr	r0, [sp, #12]
   31088:	str	r0, [fp, #-4]
   3108c:	ldr	r0, [fp, #-4]
   31090:	mov	sp, fp
   31094:	pop	{fp, pc}
   31098:	sub	sp, sp, #16
   3109c:	str	r0, [sp, #12]
   310a0:	str	r1, [sp, #8]
   310a4:	ldr	r0, [sp, #12]
   310a8:	ldr	r0, [r0, #4]
   310ac:	ldr	r1, [sp, #8]
   310b0:	add	r0, r0, r1
   310b4:	str	r0, [sp, #4]
   310b8:	movw	r0, #0
   310bc:	str	r0, [sp]
   310c0:	ldr	r0, [sp]
   310c4:	ldr	r1, [sp, #12]
   310c8:	ldr	r1, [r1, #4]
   310cc:	cmp	r0, r1
   310d0:	bge	31104 <__assert_fail@plt+0x1fc70>
   310d4:	ldr	r0, [sp, #12]
   310d8:	ldr	r0, [r0, #8]
   310dc:	ldr	r1, [sp]
   310e0:	add	r0, r0, r1, lsl #2
   310e4:	ldr	r0, [r0]
   310e8:	ldr	r1, [sp, #4]
   310ec:	add	r0, r1, r0
   310f0:	str	r0, [sp, #4]
   310f4:	ldr	r0, [sp]
   310f8:	add	r0, r0, #1
   310fc:	str	r0, [sp]
   31100:	b	310c0 <__assert_fail@plt+0x1fc2c>
   31104:	ldr	r0, [sp, #4]
   31108:	add	sp, sp, #16
   3110c:	bx	lr
   31110:	sub	sp, sp, #16
   31114:	str	r0, [sp, #8]
   31118:	str	r1, [sp, #4]
   3111c:	ldr	r0, [sp, #8]
   31120:	movw	r1, #0
   31124:	cmp	r0, r1
   31128:	beq	31154 <__assert_fail@plt+0x1fcc0>
   3112c:	ldr	r0, [sp, #4]
   31130:	movw	r1, #0
   31134:	cmp	r0, r1
   31138:	beq	31154 <__assert_fail@plt+0x1fcc0>
   3113c:	ldr	r0, [sp, #8]
   31140:	ldr	r0, [r0, #4]
   31144:	ldr	r1, [sp, #4]
   31148:	ldr	r1, [r1, #4]
   3114c:	cmp	r0, r1
   31150:	beq	31164 <__assert_fail@plt+0x1fcd0>
   31154:	movw	r0, #0
   31158:	and	r0, r0, #1
   3115c:	strb	r0, [sp, #15]
   31160:	b	311d0 <__assert_fail@plt+0x1fd3c>
   31164:	ldr	r0, [sp, #8]
   31168:	ldr	r0, [r0, #4]
   3116c:	str	r0, [sp]
   31170:	ldr	r0, [sp]
   31174:	mvn	r1, #0
   31178:	add	r0, r0, r1
   3117c:	str	r0, [sp]
   31180:	cmp	r0, #0
   31184:	blt	311c4 <__assert_fail@plt+0x1fd30>
   31188:	ldr	r0, [sp, #8]
   3118c:	ldr	r0, [r0, #8]
   31190:	ldr	r1, [sp]
   31194:	ldr	r0, [r0, r1, lsl #2]
   31198:	ldr	r2, [sp, #4]
   3119c:	ldr	r2, [r2, #8]
   311a0:	add	r1, r2, r1, lsl #2
   311a4:	ldr	r1, [r1]
   311a8:	cmp	r0, r1
   311ac:	beq	311c0 <__assert_fail@plt+0x1fd2c>
   311b0:	movw	r0, #0
   311b4:	and	r0, r0, #1
   311b8:	strb	r0, [sp, #15]
   311bc:	b	311d0 <__assert_fail@plt+0x1fd3c>
   311c0:	b	31170 <__assert_fail@plt+0x1fcdc>
   311c4:	movw	r0, #1
   311c8:	and	r0, r0, #1
   311cc:	strb	r0, [sp, #15]
   311d0:	ldrb	r0, [sp, #15]
   311d4:	and	r0, r0, #1
   311d8:	add	sp, sp, #16
   311dc:	bx	lr
   311e0:	push	{fp, lr}
   311e4:	mov	fp, sp
   311e8:	sub	sp, sp, #56	; 0x38
   311ec:	str	r0, [fp, #-8]
   311f0:	str	r1, [fp, #-12]
   311f4:	str	r2, [fp, #-16]
   311f8:	str	r3, [fp, #-20]	; 0xffffffec
   311fc:	movw	r0, #0
   31200:	str	r0, [sp, #28]
   31204:	movw	r0, #56	; 0x38
   31208:	movw	r1, #1
   3120c:	bl	3fb3c <__assert_fail@plt+0x2e6a8>
   31210:	str	r0, [sp, #20]
   31214:	ldr	r0, [sp, #20]
   31218:	movw	r1, #0
   3121c:	cmp	r0, r1
   31220:	bne	31230 <__assert_fail@plt+0x1fd9c>
   31224:	movw	r0, #0
   31228:	str	r0, [fp, #-4]
   3122c:	b	3152c <__assert_fail@plt+0x20098>
   31230:	ldr	r0, [sp, #20]
   31234:	add	r0, r0, #4
   31238:	ldr	r1, [fp, #-12]
   3123c:	bl	30d78 <__assert_fail@plt+0x1f8e4>
   31240:	str	r0, [sp, #24]
   31244:	ldr	r0, [sp, #24]
   31248:	cmp	r0, #0
   3124c:	beq	31264 <__assert_fail@plt+0x1fdd0>
   31250:	ldr	r0, [sp, #20]
   31254:	bl	138a4 <__assert_fail@plt+0x2410>
   31258:	movw	r0, #0
   3125c:	str	r0, [fp, #-4]
   31260:	b	3152c <__assert_fail@plt+0x20098>
   31264:	ldr	r0, [fp, #-16]
   31268:	ldr	r1, [sp, #20]
   3126c:	ldrb	r2, [r1, #52]	; 0x34
   31270:	and	r0, r0, #15
   31274:	bic	r2, r2, #15
   31278:	orr	r0, r2, r0
   3127c:	strb	r0, [r1, #52]	; 0x34
   31280:	ldr	r0, [sp, #20]
   31284:	add	r0, r0, #4
   31288:	ldr	r1, [sp, #20]
   3128c:	str	r0, [r1, #40]	; 0x28
   31290:	movw	r0, #0
   31294:	str	r0, [fp, #-24]	; 0xffffffe8
   31298:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3129c:	ldr	r1, [fp, #-12]
   312a0:	ldr	r1, [r1, #4]
   312a4:	cmp	r0, r1
   312a8:	bge	314f4 <__assert_fail@plt+0x20060>
   312ac:	ldr	r0, [fp, #-8]
   312b0:	ldr	r0, [r0]
   312b4:	ldr	r1, [fp, #-12]
   312b8:	ldr	r1, [r1, #8]
   312bc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   312c0:	ldr	r1, [r1, r2, lsl #2]
   312c4:	add	r0, r0, r1, lsl #3
   312c8:	str	r0, [sp, #16]
   312cc:	ldr	r0, [sp, #16]
   312d0:	ldr	r0, [r0, #4]
   312d4:	and	r0, r0, #255	; 0xff
   312d8:	str	r0, [sp, #12]
   312dc:	ldr	r0, [sp, #16]
   312e0:	ldr	r0, [r0, #4]
   312e4:	lsr	r0, r0, #8
   312e8:	movw	r1, #1023	; 0x3ff
   312ec:	and	r0, r0, r1
   312f0:	str	r0, [sp, #8]
   312f4:	ldr	r0, [sp, #12]
   312f8:	cmp	r0, #1
   312fc:	bne	31310 <__assert_fail@plt+0x1fe7c>
   31300:	ldr	r0, [sp, #8]
   31304:	cmp	r0, #0
   31308:	bne	31310 <__assert_fail@plt+0x1fe7c>
   3130c:	b	314e4 <__assert_fail@plt+0x20050>
   31310:	ldr	r0, [sp, #16]
   31314:	ldr	r0, [r0, #4]
   31318:	ldr	r1, [sp, #20]
   3131c:	ldrb	r2, [r1, #52]	; 0x34
   31320:	lsr	r3, r2, #5
   31324:	orr	r0, r3, r0, lsr #20
   31328:	and	r0, r0, #1
   3132c:	lsl	r0, r0, #5
   31330:	bic	r2, r2, #32
   31334:	orr	r0, r2, r0
   31338:	strb	r0, [r1, #52]	; 0x34
   3133c:	ldr	r0, [sp, #12]
   31340:	cmp	r0, #2
   31344:	bne	31364 <__assert_fail@plt+0x1fed0>
   31348:	ldr	r0, [sp, #20]
   3134c:	ldrb	r1, [r0, #52]	; 0x34
   31350:	bic	r1, r1, #16
   31354:	movw	r2, #16
   31358:	orr	r1, r1, r2
   3135c:	strb	r1, [r0, #52]	; 0x34
   31360:	b	3138c <__assert_fail@plt+0x1fef8>
   31364:	ldr	r0, [sp, #12]
   31368:	cmp	r0, #4
   3136c:	bne	31388 <__assert_fail@plt+0x1fef4>
   31370:	ldr	r0, [sp, #20]
   31374:	ldrb	r1, [r0, #52]	; 0x34
   31378:	bic	r1, r1, #64	; 0x40
   3137c:	movw	r2, #64	; 0x40
   31380:	orr	r1, r1, r2
   31384:	strb	r1, [r0, #52]	; 0x34
   31388:	b	3138c <__assert_fail@plt+0x1fef8>
   3138c:	ldr	r0, [sp, #8]
   31390:	cmp	r0, #0
   31394:	beq	314e0 <__assert_fail@plt+0x2004c>
   31398:	ldr	r0, [sp, #20]
   3139c:	ldr	r0, [r0, #40]	; 0x28
   313a0:	ldr	r1, [sp, #20]
   313a4:	add	r1, r1, #4
   313a8:	cmp	r0, r1
   313ac:	bne	31438 <__assert_fail@plt+0x1ffa4>
   313b0:	movw	r0, #12
   313b4:	bl	3fbd8 <__assert_fail@plt+0x2e744>
   313b8:	str	r0, [sp, #4]
   313bc:	ldr	r0, [sp, #4]
   313c0:	movw	lr, #0
   313c4:	cmp	r0, lr
   313c8:	bne	313e0 <__assert_fail@plt+0x1ff4c>
   313cc:	ldr	r0, [sp, #20]
   313d0:	bl	26798 <__assert_fail@plt+0x15304>
   313d4:	movw	r0, #0
   313d8:	str	r0, [fp, #-4]
   313dc:	b	3152c <__assert_fail@plt+0x20098>
   313e0:	ldr	r0, [sp, #4]
   313e4:	ldr	r1, [sp, #20]
   313e8:	str	r0, [r1, #40]	; 0x28
   313ec:	ldr	r0, [sp, #20]
   313f0:	ldr	r0, [r0, #40]	; 0x28
   313f4:	ldr	r1, [fp, #-12]
   313f8:	bl	30d78 <__assert_fail@plt+0x1f8e4>
   313fc:	cmp	r0, #0
   31400:	beq	31418 <__assert_fail@plt+0x1ff84>
   31404:	ldr	r0, [sp, #20]
   31408:	bl	26798 <__assert_fail@plt+0x15304>
   3140c:	movw	r0, #0
   31410:	str	r0, [fp, #-4]
   31414:	b	3152c <__assert_fail@plt+0x20098>
   31418:	mov	r0, #0
   3141c:	str	r0, [sp, #28]
   31420:	ldr	r0, [sp, #20]
   31424:	ldrb	r1, [r0, #52]	; 0x34
   31428:	and	r1, r1, #127	; 0x7f
   3142c:	movw	r2, #128	; 0x80
   31430:	orr	r1, r1, r2
   31434:	strb	r1, [r0, #52]	; 0x34
   31438:	ldr	r0, [sp, #8]
   3143c:	and	r0, r0, #1
   31440:	cmp	r0, #0
   31444:	beq	31458 <__assert_fail@plt+0x1ffc4>
   31448:	ldr	r0, [fp, #-16]
   3144c:	and	r0, r0, #1
   31450:	cmp	r0, #0
   31454:	beq	314b8 <__assert_fail@plt+0x20024>
   31458:	ldr	r0, [sp, #8]
   3145c:	and	r0, r0, #2
   31460:	cmp	r0, #0
   31464:	beq	31478 <__assert_fail@plt+0x1ffe4>
   31468:	ldr	r0, [fp, #-16]
   3146c:	and	r0, r0, #1
   31470:	cmp	r0, #0
   31474:	bne	314b8 <__assert_fail@plt+0x20024>
   31478:	ldr	r0, [sp, #8]
   3147c:	and	r0, r0, #16
   31480:	cmp	r0, #0
   31484:	beq	31498 <__assert_fail@plt+0x20004>
   31488:	ldr	r0, [fp, #-16]
   3148c:	and	r0, r0, #2
   31490:	cmp	r0, #0
   31494:	beq	314b8 <__assert_fail@plt+0x20024>
   31498:	ldr	r0, [sp, #8]
   3149c:	and	r0, r0, #64	; 0x40
   314a0:	cmp	r0, #0
   314a4:	beq	314dc <__assert_fail@plt+0x20048>
   314a8:	ldr	r0, [fp, #-16]
   314ac:	and	r0, r0, #4
   314b0:	cmp	r0, #0
   314b4:	bne	314dc <__assert_fail@plt+0x20048>
   314b8:	ldr	r0, [sp, #20]
   314bc:	add	r0, r0, #4
   314c0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   314c4:	ldr	r2, [sp, #28]
   314c8:	sub	r1, r1, r2
   314cc:	bl	31538 <__assert_fail@plt+0x200a4>
   314d0:	ldr	r0, [sp, #28]
   314d4:	add	r0, r0, #1
   314d8:	str	r0, [sp, #28]
   314dc:	b	314e0 <__assert_fail@plt+0x2004c>
   314e0:	b	314e4 <__assert_fail@plt+0x20050>
   314e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   314e8:	add	r0, r0, #1
   314ec:	str	r0, [fp, #-24]	; 0xffffffe8
   314f0:	b	31298 <__assert_fail@plt+0x1fe04>
   314f4:	ldr	r0, [fp, #-8]
   314f8:	ldr	r1, [sp, #20]
   314fc:	ldr	r2, [fp, #-20]	; 0xffffffec
   31500:	bl	315c0 <__assert_fail@plt+0x2012c>
   31504:	str	r0, [sp, #24]
   31508:	ldr	r0, [sp, #24]
   3150c:	cmp	r0, #0
   31510:	beq	31524 <__assert_fail@plt+0x20090>
   31514:	ldr	r0, [sp, #20]
   31518:	bl	26798 <__assert_fail@plt+0x15304>
   3151c:	movw	r0, #0
   31520:	str	r0, [sp, #20]
   31524:	ldr	r0, [sp, #20]
   31528:	str	r0, [fp, #-4]
   3152c:	ldr	r0, [fp, #-4]
   31530:	mov	sp, fp
   31534:	pop	{fp, pc}
   31538:	sub	sp, sp, #8
   3153c:	str	r0, [sp, #4]
   31540:	str	r1, [sp]
   31544:	ldr	r0, [sp]
   31548:	cmp	r0, #0
   3154c:	blt	31564 <__assert_fail@plt+0x200d0>
   31550:	ldr	r0, [sp]
   31554:	ldr	r1, [sp, #4]
   31558:	ldr	r1, [r1, #4]
   3155c:	cmp	r0, r1
   31560:	blt	31568 <__assert_fail@plt+0x200d4>
   31564:	b	315b8 <__assert_fail@plt+0x20124>
   31568:	ldr	r0, [sp, #4]
   3156c:	ldr	r1, [r0, #4]
   31570:	mvn	r2, #0
   31574:	add	r1, r1, r2
   31578:	str	r1, [r0, #4]
   3157c:	ldr	r0, [sp]
   31580:	ldr	r1, [sp, #4]
   31584:	ldr	r1, [r1, #4]
   31588:	cmp	r0, r1
   3158c:	bge	315b8 <__assert_fail@plt+0x20124>
   31590:	ldr	r0, [sp, #4]
   31594:	ldr	r0, [r0, #8]
   31598:	ldr	r1, [sp]
   3159c:	add	r0, r0, r1, lsl #2
   315a0:	ldr	r1, [r0, #4]
   315a4:	str	r1, [r0]
   315a8:	ldr	r0, [sp]
   315ac:	add	r0, r0, #1
   315b0:	str	r0, [sp]
   315b4:	b	3157c <__assert_fail@plt+0x200e8>
   315b8:	add	sp, sp, #8
   315bc:	bx	lr
   315c0:	push	{fp, lr}
   315c4:	mov	fp, sp
   315c8:	sub	sp, sp, #40	; 0x28
   315cc:	str	r0, [fp, #-8]
   315d0:	str	r1, [fp, #-12]
   315d4:	str	r2, [fp, #-16]
   315d8:	ldr	r0, [fp, #-16]
   315dc:	ldr	r1, [fp, #-12]
   315e0:	str	r0, [r1]
   315e4:	ldr	r0, [fp, #-12]
   315e8:	add	r0, r0, #16
   315ec:	ldr	r1, [fp, #-12]
   315f0:	ldr	r1, [r1, #8]
   315f4:	bl	2ff28 <__assert_fail@plt+0x1ea94>
   315f8:	str	r0, [sp, #16]
   315fc:	ldr	r0, [sp, #16]
   31600:	cmp	r0, #0
   31604:	beq	31614 <__assert_fail@plt+0x20180>
   31608:	movw	r0, #12
   3160c:	str	r0, [fp, #-4]
   31610:	b	3176c <__assert_fail@plt+0x202d8>
   31614:	movw	r0, #0
   31618:	str	r0, [sp, #12]
   3161c:	ldr	r0, [sp, #12]
   31620:	ldr	r1, [fp, #-12]
   31624:	ldr	r1, [r1, #8]
   31628:	cmp	r0, r1
   3162c:	bge	316a4 <__assert_fail@plt+0x20210>
   31630:	ldr	r0, [fp, #-12]
   31634:	ldr	r0, [r0, #12]
   31638:	ldr	r1, [sp, #12]
   3163c:	ldr	r0, [r0, r1, lsl #2]
   31640:	str	r0, [sp, #8]
   31644:	ldr	r0, [fp, #-8]
   31648:	ldr	r0, [r0]
   3164c:	ldr	r1, [sp, #8]
   31650:	add	r0, r0, r1, lsl #3
   31654:	ldr	r0, [r0, #4]
   31658:	and	r0, r0, #255	; 0xff
   3165c:	and	r0, r0, #8
   31660:	cmp	r0, #0
   31664:	bne	31690 <__assert_fail@plt+0x201fc>
   31668:	ldr	r0, [fp, #-12]
   3166c:	add	r0, r0, #16
   31670:	ldr	r1, [sp, #8]
   31674:	bl	30cb8 <__assert_fail@plt+0x1f824>
   31678:	tst	r0, #1
   3167c:	bne	3168c <__assert_fail@plt+0x201f8>
   31680:	movw	r0, #12
   31684:	str	r0, [fp, #-4]
   31688:	b	3176c <__assert_fail@plt+0x202d8>
   3168c:	b	31690 <__assert_fail@plt+0x201fc>
   31690:	b	31694 <__assert_fail@plt+0x20200>
   31694:	ldr	r0, [sp, #12]
   31698:	add	r0, r0, #1
   3169c:	str	r0, [sp, #12]
   316a0:	b	3161c <__assert_fail@plt+0x20188>
   316a4:	ldr	r0, [fp, #-8]
   316a8:	ldr	r0, [r0, #32]
   316ac:	ldr	r1, [fp, #-16]
   316b0:	ldr	r2, [fp, #-8]
   316b4:	ldr	r2, [r2, #68]	; 0x44
   316b8:	and	r1, r1, r2
   316bc:	movw	r2, #12
   316c0:	mul	r1, r1, r2
   316c4:	add	r0, r0, r1
   316c8:	str	r0, [sp, #20]
   316cc:	ldr	r0, [sp, #20]
   316d0:	ldr	r0, [r0, #4]
   316d4:	ldr	r1, [sp, #20]
   316d8:	ldr	r1, [r1]
   316dc:	cmp	r0, r1
   316e0:	bgt	31744 <__assert_fail@plt+0x202b0>
   316e4:	ldr	r0, [sp, #20]
   316e8:	ldr	r0, [r0]
   316ec:	mov	r1, #2
   316f0:	add	r0, r1, r0, lsl #1
   316f4:	str	r0, [sp, #4]
   316f8:	ldr	r0, [sp, #20]
   316fc:	ldr	r0, [r0, #8]
   31700:	ldr	r1, [sp, #4]
   31704:	lsl	r1, r1, #2
   31708:	bl	3fc48 <__assert_fail@plt+0x2e7b4>
   3170c:	str	r0, [sp]
   31710:	ldr	r0, [sp]
   31714:	movw	r1, #0
   31718:	cmp	r0, r1
   3171c:	bne	3172c <__assert_fail@plt+0x20298>
   31720:	movw	r0, #12
   31724:	str	r0, [fp, #-4]
   31728:	b	3176c <__assert_fail@plt+0x202d8>
   3172c:	ldr	r0, [sp]
   31730:	ldr	r1, [sp, #20]
   31734:	str	r0, [r1, #8]
   31738:	ldr	r0, [sp, #4]
   3173c:	ldr	r1, [sp, #20]
   31740:	str	r0, [r1, #4]
   31744:	ldr	r0, [fp, #-12]
   31748:	ldr	r1, [sp, #20]
   3174c:	ldr	r2, [r1]
   31750:	ldr	r3, [r1, #8]
   31754:	add	ip, r2, #1
   31758:	str	ip, [r1]
   3175c:	add	r1, r3, r2, lsl #2
   31760:	str	r0, [r1]
   31764:	movw	r0, #0
   31768:	str	r0, [fp, #-4]
   3176c:	ldr	r0, [fp, #-4]
   31770:	mov	sp, fp
   31774:	pop	{fp, pc}
   31778:	push	{fp, lr}
   3177c:	mov	fp, sp
   31780:	sub	sp, sp, #40	; 0x28
   31784:	str	r0, [fp, #-8]
   31788:	str	r1, [fp, #-12]
   3178c:	str	r2, [fp, #-16]
   31790:	str	r3, [sp, #20]
   31794:	movw	r0, #1
   31798:	str	r0, [sp, #16]
   3179c:	ldr	r0, [fp, #-16]
   317a0:	add	r0, r0, #1
   317a4:	str	r0, [sp, #8]
   317a8:	ldr	r0, [sp, #20]
   317ac:	cmp	r0, #0
   317b0:	bne	31838 <__assert_fail@plt+0x203a4>
   317b4:	ldr	r0, [sp, #8]
   317b8:	lsl	r0, r0, #2
   317bc:	bl	3fbd8 <__assert_fail@plt+0x2e744>
   317c0:	ldr	lr, [fp, #-8]
   317c4:	str	r0, [lr, #4]
   317c8:	ldr	r0, [fp, #-8]
   317cc:	ldr	r0, [r0, #4]
   317d0:	movw	lr, #0
   317d4:	cmp	r0, lr
   317d8:	bne	317e8 <__assert_fail@plt+0x20354>
   317dc:	movw	r0, #0
   317e0:	str	r0, [fp, #-4]
   317e4:	b	319e0 <__assert_fail@plt+0x2054c>
   317e8:	ldr	r0, [sp, #8]
   317ec:	lsl	r0, r0, #2
   317f0:	bl	3fbd8 <__assert_fail@plt+0x2e744>
   317f4:	ldr	lr, [fp, #-8]
   317f8:	str	r0, [lr, #8]
   317fc:	ldr	r0, [fp, #-8]
   31800:	ldr	r0, [r0, #8]
   31804:	movw	lr, #0
   31808:	cmp	r0, lr
   3180c:	bne	31828 <__assert_fail@plt+0x20394>
   31810:	ldr	r0, [fp, #-8]
   31814:	ldr	r0, [r0, #4]
   31818:	bl	138a4 <__assert_fail@plt+0x2410>
   3181c:	movw	r0, #0
   31820:	str	r0, [fp, #-4]
   31824:	b	319e0 <__assert_fail@plt+0x2054c>
   31828:	ldr	r0, [sp, #8]
   3182c:	ldr	r1, [fp, #-8]
   31830:	str	r0, [r1]
   31834:	b	31924 <__assert_fail@plt+0x20490>
   31838:	ldr	r0, [sp, #20]
   3183c:	cmp	r0, #1
   31840:	bne	318f0 <__assert_fail@plt+0x2045c>
   31844:	ldr	r0, [sp, #8]
   31848:	ldr	r1, [fp, #-8]
   3184c:	ldr	r1, [r1]
   31850:	cmp	r0, r1
   31854:	bls	318ec <__assert_fail@plt+0x20458>
   31858:	ldr	r0, [fp, #-8]
   3185c:	ldr	r0, [r0, #4]
   31860:	ldr	r1, [sp, #8]
   31864:	lsl	r1, r1, #2
   31868:	bl	3fc48 <__assert_fail@plt+0x2e7b4>
   3186c:	str	r0, [sp, #4]
   31870:	ldr	r0, [sp, #4]
   31874:	movw	r1, #0
   31878:	cmp	r0, r1
   3187c:	bne	3188c <__assert_fail@plt+0x203f8>
   31880:	movw	r0, #0
   31884:	str	r0, [fp, #-4]
   31888:	b	319e0 <__assert_fail@plt+0x2054c>
   3188c:	ldr	r0, [fp, #-8]
   31890:	ldr	r0, [r0, #8]
   31894:	ldr	r1, [sp, #8]
   31898:	lsl	r1, r1, #2
   3189c:	bl	3fc48 <__assert_fail@plt+0x2e7b4>
   318a0:	str	r0, [sp]
   318a4:	ldr	r0, [sp]
   318a8:	movw	r1, #0
   318ac:	cmp	r0, r1
   318b0:	bne	318c8 <__assert_fail@plt+0x20434>
   318b4:	ldr	r0, [sp, #4]
   318b8:	bl	138a4 <__assert_fail@plt+0x2410>
   318bc:	movw	r0, #0
   318c0:	str	r0, [fp, #-4]
   318c4:	b	319e0 <__assert_fail@plt+0x2054c>
   318c8:	ldr	r0, [sp, #4]
   318cc:	ldr	r1, [fp, #-8]
   318d0:	str	r0, [r1, #4]
   318d4:	ldr	r0, [sp]
   318d8:	ldr	r1, [fp, #-8]
   318dc:	str	r0, [r1, #8]
   318e0:	ldr	r0, [sp, #8]
   318e4:	ldr	r1, [fp, #-8]
   318e8:	str	r0, [r1]
   318ec:	b	31920 <__assert_fail@plt+0x2048c>
   318f0:	ldr	r0, [sp, #20]
   318f4:	cmp	r0, #2
   318f8:	bne	31900 <__assert_fail@plt+0x2046c>
   318fc:	b	31900 <__assert_fail@plt+0x2046c>
   31900:	ldr	r0, [fp, #-16]
   31904:	ldr	r1, [fp, #-8]
   31908:	ldr	r1, [r1]
   3190c:	cmp	r0, r1
   31910:	bhi	31918 <__assert_fail@plt+0x20484>
   31914:	b	31918 <__assert_fail@plt+0x20484>
   31918:	movw	r0, #2
   3191c:	str	r0, [sp, #16]
   31920:	b	31924 <__assert_fail@plt+0x20490>
   31924:	movw	r0, #0
   31928:	str	r0, [sp, #12]
   3192c:	ldr	r0, [sp, #12]
   31930:	ldr	r1, [fp, #-16]
   31934:	cmp	r0, r1
   31938:	bge	31984 <__assert_fail@plt+0x204f0>
   3193c:	ldr	r0, [fp, #-12]
   31940:	ldr	r1, [sp, #12]
   31944:	ldr	r0, [r0, r1, lsl #3]
   31948:	ldr	r2, [fp, #-8]
   3194c:	ldr	r2, [r2, #4]
   31950:	str	r0, [r2, r1, lsl #2]
   31954:	ldr	r0, [fp, #-12]
   31958:	ldr	r1, [sp, #12]
   3195c:	add	r0, r0, r1, lsl #3
   31960:	ldr	r0, [r0, #4]
   31964:	ldr	r2, [fp, #-8]
   31968:	ldr	r2, [r2, #8]
   3196c:	add	r1, r2, r1, lsl #2
   31970:	str	r0, [r1]
   31974:	ldr	r0, [sp, #12]
   31978:	add	r0, r0, #1
   3197c:	str	r0, [sp, #12]
   31980:	b	3192c <__assert_fail@plt+0x20498>
   31984:	b	31988 <__assert_fail@plt+0x204f4>
   31988:	ldr	r0, [sp, #12]
   3198c:	ldr	r1, [fp, #-8]
   31990:	ldr	r1, [r1]
   31994:	cmp	r0, r1
   31998:	bcs	319d8 <__assert_fail@plt+0x20544>
   3199c:	ldr	r0, [fp, #-8]
   319a0:	ldr	r0, [r0, #8]
   319a4:	ldr	r1, [sp, #12]
   319a8:	mvn	r2, #0
   319ac:	str	r2, [r0, r1, lsl #2]
   319b0:	ldr	r0, [fp, #-8]
   319b4:	ldr	r0, [r0, #4]
   319b8:	ldr	r1, [sp, #12]
   319bc:	add	r0, r0, r1, lsl #2
   319c0:	mvn	r1, #0
   319c4:	str	r1, [r0]
   319c8:	ldr	r0, [sp, #12]
   319cc:	add	r0, r0, #1
   319d0:	str	r0, [sp, #12]
   319d4:	b	31988 <__assert_fail@plt+0x204f4>
   319d8:	ldr	r0, [sp, #16]
   319dc:	str	r0, [fp, #-4]
   319e0:	ldr	r0, [fp, #-4]
   319e4:	mov	sp, fp
   319e8:	pop	{fp, pc}
   319ec:	push	{r4, sl, fp, lr}
   319f0:	add	fp, sp, #8
   319f4:	sub	sp, sp, #64	; 0x40
   319f8:	ldr	ip, [fp, #16]
   319fc:	ldr	lr, [fp, #12]
   31a00:	ldr	r4, [fp, #8]
   31a04:	str	r0, [fp, #-16]
   31a08:	str	r1, [fp, #-20]	; 0xffffffec
   31a0c:	str	r2, [fp, #-24]	; 0xffffffe8
   31a10:	str	r3, [fp, #-28]	; 0xffffffe4
   31a14:	and	r0, lr, #1
   31a18:	strb	r0, [fp, #-29]	; 0xffffffe3
   31a1c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   31a20:	ldr	r1, [fp, #16]
   31a24:	ldr	r1, [r1, #92]	; 0x5c
   31a28:	cmp	r0, r1
   31a2c:	str	r4, [sp, #28]
   31a30:	str	ip, [sp, #24]
   31a34:	bge	31a44 <__assert_fail@plt+0x205b0>
   31a38:	ldr	r0, [fp, #16]
   31a3c:	ldr	r0, [r0, #92]	; 0x5c
   31a40:	str	r0, [fp, #-28]	; 0xffffffe4
   31a44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31a48:	add	r0, r0, #1
   31a4c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   31a50:	cmp	r0, r1
   31a54:	bge	31a68 <__assert_fail@plt+0x205d4>
   31a58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31a5c:	add	r0, r0, #1
   31a60:	str	r0, [sp, #20]
   31a64:	b	31a70 <__assert_fail@plt+0x205dc>
   31a68:	ldr	r0, [fp, #-28]	; 0xffffffe4
   31a6c:	str	r0, [sp, #20]
   31a70:	ldr	r0, [sp, #20]
   31a74:	str	r0, [sp, #32]
   31a78:	ldr	r0, [fp, #-20]	; 0xffffffec
   31a7c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   31a80:	ldr	r2, [fp, #-16]
   31a84:	ldr	r3, [fp, #8]
   31a88:	ldrb	ip, [fp, #-29]	; 0xffffffe3
   31a8c:	ldr	lr, [fp, #16]
   31a90:	and	ip, ip, #1
   31a94:	str	ip, [sp]
   31a98:	str	lr, [sp, #4]
   31a9c:	bl	27d40 <__assert_fail@plt+0x168ac>
   31aa0:	ldr	r0, [fp, #-16]
   31aa4:	ldr	r1, [sp, #32]
   31aa8:	bl	27e44 <__assert_fail@plt+0x169b0>
   31aac:	str	r0, [sp, #36]	; 0x24
   31ab0:	ldr	r0, [sp, #36]	; 0x24
   31ab4:	cmp	r0, #0
   31ab8:	beq	31ac8 <__assert_fail@plt+0x20634>
   31abc:	ldr	r0, [sp, #36]	; 0x24
   31ac0:	str	r0, [fp, #-12]
   31ac4:	b	31b7c <__assert_fail@plt+0x206e8>
   31ac8:	ldr	r0, [fp, #16]
   31acc:	add	r0, r0, #96	; 0x60
   31ad0:	ldr	r1, [fp, #-16]
   31ad4:	str	r0, [r1, #68]	; 0x44
   31ad8:	ldr	r0, [fp, #16]
   31adc:	ldrb	r0, [r0, #88]	; 0x58
   31ae0:	ubfx	r0, r0, #4, #1
   31ae4:	and	r0, r0, #255	; 0xff
   31ae8:	ldr	r1, [fp, #-16]
   31aec:	strb	r0, [r1, #78]	; 0x4e
   31af0:	ldr	r0, [fp, #-16]
   31af4:	ldrb	r0, [r0, #75]	; 0x4b
   31af8:	cmp	r0, #0
   31afc:	beq	31b10 <__assert_fail@plt+0x2067c>
   31b00:	ldr	r0, [fp, #-16]
   31b04:	ldr	r0, [r0, #4]
   31b08:	str	r0, [sp, #16]
   31b0c:	b	31b18 <__assert_fail@plt+0x20684>
   31b10:	ldr	r0, [fp, #-20]	; 0xffffffec
   31b14:	str	r0, [sp, #16]
   31b18:	ldr	r0, [sp, #16]
   31b1c:	ldr	r1, [fp, #-16]
   31b20:	str	r0, [r1, #4]
   31b24:	ldr	r0, [fp, #-16]
   31b28:	ldrb	r0, [r0, #75]	; 0x4b
   31b2c:	cmp	r0, #0
   31b30:	bne	31b44 <__assert_fail@plt+0x206b0>
   31b34:	ldr	r0, [fp, #16]
   31b38:	ldr	r0, [r0, #92]	; 0x5c
   31b3c:	cmp	r0, #1
   31b40:	ble	31b50 <__assert_fail@plt+0x206bc>
   31b44:	movw	r0, #0
   31b48:	str	r0, [sp, #12]
   31b4c:	b	31b58 <__assert_fail@plt+0x206c4>
   31b50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31b54:	str	r0, [sp, #12]
   31b58:	ldr	r0, [sp, #12]
   31b5c:	ldr	r1, [fp, #-16]
   31b60:	str	r0, [r1, #28]
   31b64:	ldr	r0, [fp, #-16]
   31b68:	ldr	r0, [r0, #28]
   31b6c:	ldr	r1, [fp, #-16]
   31b70:	str	r0, [r1, #32]
   31b74:	movw	r0, #0
   31b78:	str	r0, [fp, #-12]
   31b7c:	ldr	r0, [fp, #-12]
   31b80:	sub	sp, fp, #8
   31b84:	pop	{r4, sl, fp, pc}
   31b88:	push	{fp, lr}
   31b8c:	mov	fp, sp
   31b90:	sub	sp, sp, #32
   31b94:	str	r0, [fp, #-8]
   31b98:	str	r1, [fp, #-12]
   31b9c:	str	r2, [sp, #16]
   31ba0:	ldr	r0, [fp, #-12]
   31ba4:	ldr	r1, [fp, #-8]
   31ba8:	str	r0, [r1, #88]	; 0x58
   31bac:	ldr	r0, [fp, #-8]
   31bb0:	mvn	r1, #0
   31bb4:	str	r1, [r0, #92]	; 0x5c
   31bb8:	ldr	r0, [sp, #16]
   31bbc:	cmp	r0, #0
   31bc0:	ble	31c9c <__assert_fail@plt+0x20808>
   31bc4:	ldr	r0, [pc, #264]	; 31cd4 <__assert_fail@plt+0x20840>
   31bc8:	movw	r1, #24
   31bcc:	str	r1, [sp, #12]
   31bd0:	ldr	r1, [sp, #12]
   31bd4:	mvn	r2, #0
   31bd8:	udiv	r1, r2, r1
   31bdc:	cmp	r0, r1
   31be0:	bcs	31bf0 <__assert_fail@plt+0x2075c>
   31be4:	ldr	r0, [pc, #232]	; 31cd4 <__assert_fail@plt+0x20840>
   31be8:	str	r0, [sp, #8]
   31bec:	b	31c00 <__assert_fail@plt+0x2076c>
   31bf0:	ldr	r0, [sp, #12]
   31bf4:	mvn	r1, #0
   31bf8:	udiv	r0, r1, r0
   31bfc:	str	r0, [sp, #8]
   31c00:	ldr	r0, [sp, #8]
   31c04:	ldr	r1, [sp, #16]
   31c08:	cmp	r0, r1
   31c0c:	bcs	31c1c <__assert_fail@plt+0x20788>
   31c10:	movw	r0, #12
   31c14:	str	r0, [fp, #-4]
   31c18:	b	31cc8 <__assert_fail@plt+0x20834>
   31c1c:	ldr	r0, [sp, #16]
   31c20:	add	r0, r0, r0, lsl #1
   31c24:	lsl	r0, r0, #3
   31c28:	bl	3fbd8 <__assert_fail@plt+0x2e744>
   31c2c:	ldr	lr, [fp, #-8]
   31c30:	str	r0, [lr, #116]	; 0x74
   31c34:	ldr	r0, [sp, #16]
   31c38:	lsl	r0, r0, #2
   31c3c:	bl	3fbd8 <__assert_fail@plt+0x2e744>
   31c40:	ldr	lr, [fp, #-8]
   31c44:	str	r0, [lr, #132]	; 0x84
   31c48:	ldr	r0, [fp, #-8]
   31c4c:	ldr	r0, [r0, #116]	; 0x74
   31c50:	movw	lr, #0
   31c54:	cmp	r0, lr
   31c58:	movw	r0, #1
   31c5c:	str	r0, [sp, #4]
   31c60:	beq	31c80 <__assert_fail@plt+0x207ec>
   31c64:	ldr	r0, [fp, #-8]
   31c68:	ldr	r0, [r0, #132]	; 0x84
   31c6c:	movw	r1, #0
   31c70:	cmp	r0, r1
   31c74:	movw	r0, #0
   31c78:	moveq	r0, #1
   31c7c:	str	r0, [sp, #4]
   31c80:	ldr	r0, [sp, #4]
   31c84:	tst	r0, #1
   31c88:	beq	31c98 <__assert_fail@plt+0x20804>
   31c8c:	movw	r0, #12
   31c90:	str	r0, [fp, #-4]
   31c94:	b	31cc8 <__assert_fail@plt+0x20834>
   31c98:	b	31c9c <__assert_fail@plt+0x20808>
   31c9c:	ldr	r0, [sp, #16]
   31ca0:	ldr	r1, [fp, #-8]
   31ca4:	str	r0, [r1, #112]	; 0x70
   31ca8:	ldr	r0, [fp, #-8]
   31cac:	movw	r1, #1
   31cb0:	str	r1, [r0, #120]	; 0x78
   31cb4:	ldr	r0, [sp, #16]
   31cb8:	ldr	r1, [fp, #-8]
   31cbc:	str	r0, [r1, #128]	; 0x80
   31cc0:	movw	r0, #0
   31cc4:	str	r0, [fp, #-4]
   31cc8:	ldr	r0, [fp, #-4]
   31ccc:	mov	sp, fp
   31cd0:	pop	{fp, pc}
   31cd4:	svcvc	0x00ffffff
   31cd8:	push	{fp, lr}
   31cdc:	mov	fp, sp
   31ce0:	sub	sp, sp, #128	; 0x80
   31ce4:	str	r0, [fp, #-8]
   31ce8:	str	r1, [fp, #-12]
   31cec:	str	r2, [fp, #-16]
   31cf0:	ldr	r0, [fp, #-8]
   31cf4:	ldr	r0, [r0, #24]
   31cf8:	ldr	r1, [fp, #-12]
   31cfc:	cmp	r0, r1
   31d00:	bgt	31d1c <__assert_fail@plt+0x20888>
   31d04:	ldr	r0, [fp, #-12]
   31d08:	ldr	r1, [fp, #-8]
   31d0c:	ldr	r1, [r1, #24]
   31d10:	sub	r0, r0, r1
   31d14:	str	r0, [fp, #-20]	; 0xffffffec
   31d18:	b	31ddc <__assert_fail@plt+0x20948>
   31d1c:	ldr	r0, [fp, #-8]
   31d20:	ldr	r0, [r0, #80]	; 0x50
   31d24:	cmp	r0, #1
   31d28:	ble	31d44 <__assert_fail@plt+0x208b0>
   31d2c:	ldr	r0, [fp, #-8]
   31d30:	add	r0, r0, #16
   31d34:	movw	r1, #0
   31d38:	and	r1, r1, #255	; 0xff
   31d3c:	movw	r2, #8
   31d40:	bl	113d4 <memset@plt>
   31d44:	ldr	r0, [fp, #-8]
   31d48:	ldr	r0, [r0, #44]	; 0x2c
   31d4c:	ldr	r1, [fp, #-8]
   31d50:	str	r0, [r1, #48]	; 0x30
   31d54:	ldr	r0, [fp, #-8]
   31d58:	ldr	r0, [r0, #52]	; 0x34
   31d5c:	ldr	r1, [fp, #-8]
   31d60:	str	r0, [r1, #56]	; 0x38
   31d64:	ldr	r0, [fp, #-8]
   31d68:	movw	r1, #0
   31d6c:	str	r1, [r0, #28]
   31d70:	ldr	r0, [fp, #-8]
   31d74:	str	r1, [r0, #24]
   31d78:	ldr	r0, [fp, #-8]
   31d7c:	str	r1, [r0, #32]
   31d80:	ldr	r0, [fp, #-8]
   31d84:	movw	r1, #0
   31d88:	strb	r1, [r0, #76]	; 0x4c
   31d8c:	ldr	r0, [fp, #-16]
   31d90:	and	r0, r0, #1
   31d94:	cmp	r0, #0
   31d98:	movw	r0, #0
   31d9c:	movne	r0, #1
   31da0:	tst	r0, #1
   31da4:	movw	r0, #4
   31da8:	moveq	r0, #6
   31dac:	ldr	r1, [fp, #-8]
   31db0:	str	r0, [r1, #60]	; 0x3c
   31db4:	ldr	r0, [fp, #-8]
   31db8:	ldrsb	r0, [r0, #75]	; 0x4b
   31dbc:	cmp	r0, #0
   31dc0:	bne	31dd4 <__assert_fail@plt+0x20940>
   31dc4:	ldr	r0, [fp, #-8]
   31dc8:	ldr	r0, [r0]
   31dcc:	ldr	r1, [fp, #-8]
   31dd0:	str	r0, [r1, #4]
   31dd4:	ldr	r0, [fp, #-12]
   31dd8:	str	r0, [fp, #-20]	; 0xffffffec
   31ddc:	ldr	r0, [fp, #-20]	; 0xffffffec
   31de0:	cmp	r0, #0
   31de4:	beq	327bc <__assert_fail@plt+0x21328>
   31de8:	ldr	r0, [fp, #-20]	; 0xffffffec
   31dec:	ldr	r1, [fp, #-8]
   31df0:	ldr	r1, [r1, #32]
   31df4:	cmp	r0, r1
   31df8:	bge	322a4 <__assert_fail@plt+0x20e10>
   31dfc:	ldr	r0, [fp, #-8]
   31e00:	ldrb	r0, [r0, #76]	; 0x4c
   31e04:	cmp	r0, #0
   31e08:	beq	321d0 <__assert_fail@plt+0x20d3c>
   31e0c:	movw	r0, #0
   31e10:	str	r0, [fp, #-24]	; 0xffffffe8
   31e14:	ldr	r0, [fp, #-8]
   31e18:	ldr	r0, [r0, #28]
   31e1c:	str	r0, [fp, #-28]	; 0xffffffe4
   31e20:	ldr	r0, [fp, #-28]	; 0xffffffe4
   31e24:	ldr	r1, [fp, #-24]	; 0xffffffe8
   31e28:	add	r0, r0, r1
   31e2c:	add	r0, r0, r0, lsr #31
   31e30:	asr	r0, r0, #1
   31e34:	str	r0, [fp, #-32]	; 0xffffffe0
   31e38:	ldr	r0, [fp, #-8]
   31e3c:	ldr	r0, [r0, #12]
   31e40:	ldr	r1, [fp, #-32]	; 0xffffffe0
   31e44:	add	r0, r0, r1, lsl #2
   31e48:	ldr	r0, [r0]
   31e4c:	ldr	r1, [fp, #-20]	; 0xffffffec
   31e50:	cmp	r0, r1
   31e54:	ble	31e64 <__assert_fail@plt+0x209d0>
   31e58:	ldr	r0, [fp, #-32]	; 0xffffffe0
   31e5c:	str	r0, [fp, #-28]	; 0xffffffe4
   31e60:	b	31e9c <__assert_fail@plt+0x20a08>
   31e64:	ldr	r0, [fp, #-8]
   31e68:	ldr	r0, [r0, #12]
   31e6c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   31e70:	add	r0, r0, r1, lsl #2
   31e74:	ldr	r0, [r0]
   31e78:	ldr	r1, [fp, #-20]	; 0xffffffec
   31e7c:	cmp	r0, r1
   31e80:	bge	31e94 <__assert_fail@plt+0x20a00>
   31e84:	ldr	r0, [fp, #-32]	; 0xffffffe0
   31e88:	add	r0, r0, #1
   31e8c:	str	r0, [fp, #-24]	; 0xffffffe8
   31e90:	b	31e98 <__assert_fail@plt+0x20a04>
   31e94:	b	31eb0 <__assert_fail@plt+0x20a1c>
   31e98:	b	31e9c <__assert_fail@plt+0x20a08>
   31e9c:	b	31ea0 <__assert_fail@plt+0x20a0c>
   31ea0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31ea4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   31ea8:	cmp	r0, r1
   31eac:	blt	31e20 <__assert_fail@plt+0x2098c>
   31eb0:	ldr	r0, [fp, #-8]
   31eb4:	ldr	r0, [r0, #12]
   31eb8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   31ebc:	add	r0, r0, r1, lsl #2
   31ec0:	ldr	r0, [r0]
   31ec4:	ldr	r1, [fp, #-20]	; 0xffffffec
   31ec8:	cmp	r0, r1
   31ecc:	bge	31edc <__assert_fail@plt+0x20a48>
   31ed0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   31ed4:	add	r0, r0, #1
   31ed8:	str	r0, [fp, #-32]	; 0xffffffe0
   31edc:	ldr	r0, [fp, #-8]
   31ee0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   31ee4:	sub	r1, r1, #1
   31ee8:	ldr	r2, [fp, #-16]
   31eec:	bl	3378c <__assert_fail@plt+0x222f8>
   31ef0:	ldr	r1, [fp, #-8]
   31ef4:	str	r0, [r1, #60]	; 0x3c
   31ef8:	ldr	r0, [fp, #-8]
   31efc:	ldr	r0, [r0, #28]
   31f00:	ldr	r1, [fp, #-20]	; 0xffffffec
   31f04:	cmp	r0, r1
   31f08:	ble	3200c <__assert_fail@plt+0x20b78>
   31f0c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   31f10:	ldr	r1, [fp, #-20]	; 0xffffffec
   31f14:	cmp	r0, r1
   31f18:	bne	3200c <__assert_fail@plt+0x20b78>
   31f1c:	ldr	r0, [fp, #-8]
   31f20:	ldr	r0, [r0, #12]
   31f24:	ldr	r1, [fp, #-32]	; 0xffffffe0
   31f28:	add	r0, r0, r1, lsl #2
   31f2c:	ldr	r0, [r0]
   31f30:	ldr	r1, [fp, #-20]	; 0xffffffec
   31f34:	cmp	r0, r1
   31f38:	bne	3200c <__assert_fail@plt+0x20b78>
   31f3c:	ldr	r0, [fp, #-8]
   31f40:	ldr	r1, [r0, #8]
   31f44:	ldr	r0, [r0, #28]
   31f48:	ldr	r2, [fp, #-20]	; 0xffffffec
   31f4c:	add	r3, r1, r2, lsl #2
   31f50:	sub	r0, r0, r2
   31f54:	lsl	r2, r0, #2
   31f58:	mov	r0, r1
   31f5c:	mov	r1, r3
   31f60:	bl	11218 <memmove@plt>
   31f64:	ldr	r0, [fp, #-8]
   31f68:	ldr	r0, [r0, #4]
   31f6c:	ldr	r1, [fp, #-8]
   31f70:	ldr	r1, [r1, #4]
   31f74:	ldr	r2, [fp, #-20]	; 0xffffffec
   31f78:	add	r1, r1, r2
   31f7c:	ldr	r2, [fp, #-8]
   31f80:	ldr	r2, [r2, #28]
   31f84:	ldr	r3, [fp, #-20]	; 0xffffffec
   31f88:	sub	r2, r2, r3
   31f8c:	bl	11218 <memmove@plt>
   31f90:	ldr	r0, [fp, #-20]	; 0xffffffec
   31f94:	ldr	r1, [fp, #-8]
   31f98:	ldr	r2, [r1, #28]
   31f9c:	sub	r0, r2, r0
   31fa0:	str	r0, [r1, #28]
   31fa4:	ldr	r0, [fp, #-20]	; 0xffffffec
   31fa8:	ldr	r1, [fp, #-8]
   31fac:	ldr	r2, [r1, #32]
   31fb0:	sub	r0, r2, r0
   31fb4:	str	r0, [r1, #32]
   31fb8:	movw	r0, #0
   31fbc:	str	r0, [fp, #-24]	; 0xffffffe8
   31fc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31fc4:	ldr	r1, [fp, #-8]
   31fc8:	ldr	r1, [r1, #28]
   31fcc:	cmp	r0, r1
   31fd0:	bge	32008 <__assert_fail@plt+0x20b74>
   31fd4:	ldr	r0, [fp, #-8]
   31fd8:	ldr	r0, [r0, #12]
   31fdc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   31fe0:	ldr	r2, [fp, #-20]	; 0xffffffec
   31fe4:	add	r3, r1, r2
   31fe8:	ldr	r3, [r0, r3, lsl #2]
   31fec:	sub	r2, r3, r2
   31ff0:	add	r0, r0, r1, lsl #2
   31ff4:	str	r2, [r0]
   31ff8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31ffc:	add	r0, r0, #1
   32000:	str	r0, [fp, #-24]	; 0xffffffe8
   32004:	b	31fc0 <__assert_fail@plt+0x20b2c>
   32008:	b	321cc <__assert_fail@plt+0x20d38>
   3200c:	ldr	r0, [fp, #-8]
   32010:	ldr	r0, [r0, #44]	; 0x2c
   32014:	ldr	r1, [fp, #-12]
   32018:	sub	r0, r0, r1
   3201c:	ldr	r1, [fp, #-20]	; 0xffffffec
   32020:	add	r0, r0, r1
   32024:	ldr	r1, [fp, #-8]
   32028:	str	r0, [r1, #48]	; 0x30
   3202c:	ldr	r0, [fp, #-8]
   32030:	ldr	r0, [r0, #52]	; 0x34
   32034:	ldr	r1, [fp, #-12]
   32038:	sub	r0, r0, r1
   3203c:	ldr	r1, [fp, #-20]	; 0xffffffec
   32040:	add	r0, r0, r1
   32044:	ldr	r1, [fp, #-8]
   32048:	str	r0, [r1, #56]	; 0x38
   3204c:	ldr	r0, [fp, #-8]
   32050:	movw	r1, #0
   32054:	strb	r1, [r0, #76]	; 0x4c
   32058:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3205c:	cmp	r0, #0
   32060:	movw	r0, #0
   32064:	str	r0, [sp, #24]
   32068:	ble	32098 <__assert_fail@plt+0x20c04>
   3206c:	ldr	r0, [fp, #-8]
   32070:	ldr	r0, [r0, #12]
   32074:	ldr	r1, [fp, #-32]	; 0xffffffe0
   32078:	sub	r1, r1, #1
   3207c:	add	r0, r0, r1, lsl #2
   32080:	ldr	r0, [r0]
   32084:	ldr	r1, [fp, #-20]	; 0xffffffec
   32088:	cmp	r0, r1
   3208c:	movw	r0, #0
   32090:	moveq	r0, #1
   32094:	str	r0, [sp, #24]
   32098:	ldr	r0, [sp, #24]
   3209c:	tst	r0, #1
   320a0:	beq	320b8 <__assert_fail@plt+0x20c24>
   320a4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   320a8:	mvn	r1, #0
   320ac:	add	r0, r0, r1
   320b0:	str	r0, [fp, #-32]	; 0xffffffe0
   320b4:	b	32058 <__assert_fail@plt+0x20bc4>
   320b8:	b	320bc <__assert_fail@plt+0x20c28>
   320bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   320c0:	ldr	r1, [fp, #-8]
   320c4:	ldr	r1, [r1, #28]
   320c8:	cmp	r0, r1
   320cc:	bge	32100 <__assert_fail@plt+0x20c6c>
   320d0:	ldr	r0, [fp, #-8]
   320d4:	ldr	r0, [r0, #8]
   320d8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   320dc:	add	r0, r0, r1, lsl #2
   320e0:	ldr	r0, [r0]
   320e4:	cmn	r0, #1
   320e8:	beq	320f0 <__assert_fail@plt+0x20c5c>
   320ec:	b	32100 <__assert_fail@plt+0x20c6c>
   320f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   320f4:	add	r0, r0, #1
   320f8:	str	r0, [fp, #-32]	; 0xffffffe0
   320fc:	b	320bc <__assert_fail@plt+0x20c28>
   32100:	ldr	r0, [fp, #-32]	; 0xffffffe0
   32104:	ldr	r1, [fp, #-8]
   32108:	ldr	r1, [r1, #28]
   3210c:	cmp	r0, r1
   32110:	bne	32124 <__assert_fail@plt+0x20c90>
   32114:	ldr	r0, [fp, #-8]
   32118:	movw	r1, #0
   3211c:	str	r1, [r0, #28]
   32120:	b	321bc <__assert_fail@plt+0x20d28>
   32124:	ldr	r0, [fp, #-8]
   32128:	ldr	r0, [r0, #12]
   3212c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   32130:	add	r0, r0, r1, lsl #2
   32134:	ldr	r0, [r0]
   32138:	ldr	r1, [fp, #-20]	; 0xffffffec
   3213c:	sub	r0, r0, r1
   32140:	ldr	r1, [fp, #-8]
   32144:	str	r0, [r1, #28]
   32148:	ldr	r0, [fp, #-8]
   3214c:	ldr	r0, [r0, #28]
   32150:	cmp	r0, #0
   32154:	beq	321b8 <__assert_fail@plt+0x20d24>
   32158:	movw	r0, #0
   3215c:	str	r0, [fp, #-24]	; 0xffffffe8
   32160:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32164:	ldr	r1, [fp, #-8]
   32168:	ldr	r1, [r1, #28]
   3216c:	cmp	r0, r1
   32170:	bge	3219c <__assert_fail@plt+0x20d08>
   32174:	ldr	r0, [fp, #-8]
   32178:	ldr	r0, [r0, #8]
   3217c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   32180:	add	r0, r0, r1, lsl #2
   32184:	mvn	r1, #0
   32188:	str	r1, [r0]
   3218c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32190:	add	r0, r0, #1
   32194:	str	r0, [fp, #-24]	; 0xffffffe8
   32198:	b	32160 <__assert_fail@plt+0x20ccc>
   3219c:	ldr	r0, [fp, #-8]
   321a0:	ldr	r0, [r0, #4]
   321a4:	ldr	r1, [fp, #-8]
   321a8:	ldr	r2, [r1, #28]
   321ac:	movw	r1, #255	; 0xff
   321b0:	and	r1, r1, #255	; 0xff
   321b4:	bl	113d4 <memset@plt>
   321b8:	b	321bc <__assert_fail@plt+0x20d28>
   321bc:	ldr	r0, [fp, #-8]
   321c0:	ldr	r0, [r0, #28]
   321c4:	ldr	r1, [fp, #-8]
   321c8:	str	r0, [r1, #32]
   321cc:	b	322a0 <__assert_fail@plt+0x20e0c>
   321d0:	ldr	r0, [fp, #-8]
   321d4:	ldr	r1, [fp, #-20]	; 0xffffffec
   321d8:	sub	r1, r1, #1
   321dc:	ldr	r2, [fp, #-16]
   321e0:	bl	3378c <__assert_fail@plt+0x222f8>
   321e4:	ldr	r1, [fp, #-8]
   321e8:	str	r0, [r1, #60]	; 0x3c
   321ec:	ldr	r0, [fp, #-8]
   321f0:	ldr	r0, [r0, #80]	; 0x50
   321f4:	cmp	r0, #1
   321f8:	ble	32224 <__assert_fail@plt+0x20d90>
   321fc:	ldr	r0, [fp, #-8]
   32200:	ldr	r1, [r0, #8]
   32204:	ldr	r0, [r0, #28]
   32208:	ldr	r2, [fp, #-20]	; 0xffffffec
   3220c:	add	r3, r1, r2, lsl #2
   32210:	sub	r0, r0, r2
   32214:	lsl	r2, r0, #2
   32218:	mov	r0, r1
   3221c:	mov	r1, r3
   32220:	bl	11218 <memmove@plt>
   32224:	ldr	r0, [fp, #-8]
   32228:	ldrb	r0, [r0, #75]	; 0x4b
   3222c:	cmp	r0, #0
   32230:	beq	32260 <__assert_fail@plt+0x20dcc>
   32234:	ldr	r0, [fp, #-8]
   32238:	ldr	r0, [r0, #4]
   3223c:	ldr	r1, [fp, #-8]
   32240:	ldr	r1, [r1, #4]
   32244:	ldr	r2, [fp, #-20]	; 0xffffffec
   32248:	add	r1, r1, r2
   3224c:	ldr	r2, [fp, #-8]
   32250:	ldr	r2, [r2, #28]
   32254:	ldr	r3, [fp, #-20]	; 0xffffffec
   32258:	sub	r2, r2, r3
   3225c:	bl	11218 <memmove@plt>
   32260:	ldr	r0, [fp, #-20]	; 0xffffffec
   32264:	ldr	r1, [fp, #-8]
   32268:	ldr	r2, [r1, #28]
   3226c:	sub	r0, r2, r0
   32270:	str	r0, [r1, #28]
   32274:	ldr	r0, [fp, #-20]	; 0xffffffec
   32278:	ldr	r1, [fp, #-8]
   3227c:	ldr	r2, [r1, #32]
   32280:	sub	r0, r2, r0
   32284:	str	r0, [r1, #32]
   32288:	ldr	r0, [fp, #-8]
   3228c:	ldr	r0, [r0, #28]
   32290:	cmp	r0, #0
   32294:	ble	3229c <__assert_fail@plt+0x20e08>
   32298:	b	3229c <__assert_fail@plt+0x20e08>
   3229c:	b	322a0 <__assert_fail@plt+0x20e0c>
   322a0:	b	32794 <__assert_fail@plt+0x21300>
   322a4:	ldr	r0, [fp, #-8]
   322a8:	ldr	r0, [r0, #28]
   322ac:	str	r0, [fp, #-36]	; 0xffffffdc
   322b0:	ldr	r0, [fp, #-8]
   322b4:	ldrb	r0, [r0, #76]	; 0x4c
   322b8:	cmp	r0, #0
   322bc:	beq	3230c <__assert_fail@plt+0x20e78>
   322c0:	ldr	r0, [fp, #-8]
   322c4:	ldr	r0, [r0, #44]	; 0x2c
   322c8:	ldr	r1, [fp, #-12]
   322cc:	sub	r0, r0, r1
   322d0:	ldr	r1, [fp, #-20]	; 0xffffffec
   322d4:	add	r0, r0, r1
   322d8:	ldr	r1, [fp, #-8]
   322dc:	str	r0, [r1, #48]	; 0x30
   322e0:	ldr	r0, [fp, #-8]
   322e4:	ldr	r0, [r0, #52]	; 0x34
   322e8:	ldr	r1, [fp, #-12]
   322ec:	sub	r0, r0, r1
   322f0:	ldr	r1, [fp, #-20]	; 0xffffffec
   322f4:	add	r0, r0, r1
   322f8:	ldr	r1, [fp, #-8]
   322fc:	str	r0, [r1, #56]	; 0x38
   32300:	ldr	r0, [fp, #-8]
   32304:	movw	r1, #0
   32308:	strb	r1, [r0, #76]	; 0x4c
   3230c:	ldr	r0, [fp, #-8]
   32310:	movw	r1, #0
   32314:	str	r1, [r0, #28]
   32318:	ldr	r0, [fp, #-8]
   3231c:	ldr	r0, [r0, #80]	; 0x50
   32320:	cmp	r0, #1
   32324:	ble	326c4 <__assert_fail@plt+0x21230>
   32328:	mvn	r0, #0
   3232c:	str	r0, [fp, #-44]	; 0xffffffd4
   32330:	ldr	r0, [fp, #-8]
   32334:	ldrsb	r0, [r0, #73]	; 0x49
   32338:	cmp	r0, #0
   3233c:	beq	32550 <__assert_fail@plt+0x210bc>
   32340:	ldr	r0, [fp, #-8]
   32344:	ldr	r0, [r0]
   32348:	ldr	r1, [fp, #-8]
   3234c:	ldr	r1, [r1, #24]
   32350:	add	r0, r0, r1
   32354:	str	r0, [fp, #-48]	; 0xffffffd0
   32358:	ldr	r0, [fp, #-48]	; 0xffffffd0
   3235c:	ldr	r1, [fp, #-20]	; 0xffffffec
   32360:	ldr	r2, [fp, #-8]
   32364:	ldr	r2, [r2, #80]	; 0x50
   32368:	sub	r1, r1, r2
   3236c:	add	r0, r0, r1
   32370:	str	r0, [fp, #-56]	; 0xffffffc8
   32374:	ldr	r0, [fp, #-56]	; 0xffffffc8
   32378:	ldr	r1, [fp, #-8]
   3237c:	ldr	r1, [r1]
   32380:	cmp	r0, r1
   32384:	bcs	32394 <__assert_fail@plt+0x20f00>
   32388:	ldr	r0, [fp, #-8]
   3238c:	ldr	r0, [r0]
   32390:	str	r0, [fp, #-56]	; 0xffffffc8
   32394:	ldr	r0, [fp, #-48]	; 0xffffffd0
   32398:	ldr	r1, [fp, #-20]	; 0xffffffec
   3239c:	add	r0, r0, r1
   323a0:	mvn	r1, #0
   323a4:	add	r0, r0, r1
   323a8:	str	r0, [fp, #-52]	; 0xffffffcc
   323ac:	ldr	r0, [fp, #-52]	; 0xffffffcc
   323b0:	ldr	r1, [fp, #-56]	; 0xffffffc8
   323b4:	cmp	r0, r1
   323b8:	bcc	3254c <__assert_fail@plt+0x210b8>
   323bc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   323c0:	ldrb	r0, [r0]
   323c4:	and	r0, r0, #192	; 0xc0
   323c8:	cmp	r0, #128	; 0x80
   323cc:	beq	32534 <__assert_fail@plt+0x210a0>
   323d0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   323d4:	ldr	r1, [fp, #-8]
   323d8:	ldr	r1, [r1, #48]	; 0x30
   323dc:	add	r0, r0, r1
   323e0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   323e4:	sub	r0, r0, r1
   323e8:	str	r0, [sp, #56]	; 0x38
   323ec:	ldr	r0, [fp, #-52]	; 0xffffffcc
   323f0:	str	r0, [sp, #40]	; 0x28
   323f4:	ldr	r0, [fp, #-8]
   323f8:	ldr	r0, [r0, #64]	; 0x40
   323fc:	movw	r1, #0
   32400:	cmp	r0, r1
   32404:	beq	32488 <__assert_fail@plt+0x20ff4>
   32408:	ldr	r0, [sp, #56]	; 0x38
   3240c:	cmp	r0, #6
   32410:	bge	32420 <__assert_fail@plt+0x20f8c>
   32414:	ldr	r0, [sp, #56]	; 0x38
   32418:	str	r0, [sp, #20]
   3241c:	b	3242c <__assert_fail@plt+0x20f98>
   32420:	movw	r0, #6
   32424:	str	r0, [sp, #20]
   32428:	b	3242c <__assert_fail@plt+0x20f98>
   3242c:	ldr	r0, [sp, #20]
   32430:	str	r0, [sp, #36]	; 0x24
   32434:	ldr	r0, [sp, #36]	; 0x24
   32438:	mvn	r1, #0
   3243c:	add	r0, r0, r1
   32440:	str	r0, [sp, #36]	; 0x24
   32444:	cmp	r0, #0
   32448:	blt	32480 <__assert_fail@plt+0x20fec>
   3244c:	ldr	r0, [fp, #-8]
   32450:	ldr	r0, [r0, #64]	; 0x40
   32454:	ldr	r1, [fp, #-52]	; 0xffffffcc
   32458:	ldr	r2, [sp, #36]	; 0x24
   3245c:	add	r1, r1, r2
   32460:	ldrb	r1, [r1]
   32464:	add	r0, r0, r1
   32468:	ldrb	r0, [r0]
   3246c:	ldr	r1, [sp, #36]	; 0x24
   32470:	add	r2, sp, #50	; 0x32
   32474:	add	r1, r2, r1
   32478:	strb	r0, [r1]
   3247c:	b	32434 <__assert_fail@plt+0x20fa0>
   32480:	add	r0, sp, #50	; 0x32
   32484:	str	r0, [sp, #40]	; 0x28
   32488:	add	r0, sp, #64	; 0x40
   3248c:	mov	r1, r0
   32490:	str	r0, [sp, #16]
   32494:	mov	r0, r1
   32498:	movw	r1, #0
   3249c:	and	r1, r1, #255	; 0xff
   324a0:	movw	r2, #8
   324a4:	bl	113d4 <memset@plt>
   324a8:	ldr	r1, [sp, #40]	; 0x28
   324ac:	ldr	r2, [sp, #56]	; 0x38
   324b0:	add	r0, sp, #60	; 0x3c
   324b4:	ldr	r3, [sp, #16]
   324b8:	bl	4193c <__assert_fail@plt+0x304a8>
   324bc:	str	r0, [sp, #44]	; 0x2c
   324c0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   324c4:	ldr	r1, [fp, #-20]	; 0xffffffec
   324c8:	add	r0, r0, r1
   324cc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   324d0:	sub	r0, r0, r1
   324d4:	ldr	r1, [sp, #44]	; 0x2c
   324d8:	cmp	r0, r1
   324dc:	bhi	32530 <__assert_fail@plt+0x2109c>
   324e0:	ldr	r0, [sp, #44]	; 0x2c
   324e4:	cmn	r0, #2
   324e8:	bcs	32530 <__assert_fail@plt+0x2109c>
   324ec:	ldr	r0, [fp, #-8]
   324f0:	add	r0, r0, #16
   324f4:	movw	r1, #0
   324f8:	and	r1, r1, #255	; 0xff
   324fc:	movw	r2, #8
   32500:	bl	113d4 <memset@plt>
   32504:	ldr	r0, [sp, #44]	; 0x2c
   32508:	ldr	r1, [fp, #-48]	; 0xffffffd0
   3250c:	ldr	r2, [fp, #-20]	; 0xffffffec
   32510:	add	r1, r1, r2
   32514:	ldr	r2, [fp, #-52]	; 0xffffffcc
   32518:	sub	r1, r1, r2
   3251c:	sub	r0, r0, r1
   32520:	ldr	r1, [fp, #-8]
   32524:	str	r0, [r1, #28]
   32528:	ldr	r0, [sp, #60]	; 0x3c
   3252c:	str	r0, [fp, #-44]	; 0xffffffd4
   32530:	b	3254c <__assert_fail@plt+0x210b8>
   32534:	b	32538 <__assert_fail@plt+0x210a4>
   32538:	ldr	r0, [fp, #-52]	; 0xffffffcc
   3253c:	mvn	r1, #0
   32540:	add	r0, r0, r1
   32544:	str	r0, [fp, #-52]	; 0xffffffcc
   32548:	b	323ac <__assert_fail@plt+0x20f18>
   3254c:	b	32550 <__assert_fail@plt+0x210bc>
   32550:	ldr	r0, [fp, #-44]	; 0xffffffd4
   32554:	cmn	r0, #1
   32558:	bne	3257c <__assert_fail@plt+0x210e8>
   3255c:	ldr	r0, [fp, #-8]
   32560:	ldr	r1, [fp, #-12]
   32564:	sub	r2, fp, #44	; 0x2c
   32568:	bl	3398c <__assert_fail@plt+0x224f8>
   3256c:	ldr	r1, [fp, #-12]
   32570:	sub	r0, r0, r1
   32574:	ldr	r1, [fp, #-8]
   32578:	str	r0, [r1, #28]
   3257c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   32580:	cmn	r0, #1
   32584:	bne	325a8 <__assert_fail@plt+0x21114>
   32588:	ldr	r0, [fp, #-8]
   3258c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   32590:	sub	r1, r1, #1
   32594:	ldr	r2, [fp, #-16]
   32598:	bl	3378c <__assert_fail@plt+0x222f8>
   3259c:	ldr	r1, [fp, #-8]
   325a0:	str	r0, [r1, #60]	; 0x3c
   325a4:	b	3262c <__assert_fail@plt+0x21198>
   325a8:	ldr	r0, [fp, #-8]
   325ac:	ldrb	r0, [r0, #78]	; 0x4e
   325b0:	cmp	r0, #0
   325b4:	beq	325e0 <__assert_fail@plt+0x2114c>
   325b8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   325bc:	bl	113bc <iswalnum@plt>
   325c0:	cmp	r0, #0
   325c4:	bne	325d4 <__assert_fail@plt+0x21140>
   325c8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   325cc:	cmp	r0, #95	; 0x5f
   325d0:	bne	325e0 <__assert_fail@plt+0x2114c>
   325d4:	movw	r0, #1
   325d8:	str	r0, [sp, #12]
   325dc:	b	32620 <__assert_fail@plt+0x2118c>
   325e0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   325e4:	cmp	r0, #10
   325e8:	movw	r0, #0
   325ec:	str	r0, [sp, #8]
   325f0:	bne	3260c <__assert_fail@plt+0x21178>
   325f4:	ldr	r0, [fp, #-8]
   325f8:	ldrb	r0, [r0, #77]	; 0x4d
   325fc:	cmp	r0, #0
   32600:	movw	r0, #0
   32604:	movne	r0, #1
   32608:	str	r0, [sp, #8]
   3260c:	ldr	r0, [sp, #8]
   32610:	tst	r0, #1
   32614:	movw	r0, #2
   32618:	moveq	r0, #0
   3261c:	str	r0, [sp, #12]
   32620:	ldr	r0, [sp, #12]
   32624:	ldr	r1, [fp, #-8]
   32628:	str	r0, [r1, #60]	; 0x3c
   3262c:	ldr	r0, [fp, #-8]
   32630:	ldr	r0, [r0, #28]
   32634:	cmp	r0, #0
   32638:	beq	326b0 <__assert_fail@plt+0x2121c>
   3263c:	movw	r0, #0
   32640:	str	r0, [fp, #-40]	; 0xffffffd8
   32644:	ldr	r0, [fp, #-40]	; 0xffffffd8
   32648:	ldr	r1, [fp, #-8]
   3264c:	ldr	r1, [r1, #28]
   32650:	cmp	r0, r1
   32654:	bge	32680 <__assert_fail@plt+0x211ec>
   32658:	ldr	r0, [fp, #-8]
   3265c:	ldr	r0, [r0, #8]
   32660:	ldr	r1, [fp, #-40]	; 0xffffffd8
   32664:	add	r0, r0, r1, lsl #2
   32668:	mvn	r1, #0
   3266c:	str	r1, [r0]
   32670:	ldr	r0, [fp, #-40]	; 0xffffffd8
   32674:	add	r0, r0, #1
   32678:	str	r0, [fp, #-40]	; 0xffffffd8
   3267c:	b	32644 <__assert_fail@plt+0x211b0>
   32680:	ldr	r0, [fp, #-8]
   32684:	ldrsb	r0, [r0, #75]	; 0x4b
   32688:	cmp	r0, #0
   3268c:	beq	326ac <__assert_fail@plt+0x21218>
   32690:	ldr	r0, [fp, #-8]
   32694:	ldr	r0, [r0, #4]
   32698:	ldr	r1, [fp, #-8]
   3269c:	ldr	r2, [r1, #28]
   326a0:	movw	r1, #255	; 0xff
   326a4:	and	r1, r1, #255	; 0xff
   326a8:	bl	113d4 <memset@plt>
   326ac:	b	326b0 <__assert_fail@plt+0x2121c>
   326b0:	ldr	r0, [fp, #-8]
   326b4:	ldr	r0, [r0, #28]
   326b8:	ldr	r1, [fp, #-8]
   326bc:	str	r0, [r1, #32]
   326c0:	b	32790 <__assert_fail@plt+0x212fc>
   326c4:	ldr	r0, [fp, #-8]
   326c8:	ldr	r0, [r0]
   326cc:	ldr	r1, [fp, #-8]
   326d0:	ldr	r1, [r1, #24]
   326d4:	ldr	r2, [fp, #-20]	; 0xffffffec
   326d8:	add	r1, r1, r2
   326dc:	sub	r1, r1, #1
   326e0:	add	r0, r0, r1
   326e4:	ldrb	r0, [r0]
   326e8:	str	r0, [sp, #32]
   326ec:	ldr	r0, [fp, #-8]
   326f0:	movw	r1, #0
   326f4:	str	r1, [r0, #32]
   326f8:	ldr	r0, [fp, #-8]
   326fc:	ldr	r0, [r0, #64]	; 0x40
   32700:	cmp	r0, r1
   32704:	beq	32720 <__assert_fail@plt+0x2128c>
   32708:	ldr	r0, [fp, #-8]
   3270c:	ldr	r0, [r0, #64]	; 0x40
   32710:	ldr	r1, [sp, #32]
   32714:	add	r0, r0, r1
   32718:	ldrb	r0, [r0]
   3271c:	str	r0, [sp, #32]
   32720:	ldr	r0, [fp, #-8]
   32724:	ldr	r0, [r0, #68]	; 0x44
   32728:	ldr	r1, [sp, #32]
   3272c:	bl	33afc <__assert_fail@plt+0x22668>
   32730:	tst	r0, #1
   32734:	beq	32744 <__assert_fail@plt+0x212b0>
   32738:	movw	r0, #1
   3273c:	str	r0, [sp, #4]
   32740:	b	32784 <__assert_fail@plt+0x212f0>
   32744:	ldr	r0, [sp, #32]
   32748:	cmp	r0, #10
   3274c:	movw	r0, #0
   32750:	str	r0, [sp]
   32754:	bne	32770 <__assert_fail@plt+0x212dc>
   32758:	ldr	r0, [fp, #-8]
   3275c:	ldrb	r0, [r0, #77]	; 0x4d
   32760:	cmp	r0, #0
   32764:	movw	r0, #0
   32768:	movne	r0, #1
   3276c:	str	r0, [sp]
   32770:	ldr	r0, [sp]
   32774:	tst	r0, #1
   32778:	movw	r0, #2
   3277c:	moveq	r0, #0
   32780:	str	r0, [sp, #4]
   32784:	ldr	r0, [sp, #4]
   32788:	ldr	r1, [fp, #-8]
   3278c:	str	r0, [r1, #60]	; 0x3c
   32790:	b	32794 <__assert_fail@plt+0x21300>
   32794:	ldr	r0, [fp, #-8]
   32798:	ldrb	r0, [r0, #75]	; 0x4b
   3279c:	cmp	r0, #0
   327a0:	bne	327b8 <__assert_fail@plt+0x21324>
   327a4:	ldr	r0, [fp, #-20]	; 0xffffffec
   327a8:	ldr	r1, [fp, #-8]
   327ac:	ldr	r2, [r1, #4]
   327b0:	add	r0, r2, r0
   327b4:	str	r0, [r1, #4]
   327b8:	b	327bc <__assert_fail@plt+0x21328>
   327bc:	ldr	r0, [fp, #-12]
   327c0:	ldr	r1, [fp, #-8]
   327c4:	str	r0, [r1, #24]
   327c8:	ldr	r0, [fp, #-20]	; 0xffffffec
   327cc:	ldr	r1, [fp, #-8]
   327d0:	ldr	r2, [r1, #48]	; 0x30
   327d4:	sub	r0, r2, r0
   327d8:	str	r0, [r1, #48]	; 0x30
   327dc:	ldr	r0, [fp, #-20]	; 0xffffffec
   327e0:	ldr	r1, [fp, #-8]
   327e4:	ldr	r2, [r1, #56]	; 0x38
   327e8:	sub	r0, r2, r0
   327ec:	str	r0, [r1, #56]	; 0x38
   327f0:	ldr	r0, [fp, #-8]
   327f4:	ldr	r0, [r0, #80]	; 0x50
   327f8:	cmp	r0, #1
   327fc:	ble	32844 <__assert_fail@plt+0x213b0>
   32800:	ldr	r0, [fp, #-8]
   32804:	ldrsb	r0, [r0, #72]	; 0x48
   32808:	cmp	r0, #0
   3280c:	beq	32838 <__assert_fail@plt+0x213a4>
   32810:	ldr	r0, [fp, #-8]
   32814:	bl	27f9c <__assert_fail@plt+0x16b08>
   32818:	str	r0, [sp, #28]
   3281c:	ldr	r0, [sp, #28]
   32820:	cmp	r0, #0
   32824:	beq	32834 <__assert_fail@plt+0x213a0>
   32828:	ldr	r0, [sp, #28]
   3282c:	str	r0, [fp, #-4]
   32830:	b	328b8 <__assert_fail@plt+0x21424>
   32834:	b	32840 <__assert_fail@plt+0x213ac>
   32838:	ldr	r0, [fp, #-8]
   3283c:	bl	28b4c <__assert_fail@plt+0x176b8>
   32840:	b	328a8 <__assert_fail@plt+0x21414>
   32844:	ldr	r0, [fp, #-8]
   32848:	ldrb	r0, [r0, #75]	; 0x4b
   3284c:	cmp	r0, #0
   32850:	beq	32894 <__assert_fail@plt+0x21400>
   32854:	ldr	r0, [fp, #-8]
   32858:	ldrsb	r0, [r0, #72]	; 0x48
   3285c:	cmp	r0, #0
   32860:	beq	32870 <__assert_fail@plt+0x213dc>
   32864:	ldr	r0, [fp, #-8]
   32868:	bl	28a48 <__assert_fail@plt+0x175b4>
   3286c:	b	32890 <__assert_fail@plt+0x213fc>
   32870:	ldr	r0, [fp, #-8]
   32874:	ldr	r0, [r0, #64]	; 0x40
   32878:	movw	r1, #0
   3287c:	cmp	r0, r1
   32880:	beq	3288c <__assert_fail@plt+0x213f8>
   32884:	ldr	r0, [fp, #-8]
   32888:	bl	28e8c <__assert_fail@plt+0x179f8>
   3288c:	b	32890 <__assert_fail@plt+0x213fc>
   32890:	b	328a4 <__assert_fail@plt+0x21410>
   32894:	ldr	r0, [fp, #-8]
   32898:	ldr	r0, [r0, #48]	; 0x30
   3289c:	ldr	r1, [fp, #-8]
   328a0:	str	r0, [r1, #28]
   328a4:	b	328a8 <__assert_fail@plt+0x21414>
   328a8:	ldr	r0, [fp, #-8]
   328ac:	movw	r1, #0
   328b0:	str	r1, [r0, #40]	; 0x28
   328b4:	str	r1, [fp, #-4]
   328b8:	ldr	r0, [fp, #-4]
   328bc:	mov	sp, fp
   328c0:	pop	{fp, pc}
   328c4:	push	{fp, lr}
   328c8:	mov	fp, sp
   328cc:	sub	sp, sp, #80	; 0x50
   328d0:	str	r0, [fp, #-32]	; 0xffffffe0
   328d4:	and	r0, r1, #1
   328d8:	strb	r0, [fp, #-33]	; 0xffffffdf
   328dc:	str	r2, [sp, #40]	; 0x28
   328e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   328e4:	ldr	r0, [r0, #84]	; 0x54
   328e8:	str	r0, [sp, #36]	; 0x24
   328ec:	mov	r0, #0
   328f0:	str	r0, [sp, #28]
   328f4:	mvn	r1, #0
   328f8:	str	r1, [sp, #24]
   328fc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   32900:	ldr	r1, [r1, #40]	; 0x28
   32904:	str	r1, [sp, #20]
   32908:	ldr	r1, [sp, #40]	; 0x28
   3290c:	cmp	r1, #0
   32910:	movwne	r1, #1
   32914:	strb	r1, [sp, #15]
   32918:	ldr	r1, [sp, #20]
   3291c:	str	r1, [sp, #8]
   32920:	str	r0, [sp, #32]
   32924:	ldr	r0, [fp, #-32]	; 0xffffffe0
   32928:	ldr	r1, [sp, #20]
   3292c:	add	r2, sp, #32
   32930:	str	r2, [fp, #-8]
   32934:	str	r0, [fp, #-12]
   32938:	str	r1, [fp, #-16]
   3293c:	ldr	r0, [fp, #-12]
   32940:	ldr	r0, [r0, #84]	; 0x54
   32944:	str	r0, [fp, #-20]	; 0xffffffec
   32948:	ldr	r0, [fp, #-20]	; 0xffffffec
   3294c:	ldr	r0, [r0, #36]	; 0x24
   32950:	ldrb	r0, [r0, #52]	; 0x34
   32954:	lsr	r0, r0, #7
   32958:	and	r0, r0, #255	; 0xff
   3295c:	cmp	r0, #0
   32960:	beq	32a50 <__assert_fail@plt+0x215bc>
   32964:	ldr	r0, [fp, #-12]
   32968:	ldr	r1, [fp, #-16]
   3296c:	sub	r1, r1, #1
   32970:	ldr	r2, [fp, #-12]
   32974:	ldr	r2, [r2, #88]	; 0x58
   32978:	bl	3378c <__assert_fail@plt+0x222f8>
   3297c:	str	r0, [fp, #-24]	; 0xffffffe8
   32980:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32984:	and	r0, r0, #1
   32988:	cmp	r0, #0
   3298c:	beq	329a0 <__assert_fail@plt+0x2150c>
   32990:	ldr	r0, [fp, #-20]	; 0xffffffec
   32994:	ldr	r0, [r0, #40]	; 0x28
   32998:	str	r0, [fp, #-4]
   3299c:	b	32a5c <__assert_fail@plt+0x215c8>
   329a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   329a4:	cmp	r0, #0
   329a8:	bne	329bc <__assert_fail@plt+0x21528>
   329ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   329b0:	ldr	r0, [r0, #36]	; 0x24
   329b4:	str	r0, [fp, #-4]
   329b8:	b	32a5c <__assert_fail@plt+0x215c8>
   329bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   329c0:	and	r0, r0, #4
   329c4:	cmp	r0, #0
   329c8:	beq	329ec <__assert_fail@plt+0x21558>
   329cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   329d0:	and	r0, r0, #2
   329d4:	cmp	r0, #0
   329d8:	beq	329ec <__assert_fail@plt+0x21558>
   329dc:	ldr	r0, [fp, #-20]	; 0xffffffec
   329e0:	ldr	r0, [r0, #48]	; 0x30
   329e4:	str	r0, [fp, #-4]
   329e8:	b	32a5c <__assert_fail@plt+0x215c8>
   329ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   329f0:	and	r0, r0, #2
   329f4:	cmp	r0, #0
   329f8:	beq	32a0c <__assert_fail@plt+0x21578>
   329fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   32a00:	ldr	r0, [r0, #44]	; 0x2c
   32a04:	str	r0, [fp, #-4]
   32a08:	b	32a5c <__assert_fail@plt+0x215c8>
   32a0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32a10:	and	r0, r0, #4
   32a14:	cmp	r0, #0
   32a18:	beq	32a40 <__assert_fail@plt+0x215ac>
   32a1c:	ldr	r0, [fp, #-8]
   32a20:	ldr	r1, [fp, #-20]	; 0xffffffec
   32a24:	ldr	r2, [fp, #-20]	; 0xffffffec
   32a28:	ldr	r2, [r2, #36]	; 0x24
   32a2c:	ldr	r2, [r2, #40]	; 0x28
   32a30:	ldr	r3, [fp, #-24]	; 0xffffffe8
   32a34:	bl	30f3c <__assert_fail@plt+0x1faa8>
   32a38:	str	r0, [fp, #-4]
   32a3c:	b	32a5c <__assert_fail@plt+0x215c8>
   32a40:	ldr	r0, [fp, #-20]	; 0xffffffec
   32a44:	ldr	r0, [r0, #36]	; 0x24
   32a48:	str	r0, [fp, #-4]
   32a4c:	b	32a5c <__assert_fail@plt+0x215c8>
   32a50:	ldr	r0, [fp, #-20]	; 0xffffffec
   32a54:	ldr	r0, [r0, #36]	; 0x24
   32a58:	str	r0, [fp, #-4]
   32a5c:	ldr	r0, [fp, #-4]
   32a60:	str	r0, [sp, #16]
   32a64:	ldr	r0, [sp, #16]
   32a68:	movw	r1, #0
   32a6c:	cmp	r0, r1
   32a70:	bne	32a90 <__assert_fail@plt+0x215fc>
   32a74:	ldr	r0, [sp, #32]
   32a78:	cmp	r0, #12
   32a7c:	bne	32a84 <__assert_fail@plt+0x215f0>
   32a80:	b	32a84 <__assert_fail@plt+0x215f0>
   32a84:	mvn	r0, #1
   32a88:	str	r0, [fp, #-28]	; 0xffffffe4
   32a8c:	b	32e44 <__assert_fail@plt+0x219b0>
   32a90:	ldr	r0, [fp, #-32]	; 0xffffffe0
   32a94:	ldr	r0, [r0, #100]	; 0x64
   32a98:	movw	r1, #0
   32a9c:	cmp	r0, r1
   32aa0:	beq	32b54 <__assert_fail@plt+0x216c0>
   32aa4:	ldr	r0, [sp, #16]
   32aa8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   32aac:	ldr	r1, [r1, #100]	; 0x64
   32ab0:	ldr	r2, [sp, #20]
   32ab4:	add	r1, r1, r2, lsl #2
   32ab8:	str	r0, [r1]
   32abc:	ldr	r0, [sp, #36]	; 0x24
   32ac0:	ldr	r0, [r0, #76]	; 0x4c
   32ac4:	cmp	r0, #0
   32ac8:	beq	32b50 <__assert_fail@plt+0x216bc>
   32acc:	movw	r0, #0
   32ad0:	strb	r0, [sp, #15]
   32ad4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   32ad8:	ldr	r1, [sp, #16]
   32adc:	add	r1, r1, #4
   32ae0:	movw	r2, #0
   32ae4:	bl	33b48 <__assert_fail@plt+0x226b4>
   32ae8:	str	r0, [sp, #32]
   32aec:	ldr	r0, [sp, #32]
   32af0:	cmp	r0, #0
   32af4:	beq	32b04 <__assert_fail@plt+0x21670>
   32af8:	ldr	r0, [sp, #32]
   32afc:	str	r0, [fp, #-28]	; 0xffffffe4
   32b00:	b	32e44 <__assert_fail@plt+0x219b0>
   32b04:	ldr	r0, [sp, #16]
   32b08:	ldrb	r0, [r0, #52]	; 0x34
   32b0c:	ubfx	r0, r0, #6, #1
   32b10:	and	r0, r0, #255	; 0xff
   32b14:	cmp	r0, #0
   32b18:	beq	32b4c <__assert_fail@plt+0x216b8>
   32b1c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   32b20:	ldr	r1, [sp, #16]
   32b24:	add	r1, r1, #4
   32b28:	bl	33c5c <__assert_fail@plt+0x227c8>
   32b2c:	str	r0, [sp, #32]
   32b30:	ldr	r0, [sp, #32]
   32b34:	cmp	r0, #0
   32b38:	beq	32b48 <__assert_fail@plt+0x216b4>
   32b3c:	ldr	r0, [sp, #32]
   32b40:	str	r0, [fp, #-28]	; 0xffffffe4
   32b44:	b	32e44 <__assert_fail@plt+0x219b0>
   32b48:	b	32b4c <__assert_fail@plt+0x216b8>
   32b4c:	b	32b50 <__assert_fail@plt+0x216bc>
   32b50:	b	32b54 <__assert_fail@plt+0x216c0>
   32b54:	ldr	r0, [sp, #16]
   32b58:	ldrb	r0, [r0, #52]	; 0x34
   32b5c:	ubfx	r0, r0, #4, #1
   32b60:	and	r0, r0, #255	; 0xff
   32b64:	cmp	r0, #0
   32b68:	beq	32bcc <__assert_fail@plt+0x21738>
   32b6c:	ldr	r0, [sp, #16]
   32b70:	ldrb	r0, [r0, #52]	; 0x34
   32b74:	lsr	r0, r0, #7
   32b78:	and	r0, r0, #255	; 0xff
   32b7c:	cmp	r0, #0
   32b80:	beq	32b9c <__assert_fail@plt+0x21708>
   32b84:	ldr	r0, [fp, #-32]	; 0xffffffe0
   32b88:	ldr	r1, [sp, #16]
   32b8c:	ldr	r2, [sp, #20]
   32b90:	bl	32e50 <__assert_fail@plt+0x219bc>
   32b94:	cmp	r0, #0
   32b98:	beq	32bc8 <__assert_fail@plt+0x21734>
   32b9c:	ldrb	r0, [fp, #-33]	; 0xffffffdf
   32ba0:	tst	r0, #1
   32ba4:	bne	32bb4 <__assert_fail@plt+0x21720>
   32ba8:	ldr	r0, [sp, #20]
   32bac:	str	r0, [fp, #-28]	; 0xffffffe4
   32bb0:	b	32e44 <__assert_fail@plt+0x219b0>
   32bb4:	ldr	r0, [sp, #20]
   32bb8:	str	r0, [sp, #24]
   32bbc:	movw	r0, #1
   32bc0:	str	r0, [sp, #28]
   32bc4:	b	32bc8 <__assert_fail@plt+0x21734>
   32bc8:	b	32bcc <__assert_fail@plt+0x21738>
   32bcc:	b	32bd0 <__assert_fail@plt+0x2173c>
   32bd0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   32bd4:	ldr	r0, [r0, #56]	; 0x38
   32bd8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   32bdc:	ldr	r1, [r1, #40]	; 0x28
   32be0:	cmp	r0, r1
   32be4:	movw	r0, #0
   32be8:	movle	r0, #1
   32bec:	mvn	r1, #0
   32bf0:	eor	r0, r0, r1
   32bf4:	tst	r0, #1
   32bf8:	beq	32e18 <__assert_fail@plt+0x21984>
   32bfc:	ldr	r0, [sp, #16]
   32c00:	str	r0, [sp, #4]
   32c04:	ldr	r0, [fp, #-32]	; 0xffffffe0
   32c08:	ldr	r0, [r0, #40]	; 0x28
   32c0c:	add	r0, r0, #1
   32c10:	str	r0, [sp]
   32c14:	ldr	r0, [sp]
   32c18:	ldr	r1, [fp, #-32]	; 0xffffffe0
   32c1c:	ldr	r1, [r1, #36]	; 0x24
   32c20:	cmp	r0, r1
   32c24:	blt	32c40 <__assert_fail@plt+0x217ac>
   32c28:	ldr	r0, [fp, #-32]	; 0xffffffe0
   32c2c:	ldr	r0, [r0, #36]	; 0x24
   32c30:	ldr	r1, [fp, #-32]	; 0xffffffe0
   32c34:	ldr	r1, [r1, #48]	; 0x30
   32c38:	cmp	r0, r1
   32c3c:	blt	32c6c <__assert_fail@plt+0x217d8>
   32c40:	ldr	r0, [sp]
   32c44:	ldr	r1, [fp, #-32]	; 0xffffffe0
   32c48:	ldr	r1, [r1, #28]
   32c4c:	cmp	r0, r1
   32c50:	blt	32cac <__assert_fail@plt+0x21818>
   32c54:	ldr	r0, [fp, #-32]	; 0xffffffe0
   32c58:	ldr	r0, [r0, #28]
   32c5c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   32c60:	ldr	r1, [r1, #48]	; 0x30
   32c64:	cmp	r0, r1
   32c68:	bge	32cac <__assert_fail@plt+0x21818>
   32c6c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   32c70:	ldr	r1, [sp]
   32c74:	add	r1, r1, #1
   32c78:	bl	34198 <__assert_fail@plt+0x22d04>
   32c7c:	str	r0, [sp, #32]
   32c80:	ldr	r0, [sp, #32]
   32c84:	cmp	r0, #0
   32c88:	beq	32ca8 <__assert_fail@plt+0x21814>
   32c8c:	ldr	r0, [sp, #32]
   32c90:	cmp	r0, #12
   32c94:	bne	32c9c <__assert_fail@plt+0x21808>
   32c98:	b	32c9c <__assert_fail@plt+0x21808>
   32c9c:	mvn	r0, #1
   32ca0:	str	r0, [fp, #-28]	; 0xffffffe4
   32ca4:	b	32e44 <__assert_fail@plt+0x219b0>
   32ca8:	b	32cac <__assert_fail@plt+0x21818>
   32cac:	ldr	r1, [fp, #-32]	; 0xffffffe0
   32cb0:	ldr	r2, [sp, #16]
   32cb4:	add	r0, sp, #32
   32cb8:	bl	343b0 <__assert_fail@plt+0x22f1c>
   32cbc:	str	r0, [sp, #16]
   32cc0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   32cc4:	ldr	r0, [r0, #100]	; 0x64
   32cc8:	movw	r1, #0
   32ccc:	cmp	r0, r1
   32cd0:	beq	32ce8 <__assert_fail@plt+0x21854>
   32cd4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   32cd8:	ldr	r2, [sp, #16]
   32cdc:	add	r0, sp, #32
   32ce0:	bl	3453c <__assert_fail@plt+0x230a8>
   32ce4:	str	r0, [sp, #16]
   32ce8:	ldr	r0, [sp, #16]
   32cec:	movw	r1, #0
   32cf0:	cmp	r0, r1
   32cf4:	bne	32d60 <__assert_fail@plt+0x218cc>
   32cf8:	ldr	r0, [sp, #32]
   32cfc:	cmp	r0, #0
   32d00:	beq	32d10 <__assert_fail@plt+0x2187c>
   32d04:	mvn	r0, #1
   32d08:	str	r0, [fp, #-28]	; 0xffffffe4
   32d0c:	b	32e44 <__assert_fail@plt+0x219b0>
   32d10:	ldr	r0, [fp, #-32]	; 0xffffffe0
   32d14:	ldr	r0, [r0, #100]	; 0x64
   32d18:	movw	r1, #0
   32d1c:	cmp	r0, r1
   32d20:	beq	32d58 <__assert_fail@plt+0x218c4>
   32d24:	ldr	r0, [sp, #28]
   32d28:	cmp	r0, #0
   32d2c:	beq	32d3c <__assert_fail@plt+0x218a8>
   32d30:	ldrb	r0, [fp, #-33]	; 0xffffffdf
   32d34:	tst	r0, #1
   32d38:	beq	32d58 <__assert_fail@plt+0x218c4>
   32d3c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   32d40:	add	r0, sp, #32
   32d44:	bl	347b8 <__assert_fail@plt+0x23324>
   32d48:	str	r0, [sp, #16]
   32d4c:	movw	r1, #0
   32d50:	cmp	r0, r1
   32d54:	bne	32d5c <__assert_fail@plt+0x218c8>
   32d58:	b	32e18 <__assert_fail@plt+0x21984>
   32d5c:	b	32d60 <__assert_fail@plt+0x218cc>
   32d60:	ldrb	r0, [sp, #15]
   32d64:	tst	r0, #1
   32d68:	beq	32d94 <__assert_fail@plt+0x21900>
   32d6c:	ldr	r0, [sp, #4]
   32d70:	ldr	r1, [sp, #16]
   32d74:	cmp	r0, r1
   32d78:	bne	32d88 <__assert_fail@plt+0x218f4>
   32d7c:	ldr	r0, [sp]
   32d80:	str	r0, [sp, #8]
   32d84:	b	32d90 <__assert_fail@plt+0x218fc>
   32d88:	movw	r0, #0
   32d8c:	strb	r0, [sp, #15]
   32d90:	b	32d94 <__assert_fail@plt+0x21900>
   32d94:	ldr	r0, [sp, #16]
   32d98:	ldrb	r0, [r0, #52]	; 0x34
   32d9c:	ubfx	r0, r0, #4, #1
   32da0:	and	r0, r0, #255	; 0xff
   32da4:	cmp	r0, #0
   32da8:	beq	32e14 <__assert_fail@plt+0x21980>
   32dac:	ldr	r0, [sp, #16]
   32db0:	ldrb	r0, [r0, #52]	; 0x34
   32db4:	lsr	r0, r0, #7
   32db8:	and	r0, r0, #255	; 0xff
   32dbc:	cmp	r0, #0
   32dc0:	beq	32de0 <__assert_fail@plt+0x2194c>
   32dc4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   32dc8:	ldr	r1, [sp, #16]
   32dcc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   32dd0:	ldr	r2, [r2, #40]	; 0x28
   32dd4:	bl	32e50 <__assert_fail@plt+0x219bc>
   32dd8:	cmp	r0, #0
   32ddc:	beq	32e10 <__assert_fail@plt+0x2197c>
   32de0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   32de4:	ldr	r0, [r0, #40]	; 0x28
   32de8:	str	r0, [sp, #24]
   32dec:	movw	r0, #1
   32df0:	str	r0, [sp, #28]
   32df4:	movw	r0, #0
   32df8:	str	r0, [sp, #40]	; 0x28
   32dfc:	ldrb	r0, [fp, #-33]	; 0xffffffdf
   32e00:	tst	r0, #1
   32e04:	bne	32e0c <__assert_fail@plt+0x21978>
   32e08:	b	32e18 <__assert_fail@plt+0x21984>
   32e0c:	b	32e10 <__assert_fail@plt+0x2197c>
   32e10:	b	32e14 <__assert_fail@plt+0x21980>
   32e14:	b	32bd0 <__assert_fail@plt+0x2173c>
   32e18:	ldr	r0, [sp, #40]	; 0x28
   32e1c:	movw	r1, #0
   32e20:	cmp	r0, r1
   32e24:	beq	32e3c <__assert_fail@plt+0x219a8>
   32e28:	ldr	r0, [sp, #8]
   32e2c:	ldr	r1, [sp, #40]	; 0x28
   32e30:	ldr	r2, [r1]
   32e34:	add	r0, r2, r0
   32e38:	str	r0, [r1]
   32e3c:	ldr	r0, [sp, #24]
   32e40:	str	r0, [fp, #-28]	; 0xffffffe4
   32e44:	ldr	r0, [fp, #-28]	; 0xffffffe4
   32e48:	mov	sp, fp
   32e4c:	pop	{fp, pc}
   32e50:	push	{fp, lr}
   32e54:	mov	fp, sp
   32e58:	sub	sp, sp, #24
   32e5c:	str	r0, [fp, #-8]
   32e60:	str	r1, [sp, #12]
   32e64:	str	r2, [sp, #8]
   32e68:	ldr	r0, [sp, #12]
   32e6c:	ldrb	r0, [r0, #52]	; 0x34
   32e70:	ubfx	r0, r0, #4, #1
   32e74:	and	r0, r0, #255	; 0xff
   32e78:	cmp	r0, #0
   32e7c:	beq	32e84 <__assert_fail@plt+0x219f0>
   32e80:	b	32e84 <__assert_fail@plt+0x219f0>
   32e84:	ldr	r0, [fp, #-8]
   32e88:	ldr	r1, [sp, #8]
   32e8c:	ldr	r2, [fp, #-8]
   32e90:	ldr	r2, [r2, #88]	; 0x58
   32e94:	bl	3378c <__assert_fail@plt+0x222f8>
   32e98:	str	r0, [sp]
   32e9c:	movw	r0, #0
   32ea0:	str	r0, [sp, #4]
   32ea4:	ldr	r0, [sp, #4]
   32ea8:	ldr	r1, [sp, #12]
   32eac:	ldr	r1, [r1, #8]
   32eb0:	cmp	r0, r1
   32eb4:	bge	32f14 <__assert_fail@plt+0x21a80>
   32eb8:	ldr	r0, [fp, #-8]
   32ebc:	ldr	r0, [r0, #84]	; 0x54
   32ec0:	ldr	r1, [sp, #12]
   32ec4:	ldr	r1, [r1, #12]
   32ec8:	ldr	r2, [sp, #4]
   32ecc:	add	r1, r1, r2, lsl #2
   32ed0:	ldr	r1, [r1]
   32ed4:	ldr	r2, [sp]
   32ed8:	bl	38c54 <__assert_fail@plt+0x277c0>
   32edc:	tst	r0, #1
   32ee0:	beq	32f00 <__assert_fail@plt+0x21a6c>
   32ee4:	ldr	r0, [sp, #12]
   32ee8:	ldr	r0, [r0, #12]
   32eec:	ldr	r1, [sp, #4]
   32ef0:	add	r0, r0, r1, lsl #2
   32ef4:	ldr	r0, [r0]
   32ef8:	str	r0, [fp, #-4]
   32efc:	b	32f1c <__assert_fail@plt+0x21a88>
   32f00:	b	32f04 <__assert_fail@plt+0x21a70>
   32f04:	ldr	r0, [sp, #4]
   32f08:	add	r0, r0, #1
   32f0c:	str	r0, [sp, #4]
   32f10:	b	32ea4 <__assert_fail@plt+0x21a10>
   32f14:	movw	r0, #0
   32f18:	str	r0, [fp, #-4]
   32f1c:	ldr	r0, [fp, #-4]
   32f20:	mov	sp, fp
   32f24:	pop	{fp, pc}
   32f28:	push	{fp, lr}
   32f2c:	mov	fp, sp
   32f30:	sub	sp, sp, #80	; 0x50
   32f34:	str	r0, [fp, #-8]
   32f38:	ldr	r0, [fp, #-8]
   32f3c:	ldr	r0, [r0, #84]	; 0x54
   32f40:	str	r0, [fp, #-12]
   32f44:	movw	r0, #0
   32f48:	str	r0, [fp, #-32]	; 0xffffffe0
   32f4c:	ldr	r1, [fp, #-8]
   32f50:	ldr	r1, [r1, #100]	; 0x64
   32f54:	cmp	r1, r0
   32f58:	beq	32f60 <__assert_fail@plt+0x21acc>
   32f5c:	b	32f60 <__assert_fail@plt+0x21acc>
   32f60:	ldr	r0, [pc, #776]	; 33270 <__assert_fail@plt+0x21ddc>
   32f64:	ldr	r1, [fp, #-8]
   32f68:	ldr	r1, [r1, #92]	; 0x5c
   32f6c:	str	r1, [fp, #-20]	; 0xffffffec
   32f70:	ldr	r1, [fp, #-8]
   32f74:	ldr	r1, [r1, #96]	; 0x60
   32f78:	str	r1, [fp, #-16]
   32f7c:	ldr	r1, [fp, #-20]	; 0xffffffec
   32f80:	cmp	r0, r1
   32f84:	bhi	32f94 <__assert_fail@plt+0x21b00>
   32f88:	movw	r0, #12
   32f8c:	str	r0, [fp, #-4]
   32f90:	b	33264 <__assert_fail@plt+0x21dd0>
   32f94:	ldr	r0, [fp, #-20]	; 0xffffffec
   32f98:	add	r0, r0, #1
   32f9c:	lsl	r0, r0, #2
   32fa0:	bl	3fbd8 <__assert_fail@plt+0x2e744>
   32fa4:	str	r0, [fp, #-28]	; 0xffffffe4
   32fa8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   32fac:	movw	lr, #0
   32fb0:	cmp	r0, lr
   32fb4:	bne	32fc4 <__assert_fail@plt+0x21b30>
   32fb8:	movw	r0, #12
   32fbc:	str	r0, [fp, #-24]	; 0xffffffe8
   32fc0:	b	3324c <__assert_fail@plt+0x21db8>
   32fc4:	ldr	r0, [fp, #-12]
   32fc8:	ldr	r0, [r0, #76]	; 0x4c
   32fcc:	cmp	r0, #0
   32fd0:	beq	3319c <__assert_fail@plt+0x21d08>
   32fd4:	ldr	r0, [fp, #-20]	; 0xffffffec
   32fd8:	add	r0, r0, #1
   32fdc:	lsl	r0, r0, #2
   32fe0:	bl	3fbd8 <__assert_fail@plt+0x2e744>
   32fe4:	str	r0, [fp, #-32]	; 0xffffffe0
   32fe8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   32fec:	movw	lr, #0
   32ff0:	cmp	r0, lr
   32ff4:	bne	33004 <__assert_fail@plt+0x21b70>
   32ff8:	movw	r0, #12
   32ffc:	str	r0, [fp, #-24]	; 0xffffffe8
   33000:	b	3324c <__assert_fail@plt+0x21db8>
   33004:	b	33008 <__assert_fail@plt+0x21b74>
   33008:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3300c:	ldr	r1, [fp, #-20]	; 0xffffffec
   33010:	add	r1, r1, #1
   33014:	lsl	r2, r1, #2
   33018:	movw	r1, #0
   3301c:	and	r1, r1, #255	; 0xff
   33020:	bl	113d4 <memset@plt>
   33024:	ldr	r1, [fp, #-28]	; 0xffffffe4
   33028:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3302c:	ldr	r3, [fp, #-16]
   33030:	ldr	r0, [fp, #-20]	; 0xffffffec
   33034:	add	lr, sp, #20
   33038:	str	r0, [sp, #16]
   3303c:	mov	r0, lr
   33040:	ldr	lr, [sp, #16]
   33044:	str	lr, [sp]
   33048:	bl	38d84 <__assert_fail@plt+0x278f0>
   3304c:	ldr	r0, [fp, #-8]
   33050:	add	r1, sp, #20
   33054:	bl	38df8 <__assert_fail@plt+0x27964>
   33058:	str	r0, [fp, #-24]	; 0xffffffe8
   3305c:	ldr	r0, [sp, #44]	; 0x2c
   33060:	bl	138a4 <__assert_fail@plt+0x2410>
   33064:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33068:	cmp	r0, #0
   3306c:	beq	33074 <__assert_fail@plt+0x21be0>
   33070:	b	3324c <__assert_fail@plt+0x21db8>
   33074:	ldr	r0, [fp, #-28]	; 0xffffffe4
   33078:	ldr	r0, [r0]
   3307c:	movw	r1, #0
   33080:	cmp	r0, r1
   33084:	bne	3309c <__assert_fail@plt+0x21c08>
   33088:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3308c:	ldr	r0, [r0]
   33090:	movw	r1, #0
   33094:	cmp	r0, r1
   33098:	beq	330a0 <__assert_fail@plt+0x21c0c>
   3309c:	b	3315c <__assert_fail@plt+0x21cc8>
   330a0:	b	330a4 <__assert_fail@plt+0x21c10>
   330a4:	ldr	r0, [fp, #-20]	; 0xffffffec
   330a8:	mvn	r1, #0
   330ac:	add	r0, r0, r1
   330b0:	str	r0, [fp, #-20]	; 0xffffffec
   330b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   330b8:	cmp	r0, #0
   330bc:	bge	330cc <__assert_fail@plt+0x21c38>
   330c0:	movw	r0, #1
   330c4:	str	r0, [fp, #-24]	; 0xffffffe8
   330c8:	b	3324c <__assert_fail@plt+0x21db8>
   330cc:	b	330d0 <__assert_fail@plt+0x21c3c>
   330d0:	ldr	r0, [fp, #-8]
   330d4:	ldr	r0, [r0, #100]	; 0x64
   330d8:	ldr	r1, [fp, #-20]	; 0xffffffec
   330dc:	add	r0, r0, r1, lsl #2
   330e0:	ldr	r0, [r0]
   330e4:	movw	r1, #0
   330e8:	cmp	r0, r1
   330ec:	movw	r0, #1
   330f0:	str	r0, [sp, #12]
   330f4:	beq	3312c <__assert_fail@plt+0x21c98>
   330f8:	ldr	r0, [fp, #-8]
   330fc:	ldr	r0, [r0, #100]	; 0x64
   33100:	ldr	r1, [fp, #-20]	; 0xffffffec
   33104:	ldr	r0, [r0, r1, lsl #2]
   33108:	ldrb	r0, [r0, #52]	; 0x34
   3310c:	ubfx	r0, r0, #4, #1
   33110:	and	r0, r0, #255	; 0xff
   33114:	cmp	r0, #0
   33118:	movw	r0, #0
   3311c:	movne	r0, #1
   33120:	mvn	r1, #0
   33124:	eor	r0, r0, r1
   33128:	str	r0, [sp, #12]
   3312c:	ldr	r0, [sp, #12]
   33130:	tst	r0, #1
   33134:	bne	330a4 <__assert_fail@plt+0x21c10>
   33138:	ldr	r0, [fp, #-8]
   3313c:	ldr	r1, [r0, #100]	; 0x64
   33140:	ldr	r2, [fp, #-20]	; 0xffffffec
   33144:	add	r1, r1, r2, lsl #2
   33148:	ldr	r1, [r1]
   3314c:	ldr	r2, [fp, #-20]	; 0xffffffec
   33150:	bl	32e50 <__assert_fail@plt+0x219bc>
   33154:	str	r0, [fp, #-16]
   33158:	b	33008 <__assert_fail@plt+0x21b74>
   3315c:	ldr	r0, [fp, #-12]
   33160:	ldr	r1, [fp, #-28]	; 0xffffffe4
   33164:	ldr	r2, [fp, #-32]	; 0xffffffe0
   33168:	ldr	r3, [fp, #-20]	; 0xffffffec
   3316c:	add	r3, r3, #1
   33170:	bl	38ff0 <__assert_fail@plt+0x27b5c>
   33174:	str	r0, [fp, #-24]	; 0xffffffe8
   33178:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3317c:	bl	138a4 <__assert_fail@plt+0x2410>
   33180:	movw	r0, #0
   33184:	str	r0, [fp, #-32]	; 0xffffffe0
   33188:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3318c:	cmp	r0, #0
   33190:	beq	33198 <__assert_fail@plt+0x21d04>
   33194:	b	3324c <__assert_fail@plt+0x21db8>
   33198:	b	33210 <__assert_fail@plt+0x21d7c>
   3319c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   331a0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   331a4:	ldr	r3, [fp, #-16]
   331a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   331ac:	add	ip, sp, #20
   331b0:	str	r0, [sp, #8]
   331b4:	mov	r0, ip
   331b8:	ldr	ip, [sp, #8]
   331bc:	str	ip, [sp]
   331c0:	bl	38d84 <__assert_fail@plt+0x278f0>
   331c4:	ldr	r0, [fp, #-8]
   331c8:	add	r1, sp, #20
   331cc:	bl	38df8 <__assert_fail@plt+0x27964>
   331d0:	str	r0, [fp, #-24]	; 0xffffffe8
   331d4:	ldr	r0, [sp, #44]	; 0x2c
   331d8:	bl	138a4 <__assert_fail@plt+0x2410>
   331dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   331e0:	cmp	r0, #0
   331e4:	beq	331ec <__assert_fail@plt+0x21d58>
   331e8:	b	3324c <__assert_fail@plt+0x21db8>
   331ec:	ldr	r0, [fp, #-28]	; 0xffffffe4
   331f0:	ldr	r0, [r0]
   331f4:	movw	r1, #0
   331f8:	cmp	r0, r1
   331fc:	bne	3320c <__assert_fail@plt+0x21d78>
   33200:	movw	r0, #1
   33204:	str	r0, [fp, #-24]	; 0xffffffe8
   33208:	b	3324c <__assert_fail@plt+0x21db8>
   3320c:	b	33210 <__assert_fail@plt+0x21d7c>
   33210:	ldr	r0, [fp, #-8]
   33214:	ldr	r0, [r0, #100]	; 0x64
   33218:	bl	138a4 <__assert_fail@plt+0x2410>
   3321c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   33220:	ldr	lr, [fp, #-8]
   33224:	str	r0, [lr, #100]	; 0x64
   33228:	movw	r0, #0
   3322c:	str	r0, [fp, #-28]	; 0xffffffe4
   33230:	ldr	lr, [fp, #-16]
   33234:	ldr	r1, [fp, #-8]
   33238:	str	lr, [r1, #96]	; 0x60
   3323c:	ldr	r1, [fp, #-20]	; 0xffffffec
   33240:	ldr	lr, [fp, #-8]
   33244:	str	r1, [lr, #92]	; 0x5c
   33248:	str	r0, [fp, #-24]	; 0xffffffe8
   3324c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   33250:	bl	138a4 <__assert_fail@plt+0x2410>
   33254:	ldr	r0, [fp, #-32]	; 0xffffffe0
   33258:	bl	138a4 <__assert_fail@plt+0x2410>
   3325c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33260:	str	r0, [fp, #-4]
   33264:	ldr	r0, [fp, #-4]
   33268:	mov	sp, fp
   3326c:	pop	{fp, pc}
   33270:	svccc	0x00ffffff
   33274:	push	{fp, lr}
   33278:	mov	fp, sp
   3327c:	sub	sp, sp, #24
   33280:	str	r0, [fp, #-4]
   33284:	movw	r0, #0
   33288:	str	r0, [fp, #-8]
   3328c:	ldr	r0, [fp, #-8]
   33290:	ldr	r1, [fp, #-4]
   33294:	ldr	r1, [r1, #124]	; 0x7c
   33298:	cmp	r0, r1
   3329c:	bge	33364 <__assert_fail@plt+0x21ed0>
   332a0:	ldr	r0, [fp, #-4]
   332a4:	ldr	r0, [r0, #132]	; 0x84
   332a8:	ldr	r1, [fp, #-8]
   332ac:	add	r0, r0, r1, lsl #2
   332b0:	ldr	r0, [r0]
   332b4:	str	r0, [sp, #8]
   332b8:	movw	r0, #0
   332bc:	str	r0, [sp, #12]
   332c0:	ldr	r0, [sp, #12]
   332c4:	ldr	r1, [sp, #8]
   332c8:	ldr	r1, [r1, #16]
   332cc:	cmp	r0, r1
   332d0:	bge	33310 <__assert_fail@plt+0x21e7c>
   332d4:	ldr	r0, [sp, #8]
   332d8:	ldr	r0, [r0, #20]
   332dc:	ldr	r1, [sp, #12]
   332e0:	add	r0, r0, r1, lsl #2
   332e4:	ldr	r0, [r0]
   332e8:	str	r0, [sp, #4]
   332ec:	ldr	r0, [sp, #4]
   332f0:	ldr	r0, [r0, #16]
   332f4:	bl	138a4 <__assert_fail@plt+0x2410>
   332f8:	ldr	r0, [sp, #4]
   332fc:	bl	138a4 <__assert_fail@plt+0x2410>
   33300:	ldr	r0, [sp, #12]
   33304:	add	r0, r0, #1
   33308:	str	r0, [sp, #12]
   3330c:	b	332c0 <__assert_fail@plt+0x21e2c>
   33310:	ldr	r0, [sp, #8]
   33314:	ldr	r0, [r0, #20]
   33318:	bl	138a4 <__assert_fail@plt+0x2410>
   3331c:	ldr	r0, [sp, #8]
   33320:	ldr	r0, [r0, #8]
   33324:	movw	lr, #0
   33328:	cmp	r0, lr
   3332c:	beq	3334c <__assert_fail@plt+0x21eb8>
   33330:	ldr	r0, [sp, #8]
   33334:	ldr	r0, [r0, #8]
   33338:	ldr	r0, [r0, #8]
   3333c:	bl	138a4 <__assert_fail@plt+0x2410>
   33340:	ldr	r0, [sp, #8]
   33344:	ldr	r0, [r0, #8]
   33348:	bl	138a4 <__assert_fail@plt+0x2410>
   3334c:	ldr	r0, [sp, #8]
   33350:	bl	138a4 <__assert_fail@plt+0x2410>
   33354:	ldr	r0, [fp, #-8]
   33358:	add	r0, r0, #1
   3335c:	str	r0, [fp, #-8]
   33360:	b	3328c <__assert_fail@plt+0x21df8>
   33364:	ldr	r0, [fp, #-4]
   33368:	movw	r1, #0
   3336c:	str	r1, [r0, #124]	; 0x7c
   33370:	ldr	r0, [fp, #-4]
   33374:	str	r1, [r0, #108]	; 0x6c
   33378:	mov	sp, fp
   3337c:	pop	{fp, pc}
   33380:	push	{r4, sl, fp, lr}
   33384:	add	fp, sp, #8
   33388:	sub	sp, sp, #248	; 0xf8
   3338c:	ldr	ip, [fp, #8]
   33390:	str	r0, [fp, #-16]
   33394:	str	r1, [fp, #-20]	; 0xffffffec
   33398:	str	r2, [fp, #-24]	; 0xffffffe8
   3339c:	str	r3, [fp, #-28]	; 0xffffffe4
   333a0:	and	r0, ip, #1
   333a4:	strb	r0, [fp, #-29]	; 0xffffffe3
   333a8:	ldr	r0, [fp, #-16]
   333ac:	ldr	r0, [r0]
   333b0:	str	r0, [fp, #-36]	; 0xffffffdc
   333b4:	movw	r0, #23216	; 0x5ab0
   333b8:	movt	r0, #4
   333bc:	ldr	r1, [r0]
   333c0:	str	r1, [fp, #-72]	; 0xffffffb8
   333c4:	ldr	r1, [r0, #4]
   333c8:	str	r1, [fp, #-68]	; 0xffffffbc
   333cc:	ldr	r0, [r0, #8]
   333d0:	str	r0, [fp, #-64]	; 0xffffffc0
   333d4:	add	r0, sp, #44	; 0x2c
   333d8:	bl	3ac10 <__assert_fail@plt+0x2977c>
   333dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   333e0:	cmp	r0, #1
   333e4:	bls	333ec <__assert_fail@plt+0x21f58>
   333e8:	b	333ec <__assert_fail@plt+0x21f58>
   333ec:	ldr	r0, [fp, #-20]	; 0xffffffec
   333f0:	ldr	r0, [r0, #100]	; 0x64
   333f4:	movw	r1, #0
   333f8:	cmp	r0, r1
   333fc:	beq	33404 <__assert_fail@plt+0x21f70>
   33400:	b	33404 <__assert_fail@plt+0x21f70>
   33404:	ldrb	r0, [fp, #-29]	; 0xffffffe3
   33408:	tst	r0, #1
   3340c:	beq	33458 <__assert_fail@plt+0x21fc4>
   33410:	sub	r0, fp, #72	; 0x48
   33414:	str	r0, [fp, #-60]	; 0xffffffc4
   33418:	ldr	r0, [fp, #-60]	; 0xffffffc4
   3341c:	ldr	r0, [r0, #4]
   33420:	movw	r1, #24
   33424:	mul	r0, r0, r1
   33428:	bl	3fbd8 <__assert_fail@plt+0x2e744>
   3342c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   33430:	str	r0, [r1, #8]
   33434:	ldr	r0, [fp, #-60]	; 0xffffffc4
   33438:	ldr	r0, [r0, #8]
   3343c:	movw	r1, #0
   33440:	cmp	r0, r1
   33444:	bne	33454 <__assert_fail@plt+0x21fc0>
   33448:	movw	r0, #12
   3344c:	str	r0, [fp, #-12]
   33450:	b	33748 <__assert_fail@plt+0x222b4>
   33454:	b	33460 <__assert_fail@plt+0x21fcc>
   33458:	movw	r0, #0
   3345c:	str	r0, [fp, #-60]	; 0xffffffc4
   33460:	ldr	r0, [fp, #-36]	; 0xffffffdc
   33464:	ldr	r0, [r0, #72]	; 0x48
   33468:	str	r0, [fp, #-44]	; 0xffffffd4
   3346c:	sub	r0, fp, #56	; 0x38
   33470:	movw	r1, #0
   33474:	and	r1, r1, #255	; 0xff
   33478:	movw	r2, #12
   3347c:	bl	113d4 <memset@plt>
   33480:	ldr	r1, [fp, #-24]	; 0xffffffe8
   33484:	add	r0, sp, #44	; 0x2c
   33488:	bl	3ac48 <__assert_fail@plt+0x297b4>
   3348c:	tst	r0, #1
   33490:	bne	334b4 <__assert_fail@plt+0x22020>
   33494:	add	r0, sp, #44	; 0x2c
   33498:	bl	3ad08 <__assert_fail@plt+0x29874>
   3349c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   334a0:	bl	3ad44 <__assert_fail@plt+0x298b0>
   334a4:	movw	lr, #12
   334a8:	str	lr, [fp, #-12]
   334ac:	str	r0, [sp, #32]
   334b0:	b	33748 <__assert_fail@plt+0x222b4>
   334b4:	add	r0, sp, #44	; 0x2c
   334b8:	bl	3ade8 <__assert_fail@plt+0x29954>
   334bc:	str	r0, [sp, #40]	; 0x28
   334c0:	ldr	r0, [sp, #40]	; 0x28
   334c4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   334c8:	ldr	lr, [fp, #-24]	; 0xffffffe8
   334cc:	lsl	r2, lr, #3
   334d0:	bl	11248 <memcpy@plt>
   334d4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   334d8:	ldr	r0, [r0]
   334dc:	str	r0, [fp, #-40]	; 0xffffffd8
   334e0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   334e4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   334e8:	ldr	r1, [r1, #4]
   334ec:	cmp	r0, r1
   334f0:	bgt	3372c <__assert_fail@plt+0x22298>
   334f4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   334f8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   334fc:	ldr	r2, [sp, #40]	; 0x28
   33500:	ldr	r3, [fp, #-44]	; 0xffffffd4
   33504:	ldr	ip, [fp, #-40]	; 0xffffffd8
   33508:	ldr	lr, [fp, #-24]	; 0xffffffe8
   3350c:	str	ip, [sp]
   33510:	str	lr, [sp, #4]
   33514:	bl	3ae00 <__assert_fail@plt+0x2996c>
   33518:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3351c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   33520:	ldr	r1, [r1, #4]
   33524:	cmp	r0, r1
   33528:	bne	33540 <__assert_fail@plt+0x220ac>
   3352c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   33530:	ldr	r1, [fp, #-20]	; 0xffffffec
   33534:	ldr	r1, [r1, #96]	; 0x60
   33538:	cmp	r0, r1
   3353c:	beq	33564 <__assert_fail@plt+0x220d0>
   33540:	ldr	r0, [fp, #-60]	; 0xffffffc4
   33544:	movw	r1, #0
   33548:	cmp	r0, r1
   3354c:	beq	33644 <__assert_fail@plt+0x221b0>
   33550:	ldr	r1, [fp, #-44]	; 0xffffffd4
   33554:	sub	r0, fp, #56	; 0x38
   33558:	bl	30e4c <__assert_fail@plt+0x1f9b8>
   3355c:	cmp	r0, #0
   33560:	beq	33644 <__assert_fail@plt+0x221b0>
   33564:	mvn	r0, #0
   33568:	str	r0, [fp, #-44]	; 0xffffffd4
   3356c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   33570:	movw	r1, #0
   33574:	cmp	r0, r1
   33578:	beq	33614 <__assert_fail@plt+0x22180>
   3357c:	movw	r0, #0
   33580:	str	r0, [sp, #36]	; 0x24
   33584:	ldr	r0, [sp, #36]	; 0x24
   33588:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3358c:	cmp	r0, r1
   33590:	bcs	33610 <__assert_fail@plt+0x2217c>
   33594:	ldr	r0, [fp, #-28]	; 0xffffffe4
   33598:	ldr	r1, [sp, #36]	; 0x24
   3359c:	add	r0, r0, r1, lsl #3
   335a0:	ldr	r0, [r0]
   335a4:	cmn	r0, #1
   335a8:	ble	335fc <__assert_fail@plt+0x22168>
   335ac:	ldr	r0, [fp, #-28]	; 0xffffffe4
   335b0:	ldr	r1, [sp, #36]	; 0x24
   335b4:	add	r0, r0, r1, lsl #3
   335b8:	ldr	r0, [r0, #4]
   335bc:	cmn	r0, #1
   335c0:	bne	335fc <__assert_fail@plt+0x22168>
   335c4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   335c8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   335cc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   335d0:	ldr	r1, [sp, #40]	; 0x28
   335d4:	sub	ip, fp, #40	; 0x28
   335d8:	str	r1, [sp, #28]
   335dc:	mov	r1, ip
   335e0:	ldr	ip, [sp, #28]
   335e4:	str	ip, [sp]
   335e8:	sub	lr, fp, #56	; 0x38
   335ec:	str	lr, [sp, #4]
   335f0:	bl	3afa8 <__assert_fail@plt+0x29b14>
   335f4:	str	r0, [fp, #-44]	; 0xffffffd4
   335f8:	b	33610 <__assert_fail@plt+0x2217c>
   335fc:	b	33600 <__assert_fail@plt+0x2216c>
   33600:	ldr	r0, [sp, #36]	; 0x24
   33604:	add	r0, r0, #1
   33608:	str	r0, [sp, #36]	; 0x24
   3360c:	b	33584 <__assert_fail@plt+0x220f0>
   33610:	b	33614 <__assert_fail@plt+0x22180>
   33614:	ldr	r0, [fp, #-44]	; 0xffffffd4
   33618:	cmp	r0, #0
   3361c:	bge	33640 <__assert_fail@plt+0x221ac>
   33620:	ldr	r0, [fp, #-48]	; 0xffffffd0
   33624:	bl	138a4 <__assert_fail@plt+0x2410>
   33628:	add	r0, sp, #44	; 0x2c
   3362c:	bl	3ad08 <__assert_fail@plt+0x29874>
   33630:	ldr	r0, [fp, #-60]	; 0xffffffc4
   33634:	bl	3ad44 <__assert_fail@plt+0x298b0>
   33638:	str	r0, [fp, #-12]
   3363c:	b	33748 <__assert_fail@plt+0x222b4>
   33640:	b	33644 <__assert_fail@plt+0x221b0>
   33644:	ldr	r0, [fp, #-20]	; 0xffffffec
   33648:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3364c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   33650:	ldr	r3, [sp, #40]	; 0x28
   33654:	ldr	ip, [fp, #-44]	; 0xffffffd4
   33658:	ldr	lr, [fp, #-60]	; 0xffffffc4
   3365c:	sub	r4, fp, #40	; 0x28
   33660:	str	r4, [sp]
   33664:	str	ip, [sp, #4]
   33668:	sub	ip, fp, #56	; 0x38
   3366c:	str	ip, [sp, #8]
   33670:	str	lr, [sp, #12]
   33674:	bl	3b148 <__assert_fail@plt+0x29cb4>
   33678:	str	r0, [fp, #-44]	; 0xffffffd4
   3367c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   33680:	cmp	r0, #0
   33684:	bge	33728 <__assert_fail@plt+0x22294>
   33688:	ldr	r0, [fp, #-44]	; 0xffffffd4
   3368c:	cmn	r0, #2
   33690:	bne	336bc <__assert_fail@plt+0x22228>
   33694:	ldr	r0, [fp, #-48]	; 0xffffffd0
   33698:	bl	138a4 <__assert_fail@plt+0x2410>
   3369c:	add	r0, sp, #44	; 0x2c
   336a0:	bl	3ad08 <__assert_fail@plt+0x29874>
   336a4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   336a8:	bl	3ad44 <__assert_fail@plt+0x298b0>
   336ac:	movw	lr, #12
   336b0:	str	lr, [fp, #-12]
   336b4:	str	r0, [sp, #24]
   336b8:	b	33748 <__assert_fail@plt+0x222b4>
   336bc:	ldr	r0, [fp, #-60]	; 0xffffffc4
   336c0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   336c4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   336c8:	ldr	r1, [sp, #40]	; 0x28
   336cc:	sub	ip, fp, #40	; 0x28
   336d0:	str	r1, [sp, #20]
   336d4:	mov	r1, ip
   336d8:	ldr	ip, [sp, #20]
   336dc:	str	ip, [sp]
   336e0:	sub	lr, fp, #56	; 0x38
   336e4:	str	lr, [sp, #4]
   336e8:	bl	3afa8 <__assert_fail@plt+0x29b14>
   336ec:	str	r0, [fp, #-44]	; 0xffffffd4
   336f0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   336f4:	cmp	r0, #0
   336f8:	bge	33724 <__assert_fail@plt+0x22290>
   336fc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   33700:	bl	138a4 <__assert_fail@plt+0x2410>
   33704:	add	r0, sp, #44	; 0x2c
   33708:	bl	3ad08 <__assert_fail@plt+0x29874>
   3370c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   33710:	bl	3ad44 <__assert_fail@plt+0x298b0>
   33714:	movw	lr, #1
   33718:	str	lr, [fp, #-12]
   3371c:	str	r0, [sp, #16]
   33720:	b	33748 <__assert_fail@plt+0x222b4>
   33724:	b	33728 <__assert_fail@plt+0x22294>
   33728:	b	334e0 <__assert_fail@plt+0x2204c>
   3372c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   33730:	bl	138a4 <__assert_fail@plt+0x2410>
   33734:	add	r0, sp, #44	; 0x2c
   33738:	bl	3ad08 <__assert_fail@plt+0x29874>
   3373c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   33740:	bl	3ad44 <__assert_fail@plt+0x298b0>
   33744:	str	r0, [fp, #-12]
   33748:	ldr	r0, [fp, #-12]
   3374c:	sub	sp, fp, #8
   33750:	pop	{r4, sl, fp, pc}
   33754:	push	{fp, lr}
   33758:	mov	fp, sp
   3375c:	sub	sp, sp, #8
   33760:	str	r0, [sp, #4]
   33764:	ldr	r0, [sp, #4]
   33768:	bl	33274 <__assert_fail@plt+0x21de0>
   3376c:	ldr	r0, [sp, #4]
   33770:	ldr	r0, [r0, #132]	; 0x84
   33774:	bl	138a4 <__assert_fail@plt+0x2410>
   33778:	ldr	r0, [sp, #4]
   3377c:	ldr	r0, [r0, #116]	; 0x74
   33780:	bl	138a4 <__assert_fail@plt+0x2410>
   33784:	mov	sp, fp
   33788:	pop	{fp, pc}
   3378c:	push	{fp, lr}
   33790:	mov	fp, sp
   33794:	sub	sp, sp, #40	; 0x28
   33798:	str	r0, [fp, #-8]
   3379c:	str	r1, [fp, #-12]
   337a0:	str	r2, [fp, #-16]
   337a4:	ldr	r0, [fp, #-12]
   337a8:	cmp	r0, #0
   337ac:	bge	337c0 <__assert_fail@plt+0x2232c>
   337b0:	ldr	r0, [fp, #-8]
   337b4:	ldr	r0, [r0, #60]	; 0x3c
   337b8:	str	r0, [fp, #-4]
   337bc:	b	33980 <__assert_fail@plt+0x224ec>
   337c0:	ldr	r0, [fp, #-12]
   337c4:	ldr	r1, [fp, #-8]
   337c8:	ldr	r1, [r1, #48]	; 0x30
   337cc:	cmp	r0, r1
   337d0:	bne	337fc <__assert_fail@plt+0x22368>
   337d4:	ldr	r0, [fp, #-16]
   337d8:	and	r0, r0, #2
   337dc:	cmp	r0, #0
   337e0:	movw	r0, #0
   337e4:	movne	r0, #1
   337e8:	tst	r0, #1
   337ec:	movw	r0, #8
   337f0:	moveq	r0, #10
   337f4:	str	r0, [fp, #-4]
   337f8:	b	33980 <__assert_fail@plt+0x224ec>
   337fc:	ldr	r0, [fp, #-8]
   33800:	ldr	r0, [r0, #80]	; 0x50
   33804:	cmp	r0, #1
   33808:	ble	33904 <__assert_fail@plt+0x22470>
   3380c:	ldr	r0, [fp, #-12]
   33810:	str	r0, [sp, #12]
   33814:	ldr	r0, [fp, #-8]
   33818:	ldr	r0, [r0, #8]
   3381c:	ldr	r1, [sp, #12]
   33820:	add	r0, r0, r1, lsl #2
   33824:	ldr	r0, [r0]
   33828:	cmn	r0, #1
   3382c:	bne	33870 <__assert_fail@plt+0x223dc>
   33830:	ldr	r0, [sp, #12]
   33834:	cmp	r0, #0
   33838:	blt	33840 <__assert_fail@plt+0x223ac>
   3383c:	b	33840 <__assert_fail@plt+0x223ac>
   33840:	ldr	r0, [sp, #12]
   33844:	mvn	r1, #0
   33848:	add	r0, r0, r1
   3384c:	str	r0, [sp, #12]
   33850:	ldr	r0, [sp, #12]
   33854:	cmp	r0, #0
   33858:	bge	3386c <__assert_fail@plt+0x223d8>
   3385c:	ldr	r0, [fp, #-8]
   33860:	ldr	r0, [r0, #60]	; 0x3c
   33864:	str	r0, [fp, #-4]
   33868:	b	33980 <__assert_fail@plt+0x224ec>
   3386c:	b	33814 <__assert_fail@plt+0x22380>
   33870:	ldr	r0, [fp, #-8]
   33874:	ldr	r0, [r0, #8]
   33878:	ldr	r1, [sp, #12]
   3387c:	add	r0, r0, r1, lsl #2
   33880:	ldr	r0, [r0]
   33884:	str	r0, [sp, #16]
   33888:	ldr	r0, [fp, #-8]
   3388c:	ldrb	r0, [r0, #78]	; 0x4e
   33890:	cmp	r0, #0
   33894:	beq	338c0 <__assert_fail@plt+0x2242c>
   33898:	ldr	r0, [sp, #16]
   3389c:	bl	113bc <iswalnum@plt>
   338a0:	cmp	r0, #0
   338a4:	bne	338b4 <__assert_fail@plt+0x22420>
   338a8:	ldr	r0, [sp, #16]
   338ac:	cmp	r0, #95	; 0x5f
   338b0:	bne	338c0 <__assert_fail@plt+0x2242c>
   338b4:	movw	r0, #1
   338b8:	str	r0, [fp, #-4]
   338bc:	b	33980 <__assert_fail@plt+0x224ec>
   338c0:	ldr	r0, [sp, #16]
   338c4:	cmp	r0, #10
   338c8:	movw	r0, #0
   338cc:	str	r0, [sp, #8]
   338d0:	bne	338ec <__assert_fail@plt+0x22458>
   338d4:	ldr	r0, [fp, #-8]
   338d8:	ldrb	r0, [r0, #77]	; 0x4d
   338dc:	cmp	r0, #0
   338e0:	movw	r0, #0
   338e4:	movne	r0, #1
   338e8:	str	r0, [sp, #8]
   338ec:	ldr	r0, [sp, #8]
   338f0:	tst	r0, #1
   338f4:	movw	r0, #2
   338f8:	moveq	r0, #0
   338fc:	str	r0, [fp, #-4]
   33900:	b	33980 <__assert_fail@plt+0x224ec>
   33904:	ldr	r0, [fp, #-8]
   33908:	ldr	r0, [r0, #4]
   3390c:	ldr	r1, [fp, #-12]
   33910:	add	r0, r0, r1
   33914:	ldrb	r0, [r0]
   33918:	str	r0, [sp, #20]
   3391c:	ldr	r0, [fp, #-8]
   33920:	ldr	r0, [r0, #68]	; 0x44
   33924:	ldr	r1, [sp, #20]
   33928:	bl	33afc <__assert_fail@plt+0x22668>
   3392c:	tst	r0, #1
   33930:	beq	33940 <__assert_fail@plt+0x224ac>
   33934:	movw	r0, #1
   33938:	str	r0, [fp, #-4]
   3393c:	b	33980 <__assert_fail@plt+0x224ec>
   33940:	ldr	r0, [sp, #20]
   33944:	cmp	r0, #10
   33948:	movw	r0, #0
   3394c:	str	r0, [sp, #4]
   33950:	bne	3396c <__assert_fail@plt+0x224d8>
   33954:	ldr	r0, [fp, #-8]
   33958:	ldrb	r0, [r0, #77]	; 0x4d
   3395c:	cmp	r0, #0
   33960:	movw	r0, #0
   33964:	movne	r0, #1
   33968:	str	r0, [sp, #4]
   3396c:	ldr	r0, [sp, #4]
   33970:	tst	r0, #1
   33974:	movw	r0, #2
   33978:	moveq	r0, #0
   3397c:	str	r0, [fp, #-4]
   33980:	ldr	r0, [fp, #-4]
   33984:	mov	sp, fp
   33988:	pop	{fp, pc}
   3398c:	push	{fp, lr}
   33990:	mov	fp, sp
   33994:	sub	sp, sp, #48	; 0x30
   33998:	str	r0, [fp, #-4]
   3399c:	str	r1, [fp, #-8]
   339a0:	str	r2, [fp, #-12]
   339a4:	mvn	r0, #0
   339a8:	str	r0, [sp, #16]
   339ac:	ldr	r0, [fp, #-4]
   339b0:	ldr	r0, [r0, #24]
   339b4:	ldr	r1, [fp, #-4]
   339b8:	ldr	r1, [r1, #32]
   339bc:	add	r0, r0, r1
   339c0:	str	r0, [sp, #24]
   339c4:	ldr	r0, [sp, #24]
   339c8:	ldr	r1, [fp, #-8]
   339cc:	cmp	r0, r1
   339d0:	bge	33ae4 <__assert_fail@plt+0x22650>
   339d4:	ldr	r0, [fp, #-4]
   339d8:	ldr	r0, [r0, #44]	; 0x2c
   339dc:	ldr	r1, [sp, #24]
   339e0:	sub	r0, r0, r1
   339e4:	str	r0, [sp, #8]
   339e8:	ldr	r0, [fp, #-4]
   339ec:	ldr	r1, [r0, #16]
   339f0:	str	r1, [fp, #-20]	; 0xffffffec
   339f4:	ldr	r0, [r0, #20]
   339f8:	str	r0, [fp, #-16]
   339fc:	ldr	r0, [fp, #-4]
   33a00:	ldr	r0, [r0]
   33a04:	ldr	r1, [sp, #24]
   33a08:	add	r1, r0, r1
   33a0c:	ldr	r2, [sp, #8]
   33a10:	ldr	r0, [fp, #-4]
   33a14:	add	r3, r0, #16
   33a18:	add	r0, sp, #12
   33a1c:	bl	4193c <__assert_fail@plt+0x304a8>
   33a20:	str	r0, [sp, #20]
   33a24:	ldr	r0, [sp, #20]
   33a28:	cmn	r0, #2
   33a2c:	movw	r0, #1
   33a30:	str	r0, [sp, #4]
   33a34:	beq	33a60 <__assert_fail@plt+0x225cc>
   33a38:	ldr	r0, [sp, #20]
   33a3c:	cmn	r0, #1
   33a40:	movw	r0, #1
   33a44:	str	r0, [sp, #4]
   33a48:	beq	33a60 <__assert_fail@plt+0x225cc>
   33a4c:	ldr	r0, [sp, #20]
   33a50:	cmp	r0, #0
   33a54:	movw	r0, #0
   33a58:	moveq	r0, #1
   33a5c:	str	r0, [sp, #4]
   33a60:	ldr	r0, [sp, #4]
   33a64:	tst	r0, #1
   33a68:	beq	33ac8 <__assert_fail@plt+0x22634>
   33a6c:	ldr	r0, [sp, #20]
   33a70:	cmp	r0, #0
   33a74:	beq	33a84 <__assert_fail@plt+0x225f0>
   33a78:	ldr	r0, [sp, #8]
   33a7c:	cmp	r0, #0
   33a80:	bne	33a90 <__assert_fail@plt+0x225fc>
   33a84:	movw	r0, #0
   33a88:	str	r0, [sp, #16]
   33a8c:	b	33aa8 <__assert_fail@plt+0x22614>
   33a90:	ldr	r0, [fp, #-4]
   33a94:	ldr	r0, [r0]
   33a98:	ldr	r1, [sp, #24]
   33a9c:	add	r0, r0, r1
   33aa0:	ldrb	r0, [r0]
   33aa4:	str	r0, [sp, #16]
   33aa8:	movw	r0, #1
   33aac:	str	r0, [sp, #20]
   33ab0:	ldr	r0, [fp, #-4]
   33ab4:	ldr	r1, [fp, #-20]	; 0xffffffec
   33ab8:	str	r1, [r0, #16]
   33abc:	ldr	r1, [fp, #-16]
   33ac0:	str	r1, [r0, #20]
   33ac4:	b	33ad0 <__assert_fail@plt+0x2263c>
   33ac8:	ldr	r0, [sp, #12]
   33acc:	str	r0, [sp, #16]
   33ad0:	ldr	r0, [sp, #20]
   33ad4:	ldr	r1, [sp, #24]
   33ad8:	add	r0, r1, r0
   33adc:	str	r0, [sp, #24]
   33ae0:	b	339c4 <__assert_fail@plt+0x22530>
   33ae4:	ldr	r0, [sp, #16]
   33ae8:	ldr	r1, [fp, #-12]
   33aec:	str	r0, [r1]
   33af0:	ldr	r0, [sp, #24]
   33af4:	mov	sp, fp
   33af8:	pop	{fp, pc}
   33afc:	sub	sp, sp, #8
   33b00:	str	r0, [sp, #4]
   33b04:	str	r1, [sp]
   33b08:	ldr	r0, [sp, #4]
   33b0c:	ldr	r1, [sp]
   33b10:	asr	r2, r1, #31
   33b14:	add	r2, r1, r2, lsr #27
   33b18:	asr	r3, r2, #5
   33b1c:	ldr	r0, [r0, r3, lsl #2]
   33b20:	bic	r2, r2, #31
   33b24:	sub	r1, r1, r2
   33b28:	lsr	r0, r0, r1
   33b2c:	and	r0, r0, #1
   33b30:	cmp	r0, #0
   33b34:	movw	r0, #0
   33b38:	movne	r0, #1
   33b3c:	and	r0, r0, #1
   33b40:	add	sp, sp, #8
   33b44:	bx	lr
   33b48:	push	{fp, lr}
   33b4c:	mov	fp, sp
   33b50:	sub	sp, sp, #32
   33b54:	str	r0, [fp, #-8]
   33b58:	str	r1, [fp, #-12]
   33b5c:	str	r2, [sp, #16]
   33b60:	ldr	r0, [fp, #-8]
   33b64:	ldr	r0, [r0, #84]	; 0x54
   33b68:	str	r0, [sp, #12]
   33b6c:	movw	r0, #0
   33b70:	str	r0, [sp, #8]
   33b74:	ldr	r0, [sp, #8]
   33b78:	ldr	r1, [fp, #-12]
   33b7c:	ldr	r1, [r1, #4]
   33b80:	cmp	r0, r1
   33b84:	bge	33c48 <__assert_fail@plt+0x227b4>
   33b88:	ldr	r0, [fp, #-12]
   33b8c:	ldr	r0, [r0, #8]
   33b90:	ldr	r1, [sp, #8]
   33b94:	ldr	r0, [r0, r1, lsl #2]
   33b98:	str	r0, [sp]
   33b9c:	ldr	r0, [sp, #12]
   33ba0:	ldr	r0, [r0]
   33ba4:	ldr	r1, [sp]
   33ba8:	add	r0, r0, r1, lsl #3
   33bac:	ldr	r0, [r0, #4]
   33bb0:	and	r0, r0, #255	; 0xff
   33bb4:	cmp	r0, #8
   33bb8:	bne	33c34 <__assert_fail@plt+0x227a0>
   33bbc:	ldr	r0, [sp, #12]
   33bc0:	ldr	r0, [r0]
   33bc4:	ldr	r1, [sp]
   33bc8:	add	r0, r0, r1, lsl #3
   33bcc:	ldr	r0, [r0]
   33bd0:	cmp	r0, #32
   33bd4:	bge	33c34 <__assert_fail@plt+0x227a0>
   33bd8:	ldr	r0, [sp, #12]
   33bdc:	ldr	r1, [r0]
   33be0:	ldr	r0, [r0, #80]	; 0x50
   33be4:	ldr	r2, [sp]
   33be8:	add	r1, r1, r2, lsl #3
   33bec:	ldr	r1, [r1]
   33bf0:	movw	r2, #1
   33bf4:	lsl	r1, r2, r1
   33bf8:	and	r0, r0, r1
   33bfc:	cmp	r0, #0
   33c00:	beq	33c34 <__assert_fail@plt+0x227a0>
   33c04:	ldr	r0, [fp, #-8]
   33c08:	ldr	r1, [sp]
   33c0c:	ldr	r2, [sp, #16]
   33c10:	bl	3489c <__assert_fail@plt+0x23408>
   33c14:	str	r0, [sp, #4]
   33c18:	ldr	r0, [sp, #4]
   33c1c:	cmp	r0, #0
   33c20:	beq	33c30 <__assert_fail@plt+0x2279c>
   33c24:	ldr	r0, [sp, #4]
   33c28:	str	r0, [fp, #-4]
   33c2c:	b	33c50 <__assert_fail@plt+0x227bc>
   33c30:	b	33c34 <__assert_fail@plt+0x227a0>
   33c34:	b	33c38 <__assert_fail@plt+0x227a4>
   33c38:	ldr	r0, [sp, #8]
   33c3c:	add	r0, r0, #1
   33c40:	str	r0, [sp, #8]
   33c44:	b	33b74 <__assert_fail@plt+0x226e0>
   33c48:	movw	r0, #0
   33c4c:	str	r0, [fp, #-4]
   33c50:	ldr	r0, [fp, #-4]
   33c54:	mov	sp, fp
   33c58:	pop	{fp, pc}
   33c5c:	push	{fp, lr}
   33c60:	mov	fp, sp
   33c64:	sub	sp, sp, #96	; 0x60
   33c68:	str	r0, [fp, #-4]
   33c6c:	str	r1, [fp, #-8]
   33c70:	ldr	r0, [fp, #-4]
   33c74:	ldr	r0, [r0, #84]	; 0x54
   33c78:	str	r0, [fp, #-12]
   33c7c:	ldr	r0, [fp, #-4]
   33c80:	ldr	r0, [r0, #40]	; 0x28
   33c84:	str	r0, [fp, #-24]	; 0xffffffe8
   33c88:	movw	r0, #0
   33c8c:	str	r0, [fp, #-20]	; 0xffffffec
   33c90:	ldr	r0, [fp, #-20]	; 0xffffffec
   33c94:	ldr	r1, [fp, #-8]
   33c98:	ldr	r1, [r1, #4]
   33c9c:	cmp	r0, r1
   33ca0:	bge	34184 <__assert_fail@plt+0x22cf0>
   33ca4:	ldr	r0, [fp, #-8]
   33ca8:	ldr	r0, [r0, #8]
   33cac:	ldr	r1, [fp, #-20]	; 0xffffffec
   33cb0:	ldr	r0, [r0, r1, lsl #2]
   33cb4:	str	r0, [fp, #-40]	; 0xffffffd8
   33cb8:	ldr	r0, [fp, #-12]
   33cbc:	ldr	r0, [r0]
   33cc0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   33cc4:	add	r0, r0, r1, lsl #3
   33cc8:	str	r0, [sp, #48]	; 0x30
   33ccc:	ldr	r0, [sp, #48]	; 0x30
   33cd0:	ldr	r0, [r0, #4]
   33cd4:	and	r0, r0, #255	; 0xff
   33cd8:	cmp	r0, #4
   33cdc:	beq	33ce4 <__assert_fail@plt+0x22850>
   33ce0:	b	34174 <__assert_fail@plt+0x22ce0>
   33ce4:	ldr	r0, [sp, #48]	; 0x30
   33ce8:	ldr	r0, [r0, #4]
   33cec:	lsr	r0, r0, #8
   33cf0:	movw	r1, #1023	; 0x3ff
   33cf4:	and	r0, r0, r1
   33cf8:	cmp	r0, #0
   33cfc:	beq	33de0 <__assert_fail@plt+0x2294c>
   33d00:	ldr	r0, [fp, #-4]
   33d04:	ldr	r1, [fp, #-24]	; 0xffffffe8
   33d08:	ldr	r2, [fp, #-4]
   33d0c:	ldr	r2, [r2, #88]	; 0x58
   33d10:	bl	3378c <__assert_fail@plt+0x222f8>
   33d14:	str	r0, [fp, #-44]	; 0xffffffd4
   33d18:	ldr	r0, [sp, #48]	; 0x30
   33d1c:	ldr	r0, [r0, #4]
   33d20:	lsr	r0, r0, #8
   33d24:	movw	r1, #1023	; 0x3ff
   33d28:	and	r0, r0, r1
   33d2c:	and	r0, r0, #4
   33d30:	cmp	r0, #0
   33d34:	beq	33d48 <__assert_fail@plt+0x228b4>
   33d38:	ldr	r0, [fp, #-44]	; 0xffffffd4
   33d3c:	and	r0, r0, #1
   33d40:	cmp	r0, #0
   33d44:	beq	33dd8 <__assert_fail@plt+0x22944>
   33d48:	ldr	r0, [sp, #48]	; 0x30
   33d4c:	ldr	r0, [r0, #4]
   33d50:	lsr	r0, r0, #8
   33d54:	movw	r1, #1023	; 0x3ff
   33d58:	and	r0, r0, r1
   33d5c:	and	r0, r0, #8
   33d60:	cmp	r0, #0
   33d64:	beq	33d78 <__assert_fail@plt+0x228e4>
   33d68:	ldr	r0, [fp, #-44]	; 0xffffffd4
   33d6c:	and	r0, r0, #1
   33d70:	cmp	r0, #0
   33d74:	bne	33dd8 <__assert_fail@plt+0x22944>
   33d78:	ldr	r0, [sp, #48]	; 0x30
   33d7c:	ldr	r0, [r0, #4]
   33d80:	lsr	r0, r0, #8
   33d84:	movw	r1, #1023	; 0x3ff
   33d88:	and	r0, r0, r1
   33d8c:	and	r0, r0, #32
   33d90:	cmp	r0, #0
   33d94:	beq	33da8 <__assert_fail@plt+0x22914>
   33d98:	ldr	r0, [fp, #-44]	; 0xffffffd4
   33d9c:	and	r0, r0, #2
   33da0:	cmp	r0, #0
   33da4:	beq	33dd8 <__assert_fail@plt+0x22944>
   33da8:	ldr	r0, [sp, #48]	; 0x30
   33dac:	ldr	r0, [r0, #4]
   33db0:	lsr	r0, r0, #8
   33db4:	movw	r1, #1023	; 0x3ff
   33db8:	and	r0, r0, r1
   33dbc:	and	r0, r0, #128	; 0x80
   33dc0:	cmp	r0, #0
   33dc4:	beq	33ddc <__assert_fail@plt+0x22948>
   33dc8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   33dcc:	and	r0, r0, #8
   33dd0:	cmp	r0, #0
   33dd4:	bne	33ddc <__assert_fail@plt+0x22948>
   33dd8:	b	34174 <__assert_fail@plt+0x22ce0>
   33ddc:	b	33de0 <__assert_fail@plt+0x2294c>
   33de0:	ldr	r0, [fp, #-4]
   33de4:	ldr	r0, [r0, #108]	; 0x6c
   33de8:	str	r0, [fp, #-36]	; 0xffffffdc
   33dec:	ldr	r0, [fp, #-4]
   33df0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   33df4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   33df8:	bl	349ec <__assert_fail@plt+0x23558>
   33dfc:	str	r0, [fp, #-16]
   33e00:	ldr	r0, [fp, #-16]
   33e04:	cmp	r0, #0
   33e08:	beq	33e10 <__assert_fail@plt+0x2297c>
   33e0c:	b	3418c <__assert_fail@plt+0x22cf8>
   33e10:	ldr	r0, [fp, #-12]
   33e14:	ldr	r0, [r0, #12]
   33e18:	ldr	r1, [fp, #-40]	; 0xffffffd8
   33e1c:	add	r0, r0, r1, lsl #2
   33e20:	ldr	r0, [r0]
   33e24:	cmn	r0, #1
   33e28:	beq	33e30 <__assert_fail@plt+0x2299c>
   33e2c:	b	33e30 <__assert_fail@plt+0x2299c>
   33e30:	b	33e34 <__assert_fail@plt+0x229a0>
   33e34:	ldr	r0, [fp, #-36]	; 0xffffffdc
   33e38:	ldr	r1, [fp, #-4]
   33e3c:	ldr	r1, [r1, #108]	; 0x6c
   33e40:	cmp	r0, r1
   33e44:	bge	34170 <__assert_fail@plt+0x22cdc>
   33e48:	ldr	r0, [fp, #-4]
   33e4c:	ldr	r0, [r0, #116]	; 0x74
   33e50:	ldr	r1, [fp, #-36]	; 0xffffffdc
   33e54:	movw	r2, #24
   33e58:	mul	r1, r1, r2
   33e5c:	add	r0, r0, r1
   33e60:	str	r0, [sp, #32]
   33e64:	ldr	r0, [sp, #32]
   33e68:	ldr	r0, [r0]
   33e6c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   33e70:	cmp	r0, r1
   33e74:	bne	33e8c <__assert_fail@plt+0x229f8>
   33e78:	ldr	r0, [sp, #32]
   33e7c:	ldr	r0, [r0, #4]
   33e80:	ldr	r1, [fp, #-24]	; 0xffffffe8
   33e84:	cmp	r0, r1
   33e88:	beq	33e90 <__assert_fail@plt+0x229fc>
   33e8c:	b	34160 <__assert_fail@plt+0x22ccc>
   33e90:	ldr	r0, [sp, #32]
   33e94:	ldr	r0, [r0, #12]
   33e98:	ldr	r1, [sp, #32]
   33e9c:	ldr	r1, [r1, #8]
   33ea0:	sub	r0, r0, r1
   33ea4:	str	r0, [sp, #40]	; 0x28
   33ea8:	ldr	r0, [sp, #40]	; 0x28
   33eac:	cmp	r0, #0
   33eb0:	bne	33eec <__assert_fail@plt+0x22a58>
   33eb4:	ldr	r0, [fp, #-12]
   33eb8:	ldr	r0, [r0, #24]
   33ebc:	ldr	r1, [fp, #-12]
   33ec0:	ldr	r1, [r1, #20]
   33ec4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   33ec8:	movw	r3, #12
   33ecc:	mul	r2, r2, r3
   33ed0:	add	r1, r1, r2
   33ed4:	ldr	r1, [r1, #8]
   33ed8:	ldr	r1, [r1]
   33edc:	mul	r1, r1, r3
   33ee0:	add	r0, r0, r1
   33ee4:	str	r0, [sp, #16]
   33ee8:	b	33f14 <__assert_fail@plt+0x22a80>
   33eec:	ldr	r0, [fp, #-12]
   33ef0:	ldr	r1, [r0, #12]
   33ef4:	ldr	r0, [r0, #24]
   33ef8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   33efc:	add	r1, r1, r2, lsl #2
   33f00:	ldr	r1, [r1]
   33f04:	movw	r2, #12
   33f08:	mul	r1, r1, r2
   33f0c:	add	r0, r0, r1
   33f10:	str	r0, [sp, #16]
   33f14:	ldr	r0, [sp, #16]
   33f18:	str	r0, [sp, #44]	; 0x2c
   33f1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33f20:	ldr	r1, [sp, #32]
   33f24:	ldr	r2, [r1, #8]
   33f28:	ldr	r1, [r1, #12]
   33f2c:	add	r0, r0, r1
   33f30:	sub	r0, r0, r2
   33f34:	str	r0, [fp, #-28]	; 0xffffffe4
   33f38:	ldr	r0, [fp, #-4]
   33f3c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   33f40:	sub	r1, r1, #1
   33f44:	ldr	r2, [r0, #88]	; 0x58
   33f48:	bl	3378c <__assert_fail@plt+0x222f8>
   33f4c:	str	r0, [fp, #-44]	; 0xffffffd4
   33f50:	ldr	r0, [fp, #-4]
   33f54:	ldr	r0, [r0, #100]	; 0x64
   33f58:	ldr	r1, [fp, #-28]	; 0xffffffe4
   33f5c:	ldr	r0, [r0, r1, lsl #2]
   33f60:	str	r0, [sp, #36]	; 0x24
   33f64:	ldr	r0, [fp, #-4]
   33f68:	ldr	r0, [r0, #100]	; 0x64
   33f6c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   33f70:	add	r0, r0, r1, lsl #2
   33f74:	ldr	r0, [r0]
   33f78:	movw	r1, #0
   33f7c:	cmp	r0, r1
   33f80:	bne	33f90 <__assert_fail@plt+0x22afc>
   33f84:	movw	r0, #0
   33f88:	str	r0, [sp, #12]
   33f8c:	b	33fac <__assert_fail@plt+0x22b18>
   33f90:	ldr	r0, [fp, #-4]
   33f94:	ldr	r0, [r0, #100]	; 0x64
   33f98:	ldr	r1, [fp, #-24]	; 0xffffffe8
   33f9c:	add	r0, r0, r1, lsl #2
   33fa0:	ldr	r0, [r0]
   33fa4:	ldr	r0, [r0, #8]
   33fa8:	str	r0, [sp, #12]
   33fac:	ldr	r0, [sp, #12]
   33fb0:	str	r0, [fp, #-32]	; 0xffffffe0
   33fb4:	ldr	r0, [sp, #36]	; 0x24
   33fb8:	movw	r1, #0
   33fbc:	cmp	r0, r1
   33fc0:	bne	34038 <__assert_fail@plt+0x22ba4>
   33fc4:	ldr	r1, [fp, #-12]
   33fc8:	ldr	r2, [sp, #44]	; 0x2c
   33fcc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   33fd0:	sub	r0, fp, #16
   33fd4:	bl	30f3c <__assert_fail@plt+0x1faa8>
   33fd8:	ldr	r1, [fp, #-4]
   33fdc:	ldr	r1, [r1, #100]	; 0x64
   33fe0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   33fe4:	str	r0, [r1, r2, lsl #2]
   33fe8:	ldr	r0, [fp, #-4]
   33fec:	ldr	r0, [r0, #100]	; 0x64
   33ff0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   33ff4:	add	r0, r0, r1, lsl #2
   33ff8:	ldr	r0, [r0]
   33ffc:	movw	r1, #0
   34000:	cmp	r0, r1
   34004:	movw	r0, #0
   34008:	str	r0, [sp, #8]
   3400c:	bne	34024 <__assert_fail@plt+0x22b90>
   34010:	ldr	r0, [fp, #-16]
   34014:	cmp	r0, #0
   34018:	movw	r0, #0
   3401c:	movne	r0, #1
   34020:	str	r0, [sp, #8]
   34024:	ldr	r0, [sp, #8]
   34028:	tst	r0, #1
   3402c:	beq	34034 <__assert_fail@plt+0x22ba0>
   34030:	b	3418c <__assert_fail@plt+0x22cf8>
   34034:	b	340e4 <__assert_fail@plt+0x22c50>
   34038:	ldr	r0, [sp, #36]	; 0x24
   3403c:	ldr	r1, [r0, #40]	; 0x28
   34040:	ldr	r2, [sp, #44]	; 0x2c
   34044:	add	r0, sp, #20
   34048:	bl	34f88 <__assert_fail@plt+0x23af4>
   3404c:	str	r0, [fp, #-16]
   34050:	ldr	r0, [fp, #-16]
   34054:	cmp	r0, #0
   34058:	beq	34068 <__assert_fail@plt+0x22bd4>
   3405c:	ldr	r0, [sp, #28]
   34060:	bl	138a4 <__assert_fail@plt+0x2410>
   34064:	b	3418c <__assert_fail@plt+0x22cf8>
   34068:	ldr	r1, [fp, #-12]
   3406c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   34070:	sub	r0, fp, #16
   34074:	add	r2, sp, #20
   34078:	bl	30f3c <__assert_fail@plt+0x1faa8>
   3407c:	ldr	r1, [fp, #-4]
   34080:	ldr	r1, [r1, #100]	; 0x64
   34084:	ldr	r2, [fp, #-28]	; 0xffffffe4
   34088:	str	r0, [r1, r2, lsl #2]
   3408c:	ldr	r0, [sp, #28]
   34090:	bl	138a4 <__assert_fail@plt+0x2410>
   34094:	ldr	r0, [fp, #-4]
   34098:	ldr	r0, [r0, #100]	; 0x64
   3409c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   340a0:	add	r0, r0, r1, lsl #2
   340a4:	ldr	r0, [r0]
   340a8:	movw	r1, #0
   340ac:	cmp	r0, r1
   340b0:	movw	r0, #0
   340b4:	str	r0, [sp, #4]
   340b8:	bne	340d0 <__assert_fail@plt+0x22c3c>
   340bc:	ldr	r0, [fp, #-16]
   340c0:	cmp	r0, #0
   340c4:	movw	r0, #0
   340c8:	movne	r0, #1
   340cc:	str	r0, [sp, #4]
   340d0:	ldr	r0, [sp, #4]
   340d4:	tst	r0, #1
   340d8:	beq	340e0 <__assert_fail@plt+0x22c4c>
   340dc:	b	3418c <__assert_fail@plt+0x22cf8>
   340e0:	b	340e4 <__assert_fail@plt+0x22c50>
   340e4:	ldr	r0, [sp, #40]	; 0x28
   340e8:	cmp	r0, #0
   340ec:	bne	3415c <__assert_fail@plt+0x22cc8>
   340f0:	ldr	r0, [fp, #-4]
   340f4:	ldr	r0, [r0, #100]	; 0x64
   340f8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   340fc:	add	r0, r0, r1, lsl #2
   34100:	ldr	r0, [r0]
   34104:	ldr	r0, [r0, #8]
   34108:	ldr	r1, [fp, #-32]	; 0xffffffe0
   3410c:	cmp	r0, r1
   34110:	ble	3415c <__assert_fail@plt+0x22cc8>
   34114:	ldr	r0, [fp, #-4]
   34118:	ldr	r1, [sp, #44]	; 0x2c
   3411c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   34120:	bl	33b48 <__assert_fail@plt+0x226b4>
   34124:	str	r0, [fp, #-16]
   34128:	ldr	r0, [fp, #-16]
   3412c:	cmp	r0, #0
   34130:	beq	34138 <__assert_fail@plt+0x22ca4>
   34134:	b	3418c <__assert_fail@plt+0x22cf8>
   34138:	ldr	r0, [fp, #-4]
   3413c:	ldr	r1, [sp, #44]	; 0x2c
   34140:	bl	33c5c <__assert_fail@plt+0x227c8>
   34144:	str	r0, [fp, #-16]
   34148:	ldr	r0, [fp, #-16]
   3414c:	cmp	r0, #0
   34150:	beq	34158 <__assert_fail@plt+0x22cc4>
   34154:	b	3418c <__assert_fail@plt+0x22cf8>
   34158:	b	3415c <__assert_fail@plt+0x22cc8>
   3415c:	b	34160 <__assert_fail@plt+0x22ccc>
   34160:	ldr	r0, [fp, #-36]	; 0xffffffdc
   34164:	add	r0, r0, #1
   34168:	str	r0, [fp, #-36]	; 0xffffffdc
   3416c:	b	33e34 <__assert_fail@plt+0x229a0>
   34170:	b	34174 <__assert_fail@plt+0x22ce0>
   34174:	ldr	r0, [fp, #-20]	; 0xffffffec
   34178:	add	r0, r0, #1
   3417c:	str	r0, [fp, #-20]	; 0xffffffec
   34180:	b	33c90 <__assert_fail@plt+0x227fc>
   34184:	movw	r0, #0
   34188:	str	r0, [fp, #-16]
   3418c:	ldr	r0, [fp, #-16]
   34190:	mov	sp, fp
   34194:	pop	{fp, pc}
   34198:	push	{fp, lr}
   3419c:	mov	fp, sp
   341a0:	sub	sp, sp, #48	; 0x30
   341a4:	ldr	r2, [pc, #512]	; 343ac <__assert_fail@plt+0x22f18>
   341a8:	str	r0, [fp, #-8]
   341ac:	str	r1, [fp, #-12]
   341b0:	ldr	r0, [fp, #-8]
   341b4:	str	r0, [fp, #-20]	; 0xffffffec
   341b8:	ldr	r0, [fp, #-20]	; 0xffffffec
   341bc:	ldr	r0, [r0, #36]	; 0x24
   341c0:	cmp	r2, r0
   341c4:	bhi	341d4 <__assert_fail@plt+0x22d40>
   341c8:	movw	r0, #12
   341cc:	str	r0, [fp, #-4]
   341d0:	b	343a0 <__assert_fail@plt+0x22f0c>
   341d4:	ldr	r0, [fp, #-20]	; 0xffffffec
   341d8:	ldr	r1, [fp, #-12]
   341dc:	ldr	r2, [r0, #36]	; 0x24
   341e0:	ldr	r3, [r0, #48]	; 0x30
   341e4:	lsl	r2, r2, #1
   341e8:	cmp	r3, r2
   341ec:	str	r0, [sp, #20]
   341f0:	str	r1, [sp, #16]
   341f4:	bge	34208 <__assert_fail@plt+0x22d74>
   341f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   341fc:	ldr	r0, [r0, #48]	; 0x30
   34200:	str	r0, [sp, #12]
   34204:	b	34218 <__assert_fail@plt+0x22d84>
   34208:	ldr	r0, [fp, #-20]	; 0xffffffec
   3420c:	ldr	r0, [r0, #36]	; 0x24
   34210:	lsl	r0, r0, #1
   34214:	str	r0, [sp, #12]
   34218:	ldr	r0, [sp, #12]
   3421c:	ldr	r1, [sp, #16]
   34220:	cmp	r1, r0
   34224:	bge	3426c <__assert_fail@plt+0x22dd8>
   34228:	ldr	r0, [fp, #-20]	; 0xffffffec
   3422c:	ldr	r1, [r0, #36]	; 0x24
   34230:	ldr	r0, [r0, #48]	; 0x30
   34234:	lsl	r1, r1, #1
   34238:	cmp	r0, r1
   3423c:	bge	34250 <__assert_fail@plt+0x22dbc>
   34240:	ldr	r0, [fp, #-20]	; 0xffffffec
   34244:	ldr	r0, [r0, #48]	; 0x30
   34248:	str	r0, [sp, #8]
   3424c:	b	34260 <__assert_fail@plt+0x22dcc>
   34250:	ldr	r0, [fp, #-20]	; 0xffffffec
   34254:	ldr	r0, [r0, #36]	; 0x24
   34258:	lsl	r0, r0, #1
   3425c:	str	r0, [sp, #8]
   34260:	ldr	r0, [sp, #8]
   34264:	str	r0, [sp, #4]
   34268:	b	34274 <__assert_fail@plt+0x22de0>
   3426c:	ldr	r0, [fp, #-12]
   34270:	str	r0, [sp, #4]
   34274:	ldr	r0, [sp, #4]
   34278:	ldr	r1, [sp, #20]
   3427c:	str	r0, [sp]
   34280:	mov	r0, r1
   34284:	ldr	r1, [sp]
   34288:	bl	27e44 <__assert_fail@plt+0x169b0>
   3428c:	str	r0, [fp, #-16]
   34290:	ldr	r0, [fp, #-16]
   34294:	cmp	r0, #0
   34298:	beq	342a8 <__assert_fail@plt+0x22e14>
   3429c:	ldr	r0, [fp, #-16]
   342a0:	str	r0, [fp, #-4]
   342a4:	b	343a0 <__assert_fail@plt+0x22f0c>
   342a8:	ldr	r0, [fp, #-8]
   342ac:	ldr	r0, [r0, #100]	; 0x64
   342b0:	movw	r1, #0
   342b4:	cmp	r0, r1
   342b8:	beq	34304 <__assert_fail@plt+0x22e70>
   342bc:	ldr	r0, [fp, #-8]
   342c0:	ldr	r0, [r0, #100]	; 0x64
   342c4:	ldr	r1, [fp, #-20]	; 0xffffffec
   342c8:	ldr	r1, [r1, #36]	; 0x24
   342cc:	add	r1, r1, #1
   342d0:	lsl	r1, r1, #2
   342d4:	bl	3fc48 <__assert_fail@plt+0x2e7b4>
   342d8:	str	r0, [sp, #24]
   342dc:	ldr	r0, [sp, #24]
   342e0:	movw	r1, #0
   342e4:	cmp	r0, r1
   342e8:	bne	342f8 <__assert_fail@plt+0x22e64>
   342ec:	movw	r0, #12
   342f0:	str	r0, [fp, #-4]
   342f4:	b	343a0 <__assert_fail@plt+0x22f0c>
   342f8:	ldr	r0, [sp, #24]
   342fc:	ldr	r1, [fp, #-8]
   34300:	str	r0, [r1, #100]	; 0x64
   34304:	ldr	r0, [fp, #-20]	; 0xffffffec
   34308:	ldrsb	r0, [r0, #72]	; 0x48
   3430c:	cmp	r0, #0
   34310:	beq	34358 <__assert_fail@plt+0x22ec4>
   34314:	ldr	r0, [fp, #-20]	; 0xffffffec
   34318:	ldr	r0, [r0, #80]	; 0x50
   3431c:	cmp	r0, #1
   34320:	ble	3434c <__assert_fail@plt+0x22eb8>
   34324:	ldr	r0, [fp, #-20]	; 0xffffffec
   34328:	bl	27f9c <__assert_fail@plt+0x16b08>
   3432c:	str	r0, [fp, #-16]
   34330:	ldr	r0, [fp, #-16]
   34334:	cmp	r0, #0
   34338:	beq	34348 <__assert_fail@plt+0x22eb4>
   3433c:	ldr	r0, [fp, #-16]
   34340:	str	r0, [fp, #-4]
   34344:	b	343a0 <__assert_fail@plt+0x22f0c>
   34348:	b	34354 <__assert_fail@plt+0x22ec0>
   3434c:	ldr	r0, [fp, #-20]	; 0xffffffec
   34350:	bl	28a48 <__assert_fail@plt+0x175b4>
   34354:	b	34398 <__assert_fail@plt+0x22f04>
   34358:	ldr	r0, [fp, #-20]	; 0xffffffec
   3435c:	ldr	r0, [r0, #80]	; 0x50
   34360:	cmp	r0, #1
   34364:	ble	34374 <__assert_fail@plt+0x22ee0>
   34368:	ldr	r0, [fp, #-20]	; 0xffffffec
   3436c:	bl	28b4c <__assert_fail@plt+0x176b8>
   34370:	b	34394 <__assert_fail@plt+0x22f00>
   34374:	ldr	r0, [fp, #-20]	; 0xffffffec
   34378:	ldr	r0, [r0, #64]	; 0x40
   3437c:	movw	r1, #0
   34380:	cmp	r0, r1
   34384:	beq	34390 <__assert_fail@plt+0x22efc>
   34388:	ldr	r0, [fp, #-20]	; 0xffffffec
   3438c:	bl	28e8c <__assert_fail@plt+0x179f8>
   34390:	b	34394 <__assert_fail@plt+0x22f00>
   34394:	b	34398 <__assert_fail@plt+0x22f04>
   34398:	movw	r0, #0
   3439c:	str	r0, [fp, #-4]
   343a0:	ldr	r0, [fp, #-4]
   343a4:	mov	sp, fp
   343a8:	pop	{fp, pc}
   343ac:	svcne	0x00ffffff
   343b0:	push	{fp, lr}
   343b4:	mov	fp, sp
   343b8:	sub	sp, sp, #40	; 0x28
   343bc:	str	r0, [fp, #-8]
   343c0:	str	r1, [fp, #-12]
   343c4:	str	r2, [fp, #-16]
   343c8:	ldr	r0, [fp, #-16]
   343cc:	ldrb	r0, [r0, #52]	; 0x34
   343d0:	ubfx	r0, r0, #5, #1
   343d4:	and	r0, r0, #255	; 0xff
   343d8:	cmp	r0, #0
   343dc:	beq	34414 <__assert_fail@plt+0x22f80>
   343e0:	ldr	r0, [fp, #-12]
   343e4:	ldr	r1, [fp, #-16]
   343e8:	bl	3774c <__assert_fail@plt+0x262b8>
   343ec:	ldr	r1, [fp, #-8]
   343f0:	str	r0, [r1]
   343f4:	ldr	r0, [fp, #-8]
   343f8:	ldr	r0, [r0]
   343fc:	cmp	r0, #0
   34400:	beq	34410 <__assert_fail@plt+0x22f7c>
   34404:	movw	r0, #0
   34408:	str	r0, [fp, #-4]
   3440c:	b	34530 <__assert_fail@plt+0x2309c>
   34410:	b	34414 <__assert_fail@plt+0x22f80>
   34414:	ldr	r0, [fp, #-12]
   34418:	ldr	r0, [r0, #4]
   3441c:	ldr	r1, [fp, #-12]
   34420:	ldr	r2, [r1, #40]	; 0x28
   34424:	add	r3, r2, #1
   34428:	str	r3, [r1, #40]	; 0x28
   3442c:	add	r0, r0, r2
   34430:	ldrb	r0, [r0]
   34434:	strb	r0, [sp, #19]
   34438:	ldr	r0, [fp, #-16]
   3443c:	ldr	r0, [r0, #44]	; 0x2c
   34440:	str	r0, [sp, #20]
   34444:	ldr	r0, [sp, #20]
   34448:	movw	r1, #0
   3444c:	cmp	r0, r1
   34450:	beq	34474 <__assert_fail@plt+0x22fe0>
   34454:	ldr	r0, [sp, #20]
   34458:	ldrb	r1, [sp, #19]
   3445c:	mov	r2, r1
   34460:	add	r0, r0, r1, lsl #2
   34464:	ldr	r0, [r0]
   34468:	str	r0, [fp, #-4]
   3446c:	str	r2, [sp, #8]
   34470:	b	34530 <__assert_fail@plt+0x2309c>
   34474:	ldr	r0, [fp, #-16]
   34478:	ldr	r0, [r0, #48]	; 0x30
   3447c:	str	r0, [sp, #20]
   34480:	ldr	r0, [sp, #20]
   34484:	movw	r1, #0
   34488:	cmp	r0, r1
   3448c:	beq	344fc <__assert_fail@plt+0x23068>
   34490:	ldr	r0, [fp, #-12]
   34494:	ldr	r1, [fp, #-12]
   34498:	ldr	r1, [r1, #40]	; 0x28
   3449c:	sub	r1, r1, #1
   344a0:	ldr	r2, [fp, #-12]
   344a4:	ldr	r2, [r2, #88]	; 0x58
   344a8:	bl	3378c <__assert_fail@plt+0x222f8>
   344ac:	str	r0, [sp, #12]
   344b0:	ldr	r0, [sp, #12]
   344b4:	and	r0, r0, #1
   344b8:	cmp	r0, #0
   344bc:	beq	344dc <__assert_fail@plt+0x23048>
   344c0:	ldr	r0, [sp, #20]
   344c4:	ldrb	r1, [sp, #19]
   344c8:	orr	r1, r1, #256	; 0x100
   344cc:	add	r0, r0, r1, lsl #2
   344d0:	ldr	r0, [r0]
   344d4:	str	r0, [fp, #-4]
   344d8:	b	34530 <__assert_fail@plt+0x2309c>
   344dc:	ldr	r0, [sp, #20]
   344e0:	ldrb	r1, [sp, #19]
   344e4:	mov	r2, r1
   344e8:	add	r0, r0, r1, lsl #2
   344ec:	ldr	r0, [r0]
   344f0:	str	r0, [fp, #-4]
   344f4:	str	r2, [sp, #4]
   344f8:	b	34530 <__assert_fail@plt+0x2309c>
   344fc:	ldr	r0, [fp, #-12]
   34500:	ldr	r0, [r0, #84]	; 0x54
   34504:	ldr	r1, [fp, #-16]
   34508:	bl	37b28 <__assert_fail@plt+0x26694>
   3450c:	tst	r0, #1
   34510:	bne	3452c <__assert_fail@plt+0x23098>
   34514:	ldr	r0, [fp, #-8]
   34518:	movw	r1, #12
   3451c:	str	r1, [r0]
   34520:	movw	r0, #0
   34524:	str	r0, [fp, #-4]
   34528:	b	34530 <__assert_fail@plt+0x2309c>
   3452c:	b	34438 <__assert_fail@plt+0x22fa4>
   34530:	ldr	r0, [fp, #-4]
   34534:	mov	sp, fp
   34538:	pop	{fp, pc}
   3453c:	push	{fp, lr}
   34540:	mov	fp, sp
   34544:	sub	sp, sp, #56	; 0x38
   34548:	str	r0, [fp, #-8]
   3454c:	str	r1, [fp, #-12]
   34550:	str	r2, [fp, #-16]
   34554:	ldr	r0, [fp, #-12]
   34558:	ldr	r0, [r0, #84]	; 0x54
   3455c:	str	r0, [fp, #-20]	; 0xffffffec
   34560:	ldr	r0, [fp, #-12]
   34564:	ldr	r0, [r0, #40]	; 0x28
   34568:	str	r0, [fp, #-24]	; 0xffffffe8
   3456c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   34570:	ldr	r1, [fp, #-12]
   34574:	ldr	r1, [r1, #104]	; 0x68
   34578:	cmp	r0, r1
   3457c:	ble	345a8 <__assert_fail@plt+0x23114>
   34580:	ldr	r0, [fp, #-16]
   34584:	ldr	r1, [fp, #-12]
   34588:	ldr	r1, [r1, #100]	; 0x64
   3458c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   34590:	add	r1, r1, r2, lsl #2
   34594:	str	r0, [r1]
   34598:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3459c:	ldr	r1, [fp, #-12]
   345a0:	str	r0, [r1, #104]	; 0x68
   345a4:	b	346e4 <__assert_fail@plt+0x23250>
   345a8:	ldr	r0, [fp, #-12]
   345ac:	ldr	r0, [r0, #100]	; 0x64
   345b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   345b4:	add	r0, r0, r1, lsl #2
   345b8:	ldr	r0, [r0]
   345bc:	movw	r1, #0
   345c0:	cmp	r0, r1
   345c4:	bne	345e4 <__assert_fail@plt+0x23150>
   345c8:	ldr	r0, [fp, #-16]
   345cc:	ldr	r1, [fp, #-12]
   345d0:	ldr	r1, [r1, #100]	; 0x64
   345d4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   345d8:	add	r1, r1, r2, lsl #2
   345dc:	str	r0, [r1]
   345e0:	b	346e0 <__assert_fail@plt+0x2324c>
   345e4:	mov	r0, #0
   345e8:	str	r0, [sp, #4]
   345ec:	ldr	r0, [fp, #-12]
   345f0:	ldr	r0, [r0, #100]	; 0x64
   345f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   345f8:	add	r0, r0, r1, lsl #2
   345fc:	ldr	r0, [r0]
   34600:	str	r0, [sp, #28]
   34604:	ldr	r0, [sp, #28]
   34608:	ldr	r0, [r0, #40]	; 0x28
   3460c:	str	r0, [sp, #8]
   34610:	ldr	r0, [fp, #-16]
   34614:	movw	r1, #0
   34618:	cmp	r0, r1
   3461c:	beq	34664 <__assert_fail@plt+0x231d0>
   34620:	ldr	r0, [fp, #-16]
   34624:	ldr	r0, [r0, #40]	; 0x28
   34628:	str	r0, [sp, #4]
   3462c:	ldr	r1, [sp, #4]
   34630:	ldr	r2, [sp, #8]
   34634:	add	r0, sp, #12
   34638:	bl	34f88 <__assert_fail@plt+0x23af4>
   3463c:	ldr	r1, [fp, #-8]
   34640:	str	r0, [r1]
   34644:	ldr	r0, [fp, #-8]
   34648:	ldr	r0, [r0]
   3464c:	cmp	r0, #0
   34650:	beq	34660 <__assert_fail@plt+0x231cc>
   34654:	movw	r0, #0
   34658:	str	r0, [fp, #-4]
   3465c:	b	347ac <__assert_fail@plt+0x23318>
   34660:	b	34680 <__assert_fail@plt+0x231ec>
   34664:	ldr	r0, [sp, #8]
   34668:	ldr	r1, [r0]
   3466c:	str	r1, [sp, #12]
   34670:	ldr	r1, [r0, #4]
   34674:	str	r1, [sp, #16]
   34678:	ldr	r0, [r0, #8]
   3467c:	str	r0, [sp, #20]
   34680:	ldr	r0, [fp, #-12]
   34684:	ldr	r1, [r0, #40]	; 0x28
   34688:	ldr	r2, [r0, #88]	; 0x58
   3468c:	sub	r1, r1, #1
   34690:	bl	3378c <__assert_fail@plt+0x222f8>
   34694:	str	r0, [sp, #24]
   34698:	ldr	r0, [fp, #-8]
   3469c:	ldr	r1, [fp, #-20]	; 0xffffffec
   346a0:	ldr	r3, [sp, #24]
   346a4:	add	r2, sp, #12
   346a8:	bl	30f3c <__assert_fail@plt+0x1faa8>
   346ac:	ldr	r1, [fp, #-12]
   346b0:	ldr	r1, [r1, #100]	; 0x64
   346b4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   346b8:	add	r1, r1, r2, lsl #2
   346bc:	str	r0, [r1]
   346c0:	str	r0, [fp, #-16]
   346c4:	ldr	r0, [sp, #4]
   346c8:	movw	r1, #0
   346cc:	cmp	r0, r1
   346d0:	beq	346dc <__assert_fail@plt+0x23248>
   346d4:	ldr	r0, [sp, #20]
   346d8:	bl	138a4 <__assert_fail@plt+0x2410>
   346dc:	b	346e0 <__assert_fail@plt+0x2324c>
   346e0:	b	346e4 <__assert_fail@plt+0x23250>
   346e4:	ldr	r0, [fp, #-20]	; 0xffffffec
   346e8:	ldr	r0, [r0, #76]	; 0x4c
   346ec:	cmp	r0, #0
   346f0:	beq	347a4 <__assert_fail@plt+0x23310>
   346f4:	ldr	r0, [fp, #-16]
   346f8:	movw	r1, #0
   346fc:	cmp	r0, r1
   34700:	beq	347a4 <__assert_fail@plt+0x23310>
   34704:	ldr	r0, [fp, #-12]
   34708:	ldr	r1, [fp, #-16]
   3470c:	add	r1, r1, #4
   34710:	ldr	r2, [fp, #-24]	; 0xffffffe8
   34714:	bl	33b48 <__assert_fail@plt+0x226b4>
   34718:	ldr	r1, [fp, #-8]
   3471c:	str	r0, [r1]
   34720:	ldr	r0, [fp, #-8]
   34724:	ldr	r0, [r0]
   34728:	cmp	r0, #0
   3472c:	beq	3473c <__assert_fail@plt+0x232a8>
   34730:	movw	r0, #0
   34734:	str	r0, [fp, #-4]
   34738:	b	347ac <__assert_fail@plt+0x23318>
   3473c:	ldr	r0, [fp, #-16]
   34740:	ldrb	r0, [r0, #52]	; 0x34
   34744:	ubfx	r0, r0, #6, #1
   34748:	and	r0, r0, #255	; 0xff
   3474c:	cmp	r0, #0
   34750:	beq	347a0 <__assert_fail@plt+0x2330c>
   34754:	ldr	r0, [fp, #-12]
   34758:	ldr	r1, [fp, #-16]
   3475c:	add	r1, r1, #4
   34760:	bl	33c5c <__assert_fail@plt+0x227c8>
   34764:	ldr	r1, [fp, #-8]
   34768:	str	r0, [r1]
   3476c:	ldr	r0, [fp, #-8]
   34770:	ldr	r0, [r0]
   34774:	cmp	r0, #0
   34778:	beq	34788 <__assert_fail@plt+0x232f4>
   3477c:	movw	r0, #0
   34780:	str	r0, [fp, #-4]
   34784:	b	347ac <__assert_fail@plt+0x23318>
   34788:	ldr	r0, [fp, #-12]
   3478c:	ldr	r0, [r0, #100]	; 0x64
   34790:	ldr	r1, [fp, #-24]	; 0xffffffe8
   34794:	add	r0, r0, r1, lsl #2
   34798:	ldr	r0, [r0]
   3479c:	str	r0, [fp, #-16]
   347a0:	b	347a4 <__assert_fail@plt+0x23310>
   347a4:	ldr	r0, [fp, #-16]
   347a8:	str	r0, [fp, #-4]
   347ac:	ldr	r0, [fp, #-4]
   347b0:	mov	sp, fp
   347b4:	pop	{fp, pc}
   347b8:	push	{fp, lr}
   347bc:	mov	fp, sp
   347c0:	sub	sp, sp, #32
   347c4:	str	r0, [fp, #-8]
   347c8:	str	r1, [fp, #-12]
   347cc:	ldr	r0, [fp, #-12]
   347d0:	ldr	r0, [r0, #104]	; 0x68
   347d4:	str	r0, [sp, #12]
   347d8:	ldr	r0, [fp, #-12]
   347dc:	ldr	r0, [r0, #40]	; 0x28
   347e0:	str	r0, [sp, #8]
   347e4:	ldr	r0, [sp, #8]
   347e8:	add	r0, r0, #1
   347ec:	str	r0, [sp, #8]
   347f0:	ldr	r1, [sp, #12]
   347f4:	cmp	r0, r1
   347f8:	ble	34808 <__assert_fail@plt+0x23374>
   347fc:	movw	r0, #0
   34800:	str	r0, [fp, #-4]
   34804:	b	34890 <__assert_fail@plt+0x233fc>
   34808:	ldr	r0, [fp, #-12]
   3480c:	ldr	r1, [r0, #40]	; 0x28
   34810:	add	r1, r1, #1
   34814:	str	r1, [r0, #40]	; 0x28
   34818:	ldr	r0, [fp, #-12]
   3481c:	ldr	r0, [r0, #100]	; 0x64
   34820:	ldr	r1, [sp, #8]
   34824:	add	r0, r0, r1, lsl #2
   34828:	ldr	r0, [r0]
   3482c:	movw	r1, #0
   34830:	cmp	r0, r1
   34834:	beq	347e4 <__assert_fail@plt+0x23350>
   34838:	ldr	r0, [fp, #-8]
   3483c:	ldr	r1, [fp, #-12]
   34840:	movw	r2, #0
   34844:	bl	3453c <__assert_fail@plt+0x230a8>
   34848:	str	r0, [sp, #16]
   3484c:	ldr	r0, [fp, #-8]
   34850:	ldr	r0, [r0]
   34854:	cmp	r0, #0
   34858:	movw	r0, #0
   3485c:	str	r0, [sp, #4]
   34860:	bne	3487c <__assert_fail@plt+0x233e8>
   34864:	ldr	r0, [sp, #16]
   34868:	movw	r1, #0
   3486c:	cmp	r0, r1
   34870:	movw	r0, #0
   34874:	moveq	r0, #1
   34878:	str	r0, [sp, #4]
   3487c:	ldr	r0, [sp, #4]
   34880:	tst	r0, #1
   34884:	bne	347cc <__assert_fail@plt+0x23338>
   34888:	ldr	r0, [sp, #16]
   3488c:	str	r0, [fp, #-4]
   34890:	ldr	r0, [fp, #-4]
   34894:	mov	sp, fp
   34898:	pop	{fp, pc}
   3489c:	push	{fp, lr}
   348a0:	mov	fp, sp
   348a4:	sub	sp, sp, #24
   348a8:	str	r0, [fp, #-8]
   348ac:	str	r1, [sp, #12]
   348b0:	str	r2, [sp, #8]
   348b4:	ldr	r0, [fp, #-8]
   348b8:	ldr	r0, [r0, #132]	; 0x84
   348bc:	movw	r1, #0
   348c0:	cmp	r0, r1
   348c4:	beq	348cc <__assert_fail@plt+0x23438>
   348c8:	b	348cc <__assert_fail@plt+0x23438>
   348cc:	ldr	r0, [fp, #-8]
   348d0:	ldr	r0, [r0, #128]	; 0x80
   348d4:	cmp	r0, #0
   348d8:	ble	348e0 <__assert_fail@plt+0x2344c>
   348dc:	b	348e0 <__assert_fail@plt+0x2344c>
   348e0:	ldr	r0, [fp, #-8]
   348e4:	ldr	r0, [r0, #124]	; 0x7c
   348e8:	ldr	r1, [fp, #-8]
   348ec:	ldr	r1, [r1, #128]	; 0x80
   348f0:	cmp	r0, r1
   348f4:	bne	34954 <__assert_fail@plt+0x234c0>
   348f8:	ldr	r0, [fp, #-8]
   348fc:	ldr	r0, [r0, #128]	; 0x80
   34900:	lsl	r0, r0, #1
   34904:	str	r0, [sp, #4]
   34908:	ldr	r0, [fp, #-8]
   3490c:	ldr	r0, [r0, #132]	; 0x84
   34910:	ldr	r1, [sp, #4]
   34914:	lsl	r1, r1, #2
   34918:	bl	3fc48 <__assert_fail@plt+0x2e7b4>
   3491c:	str	r0, [sp]
   34920:	ldr	r0, [sp]
   34924:	movw	r1, #0
   34928:	cmp	r0, r1
   3492c:	bne	3493c <__assert_fail@plt+0x234a8>
   34930:	movw	r0, #12
   34934:	str	r0, [fp, #-4]
   34938:	b	349e0 <__assert_fail@plt+0x2354c>
   3493c:	ldr	r0, [sp]
   34940:	ldr	r1, [fp, #-8]
   34944:	str	r0, [r1, #132]	; 0x84
   34948:	ldr	r0, [sp, #4]
   3494c:	ldr	r1, [fp, #-8]
   34950:	str	r0, [r1, #128]	; 0x80
   34954:	mov	r0, #1
   34958:	mov	r1, #24
   3495c:	bl	3fb3c <__assert_fail@plt+0x2e6a8>
   34960:	ldr	r1, [fp, #-8]
   34964:	ldr	lr, [r1, #124]	; 0x7c
   34968:	ldr	r1, [r1, #132]	; 0x84
   3496c:	str	r0, [r1, lr, lsl #2]
   34970:	ldr	r0, [fp, #-8]
   34974:	ldr	r1, [r0, #124]	; 0x7c
   34978:	ldr	r0, [r0, #132]	; 0x84
   3497c:	add	r0, r0, r1, lsl #2
   34980:	ldr	r0, [r0]
   34984:	movw	r1, #0
   34988:	cmp	r0, r1
   3498c:	bne	3499c <__assert_fail@plt+0x23508>
   34990:	movw	r0, #12
   34994:	str	r0, [fp, #-4]
   34998:	b	349e0 <__assert_fail@plt+0x2354c>
   3499c:	ldr	r0, [sp, #12]
   349a0:	ldr	r1, [fp, #-8]
   349a4:	ldr	r2, [r1, #124]	; 0x7c
   349a8:	ldr	r1, [r1, #132]	; 0x84
   349ac:	ldr	r1, [r1, r2, lsl #2]
   349b0:	str	r0, [r1, #4]
   349b4:	ldr	r0, [sp, #8]
   349b8:	ldr	r1, [fp, #-8]
   349bc:	ldr	r2, [r1, #124]	; 0x7c
   349c0:	ldr	r3, [r1, #132]	; 0x84
   349c4:	add	ip, r2, #1
   349c8:	str	ip, [r1, #124]	; 0x7c
   349cc:	add	r1, r3, r2, lsl #2
   349d0:	ldr	r1, [r1]
   349d4:	str	r0, [r1]
   349d8:	movw	r0, #0
   349dc:	str	r0, [fp, #-4]
   349e0:	ldr	r0, [fp, #-4]
   349e4:	mov	sp, fp
   349e8:	pop	{fp, pc}
   349ec:	push	{fp, lr}
   349f0:	mov	fp, sp
   349f4:	sub	sp, sp, #96	; 0x60
   349f8:	str	r0, [fp, #-8]
   349fc:	str	r1, [fp, #-12]
   34a00:	str	r2, [fp, #-16]
   34a04:	ldr	r0, [fp, #-8]
   34a08:	ldr	r0, [r0, #84]	; 0x54
   34a0c:	str	r0, [fp, #-20]	; 0xffffffec
   34a10:	ldr	r0, [fp, #-8]
   34a14:	ldr	r0, [r0, #4]
   34a18:	str	r0, [fp, #-32]	; 0xffffffe0
   34a1c:	ldr	r0, [fp, #-8]
   34a20:	ldr	r1, [fp, #-16]
   34a24:	bl	352d4 <__assert_fail@plt+0x23e40>
   34a28:	str	r0, [fp, #-36]	; 0xffffffdc
   34a2c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   34a30:	cmn	r0, #1
   34a34:	beq	34a94 <__assert_fail@plt+0x23600>
   34a38:	ldr	r0, [fp, #-8]
   34a3c:	ldr	r0, [r0, #116]	; 0x74
   34a40:	ldr	r1, [fp, #-36]	; 0xffffffdc
   34a44:	movw	r2, #24
   34a48:	mul	r1, r1, r2
   34a4c:	add	r0, r0, r1
   34a50:	str	r0, [fp, #-40]	; 0xffffffd8
   34a54:	ldr	r0, [fp, #-40]	; 0xffffffd8
   34a58:	ldr	r0, [r0]
   34a5c:	ldr	r1, [fp, #-12]
   34a60:	cmp	r0, r1
   34a64:	bne	34a74 <__assert_fail@plt+0x235e0>
   34a68:	movw	r0, #0
   34a6c:	str	r0, [fp, #-4]
   34a70:	b	34f7c <__assert_fail@plt+0x23ae8>
   34a74:	b	34a78 <__assert_fail@plt+0x235e4>
   34a78:	ldr	r0, [fp, #-40]	; 0xffffffd8
   34a7c:	add	r1, r0, #24
   34a80:	str	r1, [fp, #-40]	; 0xffffffd8
   34a84:	ldrsb	r0, [r0, #20]
   34a88:	cmp	r0, #0
   34a8c:	bne	34a54 <__assert_fail@plt+0x235c0>
   34a90:	b	34a94 <__assert_fail@plt+0x23600>
   34a94:	ldr	r0, [fp, #-20]	; 0xffffffec
   34a98:	ldr	r0, [r0]
   34a9c:	ldr	r1, [fp, #-12]
   34aa0:	add	r0, r0, r1, lsl #3
   34aa4:	ldr	r0, [r0]
   34aa8:	str	r0, [fp, #-24]	; 0xffffffe8
   34aac:	movw	r0, #0
   34ab0:	str	r0, [fp, #-28]	; 0xffffffe4
   34ab4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   34ab8:	ldr	r1, [fp, #-8]
   34abc:	ldr	r1, [r1, #124]	; 0x7c
   34ac0:	cmp	r0, r1
   34ac4:	bge	34f74 <__assert_fail@plt+0x23ae0>
   34ac8:	ldr	r0, [fp, #-8]
   34acc:	ldr	r0, [r0, #132]	; 0x84
   34ad0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   34ad4:	ldr	r0, [r0, r1, lsl #2]
   34ad8:	str	r0, [sp, #48]	; 0x30
   34adc:	ldr	r0, [fp, #-20]	; 0xffffffec
   34ae0:	ldr	r0, [r0]
   34ae4:	ldr	r1, [sp, #48]	; 0x30
   34ae8:	ldr	r1, [r1, #4]
   34aec:	add	r0, r0, r1, lsl #3
   34af0:	ldr	r0, [r0]
   34af4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   34af8:	cmp	r0, r1
   34afc:	beq	34b04 <__assert_fail@plt+0x23670>
   34b00:	b	34f64 <__assert_fail@plt+0x23ad0>
   34b04:	ldr	r0, [sp, #48]	; 0x30
   34b08:	ldr	r0, [r0]
   34b0c:	str	r0, [sp, #36]	; 0x24
   34b10:	ldr	r0, [fp, #-16]
   34b14:	str	r0, [sp, #32]
   34b18:	movw	r0, #0
   34b1c:	str	r0, [sp, #40]	; 0x28
   34b20:	ldr	r0, [sp, #40]	; 0x28
   34b24:	ldr	r1, [sp, #48]	; 0x30
   34b28:	ldr	r1, [r1, #16]
   34b2c:	cmp	r0, r1
   34b30:	bge	34c9c <__assert_fail@plt+0x23808>
   34b34:	ldr	r0, [sp, #48]	; 0x30
   34b38:	ldr	r0, [r0, #20]
   34b3c:	ldr	r1, [sp, #40]	; 0x28
   34b40:	add	r0, r0, r1, lsl #2
   34b44:	ldr	r0, [r0]
   34b48:	str	r0, [sp, #44]	; 0x2c
   34b4c:	ldr	r0, [sp, #44]	; 0x2c
   34b50:	ldr	r0, [r0, #4]
   34b54:	ldr	r1, [sp, #36]	; 0x24
   34b58:	sub	r0, r0, r1
   34b5c:	str	r0, [sp, #28]
   34b60:	ldr	r0, [sp, #28]
   34b64:	cmp	r0, #0
   34b68:	ble	34c14 <__assert_fail@plt+0x23780>
   34b6c:	ldr	r0, [sp, #32]
   34b70:	ldr	r1, [sp, #28]
   34b74:	add	r0, r0, r1
   34b78:	ldr	r1, [fp, #-8]
   34b7c:	ldr	r1, [r1, #28]
   34b80:	cmp	r0, r1
   34b84:	ble	34be4 <__assert_fail@plt+0x23750>
   34b88:	ldr	r0, [sp, #32]
   34b8c:	ldr	r1, [sp, #28]
   34b90:	add	r0, r0, r1
   34b94:	ldr	r1, [fp, #-8]
   34b98:	ldr	r1, [r1, #48]	; 0x30
   34b9c:	cmp	r0, r1
   34ba0:	ble	34ba8 <__assert_fail@plt+0x23714>
   34ba4:	b	34c9c <__assert_fail@plt+0x23808>
   34ba8:	ldr	r0, [fp, #-8]
   34bac:	ldr	r1, [sp, #32]
   34bb0:	ldr	r2, [sp, #28]
   34bb4:	add	r1, r1, r2
   34bb8:	bl	353bc <__assert_fail@plt+0x23f28>
   34bbc:	str	r0, [fp, #-44]	; 0xffffffd4
   34bc0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   34bc4:	cmp	r0, #0
   34bc8:	beq	34bd8 <__assert_fail@plt+0x23744>
   34bcc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   34bd0:	str	r0, [fp, #-4]
   34bd4:	b	34f7c <__assert_fail@plt+0x23ae8>
   34bd8:	ldr	r0, [fp, #-8]
   34bdc:	ldr	r0, [r0, #4]
   34be0:	str	r0, [fp, #-32]	; 0xffffffe0
   34be4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   34be8:	ldr	r1, [sp, #32]
   34bec:	add	r0, r0, r1
   34bf0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   34bf4:	ldr	r2, [sp, #36]	; 0x24
   34bf8:	add	r1, r1, r2
   34bfc:	ldr	r2, [sp, #28]
   34c00:	bl	11284 <memcmp@plt>
   34c04:	cmp	r0, #0
   34c08:	beq	34c10 <__assert_fail@plt+0x2377c>
   34c0c:	b	34c9c <__assert_fail@plt+0x23808>
   34c10:	b	34c14 <__assert_fail@plt+0x23780>
   34c14:	ldr	r0, [sp, #28]
   34c18:	ldr	r1, [sp, #32]
   34c1c:	add	r0, r1, r0
   34c20:	str	r0, [sp, #32]
   34c24:	ldr	r0, [sp, #28]
   34c28:	ldr	r1, [sp, #36]	; 0x24
   34c2c:	add	r0, r1, r0
   34c30:	str	r0, [sp, #36]	; 0x24
   34c34:	ldr	r0, [fp, #-8]
   34c38:	ldr	r1, [sp, #48]	; 0x30
   34c3c:	ldr	r2, [sp, #44]	; 0x2c
   34c40:	ldr	r3, [fp, #-12]
   34c44:	ldr	ip, [fp, #-16]
   34c48:	str	ip, [sp]
   34c4c:	bl	354d8 <__assert_fail@plt+0x24044>
   34c50:	str	r0, [fp, #-44]	; 0xffffffd4
   34c54:	ldr	r0, [fp, #-8]
   34c58:	ldr	r0, [r0, #4]
   34c5c:	str	r0, [fp, #-32]	; 0xffffffe0
   34c60:	ldr	r0, [fp, #-44]	; 0xffffffd4
   34c64:	cmp	r0, #1
   34c68:	bne	34c70 <__assert_fail@plt+0x237dc>
   34c6c:	b	34c8c <__assert_fail@plt+0x237f8>
   34c70:	ldr	r0, [fp, #-44]	; 0xffffffd4
   34c74:	cmp	r0, #0
   34c78:	beq	34c88 <__assert_fail@plt+0x237f4>
   34c7c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   34c80:	str	r0, [fp, #-4]
   34c84:	b	34f7c <__assert_fail@plt+0x23ae8>
   34c88:	b	34c8c <__assert_fail@plt+0x237f8>
   34c8c:	ldr	r0, [sp, #40]	; 0x28
   34c90:	add	r0, r0, #1
   34c94:	str	r0, [sp, #40]	; 0x28
   34c98:	b	34b20 <__assert_fail@plt+0x2368c>
   34c9c:	ldr	r0, [sp, #40]	; 0x28
   34ca0:	ldr	r1, [sp, #48]	; 0x30
   34ca4:	ldr	r1, [r1, #16]
   34ca8:	cmp	r0, r1
   34cac:	bge	34cb4 <__assert_fail@plt+0x23820>
   34cb0:	b	34f64 <__assert_fail@plt+0x23ad0>
   34cb4:	ldr	r0, [sp, #40]	; 0x28
   34cb8:	cmp	r0, #0
   34cbc:	ble	34ccc <__assert_fail@plt+0x23838>
   34cc0:	ldr	r0, [sp, #36]	; 0x24
   34cc4:	add	r0, r0, #1
   34cc8:	str	r0, [sp, #36]	; 0x24
   34ccc:	b	34cd0 <__assert_fail@plt+0x2383c>
   34cd0:	ldr	r0, [sp, #36]	; 0x24
   34cd4:	ldr	r1, [fp, #-16]
   34cd8:	cmp	r0, r1
   34cdc:	bgt	34f60 <__assert_fail@plt+0x23acc>
   34ce0:	ldr	r0, [sp, #36]	; 0x24
   34ce4:	ldr	r1, [sp, #48]	; 0x30
   34ce8:	ldr	r1, [r1]
   34cec:	sub	r0, r0, r1
   34cf0:	str	r0, [sp, #20]
   34cf4:	ldr	r0, [sp, #20]
   34cf8:	cmp	r0, #0
   34cfc:	ble	34da0 <__assert_fail@plt+0x2390c>
   34d00:	ldr	r0, [sp, #32]
   34d04:	ldr	r1, [fp, #-8]
   34d08:	ldr	r1, [r1, #28]
   34d0c:	cmp	r0, r1
   34d10:	blt	34d64 <__assert_fail@plt+0x238d0>
   34d14:	ldr	r0, [sp, #32]
   34d18:	ldr	r1, [fp, #-8]
   34d1c:	ldr	r1, [r1, #48]	; 0x30
   34d20:	cmp	r0, r1
   34d24:	blt	34d2c <__assert_fail@plt+0x23898>
   34d28:	b	34f60 <__assert_fail@plt+0x23acc>
   34d2c:	ldr	r0, [fp, #-8]
   34d30:	ldr	r1, [sp, #32]
   34d34:	add	r1, r1, #1
   34d38:	bl	34198 <__assert_fail@plt+0x22d04>
   34d3c:	str	r0, [fp, #-44]	; 0xffffffd4
   34d40:	ldr	r0, [fp, #-44]	; 0xffffffd4
   34d44:	cmp	r0, #0
   34d48:	beq	34d58 <__assert_fail@plt+0x238c4>
   34d4c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   34d50:	str	r0, [fp, #-4]
   34d54:	b	34f7c <__assert_fail@plt+0x23ae8>
   34d58:	ldr	r0, [fp, #-8]
   34d5c:	ldr	r0, [r0, #4]
   34d60:	str	r0, [fp, #-32]	; 0xffffffe0
   34d64:	ldr	r0, [fp, #-32]	; 0xffffffe0
   34d68:	ldr	r1, [sp, #32]
   34d6c:	add	r2, r1, #1
   34d70:	str	r2, [sp, #32]
   34d74:	add	r0, r0, r1
   34d78:	ldrb	r0, [r0]
   34d7c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   34d80:	ldr	r2, [sp, #36]	; 0x24
   34d84:	sub	r2, r2, #1
   34d88:	add	r1, r1, r2
   34d8c:	ldrb	r1, [r1]
   34d90:	cmp	r0, r1
   34d94:	beq	34d9c <__assert_fail@plt+0x23908>
   34d98:	b	34f60 <__assert_fail@plt+0x23acc>
   34d9c:	b	34da0 <__assert_fail@plt+0x2390c>
   34da0:	ldr	r0, [fp, #-8]
   34da4:	ldr	r0, [r0, #100]	; 0x64
   34da8:	ldr	r1, [sp, #36]	; 0x24
   34dac:	add	r0, r0, r1, lsl #2
   34db0:	ldr	r0, [r0]
   34db4:	movw	r1, #0
   34db8:	cmp	r0, r1
   34dbc:	bne	34dc4 <__assert_fail@plt+0x23930>
   34dc0:	b	34f50 <__assert_fail@plt+0x23abc>
   34dc4:	ldr	r0, [fp, #-8]
   34dc8:	ldr	r0, [r0, #100]	; 0x64
   34dcc:	ldr	r1, [sp, #36]	; 0x24
   34dd0:	add	r0, r0, r1, lsl #2
   34dd4:	ldr	r0, [r0]
   34dd8:	add	r0, r0, #4
   34ddc:	str	r0, [sp, #16]
   34de0:	ldr	r0, [fp, #-20]	; 0xffffffec
   34de4:	ldr	r1, [sp, #16]
   34de8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   34dec:	movw	r3, #9
   34df0:	bl	355cc <__assert_fail@plt+0x24138>
   34df4:	str	r0, [sp, #24]
   34df8:	ldr	r0, [sp, #24]
   34dfc:	cmn	r0, #1
   34e00:	bne	34e08 <__assert_fail@plt+0x23974>
   34e04:	b	34f50 <__assert_fail@plt+0x23abc>
   34e08:	ldr	r0, [sp, #48]	; 0x30
   34e0c:	ldr	r0, [r0, #8]
   34e10:	movw	r1, #0
   34e14:	cmp	r0, r1
   34e18:	bne	34e64 <__assert_fail@plt+0x239d0>
   34e1c:	ldr	r0, [sp, #36]	; 0x24
   34e20:	ldr	r1, [sp, #48]	; 0x30
   34e24:	ldr	r1, [r1]
   34e28:	sub	r0, r0, r1
   34e2c:	add	r1, r0, #1
   34e30:	movw	r0, #12
   34e34:	bl	3fb3c <__assert_fail@plt+0x2e6a8>
   34e38:	ldr	r1, [sp, #48]	; 0x30
   34e3c:	str	r0, [r1, #8]
   34e40:	ldr	r0, [sp, #48]	; 0x30
   34e44:	ldr	r0, [r0, #8]
   34e48:	movw	r1, #0
   34e4c:	cmp	r0, r1
   34e50:	bne	34e60 <__assert_fail@plt+0x239cc>
   34e54:	movw	r0, #12
   34e58:	str	r0, [fp, #-4]
   34e5c:	b	34f7c <__assert_fail@plt+0x23ae8>
   34e60:	b	34e64 <__assert_fail@plt+0x239d0>
   34e64:	ldr	r0, [fp, #-8]
   34e68:	ldr	r1, [sp, #48]	; 0x30
   34e6c:	ldr	r1, [r1, #8]
   34e70:	ldr	r2, [sp, #48]	; 0x30
   34e74:	ldr	r2, [r2, #4]
   34e78:	ldr	r3, [sp, #48]	; 0x30
   34e7c:	ldr	r3, [r3]
   34e80:	ldr	ip, [sp, #24]
   34e84:	ldr	lr, [sp, #36]	; 0x24
   34e88:	str	ip, [sp]
   34e8c:	str	lr, [sp, #4]
   34e90:	movw	ip, #9
   34e94:	str	ip, [sp, #8]
   34e98:	bl	35684 <__assert_fail@plt+0x241f0>
   34e9c:	str	r0, [fp, #-44]	; 0xffffffd4
   34ea0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   34ea4:	cmp	r0, #1
   34ea8:	bne	34eb0 <__assert_fail@plt+0x23a1c>
   34eac:	b	34f50 <__assert_fail@plt+0x23abc>
   34eb0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   34eb4:	cmp	r0, #0
   34eb8:	beq	34ec8 <__assert_fail@plt+0x23a34>
   34ebc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   34ec0:	str	r0, [fp, #-4]
   34ec4:	b	34f7c <__assert_fail@plt+0x23ae8>
   34ec8:	ldr	r0, [sp, #48]	; 0x30
   34ecc:	ldr	r1, [sp, #24]
   34ed0:	ldr	r2, [sp, #36]	; 0x24
   34ed4:	bl	35dc8 <__assert_fail@plt+0x24934>
   34ed8:	str	r0, [sp, #44]	; 0x2c
   34edc:	ldr	r0, [sp, #44]	; 0x2c
   34ee0:	movw	r1, #0
   34ee4:	cmp	r0, r1
   34ee8:	bne	34ef8 <__assert_fail@plt+0x23a64>
   34eec:	movw	r0, #12
   34ef0:	str	r0, [fp, #-4]
   34ef4:	b	34f7c <__assert_fail@plt+0x23ae8>
   34ef8:	ldr	r0, [fp, #-8]
   34efc:	ldr	r1, [sp, #48]	; 0x30
   34f00:	ldr	r2, [sp, #44]	; 0x2c
   34f04:	ldr	r3, [fp, #-12]
   34f08:	ldr	ip, [fp, #-16]
   34f0c:	str	ip, [sp]
   34f10:	bl	354d8 <__assert_fail@plt+0x24044>
   34f14:	str	r0, [fp, #-44]	; 0xffffffd4
   34f18:	ldr	r0, [fp, #-8]
   34f1c:	ldr	r0, [r0, #4]
   34f20:	str	r0, [fp, #-32]	; 0xffffffe0
   34f24:	ldr	r0, [fp, #-44]	; 0xffffffd4
   34f28:	cmp	r0, #1
   34f2c:	bne	34f34 <__assert_fail@plt+0x23aa0>
   34f30:	b	34f50 <__assert_fail@plt+0x23abc>
   34f34:	ldr	r0, [fp, #-44]	; 0xffffffd4
   34f38:	cmp	r0, #0
   34f3c:	beq	34f4c <__assert_fail@plt+0x23ab8>
   34f40:	ldr	r0, [fp, #-44]	; 0xffffffd4
   34f44:	str	r0, [fp, #-4]
   34f48:	b	34f7c <__assert_fail@plt+0x23ae8>
   34f4c:	b	34f50 <__assert_fail@plt+0x23abc>
   34f50:	ldr	r0, [sp, #36]	; 0x24
   34f54:	add	r0, r0, #1
   34f58:	str	r0, [sp, #36]	; 0x24
   34f5c:	b	34cd0 <__assert_fail@plt+0x2383c>
   34f60:	b	34f64 <__assert_fail@plt+0x23ad0>
   34f64:	ldr	r0, [fp, #-28]	; 0xffffffe4
   34f68:	add	r0, r0, #1
   34f6c:	str	r0, [fp, #-28]	; 0xffffffe4
   34f70:	b	34ab4 <__assert_fail@plt+0x23620>
   34f74:	movw	r0, #0
   34f78:	str	r0, [fp, #-4]
   34f7c:	ldr	r0, [fp, #-4]
   34f80:	mov	sp, fp
   34f84:	pop	{fp, pc}
   34f88:	push	{fp, lr}
   34f8c:	mov	fp, sp
   34f90:	sub	sp, sp, #32
   34f94:	str	r0, [fp, #-8]
   34f98:	str	r1, [fp, #-12]
   34f9c:	str	r2, [sp, #16]
   34fa0:	ldr	r0, [fp, #-12]
   34fa4:	movw	r1, #0
   34fa8:	cmp	r0, r1
   34fac:	beq	35038 <__assert_fail@plt+0x23ba4>
   34fb0:	ldr	r0, [fp, #-12]
   34fb4:	ldr	r0, [r0, #4]
   34fb8:	cmp	r0, #0
   34fbc:	ble	35038 <__assert_fail@plt+0x23ba4>
   34fc0:	ldr	r0, [sp, #16]
   34fc4:	movw	r1, #0
   34fc8:	cmp	r0, r1
   34fcc:	beq	35038 <__assert_fail@plt+0x23ba4>
   34fd0:	ldr	r0, [sp, #16]
   34fd4:	ldr	r0, [r0, #4]
   34fd8:	cmp	r0, #0
   34fdc:	ble	35038 <__assert_fail@plt+0x23ba4>
   34fe0:	ldr	r0, [fp, #-12]
   34fe4:	ldr	r0, [r0, #4]
   34fe8:	ldr	r1, [sp, #16]
   34fec:	ldr	r1, [r1, #4]
   34ff0:	add	r0, r0, r1
   34ff4:	ldr	r1, [fp, #-8]
   34ff8:	str	r0, [r1]
   34ffc:	ldr	r0, [fp, #-8]
   35000:	ldr	r0, [r0]
   35004:	lsl	r0, r0, #2
   35008:	bl	3fbd8 <__assert_fail@plt+0x2e744>
   3500c:	ldr	r1, [fp, #-8]
   35010:	str	r0, [r1, #8]
   35014:	ldr	r0, [fp, #-8]
   35018:	ldr	r0, [r0, #8]
   3501c:	movw	r1, #0
   35020:	cmp	r0, r1
   35024:	bne	35034 <__assert_fail@plt+0x23ba0>
   35028:	movw	r0, #12
   3502c:	str	r0, [fp, #-4]
   35030:	b	352c8 <__assert_fail@plt+0x23e34>
   35034:	b	350c4 <__assert_fail@plt+0x23c30>
   35038:	ldr	r0, [fp, #-12]
   3503c:	movw	r1, #0
   35040:	cmp	r0, r1
   35044:	beq	3506c <__assert_fail@plt+0x23bd8>
   35048:	ldr	r0, [fp, #-12]
   3504c:	ldr	r0, [r0, #4]
   35050:	cmp	r0, #0
   35054:	ble	3506c <__assert_fail@plt+0x23bd8>
   35058:	ldr	r0, [fp, #-8]
   3505c:	ldr	r1, [fp, #-12]
   35060:	bl	30d78 <__assert_fail@plt+0x1f8e4>
   35064:	str	r0, [fp, #-4]
   35068:	b	352c8 <__assert_fail@plt+0x23e34>
   3506c:	ldr	r0, [sp, #16]
   35070:	movw	r1, #0
   35074:	cmp	r0, r1
   35078:	beq	350a0 <__assert_fail@plt+0x23c0c>
   3507c:	ldr	r0, [sp, #16]
   35080:	ldr	r0, [r0, #4]
   35084:	cmp	r0, #0
   35088:	ble	350a0 <__assert_fail@plt+0x23c0c>
   3508c:	ldr	r0, [fp, #-8]
   35090:	ldr	r1, [sp, #16]
   35094:	bl	30d78 <__assert_fail@plt+0x1f8e4>
   35098:	str	r0, [fp, #-4]
   3509c:	b	352c8 <__assert_fail@plt+0x23e34>
   350a0:	ldr	r0, [fp, #-8]
   350a4:	movw	r1, #0
   350a8:	and	r1, r1, #255	; 0xff
   350ac:	movw	r2, #12
   350b0:	bl	113d4 <memset@plt>
   350b4:	b	350b8 <__assert_fail@plt+0x23c24>
   350b8:	movw	r0, #0
   350bc:	str	r0, [fp, #-4]
   350c0:	b	352c8 <__assert_fail@plt+0x23e34>
   350c4:	movw	r0, #0
   350c8:	str	r0, [sp, #4]
   350cc:	str	r0, [sp, #8]
   350d0:	str	r0, [sp, #12]
   350d4:	ldr	r0, [sp, #12]
   350d8:	ldr	r1, [fp, #-12]
   350dc:	ldr	r1, [r1, #4]
   350e0:	cmp	r0, r1
   350e4:	movw	r0, #0
   350e8:	str	r0, [sp]
   350ec:	bge	3510c <__assert_fail@plt+0x23c78>
   350f0:	ldr	r0, [sp, #8]
   350f4:	ldr	r1, [sp, #16]
   350f8:	ldr	r1, [r1, #4]
   350fc:	cmp	r0, r1
   35100:	movw	r0, #0
   35104:	movlt	r0, #1
   35108:	str	r0, [sp]
   3510c:	ldr	r0, [sp]
   35110:	tst	r0, #1
   35114:	beq	351ec <__assert_fail@plt+0x23d58>
   35118:	ldr	r0, [fp, #-12]
   3511c:	ldr	r0, [r0, #8]
   35120:	ldr	r1, [sp, #12]
   35124:	ldr	r0, [r0, r1, lsl #2]
   35128:	ldr	r1, [sp, #16]
   3512c:	ldr	r1, [r1, #8]
   35130:	ldr	r2, [sp, #8]
   35134:	add	r1, r1, r2, lsl #2
   35138:	ldr	r1, [r1]
   3513c:	cmp	r0, r1
   35140:	ble	3517c <__assert_fail@plt+0x23ce8>
   35144:	ldr	r0, [sp, #16]
   35148:	ldr	r0, [r0, #8]
   3514c:	ldr	r1, [sp, #8]
   35150:	add	r2, r1, #1
   35154:	str	r2, [sp, #8]
   35158:	ldr	r0, [r0, r1, lsl #2]
   3515c:	ldr	r1, [fp, #-8]
   35160:	ldr	r1, [r1, #8]
   35164:	ldr	r2, [sp, #4]
   35168:	add	r3, r2, #1
   3516c:	str	r3, [sp, #4]
   35170:	add	r1, r1, r2, lsl #2
   35174:	str	r0, [r1]
   35178:	b	350d4 <__assert_fail@plt+0x23c40>
   3517c:	ldr	r0, [fp, #-12]
   35180:	ldr	r0, [r0, #8]
   35184:	ldr	r1, [sp, #12]
   35188:	ldr	r0, [r0, r1, lsl #2]
   3518c:	ldr	r1, [sp, #16]
   35190:	ldr	r1, [r1, #8]
   35194:	ldr	r2, [sp, #8]
   35198:	add	r1, r1, r2, lsl #2
   3519c:	ldr	r1, [r1]
   351a0:	cmp	r0, r1
   351a4:	bne	351b4 <__assert_fail@plt+0x23d20>
   351a8:	ldr	r0, [sp, #8]
   351ac:	add	r0, r0, #1
   351b0:	str	r0, [sp, #8]
   351b4:	ldr	r0, [fp, #-12]
   351b8:	ldr	r0, [r0, #8]
   351bc:	ldr	r1, [sp, #12]
   351c0:	add	r2, r1, #1
   351c4:	str	r2, [sp, #12]
   351c8:	ldr	r0, [r0, r1, lsl #2]
   351cc:	ldr	r1, [fp, #-8]
   351d0:	ldr	r1, [r1, #8]
   351d4:	ldr	r2, [sp, #4]
   351d8:	add	r3, r2, #1
   351dc:	str	r3, [sp, #4]
   351e0:	add	r1, r1, r2, lsl #2
   351e4:	str	r0, [r1]
   351e8:	b	350d4 <__assert_fail@plt+0x23c40>
   351ec:	ldr	r0, [sp, #12]
   351f0:	ldr	r1, [fp, #-12]
   351f4:	ldr	r1, [r1, #4]
   351f8:	cmp	r0, r1
   351fc:	bge	35250 <__assert_fail@plt+0x23dbc>
   35200:	ldr	r0, [fp, #-8]
   35204:	ldr	r0, [r0, #8]
   35208:	ldr	r1, [sp, #4]
   3520c:	add	r0, r0, r1, lsl #2
   35210:	ldr	r1, [fp, #-12]
   35214:	ldr	r2, [r1, #4]
   35218:	ldr	r1, [r1, #8]
   3521c:	ldr	r3, [sp, #12]
   35220:	add	r1, r1, r3, lsl #2
   35224:	sub	r2, r2, r3
   35228:	lsl	r2, r2, #2
   3522c:	bl	11248 <memcpy@plt>
   35230:	ldr	r0, [fp, #-12]
   35234:	ldr	r0, [r0, #4]
   35238:	ldr	r1, [sp, #12]
   3523c:	sub	r0, r0, r1
   35240:	ldr	r1, [sp, #4]
   35244:	add	r0, r1, r0
   35248:	str	r0, [sp, #4]
   3524c:	b	352b4 <__assert_fail@plt+0x23e20>
   35250:	ldr	r0, [sp, #8]
   35254:	ldr	r1, [sp, #16]
   35258:	ldr	r1, [r1, #4]
   3525c:	cmp	r0, r1
   35260:	bge	352b0 <__assert_fail@plt+0x23e1c>
   35264:	ldr	r0, [fp, #-8]
   35268:	ldr	r0, [r0, #8]
   3526c:	ldr	r1, [sp, #4]
   35270:	add	r0, r0, r1, lsl #2
   35274:	ldr	r1, [sp, #16]
   35278:	ldr	r2, [r1, #4]
   3527c:	ldr	r1, [r1, #8]
   35280:	ldr	r3, [sp, #8]
   35284:	add	r1, r1, r3, lsl #2
   35288:	sub	r2, r2, r3
   3528c:	lsl	r2, r2, #2
   35290:	bl	11248 <memcpy@plt>
   35294:	ldr	r0, [sp, #16]
   35298:	ldr	r0, [r0, #4]
   3529c:	ldr	r1, [sp, #8]
   352a0:	sub	r0, r0, r1
   352a4:	ldr	r1, [sp, #4]
   352a8:	add	r0, r1, r0
   352ac:	str	r0, [sp, #4]
   352b0:	b	352b4 <__assert_fail@plt+0x23e20>
   352b4:	ldr	r0, [sp, #4]
   352b8:	ldr	r1, [fp, #-8]
   352bc:	str	r0, [r1, #4]
   352c0:	movw	r0, #0
   352c4:	str	r0, [fp, #-4]
   352c8:	ldr	r0, [fp, #-4]
   352cc:	mov	sp, fp
   352d0:	pop	{fp, pc}
   352d4:	sub	sp, sp, #28
   352d8:	str	r0, [sp, #20]
   352dc:	str	r1, [sp, #16]
   352e0:	ldr	r0, [sp, #20]
   352e4:	ldr	r0, [r0, #108]	; 0x6c
   352e8:	str	r0, [sp, #8]
   352ec:	str	r0, [sp]
   352f0:	movw	r0, #0
   352f4:	str	r0, [sp, #12]
   352f8:	ldr	r0, [sp, #12]
   352fc:	ldr	r1, [sp, #8]
   35300:	cmp	r0, r1
   35304:	bge	35364 <__assert_fail@plt+0x23ed0>
   35308:	ldr	r0, [sp, #12]
   3530c:	ldr	r1, [sp, #8]
   35310:	add	r0, r0, r1
   35314:	movw	r1, #2
   35318:	sdiv	r0, r0, r1
   3531c:	str	r0, [sp, #4]
   35320:	ldr	r0, [sp, #20]
   35324:	ldr	r0, [r0, #116]	; 0x74
   35328:	ldr	r1, [sp, #4]
   3532c:	movw	r2, #24
   35330:	mul	r1, r1, r2
   35334:	add	r0, r0, r1
   35338:	ldr	r0, [r0, #4]
   3533c:	ldr	r1, [sp, #16]
   35340:	cmp	r0, r1
   35344:	bge	35358 <__assert_fail@plt+0x23ec4>
   35348:	ldr	r0, [sp, #4]
   3534c:	add	r0, r0, #1
   35350:	str	r0, [sp, #12]
   35354:	b	35360 <__assert_fail@plt+0x23ecc>
   35358:	ldr	r0, [sp, #4]
   3535c:	str	r0, [sp, #8]
   35360:	b	352f8 <__assert_fail@plt+0x23e64>
   35364:	ldr	r0, [sp, #12]
   35368:	ldr	r1, [sp]
   3536c:	cmp	r0, r1
   35370:	bge	353a8 <__assert_fail@plt+0x23f14>
   35374:	ldr	r0, [sp, #20]
   35378:	ldr	r0, [r0, #116]	; 0x74
   3537c:	ldr	r1, [sp, #12]
   35380:	movw	r2, #24
   35384:	mul	r1, r1, r2
   35388:	add	r0, r0, r1
   3538c:	ldr	r0, [r0, #4]
   35390:	ldr	r1, [sp, #16]
   35394:	cmp	r0, r1
   35398:	bne	353a8 <__assert_fail@plt+0x23f14>
   3539c:	ldr	r0, [sp, #12]
   353a0:	str	r0, [sp, #24]
   353a4:	b	353b0 <__assert_fail@plt+0x23f1c>
   353a8:	mvn	r0, #0
   353ac:	str	r0, [sp, #24]
   353b0:	ldr	r0, [sp, #24]
   353b4:	add	sp, sp, #28
   353b8:	bx	lr
   353bc:	push	{fp, lr}
   353c0:	mov	fp, sp
   353c4:	sub	sp, sp, #24
   353c8:	str	r0, [fp, #-8]
   353cc:	str	r1, [sp, #12]
   353d0:	ldr	r0, [fp, #-8]
   353d4:	ldr	r0, [r0, #104]	; 0x68
   353d8:	str	r0, [sp, #8]
   353dc:	ldr	r0, [sp, #12]
   353e0:	ldr	r1, [fp, #-8]
   353e4:	ldr	r1, [r1, #36]	; 0x24
   353e8:	cmp	r0, r1
   353ec:	blt	35408 <__assert_fail@plt+0x23f74>
   353f0:	ldr	r0, [fp, #-8]
   353f4:	ldr	r0, [r0, #36]	; 0x24
   353f8:	ldr	r1, [fp, #-8]
   353fc:	ldr	r1, [r1, #48]	; 0x30
   35400:	cmp	r0, r1
   35404:	blt	35434 <__assert_fail@plt+0x23fa0>
   35408:	ldr	r0, [sp, #12]
   3540c:	ldr	r1, [fp, #-8]
   35410:	ldr	r1, [r1, #28]
   35414:	cmp	r0, r1
   35418:	blt	35464 <__assert_fail@plt+0x23fd0>
   3541c:	ldr	r0, [fp, #-8]
   35420:	ldr	r0, [r0, #28]
   35424:	ldr	r1, [fp, #-8]
   35428:	ldr	r1, [r1, #48]	; 0x30
   3542c:	cmp	r0, r1
   35430:	bge	35464 <__assert_fail@plt+0x23fd0>
   35434:	ldr	r0, [fp, #-8]
   35438:	ldr	r1, [sp, #12]
   3543c:	add	r1, r1, #1
   35440:	bl	34198 <__assert_fail@plt+0x22d04>
   35444:	str	r0, [sp, #4]
   35448:	ldr	r0, [sp, #4]
   3544c:	cmp	r0, #0
   35450:	beq	35460 <__assert_fail@plt+0x23fcc>
   35454:	ldr	r0, [sp, #4]
   35458:	str	r0, [fp, #-4]
   3545c:	b	354cc <__assert_fail@plt+0x24038>
   35460:	b	35464 <__assert_fail@plt+0x23fd0>
   35464:	ldr	r0, [sp, #8]
   35468:	ldr	r1, [sp, #12]
   3546c:	cmp	r0, r1
   35470:	bge	354c4 <__assert_fail@plt+0x24030>
   35474:	ldr	r0, [fp, #-8]
   35478:	ldr	r0, [r0, #100]	; 0x64
   3547c:	movw	r1, #0
   35480:	cmp	r0, r1
   35484:	beq	3548c <__assert_fail@plt+0x23ff8>
   35488:	b	3548c <__assert_fail@plt+0x23ff8>
   3548c:	ldr	r0, [fp, #-8]
   35490:	ldr	r0, [r0, #100]	; 0x64
   35494:	ldr	r1, [sp, #8]
   35498:	add	r0, r0, r1, lsl #2
   3549c:	add	r0, r0, #4
   354a0:	ldr	r2, [sp, #12]
   354a4:	sub	r1, r2, r1
   354a8:	lsl	r2, r1, #2
   354ac:	movw	r1, #0
   354b0:	and	r1, r1, #255	; 0xff
   354b4:	bl	113d4 <memset@plt>
   354b8:	ldr	r0, [sp, #12]
   354bc:	ldr	r1, [fp, #-8]
   354c0:	str	r0, [r1, #104]	; 0x68
   354c4:	movw	r0, #0
   354c8:	str	r0, [fp, #-4]
   354cc:	ldr	r0, [fp, #-4]
   354d0:	mov	sp, fp
   354d4:	pop	{fp, pc}
   354d8:	push	{r4, sl, fp, lr}
   354dc:	add	fp, sp, #8
   354e0:	sub	sp, sp, #48	; 0x30
   354e4:	ldr	ip, [fp, #8]
   354e8:	str	r0, [fp, #-16]
   354ec:	str	r1, [fp, #-20]	; 0xffffffec
   354f0:	str	r2, [fp, #-24]	; 0xffffffe8
   354f4:	str	r3, [sp, #28]
   354f8:	ldr	r0, [fp, #-16]
   354fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   35500:	add	r1, r1, #8
   35504:	ldr	r2, [fp, #-24]	; 0xffffffe8
   35508:	ldr	r2, [r2]
   3550c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   35510:	ldr	r3, [r3, #4]
   35514:	ldr	lr, [sp, #28]
   35518:	ldr	r4, [fp, #8]
   3551c:	str	lr, [sp]
   35520:	str	r4, [sp, #4]
   35524:	movw	lr, #8
   35528:	str	lr, [sp, #8]
   3552c:	str	ip, [sp, #16]
   35530:	bl	35684 <__assert_fail@plt+0x241f0>
   35534:	str	r0, [sp, #24]
   35538:	ldr	r0, [sp, #24]
   3553c:	cmp	r0, #0
   35540:	beq	35550 <__assert_fail@plt+0x240bc>
   35544:	ldr	r0, [sp, #24]
   35548:	str	r0, [fp, #-12]
   3554c:	b	355c0 <__assert_fail@plt+0x2412c>
   35550:	ldr	r0, [fp, #-16]
   35554:	ldr	r1, [sp, #28]
   35558:	ldr	r2, [fp, #8]
   3555c:	ldr	r3, [fp, #-20]	; 0xffffffec
   35560:	ldr	r3, [r3]
   35564:	ldr	ip, [fp, #-24]	; 0xffffffe8
   35568:	ldr	ip, [ip, #4]
   3556c:	str	ip, [sp]
   35570:	bl	35ecc <__assert_fail@plt+0x24a38>
   35574:	str	r0, [sp, #24]
   35578:	ldr	r0, [sp, #24]
   3557c:	cmp	r0, #0
   35580:	beq	35590 <__assert_fail@plt+0x240fc>
   35584:	ldr	r0, [sp, #24]
   35588:	str	r0, [fp, #-12]
   3558c:	b	355c0 <__assert_fail@plt+0x2412c>
   35590:	ldr	r0, [fp, #8]
   35594:	ldr	r1, [fp, #-24]	; 0xffffffe8
   35598:	ldr	r1, [r1, #4]
   3559c:	add	r0, r0, r1
   355a0:	ldr	r1, [fp, #-20]	; 0xffffffec
   355a4:	ldr	r1, [r1]
   355a8:	sub	r0, r0, r1
   355ac:	str	r0, [sp, #20]
   355b0:	ldr	r0, [fp, #-16]
   355b4:	ldr	r1, [sp, #20]
   355b8:	bl	353bc <__assert_fail@plt+0x23f28>
   355bc:	str	r0, [fp, #-12]
   355c0:	ldr	r0, [fp, #-12]
   355c4:	sub	sp, fp, #8
   355c8:	pop	{r4, sl, fp, pc}
   355cc:	sub	sp, sp, #32
   355d0:	str	r0, [sp, #24]
   355d4:	str	r1, [sp, #20]
   355d8:	str	r2, [sp, #16]
   355dc:	str	r3, [sp, #12]
   355e0:	movw	r0, #0
   355e4:	str	r0, [sp, #8]
   355e8:	ldr	r0, [sp, #8]
   355ec:	ldr	r1, [sp, #20]
   355f0:	ldr	r1, [r1, #4]
   355f4:	cmp	r0, r1
   355f8:	bge	35670 <__assert_fail@plt+0x241dc>
   355fc:	ldr	r0, [sp, #20]
   35600:	ldr	r0, [r0, #8]
   35604:	ldr	r1, [sp, #8]
   35608:	ldr	r0, [r0, r1, lsl #2]
   3560c:	str	r0, [sp, #4]
   35610:	ldr	r0, [sp, #24]
   35614:	ldr	r0, [r0]
   35618:	ldr	r1, [sp, #4]
   3561c:	add	r0, r0, r1, lsl #3
   35620:	str	r0, [sp]
   35624:	ldr	r0, [sp]
   35628:	ldr	r0, [r0, #4]
   3562c:	and	r0, r0, #255	; 0xff
   35630:	ldr	r1, [sp, #12]
   35634:	cmp	r0, r1
   35638:	bne	3565c <__assert_fail@plt+0x241c8>
   3563c:	ldr	r0, [sp]
   35640:	ldr	r0, [r0]
   35644:	ldr	r1, [sp, #16]
   35648:	cmp	r0, r1
   3564c:	bne	3565c <__assert_fail@plt+0x241c8>
   35650:	ldr	r0, [sp, #4]
   35654:	str	r0, [sp, #28]
   35658:	b	35678 <__assert_fail@plt+0x241e4>
   3565c:	b	35660 <__assert_fail@plt+0x241cc>
   35660:	ldr	r0, [sp, #8]
   35664:	add	r0, r0, #1
   35668:	str	r0, [sp, #8]
   3566c:	b	355e8 <__assert_fail@plt+0x24154>
   35670:	mvn	r0, #0
   35674:	str	r0, [sp, #28]
   35678:	ldr	r0, [sp, #28]
   3567c:	add	sp, sp, #32
   35680:	bx	lr
   35684:	push	{r4, sl, fp, lr}
   35688:	add	fp, sp, #8
   3568c:	sub	sp, sp, #136	; 0x88
   35690:	ldr	ip, [fp, #16]
   35694:	ldr	lr, [fp, #12]
   35698:	ldr	r4, [fp, #8]
   3569c:	str	r0, [fp, #-16]
   356a0:	str	r1, [fp, #-20]	; 0xffffffec
   356a4:	str	r2, [fp, #-24]	; 0xffffffe8
   356a8:	str	r3, [fp, #-28]	; 0xffffffe4
   356ac:	ldr	r0, [fp, #-16]
   356b0:	ldr	r0, [r0, #84]	; 0x54
   356b4:	str	r0, [fp, #-32]	; 0xffffffe0
   356b8:	mov	r0, #0
   356bc:	str	r0, [fp, #-36]	; 0xffffffdc
   356c0:	str	r0, [fp, #-56]	; 0xffffffc8
   356c4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   356c8:	ldr	r0, [r0]
   356cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   356d0:	add	r0, r0, r1, lsl #3
   356d4:	ldr	r0, [r0]
   356d8:	str	r0, [fp, #-40]	; 0xffffffd8
   356dc:	ldr	r0, [fp, #-20]	; 0xffffffec
   356e0:	ldr	r0, [r0, #4]
   356e4:	ldr	r1, [fp, #12]
   356e8:	ldr	r2, [fp, #-16]
   356ec:	ldr	r2, [r2, #120]	; 0x78
   356f0:	add	r1, r1, r2
   356f4:	add	r1, r1, #1
   356f8:	cmp	r0, r1
   356fc:	str	r4, [sp, #44]	; 0x2c
   35700:	str	lr, [sp, #40]	; 0x28
   35704:	str	ip, [sp, #36]	; 0x24
   35708:	bge	357f4 <__assert_fail@plt+0x24360>
   3570c:	ldr	r0, [pc, #1708]	; 35dc0 <__assert_fail@plt+0x2492c>
   35710:	ldr	r1, [fp, #-20]	; 0xffffffec
   35714:	ldr	r1, [r1, #4]
   35718:	str	r1, [sp, #56]	; 0x38
   3571c:	ldr	r1, [fp, #12]
   35720:	ldr	r2, [fp, #-16]
   35724:	ldr	r2, [r2, #120]	; 0x78
   35728:	add	r1, r1, r2
   3572c:	add	r1, r1, #1
   35730:	str	r1, [sp, #52]	; 0x34
   35734:	ldr	r1, [sp, #56]	; 0x38
   35738:	sub	r0, r0, r1
   3573c:	ldr	r1, [sp, #52]	; 0x34
   35740:	cmp	r0, r1
   35744:	bge	35754 <__assert_fail@plt+0x242c0>
   35748:	movw	r0, #12
   3574c:	str	r0, [fp, #-12]
   35750:	b	35db4 <__assert_fail@plt+0x24920>
   35754:	ldr	r0, [pc, #1640]	; 35dc4 <__assert_fail@plt+0x24930>
   35758:	ldr	r1, [sp, #56]	; 0x38
   3575c:	ldr	r2, [sp, #52]	; 0x34
   35760:	add	r1, r1, r2
   35764:	str	r1, [sp, #48]	; 0x30
   35768:	ldr	r1, [sp, #48]	; 0x30
   3576c:	cmp	r0, r1
   35770:	bcs	35780 <__assert_fail@plt+0x242ec>
   35774:	movw	r0, #12
   35778:	str	r0, [fp, #-12]
   3577c:	b	35db4 <__assert_fail@plt+0x24920>
   35780:	ldr	r0, [fp, #-20]	; 0xffffffec
   35784:	ldr	r0, [r0, #8]
   35788:	ldr	r1, [sp, #48]	; 0x30
   3578c:	lsl	r1, r1, #2
   35790:	bl	3fc48 <__assert_fail@plt+0x2e7b4>
   35794:	str	r0, [sp, #60]	; 0x3c
   35798:	ldr	r0, [sp, #60]	; 0x3c
   3579c:	movw	r1, #0
   357a0:	cmp	r0, r1
   357a4:	bne	357b4 <__assert_fail@plt+0x24320>
   357a8:	movw	r0, #12
   357ac:	str	r0, [fp, #-12]
   357b0:	b	35db4 <__assert_fail@plt+0x24920>
   357b4:	ldr	r0, [sp, #60]	; 0x3c
   357b8:	ldr	r1, [fp, #-20]	; 0xffffffec
   357bc:	str	r0, [r1, #8]
   357c0:	ldr	r0, [sp, #48]	; 0x30
   357c4:	ldr	r1, [fp, #-20]	; 0xffffffec
   357c8:	str	r0, [r1, #4]
   357cc:	ldr	r0, [sp, #60]	; 0x3c
   357d0:	ldr	r1, [sp, #56]	; 0x38
   357d4:	add	r0, r0, r1, lsl #2
   357d8:	ldr	r2, [fp, #-20]	; 0xffffffec
   357dc:	ldr	r2, [r2, #4]
   357e0:	sub	r1, r2, r1
   357e4:	lsl	r2, r1, #2
   357e8:	movw	r1, #0
   357ec:	and	r1, r1, #255	; 0xff
   357f0:	bl	113d4 <memset@plt>
   357f4:	ldr	r0, [fp, #-20]	; 0xffffffec
   357f8:	ldr	r0, [r0]
   357fc:	cmp	r0, #0
   35800:	beq	35814 <__assert_fail@plt+0x24380>
   35804:	ldr	r0, [fp, #-20]	; 0xffffffec
   35808:	ldr	r0, [r0]
   3580c:	str	r0, [sp, #32]
   35810:	b	3581c <__assert_fail@plt+0x24388>
   35814:	ldr	r0, [fp, #-28]	; 0xffffffe4
   35818:	str	r0, [sp, #32]
   3581c:	ldr	r0, [sp, #32]
   35820:	str	r0, [fp, #-48]	; 0xffffffd0
   35824:	ldr	r0, [fp, #-16]
   35828:	ldr	r0, [r0, #100]	; 0x64
   3582c:	str	r0, [sp, #68]	; 0x44
   35830:	ldr	r0, [fp, #-16]
   35834:	ldr	r0, [r0, #40]	; 0x28
   35838:	str	r0, [fp, #-44]	; 0xffffffd4
   3583c:	ldr	r0, [fp, #-20]	; 0xffffffec
   35840:	ldr	r0, [r0, #8]
   35844:	ldr	r1, [fp, #-16]
   35848:	str	r0, [r1, #100]	; 0x64
   3584c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   35850:	ldr	r1, [fp, #-16]
   35854:	str	r0, [r1, #40]	; 0x28
   35858:	ldr	r0, [fp, #-16]
   3585c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   35860:	sub	r1, r1, #1
   35864:	ldr	r2, [fp, #-16]
   35868:	ldr	r2, [r2, #88]	; 0x58
   3586c:	bl	3378c <__assert_fail@plt+0x222f8>
   35870:	str	r0, [sp, #64]	; 0x40
   35874:	ldr	r0, [fp, #-48]	; 0xffffffd0
   35878:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3587c:	cmp	r0, r1
   35880:	bne	358e8 <__assert_fail@plt+0x24454>
   35884:	ldr	r1, [fp, #-24]	; 0xffffffe8
   35888:	add	r0, sp, #72	; 0x48
   3588c:	bl	2fac4 <__assert_fail@plt+0x1e630>
   35890:	str	r0, [fp, #-36]	; 0xffffffdc
   35894:	ldr	r0, [fp, #-36]	; 0xffffffdc
   35898:	cmp	r0, #0
   3589c:	beq	358ac <__assert_fail@plt+0x24418>
   358a0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   358a4:	str	r0, [fp, #-12]
   358a8:	b	35db4 <__assert_fail@plt+0x24920>
   358ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   358b0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   358b4:	ldr	r3, [fp, #16]
   358b8:	add	r1, sp, #72	; 0x48
   358bc:	bl	3612c <__assert_fail@plt+0x24c98>
   358c0:	str	r0, [fp, #-36]	; 0xffffffdc
   358c4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   358c8:	cmp	r0, #0
   358cc:	beq	358e4 <__assert_fail@plt+0x24450>
   358d0:	ldr	r0, [sp, #80]	; 0x50
   358d4:	bl	138a4 <__assert_fail@plt+0x2410>
   358d8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   358dc:	str	r0, [fp, #-12]
   358e0:	b	35db4 <__assert_fail@plt+0x24920>
   358e4:	b	35970 <__assert_fail@plt+0x244dc>
   358e8:	ldr	r0, [fp, #-16]
   358ec:	ldr	r0, [r0, #100]	; 0x64
   358f0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   358f4:	add	r0, r0, r1, lsl #2
   358f8:	ldr	r0, [r0]
   358fc:	str	r0, [fp, #-56]	; 0xffffffc8
   35900:	ldr	r0, [fp, #-56]	; 0xffffffc8
   35904:	movw	r1, #0
   35908:	cmp	r0, r1
   3590c:	beq	35958 <__assert_fail@plt+0x244c4>
   35910:	ldr	r0, [fp, #-56]	; 0xffffffc8
   35914:	ldrb	r0, [r0, #52]	; 0x34
   35918:	ubfx	r0, r0, #6, #1
   3591c:	and	r0, r0, #255	; 0xff
   35920:	cmp	r0, #0
   35924:	beq	35958 <__assert_fail@plt+0x244c4>
   35928:	ldr	r0, [fp, #-56]	; 0xffffffc8
   3592c:	add	r1, r0, #4
   35930:	add	r0, sp, #72	; 0x48
   35934:	bl	30d78 <__assert_fail@plt+0x1f8e4>
   35938:	str	r0, [fp, #-36]	; 0xffffffdc
   3593c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   35940:	cmp	r0, #0
   35944:	beq	35954 <__assert_fail@plt+0x244c0>
   35948:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3594c:	str	r0, [fp, #-12]
   35950:	b	35db4 <__assert_fail@plt+0x24920>
   35954:	b	3596c <__assert_fail@plt+0x244d8>
   35958:	add	r0, sp, #72	; 0x48
   3595c:	movw	r1, #0
   35960:	and	r1, r1, #255	; 0xff
   35964:	movw	r2, #12
   35968:	bl	113d4 <memset@plt>
   3596c:	b	35970 <__assert_fail@plt+0x244dc>
   35970:	ldr	r0, [fp, #-48]	; 0xffffffd0
   35974:	ldr	r1, [fp, #-28]	; 0xffffffe4
   35978:	cmp	r0, r1
   3597c:	beq	359a8 <__assert_fail@plt+0x24514>
   35980:	ldr	r0, [fp, #-56]	; 0xffffffc8
   35984:	movw	r1, #0
   35988:	cmp	r0, r1
   3598c:	beq	35a80 <__assert_fail@plt+0x245ec>
   35990:	ldr	r0, [fp, #-56]	; 0xffffffc8
   35994:	ldrb	r0, [r0, #52]	; 0x34
   35998:	ubfx	r0, r0, #6, #1
   3599c:	and	r0, r0, #255	; 0xff
   359a0:	cmp	r0, #0
   359a4:	beq	35a80 <__assert_fail@plt+0x245ec>
   359a8:	ldr	r0, [sp, #76]	; 0x4c
   359ac:	cmp	r0, #0
   359b0:	beq	35a04 <__assert_fail@plt+0x24570>
   359b4:	ldr	r0, [fp, #-16]
   359b8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   359bc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   359c0:	ldr	r1, [fp, #16]
   359c4:	add	ip, sp, #72	; 0x48
   359c8:	str	r1, [sp, #28]
   359cc:	mov	r1, ip
   359d0:	ldr	ip, [sp, #28]
   359d4:	str	ip, [sp]
   359d8:	bl	362d0 <__assert_fail@plt+0x24e3c>
   359dc:	str	r0, [fp, #-36]	; 0xffffffdc
   359e0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   359e4:	cmp	r0, #0
   359e8:	beq	35a00 <__assert_fail@plt+0x2456c>
   359ec:	ldr	r0, [sp, #80]	; 0x50
   359f0:	bl	138a4 <__assert_fail@plt+0x2410>
   359f4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   359f8:	str	r0, [fp, #-12]
   359fc:	b	35db4 <__assert_fail@plt+0x24920>
   35a00:	b	35a04 <__assert_fail@plt+0x24570>
   35a04:	ldr	r1, [fp, #-32]	; 0xffffffe0
   35a08:	ldr	r3, [sp, #64]	; 0x40
   35a0c:	sub	r0, fp, #36	; 0x24
   35a10:	add	r2, sp, #72	; 0x48
   35a14:	bl	30f3c <__assert_fail@plt+0x1faa8>
   35a18:	str	r0, [fp, #-56]	; 0xffffffc8
   35a1c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   35a20:	movw	r1, #0
   35a24:	cmp	r0, r1
   35a28:	movw	r0, #0
   35a2c:	str	r0, [sp, #24]
   35a30:	bne	35a48 <__assert_fail@plt+0x245b4>
   35a34:	ldr	r0, [fp, #-36]	; 0xffffffdc
   35a38:	cmp	r0, #0
   35a3c:	movw	r0, #0
   35a40:	movne	r0, #1
   35a44:	str	r0, [sp, #24]
   35a48:	ldr	r0, [sp, #24]
   35a4c:	tst	r0, #1
   35a50:	beq	35a68 <__assert_fail@plt+0x245d4>
   35a54:	ldr	r0, [sp, #80]	; 0x50
   35a58:	bl	138a4 <__assert_fail@plt+0x2410>
   35a5c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   35a60:	str	r0, [fp, #-12]
   35a64:	b	35db4 <__assert_fail@plt+0x24920>
   35a68:	ldr	r0, [fp, #-56]	; 0xffffffc8
   35a6c:	ldr	r1, [fp, #-16]
   35a70:	ldr	r1, [r1, #100]	; 0x64
   35a74:	ldr	r2, [fp, #-48]	; 0xffffffd0
   35a78:	add	r1, r1, r2, lsl #2
   35a7c:	str	r0, [r1]
   35a80:	movw	r0, #0
   35a84:	str	r0, [fp, #-52]	; 0xffffffcc
   35a88:	ldr	r0, [fp, #-48]	; 0xffffffd0
   35a8c:	ldr	r1, [fp, #12]
   35a90:	cmp	r0, r1
   35a94:	movw	r0, #0
   35a98:	str	r0, [sp, #20]
   35a9c:	bge	35abc <__assert_fail@plt+0x24628>
   35aa0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   35aa4:	ldr	r1, [fp, #-16]
   35aa8:	ldr	r1, [r1, #120]	; 0x78
   35aac:	cmp	r0, r1
   35ab0:	movw	r0, #0
   35ab4:	movle	r0, #1
   35ab8:	str	r0, [sp, #20]
   35abc:	ldr	r0, [sp, #20]
   35ac0:	tst	r0, #1
   35ac4:	beq	35d00 <__assert_fail@plt+0x2486c>
   35ac8:	mov	r0, #0
   35acc:	str	r0, [sp, #76]	; 0x4c
   35ad0:	ldr	r0, [fp, #-16]
   35ad4:	ldr	r0, [r0, #100]	; 0x64
   35ad8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   35adc:	add	r1, r1, #1
   35ae0:	add	r0, r0, r1, lsl #2
   35ae4:	ldr	r0, [r0]
   35ae8:	movw	r1, #0
   35aec:	cmp	r0, r1
   35af0:	beq	35b40 <__assert_fail@plt+0x246ac>
   35af4:	ldr	r0, [fp, #-16]
   35af8:	ldr	r0, [r0, #100]	; 0x64
   35afc:	ldr	r1, [fp, #-48]	; 0xffffffd0
   35b00:	add	r1, r1, #1
   35b04:	add	r0, r0, r1, lsl #2
   35b08:	ldr	r0, [r0]
   35b0c:	add	r1, r0, #4
   35b10:	add	r0, sp, #72	; 0x48
   35b14:	bl	304a4 <__assert_fail@plt+0x1f010>
   35b18:	str	r0, [fp, #-36]	; 0xffffffdc
   35b1c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   35b20:	cmp	r0, #0
   35b24:	beq	35b3c <__assert_fail@plt+0x246a8>
   35b28:	ldr	r0, [sp, #80]	; 0x50
   35b2c:	bl	138a4 <__assert_fail@plt+0x2410>
   35b30:	ldr	r0, [fp, #-36]	; 0xffffffdc
   35b34:	str	r0, [fp, #-12]
   35b38:	b	35db4 <__assert_fail@plt+0x24920>
   35b3c:	b	35b40 <__assert_fail@plt+0x246ac>
   35b40:	ldr	r0, [fp, #-56]	; 0xffffffc8
   35b44:	movw	r1, #0
   35b48:	cmp	r0, r1
   35b4c:	beq	35b90 <__assert_fail@plt+0x246fc>
   35b50:	ldr	r0, [fp, #-16]
   35b54:	ldr	r1, [fp, #-48]	; 0xffffffd0
   35b58:	ldr	r2, [fp, #-56]	; 0xffffffc8
   35b5c:	add	r2, r2, #16
   35b60:	add	r3, sp, #72	; 0x48
   35b64:	bl	366a0 <__assert_fail@plt+0x2520c>
   35b68:	str	r0, [fp, #-36]	; 0xffffffdc
   35b6c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   35b70:	cmp	r0, #0
   35b74:	beq	35b8c <__assert_fail@plt+0x246f8>
   35b78:	ldr	r0, [sp, #80]	; 0x50
   35b7c:	bl	138a4 <__assert_fail@plt+0x2410>
   35b80:	ldr	r0, [fp, #-36]	; 0xffffffdc
   35b84:	str	r0, [fp, #-12]
   35b88:	b	35db4 <__assert_fail@plt+0x24920>
   35b8c:	b	35b90 <__assert_fail@plt+0x246fc>
   35b90:	ldr	r0, [fp, #-48]	; 0xffffffd0
   35b94:	add	r0, r0, #1
   35b98:	str	r0, [fp, #-48]	; 0xffffffd0
   35b9c:	ldr	r0, [sp, #76]	; 0x4c
   35ba0:	cmp	r0, #0
   35ba4:	beq	35c30 <__assert_fail@plt+0x2479c>
   35ba8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   35bac:	ldr	r2, [fp, #-40]	; 0xffffffd8
   35bb0:	ldr	r3, [fp, #16]
   35bb4:	add	r1, sp, #72	; 0x48
   35bb8:	bl	3612c <__assert_fail@plt+0x24c98>
   35bbc:	str	r0, [fp, #-36]	; 0xffffffdc
   35bc0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   35bc4:	cmp	r0, #0
   35bc8:	beq	35be0 <__assert_fail@plt+0x2474c>
   35bcc:	ldr	r0, [sp, #80]	; 0x50
   35bd0:	bl	138a4 <__assert_fail@plt+0x2410>
   35bd4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   35bd8:	str	r0, [fp, #-12]
   35bdc:	b	35db4 <__assert_fail@plt+0x24920>
   35be0:	ldr	r0, [fp, #-16]
   35be4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   35be8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   35bec:	ldr	r1, [fp, #16]
   35bf0:	add	ip, sp, #72	; 0x48
   35bf4:	str	r1, [sp, #16]
   35bf8:	mov	r1, ip
   35bfc:	ldr	ip, [sp, #16]
   35c00:	str	ip, [sp]
   35c04:	bl	362d0 <__assert_fail@plt+0x24e3c>
   35c08:	str	r0, [fp, #-36]	; 0xffffffdc
   35c0c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   35c10:	cmp	r0, #0
   35c14:	beq	35c2c <__assert_fail@plt+0x24798>
   35c18:	ldr	r0, [sp, #80]	; 0x50
   35c1c:	bl	138a4 <__assert_fail@plt+0x2410>
   35c20:	ldr	r0, [fp, #-36]	; 0xffffffdc
   35c24:	str	r0, [fp, #-12]
   35c28:	b	35db4 <__assert_fail@plt+0x24920>
   35c2c:	b	35c30 <__assert_fail@plt+0x2479c>
   35c30:	ldr	r0, [fp, #-16]
   35c34:	ldr	r1, [fp, #-48]	; 0xffffffd0
   35c38:	sub	r1, r1, #1
   35c3c:	ldr	r2, [fp, #-16]
   35c40:	ldr	r2, [r2, #88]	; 0x58
   35c44:	bl	3378c <__assert_fail@plt+0x222f8>
   35c48:	str	r0, [sp, #64]	; 0x40
   35c4c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   35c50:	ldr	r3, [sp, #64]	; 0x40
   35c54:	sub	r0, fp, #36	; 0x24
   35c58:	add	r2, sp, #72	; 0x48
   35c5c:	bl	30f3c <__assert_fail@plt+0x1faa8>
   35c60:	str	r0, [fp, #-56]	; 0xffffffc8
   35c64:	ldr	r0, [fp, #-56]	; 0xffffffc8
   35c68:	movw	r1, #0
   35c6c:	cmp	r0, r1
   35c70:	movw	r0, #0
   35c74:	str	r0, [sp, #12]
   35c78:	bne	35c90 <__assert_fail@plt+0x247fc>
   35c7c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   35c80:	cmp	r0, #0
   35c84:	movw	r0, #0
   35c88:	movne	r0, #1
   35c8c:	str	r0, [sp, #12]
   35c90:	ldr	r0, [sp, #12]
   35c94:	tst	r0, #1
   35c98:	beq	35cb0 <__assert_fail@plt+0x2481c>
   35c9c:	ldr	r0, [sp, #80]	; 0x50
   35ca0:	bl	138a4 <__assert_fail@plt+0x2410>
   35ca4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   35ca8:	str	r0, [fp, #-12]
   35cac:	b	35db4 <__assert_fail@plt+0x24920>
   35cb0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   35cb4:	ldr	r1, [fp, #-16]
   35cb8:	ldr	r1, [r1, #100]	; 0x64
   35cbc:	ldr	r2, [fp, #-48]	; 0xffffffd0
   35cc0:	add	r1, r1, r2, lsl #2
   35cc4:	str	r0, [r1]
   35cc8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   35ccc:	movw	r1, #0
   35cd0:	cmp	r0, r1
   35cd4:	bne	35ce8 <__assert_fail@plt+0x24854>
   35cd8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   35cdc:	add	r0, r0, #1
   35ce0:	str	r0, [sp, #8]
   35ce4:	b	35cf4 <__assert_fail@plt+0x24860>
   35ce8:	movw	r0, #0
   35cec:	str	r0, [sp, #8]
   35cf0:	b	35cf4 <__assert_fail@plt+0x24860>
   35cf4:	ldr	r0, [sp, #8]
   35cf8:	str	r0, [fp, #-52]	; 0xffffffcc
   35cfc:	b	35a88 <__assert_fail@plt+0x245f4>
   35d00:	ldr	r0, [sp, #80]	; 0x50
   35d04:	bl	138a4 <__assert_fail@plt+0x2410>
   35d08:	ldr	r0, [fp, #-16]
   35d0c:	ldr	r0, [r0, #100]	; 0x64
   35d10:	ldr	lr, [fp, #12]
   35d14:	add	r0, r0, lr, lsl #2
   35d18:	ldr	r0, [r0]
   35d1c:	movw	lr, #0
   35d20:	cmp	r0, lr
   35d24:	bne	35d34 <__assert_fail@plt+0x248a0>
   35d28:	movw	r0, #0
   35d2c:	str	r0, [sp, #4]
   35d30:	b	35d50 <__assert_fail@plt+0x248bc>
   35d34:	ldr	r0, [fp, #-16]
   35d38:	ldr	r0, [r0, #100]	; 0x64
   35d3c:	ldr	r1, [fp, #12]
   35d40:	add	r0, r0, r1, lsl #2
   35d44:	ldr	r0, [r0]
   35d48:	add	r0, r0, #4
   35d4c:	str	r0, [sp, #4]
   35d50:	ldr	r0, [sp, #4]
   35d54:	str	r0, [fp, #-60]	; 0xffffffc4
   35d58:	ldr	r0, [fp, #-48]	; 0xffffffd0
   35d5c:	ldr	r1, [fp, #-20]	; 0xffffffec
   35d60:	str	r0, [r1]
   35d64:	ldr	r0, [sp, #68]	; 0x44
   35d68:	ldr	r1, [fp, #-16]
   35d6c:	str	r0, [r1, #100]	; 0x64
   35d70:	ldr	r0, [fp, #-44]	; 0xffffffd4
   35d74:	ldr	r1, [fp, #-16]
   35d78:	str	r0, [r1, #40]	; 0x28
   35d7c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   35d80:	movw	r1, #0
   35d84:	cmp	r0, r1
   35d88:	beq	35dac <__assert_fail@plt+0x24918>
   35d8c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   35d90:	ldr	r1, [fp, #8]
   35d94:	bl	30e4c <__assert_fail@plt+0x1f9b8>
   35d98:	cmp	r0, #0
   35d9c:	beq	35dac <__assert_fail@plt+0x24918>
   35da0:	movw	r0, #0
   35da4:	str	r0, [fp, #-12]
   35da8:	b	35db4 <__assert_fail@plt+0x24920>
   35dac:	movw	r0, #1
   35db0:	str	r0, [fp, #-12]
   35db4:	ldr	r0, [fp, #-12]
   35db8:	sub	sp, fp, #8
   35dbc:	pop	{r4, sl, fp, pc}
   35dc0:	svcvc	0x00ffffff
   35dc4:	svccc	0x00ffffff
   35dc8:	push	{fp, lr}
   35dcc:	mov	fp, sp
   35dd0:	sub	sp, sp, #32
   35dd4:	str	r0, [fp, #-8]
   35dd8:	str	r1, [fp, #-12]
   35ddc:	str	r2, [sp, #16]
   35de0:	ldr	r0, [fp, #-8]
   35de4:	ldr	r0, [r0, #16]
   35de8:	ldr	r1, [fp, #-8]
   35dec:	ldr	r1, [r1, #12]
   35df0:	cmp	r0, r1
   35df4:	bne	35e58 <__assert_fail@plt+0x249c4>
   35df8:	ldr	r0, [fp, #-8]
   35dfc:	ldr	r0, [r0, #12]
   35e00:	mov	r1, #1
   35e04:	orr	r0, r1, r0, lsl #1
   35e08:	str	r0, [sp, #8]
   35e0c:	ldr	r0, [fp, #-8]
   35e10:	ldr	r0, [r0, #20]
   35e14:	ldr	r1, [sp, #8]
   35e18:	lsl	r1, r1, #2
   35e1c:	bl	3fc48 <__assert_fail@plt+0x2e7b4>
   35e20:	str	r0, [sp, #4]
   35e24:	ldr	r0, [sp, #4]
   35e28:	movw	r1, #0
   35e2c:	cmp	r0, r1
   35e30:	bne	35e40 <__assert_fail@plt+0x249ac>
   35e34:	movw	r0, #0
   35e38:	str	r0, [fp, #-4]
   35e3c:	b	35ec0 <__assert_fail@plt+0x24a2c>
   35e40:	ldr	r0, [sp, #4]
   35e44:	ldr	r1, [fp, #-8]
   35e48:	str	r0, [r1, #20]
   35e4c:	ldr	r0, [sp, #8]
   35e50:	ldr	r1, [fp, #-8]
   35e54:	str	r0, [r1, #12]
   35e58:	movw	r0, #1
   35e5c:	movw	r1, #20
   35e60:	bl	3fb3c <__assert_fail@plt+0x2e6a8>
   35e64:	str	r0, [sp, #12]
   35e68:	ldr	r0, [sp, #12]
   35e6c:	movw	r1, #0
   35e70:	cmp	r0, r1
   35e74:	beq	35eb8 <__assert_fail@plt+0x24a24>
   35e78:	ldr	r0, [sp, #12]
   35e7c:	ldr	r1, [fp, #-8]
   35e80:	ldr	r2, [r1, #16]
   35e84:	ldr	r1, [r1, #20]
   35e88:	add	r1, r1, r2, lsl #2
   35e8c:	str	r0, [r1]
   35e90:	ldr	r0, [fp, #-12]
   35e94:	ldr	r1, [sp, #12]
   35e98:	str	r0, [r1]
   35e9c:	ldr	r0, [sp, #16]
   35ea0:	ldr	r1, [sp, #12]
   35ea4:	str	r0, [r1, #4]
   35ea8:	ldr	r0, [fp, #-8]
   35eac:	ldr	r1, [r0, #16]
   35eb0:	add	r1, r1, #1
   35eb4:	str	r1, [r0, #16]
   35eb8:	ldr	r0, [sp, #12]
   35ebc:	str	r0, [fp, #-4]
   35ec0:	ldr	r0, [fp, #-4]
   35ec4:	mov	sp, fp
   35ec8:	pop	{fp, pc}
   35ecc:	push	{fp, lr}
   35ed0:	mov	fp, sp
   35ed4:	sub	sp, sp, #32
   35ed8:	ldr	ip, [fp, #8]
   35edc:	str	r0, [fp, #-8]
   35ee0:	str	r1, [fp, #-12]
   35ee4:	str	r2, [sp, #16]
   35ee8:	str	r3, [sp, #12]
   35eec:	ldr	r0, [fp, #-8]
   35ef0:	ldr	r0, [r0, #108]	; 0x6c
   35ef4:	ldr	r1, [fp, #-8]
   35ef8:	ldr	r1, [r1, #112]	; 0x70
   35efc:	cmp	r0, r1
   35f00:	str	ip, [sp, #4]
   35f04:	blt	35f98 <__assert_fail@plt+0x24b04>
   35f08:	ldr	r0, [fp, #-8]
   35f0c:	ldr	r1, [r0, #112]	; 0x70
   35f10:	ldr	r0, [r0, #116]	; 0x74
   35f14:	lsl	r1, r1, #1
   35f18:	movw	r2, #24
   35f1c:	mul	r1, r1, r2
   35f20:	bl	3fc48 <__assert_fail@plt+0x2e7b4>
   35f24:	str	r0, [sp, #8]
   35f28:	ldr	r0, [sp, #8]
   35f2c:	movw	r1, #0
   35f30:	cmp	r0, r1
   35f34:	bne	35f50 <__assert_fail@plt+0x24abc>
   35f38:	ldr	r0, [fp, #-8]
   35f3c:	ldr	r0, [r0, #116]	; 0x74
   35f40:	bl	138a4 <__assert_fail@plt+0x2410>
   35f44:	movw	r0, #12
   35f48:	str	r0, [fp, #-4]
   35f4c:	b	36120 <__assert_fail@plt+0x24c8c>
   35f50:	ldr	r0, [sp, #8]
   35f54:	ldr	r1, [fp, #-8]
   35f58:	str	r0, [r1, #116]	; 0x74
   35f5c:	ldr	r0, [fp, #-8]
   35f60:	ldr	r1, [r0, #108]	; 0x6c
   35f64:	ldr	r2, [r0, #112]	; 0x70
   35f68:	ldr	r0, [r0, #116]	; 0x74
   35f6c:	add	r1, r1, r1, lsl #1
   35f70:	add	r0, r0, r1, lsl #3
   35f74:	add	r1, r2, r2, lsl #1
   35f78:	lsl	r2, r1, #3
   35f7c:	mov	r1, #0
   35f80:	bl	113d4 <memset@plt>
   35f84:	ldr	r1, [fp, #-8]
   35f88:	ldr	r2, [r1, #112]	; 0x70
   35f8c:	lsl	r2, r2, #1
   35f90:	str	r2, [r1, #112]	; 0x70
   35f94:	str	r0, [sp]
   35f98:	ldr	r0, [fp, #-8]
   35f9c:	ldr	r0, [r0, #108]	; 0x6c
   35fa0:	cmp	r0, #0
   35fa4:	ble	36000 <__assert_fail@plt+0x24b6c>
   35fa8:	ldr	r0, [fp, #-8]
   35fac:	ldr	r0, [r0, #116]	; 0x74
   35fb0:	ldr	r1, [fp, #-8]
   35fb4:	ldr	r1, [r1, #108]	; 0x6c
   35fb8:	sub	r1, r1, #1
   35fbc:	movw	r2, #24
   35fc0:	mul	r1, r1, r2
   35fc4:	add	r0, r0, r1
   35fc8:	ldr	r0, [r0, #4]
   35fcc:	ldr	r1, [sp, #16]
   35fd0:	cmp	r0, r1
   35fd4:	bne	36000 <__assert_fail@plt+0x24b6c>
   35fd8:	ldr	r0, [fp, #-8]
   35fdc:	ldr	r0, [r0, #116]	; 0x74
   35fe0:	ldr	r1, [fp, #-8]
   35fe4:	ldr	r1, [r1, #108]	; 0x6c
   35fe8:	sub	r1, r1, #1
   35fec:	movw	r2, #24
   35ff0:	mul	r1, r1, r2
   35ff4:	add	r0, r0, r1
   35ff8:	movw	r1, #1
   35ffc:	strb	r1, [r0, #20]
   36000:	ldr	r0, [fp, #-12]
   36004:	ldr	r1, [fp, #-8]
   36008:	ldr	r1, [r1, #116]	; 0x74
   3600c:	ldr	r2, [fp, #-8]
   36010:	ldr	r2, [r2, #108]	; 0x6c
   36014:	movw	r3, #24
   36018:	mul	r2, r2, r3
   3601c:	add	r1, r1, r2
   36020:	str	r0, [r1]
   36024:	ldr	r0, [sp, #16]
   36028:	ldr	r1, [fp, #-8]
   3602c:	ldr	r1, [r1, #116]	; 0x74
   36030:	ldr	r2, [fp, #-8]
   36034:	ldr	r2, [r2, #108]	; 0x6c
   36038:	mul	r2, r2, r3
   3603c:	add	r1, r1, r2
   36040:	str	r0, [r1, #4]
   36044:	ldr	r0, [sp, #12]
   36048:	ldr	r1, [fp, #-8]
   3604c:	ldr	r1, [r1, #116]	; 0x74
   36050:	ldr	r2, [fp, #-8]
   36054:	ldr	r2, [r2, #108]	; 0x6c
   36058:	mul	r2, r2, r3
   3605c:	add	r1, r1, r2
   36060:	str	r0, [r1, #8]
   36064:	ldr	r0, [fp, #8]
   36068:	ldr	r1, [fp, #-8]
   3606c:	ldr	r1, [r1, #116]	; 0x74
   36070:	ldr	r2, [fp, #-8]
   36074:	ldr	r2, [r2, #108]	; 0x6c
   36078:	mul	r2, r2, r3
   3607c:	add	r1, r1, r2
   36080:	str	r0, [r1, #12]
   36084:	ldr	r0, [sp, #12]
   36088:	ldr	r1, [fp, #8]
   3608c:	cmp	r0, r1
   36090:	movw	r0, #0
   36094:	moveq	r0, #1
   36098:	tst	r0, #1
   3609c:	mvn	r0, #0
   360a0:	moveq	r0, #0
   360a4:	ldr	r1, [fp, #-8]
   360a8:	ldr	r1, [r1, #116]	; 0x74
   360ac:	ldr	r2, [fp, #-8]
   360b0:	ldr	r2, [r2, #108]	; 0x6c
   360b4:	mul	r2, r2, r3
   360b8:	add	r1, r1, r2
   360bc:	str	r0, [r1, #16]
   360c0:	ldr	r0, [fp, #-8]
   360c4:	ldr	r0, [r0, #116]	; 0x74
   360c8:	ldr	r1, [fp, #-8]
   360cc:	ldr	r2, [r1, #108]	; 0x6c
   360d0:	add	ip, r2, #1
   360d4:	str	ip, [r1, #108]	; 0x6c
   360d8:	mul	r1, r2, r3
   360dc:	add	r0, r0, r1
   360e0:	movw	r1, #0
   360e4:	strb	r1, [r0, #20]
   360e8:	ldr	r0, [fp, #-8]
   360ec:	ldr	r0, [r0, #120]	; 0x78
   360f0:	ldr	r1, [fp, #8]
   360f4:	ldr	r2, [sp, #12]
   360f8:	sub	r1, r1, r2
   360fc:	cmp	r0, r1
   36100:	bge	36118 <__assert_fail@plt+0x24c84>
   36104:	ldr	r0, [fp, #8]
   36108:	ldr	r1, [sp, #12]
   3610c:	sub	r0, r0, r1
   36110:	ldr	r1, [fp, #-8]
   36114:	str	r0, [r1, #120]	; 0x78
   36118:	movw	r0, #0
   3611c:	str	r0, [fp, #-4]
   36120:	ldr	r0, [fp, #-4]
   36124:	mov	sp, fp
   36128:	pop	{fp, pc}
   3612c:	push	{fp, lr}
   36130:	mov	fp, sp
   36134:	sub	sp, sp, #64	; 0x40
   36138:	str	r0, [fp, #-8]
   3613c:	str	r1, [fp, #-12]
   36140:	str	r2, [fp, #-16]
   36144:	str	r3, [fp, #-20]	; 0xffffffec
   36148:	ldr	r0, [fp, #-12]
   3614c:	ldr	r0, [r0, #4]
   36150:	cmp	r0, #0
   36154:	beq	3615c <__assert_fail@plt+0x24cc8>
   36158:	b	3615c <__assert_fail@plt+0x24cc8>
   3615c:	ldr	r0, [fp, #-12]
   36160:	ldr	r1, [r0, #4]
   36164:	add	r0, sp, #20
   36168:	bl	2ff28 <__assert_fail@plt+0x1ea94>
   3616c:	str	r0, [fp, #-24]	; 0xffffffe8
   36170:	ldr	r0, [fp, #-24]	; 0xffffffe8
   36174:	cmp	r0, #0
   36178:	beq	36188 <__assert_fail@plt+0x24cf4>
   3617c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   36180:	str	r0, [fp, #-4]
   36184:	b	362c4 <__assert_fail@plt+0x24e30>
   36188:	movw	r0, #0
   3618c:	str	r0, [fp, #-28]	; 0xffffffe4
   36190:	ldr	r0, [fp, #-28]	; 0xffffffe4
   36194:	ldr	r1, [fp, #-12]
   36198:	ldr	r1, [r1, #4]
   3619c:	cmp	r0, r1
   361a0:	bge	36294 <__assert_fail@plt+0x24e00>
   361a4:	ldr	r0, [fp, #-12]
   361a8:	ldr	r0, [r0, #8]
   361ac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   361b0:	add	r0, r0, r1, lsl #2
   361b4:	ldr	r0, [r0]
   361b8:	str	r0, [sp, #16]
   361bc:	ldr	r0, [fp, #-8]
   361c0:	ldr	r0, [r0, #24]
   361c4:	ldr	r1, [sp, #16]
   361c8:	movw	r2, #12
   361cc:	mul	r1, r1, r2
   361d0:	add	r0, r0, r1
   361d4:	str	r0, [sp, #12]
   361d8:	ldr	r0, [fp, #-8]
   361dc:	ldr	r1, [sp, #12]
   361e0:	ldr	r2, [fp, #-16]
   361e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   361e8:	bl	355cc <__assert_fail@plt+0x24138>
   361ec:	str	r0, [sp, #32]
   361f0:	ldr	r0, [sp, #32]
   361f4:	cmn	r0, #1
   361f8:	bne	36230 <__assert_fail@plt+0x24d9c>
   361fc:	ldr	r1, [sp, #12]
   36200:	add	r0, sp, #20
   36204:	bl	304a4 <__assert_fail@plt+0x1f010>
   36208:	str	r0, [fp, #-24]	; 0xffffffe8
   3620c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   36210:	cmp	r0, #0
   36214:	beq	3622c <__assert_fail@plt+0x24d98>
   36218:	ldr	r0, [sp, #28]
   3621c:	bl	138a4 <__assert_fail@plt+0x2410>
   36220:	ldr	r0, [fp, #-24]	; 0xffffffe8
   36224:	str	r0, [fp, #-4]
   36228:	b	362c4 <__assert_fail@plt+0x24e30>
   3622c:	b	36280 <__assert_fail@plt+0x24dec>
   36230:	ldr	r0, [fp, #-8]
   36234:	ldr	r2, [sp, #16]
   36238:	ldr	r3, [fp, #-16]
   3623c:	ldr	r1, [fp, #-20]	; 0xffffffec
   36240:	add	ip, sp, #20
   36244:	str	r1, [sp, #8]
   36248:	mov	r1, ip
   3624c:	ldr	ip, [sp, #8]
   36250:	str	ip, [sp]
   36254:	bl	3698c <__assert_fail@plt+0x254f8>
   36258:	str	r0, [fp, #-24]	; 0xffffffe8
   3625c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   36260:	cmp	r0, #0
   36264:	beq	3627c <__assert_fail@plt+0x24de8>
   36268:	ldr	r0, [sp, #28]
   3626c:	bl	138a4 <__assert_fail@plt+0x2410>
   36270:	ldr	r0, [fp, #-24]	; 0xffffffe8
   36274:	str	r0, [fp, #-4]
   36278:	b	362c4 <__assert_fail@plt+0x24e30>
   3627c:	b	36280 <__assert_fail@plt+0x24dec>
   36280:	b	36284 <__assert_fail@plt+0x24df0>
   36284:	ldr	r0, [fp, #-28]	; 0xffffffe4
   36288:	add	r0, r0, #1
   3628c:	str	r0, [fp, #-28]	; 0xffffffe4
   36290:	b	36190 <__assert_fail@plt+0x24cfc>
   36294:	ldr	r0, [fp, #-12]
   36298:	ldr	r0, [r0, #8]
   3629c:	bl	138a4 <__assert_fail@plt+0x2410>
   362a0:	ldr	r0, [fp, #-12]
   362a4:	ldr	lr, [sp, #20]
   362a8:	str	lr, [r0]
   362ac:	ldr	lr, [sp, #24]
   362b0:	str	lr, [r0, #4]
   362b4:	ldr	lr, [sp, #28]
   362b8:	str	lr, [r0, #8]
   362bc:	movw	r0, #0
   362c0:	str	r0, [fp, #-4]
   362c4:	ldr	r0, [fp, #-4]
   362c8:	mov	sp, fp
   362cc:	pop	{fp, pc}
   362d0:	push	{fp, lr}
   362d4:	mov	fp, sp
   362d8:	sub	sp, sp, #112	; 0x70
   362dc:	ldr	ip, [fp, #8]
   362e0:	str	r0, [fp, #-8]
   362e4:	str	r1, [fp, #-12]
   362e8:	str	r2, [fp, #-16]
   362ec:	str	r3, [fp, #-20]	; 0xffffffec
   362f0:	ldr	r0, [fp, #-8]
   362f4:	ldr	r0, [r0, #84]	; 0x54
   362f8:	str	r0, [fp, #-24]	; 0xffffffe8
   362fc:	ldr	r0, [fp, #-8]
   36300:	ldr	r1, [fp, #-16]
   36304:	str	ip, [sp, #28]
   36308:	bl	352d4 <__assert_fail@plt+0x23e40>
   3630c:	str	r0, [fp, #-32]	; 0xffffffe0
   36310:	ldr	r0, [fp, #-32]	; 0xffffffe0
   36314:	cmn	r0, #1
   36318:	bne	36328 <__assert_fail@plt+0x24e94>
   3631c:	movw	r0, #0
   36320:	str	r0, [fp, #-4]
   36324:	b	36694 <__assert_fail@plt+0x25200>
   36328:	b	3632c <__assert_fail@plt+0x24e98>
   3632c:	ldr	r0, [fp, #-8]
   36330:	ldr	r0, [r0, #116]	; 0x74
   36334:	ldr	r1, [fp, #-32]	; 0xffffffe0
   36338:	movw	r2, #24
   3633c:	mul	r1, r1, r2
   36340:	add	r0, r0, r1
   36344:	str	r0, [fp, #-36]	; 0xffffffdc
   36348:	ldr	r0, [fp, #-12]
   3634c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   36350:	ldr	r1, [r1]
   36354:	bl	30e4c <__assert_fail@plt+0x1f9b8>
   36358:	cmp	r0, #0
   3635c:	bne	36364 <__assert_fail@plt+0x24ed0>
   36360:	b	36674 <__assert_fail@plt+0x251e0>
   36364:	ldr	r0, [fp, #-16]
   36368:	ldr	r1, [fp, #-36]	; 0xffffffdc
   3636c:	ldr	r1, [r1, #12]
   36370:	add	r0, r0, r1
   36374:	ldr	r1, [fp, #-36]	; 0xffffffdc
   36378:	ldr	r1, [r1, #8]
   3637c:	sub	r0, r0, r1
   36380:	str	r0, [fp, #-40]	; 0xffffffd8
   36384:	ldr	r0, [fp, #-40]	; 0xffffffd8
   36388:	ldr	r1, [fp, #-16]
   3638c:	cmp	r0, r1
   36390:	bne	364b4 <__assert_fail@plt+0x25020>
   36394:	ldr	r0, [fp, #-24]	; 0xffffffe8
   36398:	ldr	r0, [r0, #20]
   3639c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   363a0:	ldr	r1, [r1]
   363a4:	movw	r2, #12
   363a8:	mul	r1, r1, r2
   363ac:	add	r0, r0, r1
   363b0:	ldr	r0, [r0, #8]
   363b4:	ldr	r0, [r0]
   363b8:	str	r0, [fp, #-44]	; 0xffffffd4
   363bc:	ldr	r0, [fp, #-12]
   363c0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   363c4:	bl	30e4c <__assert_fail@plt+0x1f9b8>
   363c8:	cmp	r0, #0
   363cc:	beq	363d4 <__assert_fail@plt+0x24f40>
   363d0:	b	36674 <__assert_fail@plt+0x251e0>
   363d4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   363d8:	add	r0, sp, #56	; 0x38
   363dc:	bl	2fac4 <__assert_fail@plt+0x1e630>
   363e0:	str	r0, [fp, #-28]	; 0xffffffe4
   363e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   363e8:	ldr	r2, [fp, #-20]	; 0xffffffec
   363ec:	ldr	r3, [fp, #8]
   363f0:	add	r1, sp, #56	; 0x38
   363f4:	bl	3612c <__assert_fail@plt+0x24c98>
   363f8:	str	r0, [sp, #52]	; 0x34
   363fc:	ldr	r0, [fp, #-12]
   36400:	add	r1, sp, #56	; 0x38
   36404:	bl	304a4 <__assert_fail@plt+0x1f010>
   36408:	str	r0, [sp, #48]	; 0x30
   3640c:	ldr	r0, [sp, #64]	; 0x40
   36410:	bl	138a4 <__assert_fail@plt+0x2410>
   36414:	ldr	r0, [fp, #-28]	; 0xffffffe4
   36418:	cmp	r0, #0
   3641c:	movw	r0, #1
   36420:	str	r0, [sp, #24]
   36424:	bne	36450 <__assert_fail@plt+0x24fbc>
   36428:	ldr	r0, [sp, #52]	; 0x34
   3642c:	cmp	r0, #0
   36430:	movw	r0, #1
   36434:	str	r0, [sp, #24]
   36438:	bne	36450 <__assert_fail@plt+0x24fbc>
   3643c:	ldr	r0, [sp, #48]	; 0x30
   36440:	cmp	r0, #0
   36444:	movw	r0, #0
   36448:	movne	r0, #1
   3644c:	str	r0, [sp, #24]
   36450:	ldr	r0, [sp, #24]
   36454:	tst	r0, #1
   36458:	beq	364b0 <__assert_fail@plt+0x2501c>
   3645c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   36460:	cmp	r0, #0
   36464:	beq	36474 <__assert_fail@plt+0x24fe0>
   36468:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3646c:	str	r0, [sp, #20]
   36470:	b	3649c <__assert_fail@plt+0x25008>
   36474:	ldr	r0, [sp, #52]	; 0x34
   36478:	cmp	r0, #0
   3647c:	beq	3648c <__assert_fail@plt+0x24ff8>
   36480:	ldr	r0, [sp, #52]	; 0x34
   36484:	str	r0, [sp, #16]
   36488:	b	36494 <__assert_fail@plt+0x25000>
   3648c:	ldr	r0, [sp, #48]	; 0x30
   36490:	str	r0, [sp, #16]
   36494:	ldr	r0, [sp, #16]
   36498:	str	r0, [sp, #20]
   3649c:	ldr	r0, [sp, #20]
   364a0:	str	r0, [fp, #-28]	; 0xffffffe4
   364a4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   364a8:	str	r0, [fp, #-4]
   364ac:	b	36694 <__assert_fail@plt+0x25200>
   364b0:	b	3632c <__assert_fail@plt+0x24e98>
   364b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   364b8:	ldr	r0, [r0, #12]
   364bc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   364c0:	ldr	r1, [r1]
   364c4:	ldr	r0, [r0, r1, lsl #2]
   364c8:	str	r0, [fp, #-44]	; 0xffffffd4
   364cc:	ldr	r0, [fp, #-8]
   364d0:	ldr	r0, [r0, #100]	; 0x64
   364d4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   364d8:	add	r0, r0, r1, lsl #2
   364dc:	ldr	r0, [r0]
   364e0:	movw	r1, #0
   364e4:	cmp	r0, r1
   364e8:	beq	365c4 <__assert_fail@plt+0x25130>
   364ec:	ldr	r0, [fp, #-8]
   364f0:	ldr	r0, [r0, #100]	; 0x64
   364f4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   364f8:	add	r0, r0, r1, lsl #2
   364fc:	ldr	r0, [r0]
   36500:	add	r0, r0, #4
   36504:	ldr	r1, [fp, #-44]	; 0xffffffd4
   36508:	bl	30e4c <__assert_fail@plt+0x1f9b8>
   3650c:	cmp	r0, #0
   36510:	beq	36518 <__assert_fail@plt+0x25084>
   36514:	b	36674 <__assert_fail@plt+0x251e0>
   36518:	ldr	r0, [fp, #-8]
   3651c:	ldr	r0, [r0, #100]	; 0x64
   36520:	ldr	r1, [fp, #-40]	; 0xffffffd8
   36524:	add	r0, r0, r1, lsl #2
   36528:	ldr	r0, [r0]
   3652c:	add	r1, r0, #4
   36530:	add	r0, sp, #36	; 0x24
   36534:	bl	30d78 <__assert_fail@plt+0x1f8e4>
   36538:	str	r0, [fp, #-28]	; 0xffffffe4
   3653c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   36540:	add	r0, sp, #36	; 0x24
   36544:	bl	30990 <__assert_fail@plt+0x1f4fc>
   36548:	and	r0, r0, #1
   3654c:	strb	r0, [sp, #35]	; 0x23
   36550:	ldr	r0, [fp, #-28]	; 0xffffffe4
   36554:	cmp	r0, #0
   36558:	movw	r0, #1
   3655c:	str	r0, [sp, #12]
   36560:	bne	36574 <__assert_fail@plt+0x250e0>
   36564:	ldrb	r0, [sp, #35]	; 0x23
   36568:	mvn	r1, #0
   3656c:	eor	r0, r0, r1
   36570:	str	r0, [sp, #12]
   36574:	ldr	r0, [sp, #12]
   36578:	tst	r0, #1
   3657c:	beq	365c0 <__assert_fail@plt+0x2512c>
   36580:	ldr	r0, [sp, #44]	; 0x2c
   36584:	bl	138a4 <__assert_fail@plt+0x2410>
   36588:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3658c:	cmp	r0, #0
   36590:	beq	365a0 <__assert_fail@plt+0x2510c>
   36594:	ldr	r0, [fp, #-28]	; 0xffffffe4
   36598:	str	r0, [sp, #8]
   3659c:	b	365ac <__assert_fail@plt+0x25118>
   365a0:	movw	r0, #12
   365a4:	str	r0, [sp, #8]
   365a8:	b	365ac <__assert_fail@plt+0x25118>
   365ac:	ldr	r0, [sp, #8]
   365b0:	str	r0, [fp, #-28]	; 0xffffffe4
   365b4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   365b8:	str	r0, [fp, #-4]
   365bc:	b	36694 <__assert_fail@plt+0x25200>
   365c0:	b	365f0 <__assert_fail@plt+0x2515c>
   365c4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   365c8:	add	r0, sp, #36	; 0x24
   365cc:	bl	2fac4 <__assert_fail@plt+0x1e630>
   365d0:	str	r0, [fp, #-28]	; 0xffffffe4
   365d4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   365d8:	cmp	r0, #0
   365dc:	beq	365ec <__assert_fail@plt+0x25158>
   365e0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   365e4:	str	r0, [fp, #-4]
   365e8:	b	36694 <__assert_fail@plt+0x25200>
   365ec:	b	365f0 <__assert_fail@plt+0x2515c>
   365f0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   365f4:	sub	r0, fp, #28
   365f8:	add	r2, sp, #36	; 0x24
   365fc:	bl	36b80 <__assert_fail@plt+0x256ec>
   36600:	ldr	r1, [fp, #-8]
   36604:	ldr	r1, [r1, #100]	; 0x64
   36608:	ldr	r2, [fp, #-40]	; 0xffffffd8
   3660c:	str	r0, [r1, r2, lsl #2]
   36610:	ldr	r0, [sp, #44]	; 0x2c
   36614:	bl	138a4 <__assert_fail@plt+0x2410>
   36618:	ldr	r0, [fp, #-8]
   3661c:	ldr	r0, [r0, #100]	; 0x64
   36620:	ldr	r1, [fp, #-40]	; 0xffffffd8
   36624:	add	r0, r0, r1, lsl #2
   36628:	ldr	r0, [r0]
   3662c:	movw	r1, #0
   36630:	cmp	r0, r1
   36634:	movw	r0, #0
   36638:	str	r0, [sp, #4]
   3663c:	bne	36654 <__assert_fail@plt+0x251c0>
   36640:	ldr	r0, [fp, #-28]	; 0xffffffe4
   36644:	cmp	r0, #0
   36648:	movw	r0, #0
   3664c:	movne	r0, #1
   36650:	str	r0, [sp, #4]
   36654:	ldr	r0, [sp, #4]
   36658:	tst	r0, #1
   3665c:	beq	3666c <__assert_fail@plt+0x251d8>
   36660:	ldr	r0, [fp, #-28]	; 0xffffffe4
   36664:	str	r0, [fp, #-4]
   36668:	b	36694 <__assert_fail@plt+0x25200>
   3666c:	b	36670 <__assert_fail@plt+0x251dc>
   36670:	b	36674 <__assert_fail@plt+0x251e0>
   36674:	ldr	r0, [fp, #-36]	; 0xffffffdc
   36678:	add	r1, r0, #24
   3667c:	str	r1, [fp, #-36]	; 0xffffffdc
   36680:	ldrsb	r0, [r0, #20]
   36684:	cmp	r0, #0
   36688:	bne	36348 <__assert_fail@plt+0x24eb4>
   3668c:	movw	r0, #0
   36690:	str	r0, [fp, #-4]
   36694:	ldr	r0, [fp, #-4]
   36698:	mov	sp, fp
   3669c:	pop	{fp, pc}
   366a0:	push	{fp, lr}
   366a4:	mov	fp, sp
   366a8:	sub	sp, sp, #80	; 0x50
   366ac:	str	r0, [fp, #-8]
   366b0:	str	r1, [fp, #-12]
   366b4:	str	r2, [fp, #-16]
   366b8:	str	r3, [fp, #-20]	; 0xffffffec
   366bc:	ldr	r0, [fp, #-8]
   366c0:	ldr	r0, [r0, #84]	; 0x54
   366c4:	str	r0, [fp, #-24]	; 0xffffffe8
   366c8:	movw	r0, #0
   366cc:	str	r0, [fp, #-36]	; 0xffffffdc
   366d0:	add	r1, sp, #32
   366d4:	str	r0, [sp, #8]
   366d8:	mov	r0, r1
   366dc:	movw	r1, #0
   366e0:	and	r1, r1, #255	; 0xff
   366e4:	movw	r2, #12
   366e8:	bl	113d4 <memset@plt>
   366ec:	ldr	r0, [sp, #8]
   366f0:	str	r0, [fp, #-32]	; 0xffffffe0
   366f4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   366f8:	ldr	r1, [fp, #-16]
   366fc:	ldr	r1, [r1, #4]
   36700:	cmp	r0, r1
   36704:	bge	36970 <__assert_fail@plt+0x254dc>
   36708:	mov	r0, #0
   3670c:	str	r0, [sp, #28]
   36710:	ldr	r0, [fp, #-16]
   36714:	ldr	r0, [r0, #8]
   36718:	ldr	r1, [fp, #-32]	; 0xffffffe0
   3671c:	ldr	r0, [r0, r1, lsl #2]
   36720:	str	r0, [sp, #24]
   36724:	ldr	r0, [fp, #-24]	; 0xffffffe8
   36728:	ldr	r0, [r0]
   3672c:	ldr	r1, [sp, #24]
   36730:	add	r0, r0, r1, lsl #3
   36734:	ldr	r0, [r0, #4]
   36738:	and	r0, r0, #255	; 0xff
   3673c:	and	r0, r0, #8
   36740:	cmp	r0, #0
   36744:	bne	3674c <__assert_fail@plt+0x252b8>
   36748:	b	3674c <__assert_fail@plt+0x252b8>
   3674c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   36750:	ldr	r0, [r0]
   36754:	ldr	r1, [sp, #24]
   36758:	add	r0, r0, r1, lsl #3
   3675c:	ldr	r0, [r0, #4]
   36760:	lsr	r0, r0, #20
   36764:	and	r0, r0, #1
   36768:	cmp	r0, #0
   3676c:	beq	368dc <__assert_fail@plt+0x25448>
   36770:	ldr	r0, [fp, #-24]	; 0xffffffe8
   36774:	ldr	r1, [sp, #24]
   36778:	ldr	r2, [fp, #-8]
   3677c:	ldr	r3, [fp, #-12]
   36780:	bl	36ed8 <__assert_fail@plt+0x25a44>
   36784:	str	r0, [sp, #28]
   36788:	ldr	r0, [sp, #28]
   3678c:	cmp	r0, #1
   36790:	ble	368d8 <__assert_fail@plt+0x25444>
   36794:	ldr	r0, [fp, #-24]	; 0xffffffe8
   36798:	ldr	r0, [r0, #12]
   3679c:	ldr	r1, [sp, #24]
   367a0:	ldr	r0, [r0, r1, lsl #2]
   367a4:	str	r0, [sp, #16]
   367a8:	ldr	r0, [fp, #-12]
   367ac:	ldr	r1, [sp, #28]
   367b0:	add	r0, r0, r1
   367b4:	str	r0, [sp, #12]
   367b8:	ldr	r0, [fp, #-8]
   367bc:	ldr	r0, [r0, #100]	; 0x64
   367c0:	ldr	r1, [sp, #12]
   367c4:	add	r0, r0, r1, lsl #2
   367c8:	ldr	r0, [r0]
   367cc:	str	r0, [sp, #20]
   367d0:	movw	r0, #0
   367d4:	str	r0, [sp, #36]	; 0x24
   367d8:	ldr	r1, [sp, #20]
   367dc:	cmp	r1, r0
   367e0:	beq	3681c <__assert_fail@plt+0x25388>
   367e4:	ldr	r0, [sp, #20]
   367e8:	add	r1, r0, #4
   367ec:	add	r0, sp, #32
   367f0:	bl	304a4 <__assert_fail@plt+0x1f010>
   367f4:	str	r0, [fp, #-36]	; 0xffffffdc
   367f8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   367fc:	cmp	r0, #0
   36800:	beq	36818 <__assert_fail@plt+0x25384>
   36804:	ldr	r0, [sp, #40]	; 0x28
   36808:	bl	138a4 <__assert_fail@plt+0x2410>
   3680c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   36810:	str	r0, [fp, #-4]
   36814:	b	36980 <__assert_fail@plt+0x254ec>
   36818:	b	3681c <__assert_fail@plt+0x25388>
   3681c:	ldr	r1, [sp, #16]
   36820:	add	r0, sp, #32
   36824:	bl	30990 <__assert_fail@plt+0x1f4fc>
   36828:	and	r0, r0, #1
   3682c:	strb	r0, [fp, #-25]	; 0xffffffe7
   36830:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   36834:	mvn	r1, #0
   36838:	eor	r0, r0, r1
   3683c:	tst	r0, #1
   36840:	beq	36858 <__assert_fail@plt+0x253c4>
   36844:	ldr	r0, [sp, #40]	; 0x28
   36848:	bl	138a4 <__assert_fail@plt+0x2410>
   3684c:	movw	r0, #12
   36850:	str	r0, [fp, #-4]
   36854:	b	36980 <__assert_fail@plt+0x254ec>
   36858:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3685c:	sub	r0, fp, #36	; 0x24
   36860:	add	r2, sp, #32
   36864:	bl	36b80 <__assert_fail@plt+0x256ec>
   36868:	ldr	r1, [fp, #-8]
   3686c:	ldr	r1, [r1, #100]	; 0x64
   36870:	ldr	r2, [sp, #12]
   36874:	str	r0, [r1, r2, lsl #2]
   36878:	ldr	r0, [fp, #-8]
   3687c:	ldr	r0, [r0, #100]	; 0x64
   36880:	ldr	r1, [sp, #12]
   36884:	add	r0, r0, r1, lsl #2
   36888:	ldr	r0, [r0]
   3688c:	movw	r1, #0
   36890:	cmp	r0, r1
   36894:	movw	r0, #0
   36898:	str	r0, [sp, #4]
   3689c:	bne	368b4 <__assert_fail@plt+0x25420>
   368a0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   368a4:	cmp	r0, #0
   368a8:	movw	r0, #0
   368ac:	movne	r0, #1
   368b0:	str	r0, [sp, #4]
   368b4:	ldr	r0, [sp, #4]
   368b8:	tst	r0, #1
   368bc:	beq	368d4 <__assert_fail@plt+0x25440>
   368c0:	ldr	r0, [sp, #40]	; 0x28
   368c4:	bl	138a4 <__assert_fail@plt+0x2410>
   368c8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   368cc:	str	r0, [fp, #-4]
   368d0:	b	36980 <__assert_fail@plt+0x254ec>
   368d4:	b	368d8 <__assert_fail@plt+0x25444>
   368d8:	b	368dc <__assert_fail@plt+0x25448>
   368dc:	ldr	r0, [sp, #28]
   368e0:	cmp	r0, #0
   368e4:	bne	3690c <__assert_fail@plt+0x25478>
   368e8:	ldr	r0, [fp, #-8]
   368ec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   368f0:	ldr	r1, [r1]
   368f4:	ldr	r2, [sp, #24]
   368f8:	add	r1, r1, r2, lsl #3
   368fc:	ldr	r2, [fp, #-12]
   36900:	bl	374c0 <__assert_fail@plt+0x2602c>
   36904:	tst	r0, #1
   36908:	beq	3695c <__assert_fail@plt+0x254c8>
   3690c:	ldr	r0, [fp, #-20]	; 0xffffffec
   36910:	ldr	r1, [fp, #-24]	; 0xffffffe8
   36914:	ldr	r1, [r1, #12]
   36918:	ldr	r2, [sp, #24]
   3691c:	add	r1, r1, r2, lsl #2
   36920:	ldr	r1, [r1]
   36924:	bl	30990 <__assert_fail@plt+0x1f4fc>
   36928:	and	r0, r0, #1
   3692c:	strb	r0, [fp, #-25]	; 0xffffffe7
   36930:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   36934:	mvn	r1, #0
   36938:	eor	r0, r0, r1
   3693c:	tst	r0, #1
   36940:	beq	36958 <__assert_fail@plt+0x254c4>
   36944:	ldr	r0, [sp, #40]	; 0x28
   36948:	bl	138a4 <__assert_fail@plt+0x2410>
   3694c:	movw	r0, #12
   36950:	str	r0, [fp, #-4]
   36954:	b	36980 <__assert_fail@plt+0x254ec>
   36958:	b	3695c <__assert_fail@plt+0x254c8>
   3695c:	b	36960 <__assert_fail@plt+0x254cc>
   36960:	ldr	r0, [fp, #-32]	; 0xffffffe0
   36964:	add	r0, r0, #1
   36968:	str	r0, [fp, #-32]	; 0xffffffe0
   3696c:	b	366f4 <__assert_fail@plt+0x25260>
   36970:	ldr	r0, [sp, #40]	; 0x28
   36974:	bl	138a4 <__assert_fail@plt+0x2410>
   36978:	movw	r0, #0
   3697c:	str	r0, [fp, #-4]
   36980:	ldr	r0, [fp, #-4]
   36984:	mov	sp, fp
   36988:	pop	{fp, pc}
   3698c:	push	{fp, lr}
   36990:	mov	fp, sp
   36994:	sub	sp, sp, #40	; 0x28
   36998:	ldr	ip, [fp, #8]
   3699c:	str	r0, [fp, #-8]
   369a0:	str	r1, [fp, #-12]
   369a4:	str	r2, [fp, #-16]
   369a8:	str	r3, [sp, #20]
   369ac:	ldr	r0, [fp, #-16]
   369b0:	str	r0, [sp, #16]
   369b4:	str	ip, [sp, #4]
   369b8:	ldr	r0, [fp, #-12]
   369bc:	ldr	r1, [sp, #16]
   369c0:	bl	30e4c <__assert_fail@plt+0x1f9b8>
   369c4:	cmp	r0, #0
   369c8:	movw	r0, #0
   369cc:	movne	r0, #1
   369d0:	mvn	r1, #0
   369d4:	eor	r0, r0, r1
   369d8:	tst	r0, #1
   369dc:	beq	36b6c <__assert_fail@plt+0x256d8>
   369e0:	ldr	r0, [fp, #-8]
   369e4:	ldr	r0, [r0]
   369e8:	ldr	r1, [sp, #16]
   369ec:	add	r0, r0, r1, lsl #3
   369f0:	ldr	r0, [r0, #4]
   369f4:	and	r0, r0, #255	; 0xff
   369f8:	ldr	r1, [fp, #8]
   369fc:	cmp	r0, r1
   36a00:	bne	36a6c <__assert_fail@plt+0x255d8>
   36a04:	ldr	r0, [fp, #-8]
   36a08:	ldr	r0, [r0]
   36a0c:	ldr	r1, [sp, #16]
   36a10:	add	r0, r0, r1, lsl #3
   36a14:	ldr	r0, [r0]
   36a18:	ldr	r1, [sp, #20]
   36a1c:	cmp	r0, r1
   36a20:	bne	36a6c <__assert_fail@plt+0x255d8>
   36a24:	ldr	r0, [fp, #8]
   36a28:	cmp	r0, #9
   36a2c:	bne	36a68 <__assert_fail@plt+0x255d4>
   36a30:	ldr	r0, [fp, #-12]
   36a34:	ldr	r1, [sp, #16]
   36a38:	bl	30990 <__assert_fail@plt+0x1f4fc>
   36a3c:	and	r0, r0, #1
   36a40:	strb	r0, [sp, #15]
   36a44:	ldrb	r0, [sp, #15]
   36a48:	mvn	r1, #0
   36a4c:	eor	r0, r0, r1
   36a50:	tst	r0, #1
   36a54:	beq	36a64 <__assert_fail@plt+0x255d0>
   36a58:	movw	r0, #12
   36a5c:	str	r0, [fp, #-4]
   36a60:	b	36b74 <__assert_fail@plt+0x256e0>
   36a64:	b	36a68 <__assert_fail@plt+0x255d4>
   36a68:	b	36b6c <__assert_fail@plt+0x256d8>
   36a6c:	ldr	r0, [fp, #-12]
   36a70:	ldr	r1, [sp, #16]
   36a74:	bl	30990 <__assert_fail@plt+0x1f4fc>
   36a78:	and	r0, r0, #1
   36a7c:	strb	r0, [sp, #15]
   36a80:	ldrb	r0, [sp, #15]
   36a84:	mvn	r1, #0
   36a88:	eor	r0, r0, r1
   36a8c:	tst	r0, #1
   36a90:	beq	36aa0 <__assert_fail@plt+0x2560c>
   36a94:	movw	r0, #12
   36a98:	str	r0, [fp, #-4]
   36a9c:	b	36b74 <__assert_fail@plt+0x256e0>
   36aa0:	ldr	r0, [fp, #-8]
   36aa4:	ldr	r0, [r0, #20]
   36aa8:	ldr	r1, [sp, #16]
   36aac:	movw	r2, #12
   36ab0:	mul	r1, r1, r2
   36ab4:	add	r0, r0, r1
   36ab8:	ldr	r0, [r0, #4]
   36abc:	cmp	r0, #0
   36ac0:	bne	36ac8 <__assert_fail@plt+0x25634>
   36ac4:	b	36b6c <__assert_fail@plt+0x256d8>
   36ac8:	ldr	r0, [fp, #-8]
   36acc:	ldr	r0, [r0, #20]
   36ad0:	ldr	r1, [sp, #16]
   36ad4:	movw	r2, #12
   36ad8:	mul	r1, r1, r2
   36adc:	add	r0, r0, r1
   36ae0:	ldr	r0, [r0, #4]
   36ae4:	cmp	r0, #2
   36ae8:	bne	36b44 <__assert_fail@plt+0x256b0>
   36aec:	ldr	r0, [fp, #-8]
   36af0:	ldr	r1, [fp, #-12]
   36af4:	ldr	r2, [fp, #-8]
   36af8:	ldr	r2, [r2, #20]
   36afc:	ldr	r3, [sp, #16]
   36b00:	movw	ip, #12
   36b04:	mul	r3, r3, ip
   36b08:	add	r2, r2, r3
   36b0c:	ldr	r2, [r2, #8]
   36b10:	ldr	r2, [r2, #4]
   36b14:	ldr	r3, [sp, #20]
   36b18:	ldr	ip, [fp, #8]
   36b1c:	str	ip, [sp]
   36b20:	bl	3698c <__assert_fail@plt+0x254f8>
   36b24:	str	r0, [sp, #8]
   36b28:	ldr	r0, [sp, #8]
   36b2c:	cmp	r0, #0
   36b30:	beq	36b40 <__assert_fail@plt+0x256ac>
   36b34:	ldr	r0, [sp, #8]
   36b38:	str	r0, [fp, #-4]
   36b3c:	b	36b74 <__assert_fail@plt+0x256e0>
   36b40:	b	36b44 <__assert_fail@plt+0x256b0>
   36b44:	ldr	r0, [fp, #-8]
   36b48:	ldr	r0, [r0, #20]
   36b4c:	ldr	r1, [sp, #16]
   36b50:	movw	r2, #12
   36b54:	mul	r1, r1, r2
   36b58:	add	r0, r0, r1
   36b5c:	ldr	r0, [r0, #8]
   36b60:	ldr	r0, [r0]
   36b64:	str	r0, [sp, #16]
   36b68:	b	369b8 <__assert_fail@plt+0x25524>
   36b6c:	movw	r0, #0
   36b70:	str	r0, [fp, #-4]
   36b74:	ldr	r0, [fp, #-4]
   36b78:	mov	sp, fp
   36b7c:	pop	{fp, pc}
   36b80:	push	{fp, lr}
   36b84:	mov	fp, sp
   36b88:	sub	sp, sp, #40	; 0x28
   36b8c:	str	r0, [fp, #-8]
   36b90:	str	r1, [fp, #-12]
   36b94:	str	r2, [fp, #-16]
   36b98:	ldr	r0, [fp, #-16]
   36b9c:	ldr	r0, [r0, #4]
   36ba0:	cmp	r0, #0
   36ba4:	bne	36bbc <__assert_fail@plt+0x25728>
   36ba8:	ldr	r0, [fp, #-8]
   36bac:	movw	r1, #0
   36bb0:	str	r1, [r0]
   36bb4:	str	r1, [fp, #-4]
   36bb8:	b	36cb0 <__assert_fail@plt+0x2581c>
   36bbc:	ldr	r0, [fp, #-16]
   36bc0:	movw	r1, #0
   36bc4:	bl	31098 <__assert_fail@plt+0x1fc04>
   36bc8:	str	r0, [sp, #20]
   36bcc:	ldr	r0, [fp, #-12]
   36bd0:	ldr	r0, [r0, #32]
   36bd4:	ldr	r1, [sp, #20]
   36bd8:	ldr	lr, [fp, #-12]
   36bdc:	ldr	lr, [lr, #68]	; 0x44
   36be0:	and	r1, r1, lr
   36be4:	movw	lr, #12
   36be8:	mul	r1, r1, lr
   36bec:	add	r0, r0, r1
   36bf0:	str	r0, [sp, #12]
   36bf4:	movw	r0, #0
   36bf8:	str	r0, [sp, #8]
   36bfc:	ldr	r0, [sp, #8]
   36c00:	ldr	r1, [sp, #12]
   36c04:	ldr	r1, [r1]
   36c08:	cmp	r0, r1
   36c0c:	bge	36c78 <__assert_fail@plt+0x257e4>
   36c10:	ldr	r0, [sp, #12]
   36c14:	ldr	r0, [r0, #8]
   36c18:	ldr	r1, [sp, #8]
   36c1c:	add	r0, r0, r1, lsl #2
   36c20:	ldr	r0, [r0]
   36c24:	str	r0, [sp, #4]
   36c28:	ldr	r0, [sp, #20]
   36c2c:	ldr	r1, [sp, #4]
   36c30:	ldr	r1, [r1]
   36c34:	cmp	r0, r1
   36c38:	beq	36c40 <__assert_fail@plt+0x257ac>
   36c3c:	b	36c68 <__assert_fail@plt+0x257d4>
   36c40:	ldr	r0, [sp, #4]
   36c44:	add	r0, r0, #4
   36c48:	ldr	r1, [fp, #-16]
   36c4c:	bl	31110 <__assert_fail@plt+0x1fc7c>
   36c50:	tst	r0, #1
   36c54:	beq	36c64 <__assert_fail@plt+0x257d0>
   36c58:	ldr	r0, [sp, #4]
   36c5c:	str	r0, [fp, #-4]
   36c60:	b	36cb0 <__assert_fail@plt+0x2581c>
   36c64:	b	36c68 <__assert_fail@plt+0x257d4>
   36c68:	ldr	r0, [sp, #8]
   36c6c:	add	r0, r0, #1
   36c70:	str	r0, [sp, #8]
   36c74:	b	36bfc <__assert_fail@plt+0x25768>
   36c78:	ldr	r0, [fp, #-12]
   36c7c:	ldr	r1, [fp, #-16]
   36c80:	ldr	r2, [sp, #20]
   36c84:	bl	36cbc <__assert_fail@plt+0x25828>
   36c88:	str	r0, [sp, #16]
   36c8c:	ldr	r0, [sp, #16]
   36c90:	movw	r1, #0
   36c94:	cmp	r0, r1
   36c98:	bne	36ca8 <__assert_fail@plt+0x25814>
   36c9c:	ldr	r0, [fp, #-8]
   36ca0:	movw	r1, #12
   36ca4:	str	r1, [r0]
   36ca8:	ldr	r0, [sp, #16]
   36cac:	str	r0, [fp, #-4]
   36cb0:	ldr	r0, [fp, #-4]
   36cb4:	mov	sp, fp
   36cb8:	pop	{fp, pc}
   36cbc:	push	{fp, lr}
   36cc0:	mov	fp, sp
   36cc4:	sub	sp, sp, #40	; 0x28
   36cc8:	str	r0, [fp, #-8]
   36ccc:	str	r1, [fp, #-12]
   36cd0:	str	r2, [fp, #-16]
   36cd4:	movw	r0, #56	; 0x38
   36cd8:	movw	r1, #1
   36cdc:	bl	3fb3c <__assert_fail@plt+0x2e6a8>
   36ce0:	str	r0, [sp, #12]
   36ce4:	ldr	r0, [sp, #12]
   36ce8:	movw	r1, #0
   36cec:	cmp	r0, r1
   36cf0:	bne	36d00 <__assert_fail@plt+0x2586c>
   36cf4:	movw	r0, #0
   36cf8:	str	r0, [fp, #-4]
   36cfc:	b	36ecc <__assert_fail@plt+0x25a38>
   36d00:	ldr	r0, [sp, #12]
   36d04:	add	r0, r0, #4
   36d08:	ldr	r1, [fp, #-12]
   36d0c:	bl	30d78 <__assert_fail@plt+0x1f8e4>
   36d10:	str	r0, [sp, #16]
   36d14:	ldr	r0, [sp, #16]
   36d18:	cmp	r0, #0
   36d1c:	beq	36d34 <__assert_fail@plt+0x258a0>
   36d20:	ldr	r0, [sp, #12]
   36d24:	bl	138a4 <__assert_fail@plt+0x2410>
   36d28:	movw	r0, #0
   36d2c:	str	r0, [fp, #-4]
   36d30:	b	36ecc <__assert_fail@plt+0x25a38>
   36d34:	ldr	r0, [sp, #12]
   36d38:	add	r0, r0, #4
   36d3c:	ldr	r1, [sp, #12]
   36d40:	str	r0, [r1, #40]	; 0x28
   36d44:	movw	r0, #0
   36d48:	str	r0, [sp, #20]
   36d4c:	ldr	r0, [sp, #20]
   36d50:	ldr	r1, [fp, #-12]
   36d54:	ldr	r1, [r1, #4]
   36d58:	cmp	r0, r1
   36d5c:	bge	36e94 <__assert_fail@plt+0x25a00>
   36d60:	ldr	r0, [fp, #-8]
   36d64:	ldr	r0, [r0]
   36d68:	ldr	r1, [fp, #-12]
   36d6c:	ldr	r1, [r1, #8]
   36d70:	ldr	r2, [sp, #20]
   36d74:	ldr	r1, [r1, r2, lsl #2]
   36d78:	add	r0, r0, r1, lsl #3
   36d7c:	str	r0, [sp, #8]
   36d80:	ldr	r0, [sp, #8]
   36d84:	ldr	r0, [r0, #4]
   36d88:	and	r0, r0, #255	; 0xff
   36d8c:	str	r0, [sp, #4]
   36d90:	ldr	r0, [sp, #4]
   36d94:	cmp	r0, #1
   36d98:	bne	36dbc <__assert_fail@plt+0x25928>
   36d9c:	ldr	r0, [sp, #8]
   36da0:	ldr	r0, [r0, #4]
   36da4:	lsr	r0, r0, #8
   36da8:	movw	r1, #1023	; 0x3ff
   36dac:	and	r0, r0, r1
   36db0:	cmp	r0, #0
   36db4:	bne	36dbc <__assert_fail@plt+0x25928>
   36db8:	b	36e84 <__assert_fail@plt+0x259f0>
   36dbc:	ldr	r0, [sp, #8]
   36dc0:	ldr	r0, [r0, #4]
   36dc4:	ldr	r1, [sp, #12]
   36dc8:	ldrb	r2, [r1, #52]	; 0x34
   36dcc:	lsr	r3, r2, #5
   36dd0:	orr	r0, r3, r0, lsr #20
   36dd4:	and	r0, r0, #1
   36dd8:	lsl	r0, r0, #5
   36ddc:	bic	r2, r2, #32
   36de0:	orr	r0, r2, r0
   36de4:	strb	r0, [r1, #52]	; 0x34
   36de8:	ldr	r0, [sp, #4]
   36dec:	cmp	r0, #2
   36df0:	bne	36e10 <__assert_fail@plt+0x2597c>
   36df4:	ldr	r0, [sp, #12]
   36df8:	ldrb	r1, [r0, #52]	; 0x34
   36dfc:	bic	r1, r1, #16
   36e00:	movw	r2, #16
   36e04:	orr	r1, r1, r2
   36e08:	strb	r1, [r0, #52]	; 0x34
   36e0c:	b	36e80 <__assert_fail@plt+0x259ec>
   36e10:	ldr	r0, [sp, #4]
   36e14:	cmp	r0, #4
   36e18:	bne	36e38 <__assert_fail@plt+0x259a4>
   36e1c:	ldr	r0, [sp, #12]
   36e20:	ldrb	r1, [r0, #52]	; 0x34
   36e24:	bic	r1, r1, #64	; 0x40
   36e28:	movw	r2, #64	; 0x40
   36e2c:	orr	r1, r1, r2
   36e30:	strb	r1, [r0, #52]	; 0x34
   36e34:	b	36e7c <__assert_fail@plt+0x259e8>
   36e38:	ldr	r0, [sp, #4]
   36e3c:	cmp	r0, #12
   36e40:	beq	36e60 <__assert_fail@plt+0x259cc>
   36e44:	ldr	r0, [sp, #8]
   36e48:	ldr	r0, [r0, #4]
   36e4c:	lsr	r0, r0, #8
   36e50:	movw	r1, #1023	; 0x3ff
   36e54:	and	r0, r0, r1
   36e58:	cmp	r0, #0
   36e5c:	beq	36e78 <__assert_fail@plt+0x259e4>
   36e60:	ldr	r0, [sp, #12]
   36e64:	ldrb	r1, [r0, #52]	; 0x34
   36e68:	and	r1, r1, #127	; 0x7f
   36e6c:	movw	r2, #128	; 0x80
   36e70:	orr	r1, r1, r2
   36e74:	strb	r1, [r0, #52]	; 0x34
   36e78:	b	36e7c <__assert_fail@plt+0x259e8>
   36e7c:	b	36e80 <__assert_fail@plt+0x259ec>
   36e80:	b	36e84 <__assert_fail@plt+0x259f0>
   36e84:	ldr	r0, [sp, #20]
   36e88:	add	r0, r0, #1
   36e8c:	str	r0, [sp, #20]
   36e90:	b	36d4c <__assert_fail@plt+0x258b8>
   36e94:	ldr	r0, [fp, #-8]
   36e98:	ldr	r1, [sp, #12]
   36e9c:	ldr	r2, [fp, #-16]
   36ea0:	bl	315c0 <__assert_fail@plt+0x2012c>
   36ea4:	str	r0, [sp, #16]
   36ea8:	ldr	r0, [sp, #16]
   36eac:	cmp	r0, #0
   36eb0:	beq	36ec4 <__assert_fail@plt+0x25a30>
   36eb4:	ldr	r0, [sp, #12]
   36eb8:	bl	26798 <__assert_fail@plt+0x15304>
   36ebc:	movw	r0, #0
   36ec0:	str	r0, [sp, #12]
   36ec4:	ldr	r0, [sp, #12]
   36ec8:	str	r0, [fp, #-4]
   36ecc:	ldr	r0, [fp, #-4]
   36ed0:	mov	sp, fp
   36ed4:	pop	{fp, pc}
   36ed8:	push	{fp, lr}
   36edc:	mov	fp, sp
   36ee0:	sub	sp, sp, #72	; 0x48
   36ee4:	str	r0, [fp, #-8]
   36ee8:	str	r1, [fp, #-12]
   36eec:	str	r2, [fp, #-16]
   36ef0:	str	r3, [fp, #-20]	; 0xffffffec
   36ef4:	ldr	r0, [fp, #-8]
   36ef8:	ldr	r0, [r0]
   36efc:	ldr	r1, [fp, #-12]
   36f00:	add	r0, r0, r1, lsl #3
   36f04:	str	r0, [fp, #-24]	; 0xffffffe8
   36f08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   36f0c:	ldr	r0, [r0, #4]
   36f10:	and	r0, r0, #255	; 0xff
   36f14:	cmp	r0, #7
   36f18:	bne	37188 <__assert_fail@plt+0x25cf4>
   36f1c:	ldr	r0, [fp, #-16]
   36f20:	ldr	r0, [r0, #4]
   36f24:	ldr	r1, [fp, #-20]	; 0xffffffec
   36f28:	add	r0, r0, r1
   36f2c:	ldrb	r0, [r0]
   36f30:	strb	r0, [sp, #35]	; 0x23
   36f34:	ldrb	r0, [sp, #35]	; 0x23
   36f38:	cmp	r0, #194	; 0xc2
   36f3c:	bge	36f4c <__assert_fail@plt+0x25ab8>
   36f40:	movw	r0, #0
   36f44:	str	r0, [fp, #-4]
   36f48:	b	374b4 <__assert_fail@plt+0x26020>
   36f4c:	ldr	r0, [fp, #-20]	; 0xffffffec
   36f50:	add	r0, r0, #2
   36f54:	ldr	r1, [fp, #-16]
   36f58:	ldr	r1, [r1, #48]	; 0x30
   36f5c:	cmp	r0, r1
   36f60:	ble	36f70 <__assert_fail@plt+0x25adc>
   36f64:	movw	r0, #0
   36f68:	str	r0, [fp, #-4]
   36f6c:	b	374b4 <__assert_fail@plt+0x26020>
   36f70:	ldr	r0, [fp, #-16]
   36f74:	ldr	r0, [r0, #4]
   36f78:	ldr	r1, [fp, #-20]	; 0xffffffec
   36f7c:	add	r1, r1, #1
   36f80:	add	r0, r0, r1
   36f84:	ldrb	r0, [r0]
   36f88:	strb	r0, [sp, #34]	; 0x22
   36f8c:	ldrb	r0, [sp, #35]	; 0x23
   36f90:	cmp	r0, #224	; 0xe0
   36f94:	bge	36fd8 <__assert_fail@plt+0x25b44>
   36f98:	ldrb	r0, [sp, #34]	; 0x22
   36f9c:	cmp	r0, #128	; 0x80
   36fa0:	movw	r0, #1
   36fa4:	str	r0, [sp, #12]
   36fa8:	blt	36fc0 <__assert_fail@plt+0x25b2c>
   36fac:	ldrb	r0, [sp, #34]	; 0x22
   36fb0:	cmp	r0, #191	; 0xbf
   36fb4:	movw	r0, #0
   36fb8:	movgt	r0, #1
   36fbc:	str	r0, [sp, #12]
   36fc0:	ldr	r0, [sp, #12]
   36fc4:	tst	r0, #1
   36fc8:	movw	r0, #0
   36fcc:	moveq	r0, #2
   36fd0:	str	r0, [fp, #-4]
   36fd4:	b	374b4 <__assert_fail@plt+0x26020>
   36fd8:	ldrb	r0, [sp, #35]	; 0x23
   36fdc:	cmp	r0, #240	; 0xf0
   36fe0:	bge	37014 <__assert_fail@plt+0x25b80>
   36fe4:	movw	r0, #3
   36fe8:	str	r0, [fp, #-28]	; 0xffffffe4
   36fec:	ldrb	r0, [sp, #35]	; 0x23
   36ff0:	cmp	r0, #224	; 0xe0
   36ff4:	bne	37010 <__assert_fail@plt+0x25b7c>
   36ff8:	ldrb	r0, [sp, #34]	; 0x22
   36ffc:	cmp	r0, #160	; 0xa0
   37000:	bge	37010 <__assert_fail@plt+0x25b7c>
   37004:	movw	r0, #0
   37008:	str	r0, [fp, #-4]
   3700c:	b	374b4 <__assert_fail@plt+0x26020>
   37010:	b	370e0 <__assert_fail@plt+0x25c4c>
   37014:	ldrb	r0, [sp, #35]	; 0x23
   37018:	cmp	r0, #248	; 0xf8
   3701c:	bge	37050 <__assert_fail@plt+0x25bbc>
   37020:	movw	r0, #4
   37024:	str	r0, [fp, #-28]	; 0xffffffe4
   37028:	ldrb	r0, [sp, #35]	; 0x23
   3702c:	cmp	r0, #240	; 0xf0
   37030:	bne	3704c <__assert_fail@plt+0x25bb8>
   37034:	ldrb	r0, [sp, #34]	; 0x22
   37038:	cmp	r0, #144	; 0x90
   3703c:	bge	3704c <__assert_fail@plt+0x25bb8>
   37040:	movw	r0, #0
   37044:	str	r0, [fp, #-4]
   37048:	b	374b4 <__assert_fail@plt+0x26020>
   3704c:	b	370dc <__assert_fail@plt+0x25c48>
   37050:	ldrb	r0, [sp, #35]	; 0x23
   37054:	cmp	r0, #252	; 0xfc
   37058:	bge	3708c <__assert_fail@plt+0x25bf8>
   3705c:	movw	r0, #5
   37060:	str	r0, [fp, #-28]	; 0xffffffe4
   37064:	ldrb	r0, [sp, #35]	; 0x23
   37068:	cmp	r0, #248	; 0xf8
   3706c:	bne	37088 <__assert_fail@plt+0x25bf4>
   37070:	ldrb	r0, [sp, #34]	; 0x22
   37074:	cmp	r0, #136	; 0x88
   37078:	bge	37088 <__assert_fail@plt+0x25bf4>
   3707c:	movw	r0, #0
   37080:	str	r0, [fp, #-4]
   37084:	b	374b4 <__assert_fail@plt+0x26020>
   37088:	b	370d8 <__assert_fail@plt+0x25c44>
   3708c:	ldrb	r0, [sp, #35]	; 0x23
   37090:	cmp	r0, #254	; 0xfe
   37094:	bge	370c8 <__assert_fail@plt+0x25c34>
   37098:	movw	r0, #6
   3709c:	str	r0, [fp, #-28]	; 0xffffffe4
   370a0:	ldrb	r0, [sp, #35]	; 0x23
   370a4:	cmp	r0, #252	; 0xfc
   370a8:	bne	370c4 <__assert_fail@plt+0x25c30>
   370ac:	ldrb	r0, [sp, #34]	; 0x22
   370b0:	cmp	r0, #132	; 0x84
   370b4:	bge	370c4 <__assert_fail@plt+0x25c30>
   370b8:	movw	r0, #0
   370bc:	str	r0, [fp, #-4]
   370c0:	b	374b4 <__assert_fail@plt+0x26020>
   370c4:	b	370d4 <__assert_fail@plt+0x25c40>
   370c8:	movw	r0, #0
   370cc:	str	r0, [fp, #-4]
   370d0:	b	374b4 <__assert_fail@plt+0x26020>
   370d4:	b	370d8 <__assert_fail@plt+0x25c44>
   370d8:	b	370dc <__assert_fail@plt+0x25c48>
   370dc:	b	370e0 <__assert_fail@plt+0x25c4c>
   370e0:	b	370e4 <__assert_fail@plt+0x25c50>
   370e4:	ldr	r0, [fp, #-20]	; 0xffffffec
   370e8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   370ec:	add	r0, r0, r1
   370f0:	ldr	r1, [fp, #-16]
   370f4:	ldr	r1, [r1, #48]	; 0x30
   370f8:	cmp	r0, r1
   370fc:	ble	3710c <__assert_fail@plt+0x25c78>
   37100:	movw	r0, #0
   37104:	str	r0, [fp, #-4]
   37108:	b	374b4 <__assert_fail@plt+0x26020>
   3710c:	movw	r0, #1
   37110:	str	r0, [sp, #36]	; 0x24
   37114:	ldr	r0, [sp, #36]	; 0x24
   37118:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3711c:	cmp	r0, r1
   37120:	bge	3717c <__assert_fail@plt+0x25ce8>
   37124:	ldr	r0, [fp, #-16]
   37128:	ldr	r0, [r0, #4]
   3712c:	ldr	r1, [fp, #-20]	; 0xffffffec
   37130:	ldr	r2, [sp, #36]	; 0x24
   37134:	add	r1, r1, r2
   37138:	add	r0, r0, r1
   3713c:	ldrb	r0, [r0]
   37140:	strb	r0, [sp, #34]	; 0x22
   37144:	ldrb	r0, [sp, #34]	; 0x22
   37148:	cmp	r0, #128	; 0x80
   3714c:	blt	3715c <__assert_fail@plt+0x25cc8>
   37150:	ldrb	r0, [sp, #34]	; 0x22
   37154:	cmp	r0, #191	; 0xbf
   37158:	ble	37168 <__assert_fail@plt+0x25cd4>
   3715c:	movw	r0, #0
   37160:	str	r0, [fp, #-4]
   37164:	b	374b4 <__assert_fail@plt+0x26020>
   37168:	b	3716c <__assert_fail@plt+0x25cd8>
   3716c:	ldr	r0, [sp, #36]	; 0x24
   37170:	add	r0, r0, #1
   37174:	str	r0, [sp, #36]	; 0x24
   37178:	b	37114 <__assert_fail@plt+0x25c80>
   3717c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   37180:	str	r0, [fp, #-4]
   37184:	b	374b4 <__assert_fail@plt+0x26020>
   37188:	ldr	r0, [fp, #-16]
   3718c:	ldr	r1, [fp, #-20]	; 0xffffffec
   37190:	bl	2e234 <__assert_fail@plt+0x1cda0>
   37194:	str	r0, [fp, #-28]	; 0xffffffe4
   37198:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3719c:	ldr	r0, [r0, #4]
   371a0:	and	r0, r0, #255	; 0xff
   371a4:	cmp	r0, #5
   371a8:	bne	3723c <__assert_fail@plt+0x25da8>
   371ac:	ldr	r0, [fp, #-28]	; 0xffffffe4
   371b0:	cmp	r0, #1
   371b4:	bgt	371c4 <__assert_fail@plt+0x25d30>
   371b8:	movw	r0, #0
   371bc:	str	r0, [fp, #-4]
   371c0:	b	374b4 <__assert_fail@plt+0x26020>
   371c4:	ldr	r0, [fp, #-8]
   371c8:	ldr	r0, [r0, #128]	; 0x80
   371cc:	and	r0, r0, #64	; 0x40
   371d0:	cmp	r0, #0
   371d4:	bne	371f4 <__assert_fail@plt+0x25d60>
   371d8:	ldr	r0, [fp, #-16]
   371dc:	ldr	r0, [r0, #4]
   371e0:	ldr	r1, [fp, #-20]	; 0xffffffec
   371e4:	add	r0, r0, r1
   371e8:	ldrb	r0, [r0]
   371ec:	cmp	r0, #10
   371f0:	beq	37224 <__assert_fail@plt+0x25d90>
   371f4:	ldr	r0, [fp, #-8]
   371f8:	ldr	r0, [r0, #128]	; 0x80
   371fc:	and	r0, r0, #128	; 0x80
   37200:	cmp	r0, #0
   37204:	beq	37230 <__assert_fail@plt+0x25d9c>
   37208:	ldr	r0, [fp, #-16]
   3720c:	ldr	r0, [r0, #4]
   37210:	ldr	r1, [fp, #-20]	; 0xffffffec
   37214:	add	r0, r0, r1
   37218:	ldrb	r0, [r0]
   3721c:	cmp	r0, #0
   37220:	bne	37230 <__assert_fail@plt+0x25d9c>
   37224:	movw	r0, #0
   37228:	str	r0, [fp, #-4]
   3722c:	b	374b4 <__assert_fail@plt+0x26020>
   37230:	ldr	r0, [fp, #-28]	; 0xffffffe4
   37234:	str	r0, [fp, #-4]
   37238:	b	374b4 <__assert_fail@plt+0x26020>
   3723c:	ldr	r0, [fp, #-16]
   37240:	ldr	r1, [fp, #-20]	; 0xffffffec
   37244:	bl	37734 <__assert_fail@plt+0x262a0>
   37248:	str	r0, [fp, #-32]	; 0xffffffe0
   3724c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   37250:	cmp	r0, #1
   37254:	bgt	37264 <__assert_fail@plt+0x25dd0>
   37258:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3725c:	cmp	r0, #1
   37260:	ble	37270 <__assert_fail@plt+0x25ddc>
   37264:	ldr	r0, [fp, #-28]	; 0xffffffe4
   37268:	cmp	r0, #0
   3726c:	bne	3727c <__assert_fail@plt+0x25de8>
   37270:	movw	r0, #0
   37274:	str	r0, [fp, #-4]
   37278:	b	374b4 <__assert_fail@plt+0x26020>
   3727c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37280:	ldr	r0, [r0, #4]
   37284:	and	r0, r0, #255	; 0xff
   37288:	cmp	r0, #6
   3728c:	bne	374ac <__assert_fail@plt+0x26018>
   37290:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37294:	ldr	r0, [r0]
   37298:	str	r0, [sp, #28]
   3729c:	movw	r0, #0
   372a0:	str	r0, [sp, #24]
   372a4:	ldr	r0, [sp, #28]
   372a8:	ldr	r0, [r0, #32]
   372ac:	cmp	r0, #0
   372b0:	bne	372d4 <__assert_fail@plt+0x25e40>
   372b4:	ldr	r0, [sp, #28]
   372b8:	ldr	r0, [r0, #36]	; 0x24
   372bc:	cmp	r0, #0
   372c0:	bne	372d4 <__assert_fail@plt+0x25e40>
   372c4:	ldr	r0, [sp, #28]
   372c8:	ldr	r0, [r0, #20]
   372cc:	cmp	r0, #0
   372d0:	beq	372e8 <__assert_fail@plt+0x25e54>
   372d4:	ldr	r0, [fp, #-16]
   372d8:	ldr	r1, [fp, #-20]	; 0xffffffec
   372dc:	bl	2a314 <__assert_fail@plt+0x18e80>
   372e0:	str	r0, [sp, #8]
   372e4:	b	372f4 <__assert_fail@plt+0x25e60>
   372e8:	movw	r0, #0
   372ec:	str	r0, [sp, #8]
   372f0:	b	372f4 <__assert_fail@plt+0x25e60>
   372f4:	ldr	r0, [sp, #8]
   372f8:	str	r0, [sp, #20]
   372fc:	movw	r0, #0
   37300:	str	r0, [sp, #36]	; 0x24
   37304:	ldr	r0, [sp, #36]	; 0x24
   37308:	ldr	r1, [sp, #28]
   3730c:	ldr	r1, [r1, #20]
   37310:	cmp	r0, r1
   37314:	bge	37358 <__assert_fail@plt+0x25ec4>
   37318:	ldr	r0, [sp, #20]
   3731c:	ldr	r1, [sp, #28]
   37320:	ldr	r1, [r1]
   37324:	ldr	r2, [sp, #36]	; 0x24
   37328:	add	r1, r1, r2, lsl #2
   3732c:	ldr	r1, [r1]
   37330:	cmp	r0, r1
   37334:	bne	37344 <__assert_fail@plt+0x25eb0>
   37338:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3733c:	str	r0, [sp, #24]
   37340:	b	37440 <__assert_fail@plt+0x25fac>
   37344:	b	37348 <__assert_fail@plt+0x25eb4>
   37348:	ldr	r0, [sp, #36]	; 0x24
   3734c:	add	r0, r0, #1
   37350:	str	r0, [sp, #36]	; 0x24
   37354:	b	37304 <__assert_fail@plt+0x25e70>
   37358:	movw	r0, #0
   3735c:	str	r0, [sp, #36]	; 0x24
   37360:	ldr	r0, [sp, #36]	; 0x24
   37364:	ldr	r1, [sp, #28]
   37368:	ldr	r1, [r1, #36]	; 0x24
   3736c:	cmp	r0, r1
   37370:	bge	373c0 <__assert_fail@plt+0x25f2c>
   37374:	ldr	r0, [sp, #28]
   37378:	ldr	r0, [r0, #12]
   3737c:	ldr	r1, [sp, #36]	; 0x24
   37380:	add	r0, r0, r1, lsl #2
   37384:	ldr	r0, [r0]
   37388:	str	r0, [sp, #16]
   3738c:	ldr	r0, [sp, #20]
   37390:	ldr	r1, [sp, #16]
   37394:	bl	111c4 <iswctype@plt>
   37398:	cmp	r0, #0
   3739c:	beq	373ac <__assert_fail@plt+0x25f18>
   373a0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   373a4:	str	r0, [sp, #24]
   373a8:	b	37440 <__assert_fail@plt+0x25fac>
   373ac:	b	373b0 <__assert_fail@plt+0x25f1c>
   373b0:	ldr	r0, [sp, #36]	; 0x24
   373b4:	add	r0, r0, #1
   373b8:	str	r0, [sp, #36]	; 0x24
   373bc:	b	37360 <__assert_fail@plt+0x25ecc>
   373c0:	movw	r0, #0
   373c4:	str	r0, [sp, #36]	; 0x24
   373c8:	ldr	r0, [sp, #36]	; 0x24
   373cc:	ldr	r1, [sp, #28]
   373d0:	ldr	r1, [r1, #32]
   373d4:	cmp	r0, r1
   373d8:	bge	3743c <__assert_fail@plt+0x25fa8>
   373dc:	ldr	r0, [sp, #28]
   373e0:	ldr	r0, [r0, #4]
   373e4:	ldr	r1, [sp, #36]	; 0x24
   373e8:	add	r0, r0, r1, lsl #2
   373ec:	ldr	r0, [r0]
   373f0:	ldr	r1, [sp, #20]
   373f4:	cmp	r0, r1
   373f8:	bhi	37428 <__assert_fail@plt+0x25f94>
   373fc:	ldr	r0, [sp, #20]
   37400:	ldr	r1, [sp, #28]
   37404:	ldr	r1, [r1, #8]
   37408:	ldr	r2, [sp, #36]	; 0x24
   3740c:	add	r1, r1, r2, lsl #2
   37410:	ldr	r1, [r1]
   37414:	cmp	r0, r1
   37418:	bhi	37428 <__assert_fail@plt+0x25f94>
   3741c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   37420:	str	r0, [sp, #24]
   37424:	b	37440 <__assert_fail@plt+0x25fac>
   37428:	b	3742c <__assert_fail@plt+0x25f98>
   3742c:	ldr	r0, [sp, #36]	; 0x24
   37430:	add	r0, r0, #1
   37434:	str	r0, [sp, #36]	; 0x24
   37438:	b	373c8 <__assert_fail@plt+0x25f34>
   3743c:	b	37440 <__assert_fail@plt+0x25fac>
   37440:	ldr	r0, [sp, #28]
   37444:	ldrb	r0, [r0, #16]
   37448:	and	r0, r0, #1
   3744c:	and	r0, r0, #255	; 0xff
   37450:	cmp	r0, #0
   37454:	bne	37464 <__assert_fail@plt+0x25fd0>
   37458:	ldr	r0, [sp, #24]
   3745c:	str	r0, [fp, #-4]
   37460:	b	374b4 <__assert_fail@plt+0x26020>
   37464:	ldr	r0, [sp, #24]
   37468:	cmp	r0, #0
   3746c:	ble	3747c <__assert_fail@plt+0x25fe8>
   37470:	movw	r0, #0
   37474:	str	r0, [fp, #-4]
   37478:	b	374b4 <__assert_fail@plt+0x26020>
   3747c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   37480:	ldr	r1, [fp, #-28]	; 0xffffffe4
   37484:	cmp	r0, r1
   37488:	ble	37498 <__assert_fail@plt+0x26004>
   3748c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   37490:	str	r0, [sp, #4]
   37494:	b	374a0 <__assert_fail@plt+0x2600c>
   37498:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3749c:	str	r0, [sp, #4]
   374a0:	ldr	r0, [sp, #4]
   374a4:	str	r0, [fp, #-4]
   374a8:	b	374b4 <__assert_fail@plt+0x26020>
   374ac:	movw	r0, #0
   374b0:	str	r0, [fp, #-4]
   374b4:	ldr	r0, [fp, #-4]
   374b8:	mov	sp, fp
   374bc:	pop	{fp, pc}
   374c0:	push	{fp, lr}
   374c4:	mov	fp, sp
   374c8:	sub	sp, sp, #32
   374cc:	str	r0, [fp, #-8]
   374d0:	str	r1, [fp, #-12]
   374d4:	str	r2, [sp, #16]
   374d8:	ldr	r0, [fp, #-8]
   374dc:	ldr	r0, [r0, #4]
   374e0:	ldr	r1, [sp, #16]
   374e4:	ldrb	r0, [r0, r1]
   374e8:	strb	r0, [sp, #15]
   374ec:	ldr	r0, [fp, #-12]
   374f0:	ldrb	r0, [r0, #4]
   374f4:	sub	r0, r0, #1
   374f8:	cmp	r0, #6
   374fc:	str	r0, [sp, #4]
   37500:	bhi	37600 <__assert_fail@plt+0x2616c>
   37504:	add	r0, pc, #8
   37508:	ldr	r1, [sp, #4]
   3750c:	ldr	r0, [r0, r1, lsl #2]
   37510:	mov	pc, r0
   37514:	andeq	r7, r3, r0, lsr r5
   37518:	andeq	r7, r3, r0, lsl #12
   3751c:	andeq	r7, r3, r8, asr r5
   37520:	andeq	r7, r3, r0, lsl #12
   37524:	andeq	r7, r3, r4, lsr #11
   37528:	andeq	r7, r3, r0, lsl #12
   3752c:	andeq	r7, r3, r4, lsl #11
   37530:	ldr	r0, [fp, #-12]
   37534:	ldrb	r0, [r0]
   37538:	ldrb	r1, [sp, #15]
   3753c:	cmp	r0, r1
   37540:	beq	37554 <__assert_fail@plt+0x260c0>
   37544:	movw	r0, #0
   37548:	and	r0, r0, #1
   3754c:	strb	r0, [fp, #-1]
   37550:	b	37724 <__assert_fail@plt+0x26290>
   37554:	b	37610 <__assert_fail@plt+0x2617c>
   37558:	ldr	r0, [fp, #-12]
   3755c:	ldr	r0, [r0]
   37560:	ldrb	r1, [sp, #15]
   37564:	bl	33afc <__assert_fail@plt+0x22668>
   37568:	tst	r0, #1
   3756c:	bne	37580 <__assert_fail@plt+0x260ec>
   37570:	movw	r0, #0
   37574:	and	r0, r0, #1
   37578:	strb	r0, [fp, #-1]
   3757c:	b	37724 <__assert_fail@plt+0x26290>
   37580:	b	37610 <__assert_fail@plt+0x2617c>
   37584:	ldrb	r0, [sp, #15]
   37588:	cmp	r0, #128	; 0x80
   3758c:	blt	375a0 <__assert_fail@plt+0x2610c>
   37590:	movw	r0, #0
   37594:	and	r0, r0, #1
   37598:	strb	r0, [fp, #-1]
   3759c:	b	37724 <__assert_fail@plt+0x26290>
   375a0:	b	375a4 <__assert_fail@plt+0x26110>
   375a4:	ldrb	r0, [sp, #15]
   375a8:	cmp	r0, #10
   375ac:	bne	375c8 <__assert_fail@plt+0x26134>
   375b0:	ldr	r0, [fp, #-8]
   375b4:	ldr	r0, [r0, #84]	; 0x54
   375b8:	ldr	r0, [r0, #128]	; 0x80
   375bc:	and	r0, r0, #64	; 0x40
   375c0:	cmp	r0, #0
   375c4:	beq	375ec <__assert_fail@plt+0x26158>
   375c8:	ldrb	r0, [sp, #15]
   375cc:	cmp	r0, #0
   375d0:	bne	375fc <__assert_fail@plt+0x26168>
   375d4:	ldr	r0, [fp, #-8]
   375d8:	ldr	r0, [r0, #84]	; 0x54
   375dc:	ldr	r0, [r0, #128]	; 0x80
   375e0:	and	r0, r0, #128	; 0x80
   375e4:	cmp	r0, #0
   375e8:	beq	375fc <__assert_fail@plt+0x26168>
   375ec:	movw	r0, #0
   375f0:	and	r0, r0, #1
   375f4:	strb	r0, [fp, #-1]
   375f8:	b	37724 <__assert_fail@plt+0x26290>
   375fc:	b	37610 <__assert_fail@plt+0x2617c>
   37600:	movw	r0, #0
   37604:	and	r0, r0, #1
   37608:	strb	r0, [fp, #-1]
   3760c:	b	37724 <__assert_fail@plt+0x26290>
   37610:	ldr	r0, [fp, #-12]
   37614:	ldr	r0, [r0, #4]
   37618:	lsr	r0, r0, #8
   3761c:	movw	r1, #1023	; 0x3ff
   37620:	and	r0, r0, r1
   37624:	cmp	r0, #0
   37628:	beq	37718 <__assert_fail@plt+0x26284>
   3762c:	ldr	r0, [fp, #-8]
   37630:	ldr	r1, [sp, #16]
   37634:	ldr	r2, [fp, #-8]
   37638:	ldr	r2, [r2, #88]	; 0x58
   3763c:	bl	3378c <__assert_fail@plt+0x222f8>
   37640:	str	r0, [sp, #8]
   37644:	ldr	r0, [fp, #-12]
   37648:	ldr	r0, [r0, #4]
   3764c:	lsr	r0, r0, #8
   37650:	movw	r1, #1023	; 0x3ff
   37654:	and	r0, r0, r1
   37658:	and	r0, r0, #4
   3765c:	cmp	r0, #0
   37660:	beq	37674 <__assert_fail@plt+0x261e0>
   37664:	ldr	r0, [sp, #8]
   37668:	and	r0, r0, #1
   3766c:	cmp	r0, #0
   37670:	beq	37704 <__assert_fail@plt+0x26270>
   37674:	ldr	r0, [fp, #-12]
   37678:	ldr	r0, [r0, #4]
   3767c:	lsr	r0, r0, #8
   37680:	movw	r1, #1023	; 0x3ff
   37684:	and	r0, r0, r1
   37688:	and	r0, r0, #8
   3768c:	cmp	r0, #0
   37690:	beq	376a4 <__assert_fail@plt+0x26210>
   37694:	ldr	r0, [sp, #8]
   37698:	and	r0, r0, #1
   3769c:	cmp	r0, #0
   376a0:	bne	37704 <__assert_fail@plt+0x26270>
   376a4:	ldr	r0, [fp, #-12]
   376a8:	ldr	r0, [r0, #4]
   376ac:	lsr	r0, r0, #8
   376b0:	movw	r1, #1023	; 0x3ff
   376b4:	and	r0, r0, r1
   376b8:	and	r0, r0, #32
   376bc:	cmp	r0, #0
   376c0:	beq	376d4 <__assert_fail@plt+0x26240>
   376c4:	ldr	r0, [sp, #8]
   376c8:	and	r0, r0, #2
   376cc:	cmp	r0, #0
   376d0:	beq	37704 <__assert_fail@plt+0x26270>
   376d4:	ldr	r0, [fp, #-12]
   376d8:	ldr	r0, [r0, #4]
   376dc:	lsr	r0, r0, #8
   376e0:	movw	r1, #1023	; 0x3ff
   376e4:	and	r0, r0, r1
   376e8:	and	r0, r0, #128	; 0x80
   376ec:	cmp	r0, #0
   376f0:	beq	37714 <__assert_fail@plt+0x26280>
   376f4:	ldr	r0, [sp, #8]
   376f8:	and	r0, r0, #8
   376fc:	cmp	r0, #0
   37700:	bne	37714 <__assert_fail@plt+0x26280>
   37704:	movw	r0, #0
   37708:	and	r0, r0, #1
   3770c:	strb	r0, [fp, #-1]
   37710:	b	37724 <__assert_fail@plt+0x26290>
   37714:	b	37718 <__assert_fail@plt+0x26284>
   37718:	movw	r0, #1
   3771c:	and	r0, r0, #1
   37720:	strb	r0, [fp, #-1]
   37724:	ldrb	r0, [fp, #-1]
   37728:	and	r0, r0, #1
   3772c:	mov	sp, fp
   37730:	pop	{fp, pc}
   37734:	sub	sp, sp, #8
   37738:	str	r0, [sp, #4]
   3773c:	str	r1, [sp]
   37740:	movw	r0, #1
   37744:	add	sp, sp, #8
   37748:	bx	lr
   3774c:	push	{fp, lr}
   37750:	mov	fp, sp
   37754:	sub	sp, sp, #72	; 0x48
   37758:	str	r0, [fp, #-8]
   3775c:	str	r1, [fp, #-12]
   37760:	ldr	r0, [fp, #-8]
   37764:	ldr	r0, [r0, #84]	; 0x54
   37768:	str	r0, [fp, #-16]
   3776c:	movw	r0, #0
   37770:	str	r0, [fp, #-24]	; 0xffffffe8
   37774:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37778:	ldr	r1, [fp, #-12]
   3777c:	ldr	r1, [r1, #8]
   37780:	cmp	r0, r1
   37784:	bge	37b14 <__assert_fail@plt+0x26680>
   37788:	ldr	r0, [fp, #-12]
   3778c:	ldr	r0, [r0, #12]
   37790:	ldr	r1, [fp, #-24]	; 0xffffffe8
   37794:	ldr	r0, [r0, r1, lsl #2]
   37798:	str	r0, [sp, #28]
   3779c:	ldr	r0, [fp, #-16]
   377a0:	ldr	r0, [r0]
   377a4:	ldr	r1, [sp, #28]
   377a8:	add	r0, r0, r1, lsl #3
   377ac:	ldr	r0, [r0, #4]
   377b0:	lsr	r0, r0, #20
   377b4:	and	r0, r0, #1
   377b8:	cmp	r0, #0
   377bc:	bne	377c4 <__assert_fail@plt+0x26330>
   377c0:	b	37b04 <__assert_fail@plt+0x26670>
   377c4:	ldr	r0, [fp, #-16]
   377c8:	ldr	r0, [r0]
   377cc:	ldr	r1, [sp, #28]
   377d0:	add	r0, r0, r1, lsl #3
   377d4:	ldr	r0, [r0, #4]
   377d8:	lsr	r0, r0, #8
   377dc:	movw	r1, #1023	; 0x3ff
   377e0:	and	r0, r0, r1
   377e4:	cmp	r0, #0
   377e8:	beq	378f8 <__assert_fail@plt+0x26464>
   377ec:	ldr	r0, [fp, #-8]
   377f0:	ldr	r1, [r0, #40]	; 0x28
   377f4:	ldr	r2, [r0, #88]	; 0x58
   377f8:	bl	3378c <__assert_fail@plt+0x222f8>
   377fc:	str	r0, [sp, #16]
   37800:	ldr	r0, [fp, #-16]
   37804:	ldr	r0, [r0]
   37808:	ldr	r1, [sp, #28]
   3780c:	add	r0, r0, r1, lsl #3
   37810:	ldr	r0, [r0, #4]
   37814:	lsr	r0, r0, #8
   37818:	movw	r1, #1023	; 0x3ff
   3781c:	and	r0, r0, r1
   37820:	and	r0, r0, #4
   37824:	cmp	r0, #0
   37828:	beq	3783c <__assert_fail@plt+0x263a8>
   3782c:	ldr	r0, [sp, #16]
   37830:	and	r0, r0, #1
   37834:	cmp	r0, #0
   37838:	beq	378f0 <__assert_fail@plt+0x2645c>
   3783c:	ldr	r0, [fp, #-16]
   37840:	ldr	r0, [r0]
   37844:	ldr	r1, [sp, #28]
   37848:	add	r0, r0, r1, lsl #3
   3784c:	ldr	r0, [r0, #4]
   37850:	lsr	r0, r0, #8
   37854:	movw	r1, #1023	; 0x3ff
   37858:	and	r0, r0, r1
   3785c:	and	r0, r0, #8
   37860:	cmp	r0, #0
   37864:	beq	37878 <__assert_fail@plt+0x263e4>
   37868:	ldr	r0, [sp, #16]
   3786c:	and	r0, r0, #1
   37870:	cmp	r0, #0
   37874:	bne	378f0 <__assert_fail@plt+0x2645c>
   37878:	ldr	r0, [fp, #-16]
   3787c:	ldr	r0, [r0]
   37880:	ldr	r1, [sp, #28]
   37884:	add	r0, r0, r1, lsl #3
   37888:	ldr	r0, [r0, #4]
   3788c:	lsr	r0, r0, #8
   37890:	movw	r1, #1023	; 0x3ff
   37894:	and	r0, r0, r1
   37898:	and	r0, r0, #32
   3789c:	cmp	r0, #0
   378a0:	beq	378b4 <__assert_fail@plt+0x26420>
   378a4:	ldr	r0, [sp, #16]
   378a8:	and	r0, r0, #2
   378ac:	cmp	r0, #0
   378b0:	beq	378f0 <__assert_fail@plt+0x2645c>
   378b4:	ldr	r0, [fp, #-16]
   378b8:	ldr	r0, [r0]
   378bc:	ldr	r1, [sp, #28]
   378c0:	add	r0, r0, r1, lsl #3
   378c4:	ldr	r0, [r0, #4]
   378c8:	lsr	r0, r0, #8
   378cc:	movw	r1, #1023	; 0x3ff
   378d0:	and	r0, r0, r1
   378d4:	and	r0, r0, #128	; 0x80
   378d8:	cmp	r0, #0
   378dc:	beq	378f4 <__assert_fail@plt+0x26460>
   378e0:	ldr	r0, [sp, #16]
   378e4:	and	r0, r0, #8
   378e8:	cmp	r0, #0
   378ec:	bne	378f4 <__assert_fail@plt+0x26460>
   378f0:	b	37b04 <__assert_fail@plt+0x26670>
   378f4:	b	378f8 <__assert_fail@plt+0x26464>
   378f8:	ldr	r0, [fp, #-16]
   378fc:	ldr	r1, [sp, #28]
   37900:	ldr	r2, [fp, #-8]
   37904:	ldr	r3, [fp, #-8]
   37908:	ldr	r3, [r3, #40]	; 0x28
   3790c:	bl	36ed8 <__assert_fail@plt+0x25a44>
   37910:	str	r0, [sp, #24]
   37914:	ldr	r0, [sp, #24]
   37918:	cmp	r0, #0
   3791c:	bne	37924 <__assert_fail@plt+0x26490>
   37920:	b	37b04 <__assert_fail@plt+0x26670>
   37924:	ldr	r0, [fp, #-8]
   37928:	ldr	r0, [r0, #40]	; 0x28
   3792c:	ldr	r1, [sp, #24]
   37930:	add	r0, r0, r1
   37934:	str	r0, [sp, #20]
   37938:	ldr	r0, [fp, #-8]
   3793c:	ldr	r0, [r0, #120]	; 0x78
   37940:	ldr	r1, [sp, #24]
   37944:	cmp	r0, r1
   37948:	bge	37958 <__assert_fail@plt+0x264c4>
   3794c:	ldr	r0, [sp, #24]
   37950:	str	r0, [sp, #8]
   37954:	b	37964 <__assert_fail@plt+0x264d0>
   37958:	ldr	r0, [fp, #-8]
   3795c:	ldr	r0, [r0, #120]	; 0x78
   37960:	str	r0, [sp, #8]
   37964:	ldr	r0, [sp, #8]
   37968:	ldr	r1, [fp, #-8]
   3796c:	str	r0, [r1, #120]	; 0x78
   37970:	ldr	r0, [fp, #-8]
   37974:	ldr	r1, [sp, #20]
   37978:	bl	353bc <__assert_fail@plt+0x23f28>
   3797c:	str	r0, [fp, #-20]	; 0xffffffec
   37980:	ldr	r0, [fp, #-20]	; 0xffffffec
   37984:	cmp	r0, #0
   37988:	beq	37998 <__assert_fail@plt+0x26504>
   3798c:	ldr	r0, [fp, #-20]	; 0xffffffec
   37990:	str	r0, [fp, #-4]
   37994:	b	37b1c <__assert_fail@plt+0x26688>
   37998:	ldr	r0, [fp, #-16]
   3799c:	ldr	r0, [r0, #12]
   379a0:	ldr	r1, [sp, #28]
   379a4:	add	r0, r0, r1, lsl #2
   379a8:	ldr	r0, [r0]
   379ac:	cmn	r0, #1
   379b0:	beq	379b8 <__assert_fail@plt+0x26524>
   379b4:	b	379b8 <__assert_fail@plt+0x26524>
   379b8:	ldr	r0, [fp, #-16]
   379bc:	ldr	r1, [r0, #12]
   379c0:	ldr	r0, [r0, #24]
   379c4:	ldr	r2, [sp, #28]
   379c8:	ldr	r1, [r1, r2, lsl #2]
   379cc:	add	r1, r1, r1, lsl #1
   379d0:	add	r0, r0, r1, lsl #2
   379d4:	str	r0, [sp, #32]
   379d8:	ldr	r0, [fp, #-8]
   379dc:	ldr	r0, [r0, #100]	; 0x64
   379e0:	ldr	r1, [sp, #20]
   379e4:	add	r0, r0, r1, lsl #2
   379e8:	ldr	r0, [r0]
   379ec:	str	r0, [sp, #12]
   379f0:	ldr	r0, [sp, #12]
   379f4:	movw	r1, #0
   379f8:	cmp	r0, r1
   379fc:	bne	37a20 <__assert_fail@plt+0x2658c>
   37a00:	ldr	r0, [sp, #32]
   37a04:	ldr	r1, [r0]
   37a08:	str	r1, [sp, #36]	; 0x24
   37a0c:	ldr	r1, [r0, #4]
   37a10:	str	r1, [sp, #40]	; 0x28
   37a14:	ldr	r0, [r0, #8]
   37a18:	str	r0, [sp, #44]	; 0x2c
   37a1c:	b	37a54 <__assert_fail@plt+0x265c0>
   37a20:	ldr	r0, [sp, #12]
   37a24:	ldr	r1, [r0, #40]	; 0x28
   37a28:	ldr	r2, [sp, #32]
   37a2c:	add	r0, sp, #36	; 0x24
   37a30:	bl	34f88 <__assert_fail@plt+0x23af4>
   37a34:	str	r0, [fp, #-20]	; 0xffffffec
   37a38:	ldr	r0, [fp, #-20]	; 0xffffffec
   37a3c:	cmp	r0, #0
   37a40:	beq	37a50 <__assert_fail@plt+0x265bc>
   37a44:	ldr	r0, [fp, #-20]	; 0xffffffec
   37a48:	str	r0, [fp, #-4]
   37a4c:	b	37b1c <__assert_fail@plt+0x26688>
   37a50:	b	37a54 <__assert_fail@plt+0x265c0>
   37a54:	ldr	r0, [fp, #-8]
   37a58:	ldr	r1, [sp, #20]
   37a5c:	sub	r1, r1, #1
   37a60:	ldr	r2, [r0, #88]	; 0x58
   37a64:	bl	3378c <__assert_fail@plt+0x222f8>
   37a68:	str	r0, [sp, #16]
   37a6c:	ldr	r1, [fp, #-16]
   37a70:	ldr	r3, [sp, #16]
   37a74:	sub	r0, fp, #20
   37a78:	add	r2, sp, #36	; 0x24
   37a7c:	bl	30f3c <__assert_fail@plt+0x1faa8>
   37a80:	ldr	r1, [fp, #-8]
   37a84:	ldr	r1, [r1, #100]	; 0x64
   37a88:	ldr	r2, [sp, #20]
   37a8c:	add	r1, r1, r2, lsl #2
   37a90:	str	r0, [r1]
   37a94:	ldr	r0, [sp, #12]
   37a98:	movw	r1, #0
   37a9c:	cmp	r0, r1
   37aa0:	beq	37aac <__assert_fail@plt+0x26618>
   37aa4:	ldr	r0, [sp, #44]	; 0x2c
   37aa8:	bl	138a4 <__assert_fail@plt+0x2410>
   37aac:	ldr	r0, [fp, #-8]
   37ab0:	ldr	r0, [r0, #100]	; 0x64
   37ab4:	ldr	r1, [sp, #20]
   37ab8:	add	r0, r0, r1, lsl #2
   37abc:	ldr	r0, [r0]
   37ac0:	movw	r1, #0
   37ac4:	cmp	r0, r1
   37ac8:	movw	r0, #0
   37acc:	str	r0, [sp, #4]
   37ad0:	bne	37ae8 <__assert_fail@plt+0x26654>
   37ad4:	ldr	r0, [fp, #-20]	; 0xffffffec
   37ad8:	cmp	r0, #0
   37adc:	movw	r0, #0
   37ae0:	movne	r0, #1
   37ae4:	str	r0, [sp, #4]
   37ae8:	ldr	r0, [sp, #4]
   37aec:	tst	r0, #1
   37af0:	beq	37b00 <__assert_fail@plt+0x2666c>
   37af4:	ldr	r0, [fp, #-20]	; 0xffffffec
   37af8:	str	r0, [fp, #-4]
   37afc:	b	37b1c <__assert_fail@plt+0x26688>
   37b00:	b	37b04 <__assert_fail@plt+0x26670>
   37b04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37b08:	add	r0, r0, #1
   37b0c:	str	r0, [fp, #-24]	; 0xffffffe8
   37b10:	b	37774 <__assert_fail@plt+0x262e0>
   37b14:	movw	r0, #0
   37b18:	str	r0, [fp, #-4]
   37b1c:	ldr	r0, [fp, #-4]
   37b20:	mov	sp, fp
   37b24:	pop	{fp, pc}
   37b28:	push	{r4, r5, fp, lr}
   37b2c:	add	fp, sp, #8
   37b30:	sub	sp, sp, #2160	; 0x870
   37b34:	sub	sp, sp, #12288	; 0x3000
   37b38:	add	r3, sp, #20
   37b3c:	sub	lr, fp, #6144	; 0x1800
   37b40:	sub	r2, lr, #100	; 0x64
   37b44:	str	r0, [fp, #-16]
   37b48:	str	r1, [fp, #-20]	; 0xffffffec
   37b4c:	movw	r0, #0
   37b50:	strb	r0, [fp, #-37]	; 0xffffffdb
   37b54:	ldr	r0, [fp, #-20]	; 0xffffffec
   37b58:	movw	r1, #0
   37b5c:	str	r1, [r0, #44]	; 0x2c
   37b60:	ldr	r0, [fp, #-20]	; 0xffffffec
   37b64:	str	r1, [r0, #48]	; 0x30
   37b68:	ldr	r0, [fp, #-16]
   37b6c:	ldr	r1, [fp, #-20]	; 0xffffffec
   37b70:	bl	38350 <__assert_fail@plt+0x26ebc>
   37b74:	str	r0, [fp, #-52]	; 0xffffffcc
   37b78:	ldr	r0, [fp, #-52]	; 0xffffffcc
   37b7c:	cmp	r0, #0
   37b80:	bgt	37be8 <__assert_fail@plt+0x26754>
   37b84:	ldr	r0, [fp, #-52]	; 0xffffffcc
   37b88:	cmp	r0, #0
   37b8c:	bne	37bd8 <__assert_fail@plt+0x26744>
   37b90:	movw	r0, #4
   37b94:	movw	r1, #256	; 0x100
   37b98:	bl	3fb3c <__assert_fail@plt+0x2e6a8>
   37b9c:	ldr	r1, [fp, #-20]	; 0xffffffec
   37ba0:	str	r0, [r1, #44]	; 0x2c
   37ba4:	ldr	r0, [fp, #-20]	; 0xffffffec
   37ba8:	ldr	r0, [r0, #44]	; 0x2c
   37bac:	movw	r1, #0
   37bb0:	cmp	r0, r1
   37bb4:	bne	37bc8 <__assert_fail@plt+0x26734>
   37bb8:	movw	r0, #0
   37bbc:	and	r0, r0, #1
   37bc0:	strb	r0, [fp, #-9]
   37bc4:	b	38340 <__assert_fail@plt+0x26eac>
   37bc8:	movw	r0, #1
   37bcc:	and	r0, r0, #1
   37bd0:	strb	r0, [fp, #-9]
   37bd4:	b	38340 <__assert_fail@plt+0x26eac>
   37bd8:	movw	r0, #0
   37bdc:	and	r0, r0, #1
   37be0:	strb	r0, [fp, #-9]
   37be4:	b	38340 <__assert_fail@plt+0x26eac>
   37be8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   37bec:	add	r1, r0, #1
   37bf0:	sub	lr, fp, #3072	; 0xc00
   37bf4:	sub	r0, lr, #68	; 0x44
   37bf8:	bl	2ff28 <__assert_fail@plt+0x1ea94>
   37bfc:	str	r0, [fp, #-24]	; 0xffffffe8
   37c00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37c04:	cmp	r0, #0
   37c08:	beq	37c70 <__assert_fail@plt+0x267dc>
   37c0c:	b	37c10 <__assert_fail@plt+0x2677c>
   37c10:	ldr	r0, [fp, #-3132]	; 0xfffff3c4
   37c14:	bl	138a4 <__assert_fail@plt+0x2410>
   37c18:	movw	r0, #0
   37c1c:	str	r0, [fp, #-28]	; 0xffffffe4
   37c20:	ldr	r0, [fp, #-28]	; 0xffffffe4
   37c24:	ldr	r1, [fp, #-52]	; 0xffffffcc
   37c28:	cmp	r0, r1
   37c2c:	bge	37c60 <__assert_fail@plt+0x267cc>
   37c30:	sub	lr, fp, #6144	; 0x1800
   37c34:	sub	r0, lr, #100	; 0x64
   37c38:	ldr	r1, [fp, #-28]	; 0xffffffe4
   37c3c:	movw	r2, #12
   37c40:	mul	r1, r1, r2
   37c44:	add	r0, r0, r1
   37c48:	ldr	r0, [r0, #8]
   37c4c:	bl	138a4 <__assert_fail@plt+0x2410>
   37c50:	ldr	r0, [fp, #-28]	; 0xffffffe4
   37c54:	add	r0, r0, #1
   37c58:	str	r0, [fp, #-28]	; 0xffffffe4
   37c5c:	b	37c20 <__assert_fail@plt+0x2678c>
   37c60:	movw	r0, #0
   37c64:	and	r0, r0, #1
   37c68:	strb	r0, [fp, #-9]
   37c6c:	b	38340 <__assert_fail@plt+0x26eac>
   37c70:	sub	lr, fp, #3072	; 0xc00
   37c74:	sub	r0, lr, #100	; 0x64
   37c78:	bl	38b30 <__assert_fail@plt+0x2769c>
   37c7c:	movw	r0, #0
   37c80:	str	r0, [fp, #-28]	; 0xffffffe4
   37c84:	ldr	r0, [fp, #-28]	; 0xffffffe4
   37c88:	ldr	r1, [fp, #-52]	; 0xffffffcc
   37c8c:	cmp	r0, r1
   37c90:	bge	37f60 <__assert_fail@plt+0x26acc>
   37c94:	movw	r0, #0
   37c98:	str	r0, [fp, #-3136]	; 0xfffff3c0
   37c9c:	str	r0, [fp, #-32]	; 0xffffffe0
   37ca0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   37ca4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   37ca8:	movw	r2, #12
   37cac:	mul	r1, r1, r2
   37cb0:	sub	lr, fp, #6144	; 0x1800
   37cb4:	sub	r2, lr, #100	; 0x64
   37cb8:	add	r1, r2, r1
   37cbc:	ldr	r1, [r1, #4]
   37cc0:	cmp	r0, r1
   37cc4:	bge	37d58 <__assert_fail@plt+0x268c4>
   37cc8:	ldr	r0, [fp, #-16]
   37ccc:	ldr	r0, [r0, #12]
   37cd0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   37cd4:	add	r1, r1, r1, lsl #1
   37cd8:	sub	lr, fp, #6144	; 0x1800
   37cdc:	sub	r2, lr, #100	; 0x64
   37ce0:	add	r1, r2, r1, lsl #2
   37ce4:	ldr	r1, [r1, #8]
   37ce8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   37cec:	ldr	r1, [r1, r2, lsl #2]
   37cf0:	add	r0, r0, r1, lsl #2
   37cf4:	ldr	r0, [r0]
   37cf8:	str	r0, [sp, #16]
   37cfc:	ldr	r0, [sp, #16]
   37d00:	cmn	r0, #1
   37d04:	beq	37d44 <__assert_fail@plt+0x268b0>
   37d08:	ldr	r0, [fp, #-16]
   37d0c:	ldr	r0, [r0, #24]
   37d10:	ldr	r1, [sp, #16]
   37d14:	movw	r2, #12
   37d18:	mul	r1, r1, r2
   37d1c:	add	r1, r0, r1
   37d20:	sub	lr, fp, #3072	; 0xc00
   37d24:	sub	r0, lr, #68	; 0x44
   37d28:	bl	304a4 <__assert_fail@plt+0x1f010>
   37d2c:	str	r0, [fp, #-24]	; 0xffffffe8
   37d30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37d34:	cmp	r0, #0
   37d38:	beq	37d40 <__assert_fail@plt+0x268ac>
   37d3c:	b	37c10 <__assert_fail@plt+0x2677c>
   37d40:	b	37d44 <__assert_fail@plt+0x268b0>
   37d44:	b	37d48 <__assert_fail@plt+0x268b4>
   37d48:	ldr	r0, [fp, #-32]	; 0xffffffe0
   37d4c:	add	r0, r0, #1
   37d50:	str	r0, [fp, #-32]	; 0xffffffe0
   37d54:	b	37ca0 <__assert_fail@plt+0x2680c>
   37d58:	ldr	r1, [fp, #-16]
   37d5c:	sub	r0, fp, #24
   37d60:	sub	lr, fp, #3072	; 0xc00
   37d64:	sub	r2, lr, #68	; 0x44
   37d68:	mov	r3, #0
   37d6c:	bl	30f3c <__assert_fail@plt+0x1faa8>
   37d70:	ldr	r1, [fp, #-28]	; 0xffffffe4
   37d74:	sub	lr, fp, #1024	; 0x400
   37d78:	sub	r2, lr, #56	; 0x38
   37d7c:	str	r0, [r2, r1, lsl #2]
   37d80:	ldr	r0, [fp, #-28]	; 0xffffffe4
   37d84:	add	r0, r2, r0, lsl #2
   37d88:	ldr	r0, [r0]
   37d8c:	movw	r1, #0
   37d90:	cmp	r0, r1
   37d94:	movw	r0, #0
   37d98:	str	r0, [sp, #12]
   37d9c:	bne	37db4 <__assert_fail@plt+0x26920>
   37da0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37da4:	cmp	r0, #0
   37da8:	movw	r0, #0
   37dac:	movne	r0, #1
   37db0:	str	r0, [sp, #12]
   37db4:	ldr	r0, [sp, #12]
   37db8:	tst	r0, #1
   37dbc:	beq	37dc4 <__assert_fail@plt+0x26930>
   37dc0:	b	37c10 <__assert_fail@plt+0x2677c>
   37dc4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   37dc8:	sub	lr, fp, #1024	; 0x400
   37dcc:	sub	r1, lr, #56	; 0x38
   37dd0:	ldr	r0, [r1, r0, lsl #2]
   37dd4:	ldrb	r0, [r0, #52]	; 0x34
   37dd8:	lsr	r0, r0, #7
   37ddc:	and	r0, r0, #255	; 0xff
   37de0:	cmp	r0, #0
   37de4:	beq	37f04 <__assert_fail@plt+0x26a70>
   37de8:	ldr	r1, [fp, #-16]
   37dec:	sub	r0, fp, #24
   37df0:	sub	lr, fp, #3072	; 0xc00
   37df4:	sub	r2, lr, #68	; 0x44
   37df8:	mov	r3, #1
   37dfc:	bl	30f3c <__assert_fail@plt+0x1faa8>
   37e00:	ldr	r1, [fp, #-28]	; 0xffffffe4
   37e04:	sub	lr, fp, #2048	; 0x800
   37e08:	sub	r2, lr, #56	; 0x38
   37e0c:	str	r0, [r2, r1, lsl #2]
   37e10:	ldr	r0, [fp, #-28]	; 0xffffffe4
   37e14:	add	r0, r2, r0, lsl #2
   37e18:	ldr	r0, [r0]
   37e1c:	movw	r1, #0
   37e20:	cmp	r0, r1
   37e24:	movw	r0, #0
   37e28:	str	r0, [sp, #8]
   37e2c:	bne	37e44 <__assert_fail@plt+0x269b0>
   37e30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37e34:	cmp	r0, #0
   37e38:	movw	r0, #0
   37e3c:	movne	r0, #1
   37e40:	str	r0, [sp, #8]
   37e44:	ldr	r0, [sp, #8]
   37e48:	tst	r0, #1
   37e4c:	beq	37e54 <__assert_fail@plt+0x269c0>
   37e50:	b	37c10 <__assert_fail@plt+0x2677c>
   37e54:	ldr	r0, [fp, #-28]	; 0xffffffe4
   37e58:	sub	lr, fp, #1024	; 0x400
   37e5c:	sub	r1, lr, #56	; 0x38
   37e60:	ldr	r1, [r1, r0, lsl #2]
   37e64:	sub	lr, fp, #2048	; 0x800
   37e68:	sub	r2, lr, #56	; 0x38
   37e6c:	add	r0, r2, r0, lsl #2
   37e70:	ldr	r0, [r0]
   37e74:	cmp	r1, r0
   37e78:	beq	37e94 <__assert_fail@plt+0x26a00>
   37e7c:	ldr	r0, [fp, #-16]
   37e80:	ldr	r0, [r0, #92]	; 0x5c
   37e84:	cmp	r0, #1
   37e88:	ble	37e94 <__assert_fail@plt+0x26a00>
   37e8c:	movw	r0, #1
   37e90:	strb	r0, [fp, #-37]	; 0xffffffdb
   37e94:	ldr	r1, [fp, #-16]
   37e98:	sub	r0, fp, #24
   37e9c:	sub	lr, fp, #3072	; 0xc00
   37ea0:	sub	r2, lr, #68	; 0x44
   37ea4:	mov	r3, #2
   37ea8:	bl	30f3c <__assert_fail@plt+0x1faa8>
   37eac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   37eb0:	sub	lr, fp, #3072	; 0xc00
   37eb4:	sub	r2, lr, #56	; 0x38
   37eb8:	str	r0, [r2, r1, lsl #2]
   37ebc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   37ec0:	add	r0, r2, r0, lsl #2
   37ec4:	ldr	r0, [r0]
   37ec8:	movw	r1, #0
   37ecc:	cmp	r0, r1
   37ed0:	movw	r0, #0
   37ed4:	str	r0, [sp, #4]
   37ed8:	bne	37ef0 <__assert_fail@plt+0x26a5c>
   37edc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37ee0:	cmp	r0, #0
   37ee4:	movw	r0, #0
   37ee8:	movne	r0, #1
   37eec:	str	r0, [sp, #4]
   37ef0:	ldr	r0, [sp, #4]
   37ef4:	tst	r0, #1
   37ef8:	beq	37f00 <__assert_fail@plt+0x26a6c>
   37efc:	b	37c10 <__assert_fail@plt+0x2677c>
   37f00:	b	37f38 <__assert_fail@plt+0x26aa4>
   37f04:	ldr	r0, [fp, #-28]	; 0xffffffe4
   37f08:	sub	lr, fp, #1024	; 0x400
   37f0c:	sub	r1, lr, #56	; 0x38
   37f10:	ldr	r2, [r1, r0, lsl #2]
   37f14:	sub	lr, fp, #2048	; 0x800
   37f18:	sub	r3, lr, #56	; 0x38
   37f1c:	str	r2, [r3, r0, lsl #2]
   37f20:	ldr	r0, [fp, #-28]	; 0xffffffe4
   37f24:	ldr	r1, [r1, r0, lsl #2]
   37f28:	sub	lr, fp, #3072	; 0xc00
   37f2c:	sub	r2, lr, #56	; 0x38
   37f30:	add	r0, r2, r0, lsl #2
   37f34:	str	r1, [r0]
   37f38:	sub	lr, fp, #3072	; 0xc00
   37f3c:	sub	r0, lr, #100	; 0x64
   37f40:	ldr	r1, [fp, #-28]	; 0xffffffe4
   37f44:	add	r2, sp, #20
   37f48:	add	r1, r2, r1, lsl #5
   37f4c:	bl	38b5c <__assert_fail@plt+0x276c8>
   37f50:	ldr	r0, [fp, #-28]	; 0xffffffe4
   37f54:	add	r0, r0, #1
   37f58:	str	r0, [fp, #-28]	; 0xffffffe4
   37f5c:	b	37c84 <__assert_fail@plt+0x267f0>
   37f60:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   37f64:	tst	r0, #1
   37f68:	bne	380e8 <__assert_fail@plt+0x26c54>
   37f6c:	movw	r0, #4
   37f70:	movw	r1, #256	; 0x100
   37f74:	bl	3fb3c <__assert_fail@plt+0x2e6a8>
   37f78:	ldr	r1, [fp, #-20]	; 0xffffffec
   37f7c:	str	r0, [r1, #44]	; 0x2c
   37f80:	str	r0, [fp, #-56]	; 0xffffffc8
   37f84:	ldr	r0, [fp, #-56]	; 0xffffffc8
   37f88:	movw	r1, #0
   37f8c:	cmp	r0, r1
   37f90:	bne	37f98 <__assert_fail@plt+0x26b04>
   37f94:	b	37c10 <__assert_fail@plt+0x2677c>
   37f98:	movw	r0, #0
   37f9c:	str	r0, [fp, #-28]	; 0xffffffe4
   37fa0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   37fa4:	cmp	r0, #8
   37fa8:	bge	380e4 <__assert_fail@plt+0x26c50>
   37fac:	ldr	r0, [fp, #-28]	; 0xffffffe4
   37fb0:	lsl	r0, r0, #5
   37fb4:	str	r0, [fp, #-36]	; 0xffffffdc
   37fb8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   37fbc:	sub	lr, fp, #3072	; 0xc00
   37fc0:	sub	r1, lr, #100	; 0x64
   37fc4:	add	r0, r1, r0, lsl #2
   37fc8:	ldr	r0, [r0]
   37fcc:	str	r0, [fp, #-44]	; 0xffffffd4
   37fd0:	movw	r0, #1
   37fd4:	str	r0, [fp, #-48]	; 0xffffffd0
   37fd8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   37fdc:	cmp	r0, #0
   37fe0:	beq	380d0 <__assert_fail@plt+0x26c3c>
   37fe4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   37fe8:	and	r0, r0, #1
   37fec:	cmp	r0, #0
   37ff0:	beq	380a4 <__assert_fail@plt+0x26c10>
   37ff4:	movw	r0, #0
   37ff8:	str	r0, [fp, #-32]	; 0xffffffe0
   37ffc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   38000:	add	r1, sp, #20
   38004:	add	r0, r1, r0, lsl #5
   38008:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3800c:	add	r0, r0, r1, lsl #2
   38010:	ldr	r0, [r0]
   38014:	ldr	r1, [fp, #-48]	; 0xffffffd0
   38018:	and	r0, r0, r1
   3801c:	cmp	r0, #0
   38020:	bne	38038 <__assert_fail@plt+0x26ba4>
   38024:	b	38028 <__assert_fail@plt+0x26b94>
   38028:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3802c:	add	r0, r0, #1
   38030:	str	r0, [fp, #-32]	; 0xffffffe0
   38034:	b	37ffc <__assert_fail@plt+0x26b68>
   38038:	ldr	r0, [fp, #-16]
   3803c:	add	r0, r0, #96	; 0x60
   38040:	ldr	r1, [fp, #-28]	; 0xffffffe4
   38044:	add	r0, r0, r1, lsl #2
   38048:	ldr	r0, [r0]
   3804c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   38050:	and	r0, r0, r1
   38054:	cmp	r0, #0
   38058:	beq	38080 <__assert_fail@plt+0x26bec>
   3805c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   38060:	sub	lr, fp, #2048	; 0x800
   38064:	sub	r1, lr, #56	; 0x38
   38068:	ldr	r0, [r1, r0, lsl #2]
   3806c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   38070:	ldr	r2, [fp, #-36]	; 0xffffffdc
   38074:	add	r1, r1, r2, lsl #2
   38078:	str	r0, [r1]
   3807c:	b	380a0 <__assert_fail@plt+0x26c0c>
   38080:	ldr	r0, [fp, #-32]	; 0xffffffe0
   38084:	sub	lr, fp, #1024	; 0x400
   38088:	sub	r1, lr, #56	; 0x38
   3808c:	ldr	r0, [r1, r0, lsl #2]
   38090:	ldr	r1, [fp, #-56]	; 0xffffffc8
   38094:	ldr	r2, [fp, #-36]	; 0xffffffdc
   38098:	add	r1, r1, r2, lsl #2
   3809c:	str	r0, [r1]
   380a0:	b	380a4 <__assert_fail@plt+0x26c10>
   380a4:	b	380a8 <__assert_fail@plt+0x26c14>
   380a8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   380ac:	lsl	r0, r0, #1
   380b0:	str	r0, [fp, #-48]	; 0xffffffd0
   380b4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   380b8:	lsr	r0, r0, #1
   380bc:	str	r0, [fp, #-44]	; 0xffffffd4
   380c0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   380c4:	add	r0, r0, #1
   380c8:	str	r0, [fp, #-36]	; 0xffffffdc
   380cc:	b	37fd8 <__assert_fail@plt+0x26b44>
   380d0:	b	380d4 <__assert_fail@plt+0x26c40>
   380d4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   380d8:	add	r0, r0, #1
   380dc:	str	r0, [fp, #-28]	; 0xffffffe4
   380e0:	b	37fa0 <__assert_fail@plt+0x26b0c>
   380e4:	b	38238 <__assert_fail@plt+0x26da4>
   380e8:	movw	r0, #4
   380ec:	movw	r1, #512	; 0x200
   380f0:	bl	3fb3c <__assert_fail@plt+0x2e6a8>
   380f4:	ldr	r1, [fp, #-20]	; 0xffffffec
   380f8:	str	r0, [r1, #48]	; 0x30
   380fc:	str	r0, [fp, #-56]	; 0xffffffc8
   38100:	ldr	r0, [fp, #-56]	; 0xffffffc8
   38104:	movw	r1, #0
   38108:	cmp	r0, r1
   3810c:	bne	38114 <__assert_fail@plt+0x26c80>
   38110:	b	37c10 <__assert_fail@plt+0x2677c>
   38114:	movw	r0, #0
   38118:	str	r0, [fp, #-28]	; 0xffffffe4
   3811c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   38120:	cmp	r0, #8
   38124:	bge	38234 <__assert_fail@plt+0x26da0>
   38128:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3812c:	lsl	r0, r0, #5
   38130:	str	r0, [fp, #-36]	; 0xffffffdc
   38134:	ldr	r0, [fp, #-28]	; 0xffffffe4
   38138:	sub	lr, fp, #3072	; 0xc00
   3813c:	sub	r1, lr, #100	; 0x64
   38140:	add	r0, r1, r0, lsl #2
   38144:	ldr	r0, [r0]
   38148:	str	r0, [fp, #-44]	; 0xffffffd4
   3814c:	movw	r0, #1
   38150:	str	r0, [fp, #-48]	; 0xffffffd0
   38154:	ldr	r0, [fp, #-44]	; 0xffffffd4
   38158:	cmp	r0, #0
   3815c:	beq	38220 <__assert_fail@plt+0x26d8c>
   38160:	ldr	r0, [fp, #-44]	; 0xffffffd4
   38164:	and	r0, r0, #1
   38168:	cmp	r0, #0
   3816c:	beq	381f4 <__assert_fail@plt+0x26d60>
   38170:	movw	r0, #0
   38174:	str	r0, [fp, #-32]	; 0xffffffe0
   38178:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3817c:	add	r1, sp, #20
   38180:	add	r0, r1, r0, lsl #5
   38184:	ldr	r1, [fp, #-28]	; 0xffffffe4
   38188:	add	r0, r0, r1, lsl #2
   3818c:	ldr	r0, [r0]
   38190:	ldr	r1, [fp, #-48]	; 0xffffffd0
   38194:	and	r0, r0, r1
   38198:	cmp	r0, #0
   3819c:	bne	381b4 <__assert_fail@plt+0x26d20>
   381a0:	b	381a4 <__assert_fail@plt+0x26d10>
   381a4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   381a8:	add	r0, r0, #1
   381ac:	str	r0, [fp, #-32]	; 0xffffffe0
   381b0:	b	38178 <__assert_fail@plt+0x26ce4>
   381b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   381b8:	sub	lr, fp, #1024	; 0x400
   381bc:	sub	r1, lr, #56	; 0x38
   381c0:	ldr	r0, [r1, r0, lsl #2]
   381c4:	ldr	r1, [fp, #-56]	; 0xffffffc8
   381c8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   381cc:	str	r0, [r1, r2, lsl #2]
   381d0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   381d4:	sub	lr, fp, #2048	; 0x800
   381d8:	sub	r1, lr, #56	; 0x38
   381dc:	ldr	r0, [r1, r0, lsl #2]
   381e0:	ldr	r1, [fp, #-56]	; 0xffffffc8
   381e4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   381e8:	add	r2, r2, #256	; 0x100
   381ec:	add	r1, r1, r2, lsl #2
   381f0:	str	r0, [r1]
   381f4:	b	381f8 <__assert_fail@plt+0x26d64>
   381f8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   381fc:	lsl	r0, r0, #1
   38200:	str	r0, [fp, #-48]	; 0xffffffd0
   38204:	ldr	r0, [fp, #-44]	; 0xffffffd4
   38208:	lsr	r0, r0, #1
   3820c:	str	r0, [fp, #-44]	; 0xffffffd4
   38210:	ldr	r0, [fp, #-36]	; 0xffffffdc
   38214:	add	r0, r0, #1
   38218:	str	r0, [fp, #-36]	; 0xffffffdc
   3821c:	b	38154 <__assert_fail@plt+0x26cc0>
   38220:	b	38224 <__assert_fail@plt+0x26d90>
   38224:	ldr	r0, [fp, #-28]	; 0xffffffe4
   38228:	add	r0, r0, #1
   3822c:	str	r0, [fp, #-28]	; 0xffffffe4
   38230:	b	3811c <__assert_fail@plt+0x26c88>
   38234:	b	38238 <__assert_fail@plt+0x26da4>
   38238:	sub	lr, fp, #3072	; 0xc00
   3823c:	sub	r0, lr, #100	; 0x64
   38240:	movw	r1, #10
   38244:	bl	33afc <__assert_fail@plt+0x22668>
   38248:	tst	r0, #1
   3824c:	beq	382e4 <__assert_fail@plt+0x26e50>
   38250:	movw	r0, #0
   38254:	str	r0, [fp, #-32]	; 0xffffffe0
   38258:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3825c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   38260:	cmp	r0, r1
   38264:	bge	382e0 <__assert_fail@plt+0x26e4c>
   38268:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3826c:	add	r1, sp, #20
   38270:	add	r0, r1, r0, lsl #5
   38274:	movw	r1, #10
   38278:	bl	33afc <__assert_fail@plt+0x22668>
   3827c:	tst	r0, #1
   38280:	beq	382cc <__assert_fail@plt+0x26e38>
   38284:	ldr	r0, [fp, #-32]	; 0xffffffe0
   38288:	sub	lr, fp, #3072	; 0xc00
   3828c:	sub	r1, lr, #56	; 0x38
   38290:	add	r0, r1, r0, lsl #2
   38294:	ldr	r0, [r0]
   38298:	ldr	r1, [fp, #-56]	; 0xffffffc8
   3829c:	str	r0, [r1, #40]	; 0x28
   382a0:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   382a4:	tst	r0, #1
   382a8:	beq	382c8 <__assert_fail@plt+0x26e34>
   382ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   382b0:	sub	lr, fp, #3072	; 0xc00
   382b4:	sub	r1, lr, #56	; 0x38
   382b8:	add	r0, r1, r0, lsl #2
   382bc:	ldr	r0, [r0]
   382c0:	ldr	r1, [fp, #-56]	; 0xffffffc8
   382c4:	str	r0, [r1, #1064]	; 0x428
   382c8:	b	382e0 <__assert_fail@plt+0x26e4c>
   382cc:	b	382d0 <__assert_fail@plt+0x26e3c>
   382d0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   382d4:	add	r0, r0, #1
   382d8:	str	r0, [fp, #-32]	; 0xffffffe0
   382dc:	b	38258 <__assert_fail@plt+0x26dc4>
   382e0:	b	382e4 <__assert_fail@plt+0x26e50>
   382e4:	ldr	r0, [fp, #-3132]	; 0xfffff3c4
   382e8:	bl	138a4 <__assert_fail@plt+0x2410>
   382ec:	movw	r0, #0
   382f0:	str	r0, [fp, #-28]	; 0xffffffe4
   382f4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   382f8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   382fc:	cmp	r0, r1
   38300:	bge	38334 <__assert_fail@plt+0x26ea0>
   38304:	sub	lr, fp, #6144	; 0x1800
   38308:	sub	r0, lr, #100	; 0x64
   3830c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   38310:	movw	r2, #12
   38314:	mul	r1, r1, r2
   38318:	add	r0, r0, r1
   3831c:	ldr	r0, [r0, #8]
   38320:	bl	138a4 <__assert_fail@plt+0x2410>
   38324:	ldr	r0, [fp, #-28]	; 0xffffffe4
   38328:	add	r0, r0, #1
   3832c:	str	r0, [fp, #-28]	; 0xffffffe4
   38330:	b	382f4 <__assert_fail@plt+0x26e60>
   38334:	movw	r0, #1
   38338:	and	r0, r0, #1
   3833c:	strb	r0, [fp, #-9]
   38340:	ldrb	r0, [fp, #-9]
   38344:	and	r0, r0, #1
   38348:	sub	sp, fp, #8
   3834c:	pop	{r4, r5, fp, pc}
   38350:	push	{fp, lr}
   38354:	mov	fp, sp
   38358:	sub	sp, sp, #184	; 0xb8
   3835c:	sub	ip, fp, #76	; 0x4c
   38360:	str	r0, [fp, #-8]
   38364:	str	r1, [fp, #-12]
   38368:	str	r2, [fp, #-16]
   3836c:	str	r3, [fp, #-20]	; 0xffffffec
   38370:	ldr	r0, [fp, #-12]
   38374:	add	r0, r0, #4
   38378:	str	r0, [fp, #-80]	; 0xffffffb0
   3837c:	mov	r0, ip
   38380:	bl	38b30 <__assert_fail@plt+0x2769c>
   38384:	movw	r0, #0
   38388:	str	r0, [fp, #-44]	; 0xffffffd4
   3838c:	str	r0, [fp, #-32]	; 0xffffffe0
   38390:	ldr	r0, [fp, #-32]	; 0xffffffe0
   38394:	ldr	r1, [fp, #-80]	; 0xffffffb0
   38398:	ldr	r1, [r1, #4]
   3839c:	cmp	r0, r1
   383a0:	bge	38abc <__assert_fail@plt+0x27628>
   383a4:	ldr	r0, [fp, #-8]
   383a8:	ldr	r0, [r0]
   383ac:	ldr	r1, [fp, #-80]	; 0xffffffb0
   383b0:	ldr	r1, [r1, #8]
   383b4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   383b8:	ldr	r1, [r1, r2, lsl #2]
   383bc:	add	r0, r0, r1, lsl #3
   383c0:	str	r0, [fp, #-84]	; 0xffffffac
   383c4:	ldr	r0, [fp, #-84]	; 0xffffffac
   383c8:	ldr	r0, [r0, #4]
   383cc:	and	r0, r0, #255	; 0xff
   383d0:	str	r0, [fp, #-88]	; 0xffffffa8
   383d4:	ldr	r0, [fp, #-84]	; 0xffffffac
   383d8:	ldr	r0, [r0, #4]
   383dc:	lsr	r0, r0, #8
   383e0:	movw	r1, #1023	; 0x3ff
   383e4:	and	r0, r0, r1
   383e8:	str	r0, [sp, #92]	; 0x5c
   383ec:	ldr	r0, [fp, #-88]	; 0xffffffa8
   383f0:	cmp	r0, #1
   383f4:	bne	3840c <__assert_fail@plt+0x26f78>
   383f8:	sub	r0, fp, #76	; 0x4c
   383fc:	ldr	r1, [fp, #-84]	; 0xffffffac
   38400:	ldrb	r1, [r1]
   38404:	bl	2cd98 <__assert_fail@plt+0x1b904>
   38408:	b	3851c <__assert_fail@plt+0x27088>
   3840c:	ldr	r0, [fp, #-88]	; 0xffffffa8
   38410:	cmp	r0, #3
   38414:	bne	3842c <__assert_fail@plt+0x26f98>
   38418:	sub	r0, fp, #76	; 0x4c
   3841c:	ldr	r1, [fp, #-84]	; 0xffffffac
   38420:	ldr	r1, [r1]
   38424:	bl	38b5c <__assert_fail@plt+0x276c8>
   38428:	b	38518 <__assert_fail@plt+0x27084>
   3842c:	ldr	r0, [fp, #-88]	; 0xffffffa8
   38430:	cmp	r0, #5
   38434:	bne	384a8 <__assert_fail@plt+0x27014>
   38438:	ldr	r0, [fp, #-8]
   3843c:	ldr	r0, [r0, #92]	; 0x5c
   38440:	cmp	r0, #1
   38444:	ble	3845c <__assert_fail@plt+0x26fc8>
   38448:	sub	r0, fp, #76	; 0x4c
   3844c:	ldr	r1, [fp, #-8]
   38450:	ldr	r1, [r1, #60]	; 0x3c
   38454:	bl	38b5c <__assert_fail@plt+0x276c8>
   38458:	b	38464 <__assert_fail@plt+0x26fd0>
   3845c:	sub	r0, fp, #76	; 0x4c
   38460:	bl	38bb4 <__assert_fail@plt+0x27720>
   38464:	ldr	r0, [fp, #-8]
   38468:	ldr	r0, [r0, #128]	; 0x80
   3846c:	and	r0, r0, #64	; 0x40
   38470:	cmp	r0, #0
   38474:	bne	38484 <__assert_fail@plt+0x26ff0>
   38478:	sub	r0, fp, #76	; 0x4c
   3847c:	movw	r1, #10
   38480:	bl	38be0 <__assert_fail@plt+0x2774c>
   38484:	ldr	r0, [fp, #-8]
   38488:	ldr	r0, [r0, #128]	; 0x80
   3848c:	and	r0, r0, #128	; 0x80
   38490:	cmp	r0, #0
   38494:	beq	384a4 <__assert_fail@plt+0x27010>
   38498:	sub	r0, fp, #76	; 0x4c
   3849c:	movw	r1, #0
   384a0:	bl	38be0 <__assert_fail@plt+0x2774c>
   384a4:	b	38514 <__assert_fail@plt+0x27080>
   384a8:	ldr	r0, [fp, #-88]	; 0xffffffa8
   384ac:	cmp	r0, #7
   384b0:	bne	3850c <__assert_fail@plt+0x27078>
   384b4:	sub	r0, fp, #76	; 0x4c
   384b8:	movw	r1, #255	; 0xff
   384bc:	and	r1, r1, #255	; 0xff
   384c0:	movw	r2, #16
   384c4:	bl	113d4 <memset@plt>
   384c8:	ldr	r0, [fp, #-8]
   384cc:	ldr	r0, [r0, #128]	; 0x80
   384d0:	and	r0, r0, #64	; 0x40
   384d4:	cmp	r0, #0
   384d8:	bne	384e8 <__assert_fail@plt+0x27054>
   384dc:	sub	r0, fp, #76	; 0x4c
   384e0:	movw	r1, #10
   384e4:	bl	38be0 <__assert_fail@plt+0x2774c>
   384e8:	ldr	r0, [fp, #-8]
   384ec:	ldr	r0, [r0, #128]	; 0x80
   384f0:	and	r0, r0, #128	; 0x80
   384f4:	cmp	r0, #0
   384f8:	beq	38508 <__assert_fail@plt+0x27074>
   384fc:	sub	r0, fp, #76	; 0x4c
   38500:	movw	r1, #0
   38504:	bl	38be0 <__assert_fail@plt+0x2774c>
   38508:	b	38510 <__assert_fail@plt+0x2707c>
   3850c:	b	38aac <__assert_fail@plt+0x27618>
   38510:	b	38514 <__assert_fail@plt+0x27080>
   38514:	b	38518 <__assert_fail@plt+0x27084>
   38518:	b	3851c <__assert_fail@plt+0x27088>
   3851c:	ldr	r0, [sp, #92]	; 0x5c
   38520:	cmp	r0, #0
   38524:	beq	387f8 <__assert_fail@plt+0x27364>
   38528:	ldr	r0, [sp, #92]	; 0x5c
   3852c:	and	r0, r0, #32
   38530:	cmp	r0, #0
   38534:	beq	3857c <__assert_fail@plt+0x270e8>
   38538:	sub	r0, fp, #76	; 0x4c
   3853c:	movw	r1, #10
   38540:	bl	33afc <__assert_fail@plt+0x22668>
   38544:	sub	r1, fp, #76	; 0x4c
   38548:	and	r0, r0, #1
   3854c:	strb	r0, [sp, #91]	; 0x5b
   38550:	mov	r0, r1
   38554:	bl	38b30 <__assert_fail@plt+0x2769c>
   38558:	ldrb	r0, [sp, #91]	; 0x5b
   3855c:	tst	r0, #1
   38560:	beq	38574 <__assert_fail@plt+0x270e0>
   38564:	sub	r0, fp, #76	; 0x4c
   38568:	movw	r1, #10
   3856c:	bl	2cd98 <__assert_fail@plt+0x1b904>
   38570:	b	38578 <__assert_fail@plt+0x270e4>
   38574:	b	38aac <__assert_fail@plt+0x27618>
   38578:	b	3857c <__assert_fail@plt+0x270e8>
   3857c:	ldr	r0, [sp, #92]	; 0x5c
   38580:	and	r0, r0, #128	; 0x80
   38584:	cmp	r0, #0
   38588:	beq	38598 <__assert_fail@plt+0x27104>
   3858c:	sub	r0, fp, #76	; 0x4c
   38590:	bl	38b30 <__assert_fail@plt+0x2769c>
   38594:	b	38aac <__assert_fail@plt+0x27618>
   38598:	ldr	r0, [sp, #92]	; 0x5c
   3859c:	and	r0, r0, #4
   385a0:	cmp	r0, #0
   385a4:	beq	386c4 <__assert_fail@plt+0x27230>
   385a8:	movw	r0, #0
   385ac:	str	r0, [sp, #84]	; 0x54
   385b0:	ldr	r0, [fp, #-88]	; 0xffffffa8
   385b4:	cmp	r0, #1
   385b8:	bne	385e0 <__assert_fail@plt+0x2714c>
   385bc:	ldr	r0, [fp, #-84]	; 0xffffffac
   385c0:	ldr	r0, [r0, #4]
   385c4:	lsr	r0, r0, #22
   385c8:	and	r0, r0, #1
   385cc:	cmp	r0, #0
   385d0:	bne	385e0 <__assert_fail@plt+0x2714c>
   385d4:	sub	r0, fp, #76	; 0x4c
   385d8:	bl	38b30 <__assert_fail@plt+0x2769c>
   385dc:	b	38aac <__assert_fail@plt+0x27618>
   385e0:	ldr	r0, [fp, #-8]
   385e4:	ldr	r0, [r0, #92]	; 0x5c
   385e8:	cmp	r0, #1
   385ec:	ble	38658 <__assert_fail@plt+0x271c4>
   385f0:	movw	r0, #0
   385f4:	str	r0, [fp, #-36]	; 0xffffffdc
   385f8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   385fc:	cmp	r0, #8
   38600:	bge	38654 <__assert_fail@plt+0x271c0>
   38604:	ldr	r0, [fp, #-8]
   38608:	ldr	r1, [fp, #-36]	; 0xffffffdc
   3860c:	add	r2, r0, r1, lsl #2
   38610:	ldr	r2, [r2, #96]	; 0x60
   38614:	ldr	r0, [r0, #60]	; 0x3c
   38618:	ldr	r0, [r0, r1, lsl #2]
   3861c:	mvn	r0, r0
   38620:	orr	r0, r2, r0
   38624:	sub	r2, fp, #76	; 0x4c
   38628:	add	r1, r2, r1, lsl #2
   3862c:	ldr	r2, [r1]
   38630:	and	r0, r2, r0
   38634:	str	r0, [r1]
   38638:	ldr	r1, [sp, #84]	; 0x54
   3863c:	orr	r0, r1, r0
   38640:	str	r0, [sp, #84]	; 0x54
   38644:	ldr	r0, [fp, #-36]	; 0xffffffdc
   38648:	add	r0, r0, #1
   3864c:	str	r0, [fp, #-36]	; 0xffffffdc
   38650:	b	385f8 <__assert_fail@plt+0x27164>
   38654:	b	386b0 <__assert_fail@plt+0x2721c>
   38658:	movw	r0, #0
   3865c:	str	r0, [fp, #-36]	; 0xffffffdc
   38660:	ldr	r0, [fp, #-36]	; 0xffffffdc
   38664:	cmp	r0, #8
   38668:	bge	386ac <__assert_fail@plt+0x27218>
   3866c:	ldr	r0, [fp, #-8]
   38670:	ldr	r1, [fp, #-36]	; 0xffffffdc
   38674:	add	r0, r0, r1, lsl #2
   38678:	ldr	r0, [r0, #96]	; 0x60
   3867c:	sub	r2, fp, #76	; 0x4c
   38680:	add	r1, r2, r1, lsl #2
   38684:	ldr	r2, [r1]
   38688:	and	r0, r2, r0
   3868c:	str	r0, [r1]
   38690:	ldr	r1, [sp, #84]	; 0x54
   38694:	orr	r0, r1, r0
   38698:	str	r0, [sp, #84]	; 0x54
   3869c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   386a0:	add	r0, r0, #1
   386a4:	str	r0, [fp, #-36]	; 0xffffffdc
   386a8:	b	38660 <__assert_fail@plt+0x271cc>
   386ac:	b	386b0 <__assert_fail@plt+0x2721c>
   386b0:	ldr	r0, [sp, #84]	; 0x54
   386b4:	cmp	r0, #0
   386b8:	bne	386c0 <__assert_fail@plt+0x2722c>
   386bc:	b	38aac <__assert_fail@plt+0x27618>
   386c0:	b	386c4 <__assert_fail@plt+0x27230>
   386c4:	ldr	r0, [sp, #92]	; 0x5c
   386c8:	and	r0, r0, #8
   386cc:	cmp	r0, #0
   386d0:	beq	387f4 <__assert_fail@plt+0x27360>
   386d4:	movw	r0, #0
   386d8:	str	r0, [sp, #80]	; 0x50
   386dc:	ldr	r0, [fp, #-88]	; 0xffffffa8
   386e0:	cmp	r0, #1
   386e4:	bne	3870c <__assert_fail@plt+0x27278>
   386e8:	ldr	r0, [fp, #-84]	; 0xffffffac
   386ec:	ldr	r0, [r0, #4]
   386f0:	lsr	r0, r0, #22
   386f4:	and	r0, r0, #1
   386f8:	cmp	r0, #0
   386fc:	beq	3870c <__assert_fail@plt+0x27278>
   38700:	sub	r0, fp, #76	; 0x4c
   38704:	bl	38b30 <__assert_fail@plt+0x2769c>
   38708:	b	38aac <__assert_fail@plt+0x27618>
   3870c:	ldr	r0, [fp, #-8]
   38710:	ldr	r0, [r0, #92]	; 0x5c
   38714:	cmp	r0, #1
   38718:	ble	38784 <__assert_fail@plt+0x272f0>
   3871c:	movw	r0, #0
   38720:	str	r0, [fp, #-36]	; 0xffffffdc
   38724:	ldr	r0, [fp, #-36]	; 0xffffffdc
   38728:	cmp	r0, #8
   3872c:	bge	38780 <__assert_fail@plt+0x272ec>
   38730:	ldr	r0, [fp, #-8]
   38734:	ldr	r1, [fp, #-36]	; 0xffffffdc
   38738:	add	r2, r0, r1, lsl #2
   3873c:	ldr	r2, [r2, #96]	; 0x60
   38740:	ldr	r0, [r0, #60]	; 0x3c
   38744:	ldr	r0, [r0, r1, lsl #2]
   38748:	and	r0, r2, r0
   3874c:	mvn	r0, r0
   38750:	sub	r2, fp, #76	; 0x4c
   38754:	add	r1, r2, r1, lsl #2
   38758:	ldr	r2, [r1]
   3875c:	and	r0, r2, r0
   38760:	str	r0, [r1]
   38764:	ldr	r1, [sp, #80]	; 0x50
   38768:	orr	r0, r1, r0
   3876c:	str	r0, [sp, #80]	; 0x50
   38770:	ldr	r0, [fp, #-36]	; 0xffffffdc
   38774:	add	r0, r0, #1
   38778:	str	r0, [fp, #-36]	; 0xffffffdc
   3877c:	b	38724 <__assert_fail@plt+0x27290>
   38780:	b	387e0 <__assert_fail@plt+0x2734c>
   38784:	movw	r0, #0
   38788:	str	r0, [fp, #-36]	; 0xffffffdc
   3878c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   38790:	cmp	r0, #8
   38794:	bge	387dc <__assert_fail@plt+0x27348>
   38798:	ldr	r0, [fp, #-8]
   3879c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   387a0:	add	r0, r0, r1, lsl #2
   387a4:	ldr	r0, [r0, #96]	; 0x60
   387a8:	mvn	r0, r0
   387ac:	sub	r2, fp, #76	; 0x4c
   387b0:	add	r1, r2, r1, lsl #2
   387b4:	ldr	r2, [r1]
   387b8:	and	r0, r2, r0
   387bc:	str	r0, [r1]
   387c0:	ldr	r1, [sp, #80]	; 0x50
   387c4:	orr	r0, r1, r0
   387c8:	str	r0, [sp, #80]	; 0x50
   387cc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   387d0:	add	r0, r0, #1
   387d4:	str	r0, [fp, #-36]	; 0xffffffdc
   387d8:	b	3878c <__assert_fail@plt+0x272f8>
   387dc:	b	387e0 <__assert_fail@plt+0x2734c>
   387e0:	ldr	r0, [sp, #80]	; 0x50
   387e4:	cmp	r0, #0
   387e8:	bne	387f0 <__assert_fail@plt+0x2735c>
   387ec:	b	38aac <__assert_fail@plt+0x27618>
   387f0:	b	387f4 <__assert_fail@plt+0x27360>
   387f4:	b	387f8 <__assert_fail@plt+0x27364>
   387f8:	movw	r0, #0
   387fc:	str	r0, [fp, #-36]	; 0xffffffdc
   38800:	ldr	r0, [fp, #-36]	; 0xffffffdc
   38804:	ldr	r1, [fp, #-44]	; 0xffffffd4
   38808:	cmp	r0, r1
   3880c:	bge	38a34 <__assert_fail@plt+0x275a0>
   38810:	ldr	r0, [fp, #-88]	; 0xffffffa8
   38814:	cmp	r0, #1
   38818:	bne	38840 <__assert_fail@plt+0x273ac>
   3881c:	ldr	r0, [fp, #-20]	; 0xffffffec
   38820:	ldr	r1, [fp, #-36]	; 0xffffffdc
   38824:	add	r0, r0, r1, lsl #5
   38828:	ldr	r1, [fp, #-84]	; 0xffffffac
   3882c:	ldrb	r1, [r1]
   38830:	bl	33afc <__assert_fail@plt+0x22668>
   38834:	tst	r0, #1
   38838:	bne	38840 <__assert_fail@plt+0x273ac>
   3883c:	b	38a24 <__assert_fail@plt+0x27590>
   38840:	movw	r0, #0
   38844:	str	r0, [sp, #12]
   38848:	str	r0, [fp, #-40]	; 0xffffffd8
   3884c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   38850:	cmp	r0, #8
   38854:	bge	388a0 <__assert_fail@plt+0x2740c>
   38858:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3885c:	sub	r1, fp, #76	; 0x4c
   38860:	ldr	r1, [r1, r0, lsl #2]
   38864:	ldr	r2, [fp, #-20]	; 0xffffffec
   38868:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3886c:	add	r2, r2, r3, lsl #5
   38870:	ldr	r2, [r2, r0, lsl #2]
   38874:	and	r1, r1, r2
   38878:	add	r2, sp, #48	; 0x30
   3887c:	add	r0, r2, r0, lsl #2
   38880:	str	r1, [r0]
   38884:	ldr	r0, [sp, #12]
   38888:	orr	r0, r0, r1
   3888c:	str	r0, [sp, #12]
   38890:	ldr	r0, [fp, #-40]	; 0xffffffd8
   38894:	add	r0, r0, #1
   38898:	str	r0, [fp, #-40]	; 0xffffffd8
   3889c:	b	3884c <__assert_fail@plt+0x273b8>
   388a0:	ldr	r0, [sp, #12]
   388a4:	cmp	r0, #0
   388a8:	bne	388b0 <__assert_fail@plt+0x2741c>
   388ac:	b	38a24 <__assert_fail@plt+0x27590>
   388b0:	movw	r0, #0
   388b4:	str	r0, [sp, #4]
   388b8:	str	r0, [sp, #8]
   388bc:	str	r0, [fp, #-40]	; 0xffffffd8
   388c0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   388c4:	cmp	r0, #8
   388c8:	bge	38940 <__assert_fail@plt+0x274ac>
   388cc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   388d0:	sub	r1, fp, #76	; 0x4c
   388d4:	ldr	r2, [r1, r0, lsl #2]
   388d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   388dc:	ldr	ip, [fp, #-36]	; 0xffffffdc
   388e0:	add	r3, r3, ip, lsl #5
   388e4:	ldr	r3, [r3, r0, lsl #2]
   388e8:	bic	r2, r3, r2
   388ec:	add	r3, sp, #16
   388f0:	str	r2, [r3, r0, lsl #2]
   388f4:	ldr	r0, [sp, #8]
   388f8:	orr	r0, r0, r2
   388fc:	str	r0, [sp, #8]
   38900:	ldr	r0, [fp, #-40]	; 0xffffffd8
   38904:	add	r2, r1, r0, lsl #2
   38908:	ldr	r1, [r1, r0, lsl #2]
   3890c:	ldr	r3, [fp, #-20]	; 0xffffffec
   38910:	ldr	ip, [fp, #-36]	; 0xffffffdc
   38914:	add	r3, r3, ip, lsl #5
   38918:	ldr	r0, [r3, r0, lsl #2]
   3891c:	bic	r0, r1, r0
   38920:	str	r0, [r2]
   38924:	ldr	r1, [sp, #4]
   38928:	orr	r0, r1, r0
   3892c:	str	r0, [sp, #4]
   38930:	ldr	r0, [fp, #-40]	; 0xffffffd8
   38934:	add	r0, r0, #1
   38938:	str	r0, [fp, #-40]	; 0xffffffd8
   3893c:	b	388c0 <__assert_fail@plt+0x2742c>
   38940:	ldr	r0, [sp, #8]
   38944:	cmp	r0, #0
   38948:	beq	389c8 <__assert_fail@plt+0x27534>
   3894c:	add	r1, sp, #48	; 0x30
   38950:	ldr	r0, [fp, #-20]	; 0xffffffec
   38954:	ldr	r2, [fp, #-44]	; 0xffffffd4
   38958:	add	r0, r0, r2, lsl #5
   3895c:	add	r2, sp, #16
   38960:	str	r1, [sp]
   38964:	mov	r1, r2
   38968:	bl	38c28 <__assert_fail@plt+0x27794>
   3896c:	ldr	r0, [fp, #-20]	; 0xffffffec
   38970:	ldr	r1, [fp, #-36]	; 0xffffffdc
   38974:	add	r0, r0, r1, lsl #5
   38978:	ldr	r1, [sp]
   3897c:	bl	38c28 <__assert_fail@plt+0x27794>
   38980:	ldr	r0, [fp, #-16]
   38984:	ldr	r1, [fp, #-44]	; 0xffffffd4
   38988:	movw	r2, #12
   3898c:	mul	r1, r1, r2
   38990:	add	r0, r0, r1
   38994:	ldr	r1, [fp, #-16]
   38998:	ldr	lr, [fp, #-36]	; 0xffffffdc
   3899c:	mul	r2, lr, r2
   389a0:	add	r1, r1, r2
   389a4:	bl	30d78 <__assert_fail@plt+0x1f8e4>
   389a8:	str	r0, [fp, #-24]	; 0xffffffe8
   389ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   389b0:	cmp	r0, #0
   389b4:	beq	389bc <__assert_fail@plt+0x27528>
   389b8:	b	38ad8 <__assert_fail@plt+0x27644>
   389bc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   389c0:	add	r0, r0, #1
   389c4:	str	r0, [fp, #-44]	; 0xffffffd4
   389c8:	ldr	r0, [fp, #-16]
   389cc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   389d0:	add	r1, r1, r1, lsl #1
   389d4:	add	r0, r0, r1, lsl #2
   389d8:	ldr	r1, [fp, #-80]	; 0xffffffb0
   389dc:	ldr	r1, [r1, #8]
   389e0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   389e4:	add	r1, r1, r2, lsl #2
   389e8:	ldr	r1, [r1]
   389ec:	bl	30990 <__assert_fail@plt+0x1f4fc>
   389f0:	and	r0, r0, #1
   389f4:	strb	r0, [fp, #-25]	; 0xffffffe7
   389f8:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   389fc:	mvn	r1, #0
   38a00:	eor	r0, r0, r1
   38a04:	tst	r0, #1
   38a08:	beq	38a10 <__assert_fail@plt+0x2757c>
   38a0c:	b	38ad8 <__assert_fail@plt+0x27644>
   38a10:	ldr	r0, [sp, #4]
   38a14:	cmp	r0, #0
   38a18:	bne	38a20 <__assert_fail@plt+0x2758c>
   38a1c:	b	38a34 <__assert_fail@plt+0x275a0>
   38a20:	b	38a24 <__assert_fail@plt+0x27590>
   38a24:	ldr	r0, [fp, #-36]	; 0xffffffdc
   38a28:	add	r0, r0, #1
   38a2c:	str	r0, [fp, #-36]	; 0xffffffdc
   38a30:	b	38800 <__assert_fail@plt+0x2736c>
   38a34:	ldr	r0, [fp, #-36]	; 0xffffffdc
   38a38:	ldr	r1, [fp, #-44]	; 0xffffffd4
   38a3c:	cmp	r0, r1
   38a40:	bne	38aa8 <__assert_fail@plt+0x27614>
   38a44:	ldr	r0, [fp, #-20]	; 0xffffffec
   38a48:	ldr	r1, [fp, #-44]	; 0xffffffd4
   38a4c:	add	r0, r0, r1, lsl #5
   38a50:	sub	r1, fp, #76	; 0x4c
   38a54:	bl	38c28 <__assert_fail@plt+0x27794>
   38a58:	ldr	r0, [fp, #-16]
   38a5c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   38a60:	add	r1, r1, r1, lsl #1
   38a64:	add	r0, r0, r1, lsl #2
   38a68:	ldr	r1, [fp, #-80]	; 0xffffffb0
   38a6c:	ldr	r1, [r1, #8]
   38a70:	ldr	lr, [fp, #-32]	; 0xffffffe0
   38a74:	add	r1, r1, lr, lsl #2
   38a78:	ldr	r1, [r1]
   38a7c:	bl	2fac4 <__assert_fail@plt+0x1e630>
   38a80:	str	r0, [fp, #-24]	; 0xffffffe8
   38a84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38a88:	cmp	r0, #0
   38a8c:	beq	38a94 <__assert_fail@plt+0x27600>
   38a90:	b	38ad8 <__assert_fail@plt+0x27644>
   38a94:	sub	r0, fp, #76	; 0x4c
   38a98:	ldr	r1, [fp, #-44]	; 0xffffffd4
   38a9c:	add	r1, r1, #1
   38aa0:	str	r1, [fp, #-44]	; 0xffffffd4
   38aa4:	bl	38b30 <__assert_fail@plt+0x2769c>
   38aa8:	b	38aac <__assert_fail@plt+0x27618>
   38aac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   38ab0:	add	r0, r0, #1
   38ab4:	str	r0, [fp, #-32]	; 0xffffffe0
   38ab8:	b	38390 <__assert_fail@plt+0x26efc>
   38abc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   38ac0:	cmp	r0, #256	; 0x100
   38ac4:	bgt	38acc <__assert_fail@plt+0x27638>
   38ac8:	b	38acc <__assert_fail@plt+0x27638>
   38acc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   38ad0:	str	r0, [fp, #-4]
   38ad4:	b	38b24 <__assert_fail@plt+0x27690>
   38ad8:	movw	r0, #0
   38adc:	str	r0, [fp, #-36]	; 0xffffffdc
   38ae0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   38ae4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   38ae8:	cmp	r0, r1
   38aec:	bge	38b1c <__assert_fail@plt+0x27688>
   38af0:	ldr	r0, [fp, #-16]
   38af4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   38af8:	movw	r2, #12
   38afc:	mul	r1, r1, r2
   38b00:	add	r0, r0, r1
   38b04:	ldr	r0, [r0, #8]
   38b08:	bl	138a4 <__assert_fail@plt+0x2410>
   38b0c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   38b10:	add	r0, r0, #1
   38b14:	str	r0, [fp, #-36]	; 0xffffffdc
   38b18:	b	38ae0 <__assert_fail@plt+0x2764c>
   38b1c:	mvn	r0, #0
   38b20:	str	r0, [fp, #-4]
   38b24:	ldr	r0, [fp, #-4]
   38b28:	mov	sp, fp
   38b2c:	pop	{fp, pc}
   38b30:	push	{fp, lr}
   38b34:	mov	fp, sp
   38b38:	sub	sp, sp, #8
   38b3c:	str	r0, [sp, #4]
   38b40:	ldr	r0, [sp, #4]
   38b44:	movw	r1, #0
   38b48:	and	r1, r1, #255	; 0xff
   38b4c:	movw	r2, #32
   38b50:	bl	113d4 <memset@plt>
   38b54:	mov	sp, fp
   38b58:	pop	{fp, pc}
   38b5c:	sub	sp, sp, #12
   38b60:	str	r0, [sp, #8]
   38b64:	str	r1, [sp, #4]
   38b68:	movw	r0, #0
   38b6c:	str	r0, [sp]
   38b70:	ldr	r0, [sp]
   38b74:	cmp	r0, #8
   38b78:	bge	38bac <__assert_fail@plt+0x27718>
   38b7c:	ldr	r0, [sp, #4]
   38b80:	ldr	r1, [sp]
   38b84:	ldr	r0, [r0, r1, lsl #2]
   38b88:	ldr	r2, [sp, #8]
   38b8c:	add	r1, r2, r1, lsl #2
   38b90:	ldr	r2, [r1]
   38b94:	orr	r0, r2, r0
   38b98:	str	r0, [r1]
   38b9c:	ldr	r0, [sp]
   38ba0:	add	r0, r0, #1
   38ba4:	str	r0, [sp]
   38ba8:	b	38b70 <__assert_fail@plt+0x276dc>
   38bac:	add	sp, sp, #12
   38bb0:	bx	lr
   38bb4:	push	{fp, lr}
   38bb8:	mov	fp, sp
   38bbc:	sub	sp, sp, #8
   38bc0:	str	r0, [sp, #4]
   38bc4:	ldr	r0, [sp, #4]
   38bc8:	movw	r1, #255	; 0xff
   38bcc:	and	r1, r1, #255	; 0xff
   38bd0:	movw	r2, #32
   38bd4:	bl	113d4 <memset@plt>
   38bd8:	mov	sp, fp
   38bdc:	pop	{fp, pc}
   38be0:	sub	sp, sp, #8
   38be4:	str	r0, [sp, #4]
   38be8:	str	r1, [sp]
   38bec:	ldr	r0, [sp]
   38bf0:	asr	r1, r0, #31
   38bf4:	add	r1, r0, r1, lsr #27
   38bf8:	bic	r2, r1, #31
   38bfc:	sub	r0, r0, r2
   38c00:	mov	r2, #1
   38c04:	mvn	r0, r2, lsl r0
   38c08:	ldr	r2, [sp, #4]
   38c0c:	asr	r1, r1, #5
   38c10:	add	r1, r2, r1, lsl #2
   38c14:	ldr	r2, [r1]
   38c18:	and	r0, r2, r0
   38c1c:	str	r0, [r1]
   38c20:	add	sp, sp, #8
   38c24:	bx	lr
   38c28:	push	{fp, lr}
   38c2c:	mov	fp, sp
   38c30:	sub	sp, sp, #8
   38c34:	str	r0, [sp, #4]
   38c38:	str	r1, [sp]
   38c3c:	ldr	r0, [sp, #4]
   38c40:	ldr	r1, [sp]
   38c44:	movw	r2, #32
   38c48:	bl	11248 <memcpy@plt>
   38c4c:	mov	sp, fp
   38c50:	pop	{fp, pc}
   38c54:	sub	sp, sp, #24
   38c58:	str	r0, [sp, #16]
   38c5c:	str	r1, [sp, #12]
   38c60:	str	r2, [sp, #8]
   38c64:	ldr	r0, [sp, #16]
   38c68:	ldr	r0, [r0]
   38c6c:	ldr	r1, [sp, #12]
   38c70:	add	r0, r0, r1, lsl #3
   38c74:	ldrb	r0, [r0, #4]
   38c78:	str	r0, [sp, #4]
   38c7c:	ldr	r0, [sp, #16]
   38c80:	ldr	r0, [r0]
   38c84:	ldr	r1, [sp, #12]
   38c88:	add	r0, r0, r1, lsl #3
   38c8c:	ldr	r0, [r0, #4]
   38c90:	lsr	r0, r0, #8
   38c94:	movw	r1, #1023	; 0x3ff
   38c98:	and	r0, r0, r1
   38c9c:	str	r0, [sp]
   38ca0:	ldr	r0, [sp, #4]
   38ca4:	cmp	r0, #2
   38ca8:	beq	38cbc <__assert_fail@plt+0x27828>
   38cac:	movw	r0, #0
   38cb0:	and	r0, r0, #1
   38cb4:	strb	r0, [sp, #23]
   38cb8:	b	38d74 <__assert_fail@plt+0x278e0>
   38cbc:	ldr	r0, [sp]
   38cc0:	cmp	r0, #0
   38cc4:	bne	38cd8 <__assert_fail@plt+0x27844>
   38cc8:	movw	r0, #1
   38ccc:	and	r0, r0, #1
   38cd0:	strb	r0, [sp, #23]
   38cd4:	b	38d74 <__assert_fail@plt+0x278e0>
   38cd8:	ldr	r0, [sp]
   38cdc:	and	r0, r0, #4
   38ce0:	cmp	r0, #0
   38ce4:	beq	38cf8 <__assert_fail@plt+0x27864>
   38ce8:	ldr	r0, [sp, #8]
   38cec:	and	r0, r0, #1
   38cf0:	cmp	r0, #0
   38cf4:	beq	38d58 <__assert_fail@plt+0x278c4>
   38cf8:	ldr	r0, [sp]
   38cfc:	and	r0, r0, #8
   38d00:	cmp	r0, #0
   38d04:	beq	38d18 <__assert_fail@plt+0x27884>
   38d08:	ldr	r0, [sp, #8]
   38d0c:	and	r0, r0, #1
   38d10:	cmp	r0, #0
   38d14:	bne	38d58 <__assert_fail@plt+0x278c4>
   38d18:	ldr	r0, [sp]
   38d1c:	and	r0, r0, #32
   38d20:	cmp	r0, #0
   38d24:	beq	38d38 <__assert_fail@plt+0x278a4>
   38d28:	ldr	r0, [sp, #8]
   38d2c:	and	r0, r0, #2
   38d30:	cmp	r0, #0
   38d34:	beq	38d58 <__assert_fail@plt+0x278c4>
   38d38:	ldr	r0, [sp]
   38d3c:	and	r0, r0, #128	; 0x80
   38d40:	cmp	r0, #0
   38d44:	beq	38d68 <__assert_fail@plt+0x278d4>
   38d48:	ldr	r0, [sp, #8]
   38d4c:	and	r0, r0, #8
   38d50:	cmp	r0, #0
   38d54:	bne	38d68 <__assert_fail@plt+0x278d4>
   38d58:	movw	r0, #0
   38d5c:	and	r0, r0, #1
   38d60:	strb	r0, [sp, #23]
   38d64:	b	38d74 <__assert_fail@plt+0x278e0>
   38d68:	movw	r0, #1
   38d6c:	and	r0, r0, #1
   38d70:	strb	r0, [sp, #23]
   38d74:	ldrb	r0, [sp, #23]
   38d78:	and	r0, r0, #1
   38d7c:	add	sp, sp, #24
   38d80:	bx	lr
   38d84:	push	{fp, lr}
   38d88:	mov	fp, sp
   38d8c:	sub	sp, sp, #24
   38d90:	ldr	ip, [fp, #8]
   38d94:	str	r0, [fp, #-4]
   38d98:	str	r1, [fp, #-8]
   38d9c:	str	r2, [sp, #12]
   38da0:	str	r3, [sp, #8]
   38da4:	ldr	r0, [fp, #-8]
   38da8:	ldr	r1, [fp, #-4]
   38dac:	str	r0, [r1]
   38db0:	ldr	r0, [sp, #12]
   38db4:	ldr	r1, [fp, #-4]
   38db8:	str	r0, [r1, #4]
   38dbc:	ldr	r0, [sp, #8]
   38dc0:	ldr	r1, [fp, #-4]
   38dc4:	str	r0, [r1, #8]
   38dc8:	ldr	r0, [fp, #8]
   38dcc:	ldr	r1, [fp, #-4]
   38dd0:	str	r0, [r1, #12]
   38dd4:	ldr	r0, [fp, #-4]
   38dd8:	add	r0, r0, #16
   38ddc:	movw	r1, #0
   38de0:	and	r1, r1, #255	; 0xff
   38de4:	movw	r2, #12
   38de8:	str	ip, [sp, #4]
   38dec:	bl	113d4 <memset@plt>
   38df0:	mov	sp, fp
   38df4:	pop	{fp, pc}
   38df8:	push	{fp, lr}
   38dfc:	mov	fp, sp
   38e00:	sub	sp, sp, #40	; 0x28
   38e04:	str	r0, [fp, #-8]
   38e08:	str	r1, [fp, #-12]
   38e0c:	movw	r0, #0
   38e10:	str	r0, [sp, #20]
   38e14:	ldr	r1, [fp, #-12]
   38e18:	ldr	r1, [r1, #12]
   38e1c:	str	r1, [sp, #16]
   38e20:	ldr	r1, [fp, #-8]
   38e24:	ldr	r1, [r1, #100]	; 0x64
   38e28:	cmp	r1, r0
   38e2c:	beq	38e54 <__assert_fail@plt+0x279c0>
   38e30:	ldr	r0, [fp, #-8]
   38e34:	ldr	r0, [r0, #100]	; 0x64
   38e38:	ldr	r1, [sp, #16]
   38e3c:	add	r0, r0, r1, lsl #2
   38e40:	ldr	r0, [r0]
   38e44:	movw	r1, #0
   38e48:	cmp	r0, r1
   38e4c:	beq	38e54 <__assert_fail@plt+0x279c0>
   38e50:	b	38e54 <__assert_fail@plt+0x279c0>
   38e54:	ldr	r0, [fp, #-12]
   38e58:	ldr	r1, [r0, #8]
   38e5c:	add	r0, sp, #4
   38e60:	bl	2fac4 <__assert_fail@plt+0x1e630>
   38e64:	str	r0, [fp, #-16]
   38e68:	ldr	r0, [fp, #-16]
   38e6c:	cmp	r0, #0
   38e70:	beq	38e80 <__assert_fail@plt+0x279ec>
   38e74:	ldr	r0, [fp, #-16]
   38e78:	str	r0, [fp, #-4]
   38e7c:	b	38fe4 <__assert_fail@plt+0x27b50>
   38e80:	ldr	r0, [fp, #-8]
   38e84:	ldr	r1, [fp, #-12]
   38e88:	ldr	r2, [sp, #16]
   38e8c:	add	r3, sp, #4
   38e90:	bl	39138 <__assert_fail@plt+0x27ca4>
   38e94:	str	r0, [fp, #-16]
   38e98:	ldr	r0, [fp, #-16]
   38e9c:	cmp	r0, #0
   38ea0:	beq	38ea8 <__assert_fail@plt+0x27a14>
   38ea4:	b	38fd4 <__assert_fail@plt+0x27b40>
   38ea8:	b	38eac <__assert_fail@plt+0x27a18>
   38eac:	ldr	r0, [sp, #16]
   38eb0:	cmp	r0, #0
   38eb4:	ble	38fcc <__assert_fail@plt+0x27b38>
   38eb8:	ldr	r0, [fp, #-12]
   38ebc:	ldr	r0, [r0]
   38ec0:	ldr	r1, [sp, #16]
   38ec4:	add	r0, r0, r1, lsl #2
   38ec8:	ldr	r0, [r0]
   38ecc:	movw	r1, #0
   38ed0:	cmp	r0, r1
   38ed4:	bne	38ee8 <__assert_fail@plt+0x27a54>
   38ed8:	ldr	r0, [sp, #20]
   38edc:	add	r0, r0, #1
   38ee0:	str	r0, [sp]
   38ee4:	b	38ef4 <__assert_fail@plt+0x27a60>
   38ee8:	movw	r0, #0
   38eec:	str	r0, [sp]
   38ef0:	b	38ef4 <__assert_fail@plt+0x27a60>
   38ef4:	ldr	r0, [sp]
   38ef8:	str	r0, [sp, #20]
   38efc:	ldr	r0, [sp, #20]
   38f00:	ldr	r1, [fp, #-8]
   38f04:	ldr	r1, [r1, #120]	; 0x78
   38f08:	cmp	r0, r1
   38f0c:	ble	38f40 <__assert_fail@plt+0x27aac>
   38f10:	ldr	r0, [fp, #-12]
   38f14:	ldr	r0, [r0]
   38f18:	ldr	r1, [sp, #16]
   38f1c:	lsl	r2, r1, #2
   38f20:	movw	r1, #0
   38f24:	and	r1, r1, #255	; 0xff
   38f28:	bl	113d4 <memset@plt>
   38f2c:	ldr	r0, [sp, #12]
   38f30:	bl	138a4 <__assert_fail@plt+0x2410>
   38f34:	movw	r0, #0
   38f38:	str	r0, [fp, #-4]
   38f3c:	b	38fe4 <__assert_fail@plt+0x27b50>
   38f40:	mov	r0, #0
   38f44:	str	r0, [sp, #8]
   38f48:	ldr	r0, [sp, #16]
   38f4c:	sub	r0, r0, #1
   38f50:	str	r0, [sp, #16]
   38f54:	ldr	r0, [fp, #-8]
   38f58:	ldr	r0, [r0, #100]	; 0x64
   38f5c:	ldr	r1, [sp, #16]
   38f60:	add	r0, r0, r1, lsl #2
   38f64:	ldr	r0, [r0]
   38f68:	movw	r1, #0
   38f6c:	cmp	r0, r1
   38f70:	beq	38fa0 <__assert_fail@plt+0x27b0c>
   38f74:	ldr	r0, [fp, #-8]
   38f78:	ldr	r1, [fp, #-12]
   38f7c:	ldr	r2, [sp, #16]
   38f80:	add	r3, sp, #4
   38f84:	bl	3933c <__assert_fail@plt+0x27ea8>
   38f88:	str	r0, [fp, #-16]
   38f8c:	ldr	r0, [fp, #-16]
   38f90:	cmp	r0, #0
   38f94:	beq	38f9c <__assert_fail@plt+0x27b08>
   38f98:	b	38fd4 <__assert_fail@plt+0x27b40>
   38f9c:	b	38fa0 <__assert_fail@plt+0x27b0c>
   38fa0:	ldr	r0, [fp, #-8]
   38fa4:	ldr	r1, [fp, #-12]
   38fa8:	ldr	r2, [sp, #16]
   38fac:	add	r3, sp, #4
   38fb0:	bl	39138 <__assert_fail@plt+0x27ca4>
   38fb4:	str	r0, [fp, #-16]
   38fb8:	ldr	r0, [fp, #-16]
   38fbc:	cmp	r0, #0
   38fc0:	beq	38fc8 <__assert_fail@plt+0x27b34>
   38fc4:	b	38fd4 <__assert_fail@plt+0x27b40>
   38fc8:	b	38eac <__assert_fail@plt+0x27a18>
   38fcc:	movw	r0, #0
   38fd0:	str	r0, [fp, #-16]
   38fd4:	ldr	r0, [sp, #12]
   38fd8:	bl	138a4 <__assert_fail@plt+0x2410>
   38fdc:	ldr	r0, [fp, #-16]
   38fe0:	str	r0, [fp, #-4]
   38fe4:	ldr	r0, [fp, #-4]
   38fe8:	mov	sp, fp
   38fec:	pop	{fp, pc}
   38ff0:	push	{fp, lr}
   38ff4:	mov	fp, sp
   38ff8:	sub	sp, sp, #48	; 0x30
   38ffc:	str	r0, [fp, #-8]
   39000:	str	r1, [fp, #-12]
   39004:	str	r2, [fp, #-16]
   39008:	str	r3, [fp, #-20]	; 0xffffffec
   3900c:	movw	r0, #0
   39010:	str	r0, [sp, #24]
   39014:	ldr	r0, [sp, #24]
   39018:	ldr	r1, [fp, #-20]	; 0xffffffec
   3901c:	cmp	r0, r1
   39020:	bge	39124 <__assert_fail@plt+0x27c90>
   39024:	ldr	r0, [fp, #-12]
   39028:	ldr	r1, [sp, #24]
   3902c:	add	r0, r0, r1, lsl #2
   39030:	ldr	r0, [r0]
   39034:	movw	r1, #0
   39038:	cmp	r0, r1
   3903c:	bne	3905c <__assert_fail@plt+0x27bc8>
   39040:	ldr	r0, [fp, #-16]
   39044:	ldr	r1, [sp, #24]
   39048:	ldr	r0, [r0, r1, lsl #2]
   3904c:	ldr	r2, [fp, #-12]
   39050:	add	r1, r2, r1, lsl #2
   39054:	str	r0, [r1]
   39058:	b	39110 <__assert_fail@plt+0x27c7c>
   3905c:	ldr	r0, [fp, #-16]
   39060:	ldr	r1, [sp, #24]
   39064:	add	r0, r0, r1, lsl #2
   39068:	ldr	r0, [r0]
   3906c:	movw	r1, #0
   39070:	cmp	r0, r1
   39074:	beq	3910c <__assert_fail@plt+0x27c78>
   39078:	ldr	r0, [fp, #-12]
   3907c:	ldr	r1, [sp, #24]
   39080:	ldr	r0, [r0, r1, lsl #2]
   39084:	add	r0, r0, #4
   39088:	ldr	r2, [fp, #-16]
   3908c:	add	r1, r2, r1, lsl #2
   39090:	ldr	r1, [r1]
   39094:	add	r2, r1, #4
   39098:	add	r1, sp, #8
   3909c:	str	r0, [sp, #4]
   390a0:	mov	r0, r1
   390a4:	ldr	r1, [sp, #4]
   390a8:	bl	34f88 <__assert_fail@plt+0x23af4>
   390ac:	str	r0, [sp, #20]
   390b0:	ldr	r0, [sp, #20]
   390b4:	cmp	r0, #0
   390b8:	beq	390c8 <__assert_fail@plt+0x27c34>
   390bc:	ldr	r0, [sp, #20]
   390c0:	str	r0, [fp, #-4]
   390c4:	b	3912c <__assert_fail@plt+0x27c98>
   390c8:	ldr	r1, [fp, #-8]
   390cc:	add	r0, sp, #20
   390d0:	add	r2, sp, #8
   390d4:	bl	36b80 <__assert_fail@plt+0x256ec>
   390d8:	ldr	r1, [fp, #-12]
   390dc:	ldr	r2, [sp, #24]
   390e0:	add	r1, r1, r2, lsl #2
   390e4:	str	r0, [r1]
   390e8:	ldr	r0, [sp, #16]
   390ec:	bl	138a4 <__assert_fail@plt+0x2410>
   390f0:	ldr	r0, [sp, #20]
   390f4:	cmp	r0, #0
   390f8:	beq	39108 <__assert_fail@plt+0x27c74>
   390fc:	ldr	r0, [sp, #20]
   39100:	str	r0, [fp, #-4]
   39104:	b	3912c <__assert_fail@plt+0x27c98>
   39108:	b	3910c <__assert_fail@plt+0x27c78>
   3910c:	b	39110 <__assert_fail@plt+0x27c7c>
   39110:	b	39114 <__assert_fail@plt+0x27c80>
   39114:	ldr	r0, [sp, #24]
   39118:	add	r0, r0, #1
   3911c:	str	r0, [sp, #24]
   39120:	b	39014 <__assert_fail@plt+0x27b80>
   39124:	movw	r0, #0
   39128:	str	r0, [fp, #-4]
   3912c:	ldr	r0, [fp, #-4]
   39130:	mov	sp, fp
   39134:	pop	{fp, pc}
   39138:	push	{fp, lr}
   3913c:	mov	fp, sp
   39140:	sub	sp, sp, #48	; 0x30
   39144:	str	r0, [fp, #-8]
   39148:	str	r1, [fp, #-12]
   3914c:	str	r2, [fp, #-16]
   39150:	str	r3, [fp, #-20]	; 0xffffffec
   39154:	ldr	r0, [fp, #-8]
   39158:	ldr	r0, [r0, #84]	; 0x54
   3915c:	str	r0, [sp, #24]
   39160:	mov	r0, #0
   39164:	str	r0, [sp, #20]
   39168:	ldr	r0, [fp, #-8]
   3916c:	ldr	r0, [r0, #100]	; 0x64
   39170:	ldr	r1, [fp, #-16]
   39174:	add	r0, r0, r1, lsl #2
   39178:	ldr	r0, [r0]
   3917c:	movw	r1, #0
   39180:	cmp	r0, r1
   39184:	bne	39194 <__assert_fail@plt+0x27d00>
   39188:	movw	r0, #0
   3918c:	str	r0, [sp, #12]
   39190:	b	391b0 <__assert_fail@plt+0x27d1c>
   39194:	ldr	r0, [fp, #-8]
   39198:	ldr	r0, [r0, #100]	; 0x64
   3919c:	ldr	r1, [fp, #-16]
   391a0:	add	r0, r0, r1, lsl #2
   391a4:	ldr	r0, [r0]
   391a8:	add	r0, r0, #4
   391ac:	str	r0, [sp, #12]
   391b0:	ldr	r0, [sp, #12]
   391b4:	str	r0, [sp, #16]
   391b8:	ldr	r0, [fp, #-20]	; 0xffffffec
   391bc:	ldr	r0, [r0, #4]
   391c0:	cmp	r0, #0
   391c4:	bne	391e4 <__assert_fail@plt+0x27d50>
   391c8:	ldr	r0, [fp, #-12]
   391cc:	ldr	r0, [r0]
   391d0:	ldr	r1, [fp, #-16]
   391d4:	add	r0, r0, r1, lsl #2
   391d8:	movw	r1, #0
   391dc:	str	r1, [r0]
   391e0:	b	392c0 <__assert_fail@plt+0x27e2c>
   391e4:	ldr	r0, [sp, #16]
   391e8:	movw	r1, #0
   391ec:	cmp	r0, r1
   391f0:	beq	39280 <__assert_fail@plt+0x27dec>
   391f4:	ldr	r0, [sp, #24]
   391f8:	ldr	r1, [fp, #-20]	; 0xffffffec
   391fc:	ldr	r2, [sp, #16]
   39200:	bl	39590 <__assert_fail@plt+0x280fc>
   39204:	str	r0, [sp, #20]
   39208:	ldr	r0, [sp, #20]
   3920c:	cmp	r0, #0
   39210:	beq	39220 <__assert_fail@plt+0x27d8c>
   39214:	ldr	r0, [sp, #20]
   39218:	str	r0, [fp, #-4]
   3921c:	b	39330 <__assert_fail@plt+0x27e9c>
   39220:	ldr	r0, [fp, #-12]
   39224:	ldr	r0, [r0, #20]
   39228:	cmp	r0, #0
   3922c:	beq	3927c <__assert_fail@plt+0x27de8>
   39230:	ldr	r0, [sp, #24]
   39234:	ldr	r1, [fp, #-20]	; 0xffffffec
   39238:	ldr	r2, [sp, #16]
   3923c:	ldr	r3, [fp, #-12]
   39240:	add	r3, r3, #16
   39244:	ldr	ip, [fp, #-8]
   39248:	ldr	ip, [ip, #116]	; 0x74
   3924c:	ldr	lr, [fp, #-16]
   39250:	str	ip, [sp]
   39254:	str	lr, [sp, #4]
   39258:	bl	396c4 <__assert_fail@plt+0x28230>
   3925c:	str	r0, [sp, #20]
   39260:	ldr	r0, [sp, #20]
   39264:	cmp	r0, #0
   39268:	beq	39278 <__assert_fail@plt+0x27de4>
   3926c:	ldr	r0, [sp, #20]
   39270:	str	r0, [fp, #-4]
   39274:	b	39330 <__assert_fail@plt+0x27e9c>
   39278:	b	3927c <__assert_fail@plt+0x27de8>
   3927c:	b	39280 <__assert_fail@plt+0x27dec>
   39280:	ldr	r1, [sp, #24]
   39284:	ldr	r2, [fp, #-20]	; 0xffffffec
   39288:	add	r0, sp, #20
   3928c:	bl	36b80 <__assert_fail@plt+0x256ec>
   39290:	ldr	r1, [fp, #-12]
   39294:	ldr	r1, [r1]
   39298:	ldr	r2, [fp, #-16]
   3929c:	add	r1, r1, r2, lsl #2
   392a0:	str	r0, [r1]
   392a4:	ldr	r0, [sp, #20]
   392a8:	cmp	r0, #0
   392ac:	beq	392bc <__assert_fail@plt+0x27e28>
   392b0:	ldr	r0, [sp, #20]
   392b4:	str	r0, [fp, #-4]
   392b8:	b	39330 <__assert_fail@plt+0x27e9c>
   392bc:	b	392c0 <__assert_fail@plt+0x27e2c>
   392c0:	ldr	r0, [sp, #16]
   392c4:	movw	r1, #0
   392c8:	cmp	r0, r1
   392cc:	beq	39328 <__assert_fail@plt+0x27e94>
   392d0:	ldr	r0, [fp, #-8]
   392d4:	ldr	r0, [r0, #100]	; 0x64
   392d8:	ldr	r1, [fp, #-16]
   392dc:	ldr	r0, [r0, r1, lsl #2]
   392e0:	ldrb	r0, [r0, #52]	; 0x34
   392e4:	ubfx	r0, r0, #6, #1
   392e8:	and	r0, r0, #255	; 0xff
   392ec:	cmp	r0, #0
   392f0:	beq	39328 <__assert_fail@plt+0x27e94>
   392f4:	ldr	r0, [fp, #-8]
   392f8:	ldr	r1, [fp, #-12]
   392fc:	ldr	r2, [fp, #-16]
   39300:	ldr	r3, [sp, #16]
   39304:	bl	39a94 <__assert_fail@plt+0x28600>
   39308:	str	r0, [sp, #20]
   3930c:	ldr	r0, [sp, #20]
   39310:	cmp	r0, #0
   39314:	beq	39324 <__assert_fail@plt+0x27e90>
   39318:	ldr	r0, [sp, #20]
   3931c:	str	r0, [fp, #-4]
   39320:	b	39330 <__assert_fail@plt+0x27e9c>
   39324:	b	39328 <__assert_fail@plt+0x27e94>
   39328:	movw	r0, #0
   3932c:	str	r0, [fp, #-4]
   39330:	ldr	r0, [fp, #-4]
   39334:	mov	sp, fp
   39338:	pop	{fp, pc}
   3933c:	push	{fp, lr}
   39340:	mov	fp, sp
   39344:	sub	sp, sp, #56	; 0x38
   39348:	str	r0, [fp, #-8]
   3934c:	str	r1, [fp, #-12]
   39350:	str	r2, [fp, #-16]
   39354:	str	r3, [fp, #-20]	; 0xffffffec
   39358:	ldr	r0, [fp, #-8]
   3935c:	ldr	r0, [r0, #84]	; 0x54
   39360:	str	r0, [fp, #-24]	; 0xffffffe8
   39364:	ldr	r0, [fp, #-8]
   39368:	ldr	r0, [r0, #100]	; 0x64
   3936c:	ldr	r1, [fp, #-16]
   39370:	add	r0, r0, r1, lsl #2
   39374:	ldr	r0, [r0]
   39378:	add	r0, r0, #16
   3937c:	str	r0, [sp, #28]
   39380:	movw	r0, #0
   39384:	str	r0, [sp, #24]
   39388:	ldr	r0, [sp, #24]
   3938c:	ldr	r1, [sp, #28]
   39390:	ldr	r1, [r1, #4]
   39394:	cmp	r0, r1
   39398:	bge	3957c <__assert_fail@plt+0x280e8>
   3939c:	ldr	r0, [sp, #28]
   393a0:	ldr	r0, [r0, #8]
   393a4:	ldr	r1, [sp, #24]
   393a8:	ldr	r0, [r0, r1, lsl #2]
   393ac:	str	r0, [sp, #20]
   393b0:	mov	r0, #0
   393b4:	str	r0, [sp, #16]
   393b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   393bc:	ldr	r0, [r0]
   393c0:	ldr	r1, [sp, #20]
   393c4:	add	r0, r0, r1, lsl #3
   393c8:	ldr	r0, [r0, #4]
   393cc:	and	r0, r0, #255	; 0xff
   393d0:	and	r0, r0, #8
   393d4:	cmp	r0, #0
   393d8:	bne	393e0 <__assert_fail@plt+0x27f4c>
   393dc:	b	393e0 <__assert_fail@plt+0x27f4c>
   393e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   393e4:	ldr	r0, [r0]
   393e8:	ldr	r1, [sp, #20]
   393ec:	add	r0, r0, r1, lsl #3
   393f0:	ldr	r0, [r0, #4]
   393f4:	lsr	r0, r0, #20
   393f8:	and	r0, r0, #1
   393fc:	cmp	r0, #0
   39400:	beq	39428 <__assert_fail@plt+0x27f94>
   39404:	ldr	r0, [fp, #-8]
   39408:	ldr	r1, [fp, #-12]
   3940c:	ldr	r2, [sp, #20]
   39410:	ldr	r3, [fp, #-16]
   39414:	ldr	ip, [fp, #-12]
   39418:	ldr	ip, [ip, #12]
   3941c:	str	ip, [sp]
   39420:	bl	3ab2c <__assert_fail@plt+0x29698>
   39424:	str	r0, [sp, #16]
   39428:	ldr	r0, [sp, #16]
   3942c:	cmp	r0, #0
   39430:	bne	394bc <__assert_fail@plt+0x28028>
   39434:	ldr	r0, [fp, #-8]
   39438:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3943c:	ldr	r1, [r1]
   39440:	ldr	r2, [sp, #20]
   39444:	add	r1, r1, r2, lsl #3
   39448:	ldr	r2, [fp, #-16]
   3944c:	bl	374c0 <__assert_fail@plt+0x2602c>
   39450:	tst	r0, #1
   39454:	beq	394bc <__assert_fail@plt+0x28028>
   39458:	ldr	r0, [fp, #-12]
   3945c:	ldr	r0, [r0]
   39460:	ldr	r1, [fp, #-16]
   39464:	add	r1, r1, #1
   39468:	add	r0, r0, r1, lsl #2
   3946c:	ldr	r0, [r0]
   39470:	movw	r1, #0
   39474:	cmp	r0, r1
   39478:	beq	394bc <__assert_fail@plt+0x28028>
   3947c:	ldr	r0, [fp, #-12]
   39480:	ldr	r0, [r0]
   39484:	ldr	r1, [fp, #-16]
   39488:	add	r0, r0, r1, lsl #2
   3948c:	ldr	r0, [r0, #4]
   39490:	add	r0, r0, #4
   39494:	ldr	r1, [fp, #-24]	; 0xffffffe8
   39498:	ldr	r1, [r1, #12]
   3949c:	ldr	r2, [sp, #20]
   394a0:	add	r1, r1, r2, lsl #2
   394a4:	ldr	r1, [r1]
   394a8:	bl	30e4c <__assert_fail@plt+0x1f9b8>
   394ac:	cmp	r0, #0
   394b0:	beq	394bc <__assert_fail@plt+0x28028>
   394b4:	movw	r0, #1
   394b8:	str	r0, [sp, #16]
   394bc:	ldr	r0, [sp, #16]
   394c0:	cmp	r0, #0
   394c4:	bne	394cc <__assert_fail@plt+0x28038>
   394c8:	b	3956c <__assert_fail@plt+0x280d8>
   394cc:	ldr	r0, [fp, #-12]
   394d0:	ldr	r0, [r0, #20]
   394d4:	cmp	r0, #0
   394d8:	beq	39534 <__assert_fail@plt+0x280a0>
   394dc:	ldr	r0, [fp, #-16]
   394e0:	ldr	r1, [sp, #16]
   394e4:	add	r0, r0, r1
   394e8:	str	r0, [sp, #8]
   394ec:	ldr	r0, [fp, #-8]
   394f0:	ldr	r1, [fp, #-12]
   394f4:	add	r1, r1, #16
   394f8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   394fc:	ldr	r2, [r2, #12]
   39500:	ldr	r3, [sp, #20]
   39504:	add	r2, r2, r3, lsl #2
   39508:	ldr	r2, [r2]
   3950c:	ldr	r3, [sp, #8]
   39510:	ldr	ip, [sp, #20]
   39514:	ldr	lr, [fp, #-16]
   39518:	str	ip, [sp]
   3951c:	str	lr, [sp, #4]
   39520:	bl	3a598 <__assert_fail@plt+0x29104>
   39524:	tst	r0, #1
   39528:	beq	39530 <__assert_fail@plt+0x2809c>
   3952c:	b	3956c <__assert_fail@plt+0x280d8>
   39530:	b	39534 <__assert_fail@plt+0x280a0>
   39534:	ldr	r0, [fp, #-20]	; 0xffffffec
   39538:	ldr	r1, [sp, #20]
   3953c:	bl	30990 <__assert_fail@plt+0x1f4fc>
   39540:	and	r0, r0, #1
   39544:	strb	r0, [sp, #15]
   39548:	ldrb	r0, [sp, #15]
   3954c:	mvn	r1, #0
   39550:	eor	r0, r0, r1
   39554:	tst	r0, #1
   39558:	beq	39568 <__assert_fail@plt+0x280d4>
   3955c:	movw	r0, #12
   39560:	str	r0, [fp, #-4]
   39564:	b	39584 <__assert_fail@plt+0x280f0>
   39568:	b	3956c <__assert_fail@plt+0x280d8>
   3956c:	ldr	r0, [sp, #24]
   39570:	add	r0, r0, #1
   39574:	str	r0, [sp, #24]
   39578:	b	39388 <__assert_fail@plt+0x27ef4>
   3957c:	movw	r0, #0
   39580:	str	r0, [fp, #-4]
   39584:	ldr	r0, [fp, #-4]
   39588:	mov	sp, fp
   3958c:	pop	{fp, pc}
   39590:	push	{fp, lr}
   39594:	mov	fp, sp
   39598:	sub	sp, sp, #32
   3959c:	str	r0, [fp, #-8]
   395a0:	str	r1, [fp, #-12]
   395a4:	str	r2, [sp, #16]
   395a8:	movw	r0, #0
   395ac:	str	r0, [sp, #12]
   395b0:	ldr	r1, [fp, #-8]
   395b4:	ldr	r2, [fp, #-12]
   395b8:	add	r0, sp, #12
   395bc:	bl	36b80 <__assert_fail@plt+0x256ec>
   395c0:	str	r0, [sp, #4]
   395c4:	ldr	r0, [sp, #12]
   395c8:	cmp	r0, #0
   395cc:	beq	395dc <__assert_fail@plt+0x28148>
   395d0:	ldr	r0, [sp, #12]
   395d4:	str	r0, [fp, #-4]
   395d8:	b	396b8 <__assert_fail@plt+0x28224>
   395dc:	ldr	r0, [sp, #4]
   395e0:	ldr	r0, [r0, #28]
   395e4:	cmp	r0, #0
   395e8:	bne	396a0 <__assert_fail@plt+0x2820c>
   395ec:	ldr	r0, [sp, #4]
   395f0:	add	r0, r0, #28
   395f4:	ldr	r1, [fp, #-12]
   395f8:	ldr	r1, [r1, #4]
   395fc:	bl	2ff28 <__assert_fail@plt+0x1ea94>
   39600:	str	r0, [sp, #12]
   39604:	ldr	r0, [sp, #12]
   39608:	cmp	r0, #0
   3960c:	beq	3961c <__assert_fail@plt+0x28188>
   39610:	movw	r0, #12
   39614:	str	r0, [fp, #-4]
   39618:	b	396b8 <__assert_fail@plt+0x28224>
   3961c:	movw	r0, #0
   39620:	str	r0, [sp, #8]
   39624:	ldr	r0, [sp, #8]
   39628:	ldr	r1, [fp, #-12]
   3962c:	ldr	r1, [r1, #4]
   39630:	cmp	r0, r1
   39634:	bge	3969c <__assert_fail@plt+0x28208>
   39638:	ldr	r0, [sp, #4]
   3963c:	add	r0, r0, #28
   39640:	ldr	r1, [fp, #-8]
   39644:	ldr	r1, [r1, #28]
   39648:	ldr	r2, [fp, #-12]
   3964c:	ldr	r2, [r2, #8]
   39650:	ldr	r3, [sp, #8]
   39654:	add	r2, r2, r3, lsl #2
   39658:	ldr	r2, [r2]
   3965c:	movw	r3, #12
   39660:	mul	r2, r2, r3
   39664:	add	r1, r1, r2
   39668:	bl	304a4 <__assert_fail@plt+0x1f010>
   3966c:	str	r0, [sp, #12]
   39670:	ldr	r0, [sp, #12]
   39674:	cmp	r0, #0
   39678:	beq	39688 <__assert_fail@plt+0x281f4>
   3967c:	movw	r0, #12
   39680:	str	r0, [fp, #-4]
   39684:	b	396b8 <__assert_fail@plt+0x28224>
   39688:	b	3968c <__assert_fail@plt+0x281f8>
   3968c:	ldr	r0, [sp, #8]
   39690:	add	r0, r0, #1
   39694:	str	r0, [sp, #8]
   39698:	b	39624 <__assert_fail@plt+0x28190>
   3969c:	b	396a0 <__assert_fail@plt+0x2820c>
   396a0:	ldr	r0, [fp, #-12]
   396a4:	ldr	r1, [sp, #16]
   396a8:	ldr	r2, [sp, #4]
   396ac:	add	r2, r2, #28
   396b0:	bl	39ec4 <__assert_fail@plt+0x28a30>
   396b4:	str	r0, [fp, #-4]
   396b8:	ldr	r0, [fp, #-4]
   396bc:	mov	sp, fp
   396c0:	pop	{fp, pc}
   396c4:	push	{fp, lr}
   396c8:	mov	fp, sp
   396cc:	sub	sp, sp, #80	; 0x50
   396d0:	ldr	ip, [fp, #12]
   396d4:	ldr	lr, [fp, #8]
   396d8:	str	r0, [fp, #-8]
   396dc:	str	r1, [fp, #-12]
   396e0:	str	r2, [fp, #-16]
   396e4:	str	r3, [fp, #-20]	; 0xffffffec
   396e8:	movw	r0, #0
   396ec:	str	r0, [fp, #-32]	; 0xffffffe0
   396f0:	str	lr, [sp, #8]
   396f4:	str	ip, [sp, #4]
   396f8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   396fc:	ldr	r1, [fp, #-20]	; 0xffffffec
   39700:	ldr	r1, [r1, #4]
   39704:	cmp	r0, r1
   39708:	bge	39a80 <__assert_fail@plt+0x285ec>
   3970c:	ldr	r0, [fp, #8]
   39710:	ldr	r1, [fp, #-20]	; 0xffffffec
   39714:	ldr	r1, [r1, #8]
   39718:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3971c:	add	r1, r1, r2, lsl #2
   39720:	ldr	r1, [r1]
   39724:	movw	r2, #24
   39728:	mul	r1, r1, r2
   3972c:	add	r0, r0, r1
   39730:	str	r0, [sp, #40]	; 0x28
   39734:	ldr	r0, [fp, #12]
   39738:	ldr	r1, [sp, #40]	; 0x28
   3973c:	ldr	r1, [r1, #8]
   39740:	cmp	r0, r1
   39744:	ble	3975c <__assert_fail@plt+0x282c8>
   39748:	ldr	r0, [sp, #40]	; 0x28
   3974c:	ldr	r0, [r0, #4]
   39750:	ldr	r1, [fp, #12]
   39754:	cmp	r0, r1
   39758:	bge	39760 <__assert_fail@plt+0x282cc>
   3975c:	b	39a70 <__assert_fail@plt+0x285dc>
   39760:	ldr	r0, [fp, #-8]
   39764:	ldr	r0, [r0]
   39768:	ldr	r1, [sp, #40]	; 0x28
   3976c:	ldr	r1, [r1]
   39770:	add	r0, r0, r1, lsl #3
   39774:	ldr	r0, [r0]
   39778:	str	r0, [fp, #-36]	; 0xffffffdc
   3977c:	ldr	r0, [sp, #40]	; 0x28
   39780:	ldr	r0, [r0, #12]
   39784:	ldr	r1, [fp, #12]
   39788:	cmp	r0, r1
   3978c:	bne	39998 <__assert_fail@plt+0x28504>
   39790:	mvn	r0, #0
   39794:	str	r0, [sp, #36]	; 0x24
   39798:	str	r0, [sp, #32]
   3979c:	movw	r0, #0
   397a0:	str	r0, [fp, #-28]	; 0xffffffe4
   397a4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   397a8:	ldr	r1, [fp, #-12]
   397ac:	ldr	r1, [r1, #4]
   397b0:	cmp	r0, r1
   397b4:	bge	3986c <__assert_fail@plt+0x283d8>
   397b8:	ldr	r0, [fp, #-12]
   397bc:	ldr	r0, [r0, #8]
   397c0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   397c4:	ldr	r0, [r0, r1, lsl #2]
   397c8:	str	r0, [sp, #28]
   397cc:	ldr	r0, [fp, #-8]
   397d0:	ldr	r0, [r0]
   397d4:	ldr	r1, [sp, #28]
   397d8:	add	r0, r0, r1, lsl #3
   397dc:	ldr	r0, [r0, #4]
   397e0:	and	r0, r0, #255	; 0xff
   397e4:	str	r0, [sp, #24]
   397e8:	ldr	r0, [sp, #24]
   397ec:	cmp	r0, #8
   397f0:	bne	39820 <__assert_fail@plt+0x2838c>
   397f4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   397f8:	ldr	r1, [fp, #-8]
   397fc:	ldr	r1, [r1]
   39800:	ldr	r2, [sp, #28]
   39804:	add	r1, r1, r2, lsl #3
   39808:	ldr	r1, [r1]
   3980c:	cmp	r0, r1
   39810:	bne	39820 <__assert_fail@plt+0x2838c>
   39814:	ldr	r0, [sp, #28]
   39818:	str	r0, [sp, #36]	; 0x24
   3981c:	b	39858 <__assert_fail@plt+0x283c4>
   39820:	ldr	r0, [sp, #24]
   39824:	cmp	r0, #9
   39828:	bne	39854 <__assert_fail@plt+0x283c0>
   3982c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   39830:	ldr	r1, [fp, #-8]
   39834:	ldr	r1, [r1]
   39838:	ldr	r2, [sp, #28]
   3983c:	add	r1, r1, r2, lsl #3
   39840:	ldr	r1, [r1]
   39844:	cmp	r0, r1
   39848:	bne	39854 <__assert_fail@plt+0x283c0>
   3984c:	ldr	r0, [sp, #28]
   39850:	str	r0, [sp, #32]
   39854:	b	39858 <__assert_fail@plt+0x283c4>
   39858:	b	3985c <__assert_fail@plt+0x283c8>
   3985c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   39860:	add	r0, r0, #1
   39864:	str	r0, [fp, #-28]	; 0xffffffe4
   39868:	b	397a4 <__assert_fail@plt+0x28310>
   3986c:	ldr	r0, [sp, #36]	; 0x24
   39870:	cmp	r0, #0
   39874:	blt	398ac <__assert_fail@plt+0x28418>
   39878:	ldr	r0, [fp, #-8]
   3987c:	ldr	r1, [sp, #36]	; 0x24
   39880:	ldr	r2, [fp, #-12]
   39884:	ldr	r3, [fp, #-16]
   39888:	bl	3a30c <__assert_fail@plt+0x28e78>
   3988c:	str	r0, [fp, #-24]	; 0xffffffe8
   39890:	ldr	r0, [fp, #-24]	; 0xffffffe8
   39894:	cmp	r0, #0
   39898:	beq	398a8 <__assert_fail@plt+0x28414>
   3989c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   398a0:	str	r0, [fp, #-4]
   398a4:	b	39a88 <__assert_fail@plt+0x285f4>
   398a8:	b	398ac <__assert_fail@plt+0x28418>
   398ac:	ldr	r0, [sp, #32]
   398b0:	cmp	r0, #0
   398b4:	blt	39994 <__assert_fail@plt+0x28500>
   398b8:	movw	r0, #0
   398bc:	str	r0, [fp, #-28]	; 0xffffffe4
   398c0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   398c4:	ldr	r1, [fp, #-12]
   398c8:	ldr	r1, [r1, #4]
   398cc:	cmp	r0, r1
   398d0:	bge	39990 <__assert_fail@plt+0x284fc>
   398d4:	ldr	r0, [fp, #-12]
   398d8:	ldr	r0, [r0, #8]
   398dc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   398e0:	add	r0, r0, r1, lsl #2
   398e4:	ldr	r0, [r0]
   398e8:	str	r0, [sp, #20]
   398ec:	ldr	r0, [fp, #-8]
   398f0:	ldr	r0, [r0, #28]
   398f4:	ldr	r1, [sp, #20]
   398f8:	movw	r2, #12
   398fc:	mul	r1, r1, r2
   39900:	add	r0, r0, r1
   39904:	ldr	r1, [sp, #32]
   39908:	bl	30e4c <__assert_fail@plt+0x1f9b8>
   3990c:	cmp	r0, #0
   39910:	bne	3997c <__assert_fail@plt+0x284e8>
   39914:	ldr	r0, [fp, #-8]
   39918:	ldr	r0, [r0, #24]
   3991c:	ldr	r1, [sp, #20]
   39920:	movw	r2, #12
   39924:	mul	r1, r1, r2
   39928:	add	r0, r0, r1
   3992c:	ldr	r1, [sp, #32]
   39930:	bl	30e4c <__assert_fail@plt+0x1f9b8>
   39934:	cmp	r0, #0
   39938:	bne	3997c <__assert_fail@plt+0x284e8>
   3993c:	ldr	r0, [fp, #-8]
   39940:	ldr	r1, [sp, #20]
   39944:	ldr	r2, [fp, #-12]
   39948:	ldr	r3, [fp, #-16]
   3994c:	bl	3a30c <__assert_fail@plt+0x28e78>
   39950:	str	r0, [fp, #-24]	; 0xffffffe8
   39954:	ldr	r0, [fp, #-24]	; 0xffffffe8
   39958:	cmp	r0, #0
   3995c:	beq	3996c <__assert_fail@plt+0x284d8>
   39960:	ldr	r0, [fp, #-24]	; 0xffffffe8
   39964:	str	r0, [fp, #-4]
   39968:	b	39a88 <__assert_fail@plt+0x285f4>
   3996c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   39970:	mvn	r1, #0
   39974:	add	r0, r0, r1
   39978:	str	r0, [fp, #-28]	; 0xffffffe4
   3997c:	b	39980 <__assert_fail@plt+0x284ec>
   39980:	ldr	r0, [fp, #-28]	; 0xffffffe4
   39984:	add	r0, r0, #1
   39988:	str	r0, [fp, #-28]	; 0xffffffe4
   3998c:	b	398c0 <__assert_fail@plt+0x2842c>
   39990:	b	39994 <__assert_fail@plt+0x28500>
   39994:	b	39a6c <__assert_fail@plt+0x285d8>
   39998:	movw	r0, #0
   3999c:	str	r0, [fp, #-28]	; 0xffffffe4
   399a0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   399a4:	ldr	r1, [fp, #-12]
   399a8:	ldr	r1, [r1, #4]
   399ac:	cmp	r0, r1
   399b0:	bge	39a68 <__assert_fail@plt+0x285d4>
   399b4:	ldr	r0, [fp, #-12]
   399b8:	ldr	r0, [r0, #8]
   399bc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   399c0:	ldr	r0, [r0, r1, lsl #2]
   399c4:	str	r0, [sp, #16]
   399c8:	ldr	r0, [fp, #-8]
   399cc:	ldr	r0, [r0]
   399d0:	ldr	r1, [sp, #16]
   399d4:	add	r0, r0, r1, lsl #3
   399d8:	ldr	r0, [r0, #4]
   399dc:	and	r0, r0, #255	; 0xff
   399e0:	str	r0, [sp, #12]
   399e4:	ldr	r0, [sp, #12]
   399e8:	cmp	r0, #9
   399ec:	beq	399fc <__assert_fail@plt+0x28568>
   399f0:	ldr	r0, [sp, #12]
   399f4:	cmp	r0, #8
   399f8:	bne	39a54 <__assert_fail@plt+0x285c0>
   399fc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   39a00:	ldr	r1, [fp, #-8]
   39a04:	ldr	r1, [r1]
   39a08:	ldr	r2, [sp, #16]
   39a0c:	add	r1, r1, r2, lsl #3
   39a10:	ldr	r1, [r1]
   39a14:	cmp	r0, r1
   39a18:	beq	39a20 <__assert_fail@plt+0x2858c>
   39a1c:	b	39a58 <__assert_fail@plt+0x285c4>
   39a20:	ldr	r0, [fp, #-8]
   39a24:	ldr	r1, [sp, #16]
   39a28:	ldr	r2, [fp, #-12]
   39a2c:	ldr	r3, [fp, #-16]
   39a30:	bl	3a30c <__assert_fail@plt+0x28e78>
   39a34:	str	r0, [fp, #-24]	; 0xffffffe8
   39a38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   39a3c:	cmp	r0, #0
   39a40:	beq	39a50 <__assert_fail@plt+0x285bc>
   39a44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   39a48:	str	r0, [fp, #-4]
   39a4c:	b	39a88 <__assert_fail@plt+0x285f4>
   39a50:	b	39a54 <__assert_fail@plt+0x285c0>
   39a54:	b	39a58 <__assert_fail@plt+0x285c4>
   39a58:	ldr	r0, [fp, #-28]	; 0xffffffe4
   39a5c:	add	r0, r0, #1
   39a60:	str	r0, [fp, #-28]	; 0xffffffe4
   39a64:	b	399a0 <__assert_fail@plt+0x2850c>
   39a68:	b	39a6c <__assert_fail@plt+0x285d8>
   39a6c:	b	39a70 <__assert_fail@plt+0x285dc>
   39a70:	ldr	r0, [fp, #-32]	; 0xffffffe0
   39a74:	add	r0, r0, #1
   39a78:	str	r0, [fp, #-32]	; 0xffffffe0
   39a7c:	b	396f8 <__assert_fail@plt+0x28264>
   39a80:	movw	r0, #0
   39a84:	str	r0, [fp, #-4]
   39a88:	ldr	r0, [fp, #-4]
   39a8c:	mov	sp, fp
   39a90:	pop	{fp, pc}
   39a94:	push	{fp, lr}
   39a98:	mov	fp, sp
   39a9c:	sub	sp, sp, #128	; 0x80
   39aa0:	str	r0, [fp, #-8]
   39aa4:	str	r1, [fp, #-12]
   39aa8:	str	r2, [fp, #-16]
   39aac:	str	r3, [fp, #-20]	; 0xffffffec
   39ab0:	ldr	r0, [fp, #-8]
   39ab4:	ldr	r0, [r0, #84]	; 0x54
   39ab8:	str	r0, [fp, #-24]	; 0xffffffe8
   39abc:	ldr	r0, [fp, #-8]
   39ac0:	ldr	r1, [fp, #-16]
   39ac4:	bl	352d4 <__assert_fail@plt+0x23e40>
   39ac8:	str	r0, [sp, #60]	; 0x3c
   39acc:	ldr	r0, [sp, #60]	; 0x3c
   39ad0:	cmn	r0, #1
   39ad4:	bne	39ae4 <__assert_fail@plt+0x28650>
   39ad8:	movw	r0, #0
   39adc:	str	r0, [fp, #-4]
   39ae0:	b	39eb8 <__assert_fail@plt+0x28a24>
   39ae4:	movw	r0, #0
   39ae8:	str	r0, [sp, #64]	; 0x40
   39aec:	str	r0, [fp, #-32]	; 0xffffffe0
   39af0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   39af4:	ldr	r1, [fp, #-20]	; 0xffffffec
   39af8:	ldr	r1, [r1, #4]
   39afc:	cmp	r0, r1
   39b00:	bge	39e90 <__assert_fail@plt+0x289fc>
   39b04:	ldr	r0, [fp, #-20]	; 0xffffffec
   39b08:	ldr	r0, [r0, #8]
   39b0c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   39b10:	ldr	r0, [r0, r1, lsl #2]
   39b14:	str	r0, [fp, #-36]	; 0xffffffdc
   39b18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   39b1c:	ldr	r0, [r0]
   39b20:	ldr	r1, [fp, #-36]	; 0xffffffdc
   39b24:	add	r0, r0, r1, lsl #3
   39b28:	ldr	r0, [r0, #4]
   39b2c:	and	r0, r0, #255	; 0xff
   39b30:	str	r0, [sp, #52]	; 0x34
   39b34:	ldr	r0, [fp, #-36]	; 0xffffffdc
   39b38:	ldr	r1, [fp, #-12]
   39b3c:	ldr	r1, [r1, #8]
   39b40:	cmp	r0, r1
   39b44:	bne	39b60 <__assert_fail@plt+0x286cc>
   39b48:	ldr	r0, [fp, #-16]
   39b4c:	ldr	r1, [fp, #-12]
   39b50:	ldr	r1, [r1, #12]
   39b54:	cmp	r0, r1
   39b58:	bne	39b60 <__assert_fail@plt+0x286cc>
   39b5c:	b	39e80 <__assert_fail@plt+0x289ec>
   39b60:	ldr	r0, [sp, #52]	; 0x34
   39b64:	cmp	r0, #4
   39b68:	beq	39b70 <__assert_fail@plt+0x286dc>
   39b6c:	b	39e80 <__assert_fail@plt+0x289ec>
   39b70:	ldr	r0, [fp, #-8]
   39b74:	ldr	r0, [r0, #116]	; 0x74
   39b78:	ldr	r1, [sp, #60]	; 0x3c
   39b7c:	movw	r2, #24
   39b80:	mul	r1, r1, r2
   39b84:	add	r0, r0, r1
   39b88:	str	r0, [sp, #48]	; 0x30
   39b8c:	ldr	r0, [sp, #60]	; 0x3c
   39b90:	str	r0, [sp, #56]	; 0x38
   39b94:	ldr	r0, [sp, #48]	; 0x30
   39b98:	ldr	r0, [r0]
   39b9c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   39ba0:	cmp	r0, r1
   39ba4:	beq	39bac <__assert_fail@plt+0x28718>
   39ba8:	b	39e58 <__assert_fail@plt+0x289c4>
   39bac:	ldr	r0, [sp, #48]	; 0x30
   39bb0:	ldr	r0, [r0, #12]
   39bb4:	ldr	r1, [sp, #48]	; 0x30
   39bb8:	ldr	r1, [r1, #8]
   39bbc:	sub	r0, r0, r1
   39bc0:	str	r0, [sp, #44]	; 0x2c
   39bc4:	ldr	r0, [fp, #-16]
   39bc8:	ldr	r1, [sp, #44]	; 0x2c
   39bcc:	add	r0, r0, r1
   39bd0:	str	r0, [sp, #40]	; 0x28
   39bd4:	ldr	r0, [sp, #44]	; 0x2c
   39bd8:	cmp	r0, #0
   39bdc:	beq	39bfc <__assert_fail@plt+0x28768>
   39be0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   39be4:	ldr	r0, [r0, #12]
   39be8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   39bec:	add	r0, r0, r1, lsl #2
   39bf0:	ldr	r0, [r0]
   39bf4:	str	r0, [sp, #24]
   39bf8:	b	39c20 <__assert_fail@plt+0x2878c>
   39bfc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   39c00:	ldr	r0, [r0, #20]
   39c04:	ldr	r1, [fp, #-36]	; 0xffffffdc
   39c08:	movw	r2, #12
   39c0c:	mul	r1, r1, r2
   39c10:	add	r0, r0, r1
   39c14:	ldr	r0, [r0, #8]
   39c18:	ldr	r0, [r0]
   39c1c:	str	r0, [sp, #24]
   39c20:	ldr	r0, [sp, #24]
   39c24:	str	r0, [sp, #36]	; 0x24
   39c28:	ldr	r0, [sp, #40]	; 0x28
   39c2c:	ldr	r1, [fp, #-12]
   39c30:	ldr	r1, [r1, #12]
   39c34:	cmp	r0, r1
   39c38:	bgt	39cd4 <__assert_fail@plt+0x28840>
   39c3c:	ldr	r0, [fp, #-12]
   39c40:	ldr	r0, [r0]
   39c44:	ldr	r1, [sp, #40]	; 0x28
   39c48:	add	r0, r0, r1, lsl #2
   39c4c:	ldr	r0, [r0]
   39c50:	movw	r1, #0
   39c54:	cmp	r0, r1
   39c58:	beq	39cd4 <__assert_fail@plt+0x28840>
   39c5c:	ldr	r0, [fp, #-12]
   39c60:	ldr	r0, [r0]
   39c64:	ldr	r1, [sp, #40]	; 0x28
   39c68:	add	r0, r0, r1, lsl #2
   39c6c:	ldr	r0, [r0]
   39c70:	movw	r1, #0
   39c74:	cmp	r0, r1
   39c78:	beq	39cd4 <__assert_fail@plt+0x28840>
   39c7c:	ldr	r0, [fp, #-12]
   39c80:	ldr	r0, [r0]
   39c84:	ldr	r1, [sp, #40]	; 0x28
   39c88:	add	r0, r0, r1, lsl #2
   39c8c:	ldr	r0, [r0]
   39c90:	add	r0, r0, #4
   39c94:	ldr	r1, [sp, #36]	; 0x24
   39c98:	bl	30e4c <__assert_fail@plt+0x1f9b8>
   39c9c:	cmp	r0, #0
   39ca0:	beq	39cd4 <__assert_fail@plt+0x28840>
   39ca4:	ldr	r0, [fp, #-8]
   39ca8:	ldr	r1, [fp, #-12]
   39cac:	add	r1, r1, #16
   39cb0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   39cb4:	ldr	r3, [fp, #-16]
   39cb8:	ldr	ip, [sp, #36]	; 0x24
   39cbc:	ldr	lr, [sp, #40]	; 0x28
   39cc0:	str	ip, [sp]
   39cc4:	str	lr, [sp, #4]
   39cc8:	bl	3a598 <__assert_fail@plt+0x29104>
   39ccc:	tst	r0, #1
   39cd0:	beq	39cd8 <__assert_fail@plt+0x28844>
   39cd4:	b	39e58 <__assert_fail@plt+0x289c4>
   39cd8:	ldr	r0, [sp, #64]	; 0x40
   39cdc:	movw	r1, #0
   39ce0:	cmp	r0, r1
   39ce4:	bne	39d3c <__assert_fail@plt+0x288a8>
   39ce8:	ldr	r0, [fp, #-12]
   39cec:	add	r1, sp, #64	; 0x40
   39cf0:	mov	r2, r1
   39cf4:	str	r0, [sp, #20]
   39cf8:	mov	r0, r2
   39cfc:	ldr	r2, [sp, #20]
   39d00:	str	r1, [sp, #16]
   39d04:	mov	r1, r2
   39d08:	movw	r2, #28
   39d0c:	bl	11248 <memcpy@plt>
   39d10:	ldr	r0, [sp, #16]
   39d14:	add	r0, r0, #16
   39d18:	ldr	r1, [fp, #-12]
   39d1c:	add	r1, r1, #16
   39d20:	bl	30d78 <__assert_fail@plt+0x1f8e4>
   39d24:	str	r0, [fp, #-28]	; 0xffffffe4
   39d28:	ldr	r0, [fp, #-28]	; 0xffffffe4
   39d2c:	cmp	r0, #0
   39d30:	beq	39d38 <__assert_fail@plt+0x288a4>
   39d34:	b	39e98 <__assert_fail@plt+0x28a04>
   39d38:	b	39d3c <__assert_fail@plt+0x288a8>
   39d3c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   39d40:	str	r0, [sp, #72]	; 0x48
   39d44:	ldr	r0, [fp, #-16]
   39d48:	str	r0, [sp, #76]	; 0x4c
   39d4c:	add	r0, sp, #64	; 0x40
   39d50:	add	r0, r0, #16
   39d54:	ldr	r1, [sp, #56]	; 0x38
   39d58:	bl	30990 <__assert_fail@plt+0x1f4fc>
   39d5c:	and	r0, r0, #1
   39d60:	strb	r0, [sp, #35]	; 0x23
   39d64:	ldrb	r0, [sp, #35]	; 0x23
   39d68:	mvn	r1, #0
   39d6c:	eor	r0, r0, r1
   39d70:	tst	r0, #1
   39d74:	beq	39d84 <__assert_fail@plt+0x288f0>
   39d78:	movw	r0, #12
   39d7c:	str	r0, [fp, #-28]	; 0xffffffe4
   39d80:	b	39e98 <__assert_fail@plt+0x28a04>
   39d84:	ldr	r0, [sp, #64]	; 0x40
   39d88:	ldr	r1, [fp, #-16]
   39d8c:	add	r0, r0, r1, lsl #2
   39d90:	ldr	r0, [r0]
   39d94:	str	r0, [sp, #28]
   39d98:	ldr	r0, [fp, #-8]
   39d9c:	add	r1, sp, #64	; 0x40
   39da0:	bl	38df8 <__assert_fail@plt+0x27964>
   39da4:	str	r0, [fp, #-28]	; 0xffffffe4
   39da8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   39dac:	cmp	r0, #0
   39db0:	beq	39db8 <__assert_fail@plt+0x28924>
   39db4:	b	39e98 <__assert_fail@plt+0x28a04>
   39db8:	ldr	r0, [fp, #-12]
   39dbc:	ldr	r0, [r0, #4]
   39dc0:	movw	r1, #0
   39dc4:	cmp	r0, r1
   39dc8:	beq	39e00 <__assert_fail@plt+0x2896c>
   39dcc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   39dd0:	ldr	r1, [fp, #-12]
   39dd4:	ldr	r1, [r1, #4]
   39dd8:	ldr	r2, [sp, #64]	; 0x40
   39ddc:	ldr	r3, [fp, #-16]
   39de0:	add	r3, r3, #1
   39de4:	bl	38ff0 <__assert_fail@plt+0x27b5c>
   39de8:	str	r0, [fp, #-28]	; 0xffffffe4
   39dec:	ldr	r0, [fp, #-28]	; 0xffffffe4
   39df0:	cmp	r0, #0
   39df4:	beq	39dfc <__assert_fail@plt+0x28968>
   39df8:	b	39e98 <__assert_fail@plt+0x28a04>
   39dfc:	b	39e00 <__assert_fail@plt+0x2896c>
   39e00:	ldr	r0, [sp, #28]
   39e04:	ldr	r1, [sp, #64]	; 0x40
   39e08:	ldr	r2, [fp, #-16]
   39e0c:	add	r1, r1, r2, lsl #2
   39e10:	str	r0, [r1]
   39e14:	add	r0, sp, #64	; 0x40
   39e18:	add	r1, r0, #16
   39e1c:	add	r0, r0, #16
   39e20:	ldr	r2, [sp, #56]	; 0x38
   39e24:	str	r1, [sp, #12]
   39e28:	mov	r1, r2
   39e2c:	bl	30e4c <__assert_fail@plt+0x1f9b8>
   39e30:	sub	r1, r0, #1
   39e34:	ldr	r0, [sp, #12]
   39e38:	bl	31538 <__assert_fail@plt+0x200a4>
   39e3c:	ldr	r0, [fp, #-8]
   39e40:	ldr	r0, [r0, #116]	; 0x74
   39e44:	ldr	r1, [sp, #56]	; 0x38
   39e48:	movw	r2, #24
   39e4c:	mul	r1, r1, r2
   39e50:	add	r0, r0, r1
   39e54:	str	r0, [sp, #48]	; 0x30
   39e58:	ldr	r0, [sp, #56]	; 0x38
   39e5c:	add	r0, r0, #1
   39e60:	str	r0, [sp, #56]	; 0x38
   39e64:	ldr	r0, [sp, #48]	; 0x30
   39e68:	add	r1, r0, #24
   39e6c:	str	r1, [sp, #48]	; 0x30
   39e70:	ldrsb	r0, [r0, #20]
   39e74:	cmp	r0, #0
   39e78:	bne	39b94 <__assert_fail@plt+0x28700>
   39e7c:	b	39e80 <__assert_fail@plt+0x289ec>
   39e80:	ldr	r0, [fp, #-32]	; 0xffffffe0
   39e84:	add	r0, r0, #1
   39e88:	str	r0, [fp, #-32]	; 0xffffffe0
   39e8c:	b	39af0 <__assert_fail@plt+0x2865c>
   39e90:	movw	r0, #0
   39e94:	str	r0, [fp, #-28]	; 0xffffffe4
   39e98:	ldr	r0, [sp, #64]	; 0x40
   39e9c:	movw	r1, #0
   39ea0:	cmp	r0, r1
   39ea4:	beq	39eb0 <__assert_fail@plt+0x28a1c>
   39ea8:	ldr	r0, [sp, #88]	; 0x58
   39eac:	bl	138a4 <__assert_fail@plt+0x2410>
   39eb0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   39eb4:	str	r0, [fp, #-4]
   39eb8:	ldr	r0, [fp, #-4]
   39ebc:	mov	sp, fp
   39ec0:	pop	{fp, pc}
   39ec4:	push	{fp, lr}
   39ec8:	mov	fp, sp
   39ecc:	sub	sp, sp, #56	; 0x38
   39ed0:	str	r0, [fp, #-8]
   39ed4:	str	r1, [fp, #-12]
   39ed8:	str	r2, [fp, #-16]
   39edc:	ldr	r0, [fp, #-12]
   39ee0:	ldr	r0, [r0, #4]
   39ee4:	cmp	r0, #0
   39ee8:	beq	39efc <__assert_fail@plt+0x28a68>
   39eec:	ldr	r0, [fp, #-16]
   39ef0:	ldr	r0, [r0, #4]
   39ef4:	cmp	r0, #0
   39ef8:	bne	39f08 <__assert_fail@plt+0x28a74>
   39efc:	movw	r0, #0
   39f00:	str	r0, [fp, #-4]
   39f04:	b	3a300 <__assert_fail@plt+0x28e6c>
   39f08:	ldr	r0, [fp, #-12]
   39f0c:	ldr	r0, [r0, #4]
   39f10:	ldr	r1, [fp, #-16]
   39f14:	ldr	r1, [r1, #4]
   39f18:	add	r0, r0, r1
   39f1c:	ldr	r1, [fp, #-8]
   39f20:	ldr	r1, [r1, #4]
   39f24:	add	r0, r0, r1
   39f28:	ldr	r1, [fp, #-8]
   39f2c:	ldr	r1, [r1]
   39f30:	cmp	r0, r1
   39f34:	ble	39fa8 <__assert_fail@plt+0x28b14>
   39f38:	ldr	r0, [fp, #-12]
   39f3c:	ldr	r0, [r0, #4]
   39f40:	ldr	r1, [fp, #-16]
   39f44:	ldr	r1, [r1, #4]
   39f48:	add	r0, r0, r1
   39f4c:	ldr	r1, [fp, #-8]
   39f50:	ldr	r1, [r1]
   39f54:	add	r0, r0, r1
   39f58:	str	r0, [sp, #12]
   39f5c:	ldr	r0, [fp, #-8]
   39f60:	ldr	r0, [r0, #8]
   39f64:	ldr	r1, [sp, #12]
   39f68:	lsl	r1, r1, #2
   39f6c:	bl	3fc48 <__assert_fail@plt+0x2e7b4>
   39f70:	str	r0, [sp, #8]
   39f74:	ldr	r0, [sp, #8]
   39f78:	movw	r1, #0
   39f7c:	cmp	r0, r1
   39f80:	bne	39f90 <__assert_fail@plt+0x28afc>
   39f84:	movw	r0, #12
   39f88:	str	r0, [fp, #-4]
   39f8c:	b	3a300 <__assert_fail@plt+0x28e6c>
   39f90:	ldr	r0, [sp, #8]
   39f94:	ldr	r1, [fp, #-8]
   39f98:	str	r0, [r1, #8]
   39f9c:	ldr	r0, [sp, #12]
   39fa0:	ldr	r1, [fp, #-8]
   39fa4:	str	r0, [r1]
   39fa8:	ldr	r0, [fp, #-8]
   39fac:	ldr	r0, [r0, #4]
   39fb0:	ldr	r1, [fp, #-12]
   39fb4:	ldr	r1, [r1, #4]
   39fb8:	add	r0, r0, r1
   39fbc:	ldr	r1, [fp, #-16]
   39fc0:	ldr	r1, [r1, #4]
   39fc4:	add	r0, r0, r1
   39fc8:	str	r0, [sp, #16]
   39fcc:	ldr	r0, [fp, #-12]
   39fd0:	ldr	r0, [r0, #4]
   39fd4:	sub	r0, r0, #1
   39fd8:	str	r0, [fp, #-20]	; 0xffffffec
   39fdc:	ldr	r0, [fp, #-16]
   39fe0:	ldr	r0, [r0, #4]
   39fe4:	sub	r0, r0, #1
   39fe8:	str	r0, [fp, #-24]	; 0xffffffe8
   39fec:	ldr	r0, [fp, #-8]
   39ff0:	ldr	r0, [r0, #4]
   39ff4:	sub	r0, r0, #1
   39ff8:	str	r0, [sp, #24]
   39ffc:	ldr	r0, [fp, #-12]
   3a000:	ldr	r0, [r0, #8]
   3a004:	ldr	r1, [fp, #-20]	; 0xffffffec
   3a008:	ldr	r0, [r0, r1, lsl #2]
   3a00c:	ldr	r1, [fp, #-16]
   3a010:	ldr	r1, [r1, #8]
   3a014:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3a018:	add	r1, r1, r2, lsl #2
   3a01c:	ldr	r1, [r1]
   3a020:	cmp	r0, r1
   3a024:	bne	3a130 <__assert_fail@plt+0x28c9c>
   3a028:	b	3a02c <__assert_fail@plt+0x28b98>
   3a02c:	ldr	r0, [sp, #24]
   3a030:	cmp	r0, #0
   3a034:	movw	r0, #0
   3a038:	str	r0, [sp, #4]
   3a03c:	blt	3a074 <__assert_fail@plt+0x28be0>
   3a040:	ldr	r0, [fp, #-8]
   3a044:	ldr	r0, [r0, #8]
   3a048:	ldr	r1, [sp, #24]
   3a04c:	ldr	r0, [r0, r1, lsl #2]
   3a050:	ldr	r1, [fp, #-12]
   3a054:	ldr	r1, [r1, #8]
   3a058:	ldr	r2, [fp, #-20]	; 0xffffffec
   3a05c:	add	r1, r1, r2, lsl #2
   3a060:	ldr	r1, [r1]
   3a064:	cmp	r0, r1
   3a068:	movw	r0, #0
   3a06c:	movgt	r0, #1
   3a070:	str	r0, [sp, #4]
   3a074:	ldr	r0, [sp, #4]
   3a078:	tst	r0, #1
   3a07c:	beq	3a094 <__assert_fail@plt+0x28c00>
   3a080:	ldr	r0, [sp, #24]
   3a084:	mvn	r1, #0
   3a088:	add	r0, r0, r1
   3a08c:	str	r0, [sp, #24]
   3a090:	b	3a02c <__assert_fail@plt+0x28b98>
   3a094:	ldr	r0, [sp, #24]
   3a098:	cmp	r0, #0
   3a09c:	blt	3a0cc <__assert_fail@plt+0x28c38>
   3a0a0:	ldr	r0, [fp, #-8]
   3a0a4:	ldr	r0, [r0, #8]
   3a0a8:	ldr	r1, [sp, #24]
   3a0ac:	ldr	r0, [r0, r1, lsl #2]
   3a0b0:	ldr	r1, [fp, #-12]
   3a0b4:	ldr	r1, [r1, #8]
   3a0b8:	ldr	r2, [fp, #-20]	; 0xffffffec
   3a0bc:	add	r1, r1, r2, lsl #2
   3a0c0:	ldr	r1, [r1]
   3a0c4:	cmp	r0, r1
   3a0c8:	beq	3a0f8 <__assert_fail@plt+0x28c64>
   3a0cc:	ldr	r0, [fp, #-12]
   3a0d0:	ldr	r0, [r0, #8]
   3a0d4:	ldr	r1, [fp, #-20]	; 0xffffffec
   3a0d8:	ldr	r0, [r0, r1, lsl #2]
   3a0dc:	ldr	r1, [fp, #-8]
   3a0e0:	ldr	r1, [r1, #8]
   3a0e4:	ldr	r2, [sp, #16]
   3a0e8:	sub	r2, r2, #1
   3a0ec:	str	r2, [sp, #16]
   3a0f0:	add	r1, r1, r2, lsl #2
   3a0f4:	str	r0, [r1]
   3a0f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   3a0fc:	mvn	r1, #0
   3a100:	add	r0, r0, r1
   3a104:	str	r0, [fp, #-20]	; 0xffffffec
   3a108:	cmp	r0, #0
   3a10c:	blt	3a128 <__assert_fail@plt+0x28c94>
   3a110:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3a114:	mvn	r1, #0
   3a118:	add	r0, r0, r1
   3a11c:	str	r0, [fp, #-24]	; 0xffffffe8
   3a120:	cmp	r0, #0
   3a124:	bge	3a12c <__assert_fail@plt+0x28c98>
   3a128:	b	3a1a4 <__assert_fail@plt+0x28d10>
   3a12c:	b	3a1a0 <__assert_fail@plt+0x28d0c>
   3a130:	ldr	r0, [fp, #-12]
   3a134:	ldr	r0, [r0, #8]
   3a138:	ldr	r1, [fp, #-20]	; 0xffffffec
   3a13c:	ldr	r0, [r0, r1, lsl #2]
   3a140:	ldr	r1, [fp, #-16]
   3a144:	ldr	r1, [r1, #8]
   3a148:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3a14c:	add	r1, r1, r2, lsl #2
   3a150:	ldr	r1, [r1]
   3a154:	cmp	r0, r1
   3a158:	bge	3a17c <__assert_fail@plt+0x28ce8>
   3a15c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3a160:	mvn	r1, #0
   3a164:	add	r0, r0, r1
   3a168:	str	r0, [fp, #-24]	; 0xffffffe8
   3a16c:	cmp	r0, #0
   3a170:	bge	3a178 <__assert_fail@plt+0x28ce4>
   3a174:	b	3a1a4 <__assert_fail@plt+0x28d10>
   3a178:	b	3a19c <__assert_fail@plt+0x28d08>
   3a17c:	ldr	r0, [fp, #-20]	; 0xffffffec
   3a180:	mvn	r1, #0
   3a184:	add	r0, r0, r1
   3a188:	str	r0, [fp, #-20]	; 0xffffffec
   3a18c:	cmp	r0, #0
   3a190:	bge	3a198 <__assert_fail@plt+0x28d04>
   3a194:	b	3a1a4 <__assert_fail@plt+0x28d10>
   3a198:	b	3a19c <__assert_fail@plt+0x28d08>
   3a19c:	b	3a1a0 <__assert_fail@plt+0x28d0c>
   3a1a0:	b	39ffc <__assert_fail@plt+0x28b68>
   3a1a4:	ldr	r0, [fp, #-8]
   3a1a8:	ldr	r0, [r0, #4]
   3a1ac:	sub	r0, r0, #1
   3a1b0:	str	r0, [sp, #24]
   3a1b4:	ldr	r0, [fp, #-8]
   3a1b8:	ldr	r0, [r0, #4]
   3a1bc:	ldr	r1, [fp, #-12]
   3a1c0:	ldr	r1, [r1, #4]
   3a1c4:	add	r0, r0, r1
   3a1c8:	ldr	r1, [fp, #-16]
   3a1cc:	ldr	r1, [r1, #4]
   3a1d0:	add	r0, r0, r1
   3a1d4:	sub	r0, r0, #1
   3a1d8:	str	r0, [sp, #28]
   3a1dc:	ldr	r0, [sp, #28]
   3a1e0:	ldr	r1, [sp, #16]
   3a1e4:	sub	r0, r0, r1
   3a1e8:	add	r0, r0, #1
   3a1ec:	str	r0, [sp, #20]
   3a1f0:	ldr	r0, [sp, #20]
   3a1f4:	ldr	r1, [fp, #-8]
   3a1f8:	ldr	r2, [r1, #4]
   3a1fc:	add	r0, r2, r0
   3a200:	str	r0, [r1, #4]
   3a204:	ldr	r0, [sp, #20]
   3a208:	cmp	r0, #0
   3a20c:	ble	3a2dc <__assert_fail@plt+0x28e48>
   3a210:	ldr	r0, [sp, #24]
   3a214:	cmp	r0, #0
   3a218:	blt	3a2dc <__assert_fail@plt+0x28e48>
   3a21c:	b	3a220 <__assert_fail@plt+0x28d8c>
   3a220:	ldr	r0, [fp, #-8]
   3a224:	ldr	r0, [r0, #8]
   3a228:	ldr	r1, [sp, #28]
   3a22c:	ldr	r1, [r0, r1, lsl #2]
   3a230:	ldr	r2, [sp, #24]
   3a234:	add	r0, r0, r2, lsl #2
   3a238:	ldr	r0, [r0]
   3a23c:	cmp	r1, r0
   3a240:	ble	3a294 <__assert_fail@plt+0x28e00>
   3a244:	ldr	r0, [fp, #-8]
   3a248:	ldr	r0, [r0, #8]
   3a24c:	ldr	r1, [sp, #28]
   3a250:	sub	r2, r1, #1
   3a254:	str	r2, [sp, #28]
   3a258:	ldr	r0, [r0, r1, lsl #2]
   3a25c:	ldr	r1, [fp, #-8]
   3a260:	ldr	r1, [r1, #8]
   3a264:	ldr	r2, [sp, #24]
   3a268:	ldr	r3, [sp, #20]
   3a26c:	sub	ip, r3, #1
   3a270:	str	ip, [sp, #20]
   3a274:	add	r2, r2, r3
   3a278:	add	r1, r1, r2, lsl #2
   3a27c:	str	r0, [r1]
   3a280:	ldr	r0, [sp, #20]
   3a284:	cmp	r0, #0
   3a288:	bne	3a290 <__assert_fail@plt+0x28dfc>
   3a28c:	b	3a2d8 <__assert_fail@plt+0x28e44>
   3a290:	b	3a2d4 <__assert_fail@plt+0x28e40>
   3a294:	ldr	r0, [fp, #-8]
   3a298:	ldr	r0, [r0, #8]
   3a29c:	ldr	r1, [sp, #24]
   3a2a0:	ldr	r2, [r0, r1, lsl #2]
   3a2a4:	ldr	r3, [sp, #20]
   3a2a8:	add	r1, r1, r3
   3a2ac:	add	r0, r0, r1, lsl #2
   3a2b0:	str	r2, [r0]
   3a2b4:	ldr	r0, [sp, #24]
   3a2b8:	mvn	r1, #0
   3a2bc:	add	r0, r0, r1
   3a2c0:	str	r0, [sp, #24]
   3a2c4:	cmp	r0, #0
   3a2c8:	bge	3a2d0 <__assert_fail@plt+0x28e3c>
   3a2cc:	b	3a2d8 <__assert_fail@plt+0x28e44>
   3a2d0:	b	3a2d4 <__assert_fail@plt+0x28e40>
   3a2d4:	b	3a220 <__assert_fail@plt+0x28d8c>
   3a2d8:	b	3a2dc <__assert_fail@plt+0x28e48>
   3a2dc:	ldr	r0, [fp, #-8]
   3a2e0:	ldr	r0, [r0, #8]
   3a2e4:	ldr	r1, [sp, #16]
   3a2e8:	add	r1, r0, r1, lsl #2
   3a2ec:	ldr	r2, [sp, #20]
   3a2f0:	lsl	r2, r2, #2
   3a2f4:	bl	11248 <memcpy@plt>
   3a2f8:	movw	r0, #0
   3a2fc:	str	r0, [fp, #-4]
   3a300:	ldr	r0, [fp, #-4]
   3a304:	mov	sp, fp
   3a308:	pop	{fp, pc}
   3a30c:	push	{fp, lr}
   3a310:	mov	fp, sp
   3a314:	sub	sp, sp, #72	; 0x48
   3a318:	str	r0, [fp, #-8]
   3a31c:	str	r1, [fp, #-12]
   3a320:	str	r2, [fp, #-16]
   3a324:	str	r3, [fp, #-20]	; 0xffffffec
   3a328:	ldr	r0, [fp, #-8]
   3a32c:	ldr	r0, [r0, #28]
   3a330:	ldr	r1, [fp, #-12]
   3a334:	movw	r2, #12
   3a338:	mul	r1, r1, r2
   3a33c:	add	r0, r0, r1
   3a340:	str	r0, [fp, #-32]	; 0xffffffe0
   3a344:	add	r0, sp, #28
   3a348:	movw	r1, #0
   3a34c:	and	r1, r1, #255	; 0xff
   3a350:	bl	113d4 <memset@plt>
   3a354:	movw	r0, #0
   3a358:	str	r0, [fp, #-24]	; 0xffffffe8
   3a35c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3a360:	ldr	r1, [fp, #-32]	; 0xffffffe0
   3a364:	ldr	r1, [r1, #4]
   3a368:	cmp	r0, r1
   3a36c:	bge	3a500 <__assert_fail@plt+0x2906c>
   3a370:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3a374:	ldr	r0, [r0, #8]
   3a378:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3a37c:	add	r0, r0, r1, lsl #2
   3a380:	ldr	r0, [r0]
   3a384:	str	r0, [sp, #24]
   3a388:	ldr	r0, [sp, #24]
   3a38c:	ldr	r1, [fp, #-12]
   3a390:	cmp	r0, r1
   3a394:	bne	3a39c <__assert_fail@plt+0x28f08>
   3a398:	b	3a4f0 <__assert_fail@plt+0x2905c>
   3a39c:	ldr	r0, [fp, #-8]
   3a3a0:	ldr	r0, [r0]
   3a3a4:	ldr	r1, [sp, #24]
   3a3a8:	add	r0, r0, r1, lsl #3
   3a3ac:	ldr	r0, [r0, #4]
   3a3b0:	and	r0, r0, #255	; 0xff
   3a3b4:	and	r0, r0, #8
   3a3b8:	cmp	r0, #0
   3a3bc:	beq	3a4ec <__assert_fail@plt+0x29058>
   3a3c0:	ldr	r0, [fp, #-8]
   3a3c4:	ldr	r0, [r0, #20]
   3a3c8:	ldr	r1, [sp, #24]
   3a3cc:	movw	r2, #12
   3a3d0:	mul	r1, r1, r2
   3a3d4:	add	r0, r0, r1
   3a3d8:	ldr	r0, [r0, #8]
   3a3dc:	ldr	r0, [r0]
   3a3e0:	str	r0, [sp, #20]
   3a3e4:	ldr	r0, [fp, #-8]
   3a3e8:	ldr	r0, [r0, #20]
   3a3ec:	ldr	r1, [sp, #24]
   3a3f0:	mul	r1, r1, r2
   3a3f4:	add	r0, r0, r1
   3a3f8:	ldr	r0, [r0, #4]
   3a3fc:	cmp	r0, #1
   3a400:	ble	3a42c <__assert_fail@plt+0x28f98>
   3a404:	ldr	r0, [fp, #-8]
   3a408:	ldr	r0, [r0, #20]
   3a40c:	ldr	r1, [sp, #24]
   3a410:	movw	r2, #12
   3a414:	mul	r1, r1, r2
   3a418:	add	r0, r0, r1
   3a41c:	ldr	r0, [r0, #8]
   3a420:	ldr	r0, [r0, #4]
   3a424:	str	r0, [sp, #4]
   3a428:	b	3a438 <__assert_fail@plt+0x28fa4>
   3a42c:	mvn	r0, #0
   3a430:	str	r0, [sp, #4]
   3a434:	b	3a438 <__assert_fail@plt+0x28fa4>
   3a438:	ldr	r0, [sp, #4]
   3a43c:	str	r0, [sp, #16]
   3a440:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3a444:	ldr	r1, [sp, #20]
   3a448:	bl	30e4c <__assert_fail@plt+0x1f9b8>
   3a44c:	cmp	r0, #0
   3a450:	bne	3a468 <__assert_fail@plt+0x28fd4>
   3a454:	ldr	r0, [fp, #-16]
   3a458:	ldr	r1, [sp, #20]
   3a45c:	bl	30e4c <__assert_fail@plt+0x1f9b8>
   3a460:	cmp	r0, #0
   3a464:	bne	3a49c <__assert_fail@plt+0x29008>
   3a468:	ldr	r0, [sp, #16]
   3a46c:	cmp	r0, #0
   3a470:	ble	3a4e8 <__assert_fail@plt+0x29054>
   3a474:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3a478:	ldr	r1, [sp, #16]
   3a47c:	bl	30e4c <__assert_fail@plt+0x1f9b8>
   3a480:	cmp	r0, #0
   3a484:	bne	3a4e8 <__assert_fail@plt+0x29054>
   3a488:	ldr	r0, [fp, #-16]
   3a48c:	ldr	r1, [sp, #16]
   3a490:	bl	30e4c <__assert_fail@plt+0x1f9b8>
   3a494:	cmp	r0, #0
   3a498:	beq	3a4e8 <__assert_fail@plt+0x29054>
   3a49c:	ldr	r1, [fp, #-20]	; 0xffffffec
   3a4a0:	ldr	r0, [fp, #-8]
   3a4a4:	ldr	r0, [r0, #28]
   3a4a8:	ldr	r2, [sp, #24]
   3a4ac:	movw	r3, #12
   3a4b0:	mul	r2, r2, r3
   3a4b4:	add	r2, r0, r2
   3a4b8:	add	r0, sp, #28
   3a4bc:	bl	39ec4 <__assert_fail@plt+0x28a30>
   3a4c0:	str	r0, [fp, #-28]	; 0xffffffe4
   3a4c4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3a4c8:	cmp	r0, #0
   3a4cc:	beq	3a4e4 <__assert_fail@plt+0x29050>
   3a4d0:	ldr	r0, [sp, #36]	; 0x24
   3a4d4:	bl	138a4 <__assert_fail@plt+0x2410>
   3a4d8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3a4dc:	str	r0, [fp, #-4]
   3a4e0:	b	3a58c <__assert_fail@plt+0x290f8>
   3a4e4:	b	3a4e8 <__assert_fail@plt+0x29054>
   3a4e8:	b	3a4ec <__assert_fail@plt+0x29058>
   3a4ec:	b	3a4f0 <__assert_fail@plt+0x2905c>
   3a4f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3a4f4:	add	r0, r0, #1
   3a4f8:	str	r0, [fp, #-24]	; 0xffffffe8
   3a4fc:	b	3a35c <__assert_fail@plt+0x28ec8>
   3a500:	movw	r0, #0
   3a504:	str	r0, [fp, #-24]	; 0xffffffe8
   3a508:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3a50c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   3a510:	ldr	r1, [r1, #4]
   3a514:	cmp	r0, r1
   3a518:	bge	3a57c <__assert_fail@plt+0x290e8>
   3a51c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3a520:	ldr	r0, [r0, #8]
   3a524:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3a528:	add	r0, r0, r1, lsl #2
   3a52c:	ldr	r0, [r0]
   3a530:	str	r0, [sp, #12]
   3a534:	ldr	r1, [sp, #12]
   3a538:	add	r0, sp, #28
   3a53c:	bl	30e4c <__assert_fail@plt+0x1f9b8>
   3a540:	cmp	r0, #0
   3a544:	bne	3a568 <__assert_fail@plt+0x290d4>
   3a548:	ldr	r0, [fp, #-16]
   3a54c:	ldr	r1, [sp, #12]
   3a550:	bl	30e4c <__assert_fail@plt+0x1f9b8>
   3a554:	sub	r0, r0, #1
   3a558:	str	r0, [sp, #8]
   3a55c:	ldr	r0, [fp, #-16]
   3a560:	ldr	r1, [sp, #8]
   3a564:	bl	31538 <__assert_fail@plt+0x200a4>
   3a568:	b	3a56c <__assert_fail@plt+0x290d8>
   3a56c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3a570:	add	r0, r0, #1
   3a574:	str	r0, [fp, #-24]	; 0xffffffe8
   3a578:	b	3a508 <__assert_fail@plt+0x29074>
   3a57c:	ldr	r0, [sp, #36]	; 0x24
   3a580:	bl	138a4 <__assert_fail@plt+0x2410>
   3a584:	movw	r0, #0
   3a588:	str	r0, [fp, #-4]
   3a58c:	ldr	r0, [fp, #-4]
   3a590:	mov	sp, fp
   3a594:	pop	{fp, pc}
   3a598:	push	{r4, sl, fp, lr}
   3a59c:	add	fp, sp, #8
   3a5a0:	sub	sp, sp, #72	; 0x48
   3a5a4:	ldr	ip, [fp, #12]
   3a5a8:	ldr	lr, [fp, #8]
   3a5ac:	str	r0, [fp, #-16]
   3a5b0:	str	r1, [fp, #-20]	; 0xffffffec
   3a5b4:	str	r2, [fp, #-24]	; 0xffffffe8
   3a5b8:	str	r3, [fp, #-28]	; 0xffffffe4
   3a5bc:	ldr	r0, [fp, #-16]
   3a5c0:	ldr	r0, [r0, #84]	; 0x54
   3a5c4:	str	r0, [fp, #-32]	; 0xffffffe0
   3a5c8:	ldr	r0, [fp, #-16]
   3a5cc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3a5d0:	str	lr, [sp, #16]
   3a5d4:	str	ip, [sp, #12]
   3a5d8:	bl	352d4 <__assert_fail@plt+0x23e40>
   3a5dc:	str	r0, [sp, #32]
   3a5e0:	ldr	r0, [fp, #-16]
   3a5e4:	ldr	r1, [fp, #12]
   3a5e8:	bl	352d4 <__assert_fail@plt+0x23e40>
   3a5ec:	str	r0, [sp, #28]
   3a5f0:	movw	r0, #0
   3a5f4:	str	r0, [fp, #-36]	; 0xffffffdc
   3a5f8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3a5fc:	ldr	r1, [fp, #-20]	; 0xffffffec
   3a600:	ldr	r1, [r1, #4]
   3a604:	cmp	r0, r1
   3a608:	bge	3a6ec <__assert_fail@plt+0x29258>
   3a60c:	ldr	r0, [fp, #-16]
   3a610:	ldr	r0, [r0, #116]	; 0x74
   3a614:	ldr	r1, [fp, #-20]	; 0xffffffec
   3a618:	ldr	r1, [r1, #8]
   3a61c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   3a620:	ldr	r1, [r1, r2, lsl #2]
   3a624:	add	r1, r1, r1, lsl #1
   3a628:	add	r0, r0, r1, lsl #3
   3a62c:	str	r0, [sp, #20]
   3a630:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3a634:	ldr	r0, [r0]
   3a638:	ldr	r1, [sp, #20]
   3a63c:	ldr	r1, [r1]
   3a640:	ldr	r0, [r0, r1, lsl #3]
   3a644:	str	r0, [sp, #24]
   3a648:	ldr	r0, [fp, #-16]
   3a64c:	ldr	r1, [fp, #-20]	; 0xffffffec
   3a650:	ldr	r1, [r1, #8]
   3a654:	ldr	r2, [fp, #-36]	; 0xffffffdc
   3a658:	ldr	r1, [r1, r2, lsl #2]
   3a65c:	ldr	r2, [sp, #24]
   3a660:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3a664:	ldr	ip, [fp, #-28]	; 0xffffffe4
   3a668:	ldr	lr, [sp, #32]
   3a66c:	mov	r4, sp
   3a670:	str	lr, [r4, #4]
   3a674:	str	ip, [r4]
   3a678:	bl	3a708 <__assert_fail@plt+0x29274>
   3a67c:	str	r0, [sp, #36]	; 0x24
   3a680:	ldr	r0, [fp, #-16]
   3a684:	ldr	r1, [fp, #-20]	; 0xffffffec
   3a688:	ldr	r1, [r1, #8]
   3a68c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   3a690:	add	r1, r1, r2, lsl #2
   3a694:	ldr	r1, [r1]
   3a698:	ldr	r2, [sp, #24]
   3a69c:	ldr	r3, [fp, #8]
   3a6a0:	ldr	ip, [fp, #12]
   3a6a4:	ldr	lr, [sp, #28]
   3a6a8:	str	ip, [sp]
   3a6ac:	str	lr, [sp, #4]
   3a6b0:	bl	3a708 <__assert_fail@plt+0x29274>
   3a6b4:	str	r0, [sp, #40]	; 0x28
   3a6b8:	ldr	r0, [sp, #40]	; 0x28
   3a6bc:	ldr	r1, [sp, #36]	; 0x24
   3a6c0:	cmp	r0, r1
   3a6c4:	bne	3a6cc <__assert_fail@plt+0x29238>
   3a6c8:	b	3a6dc <__assert_fail@plt+0x29248>
   3a6cc:	movw	r0, #1
   3a6d0:	and	r0, r0, #1
   3a6d4:	strb	r0, [fp, #-9]
   3a6d8:	b	3a6f8 <__assert_fail@plt+0x29264>
   3a6dc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3a6e0:	add	r0, r0, #1
   3a6e4:	str	r0, [fp, #-36]	; 0xffffffdc
   3a6e8:	b	3a5f8 <__assert_fail@plt+0x29164>
   3a6ec:	movw	r0, #0
   3a6f0:	and	r0, r0, #1
   3a6f4:	strb	r0, [fp, #-9]
   3a6f8:	ldrb	r0, [fp, #-9]
   3a6fc:	and	r0, r0, #1
   3a700:	sub	sp, fp, #8
   3a704:	pop	{r4, sl, fp, pc}
   3a708:	push	{fp, lr}
   3a70c:	mov	fp, sp
   3a710:	sub	sp, sp, #40	; 0x28
   3a714:	ldr	ip, [fp, #12]
   3a718:	ldr	lr, [fp, #8]
   3a71c:	str	r0, [fp, #-8]
   3a720:	str	r1, [fp, #-12]
   3a724:	str	r2, [fp, #-16]
   3a728:	str	r3, [sp, #20]
   3a72c:	ldr	r0, [fp, #-8]
   3a730:	ldr	r0, [r0, #116]	; 0x74
   3a734:	ldr	r1, [fp, #-12]
   3a738:	movw	r2, #24
   3a73c:	mul	r1, r1, r2
   3a740:	add	r0, r0, r1
   3a744:	str	r0, [sp, #16]
   3a748:	ldr	r0, [fp, #8]
   3a74c:	ldr	r1, [sp, #16]
   3a750:	ldr	r1, [r1, #8]
   3a754:	cmp	r0, r1
   3a758:	str	lr, [sp, #8]
   3a75c:	str	ip, [sp, #4]
   3a760:	bge	3a770 <__assert_fail@plt+0x292dc>
   3a764:	mvn	r0, #0
   3a768:	str	r0, [fp, #-4]
   3a76c:	b	3a814 <__assert_fail@plt+0x29380>
   3a770:	ldr	r0, [sp, #16]
   3a774:	ldr	r0, [r0, #12]
   3a778:	ldr	r1, [fp, #8]
   3a77c:	cmp	r0, r1
   3a780:	bge	3a790 <__assert_fail@plt+0x292fc>
   3a784:	movw	r0, #1
   3a788:	str	r0, [fp, #-4]
   3a78c:	b	3a814 <__assert_fail@plt+0x29380>
   3a790:	ldr	r0, [fp, #8]
   3a794:	ldr	r1, [sp, #16]
   3a798:	ldr	r1, [r1, #8]
   3a79c:	cmp	r0, r1
   3a7a0:	movw	r0, #0
   3a7a4:	moveq	r0, #1
   3a7a8:	and	r0, r0, #1
   3a7ac:	str	r0, [sp, #12]
   3a7b0:	ldr	r0, [fp, #8]
   3a7b4:	ldr	r1, [sp, #16]
   3a7b8:	ldr	r1, [r1, #12]
   3a7bc:	cmp	r0, r1
   3a7c0:	movw	r0, #0
   3a7c4:	moveq	r0, #1
   3a7c8:	and	r0, r0, #1
   3a7cc:	lsl	r0, r0, #1
   3a7d0:	ldr	r1, [sp, #12]
   3a7d4:	orr	r0, r1, r0
   3a7d8:	str	r0, [sp, #12]
   3a7dc:	ldr	r0, [sp, #12]
   3a7e0:	cmp	r0, #0
   3a7e4:	bne	3a7f4 <__assert_fail@plt+0x29360>
   3a7e8:	movw	r0, #0
   3a7ec:	str	r0, [fp, #-4]
   3a7f0:	b	3a814 <__assert_fail@plt+0x29380>
   3a7f4:	ldr	r0, [fp, #-8]
   3a7f8:	ldr	r1, [sp, #12]
   3a7fc:	ldr	r2, [fp, #-16]
   3a800:	ldr	r3, [sp, #20]
   3a804:	ldr	ip, [fp, #12]
   3a808:	str	ip, [sp]
   3a80c:	bl	3a820 <__assert_fail@plt+0x2938c>
   3a810:	str	r0, [fp, #-4]
   3a814:	ldr	r0, [fp, #-4]
   3a818:	mov	sp, fp
   3a81c:	pop	{fp, pc}
   3a820:	push	{fp, lr}
   3a824:	mov	fp, sp
   3a828:	sub	sp, sp, #64	; 0x40
   3a82c:	ldr	ip, [fp, #8]
   3a830:	str	r0, [fp, #-8]
   3a834:	str	r1, [fp, #-12]
   3a838:	str	r2, [fp, #-16]
   3a83c:	str	r3, [fp, #-20]	; 0xffffffec
   3a840:	ldr	r0, [fp, #-8]
   3a844:	ldr	r0, [r0, #84]	; 0x54
   3a848:	str	r0, [fp, #-24]	; 0xffffffe8
   3a84c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3a850:	ldr	r0, [r0, #24]
   3a854:	ldr	r1, [fp, #-20]	; 0xffffffec
   3a858:	movw	r2, #12
   3a85c:	mul	r1, r1, r2
   3a860:	add	r0, r0, r1
   3a864:	str	r0, [fp, #-28]	; 0xffffffe4
   3a868:	movw	r0, #0
   3a86c:	str	r0, [sp, #32]
   3a870:	str	ip, [sp, #12]
   3a874:	ldr	r0, [sp, #32]
   3a878:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3a87c:	ldr	r1, [r1, #4]
   3a880:	cmp	r0, r1
   3a884:	bge	3aafc <__assert_fail@plt+0x29668>
   3a888:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3a88c:	ldr	r0, [r0, #8]
   3a890:	ldr	r1, [sp, #32]
   3a894:	ldr	r0, [r0, r1, lsl #2]
   3a898:	str	r0, [sp, #28]
   3a89c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3a8a0:	ldr	r0, [r0]
   3a8a4:	ldr	r1, [sp, #28]
   3a8a8:	add	r0, r0, r1, lsl #3
   3a8ac:	ldrb	r0, [r0, #4]
   3a8b0:	mov	r1, r0
   3a8b4:	cmp	r0, #4
   3a8b8:	str	r1, [sp, #8]
   3a8bc:	beq	3a8e4 <__assert_fail@plt+0x29450>
   3a8c0:	b	3a8c4 <__assert_fail@plt+0x29430>
   3a8c4:	ldr	r0, [sp, #8]
   3a8c8:	cmp	r0, #8
   3a8cc:	beq	3aa64 <__assert_fail@plt+0x295d0>
   3a8d0:	b	3a8d4 <__assert_fail@plt+0x29440>
   3a8d4:	ldr	r0, [sp, #8]
   3a8d8:	cmp	r0, #9
   3a8dc:	beq	3aaa4 <__assert_fail@plt+0x29610>
   3a8e0:	b	3aae4 <__assert_fail@plt+0x29650>
   3a8e4:	ldr	r0, [fp, #8]
   3a8e8:	cmn	r0, #1
   3a8ec:	beq	3aa60 <__assert_fail@plt+0x295cc>
   3a8f0:	ldr	r0, [fp, #-8]
   3a8f4:	ldr	r0, [r0, #116]	; 0x74
   3a8f8:	ldr	r1, [fp, #8]
   3a8fc:	movw	r2, #24
   3a900:	mul	r1, r1, r2
   3a904:	add	r0, r0, r1
   3a908:	str	r0, [sp, #24]
   3a90c:	ldr	r0, [sp, #24]
   3a910:	ldr	r0, [r0]
   3a914:	ldr	r1, [sp, #28]
   3a918:	cmp	r0, r1
   3a91c:	beq	3a924 <__assert_fail@plt+0x29490>
   3a920:	b	3aa44 <__assert_fail@plt+0x295b0>
   3a924:	ldr	r0, [fp, #-16]
   3a928:	cmp	r0, #32
   3a92c:	bge	3a954 <__assert_fail@plt+0x294c0>
   3a930:	ldr	r0, [sp, #24]
   3a934:	ldr	r0, [r0, #16]
   3a938:	ldr	r1, [fp, #-16]
   3a93c:	movw	r2, #1
   3a940:	lsl	r1, r2, r1
   3a944:	and	r0, r0, r1
   3a948:	cmp	r0, #0
   3a94c:	bne	3a954 <__assert_fail@plt+0x294c0>
   3a950:	b	3aa44 <__assert_fail@plt+0x295b0>
   3a954:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3a958:	ldr	r0, [r0, #20]
   3a95c:	ldr	r1, [sp, #28]
   3a960:	movw	r2, #12
   3a964:	mul	r1, r1, r2
   3a968:	add	r0, r0, r1
   3a96c:	ldr	r0, [r0, #8]
   3a970:	ldr	r0, [r0]
   3a974:	str	r0, [sp, #20]
   3a978:	ldr	r0, [sp, #20]
   3a97c:	ldr	r1, [fp, #-20]	; 0xffffffec
   3a980:	cmp	r0, r1
   3a984:	bne	3a9b0 <__assert_fail@plt+0x2951c>
   3a988:	ldr	r0, [fp, #-12]
   3a98c:	and	r0, r0, #1
   3a990:	cmp	r0, #0
   3a994:	beq	3a9a4 <__assert_fail@plt+0x29510>
   3a998:	mvn	r0, #0
   3a99c:	str	r0, [fp, #-4]
   3a9a0:	b	3ab20 <__assert_fail@plt+0x2968c>
   3a9a4:	movw	r0, #0
   3a9a8:	str	r0, [fp, #-4]
   3a9ac:	b	3ab20 <__assert_fail@plt+0x2968c>
   3a9b0:	ldr	r0, [fp, #-8]
   3a9b4:	ldr	r1, [fp, #-12]
   3a9b8:	ldr	r2, [fp, #-16]
   3a9bc:	ldr	r3, [sp, #20]
   3a9c0:	ldr	ip, [fp, #8]
   3a9c4:	str	ip, [sp]
   3a9c8:	bl	3a820 <__assert_fail@plt+0x2938c>
   3a9cc:	str	r0, [sp, #16]
   3a9d0:	ldr	r0, [sp, #16]
   3a9d4:	cmn	r0, #1
   3a9d8:	bne	3a9e8 <__assert_fail@plt+0x29554>
   3a9dc:	mvn	r0, #0
   3a9e0:	str	r0, [fp, #-4]
   3a9e4:	b	3ab20 <__assert_fail@plt+0x2968c>
   3a9e8:	ldr	r0, [sp, #16]
   3a9ec:	cmp	r0, #0
   3a9f0:	bne	3aa10 <__assert_fail@plt+0x2957c>
   3a9f4:	ldr	r0, [fp, #-12]
   3a9f8:	and	r0, r0, #2
   3a9fc:	cmp	r0, #0
   3aa00:	beq	3aa10 <__assert_fail@plt+0x2957c>
   3aa04:	movw	r0, #0
   3aa08:	str	r0, [fp, #-4]
   3aa0c:	b	3ab20 <__assert_fail@plt+0x2968c>
   3aa10:	ldr	r0, [fp, #-16]
   3aa14:	cmp	r0, #32
   3aa18:	bge	3aa40 <__assert_fail@plt+0x295ac>
   3aa1c:	ldr	r0, [fp, #-16]
   3aa20:	movw	r1, #1
   3aa24:	lsl	r0, r1, r0
   3aa28:	mvn	r1, #0
   3aa2c:	eor	r0, r0, r1
   3aa30:	ldr	r1, [sp, #24]
   3aa34:	ldr	r2, [r1, #16]
   3aa38:	and	r0, r2, r0
   3aa3c:	str	r0, [r1, #16]
   3aa40:	b	3aa44 <__assert_fail@plt+0x295b0>
   3aa44:	ldr	r0, [sp, #24]
   3aa48:	add	r1, r0, #24
   3aa4c:	str	r1, [sp, #24]
   3aa50:	ldrsb	r0, [r0, #20]
   3aa54:	cmp	r0, #0
   3aa58:	bne	3a90c <__assert_fail@plt+0x29478>
   3aa5c:	b	3aa60 <__assert_fail@plt+0x295cc>
   3aa60:	b	3aae8 <__assert_fail@plt+0x29654>
   3aa64:	ldr	r0, [fp, #-12]
   3aa68:	and	r0, r0, #1
   3aa6c:	cmp	r0, #0
   3aa70:	beq	3aaa0 <__assert_fail@plt+0x2960c>
   3aa74:	ldr	r0, [fp, #-16]
   3aa78:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3aa7c:	ldr	r1, [r1]
   3aa80:	ldr	r2, [sp, #28]
   3aa84:	add	r1, r1, r2, lsl #3
   3aa88:	ldr	r1, [r1]
   3aa8c:	cmp	r0, r1
   3aa90:	bne	3aaa0 <__assert_fail@plt+0x2960c>
   3aa94:	mvn	r0, #0
   3aa98:	str	r0, [fp, #-4]
   3aa9c:	b	3ab20 <__assert_fail@plt+0x2968c>
   3aaa0:	b	3aae8 <__assert_fail@plt+0x29654>
   3aaa4:	ldr	r0, [fp, #-12]
   3aaa8:	and	r0, r0, #2
   3aaac:	cmp	r0, #0
   3aab0:	beq	3aae0 <__assert_fail@plt+0x2964c>
   3aab4:	ldr	r0, [fp, #-16]
   3aab8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3aabc:	ldr	r1, [r1]
   3aac0:	ldr	r2, [sp, #28]
   3aac4:	add	r1, r1, r2, lsl #3
   3aac8:	ldr	r1, [r1]
   3aacc:	cmp	r0, r1
   3aad0:	bne	3aae0 <__assert_fail@plt+0x2964c>
   3aad4:	movw	r0, #0
   3aad8:	str	r0, [fp, #-4]
   3aadc:	b	3ab20 <__assert_fail@plt+0x2968c>
   3aae0:	b	3aae8 <__assert_fail@plt+0x29654>
   3aae4:	b	3aae8 <__assert_fail@plt+0x29654>
   3aae8:	b	3aaec <__assert_fail@plt+0x29658>
   3aaec:	ldr	r0, [sp, #32]
   3aaf0:	add	r0, r0, #1
   3aaf4:	str	r0, [sp, #32]
   3aaf8:	b	3a874 <__assert_fail@plt+0x293e0>
   3aafc:	ldr	r0, [fp, #-12]
   3ab00:	and	r0, r0, #2
   3ab04:	cmp	r0, #0
   3ab08:	movw	r0, #0
   3ab0c:	movne	r0, #1
   3ab10:	tst	r0, #1
   3ab14:	movw	r0, #1
   3ab18:	moveq	r0, #0
   3ab1c:	str	r0, [fp, #-4]
   3ab20:	ldr	r0, [fp, #-4]
   3ab24:	mov	sp, fp
   3ab28:	pop	{fp, pc}
   3ab2c:	push	{fp, lr}
   3ab30:	mov	fp, sp
   3ab34:	sub	sp, sp, #32
   3ab38:	ldr	ip, [fp, #8]
   3ab3c:	str	r0, [fp, #-4]
   3ab40:	str	r1, [fp, #-8]
   3ab44:	str	r2, [fp, #-12]
   3ab48:	str	r3, [sp, #16]
   3ab4c:	ldr	r0, [fp, #-4]
   3ab50:	ldr	r0, [r0, #84]	; 0x54
   3ab54:	str	r0, [sp, #12]
   3ab58:	ldr	r0, [sp, #12]
   3ab5c:	ldr	r1, [fp, #-12]
   3ab60:	ldr	r2, [fp, #-4]
   3ab64:	ldr	r3, [sp, #16]
   3ab68:	str	ip, [sp, #4]
   3ab6c:	bl	36ed8 <__assert_fail@plt+0x25a44>
   3ab70:	str	r0, [sp, #8]
   3ab74:	ldr	r0, [sp, #8]
   3ab78:	cmp	r0, #0
   3ab7c:	ble	3ac04 <__assert_fail@plt+0x29770>
   3ab80:	ldr	r0, [sp, #16]
   3ab84:	ldr	r1, [sp, #8]
   3ab88:	add	r0, r0, r1
   3ab8c:	ldr	r1, [fp, #8]
   3ab90:	cmp	r0, r1
   3ab94:	bgt	3ac04 <__assert_fail@plt+0x29770>
   3ab98:	ldr	r0, [fp, #-8]
   3ab9c:	ldr	r0, [r0]
   3aba0:	ldr	r1, [sp, #16]
   3aba4:	ldr	r2, [sp, #8]
   3aba8:	add	r1, r1, r2
   3abac:	add	r0, r0, r1, lsl #2
   3abb0:	ldr	r0, [r0]
   3abb4:	movw	r1, #0
   3abb8:	cmp	r0, r1
   3abbc:	beq	3abfc <__assert_fail@plt+0x29768>
   3abc0:	ldr	r0, [fp, #-8]
   3abc4:	ldr	r0, [r0]
   3abc8:	ldr	r1, [sp, #16]
   3abcc:	ldr	r2, [sp, #8]
   3abd0:	add	r1, r1, r2
   3abd4:	ldr	r0, [r0, r1, lsl #2]
   3abd8:	add	r0, r0, #4
   3abdc:	ldr	r1, [sp, #12]
   3abe0:	ldr	r1, [r1, #12]
   3abe4:	ldr	r2, [fp, #-12]
   3abe8:	add	r1, r1, r2, lsl #2
   3abec:	ldr	r1, [r1]
   3abf0:	bl	30e4c <__assert_fail@plt+0x1f9b8>
   3abf4:	cmp	r0, #0
   3abf8:	bne	3ac04 <__assert_fail@plt+0x29770>
   3abfc:	movw	r0, #0
   3ac00:	str	r0, [sp, #8]
   3ac04:	ldr	r0, [sp, #8]
   3ac08:	mov	sp, fp
   3ac0c:	pop	{fp, pc}
   3ac10:	sub	sp, sp, #4
   3ac14:	str	r0, [sp]
   3ac18:	ldr	r0, [sp]
   3ac1c:	movw	r1, #0
   3ac20:	str	r1, [r0]
   3ac24:	ldr	r0, [sp]
   3ac28:	movw	r1, #16
   3ac2c:	str	r1, [r0, #4]
   3ac30:	ldr	r0, [sp]
   3ac34:	add	r0, r0, #12
   3ac38:	ldr	r1, [sp]
   3ac3c:	str	r0, [r1, #8]
   3ac40:	add	sp, sp, #4
   3ac44:	bx	lr
   3ac48:	push	{fp, lr}
   3ac4c:	mov	fp, sp
   3ac50:	sub	sp, sp, #16
   3ac54:	str	r0, [sp, #8]
   3ac58:	str	r1, [sp, #4]
   3ac5c:	ldr	r0, [sp, #4]
   3ac60:	ldr	r1, [sp, #8]
   3ac64:	ldr	r1, [r1]
   3ac68:	cmp	r0, r1
   3ac6c:	bls	3acbc <__assert_fail@plt+0x29828>
   3ac70:	ldr	r0, [sp, #8]
   3ac74:	ldr	r1, [sp, #4]
   3ac78:	ldr	r2, [sp, #8]
   3ac7c:	add	r2, r2, #12
   3ac80:	movw	r3, #8
   3ac84:	bl	3fe74 <__assert_fail@plt+0x2e9e0>
   3ac88:	and	r0, r0, #1
   3ac8c:	strb	r0, [sp, #3]
   3ac90:	ldrb	r0, [sp, #3]
   3ac94:	mvn	r1, #0
   3ac98:	eor	r0, r0, r1
   3ac9c:	tst	r0, #1
   3aca0:	beq	3acac <__assert_fail@plt+0x29818>
   3aca4:	ldr	r0, [sp, #8]
   3aca8:	bl	3b6c4 <__assert_fail@plt+0x2a230>
   3acac:	ldrb	r0, [sp, #3]
   3acb0:	and	r0, r0, #1
   3acb4:	strb	r0, [fp, #-1]
   3acb8:	b	3acf8 <__assert_fail@plt+0x29864>
   3acbc:	ldr	r0, [sp, #8]
   3acc0:	ldr	r0, [r0, #8]
   3acc4:	ldr	r1, [sp, #4]
   3acc8:	add	r0, r0, r1, lsl #3
   3accc:	ldr	r1, [sp, #8]
   3acd0:	ldr	r1, [r1]
   3acd4:	ldr	r2, [sp, #4]
   3acd8:	sub	r1, r1, r2
   3acdc:	bl	3b720 <__assert_fail@plt+0x2a28c>
   3ace0:	ldr	r0, [sp, #4]
   3ace4:	ldr	r1, [sp, #8]
   3ace8:	str	r0, [r1]
   3acec:	movw	r0, #1
   3acf0:	and	r0, r0, #1
   3acf4:	strb	r0, [fp, #-1]
   3acf8:	ldrb	r0, [fp, #-1]
   3acfc:	and	r0, r0, #1
   3ad00:	mov	sp, fp
   3ad04:	pop	{fp, pc}
   3ad08:	push	{fp, lr}
   3ad0c:	mov	fp, sp
   3ad10:	sub	sp, sp, #8
   3ad14:	str	r0, [sp, #4]
   3ad18:	ldr	r0, [sp, #4]
   3ad1c:	ldr	r0, [r0, #8]
   3ad20:	ldr	r1, [sp, #4]
   3ad24:	ldr	r1, [r1]
   3ad28:	bl	3b720 <__assert_fail@plt+0x2a28c>
   3ad2c:	ldr	r0, [sp, #4]
   3ad30:	bl	3b734 <__assert_fail@plt+0x2a2a0>
   3ad34:	ldr	r0, [sp, #4]
   3ad38:	bl	3ac10 <__assert_fail@plt+0x2977c>
   3ad3c:	mov	sp, fp
   3ad40:	pop	{fp, pc}
   3ad44:	push	{fp, lr}
   3ad48:	mov	fp, sp
   3ad4c:	sub	sp, sp, #8
   3ad50:	str	r0, [sp, #4]
   3ad54:	ldr	r0, [sp, #4]
   3ad58:	movw	r1, #0
   3ad5c:	cmp	r0, r1
   3ad60:	beq	3addc <__assert_fail@plt+0x29948>
   3ad64:	movw	r0, #0
   3ad68:	str	r0, [sp]
   3ad6c:	ldr	r0, [sp]
   3ad70:	ldr	r1, [sp, #4]
   3ad74:	ldr	r1, [r1]
   3ad78:	cmp	r0, r1
   3ad7c:	bge	3add0 <__assert_fail@plt+0x2993c>
   3ad80:	ldr	r0, [sp, #4]
   3ad84:	ldr	r0, [r0, #8]
   3ad88:	ldr	r1, [sp]
   3ad8c:	movw	r2, #24
   3ad90:	mul	r1, r1, r2
   3ad94:	add	r0, r0, r1
   3ad98:	ldr	r0, [r0, #20]
   3ad9c:	bl	138a4 <__assert_fail@plt+0x2410>
   3ada0:	ldr	r0, [sp, #4]
   3ada4:	ldr	r0, [r0, #8]
   3ada8:	ldr	r1, [sp]
   3adac:	movw	r2, #24
   3adb0:	mul	r1, r1, r2
   3adb4:	add	r0, r0, r1
   3adb8:	ldr	r0, [r0, #8]
   3adbc:	bl	138a4 <__assert_fail@plt+0x2410>
   3adc0:	ldr	r0, [sp]
   3adc4:	add	r0, r0, #1
   3adc8:	str	r0, [sp]
   3adcc:	b	3ad6c <__assert_fail@plt+0x298d8>
   3add0:	ldr	r0, [sp, #4]
   3add4:	ldr	r0, [r0, #8]
   3add8:	bl	138a4 <__assert_fail@plt+0x2410>
   3addc:	movw	r0, #0
   3ade0:	mov	sp, fp
   3ade4:	pop	{fp, pc}
   3ade8:	sub	sp, sp, #4
   3adec:	str	r0, [sp]
   3adf0:	ldr	r0, [sp]
   3adf4:	ldr	r0, [r0, #8]
   3adf8:	add	sp, sp, #4
   3adfc:	bx	lr
   3ae00:	push	{fp, lr}
   3ae04:	mov	fp, sp
   3ae08:	sub	sp, sp, #40	; 0x28
   3ae0c:	ldr	ip, [fp, #12]
   3ae10:	ldr	lr, [fp, #8]
   3ae14:	str	r0, [fp, #-4]
   3ae18:	str	r1, [fp, #-8]
   3ae1c:	str	r2, [fp, #-12]
   3ae20:	str	r3, [fp, #-16]
   3ae24:	ldr	r0, [fp, #-4]
   3ae28:	ldr	r0, [r0]
   3ae2c:	ldr	r1, [fp, #-16]
   3ae30:	add	r0, r0, r1, lsl #3
   3ae34:	ldr	r0, [r0, #4]
   3ae38:	and	r0, r0, #255	; 0xff
   3ae3c:	str	r0, [sp, #20]
   3ae40:	ldr	r0, [sp, #20]
   3ae44:	cmp	r0, #8
   3ae48:	str	lr, [sp, #8]
   3ae4c:	str	ip, [sp, #4]
   3ae50:	bne	3aea8 <__assert_fail@plt+0x29a14>
   3ae54:	ldr	r0, [fp, #-4]
   3ae58:	ldr	r0, [r0]
   3ae5c:	ldr	r1, [fp, #-16]
   3ae60:	add	r0, r0, r1, lsl #3
   3ae64:	ldr	r0, [r0]
   3ae68:	add	r0, r0, #1
   3ae6c:	str	r0, [sp, #16]
   3ae70:	ldr	r0, [sp, #16]
   3ae74:	ldr	r1, [fp, #12]
   3ae78:	cmp	r0, r1
   3ae7c:	bge	3aea4 <__assert_fail@plt+0x29a10>
   3ae80:	ldr	r0, [fp, #8]
   3ae84:	ldr	r1, [fp, #-8]
   3ae88:	ldr	r2, [sp, #16]
   3ae8c:	str	r0, [r1, r2, lsl #3]
   3ae90:	ldr	r0, [fp, #-8]
   3ae94:	ldr	r1, [sp, #16]
   3ae98:	add	r0, r0, r1, lsl #3
   3ae9c:	mvn	r1, #0
   3aea0:	str	r1, [r0, #4]
   3aea4:	b	3afa0 <__assert_fail@plt+0x29b0c>
   3aea8:	ldr	r0, [sp, #20]
   3aeac:	cmp	r0, #9
   3aeb0:	bne	3af9c <__assert_fail@plt+0x29b08>
   3aeb4:	ldr	r0, [fp, #-4]
   3aeb8:	ldr	r0, [r0]
   3aebc:	ldr	r1, [fp, #-16]
   3aec0:	add	r0, r0, r1, lsl #3
   3aec4:	ldr	r0, [r0]
   3aec8:	add	r0, r0, #1
   3aecc:	str	r0, [sp, #12]
   3aed0:	ldr	r0, [sp, #12]
   3aed4:	ldr	r1, [fp, #12]
   3aed8:	cmp	r0, r1
   3aedc:	bge	3af98 <__assert_fail@plt+0x29b04>
   3aee0:	ldr	r0, [fp, #-8]
   3aee4:	ldr	r1, [sp, #12]
   3aee8:	add	r0, r0, r1, lsl #3
   3aeec:	ldr	r0, [r0]
   3aef0:	ldr	r1, [fp, #8]
   3aef4:	cmp	r0, r1
   3aef8:	bge	3af28 <__assert_fail@plt+0x29a94>
   3aefc:	ldr	r0, [fp, #8]
   3af00:	ldr	r1, [fp, #-8]
   3af04:	ldr	r2, [sp, #12]
   3af08:	add	r1, r1, r2, lsl #3
   3af0c:	str	r0, [r1, #4]
   3af10:	ldr	r0, [fp, #-12]
   3af14:	ldr	r1, [fp, #-8]
   3af18:	ldr	r2, [fp, #12]
   3af1c:	lsl	r2, r2, #3
   3af20:	bl	11248 <memcpy@plt>
   3af24:	b	3af94 <__assert_fail@plt+0x29b00>
   3af28:	ldr	r0, [fp, #-4]
   3af2c:	ldr	r0, [r0]
   3af30:	ldr	r1, [fp, #-16]
   3af34:	add	r0, r0, r1, lsl #3
   3af38:	ldr	r0, [r0, #4]
   3af3c:	lsr	r0, r0, #19
   3af40:	and	r0, r0, #1
   3af44:	cmp	r0, #0
   3af48:	beq	3af7c <__assert_fail@plt+0x29ae8>
   3af4c:	ldr	r0, [fp, #-12]
   3af50:	ldr	r1, [sp, #12]
   3af54:	add	r0, r0, r1, lsl #3
   3af58:	ldr	r0, [r0]
   3af5c:	cmn	r0, #1
   3af60:	beq	3af7c <__assert_fail@plt+0x29ae8>
   3af64:	ldr	r0, [fp, #-8]
   3af68:	ldr	r1, [fp, #-12]
   3af6c:	ldr	r2, [fp, #12]
   3af70:	lsl	r2, r2, #3
   3af74:	bl	11248 <memcpy@plt>
   3af78:	b	3af90 <__assert_fail@plt+0x29afc>
   3af7c:	ldr	r0, [fp, #8]
   3af80:	ldr	r1, [fp, #-8]
   3af84:	ldr	r2, [sp, #12]
   3af88:	add	r1, r1, r2, lsl #3
   3af8c:	str	r0, [r1, #4]
   3af90:	b	3af94 <__assert_fail@plt+0x29b00>
   3af94:	b	3af98 <__assert_fail@plt+0x29b04>
   3af98:	b	3af9c <__assert_fail@plt+0x29b08>
   3af9c:	b	3afa0 <__assert_fail@plt+0x29b0c>
   3afa0:	mov	sp, fp
   3afa4:	pop	{fp, pc}
   3afa8:	push	{fp, lr}
   3afac:	mov	fp, sp
   3afb0:	sub	sp, sp, #40	; 0x28
   3afb4:	ldr	ip, [fp, #12]
   3afb8:	ldr	lr, [fp, #8]
   3afbc:	str	r0, [fp, #-8]
   3afc0:	str	r1, [fp, #-12]
   3afc4:	str	r2, [fp, #-16]
   3afc8:	str	r3, [sp, #20]
   3afcc:	ldr	r0, [fp, #-8]
   3afd0:	movw	r1, #0
   3afd4:	cmp	r0, r1
   3afd8:	str	lr, [sp, #12]
   3afdc:	str	ip, [sp, #8]
   3afe0:	beq	3aff4 <__assert_fail@plt+0x29b60>
   3afe4:	ldr	r0, [fp, #-8]
   3afe8:	ldr	r0, [r0]
   3afec:	cmp	r0, #0
   3aff0:	bne	3b000 <__assert_fail@plt+0x29b6c>
   3aff4:	mvn	r0, #0
   3aff8:	str	r0, [fp, #-4]
   3affc:	b	3b13c <__assert_fail@plt+0x29ca8>
   3b000:	ldr	r0, [fp, #-8]
   3b004:	ldr	r1, [r0]
   3b008:	sub	r1, r1, #1
   3b00c:	str	r1, [r0]
   3b010:	str	r1, [sp, #16]
   3b014:	ldr	r0, [fp, #-8]
   3b018:	ldr	r0, [r0, #8]
   3b01c:	ldr	r1, [sp, #16]
   3b020:	add	r1, r1, r1, lsl #1
   3b024:	ldr	r0, [r0, r1, lsl #3]
   3b028:	ldr	r1, [fp, #-12]
   3b02c:	str	r0, [r1]
   3b030:	ldr	r0, [sp, #20]
   3b034:	ldr	r1, [fp, #-8]
   3b038:	ldr	r1, [r1, #8]
   3b03c:	ldr	r2, [sp, #16]
   3b040:	add	r2, r2, r2, lsl #1
   3b044:	add	r1, r1, r2, lsl #3
   3b048:	ldr	r1, [r1, #8]
   3b04c:	ldr	r2, [fp, #-16]
   3b050:	lsl	r2, r2, #3
   3b054:	bl	11248 <memcpy@plt>
   3b058:	ldr	r1, [fp, #8]
   3b05c:	ldr	r2, [fp, #-8]
   3b060:	ldr	r2, [r2, #8]
   3b064:	ldr	lr, [sp, #16]
   3b068:	add	lr, lr, lr, lsl #1
   3b06c:	add	r2, r2, lr, lsl #3
   3b070:	ldr	r2, [r2, #8]
   3b074:	ldr	lr, [fp, #-16]
   3b078:	add	r2, r2, lr, lsl #3
   3b07c:	lsl	lr, lr, #3
   3b080:	str	r0, [sp, #4]
   3b084:	mov	r0, r1
   3b088:	mov	r1, r2
   3b08c:	mov	r2, lr
   3b090:	bl	11248 <memcpy@plt>
   3b094:	ldr	r0, [fp, #12]
   3b098:	ldr	r0, [r0, #8]
   3b09c:	bl	138a4 <__assert_fail@plt+0x2410>
   3b0a0:	ldr	r0, [fp, #-8]
   3b0a4:	ldr	r0, [r0, #8]
   3b0a8:	ldr	r1, [sp, #16]
   3b0ac:	movw	r2, #24
   3b0b0:	mul	r1, r1, r2
   3b0b4:	add	r0, r0, r1
   3b0b8:	ldr	r0, [r0, #8]
   3b0bc:	bl	138a4 <__assert_fail@plt+0x2410>
   3b0c0:	ldr	r0, [fp, #12]
   3b0c4:	ldr	r1, [fp, #-8]
   3b0c8:	ldr	r1, [r1, #8]
   3b0cc:	ldr	r2, [sp, #16]
   3b0d0:	movw	lr, #24
   3b0d4:	mul	r2, r2, lr
   3b0d8:	add	r1, r1, r2
   3b0dc:	ldr	r2, [r1, #12]
   3b0e0:	str	r2, [r0]
   3b0e4:	ldr	r2, [r1, #16]
   3b0e8:	str	r2, [r0, #4]
   3b0ec:	ldr	r1, [r1, #20]
   3b0f0:	str	r1, [r0, #8]
   3b0f4:	ldr	r0, [fp, #-8]
   3b0f8:	ldr	r0, [r0, #8]
   3b0fc:	ldr	r1, [sp, #16]
   3b100:	mul	r1, r1, lr
   3b104:	add	r0, r0, r1
   3b108:	ldr	r0, [r0, #4]
   3b10c:	movw	r1, #0
   3b110:	cmp	r1, r0
   3b114:	bgt	3b11c <__assert_fail@plt+0x29c88>
   3b118:	b	3b11c <__assert_fail@plt+0x29c88>
   3b11c:	ldr	r0, [fp, #-8]
   3b120:	ldr	r0, [r0, #8]
   3b124:	ldr	r1, [sp, #16]
   3b128:	movw	r2, #24
   3b12c:	mul	r1, r1, r2
   3b130:	add	r0, r0, r1
   3b134:	ldr	r0, [r0, #4]
   3b138:	str	r0, [fp, #-4]
   3b13c:	ldr	r0, [fp, #-4]
   3b140:	mov	sp, fp
   3b144:	pop	{fp, pc}
   3b148:	push	{r4, r5, fp, lr}
   3b14c:	add	fp, sp, #8
   3b150:	sub	sp, sp, #112	; 0x70
   3b154:	ldr	ip, [fp, #20]
   3b158:	ldr	lr, [fp, #16]
   3b15c:	ldr	r4, [fp, #12]
   3b160:	ldr	r5, [fp, #8]
   3b164:	str	r0, [fp, #-16]
   3b168:	str	r1, [fp, #-20]	; 0xffffffec
   3b16c:	str	r2, [fp, #-24]	; 0xffffffe8
   3b170:	str	r3, [fp, #-28]	; 0xffffffe4
   3b174:	ldr	r0, [fp, #-16]
   3b178:	ldr	r0, [r0, #84]	; 0x54
   3b17c:	str	r0, [fp, #-32]	; 0xffffffe0
   3b180:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3b184:	ldr	r0, [r0]
   3b188:	ldr	r1, [fp, #12]
   3b18c:	add	r0, r0, r1, lsl #3
   3b190:	ldr	r0, [r0, #4]
   3b194:	and	r0, r0, #255	; 0xff
   3b198:	and	r0, r0, #8
   3b19c:	cmp	r0, #0
   3b1a0:	str	r5, [sp, #32]
   3b1a4:	str	ip, [sp, #28]
   3b1a8:	str	lr, [sp, #24]
   3b1ac:	str	r4, [sp, #20]
   3b1b0:	beq	3b344 <__assert_fail@plt+0x29eb0>
   3b1b4:	ldr	r0, [fp, #-16]
   3b1b8:	ldr	r0, [r0, #100]	; 0x64
   3b1bc:	ldr	r1, [fp, #8]
   3b1c0:	ldr	r1, [r1]
   3b1c4:	add	r0, r0, r1, lsl #2
   3b1c8:	ldr	r0, [r0]
   3b1cc:	add	r0, r0, #4
   3b1d0:	str	r0, [fp, #-36]	; 0xffffffdc
   3b1d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3b1d8:	ldr	r0, [r0, #20]
   3b1dc:	ldr	r1, [fp, #12]
   3b1e0:	movw	r2, #12
   3b1e4:	mul	r1, r1, r2
   3b1e8:	add	r0, r0, r1
   3b1ec:	str	r0, [fp, #-40]	; 0xffffffd8
   3b1f0:	ldr	r0, [fp, #16]
   3b1f4:	ldr	r1, [fp, #12]
   3b1f8:	bl	30e4c <__assert_fail@plt+0x1f9b8>
   3b1fc:	cmp	r0, #0
   3b200:	bne	3b23c <__assert_fail@plt+0x29da8>
   3b204:	ldr	r0, [fp, #16]
   3b208:	ldr	r1, [fp, #12]
   3b20c:	bl	30990 <__assert_fail@plt+0x1f4fc>
   3b210:	and	r0, r0, #1
   3b214:	strb	r0, [fp, #-41]	; 0xffffffd7
   3b218:	ldrb	r0, [fp, #-41]	; 0xffffffd7
   3b21c:	mvn	r1, #0
   3b220:	eor	r0, r0, r1
   3b224:	tst	r0, #1
   3b228:	beq	3b238 <__assert_fail@plt+0x29da4>
   3b22c:	mvn	r0, #1
   3b230:	str	r0, [fp, #-12]
   3b234:	b	3b6b8 <__assert_fail@plt+0x2a224>
   3b238:	b	3b23c <__assert_fail@plt+0x29da8>
   3b23c:	mvn	r0, #0
   3b240:	str	r0, [fp, #-48]	; 0xffffffd0
   3b244:	movw	r0, #0
   3b248:	str	r0, [fp, #-52]	; 0xffffffcc
   3b24c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   3b250:	ldr	r1, [fp, #-40]	; 0xffffffd8
   3b254:	ldr	r1, [r1, #4]
   3b258:	cmp	r0, r1
   3b25c:	bge	3b338 <__assert_fail@plt+0x29ea4>
   3b260:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3b264:	ldr	r0, [r0, #8]
   3b268:	ldr	r1, [fp, #-52]	; 0xffffffcc
   3b26c:	add	r0, r0, r1, lsl #2
   3b270:	ldr	r0, [r0]
   3b274:	str	r0, [fp, #-56]	; 0xffffffc8
   3b278:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3b27c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   3b280:	bl	30e4c <__assert_fail@plt+0x1f9b8>
   3b284:	cmp	r0, #0
   3b288:	bne	3b290 <__assert_fail@plt+0x29dfc>
   3b28c:	b	3b328 <__assert_fail@plt+0x29e94>
   3b290:	ldr	r0, [fp, #-48]	; 0xffffffd0
   3b294:	cmn	r0, #1
   3b298:	bne	3b2a8 <__assert_fail@plt+0x29e14>
   3b29c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   3b2a0:	str	r0, [fp, #-48]	; 0xffffffd0
   3b2a4:	b	3b324 <__assert_fail@plt+0x29e90>
   3b2a8:	ldr	r0, [fp, #16]
   3b2ac:	ldr	r1, [fp, #-48]	; 0xffffffd0
   3b2b0:	bl	30e4c <__assert_fail@plt+0x1f9b8>
   3b2b4:	cmp	r0, #0
   3b2b8:	beq	3b2c8 <__assert_fail@plt+0x29e34>
   3b2bc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   3b2c0:	str	r0, [fp, #-12]
   3b2c4:	b	3b6b8 <__assert_fail@plt+0x2a224>
   3b2c8:	ldr	r0, [fp, #20]
   3b2cc:	movw	r1, #0
   3b2d0:	cmp	r0, r1
   3b2d4:	beq	3b31c <__assert_fail@plt+0x29e88>
   3b2d8:	ldr	r0, [fp, #20]
   3b2dc:	ldr	r1, [fp, #8]
   3b2e0:	ldr	r1, [r1]
   3b2e4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   3b2e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   3b2ec:	ldr	ip, [fp, #-24]	; 0xffffffe8
   3b2f0:	ldr	lr, [fp, #-28]	; 0xffffffe4
   3b2f4:	ldr	r4, [fp, #16]
   3b2f8:	str	ip, [sp]
   3b2fc:	str	lr, [sp, #4]
   3b300:	str	r4, [sp, #8]
   3b304:	bl	3b778 <__assert_fail@plt+0x2a2e4>
   3b308:	cmp	r0, #0
   3b30c:	beq	3b31c <__assert_fail@plt+0x29e88>
   3b310:	mvn	r0, #1
   3b314:	str	r0, [fp, #-12]
   3b318:	b	3b6b8 <__assert_fail@plt+0x2a224>
   3b31c:	b	3b320 <__assert_fail@plt+0x29e8c>
   3b320:	b	3b338 <__assert_fail@plt+0x29ea4>
   3b324:	b	3b328 <__assert_fail@plt+0x29e94>
   3b328:	ldr	r0, [fp, #-52]	; 0xffffffcc
   3b32c:	add	r0, r0, #1
   3b330:	str	r0, [fp, #-52]	; 0xffffffcc
   3b334:	b	3b24c <__assert_fail@plt+0x29db8>
   3b338:	ldr	r0, [fp, #-48]	; 0xffffffd0
   3b33c:	str	r0, [fp, #-12]
   3b340:	b	3b6b8 <__assert_fail@plt+0x2a224>
   3b344:	mov	r0, #0
   3b348:	str	r0, [sp, #60]	; 0x3c
   3b34c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3b350:	ldr	r0, [r0]
   3b354:	ldr	r1, [fp, #12]
   3b358:	add	r0, r0, r1, lsl #3
   3b35c:	ldrb	r0, [r0, #4]
   3b360:	str	r0, [sp, #56]	; 0x38
   3b364:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3b368:	ldr	r0, [r0]
   3b36c:	ldr	r1, [fp, #12]
   3b370:	add	r0, r0, r1, lsl #3
   3b374:	ldr	r0, [r0, #4]
   3b378:	lsr	r0, r0, #20
   3b37c:	and	r0, r0, #1
   3b380:	cmp	r0, #0
   3b384:	beq	3b3a8 <__assert_fail@plt+0x29f14>
   3b388:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3b38c:	ldr	r1, [fp, #12]
   3b390:	ldr	r2, [fp, #-16]
   3b394:	ldr	r3, [fp, #8]
   3b398:	ldr	r3, [r3]
   3b39c:	bl	36ed8 <__assert_fail@plt+0x25a44>
   3b3a0:	str	r0, [sp, #60]	; 0x3c
   3b3a4:	b	3b584 <__assert_fail@plt+0x2a0f0>
   3b3a8:	ldr	r0, [sp, #56]	; 0x38
   3b3ac:	cmp	r0, #4
   3b3b0:	bne	3b580 <__assert_fail@plt+0x2a0ec>
   3b3b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3b3b8:	ldr	r0, [r0]
   3b3bc:	ldr	r1, [fp, #12]
   3b3c0:	add	r0, r0, r1, lsl #3
   3b3c4:	ldr	r0, [r0]
   3b3c8:	add	r0, r0, #1
   3b3cc:	str	r0, [sp, #52]	; 0x34
   3b3d0:	ldr	r0, [sp, #52]	; 0x34
   3b3d4:	ldr	r1, [fp, #-20]	; 0xffffffec
   3b3d8:	cmp	r0, r1
   3b3dc:	bge	3b3fc <__assert_fail@plt+0x29f68>
   3b3e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3b3e4:	ldr	r1, [sp, #52]	; 0x34
   3b3e8:	add	r0, r0, r1, lsl #3
   3b3ec:	ldr	r1, [r0, #4]
   3b3f0:	ldr	r0, [r0]
   3b3f4:	sub	r0, r1, r0
   3b3f8:	str	r0, [sp, #60]	; 0x3c
   3b3fc:	ldr	r0, [fp, #20]
   3b400:	movw	r1, #0
   3b404:	cmp	r0, r1
   3b408:	beq	3b4e0 <__assert_fail@plt+0x2a04c>
   3b40c:	ldr	r0, [sp, #52]	; 0x34
   3b410:	ldr	r1, [fp, #-20]	; 0xffffffec
   3b414:	cmp	r0, r1
   3b418:	bge	3b44c <__assert_fail@plt+0x29fb8>
   3b41c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3b420:	ldr	r1, [sp, #52]	; 0x34
   3b424:	add	r0, r0, r1, lsl #3
   3b428:	ldr	r0, [r0]
   3b42c:	cmn	r0, #1
   3b430:	beq	3b44c <__assert_fail@plt+0x29fb8>
   3b434:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3b438:	ldr	r1, [sp, #52]	; 0x34
   3b43c:	add	r0, r0, r1, lsl #3
   3b440:	ldr	r0, [r0, #4]
   3b444:	cmn	r0, #1
   3b448:	bne	3b458 <__assert_fail@plt+0x29fc4>
   3b44c:	mvn	r0, #0
   3b450:	str	r0, [fp, #-12]
   3b454:	b	3b6b8 <__assert_fail@plt+0x2a224>
   3b458:	ldr	r0, [sp, #60]	; 0x3c
   3b45c:	cmp	r0, #0
   3b460:	beq	3b4d8 <__assert_fail@plt+0x2a044>
   3b464:	ldr	r0, [fp, #-16]
   3b468:	ldr	r0, [r0, #4]
   3b46c:	str	r0, [sp, #48]	; 0x30
   3b470:	ldr	r0, [fp, #-16]
   3b474:	ldr	r0, [r0, #28]
   3b478:	ldr	r1, [fp, #8]
   3b47c:	ldr	r1, [r1]
   3b480:	sub	r0, r0, r1
   3b484:	ldr	r1, [sp, #60]	; 0x3c
   3b488:	cmp	r0, r1
   3b48c:	blt	3b4c8 <__assert_fail@plt+0x2a034>
   3b490:	ldr	r0, [sp, #48]	; 0x30
   3b494:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3b498:	ldr	r2, [sp, #52]	; 0x34
   3b49c:	add	r1, r1, r2, lsl #3
   3b4a0:	ldr	r1, [r1]
   3b4a4:	add	r0, r0, r1
   3b4a8:	ldr	r1, [sp, #48]	; 0x30
   3b4ac:	ldr	r2, [fp, #8]
   3b4b0:	ldr	r2, [r2]
   3b4b4:	add	r1, r1, r2
   3b4b8:	ldr	r2, [sp, #60]	; 0x3c
   3b4bc:	bl	11284 <memcmp@plt>
   3b4c0:	cmp	r0, #0
   3b4c4:	beq	3b4d4 <__assert_fail@plt+0x2a040>
   3b4c8:	mvn	r0, #0
   3b4cc:	str	r0, [fp, #-12]
   3b4d0:	b	3b6b8 <__assert_fail@plt+0x2a224>
   3b4d4:	b	3b4d8 <__assert_fail@plt+0x2a044>
   3b4d8:	b	3b4dc <__assert_fail@plt+0x2a048>
   3b4dc:	b	3b4e0 <__assert_fail@plt+0x2a04c>
   3b4e0:	ldr	r0, [sp, #60]	; 0x3c
   3b4e4:	cmp	r0, #0
   3b4e8:	bne	3b57c <__assert_fail@plt+0x2a0e8>
   3b4ec:	ldr	r0, [fp, #16]
   3b4f0:	ldr	r1, [fp, #12]
   3b4f4:	bl	30990 <__assert_fail@plt+0x1f4fc>
   3b4f8:	and	r0, r0, #1
   3b4fc:	strb	r0, [sp, #43]	; 0x2b
   3b500:	ldrb	r0, [sp, #43]	; 0x2b
   3b504:	mvn	r1, #0
   3b508:	eor	r0, r0, r1
   3b50c:	tst	r0, #1
   3b510:	beq	3b520 <__assert_fail@plt+0x2a08c>
   3b514:	mvn	r0, #1
   3b518:	str	r0, [fp, #-12]
   3b51c:	b	3b6b8 <__assert_fail@plt+0x2a224>
   3b520:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3b524:	ldr	r0, [r0, #20]
   3b528:	ldr	r1, [fp, #12]
   3b52c:	add	r1, r1, r1, lsl #1
   3b530:	add	r0, r0, r1, lsl #2
   3b534:	ldr	r0, [r0, #8]
   3b538:	ldr	r0, [r0]
   3b53c:	str	r0, [sp, #44]	; 0x2c
   3b540:	ldr	r0, [fp, #-16]
   3b544:	ldr	r0, [r0, #100]	; 0x64
   3b548:	ldr	r1, [fp, #8]
   3b54c:	ldr	r1, [r1]
   3b550:	add	r0, r0, r1, lsl #2
   3b554:	ldr	r0, [r0]
   3b558:	add	r0, r0, #4
   3b55c:	ldr	r1, [sp, #44]	; 0x2c
   3b560:	bl	30e4c <__assert_fail@plt+0x1f9b8>
   3b564:	cmp	r0, #0
   3b568:	beq	3b578 <__assert_fail@plt+0x2a0e4>
   3b56c:	ldr	r0, [sp, #44]	; 0x2c
   3b570:	str	r0, [fp, #-12]
   3b574:	b	3b6b8 <__assert_fail@plt+0x2a224>
   3b578:	b	3b57c <__assert_fail@plt+0x2a0e8>
   3b57c:	b	3b580 <__assert_fail@plt+0x2a0ec>
   3b580:	b	3b584 <__assert_fail@plt+0x2a0f0>
   3b584:	ldr	r0, [sp, #60]	; 0x3c
   3b588:	cmp	r0, #0
   3b58c:	bne	3b5b8 <__assert_fail@plt+0x2a124>
   3b590:	ldr	r0, [fp, #-16]
   3b594:	ldr	r1, [fp, #-32]	; 0xffffffe0
   3b598:	ldr	r1, [r1]
   3b59c:	ldr	r2, [fp, #12]
   3b5a0:	add	r1, r1, r2, lsl #3
   3b5a4:	ldr	r2, [fp, #8]
   3b5a8:	ldr	r2, [r2]
   3b5ac:	bl	374c0 <__assert_fail@plt+0x2602c>
   3b5b0:	tst	r0, #1
   3b5b4:	beq	3b6ac <__assert_fail@plt+0x2a218>
   3b5b8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3b5bc:	ldr	r0, [r0, #12]
   3b5c0:	ldr	r1, [fp, #12]
   3b5c4:	add	r0, r0, r1, lsl #2
   3b5c8:	ldr	r0, [r0]
   3b5cc:	str	r0, [sp, #36]	; 0x24
   3b5d0:	ldr	r0, [sp, #60]	; 0x3c
   3b5d4:	cmp	r0, #0
   3b5d8:	bne	3b5f0 <__assert_fail@plt+0x2a15c>
   3b5dc:	ldr	r0, [fp, #8]
   3b5e0:	ldr	r0, [r0]
   3b5e4:	add	r0, r0, #1
   3b5e8:	str	r0, [sp, #16]
   3b5ec:	b	3b604 <__assert_fail@plt+0x2a170>
   3b5f0:	ldr	r0, [fp, #8]
   3b5f4:	ldr	r0, [r0]
   3b5f8:	ldr	r1, [sp, #60]	; 0x3c
   3b5fc:	add	r0, r0, r1
   3b600:	str	r0, [sp, #16]
   3b604:	ldr	r0, [sp, #16]
   3b608:	ldr	r1, [fp, #8]
   3b60c:	str	r0, [r1]
   3b610:	ldr	r0, [fp, #20]
   3b614:	movw	r1, #0
   3b618:	cmp	r0, r1
   3b61c:	beq	3b694 <__assert_fail@plt+0x2a200>
   3b620:	ldr	r0, [fp, #8]
   3b624:	ldr	r0, [r0]
   3b628:	ldr	r1, [fp, #-16]
   3b62c:	ldr	r1, [r1, #92]	; 0x5c
   3b630:	cmp	r0, r1
   3b634:	bgt	3b688 <__assert_fail@plt+0x2a1f4>
   3b638:	ldr	r0, [fp, #-16]
   3b63c:	ldr	r0, [r0, #100]	; 0x64
   3b640:	ldr	r1, [fp, #8]
   3b644:	ldr	r1, [r1]
   3b648:	add	r0, r0, r1, lsl #2
   3b64c:	ldr	r0, [r0]
   3b650:	movw	r1, #0
   3b654:	cmp	r0, r1
   3b658:	beq	3b688 <__assert_fail@plt+0x2a1f4>
   3b65c:	ldr	r0, [fp, #-16]
   3b660:	ldr	r0, [r0, #100]	; 0x64
   3b664:	ldr	r1, [fp, #8]
   3b668:	ldr	r1, [r1]
   3b66c:	add	r0, r0, r1, lsl #2
   3b670:	ldr	r0, [r0]
   3b674:	add	r0, r0, #4
   3b678:	ldr	r1, [sp, #36]	; 0x24
   3b67c:	bl	30e4c <__assert_fail@plt+0x1f9b8>
   3b680:	cmp	r0, #0
   3b684:	bne	3b694 <__assert_fail@plt+0x2a200>
   3b688:	mvn	r0, #0
   3b68c:	str	r0, [fp, #-12]
   3b690:	b	3b6b8 <__assert_fail@plt+0x2a224>
   3b694:	ldr	r0, [fp, #16]
   3b698:	movw	r1, #0
   3b69c:	str	r1, [r0, #4]
   3b6a0:	ldr	r0, [sp, #36]	; 0x24
   3b6a4:	str	r0, [fp, #-12]
   3b6a8:	b	3b6b8 <__assert_fail@plt+0x2a224>
   3b6ac:	b	3b6b0 <__assert_fail@plt+0x2a21c>
   3b6b0:	mvn	r0, #0
   3b6b4:	str	r0, [fp, #-12]
   3b6b8:	ldr	r0, [fp, #-12]
   3b6bc:	sub	sp, fp, #8
   3b6c0:	pop	{r4, r5, fp, pc}
   3b6c4:	push	{fp, lr}
   3b6c8:	mov	fp, sp
   3b6cc:	sub	sp, sp, #8
   3b6d0:	str	r0, [sp, #4]
   3b6d4:	ldr	r0, [sp, #4]
   3b6d8:	ldr	r0, [r0, #8]
   3b6dc:	ldr	r1, [sp, #4]
   3b6e0:	ldr	r1, [r1]
   3b6e4:	bl	3b720 <__assert_fail@plt+0x2a28c>
   3b6e8:	ldr	r0, [sp, #4]
   3b6ec:	bl	3b734 <__assert_fail@plt+0x2a2a0>
   3b6f0:	ldr	r0, [sp, #4]
   3b6f4:	add	r0, r0, #12
   3b6f8:	ldr	r1, [sp, #4]
   3b6fc:	str	r0, [r1, #8]
   3b700:	ldr	r0, [sp, #4]
   3b704:	movw	r1, #0
   3b708:	str	r1, [r0]
   3b70c:	bl	3b770 <__assert_fail@plt+0x2a2dc>
   3b710:	ldr	r1, [sp, #4]
   3b714:	str	r0, [r1, #4]
   3b718:	mov	sp, fp
   3b71c:	pop	{fp, pc}
   3b720:	sub	sp, sp, #8
   3b724:	str	r0, [sp, #4]
   3b728:	str	r1, [sp]
   3b72c:	add	sp, sp, #8
   3b730:	bx	lr
   3b734:	push	{fp, lr}
   3b738:	mov	fp, sp
   3b73c:	sub	sp, sp, #8
   3b740:	str	r0, [sp, #4]
   3b744:	ldr	r0, [sp, #4]
   3b748:	ldr	r0, [r0, #8]
   3b74c:	ldr	r1, [sp, #4]
   3b750:	add	r1, r1, #12
   3b754:	cmp	r0, r1
   3b758:	beq	3b768 <__assert_fail@plt+0x2a2d4>
   3b75c:	ldr	r0, [sp, #4]
   3b760:	ldr	r0, [r0, #8]
   3b764:	bl	138a4 <__assert_fail@plt+0x2410>
   3b768:	mov	sp, fp
   3b76c:	pop	{fp, pc}
   3b770:	mvn	r0, #0
   3b774:	bx	lr
   3b778:	push	{r4, sl, fp, lr}
   3b77c:	add	fp, sp, #8
   3b780:	sub	sp, sp, #56	; 0x38
   3b784:	ldr	ip, [fp, #16]
   3b788:	ldr	lr, [fp, #12]
   3b78c:	ldr	r4, [fp, #8]
   3b790:	str	r0, [fp, #-16]
   3b794:	str	r1, [fp, #-20]	; 0xffffffec
   3b798:	str	r2, [fp, #-24]	; 0xffffffe8
   3b79c:	str	r3, [fp, #-28]	; 0xffffffe4
   3b7a0:	ldr	r0, [fp, #-16]
   3b7a4:	ldr	r1, [r0]
   3b7a8:	add	r2, r1, #1
   3b7ac:	str	r2, [r0]
   3b7b0:	str	r1, [sp, #28]
   3b7b4:	ldr	r0, [fp, #-16]
   3b7b8:	ldr	r0, [r0]
   3b7bc:	ldr	r1, [fp, #-16]
   3b7c0:	ldr	r1, [r1, #4]
   3b7c4:	cmp	r0, r1
   3b7c8:	str	r4, [sp, #20]
   3b7cc:	str	lr, [sp, #16]
   3b7d0:	str	ip, [sp, #12]
   3b7d4:	bne	3b830 <__assert_fail@plt+0x2a39c>
   3b7d8:	ldr	r0, [fp, #-16]
   3b7dc:	ldr	r1, [r0, #4]
   3b7e0:	ldr	r0, [r0, #8]
   3b7e4:	lsl	r1, r1, #1
   3b7e8:	movw	r2, #24
   3b7ec:	mul	r1, r1, r2
   3b7f0:	bl	3fc48 <__assert_fail@plt+0x2e7b4>
   3b7f4:	str	r0, [sp, #24]
   3b7f8:	ldr	r0, [sp, #24]
   3b7fc:	movw	r1, #0
   3b800:	cmp	r0, r1
   3b804:	bne	3b814 <__assert_fail@plt+0x2a380>
   3b808:	movw	r0, #12
   3b80c:	str	r0, [fp, #-12]
   3b810:	b	3b954 <__assert_fail@plt+0x2a4c0>
   3b814:	ldr	r0, [fp, #-16]
   3b818:	ldr	r1, [r0, #4]
   3b81c:	lsl	r1, r1, #1
   3b820:	str	r1, [r0, #4]
   3b824:	ldr	r0, [sp, #24]
   3b828:	ldr	r1, [fp, #-16]
   3b82c:	str	r0, [r1, #8]
   3b830:	ldr	r0, [fp, #-20]	; 0xffffffec
   3b834:	ldr	r1, [fp, #-16]
   3b838:	ldr	r1, [r1, #8]
   3b83c:	ldr	r2, [sp, #28]
   3b840:	add	r2, r2, r2, lsl #1
   3b844:	str	r0, [r1, r2, lsl #3]
   3b848:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3b84c:	ldr	r1, [fp, #-16]
   3b850:	ldr	r1, [r1, #8]
   3b854:	ldr	r2, [sp, #28]
   3b858:	add	r2, r2, r2, lsl #1
   3b85c:	add	r1, r1, r2, lsl #3
   3b860:	str	r0, [r1, #4]
   3b864:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3b868:	lsl	r1, r0, #1
   3b86c:	lsl	r0, r0, #4
   3b870:	str	r1, [sp, #8]
   3b874:	bl	3fbd8 <__assert_fail@plt+0x2e744>
   3b878:	ldr	r1, [fp, #-16]
   3b87c:	ldr	r1, [r1, #8]
   3b880:	ldr	r2, [sp, #28]
   3b884:	movw	lr, #24
   3b888:	mul	r2, r2, lr
   3b88c:	add	r1, r1, r2
   3b890:	str	r0, [r1, #8]
   3b894:	ldr	r0, [fp, #-16]
   3b898:	ldr	r0, [r0, #8]
   3b89c:	ldr	r1, [sp, #28]
   3b8a0:	mul	r1, r1, lr
   3b8a4:	add	r0, r0, r1
   3b8a8:	ldr	r0, [r0, #8]
   3b8ac:	movw	r1, #0
   3b8b0:	cmp	r0, r1
   3b8b4:	bne	3b8c4 <__assert_fail@plt+0x2a430>
   3b8b8:	movw	r0, #12
   3b8bc:	str	r0, [fp, #-12]
   3b8c0:	b	3b954 <__assert_fail@plt+0x2a4c0>
   3b8c4:	ldr	r0, [fp, #-16]
   3b8c8:	ldr	r0, [r0, #8]
   3b8cc:	ldr	r1, [sp, #28]
   3b8d0:	add	r1, r1, r1, lsl #1
   3b8d4:	add	r0, r0, r1, lsl #3
   3b8d8:	ldr	r0, [r0, #8]
   3b8dc:	ldr	r1, [fp, #8]
   3b8e0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3b8e4:	lsl	r2, r2, #3
   3b8e8:	bl	11248 <memcpy@plt>
   3b8ec:	ldr	r1, [fp, #-16]
   3b8f0:	ldr	r1, [r1, #8]
   3b8f4:	ldr	r2, [sp, #28]
   3b8f8:	add	r2, r2, r2, lsl #1
   3b8fc:	add	r1, r1, r2, lsl #3
   3b900:	ldr	r1, [r1, #8]
   3b904:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3b908:	add	r1, r1, r2, lsl #3
   3b90c:	lsl	r2, r2, #3
   3b910:	ldr	lr, [fp, #12]
   3b914:	str	r0, [sp, #4]
   3b918:	mov	r0, r1
   3b91c:	mov	r1, lr
   3b920:	bl	11248 <memcpy@plt>
   3b924:	ldr	r0, [fp, #-16]
   3b928:	ldr	r0, [r0, #8]
   3b92c:	ldr	r1, [sp, #28]
   3b930:	movw	r2, #24
   3b934:	mul	r1, r1, r2
   3b938:	add	r0, r0, r1
   3b93c:	add	r0, r0, #12
   3b940:	ldr	r1, [fp, #16]
   3b944:	bl	30d78 <__assert_fail@plt+0x1f8e4>
   3b948:	str	r0, [sp, #32]
   3b94c:	ldr	r0, [sp, #32]
   3b950:	str	r0, [fp, #-12]
   3b954:	ldr	r0, [fp, #-12]
   3b958:	sub	sp, fp, #8
   3b95c:	pop	{r4, sl, fp, pc}
   3b960:	push	{fp, lr}
   3b964:	mov	fp, sp
   3b968:	sub	sp, sp, #16
   3b96c:	str	r0, [sp, #8]
   3b970:	str	r1, [sp, #4]
   3b974:	ldr	r0, [sp, #8]
   3b978:	ldr	r2, [sp, #4]
   3b97c:	mov	r1, #0
   3b980:	bl	113f8 <memchr@plt>
   3b984:	str	r0, [sp]
   3b988:	ldr	r0, [sp]
   3b98c:	movw	r1, #0
   3b990:	cmp	r0, r1
   3b994:	beq	3b9b0 <__assert_fail@plt+0x2a51c>
   3b998:	ldr	r0, [sp]
   3b99c:	ldr	r1, [sp, #8]
   3b9a0:	sub	r0, r0, r1
   3b9a4:	add	r0, r0, #1
   3b9a8:	str	r0, [fp, #-4]
   3b9ac:	b	3b9b8 <__assert_fail@plt+0x2a524>
   3b9b0:	ldr	r0, [sp, #4]
   3b9b4:	str	r0, [fp, #-4]
   3b9b8:	ldr	r0, [fp, #-4]
   3b9bc:	mov	sp, fp
   3b9c0:	pop	{fp, pc}
   3b9c4:	push	{fp, lr}
   3b9c8:	mov	fp, sp
   3b9cc:	sub	sp, sp, #16
   3b9d0:	str	r0, [fp, #-4]
   3b9d4:	str	r1, [sp, #8]
   3b9d8:	ldr	r0, [fp, #-4]
   3b9dc:	ldr	r1, [sp, #8]
   3b9e0:	movw	r2, #256	; 0x100
   3b9e4:	str	r2, [sp, #4]
   3b9e8:	ldr	r3, [sp, #4]
   3b9ec:	bl	3b9f8 <__assert_fail@plt+0x2a564>
   3b9f0:	mov	sp, fp
   3b9f4:	pop	{fp, pc}
   3b9f8:	push	{fp, lr}
   3b9fc:	mov	fp, sp
   3ba00:	sub	sp, sp, #72	; 0x48
   3ba04:	str	r0, [fp, #-8]
   3ba08:	str	r1, [fp, #-12]
   3ba0c:	str	r2, [fp, #-16]
   3ba10:	str	r3, [fp, #-20]	; 0xffffffec
   3ba14:	ldr	r0, [fp, #-8]
   3ba18:	ldrb	r0, [r0]
   3ba1c:	strb	r0, [fp, #-21]	; 0xffffffeb
   3ba20:	ldr	r0, [fp, #-12]
   3ba24:	ldrb	r0, [r0]
   3ba28:	strb	r0, [fp, #-22]	; 0xffffffea
   3ba2c:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   3ba30:	cmp	r0, #45	; 0x2d
   3ba34:	bne	3bdf0 <__assert_fail@plt+0x2a95c>
   3ba38:	b	3ba3c <__assert_fail@plt+0x2a5a8>
   3ba3c:	ldr	r0, [fp, #-8]
   3ba40:	add	r1, r0, #1
   3ba44:	str	r1, [fp, #-8]
   3ba48:	ldrb	r0, [r0, #1]
   3ba4c:	strb	r0, [fp, #-21]	; 0xffffffeb
   3ba50:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   3ba54:	cmp	r0, #48	; 0x30
   3ba58:	movw	r0, #1
   3ba5c:	str	r0, [sp, #32]
   3ba60:	beq	3ba7c <__assert_fail@plt+0x2a5e8>
   3ba64:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   3ba68:	ldr	r1, [fp, #-20]	; 0xffffffec
   3ba6c:	cmp	r0, r1
   3ba70:	movw	r0, #0
   3ba74:	moveq	r0, #1
   3ba78:	str	r0, [sp, #32]
   3ba7c:	ldr	r0, [sp, #32]
   3ba80:	tst	r0, #1
   3ba84:	bne	3ba3c <__assert_fail@plt+0x2a5a8>
   3ba88:	ldrb	r0, [fp, #-22]	; 0xffffffea
   3ba8c:	cmp	r0, #45	; 0x2d
   3ba90:	beq	3bb9c <__assert_fail@plt+0x2a708>
   3ba94:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   3ba98:	ldr	r1, [fp, #-16]
   3ba9c:	cmp	r0, r1
   3baa0:	bne	3bacc <__assert_fail@plt+0x2a638>
   3baa4:	b	3baa8 <__assert_fail@plt+0x2a614>
   3baa8:	ldr	r0, [fp, #-8]
   3baac:	add	r1, r0, #1
   3bab0:	str	r1, [fp, #-8]
   3bab4:	ldrb	r0, [r0, #1]
   3bab8:	strb	r0, [fp, #-21]	; 0xffffffeb
   3babc:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   3bac0:	cmp	r0, #48	; 0x30
   3bac4:	beq	3baa8 <__assert_fail@plt+0x2a614>
   3bac8:	b	3bacc <__assert_fail@plt+0x2a638>
   3bacc:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   3bad0:	sub	r0, r0, #48	; 0x30
   3bad4:	cmp	r0, #9
   3bad8:	bhi	3bae8 <__assert_fail@plt+0x2a654>
   3badc:	mvn	r0, #0
   3bae0:	str	r0, [fp, #-4]
   3bae4:	b	3c1f4 <__assert_fail@plt+0x2ad60>
   3bae8:	b	3baec <__assert_fail@plt+0x2a658>
   3baec:	ldrb	r0, [fp, #-22]	; 0xffffffea
   3baf0:	cmp	r0, #48	; 0x30
   3baf4:	movw	r0, #1
   3baf8:	str	r0, [sp, #28]
   3bafc:	beq	3bb18 <__assert_fail@plt+0x2a684>
   3bb00:	ldrb	r0, [fp, #-22]	; 0xffffffea
   3bb04:	ldr	r1, [fp, #-20]	; 0xffffffec
   3bb08:	cmp	r0, r1
   3bb0c:	movw	r0, #0
   3bb10:	moveq	r0, #1
   3bb14:	str	r0, [sp, #28]
   3bb18:	ldr	r0, [sp, #28]
   3bb1c:	tst	r0, #1
   3bb20:	beq	3bb3c <__assert_fail@plt+0x2a6a8>
   3bb24:	ldr	r0, [fp, #-12]
   3bb28:	add	r1, r0, #1
   3bb2c:	str	r1, [fp, #-12]
   3bb30:	ldrb	r0, [r0, #1]
   3bb34:	strb	r0, [fp, #-22]	; 0xffffffea
   3bb38:	b	3baec <__assert_fail@plt+0x2a658>
   3bb3c:	ldrb	r0, [fp, #-22]	; 0xffffffea
   3bb40:	ldr	r1, [fp, #-16]
   3bb44:	cmp	r0, r1
   3bb48:	bne	3bb74 <__assert_fail@plt+0x2a6e0>
   3bb4c:	b	3bb50 <__assert_fail@plt+0x2a6bc>
   3bb50:	ldr	r0, [fp, #-12]
   3bb54:	add	r1, r0, #1
   3bb58:	str	r1, [fp, #-12]
   3bb5c:	ldrb	r0, [r0, #1]
   3bb60:	strb	r0, [fp, #-22]	; 0xffffffea
   3bb64:	ldrb	r0, [fp, #-22]	; 0xffffffea
   3bb68:	cmp	r0, #48	; 0x30
   3bb6c:	beq	3bb50 <__assert_fail@plt+0x2a6bc>
   3bb70:	b	3bb74 <__assert_fail@plt+0x2a6e0>
   3bb74:	ldrb	r0, [fp, #-22]	; 0xffffffea
   3bb78:	sub	r0, r0, #48	; 0x30
   3bb7c:	cmp	r0, #9
   3bb80:	movw	r0, #0
   3bb84:	movls	r0, #1
   3bb88:	and	r0, r0, #1
   3bb8c:	movw	r1, #0
   3bb90:	sub	r0, r1, r0
   3bb94:	str	r0, [fp, #-4]
   3bb98:	b	3c1f4 <__assert_fail@plt+0x2ad60>
   3bb9c:	b	3bba0 <__assert_fail@plt+0x2a70c>
   3bba0:	ldr	r0, [fp, #-12]
   3bba4:	add	r1, r0, #1
   3bba8:	str	r1, [fp, #-12]
   3bbac:	ldrb	r0, [r0, #1]
   3bbb0:	strb	r0, [fp, #-22]	; 0xffffffea
   3bbb4:	ldrb	r0, [fp, #-22]	; 0xffffffea
   3bbb8:	cmp	r0, #48	; 0x30
   3bbbc:	movw	r0, #1
   3bbc0:	str	r0, [sp, #24]
   3bbc4:	beq	3bbe0 <__assert_fail@plt+0x2a74c>
   3bbc8:	ldrb	r0, [fp, #-22]	; 0xffffffea
   3bbcc:	ldr	r1, [fp, #-20]	; 0xffffffec
   3bbd0:	cmp	r0, r1
   3bbd4:	movw	r0, #0
   3bbd8:	moveq	r0, #1
   3bbdc:	str	r0, [sp, #24]
   3bbe0:	ldr	r0, [sp, #24]
   3bbe4:	tst	r0, #1
   3bbe8:	bne	3bba0 <__assert_fail@plt+0x2a70c>
   3bbec:	b	3bbf0 <__assert_fail@plt+0x2a75c>
   3bbf0:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   3bbf4:	ldrb	r1, [fp, #-22]	; 0xffffffea
   3bbf8:	cmp	r0, r1
   3bbfc:	movw	r0, #0
   3bc00:	str	r0, [sp, #20]
   3bc04:	bne	3bc20 <__assert_fail@plt+0x2a78c>
   3bc08:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   3bc0c:	sub	r0, r0, #48	; 0x30
   3bc10:	cmp	r0, #9
   3bc14:	movw	r0, #0
   3bc18:	movls	r0, #1
   3bc1c:	str	r0, [sp, #20]
   3bc20:	ldr	r0, [sp, #20]
   3bc24:	tst	r0, #1
   3bc28:	beq	3bc80 <__assert_fail@plt+0x2a7ec>
   3bc2c:	b	3bc30 <__assert_fail@plt+0x2a79c>
   3bc30:	ldr	r0, [fp, #-8]
   3bc34:	add	r1, r0, #1
   3bc38:	str	r1, [fp, #-8]
   3bc3c:	ldrb	r0, [r0, #1]
   3bc40:	strb	r0, [fp, #-21]	; 0xffffffeb
   3bc44:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   3bc48:	ldr	r1, [fp, #-20]	; 0xffffffec
   3bc4c:	cmp	r0, r1
   3bc50:	beq	3bc30 <__assert_fail@plt+0x2a79c>
   3bc54:	b	3bc58 <__assert_fail@plt+0x2a7c4>
   3bc58:	ldr	r0, [fp, #-12]
   3bc5c:	add	r1, r0, #1
   3bc60:	str	r1, [fp, #-12]
   3bc64:	ldrb	r0, [r0, #1]
   3bc68:	strb	r0, [fp, #-22]	; 0xffffffea
   3bc6c:	ldrb	r0, [fp, #-22]	; 0xffffffea
   3bc70:	ldr	r1, [fp, #-20]	; 0xffffffec
   3bc74:	cmp	r0, r1
   3bc78:	beq	3bc58 <__assert_fail@plt+0x2a7c4>
   3bc7c:	b	3bbf0 <__assert_fail@plt+0x2a75c>
   3bc80:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   3bc84:	ldr	r1, [fp, #-16]
   3bc88:	cmp	r0, r1
   3bc8c:	bne	3bca0 <__assert_fail@plt+0x2a80c>
   3bc90:	ldrb	r0, [fp, #-22]	; 0xffffffea
   3bc94:	sub	r0, r0, #48	; 0x30
   3bc98:	cmp	r0, #9
   3bc9c:	bhi	3bcc0 <__assert_fail@plt+0x2a82c>
   3bca0:	ldrb	r0, [fp, #-22]	; 0xffffffea
   3bca4:	ldr	r1, [fp, #-16]
   3bca8:	cmp	r0, r1
   3bcac:	bne	3bcdc <__assert_fail@plt+0x2a848>
   3bcb0:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   3bcb4:	sub	r0, r0, #48	; 0x30
   3bcb8:	cmp	r0, #9
   3bcbc:	bls	3bcdc <__assert_fail@plt+0x2a848>
   3bcc0:	ldr	r0, [fp, #-12]
   3bcc4:	ldr	r1, [fp, #-8]
   3bcc8:	ldr	r2, [fp, #-16]
   3bccc:	and	r2, r2, #255	; 0xff
   3bcd0:	bl	3c200 <__assert_fail@plt+0x2ad6c>
   3bcd4:	str	r0, [fp, #-4]
   3bcd8:	b	3c1f4 <__assert_fail@plt+0x2ad60>
   3bcdc:	ldrb	r0, [fp, #-22]	; 0xffffffea
   3bce0:	ldrb	r1, [fp, #-21]	; 0xffffffeb
   3bce4:	sub	r0, r0, r1
   3bce8:	str	r0, [fp, #-28]	; 0xffffffe4
   3bcec:	movw	r0, #0
   3bcf0:	str	r0, [fp, #-32]	; 0xffffffe0
   3bcf4:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   3bcf8:	sub	r0, r0, #48	; 0x30
   3bcfc:	cmp	r0, #9
   3bd00:	bhi	3bd40 <__assert_fail@plt+0x2a8ac>
   3bd04:	b	3bd08 <__assert_fail@plt+0x2a874>
   3bd08:	ldr	r0, [fp, #-8]
   3bd0c:	add	r1, r0, #1
   3bd10:	str	r1, [fp, #-8]
   3bd14:	ldrb	r0, [r0, #1]
   3bd18:	strb	r0, [fp, #-21]	; 0xffffffeb
   3bd1c:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   3bd20:	ldr	r1, [fp, #-20]	; 0xffffffec
   3bd24:	cmp	r0, r1
   3bd28:	beq	3bd08 <__assert_fail@plt+0x2a874>
   3bd2c:	b	3bd30 <__assert_fail@plt+0x2a89c>
   3bd30:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3bd34:	add	r0, r0, #1
   3bd38:	str	r0, [fp, #-32]	; 0xffffffe0
   3bd3c:	b	3bcf4 <__assert_fail@plt+0x2a860>
   3bd40:	movw	r0, #0
   3bd44:	str	r0, [sp, #36]	; 0x24
   3bd48:	ldrb	r0, [fp, #-22]	; 0xffffffea
   3bd4c:	sub	r0, r0, #48	; 0x30
   3bd50:	cmp	r0, #9
   3bd54:	bhi	3bd94 <__assert_fail@plt+0x2a900>
   3bd58:	b	3bd5c <__assert_fail@plt+0x2a8c8>
   3bd5c:	ldr	r0, [fp, #-12]
   3bd60:	add	r1, r0, #1
   3bd64:	str	r1, [fp, #-12]
   3bd68:	ldrb	r0, [r0, #1]
   3bd6c:	strb	r0, [fp, #-22]	; 0xffffffea
   3bd70:	ldrb	r0, [fp, #-22]	; 0xffffffea
   3bd74:	ldr	r1, [fp, #-20]	; 0xffffffec
   3bd78:	cmp	r0, r1
   3bd7c:	beq	3bd5c <__assert_fail@plt+0x2a8c8>
   3bd80:	b	3bd84 <__assert_fail@plt+0x2a8f0>
   3bd84:	ldr	r0, [sp, #36]	; 0x24
   3bd88:	add	r0, r0, #1
   3bd8c:	str	r0, [sp, #36]	; 0x24
   3bd90:	b	3bd48 <__assert_fail@plt+0x2a8b4>
   3bd94:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3bd98:	ldr	r1, [sp, #36]	; 0x24
   3bd9c:	cmp	r0, r1
   3bda0:	beq	3bdcc <__assert_fail@plt+0x2a938>
   3bda4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3bda8:	ldr	r1, [sp, #36]	; 0x24
   3bdac:	cmp	r0, r1
   3bdb0:	movw	r0, #0
   3bdb4:	movcc	r0, #1
   3bdb8:	tst	r0, #1
   3bdbc:	movw	r0, #1
   3bdc0:	mvneq	r0, #0
   3bdc4:	str	r0, [fp, #-4]
   3bdc8:	b	3c1f4 <__assert_fail@plt+0x2ad60>
   3bdcc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3bdd0:	cmp	r0, #0
   3bdd4:	bne	3bde4 <__assert_fail@plt+0x2a950>
   3bdd8:	movw	r0, #0
   3bddc:	str	r0, [fp, #-4]
   3bde0:	b	3c1f4 <__assert_fail@plt+0x2ad60>
   3bde4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3bde8:	str	r0, [fp, #-4]
   3bdec:	b	3c1f4 <__assert_fail@plt+0x2ad60>
   3bdf0:	ldrb	r0, [fp, #-22]	; 0xffffffea
   3bdf4:	cmp	r0, #45	; 0x2d
   3bdf8:	bne	3bf4c <__assert_fail@plt+0x2aab8>
   3bdfc:	b	3be00 <__assert_fail@plt+0x2a96c>
   3be00:	ldr	r0, [fp, #-12]
   3be04:	add	r1, r0, #1
   3be08:	str	r1, [fp, #-12]
   3be0c:	ldrb	r0, [r0, #1]
   3be10:	strb	r0, [fp, #-22]	; 0xffffffea
   3be14:	ldrb	r0, [fp, #-22]	; 0xffffffea
   3be18:	cmp	r0, #48	; 0x30
   3be1c:	movw	r0, #1
   3be20:	str	r0, [sp, #16]
   3be24:	beq	3be40 <__assert_fail@plt+0x2a9ac>
   3be28:	ldrb	r0, [fp, #-22]	; 0xffffffea
   3be2c:	ldr	r1, [fp, #-20]	; 0xffffffec
   3be30:	cmp	r0, r1
   3be34:	movw	r0, #0
   3be38:	moveq	r0, #1
   3be3c:	str	r0, [sp, #16]
   3be40:	ldr	r0, [sp, #16]
   3be44:	tst	r0, #1
   3be48:	bne	3be00 <__assert_fail@plt+0x2a96c>
   3be4c:	ldrb	r0, [fp, #-22]	; 0xffffffea
   3be50:	ldr	r1, [fp, #-16]
   3be54:	cmp	r0, r1
   3be58:	bne	3be84 <__assert_fail@plt+0x2a9f0>
   3be5c:	b	3be60 <__assert_fail@plt+0x2a9cc>
   3be60:	ldr	r0, [fp, #-12]
   3be64:	add	r1, r0, #1
   3be68:	str	r1, [fp, #-12]
   3be6c:	ldrb	r0, [r0, #1]
   3be70:	strb	r0, [fp, #-22]	; 0xffffffea
   3be74:	ldrb	r0, [fp, #-22]	; 0xffffffea
   3be78:	cmp	r0, #48	; 0x30
   3be7c:	beq	3be60 <__assert_fail@plt+0x2a9cc>
   3be80:	b	3be84 <__assert_fail@plt+0x2a9f0>
   3be84:	ldrb	r0, [fp, #-22]	; 0xffffffea
   3be88:	sub	r0, r0, #48	; 0x30
   3be8c:	cmp	r0, #9
   3be90:	bhi	3bea0 <__assert_fail@plt+0x2aa0c>
   3be94:	movw	r0, #1
   3be98:	str	r0, [fp, #-4]
   3be9c:	b	3c1f4 <__assert_fail@plt+0x2ad60>
   3bea0:	b	3bea4 <__assert_fail@plt+0x2aa10>
   3bea4:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   3bea8:	cmp	r0, #48	; 0x30
   3beac:	movw	r0, #1
   3beb0:	str	r0, [sp, #12]
   3beb4:	beq	3bed0 <__assert_fail@plt+0x2aa3c>
   3beb8:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   3bebc:	ldr	r1, [fp, #-20]	; 0xffffffec
   3bec0:	cmp	r0, r1
   3bec4:	movw	r0, #0
   3bec8:	moveq	r0, #1
   3becc:	str	r0, [sp, #12]
   3bed0:	ldr	r0, [sp, #12]
   3bed4:	tst	r0, #1
   3bed8:	beq	3bef4 <__assert_fail@plt+0x2aa60>
   3bedc:	ldr	r0, [fp, #-8]
   3bee0:	add	r1, r0, #1
   3bee4:	str	r1, [fp, #-8]
   3bee8:	ldrb	r0, [r0, #1]
   3beec:	strb	r0, [fp, #-21]	; 0xffffffeb
   3bef0:	b	3bea4 <__assert_fail@plt+0x2aa10>
   3bef4:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   3bef8:	ldr	r1, [fp, #-16]
   3befc:	cmp	r0, r1
   3bf00:	bne	3bf2c <__assert_fail@plt+0x2aa98>
   3bf04:	b	3bf08 <__assert_fail@plt+0x2aa74>
   3bf08:	ldr	r0, [fp, #-8]
   3bf0c:	add	r1, r0, #1
   3bf10:	str	r1, [fp, #-8]
   3bf14:	ldrb	r0, [r0, #1]
   3bf18:	strb	r0, [fp, #-21]	; 0xffffffeb
   3bf1c:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   3bf20:	cmp	r0, #48	; 0x30
   3bf24:	beq	3bf08 <__assert_fail@plt+0x2aa74>
   3bf28:	b	3bf2c <__assert_fail@plt+0x2aa98>
   3bf2c:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   3bf30:	sub	r0, r0, #48	; 0x30
   3bf34:	cmp	r0, #9
   3bf38:	movw	r0, #0
   3bf3c:	movls	r0, #1
   3bf40:	and	r0, r0, #1
   3bf44:	str	r0, [fp, #-4]
   3bf48:	b	3c1f4 <__assert_fail@plt+0x2ad60>
   3bf4c:	b	3bf50 <__assert_fail@plt+0x2aabc>
   3bf50:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   3bf54:	cmp	r0, #48	; 0x30
   3bf58:	movw	r0, #1
   3bf5c:	str	r0, [sp, #8]
   3bf60:	beq	3bf7c <__assert_fail@plt+0x2aae8>
   3bf64:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   3bf68:	ldr	r1, [fp, #-20]	; 0xffffffec
   3bf6c:	cmp	r0, r1
   3bf70:	movw	r0, #0
   3bf74:	moveq	r0, #1
   3bf78:	str	r0, [sp, #8]
   3bf7c:	ldr	r0, [sp, #8]
   3bf80:	tst	r0, #1
   3bf84:	beq	3bfa0 <__assert_fail@plt+0x2ab0c>
   3bf88:	ldr	r0, [fp, #-8]
   3bf8c:	add	r1, r0, #1
   3bf90:	str	r1, [fp, #-8]
   3bf94:	ldrb	r0, [r0, #1]
   3bf98:	strb	r0, [fp, #-21]	; 0xffffffeb
   3bf9c:	b	3bf50 <__assert_fail@plt+0x2aabc>
   3bfa0:	b	3bfa4 <__assert_fail@plt+0x2ab10>
   3bfa4:	ldrb	r0, [fp, #-22]	; 0xffffffea
   3bfa8:	cmp	r0, #48	; 0x30
   3bfac:	movw	r0, #1
   3bfb0:	str	r0, [sp, #4]
   3bfb4:	beq	3bfd0 <__assert_fail@plt+0x2ab3c>
   3bfb8:	ldrb	r0, [fp, #-22]	; 0xffffffea
   3bfbc:	ldr	r1, [fp, #-20]	; 0xffffffec
   3bfc0:	cmp	r0, r1
   3bfc4:	movw	r0, #0
   3bfc8:	moveq	r0, #1
   3bfcc:	str	r0, [sp, #4]
   3bfd0:	ldr	r0, [sp, #4]
   3bfd4:	tst	r0, #1
   3bfd8:	beq	3bff4 <__assert_fail@plt+0x2ab60>
   3bfdc:	ldr	r0, [fp, #-12]
   3bfe0:	add	r1, r0, #1
   3bfe4:	str	r1, [fp, #-12]
   3bfe8:	ldrb	r0, [r0, #1]
   3bfec:	strb	r0, [fp, #-22]	; 0xffffffea
   3bff0:	b	3bfa4 <__assert_fail@plt+0x2ab10>
   3bff4:	b	3bff8 <__assert_fail@plt+0x2ab64>
   3bff8:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   3bffc:	ldrb	r1, [fp, #-22]	; 0xffffffea
   3c000:	cmp	r0, r1
   3c004:	movw	r0, #0
   3c008:	str	r0, [sp]
   3c00c:	bne	3c028 <__assert_fail@plt+0x2ab94>
   3c010:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   3c014:	sub	r0, r0, #48	; 0x30
   3c018:	cmp	r0, #9
   3c01c:	movw	r0, #0
   3c020:	movls	r0, #1
   3c024:	str	r0, [sp]
   3c028:	ldr	r0, [sp]
   3c02c:	tst	r0, #1
   3c030:	beq	3c088 <__assert_fail@plt+0x2abf4>
   3c034:	b	3c038 <__assert_fail@plt+0x2aba4>
   3c038:	ldr	r0, [fp, #-8]
   3c03c:	add	r1, r0, #1
   3c040:	str	r1, [fp, #-8]
   3c044:	ldrb	r0, [r0, #1]
   3c048:	strb	r0, [fp, #-21]	; 0xffffffeb
   3c04c:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   3c050:	ldr	r1, [fp, #-20]	; 0xffffffec
   3c054:	cmp	r0, r1
   3c058:	beq	3c038 <__assert_fail@plt+0x2aba4>
   3c05c:	b	3c060 <__assert_fail@plt+0x2abcc>
   3c060:	ldr	r0, [fp, #-12]
   3c064:	add	r1, r0, #1
   3c068:	str	r1, [fp, #-12]
   3c06c:	ldrb	r0, [r0, #1]
   3c070:	strb	r0, [fp, #-22]	; 0xffffffea
   3c074:	ldrb	r0, [fp, #-22]	; 0xffffffea
   3c078:	ldr	r1, [fp, #-20]	; 0xffffffec
   3c07c:	cmp	r0, r1
   3c080:	beq	3c060 <__assert_fail@plt+0x2abcc>
   3c084:	b	3bff8 <__assert_fail@plt+0x2ab64>
   3c088:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   3c08c:	ldr	r1, [fp, #-16]
   3c090:	cmp	r0, r1
   3c094:	bne	3c0a8 <__assert_fail@plt+0x2ac14>
   3c098:	ldrb	r0, [fp, #-22]	; 0xffffffea
   3c09c:	sub	r0, r0, #48	; 0x30
   3c0a0:	cmp	r0, #9
   3c0a4:	bhi	3c0c8 <__assert_fail@plt+0x2ac34>
   3c0a8:	ldrb	r0, [fp, #-22]	; 0xffffffea
   3c0ac:	ldr	r1, [fp, #-16]
   3c0b0:	cmp	r0, r1
   3c0b4:	bne	3c0e4 <__assert_fail@plt+0x2ac50>
   3c0b8:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   3c0bc:	sub	r0, r0, #48	; 0x30
   3c0c0:	cmp	r0, #9
   3c0c4:	bls	3c0e4 <__assert_fail@plt+0x2ac50>
   3c0c8:	ldr	r0, [fp, #-8]
   3c0cc:	ldr	r1, [fp, #-12]
   3c0d0:	ldr	r2, [fp, #-16]
   3c0d4:	and	r2, r2, #255	; 0xff
   3c0d8:	bl	3c200 <__assert_fail@plt+0x2ad6c>
   3c0dc:	str	r0, [fp, #-4]
   3c0e0:	b	3c1f4 <__assert_fail@plt+0x2ad60>
   3c0e4:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   3c0e8:	ldrb	r1, [fp, #-22]	; 0xffffffea
   3c0ec:	sub	r0, r0, r1
   3c0f0:	str	r0, [fp, #-28]	; 0xffffffe4
   3c0f4:	movw	r0, #0
   3c0f8:	str	r0, [fp, #-32]	; 0xffffffe0
   3c0fc:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   3c100:	sub	r0, r0, #48	; 0x30
   3c104:	cmp	r0, #9
   3c108:	bhi	3c148 <__assert_fail@plt+0x2acb4>
   3c10c:	b	3c110 <__assert_fail@plt+0x2ac7c>
   3c110:	ldr	r0, [fp, #-8]
   3c114:	add	r1, r0, #1
   3c118:	str	r1, [fp, #-8]
   3c11c:	ldrb	r0, [r0, #1]
   3c120:	strb	r0, [fp, #-21]	; 0xffffffeb
   3c124:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   3c128:	ldr	r1, [fp, #-20]	; 0xffffffec
   3c12c:	cmp	r0, r1
   3c130:	beq	3c110 <__assert_fail@plt+0x2ac7c>
   3c134:	b	3c138 <__assert_fail@plt+0x2aca4>
   3c138:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3c13c:	add	r0, r0, #1
   3c140:	str	r0, [fp, #-32]	; 0xffffffe0
   3c144:	b	3c0fc <__assert_fail@plt+0x2ac68>
   3c148:	movw	r0, #0
   3c14c:	str	r0, [sp, #36]	; 0x24
   3c150:	ldrb	r0, [fp, #-22]	; 0xffffffea
   3c154:	sub	r0, r0, #48	; 0x30
   3c158:	cmp	r0, #9
   3c15c:	bhi	3c19c <__assert_fail@plt+0x2ad08>
   3c160:	b	3c164 <__assert_fail@plt+0x2acd0>
   3c164:	ldr	r0, [fp, #-12]
   3c168:	add	r1, r0, #1
   3c16c:	str	r1, [fp, #-12]
   3c170:	ldrb	r0, [r0, #1]
   3c174:	strb	r0, [fp, #-22]	; 0xffffffea
   3c178:	ldrb	r0, [fp, #-22]	; 0xffffffea
   3c17c:	ldr	r1, [fp, #-20]	; 0xffffffec
   3c180:	cmp	r0, r1
   3c184:	beq	3c164 <__assert_fail@plt+0x2acd0>
   3c188:	b	3c18c <__assert_fail@plt+0x2acf8>
   3c18c:	ldr	r0, [sp, #36]	; 0x24
   3c190:	add	r0, r0, #1
   3c194:	str	r0, [sp, #36]	; 0x24
   3c198:	b	3c150 <__assert_fail@plt+0x2acbc>
   3c19c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3c1a0:	ldr	r1, [sp, #36]	; 0x24
   3c1a4:	cmp	r0, r1
   3c1a8:	beq	3c1d4 <__assert_fail@plt+0x2ad40>
   3c1ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3c1b0:	ldr	r1, [sp, #36]	; 0x24
   3c1b4:	cmp	r0, r1
   3c1b8:	movw	r0, #0
   3c1bc:	movcc	r0, #1
   3c1c0:	tst	r0, #1
   3c1c4:	mvn	r0, #0
   3c1c8:	moveq	r0, #1
   3c1cc:	str	r0, [fp, #-4]
   3c1d0:	b	3c1f4 <__assert_fail@plt+0x2ad60>
   3c1d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3c1d8:	cmp	r0, #0
   3c1dc:	bne	3c1ec <__assert_fail@plt+0x2ad58>
   3c1e0:	movw	r0, #0
   3c1e4:	str	r0, [fp, #-4]
   3c1e8:	b	3c1f4 <__assert_fail@plt+0x2ad60>
   3c1ec:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3c1f0:	str	r0, [fp, #-4]
   3c1f4:	ldr	r0, [fp, #-4]
   3c1f8:	mov	sp, fp
   3c1fc:	pop	{fp, pc}
   3c200:	sub	sp, sp, #16
   3c204:	str	r0, [sp, #8]
   3c208:	str	r1, [sp, #4]
   3c20c:	strb	r2, [sp, #3]
   3c210:	ldr	r0, [sp, #8]
   3c214:	ldrb	r0, [r0]
   3c218:	ldrb	r1, [sp, #3]
   3c21c:	cmp	r0, r1
   3c220:	bne	3c308 <__assert_fail@plt+0x2ae74>
   3c224:	ldr	r0, [sp, #4]
   3c228:	ldrb	r0, [r0]
   3c22c:	ldrb	r1, [sp, #3]
   3c230:	cmp	r0, r1
   3c234:	bne	3c308 <__assert_fail@plt+0x2ae74>
   3c238:	b	3c23c <__assert_fail@plt+0x2ada8>
   3c23c:	ldr	r0, [sp, #8]
   3c240:	add	r1, r0, #1
   3c244:	str	r1, [sp, #8]
   3c248:	ldrb	r0, [r0, #1]
   3c24c:	ldr	r1, [sp, #4]
   3c250:	add	r2, r1, #1
   3c254:	str	r2, [sp, #4]
   3c258:	ldrb	r1, [r1, #1]
   3c25c:	cmp	r0, r1
   3c260:	bne	3c288 <__assert_fail@plt+0x2adf4>
   3c264:	ldr	r0, [sp, #8]
   3c268:	ldrb	r0, [r0]
   3c26c:	sub	r0, r0, #48	; 0x30
   3c270:	cmp	r0, #9
   3c274:	bls	3c284 <__assert_fail@plt+0x2adf0>
   3c278:	movw	r0, #0
   3c27c:	str	r0, [sp, #12]
   3c280:	b	3c3f0 <__assert_fail@plt+0x2af5c>
   3c284:	b	3c23c <__assert_fail@plt+0x2ada8>
   3c288:	ldr	r0, [sp, #8]
   3c28c:	ldrb	r0, [r0]
   3c290:	sub	r0, r0, #48	; 0x30
   3c294:	cmp	r0, #9
   3c298:	bhi	3c2cc <__assert_fail@plt+0x2ae38>
   3c29c:	ldr	r0, [sp, #4]
   3c2a0:	ldrb	r0, [r0]
   3c2a4:	sub	r0, r0, #48	; 0x30
   3c2a8:	cmp	r0, #9
   3c2ac:	bhi	3c2cc <__assert_fail@plt+0x2ae38>
   3c2b0:	ldr	r0, [sp, #8]
   3c2b4:	ldrb	r0, [r0]
   3c2b8:	ldr	r1, [sp, #4]
   3c2bc:	ldrb	r1, [r1]
   3c2c0:	sub	r0, r0, r1
   3c2c4:	str	r0, [sp, #12]
   3c2c8:	b	3c3f0 <__assert_fail@plt+0x2af5c>
   3c2cc:	ldr	r0, [sp, #8]
   3c2d0:	ldrb	r0, [r0]
   3c2d4:	sub	r0, r0, #48	; 0x30
   3c2d8:	cmp	r0, #9
   3c2dc:	bhi	3c2e4 <__assert_fail@plt+0x2ae50>
   3c2e0:	b	3c328 <__assert_fail@plt+0x2ae94>
   3c2e4:	ldr	r0, [sp, #4]
   3c2e8:	ldrb	r0, [r0]
   3c2ec:	sub	r0, r0, #48	; 0x30
   3c2f0:	cmp	r0, #9
   3c2f4:	bhi	3c2fc <__assert_fail@plt+0x2ae68>
   3c2f8:	b	3c390 <__assert_fail@plt+0x2aefc>
   3c2fc:	movw	r0, #0
   3c300:	str	r0, [sp, #12]
   3c304:	b	3c3f0 <__assert_fail@plt+0x2af5c>
   3c308:	ldr	r0, [sp, #8]
   3c30c:	add	r1, r0, #1
   3c310:	str	r1, [sp, #8]
   3c314:	ldrb	r0, [r0]
   3c318:	ldrb	r1, [sp, #3]
   3c31c:	cmp	r0, r1
   3c320:	bne	3c370 <__assert_fail@plt+0x2aedc>
   3c324:	b	3c328 <__assert_fail@plt+0x2ae94>
   3c328:	b	3c32c <__assert_fail@plt+0x2ae98>
   3c32c:	ldr	r0, [sp, #8]
   3c330:	ldrb	r0, [r0]
   3c334:	cmp	r0, #48	; 0x30
   3c338:	bne	3c34c <__assert_fail@plt+0x2aeb8>
   3c33c:	ldr	r0, [sp, #8]
   3c340:	add	r0, r0, #1
   3c344:	str	r0, [sp, #8]
   3c348:	b	3c32c <__assert_fail@plt+0x2ae98>
   3c34c:	ldr	r0, [sp, #8]
   3c350:	ldrb	r0, [r0]
   3c354:	sub	r0, r0, #48	; 0x30
   3c358:	cmp	r0, #9
   3c35c:	movw	r0, #0
   3c360:	movls	r0, #1
   3c364:	and	r0, r0, #1
   3c368:	str	r0, [sp, #12]
   3c36c:	b	3c3f0 <__assert_fail@plt+0x2af5c>
   3c370:	ldr	r0, [sp, #4]
   3c374:	add	r1, r0, #1
   3c378:	str	r1, [sp, #4]
   3c37c:	ldrb	r0, [r0]
   3c380:	ldrb	r1, [sp, #3]
   3c384:	cmp	r0, r1
   3c388:	bne	3c3e0 <__assert_fail@plt+0x2af4c>
   3c38c:	b	3c390 <__assert_fail@plt+0x2aefc>
   3c390:	b	3c394 <__assert_fail@plt+0x2af00>
   3c394:	ldr	r0, [sp, #4]
   3c398:	ldrb	r0, [r0]
   3c39c:	cmp	r0, #48	; 0x30
   3c3a0:	bne	3c3b4 <__assert_fail@plt+0x2af20>
   3c3a4:	ldr	r0, [sp, #4]
   3c3a8:	add	r0, r0, #1
   3c3ac:	str	r0, [sp, #4]
   3c3b0:	b	3c394 <__assert_fail@plt+0x2af00>
   3c3b4:	ldr	r0, [sp, #4]
   3c3b8:	ldrb	r0, [r0]
   3c3bc:	sub	r0, r0, #48	; 0x30
   3c3c0:	cmp	r0, #9
   3c3c4:	movw	r0, #0
   3c3c8:	movls	r0, #1
   3c3cc:	and	r0, r0, #1
   3c3d0:	movw	r1, #0
   3c3d4:	sub	r0, r1, r0
   3c3d8:	str	r0, [sp, #12]
   3c3dc:	b	3c3f0 <__assert_fail@plt+0x2af5c>
   3c3e0:	b	3c3e4 <__assert_fail@plt+0x2af50>
   3c3e4:	b	3c3e8 <__assert_fail@plt+0x2af54>
   3c3e8:	movw	r0, #0
   3c3ec:	str	r0, [sp, #12]
   3c3f0:	ldr	r0, [sp, #12]
   3c3f4:	add	sp, sp, #16
   3c3f8:	bx	lr
   3c3fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3c400:	add	fp, sp, #28
   3c404:	sub	sp, sp, #260	; 0x104
   3c408:	ldr	ip, [fp, #12]
   3c40c:	ldr	lr, [fp, #8]
   3c410:	str	r0, [fp, #-32]	; 0xffffffe0
   3c414:	str	r1, [fp, #-36]	; 0xffffffdc
   3c418:	str	r2, [fp, #-40]	; 0xffffffd8
   3c41c:	str	r3, [fp, #-44]	; 0xffffffd4
   3c420:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3c424:	movw	r1, #0
   3c428:	cmp	r0, r1
   3c42c:	str	lr, [fp, #-48]	; 0xffffffd0
   3c430:	str	ip, [fp, #-52]	; 0xffffffcc
   3c434:	beq	3c46c <__assert_fail@plt+0x2afd8>
   3c438:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3c43c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   3c440:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3c444:	ldr	r1, [fp, #-44]	; 0xffffffd4
   3c448:	movw	ip, #23295	; 0x5aff
   3c44c:	movt	ip, #4
   3c450:	str	r1, [fp, #-56]	; 0xffffffc8
   3c454:	mov	r1, ip
   3c458:	ldr	ip, [fp, #-56]	; 0xffffffc8
   3c45c:	str	ip, [sp]
   3c460:	bl	113a4 <fprintf@plt>
   3c464:	str	r0, [fp, #-60]	; 0xffffffc4
   3c468:	b	3c488 <__assert_fail@plt+0x2aff4>
   3c46c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3c470:	ldr	r2, [fp, #-40]	; 0xffffffd8
   3c474:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3c478:	movw	r1, #23307	; 0x5b0b
   3c47c:	movt	r1, #4
   3c480:	bl	113a4 <fprintf@plt>
   3c484:	str	r0, [fp, #-64]	; 0xffffffc0
   3c488:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3c48c:	movw	r1, #23314	; 0x5b12
   3c490:	movt	r1, #4
   3c494:	str	r0, [fp, #-68]	; 0xffffffbc
   3c498:	mov	r0, r1
   3c49c:	bl	11380 <gettext@plt>
   3c4a0:	movw	r1, #24032	; 0x5de0
   3c4a4:	movt	r1, #4
   3c4a8:	movw	r3, #2022	; 0x7e6
   3c4ac:	ldr	lr, [fp, #-68]	; 0xffffffbc
   3c4b0:	str	r0, [fp, #-72]	; 0xffffffb8
   3c4b4:	mov	r0, lr
   3c4b8:	ldr	r2, [fp, #-72]	; 0xffffffb8
   3c4bc:	bl	113a4 <fprintf@plt>
   3c4c0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   3c4c4:	movw	r2, #16930	; 0x4222
   3c4c8:	movt	r2, #4
   3c4cc:	str	r0, [fp, #-76]	; 0xffffffb4
   3c4d0:	mov	r0, r2
   3c4d4:	str	r2, [fp, #-80]	; 0xffffffb0
   3c4d8:	bl	11194 <fputs_unlocked@plt>
   3c4dc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   3c4e0:	movw	r2, #23318	; 0x5b16
   3c4e4:	movt	r2, #4
   3c4e8:	str	r0, [fp, #-84]	; 0xffffffac
   3c4ec:	mov	r0, r2
   3c4f0:	str	r1, [fp, #-88]	; 0xffffffa8
   3c4f4:	bl	11380 <gettext@plt>
   3c4f8:	movw	r2, #23489	; 0x5bc1
   3c4fc:	movt	r2, #4
   3c500:	ldr	r1, [fp, #-88]	; 0xffffffa8
   3c504:	str	r0, [fp, #-92]	; 0xffffffa4
   3c508:	mov	r0, r1
   3c50c:	ldr	r1, [fp, #-92]	; 0xffffffa4
   3c510:	bl	113a4 <fprintf@plt>
   3c514:	ldr	r1, [fp, #-32]	; 0xffffffe0
   3c518:	ldr	r2, [fp, #-80]	; 0xffffffb0
   3c51c:	str	r0, [fp, #-96]	; 0xffffffa0
   3c520:	mov	r0, r2
   3c524:	bl	11194 <fputs_unlocked@plt>
   3c528:	ldr	r1, [fp, #12]
   3c52c:	cmp	r1, #9
   3c530:	str	r0, [fp, #-100]	; 0xffffff9c
   3c534:	str	r1, [fp, #-104]	; 0xffffff98
   3c538:	bhi	3c978 <__assert_fail@plt+0x2b4e4>
   3c53c:	add	r0, pc, #8
   3c540:	ldr	r1, [fp, #-104]	; 0xffffff98
   3c544:	ldr	r0, [r0, r1, lsl #2]
   3c548:	mov	pc, r0
   3c54c:	andeq	ip, r3, r4, ror r5
   3c550:	andeq	ip, r3, r8, ror r5
   3c554:			; <UNDEFINED> instruction: 0x0003c5b4
   3c558:	strdeq	ip, [r3], -r8
   3c55c:	andeq	ip, r3, r4, asr r6
   3c560:			; <UNDEFINED> instruction: 0x0003c6bc
   3c564:	andeq	ip, r3, r0, lsr r7
   3c568:			; <UNDEFINED> instruction: 0x0003c7b0
   3c56c:	andeq	ip, r3, ip, lsr r8
   3c570:	ldrdeq	ip, [r3], -r4
   3c574:	b	3ca18 <__assert_fail@plt+0x2b584>
   3c578:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3c57c:	movw	r1, #23523	; 0x5be3
   3c580:	movt	r1, #4
   3c584:	str	r0, [fp, #-108]	; 0xffffff94
   3c588:	mov	r0, r1
   3c58c:	bl	11380 <gettext@plt>
   3c590:	ldr	r1, [fp, #8]
   3c594:	ldr	r2, [r1]
   3c598:	ldr	r1, [fp, #-108]	; 0xffffff94
   3c59c:	str	r0, [fp, #-112]	; 0xffffff90
   3c5a0:	mov	r0, r1
   3c5a4:	ldr	r1, [fp, #-112]	; 0xffffff90
   3c5a8:	bl	113a4 <fprintf@plt>
   3c5ac:	str	r0, [fp, #-116]	; 0xffffff8c
   3c5b0:	b	3ca18 <__assert_fail@plt+0x2b584>
   3c5b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3c5b8:	movw	r1, #23539	; 0x5bf3
   3c5bc:	movt	r1, #4
   3c5c0:	str	r0, [fp, #-120]	; 0xffffff88
   3c5c4:	mov	r0, r1
   3c5c8:	bl	11380 <gettext@plt>
   3c5cc:	ldr	r1, [fp, #8]
   3c5d0:	ldr	r2, [r1]
   3c5d4:	ldr	r1, [fp, #8]
   3c5d8:	ldr	r3, [r1, #4]
   3c5dc:	ldr	r1, [fp, #-120]	; 0xffffff88
   3c5e0:	str	r0, [fp, #-124]	; 0xffffff84
   3c5e4:	mov	r0, r1
   3c5e8:	ldr	r1, [fp, #-124]	; 0xffffff84
   3c5ec:	bl	113a4 <fprintf@plt>
   3c5f0:	str	r0, [fp, #-128]	; 0xffffff80
   3c5f4:	b	3ca18 <__assert_fail@plt+0x2b584>
   3c5f8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3c5fc:	movw	r1, #23562	; 0x5c0a
   3c600:	movt	r1, #4
   3c604:	str	r0, [fp, #-132]	; 0xffffff7c
   3c608:	mov	r0, r1
   3c60c:	bl	11380 <gettext@plt>
   3c610:	ldr	r1, [fp, #8]
   3c614:	ldr	r2, [r1]
   3c618:	ldr	r1, [fp, #8]
   3c61c:	ldr	r3, [r1, #4]
   3c620:	ldr	r1, [fp, #8]
   3c624:	ldr	r1, [r1, #8]
   3c628:	ldr	lr, [fp, #-132]	; 0xffffff7c
   3c62c:	str	r0, [fp, #-136]	; 0xffffff78
   3c630:	mov	r0, lr
   3c634:	ldr	ip, [fp, #-136]	; 0xffffff78
   3c638:	str	r1, [fp, #-140]	; 0xffffff74
   3c63c:	mov	r1, ip
   3c640:	ldr	r4, [fp, #-140]	; 0xffffff74
   3c644:	str	r4, [sp]
   3c648:	bl	113a4 <fprintf@plt>
   3c64c:	str	r0, [sp, #144]	; 0x90
   3c650:	b	3ca18 <__assert_fail@plt+0x2b584>
   3c654:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3c658:	movw	r1, #23590	; 0x5c26
   3c65c:	movt	r1, #4
   3c660:	str	r0, [sp, #140]	; 0x8c
   3c664:	mov	r0, r1
   3c668:	bl	11380 <gettext@plt>
   3c66c:	ldr	r1, [fp, #8]
   3c670:	ldr	r2, [r1]
   3c674:	ldr	r1, [fp, #8]
   3c678:	ldr	r3, [r1, #4]
   3c67c:	ldr	r1, [fp, #8]
   3c680:	ldr	r1, [r1, #8]
   3c684:	ldr	lr, [fp, #8]
   3c688:	ldr	lr, [lr, #12]
   3c68c:	ldr	ip, [sp, #140]	; 0x8c
   3c690:	str	r0, [sp, #136]	; 0x88
   3c694:	mov	r0, ip
   3c698:	ldr	r4, [sp, #136]	; 0x88
   3c69c:	str	r1, [sp, #132]	; 0x84
   3c6a0:	mov	r1, r4
   3c6a4:	ldr	r5, [sp, #132]	; 0x84
   3c6a8:	str	r5, [sp]
   3c6ac:	str	lr, [sp, #4]
   3c6b0:	bl	113a4 <fprintf@plt>
   3c6b4:	str	r0, [sp, #128]	; 0x80
   3c6b8:	b	3ca18 <__assert_fail@plt+0x2b584>
   3c6bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3c6c0:	movw	r1, #23622	; 0x5c46
   3c6c4:	movt	r1, #4
   3c6c8:	str	r0, [sp, #124]	; 0x7c
   3c6cc:	mov	r0, r1
   3c6d0:	bl	11380 <gettext@plt>
   3c6d4:	ldr	r1, [fp, #8]
   3c6d8:	ldr	r2, [r1]
   3c6dc:	ldr	r1, [fp, #8]
   3c6e0:	ldr	r3, [r1, #4]
   3c6e4:	ldr	r1, [fp, #8]
   3c6e8:	ldr	r1, [r1, #8]
   3c6ec:	ldr	lr, [fp, #8]
   3c6f0:	ldr	lr, [lr, #12]
   3c6f4:	ldr	ip, [fp, #8]
   3c6f8:	ldr	ip, [ip, #16]
   3c6fc:	ldr	r4, [sp, #124]	; 0x7c
   3c700:	str	r0, [sp, #120]	; 0x78
   3c704:	mov	r0, r4
   3c708:	ldr	r5, [sp, #120]	; 0x78
   3c70c:	str	r1, [sp, #116]	; 0x74
   3c710:	mov	r1, r5
   3c714:	ldr	r6, [sp, #116]	; 0x74
   3c718:	str	r6, [sp]
   3c71c:	str	lr, [sp, #4]
   3c720:	str	ip, [sp, #8]
   3c724:	bl	113a4 <fprintf@plt>
   3c728:	str	r0, [sp, #112]	; 0x70
   3c72c:	b	3ca18 <__assert_fail@plt+0x2b584>
   3c730:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3c734:	movw	r1, #23658	; 0x5c6a
   3c738:	movt	r1, #4
   3c73c:	str	r0, [sp, #108]	; 0x6c
   3c740:	mov	r0, r1
   3c744:	bl	11380 <gettext@plt>
   3c748:	ldr	r1, [fp, #8]
   3c74c:	ldr	r2, [r1]
   3c750:	ldr	r1, [fp, #8]
   3c754:	ldr	r3, [r1, #4]
   3c758:	ldr	r1, [fp, #8]
   3c75c:	ldr	r1, [r1, #8]
   3c760:	ldr	lr, [fp, #8]
   3c764:	ldr	lr, [lr, #12]
   3c768:	ldr	ip, [fp, #8]
   3c76c:	ldr	ip, [ip, #16]
   3c770:	ldr	r4, [fp, #8]
   3c774:	ldr	r4, [r4, #20]
   3c778:	ldr	r5, [sp, #108]	; 0x6c
   3c77c:	str	r0, [sp, #104]	; 0x68
   3c780:	mov	r0, r5
   3c784:	ldr	r6, [sp, #104]	; 0x68
   3c788:	str	r1, [sp, #100]	; 0x64
   3c78c:	mov	r1, r6
   3c790:	ldr	r7, [sp, #100]	; 0x64
   3c794:	str	r7, [sp]
   3c798:	str	lr, [sp, #4]
   3c79c:	str	ip, [sp, #8]
   3c7a0:	str	r4, [sp, #12]
   3c7a4:	bl	113a4 <fprintf@plt>
   3c7a8:	str	r0, [sp, #96]	; 0x60
   3c7ac:	b	3ca18 <__assert_fail@plt+0x2b584>
   3c7b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3c7b4:	movw	r1, #23698	; 0x5c92
   3c7b8:	movt	r1, #4
   3c7bc:	str	r0, [sp, #92]	; 0x5c
   3c7c0:	mov	r0, r1
   3c7c4:	bl	11380 <gettext@plt>
   3c7c8:	ldr	r1, [fp, #8]
   3c7cc:	ldr	r2, [r1]
   3c7d0:	ldr	r1, [fp, #8]
   3c7d4:	ldr	r3, [r1, #4]
   3c7d8:	ldr	r1, [fp, #8]
   3c7dc:	ldr	r1, [r1, #8]
   3c7e0:	ldr	lr, [fp, #8]
   3c7e4:	ldr	lr, [lr, #12]
   3c7e8:	ldr	ip, [fp, #8]
   3c7ec:	ldr	ip, [ip, #16]
   3c7f0:	ldr	r4, [fp, #8]
   3c7f4:	ldr	r4, [r4, #20]
   3c7f8:	ldr	r5, [fp, #8]
   3c7fc:	ldr	r5, [r5, #24]
   3c800:	ldr	r6, [sp, #92]	; 0x5c
   3c804:	str	r0, [sp, #88]	; 0x58
   3c808:	mov	r0, r6
   3c80c:	ldr	r7, [sp, #88]	; 0x58
   3c810:	str	r1, [sp, #84]	; 0x54
   3c814:	mov	r1, r7
   3c818:	ldr	r8, [sp, #84]	; 0x54
   3c81c:	str	r8, [sp]
   3c820:	str	lr, [sp, #4]
   3c824:	str	ip, [sp, #8]
   3c828:	str	r4, [sp, #12]
   3c82c:	str	r5, [sp, #16]
   3c830:	bl	113a4 <fprintf@plt>
   3c834:	str	r0, [sp, #80]	; 0x50
   3c838:	b	3ca18 <__assert_fail@plt+0x2b584>
   3c83c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3c840:	movw	r1, #23742	; 0x5cbe
   3c844:	movt	r1, #4
   3c848:	str	r0, [sp, #76]	; 0x4c
   3c84c:	mov	r0, r1
   3c850:	bl	11380 <gettext@plt>
   3c854:	ldr	r1, [fp, #8]
   3c858:	ldr	r2, [r1]
   3c85c:	ldr	r1, [fp, #8]
   3c860:	ldr	r3, [r1, #4]
   3c864:	ldr	r1, [fp, #8]
   3c868:	ldr	r1, [r1, #8]
   3c86c:	ldr	lr, [fp, #8]
   3c870:	ldr	lr, [lr, #12]
   3c874:	ldr	ip, [fp, #8]
   3c878:	ldr	ip, [ip, #16]
   3c87c:	ldr	r4, [fp, #8]
   3c880:	ldr	r4, [r4, #20]
   3c884:	ldr	r5, [fp, #8]
   3c888:	ldr	r5, [r5, #24]
   3c88c:	ldr	r6, [fp, #8]
   3c890:	ldr	r6, [r6, #28]
   3c894:	ldr	r7, [sp, #76]	; 0x4c
   3c898:	str	r0, [sp, #72]	; 0x48
   3c89c:	mov	r0, r7
   3c8a0:	ldr	r8, [sp, #72]	; 0x48
   3c8a4:	str	r1, [sp, #68]	; 0x44
   3c8a8:	mov	r1, r8
   3c8ac:	ldr	r9, [sp, #68]	; 0x44
   3c8b0:	str	r9, [sp]
   3c8b4:	str	lr, [sp, #4]
   3c8b8:	str	ip, [sp, #8]
   3c8bc:	str	r4, [sp, #12]
   3c8c0:	str	r5, [sp, #16]
   3c8c4:	str	r6, [sp, #20]
   3c8c8:	bl	113a4 <fprintf@plt>
   3c8cc:	str	r0, [sp, #64]	; 0x40
   3c8d0:	b	3ca18 <__assert_fail@plt+0x2b584>
   3c8d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3c8d8:	movw	r1, #23790	; 0x5cee
   3c8dc:	movt	r1, #4
   3c8e0:	str	r0, [sp, #60]	; 0x3c
   3c8e4:	mov	r0, r1
   3c8e8:	bl	11380 <gettext@plt>
   3c8ec:	ldr	r1, [fp, #8]
   3c8f0:	ldr	r2, [r1]
   3c8f4:	ldr	r1, [fp, #8]
   3c8f8:	ldr	r3, [r1, #4]
   3c8fc:	ldr	r1, [fp, #8]
   3c900:	ldr	r1, [r1, #8]
   3c904:	ldr	lr, [fp, #8]
   3c908:	ldr	lr, [lr, #12]
   3c90c:	ldr	ip, [fp, #8]
   3c910:	ldr	ip, [ip, #16]
   3c914:	ldr	r4, [fp, #8]
   3c918:	ldr	r4, [r4, #20]
   3c91c:	ldr	r5, [fp, #8]
   3c920:	ldr	r5, [r5, #24]
   3c924:	ldr	r6, [fp, #8]
   3c928:	ldr	r6, [r6, #28]
   3c92c:	ldr	r7, [fp, #8]
   3c930:	ldr	r7, [r7, #32]
   3c934:	ldr	r8, [sp, #60]	; 0x3c
   3c938:	str	r0, [sp, #56]	; 0x38
   3c93c:	mov	r0, r8
   3c940:	ldr	r9, [sp, #56]	; 0x38
   3c944:	str	r1, [sp, #52]	; 0x34
   3c948:	mov	r1, r9
   3c94c:	ldr	sl, [sp, #52]	; 0x34
   3c950:	str	sl, [sp]
   3c954:	str	lr, [sp, #4]
   3c958:	str	ip, [sp, #8]
   3c95c:	str	r4, [sp, #12]
   3c960:	str	r5, [sp, #16]
   3c964:	str	r6, [sp, #20]
   3c968:	str	r7, [sp, #24]
   3c96c:	bl	113a4 <fprintf@plt>
   3c970:	str	r0, [sp, #48]	; 0x30
   3c974:	b	3ca18 <__assert_fail@plt+0x2b584>
   3c978:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3c97c:	movw	r1, #23842	; 0x5d22
   3c980:	movt	r1, #4
   3c984:	str	r0, [sp, #44]	; 0x2c
   3c988:	mov	r0, r1
   3c98c:	bl	11380 <gettext@plt>
   3c990:	ldr	r1, [fp, #8]
   3c994:	ldr	r2, [r1]
   3c998:	ldr	r1, [fp, #8]
   3c99c:	ldr	r3, [r1, #4]
   3c9a0:	ldr	r1, [fp, #8]
   3c9a4:	ldr	r1, [r1, #8]
   3c9a8:	ldr	lr, [fp, #8]
   3c9ac:	ldr	lr, [lr, #12]
   3c9b0:	ldr	ip, [fp, #8]
   3c9b4:	ldr	ip, [ip, #16]
   3c9b8:	ldr	r4, [fp, #8]
   3c9bc:	ldr	r4, [r4, #20]
   3c9c0:	ldr	r5, [fp, #8]
   3c9c4:	ldr	r5, [r5, #24]
   3c9c8:	ldr	r6, [fp, #8]
   3c9cc:	ldr	r6, [r6, #28]
   3c9d0:	ldr	r7, [fp, #8]
   3c9d4:	ldr	r7, [r7, #32]
   3c9d8:	ldr	r8, [sp, #44]	; 0x2c
   3c9dc:	str	r0, [sp, #40]	; 0x28
   3c9e0:	mov	r0, r8
   3c9e4:	ldr	r9, [sp, #40]	; 0x28
   3c9e8:	str	r1, [sp, #36]	; 0x24
   3c9ec:	mov	r1, r9
   3c9f0:	ldr	sl, [sp, #36]	; 0x24
   3c9f4:	str	sl, [sp]
   3c9f8:	str	lr, [sp, #4]
   3c9fc:	str	ip, [sp, #8]
   3ca00:	str	r4, [sp, #12]
   3ca04:	str	r5, [sp, #16]
   3ca08:	str	r6, [sp, #20]
   3ca0c:	str	r7, [sp, #24]
   3ca10:	bl	113a4 <fprintf@plt>
   3ca14:	str	r0, [sp, #32]
   3ca18:	sub	sp, fp, #28
   3ca1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3ca20:	push	{fp, lr}
   3ca24:	mov	fp, sp
   3ca28:	sub	sp, sp, #32
   3ca2c:	ldr	ip, [fp, #8]
   3ca30:	str	r0, [fp, #-4]
   3ca34:	str	r1, [fp, #-8]
   3ca38:	str	r2, [fp, #-12]
   3ca3c:	str	r3, [sp, #16]
   3ca40:	movw	r0, #0
   3ca44:	str	r0, [sp, #12]
   3ca48:	str	ip, [sp, #8]
   3ca4c:	ldr	r0, [fp, #8]
   3ca50:	ldr	r1, [sp, #12]
   3ca54:	add	r0, r0, r1, lsl #2
   3ca58:	ldr	r0, [r0]
   3ca5c:	movw	r1, #0
   3ca60:	cmp	r0, r1
   3ca64:	beq	3ca7c <__assert_fail@plt+0x2b5e8>
   3ca68:	b	3ca6c <__assert_fail@plt+0x2b5d8>
   3ca6c:	ldr	r0, [sp, #12]
   3ca70:	add	r0, r0, #1
   3ca74:	str	r0, [sp, #12]
   3ca78:	b	3ca4c <__assert_fail@plt+0x2b5b8>
   3ca7c:	ldr	r0, [fp, #-4]
   3ca80:	ldr	r1, [fp, #-8]
   3ca84:	ldr	r2, [fp, #-12]
   3ca88:	ldr	r3, [sp, #16]
   3ca8c:	ldr	ip, [fp, #8]
   3ca90:	ldr	lr, [sp, #12]
   3ca94:	str	ip, [sp]
   3ca98:	str	lr, [sp, #4]
   3ca9c:	bl	3c3fc <__assert_fail@plt+0x2af68>
   3caa0:	mov	sp, fp
   3caa4:	pop	{fp, pc}
   3caa8:	push	{fp, lr}
   3caac:	mov	fp, sp
   3cab0:	sub	sp, sp, #80	; 0x50
   3cab4:	ldr	ip, [fp, #8]
   3cab8:	str	ip, [fp, #-4]
   3cabc:	str	r0, [fp, #-8]
   3cac0:	str	r1, [fp, #-12]
   3cac4:	str	r2, [fp, #-16]
   3cac8:	str	r3, [fp, #-20]	; 0xffffffec
   3cacc:	movw	r0, #0
   3cad0:	str	r0, [fp, #-24]	; 0xffffffe8
   3cad4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3cad8:	cmp	r0, #10
   3cadc:	movw	r0, #0
   3cae0:	str	r0, [sp, #12]
   3cae4:	bcs	3cb1c <__assert_fail@plt+0x2b688>
   3cae8:	ldr	r0, [fp, #-4]
   3caec:	add	r1, r0, #4
   3caf0:	str	r1, [fp, #-4]
   3caf4:	ldr	r0, [r0]
   3caf8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3cafc:	add	r2, sp, #16
   3cb00:	add	r1, r2, r1, lsl #2
   3cb04:	str	r0, [r1]
   3cb08:	movw	r1, #0
   3cb0c:	cmp	r0, r1
   3cb10:	movw	r0, #0
   3cb14:	movne	r0, #1
   3cb18:	str	r0, [sp, #12]
   3cb1c:	ldr	r0, [sp, #12]
   3cb20:	tst	r0, #1
   3cb24:	beq	3cb3c <__assert_fail@plt+0x2b6a8>
   3cb28:	b	3cb2c <__assert_fail@plt+0x2b698>
   3cb2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3cb30:	add	r0, r0, #1
   3cb34:	str	r0, [fp, #-24]	; 0xffffffe8
   3cb38:	b	3cad4 <__assert_fail@plt+0x2b640>
   3cb3c:	add	r0, sp, #16
   3cb40:	ldr	r1, [fp, #-8]
   3cb44:	ldr	r2, [fp, #-12]
   3cb48:	ldr	r3, [fp, #-16]
   3cb4c:	ldr	ip, [fp, #-20]	; 0xffffffec
   3cb50:	ldr	lr, [fp, #-24]	; 0xffffffe8
   3cb54:	str	r0, [sp, #8]
   3cb58:	mov	r0, r1
   3cb5c:	mov	r1, r2
   3cb60:	mov	r2, r3
   3cb64:	mov	r3, ip
   3cb68:	ldr	ip, [sp, #8]
   3cb6c:	str	ip, [sp]
   3cb70:	str	lr, [sp, #4]
   3cb74:	bl	3c3fc <__assert_fail@plt+0x2af68>
   3cb78:	mov	sp, fp
   3cb7c:	pop	{fp, pc}
   3cb80:	push	{fp, lr}
   3cb84:	mov	fp, sp
   3cb88:	sub	sp, sp, #32
   3cb8c:	str	r0, [fp, #-4]
   3cb90:	str	r1, [fp, #-8]
   3cb94:	str	r2, [fp, #-12]
   3cb98:	str	r3, [sp, #16]
   3cb9c:	add	r0, fp, #8
   3cba0:	str	r0, [sp, #12]
   3cba4:	ldr	r0, [fp, #-4]
   3cba8:	ldr	r1, [fp, #-8]
   3cbac:	ldr	r2, [fp, #-12]
   3cbb0:	ldr	r3, [sp, #16]
   3cbb4:	ldr	ip, [sp, #12]
   3cbb8:	mov	lr, sp
   3cbbc:	str	ip, [lr]
   3cbc0:	bl	3caa8 <__assert_fail@plt+0x2b614>
   3cbc4:	add	r0, sp, #12
   3cbc8:	str	r0, [sp, #8]
   3cbcc:	mov	sp, fp
   3cbd0:	pop	{fp, pc}
   3cbd4:	push	{fp, lr}
   3cbd8:	mov	fp, sp
   3cbdc:	sub	sp, sp, #16
   3cbe0:	movw	r0, #24972	; 0x618c
   3cbe4:	movt	r0, #5
   3cbe8:	ldr	r1, [r0]
   3cbec:	movw	r0, #16930	; 0x4222
   3cbf0:	movt	r0, #4
   3cbf4:	bl	11194 <fputs_unlocked@plt>
   3cbf8:	movw	r1, #23902	; 0x5d5e
   3cbfc:	movt	r1, #4
   3cc00:	str	r0, [fp, #-4]
   3cc04:	mov	r0, r1
   3cc08:	bl	11380 <gettext@plt>
   3cc0c:	movw	r1, #23922	; 0x5d72
   3cc10:	movt	r1, #4
   3cc14:	bl	111e8 <printf@plt>
   3cc18:	movw	r1, #23944	; 0x5d88
   3cc1c:	movt	r1, #4
   3cc20:	str	r0, [sp, #8]
   3cc24:	mov	r0, r1
   3cc28:	bl	11380 <gettext@plt>
   3cc2c:	movw	r1, #16497	; 0x4071
   3cc30:	movt	r1, #4
   3cc34:	movw	r2, #16739	; 0x4163
   3cc38:	movt	r2, #4
   3cc3c:	bl	111e8 <printf@plt>
   3cc40:	movw	r1, #23964	; 0x5d9c
   3cc44:	movt	r1, #4
   3cc48:	str	r0, [sp, #4]
   3cc4c:	mov	r0, r1
   3cc50:	bl	11380 <gettext@plt>
   3cc54:	movw	r1, #24003	; 0x5dc3
   3cc58:	movt	r1, #4
   3cc5c:	bl	111e8 <printf@plt>
   3cc60:	str	r0, [sp]
   3cc64:	mov	sp, fp
   3cc68:	pop	{fp, pc}
   3cc6c:	push	{fp, lr}
   3cc70:	mov	fp, sp
   3cc74:	sub	sp, sp, #16
   3cc78:	str	r0, [fp, #-4]
   3cc7c:	str	r1, [sp, #8]
   3cc80:	str	r2, [sp, #4]
   3cc84:	ldr	r0, [fp, #-4]
   3cc88:	ldr	r1, [sp, #8]
   3cc8c:	ldr	r2, [sp, #4]
   3cc90:	bl	3cc9c <__assert_fail@plt+0x2b808>
   3cc94:	mov	sp, fp
   3cc98:	pop	{fp, pc}
   3cc9c:	push	{fp, lr}
   3cca0:	mov	fp, sp
   3cca4:	sub	sp, sp, #16
   3cca8:	str	r0, [fp, #-4]
   3ccac:	str	r1, [sp, #8]
   3ccb0:	str	r2, [sp, #4]
   3ccb4:	ldr	r0, [fp, #-4]
   3ccb8:	ldr	r1, [sp, #8]
   3ccbc:	ldr	r2, [sp, #4]
   3ccc0:	bl	419ec <__assert_fail@plt+0x30558>
   3ccc4:	str	r0, [sp]
   3ccc8:	ldr	r0, [sp]
   3cccc:	movw	r1, #0
   3ccd0:	cmp	r0, r1
   3ccd4:	bne	3cd04 <__assert_fail@plt+0x2b870>
   3ccd8:	ldr	r0, [fp, #-4]
   3ccdc:	movw	r1, #0
   3cce0:	cmp	r0, r1
   3cce4:	beq	3cd00 <__assert_fail@plt+0x2b86c>
   3cce8:	ldr	r0, [sp, #8]
   3ccec:	cmp	r0, #0
   3ccf0:	beq	3cd04 <__assert_fail@plt+0x2b870>
   3ccf4:	ldr	r0, [sp, #4]
   3ccf8:	cmp	r0, #0
   3ccfc:	beq	3cd04 <__assert_fail@plt+0x2b870>
   3cd00:	bl	3faec <__assert_fail@plt+0x2e658>
   3cd04:	ldr	r0, [sp]
   3cd08:	mov	sp, fp
   3cd0c:	pop	{fp, pc}
   3cd10:	push	{fp, lr}
   3cd14:	mov	fp, sp
   3cd18:	sub	sp, sp, #8
   3cd1c:	str	r0, [sp, #4]
   3cd20:	ldr	r0, [sp, #4]
   3cd24:	bl	3fbd8 <__assert_fail@plt+0x2e744>
   3cd28:	bl	3cd34 <__assert_fail@plt+0x2b8a0>
   3cd2c:	mov	sp, fp
   3cd30:	pop	{fp, pc}
   3cd34:	push	{fp, lr}
   3cd38:	mov	fp, sp
   3cd3c:	sub	sp, sp, #8
   3cd40:	str	r0, [sp, #4]
   3cd44:	ldr	r0, [sp, #4]
   3cd48:	movw	r1, #0
   3cd4c:	cmp	r0, r1
   3cd50:	bne	3cd58 <__assert_fail@plt+0x2b8c4>
   3cd54:	bl	3faec <__assert_fail@plt+0x2e658>
   3cd58:	ldr	r0, [sp, #4]
   3cd5c:	mov	sp, fp
   3cd60:	pop	{fp, pc}
   3cd64:	push	{fp, lr}
   3cd68:	mov	fp, sp
   3cd6c:	sub	sp, sp, #8
   3cd70:	str	r0, [sp, #4]
   3cd74:	ldr	r0, [sp, #4]
   3cd78:	bl	415c0 <__assert_fail@plt+0x3012c>
   3cd7c:	bl	3cd34 <__assert_fail@plt+0x2b8a0>
   3cd80:	mov	sp, fp
   3cd84:	pop	{fp, pc}
   3cd88:	push	{fp, lr}
   3cd8c:	mov	fp, sp
   3cd90:	sub	sp, sp, #8
   3cd94:	str	r0, [sp, #4]
   3cd98:	ldr	r0, [sp, #4]
   3cd9c:	bl	3cd10 <__assert_fail@plt+0x2b87c>
   3cda0:	mov	sp, fp
   3cda4:	pop	{fp, pc}
   3cda8:	push	{fp, lr}
   3cdac:	mov	fp, sp
   3cdb0:	sub	sp, sp, #16
   3cdb4:	str	r0, [fp, #-4]
   3cdb8:	str	r1, [sp, #8]
   3cdbc:	ldr	r0, [fp, #-4]
   3cdc0:	ldr	r1, [sp, #8]
   3cdc4:	bl	3fc48 <__assert_fail@plt+0x2e7b4>
   3cdc8:	str	r0, [sp, #4]
   3cdcc:	ldr	r0, [sp, #4]
   3cdd0:	movw	r1, #0
   3cdd4:	cmp	r0, r1
   3cdd8:	bne	3cdfc <__assert_fail@plt+0x2b968>
   3cddc:	ldr	r0, [fp, #-4]
   3cde0:	movw	r1, #0
   3cde4:	cmp	r0, r1
   3cde8:	beq	3cdf8 <__assert_fail@plt+0x2b964>
   3cdec:	ldr	r0, [sp, #8]
   3cdf0:	cmp	r0, #0
   3cdf4:	beq	3cdfc <__assert_fail@plt+0x2b968>
   3cdf8:	bl	3faec <__assert_fail@plt+0x2e658>
   3cdfc:	ldr	r0, [sp, #4]
   3ce00:	mov	sp, fp
   3ce04:	pop	{fp, pc}
   3ce08:	push	{fp, lr}
   3ce0c:	mov	fp, sp
   3ce10:	sub	sp, sp, #8
   3ce14:	str	r0, [sp, #4]
   3ce18:	str	r1, [sp]
   3ce1c:	ldr	r0, [sp, #4]
   3ce20:	ldr	r1, [sp]
   3ce24:	bl	41600 <__assert_fail@plt+0x3016c>
   3ce28:	bl	3cd34 <__assert_fail@plt+0x2b8a0>
   3ce2c:	mov	sp, fp
   3ce30:	pop	{fp, pc}
   3ce34:	push	{fp, lr}
   3ce38:	mov	fp, sp
   3ce3c:	sub	sp, sp, #16
   3ce40:	str	r0, [fp, #-4]
   3ce44:	str	r1, [sp, #8]
   3ce48:	str	r2, [sp, #4]
   3ce4c:	ldr	r0, [fp, #-4]
   3ce50:	ldr	r1, [sp, #8]
   3ce54:	ldr	r2, [sp, #4]
   3ce58:	bl	416f8 <__assert_fail@plt+0x30264>
   3ce5c:	bl	3cd34 <__assert_fail@plt+0x2b8a0>
   3ce60:	mov	sp, fp
   3ce64:	pop	{fp, pc}
   3ce68:	push	{fp, lr}
   3ce6c:	mov	fp, sp
   3ce70:	sub	sp, sp, #8
   3ce74:	str	r0, [sp, #4]
   3ce78:	str	r1, [sp]
   3ce7c:	ldr	r1, [sp, #4]
   3ce80:	ldr	r2, [sp]
   3ce84:	movw	r0, #0
   3ce88:	bl	3cc9c <__assert_fail@plt+0x2b808>
   3ce8c:	mov	sp, fp
   3ce90:	pop	{fp, pc}
   3ce94:	push	{fp, lr}
   3ce98:	mov	fp, sp
   3ce9c:	sub	sp, sp, #8
   3cea0:	str	r0, [sp, #4]
   3cea4:	str	r1, [sp]
   3cea8:	ldr	r1, [sp, #4]
   3ceac:	ldr	r2, [sp]
   3ceb0:	movw	r0, #0
   3ceb4:	bl	3ce34 <__assert_fail@plt+0x2b9a0>
   3ceb8:	mov	sp, fp
   3cebc:	pop	{fp, pc}
   3cec0:	push	{fp, lr}
   3cec4:	mov	fp, sp
   3cec8:	sub	sp, sp, #8
   3cecc:	str	r0, [sp, #4]
   3ced0:	str	r1, [sp]
   3ced4:	ldr	r0, [sp, #4]
   3ced8:	ldr	r1, [sp]
   3cedc:	movw	r2, #1
   3cee0:	bl	3ceec <__assert_fail@plt+0x2ba58>
   3cee4:	mov	sp, fp
   3cee8:	pop	{fp, pc}
   3ceec:	push	{fp, lr}
   3cef0:	mov	fp, sp
   3cef4:	sub	sp, sp, #16
   3cef8:	str	r0, [fp, #-4]
   3cefc:	str	r1, [sp, #8]
   3cf00:	str	r2, [sp, #4]
   3cf04:	ldr	r0, [sp, #8]
   3cf08:	ldr	r0, [r0]
   3cf0c:	str	r0, [sp]
   3cf10:	ldr	r0, [fp, #-4]
   3cf14:	movw	r1, #0
   3cf18:	cmp	r0, r1
   3cf1c:	bne	3cf68 <__assert_fail@plt+0x2bad4>
   3cf20:	ldr	r0, [sp]
   3cf24:	cmp	r0, #0
   3cf28:	bne	3cf64 <__assert_fail@plt+0x2bad0>
   3cf2c:	ldr	r0, [sp, #4]
   3cf30:	movw	r1, #64	; 0x40
   3cf34:	udiv	r0, r1, r0
   3cf38:	str	r0, [sp]
   3cf3c:	ldr	r0, [sp]
   3cf40:	cmp	r0, #0
   3cf44:	movw	r0, #0
   3cf48:	movne	r0, #1
   3cf4c:	mvn	r1, #0
   3cf50:	eor	r0, r0, r1
   3cf54:	and	r0, r0, #1
   3cf58:	ldr	r1, [sp]
   3cf5c:	add	r0, r1, r0
   3cf60:	str	r0, [sp]
   3cf64:	b	3cf98 <__assert_fail@plt+0x2bb04>
   3cf68:	ldr	r0, [sp]
   3cf6c:	ldr	r1, [sp]
   3cf70:	lsr	r1, r1, #1
   3cf74:	add	r1, r1, #1
   3cf78:	adds	r0, r0, r1
   3cf7c:	mov	r1, #0
   3cf80:	adc	r1, r1, #0
   3cf84:	str	r0, [sp]
   3cf88:	tst	r1, #1
   3cf8c:	beq	3cf94 <__assert_fail@plt+0x2bb00>
   3cf90:	bl	3faec <__assert_fail@plt+0x2e658>
   3cf94:	b	3cf98 <__assert_fail@plt+0x2bb04>
   3cf98:	ldr	r0, [fp, #-4]
   3cf9c:	ldr	r1, [sp]
   3cfa0:	ldr	r2, [sp, #4]
   3cfa4:	bl	3cc9c <__assert_fail@plt+0x2b808>
   3cfa8:	str	r0, [fp, #-4]
   3cfac:	ldr	r0, [sp]
   3cfb0:	ldr	r1, [sp, #8]
   3cfb4:	str	r0, [r1]
   3cfb8:	ldr	r0, [fp, #-4]
   3cfbc:	mov	sp, fp
   3cfc0:	pop	{fp, pc}
   3cfc4:	push	{fp, lr}
   3cfc8:	mov	fp, sp
   3cfcc:	sub	sp, sp, #376	; 0x178
   3cfd0:	ldr	ip, [fp, #8]
   3cfd4:	str	r0, [fp, #-4]
   3cfd8:	str	r1, [fp, #-8]
   3cfdc:	str	r2, [fp, #-12]
   3cfe0:	str	r3, [fp, #-16]
   3cfe4:	ldr	r0, [fp, #-8]
   3cfe8:	ldr	r0, [r0]
   3cfec:	str	r0, [fp, #-20]	; 0xffffffec
   3cff0:	ldr	r0, [fp, #-20]	; 0xffffffec
   3cff4:	ldr	r1, [fp, #-20]	; 0xffffffec
   3cff8:	asr	r1, r1, #1
   3cffc:	add	r1, r0, r1
   3d000:	mov	r2, #1
   3d004:	cmp	r1, r0
   3d008:	movwvc	r2, #0
   3d00c:	str	r1, [fp, #-24]	; 0xffffffe8
   3d010:	tst	r2, #1
   3d014:	str	ip, [fp, #-36]	; 0xffffffdc
   3d018:	beq	3d024 <__assert_fail@plt+0x2bb90>
   3d01c:	ldr	r0, [pc, #4044]	; 3dff0 <__assert_fail@plt+0x2cb5c>
   3d020:	str	r0, [fp, #-24]	; 0xffffffe8
   3d024:	ldr	r0, [fp, #-16]
   3d028:	movw	r1, #0
   3d02c:	cmp	r1, r0
   3d030:	bgt	3d04c <__assert_fail@plt+0x2bbb8>
   3d034:	ldr	r0, [fp, #-16]
   3d038:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3d03c:	cmp	r0, r1
   3d040:	bge	3d04c <__assert_fail@plt+0x2bbb8>
   3d044:	ldr	r0, [fp, #-16]
   3d048:	str	r0, [fp, #-24]	; 0xffffffe8
   3d04c:	b	3d424 <__assert_fail@plt+0x2bf90>
   3d050:	b	3d054 <__assert_fail@plt+0x2bbc0>
   3d054:	ldr	r0, [fp, #8]
   3d058:	cmp	r0, #0
   3d05c:	bge	3d170 <__assert_fail@plt+0x2bcdc>
   3d060:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d064:	cmp	r0, #0
   3d068:	bge	3d0f4 <__assert_fail@plt+0x2bc60>
   3d06c:	b	3d070 <__assert_fail@plt+0x2bbdc>
   3d070:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d074:	ldr	r1, [fp, #8]
   3d078:	movw	r2, #127	; 0x7f
   3d07c:	sdiv	r1, r2, r1
   3d080:	cmp	r0, r1
   3d084:	blt	3d210 <__assert_fail@plt+0x2bd7c>
   3d088:	b	3d228 <__assert_fail@plt+0x2bd94>
   3d08c:	b	3d090 <__assert_fail@plt+0x2bbfc>
   3d090:	ldr	r0, [pc, #4076]	; 3e084 <__assert_fail@plt+0x2cbf0>
   3d094:	ldr	r1, [fp, #8]
   3d098:	cmp	r1, r0
   3d09c:	blt	3d0b4 <__assert_fail@plt+0x2bc20>
   3d0a0:	b	3d0c0 <__assert_fail@plt+0x2bc2c>
   3d0a4:	ldr	r0, [fp, #8]
   3d0a8:	movw	r1, #0
   3d0ac:	cmp	r1, r0
   3d0b0:	bge	3d0c0 <__assert_fail@plt+0x2bc2c>
   3d0b4:	movw	r0, #0
   3d0b8:	str	r0, [fp, #-40]	; 0xffffffd8
   3d0bc:	b	3d0d8 <__assert_fail@plt+0x2bc44>
   3d0c0:	ldr	r0, [fp, #8]
   3d0c4:	movw	r1, #0
   3d0c8:	sub	r0, r1, r0
   3d0cc:	movw	r1, #127	; 0x7f
   3d0d0:	sdiv	r0, r1, r0
   3d0d4:	str	r0, [fp, #-40]	; 0xffffffd8
   3d0d8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3d0dc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3d0e0:	mvn	r2, #0
   3d0e4:	sub	r1, r2, r1
   3d0e8:	cmp	r0, r1
   3d0ec:	ble	3d210 <__assert_fail@plt+0x2bd7c>
   3d0f0:	b	3d228 <__assert_fail@plt+0x2bd94>
   3d0f4:	b	3d0f8 <__assert_fail@plt+0x2bc64>
   3d0f8:	b	3d154 <__assert_fail@plt+0x2bcc0>
   3d0fc:	b	3d154 <__assert_fail@plt+0x2bcc0>
   3d100:	ldr	r0, [fp, #8]
   3d104:	cmn	r0, #1
   3d108:	bne	3d154 <__assert_fail@plt+0x2bcc0>
   3d10c:	b	3d110 <__assert_fail@plt+0x2bc7c>
   3d110:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d114:	mvn	r1, #127	; 0x7f
   3d118:	add	r0, r0, r1
   3d11c:	movw	r1, #0
   3d120:	cmp	r1, r0
   3d124:	blt	3d210 <__assert_fail@plt+0x2bd7c>
   3d128:	b	3d228 <__assert_fail@plt+0x2bd94>
   3d12c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d130:	movw	r1, #0
   3d134:	cmp	r1, r0
   3d138:	bge	3d228 <__assert_fail@plt+0x2bd94>
   3d13c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d140:	sub	r0, r0, #1
   3d144:	movw	r1, #127	; 0x7f
   3d148:	cmp	r1, r0
   3d14c:	blt	3d210 <__assert_fail@plt+0x2bd7c>
   3d150:	b	3d228 <__assert_fail@plt+0x2bd94>
   3d154:	ldr	r0, [fp, #8]
   3d158:	mvn	r1, #127	; 0x7f
   3d15c:	sdiv	r0, r1, r0
   3d160:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3d164:	cmp	r0, r1
   3d168:	blt	3d210 <__assert_fail@plt+0x2bd7c>
   3d16c:	b	3d228 <__assert_fail@plt+0x2bd94>
   3d170:	ldr	r0, [fp, #8]
   3d174:	cmp	r0, #0
   3d178:	bne	3d180 <__assert_fail@plt+0x2bcec>
   3d17c:	b	3d228 <__assert_fail@plt+0x2bd94>
   3d180:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d184:	cmp	r0, #0
   3d188:	bge	3d1f8 <__assert_fail@plt+0x2bd64>
   3d18c:	b	3d190 <__assert_fail@plt+0x2bcfc>
   3d190:	b	3d1dc <__assert_fail@plt+0x2bd48>
   3d194:	b	3d1dc <__assert_fail@plt+0x2bd48>
   3d198:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d19c:	cmn	r0, #1
   3d1a0:	bne	3d1dc <__assert_fail@plt+0x2bd48>
   3d1a4:	b	3d1a8 <__assert_fail@plt+0x2bd14>
   3d1a8:	ldr	r0, [fp, #8]
   3d1ac:	mvn	r1, #127	; 0x7f
   3d1b0:	add	r0, r0, r1
   3d1b4:	movw	r1, #0
   3d1b8:	cmp	r1, r0
   3d1bc:	blt	3d210 <__assert_fail@plt+0x2bd7c>
   3d1c0:	b	3d228 <__assert_fail@plt+0x2bd94>
   3d1c4:	ldr	r0, [fp, #8]
   3d1c8:	sub	r0, r0, #1
   3d1cc:	movw	r1, #127	; 0x7f
   3d1d0:	cmp	r1, r0
   3d1d4:	blt	3d210 <__assert_fail@plt+0x2bd7c>
   3d1d8:	b	3d228 <__assert_fail@plt+0x2bd94>
   3d1dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d1e0:	mvn	r1, #127	; 0x7f
   3d1e4:	sdiv	r0, r1, r0
   3d1e8:	ldr	r1, [fp, #8]
   3d1ec:	cmp	r0, r1
   3d1f0:	blt	3d210 <__assert_fail@plt+0x2bd7c>
   3d1f4:	b	3d228 <__assert_fail@plt+0x2bd94>
   3d1f8:	ldr	r0, [fp, #8]
   3d1fc:	movw	r1, #127	; 0x7f
   3d200:	sdiv	r0, r1, r0
   3d204:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3d208:	cmp	r0, r1
   3d20c:	bge	3d228 <__assert_fail@plt+0x2bd94>
   3d210:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d214:	ldr	r1, [fp, #8]
   3d218:	mul	r0, r0, r1
   3d21c:	sxtb	r0, r0
   3d220:	str	r0, [fp, #-28]	; 0xffffffe4
   3d224:	b	3e43c <__assert_fail@plt+0x2cfa8>
   3d228:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d22c:	ldr	r1, [fp, #8]
   3d230:	mul	r0, r0, r1
   3d234:	sxtb	r0, r0
   3d238:	str	r0, [fp, #-28]	; 0xffffffe4
   3d23c:	b	3e44c <__assert_fail@plt+0x2cfb8>
   3d240:	ldr	r0, [fp, #8]
   3d244:	cmp	r0, #0
   3d248:	bge	3d358 <__assert_fail@plt+0x2bec4>
   3d24c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d250:	cmp	r0, #0
   3d254:	bge	3d2e0 <__assert_fail@plt+0x2be4c>
   3d258:	b	3d25c <__assert_fail@plt+0x2bdc8>
   3d25c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d260:	ldr	r1, [fp, #8]
   3d264:	movw	r2, #255	; 0xff
   3d268:	sdiv	r1, r2, r1
   3d26c:	cmp	r0, r1
   3d270:	blt	3d3f4 <__assert_fail@plt+0x2bf60>
   3d274:	b	3d40c <__assert_fail@plt+0x2bf78>
   3d278:	b	3d27c <__assert_fail@plt+0x2bde8>
   3d27c:	ldr	r0, [pc, #3584]	; 3e084 <__assert_fail@plt+0x2cbf0>
   3d280:	ldr	r1, [fp, #8]
   3d284:	cmp	r1, r0
   3d288:	blt	3d2a0 <__assert_fail@plt+0x2be0c>
   3d28c:	b	3d2ac <__assert_fail@plt+0x2be18>
   3d290:	ldr	r0, [fp, #8]
   3d294:	movw	r1, #0
   3d298:	cmp	r1, r0
   3d29c:	bge	3d2ac <__assert_fail@plt+0x2be18>
   3d2a0:	movw	r0, #0
   3d2a4:	str	r0, [fp, #-44]	; 0xffffffd4
   3d2a8:	b	3d2c4 <__assert_fail@plt+0x2be30>
   3d2ac:	ldr	r0, [fp, #8]
   3d2b0:	movw	r1, #0
   3d2b4:	sub	r0, r1, r0
   3d2b8:	movw	r1, #255	; 0xff
   3d2bc:	sdiv	r0, r1, r0
   3d2c0:	str	r0, [fp, #-44]	; 0xffffffd4
   3d2c4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   3d2c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3d2cc:	mvn	r2, #0
   3d2d0:	sub	r1, r2, r1
   3d2d4:	cmp	r0, r1
   3d2d8:	ble	3d3f4 <__assert_fail@plt+0x2bf60>
   3d2dc:	b	3d40c <__assert_fail@plt+0x2bf78>
   3d2e0:	b	3d2e4 <__assert_fail@plt+0x2be50>
   3d2e4:	b	3d33c <__assert_fail@plt+0x2bea8>
   3d2e8:	b	3d33c <__assert_fail@plt+0x2bea8>
   3d2ec:	ldr	r0, [fp, #8]
   3d2f0:	cmn	r0, #1
   3d2f4:	bne	3d33c <__assert_fail@plt+0x2bea8>
   3d2f8:	b	3d2fc <__assert_fail@plt+0x2be68>
   3d2fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d300:	add	r0, r0, #0
   3d304:	movw	r1, #0
   3d308:	cmp	r1, r0
   3d30c:	blt	3d3f4 <__assert_fail@plt+0x2bf60>
   3d310:	b	3d40c <__assert_fail@plt+0x2bf78>
   3d314:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d318:	movw	r1, #0
   3d31c:	cmp	r1, r0
   3d320:	bge	3d40c <__assert_fail@plt+0x2bf78>
   3d324:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d328:	sub	r0, r0, #1
   3d32c:	mvn	r1, #0
   3d330:	cmp	r1, r0
   3d334:	blt	3d3f4 <__assert_fail@plt+0x2bf60>
   3d338:	b	3d40c <__assert_fail@plt+0x2bf78>
   3d33c:	ldr	r0, [fp, #8]
   3d340:	movw	r1, #0
   3d344:	sdiv	r0, r1, r0
   3d348:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3d34c:	cmp	r0, r1
   3d350:	blt	3d3f4 <__assert_fail@plt+0x2bf60>
   3d354:	b	3d40c <__assert_fail@plt+0x2bf78>
   3d358:	ldr	r0, [fp, #8]
   3d35c:	cmp	r0, #0
   3d360:	bne	3d368 <__assert_fail@plt+0x2bed4>
   3d364:	b	3d40c <__assert_fail@plt+0x2bf78>
   3d368:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d36c:	cmp	r0, #0
   3d370:	bge	3d3dc <__assert_fail@plt+0x2bf48>
   3d374:	b	3d378 <__assert_fail@plt+0x2bee4>
   3d378:	b	3d3c0 <__assert_fail@plt+0x2bf2c>
   3d37c:	b	3d3c0 <__assert_fail@plt+0x2bf2c>
   3d380:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d384:	cmn	r0, #1
   3d388:	bne	3d3c0 <__assert_fail@plt+0x2bf2c>
   3d38c:	b	3d390 <__assert_fail@plt+0x2befc>
   3d390:	ldr	r0, [fp, #8]
   3d394:	add	r0, r0, #0
   3d398:	movw	r1, #0
   3d39c:	cmp	r1, r0
   3d3a0:	blt	3d3f4 <__assert_fail@plt+0x2bf60>
   3d3a4:	b	3d40c <__assert_fail@plt+0x2bf78>
   3d3a8:	ldr	r0, [fp, #8]
   3d3ac:	sub	r0, r0, #1
   3d3b0:	mvn	r1, #0
   3d3b4:	cmp	r1, r0
   3d3b8:	blt	3d3f4 <__assert_fail@plt+0x2bf60>
   3d3bc:	b	3d40c <__assert_fail@plt+0x2bf78>
   3d3c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d3c4:	movw	r1, #0
   3d3c8:	sdiv	r0, r1, r0
   3d3cc:	ldr	r1, [fp, #8]
   3d3d0:	cmp	r0, r1
   3d3d4:	blt	3d3f4 <__assert_fail@plt+0x2bf60>
   3d3d8:	b	3d40c <__assert_fail@plt+0x2bf78>
   3d3dc:	ldr	r0, [fp, #8]
   3d3e0:	movw	r1, #255	; 0xff
   3d3e4:	sdiv	r0, r1, r0
   3d3e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3d3ec:	cmp	r0, r1
   3d3f0:	bge	3d40c <__assert_fail@plt+0x2bf78>
   3d3f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d3f8:	ldr	r1, [fp, #8]
   3d3fc:	mul	r0, r0, r1
   3d400:	and	r0, r0, #255	; 0xff
   3d404:	str	r0, [fp, #-28]	; 0xffffffe4
   3d408:	b	3e43c <__assert_fail@plt+0x2cfa8>
   3d40c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d410:	ldr	r1, [fp, #8]
   3d414:	mul	r0, r0, r1
   3d418:	and	r0, r0, #255	; 0xff
   3d41c:	str	r0, [fp, #-28]	; 0xffffffe4
   3d420:	b	3e44c <__assert_fail@plt+0x2cfb8>
   3d424:	b	3d7fc <__assert_fail@plt+0x2c368>
   3d428:	b	3d42c <__assert_fail@plt+0x2bf98>
   3d42c:	ldr	r0, [fp, #8]
   3d430:	cmp	r0, #0
   3d434:	bge	3d548 <__assert_fail@plt+0x2c0b4>
   3d438:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d43c:	cmp	r0, #0
   3d440:	bge	3d4cc <__assert_fail@plt+0x2c038>
   3d444:	b	3d448 <__assert_fail@plt+0x2bfb4>
   3d448:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d44c:	ldr	r1, [fp, #8]
   3d450:	movw	r2, #32767	; 0x7fff
   3d454:	sdiv	r1, r2, r1
   3d458:	cmp	r0, r1
   3d45c:	blt	3d5e8 <__assert_fail@plt+0x2c154>
   3d460:	b	3d600 <__assert_fail@plt+0x2c16c>
   3d464:	b	3d468 <__assert_fail@plt+0x2bfd4>
   3d468:	ldr	r0, [pc, #3092]	; 3e084 <__assert_fail@plt+0x2cbf0>
   3d46c:	ldr	r1, [fp, #8]
   3d470:	cmp	r1, r0
   3d474:	blt	3d48c <__assert_fail@plt+0x2bff8>
   3d478:	b	3d498 <__assert_fail@plt+0x2c004>
   3d47c:	ldr	r0, [fp, #8]
   3d480:	movw	r1, #0
   3d484:	cmp	r1, r0
   3d488:	bge	3d498 <__assert_fail@plt+0x2c004>
   3d48c:	movw	r0, #0
   3d490:	str	r0, [fp, #-48]	; 0xffffffd0
   3d494:	b	3d4b0 <__assert_fail@plt+0x2c01c>
   3d498:	ldr	r0, [fp, #8]
   3d49c:	movw	r1, #0
   3d4a0:	sub	r0, r1, r0
   3d4a4:	movw	r1, #32767	; 0x7fff
   3d4a8:	sdiv	r0, r1, r0
   3d4ac:	str	r0, [fp, #-48]	; 0xffffffd0
   3d4b0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   3d4b4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3d4b8:	mvn	r2, #0
   3d4bc:	sub	r1, r2, r1
   3d4c0:	cmp	r0, r1
   3d4c4:	ble	3d5e8 <__assert_fail@plt+0x2c154>
   3d4c8:	b	3d600 <__assert_fail@plt+0x2c16c>
   3d4cc:	b	3d4d0 <__assert_fail@plt+0x2c03c>
   3d4d0:	b	3d52c <__assert_fail@plt+0x2c098>
   3d4d4:	b	3d52c <__assert_fail@plt+0x2c098>
   3d4d8:	ldr	r0, [fp, #8]
   3d4dc:	cmn	r0, #1
   3d4e0:	bne	3d52c <__assert_fail@plt+0x2c098>
   3d4e4:	b	3d4e8 <__assert_fail@plt+0x2c054>
   3d4e8:	ldr	r0, [pc, #3928]	; 3e448 <__assert_fail@plt+0x2cfb4>
   3d4ec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3d4f0:	add	r0, r1, r0
   3d4f4:	movw	r1, #0
   3d4f8:	cmp	r1, r0
   3d4fc:	blt	3d5e8 <__assert_fail@plt+0x2c154>
   3d500:	b	3d600 <__assert_fail@plt+0x2c16c>
   3d504:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d508:	movw	r1, #0
   3d50c:	cmp	r1, r0
   3d510:	bge	3d600 <__assert_fail@plt+0x2c16c>
   3d514:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d518:	sub	r0, r0, #1
   3d51c:	movw	r1, #32767	; 0x7fff
   3d520:	cmp	r1, r0
   3d524:	blt	3d5e8 <__assert_fail@plt+0x2c154>
   3d528:	b	3d600 <__assert_fail@plt+0x2c16c>
   3d52c:	ldr	r0, [pc, #3860]	; 3e448 <__assert_fail@plt+0x2cfb4>
   3d530:	ldr	r1, [fp, #8]
   3d534:	sdiv	r0, r0, r1
   3d538:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3d53c:	cmp	r0, r1
   3d540:	blt	3d5e8 <__assert_fail@plt+0x2c154>
   3d544:	b	3d600 <__assert_fail@plt+0x2c16c>
   3d548:	ldr	r0, [fp, #8]
   3d54c:	cmp	r0, #0
   3d550:	bne	3d558 <__assert_fail@plt+0x2c0c4>
   3d554:	b	3d600 <__assert_fail@plt+0x2c16c>
   3d558:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d55c:	cmp	r0, #0
   3d560:	bge	3d5d0 <__assert_fail@plt+0x2c13c>
   3d564:	b	3d568 <__assert_fail@plt+0x2c0d4>
   3d568:	b	3d5b4 <__assert_fail@plt+0x2c120>
   3d56c:	b	3d5b4 <__assert_fail@plt+0x2c120>
   3d570:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d574:	cmn	r0, #1
   3d578:	bne	3d5b4 <__assert_fail@plt+0x2c120>
   3d57c:	b	3d580 <__assert_fail@plt+0x2c0ec>
   3d580:	ldr	r0, [pc, #3776]	; 3e448 <__assert_fail@plt+0x2cfb4>
   3d584:	ldr	r1, [fp, #8]
   3d588:	add	r0, r1, r0
   3d58c:	movw	r1, #0
   3d590:	cmp	r1, r0
   3d594:	blt	3d5e8 <__assert_fail@plt+0x2c154>
   3d598:	b	3d600 <__assert_fail@plt+0x2c16c>
   3d59c:	ldr	r0, [fp, #8]
   3d5a0:	sub	r0, r0, #1
   3d5a4:	movw	r1, #32767	; 0x7fff
   3d5a8:	cmp	r1, r0
   3d5ac:	blt	3d5e8 <__assert_fail@plt+0x2c154>
   3d5b0:	b	3d600 <__assert_fail@plt+0x2c16c>
   3d5b4:	ldr	r0, [pc, #3724]	; 3e448 <__assert_fail@plt+0x2cfb4>
   3d5b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3d5bc:	sdiv	r0, r0, r1
   3d5c0:	ldr	r1, [fp, #8]
   3d5c4:	cmp	r0, r1
   3d5c8:	blt	3d5e8 <__assert_fail@plt+0x2c154>
   3d5cc:	b	3d600 <__assert_fail@plt+0x2c16c>
   3d5d0:	ldr	r0, [fp, #8]
   3d5d4:	movw	r1, #32767	; 0x7fff
   3d5d8:	sdiv	r0, r1, r0
   3d5dc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3d5e0:	cmp	r0, r1
   3d5e4:	bge	3d600 <__assert_fail@plt+0x2c16c>
   3d5e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d5ec:	ldr	r1, [fp, #8]
   3d5f0:	mul	r0, r0, r1
   3d5f4:	sxth	r0, r0
   3d5f8:	str	r0, [fp, #-28]	; 0xffffffe4
   3d5fc:	b	3e43c <__assert_fail@plt+0x2cfa8>
   3d600:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d604:	ldr	r1, [fp, #8]
   3d608:	mul	r0, r0, r1
   3d60c:	sxth	r0, r0
   3d610:	str	r0, [fp, #-28]	; 0xffffffe4
   3d614:	b	3e44c <__assert_fail@plt+0x2cfb8>
   3d618:	ldr	r0, [fp, #8]
   3d61c:	cmp	r0, #0
   3d620:	bge	3d730 <__assert_fail@plt+0x2c29c>
   3d624:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d628:	cmp	r0, #0
   3d62c:	bge	3d6b8 <__assert_fail@plt+0x2c224>
   3d630:	b	3d634 <__assert_fail@plt+0x2c1a0>
   3d634:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d638:	ldr	r1, [fp, #8]
   3d63c:	movw	r2, #65535	; 0xffff
   3d640:	sdiv	r1, r2, r1
   3d644:	cmp	r0, r1
   3d648:	blt	3d7cc <__assert_fail@plt+0x2c338>
   3d64c:	b	3d7e4 <__assert_fail@plt+0x2c350>
   3d650:	b	3d654 <__assert_fail@plt+0x2c1c0>
   3d654:	ldr	r0, [pc, #2600]	; 3e084 <__assert_fail@plt+0x2cbf0>
   3d658:	ldr	r1, [fp, #8]
   3d65c:	cmp	r1, r0
   3d660:	blt	3d678 <__assert_fail@plt+0x2c1e4>
   3d664:	b	3d684 <__assert_fail@plt+0x2c1f0>
   3d668:	ldr	r0, [fp, #8]
   3d66c:	movw	r1, #0
   3d670:	cmp	r1, r0
   3d674:	bge	3d684 <__assert_fail@plt+0x2c1f0>
   3d678:	movw	r0, #0
   3d67c:	str	r0, [fp, #-52]	; 0xffffffcc
   3d680:	b	3d69c <__assert_fail@plt+0x2c208>
   3d684:	ldr	r0, [fp, #8]
   3d688:	movw	r1, #0
   3d68c:	sub	r0, r1, r0
   3d690:	movw	r1, #65535	; 0xffff
   3d694:	sdiv	r0, r1, r0
   3d698:	str	r0, [fp, #-52]	; 0xffffffcc
   3d69c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   3d6a0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3d6a4:	mvn	r2, #0
   3d6a8:	sub	r1, r2, r1
   3d6ac:	cmp	r0, r1
   3d6b0:	ble	3d7cc <__assert_fail@plt+0x2c338>
   3d6b4:	b	3d7e4 <__assert_fail@plt+0x2c350>
   3d6b8:	b	3d6bc <__assert_fail@plt+0x2c228>
   3d6bc:	b	3d714 <__assert_fail@plt+0x2c280>
   3d6c0:	b	3d714 <__assert_fail@plt+0x2c280>
   3d6c4:	ldr	r0, [fp, #8]
   3d6c8:	cmn	r0, #1
   3d6cc:	bne	3d714 <__assert_fail@plt+0x2c280>
   3d6d0:	b	3d6d4 <__assert_fail@plt+0x2c240>
   3d6d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d6d8:	add	r0, r0, #0
   3d6dc:	movw	r1, #0
   3d6e0:	cmp	r1, r0
   3d6e4:	blt	3d7cc <__assert_fail@plt+0x2c338>
   3d6e8:	b	3d7e4 <__assert_fail@plt+0x2c350>
   3d6ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d6f0:	movw	r1, #0
   3d6f4:	cmp	r1, r0
   3d6f8:	bge	3d7e4 <__assert_fail@plt+0x2c350>
   3d6fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d700:	sub	r0, r0, #1
   3d704:	mvn	r1, #0
   3d708:	cmp	r1, r0
   3d70c:	blt	3d7cc <__assert_fail@plt+0x2c338>
   3d710:	b	3d7e4 <__assert_fail@plt+0x2c350>
   3d714:	ldr	r0, [fp, #8]
   3d718:	movw	r1, #0
   3d71c:	sdiv	r0, r1, r0
   3d720:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3d724:	cmp	r0, r1
   3d728:	blt	3d7cc <__assert_fail@plt+0x2c338>
   3d72c:	b	3d7e4 <__assert_fail@plt+0x2c350>
   3d730:	ldr	r0, [fp, #8]
   3d734:	cmp	r0, #0
   3d738:	bne	3d740 <__assert_fail@plt+0x2c2ac>
   3d73c:	b	3d7e4 <__assert_fail@plt+0x2c350>
   3d740:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d744:	cmp	r0, #0
   3d748:	bge	3d7b4 <__assert_fail@plt+0x2c320>
   3d74c:	b	3d750 <__assert_fail@plt+0x2c2bc>
   3d750:	b	3d798 <__assert_fail@plt+0x2c304>
   3d754:	b	3d798 <__assert_fail@plt+0x2c304>
   3d758:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d75c:	cmn	r0, #1
   3d760:	bne	3d798 <__assert_fail@plt+0x2c304>
   3d764:	b	3d768 <__assert_fail@plt+0x2c2d4>
   3d768:	ldr	r0, [fp, #8]
   3d76c:	add	r0, r0, #0
   3d770:	movw	r1, #0
   3d774:	cmp	r1, r0
   3d778:	blt	3d7cc <__assert_fail@plt+0x2c338>
   3d77c:	b	3d7e4 <__assert_fail@plt+0x2c350>
   3d780:	ldr	r0, [fp, #8]
   3d784:	sub	r0, r0, #1
   3d788:	mvn	r1, #0
   3d78c:	cmp	r1, r0
   3d790:	blt	3d7cc <__assert_fail@plt+0x2c338>
   3d794:	b	3d7e4 <__assert_fail@plt+0x2c350>
   3d798:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d79c:	movw	r1, #0
   3d7a0:	sdiv	r0, r1, r0
   3d7a4:	ldr	r1, [fp, #8]
   3d7a8:	cmp	r0, r1
   3d7ac:	blt	3d7cc <__assert_fail@plt+0x2c338>
   3d7b0:	b	3d7e4 <__assert_fail@plt+0x2c350>
   3d7b4:	ldr	r0, [fp, #8]
   3d7b8:	movw	r1, #65535	; 0xffff
   3d7bc:	sdiv	r0, r1, r0
   3d7c0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3d7c4:	cmp	r0, r1
   3d7c8:	bge	3d7e4 <__assert_fail@plt+0x2c350>
   3d7cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d7d0:	ldr	r1, [fp, #8]
   3d7d4:	mul	r0, r0, r1
   3d7d8:	uxth	r0, r0
   3d7dc:	str	r0, [fp, #-28]	; 0xffffffe4
   3d7e0:	b	3e43c <__assert_fail@plt+0x2cfa8>
   3d7e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d7e8:	ldr	r1, [fp, #8]
   3d7ec:	mul	r0, r0, r1
   3d7f0:	uxth	r0, r0
   3d7f4:	str	r0, [fp, #-28]	; 0xffffffe4
   3d7f8:	b	3e44c <__assert_fail@plt+0x2cfb8>
   3d7fc:	b	3d800 <__assert_fail@plt+0x2c36c>
   3d800:	b	3d804 <__assert_fail@plt+0x2c370>
   3d804:	ldr	r0, [fp, #8]
   3d808:	cmp	r0, #0
   3d80c:	bge	3d910 <__assert_fail@plt+0x2c47c>
   3d810:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d814:	cmp	r0, #0
   3d818:	bge	3d8a4 <__assert_fail@plt+0x2c410>
   3d81c:	b	3d820 <__assert_fail@plt+0x2c38c>
   3d820:	ldr	r0, [pc, #1992]	; 3dff0 <__assert_fail@plt+0x2cb5c>
   3d824:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3d828:	ldr	r2, [fp, #8]
   3d82c:	sdiv	r0, r0, r2
   3d830:	cmp	r1, r0
   3d834:	blt	3d9a0 <__assert_fail@plt+0x2c50c>
   3d838:	b	3d9b4 <__assert_fail@plt+0x2c520>
   3d83c:	b	3d840 <__assert_fail@plt+0x2c3ac>
   3d840:	ldr	r0, [pc, #2108]	; 3e084 <__assert_fail@plt+0x2cbf0>
   3d844:	ldr	r1, [fp, #8]
   3d848:	cmp	r1, r0
   3d84c:	blt	3d864 <__assert_fail@plt+0x2c3d0>
   3d850:	b	3d870 <__assert_fail@plt+0x2c3dc>
   3d854:	ldr	r0, [fp, #8]
   3d858:	movw	r1, #0
   3d85c:	cmp	r1, r0
   3d860:	bge	3d870 <__assert_fail@plt+0x2c3dc>
   3d864:	movw	r0, #0
   3d868:	str	r0, [fp, #-56]	; 0xffffffc8
   3d86c:	b	3d888 <__assert_fail@plt+0x2c3f4>
   3d870:	ldr	r0, [pc, #1912]	; 3dff0 <__assert_fail@plt+0x2cb5c>
   3d874:	ldr	r1, [fp, #8]
   3d878:	movw	r2, #0
   3d87c:	sub	r1, r2, r1
   3d880:	sdiv	r0, r0, r1
   3d884:	str	r0, [fp, #-56]	; 0xffffffc8
   3d888:	ldr	r0, [fp, #-56]	; 0xffffffc8
   3d88c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3d890:	mvn	r2, #0
   3d894:	sub	r1, r2, r1
   3d898:	cmp	r0, r1
   3d89c:	ble	3d9a0 <__assert_fail@plt+0x2c50c>
   3d8a0:	b	3d9b4 <__assert_fail@plt+0x2c520>
   3d8a4:	ldr	r0, [fp, #8]
   3d8a8:	cmn	r0, #1
   3d8ac:	bne	3d8f4 <__assert_fail@plt+0x2c460>
   3d8b0:	b	3d8b4 <__assert_fail@plt+0x2c420>
   3d8b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d8b8:	add	r0, r0, #-2147483648	; 0x80000000
   3d8bc:	movw	r1, #0
   3d8c0:	cmp	r1, r0
   3d8c4:	blt	3d9a0 <__assert_fail@plt+0x2c50c>
   3d8c8:	b	3d9b4 <__assert_fail@plt+0x2c520>
   3d8cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d8d0:	movw	r1, #0
   3d8d4:	cmp	r1, r0
   3d8d8:	bge	3d9b4 <__assert_fail@plt+0x2c520>
   3d8dc:	ldr	r0, [pc, #1804]	; 3dff0 <__assert_fail@plt+0x2cb5c>
   3d8e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3d8e4:	sub	r1, r1, #1
   3d8e8:	cmp	r0, r1
   3d8ec:	blt	3d9a0 <__assert_fail@plt+0x2c50c>
   3d8f0:	b	3d9b4 <__assert_fail@plt+0x2c520>
   3d8f4:	ldr	r0, [pc, #4072]	; 3e8e4 <__assert_fail@plt+0x2d450>
   3d8f8:	ldr	r1, [fp, #8]
   3d8fc:	sdiv	r0, r0, r1
   3d900:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3d904:	cmp	r0, r1
   3d908:	blt	3d9a0 <__assert_fail@plt+0x2c50c>
   3d90c:	b	3d9b4 <__assert_fail@plt+0x2c520>
   3d910:	ldr	r0, [fp, #8]
   3d914:	cmp	r0, #0
   3d918:	bne	3d920 <__assert_fail@plt+0x2c48c>
   3d91c:	b	3d9b4 <__assert_fail@plt+0x2c520>
   3d920:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d924:	cmp	r0, #0
   3d928:	bge	3d988 <__assert_fail@plt+0x2c4f4>
   3d92c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d930:	cmn	r0, #1
   3d934:	bne	3d96c <__assert_fail@plt+0x2c4d8>
   3d938:	b	3d93c <__assert_fail@plt+0x2c4a8>
   3d93c:	ldr	r0, [fp, #8]
   3d940:	add	r0, r0, #-2147483648	; 0x80000000
   3d944:	movw	r1, #0
   3d948:	cmp	r1, r0
   3d94c:	blt	3d9a0 <__assert_fail@plt+0x2c50c>
   3d950:	b	3d9b4 <__assert_fail@plt+0x2c520>
   3d954:	ldr	r0, [pc, #1684]	; 3dff0 <__assert_fail@plt+0x2cb5c>
   3d958:	ldr	r1, [fp, #8]
   3d95c:	sub	r1, r1, #1
   3d960:	cmp	r0, r1
   3d964:	blt	3d9a0 <__assert_fail@plt+0x2c50c>
   3d968:	b	3d9b4 <__assert_fail@plt+0x2c520>
   3d96c:	ldr	r0, [pc, #3952]	; 3e8e4 <__assert_fail@plt+0x2d450>
   3d970:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3d974:	sdiv	r0, r0, r1
   3d978:	ldr	r1, [fp, #8]
   3d97c:	cmp	r0, r1
   3d980:	blt	3d9a0 <__assert_fail@plt+0x2c50c>
   3d984:	b	3d9b4 <__assert_fail@plt+0x2c520>
   3d988:	ldr	r0, [pc, #1632]	; 3dff0 <__assert_fail@plt+0x2cb5c>
   3d98c:	ldr	r1, [fp, #8]
   3d990:	sdiv	r0, r0, r1
   3d994:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3d998:	cmp	r0, r1
   3d99c:	bge	3d9b4 <__assert_fail@plt+0x2c520>
   3d9a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d9a4:	ldr	r1, [fp, #8]
   3d9a8:	mul	r0, r0, r1
   3d9ac:	str	r0, [fp, #-28]	; 0xffffffe4
   3d9b0:	b	3e43c <__assert_fail@plt+0x2cfa8>
   3d9b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d9b8:	ldr	r1, [fp, #8]
   3d9bc:	mul	r0, r0, r1
   3d9c0:	str	r0, [fp, #-28]	; 0xffffffe4
   3d9c4:	b	3e44c <__assert_fail@plt+0x2cfb8>
   3d9c8:	ldr	r0, [fp, #8]
   3d9cc:	cmp	r0, #0
   3d9d0:	bge	3dae0 <__assert_fail@plt+0x2c64c>
   3d9d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d9d8:	cmp	r0, #0
   3d9dc:	bge	3da68 <__assert_fail@plt+0x2c5d4>
   3d9e0:	b	3da00 <__assert_fail@plt+0x2c56c>
   3d9e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d9e8:	ldr	r1, [fp, #8]
   3d9ec:	mvn	r2, #0
   3d9f0:	udiv	r1, r2, r1
   3d9f4:	cmp	r0, r1
   3d9f8:	bcc	3db7c <__assert_fail@plt+0x2c6e8>
   3d9fc:	b	3db90 <__assert_fail@plt+0x2c6fc>
   3da00:	b	3da04 <__assert_fail@plt+0x2c570>
   3da04:	ldr	r0, [pc, #1656]	; 3e084 <__assert_fail@plt+0x2cbf0>
   3da08:	ldr	r1, [fp, #8]
   3da0c:	cmp	r1, r0
   3da10:	blt	3da28 <__assert_fail@plt+0x2c594>
   3da14:	b	3da34 <__assert_fail@plt+0x2c5a0>
   3da18:	ldr	r0, [fp, #8]
   3da1c:	movw	r1, #0
   3da20:	cmp	r1, r0
   3da24:	bge	3da34 <__assert_fail@plt+0x2c5a0>
   3da28:	movw	r0, #1
   3da2c:	str	r0, [fp, #-60]	; 0xffffffc4
   3da30:	b	3da4c <__assert_fail@plt+0x2c5b8>
   3da34:	ldr	r0, [fp, #8]
   3da38:	movw	r1, #0
   3da3c:	sub	r0, r1, r0
   3da40:	mvn	r1, #0
   3da44:	udiv	r0, r1, r0
   3da48:	str	r0, [fp, #-60]	; 0xffffffc4
   3da4c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   3da50:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3da54:	mvn	r2, #0
   3da58:	sub	r1, r2, r1
   3da5c:	cmp	r0, r1
   3da60:	bls	3db7c <__assert_fail@plt+0x2c6e8>
   3da64:	b	3db90 <__assert_fail@plt+0x2c6fc>
   3da68:	b	3da6c <__assert_fail@plt+0x2c5d8>
   3da6c:	b	3dac4 <__assert_fail@plt+0x2c630>
   3da70:	b	3dac4 <__assert_fail@plt+0x2c630>
   3da74:	ldr	r0, [fp, #8]
   3da78:	cmn	r0, #1
   3da7c:	bne	3dac4 <__assert_fail@plt+0x2c630>
   3da80:	b	3da84 <__assert_fail@plt+0x2c5f0>
   3da84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3da88:	add	r0, r0, #0
   3da8c:	movw	r1, #0
   3da90:	cmp	r1, r0
   3da94:	blt	3db7c <__assert_fail@plt+0x2c6e8>
   3da98:	b	3db90 <__assert_fail@plt+0x2c6fc>
   3da9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3daa0:	movw	r1, #0
   3daa4:	cmp	r1, r0
   3daa8:	bge	3db90 <__assert_fail@plt+0x2c6fc>
   3daac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3dab0:	sub	r0, r0, #1
   3dab4:	mvn	r1, #0
   3dab8:	cmp	r1, r0
   3dabc:	blt	3db7c <__assert_fail@plt+0x2c6e8>
   3dac0:	b	3db90 <__assert_fail@plt+0x2c6fc>
   3dac4:	ldr	r0, [fp, #8]
   3dac8:	movw	r1, #0
   3dacc:	sdiv	r0, r1, r0
   3dad0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3dad4:	cmp	r0, r1
   3dad8:	blt	3db7c <__assert_fail@plt+0x2c6e8>
   3dadc:	b	3db90 <__assert_fail@plt+0x2c6fc>
   3dae0:	ldr	r0, [fp, #8]
   3dae4:	cmp	r0, #0
   3dae8:	bne	3daf0 <__assert_fail@plt+0x2c65c>
   3daec:	b	3db90 <__assert_fail@plt+0x2c6fc>
   3daf0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3daf4:	cmp	r0, #0
   3daf8:	bge	3db64 <__assert_fail@plt+0x2c6d0>
   3dafc:	b	3db00 <__assert_fail@plt+0x2c66c>
   3db00:	b	3db48 <__assert_fail@plt+0x2c6b4>
   3db04:	b	3db48 <__assert_fail@plt+0x2c6b4>
   3db08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3db0c:	cmn	r0, #1
   3db10:	bne	3db48 <__assert_fail@plt+0x2c6b4>
   3db14:	b	3db18 <__assert_fail@plt+0x2c684>
   3db18:	ldr	r0, [fp, #8]
   3db1c:	add	r0, r0, #0
   3db20:	movw	r1, #0
   3db24:	cmp	r1, r0
   3db28:	blt	3db7c <__assert_fail@plt+0x2c6e8>
   3db2c:	b	3db90 <__assert_fail@plt+0x2c6fc>
   3db30:	ldr	r0, [fp, #8]
   3db34:	sub	r0, r0, #1
   3db38:	mvn	r1, #0
   3db3c:	cmp	r1, r0
   3db40:	blt	3db7c <__assert_fail@plt+0x2c6e8>
   3db44:	b	3db90 <__assert_fail@plt+0x2c6fc>
   3db48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3db4c:	movw	r1, #0
   3db50:	sdiv	r0, r1, r0
   3db54:	ldr	r1, [fp, #8]
   3db58:	cmp	r0, r1
   3db5c:	blt	3db7c <__assert_fail@plt+0x2c6e8>
   3db60:	b	3db90 <__assert_fail@plt+0x2c6fc>
   3db64:	ldr	r0, [fp, #8]
   3db68:	mvn	r1, #0
   3db6c:	udiv	r0, r1, r0
   3db70:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3db74:	cmp	r0, r1
   3db78:	bcs	3db90 <__assert_fail@plt+0x2c6fc>
   3db7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3db80:	ldr	r1, [fp, #8]
   3db84:	mul	r0, r0, r1
   3db88:	str	r0, [fp, #-28]	; 0xffffffe4
   3db8c:	b	3e43c <__assert_fail@plt+0x2cfa8>
   3db90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3db94:	ldr	r1, [fp, #8]
   3db98:	mul	r0, r0, r1
   3db9c:	str	r0, [fp, #-28]	; 0xffffffe4
   3dba0:	b	3e44c <__assert_fail@plt+0x2cfb8>
   3dba4:	b	3dba8 <__assert_fail@plt+0x2c714>
   3dba8:	b	3dbac <__assert_fail@plt+0x2c718>
   3dbac:	ldr	r0, [fp, #8]
   3dbb0:	cmp	r0, #0
   3dbb4:	bge	3dcb8 <__assert_fail@plt+0x2c824>
   3dbb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3dbbc:	cmp	r0, #0
   3dbc0:	bge	3dc4c <__assert_fail@plt+0x2c7b8>
   3dbc4:	b	3dbc8 <__assert_fail@plt+0x2c734>
   3dbc8:	ldr	r0, [pc, #1056]	; 3dff0 <__assert_fail@plt+0x2cb5c>
   3dbcc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3dbd0:	ldr	r2, [fp, #8]
   3dbd4:	sdiv	r0, r0, r2
   3dbd8:	cmp	r1, r0
   3dbdc:	blt	3dd48 <__assert_fail@plt+0x2c8b4>
   3dbe0:	b	3dd5c <__assert_fail@plt+0x2c8c8>
   3dbe4:	b	3dbe8 <__assert_fail@plt+0x2c754>
   3dbe8:	ldr	r0, [pc, #1172]	; 3e084 <__assert_fail@plt+0x2cbf0>
   3dbec:	ldr	r1, [fp, #8]
   3dbf0:	cmp	r1, r0
   3dbf4:	blt	3dc0c <__assert_fail@plt+0x2c778>
   3dbf8:	b	3dc18 <__assert_fail@plt+0x2c784>
   3dbfc:	ldr	r0, [fp, #8]
   3dc00:	movw	r1, #0
   3dc04:	cmp	r1, r0
   3dc08:	bge	3dc18 <__assert_fail@plt+0x2c784>
   3dc0c:	movw	r0, #0
   3dc10:	str	r0, [fp, #-64]	; 0xffffffc0
   3dc14:	b	3dc30 <__assert_fail@plt+0x2c79c>
   3dc18:	ldr	r0, [pc, #976]	; 3dff0 <__assert_fail@plt+0x2cb5c>
   3dc1c:	ldr	r1, [fp, #8]
   3dc20:	movw	r2, #0
   3dc24:	sub	r1, r2, r1
   3dc28:	sdiv	r0, r0, r1
   3dc2c:	str	r0, [fp, #-64]	; 0xffffffc0
   3dc30:	ldr	r0, [fp, #-64]	; 0xffffffc0
   3dc34:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3dc38:	mvn	r2, #0
   3dc3c:	sub	r1, r2, r1
   3dc40:	cmp	r0, r1
   3dc44:	ble	3dd48 <__assert_fail@plt+0x2c8b4>
   3dc48:	b	3dd5c <__assert_fail@plt+0x2c8c8>
   3dc4c:	ldr	r0, [fp, #8]
   3dc50:	cmn	r0, #1
   3dc54:	bne	3dc9c <__assert_fail@plt+0x2c808>
   3dc58:	b	3dc5c <__assert_fail@plt+0x2c7c8>
   3dc5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3dc60:	add	r0, r0, #-2147483648	; 0x80000000
   3dc64:	movw	r1, #0
   3dc68:	cmp	r1, r0
   3dc6c:	blt	3dd48 <__assert_fail@plt+0x2c8b4>
   3dc70:	b	3dd5c <__assert_fail@plt+0x2c8c8>
   3dc74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3dc78:	movw	r1, #0
   3dc7c:	cmp	r1, r0
   3dc80:	bge	3dd5c <__assert_fail@plt+0x2c8c8>
   3dc84:	ldr	r0, [pc, #868]	; 3dff0 <__assert_fail@plt+0x2cb5c>
   3dc88:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3dc8c:	sub	r1, r1, #1
   3dc90:	cmp	r0, r1
   3dc94:	blt	3dd48 <__assert_fail@plt+0x2c8b4>
   3dc98:	b	3dd5c <__assert_fail@plt+0x2c8c8>
   3dc9c:	ldr	r0, [pc, #3136]	; 3e8e4 <__assert_fail@plt+0x2d450>
   3dca0:	ldr	r1, [fp, #8]
   3dca4:	sdiv	r0, r0, r1
   3dca8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3dcac:	cmp	r0, r1
   3dcb0:	blt	3dd48 <__assert_fail@plt+0x2c8b4>
   3dcb4:	b	3dd5c <__assert_fail@plt+0x2c8c8>
   3dcb8:	ldr	r0, [fp, #8]
   3dcbc:	cmp	r0, #0
   3dcc0:	bne	3dcc8 <__assert_fail@plt+0x2c834>
   3dcc4:	b	3dd5c <__assert_fail@plt+0x2c8c8>
   3dcc8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3dccc:	cmp	r0, #0
   3dcd0:	bge	3dd30 <__assert_fail@plt+0x2c89c>
   3dcd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3dcd8:	cmn	r0, #1
   3dcdc:	bne	3dd14 <__assert_fail@plt+0x2c880>
   3dce0:	b	3dce4 <__assert_fail@plt+0x2c850>
   3dce4:	ldr	r0, [fp, #8]
   3dce8:	add	r0, r0, #-2147483648	; 0x80000000
   3dcec:	movw	r1, #0
   3dcf0:	cmp	r1, r0
   3dcf4:	blt	3dd48 <__assert_fail@plt+0x2c8b4>
   3dcf8:	b	3dd5c <__assert_fail@plt+0x2c8c8>
   3dcfc:	ldr	r0, [pc, #748]	; 3dff0 <__assert_fail@plt+0x2cb5c>
   3dd00:	ldr	r1, [fp, #8]
   3dd04:	sub	r1, r1, #1
   3dd08:	cmp	r0, r1
   3dd0c:	blt	3dd48 <__assert_fail@plt+0x2c8b4>
   3dd10:	b	3dd5c <__assert_fail@plt+0x2c8c8>
   3dd14:	ldr	r0, [pc, #3016]	; 3e8e4 <__assert_fail@plt+0x2d450>
   3dd18:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3dd1c:	sdiv	r0, r0, r1
   3dd20:	ldr	r1, [fp, #8]
   3dd24:	cmp	r0, r1
   3dd28:	blt	3dd48 <__assert_fail@plt+0x2c8b4>
   3dd2c:	b	3dd5c <__assert_fail@plt+0x2c8c8>
   3dd30:	ldr	r0, [pc, #696]	; 3dff0 <__assert_fail@plt+0x2cb5c>
   3dd34:	ldr	r1, [fp, #8]
   3dd38:	sdiv	r0, r0, r1
   3dd3c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3dd40:	cmp	r0, r1
   3dd44:	bge	3dd5c <__assert_fail@plt+0x2c8c8>
   3dd48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3dd4c:	ldr	r1, [fp, #8]
   3dd50:	mul	r0, r0, r1
   3dd54:	str	r0, [fp, #-28]	; 0xffffffe4
   3dd58:	b	3e43c <__assert_fail@plt+0x2cfa8>
   3dd5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3dd60:	ldr	r1, [fp, #8]
   3dd64:	mul	r0, r0, r1
   3dd68:	str	r0, [fp, #-28]	; 0xffffffe4
   3dd6c:	b	3e44c <__assert_fail@plt+0x2cfb8>
   3dd70:	ldr	r0, [fp, #8]
   3dd74:	cmp	r0, #0
   3dd78:	bge	3de88 <__assert_fail@plt+0x2c9f4>
   3dd7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3dd80:	cmp	r0, #0
   3dd84:	bge	3de10 <__assert_fail@plt+0x2c97c>
   3dd88:	b	3dda8 <__assert_fail@plt+0x2c914>
   3dd8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3dd90:	ldr	r1, [fp, #8]
   3dd94:	mvn	r2, #0
   3dd98:	udiv	r1, r2, r1
   3dd9c:	cmp	r0, r1
   3dda0:	bcc	3df24 <__assert_fail@plt+0x2ca90>
   3dda4:	b	3df38 <__assert_fail@plt+0x2caa4>
   3dda8:	b	3ddac <__assert_fail@plt+0x2c918>
   3ddac:	ldr	r0, [pc, #720]	; 3e084 <__assert_fail@plt+0x2cbf0>
   3ddb0:	ldr	r1, [fp, #8]
   3ddb4:	cmp	r1, r0
   3ddb8:	blt	3ddd0 <__assert_fail@plt+0x2c93c>
   3ddbc:	b	3dddc <__assert_fail@plt+0x2c948>
   3ddc0:	ldr	r0, [fp, #8]
   3ddc4:	movw	r1, #0
   3ddc8:	cmp	r1, r0
   3ddcc:	bge	3dddc <__assert_fail@plt+0x2c948>
   3ddd0:	movw	r0, #1
   3ddd4:	str	r0, [fp, #-68]	; 0xffffffbc
   3ddd8:	b	3ddf4 <__assert_fail@plt+0x2c960>
   3dddc:	ldr	r0, [fp, #8]
   3dde0:	movw	r1, #0
   3dde4:	sub	r0, r1, r0
   3dde8:	mvn	r1, #0
   3ddec:	udiv	r0, r1, r0
   3ddf0:	str	r0, [fp, #-68]	; 0xffffffbc
   3ddf4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   3ddf8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3ddfc:	mvn	r2, #0
   3de00:	sub	r1, r2, r1
   3de04:	cmp	r0, r1
   3de08:	bls	3df24 <__assert_fail@plt+0x2ca90>
   3de0c:	b	3df38 <__assert_fail@plt+0x2caa4>
   3de10:	b	3de14 <__assert_fail@plt+0x2c980>
   3de14:	b	3de6c <__assert_fail@plt+0x2c9d8>
   3de18:	b	3de6c <__assert_fail@plt+0x2c9d8>
   3de1c:	ldr	r0, [fp, #8]
   3de20:	cmn	r0, #1
   3de24:	bne	3de6c <__assert_fail@plt+0x2c9d8>
   3de28:	b	3de2c <__assert_fail@plt+0x2c998>
   3de2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3de30:	add	r0, r0, #0
   3de34:	movw	r1, #0
   3de38:	cmp	r1, r0
   3de3c:	blt	3df24 <__assert_fail@plt+0x2ca90>
   3de40:	b	3df38 <__assert_fail@plt+0x2caa4>
   3de44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3de48:	movw	r1, #0
   3de4c:	cmp	r1, r0
   3de50:	bge	3df38 <__assert_fail@plt+0x2caa4>
   3de54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3de58:	sub	r0, r0, #1
   3de5c:	mvn	r1, #0
   3de60:	cmp	r1, r0
   3de64:	blt	3df24 <__assert_fail@plt+0x2ca90>
   3de68:	b	3df38 <__assert_fail@plt+0x2caa4>
   3de6c:	ldr	r0, [fp, #8]
   3de70:	movw	r1, #0
   3de74:	sdiv	r0, r1, r0
   3de78:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3de7c:	cmp	r0, r1
   3de80:	blt	3df24 <__assert_fail@plt+0x2ca90>
   3de84:	b	3df38 <__assert_fail@plt+0x2caa4>
   3de88:	ldr	r0, [fp, #8]
   3de8c:	cmp	r0, #0
   3de90:	bne	3de98 <__assert_fail@plt+0x2ca04>
   3de94:	b	3df38 <__assert_fail@plt+0x2caa4>
   3de98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3de9c:	cmp	r0, #0
   3dea0:	bge	3df0c <__assert_fail@plt+0x2ca78>
   3dea4:	b	3dea8 <__assert_fail@plt+0x2ca14>
   3dea8:	b	3def0 <__assert_fail@plt+0x2ca5c>
   3deac:	b	3def0 <__assert_fail@plt+0x2ca5c>
   3deb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3deb4:	cmn	r0, #1
   3deb8:	bne	3def0 <__assert_fail@plt+0x2ca5c>
   3debc:	b	3dec0 <__assert_fail@plt+0x2ca2c>
   3dec0:	ldr	r0, [fp, #8]
   3dec4:	add	r0, r0, #0
   3dec8:	movw	r1, #0
   3decc:	cmp	r1, r0
   3ded0:	blt	3df24 <__assert_fail@plt+0x2ca90>
   3ded4:	b	3df38 <__assert_fail@plt+0x2caa4>
   3ded8:	ldr	r0, [fp, #8]
   3dedc:	sub	r0, r0, #1
   3dee0:	mvn	r1, #0
   3dee4:	cmp	r1, r0
   3dee8:	blt	3df24 <__assert_fail@plt+0x2ca90>
   3deec:	b	3df38 <__assert_fail@plt+0x2caa4>
   3def0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3def4:	movw	r1, #0
   3def8:	sdiv	r0, r1, r0
   3defc:	ldr	r1, [fp, #8]
   3df00:	cmp	r0, r1
   3df04:	blt	3df24 <__assert_fail@plt+0x2ca90>
   3df08:	b	3df38 <__assert_fail@plt+0x2caa4>
   3df0c:	ldr	r0, [fp, #8]
   3df10:	mvn	r1, #0
   3df14:	udiv	r0, r1, r0
   3df18:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3df1c:	cmp	r0, r1
   3df20:	bcs	3df38 <__assert_fail@plt+0x2caa4>
   3df24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3df28:	ldr	r1, [fp, #8]
   3df2c:	mul	r0, r0, r1
   3df30:	str	r0, [fp, #-28]	; 0xffffffe4
   3df34:	b	3e43c <__assert_fail@plt+0x2cfa8>
   3df38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3df3c:	ldr	r1, [fp, #8]
   3df40:	mul	r0, r0, r1
   3df44:	str	r0, [fp, #-28]	; 0xffffffe4
   3df48:	b	3e44c <__assert_fail@plt+0x2cfb8>
   3df4c:	b	3df50 <__assert_fail@plt+0x2cabc>
   3df50:	ldr	r0, [fp, #8]
   3df54:	cmp	r0, #0
   3df58:	bge	3e0e8 <__assert_fail@plt+0x2cc54>
   3df5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3df60:	cmp	r0, #0
   3df64:	bge	3e050 <__assert_fail@plt+0x2cbbc>
   3df68:	b	3df6c <__assert_fail@plt+0x2cad8>
   3df6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3df70:	ldr	r1, [fp, #8]
   3df74:	asr	r3, r1, #31
   3df78:	mvn	r2, #0
   3df7c:	mvn	ip, #-2147483648	; 0x80000000
   3df80:	str	r0, [fp, #-72]	; 0xffffffb8
   3df84:	mov	r0, r2
   3df88:	str	r1, [fp, #-76]	; 0xffffffb4
   3df8c:	mov	r1, ip
   3df90:	ldr	r2, [fp, #-76]	; 0xffffffb4
   3df94:	bl	435b4 <__assert_fail@plt+0x32120>
   3df98:	ldr	r2, [fp, #-72]	; 0xffffffb8
   3df9c:	subs	r0, r2, r0
   3dfa0:	rscs	r1, r1, r2, asr #31
   3dfa4:	str	r0, [fp, #-80]	; 0xffffffb0
   3dfa8:	str	r1, [fp, #-84]	; 0xffffffac
   3dfac:	blt	3e1c8 <__assert_fail@plt+0x2cd34>
   3dfb0:	b	3e1dc <__assert_fail@plt+0x2cd48>
   3dfb4:	b	3dfb8 <__assert_fail@plt+0x2cb24>
   3dfb8:	ldr	r0, [pc, #196]	; 3e084 <__assert_fail@plt+0x2cbf0>
   3dfbc:	ldr	r1, [fp, #8]
   3dfc0:	cmp	r1, r0
   3dfc4:	blt	3dfdc <__assert_fail@plt+0x2cb48>
   3dfc8:	b	3dff4 <__assert_fail@plt+0x2cb60>
   3dfcc:	ldr	r0, [fp, #8]
   3dfd0:	movw	r1, #0
   3dfd4:	cmp	r1, r0
   3dfd8:	bge	3dff4 <__assert_fail@plt+0x2cb60>
   3dfdc:	mov	r0, #0
   3dfe0:	mvn	r1, #0
   3dfe4:	str	r1, [fp, #-88]	; 0xffffffa8
   3dfe8:	str	r0, [fp, #-92]	; 0xffffffa4
   3dfec:	b	3e028 <__assert_fail@plt+0x2cb94>
   3dff0:	svcvc	0x00ffffff
   3dff4:	ldr	r0, [fp, #8]
   3dff8:	rsb	r0, r0, #0
   3dffc:	asr	r3, r0, #31
   3e000:	mvn	r1, #0
   3e004:	mvn	r2, #-2147483648	; 0x80000000
   3e008:	str	r0, [fp, #-96]	; 0xffffffa0
   3e00c:	mov	r0, r1
   3e010:	mov	r1, r2
   3e014:	ldr	r2, [fp, #-96]	; 0xffffffa0
   3e018:	bl	435b4 <__assert_fail@plt+0x32120>
   3e01c:	str	r0, [fp, #-88]	; 0xffffffa8
   3e020:	str	r1, [fp, #-92]	; 0xffffffa4
   3e024:	b	3e028 <__assert_fail@plt+0x2cb94>
   3e028:	ldr	r0, [fp, #-92]	; 0xffffffa4
   3e02c:	ldr	r1, [fp, #-88]	; 0xffffffa8
   3e030:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3e034:	mvn	r2, r2
   3e038:	subs	r1, r2, r1
   3e03c:	rscs	r0, r0, r2, asr #31
   3e040:	str	r1, [fp, #-100]	; 0xffffff9c
   3e044:	str	r0, [fp, #-104]	; 0xffffff98
   3e048:	bge	3e1c8 <__assert_fail@plt+0x2cd34>
   3e04c:	b	3e1dc <__assert_fail@plt+0x2cd48>
   3e050:	ldr	r0, [fp, #8]
   3e054:	cmn	r0, #1
   3e058:	bne	3e0a8 <__assert_fail@plt+0x2cc14>
   3e05c:	b	3e060 <__assert_fail@plt+0x2cbcc>
   3e060:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e064:	mov	r1, #-2147483648	; 0x80000000
   3e068:	add	r1, r1, r0, asr #31
   3e06c:	rsbs	r0, r0, #0
   3e070:	rscs	r1, r1, #0
   3e074:	str	r0, [fp, #-108]	; 0xffffff94
   3e078:	str	r1, [fp, #-112]	; 0xffffff90
   3e07c:	blt	3e1c8 <__assert_fail@plt+0x2cd34>
   3e080:	b	3e1dc <__assert_fail@plt+0x2cd48>
   3e084:	andhi	r0, r0, r1
   3e088:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e08c:	movw	r1, #0
   3e090:	cmp	r1, r0
   3e094:	bge	3e1dc <__assert_fail@plt+0x2cd48>
   3e098:	mov	r0, #0
   3e09c:	cmp	r0, #0
   3e0a0:	bne	3e1c8 <__assert_fail@plt+0x2cd34>
   3e0a4:	b	3e1dc <__assert_fail@plt+0x2cd48>
   3e0a8:	ldr	r0, [fp, #8]
   3e0ac:	asr	r3, r0, #31
   3e0b0:	mov	r1, #0
   3e0b4:	mov	r2, #-2147483648	; 0x80000000
   3e0b8:	str	r0, [fp, #-116]	; 0xffffff8c
   3e0bc:	mov	r0, r1
   3e0c0:	mov	r1, r2
   3e0c4:	ldr	r2, [fp, #-116]	; 0xffffff8c
   3e0c8:	bl	435b4 <__assert_fail@plt+0x32120>
   3e0cc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3e0d0:	subs	r0, r0, r2
   3e0d4:	sbcs	r1, r1, r2, asr #31
   3e0d8:	str	r0, [fp, #-120]	; 0xffffff88
   3e0dc:	str	r1, [fp, #-124]	; 0xffffff84
   3e0e0:	blt	3e1c8 <__assert_fail@plt+0x2cd34>
   3e0e4:	b	3e1dc <__assert_fail@plt+0x2cd48>
   3e0e8:	ldr	r0, [fp, #8]
   3e0ec:	cmp	r0, #0
   3e0f0:	bne	3e0f8 <__assert_fail@plt+0x2cc64>
   3e0f4:	b	3e1dc <__assert_fail@plt+0x2cd48>
   3e0f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e0fc:	cmp	r0, #0
   3e100:	bge	3e188 <__assert_fail@plt+0x2ccf4>
   3e104:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e108:	cmn	r0, #1
   3e10c:	bne	3e148 <__assert_fail@plt+0x2ccb4>
   3e110:	b	3e114 <__assert_fail@plt+0x2cc80>
   3e114:	ldr	r0, [fp, #8]
   3e118:	mov	r1, #-2147483648	; 0x80000000
   3e11c:	add	r1, r1, r0, asr #31
   3e120:	rsbs	r0, r0, #0
   3e124:	rscs	r1, r1, #0
   3e128:	str	r0, [fp, #-128]	; 0xffffff80
   3e12c:	str	r1, [fp, #-132]	; 0xffffff7c
   3e130:	blt	3e1c8 <__assert_fail@plt+0x2cd34>
   3e134:	b	3e1dc <__assert_fail@plt+0x2cd48>
   3e138:	mov	r0, #0
   3e13c:	cmp	r0, #0
   3e140:	bne	3e1c8 <__assert_fail@plt+0x2cd34>
   3e144:	b	3e1dc <__assert_fail@plt+0x2cd48>
   3e148:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e14c:	asr	r3, r0, #31
   3e150:	mov	r1, #0
   3e154:	mov	r2, #-2147483648	; 0x80000000
   3e158:	str	r0, [fp, #-136]	; 0xffffff78
   3e15c:	mov	r0, r1
   3e160:	mov	r1, r2
   3e164:	ldr	r2, [fp, #-136]	; 0xffffff78
   3e168:	bl	435b4 <__assert_fail@plt+0x32120>
   3e16c:	ldr	r2, [fp, #8]
   3e170:	subs	r0, r0, r2
   3e174:	sbcs	r1, r1, r2, asr #31
   3e178:	str	r0, [fp, #-140]	; 0xffffff74
   3e17c:	str	r1, [fp, #-144]	; 0xffffff70
   3e180:	blt	3e1c8 <__assert_fail@plt+0x2cd34>
   3e184:	b	3e1dc <__assert_fail@plt+0x2cd48>
   3e188:	ldr	r0, [fp, #8]
   3e18c:	asr	r3, r0, #31
   3e190:	mvn	r1, #0
   3e194:	mvn	r2, #-2147483648	; 0x80000000
   3e198:	str	r0, [fp, #-148]	; 0xffffff6c
   3e19c:	mov	r0, r1
   3e1a0:	mov	r1, r2
   3e1a4:	ldr	r2, [fp, #-148]	; 0xffffff6c
   3e1a8:	bl	435b4 <__assert_fail@plt+0x32120>
   3e1ac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3e1b0:	subs	r0, r0, r2
   3e1b4:	sbcs	r1, r1, r2, asr #31
   3e1b8:	str	r0, [fp, #-152]	; 0xffffff68
   3e1bc:	str	r1, [fp, #-156]	; 0xffffff64
   3e1c0:	bge	3e1dc <__assert_fail@plt+0x2cd48>
   3e1c4:	b	3e1c8 <__assert_fail@plt+0x2cd34>
   3e1c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e1cc:	ldr	r1, [fp, #8]
   3e1d0:	mul	r0, r0, r1
   3e1d4:	str	r0, [fp, #-28]	; 0xffffffe4
   3e1d8:	b	3e43c <__assert_fail@plt+0x2cfa8>
   3e1dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e1e0:	ldr	r1, [fp, #8]
   3e1e4:	mul	r0, r0, r1
   3e1e8:	str	r0, [fp, #-28]	; 0xffffffe4
   3e1ec:	b	3e44c <__assert_fail@plt+0x2cfb8>
   3e1f0:	ldr	r0, [fp, #8]
   3e1f4:	cmp	r0, #0
   3e1f8:	bge	3e358 <__assert_fail@plt+0x2cec4>
   3e1fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e200:	cmp	r0, #0
   3e204:	bge	3e2e0 <__assert_fail@plt+0x2ce4c>
   3e208:	b	3e250 <__assert_fail@plt+0x2cdbc>
   3e20c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e210:	ldr	r1, [fp, #8]
   3e214:	asr	r3, r1, #31
   3e218:	mvn	r2, #0
   3e21c:	str	r0, [fp, #-160]	; 0xffffff60
   3e220:	mov	r0, r2
   3e224:	str	r1, [fp, #-164]	; 0xffffff5c
   3e228:	mov	r1, r2
   3e22c:	ldr	r2, [fp, #-164]	; 0xffffff5c
   3e230:	bl	43688 <__assert_fail@plt+0x321f4>
   3e234:	ldr	r2, [fp, #-160]	; 0xffffff60
   3e238:	subs	r0, r2, r0
   3e23c:	rscs	r1, r1, r2, asr #31
   3e240:	str	r0, [fp, #-168]	; 0xffffff58
   3e244:	str	r1, [fp, #-172]	; 0xffffff54
   3e248:	bcc	3e414 <__assert_fail@plt+0x2cf80>
   3e24c:	b	3e428 <__assert_fail@plt+0x2cf94>
   3e250:	b	3e254 <__assert_fail@plt+0x2cdc0>
   3e254:	ldr	r0, [pc, #-472]	; 3e084 <__assert_fail@plt+0x2cbf0>
   3e258:	ldr	r1, [fp, #8]
   3e25c:	cmp	r1, r0
   3e260:	blt	3e278 <__assert_fail@plt+0x2cde4>
   3e264:	b	3e28c <__assert_fail@plt+0x2cdf8>
   3e268:	ldr	r0, [fp, #8]
   3e26c:	movw	r1, #0
   3e270:	cmp	r1, r0
   3e274:	bge	3e28c <__assert_fail@plt+0x2cdf8>
   3e278:	mov	r0, #1
   3e27c:	mvn	r1, #0
   3e280:	str	r1, [fp, #-176]	; 0xffffff50
   3e284:	str	r0, [fp, #-180]	; 0xffffff4c
   3e288:	b	3e2b8 <__assert_fail@plt+0x2ce24>
   3e28c:	ldr	r0, [fp, #8]
   3e290:	rsb	r0, r0, #0
   3e294:	asr	r3, r0, #31
   3e298:	mvn	r1, #0
   3e29c:	str	r0, [fp, #-184]	; 0xffffff48
   3e2a0:	mov	r0, r1
   3e2a4:	ldr	r2, [fp, #-184]	; 0xffffff48
   3e2a8:	bl	43688 <__assert_fail@plt+0x321f4>
   3e2ac:	str	r0, [fp, #-176]	; 0xffffff50
   3e2b0:	str	r1, [fp, #-180]	; 0xffffff4c
   3e2b4:	b	3e2b8 <__assert_fail@plt+0x2ce24>
   3e2b8:	ldr	r0, [fp, #-180]	; 0xffffff4c
   3e2bc:	ldr	r1, [fp, #-176]	; 0xffffff50
   3e2c0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3e2c4:	mvn	r2, r2
   3e2c8:	subs	r1, r2, r1
   3e2cc:	rscs	r0, r0, r2, asr #31
   3e2d0:	str	r1, [sp, #188]	; 0xbc
   3e2d4:	str	r0, [sp, #184]	; 0xb8
   3e2d8:	bcs	3e414 <__assert_fail@plt+0x2cf80>
   3e2dc:	b	3e428 <__assert_fail@plt+0x2cf94>
   3e2e0:	b	3e2e4 <__assert_fail@plt+0x2ce50>
   3e2e4:	b	3e33c <__assert_fail@plt+0x2cea8>
   3e2e8:	b	3e33c <__assert_fail@plt+0x2cea8>
   3e2ec:	ldr	r0, [fp, #8]
   3e2f0:	cmn	r0, #1
   3e2f4:	bne	3e33c <__assert_fail@plt+0x2cea8>
   3e2f8:	b	3e2fc <__assert_fail@plt+0x2ce68>
   3e2fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e300:	add	r0, r0, #0
   3e304:	movw	r1, #0
   3e308:	cmp	r1, r0
   3e30c:	blt	3e414 <__assert_fail@plt+0x2cf80>
   3e310:	b	3e428 <__assert_fail@plt+0x2cf94>
   3e314:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e318:	movw	r1, #0
   3e31c:	cmp	r1, r0
   3e320:	bge	3e428 <__assert_fail@plt+0x2cf94>
   3e324:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e328:	sub	r0, r0, #1
   3e32c:	mvn	r1, #0
   3e330:	cmp	r1, r0
   3e334:	blt	3e414 <__assert_fail@plt+0x2cf80>
   3e338:	b	3e428 <__assert_fail@plt+0x2cf94>
   3e33c:	ldr	r0, [fp, #8]
   3e340:	movw	r1, #0
   3e344:	sdiv	r0, r1, r0
   3e348:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3e34c:	cmp	r0, r1
   3e350:	blt	3e414 <__assert_fail@plt+0x2cf80>
   3e354:	b	3e428 <__assert_fail@plt+0x2cf94>
   3e358:	ldr	r0, [fp, #8]
   3e35c:	cmp	r0, #0
   3e360:	bne	3e368 <__assert_fail@plt+0x2ced4>
   3e364:	b	3e428 <__assert_fail@plt+0x2cf94>
   3e368:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e36c:	cmp	r0, #0
   3e370:	bge	3e3dc <__assert_fail@plt+0x2cf48>
   3e374:	b	3e378 <__assert_fail@plt+0x2cee4>
   3e378:	b	3e3c0 <__assert_fail@plt+0x2cf2c>
   3e37c:	b	3e3c0 <__assert_fail@plt+0x2cf2c>
   3e380:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e384:	cmn	r0, #1
   3e388:	bne	3e3c0 <__assert_fail@plt+0x2cf2c>
   3e38c:	b	3e390 <__assert_fail@plt+0x2cefc>
   3e390:	ldr	r0, [fp, #8]
   3e394:	add	r0, r0, #0
   3e398:	movw	r1, #0
   3e39c:	cmp	r1, r0
   3e3a0:	blt	3e414 <__assert_fail@plt+0x2cf80>
   3e3a4:	b	3e428 <__assert_fail@plt+0x2cf94>
   3e3a8:	ldr	r0, [fp, #8]
   3e3ac:	sub	r0, r0, #1
   3e3b0:	mvn	r1, #0
   3e3b4:	cmp	r1, r0
   3e3b8:	blt	3e414 <__assert_fail@plt+0x2cf80>
   3e3bc:	b	3e428 <__assert_fail@plt+0x2cf94>
   3e3c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e3c4:	movw	r1, #0
   3e3c8:	sdiv	r0, r1, r0
   3e3cc:	ldr	r1, [fp, #8]
   3e3d0:	cmp	r0, r1
   3e3d4:	blt	3e414 <__assert_fail@plt+0x2cf80>
   3e3d8:	b	3e428 <__assert_fail@plt+0x2cf94>
   3e3dc:	ldr	r0, [fp, #8]
   3e3e0:	asr	r3, r0, #31
   3e3e4:	mvn	r1, #0
   3e3e8:	str	r0, [sp, #180]	; 0xb4
   3e3ec:	mov	r0, r1
   3e3f0:	ldr	r2, [sp, #180]	; 0xb4
   3e3f4:	bl	43688 <__assert_fail@plt+0x321f4>
   3e3f8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3e3fc:	subs	r0, r0, r2
   3e400:	sbcs	r1, r1, r2, asr #31
   3e404:	str	r0, [sp, #176]	; 0xb0
   3e408:	str	r1, [sp, #172]	; 0xac
   3e40c:	bcs	3e428 <__assert_fail@plt+0x2cf94>
   3e410:	b	3e414 <__assert_fail@plt+0x2cf80>
   3e414:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e418:	ldr	r1, [fp, #8]
   3e41c:	mul	r0, r0, r1
   3e420:	str	r0, [fp, #-28]	; 0xffffffe4
   3e424:	b	3e43c <__assert_fail@plt+0x2cfa8>
   3e428:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e42c:	ldr	r1, [fp, #8]
   3e430:	mul	r0, r0, r1
   3e434:	str	r0, [fp, #-28]	; 0xffffffe4
   3e438:	b	3e44c <__assert_fail@plt+0x2cfb8>
   3e43c:	ldr	r0, [pc, #-1108]	; 3dff0 <__assert_fail@plt+0x2cb5c>
   3e440:	str	r0, [sp, #168]	; 0xa8
   3e444:	b	3e46c <__assert_fail@plt+0x2cfd8>
   3e448:			; <UNDEFINED> instruction: 0xffff8000
   3e44c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3e450:	cmp	r0, #64	; 0x40
   3e454:	movw	r0, #0
   3e458:	movlt	r0, #1
   3e45c:	tst	r0, #1
   3e460:	movw	r0, #64	; 0x40
   3e464:	moveq	r0, #0
   3e468:	str	r0, [sp, #168]	; 0xa8
   3e46c:	ldr	r0, [sp, #168]	; 0xa8
   3e470:	str	r0, [fp, #-32]	; 0xffffffe0
   3e474:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3e478:	cmp	r0, #0
   3e47c:	beq	3e4ac <__assert_fail@plt+0x2d018>
   3e480:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3e484:	ldr	r1, [fp, #8]
   3e488:	sdiv	r0, r0, r1
   3e48c:	str	r0, [fp, #-24]	; 0xffffffe8
   3e490:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3e494:	mov	r1, r0
   3e498:	ldr	r2, [fp, #8]
   3e49c:	sdiv	r3, r0, r2
   3e4a0:	mls	r0, r3, r2, r0
   3e4a4:	sub	r0, r1, r0
   3e4a8:	str	r0, [fp, #-28]	; 0xffffffe4
   3e4ac:	ldr	r0, [fp, #-4]
   3e4b0:	movw	r1, #0
   3e4b4:	cmp	r0, r1
   3e4b8:	bne	3e4c8 <__assert_fail@plt+0x2d034>
   3e4bc:	ldr	r0, [fp, #-8]
   3e4c0:	movw	r1, #0
   3e4c4:	str	r1, [r0]
   3e4c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e4cc:	ldr	r1, [fp, #-20]	; 0xffffffec
   3e4d0:	sub	r0, r0, r1
   3e4d4:	ldr	r1, [fp, #-12]
   3e4d8:	cmp	r0, r1
   3e4dc:	bge	3f914 <__assert_fail@plt+0x2e480>
   3e4e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   3e4e4:	ldr	r1, [fp, #-12]
   3e4e8:	add	r1, r0, r1
   3e4ec:	mov	r2, #1
   3e4f0:	cmp	r1, r0
   3e4f4:	movwvc	r2, #0
   3e4f8:	str	r1, [fp, #-24]	; 0xffffffe8
   3e4fc:	tst	r2, #1
   3e500:	bne	3f910 <__assert_fail@plt+0x2e47c>
   3e504:	ldr	r0, [fp, #-16]
   3e508:	movw	r1, #0
   3e50c:	cmp	r1, r0
   3e510:	bgt	3e524 <__assert_fail@plt+0x2d090>
   3e514:	ldr	r0, [fp, #-16]
   3e518:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3e51c:	cmp	r0, r1
   3e520:	blt	3f910 <__assert_fail@plt+0x2e47c>
   3e524:	b	3e900 <__assert_fail@plt+0x2d46c>
   3e528:	b	3e52c <__assert_fail@plt+0x2d098>
   3e52c:	ldr	r0, [fp, #8]
   3e530:	cmp	r0, #0
   3e534:	bge	3e648 <__assert_fail@plt+0x2d1b4>
   3e538:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e53c:	cmp	r0, #0
   3e540:	bge	3e5cc <__assert_fail@plt+0x2d138>
   3e544:	b	3e548 <__assert_fail@plt+0x2d0b4>
   3e548:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e54c:	ldr	r1, [fp, #8]
   3e550:	movw	r2, #127	; 0x7f
   3e554:	sdiv	r1, r2, r1
   3e558:	cmp	r0, r1
   3e55c:	blt	3e6e8 <__assert_fail@plt+0x2d254>
   3e560:	b	3e700 <__assert_fail@plt+0x2d26c>
   3e564:	b	3e568 <__assert_fail@plt+0x2d0d4>
   3e568:	ldr	r0, [pc, #-1260]	; 3e084 <__assert_fail@plt+0x2cbf0>
   3e56c:	ldr	r1, [fp, #8]
   3e570:	cmp	r1, r0
   3e574:	blt	3e58c <__assert_fail@plt+0x2d0f8>
   3e578:	b	3e598 <__assert_fail@plt+0x2d104>
   3e57c:	ldr	r0, [fp, #8]
   3e580:	movw	r1, #0
   3e584:	cmp	r1, r0
   3e588:	bge	3e598 <__assert_fail@plt+0x2d104>
   3e58c:	movw	r0, #0
   3e590:	str	r0, [sp, #164]	; 0xa4
   3e594:	b	3e5b0 <__assert_fail@plt+0x2d11c>
   3e598:	ldr	r0, [fp, #8]
   3e59c:	movw	r1, #0
   3e5a0:	sub	r0, r1, r0
   3e5a4:	movw	r1, #127	; 0x7f
   3e5a8:	sdiv	r0, r1, r0
   3e5ac:	str	r0, [sp, #164]	; 0xa4
   3e5b0:	ldr	r0, [sp, #164]	; 0xa4
   3e5b4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3e5b8:	mvn	r2, #0
   3e5bc:	sub	r1, r2, r1
   3e5c0:	cmp	r0, r1
   3e5c4:	ble	3e6e8 <__assert_fail@plt+0x2d254>
   3e5c8:	b	3e700 <__assert_fail@plt+0x2d26c>
   3e5cc:	b	3e5d0 <__assert_fail@plt+0x2d13c>
   3e5d0:	b	3e62c <__assert_fail@plt+0x2d198>
   3e5d4:	b	3e62c <__assert_fail@plt+0x2d198>
   3e5d8:	ldr	r0, [fp, #8]
   3e5dc:	cmn	r0, #1
   3e5e0:	bne	3e62c <__assert_fail@plt+0x2d198>
   3e5e4:	b	3e5e8 <__assert_fail@plt+0x2d154>
   3e5e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e5ec:	mvn	r1, #127	; 0x7f
   3e5f0:	add	r0, r0, r1
   3e5f4:	movw	r1, #0
   3e5f8:	cmp	r1, r0
   3e5fc:	blt	3e6e8 <__assert_fail@plt+0x2d254>
   3e600:	b	3e700 <__assert_fail@plt+0x2d26c>
   3e604:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e608:	movw	r1, #0
   3e60c:	cmp	r1, r0
   3e610:	bge	3e700 <__assert_fail@plt+0x2d26c>
   3e614:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e618:	sub	r0, r0, #1
   3e61c:	movw	r1, #127	; 0x7f
   3e620:	cmp	r1, r0
   3e624:	blt	3e6e8 <__assert_fail@plt+0x2d254>
   3e628:	b	3e700 <__assert_fail@plt+0x2d26c>
   3e62c:	ldr	r0, [fp, #8]
   3e630:	mvn	r1, #127	; 0x7f
   3e634:	sdiv	r0, r1, r0
   3e638:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3e63c:	cmp	r0, r1
   3e640:	blt	3e6e8 <__assert_fail@plt+0x2d254>
   3e644:	b	3e700 <__assert_fail@plt+0x2d26c>
   3e648:	ldr	r0, [fp, #8]
   3e64c:	cmp	r0, #0
   3e650:	bne	3e658 <__assert_fail@plt+0x2d1c4>
   3e654:	b	3e700 <__assert_fail@plt+0x2d26c>
   3e658:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e65c:	cmp	r0, #0
   3e660:	bge	3e6d0 <__assert_fail@plt+0x2d23c>
   3e664:	b	3e668 <__assert_fail@plt+0x2d1d4>
   3e668:	b	3e6b4 <__assert_fail@plt+0x2d220>
   3e66c:	b	3e6b4 <__assert_fail@plt+0x2d220>
   3e670:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e674:	cmn	r0, #1
   3e678:	bne	3e6b4 <__assert_fail@plt+0x2d220>
   3e67c:	b	3e680 <__assert_fail@plt+0x2d1ec>
   3e680:	ldr	r0, [fp, #8]
   3e684:	mvn	r1, #127	; 0x7f
   3e688:	add	r0, r0, r1
   3e68c:	movw	r1, #0
   3e690:	cmp	r1, r0
   3e694:	blt	3e6e8 <__assert_fail@plt+0x2d254>
   3e698:	b	3e700 <__assert_fail@plt+0x2d26c>
   3e69c:	ldr	r0, [fp, #8]
   3e6a0:	sub	r0, r0, #1
   3e6a4:	movw	r1, #127	; 0x7f
   3e6a8:	cmp	r1, r0
   3e6ac:	blt	3e6e8 <__assert_fail@plt+0x2d254>
   3e6b0:	b	3e700 <__assert_fail@plt+0x2d26c>
   3e6b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e6b8:	mvn	r1, #127	; 0x7f
   3e6bc:	sdiv	r0, r1, r0
   3e6c0:	ldr	r1, [fp, #8]
   3e6c4:	cmp	r0, r1
   3e6c8:	blt	3e6e8 <__assert_fail@plt+0x2d254>
   3e6cc:	b	3e700 <__assert_fail@plt+0x2d26c>
   3e6d0:	ldr	r0, [fp, #8]
   3e6d4:	movw	r1, #127	; 0x7f
   3e6d8:	sdiv	r0, r1, r0
   3e6dc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3e6e0:	cmp	r0, r1
   3e6e4:	bge	3e700 <__assert_fail@plt+0x2d26c>
   3e6e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e6ec:	ldr	r1, [fp, #8]
   3e6f0:	mul	r0, r0, r1
   3e6f4:	sxtb	r0, r0
   3e6f8:	str	r0, [fp, #-28]	; 0xffffffe4
   3e6fc:	b	3f910 <__assert_fail@plt+0x2e47c>
   3e700:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e704:	ldr	r1, [fp, #8]
   3e708:	mul	r0, r0, r1
   3e70c:	sxtb	r0, r0
   3e710:	str	r0, [fp, #-28]	; 0xffffffe4
   3e714:	b	3f914 <__assert_fail@plt+0x2e480>
   3e718:	ldr	r0, [fp, #8]
   3e71c:	cmp	r0, #0
   3e720:	bge	3e830 <__assert_fail@plt+0x2d39c>
   3e724:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e728:	cmp	r0, #0
   3e72c:	bge	3e7b8 <__assert_fail@plt+0x2d324>
   3e730:	b	3e734 <__assert_fail@plt+0x2d2a0>
   3e734:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e738:	ldr	r1, [fp, #8]
   3e73c:	movw	r2, #255	; 0xff
   3e740:	sdiv	r1, r2, r1
   3e744:	cmp	r0, r1
   3e748:	blt	3e8cc <__assert_fail@plt+0x2d438>
   3e74c:	b	3e8e8 <__assert_fail@plt+0x2d454>
   3e750:	b	3e754 <__assert_fail@plt+0x2d2c0>
   3e754:	ldr	r0, [pc, #-1752]	; 3e084 <__assert_fail@plt+0x2cbf0>
   3e758:	ldr	r1, [fp, #8]
   3e75c:	cmp	r1, r0
   3e760:	blt	3e778 <__assert_fail@plt+0x2d2e4>
   3e764:	b	3e784 <__assert_fail@plt+0x2d2f0>
   3e768:	ldr	r0, [fp, #8]
   3e76c:	movw	r1, #0
   3e770:	cmp	r1, r0
   3e774:	bge	3e784 <__assert_fail@plt+0x2d2f0>
   3e778:	movw	r0, #0
   3e77c:	str	r0, [sp, #160]	; 0xa0
   3e780:	b	3e79c <__assert_fail@plt+0x2d308>
   3e784:	ldr	r0, [fp, #8]
   3e788:	movw	r1, #0
   3e78c:	sub	r0, r1, r0
   3e790:	movw	r1, #255	; 0xff
   3e794:	sdiv	r0, r1, r0
   3e798:	str	r0, [sp, #160]	; 0xa0
   3e79c:	ldr	r0, [sp, #160]	; 0xa0
   3e7a0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3e7a4:	mvn	r2, #0
   3e7a8:	sub	r1, r2, r1
   3e7ac:	cmp	r0, r1
   3e7b0:	ble	3e8cc <__assert_fail@plt+0x2d438>
   3e7b4:	b	3e8e8 <__assert_fail@plt+0x2d454>
   3e7b8:	b	3e7bc <__assert_fail@plt+0x2d328>
   3e7bc:	b	3e814 <__assert_fail@plt+0x2d380>
   3e7c0:	b	3e814 <__assert_fail@plt+0x2d380>
   3e7c4:	ldr	r0, [fp, #8]
   3e7c8:	cmn	r0, #1
   3e7cc:	bne	3e814 <__assert_fail@plt+0x2d380>
   3e7d0:	b	3e7d4 <__assert_fail@plt+0x2d340>
   3e7d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e7d8:	add	r0, r0, #0
   3e7dc:	movw	r1, #0
   3e7e0:	cmp	r1, r0
   3e7e4:	blt	3e8cc <__assert_fail@plt+0x2d438>
   3e7e8:	b	3e8e8 <__assert_fail@plt+0x2d454>
   3e7ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e7f0:	movw	r1, #0
   3e7f4:	cmp	r1, r0
   3e7f8:	bge	3e8e8 <__assert_fail@plt+0x2d454>
   3e7fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e800:	sub	r0, r0, #1
   3e804:	mvn	r1, #0
   3e808:	cmp	r1, r0
   3e80c:	blt	3e8cc <__assert_fail@plt+0x2d438>
   3e810:	b	3e8e8 <__assert_fail@plt+0x2d454>
   3e814:	ldr	r0, [fp, #8]
   3e818:	movw	r1, #0
   3e81c:	sdiv	r0, r1, r0
   3e820:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3e824:	cmp	r0, r1
   3e828:	blt	3e8cc <__assert_fail@plt+0x2d438>
   3e82c:	b	3e8e8 <__assert_fail@plt+0x2d454>
   3e830:	ldr	r0, [fp, #8]
   3e834:	cmp	r0, #0
   3e838:	bne	3e840 <__assert_fail@plt+0x2d3ac>
   3e83c:	b	3e8e8 <__assert_fail@plt+0x2d454>
   3e840:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e844:	cmp	r0, #0
   3e848:	bge	3e8b4 <__assert_fail@plt+0x2d420>
   3e84c:	b	3e850 <__assert_fail@plt+0x2d3bc>
   3e850:	b	3e898 <__assert_fail@plt+0x2d404>
   3e854:	b	3e898 <__assert_fail@plt+0x2d404>
   3e858:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e85c:	cmn	r0, #1
   3e860:	bne	3e898 <__assert_fail@plt+0x2d404>
   3e864:	b	3e868 <__assert_fail@plt+0x2d3d4>
   3e868:	ldr	r0, [fp, #8]
   3e86c:	add	r0, r0, #0
   3e870:	movw	r1, #0
   3e874:	cmp	r1, r0
   3e878:	blt	3e8cc <__assert_fail@plt+0x2d438>
   3e87c:	b	3e8e8 <__assert_fail@plt+0x2d454>
   3e880:	ldr	r0, [fp, #8]
   3e884:	sub	r0, r0, #1
   3e888:	mvn	r1, #0
   3e88c:	cmp	r1, r0
   3e890:	blt	3e8cc <__assert_fail@plt+0x2d438>
   3e894:	b	3e8e8 <__assert_fail@plt+0x2d454>
   3e898:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e89c:	movw	r1, #0
   3e8a0:	sdiv	r0, r1, r0
   3e8a4:	ldr	r1, [fp, #8]
   3e8a8:	cmp	r0, r1
   3e8ac:	blt	3e8cc <__assert_fail@plt+0x2d438>
   3e8b0:	b	3e8e8 <__assert_fail@plt+0x2d454>
   3e8b4:	ldr	r0, [fp, #8]
   3e8b8:	movw	r1, #255	; 0xff
   3e8bc:	sdiv	r0, r1, r0
   3e8c0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3e8c4:	cmp	r0, r1
   3e8c8:	bge	3e8e8 <__assert_fail@plt+0x2d454>
   3e8cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e8d0:	ldr	r1, [fp, #8]
   3e8d4:	mul	r0, r0, r1
   3e8d8:	and	r0, r0, #255	; 0xff
   3e8dc:	str	r0, [fp, #-28]	; 0xffffffe4
   3e8e0:	b	3f910 <__assert_fail@plt+0x2e47c>
   3e8e4:	andhi	r0, r0, r0
   3e8e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e8ec:	ldr	r1, [fp, #8]
   3e8f0:	mul	r0, r0, r1
   3e8f4:	and	r0, r0, #255	; 0xff
   3e8f8:	str	r0, [fp, #-28]	; 0xffffffe4
   3e8fc:	b	3f914 <__assert_fail@plt+0x2e480>
   3e900:	b	3ecd8 <__assert_fail@plt+0x2d844>
   3e904:	b	3e908 <__assert_fail@plt+0x2d474>
   3e908:	ldr	r0, [fp, #8]
   3e90c:	cmp	r0, #0
   3e910:	bge	3ea24 <__assert_fail@plt+0x2d590>
   3e914:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e918:	cmp	r0, #0
   3e91c:	bge	3e9a8 <__assert_fail@plt+0x2d514>
   3e920:	b	3e924 <__assert_fail@plt+0x2d490>
   3e924:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e928:	ldr	r1, [fp, #8]
   3e92c:	movw	r2, #32767	; 0x7fff
   3e930:	sdiv	r1, r2, r1
   3e934:	cmp	r0, r1
   3e938:	blt	3eac4 <__assert_fail@plt+0x2d630>
   3e93c:	b	3eadc <__assert_fail@plt+0x2d648>
   3e940:	b	3e944 <__assert_fail@plt+0x2d4b0>
   3e944:	ldr	r0, [pc, #4084]	; 3f940 <__assert_fail@plt+0x2e4ac>
   3e948:	ldr	r1, [fp, #8]
   3e94c:	cmp	r1, r0
   3e950:	blt	3e968 <__assert_fail@plt+0x2d4d4>
   3e954:	b	3e974 <__assert_fail@plt+0x2d4e0>
   3e958:	ldr	r0, [fp, #8]
   3e95c:	movw	r1, #0
   3e960:	cmp	r1, r0
   3e964:	bge	3e974 <__assert_fail@plt+0x2d4e0>
   3e968:	movw	r0, #0
   3e96c:	str	r0, [sp, #156]	; 0x9c
   3e970:	b	3e98c <__assert_fail@plt+0x2d4f8>
   3e974:	ldr	r0, [fp, #8]
   3e978:	movw	r1, #0
   3e97c:	sub	r0, r1, r0
   3e980:	movw	r1, #32767	; 0x7fff
   3e984:	sdiv	r0, r1, r0
   3e988:	str	r0, [sp, #156]	; 0x9c
   3e98c:	ldr	r0, [sp, #156]	; 0x9c
   3e990:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3e994:	mvn	r2, #0
   3e998:	sub	r1, r2, r1
   3e99c:	cmp	r0, r1
   3e9a0:	ble	3eac4 <__assert_fail@plt+0x2d630>
   3e9a4:	b	3eadc <__assert_fail@plt+0x2d648>
   3e9a8:	b	3e9ac <__assert_fail@plt+0x2d518>
   3e9ac:	b	3ea08 <__assert_fail@plt+0x2d574>
   3e9b0:	b	3ea08 <__assert_fail@plt+0x2d574>
   3e9b4:	ldr	r0, [fp, #8]
   3e9b8:	cmn	r0, #1
   3e9bc:	bne	3ea08 <__assert_fail@plt+0x2d574>
   3e9c0:	b	3e9c4 <__assert_fail@plt+0x2d530>
   3e9c4:	ldr	r0, [pc, #3964]	; 3f948 <__assert_fail@plt+0x2e4b4>
   3e9c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3e9cc:	add	r0, r1, r0
   3e9d0:	movw	r1, #0
   3e9d4:	cmp	r1, r0
   3e9d8:	blt	3eac4 <__assert_fail@plt+0x2d630>
   3e9dc:	b	3eadc <__assert_fail@plt+0x2d648>
   3e9e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e9e4:	movw	r1, #0
   3e9e8:	cmp	r1, r0
   3e9ec:	bge	3eadc <__assert_fail@plt+0x2d648>
   3e9f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e9f4:	sub	r0, r0, #1
   3e9f8:	movw	r1, #32767	; 0x7fff
   3e9fc:	cmp	r1, r0
   3ea00:	blt	3eac4 <__assert_fail@plt+0x2d630>
   3ea04:	b	3eadc <__assert_fail@plt+0x2d648>
   3ea08:	ldr	r0, [pc, #3896]	; 3f948 <__assert_fail@plt+0x2e4b4>
   3ea0c:	ldr	r1, [fp, #8]
   3ea10:	sdiv	r0, r0, r1
   3ea14:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3ea18:	cmp	r0, r1
   3ea1c:	blt	3eac4 <__assert_fail@plt+0x2d630>
   3ea20:	b	3eadc <__assert_fail@plt+0x2d648>
   3ea24:	ldr	r0, [fp, #8]
   3ea28:	cmp	r0, #0
   3ea2c:	bne	3ea34 <__assert_fail@plt+0x2d5a0>
   3ea30:	b	3eadc <__assert_fail@plt+0x2d648>
   3ea34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3ea38:	cmp	r0, #0
   3ea3c:	bge	3eaac <__assert_fail@plt+0x2d618>
   3ea40:	b	3ea44 <__assert_fail@plt+0x2d5b0>
   3ea44:	b	3ea90 <__assert_fail@plt+0x2d5fc>
   3ea48:	b	3ea90 <__assert_fail@plt+0x2d5fc>
   3ea4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3ea50:	cmn	r0, #1
   3ea54:	bne	3ea90 <__assert_fail@plt+0x2d5fc>
   3ea58:	b	3ea5c <__assert_fail@plt+0x2d5c8>
   3ea5c:	ldr	r0, [pc, #3812]	; 3f948 <__assert_fail@plt+0x2e4b4>
   3ea60:	ldr	r1, [fp, #8]
   3ea64:	add	r0, r1, r0
   3ea68:	movw	r1, #0
   3ea6c:	cmp	r1, r0
   3ea70:	blt	3eac4 <__assert_fail@plt+0x2d630>
   3ea74:	b	3eadc <__assert_fail@plt+0x2d648>
   3ea78:	ldr	r0, [fp, #8]
   3ea7c:	sub	r0, r0, #1
   3ea80:	movw	r1, #32767	; 0x7fff
   3ea84:	cmp	r1, r0
   3ea88:	blt	3eac4 <__assert_fail@plt+0x2d630>
   3ea8c:	b	3eadc <__assert_fail@plt+0x2d648>
   3ea90:	ldr	r0, [pc, #3760]	; 3f948 <__assert_fail@plt+0x2e4b4>
   3ea94:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3ea98:	sdiv	r0, r0, r1
   3ea9c:	ldr	r1, [fp, #8]
   3eaa0:	cmp	r0, r1
   3eaa4:	blt	3eac4 <__assert_fail@plt+0x2d630>
   3eaa8:	b	3eadc <__assert_fail@plt+0x2d648>
   3eaac:	ldr	r0, [fp, #8]
   3eab0:	movw	r1, #32767	; 0x7fff
   3eab4:	sdiv	r0, r1, r0
   3eab8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3eabc:	cmp	r0, r1
   3eac0:	bge	3eadc <__assert_fail@plt+0x2d648>
   3eac4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3eac8:	ldr	r1, [fp, #8]
   3eacc:	mul	r0, r0, r1
   3ead0:	sxth	r0, r0
   3ead4:	str	r0, [fp, #-28]	; 0xffffffe4
   3ead8:	b	3f910 <__assert_fail@plt+0x2e47c>
   3eadc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3eae0:	ldr	r1, [fp, #8]
   3eae4:	mul	r0, r0, r1
   3eae8:	sxth	r0, r0
   3eaec:	str	r0, [fp, #-28]	; 0xffffffe4
   3eaf0:	b	3f914 <__assert_fail@plt+0x2e480>
   3eaf4:	ldr	r0, [fp, #8]
   3eaf8:	cmp	r0, #0
   3eafc:	bge	3ec0c <__assert_fail@plt+0x2d778>
   3eb00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3eb04:	cmp	r0, #0
   3eb08:	bge	3eb94 <__assert_fail@plt+0x2d700>
   3eb0c:	b	3eb10 <__assert_fail@plt+0x2d67c>
   3eb10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3eb14:	ldr	r1, [fp, #8]
   3eb18:	movw	r2, #65535	; 0xffff
   3eb1c:	sdiv	r1, r2, r1
   3eb20:	cmp	r0, r1
   3eb24:	blt	3eca8 <__assert_fail@plt+0x2d814>
   3eb28:	b	3ecc0 <__assert_fail@plt+0x2d82c>
   3eb2c:	b	3eb30 <__assert_fail@plt+0x2d69c>
   3eb30:	ldr	r0, [pc, #3592]	; 3f940 <__assert_fail@plt+0x2e4ac>
   3eb34:	ldr	r1, [fp, #8]
   3eb38:	cmp	r1, r0
   3eb3c:	blt	3eb54 <__assert_fail@plt+0x2d6c0>
   3eb40:	b	3eb60 <__assert_fail@plt+0x2d6cc>
   3eb44:	ldr	r0, [fp, #8]
   3eb48:	movw	r1, #0
   3eb4c:	cmp	r1, r0
   3eb50:	bge	3eb60 <__assert_fail@plt+0x2d6cc>
   3eb54:	movw	r0, #0
   3eb58:	str	r0, [sp, #152]	; 0x98
   3eb5c:	b	3eb78 <__assert_fail@plt+0x2d6e4>
   3eb60:	ldr	r0, [fp, #8]
   3eb64:	movw	r1, #0
   3eb68:	sub	r0, r1, r0
   3eb6c:	movw	r1, #65535	; 0xffff
   3eb70:	sdiv	r0, r1, r0
   3eb74:	str	r0, [sp, #152]	; 0x98
   3eb78:	ldr	r0, [sp, #152]	; 0x98
   3eb7c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3eb80:	mvn	r2, #0
   3eb84:	sub	r1, r2, r1
   3eb88:	cmp	r0, r1
   3eb8c:	ble	3eca8 <__assert_fail@plt+0x2d814>
   3eb90:	b	3ecc0 <__assert_fail@plt+0x2d82c>
   3eb94:	b	3eb98 <__assert_fail@plt+0x2d704>
   3eb98:	b	3ebf0 <__assert_fail@plt+0x2d75c>
   3eb9c:	b	3ebf0 <__assert_fail@plt+0x2d75c>
   3eba0:	ldr	r0, [fp, #8]
   3eba4:	cmn	r0, #1
   3eba8:	bne	3ebf0 <__assert_fail@plt+0x2d75c>
   3ebac:	b	3ebb0 <__assert_fail@plt+0x2d71c>
   3ebb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3ebb4:	add	r0, r0, #0
   3ebb8:	movw	r1, #0
   3ebbc:	cmp	r1, r0
   3ebc0:	blt	3eca8 <__assert_fail@plt+0x2d814>
   3ebc4:	b	3ecc0 <__assert_fail@plt+0x2d82c>
   3ebc8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3ebcc:	movw	r1, #0
   3ebd0:	cmp	r1, r0
   3ebd4:	bge	3ecc0 <__assert_fail@plt+0x2d82c>
   3ebd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3ebdc:	sub	r0, r0, #1
   3ebe0:	mvn	r1, #0
   3ebe4:	cmp	r1, r0
   3ebe8:	blt	3eca8 <__assert_fail@plt+0x2d814>
   3ebec:	b	3ecc0 <__assert_fail@plt+0x2d82c>
   3ebf0:	ldr	r0, [fp, #8]
   3ebf4:	movw	r1, #0
   3ebf8:	sdiv	r0, r1, r0
   3ebfc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3ec00:	cmp	r0, r1
   3ec04:	blt	3eca8 <__assert_fail@plt+0x2d814>
   3ec08:	b	3ecc0 <__assert_fail@plt+0x2d82c>
   3ec0c:	ldr	r0, [fp, #8]
   3ec10:	cmp	r0, #0
   3ec14:	bne	3ec1c <__assert_fail@plt+0x2d788>
   3ec18:	b	3ecc0 <__assert_fail@plt+0x2d82c>
   3ec1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3ec20:	cmp	r0, #0
   3ec24:	bge	3ec90 <__assert_fail@plt+0x2d7fc>
   3ec28:	b	3ec2c <__assert_fail@plt+0x2d798>
   3ec2c:	b	3ec74 <__assert_fail@plt+0x2d7e0>
   3ec30:	b	3ec74 <__assert_fail@plt+0x2d7e0>
   3ec34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3ec38:	cmn	r0, #1
   3ec3c:	bne	3ec74 <__assert_fail@plt+0x2d7e0>
   3ec40:	b	3ec44 <__assert_fail@plt+0x2d7b0>
   3ec44:	ldr	r0, [fp, #8]
   3ec48:	add	r0, r0, #0
   3ec4c:	movw	r1, #0
   3ec50:	cmp	r1, r0
   3ec54:	blt	3eca8 <__assert_fail@plt+0x2d814>
   3ec58:	b	3ecc0 <__assert_fail@plt+0x2d82c>
   3ec5c:	ldr	r0, [fp, #8]
   3ec60:	sub	r0, r0, #1
   3ec64:	mvn	r1, #0
   3ec68:	cmp	r1, r0
   3ec6c:	blt	3eca8 <__assert_fail@plt+0x2d814>
   3ec70:	b	3ecc0 <__assert_fail@plt+0x2d82c>
   3ec74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3ec78:	movw	r1, #0
   3ec7c:	sdiv	r0, r1, r0
   3ec80:	ldr	r1, [fp, #8]
   3ec84:	cmp	r0, r1
   3ec88:	blt	3eca8 <__assert_fail@plt+0x2d814>
   3ec8c:	b	3ecc0 <__assert_fail@plt+0x2d82c>
   3ec90:	ldr	r0, [fp, #8]
   3ec94:	movw	r1, #65535	; 0xffff
   3ec98:	sdiv	r0, r1, r0
   3ec9c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3eca0:	cmp	r0, r1
   3eca4:	bge	3ecc0 <__assert_fail@plt+0x2d82c>
   3eca8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3ecac:	ldr	r1, [fp, #8]
   3ecb0:	mul	r0, r0, r1
   3ecb4:	uxth	r0, r0
   3ecb8:	str	r0, [fp, #-28]	; 0xffffffe4
   3ecbc:	b	3f910 <__assert_fail@plt+0x2e47c>
   3ecc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3ecc4:	ldr	r1, [fp, #8]
   3ecc8:	mul	r0, r0, r1
   3eccc:	uxth	r0, r0
   3ecd0:	str	r0, [fp, #-28]	; 0xffffffe4
   3ecd4:	b	3f914 <__assert_fail@plt+0x2e480>
   3ecd8:	b	3ecdc <__assert_fail@plt+0x2d848>
   3ecdc:	b	3ece0 <__assert_fail@plt+0x2d84c>
   3ece0:	ldr	r0, [fp, #8]
   3ece4:	cmp	r0, #0
   3ece8:	bge	3edec <__assert_fail@plt+0x2d958>
   3ecec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3ecf0:	cmp	r0, #0
   3ecf4:	bge	3ed80 <__assert_fail@plt+0x2d8ec>
   3ecf8:	b	3ecfc <__assert_fail@plt+0x2d868>
   3ecfc:	ldr	r0, [pc, #3128]	; 3f93c <__assert_fail@plt+0x2e4a8>
   3ed00:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3ed04:	ldr	r2, [fp, #8]
   3ed08:	sdiv	r0, r0, r2
   3ed0c:	cmp	r1, r0
   3ed10:	blt	3ee7c <__assert_fail@plt+0x2d9e8>
   3ed14:	b	3ee90 <__assert_fail@plt+0x2d9fc>
   3ed18:	b	3ed1c <__assert_fail@plt+0x2d888>
   3ed1c:	ldr	r0, [pc, #3100]	; 3f940 <__assert_fail@plt+0x2e4ac>
   3ed20:	ldr	r1, [fp, #8]
   3ed24:	cmp	r1, r0
   3ed28:	blt	3ed40 <__assert_fail@plt+0x2d8ac>
   3ed2c:	b	3ed4c <__assert_fail@plt+0x2d8b8>
   3ed30:	ldr	r0, [fp, #8]
   3ed34:	movw	r1, #0
   3ed38:	cmp	r1, r0
   3ed3c:	bge	3ed4c <__assert_fail@plt+0x2d8b8>
   3ed40:	movw	r0, #0
   3ed44:	str	r0, [sp, #148]	; 0x94
   3ed48:	b	3ed64 <__assert_fail@plt+0x2d8d0>
   3ed4c:	ldr	r0, [pc, #3048]	; 3f93c <__assert_fail@plt+0x2e4a8>
   3ed50:	ldr	r1, [fp, #8]
   3ed54:	movw	r2, #0
   3ed58:	sub	r1, r2, r1
   3ed5c:	sdiv	r0, r0, r1
   3ed60:	str	r0, [sp, #148]	; 0x94
   3ed64:	ldr	r0, [sp, #148]	; 0x94
   3ed68:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3ed6c:	mvn	r2, #0
   3ed70:	sub	r1, r2, r1
   3ed74:	cmp	r0, r1
   3ed78:	ble	3ee7c <__assert_fail@plt+0x2d9e8>
   3ed7c:	b	3ee90 <__assert_fail@plt+0x2d9fc>
   3ed80:	ldr	r0, [fp, #8]
   3ed84:	cmn	r0, #1
   3ed88:	bne	3edd0 <__assert_fail@plt+0x2d93c>
   3ed8c:	b	3ed90 <__assert_fail@plt+0x2d8fc>
   3ed90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3ed94:	add	r0, r0, #-2147483648	; 0x80000000
   3ed98:	movw	r1, #0
   3ed9c:	cmp	r1, r0
   3eda0:	blt	3ee7c <__assert_fail@plt+0x2d9e8>
   3eda4:	b	3ee90 <__assert_fail@plt+0x2d9fc>
   3eda8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3edac:	movw	r1, #0
   3edb0:	cmp	r1, r0
   3edb4:	bge	3ee90 <__assert_fail@plt+0x2d9fc>
   3edb8:	ldr	r0, [pc, #2940]	; 3f93c <__assert_fail@plt+0x2e4a8>
   3edbc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3edc0:	sub	r1, r1, #1
   3edc4:	cmp	r0, r1
   3edc8:	blt	3ee7c <__assert_fail@plt+0x2d9e8>
   3edcc:	b	3ee90 <__assert_fail@plt+0x2d9fc>
   3edd0:	ldr	r0, [pc, #2924]	; 3f944 <__assert_fail@plt+0x2e4b0>
   3edd4:	ldr	r1, [fp, #8]
   3edd8:	sdiv	r0, r0, r1
   3eddc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3ede0:	cmp	r0, r1
   3ede4:	blt	3ee7c <__assert_fail@plt+0x2d9e8>
   3ede8:	b	3ee90 <__assert_fail@plt+0x2d9fc>
   3edec:	ldr	r0, [fp, #8]
   3edf0:	cmp	r0, #0
   3edf4:	bne	3edfc <__assert_fail@plt+0x2d968>
   3edf8:	b	3ee90 <__assert_fail@plt+0x2d9fc>
   3edfc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3ee00:	cmp	r0, #0
   3ee04:	bge	3ee64 <__assert_fail@plt+0x2d9d0>
   3ee08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3ee0c:	cmn	r0, #1
   3ee10:	bne	3ee48 <__assert_fail@plt+0x2d9b4>
   3ee14:	b	3ee18 <__assert_fail@plt+0x2d984>
   3ee18:	ldr	r0, [fp, #8]
   3ee1c:	add	r0, r0, #-2147483648	; 0x80000000
   3ee20:	movw	r1, #0
   3ee24:	cmp	r1, r0
   3ee28:	blt	3ee7c <__assert_fail@plt+0x2d9e8>
   3ee2c:	b	3ee90 <__assert_fail@plt+0x2d9fc>
   3ee30:	ldr	r0, [pc, #2820]	; 3f93c <__assert_fail@plt+0x2e4a8>
   3ee34:	ldr	r1, [fp, #8]
   3ee38:	sub	r1, r1, #1
   3ee3c:	cmp	r0, r1
   3ee40:	blt	3ee7c <__assert_fail@plt+0x2d9e8>
   3ee44:	b	3ee90 <__assert_fail@plt+0x2d9fc>
   3ee48:	ldr	r0, [pc, #2804]	; 3f944 <__assert_fail@plt+0x2e4b0>
   3ee4c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3ee50:	sdiv	r0, r0, r1
   3ee54:	ldr	r1, [fp, #8]
   3ee58:	cmp	r0, r1
   3ee5c:	blt	3ee7c <__assert_fail@plt+0x2d9e8>
   3ee60:	b	3ee90 <__assert_fail@plt+0x2d9fc>
   3ee64:	ldr	r0, [pc, #2768]	; 3f93c <__assert_fail@plt+0x2e4a8>
   3ee68:	ldr	r1, [fp, #8]
   3ee6c:	sdiv	r0, r0, r1
   3ee70:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3ee74:	cmp	r0, r1
   3ee78:	bge	3ee90 <__assert_fail@plt+0x2d9fc>
   3ee7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3ee80:	ldr	r1, [fp, #8]
   3ee84:	mul	r0, r0, r1
   3ee88:	str	r0, [fp, #-28]	; 0xffffffe4
   3ee8c:	b	3f910 <__assert_fail@plt+0x2e47c>
   3ee90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3ee94:	ldr	r1, [fp, #8]
   3ee98:	mul	r0, r0, r1
   3ee9c:	str	r0, [fp, #-28]	; 0xffffffe4
   3eea0:	b	3f914 <__assert_fail@plt+0x2e480>
   3eea4:	ldr	r0, [fp, #8]
   3eea8:	cmp	r0, #0
   3eeac:	bge	3efbc <__assert_fail@plt+0x2db28>
   3eeb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3eeb4:	cmp	r0, #0
   3eeb8:	bge	3ef44 <__assert_fail@plt+0x2dab0>
   3eebc:	b	3eedc <__assert_fail@plt+0x2da48>
   3eec0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3eec4:	ldr	r1, [fp, #8]
   3eec8:	mvn	r2, #0
   3eecc:	udiv	r1, r2, r1
   3eed0:	cmp	r0, r1
   3eed4:	bcc	3f058 <__assert_fail@plt+0x2dbc4>
   3eed8:	b	3f06c <__assert_fail@plt+0x2dbd8>
   3eedc:	b	3eee0 <__assert_fail@plt+0x2da4c>
   3eee0:	ldr	r0, [pc, #2648]	; 3f940 <__assert_fail@plt+0x2e4ac>
   3eee4:	ldr	r1, [fp, #8]
   3eee8:	cmp	r1, r0
   3eeec:	blt	3ef04 <__assert_fail@plt+0x2da70>
   3eef0:	b	3ef10 <__assert_fail@plt+0x2da7c>
   3eef4:	ldr	r0, [fp, #8]
   3eef8:	movw	r1, #0
   3eefc:	cmp	r1, r0
   3ef00:	bge	3ef10 <__assert_fail@plt+0x2da7c>
   3ef04:	movw	r0, #1
   3ef08:	str	r0, [sp, #144]	; 0x90
   3ef0c:	b	3ef28 <__assert_fail@plt+0x2da94>
   3ef10:	ldr	r0, [fp, #8]
   3ef14:	movw	r1, #0
   3ef18:	sub	r0, r1, r0
   3ef1c:	mvn	r1, #0
   3ef20:	udiv	r0, r1, r0
   3ef24:	str	r0, [sp, #144]	; 0x90
   3ef28:	ldr	r0, [sp, #144]	; 0x90
   3ef2c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3ef30:	mvn	r2, #0
   3ef34:	sub	r1, r2, r1
   3ef38:	cmp	r0, r1
   3ef3c:	bls	3f058 <__assert_fail@plt+0x2dbc4>
   3ef40:	b	3f06c <__assert_fail@plt+0x2dbd8>
   3ef44:	b	3ef48 <__assert_fail@plt+0x2dab4>
   3ef48:	b	3efa0 <__assert_fail@plt+0x2db0c>
   3ef4c:	b	3efa0 <__assert_fail@plt+0x2db0c>
   3ef50:	ldr	r0, [fp, #8]
   3ef54:	cmn	r0, #1
   3ef58:	bne	3efa0 <__assert_fail@plt+0x2db0c>
   3ef5c:	b	3ef60 <__assert_fail@plt+0x2dacc>
   3ef60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3ef64:	add	r0, r0, #0
   3ef68:	movw	r1, #0
   3ef6c:	cmp	r1, r0
   3ef70:	blt	3f058 <__assert_fail@plt+0x2dbc4>
   3ef74:	b	3f06c <__assert_fail@plt+0x2dbd8>
   3ef78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3ef7c:	movw	r1, #0
   3ef80:	cmp	r1, r0
   3ef84:	bge	3f06c <__assert_fail@plt+0x2dbd8>
   3ef88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3ef8c:	sub	r0, r0, #1
   3ef90:	mvn	r1, #0
   3ef94:	cmp	r1, r0
   3ef98:	blt	3f058 <__assert_fail@plt+0x2dbc4>
   3ef9c:	b	3f06c <__assert_fail@plt+0x2dbd8>
   3efa0:	ldr	r0, [fp, #8]
   3efa4:	movw	r1, #0
   3efa8:	sdiv	r0, r1, r0
   3efac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3efb0:	cmp	r0, r1
   3efb4:	blt	3f058 <__assert_fail@plt+0x2dbc4>
   3efb8:	b	3f06c <__assert_fail@plt+0x2dbd8>
   3efbc:	ldr	r0, [fp, #8]
   3efc0:	cmp	r0, #0
   3efc4:	bne	3efcc <__assert_fail@plt+0x2db38>
   3efc8:	b	3f06c <__assert_fail@plt+0x2dbd8>
   3efcc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3efd0:	cmp	r0, #0
   3efd4:	bge	3f040 <__assert_fail@plt+0x2dbac>
   3efd8:	b	3efdc <__assert_fail@plt+0x2db48>
   3efdc:	b	3f024 <__assert_fail@plt+0x2db90>
   3efe0:	b	3f024 <__assert_fail@plt+0x2db90>
   3efe4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3efe8:	cmn	r0, #1
   3efec:	bne	3f024 <__assert_fail@plt+0x2db90>
   3eff0:	b	3eff4 <__assert_fail@plt+0x2db60>
   3eff4:	ldr	r0, [fp, #8]
   3eff8:	add	r0, r0, #0
   3effc:	movw	r1, #0
   3f000:	cmp	r1, r0
   3f004:	blt	3f058 <__assert_fail@plt+0x2dbc4>
   3f008:	b	3f06c <__assert_fail@plt+0x2dbd8>
   3f00c:	ldr	r0, [fp, #8]
   3f010:	sub	r0, r0, #1
   3f014:	mvn	r1, #0
   3f018:	cmp	r1, r0
   3f01c:	blt	3f058 <__assert_fail@plt+0x2dbc4>
   3f020:	b	3f06c <__assert_fail@plt+0x2dbd8>
   3f024:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3f028:	movw	r1, #0
   3f02c:	sdiv	r0, r1, r0
   3f030:	ldr	r1, [fp, #8]
   3f034:	cmp	r0, r1
   3f038:	blt	3f058 <__assert_fail@plt+0x2dbc4>
   3f03c:	b	3f06c <__assert_fail@plt+0x2dbd8>
   3f040:	ldr	r0, [fp, #8]
   3f044:	mvn	r1, #0
   3f048:	udiv	r0, r1, r0
   3f04c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3f050:	cmp	r0, r1
   3f054:	bcs	3f06c <__assert_fail@plt+0x2dbd8>
   3f058:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3f05c:	ldr	r1, [fp, #8]
   3f060:	mul	r0, r0, r1
   3f064:	str	r0, [fp, #-28]	; 0xffffffe4
   3f068:	b	3f910 <__assert_fail@plt+0x2e47c>
   3f06c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3f070:	ldr	r1, [fp, #8]
   3f074:	mul	r0, r0, r1
   3f078:	str	r0, [fp, #-28]	; 0xffffffe4
   3f07c:	b	3f914 <__assert_fail@plt+0x2e480>
   3f080:	b	3f084 <__assert_fail@plt+0x2dbf0>
   3f084:	b	3f088 <__assert_fail@plt+0x2dbf4>
   3f088:	ldr	r0, [fp, #8]
   3f08c:	cmp	r0, #0
   3f090:	bge	3f194 <__assert_fail@plt+0x2dd00>
   3f094:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3f098:	cmp	r0, #0
   3f09c:	bge	3f128 <__assert_fail@plt+0x2dc94>
   3f0a0:	b	3f0a4 <__assert_fail@plt+0x2dc10>
   3f0a4:	ldr	r0, [pc, #2192]	; 3f93c <__assert_fail@plt+0x2e4a8>
   3f0a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3f0ac:	ldr	r2, [fp, #8]
   3f0b0:	sdiv	r0, r0, r2
   3f0b4:	cmp	r1, r0
   3f0b8:	blt	3f224 <__assert_fail@plt+0x2dd90>
   3f0bc:	b	3f238 <__assert_fail@plt+0x2dda4>
   3f0c0:	b	3f0c4 <__assert_fail@plt+0x2dc30>
   3f0c4:	ldr	r0, [pc, #2164]	; 3f940 <__assert_fail@plt+0x2e4ac>
   3f0c8:	ldr	r1, [fp, #8]
   3f0cc:	cmp	r1, r0
   3f0d0:	blt	3f0e8 <__assert_fail@plt+0x2dc54>
   3f0d4:	b	3f0f4 <__assert_fail@plt+0x2dc60>
   3f0d8:	ldr	r0, [fp, #8]
   3f0dc:	movw	r1, #0
   3f0e0:	cmp	r1, r0
   3f0e4:	bge	3f0f4 <__assert_fail@plt+0x2dc60>
   3f0e8:	movw	r0, #0
   3f0ec:	str	r0, [sp, #140]	; 0x8c
   3f0f0:	b	3f10c <__assert_fail@plt+0x2dc78>
   3f0f4:	ldr	r0, [pc, #2112]	; 3f93c <__assert_fail@plt+0x2e4a8>
   3f0f8:	ldr	r1, [fp, #8]
   3f0fc:	movw	r2, #0
   3f100:	sub	r1, r2, r1
   3f104:	sdiv	r0, r0, r1
   3f108:	str	r0, [sp, #140]	; 0x8c
   3f10c:	ldr	r0, [sp, #140]	; 0x8c
   3f110:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3f114:	mvn	r2, #0
   3f118:	sub	r1, r2, r1
   3f11c:	cmp	r0, r1
   3f120:	ble	3f224 <__assert_fail@plt+0x2dd90>
   3f124:	b	3f238 <__assert_fail@plt+0x2dda4>
   3f128:	ldr	r0, [fp, #8]
   3f12c:	cmn	r0, #1
   3f130:	bne	3f178 <__assert_fail@plt+0x2dce4>
   3f134:	b	3f138 <__assert_fail@plt+0x2dca4>
   3f138:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3f13c:	add	r0, r0, #-2147483648	; 0x80000000
   3f140:	movw	r1, #0
   3f144:	cmp	r1, r0
   3f148:	blt	3f224 <__assert_fail@plt+0x2dd90>
   3f14c:	b	3f238 <__assert_fail@plt+0x2dda4>
   3f150:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3f154:	movw	r1, #0
   3f158:	cmp	r1, r0
   3f15c:	bge	3f238 <__assert_fail@plt+0x2dda4>
   3f160:	ldr	r0, [pc, #2004]	; 3f93c <__assert_fail@plt+0x2e4a8>
   3f164:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3f168:	sub	r1, r1, #1
   3f16c:	cmp	r0, r1
   3f170:	blt	3f224 <__assert_fail@plt+0x2dd90>
   3f174:	b	3f238 <__assert_fail@plt+0x2dda4>
   3f178:	ldr	r0, [pc, #1988]	; 3f944 <__assert_fail@plt+0x2e4b0>
   3f17c:	ldr	r1, [fp, #8]
   3f180:	sdiv	r0, r0, r1
   3f184:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3f188:	cmp	r0, r1
   3f18c:	blt	3f224 <__assert_fail@plt+0x2dd90>
   3f190:	b	3f238 <__assert_fail@plt+0x2dda4>
   3f194:	ldr	r0, [fp, #8]
   3f198:	cmp	r0, #0
   3f19c:	bne	3f1a4 <__assert_fail@plt+0x2dd10>
   3f1a0:	b	3f238 <__assert_fail@plt+0x2dda4>
   3f1a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3f1a8:	cmp	r0, #0
   3f1ac:	bge	3f20c <__assert_fail@plt+0x2dd78>
   3f1b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3f1b4:	cmn	r0, #1
   3f1b8:	bne	3f1f0 <__assert_fail@plt+0x2dd5c>
   3f1bc:	b	3f1c0 <__assert_fail@plt+0x2dd2c>
   3f1c0:	ldr	r0, [fp, #8]
   3f1c4:	add	r0, r0, #-2147483648	; 0x80000000
   3f1c8:	movw	r1, #0
   3f1cc:	cmp	r1, r0
   3f1d0:	blt	3f224 <__assert_fail@plt+0x2dd90>
   3f1d4:	b	3f238 <__assert_fail@plt+0x2dda4>
   3f1d8:	ldr	r0, [pc, #1884]	; 3f93c <__assert_fail@plt+0x2e4a8>
   3f1dc:	ldr	r1, [fp, #8]
   3f1e0:	sub	r1, r1, #1
   3f1e4:	cmp	r0, r1
   3f1e8:	blt	3f224 <__assert_fail@plt+0x2dd90>
   3f1ec:	b	3f238 <__assert_fail@plt+0x2dda4>
   3f1f0:	ldr	r0, [pc, #1868]	; 3f944 <__assert_fail@plt+0x2e4b0>
   3f1f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3f1f8:	sdiv	r0, r0, r1
   3f1fc:	ldr	r1, [fp, #8]
   3f200:	cmp	r0, r1
   3f204:	blt	3f224 <__assert_fail@plt+0x2dd90>
   3f208:	b	3f238 <__assert_fail@plt+0x2dda4>
   3f20c:	ldr	r0, [pc, #1832]	; 3f93c <__assert_fail@plt+0x2e4a8>
   3f210:	ldr	r1, [fp, #8]
   3f214:	sdiv	r0, r0, r1
   3f218:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3f21c:	cmp	r0, r1
   3f220:	bge	3f238 <__assert_fail@plt+0x2dda4>
   3f224:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3f228:	ldr	r1, [fp, #8]
   3f22c:	mul	r0, r0, r1
   3f230:	str	r0, [fp, #-28]	; 0xffffffe4
   3f234:	b	3f910 <__assert_fail@plt+0x2e47c>
   3f238:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3f23c:	ldr	r1, [fp, #8]
   3f240:	mul	r0, r0, r1
   3f244:	str	r0, [fp, #-28]	; 0xffffffe4
   3f248:	b	3f914 <__assert_fail@plt+0x2e480>
   3f24c:	ldr	r0, [fp, #8]
   3f250:	cmp	r0, #0
   3f254:	bge	3f364 <__assert_fail@plt+0x2ded0>
   3f258:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3f25c:	cmp	r0, #0
   3f260:	bge	3f2ec <__assert_fail@plt+0x2de58>
   3f264:	b	3f284 <__assert_fail@plt+0x2ddf0>
   3f268:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3f26c:	ldr	r1, [fp, #8]
   3f270:	mvn	r2, #0
   3f274:	udiv	r1, r2, r1
   3f278:	cmp	r0, r1
   3f27c:	bcc	3f400 <__assert_fail@plt+0x2df6c>
   3f280:	b	3f414 <__assert_fail@plt+0x2df80>
   3f284:	b	3f288 <__assert_fail@plt+0x2ddf4>
   3f288:	ldr	r0, [pc, #1712]	; 3f940 <__assert_fail@plt+0x2e4ac>
   3f28c:	ldr	r1, [fp, #8]
   3f290:	cmp	r1, r0
   3f294:	blt	3f2ac <__assert_fail@plt+0x2de18>
   3f298:	b	3f2b8 <__assert_fail@plt+0x2de24>
   3f29c:	ldr	r0, [fp, #8]
   3f2a0:	movw	r1, #0
   3f2a4:	cmp	r1, r0
   3f2a8:	bge	3f2b8 <__assert_fail@plt+0x2de24>
   3f2ac:	movw	r0, #1
   3f2b0:	str	r0, [sp, #136]	; 0x88
   3f2b4:	b	3f2d0 <__assert_fail@plt+0x2de3c>
   3f2b8:	ldr	r0, [fp, #8]
   3f2bc:	movw	r1, #0
   3f2c0:	sub	r0, r1, r0
   3f2c4:	mvn	r1, #0
   3f2c8:	udiv	r0, r1, r0
   3f2cc:	str	r0, [sp, #136]	; 0x88
   3f2d0:	ldr	r0, [sp, #136]	; 0x88
   3f2d4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3f2d8:	mvn	r2, #0
   3f2dc:	sub	r1, r2, r1
   3f2e0:	cmp	r0, r1
   3f2e4:	bls	3f400 <__assert_fail@plt+0x2df6c>
   3f2e8:	b	3f414 <__assert_fail@plt+0x2df80>
   3f2ec:	b	3f2f0 <__assert_fail@plt+0x2de5c>
   3f2f0:	b	3f348 <__assert_fail@plt+0x2deb4>
   3f2f4:	b	3f348 <__assert_fail@plt+0x2deb4>
   3f2f8:	ldr	r0, [fp, #8]
   3f2fc:	cmn	r0, #1
   3f300:	bne	3f348 <__assert_fail@plt+0x2deb4>
   3f304:	b	3f308 <__assert_fail@plt+0x2de74>
   3f308:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3f30c:	add	r0, r0, #0
   3f310:	movw	r1, #0
   3f314:	cmp	r1, r0
   3f318:	blt	3f400 <__assert_fail@plt+0x2df6c>
   3f31c:	b	3f414 <__assert_fail@plt+0x2df80>
   3f320:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3f324:	movw	r1, #0
   3f328:	cmp	r1, r0
   3f32c:	bge	3f414 <__assert_fail@plt+0x2df80>
   3f330:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3f334:	sub	r0, r0, #1
   3f338:	mvn	r1, #0
   3f33c:	cmp	r1, r0
   3f340:	blt	3f400 <__assert_fail@plt+0x2df6c>
   3f344:	b	3f414 <__assert_fail@plt+0x2df80>
   3f348:	ldr	r0, [fp, #8]
   3f34c:	movw	r1, #0
   3f350:	sdiv	r0, r1, r0
   3f354:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3f358:	cmp	r0, r1
   3f35c:	blt	3f400 <__assert_fail@plt+0x2df6c>
   3f360:	b	3f414 <__assert_fail@plt+0x2df80>
   3f364:	ldr	r0, [fp, #8]
   3f368:	cmp	r0, #0
   3f36c:	bne	3f374 <__assert_fail@plt+0x2dee0>
   3f370:	b	3f414 <__assert_fail@plt+0x2df80>
   3f374:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3f378:	cmp	r0, #0
   3f37c:	bge	3f3e8 <__assert_fail@plt+0x2df54>
   3f380:	b	3f384 <__assert_fail@plt+0x2def0>
   3f384:	b	3f3cc <__assert_fail@plt+0x2df38>
   3f388:	b	3f3cc <__assert_fail@plt+0x2df38>
   3f38c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3f390:	cmn	r0, #1
   3f394:	bne	3f3cc <__assert_fail@plt+0x2df38>
   3f398:	b	3f39c <__assert_fail@plt+0x2df08>
   3f39c:	ldr	r0, [fp, #8]
   3f3a0:	add	r0, r0, #0
   3f3a4:	movw	r1, #0
   3f3a8:	cmp	r1, r0
   3f3ac:	blt	3f400 <__assert_fail@plt+0x2df6c>
   3f3b0:	b	3f414 <__assert_fail@plt+0x2df80>
   3f3b4:	ldr	r0, [fp, #8]
   3f3b8:	sub	r0, r0, #1
   3f3bc:	mvn	r1, #0
   3f3c0:	cmp	r1, r0
   3f3c4:	blt	3f400 <__assert_fail@plt+0x2df6c>
   3f3c8:	b	3f414 <__assert_fail@plt+0x2df80>
   3f3cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3f3d0:	movw	r1, #0
   3f3d4:	sdiv	r0, r1, r0
   3f3d8:	ldr	r1, [fp, #8]
   3f3dc:	cmp	r0, r1
   3f3e0:	blt	3f400 <__assert_fail@plt+0x2df6c>
   3f3e4:	b	3f414 <__assert_fail@plt+0x2df80>
   3f3e8:	ldr	r0, [fp, #8]
   3f3ec:	mvn	r1, #0
   3f3f0:	udiv	r0, r1, r0
   3f3f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3f3f8:	cmp	r0, r1
   3f3fc:	bcs	3f414 <__assert_fail@plt+0x2df80>
   3f400:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3f404:	ldr	r1, [fp, #8]
   3f408:	mul	r0, r0, r1
   3f40c:	str	r0, [fp, #-28]	; 0xffffffe4
   3f410:	b	3f910 <__assert_fail@plt+0x2e47c>
   3f414:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3f418:	ldr	r1, [fp, #8]
   3f41c:	mul	r0, r0, r1
   3f420:	str	r0, [fp, #-28]	; 0xffffffe4
   3f424:	b	3f914 <__assert_fail@plt+0x2e480>
   3f428:	b	3f42c <__assert_fail@plt+0x2df98>
   3f42c:	ldr	r0, [fp, #8]
   3f430:	cmp	r0, #0
   3f434:	bge	3f5bc <__assert_fail@plt+0x2e128>
   3f438:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3f43c:	cmp	r0, #0
   3f440:	bge	3f528 <__assert_fail@plt+0x2e094>
   3f444:	b	3f448 <__assert_fail@plt+0x2dfb4>
   3f448:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3f44c:	ldr	r1, [fp, #8]
   3f450:	asr	r3, r1, #31
   3f454:	mvn	r2, #0
   3f458:	mvn	ip, #-2147483648	; 0x80000000
   3f45c:	str	r0, [sp, #132]	; 0x84
   3f460:	mov	r0, r2
   3f464:	str	r1, [sp, #128]	; 0x80
   3f468:	mov	r1, ip
   3f46c:	ldr	r2, [sp, #128]	; 0x80
   3f470:	bl	435b4 <__assert_fail@plt+0x32120>
   3f474:	ldr	r2, [sp, #132]	; 0x84
   3f478:	subs	r0, r2, r0
   3f47c:	rscs	r1, r1, r2, asr #31
   3f480:	str	r0, [sp, #124]	; 0x7c
   3f484:	str	r1, [sp, #120]	; 0x78
   3f488:	blt	3f69c <__assert_fail@plt+0x2e208>
   3f48c:	b	3f6b0 <__assert_fail@plt+0x2e21c>
   3f490:	b	3f494 <__assert_fail@plt+0x2e000>
   3f494:	ldr	r0, [pc, #1188]	; 3f940 <__assert_fail@plt+0x2e4ac>
   3f498:	ldr	r1, [fp, #8]
   3f49c:	cmp	r1, r0
   3f4a0:	blt	3f4b8 <__assert_fail@plt+0x2e024>
   3f4a4:	b	3f4cc <__assert_fail@plt+0x2e038>
   3f4a8:	ldr	r0, [fp, #8]
   3f4ac:	movw	r1, #0
   3f4b0:	cmp	r1, r0
   3f4b4:	bge	3f4cc <__assert_fail@plt+0x2e038>
   3f4b8:	mov	r0, #0
   3f4bc:	mvn	r1, #0
   3f4c0:	str	r1, [sp, #116]	; 0x74
   3f4c4:	str	r0, [sp, #112]	; 0x70
   3f4c8:	b	3f500 <__assert_fail@plt+0x2e06c>
   3f4cc:	ldr	r0, [fp, #8]
   3f4d0:	rsb	r0, r0, #0
   3f4d4:	asr	r3, r0, #31
   3f4d8:	mvn	r1, #0
   3f4dc:	mvn	r2, #-2147483648	; 0x80000000
   3f4e0:	str	r0, [sp, #108]	; 0x6c
   3f4e4:	mov	r0, r1
   3f4e8:	mov	r1, r2
   3f4ec:	ldr	r2, [sp, #108]	; 0x6c
   3f4f0:	bl	435b4 <__assert_fail@plt+0x32120>
   3f4f4:	str	r0, [sp, #116]	; 0x74
   3f4f8:	str	r1, [sp, #112]	; 0x70
   3f4fc:	b	3f500 <__assert_fail@plt+0x2e06c>
   3f500:	ldr	r0, [sp, #112]	; 0x70
   3f504:	ldr	r1, [sp, #116]	; 0x74
   3f508:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3f50c:	mvn	r2, r2
   3f510:	subs	r1, r2, r1
   3f514:	rscs	r0, r0, r2, asr #31
   3f518:	str	r1, [sp, #104]	; 0x68
   3f51c:	str	r0, [sp, #100]	; 0x64
   3f520:	bge	3f69c <__assert_fail@plt+0x2e208>
   3f524:	b	3f6b0 <__assert_fail@plt+0x2e21c>
   3f528:	ldr	r0, [fp, #8]
   3f52c:	cmn	r0, #1
   3f530:	bne	3f57c <__assert_fail@plt+0x2e0e8>
   3f534:	b	3f538 <__assert_fail@plt+0x2e0a4>
   3f538:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3f53c:	mov	r1, #-2147483648	; 0x80000000
   3f540:	add	r1, r1, r0, asr #31
   3f544:	rsbs	r0, r0, #0
   3f548:	rscs	r1, r1, #0
   3f54c:	str	r0, [sp, #96]	; 0x60
   3f550:	str	r1, [sp, #92]	; 0x5c
   3f554:	blt	3f69c <__assert_fail@plt+0x2e208>
   3f558:	b	3f6b0 <__assert_fail@plt+0x2e21c>
   3f55c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3f560:	movw	r1, #0
   3f564:	cmp	r1, r0
   3f568:	bge	3f6b0 <__assert_fail@plt+0x2e21c>
   3f56c:	mov	r0, #0
   3f570:	cmp	r0, #0
   3f574:	bne	3f69c <__assert_fail@plt+0x2e208>
   3f578:	b	3f6b0 <__assert_fail@plt+0x2e21c>
   3f57c:	ldr	r0, [fp, #8]
   3f580:	asr	r3, r0, #31
   3f584:	mov	r1, #0
   3f588:	mov	r2, #-2147483648	; 0x80000000
   3f58c:	str	r0, [sp, #88]	; 0x58
   3f590:	mov	r0, r1
   3f594:	mov	r1, r2
   3f598:	ldr	r2, [sp, #88]	; 0x58
   3f59c:	bl	435b4 <__assert_fail@plt+0x32120>
   3f5a0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3f5a4:	subs	r0, r0, r2
   3f5a8:	sbcs	r1, r1, r2, asr #31
   3f5ac:	str	r0, [sp, #84]	; 0x54
   3f5b0:	str	r1, [sp, #80]	; 0x50
   3f5b4:	blt	3f69c <__assert_fail@plt+0x2e208>
   3f5b8:	b	3f6b0 <__assert_fail@plt+0x2e21c>
   3f5bc:	ldr	r0, [fp, #8]
   3f5c0:	cmp	r0, #0
   3f5c4:	bne	3f5cc <__assert_fail@plt+0x2e138>
   3f5c8:	b	3f6b0 <__assert_fail@plt+0x2e21c>
   3f5cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3f5d0:	cmp	r0, #0
   3f5d4:	bge	3f65c <__assert_fail@plt+0x2e1c8>
   3f5d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3f5dc:	cmn	r0, #1
   3f5e0:	bne	3f61c <__assert_fail@plt+0x2e188>
   3f5e4:	b	3f5e8 <__assert_fail@plt+0x2e154>
   3f5e8:	ldr	r0, [fp, #8]
   3f5ec:	mov	r1, #-2147483648	; 0x80000000
   3f5f0:	add	r1, r1, r0, asr #31
   3f5f4:	rsbs	r0, r0, #0
   3f5f8:	rscs	r1, r1, #0
   3f5fc:	str	r0, [sp, #76]	; 0x4c
   3f600:	str	r1, [sp, #72]	; 0x48
   3f604:	blt	3f69c <__assert_fail@plt+0x2e208>
   3f608:	b	3f6b0 <__assert_fail@plt+0x2e21c>
   3f60c:	mov	r0, #0
   3f610:	cmp	r0, #0
   3f614:	bne	3f69c <__assert_fail@plt+0x2e208>
   3f618:	b	3f6b0 <__assert_fail@plt+0x2e21c>
   3f61c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3f620:	asr	r3, r0, #31
   3f624:	mov	r1, #0
   3f628:	mov	r2, #-2147483648	; 0x80000000
   3f62c:	str	r0, [sp, #68]	; 0x44
   3f630:	mov	r0, r1
   3f634:	mov	r1, r2
   3f638:	ldr	r2, [sp, #68]	; 0x44
   3f63c:	bl	435b4 <__assert_fail@plt+0x32120>
   3f640:	ldr	r2, [fp, #8]
   3f644:	subs	r0, r0, r2
   3f648:	sbcs	r1, r1, r2, asr #31
   3f64c:	str	r0, [sp, #64]	; 0x40
   3f650:	str	r1, [sp, #60]	; 0x3c
   3f654:	blt	3f69c <__assert_fail@plt+0x2e208>
   3f658:	b	3f6b0 <__assert_fail@plt+0x2e21c>
   3f65c:	ldr	r0, [fp, #8]
   3f660:	asr	r3, r0, #31
   3f664:	mvn	r1, #0
   3f668:	mvn	r2, #-2147483648	; 0x80000000
   3f66c:	str	r0, [sp, #56]	; 0x38
   3f670:	mov	r0, r1
   3f674:	mov	r1, r2
   3f678:	ldr	r2, [sp, #56]	; 0x38
   3f67c:	bl	435b4 <__assert_fail@plt+0x32120>
   3f680:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3f684:	subs	r0, r0, r2
   3f688:	sbcs	r1, r1, r2, asr #31
   3f68c:	str	r0, [sp, #52]	; 0x34
   3f690:	str	r1, [sp, #48]	; 0x30
   3f694:	bge	3f6b0 <__assert_fail@plt+0x2e21c>
   3f698:	b	3f69c <__assert_fail@plt+0x2e208>
   3f69c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3f6a0:	ldr	r1, [fp, #8]
   3f6a4:	mul	r0, r0, r1
   3f6a8:	str	r0, [fp, #-28]	; 0xffffffe4
   3f6ac:	b	3f910 <__assert_fail@plt+0x2e47c>
   3f6b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3f6b4:	ldr	r1, [fp, #8]
   3f6b8:	mul	r0, r0, r1
   3f6bc:	str	r0, [fp, #-28]	; 0xffffffe4
   3f6c0:	b	3f914 <__assert_fail@plt+0x2e480>
   3f6c4:	ldr	r0, [fp, #8]
   3f6c8:	cmp	r0, #0
   3f6cc:	bge	3f82c <__assert_fail@plt+0x2e398>
   3f6d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3f6d4:	cmp	r0, #0
   3f6d8:	bge	3f7b4 <__assert_fail@plt+0x2e320>
   3f6dc:	b	3f724 <__assert_fail@plt+0x2e290>
   3f6e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3f6e4:	ldr	r1, [fp, #8]
   3f6e8:	asr	r3, r1, #31
   3f6ec:	mvn	r2, #0
   3f6f0:	str	r0, [sp, #44]	; 0x2c
   3f6f4:	mov	r0, r2
   3f6f8:	str	r1, [sp, #40]	; 0x28
   3f6fc:	mov	r1, r2
   3f700:	ldr	r2, [sp, #40]	; 0x28
   3f704:	bl	43688 <__assert_fail@plt+0x321f4>
   3f708:	ldr	r2, [sp, #44]	; 0x2c
   3f70c:	subs	r0, r2, r0
   3f710:	rscs	r1, r1, r2, asr #31
   3f714:	str	r0, [sp, #36]	; 0x24
   3f718:	str	r1, [sp, #32]
   3f71c:	bcc	3f8e8 <__assert_fail@plt+0x2e454>
   3f720:	b	3f8fc <__assert_fail@plt+0x2e468>
   3f724:	b	3f728 <__assert_fail@plt+0x2e294>
   3f728:	ldr	r0, [pc, #528]	; 3f940 <__assert_fail@plt+0x2e4ac>
   3f72c:	ldr	r1, [fp, #8]
   3f730:	cmp	r1, r0
   3f734:	blt	3f74c <__assert_fail@plt+0x2e2b8>
   3f738:	b	3f760 <__assert_fail@plt+0x2e2cc>
   3f73c:	ldr	r0, [fp, #8]
   3f740:	movw	r1, #0
   3f744:	cmp	r1, r0
   3f748:	bge	3f760 <__assert_fail@plt+0x2e2cc>
   3f74c:	mov	r0, #1
   3f750:	mvn	r1, #0
   3f754:	str	r1, [sp, #28]
   3f758:	str	r0, [sp, #24]
   3f75c:	b	3f78c <__assert_fail@plt+0x2e2f8>
   3f760:	ldr	r0, [fp, #8]
   3f764:	rsb	r0, r0, #0
   3f768:	asr	r3, r0, #31
   3f76c:	mvn	r1, #0
   3f770:	str	r0, [sp, #20]
   3f774:	mov	r0, r1
   3f778:	ldr	r2, [sp, #20]
   3f77c:	bl	43688 <__assert_fail@plt+0x321f4>
   3f780:	str	r0, [sp, #28]
   3f784:	str	r1, [sp, #24]
   3f788:	b	3f78c <__assert_fail@plt+0x2e2f8>
   3f78c:	ldr	r0, [sp, #24]
   3f790:	ldr	r1, [sp, #28]
   3f794:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3f798:	mvn	r2, r2
   3f79c:	subs	r1, r2, r1
   3f7a0:	rscs	r0, r0, r2, asr #31
   3f7a4:	str	r1, [sp, #16]
   3f7a8:	str	r0, [sp, #12]
   3f7ac:	bcs	3f8e8 <__assert_fail@plt+0x2e454>
   3f7b0:	b	3f8fc <__assert_fail@plt+0x2e468>
   3f7b4:	b	3f7b8 <__assert_fail@plt+0x2e324>
   3f7b8:	b	3f810 <__assert_fail@plt+0x2e37c>
   3f7bc:	b	3f810 <__assert_fail@plt+0x2e37c>
   3f7c0:	ldr	r0, [fp, #8]
   3f7c4:	cmn	r0, #1
   3f7c8:	bne	3f810 <__assert_fail@plt+0x2e37c>
   3f7cc:	b	3f7d0 <__assert_fail@plt+0x2e33c>
   3f7d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3f7d4:	add	r0, r0, #0
   3f7d8:	movw	r1, #0
   3f7dc:	cmp	r1, r0
   3f7e0:	blt	3f8e8 <__assert_fail@plt+0x2e454>
   3f7e4:	b	3f8fc <__assert_fail@plt+0x2e468>
   3f7e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3f7ec:	movw	r1, #0
   3f7f0:	cmp	r1, r0
   3f7f4:	bge	3f8fc <__assert_fail@plt+0x2e468>
   3f7f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3f7fc:	sub	r0, r0, #1
   3f800:	mvn	r1, #0
   3f804:	cmp	r1, r0
   3f808:	blt	3f8e8 <__assert_fail@plt+0x2e454>
   3f80c:	b	3f8fc <__assert_fail@plt+0x2e468>
   3f810:	ldr	r0, [fp, #8]
   3f814:	movw	r1, #0
   3f818:	sdiv	r0, r1, r0
   3f81c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3f820:	cmp	r0, r1
   3f824:	blt	3f8e8 <__assert_fail@plt+0x2e454>
   3f828:	b	3f8fc <__assert_fail@plt+0x2e468>
   3f82c:	ldr	r0, [fp, #8]
   3f830:	cmp	r0, #0
   3f834:	bne	3f83c <__assert_fail@plt+0x2e3a8>
   3f838:	b	3f8fc <__assert_fail@plt+0x2e468>
   3f83c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3f840:	cmp	r0, #0
   3f844:	bge	3f8b0 <__assert_fail@plt+0x2e41c>
   3f848:	b	3f84c <__assert_fail@plt+0x2e3b8>
   3f84c:	b	3f894 <__assert_fail@plt+0x2e400>
   3f850:	b	3f894 <__assert_fail@plt+0x2e400>
   3f854:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3f858:	cmn	r0, #1
   3f85c:	bne	3f894 <__assert_fail@plt+0x2e400>
   3f860:	b	3f864 <__assert_fail@plt+0x2e3d0>
   3f864:	ldr	r0, [fp, #8]
   3f868:	add	r0, r0, #0
   3f86c:	movw	r1, #0
   3f870:	cmp	r1, r0
   3f874:	blt	3f8e8 <__assert_fail@plt+0x2e454>
   3f878:	b	3f8fc <__assert_fail@plt+0x2e468>
   3f87c:	ldr	r0, [fp, #8]
   3f880:	sub	r0, r0, #1
   3f884:	mvn	r1, #0
   3f888:	cmp	r1, r0
   3f88c:	blt	3f8e8 <__assert_fail@plt+0x2e454>
   3f890:	b	3f8fc <__assert_fail@plt+0x2e468>
   3f894:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3f898:	movw	r1, #0
   3f89c:	sdiv	r0, r1, r0
   3f8a0:	ldr	r1, [fp, #8]
   3f8a4:	cmp	r0, r1
   3f8a8:	blt	3f8e8 <__assert_fail@plt+0x2e454>
   3f8ac:	b	3f8fc <__assert_fail@plt+0x2e468>
   3f8b0:	ldr	r0, [fp, #8]
   3f8b4:	asr	r3, r0, #31
   3f8b8:	mvn	r1, #0
   3f8bc:	str	r0, [sp, #8]
   3f8c0:	mov	r0, r1
   3f8c4:	ldr	r2, [sp, #8]
   3f8c8:	bl	43688 <__assert_fail@plt+0x321f4>
   3f8cc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3f8d0:	subs	r0, r0, r2
   3f8d4:	sbcs	r1, r1, r2, asr #31
   3f8d8:	str	r0, [sp, #4]
   3f8dc:	str	r1, [sp]
   3f8e0:	bcs	3f8fc <__assert_fail@plt+0x2e468>
   3f8e4:	b	3f8e8 <__assert_fail@plt+0x2e454>
   3f8e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3f8ec:	ldr	r1, [fp, #8]
   3f8f0:	mul	r0, r0, r1
   3f8f4:	str	r0, [fp, #-28]	; 0xffffffe4
   3f8f8:	b	3f910 <__assert_fail@plt+0x2e47c>
   3f8fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3f900:	ldr	r1, [fp, #8]
   3f904:	mul	r0, r0, r1
   3f908:	str	r0, [fp, #-28]	; 0xffffffe4
   3f90c:	b	3f914 <__assert_fail@plt+0x2e480>
   3f910:	bl	3faec <__assert_fail@plt+0x2e658>
   3f914:	ldr	r0, [fp, #-4]
   3f918:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3f91c:	bl	3cda8 <__assert_fail@plt+0x2b914>
   3f920:	str	r0, [fp, #-4]
   3f924:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3f928:	ldr	r1, [fp, #-8]
   3f92c:	str	r0, [r1]
   3f930:	ldr	r0, [fp, #-4]
   3f934:	mov	sp, fp
   3f938:	pop	{fp, pc}
   3f93c:	svcvc	0x00ffffff
   3f940:	andhi	r0, r0, r1
   3f944:	andhi	r0, r0, r0
   3f948:			; <UNDEFINED> instruction: 0xffff8000
   3f94c:	push	{fp, lr}
   3f950:	mov	fp, sp
   3f954:	sub	sp, sp, #8
   3f958:	str	r0, [sp, #4]
   3f95c:	ldr	r0, [sp, #4]
   3f960:	movw	r1, #1
   3f964:	bl	3f970 <__assert_fail@plt+0x2e4dc>
   3f968:	mov	sp, fp
   3f96c:	pop	{fp, pc}
   3f970:	push	{fp, lr}
   3f974:	mov	fp, sp
   3f978:	sub	sp, sp, #8
   3f97c:	str	r0, [sp, #4]
   3f980:	str	r1, [sp]
   3f984:	ldr	r0, [sp, #4]
   3f988:	ldr	r1, [sp]
   3f98c:	bl	3fb3c <__assert_fail@plt+0x2e6a8>
   3f990:	bl	3cd34 <__assert_fail@plt+0x2b8a0>
   3f994:	mov	sp, fp
   3f998:	pop	{fp, pc}
   3f99c:	push	{fp, lr}
   3f9a0:	mov	fp, sp
   3f9a4:	sub	sp, sp, #8
   3f9a8:	str	r0, [sp, #4]
   3f9ac:	ldr	r0, [sp, #4]
   3f9b0:	movw	r1, #1
   3f9b4:	bl	3f9c0 <__assert_fail@plt+0x2e52c>
   3f9b8:	mov	sp, fp
   3f9bc:	pop	{fp, pc}
   3f9c0:	push	{fp, lr}
   3f9c4:	mov	fp, sp
   3f9c8:	sub	sp, sp, #8
   3f9cc:	str	r0, [sp, #4]
   3f9d0:	str	r1, [sp]
   3f9d4:	ldr	r0, [sp, #4]
   3f9d8:	ldr	r1, [sp]
   3f9dc:	bl	41668 <__assert_fail@plt+0x301d4>
   3f9e0:	bl	3cd34 <__assert_fail@plt+0x2b8a0>
   3f9e4:	mov	sp, fp
   3f9e8:	pop	{fp, pc}
   3f9ec:	push	{fp, lr}
   3f9f0:	mov	fp, sp
   3f9f4:	sub	sp, sp, #16
   3f9f8:	str	r0, [fp, #-4]
   3f9fc:	str	r1, [sp, #8]
   3fa00:	ldr	r0, [sp, #8]
   3fa04:	bl	3cd10 <__assert_fail@plt+0x2b87c>
   3fa08:	ldr	r1, [fp, #-4]
   3fa0c:	ldr	r2, [sp, #8]
   3fa10:	str	r0, [sp, #4]
   3fa14:	bl	11248 <memcpy@plt>
   3fa18:	ldr	r0, [sp, #4]
   3fa1c:	mov	sp, fp
   3fa20:	pop	{fp, pc}
   3fa24:	push	{fp, lr}
   3fa28:	mov	fp, sp
   3fa2c:	sub	sp, sp, #16
   3fa30:	str	r0, [fp, #-4]
   3fa34:	str	r1, [sp, #8]
   3fa38:	ldr	r0, [sp, #8]
   3fa3c:	bl	3cd64 <__assert_fail@plt+0x2b8d0>
   3fa40:	ldr	r1, [fp, #-4]
   3fa44:	ldr	r2, [sp, #8]
   3fa48:	str	r0, [sp, #4]
   3fa4c:	bl	11248 <memcpy@plt>
   3fa50:	ldr	r0, [sp, #4]
   3fa54:	mov	sp, fp
   3fa58:	pop	{fp, pc}
   3fa5c:	push	{fp, lr}
   3fa60:	mov	fp, sp
   3fa64:	sub	sp, sp, #16
   3fa68:	str	r0, [fp, #-4]
   3fa6c:	str	r1, [sp, #8]
   3fa70:	ldr	r0, [sp, #8]
   3fa74:	add	r0, r0, #1
   3fa78:	bl	3cd64 <__assert_fail@plt+0x2b8d0>
   3fa7c:	str	r0, [sp, #4]
   3fa80:	ldr	r0, [sp, #4]
   3fa84:	ldr	r1, [sp, #8]
   3fa88:	add	r0, r0, r1
   3fa8c:	movw	r1, #0
   3fa90:	strb	r1, [r0]
   3fa94:	ldr	r0, [sp, #4]
   3fa98:	ldr	r1, [fp, #-4]
   3fa9c:	ldr	r2, [sp, #8]
   3faa0:	str	r0, [sp]
   3faa4:	bl	11248 <memcpy@plt>
   3faa8:	ldr	r0, [sp]
   3faac:	mov	sp, fp
   3fab0:	pop	{fp, pc}
   3fab4:	push	{fp, lr}
   3fab8:	mov	fp, sp
   3fabc:	sub	sp, sp, #8
   3fac0:	str	r0, [sp, #4]
   3fac4:	ldr	r0, [sp, #4]
   3fac8:	ldr	r1, [sp, #4]
   3facc:	str	r0, [sp]
   3fad0:	mov	r0, r1
   3fad4:	bl	1138c <strlen@plt>
   3fad8:	add	r1, r0, #1
   3fadc:	ldr	r0, [sp]
   3fae0:	bl	3f9ec <__assert_fail@plt+0x2e558>
   3fae4:	mov	sp, fp
   3fae8:	pop	{fp, pc}
   3faec:	push	{fp, lr}
   3faf0:	mov	fp, sp
   3faf4:	sub	sp, sp, #8
   3faf8:	movw	r0, #24868	; 0x6124
   3fafc:	movt	r0, #5
   3fb00:	ldr	r0, [r0]
   3fb04:	movw	r1, #24079	; 0x5e0f
   3fb08:	movt	r1, #4
   3fb0c:	str	r0, [sp, #4]
   3fb10:	mov	r0, r1
   3fb14:	bl	11380 <gettext@plt>
   3fb18:	ldr	r1, [sp, #4]
   3fb1c:	str	r0, [sp]
   3fb20:	mov	r0, r1
   3fb24:	movw	r1, #0
   3fb28:	movw	r2, #17388	; 0x43ec
   3fb2c:	movt	r2, #4
   3fb30:	ldr	r3, [sp]
   3fb34:	bl	11308 <error@plt>
   3fb38:	bl	1147c <abort@plt>
   3fb3c:	push	{fp, lr}
   3fb40:	mov	fp, sp
   3fb44:	sub	sp, sp, #16
   3fb48:	str	r0, [sp, #8]
   3fb4c:	str	r1, [sp, #4]
   3fb50:	ldr	r0, [sp, #8]
   3fb54:	cmp	r0, #0
   3fb58:	beq	3fb68 <__assert_fail@plt+0x2e6d4>
   3fb5c:	ldr	r0, [sp, #4]
   3fb60:	cmp	r0, #0
   3fb64:	bne	3fb74 <__assert_fail@plt+0x2e6e0>
   3fb68:	movw	r0, #1
   3fb6c:	str	r0, [sp, #4]
   3fb70:	str	r0, [sp, #8]
   3fb74:	ldr	r0, [sp, #4]
   3fb78:	cmp	r0, #0
   3fb7c:	beq	3fbb0 <__assert_fail@plt+0x2e71c>
   3fb80:	ldr	r0, [pc, #76]	; 3fbd4 <__assert_fail@plt+0x2e740>
   3fb84:	ldr	r1, [sp, #4]
   3fb88:	udiv	r0, r0, r1
   3fb8c:	ldr	r1, [sp, #8]
   3fb90:	cmp	r0, r1
   3fb94:	bcs	3fbb0 <__assert_fail@plt+0x2e71c>
   3fb98:	bl	113b0 <__errno_location@plt>
   3fb9c:	movw	lr, #12
   3fba0:	str	lr, [r0]
   3fba4:	movw	r0, #0
   3fba8:	str	r0, [fp, #-4]
   3fbac:	b	3fbc8 <__assert_fail@plt+0x2e734>
   3fbb0:	ldr	r0, [sp, #8]
   3fbb4:	ldr	r1, [sp, #4]
   3fbb8:	bl	11188 <calloc@plt>
   3fbbc:	str	r0, [sp]
   3fbc0:	ldr	r0, [sp]
   3fbc4:	str	r0, [fp, #-4]
   3fbc8:	ldr	r0, [fp, #-4]
   3fbcc:	mov	sp, fp
   3fbd0:	pop	{fp, pc}
   3fbd4:	svcvc	0x00ffffff
   3fbd8:	push	{fp, lr}
   3fbdc:	mov	fp, sp
   3fbe0:	sub	sp, sp, #16
   3fbe4:	str	r0, [sp, #8]
   3fbe8:	ldr	r0, [sp, #8]
   3fbec:	cmp	r0, #0
   3fbf0:	bne	3fbfc <__assert_fail@plt+0x2e768>
   3fbf4:	movw	r0, #1
   3fbf8:	str	r0, [sp, #8]
   3fbfc:	ldr	r0, [pc, #64]	; 3fc44 <__assert_fail@plt+0x2e7b0>
   3fc00:	ldr	r1, [sp, #8]
   3fc04:	cmp	r0, r1
   3fc08:	bcs	3fc24 <__assert_fail@plt+0x2e790>
   3fc0c:	bl	113b0 <__errno_location@plt>
   3fc10:	movw	lr, #12
   3fc14:	str	lr, [r0]
   3fc18:	movw	r0, #0
   3fc1c:	str	r0, [fp, #-4]
   3fc20:	b	3fc38 <__assert_fail@plt+0x2e7a4>
   3fc24:	ldr	r0, [sp, #8]
   3fc28:	bl	1132c <malloc@plt>
   3fc2c:	str	r0, [sp, #4]
   3fc30:	ldr	r0, [sp, #4]
   3fc34:	str	r0, [fp, #-4]
   3fc38:	ldr	r0, [fp, #-4]
   3fc3c:	mov	sp, fp
   3fc40:	pop	{fp, pc}
   3fc44:	svcvc	0x00ffffff
   3fc48:	push	{fp, lr}
   3fc4c:	mov	fp, sp
   3fc50:	sub	sp, sp, #16
   3fc54:	str	r0, [sp, #8]
   3fc58:	str	r1, [sp, #4]
   3fc5c:	ldr	r0, [sp, #8]
   3fc60:	movw	r1, #0
   3fc64:	cmp	r0, r1
   3fc68:	bne	3fc7c <__assert_fail@plt+0x2e7e8>
   3fc6c:	ldr	r0, [sp, #4]
   3fc70:	bl	3fbd8 <__assert_fail@plt+0x2e744>
   3fc74:	str	r0, [fp, #-4]
   3fc78:	b	3fcdc <__assert_fail@plt+0x2e848>
   3fc7c:	ldr	r0, [sp, #4]
   3fc80:	cmp	r0, #0
   3fc84:	bne	3fc9c <__assert_fail@plt+0x2e808>
   3fc88:	ldr	r0, [sp, #8]
   3fc8c:	bl	138a4 <__assert_fail@plt+0x2410>
   3fc90:	movw	r0, #0
   3fc94:	str	r0, [fp, #-4]
   3fc98:	b	3fcdc <__assert_fail@plt+0x2e848>
   3fc9c:	ldr	r0, [pc, #68]	; 3fce8 <__assert_fail@plt+0x2e854>
   3fca0:	ldr	r1, [sp, #4]
   3fca4:	cmp	r0, r1
   3fca8:	bcs	3fcc4 <__assert_fail@plt+0x2e830>
   3fcac:	bl	113b0 <__errno_location@plt>
   3fcb0:	movw	lr, #12
   3fcb4:	str	lr, [r0]
   3fcb8:	movw	r0, #0
   3fcbc:	str	r0, [fp, #-4]
   3fcc0:	b	3fcdc <__assert_fail@plt+0x2e848>
   3fcc4:	ldr	r0, [sp, #8]
   3fcc8:	ldr	r1, [sp, #4]
   3fccc:	bl	11290 <realloc@plt>
   3fcd0:	str	r0, [sp]
   3fcd4:	ldr	r0, [sp]
   3fcd8:	str	r0, [fp, #-4]
   3fcdc:	ldr	r0, [fp, #-4]
   3fce0:	mov	sp, fp
   3fce4:	pop	{fp, pc}
   3fce8:	svcvc	0x00ffffff
   3fcec:	push	{fp, lr}
   3fcf0:	mov	fp, sp
   3fcf4:	sub	sp, sp, #24
   3fcf8:	str	r0, [fp, #-8]
   3fcfc:	str	r1, [sp, #12]
   3fd00:	ldr	r0, [fp, #-8]
   3fd04:	str	r0, [sp, #8]
   3fd08:	ldr	r0, [sp, #12]
   3fd0c:	str	r0, [sp, #4]
   3fd10:	ldr	r0, [sp, #8]
   3fd14:	ldr	r1, [sp, #4]
   3fd18:	cmp	r0, r1
   3fd1c:	bne	3fd2c <__assert_fail@plt+0x2e898>
   3fd20:	movw	r0, #0
   3fd24:	str	r0, [fp, #-4]
   3fd28:	b	3fd98 <__assert_fail@plt+0x2e904>
   3fd2c:	b	3fd30 <__assert_fail@plt+0x2e89c>
   3fd30:	ldr	r0, [sp, #8]
   3fd34:	ldrb	r0, [r0]
   3fd38:	bl	43334 <__assert_fail@plt+0x31ea0>
   3fd3c:	strb	r0, [sp, #3]
   3fd40:	ldr	r0, [sp, #4]
   3fd44:	ldrb	r0, [r0]
   3fd48:	bl	43334 <__assert_fail@plt+0x31ea0>
   3fd4c:	strb	r0, [sp, #2]
   3fd50:	ldrb	r0, [sp, #3]
   3fd54:	cmp	r0, #0
   3fd58:	bne	3fd60 <__assert_fail@plt+0x2e8cc>
   3fd5c:	b	3fd88 <__assert_fail@plt+0x2e8f4>
   3fd60:	ldr	r0, [sp, #8]
   3fd64:	add	r0, r0, #1
   3fd68:	str	r0, [sp, #8]
   3fd6c:	ldr	r0, [sp, #4]
   3fd70:	add	r0, r0, #1
   3fd74:	str	r0, [sp, #4]
   3fd78:	ldrb	r0, [sp, #3]
   3fd7c:	ldrb	r1, [sp, #2]
   3fd80:	cmp	r0, r1
   3fd84:	beq	3fd30 <__assert_fail@plt+0x2e89c>
   3fd88:	ldrb	r0, [sp, #3]
   3fd8c:	ldrb	r1, [sp, #2]
   3fd90:	sub	r0, r0, r1
   3fd94:	str	r0, [fp, #-4]
   3fd98:	ldr	r0, [fp, #-4]
   3fd9c:	mov	sp, fp
   3fda0:	pop	{fp, pc}
   3fda4:	push	{fp, lr}
   3fda8:	mov	fp, sp
   3fdac:	sub	sp, sp, #16
   3fdb0:	str	r0, [sp, #8]
   3fdb4:	ldr	r0, [sp, #8]
   3fdb8:	bl	112e4 <__fpending@plt>
   3fdbc:	cmp	r0, #0
   3fdc0:	movw	r0, #0
   3fdc4:	movne	r0, #1
   3fdc8:	and	r0, r0, #1
   3fdcc:	strb	r0, [sp, #7]
   3fdd0:	ldr	r0, [sp, #8]
   3fdd4:	bl	112f0 <ferror_unlocked@plt>
   3fdd8:	cmp	r0, #0
   3fddc:	movw	r0, #0
   3fde0:	movne	r0, #1
   3fde4:	and	r0, r0, #1
   3fde8:	strb	r0, [sp, #6]
   3fdec:	ldr	r0, [sp, #8]
   3fdf0:	bl	412fc <__assert_fail@plt+0x2fe68>
   3fdf4:	cmp	r0, #0
   3fdf8:	movw	r0, #0
   3fdfc:	movne	r0, #1
   3fe00:	and	r0, r0, #1
   3fe04:	strb	r0, [sp, #5]
   3fe08:	ldrb	r0, [sp, #6]
   3fe0c:	tst	r0, #1
   3fe10:	bne	3fe3c <__assert_fail@plt+0x2e9a8>
   3fe14:	ldrb	r0, [sp, #5]
   3fe18:	tst	r0, #1
   3fe1c:	beq	3fe60 <__assert_fail@plt+0x2e9cc>
   3fe20:	ldrb	r0, [sp, #7]
   3fe24:	tst	r0, #1
   3fe28:	bne	3fe3c <__assert_fail@plt+0x2e9a8>
   3fe2c:	bl	113b0 <__errno_location@plt>
   3fe30:	ldr	r0, [r0]
   3fe34:	cmp	r0, #9
   3fe38:	beq	3fe60 <__assert_fail@plt+0x2e9cc>
   3fe3c:	ldrb	r0, [sp, #5]
   3fe40:	tst	r0, #1
   3fe44:	bne	3fe54 <__assert_fail@plt+0x2e9c0>
   3fe48:	bl	113b0 <__errno_location@plt>
   3fe4c:	movw	lr, #0
   3fe50:	str	lr, [r0]
   3fe54:	mvn	r0, #0
   3fe58:	str	r0, [fp, #-4]
   3fe5c:	b	3fe68 <__assert_fail@plt+0x2e9d4>
   3fe60:	movw	r0, #0
   3fe64:	str	r0, [fp, #-4]
   3fe68:	ldr	r0, [fp, #-4]
   3fe6c:	mov	sp, fp
   3fe70:	pop	{fp, pc}
   3fe74:	push	{fp, lr}
   3fe78:	mov	fp, sp
   3fe7c:	sub	sp, sp, #184	; 0xb8
   3fe80:	str	r0, [fp, #-8]
   3fe84:	str	r1, [fp, #-12]
   3fe88:	str	r2, [fp, #-16]
   3fe8c:	str	r3, [fp, #-20]	; 0xffffffec
   3fe90:	ldr	r0, [fp, #-12]
   3fe94:	ldr	r1, [fp, #-8]
   3fe98:	ldr	r1, [r1, #4]
   3fe9c:	cmp	r0, r1
   3fea0:	bhi	3fec0 <__assert_fail@plt+0x2ea2c>
   3fea4:	ldr	r0, [fp, #-12]
   3fea8:	ldr	r1, [fp, #-8]
   3feac:	str	r0, [r1]
   3feb0:	movw	r0, #1
   3feb4:	and	r0, r0, #1
   3feb8:	strb	r0, [fp, #-1]
   3febc:	b	412e0 <__assert_fail@plt+0x2fe4c>
   3fec0:	b	40278 <__assert_fail@plt+0x2ede4>
   3fec4:	b	40098 <__assert_fail@plt+0x2ec04>
   3fec8:	ldr	r0, [fp, #-20]	; 0xffffffec
   3fecc:	cmp	r0, #0
   3fed0:	bcs	3ffd4 <__assert_fail@plt+0x2eb40>
   3fed4:	ldr	r0, [fp, #-12]
   3fed8:	cmp	r0, #0
   3fedc:	bcs	3ff64 <__assert_fail@plt+0x2ead0>
   3fee0:	b	3ff00 <__assert_fail@plt+0x2ea6c>
   3fee4:	ldr	r0, [fp, #-12]
   3fee8:	ldr	r1, [fp, #-20]	; 0xffffffec
   3feec:	movw	r2, #127	; 0x7f
   3fef0:	udiv	r1, r2, r1
   3fef4:	cmp	r0, r1
   3fef8:	bcc	40068 <__assert_fail@plt+0x2ebd4>
   3fefc:	b	40080 <__assert_fail@plt+0x2ebec>
   3ff00:	b	3ff14 <__assert_fail@plt+0x2ea80>
   3ff04:	ldr	r0, [fp, #-20]	; 0xffffffec
   3ff08:	cmp	r0, #1
   3ff0c:	bcc	3ff24 <__assert_fail@plt+0x2ea90>
   3ff10:	b	3ff30 <__assert_fail@plt+0x2ea9c>
   3ff14:	ldr	r0, [fp, #-20]	; 0xffffffec
   3ff18:	movw	r1, #0
   3ff1c:	cmp	r1, r0
   3ff20:	bcs	3ff30 <__assert_fail@plt+0x2ea9c>
   3ff24:	movw	r0, #0
   3ff28:	str	r0, [fp, #-32]	; 0xffffffe0
   3ff2c:	b	3ff48 <__assert_fail@plt+0x2eab4>
   3ff30:	ldr	r0, [fp, #-20]	; 0xffffffec
   3ff34:	movw	r1, #0
   3ff38:	sub	r0, r1, r0
   3ff3c:	movw	r1, #127	; 0x7f
   3ff40:	udiv	r0, r1, r0
   3ff44:	str	r0, [fp, #-32]	; 0xffffffe0
   3ff48:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3ff4c:	ldr	r1, [fp, #-12]
   3ff50:	mvn	r2, #0
   3ff54:	sub	r1, r2, r1
   3ff58:	cmp	r0, r1
   3ff5c:	bls	40068 <__assert_fail@plt+0x2ebd4>
   3ff60:	b	40080 <__assert_fail@plt+0x2ebec>
   3ff64:	ldr	r0, [fp, #-20]	; 0xffffffec
   3ff68:	cmn	r0, #1
   3ff6c:	bne	3ffb8 <__assert_fail@plt+0x2eb24>
   3ff70:	b	3ff90 <__assert_fail@plt+0x2eafc>
   3ff74:	ldr	r0, [fp, #-12]
   3ff78:	mvn	r1, #127	; 0x7f
   3ff7c:	add	r0, r0, r1
   3ff80:	movw	r1, #0
   3ff84:	cmp	r1, r0
   3ff88:	bcc	40068 <__assert_fail@plt+0x2ebd4>
   3ff8c:	b	40080 <__assert_fail@plt+0x2ebec>
   3ff90:	ldr	r0, [fp, #-12]
   3ff94:	movw	r1, #0
   3ff98:	cmp	r1, r0
   3ff9c:	bcs	40080 <__assert_fail@plt+0x2ebec>
   3ffa0:	ldr	r0, [fp, #-12]
   3ffa4:	sub	r0, r0, #1
   3ffa8:	movw	r1, #127	; 0x7f
   3ffac:	cmp	r1, r0
   3ffb0:	bcc	40068 <__assert_fail@plt+0x2ebd4>
   3ffb4:	b	40080 <__assert_fail@plt+0x2ebec>
   3ffb8:	ldr	r0, [fp, #-20]	; 0xffffffec
   3ffbc:	mvn	r1, #127	; 0x7f
   3ffc0:	udiv	r0, r1, r0
   3ffc4:	ldr	r1, [fp, #-12]
   3ffc8:	cmp	r0, r1
   3ffcc:	bcc	40068 <__assert_fail@plt+0x2ebd4>
   3ffd0:	b	40080 <__assert_fail@plt+0x2ebec>
   3ffd4:	ldr	r0, [fp, #-20]	; 0xffffffec
   3ffd8:	cmp	r0, #0
   3ffdc:	bne	3ffe4 <__assert_fail@plt+0x2eb50>
   3ffe0:	b	40080 <__assert_fail@plt+0x2ebec>
   3ffe4:	ldr	r0, [fp, #-12]
   3ffe8:	cmp	r0, #0
   3ffec:	bcs	40050 <__assert_fail@plt+0x2ebbc>
   3fff0:	ldr	r0, [fp, #-12]
   3fff4:	cmn	r0, #1
   3fff8:	bne	40034 <__assert_fail@plt+0x2eba0>
   3fffc:	b	4001c <__assert_fail@plt+0x2eb88>
   40000:	ldr	r0, [fp, #-20]	; 0xffffffec
   40004:	mvn	r1, #127	; 0x7f
   40008:	add	r0, r0, r1
   4000c:	movw	r1, #0
   40010:	cmp	r1, r0
   40014:	bcc	40068 <__assert_fail@plt+0x2ebd4>
   40018:	b	40080 <__assert_fail@plt+0x2ebec>
   4001c:	ldr	r0, [fp, #-20]	; 0xffffffec
   40020:	sub	r0, r0, #1
   40024:	movw	r1, #127	; 0x7f
   40028:	cmp	r1, r0
   4002c:	bcc	40068 <__assert_fail@plt+0x2ebd4>
   40030:	b	40080 <__assert_fail@plt+0x2ebec>
   40034:	ldr	r0, [fp, #-12]
   40038:	mvn	r1, #127	; 0x7f
   4003c:	udiv	r0, r1, r0
   40040:	ldr	r1, [fp, #-20]	; 0xffffffec
   40044:	cmp	r0, r1
   40048:	bcc	40068 <__assert_fail@plt+0x2ebd4>
   4004c:	b	40080 <__assert_fail@plt+0x2ebec>
   40050:	ldr	r0, [fp, #-20]	; 0xffffffec
   40054:	movw	r1, #127	; 0x7f
   40058:	udiv	r0, r1, r0
   4005c:	ldr	r1, [fp, #-12]
   40060:	cmp	r0, r1
   40064:	bcs	40080 <__assert_fail@plt+0x2ebec>
   40068:	ldr	r0, [fp, #-12]
   4006c:	ldr	r1, [fp, #-20]	; 0xffffffec
   40070:	mul	r0, r0, r1
   40074:	sxtb	r0, r0
   40078:	str	r0, [fp, #-24]	; 0xffffffe8
   4007c:	b	411f8 <__assert_fail@plt+0x2fd64>
   40080:	ldr	r0, [fp, #-12]
   40084:	ldr	r1, [fp, #-20]	; 0xffffffec
   40088:	mul	r0, r0, r1
   4008c:	sxtb	r0, r0
   40090:	str	r0, [fp, #-24]	; 0xffffffe8
   40094:	b	41214 <__assert_fail@plt+0x2fd80>
   40098:	ldr	r0, [fp, #-20]	; 0xffffffec
   4009c:	cmp	r0, #0
   400a0:	bcs	401ac <__assert_fail@plt+0x2ed18>
   400a4:	ldr	r0, [fp, #-12]
   400a8:	cmp	r0, #0
   400ac:	bcs	40134 <__assert_fail@plt+0x2eca0>
   400b0:	b	400d0 <__assert_fail@plt+0x2ec3c>
   400b4:	ldr	r0, [fp, #-12]
   400b8:	ldr	r1, [fp, #-20]	; 0xffffffec
   400bc:	movw	r2, #255	; 0xff
   400c0:	udiv	r1, r2, r1
   400c4:	cmp	r0, r1
   400c8:	bcc	40248 <__assert_fail@plt+0x2edb4>
   400cc:	b	40260 <__assert_fail@plt+0x2edcc>
   400d0:	b	400e4 <__assert_fail@plt+0x2ec50>
   400d4:	ldr	r0, [fp, #-20]	; 0xffffffec
   400d8:	cmp	r0, #1
   400dc:	bcc	400f4 <__assert_fail@plt+0x2ec60>
   400e0:	b	40100 <__assert_fail@plt+0x2ec6c>
   400e4:	ldr	r0, [fp, #-20]	; 0xffffffec
   400e8:	movw	r1, #0
   400ec:	cmp	r1, r0
   400f0:	bcs	40100 <__assert_fail@plt+0x2ec6c>
   400f4:	movw	r0, #0
   400f8:	str	r0, [fp, #-36]	; 0xffffffdc
   400fc:	b	40118 <__assert_fail@plt+0x2ec84>
   40100:	ldr	r0, [fp, #-20]	; 0xffffffec
   40104:	movw	r1, #0
   40108:	sub	r0, r1, r0
   4010c:	movw	r1, #255	; 0xff
   40110:	udiv	r0, r1, r0
   40114:	str	r0, [fp, #-36]	; 0xffffffdc
   40118:	ldr	r0, [fp, #-36]	; 0xffffffdc
   4011c:	ldr	r1, [fp, #-12]
   40120:	mvn	r2, #0
   40124:	sub	r1, r2, r1
   40128:	cmp	r0, r1
   4012c:	bls	40248 <__assert_fail@plt+0x2edb4>
   40130:	b	40260 <__assert_fail@plt+0x2edcc>
   40134:	b	4013c <__assert_fail@plt+0x2eca8>
   40138:	b	40140 <__assert_fail@plt+0x2ecac>
   4013c:	b	40190 <__assert_fail@plt+0x2ecfc>
   40140:	ldr	r0, [fp, #-20]	; 0xffffffec
   40144:	cmn	r0, #1
   40148:	bne	40190 <__assert_fail@plt+0x2ecfc>
   4014c:	b	40168 <__assert_fail@plt+0x2ecd4>
   40150:	ldr	r0, [fp, #-12]
   40154:	add	r0, r0, #0
   40158:	movw	r1, #0
   4015c:	cmp	r1, r0
   40160:	bcc	40248 <__assert_fail@plt+0x2edb4>
   40164:	b	40260 <__assert_fail@plt+0x2edcc>
   40168:	ldr	r0, [fp, #-12]
   4016c:	movw	r1, #0
   40170:	cmp	r1, r0
   40174:	bcs	40260 <__assert_fail@plt+0x2edcc>
   40178:	ldr	r0, [fp, #-12]
   4017c:	sub	r0, r0, #1
   40180:	mvn	r1, #0
   40184:	cmp	r1, r0
   40188:	bcc	40248 <__assert_fail@plt+0x2edb4>
   4018c:	b	40260 <__assert_fail@plt+0x2edcc>
   40190:	ldr	r0, [fp, #-20]	; 0xffffffec
   40194:	movw	r1, #0
   40198:	udiv	r0, r1, r0
   4019c:	ldr	r1, [fp, #-12]
   401a0:	cmp	r0, r1
   401a4:	bcc	40248 <__assert_fail@plt+0x2edb4>
   401a8:	b	40260 <__assert_fail@plt+0x2edcc>
   401ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   401b0:	cmp	r0, #0
   401b4:	bne	401bc <__assert_fail@plt+0x2ed28>
   401b8:	b	40260 <__assert_fail@plt+0x2edcc>
   401bc:	ldr	r0, [fp, #-12]
   401c0:	cmp	r0, #0
   401c4:	bcs	40230 <__assert_fail@plt+0x2ed9c>
   401c8:	b	401d0 <__assert_fail@plt+0x2ed3c>
   401cc:	b	401d4 <__assert_fail@plt+0x2ed40>
   401d0:	b	40214 <__assert_fail@plt+0x2ed80>
   401d4:	ldr	r0, [fp, #-12]
   401d8:	cmn	r0, #1
   401dc:	bne	40214 <__assert_fail@plt+0x2ed80>
   401e0:	b	401fc <__assert_fail@plt+0x2ed68>
   401e4:	ldr	r0, [fp, #-20]	; 0xffffffec
   401e8:	add	r0, r0, #0
   401ec:	movw	r1, #0
   401f0:	cmp	r1, r0
   401f4:	bcc	40248 <__assert_fail@plt+0x2edb4>
   401f8:	b	40260 <__assert_fail@plt+0x2edcc>
   401fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   40200:	sub	r0, r0, #1
   40204:	mvn	r1, #0
   40208:	cmp	r1, r0
   4020c:	bcc	40248 <__assert_fail@plt+0x2edb4>
   40210:	b	40260 <__assert_fail@plt+0x2edcc>
   40214:	ldr	r0, [fp, #-12]
   40218:	movw	r1, #0
   4021c:	udiv	r0, r1, r0
   40220:	ldr	r1, [fp, #-20]	; 0xffffffec
   40224:	cmp	r0, r1
   40228:	bcc	40248 <__assert_fail@plt+0x2edb4>
   4022c:	b	40260 <__assert_fail@plt+0x2edcc>
   40230:	ldr	r0, [fp, #-20]	; 0xffffffec
   40234:	movw	r1, #255	; 0xff
   40238:	udiv	r0, r1, r0
   4023c:	ldr	r1, [fp, #-12]
   40240:	cmp	r0, r1
   40244:	bcs	40260 <__assert_fail@plt+0x2edcc>
   40248:	ldr	r0, [fp, #-12]
   4024c:	ldr	r1, [fp, #-20]	; 0xffffffec
   40250:	mul	r0, r0, r1
   40254:	and	r0, r0, #255	; 0xff
   40258:	str	r0, [fp, #-24]	; 0xffffffe8
   4025c:	b	411f8 <__assert_fail@plt+0x2fd64>
   40260:	ldr	r0, [fp, #-12]
   40264:	ldr	r1, [fp, #-20]	; 0xffffffec
   40268:	mul	r0, r0, r1
   4026c:	and	r0, r0, #255	; 0xff
   40270:	str	r0, [fp, #-24]	; 0xffffffe8
   40274:	b	41214 <__assert_fail@plt+0x2fd80>
   40278:	b	40630 <__assert_fail@plt+0x2f19c>
   4027c:	b	40450 <__assert_fail@plt+0x2efbc>
   40280:	ldr	r0, [fp, #-20]	; 0xffffffec
   40284:	cmp	r0, #0
   40288:	bcs	4038c <__assert_fail@plt+0x2eef8>
   4028c:	ldr	r0, [fp, #-12]
   40290:	cmp	r0, #0
   40294:	bcs	4031c <__assert_fail@plt+0x2ee88>
   40298:	b	402b8 <__assert_fail@plt+0x2ee24>
   4029c:	ldr	r0, [fp, #-12]
   402a0:	ldr	r1, [fp, #-20]	; 0xffffffec
   402a4:	movw	r2, #32767	; 0x7fff
   402a8:	udiv	r1, r2, r1
   402ac:	cmp	r0, r1
   402b0:	bcc	40420 <__assert_fail@plt+0x2ef8c>
   402b4:	b	40438 <__assert_fail@plt+0x2efa4>
   402b8:	b	402cc <__assert_fail@plt+0x2ee38>
   402bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   402c0:	cmp	r0, #1
   402c4:	bcc	402dc <__assert_fail@plt+0x2ee48>
   402c8:	b	402e8 <__assert_fail@plt+0x2ee54>
   402cc:	ldr	r0, [fp, #-20]	; 0xffffffec
   402d0:	movw	r1, #0
   402d4:	cmp	r1, r0
   402d8:	bcs	402e8 <__assert_fail@plt+0x2ee54>
   402dc:	movw	r0, #0
   402e0:	str	r0, [fp, #-40]	; 0xffffffd8
   402e4:	b	40300 <__assert_fail@plt+0x2ee6c>
   402e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   402ec:	movw	r1, #0
   402f0:	sub	r0, r1, r0
   402f4:	movw	r1, #32767	; 0x7fff
   402f8:	udiv	r0, r1, r0
   402fc:	str	r0, [fp, #-40]	; 0xffffffd8
   40300:	ldr	r0, [fp, #-40]	; 0xffffffd8
   40304:	ldr	r1, [fp, #-12]
   40308:	mvn	r2, #0
   4030c:	sub	r1, r2, r1
   40310:	cmp	r0, r1
   40314:	bls	40420 <__assert_fail@plt+0x2ef8c>
   40318:	b	40438 <__assert_fail@plt+0x2efa4>
   4031c:	ldr	r0, [fp, #-20]	; 0xffffffec
   40320:	cmn	r0, #1
   40324:	bne	40370 <__assert_fail@plt+0x2eedc>
   40328:	b	40348 <__assert_fail@plt+0x2eeb4>
   4032c:	ldr	r0, [pc, #4036]	; 412f8 <__assert_fail@plt+0x2fe64>
   40330:	ldr	r1, [fp, #-12]
   40334:	add	r0, r1, r0
   40338:	movw	r1, #0
   4033c:	cmp	r1, r0
   40340:	bcc	40420 <__assert_fail@plt+0x2ef8c>
   40344:	b	40438 <__assert_fail@plt+0x2efa4>
   40348:	ldr	r0, [fp, #-12]
   4034c:	movw	r1, #0
   40350:	cmp	r1, r0
   40354:	bcs	40438 <__assert_fail@plt+0x2efa4>
   40358:	ldr	r0, [fp, #-12]
   4035c:	sub	r0, r0, #1
   40360:	movw	r1, #32767	; 0x7fff
   40364:	cmp	r1, r0
   40368:	bcc	40420 <__assert_fail@plt+0x2ef8c>
   4036c:	b	40438 <__assert_fail@plt+0x2efa4>
   40370:	ldr	r0, [pc, #3968]	; 412f8 <__assert_fail@plt+0x2fe64>
   40374:	ldr	r1, [fp, #-20]	; 0xffffffec
   40378:	udiv	r0, r0, r1
   4037c:	ldr	r1, [fp, #-12]
   40380:	cmp	r0, r1
   40384:	bcc	40420 <__assert_fail@plt+0x2ef8c>
   40388:	b	40438 <__assert_fail@plt+0x2efa4>
   4038c:	ldr	r0, [fp, #-20]	; 0xffffffec
   40390:	cmp	r0, #0
   40394:	bne	4039c <__assert_fail@plt+0x2ef08>
   40398:	b	40438 <__assert_fail@plt+0x2efa4>
   4039c:	ldr	r0, [fp, #-12]
   403a0:	cmp	r0, #0
   403a4:	bcs	40408 <__assert_fail@plt+0x2ef74>
   403a8:	ldr	r0, [fp, #-12]
   403ac:	cmn	r0, #1
   403b0:	bne	403ec <__assert_fail@plt+0x2ef58>
   403b4:	b	403d4 <__assert_fail@plt+0x2ef40>
   403b8:	ldr	r0, [pc, #3896]	; 412f8 <__assert_fail@plt+0x2fe64>
   403bc:	ldr	r1, [fp, #-20]	; 0xffffffec
   403c0:	add	r0, r1, r0
   403c4:	movw	r1, #0
   403c8:	cmp	r1, r0
   403cc:	bcc	40420 <__assert_fail@plt+0x2ef8c>
   403d0:	b	40438 <__assert_fail@plt+0x2efa4>
   403d4:	ldr	r0, [fp, #-20]	; 0xffffffec
   403d8:	sub	r0, r0, #1
   403dc:	movw	r1, #32767	; 0x7fff
   403e0:	cmp	r1, r0
   403e4:	bcc	40420 <__assert_fail@plt+0x2ef8c>
   403e8:	b	40438 <__assert_fail@plt+0x2efa4>
   403ec:	ldr	r0, [pc, #3844]	; 412f8 <__assert_fail@plt+0x2fe64>
   403f0:	ldr	r1, [fp, #-12]
   403f4:	udiv	r0, r0, r1
   403f8:	ldr	r1, [fp, #-20]	; 0xffffffec
   403fc:	cmp	r0, r1
   40400:	bcc	40420 <__assert_fail@plt+0x2ef8c>
   40404:	b	40438 <__assert_fail@plt+0x2efa4>
   40408:	ldr	r0, [fp, #-20]	; 0xffffffec
   4040c:	movw	r1, #32767	; 0x7fff
   40410:	udiv	r0, r1, r0
   40414:	ldr	r1, [fp, #-12]
   40418:	cmp	r0, r1
   4041c:	bcs	40438 <__assert_fail@plt+0x2efa4>
   40420:	ldr	r0, [fp, #-12]
   40424:	ldr	r1, [fp, #-20]	; 0xffffffec
   40428:	mul	r0, r0, r1
   4042c:	sxth	r0, r0
   40430:	str	r0, [fp, #-24]	; 0xffffffe8
   40434:	b	411f8 <__assert_fail@plt+0x2fd64>
   40438:	ldr	r0, [fp, #-12]
   4043c:	ldr	r1, [fp, #-20]	; 0xffffffec
   40440:	mul	r0, r0, r1
   40444:	sxth	r0, r0
   40448:	str	r0, [fp, #-24]	; 0xffffffe8
   4044c:	b	41214 <__assert_fail@plt+0x2fd80>
   40450:	ldr	r0, [fp, #-20]	; 0xffffffec
   40454:	cmp	r0, #0
   40458:	bcs	40564 <__assert_fail@plt+0x2f0d0>
   4045c:	ldr	r0, [fp, #-12]
   40460:	cmp	r0, #0
   40464:	bcs	404ec <__assert_fail@plt+0x2f058>
   40468:	b	40488 <__assert_fail@plt+0x2eff4>
   4046c:	ldr	r0, [fp, #-12]
   40470:	ldr	r1, [fp, #-20]	; 0xffffffec
   40474:	movw	r2, #65535	; 0xffff
   40478:	udiv	r1, r2, r1
   4047c:	cmp	r0, r1
   40480:	bcc	40600 <__assert_fail@plt+0x2f16c>
   40484:	b	40618 <__assert_fail@plt+0x2f184>
   40488:	b	4049c <__assert_fail@plt+0x2f008>
   4048c:	ldr	r0, [fp, #-20]	; 0xffffffec
   40490:	cmp	r0, #1
   40494:	bcc	404ac <__assert_fail@plt+0x2f018>
   40498:	b	404b8 <__assert_fail@plt+0x2f024>
   4049c:	ldr	r0, [fp, #-20]	; 0xffffffec
   404a0:	movw	r1, #0
   404a4:	cmp	r1, r0
   404a8:	bcs	404b8 <__assert_fail@plt+0x2f024>
   404ac:	movw	r0, #0
   404b0:	str	r0, [fp, #-44]	; 0xffffffd4
   404b4:	b	404d0 <__assert_fail@plt+0x2f03c>
   404b8:	ldr	r0, [fp, #-20]	; 0xffffffec
   404bc:	movw	r1, #0
   404c0:	sub	r0, r1, r0
   404c4:	movw	r1, #65535	; 0xffff
   404c8:	udiv	r0, r1, r0
   404cc:	str	r0, [fp, #-44]	; 0xffffffd4
   404d0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   404d4:	ldr	r1, [fp, #-12]
   404d8:	mvn	r2, #0
   404dc:	sub	r1, r2, r1
   404e0:	cmp	r0, r1
   404e4:	bls	40600 <__assert_fail@plt+0x2f16c>
   404e8:	b	40618 <__assert_fail@plt+0x2f184>
   404ec:	b	404f4 <__assert_fail@plt+0x2f060>
   404f0:	b	404f8 <__assert_fail@plt+0x2f064>
   404f4:	b	40548 <__assert_fail@plt+0x2f0b4>
   404f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   404fc:	cmn	r0, #1
   40500:	bne	40548 <__assert_fail@plt+0x2f0b4>
   40504:	b	40520 <__assert_fail@plt+0x2f08c>
   40508:	ldr	r0, [fp, #-12]
   4050c:	add	r0, r0, #0
   40510:	movw	r1, #0
   40514:	cmp	r1, r0
   40518:	bcc	40600 <__assert_fail@plt+0x2f16c>
   4051c:	b	40618 <__assert_fail@plt+0x2f184>
   40520:	ldr	r0, [fp, #-12]
   40524:	movw	r1, #0
   40528:	cmp	r1, r0
   4052c:	bcs	40618 <__assert_fail@plt+0x2f184>
   40530:	ldr	r0, [fp, #-12]
   40534:	sub	r0, r0, #1
   40538:	mvn	r1, #0
   4053c:	cmp	r1, r0
   40540:	bcc	40600 <__assert_fail@plt+0x2f16c>
   40544:	b	40618 <__assert_fail@plt+0x2f184>
   40548:	ldr	r0, [fp, #-20]	; 0xffffffec
   4054c:	movw	r1, #0
   40550:	udiv	r0, r1, r0
   40554:	ldr	r1, [fp, #-12]
   40558:	cmp	r0, r1
   4055c:	bcc	40600 <__assert_fail@plt+0x2f16c>
   40560:	b	40618 <__assert_fail@plt+0x2f184>
   40564:	ldr	r0, [fp, #-20]	; 0xffffffec
   40568:	cmp	r0, #0
   4056c:	bne	40574 <__assert_fail@plt+0x2f0e0>
   40570:	b	40618 <__assert_fail@plt+0x2f184>
   40574:	ldr	r0, [fp, #-12]
   40578:	cmp	r0, #0
   4057c:	bcs	405e8 <__assert_fail@plt+0x2f154>
   40580:	b	40588 <__assert_fail@plt+0x2f0f4>
   40584:	b	4058c <__assert_fail@plt+0x2f0f8>
   40588:	b	405cc <__assert_fail@plt+0x2f138>
   4058c:	ldr	r0, [fp, #-12]
   40590:	cmn	r0, #1
   40594:	bne	405cc <__assert_fail@plt+0x2f138>
   40598:	b	405b4 <__assert_fail@plt+0x2f120>
   4059c:	ldr	r0, [fp, #-20]	; 0xffffffec
   405a0:	add	r0, r0, #0
   405a4:	movw	r1, #0
   405a8:	cmp	r1, r0
   405ac:	bcc	40600 <__assert_fail@plt+0x2f16c>
   405b0:	b	40618 <__assert_fail@plt+0x2f184>
   405b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   405b8:	sub	r0, r0, #1
   405bc:	mvn	r1, #0
   405c0:	cmp	r1, r0
   405c4:	bcc	40600 <__assert_fail@plt+0x2f16c>
   405c8:	b	40618 <__assert_fail@plt+0x2f184>
   405cc:	ldr	r0, [fp, #-12]
   405d0:	movw	r1, #0
   405d4:	udiv	r0, r1, r0
   405d8:	ldr	r1, [fp, #-20]	; 0xffffffec
   405dc:	cmp	r0, r1
   405e0:	bcc	40600 <__assert_fail@plt+0x2f16c>
   405e4:	b	40618 <__assert_fail@plt+0x2f184>
   405e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   405ec:	movw	r1, #65535	; 0xffff
   405f0:	udiv	r0, r1, r0
   405f4:	ldr	r1, [fp, #-12]
   405f8:	cmp	r0, r1
   405fc:	bcs	40618 <__assert_fail@plt+0x2f184>
   40600:	ldr	r0, [fp, #-12]
   40604:	ldr	r1, [fp, #-20]	; 0xffffffec
   40608:	mul	r0, r0, r1
   4060c:	uxth	r0, r0
   40610:	str	r0, [fp, #-24]	; 0xffffffe8
   40614:	b	411f8 <__assert_fail@plt+0x2fd64>
   40618:	ldr	r0, [fp, #-12]
   4061c:	ldr	r1, [fp, #-20]	; 0xffffffec
   40620:	mul	r0, r0, r1
   40624:	uxth	r0, r0
   40628:	str	r0, [fp, #-24]	; 0xffffffe8
   4062c:	b	41214 <__assert_fail@plt+0x2fd80>
   40630:	b	40634 <__assert_fail@plt+0x2f1a0>
   40634:	b	407f8 <__assert_fail@plt+0x2f364>
   40638:	ldr	r0, [fp, #-20]	; 0xffffffec
   4063c:	cmp	r0, #0
   40640:	bcs	40740 <__assert_fail@plt+0x2f2ac>
   40644:	ldr	r0, [fp, #-12]
   40648:	cmp	r0, #0
   4064c:	bcs	406d4 <__assert_fail@plt+0x2f240>
   40650:	b	40670 <__assert_fail@plt+0x2f1dc>
   40654:	ldr	r0, [pc, #3220]	; 412f0 <__assert_fail@plt+0x2fe5c>
   40658:	ldr	r1, [fp, #-12]
   4065c:	ldr	r2, [fp, #-20]	; 0xffffffec
   40660:	udiv	r0, r0, r2
   40664:	cmp	r1, r0
   40668:	bcc	407d0 <__assert_fail@plt+0x2f33c>
   4066c:	b	407e4 <__assert_fail@plt+0x2f350>
   40670:	b	40684 <__assert_fail@plt+0x2f1f0>
   40674:	ldr	r0, [fp, #-20]	; 0xffffffec
   40678:	cmp	r0, #1
   4067c:	bcc	40694 <__assert_fail@plt+0x2f200>
   40680:	b	406a0 <__assert_fail@plt+0x2f20c>
   40684:	ldr	r0, [fp, #-20]	; 0xffffffec
   40688:	movw	r1, #0
   4068c:	cmp	r1, r0
   40690:	bcs	406a0 <__assert_fail@plt+0x2f20c>
   40694:	movw	r0, #0
   40698:	str	r0, [fp, #-48]	; 0xffffffd0
   4069c:	b	406b8 <__assert_fail@plt+0x2f224>
   406a0:	ldr	r0, [pc, #3144]	; 412f0 <__assert_fail@plt+0x2fe5c>
   406a4:	ldr	r1, [fp, #-20]	; 0xffffffec
   406a8:	movw	r2, #0
   406ac:	sub	r1, r2, r1
   406b0:	udiv	r0, r0, r1
   406b4:	str	r0, [fp, #-48]	; 0xffffffd0
   406b8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   406bc:	ldr	r1, [fp, #-12]
   406c0:	mvn	r2, #0
   406c4:	sub	r1, r2, r1
   406c8:	cmp	r0, r1
   406cc:	bls	407d0 <__assert_fail@plt+0x2f33c>
   406d0:	b	407e4 <__assert_fail@plt+0x2f350>
   406d4:	ldr	r0, [fp, #-20]	; 0xffffffec
   406d8:	cmn	r0, #1
   406dc:	bne	40724 <__assert_fail@plt+0x2f290>
   406e0:	b	406fc <__assert_fail@plt+0x2f268>
   406e4:	ldr	r0, [fp, #-12]
   406e8:	add	r0, r0, #-2147483648	; 0x80000000
   406ec:	movw	r1, #0
   406f0:	cmp	r1, r0
   406f4:	bcc	407d0 <__assert_fail@plt+0x2f33c>
   406f8:	b	407e4 <__assert_fail@plt+0x2f350>
   406fc:	ldr	r0, [fp, #-12]
   40700:	movw	r1, #0
   40704:	cmp	r1, r0
   40708:	bcs	407e4 <__assert_fail@plt+0x2f350>
   4070c:	ldr	r0, [pc, #3036]	; 412f0 <__assert_fail@plt+0x2fe5c>
   40710:	ldr	r1, [fp, #-12]
   40714:	sub	r1, r1, #1
   40718:	cmp	r0, r1
   4071c:	bcc	407d0 <__assert_fail@plt+0x2f33c>
   40720:	b	407e4 <__assert_fail@plt+0x2f350>
   40724:	ldr	r0, [pc, #3016]	; 412f4 <__assert_fail@plt+0x2fe60>
   40728:	ldr	r1, [fp, #-20]	; 0xffffffec
   4072c:	udiv	r0, r0, r1
   40730:	ldr	r1, [fp, #-12]
   40734:	cmp	r0, r1
   40738:	bcc	407d0 <__assert_fail@plt+0x2f33c>
   4073c:	b	407e4 <__assert_fail@plt+0x2f350>
   40740:	ldr	r0, [fp, #-20]	; 0xffffffec
   40744:	cmp	r0, #0
   40748:	bne	40750 <__assert_fail@plt+0x2f2bc>
   4074c:	b	407e4 <__assert_fail@plt+0x2f350>
   40750:	ldr	r0, [fp, #-12]
   40754:	cmp	r0, #0
   40758:	bcs	407b8 <__assert_fail@plt+0x2f324>
   4075c:	ldr	r0, [fp, #-12]
   40760:	cmn	r0, #1
   40764:	bne	4079c <__assert_fail@plt+0x2f308>
   40768:	b	40784 <__assert_fail@plt+0x2f2f0>
   4076c:	ldr	r0, [fp, #-20]	; 0xffffffec
   40770:	add	r0, r0, #-2147483648	; 0x80000000
   40774:	movw	r1, #0
   40778:	cmp	r1, r0
   4077c:	bcc	407d0 <__assert_fail@plt+0x2f33c>
   40780:	b	407e4 <__assert_fail@plt+0x2f350>
   40784:	ldr	r0, [pc, #2916]	; 412f0 <__assert_fail@plt+0x2fe5c>
   40788:	ldr	r1, [fp, #-20]	; 0xffffffec
   4078c:	sub	r1, r1, #1
   40790:	cmp	r0, r1
   40794:	bcc	407d0 <__assert_fail@plt+0x2f33c>
   40798:	b	407e4 <__assert_fail@plt+0x2f350>
   4079c:	ldr	r0, [pc, #2896]	; 412f4 <__assert_fail@plt+0x2fe60>
   407a0:	ldr	r1, [fp, #-12]
   407a4:	udiv	r0, r0, r1
   407a8:	ldr	r1, [fp, #-20]	; 0xffffffec
   407ac:	cmp	r0, r1
   407b0:	bcc	407d0 <__assert_fail@plt+0x2f33c>
   407b4:	b	407e4 <__assert_fail@plt+0x2f350>
   407b8:	ldr	r0, [pc, #2864]	; 412f0 <__assert_fail@plt+0x2fe5c>
   407bc:	ldr	r1, [fp, #-20]	; 0xffffffec
   407c0:	udiv	r0, r0, r1
   407c4:	ldr	r1, [fp, #-12]
   407c8:	cmp	r0, r1
   407cc:	bcs	407e4 <__assert_fail@plt+0x2f350>
   407d0:	ldr	r0, [fp, #-12]
   407d4:	ldr	r1, [fp, #-20]	; 0xffffffec
   407d8:	mul	r0, r0, r1
   407dc:	str	r0, [fp, #-24]	; 0xffffffe8
   407e0:	b	411f8 <__assert_fail@plt+0x2fd64>
   407e4:	ldr	r0, [fp, #-12]
   407e8:	ldr	r1, [fp, #-20]	; 0xffffffec
   407ec:	mul	r0, r0, r1
   407f0:	str	r0, [fp, #-24]	; 0xffffffe8
   407f4:	b	41214 <__assert_fail@plt+0x2fd80>
   407f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   407fc:	cmp	r0, #0
   40800:	bcs	4090c <__assert_fail@plt+0x2f478>
   40804:	ldr	r0, [fp, #-12]
   40808:	cmp	r0, #0
   4080c:	bcs	40894 <__assert_fail@plt+0x2f400>
   40810:	b	40830 <__assert_fail@plt+0x2f39c>
   40814:	ldr	r0, [fp, #-12]
   40818:	ldr	r1, [fp, #-20]	; 0xffffffec
   4081c:	mvn	r2, #0
   40820:	udiv	r1, r2, r1
   40824:	cmp	r0, r1
   40828:	bcc	409a8 <__assert_fail@plt+0x2f514>
   4082c:	b	409bc <__assert_fail@plt+0x2f528>
   40830:	b	40844 <__assert_fail@plt+0x2f3b0>
   40834:	ldr	r0, [fp, #-20]	; 0xffffffec
   40838:	cmp	r0, #1
   4083c:	bcc	40854 <__assert_fail@plt+0x2f3c0>
   40840:	b	40860 <__assert_fail@plt+0x2f3cc>
   40844:	ldr	r0, [fp, #-20]	; 0xffffffec
   40848:	movw	r1, #0
   4084c:	cmp	r1, r0
   40850:	bcs	40860 <__assert_fail@plt+0x2f3cc>
   40854:	movw	r0, #1
   40858:	str	r0, [fp, #-52]	; 0xffffffcc
   4085c:	b	40878 <__assert_fail@plt+0x2f3e4>
   40860:	ldr	r0, [fp, #-20]	; 0xffffffec
   40864:	movw	r1, #0
   40868:	sub	r0, r1, r0
   4086c:	mvn	r1, #0
   40870:	udiv	r0, r1, r0
   40874:	str	r0, [fp, #-52]	; 0xffffffcc
   40878:	ldr	r0, [fp, #-52]	; 0xffffffcc
   4087c:	ldr	r1, [fp, #-12]
   40880:	mvn	r2, #0
   40884:	sub	r1, r2, r1
   40888:	cmp	r0, r1
   4088c:	bls	409a8 <__assert_fail@plt+0x2f514>
   40890:	b	409bc <__assert_fail@plt+0x2f528>
   40894:	b	4089c <__assert_fail@plt+0x2f408>
   40898:	b	408a0 <__assert_fail@plt+0x2f40c>
   4089c:	b	408f0 <__assert_fail@plt+0x2f45c>
   408a0:	ldr	r0, [fp, #-20]	; 0xffffffec
   408a4:	cmn	r0, #1
   408a8:	bne	408f0 <__assert_fail@plt+0x2f45c>
   408ac:	b	408c8 <__assert_fail@plt+0x2f434>
   408b0:	ldr	r0, [fp, #-12]
   408b4:	add	r0, r0, #0
   408b8:	movw	r1, #0
   408bc:	cmp	r1, r0
   408c0:	bcc	409a8 <__assert_fail@plt+0x2f514>
   408c4:	b	409bc <__assert_fail@plt+0x2f528>
   408c8:	ldr	r0, [fp, #-12]
   408cc:	movw	r1, #0
   408d0:	cmp	r1, r0
   408d4:	bcs	409bc <__assert_fail@plt+0x2f528>
   408d8:	ldr	r0, [fp, #-12]
   408dc:	sub	r0, r0, #1
   408e0:	mvn	r1, #0
   408e4:	cmp	r1, r0
   408e8:	bcc	409a8 <__assert_fail@plt+0x2f514>
   408ec:	b	409bc <__assert_fail@plt+0x2f528>
   408f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   408f4:	movw	r1, #0
   408f8:	udiv	r0, r1, r0
   408fc:	ldr	r1, [fp, #-12]
   40900:	cmp	r0, r1
   40904:	bcc	409a8 <__assert_fail@plt+0x2f514>
   40908:	b	409bc <__assert_fail@plt+0x2f528>
   4090c:	ldr	r0, [fp, #-20]	; 0xffffffec
   40910:	cmp	r0, #0
   40914:	bne	4091c <__assert_fail@plt+0x2f488>
   40918:	b	409bc <__assert_fail@plt+0x2f528>
   4091c:	ldr	r0, [fp, #-12]
   40920:	cmp	r0, #0
   40924:	bcs	40990 <__assert_fail@plt+0x2f4fc>
   40928:	b	40930 <__assert_fail@plt+0x2f49c>
   4092c:	b	40934 <__assert_fail@plt+0x2f4a0>
   40930:	b	40974 <__assert_fail@plt+0x2f4e0>
   40934:	ldr	r0, [fp, #-12]
   40938:	cmn	r0, #1
   4093c:	bne	40974 <__assert_fail@plt+0x2f4e0>
   40940:	b	4095c <__assert_fail@plt+0x2f4c8>
   40944:	ldr	r0, [fp, #-20]	; 0xffffffec
   40948:	add	r0, r0, #0
   4094c:	movw	r1, #0
   40950:	cmp	r1, r0
   40954:	bcc	409a8 <__assert_fail@plt+0x2f514>
   40958:	b	409bc <__assert_fail@plt+0x2f528>
   4095c:	ldr	r0, [fp, #-20]	; 0xffffffec
   40960:	sub	r0, r0, #1
   40964:	mvn	r1, #0
   40968:	cmp	r1, r0
   4096c:	bcc	409a8 <__assert_fail@plt+0x2f514>
   40970:	b	409bc <__assert_fail@plt+0x2f528>
   40974:	ldr	r0, [fp, #-12]
   40978:	movw	r1, #0
   4097c:	udiv	r0, r1, r0
   40980:	ldr	r1, [fp, #-20]	; 0xffffffec
   40984:	cmp	r0, r1
   40988:	bcc	409a8 <__assert_fail@plt+0x2f514>
   4098c:	b	409bc <__assert_fail@plt+0x2f528>
   40990:	ldr	r0, [fp, #-20]	; 0xffffffec
   40994:	mvn	r1, #0
   40998:	udiv	r0, r1, r0
   4099c:	ldr	r1, [fp, #-12]
   409a0:	cmp	r0, r1
   409a4:	bcs	409bc <__assert_fail@plt+0x2f528>
   409a8:	ldr	r0, [fp, #-12]
   409ac:	ldr	r1, [fp, #-20]	; 0xffffffec
   409b0:	mul	r0, r0, r1
   409b4:	str	r0, [fp, #-24]	; 0xffffffe8
   409b8:	b	411f8 <__assert_fail@plt+0x2fd64>
   409bc:	ldr	r0, [fp, #-12]
   409c0:	ldr	r1, [fp, #-20]	; 0xffffffec
   409c4:	mul	r0, r0, r1
   409c8:	str	r0, [fp, #-24]	; 0xffffffe8
   409cc:	b	41214 <__assert_fail@plt+0x2fd80>
   409d0:	b	409d4 <__assert_fail@plt+0x2f540>
   409d4:	b	40b98 <__assert_fail@plt+0x2f704>
   409d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   409dc:	cmp	r0, #0
   409e0:	bcs	40ae0 <__assert_fail@plt+0x2f64c>
   409e4:	ldr	r0, [fp, #-12]
   409e8:	cmp	r0, #0
   409ec:	bcs	40a74 <__assert_fail@plt+0x2f5e0>
   409f0:	b	40a10 <__assert_fail@plt+0x2f57c>
   409f4:	ldr	r0, [pc, #2292]	; 412f0 <__assert_fail@plt+0x2fe5c>
   409f8:	ldr	r1, [fp, #-12]
   409fc:	ldr	r2, [fp, #-20]	; 0xffffffec
   40a00:	udiv	r0, r0, r2
   40a04:	cmp	r1, r0
   40a08:	bcc	40b70 <__assert_fail@plt+0x2f6dc>
   40a0c:	b	40b84 <__assert_fail@plt+0x2f6f0>
   40a10:	b	40a24 <__assert_fail@plt+0x2f590>
   40a14:	ldr	r0, [fp, #-20]	; 0xffffffec
   40a18:	cmp	r0, #1
   40a1c:	bcc	40a34 <__assert_fail@plt+0x2f5a0>
   40a20:	b	40a40 <__assert_fail@plt+0x2f5ac>
   40a24:	ldr	r0, [fp, #-20]	; 0xffffffec
   40a28:	movw	r1, #0
   40a2c:	cmp	r1, r0
   40a30:	bcs	40a40 <__assert_fail@plt+0x2f5ac>
   40a34:	movw	r0, #0
   40a38:	str	r0, [fp, #-56]	; 0xffffffc8
   40a3c:	b	40a58 <__assert_fail@plt+0x2f5c4>
   40a40:	ldr	r0, [pc, #2216]	; 412f0 <__assert_fail@plt+0x2fe5c>
   40a44:	ldr	r1, [fp, #-20]	; 0xffffffec
   40a48:	movw	r2, #0
   40a4c:	sub	r1, r2, r1
   40a50:	udiv	r0, r0, r1
   40a54:	str	r0, [fp, #-56]	; 0xffffffc8
   40a58:	ldr	r0, [fp, #-56]	; 0xffffffc8
   40a5c:	ldr	r1, [fp, #-12]
   40a60:	mvn	r2, #0
   40a64:	sub	r1, r2, r1
   40a68:	cmp	r0, r1
   40a6c:	bls	40b70 <__assert_fail@plt+0x2f6dc>
   40a70:	b	40b84 <__assert_fail@plt+0x2f6f0>
   40a74:	ldr	r0, [fp, #-20]	; 0xffffffec
   40a78:	cmn	r0, #1
   40a7c:	bne	40ac4 <__assert_fail@plt+0x2f630>
   40a80:	b	40a9c <__assert_fail@plt+0x2f608>
   40a84:	ldr	r0, [fp, #-12]
   40a88:	add	r0, r0, #-2147483648	; 0x80000000
   40a8c:	movw	r1, #0
   40a90:	cmp	r1, r0
   40a94:	bcc	40b70 <__assert_fail@plt+0x2f6dc>
   40a98:	b	40b84 <__assert_fail@plt+0x2f6f0>
   40a9c:	ldr	r0, [fp, #-12]
   40aa0:	movw	r1, #0
   40aa4:	cmp	r1, r0
   40aa8:	bcs	40b84 <__assert_fail@plt+0x2f6f0>
   40aac:	ldr	r0, [pc, #2108]	; 412f0 <__assert_fail@plt+0x2fe5c>
   40ab0:	ldr	r1, [fp, #-12]
   40ab4:	sub	r1, r1, #1
   40ab8:	cmp	r0, r1
   40abc:	bcc	40b70 <__assert_fail@plt+0x2f6dc>
   40ac0:	b	40b84 <__assert_fail@plt+0x2f6f0>
   40ac4:	ldr	r0, [pc, #2088]	; 412f4 <__assert_fail@plt+0x2fe60>
   40ac8:	ldr	r1, [fp, #-20]	; 0xffffffec
   40acc:	udiv	r0, r0, r1
   40ad0:	ldr	r1, [fp, #-12]
   40ad4:	cmp	r0, r1
   40ad8:	bcc	40b70 <__assert_fail@plt+0x2f6dc>
   40adc:	b	40b84 <__assert_fail@plt+0x2f6f0>
   40ae0:	ldr	r0, [fp, #-20]	; 0xffffffec
   40ae4:	cmp	r0, #0
   40ae8:	bne	40af0 <__assert_fail@plt+0x2f65c>
   40aec:	b	40b84 <__assert_fail@plt+0x2f6f0>
   40af0:	ldr	r0, [fp, #-12]
   40af4:	cmp	r0, #0
   40af8:	bcs	40b58 <__assert_fail@plt+0x2f6c4>
   40afc:	ldr	r0, [fp, #-12]
   40b00:	cmn	r0, #1
   40b04:	bne	40b3c <__assert_fail@plt+0x2f6a8>
   40b08:	b	40b24 <__assert_fail@plt+0x2f690>
   40b0c:	ldr	r0, [fp, #-20]	; 0xffffffec
   40b10:	add	r0, r0, #-2147483648	; 0x80000000
   40b14:	movw	r1, #0
   40b18:	cmp	r1, r0
   40b1c:	bcc	40b70 <__assert_fail@plt+0x2f6dc>
   40b20:	b	40b84 <__assert_fail@plt+0x2f6f0>
   40b24:	ldr	r0, [pc, #1988]	; 412f0 <__assert_fail@plt+0x2fe5c>
   40b28:	ldr	r1, [fp, #-20]	; 0xffffffec
   40b2c:	sub	r1, r1, #1
   40b30:	cmp	r0, r1
   40b34:	bcc	40b70 <__assert_fail@plt+0x2f6dc>
   40b38:	b	40b84 <__assert_fail@plt+0x2f6f0>
   40b3c:	ldr	r0, [pc, #1968]	; 412f4 <__assert_fail@plt+0x2fe60>
   40b40:	ldr	r1, [fp, #-12]
   40b44:	udiv	r0, r0, r1
   40b48:	ldr	r1, [fp, #-20]	; 0xffffffec
   40b4c:	cmp	r0, r1
   40b50:	bcc	40b70 <__assert_fail@plt+0x2f6dc>
   40b54:	b	40b84 <__assert_fail@plt+0x2f6f0>
   40b58:	ldr	r0, [pc, #1936]	; 412f0 <__assert_fail@plt+0x2fe5c>
   40b5c:	ldr	r1, [fp, #-20]	; 0xffffffec
   40b60:	udiv	r0, r0, r1
   40b64:	ldr	r1, [fp, #-12]
   40b68:	cmp	r0, r1
   40b6c:	bcs	40b84 <__assert_fail@plt+0x2f6f0>
   40b70:	ldr	r0, [fp, #-12]
   40b74:	ldr	r1, [fp, #-20]	; 0xffffffec
   40b78:	mul	r0, r0, r1
   40b7c:	str	r0, [fp, #-24]	; 0xffffffe8
   40b80:	b	411f8 <__assert_fail@plt+0x2fd64>
   40b84:	ldr	r0, [fp, #-12]
   40b88:	ldr	r1, [fp, #-20]	; 0xffffffec
   40b8c:	mul	r0, r0, r1
   40b90:	str	r0, [fp, #-24]	; 0xffffffe8
   40b94:	b	41214 <__assert_fail@plt+0x2fd80>
   40b98:	ldr	r0, [fp, #-20]	; 0xffffffec
   40b9c:	cmp	r0, #0
   40ba0:	bcs	40cac <__assert_fail@plt+0x2f818>
   40ba4:	ldr	r0, [fp, #-12]
   40ba8:	cmp	r0, #0
   40bac:	bcs	40c34 <__assert_fail@plt+0x2f7a0>
   40bb0:	b	40bd0 <__assert_fail@plt+0x2f73c>
   40bb4:	ldr	r0, [fp, #-12]
   40bb8:	ldr	r1, [fp, #-20]	; 0xffffffec
   40bbc:	mvn	r2, #0
   40bc0:	udiv	r1, r2, r1
   40bc4:	cmp	r0, r1
   40bc8:	bcc	40d48 <__assert_fail@plt+0x2f8b4>
   40bcc:	b	40d5c <__assert_fail@plt+0x2f8c8>
   40bd0:	b	40be4 <__assert_fail@plt+0x2f750>
   40bd4:	ldr	r0, [fp, #-20]	; 0xffffffec
   40bd8:	cmp	r0, #1
   40bdc:	bcc	40bf4 <__assert_fail@plt+0x2f760>
   40be0:	b	40c00 <__assert_fail@plt+0x2f76c>
   40be4:	ldr	r0, [fp, #-20]	; 0xffffffec
   40be8:	movw	r1, #0
   40bec:	cmp	r1, r0
   40bf0:	bcs	40c00 <__assert_fail@plt+0x2f76c>
   40bf4:	movw	r0, #1
   40bf8:	str	r0, [fp, #-60]	; 0xffffffc4
   40bfc:	b	40c18 <__assert_fail@plt+0x2f784>
   40c00:	ldr	r0, [fp, #-20]	; 0xffffffec
   40c04:	movw	r1, #0
   40c08:	sub	r0, r1, r0
   40c0c:	mvn	r1, #0
   40c10:	udiv	r0, r1, r0
   40c14:	str	r0, [fp, #-60]	; 0xffffffc4
   40c18:	ldr	r0, [fp, #-60]	; 0xffffffc4
   40c1c:	ldr	r1, [fp, #-12]
   40c20:	mvn	r2, #0
   40c24:	sub	r1, r2, r1
   40c28:	cmp	r0, r1
   40c2c:	bls	40d48 <__assert_fail@plt+0x2f8b4>
   40c30:	b	40d5c <__assert_fail@plt+0x2f8c8>
   40c34:	b	40c3c <__assert_fail@plt+0x2f7a8>
   40c38:	b	40c40 <__assert_fail@plt+0x2f7ac>
   40c3c:	b	40c90 <__assert_fail@plt+0x2f7fc>
   40c40:	ldr	r0, [fp, #-20]	; 0xffffffec
   40c44:	cmn	r0, #1
   40c48:	bne	40c90 <__assert_fail@plt+0x2f7fc>
   40c4c:	b	40c68 <__assert_fail@plt+0x2f7d4>
   40c50:	ldr	r0, [fp, #-12]
   40c54:	add	r0, r0, #0
   40c58:	movw	r1, #0
   40c5c:	cmp	r1, r0
   40c60:	bcc	40d48 <__assert_fail@plt+0x2f8b4>
   40c64:	b	40d5c <__assert_fail@plt+0x2f8c8>
   40c68:	ldr	r0, [fp, #-12]
   40c6c:	movw	r1, #0
   40c70:	cmp	r1, r0
   40c74:	bcs	40d5c <__assert_fail@plt+0x2f8c8>
   40c78:	ldr	r0, [fp, #-12]
   40c7c:	sub	r0, r0, #1
   40c80:	mvn	r1, #0
   40c84:	cmp	r1, r0
   40c88:	bcc	40d48 <__assert_fail@plt+0x2f8b4>
   40c8c:	b	40d5c <__assert_fail@plt+0x2f8c8>
   40c90:	ldr	r0, [fp, #-20]	; 0xffffffec
   40c94:	movw	r1, #0
   40c98:	udiv	r0, r1, r0
   40c9c:	ldr	r1, [fp, #-12]
   40ca0:	cmp	r0, r1
   40ca4:	bcc	40d48 <__assert_fail@plt+0x2f8b4>
   40ca8:	b	40d5c <__assert_fail@plt+0x2f8c8>
   40cac:	ldr	r0, [fp, #-20]	; 0xffffffec
   40cb0:	cmp	r0, #0
   40cb4:	bne	40cbc <__assert_fail@plt+0x2f828>
   40cb8:	b	40d5c <__assert_fail@plt+0x2f8c8>
   40cbc:	ldr	r0, [fp, #-12]
   40cc0:	cmp	r0, #0
   40cc4:	bcs	40d30 <__assert_fail@plt+0x2f89c>
   40cc8:	b	40cd0 <__assert_fail@plt+0x2f83c>
   40ccc:	b	40cd4 <__assert_fail@plt+0x2f840>
   40cd0:	b	40d14 <__assert_fail@plt+0x2f880>
   40cd4:	ldr	r0, [fp, #-12]
   40cd8:	cmn	r0, #1
   40cdc:	bne	40d14 <__assert_fail@plt+0x2f880>
   40ce0:	b	40cfc <__assert_fail@plt+0x2f868>
   40ce4:	ldr	r0, [fp, #-20]	; 0xffffffec
   40ce8:	add	r0, r0, #0
   40cec:	movw	r1, #0
   40cf0:	cmp	r1, r0
   40cf4:	bcc	40d48 <__assert_fail@plt+0x2f8b4>
   40cf8:	b	40d5c <__assert_fail@plt+0x2f8c8>
   40cfc:	ldr	r0, [fp, #-20]	; 0xffffffec
   40d00:	sub	r0, r0, #1
   40d04:	mvn	r1, #0
   40d08:	cmp	r1, r0
   40d0c:	bcc	40d48 <__assert_fail@plt+0x2f8b4>
   40d10:	b	40d5c <__assert_fail@plt+0x2f8c8>
   40d14:	ldr	r0, [fp, #-12]
   40d18:	movw	r1, #0
   40d1c:	udiv	r0, r1, r0
   40d20:	ldr	r1, [fp, #-20]	; 0xffffffec
   40d24:	cmp	r0, r1
   40d28:	bcc	40d48 <__assert_fail@plt+0x2f8b4>
   40d2c:	b	40d5c <__assert_fail@plt+0x2f8c8>
   40d30:	ldr	r0, [fp, #-20]	; 0xffffffec
   40d34:	mvn	r1, #0
   40d38:	udiv	r0, r1, r0
   40d3c:	ldr	r1, [fp, #-12]
   40d40:	cmp	r0, r1
   40d44:	bcs	40d5c <__assert_fail@plt+0x2f8c8>
   40d48:	ldr	r0, [fp, #-12]
   40d4c:	ldr	r1, [fp, #-20]	; 0xffffffec
   40d50:	mul	r0, r0, r1
   40d54:	str	r0, [fp, #-24]	; 0xffffffe8
   40d58:	b	411f8 <__assert_fail@plt+0x2fd64>
   40d5c:	ldr	r0, [fp, #-12]
   40d60:	ldr	r1, [fp, #-20]	; 0xffffffec
   40d64:	mul	r0, r0, r1
   40d68:	str	r0, [fp, #-24]	; 0xffffffe8
   40d6c:	b	41214 <__assert_fail@plt+0x2fd80>
   40d70:	b	40fc4 <__assert_fail@plt+0x2fb30>
   40d74:	ldr	r0, [fp, #-20]	; 0xffffffec
   40d78:	cmp	r0, #0
   40d7c:	bcs	40edc <__assert_fail@plt+0x2fa48>
   40d80:	ldr	r0, [fp, #-12]
   40d84:	cmp	r0, #0
   40d88:	bcs	40e58 <__assert_fail@plt+0x2f9c4>
   40d8c:	b	40d90 <__assert_fail@plt+0x2f8fc>
   40d90:	ldr	r0, [fp, #-12]
   40d94:	ldr	r2, [fp, #-20]	; 0xffffffec
   40d98:	mvn	r1, #0
   40d9c:	mvn	r3, #-2147483648	; 0x80000000
   40da0:	mov	ip, #0
   40da4:	str	r0, [fp, #-64]	; 0xffffffc0
   40da8:	mov	r0, r1
   40dac:	mov	r1, r3
   40db0:	mov	r3, ip
   40db4:	bl	43688 <__assert_fail@plt+0x321f4>
   40db8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   40dbc:	subs	r0, r2, r0
   40dc0:	rscs	r1, r1, #0
   40dc4:	str	r0, [fp, #-68]	; 0xffffffbc
   40dc8:	str	r1, [fp, #-72]	; 0xffffffb8
   40dcc:	blt	40f9c <__assert_fail@plt+0x2fb08>
   40dd0:	b	40fb0 <__assert_fail@plt+0x2fb1c>
   40dd4:	b	40de8 <__assert_fail@plt+0x2f954>
   40dd8:	ldr	r0, [fp, #-20]	; 0xffffffec
   40ddc:	cmp	r0, #1
   40de0:	bcc	40df8 <__assert_fail@plt+0x2f964>
   40de4:	b	40e0c <__assert_fail@plt+0x2f978>
   40de8:	ldr	r0, [fp, #-20]	; 0xffffffec
   40dec:	movw	r1, #0
   40df0:	cmp	r1, r0
   40df4:	bcs	40e0c <__assert_fail@plt+0x2f978>
   40df8:	mov	r0, #0
   40dfc:	mvn	r1, #0
   40e00:	str	r1, [fp, #-76]	; 0xffffffb4
   40e04:	str	r0, [fp, #-80]	; 0xffffffb0
   40e08:	b	40e30 <__assert_fail@plt+0x2f99c>
   40e0c:	ldr	r0, [fp, #-20]	; 0xffffffec
   40e10:	rsb	r2, r0, #0
   40e14:	mvn	r0, #0
   40e18:	mvn	r1, #-2147483648	; 0x80000000
   40e1c:	mov	r3, #0
   40e20:	bl	43688 <__assert_fail@plt+0x321f4>
   40e24:	str	r0, [fp, #-76]	; 0xffffffb4
   40e28:	str	r1, [fp, #-80]	; 0xffffffb0
   40e2c:	b	40e30 <__assert_fail@plt+0x2f99c>
   40e30:	ldr	r0, [fp, #-80]	; 0xffffffb0
   40e34:	ldr	r1, [fp, #-76]	; 0xffffffb4
   40e38:	ldr	r2, [fp, #-12]
   40e3c:	mvn	r2, r2
   40e40:	subs	r1, r2, r1
   40e44:	rscs	r0, r0, #0
   40e48:	str	r1, [fp, #-84]	; 0xffffffac
   40e4c:	str	r0, [fp, #-88]	; 0xffffffa8
   40e50:	bge	40f9c <__assert_fail@plt+0x2fb08>
   40e54:	b	40fb0 <__assert_fail@plt+0x2fb1c>
   40e58:	ldr	r0, [fp, #-20]	; 0xffffffec
   40e5c:	cmn	r0, #1
   40e60:	bne	40ea8 <__assert_fail@plt+0x2fa14>
   40e64:	b	40e88 <__assert_fail@plt+0x2f9f4>
   40e68:	ldr	r0, [fp, #-12]
   40e6c:	rsbs	r0, r0, #0
   40e70:	mov	r1, #0
   40e74:	sbcs	r1, r1, #-2147483648	; 0x80000000
   40e78:	str	r0, [sp, #92]	; 0x5c
   40e7c:	str	r1, [sp, #88]	; 0x58
   40e80:	blt	40f9c <__assert_fail@plt+0x2fb08>
   40e84:	b	40fb0 <__assert_fail@plt+0x2fb1c>
   40e88:	ldr	r0, [fp, #-12]
   40e8c:	movw	r1, #0
   40e90:	cmp	r1, r0
   40e94:	bcs	40fb0 <__assert_fail@plt+0x2fb1c>
   40e98:	mov	r0, #0
   40e9c:	cmp	r0, #0
   40ea0:	bne	40f9c <__assert_fail@plt+0x2fb08>
   40ea4:	b	40fb0 <__assert_fail@plt+0x2fb1c>
   40ea8:	ldr	r2, [fp, #-20]	; 0xffffffec
   40eac:	mov	r1, #-2147483648	; 0x80000000
   40eb0:	mov	r0, #0
   40eb4:	str	r0, [sp, #84]	; 0x54
   40eb8:	ldr	r3, [sp, #84]	; 0x54
   40ebc:	bl	435b4 <__assert_fail@plt+0x32120>
   40ec0:	ldr	r2, [fp, #-12]
   40ec4:	subs	r0, r0, r2
   40ec8:	sbcs	r1, r1, #0
   40ecc:	str	r0, [sp, #80]	; 0x50
   40ed0:	str	r1, [sp, #76]	; 0x4c
   40ed4:	blt	40f9c <__assert_fail@plt+0x2fb08>
   40ed8:	b	40fb0 <__assert_fail@plt+0x2fb1c>
   40edc:	ldr	r0, [fp, #-20]	; 0xffffffec
   40ee0:	cmp	r0, #0
   40ee4:	bne	40eec <__assert_fail@plt+0x2fa58>
   40ee8:	b	40fb0 <__assert_fail@plt+0x2fb1c>
   40eec:	ldr	r0, [fp, #-12]
   40ef0:	cmp	r0, #0
   40ef4:	bcs	40f6c <__assert_fail@plt+0x2fad8>
   40ef8:	ldr	r0, [fp, #-12]
   40efc:	cmn	r0, #1
   40f00:	bne	40f38 <__assert_fail@plt+0x2faa4>
   40f04:	b	40f28 <__assert_fail@plt+0x2fa94>
   40f08:	ldr	r0, [fp, #-20]	; 0xffffffec
   40f0c:	rsbs	r0, r0, #0
   40f10:	mov	r1, #0
   40f14:	sbcs	r1, r1, #-2147483648	; 0x80000000
   40f18:	str	r0, [sp, #72]	; 0x48
   40f1c:	str	r1, [sp, #68]	; 0x44
   40f20:	blt	40f9c <__assert_fail@plt+0x2fb08>
   40f24:	b	40fb0 <__assert_fail@plt+0x2fb1c>
   40f28:	mov	r0, #0
   40f2c:	cmp	r0, #0
   40f30:	bne	40f9c <__assert_fail@plt+0x2fb08>
   40f34:	b	40fb0 <__assert_fail@plt+0x2fb1c>
   40f38:	ldr	r2, [fp, #-12]
   40f3c:	mov	r1, #-2147483648	; 0x80000000
   40f40:	mov	r0, #0
   40f44:	str	r0, [sp, #64]	; 0x40
   40f48:	ldr	r3, [sp, #64]	; 0x40
   40f4c:	bl	435b4 <__assert_fail@plt+0x32120>
   40f50:	ldr	r2, [fp, #-20]	; 0xffffffec
   40f54:	subs	r0, r0, r2
   40f58:	sbcs	r1, r1, #0
   40f5c:	str	r0, [sp, #60]	; 0x3c
   40f60:	str	r1, [sp, #56]	; 0x38
   40f64:	blt	40f9c <__assert_fail@plt+0x2fb08>
   40f68:	b	40fb0 <__assert_fail@plt+0x2fb1c>
   40f6c:	ldr	r2, [fp, #-20]	; 0xffffffec
   40f70:	mvn	r0, #0
   40f74:	mvn	r1, #-2147483648	; 0x80000000
   40f78:	mov	r3, #0
   40f7c:	bl	43688 <__assert_fail@plt+0x321f4>
   40f80:	ldr	r2, [fp, #-12]
   40f84:	subs	r0, r0, r2
   40f88:	sbcs	r1, r1, #0
   40f8c:	str	r0, [sp, #52]	; 0x34
   40f90:	str	r1, [sp, #48]	; 0x30
   40f94:	bge	40fb0 <__assert_fail@plt+0x2fb1c>
   40f98:	b	40f9c <__assert_fail@plt+0x2fb08>
   40f9c:	ldr	r0, [fp, #-12]
   40fa0:	ldr	r1, [fp, #-20]	; 0xffffffec
   40fa4:	mul	r0, r0, r1
   40fa8:	str	r0, [fp, #-24]	; 0xffffffe8
   40fac:	b	411f8 <__assert_fail@plt+0x2fd64>
   40fb0:	ldr	r0, [fp, #-12]
   40fb4:	ldr	r1, [fp, #-20]	; 0xffffffec
   40fb8:	mul	r0, r0, r1
   40fbc:	str	r0, [fp, #-24]	; 0xffffffe8
   40fc0:	b	41214 <__assert_fail@plt+0x2fd80>
   40fc4:	ldr	r0, [fp, #-20]	; 0xffffffec
   40fc8:	cmp	r0, #0
   40fcc:	bcs	41118 <__assert_fail@plt+0x2fc84>
   40fd0:	ldr	r0, [fp, #-12]
   40fd4:	cmp	r0, #0
   40fd8:	bcs	410a0 <__assert_fail@plt+0x2fc0c>
   40fdc:	b	41018 <__assert_fail@plt+0x2fb84>
   40fe0:	ldr	r0, [fp, #-12]
   40fe4:	ldr	r2, [fp, #-20]	; 0xffffffec
   40fe8:	mvn	r1, #0
   40fec:	mov	r3, #0
   40ff0:	str	r0, [sp, #44]	; 0x2c
   40ff4:	mov	r0, r1
   40ff8:	bl	43688 <__assert_fail@plt+0x321f4>
   40ffc:	ldr	r2, [sp, #44]	; 0x2c
   41000:	subs	r0, r2, r0
   41004:	rscs	r1, r1, #0
   41008:	str	r0, [sp, #40]	; 0x28
   4100c:	str	r1, [sp, #36]	; 0x24
   41010:	bcc	411d0 <__assert_fail@plt+0x2fd3c>
   41014:	b	411e4 <__assert_fail@plt+0x2fd50>
   41018:	b	4102c <__assert_fail@plt+0x2fb98>
   4101c:	ldr	r0, [fp, #-20]	; 0xffffffec
   41020:	cmp	r0, #1
   41024:	bcc	4103c <__assert_fail@plt+0x2fba8>
   41028:	b	41050 <__assert_fail@plt+0x2fbbc>
   4102c:	ldr	r0, [fp, #-20]	; 0xffffffec
   41030:	movw	r1, #0
   41034:	cmp	r1, r0
   41038:	bcs	41050 <__assert_fail@plt+0x2fbbc>
   4103c:	mov	r0, #1
   41040:	mvn	r1, #0
   41044:	str	r1, [sp, #32]
   41048:	str	r0, [sp, #28]
   4104c:	b	41078 <__assert_fail@plt+0x2fbe4>
   41050:	ldr	r0, [fp, #-20]	; 0xffffffec
   41054:	rsb	r2, r0, #0
   41058:	mvn	r0, #0
   4105c:	mov	r3, #0
   41060:	str	r0, [sp, #24]
   41064:	ldr	r1, [sp, #24]
   41068:	bl	43688 <__assert_fail@plt+0x321f4>
   4106c:	str	r0, [sp, #32]
   41070:	str	r1, [sp, #28]
   41074:	b	41078 <__assert_fail@plt+0x2fbe4>
   41078:	ldr	r0, [sp, #28]
   4107c:	ldr	r1, [sp, #32]
   41080:	ldr	r2, [fp, #-12]
   41084:	mvn	r2, r2
   41088:	subs	r1, r2, r1
   4108c:	rscs	r0, r0, #0
   41090:	str	r1, [sp, #20]
   41094:	str	r0, [sp, #16]
   41098:	bcs	411d0 <__assert_fail@plt+0x2fd3c>
   4109c:	b	411e4 <__assert_fail@plt+0x2fd50>
   410a0:	b	410a8 <__assert_fail@plt+0x2fc14>
   410a4:	b	410ac <__assert_fail@plt+0x2fc18>
   410a8:	b	410fc <__assert_fail@plt+0x2fc68>
   410ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   410b0:	cmn	r0, #1
   410b4:	bne	410fc <__assert_fail@plt+0x2fc68>
   410b8:	b	410d4 <__assert_fail@plt+0x2fc40>
   410bc:	ldr	r0, [fp, #-12]
   410c0:	add	r0, r0, #0
   410c4:	movw	r1, #0
   410c8:	cmp	r1, r0
   410cc:	bcc	411d0 <__assert_fail@plt+0x2fd3c>
   410d0:	b	411e4 <__assert_fail@plt+0x2fd50>
   410d4:	ldr	r0, [fp, #-12]
   410d8:	movw	r1, #0
   410dc:	cmp	r1, r0
   410e0:	bcs	411e4 <__assert_fail@plt+0x2fd50>
   410e4:	ldr	r0, [fp, #-12]
   410e8:	sub	r0, r0, #1
   410ec:	mvn	r1, #0
   410f0:	cmp	r1, r0
   410f4:	bcc	411d0 <__assert_fail@plt+0x2fd3c>
   410f8:	b	411e4 <__assert_fail@plt+0x2fd50>
   410fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   41100:	movw	r1, #0
   41104:	udiv	r0, r1, r0
   41108:	ldr	r1, [fp, #-12]
   4110c:	cmp	r0, r1
   41110:	bcc	411d0 <__assert_fail@plt+0x2fd3c>
   41114:	b	411e4 <__assert_fail@plt+0x2fd50>
   41118:	ldr	r0, [fp, #-20]	; 0xffffffec
   4111c:	cmp	r0, #0
   41120:	bne	41128 <__assert_fail@plt+0x2fc94>
   41124:	b	411e4 <__assert_fail@plt+0x2fd50>
   41128:	ldr	r0, [fp, #-12]
   4112c:	cmp	r0, #0
   41130:	bcs	4119c <__assert_fail@plt+0x2fd08>
   41134:	b	4113c <__assert_fail@plt+0x2fca8>
   41138:	b	41140 <__assert_fail@plt+0x2fcac>
   4113c:	b	41180 <__assert_fail@plt+0x2fcec>
   41140:	ldr	r0, [fp, #-12]
   41144:	cmn	r0, #1
   41148:	bne	41180 <__assert_fail@plt+0x2fcec>
   4114c:	b	41168 <__assert_fail@plt+0x2fcd4>
   41150:	ldr	r0, [fp, #-20]	; 0xffffffec
   41154:	add	r0, r0, #0
   41158:	movw	r1, #0
   4115c:	cmp	r1, r0
   41160:	bcc	411d0 <__assert_fail@plt+0x2fd3c>
   41164:	b	411e4 <__assert_fail@plt+0x2fd50>
   41168:	ldr	r0, [fp, #-20]	; 0xffffffec
   4116c:	sub	r0, r0, #1
   41170:	mvn	r1, #0
   41174:	cmp	r1, r0
   41178:	bcc	411d0 <__assert_fail@plt+0x2fd3c>
   4117c:	b	411e4 <__assert_fail@plt+0x2fd50>
   41180:	ldr	r0, [fp, #-12]
   41184:	movw	r1, #0
   41188:	udiv	r0, r1, r0
   4118c:	ldr	r1, [fp, #-20]	; 0xffffffec
   41190:	cmp	r0, r1
   41194:	bcc	411d0 <__assert_fail@plt+0x2fd3c>
   41198:	b	411e4 <__assert_fail@plt+0x2fd50>
   4119c:	ldr	r2, [fp, #-20]	; 0xffffffec
   411a0:	mvn	r0, #0
   411a4:	mov	r3, #0
   411a8:	str	r0, [sp, #12]
   411ac:	ldr	r1, [sp, #12]
   411b0:	bl	43688 <__assert_fail@plt+0x321f4>
   411b4:	ldr	r2, [fp, #-12]
   411b8:	subs	r0, r0, r2
   411bc:	sbcs	r1, r1, #0
   411c0:	str	r0, [sp, #8]
   411c4:	str	r1, [sp, #4]
   411c8:	bcs	411e4 <__assert_fail@plt+0x2fd50>
   411cc:	b	411d0 <__assert_fail@plt+0x2fd3c>
   411d0:	ldr	r0, [fp, #-12]
   411d4:	ldr	r1, [fp, #-20]	; 0xffffffec
   411d8:	mul	r0, r0, r1
   411dc:	str	r0, [fp, #-24]	; 0xffffffe8
   411e0:	b	411f8 <__assert_fail@plt+0x2fd64>
   411e4:	ldr	r0, [fp, #-12]
   411e8:	ldr	r1, [fp, #-20]	; 0xffffffec
   411ec:	mul	r0, r0, r1
   411f0:	str	r0, [fp, #-24]	; 0xffffffe8
   411f4:	b	41214 <__assert_fail@plt+0x2fd80>
   411f8:	bl	113b0 <__errno_location@plt>
   411fc:	movw	lr, #12
   41200:	str	lr, [r0]
   41204:	movw	r0, #0
   41208:	and	r0, r0, #1
   4120c:	strb	r0, [fp, #-1]
   41210:	b	412e0 <__assert_fail@plt+0x2fe4c>
   41214:	ldr	r0, [fp, #-8]
   41218:	ldr	r0, [r0, #8]
   4121c:	ldr	r1, [fp, #-16]
   41220:	cmp	r0, r1
   41224:	bne	4127c <__assert_fail@plt+0x2fde8>
   41228:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4122c:	bl	3fbd8 <__assert_fail@plt+0x2e744>
   41230:	str	r0, [fp, #-28]	; 0xffffffe4
   41234:	ldr	r0, [fp, #-28]	; 0xffffffe4
   41238:	movw	lr, #0
   4123c:	cmp	r0, lr
   41240:	beq	41278 <__assert_fail@plt+0x2fde4>
   41244:	ldr	r0, [fp, #-8]
   41248:	ldr	r0, [r0, #8]
   4124c:	movw	r1, #0
   41250:	cmp	r0, r1
   41254:	beq	41278 <__assert_fail@plt+0x2fde4>
   41258:	ldr	r0, [fp, #-28]	; 0xffffffe4
   4125c:	ldr	r1, [fp, #-8]
   41260:	ldr	r1, [r1, #8]
   41264:	ldr	r2, [fp, #-8]
   41268:	ldr	r2, [r2]
   4126c:	ldr	r3, [fp, #-20]	; 0xffffffec
   41270:	mul	r2, r2, r3
   41274:	bl	11248 <memcpy@plt>
   41278:	b	41290 <__assert_fail@plt+0x2fdfc>
   4127c:	ldr	r0, [fp, #-8]
   41280:	ldr	r0, [r0, #8]
   41284:	ldr	r1, [fp, #-24]	; 0xffffffe8
   41288:	bl	3fc48 <__assert_fail@plt+0x2e7b4>
   4128c:	str	r0, [fp, #-28]	; 0xffffffe4
   41290:	ldr	r0, [fp, #-28]	; 0xffffffe4
   41294:	movw	r1, #0
   41298:	cmp	r0, r1
   4129c:	bne	412b0 <__assert_fail@plt+0x2fe1c>
   412a0:	movw	r0, #0
   412a4:	and	r0, r0, #1
   412a8:	strb	r0, [fp, #-1]
   412ac:	b	412e0 <__assert_fail@plt+0x2fe4c>
   412b0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   412b4:	ldr	r1, [fp, #-8]
   412b8:	str	r0, [r1, #8]
   412bc:	ldr	r0, [fp, #-12]
   412c0:	ldr	r1, [fp, #-8]
   412c4:	str	r0, [r1, #4]
   412c8:	ldr	r0, [fp, #-12]
   412cc:	ldr	r1, [fp, #-8]
   412d0:	str	r0, [r1]
   412d4:	movw	r0, #1
   412d8:	and	r0, r0, #1
   412dc:	strb	r0, [fp, #-1]
   412e0:	ldrb	r0, [fp, #-1]
   412e4:	and	r0, r0, #1
   412e8:	mov	sp, fp
   412ec:	pop	{fp, pc}
   412f0:	svcvc	0x00ffffff
   412f4:	andhi	r0, r0, r0
   412f8:			; <UNDEFINED> instruction: 0xffff8000
   412fc:	push	{fp, lr}
   41300:	mov	fp, sp
   41304:	sub	sp, sp, #32
   41308:	str	r0, [fp, #-8]
   4130c:	movw	r0, #0
   41310:	str	r0, [fp, #-12]
   41314:	str	r0, [sp, #12]
   41318:	ldr	r0, [fp, #-8]
   4131c:	bl	113ec <fileno@plt>
   41320:	str	r0, [sp, #16]
   41324:	ldr	r0, [sp, #16]
   41328:	cmp	r0, #0
   4132c:	bge	41340 <__assert_fail@plt+0x2feac>
   41330:	ldr	r0, [fp, #-8]
   41334:	bl	11404 <fclose@plt>
   41338:	str	r0, [fp, #-4]
   4133c:	b	413dc <__assert_fail@plt+0x2ff48>
   41340:	ldr	r0, [fp, #-8]
   41344:	bl	11344 <__freading@plt>
   41348:	cmp	r0, #0
   4134c:	beq	41384 <__assert_fail@plt+0x2fef0>
   41350:	ldr	r0, [fp, #-8]
   41354:	bl	113ec <fileno@plt>
   41358:	mov	lr, sp
   4135c:	mov	r1, #1
   41360:	str	r1, [lr]
   41364:	mov	r1, #0
   41368:	mov	r2, r1
   4136c:	mov	r3, r1
   41370:	bl	112cc <lseek64@plt>
   41374:	and	r0, r0, r1
   41378:	cmn	r0, #1
   4137c:	beq	413a0 <__assert_fail@plt+0x2ff0c>
   41380:	b	41384 <__assert_fail@plt+0x2fef0>
   41384:	ldr	r0, [fp, #-8]
   41388:	bl	413e8 <__assert_fail@plt+0x2ff54>
   4138c:	cmp	r0, #0
   41390:	beq	413a0 <__assert_fail@plt+0x2ff0c>
   41394:	bl	113b0 <__errno_location@plt>
   41398:	ldr	r0, [r0]
   4139c:	str	r0, [fp, #-12]
   413a0:	ldr	r0, [fp, #-8]
   413a4:	bl	11404 <fclose@plt>
   413a8:	str	r0, [sp, #12]
   413ac:	ldr	r0, [fp, #-12]
   413b0:	cmp	r0, #0
   413b4:	beq	413d4 <__assert_fail@plt+0x2ff40>
   413b8:	ldr	r0, [fp, #-12]
   413bc:	str	r0, [sp, #8]
   413c0:	bl	113b0 <__errno_location@plt>
   413c4:	ldr	lr, [sp, #8]
   413c8:	str	lr, [r0]
   413cc:	mvn	r0, #0
   413d0:	str	r0, [sp, #12]
   413d4:	ldr	r0, [sp, #12]
   413d8:	str	r0, [fp, #-4]
   413dc:	ldr	r0, [fp, #-4]
   413e0:	mov	sp, fp
   413e4:	pop	{fp, pc}
   413e8:	push	{fp, lr}
   413ec:	mov	fp, sp
   413f0:	sub	sp, sp, #8
   413f4:	str	r0, [sp]
   413f8:	ldr	r0, [sp]
   413fc:	movw	r1, #0
   41400:	cmp	r0, r1
   41404:	beq	41418 <__assert_fail@plt+0x2ff84>
   41408:	ldr	r0, [sp]
   4140c:	bl	11344 <__freading@plt>
   41410:	cmp	r0, #0
   41414:	bne	41428 <__assert_fail@plt+0x2ff94>
   41418:	ldr	r0, [sp]
   4141c:	bl	11200 <fflush@plt>
   41420:	str	r0, [sp, #4]
   41424:	b	4143c <__assert_fail@plt+0x2ffa8>
   41428:	ldr	r0, [sp]
   4142c:	bl	41448 <__assert_fail@plt+0x2ffb4>
   41430:	ldr	r0, [sp]
   41434:	bl	11200 <fflush@plt>
   41438:	str	r0, [sp, #4]
   4143c:	ldr	r0, [sp, #4]
   41440:	mov	sp, fp
   41444:	pop	{fp, pc}
   41448:	push	{fp, lr}
   4144c:	mov	fp, sp
   41450:	sub	sp, sp, #16
   41454:	str	r0, [fp, #-4]
   41458:	ldr	r0, [fp, #-4]
   4145c:	ldr	r0, [r0]
   41460:	and	r0, r0, #256	; 0x100
   41464:	cmp	r0, #0
   41468:	beq	41490 <__assert_fail@plt+0x2fffc>
   4146c:	ldr	r0, [fp, #-4]
   41470:	mov	r1, sp
   41474:	mov	r2, #1
   41478:	str	r2, [r1]
   4147c:	mov	r1, #0
   41480:	mov	r2, r1
   41484:	mov	r3, r1
   41488:	bl	41498 <__assert_fail@plt+0x30004>
   4148c:	str	r0, [sp, #8]
   41490:	mov	sp, fp
   41494:	pop	{fp, pc}
   41498:	push	{fp, lr}
   4149c:	mov	fp, sp
   414a0:	sub	sp, sp, #32
   414a4:	ldr	r1, [fp, #8]
   414a8:	str	r0, [fp, #-8]
   414ac:	str	r3, [sp, #20]
   414b0:	str	r2, [sp, #16]
   414b4:	ldr	r0, [fp, #-8]
   414b8:	ldr	r0, [r0, #8]
   414bc:	ldr	r2, [fp, #-8]
   414c0:	ldr	r2, [r2, #4]
   414c4:	cmp	r0, r2
   414c8:	str	r1, [sp, #4]
   414cc:	bne	41578 <__assert_fail@plt+0x300e4>
   414d0:	ldr	r0, [fp, #-8]
   414d4:	ldr	r0, [r0, #20]
   414d8:	ldr	r1, [fp, #-8]
   414dc:	ldr	r1, [r1, #16]
   414e0:	cmp	r0, r1
   414e4:	bne	41578 <__assert_fail@plt+0x300e4>
   414e8:	ldr	r0, [fp, #-8]
   414ec:	ldr	r0, [r0, #36]	; 0x24
   414f0:	movw	r1, #0
   414f4:	cmp	r0, r1
   414f8:	bne	41578 <__assert_fail@plt+0x300e4>
   414fc:	ldr	r0, [fp, #-8]
   41500:	bl	113ec <fileno@plt>
   41504:	ldr	r2, [sp, #16]
   41508:	ldr	r3, [sp, #20]
   4150c:	ldr	lr, [fp, #8]
   41510:	mov	r1, sp
   41514:	str	lr, [r1]
   41518:	bl	112cc <lseek64@plt>
   4151c:	str	r1, [sp, #12]
   41520:	str	r0, [sp, #8]
   41524:	ldr	r0, [sp, #8]
   41528:	ldr	r1, [sp, #12]
   4152c:	and	r0, r0, r1
   41530:	cmn	r0, #1
   41534:	bne	41548 <__assert_fail@plt+0x300b4>
   41538:	b	4153c <__assert_fail@plt+0x300a8>
   4153c:	mvn	r0, #0
   41540:	str	r0, [fp, #-4]
   41544:	b	41598 <__assert_fail@plt+0x30104>
   41548:	ldr	r0, [fp, #-8]
   4154c:	ldr	r1, [r0]
   41550:	bic	r1, r1, #16
   41554:	str	r1, [r0]
   41558:	ldr	r0, [sp, #8]
   4155c:	ldr	r1, [sp, #12]
   41560:	ldr	r2, [fp, #-8]
   41564:	str	r1, [r2, #84]	; 0x54
   41568:	str	r0, [r2, #80]	; 0x50
   4156c:	movw	r0, #0
   41570:	str	r0, [fp, #-4]
   41574:	b	41598 <__assert_fail@plt+0x30104>
   41578:	ldr	r0, [fp, #-8]
   4157c:	ldr	r2, [sp, #16]
   41580:	ldr	r3, [sp, #20]
   41584:	ldr	r1, [fp, #8]
   41588:	mov	ip, sp
   4158c:	str	r1, [ip]
   41590:	bl	11410 <fseeko64@plt>
   41594:	str	r0, [fp, #-4]
   41598:	ldr	r0, [fp, #-4]
   4159c:	mov	sp, fp
   415a0:	pop	{fp, pc}
   415a4:	push	{fp, lr}
   415a8:	mov	fp, sp
   415ac:	bl	113b0 <__errno_location@plt>
   415b0:	movw	lr, #12
   415b4:	str	lr, [r0]
   415b8:	movw	r0, #0
   415bc:	pop	{fp, pc}
   415c0:	push	{fp, lr}
   415c4:	mov	fp, sp
   415c8:	sub	sp, sp, #8
   415cc:	str	r0, [sp, #4]
   415d0:	ldr	r0, [sp, #4]
   415d4:	cmn	r0, #1
   415d8:	bhi	415ec <__assert_fail@plt+0x30158>
   415dc:	ldr	r0, [sp, #4]
   415e0:	bl	3fbd8 <__assert_fail@plt+0x2e744>
   415e4:	str	r0, [sp]
   415e8:	b	415f4 <__assert_fail@plt+0x30160>
   415ec:	bl	415a4 <__assert_fail@plt+0x30110>
   415f0:	str	r0, [sp]
   415f4:	ldr	r0, [sp]
   415f8:	mov	sp, fp
   415fc:	pop	{fp, pc}
   41600:	push	{fp, lr}
   41604:	mov	fp, sp
   41608:	sub	sp, sp, #16
   4160c:	str	r0, [fp, #-4]
   41610:	str	r1, [sp, #8]
   41614:	ldr	r0, [sp, #8]
   41618:	cmn	r0, #1
   4161c:	bhi	41654 <__assert_fail@plt+0x301c0>
   41620:	ldr	r0, [fp, #-4]
   41624:	ldr	r1, [sp, #8]
   41628:	ldr	r2, [sp, #8]
   4162c:	cmp	r2, #0
   41630:	movw	r2, #0
   41634:	movne	r2, #1
   41638:	mvn	r3, #0
   4163c:	eor	r2, r2, r3
   41640:	and	r2, r2, #1
   41644:	orr	r1, r1, r2
   41648:	bl	3fc48 <__assert_fail@plt+0x2e7b4>
   4164c:	str	r0, [sp, #4]
   41650:	b	4165c <__assert_fail@plt+0x301c8>
   41654:	bl	415a4 <__assert_fail@plt+0x30110>
   41658:	str	r0, [sp, #4]
   4165c:	ldr	r0, [sp, #4]
   41660:	mov	sp, fp
   41664:	pop	{fp, pc}
   41668:	push	{fp, lr}
   4166c:	mov	fp, sp
   41670:	sub	sp, sp, #16
   41674:	str	r0, [sp, #8]
   41678:	str	r1, [sp, #4]
   4167c:	ldr	r0, [sp, #8]
   41680:	mvn	r1, #0
   41684:	cmp	r1, r0
   41688:	bcs	416ac <__assert_fail@plt+0x30218>
   4168c:	ldr	r0, [sp, #4]
   41690:	cmp	r0, #0
   41694:	beq	416a4 <__assert_fail@plt+0x30210>
   41698:	bl	415a4 <__assert_fail@plt+0x30110>
   4169c:	str	r0, [fp, #-4]
   416a0:	b	416ec <__assert_fail@plt+0x30258>
   416a4:	movw	r0, #0
   416a8:	str	r0, [sp, #8]
   416ac:	ldr	r0, [sp, #4]
   416b0:	mvn	r1, #0
   416b4:	cmp	r1, r0
   416b8:	bcs	416dc <__assert_fail@plt+0x30248>
   416bc:	ldr	r0, [sp, #8]
   416c0:	cmp	r0, #0
   416c4:	beq	416d4 <__assert_fail@plt+0x30240>
   416c8:	bl	415a4 <__assert_fail@plt+0x30110>
   416cc:	str	r0, [fp, #-4]
   416d0:	b	416ec <__assert_fail@plt+0x30258>
   416d4:	movw	r0, #0
   416d8:	str	r0, [sp, #4]
   416dc:	ldr	r0, [sp, #8]
   416e0:	ldr	r1, [sp, #4]
   416e4:	bl	3fb3c <__assert_fail@plt+0x2e6a8>
   416e8:	str	r0, [fp, #-4]
   416ec:	ldr	r0, [fp, #-4]
   416f0:	mov	sp, fp
   416f4:	pop	{fp, pc}
   416f8:	push	{fp, lr}
   416fc:	mov	fp, sp
   41700:	sub	sp, sp, #16
   41704:	str	r0, [fp, #-4]
   41708:	str	r1, [sp, #8]
   4170c:	str	r2, [sp, #4]
   41710:	ldr	r0, [sp, #8]
   41714:	cmp	r0, #0
   41718:	beq	41728 <__assert_fail@plt+0x30294>
   4171c:	ldr	r0, [sp, #4]
   41720:	cmp	r0, #0
   41724:	bne	41734 <__assert_fail@plt+0x302a0>
   41728:	movw	r0, #1
   4172c:	str	r0, [sp, #4]
   41730:	str	r0, [sp, #8]
   41734:	ldr	r0, [sp, #8]
   41738:	cmn	r0, #1
   4173c:	bhi	41764 <__assert_fail@plt+0x302d0>
   41740:	ldr	r0, [sp, #4]
   41744:	cmn	r0, #1
   41748:	bhi	41764 <__assert_fail@plt+0x302d0>
   4174c:	ldr	r0, [fp, #-4]
   41750:	ldr	r1, [sp, #8]
   41754:	ldr	r2, [sp, #4]
   41758:	bl	419ec <__assert_fail@plt+0x30558>
   4175c:	str	r0, [sp]
   41760:	b	4176c <__assert_fail@plt+0x302d8>
   41764:	bl	415a4 <__assert_fail@plt+0x30110>
   41768:	str	r0, [sp]
   4176c:	ldr	r0, [sp]
   41770:	mov	sp, fp
   41774:	pop	{fp, pc}
   41778:	push	{fp, lr}
   4177c:	mov	fp, sp
   41780:	sub	sp, sp, #8
   41784:	movw	r0, #14
   41788:	bl	11440 <nl_langinfo@plt>
   4178c:	str	r0, [sp, #4]
   41790:	ldr	r0, [sp, #4]
   41794:	movw	lr, #0
   41798:	cmp	r0, lr
   4179c:	bne	417ac <__assert_fail@plt+0x30318>
   417a0:	movw	r0, #16931	; 0x4223
   417a4:	movt	r0, #4
   417a8:	str	r0, [sp, #4]
   417ac:	ldr	r0, [sp, #4]
   417b0:	ldrb	r0, [r0]
   417b4:	cmp	r0, #0
   417b8:	bne	417c8 <__assert_fail@plt+0x30334>
   417bc:	movw	r0, #24096	; 0x5e20
   417c0:	movt	r0, #4
   417c4:	str	r0, [sp, #4]
   417c8:	ldr	r0, [sp, #4]
   417cc:	mov	sp, fp
   417d0:	pop	{fp, pc}
   417d4:	push	{fp, lr}
   417d8:	mov	fp, sp
   417dc:	sub	sp, sp, #16
   417e0:	str	r0, [fp, #-4]
   417e4:	ldr	r0, [fp, #-4]
   417e8:	bl	1120c <wcwidth@plt>
   417ec:	str	r0, [sp, #8]
   417f0:	ldr	r0, [sp, #8]
   417f4:	cmp	r0, #0
   417f8:	blt	41808 <__assert_fail@plt+0x30374>
   417fc:	ldr	r0, [sp, #8]
   41800:	str	r0, [sp, #4]
   41804:	b	4182c <__assert_fail@plt+0x30398>
   41808:	ldr	r0, [fp, #-4]
   4180c:	bl	112a8 <iswcntrl@plt>
   41810:	cmp	r0, #0
   41814:	movw	r0, #0
   41818:	movne	r0, #1
   4181c:	tst	r0, #1
   41820:	movw	r0, #0
   41824:	moveq	r0, #1
   41828:	str	r0, [sp, #4]
   4182c:	ldr	r0, [sp, #4]
   41830:	mov	sp, fp
   41834:	pop	{fp, pc}
   41838:	push	{fp, lr}
   4183c:	mov	fp, sp
   41840:	sub	sp, sp, #8
   41844:	str	r0, [sp, #4]
   41848:	str	r1, [sp]
   4184c:	ldr	r0, [sp]
   41850:	ldr	r0, [r0]
   41854:	ldr	r1, [sp]
   41858:	add	r1, r1, #16
   4185c:	cmp	r0, r1
   41860:	bne	41894 <__assert_fail@plt+0x30400>
   41864:	ldr	r0, [sp, #4]
   41868:	add	r0, r0, #16
   4186c:	ldr	r1, [sp]
   41870:	add	r1, r1, #16
   41874:	ldr	r2, [sp]
   41878:	ldr	r2, [r2, #4]
   4187c:	bl	11248 <memcpy@plt>
   41880:	ldr	r0, [sp, #4]
   41884:	add	r0, r0, #16
   41888:	ldr	r1, [sp, #4]
   4188c:	str	r0, [r1]
   41890:	b	418a4 <__assert_fail@plt+0x30410>
   41894:	ldr	r0, [sp]
   41898:	ldr	r0, [r0]
   4189c:	ldr	r1, [sp, #4]
   418a0:	str	r0, [r1]
   418a4:	ldr	r0, [sp]
   418a8:	ldr	r0, [r0, #4]
   418ac:	ldr	r1, [sp, #4]
   418b0:	str	r0, [r1, #4]
   418b4:	ldr	r0, [sp]
   418b8:	ldrb	r0, [r0, #8]
   418bc:	ldr	r1, [sp, #4]
   418c0:	and	r2, r0, #1
   418c4:	strb	r2, [r1, #8]
   418c8:	tst	r0, #1
   418cc:	beq	418e0 <__assert_fail@plt+0x3044c>
   418d0:	ldr	r0, [sp]
   418d4:	ldr	r0, [r0, #12]
   418d8:	ldr	r1, [sp, #4]
   418dc:	str	r0, [r1, #12]
   418e0:	mov	sp, fp
   418e4:	pop	{fp, pc}
   418e8:	sub	sp, sp, #8
   418ec:	movw	r1, #24104	; 0x5e28
   418f0:	movt	r1, #4
   418f4:	strb	r0, [sp, #7]
   418f8:	ldrb	r0, [sp, #7]
   418fc:	lsr	r0, r0, #5
   41900:	movw	r2, #24104	; 0x5e28
   41904:	movt	r2, #4
   41908:	add	r0, r2, r0, lsl #2
   4190c:	ldr	r0, [r0]
   41910:	ldrb	r2, [sp, #7]
   41914:	and	r2, r2, #31
   41918:	lsr	r0, r0, r2
   4191c:	and	r0, r0, #1
   41920:	cmp	r0, #0
   41924:	movw	r0, #0
   41928:	movne	r0, #1
   4192c:	and	r0, r0, #1
   41930:	str	r1, [sp]
   41934:	add	sp, sp, #8
   41938:	bx	lr
   4193c:	push	{fp, lr}
   41940:	mov	fp, sp
   41944:	sub	sp, sp, #32
   41948:	str	r0, [fp, #-8]
   4194c:	str	r1, [fp, #-12]
   41950:	str	r2, [sp, #16]
   41954:	str	r3, [sp, #12]
   41958:	ldr	r0, [fp, #-8]
   4195c:	movw	r1, #0
   41960:	cmp	r0, r1
   41964:	bne	41970 <__assert_fail@plt+0x304dc>
   41968:	add	r0, sp, #4
   4196c:	str	r0, [fp, #-8]
   41970:	ldr	r0, [fp, #-8]
   41974:	ldr	r1, [fp, #-12]
   41978:	ldr	r2, [sp, #16]
   4197c:	ldr	r3, [sp, #12]
   41980:	bl	112fc <mbrtowc@plt>
   41984:	str	r0, [sp, #8]
   41988:	ldr	r0, [sp, #8]
   4198c:	mvn	r1, #1
   41990:	cmp	r1, r0
   41994:	bhi	419d8 <__assert_fail@plt+0x30544>
   41998:	ldr	r0, [sp, #16]
   4199c:	cmp	r0, #0
   419a0:	beq	419d8 <__assert_fail@plt+0x30544>
   419a4:	movw	r0, #0
   419a8:	bl	433bc <__assert_fail@plt+0x31f28>
   419ac:	tst	r0, #1
   419b0:	bne	419d8 <__assert_fail@plt+0x30544>
   419b4:	ldr	r0, [fp, #-12]
   419b8:	ldrb	r0, [r0]
   419bc:	strb	r0, [sp, #3]
   419c0:	ldrb	r0, [sp, #3]
   419c4:	ldr	r1, [fp, #-8]
   419c8:	str	r0, [r1]
   419cc:	movw	r0, #1
   419d0:	str	r0, [fp, #-4]
   419d4:	b	419e0 <__assert_fail@plt+0x3054c>
   419d8:	ldr	r0, [sp, #8]
   419dc:	str	r0, [fp, #-4]
   419e0:	ldr	r0, [fp, #-4]
   419e4:	mov	sp, fp
   419e8:	pop	{fp, pc}
   419ec:	push	{fp, lr}
   419f0:	mov	fp, sp
   419f4:	sub	sp, sp, #176	; 0xb0
   419f8:	str	r0, [fp, #-8]
   419fc:	str	r1, [fp, #-12]
   41a00:	str	r2, [fp, #-16]
   41a04:	b	41dbc <__assert_fail@plt+0x30928>
   41a08:	b	41bdc <__assert_fail@plt+0x30748>
   41a0c:	ldr	r0, [fp, #-16]
   41a10:	cmp	r0, #0
   41a14:	bcs	41b18 <__assert_fail@plt+0x30684>
   41a18:	ldr	r0, [fp, #-12]
   41a1c:	cmp	r0, #0
   41a20:	bcs	41aa8 <__assert_fail@plt+0x30614>
   41a24:	b	41a44 <__assert_fail@plt+0x305b0>
   41a28:	ldr	r0, [fp, #-12]
   41a2c:	ldr	r1, [fp, #-16]
   41a30:	movw	r2, #127	; 0x7f
   41a34:	udiv	r1, r2, r1
   41a38:	cmp	r0, r1
   41a3c:	bcc	41bac <__assert_fail@plt+0x30718>
   41a40:	b	41bc4 <__assert_fail@plt+0x30730>
   41a44:	b	41a58 <__assert_fail@plt+0x305c4>
   41a48:	ldr	r0, [fp, #-16]
   41a4c:	cmp	r0, #1
   41a50:	bcc	41a68 <__assert_fail@plt+0x305d4>
   41a54:	b	41a74 <__assert_fail@plt+0x305e0>
   41a58:	ldr	r0, [fp, #-16]
   41a5c:	movw	r1, #0
   41a60:	cmp	r1, r0
   41a64:	bcs	41a74 <__assert_fail@plt+0x305e0>
   41a68:	movw	r0, #0
   41a6c:	str	r0, [fp, #-24]	; 0xffffffe8
   41a70:	b	41a8c <__assert_fail@plt+0x305f8>
   41a74:	ldr	r0, [fp, #-16]
   41a78:	movw	r1, #0
   41a7c:	sub	r0, r1, r0
   41a80:	movw	r1, #127	; 0x7f
   41a84:	udiv	r0, r1, r0
   41a88:	str	r0, [fp, #-24]	; 0xffffffe8
   41a8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   41a90:	ldr	r1, [fp, #-12]
   41a94:	mvn	r2, #0
   41a98:	sub	r1, r2, r1
   41a9c:	cmp	r0, r1
   41aa0:	bls	41bac <__assert_fail@plt+0x30718>
   41aa4:	b	41bc4 <__assert_fail@plt+0x30730>
   41aa8:	ldr	r0, [fp, #-16]
   41aac:	cmn	r0, #1
   41ab0:	bne	41afc <__assert_fail@plt+0x30668>
   41ab4:	b	41ad4 <__assert_fail@plt+0x30640>
   41ab8:	ldr	r0, [fp, #-12]
   41abc:	mvn	r1, #127	; 0x7f
   41ac0:	add	r0, r0, r1
   41ac4:	movw	r1, #0
   41ac8:	cmp	r1, r0
   41acc:	bcc	41bac <__assert_fail@plt+0x30718>
   41ad0:	b	41bc4 <__assert_fail@plt+0x30730>
   41ad4:	ldr	r0, [fp, #-12]
   41ad8:	movw	r1, #0
   41adc:	cmp	r1, r0
   41ae0:	bcs	41bc4 <__assert_fail@plt+0x30730>
   41ae4:	ldr	r0, [fp, #-12]
   41ae8:	sub	r0, r0, #1
   41aec:	movw	r1, #127	; 0x7f
   41af0:	cmp	r1, r0
   41af4:	bcc	41bac <__assert_fail@plt+0x30718>
   41af8:	b	41bc4 <__assert_fail@plt+0x30730>
   41afc:	ldr	r0, [fp, #-16]
   41b00:	mvn	r1, #127	; 0x7f
   41b04:	udiv	r0, r1, r0
   41b08:	ldr	r1, [fp, #-12]
   41b0c:	cmp	r0, r1
   41b10:	bcc	41bac <__assert_fail@plt+0x30718>
   41b14:	b	41bc4 <__assert_fail@plt+0x30730>
   41b18:	ldr	r0, [fp, #-16]
   41b1c:	cmp	r0, #0
   41b20:	bne	41b28 <__assert_fail@plt+0x30694>
   41b24:	b	41bc4 <__assert_fail@plt+0x30730>
   41b28:	ldr	r0, [fp, #-12]
   41b2c:	cmp	r0, #0
   41b30:	bcs	41b94 <__assert_fail@plt+0x30700>
   41b34:	ldr	r0, [fp, #-12]
   41b38:	cmn	r0, #1
   41b3c:	bne	41b78 <__assert_fail@plt+0x306e4>
   41b40:	b	41b60 <__assert_fail@plt+0x306cc>
   41b44:	ldr	r0, [fp, #-16]
   41b48:	mvn	r1, #127	; 0x7f
   41b4c:	add	r0, r0, r1
   41b50:	movw	r1, #0
   41b54:	cmp	r1, r0
   41b58:	bcc	41bac <__assert_fail@plt+0x30718>
   41b5c:	b	41bc4 <__assert_fail@plt+0x30730>
   41b60:	ldr	r0, [fp, #-16]
   41b64:	sub	r0, r0, #1
   41b68:	movw	r1, #127	; 0x7f
   41b6c:	cmp	r1, r0
   41b70:	bcc	41bac <__assert_fail@plt+0x30718>
   41b74:	b	41bc4 <__assert_fail@plt+0x30730>
   41b78:	ldr	r0, [fp, #-12]
   41b7c:	mvn	r1, #127	; 0x7f
   41b80:	udiv	r0, r1, r0
   41b84:	ldr	r1, [fp, #-16]
   41b88:	cmp	r0, r1
   41b8c:	bcc	41bac <__assert_fail@plt+0x30718>
   41b90:	b	41bc4 <__assert_fail@plt+0x30730>
   41b94:	ldr	r0, [fp, #-16]
   41b98:	movw	r1, #127	; 0x7f
   41b9c:	udiv	r0, r1, r0
   41ba0:	ldr	r1, [fp, #-12]
   41ba4:	cmp	r0, r1
   41ba8:	bcs	41bc4 <__assert_fail@plt+0x30730>
   41bac:	ldr	r0, [fp, #-12]
   41bb0:	ldr	r1, [fp, #-16]
   41bb4:	mul	r0, r0, r1
   41bb8:	sxtb	r0, r0
   41bbc:	str	r0, [fp, #-20]	; 0xffffffec
   41bc0:	b	42d3c <__assert_fail@plt+0x318a8>
   41bc4:	ldr	r0, [fp, #-12]
   41bc8:	ldr	r1, [fp, #-16]
   41bcc:	mul	r0, r0, r1
   41bd0:	sxtb	r0, r0
   41bd4:	str	r0, [fp, #-20]	; 0xffffffec
   41bd8:	b	42d54 <__assert_fail@plt+0x318c0>
   41bdc:	ldr	r0, [fp, #-16]
   41be0:	cmp	r0, #0
   41be4:	bcs	41cf0 <__assert_fail@plt+0x3085c>
   41be8:	ldr	r0, [fp, #-12]
   41bec:	cmp	r0, #0
   41bf0:	bcs	41c78 <__assert_fail@plt+0x307e4>
   41bf4:	b	41c14 <__assert_fail@plt+0x30780>
   41bf8:	ldr	r0, [fp, #-12]
   41bfc:	ldr	r1, [fp, #-16]
   41c00:	movw	r2, #255	; 0xff
   41c04:	udiv	r1, r2, r1
   41c08:	cmp	r0, r1
   41c0c:	bcc	41d8c <__assert_fail@plt+0x308f8>
   41c10:	b	41da4 <__assert_fail@plt+0x30910>
   41c14:	b	41c28 <__assert_fail@plt+0x30794>
   41c18:	ldr	r0, [fp, #-16]
   41c1c:	cmp	r0, #1
   41c20:	bcc	41c38 <__assert_fail@plt+0x307a4>
   41c24:	b	41c44 <__assert_fail@plt+0x307b0>
   41c28:	ldr	r0, [fp, #-16]
   41c2c:	movw	r1, #0
   41c30:	cmp	r1, r0
   41c34:	bcs	41c44 <__assert_fail@plt+0x307b0>
   41c38:	movw	r0, #0
   41c3c:	str	r0, [fp, #-28]	; 0xffffffe4
   41c40:	b	41c5c <__assert_fail@plt+0x307c8>
   41c44:	ldr	r0, [fp, #-16]
   41c48:	movw	r1, #0
   41c4c:	sub	r0, r1, r0
   41c50:	movw	r1, #255	; 0xff
   41c54:	udiv	r0, r1, r0
   41c58:	str	r0, [fp, #-28]	; 0xffffffe4
   41c5c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   41c60:	ldr	r1, [fp, #-12]
   41c64:	mvn	r2, #0
   41c68:	sub	r1, r2, r1
   41c6c:	cmp	r0, r1
   41c70:	bls	41d8c <__assert_fail@plt+0x308f8>
   41c74:	b	41da4 <__assert_fail@plt+0x30910>
   41c78:	b	41c80 <__assert_fail@plt+0x307ec>
   41c7c:	b	41c84 <__assert_fail@plt+0x307f0>
   41c80:	b	41cd4 <__assert_fail@plt+0x30840>
   41c84:	ldr	r0, [fp, #-16]
   41c88:	cmn	r0, #1
   41c8c:	bne	41cd4 <__assert_fail@plt+0x30840>
   41c90:	b	41cac <__assert_fail@plt+0x30818>
   41c94:	ldr	r0, [fp, #-12]
   41c98:	add	r0, r0, #0
   41c9c:	movw	r1, #0
   41ca0:	cmp	r1, r0
   41ca4:	bcc	41d8c <__assert_fail@plt+0x308f8>
   41ca8:	b	41da4 <__assert_fail@plt+0x30910>
   41cac:	ldr	r0, [fp, #-12]
   41cb0:	movw	r1, #0
   41cb4:	cmp	r1, r0
   41cb8:	bcs	41da4 <__assert_fail@plt+0x30910>
   41cbc:	ldr	r0, [fp, #-12]
   41cc0:	sub	r0, r0, #1
   41cc4:	mvn	r1, #0
   41cc8:	cmp	r1, r0
   41ccc:	bcc	41d8c <__assert_fail@plt+0x308f8>
   41cd0:	b	41da4 <__assert_fail@plt+0x30910>
   41cd4:	ldr	r0, [fp, #-16]
   41cd8:	movw	r1, #0
   41cdc:	udiv	r0, r1, r0
   41ce0:	ldr	r1, [fp, #-12]
   41ce4:	cmp	r0, r1
   41ce8:	bcc	41d8c <__assert_fail@plt+0x308f8>
   41cec:	b	41da4 <__assert_fail@plt+0x30910>
   41cf0:	ldr	r0, [fp, #-16]
   41cf4:	cmp	r0, #0
   41cf8:	bne	41d00 <__assert_fail@plt+0x3086c>
   41cfc:	b	41da4 <__assert_fail@plt+0x30910>
   41d00:	ldr	r0, [fp, #-12]
   41d04:	cmp	r0, #0
   41d08:	bcs	41d74 <__assert_fail@plt+0x308e0>
   41d0c:	b	41d14 <__assert_fail@plt+0x30880>
   41d10:	b	41d18 <__assert_fail@plt+0x30884>
   41d14:	b	41d58 <__assert_fail@plt+0x308c4>
   41d18:	ldr	r0, [fp, #-12]
   41d1c:	cmn	r0, #1
   41d20:	bne	41d58 <__assert_fail@plt+0x308c4>
   41d24:	b	41d40 <__assert_fail@plt+0x308ac>
   41d28:	ldr	r0, [fp, #-16]
   41d2c:	add	r0, r0, #0
   41d30:	movw	r1, #0
   41d34:	cmp	r1, r0
   41d38:	bcc	41d8c <__assert_fail@plt+0x308f8>
   41d3c:	b	41da4 <__assert_fail@plt+0x30910>
   41d40:	ldr	r0, [fp, #-16]
   41d44:	sub	r0, r0, #1
   41d48:	mvn	r1, #0
   41d4c:	cmp	r1, r0
   41d50:	bcc	41d8c <__assert_fail@plt+0x308f8>
   41d54:	b	41da4 <__assert_fail@plt+0x30910>
   41d58:	ldr	r0, [fp, #-12]
   41d5c:	movw	r1, #0
   41d60:	udiv	r0, r1, r0
   41d64:	ldr	r1, [fp, #-16]
   41d68:	cmp	r0, r1
   41d6c:	bcc	41d8c <__assert_fail@plt+0x308f8>
   41d70:	b	41da4 <__assert_fail@plt+0x30910>
   41d74:	ldr	r0, [fp, #-16]
   41d78:	movw	r1, #255	; 0xff
   41d7c:	udiv	r0, r1, r0
   41d80:	ldr	r1, [fp, #-12]
   41d84:	cmp	r0, r1
   41d88:	bcs	41da4 <__assert_fail@plt+0x30910>
   41d8c:	ldr	r0, [fp, #-12]
   41d90:	ldr	r1, [fp, #-16]
   41d94:	mul	r0, r0, r1
   41d98:	and	r0, r0, #255	; 0xff
   41d9c:	str	r0, [fp, #-20]	; 0xffffffec
   41da0:	b	42d3c <__assert_fail@plt+0x318a8>
   41da4:	ldr	r0, [fp, #-12]
   41da8:	ldr	r1, [fp, #-16]
   41dac:	mul	r0, r0, r1
   41db0:	and	r0, r0, #255	; 0xff
   41db4:	str	r0, [fp, #-20]	; 0xffffffec
   41db8:	b	42d54 <__assert_fail@plt+0x318c0>
   41dbc:	b	42174 <__assert_fail@plt+0x30ce0>
   41dc0:	b	41f94 <__assert_fail@plt+0x30b00>
   41dc4:	ldr	r0, [fp, #-16]
   41dc8:	cmp	r0, #0
   41dcc:	bcs	41ed0 <__assert_fail@plt+0x30a3c>
   41dd0:	ldr	r0, [fp, #-12]
   41dd4:	cmp	r0, #0
   41dd8:	bcs	41e60 <__assert_fail@plt+0x309cc>
   41ddc:	b	41dfc <__assert_fail@plt+0x30968>
   41de0:	ldr	r0, [fp, #-12]
   41de4:	ldr	r1, [fp, #-16]
   41de8:	movw	r2, #32767	; 0x7fff
   41dec:	udiv	r1, r2, r1
   41df0:	cmp	r0, r1
   41df4:	bcc	41f64 <__assert_fail@plt+0x30ad0>
   41df8:	b	41f7c <__assert_fail@plt+0x30ae8>
   41dfc:	b	41e10 <__assert_fail@plt+0x3097c>
   41e00:	ldr	r0, [fp, #-16]
   41e04:	cmp	r0, #1
   41e08:	bcc	41e20 <__assert_fail@plt+0x3098c>
   41e0c:	b	41e2c <__assert_fail@plt+0x30998>
   41e10:	ldr	r0, [fp, #-16]
   41e14:	movw	r1, #0
   41e18:	cmp	r1, r0
   41e1c:	bcs	41e2c <__assert_fail@plt+0x30998>
   41e20:	movw	r0, #0
   41e24:	str	r0, [fp, #-32]	; 0xffffffe0
   41e28:	b	41e44 <__assert_fail@plt+0x309b0>
   41e2c:	ldr	r0, [fp, #-16]
   41e30:	movw	r1, #0
   41e34:	sub	r0, r1, r0
   41e38:	movw	r1, #32767	; 0x7fff
   41e3c:	udiv	r0, r1, r0
   41e40:	str	r0, [fp, #-32]	; 0xffffffe0
   41e44:	ldr	r0, [fp, #-32]	; 0xffffffe0
   41e48:	ldr	r1, [fp, #-12]
   41e4c:	mvn	r2, #0
   41e50:	sub	r1, r2, r1
   41e54:	cmp	r0, r1
   41e58:	bls	41f64 <__assert_fail@plt+0x30ad0>
   41e5c:	b	41f7c <__assert_fail@plt+0x30ae8>
   41e60:	ldr	r0, [fp, #-16]
   41e64:	cmn	r0, #1
   41e68:	bne	41eb4 <__assert_fail@plt+0x30a20>
   41e6c:	b	41e8c <__assert_fail@plt+0x309f8>
   41e70:	ldr	r0, [pc, #3840]	; 42d78 <__assert_fail@plt+0x318e4>
   41e74:	ldr	r1, [fp, #-12]
   41e78:	add	r0, r1, r0
   41e7c:	movw	r1, #0
   41e80:	cmp	r1, r0
   41e84:	bcc	41f64 <__assert_fail@plt+0x30ad0>
   41e88:	b	41f7c <__assert_fail@plt+0x30ae8>
   41e8c:	ldr	r0, [fp, #-12]
   41e90:	movw	r1, #0
   41e94:	cmp	r1, r0
   41e98:	bcs	41f7c <__assert_fail@plt+0x30ae8>
   41e9c:	ldr	r0, [fp, #-12]
   41ea0:	sub	r0, r0, #1
   41ea4:	movw	r1, #32767	; 0x7fff
   41ea8:	cmp	r1, r0
   41eac:	bcc	41f64 <__assert_fail@plt+0x30ad0>
   41eb0:	b	41f7c <__assert_fail@plt+0x30ae8>
   41eb4:	ldr	r0, [pc, #3772]	; 42d78 <__assert_fail@plt+0x318e4>
   41eb8:	ldr	r1, [fp, #-16]
   41ebc:	udiv	r0, r0, r1
   41ec0:	ldr	r1, [fp, #-12]
   41ec4:	cmp	r0, r1
   41ec8:	bcc	41f64 <__assert_fail@plt+0x30ad0>
   41ecc:	b	41f7c <__assert_fail@plt+0x30ae8>
   41ed0:	ldr	r0, [fp, #-16]
   41ed4:	cmp	r0, #0
   41ed8:	bne	41ee0 <__assert_fail@plt+0x30a4c>
   41edc:	b	41f7c <__assert_fail@plt+0x30ae8>
   41ee0:	ldr	r0, [fp, #-12]
   41ee4:	cmp	r0, #0
   41ee8:	bcs	41f4c <__assert_fail@plt+0x30ab8>
   41eec:	ldr	r0, [fp, #-12]
   41ef0:	cmn	r0, #1
   41ef4:	bne	41f30 <__assert_fail@plt+0x30a9c>
   41ef8:	b	41f18 <__assert_fail@plt+0x30a84>
   41efc:	ldr	r0, [pc, #3700]	; 42d78 <__assert_fail@plt+0x318e4>
   41f00:	ldr	r1, [fp, #-16]
   41f04:	add	r0, r1, r0
   41f08:	movw	r1, #0
   41f0c:	cmp	r1, r0
   41f10:	bcc	41f64 <__assert_fail@plt+0x30ad0>
   41f14:	b	41f7c <__assert_fail@plt+0x30ae8>
   41f18:	ldr	r0, [fp, #-16]
   41f1c:	sub	r0, r0, #1
   41f20:	movw	r1, #32767	; 0x7fff
   41f24:	cmp	r1, r0
   41f28:	bcc	41f64 <__assert_fail@plt+0x30ad0>
   41f2c:	b	41f7c <__assert_fail@plt+0x30ae8>
   41f30:	ldr	r0, [pc, #3648]	; 42d78 <__assert_fail@plt+0x318e4>
   41f34:	ldr	r1, [fp, #-12]
   41f38:	udiv	r0, r0, r1
   41f3c:	ldr	r1, [fp, #-16]
   41f40:	cmp	r0, r1
   41f44:	bcc	41f64 <__assert_fail@plt+0x30ad0>
   41f48:	b	41f7c <__assert_fail@plt+0x30ae8>
   41f4c:	ldr	r0, [fp, #-16]
   41f50:	movw	r1, #32767	; 0x7fff
   41f54:	udiv	r0, r1, r0
   41f58:	ldr	r1, [fp, #-12]
   41f5c:	cmp	r0, r1
   41f60:	bcs	41f7c <__assert_fail@plt+0x30ae8>
   41f64:	ldr	r0, [fp, #-12]
   41f68:	ldr	r1, [fp, #-16]
   41f6c:	mul	r0, r0, r1
   41f70:	sxth	r0, r0
   41f74:	str	r0, [fp, #-20]	; 0xffffffec
   41f78:	b	42d3c <__assert_fail@plt+0x318a8>
   41f7c:	ldr	r0, [fp, #-12]
   41f80:	ldr	r1, [fp, #-16]
   41f84:	mul	r0, r0, r1
   41f88:	sxth	r0, r0
   41f8c:	str	r0, [fp, #-20]	; 0xffffffec
   41f90:	b	42d54 <__assert_fail@plt+0x318c0>
   41f94:	ldr	r0, [fp, #-16]
   41f98:	cmp	r0, #0
   41f9c:	bcs	420a8 <__assert_fail@plt+0x30c14>
   41fa0:	ldr	r0, [fp, #-12]
   41fa4:	cmp	r0, #0
   41fa8:	bcs	42030 <__assert_fail@plt+0x30b9c>
   41fac:	b	41fcc <__assert_fail@plt+0x30b38>
   41fb0:	ldr	r0, [fp, #-12]
   41fb4:	ldr	r1, [fp, #-16]
   41fb8:	movw	r2, #65535	; 0xffff
   41fbc:	udiv	r1, r2, r1
   41fc0:	cmp	r0, r1
   41fc4:	bcc	42144 <__assert_fail@plt+0x30cb0>
   41fc8:	b	4215c <__assert_fail@plt+0x30cc8>
   41fcc:	b	41fe0 <__assert_fail@plt+0x30b4c>
   41fd0:	ldr	r0, [fp, #-16]
   41fd4:	cmp	r0, #1
   41fd8:	bcc	41ff0 <__assert_fail@plt+0x30b5c>
   41fdc:	b	41ffc <__assert_fail@plt+0x30b68>
   41fe0:	ldr	r0, [fp, #-16]
   41fe4:	movw	r1, #0
   41fe8:	cmp	r1, r0
   41fec:	bcs	41ffc <__assert_fail@plt+0x30b68>
   41ff0:	movw	r0, #0
   41ff4:	str	r0, [fp, #-36]	; 0xffffffdc
   41ff8:	b	42014 <__assert_fail@plt+0x30b80>
   41ffc:	ldr	r0, [fp, #-16]
   42000:	movw	r1, #0
   42004:	sub	r0, r1, r0
   42008:	movw	r1, #65535	; 0xffff
   4200c:	udiv	r0, r1, r0
   42010:	str	r0, [fp, #-36]	; 0xffffffdc
   42014:	ldr	r0, [fp, #-36]	; 0xffffffdc
   42018:	ldr	r1, [fp, #-12]
   4201c:	mvn	r2, #0
   42020:	sub	r1, r2, r1
   42024:	cmp	r0, r1
   42028:	bls	42144 <__assert_fail@plt+0x30cb0>
   4202c:	b	4215c <__assert_fail@plt+0x30cc8>
   42030:	b	42038 <__assert_fail@plt+0x30ba4>
   42034:	b	4203c <__assert_fail@plt+0x30ba8>
   42038:	b	4208c <__assert_fail@plt+0x30bf8>
   4203c:	ldr	r0, [fp, #-16]
   42040:	cmn	r0, #1
   42044:	bne	4208c <__assert_fail@plt+0x30bf8>
   42048:	b	42064 <__assert_fail@plt+0x30bd0>
   4204c:	ldr	r0, [fp, #-12]
   42050:	add	r0, r0, #0
   42054:	movw	r1, #0
   42058:	cmp	r1, r0
   4205c:	bcc	42144 <__assert_fail@plt+0x30cb0>
   42060:	b	4215c <__assert_fail@plt+0x30cc8>
   42064:	ldr	r0, [fp, #-12]
   42068:	movw	r1, #0
   4206c:	cmp	r1, r0
   42070:	bcs	4215c <__assert_fail@plt+0x30cc8>
   42074:	ldr	r0, [fp, #-12]
   42078:	sub	r0, r0, #1
   4207c:	mvn	r1, #0
   42080:	cmp	r1, r0
   42084:	bcc	42144 <__assert_fail@plt+0x30cb0>
   42088:	b	4215c <__assert_fail@plt+0x30cc8>
   4208c:	ldr	r0, [fp, #-16]
   42090:	movw	r1, #0
   42094:	udiv	r0, r1, r0
   42098:	ldr	r1, [fp, #-12]
   4209c:	cmp	r0, r1
   420a0:	bcc	42144 <__assert_fail@plt+0x30cb0>
   420a4:	b	4215c <__assert_fail@plt+0x30cc8>
   420a8:	ldr	r0, [fp, #-16]
   420ac:	cmp	r0, #0
   420b0:	bne	420b8 <__assert_fail@plt+0x30c24>
   420b4:	b	4215c <__assert_fail@plt+0x30cc8>
   420b8:	ldr	r0, [fp, #-12]
   420bc:	cmp	r0, #0
   420c0:	bcs	4212c <__assert_fail@plt+0x30c98>
   420c4:	b	420cc <__assert_fail@plt+0x30c38>
   420c8:	b	420d0 <__assert_fail@plt+0x30c3c>
   420cc:	b	42110 <__assert_fail@plt+0x30c7c>
   420d0:	ldr	r0, [fp, #-12]
   420d4:	cmn	r0, #1
   420d8:	bne	42110 <__assert_fail@plt+0x30c7c>
   420dc:	b	420f8 <__assert_fail@plt+0x30c64>
   420e0:	ldr	r0, [fp, #-16]
   420e4:	add	r0, r0, #0
   420e8:	movw	r1, #0
   420ec:	cmp	r1, r0
   420f0:	bcc	42144 <__assert_fail@plt+0x30cb0>
   420f4:	b	4215c <__assert_fail@plt+0x30cc8>
   420f8:	ldr	r0, [fp, #-16]
   420fc:	sub	r0, r0, #1
   42100:	mvn	r1, #0
   42104:	cmp	r1, r0
   42108:	bcc	42144 <__assert_fail@plt+0x30cb0>
   4210c:	b	4215c <__assert_fail@plt+0x30cc8>
   42110:	ldr	r0, [fp, #-12]
   42114:	movw	r1, #0
   42118:	udiv	r0, r1, r0
   4211c:	ldr	r1, [fp, #-16]
   42120:	cmp	r0, r1
   42124:	bcc	42144 <__assert_fail@plt+0x30cb0>
   42128:	b	4215c <__assert_fail@plt+0x30cc8>
   4212c:	ldr	r0, [fp, #-16]
   42130:	movw	r1, #65535	; 0xffff
   42134:	udiv	r0, r1, r0
   42138:	ldr	r1, [fp, #-12]
   4213c:	cmp	r0, r1
   42140:	bcs	4215c <__assert_fail@plt+0x30cc8>
   42144:	ldr	r0, [fp, #-12]
   42148:	ldr	r1, [fp, #-16]
   4214c:	mul	r0, r0, r1
   42150:	uxth	r0, r0
   42154:	str	r0, [fp, #-20]	; 0xffffffec
   42158:	b	42d3c <__assert_fail@plt+0x318a8>
   4215c:	ldr	r0, [fp, #-12]
   42160:	ldr	r1, [fp, #-16]
   42164:	mul	r0, r0, r1
   42168:	uxth	r0, r0
   4216c:	str	r0, [fp, #-20]	; 0xffffffec
   42170:	b	42d54 <__assert_fail@plt+0x318c0>
   42174:	b	42178 <__assert_fail@plt+0x30ce4>
   42178:	b	4233c <__assert_fail@plt+0x30ea8>
   4217c:	ldr	r0, [fp, #-16]
   42180:	cmp	r0, #0
   42184:	bcs	42284 <__assert_fail@plt+0x30df0>
   42188:	ldr	r0, [fp, #-12]
   4218c:	cmp	r0, #0
   42190:	bcs	42218 <__assert_fail@plt+0x30d84>
   42194:	b	421b4 <__assert_fail@plt+0x30d20>
   42198:	ldr	r0, [pc, #3024]	; 42d70 <__assert_fail@plt+0x318dc>
   4219c:	ldr	r1, [fp, #-12]
   421a0:	ldr	r2, [fp, #-16]
   421a4:	udiv	r0, r0, r2
   421a8:	cmp	r1, r0
   421ac:	bcc	42314 <__assert_fail@plt+0x30e80>
   421b0:	b	42328 <__assert_fail@plt+0x30e94>
   421b4:	b	421c8 <__assert_fail@plt+0x30d34>
   421b8:	ldr	r0, [fp, #-16]
   421bc:	cmp	r0, #1
   421c0:	bcc	421d8 <__assert_fail@plt+0x30d44>
   421c4:	b	421e4 <__assert_fail@plt+0x30d50>
   421c8:	ldr	r0, [fp, #-16]
   421cc:	movw	r1, #0
   421d0:	cmp	r1, r0
   421d4:	bcs	421e4 <__assert_fail@plt+0x30d50>
   421d8:	movw	r0, #0
   421dc:	str	r0, [fp, #-40]	; 0xffffffd8
   421e0:	b	421fc <__assert_fail@plt+0x30d68>
   421e4:	ldr	r0, [pc, #2948]	; 42d70 <__assert_fail@plt+0x318dc>
   421e8:	ldr	r1, [fp, #-16]
   421ec:	movw	r2, #0
   421f0:	sub	r1, r2, r1
   421f4:	udiv	r0, r0, r1
   421f8:	str	r0, [fp, #-40]	; 0xffffffd8
   421fc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   42200:	ldr	r1, [fp, #-12]
   42204:	mvn	r2, #0
   42208:	sub	r1, r2, r1
   4220c:	cmp	r0, r1
   42210:	bls	42314 <__assert_fail@plt+0x30e80>
   42214:	b	42328 <__assert_fail@plt+0x30e94>
   42218:	ldr	r0, [fp, #-16]
   4221c:	cmn	r0, #1
   42220:	bne	42268 <__assert_fail@plt+0x30dd4>
   42224:	b	42240 <__assert_fail@plt+0x30dac>
   42228:	ldr	r0, [fp, #-12]
   4222c:	add	r0, r0, #-2147483648	; 0x80000000
   42230:	movw	r1, #0
   42234:	cmp	r1, r0
   42238:	bcc	42314 <__assert_fail@plt+0x30e80>
   4223c:	b	42328 <__assert_fail@plt+0x30e94>
   42240:	ldr	r0, [fp, #-12]
   42244:	movw	r1, #0
   42248:	cmp	r1, r0
   4224c:	bcs	42328 <__assert_fail@plt+0x30e94>
   42250:	ldr	r0, [pc, #2840]	; 42d70 <__assert_fail@plt+0x318dc>
   42254:	ldr	r1, [fp, #-12]
   42258:	sub	r1, r1, #1
   4225c:	cmp	r0, r1
   42260:	bcc	42314 <__assert_fail@plt+0x30e80>
   42264:	b	42328 <__assert_fail@plt+0x30e94>
   42268:	ldr	r0, [pc, #2820]	; 42d74 <__assert_fail@plt+0x318e0>
   4226c:	ldr	r1, [fp, #-16]
   42270:	udiv	r0, r0, r1
   42274:	ldr	r1, [fp, #-12]
   42278:	cmp	r0, r1
   4227c:	bcc	42314 <__assert_fail@plt+0x30e80>
   42280:	b	42328 <__assert_fail@plt+0x30e94>
   42284:	ldr	r0, [fp, #-16]
   42288:	cmp	r0, #0
   4228c:	bne	42294 <__assert_fail@plt+0x30e00>
   42290:	b	42328 <__assert_fail@plt+0x30e94>
   42294:	ldr	r0, [fp, #-12]
   42298:	cmp	r0, #0
   4229c:	bcs	422fc <__assert_fail@plt+0x30e68>
   422a0:	ldr	r0, [fp, #-12]
   422a4:	cmn	r0, #1
   422a8:	bne	422e0 <__assert_fail@plt+0x30e4c>
   422ac:	b	422c8 <__assert_fail@plt+0x30e34>
   422b0:	ldr	r0, [fp, #-16]
   422b4:	add	r0, r0, #-2147483648	; 0x80000000
   422b8:	movw	r1, #0
   422bc:	cmp	r1, r0
   422c0:	bcc	42314 <__assert_fail@plt+0x30e80>
   422c4:	b	42328 <__assert_fail@plt+0x30e94>
   422c8:	ldr	r0, [pc, #2720]	; 42d70 <__assert_fail@plt+0x318dc>
   422cc:	ldr	r1, [fp, #-16]
   422d0:	sub	r1, r1, #1
   422d4:	cmp	r0, r1
   422d8:	bcc	42314 <__assert_fail@plt+0x30e80>
   422dc:	b	42328 <__assert_fail@plt+0x30e94>
   422e0:	ldr	r0, [pc, #2700]	; 42d74 <__assert_fail@plt+0x318e0>
   422e4:	ldr	r1, [fp, #-12]
   422e8:	udiv	r0, r0, r1
   422ec:	ldr	r1, [fp, #-16]
   422f0:	cmp	r0, r1
   422f4:	bcc	42314 <__assert_fail@plt+0x30e80>
   422f8:	b	42328 <__assert_fail@plt+0x30e94>
   422fc:	ldr	r0, [pc, #2668]	; 42d70 <__assert_fail@plt+0x318dc>
   42300:	ldr	r1, [fp, #-16]
   42304:	udiv	r0, r0, r1
   42308:	ldr	r1, [fp, #-12]
   4230c:	cmp	r0, r1
   42310:	bcs	42328 <__assert_fail@plt+0x30e94>
   42314:	ldr	r0, [fp, #-12]
   42318:	ldr	r1, [fp, #-16]
   4231c:	mul	r0, r0, r1
   42320:	str	r0, [fp, #-20]	; 0xffffffec
   42324:	b	42d3c <__assert_fail@plt+0x318a8>
   42328:	ldr	r0, [fp, #-12]
   4232c:	ldr	r1, [fp, #-16]
   42330:	mul	r0, r0, r1
   42334:	str	r0, [fp, #-20]	; 0xffffffec
   42338:	b	42d54 <__assert_fail@plt+0x318c0>
   4233c:	ldr	r0, [fp, #-16]
   42340:	cmp	r0, #0
   42344:	bcs	42450 <__assert_fail@plt+0x30fbc>
   42348:	ldr	r0, [fp, #-12]
   4234c:	cmp	r0, #0
   42350:	bcs	423d8 <__assert_fail@plt+0x30f44>
   42354:	b	42374 <__assert_fail@plt+0x30ee0>
   42358:	ldr	r0, [fp, #-12]
   4235c:	ldr	r1, [fp, #-16]
   42360:	mvn	r2, #0
   42364:	udiv	r1, r2, r1
   42368:	cmp	r0, r1
   4236c:	bcc	424ec <__assert_fail@plt+0x31058>
   42370:	b	42500 <__assert_fail@plt+0x3106c>
   42374:	b	42388 <__assert_fail@plt+0x30ef4>
   42378:	ldr	r0, [fp, #-16]
   4237c:	cmp	r0, #1
   42380:	bcc	42398 <__assert_fail@plt+0x30f04>
   42384:	b	423a4 <__assert_fail@plt+0x30f10>
   42388:	ldr	r0, [fp, #-16]
   4238c:	movw	r1, #0
   42390:	cmp	r1, r0
   42394:	bcs	423a4 <__assert_fail@plt+0x30f10>
   42398:	movw	r0, #1
   4239c:	str	r0, [fp, #-44]	; 0xffffffd4
   423a0:	b	423bc <__assert_fail@plt+0x30f28>
   423a4:	ldr	r0, [fp, #-16]
   423a8:	movw	r1, #0
   423ac:	sub	r0, r1, r0
   423b0:	mvn	r1, #0
   423b4:	udiv	r0, r1, r0
   423b8:	str	r0, [fp, #-44]	; 0xffffffd4
   423bc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   423c0:	ldr	r1, [fp, #-12]
   423c4:	mvn	r2, #0
   423c8:	sub	r1, r2, r1
   423cc:	cmp	r0, r1
   423d0:	bls	424ec <__assert_fail@plt+0x31058>
   423d4:	b	42500 <__assert_fail@plt+0x3106c>
   423d8:	b	423e0 <__assert_fail@plt+0x30f4c>
   423dc:	b	423e4 <__assert_fail@plt+0x30f50>
   423e0:	b	42434 <__assert_fail@plt+0x30fa0>
   423e4:	ldr	r0, [fp, #-16]
   423e8:	cmn	r0, #1
   423ec:	bne	42434 <__assert_fail@plt+0x30fa0>
   423f0:	b	4240c <__assert_fail@plt+0x30f78>
   423f4:	ldr	r0, [fp, #-12]
   423f8:	add	r0, r0, #0
   423fc:	movw	r1, #0
   42400:	cmp	r1, r0
   42404:	bcc	424ec <__assert_fail@plt+0x31058>
   42408:	b	42500 <__assert_fail@plt+0x3106c>
   4240c:	ldr	r0, [fp, #-12]
   42410:	movw	r1, #0
   42414:	cmp	r1, r0
   42418:	bcs	42500 <__assert_fail@plt+0x3106c>
   4241c:	ldr	r0, [fp, #-12]
   42420:	sub	r0, r0, #1
   42424:	mvn	r1, #0
   42428:	cmp	r1, r0
   4242c:	bcc	424ec <__assert_fail@plt+0x31058>
   42430:	b	42500 <__assert_fail@plt+0x3106c>
   42434:	ldr	r0, [fp, #-16]
   42438:	movw	r1, #0
   4243c:	udiv	r0, r1, r0
   42440:	ldr	r1, [fp, #-12]
   42444:	cmp	r0, r1
   42448:	bcc	424ec <__assert_fail@plt+0x31058>
   4244c:	b	42500 <__assert_fail@plt+0x3106c>
   42450:	ldr	r0, [fp, #-16]
   42454:	cmp	r0, #0
   42458:	bne	42460 <__assert_fail@plt+0x30fcc>
   4245c:	b	42500 <__assert_fail@plt+0x3106c>
   42460:	ldr	r0, [fp, #-12]
   42464:	cmp	r0, #0
   42468:	bcs	424d4 <__assert_fail@plt+0x31040>
   4246c:	b	42474 <__assert_fail@plt+0x30fe0>
   42470:	b	42478 <__assert_fail@plt+0x30fe4>
   42474:	b	424b8 <__assert_fail@plt+0x31024>
   42478:	ldr	r0, [fp, #-12]
   4247c:	cmn	r0, #1
   42480:	bne	424b8 <__assert_fail@plt+0x31024>
   42484:	b	424a0 <__assert_fail@plt+0x3100c>
   42488:	ldr	r0, [fp, #-16]
   4248c:	add	r0, r0, #0
   42490:	movw	r1, #0
   42494:	cmp	r1, r0
   42498:	bcc	424ec <__assert_fail@plt+0x31058>
   4249c:	b	42500 <__assert_fail@plt+0x3106c>
   424a0:	ldr	r0, [fp, #-16]
   424a4:	sub	r0, r0, #1
   424a8:	mvn	r1, #0
   424ac:	cmp	r1, r0
   424b0:	bcc	424ec <__assert_fail@plt+0x31058>
   424b4:	b	42500 <__assert_fail@plt+0x3106c>
   424b8:	ldr	r0, [fp, #-12]
   424bc:	movw	r1, #0
   424c0:	udiv	r0, r1, r0
   424c4:	ldr	r1, [fp, #-16]
   424c8:	cmp	r0, r1
   424cc:	bcc	424ec <__assert_fail@plt+0x31058>
   424d0:	b	42500 <__assert_fail@plt+0x3106c>
   424d4:	ldr	r0, [fp, #-16]
   424d8:	mvn	r1, #0
   424dc:	udiv	r0, r1, r0
   424e0:	ldr	r1, [fp, #-12]
   424e4:	cmp	r0, r1
   424e8:	bcs	42500 <__assert_fail@plt+0x3106c>
   424ec:	ldr	r0, [fp, #-12]
   424f0:	ldr	r1, [fp, #-16]
   424f4:	mul	r0, r0, r1
   424f8:	str	r0, [fp, #-20]	; 0xffffffec
   424fc:	b	42d3c <__assert_fail@plt+0x318a8>
   42500:	ldr	r0, [fp, #-12]
   42504:	ldr	r1, [fp, #-16]
   42508:	mul	r0, r0, r1
   4250c:	str	r0, [fp, #-20]	; 0xffffffec
   42510:	b	42d54 <__assert_fail@plt+0x318c0>
   42514:	b	42518 <__assert_fail@plt+0x31084>
   42518:	b	426dc <__assert_fail@plt+0x31248>
   4251c:	ldr	r0, [fp, #-16]
   42520:	cmp	r0, #0
   42524:	bcs	42624 <__assert_fail@plt+0x31190>
   42528:	ldr	r0, [fp, #-12]
   4252c:	cmp	r0, #0
   42530:	bcs	425b8 <__assert_fail@plt+0x31124>
   42534:	b	42554 <__assert_fail@plt+0x310c0>
   42538:	ldr	r0, [pc, #2096]	; 42d70 <__assert_fail@plt+0x318dc>
   4253c:	ldr	r1, [fp, #-12]
   42540:	ldr	r2, [fp, #-16]
   42544:	udiv	r0, r0, r2
   42548:	cmp	r1, r0
   4254c:	bcc	426b4 <__assert_fail@plt+0x31220>
   42550:	b	426c8 <__assert_fail@plt+0x31234>
   42554:	b	42568 <__assert_fail@plt+0x310d4>
   42558:	ldr	r0, [fp, #-16]
   4255c:	cmp	r0, #1
   42560:	bcc	42578 <__assert_fail@plt+0x310e4>
   42564:	b	42584 <__assert_fail@plt+0x310f0>
   42568:	ldr	r0, [fp, #-16]
   4256c:	movw	r1, #0
   42570:	cmp	r1, r0
   42574:	bcs	42584 <__assert_fail@plt+0x310f0>
   42578:	movw	r0, #0
   4257c:	str	r0, [fp, #-48]	; 0xffffffd0
   42580:	b	4259c <__assert_fail@plt+0x31108>
   42584:	ldr	r0, [pc, #2020]	; 42d70 <__assert_fail@plt+0x318dc>
   42588:	ldr	r1, [fp, #-16]
   4258c:	movw	r2, #0
   42590:	sub	r1, r2, r1
   42594:	udiv	r0, r0, r1
   42598:	str	r0, [fp, #-48]	; 0xffffffd0
   4259c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   425a0:	ldr	r1, [fp, #-12]
   425a4:	mvn	r2, #0
   425a8:	sub	r1, r2, r1
   425ac:	cmp	r0, r1
   425b0:	bls	426b4 <__assert_fail@plt+0x31220>
   425b4:	b	426c8 <__assert_fail@plt+0x31234>
   425b8:	ldr	r0, [fp, #-16]
   425bc:	cmn	r0, #1
   425c0:	bne	42608 <__assert_fail@plt+0x31174>
   425c4:	b	425e0 <__assert_fail@plt+0x3114c>
   425c8:	ldr	r0, [fp, #-12]
   425cc:	add	r0, r0, #-2147483648	; 0x80000000
   425d0:	movw	r1, #0
   425d4:	cmp	r1, r0
   425d8:	bcc	426b4 <__assert_fail@plt+0x31220>
   425dc:	b	426c8 <__assert_fail@plt+0x31234>
   425e0:	ldr	r0, [fp, #-12]
   425e4:	movw	r1, #0
   425e8:	cmp	r1, r0
   425ec:	bcs	426c8 <__assert_fail@plt+0x31234>
   425f0:	ldr	r0, [pc, #1912]	; 42d70 <__assert_fail@plt+0x318dc>
   425f4:	ldr	r1, [fp, #-12]
   425f8:	sub	r1, r1, #1
   425fc:	cmp	r0, r1
   42600:	bcc	426b4 <__assert_fail@plt+0x31220>
   42604:	b	426c8 <__assert_fail@plt+0x31234>
   42608:	ldr	r0, [pc, #1892]	; 42d74 <__assert_fail@plt+0x318e0>
   4260c:	ldr	r1, [fp, #-16]
   42610:	udiv	r0, r0, r1
   42614:	ldr	r1, [fp, #-12]
   42618:	cmp	r0, r1
   4261c:	bcc	426b4 <__assert_fail@plt+0x31220>
   42620:	b	426c8 <__assert_fail@plt+0x31234>
   42624:	ldr	r0, [fp, #-16]
   42628:	cmp	r0, #0
   4262c:	bne	42634 <__assert_fail@plt+0x311a0>
   42630:	b	426c8 <__assert_fail@plt+0x31234>
   42634:	ldr	r0, [fp, #-12]
   42638:	cmp	r0, #0
   4263c:	bcs	4269c <__assert_fail@plt+0x31208>
   42640:	ldr	r0, [fp, #-12]
   42644:	cmn	r0, #1
   42648:	bne	42680 <__assert_fail@plt+0x311ec>
   4264c:	b	42668 <__assert_fail@plt+0x311d4>
   42650:	ldr	r0, [fp, #-16]
   42654:	add	r0, r0, #-2147483648	; 0x80000000
   42658:	movw	r1, #0
   4265c:	cmp	r1, r0
   42660:	bcc	426b4 <__assert_fail@plt+0x31220>
   42664:	b	426c8 <__assert_fail@plt+0x31234>
   42668:	ldr	r0, [pc, #1792]	; 42d70 <__assert_fail@plt+0x318dc>
   4266c:	ldr	r1, [fp, #-16]
   42670:	sub	r1, r1, #1
   42674:	cmp	r0, r1
   42678:	bcc	426b4 <__assert_fail@plt+0x31220>
   4267c:	b	426c8 <__assert_fail@plt+0x31234>
   42680:	ldr	r0, [pc, #1772]	; 42d74 <__assert_fail@plt+0x318e0>
   42684:	ldr	r1, [fp, #-12]
   42688:	udiv	r0, r0, r1
   4268c:	ldr	r1, [fp, #-16]
   42690:	cmp	r0, r1
   42694:	bcc	426b4 <__assert_fail@plt+0x31220>
   42698:	b	426c8 <__assert_fail@plt+0x31234>
   4269c:	ldr	r0, [pc, #1740]	; 42d70 <__assert_fail@plt+0x318dc>
   426a0:	ldr	r1, [fp, #-16]
   426a4:	udiv	r0, r0, r1
   426a8:	ldr	r1, [fp, #-12]
   426ac:	cmp	r0, r1
   426b0:	bcs	426c8 <__assert_fail@plt+0x31234>
   426b4:	ldr	r0, [fp, #-12]
   426b8:	ldr	r1, [fp, #-16]
   426bc:	mul	r0, r0, r1
   426c0:	str	r0, [fp, #-20]	; 0xffffffec
   426c4:	b	42d3c <__assert_fail@plt+0x318a8>
   426c8:	ldr	r0, [fp, #-12]
   426cc:	ldr	r1, [fp, #-16]
   426d0:	mul	r0, r0, r1
   426d4:	str	r0, [fp, #-20]	; 0xffffffec
   426d8:	b	42d54 <__assert_fail@plt+0x318c0>
   426dc:	ldr	r0, [fp, #-16]
   426e0:	cmp	r0, #0
   426e4:	bcs	427f0 <__assert_fail@plt+0x3135c>
   426e8:	ldr	r0, [fp, #-12]
   426ec:	cmp	r0, #0
   426f0:	bcs	42778 <__assert_fail@plt+0x312e4>
   426f4:	b	42714 <__assert_fail@plt+0x31280>
   426f8:	ldr	r0, [fp, #-12]
   426fc:	ldr	r1, [fp, #-16]
   42700:	mvn	r2, #0
   42704:	udiv	r1, r2, r1
   42708:	cmp	r0, r1
   4270c:	bcc	4288c <__assert_fail@plt+0x313f8>
   42710:	b	428a0 <__assert_fail@plt+0x3140c>
   42714:	b	42728 <__assert_fail@plt+0x31294>
   42718:	ldr	r0, [fp, #-16]
   4271c:	cmp	r0, #1
   42720:	bcc	42738 <__assert_fail@plt+0x312a4>
   42724:	b	42744 <__assert_fail@plt+0x312b0>
   42728:	ldr	r0, [fp, #-16]
   4272c:	movw	r1, #0
   42730:	cmp	r1, r0
   42734:	bcs	42744 <__assert_fail@plt+0x312b0>
   42738:	movw	r0, #1
   4273c:	str	r0, [fp, #-52]	; 0xffffffcc
   42740:	b	4275c <__assert_fail@plt+0x312c8>
   42744:	ldr	r0, [fp, #-16]
   42748:	movw	r1, #0
   4274c:	sub	r0, r1, r0
   42750:	mvn	r1, #0
   42754:	udiv	r0, r1, r0
   42758:	str	r0, [fp, #-52]	; 0xffffffcc
   4275c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   42760:	ldr	r1, [fp, #-12]
   42764:	mvn	r2, #0
   42768:	sub	r1, r2, r1
   4276c:	cmp	r0, r1
   42770:	bls	4288c <__assert_fail@plt+0x313f8>
   42774:	b	428a0 <__assert_fail@plt+0x3140c>
   42778:	b	42780 <__assert_fail@plt+0x312ec>
   4277c:	b	42784 <__assert_fail@plt+0x312f0>
   42780:	b	427d4 <__assert_fail@plt+0x31340>
   42784:	ldr	r0, [fp, #-16]
   42788:	cmn	r0, #1
   4278c:	bne	427d4 <__assert_fail@plt+0x31340>
   42790:	b	427ac <__assert_fail@plt+0x31318>
   42794:	ldr	r0, [fp, #-12]
   42798:	add	r0, r0, #0
   4279c:	movw	r1, #0
   427a0:	cmp	r1, r0
   427a4:	bcc	4288c <__assert_fail@plt+0x313f8>
   427a8:	b	428a0 <__assert_fail@plt+0x3140c>
   427ac:	ldr	r0, [fp, #-12]
   427b0:	movw	r1, #0
   427b4:	cmp	r1, r0
   427b8:	bcs	428a0 <__assert_fail@plt+0x3140c>
   427bc:	ldr	r0, [fp, #-12]
   427c0:	sub	r0, r0, #1
   427c4:	mvn	r1, #0
   427c8:	cmp	r1, r0
   427cc:	bcc	4288c <__assert_fail@plt+0x313f8>
   427d0:	b	428a0 <__assert_fail@plt+0x3140c>
   427d4:	ldr	r0, [fp, #-16]
   427d8:	movw	r1, #0
   427dc:	udiv	r0, r1, r0
   427e0:	ldr	r1, [fp, #-12]
   427e4:	cmp	r0, r1
   427e8:	bcc	4288c <__assert_fail@plt+0x313f8>
   427ec:	b	428a0 <__assert_fail@plt+0x3140c>
   427f0:	ldr	r0, [fp, #-16]
   427f4:	cmp	r0, #0
   427f8:	bne	42800 <__assert_fail@plt+0x3136c>
   427fc:	b	428a0 <__assert_fail@plt+0x3140c>
   42800:	ldr	r0, [fp, #-12]
   42804:	cmp	r0, #0
   42808:	bcs	42874 <__assert_fail@plt+0x313e0>
   4280c:	b	42814 <__assert_fail@plt+0x31380>
   42810:	b	42818 <__assert_fail@plt+0x31384>
   42814:	b	42858 <__assert_fail@plt+0x313c4>
   42818:	ldr	r0, [fp, #-12]
   4281c:	cmn	r0, #1
   42820:	bne	42858 <__assert_fail@plt+0x313c4>
   42824:	b	42840 <__assert_fail@plt+0x313ac>
   42828:	ldr	r0, [fp, #-16]
   4282c:	add	r0, r0, #0
   42830:	movw	r1, #0
   42834:	cmp	r1, r0
   42838:	bcc	4288c <__assert_fail@plt+0x313f8>
   4283c:	b	428a0 <__assert_fail@plt+0x3140c>
   42840:	ldr	r0, [fp, #-16]
   42844:	sub	r0, r0, #1
   42848:	mvn	r1, #0
   4284c:	cmp	r1, r0
   42850:	bcc	4288c <__assert_fail@plt+0x313f8>
   42854:	b	428a0 <__assert_fail@plt+0x3140c>
   42858:	ldr	r0, [fp, #-12]
   4285c:	movw	r1, #0
   42860:	udiv	r0, r1, r0
   42864:	ldr	r1, [fp, #-16]
   42868:	cmp	r0, r1
   4286c:	bcc	4288c <__assert_fail@plt+0x313f8>
   42870:	b	428a0 <__assert_fail@plt+0x3140c>
   42874:	ldr	r0, [fp, #-16]
   42878:	mvn	r1, #0
   4287c:	udiv	r0, r1, r0
   42880:	ldr	r1, [fp, #-12]
   42884:	cmp	r0, r1
   42888:	bcs	428a0 <__assert_fail@plt+0x3140c>
   4288c:	ldr	r0, [fp, #-12]
   42890:	ldr	r1, [fp, #-16]
   42894:	mul	r0, r0, r1
   42898:	str	r0, [fp, #-20]	; 0xffffffec
   4289c:	b	42d3c <__assert_fail@plt+0x318a8>
   428a0:	ldr	r0, [fp, #-12]
   428a4:	ldr	r1, [fp, #-16]
   428a8:	mul	r0, r0, r1
   428ac:	str	r0, [fp, #-20]	; 0xffffffec
   428b0:	b	42d54 <__assert_fail@plt+0x318c0>
   428b4:	b	42b08 <__assert_fail@plt+0x31674>
   428b8:	ldr	r0, [fp, #-16]
   428bc:	cmp	r0, #0
   428c0:	bcs	42a20 <__assert_fail@plt+0x3158c>
   428c4:	ldr	r0, [fp, #-12]
   428c8:	cmp	r0, #0
   428cc:	bcs	4299c <__assert_fail@plt+0x31508>
   428d0:	b	428d4 <__assert_fail@plt+0x31440>
   428d4:	ldr	r0, [fp, #-12]
   428d8:	ldr	r2, [fp, #-16]
   428dc:	mvn	r1, #0
   428e0:	mvn	r3, #-2147483648	; 0x80000000
   428e4:	mov	ip, #0
   428e8:	str	r0, [fp, #-56]	; 0xffffffc8
   428ec:	mov	r0, r1
   428f0:	mov	r1, r3
   428f4:	mov	r3, ip
   428f8:	bl	43688 <__assert_fail@plt+0x321f4>
   428fc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   42900:	subs	r0, r2, r0
   42904:	rscs	r1, r1, #0
   42908:	str	r0, [fp, #-60]	; 0xffffffc4
   4290c:	str	r1, [fp, #-64]	; 0xffffffc0
   42910:	blt	42ae0 <__assert_fail@plt+0x3164c>
   42914:	b	42af4 <__assert_fail@plt+0x31660>
   42918:	b	4292c <__assert_fail@plt+0x31498>
   4291c:	ldr	r0, [fp, #-16]
   42920:	cmp	r0, #1
   42924:	bcc	4293c <__assert_fail@plt+0x314a8>
   42928:	b	42950 <__assert_fail@plt+0x314bc>
   4292c:	ldr	r0, [fp, #-16]
   42930:	movw	r1, #0
   42934:	cmp	r1, r0
   42938:	bcs	42950 <__assert_fail@plt+0x314bc>
   4293c:	mov	r0, #0
   42940:	mvn	r1, #0
   42944:	str	r1, [fp, #-68]	; 0xffffffbc
   42948:	str	r0, [fp, #-72]	; 0xffffffb8
   4294c:	b	42974 <__assert_fail@plt+0x314e0>
   42950:	ldr	r0, [fp, #-16]
   42954:	rsb	r2, r0, #0
   42958:	mvn	r0, #0
   4295c:	mvn	r1, #-2147483648	; 0x80000000
   42960:	mov	r3, #0
   42964:	bl	43688 <__assert_fail@plt+0x321f4>
   42968:	str	r0, [fp, #-68]	; 0xffffffbc
   4296c:	str	r1, [fp, #-72]	; 0xffffffb8
   42970:	b	42974 <__assert_fail@plt+0x314e0>
   42974:	ldr	r0, [fp, #-72]	; 0xffffffb8
   42978:	ldr	r1, [fp, #-68]	; 0xffffffbc
   4297c:	ldr	r2, [fp, #-12]
   42980:	mvn	r2, r2
   42984:	subs	r1, r2, r1
   42988:	rscs	r0, r0, #0
   4298c:	str	r1, [fp, #-76]	; 0xffffffb4
   42990:	str	r0, [fp, #-80]	; 0xffffffb0
   42994:	bge	42ae0 <__assert_fail@plt+0x3164c>
   42998:	b	42af4 <__assert_fail@plt+0x31660>
   4299c:	ldr	r0, [fp, #-16]
   429a0:	cmn	r0, #1
   429a4:	bne	429ec <__assert_fail@plt+0x31558>
   429a8:	b	429cc <__assert_fail@plt+0x31538>
   429ac:	ldr	r0, [fp, #-12]
   429b0:	rsbs	r0, r0, #0
   429b4:	mov	r1, #0
   429b8:	sbcs	r1, r1, #-2147483648	; 0x80000000
   429bc:	str	r0, [fp, #-84]	; 0xffffffac
   429c0:	str	r1, [sp, #88]	; 0x58
   429c4:	blt	42ae0 <__assert_fail@plt+0x3164c>
   429c8:	b	42af4 <__assert_fail@plt+0x31660>
   429cc:	ldr	r0, [fp, #-12]
   429d0:	movw	r1, #0
   429d4:	cmp	r1, r0
   429d8:	bcs	42af4 <__assert_fail@plt+0x31660>
   429dc:	mov	r0, #0
   429e0:	cmp	r0, #0
   429e4:	bne	42ae0 <__assert_fail@plt+0x3164c>
   429e8:	b	42af4 <__assert_fail@plt+0x31660>
   429ec:	ldr	r2, [fp, #-16]
   429f0:	mov	r1, #-2147483648	; 0x80000000
   429f4:	mov	r0, #0
   429f8:	str	r0, [sp, #84]	; 0x54
   429fc:	ldr	r3, [sp, #84]	; 0x54
   42a00:	bl	435b4 <__assert_fail@plt+0x32120>
   42a04:	ldr	r2, [fp, #-12]
   42a08:	subs	r0, r0, r2
   42a0c:	sbcs	r1, r1, #0
   42a10:	str	r0, [sp, #80]	; 0x50
   42a14:	str	r1, [sp, #76]	; 0x4c
   42a18:	blt	42ae0 <__assert_fail@plt+0x3164c>
   42a1c:	b	42af4 <__assert_fail@plt+0x31660>
   42a20:	ldr	r0, [fp, #-16]
   42a24:	cmp	r0, #0
   42a28:	bne	42a30 <__assert_fail@plt+0x3159c>
   42a2c:	b	42af4 <__assert_fail@plt+0x31660>
   42a30:	ldr	r0, [fp, #-12]
   42a34:	cmp	r0, #0
   42a38:	bcs	42ab0 <__assert_fail@plt+0x3161c>
   42a3c:	ldr	r0, [fp, #-12]
   42a40:	cmn	r0, #1
   42a44:	bne	42a7c <__assert_fail@plt+0x315e8>
   42a48:	b	42a6c <__assert_fail@plt+0x315d8>
   42a4c:	ldr	r0, [fp, #-16]
   42a50:	rsbs	r0, r0, #0
   42a54:	mov	r1, #0
   42a58:	sbcs	r1, r1, #-2147483648	; 0x80000000
   42a5c:	str	r0, [sp, #72]	; 0x48
   42a60:	str	r1, [sp, #68]	; 0x44
   42a64:	blt	42ae0 <__assert_fail@plt+0x3164c>
   42a68:	b	42af4 <__assert_fail@plt+0x31660>
   42a6c:	mov	r0, #0
   42a70:	cmp	r0, #0
   42a74:	bne	42ae0 <__assert_fail@plt+0x3164c>
   42a78:	b	42af4 <__assert_fail@plt+0x31660>
   42a7c:	ldr	r2, [fp, #-12]
   42a80:	mov	r1, #-2147483648	; 0x80000000
   42a84:	mov	r0, #0
   42a88:	str	r0, [sp, #64]	; 0x40
   42a8c:	ldr	r3, [sp, #64]	; 0x40
   42a90:	bl	435b4 <__assert_fail@plt+0x32120>
   42a94:	ldr	r2, [fp, #-16]
   42a98:	subs	r0, r0, r2
   42a9c:	sbcs	r1, r1, #0
   42aa0:	str	r0, [sp, #60]	; 0x3c
   42aa4:	str	r1, [sp, #56]	; 0x38
   42aa8:	blt	42ae0 <__assert_fail@plt+0x3164c>
   42aac:	b	42af4 <__assert_fail@plt+0x31660>
   42ab0:	ldr	r2, [fp, #-16]
   42ab4:	mvn	r0, #0
   42ab8:	mvn	r1, #-2147483648	; 0x80000000
   42abc:	mov	r3, #0
   42ac0:	bl	43688 <__assert_fail@plt+0x321f4>
   42ac4:	ldr	r2, [fp, #-12]
   42ac8:	subs	r0, r0, r2
   42acc:	sbcs	r1, r1, #0
   42ad0:	str	r0, [sp, #52]	; 0x34
   42ad4:	str	r1, [sp, #48]	; 0x30
   42ad8:	bge	42af4 <__assert_fail@plt+0x31660>
   42adc:	b	42ae0 <__assert_fail@plt+0x3164c>
   42ae0:	ldr	r0, [fp, #-12]
   42ae4:	ldr	r1, [fp, #-16]
   42ae8:	mul	r0, r0, r1
   42aec:	str	r0, [fp, #-20]	; 0xffffffec
   42af0:	b	42d3c <__assert_fail@plt+0x318a8>
   42af4:	ldr	r0, [fp, #-12]
   42af8:	ldr	r1, [fp, #-16]
   42afc:	mul	r0, r0, r1
   42b00:	str	r0, [fp, #-20]	; 0xffffffec
   42b04:	b	42d54 <__assert_fail@plt+0x318c0>
   42b08:	ldr	r0, [fp, #-16]
   42b0c:	cmp	r0, #0
   42b10:	bcs	42c5c <__assert_fail@plt+0x317c8>
   42b14:	ldr	r0, [fp, #-12]
   42b18:	cmp	r0, #0
   42b1c:	bcs	42be4 <__assert_fail@plt+0x31750>
   42b20:	b	42b5c <__assert_fail@plt+0x316c8>
   42b24:	ldr	r0, [fp, #-12]
   42b28:	ldr	r2, [fp, #-16]
   42b2c:	mvn	r1, #0
   42b30:	mov	r3, #0
   42b34:	str	r0, [sp, #44]	; 0x2c
   42b38:	mov	r0, r1
   42b3c:	bl	43688 <__assert_fail@plt+0x321f4>
   42b40:	ldr	r2, [sp, #44]	; 0x2c
   42b44:	subs	r0, r2, r0
   42b48:	rscs	r1, r1, #0
   42b4c:	str	r0, [sp, #40]	; 0x28
   42b50:	str	r1, [sp, #36]	; 0x24
   42b54:	bcc	42d14 <__assert_fail@plt+0x31880>
   42b58:	b	42d28 <__assert_fail@plt+0x31894>
   42b5c:	b	42b70 <__assert_fail@plt+0x316dc>
   42b60:	ldr	r0, [fp, #-16]
   42b64:	cmp	r0, #1
   42b68:	bcc	42b80 <__assert_fail@plt+0x316ec>
   42b6c:	b	42b94 <__assert_fail@plt+0x31700>
   42b70:	ldr	r0, [fp, #-16]
   42b74:	movw	r1, #0
   42b78:	cmp	r1, r0
   42b7c:	bcs	42b94 <__assert_fail@plt+0x31700>
   42b80:	mov	r0, #1
   42b84:	mvn	r1, #0
   42b88:	str	r1, [sp, #32]
   42b8c:	str	r0, [sp, #28]
   42b90:	b	42bbc <__assert_fail@plt+0x31728>
   42b94:	ldr	r0, [fp, #-16]
   42b98:	rsb	r2, r0, #0
   42b9c:	mvn	r0, #0
   42ba0:	mov	r3, #0
   42ba4:	str	r0, [sp, #24]
   42ba8:	ldr	r1, [sp, #24]
   42bac:	bl	43688 <__assert_fail@plt+0x321f4>
   42bb0:	str	r0, [sp, #32]
   42bb4:	str	r1, [sp, #28]
   42bb8:	b	42bbc <__assert_fail@plt+0x31728>
   42bbc:	ldr	r0, [sp, #28]
   42bc0:	ldr	r1, [sp, #32]
   42bc4:	ldr	r2, [fp, #-12]
   42bc8:	mvn	r2, r2
   42bcc:	subs	r1, r2, r1
   42bd0:	rscs	r0, r0, #0
   42bd4:	str	r1, [sp, #20]
   42bd8:	str	r0, [sp, #16]
   42bdc:	bcs	42d14 <__assert_fail@plt+0x31880>
   42be0:	b	42d28 <__assert_fail@plt+0x31894>
   42be4:	b	42bec <__assert_fail@plt+0x31758>
   42be8:	b	42bf0 <__assert_fail@plt+0x3175c>
   42bec:	b	42c40 <__assert_fail@plt+0x317ac>
   42bf0:	ldr	r0, [fp, #-16]
   42bf4:	cmn	r0, #1
   42bf8:	bne	42c40 <__assert_fail@plt+0x317ac>
   42bfc:	b	42c18 <__assert_fail@plt+0x31784>
   42c00:	ldr	r0, [fp, #-12]
   42c04:	add	r0, r0, #0
   42c08:	movw	r1, #0
   42c0c:	cmp	r1, r0
   42c10:	bcc	42d14 <__assert_fail@plt+0x31880>
   42c14:	b	42d28 <__assert_fail@plt+0x31894>
   42c18:	ldr	r0, [fp, #-12]
   42c1c:	movw	r1, #0
   42c20:	cmp	r1, r0
   42c24:	bcs	42d28 <__assert_fail@plt+0x31894>
   42c28:	ldr	r0, [fp, #-12]
   42c2c:	sub	r0, r0, #1
   42c30:	mvn	r1, #0
   42c34:	cmp	r1, r0
   42c38:	bcc	42d14 <__assert_fail@plt+0x31880>
   42c3c:	b	42d28 <__assert_fail@plt+0x31894>
   42c40:	ldr	r0, [fp, #-16]
   42c44:	movw	r1, #0
   42c48:	udiv	r0, r1, r0
   42c4c:	ldr	r1, [fp, #-12]
   42c50:	cmp	r0, r1
   42c54:	bcc	42d14 <__assert_fail@plt+0x31880>
   42c58:	b	42d28 <__assert_fail@plt+0x31894>
   42c5c:	ldr	r0, [fp, #-16]
   42c60:	cmp	r0, #0
   42c64:	bne	42c6c <__assert_fail@plt+0x317d8>
   42c68:	b	42d28 <__assert_fail@plt+0x31894>
   42c6c:	ldr	r0, [fp, #-12]
   42c70:	cmp	r0, #0
   42c74:	bcs	42ce0 <__assert_fail@plt+0x3184c>
   42c78:	b	42c80 <__assert_fail@plt+0x317ec>
   42c7c:	b	42c84 <__assert_fail@plt+0x317f0>
   42c80:	b	42cc4 <__assert_fail@plt+0x31830>
   42c84:	ldr	r0, [fp, #-12]
   42c88:	cmn	r0, #1
   42c8c:	bne	42cc4 <__assert_fail@plt+0x31830>
   42c90:	b	42cac <__assert_fail@plt+0x31818>
   42c94:	ldr	r0, [fp, #-16]
   42c98:	add	r0, r0, #0
   42c9c:	movw	r1, #0
   42ca0:	cmp	r1, r0
   42ca4:	bcc	42d14 <__assert_fail@plt+0x31880>
   42ca8:	b	42d28 <__assert_fail@plt+0x31894>
   42cac:	ldr	r0, [fp, #-16]
   42cb0:	sub	r0, r0, #1
   42cb4:	mvn	r1, #0
   42cb8:	cmp	r1, r0
   42cbc:	bcc	42d14 <__assert_fail@plt+0x31880>
   42cc0:	b	42d28 <__assert_fail@plt+0x31894>
   42cc4:	ldr	r0, [fp, #-12]
   42cc8:	movw	r1, #0
   42ccc:	udiv	r0, r1, r0
   42cd0:	ldr	r1, [fp, #-16]
   42cd4:	cmp	r0, r1
   42cd8:	bcc	42d14 <__assert_fail@plt+0x31880>
   42cdc:	b	42d28 <__assert_fail@plt+0x31894>
   42ce0:	ldr	r2, [fp, #-16]
   42ce4:	mvn	r0, #0
   42ce8:	mov	r3, #0
   42cec:	str	r0, [sp, #12]
   42cf0:	ldr	r1, [sp, #12]
   42cf4:	bl	43688 <__assert_fail@plt+0x321f4>
   42cf8:	ldr	r2, [fp, #-12]
   42cfc:	subs	r0, r0, r2
   42d00:	sbcs	r1, r1, #0
   42d04:	str	r0, [sp, #8]
   42d08:	str	r1, [sp, #4]
   42d0c:	bcs	42d28 <__assert_fail@plt+0x31894>
   42d10:	b	42d14 <__assert_fail@plt+0x31880>
   42d14:	ldr	r0, [fp, #-12]
   42d18:	ldr	r1, [fp, #-16]
   42d1c:	mul	r0, r0, r1
   42d20:	str	r0, [fp, #-20]	; 0xffffffec
   42d24:	b	42d3c <__assert_fail@plt+0x318a8>
   42d28:	ldr	r0, [fp, #-12]
   42d2c:	ldr	r1, [fp, #-16]
   42d30:	mul	r0, r0, r1
   42d34:	str	r0, [fp, #-20]	; 0xffffffec
   42d38:	b	42d54 <__assert_fail@plt+0x318c0>
   42d3c:	bl	113b0 <__errno_location@plt>
   42d40:	movw	lr, #12
   42d44:	str	lr, [r0]
   42d48:	movw	r0, #0
   42d4c:	str	r0, [fp, #-4]
   42d50:	b	42d64 <__assert_fail@plt+0x318d0>
   42d54:	ldr	r0, [fp, #-8]
   42d58:	ldr	r1, [fp, #-20]	; 0xffffffec
   42d5c:	bl	3fc48 <__assert_fail@plt+0x2e7b4>
   42d60:	str	r0, [fp, #-4]
   42d64:	ldr	r0, [fp, #-4]
   42d68:	mov	sp, fp
   42d6c:	pop	{fp, pc}
   42d70:	svcvc	0x00ffffff
   42d74:	andhi	r0, r0, r0
   42d78:			; <UNDEFINED> instruction: 0xffff8000
   42d7c:	sub	sp, sp, #12
   42d80:	str	r0, [sp, #4]
   42d84:	ldr	r0, [sp, #4]
   42d88:	sub	r1, r0, #48	; 0x30
   42d8c:	cmp	r1, #10
   42d90:	str	r0, [sp]
   42d94:	bcc	42dc4 <__assert_fail@plt+0x31930>
   42d98:	b	42d9c <__assert_fail@plt+0x31908>
   42d9c:	ldr	r0, [sp]
   42da0:	sub	r1, r0, #65	; 0x41
   42da4:	cmp	r1, #26
   42da8:	bcc	42dc4 <__assert_fail@plt+0x31930>
   42dac:	b	42db0 <__assert_fail@plt+0x3191c>
   42db0:	ldr	r0, [sp]
   42db4:	sub	r1, r0, #97	; 0x61
   42db8:	cmp	r1, #25
   42dbc:	bhi	42dd4 <__assert_fail@plt+0x31940>
   42dc0:	b	42dc4 <__assert_fail@plt+0x31930>
   42dc4:	movw	r0, #1
   42dc8:	and	r0, r0, #1
   42dcc:	strb	r0, [sp, #11]
   42dd0:	b	42de0 <__assert_fail@plt+0x3194c>
   42dd4:	movw	r0, #0
   42dd8:	and	r0, r0, #1
   42ddc:	strb	r0, [sp, #11]
   42de0:	ldrb	r0, [sp, #11]
   42de4:	and	r0, r0, #1
   42de8:	add	sp, sp, #12
   42dec:	bx	lr
   42df0:	sub	sp, sp, #12
   42df4:	str	r0, [sp, #4]
   42df8:	ldr	r0, [sp, #4]
   42dfc:	sub	r1, r0, #65	; 0x41
   42e00:	cmp	r1, #26
   42e04:	str	r0, [sp]
   42e08:	bcc	42e24 <__assert_fail@plt+0x31990>
   42e0c:	b	42e10 <__assert_fail@plt+0x3197c>
   42e10:	ldr	r0, [sp]
   42e14:	sub	r1, r0, #97	; 0x61
   42e18:	cmp	r1, #25
   42e1c:	bhi	42e34 <__assert_fail@plt+0x319a0>
   42e20:	b	42e24 <__assert_fail@plt+0x31990>
   42e24:	movw	r0, #1
   42e28:	and	r0, r0, #1
   42e2c:	strb	r0, [sp, #11]
   42e30:	b	42e40 <__assert_fail@plt+0x319ac>
   42e34:	movw	r0, #0
   42e38:	and	r0, r0, #1
   42e3c:	strb	r0, [sp, #11]
   42e40:	ldrb	r0, [sp, #11]
   42e44:	and	r0, r0, #1
   42e48:	add	sp, sp, #12
   42e4c:	bx	lr
   42e50:	sub	sp, sp, #8
   42e54:	str	r0, [sp]
   42e58:	ldr	r0, [sp]
   42e5c:	cmp	r0, #127	; 0x7f
   42e60:	bhi	42e78 <__assert_fail@plt+0x319e4>
   42e64:	b	42e68 <__assert_fail@plt+0x319d4>
   42e68:	movw	r0, #1
   42e6c:	and	r0, r0, #1
   42e70:	strb	r0, [sp, #7]
   42e74:	b	42e84 <__assert_fail@plt+0x319f0>
   42e78:	movw	r0, #0
   42e7c:	and	r0, r0, #1
   42e80:	strb	r0, [sp, #7]
   42e84:	ldrb	r0, [sp, #7]
   42e88:	and	r0, r0, #1
   42e8c:	add	sp, sp, #8
   42e90:	bx	lr
   42e94:	sub	sp, sp, #8
   42e98:	str	r0, [sp, #4]
   42e9c:	ldr	r0, [sp, #4]
   42ea0:	cmp	r0, #32
   42ea4:	movw	r0, #1
   42ea8:	str	r0, [sp]
   42eac:	beq	42ec4 <__assert_fail@plt+0x31a30>
   42eb0:	ldr	r0, [sp, #4]
   42eb4:	cmp	r0, #9
   42eb8:	movw	r0, #0
   42ebc:	moveq	r0, #1
   42ec0:	str	r0, [sp]
   42ec4:	ldr	r0, [sp]
   42ec8:	and	r0, r0, #1
   42ecc:	add	sp, sp, #8
   42ed0:	bx	lr
   42ed4:	sub	sp, sp, #12
   42ed8:	str	r0, [sp, #4]
   42edc:	ldr	r0, [sp, #4]
   42ee0:	cmp	r0, #32
   42ee4:	str	r0, [sp]
   42ee8:	bcc	42f00 <__assert_fail@plt+0x31a6c>
   42eec:	b	42ef0 <__assert_fail@plt+0x31a5c>
   42ef0:	ldr	r0, [sp]
   42ef4:	cmp	r0, #127	; 0x7f
   42ef8:	bne	42f10 <__assert_fail@plt+0x31a7c>
   42efc:	b	42f00 <__assert_fail@plt+0x31a6c>
   42f00:	movw	r0, #1
   42f04:	and	r0, r0, #1
   42f08:	strb	r0, [sp, #11]
   42f0c:	b	42f1c <__assert_fail@plt+0x31a88>
   42f10:	movw	r0, #0
   42f14:	and	r0, r0, #1
   42f18:	strb	r0, [sp, #11]
   42f1c:	ldrb	r0, [sp, #11]
   42f20:	and	r0, r0, #1
   42f24:	add	sp, sp, #12
   42f28:	bx	lr
   42f2c:	sub	sp, sp, #8
   42f30:	str	r0, [sp]
   42f34:	ldr	r0, [sp]
   42f38:	sub	r0, r0, #48	; 0x30
   42f3c:	cmp	r0, #9
   42f40:	bhi	42f58 <__assert_fail@plt+0x31ac4>
   42f44:	b	42f48 <__assert_fail@plt+0x31ab4>
   42f48:	movw	r0, #1
   42f4c:	and	r0, r0, #1
   42f50:	strb	r0, [sp, #7]
   42f54:	b	42f64 <__assert_fail@plt+0x31ad0>
   42f58:	movw	r0, #0
   42f5c:	and	r0, r0, #1
   42f60:	strb	r0, [sp, #7]
   42f64:	ldrb	r0, [sp, #7]
   42f68:	and	r0, r0, #1
   42f6c:	add	sp, sp, #8
   42f70:	bx	lr
   42f74:	sub	sp, sp, #8
   42f78:	str	r0, [sp]
   42f7c:	ldr	r0, [sp]
   42f80:	sub	r0, r0, #33	; 0x21
   42f84:	cmp	r0, #93	; 0x5d
   42f88:	bhi	42fa0 <__assert_fail@plt+0x31b0c>
   42f8c:	b	42f90 <__assert_fail@plt+0x31afc>
   42f90:	movw	r0, #1
   42f94:	and	r0, r0, #1
   42f98:	strb	r0, [sp, #7]
   42f9c:	b	42fac <__assert_fail@plt+0x31b18>
   42fa0:	movw	r0, #0
   42fa4:	and	r0, r0, #1
   42fa8:	strb	r0, [sp, #7]
   42fac:	ldrb	r0, [sp, #7]
   42fb0:	and	r0, r0, #1
   42fb4:	add	sp, sp, #8
   42fb8:	bx	lr
   42fbc:	sub	sp, sp, #8
   42fc0:	str	r0, [sp]
   42fc4:	ldr	r0, [sp]
   42fc8:	sub	r0, r0, #97	; 0x61
   42fcc:	cmp	r0, #25
   42fd0:	bhi	42fe8 <__assert_fail@plt+0x31b54>
   42fd4:	b	42fd8 <__assert_fail@plt+0x31b44>
   42fd8:	movw	r0, #1
   42fdc:	and	r0, r0, #1
   42fe0:	strb	r0, [sp, #7]
   42fe4:	b	42ff4 <__assert_fail@plt+0x31b60>
   42fe8:	movw	r0, #0
   42fec:	and	r0, r0, #1
   42ff0:	strb	r0, [sp, #7]
   42ff4:	ldrb	r0, [sp, #7]
   42ff8:	and	r0, r0, #1
   42ffc:	add	sp, sp, #8
   43000:	bx	lr
   43004:	sub	sp, sp, #8
   43008:	str	r0, [sp]
   4300c:	ldr	r0, [sp]
   43010:	sub	r0, r0, #32
   43014:	cmp	r0, #94	; 0x5e
   43018:	bhi	43030 <__assert_fail@plt+0x31b9c>
   4301c:	b	43020 <__assert_fail@plt+0x31b8c>
   43020:	movw	r0, #1
   43024:	and	r0, r0, #1
   43028:	strb	r0, [sp, #7]
   4302c:	b	4303c <__assert_fail@plt+0x31ba8>
   43030:	movw	r0, #0
   43034:	and	r0, r0, #1
   43038:	strb	r0, [sp, #7]
   4303c:	ldrb	r0, [sp, #7]
   43040:	and	r0, r0, #1
   43044:	add	sp, sp, #8
   43048:	bx	lr
   4304c:	sub	sp, sp, #12
   43050:	str	r0, [sp, #4]
   43054:	ldr	r0, [sp, #4]
   43058:	sub	r0, r0, #33	; 0x21
   4305c:	cmp	r0, #93	; 0x5d
   43060:	str	r0, [sp]
   43064:	bhi	43200 <__assert_fail@plt+0x31d6c>
   43068:	add	r0, pc, #8
   4306c:	ldr	r1, [sp]
   43070:	ldr	r0, [r0, r1, lsl #2]
   43074:	mov	pc, r0
   43078:	strdeq	r3, [r4], -r0
   4307c:	strdeq	r3, [r4], -r0
   43080:	strdeq	r3, [r4], -r0
   43084:	strdeq	r3, [r4], -r0
   43088:	strdeq	r3, [r4], -r0
   4308c:	strdeq	r3, [r4], -r0
   43090:	strdeq	r3, [r4], -r0
   43094:	strdeq	r3, [r4], -r0
   43098:	strdeq	r3, [r4], -r0
   4309c:	strdeq	r3, [r4], -r0
   430a0:	strdeq	r3, [r4], -r0
   430a4:	strdeq	r3, [r4], -r0
   430a8:	strdeq	r3, [r4], -r0
   430ac:	strdeq	r3, [r4], -r0
   430b0:	strdeq	r3, [r4], -r0
   430b4:	andeq	r3, r4, r0, lsl #4
   430b8:	andeq	r3, r4, r0, lsl #4
   430bc:	andeq	r3, r4, r0, lsl #4
   430c0:	andeq	r3, r4, r0, lsl #4
   430c4:	andeq	r3, r4, r0, lsl #4
   430c8:	andeq	r3, r4, r0, lsl #4
   430cc:	andeq	r3, r4, r0, lsl #4
   430d0:	andeq	r3, r4, r0, lsl #4
   430d4:	andeq	r3, r4, r0, lsl #4
   430d8:	andeq	r3, r4, r0, lsl #4
   430dc:	strdeq	r3, [r4], -r0
   430e0:	strdeq	r3, [r4], -r0
   430e4:	strdeq	r3, [r4], -r0
   430e8:	strdeq	r3, [r4], -r0
   430ec:	strdeq	r3, [r4], -r0
   430f0:	strdeq	r3, [r4], -r0
   430f4:	strdeq	r3, [r4], -r0
   430f8:	andeq	r3, r4, r0, lsl #4
   430fc:	andeq	r3, r4, r0, lsl #4
   43100:	andeq	r3, r4, r0, lsl #4
   43104:	andeq	r3, r4, r0, lsl #4
   43108:	andeq	r3, r4, r0, lsl #4
   4310c:	andeq	r3, r4, r0, lsl #4
   43110:	andeq	r3, r4, r0, lsl #4
   43114:	andeq	r3, r4, r0, lsl #4
   43118:	andeq	r3, r4, r0, lsl #4
   4311c:	andeq	r3, r4, r0, lsl #4
   43120:	andeq	r3, r4, r0, lsl #4
   43124:	andeq	r3, r4, r0, lsl #4
   43128:	andeq	r3, r4, r0, lsl #4
   4312c:	andeq	r3, r4, r0, lsl #4
   43130:	andeq	r3, r4, r0, lsl #4
   43134:	andeq	r3, r4, r0, lsl #4
   43138:	andeq	r3, r4, r0, lsl #4
   4313c:	andeq	r3, r4, r0, lsl #4
   43140:	andeq	r3, r4, r0, lsl #4
   43144:	andeq	r3, r4, r0, lsl #4
   43148:	andeq	r3, r4, r0, lsl #4
   4314c:	andeq	r3, r4, r0, lsl #4
   43150:	andeq	r3, r4, r0, lsl #4
   43154:	andeq	r3, r4, r0, lsl #4
   43158:	andeq	r3, r4, r0, lsl #4
   4315c:	andeq	r3, r4, r0, lsl #4
   43160:	strdeq	r3, [r4], -r0
   43164:	strdeq	r3, [r4], -r0
   43168:	strdeq	r3, [r4], -r0
   4316c:	strdeq	r3, [r4], -r0
   43170:	strdeq	r3, [r4], -r0
   43174:	strdeq	r3, [r4], -r0
   43178:	andeq	r3, r4, r0, lsl #4
   4317c:	andeq	r3, r4, r0, lsl #4
   43180:	andeq	r3, r4, r0, lsl #4
   43184:	andeq	r3, r4, r0, lsl #4
   43188:	andeq	r3, r4, r0, lsl #4
   4318c:	andeq	r3, r4, r0, lsl #4
   43190:	andeq	r3, r4, r0, lsl #4
   43194:	andeq	r3, r4, r0, lsl #4
   43198:	andeq	r3, r4, r0, lsl #4
   4319c:	andeq	r3, r4, r0, lsl #4
   431a0:	andeq	r3, r4, r0, lsl #4
   431a4:	andeq	r3, r4, r0, lsl #4
   431a8:	andeq	r3, r4, r0, lsl #4
   431ac:	andeq	r3, r4, r0, lsl #4
   431b0:	andeq	r3, r4, r0, lsl #4
   431b4:	andeq	r3, r4, r0, lsl #4
   431b8:	andeq	r3, r4, r0, lsl #4
   431bc:	andeq	r3, r4, r0, lsl #4
   431c0:	andeq	r3, r4, r0, lsl #4
   431c4:	andeq	r3, r4, r0, lsl #4
   431c8:	andeq	r3, r4, r0, lsl #4
   431cc:	andeq	r3, r4, r0, lsl #4
   431d0:	andeq	r3, r4, r0, lsl #4
   431d4:	andeq	r3, r4, r0, lsl #4
   431d8:	andeq	r3, r4, r0, lsl #4
   431dc:	andeq	r3, r4, r0, lsl #4
   431e0:	strdeq	r3, [r4], -r0
   431e4:	strdeq	r3, [r4], -r0
   431e8:	strdeq	r3, [r4], -r0
   431ec:	strdeq	r3, [r4], -r0
   431f0:	movw	r0, #1
   431f4:	and	r0, r0, #1
   431f8:	strb	r0, [sp, #11]
   431fc:	b	4320c <__assert_fail@plt+0x31d78>
   43200:	movw	r0, #0
   43204:	and	r0, r0, #1
   43208:	strb	r0, [sp, #11]
   4320c:	ldrb	r0, [sp, #11]
   43210:	and	r0, r0, #1
   43214:	add	sp, sp, #12
   43218:	bx	lr
   4321c:	sub	sp, sp, #12
   43220:	str	r0, [sp, #4]
   43224:	ldr	r0, [sp, #4]
   43228:	sub	r1, r0, #9
   4322c:	cmp	r1, #5
   43230:	str	r0, [sp]
   43234:	bcc	4324c <__assert_fail@plt+0x31db8>
   43238:	b	4323c <__assert_fail@plt+0x31da8>
   4323c:	ldr	r0, [sp]
   43240:	cmp	r0, #32
   43244:	bne	4325c <__assert_fail@plt+0x31dc8>
   43248:	b	4324c <__assert_fail@plt+0x31db8>
   4324c:	movw	r0, #1
   43250:	and	r0, r0, #1
   43254:	strb	r0, [sp, #11]
   43258:	b	43268 <__assert_fail@plt+0x31dd4>
   4325c:	movw	r0, #0
   43260:	and	r0, r0, #1
   43264:	strb	r0, [sp, #11]
   43268:	ldrb	r0, [sp, #11]
   4326c:	and	r0, r0, #1
   43270:	add	sp, sp, #12
   43274:	bx	lr
   43278:	sub	sp, sp, #8
   4327c:	str	r0, [sp]
   43280:	ldr	r0, [sp]
   43284:	sub	r0, r0, #65	; 0x41
   43288:	cmp	r0, #25
   4328c:	bhi	432a4 <__assert_fail@plt+0x31e10>
   43290:	b	43294 <__assert_fail@plt+0x31e00>
   43294:	movw	r0, #1
   43298:	and	r0, r0, #1
   4329c:	strb	r0, [sp, #7]
   432a0:	b	432b0 <__assert_fail@plt+0x31e1c>
   432a4:	movw	r0, #0
   432a8:	and	r0, r0, #1
   432ac:	strb	r0, [sp, #7]
   432b0:	ldrb	r0, [sp, #7]
   432b4:	and	r0, r0, #1
   432b8:	add	sp, sp, #8
   432bc:	bx	lr
   432c0:	sub	sp, sp, #12
   432c4:	str	r0, [sp, #4]
   432c8:	ldr	r0, [sp, #4]
   432cc:	sub	r1, r0, #48	; 0x30
   432d0:	cmp	r1, #10
   432d4:	str	r0, [sp]
   432d8:	bcc	43308 <__assert_fail@plt+0x31e74>
   432dc:	b	432e0 <__assert_fail@plt+0x31e4c>
   432e0:	ldr	r0, [sp]
   432e4:	sub	r1, r0, #65	; 0x41
   432e8:	cmp	r1, #6
   432ec:	bcc	43308 <__assert_fail@plt+0x31e74>
   432f0:	b	432f4 <__assert_fail@plt+0x31e60>
   432f4:	ldr	r0, [sp]
   432f8:	sub	r1, r0, #97	; 0x61
   432fc:	cmp	r1, #5
   43300:	bhi	43318 <__assert_fail@plt+0x31e84>
   43304:	b	43308 <__assert_fail@plt+0x31e74>
   43308:	movw	r0, #1
   4330c:	and	r0, r0, #1
   43310:	strb	r0, [sp, #11]
   43314:	b	43324 <__assert_fail@plt+0x31e90>
   43318:	movw	r0, #0
   4331c:	and	r0, r0, #1
   43320:	strb	r0, [sp, #11]
   43324:	ldrb	r0, [sp, #11]
   43328:	and	r0, r0, #1
   4332c:	add	sp, sp, #12
   43330:	bx	lr
   43334:	sub	sp, sp, #8
   43338:	str	r0, [sp]
   4333c:	ldr	r0, [sp]
   43340:	sub	r0, r0, #65	; 0x41
   43344:	cmp	r0, #25
   43348:	bhi	43364 <__assert_fail@plt+0x31ed0>
   4334c:	b	43350 <__assert_fail@plt+0x31ebc>
   43350:	ldr	r0, [sp]
   43354:	sub	r0, r0, #65	; 0x41
   43358:	add	r0, r0, #97	; 0x61
   4335c:	str	r0, [sp, #4]
   43360:	b	4336c <__assert_fail@plt+0x31ed8>
   43364:	ldr	r0, [sp]
   43368:	str	r0, [sp, #4]
   4336c:	ldr	r0, [sp, #4]
   43370:	add	sp, sp, #8
   43374:	bx	lr
   43378:	sub	sp, sp, #8
   4337c:	str	r0, [sp]
   43380:	ldr	r0, [sp]
   43384:	sub	r0, r0, #97	; 0x61
   43388:	cmp	r0, #25
   4338c:	bhi	433a8 <__assert_fail@plt+0x31f14>
   43390:	b	43394 <__assert_fail@plt+0x31f00>
   43394:	ldr	r0, [sp]
   43398:	sub	r0, r0, #97	; 0x61
   4339c:	add	r0, r0, #65	; 0x41
   433a0:	str	r0, [sp, #4]
   433a4:	b	433b0 <__assert_fail@plt+0x31f1c>
   433a8:	ldr	r0, [sp]
   433ac:	str	r0, [sp, #4]
   433b0:	ldr	r0, [sp, #4]
   433b4:	add	sp, sp, #8
   433b8:	bx	lr
   433bc:	push	{r4, r5, fp, lr}
   433c0:	add	fp, sp, #8
   433c4:	sub	sp, sp, #272	; 0x110
   433c8:	add	r1, sp, #7
   433cc:	str	r0, [fp, #-16]
   433d0:	ldr	r0, [fp, #-16]
   433d4:	movw	r2, #257	; 0x101
   433d8:	bl	43458 <__assert_fail@plt+0x31fc4>
   433dc:	cmp	r0, #0
   433e0:	beq	433f4 <__assert_fail@plt+0x31f60>
   433e4:	movw	r0, #0
   433e8:	and	r0, r0, #1
   433ec:	strb	r0, [fp, #-9]
   433f0:	b	43448 <__assert_fail@plt+0x31fb4>
   433f4:	add	r0, sp, #7
   433f8:	movw	r1, #24136	; 0x5e48
   433fc:	movt	r1, #4
   43400:	bl	111d0 <strcmp@plt>
   43404:	cmp	r0, #0
   43408:	movw	r0, #1
   4340c:	str	r0, [sp]
   43410:	beq	43434 <__assert_fail@plt+0x31fa0>
   43414:	add	r0, sp, #7
   43418:	movw	r1, #24138	; 0x5e4a
   4341c:	movt	r1, #4
   43420:	bl	111d0 <strcmp@plt>
   43424:	cmp	r0, #0
   43428:	movw	r0, #0
   4342c:	moveq	r0, #1
   43430:	str	r0, [sp]
   43434:	ldr	r0, [sp]
   43438:	mvn	r1, #0
   4343c:	eor	r0, r0, r1
   43440:	and	r0, r0, #1
   43444:	strb	r0, [fp, #-9]
   43448:	ldrb	r0, [fp, #-9]
   4344c:	and	r0, r0, #1
   43450:	sub	sp, fp, #8
   43454:	pop	{r4, r5, fp, pc}
   43458:	push	{fp, lr}
   4345c:	mov	fp, sp
   43460:	sub	sp, sp, #16
   43464:	str	r0, [fp, #-4]
   43468:	str	r1, [sp, #8]
   4346c:	str	r2, [sp, #4]
   43470:	ldr	r0, [fp, #-4]
   43474:	ldr	r1, [sp, #8]
   43478:	ldr	r2, [sp, #4]
   4347c:	bl	43488 <__assert_fail@plt+0x31ff4>
   43480:	mov	sp, fp
   43484:	pop	{fp, pc}
   43488:	push	{fp, lr}
   4348c:	mov	fp, sp
   43490:	sub	sp, sp, #24
   43494:	str	r0, [fp, #-8]
   43498:	str	r1, [sp, #12]
   4349c:	str	r2, [sp, #8]
   434a0:	ldr	r0, [fp, #-8]
   434a4:	bl	43588 <__assert_fail@plt+0x320f4>
   434a8:	str	r0, [sp, #4]
   434ac:	ldr	r0, [sp, #4]
   434b0:	movw	r1, #0
   434b4:	cmp	r0, r1
   434b8:	bne	434e0 <__assert_fail@plt+0x3204c>
   434bc:	ldr	r0, [sp, #8]
   434c0:	cmp	r0, #0
   434c4:	bls	434d4 <__assert_fail@plt+0x32040>
   434c8:	ldr	r0, [sp, #12]
   434cc:	movw	r1, #0
   434d0:	strb	r1, [r0]
   434d4:	movw	r0, #22
   434d8:	str	r0, [fp, #-4]
   434dc:	b	4355c <__assert_fail@plt+0x320c8>
   434e0:	ldr	r0, [sp, #4]
   434e4:	bl	1138c <strlen@plt>
   434e8:	str	r0, [sp]
   434ec:	ldr	r0, [sp]
   434f0:	ldr	lr, [sp, #8]
   434f4:	cmp	r0, lr
   434f8:	bcs	4351c <__assert_fail@plt+0x32088>
   434fc:	ldr	r0, [sp, #12]
   43500:	ldr	r1, [sp, #4]
   43504:	ldr	r2, [sp]
   43508:	add	r2, r2, #1
   4350c:	bl	11248 <memcpy@plt>
   43510:	movw	r0, #0
   43514:	str	r0, [fp, #-4]
   43518:	b	4355c <__assert_fail@plt+0x320c8>
   4351c:	ldr	r0, [sp, #8]
   43520:	cmp	r0, #0
   43524:	bls	43554 <__assert_fail@plt+0x320c0>
   43528:	ldr	r0, [sp, #12]
   4352c:	ldr	r1, [sp, #4]
   43530:	ldr	r2, [sp, #8]
   43534:	sub	r2, r2, #1
   43538:	bl	11248 <memcpy@plt>
   4353c:	ldr	r0, [sp, #12]
   43540:	ldr	r1, [sp, #8]
   43544:	sub	r1, r1, #1
   43548:	add	r0, r0, r1
   4354c:	movw	r1, #0
   43550:	strb	r1, [r0]
   43554:	movw	r0, #34	; 0x22
   43558:	str	r0, [fp, #-4]
   4355c:	ldr	r0, [fp, #-4]
   43560:	mov	sp, fp
   43564:	pop	{fp, pc}
   43568:	push	{fp, lr}
   4356c:	mov	fp, sp
   43570:	sub	sp, sp, #8
   43574:	str	r0, [sp, #4]
   43578:	ldr	r0, [sp, #4]
   4357c:	bl	43588 <__assert_fail@plt+0x320f4>
   43580:	mov	sp, fp
   43584:	pop	{fp, pc}
   43588:	push	{fp, lr}
   4358c:	mov	fp, sp
   43590:	sub	sp, sp, #8
   43594:	str	r0, [sp, #4]
   43598:	ldr	r0, [sp, #4]
   4359c:	movw	r1, #0
   435a0:	bl	1141c <setlocale@plt>
   435a4:	str	r0, [sp]
   435a8:	ldr	r0, [sp]
   435ac:	mov	sp, fp
   435b0:	pop	{fp, pc}
   435b4:	cmp	r3, #0
   435b8:	cmpeq	r2, #0
   435bc:	bne	435e0 <__assert_fail@plt+0x3214c>
   435c0:	cmp	r1, #0
   435c4:	movlt	r1, #-2147483648	; 0x80000000
   435c8:	movlt	r0, #0
   435cc:	blt	435dc <__assert_fail@plt+0x32148>
   435d0:	cmpeq	r0, #0
   435d4:	mvnne	r1, #-2147483648	; 0x80000000
   435d8:	mvnne	r0, #0
   435dc:	b	436c4 <__assert_fail@plt+0x32230>
   435e0:	sub	sp, sp, #8
   435e4:	push	{sp, lr}
   435e8:	cmp	r1, #0
   435ec:	blt	4360c <__assert_fail@plt+0x32178>
   435f0:	cmp	r3, #0
   435f4:	blt	43640 <__assert_fail@plt+0x321ac>
   435f8:	bl	436d4 <__assert_fail@plt+0x32240>
   435fc:	ldr	lr, [sp, #4]
   43600:	add	sp, sp, #8
   43604:	pop	{r2, r3}
   43608:	bx	lr
   4360c:	rsbs	r0, r0, #0
   43610:	sbc	r1, r1, r1, lsl #1
   43614:	cmp	r3, #0
   43618:	blt	43664 <__assert_fail@plt+0x321d0>
   4361c:	bl	436d4 <__assert_fail@plt+0x32240>
   43620:	ldr	lr, [sp, #4]
   43624:	add	sp, sp, #8
   43628:	pop	{r2, r3}
   4362c:	rsbs	r0, r0, #0
   43630:	sbc	r1, r1, r1, lsl #1
   43634:	rsbs	r2, r2, #0
   43638:	sbc	r3, r3, r3, lsl #1
   4363c:	bx	lr
   43640:	rsbs	r2, r2, #0
   43644:	sbc	r3, r3, r3, lsl #1
   43648:	bl	436d4 <__assert_fail@plt+0x32240>
   4364c:	ldr	lr, [sp, #4]
   43650:	add	sp, sp, #8
   43654:	pop	{r2, r3}
   43658:	rsbs	r0, r0, #0
   4365c:	sbc	r1, r1, r1, lsl #1
   43660:	bx	lr
   43664:	rsbs	r2, r2, #0
   43668:	sbc	r3, r3, r3, lsl #1
   4366c:	bl	436d4 <__assert_fail@plt+0x32240>
   43670:	ldr	lr, [sp, #4]
   43674:	add	sp, sp, #8
   43678:	pop	{r2, r3}
   4367c:	rsbs	r2, r2, #0
   43680:	sbc	r3, r3, r3, lsl #1
   43684:	bx	lr
   43688:	cmp	r3, #0
   4368c:	cmpeq	r2, #0
   43690:	bne	436a8 <__assert_fail@plt+0x32214>
   43694:	cmp	r1, #0
   43698:	cmpeq	r0, #0
   4369c:	mvnne	r1, #0
   436a0:	mvnne	r0, #0
   436a4:	b	436c4 <__assert_fail@plt+0x32230>
   436a8:	sub	sp, sp, #8
   436ac:	push	{sp, lr}
   436b0:	bl	436d4 <__assert_fail@plt+0x32240>
   436b4:	ldr	lr, [sp, #4]
   436b8:	add	sp, sp, #8
   436bc:	pop	{r2, r3}
   436c0:	bx	lr
   436c4:	push	{r1, lr}
   436c8:	mov	r0, #8
   436cc:	bl	111ac <raise@plt>
   436d0:	pop	{r1, pc}
   436d4:	cmp	r1, r3
   436d8:	cmpeq	r0, r2
   436dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   436e0:	mov	r4, r0
   436e4:	movcc	r0, #0
   436e8:	mov	r5, r1
   436ec:	ldr	lr, [sp, #36]	; 0x24
   436f0:	movcc	r1, r0
   436f4:	bcc	437f0 <__assert_fail@plt+0x3235c>
   436f8:	cmp	r3, #0
   436fc:	clzeq	ip, r2
   43700:	clzne	ip, r3
   43704:	addeq	ip, ip, #32
   43708:	cmp	r5, #0
   4370c:	clzeq	r1, r4
   43710:	addeq	r1, r1, #32
   43714:	clzne	r1, r5
   43718:	sub	ip, ip, r1
   4371c:	sub	sl, ip, #32
   43720:	lsl	r9, r3, ip
   43724:	rsb	fp, ip, #32
   43728:	orr	r9, r9, r2, lsl sl
   4372c:	orr	r9, r9, r2, lsr fp
   43730:	lsl	r8, r2, ip
   43734:	cmp	r5, r9
   43738:	cmpeq	r4, r8
   4373c:	movcc	r0, #0
   43740:	movcc	r1, r0
   43744:	bcc	43760 <__assert_fail@plt+0x322cc>
   43748:	mov	r0, #1
   4374c:	subs	r4, r4, r8
   43750:	lsl	r1, r0, sl
   43754:	orr	r1, r1, r0, lsr fp
   43758:	lsl	r0, r0, ip
   4375c:	sbc	r5, r5, r9
   43760:	cmp	ip, #0
   43764:	beq	437f0 <__assert_fail@plt+0x3235c>
   43768:	lsr	r6, r8, #1
   4376c:	orr	r6, r6, r9, lsl #31
   43770:	lsr	r7, r9, #1
   43774:	mov	r2, ip
   43778:	b	4379c <__assert_fail@plt+0x32308>
   4377c:	subs	r3, r4, r6
   43780:	sbc	r8, r5, r7
   43784:	adds	r3, r3, r3
   43788:	adc	r8, r8, r8
   4378c:	adds	r4, r3, #1
   43790:	adc	r5, r8, #0
   43794:	subs	r2, r2, #1
   43798:	beq	437b8 <__assert_fail@plt+0x32324>
   4379c:	cmp	r5, r7
   437a0:	cmpeq	r4, r6
   437a4:	bcs	4377c <__assert_fail@plt+0x322e8>
   437a8:	adds	r4, r4, r4
   437ac:	adc	r5, r5, r5
   437b0:	subs	r2, r2, #1
   437b4:	bne	4379c <__assert_fail@plt+0x32308>
   437b8:	lsr	r3, r4, ip
   437bc:	orr	r3, r3, r5, lsl fp
   437c0:	lsr	r2, r5, ip
   437c4:	orr	r3, r3, r5, lsr sl
   437c8:	adds	r0, r0, r4
   437cc:	mov	r4, r3
   437d0:	lsl	r3, r2, ip
   437d4:	orr	r3, r3, r4, lsl sl
   437d8:	lsl	ip, r4, ip
   437dc:	orr	r3, r3, r4, lsr fp
   437e0:	adc	r1, r1, r5
   437e4:	subs	r0, r0, ip
   437e8:	mov	r5, r2
   437ec:	sbc	r1, r1, r3
   437f0:	cmp	lr, #0
   437f4:	strdne	r4, [lr]
   437f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   437fc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   43800:	mov	r7, r0
   43804:	ldr	r6, [pc, #72]	; 43854 <__assert_fail@plt+0x323c0>
   43808:	ldr	r5, [pc, #72]	; 43858 <__assert_fail@plt+0x323c4>
   4380c:	add	r6, pc, r6
   43810:	add	r5, pc, r5
   43814:	sub	r6, r6, r5
   43818:	mov	r8, r1
   4381c:	mov	r9, r2
   43820:	bl	1115c <pthread_mutex_unlock@plt-0x20>
   43824:	asrs	r6, r6, #2
   43828:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   4382c:	mov	r4, #0
   43830:	add	r4, r4, #1
   43834:	ldr	r3, [r5], #4
   43838:	mov	r2, r9
   4383c:	mov	r1, r8
   43840:	mov	r0, r7
   43844:	blx	r3
   43848:	cmp	r6, r4
   4384c:	bne	43830 <__assert_fail@plt+0x3239c>
   43850:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   43854:	strdeq	r2, [r1], -r8
   43858:	strdeq	r2, [r1], -r0
   4385c:	bx	lr
   43860:	ldr	r3, [pc, #12]	; 43874 <__assert_fail@plt+0x323e0>
   43864:	mov	r1, #0
   43868:	add	r3, pc, r3
   4386c:	ldr	r2, [r3]
   43870:	b	113c8 <__cxa_atexit@plt>
   43874:			; <UNDEFINED> instruction: 0x000128b0

Disassembly of section .fini:

00043878 <.fini>:
   43878:	push	{r3, lr}
   4387c:	pop	{r3, pc}
