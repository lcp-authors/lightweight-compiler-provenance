
../repos/charybdis/extensions/.libs/override_kick_immunity.so:     file format elf32-littlearm


Disassembly of section .init:

000003e0 <_init>:
 3e0:	push	{r3, lr}
 3e4:	bl	43c <call_weak_fn>
 3e8:	pop	{r3, pc}

Disassembly of section .plt:

000003ec <.plt>:
 3ec:	push	{lr}		; (str lr, [sp, #-4]!)
 3f0:	ldr	lr, [pc, #4]	; 3fc <.plt+0x10>
 3f4:	add	lr, pc, lr
 3f8:	ldr	pc, [lr, #8]!
 3fc:	.word	0x00010c04

00000400 <__cxa_finalize@plt>:
 400:	add	ip, pc, #0, 12
 404:	add	ip, ip, #16, 20	; 0x10000
 408:	ldr	pc, [ip, #3076]!	; 0xc04

0000040c <sendto_realops_snomask@plt>:
 40c:	add	ip, pc, #0, 12
 410:	add	ip, ip, #16, 20	; 0x10000
 414:	ldr	pc, [ip, #3068]!	; 0xbfc

00000418 <get_oper_name@plt>:
 418:	add	ip, pc, #0, 12
 41c:	add	ip, ip, #16, 20	; 0x10000
 420:	ldr	pc, [ip, #3060]!	; 0xbf4

00000424 <__gmon_start__@plt>:
 424:	add	ip, pc, #0, 12
 428:	add	ip, ip, #16, 20	; 0x10000
 42c:	ldr	pc, [ip, #3052]!	; 0xbec

00000430 <sendto_one_numeric@plt>:
 430:	add	ip, pc, #0, 12
 434:	add	ip, ip, #16, 20	; 0x10000
 438:	ldr	pc, [ip, #3044]!	; 0xbe4

Disassembly of section .text:

0000043c <call_weak_fn>:
 43c:	ldr	r3, [pc, #20]	; 458 <call_weak_fn+0x1c>
 440:	ldr	r2, [pc, #20]	; 45c <call_weak_fn+0x20>
 444:	add	r3, pc, r3
 448:	ldr	r2, [r3, r2]
 44c:	cmp	r2, #0
 450:	bxeq	lr
 454:	b	424 <__gmon_start__@plt>
 458:	.word	0x00010bb4
 45c:	.word	0x0000002c

00000460 <deregister_tm_clones>:
 460:	ldr	r0, [pc, #44]	; 494 <deregister_tm_clones+0x34>
 464:	ldr	r3, [pc, #44]	; 498 <deregister_tm_clones+0x38>
 468:	add	r0, pc, r0
 46c:	add	r3, pc, r3
 470:	cmp	r3, r0
 474:	ldr	r3, [pc, #32]	; 49c <deregister_tm_clones+0x3c>
 478:	add	r3, pc, r3
 47c:	bxeq	lr
 480:	ldr	r2, [pc, #24]	; 4a0 <deregister_tm_clones+0x40>
 484:	ldr	r3, [r3, r2]
 488:	cmp	r3, #0
 48c:	bxeq	lr
 490:	bx	r3
 494:	.word	0x00010c08
 498:	.word	0x00010c04
 49c:	.word	0x00010b80
 4a0:	.word	0x00000024

000004a4 <register_tm_clones>:
 4a4:	ldr	r0, [pc, #56]	; 4e4 <register_tm_clones+0x40>
 4a8:	ldr	r3, [pc, #56]	; 4e8 <register_tm_clones+0x44>
 4ac:	add	r0, pc, r0
 4b0:	add	r3, pc, r3
 4b4:	sub	r1, r3, r0
 4b8:	ldr	r3, [pc, #44]	; 4ec <register_tm_clones+0x48>
 4bc:	asr	r1, r1, #2
 4c0:	add	r3, pc, r3
 4c4:	add	r1, r1, r1, lsr #31
 4c8:	asrs	r1, r1, #1
 4cc:	bxeq	lr
 4d0:	ldr	r2, [pc, #24]	; 4f0 <register_tm_clones+0x4c>
 4d4:	ldr	r3, [r3, r2]
 4d8:	cmp	r3, #0
 4dc:	bxeq	lr
 4e0:	bx	r3
 4e4:	.word	0x00010bc4
 4e8:	.word	0x00010bc0
 4ec:	.word	0x00010b38
 4f0:	.word	0x00000030

000004f4 <__do_global_dtors_aux>:
 4f4:	ldr	r3, [pc, #76]	; 548 <__do_global_dtors_aux+0x54>
 4f8:	ldr	r2, [pc, #76]	; 54c <__do_global_dtors_aux+0x58>
 4fc:	add	r3, pc, r3
 500:	add	r2, pc, r2
 504:	ldrb	r3, [r3]
 508:	cmp	r3, #0
 50c:	bxne	lr
 510:	ldr	r3, [pc, #56]	; 550 <__do_global_dtors_aux+0x5c>
 514:	push	{r4, lr}
 518:	ldr	r3, [r2, r3]
 51c:	cmp	r3, #0
 520:	beq	530 <__do_global_dtors_aux+0x3c>
 524:	ldr	r3, [pc, #40]	; 554 <__do_global_dtors_aux+0x60>
 528:	ldr	r0, [pc, r3]
 52c:	bl	400 <__cxa_finalize@plt>
 530:	bl	460 <deregister_tm_clones>
 534:	ldr	r3, [pc, #28]	; 558 <__do_global_dtors_aux+0x64>
 538:	mov	r2, #1
 53c:	add	r3, pc, r3
 540:	strb	r2, [r3]
 544:	pop	{r4, pc}
 548:	.word	0x00010b74
 54c:	.word	0x00010af8
 550:	.word	0x00000020
 554:	.word	0x00010b04
 558:	.word	0x00010b34

0000055c <frame_dummy>:
 55c:	b	4a4 <register_tm_clones>

00000560 <can_kick>:
 560:	str	fp, [sp, #-8]!
 564:	str	lr, [sp, #4]
 568:	add	fp, sp, #4
 56c:	sub	sp, sp, #24
 570:	str	r0, [fp, #-16]
 574:	ldr	r3, [pc, #316]	; 6b8 <can_kick+0x158>
 578:	add	r3, pc, r3
 57c:	ldr	r2, [fp, #-16]
 580:	str	r2, [fp, #-8]
 584:	ldr	r2, [fp, #-8]
 588:	ldr	r2, [r2, #12]
 58c:	ldr	r2, [r2, #56]	; 0x38
 590:	ldr	r1, [pc, #292]	; 6bc <can_kick+0x15c>
 594:	ldr	r1, [r3, r1]
 598:	ldr	r1, [r1, #448]	; 0x1c0
 59c:	and	r2, r2, r1
 5a0:	cmp	r2, #0
 5a4:	beq	6a8 <can_kick+0x148>
 5a8:	ldr	r2, [fp, #-8]
 5ac:	ldr	r2, [r2]
 5b0:	ldr	r2, [r2, #56]	; 0x38
 5b4:	ldr	r1, [pc, #256]	; 6bc <can_kick+0x15c>
 5b8:	ldr	r3, [r3, r1]
 5bc:	ldr	r3, [r3, #448]	; 0x1c0
 5c0:	and	r3, r3, r2
 5c4:	cmp	r3, #0
 5c8:	beq	61c <can_kick+0xbc>
 5cc:	ldr	r3, [fp, #-8]
 5d0:	ldr	r3, [r3]
 5d4:	mov	r0, r3
 5d8:	bl	418 <get_oper_name@plt>
 5dc:	mov	r1, r0
 5e0:	ldr	r3, [fp, #-8]
 5e4:	ldr	r3, [r3, #4]
 5e8:	ldr	r3, [r3, #236]	; 0xec
 5ec:	ldr	r2, [fp, #-8]
 5f0:	ldr	r2, [r2, #12]
 5f4:	add	r2, r2, #88	; 0x58
 5f8:	str	r2, [sp, #4]
 5fc:	str	r3, [sp]
 600:	mov	r3, r1
 604:	ldr	r2, [pc, #180]	; 6c0 <can_kick+0x160>
 608:	add	r2, pc, r2
 60c:	mov	r1, #256	; 0x100
 610:	mov	r0, #256	; 0x100
 614:	bl	40c <sendto_realops_snomask@plt>
 618:	b	6a8 <can_kick+0x148>
 61c:	ldr	r3, [fp, #-8]
 620:	ldr	r3, [r3]
 624:	add	r1, r3, #88	; 0x58
 628:	ldr	r3, [fp, #-8]
 62c:	ldr	r3, [r3, #12]
 630:	add	r3, r3, #88	; 0x58
 634:	ldr	r2, [fp, #-8]
 638:	ldr	r2, [r2, #4]
 63c:	ldr	r2, [r2, #236]	; 0xec
 640:	str	r2, [sp, #4]
 644:	str	r3, [sp]
 648:	mov	r3, r1
 64c:	ldr	r2, [pc, #112]	; 6c4 <can_kick+0x164>
 650:	add	r2, pc, r2
 654:	mov	r1, #256	; 0x100
 658:	mov	r0, #256	; 0x100
 65c:	bl	40c <sendto_realops_snomask@plt>
 660:	ldr	r3, [fp, #-8]
 664:	ldr	r0, [r3]
 668:	ldr	r3, [fp, #-8]
 66c:	ldr	r3, [r3, #12]
 670:	add	r2, r3, #88	; 0x58
 674:	ldr	r3, [fp, #-8]
 678:	ldr	r3, [r3, #4]
 67c:	ldr	r3, [r3, #236]	; 0xec
 680:	str	r3, [sp]
 684:	mov	r3, r2
 688:	ldr	r2, [pc, #56]	; 6c8 <can_kick+0x168>
 68c:	add	r2, pc, r2
 690:	mov	r1, #484	; 0x1e4
 694:	bl	430 <sendto_one_numeric@plt>
 698:	ldr	r3, [fp, #-8]
 69c:	mov	r2, #0
 6a0:	str	r2, [r3, #16]
 6a4:	nop	{0}
 6a8:	sub	sp, fp, #4
 6ac:	ldr	fp, [sp]
 6b0:	add	sp, sp, #4
 6b4:	pop	{pc}		; (ldr pc, [sp], #4)
 6b8:	.word	0x00010a80
 6bc:	.word	0x00000028
 6c0:	.word	0x00000118
 6c4:	.word	0x000000fc
 6c8:	.word	0x000000ec

Disassembly of section .fini:

000006cc <_fini>:
 6cc:	push	{r3, lr}
 6d0:	pop	{r3, pc}
