
../repos/prog2/MT1E1-1.1:     file format elf32-littlearm


Disassembly of section .init:

00010cac <.init>:
   10cac:	push	{r3, lr}
   10cb0:	bl	10dec <_start@@Base+0x3c>
   10cb4:	pop	{r3, pc}

Disassembly of section .plt:

00010cb8 <calloc@plt-0x14>:
   10cb8:	push	{lr}		; (str lr, [sp, #-4]!)
   10cbc:	ldr	lr, [pc, #4]	; 10cc8 <calloc@plt-0x4>
   10cc0:	add	lr, pc, lr
   10cc4:	ldr	pc, [lr, #8]!
   10cc8:	andeq	r1, r1, r8, lsr r3

00010ccc <calloc@plt>:
   10ccc:	add	ip, pc, #0, 12
   10cd0:	add	ip, ip, #69632	; 0x11000
   10cd4:	ldr	pc, [ip, #824]!	; 0x338

00010cd8 <strcmp@plt>:
   10cd8:	add	ip, pc, #0, 12
   10cdc:	add	ip, ip, #69632	; 0x11000
   10ce0:	ldr	pc, [ip, #816]!	; 0x330

00010ce4 <strtol@plt>:
   10ce4:	add	ip, pc, #0, 12
   10ce8:	add	ip, ip, #69632	; 0x11000
   10cec:	ldr	pc, [ip, #808]!	; 0x328

00010cf0 <printf@plt>:
   10cf0:	add	ip, pc, #0, 12
   10cf4:	add	ip, ip, #69632	; 0x11000
   10cf8:	ldr	pc, [ip, #800]!	; 0x320

00010cfc <fopen@plt>:
   10cfc:	add	ip, pc, #0, 12
   10d00:	add	ip, ip, #69632	; 0x11000
   10d04:	ldr	pc, [ip, #792]!	; 0x318

00010d08 <free@plt>:
   10d08:	add	ip, pc, #0, 12
   10d0c:	add	ip, ip, #69632	; 0x11000
   10d10:	ldr	pc, [ip, #784]!	; 0x310

00010d14 <fgets@plt>:
   10d14:	add	ip, pc, #0, 12
   10d18:	add	ip, ip, #69632	; 0x11000
   10d1c:	ldr	pc, [ip, #776]!	; 0x308

00010d20 <realloc@plt>:
   10d20:	add	ip, pc, #0, 12
   10d24:	add	ip, ip, #69632	; 0x11000
   10d28:	ldr	pc, [ip, #768]!	; 0x300

00010d2c <strcpy@plt>:
   10d2c:	add	ip, pc, #0, 12
   10d30:	add	ip, ip, #69632	; 0x11000
   10d34:	ldr	pc, [ip, #760]!	; 0x2f8

00010d38 <puts@plt>:
   10d38:	add	ip, pc, #0, 12
   10d3c:	add	ip, ip, #69632	; 0x11000
   10d40:	ldr	pc, [ip, #752]!	; 0x2f0

00010d44 <malloc@plt>:
   10d44:	add	ip, pc, #0, 12
   10d48:	add	ip, ip, #69632	; 0x11000
   10d4c:	ldr	pc, [ip, #744]!	; 0x2e8

00010d50 <__libc_start_main@plt>:
   10d50:	add	ip, pc, #0, 12
   10d54:	add	ip, ip, #69632	; 0x11000
   10d58:	ldr	pc, [ip, #736]!	; 0x2e0

00010d5c <__gmon_start__@plt>:
   10d5c:	add	ip, pc, #0, 12
   10d60:	add	ip, ip, #69632	; 0x11000
   10d64:	ldr	pc, [ip, #728]!	; 0x2d8

00010d68 <feof@plt>:
   10d68:	add	ip, pc, #0, 12
   10d6c:	add	ip, ip, #69632	; 0x11000
   10d70:	ldr	pc, [ip, #720]!	; 0x2d0

00010d74 <strlen@plt>:
   10d74:	add	ip, pc, #0, 12
   10d78:	add	ip, ip, #69632	; 0x11000
   10d7c:	ldr	pc, [ip, #712]!	; 0x2c8

00010d80 <strchr@plt>:
   10d80:	add	ip, pc, #0, 12
   10d84:	add	ip, ip, #69632	; 0x11000
   10d88:	ldr	pc, [ip, #704]!	; 0x2c0

00010d8c <fclose@plt>:
   10d8c:	add	ip, pc, #0, 12
   10d90:	add	ip, ip, #69632	; 0x11000
   10d94:	ldr	pc, [ip, #696]!	; 0x2b8

00010d98 <fgets_unlocked@plt>:
   10d98:	add	ip, pc, #0, 12
   10d9c:	add	ip, ip, #69632	; 0x11000
   10da0:	ldr	pc, [ip, #688]!	; 0x2b0

00010da4 <abort@plt>:
   10da4:	add	ip, pc, #0, 12
   10da8:	add	ip, ip, #69632	; 0x11000
   10dac:	ldr	pc, [ip, #680]!	; 0x2a8

Disassembly of section .text:

00010db0 <_start@@Base>:
   10db0:	mov	fp, #0
   10db4:	mov	lr, #0
   10db8:	pop	{r1}		; (ldr r1, [sp], #4)
   10dbc:	mov	r2, sp
   10dc0:	push	{r2}		; (str r2, [sp, #-4]!)
   10dc4:	push	{r0}		; (str r0, [sp, #-4]!)
   10dc8:	ldr	ip, [pc, #16]	; 10de0 <_start@@Base+0x30>
   10dcc:	push	{ip}		; (str ip, [sp, #-4]!)
   10dd0:	ldr	r0, [pc, #12]	; 10de4 <_start@@Base+0x34>
   10dd4:	ldr	r3, [pc, #12]	; 10de8 <_start@@Base+0x38>
   10dd8:	bl	10d50 <__libc_start_main@plt>
   10ddc:	bl	10da4 <abort@plt>
   10de0:	andeq	r1, r1, r0, lsr sp
   10de4:	andeq	r1, r1, r4, lsr #3
   10de8:	ldrdeq	r1, [r1], -r0
   10dec:	ldr	r3, [pc, #20]	; 10e08 <_start@@Base+0x58>
   10df0:	ldr	r2, [pc, #20]	; 10e0c <_start@@Base+0x5c>
   10df4:	add	r3, pc, r3
   10df8:	ldr	r2, [r3, r2]
   10dfc:	cmp	r2, #0
   10e00:	bxeq	lr
   10e04:	b	10d5c <__gmon_start__@plt>
   10e08:	andeq	r1, r1, r4, lsl #4
   10e0c:	andeq	r0, r0, r8, asr r0
   10e10:	ldr	r0, [pc, #24]	; 10e30 <_start@@Base+0x80>
   10e14:	ldr	r3, [pc, #24]	; 10e34 <_start@@Base+0x84>
   10e18:	cmp	r3, r0
   10e1c:	bxeq	lr
   10e20:	ldr	r3, [pc, #16]	; 10e38 <_start@@Base+0x88>
   10e24:	cmp	r3, #0
   10e28:	bxeq	lr
   10e2c:	bx	r3
   10e30:	andeq	r2, r2, r4, rrx
   10e34:	andeq	r2, r2, r4, rrx
   10e38:	andeq	r0, r0, r0
   10e3c:	ldr	r0, [pc, #36]	; 10e68 <_start@@Base+0xb8>
   10e40:	ldr	r1, [pc, #36]	; 10e6c <_start@@Base+0xbc>
   10e44:	sub	r1, r1, r0
   10e48:	asr	r1, r1, #2
   10e4c:	add	r1, r1, r1, lsr #31
   10e50:	asrs	r1, r1, #1
   10e54:	bxeq	lr
   10e58:	ldr	r3, [pc, #16]	; 10e70 <_start@@Base+0xc0>
   10e5c:	cmp	r3, #0
   10e60:	bxeq	lr
   10e64:	bx	r3
   10e68:	andeq	r2, r2, r4, rrx
   10e6c:	andeq	r2, r2, r4, rrx
   10e70:	andeq	r0, r0, r0
   10e74:	push	{r4, lr}
   10e78:	ldr	r4, [pc, #24]	; 10e98 <_start@@Base+0xe8>
   10e7c:	ldrb	r3, [r4]
   10e80:	cmp	r3, #0
   10e84:	popne	{r4, pc}
   10e88:	bl	10e10 <_start@@Base+0x60>
   10e8c:	mov	r3, #1
   10e90:	strb	r3, [r4]
   10e94:	pop	{r4, pc}
   10e98:	andeq	r2, r2, r4, rrx
   10e9c:	b	10e3c <_start@@Base+0x8c>

00010ea0 <retira_duplicados@@Base>:
   10ea0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   10ea4:	add	fp, sp, #24
   10ea8:	mov	r4, r0
   10eac:	bl	115b4 <vetor_tamanho@@Base>
   10eb0:	cmp	r0, #2
   10eb4:	blt	10f48 <retira_duplicados@@Base+0xa8>
   10eb8:	mov	r8, #0
   10ebc:	b	10ed4 <retira_duplicados@@Base+0x34>
   10ec0:	mov	r0, r4
   10ec4:	bl	115b4 <vetor_tamanho@@Base>
   10ec8:	sub	r0, r0, #1
   10ecc:	cmp	r8, r0
   10ed0:	popge	{r4, r5, r6, r7, r8, sl, fp, pc}
   10ed4:	mov	r0, r4
   10ed8:	mov	r5, r8
   10edc:	add	r8, r8, #1
   10ee0:	bl	115b4 <vetor_tamanho@@Base>
   10ee4:	cmp	r8, r0
   10ee8:	bge	10ec0 <retira_duplicados@@Base+0x20>
   10eec:	mov	r6, r8
   10ef0:	mov	r0, r4
   10ef4:	mov	r1, r5
   10ef8:	bl	115c4 <vetor_elemento@@Base>
   10efc:	mov	r7, r0
   10f00:	mov	r0, r4
   10f04:	mov	r1, r6
   10f08:	bl	115c4 <vetor_elemento@@Base>
   10f0c:	mov	r1, r0
   10f10:	mov	r0, r7
   10f14:	bl	10cd8 <strcmp@plt>
   10f18:	cmp	r0, #0
   10f1c:	bne	10f30 <retira_duplicados@@Base+0x90>
   10f20:	mov	r0, r4
   10f24:	mov	r1, r6
   10f28:	bl	116c0 <vetor_remove@@Base>
   10f2c:	sub	r6, r6, #1
   10f30:	mov	r0, r4
   10f34:	add	r6, r6, #1
   10f38:	bl	115b4 <vetor_tamanho@@Base>
   10f3c:	cmp	r6, r0
   10f40:	blt	10ef0 <retira_duplicados@@Base+0x50>
   10f44:	b	10ec0 <retira_duplicados@@Base+0x20>
   10f48:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00010f4c <interseta@@Base>:
   10f4c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10f50:	add	fp, sp, #28
   10f54:	sub	sp, sp, #4
   10f58:	mov	r4, r1
   10f5c:	mov	sl, r0
   10f60:	bl	114a0 <vetor_novo@@Base>
   10f64:	ldr	r7, [sl]
   10f68:	mov	r8, r0
   10f6c:	cmp	r7, #0
   10f70:	bne	10f80 <interseta@@Base+0x34>
   10f74:	ldr	r0, [sl, #8]
   10f78:	cmp	r0, #1
   10f7c:	blt	10ffc <interseta@@Base+0xb0>
   10f80:	mov	r9, #0
   10f84:	mov	r0, #1
   10f88:	ldr	r1, [r7]
   10f8c:	mov	r5, r0
   10f90:	mov	r0, r4
   10f94:	mov	r2, #0
   10f98:	bl	11af8 <lista_pesquisa@@Base>
   10f9c:	cmp	r0, #0
   10fa0:	beq	10fe0 <interseta@@Base+0x94>
   10fa4:	ldr	r6, [r7]
   10fa8:	mov	r0, r4
   10fac:	mov	r2, #0
   10fb0:	mov	r1, r6
   10fb4:	bl	11af8 <lista_pesquisa@@Base>
   10fb8:	ldr	r1, [r0]
   10fbc:	mov	r0, r6
   10fc0:	bl	10cd8 <strcmp@plt>
   10fc4:	cmp	r0, #0
   10fc8:	bne	10fe0 <interseta@@Base+0x94>
   10fcc:	ldr	r1, [r7]
   10fd0:	mov	r0, r8
   10fd4:	mov	r2, r9
   10fd8:	bl	115ec <vetor_insere@@Base>
   10fdc:	add	r9, r9, #1
   10fe0:	ldr	r7, [r7, #4]
   10fe4:	ldr	r1, [sl, #8]
   10fe8:	add	r0, r5, #1
   10fec:	cmp	r7, #0
   10ff0:	bne	10f88 <interseta@@Base+0x3c>
   10ff4:	cmp	r5, r1
   10ff8:	blt	10f88 <interseta@@Base+0x3c>
   10ffc:	mov	r0, r8
   11000:	sub	sp, fp, #28
   11004:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00011008 <anteriores@@Base>:
   11008:	push	{r4, r5, r6, r7, fp, lr}
   1100c:	add	fp, sp, #16
   11010:	mov	r4, r1
   11014:	mov	r6, r0
   11018:	bl	114a0 <vetor_novo@@Base>
   1101c:	ldr	r7, [r6]
   11020:	mov	r5, r0
   11024:	b	1102c <anteriores@@Base+0x24>
   11028:	ldr	r7, [r7, #4]
   1102c:	cmp	r7, #0
   11030:	moveq	r0, r5
   11034:	popeq	{r4, r5, r6, r7, fp, pc}
   11038:	ldr	r6, [r7]
   1103c:	mov	r0, r6
   11040:	bl	10d74 <strlen@plt>
   11044:	add	r0, r6, r0
   11048:	mov	r1, #0
   1104c:	mov	r2, #10
   11050:	sub	r0, r0, #5
   11054:	bl	10ce4 <strtol@plt>
   11058:	cmp	r0, r4
   1105c:	bge	11028 <anteriores@@Base+0x20>
   11060:	ldr	r2, [r5]
   11064:	mov	r0, r5
   11068:	mov	r1, r6
   1106c:	bl	115ec <vetor_insere@@Base>
   11070:	b	11028 <anteriores@@Base+0x20>

00011074 <lerAtores@@Base>:
   11074:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11078:	add	fp, sp, #24
   1107c:	sub	sp, sp, #256	; 0x100
   11080:	cmp	r0, #0
   11084:	beq	110fc <lerAtores@@Base+0x88>
   11088:	mov	r5, r0
   1108c:	bl	114a0 <vetor_novo@@Base>
   11090:	mov	r4, r0
   11094:	mov	r0, r5
   11098:	bl	10d68 <feof@plt>
   1109c:	cmp	r0, #0
   110a0:	bne	110f0 <lerAtores@@Base+0x7c>
   110a4:	mov	r6, sp
   110a8:	mov	r7, #0
   110ac:	mov	r0, r6
   110b0:	mov	r1, #255	; 0xff
   110b4:	mov	r2, r5
   110b8:	bl	10d14 <fgets@plt>
   110bc:	mov	r0, r6
   110c0:	mov	r1, #10
   110c4:	bl	10d80 <strchr@plt>
   110c8:	cmp	r0, #0
   110cc:	mov	r1, r6
   110d0:	strbne	r7, [r0]
   110d4:	mov	r0, r4
   110d8:	ldr	r2, [r4]
   110dc:	bl	115ec <vetor_insere@@Base>
   110e0:	mov	r0, r5
   110e4:	bl	10d68 <feof@plt>
   110e8:	cmp	r0, #0
   110ec:	beq	110ac <lerAtores@@Base+0x38>
   110f0:	mov	r0, r4
   110f4:	sub	sp, fp, #24
   110f8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   110fc:	mov	r4, #0
   11100:	mov	r0, r4
   11104:	sub	sp, fp, #24
   11108:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001110c <lerFilmes@@Base>:
   1110c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11110:	add	fp, sp, #24
   11114:	sub	sp, sp, #256	; 0x100
   11118:	cmp	r0, #0
   1111c:	beq	11194 <lerFilmes@@Base+0x88>
   11120:	mov	r5, r0
   11124:	bl	118c8 <lista_nova@@Base>
   11128:	mov	r4, r0
   1112c:	mov	r0, r5
   11130:	bl	10d68 <feof@plt>
   11134:	cmp	r0, #0
   11138:	bne	11188 <lerFilmes@@Base+0x7c>
   1113c:	mov	r6, sp
   11140:	mov	r7, #0
   11144:	mov	r0, r6
   11148:	mov	r1, #255	; 0xff
   1114c:	mov	r2, r5
   11150:	bl	10d14 <fgets@plt>
   11154:	mov	r0, r6
   11158:	mov	r1, #10
   1115c:	bl	10d80 <strchr@plt>
   11160:	cmp	r0, #0
   11164:	mov	r1, r6
   11168:	mov	r2, #0
   1116c:	strbne	r7, [r0]
   11170:	mov	r0, r4
   11174:	bl	11978 <lista_insere@@Base>
   11178:	mov	r0, r5
   1117c:	bl	10d68 <feof@plt>
   11180:	cmp	r0, #0
   11184:	beq	11144 <lerFilmes@@Base+0x38>
   11188:	mov	r0, r4
   1118c:	sub	sp, fp, #24
   11190:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   11194:	mov	r4, #0
   11198:	mov	r0, r4
   1119c:	sub	sp, fp, #24
   111a0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000111a4 <main@@Base>:
   111a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   111a8:	add	fp, sp, #28
   111ac:	sub	sp, sp, #276	; 0x114
   111b0:	movw	r4, #7504	; 0x1d50
   111b4:	movw	r0, #7492	; 0x1d44
   111b8:	movt	r4, #1
   111bc:	movt	r0, #1
   111c0:	mov	r1, r4
   111c4:	bl	10cfc <fopen@plt>
   111c8:	mov	r8, r0
   111cc:	movw	r0, #7506	; 0x1d52
   111d0:	mov	r1, r4
   111d4:	movt	r0, #1
   111d8:	bl	10cfc <fopen@plt>
   111dc:	mov	r5, r0
   111e0:	movw	r0, #7517	; 0x1d5d
   111e4:	mov	r1, r4
   111e8:	movt	r0, #1
   111ec:	bl	10cfc <fopen@plt>
   111f0:	mov	r6, r0
   111f4:	mov	sl, #0
   111f8:	cmp	r8, #0
   111fc:	mov	r7, #0
   11200:	beq	11268 <main@@Base+0xc4>
   11204:	bl	114a0 <vetor_novo@@Base>
   11208:	mov	r7, r0
   1120c:	mov	r0, r8
   11210:	bl	10d68 <feof@plt>
   11214:	cmp	r0, #0
   11218:	bne	11268 <main@@Base+0xc4>
   1121c:	add	r4, sp, #16
   11220:	mov	r9, #0
   11224:	mov	r0, r4
   11228:	mov	r1, #255	; 0xff
   1122c:	mov	r2, r8
   11230:	bl	10d98 <fgets_unlocked@plt>
   11234:	mov	r0, r4
   11238:	mov	r1, #10
   1123c:	bl	10d80 <strchr@plt>
   11240:	cmp	r0, #0
   11244:	mov	r1, r4
   11248:	strbne	r9, [r0]
   1124c:	mov	r0, r7
   11250:	ldr	r2, [r7]
   11254:	bl	115ec <vetor_insere@@Base>
   11258:	mov	r0, r8
   1125c:	bl	10d68 <feof@plt>
   11260:	cmp	r0, #0
   11264:	beq	11224 <main@@Base+0x80>
   11268:	cmp	r5, #0
   1126c:	beq	112d4 <main@@Base+0x130>
   11270:	bl	118c8 <lista_nova@@Base>
   11274:	mov	sl, r0
   11278:	mov	r0, r5
   1127c:	bl	10d68 <feof@plt>
   11280:	cmp	r0, #0
   11284:	bne	112d4 <main@@Base+0x130>
   11288:	add	r4, sp, #16
   1128c:	mov	r9, #0
   11290:	mov	r0, r4
   11294:	mov	r1, #255	; 0xff
   11298:	mov	r2, r5
   1129c:	bl	10d98 <fgets_unlocked@plt>
   112a0:	mov	r0, r4
   112a4:	mov	r1, #10
   112a8:	bl	10d80 <strchr@plt>
   112ac:	cmp	r0, #0
   112b0:	mov	r1, r4
   112b4:	mov	r2, #0
   112b8:	strbne	r9, [r0]
   112bc:	mov	r0, sl
   112c0:	bl	11978 <lista_insere@@Base>
   112c4:	mov	r0, r5
   112c8:	bl	10d68 <feof@plt>
   112cc:	cmp	r0, #0
   112d0:	beq	11290 <main@@Base+0xec>
   112d4:	cmp	r6, #0
   112d8:	beq	11344 <main@@Base+0x1a0>
   112dc:	bl	118c8 <lista_nova@@Base>
   112e0:	mov	r9, r0
   112e4:	mov	r0, r6
   112e8:	bl	10d68 <feof@plt>
   112ec:	cmp	r0, #0
   112f0:	bne	11348 <main@@Base+0x1a4>
   112f4:	add	r4, sp, #16
   112f8:	mov	r0, r4
   112fc:	mov	r1, #255	; 0xff
   11300:	mov	r2, r6
   11304:	bl	10d98 <fgets_unlocked@plt>
   11308:	mov	r0, r4
   1130c:	mov	r1, #10
   11310:	bl	10d80 <strchr@plt>
   11314:	cmp	r0, #0
   11318:	mov	r2, #0
   1131c:	movne	r1, #0
   11320:	strbne	r1, [r0]
   11324:	mov	r0, r9
   11328:	mov	r1, r4
   1132c:	bl	11978 <lista_insere@@Base>
   11330:	mov	r0, r6
   11334:	bl	10d68 <feof@plt>
   11338:	cmp	r0, #0
   1133c:	beq	112f8 <main@@Base+0x154>
   11340:	b	11348 <main@@Base+0x1a4>
   11344:	mov	r9, #0
   11348:	mov	r0, r7
   1134c:	bl	115b4 <vetor_tamanho@@Base>
   11350:	mov	r1, r0
   11354:	movw	r0, #7529	; 0x1d69
   11358:	movt	r0, #1
   1135c:	bl	10cf0 <printf@plt>
   11360:	mov	r0, r7
   11364:	bl	10ea0 <retira_duplicados@@Base>
   11368:	mov	r0, r7
   1136c:	bl	115b4 <vetor_tamanho@@Base>
   11370:	mov	r1, r0
   11374:	movw	r0, #7548	; 0x1d7c
   11378:	movt	r0, #1
   1137c:	bl	10cf0 <printf@plt>
   11380:	mov	r0, sl
   11384:	mov	r1, r9
   11388:	bl	10f4c <interseta@@Base>
   1138c:	cmp	r0, #0
   11390:	stmib	sp, {r0, r9, sl}
   11394:	beq	113b0 <main@@Base+0x20c>
   11398:	bl	115b4 <vetor_tamanho@@Base>
   1139c:	mov	r1, r0
   113a0:	movw	r0, #7576	; 0x1d98
   113a4:	movt	r0, #1
   113a8:	bl	10cf0 <printf@plt>
   113ac:	b	113bc <main@@Base+0x218>
   113b0:	movw	r0, #7648	; 0x1de0
   113b4:	movt	r0, #1
   113b8:	bl	10d38 <puts@plt>
   113bc:	bl	114a0 <vetor_novo@@Base>
   113c0:	mov	sl, r0
   113c4:	ldr	r0, [sp, #12]
   113c8:	ldr	r9, [r0]
   113cc:	cmp	r9, #0
   113d0:	bne	113e4 <main@@Base+0x240>
   113d4:	b	11420 <main@@Base+0x27c>
   113d8:	ldr	r9, [r9, #4]
   113dc:	cmp	r9, #0
   113e0:	beq	11420 <main@@Base+0x27c>
   113e4:	ldr	r4, [r9]
   113e8:	mov	r0, r4
   113ec:	bl	10d74 <strlen@plt>
   113f0:	add	r0, r4, r0
   113f4:	mov	r1, #0
   113f8:	mov	r2, #10
   113fc:	sub	r0, r0, #5
   11400:	bl	10ce4 <strtol@plt>
   11404:	cmp	r0, #2000	; 0x7d0
   11408:	bge	113d8 <main@@Base+0x234>
   1140c:	ldr	r2, [sl]
   11410:	mov	r0, sl
   11414:	mov	r1, r4
   11418:	bl	115ec <vetor_insere@@Base>
   1141c:	b	113d8 <main@@Base+0x234>
   11420:	cmp	sl, #0
   11424:	beq	11444 <main@@Base+0x2a0>
   11428:	mov	r0, sl
   1142c:	bl	115b4 <vetor_tamanho@@Base>
   11430:	mov	r1, r0
   11434:	movw	r0, #7607	; 0x1db7
   11438:	movt	r0, #1
   1143c:	bl	10cf0 <printf@plt>
   11440:	b	11450 <main@@Base+0x2ac>
   11444:	movw	r0, #7680	; 0x1e00
   11448:	movt	r0, #1
   1144c:	bl	10d38 <puts@plt>
   11450:	ldmib	sp, {r4, r9}
   11454:	mov	r0, r7
   11458:	bl	114d0 <vetor_apaga@@Base>
   1145c:	mov	r0, r4
   11460:	bl	114d0 <vetor_apaga@@Base>
   11464:	mov	r0, sl
   11468:	bl	114d0 <vetor_apaga@@Base>
   1146c:	ldr	r0, [sp, #12]
   11470:	bl	118f8 <lista_apaga@@Base>
   11474:	mov	r0, r9
   11478:	bl	118f8 <lista_apaga@@Base>
   1147c:	mov	r0, r8
   11480:	bl	10d8c <fclose@plt>
   11484:	mov	r0, r5
   11488:	bl	10d8c <fclose@plt>
   1148c:	mov	r0, r6
   11490:	bl	10d8c <fclose@plt>
   11494:	mov	r0, #0
   11498:	sub	sp, fp, #28
   1149c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000114a0 <vetor_novo@@Base>:
   114a0:	push	{fp, lr}
   114a4:	mov	fp, sp
   114a8:	mov	r0, #12
   114ac:	bl	10d44 <malloc@plt>
   114b0:	cmp	r0, #0
   114b4:	movne	r1, #0
   114b8:	strne	r1, [r0]
   114bc:	strne	r1, [r0, #4]
   114c0:	strne	r1, [r0, #8]
   114c4:	popne	{fp, pc}
   114c8:	mov	r0, #0
   114cc:	pop	{fp, pc}

000114d0 <vetor_apaga@@Base>:
   114d0:	cmp	r0, #0
   114d4:	bxeq	lr
   114d8:	push	{r4, r5, fp, lr}
   114dc:	add	fp, sp, #8
   114e0:	ldr	r1, [r0]
   114e4:	mov	r4, r0
   114e8:	ldr	r0, [r0, #8]
   114ec:	cmp	r1, #1
   114f0:	blt	11514 <vetor_apaga@@Base+0x44>
   114f4:	mov	r5, #0
   114f8:	ldr	r0, [r0, r5, lsl #2]
   114fc:	bl	10d08 <free@plt>
   11500:	ldr	r1, [r4]
   11504:	ldr	r0, [r4, #8]
   11508:	add	r5, r5, #1
   1150c:	cmp	r5, r1
   11510:	blt	114f8 <vetor_apaga@@Base+0x28>
   11514:	bl	10d08 <free@plt>
   11518:	mov	r0, r4
   1151c:	pop	{r4, r5, fp, lr}
   11520:	b	10d08 <free@plt>

00011524 <vetor_atribui@@Base>:
   11524:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11528:	add	fp, sp, #24
   1152c:	mvn	r5, #0
   11530:	cmp	r0, #0
   11534:	beq	115ac <vetor_atribui@@Base+0x88>
   11538:	mov	r4, r1
   1153c:	cmp	r1, #0
   11540:	blt	115ac <vetor_atribui@@Base+0x88>
   11544:	mov	r7, r0
   11548:	ldr	r0, [r0]
   1154c:	cmp	r0, r4
   11550:	ble	115ac <vetor_atribui@@Base+0x88>
   11554:	mov	r0, r2
   11558:	mov	r8, r2
   1155c:	bl	10d74 <strlen@plt>
   11560:	mov	r9, r0
   11564:	ldr	r0, [r7, #8]
   11568:	ldr	r6, [r0, r4, lsl #2]
   1156c:	mov	r0, r6
   11570:	bl	10d74 <strlen@plt>
   11574:	cmp	r9, r0
   11578:	bls	1159c <vetor_atribui@@Base+0x78>
   1157c:	add	r1, r9, #1
   11580:	mov	r0, r6
   11584:	bl	10d20 <realloc@plt>
   11588:	mov	r6, r0
   1158c:	ldr	r0, [r7, #8]
   11590:	cmp	r6, #0
   11594:	str	r6, [r0, r4, lsl #2]
   11598:	beq	115ac <vetor_atribui@@Base+0x88>
   1159c:	mov	r0, r6
   115a0:	mov	r1, r8
   115a4:	bl	10d2c <strcpy@plt>
   115a8:	mov	r5, r4
   115ac:	mov	r0, r5
   115b0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000115b4 <vetor_tamanho@@Base>:
   115b4:	cmp	r0, #0
   115b8:	ldrne	r0, [r0]
   115bc:	mvneq	r0, #0
   115c0:	bx	lr

000115c4 <vetor_elemento@@Base>:
   115c4:	mov	r2, r0
   115c8:	mov	r0, #0
   115cc:	cmp	r2, #0
   115d0:	bxeq	lr
   115d4:	cmp	r1, #0
   115d8:	ldrge	r3, [r2]
   115dc:	cmpge	r3, r1
   115e0:	ldrgt	r0, [r2, #8]
   115e4:	ldrgt	r0, [r0, r1, lsl #2]
   115e8:	bx	lr

000115ec <vetor_insere@@Base>:
   115ec:	push	{r4, r5, r6, r7, fp, lr}
   115f0:	add	fp, sp, #16
   115f4:	mvn	r4, #0
   115f8:	cmp	r0, #0
   115fc:	beq	116b8 <vetor_insere@@Base+0xcc>
   11600:	mov	r5, r2
   11604:	cmp	r2, #0
   11608:	blt	116b8 <vetor_insere@@Base+0xcc>
   1160c:	mov	r6, r0
   11610:	ldr	r0, [r0]
   11614:	cmp	r0, r5
   11618:	blt	116b8 <vetor_insere@@Base+0xcc>
   1161c:	mov	r7, r1
   11620:	ldr	r1, [r6, #4]
   11624:	cmp	r0, r1
   11628:	bne	11674 <vetor_insere@@Base+0x88>
   1162c:	lsl	r1, r0, #1
   11630:	cmp	r0, #0
   11634:	movweq	r1, #1
   11638:	str	r1, [r6, #4]
   1163c:	lsl	r1, r1, #2
   11640:	ldr	r0, [r6, #8]
   11644:	bl	10d20 <realloc@plt>
   11648:	cmp	r0, #0
   1164c:	str	r0, [r6, #8]
   11650:	beq	116b8 <vetor_insere@@Base+0xcc>
   11654:	ldr	r0, [r6]
   11658:	cmp	r0, r5
   1165c:	ble	1167c <vetor_insere@@Base+0x90>
   11660:	ldr	r1, [r6, #8]
   11664:	add	r2, r1, r0, lsl #2
   11668:	ldr	r2, [r2, #-4]
   1166c:	str	r2, [r1, r0, lsl #2]
   11670:	sub	r0, r0, #1
   11674:	cmp	r0, r5
   11678:	bgt	11660 <vetor_insere@@Base+0x74>
   1167c:	mov	r0, r7
   11680:	bl	10d74 <strlen@plt>
   11684:	add	r0, r0, #1
   11688:	mov	r1, #1
   1168c:	bl	10ccc <calloc@plt>
   11690:	ldr	r1, [r6, #8]
   11694:	cmp	r0, #0
   11698:	str	r0, [r1, r5, lsl #2]
   1169c:	beq	116b8 <vetor_insere@@Base+0xcc>
   116a0:	mov	r1, r7
   116a4:	bl	10d2c <strcpy@plt>
   116a8:	ldr	r0, [r6]
   116ac:	mov	r4, r5
   116b0:	add	r0, r0, #1
   116b4:	str	r0, [r6]
   116b8:	mov	r0, r4
   116bc:	pop	{r4, r5, r6, r7, fp, pc}

000116c0 <vetor_remove@@Base>:
   116c0:	push	{r4, r5, fp, lr}
   116c4:	add	fp, sp, #8
   116c8:	mov	r4, r0
   116cc:	mvn	r0, #0
   116d0:	cmp	r4, #0
   116d4:	popeq	{r4, r5, fp, pc}
   116d8:	cmp	r1, #0
   116dc:	mov	r5, r1
   116e0:	ldrge	r1, [r4]
   116e4:	cmpge	r1, r5
   116e8:	bgt	116f0 <vetor_remove@@Base+0x30>
   116ec:	pop	{r4, r5, fp, pc}
   116f0:	ldr	r0, [r4, #8]
   116f4:	ldr	r0, [r0, r5, lsl #2]
   116f8:	bl	10d08 <free@plt>
   116fc:	ldr	r0, [r4]
   11700:	add	r1, r5, #1
   11704:	cmp	r1, r0
   11708:	bge	11730 <vetor_remove@@Base+0x70>
   1170c:	ldr	r1, [r4, #8]
   11710:	add	r2, r1, r5, lsl #2
   11714:	ldr	r2, [r2, #4]
   11718:	str	r2, [r1, r5, lsl #2]
   1171c:	add	r2, r5, #2
   11720:	add	r1, r5, #1
   11724:	cmp	r2, r0
   11728:	mov	r5, r1
   1172c:	blt	1170c <vetor_remove@@Base+0x4c>
   11730:	sub	r0, r0, #1
   11734:	str	r0, [r4]
   11738:	mov	r0, #0
   1173c:	pop	{r4, r5, fp, pc}

00011740 <vetor_pesquisa@@Base>:
   11740:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11744:	add	fp, sp, #24
   11748:	mvn	r8, #0
   1174c:	cmp	r0, #0
   11750:	beq	11790 <vetor_pesquisa@@Base+0x50>
   11754:	ldr	r6, [r0]
   11758:	cmp	r6, #1
   1175c:	blt	11790 <vetor_pesquisa@@Base+0x50>
   11760:	ldr	r4, [r0, #8]
   11764:	mov	r5, r1
   11768:	mov	r7, #0
   1176c:	ldr	r0, [r4, r7, lsl #2]
   11770:	mov	r1, r5
   11774:	bl	10cd8 <strcmp@plt>
   11778:	cmp	r0, #0
   1177c:	moveq	r0, r7
   11780:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   11784:	add	r7, r7, #1
   11788:	cmp	r7, r6
   1178c:	blt	1176c <vetor_pesquisa@@Base+0x2c>
   11790:	mov	r0, r8
   11794:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00011798 <vetor_ordena@@Base>:
   11798:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1179c:	add	fp, sp, #28
   117a0:	sub	sp, sp, #4
   117a4:	cmp	r0, #0
   117a8:	mvneq	r0, #0
   117ac:	subeq	sp, fp, #28
   117b0:	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   117b4:	ldr	r1, [r0]
   117b8:	mov	sl, r0
   117bc:	mov	r0, #0
   117c0:	cmp	r1, #2
   117c4:	str	r1, [sp]
   117c8:	blt	11850 <vetor_ordena@@Base+0xb8>
   117cc:	ldr	r5, [sl, #8]
   117d0:	mov	r8, #1
   117d4:	sub	r9, r8, #1
   117d8:	ldr	r6, [r5, r8, lsl #2]
   117dc:	ldr	r7, [r5, r9, lsl #2]
   117e0:	mov	r0, r6
   117e4:	mov	r1, r7
   117e8:	bl	10cd8 <strcmp@plt>
   117ec:	cmn	r0, #1
   117f0:	bgt	11834 <vetor_ordena@@Base+0x9c>
   117f4:	add	r0, r5, r9, lsl #2
   117f8:	mov	r4, r9
   117fc:	str	r7, [r0, #4]
   11800:	add	r0, r9, #1
   11804:	ldr	r5, [sl, #8]
   11808:	cmp	r0, #2
   1180c:	blt	11838 <vetor_ordena@@Base+0xa0>
   11810:	add	r0, r5, r4, lsl #2
   11814:	ldr	r7, [r0, #-4]
   11818:	mov	r0, r6
   1181c:	mov	r1, r7
   11820:	bl	10cd8 <strcmp@plt>
   11824:	sub	r9, r4, #1
   11828:	cmp	r0, #0
   1182c:	blt	117f4 <vetor_ordena@@Base+0x5c>
   11830:	b	11838 <vetor_ordena@@Base+0xa0>
   11834:	mov	r4, r8
   11838:	ldr	r0, [sp]
   1183c:	add	r8, r8, #1
   11840:	str	r6, [r5, r4, lsl #2]
   11844:	cmp	r8, r0
   11848:	blt	117d4 <vetor_ordena@@Base+0x3c>
   1184c:	mov	r0, #0
   11850:	sub	sp, fp, #28
   11854:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00011858 <novo_str@@Base>:
   11858:	push	{r4, r5, r6, sl, fp, lr}
   1185c:	add	fp, sp, #16
   11860:	mov	r6, r0
   11864:	mov	r0, #12
   11868:	bl	10d44 <malloc@plt>
   1186c:	mov	r5, #0
   11870:	cmp	r0, #0
   11874:	beq	118b0 <novo_str@@Base+0x58>
   11878:	mov	r4, r0
   1187c:	mov	r0, r6
   11880:	bl	10d74 <strlen@plt>
   11884:	add	r0, r0, #1
   11888:	bl	10d44 <malloc@plt>
   1188c:	cmp	r0, #0
   11890:	str	r0, [r4]
   11894:	beq	118b8 <novo_str@@Base+0x60>
   11898:	mov	r1, r6
   1189c:	bl	10d2c <strcpy@plt>
   118a0:	mov	r0, #0
   118a4:	mov	r5, r4
   118a8:	str	r0, [r4, #4]
   118ac:	str	r0, [r4, #8]
   118b0:	mov	r0, r5
   118b4:	pop	{r4, r5, r6, sl, fp, pc}
   118b8:	mov	r0, r4
   118bc:	bl	10d08 <free@plt>
   118c0:	mov	r0, r5
   118c4:	pop	{r4, r5, r6, sl, fp, pc}

000118c8 <lista_nova@@Base>:
   118c8:	push	{fp, lr}
   118cc:	mov	fp, sp
   118d0:	mov	r0, #12
   118d4:	bl	10d44 <malloc@plt>
   118d8:	cmp	r0, #0
   118dc:	movne	r1, #0
   118e0:	strne	r1, [r0]
   118e4:	strne	r1, [r0, #4]
   118e8:	strne	r1, [r0, #8]
   118ec:	popne	{fp, pc}
   118f0:	mov	r0, #0
   118f4:	pop	{fp, pc}

000118f8 <lista_apaga@@Base>:
   118f8:	cmp	r0, #0
   118fc:	bxeq	lr
   11900:	push	{r4, r5, fp, lr}
   11904:	add	fp, sp, #8
   11908:	mov	r4, r0
   1190c:	ldr	r5, [r4]
   11910:	cmp	r5, #0
   11914:	beq	1193c <lista_apaga@@Base+0x44>
   11918:	ldr	r0, [r5, #4]
   1191c:	str	r0, [r4]
   11920:	ldr	r0, [r5]
   11924:	bl	10d08 <free@plt>
   11928:	mov	r0, r5
   1192c:	bl	10d08 <free@plt>
   11930:	ldr	r5, [r4]
   11934:	cmp	r5, #0
   11938:	bne	11918 <lista_apaga@@Base+0x20>
   1193c:	mov	r0, r4
   11940:	pop	{r4, r5, fp, lr}
   11944:	b	10d08 <free@plt>

00011948 <lista_tamanho@@Base>:
   11948:	cmp	r0, #0
   1194c:	ldrne	r0, [r0, #8]
   11950:	mvneq	r0, #0
   11954:	bx	lr

00011958 <lista_inicio@@Base>:
   11958:	cmp	r0, #0
   1195c:	ldrne	r0, [r0]
   11960:	moveq	r0, #0
   11964:	bx	lr

00011968 <lista_fim@@Base>:
   11968:	cmp	r0, #0
   1196c:	ldrne	r0, [r0, #4]
   11970:	moveq	r0, #0
   11974:	bx	lr

00011978 <lista_insere@@Base>:
   11978:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1197c:	add	fp, sp, #24
   11980:	cmp	r0, #0
   11984:	mov	r7, #0
   11988:	movne	r6, r1
   1198c:	cmpne	r1, #0
   11990:	bne	1199c <lista_insere@@Base+0x24>
   11994:	mov	r0, r7
   11998:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1199c:	mov	r5, r0
   119a0:	mov	r0, #12
   119a4:	mov	r8, r2
   119a8:	bl	10d44 <malloc@plt>
   119ac:	cmp	r0, #0
   119b0:	beq	11994 <lista_insere@@Base+0x1c>
   119b4:	mov	r4, r0
   119b8:	mov	r0, r6
   119bc:	bl	10d74 <strlen@plt>
   119c0:	add	r0, r0, #1
   119c4:	bl	10d44 <malloc@plt>
   119c8:	cmp	r0, #0
   119cc:	str	r0, [r4]
   119d0:	beq	11a28 <lista_insere@@Base+0xb0>
   119d4:	mov	r1, r6
   119d8:	bl	10d2c <strcpy@plt>
   119dc:	mov	r0, #0
   119e0:	cmp	r8, #0
   119e4:	str	r0, [r4, #4]
   119e8:	str	r0, [r4, #8]
   119ec:	ldr	r1, [r5, #8]
   119f0:	ldr	r0, [r5]
   119f4:	add	r1, r1, #1
   119f8:	str	r1, [r5, #8]
   119fc:	beq	11a38 <lista_insere@@Base+0xc0>
   11a00:	cmp	r0, r8
   11a04:	beq	11a5c <lista_insere@@Base+0xe4>
   11a08:	ldr	r0, [r8, #8]
   11a0c:	str	r8, [r4, #4]
   11a10:	str	r0, [r4, #8]
   11a14:	str	r4, [r0, #4]
   11a18:	str	r4, [r8, #8]
   11a1c:	mov	r7, r4
   11a20:	mov	r0, r7
   11a24:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11a28:	mov	r0, r4
   11a2c:	bl	10d08 <free@plt>
   11a30:	mov	r0, r7
   11a34:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11a38:	cmp	r0, #0
   11a3c:	beq	11a74 <lista_insere@@Base+0xfc>
   11a40:	ldr	r0, [r5, #4]
   11a44:	str	r0, [r4, #8]
   11a48:	str	r4, [r0, #4]
   11a4c:	str	r4, [r5, #4]
   11a50:	mov	r7, r4
   11a54:	mov	r0, r7
   11a58:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11a5c:	str	r8, [r4, #4]
   11a60:	str	r4, [r8, #8]
   11a64:	str	r4, [r5]
   11a68:	mov	r7, r4
   11a6c:	mov	r0, r7
   11a70:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11a74:	str	r4, [r5]
   11a78:	str	r4, [r5, #4]
   11a7c:	mov	r7, r4
   11a80:	mov	r0, r7
   11a84:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00011a88 <lista_remove@@Base>:
   11a88:	push	{r4, r5, fp, lr}
   11a8c:	add	fp, sp, #8
   11a90:	cmp	r0, #0
   11a94:	mov	r4, #0
   11a98:	movne	r5, r1
   11a9c:	cmpne	r1, #0
   11aa0:	bne	11aac <lista_remove@@Base+0x24>
   11aa4:	mov	r0, r4
   11aa8:	pop	{r4, r5, fp, pc}
   11aac:	ldr	r1, [r0, #8]
   11ab0:	sub	r1, r1, #1
   11ab4:	str	r1, [r0, #8]
   11ab8:	ldr	r1, [r5, #8]
   11abc:	ldr	r4, [r5, #4]
   11ac0:	cmp	r1, #0
   11ac4:	streq	r4, [r0]
   11ac8:	strne	r4, [r1, #4]
   11acc:	ldrne	r4, [r5, #4]
   11ad0:	add	r2, r4, #8
   11ad4:	cmp	r4, #0
   11ad8:	addeq	r2, r0, #4
   11adc:	str	r1, [r2]
   11ae0:	ldr	r0, [r5]
   11ae4:	bl	10d08 <free@plt>
   11ae8:	mov	r0, r5
   11aec:	bl	10d08 <free@plt>
   11af0:	mov	r0, r4
   11af4:	pop	{r4, r5, fp, pc}

00011af8 <lista_pesquisa@@Base>:
   11af8:	push	{r4, r5, r6, sl, fp, lr}
   11afc:	add	fp, sp, #16
   11b00:	cmp	r0, #0
   11b04:	mov	r4, #0
   11b08:	movne	r5, r1
   11b0c:	cmpne	r1, #0
   11b10:	bne	11b1c <lista_pesquisa@@Base+0x24>
   11b14:	mov	r0, r4
   11b18:	pop	{r4, r5, r6, sl, fp, pc}
   11b1c:	cmp	r2, #1
   11b20:	bhi	11b14 <lista_pesquisa@@Base+0x1c>
   11b24:	cmp	r2, #0
   11b28:	beq	11b60 <lista_pesquisa@@Base+0x68>
   11b2c:	ldr	r6, [r0, #4]
   11b30:	cmp	r6, #0
   11b34:	bne	11b48 <lista_pesquisa@@Base+0x50>
   11b38:	b	11b14 <lista_pesquisa@@Base+0x1c>
   11b3c:	ldr	r6, [r6, #8]
   11b40:	cmp	r6, #0
   11b44:	beq	11b14 <lista_pesquisa@@Base+0x1c>
   11b48:	ldr	r0, [r6]
   11b4c:	mov	r1, r5
   11b50:	bl	10cd8 <strcmp@plt>
   11b54:	cmp	r0, #0
   11b58:	bne	11b3c <lista_pesquisa@@Base+0x44>
   11b5c:	b	11b90 <lista_pesquisa@@Base+0x98>
   11b60:	ldr	r6, [r0]
   11b64:	cmp	r6, #0
   11b68:	bne	11b7c <lista_pesquisa@@Base+0x84>
   11b6c:	b	11b14 <lista_pesquisa@@Base+0x1c>
   11b70:	ldr	r6, [r6, #4]
   11b74:	cmp	r6, #0
   11b78:	beq	11b14 <lista_pesquisa@@Base+0x1c>
   11b7c:	ldr	r0, [r6]
   11b80:	mov	r1, r5
   11b84:	bl	10cd8 <strcmp@plt>
   11b88:	cmp	r0, #0
   11b8c:	bne	11b70 <lista_pesquisa@@Base+0x78>
   11b90:	mov	r4, r6
   11b94:	mov	r0, r4
   11b98:	pop	{r4, r5, r6, sl, fp, pc}

00011b9c <lista_ordena@@Base>:
   11b9c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11ba0:	add	fp, sp, #24
   11ba4:	cmp	r0, #0
   11ba8:	beq	11c24 <lista_ordena@@Base+0x88>
   11bac:	ldr	r0, [r0]
   11bb0:	mov	r8, #0
   11bb4:	mov	r5, r0
   11bb8:	ldr	r4, [r5, #4]!
   11bbc:	cmp	r4, #0
   11bc0:	bne	11bf4 <lista_ordena@@Base+0x58>
   11bc4:	b	11c28 <lista_ordena@@Base+0x8c>
   11bc8:	cmp	r7, r9
   11bcc:	mov	r0, r4
   11bd0:	ldrne	r0, [r9]
   11bd4:	ldrne	r1, [r7]
   11bd8:	strne	r1, [r9]
   11bdc:	strne	r0, [r7]
   11be0:	ldrne	r0, [r5]
   11be4:	mov	r5, r0
   11be8:	ldr	r4, [r5, #4]!
   11bec:	cmp	r4, #0
   11bf0:	beq	11c28 <lista_ordena@@Base+0x8c>
   11bf4:	mov	r9, r0
   11bf8:	mov	r7, r0
   11bfc:	mov	r6, r4
   11c00:	ldr	r1, [r7]
   11c04:	ldr	r0, [r6]
   11c08:	bl	10cd8 <strcmp@plt>
   11c0c:	cmp	r0, #0
   11c10:	movlt	r7, r6
   11c14:	ldr	r6, [r6, #4]
   11c18:	cmp	r6, #0
   11c1c:	bne	11c00 <lista_ordena@@Base+0x64>
   11c20:	b	11bc8 <lista_ordena@@Base+0x2c>
   11c24:	mvn	r8, #0
   11c28:	mov	r0, r8
   11c2c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00011c30 <lista_inverte@@Base>:
   11c30:	cmp	r0, #0
   11c34:	mvneq	r1, #0
   11c38:	moveq	r0, r1
   11c3c:	bxeq	lr
   11c40:	ldr	r2, [r0, #8]
   11c44:	mov	r1, #0
   11c48:	cmp	r2, #2
   11c4c:	blt	11cc8 <lista_inverte@@Base+0x98>
   11c50:	bne	11c5c <lista_inverte@@Base+0x2c>
   11c54:	ldr	r2, [r0]
   11c58:	b	11ca4 <lista_inverte@@Base+0x74>
   11c5c:	push	{fp, lr}
   11c60:	mov	fp, sp
   11c64:	ldr	ip, [r0]
   11c68:	sub	r1, r2, #2
   11c6c:	ldr	r3, [ip, #4]
   11c70:	mov	r2, r3
   11c74:	ldr	r3, [r3, #4]
   11c78:	subs	r1, r1, #1
   11c7c:	ldr	lr, [r2, #8]
   11c80:	str	r3, [lr, #4]
   11c84:	ldr	r3, [r2, #4]
   11c88:	str	lr, [r3, #8]
   11c8c:	str	ip, [r2, #4]
   11c90:	str	r2, [ip, #8]
   11c94:	mov	ip, r2
   11c98:	bne	11c70 <lista_inverte@@Base+0x40>
   11c9c:	str	r2, [r0]
   11ca0:	pop	{fp, lr}
   11ca4:	ldr	r3, [r0, #4]
   11ca8:	mov	r1, #0
   11cac:	ldr	ip, [r3, #8]
   11cb0:	str	ip, [r0, #4]
   11cb4:	str	r1, [ip, #4]
   11cb8:	str	r2, [r3, #4]
   11cbc:	str	r1, [r3, #8]
   11cc0:	str	r3, [r2, #8]
   11cc4:	str	r3, [r0]
   11cc8:	mov	r0, r1
   11ccc:	bx	lr

00011cd0 <__libc_csu_init@@Base>:
   11cd0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11cd4:	mov	r7, r0
   11cd8:	ldr	r6, [pc, #72]	; 11d28 <__libc_csu_init@@Base+0x58>
   11cdc:	ldr	r5, [pc, #72]	; 11d2c <__libc_csu_init@@Base+0x5c>
   11ce0:	add	r6, pc, r6
   11ce4:	add	r5, pc, r5
   11ce8:	sub	r6, r6, r5
   11cec:	mov	r8, r1
   11cf0:	mov	r9, r2
   11cf4:	bl	10cac <calloc@plt-0x20>
   11cf8:	asrs	r6, r6, #2
   11cfc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11d00:	mov	r4, #0
   11d04:	add	r4, r4, #1
   11d08:	ldr	r3, [r5], #4
   11d0c:	mov	r2, r9
   11d10:	mov	r1, r8
   11d14:	mov	r0, r7
   11d18:	blx	r3
   11d1c:	cmp	r6, r4
   11d20:	bne	11d04 <__libc_csu_init@@Base+0x34>
   11d24:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11d28:	andeq	r0, r1, r4, lsr #4
   11d2c:	andeq	r0, r1, ip, lsl r2

00011d30 <__libc_csu_fini@@Base>:
   11d30:	bx	lr

Disassembly of section .fini:

00011d34 <.fini>:
   11d34:	push	{r3, lr}
   11d38:	pop	{r3, pc}
