
../repos/eddieantonio-ocreval-3ab279a/accdist/accdist:     file format elf32-littlearm


Disassembly of section .init:

00010874 <.init>:
   10874:	push	{r3, lr}
   10878:	bl	10a90 <getc@plt+0xa0>
   1087c:	pop	{r3, pc}

Disassembly of section .plt:

00010880 <calloc@plt-0x14>:
   10880:	push	{lr}		; (str lr, [sp, #-4]!)
   10884:	ldr	lr, [pc, #4]	; 10890 <calloc@plt-0x4>
   10888:	add	lr, pc, lr
   1088c:	ldr	pc, [lr, #8]!
   10890:	andeq	r3, r1, r0, ror r7

00010894 <calloc@plt>:
   10894:	add	ip, pc, #0, 12
   10898:	add	ip, ip, #77824	; 0x13000
   1089c:	ldr	pc, [ip, #1904]!	; 0x770

000108a0 <strcmp@plt>:
   108a0:	add	ip, pc, #0, 12
   108a4:	add	ip, ip, #77824	; 0x13000
   108a8:	ldr	pc, [ip, #1896]!	; 0x768

000108ac <fopen@plt>:
   108ac:	add	ip, pc, #0, 12
   108b0:	add	ip, ip, #77824	; 0x13000
   108b4:	ldr	pc, [ip, #1888]!	; 0x760

000108b8 <free@plt>:
   108b8:	add	ip, pc, #0, 12
   108bc:	add	ip, ip, #77824	; 0x13000
   108c0:	ldr	pc, [ip, #1880]!	; 0x758

000108c4 <utf8proc_get_property@plt>:
   108c4:	add	ip, pc, #0, 12
   108c8:	add	ip, ip, #77824	; 0x13000
   108cc:	ldr	pc, [ip, #1872]!	; 0x750

000108d0 <fgets@plt>:
   108d0:	add	ip, pc, #0, 12
   108d4:	add	ip, ip, #77824	; 0x13000
   108d8:	ldr	pc, [ip, #1864]!	; 0x748

000108dc <utf8proc_encode_char@plt>:
   108dc:	add	ip, pc, #0, 12
   108e0:	add	ip, ip, #77824	; 0x13000
   108e4:	ldr	pc, [ip, #1856]!	; 0x740

000108e8 <strdup@plt>:
   108e8:	add	ip, pc, #0, 12
   108ec:	add	ip, ip, #77824	; 0x13000
   108f0:	ldr	pc, [ip, #1848]!	; 0x738

000108f4 <rewind@plt>:
   108f4:	add	ip, pc, #0, 12
   108f8:	add	ip, ip, #77824	; 0x13000
   108fc:	ldr	pc, [ip, #1840]!	; 0x730

00010900 <unlink@plt>:
   10900:	add	ip, pc, #0, 12
   10904:	add	ip, ip, #77824	; 0x13000
   10908:	ldr	pc, [ip, #1832]!	; 0x728

0001090c <utf8proc_tolower@plt>:
   1090c:	add	ip, pc, #0, 12
   10910:	add	ip, ip, #77824	; 0x13000
   10914:	ldr	pc, [ip, #1824]!	; 0x720

00010918 <__xstat@plt>:
   10918:	add	ip, pc, #0, 12
   1091c:	add	ip, ip, #77824	; 0x13000
   10920:	ldr	pc, [ip, #1816]!	; 0x718

00010924 <fread@plt>:
   10924:	add	ip, pc, #0, 12
   10928:	add	ip, ip, #77824	; 0x13000
   1092c:	ldr	pc, [ip, #1808]!	; 0x710

00010930 <utf8proc_iterate@plt>:
   10930:	add	ip, pc, #0, 12
   10934:	add	ip, ip, #77824	; 0x13000
   10938:	ldr	pc, [ip, #1800]!	; 0x708

0001093c <__libc_start_main@plt>:
   1093c:	add	ip, pc, #0, 12
   10940:	add	ip, ip, #77824	; 0x13000
   10944:	ldr	pc, [ip, #1792]!	; 0x700

00010948 <__sysv_signal@plt>:
   10948:	add	ip, pc, #0, 12
   1094c:	add	ip, ip, #77824	; 0x13000
   10950:	ldr	pc, [ip, #1784]!	; 0x6f8

00010954 <__gmon_start__@plt>:
   10954:	add	ip, pc, #0, 12
   10958:	add	ip, ip, #77824	; 0x13000
   1095c:	ldr	pc, [ip, #1776]!	; 0x6f0

00010960 <getpid@plt>:
   10960:	add	ip, pc, #0, 12
   10964:	add	ip, ip, #77824	; 0x13000
   10968:	ldr	pc, [ip, #1768]!	; 0x6e8

0001096c <exit@plt>:
   1096c:	add	ip, pc, #0, 12
   10970:	add	ip, ip, #77824	; 0x13000
   10974:	ldr	pc, [ip, #1760]!	; 0x6e0

00010978 <utf8proc_category@plt>:
   10978:	add	ip, pc, #0, 12
   1097c:	add	ip, ip, #77824	; 0x13000
   10980:	ldr	pc, [ip, #1752]!	; 0x6d8

00010984 <strlen@plt>:
   10984:	add	ip, pc, #0, 12
   10988:	add	ip, ip, #77824	; 0x13000
   1098c:	ldr	pc, [ip, #1744]!	; 0x6d0

00010990 <fprintf@plt>:
   10990:	add	ip, pc, #0, 12
   10994:	add	ip, ip, #77824	; 0x13000
   10998:	ldr	pc, [ip, #1736]!	; 0x6c8

0001099c <__isoc99_sscanf@plt>:
   1099c:	add	ip, pc, #0, 12
   109a0:	add	ip, ip, #77824	; 0x13000
   109a4:	ldr	pc, [ip, #1728]!	; 0x6c0

000109a8 <fclose@plt>:
   109a8:	add	ip, pc, #0, 12
   109ac:	add	ip, ip, #77824	; 0x13000
   109b0:	ldr	pc, [ip, #1720]!	; 0x6b8

000109b4 <sprintf@plt>:
   109b4:	add	ip, pc, #0, 12
   109b8:	add	ip, ip, #77824	; 0x13000
   109bc:	ldr	pc, [ip, #1712]!	; 0x6b0

000109c0 <utf8proc_errmsg@plt>:
   109c0:	add	ip, pc, #0, 12
   109c4:	add	ip, ip, #77824	; 0x13000
   109c8:	ldr	pc, [ip, #1704]!	; 0x6a8

000109cc <fputs@plt>:
   109cc:	add	ip, pc, #0, 12
   109d0:	add	ip, ip, #77824	; 0x13000
   109d4:	ldr	pc, [ip, #1696]!	; 0x6a0

000109d8 <strncmp@plt>:
   109d8:	add	ip, pc, #0, 12
   109dc:	add	ip, ip, #77824	; 0x13000
   109e0:	ldr	pc, [ip, #1688]!	; 0x698

000109e4 <abort@plt>:
   109e4:	add	ip, pc, #0, 12
   109e8:	add	ip, ip, #77824	; 0x13000
   109ec:	ldr	pc, [ip, #1680]!	; 0x690

000109f0 <getc@plt>:
   109f0:	add	ip, pc, #0, 12
   109f4:	add	ip, ip, #77824	; 0x13000
   109f8:	ldr	pc, [ip, #1672]!	; 0x688

Disassembly of section .text:

00010a00 <error@@Base-0x11e0>:
   10a00:	push	{r0, r1, r2, r4, r5, lr}
   10a04:	mov	r3, #0
   10a08:	mov	r5, r1
   10a0c:	mov	r4, #0
   10a10:	ldr	r2, [pc, #52]	; 10a4c <getc@plt+0x5c>
   10a14:	str	r0, [sp, #4]
   10a18:	add	r0, sp, #4
   10a1c:	bl	11d00 <error@@Base+0x120>
   10a20:	ldr	r3, [sp, #4]
   10a24:	cmp	r3, r4
   10a28:	bgt	10a3c <getc@plt+0x4c>
   10a2c:	mov	r1, #0
   10a30:	ldr	r0, [pc, #24]	; 10a50 <getc@plt+0x60>
   10a34:	bl	11610 <getc@plt+0xc20>
   10a38:	bl	11b88 <getc@plt+0x1198>
   10a3c:	ldr	r0, [r5, r4, lsl #2]
   10a40:	add	r4, r4, #1
   10a44:	bl	10b44 <getc@plt+0x154>
   10a48:	b	10a20 <getc@plt+0x30>
   10a4c:	andeq	r2, r1, r8, ror r6
   10a50:			; <UNDEFINED> instruction: 0x009b6cdc
   10a54:	mov	fp, #0
   10a58:	mov	lr, #0
   10a5c:	pop	{r1}		; (ldr r1, [sp], #4)
   10a60:	mov	r2, sp
   10a64:	push	{r2}		; (str r2, [sp, #-4]!)
   10a68:	push	{r0}		; (str r0, [sp, #-4]!)
   10a6c:	ldr	ip, [pc, #16]	; 10a84 <getc@plt+0x94>
   10a70:	push	{ip}		; (str ip, [sp, #-4]!)
   10a74:	ldr	r0, [pc, #12]	; 10a88 <getc@plt+0x98>
   10a78:	ldr	r3, [pc, #12]	; 10a8c <getc@plt+0x9c>
   10a7c:	bl	1093c <__libc_start_main@plt>
   10a80:	bl	109e4 <abort@plt>
   10a84:	andeq	r2, r1, r8, asr r6
   10a88:	andeq	r0, r1, r0, lsl #20
   10a8c:	strdeq	r2, [r1], -r8
   10a90:	ldr	r3, [pc, #20]	; 10aac <getc@plt+0xbc>
   10a94:	ldr	r2, [pc, #20]	; 10ab0 <getc@plt+0xc0>
   10a98:	add	r3, pc, r3
   10a9c:	ldr	r2, [r3, r2]
   10aa0:	cmp	r2, #0
   10aa4:	bxeq	lr
   10aa8:	b	10954 <__gmon_start__@plt>
   10aac:	andeq	r3, r1, r0, ror #10
   10ab0:	andeq	r0, r0, r4, lsl #1
   10ab4:	ldr	r0, [pc, #24]	; 10ad4 <getc@plt+0xe4>
   10ab8:	ldr	r3, [pc, #24]	; 10ad8 <getc@plt+0xe8>
   10abc:	cmp	r3, r0
   10ac0:	bxeq	lr
   10ac4:	ldr	r3, [pc, #16]	; 10adc <getc@plt+0xec>
   10ac8:	cmp	r3, #0
   10acc:	bxeq	lr
   10ad0:	bx	r3
   10ad4:	muleq	r2, r8, r0
   10ad8:	muleq	r2, r8, r0
   10adc:	andeq	r0, r0, r0
   10ae0:	ldr	r0, [pc, #36]	; 10b0c <getc@plt+0x11c>
   10ae4:	ldr	r1, [pc, #36]	; 10b10 <getc@plt+0x120>
   10ae8:	sub	r1, r1, r0
   10aec:	asr	r1, r1, #2
   10af0:	add	r1, r1, r1, lsr #31
   10af4:	asrs	r1, r1, #1
   10af8:	bxeq	lr
   10afc:	ldr	r3, [pc, #16]	; 10b14 <getc@plt+0x124>
   10b00:	cmp	r3, #0
   10b04:	bxeq	lr
   10b08:	bx	r3
   10b0c:	muleq	r2, r8, r0
   10b10:	muleq	r2, r8, r0
   10b14:	andeq	r0, r0, r0
   10b18:	push	{r4, lr}
   10b1c:	ldr	r4, [pc, #24]	; 10b3c <getc@plt+0x14c>
   10b20:	ldrb	r3, [r4]
   10b24:	cmp	r3, #0
   10b28:	popne	{r4, pc}
   10b2c:	bl	10ab4 <getc@plt+0xc4>
   10b30:	mov	r3, #1
   10b34:	strb	r3, [r4]
   10b38:	pop	{r4, pc}
   10b3c:	andeq	r4, r2, r8, lsr #1
   10b40:	b	10ae0 <getc@plt+0xf0>
   10b44:	push	{r4, r5, r6, lr}
   10b48:	mov	r1, r0
   10b4c:	ldr	r4, [pc, #32]	; 10b74 <getc@plt+0x184>
   10b50:	mov	r0, r4
   10b54:	ldm	r4, {r5, r6}
   10b58:	bl	10eb4 <getc@plt+0x4c4>
   10b5c:	ldm	r4, {r1, r2}
   10b60:	ldr	r0, [pc, #16]	; 10b78 <getc@plt+0x188>
   10b64:	sub	r2, r2, r6
   10b68:	sub	r1, r1, r5
   10b6c:	pop	{r4, r5, r6, lr}
   10b70:	b	115a0 <getc@plt+0xbb0>
   10b74:	andseq	r4, r3, r0, lsr #10
   10b78:			; <UNDEFINED> instruction: 0x009b6cdc
   10b7c:	andeq	r0, r0, r0
   10b80:	mov	r2, r0
   10b84:	push	{r4, lr}
   10b88:	mov	r1, #99	; 0x63
   10b8c:	ldr	r0, [pc, #12]	; 10ba0 <getc@plt+0x1b0>
   10b90:	bl	108d0 <fgets@plt>
   10b94:	adds	r0, r0, #0
   10b98:	movne	r0, #1
   10b9c:	pop	{r4, pc}
   10ba0:	andeq	r4, r2, r9, lsr #1
   10ba4:	push	{r4, r5, r6, lr}
   10ba8:	mov	r5, r1
   10bac:	mov	r4, r2
   10bb0:	bl	10b80 <getc@plt+0x190>
   10bb4:	cmp	r0, #0
   10bb8:	bne	10bc4 <getc@plt+0x1d4>
   10bbc:	mov	r0, #0
   10bc0:	pop	{r4, r5, r6, pc}
   10bc4:	mov	r2, r5
   10bc8:	ldr	r1, [pc, #32]	; 10bf0 <getc@plt+0x200>
   10bcc:	ldr	r0, [pc, #32]	; 10bf4 <getc@plt+0x204>
   10bd0:	bl	1099c <__isoc99_sscanf@plt>
   10bd4:	cmp	r0, #1
   10bd8:	bne	10bbc <getc@plt+0x1cc>
   10bdc:	ldr	r3, [r4]
   10be0:	ldr	r2, [r5]
   10be4:	add	r3, r3, r2
   10be8:	str	r3, [r4]
   10bec:	pop	{r4, r5, r6, pc}
   10bf0:			; <UNDEFINED> instruction: 0x000126b2
   10bf4:	andeq	r4, r2, r9, lsr #1
   10bf8:	push	{r4, lr}
   10bfc:	sub	sp, sp, #24
   10c00:	mov	r4, r1
   10c04:	bl	10b80 <getc@plt+0x190>
   10c08:	cmp	r0, #0
   10c0c:	bne	10c1c <getc@plt+0x22c>
   10c10:	mov	r0, #0
   10c14:	add	sp, sp, #24
   10c18:	pop	{r4, pc}
   10c1c:	add	r3, sp, #20
   10c20:	add	r2, sp, #8
   10c24:	ldr	r1, [pc, #100]	; 10c90 <getc@plt+0x2a0>
   10c28:	str	r3, [sp, #4]
   10c2c:	add	r3, sp, #16
   10c30:	ldr	r0, [pc, #92]	; 10c94 <getc@plt+0x2a4>
   10c34:	str	r3, [sp]
   10c38:	add	r3, sp, #12
   10c3c:	bl	1099c <__isoc99_sscanf@plt>
   10c40:	cmp	r0, #4
   10c44:	bne	10c10 <getc@plt+0x220>
   10c48:	ldr	r3, [r4]
   10c4c:	mov	r0, #1
   10c50:	ldr	r2, [sp, #8]
   10c54:	add	r3, r3, r2
   10c58:	ldr	r2, [sp, #12]
   10c5c:	str	r3, [r4]
   10c60:	ldr	r3, [r4, #4]
   10c64:	add	r3, r3, r2
   10c68:	ldr	r2, [sp, #16]
   10c6c:	str	r3, [r4, #4]
   10c70:	ldr	r3, [r4, #8]
   10c74:	add	r3, r3, r2
   10c78:	ldr	r2, [sp, #20]
   10c7c:	str	r3, [r4, #8]
   10c80:	ldr	r3, [r4, #12]
   10c84:	add	r3, r3, r2
   10c88:	str	r3, [r4, #12]
   10c8c:	b	10c14 <getc@plt+0x224>
   10c90:	andeq	r2, r1, r6, lsr #13
   10c94:	andeq	r4, r2, r9, lsr #1
   10c98:	push	{r0, r1, r2, r3, r4, lr}
   10c9c:	str	r2, [sp, #8]
   10ca0:	ldr	r3, [r1, #12]
   10ca4:	str	r3, [sp, #4]
   10ca8:	ldr	r3, [r1, #8]
   10cac:	str	r3, [sp]
   10cb0:	ldrd	r2, [r1]
   10cb4:	ldr	r1, [pc, #8]	; 10cc4 <getc@plt+0x2d4>
   10cb8:	bl	10990 <fprintf@plt>
   10cbc:	add	sp, sp, #20
   10cc0:	pop	{pc}		; (ldr pc, [sp], #4)
   10cc4:			; <UNDEFINED> instruction: 0x000126b6
   10cc8:	cmp	r2, #0
   10ccc:	vmov	s14, r1
   10cd0:	bne	10ce0 <getc@plt+0x2f0>
   10cd4:	mov	r1, r0
   10cd8:	ldr	r0, [pc, #48]	; 10d10 <getc@plt+0x320>
   10cdc:	b	109cc <fputs@plt>
   10ce0:	vldr	d6, [pc, #32]	; 10d08 <getc@plt+0x318>
   10ce4:	vcvt.f64.s32	d7, s14
   10ce8:	ldr	r1, [pc, #36]	; 10d14 <getc@plt+0x324>
   10cec:	vmul.f64	d7, d7, d6
   10cf0:	vmov	s13, r2
   10cf4:	vcvt.f64.s32	d6, s13
   10cf8:	vdiv.f64	d7, d7, d6
   10cfc:	vmov	r2, r3, d7
   10d00:	b	10990 <fprintf@plt>
   10d04:	nop	{0}
   10d08:	andeq	r0, r0, r0
   10d0c:	subsmi	r0, r9, r0
   10d10:	ldrdeq	r2, [r1], -r0
   10d14:	ldrdeq	r2, [r1], -r9
   10d18:	ldr	r2, [r0, #12]
   10d1c:	ldr	r3, [r1, #12]
   10d20:	cmp	r2, r3
   10d24:	beq	10d30 <getc@plt+0x340>
   10d28:	sub	r0, r3, r2
   10d2c:	bx	lr
   10d30:	ldr	r2, [r0, #16]
   10d34:	ldr	r3, [r1, #16]
   10d38:	cmp	r2, r3
   10d3c:	bne	10d28 <getc@plt+0x338>
   10d40:	ldr	r0, [r0, #8]
   10d44:	ldr	r1, [r1, #8]
   10d48:	b	11a8c <getc@plt+0x109c>
   10d4c:	push	{r4, r5, r6, r7, lr}
   10d50:	mov	r4, r1
   10d54:	mov	r6, r2
   10d58:	sub	sp, sp, #20
   10d5c:	mov	r7, r3
   10d60:	mov	r5, r0
   10d64:	ldrd	r2, [r1]
   10d68:	ldr	r1, [pc, #80]	; 10dc0 <getc@plt+0x3d0>
   10d6c:	bl	10990 <fprintf@plt>
   10d70:	ldr	r2, [r4]
   10d74:	mov	r0, r5
   10d78:	ldr	r1, [r4, #4]
   10d7c:	sub	r1, r2, r1
   10d80:	bl	10cc8 <getc@plt+0x2d8>
   10d84:	cmp	r6, #0
   10d88:	movne	r2, r6
   10d8c:	ldrne	r1, [pc, #48]	; 10dc4 <getc@plt+0x3d4>
   10d90:	bne	10db0 <getc@plt+0x3c0>
   10d94:	add	r2, sp, #4
   10d98:	mov	r1, r7
   10d9c:	mov	r3, #1
   10da0:	mov	r0, r6
   10da4:	bl	12288 <error@@Base+0x6a8>
   10da8:	ldr	r1, [pc, #24]	; 10dc8 <getc@plt+0x3d8>
   10dac:	add	r2, sp, #4
   10db0:	mov	r0, r5
   10db4:	bl	10990 <fprintf@plt>
   10db8:	add	sp, sp, #20
   10dbc:	pop	{r4, r5, r6, r7, pc}
   10dc0:	ldrdeq	r2, [r1], -pc	; <UNPREDICTABLE>
   10dc4:	andeq	r2, r1, r9, asr #13
   10dc8:	andeq	r2, r1, sl, ror #13
   10dcc:	push	{r4, r5, r6, r7, r8, lr}
   10dd0:	mov	r4, r0
   10dd4:	mov	r0, r1
   10dd8:	mov	r6, r2
   10ddc:	mov	r5, r3
   10de0:	mov	r7, r1
   10de4:	bl	1196c <getc@plt+0xf7c>
   10de8:	sxth	r0, r0
   10dec:	add	r0, r4, r0, lsl #3
   10df0:	ldr	r3, [r0, #68]	; 0x44
   10df4:	add	r3, r3, r6
   10df8:	str	r3, [r0, #68]	; 0x44
   10dfc:	ldr	r3, [r0, #72]	; 0x48
   10e00:	add	r3, r3, r5
   10e04:	str	r3, [r0, #72]	; 0x48
   10e08:	ldr	r3, [r4, #2116]	; 0x844
   10e0c:	add	r3, r3, r6
   10e10:	str	r3, [r4, #2116]	; 0x844
   10e14:	ldr	r3, [r4, #2120]	; 0x848
   10e18:	add	r3, r3, r5
   10e1c:	str	r3, [r4, #2120]	; 0x848
   10e20:	add	r4, r4, r7, lsl #3
   10e24:	add	r4, r4, #8192	; 0x2000
   10e28:	ldr	r3, [r4, #1988]	; 0x7c4
   10e2c:	ldr	r2, [r4, #1992]	; 0x7c8
   10e30:	add	r3, r3, r6
   10e34:	add	r2, r2, r5
   10e38:	str	r3, [r4, #1988]	; 0x7c4
   10e3c:	str	r2, [r4, #1992]	; 0x7c8
   10e40:	pop	{r4, r5, r6, r7, r8, pc}
   10e44:	push	{r4, r5, r6, r7, r8, lr}
   10e48:	add	r4, r0, #2112	; 0x840
   10e4c:	mov	r8, r1
   10e50:	add	r4, r4, #12
   10e54:	mov	r7, r2
   10e58:	mov	r0, r4
   10e5c:	mov	r6, r3
   10e60:	bl	11714 <getc@plt+0xd24>
   10e64:	cmp	r0, #0
   10e68:	beq	10e80 <getc@plt+0x490>
   10e6c:	ldrd	r2, [r0, #12]
   10e70:	add	r2, r2, r7
   10e74:	add	r3, r3, r6
   10e78:	strd	r2, [r0, #12]
   10e7c:	pop	{r4, r5, r6, r7, r8, pc}
   10e80:	mov	r1, #20
   10e84:	mov	r0, #1
   10e88:	bl	11c1c <error@@Base+0x3c>
   10e8c:	mov	r5, r0
   10e90:	mov	r0, r8
   10e94:	bl	108e8 <strdup@plt>
   10e98:	mov	r1, r5
   10e9c:	str	r0, [r5, #8]
   10ea0:	mov	r0, r4
   10ea4:	str	r7, [r5, #12]
   10ea8:	str	r6, [r5, #16]
   10eac:	pop	{r4, r5, r6, r7, r8, lr}
   10eb0:	b	11758 <getc@plt+0xd68>
   10eb4:	push	{r4, r5, r6, r7, r8, r9, lr}
   10eb8:	mov	r7, r1
   10ebc:	sub	sp, sp, #28
   10ec0:	mov	r5, r0
   10ec4:	mov	r0, r7
   10ec8:	ldr	r1, [pc, #696]	; 11188 <getc@plt+0x798>
   10ecc:	bl	11ca4 <error@@Base+0xc4>
   10ed0:	mov	r4, r0
   10ed4:	bl	10b80 <getc@plt+0x190>
   10ed8:	cmp	r0, #0
   10edc:	beq	11174 <getc@plt+0x784>
   10ee0:	mov	r2, #40	; 0x28
   10ee4:	ldr	r1, [pc, #672]	; 1118c <getc@plt+0x79c>
   10ee8:	ldr	r0, [pc, #672]	; 11190 <getc@plt+0x7a0>
   10eec:	bl	109d8 <strncmp@plt>
   10ef0:	cmp	r0, #0
   10ef4:	ldr	r6, [pc, #660]	; 11190 <getc@plt+0x7a0>
   10ef8:	bne	11174 <getc@plt+0x784>
   10efc:	mov	r0, r4
   10f00:	bl	10b80 <getc@plt+0x190>
   10f04:	cmp	r0, #0
   10f08:	beq	11174 <getc@plt+0x784>
   10f0c:	ldr	r1, [pc, #640]	; 11194 <getc@plt+0x7a4>
   10f10:	mov	r0, r6
   10f14:	bl	108a0 <strcmp@plt>
   10f18:	cmp	r0, #0
   10f1c:	bne	11174 <getc@plt+0x784>
   10f20:	mov	r2, r5
   10f24:	add	r1, sp, #4
   10f28:	mov	r0, r4
   10f2c:	bl	10ba4 <getc@plt+0x1b4>
   10f30:	cmp	r0, #0
   10f34:	beq	11174 <getc@plt+0x784>
   10f38:	add	r2, r5, #4
   10f3c:	add	r1, sp, #8
   10f40:	mov	r0, r4
   10f44:	bl	10ba4 <getc@plt+0x1b4>
   10f48:	cmp	r0, #0
   10f4c:	beq	11174 <getc@plt+0x784>
   10f50:	mov	r0, r4
   10f54:	bl	10b80 <getc@plt+0x190>
   10f58:	cmp	r0, #0
   10f5c:	beq	11174 <getc@plt+0x784>
   10f60:	mov	r0, r4
   10f64:	bl	10b80 <getc@plt+0x190>
   10f68:	cmp	r0, #0
   10f6c:	beq	11174 <getc@plt+0x784>
   10f70:	add	r2, r5, #8
   10f74:	add	r1, sp, #12
   10f78:	mov	r0, r4
   10f7c:	bl	10ba4 <getc@plt+0x1b4>
   10f80:	cmp	r0, #0
   10f84:	beq	11174 <getc@plt+0x784>
   10f88:	add	r2, r5, #12
   10f8c:	add	r1, sp, #12
   10f90:	mov	r0, r4
   10f94:	bl	10ba4 <getc@plt+0x1b4>
   10f98:	cmp	r0, #0
   10f9c:	beq	11174 <getc@plt+0x784>
   10fa0:	add	r2, r5, #16
   10fa4:	add	r1, sp, #12
   10fa8:	mov	r0, r4
   10fac:	bl	10ba4 <getc@plt+0x1b4>
   10fb0:	cmp	r0, #0
   10fb4:	beq	11174 <getc@plt+0x784>
   10fb8:	mov	r0, r4
   10fbc:	bl	10b80 <getc@plt+0x190>
   10fc0:	cmp	r0, #0
   10fc4:	beq	11174 <getc@plt+0x784>
   10fc8:	mov	r0, r4
   10fcc:	bl	10b80 <getc@plt+0x190>
   10fd0:	cmp	r0, #0
   10fd4:	beq	11174 <getc@plt+0x784>
   10fd8:	mov	r0, r4
   10fdc:	bl	10b80 <getc@plt+0x190>
   10fe0:	cmp	r0, #0
   10fe4:	beq	11174 <getc@plt+0x784>
   10fe8:	mov	r0, r4
   10fec:	bl	10b80 <getc@plt+0x190>
   10ff0:	cmp	r0, #0
   10ff4:	beq	11174 <getc@plt+0x784>
   10ff8:	add	r1, r5, #20
   10ffc:	mov	r0, r4
   11000:	bl	10bf8 <getc@plt+0x208>
   11004:	cmp	r0, #0
   11008:	beq	11174 <getc@plt+0x784>
   1100c:	add	r1, r5, #36	; 0x24
   11010:	mov	r0, r4
   11014:	bl	10bf8 <getc@plt+0x208>
   11018:	cmp	r0, #0
   1101c:	beq	11174 <getc@plt+0x784>
   11020:	add	r1, r5, #52	; 0x34
   11024:	mov	r0, r4
   11028:	bl	10bf8 <getc@plt+0x208>
   1102c:	cmp	r0, #0
   11030:	beq	11174 <getc@plt+0x784>
   11034:	mov	r0, r4
   11038:	bl	10b80 <getc@plt+0x190>
   1103c:	cmp	r0, #0
   11040:	beq	11174 <getc@plt+0x784>
   11044:	mov	r0, r4
   11048:	bl	10b80 <getc@plt+0x190>
   1104c:	cmp	r0, #0
   11050:	beq	11060 <getc@plt+0x670>
   11054:	ldrb	r3, [r6]
   11058:	cmp	r3, #10
   1105c:	bne	11044 <getc@plt+0x654>
   11060:	ldr	r3, [sp, #8]
   11064:	cmp	r3, #0
   11068:	bgt	110d0 <getc@plt+0x6e0>
   1106c:	ldr	r3, [sp, #4]
   11070:	cmp	r3, #0
   11074:	ble	110c0 <getc@plt+0x6d0>
   11078:	mov	r0, r4
   1107c:	bl	10b80 <getc@plt+0x190>
   11080:	cmp	r0, #0
   11084:	beq	110c0 <getc@plt+0x6d0>
   11088:	ldr	r8, [pc, #264]	; 11198 <getc@plt+0x7a8>
   1108c:	ldr	r7, [pc, #252]	; 11190 <getc@plt+0x7a0>
   11090:	ldr	r9, [pc, #260]	; 1119c <getc@plt+0x7ac>
   11094:	mov	r0, r4
   11098:	bl	10b80 <getc@plt+0x190>
   1109c:	cmp	r0, #0
   110a0:	beq	110c0 <getc@plt+0x6d0>
   110a4:	add	r3, sp, #16
   110a8:	add	r2, sp, #12
   110ac:	mov	r1, r8
   110b0:	mov	r0, r7
   110b4:	bl	1099c <__isoc99_sscanf@plt>
   110b8:	cmp	r0, #2
   110bc:	beq	1112c <getc@plt+0x73c>
   110c0:	mov	r0, r4
   110c4:	bl	11ac8 <getc@plt+0x10d8>
   110c8:	add	sp, sp, #28
   110cc:	pop	{r4, r5, r6, r7, r8, r9, pc}
   110d0:	mov	r0, r4
   110d4:	bl	10b80 <getc@plt+0x190>
   110d8:	cmp	r0, #0
   110dc:	beq	1106c <getc@plt+0x67c>
   110e0:	ldr	r7, [pc, #168]	; 11190 <getc@plt+0x7a0>
   110e4:	ldr	r8, [pc, #172]	; 11198 <getc@plt+0x7a8>
   110e8:	add	r9, r7, #20
   110ec:	mov	r0, r4
   110f0:	bl	10b80 <getc@plt+0x190>
   110f4:	cmp	r0, #0
   110f8:	beq	1106c <getc@plt+0x67c>
   110fc:	add	r3, sp, #16
   11100:	add	r2, sp, #12
   11104:	mov	r1, r8
   11108:	mov	r0, r7
   1110c:	bl	1099c <__isoc99_sscanf@plt>
   11110:	cmp	r0, #2
   11114:	bne	1106c <getc@plt+0x67c>
   11118:	mov	r1, r9
   1111c:	mov	r0, r5
   11120:	ldrd	r2, [sp, #12]
   11124:	bl	10e44 <getc@plt+0x454>
   11128:	b	110ec <getc@plt+0x6fc>
   1112c:	ldrb	r3, [r6, #31]
   11130:	cmp	r3, #125	; 0x7d
   11134:	ldrbeq	r3, [r6, #30]
   11138:	beq	11148 <getc@plt+0x758>
   1113c:	cmp	r3, #92	; 0x5c
   11140:	bne	11160 <getc@plt+0x770>
   11144:	mov	r3, #10
   11148:	str	r3, [sp, #20]
   1114c:	mov	r0, r5
   11150:	ldrd	r2, [sp, #12]
   11154:	ldr	r1, [sp, #20]
   11158:	bl	10dcc <getc@plt+0x3dc>
   1115c:	b	11094 <getc@plt+0x6a4>
   11160:	add	r2, sp, #20
   11164:	mov	r1, r9
   11168:	ldr	r0, [pc, #48]	; 111a0 <getc@plt+0x7b0>
   1116c:	bl	1099c <__isoc99_sscanf@plt>
   11170:	b	1114c <getc@plt+0x75c>
   11174:	cmp	r7, #0
   11178:	ldr	r1, [pc, #36]	; 111a4 <getc@plt+0x7b4>
   1117c:	movne	r1, r7
   11180:	ldr	r0, [pc, #32]	; 111a8 <getc@plt+0x7b8>
   11184:	bl	11c64 <error@@Base+0x84>
   11188:	andeq	r3, r1, sp, asr #7
   1118c:	strdeq	r2, [r1], -r9
   11190:	andeq	r4, r2, r9, lsr #1
   11194:	andeq	r3, r1, ip, lsl #7
   11198:	andeq	r2, r1, lr, lsr #13
   1119c:	andeq	r2, r1, r4, lsr #14
   111a0:	andeq	r4, r2, r8, asr #1
   111a4:	strdeq	r2, [r1], -r3
   111a8:	andeq	r2, r1, r8, lsr #14
   111ac:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   111b0:	mov	r4, r0
   111b4:	mov	r0, r1
   111b8:	mov	r7, r4
   111bc:	mov	r6, #0
   111c0:	ldr	r1, [pc, #588]	; 11414 <getc@plt+0xa24>
   111c4:	bl	11ca4 <error@@Base+0xc4>
   111c8:	mov	r5, r0
   111cc:	ldr	r3, [pc, #580]	; 11418 <getc@plt+0xa28>
   111d0:	ldr	r2, [pc, #580]	; 1141c <getc@plt+0xa2c>
   111d4:	ldr	r1, [pc, #580]	; 11420 <getc@plt+0xa30>
   111d8:	bl	10990 <fprintf@plt>
   111dc:	ldr	r3, [pc, #576]	; 11424 <getc@plt+0xa34>
   111e0:	mov	r0, r5
   111e4:	ldr	r1, [pc, #572]	; 11428 <getc@plt+0xa38>
   111e8:	ldr	r2, [r4]
   111ec:	bl	10990 <fprintf@plt>
   111f0:	ldr	r3, [pc, #564]	; 1142c <getc@plt+0xa3c>
   111f4:	mov	r0, r5
   111f8:	ldr	r1, [pc, #552]	; 11428 <getc@plt+0xa38>
   111fc:	ldr	r2, [r4, #4]
   11200:	bl	10990 <fprintf@plt>
   11204:	ldr	r2, [r4]
   11208:	mov	r0, r5
   1120c:	ldr	r1, [r4, #4]
   11210:	sub	r1, r2, r1
   11214:	bl	10cc8 <getc@plt+0x2d8>
   11218:	ldr	r1, [pc, #528]	; 11430 <getc@plt+0xa40>
   1121c:	mov	r0, r5
   11220:	bl	10990 <fprintf@plt>
   11224:	ldr	r3, [pc, #520]	; 11434 <getc@plt+0xa44>
   11228:	mov	r0, r5
   1122c:	ldr	r1, [pc, #500]	; 11428 <getc@plt+0xa38>
   11230:	ldr	r2, [r4, #8]
   11234:	bl	10990 <fprintf@plt>
   11238:	ldr	r3, [pc, #504]	; 11438 <getc@plt+0xa48>
   1123c:	mov	r0, r5
   11240:	ldr	r1, [pc, #480]	; 11428 <getc@plt+0xa38>
   11244:	ldr	r2, [r4, #12]
   11248:	bl	10990 <fprintf@plt>
   1124c:	ldr	r3, [pc, #488]	; 1143c <getc@plt+0xa4c>
   11250:	mov	r0, r5
   11254:	ldr	r1, [pc, #460]	; 11428 <getc@plt+0xa38>
   11258:	ldr	r2, [r4, #16]
   1125c:	bl	10990 <fprintf@plt>
   11260:	mov	r0, r5
   11264:	ldr	r2, [r4]
   11268:	ldr	r1, [r4, #8]
   1126c:	ldr	r3, [r4, #12]
   11270:	add	r1, r1, r3
   11274:	bl	10cc8 <getc@plt+0x2d8>
   11278:	ldr	r1, [pc, #448]	; 11440 <getc@plt+0xa50>
   1127c:	mov	r0, r5
   11280:	bl	10990 <fprintf@plt>
   11284:	ldr	r2, [r4]
   11288:	mov	r0, r5
   1128c:	ldr	r1, [r4, #48]	; 0x30
   11290:	sub	r1, r2, r1
   11294:	bl	10cc8 <getc@plt+0x2d8>
   11298:	ldr	r1, [pc, #420]	; 11444 <getc@plt+0xa54>
   1129c:	mov	r0, r5
   112a0:	bl	10990 <fprintf@plt>
   112a4:	mov	r1, r5
   112a8:	ldr	r0, [pc, #408]	; 11448 <getc@plt+0xa58>
   112ac:	bl	109cc <fputs@plt>
   112b0:	ldr	r2, [pc, #404]	; 1144c <getc@plt+0xa5c>
   112b4:	add	r1, r4, #20
   112b8:	mov	r0, r5
   112bc:	bl	10c98 <getc@plt+0x2a8>
   112c0:	ldr	r2, [pc, #392]	; 11450 <getc@plt+0xa60>
   112c4:	add	r1, r4, #36	; 0x24
   112c8:	mov	r0, r5
   112cc:	bl	10c98 <getc@plt+0x2a8>
   112d0:	add	r1, r4, #52	; 0x34
   112d4:	mov	r0, r5
   112d8:	ldr	r2, [pc, #372]	; 11454 <getc@plt+0xa64>
   112dc:	bl	10c98 <getc@plt+0x2a8>
   112e0:	ldr	r1, [pc, #368]	; 11458 <getc@plt+0xa68>
   112e4:	mov	r0, r5
   112e8:	bl	10990 <fprintf@plt>
   112ec:	ldr	r3, [r7, #68]	; 0x44
   112f0:	cmp	r3, #0
   112f4:	ble	11314 <getc@plt+0x924>
   112f8:	mov	r0, r6
   112fc:	bl	1199c <getc@plt+0xfac>
   11300:	mov	r2, r0
   11304:	mov	r3, #0
   11308:	add	r1, r7, #68	; 0x44
   1130c:	mov	r0, r5
   11310:	bl	10d4c <getc@plt+0x35c>
   11314:	add	r6, r6, #1
   11318:	add	r7, r7, #8
   1131c:	cmp	r6, #256	; 0x100
   11320:	bne	112ec <getc@plt+0x8fc>
   11324:	add	r1, r4, #2112	; 0x840
   11328:	mov	r3, #0
   1132c:	ldr	r2, [pc, #288]	; 11454 <getc@plt+0xa64>
   11330:	add	r1, r1, #4
   11334:	mov	r0, r5
   11338:	bl	10d4c <getc@plt+0x35c>
   1133c:	ldr	r3, [r4, #4]
   11340:	cmp	r3, #0
   11344:	bgt	113ac <getc@plt+0x9bc>
   11348:	ldr	r3, [r4]
   1134c:	cmp	r3, #0
   11350:	ble	1139c <getc@plt+0x9ac>
   11354:	ldr	r7, [pc, #256]	; 1145c <getc@plt+0xa6c>
   11358:	add	r4, r4, #10176	; 0x27c0
   1135c:	mov	r0, r5
   11360:	mov	r6, #0
   11364:	add	r4, r4, #4
   11368:	ldr	r1, [pc, #232]	; 11458 <getc@plt+0xa68>
   1136c:	bl	10990 <fprintf@plt>
   11370:	ldr	r3, [r4, r6, lsl #3]
   11374:	cmp	r3, #0
   11378:	ble	11390 <getc@plt+0x9a0>
   1137c:	mov	r3, r6
   11380:	mov	r2, #0
   11384:	add	r1, r4, r6, lsl #3
   11388:	mov	r0, r5
   1138c:	bl	10d4c <getc@plt+0x35c>
   11390:	add	r6, r6, #1
   11394:	cmp	r6, r7
   11398:	bne	11370 <getc@plt+0x980>
   1139c:	mov	r0, r5
   113a0:	add	sp, sp, #8
   113a4:	pop	{r4, r5, r6, r7, r8, lr}
   113a8:	b	11ac8 <getc@plt+0x10d8>
   113ac:	add	r0, r4, #2112	; 0x840
   113b0:	add	r7, r4, #8192	; 0x2000
   113b4:	ldr	r8, [pc, #164]	; 11460 <getc@plt+0xa70>
   113b8:	add	r0, r0, #12
   113bc:	mov	r6, #0
   113c0:	bl	117e0 <getc@plt+0xdf0>
   113c4:	ldr	r2, [pc, #152]	; 11464 <getc@plt+0xa74>
   113c8:	ldr	r1, [r7, #1980]	; 0x7bc
   113cc:	ldr	r0, [r7, #1984]	; 0x7c0
   113d0:	bl	1157c <getc@plt+0xb8c>
   113d4:	mov	r1, r5
   113d8:	ldr	r0, [pc, #136]	; 11468 <getc@plt+0xa78>
   113dc:	bl	109cc <fputs@plt>
   113e0:	ldr	r3, [r7, #1984]	; 0x7c0
   113e4:	cmp	r3, r6
   113e8:	ble	11348 <getc@plt+0x958>
   113ec:	ldr	r3, [r7, #1980]	; 0x7bc
   113f0:	mov	r1, r8
   113f4:	mov	r0, r5
   113f8:	ldr	r2, [r3, r6, lsl #2]
   113fc:	add	r6, r6, #1
   11400:	ldr	r3, [r2, #8]
   11404:	str	r3, [sp]
   11408:	ldrd	r2, [r2, #12]
   1140c:	bl	10990 <fprintf@plt>
   11410:	b	113e0 <getc@plt+0x9f0>
   11414:	andeq	r2, r1, ip, lsl #29
   11418:	andeq	r3, r1, ip, lsl #7
   1141c:	strdeq	r2, [r1], -r9
   11420:	andeq	r2, r1, sl, lsr r7
   11424:	andeq	r2, r1, lr, ror sp
   11428:	andeq	r2, r1, r5, asr #13
   1142c:	andeq	r2, r1, pc, lsr r7
   11430:	andeq	r2, r1, r6, asr #14
   11434:	andeq	r2, r1, r5, asr r7
   11438:	andeq	r2, r1, r7, ror #14
   1143c:	andeq	r2, r1, r7, ror r7
   11440:	andeq	r2, r1, r3, lsl #15
   11444:	muleq	r1, sl, r7
   11448:			; <UNDEFINED> instruction: 0x000127b9
   1144c:	ldrdeq	r2, [r1], -pc	; <UNPREDICTABLE>
   11450:	andeq	r2, r1, r6, ror #15
   11454:	andeq	r2, r1, pc, ror #15
   11458:	strdeq	r2, [r1], -r5
   1145c:			; <UNDEFINED> instruction: 0x0010ffff
   11460:	andeq	r2, r1, fp, lsr r8
   11464:	andeq	r0, r1, r8, lsl sp
   11468:	andeq	r2, r1, r3, lsl r8
   1146c:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11470:	mov	r8, r0
   11474:	mov	r9, r1
   11478:	ldr	sl, [pc, #248]	; 11578 <getc@plt+0xb88>
   1147c:	mov	r7, sl
   11480:	ldr	r3, [sl]
   11484:	mov	r4, r9
   11488:	mov	r5, r8
   1148c:	ldr	fp, [r3, r8, lsl #2]
   11490:	cmp	r5, r4
   11494:	blt	114d4 <getc@plt+0xae4>
   11498:	ldr	r3, [r7]
   1149c:	sub	r1, r4, #1
   114a0:	cmp	r8, r1
   114a4:	str	fp, [r3, r4, lsl #2]
   114a8:	bge	114b4 <getc@plt+0xac4>
   114ac:	mov	r0, r8
   114b0:	bl	1146c <getc@plt+0xa7c>
   114b4:	add	r8, r5, #1
   114b8:	cmp	r8, r9
   114bc:	blt	11480 <getc@plt+0xa90>
   114c0:	add	sp, sp, #12
   114c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   114c8:	sub	r4, r4, #1
   114cc:	cmp	r5, r4
   114d0:	beq	11570 <getc@plt+0xb80>
   114d4:	ldrd	r2, [r7]
   114d8:	mov	r0, fp
   114dc:	ldr	r1, [r2, r4, lsl #2]
   114e0:	blx	r3
   114e4:	cmp	r0, #0
   114e8:	blt	114c8 <getc@plt+0xad8>
   114ec:	cmp	r5, r4
   114f0:	beq	11570 <getc@plt+0xb80>
   114f4:	ldr	r2, [r7]
   114f8:	lsl	r3, r4, #2
   114fc:	add	r6, r5, #1
   11500:	ldr	r1, [r2, r4, lsl #2]
   11504:	str	r1, [r2, r5, lsl #2]
   11508:	cmp	r6, r4
   1150c:	lsl	r2, r6, #2
   11510:	ldr	r1, [r7]
   11514:	bge	11564 <getc@plt+0xb74>
   11518:	mov	r0, fp
   1151c:	ldr	r1, [r1, r6, lsl #2]
   11520:	str	r3, [sp]
   11524:	ldr	r5, [r7, #4]
   11528:	str	r2, [sp, #4]
   1152c:	blx	r5
   11530:	cmp	r0, #0
   11534:	ldr	r3, [sp]
   11538:	ldr	r2, [sp, #4]
   1153c:	bgt	1155c <getc@plt+0xb6c>
   11540:	ldr	r1, [r7]
   11544:	sub	r5, r4, #1
   11548:	ldr	r2, [r1, r2]
   1154c:	str	r2, [r1, r3]
   11550:	mov	r4, r5
   11554:	mov	r5, r6
   11558:	b	11490 <getc@plt+0xaa0>
   1155c:	add	r6, r6, #1
   11560:	b	11508 <getc@plt+0xb18>
   11564:	moveq	r5, r6
   11568:	bne	11540 <getc@plt+0xb50>
   1156c:	b	11550 <getc@plt+0xb60>
   11570:	mov	r6, r5
   11574:	b	11550 <getc@plt+0xb60>
   11578:	andeq	r4, r2, r0, lsl r1
   1157c:	cmp	r0, #1
   11580:	bxle	lr
   11584:	ldr	r3, [pc, #12]	; 11598 <getc@plt+0xba8>
   11588:	stm	r3, {r1, r2}
   1158c:	sub	r1, r0, #1
   11590:	mov	r0, #0
   11594:	b	1146c <getc@plt+0xa7c>
   11598:	andeq	r4, r2, r0, lsl r1
   1159c:	andeq	r0, r0, r0
   115a0:	cmp	r1, #0
   115a4:	bxeq	lr
   115a8:	sub	r3, r1, r2
   115ac:	mov	r2, #0
   115b0:	vldr	d6, [pc, #80]	; 11608 <getc@plt+0xc18>
   115b4:	vmov	s14, r3
   115b8:	vcvt.f64.s32	d7, s14
   115bc:	vmul.f64	d7, d7, d6
   115c0:	vmov	s13, r1
   115c4:	vcvt.f64.s32	d5, s13
   115c8:	vdiv.f64	d6, d7, d5
   115cc:	sxth	r3, r2
   115d0:	add	r2, r2, #1
   115d4:	vmov	s15, r3
   115d8:	vcvt.f64.s32	d7, s15
   115dc:	vcmpe.f64	d7, d6
   115e0:	vmrs	APSR_nzcv, fpscr
   115e4:	bls	115f8 <getc@plt+0xc08>
   115e8:	ldr	r3, [r0, #404]	; 0x194
   115ec:	add	r1, r3, r1
   115f0:	str	r1, [r0, #404]	; 0x194
   115f4:	bx	lr
   115f8:	ldr	ip, [r0, r3, lsl #2]
   115fc:	add	ip, ip, r1
   11600:	str	ip, [r0, r3, lsl #2]
   11604:	b	115cc <getc@plt+0xbdc>
   11608:	andeq	r0, r0, r0
   1160c:	subsmi	r0, r9, r0
   11610:	ldr	r3, [r0, #404]	; 0x194
   11614:	cmp	r3, #0
   11618:	bxeq	lr
   1161c:	push	{r4, r5, r6, r7, lr}
   11620:	mov	r5, r0
   11624:	mov	r0, r1
   11628:	mov	r4, #0
   1162c:	vpush	{d8}
   11630:	sub	sp, sp, #12
   11634:	vldr	d8, [pc, #92]	; 11698 <getc@plt+0xca8>
   11638:	ldr	r7, [pc, #96]	; 116a0 <getc@plt+0xcb0>
   1163c:	ldr	r1, [pc, #96]	; 116a4 <getc@plt+0xcb4>
   11640:	bl	11ca4 <error@@Base+0xc4>
   11644:	mov	r6, r0
   11648:	ldr	r3, [r5, r4, lsl #2]
   1164c:	mov	r2, r4
   11650:	mov	r1, r7
   11654:	mov	r0, r6
   11658:	add	r4, r4, #1
   1165c:	vldr	s13, [r5, #404]	; 0x194
   11660:	vmov	s15, r3
   11664:	vcvt.f64.s32	d6, s13
   11668:	vcvt.f64.s32	d7, s15
   1166c:	vmul.f64	d7, d7, d8
   11670:	vdiv.f64	d5, d7, d6
   11674:	vstr	d5, [sp]
   11678:	bl	10990 <fprintf@plt>
   1167c:	cmp	r4, #101	; 0x65
   11680:	bne	11648 <getc@plt+0xc58>
   11684:	mov	r0, r6
   11688:	add	sp, sp, #12
   1168c:	vpop	{d8}
   11690:	pop	{r4, r5, r6, r7, lr}
   11694:	b	11ac8 <getc@plt+0x10d8>
   11698:	andeq	r0, r0, r0
   1169c:	subsmi	r0, r9, r0
   116a0:	andeq	r2, r1, sl, asr #16
   116a4:	andeq	r2, r1, ip, lsl #29
   116a8:	sub	r0, r0, #1
   116ac:	mov	r3, #0
   116b0:	ldrb	r2, [r0, #1]!
   116b4:	cmp	r2, #0
   116b8:	bne	116d0 <getc@plt+0xce0>
   116bc:	movw	r2, #503	; 0x1f7
   116c0:	udiv	r0, r3, r2
   116c4:	mls	r0, r2, r0, r3
   116c8:	sxth	r0, r0
   116cc:	bx	lr
   116d0:	add	r3, r3, r2
   116d4:	b	116b0 <getc@plt+0xcc0>
   116d8:	push	{r4, r5, r6, lr}
   116dc:	add	r6, r0, #8000	; 0x1f40
   116e0:	mov	r4, r0
   116e4:	mov	r5, r0
   116e8:	add	r6, r6, #48	; 0x30
   116ec:	mov	r0, r5
   116f0:	add	r5, r5, #16
   116f4:	bl	124d0 <error@@Base+0x8f0>
   116f8:	cmp	r5, r6
   116fc:	bne	116ec <getc@plt+0xcfc>
   11700:	add	r4, r4, #4096	; 0x1000
   11704:	mov	r3, #0
   11708:	str	r3, [r4, #3952]	; 0xf70
   1170c:	str	r3, [r4, #3956]	; 0xf74
   11710:	pop	{r4, r5, r6, pc}
   11714:	push	{r4, r5, r6, lr}
   11718:	mov	r4, r0
   1171c:	mov	r0, r1
   11720:	mov	r5, r1
   11724:	bl	116a8 <getc@plt+0xcb8>
   11728:	ldr	r4, [r4, r0, lsl #4]
   1172c:	cmp	r4, #0
   11730:	beq	11748 <getc@plt+0xd58>
   11734:	mov	r0, r5
   11738:	ldr	r1, [r4, #8]
   1173c:	bl	108a0 <strcmp@plt>
   11740:	cmp	r0, #0
   11744:	bne	11750 <getc@plt+0xd60>
   11748:	mov	r0, r4
   1174c:	pop	{r4, r5, r6, pc}
   11750:	ldr	r4, [r4, #4]
   11754:	b	1172c <getc@plt+0xd3c>
   11758:	push	{r4, lr}
   1175c:	mov	r4, r0
   11760:	ldr	r0, [r1, #8]
   11764:	bl	116a8 <getc@plt+0xcb8>
   11768:	add	r0, r4, r0, lsl #4
   1176c:	add	r4, r4, #4096	; 0x1000
   11770:	bl	124e8 <error@@Base+0x908>
   11774:	ldr	r0, [r4, #3952]	; 0xf70
   11778:	cmp	r0, #0
   1177c:	beq	1178c <getc@plt+0xd9c>
   11780:	bl	108b8 <free@plt>
   11784:	mov	r3, #0
   11788:	str	r3, [r4, #3952]	; 0xf70
   1178c:	ldr	r3, [r4, #3956]	; 0xf74
   11790:	add	r3, r3, #1
   11794:	str	r3, [r4, #3956]	; 0xf74
   11798:	pop	{r4, pc}
   1179c:	push	{r4, lr}
   117a0:	mov	r4, r0
   117a4:	ldr	r0, [r1, #8]
   117a8:	bl	116a8 <getc@plt+0xcb8>
   117ac:	add	r0, r4, r0, lsl #4
   117b0:	add	r4, r4, #4096	; 0x1000
   117b4:	bl	12520 <error@@Base+0x940>
   117b8:	ldr	r0, [r4, #3952]	; 0xf70
   117bc:	cmp	r0, #0
   117c0:	beq	117d0 <getc@plt+0xde0>
   117c4:	bl	108b8 <free@plt>
   117c8:	mov	r3, #0
   117cc:	str	r3, [r4, #3952]	; 0xf70
   117d0:	ldr	r3, [r4, #3956]	; 0xf74
   117d4:	sub	r3, r3, #1
   117d8:	str	r3, [r4, #3956]	; 0xf74
   117dc:	pop	{r4, pc}
   117e0:	push	{r4, r5, r6, lr}
   117e4:	add	r6, r0, #4096	; 0x1000
   117e8:	ldr	r4, [r6, #3952]	; 0xf70
   117ec:	cmp	r4, #0
   117f0:	popne	{r4, r5, r6, pc}
   117f4:	ldr	r3, [r6, #3956]	; 0xf74
   117f8:	cmp	r3, #0
   117fc:	popeq	{r4, r5, r6, pc}
   11800:	mov	r5, r0
   11804:	mov	r1, #4
   11808:	mov	r0, r3
   1180c:	bl	11c1c <error@@Base+0x3c>
   11810:	mov	r3, r4
   11814:	mov	r2, r4
   11818:	str	r0, [r6, #3952]	; 0xf70
   1181c:	movw	lr, #503	; 0x1f7
   11820:	ldr	r1, [r5, r2, lsl #4]
   11824:	mov	ip, r3
   11828:	cmp	r1, #0
   1182c:	mov	r3, ip
   11830:	bne	11844 <getc@plt+0xe54>
   11834:	add	r2, r2, #1
   11838:	cmp	r2, lr
   1183c:	bne	11820 <getc@plt+0xe30>
   11840:	pop	{r4, r5, r6, pc}
   11844:	str	r1, [r0, ip, lsl #2]
   11848:	add	ip, ip, #1
   1184c:	ldr	r1, [r1, #4]
   11850:	b	11828 <getc@plt+0xe38>
   11854:	push	{r4, r5, r6, r7, r8, lr}
   11858:	add	r6, r0, #8000	; 0x1f40
   1185c:	mov	r4, r0
   11860:	mov	r7, r1
   11864:	mov	r5, r0
   11868:	add	r6, r6, #48	; 0x30
   1186c:	mov	r0, r5
   11870:	mov	r1, r7
   11874:	add	r5, r5, #16
   11878:	bl	125c8 <error@@Base+0x9e8>
   1187c:	cmp	r5, r6
   11880:	bne	1186c <getc@plt+0xe7c>
   11884:	add	r4, r4, #4096	; 0x1000
   11888:	ldr	r0, [r4, #3952]	; 0xf70
   1188c:	cmp	r0, #0
   11890:	beq	118a0 <getc@plt+0xeb0>
   11894:	bl	108b8 <free@plt>
   11898:	mov	r3, #0
   1189c:	str	r3, [r4, #3952]	; 0xf70
   118a0:	mov	r3, #0
   118a4:	str	r3, [r4, #3956]	; 0xf74
   118a8:	pop	{r4, r5, r6, r7, r8, pc}
   118ac:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   118b0:	mov	r5, #0
   118b4:	mov	r8, #12
   118b8:	mov	r4, r5
   118bc:	ldr	r6, [pc, #152]	; 1195c <getc@plt+0xf6c>
   118c0:	ldr	r7, [pc, #152]	; 11960 <getc@plt+0xf70>
   118c4:	ldr	r9, [pc, #152]	; 11964 <getc@plt+0xf74>
   118c8:	ldrsh	r3, [r6]
   118cc:	cmp	r3, r4
   118d0:	ble	11920 <getc@plt+0xf30>
   118d4:	mla	r3, r8, r5, r7
   118d8:	add	r2, r6, r4, lsl #2
   118dc:	ldr	r1, [r2, #4]
   118e0:	ldr	r0, [r3, #8]
   118e4:	bl	108a0 <strcmp@plt>
   118e8:	cmp	r0, #0
   118ec:	addne	r4, r4, #1
   118f0:	bne	118c8 <getc@plt+0xed8>
   118f4:	mul	r3, r8, r5
   118f8:	add	r2, r7, r3
   118fc:	ldr	r3, [r7, r3]
   11900:	ldr	r2, [r2, #4]
   11904:	cmp	r2, r3
   11908:	bcs	11950 <getc@plt+0xf60>
   1190c:	add	r5, r5, #1
   11910:	cmp	r5, #91	; 0x5b
   11914:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11918:	mov	r4, #0
   1191c:	b	118c8 <getc@plt+0xed8>
   11920:	bne	118f4 <getc@plt+0xf04>
   11924:	cmp	r4, #256	; 0x100
   11928:	bne	11934 <getc@plt+0xf44>
   1192c:	ldr	r0, [pc, #52]	; 11968 <getc@plt+0xf78>
   11930:	bl	11be0 <error@@Base>
   11934:	mla	r2, r8, r5, r7
   11938:	add	r3, r4, #1
   1193c:	strh	r3, [r6]
   11940:	add	r3, r6, r4, lsl #2
   11944:	ldr	r2, [r2, #8]
   11948:	str	r2, [r3, #4]
   1194c:	b	118f4 <getc@plt+0xf04>
   11950:	strb	r4, [r3, r9]
   11954:	add	r3, r3, #1
   11958:	b	11904 <getc@plt+0xf14>
   1195c:	andeq	r4, r2, r8, lsl r1
   11960:	andeq	r2, r1, r8, asr r8
   11964:	andeq	r4, r2, ip, lsl r5
   11968:	muleq	r1, ip, ip
   1196c:	ldr	r3, [pc, #32]	; 11994 <getc@plt+0xfa4>
   11970:	push	{r4, lr}
   11974:	mov	r4, r0
   11978:	ldrsh	r3, [r3]
   1197c:	cmp	r3, #0
   11980:	bne	11988 <getc@plt+0xf98>
   11984:	bl	118ac <getc@plt+0xebc>
   11988:	ldr	r3, [pc, #8]	; 11998 <getc@plt+0xfa8>
   1198c:	ldrb	r0, [r3, r4]
   11990:	pop	{r4, pc}
   11994:	andeq	r4, r2, r8, lsl r1
   11998:	andeq	r4, r2, ip, lsl r5
   1199c:	push	{r4, r5, r6, lr}
   119a0:	uxtb	r5, r0
   119a4:	ldr	r4, [pc, #44]	; 119d8 <getc@plt+0xfe8>
   119a8:	ldrsh	r3, [r4]
   119ac:	cmp	r3, #0
   119b0:	bne	119b8 <getc@plt+0xfc8>
   119b4:	bl	118ac <getc@plt+0xebc>
   119b8:	ldrsh	r3, [r4]
   119bc:	cmp	r5, r3
   119c0:	blt	119cc <getc@plt+0xfdc>
   119c4:	ldr	r0, [pc, #16]	; 119dc <getc@plt+0xfec>
   119c8:	bl	11be0 <error@@Base>
   119cc:	add	r4, r4, r5, lsl #2
   119d0:	ldr	r0, [r4, #4]
   119d4:	pop	{r4, r5, r6, pc}
   119d8:	andeq	r4, r2, r8, lsl r1
   119dc:			; <UNDEFINED> instruction: 0x00012cb7
   119e0:	ldr	r3, [pc, #56]	; 11a20 <getc@plt+0x1030>
   119e4:	push	{r4, r5, lr}
   119e8:	sub	sp, sp, #116	; 0x74
   119ec:	mov	r5, r0
   119f0:	ldr	r4, [r3]
   119f4:	bl	10960 <getpid@plt>
   119f8:	ldr	r1, [pc, #36]	; 11a24 <getc@plt+0x1034>
   119fc:	mov	r3, r0
   11a00:	add	r0, sp, #12
   11a04:	str	r5, [sp]
   11a08:	mov	r2, r4
   11a0c:	bl	109b4 <sprintf@plt>
   11a10:	add	r0, sp, #12
   11a14:	bl	108e8 <strdup@plt>
   11a18:	add	sp, sp, #116	; 0x74
   11a1c:	pop	{r4, r5, pc}
   11a20:	addseq	r6, fp, r8, ror lr
   11a24:	andeq	r3, r1, r2, lsl #5
   11a28:	ldr	r3, [pc, #84]	; 11a84 <getc@plt+0x1094>
   11a2c:	mov	r5, r0
   11a30:	push	{r7, lr}
   11a34:	ldr	r3, [r3]
   11a38:	cmp	r3, #0
   11a3c:	beq	11a44 <getc@plt+0x1054>
   11a40:	blx	r3
   11a44:	ldr	r6, [pc, #60]	; 11a88 <getc@plt+0x1098>
   11a48:	mov	r4, #1
   11a4c:	ldrsh	r3, [r6]
   11a50:	cmp	r3, r4
   11a54:	bge	11a60 <getc@plt+0x1070>
   11a58:	mov	r0, r5
   11a5c:	bl	1096c <exit@plt>
   11a60:	mov	r0, r4
   11a64:	add	r4, r4, #1
   11a68:	bl	119e0 <getc@plt+0xff0>
   11a6c:	mov	r7, r0
   11a70:	sxth	r4, r4
   11a74:	bl	10900 <unlink@plt>
   11a78:	mov	r0, r7
   11a7c:	bl	108b8 <free@plt>
   11a80:	b	11a4c <getc@plt+0x105c>
   11a84:	addseq	r6, fp, ip, ror lr
   11a88:	andseq	r4, r3, ip, lsl r5
   11a8c:	sub	r2, r0, #1
   11a90:	sub	r1, r1, #1
   11a94:	ldrb	r3, [r2, #1]!
   11a98:	ldrb	r0, [r1, #1]!
   11a9c:	cmp	r3, #0
   11aa0:	beq	11abc <getc@plt+0x10cc>
   11aa4:	cmp	r3, r0
   11aa8:	beq	11a94 <getc@plt+0x10a4>
   11aac:	cmp	r3, r0
   11ab0:	mvncc	r0, #0
   11ab4:	movcs	r0, #1
   11ab8:	bx	lr
   11abc:	cmp	r0, #0
   11ac0:	bxeq	lr
   11ac4:	b	11aac <getc@plt+0x10bc>
   11ac8:	ldr	r2, [pc, #28]	; 11aec <getc@plt+0x10fc>
   11acc:	ldr	r2, [r2]
   11ad0:	cmp	r2, r0
   11ad4:	bxeq	lr
   11ad8:	ldr	r2, [pc, #16]	; 11af0 <getc@plt+0x1100>
   11adc:	ldr	r2, [r2]
   11ae0:	cmp	r2, r0
   11ae4:	bxeq	lr
   11ae8:	b	109a8 <fclose@plt>
   11aec:	andeq	r4, r2, r0, lsr #1
   11af0:	andeq	r4, r2, r4, lsr #1
   11af4:	push	{lr}		; (str lr, [sp, #-4]!)
   11af8:	sub	sp, sp, #92	; 0x5c
   11afc:	mov	r1, sp
   11b00:	bl	1265c <error@@Base+0xa7c>
   11b04:	clz	r0, r0
   11b08:	lsr	r0, r0, #5
   11b0c:	add	sp, sp, #92	; 0x5c
   11b10:	pop	{pc}		; (ldr pc, [sp], #4)
   11b14:	ldr	r3, [pc, #36]	; 11b40 <getc@plt+0x1150>
   11b18:	push	{r4, lr}
   11b1c:	ldrh	r0, [r3]
   11b20:	add	r0, r0, #1
   11b24:	sxth	r0, r0
   11b28:	strh	r0, [r3]
   11b2c:	bl	119e0 <getc@plt+0xff0>
   11b30:	mov	r4, r0
   11b34:	bl	10900 <unlink@plt>
   11b38:	mov	r0, r4
   11b3c:	pop	{r4, pc}
   11b40:	andseq	r4, r3, ip, lsl r5
   11b44:	push	{r4, lr}
   11b48:	mov	r4, r0
   11b4c:	bl	10984 <strlen@plt>
   11b50:	sub	r0, r0, #1
   11b54:	add	r1, r4, #1
   11b58:	sxth	r0, r0
   11b5c:	tst	r0, #32768	; 0x8000
   11b60:	bne	11b74 <getc@plt+0x1184>
   11b64:	sub	r3, r0, #1
   11b68:	ldrb	r2, [r1, r3]
   11b6c:	cmp	r2, #47	; 0x2f
   11b70:	bne	11b80 <getc@plt+0x1190>
   11b74:	add	r0, r0, #1
   11b78:	add	r0, r4, r0
   11b7c:	pop	{r4, pc}
   11b80:	mov	r0, r3
   11b84:	b	11b5c <getc@plt+0x116c>
   11b88:	push	{r4, lr}
   11b8c:	mov	r0, #0
   11b90:	bl	11a28 <getc@plt+0x1038>
   11b94:	ldr	r2, [pc, #52]	; 11bd0 <getc@plt+0x11e0>
   11b98:	push	{r4, lr}
   11b9c:	ldr	r2, [r2]
   11ba0:	cmp	r2, #0
   11ba4:	beq	11bb0 <getc@plt+0x11c0>
   11ba8:	blx	r2
   11bac:	bl	11b88 <getc@plt+0x1198>
   11bb0:	mov	r3, r0
   11bb4:	ldr	r2, [pc, #24]	; 11bd4 <getc@plt+0x11e4>
   11bb8:	ldr	r0, [pc, #24]	; 11bd8 <getc@plt+0x11e8>
   11bbc:	ldr	r1, [pc, #24]	; 11bdc <getc@plt+0x11ec>
   11bc0:	ldr	r2, [r2]
   11bc4:	ldr	r0, [r0]
   11bc8:	bl	10990 <fprintf@plt>
   11bcc:	b	11bac <getc@plt+0x11bc>
   11bd0:	addseq	r6, fp, r4, ror lr
   11bd4:	addseq	r6, fp, r8, ror lr
   11bd8:	muleq	r2, r8, r0
   11bdc:	muleq	r1, r0, r2

00011be0 <error@@Base>:
   11be0:	mov	r3, r0
   11be4:	ldr	r2, [pc, #32]	; 11c0c <error@@Base+0x2c>
   11be8:	push	{r4, lr}
   11bec:	ldr	r0, [pc, #28]	; 11c10 <error@@Base+0x30>
   11bf0:	ldr	r1, [pc, #28]	; 11c14 <error@@Base+0x34>
   11bf4:	ldr	r2, [r2]
   11bf8:	ldr	r0, [r0]
   11bfc:	bl	10990 <fprintf@plt>
   11c00:	ldr	r3, [pc, #16]	; 11c18 <error@@Base+0x38>
   11c04:	ldr	r0, [r3]
   11c08:	bl	11a28 <getc@plt+0x1038>
   11c0c:	addseq	r6, fp, r8, ror lr
   11c10:	muleq	r2, r8, r0
   11c14:	muleq	r1, pc, r2	; <UNPREDICTABLE>
   11c18:	muleq	r2, r0, r0
   11c1c:	push	{r4, lr}
   11c20:	bl	10894 <calloc@plt>
   11c24:	cmp	r0, #0
   11c28:	popne	{r4, pc}
   11c2c:	ldr	r0, [pc]	; 11c34 <error@@Base+0x54>
   11c30:	bl	11be0 <error@@Base>
   11c34:	andeq	r3, r1, r7, lsr #5
   11c38:	ldr	r3, [pc, #28]	; 11c5c <error@@Base+0x7c>
   11c3c:	ldrb	r2, [r3, #2]
   11c40:	cmp	r2, #0
   11c44:	bxne	lr
   11c48:	mov	r2, #1
   11c4c:	push	{r4, lr}
   11c50:	ldr	r0, [pc, #8]	; 11c60 <error@@Base+0x80>
   11c54:	strb	r2, [r3, #2]
   11c58:	bl	11be0 <error@@Base>
   11c5c:	andseq	r4, r3, ip, lsl r5
   11c60:	andeq	r3, r1, r1, asr #5
   11c64:	push	{r0, r1, r2, lr}
   11c68:	mov	r3, r0
   11c6c:	ldr	r2, [pc, #32]	; 11c94 <error@@Base+0xb4>
   11c70:	str	r1, [sp]
   11c74:	ldr	r0, [pc, #28]	; 11c98 <error@@Base+0xb8>
   11c78:	ldr	r1, [pc, #28]	; 11c9c <error@@Base+0xbc>
   11c7c:	ldr	r2, [r2]
   11c80:	ldr	r0, [r0]
   11c84:	bl	10990 <fprintf@plt>
   11c88:	ldr	r3, [pc, #16]	; 11ca0 <error@@Base+0xc0>
   11c8c:	ldr	r0, [r3]
   11c90:	bl	11a28 <getc@plt+0x1038>
   11c94:	addseq	r6, fp, r8, ror lr
   11c98:	muleq	r2, r8, r0
   11c9c:	ldrdeq	r3, [r1], -r0
   11ca0:	muleq	r2, r0, r0
   11ca4:	push	{r4, r5, r6, lr}
   11ca8:	subs	r4, r0, #0
   11cac:	mov	r5, r1
   11cb0:	bne	11ccc <error@@Base+0xec>
   11cb4:	ldrb	r3, [r1]
   11cb8:	cmp	r3, #114	; 0x72
   11cbc:	ldreq	r3, [pc, #44]	; 11cf0 <error@@Base+0x110>
   11cc0:	ldrne	r3, [pc, #44]	; 11cf4 <error@@Base+0x114>
   11cc4:	ldr	r0, [r3]
   11cc8:	pop	{r4, r5, r6, pc}
   11ccc:	bl	108ac <fopen@plt>
   11cd0:	cmp	r0, #0
   11cd4:	popne	{r4, r5, r6, pc}
   11cd8:	mov	r1, r4
   11cdc:	ldrb	r3, [r5]
   11ce0:	cmp	r3, #119	; 0x77
   11ce4:	ldreq	r0, [pc, #12]	; 11cf8 <error@@Base+0x118>
   11ce8:	ldrne	r0, [pc, #12]	; 11cfc <error@@Base+0x11c>
   11cec:	bl	11c64 <error@@Base+0x84>
   11cf0:	andeq	r4, r2, r0, lsr #1
   11cf4:	andeq	r4, r2, r4, lsr #1
   11cf8:	ldrdeq	r3, [r1], -sp
   11cfc:	strdeq	r3, [r1], -r3	; <UNPREDICTABLE>
   11d00:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11d04:	mov	r8, r0
   11d08:	mov	r7, r1
   11d0c:	mov	r9, r3
   11d10:	ldr	r0, [r1]
   11d14:	str	r2, [sp]
   11d18:	bl	11b44 <getc@plt+0x1154>
   11d1c:	ldr	r3, [pc, #396]	; 11eb0 <error@@Base+0x2d0>
   11d20:	ldr	r1, [pc, #396]	; 11eb4 <error@@Base+0x2d4>
   11d24:	str	r0, [r3]
   11d28:	mov	r0, #2
   11d2c:	bl	10948 <__sysv_signal@plt>
   11d30:	ldr	r1, [pc, #380]	; 11eb4 <error@@Base+0x2d4>
   11d34:	mov	r0, #15
   11d38:	bl	10948 <__sysv_signal@plt>
   11d3c:	ldr	r4, [r8]
   11d40:	cmp	r4, #1
   11d44:	movne	r6, #0
   11d48:	movne	r4, #1
   11d4c:	bne	11e70 <error@@Base+0x290>
   11d50:	ldr	r3, [pc, #352]	; 11eb8 <error@@Base+0x2d8>
   11d54:	ldrb	r6, [r3, #4]
   11d58:	cmp	r6, #0
   11d5c:	beq	11e70 <error@@Base+0x290>
   11d60:	ldr	r0, [sp]
   11d64:	bl	11b94 <getc@plt+0x11a4>
   11d68:	ldr	r5, [r7, r4, lsl #2]
   11d6c:	lsl	sl, r4, #2
   11d70:	ldrb	r3, [r5]
   11d74:	cmp	r3, #45	; 0x2d
   11d78:	bne	11ea0 <error@@Base+0x2c0>
   11d7c:	ldrb	r3, [r5, #1]
   11d80:	cmp	r3, #0
   11d84:	str	r3, [sp, #4]
   11d88:	beq	11ea0 <error@@Base+0x2c0>
   11d8c:	mov	r0, r5
   11d90:	bl	10984 <strlen@plt>
   11d94:	mov	r2, r0
   11d98:	mov	r1, r5
   11d9c:	ldr	r0, [pc, #280]	; 11ebc <error@@Base+0x2dc>
   11da0:	bl	109d8 <strncmp@plt>
   11da4:	cmp	r0, #0
   11da8:	beq	11d60 <error@@Base+0x180>
   11dac:	add	r0, r4, #1
   11db0:	ldr	r3, [sp, #4]
   11db4:	cmp	r0, fp
   11db8:	addlt	sl, r7, sl
   11dbc:	movge	r1, #0
   11dc0:	ldrlt	r1, [sl, #4]
   11dc4:	cmp	r9, #0
   11dc8:	beq	11e88 <error@@Base+0x2a8>
   11dcc:	mov	ip, #0
   11dd0:	sxth	r2, ip
   11dd4:	add	r2, r2, r2, lsl #1
   11dd8:	add	lr, r9, r2, lsl #2
   11ddc:	ldrb	r2, [r9, r2, lsl #2]
   11de0:	cmp	r2, #0
   11de4:	beq	11e88 <error@@Base+0x2a8>
   11de8:	cmp	r3, r2
   11dec:	add	ip, ip, #1
   11df0:	bne	11dd0 <error@@Base+0x1f0>
   11df4:	ldr	r3, [lr, #4]
   11df8:	cmp	r3, #0
   11dfc:	bne	11e30 <error@@Base+0x250>
   11e00:	ldr	r3, [lr, #8]
   11e04:	cmp	r3, #0
   11e08:	beq	11e88 <error@@Base+0x2a8>
   11e0c:	ldrb	r2, [r5, #2]
   11e10:	cmp	r2, #0
   11e14:	bne	11e88 <error@@Base+0x2a8>
   11e18:	ldrb	r2, [r3]
   11e1c:	cmp	r2, #0
   11e20:	bne	11e94 <error@@Base+0x2b4>
   11e24:	mov	r2, #1
   11e28:	strb	r2, [r3]
   11e2c:	b	11e68 <error@@Base+0x288>
   11e30:	ldrb	r2, [r5, #2]
   11e34:	cmp	r1, #0
   11e38:	cmpeq	r2, #0
   11e3c:	beq	11e00 <error@@Base+0x220>
   11e40:	ldr	ip, [r3]
   11e44:	cmp	ip, #0
   11e48:	bne	11e94 <error@@Base+0x2b4>
   11e4c:	cmp	r2, #0
   11e50:	sxth	r0, r0
   11e54:	addne	r1, r5, #2
   11e58:	str	r1, [r3]
   11e5c:	ldrb	r3, [r5, #2]
   11e60:	cmp	r3, #0
   11e64:	moveq	r4, r0
   11e68:	add	r4, r4, #1
   11e6c:	sxth	r4, r4
   11e70:	ldr	fp, [r8]
   11e74:	cmp	r4, fp
   11e78:	blt	11d68 <error@@Base+0x188>
   11e7c:	str	r6, [r8]
   11e80:	add	sp, sp, #12
   11e84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11e88:	ldr	r0, [pc, #48]	; 11ec0 <error@@Base+0x2e0>
   11e8c:	mov	r1, r5
   11e90:	bl	11c64 <error@@Base+0x84>
   11e94:	mov	r1, r5
   11e98:	ldr	r0, [pc, #36]	; 11ec4 <error@@Base+0x2e4>
   11e9c:	b	11e90 <error@@Base+0x2b0>
   11ea0:	add	r3, r6, #1
   11ea4:	str	r5, [r7, r6, lsl #2]
   11ea8:	sxth	r6, r3
   11eac:	b	11e68 <error@@Base+0x288>
   11eb0:	addseq	r6, fp, r8, ror lr
   11eb4:	andeq	r1, r1, r8, lsr ip
   11eb8:	muleq	r2, r0, r0
   11ebc:	andeq	r3, r1, r7, lsl #6
   11ec0:	andeq	r3, r1, sp, lsl #6
   11ec4:	andeq	r3, r1, ip, lsl r3
   11ec8:	push	{r0, r1, r2, lr}
   11ecc:	mov	r3, r0
   11ed0:	ldr	r2, [pc, #28]	; 11ef4 <error@@Base+0x314>
   11ed4:	str	r1, [sp]
   11ed8:	ldr	r0, [pc, #24]	; 11ef8 <error@@Base+0x318>
   11edc:	ldr	r1, [pc, #24]	; 11efc <error@@Base+0x31c>
   11ee0:	ldr	r2, [r2]
   11ee4:	ldr	r0, [r0]
   11ee8:	bl	10990 <fprintf@plt>
   11eec:	add	sp, sp, #12
   11ef0:	pop	{pc}		; (ldr pc, [sp], #4)
   11ef4:	addseq	r6, fp, r8, ror lr
   11ef8:	muleq	r2, r8, r0
   11efc:	ldrdeq	r3, [r1], -r0
   11f00:	push	{r4, r5, r6, lr}
   11f04:	mov	r4, r0
   11f08:	uxtb	r6, r1
   11f0c:	mov	r0, #1
   11f10:	mov	r1, #16
   11f14:	mov	r5, r2
   11f18:	bl	11c1c <error@@Base+0x3c>
   11f1c:	mov	r1, r0
   11f20:	mov	r0, r4
   11f24:	strb	r6, [r1, #8]
   11f28:	str	r5, [r1, #12]
   11f2c:	pop	{r4, r5, r6, lr}
   11f30:	b	124f8 <error@@Base+0x918>
   11f34:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11f38:	mov	r6, r0
   11f3c:	mov	r0, r1
   11f40:	clz	r1, r1
   11f44:	sub	sp, sp, #116	; 0x74
   11f48:	lsr	r1, r1, #5
   11f4c:	ldrb	r3, [r2]
   11f50:	cmp	r3, #0
   11f54:	moveq	r1, #0
   11f58:	cmp	r1, #0
   11f5c:	beq	11f6c <error@@Base+0x38c>
   11f60:	ldr	r1, [pc, #732]	; 12244 <error@@Base+0x664>
   11f64:	ldr	r0, [pc, #732]	; 12248 <error@@Base+0x668>
   11f68:	bl	11c64 <error@@Base+0x84>
   11f6c:	mov	r4, r2
   11f70:	ldr	r1, [pc, #724]	; 1224c <error@@Base+0x66c>
   11f74:	ldr	r7, [r6, #4]
   11f78:	bl	11ca4 <error@@Base+0xc4>
   11f7c:	ldrb	r3, [r4]
   11f80:	mov	r5, r0
   11f84:	cmp	r3, #0
   11f88:	beq	12014 <error@@Base+0x434>
   11f8c:	mov	r2, r0
   11f90:	mov	r1, #99	; 0x63
   11f94:	add	r0, sp, #12
   11f98:	bl	108d0 <fgets@plt>
   11f9c:	cmp	r0, #0
   11fa0:	beq	12004 <error@@Base+0x424>
   11fa4:	mov	r2, #51	; 0x33
   11fa8:	ldr	r1, [pc, #672]	; 12250 <error@@Base+0x670>
   11fac:	add	r0, sp, #12
   11fb0:	bl	109d8 <strncmp@plt>
   11fb4:	subs	r8, r0, #0
   11fb8:	bne	12004 <error@@Base+0x424>
   11fbc:	ldr	r9, [pc, #656]	; 12254 <error@@Base+0x674>
   11fc0:	mov	r2, r5
   11fc4:	mov	r1, #99	; 0x63
   11fc8:	add	r0, sp, #12
   11fcc:	bl	108d0 <fgets@plt>
   11fd0:	cmp	r0, #0
   11fd4:	beq	11ffc <error@@Base+0x41c>
   11fd8:	mov	r1, r9
   11fdc:	add	r0, sp, #12
   11fe0:	bl	108a0 <strcmp@plt>
   11fe4:	cmp	r0, #0
   11fe8:	bne	11fc0 <error@@Base+0x3e0>
   11fec:	add	r8, r8, #1
   11ff0:	sxth	r8, r8
   11ff4:	cmp	r8, #2
   11ff8:	bne	11fc0 <error@@Base+0x3e0>
   11ffc:	mov	r3, #1
   12000:	b	12010 <error@@Base+0x430>
   12004:	mov	r0, r5
   12008:	bl	108f4 <rewind@plt>
   1200c:	mov	r3, #0
   12010:	strb	r3, [r4, #11]
   12014:	ldr	r8, [r4, #4]
   12018:	mov	r0, r5
   1201c:	mov	fp, #0
   12020:	ldrb	r3, [r4, #1]
   12024:	cmp	r8, #0
   12028:	moveq	r8, #94	; 0x5e
   1202c:	str	r3, [sp, #4]
   12030:	bl	109f0 <getc@plt>
   12034:	cmn	r0, #1
   12038:	bne	12064 <error@@Base+0x484>
   1203c:	mov	r0, r5
   12040:	bl	11ac8 <getc@plt+0x10d8>
   12044:	ldrb	r3, [r4, #9]
   12048:	cmp	r3, #0
   1204c:	bne	12104 <error@@Base+0x524>
   12050:	ldrb	r3, [r4, #10]
   12054:	cmp	r3, #0
   12058:	bne	1221c <error@@Base+0x63c>
   1205c:	add	sp, sp, #116	; 0x74
   12060:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12064:	ldr	r3, [pc, #492]	; 12258 <error@@Base+0x678>
   12068:	ldrsb	r9, [r3, r0]
   1206c:	cmp	r9, #0
   12070:	bgt	1207c <error@@Base+0x49c>
   12074:	ldr	r0, [pc, #480]	; 1225c <error@@Base+0x67c>
   12078:	bl	11be0 <error@@Base>
   1207c:	cmp	r9, #1
   12080:	strb	r0, [sp, #8]
   12084:	beq	120ac <error@@Base+0x4cc>
   12088:	sub	sl, r9, #1
   1208c:	mov	r3, r5
   12090:	mov	r2, sl
   12094:	mov	r1, #1
   12098:	add	r0, sp, #9
   1209c:	bl	10924 <fread@plt>
   120a0:	cmp	sl, r0
   120a4:	ldrne	r0, [pc, #436]	; 12260 <error@@Base+0x680>
   120a8:	bne	12078 <error@@Base+0x498>
   120ac:	add	r2, sp, #12
   120b0:	mov	r1, #4
   120b4:	add	r0, sp, #8
   120b8:	bl	10930 <utf8proc_iterate@plt>
   120bc:	cmp	r9, r0
   120c0:	beq	120cc <error@@Base+0x4ec>
   120c4:	bl	109c0 <utf8proc_errmsg@plt>
   120c8:	b	12078 <error@@Base+0x498>
   120cc:	ldr	r3, [sp, #4]
   120d0:	ldr	r2, [sp, #12]
   120d4:	cmp	r3, #0
   120d8:	beq	120e8 <error@@Base+0x508>
   120dc:	cmp	r8, r2
   120e0:	moveq	fp, #1
   120e4:	beq	120f8 <error@@Base+0x518>
   120e8:	mov	r1, fp
   120ec:	mov	r0, r6
   120f0:	mov	fp, #0
   120f4:	bl	11f00 <error@@Base+0x320>
   120f8:	mov	r0, r5
   120fc:	bl	109f0 <getc@plt>
   12100:	b	12034 <error@@Base+0x454>
   12104:	cmp	r7, #0
   12108:	mov	sl, #32
   1210c:	ldrne	r8, [r7, #4]
   12110:	ldreq	r8, [r6]
   12114:	mov	r5, r8
   12118:	cmp	r5, #0
   1211c:	bne	12168 <error@@Base+0x588>
   12120:	cmp	r8, #0
   12124:	beq	12050 <error@@Base+0x470>
   12128:	eor	r3, r5, #1
   1212c:	ldr	r9, [r8, #4]
   12130:	ldr	r2, [r8, #12]
   12134:	cmp	r2, #32
   12138:	bne	121bc <error@@Base+0x5dc>
   1213c:	cmp	r9, #0
   12140:	moveq	r3, #1
   12144:	cmp	r3, #0
   12148:	bne	121ec <error@@Base+0x60c>
   1214c:	ldr	r3, [r9, #12]
   12150:	cmp	r3, #10
   12154:	cmpne	r3, #32
   12158:	beq	121ec <error@@Base+0x60c>
   1215c:	subs	r5, r2, #10
   12160:	movne	r5, #1
   12164:	b	121e4 <error@@Base+0x604>
   12168:	ldr	r9, [r5, #12]
   1216c:	mov	r0, r9
   12170:	bl	108c4 <utf8proc_get_property@plt>
   12174:	cmp	r9, #13
   12178:	bhi	121ac <error@@Base+0x5cc>
   1217c:	cmp	r9, #11
   12180:	bcs	121b4 <error@@Base+0x5d4>
   12184:	cmp	r9, #9
   12188:	beq	121b4 <error@@Base+0x5d4>
   1218c:	cmp	r9, #10
   12190:	beq	121a4 <error@@Base+0x5c4>
   12194:	ldrsh	r3, [r0]
   12198:	sub	r3, r3, #23
   1219c:	cmp	r3, #2
   121a0:	bls	121b4 <error@@Base+0x5d4>
   121a4:	ldr	r5, [r5, #4]
   121a8:	b	12118 <error@@Base+0x538>
   121ac:	cmp	r9, #160	; 0xa0
   121b0:	bne	12194 <error@@Base+0x5b4>
   121b4:	str	sl, [r5, #12]
   121b8:	b	121a4 <error@@Base+0x5c4>
   121bc:	cmp	r2, #10
   121c0:	movne	r3, #0
   121c4:	andeq	r3, r3, #1
   121c8:	cmp	r3, #0
   121cc:	beq	1215c <error@@Base+0x57c>
   121d0:	mov	r0, r6
   121d4:	mov	r1, r8
   121d8:	bl	12520 <error@@Base+0x940>
   121dc:	mov	r0, r8
   121e0:	bl	108b8 <free@plt>
   121e4:	mov	r8, r9
   121e8:	b	12120 <error@@Base+0x540>
   121ec:	cmp	r9, #0
   121f0:	movne	r3, r5
   121f4:	moveq	r3, #0
   121f8:	cmp	r3, #0
   121fc:	beq	121d0 <error@@Base+0x5f0>
   12200:	ldr	r3, [r9, #12]
   12204:	cmp	r3, #32
   12208:	ldrbeq	r3, [r9, #8]
   1220c:	ldrbeq	r2, [r8, #8]
   12210:	orreq	r3, r3, r2
   12214:	strbeq	r3, [r9, #8]
   12218:	b	121d0 <error@@Base+0x5f0>
   1221c:	cmp	r7, #0
   12220:	ldrne	r4, [r7, #4]
   12224:	ldreq	r4, [r6]
   12228:	cmp	r4, #0
   1222c:	beq	1205c <error@@Base+0x47c>
   12230:	ldr	r0, [r4, #12]
   12234:	bl	1090c <utf8proc_tolower@plt>
   12238:	str	r0, [r4, #12]
   1223c:	ldr	r4, [r4, #4]
   12240:	b	12228 <error@@Base+0x648>
   12244:	andeq	r3, r1, sp, lsr #6
   12248:	andeq	r3, r1, r7, lsr r3
   1224c:	andeq	r3, r1, sp, asr #7
   12250:	andeq	r3, r1, r7, asr #6
   12254:	andeq	r3, r1, pc, ror r3
   12258:	andeq	r3, r2, r8, lsl #28
   1225c:			; <UNDEFINED> instruction: 0x000133b7
   12260:	andeq	r3, r1, pc, asr #7
   12264:	push	{r4, lr}
   12268:	bl	108dc <utf8proc_encode_char@plt>
   1226c:	cmp	r0, #0
   12270:	bgt	1227c <error@@Base+0x69c>
   12274:	ldr	r0, [pc, #8]	; 12284 <error@@Base+0x6a4>
   12278:	bl	11be0 <error@@Base>
   1227c:	sxtb	r0, r0
   12280:	pop	{r4, pc}
   12284:	andeq	r3, r1, r7, ror #7
   12288:	push	{r4, r5, r6, r7, r8, lr}
   1228c:	uxtb	r4, r0
   12290:	mov	r7, r1
   12294:	cmp	r4, #0
   12298:	mov	r6, r2
   1229c:	uxtb	r8, r3
   122a0:	beq	122b4 <error@@Base+0x6d4>
   122a4:	mov	r1, r2
   122a8:	mov	r0, #94	; 0x5e
   122ac:	bl	12264 <error@@Base+0x684>
   122b0:	sxth	r4, r0
   122b4:	cmp	r7, #10
   122b8:	add	r5, r6, r4
   122bc:	bne	122dc <error@@Base+0x6fc>
   122c0:	ldr	r2, [pc, #164]	; 1236c <error@@Base+0x78c>
   122c4:	cmp	r8, #0
   122c8:	mov	r0, r5
   122cc:	pop	{r4, r5, r6, r7, r8, lr}
   122d0:	ldr	r1, [pc, #152]	; 12370 <error@@Base+0x790>
   122d4:	moveq	r1, r2
   122d8:	b	109b4 <sprintf@plt>
   122dc:	mov	r0, r7
   122e0:	bl	108c4 <utf8proc_get_property@plt>
   122e4:	cmp	r7, #32
   122e8:	beq	12308 <error@@Base+0x728>
   122ec:	ldrh	r3, [r0]
   122f0:	cmp	r3, #29
   122f4:	bhi	12350 <error@@Base+0x770>
   122f8:	ldr	r2, [pc, #116]	; 12374 <error@@Base+0x794>
   122fc:	mov	r1, #1
   12300:	ands	r3, r2, r1, lsl r3
   12304:	beq	12350 <error@@Base+0x770>
   12308:	mov	r0, r7
   1230c:	bl	10978 <utf8proc_category@plt>
   12310:	sub	r0, r0, #6
   12314:	cmp	r0, #2
   12318:	bhi	12330 <error@@Base+0x750>
   1231c:	mov	r1, r5
   12320:	movw	r0, #9676	; 0x25cc
   12324:	bl	12264 <error@@Base+0x684>
   12328:	add	r4, r0, r4
   1232c:	sxth	r4, r4
   12330:	add	r1, r6, r4
   12334:	mov	r0, r7
   12338:	bl	12264 <error@@Base+0x684>
   1233c:	add	r0, r0, r4
   12340:	mov	r3, #0
   12344:	sxth	r0, r0
   12348:	strb	r3, [r6, r0]
   1234c:	pop	{r4, r5, r6, r7, r8, pc}
   12350:	cmp	r7, #255	; 0xff
   12354:	mov	r2, r7
   12358:	mov	r0, r5
   1235c:	ldrls	r1, [pc, #20]	; 12378 <error@@Base+0x798>
   12360:	pop	{r4, r5, r6, r7, r8, lr}
   12364:	ldrhi	r1, [pc, #16]	; 1237c <error@@Base+0x79c>
   12368:	b	109b4 <sprintf@plt>
   1236c:	andeq	r2, r1, r3, asr r7
   12370:	strdeq	r3, [r1], -lr
   12374:	ldrshtcs	pc, [pc], #-254	; <UNPREDICTABLE>
   12378:	andeq	r3, r1, r3, lsl #8
   1237c:	andeq	r3, r1, sl, lsl #8
   12380:	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   12384:	mov	r5, r2
   12388:	mov	r6, r0
   1238c:	mov	r0, r1
   12390:	ldr	r1, [pc, #124]	; 12414 <error@@Base+0x834>
   12394:	bl	11ca4 <error@@Base+0xc4>
   12398:	cmp	r5, #0
   1239c:	mov	r4, r0
   123a0:	beq	123d0 <error@@Base+0x7f0>
   123a4:	mov	r1, r0
   123a8:	ldr	r0, [pc, #104]	; 12418 <error@@Base+0x838>
   123ac:	bl	109cc <fputs@plt>
   123b0:	mov	r1, r4
   123b4:	ldr	r0, [pc, #96]	; 1241c <error@@Base+0x83c>
   123b8:	bl	109cc <fputs@plt>
   123bc:	mov	r0, r4
   123c0:	blx	r5
   123c4:	mov	r1, r4
   123c8:	ldr	r0, [pc, #76]	; 1241c <error@@Base+0x83c>
   123cc:	bl	109cc <fputs@plt>
   123d0:	ldr	r5, [r6]
   123d4:	cmp	r5, #0
   123d8:	bne	123ec <error@@Base+0x80c>
   123dc:	mov	r0, r4
   123e0:	bl	11ac8 <getc@plt+0x10d8>
   123e4:	add	sp, sp, #16
   123e8:	pop	{r4, r5, r6, pc}
   123ec:	ldrb	r0, [r5, #8]
   123f0:	mov	r3, #0
   123f4:	add	r2, sp, #4
   123f8:	ldr	r1, [r5, #12]
   123fc:	bl	12288 <error@@Base+0x6a8>
   12400:	mov	r1, r4
   12404:	add	r0, sp, #4
   12408:	bl	109cc <fputs@plt>
   1240c:	ldr	r5, [r5, #4]
   12410:	b	123d4 <error@@Base+0x7f4>
   12414:	andeq	r2, r1, ip, lsl #29
   12418:	andeq	r3, r1, r7, asr #6
   1241c:	andeq	r3, r1, pc, ror r3
   12420:	push	{r0, r1, r4, r5, r6, lr}
   12424:	mov	r3, #0
   12428:	mov	r5, r0
   1242c:	mov	r4, r1
   12430:	str	r3, [sp, #4]
   12434:	ldrb	r3, [r4]
   12438:	cmp	r3, #0
   1243c:	bne	1244c <error@@Base+0x86c>
   12440:	mov	r0, #1
   12444:	add	sp, sp, #8
   12448:	pop	{r4, r5, r6, pc}
   1244c:	add	r2, sp, #4
   12450:	mvn	r1, #0
   12454:	mov	r0, r4
   12458:	bl	10930 <utf8proc_iterate@plt>
   1245c:	subs	r6, r0, #0
   12460:	ble	1247c <error@@Base+0x89c>
   12464:	mov	r1, #0
   12468:	mov	r0, r5
   1246c:	ldr	r2, [sp, #4]
   12470:	add	r4, r4, r6
   12474:	bl	11f00 <error@@Base+0x320>
   12478:	b	12434 <error@@Base+0x854>
   1247c:	mov	r0, #0
   12480:	b	12444 <error@@Base+0x864>
   12484:	cmp	r1, #0
   12488:	push	{r4, lr}
   1248c:	mov	r4, r0
   12490:	stm	r2, {r1, r3}
   12494:	strne	r2, [r1, #4]
   12498:	streq	r2, [r0]
   1249c:	cmp	r3, #0
   124a0:	streq	r2, [r0, #4]
   124a4:	ldr	r0, [r0, #8]
   124a8:	strne	r2, [r3]
   124ac:	cmp	r0, #0
   124b0:	beq	124c0 <error@@Base+0x8e0>
   124b4:	bl	108b8 <free@plt>
   124b8:	mov	r3, #0
   124bc:	str	r3, [r4, #8]
   124c0:	ldr	r3, [r4, #12]
   124c4:	add	r3, r3, #1
   124c8:	str	r3, [r4, #12]
   124cc:	pop	{r4, pc}
   124d0:	mov	r3, #0
   124d4:	str	r3, [r0]
   124d8:	str	r3, [r0, #4]
   124dc:	str	r3, [r0, #8]
   124e0:	str	r3, [r0, #12]
   124e4:	bx	lr
   124e8:	mov	r2, r1
   124ec:	mov	r1, #0
   124f0:	ldr	r3, [r0]
   124f4:	b	12484 <error@@Base+0x8a4>
   124f8:	mov	r2, r1
   124fc:	mov	r3, #0
   12500:	ldr	r1, [r0, #4]
   12504:	b	12484 <error@@Base+0x8a4>
   12508:	mov	r3, r2
   1250c:	mov	r2, r1
   12510:	ldr	r1, [r3]
   12514:	b	12484 <error@@Base+0x8a4>
   12518:	ldr	r3, [r1, #4]
   1251c:	b	12484 <error@@Base+0x8a4>
   12520:	ldr	r3, [r1]
   12524:	push	{r4, r5, r6, lr}
   12528:	mov	r4, r0
   1252c:	mov	r5, #0
   12530:	ldr	r2, [r1, #4]
   12534:	cmp	r3, #0
   12538:	strne	r2, [r3, #4]
   1253c:	streq	r2, [r0]
   12540:	ldr	r2, [r1, #4]
   12544:	cmp	r2, #0
   12548:	streq	r3, [r0, #4]
   1254c:	ldr	r0, [r0, #8]
   12550:	strne	r3, [r2]
   12554:	str	r5, [r1]
   12558:	str	r5, [r1, #4]
   1255c:	cmp	r0, r5
   12560:	beq	1256c <error@@Base+0x98c>
   12564:	bl	108b8 <free@plt>
   12568:	str	r5, [r4, #8]
   1256c:	ldr	r3, [r4, #12]
   12570:	sub	r3, r3, #1
   12574:	str	r3, [r4, #12]
   12578:	pop	{r4, r5, r6, pc}
   1257c:	ldr	r3, [r0, #8]
   12580:	cmp	r3, #0
   12584:	bxne	lr
   12588:	ldr	r3, [r0, #12]
   1258c:	cmp	r3, #0
   12590:	bxeq	lr
   12594:	push	{r4, lr}
   12598:	mov	r1, #4
   1259c:	mov	r4, r0
   125a0:	mov	r0, r3
   125a4:	bl	11c1c <error@@Base+0x3c>
   125a8:	ldr	r3, [r4]
   125ac:	str	r0, [r4, #8]
   125b0:	sub	r0, r0, #4
   125b4:	cmp	r3, #0
   125b8:	popeq	{r4, pc}
   125bc:	str	r3, [r0, #4]!
   125c0:	ldr	r3, [r3, #4]
   125c4:	b	125b4 <error@@Base+0x9d4>
   125c8:	push	{r4, r5, r6, lr}
   125cc:	mov	r5, r0
   125d0:	mov	r6, r1
   125d4:	ldr	r4, [r5]
   125d8:	cmp	r4, #0
   125dc:	popeq	{r4, r5, r6, pc}
   125e0:	mov	r0, r5
   125e4:	mov	r1, r4
   125e8:	bl	12520 <error@@Base+0x940>
   125ec:	mov	r0, r4
   125f0:	blx	r6
   125f4:	b	125d4 <error@@Base+0x9f4>
   125f8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   125fc:	mov	r7, r0
   12600:	ldr	r6, [pc, #72]	; 12650 <error@@Base+0xa70>
   12604:	ldr	r5, [pc, #72]	; 12654 <error@@Base+0xa74>
   12608:	add	r6, pc, r6
   1260c:	add	r5, pc, r5
   12610:	sub	r6, r6, r5
   12614:	mov	r8, r1
   12618:	mov	r9, r2
   1261c:	bl	10874 <calloc@plt-0x20>
   12620:	asrs	r6, r6, #2
   12624:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12628:	mov	r4, #0
   1262c:	add	r4, r4, #1
   12630:	ldr	r3, [r5], #4
   12634:	mov	r2, r9
   12638:	mov	r1, r8
   1263c:	mov	r0, r7
   12640:	blx	r3
   12644:	cmp	r6, r4
   12648:	bne	1262c <error@@Base+0xa4c>
   1264c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12650:	strdeq	r1, [r1], -r4
   12654:	andeq	r1, r1, ip, ror #15
   12658:	bx	lr
   1265c:	mov	r2, r1
   12660:	mov	r1, r0
   12664:	mov	r0, #3
   12668:	b	10918 <__xstat@plt>

Disassembly of section .fini:

0001266c <.fini>:
   1266c:	push	{r3, lr}
   12670:	pop	{r3, pc}
