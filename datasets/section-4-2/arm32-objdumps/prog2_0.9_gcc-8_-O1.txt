
../repos/prog2/0.9:     file format elf32-littlearm


Disassembly of section .init:

0001063c <.init>:
   1063c:	push	{r3, lr}
   10640:	bl	106f8 <_start@@Base+0x3c>
   10644:	pop	{r3, pc}

Disassembly of section .plt:

00010648 <strcmp@plt-0x14>:
   10648:	push	{lr}		; (str lr, [sp, #-4]!)
   1064c:	ldr	lr, [pc, #4]	; 10658 <strcmp@plt-0x4>
   10650:	add	lr, pc, lr
   10654:	ldr	pc, [lr, #8]!
   10658:	andeq	r0, r1, r8, lsr #19

0001065c <strcmp@plt>:
   1065c:	add	ip, pc, #0, 12
   10660:	add	ip, ip, #16, 20	; 0x10000
   10664:	ldr	pc, [ip, #2472]!	; 0x9a8

00010668 <printf@plt>:
   10668:	add	ip, pc, #0, 12
   1066c:	add	ip, ip, #16, 20	; 0x10000
   10670:	ldr	pc, [ip, #2464]!	; 0x9a0

00010674 <strcat@plt>:
   10674:	add	ip, pc, #0, 12
   10678:	add	ip, ip, #16, 20	; 0x10000
   1067c:	ldr	pc, [ip, #2456]!	; 0x998

00010680 <__libc_start_main@plt>:
   10680:	add	ip, pc, #0, 12
   10684:	add	ip, ip, #16, 20	; 0x10000
   10688:	ldr	pc, [ip, #2448]!	; 0x990

0001068c <__gmon_start__@plt>:
   1068c:	add	ip, pc, #0, 12
   10690:	add	ip, ip, #16, 20	; 0x10000
   10694:	ldr	pc, [ip, #2440]!	; 0x988

00010698 <strlen@plt>:
   10698:	add	ip, pc, #0, 12
   1069c:	add	ip, ip, #16, 20	; 0x10000
   106a0:	ldr	pc, [ip, #2432]!	; 0x980

000106a4 <__isoc99_scanf@plt>:
   106a4:	add	ip, pc, #0, 12
   106a8:	add	ip, ip, #16, 20	; 0x10000
   106ac:	ldr	pc, [ip, #2424]!	; 0x978

000106b0 <abort@plt>:
   106b0:	add	ip, pc, #0, 12
   106b4:	add	ip, ip, #16, 20	; 0x10000
   106b8:	ldr	pc, [ip, #2416]!	; 0x970

Disassembly of section .text:

000106bc <_start@@Base>:
   106bc:	mov	fp, #0
   106c0:	mov	lr, #0
   106c4:	pop	{r1}		; (ldr r1, [sp], #4)
   106c8:	mov	r2, sp
   106cc:	push	{r2}		; (str r2, [sp, #-4]!)
   106d0:	push	{r0}		; (str r0, [sp, #-4]!)
   106d4:	ldr	ip, [pc, #16]	; 106ec <_start@@Base+0x30>
   106d8:	push	{ip}		; (str ip, [sp, #-4]!)
   106dc:	ldr	r0, [pc, #12]	; 106f0 <_start@@Base+0x34>
   106e0:	ldr	r3, [pc, #12]	; 106f4 <_start@@Base+0x38>
   106e4:	bl	10680 <__libc_start_main@plt>
   106e8:	bl	106b0 <abort@plt>
   106ec:	andeq	r0, r1, ip, lsl #21
   106f0:	andeq	r0, r1, ip, lsl #19
   106f4:	andeq	r0, r1, ip, lsr #20
   106f8:	ldr	r3, [pc, #20]	; 10714 <_start@@Base+0x58>
   106fc:	ldr	r2, [pc, #20]	; 10718 <_start@@Base+0x5c>
   10700:	add	r3, pc, r3
   10704:	ldr	r2, [r3, r2]
   10708:	cmp	r2, #0
   1070c:	bxeq	lr
   10710:	b	1068c <__gmon_start__@plt>
   10714:	strdeq	r0, [r1], -r8
   10718:	andeq	r0, r0, ip, lsr #32
   1071c:	ldr	r0, [pc, #24]	; 1073c <_start@@Base+0x80>
   10720:	ldr	r3, [pc, #24]	; 10740 <_start@@Base+0x84>
   10724:	cmp	r3, r0
   10728:	bxeq	lr
   1072c:	ldr	r3, [pc, #16]	; 10744 <_start@@Base+0x88>
   10730:	cmp	r3, #0
   10734:	bxeq	lr
   10738:	bx	r3
   1073c:	andeq	r1, r2, r8, lsr r0
   10740:	andeq	r1, r2, r8, lsr r0
   10744:	andeq	r0, r0, r0
   10748:	ldr	r0, [pc, #36]	; 10774 <_start@@Base+0xb8>
   1074c:	ldr	r1, [pc, #36]	; 10778 <_start@@Base+0xbc>
   10750:	sub	r1, r1, r0
   10754:	asr	r1, r1, #2
   10758:	add	r1, r1, r1, lsr #31
   1075c:	asrs	r1, r1, #1
   10760:	bxeq	lr
   10764:	ldr	r3, [pc, #16]	; 1077c <_start@@Base+0xc0>
   10768:	cmp	r3, #0
   1076c:	bxeq	lr
   10770:	bx	r3
   10774:	andeq	r1, r2, r8, lsr r0
   10778:	andeq	r1, r2, r8, lsr r0
   1077c:	andeq	r0, r0, r0
   10780:	push	{r4, lr}
   10784:	ldr	r4, [pc, #24]	; 107a4 <_start@@Base+0xe8>
   10788:	ldrb	r3, [r4]
   1078c:	cmp	r3, #0
   10790:	popne	{r4, pc}
   10794:	bl	1071c <_start@@Base+0x60>
   10798:	mov	r3, #1
   1079c:	strb	r3, [r4]
   107a0:	pop	{r4, pc}
   107a4:	andeq	r1, r2, r8, lsr r0
   107a8:	b	10748 <_start@@Base+0x8c>

000107ac <ler_albuns@@Base>:
   107ac:	strd	r4, [sp, #-24]!	; 0xffffffe8
   107b0:	strd	r6, [sp, #8]
   107b4:	str	r8, [sp, #16]
   107b8:	str	lr, [sp, #20]
   107bc:	sub	sp, sp, #24
   107c0:	mov	r6, #0
   107c4:	str	r6, [sp, #8]
   107c8:	str	r6, [sp, #12]
   107cc:	str	r6, [sp, #16]
   107d0:	str	r6, [sp, #19]
   107d4:	mov	r4, r0
   107d8:	movw	r7, #2720	; 0xaa0
   107dc:	movt	r7, #1
   107e0:	movw	r8, #2716	; 0xa9c
   107e4:	movt	r8, #1
   107e8:	mov	r5, r4
   107ec:	add	r3, r4, #204	; 0xcc
   107f0:	str	r3, [sp, #4]
   107f4:	add	r3, r4, #200	; 0xc8
   107f8:	str	r3, [sp]
   107fc:	add	r3, r4, #100	; 0x64
   10800:	add	r2, sp, #8
   10804:	mov	r1, r4
   10808:	mov	r0, r7
   1080c:	bl	106a4 <__isoc99_scanf@plt>
   10810:	add	r4, r4, #208	; 0xd0
   10814:	cmp	r6, #99	; 0x63
   10818:	cmple	r0, #5
   1081c:	bne	10844 <ler_albuns@@Base+0x98>
   10820:	mov	r0, r5
   10824:	bl	10698 <strlen@plt>
   10828:	ldrh	r3, [r8]
   1082c:	strh	r3, [r5, r0]
   10830:	add	r1, sp, #8
   10834:	mov	r0, r5
   10838:	bl	10674 <strcat@plt>
   1083c:	add	r6, r6, #1
   10840:	b	107e8 <ler_albuns@@Base+0x3c>
   10844:	mov	r0, r6
   10848:	add	sp, sp, #24
   1084c:	ldrd	r4, [sp]
   10850:	ldrd	r6, [sp, #8]
   10854:	ldr	r8, [sp, #16]
   10858:	add	sp, sp, #20
   1085c:	pop	{pc}		; (ldr pc, [sp], #4)

00010860 <lista_albuns@@Base>:
   10860:	cmp	r1, #0
   10864:	bxle	lr
   10868:	strd	r4, [sp, #-16]!
   1086c:	str	r6, [sp, #8]
   10870:	str	lr, [sp, #12]
   10874:	sub	sp, sp, #8
   10878:	mov	r4, r0
   1087c:	mov	r5, #208	; 0xd0
   10880:	mla	r5, r5, r1, r0
   10884:	movw	r6, #2736	; 0xab0
   10888:	movt	r6, #1
   1088c:	ldr	r3, [r4, #200]	; 0xc8
   10890:	ldr	r2, [r4, #204]	; 0xcc
   10894:	str	r2, [sp]
   10898:	add	r2, r4, #100	; 0x64
   1089c:	mov	r1, r4
   108a0:	mov	r0, r6
   108a4:	bl	10668 <printf@plt>
   108a8:	add	r4, r4, #208	; 0xd0
   108ac:	cmp	r4, r5
   108b0:	bne	1088c <lista_albuns@@Base+0x2c>
   108b4:	add	sp, sp, #8
   108b8:	ldrd	r4, [sp]
   108bc:	ldr	r6, [sp, #8]
   108c0:	add	sp, sp, #12
   108c4:	pop	{pc}		; (ldr pc, [sp], #4)

000108c8 <albuns_artista@@Base>:
   108c8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   108cc:	strd	r6, [sp, #8]
   108d0:	str	r8, [sp, #16]
   108d4:	str	lr, [sp, #20]
   108d8:	mov	r6, r2
   108dc:	subs	r8, r3, #0
   108e0:	beq	10904 <albuns_artista@@Base+0x3c>
   108e4:	cmp	r1, #0
   108e8:	movle	r7, #0
   108ec:	ble	1093c <albuns_artista@@Base+0x74>
   108f0:	mov	r4, r0
   108f4:	mov	r5, #208	; 0xd0
   108f8:	mla	r5, r5, r1, r0
   108fc:	mov	r7, #0
   10900:	b	10960 <albuns_artista@@Base+0x98>
   10904:	cmp	r1, #0
   10908:	ble	10984 <albuns_artista@@Base+0xbc>
   1090c:	mov	r4, r0
   10910:	mov	r5, #208	; 0xd0
   10914:	mla	r5, r5, r1, r0
   10918:	mov	r7, r8
   1091c:	mov	r1, r4
   10920:	mov	r0, r6
   10924:	bl	1065c <strcmp@plt>
   10928:	cmp	r0, #0
   1092c:	addeq	r7, r7, #1
   10930:	add	r4, r4, #208	; 0xd0
   10934:	cmp	r4, r5
   10938:	bne	1091c <albuns_artista@@Base+0x54>
   1093c:	mov	r0, r7
   10940:	ldrd	r4, [sp]
   10944:	ldrd	r6, [sp, #8]
   10948:	ldr	r8, [sp, #16]
   1094c:	add	sp, sp, #20
   10950:	pop	{pc}		; (ldr pc, [sp], #4)
   10954:	add	r4, r4, #208	; 0xd0
   10958:	cmp	r4, r5
   1095c:	beq	1093c <albuns_artista@@Base+0x74>
   10960:	mov	r1, r4
   10964:	mov	r0, r6
   10968:	bl	1065c <strcmp@plt>
   1096c:	cmp	r0, #0
   10970:	bne	10954 <albuns_artista@@Base+0x8c>
   10974:	ldr	r3, [r4, #204]	; 0xcc
   10978:	cmp	r3, r8
   1097c:	addeq	r7, r7, #1
   10980:	b	10954 <albuns_artista@@Base+0x8c>
   10984:	mov	r7, r8
   10988:	b	1093c <albuns_artista@@Base+0x74>

0001098c <main@@Base>:
   1098c:	strd	r4, [sp, #-12]!
   10990:	str	lr, [sp, #8]
   10994:	sub	sp, sp, #20736	; 0x5100
   10998:	sub	sp, sp, #68	; 0x44
   1099c:	mov	r0, sp
   109a0:	bl	107ac <ler_albuns@@Base>
   109a4:	mov	r4, r0
   109a8:	mov	r1, r0
   109ac:	mov	r0, sp
   109b0:	bl	10860 <lista_albuns@@Base>
   109b4:	mov	r1, r4
   109b8:	movw	r0, #2752	; 0xac0
   109bc:	movt	r0, #1
   109c0:	bl	10668 <printf@plt>
   109c4:	movw	r5, #2784	; 0xae0
   109c8:	movt	r5, #1
   109cc:	mov	r3, #1
   109d0:	mov	r2, r5
   109d4:	mov	r1, r4
   109d8:	mov	r0, sp
   109dc:	bl	108c8 <albuns_artista@@Base>
   109e0:	mov	r1, r0
   109e4:	movw	r0, #2800	; 0xaf0
   109e8:	movt	r0, #1
   109ec:	bl	10668 <printf@plt>
   109f0:	mov	r3, #0
   109f4:	mov	r2, r5
   109f8:	mov	r1, r4
   109fc:	mov	r0, sp
   10a00:	bl	108c8 <albuns_artista@@Base>
   10a04:	mov	r1, r0
   10a08:	movw	r0, #2856	; 0xb28
   10a0c:	movt	r0, #1
   10a10:	bl	10668 <printf@plt>
   10a14:	mov	r0, #0
   10a18:	add	sp, sp, #20736	; 0x5100
   10a1c:	add	sp, sp, #68	; 0x44
   10a20:	ldrd	r4, [sp]
   10a24:	add	sp, sp, #8
   10a28:	pop	{pc}		; (ldr pc, [sp], #4)

00010a2c <__libc_csu_init@@Base>:
   10a2c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10a30:	mov	r7, r0
   10a34:	ldr	r6, [pc, #72]	; 10a84 <__libc_csu_init@@Base+0x58>
   10a38:	ldr	r5, [pc, #72]	; 10a88 <__libc_csu_init@@Base+0x5c>
   10a3c:	add	r6, pc, r6
   10a40:	add	r5, pc, r5
   10a44:	sub	r6, r6, r5
   10a48:	mov	r8, r1
   10a4c:	mov	r9, r2
   10a50:	bl	1063c <strcmp@plt-0x20>
   10a54:	asrs	r6, r6, #2
   10a58:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10a5c:	mov	r4, #0
   10a60:	add	r4, r4, #1
   10a64:	ldr	r3, [r5], #4
   10a68:	mov	r2, r9
   10a6c:	mov	r1, r8
   10a70:	mov	r0, r7
   10a74:	blx	r3
   10a78:	cmp	r6, r4
   10a7c:	bne	10a60 <__libc_csu_init@@Base+0x34>
   10a80:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10a84:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   10a88:	andeq	r0, r1, r8, asr #9

00010a8c <__libc_csu_fini@@Base>:
   10a8c:	bx	lr

Disassembly of section .fini:

00010a90 <.fini>:
   10a90:	push	{r3, lr}
   10a94:	pop	{r3, pc}
