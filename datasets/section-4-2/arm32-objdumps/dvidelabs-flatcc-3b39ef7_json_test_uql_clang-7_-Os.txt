
../repos/dvidelabs-flatcc-3b39ef7/test/json_test/json_test_uql:     file format elf32-littlearm


Disassembly of section .init:

00014e10 <.init>:
   14e10:	push	{r3, lr}
   14e14:	bl	14f8c <_start@@Base+0x3c>
   14e18:	pop	{r3, pc}

Disassembly of section .plt:

00014e1c <raise@plt-0x14>:
   14e1c:	push	{lr}		; (str lr, [sp, #-4]!)
   14e20:	ldr	lr, [pc, #4]	; 14e2c <raise@plt-0x4>
   14e24:	add	lr, pc, lr
   14e28:	ldr	pc, [lr, #8]!
   14e2c:	ldrdeq	r6, [r4], -r4

00014e30 <raise@plt>:
   14e30:	add	ip, pc, #0, 12
   14e34:	add	ip, ip, #286720	; 0x46000
   14e38:	ldr	pc, [ip, #468]!	; 0x1d4

00014e3c <strcmp@plt>:
   14e3c:	add	ip, pc, #0, 12
   14e40:	add	ip, ip, #286720	; 0x46000
   14e44:	ldr	pc, [ip, #460]!	; 0x1cc

00014e48 <memmove@plt>:
   14e48:	add	ip, pc, #0, 12
   14e4c:	add	ip, ip, #286720	; 0x46000
   14e50:	ldr	pc, [ip, #452]!	; 0x1c4

00014e54 <free@plt>:
   14e54:	add	ip, pc, #0, 12
   14e58:	add	ip, ip, #286720	; 0x46000
   14e5c:	ldr	pc, [ip, #444]!	; 0x1bc

00014e60 <memcpy@plt>:
   14e60:	add	ip, pc, #0, 12
   14e64:	add	ip, ip, #286720	; 0x46000
   14e68:	ldr	pc, [ip, #436]!	; 0x1b4

00014e6c <memcmp@plt>:
   14e6c:	add	ip, pc, #0, 12
   14e70:	add	ip, ip, #286720	; 0x46000
   14e74:	ldr	pc, [ip, #428]!	; 0x1ac

00014e78 <__isinff@plt>:
   14e78:	add	ip, pc, #0, 12
   14e7c:	add	ip, ip, #286720	; 0x46000
   14e80:	ldr	pc, [ip, #420]!	; 0x1a4

00014e84 <__isinf@plt>:
   14e84:	add	ip, pc, #0, 12
   14e88:	add	ip, ip, #286720	; 0x46000
   14e8c:	ldr	pc, [ip, #412]!	; 0x19c

00014e90 <realloc@plt>:
   14e90:	add	ip, pc, #0, 12
   14e94:	add	ip, ip, #286720	; 0x46000
   14e98:	ldr	pc, [ip, #404]!	; 0x194

00014e9c <fwrite@plt>:
   14e9c:	add	ip, pc, #0, 12
   14ea0:	add	ip, ip, #286720	; 0x46000
   14ea4:	ldr	pc, [ip, #396]!	; 0x18c

00014ea8 <malloc@plt>:
   14ea8:	add	ip, pc, #0, 12
   14eac:	add	ip, ip, #286720	; 0x46000
   14eb0:	ldr	pc, [ip, #388]!	; 0x184

00014eb4 <__libc_start_main@plt>:
   14eb4:	add	ip, pc, #0, 12
   14eb8:	add	ip, ip, #286720	; 0x46000
   14ebc:	ldr	pc, [ip, #380]!	; 0x17c

00014ec0 <__gmon_start__@plt>:
   14ec0:	add	ip, pc, #0, 12
   14ec4:	add	ip, ip, #286720	; 0x46000
   14ec8:	ldr	pc, [ip, #372]!	; 0x174

00014ecc <strlen@plt>:
   14ecc:	add	ip, pc, #0, 12
   14ed0:	add	ip, ip, #286720	; 0x46000
   14ed4:	ldr	pc, [ip, #364]!	; 0x16c

00014ed8 <fprintf@plt>:
   14ed8:	add	ip, pc, #0, 12
   14edc:	add	ip, ip, #286720	; 0x46000
   14ee0:	ldr	pc, [ip, #356]!	; 0x164

00014ee4 <posix_memalign@plt>:
   14ee4:	add	ip, pc, #0, 12
   14ee8:	add	ip, ip, #286720	; 0x46000
   14eec:	ldr	pc, [ip, #348]!	; 0x15c

00014ef0 <memset@plt>:
   14ef0:	add	ip, pc, #0, 12
   14ef4:	add	ip, ip, #286720	; 0x46000
   14ef8:	ldr	pc, [ip, #340]!	; 0x154

00014efc <strncpy@plt>:
   14efc:	add	ip, pc, #0, 12
   14f00:	add	ip, ip, #286720	; 0x46000
   14f04:	ldr	pc, [ip, #332]!	; 0x14c

00014f08 <strtod@plt>:
   14f08:	add	ip, pc, #0, 12
   14f0c:	add	ip, ip, #286720	; 0x46000
   14f10:	ldr	pc, [ip, #324]!	; 0x144

00014f14 <memchr@plt>:
   14f14:	add	ip, pc, #0, 12
   14f18:	add	ip, ip, #286720	; 0x46000
   14f1c:	ldr	pc, [ip, #316]!	; 0x13c

00014f20 <fputc@plt>:
   14f20:	add	ip, pc, #0, 12
   14f24:	add	ip, ip, #286720	; 0x46000
   14f28:	ldr	pc, [ip, #308]!	; 0x134

00014f2c <sprintf@plt>:
   14f2c:	add	ip, pc, #0, 12
   14f30:	add	ip, ip, #286720	; 0x46000
   14f34:	ldr	pc, [ip, #300]!	; 0x12c

00014f38 <abort@plt>:
   14f38:	add	ip, pc, #0, 12
   14f3c:	add	ip, ip, #286720	; 0x46000
   14f40:	ldr	pc, [ip, #292]!	; 0x124

00014f44 <__assert_fail@plt>:
   14f44:	add	ip, pc, #0, 12
   14f48:	add	ip, ip, #286720	; 0x46000
   14f4c:	ldr	pc, [ip, #284]!	; 0x11c

Disassembly of section .text:

00014f50 <_start@@Base>:
   14f50:	mov	fp, #0
   14f54:	mov	lr, #0
   14f58:	pop	{r1}		; (ldr r1, [sp], #4)
   14f5c:	mov	r2, sp
   14f60:	push	{r2}		; (str r2, [sp, #-4]!)
   14f64:	push	{r0}		; (str r0, [sp, #-4]!)
   14f68:	ldr	ip, [pc, #16]	; 14f80 <_start@@Base+0x30>
   14f6c:	push	{ip}		; (str ip, [sp, #-4]!)
   14f70:	ldr	r0, [pc, #12]	; 14f84 <_start@@Base+0x34>
   14f74:	ldr	r3, [pc, #12]	; 14f88 <_start@@Base+0x38>
   14f78:	bl	14eb4 <__libc_start_main@plt>
   14f7c:	bl	14f38 <abort@plt>
   14f80:	andeq	r3, r4, r0, ror #8
   14f84:	muleq	r1, r0, r0
   14f88:	andeq	r3, r4, r0, lsl #8
   14f8c:	ldr	r3, [pc, #20]	; 14fa8 <_start@@Base+0x58>
   14f90:	ldr	r2, [pc, #20]	; 14fac <_start@@Base+0x5c>
   14f94:	add	r3, pc, r3
   14f98:	ldr	r2, [r3, r2]
   14f9c:	cmp	r2, #0
   14fa0:	bxeq	lr
   14fa4:	b	14ec0 <__gmon_start__@plt>
   14fa8:	andeq	r6, r4, r4, rrx
   14fac:	andeq	r0, r0, ip, rrx
   14fb0:	ldr	r0, [pc, #24]	; 14fd0 <_start@@Base+0x80>
   14fb4:	ldr	r3, [pc, #24]	; 14fd4 <_start@@Base+0x84>
   14fb8:	cmp	r3, r0
   14fbc:	bxeq	lr
   14fc0:	ldr	r3, [pc, #16]	; 14fd8 <_start@@Base+0x88>
   14fc4:	cmp	r3, #0
   14fc8:	bxeq	lr
   14fcc:	bx	r3
   14fd0:	andeq	fp, r5, r4, asr #6
   14fd4:	andeq	fp, r5, r4, asr #6
   14fd8:	andeq	r0, r0, r0
   14fdc:	ldr	r0, [pc, #36]	; 15008 <_start@@Base+0xb8>
   14fe0:	ldr	r1, [pc, #36]	; 1500c <_start@@Base+0xbc>
   14fe4:	sub	r1, r1, r0
   14fe8:	asr	r1, r1, #2
   14fec:	add	r1, r1, r1, lsr #31
   14ff0:	asrs	r1, r1, #1
   14ff4:	bxeq	lr
   14ff8:	ldr	r3, [pc, #16]	; 15010 <_start@@Base+0xc0>
   14ffc:	cmp	r3, #0
   15000:	bxeq	lr
   15004:	bx	r3
   15008:	andeq	fp, r5, r4, asr #6
   1500c:	andeq	fp, r5, r4, asr #6
   15010:	andeq	r0, r0, r0
   15014:	push	{r4, lr}
   15018:	ldr	r4, [pc, #24]	; 15038 <_start@@Base+0xe8>
   1501c:	ldrb	r3, [r4]
   15020:	cmp	r3, #0
   15024:	popne	{r4, pc}
   15028:	bl	14fb0 <_start@@Base+0x60>
   1502c:	mov	r3, #1
   15030:	strb	r3, [r4]
   15034:	pop	{r4, pc}
   15038:	andeq	fp, r5, r0, asr r3
   1503c:	b	14fdc <_start@@Base+0x8c>

00015040 <test_json@@Base>:
   15040:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15044:	add	fp, sp, #28
   15048:	sub	sp, sp, #372	; 0x174
   1504c:	mov	r6, r0
   15050:	add	r0, sp, #108	; 0x6c
   15054:	mov	r7, r3
   15058:	mov	r9, r2
   1505c:	mov	r4, r1
   15060:	bl	2de14 <flatcc_builder_init@@Base>
   15064:	add	r0, sp, #16
   15068:	mov	r1, #0
   1506c:	bl	42550 <flatcc_json_printer_init_dynamic_buffer@@Base>
   15070:	ldr	r0, [fp, #12]
   15074:	ldr	r5, [fp, #8]
   15078:	ldr	r8, [fp, #16]
   1507c:	and	r1, r0, #1
   15080:	tst	r0, #16
   15084:	strb	r1, [sp, #42]	; 0x2a
   15088:	uxtb	r1, r0
   1508c:	ubfx	r2, r1, #1, #1
   15090:	strb	r2, [sp, #43]	; 0x2b
   15094:	ubfx	r2, r1, #2, #1
   15098:	strb	r2, [sp, #44]	; 0x2c
   1509c:	ubfx	r1, r1, #3, #1
   150a0:	strb	r1, [sp, #45]	; 0x2d
   150a4:	movne	r1, #2
   150a8:	strbne	r1, [sp, #41]	; 0x29
   150ac:	tst	r0, #32
   150b0:	movne	r0, #0
   150b4:	strbne	r0, [sp, #43]	; 0x2b
   150b8:	movwne	r0, #258	; 0x102
   150bc:	strhne	r0, [sp, #41]	; 0x29
   150c0:	mov	r0, r4
   150c4:	bl	14ecc <strlen@plt>
   150c8:	mov	r3, r0
   150cc:	ldm	r6, {r0, r1}
   150d0:	str	r5, [sp]
   150d4:	mov	r2, r4
   150d8:	stmib	sp, {r0, r1}
   150dc:	add	r0, sp, #108	; 0x6c
   150e0:	add	r1, sp, #64	; 0x40
   150e4:	bl	36eb4 <flatcc_json_parser_table_as_root@@Base>
   150e8:	cmp	r0, r7
   150ec:	bne	1519c <test_json@@Base+0x15c>
   150f0:	mov	r5, #0
   150f4:	cmp	r7, #0
   150f8:	beq	15104 <test_json@@Base+0xc4>
   150fc:	mov	r4, #0
   15100:	b	15178 <test_json@@Base+0x138>
   15104:	add	r0, sp, #108	; 0x6c
   15108:	sub	r1, fp, #56	; 0x38
   1510c:	bl	31910 <flatcc_builder_finalize_aligned_buffer@@Base>
   15110:	ldr	r2, [r6]
   15114:	ldr	r3, [r6, #12]
   15118:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1511c:	mov	r4, r0
   15120:	bl	32aa0 <flatcc_verify_table_as_root@@Base>
   15124:	cmp	r0, #0
   15128:	bne	15254 <test_json@@Base+0x214>
   1512c:	ldr	r0, [r6, #8]
   15130:	ldr	r3, [r6]
   15134:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15138:	add	r6, sp, #16
   1513c:	mov	r1, r4
   15140:	str	r0, [sp]
   15144:	mov	r0, r6
   15148:	bl	41de8 <flatcc_json_printer_table_as_root@@Base>
   1514c:	sub	r1, fp, #60	; 0x3c
   15150:	mov	r0, r6
   15154:	bl	42674 <flatcc_json_printer_get_buffer@@Base>
   15158:	mov	r6, r0
   1515c:	cmp	r0, #0
   15160:	beq	151d0 <test_json@@Base+0x190>
   15164:	mov	r0, r9
   15168:	mov	r1, r6
   1516c:	bl	14e3c <strcmp@plt>
   15170:	cmp	r0, #0
   15174:	bne	151d0 <test_json@@Base+0x190>
   15178:	mov	r0, r4
   1517c:	bl	31a10 <flatcc_builder_aligned_free@@Base>
   15180:	add	r0, sp, #108	; 0x6c
   15184:	bl	2dfb0 <flatcc_builder_clear@@Base>
   15188:	add	r0, sp, #16
   1518c:	bl	426fc <flatcc_json_printer_clear@@Base>
   15190:	mov	r0, r5
   15194:	sub	sp, fp, #28
   15198:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1519c:	movw	r6, #45896	; 0xb348
   151a0:	cmp	r7, #0
   151a4:	movt	r6, #5
   151a8:	beq	15230 <test_json@@Base+0x1f0>
   151ac:	ldr	r5, [r6]
   151b0:	cmp	r0, #0
   151b4:	bne	153ac <test_json@@Base+0x36c>
   151b8:	mov	r0, r7
   151bc:	bl	3378c <flatcc_json_parser_error_string@@Base>
   151c0:	movw	r1, #13466	; 0x349a
   151c4:	mov	r3, r0
   151c8:	movt	r1, #4
   151cc:	b	15244 <test_json@@Base+0x204>
   151d0:	movw	r7, #45896	; 0xb348
   151d4:	movw	r1, #13680	; 0x3570
   151d8:	mov	r2, r8
   151dc:	movt	r7, #5
   151e0:	movt	r1, #4
   151e4:	ldr	r0, [r7]
   151e8:	bl	14ed8 <fprintf@plt>
   151ec:	ldr	r0, [r7]
   151f0:	movw	r5, #27735	; 0x6c57
   151f4:	mov	r2, r6
   151f8:	movt	r5, #4
   151fc:	mov	r1, r5
   15200:	bl	14ed8 <fprintf@plt>
   15204:	ldr	r3, [r7]
   15208:	movw	r0, #13733	; 0x35a5
   1520c:	mov	r1, #10
   15210:	mov	r2, #1
   15214:	movt	r0, #4
   15218:	bl	14e9c <fwrite@plt>
   1521c:	ldr	r0, [r7]
   15220:	mov	r1, r5
   15224:	mov	r2, r9
   15228:	bl	14ed8 <fprintf@plt>
   1522c:	b	15284 <test_json@@Base+0x244>
   15230:	ldr	r5, [r6]
   15234:	bl	3378c <flatcc_json_parser_error_string@@Base>
   15238:	movw	r1, #13530	; 0x34da
   1523c:	mov	r3, r0
   15240:	movt	r1, #4
   15244:	mov	r0, r5
   15248:	mov	r2, r8
   1524c:	bl	14ed8 <fprintf@plt>
   15250:	b	153e8 <test_json@@Base+0x3a8>
   15254:	movw	r1, #45896	; 0xb348
   15258:	movt	r1, #5
   1525c:	ldr	r5, [r1]
   15260:	bl	32010 <flatcc_verify_error_string@@Base>
   15264:	movw	r1, #13566	; 0x34fe
   15268:	movw	r2, #13605	; 0x3525
   1526c:	str	r0, [sp]
   15270:	mov	r0, r5
   15274:	mov	r3, r8
   15278:	movt	r1, #4
   1527c:	movt	r2, #4
   15280:	bl	14ed8 <fprintf@plt>
   15284:	mvn	r5, #0
   15288:	cmp	r4, #0
   1528c:	beq	150fc <test_json@@Base+0xbc>
   15290:	movw	r0, #45896	; 0xb348
   15294:	ldr	r9, [fp, #-56]	; 0xffffffc8
   15298:	movw	r1, #27728	; 0x6c50
   1529c:	movw	r2, #13744	; 0x35b0
   152a0:	movt	r0, #5
   152a4:	movt	r1, #4
   152a8:	movt	r2, #4
   152ac:	ldr	r6, [r0]
   152b0:	mov	r0, r6
   152b4:	bl	14ed8 <fprintf@plt>
   152b8:	cmp	r9, #0
   152bc:	beq	15394 <test_json@@Base+0x354>
   152c0:	sub	r7, fp, #49	; 0x31
   152c4:	mov	r8, #0
   152c8:	ands	sl, r8, #15
   152cc:	bne	15304 <test_json@@Base+0x2c4>
   152d0:	cmp	r8, #0
   152d4:	beq	152ec <test_json@@Base+0x2ac>
   152d8:	movw	r1, #27733	; 0x6c55
   152dc:	mov	r0, r6
   152e0:	mov	r2, r7
   152e4:	movt	r1, #4
   152e8:	bl	14ed8 <fprintf@plt>
   152ec:	movw	r1, #27739	; 0x6c5b
   152f0:	mov	r0, r6
   152f4:	mov	r2, r8
   152f8:	movt	r1, #4
   152fc:	bl	14ed8 <fprintf@plt>
   15300:	b	15318 <test_json@@Base+0x2d8>
   15304:	tst	r8, #7
   15308:	bne	15318 <test_json@@Base+0x2d8>
   1530c:	mov	r0, #32
   15310:	mov	r1, r6
   15314:	bl	14f20 <fputc@plt>
   15318:	ldrb	r2, [r4, r8]
   1531c:	movw	r1, #27747	; 0x6c63
   15320:	mov	r0, r6
   15324:	movt	r1, #4
   15328:	bl	14ed8 <fprintf@plt>
   1532c:	ldrb	r0, [r4, r8]
   15330:	add	r8, r8, #1
   15334:	sub	r1, r0, #32
   15338:	uxtb	r1, r1
   1533c:	cmp	r1, #94	; 0x5e
   15340:	mov	r1, #0
   15344:	movwhi	r0, #46	; 0x2e
   15348:	cmp	r9, r8
   1534c:	strb	r0, [r7, sl]
   15350:	add	r0, r7, sl
   15354:	strb	r1, [r0, #1]
   15358:	bne	152c8 <test_json@@Base+0x288>
   1535c:	tst	r9, #15
   15360:	beq	15394 <test_json@@Base+0x354>
   15364:	movw	r8, #27753	; 0x6c69
   15368:	add	r7, r9, #1
   1536c:	movt	r8, #4
   15370:	mov	r0, r8
   15374:	mov	r1, #3
   15378:	mov	r2, #1
   1537c:	mov	r3, r6
   15380:	bl	14e9c <fwrite@plt>
   15384:	add	r0, r7, #1
   15388:	tst	r7, #15
   1538c:	mov	r7, r0
   15390:	bne	15370 <test_json@@Base+0x330>
   15394:	movw	r1, #27733	; 0x6c55
   15398:	sub	r2, fp, #49	; 0x31
   1539c:	mov	r0, r6
   153a0:	movt	r1, #4
   153a4:	bl	14ed8 <fprintf@plt>
   153a8:	b	15178 <test_json@@Base+0x138>
   153ac:	bl	3378c <flatcc_json_parser_error_string@@Base>
   153b0:	movw	r1, #13428	; 0x3474
   153b4:	mov	r3, r0
   153b8:	mov	r0, r5
   153bc:	mov	r2, r8
   153c0:	movt	r1, #4
   153c4:	bl	14ed8 <fprintf@plt>
   153c8:	ldr	r5, [r6]
   153cc:	mov	r0, r7
   153d0:	bl	3378c <flatcc_json_parser_error_string@@Base>
   153d4:	movw	r1, #13499	; 0x34bb
   153d8:	mov	r2, r0
   153dc:	mov	r0, r5
   153e0:	movt	r1, #4
   153e4:	bl	14ed8 <fprintf@plt>
   153e8:	ldr	r0, [r6]
   153ec:	movw	r1, #27735	; 0x6c57
   153f0:	mov	r2, r4
   153f4:	movt	r1, #4
   153f8:	bl	14ed8 <fprintf@plt>
   153fc:	movw	r4, #45896	; 0xb348
   15400:	ldr	r0, [sp, #84]	; 0x54
   15404:	movt	r4, #5
   15408:	ldr	r3, [r4]
   1540c:	cmp	r0, #2
   15410:	blt	1543c <test_json@@Base+0x3fc>
   15414:	mov	r5, #0
   15418:	mov	r0, #32
   1541c:	mov	r1, r3
   15420:	bl	14f20 <fputc@plt>
   15424:	ldr	r0, [sp, #84]	; 0x54
   15428:	ldr	r3, [r4]
   1542c:	add	r5, r5, #1
   15430:	sub	r0, r0, #1
   15434:	cmp	r5, r0
   15438:	blt	15418 <test_json@@Base+0x3d8>
   1543c:	movw	r0, #13563	; 0x34fb
   15440:	mov	r1, #2
   15444:	mov	r2, #1
   15448:	movt	r0, #4
   1544c:	bl	14e9c <fwrite@plt>
   15450:	mvn	r5, #0
   15454:	b	150fc <test_json@@Base+0xbc>

00015458 <edge_case_tests@@Base>:
   15458:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1545c:	add	fp, sp, #28
   15460:	sub	sp, sp, #60	; 0x3c
   15464:	movw	r4, #28688	; 0x7010
   15468:	movw	r1, #13758	; 0x35be
   1546c:	movw	r2, #13807	; 0x35ef
   15470:	mov	r0, #155	; 0x9b
   15474:	mov	sl, #0
   15478:	mov	r3, #0
   1547c:	movt	r4, #4
   15480:	str	r0, [sp, #8]
   15484:	movt	r1, #4
   15488:	movt	r2, #4
   1548c:	str	sl, [sp]
   15490:	str	sl, [sp, #4]
   15494:	mov	r0, r4
   15498:	bl	15040 <test_json@@Base>
   1549c:	movw	r5, #13837	; 0x360d
   154a0:	movw	r8, #13870	; 0x362e
   154a4:	str	r0, [fp, #-32]	; 0xffffffe0
   154a8:	mov	r9, #2
   154ac:	mov	r0, #168	; 0xa8
   154b0:	mov	r3, #0
   154b4:	movt	r5, #4
   154b8:	movt	r8, #4
   154bc:	stm	sp, {r9, sl}
   154c0:	str	r0, [sp, #8]
   154c4:	mov	r0, r4
   154c8:	mov	r1, r5
   154cc:	mov	r2, r8
   154d0:	bl	15040 <test_json@@Base>
   154d4:	movw	r1, #13904	; 0x3650
   154d8:	movw	r2, #13943	; 0x3677
   154dc:	str	r0, [fp, #-36]	; 0xffffffdc
   154e0:	mov	r0, #172	; 0xac
   154e4:	mov	r3, #0
   154e8:	str	sl, [sp]
   154ec:	str	r9, [sp, #4]
   154f0:	str	r0, [sp, #8]
   154f4:	movt	r1, #4
   154f8:	movt	r2, #4
   154fc:	mov	r0, r4
   15500:	bl	15040 <test_json@@Base>
   15504:	movw	r2, #13972	; 0x3694
   15508:	str	r0, [fp, #-40]	; 0xffffffd8
   1550c:	mov	r0, #176	; 0xb0
   15510:	mov	r1, #4
   15514:	mov	r3, #0
   15518:	str	r9, [sp]
   1551c:	str	r1, [sp, #4]
   15520:	str	r0, [sp, #8]
   15524:	movt	r2, #4
   15528:	mov	r0, r4
   1552c:	mov	r1, r5
   15530:	bl	15040 <test_json@@Base>
   15534:	mov	r1, #8
   15538:	movw	r2, #14025	; 0x36c9
   1553c:	str	r0, [sp, #44]	; 0x2c
   15540:	mov	r0, #180	; 0xb4
   15544:	mov	r3, #0
   15548:	str	sl, [sp]
   1554c:	str	r1, [sp, #4]
   15550:	movw	r1, #13991	; 0x36a7
   15554:	str	r0, [sp, #8]
   15558:	movt	r2, #4
   1555c:	mov	r0, r4
   15560:	movt	r1, #4
   15564:	bl	15040 <test_json@@Base>
   15568:	str	r0, [sp, #40]	; 0x28
   1556c:	movw	r1, #14299	; 0x37db
   15570:	mov	r0, #195	; 0xc3
   15574:	stm	sp, {r9, sl}
   15578:	mov	r2, r8
   1557c:	mov	r3, #0
   15580:	str	r0, [sp, #8]
   15584:	movt	r1, #4
   15588:	mov	r0, r4
   1558c:	bl	15040 <test_json@@Base>
   15590:	movw	r5, #14337	; 0x3801
   15594:	movw	r7, #14387	; 0x3833
   15598:	str	r0, [sp, #36]	; 0x24
   1559c:	mov	r6, #1
   155a0:	mov	r0, #199	; 0xc7
   155a4:	mov	r3, #0
   155a8:	movt	r5, #4
   155ac:	movt	r7, #4
   155b0:	stm	sp, {r6, sl}
   155b4:	str	r0, [sp, #8]
   155b8:	mov	r0, r4
   155bc:	mov	r1, r5
   155c0:	mov	r2, r7
   155c4:	bl	15040 <test_json@@Base>
   155c8:	movw	r2, #14414	; 0x384e
   155cc:	str	r0, [sp, #32]
   155d0:	mov	r0, #203	; 0xcb
   155d4:	mov	r1, r5
   155d8:	mov	r3, #0
   155dc:	str	r6, [sp]
   155e0:	str	r6, [sp, #4]
   155e4:	str	r0, [sp, #8]
   155e8:	movt	r2, #4
   155ec:	mov	r0, r4
   155f0:	bl	15040 <test_json@@Base>
   155f4:	str	r0, [sp, #28]
   155f8:	movw	r1, #14437	; 0x3865
   155fc:	mov	r0, #209	; 0xd1
   15600:	stm	sp, {r6, sl}
   15604:	mov	r2, r7
   15608:	mov	r3, #0
   1560c:	str	r0, [sp, #8]
   15610:	movt	r1, #4
   15614:	mov	r0, r4
   15618:	bl	15040 <test_json@@Base>
   1561c:	movw	r5, #14550	; 0x38d6
   15620:	str	r0, [sp, #24]
   15624:	mov	r0, #217	; 0xd9
   15628:	stm	sp, {r9, sl}
   1562c:	mov	r2, r8
   15630:	mov	r3, #0
   15634:	movt	r5, #4
   15638:	str	r0, [sp, #8]
   1563c:	mov	r0, r4
   15640:	mov	r1, r5
   15644:	bl	15040 <test_json@@Base>
   15648:	movw	r1, #14579	; 0x38f3
   1564c:	movw	r2, #13943	; 0x3677
   15650:	str	r0, [sp, #20]
   15654:	mov	r0, #221	; 0xdd
   15658:	mov	r3, #0
   1565c:	str	sl, [sp]
   15660:	str	r9, [sp, #4]
   15664:	str	r0, [sp, #8]
   15668:	movt	r1, #4
   1566c:	mov	r0, r4
   15670:	movt	r2, #4
   15674:	bl	15040 <test_json@@Base>
   15678:	movw	r2, #13972	; 0x3694
   1567c:	str	r0, [sp, #16]
   15680:	mov	r0, #225	; 0xe1
   15684:	mov	r1, #4
   15688:	mov	r3, #0
   1568c:	str	r9, [sp]
   15690:	str	r1, [sp, #4]
   15694:	str	r0, [sp, #8]
   15698:	mov	r0, r4
   1569c:	mov	r1, r5
   156a0:	movt	r2, #4
   156a4:	bl	15040 <test_json@@Base>
   156a8:	mov	r1, #8
   156ac:	movw	r2, #14631	; 0x3927
   156b0:	str	r0, [sp, #12]
   156b4:	mov	r0, #229	; 0xe5
   156b8:	mov	r3, #0
   156bc:	str	sl, [sp]
   156c0:	str	r1, [sp, #4]
   156c4:	movw	r1, #14612	; 0x3914
   156c8:	str	r0, [sp, #8]
   156cc:	movt	r2, #4
   156d0:	mov	r0, r4
   156d4:	movt	r1, #4
   156d8:	bl	15040 <test_json@@Base>
   156dc:	movw	r1, #14910	; 0x3a3e
   156e0:	mov	r5, r0
   156e4:	mov	r0, #233	; 0xe9
   156e8:	stm	sp, {r9, sl}
   156ec:	mov	r2, r8
   156f0:	mov	r3, #0
   156f4:	str	r0, [sp, #8]
   156f8:	movt	r1, #4
   156fc:	mov	r0, r4
   15700:	bl	15040 <test_json@@Base>
   15704:	movw	r9, #14942	; 0x3a5e
   15708:	movw	r2, #14387	; 0x3833
   1570c:	mov	r8, r0
   15710:	mov	r0, #237	; 0xed
   15714:	stm	sp, {r6, sl}
   15718:	mov	r3, #0
   1571c:	movt	r9, #4
   15720:	str	r0, [sp, #8]
   15724:	mov	r0, r4
   15728:	movt	r2, #4
   1572c:	mov	r1, r9
   15730:	bl	15040 <test_json@@Base>
   15734:	movw	r2, #14414	; 0x384e
   15738:	mov	r7, r0
   1573c:	mov	r0, #241	; 0xf1
   15740:	mov	r1, r9
   15744:	mov	r3, #0
   15748:	str	r6, [sp]
   1574c:	str	r6, [sp, #4]
   15750:	str	r0, [sp, #8]
   15754:	mov	r0, r4
   15758:	movt	r2, #4
   1575c:	bl	15040 <test_json@@Base>
   15760:	stm	sp, {r6, sl}
   15764:	mov	r1, #247	; 0xf7
   15768:	mov	r3, #0
   1576c:	str	r1, [sp, #8]
   15770:	ldr	r1, [fp, #-32]	; 0xffffffe0
   15774:	ldr	r2, [fp, #-36]	; 0xffffffdc
   15778:	orr	r1, r2, r1
   1577c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15780:	orr	r1, r1, r2
   15784:	ldr	r2, [sp, #44]	; 0x2c
   15788:	orr	r1, r1, r2
   1578c:	ldr	r2, [sp, #40]	; 0x28
   15790:	orr	r1, r1, r2
   15794:	ldr	r2, [sp, #36]	; 0x24
   15798:	orr	r1, r1, r2
   1579c:	ldr	r2, [sp, #32]
   157a0:	orr	r1, r1, r2
   157a4:	ldr	r2, [sp, #28]
   157a8:	orr	r1, r1, r2
   157ac:	ldr	r2, [sp, #24]
   157b0:	orr	r1, r1, r2
   157b4:	ldr	r2, [sp, #20]
   157b8:	orr	r1, r1, r2
   157bc:	ldr	r2, [sp, #16]
   157c0:	orr	r1, r1, r2
   157c4:	ldr	r2, [sp, #12]
   157c8:	orr	r1, r1, r2
   157cc:	movw	r2, #14387	; 0x3833
   157d0:	orr	r1, r1, r5
   157d4:	movt	r2, #4
   157d8:	orr	r1, r1, r8
   157dc:	orr	r1, r1, r7
   157e0:	orr	r5, r1, r0
   157e4:	movw	r1, #14984	; 0x3a88
   157e8:	mov	r0, r4
   157ec:	movt	r1, #4
   157f0:	bl	15040 <test_json@@Base>
   157f4:	orr	r0, r5, r0
   157f8:	sub	sp, fp, #28
   157fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00015800 <error_case_tests@@Base>:
   15800:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15804:	add	fp, sp, #28
   15808:	sub	sp, sp, #60	; 0x3c
   1580c:	movw	r4, #28688	; 0x7010
   15810:	movw	r1, #15079	; 0x3ae7
   15814:	movw	r0, #285	; 0x11d
   15818:	mov	r6, #0
   1581c:	mov	r2, #0
   15820:	mov	r3, #13
   15824:	movt	r4, #4
   15828:	str	r0, [sp, #8]
   1582c:	movt	r1, #4
   15830:	str	r6, [sp]
   15834:	str	r6, [sp, #4]
   15838:	mov	r0, r4
   1583c:	bl	15040 <test_json@@Base>
   15840:	movw	r1, #15105	; 0x3b01
   15844:	str	r0, [fp, #-32]	; 0xffffffe0
   15848:	movw	r0, #287	; 0x11f
   1584c:	mov	r2, #0
   15850:	mov	r3, #13
   15854:	str	r6, [sp]
   15858:	str	r6, [sp, #4]
   1585c:	str	r0, [sp, #8]
   15860:	movt	r1, #4
   15864:	mov	r0, r4
   15868:	bl	15040 <test_json@@Base>
   1586c:	movw	r1, #15202	; 0x3b62
   15870:	str	r0, [fp, #-36]	; 0xffffffdc
   15874:	movw	r0, #289	; 0x121
   15878:	mov	r2, #0
   1587c:	mov	r3, #13
   15880:	str	r6, [sp]
   15884:	str	r6, [sp, #4]
   15888:	str	r0, [sp, #8]
   1588c:	movt	r1, #4
   15890:	mov	r0, r4
   15894:	bl	15040 <test_json@@Base>
   15898:	movw	r1, #15296	; 0x3bc0
   1589c:	str	r0, [fp, #-40]	; 0xffffffd8
   158a0:	movw	r0, #291	; 0x123
   158a4:	mov	r2, #0
   158a8:	mov	r3, #13
   158ac:	str	r6, [sp]
   158b0:	str	r6, [sp, #4]
   158b4:	str	r0, [sp, #8]
   158b8:	movt	r1, #4
   158bc:	mov	r0, r4
   158c0:	bl	15040 <test_json@@Base>
   158c4:	movw	r1, #15384	; 0x3c18
   158c8:	str	r0, [sp, #44]	; 0x2c
   158cc:	movw	r0, #293	; 0x125
   158d0:	mov	r2, #0
   158d4:	mov	r3, #13
   158d8:	str	r6, [sp]
   158dc:	str	r6, [sp, #4]
   158e0:	str	r0, [sp, #8]
   158e4:	movt	r1, #4
   158e8:	mov	r0, r4
   158ec:	bl	15040 <test_json@@Base>
   158f0:	movw	r1, #15469	; 0x3c6d
   158f4:	str	r0, [sp, #40]	; 0x28
   158f8:	mov	r0, #296	; 0x128
   158fc:	mov	r2, #0
   15900:	mov	r3, #13
   15904:	str	r6, [sp]
   15908:	str	r6, [sp, #4]
   1590c:	str	r0, [sp, #8]
   15910:	movt	r1, #4
   15914:	mov	r0, r4
   15918:	bl	15040 <test_json@@Base>
   1591c:	movw	r1, #15627	; 0x3d0b
   15920:	str	r0, [sp, #36]	; 0x24
   15924:	movw	r0, #299	; 0x12b
   15928:	mov	r2, #0
   1592c:	mov	r3, #13
   15930:	str	r6, [sp]
   15934:	str	r6, [sp, #4]
   15938:	str	r0, [sp, #8]
   1593c:	movt	r1, #4
   15940:	mov	r0, r4
   15944:	bl	15040 <test_json@@Base>
   15948:	movw	r1, #15782	; 0x3da6
   1594c:	str	r0, [sp, #32]
   15950:	movw	r0, #303	; 0x12f
   15954:	mov	r2, #0
   15958:	mov	r3, #13
   1595c:	str	r6, [sp]
   15960:	str	r6, [sp, #4]
   15964:	str	r0, [sp, #8]
   15968:	movt	r1, #4
   1596c:	mov	r0, r4
   15970:	bl	15040 <test_json@@Base>
   15974:	movw	r1, #15981	; 0x3e6d
   15978:	str	r0, [sp, #28]
   1597c:	movw	r0, #307	; 0x133
   15980:	mov	r2, #0
   15984:	mov	r3, #13
   15988:	str	r6, [sp]
   1598c:	str	r6, [sp, #4]
   15990:	str	r0, [sp, #8]
   15994:	movt	r1, #4
   15998:	mov	r0, r4
   1599c:	bl	15040 <test_json@@Base>
   159a0:	movw	r1, #16180	; 0x3f34
   159a4:	str	r0, [sp, #24]
   159a8:	movw	r0, #322	; 0x142
   159ac:	mov	r2, #0
   159b0:	mov	r3, #13
   159b4:	str	r6, [sp]
   159b8:	str	r6, [sp, #4]
   159bc:	str	r0, [sp, #8]
   159c0:	movt	r1, #4
   159c4:	mov	r0, r4
   159c8:	bl	15040 <test_json@@Base>
   159cc:	movw	r1, #16204	; 0x3f4c
   159d0:	str	r0, [sp, #20]
   159d4:	mov	r0, #324	; 0x144
   159d8:	mov	r2, #0
   159dc:	mov	r3, #13
   159e0:	str	r6, [sp]
   159e4:	str	r6, [sp, #4]
   159e8:	str	r0, [sp, #8]
   159ec:	movt	r1, #4
   159f0:	mov	r0, r4
   159f4:	bl	15040 <test_json@@Base>
   159f8:	movw	r1, #16289	; 0x3fa1
   159fc:	str	r0, [sp, #16]
   15a00:	movw	r0, #326	; 0x146
   15a04:	mov	r2, #0
   15a08:	mov	r3, #13
   15a0c:	str	r6, [sp]
   15a10:	str	r6, [sp, #4]
   15a14:	str	r0, [sp, #8]
   15a18:	movt	r1, #4
   15a1c:	mov	r0, r4
   15a20:	bl	15040 <test_json@@Base>
   15a24:	movw	r1, #16371	; 0x3ff3
   15a28:	mov	r7, r0
   15a2c:	mov	r0, #328	; 0x148
   15a30:	mov	r2, #0
   15a34:	mov	r3, #13
   15a38:	str	r6, [sp]
   15a3c:	str	r6, [sp, #4]
   15a40:	str	r0, [sp, #8]
   15a44:	movt	r1, #4
   15a48:	mov	r0, r4
   15a4c:	bl	15040 <test_json@@Base>
   15a50:	movw	r1, #16451	; 0x4043
   15a54:	mov	r8, r0
   15a58:	movw	r0, #330	; 0x14a
   15a5c:	mov	r2, #0
   15a60:	mov	r3, #13
   15a64:	str	r6, [sp]
   15a68:	str	r6, [sp, #4]
   15a6c:	str	r0, [sp, #8]
   15a70:	movt	r1, #4
   15a74:	mov	r0, r4
   15a78:	bl	15040 <test_json@@Base>
   15a7c:	movw	r1, #16528	; 0x4090
   15a80:	mov	r9, r0
   15a84:	movw	r0, #333	; 0x14d
   15a88:	mov	r2, #0
   15a8c:	mov	r3, #13
   15a90:	str	r6, [sp]
   15a94:	str	r6, [sp, #4]
   15a98:	str	r0, [sp, #8]
   15a9c:	movt	r1, #4
   15aa0:	mov	r0, r4
   15aa4:	bl	15040 <test_json@@Base>
   15aa8:	movw	r1, #16668	; 0x411c
   15aac:	mov	sl, r0
   15ab0:	mov	r0, #336	; 0x150
   15ab4:	mov	r2, #0
   15ab8:	mov	r3, #13
   15abc:	str	r6, [sp]
   15ac0:	str	r6, [sp, #4]
   15ac4:	str	r0, [sp, #8]
   15ac8:	movt	r1, #4
   15acc:	mov	r0, r4
   15ad0:	bl	15040 <test_json@@Base>
   15ad4:	movw	r1, #16805	; 0x41a5
   15ad8:	mov	r5, r0
   15adc:	mov	r0, #340	; 0x154
   15ae0:	mov	r2, #0
   15ae4:	mov	r3, #13
   15ae8:	str	r6, [sp]
   15aec:	str	r6, [sp, #4]
   15af0:	str	r0, [sp, #8]
   15af4:	movt	r1, #4
   15af8:	mov	r0, r4
   15afc:	bl	15040 <test_json@@Base>
   15b00:	mov	r1, #344	; 0x158
   15b04:	ldr	r2, [fp, #-36]	; 0xffffffdc
   15b08:	mov	r3, #13
   15b0c:	str	r6, [sp]
   15b10:	str	r6, [sp, #4]
   15b14:	str	r1, [sp, #8]
   15b18:	ldr	r1, [fp, #-32]	; 0xffffffe0
   15b1c:	orr	r1, r2, r1
   15b20:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15b24:	orr	r1, r1, r2
   15b28:	ldr	r2, [sp, #44]	; 0x2c
   15b2c:	orr	r1, r1, r2
   15b30:	ldr	r2, [sp, #40]	; 0x28
   15b34:	orr	r1, r1, r2
   15b38:	ldr	r2, [sp, #36]	; 0x24
   15b3c:	orr	r1, r1, r2
   15b40:	ldr	r2, [sp, #32]
   15b44:	orr	r1, r1, r2
   15b48:	ldr	r2, [sp, #28]
   15b4c:	orr	r1, r1, r2
   15b50:	ldr	r2, [sp, #24]
   15b54:	orr	r1, r1, r2
   15b58:	ldr	r2, [sp, #20]
   15b5c:	orr	r1, r1, r2
   15b60:	ldr	r2, [sp, #16]
   15b64:	orr	r1, r1, r2
   15b68:	mov	r2, #0
   15b6c:	orr	r1, r1, r7
   15b70:	orr	r1, r1, r8
   15b74:	orr	r1, r1, r9
   15b78:	orr	r1, r1, sl
   15b7c:	orr	r1, r1, r5
   15b80:	orr	r5, r1, r0
   15b84:	movw	r1, #16980	; 0x4254
   15b88:	mov	r0, r4
   15b8c:	movt	r1, #4
   15b90:	bl	15040 <test_json@@Base>
   15b94:	orr	r0, r5, r0
   15b98:	sub	sp, fp, #28
   15b9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00015ba0 <base64_tests@@Base>:
   15ba0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15ba4:	add	fp, sp, #28
   15ba8:	sub	sp, sp, #28
   15bac:	movw	r4, #28688	; 0x7010
   15bb0:	movw	r1, #17155	; 0x4303
   15bb4:	movw	r2, #13972	; 0x3694
   15bb8:	movw	r0, #369	; 0x171
   15bbc:	mov	r5, #0
   15bc0:	mov	r3, #0
   15bc4:	movt	r4, #4
   15bc8:	str	r0, [sp, #8]
   15bcc:	movt	r1, #4
   15bd0:	movt	r2, #4
   15bd4:	str	r5, [sp]
   15bd8:	str	r5, [sp, #4]
   15bdc:	mov	r0, r4
   15be0:	bl	15040 <test_json@@Base>
   15be4:	movw	r1, #17177	; 0x4319
   15be8:	movw	r2, #17216	; 0x4340
   15bec:	str	r0, [sp, #24]
   15bf0:	mov	r0, #372	; 0x174
   15bf4:	mov	r3, #0
   15bf8:	str	r5, [sp]
   15bfc:	str	r5, [sp, #4]
   15c00:	str	r0, [sp, #8]
   15c04:	movt	r1, #4
   15c08:	movt	r2, #4
   15c0c:	mov	r0, r4
   15c10:	bl	15040 <test_json@@Base>
   15c14:	movw	r6, #17436	; 0x441c
   15c18:	movw	r1, #17251	; 0x4363
   15c1c:	str	r0, [sp, #20]
   15c20:	mov	r0, #376	; 0x178
   15c24:	mov	r3, #0
   15c28:	str	r5, [sp]
   15c2c:	str	r5, [sp, #4]
   15c30:	movt	r6, #4
   15c34:	str	r0, [sp, #8]
   15c38:	movt	r1, #4
   15c3c:	mov	r0, r4
   15c40:	mov	r2, r6
   15c44:	bl	15040 <test_json@@Base>
   15c48:	movw	r7, #17804	; 0x458c
   15c4c:	movw	r1, #17616	; 0x44d0
   15c50:	str	r0, [sp, #16]
   15c54:	movw	r0, #379	; 0x17b
   15c58:	mov	r3, #0
   15c5c:	str	r5, [sp]
   15c60:	str	r5, [sp, #4]
   15c64:	movt	r7, #4
   15c68:	str	r0, [sp, #8]
   15c6c:	movt	r1, #4
   15c70:	mov	r0, r4
   15c74:	mov	r2, r7
   15c78:	bl	15040 <test_json@@Base>
   15c7c:	movw	r1, #17987	; 0x4643
   15c80:	str	r0, [sp, #12]
   15c84:	movw	r0, #382	; 0x17e
   15c88:	mov	r2, r6
   15c8c:	mov	r3, #0
   15c90:	str	r5, [sp]
   15c94:	str	r5, [sp, #4]
   15c98:	str	r0, [sp, #8]
   15c9c:	movt	r1, #4
   15ca0:	mov	r0, r4
   15ca4:	bl	15040 <test_json@@Base>
   15ca8:	movw	r1, #18170	; 0x46fa
   15cac:	mov	r6, r0
   15cb0:	movw	r0, #385	; 0x181
   15cb4:	mov	r2, r7
   15cb8:	mov	r3, #0
   15cbc:	str	r5, [sp]
   15cc0:	str	r5, [sp, #4]
   15cc4:	str	r0, [sp, #8]
   15cc8:	movt	r1, #4
   15ccc:	mov	r0, r4
   15cd0:	bl	15040 <test_json@@Base>
   15cd4:	movw	r1, #18356	; 0x47b4
   15cd8:	mov	r7, r0
   15cdc:	mov	r0, #388	; 0x184
   15ce0:	mov	r2, #0
   15ce4:	mov	r3, #31
   15ce8:	str	r5, [sp]
   15cec:	str	r5, [sp, #4]
   15cf0:	str	r0, [sp, #8]
   15cf4:	movt	r1, #4
   15cf8:	mov	r0, r4
   15cfc:	bl	15040 <test_json@@Base>
   15d00:	movw	r1, #18541	; 0x486d
   15d04:	mov	r8, r0
   15d08:	movw	r0, #391	; 0x187
   15d0c:	mov	r2, #0
   15d10:	mov	r3, #32
   15d14:	str	r5, [sp]
   15d18:	str	r5, [sp, #4]
   15d1c:	str	r0, [sp, #8]
   15d20:	movt	r1, #4
   15d24:	mov	r0, r4
   15d28:	bl	15040 <test_json@@Base>
   15d2c:	movw	sl, #18937	; 0x49f9
   15d30:	movw	r1, #18729	; 0x4929
   15d34:	mov	r9, r0
   15d38:	movw	r0, #406	; 0x196
   15d3c:	mov	r3, #0
   15d40:	str	r5, [sp]
   15d44:	str	r5, [sp, #4]
   15d48:	movt	sl, #4
   15d4c:	str	r0, [sp, #8]
   15d50:	movt	r1, #4
   15d54:	mov	r0, r4
   15d58:	mov	r2, sl
   15d5c:	bl	15040 <test_json@@Base>
   15d60:	movw	r1, #419	; 0x1a3
   15d64:	ldr	r2, [sp, #20]
   15d68:	str	r5, [sp]
   15d6c:	str	r5, [sp, #4]
   15d70:	mov	r3, #0
   15d74:	str	r1, [sp, #8]
   15d78:	ldr	r1, [sp, #24]
   15d7c:	orr	r1, r2, r1
   15d80:	ldr	r2, [sp, #16]
   15d84:	orr	r1, r1, r2
   15d88:	ldr	r2, [sp, #12]
   15d8c:	orr	r1, r1, r2
   15d90:	mov	r2, sl
   15d94:	orr	r1, r1, r6
   15d98:	orr	r1, r1, r7
   15d9c:	orr	r1, r1, r8
   15da0:	orr	r1, r1, r9
   15da4:	orr	r5, r1, r0
   15da8:	movw	r1, #19150	; 0x4ace
   15dac:	mov	r0, r4
   15db0:	movt	r1, #4
   15db4:	bl	15040 <test_json@@Base>
   15db8:	orr	r0, r5, r0
   15dbc:	sub	sp, fp, #28
   15dc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00015dc4 <mixed_type_union_tests@@Base>:
   15dc4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15dc8:	add	fp, sp, #28
   15dcc:	sub	sp, sp, #20
   15dd0:	movw	r4, #28704	; 0x7020
   15dd4:	movw	r1, #19354	; 0x4b9a
   15dd8:	movw	r2, #19433	; 0x4be9
   15ddc:	mov	r0, #432	; 0x1b0
   15de0:	mov	r8, #0
   15de4:	mov	r3, #0
   15de8:	movt	r4, #4
   15dec:	str	r0, [sp, #8]
   15df0:	movt	r1, #4
   15df4:	movt	r2, #4
   15df8:	str	r8, [sp]
   15dfc:	str	r8, [sp, #4]
   15e00:	mov	r0, r4
   15e04:	bl	15040 <test_json@@Base>
   15e08:	movw	r9, #19635	; 0x4cb3
   15e0c:	movw	r1, #19504	; 0x4c30
   15e10:	str	r0, [sp, #16]
   15e14:	movw	r0, #437	; 0x1b5
   15e18:	mov	r3, #0
   15e1c:	str	r8, [sp]
   15e20:	str	r8, [sp, #4]
   15e24:	movt	r9, #4
   15e28:	str	r0, [sp, #8]
   15e2c:	movt	r1, #4
   15e30:	mov	r0, r4
   15e34:	mov	r2, r9
   15e38:	bl	15040 <test_json@@Base>
   15e3c:	movw	r1, #19754	; 0x4d2a
   15e40:	mov	sl, r0
   15e44:	movw	r0, #442	; 0x1ba
   15e48:	mov	r2, r9
   15e4c:	mov	r3, #0
   15e50:	str	r8, [sp]
   15e54:	str	r8, [sp, #4]
   15e58:	str	r0, [sp, #8]
   15e5c:	movt	r1, #4
   15e60:	mov	r0, r4
   15e64:	bl	15040 <test_json@@Base>
   15e68:	movw	r1, #19904	; 0x4dc0
   15e6c:	movw	r2, #20125	; 0x4e9d
   15e70:	mov	r5, r0
   15e74:	movw	r0, #449	; 0x1c1
   15e78:	mov	r3, #0
   15e7c:	str	r8, [sp]
   15e80:	str	r8, [sp, #4]
   15e84:	str	r0, [sp, #8]
   15e88:	movt	r1, #4
   15e8c:	movt	r2, #4
   15e90:	mov	r0, r4
   15e94:	bl	15040 <test_json@@Base>
   15e98:	movw	r1, #20310	; 0x4f56
   15e9c:	movw	r2, #20572	; 0x505c
   15ea0:	mov	r6, r0
   15ea4:	movw	r0, #458	; 0x1ca
   15ea8:	mov	r3, #0
   15eac:	str	r8, [sp]
   15eb0:	str	r8, [sp, #4]
   15eb4:	str	r0, [sp, #8]
   15eb8:	movt	r1, #4
   15ebc:	movt	r2, #4
   15ec0:	mov	r0, r4
   15ec4:	bl	15040 <test_json@@Base>
   15ec8:	movw	r1, #20794	; 0x513a
   15ecc:	movw	r2, #21179	; 0x52bb
   15ed0:	mov	r7, r0
   15ed4:	movw	r0, #469	; 0x1d5
   15ed8:	mov	r3, #0
   15edc:	str	r8, [sp]
   15ee0:	str	r8, [sp, #4]
   15ee4:	str	r0, [sp, #8]
   15ee8:	movt	r1, #4
   15eec:	movt	r2, #4
   15ef0:	mov	r0, r4
   15ef4:	bl	15040 <test_json@@Base>
   15ef8:	movw	r1, #474	; 0x1da
   15efc:	mov	r2, r9
   15f00:	mov	r3, #0
   15f04:	str	r8, [sp]
   15f08:	str	r8, [sp, #4]
   15f0c:	str	r1, [sp, #8]
   15f10:	ldr	r1, [sp, #16]
   15f14:	orr	r1, sl, r1
   15f18:	orr	r1, r1, r5
   15f1c:	orr	r1, r1, r6
   15f20:	orr	r1, r1, r7
   15f24:	orr	r5, r1, r0
   15f28:	movw	r1, #21505	; 0x5401
   15f2c:	mov	r0, r4
   15f30:	movt	r1, #4
   15f34:	bl	15040 <test_json@@Base>
   15f38:	orr	r0, r5, r0
   15f3c:	sub	sp, fp, #28
   15f40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00015f44 <union_vector_tests@@Base>:
   15f44:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15f48:	add	fp, sp, #28
   15f4c:	sub	sp, sp, #12
   15f50:	movw	r4, #28720	; 0x7030
   15f54:	movw	r8, #21710	; 0x54ce
   15f58:	movw	r1, #21646	; 0x548e
   15f5c:	movw	r0, #485	; 0x1e5
   15f60:	mov	r7, #0
   15f64:	mov	r3, #0
   15f68:	movt	r8, #4
   15f6c:	movt	r4, #4
   15f70:	str	r0, [sp, #8]
   15f74:	movt	r1, #4
   15f78:	str	r7, [sp]
   15f7c:	str	r7, [sp, #4]
   15f80:	mov	r0, r4
   15f84:	mov	r2, r8
   15f88:	bl	15040 <test_json@@Base>
   15f8c:	movw	r1, #21766	; 0x5506
   15f90:	movw	r2, #21817	; 0x5539
   15f94:	mov	r9, r0
   15f98:	mov	r0, #488	; 0x1e8
   15f9c:	mov	r3, #0
   15fa0:	str	r7, [sp]
   15fa4:	str	r7, [sp, #4]
   15fa8:	str	r0, [sp, #8]
   15fac:	movt	r1, #4
   15fb0:	movt	r2, #4
   15fb4:	mov	r0, r4
   15fb8:	bl	15040 <test_json@@Base>
   15fbc:	movw	r1, #21860	; 0x5564
   15fc0:	movw	r2, #21937	; 0x55b1
   15fc4:	mov	sl, r0
   15fc8:	movw	r0, #491	; 0x1eb
   15fcc:	mov	r3, #0
   15fd0:	str	r7, [sp]
   15fd4:	str	r7, [sp, #4]
   15fd8:	str	r0, [sp, #8]
   15fdc:	movt	r1, #4
   15fe0:	movt	r2, #4
   15fe4:	mov	r0, r4
   15fe8:	bl	15040 <test_json@@Base>
   15fec:	movw	r1, #22005	; 0x55f5
   15ff0:	movw	r2, #22130	; 0x5672
   15ff4:	mov	r6, r0
   15ff8:	movw	r0, #494	; 0x1ee
   15ffc:	mov	r3, #0
   16000:	str	r7, [sp]
   16004:	str	r7, [sp, #4]
   16008:	str	r0, [sp, #8]
   1600c:	movt	r1, #4
   16010:	movt	r2, #4
   16014:	mov	r0, r4
   16018:	bl	15040 <test_json@@Base>
   1601c:	movw	r1, #22238	; 0x56de
   16020:	mov	r5, r0
   16024:	movw	r0, #497	; 0x1f1
   16028:	mov	r2, r8
   1602c:	mov	r3, #0
   16030:	str	r7, [sp]
   16034:	str	r7, [sp, #4]
   16038:	str	r0, [sp, #8]
   1603c:	movt	r1, #4
   16040:	mov	r0, r4
   16044:	bl	15040 <test_json@@Base>
   16048:	mov	r1, #500	; 0x1f4
   1604c:	movw	r2, #22403	; 0x5783
   16050:	mov	r3, #0
   16054:	str	r7, [sp]
   16058:	str	r7, [sp, #4]
   1605c:	str	r1, [sp, #8]
   16060:	orr	r1, sl, r9
   16064:	movt	r2, #4
   16068:	orr	r1, r1, r6
   1606c:	orr	r1, r1, r5
   16070:	orr	r5, r1, r0
   16074:	movw	r1, #22301	; 0x571d
   16078:	mov	r0, r4
   1607c:	movt	r1, #4
   16080:	bl	15040 <test_json@@Base>
   16084:	orr	r0, r5, r0
   16088:	sub	sp, fp, #28
   1608c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00016090 <main@@Base>:
   16090:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16094:	add	fp, sp, #28
   16098:	sub	sp, sp, #284	; 0x11c
   1609c:	bl	15458 <edge_case_tests@@Base>
   160a0:	str	r0, [fp, #-32]	; 0xffffffe0
   160a4:	bl	15800 <error_case_tests@@Base>
   160a8:	str	r0, [fp, #-36]	; 0xffffffdc
   160ac:	bl	15f44 <union_vector_tests@@Base>
   160b0:	str	r0, [fp, #-40]	; 0xffffffd8
   160b4:	bl	15ba0 <base64_tests@@Base>
   160b8:	str	r0, [fp, #-44]	; 0xffffffd4
   160bc:	bl	15dc4 <mixed_type_union_tests@@Base>
   160c0:	movw	r4, #28688	; 0x7010
   160c4:	movw	sl, #13972	; 0x3694
   160c8:	movw	r1, #22495	; 0x57df
   160cc:	str	r0, [fp, #-48]	; 0xffffffd0
   160d0:	movw	r0, #525	; 0x20d
   160d4:	mov	r8, #0
   160d8:	mov	r3, #0
   160dc:	movt	sl, #4
   160e0:	movt	r4, #4
   160e4:	str	r0, [sp, #8]
   160e8:	movt	r1, #4
   160ec:	str	r8, [sp]
   160f0:	str	r8, [sp, #4]
   160f4:	mov	r0, r4
   160f8:	mov	r2, sl
   160fc:	bl	15040 <test_json@@Base>
   16100:	movw	r7, #22557	; 0x581d
   16104:	movw	r1, #22518	; 0x57f6
   16108:	str	r0, [fp, #-52]	; 0xffffffcc
   1610c:	mov	r0, #528	; 0x210
   16110:	mov	r3, #0
   16114:	str	r8, [sp]
   16118:	str	r8, [sp, #4]
   1611c:	movt	r7, #4
   16120:	str	r0, [sp, #8]
   16124:	movt	r1, #4
   16128:	mov	r0, r4
   1612c:	mov	r2, r7
   16130:	bl	15040 <test_json@@Base>
   16134:	movw	r6, #22630	; 0x5866
   16138:	movw	r1, #22590	; 0x583e
   1613c:	str	r0, [fp, #-56]	; 0xffffffc8
   16140:	movw	r0, #531	; 0x213
   16144:	mov	r3, #0
   16148:	str	r8, [sp]
   1614c:	str	r8, [sp, #4]
   16150:	movt	r6, #4
   16154:	str	r0, [sp, #8]
   16158:	movt	r1, #4
   1615c:	mov	r0, r4
   16160:	mov	r2, r6
   16164:	bl	15040 <test_json@@Base>
   16168:	movw	r9, #22714	; 0x58ba
   1616c:	movw	r1, #22665	; 0x5889
   16170:	str	r0, [fp, #-60]	; 0xffffffc4
   16174:	movw	r0, #534	; 0x216
   16178:	mov	r3, #0
   1617c:	str	r8, [sp]
   16180:	str	r8, [sp, #4]
   16184:	movt	r9, #4
   16188:	str	r0, [sp, #8]
   1618c:	movt	r1, #4
   16190:	mov	r0, r4
   16194:	mov	r2, r9
   16198:	bl	15040 <test_json@@Base>
   1619c:	movw	r1, #22758	; 0x58e6
   161a0:	str	r0, [fp, #-64]	; 0xffffffc0
   161a4:	movw	r0, #537	; 0x219
   161a8:	mov	r2, r9
   161ac:	mov	r3, #0
   161b0:	str	r8, [sp]
   161b4:	str	r8, [sp, #4]
   161b8:	str	r0, [sp, #8]
   161bc:	movt	r1, #4
   161c0:	mov	r0, r4
   161c4:	bl	15040 <test_json@@Base>
   161c8:	movw	r1, #22816	; 0x5920
   161cc:	str	r0, [fp, #-68]	; 0xffffffbc
   161d0:	mov	r0, #540	; 0x21c
   161d4:	mov	r2, r7
   161d8:	mov	r3, #0
   161dc:	str	r8, [sp]
   161e0:	str	r8, [sp, #4]
   161e4:	str	r0, [sp, #8]
   161e8:	movt	r1, #4
   161ec:	mov	r0, r4
   161f0:	bl	15040 <test_json@@Base>
   161f4:	movw	r1, #22854	; 0x5946
   161f8:	str	r0, [fp, #-72]	; 0xffffffb8
   161fc:	movw	r0, #543	; 0x21f
   16200:	mov	r2, r6
   16204:	mov	r3, #0
   16208:	str	r8, [sp]
   1620c:	str	r8, [sp, #4]
   16210:	str	r0, [sp, #8]
   16214:	movt	r1, #4
   16218:	mov	r0, r4
   1621c:	bl	15040 <test_json@@Base>
   16220:	movw	r1, #22895	; 0x596f
   16224:	str	r0, [fp, #-76]	; 0xffffffb4
   16228:	movw	r0, #547	; 0x223
   1622c:	mov	r2, sl
   16230:	mov	r3, #0
   16234:	str	r8, [sp]
   16238:	str	r8, [sp, #4]
   1623c:	str	r0, [sp, #8]
   16240:	movt	r1, #4
   16244:	mov	r0, r4
   16248:	bl	15040 <test_json@@Base>
   1624c:	movw	r1, #13837	; 0x360d
   16250:	str	r0, [fp, #-80]	; 0xffffffb0
   16254:	movw	r0, #551	; 0x227
   16258:	mov	r2, sl
   1625c:	mov	r3, #0
   16260:	str	r8, [sp]
   16264:	str	r8, [sp, #4]
   16268:	str	r0, [sp, #8]
   1626c:	movt	r1, #4
   16270:	mov	r0, r4
   16274:	bl	15040 <test_json@@Base>
   16278:	movw	r1, #22934	; 0x5996
   1627c:	str	r0, [fp, #-84]	; 0xffffffac
   16280:	movw	r0, #555	; 0x22b
   16284:	mov	r2, sl
   16288:	mov	r3, #0
   1628c:	str	r8, [sp]
   16290:	str	r8, [sp, #4]
   16294:	str	r0, [sp, #8]
   16298:	movt	r1, #4
   1629c:	mov	r0, r4
   162a0:	bl	15040 <test_json@@Base>
   162a4:	movw	r1, #22955	; 0x59ab
   162a8:	str	r0, [fp, #-88]	; 0xffffffa8
   162ac:	movw	r0, #558	; 0x22e
   162b0:	mov	r2, r7
   162b4:	mov	r3, #0
   162b8:	str	r8, [sp]
   162bc:	str	r8, [sp, #4]
   162c0:	str	r0, [sp, #8]
   162c4:	movt	r1, #4
   162c8:	mov	r0, r4
   162cc:	bl	15040 <test_json@@Base>
   162d0:	movw	r1, #22990	; 0x59ce
   162d4:	str	r0, [fp, #-92]	; 0xffffffa4
   162d8:	movw	r0, #561	; 0x231
   162dc:	mov	r2, r6
   162e0:	mov	r3, #0
   162e4:	str	r8, [sp]
   162e8:	str	r8, [sp, #4]
   162ec:	str	r0, [sp, #8]
   162f0:	movt	r1, #4
   162f4:	mov	r0, r4
   162f8:	bl	15040 <test_json@@Base>
   162fc:	movw	r1, #23026	; 0x59f2
   16300:	str	r0, [fp, #-96]	; 0xffffffa0
   16304:	mov	r0, #564	; 0x234
   16308:	mov	r2, r9
   1630c:	mov	r3, #0
   16310:	str	r8, [sp]
   16314:	str	r8, [sp, #4]
   16318:	str	r0, [sp, #8]
   1631c:	movt	r1, #4
   16320:	mov	r0, r4
   16324:	bl	15040 <test_json@@Base>
   16328:	movw	r1, #23071	; 0x5a1f
   1632c:	str	r0, [fp, #-100]	; 0xffffff9c
   16330:	movw	r0, #567	; 0x237
   16334:	mov	r2, r9
   16338:	mov	r3, #0
   1633c:	str	r8, [sp]
   16340:	str	r8, [sp, #4]
   16344:	str	r0, [sp, #8]
   16348:	movt	r1, #4
   1634c:	mov	r0, r4
   16350:	bl	15040 <test_json@@Base>
   16354:	movw	r1, #23125	; 0x5a55
   16358:	str	r0, [fp, #-104]	; 0xffffff98
   1635c:	movw	r0, #570	; 0x23a
   16360:	mov	r2, r7
   16364:	mov	r3, #0
   16368:	str	r8, [sp]
   1636c:	str	r8, [sp, #4]
   16370:	str	r0, [sp, #8]
   16374:	movt	r1, #4
   16378:	mov	r0, r4
   1637c:	bl	15040 <test_json@@Base>
   16380:	movw	r1, #23157	; 0x5a75
   16384:	str	r0, [fp, #-108]	; 0xffffff94
   16388:	movw	r0, #573	; 0x23d
   1638c:	mov	r2, r6
   16390:	mov	r3, #0
   16394:	str	r8, [sp]
   16398:	str	r8, [sp, #4]
   1639c:	str	r0, [sp, #8]
   163a0:	movt	r1, #4
   163a4:	mov	r0, r4
   163a8:	bl	15040 <test_json@@Base>
   163ac:	movw	r1, #23191	; 0x5a97
   163b0:	str	r0, [fp, #-112]	; 0xffffff90
   163b4:	movw	r0, #577	; 0x241
   163b8:	mov	r2, sl
   163bc:	mov	r3, #0
   163c0:	str	r8, [sp]
   163c4:	str	r8, [sp, #4]
   163c8:	str	r0, [sp, #8]
   163cc:	movt	r1, #4
   163d0:	mov	r0, r4
   163d4:	bl	15040 <test_json@@Base>
   163d8:	movw	r1, #14550	; 0x38d6
   163dc:	str	r0, [fp, #-116]	; 0xffffff8c
   163e0:	movw	r0, #581	; 0x245
   163e4:	mov	r2, sl
   163e8:	mov	r3, #0
   163ec:	str	r8, [sp]
   163f0:	str	r8, [sp, #4]
   163f4:	str	r0, [sp, #8]
   163f8:	movt	r1, #4
   163fc:	mov	r0, r4
   16400:	bl	15040 <test_json@@Base>
   16404:	movw	r5, #23262	; 0x5ade
   16408:	movw	r1, #23224	; 0x5ab8
   1640c:	str	r0, [fp, #-120]	; 0xffffff88
   16410:	movw	r0, #585	; 0x249
   16414:	mov	r3, #0
   16418:	str	r8, [sp]
   1641c:	str	r8, [sp, #4]
   16420:	movt	r5, #4
   16424:	str	r0, [sp, #8]
   16428:	movt	r1, #4
   1642c:	mov	r0, r4
   16430:	mov	r2, r5
   16434:	bl	15040 <test_json@@Base>
   16438:	movw	r1, #23301	; 0x5b05
   1643c:	str	r0, [fp, #-124]	; 0xffffff84
   16440:	movw	r0, #591	; 0x24f
   16444:	mov	r2, r5
   16448:	mov	r3, #0
   1644c:	str	r8, [sp]
   16450:	str	r8, [sp, #4]
   16454:	str	r0, [sp, #8]
   16458:	movt	r1, #4
   1645c:	mov	r0, r4
   16460:	bl	15040 <test_json@@Base>
   16464:	movw	r1, #23338	; 0x5b2a
   16468:	str	r0, [fp, #-128]	; 0xffffff80
   1646c:	movw	r0, #594	; 0x252
   16470:	mov	r2, r5
   16474:	mov	r3, #0
   16478:	str	r8, [sp]
   1647c:	str	r8, [sp, #4]
   16480:	str	r0, [sp, #8]
   16484:	movt	r1, #4
   16488:	mov	r0, r4
   1648c:	bl	15040 <test_json@@Base>
   16490:	movw	r1, #23375	; 0x5b4f
   16494:	str	r0, [fp, #-132]	; 0xffffff7c
   16498:	movw	r0, #597	; 0x255
   1649c:	mov	r2, r9
   164a0:	mov	r3, #0
   164a4:	str	r8, [sp]
   164a8:	str	r8, [sp, #4]
   164ac:	str	r0, [sp, #8]
   164b0:	movt	r1, #4
   164b4:	mov	r0, r4
   164b8:	bl	15040 <test_json@@Base>
   164bc:	movw	r1, #23421	; 0x5b7d
   164c0:	str	r0, [fp, #-136]	; 0xffffff78
   164c4:	movw	r0, #601	; 0x259
   164c8:	mov	r2, r7
   164cc:	mov	r3, #0
   164d0:	str	r8, [sp]
   164d4:	str	r8, [sp, #4]
   164d8:	str	r0, [sp, #8]
   164dc:	movt	r1, #4
   164e0:	mov	r0, r4
   164e4:	bl	15040 <test_json@@Base>
   164e8:	movw	r1, #23454	; 0x5b9e
   164ec:	str	r0, [fp, #-140]	; 0xffffff74
   164f0:	mov	r0, #604	; 0x25c
   164f4:	mov	r2, r6
   164f8:	mov	r3, #0
   164fc:	str	r8, [sp]
   16500:	str	r8, [sp, #4]
   16504:	str	r0, [sp, #8]
   16508:	movt	r1, #4
   1650c:	mov	r0, r4
   16510:	bl	15040 <test_json@@Base>
   16514:	movw	r1, #23487	; 0x5bbf
   16518:	movw	r2, #23520	; 0x5be0
   1651c:	str	r0, [fp, #-144]	; 0xffffff70
   16520:	movw	r0, #607	; 0x25f
   16524:	mov	r3, #0
   16528:	str	r8, [sp]
   1652c:	str	r8, [sp, #4]
   16530:	str	r0, [sp, #8]
   16534:	movt	r1, #4
   16538:	movt	r2, #4
   1653c:	mov	r0, r4
   16540:	bl	15040 <test_json@@Base>
   16544:	movw	r1, #23558	; 0x5c06
   16548:	str	r0, [fp, #-148]	; 0xffffff6c
   1654c:	movw	r0, #610	; 0x262
   16550:	mov	r2, r9
   16554:	mov	r3, #0
   16558:	str	r8, [sp]
   1655c:	str	r8, [sp, #4]
   16560:	str	r0, [sp, #8]
   16564:	movt	r1, #4
   16568:	mov	r0, r4
   1656c:	bl	15040 <test_json@@Base>
   16570:	movw	r1, #23592	; 0x5c28
   16574:	movw	r2, #23626	; 0x5c4a
   16578:	str	r0, [fp, #-152]	; 0xffffff68
   1657c:	movw	r0, #613	; 0x265
   16580:	mov	r3, #0
   16584:	str	r8, [sp]
   16588:	str	r8, [sp, #4]
   1658c:	str	r0, [sp, #8]
   16590:	movt	r1, #4
   16594:	movt	r2, #4
   16598:	mov	r0, r4
   1659c:	bl	15040 <test_json@@Base>
   165a0:	movw	r1, #23656	; 0x5c68
   165a4:	movw	r2, #23690	; 0x5c8a
   165a8:	str	r0, [sp, #156]	; 0x9c
   165ac:	mov	r0, #616	; 0x268
   165b0:	mov	r3, #0
   165b4:	str	r8, [sp]
   165b8:	str	r8, [sp, #4]
   165bc:	str	r0, [sp, #8]
   165c0:	movt	r1, #4
   165c4:	movt	r2, #4
   165c8:	mov	r0, r4
   165cc:	bl	15040 <test_json@@Base>
   165d0:	movw	r1, #23720	; 0x5ca8
   165d4:	movw	r2, #23753	; 0x5cc9
   165d8:	str	r0, [sp, #152]	; 0x98
   165dc:	movw	r0, #619	; 0x26b
   165e0:	mov	r3, #0
   165e4:	str	r8, [sp]
   165e8:	str	r8, [sp, #4]
   165ec:	str	r0, [sp, #8]
   165f0:	movt	r1, #4
   165f4:	movt	r2, #4
   165f8:	mov	r0, r4
   165fc:	bl	15040 <test_json@@Base>
   16600:	movw	r1, #23782	; 0x5ce6
   16604:	str	r0, [sp, #148]	; 0x94
   16608:	movw	r0, #622	; 0x26e
   1660c:	mov	r2, r7
   16610:	mov	r3, #0
   16614:	str	r8, [sp]
   16618:	str	r8, [sp, #4]
   1661c:	str	r0, [sp, #8]
   16620:	movt	r1, #4
   16624:	mov	r0, r4
   16628:	bl	15040 <test_json@@Base>
   1662c:	movw	r1, #23825	; 0x5d11
   16630:	str	r0, [sp, #144]	; 0x90
   16634:	movw	r0, #625	; 0x271
   16638:	mov	r2, r7
   1663c:	mov	r3, #0
   16640:	str	r8, [sp]
   16644:	str	r8, [sp, #4]
   16648:	str	r0, [sp, #8]
   1664c:	movt	r1, #4
   16650:	mov	r0, r4
   16654:	bl	15040 <test_json@@Base>
   16658:	movw	r6, #23883	; 0x5d4b
   1665c:	movw	r5, #23925	; 0x5d75
   16660:	str	r0, [sp, #140]	; 0x8c
   16664:	mov	r0, #628	; 0x274
   16668:	mov	r3, #0
   1666c:	str	r8, [sp]
   16670:	str	r8, [sp, #4]
   16674:	movt	r6, #4
   16678:	movt	r5, #4
   1667c:	str	r0, [sp, #8]
   16680:	mov	r0, r4
   16684:	mov	r1, r6
   16688:	mov	r2, r5
   1668c:	bl	15040 <test_json@@Base>
   16690:	str	r0, [sp, #136]	; 0x88
   16694:	movw	r0, #631	; 0x277
   16698:	mov	r1, r6
   1669c:	mov	r2, r5
   166a0:	mov	r3, #0
   166a4:	str	r8, [sp]
   166a8:	str	r8, [sp, #4]
   166ac:	str	r0, [sp, #8]
   166b0:	mov	r0, r4
   166b4:	bl	15040 <test_json@@Base>
   166b8:	movw	r1, #23951	; 0x5d8f
   166bc:	movw	r2, #24032	; 0x5de0
   166c0:	str	r0, [sp, #132]	; 0x84
   166c4:	movw	r0, #634	; 0x27a
   166c8:	mov	r3, #0
   166cc:	str	r8, [sp]
   166d0:	str	r8, [sp, #4]
   166d4:	str	r0, [sp, #8]
   166d8:	movt	r1, #4
   166dc:	movt	r2, #4
   166e0:	mov	r0, r4
   166e4:	bl	15040 <test_json@@Base>
   166e8:	movw	r1, #24103	; 0x5e27
   166ec:	movw	r2, #24188	; 0x5e7c
   166f0:	str	r0, [sp, #128]	; 0x80
   166f4:	movw	r0, #638	; 0x27e
   166f8:	mov	r3, #0
   166fc:	str	r8, [sp]
   16700:	str	r8, [sp, #4]
   16704:	str	r0, [sp, #8]
   16708:	movt	r1, #4
   1670c:	movt	r2, #4
   16710:	mov	r0, r4
   16714:	bl	15040 <test_json@@Base>
   16718:	movw	r1, #24262	; 0x5ec6
   1671c:	movw	r2, #24373	; 0x5f35
   16720:	str	r0, [sp, #124]	; 0x7c
   16724:	movw	r0, #642	; 0x282
   16728:	mov	r3, #0
   1672c:	str	r8, [sp]
   16730:	str	r8, [sp, #4]
   16734:	str	r0, [sp, #8]
   16738:	movt	r1, #4
   1673c:	movt	r2, #4
   16740:	mov	r0, r4
   16744:	bl	15040 <test_json@@Base>
   16748:	movw	r1, #24471	; 0x5f97
   1674c:	str	r0, [sp, #120]	; 0x78
   16750:	movw	r0, #646	; 0x286
   16754:	mov	r2, sl
   16758:	mov	r3, #0
   1675c:	str	r8, [sp]
   16760:	str	r8, [sp, #4]
   16764:	str	r0, [sp, #8]
   16768:	movt	r1, #4
   1676c:	mov	r0, r4
   16770:	bl	15040 <test_json@@Base>
   16774:	movw	r1, #24514	; 0x5fc2
   16778:	str	r0, [sp, #116]	; 0x74
   1677c:	movw	r0, #649	; 0x289
   16780:	mov	r2, sl
   16784:	mov	r3, #0
   16788:	str	r8, [sp]
   1678c:	str	r8, [sp, #4]
   16790:	str	r0, [sp, #8]
   16794:	movt	r1, #4
   16798:	mov	r0, r4
   1679c:	bl	15040 <test_json@@Base>
   167a0:	movw	r1, #24552	; 0x5fe8
   167a4:	str	r0, [sp, #112]	; 0x70
   167a8:	movw	r0, #653	; 0x28d
   167ac:	mov	r2, r7
   167b0:	mov	r3, #0
   167b4:	str	r8, [sp]
   167b8:	str	r8, [sp, #4]
   167bc:	str	r0, [sp, #8]
   167c0:	movt	r1, #4
   167c4:	mov	r0, r4
   167c8:	bl	15040 <test_json@@Base>
   167cc:	movw	r1, #24581	; 0x6005
   167d0:	movw	r2, #22630	; 0x5866
   167d4:	str	r0, [sp, #108]	; 0x6c
   167d8:	mov	r0, #656	; 0x290
   167dc:	mov	r3, #0
   167e0:	str	r8, [sp]
   167e4:	str	r8, [sp, #4]
   167e8:	str	r0, [sp, #8]
   167ec:	movt	r1, #4
   167f0:	mov	r0, r4
   167f4:	movt	r2, #4
   167f8:	bl	15040 <test_json@@Base>
   167fc:	movw	r1, #24610	; 0x6022
   16800:	movw	r2, #23520	; 0x5be0
   16804:	str	r0, [sp, #104]	; 0x68
   16808:	movw	r0, #659	; 0x293
   1680c:	mov	r3, #0
   16810:	str	r8, [sp]
   16814:	str	r8, [sp, #4]
   16818:	str	r0, [sp, #8]
   1681c:	movt	r1, #4
   16820:	mov	r0, r4
   16824:	movt	r2, #4
   16828:	bl	15040 <test_json@@Base>
   1682c:	movw	r1, #24639	; 0x603f
   16830:	str	r0, [sp, #100]	; 0x64
   16834:	movw	r0, #662	; 0x296
   16838:	mov	r2, r9
   1683c:	mov	r3, #0
   16840:	str	r8, [sp]
   16844:	str	r8, [sp, #4]
   16848:	str	r0, [sp, #8]
   1684c:	movt	r1, #4
   16850:	mov	r0, r4
   16854:	bl	15040 <test_json@@Base>
   16858:	movw	r1, #24669	; 0x605d
   1685c:	movw	r2, #23626	; 0x5c4a
   16860:	str	r0, [sp, #96]	; 0x60
   16864:	movw	r0, #665	; 0x299
   16868:	mov	r3, #0
   1686c:	str	r8, [sp]
   16870:	str	r8, [sp, #4]
   16874:	str	r0, [sp, #8]
   16878:	movt	r1, #4
   1687c:	mov	r0, r4
   16880:	movt	r2, #4
   16884:	bl	15040 <test_json@@Base>
   16888:	movw	r1, #24699	; 0x607b
   1688c:	movw	r2, #23690	; 0x5c8a
   16890:	str	r0, [sp, #92]	; 0x5c
   16894:	mov	r0, #668	; 0x29c
   16898:	mov	r3, #0
   1689c:	str	r8, [sp]
   168a0:	str	r8, [sp, #4]
   168a4:	str	r0, [sp, #8]
   168a8:	movt	r1, #4
   168ac:	mov	r0, r4
   168b0:	movt	r2, #4
   168b4:	bl	15040 <test_json@@Base>
   168b8:	movw	r1, #24729	; 0x6099
   168bc:	movw	r2, #23753	; 0x5cc9
   168c0:	str	r0, [sp, #88]	; 0x58
   168c4:	movw	r0, #671	; 0x29f
   168c8:	mov	r3, #0
   168cc:	str	r8, [sp]
   168d0:	str	r8, [sp, #4]
   168d4:	str	r0, [sp, #8]
   168d8:	movt	r1, #4
   168dc:	mov	r0, r4
   168e0:	movt	r2, #4
   168e4:	bl	15040 <test_json@@Base>
   168e8:	movw	r1, #24758	; 0x60b6
   168ec:	str	r0, [sp, #84]	; 0x54
   168f0:	movw	r0, #674	; 0x2a2
   168f4:	mov	r2, r7
   168f8:	mov	r3, #0
   168fc:	str	r8, [sp]
   16900:	str	r8, [sp, #4]
   16904:	str	r0, [sp, #8]
   16908:	movt	r1, #4
   1690c:	mov	r0, r4
   16910:	bl	15040 <test_json@@Base>
   16914:	movw	r1, #24795	; 0x60db
   16918:	str	r0, [sp, #80]	; 0x50
   1691c:	movw	r0, #677	; 0x2a5
   16920:	mov	r2, r7
   16924:	mov	r3, #0
   16928:	str	r8, [sp]
   1692c:	str	r8, [sp, #4]
   16930:	str	r0, [sp, #8]
   16934:	movt	r1, #4
   16938:	mov	r0, r4
   1693c:	bl	15040 <test_json@@Base>
   16940:	movw	r6, #24847	; 0x610f
   16944:	str	r0, [sp, #76]	; 0x4c
   16948:	mov	r0, #680	; 0x2a8
   1694c:	mov	r2, r5
   16950:	mov	r3, #0
   16954:	str	r8, [sp]
   16958:	str	r8, [sp, #4]
   1695c:	movt	r6, #4
   16960:	str	r0, [sp, #8]
   16964:	mov	r0, r4
   16968:	mov	r1, r6
   1696c:	bl	15040 <test_json@@Base>
   16970:	str	r0, [sp, #72]	; 0x48
   16974:	movw	r0, #683	; 0x2ab
   16978:	mov	r1, r6
   1697c:	mov	r2, r5
   16980:	mov	r3, #0
   16984:	str	r8, [sp]
   16988:	str	r8, [sp, #4]
   1698c:	str	r0, [sp, #8]
   16990:	mov	r0, r4
   16994:	bl	15040 <test_json@@Base>
   16998:	movw	r1, #24883	; 0x6133
   1699c:	movw	r2, #24032	; 0x5de0
   169a0:	str	r0, [sp, #68]	; 0x44
   169a4:	movw	r0, #686	; 0x2ae
   169a8:	mov	r3, #0
   169ac:	str	r8, [sp]
   169b0:	str	r8, [sp, #4]
   169b4:	str	r0, [sp, #8]
   169b8:	movt	r1, #4
   169bc:	mov	r0, r4
   169c0:	movt	r2, #4
   169c4:	bl	15040 <test_json@@Base>
   169c8:	movw	r1, #24954	; 0x617a
   169cc:	movw	r2, #24188	; 0x5e7c
   169d0:	str	r0, [sp, #64]	; 0x40
   169d4:	movw	r0, #690	; 0x2b2
   169d8:	mov	r3, #0
   169dc:	str	r8, [sp]
   169e0:	str	r8, [sp, #4]
   169e4:	str	r0, [sp, #8]
   169e8:	movt	r1, #4
   169ec:	mov	r0, r4
   169f0:	movt	r2, #4
   169f4:	bl	15040 <test_json@@Base>
   169f8:	movw	r1, #25029	; 0x61c5
   169fc:	movw	r2, #24373	; 0x5f35
   16a00:	str	r0, [sp, #60]	; 0x3c
   16a04:	movw	r0, #694	; 0x2b6
   16a08:	mov	r3, #0
   16a0c:	str	r8, [sp]
   16a10:	str	r8, [sp, #4]
   16a14:	str	r0, [sp, #8]
   16a18:	movt	r1, #4
   16a1c:	mov	r0, r4
   16a20:	movt	r2, #4
   16a24:	bl	15040 <test_json@@Base>
   16a28:	movw	r1, #25124	; 0x6224
   16a2c:	str	r0, [sp, #56]	; 0x38
   16a30:	movw	r0, #698	; 0x2ba
   16a34:	mov	r2, sl
   16a38:	mov	r3, #0
   16a3c:	str	r8, [sp]
   16a40:	str	r8, [sp, #4]
   16a44:	str	r0, [sp, #8]
   16a48:	movt	r1, #4
   16a4c:	mov	r0, r4
   16a50:	bl	15040 <test_json@@Base>
   16a54:	movw	r1, #25161	; 0x6249
   16a58:	str	r0, [sp, #52]	; 0x34
   16a5c:	movw	r0, #701	; 0x2bd
   16a60:	mov	r2, sl
   16a64:	mov	r3, #0
   16a68:	str	r8, [sp]
   16a6c:	str	r8, [sp, #4]
   16a70:	str	r0, [sp, #8]
   16a74:	movt	r1, #4
   16a78:	mov	r0, r4
   16a7c:	bl	15040 <test_json@@Base>
   16a80:	movw	r5, #25288	; 0x62c8
   16a84:	movw	r1, #25195	; 0x626b
   16a88:	str	r0, [sp, #48]	; 0x30
   16a8c:	movw	r0, #711	; 0x2c7
   16a90:	mov	r3, #0
   16a94:	str	r8, [sp]
   16a98:	str	r8, [sp, #4]
   16a9c:	movt	r5, #4
   16aa0:	str	r0, [sp, #8]
   16aa4:	movt	r1, #4
   16aa8:	mov	r0, r4
   16aac:	mov	r2, r5
   16ab0:	bl	15040 <test_json@@Base>
   16ab4:	movw	r1, #25382	; 0x6326
   16ab8:	str	r0, [sp, #44]	; 0x2c
   16abc:	mov	r0, #716	; 0x2cc
   16ac0:	mov	r2, r5
   16ac4:	mov	r3, #0
   16ac8:	str	r8, [sp]
   16acc:	str	r8, [sp, #4]
   16ad0:	str	r0, [sp, #8]
   16ad4:	movt	r1, #4
   16ad8:	mov	r0, r4
   16adc:	bl	15040 <test_json@@Base>
   16ae0:	movw	r1, #25491	; 0x6393
   16ae4:	movw	r2, #25552	; 0x63d0
   16ae8:	str	r0, [sp, #40]	; 0x28
   16aec:	movw	r0, #731	; 0x2db
   16af0:	mov	r3, #0
   16af4:	str	r8, [sp]
   16af8:	str	r8, [sp, #4]
   16afc:	str	r0, [sp, #8]
   16b00:	movt	r1, #4
   16b04:	movt	r2, #4
   16b08:	mov	r0, r4
   16b0c:	bl	15040 <test_json@@Base>
   16b10:	movw	r1, #25600	; 0x6400
   16b14:	movw	r2, #25626	; 0x641a
   16b18:	str	r0, [sp, #36]	; 0x24
   16b1c:	movw	r0, #734	; 0x2de
   16b20:	mov	r3, #0
   16b24:	str	r8, [sp]
   16b28:	str	r8, [sp, #4]
   16b2c:	str	r0, [sp, #8]
   16b30:	movt	r1, #4
   16b34:	movt	r2, #4
   16b38:	mov	r0, r4
   16b3c:	bl	15040 <test_json@@Base>
   16b40:	movw	r5, #25716	; 0x6474
   16b44:	movw	r1, #25644	; 0x642c
   16b48:	str	r0, [sp, #32]
   16b4c:	movw	r0, #738	; 0x2e2
   16b50:	mov	r3, #0
   16b54:	str	r8, [sp]
   16b58:	str	r8, [sp, #4]
   16b5c:	movt	r5, #4
   16b60:	str	r0, [sp, #8]
   16b64:	movt	r1, #4
   16b68:	mov	r0, r4
   16b6c:	mov	r2, r5
   16b70:	bl	15040 <test_json@@Base>
   16b74:	movw	r1, #25781	; 0x64b5
   16b78:	str	r0, [sp, #28]
   16b7c:	movw	r0, #750	; 0x2ee
   16b80:	mov	r2, r5
   16b84:	mov	r3, #0
   16b88:	str	r8, [sp]
   16b8c:	str	r8, [sp, #4]
   16b90:	str	r0, [sp, #8]
   16b94:	movt	r1, #4
   16b98:	mov	r0, r4
   16b9c:	bl	15040 <test_json@@Base>
   16ba0:	movw	r1, #25938	; 0x6552
   16ba4:	movw	r2, #25977	; 0x6579
   16ba8:	str	r0, [sp, #24]
   16bac:	movw	r0, #766	; 0x2fe
   16bb0:	mov	r3, #0
   16bb4:	str	r8, [sp]
   16bb8:	str	r8, [sp, #4]
   16bbc:	str	r0, [sp, #8]
   16bc0:	movt	r1, #4
   16bc4:	movt	r2, #4
   16bc8:	mov	r0, r4
   16bcc:	bl	15040 <test_json@@Base>
   16bd0:	movw	r1, #26011	; 0x659b
   16bd4:	movw	r2, #26058	; 0x65ca
   16bd8:	str	r0, [sp, #20]
   16bdc:	movw	r0, #770	; 0x302
   16be0:	mov	r3, #0
   16be4:	str	r8, [sp]
   16be8:	str	r8, [sp, #4]
   16bec:	str	r0, [sp, #8]
   16bf0:	movt	r1, #4
   16bf4:	movt	r2, #4
   16bf8:	mov	r0, r4
   16bfc:	bl	15040 <test_json@@Base>
   16c00:	movw	r1, #26100	; 0x65f4
   16c04:	movw	r2, #26223	; 0x666f
   16c08:	str	r0, [sp, #16]
   16c0c:	mov	r0, #776	; 0x308
   16c10:	mov	r3, #0
   16c14:	str	r8, [sp]
   16c18:	str	r8, [sp, #4]
   16c1c:	str	r0, [sp, #8]
   16c20:	movt	r1, #4
   16c24:	movt	r2, #4
   16c28:	mov	r0, r4
   16c2c:	bl	15040 <test_json@@Base>
   16c30:	movw	r1, #26335	; 0x66df
   16c34:	mov	r7, r0
   16c38:	movw	r0, #781	; 0x30d
   16c3c:	mov	r2, sl
   16c40:	mov	r3, #0
   16c44:	str	r8, [sp]
   16c48:	str	r8, [sp, #4]
   16c4c:	str	r0, [sp, #8]
   16c50:	movt	r1, #4
   16c54:	mov	r0, r4
   16c58:	bl	15040 <test_json@@Base>
   16c5c:	movw	r1, #26455	; 0x6757
   16c60:	movw	r2, #26577	; 0x67d1
   16c64:	mov	r5, r0
   16c68:	movw	r0, #786	; 0x312
   16c6c:	mov	r3, #0
   16c70:	str	r8, [sp]
   16c74:	str	r8, [sp, #4]
   16c78:	str	r0, [sp, #8]
   16c7c:	movt	r1, #4
   16c80:	movt	r2, #4
   16c84:	mov	r0, r4
   16c88:	bl	15040 <test_json@@Base>
   16c8c:	movw	r1, #26688	; 0x6840
   16c90:	movw	r2, #26827	; 0x68cb
   16c94:	mov	r6, r0
   16c98:	movw	r0, #791	; 0x317
   16c9c:	mov	r3, #0
   16ca0:	str	r8, [sp]
   16ca4:	str	r8, [sp, #4]
   16ca8:	str	r0, [sp, #8]
   16cac:	movt	r1, #4
   16cb0:	movt	r2, #4
   16cb4:	mov	r0, r4
   16cb8:	bl	15040 <test_json@@Base>
   16cbc:	movw	r1, #26953	; 0x6949
   16cc0:	movw	r2, #27076	; 0x69c4
   16cc4:	mov	sl, r0
   16cc8:	mov	r0, #796	; 0x31c
   16ccc:	mov	r3, #0
   16cd0:	str	r8, [sp]
   16cd4:	str	r8, [sp, #4]
   16cd8:	str	r0, [sp, #8]
   16cdc:	movt	r1, #4
   16ce0:	movt	r2, #4
   16ce4:	mov	r0, r4
   16ce8:	bl	15040 <test_json@@Base>
   16cec:	movw	r1, #27188	; 0x6a34
   16cf0:	movw	r2, #27326	; 0x6abe
   16cf4:	mov	r9, r0
   16cf8:	movw	r0, #801	; 0x321
   16cfc:	mov	r3, #0
   16d00:	str	r8, [sp]
   16d04:	str	r8, [sp, #4]
   16d08:	str	r0, [sp, #8]
   16d0c:	movt	r1, #4
   16d10:	movt	r2, #4
   16d14:	mov	r0, r4
   16d18:	bl	15040 <test_json@@Base>
   16d1c:	movw	r1, #806	; 0x326
   16d20:	ldr	r2, [fp, #-36]	; 0xffffffdc
   16d24:	mov	r3, #0
   16d28:	str	r8, [sp]
   16d2c:	str	r8, [sp, #4]
   16d30:	str	r1, [sp, #8]
   16d34:	ldr	r1, [fp, #-32]	; 0xffffffe0
   16d38:	orr	r1, r2, r1
   16d3c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   16d40:	orr	r1, r1, r2
   16d44:	ldr	r2, [fp, #-44]	; 0xffffffd4
   16d48:	orr	r1, r1, r2
   16d4c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   16d50:	orr	r1, r1, r2
   16d54:	ldr	r2, [fp, #-52]	; 0xffffffcc
   16d58:	orr	r1, r1, r2
   16d5c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16d60:	orr	r1, r1, r2
   16d64:	ldr	r2, [fp, #-60]	; 0xffffffc4
   16d68:	orr	r1, r1, r2
   16d6c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   16d70:	orr	r1, r1, r2
   16d74:	ldr	r2, [fp, #-68]	; 0xffffffbc
   16d78:	orr	r1, r1, r2
   16d7c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   16d80:	orr	r1, r1, r2
   16d84:	ldr	r2, [fp, #-76]	; 0xffffffb4
   16d88:	orr	r1, r1, r2
   16d8c:	ldr	r2, [fp, #-80]	; 0xffffffb0
   16d90:	orr	r1, r1, r2
   16d94:	ldr	r2, [fp, #-84]	; 0xffffffac
   16d98:	orr	r1, r1, r2
   16d9c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   16da0:	orr	r1, r1, r2
   16da4:	ldr	r2, [fp, #-92]	; 0xffffffa4
   16da8:	orr	r1, r1, r2
   16dac:	ldr	r2, [fp, #-96]	; 0xffffffa0
   16db0:	orr	r1, r1, r2
   16db4:	ldr	r2, [fp, #-100]	; 0xffffff9c
   16db8:	orr	r1, r1, r2
   16dbc:	ldr	r2, [fp, #-104]	; 0xffffff98
   16dc0:	orr	r1, r1, r2
   16dc4:	ldr	r2, [fp, #-108]	; 0xffffff94
   16dc8:	orr	r1, r1, r2
   16dcc:	ldr	r2, [fp, #-112]	; 0xffffff90
   16dd0:	orr	r1, r1, r2
   16dd4:	ldr	r2, [fp, #-116]	; 0xffffff8c
   16dd8:	orr	r1, r1, r2
   16ddc:	ldr	r2, [fp, #-120]	; 0xffffff88
   16de0:	orr	r1, r1, r2
   16de4:	ldr	r2, [fp, #-124]	; 0xffffff84
   16de8:	orr	r1, r1, r2
   16dec:	ldr	r2, [fp, #-128]	; 0xffffff80
   16df0:	orr	r1, r1, r2
   16df4:	ldr	r2, [fp, #-132]	; 0xffffff7c
   16df8:	orr	r1, r1, r2
   16dfc:	ldr	r2, [fp, #-136]	; 0xffffff78
   16e00:	orr	r1, r1, r2
   16e04:	ldr	r2, [fp, #-140]	; 0xffffff74
   16e08:	orr	r1, r1, r2
   16e0c:	ldr	r2, [fp, #-144]	; 0xffffff70
   16e10:	orr	r1, r1, r2
   16e14:	ldr	r2, [fp, #-148]	; 0xffffff6c
   16e18:	orr	r1, r1, r2
   16e1c:	ldr	r2, [fp, #-152]	; 0xffffff68
   16e20:	orr	r1, r1, r2
   16e24:	ldr	r2, [sp, #156]	; 0x9c
   16e28:	orr	r1, r1, r2
   16e2c:	ldr	r2, [sp, #152]	; 0x98
   16e30:	orr	r1, r1, r2
   16e34:	ldr	r2, [sp, #148]	; 0x94
   16e38:	orr	r1, r1, r2
   16e3c:	ldr	r2, [sp, #144]	; 0x90
   16e40:	orr	r1, r1, r2
   16e44:	ldr	r2, [sp, #140]	; 0x8c
   16e48:	orr	r1, r1, r2
   16e4c:	ldr	r2, [sp, #136]	; 0x88
   16e50:	orr	r1, r1, r2
   16e54:	ldr	r2, [sp, #132]	; 0x84
   16e58:	orr	r1, r1, r2
   16e5c:	ldr	r2, [sp, #128]	; 0x80
   16e60:	orr	r1, r1, r2
   16e64:	ldr	r2, [sp, #124]	; 0x7c
   16e68:	orr	r1, r1, r2
   16e6c:	ldr	r2, [sp, #120]	; 0x78
   16e70:	orr	r1, r1, r2
   16e74:	ldr	r2, [sp, #116]	; 0x74
   16e78:	orr	r1, r1, r2
   16e7c:	ldr	r2, [sp, #112]	; 0x70
   16e80:	orr	r1, r1, r2
   16e84:	ldr	r2, [sp, #108]	; 0x6c
   16e88:	orr	r1, r1, r2
   16e8c:	ldr	r2, [sp, #104]	; 0x68
   16e90:	orr	r1, r1, r2
   16e94:	ldr	r2, [sp, #100]	; 0x64
   16e98:	orr	r1, r1, r2
   16e9c:	ldr	r2, [sp, #96]	; 0x60
   16ea0:	orr	r1, r1, r2
   16ea4:	ldr	r2, [sp, #92]	; 0x5c
   16ea8:	orr	r1, r1, r2
   16eac:	ldr	r2, [sp, #88]	; 0x58
   16eb0:	orr	r1, r1, r2
   16eb4:	ldr	r2, [sp, #84]	; 0x54
   16eb8:	orr	r1, r1, r2
   16ebc:	ldr	r2, [sp, #80]	; 0x50
   16ec0:	orr	r1, r1, r2
   16ec4:	ldr	r2, [sp, #76]	; 0x4c
   16ec8:	orr	r1, r1, r2
   16ecc:	ldr	r2, [sp, #72]	; 0x48
   16ed0:	orr	r1, r1, r2
   16ed4:	ldr	r2, [sp, #68]	; 0x44
   16ed8:	orr	r1, r1, r2
   16edc:	ldr	r2, [sp, #64]	; 0x40
   16ee0:	orr	r1, r1, r2
   16ee4:	ldr	r2, [sp, #60]	; 0x3c
   16ee8:	orr	r1, r1, r2
   16eec:	ldr	r2, [sp, #56]	; 0x38
   16ef0:	orr	r1, r1, r2
   16ef4:	ldr	r2, [sp, #52]	; 0x34
   16ef8:	orr	r1, r1, r2
   16efc:	ldr	r2, [sp, #48]	; 0x30
   16f00:	orr	r1, r1, r2
   16f04:	ldr	r2, [sp, #44]	; 0x2c
   16f08:	orr	r1, r1, r2
   16f0c:	ldr	r2, [sp, #40]	; 0x28
   16f10:	orr	r1, r1, r2
   16f14:	ldr	r2, [sp, #36]	; 0x24
   16f18:	orr	r1, r1, r2
   16f1c:	ldr	r2, [sp, #32]
   16f20:	orr	r1, r1, r2
   16f24:	ldr	r2, [sp, #28]
   16f28:	orr	r1, r1, r2
   16f2c:	ldr	r2, [sp, #24]
   16f30:	orr	r1, r1, r2
   16f34:	ldr	r2, [sp, #20]
   16f38:	orr	r1, r1, r2
   16f3c:	ldr	r2, [sp, #16]
   16f40:	orr	r1, r1, r2
   16f44:	movw	r2, #27596	; 0x6bcc
   16f48:	orr	r1, r1, r7
   16f4c:	movt	r2, #4
   16f50:	orr	r1, r1, r5
   16f54:	orr	r1, r1, r6
   16f58:	orr	r1, r1, sl
   16f5c:	orr	r1, r1, r9
   16f60:	orr	r5, r1, r0
   16f64:	movw	r1, #27453	; 0x6b3d
   16f68:	mov	r0, r4
   16f6c:	movt	r1, #4
   16f70:	bl	15040 <test_json@@Base>
   16f74:	orrs	r0, r5, r0
   16f78:	mvnne	r0, #0
   16f7c:	sub	sp, fp, #28
   16f80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16f84:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16f88:	add	fp, sp, #28
   16f8c:	sub	sp, sp, #4
   16f90:	vpush	{d8-d9}
   16f94:	sub	sp, sp, #80	; 0x50
   16f98:	mov	r8, r0
   16f9c:	mov	r0, #0
   16fa0:	mov	r4, r1
   16fa4:	mov	r1, #36	; 0x24
   16fa8:	mov	sl, r3
   16fac:	mov	r5, r2
   16fb0:	str	r0, [r3]
   16fb4:	ldr	r0, [r8]
   16fb8:	bl	2f88c <flatcc_builder_start_table@@Base>
   16fbc:	cmp	r0, #0
   16fc0:	beq	16ff0 <main@@Base+0xf60>
   16fc4:	mov	r0, r8
   16fc8:	mov	r1, r4
   16fcc:	mov	r2, r5
   16fd0:	mov	r3, #33	; 0x21
   16fd4:	bl	337ac <flatcc_json_parser_set_error@@Base>
   16fd8:	mov	r4, r0
   16fdc:	mov	r0, r4
   16fe0:	sub	sp, fp, #48	; 0x30
   16fe4:	vpop	{d8-d9}
   16fe8:	add	sp, sp, #4
   16fec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16ff0:	add	r0, sp, #48	; 0x30
   16ff4:	mov	r1, r4
   16ff8:	mov	r2, r5
   16ffc:	mov	r3, #1
   17000:	str	r0, [sp]
   17004:	mov	r0, r8
   17008:	bl	35dbc <flatcc_json_parser_prepare_unions@@Base>
   1700c:	cmp	r0, r5
   17010:	beq	16fc4 <main@@Base+0xf34>
   17014:	cmp	r4, r5
   17018:	beq	1704c <main@@Base+0xfbc>
   1701c:	ldrb	r0, [r4]
   17020:	cmp	r0, #123	; 0x7b
   17024:	bne	1704c <main@@Base+0xfbc>
   17028:	add	r1, r4, #1
   1702c:	sub	r0, r5, r1
   17030:	cmp	r0, #2
   17034:	blt	170e4 <main@@Base+0x1054>
   17038:	ldrb	r0, [r1]
   1703c:	cmp	r0, #32
   17040:	bls	170d4 <main@@Base+0x1044>
   17044:	mov	r4, r1
   17048:	b	170f4 <main@@Base+0x1064>
   1704c:	mov	r0, r8
   17050:	mov	r1, r4
   17054:	mov	r2, r5
   17058:	mov	r3, #21
   1705c:	bl	337ac <flatcc_json_parser_set_error@@Base>
   17060:	mov	r4, r0
   17064:	add	r0, r8, #24
   17068:	ldr	r0, [r0]
   1706c:	cmp	r0, #0
   17070:	bne	16fc4 <main@@Base+0xf34>
   17074:	ldr	r0, [r8]
   17078:	mov	r1, #3
   1707c:	bl	30090 <flatcc_builder_check_required_field@@Base>
   17080:	cmp	r0, #0
   17084:	beq	170b8 <main@@Base+0x1028>
   17088:	ldr	r3, [sp, #48]	; 0x30
   1708c:	mov	r0, r8
   17090:	mov	r1, r4
   17094:	mov	r2, r5
   17098:	bl	35e40 <flatcc_json_parser_finalize_unions@@Base>
   1709c:	mov	r4, r0
   170a0:	ldr	r0, [r8]
   170a4:	bl	3021c <flatcc_builder_end_table@@Base>
   170a8:	cmp	r0, #0
   170ac:	str	r0, [sl]
   170b0:	bne	16fdc <main@@Base+0xf4c>
   170b4:	b	16fc4 <main@@Base+0xf34>
   170b8:	mov	r0, r8
   170bc:	mov	r1, r4
   170c0:	mov	r2, r5
   170c4:	mov	r3, #29
   170c8:	bl	337ac <flatcc_json_parser_set_error@@Base>
   170cc:	mov	r4, r0
   170d0:	b	16fc4 <main@@Base+0xf34>
   170d4:	bne	170e4 <main@@Base+0x1054>
   170d8:	ldrb	r0, [r4, #2]!
   170dc:	cmp	r0, #32
   170e0:	bhi	170f4 <main@@Base+0x1064>
   170e4:	mov	r0, r8
   170e8:	mov	r2, r5
   170ec:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   170f0:	mov	r4, r0
   170f4:	cmp	r4, r5
   170f8:	mov	r2, r5
   170fc:	beq	17134 <main@@Base+0x10a4>
   17100:	ldrb	r0, [r4]
   17104:	cmp	r0, #125	; 0x7d
   17108:	bne	17130 <main@@Base+0x10a0>
   1710c:	add	r1, r4, #1
   17110:	sub	r0, r5, r1
   17114:	cmp	r0, #2
   17118:	blt	20a98 <main@@Base+0xaa08>
   1711c:	ldrb	r0, [r1]
   17120:	cmp	r0, #32
   17124:	bls	20a88 <main@@Base+0xa9f8>
   17128:	mov	r4, r1
   1712c:	b	17064 <main@@Base+0xfd4>
   17130:	mov	r2, r4
   17134:	add	r0, r8, #24
   17138:	vldr	s18, [pc, #904]	; 174c8 <main@@Base+0x1438>
   1713c:	movw	lr, #29556	; 0x7374
   17140:	vmov.f32	s16, #8	; 0x40400000  3.0
   17144:	str	r5, [sp, #44]	; 0x2c
   17148:	str	r8, [sp, #36]	; 0x24
   1714c:	str	sl, [sp, #40]	; 0x28
   17150:	str	r0, [sp, #28]
   17154:	add	r0, r8, #12
   17158:	movt	lr, #29797	; 0x7465
   1715c:	str	r0, [sp, #32]
   17160:	movw	r0, #13407	; 0x345f
   17164:	movt	r0, #29494	; 0x7336
   17168:	sub	r0, r0, #512	; 0x200
   1716c:	sub	r0, r0, #196608	; 0x30000
   17170:	str	r0, [sp, #24]
   17174:	cmp	r2, r5
   17178:	mov	r9, r5
   1717c:	beq	171d8 <main@@Base+0x1148>
   17180:	ldrb	r0, [r2]
   17184:	cmp	r0, #46	; 0x2e
   17188:	beq	171a4 <main@@Base+0x1114>
   1718c:	cmp	r0, #34	; 0x22
   17190:	bne	171c8 <main@@Base+0x1138>
   17194:	ldr	r0, [sp, #32]
   17198:	mov	r1, #0
   1719c:	add	r9, r2, #1
   171a0:	b	171d4 <main@@Base+0x1144>
   171a4:	mov	r1, r2
   171a8:	mov	r0, r8
   171ac:	mov	r2, r5
   171b0:	mov	r3, #5
   171b4:	bl	337ac <flatcc_json_parser_set_error@@Base>
   171b8:	movw	lr, #29556	; 0x7374
   171bc:	mov	r9, r0
   171c0:	movt	lr, #29797	; 0x7465
   171c4:	b	171d8 <main@@Base+0x1148>
   171c8:	ldr	r0, [sp, #32]
   171cc:	mov	r1, #1
   171d0:	mov	r9, r2
   171d4:	str	r1, [r0]
   171d8:	sub	sl, r5, r9
   171dc:	mov	r0, #8
   171e0:	cmp	sl, #8
   171e4:	movcc	r0, sl
   171e8:	and	r0, r0, #15
   171ec:	sub	r2, r0, #1
   171f0:	cmp	r2, #7
   171f4:	bhi	184e4 <main@@Base+0x2454>
   171f8:	add	r0, pc, #32
   171fc:	mov	r8, #0
   17200:	mov	ip, #0
   17204:	mov	r4, #0
   17208:	mov	r1, #0
   1720c:	mov	r3, #0
   17210:	mov	r6, #0
   17214:	mov	r7, #0
   17218:	mov	r5, #0
   1721c:	ldr	pc, [r0, r2, lsl #2]
   17220:	andeq	r7, r1, r4, lsl #5
   17224:	andeq	r7, r1, ip, ror r2
   17228:	andeq	r7, r1, r4, ror r2
   1722c:	andeq	r7, r1, ip, ror #4
   17230:	andeq	r7, r1, r0, ror #4
   17234:	andeq	r7, r1, r4, asr r2
   17238:	andeq	r7, r1, r4, asr #4
   1723c:	andeq	r7, r1, r0, asr #4
   17240:	ldrb	ip, [r9, #7]
   17244:	ldrb	r0, [r9, #6]
   17248:	mov	r4, r8
   1724c:	orr	r0, ip, r0, lsl #8
   17250:	mov	r8, r0
   17254:	ldrb	r0, [r9, #5]
   17258:	mov	r1, r4
   1725c:	orr	r8, r8, r0, lsl #16
   17260:	ldrb	r0, [r9, #4]
   17264:	mov	r3, r1
   17268:	orr	r8, r8, r0, lsl #24
   1726c:	ldrb	r0, [r9, #3]
   17270:	orr	r6, r0, r3
   17274:	ldrb	r0, [r9, #2]
   17278:	orr	r7, r6, r0, lsl #8
   1727c:	ldrb	r0, [r9, #1]
   17280:	orr	r5, r7, r0, lsl #16
   17284:	ldrb	r0, [r9]
   17288:	movw	r1, #29281	; 0x7261
   1728c:	movt	r1, #24946	; 0x6172
   17290:	subs	r1, r8, r1
   17294:	orr	r0, r5, r0, lsl #24
   17298:	sbcs	r1, r0, lr
   1729c:	bcs	17348 <main@@Base+0x12b8>
   172a0:	movw	r1, #28004	; 0x6d64
   172a4:	movt	r1, #28257	; 0x6e61
   172a8:	cmp	r0, r1
   172ac:	bhi	174cc <main@@Base+0x143c>
   172b0:	ldr	r5, [sp, #44]	; 0x2c
   172b4:	movw	r1, #25975	; 0x6577
   172b8:	movt	r1, #26220	; 0x666c
   172bc:	cmp	r0, r1
   172c0:	bhi	175d8 <main@@Base+0x1548>
   172c4:	movw	r1, #27759	; 0x6c6f
   172c8:	movt	r1, #25455	; 0x636f
   172cc:	eor	r2, r0, r1
   172d0:	and	r1, r8, #-16777216	; 0xff000000
   172d4:	eor	r3, r1, #1912602624	; 0x72000000
   172d8:	orrs	r2, r3, r2
   172dc:	beq	17e98 <main@@Base+0x1e08>
   172e0:	movw	r2, #25965	; 0x656d
   172e4:	ldr	r8, [sp, #36]	; 0x24
   172e8:	eor	r1, r1, #2030043136	; 0x79000000
   172ec:	movt	r2, #25966	; 0x656e
   172f0:	eor	r0, r0, r2
   172f4:	orrs	r0, r1, r0
   172f8:	bne	184e4 <main@@Base+0x2454>
   172fc:	cmp	sl, #6
   17300:	ldr	sl, [sp, #40]	; 0x28
   17304:	mov	r1, r9
   17308:	blt	19420 <main@@Base+0x3390>
   1730c:	ldr	r1, [sp, #32]
   17310:	mov	r2, r9
   17314:	ldrb	r0, [r2, #5]!
   17318:	ldr	r1, [r1]
   1731c:	cmp	r1, #0
   17320:	beq	18608 <main@@Base+0x2578>
   17324:	cmp	r0, #33	; 0x21
   17328:	bcc	17338 <main@@Base+0x12a8>
   1732c:	cmp	r0, #58	; 0x3a
   17330:	mov	r1, r9
   17334:	bne	19420 <main@@Base+0x3390>
   17338:	ldr	r0, [sp, #32]
   1733c:	mov	r1, #0
   17340:	str	r1, [r0]
   17344:	b	18618 <main@@Base+0x2588>
   17348:	movw	r1, #0
   1734c:	movt	r1, #26163	; 0x6633
   17350:	subs	r1, r8, r1
   17354:	sbcs	r1, r0, lr
   17358:	bcs	17558 <main@@Base+0x14c8>
   1735c:	movw	r1, #29281	; 0x7261
   17360:	ldr	r5, [sp, #44]	; 0x2c
   17364:	movt	r1, #24946	; 0x6172
   17368:	eor	r2, r8, r1
   1736c:	eor	r1, r0, lr
   17370:	orrs	r2, r2, r1
   17374:	bne	17654 <main@@Base+0x15c4>
   17378:	add	sl, r9, #8
   1737c:	mov	r0, #8
   17380:	sub	ip, r5, sl
   17384:	cmp	ip, #8
   17388:	movcc	r0, ip
   1738c:	and	r0, r0, #15
   17390:	sub	r6, r0, #1
   17394:	cmp	r6, #7
   17398:	bhi	1a4b8 <main@@Base+0x4428>
   1739c:	add	r7, pc, #32
   173a0:	mov	r1, #0
   173a4:	mov	lr, #0
   173a8:	mov	r8, #0
   173ac:	mov	r4, #0
   173b0:	mov	r3, #0
   173b4:	mov	r5, #0
   173b8:	mov	r0, #0
   173bc:	mov	r2, #0
   173c0:	ldr	pc, [r7, r6, lsl #2]
   173c4:	andeq	r7, r1, r8, lsr #8
   173c8:	andeq	r7, r1, r0, lsr #8
   173cc:	andeq	r7, r1, r8, lsl r4
   173d0:	andeq	r7, r1, r0, lsl r4
   173d4:	andeq	r7, r1, r4, lsl #8
   173d8:	strdeq	r7, [r1], -r8
   173dc:	andeq	r7, r1, r8, ror #7
   173e0:	andeq	r7, r1, r4, ror #7
   173e4:	ldrb	lr, [r9, #15]
   173e8:	ldrb	r0, [r9, #14]
   173ec:	mov	r8, r1
   173f0:	orr	r0, lr, r0, lsl #8
   173f4:	mov	r1, r0
   173f8:	ldrb	r0, [r9, #13]
   173fc:	mov	r4, r8
   17400:	orr	r1, r1, r0, lsl #16
   17404:	ldrb	r0, [r9, #12]
   17408:	mov	r3, r4
   1740c:	orr	r1, r1, r0, lsl #24
   17410:	ldrb	r0, [r9, #11]
   17414:	orr	r5, r0, r3
   17418:	ldrb	r0, [r9, #10]
   1741c:	orr	r0, r5, r0, lsl #8
   17420:	ldrb	r2, [r9, #9]
   17424:	orr	r2, r0, r2, lsl #16
   17428:	ldrb	r0, [sl]
   1742c:	movw	r7, #26227	; 0x6673
   17430:	movt	r7, #31087	; 0x796f
   17434:	orr	r2, r2, r0, lsl #24
   17438:	movw	r0, #26989	; 0x696d
   1743c:	movt	r0, #29810	; 0x7472
   17440:	subs	r0, r0, r1
   17444:	sbcs	r0, r7, r2
   17448:	bcc	17dc8 <main@@Base+0x1d38>
   1744c:	movw	r0, #29797	; 0x7465
   17450:	ldr	r5, [sp, #44]	; 0x2c
   17454:	eor	r3, r2, r7
   17458:	movt	r0, #28530	; 0x6f72
   1745c:	eor	r0, r1, r0
   17460:	orrs	r0, r0, r3
   17464:	beq	1828c <main@@Base+0x21fc>
   17468:	movw	r0, #27763	; 0x6c73
   1746c:	movt	r0, #28527	; 0x6f6f
   17470:	eor	r0, r1, r0
   17474:	movw	r1, #26210	; 0x6662
   17478:	movt	r1, #31087	; 0x796f
   1747c:	eor	r1, r2, r1
   17480:	orrs	r0, r0, r1
   17484:	bne	1a4b8 <main@@Base+0x4428>
   17488:	cmp	ip, #9
   1748c:	blt	1a4b8 <main@@Base+0x4428>
   17490:	ldr	r2, [sp, #32]
   17494:	mov	r1, r9
   17498:	ldrb	r0, [r1, #16]!
   1749c:	ldr	r2, [r2]
   174a0:	cmp	r2, #0
   174a4:	beq	188ec <main@@Base+0x285c>
   174a8:	cmp	r0, #33	; 0x21
   174ac:	bcc	174b8 <main@@Base+0x1428>
   174b0:	cmp	r0, #58	; 0x3a
   174b4:	bne	1a4b8 <main@@Base+0x4428>
   174b8:	ldr	r0, [sp, #32]
   174bc:	mov	r2, #0
   174c0:	str	r2, [r0]
   174c4:	b	188f8 <main@@Base+0x2868>
   174c8:	ldmmi	r9, {r5, r6, r7, r8, sl, sp, lr}
   174cc:	ldr	r5, [sp, #44]	; 0x2c
   174d0:	movw	r1, #29555	; 0x7373
   174d4:	movt	r1, #29797	; 0x7465
   174d8:	cmp	r0, r1
   174dc:	bhi	17724 <main@@Base+0x1694>
   174e0:	movw	r3, #24430	; 0x5f6e
   174e4:	movw	r2, #29285	; 0x7265
   174e8:	movt	r3, #28276	; 0x6e74
   174ec:	movt	r2, #28769	; 0x7061
   174f0:	subs	r1, r8, r3
   174f4:	sbcs	r1, r0, r2
   174f8:	bcs	178c0 <main@@Base+0x1830>
   174fc:	movw	r1, #28005	; 0x6d65
   17500:	movt	r1, #28257	; 0x6e61
   17504:	teq	r0, r1
   17508:	bne	184e0 <main@@Base+0x2450>
   1750c:	ldr	r8, [sp, #36]	; 0x24
   17510:	cmp	sl, #5
   17514:	mov	r1, r9
   17518:	blt	1962c <main@@Base+0x359c>
   1751c:	ldr	r1, [sp, #32]
   17520:	mov	r2, r9
   17524:	ldrb	r0, [r2, #4]!
   17528:	ldr	r1, [r1]
   1752c:	cmp	r1, #0
   17530:	beq	186d8 <main@@Base+0x2648>
   17534:	cmp	r0, #33	; 0x21
   17538:	bcc	17548 <main@@Base+0x14b8>
   1753c:	cmp	r0, #58	; 0x3a
   17540:	mov	r1, r9
   17544:	bne	1962c <main@@Base+0x359c>
   17548:	ldr	r0, [sp, #32]
   1754c:	mov	r1, #0
   17550:	str	r1, [r0]
   17554:	b	186e8 <main@@Base+0x2658>
   17558:	movw	r2, #29544	; 0x7368
   1755c:	ldr	r5, [sp, #44]	; 0x2c
   17560:	movt	r2, #26721	; 0x6861
   17564:	subs	r1, r8, r2
   17568:	sbcs	r1, r0, lr
   1756c:	bcs	17780 <main@@Base+0x16f0>
   17570:	movw	r1, #0
   17574:	bfc	r8, #0, #16
   17578:	eor	r0, r0, lr
   1757c:	movt	r1, #26163	; 0x6633
   17580:	eor	r1, r8, r1
   17584:	orrs	r0, r1, r0
   17588:	bne	184e0 <main@@Base+0x2450>
   1758c:	ldr	r8, [sp, #36]	; 0x24
   17590:	cmp	sl, #7
   17594:	mov	r7, r9
   17598:	blt	18dc0 <main@@Base+0x2d30>
   1759c:	ldr	r2, [sp, #32]
   175a0:	mov	r1, r9
   175a4:	ldrb	r0, [r1, #6]!
   175a8:	ldr	r2, [r2]
   175ac:	cmp	r2, #0
   175b0:	beq	1855c <main@@Base+0x24cc>
   175b4:	cmp	r0, #33	; 0x21
   175b8:	bcc	175c8 <main@@Base+0x1538>
   175bc:	cmp	r0, #58	; 0x3a
   175c0:	mov	r7, r9
   175c4:	bne	18dc0 <main@@Base+0x2d30>
   175c8:	ldr	r0, [sp, #32]
   175cc:	mov	r2, #0
   175d0:	str	r2, [r0]
   175d4:	b	1856c <main@@Base+0x24dc>
   175d8:	movw	r1, #65535	; 0xffff
   175dc:	movw	r2, #30309	; 0x7665
   175e0:	movw	r3, #28530	; 0x6f72
   175e4:	movt	r1, #26735	; 0x686f
   175e8:	movt	r2, #26990	; 0x696e
   175ec:	movt	r3, #28276	; 0x6e74
   175f0:	cmp	r0, r1
   175f4:	bhi	17a9c <main@@Base+0x1a0c>
   175f8:	movw	r1, #25976	; 0x6578
   175fc:	movt	r1, #26220	; 0x666c
   17600:	teq	r0, r1
   17604:	bne	184e0 <main@@Base+0x2450>
   17608:	ldr	r8, [sp, #36]	; 0x24
   1760c:	cmp	sl, #5
   17610:	mov	r4, r9
   17614:	blt	19684 <main@@Base+0x35f4>
   17618:	ldr	r2, [sp, #32]
   1761c:	mov	r1, r9
   17620:	ldrb	r0, [r1, #4]!
   17624:	ldr	r2, [r2]
   17628:	cmp	r2, #0
   1762c:	beq	18708 <main@@Base+0x2678>
   17630:	cmp	r0, #33	; 0x21
   17634:	bcc	17644 <main@@Base+0x15b4>
   17638:	cmp	r0, #58	; 0x3a
   1763c:	mov	r4, r9
   17640:	bne	19684 <main@@Base+0x35f4>
   17644:	ldr	r0, [sp, #32]
   17648:	mov	r2, #0
   1764c:	str	r2, [r0]
   17650:	b	18718 <main@@Base+0x2688>
   17654:	movw	r2, #28788	; 0x7074
   17658:	movt	r2, #25965	; 0x656d
   1765c:	subs	r2, r8, r2
   17660:	sbcs	r2, r0, lr
   17664:	bcs	17b08 <main@@Base+0x1a78>
   17668:	movw	r0, #28524	; 0x6f6c
   1766c:	movt	r0, #25199	; 0x626f
   17670:	eor	r0, r8, r0
   17674:	orrs	r0, r0, r1
   17678:	beq	1823c <main@@Base+0x21ac>
   1767c:	movw	r0, #29541	; 0x7365
   17680:	movt	r0, #25185	; 0x6261
   17684:	eor	r0, r8, r0
   17688:	orrs	r0, r0, r1
   1768c:	bne	184e0 <main@@Base+0x2450>
   17690:	add	r7, r9, #8
   17694:	mov	r1, #8
   17698:	ldr	r8, [sp, #36]	; 0x24
   1769c:	ldr	sl, [sp, #40]	; 0x28
   176a0:	sub	r0, r5, r7
   176a4:	cmp	r0, #8
   176a8:	movcc	r1, r0
   176ac:	and	r2, r1, #15
   176b0:	sub	r1, r2, #2
   176b4:	cmp	r1, #7
   176b8:	bcs	18768 <main@@Base+0x26d8>
   176bc:	ldrb	r1, [r9, #9]
   176c0:	lsl	r2, r1, #16
   176c4:	mov	r1, #0
   176c8:	ldrb	r3, [r7]
   176cc:	orr	r2, r2, r3, lsl #24
   176d0:	movw	r3, #0
   176d4:	movt	r3, #13876	; 0x3634
   176d8:	eor	r2, r2, r3
   176dc:	orrs	r1, r1, r2
   176e0:	bne	1e268 <main@@Base+0x81d8>
   176e4:	cmp	r0, #3
   176e8:	blt	1e268 <main@@Base+0x81d8>
   176ec:	ldr	r2, [sp, #32]
   176f0:	mov	r1, r9
   176f4:	ldrb	r0, [r1, #10]!
   176f8:	ldr	r2, [r2]
   176fc:	cmp	r2, #0
   17700:	beq	18c1c <main@@Base+0x2b8c>
   17704:	cmp	r0, #33	; 0x21
   17708:	bcc	17714 <main@@Base+0x1684>
   1770c:	cmp	r0, #58	; 0x3a
   17710:	bne	1e268 <main@@Base+0x81d8>
   17714:	ldr	r0, [sp, #32]
   17718:	mov	r2, #0
   1771c:	str	r2, [r0]
   17720:	b	18c28 <main@@Base+0x2b98>
   17724:	and	r6, r8, #-16777216	; 0xff000000
   17728:	eor	r4, r0, lr
   1772c:	eor	r1, r6, #872415232	; 0x34000000
   17730:	orrs	r1, r1, r4
   17734:	bne	17ba8 <main@@Base+0x1b18>
   17738:	cmp	sl, #6
   1773c:	mov	r7, r9
   17740:	blt	18e84 <main@@Base+0x2df4>
   17744:	ldr	r2, [sp, #32]
   17748:	mov	r1, r9
   1774c:	ldrb	r0, [r1, #5]!
   17750:	ldr	r2, [r2]
   17754:	cmp	r2, #0
   17758:	beq	1858c <main@@Base+0x24fc>
   1775c:	cmp	r0, #33	; 0x21
   17760:	bcc	17770 <main@@Base+0x16e0>
   17764:	cmp	r0, #58	; 0x3a
   17768:	mov	r7, r9
   1776c:	bne	18e84 <main@@Base+0x2df4>
   17770:	ldr	r0, [sp, #32]
   17774:	mov	r2, #0
   17778:	str	r2, [r0]
   1777c:	b	1859c <main@@Base+0x250c>
   17780:	eor	r2, r8, r2
   17784:	eor	r1, r0, lr
   17788:	orrs	r2, r2, r1
   1778c:	bne	17bf8 <main@@Base+0x1b68>
   17790:	add	sl, r9, #8
   17794:	mov	r0, #8
   17798:	sub	ip, r5, sl
   1779c:	cmp	ip, #8
   177a0:	movcc	r0, ip
   177a4:	and	r0, r0, #15
   177a8:	sub	r7, r0, #1
   177ac:	cmp	r7, #7
   177b0:	bhi	1a4b8 <main@@Base+0x4428>
   177b4:	add	r4, pc, #32
   177b8:	mov	r1, #0
   177bc:	mov	lr, #0
   177c0:	mov	r8, #0
   177c4:	mov	r6, #0
   177c8:	mov	r3, #0
   177cc:	mov	r5, #0
   177d0:	mov	r0, #0
   177d4:	mov	r2, #0
   177d8:	ldr	pc, [r4, r7, lsl #2]
   177dc:	andeq	r7, r1, r0, asr #16
   177e0:	andeq	r7, r1, r8, lsr r8
   177e4:	andeq	r7, r1, r0, lsr r8
   177e8:	andeq	r7, r1, r8, lsr #16
   177ec:	andeq	r7, r1, ip, lsl r8
   177f0:	andeq	r7, r1, r0, lsl r8
   177f4:	andeq	r7, r1, r0, lsl #16
   177f8:	strdeq	r7, [r1], -ip
   177fc:	ldrb	lr, [r9, #15]
   17800:	ldrb	r0, [r9, #14]
   17804:	mov	r8, r1
   17808:	orr	r0, lr, r0, lsl #8
   1780c:	mov	r1, r0
   17810:	ldrb	r0, [r9, #13]
   17814:	mov	r6, r8
   17818:	orr	r1, r1, r0, lsl #16
   1781c:	ldrb	r0, [r9, #12]
   17820:	mov	r3, r6
   17824:	orr	r1, r1, r0, lsl #24
   17828:	ldrb	r0, [r9, #11]
   1782c:	orr	r5, r0, r3
   17830:	ldrb	r0, [r9, #10]
   17834:	orr	r0, r5, r0, lsl #8
   17838:	ldrb	r2, [r9, #9]
   1783c:	orr	r2, r0, r2, lsl #16
   17840:	ldrb	r0, [sl]
   17844:	movw	r3, #30257	; 0x7631
   17848:	movt	r3, #26222	; 0x666e
   1784c:	orr	r2, r2, r0, lsl #24
   17850:	subs	r0, r1, r3
   17854:	movw	r0, #13407	; 0x345f
   17858:	movt	r0, #29494	; 0x7336
   1785c:	sbcs	r0, r2, r0
   17860:	bcs	181b4 <main@@Base+0x2124>
   17864:	eor	r0, r1, r3
   17868:	ldr	r1, [sp, #24]
   1786c:	ldr	r5, [sp, #44]	; 0x2c
   17870:	eor	r1, r2, r1
   17874:	orrs	r0, r0, r1
   17878:	bne	1a4b8 <main@@Base+0x4428>
   1787c:	ldr	r8, [sp, #36]	; 0x24
   17880:	cmp	ip, #9
   17884:	blt	1b874 <main@@Base+0x57e4>
   17888:	ldr	r2, [sp, #32]
   1788c:	mov	r1, r9
   17890:	ldrb	r0, [r1, #16]!
   17894:	ldr	r2, [r2]
   17898:	cmp	r2, #0
   1789c:	beq	189ac <main@@Base+0x291c>
   178a0:	cmp	r0, #33	; 0x21
   178a4:	bcc	178b0 <main@@Base+0x1820>
   178a8:	cmp	r0, #58	; 0x3a
   178ac:	bne	1b874 <main@@Base+0x57e4>
   178b0:	ldr	r0, [sp, #32]
   178b4:	mov	r2, #0
   178b8:	str	r2, [r0]
   178bc:	b	189b8 <main@@Base+0x2928>
   178c0:	eor	r1, r8, r3
   178c4:	eor	r2, r0, r2
   178c8:	orrs	r1, r1, r2
   178cc:	bne	17ee8 <main@@Base+0x1e58>
   178d0:	add	r1, r9, #8
   178d4:	mov	r2, #8
   178d8:	ldr	sl, [sp, #40]	; 0x28
   178dc:	sub	r0, r5, r1
   178e0:	cmp	r0, #8
   178e4:	movcs	r0, r2
   178e8:	and	r0, r0, #15
   178ec:	sub	r7, r0, #1
   178f0:	cmp	r7, #7
   178f4:	bhi	18230 <main@@Base+0x21a0>
   178f8:	add	r0, pc, #32
   178fc:	mov	r8, #0
   17900:	mov	ip, #0
   17904:	mov	lr, #0
   17908:	mov	r6, #0
   1790c:	mov	r3, #0
   17910:	mov	r4, #0
   17914:	mov	r2, #0
   17918:	mov	r5, #0
   1791c:	ldr	pc, [r0, r7, lsl #2]
   17920:	andeq	r7, r1, r4, lsl #19
   17924:	andeq	r7, r1, ip, ror r9
   17928:	andeq	r7, r1, r4, ror r9
   1792c:	andeq	r7, r1, ip, ror #18
   17930:	andeq	r7, r1, r0, ror #18
   17934:	andeq	r7, r1, r4, asr r9
   17938:	andeq	r7, r1, r4, asr #18
   1793c:	andeq	r7, r1, r0, asr #18
   17940:	ldrb	ip, [r9, #15]
   17944:	ldrb	r0, [r9, #14]
   17948:	mov	lr, r8
   1794c:	orr	r0, ip, r0, lsl #8
   17950:	mov	r8, r0
   17954:	ldrb	r0, [r9, #13]
   17958:	mov	r6, lr
   1795c:	orr	r8, r8, r0, lsl #16
   17960:	ldrb	r0, [r9, #12]
   17964:	mov	r3, r6
   17968:	orr	r8, r8, r0, lsl #24
   1796c:	ldrb	r0, [r9, #11]
   17970:	orr	r4, r0, r3
   17974:	ldrb	r0, [r9, #10]
   17978:	orr	r2, r4, r0, lsl #8
   1797c:	ldrb	r0, [r9, #9]
   17980:	orr	r5, r2, r0, lsl #16
   17984:	ldrb	r2, [r1]
   17988:	movw	r0, #25445	; 0x6365
   1798c:	movw	r3, #25971	; 0x6573
   17990:	movt	r0, #28769	; 0x7061
   17994:	movt	r3, #24941	; 0x616d
   17998:	eor	r0, r8, r0
   1799c:	orr	r2, r5, r2, lsl #24
   179a0:	ldr	r5, [sp, #44]	; 0x2c
   179a4:	eor	r2, r2, r3
   179a8:	orrs	r0, r0, r2
   179ac:	bne	18230 <main@@Base+0x21a0>
   179b0:	add	r8, r9, #16
   179b4:	mov	r1, #8
   179b8:	sub	r0, r5, r8
   179bc:	cmp	r0, #8
   179c0:	movcc	r1, r0
   179c4:	and	r1, r1, #15
   179c8:	sub	r3, r1, #1
   179cc:	cmp	r3, #7
   179d0:	bhi	1c654 <main@@Base+0x65c4>
   179d4:	add	r7, pc, #20
   179d8:	mov	r1, #0
   179dc:	mov	r2, #0
   179e0:	mov	r6, #0
   179e4:	mov	r5, #0
   179e8:	mov	r4, #0
   179ec:	ldr	pc, [r7, r3, lsl #2]
   179f0:	andeq	r7, r1, r4, lsr sl
   179f4:	andeq	r7, r1, ip, lsr #20
   179f8:	andeq	r7, r1, r4, lsr #20
   179fc:	andeq	r7, r1, r8, lsl sl
   17a00:	andeq	r7, r1, r0, lsl sl
   17a04:	andeq	r7, r1, r0, lsl sl
   17a08:	andeq	r7, r1, r0, lsl sl
   17a0c:	andeq	r7, r1, r0, lsl sl
   17a10:	ldrb	r2, [r9, #20]
   17a14:	lsl	r2, r2, #24
   17a18:	ldrb	r3, [r9, #19]
   17a1c:	orr	r6, r3, r1
   17a20:	mov	r1, r2
   17a24:	ldrb	r2, [r9, #18]
   17a28:	orr	r5, r6, r2, lsl #8
   17a2c:	ldrb	r2, [r9, #17]
   17a30:	orr	r4, r5, r2, lsl #16
   17a34:	ldrb	r2, [r8]
   17a38:	movw	r3, #25971	; 0x6573
   17a3c:	ldr	r5, [sp, #44]	; 0x2c
   17a40:	and	r1, r1, #-16777216	; 0xff000000
   17a44:	movt	r3, #24436	; 0x5f74
   17a48:	eor	r1, r1, #1946157056	; 0x74000000
   17a4c:	orr	r2, r4, r2, lsl #24
   17a50:	eor	r2, r2, r3
   17a54:	orrs	r1, r1, r2
   17a58:	bne	1c654 <main@@Base+0x65c4>
   17a5c:	cmp	r0, #6
   17a60:	blt	1c654 <main@@Base+0x65c4>
   17a64:	ldr	r2, [sp, #32]
   17a68:	mov	r1, r9
   17a6c:	ldrb	r0, [r1, #21]!
   17a70:	ldr	r2, [r2]
   17a74:	cmp	r2, #0
   17a78:	beq	190b0 <main@@Base+0x3020>
   17a7c:	cmp	r0, #33	; 0x21
   17a80:	bcc	17a8c <main@@Base+0x19fc>
   17a84:	cmp	r0, #58	; 0x3a
   17a88:	bne	1c654 <main@@Base+0x65c4>
   17a8c:	ldr	r0, [sp, #32]
   17a90:	mov	r2, #0
   17a94:	str	r2, [r0]
   17a98:	b	190bc <main@@Base+0x302c>
   17a9c:	subs	r1, r8, r3
   17aa0:	sbcs	r1, r0, r2
   17aa4:	bcs	17f48 <main@@Base+0x1eb8>
   17aa8:	movw	r1, #0
   17aac:	bfc	r0, #0, #16
   17ab0:	movt	r1, #26736	; 0x6870
   17ab4:	teq	r0, r1
   17ab8:	bne	184e0 <main@@Base+0x2450>
   17abc:	ldr	r8, [sp, #36]	; 0x24
   17ac0:	cmp	sl, #3
   17ac4:	mov	r7, r9
   17ac8:	blt	1a5a4 <main@@Base+0x4514>
   17acc:	ldr	r2, [sp, #32]
   17ad0:	mov	r1, r9
   17ad4:	ldrb	r0, [r1, #2]!
   17ad8:	ldr	r2, [r2]
   17adc:	cmp	r2, #0
   17ae0:	beq	1891c <main@@Base+0x288c>
   17ae4:	cmp	r0, #33	; 0x21
   17ae8:	bcc	17af8 <main@@Base+0x1a68>
   17aec:	cmp	r0, #58	; 0x3a
   17af0:	mov	r7, r9
   17af4:	bne	1a5a4 <main@@Base+0x4514>
   17af8:	ldr	r0, [sp, #32]
   17afc:	mov	r2, #0
   17b00:	str	r2, [r0]
   17b04:	b	1892c <main@@Base+0x289c>
   17b08:	mvn	r2, #-1711276032	; 0x9a000000
   17b0c:	subs	r2, r2, r8
   17b10:	sbcs	r2, lr, r0
   17b14:	bcc	17fd4 <main@@Base+0x1f44>
   17b18:	movw	r0, #28788	; 0x7074
   17b1c:	movt	r0, #25965	; 0x656d
   17b20:	eor	r0, r8, r0
   17b24:	orrs	r0, r0, r1
   17b28:	bne	184e0 <main@@Base+0x2450>
   17b2c:	add	r7, r9, #8
   17b30:	mov	r1, #8
   17b34:	mov	r2, #-268435456	; 0xf0000000
   17b38:	ldr	r8, [sp, #36]	; 0x24
   17b3c:	ldr	sl, [sp, #40]	; 0x28
   17b40:	sub	r0, r5, r7
   17b44:	cmp	r0, #8
   17b48:	movcc	r1, r0
   17b4c:	add	r1, r2, r1, lsl #28
   17b50:	asr	r1, r1, #28
   17b54:	cmp	r1, #0
   17b58:	blt	1e268 <main@@Base+0x81d8>
   17b5c:	ldrb	r1, [r7]
   17b60:	cmp	r1, #121	; 0x79
   17b64:	bne	1e268 <main@@Base+0x81d8>
   17b68:	cmp	r0, #2
   17b6c:	blt	1e268 <main@@Base+0x81d8>
   17b70:	ldr	r2, [sp, #32]
   17b74:	mov	r1, r9
   17b78:	ldrb	r0, [r1, #9]!
   17b7c:	ldr	r2, [r2]
   17b80:	cmp	r2, #0
   17b84:	beq	192d8 <main@@Base+0x3248>
   17b88:	cmp	r0, #33	; 0x21
   17b8c:	bcc	17b98 <main@@Base+0x1b08>
   17b90:	cmp	r0, #58	; 0x3a
   17b94:	bne	1e268 <main@@Base+0x81d8>
   17b98:	ldr	r0, [sp, #32]
   17b9c:	mov	r2, #0
   17ba0:	str	r2, [r0]
   17ba4:	b	192e4 <main@@Base+0x3254>
   17ba8:	teq	r0, lr
   17bac:	bne	19a04 <main@@Base+0x3974>
   17bb0:	cmp	sl, #5
   17bb4:	mov	r1, r9
   17bb8:	blt	199c8 <main@@Base+0x3938>
   17bbc:	ldr	r1, [sp, #32]
   17bc0:	mov	r2, r9
   17bc4:	ldrb	r0, [r2, #4]!
   17bc8:	ldr	r1, [r1]
   17bcc:	cmp	r1, #0
   17bd0:	beq	18738 <main@@Base+0x26a8>
   17bd4:	cmp	r0, #33	; 0x21
   17bd8:	bcc	17be8 <main@@Base+0x1b58>
   17bdc:	cmp	r0, #58	; 0x3a
   17be0:	mov	r1, r9
   17be4:	bne	199c8 <main@@Base+0x3938>
   17be8:	ldr	r0, [sp, #32]
   17bec:	mov	r1, #0
   17bf0:	str	r1, [r0]
   17bf4:	b	18748 <main@@Base+0x26b8>
   17bf8:	movw	r7, #24431	; 0x5f6f
   17bfc:	movw	r3, #25460	; 0x6374
   17c00:	movt	r7, #28530	; 0x6f72
   17c04:	movt	r3, #30309	; 0x7665
   17c08:	subs	r2, r8, r7
   17c0c:	sbcs	r2, r0, r3
   17c10:	bcs	1804c <main@@Base+0x1fbc>
   17c14:	movw	r0, #29556	; 0x7374
   17c18:	ldr	sl, [sp, #40]	; 0x28
   17c1c:	movt	r0, #28261	; 0x6e65
   17c20:	eor	r0, r8, r0
   17c24:	orrs	r0, r0, r1
   17c28:	bne	19f18 <main@@Base+0x3e88>
   17c2c:	add	r1, r9, #8
   17c30:	mov	r2, #8
   17c34:	sub	r0, r5, r1
   17c38:	cmp	r0, #8
   17c3c:	movcs	r0, r2
   17c40:	and	r0, r0, #15
   17c44:	sub	r7, r0, #1
   17c48:	cmp	r7, #7
   17c4c:	bhi	18230 <main@@Base+0x21a0>
   17c50:	add	r0, pc, #32
   17c54:	mov	r8, #0
   17c58:	mov	ip, #0
   17c5c:	mov	lr, #0
   17c60:	mov	r6, #0
   17c64:	mov	r3, #0
   17c68:	mov	r5, #0
   17c6c:	mov	r2, #0
   17c70:	mov	r4, #0
   17c74:	ldr	pc, [r0, r7, lsl #2]
   17c78:	ldrdeq	r7, [r1], -ip
   17c7c:	ldrdeq	r7, [r1], -r4
   17c80:	andeq	r7, r1, ip, asr #25
   17c84:	andeq	r7, r1, r4, asr #25
   17c88:			; <UNDEFINED> instruction: 0x00017cb8
   17c8c:	andeq	r7, r1, ip, lsr #25
   17c90:	muleq	r1, ip, ip
   17c94:	muleq	r1, r8, ip
   17c98:	ldrb	ip, [r9, #15]
   17c9c:	ldrb	r0, [r9, #14]
   17ca0:	mov	lr, r8
   17ca4:	orr	r0, ip, r0, lsl #8
   17ca8:	mov	r8, r0
   17cac:	ldrb	r0, [r9, #13]
   17cb0:	mov	r6, lr
   17cb4:	orr	r8, r8, r0, lsl #16
   17cb8:	ldrb	r0, [r9, #12]
   17cbc:	mov	r3, r6
   17cc0:	orr	r8, r8, r0, lsl #24
   17cc4:	ldrb	r0, [r9, #11]
   17cc8:	orr	r5, r0, r3
   17ccc:	ldrb	r0, [r9, #10]
   17cd0:	orr	r2, r5, r0, lsl #8
   17cd4:	ldrb	r0, [r9, #9]
   17cd8:	orr	r4, r2, r0, lsl #16
   17cdc:	ldrb	r2, [r1]
   17ce0:	movw	r0, #25205	; 0x6275
   17ce4:	movw	r3, #26220	; 0x666c
   17ce8:	ldr	r5, [sp, #44]	; 0x2c
   17cec:	movt	r0, #24948	; 0x6174
   17cf0:	movt	r3, #25956	; 0x6564
   17cf4:	eor	r0, r8, r0
   17cf8:	orr	r2, r4, r2, lsl #24
   17cfc:	eor	r2, r2, r3
   17d00:	orrs	r0, r0, r2
   17d04:	bne	18230 <main@@Base+0x21a0>
   17d08:	add	r7, r9, #16
   17d0c:	mov	r1, #8
   17d10:	ldr	r8, [sp, #36]	; 0x24
   17d14:	sub	r0, r5, r7
   17d18:	cmp	r0, #8
   17d1c:	movcc	r1, r0
   17d20:	and	r1, r1, #15
   17d24:	sub	r2, r1, #1
   17d28:	cmp	r2, #7
   17d2c:	bhi	1e268 <main@@Base+0x81d8>
   17d30:	add	r3, pc, #4
   17d34:	mov	r1, #0
   17d38:	ldr	pc, [r3, r2, lsl #2]
   17d3c:	andeq	r7, r1, r0, ror sp
   17d40:	andeq	r7, r1, r8, ror #26
   17d44:	andeq	r7, r1, r0, ror #26
   17d48:	andeq	r7, r1, ip, asr sp
   17d4c:	andeq	r7, r1, ip, asr sp
   17d50:	andeq	r7, r1, ip, asr sp
   17d54:	andeq	r7, r1, ip, asr sp
   17d58:	andeq	r7, r1, ip, asr sp
   17d5c:	ldrb	r1, [r9, #19]
   17d60:	ldrb	r2, [r9, #18]
   17d64:	orr	r1, r1, r2, lsl #8
   17d68:	ldrb	r2, [r9, #17]
   17d6c:	orr	r1, r1, r2, lsl #16
   17d70:	ldrb	r2, [r7]
   17d74:	orr	r1, r1, r2, lsl #24
   17d78:	movw	r2, #25970	; 0x6572
   17d7c:	movt	r2, #26214	; 0x6666
   17d80:	teq	r1, r2
   17d84:	bne	1e268 <main@@Base+0x81d8>
   17d88:	cmp	r0, #5
   17d8c:	blt	1e268 <main@@Base+0x81d8>
   17d90:	ldr	r2, [sp, #32]
   17d94:	mov	r1, r9
   17d98:	ldrb	r0, [r1, #20]!
   17d9c:	ldr	r2, [r2]
   17da0:	cmp	r2, #0
   17da4:	beq	19b20 <main@@Base+0x3a90>
   17da8:	cmp	r0, #33	; 0x21
   17dac:	bcc	17db8 <main@@Base+0x1d28>
   17db0:	cmp	r0, #58	; 0x3a
   17db4:	bne	1e268 <main@@Base+0x81d8>
   17db8:	ldr	r0, [sp, #32]
   17dbc:	mov	r2, #0
   17dc0:	str	r2, [r0]
   17dc4:	b	19b2c <main@@Base+0x3a9c>
   17dc8:	movw	r0, #27749	; 0x6c65
   17dcc:	movw	r3, #26228	; 0x6674
   17dd0:	ldr	r5, [sp, #44]	; 0x2c
   17dd4:	ldr	r8, [sp, #36]	; 0x24
   17dd8:	movt	r0, #24930	; 0x6162
   17ddc:	movt	r3, #31087	; 0x796f
   17de0:	eor	r0, r1, r0
   17de4:	eor	r3, r2, r3
   17de8:	orrs	r0, r0, r3
   17dec:	beq	183a4 <main@@Base+0x2314>
   17df0:	movw	r0, #26990	; 0x696e
   17df4:	movt	r0, #29810	; 0x7472
   17df8:	eor	r0, r1, r0
   17dfc:	eor	r1, r2, r7
   17e00:	orrs	r0, r0, r1
   17e04:	bne	1a4bc <main@@Base+0x442c>
   17e08:	add	r7, r9, #16
   17e0c:	mov	r1, #8
   17e10:	sub	r0, r5, r7
   17e14:	cmp	r0, #8
   17e18:	movcc	r1, r0
   17e1c:	and	r2, r1, #15
   17e20:	sub	r1, r2, #2
   17e24:	cmp	r1, #7
   17e28:	bcs	187bc <main@@Base+0x272c>
   17e2c:	ldrb	r1, [r9, #17]
   17e30:	ldr	sl, [sp, #40]	; 0x28
   17e34:	lsl	r2, r1, #16
   17e38:	mov	r1, #0
   17e3c:	ldrb	r3, [r7]
   17e40:	orr	r2, r2, r3, lsl #24
   17e44:	movw	r3, #0
   17e48:	movt	r3, #26418	; 0x6732
   17e4c:	eor	r3, r2, r3
   17e50:	orrs	r1, r1, r3
   17e54:	bne	185bc <main@@Base+0x252c>
   17e58:	cmp	r0, #3
   17e5c:	blt	1e268 <main@@Base+0x81d8>
   17e60:	ldr	r2, [sp, #32]
   17e64:	mov	r1, r9
   17e68:	ldrb	r0, [r1, #18]!
   17e6c:	ldr	r2, [r2]
   17e70:	cmp	r2, #0
   17e74:	beq	18c48 <main@@Base+0x2bb8>
   17e78:	cmp	r0, #33	; 0x21
   17e7c:	bcc	17e88 <main@@Base+0x1df8>
   17e80:	cmp	r0, #58	; 0x3a
   17e84:	bne	1e268 <main@@Base+0x81d8>
   17e88:	ldr	r0, [sp, #32]
   17e8c:	mov	r2, #0
   17e90:	str	r2, [r0]
   17e94:	b	18c54 <main@@Base+0x2bc4>
   17e98:	cmp	sl, #6
   17e9c:	ldr	r8, [sp, #36]	; 0x24
   17ea0:	ldr	sl, [sp, #40]	; 0x28
   17ea4:	mov	r7, r9
   17ea8:	blt	19474 <main@@Base+0x33e4>
   17eac:	ldr	r2, [sp, #32]
   17eb0:	mov	r1, r9
   17eb4:	ldrb	r0, [r1, #5]!
   17eb8:	ldr	r2, [r2]
   17ebc:	cmp	r2, #0
   17ec0:	beq	18638 <main@@Base+0x25a8>
   17ec4:	cmp	r0, #33	; 0x21
   17ec8:	bcc	17ed8 <main@@Base+0x1e48>
   17ecc:	cmp	r0, #58	; 0x3a
   17ed0:	mov	r7, r9
   17ed4:	bne	19474 <main@@Base+0x33e4>
   17ed8:	ldr	r0, [sp, #32]
   17edc:	mov	r2, #0
   17ee0:	str	r2, [r0]
   17ee4:	b	18648 <main@@Base+0x25b8>
   17ee8:	ldr	r8, [sp, #36]	; 0x24
   17eec:	movw	r1, #29440	; 0x7300
   17ef0:	bic	r0, r0, #255	; 0xff
   17ef4:	movt	r1, #28783	; 0x706f
   17ef8:	teq	r0, r1
   17efc:	bne	184e4 <main@@Base+0x2454>
   17f00:	cmp	sl, #4
   17f04:	mov	r4, r9
   17f08:	blt	1a704 <main@@Base+0x4674>
   17f0c:	ldr	r2, [sp, #32]
   17f10:	mov	r1, r9
   17f14:	ldrb	r0, [r1, #3]!
   17f18:	ldr	r2, [r2]
   17f1c:	cmp	r2, #0
   17f20:	beq	1894c <main@@Base+0x28bc>
   17f24:	cmp	r0, #33	; 0x21
   17f28:	bcc	17f38 <main@@Base+0x1ea8>
   17f2c:	cmp	r0, #58	; 0x3a
   17f30:	mov	r4, r9
   17f34:	bne	1a704 <main@@Base+0x4674>
   17f38:	ldr	r0, [sp, #32]
   17f3c:	mov	r2, #0
   17f40:	str	r2, [r0]
   17f44:	b	1895c <main@@Base+0x28cc>
   17f48:	eor	r1, r8, r3
   17f4c:	eor	r2, r0, r2
   17f50:	orrs	r1, r1, r2
   17f54:	bne	18428 <main@@Base+0x2398>
   17f58:	add	r7, r9, #8
   17f5c:	mov	r1, #8
   17f60:	mov	r2, #-268435456	; 0xf0000000
   17f64:	ldr	r8, [sp, #36]	; 0x24
   17f68:	ldr	sl, [sp, #40]	; 0x28
   17f6c:	sub	r0, r5, r7
   17f70:	cmp	r0, #8
   17f74:	movcc	r1, r0
   17f78:	add	r1, r2, r1, lsl #28
   17f7c:	asr	r1, r1, #28
   17f80:	cmp	r1, #0
   17f84:	blt	1e268 <main@@Base+0x81d8>
   17f88:	ldrb	r1, [r7]
   17f8c:	cmp	r1, #121	; 0x79
   17f90:	bne	1e268 <main@@Base+0x81d8>
   17f94:	cmp	r0, #2
   17f98:	blt	1e268 <main@@Base+0x81d8>
   17f9c:	ldr	r2, [sp, #32]
   17fa0:	mov	r1, r9
   17fa4:	ldrb	r0, [r1, #9]!
   17fa8:	ldr	r2, [r2]
   17fac:	cmp	r2, #0
   17fb0:	beq	19304 <main@@Base+0x3274>
   17fb4:	cmp	r0, #33	; 0x21
   17fb8:	bcc	17fc4 <main@@Base+0x1f34>
   17fbc:	cmp	r0, #58	; 0x3a
   17fc0:	bne	1e268 <main@@Base+0x81d8>
   17fc4:	ldr	r0, [sp, #32]
   17fc8:	mov	r2, #0
   17fcc:	str	r2, [r0]
   17fd0:	b	19310 <main@@Base+0x3280>
   17fd4:	movw	r3, #0
   17fd8:	mov	r2, r8
   17fdc:	movt	r3, #26163	; 0x6633
   17fe0:	bfc	r2, #0, #16
   17fe4:	subs	r3, r3, #65536	; 0x10000
   17fe8:	eor	r2, r2, r3
   17fec:	sbc	r3, lr, #0
   17ff0:	eor	r0, r0, r3
   17ff4:	orrs	r0, r2, r0
   17ff8:	bne	18484 <main@@Base+0x23f4>
   17ffc:	cmp	sl, #7
   18000:	ldr	r8, [sp, #36]	; 0x24
   18004:	ldr	sl, [sp, #40]	; 0x28
   18008:	mov	r7, r9
   1800c:	blt	1b54c <main@@Base+0x54bc>
   18010:	ldr	r2, [sp, #32]
   18014:	mov	r1, r9
   18018:	ldrb	r0, [r1, #6]!
   1801c:	ldr	r2, [r2]
   18020:	cmp	r2, #0
   18024:	beq	1897c <main@@Base+0x28ec>
   18028:	cmp	r0, #33	; 0x21
   1802c:	bcc	1803c <main@@Base+0x1fac>
   18030:	cmp	r0, #58	; 0x3a
   18034:	mov	r7, r9
   18038:	bne	1b54c <main@@Base+0x54bc>
   1803c:	ldr	r0, [sp, #32]
   18040:	mov	r2, #0
   18044:	str	r2, [r0]
   18048:	b	1898c <main@@Base+0x28fc>
   1804c:	eor	r1, r8, r7
   18050:	eor	r0, r0, r3
   18054:	orrs	r0, r1, r0
   18058:	bne	184e0 <main@@Base+0x2450>
   1805c:	add	sl, r9, #8
   18060:	mov	r0, #8
   18064:	sub	lr, r5, sl
   18068:	cmp	lr, #8
   1806c:	movcc	r0, lr
   18070:	and	r0, r0, #15
   18074:	sub	r6, r0, #1
   18078:	cmp	r6, #7
   1807c:	bhi	1a4b8 <main@@Base+0x4428>
   18080:	add	r7, pc, #32
   18084:	mov	r1, #0
   18088:	mov	ip, #0
   1808c:	mov	r8, #0
   18090:	mov	r4, #0
   18094:	mov	r3, #0
   18098:	mov	r5, #0
   1809c:	mov	r2, #0
   180a0:	mov	r0, #0
   180a4:	ldr	pc, [r7, r6, lsl #2]
   180a8:	andeq	r8, r1, ip, lsl #2
   180ac:	andeq	r8, r1, r4, lsl #2
   180b0:	strdeq	r8, [r1], -ip
   180b4:	strdeq	r8, [r1], -r4
   180b8:	andeq	r8, r1, r8, ror #1
   180bc:	ldrdeq	r8, [r1], -ip
   180c0:	andeq	r8, r1, ip, asr #1
   180c4:	andeq	r8, r1, r8, asr #1
   180c8:	ldrb	ip, [r9, #15]
   180cc:	ldrb	r0, [r9, #14]
   180d0:	mov	r8, r1
   180d4:	orr	r0, ip, r0, lsl #8
   180d8:	mov	r1, r0
   180dc:	ldrb	r0, [r9, #13]
   180e0:	mov	r4, r8
   180e4:	orr	r1, r1, r0, lsl #16
   180e8:	ldrb	r0, [r9, #12]
   180ec:	mov	r3, r4
   180f0:	orr	r1, r1, r0, lsl #24
   180f4:	ldrb	r0, [r9, #11]
   180f8:	orr	r5, r0, r3
   180fc:	ldrb	r0, [r9, #10]
   18100:	orr	r2, r5, r0, lsl #8
   18104:	ldrb	r0, [r9, #9]
   18108:	orr	r0, r2, r0, lsl #16
   1810c:	ldrb	r3, [sl]
   18110:	movw	r2, #27749	; 0x6c65
   18114:	movt	r2, #30050	; 0x7562
   18118:	eor	r2, r1, r2
   1811c:	orr	r0, r0, r3, lsl #24
   18120:	movw	r3, #25711	; 0x646f
   18124:	movt	r3, #26207	; 0x665f
   18128:	eor	r3, r0, r3
   1812c:	orrs	r2, r2, r3
   18130:	bne	18668 <main@@Base+0x25d8>
   18134:	ldr	r5, [sp, #44]	; 0x2c
   18138:	add	r7, r9, #16
   1813c:	mov	r1, #8
   18140:	mov	r2, #-268435456	; 0xf0000000
   18144:	ldr	r8, [sp, #36]	; 0x24
   18148:	sub	r0, r5, r7
   1814c:	cmp	r0, #8
   18150:	movcc	r1, r0
   18154:	add	r1, r2, r1, lsl #28
   18158:	asr	r1, r1, #28
   1815c:	cmp	r1, #0
   18160:	blt	1841c <main@@Base+0x238c>
   18164:	ldrb	r1, [r7]
   18168:	cmp	r1, #115	; 0x73
   1816c:	bne	1841c <main@@Base+0x238c>
   18170:	ldr	sl, [sp, #40]	; 0x28
   18174:	cmp	r0, #2
   18178:	blt	1e268 <main@@Base+0x81d8>
   1817c:	ldr	r2, [sp, #32]
   18180:	mov	r1, r9
   18184:	ldrb	r0, [r1, #17]!
   18188:	ldr	r2, [r2]
   1818c:	cmp	r2, #0
   18190:	beq	1a1d0 <main@@Base+0x4140>
   18194:	cmp	r0, #33	; 0x21
   18198:	bcc	181a4 <main@@Base+0x2114>
   1819c:	cmp	r0, #58	; 0x3a
   181a0:	bne	1e268 <main@@Base+0x81d8>
   181a4:	ldr	r0, [sp, #32]
   181a8:	mov	r2, #0
   181ac:	str	r2, [r0]
   181b0:	b	1a1dc <main@@Base+0x414c>
   181b4:	movw	r0, #30256	; 0x7630
   181b8:	ldr	r5, [sp, #44]	; 0x2c
   181bc:	movt	r0, #26222	; 0x666e
   181c0:	subs	r0, r0, r1
   181c4:	movw	r0, #12895	; 0x325f
   181c8:	movt	r0, #30003	; 0x7533
   181cc:	sbcs	r0, r0, r2
   181d0:	eor	r0, r1, r3
   181d4:	bcc	184f0 <main@@Base+0x2460>
   181d8:	movw	r1, #13407	; 0x345f
   181dc:	ldr	r8, [sp, #36]	; 0x24
   181e0:	movt	r1, #29494	; 0x7336
   181e4:	eor	r1, r2, r1
   181e8:	orrs	r0, r0, r1
   181ec:	bne	1a4bc <main@@Base+0x442c>
   181f0:	cmp	ip, #9
   181f4:	blt	1c3f0 <main@@Base+0x6360>
   181f8:	ldr	r2, [sp, #32]
   181fc:	mov	r1, r9
   18200:	ldrb	r0, [r1, #16]!
   18204:	ldr	r2, [r2]
   18208:	cmp	r2, #0
   1820c:	beq	18d00 <main@@Base+0x2c70>
   18210:	cmp	r0, #33	; 0x21
   18214:	bcc	18220 <main@@Base+0x2190>
   18218:	cmp	r0, #58	; 0x3a
   1821c:	bne	1c3f0 <main@@Base+0x6360>
   18220:	ldr	r0, [sp, #32]
   18224:	mov	r2, #0
   18228:	str	r2, [r0]
   1822c:	b	18d0c <main@@Base+0x2c7c>
   18230:	ldr	r8, [sp, #36]	; 0x24
   18234:	mov	r0, r8
   18238:	b	1ee10 <main@@Base+0x8d80>
   1823c:	cmp	sl, #9
   18240:	ldr	r8, [sp, #36]	; 0x24
   18244:	ldr	sl, [sp, #40]	; 0x28
   18248:	mov	r7, r9
   1824c:	blt	1a21c <main@@Base+0x418c>
   18250:	ldr	r2, [sp, #32]
   18254:	mov	r1, r9
   18258:	ldrb	r0, [r1, #8]!
   1825c:	ldr	r2, [r2]
   18260:	cmp	r2, #0
   18264:	beq	187d4 <main@@Base+0x2744>
   18268:	cmp	r0, #33	; 0x21
   1826c:	bcc	1827c <main@@Base+0x21ec>
   18270:	cmp	r0, #58	; 0x3a
   18274:	mov	r7, r9
   18278:	bne	1a21c <main@@Base+0x418c>
   1827c:	ldr	r0, [sp, #32]
   18280:	mov	r2, #0
   18284:	str	r2, [r0]
   18288:	b	187e4 <main@@Base+0x2754>
   1828c:	add	sl, r9, #16
   18290:	mov	r1, #8
   18294:	ldr	r8, [sp, #36]	; 0x24
   18298:	sub	lr, r5, sl
   1829c:	cmp	lr, #8
   182a0:	movcc	r1, lr
   182a4:	and	r1, r1, #15
   182a8:	sub	r7, r1, #1
   182ac:	cmp	r7, #7
   182b0:	bhi	1a4bc <main@@Base+0x442c>
   182b4:	add	r0, pc, #28
   182b8:	mov	r1, #0
   182bc:	mov	ip, #0
   182c0:	mov	r5, #0
   182c4:	mov	r3, #0
   182c8:	mov	r6, #0
   182cc:	mov	r4, #0
   182d0:	mov	r2, #0
   182d4:	ldr	pc, [r0, r7, lsl #2]
   182d8:	andeq	r8, r1, r4, lsr r3
   182dc:	andeq	r8, r1, ip, lsr #6
   182e0:	andeq	r8, r1, r4, lsr #6
   182e4:	andeq	r8, r1, ip, lsl r3
   182e8:	andeq	r8, r1, r0, lsl r3
   182ec:	andeq	r8, r1, r0, lsl #6
   182f0:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   182f4:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   182f8:	ldrb	r0, [r9, #22]
   182fc:	lsl	ip, r0, #8
   18300:	ldrb	r0, [r9, #21]
   18304:	mov	r5, r1
   18308:	orr	r0, ip, r0, lsl #16
   1830c:	mov	r1, r0
   18310:	ldrb	r0, [r9, #20]
   18314:	mov	r3, r5
   18318:	orr	r1, r1, r0, lsl #24
   1831c:	ldrb	r0, [r9, #19]
   18320:	orr	r6, r0, r3
   18324:	ldrb	r0, [r9, #18]
   18328:	orr	r4, r6, r0, lsl #8
   1832c:	ldrb	r0, [r9, #17]
   18330:	orr	r2, r4, r0, lsl #16
   18334:	bic	r0, r1, #255	; 0xff
   18338:	movw	r1, #29696	; 0x7400
   1833c:	ldr	r5, [sp, #44]	; 0x2c
   18340:	movt	r1, #30051	; 0x7563
   18344:	eor	r0, r0, r1
   18348:	ldrb	r1, [sl]
   1834c:	orr	r1, r2, r1, lsl #24
   18350:	movw	r2, #29810	; 0x7472
   18354:	movt	r2, #25715	; 0x6473
   18358:	eor	r1, r1, r2
   1835c:	orrs	r0, r0, r1
   18360:	bne	1a4bc <main@@Base+0x442c>
   18364:	cmp	lr, #8
   18368:	blt	1a4bc <main@@Base+0x442c>
   1836c:	ldr	r2, [sp, #32]
   18370:	mov	r1, r9
   18374:	ldrb	r0, [r1, #23]!
   18378:	ldr	r2, [r2]
   1837c:	cmp	r2, #0
   18380:	beq	18c74 <main@@Base+0x2be4>
   18384:	cmp	r0, #33	; 0x21
   18388:	bcc	18394 <main@@Base+0x2304>
   1838c:	cmp	r0, #58	; 0x3a
   18390:	bne	1a4bc <main@@Base+0x442c>
   18394:	ldr	r0, [sp, #32]
   18398:	mov	r2, #0
   1839c:	str	r2, [r0]
   183a0:	b	18c80 <main@@Base+0x2bf0>
   183a4:	add	r7, r9, #16
   183a8:	mov	r1, #8
   183ac:	mov	r2, #-268435456	; 0xf0000000
   183b0:	sub	r0, r5, r7
   183b4:	cmp	r0, #8
   183b8:	movcc	r1, r0
   183bc:	add	r1, r2, r1, lsl #28
   183c0:	asr	r1, r1, #28
   183c4:	cmp	r1, #0
   183c8:	blt	1841c <main@@Base+0x238c>
   183cc:	ldrb	r1, [r7]
   183d0:	cmp	r1, #115	; 0x73
   183d4:	bne	1841c <main@@Base+0x238c>
   183d8:	ldr	sl, [sp, #40]	; 0x28
   183dc:	cmp	r0, #2
   183e0:	blt	1e268 <main@@Base+0x81d8>
   183e4:	ldr	r2, [sp, #32]
   183e8:	mov	r1, r9
   183ec:	ldrb	r0, [r1, #17]!
   183f0:	ldr	r2, [r2]
   183f4:	cmp	r2, #0
   183f8:	beq	19150 <main@@Base+0x30c0>
   183fc:	cmp	r0, #33	; 0x21
   18400:	bcc	1840c <main@@Base+0x237c>
   18404:	cmp	r0, #58	; 0x3a
   18408:	bne	1e268 <main@@Base+0x81d8>
   1840c:	ldr	r0, [sp, #32]
   18410:	mov	r2, #0
   18414:	str	r2, [r0]
   18418:	b	1915c <main@@Base+0x30cc>
   1841c:	mov	r0, r8
   18420:	mov	r1, r7
   18424:	b	1a4c4 <main@@Base+0x4434>
   18428:	ldr	r8, [sp, #36]	; 0x24
   1842c:	movw	r1, #28257	; 0x6e61
   18430:	movt	r1, #28001	; 0x6d61
   18434:	teq	r0, r1
   18438:	bne	184e4 <main@@Base+0x2454>
   1843c:	cmp	sl, #5
   18440:	mov	r7, r9
   18444:	blt	1c160 <main@@Base+0x60d0>
   18448:	ldr	r2, [sp, #32]
   1844c:	mov	r1, r9
   18450:	ldrb	r0, [r1, #4]!
   18454:	ldr	r2, [r2]
   18458:	cmp	r2, #0
   1845c:	beq	18ca0 <main@@Base+0x2c10>
   18460:	cmp	r0, #33	; 0x21
   18464:	bcc	18474 <main@@Base+0x23e4>
   18468:	cmp	r0, #58	; 0x3a
   1846c:	mov	r7, r9
   18470:	bne	1c160 <main@@Base+0x60d0>
   18474:	ldr	r0, [sp, #32]
   18478:	mov	r2, #0
   1847c:	str	r2, [r0]
   18480:	b	18cb0 <main@@Base+0x2c20>
   18484:	and	r0, r8, #-16777216	; 0xff000000
   18488:	eor	r0, r0, #1711276032	; 0x66000000
   1848c:	orrs	r0, r0, r1
   18490:	bne	184e0 <main@@Base+0x2450>
   18494:	ldr	r8, [sp, #36]	; 0x24
   18498:	cmp	sl, #6
   1849c:	mov	r7, r9
   184a0:	blt	1c2c4 <main@@Base+0x6234>
   184a4:	ldr	r2, [sp, #32]
   184a8:	mov	r1, r9
   184ac:	ldrb	r0, [r1, #5]!
   184b0:	ldr	r2, [r2]
   184b4:	cmp	r2, #0
   184b8:	beq	18cd0 <main@@Base+0x2c40>
   184bc:	cmp	r0, #33	; 0x21
   184c0:	bcc	184d0 <main@@Base+0x2440>
   184c4:	cmp	r0, #58	; 0x3a
   184c8:	mov	r7, r9
   184cc:	bne	1c2c4 <main@@Base+0x6234>
   184d0:	ldr	r0, [sp, #32]
   184d4:	mov	r2, #0
   184d8:	str	r2, [r0]
   184dc:	b	18ce0 <main@@Base+0x2c50>
   184e0:	ldr	r8, [sp, #36]	; 0x24
   184e4:	mov	r0, r8
   184e8:	mov	r1, r9
   184ec:	b	1a4c4 <main@@Base+0x4434>
   184f0:	movw	r1, #13407	; 0x345f
   184f4:	ldr	r8, [sp, #36]	; 0x24
   184f8:	movt	r1, #30006	; 0x7536
   184fc:	eor	r1, r2, r1
   18500:	orrs	r1, r0, r1
   18504:	beq	1877c <main@@Base+0x26ec>
   18508:	movw	r1, #12895	; 0x325f
   1850c:	movt	r1, #30003	; 0x7533
   18510:	eor	r1, r2, r1
   18514:	orrs	r0, r0, r1
   18518:	bne	1a4bc <main@@Base+0x442c>
   1851c:	cmp	ip, #9
   18520:	blt	1cc50 <main@@Base+0x6bc0>
   18524:	ldr	r2, [sp, #32]
   18528:	mov	r1, r9
   1852c:	ldrb	r0, [r1, #16]!
   18530:	ldr	r2, [r2]
   18534:	cmp	r2, #0
   18538:	beq	19330 <main@@Base+0x32a0>
   1853c:	cmp	r0, #33	; 0x21
   18540:	bcc	1854c <main@@Base+0x24bc>
   18544:	cmp	r0, #58	; 0x3a
   18548:	bne	1cc50 <main@@Base+0x6bc0>
   1854c:	ldr	r0, [sp, #32]
   18550:	mov	r2, #0
   18554:	str	r2, [r0]
   18558:	b	1933c <main@@Base+0x32ac>
   1855c:	cmp	r0, #34	; 0x22
   18560:	mov	r7, r9
   18564:	bne	18dc0 <main@@Base+0x2d30>
   18568:	add	r1, r9, #7
   1856c:	sub	r0, r5, r1
   18570:	cmp	r0, #2
   18574:	blt	18818 <main@@Base+0x2788>
   18578:	ldrb	r0, [r1]
   1857c:	cmp	r0, #32
   18580:	bls	18804 <main@@Base+0x2774>
   18584:	mov	r7, r1
   18588:	b	18828 <main@@Base+0x2798>
   1858c:	cmp	r0, #34	; 0x22
   18590:	mov	r7, r9
   18594:	bne	18e84 <main@@Base+0x2df4>
   18598:	add	r1, r9, #6
   1859c:	sub	r0, r5, r1
   185a0:	cmp	r0, #2
   185a4:	blt	1888c <main@@Base+0x27fc>
   185a8:	ldrb	r0, [r1]
   185ac:	cmp	r0, #32
   185b0:	bls	18878 <main@@Base+0x27e8>
   185b4:	mov	r7, r1
   185b8:	b	1889c <main@@Base+0x280c>
   185bc:	and	r1, r2, #-16777216	; 0xff000000
   185c0:	teq	r1, #1728053248	; 0x67000000
   185c4:	bne	1e268 <main@@Base+0x81d8>
   185c8:	cmp	r0, #2
   185cc:	blt	1e268 <main@@Base+0x81d8>
   185d0:	ldr	r2, [sp, #32]
   185d4:	mov	r1, r9
   185d8:	ldrb	r0, [r1, #17]!
   185dc:	ldr	r2, [r2]
   185e0:	cmp	r2, #0
   185e4:	beq	195b0 <main@@Base+0x3520>
   185e8:	cmp	r0, #33	; 0x21
   185ec:	bcc	185f8 <main@@Base+0x2568>
   185f0:	cmp	r0, #58	; 0x3a
   185f4:	bne	1e268 <main@@Base+0x81d8>
   185f8:	ldr	r0, [sp, #32]
   185fc:	mov	r2, #0
   18600:	str	r2, [r0]
   18604:	b	195bc <main@@Base+0x352c>
   18608:	cmp	r0, #34	; 0x22
   1860c:	mov	r1, r9
   18610:	bne	19420 <main@@Base+0x3390>
   18614:	add	r2, r9, #6
   18618:	sub	r0, r5, r2
   1861c:	cmp	r0, #2
   18620:	blt	189ec <main@@Base+0x295c>
   18624:	ldrb	r0, [r2]
   18628:	cmp	r0, #32
   1862c:	bls	189d8 <main@@Base+0x2948>
   18630:	mov	r1, r2
   18634:	b	18a00 <main@@Base+0x2970>
   18638:	cmp	r0, #34	; 0x22
   1863c:	mov	r7, r9
   18640:	bne	19474 <main@@Base+0x33e4>
   18644:	add	r1, r9, #6
   18648:	sub	r0, r5, r1
   1864c:	cmp	r0, #2
   18650:	blt	18a60 <main@@Base+0x29d0>
   18654:	ldrb	r0, [r1]
   18658:	cmp	r0, #32
   1865c:	bls	18a4c <main@@Base+0x29bc>
   18660:	mov	r7, r1
   18664:	b	18a70 <main@@Base+0x29e0>
   18668:	movw	r2, #24428	; 0x5f6c
   1866c:	lsr	r1, r1, #8
   18670:	ldr	r5, [sp, #44]	; 0x2c
   18674:	movt	r2, #102	; 0x66
   18678:	eor	r2, r2, r0, lsr #8
   1867c:	orr	r0, r1, r0, lsl #24
   18680:	movw	r1, #26483	; 0x6773
   18684:	movt	r1, #28526	; 0x6f6e
   18688:	eor	r0, r0, r1
   1868c:	orrs	r0, r0, r2
   18690:	bne	1a4b8 <main@@Base+0x4428>
   18694:	ldr	r8, [sp, #36]	; 0x24
   18698:	cmp	lr, #8
   1869c:	blt	1a4bc <main@@Base+0x442c>
   186a0:	ldr	r2, [sp, #32]
   186a4:	mov	r1, r9
   186a8:	ldrb	r0, [r1, #15]!
   186ac:	ldr	r2, [r2]
   186b0:	cmp	r2, #0
   186b4:	beq	195dc <main@@Base+0x354c>
   186b8:	cmp	r0, #33	; 0x21
   186bc:	bcc	186c8 <main@@Base+0x2638>
   186c0:	cmp	r0, #58	; 0x3a
   186c4:	bne	1a4bc <main@@Base+0x442c>
   186c8:	ldr	r0, [sp, #32]
   186cc:	mov	r2, #0
   186d0:	str	r2, [r0]
   186d4:	b	195e8 <main@@Base+0x3558>
   186d8:	cmp	r0, #34	; 0x22
   186dc:	mov	r1, r9
   186e0:	bne	1962c <main@@Base+0x359c>
   186e4:	add	r2, r9, #5
   186e8:	sub	r0, r5, r2
   186ec:	cmp	r0, #2
   186f0:	blt	18ad4 <main@@Base+0x2a44>
   186f4:	ldrb	r0, [r2]
   186f8:	cmp	r0, #32
   186fc:	bls	18ac0 <main@@Base+0x2a30>
   18700:	mov	r1, r2
   18704:	b	18ae8 <main@@Base+0x2a58>
   18708:	cmp	r0, #34	; 0x22
   1870c:	mov	r4, r9
   18710:	bne	19684 <main@@Base+0x35f4>
   18714:	add	r1, r9, #5
   18718:	sub	r0, r5, r1
   1871c:	cmp	r0, #2
   18720:	blt	18b48 <main@@Base+0x2ab8>
   18724:	ldrb	r0, [r1]
   18728:	cmp	r0, #32
   1872c:	bls	18b34 <main@@Base+0x2aa4>
   18730:	mov	r4, r1
   18734:	b	18b58 <main@@Base+0x2ac8>
   18738:	cmp	r0, #34	; 0x22
   1873c:	mov	r1, r9
   18740:	bne	199c8 <main@@Base+0x3938>
   18744:	add	r2, r9, #5
   18748:	sub	r0, r5, r2
   1874c:	cmp	r0, #2
   18750:	blt	18bbc <main@@Base+0x2b2c>
   18754:	ldrb	r0, [r2]
   18758:	cmp	r0, #32
   1875c:	bls	18ba8 <main@@Base+0x2b18>
   18760:	mov	r1, r2
   18764:	b	18bd0 <main@@Base+0x2b40>
   18768:	cmp	r2, #1
   1876c:	mov	r1, #0
   18770:	mov	r2, #0
   18774:	beq	176c8 <main@@Base+0x1638>
   18778:	b	1e268 <main@@Base+0x81d8>
   1877c:	cmp	ip, #9
   18780:	blt	1ce48 <main@@Base+0x6db8>
   18784:	ldr	r2, [sp, #32]
   18788:	mov	r1, r9
   1878c:	ldrb	r0, [r1, #16]!
   18790:	ldr	r2, [r2]
   18794:	cmp	r2, #0
   18798:	beq	1935c <main@@Base+0x32cc>
   1879c:	cmp	r0, #33	; 0x21
   187a0:	bcc	187ac <main@@Base+0x271c>
   187a4:	cmp	r0, #58	; 0x3a
   187a8:	bne	1ce48 <main@@Base+0x6db8>
   187ac:	ldr	r0, [sp, #32]
   187b0:	mov	r2, #0
   187b4:	str	r2, [r0]
   187b8:	b	19368 <main@@Base+0x32d8>
   187bc:	ldr	sl, [sp, #40]	; 0x28
   187c0:	cmp	r2, #1
   187c4:	mov	r1, #0
   187c8:	mov	r2, #0
   187cc:	beq	17e3c <main@@Base+0x1dac>
   187d0:	b	1e268 <main@@Base+0x81d8>
   187d4:	cmp	r0, #34	; 0x22
   187d8:	mov	r7, r9
   187dc:	bne	1a21c <main@@Base+0x418c>
   187e0:	add	r1, r9, #9
   187e4:	sub	r0, r5, r1
   187e8:	cmp	r0, #2
   187ec:	blt	18d40 <main@@Base+0x2cb0>
   187f0:	ldrb	r0, [r1]
   187f4:	cmp	r0, #32
   187f8:	bls	18d2c <main@@Base+0x2c9c>
   187fc:	mov	r7, r1
   18800:	b	18d50 <main@@Base+0x2cc0>
   18804:	bne	18818 <main@@Base+0x2788>
   18808:	mov	r7, r1
   1880c:	ldrb	r0, [r7, #1]!
   18810:	cmp	r0, #32
   18814:	bhi	18828 <main@@Base+0x2798>
   18818:	mov	r0, r8
   1881c:	mov	r2, r5
   18820:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   18824:	mov	r7, r0
   18828:	cmp	r7, r5
   1882c:	beq	18860 <main@@Base+0x27d0>
   18830:	ldrb	r0, [r7]
   18834:	cmp	r0, #58	; 0x3a
   18838:	bne	18860 <main@@Base+0x27d0>
   1883c:	add	r1, r7, #1
   18840:	sub	r0, r5, r1
   18844:	cmp	r0, #2
   18848:	blt	18db0 <main@@Base+0x2d20>
   1884c:	ldrb	r0, [r1]
   18850:	cmp	r0, #32
   18854:	bls	18da0 <main@@Base+0x2d10>
   18858:	mov	r7, r1
   1885c:	b	18dc0 <main@@Base+0x2d30>
   18860:	mov	r0, r8
   18864:	mov	r1, r7
   18868:	mov	r2, r5
   1886c:	mov	r3, #4
   18870:	bl	337ac <flatcc_json_parser_set_error@@Base>
   18874:	b	18dbc <main@@Base+0x2d2c>
   18878:	bne	1888c <main@@Base+0x27fc>
   1887c:	mov	r7, r1
   18880:	ldrb	r0, [r7, #1]!
   18884:	cmp	r0, #32
   18888:	bhi	1889c <main@@Base+0x280c>
   1888c:	ldr	r0, [sp, #36]	; 0x24
   18890:	mov	r2, r5
   18894:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   18898:	mov	r7, r0
   1889c:	cmp	r7, r5
   188a0:	beq	188d4 <main@@Base+0x2844>
   188a4:	ldrb	r0, [r7]
   188a8:	cmp	r0, #58	; 0x3a
   188ac:	bne	188d4 <main@@Base+0x2844>
   188b0:	add	r1, r7, #1
   188b4:	sub	r0, r5, r1
   188b8:	cmp	r0, #2
   188bc:	blt	18e74 <main@@Base+0x2de4>
   188c0:	ldrb	r0, [r1]
   188c4:	cmp	r0, #32
   188c8:	bls	18e64 <main@@Base+0x2dd4>
   188cc:	mov	r7, r1
   188d0:	b	18e84 <main@@Base+0x2df4>
   188d4:	ldr	r0, [sp, #36]	; 0x24
   188d8:	mov	r1, r7
   188dc:	mov	r2, r5
   188e0:	mov	r3, #4
   188e4:	bl	337ac <flatcc_json_parser_set_error@@Base>
   188e8:	b	18e80 <main@@Base+0x2df0>
   188ec:	cmp	r0, #34	; 0x22
   188f0:	bne	1a4b8 <main@@Base+0x4428>
   188f4:	add	r1, r9, #17
   188f8:	ldr	r6, [sp, #36]	; 0x24
   188fc:	sub	r0, r5, r1
   18900:	cmp	r0, #2
   18904:	blt	190f0 <main@@Base+0x3060>
   18908:	ldrb	r0, [r1]
   1890c:	cmp	r0, #32
   18910:	bls	190dc <main@@Base+0x304c>
   18914:	mov	r4, r1
   18918:	b	19100 <main@@Base+0x3070>
   1891c:	cmp	r0, #34	; 0x22
   18920:	mov	r7, r9
   18924:	bne	1a5a4 <main@@Base+0x4514>
   18928:	add	r1, r9, #3
   1892c:	sub	r0, r5, r1
   18930:	cmp	r0, #2
   18934:	blt	19190 <main@@Base+0x3100>
   18938:	ldrb	r0, [r1]
   1893c:	cmp	r0, #32
   18940:	bls	1917c <main@@Base+0x30ec>
   18944:	mov	r7, r1
   18948:	b	191a0 <main@@Base+0x3110>
   1894c:	cmp	r0, #34	; 0x22
   18950:	mov	r4, r9
   18954:	bne	1a704 <main@@Base+0x4674>
   18958:	add	r1, r9, #4
   1895c:	sub	r0, r5, r1
   18960:	cmp	r0, #2
   18964:	blt	19204 <main@@Base+0x3174>
   18968:	ldrb	r0, [r1]
   1896c:	cmp	r0, #32
   18970:	bls	191f0 <main@@Base+0x3160>
   18974:	mov	r4, r1
   18978:	b	19214 <main@@Base+0x3184>
   1897c:	cmp	r0, #34	; 0x22
   18980:	mov	r7, r9
   18984:	bne	1b54c <main@@Base+0x54bc>
   18988:	add	r1, r9, #7
   1898c:	sub	r0, r5, r1
   18990:	cmp	r0, #2
   18994:	blt	19278 <main@@Base+0x31e8>
   18998:	ldrb	r0, [r1]
   1899c:	cmp	r0, #32
   189a0:	bls	19264 <main@@Base+0x31d4>
   189a4:	mov	r7, r1
   189a8:	b	19288 <main@@Base+0x31f8>
   189ac:	cmp	r0, #34	; 0x22
   189b0:	bne	1b874 <main@@Base+0x57e4>
   189b4:	add	r1, r9, #17
   189b8:	sub	r0, r5, r1
   189bc:	cmp	r0, #2
   189c0:	blt	1939c <main@@Base+0x330c>
   189c4:	ldrb	r0, [r1]
   189c8:	cmp	r0, #32
   189cc:	bls	19388 <main@@Base+0x32f8>
   189d0:	mov	r7, r1
   189d4:	b	193ac <main@@Base+0x331c>
   189d8:	bne	189ec <main@@Base+0x295c>
   189dc:	mov	r1, r2
   189e0:	ldrb	r0, [r1, #1]!
   189e4:	cmp	r0, #32
   189e8:	bhi	18a00 <main@@Base+0x2970>
   189ec:	mov	r1, r2
   189f0:	mov	r0, r8
   189f4:	mov	r2, r5
   189f8:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   189fc:	mov	r1, r0
   18a00:	cmp	r1, r5
   18a04:	beq	18a38 <main@@Base+0x29a8>
   18a08:	ldrb	r0, [r1]
   18a0c:	cmp	r0, #58	; 0x3a
   18a10:	bne	18a38 <main@@Base+0x29a8>
   18a14:	add	r2, r1, #1
   18a18:	sub	r0, r5, r2
   18a1c:	cmp	r0, #2
   18a20:	blt	1940c <main@@Base+0x337c>
   18a24:	ldrb	r0, [r2]
   18a28:	cmp	r0, #32
   18a2c:	bls	193fc <main@@Base+0x336c>
   18a30:	mov	r1, r2
   18a34:	b	19420 <main@@Base+0x3390>
   18a38:	mov	r0, r8
   18a3c:	mov	r2, r5
   18a40:	mov	r3, #4
   18a44:	bl	337ac <flatcc_json_parser_set_error@@Base>
   18a48:	b	1941c <main@@Base+0x338c>
   18a4c:	bne	18a60 <main@@Base+0x29d0>
   18a50:	mov	r7, r1
   18a54:	ldrb	r0, [r7, #1]!
   18a58:	cmp	r0, #32
   18a5c:	bhi	18a70 <main@@Base+0x29e0>
   18a60:	mov	r0, r8
   18a64:	mov	r2, r5
   18a68:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   18a6c:	mov	r7, r0
   18a70:	cmp	r7, r5
   18a74:	beq	18aa8 <main@@Base+0x2a18>
   18a78:	ldrb	r0, [r7]
   18a7c:	cmp	r0, #58	; 0x3a
   18a80:	bne	18aa8 <main@@Base+0x2a18>
   18a84:	add	r1, r7, #1
   18a88:	sub	r0, r5, r1
   18a8c:	cmp	r0, #2
   18a90:	blt	19464 <main@@Base+0x33d4>
   18a94:	ldrb	r0, [r1]
   18a98:	cmp	r0, #32
   18a9c:	bls	19454 <main@@Base+0x33c4>
   18aa0:	mov	r7, r1
   18aa4:	b	19474 <main@@Base+0x33e4>
   18aa8:	mov	r0, r8
   18aac:	mov	r1, r7
   18ab0:	mov	r2, r5
   18ab4:	mov	r3, #4
   18ab8:	bl	337ac <flatcc_json_parser_set_error@@Base>
   18abc:	b	19470 <main@@Base+0x33e0>
   18ac0:	bne	18ad4 <main@@Base+0x2a44>
   18ac4:	mov	r1, r2
   18ac8:	ldrb	r0, [r1, #1]!
   18acc:	cmp	r0, #32
   18ad0:	bhi	18ae8 <main@@Base+0x2a58>
   18ad4:	mov	r1, r2
   18ad8:	mov	r0, r8
   18adc:	mov	r2, r5
   18ae0:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   18ae4:	mov	r1, r0
   18ae8:	cmp	r1, r5
   18aec:	beq	18b20 <main@@Base+0x2a90>
   18af0:	ldrb	r0, [r1]
   18af4:	cmp	r0, #58	; 0x3a
   18af8:	bne	18b20 <main@@Base+0x2a90>
   18afc:	add	r2, r1, #1
   18b00:	sub	r0, r5, r2
   18b04:	cmp	r0, #2
   18b08:	blt	19618 <main@@Base+0x3588>
   18b0c:	ldrb	r0, [r2]
   18b10:	cmp	r0, #32
   18b14:	bls	19608 <main@@Base+0x3578>
   18b18:	mov	r1, r2
   18b1c:	b	1962c <main@@Base+0x359c>
   18b20:	mov	r0, r8
   18b24:	mov	r2, r5
   18b28:	mov	r3, #4
   18b2c:	bl	337ac <flatcc_json_parser_set_error@@Base>
   18b30:	b	19628 <main@@Base+0x3598>
   18b34:	bne	18b48 <main@@Base+0x2ab8>
   18b38:	mov	r4, r1
   18b3c:	ldrb	r0, [r4, #1]!
   18b40:	cmp	r0, #32
   18b44:	bhi	18b58 <main@@Base+0x2ac8>
   18b48:	mov	r0, r8
   18b4c:	mov	r2, r5
   18b50:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   18b54:	mov	r4, r0
   18b58:	cmp	r4, r5
   18b5c:	beq	18b90 <main@@Base+0x2b00>
   18b60:	ldrb	r0, [r4]
   18b64:	cmp	r0, #58	; 0x3a
   18b68:	bne	18b90 <main@@Base+0x2b00>
   18b6c:	add	r1, r4, #1
   18b70:	sub	r0, r5, r1
   18b74:	cmp	r0, #2
   18b78:	blt	19674 <main@@Base+0x35e4>
   18b7c:	ldrb	r0, [r1]
   18b80:	cmp	r0, #32
   18b84:	bls	19664 <main@@Base+0x35d4>
   18b88:	mov	r4, r1
   18b8c:	b	19684 <main@@Base+0x35f4>
   18b90:	mov	r0, r8
   18b94:	mov	r1, r4
   18b98:	mov	r2, r5
   18b9c:	mov	r3, #4
   18ba0:	bl	337ac <flatcc_json_parser_set_error@@Base>
   18ba4:	b	19680 <main@@Base+0x35f0>
   18ba8:	bne	18bbc <main@@Base+0x2b2c>
   18bac:	mov	r1, r2
   18bb0:	ldrb	r0, [r1, #1]!
   18bb4:	cmp	r0, #32
   18bb8:	bhi	18bd0 <main@@Base+0x2b40>
   18bbc:	ldr	r0, [sp, #36]	; 0x24
   18bc0:	mov	r1, r2
   18bc4:	mov	r2, r5
   18bc8:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   18bcc:	mov	r1, r0
   18bd0:	cmp	r1, r5
   18bd4:	beq	18c08 <main@@Base+0x2b78>
   18bd8:	ldrb	r0, [r1]
   18bdc:	cmp	r0, #58	; 0x3a
   18be0:	bne	18c08 <main@@Base+0x2b78>
   18be4:	add	r2, r1, #1
   18be8:	sub	r0, r5, r2
   18bec:	cmp	r0, #2
   18bf0:	blt	199b4 <main@@Base+0x3924>
   18bf4:	ldrb	r0, [r2]
   18bf8:	cmp	r0, #32
   18bfc:	bls	199a4 <main@@Base+0x3914>
   18c00:	mov	r1, r2
   18c04:	b	199c8 <main@@Base+0x3938>
   18c08:	ldr	r0, [sp, #36]	; 0x24
   18c0c:	mov	r2, r5
   18c10:	mov	r3, #4
   18c14:	bl	337ac <flatcc_json_parser_set_error@@Base>
   18c18:	b	199c4 <main@@Base+0x3934>
   18c1c:	cmp	r0, #34	; 0x22
   18c20:	bne	1e268 <main@@Base+0x81d8>
   18c24:	add	r1, r9, #11
   18c28:	sub	r0, r5, r1
   18c2c:	cmp	r0, #2
   18c30:	blt	19b60 <main@@Base+0x3ad0>
   18c34:	ldrb	r0, [r1]
   18c38:	cmp	r0, #32
   18c3c:	bls	19b4c <main@@Base+0x3abc>
   18c40:	mov	r4, r1
   18c44:	b	19b70 <main@@Base+0x3ae0>
   18c48:	cmp	r0, #34	; 0x22
   18c4c:	bne	1e268 <main@@Base+0x81d8>
   18c50:	add	r1, r9, #19
   18c54:	sub	r0, r5, r1
   18c58:	cmp	r0, #2
   18c5c:	blt	19bd4 <main@@Base+0x3b44>
   18c60:	ldrb	r0, [r1]
   18c64:	cmp	r0, #32
   18c68:	bls	19bc0 <main@@Base+0x3b30>
   18c6c:	mov	r4, r1
   18c70:	b	19be4 <main@@Base+0x3b54>
   18c74:	cmp	r0, #34	; 0x22
   18c78:	bne	1a4bc <main@@Base+0x442c>
   18c7c:	add	r1, r9, #24
   18c80:	sub	r0, r5, r1
   18c84:	cmp	r0, #2
   18c88:	blt	19c48 <main@@Base+0x3bb8>
   18c8c:	ldrb	r0, [r1]
   18c90:	cmp	r0, #32
   18c94:	bls	19c34 <main@@Base+0x3ba4>
   18c98:	mov	r7, r1
   18c9c:	b	19c58 <main@@Base+0x3bc8>
   18ca0:	cmp	r0, #34	; 0x22
   18ca4:	mov	r7, r9
   18ca8:	bne	1c160 <main@@Base+0x60d0>
   18cac:	add	r1, r9, #5
   18cb0:	sub	r0, r5, r1
   18cb4:	cmp	r0, #2
   18cb8:	blt	19cbc <main@@Base+0x3c2c>
   18cbc:	ldrb	r0, [r1]
   18cc0:	cmp	r0, #32
   18cc4:	bls	19ca8 <main@@Base+0x3c18>
   18cc8:	mov	r7, r1
   18ccc:	b	19ccc <main@@Base+0x3c3c>
   18cd0:	cmp	r0, #34	; 0x22
   18cd4:	mov	r7, r9
   18cd8:	bne	1c2c4 <main@@Base+0x6234>
   18cdc:	add	r1, r9, #6
   18ce0:	sub	r0, r5, r1
   18ce4:	cmp	r0, #2
   18ce8:	blt	19d30 <main@@Base+0x3ca0>
   18cec:	ldrb	r0, [r1]
   18cf0:	cmp	r0, #32
   18cf4:	bls	19d1c <main@@Base+0x3c8c>
   18cf8:	mov	r7, r1
   18cfc:	b	19d40 <main@@Base+0x3cb0>
   18d00:	cmp	r0, #34	; 0x22
   18d04:	bne	1c3f0 <main@@Base+0x6360>
   18d08:	add	r1, r9, #17
   18d0c:	sub	r0, r5, r1
   18d10:	cmp	r0, #2
   18d14:	blt	19da4 <main@@Base+0x3d14>
   18d18:	ldrb	r0, [r1]
   18d1c:	cmp	r0, #32
   18d20:	bls	19d90 <main@@Base+0x3d00>
   18d24:	mov	r7, r1
   18d28:	b	19db4 <main@@Base+0x3d24>
   18d2c:	bne	18d40 <main@@Base+0x2cb0>
   18d30:	mov	r7, r1
   18d34:	ldrb	r0, [r7, #1]!
   18d38:	cmp	r0, #32
   18d3c:	bhi	18d50 <main@@Base+0x2cc0>
   18d40:	mov	r0, r8
   18d44:	mov	r2, r5
   18d48:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   18d4c:	mov	r7, r0
   18d50:	cmp	r7, r5
   18d54:	beq	18d88 <main@@Base+0x2cf8>
   18d58:	ldrb	r0, [r7]
   18d5c:	cmp	r0, #58	; 0x3a
   18d60:	bne	18d88 <main@@Base+0x2cf8>
   18d64:	add	r1, r7, #1
   18d68:	sub	r0, r5, r1
   18d6c:	cmp	r0, #2
   18d70:	blt	1a20c <main@@Base+0x417c>
   18d74:	ldrb	r0, [r1]
   18d78:	cmp	r0, #32
   18d7c:	bls	1a1fc <main@@Base+0x416c>
   18d80:	mov	r7, r1
   18d84:	b	1a21c <main@@Base+0x418c>
   18d88:	mov	r0, r8
   18d8c:	mov	r1, r7
   18d90:	mov	r2, r5
   18d94:	mov	r3, #4
   18d98:	bl	337ac <flatcc_json_parser_set_error@@Base>
   18d9c:	b	1a218 <main@@Base+0x4188>
   18da0:	bne	18db0 <main@@Base+0x2d20>
   18da4:	ldrb	r0, [r7, #2]!
   18da8:	cmp	r0, #32
   18dac:	bhi	18dc0 <main@@Base+0x2d30>
   18db0:	mov	r0, r8
   18db4:	mov	r2, r5
   18db8:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   18dbc:	mov	r7, r0
   18dc0:	ldr	sl, [sp, #40]	; 0x28
   18dc4:	cmp	r9, r7
   18dc8:	beq	19f1c <main@@Base+0x3e8c>
   18dcc:	mov	r0, #0
   18dd0:	mov	r1, r7
   18dd4:	mov	r2, r5
   18dd8:	sub	r3, fp, #56	; 0x38
   18ddc:	str	r0, [fp, #-56]	; 0xffffffc8
   18de0:	mov	r0, r8
   18de4:	bl	35580 <flatcc_json_parser_float@@Base>
   18de8:	mov	r4, r0
   18dec:	cmp	r7, r0
   18df0:	bne	18e24 <main@@Base+0x2d94>
   18df4:	movw	r3, #45304	; 0xb0f8
   18df8:	sub	r0, fp, #56	; 0x38
   18dfc:	mov	r1, r7
   18e00:	mov	r2, r5
   18e04:	str	r0, [sp]
   18e08:	mov	r0, r8
   18e0c:	movt	r3, #5
   18e10:	bl	24b38 <main@@Base+0xeaa8>
   18e14:	mov	r4, r0
   18e18:	cmp	r0, r7
   18e1c:	cmpne	r4, r5
   18e20:	beq	16fc4 <main@@Base+0xf34>
   18e24:	vldr	s0, [fp, #-56]	; 0xffffffc8
   18e28:	vcmp.f32	s0, #0.0
   18e2c:	vmrs	APSR_nzcv, fpscr
   18e30:	bne	18e40 <main@@Base+0x2db0>
   18e34:	ldrb	r0, [r8, #8]
   18e38:	tst	r0, #2
   18e3c:	beq	1ee1c <main@@Base+0x8d8c>
   18e40:	ldr	r0, [r8]
   18e44:	mov	r1, #27
   18e48:	mov	r2, #4
   18e4c:	mov	r3, #4
   18e50:	bl	30b5c <flatcc_builder_table_add@@Base>
   18e54:	cmp	r0, #0
   18e58:	beq	16fc4 <main@@Base+0xf34>
   18e5c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   18e60:	b	19f74 <main@@Base+0x3ee4>
   18e64:	bne	18e74 <main@@Base+0x2de4>
   18e68:	ldrb	r0, [r7, #2]!
   18e6c:	cmp	r0, #32
   18e70:	bhi	18e84 <main@@Base+0x2df4>
   18e74:	ldr	r0, [sp, #36]	; 0x24
   18e78:	mov	r2, r5
   18e7c:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   18e80:	mov	r7, r0
   18e84:	cmp	r9, r7
   18e88:	beq	19e88 <main@@Base+0x3df8>
   18e8c:	ldr	r8, [sp, #36]	; 0x24
   18e90:	mov	r1, #4
   18e94:	mov	r2, #2
   18e98:	mvn	r3, #-1073741824	; 0xc0000000
   18e9c:	ldr	r0, [r8]
   18ea0:	bl	2f4c0 <flatcc_builder_start_vector@@Base>
   18ea4:	cmp	r0, #0
   18ea8:	bne	20af8 <main@@Base+0xaa68>
   18eac:	cmp	r7, r5
   18eb0:	beq	18ee8 <main@@Base+0x2e58>
   18eb4:	ldrb	r0, [r7]
   18eb8:	cmp	r0, #91	; 0x5b
   18ebc:	bne	18ee8 <main@@Base+0x2e58>
   18ec0:	ldr	sl, [sp, #40]	; 0x28
   18ec4:	add	r1, r7, #1
   18ec8:	sub	r0, r5, r1
   18ecc:	cmp	r0, #2
   18ed0:	blt	18f34 <main@@Base+0x2ea4>
   18ed4:	ldrb	r0, [r1]
   18ed8:	cmp	r0, #32
   18edc:	bls	18f24 <main@@Base+0x2e94>
   18ee0:	mov	r7, r1
   18ee4:	b	18f44 <main@@Base+0x2eb4>
   18ee8:	mov	r0, r8
   18eec:	mov	r1, r7
   18ef0:	mov	r2, r5
   18ef4:	mov	r3, #22
   18ef8:	bl	337ac <flatcc_json_parser_set_error@@Base>
   18efc:	ldr	sl, [sp, #40]	; 0x28
   18f00:	mov	r7, r0
   18f04:	ldr	r0, [r8]
   18f08:	bl	3052c <flatcc_builder_end_vector@@Base>
   18f0c:	cmp	r0, #0
   18f10:	str	r0, [sp, #52]	; 0x34
   18f14:	beq	20af8 <main@@Base+0xaa68>
   18f18:	ldr	r0, [r8]
   18f1c:	mov	r1, #9
   18f20:	b	19f60 <main@@Base+0x3ed0>
   18f24:	bne	18f34 <main@@Base+0x2ea4>
   18f28:	ldrb	r0, [r7, #2]!
   18f2c:	cmp	r0, #32
   18f30:	bhi	18f44 <main@@Base+0x2eb4>
   18f34:	mov	r0, r8
   18f38:	mov	r2, r5
   18f3c:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   18f40:	mov	r7, r0
   18f44:	cmp	r7, r5
   18f48:	mov	r4, r5
   18f4c:	beq	18f90 <main@@Base+0x2f00>
   18f50:	ldrb	r0, [r7]
   18f54:	cmp	r0, #93	; 0x5d
   18f58:	bne	18f8c <main@@Base+0x2efc>
   18f5c:	add	r1, r7, #1
   18f60:	sub	r0, r5, r1
   18f64:	cmp	r0, #2
   18f68:	blt	19b10 <main@@Base+0x3a80>
   18f6c:	ldrb	r0, [r1]
   18f70:	cmp	r0, #32
   18f74:	bhi	1909c <main@@Base+0x300c>
   18f78:	bne	19b10 <main@@Base+0x3a80>
   18f7c:	ldrb	r0, [r7, #2]!
   18f80:	cmp	r0, #32
   18f84:	bls	19b10 <main@@Base+0x3a80>
   18f88:	b	18f04 <main@@Base+0x2e74>
   18f8c:	mov	r4, r7
   18f90:	ldr	r0, [r8]
   18f94:	mov	r1, #1
   18f98:	bl	2eca8 <flatcc_builder_extend_vector@@Base>
   18f9c:	mov	r3, r0
   18fa0:	cmp	r0, #0
   18fa4:	beq	16fc4 <main@@Base+0xf34>
   18fa8:	mov	r0, r8
   18fac:	mov	r1, r4
   18fb0:	mov	r2, r5
   18fb4:	bl	22e60 <main@@Base+0xcdd0>
   18fb8:	mov	r1, r0
   18fbc:	sub	r0, r5, r0
   18fc0:	cmp	r0, #2
   18fc4:	blt	18ff0 <main@@Base+0x2f60>
   18fc8:	ldrb	r0, [r1]
   18fcc:	cmp	r0, #32
   18fd0:	bls	18fdc <main@@Base+0x2f4c>
   18fd4:	mov	r4, r1
   18fd8:	b	19000 <main@@Base+0x2f70>
   18fdc:	bne	18ff0 <main@@Base+0x2f60>
   18fe0:	mov	r4, r1
   18fe4:	ldrb	r0, [r4, #1]!
   18fe8:	cmp	r0, #32
   18fec:	bhi	19000 <main@@Base+0x2f70>
   18ff0:	mov	r0, r8
   18ff4:	mov	r2, r5
   18ff8:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   18ffc:	mov	r4, r0
   19000:	cmp	r4, r5
   19004:	beq	19070 <main@@Base+0x2fe0>
   19008:	ldrb	r0, [r4]
   1900c:	cmp	r0, #44	; 0x2c
   19010:	bne	19078 <main@@Base+0x2fe8>
   19014:	add	r1, r4, #1
   19018:	sub	r0, r5, r1
   1901c:	cmp	r0, #2
   19020:	blt	19048 <main@@Base+0x2fb8>
   19024:	ldrb	r0, [r1]
   19028:	cmp	r0, #32
   1902c:	bls	19038 <main@@Base+0x2fa8>
   19030:	mov	r4, r1
   19034:	b	19058 <main@@Base+0x2fc8>
   19038:	bne	19048 <main@@Base+0x2fb8>
   1903c:	ldrb	r0, [r4, #2]!
   19040:	cmp	r0, #32
   19044:	bhi	19058 <main@@Base+0x2fc8>
   19048:	mov	r0, r8
   1904c:	mov	r2, r5
   19050:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   19054:	mov	r4, r0
   19058:	cmp	r4, r5
   1905c:	beq	190a4 <main@@Base+0x3014>
   19060:	ldrb	r0, [r4]
   19064:	cmp	r0, #93	; 0x5d
   19068:	bne	18f90 <main@@Base+0x2f00>
   1906c:	b	19080 <main@@Base+0x2ff0>
   19070:	mov	r7, r5
   19074:	b	18f04 <main@@Base+0x2e74>
   19078:	cmp	r0, #93	; 0x5d
   1907c:	bne	19598 <main@@Base+0x3508>
   19080:	add	r1, r4, #1
   19084:	sub	r0, r5, r1
   19088:	cmp	r0, #2
   1908c:	blt	19b10 <main@@Base+0x3a80>
   19090:	ldrb	r0, [r1]
   19094:	cmp	r0, #32
   19098:	bls	19afc <main@@Base+0x3a6c>
   1909c:	mov	r7, r1
   190a0:	b	18f04 <main@@Base+0x2e74>
   190a4:	mov	r0, r8
   190a8:	mov	r1, r5
   190ac:	b	195a0 <main@@Base+0x3510>
   190b0:	cmp	r0, #34	; 0x22
   190b4:	bne	1c654 <main@@Base+0x65c4>
   190b8:	add	r1, r9, #22
   190bc:	sub	r0, r5, r1
   190c0:	cmp	r0, #2
   190c4:	blt	1a3c0 <main@@Base+0x4330>
   190c8:	ldrb	r0, [r1]
   190cc:	cmp	r0, #32
   190d0:	bls	1a3ac <main@@Base+0x431c>
   190d4:	mov	r4, r1
   190d8:	b	1a3d0 <main@@Base+0x4340>
   190dc:	bne	190f0 <main@@Base+0x3060>
   190e0:	mov	r4, r1
   190e4:	ldrb	r0, [r4, #1]!
   190e8:	cmp	r0, #32
   190ec:	bhi	19100 <main@@Base+0x3070>
   190f0:	mov	r0, r6
   190f4:	mov	r2, r5
   190f8:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   190fc:	mov	r4, r0
   19100:	cmp	r4, r5
   19104:	beq	19138 <main@@Base+0x30a8>
   19108:	ldrb	r0, [r4]
   1910c:	cmp	r0, #58	; 0x3a
   19110:	bne	19138 <main@@Base+0x30a8>
   19114:	add	r1, r4, #1
   19118:	sub	r0, r5, r1
   1911c:	cmp	r0, #2
   19120:	blt	1a444 <main@@Base+0x43b4>
   19124:	ldrb	r0, [r1]
   19128:	cmp	r0, #32
   1912c:	bls	1a434 <main@@Base+0x43a4>
   19130:	mov	r4, r1
   19134:	b	1a454 <main@@Base+0x43c4>
   19138:	mov	r0, r6
   1913c:	mov	r1, r4
   19140:	mov	r2, r5
   19144:	mov	r3, #4
   19148:	bl	337ac <flatcc_json_parser_set_error@@Base>
   1914c:	b	1a450 <main@@Base+0x43c0>
   19150:	cmp	r0, #34	; 0x22
   19154:	bne	1e268 <main@@Base+0x81d8>
   19158:	add	r1, r9, #18
   1915c:	sub	r0, r5, r1
   19160:	cmp	r0, #2
   19164:	blt	1a524 <main@@Base+0x4494>
   19168:	ldrb	r0, [r1]
   1916c:	cmp	r0, #32
   19170:	bls	1a510 <main@@Base+0x4480>
   19174:	mov	r4, r1
   19178:	b	1a534 <main@@Base+0x44a4>
   1917c:	bne	19190 <main@@Base+0x3100>
   19180:	mov	r7, r1
   19184:	ldrb	r0, [r7, #1]!
   19188:	cmp	r0, #32
   1918c:	bhi	191a0 <main@@Base+0x3110>
   19190:	mov	r0, r8
   19194:	mov	r2, r5
   19198:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1919c:	mov	r7, r0
   191a0:	cmp	r7, r5
   191a4:	beq	191d8 <main@@Base+0x3148>
   191a8:	ldrb	r0, [r7]
   191ac:	cmp	r0, #58	; 0x3a
   191b0:	bne	191d8 <main@@Base+0x3148>
   191b4:	add	r1, r7, #1
   191b8:	sub	r0, r5, r1
   191bc:	cmp	r0, #2
   191c0:	blt	1a594 <main@@Base+0x4504>
   191c4:	ldrb	r0, [r1]
   191c8:	cmp	r0, #32
   191cc:	bls	1a584 <main@@Base+0x44f4>
   191d0:	mov	r7, r1
   191d4:	b	1a5a4 <main@@Base+0x4514>
   191d8:	mov	r0, r8
   191dc:	mov	r1, r7
   191e0:	mov	r2, r5
   191e4:	mov	r3, #4
   191e8:	bl	337ac <flatcc_json_parser_set_error@@Base>
   191ec:	b	1a5a0 <main@@Base+0x4510>
   191f0:	bne	19204 <main@@Base+0x3174>
   191f4:	mov	r4, r1
   191f8:	ldrb	r0, [r4, #1]!
   191fc:	cmp	r0, #32
   19200:	bhi	19214 <main@@Base+0x3184>
   19204:	mov	r0, r8
   19208:	mov	r2, r5
   1920c:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   19210:	mov	r4, r0
   19214:	cmp	r4, r5
   19218:	beq	1924c <main@@Base+0x31bc>
   1921c:	ldrb	r0, [r4]
   19220:	cmp	r0, #58	; 0x3a
   19224:	bne	1924c <main@@Base+0x31bc>
   19228:	add	r1, r4, #1
   1922c:	sub	r0, r5, r1
   19230:	cmp	r0, #2
   19234:	blt	1a6f4 <main@@Base+0x4664>
   19238:	ldrb	r0, [r1]
   1923c:	cmp	r0, #32
   19240:	bls	1a6e4 <main@@Base+0x4654>
   19244:	mov	r4, r1
   19248:	b	1a704 <main@@Base+0x4674>
   1924c:	mov	r0, r8
   19250:	mov	r1, r4
   19254:	mov	r2, r5
   19258:	mov	r3, #4
   1925c:	bl	337ac <flatcc_json_parser_set_error@@Base>
   19260:	b	1a700 <main@@Base+0x4670>
   19264:	bne	19278 <main@@Base+0x31e8>
   19268:	mov	r7, r1
   1926c:	ldrb	r0, [r7, #1]!
   19270:	cmp	r0, #32
   19274:	bhi	19288 <main@@Base+0x31f8>
   19278:	mov	r0, r8
   1927c:	mov	r2, r5
   19280:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   19284:	mov	r7, r0
   19288:	cmp	r7, r5
   1928c:	beq	192c0 <main@@Base+0x3230>
   19290:	ldrb	r0, [r7]
   19294:	cmp	r0, #58	; 0x3a
   19298:	bne	192c0 <main@@Base+0x3230>
   1929c:	add	r1, r7, #1
   192a0:	sub	r0, r5, r1
   192a4:	cmp	r0, #2
   192a8:	blt	1b53c <main@@Base+0x54ac>
   192ac:	ldrb	r0, [r1]
   192b0:	cmp	r0, #32
   192b4:	bls	1b52c <main@@Base+0x549c>
   192b8:	mov	r7, r1
   192bc:	b	1b54c <main@@Base+0x54bc>
   192c0:	mov	r0, r8
   192c4:	mov	r1, r7
   192c8:	mov	r2, r5
   192cc:	mov	r3, #4
   192d0:	bl	337ac <flatcc_json_parser_set_error@@Base>
   192d4:	b	1b548 <main@@Base+0x54b8>
   192d8:	cmp	r0, #34	; 0x22
   192dc:	bne	1e268 <main@@Base+0x81d8>
   192e0:	add	r1, r9, #10
   192e4:	sub	r0, r5, r1
   192e8:	cmp	r0, #2
   192ec:	blt	1b5e8 <main@@Base+0x5558>
   192f0:	ldrb	r0, [r1]
   192f4:	cmp	r0, #32
   192f8:	bls	1b5d4 <main@@Base+0x5544>
   192fc:	mov	r4, r1
   19300:	b	1b5f8 <main@@Base+0x5568>
   19304:	cmp	r0, #34	; 0x22
   19308:	bne	1e268 <main@@Base+0x81d8>
   1930c:	add	r1, r9, #10
   19310:	sub	r0, r5, r1
   19314:	cmp	r0, #2
   19318:	blt	1b65c <main@@Base+0x55cc>
   1931c:	ldrb	r0, [r1]
   19320:	cmp	r0, #32
   19324:	bls	1b648 <main@@Base+0x55b8>
   19328:	mov	r4, r1
   1932c:	b	1b66c <main@@Base+0x55dc>
   19330:	cmp	r0, #34	; 0x22
   19334:	bne	1cc50 <main@@Base+0x6bc0>
   19338:	add	r1, r9, #17
   1933c:	sub	r0, r5, r1
   19340:	cmp	r0, #2
   19344:	blt	1b6d0 <main@@Base+0x5640>
   19348:	ldrb	r0, [r1]
   1934c:	cmp	r0, #32
   19350:	bls	1b6bc <main@@Base+0x562c>
   19354:	mov	r7, r1
   19358:	b	1b6e0 <main@@Base+0x5650>
   1935c:	cmp	r0, #34	; 0x22
   19360:	bne	1ce48 <main@@Base+0x6db8>
   19364:	add	r1, r9, #17
   19368:	sub	r0, r5, r1
   1936c:	cmp	r0, #2
   19370:	blt	1b74c <main@@Base+0x56bc>
   19374:	ldrb	r0, [r1]
   19378:	cmp	r0, #32
   1937c:	bls	1b738 <main@@Base+0x56a8>
   19380:	mov	r7, r1
   19384:	b	1b75c <main@@Base+0x56cc>
   19388:	bne	1939c <main@@Base+0x330c>
   1938c:	mov	r7, r1
   19390:	ldrb	r0, [r7, #1]!
   19394:	cmp	r0, #32
   19398:	bhi	193ac <main@@Base+0x331c>
   1939c:	mov	r0, r8
   193a0:	mov	r2, r5
   193a4:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   193a8:	mov	r7, r0
   193ac:	cmp	r7, r5
   193b0:	beq	193e4 <main@@Base+0x3354>
   193b4:	ldrb	r0, [r7]
   193b8:	cmp	r0, #58	; 0x3a
   193bc:	bne	193e4 <main@@Base+0x3354>
   193c0:	add	r1, r7, #1
   193c4:	sub	r0, r5, r1
   193c8:	cmp	r0, #2
   193cc:	blt	1b7dc <main@@Base+0x574c>
   193d0:	ldrb	r0, [r1]
   193d4:	cmp	r0, #32
   193d8:	bls	1b7cc <main@@Base+0x573c>
   193dc:	mov	r7, r1
   193e0:	b	1b7ec <main@@Base+0x575c>
   193e4:	mov	r0, r8
   193e8:	mov	r1, r7
   193ec:	mov	r2, r5
   193f0:	mov	r3, #4
   193f4:	bl	337ac <flatcc_json_parser_set_error@@Base>
   193f8:	b	1b7e8 <main@@Base+0x5758>
   193fc:	bne	1940c <main@@Base+0x337c>
   19400:	ldrb	r0, [r1, #2]!
   19404:	cmp	r0, #32
   19408:	bhi	19420 <main@@Base+0x3390>
   1940c:	mov	r1, r2
   19410:	mov	r0, r8
   19414:	mov	r2, r5
   19418:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1941c:	mov	r1, r0
   19420:	cmp	r9, r1
   19424:	beq	19f1c <main@@Base+0x3e8c>
   19428:	mov	r0, r8
   1942c:	mov	r2, r5
   19430:	add	r3, sp, #52	; 0x34
   19434:	bl	16f84 <main@@Base+0xef4>
   19438:	mov	r4, r0
   1943c:	ldr	r0, [sp, #52]	; 0x34
   19440:	cmp	r0, #0
   19444:	beq	16fc4 <main@@Base+0xf34>
   19448:	ldr	r0, [r8]
   1944c:	mov	r1, #12
   19450:	b	19718 <main@@Base+0x3688>
   19454:	bne	19464 <main@@Base+0x33d4>
   19458:	ldrb	r0, [r7, #2]!
   1945c:	cmp	r0, #32
   19460:	bhi	19474 <main@@Base+0x33e4>
   19464:	mov	r0, r8
   19468:	mov	r2, r5
   1946c:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   19470:	mov	r7, r0
   19474:	cmp	r9, r7
   19478:	beq	19f1c <main@@Base+0x3e8c>
   1947c:	mov	r6, #0
   19480:	cmp	r7, r5
   19484:	str	r6, [fp, #-52]	; 0xffffffcc
   19488:	str	r6, [fp, #-56]	; 0xffffffc8
   1948c:	strb	r6, [fp, #-60]	; 0xffffffc4
   19490:	str	r6, [sp, #56]	; 0x38
   19494:	beq	194f4 <main@@Base+0x3464>
   19498:	sub	r0, fp, #56	; 0x38
   1949c:	mov	r1, r7
   194a0:	mov	r2, r5
   194a4:	add	r3, sp, #56	; 0x38
   194a8:	str	r0, [sp]
   194ac:	mov	r0, r8
   194b0:	bl	356c0 <flatcc_json_parser_integer@@Base>
   194b4:	cmp	r0, r7
   194b8:	beq	194fc <main@@Base+0x346c>
   194bc:	ldr	r2, [sp, #56]	; 0x38
   194c0:	mov	r4, r0
   194c4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   194c8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   194cc:	cmp	r2, #0
   194d0:	beq	19504 <main@@Base+0x3474>
   194d4:	subs	r2, r0, #129	; 0x81
   194d8:	sbcs	r1, r1, #0
   194dc:	bcc	1952c <main@@Base+0x349c>
   194e0:	mov	r0, r8
   194e4:	mov	r1, r4
   194e8:	mov	r2, r5
   194ec:	mov	r3, #8
   194f0:	b	19520 <main@@Base+0x3490>
   194f4:	mov	r4, r5
   194f8:	b	1953c <main@@Base+0x34ac>
   194fc:	mov	r4, r7
   19500:	b	1953c <main@@Base+0x34ac>
   19504:	subs	r2, r0, #128	; 0x80
   19508:	sbcs	r1, r1, #0
   1950c:	bcc	19534 <main@@Base+0x34a4>
   19510:	mov	r0, r8
   19514:	mov	r1, r4
   19518:	mov	r2, r5
   1951c:	mov	r3, #7
   19520:	bl	337ac <flatcc_json_parser_set_error@@Base>
   19524:	mov	r4, r0
   19528:	b	1953c <main@@Base+0x34ac>
   1952c:	rsb	r6, r0, #0
   19530:	b	19538 <main@@Base+0x34a8>
   19534:	mov	r6, r0
   19538:	strb	r6, [fp, #-60]	; 0xffffffc4
   1953c:	cmp	r7, r4
   19540:	bne	19578 <main@@Base+0x34e8>
   19544:	movw	r3, #45176	; 0xb078
   19548:	sub	r0, fp, #60	; 0x3c
   1954c:	mov	r1, r7
   19550:	mov	r2, r5
   19554:	str	r0, [sp]
   19558:	mov	r0, r8
   1955c:	movt	r3, #5
   19560:	bl	2286c <main@@Base+0xc7dc>
   19564:	mov	r4, r0
   19568:	cmp	r0, r7
   1956c:	cmpne	r4, r5
   19570:	beq	16fc4 <main@@Base+0xf34>
   19574:	ldrb	r6, [fp, #-60]	; 0xffffffc4
   19578:	uxtb	r0, r6
   1957c:	cmp	r0, #8
   19580:	ldrbeq	r0, [r8, #8]
   19584:	tsteq	r0, #2
   19588:	beq	1ee1c <main@@Base+0x8d8c>
   1958c:	ldr	r0, [r8]
   19590:	mov	r1, #6
   19594:	b	1a37c <main@@Base+0x42ec>
   19598:	mov	r0, r8
   1959c:	mov	r1, r4
   195a0:	mov	r2, r5
   195a4:	mov	r3, #9
   195a8:	bl	337ac <flatcc_json_parser_set_error@@Base>
   195ac:	b	18f00 <main@@Base+0x2e70>
   195b0:	cmp	r0, #34	; 0x22
   195b4:	bne	1e268 <main@@Base+0x81d8>
   195b8:	add	r1, r9, #18
   195bc:	sub	r0, r5, r1
   195c0:	cmp	r0, #2
   195c4:	blt	1b978 <main@@Base+0x58e8>
   195c8:	ldrb	r0, [r1]
   195cc:	cmp	r0, #32
   195d0:	bls	1b964 <main@@Base+0x58d4>
   195d4:	mov	r4, r1
   195d8:	b	1b988 <main@@Base+0x58f8>
   195dc:	cmp	r0, #34	; 0x22
   195e0:	bne	1a4bc <main@@Base+0x442c>
   195e4:	add	r1, r9, #16
   195e8:	sub	r0, r5, r1
   195ec:	cmp	r0, #2
   195f0:	blt	1bd24 <main@@Base+0x5c94>
   195f4:	ldrb	r0, [r1]
   195f8:	cmp	r0, #32
   195fc:	bls	1bd10 <main@@Base+0x5c80>
   19600:	mov	r4, r1
   19604:	b	1bd34 <main@@Base+0x5ca4>
   19608:	bne	19618 <main@@Base+0x3588>
   1960c:	ldrb	r0, [r1, #2]!
   19610:	cmp	r0, #32
   19614:	bhi	1962c <main@@Base+0x359c>
   19618:	mov	r1, r2
   1961c:	mov	r0, r8
   19620:	mov	r2, r5
   19624:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   19628:	mov	r1, r0
   1962c:	ldr	sl, [sp, #40]	; 0x28
   19630:	cmp	r9, r1
   19634:	beq	19f1c <main@@Base+0x3e8c>
   19638:	mov	r0, r8
   1963c:	mov	r2, r5
   19640:	add	r3, sp, #52	; 0x34
   19644:	bl	35be8 <flatcc_json_parser_build_string@@Base>
   19648:	mov	r4, r0
   1964c:	ldr	r0, [sp, #52]	; 0x34
   19650:	cmp	r0, #0
   19654:	beq	16fc4 <main@@Base+0xf34>
   19658:	ldr	r0, [r8]
   1965c:	mov	r1, #3
   19660:	b	19718 <main@@Base+0x3688>
   19664:	bne	19674 <main@@Base+0x35e4>
   19668:	ldrb	r0, [r4, #2]!
   1966c:	cmp	r0, #32
   19670:	bhi	19684 <main@@Base+0x35f4>
   19674:	mov	r0, r8
   19678:	mov	r2, r5
   1967c:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   19680:	mov	r4, r0
   19684:	ldr	sl, [sp, #40]	; 0x28
   19688:	cmp	r9, r4
   1968c:	beq	19f1c <main@@Base+0x3e8c>
   19690:	ldr	r0, [r8]
   19694:	mov	r1, #1
   19698:	mov	r2, #1
   1969c:	mvn	r3, #0
   196a0:	bl	2f4c0 <flatcc_builder_start_vector@@Base>
   196a4:	cmp	r0, #0
   196a8:	bne	16fc4 <main@@Base+0xf34>
   196ac:	cmp	r4, r5
   196b0:	beq	196e4 <main@@Base+0x3654>
   196b4:	ldrb	r0, [r4]
   196b8:	cmp	r0, #91	; 0x5b
   196bc:	bne	196e4 <main@@Base+0x3654>
   196c0:	add	r1, r4, #1
   196c4:	sub	r0, r5, r1
   196c8:	cmp	r0, #2
   196cc:	blt	1973c <main@@Base+0x36ac>
   196d0:	ldrb	r0, [r1]
   196d4:	cmp	r0, #32
   196d8:	bls	1972c <main@@Base+0x369c>
   196dc:	mov	r4, r1
   196e0:	b	1974c <main@@Base+0x36bc>
   196e4:	mov	r0, r8
   196e8:	mov	r1, r4
   196ec:	mov	r2, r5
   196f0:	mov	r3, #22
   196f4:	bl	337ac <flatcc_json_parser_set_error@@Base>
   196f8:	mov	r4, r0
   196fc:	ldr	r0, [r8]
   19700:	bl	3052c <flatcc_builder_end_vector@@Base>
   19704:	cmp	r0, #0
   19708:	str	r0, [sp, #52]	; 0x34
   1970c:	beq	16fc4 <main@@Base+0xf34>
   19710:	ldr	r0, [r8]
   19714:	mov	r1, #30
   19718:	bl	30a20 <flatcc_builder_table_add_offset@@Base>
   1971c:	cmp	r0, #0
   19720:	beq	16fc4 <main@@Base+0xf34>
   19724:	ldr	r1, [sp, #52]	; 0x34
   19728:	b	19f74 <main@@Base+0x3ee4>
   1972c:	bne	1973c <main@@Base+0x36ac>
   19730:	ldrb	r0, [r4, #2]!
   19734:	cmp	r0, #32
   19738:	bhi	1974c <main@@Base+0x36bc>
   1973c:	mov	r0, r8
   19740:	mov	r2, r5
   19744:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   19748:	mov	r4, r0
   1974c:	cmp	r4, r5
   19750:	mov	r6, r5
   19754:	beq	19768 <main@@Base+0x36d8>
   19758:	ldrb	r0, [r4]
   1975c:	cmp	r0, #93	; 0x5d
   19760:	beq	19954 <main@@Base+0x38c4>
   19764:	mov	r6, r4
   19768:	mov	r0, #0
   1976c:	mov	r1, #1
   19770:	strb	r0, [fp, #-60]	; 0xffffffc4
   19774:	ldr	r0, [r8]
   19778:	bl	2eca8 <flatcc_builder_extend_vector@@Base>
   1977c:	cmp	r0, #0
   19780:	beq	20ad0 <main@@Base+0xaa40>
   19784:	mov	r7, r0
   19788:	mov	r4, r6
   1978c:	mov	r6, #0
   19790:	cmp	r4, r5
   19794:	str	r6, [fp, #-52]	; 0xffffffcc
   19798:	str	r6, [fp, #-56]	; 0xffffffc8
   1979c:	strb	r6, [fp, #-60]	; 0xffffffc4
   197a0:	str	r6, [sp, #56]	; 0x38
   197a4:	beq	197ec <main@@Base+0x375c>
   197a8:	sub	r0, fp, #56	; 0x38
   197ac:	mov	r1, r4
   197b0:	mov	r2, r5
   197b4:	add	r3, sp, #56	; 0x38
   197b8:	str	r0, [sp]
   197bc:	mov	r0, r8
   197c0:	bl	356c0 <flatcc_json_parser_integer@@Base>
   197c4:	cmp	r0, r4
   197c8:	beq	197f4 <main@@Base+0x3764>
   197cc:	mov	r1, r0
   197d0:	ldr	r0, [sp, #56]	; 0x38
   197d4:	cmp	r0, #0
   197d8:	beq	197fc <main@@Base+0x376c>
   197dc:	mov	r0, r8
   197e0:	mov	r2, r5
   197e4:	mov	r3, #8
   197e8:	b	1981c <main@@Base+0x378c>
   197ec:	mov	r1, r5
   197f0:	b	19824 <main@@Base+0x3794>
   197f4:	mov	r1, r4
   197f8:	b	19824 <main@@Base+0x3794>
   197fc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19800:	ldr	r2, [fp, #-52]	; 0xffffffcc
   19804:	subs	r3, r0, #256	; 0x100
   19808:	sbcs	r2, r2, #0
   1980c:	bcc	19938 <main@@Base+0x38a8>
   19810:	mov	r0, r8
   19814:	mov	r2, r5
   19818:	mov	r3, #7
   1981c:	bl	337ac <flatcc_json_parser_set_error@@Base>
   19820:	mov	r1, r0
   19824:	cmp	r4, r1
   19828:	bne	19860 <main@@Base+0x37d0>
   1982c:	movw	r3, #45192	; 0xb088
   19830:	sub	r0, fp, #60	; 0x3c
   19834:	mov	r1, r4
   19838:	mov	r2, r5
   1983c:	str	r0, [sp]
   19840:	mov	r0, r8
   19844:	movt	r3, #5
   19848:	bl	22a6c <main@@Base+0xc9dc>
   1984c:	mov	r1, r0
   19850:	cmp	r0, r4
   19854:	cmpne	r1, r5
   19858:	beq	20ac8 <main@@Base+0xaa38>
   1985c:	ldrb	r6, [fp, #-60]	; 0xffffffc4
   19860:	sub	r0, r5, r1
   19864:	strb	r6, [r7]
   19868:	cmp	r0, #2
   1986c:	blt	19898 <main@@Base+0x3808>
   19870:	ldrb	r0, [r1]
   19874:	cmp	r0, #32
   19878:	bls	19884 <main@@Base+0x37f4>
   1987c:	mov	r4, r1
   19880:	b	198a8 <main@@Base+0x3818>
   19884:	bne	19898 <main@@Base+0x3808>
   19888:	mov	r4, r1
   1988c:	ldrb	r0, [r4, #1]!
   19890:	cmp	r0, #32
   19894:	bhi	198a8 <main@@Base+0x3818>
   19898:	mov	r0, r8
   1989c:	mov	r2, r5
   198a0:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   198a4:	mov	r4, r0
   198a8:	cmp	r4, r5
   198ac:	beq	19944 <main@@Base+0x38b4>
   198b0:	ldrb	r0, [r4]
   198b4:	cmp	r0, #44	; 0x2c
   198b8:	bne	1994c <main@@Base+0x38bc>
   198bc:	add	r1, r4, #1
   198c0:	sub	r0, r5, r1
   198c4:	cmp	r0, #2
   198c8:	blt	198f0 <main@@Base+0x3860>
   198cc:	ldrb	r0, [r1]
   198d0:	cmp	r0, #32
   198d4:	bls	198e0 <main@@Base+0x3850>
   198d8:	mov	r4, r1
   198dc:	b	19900 <main@@Base+0x3870>
   198e0:	bne	198f0 <main@@Base+0x3860>
   198e4:	ldrb	r0, [r4, #2]!
   198e8:	cmp	r0, #32
   198ec:	bhi	19900 <main@@Base+0x3870>
   198f0:	mov	r0, r8
   198f4:	mov	r2, r5
   198f8:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   198fc:	mov	r4, r0
   19900:	cmp	r4, r5
   19904:	beq	19998 <main@@Base+0x3908>
   19908:	ldrb	r0, [r4]
   1990c:	cmp	r0, #93	; 0x5d
   19910:	beq	19954 <main@@Base+0x38c4>
   19914:	mov	r0, #0
   19918:	mov	r1, #1
   1991c:	strb	r0, [fp, #-60]	; 0xffffffc4
   19920:	ldr	r0, [r8]
   19924:	bl	2eca8 <flatcc_builder_extend_vector@@Base>
   19928:	mov	r7, r0
   1992c:	cmp	r0, #0
   19930:	bne	1978c <main@@Base+0x36fc>
   19934:	b	16fc4 <main@@Base+0xf34>
   19938:	mov	r6, r0
   1993c:	strb	r0, [fp, #-60]	; 0xffffffc4
   19940:	b	19824 <main@@Base+0x3794>
   19944:	mov	r4, r5
   19948:	b	196fc <main@@Base+0x366c>
   1994c:	cmp	r0, #93	; 0x5d
   19950:	bne	1a420 <main@@Base+0x4390>
   19954:	add	r1, r4, #1
   19958:	sub	r0, r5, r1
   1995c:	cmp	r0, #2
   19960:	blt	19988 <main@@Base+0x38f8>
   19964:	ldrb	r0, [r1]
   19968:	cmp	r0, #32
   1996c:	bls	19978 <main@@Base+0x38e8>
   19970:	mov	r4, r1
   19974:	b	196fc <main@@Base+0x366c>
   19978:	bne	19988 <main@@Base+0x38f8>
   1997c:	ldrb	r0, [r4, #2]!
   19980:	cmp	r0, #32
   19984:	bhi	196fc <main@@Base+0x366c>
   19988:	mov	r0, r8
   1998c:	mov	r2, r5
   19990:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   19994:	b	196f8 <main@@Base+0x3668>
   19998:	mov	r0, r8
   1999c:	mov	r1, r5
   199a0:	b	1a428 <main@@Base+0x4398>
   199a4:	bne	199b4 <main@@Base+0x3924>
   199a8:	ldrb	r0, [r1, #2]!
   199ac:	cmp	r0, #32
   199b0:	bhi	199c8 <main@@Base+0x3938>
   199b4:	ldr	r0, [sp, #36]	; 0x24
   199b8:	mov	r1, r2
   199bc:	mov	r2, r5
   199c0:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   199c4:	mov	r1, r0
   199c8:	cmp	r9, r1
   199cc:	beq	19a04 <main@@Base+0x3974>
   199d0:	ldr	r0, [sp, #48]	; 0x30
   199d4:	ldr	r8, [sp, #36]	; 0x24
   199d8:	mov	r2, #8
   199dc:	mov	r3, #0
   199e0:	str	r2, [sp]
   199e4:	mov	r2, r5
   199e8:	str	r0, [sp, #4]
   199ec:	movw	r0, #13692	; 0x357c
   199f0:	movt	r0, #2
   199f4:	str	r0, [sp, #8]
   199f8:	mov	r0, r8
   199fc:	bl	35eb4 <flatcc_json_parser_union@@Base>
   19a00:	b	1a4cc <main@@Base+0x443c>
   19a04:	eor	r0, r6, #889192448	; 0x35000000
   19a08:	orrs	r0, r0, r4
   19a0c:	bne	19e88 <main@@Base+0x3df8>
   19a10:	cmp	sl, #6
   19a14:	mov	r7, r9
   19a18:	blt	19e24 <main@@Base+0x3d94>
   19a1c:	ldr	r2, [sp, #32]
   19a20:	mov	r1, r9
   19a24:	ldrb	r0, [r1, #5]!
   19a28:	ldr	r2, [r2]
   19a2c:	cmp	r2, #0
   19a30:	beq	19a58 <main@@Base+0x39c8>
   19a34:	cmp	r0, #33	; 0x21
   19a38:	bcc	19a48 <main@@Base+0x39b8>
   19a3c:	cmp	r0, #58	; 0x3a
   19a40:	mov	r7, r9
   19a44:	bne	19e24 <main@@Base+0x3d94>
   19a48:	ldr	r0, [sp, #32]
   19a4c:	mov	r2, #0
   19a50:	str	r2, [r0]
   19a54:	b	19a68 <main@@Base+0x39d8>
   19a58:	cmp	r0, #34	; 0x22
   19a5c:	mov	r7, r9
   19a60:	bne	19e24 <main@@Base+0x3d94>
   19a64:	add	r1, r9, #6
   19a68:	sub	r0, r5, r1
   19a6c:	cmp	r0, #2
   19a70:	blt	19a9c <main@@Base+0x3a0c>
   19a74:	ldrb	r0, [r1]
   19a78:	cmp	r0, #32
   19a7c:	bls	19a88 <main@@Base+0x39f8>
   19a80:	mov	r7, r1
   19a84:	b	19aac <main@@Base+0x3a1c>
   19a88:	bne	19a9c <main@@Base+0x3a0c>
   19a8c:	mov	r7, r1
   19a90:	ldrb	r0, [r7, #1]!
   19a94:	cmp	r0, #32
   19a98:	bhi	19aac <main@@Base+0x3a1c>
   19a9c:	ldr	r0, [sp, #36]	; 0x24
   19aa0:	mov	r2, r5
   19aa4:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   19aa8:	mov	r7, r0
   19aac:	cmp	r7, r5
   19ab0:	beq	19ae4 <main@@Base+0x3a54>
   19ab4:	ldrb	r0, [r7]
   19ab8:	cmp	r0, #58	; 0x3a
   19abc:	bne	19ae4 <main@@Base+0x3a54>
   19ac0:	add	r1, r7, #1
   19ac4:	sub	r0, r5, r1
   19ac8:	cmp	r0, #2
   19acc:	blt	19e14 <main@@Base+0x3d84>
   19ad0:	ldrb	r0, [r1]
   19ad4:	cmp	r0, #32
   19ad8:	bls	19e04 <main@@Base+0x3d74>
   19adc:	mov	r7, r1
   19ae0:	b	19e24 <main@@Base+0x3d94>
   19ae4:	ldr	r0, [sp, #36]	; 0x24
   19ae8:	mov	r1, r7
   19aec:	mov	r2, r5
   19af0:	mov	r3, #4
   19af4:	bl	337ac <flatcc_json_parser_set_error@@Base>
   19af8:	b	19e20 <main@@Base+0x3d90>
   19afc:	bne	19b10 <main@@Base+0x3a80>
   19b00:	ldrb	r0, [r4, #2]!
   19b04:	cmp	r0, #32
   19b08:	mov	r7, r4
   19b0c:	bhi	18f04 <main@@Base+0x2e74>
   19b10:	mov	r0, r8
   19b14:	mov	r2, r5
   19b18:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   19b1c:	b	18f00 <main@@Base+0x2e70>
   19b20:	cmp	r0, #34	; 0x22
   19b24:	bne	1e268 <main@@Base+0x81d8>
   19b28:	add	r1, r9, #21
   19b2c:	sub	r0, r5, r1
   19b30:	cmp	r0, #2
   19b34:	blt	1bda0 <main@@Base+0x5d10>
   19b38:	ldrb	r0, [r1]
   19b3c:	cmp	r0, #32
   19b40:	bls	1bd8c <main@@Base+0x5cfc>
   19b44:	mov	r4, r1
   19b48:	b	1bdb0 <main@@Base+0x5d20>
   19b4c:	bne	19b60 <main@@Base+0x3ad0>
   19b50:	mov	r4, r1
   19b54:	ldrb	r0, [r4, #1]!
   19b58:	cmp	r0, #32
   19b5c:	bhi	19b70 <main@@Base+0x3ae0>
   19b60:	mov	r0, r8
   19b64:	mov	r2, r5
   19b68:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   19b6c:	mov	r4, r0
   19b70:	cmp	r4, r5
   19b74:	beq	19ba8 <main@@Base+0x3b18>
   19b78:	ldrb	r0, [r4]
   19b7c:	cmp	r0, #58	; 0x3a
   19b80:	bne	19ba8 <main@@Base+0x3b18>
   19b84:	add	r1, r4, #1
   19b88:	sub	r0, r5, r1
   19b8c:	cmp	r0, #2
   19b90:	blt	1be1c <main@@Base+0x5d8c>
   19b94:	ldrb	r0, [r1]
   19b98:	cmp	r0, #32
   19b9c:	bls	1be0c <main@@Base+0x5d7c>
   19ba0:	mov	r4, r1
   19ba4:	b	1be2c <main@@Base+0x5d9c>
   19ba8:	mov	r0, r8
   19bac:	mov	r1, r4
   19bb0:	mov	r2, r5
   19bb4:	mov	r3, #4
   19bb8:	bl	337ac <flatcc_json_parser_set_error@@Base>
   19bbc:	b	1be28 <main@@Base+0x5d98>
   19bc0:	bne	19bd4 <main@@Base+0x3b44>
   19bc4:	mov	r4, r1
   19bc8:	ldrb	r0, [r4, #1]!
   19bcc:	cmp	r0, #32
   19bd0:	bhi	19be4 <main@@Base+0x3b54>
   19bd4:	mov	r0, r8
   19bd8:	mov	r2, r5
   19bdc:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   19be0:	mov	r4, r0
   19be4:	cmp	r4, r5
   19be8:	beq	19c1c <main@@Base+0x3b8c>
   19bec:	ldrb	r0, [r4]
   19bf0:	cmp	r0, #58	; 0x3a
   19bf4:	bne	19c1c <main@@Base+0x3b8c>
   19bf8:	add	r1, r4, #1
   19bfc:	sub	r0, r5, r1
   19c00:	cmp	r0, #2
   19c04:	blt	1bf88 <main@@Base+0x5ef8>
   19c08:	ldrb	r0, [r1]
   19c0c:	cmp	r0, #32
   19c10:	bls	1bf78 <main@@Base+0x5ee8>
   19c14:	mov	r4, r1
   19c18:	b	1bf98 <main@@Base+0x5f08>
   19c1c:	mov	r0, r8
   19c20:	mov	r1, r4
   19c24:	mov	r2, r5
   19c28:	mov	r3, #4
   19c2c:	bl	337ac <flatcc_json_parser_set_error@@Base>
   19c30:	b	1bf94 <main@@Base+0x5f04>
   19c34:	bne	19c48 <main@@Base+0x3bb8>
   19c38:	mov	r7, r1
   19c3c:	ldrb	r0, [r7, #1]!
   19c40:	cmp	r0, #32
   19c44:	bhi	19c58 <main@@Base+0x3bc8>
   19c48:	mov	r0, r8
   19c4c:	mov	r2, r5
   19c50:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   19c54:	mov	r7, r0
   19c58:	cmp	r7, r5
   19c5c:	beq	19c90 <main@@Base+0x3c00>
   19c60:	ldrb	r0, [r7]
   19c64:	cmp	r0, #58	; 0x3a
   19c68:	bne	19c90 <main@@Base+0x3c00>
   19c6c:	add	r1, r7, #1
   19c70:	sub	r0, r5, r1
   19c74:	cmp	r0, #2
   19c78:	blt	1c030 <main@@Base+0x5fa0>
   19c7c:	ldrb	r0, [r1]
   19c80:	cmp	r0, #32
   19c84:	bls	1c020 <main@@Base+0x5f90>
   19c88:	mov	r7, r1
   19c8c:	b	1c040 <main@@Base+0x5fb0>
   19c90:	mov	r0, r8
   19c94:	mov	r1, r7
   19c98:	mov	r2, r5
   19c9c:	mov	r3, #4
   19ca0:	bl	337ac <flatcc_json_parser_set_error@@Base>
   19ca4:	b	1c03c <main@@Base+0x5fac>
   19ca8:	bne	19cbc <main@@Base+0x3c2c>
   19cac:	mov	r7, r1
   19cb0:	ldrb	r0, [r7, #1]!
   19cb4:	cmp	r0, #32
   19cb8:	bhi	19ccc <main@@Base+0x3c3c>
   19cbc:	mov	r0, r8
   19cc0:	mov	r2, r5
   19cc4:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   19cc8:	mov	r7, r0
   19ccc:	cmp	r7, r5
   19cd0:	beq	19d04 <main@@Base+0x3c74>
   19cd4:	ldrb	r0, [r7]
   19cd8:	cmp	r0, #58	; 0x3a
   19cdc:	bne	19d04 <main@@Base+0x3c74>
   19ce0:	add	r1, r7, #1
   19ce4:	sub	r0, r5, r1
   19ce8:	cmp	r0, #2
   19cec:	blt	1c150 <main@@Base+0x60c0>
   19cf0:	ldrb	r0, [r1]
   19cf4:	cmp	r0, #32
   19cf8:	bls	1c140 <main@@Base+0x60b0>
   19cfc:	mov	r7, r1
   19d00:	b	1c160 <main@@Base+0x60d0>
   19d04:	mov	r0, r8
   19d08:	mov	r1, r7
   19d0c:	mov	r2, r5
   19d10:	mov	r3, #4
   19d14:	bl	337ac <flatcc_json_parser_set_error@@Base>
   19d18:	b	1c15c <main@@Base+0x60cc>
   19d1c:	bne	19d30 <main@@Base+0x3ca0>
   19d20:	mov	r7, r1
   19d24:	ldrb	r0, [r7, #1]!
   19d28:	cmp	r0, #32
   19d2c:	bhi	19d40 <main@@Base+0x3cb0>
   19d30:	mov	r0, r8
   19d34:	mov	r2, r5
   19d38:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   19d3c:	mov	r7, r0
   19d40:	cmp	r7, r5
   19d44:	beq	19d78 <main@@Base+0x3ce8>
   19d48:	ldrb	r0, [r7]
   19d4c:	cmp	r0, #58	; 0x3a
   19d50:	bne	19d78 <main@@Base+0x3ce8>
   19d54:	add	r1, r7, #1
   19d58:	sub	r0, r5, r1
   19d5c:	cmp	r0, #2
   19d60:	blt	1c2b4 <main@@Base+0x6224>
   19d64:	ldrb	r0, [r1]
   19d68:	cmp	r0, #32
   19d6c:	bls	1c2a4 <main@@Base+0x6214>
   19d70:	mov	r7, r1
   19d74:	b	1c2c4 <main@@Base+0x6234>
   19d78:	mov	r0, r8
   19d7c:	mov	r1, r7
   19d80:	mov	r2, r5
   19d84:	mov	r3, #4
   19d88:	bl	337ac <flatcc_json_parser_set_error@@Base>
   19d8c:	b	1c2c0 <main@@Base+0x6230>
   19d90:	bne	19da4 <main@@Base+0x3d14>
   19d94:	mov	r7, r1
   19d98:	ldrb	r0, [r7, #1]!
   19d9c:	cmp	r0, #32
   19da0:	bhi	19db4 <main@@Base+0x3d24>
   19da4:	mov	r0, r8
   19da8:	mov	r2, r5
   19dac:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   19db0:	mov	r7, r0
   19db4:	cmp	r7, r5
   19db8:	beq	19dec <main@@Base+0x3d5c>
   19dbc:	ldrb	r0, [r7]
   19dc0:	cmp	r0, #58	; 0x3a
   19dc4:	bne	19dec <main@@Base+0x3d5c>
   19dc8:	add	r1, r7, #1
   19dcc:	sub	r0, r5, r1
   19dd0:	cmp	r0, #2
   19dd4:	blt	1c360 <main@@Base+0x62d0>
   19dd8:	ldrb	r0, [r1]
   19ddc:	cmp	r0, #32
   19de0:	bls	1c350 <main@@Base+0x62c0>
   19de4:	mov	r7, r1
   19de8:	b	1c370 <main@@Base+0x62e0>
   19dec:	mov	r0, r8
   19df0:	mov	r1, r7
   19df4:	mov	r2, r5
   19df8:	mov	r3, #4
   19dfc:	bl	337ac <flatcc_json_parser_set_error@@Base>
   19e00:	b	1c36c <main@@Base+0x62dc>
   19e04:	bne	19e14 <main@@Base+0x3d84>
   19e08:	ldrb	r0, [r7, #2]!
   19e0c:	cmp	r0, #32
   19e10:	bhi	19e24 <main@@Base+0x3d94>
   19e14:	ldr	r0, [sp, #36]	; 0x24
   19e18:	mov	r2, r5
   19e1c:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   19e20:	mov	r7, r0
   19e24:	cmp	r9, r7
   19e28:	beq	19e88 <main@@Base+0x3df8>
   19e2c:	ldr	r8, [sp, #36]	; 0x24
   19e30:	mov	r1, #4
   19e34:	mov	r2, #2
   19e38:	mvn	r3, #-1073741824	; 0xc0000000
   19e3c:	ldr	r0, [r8]
   19e40:	bl	2f4c0 <flatcc_builder_start_vector@@Base>
   19e44:	cmp	r0, #0
   19e48:	bne	20af8 <main@@Base+0xaa68>
   19e4c:	cmp	r7, r5
   19e50:	beq	19f28 <main@@Base+0x3e98>
   19e54:	ldrb	r0, [r7]
   19e58:	cmp	r0, #91	; 0x5b
   19e5c:	bne	19f28 <main@@Base+0x3e98>
   19e60:	ldr	sl, [sp, #40]	; 0x28
   19e64:	add	r1, r7, #1
   19e68:	sub	r0, r5, r1
   19e6c:	cmp	r0, #2
   19e70:	blt	19fb8 <main@@Base+0x3f28>
   19e74:	ldrb	r0, [r1]
   19e78:	cmp	r0, #32
   19e7c:	bls	19fa8 <main@@Base+0x3f18>
   19e80:	mov	r7, r1
   19e84:	b	19fc8 <main@@Base+0x3f38>
   19e88:	movw	r0, #31088	; 0x7970
   19e8c:	ldr	sl, [sp, #40]	; 0x28
   19e90:	movt	r0, #24436	; 0x5f74
   19e94:	eor	r0, r8, r0
   19e98:	orrs	r0, r0, r4
   19e9c:	bne	19f18 <main@@Base+0x3e88>
   19ea0:	add	r4, r9, #8
   19ea4:	mov	r1, #8
   19ea8:	mov	r2, #-268435456	; 0xf0000000
   19eac:	ldr	r8, [sp, #36]	; 0x24
   19eb0:	sub	r0, r5, r4
   19eb4:	cmp	r0, #8
   19eb8:	movcc	r1, r0
   19ebc:	add	r1, r2, r1, lsl #28
   19ec0:	asr	r1, r1, #28
   19ec4:	cmp	r1, #0
   19ec8:	blt	1ee08 <main@@Base+0x8d78>
   19ecc:	ldrb	r1, [r4]
   19ed0:	cmp	r1, #101	; 0x65
   19ed4:	bne	1ee08 <main@@Base+0x8d78>
   19ed8:	cmp	r0, #2
   19edc:	blt	1ee08 <main@@Base+0x8d78>
   19ee0:	ldr	r2, [sp, #32]
   19ee4:	mov	r1, r9
   19ee8:	ldrb	r0, [r1, #9]!
   19eec:	ldr	r2, [r2]
   19ef0:	cmp	r2, #0
   19ef4:	beq	19f7c <main@@Base+0x3eec>
   19ef8:	cmp	r0, #33	; 0x21
   19efc:	bcc	19f08 <main@@Base+0x3e78>
   19f00:	cmp	r0, #58	; 0x3a
   19f04:	bne	1ee08 <main@@Base+0x8d78>
   19f08:	ldr	r0, [sp, #32]
   19f0c:	mov	r2, #0
   19f10:	str	r2, [r0]
   19f14:	b	19f88 <main@@Base+0x3ef8>
   19f18:	ldr	r8, [sp, #36]	; 0x24
   19f1c:	mov	r0, r8
   19f20:	mov	r1, r9
   19f24:	b	1ee10 <main@@Base+0x8d80>
   19f28:	mov	r0, r8
   19f2c:	mov	r1, r7
   19f30:	mov	r2, r5
   19f34:	mov	r3, #22
   19f38:	bl	337ac <flatcc_json_parser_set_error@@Base>
   19f3c:	ldr	sl, [sp, #40]	; 0x28
   19f40:	mov	r7, r0
   19f44:	ldr	r0, [r8]
   19f48:	bl	3052c <flatcc_builder_end_vector@@Base>
   19f4c:	cmp	r0, #0
   19f50:	str	r0, [sp, #52]	; 0x34
   19f54:	beq	20af8 <main@@Base+0xaa68>
   19f58:	ldr	r0, [r8]
   19f5c:	mov	r1, #31
   19f60:	bl	30a20 <flatcc_builder_table_add_offset@@Base>
   19f64:	cmp	r0, #0
   19f68:	beq	20af8 <main@@Base+0xaa68>
   19f6c:	ldr	r1, [sp, #52]	; 0x34
   19f70:	mov	r4, r7
   19f74:	str	r1, [r0]
   19f78:	b	1ee1c <main@@Base+0x8d8c>
   19f7c:	cmp	r0, #34	; 0x22
   19f80:	bne	1ee08 <main@@Base+0x8d78>
   19f84:	add	r1, r9, #10
   19f88:	sub	r0, r5, r1
   19f8c:	cmp	r0, #2
   19f90:	blt	1a170 <main@@Base+0x40e0>
   19f94:	ldrb	r0, [r1]
   19f98:	cmp	r0, #32
   19f9c:	bls	1a15c <main@@Base+0x40cc>
   19fa0:	mov	r2, r1
   19fa4:	b	1a180 <main@@Base+0x40f0>
   19fa8:	bne	19fb8 <main@@Base+0x3f28>
   19fac:	ldrb	r0, [r7, #2]!
   19fb0:	cmp	r0, #32
   19fb4:	bhi	19fc8 <main@@Base+0x3f38>
   19fb8:	mov	r0, r8
   19fbc:	mov	r2, r5
   19fc0:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   19fc4:	mov	r7, r0
   19fc8:	cmp	r7, r5
   19fcc:	mov	r4, r5
   19fd0:	beq	1a014 <main@@Base+0x3f84>
   19fd4:	ldrb	r0, [r7]
   19fd8:	cmp	r0, #93	; 0x5d
   19fdc:	bne	1a010 <main@@Base+0x3f80>
   19fe0:	add	r1, r7, #1
   19fe4:	sub	r0, r5, r1
   19fe8:	cmp	r0, #2
   19fec:	blt	1d2b0 <main@@Base+0x7220>
   19ff0:	ldrb	r0, [r1]
   19ff4:	cmp	r0, #32
   19ff8:	bhi	1a148 <main@@Base+0x40b8>
   19ffc:	bne	1d2b0 <main@@Base+0x7220>
   1a000:	ldrb	r0, [r7, #2]!
   1a004:	cmp	r0, #32
   1a008:	bls	1d2b0 <main@@Base+0x7220>
   1a00c:	b	19f44 <main@@Base+0x3eb4>
   1a010:	mov	r4, r7
   1a014:	ldr	r0, [r8]
   1a018:	mov	r1, #1
   1a01c:	bl	2eca8 <flatcc_builder_extend_vector@@Base>
   1a020:	mov	r3, r0
   1a024:	cmp	r0, #0
   1a028:	beq	16fc4 <main@@Base+0xf34>
   1a02c:	mov	r0, r8
   1a030:	mov	r1, r4
   1a034:	mov	r2, r5
   1a038:	bl	22e60 <main@@Base+0xcdd0>
   1a03c:	mov	r1, r0
   1a040:	sub	r0, r5, r0
   1a044:	cmp	r0, #2
   1a048:	blt	1a074 <main@@Base+0x3fe4>
   1a04c:	ldrb	r0, [r1]
   1a050:	cmp	r0, #32
   1a054:	bls	1a060 <main@@Base+0x3fd0>
   1a058:	mov	r4, r1
   1a05c:	b	1a084 <main@@Base+0x3ff4>
   1a060:	bne	1a074 <main@@Base+0x3fe4>
   1a064:	mov	r4, r1
   1a068:	ldrb	r0, [r4, #1]!
   1a06c:	cmp	r0, #32
   1a070:	bhi	1a084 <main@@Base+0x3ff4>
   1a074:	mov	r0, r8
   1a078:	mov	r2, r5
   1a07c:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1a080:	mov	r4, r0
   1a084:	cmp	r4, r5
   1a088:	beq	1a110 <main@@Base+0x4080>
   1a08c:	ldrb	r0, [r4]
   1a090:	cmp	r0, #44	; 0x2c
   1a094:	bne	1a118 <main@@Base+0x4088>
   1a098:	add	r1, r4, #1
   1a09c:	sub	r0, r5, r1
   1a0a0:	cmp	r0, #2
   1a0a4:	blt	1a0cc <main@@Base+0x403c>
   1a0a8:	ldrb	r0, [r1]
   1a0ac:	cmp	r0, #32
   1a0b0:	bls	1a0bc <main@@Base+0x402c>
   1a0b4:	mov	r4, r1
   1a0b8:	b	1a0dc <main@@Base+0x404c>
   1a0bc:	bne	1a0cc <main@@Base+0x403c>
   1a0c0:	ldrb	r0, [r4, #2]!
   1a0c4:	cmp	r0, #32
   1a0c8:	bhi	1a0dc <main@@Base+0x404c>
   1a0cc:	mov	r0, r8
   1a0d0:	mov	r2, r5
   1a0d4:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1a0d8:	mov	r4, r0
   1a0dc:	cmp	r4, r5
   1a0e0:	beq	1a150 <main@@Base+0x40c0>
   1a0e4:	ldrb	r0, [r4]
   1a0e8:	cmp	r0, #93	; 0x5d
   1a0ec:	bne	1a014 <main@@Base+0x3f84>
   1a0f0:	add	r1, r4, #1
   1a0f4:	sub	r0, r5, r1
   1a0f8:	cmp	r0, #2
   1a0fc:	blt	1d2b0 <main@@Base+0x7220>
   1a100:	ldrb	r0, [r1]
   1a104:	cmp	r0, #32
   1a108:	bls	1d29c <main@@Base+0x720c>
   1a10c:	b	1a148 <main@@Base+0x40b8>
   1a110:	mov	r7, r5
   1a114:	b	19f44 <main@@Base+0x3eb4>
   1a118:	cmp	r0, #93	; 0x5d
   1a11c:	bne	1b7b4 <main@@Base+0x5724>
   1a120:	add	r1, r4, #1
   1a124:	sub	r0, r5, r1
   1a128:	cmp	r0, #2
   1a12c:	blt	1d2b0 <main@@Base+0x7220>
   1a130:	ldrb	r0, [r1]
   1a134:	cmp	r0, #32
   1a138:	bls	1d290 <main@@Base+0x7200>
   1a13c:	ldr	r5, [sp, #44]	; 0x2c
   1a140:	ldr	r8, [sp, #36]	; 0x24
   1a144:	ldr	sl, [sp, #40]	; 0x28
   1a148:	mov	r7, r1
   1a14c:	b	19f44 <main@@Base+0x3eb4>
   1a150:	mov	r0, r8
   1a154:	mov	r1, r5
   1a158:	b	1b7bc <main@@Base+0x572c>
   1a15c:	bne	1a170 <main@@Base+0x40e0>
   1a160:	mov	r2, r1
   1a164:	ldrb	r0, [r2, #1]!
   1a168:	cmp	r0, #32
   1a16c:	bhi	1a180 <main@@Base+0x40f0>
   1a170:	mov	r0, r8
   1a174:	mov	r2, r5
   1a178:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1a17c:	mov	r2, r0
   1a180:	cmp	r2, r5
   1a184:	beq	1a1b8 <main@@Base+0x4128>
   1a188:	ldrb	r0, [r2]
   1a18c:	cmp	r0, #58	; 0x3a
   1a190:	bne	1a1b8 <main@@Base+0x4128>
   1a194:	add	r1, r2, #1
   1a198:	sub	r0, r5, r1
   1a19c:	cmp	r0, #2
   1a1a0:	blt	1bf20 <main@@Base+0x5e90>
   1a1a4:	ldrb	r0, [r1]
   1a1a8:	cmp	r0, #32
   1a1ac:	bls	1bf10 <main@@Base+0x5e80>
   1a1b0:	mov	r2, r1
   1a1b4:	b	1bf30 <main@@Base+0x5ea0>
   1a1b8:	mov	r1, r2
   1a1bc:	mov	r0, r8
   1a1c0:	mov	r2, r5
   1a1c4:	mov	r3, #4
   1a1c8:	bl	337ac <flatcc_json_parser_set_error@@Base>
   1a1cc:	b	1bf2c <main@@Base+0x5e9c>
   1a1d0:	cmp	r0, #34	; 0x22
   1a1d4:	bne	1e268 <main@@Base+0x81d8>
   1a1d8:	add	r1, r9, #18
   1a1dc:	sub	r0, r5, r1
   1a1e0:	cmp	r0, #2
   1a1e4:	blt	1c4f0 <main@@Base+0x6460>
   1a1e8:	ldrb	r0, [r1]
   1a1ec:	cmp	r0, #32
   1a1f0:	bls	1c4dc <main@@Base+0x644c>
   1a1f4:	mov	r4, r1
   1a1f8:	b	1c500 <main@@Base+0x6470>
   1a1fc:	bne	1a20c <main@@Base+0x417c>
   1a200:	ldrb	r0, [r7, #2]!
   1a204:	cmp	r0, #32
   1a208:	bhi	1a21c <main@@Base+0x418c>
   1a20c:	mov	r0, r8
   1a210:	mov	r2, r5
   1a214:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1a218:	mov	r7, r0
   1a21c:	cmp	r9, r7
   1a220:	beq	19f1c <main@@Base+0x3e8c>
   1a224:	mov	r0, #0
   1a228:	strb	r0, [fp, #-60]	; 0xffffffc4
   1a22c:	sub	r0, r5, r7
   1a230:	cmp	r0, #4
   1a234:	blt	1a270 <main@@Base+0x41e0>
   1a238:	ldr	r1, [r7]
   1a23c:	movw	r2, #29300	; 0x7274
   1a240:	movt	r2, #25973	; 0x6575
   1a244:	cmp	r1, r2
   1a248:	beq	1a2d8 <main@@Base+0x4248>
   1a24c:	cmp	r0, #5
   1a250:	blt	1a270 <main@@Base+0x41e0>
   1a254:	movw	r1, #27767	; 0x6c77
   1a258:	mov	r0, r7
   1a25c:	mov	r2, #5
   1a260:	movt	r1, #4
   1a264:	bl	14e6c <memcmp@plt>
   1a268:	cmp	r0, #0
   1a26c:	beq	1a398 <main@@Base+0x4308>
   1a270:	mov	r6, #0
   1a274:	cmp	r7, r5
   1a278:	str	r6, [fp, #-52]	; 0xffffffcc
   1a27c:	str	r6, [fp, #-56]	; 0xffffffc8
   1a280:	str	r6, [sp, #56]	; 0x38
   1a284:	beq	1a2d0 <main@@Base+0x4240>
   1a288:	sub	r0, fp, #56	; 0x38
   1a28c:	mov	r1, r7
   1a290:	mov	r2, r5
   1a294:	add	r3, sp, #56	; 0x38
   1a298:	str	r0, [sp]
   1a29c:	mov	r0, r8
   1a2a0:	bl	356c0 <flatcc_json_parser_integer@@Base>
   1a2a4:	cmp	r0, r7
   1a2a8:	beq	1a2e4 <main@@Base+0x4254>
   1a2ac:	mov	r4, r0
   1a2b0:	ldr	r0, [sp, #56]	; 0x38
   1a2b4:	cmp	r0, #0
   1a2b8:	beq	1a2ec <main@@Base+0x425c>
   1a2bc:	mov	r0, r8
   1a2c0:	mov	r1, r4
   1a2c4:	mov	r2, r5
   1a2c8:	mov	r3, #8
   1a2cc:	b	1a310 <main@@Base+0x4280>
   1a2d0:	mov	r4, r5
   1a2d4:	b	1a318 <main@@Base+0x4288>
   1a2d8:	mov	r6, #1
   1a2dc:	add	r4, r7, #4
   1a2e0:	b	1a324 <main@@Base+0x4294>
   1a2e4:	mov	r4, r7
   1a2e8:	b	1a318 <main@@Base+0x4288>
   1a2ec:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a2f0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1a2f4:	subs	r2, r0, #256	; 0x100
   1a2f8:	sbcs	r1, r1, #0
   1a2fc:	bcc	1a3a4 <main@@Base+0x4314>
   1a300:	mov	r0, r8
   1a304:	mov	r1, r4
   1a308:	mov	r2, r5
   1a30c:	mov	r3, #7
   1a310:	bl	337ac <flatcc_json_parser_set_error@@Base>
   1a314:	mov	r4, r0
   1a318:	uxtb	r6, r6
   1a31c:	cmp	r6, #0
   1a320:	movwne	r6, #1
   1a324:	strb	r6, [fp, #-60]	; 0xffffffc4
   1a328:	cmp	r7, r4
   1a32c:	bne	1a364 <main@@Base+0x42d4>
   1a330:	movw	r3, #45268	; 0xb0d4
   1a334:	sub	r0, fp, #60	; 0x3c
   1a338:	mov	r1, r7
   1a33c:	mov	r2, r5
   1a340:	str	r0, [sp]
   1a344:	mov	r0, r8
   1a348:	movt	r3, #5
   1a34c:	bl	24968 <main@@Base+0xe8d8>
   1a350:	mov	r4, r0
   1a354:	cmp	r0, r7
   1a358:	cmpne	r4, r5
   1a35c:	beq	16fc4 <main@@Base+0xf34>
   1a360:	ldrb	r6, [fp, #-60]	; 0xffffffc4
   1a364:	cmp	r6, #1
   1a368:	ldrbeq	r0, [r8, #8]
   1a36c:	tsteq	r0, #2
   1a370:	beq	1ee1c <main@@Base+0x8d8c>
   1a374:	ldr	r0, [r8]
   1a378:	mov	r1, #15
   1a37c:	mov	r2, #1
   1a380:	mov	r3, #1
   1a384:	bl	30b5c <flatcc_builder_table_add@@Base>
   1a388:	cmp	r0, #0
   1a38c:	beq	16fc4 <main@@Base+0xf34>
   1a390:	strb	r6, [r0]
   1a394:	b	1ee1c <main@@Base+0x8d8c>
   1a398:	mov	r6, #0
   1a39c:	add	r4, r7, #5
   1a3a0:	b	1a324 <main@@Base+0x4294>
   1a3a4:	mov	r6, r0
   1a3a8:	b	1a318 <main@@Base+0x4288>
   1a3ac:	bne	1a3c0 <main@@Base+0x4330>
   1a3b0:	mov	r4, r1
   1a3b4:	ldrb	r0, [r4, #1]!
   1a3b8:	cmp	r0, #32
   1a3bc:	bhi	1a3d0 <main@@Base+0x4340>
   1a3c0:	ldr	r0, [sp, #36]	; 0x24
   1a3c4:	mov	r2, r5
   1a3c8:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1a3cc:	mov	r4, r0
   1a3d0:	cmp	r4, r5
   1a3d4:	beq	1a408 <main@@Base+0x4378>
   1a3d8:	ldrb	r0, [r4]
   1a3dc:	cmp	r0, #58	; 0x3a
   1a3e0:	bne	1a408 <main@@Base+0x4378>
   1a3e4:	add	r1, r4, #1
   1a3e8:	sub	r0, r5, r1
   1a3ec:	cmp	r0, #2
   1a3f0:	blt	1c5e0 <main@@Base+0x6550>
   1a3f4:	ldrb	r0, [r1]
   1a3f8:	cmp	r0, #32
   1a3fc:	bls	1c5d0 <main@@Base+0x6540>
   1a400:	mov	r4, r1
   1a404:	b	1c5f0 <main@@Base+0x6560>
   1a408:	ldr	r0, [sp, #36]	; 0x24
   1a40c:	mov	r1, r4
   1a410:	mov	r2, r5
   1a414:	mov	r3, #4
   1a418:	bl	337ac <flatcc_json_parser_set_error@@Base>
   1a41c:	b	1c5ec <main@@Base+0x655c>
   1a420:	mov	r0, r8
   1a424:	mov	r1, r4
   1a428:	mov	r2, r5
   1a42c:	mov	r3, #9
   1a430:	b	196f4 <main@@Base+0x3664>
   1a434:	bne	1a444 <main@@Base+0x43b4>
   1a438:	ldrb	r0, [r4, #2]!
   1a43c:	cmp	r0, #32
   1a440:	bhi	1a454 <main@@Base+0x43c4>
   1a444:	mov	r0, r6
   1a448:	mov	r2, r5
   1a44c:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1a450:	mov	r4, r0
   1a454:	cmp	sl, r4
   1a458:	beq	1a4b8 <main@@Base+0x4428>
   1a45c:	ldr	r8, [sp, #36]	; 0x24
   1a460:	mov	r1, #1
   1a464:	mov	r2, #1
   1a468:	mvn	r3, #0
   1a46c:	ldr	r0, [r8]
   1a470:	bl	2f4c0 <flatcc_builder_start_vector@@Base>
   1a474:	cmp	r0, #0
   1a478:	bne	16fc4 <main@@Base+0xf34>
   1a47c:	ldr	sl, [sp, #40]	; 0x28
   1a480:	cmp	r4, r5
   1a484:	beq	1a4d8 <main@@Base+0x4448>
   1a488:	ldrb	r0, [r4]
   1a48c:	cmp	r0, #91	; 0x5b
   1a490:	bne	1a4d8 <main@@Base+0x4448>
   1a494:	add	r1, r4, #1
   1a498:	sub	r0, r5, r1
   1a49c:	cmp	r0, #2
   1a4a0:	blt	1ba74 <main@@Base+0x59e4>
   1a4a4:	ldrb	r0, [r1]
   1a4a8:	cmp	r0, #32
   1a4ac:	bls	1ba64 <main@@Base+0x59d4>
   1a4b0:	mov	r4, r1
   1a4b4:	b	1ba84 <main@@Base+0x59f4>
   1a4b8:	ldr	r8, [sp, #36]	; 0x24
   1a4bc:	mov	r0, r8
   1a4c0:	mov	r1, sl
   1a4c4:	mov	r2, r5
   1a4c8:	bl	33ecc <flatcc_json_parser_unmatched_symbol@@Base>
   1a4cc:	mov	r4, r0
   1a4d0:	ldr	sl, [sp, #40]	; 0x28
   1a4d4:	b	1ee1c <main@@Base+0x8d8c>
   1a4d8:	mov	r0, r8
   1a4dc:	mov	r1, r4
   1a4e0:	mov	r2, r5
   1a4e4:	mov	r3, #22
   1a4e8:	bl	337ac <flatcc_json_parser_set_error@@Base>
   1a4ec:	mov	r4, r0
   1a4f0:	ldr	r0, [r8]
   1a4f4:	bl	3052c <flatcc_builder_end_vector@@Base>
   1a4f8:	cmp	r0, #0
   1a4fc:	str	r0, [sp, #52]	; 0x34
   1a500:	beq	16fc4 <main@@Base+0xf34>
   1a504:	ldr	r0, [r8]
   1a508:	mov	r1, #24
   1a50c:	b	19718 <main@@Base+0x3688>
   1a510:	bne	1a524 <main@@Base+0x4494>
   1a514:	mov	r4, r1
   1a518:	ldrb	r0, [r4, #1]!
   1a51c:	cmp	r0, #32
   1a520:	bhi	1a534 <main@@Base+0x44a4>
   1a524:	mov	r0, r8
   1a528:	mov	r2, r5
   1a52c:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1a530:	mov	r4, r0
   1a534:	cmp	r4, r5
   1a538:	beq	1a56c <main@@Base+0x44dc>
   1a53c:	ldrb	r0, [r4]
   1a540:	cmp	r0, #58	; 0x3a
   1a544:	bne	1a56c <main@@Base+0x44dc>
   1a548:	add	r1, r4, #1
   1a54c:	sub	r0, r5, r1
   1a550:	cmp	r0, #2
   1a554:	blt	1c76c <main@@Base+0x66dc>
   1a558:	ldrb	r0, [r1]
   1a55c:	cmp	r0, #32
   1a560:	bls	1c75c <main@@Base+0x66cc>
   1a564:	mov	r4, r1
   1a568:	b	1c77c <main@@Base+0x66ec>
   1a56c:	mov	r0, r8
   1a570:	mov	r1, r4
   1a574:	mov	r2, r5
   1a578:	mov	r3, #4
   1a57c:	bl	337ac <flatcc_json_parser_set_error@@Base>
   1a580:	b	1c778 <main@@Base+0x66e8>
   1a584:	bne	1a594 <main@@Base+0x4504>
   1a588:	ldrb	r0, [r7, #2]!
   1a58c:	cmp	r0, #32
   1a590:	bhi	1a5a4 <main@@Base+0x4514>
   1a594:	mov	r0, r8
   1a598:	mov	r2, r5
   1a59c:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1a5a0:	mov	r7, r0
   1a5a4:	ldr	sl, [sp, #40]	; 0x28
   1a5a8:	cmp	r9, r7
   1a5ac:	beq	19f1c <main@@Base+0x3e8c>
   1a5b0:	mov	r6, #0
   1a5b4:	cmp	r7, r5
   1a5b8:	str	r6, [fp, #-52]	; 0xffffffcc
   1a5bc:	str	r6, [fp, #-56]	; 0xffffffc8
   1a5c0:	strh	r6, [fp, #-60]	; 0xffffffc4
   1a5c4:	str	r6, [sp, #56]	; 0x38
   1a5c8:	beq	1a62c <main@@Base+0x459c>
   1a5cc:	sub	r0, fp, #56	; 0x38
   1a5d0:	mov	r1, r7
   1a5d4:	mov	r2, r5
   1a5d8:	add	r3, sp, #56	; 0x38
   1a5dc:	str	r0, [sp]
   1a5e0:	mov	r0, r8
   1a5e4:	bl	356c0 <flatcc_json_parser_integer@@Base>
   1a5e8:	cmp	r0, r7
   1a5ec:	beq	1a634 <main@@Base+0x45a4>
   1a5f0:	ldr	r2, [sp, #56]	; 0x38
   1a5f4:	mov	r4, r0
   1a5f8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a5fc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1a600:	cmp	r2, #0
   1a604:	beq	1a63c <main@@Base+0x45ac>
   1a608:	movw	r2, #32769	; 0x8001
   1a60c:	subs	r2, r0, r2
   1a610:	sbcs	r1, r1, #0
   1a614:	bcc	1a664 <main@@Base+0x45d4>
   1a618:	mov	r0, r8
   1a61c:	mov	r1, r4
   1a620:	mov	r2, r5
   1a624:	mov	r3, #8
   1a628:	b	1a658 <main@@Base+0x45c8>
   1a62c:	mov	r4, r5
   1a630:	b	1a674 <main@@Base+0x45e4>
   1a634:	mov	r4, r7
   1a638:	b	1a674 <main@@Base+0x45e4>
   1a63c:	subs	r2, r0, #32768	; 0x8000
   1a640:	sbcs	r1, r1, #0
   1a644:	bcc	1a66c <main@@Base+0x45dc>
   1a648:	mov	r0, r8
   1a64c:	mov	r1, r4
   1a650:	mov	r2, r5
   1a654:	mov	r3, #7
   1a658:	bl	337ac <flatcc_json_parser_set_error@@Base>
   1a65c:	mov	r4, r0
   1a660:	b	1a674 <main@@Base+0x45e4>
   1a664:	rsb	r6, r0, #0
   1a668:	b	1a670 <main@@Base+0x45e0>
   1a66c:	mov	r6, r0
   1a670:	strh	r6, [fp, #-60]	; 0xffffffc4
   1a674:	cmp	r7, r4
   1a678:	bne	1a6b0 <main@@Base+0x4620>
   1a67c:	movw	r3, #45204	; 0xb094
   1a680:	sub	r0, fp, #60	; 0x3c
   1a684:	mov	r1, r7
   1a688:	mov	r2, r5
   1a68c:	str	r0, [sp]
   1a690:	mov	r0, r8
   1a694:	movt	r3, #5
   1a698:	bl	22c5c <main@@Base+0xcbcc>
   1a69c:	mov	r4, r0
   1a6a0:	cmp	r0, r7
   1a6a4:	cmpne	r4, r5
   1a6a8:	beq	16fc4 <main@@Base+0xf34>
   1a6ac:	ldrh	r6, [fp, #-60]	; 0xffffffc4
   1a6b0:	uxth	r0, r6
   1a6b4:	cmp	r0, #100	; 0x64
   1a6b8:	ldrbeq	r0, [r8, #8]
   1a6bc:	tsteq	r0, #2
   1a6c0:	beq	1ee1c <main@@Base+0x8d8c>
   1a6c4:	ldr	r0, [r8]
   1a6c8:	mov	r1, #2
   1a6cc:	mov	r2, #2
   1a6d0:	mov	r3, #2
   1a6d4:	bl	30b5c <flatcc_builder_table_add@@Base>
   1a6d8:	cmp	r0, #0
   1a6dc:	bne	1c29c <main@@Base+0x620c>
   1a6e0:	b	16fc4 <main@@Base+0xf34>
   1a6e4:	bne	1a6f4 <main@@Base+0x4664>
   1a6e8:	ldrb	r0, [r4, #2]!
   1a6ec:	cmp	r0, #32
   1a6f0:	bhi	1a704 <main@@Base+0x4674>
   1a6f4:	mov	r0, r8
   1a6f8:	mov	r2, r5
   1a6fc:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1a700:	mov	r4, r0
   1a704:	ldr	sl, [sp, #40]	; 0x28
   1a708:	cmp	r9, r4
   1a70c:	beq	19f1c <main@@Base+0x3e8c>
   1a710:	ldr	r0, [r8]
   1a714:	mov	r1, #0
   1a718:	mov	r2, #32
   1a71c:	mov	r3, #16
   1a720:	bl	30b5c <flatcc_builder_table_add@@Base>
   1a724:	cmp	r0, #0
   1a728:	str	r0, [sp, #20]
   1a72c:	beq	16fc4 <main@@Base+0xf34>
   1a730:	cmp	r4, r5
   1a734:	beq	1a768 <main@@Base+0x46d8>
   1a738:	ldrb	r0, [r4]
   1a73c:	cmp	r0, #123	; 0x7b
   1a740:	bne	1a768 <main@@Base+0x46d8>
   1a744:	add	r1, r4, #1
   1a748:	sub	r0, r5, r1
   1a74c:	cmp	r0, #2
   1a750:	blt	1a790 <main@@Base+0x4700>
   1a754:	ldrb	r0, [r1]
   1a758:	cmp	r0, #32
   1a75c:	bls	1a780 <main@@Base+0x46f0>
   1a760:	mov	r4, r1
   1a764:	b	1a7a0 <main@@Base+0x4710>
   1a768:	mov	r0, r8
   1a76c:	mov	r1, r4
   1a770:	mov	r2, r5
   1a774:	mov	r3, #21
   1a778:	bl	337ac <flatcc_json_parser_set_error@@Base>
   1a77c:	b	1ee18 <main@@Base+0x8d88>
   1a780:	bne	1a790 <main@@Base+0x4700>
   1a784:	ldrb	r0, [r4, #2]!
   1a788:	cmp	r0, #32
   1a78c:	bhi	1a7a0 <main@@Base+0x4710>
   1a790:	mov	r0, r8
   1a794:	mov	r2, r5
   1a798:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1a79c:	mov	r4, r0
   1a7a0:	cmp	r4, r5
   1a7a4:	mov	r2, r5
   1a7a8:	beq	1a7ec <main@@Base+0x475c>
   1a7ac:	ldrb	r0, [r4]
   1a7b0:	cmp	r0, #125	; 0x7d
   1a7b4:	bne	1a7e8 <main@@Base+0x4758>
   1a7b8:	add	r1, r4, #1
   1a7bc:	sub	r0, r5, r1
   1a7c0:	cmp	r0, #2
   1a7c4:	blt	1da54 <main@@Base+0x79c4>
   1a7c8:	ldrb	r0, [r1]
   1a7cc:	cmp	r0, #32
   1a7d0:	bhi	1b4c0 <main@@Base+0x5430>
   1a7d4:	bne	1da54 <main@@Base+0x79c4>
   1a7d8:	ldrb	r0, [r4, #2]!
   1a7dc:	cmp	r0, #32
   1a7e0:	bls	1da54 <main@@Base+0x79c4>
   1a7e4:	b	1ee1c <main@@Base+0x8d8c>
   1a7e8:	mov	r2, r4
   1a7ec:	ldr	r0, [sp, #20]
   1a7f0:	add	r0, r0, #26
   1a7f4:	str	r0, [sp, #16]
   1a7f8:	cmp	r2, r5
   1a7fc:	mov	r9, r5
   1a800:	beq	1a854 <main@@Base+0x47c4>
   1a804:	ldrb	r0, [r2]
   1a808:	cmp	r0, #46	; 0x2e
   1a80c:	beq	1a828 <main@@Base+0x4798>
   1a810:	cmp	r0, #34	; 0x22
   1a814:	bne	1a844 <main@@Base+0x47b4>
   1a818:	ldr	r0, [sp, #32]
   1a81c:	mov	r1, #0
   1a820:	add	r9, r2, #1
   1a824:	b	1a850 <main@@Base+0x47c0>
   1a828:	mov	r1, r2
   1a82c:	mov	r0, r8
   1a830:	mov	r2, r5
   1a834:	mov	r3, #5
   1a838:	bl	337ac <flatcc_json_parser_set_error@@Base>
   1a83c:	mov	r9, r0
   1a840:	b	1a854 <main@@Base+0x47c4>
   1a844:	ldr	r0, [sp, #32]
   1a848:	mov	r1, #1
   1a84c:	mov	r9, r2
   1a850:	str	r1, [r0]
   1a854:	sub	ip, r5, r9
   1a858:	mov	r0, #8
   1a85c:	cmp	ip, #8
   1a860:	movcc	r0, ip
   1a864:	and	r0, r0, #15
   1a868:	sub	r7, r0, #1
   1a86c:	cmp	r7, #7
   1a870:	bhi	1b3e0 <main@@Base+0x5350>
   1a874:	add	r5, pc, #32
   1a878:	mov	r1, #0
   1a87c:	mov	lr, #0
   1a880:	mov	r8, #0
   1a884:	mov	r6, #0
   1a888:	mov	r3, #0
   1a88c:	mov	r4, #0
   1a890:	mov	r0, #0
   1a894:	mov	r2, #0
   1a898:	ldr	pc, [r5, r7, lsl #2]
   1a89c:	andeq	sl, r1, r0, lsl #18
   1a8a0:	strdeq	sl, [r1], -r8
   1a8a4:	strdeq	sl, [r1], -r0
   1a8a8:	andeq	sl, r1, r8, ror #17
   1a8ac:	ldrdeq	sl, [r1], -ip
   1a8b0:	ldrdeq	sl, [r1], -r0
   1a8b4:	andeq	sl, r1, r0, asr #17
   1a8b8:			; <UNDEFINED> instruction: 0x0001a8bc
   1a8bc:	ldrb	lr, [r9, #7]
   1a8c0:	ldrb	r0, [r9, #6]
   1a8c4:	mov	r8, r1
   1a8c8:	orr	r0, lr, r0, lsl #8
   1a8cc:	mov	r1, r0
   1a8d0:	ldrb	r0, [r9, #5]
   1a8d4:	mov	r6, r8
   1a8d8:	orr	r1, r1, r0, lsl #16
   1a8dc:	ldrb	r0, [r9, #4]
   1a8e0:	mov	r3, r6
   1a8e4:	orr	r1, r1, r0, lsl #24
   1a8e8:	ldrb	r0, [r9, #3]
   1a8ec:	orr	r4, r0, r3
   1a8f0:	ldrb	r0, [r9, #2]
   1a8f4:	orr	r0, r4, r0, lsl #8
   1a8f8:	ldrb	r2, [r9, #1]
   1a8fc:	orr	r2, r0, r2, lsl #16
   1a900:	ldrb	r0, [r9]
   1a904:	movw	r3, #29556	; 0x7374
   1a908:	movt	r3, #29797	; 0x7465
   1a90c:	orr	r2, r2, r0, lsl #24
   1a910:	mvn	r0, #-855638016	; 0xcd000000
   1a914:	subs	r0, r0, r1
   1a918:	sbcs	r0, r3, r2
   1a91c:	bcc	1a990 <main@@Base+0x4900>
   1a920:	ldr	r5, [sp, #44]	; 0x2c
   1a924:	ldr	r8, [sp, #36]	; 0x24
   1a928:	and	r1, r1, #-16777216	; 0xff000000
   1a92c:	eor	r0, r2, r3
   1a930:	eor	r2, r1, #822083584	; 0x31000000
   1a934:	orrs	r2, r2, r0
   1a938:	beq	1aa5c <main@@Base+0x49cc>
   1a93c:	eor	r1, r1, #838860800	; 0x32000000
   1a940:	orrs	r0, r1, r0
   1a944:	bne	1b3e0 <main@@Base+0x5350>
   1a948:	cmp	ip, #6
   1a94c:	mov	r5, r9
   1a950:	blt	1aec0 <main@@Base+0x4e30>
   1a954:	ldr	r2, [sp, #32]
   1a958:	mov	r1, r9
   1a95c:	ldrb	r0, [r1, #5]!
   1a960:	ldr	r2, [r2]
   1a964:	cmp	r2, #0
   1a968:	beq	1ab44 <main@@Base+0x4ab4>
   1a96c:	cmp	r0, #33	; 0x21
   1a970:	bcc	1a980 <main@@Base+0x48f0>
   1a974:	cmp	r0, #58	; 0x3a
   1a978:	mov	r5, r9
   1a97c:	bne	1aec0 <main@@Base+0x4e30>
   1a980:	ldr	r0, [sp, #32]
   1a984:	mov	r2, #0
   1a988:	str	r2, [r0]
   1a98c:	b	1ab54 <main@@Base+0x4ac4>
   1a990:	ldr	r5, [sp, #44]	; 0x2c
   1a994:	ldr	r8, [sp, #36]	; 0x24
   1a998:	cmn	r2, #-2013265919	; 0x88000001
   1a99c:	bhi	1a9fc <main@@Base+0x496c>
   1a9a0:	and	r1, r1, #-16777216	; 0xff000000
   1a9a4:	eor	r0, r2, r3
   1a9a8:	eor	r1, r1, #855638016	; 0x33000000
   1a9ac:	orrs	r0, r1, r0
   1a9b0:	bne	1b3e0 <main@@Base+0x5350>
   1a9b4:	cmp	ip, #6
   1a9b8:	mov	r1, r9
   1a9bc:	blt	1b1e0 <main@@Base+0x5150>
   1a9c0:	ldr	r1, [sp, #32]
   1a9c4:	mov	r2, r9
   1a9c8:	ldrb	r0, [r2, #5]!
   1a9cc:	ldr	r1, [r1]
   1a9d0:	cmp	r1, #0
   1a9d4:	beq	1abac <main@@Base+0x4b1c>
   1a9d8:	cmp	r0, #33	; 0x21
   1a9dc:	bcc	1a9ec <main@@Base+0x495c>
   1a9e0:	cmp	r0, #58	; 0x3a
   1a9e4:	mov	r1, r9
   1a9e8:	bne	1b1e0 <main@@Base+0x5150>
   1a9ec:	ldr	r0, [sp, #32]
   1a9f0:	mov	r1, #0
   1a9f4:	str	r1, [r0]
   1a9f8:	b	1abbc <main@@Base+0x4b2c>
   1a9fc:	lsr	r1, r2, #24
   1aa00:	and	r0, r2, #-16777216	; 0xff000000
   1aa04:	cmp	r1, #120	; 0x78
   1aa08:	bhi	1aaa4 <main@@Base+0x4a14>
   1aa0c:	teq	r0, #2013265920	; 0x78000000
   1aa10:	bne	1b3e0 <main@@Base+0x5350>
   1aa14:	cmp	ip, #2
   1aa18:	mov	r7, r9
   1aa1c:	blt	1b228 <main@@Base+0x5198>
   1aa20:	ldr	r2, [sp, #32]
   1aa24:	mov	r1, r9
   1aa28:	ldrb	r0, [r1, #1]!
   1aa2c:	ldr	r2, [r2]
   1aa30:	cmp	r2, #0
   1aa34:	beq	1abdc <main@@Base+0x4b4c>
   1aa38:	cmp	r0, #33	; 0x21
   1aa3c:	bcc	1aa4c <main@@Base+0x49bc>
   1aa40:	cmp	r0, #58	; 0x3a
   1aa44:	mov	r7, r9
   1aa48:	bne	1b228 <main@@Base+0x5198>
   1aa4c:	ldr	r0, [sp, #32]
   1aa50:	mov	r2, #0
   1aa54:	str	r2, [r0]
   1aa58:	b	1abec <main@@Base+0x4b5c>
   1aa5c:	cmp	ip, #6
   1aa60:	mov	r7, r9
   1aa64:	blt	1b004 <main@@Base+0x4f74>
   1aa68:	ldr	r2, [sp, #32]
   1aa6c:	mov	r1, r9
   1aa70:	ldrb	r0, [r1, #5]!
   1aa74:	ldr	r2, [r2]
   1aa78:	cmp	r2, #0
   1aa7c:	beq	1ab7c <main@@Base+0x4aec>
   1aa80:	cmp	r0, #33	; 0x21
   1aa84:	bcc	1aa94 <main@@Base+0x4a04>
   1aa88:	cmp	r0, #58	; 0x3a
   1aa8c:	mov	r7, r9
   1aa90:	bne	1b004 <main@@Base+0x4f74>
   1aa94:	ldr	r0, [sp, #32]
   1aa98:	mov	r2, #0
   1aa9c:	str	r2, [r0]
   1aaa0:	b	1ab8c <main@@Base+0x4afc>
   1aaa4:	teq	r0, #2030043136	; 0x79000000
   1aaa8:	beq	1aafc <main@@Base+0x4a6c>
   1aaac:	teq	r0, #2046820352	; 0x7a000000
   1aab0:	bne	1b3e0 <main@@Base+0x5350>
   1aab4:	cmp	ip, #2
   1aab8:	mov	r7, r9
   1aabc:	blt	1b2c4 <main@@Base+0x5234>
   1aac0:	ldr	r2, [sp, #32]
   1aac4:	mov	r1, r9
   1aac8:	ldrb	r0, [r1, #1]!
   1aacc:	ldr	r2, [r2]
   1aad0:	cmp	r2, #0
   1aad4:	beq	1ad14 <main@@Base+0x4c84>
   1aad8:	cmp	r0, #33	; 0x21
   1aadc:	bcc	1aaec <main@@Base+0x4a5c>
   1aae0:	cmp	r0, #58	; 0x3a
   1aae4:	mov	r7, r9
   1aae8:	bne	1b2c4 <main@@Base+0x5234>
   1aaec:	ldr	r0, [sp, #32]
   1aaf0:	mov	r2, #0
   1aaf4:	str	r2, [r0]
   1aaf8:	b	1ad24 <main@@Base+0x4c94>
   1aafc:	cmp	ip, #2
   1ab00:	mov	r7, r9
   1ab04:	blt	1b368 <main@@Base+0x52d8>
   1ab08:	ldr	r2, [sp, #32]
   1ab0c:	mov	r1, r9
   1ab10:	ldrb	r0, [r1, #1]!
   1ab14:	ldr	r2, [r2]
   1ab18:	cmp	r2, #0
   1ab1c:	beq	1ad4c <main@@Base+0x4cbc>
   1ab20:	cmp	r0, #33	; 0x21
   1ab24:	bcc	1ab34 <main@@Base+0x4aa4>
   1ab28:	cmp	r0, #58	; 0x3a
   1ab2c:	mov	r7, r9
   1ab30:	bne	1b368 <main@@Base+0x52d8>
   1ab34:	ldr	r0, [sp, #32]
   1ab38:	mov	r2, #0
   1ab3c:	str	r2, [r0]
   1ab40:	b	1ad5c <main@@Base+0x4ccc>
   1ab44:	cmp	r0, #34	; 0x22
   1ab48:	mov	r5, r9
   1ab4c:	bne	1aec0 <main@@Base+0x4e30>
   1ab50:	add	r1, r9, #6
   1ab54:	ldr	r4, [sp, #44]	; 0x2c
   1ab58:	sub	r0, r4, r1
   1ab5c:	cmp	r0, #2
   1ab60:	blt	1ac28 <main@@Base+0x4b98>
   1ab64:	ldrb	r0, [r1]
   1ab68:	cmp	r0, #32
   1ab6c:	bls	1ac10 <main@@Base+0x4b80>
   1ab70:	ldr	r4, [sp, #44]	; 0x2c
   1ab74:	mov	r5, r1
   1ab78:	b	1ac38 <main@@Base+0x4ba8>
   1ab7c:	cmp	r0, #34	; 0x22
   1ab80:	mov	r7, r9
   1ab84:	bne	1b004 <main@@Base+0x4f74>
   1ab88:	add	r1, r9, #6
   1ab8c:	sub	r0, r5, r1
   1ab90:	cmp	r0, #2
   1ab94:	blt	1aca8 <main@@Base+0x4c18>
   1ab98:	ldrb	r0, [r1]
   1ab9c:	cmp	r0, #32
   1aba0:	bls	1ac94 <main@@Base+0x4c04>
   1aba4:	mov	r7, r1
   1aba8:	b	1acb8 <main@@Base+0x4c28>
   1abac:	cmp	r0, #34	; 0x22
   1abb0:	mov	r1, r9
   1abb4:	bne	1b1e0 <main@@Base+0x5150>
   1abb8:	add	r2, r9, #6
   1abbc:	sub	r0, r5, r2
   1abc0:	cmp	r0, #2
   1abc4:	blt	1ad98 <main@@Base+0x4d08>
   1abc8:	ldrb	r0, [r2]
   1abcc:	cmp	r0, #32
   1abd0:	bls	1ad84 <main@@Base+0x4cf4>
   1abd4:	mov	r1, r2
   1abd8:	b	1adac <main@@Base+0x4d1c>
   1abdc:	cmp	r0, #34	; 0x22
   1abe0:	mov	r7, r9
   1abe4:	bne	1b228 <main@@Base+0x5198>
   1abe8:	add	r1, r9, #2
   1abec:	sub	r0, r5, r1
   1abf0:	cmp	r0, #2
   1abf4:	blt	1ae1c <main@@Base+0x4d8c>
   1abf8:	ldrb	r0, [r1]
   1abfc:	cmp	r0, #32
   1ac00:	bls	1ae04 <main@@Base+0x4d74>
   1ac04:	ldr	r5, [sp, #44]	; 0x2c
   1ac08:	mov	r7, r1
   1ac0c:	b	1ae2c <main@@Base+0x4d9c>
   1ac10:	ldr	r4, [sp, #44]	; 0x2c
   1ac14:	bne	1ac28 <main@@Base+0x4b98>
   1ac18:	mov	r5, r1
   1ac1c:	ldrb	r0, [r5, #1]!
   1ac20:	cmp	r0, #32
   1ac24:	bhi	1ac38 <main@@Base+0x4ba8>
   1ac28:	mov	r0, r8
   1ac2c:	mov	r2, r4
   1ac30:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1ac34:	mov	r5, r0
   1ac38:	cmp	r5, r4
   1ac3c:	beq	1ac7c <main@@Base+0x4bec>
   1ac40:	ldrb	r0, [r5]
   1ac44:	cmp	r0, #58	; 0x3a
   1ac48:	bne	1ac7c <main@@Base+0x4bec>
   1ac4c:	ldr	r0, [sp, #44]	; 0x2c
   1ac50:	add	r1, r5, #1
   1ac54:	sub	r0, r0, r1
   1ac58:	cmp	r0, #2
   1ac5c:	blt	1aeb0 <main@@Base+0x4e20>
   1ac60:	ldrb	r0, [r1]
   1ac64:	cmp	r0, #32
   1ac68:	bls	1ae98 <main@@Base+0x4e08>
   1ac6c:	ldr	r8, [sp, #36]	; 0x24
   1ac70:	ldr	sl, [sp, #40]	; 0x28
   1ac74:	mov	r5, r1
   1ac78:	b	1aec0 <main@@Base+0x4e30>
   1ac7c:	ldr	r2, [sp, #44]	; 0x2c
   1ac80:	mov	r0, r8
   1ac84:	mov	r1, r5
   1ac88:	mov	r3, #4
   1ac8c:	bl	337ac <flatcc_json_parser_set_error@@Base>
   1ac90:	b	1aebc <main@@Base+0x4e2c>
   1ac94:	bne	1aca8 <main@@Base+0x4c18>
   1ac98:	mov	r7, r1
   1ac9c:	ldrb	r0, [r7, #1]!
   1aca0:	cmp	r0, #32
   1aca4:	bhi	1acb8 <main@@Base+0x4c28>
   1aca8:	mov	r0, r8
   1acac:	mov	r2, r5
   1acb0:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1acb4:	mov	r7, r0
   1acb8:	cmp	r7, r5
   1acbc:	beq	1acfc <main@@Base+0x4c6c>
   1acc0:	ldrb	r0, [r7]
   1acc4:	cmp	r0, #58	; 0x3a
   1acc8:	bne	1acfc <main@@Base+0x4c6c>
   1accc:	add	r1, r7, #1
   1acd0:	sub	r0, r5, r1
   1acd4:	cmp	r0, #2
   1acd8:	blt	1aff4 <main@@Base+0x4f64>
   1acdc:	ldrb	r0, [r1]
   1ace0:	cmp	r0, #32
   1ace4:	bls	1afd8 <main@@Base+0x4f48>
   1ace8:	ldr	r5, [sp, #44]	; 0x2c
   1acec:	ldr	r8, [sp, #36]	; 0x24
   1acf0:	ldr	sl, [sp, #40]	; 0x28
   1acf4:	mov	r7, r1
   1acf8:	b	1b004 <main@@Base+0x4f74>
   1acfc:	mov	r0, r8
   1ad00:	mov	r1, r7
   1ad04:	mov	r2, r5
   1ad08:	mov	r3, #4
   1ad0c:	bl	337ac <flatcc_json_parser_set_error@@Base>
   1ad10:	b	1b000 <main@@Base+0x4f70>
   1ad14:	cmp	r0, #34	; 0x22
   1ad18:	mov	r7, r9
   1ad1c:	bne	1b2c4 <main@@Base+0x5234>
   1ad20:	add	r1, r9, #2
   1ad24:	ldr	r4, [sp, #44]	; 0x2c
   1ad28:	sub	r0, r4, r1
   1ad2c:	cmp	r0, #2
   1ad30:	blt	1b090 <main@@Base+0x5000>
   1ad34:	ldrb	r0, [r1]
   1ad38:	cmp	r0, #32
   1ad3c:	bls	1b078 <main@@Base+0x4fe8>
   1ad40:	ldr	r4, [sp, #44]	; 0x2c
   1ad44:	mov	r7, r1
   1ad48:	b	1b0a0 <main@@Base+0x5010>
   1ad4c:	cmp	r0, #34	; 0x22
   1ad50:	mov	r7, r9
   1ad54:	bne	1b368 <main@@Base+0x52d8>
   1ad58:	add	r1, r9, #2
   1ad5c:	ldr	r4, [sp, #44]	; 0x2c
   1ad60:	sub	r0, r4, r1
   1ad64:	cmp	r0, #2
   1ad68:	blt	1b12c <main@@Base+0x509c>
   1ad6c:	ldrb	r0, [r1]
   1ad70:	cmp	r0, #32
   1ad74:	bls	1b114 <main@@Base+0x5084>
   1ad78:	ldr	r4, [sp, #44]	; 0x2c
   1ad7c:	mov	r7, r1
   1ad80:	b	1b13c <main@@Base+0x50ac>
   1ad84:	bne	1ad98 <main@@Base+0x4d08>
   1ad88:	mov	r1, r2
   1ad8c:	ldrb	r0, [r1, #1]!
   1ad90:	cmp	r0, #32
   1ad94:	bhi	1adac <main@@Base+0x4d1c>
   1ad98:	mov	r1, r2
   1ad9c:	mov	r0, r8
   1ada0:	mov	r2, r5
   1ada4:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1ada8:	mov	r1, r0
   1adac:	cmp	r1, r5
   1adb0:	beq	1adf0 <main@@Base+0x4d60>
   1adb4:	ldrb	r0, [r1]
   1adb8:	cmp	r0, #58	; 0x3a
   1adbc:	bne	1adf0 <main@@Base+0x4d60>
   1adc0:	add	r2, r1, #1
   1adc4:	sub	r0, r5, r2
   1adc8:	cmp	r0, #2
   1adcc:	blt	1b1cc <main@@Base+0x513c>
   1add0:	ldrb	r0, [r2]
   1add4:	cmp	r0, #32
   1add8:	bls	1b1b0 <main@@Base+0x5120>
   1addc:	ldr	r5, [sp, #44]	; 0x2c
   1ade0:	ldr	r8, [sp, #36]	; 0x24
   1ade4:	ldr	sl, [sp, #40]	; 0x28
   1ade8:	mov	r1, r2
   1adec:	b	1b1e0 <main@@Base+0x5150>
   1adf0:	mov	r0, r8
   1adf4:	mov	r2, r5
   1adf8:	mov	r3, #4
   1adfc:	bl	337ac <flatcc_json_parser_set_error@@Base>
   1ae00:	b	1b1dc <main@@Base+0x514c>
   1ae04:	ldr	r5, [sp, #44]	; 0x2c
   1ae08:	bne	1ae1c <main@@Base+0x4d8c>
   1ae0c:	mov	r7, r1
   1ae10:	ldrb	r0, [r7, #1]!
   1ae14:	cmp	r0, #32
   1ae18:	bhi	1ae2c <main@@Base+0x4d9c>
   1ae1c:	ldr	r0, [sp, #36]	; 0x24
   1ae20:	mov	r2, r5
   1ae24:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1ae28:	mov	r7, r0
   1ae2c:	cmp	r7, r5
   1ae30:	beq	1ae74 <main@@Base+0x4de4>
   1ae34:	ldrb	r0, [r7]
   1ae38:	cmp	r0, #58	; 0x3a
   1ae3c:	bne	1ae74 <main@@Base+0x4de4>
   1ae40:	ldr	r8, [sp, #36]	; 0x24
   1ae44:	ldr	sl, [sp, #40]	; 0x28
   1ae48:	add	r1, r7, #1
   1ae4c:	sub	r0, r5, r1
   1ae50:	cmp	r0, #2
   1ae54:	blt	1b218 <main@@Base+0x5188>
   1ae58:	ldrb	r0, [r1]
   1ae5c:	cmp	r0, #32
   1ae60:	bls	1b1fc <main@@Base+0x516c>
   1ae64:	ldr	r5, [sp, #44]	; 0x2c
   1ae68:	ldr	r8, [sp, #36]	; 0x24
   1ae6c:	mov	r7, r1
   1ae70:	b	1ae90 <main@@Base+0x4e00>
   1ae74:	ldr	r8, [sp, #36]	; 0x24
   1ae78:	mov	r1, r7
   1ae7c:	mov	r2, r5
   1ae80:	mov	r3, #4
   1ae84:	mov	r0, r8
   1ae88:	bl	337ac <flatcc_json_parser_set_error@@Base>
   1ae8c:	mov	r7, r0
   1ae90:	ldr	sl, [sp, #40]	; 0x28
   1ae94:	b	1b228 <main@@Base+0x5198>
   1ae98:	ldr	r8, [sp, #36]	; 0x24
   1ae9c:	ldr	sl, [sp, #40]	; 0x28
   1aea0:	bne	1aeb0 <main@@Base+0x4e20>
   1aea4:	ldrb	r0, [r5, #2]!
   1aea8:	cmp	r0, #32
   1aeac:	bhi	1aec0 <main@@Base+0x4e30>
   1aeb0:	ldr	r2, [sp, #44]	; 0x2c
   1aeb4:	mov	r0, r8
   1aeb8:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1aebc:	mov	r5, r0
   1aec0:	cmp	r9, r5
   1aec4:	beq	1af3c <main@@Base+0x4eac>
   1aec8:	ldr	r2, [sp, #44]	; 0x2c
   1aecc:	mov	r4, #0
   1aed0:	str	r4, [fp, #-52]	; 0xffffffcc
   1aed4:	str	r4, [fp, #-56]	; 0xffffffc8
   1aed8:	strb	r4, [fp, #-60]	; 0xffffffc4
   1aedc:	str	r4, [sp, #56]	; 0x38
   1aee0:	cmp	r5, r2
   1aee4:	beq	1af44 <main@@Base+0x4eb4>
   1aee8:	sub	r0, fp, #56	; 0x38
   1aeec:	mov	r1, r5
   1aef0:	add	r3, sp, #56	; 0x38
   1aef4:	str	r0, [sp]
   1aef8:	mov	r0, r8
   1aefc:	bl	356c0 <flatcc_json_parser_integer@@Base>
   1af00:	cmp	r0, r5
   1af04:	beq	1af4c <main@@Base+0x4ebc>
   1af08:	ldr	r3, [sp, #56]	; 0x38
   1af0c:	mov	r1, r0
   1af10:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1af14:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1af18:	cmp	r3, #0
   1af1c:	beq	1af54 <main@@Base+0x4ec4>
   1af20:	subs	r3, r0, #129	; 0x81
   1af24:	sbcs	r2, r2, #0
   1af28:	bcc	1af78 <main@@Base+0x4ee8>
   1af2c:	ldr	r2, [sp, #44]	; 0x2c
   1af30:	mov	r0, r8
   1af34:	mov	r3, #8
   1af38:	b	1af6c <main@@Base+0x4edc>
   1af3c:	ldr	r5, [sp, #44]	; 0x2c
   1af40:	b	1b3e0 <main@@Base+0x5350>
   1af44:	mov	r1, r2
   1af48:	b	1af88 <main@@Base+0x4ef8>
   1af4c:	mov	r1, r5
   1af50:	b	1af88 <main@@Base+0x4ef8>
   1af54:	subs	r3, r0, #128	; 0x80
   1af58:	sbcs	r2, r2, #0
   1af5c:	bcc	1af80 <main@@Base+0x4ef0>
   1af60:	ldr	r2, [sp, #44]	; 0x2c
   1af64:	mov	r0, r8
   1af68:	mov	r3, #7
   1af6c:	bl	337ac <flatcc_json_parser_set_error@@Base>
   1af70:	mov	r1, r0
   1af74:	b	1af88 <main@@Base+0x4ef8>
   1af78:	rsb	r4, r0, #0
   1af7c:	b	1af84 <main@@Base+0x4ef4>
   1af80:	mov	r4, r0
   1af84:	strb	r4, [fp, #-60]	; 0xffffffc4
   1af88:	cmp	r5, r1
   1af8c:	bne	1afc8 <main@@Base+0x4f38>
   1af90:	ldr	r4, [sp, #44]	; 0x2c
   1af94:	movw	r3, #45448	; 0xb188
   1af98:	sub	r0, fp, #60	; 0x3c
   1af9c:	mov	r1, r5
   1afa0:	str	r0, [sp]
   1afa4:	mov	r0, r8
   1afa8:	movt	r3, #5
   1afac:	mov	r2, r4
   1afb0:	bl	2286c <main@@Base+0xc7dc>
   1afb4:	mov	r1, r0
   1afb8:	cmp	r0, r5
   1afbc:	cmpne	r1, r4
   1afc0:	beq	1b4c8 <main@@Base+0x5438>
   1afc4:	ldrb	r4, [fp, #-60]	; 0xffffffc4
   1afc8:	ldr	r0, [sp, #20]
   1afcc:	ldr	r5, [sp, #44]	; 0x2c
   1afd0:	strb	r4, [r0, #24]
   1afd4:	b	1b3f4 <main@@Base+0x5364>
   1afd8:	ldr	r5, [sp, #44]	; 0x2c
   1afdc:	ldr	r8, [sp, #36]	; 0x24
   1afe0:	ldr	sl, [sp, #40]	; 0x28
   1afe4:	bne	1aff4 <main@@Base+0x4f64>
   1afe8:	ldrb	r0, [r7, #2]!
   1afec:	cmp	r0, #32
   1aff0:	bhi	1b004 <main@@Base+0x4f74>
   1aff4:	mov	r0, r8
   1aff8:	mov	r2, r5
   1affc:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1b000:	mov	r7, r0
   1b004:	cmp	r9, r7
   1b008:	beq	1b3e0 <main@@Base+0x5350>
   1b00c:	mov	r0, #0
   1b010:	mov	r1, r7
   1b014:	mov	r2, r5
   1b018:	sub	r3, fp, #56	; 0x38
   1b01c:	str	r0, [fp, #-52]	; 0xffffffcc
   1b020:	str	r0, [fp, #-56]	; 0xffffffc8
   1b024:	mov	r0, r8
   1b028:	bl	34c18 <flatcc_json_parser_double@@Base>
   1b02c:	mov	r1, r0
   1b030:	cmp	r7, r0
   1b034:	bne	1b068 <main@@Base+0x4fd8>
   1b038:	movw	r3, #45464	; 0xb198
   1b03c:	sub	r0, fp, #56	; 0x38
   1b040:	mov	r1, r7
   1b044:	mov	r2, r5
   1b048:	str	r0, [sp]
   1b04c:	mov	r0, r8
   1b050:	movt	r3, #5
   1b054:	bl	254ac <main@@Base+0xf41c>
   1b058:	mov	r1, r0
   1b05c:	cmp	r0, r7
   1b060:	cmpne	r1, r5
   1b064:	beq	1b4c8 <main@@Base+0x5438>
   1b068:	vldr	d16, [fp, #-56]	; 0xffffffc8
   1b06c:	ldr	r0, [sp, #20]
   1b070:	vstr	d16, [r0, #16]
   1b074:	b	1b3f4 <main@@Base+0x5364>
   1b078:	ldr	r4, [sp, #44]	; 0x2c
   1b07c:	bne	1b090 <main@@Base+0x5000>
   1b080:	mov	r7, r1
   1b084:	ldrb	r0, [r7, #1]!
   1b088:	cmp	r0, #32
   1b08c:	bhi	1b0a0 <main@@Base+0x5010>
   1b090:	ldr	r0, [sp, #36]	; 0x24
   1b094:	mov	r2, r4
   1b098:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1b09c:	mov	r7, r0
   1b0a0:	cmp	r7, r4
   1b0a4:	beq	1b0ec <main@@Base+0x505c>
   1b0a8:	ldrb	r0, [r7]
   1b0ac:	cmp	r0, #58	; 0x3a
   1b0b0:	bne	1b0ec <main@@Base+0x505c>
   1b0b4:	ldr	r5, [sp, #44]	; 0x2c
   1b0b8:	ldr	r8, [sp, #36]	; 0x24
   1b0bc:	ldr	sl, [sp, #40]	; 0x28
   1b0c0:	add	r1, r7, #1
   1b0c4:	sub	r0, r5, r1
   1b0c8:	cmp	r0, #2
   1b0cc:	blt	1b2b4 <main@@Base+0x5224>
   1b0d0:	ldrb	r0, [r1]
   1b0d4:	cmp	r0, #32
   1b0d8:	bls	1b298 <main@@Base+0x5208>
   1b0dc:	ldr	r5, [sp, #44]	; 0x2c
   1b0e0:	ldr	r8, [sp, #36]	; 0x24
   1b0e4:	mov	r7, r1
   1b0e8:	b	1b10c <main@@Base+0x507c>
   1b0ec:	ldr	r8, [sp, #36]	; 0x24
   1b0f0:	ldr	r5, [sp, #44]	; 0x2c
   1b0f4:	mov	r1, r7
   1b0f8:	mov	r3, #4
   1b0fc:	mov	r0, r8
   1b100:	mov	r2, r5
   1b104:	bl	337ac <flatcc_json_parser_set_error@@Base>
   1b108:	mov	r7, r0
   1b10c:	ldr	sl, [sp, #40]	; 0x28
   1b110:	b	1b2c4 <main@@Base+0x5234>
   1b114:	ldr	r4, [sp, #44]	; 0x2c
   1b118:	bne	1b12c <main@@Base+0x509c>
   1b11c:	mov	r7, r1
   1b120:	ldrb	r0, [r7, #1]!
   1b124:	cmp	r0, #32
   1b128:	bhi	1b13c <main@@Base+0x50ac>
   1b12c:	ldr	r0, [sp, #36]	; 0x24
   1b130:	mov	r2, r4
   1b134:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1b138:	mov	r7, r0
   1b13c:	cmp	r7, r4
   1b140:	beq	1b188 <main@@Base+0x50f8>
   1b144:	ldrb	r0, [r7]
   1b148:	cmp	r0, #58	; 0x3a
   1b14c:	bne	1b188 <main@@Base+0x50f8>
   1b150:	ldr	r5, [sp, #44]	; 0x2c
   1b154:	ldr	r8, [sp, #36]	; 0x24
   1b158:	ldr	sl, [sp, #40]	; 0x28
   1b15c:	add	r1, r7, #1
   1b160:	sub	r0, r5, r1
   1b164:	cmp	r0, #2
   1b168:	blt	1b358 <main@@Base+0x52c8>
   1b16c:	ldrb	r0, [r1]
   1b170:	cmp	r0, #32
   1b174:	bls	1b33c <main@@Base+0x52ac>
   1b178:	ldr	r5, [sp, #44]	; 0x2c
   1b17c:	ldr	r8, [sp, #36]	; 0x24
   1b180:	mov	r7, r1
   1b184:	b	1b1a8 <main@@Base+0x5118>
   1b188:	ldr	r8, [sp, #36]	; 0x24
   1b18c:	ldr	r5, [sp, #44]	; 0x2c
   1b190:	mov	r1, r7
   1b194:	mov	r3, #4
   1b198:	mov	r0, r8
   1b19c:	mov	r2, r5
   1b1a0:	bl	337ac <flatcc_json_parser_set_error@@Base>
   1b1a4:	mov	r7, r0
   1b1a8:	ldr	sl, [sp, #40]	; 0x28
   1b1ac:	b	1b368 <main@@Base+0x52d8>
   1b1b0:	ldr	r5, [sp, #44]	; 0x2c
   1b1b4:	ldr	r8, [sp, #36]	; 0x24
   1b1b8:	ldr	sl, [sp, #40]	; 0x28
   1b1bc:	bne	1b1cc <main@@Base+0x513c>
   1b1c0:	ldrb	r0, [r1, #2]!
   1b1c4:	cmp	r0, #32
   1b1c8:	bhi	1b1e0 <main@@Base+0x5150>
   1b1cc:	mov	r1, r2
   1b1d0:	mov	r0, r8
   1b1d4:	mov	r2, r5
   1b1d8:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1b1dc:	mov	r1, r0
   1b1e0:	cmp	r9, r1
   1b1e4:	beq	1b3e0 <main@@Base+0x5350>
   1b1e8:	ldr	r3, [sp, #16]
   1b1ec:	mov	r0, r8
   1b1f0:	mov	r2, r5
   1b1f4:	bl	22e60 <main@@Base+0xcdd0>
   1b1f8:	b	1b3f0 <main@@Base+0x5360>
   1b1fc:	ldr	r5, [sp, #44]	; 0x2c
   1b200:	ldr	r8, [sp, #36]	; 0x24
   1b204:	ldr	sl, [sp, #40]	; 0x28
   1b208:	bne	1b218 <main@@Base+0x5188>
   1b20c:	ldrb	r0, [r7, #2]!
   1b210:	cmp	r0, #32
   1b214:	bhi	1b228 <main@@Base+0x5198>
   1b218:	mov	r0, r8
   1b21c:	mov	r2, r5
   1b220:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1b224:	mov	r7, r0
   1b228:	cmp	r9, r7
   1b22c:	beq	1b3e0 <main@@Base+0x5350>
   1b230:	mov	r0, #0
   1b234:	mov	r1, r7
   1b238:	mov	r2, r5
   1b23c:	sub	r3, fp, #56	; 0x38
   1b240:	str	r0, [fp, #-56]	; 0xffffffc8
   1b244:	mov	r0, r8
   1b248:	bl	35580 <flatcc_json_parser_float@@Base>
   1b24c:	mov	r1, r0
   1b250:	cmp	r7, r0
   1b254:	bne	1b288 <main@@Base+0x51f8>
   1b258:	movw	r3, #45476	; 0xb1a4
   1b25c:	sub	r0, fp, #56	; 0x38
   1b260:	mov	r1, r7
   1b264:	mov	r2, r5
   1b268:	str	r0, [sp]
   1b26c:	mov	r0, r8
   1b270:	movt	r3, #5
   1b274:	bl	24b38 <main@@Base+0xeaa8>
   1b278:	mov	r1, r0
   1b27c:	cmp	r0, r7
   1b280:	cmpne	r1, r5
   1b284:	beq	1b4c8 <main@@Base+0x5438>
   1b288:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b28c:	ldr	r2, [sp, #20]
   1b290:	str	r0, [r2]
   1b294:	b	1b3f4 <main@@Base+0x5364>
   1b298:	ldr	r5, [sp, #44]	; 0x2c
   1b29c:	ldr	r8, [sp, #36]	; 0x24
   1b2a0:	ldr	sl, [sp, #40]	; 0x28
   1b2a4:	bne	1b2b4 <main@@Base+0x5224>
   1b2a8:	ldrb	r0, [r7, #2]!
   1b2ac:	cmp	r0, #32
   1b2b0:	bhi	1b2c4 <main@@Base+0x5234>
   1b2b4:	mov	r0, r8
   1b2b8:	mov	r2, r5
   1b2bc:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1b2c0:	mov	r7, r0
   1b2c4:	cmp	r9, r7
   1b2c8:	beq	1b3e0 <main@@Base+0x5350>
   1b2cc:	mov	r0, #0
   1b2d0:	mov	r1, r7
   1b2d4:	mov	r2, r5
   1b2d8:	sub	r3, fp, #56	; 0x38
   1b2dc:	str	r0, [fp, #-56]	; 0xffffffc8
   1b2e0:	mov	r0, r8
   1b2e4:	bl	35580 <flatcc_json_parser_float@@Base>
   1b2e8:	mov	r1, r0
   1b2ec:	cmp	r7, r0
   1b2f0:	bne	1b32c <main@@Base+0x529c>
   1b2f4:	movw	r3, #45488	; 0xb1b0
   1b2f8:	sub	r0, fp, #56	; 0x38
   1b2fc:	mov	r1, r7
   1b300:	mov	r2, r5
   1b304:	str	r0, [sp]
   1b308:	mov	r0, r8
   1b30c:	movt	r3, #5
   1b310:	bl	24b38 <main@@Base+0xeaa8>
   1b314:	mov	r1, r0
   1b318:	cmp	r0, r7
   1b31c:	cmpne	r1, r5
   1b320:	beq	1b4c8 <main@@Base+0x5438>
   1b324:	ldr	r8, [sp, #36]	; 0x24
   1b328:	ldr	sl, [sp, #40]	; 0x28
   1b32c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b330:	ldr	r2, [sp, #20]
   1b334:	str	r0, [r2, #8]
   1b338:	b	1b3f4 <main@@Base+0x5364>
   1b33c:	ldr	r5, [sp, #44]	; 0x2c
   1b340:	ldr	r8, [sp, #36]	; 0x24
   1b344:	ldr	sl, [sp, #40]	; 0x28
   1b348:	bne	1b358 <main@@Base+0x52c8>
   1b34c:	ldrb	r0, [r7, #2]!
   1b350:	cmp	r0, #32
   1b354:	bhi	1b368 <main@@Base+0x52d8>
   1b358:	mov	r0, r8
   1b35c:	mov	r2, r5
   1b360:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1b364:	mov	r7, r0
   1b368:	cmp	r9, r7
   1b36c:	beq	1b3e0 <main@@Base+0x5350>
   1b370:	mov	r0, #0
   1b374:	mov	r1, r7
   1b378:	mov	r2, r5
   1b37c:	sub	r3, fp, #56	; 0x38
   1b380:	str	r0, [fp, #-56]	; 0xffffffc8
   1b384:	mov	r0, r8
   1b388:	bl	35580 <flatcc_json_parser_float@@Base>
   1b38c:	mov	r1, r0
   1b390:	cmp	r7, r0
   1b394:	bne	1b3d0 <main@@Base+0x5340>
   1b398:	movw	r3, #45500	; 0xb1bc
   1b39c:	sub	r0, fp, #56	; 0x38
   1b3a0:	mov	r1, r7
   1b3a4:	mov	r2, r5
   1b3a8:	str	r0, [sp]
   1b3ac:	mov	r0, r8
   1b3b0:	movt	r3, #5
   1b3b4:	bl	24b38 <main@@Base+0xeaa8>
   1b3b8:	mov	r1, r0
   1b3bc:	cmp	r0, r7
   1b3c0:	cmpne	r1, r5
   1b3c4:	beq	1b4c8 <main@@Base+0x5438>
   1b3c8:	ldr	r8, [sp, #36]	; 0x24
   1b3cc:	ldr	sl, [sp, #40]	; 0x28
   1b3d0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b3d4:	ldr	r2, [sp, #20]
   1b3d8:	str	r0, [r2, #4]
   1b3dc:	b	1b3f4 <main@@Base+0x5364>
   1b3e0:	mov	r0, r8
   1b3e4:	mov	r1, r9
   1b3e8:	mov	r2, r5
   1b3ec:	bl	33ecc <flatcc_json_parser_unmatched_symbol@@Base>
   1b3f0:	mov	r1, r0
   1b3f4:	sub	r0, r5, r1
   1b3f8:	cmp	r0, #2
   1b3fc:	blt	1b428 <main@@Base+0x5398>
   1b400:	ldrb	r0, [r1]
   1b404:	cmp	r0, #32
   1b408:	bls	1b414 <main@@Base+0x5384>
   1b40c:	mov	r2, r1
   1b410:	b	1b438 <main@@Base+0x53a8>
   1b414:	bne	1b428 <main@@Base+0x5398>
   1b418:	mov	r2, r1
   1b41c:	ldrb	r0, [r2, #1]!
   1b420:	cmp	r0, #32
   1b424:	bhi	1b438 <main@@Base+0x53a8>
   1b428:	mov	r0, r8
   1b42c:	mov	r2, r5
   1b430:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1b434:	mov	r2, r0
   1b438:	cmp	r2, r5
   1b43c:	beq	1b4e4 <main@@Base+0x5454>
   1b440:	ldrb	r0, [r2]
   1b444:	cmp	r0, #44	; 0x2c
   1b448:	bne	1b4ec <main@@Base+0x545c>
   1b44c:	add	r1, r2, #1
   1b450:	sub	r0, r5, r1
   1b454:	cmp	r0, #2
   1b458:	blt	1b480 <main@@Base+0x53f0>
   1b45c:	ldrb	r0, [r1]
   1b460:	cmp	r0, #32
   1b464:	bls	1b470 <main@@Base+0x53e0>
   1b468:	mov	r2, r1
   1b46c:	b	1b490 <main@@Base+0x5400>
   1b470:	bne	1b480 <main@@Base+0x53f0>
   1b474:	ldrb	r0, [r2, #2]!
   1b478:	cmp	r0, #32
   1b47c:	bhi	1b490 <main@@Base+0x5400>
   1b480:	mov	r0, r8
   1b484:	mov	r2, r5
   1b488:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1b48c:	mov	r2, r0
   1b490:	cmp	r2, r5
   1b494:	beq	1b520 <main@@Base+0x5490>
   1b498:	ldrb	r0, [r2]
   1b49c:	cmp	r0, #125	; 0x7d
   1b4a0:	bne	1a7f8 <main@@Base+0x4768>
   1b4a4:	add	r1, r2, #1
   1b4a8:	sub	r0, r5, r1
   1b4ac:	cmp	r0, #2
   1b4b0:	blt	1da54 <main@@Base+0x79c4>
   1b4b4:	ldrb	r0, [r1]
   1b4b8:	cmp	r0, #32
   1b4bc:	bls	1da40 <main@@Base+0x79b0>
   1b4c0:	mov	r4, r1
   1b4c4:	b	1ee1c <main@@Base+0x8d8c>
   1b4c8:	ldr	r8, [sp, #36]	; 0x24
   1b4cc:	ldr	r5, [sp, #44]	; 0x2c
   1b4d0:	mov	r3, #33	; 0x21
   1b4d4:	mov	r0, r8
   1b4d8:	mov	r2, r5
   1b4dc:	bl	337ac <flatcc_json_parser_set_error@@Base>
   1b4e0:	b	1a4cc <main@@Base+0x443c>
   1b4e4:	mov	r4, r5
   1b4e8:	b	1ee1c <main@@Base+0x8d8c>
   1b4ec:	cmp	r0, #125	; 0x7d
   1b4f0:	bne	1befc <main@@Base+0x5e6c>
   1b4f4:	add	r1, r2, #1
   1b4f8:	sub	r0, r5, r1
   1b4fc:	cmp	r0, #2
   1b500:	blt	1da54 <main@@Base+0x79c4>
   1b504:	ldrb	r0, [r1]
   1b508:	cmp	r0, #32
   1b50c:	bls	1da34 <main@@Base+0x79a4>
   1b510:	ldr	r5, [sp, #44]	; 0x2c
   1b514:	ldr	r8, [sp, #36]	; 0x24
   1b518:	mov	r4, r1
   1b51c:	b	1a4d0 <main@@Base+0x4440>
   1b520:	mov	r0, r8
   1b524:	mov	r1, r5
   1b528:	b	1bf04 <main@@Base+0x5e74>
   1b52c:	bne	1b53c <main@@Base+0x54ac>
   1b530:	ldrb	r0, [r7, #2]!
   1b534:	cmp	r0, #32
   1b538:	bhi	1b54c <main@@Base+0x54bc>
   1b53c:	mov	r0, r8
   1b540:	mov	r2, r5
   1b544:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1b548:	mov	r7, r0
   1b54c:	cmp	r9, r7
   1b550:	beq	19f1c <main@@Base+0x3e8c>
   1b554:	mov	r0, #0
   1b558:	mov	r1, r7
   1b55c:	mov	r2, r5
   1b560:	sub	r3, fp, #56	; 0x38
   1b564:	str	r0, [fp, #-56]	; 0xffffffc8
   1b568:	mov	r0, r8
   1b56c:	bl	35580 <flatcc_json_parser_float@@Base>
   1b570:	mov	r4, r0
   1b574:	cmp	r7, r0
   1b578:	bne	1b5ac <main@@Base+0x551c>
   1b57c:	movw	r3, #45280	; 0xb0e0
   1b580:	sub	r0, fp, #56	; 0x38
   1b584:	mov	r1, r7
   1b588:	mov	r2, r5
   1b58c:	str	r0, [sp]
   1b590:	mov	r0, r8
   1b594:	movt	r3, #5
   1b598:	bl	24b38 <main@@Base+0xeaa8>
   1b59c:	mov	r4, r0
   1b5a0:	cmp	r0, r7
   1b5a4:	cmpne	r4, r5
   1b5a8:	beq	16fc4 <main@@Base+0xf34>
   1b5ac:	vldr	s0, [fp, #-56]	; 0xffffffc8
   1b5b0:	vcmp.f32	s0, s16
   1b5b4:	vmrs	APSR_nzcv, fpscr
   1b5b8:	bne	1b5c8 <main@@Base+0x5538>
   1b5bc:	ldrb	r0, [r8, #8]
   1b5c0:	tst	r0, #2
   1b5c4:	beq	1ee1c <main@@Base+0x8d8c>
   1b5c8:	ldr	r0, [r8]
   1b5cc:	mov	r1, #26
   1b5d0:	b	18e48 <main@@Base+0x2db8>
   1b5d4:	bne	1b5e8 <main@@Base+0x5558>
   1b5d8:	mov	r4, r1
   1b5dc:	ldrb	r0, [r4, #1]!
   1b5e0:	cmp	r0, #32
   1b5e4:	bhi	1b5f8 <main@@Base+0x5568>
   1b5e8:	mov	r0, r8
   1b5ec:	mov	r2, r5
   1b5f0:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1b5f4:	mov	r4, r0
   1b5f8:	cmp	r4, r5
   1b5fc:	beq	1b630 <main@@Base+0x55a0>
   1b600:	ldrb	r0, [r4]
   1b604:	cmp	r0, #58	; 0x3a
   1b608:	bne	1b630 <main@@Base+0x55a0>
   1b60c:	add	r1, r4, #1
   1b610:	sub	r0, r5, r1
   1b614:	cmp	r0, #2
   1b618:	blt	1ca08 <main@@Base+0x6978>
   1b61c:	ldrb	r0, [r1]
   1b620:	cmp	r0, #32
   1b624:	bls	1c9f8 <main@@Base+0x6968>
   1b628:	mov	r4, r1
   1b62c:	b	1ca18 <main@@Base+0x6988>
   1b630:	mov	r0, r8
   1b634:	mov	r1, r4
   1b638:	mov	r2, r5
   1b63c:	mov	r3, #4
   1b640:	bl	337ac <flatcc_json_parser_set_error@@Base>
   1b644:	b	1ca14 <main@@Base+0x6984>
   1b648:	bne	1b65c <main@@Base+0x55cc>
   1b64c:	mov	r4, r1
   1b650:	ldrb	r0, [r4, #1]!
   1b654:	cmp	r0, #32
   1b658:	bhi	1b66c <main@@Base+0x55dc>
   1b65c:	mov	r0, r8
   1b660:	mov	r2, r5
   1b664:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1b668:	mov	r4, r0
   1b66c:	cmp	r4, r5
   1b670:	beq	1b6a4 <main@@Base+0x5614>
   1b674:	ldrb	r0, [r4]
   1b678:	cmp	r0, #58	; 0x3a
   1b67c:	bne	1b6a4 <main@@Base+0x5614>
   1b680:	add	r1, r4, #1
   1b684:	sub	r0, r5, r1
   1b688:	cmp	r0, #2
   1b68c:	blt	1cb10 <main@@Base+0x6a80>
   1b690:	ldrb	r0, [r1]
   1b694:	cmp	r0, #32
   1b698:	bls	1cb00 <main@@Base+0x6a70>
   1b69c:	mov	r4, r1
   1b6a0:	b	1cb20 <main@@Base+0x6a90>
   1b6a4:	mov	r0, r8
   1b6a8:	mov	r1, r4
   1b6ac:	mov	r2, r5
   1b6b0:	mov	r3, #4
   1b6b4:	bl	337ac <flatcc_json_parser_set_error@@Base>
   1b6b8:	b	1cb1c <main@@Base+0x6a8c>
   1b6bc:	bne	1b6d0 <main@@Base+0x5640>
   1b6c0:	mov	r7, r1
   1b6c4:	ldrb	r0, [r7, #1]!
   1b6c8:	cmp	r0, #32
   1b6cc:	bhi	1b6e0 <main@@Base+0x5650>
   1b6d0:	mov	r0, r8
   1b6d4:	mov	r2, r5
   1b6d8:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1b6dc:	mov	r7, r0
   1b6e0:	cmp	r7, r5
   1b6e4:	beq	1b720 <main@@Base+0x5690>
   1b6e8:	ldrb	r0, [r7]
   1b6ec:	cmp	r0, #58	; 0x3a
   1b6f0:	bne	1b720 <main@@Base+0x5690>
   1b6f4:	add	r1, r7, #1
   1b6f8:	sub	r0, r5, r1
   1b6fc:	cmp	r0, #2
   1b700:	blt	1cbd4 <main@@Base+0x6b44>
   1b704:	ldrb	r0, [r1]
   1b708:	cmp	r0, #32
   1b70c:	bls	1cbbc <main@@Base+0x6b2c>
   1b710:	ldr	r5, [sp, #44]	; 0x2c
   1b714:	ldr	r8, [sp, #36]	; 0x24
   1b718:	mov	r7, r1
   1b71c:	b	1cbe4 <main@@Base+0x6b54>
   1b720:	mov	r0, r8
   1b724:	mov	r1, r7
   1b728:	mov	r2, r5
   1b72c:	mov	r3, #4
   1b730:	bl	337ac <flatcc_json_parser_set_error@@Base>
   1b734:	b	1cbe0 <main@@Base+0x6b50>
   1b738:	bne	1b74c <main@@Base+0x56bc>
   1b73c:	mov	r7, r1
   1b740:	ldrb	r0, [r7, #1]!
   1b744:	cmp	r0, #32
   1b748:	bhi	1b75c <main@@Base+0x56cc>
   1b74c:	mov	r0, r8
   1b750:	mov	r2, r5
   1b754:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1b758:	mov	r7, r0
   1b75c:	cmp	r7, r5
   1b760:	beq	1b79c <main@@Base+0x570c>
   1b764:	ldrb	r0, [r7]
   1b768:	cmp	r0, #58	; 0x3a
   1b76c:	bne	1b79c <main@@Base+0x570c>
   1b770:	add	r1, r7, #1
   1b774:	sub	r0, r5, r1
   1b778:	cmp	r0, #2
   1b77c:	blt	1cdb8 <main@@Base+0x6d28>
   1b780:	ldrb	r0, [r1]
   1b784:	cmp	r0, #32
   1b788:	bls	1cda0 <main@@Base+0x6d10>
   1b78c:	ldr	r5, [sp, #44]	; 0x2c
   1b790:	ldr	r8, [sp, #36]	; 0x24
   1b794:	mov	r7, r1
   1b798:	b	1cdc8 <main@@Base+0x6d38>
   1b79c:	mov	r0, r8
   1b7a0:	mov	r1, r7
   1b7a4:	mov	r2, r5
   1b7a8:	mov	r3, #4
   1b7ac:	bl	337ac <flatcc_json_parser_set_error@@Base>
   1b7b0:	b	1cdc4 <main@@Base+0x6d34>
   1b7b4:	mov	r0, r8
   1b7b8:	mov	r1, r4
   1b7bc:	mov	r2, r5
   1b7c0:	mov	r3, #9
   1b7c4:	bl	337ac <flatcc_json_parser_set_error@@Base>
   1b7c8:	b	19f40 <main@@Base+0x3eb0>
   1b7cc:	bne	1b7dc <main@@Base+0x574c>
   1b7d0:	ldrb	r0, [r7, #2]!
   1b7d4:	cmp	r0, #32
   1b7d8:	bhi	1b7ec <main@@Base+0x575c>
   1b7dc:	mov	r0, r8
   1b7e0:	mov	r2, r5
   1b7e4:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1b7e8:	mov	r7, r0
   1b7ec:	cmp	sl, r7
   1b7f0:	beq	1b874 <main@@Base+0x57e4>
   1b7f4:	mov	r6, #0
   1b7f8:	cmp	r7, r5
   1b7fc:	str	r6, [fp, #-52]	; 0xffffffcc
   1b800:	str	r6, [fp, #-56]	; 0xffffffc8
   1b804:	str	r6, [fp, #-60]	; 0xffffffc4
   1b808:	str	r6, [sp, #56]	; 0x38
   1b80c:	beq	1b8ec <main@@Base+0x585c>
   1b810:	sub	r0, fp, #56	; 0x38
   1b814:	mov	r1, r7
   1b818:	mov	r2, r5
   1b81c:	add	r3, sp, #56	; 0x38
   1b820:	str	r0, [sp]
   1b824:	mov	r0, r8
   1b828:	bl	356c0 <flatcc_json_parser_integer@@Base>
   1b82c:	cmp	r0, r7
   1b830:	beq	1b924 <main@@Base+0x5894>
   1b834:	ldr	r2, [sp, #56]	; 0x38
   1b838:	mov	r4, r0
   1b83c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b840:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1b844:	cmp	r2, #0
   1b848:	beq	1b930 <main@@Base+0x58a0>
   1b84c:	ldr	sl, [sp, #40]	; 0x28
   1b850:	subs	r2, r0, #-2147483647	; 0x80000001
   1b854:	sbcs	r1, r1, #0
   1b858:	bcc	1b95c <main@@Base+0x58cc>
   1b85c:	mov	r0, r8
   1b860:	mov	r1, r4
   1b864:	mov	r2, r5
   1b868:	mov	r3, #8
   1b86c:	bl	337ac <flatcc_json_parser_set_error@@Base>
   1b870:	b	1b954 <main@@Base+0x58c4>
   1b874:	add	r4, r9, #16
   1b878:	mov	r1, #8
   1b87c:	mov	r2, #-268435456	; 0xf0000000
   1b880:	sub	r0, r5, r4
   1b884:	cmp	r0, #8
   1b888:	movcc	r1, r0
   1b88c:	add	r1, r2, r1, lsl #28
   1b890:	asr	r1, r1, #28
   1b894:	cmp	r1, #0
   1b898:	blt	1cec0 <main@@Base+0x6e30>
   1b89c:	ldrb	r1, [r4]
   1b8a0:	cmp	r1, #97	; 0x61
   1b8a4:	bne	1cec0 <main@@Base+0x6e30>
   1b8a8:	ldr	sl, [sp, #40]	; 0x28
   1b8ac:	cmp	r0, #2
   1b8b0:	blt	1ee08 <main@@Base+0x8d78>
   1b8b4:	ldr	r2, [sp, #32]
   1b8b8:	mov	r1, r9
   1b8bc:	ldrb	r0, [r1, #17]!
   1b8c0:	ldr	r2, [r2]
   1b8c4:	cmp	r2, #0
   1b8c8:	beq	1b8f8 <main@@Base+0x5868>
   1b8cc:	cmp	r0, #33	; 0x21
   1b8d0:	bcc	1b8dc <main@@Base+0x584c>
   1b8d4:	cmp	r0, #58	; 0x3a
   1b8d8:	bne	1ee08 <main@@Base+0x8d78>
   1b8dc:	ldr	r0, [sp, #32]
   1b8e0:	mov	r2, #0
   1b8e4:	str	r2, [r0]
   1b8e8:	b	1b904 <main@@Base+0x5874>
   1b8ec:	ldr	sl, [sp, #40]	; 0x28
   1b8f0:	mov	r4, r5
   1b8f4:	b	1c0e4 <main@@Base+0x6054>
   1b8f8:	cmp	r0, #34	; 0x22
   1b8fc:	bne	1ee08 <main@@Base+0x8d78>
   1b900:	add	r1, r9, #18
   1b904:	sub	r0, r5, r1
   1b908:	cmp	r0, #2
   1b90c:	blt	1b9f8 <main@@Base+0x5968>
   1b910:	ldrb	r0, [r1]
   1b914:	cmp	r0, #32
   1b918:	bls	1b9e4 <main@@Base+0x5954>
   1b91c:	mov	r7, r1
   1b920:	b	1ba08 <main@@Base+0x5978>
   1b924:	ldr	sl, [sp, #40]	; 0x28
   1b928:	mov	r4, r7
   1b92c:	b	1c0e4 <main@@Base+0x6054>
   1b930:	subs	r2, r0, #-2147483648	; 0x80000000
   1b934:	sbcs	r1, r1, #0
   1b938:	bcc	1c0d8 <main@@Base+0x6048>
   1b93c:	mov	r0, r8
   1b940:	mov	r1, r4
   1b944:	mov	r2, r5
   1b948:	mov	r3, #7
   1b94c:	bl	337ac <flatcc_json_parser_set_error@@Base>
   1b950:	ldr	sl, [sp, #40]	; 0x28
   1b954:	mov	r4, r0
   1b958:	b	1c0e4 <main@@Base+0x6054>
   1b95c:	rsb	r6, r0, #0
   1b960:	b	1c0e0 <main@@Base+0x6050>
   1b964:	bne	1b978 <main@@Base+0x58e8>
   1b968:	mov	r4, r1
   1b96c:	ldrb	r0, [r4, #1]!
   1b970:	cmp	r0, #32
   1b974:	bhi	1b988 <main@@Base+0x58f8>
   1b978:	mov	r0, r8
   1b97c:	mov	r2, r5
   1b980:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1b984:	mov	r4, r0
   1b988:	cmp	r4, r5
   1b98c:	beq	1b9cc <main@@Base+0x593c>
   1b990:	ldrb	r0, [r4]
   1b994:	cmp	r0, #58	; 0x3a
   1b998:	bne	1b9cc <main@@Base+0x593c>
   1b99c:	add	r1, r4, #1
   1b9a0:	sub	r0, r5, r1
   1b9a4:	cmp	r0, #2
   1b9a8:	blt	1cff8 <main@@Base+0x6f68>
   1b9ac:	ldrb	r0, [r1]
   1b9b0:	cmp	r0, #32
   1b9b4:	bls	1cfdc <main@@Base+0x6f4c>
   1b9b8:	ldr	r5, [sp, #44]	; 0x2c
   1b9bc:	ldr	r8, [sp, #36]	; 0x24
   1b9c0:	ldr	sl, [sp, #40]	; 0x28
   1b9c4:	mov	r4, r1
   1b9c8:	b	1d008 <main@@Base+0x6f78>
   1b9cc:	mov	r0, r8
   1b9d0:	mov	r1, r4
   1b9d4:	mov	r2, r5
   1b9d8:	mov	r3, #4
   1b9dc:	bl	337ac <flatcc_json_parser_set_error@@Base>
   1b9e0:	b	1d004 <main@@Base+0x6f74>
   1b9e4:	bne	1b9f8 <main@@Base+0x5968>
   1b9e8:	mov	r7, r1
   1b9ec:	ldrb	r0, [r7, #1]!
   1b9f0:	cmp	r0, #32
   1b9f4:	bhi	1ba08 <main@@Base+0x5978>
   1b9f8:	mov	r0, r8
   1b9fc:	mov	r2, r5
   1ba00:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1ba04:	mov	r7, r0
   1ba08:	cmp	r7, r5
   1ba0c:	beq	1ba4c <main@@Base+0x59bc>
   1ba10:	ldrb	r0, [r7]
   1ba14:	cmp	r0, #58	; 0x3a
   1ba18:	bne	1ba4c <main@@Base+0x59bc>
   1ba1c:	add	r1, r7, #1
   1ba20:	sub	r0, r5, r1
   1ba24:	cmp	r0, #2
   1ba28:	blt	1d1b8 <main@@Base+0x7128>
   1ba2c:	ldrb	r0, [r1]
   1ba30:	cmp	r0, #32
   1ba34:	bls	1d19c <main@@Base+0x710c>
   1ba38:	ldr	r5, [sp, #44]	; 0x2c
   1ba3c:	ldr	r8, [sp, #36]	; 0x24
   1ba40:	ldr	sl, [sp, #40]	; 0x28
   1ba44:	mov	r7, r1
   1ba48:	b	1d1c8 <main@@Base+0x7138>
   1ba4c:	mov	r0, r8
   1ba50:	mov	r1, r7
   1ba54:	mov	r2, r5
   1ba58:	mov	r3, #4
   1ba5c:	bl	337ac <flatcc_json_parser_set_error@@Base>
   1ba60:	b	1d1c4 <main@@Base+0x7134>
   1ba64:	bne	1ba74 <main@@Base+0x59e4>
   1ba68:	ldrb	r0, [r4, #2]!
   1ba6c:	cmp	r0, #32
   1ba70:	bhi	1ba84 <main@@Base+0x59f4>
   1ba74:	mov	r0, r8
   1ba78:	mov	r2, r5
   1ba7c:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1ba80:	mov	r4, r0
   1ba84:	cmp	r4, r5
   1ba88:	mov	r6, r5
   1ba8c:	beq	1bad0 <main@@Base+0x5a40>
   1ba90:	ldrb	r0, [r4]
   1ba94:	cmp	r0, #93	; 0x5d
   1ba98:	bne	1bacc <main@@Base+0x5a3c>
   1ba9c:	add	r1, r4, #1
   1baa0:	sub	r0, r5, r1
   1baa4:	cmp	r0, #2
   1baa8:	blt	1cfcc <main@@Base+0x6f3c>
   1baac:	ldrb	r0, [r1]
   1bab0:	cmp	r0, #32
   1bab4:	bls	1cfb0 <main@@Base+0x6f20>
   1bab8:	ldr	r5, [sp, #44]	; 0x2c
   1babc:	ldr	r8, [sp, #36]	; 0x24
   1bac0:	ldr	sl, [sp, #40]	; 0x28
   1bac4:	mov	r4, r1
   1bac8:	b	1a4f0 <main@@Base+0x4460>
   1bacc:	mov	r6, r4
   1bad0:	mov	r0, #0
   1bad4:	mov	r1, #1
   1bad8:	strb	r0, [fp, #-60]	; 0xffffffc4
   1badc:	ldr	r0, [r8]
   1bae0:	bl	2eca8 <flatcc_builder_extend_vector@@Base>
   1bae4:	cmp	r0, #0
   1bae8:	beq	20ad0 <main@@Base+0xaa40>
   1baec:	mov	r7, r0
   1baf0:	mov	r4, r6
   1baf4:	sub	r0, r5, r4
   1baf8:	cmp	r0, #4
   1bafc:	blt	1bb38 <main@@Base+0x5aa8>
   1bb00:	ldr	r1, [r4]
   1bb04:	movw	r2, #29300	; 0x7274
   1bb08:	movt	r2, #25973	; 0x6575
   1bb0c:	cmp	r1, r2
   1bb10:	beq	1bb9c <main@@Base+0x5b0c>
   1bb14:	cmp	r0, #5
   1bb18:	blt	1bb38 <main@@Base+0x5aa8>
   1bb1c:	movw	r1, #27767	; 0x6c77
   1bb20:	mov	r0, r4
   1bb24:	mov	r2, #5
   1bb28:	movt	r1, #4
   1bb2c:	bl	14e6c <memcmp@plt>
   1bb30:	cmp	r0, #0
   1bb34:	beq	1bcfc <main@@Base+0x5c6c>
   1bb38:	mov	r6, #0
   1bb3c:	cmp	r4, r5
   1bb40:	str	r6, [fp, #-52]	; 0xffffffcc
   1bb44:	str	r6, [fp, #-56]	; 0xffffffc8
   1bb48:	str	r6, [sp, #56]	; 0x38
   1bb4c:	beq	1bb94 <main@@Base+0x5b04>
   1bb50:	sub	r0, fp, #56	; 0x38
   1bb54:	mov	r1, r4
   1bb58:	mov	r2, r5
   1bb5c:	add	r3, sp, #56	; 0x38
   1bb60:	str	r0, [sp]
   1bb64:	mov	r0, r8
   1bb68:	bl	356c0 <flatcc_json_parser_integer@@Base>
   1bb6c:	cmp	r0, r4
   1bb70:	beq	1bba8 <main@@Base+0x5b18>
   1bb74:	mov	r1, r0
   1bb78:	ldr	r0, [sp, #56]	; 0x38
   1bb7c:	cmp	r0, #0
   1bb80:	beq	1bbb0 <main@@Base+0x5b20>
   1bb84:	mov	r0, r8
   1bb88:	mov	r2, r5
   1bb8c:	mov	r3, #8
   1bb90:	b	1bbd0 <main@@Base+0x5b40>
   1bb94:	mov	r1, r5
   1bb98:	b	1bbd8 <main@@Base+0x5b48>
   1bb9c:	mov	r0, #1
   1bba0:	add	r1, r4, #4
   1bba4:	b	1bbe4 <main@@Base+0x5b54>
   1bba8:	mov	r1, r4
   1bbac:	b	1bbd8 <main@@Base+0x5b48>
   1bbb0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1bbb4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1bbb8:	subs	r3, r0, #256	; 0x100
   1bbbc:	sbcs	r2, r2, #0
   1bbc0:	bcc	1bd08 <main@@Base+0x5c78>
   1bbc4:	mov	r0, r8
   1bbc8:	mov	r2, r5
   1bbcc:	mov	r3, #7
   1bbd0:	bl	337ac <flatcc_json_parser_set_error@@Base>
   1bbd4:	mov	r1, r0
   1bbd8:	uxtb	r0, r6
   1bbdc:	cmp	r0, #0
   1bbe0:	movwne	r0, #1
   1bbe4:	strb	r0, [fp, #-60]	; 0xffffffc4
   1bbe8:	cmp	r4, r1
   1bbec:	bne	1bc24 <main@@Base+0x5b94>
   1bbf0:	movw	r3, #45256	; 0xb0c8
   1bbf4:	sub	r0, fp, #60	; 0x3c
   1bbf8:	mov	r1, r4
   1bbfc:	mov	r2, r5
   1bc00:	str	r0, [sp]
   1bc04:	mov	r0, r8
   1bc08:	movt	r3, #5
   1bc0c:	bl	24968 <main@@Base+0xe8d8>
   1bc10:	mov	r1, r0
   1bc14:	cmp	r0, r4
   1bc18:	cmpne	r1, r5
   1bc1c:	beq	20ac8 <main@@Base+0xaa38>
   1bc20:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   1bc24:	strb	r0, [r7]
   1bc28:	sub	r0, r5, r1
   1bc2c:	cmp	r0, #2
   1bc30:	blt	1bc5c <main@@Base+0x5bcc>
   1bc34:	ldrb	r0, [r1]
   1bc38:	cmp	r0, #32
   1bc3c:	bls	1bc48 <main@@Base+0x5bb8>
   1bc40:	mov	r4, r1
   1bc44:	b	1bc6c <main@@Base+0x5bdc>
   1bc48:	bne	1bc5c <main@@Base+0x5bcc>
   1bc4c:	mov	r4, r1
   1bc50:	ldrb	r0, [r4, #1]!
   1bc54:	cmp	r0, #32
   1bc58:	bhi	1bc6c <main@@Base+0x5bdc>
   1bc5c:	mov	r0, r8
   1bc60:	mov	r2, r5
   1bc64:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1bc68:	mov	r4, r0
   1bc6c:	cmp	r4, r5
   1bc70:	beq	1d9f4 <main@@Base+0x7964>
   1bc74:	ldrb	r0, [r4]
   1bc78:	cmp	r0, #44	; 0x2c
   1bc7c:	bne	1d9fc <main@@Base+0x796c>
   1bc80:	add	r1, r4, #1
   1bc84:	sub	r0, r5, r1
   1bc88:	cmp	r0, #2
   1bc8c:	blt	1bcb4 <main@@Base+0x5c24>
   1bc90:	ldrb	r0, [r1]
   1bc94:	cmp	r0, #32
   1bc98:	bls	1bca4 <main@@Base+0x5c14>
   1bc9c:	mov	r4, r1
   1bca0:	b	1bcc4 <main@@Base+0x5c34>
   1bca4:	bne	1bcb4 <main@@Base+0x5c24>
   1bca8:	ldrb	r0, [r4, #2]!
   1bcac:	cmp	r0, #32
   1bcb0:	bhi	1bcc4 <main@@Base+0x5c34>
   1bcb4:	mov	r0, r8
   1bcb8:	mov	r2, r5
   1bcbc:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1bcc0:	mov	r4, r0
   1bcc4:	cmp	r4, r5
   1bcc8:	beq	1da20 <main@@Base+0x7990>
   1bccc:	ldrb	r0, [r4]
   1bcd0:	cmp	r0, #93	; 0x5d
   1bcd4:	beq	1ba9c <main@@Base+0x5a0c>
   1bcd8:	mov	r0, #0
   1bcdc:	mov	r1, #1
   1bce0:	strb	r0, [fp, #-60]	; 0xffffffc4
   1bce4:	ldr	r0, [r8]
   1bce8:	bl	2eca8 <flatcc_builder_extend_vector@@Base>
   1bcec:	mov	r7, r0
   1bcf0:	cmp	r0, #0
   1bcf4:	bne	1baf4 <main@@Base+0x5a64>
   1bcf8:	b	16fc4 <main@@Base+0xf34>
   1bcfc:	mov	r0, #0
   1bd00:	add	r1, r4, #5
   1bd04:	b	1bbe4 <main@@Base+0x5b54>
   1bd08:	mov	r6, r0
   1bd0c:	b	1bbd8 <main@@Base+0x5b48>
   1bd10:	bne	1bd24 <main@@Base+0x5c94>
   1bd14:	mov	r4, r1
   1bd18:	ldrb	r0, [r4, #1]!
   1bd1c:	cmp	r0, #32
   1bd20:	bhi	1bd34 <main@@Base+0x5ca4>
   1bd24:	mov	r0, r8
   1bd28:	mov	r2, r5
   1bd2c:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1bd30:	mov	r4, r0
   1bd34:	cmp	r4, r5
   1bd38:	beq	1bd74 <main@@Base+0x5ce4>
   1bd3c:	ldrb	r0, [r4]
   1bd40:	cmp	r0, #58	; 0x3a
   1bd44:	bne	1bd74 <main@@Base+0x5ce4>
   1bd48:	add	r1, r4, #1
   1bd4c:	sub	r0, r5, r1
   1bd50:	cmp	r0, #2
   1bd54:	blt	1d464 <main@@Base+0x73d4>
   1bd58:	ldrb	r0, [r1]
   1bd5c:	cmp	r0, #32
   1bd60:	bls	1d44c <main@@Base+0x73bc>
   1bd64:	ldr	r5, [sp, #44]	; 0x2c
   1bd68:	ldr	r8, [sp, #36]	; 0x24
   1bd6c:	mov	r4, r1
   1bd70:	b	1d474 <main@@Base+0x73e4>
   1bd74:	mov	r0, r8
   1bd78:	mov	r1, r4
   1bd7c:	mov	r2, r5
   1bd80:	mov	r3, #4
   1bd84:	bl	337ac <flatcc_json_parser_set_error@@Base>
   1bd88:	b	1d470 <main@@Base+0x73e0>
   1bd8c:	bne	1bda0 <main@@Base+0x5d10>
   1bd90:	mov	r4, r1
   1bd94:	ldrb	r0, [r4, #1]!
   1bd98:	cmp	r0, #32
   1bd9c:	bhi	1bdb0 <main@@Base+0x5d20>
   1bda0:	mov	r0, r8
   1bda4:	mov	r2, r5
   1bda8:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1bdac:	mov	r4, r0
   1bdb0:	cmp	r4, r5
   1bdb4:	beq	1bdf4 <main@@Base+0x5d64>
   1bdb8:	ldrb	r0, [r4]
   1bdbc:	cmp	r0, #58	; 0x3a
   1bdc0:	bne	1bdf4 <main@@Base+0x5d64>
   1bdc4:	add	r1, r4, #1
   1bdc8:	sub	r0, r5, r1
   1bdcc:	cmp	r0, #2
   1bdd0:	blt	1d50c <main@@Base+0x747c>
   1bdd4:	ldrb	r0, [r1]
   1bdd8:	cmp	r0, #32
   1bddc:	bls	1d4f0 <main@@Base+0x7460>
   1bde0:	ldr	r5, [sp, #44]	; 0x2c
   1bde4:	ldr	r8, [sp, #36]	; 0x24
   1bde8:	ldr	sl, [sp, #40]	; 0x28
   1bdec:	mov	r4, r1
   1bdf0:	b	1d51c <main@@Base+0x748c>
   1bdf4:	mov	r0, r8
   1bdf8:	mov	r1, r4
   1bdfc:	mov	r2, r5
   1be00:	mov	r3, #4
   1be04:	bl	337ac <flatcc_json_parser_set_error@@Base>
   1be08:	b	1d518 <main@@Base+0x7488>
   1be0c:	bne	1be1c <main@@Base+0x5d8c>
   1be10:	ldrb	r0, [r4, #2]!
   1be14:	cmp	r0, #32
   1be18:	bhi	1be2c <main@@Base+0x5d9c>
   1be1c:	mov	r0, r8
   1be20:	mov	r2, r5
   1be24:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1be28:	mov	r4, r0
   1be2c:	cmp	r7, r4
   1be30:	beq	1e268 <main@@Base+0x81d8>
   1be34:	mov	r0, #0
   1be38:	mov	r1, #3
   1be3c:	str	r0, [sp, #52]	; 0x34
   1be40:	ldr	r0, [r8]
   1be44:	bl	2f88c <flatcc_builder_start_table@@Base>
   1be48:	cmp	r0, #0
   1be4c:	bne	1beb4 <main@@Base+0x5e24>
   1be50:	cmp	r4, r5
   1be54:	beq	1be8c <main@@Base+0x5dfc>
   1be58:	ldrb	r0, [r4]
   1be5c:	cmp	r0, #123	; 0x7b
   1be60:	bne	1be8c <main@@Base+0x5dfc>
   1be64:	add	r1, r4, #1
   1be68:	sub	r0, r5, r1
   1be6c:	cmp	r0, #2
   1be70:	blt	1dacc <main@@Base+0x7a3c>
   1be74:	ldrb	r0, [r1]
   1be78:	cmp	r0, #32
   1be7c:	bls	1dab4 <main@@Base+0x7a24>
   1be80:	ldr	r5, [sp, #44]	; 0x2c
   1be84:	mov	r4, r1
   1be88:	b	1dadc <main@@Base+0x7a4c>
   1be8c:	mov	r0, r8
   1be90:	mov	r1, r4
   1be94:	mov	r2, r5
   1be98:	mov	r3, #21
   1be9c:	bl	337ac <flatcc_json_parser_set_error@@Base>
   1bea0:	mov	r4, r0
   1bea4:	ldr	r0, [sp, #28]
   1bea8:	ldr	r0, [r0]
   1beac:	cmp	r0, #0
   1beb0:	beq	1bee4 <main@@Base+0x5e54>
   1beb4:	mov	r0, r8
   1beb8:	mov	r1, r4
   1bebc:	mov	r2, r5
   1bec0:	mov	r3, #33	; 0x21
   1bec4:	bl	337ac <flatcc_json_parser_set_error@@Base>
   1bec8:	mov	r4, r0
   1becc:	ldr	r0, [sp, #52]	; 0x34
   1bed0:	cmp	r0, #0
   1bed4:	beq	16fc4 <main@@Base+0xf34>
   1bed8:	ldr	r0, [r8]
   1bedc:	mov	r1, #35	; 0x23
   1bee0:	b	19718 <main@@Base+0x3688>
   1bee4:	ldr	r0, [r8]
   1bee8:	bl	3021c <flatcc_builder_end_table@@Base>
   1beec:	cmp	r0, #0
   1bef0:	str	r0, [sp, #52]	; 0x34
   1bef4:	bne	1bed8 <main@@Base+0x5e48>
   1bef8:	b	1beb4 <main@@Base+0x5e24>
   1befc:	mov	r0, r8
   1bf00:	mov	r1, r2
   1bf04:	mov	r2, r5
   1bf08:	mov	r3, #10
   1bf0c:	b	1a778 <main@@Base+0x46e8>
   1bf10:	bne	1bf20 <main@@Base+0x5e90>
   1bf14:	ldrb	r0, [r2, #2]!
   1bf18:	cmp	r0, #32
   1bf1c:	bhi	1bf30 <main@@Base+0x5ea0>
   1bf20:	mov	r0, r8
   1bf24:	mov	r2, r5
   1bf28:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1bf2c:	mov	r2, r0
   1bf30:	cmp	r4, r2
   1bf34:	beq	1ee08 <main@@Base+0x8d78>
   1bf38:	ldr	r0, [sp, #48]	; 0x30
   1bf3c:	mov	r1, #8
   1bf40:	mov	r3, #0
   1bf44:	str	r1, [sp]
   1bf48:	mov	r1, r2
   1bf4c:	mov	r2, r5
   1bf50:	str	r0, [sp, #4]
   1bf54:	movw	r0, #45240	; 0xb0b8
   1bf58:	movt	r0, #5
   1bf5c:	str	r0, [sp, #8]
   1bf60:	movw	r0, #13692	; 0x357c
   1bf64:	movt	r0, #2
   1bf68:	str	r0, [sp, #12]
   1bf6c:	mov	r0, r8
   1bf70:	bl	35ff4 <flatcc_json_parser_union_type@@Base>
   1bf74:	b	1ee18 <main@@Base+0x8d88>
   1bf78:	bne	1bf88 <main@@Base+0x5ef8>
   1bf7c:	ldrb	r0, [r4, #2]!
   1bf80:	cmp	r0, #32
   1bf84:	bhi	1bf98 <main@@Base+0x5f08>
   1bf88:	mov	r0, r8
   1bf8c:	mov	r2, r5
   1bf90:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1bf94:	mov	r4, r0
   1bf98:	cmp	r7, r4
   1bf9c:	beq	1e268 <main@@Base+0x81d8>
   1bfa0:	ldr	r0, [r8]
   1bfa4:	bl	2f54c <flatcc_builder_start_offset_vector@@Base>
   1bfa8:	cmp	r0, #0
   1bfac:	bne	16fc4 <main@@Base+0xf34>
   1bfb0:	cmp	r4, r5
   1bfb4:	beq	1bfe8 <main@@Base+0x5f58>
   1bfb8:	ldrb	r0, [r4]
   1bfbc:	cmp	r0, #91	; 0x5b
   1bfc0:	bne	1bfe8 <main@@Base+0x5f58>
   1bfc4:	add	r1, r4, #1
   1bfc8:	sub	r0, r5, r1
   1bfcc:	cmp	r0, #2
   1bfd0:	blt	1c81c <main@@Base+0x678c>
   1bfd4:	ldrb	r0, [r1]
   1bfd8:	cmp	r0, #32
   1bfdc:	bls	1c80c <main@@Base+0x677c>
   1bfe0:	mov	r4, r1
   1bfe4:	b	1c82c <main@@Base+0x679c>
   1bfe8:	mov	r0, r8
   1bfec:	mov	r1, r4
   1bff0:	mov	r2, r5
   1bff4:	mov	r3, #22
   1bff8:	bl	337ac <flatcc_json_parser_set_error@@Base>
   1bffc:	mov	r4, r0
   1c000:	ldr	r0, [r8]
   1c004:	bl	2f618 <flatcc_builder_end_offset_vector@@Base>
   1c008:	cmp	r0, #0
   1c00c:	str	r0, [sp, #52]	; 0x34
   1c010:	beq	16fc4 <main@@Base+0xf34>
   1c014:	ldr	r0, [r8]
   1c018:	mov	r1, #28
   1c01c:	b	19718 <main@@Base+0x3688>
   1c020:	bne	1c030 <main@@Base+0x5fa0>
   1c024:	ldrb	r0, [r7, #2]!
   1c028:	cmp	r0, #32
   1c02c:	bhi	1c040 <main@@Base+0x5fb0>
   1c030:	mov	r0, r8
   1c034:	mov	r2, r5
   1c038:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1c03c:	mov	r7, r0
   1c040:	cmp	sl, r7
   1c044:	beq	1a4bc <main@@Base+0x442c>
   1c048:	ldr	r0, [r8]
   1c04c:	mov	r1, #8
   1c050:	mov	r2, #4
   1c054:	mvn	r3, #-536870912	; 0xe0000000
   1c058:	bl	2f4c0 <flatcc_builder_start_vector@@Base>
   1c05c:	cmp	r0, #0
   1c060:	bne	20af8 <main@@Base+0xaa68>
   1c064:	ldr	sl, [sp, #40]	; 0x28
   1c068:	cmp	r7, r5
   1c06c:	beq	1c0a0 <main@@Base+0x6010>
   1c070:	ldrb	r0, [r7]
   1c074:	cmp	r0, #91	; 0x5b
   1c078:	bne	1c0a0 <main@@Base+0x6010>
   1c07c:	add	r1, r7, #1
   1c080:	sub	r0, r5, r1
   1c084:	cmp	r0, #2
   1c088:	blt	1c98c <main@@Base+0x68fc>
   1c08c:	ldrb	r0, [r1]
   1c090:	cmp	r0, #32
   1c094:	bls	1c97c <main@@Base+0x68ec>
   1c098:	mov	r7, r1
   1c09c:	b	1c99c <main@@Base+0x690c>
   1c0a0:	mov	r0, r8
   1c0a4:	mov	r1, r7
   1c0a8:	mov	r2, r5
   1c0ac:	mov	r3, #22
   1c0b0:	bl	337ac <flatcc_json_parser_set_error@@Base>
   1c0b4:	mov	r7, r0
   1c0b8:	ldr	r0, [r8]
   1c0bc:	bl	3052c <flatcc_builder_end_vector@@Base>
   1c0c0:	cmp	r0, #0
   1c0c4:	str	r0, [sp, #52]	; 0x34
   1c0c8:	beq	20af8 <main@@Base+0xaa68>
   1c0cc:	ldr	r0, [r8]
   1c0d0:	mov	r1, #29
   1c0d4:	b	19f60 <main@@Base+0x3ed0>
   1c0d8:	ldr	sl, [sp, #40]	; 0x28
   1c0dc:	mov	r6, r0
   1c0e0:	str	r6, [fp, #-60]	; 0xffffffc4
   1c0e4:	cmp	r7, r4
   1c0e8:	bne	1c120 <main@@Base+0x6090>
   1c0ec:	movw	r3, #45316	; 0xb104
   1c0f0:	sub	r0, fp, #60	; 0x3c
   1c0f4:	mov	r1, r7
   1c0f8:	mov	r2, r5
   1c0fc:	str	r0, [sp]
   1c100:	mov	r0, r8
   1c104:	movt	r3, #5
   1c108:	bl	24cd4 <main@@Base+0xec44>
   1c10c:	mov	r4, r0
   1c110:	cmp	r0, r7
   1c114:	cmpne	r4, r5
   1c118:	beq	20b0c <main@@Base+0xaa7c>
   1c11c:	ldr	r6, [fp, #-60]	; 0xffffffc4
   1c120:	cmp	r6, #0
   1c124:	bne	1c134 <main@@Base+0x60a4>
   1c128:	ldrb	r0, [r8, #8]
   1c12c:	tst	r0, #2
   1c130:	beq	1ee1c <main@@Base+0x8d8c>
   1c134:	ldr	r0, [r8]
   1c138:	mov	r1, #16
   1c13c:	b	1e338 <main@@Base+0x82a8>
   1c140:	bne	1c150 <main@@Base+0x60c0>
   1c144:	ldrb	r0, [r7, #2]!
   1c148:	cmp	r0, #32
   1c14c:	bhi	1c160 <main@@Base+0x60d0>
   1c150:	mov	r0, r8
   1c154:	mov	r2, r5
   1c158:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1c15c:	mov	r7, r0
   1c160:	ldr	sl, [sp, #40]	; 0x28
   1c164:	cmp	r9, r7
   1c168:	beq	19f1c <main@@Base+0x3e8c>
   1c16c:	mov	r6, #0
   1c170:	cmp	r7, r5
   1c174:	str	r6, [fp, #-52]	; 0xffffffcc
   1c178:	str	r6, [fp, #-56]	; 0xffffffc8
   1c17c:	strh	r6, [fp, #-60]	; 0xffffffc4
   1c180:	str	r6, [sp, #56]	; 0x38
   1c184:	beq	1c1e8 <main@@Base+0x6158>
   1c188:	sub	r0, fp, #56	; 0x38
   1c18c:	mov	r1, r7
   1c190:	mov	r2, r5
   1c194:	add	r3, sp, #56	; 0x38
   1c198:	str	r0, [sp]
   1c19c:	mov	r0, r8
   1c1a0:	bl	356c0 <flatcc_json_parser_integer@@Base>
   1c1a4:	cmp	r0, r7
   1c1a8:	beq	1c1f0 <main@@Base+0x6160>
   1c1ac:	ldr	r2, [sp, #56]	; 0x38
   1c1b0:	mov	r4, r0
   1c1b4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1c1b8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1c1bc:	cmp	r2, #0
   1c1c0:	beq	1c1f8 <main@@Base+0x6168>
   1c1c4:	movw	r2, #32769	; 0x8001
   1c1c8:	subs	r2, r0, r2
   1c1cc:	sbcs	r1, r1, #0
   1c1d0:	bcc	1c220 <main@@Base+0x6190>
   1c1d4:	mov	r0, r8
   1c1d8:	mov	r1, r4
   1c1dc:	mov	r2, r5
   1c1e0:	mov	r3, #8
   1c1e4:	b	1c214 <main@@Base+0x6184>
   1c1e8:	mov	r4, r5
   1c1ec:	b	1c230 <main@@Base+0x61a0>
   1c1f0:	mov	r4, r7
   1c1f4:	b	1c230 <main@@Base+0x61a0>
   1c1f8:	subs	r2, r0, #32768	; 0x8000
   1c1fc:	sbcs	r1, r1, #0
   1c200:	bcc	1c228 <main@@Base+0x6198>
   1c204:	mov	r0, r8
   1c208:	mov	r1, r4
   1c20c:	mov	r2, r5
   1c210:	mov	r3, #7
   1c214:	bl	337ac <flatcc_json_parser_set_error@@Base>
   1c218:	mov	r4, r0
   1c21c:	b	1c230 <main@@Base+0x61a0>
   1c220:	rsb	r6, r0, #0
   1c224:	b	1c22c <main@@Base+0x619c>
   1c228:	mov	r6, r0
   1c22c:	strh	r6, [fp, #-60]	; 0xffffffc4
   1c230:	cmp	r7, r4
   1c234:	bne	1c26c <main@@Base+0x61dc>
   1c238:	movw	r3, #45228	; 0xb0ac
   1c23c:	sub	r0, fp, #60	; 0x3c
   1c240:	mov	r1, r7
   1c244:	mov	r2, r5
   1c248:	str	r0, [sp]
   1c24c:	mov	r0, r8
   1c250:	movt	r3, #5
   1c254:	bl	22c5c <main@@Base+0xcbcc>
   1c258:	mov	r4, r0
   1c25c:	cmp	r0, r7
   1c260:	cmpne	r4, r5
   1c264:	beq	20b0c <main@@Base+0xaa7c>
   1c268:	ldrh	r6, [fp, #-60]	; 0xffffffc4
   1c26c:	uxth	r0, r6
   1c270:	cmp	r0, #150	; 0x96
   1c274:	ldrbeq	r0, [r8, #8]
   1c278:	tsteq	r0, #2
   1c27c:	beq	1ee1c <main@@Base+0x8d8c>
   1c280:	ldr	r0, [r8]
   1c284:	mov	r1, #1
   1c288:	mov	r2, #2
   1c28c:	mov	r3, #2
   1c290:	bl	30b5c <flatcc_builder_table_add@@Base>
   1c294:	cmp	r0, #0
   1c298:	beq	20b0c <main@@Base+0xaa7c>
   1c29c:	strh	r6, [r0]
   1c2a0:	b	1ee1c <main@@Base+0x8d8c>
   1c2a4:	bne	1c2b4 <main@@Base+0x6224>
   1c2a8:	ldrb	r0, [r7, #2]!
   1c2ac:	cmp	r0, #32
   1c2b0:	bhi	1c2c4 <main@@Base+0x6234>
   1c2b4:	mov	r0, r8
   1c2b8:	mov	r2, r5
   1c2bc:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1c2c0:	mov	r7, r0
   1c2c4:	ldr	sl, [sp, #40]	; 0x28
   1c2c8:	cmp	r9, r7
   1c2cc:	beq	19f1c <main@@Base+0x3e8c>
   1c2d0:	mov	r0, #0
   1c2d4:	mov	r1, r7
   1c2d8:	mov	r2, r5
   1c2dc:	sub	r3, fp, #56	; 0x38
   1c2e0:	str	r0, [fp, #-56]	; 0xffffffc8
   1c2e4:	mov	r0, r8
   1c2e8:	bl	35580 <flatcc_json_parser_float@@Base>
   1c2ec:	mov	r4, r0
   1c2f0:	cmp	r7, r0
   1c2f4:	bne	1c328 <main@@Base+0x6298>
   1c2f8:	movw	r3, #45292	; 0xb0ec
   1c2fc:	sub	r0, fp, #56	; 0x38
   1c300:	mov	r1, r7
   1c304:	mov	r2, r5
   1c308:	str	r0, [sp]
   1c30c:	mov	r0, r8
   1c310:	movt	r3, #5
   1c314:	bl	24b38 <main@@Base+0xeaa8>
   1c318:	mov	r4, r0
   1c31c:	cmp	r0, r7
   1c320:	cmpne	r4, r5
   1c324:	beq	16fc4 <main@@Base+0xf34>
   1c328:	vldr	s0, [fp, #-56]	; 0xffffffc8
   1c32c:	vcmp.f32	s0, s18
   1c330:	vmrs	APSR_nzcv, fpscr
   1c334:	bne	1c344 <main@@Base+0x62b4>
   1c338:	ldrb	r0, [r8, #8]
   1c33c:	tst	r0, #2
   1c340:	beq	1ee1c <main@@Base+0x8d8c>
   1c344:	ldr	r0, [r8]
   1c348:	mov	r1, #25
   1c34c:	b	18e48 <main@@Base+0x2db8>
   1c350:	bne	1c360 <main@@Base+0x62d0>
   1c354:	ldrb	r0, [r7, #2]!
   1c358:	cmp	r0, #32
   1c35c:	bhi	1c370 <main@@Base+0x62e0>
   1c360:	mov	r0, r8
   1c364:	mov	r2, r5
   1c368:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1c36c:	mov	r7, r0
   1c370:	cmp	sl, r7
   1c374:	beq	1c3f0 <main@@Base+0x6360>
   1c378:	mov	r6, #0
   1c37c:	cmp	r7, r5
   1c380:	str	r6, [fp, #-52]	; 0xffffffcc
   1c384:	str	r6, [fp, #-56]	; 0xffffffc8
   1c388:	str	r6, [sp, #60]	; 0x3c
   1c38c:	str	r6, [sp, #56]	; 0x38
   1c390:	str	r6, [fp, #-60]	; 0xffffffc4
   1c394:	beq	1c468 <main@@Base+0x63d8>
   1c398:	sub	r0, fp, #56	; 0x38
   1c39c:	mov	r1, r7
   1c3a0:	mov	r2, r5
   1c3a4:	sub	r3, fp, #60	; 0x3c
   1c3a8:	str	r0, [sp]
   1c3ac:	mov	r0, r8
   1c3b0:	bl	356c0 <flatcc_json_parser_integer@@Base>
   1c3b4:	cmp	r0, r7
   1c3b8:	beq	1c4a0 <main@@Base+0x6410>
   1c3bc:	sub	r9, fp, #60	; 0x3c
   1c3c0:	mov	r4, r0
   1c3c4:	ldm	r9, {r0, r6, r9}
   1c3c8:	cmp	r0, #0
   1c3cc:	beq	1c4b0 <main@@Base+0x6420>
   1c3d0:	subs	r0, r6, #1
   1c3d4:	sbcs	r0, r9, #-2147483648	; 0x80000000
   1c3d8:	bcc	1c55c <main@@Base+0x64cc>
   1c3dc:	mov	r0, r8
   1c3e0:	mov	r1, r4
   1c3e4:	mov	r2, r5
   1c3e8:	mov	r3, #8
   1c3ec:	b	1c4c8 <main@@Base+0x6438>
   1c3f0:	add	r4, r9, #16
   1c3f4:	mov	r1, #8
   1c3f8:	mov	r2, #-268435456	; 0xf0000000
   1c3fc:	sub	r0, r5, r4
   1c400:	cmp	r0, #8
   1c404:	movcc	r1, r0
   1c408:	add	r1, r2, r1, lsl #28
   1c40c:	asr	r1, r1, #28
   1c410:	cmp	r1, #0
   1c414:	blt	1cec0 <main@@Base+0x6e30>
   1c418:	ldrb	r1, [r4]
   1c41c:	cmp	r1, #97	; 0x61
   1c420:	bne	1cec0 <main@@Base+0x6e30>
   1c424:	ldr	sl, [sp, #40]	; 0x28
   1c428:	cmp	r0, #2
   1c42c:	blt	1ee08 <main@@Base+0x8d78>
   1c430:	ldr	r2, [sp, #32]
   1c434:	mov	r1, r9
   1c438:	ldrb	r0, [r1, #17]!
   1c43c:	ldr	r2, [r2]
   1c440:	cmp	r2, #0
   1c444:	beq	1c474 <main@@Base+0x63e4>
   1c448:	cmp	r0, #33	; 0x21
   1c44c:	bcc	1c458 <main@@Base+0x63c8>
   1c450:	cmp	r0, #58	; 0x3a
   1c454:	bne	1ee08 <main@@Base+0x8d78>
   1c458:	ldr	r0, [sp, #32]
   1c45c:	mov	r2, #0
   1c460:	str	r2, [r0]
   1c464:	b	1c480 <main@@Base+0x63f0>
   1c468:	mov	r9, #0
   1c46c:	mov	r4, r5
   1c470:	b	1c56c <main@@Base+0x64dc>
   1c474:	cmp	r0, #34	; 0x22
   1c478:	bne	1ee08 <main@@Base+0x8d78>
   1c47c:	add	r1, r9, #18
   1c480:	sub	r0, r5, r1
   1c484:	cmp	r0, #2
   1c488:	blt	1c6f0 <main@@Base+0x6660>
   1c48c:	ldrb	r0, [r1]
   1c490:	cmp	r0, #32
   1c494:	bls	1c6dc <main@@Base+0x664c>
   1c498:	mov	r7, r1
   1c49c:	b	1c700 <main@@Base+0x6670>
   1c4a0:	mov	r6, #0
   1c4a4:	mov	r9, #0
   1c4a8:	mov	r4, r7
   1c4ac:	b	1c56c <main@@Base+0x64dc>
   1c4b0:	cmn	r9, #1
   1c4b4:	bgt	1c564 <main@@Base+0x64d4>
   1c4b8:	mov	r0, r8
   1c4bc:	mov	r1, r4
   1c4c0:	mov	r2, r5
   1c4c4:	mov	r3, #7
   1c4c8:	bl	337ac <flatcc_json_parser_set_error@@Base>
   1c4cc:	mov	r4, r0
   1c4d0:	mov	r6, #0
   1c4d4:	mov	r9, #0
   1c4d8:	b	1c56c <main@@Base+0x64dc>
   1c4dc:	bne	1c4f0 <main@@Base+0x6460>
   1c4e0:	mov	r4, r1
   1c4e4:	ldrb	r0, [r4, #1]!
   1c4e8:	cmp	r0, #32
   1c4ec:	bhi	1c500 <main@@Base+0x6470>
   1c4f0:	mov	r0, r8
   1c4f4:	mov	r2, r5
   1c4f8:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1c4fc:	mov	r4, r0
   1c500:	cmp	r4, r5
   1c504:	beq	1c544 <main@@Base+0x64b4>
   1c508:	ldrb	r0, [r4]
   1c50c:	cmp	r0, #58	; 0x3a
   1c510:	bne	1c544 <main@@Base+0x64b4>
   1c514:	add	r1, r4, #1
   1c518:	sub	r0, r5, r1
   1c51c:	cmp	r0, #2
   1c520:	blt	1e1fc <main@@Base+0x816c>
   1c524:	ldrb	r0, [r1]
   1c528:	cmp	r0, #32
   1c52c:	bls	1e1e0 <main@@Base+0x8150>
   1c530:	ldr	r5, [sp, #44]	; 0x2c
   1c534:	ldr	r8, [sp, #36]	; 0x24
   1c538:	ldr	sl, [sp, #40]	; 0x28
   1c53c:	mov	r4, r1
   1c540:	b	1e20c <main@@Base+0x817c>
   1c544:	mov	r0, r8
   1c548:	mov	r1, r4
   1c54c:	mov	r2, r5
   1c550:	mov	r3, #4
   1c554:	bl	337ac <flatcc_json_parser_set_error@@Base>
   1c558:	b	1e208 <main@@Base+0x8178>
   1c55c:	rsbs	r6, r6, #0
   1c560:	rsc	r9, r9, #0
   1c564:	str	r6, [sp, #56]	; 0x38
   1c568:	str	r9, [sp, #60]	; 0x3c
   1c56c:	ldr	sl, [sp, #40]	; 0x28
   1c570:	cmp	r7, r4
   1c574:	bne	1c5b0 <main@@Base+0x6520>
   1c578:	movw	r3, #45340	; 0xb11c
   1c57c:	add	r0, sp, #56	; 0x38
   1c580:	mov	r1, r7
   1c584:	mov	r2, r5
   1c588:	str	r0, [sp]
   1c58c:	mov	r0, r8
   1c590:	movt	r3, #5
   1c594:	bl	24ed4 <main@@Base+0xee44>
   1c598:	mov	r4, r0
   1c59c:	cmp	r0, r7
   1c5a0:	cmpne	r4, r5
   1c5a4:	beq	20b0c <main@@Base+0xaa7c>
   1c5a8:	ldr	r6, [sp, #56]	; 0x38
   1c5ac:	ldr	r9, [sp, #60]	; 0x3c
   1c5b0:	orrs	r0, r6, r9
   1c5b4:	bne	1c5c4 <main@@Base+0x6534>
   1c5b8:	ldrb	r0, [r8, #8]
   1c5bc:	tst	r0, #2
   1c5c0:	beq	1ee1c <main@@Base+0x8d8c>
   1c5c4:	ldr	r0, [r8]
   1c5c8:	mov	r1, #18
   1c5cc:	b	1cf94 <main@@Base+0x6f04>
   1c5d0:	bne	1c5e0 <main@@Base+0x6550>
   1c5d4:	ldrb	r0, [r4, #2]!
   1c5d8:	cmp	r0, #32
   1c5dc:	bhi	1c5f0 <main@@Base+0x6560>
   1c5e0:	ldr	r0, [sp, #36]	; 0x24
   1c5e4:	mov	r2, r5
   1c5e8:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1c5ec:	mov	r4, r0
   1c5f0:	cmp	r8, r4
   1c5f4:	beq	1c654 <main@@Base+0x65c4>
   1c5f8:	ldr	r8, [sp, #36]	; 0x24
   1c5fc:	mov	r0, #0
   1c600:	mov	r1, #0
   1c604:	str	r0, [sp, #52]	; 0x34
   1c608:	ldr	r0, [r8]
   1c60c:	bl	2f88c <flatcc_builder_start_table@@Base>
   1c610:	cmp	r0, #0
   1c614:	bne	1c690 <main@@Base+0x6600>
   1c618:	cmp	r4, r5
   1c61c:	beq	1c664 <main@@Base+0x65d4>
   1c620:	ldrb	r0, [r4]
   1c624:	cmp	r0, #123	; 0x7b
   1c628:	bne	1c664 <main@@Base+0x65d4>
   1c62c:	add	r1, r4, #1
   1c630:	sub	r0, r5, r1
   1c634:	cmp	r0, #2
   1c638:	blt	1e81c <main@@Base+0x878c>
   1c63c:	ldrb	r0, [r1]
   1c640:	cmp	r0, #32
   1c644:	bls	1e808 <main@@Base+0x8778>
   1c648:	ldr	r5, [sp, #44]	; 0x2c
   1c64c:	mov	r4, r1
   1c650:	b	1e82c <main@@Base+0x879c>
   1c654:	ldr	r0, [sp, #36]	; 0x24
   1c658:	mov	r1, r8
   1c65c:	mov	r8, r0
   1c660:	b	1ee10 <main@@Base+0x8d80>
   1c664:	mov	r0, r8
   1c668:	mov	r1, r4
   1c66c:	mov	r2, r5
   1c670:	mov	r3, #21
   1c674:	bl	337ac <flatcc_json_parser_set_error@@Base>
   1c678:	mov	r4, r0
   1c67c:	ldr	r0, [sp, #28]
   1c680:	ldr	r0, [r0]
   1c684:	cmp	r0, #0
   1c688:	beq	1c6c0 <main@@Base+0x6630>
   1c68c:	ldr	sl, [sp, #40]	; 0x28
   1c690:	mov	r0, r8
   1c694:	mov	r1, r4
   1c698:	mov	r2, r5
   1c69c:	mov	r3, #33	; 0x21
   1c6a0:	bl	337ac <flatcc_json_parser_set_error@@Base>
   1c6a4:	mov	r4, r0
   1c6a8:	ldr	r0, [sp, #52]	; 0x34
   1c6ac:	cmp	r0, #0
   1c6b0:	beq	16fc4 <main@@Base+0xf34>
   1c6b4:	ldr	r0, [r8]
   1c6b8:	mov	r1, #34	; 0x22
   1c6bc:	b	19718 <main@@Base+0x3688>
   1c6c0:	ldr	r0, [r8]
   1c6c4:	bl	3021c <flatcc_builder_end_table@@Base>
   1c6c8:	ldr	sl, [sp, #40]	; 0x28
   1c6cc:	cmp	r0, #0
   1c6d0:	str	r0, [sp, #52]	; 0x34
   1c6d4:	bne	1c6b4 <main@@Base+0x6624>
   1c6d8:	b	1c690 <main@@Base+0x6600>
   1c6dc:	bne	1c6f0 <main@@Base+0x6660>
   1c6e0:	mov	r7, r1
   1c6e4:	ldrb	r0, [r7, #1]!
   1c6e8:	cmp	r0, #32
   1c6ec:	bhi	1c700 <main@@Base+0x6670>
   1c6f0:	mov	r0, r8
   1c6f4:	mov	r2, r5
   1c6f8:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1c6fc:	mov	r7, r0
   1c700:	cmp	r7, r5
   1c704:	beq	1c744 <main@@Base+0x66b4>
   1c708:	ldrb	r0, [r7]
   1c70c:	cmp	r0, #58	; 0x3a
   1c710:	bne	1c744 <main@@Base+0x66b4>
   1c714:	add	r1, r7, #1
   1c718:	sub	r0, r5, r1
   1c71c:	cmp	r0, #2
   1c720:	blt	1e63c <main@@Base+0x85ac>
   1c724:	ldrb	r0, [r1]
   1c728:	cmp	r0, #32
   1c72c:	bls	1e620 <main@@Base+0x8590>
   1c730:	ldr	r5, [sp, #44]	; 0x2c
   1c734:	ldr	r8, [sp, #36]	; 0x24
   1c738:	ldr	sl, [sp, #40]	; 0x28
   1c73c:	mov	r7, r1
   1c740:	b	1e64c <main@@Base+0x85bc>
   1c744:	mov	r0, r8
   1c748:	mov	r1, r7
   1c74c:	mov	r2, r5
   1c750:	mov	r3, #4
   1c754:	bl	337ac <flatcc_json_parser_set_error@@Base>
   1c758:	b	1e648 <main@@Base+0x85b8>
   1c75c:	bne	1c76c <main@@Base+0x66dc>
   1c760:	ldrb	r0, [r4, #2]!
   1c764:	cmp	r0, #32
   1c768:	bhi	1c77c <main@@Base+0x66ec>
   1c76c:	mov	r0, r8
   1c770:	mov	r2, r5
   1c774:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1c778:	mov	r4, r0
   1c77c:	cmp	r7, r4
   1c780:	beq	1e268 <main@@Base+0x81d8>
   1c784:	ldr	r0, [r8]
   1c788:	bl	2f54c <flatcc_builder_start_offset_vector@@Base>
   1c78c:	cmp	r0, #0
   1c790:	bne	16fc4 <main@@Base+0xf34>
   1c794:	cmp	r4, r5
   1c798:	beq	1c7d4 <main@@Base+0x6744>
   1c79c:	ldrb	r0, [r4]
   1c7a0:	cmp	r0, #91	; 0x5b
   1c7a4:	bne	1c7d4 <main@@Base+0x6744>
   1c7a8:	add	r1, r4, #1
   1c7ac:	sub	r0, r5, r1
   1c7b0:	cmp	r0, #2
   1c7b4:	blt	1d2d8 <main@@Base+0x7248>
   1c7b8:	ldrb	r0, [r1]
   1c7bc:	cmp	r0, #32
   1c7c0:	bls	1d2c0 <main@@Base+0x7230>
   1c7c4:	ldr	r5, [sp, #44]	; 0x2c
   1c7c8:	ldr	r8, [sp, #36]	; 0x24
   1c7cc:	mov	r4, r1
   1c7d0:	b	1d2e8 <main@@Base+0x7258>
   1c7d4:	mov	r0, r8
   1c7d8:	mov	r1, r4
   1c7dc:	mov	r2, r5
   1c7e0:	mov	r3, #22
   1c7e4:	bl	337ac <flatcc_json_parser_set_error@@Base>
   1c7e8:	mov	r4, r0
   1c7ec:	ldr	r0, [r8]
   1c7f0:	bl	2f618 <flatcc_builder_end_offset_vector@@Base>
   1c7f4:	cmp	r0, #0
   1c7f8:	str	r0, [sp, #52]	; 0x34
   1c7fc:	beq	16fc4 <main@@Base+0xf34>
   1c800:	ldr	r0, [r8]
   1c804:	mov	r1, #11
   1c808:	b	19718 <main@@Base+0x3688>
   1c80c:	bne	1c81c <main@@Base+0x678c>
   1c810:	ldrb	r0, [r4, #2]!
   1c814:	cmp	r0, #32
   1c818:	bhi	1c82c <main@@Base+0x679c>
   1c81c:	mov	r0, r8
   1c820:	mov	r2, r5
   1c824:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1c828:	mov	r4, r0
   1c82c:	cmp	r4, r5
   1c830:	mov	r2, r5
   1c834:	beq	1c884 <main@@Base+0x67f4>
   1c838:	ldrb	r0, [r4]
   1c83c:	cmp	r0, #93	; 0x5d
   1c840:	bne	1c880 <main@@Base+0x67f0>
   1c844:	add	r1, r4, #1
   1c848:	sub	r0, r5, r1
   1c84c:	cmp	r0, #2
   1c850:	blt	205e0 <main@@Base+0xa550>
   1c854:	ldrb	r0, [r1]
   1c858:	cmp	r0, #32
   1c85c:	bhi	1da94 <main@@Base+0x7a04>
   1c860:	ldr	r5, [sp, #44]	; 0x2c
   1c864:	ldr	r8, [sp, #36]	; 0x24
   1c868:	ldr	sl, [sp, #40]	; 0x28
   1c86c:	bne	205e0 <main@@Base+0xa550>
   1c870:	ldrb	r0, [r4, #2]!
   1c874:	cmp	r0, #32
   1c878:	bhi	1c000 <main@@Base+0x5f70>
   1c87c:	b	205e0 <main@@Base+0xa550>
   1c880:	mov	r2, r4
   1c884:	mov	r1, r2
   1c888:	mov	r0, r8
   1c88c:	mov	r2, r5
   1c890:	add	r3, sp, #52	; 0x34
   1c894:	bl	35be8 <flatcc_json_parser_build_string@@Base>
   1c898:	mov	r4, r0
   1c89c:	ldr	r0, [sp, #52]	; 0x34
   1c8a0:	cmp	r0, #0
   1c8a4:	beq	16fc4 <main@@Base+0xf34>
   1c8a8:	ldr	r0, [r8]
   1c8ac:	mov	r1, #1
   1c8b0:	bl	2ef08 <flatcc_builder_extend_offset_vector@@Base>
   1c8b4:	cmp	r0, #0
   1c8b8:	beq	16fc4 <main@@Base+0xf34>
   1c8bc:	ldr	r1, [sp, #52]	; 0x34
   1c8c0:	str	r1, [r0]
   1c8c4:	sub	r0, r5, r4
   1c8c8:	cmp	r0, #2
   1c8cc:	blt	1c8f8 <main@@Base+0x6868>
   1c8d0:	ldrb	r0, [r4]
   1c8d4:	cmp	r0, #32
   1c8d8:	bls	1c8e4 <main@@Base+0x6854>
   1c8dc:	mov	r2, r4
   1c8e0:	b	1c90c <main@@Base+0x687c>
   1c8e4:	bne	1c8f8 <main@@Base+0x6868>
   1c8e8:	mov	r2, r4
   1c8ec:	ldrb	r0, [r2, #1]!
   1c8f0:	cmp	r0, #32
   1c8f4:	bhi	1c90c <main@@Base+0x687c>
   1c8f8:	mov	r0, r8
   1c8fc:	mov	r1, r4
   1c900:	mov	r2, r5
   1c904:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1c908:	mov	r2, r0
   1c90c:	cmp	r2, r5
   1c910:	beq	1da14 <main@@Base+0x7984>
   1c914:	ldrb	r0, [r2]
   1c918:	cmp	r0, #44	; 0x2c
   1c91c:	bne	1da64 <main@@Base+0x79d4>
   1c920:	add	r1, r2, #1
   1c924:	sub	r0, r5, r1
   1c928:	cmp	r0, #2
   1c92c:	blt	1c954 <main@@Base+0x68c4>
   1c930:	ldrb	r0, [r1]
   1c934:	cmp	r0, #32
   1c938:	bls	1c944 <main@@Base+0x68b4>
   1c93c:	mov	r2, r1
   1c940:	b	1c964 <main@@Base+0x68d4>
   1c944:	bne	1c954 <main@@Base+0x68c4>
   1c948:	ldrb	r0, [r2, #2]!
   1c94c:	cmp	r0, #32
   1c950:	bhi	1c964 <main@@Base+0x68d4>
   1c954:	mov	r0, r8
   1c958:	mov	r2, r5
   1c95c:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1c960:	mov	r2, r0
   1c964:	cmp	r2, r5
   1c968:	beq	1daa8 <main@@Base+0x7a18>
   1c96c:	ldrb	r0, [r2]
   1c970:	cmp	r0, #93	; 0x5d
   1c974:	bne	1c884 <main@@Base+0x67f4>
   1c978:	b	1da74 <main@@Base+0x79e4>
   1c97c:	bne	1c98c <main@@Base+0x68fc>
   1c980:	ldrb	r0, [r7, #2]!
   1c984:	cmp	r0, #32
   1c988:	bhi	1c99c <main@@Base+0x690c>
   1c98c:	mov	r0, r8
   1c990:	mov	r2, r5
   1c994:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1c998:	mov	r7, r0
   1c99c:	cmp	r7, r5
   1c9a0:	mov	r4, r5
   1c9a4:	beq	1f98c <main@@Base+0x98fc>
   1c9a8:	ldrb	r0, [r7]
   1c9ac:	cmp	r0, #93	; 0x5d
   1c9b0:	bne	1c9f0 <main@@Base+0x6960>
   1c9b4:	add	r1, r7, #1
   1c9b8:	sub	r0, r5, r1
   1c9bc:	cmp	r0, #2
   1c9c0:	blt	2069c <main@@Base+0xa60c>
   1c9c4:	ldrb	r0, [r1]
   1c9c8:	cmp	r0, #32
   1c9cc:	bhi	20250 <main@@Base+0xa1c0>
   1c9d0:	ldr	r5, [sp, #44]	; 0x2c
   1c9d4:	ldr	r8, [sp, #36]	; 0x24
   1c9d8:	ldr	sl, [sp, #40]	; 0x28
   1c9dc:	bne	2069c <main@@Base+0xa60c>
   1c9e0:	ldrb	r0, [r7, #2]!
   1c9e4:	cmp	r0, #32
   1c9e8:	bhi	1c0b8 <main@@Base+0x6028>
   1c9ec:	b	2069c <main@@Base+0xa60c>
   1c9f0:	mov	r4, r7
   1c9f4:	b	1f98c <main@@Base+0x98fc>
   1c9f8:	bne	1ca08 <main@@Base+0x6978>
   1c9fc:	ldrb	r0, [r4, #2]!
   1ca00:	cmp	r0, #32
   1ca04:	bhi	1ca18 <main@@Base+0x6988>
   1ca08:	mov	r0, r8
   1ca0c:	mov	r2, r5
   1ca10:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1ca14:	mov	r4, r0
   1ca18:	cmp	r7, r4
   1ca1c:	beq	1e268 <main@@Base+0x81d8>
   1ca20:	mov	r0, #0
   1ca24:	mov	r1, #3
   1ca28:	str	r0, [sp, #52]	; 0x34
   1ca2c:	ldr	r0, [r8]
   1ca30:	bl	2f88c <flatcc_builder_start_table@@Base>
   1ca34:	cmp	r0, #0
   1ca38:	bne	1caa8 <main@@Base+0x6a18>
   1ca3c:	cmp	r4, r5
   1ca40:	beq	1ca74 <main@@Base+0x69e4>
   1ca44:	ldrb	r0, [r4]
   1ca48:	cmp	r0, #123	; 0x7b
   1ca4c:	bne	1ca74 <main@@Base+0x69e4>
   1ca50:	add	r1, r4, #1
   1ca54:	sub	r0, r5, r1
   1ca58:	cmp	r0, #2
   1ca5c:	blt	1efd0 <main@@Base+0x8f40>
   1ca60:	ldrb	r0, [r1]
   1ca64:	cmp	r0, #32
   1ca68:	bls	1efc0 <main@@Base+0x8f30>
   1ca6c:	mov	r4, r1
   1ca70:	b	1efe0 <main@@Base+0x8f50>
   1ca74:	mov	r0, r8
   1ca78:	mov	r1, r4
   1ca7c:	mov	r2, r5
   1ca80:	mov	r3, #21
   1ca84:	bl	337ac <flatcc_json_parser_set_error@@Base>
   1ca88:	mov	r4, r0
   1ca8c:	ldr	r0, [sp, #28]
   1ca90:	ldr	r0, [r0]
   1ca94:	cmp	r0, #0
   1ca98:	beq	1cad8 <main@@Base+0x6a48>
   1ca9c:	ldr	r5, [sp, #44]	; 0x2c
   1caa0:	ldr	r8, [sp, #36]	; 0x24
   1caa4:	ldr	sl, [sp, #40]	; 0x28
   1caa8:	mov	r0, r8
   1caac:	mov	r1, r4
   1cab0:	mov	r2, r5
   1cab4:	mov	r3, #33	; 0x21
   1cab8:	bl	337ac <flatcc_json_parser_set_error@@Base>
   1cabc:	mov	r4, r0
   1cac0:	ldr	r0, [sp, #52]	; 0x34
   1cac4:	cmp	r0, #0
   1cac8:	beq	16fc4 <main@@Base+0xf34>
   1cacc:	ldr	r0, [r8]
   1cad0:	mov	r1, #14
   1cad4:	b	19718 <main@@Base+0x3688>
   1cad8:	ldr	r0, [sp, #36]	; 0x24
   1cadc:	ldr	r0, [r0]
   1cae0:	bl	3021c <flatcc_builder_end_table@@Base>
   1cae4:	cmp	r0, #0
   1cae8:	str	r0, [sp, #52]	; 0x34
   1caec:	beq	1ca9c <main@@Base+0x6a0c>
   1caf0:	ldr	r5, [sp, #44]	; 0x2c
   1caf4:	ldr	r8, [sp, #36]	; 0x24
   1caf8:	ldr	sl, [sp, #40]	; 0x28
   1cafc:	b	1cacc <main@@Base+0x6a3c>
   1cb00:	bne	1cb10 <main@@Base+0x6a80>
   1cb04:	ldrb	r0, [r4, #2]!
   1cb08:	cmp	r0, #32
   1cb0c:	bhi	1cb20 <main@@Base+0x6a90>
   1cb10:	mov	r0, r8
   1cb14:	mov	r2, r5
   1cb18:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1cb1c:	mov	r4, r0
   1cb20:	cmp	r7, r4
   1cb24:	beq	1e268 <main@@Base+0x81d8>
   1cb28:	ldr	r0, [r8]
   1cb2c:	mov	r1, #1
   1cb30:	mov	r2, #1
   1cb34:	mvn	r3, #0
   1cb38:	bl	2f4c0 <flatcc_builder_start_vector@@Base>
   1cb3c:	cmp	r0, #0
   1cb40:	bne	16fc4 <main@@Base+0xf34>
   1cb44:	cmp	r4, r5
   1cb48:	beq	1cb84 <main@@Base+0x6af4>
   1cb4c:	ldrb	r0, [r4]
   1cb50:	cmp	r0, #91	; 0x5b
   1cb54:	bne	1cb84 <main@@Base+0x6af4>
   1cb58:	add	r1, r4, #1
   1cb5c:	sub	r0, r5, r1
   1cb60:	cmp	r0, #2
   1cb64:	blt	1d604 <main@@Base+0x7574>
   1cb68:	ldrb	r0, [r1]
   1cb6c:	cmp	r0, #32
   1cb70:	bls	1d5ec <main@@Base+0x755c>
   1cb74:	ldr	r5, [sp, #44]	; 0x2c
   1cb78:	ldr	r8, [sp, #36]	; 0x24
   1cb7c:	mov	r4, r1
   1cb80:	b	1d614 <main@@Base+0x7584>
   1cb84:	mov	r0, r8
   1cb88:	mov	r1, r4
   1cb8c:	mov	r2, r5
   1cb90:	mov	r3, #22
   1cb94:	bl	337ac <flatcc_json_parser_set_error@@Base>
   1cb98:	mov	r4, r0
   1cb9c:	ldr	r0, [r8]
   1cba0:	bl	3052c <flatcc_builder_end_vector@@Base>
   1cba4:	cmp	r0, #0
   1cba8:	str	r0, [sp, #52]	; 0x34
   1cbac:	beq	16fc4 <main@@Base+0xf34>
   1cbb0:	ldr	r0, [r8]
   1cbb4:	mov	r1, #5
   1cbb8:	b	19718 <main@@Base+0x3688>
   1cbbc:	ldr	r5, [sp, #44]	; 0x2c
   1cbc0:	ldr	r8, [sp, #36]	; 0x24
   1cbc4:	bne	1cbd4 <main@@Base+0x6b44>
   1cbc8:	ldrb	r0, [r7, #2]!
   1cbcc:	cmp	r0, #32
   1cbd0:	bhi	1cbe4 <main@@Base+0x6b54>
   1cbd4:	mov	r0, r8
   1cbd8:	mov	r2, r5
   1cbdc:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1cbe0:	mov	r7, r0
   1cbe4:	cmp	sl, r7
   1cbe8:	beq	1cc50 <main@@Base+0x6bc0>
   1cbec:	mov	r6, #0
   1cbf0:	cmp	r7, r5
   1cbf4:	str	r6, [fp, #-52]	; 0xffffffcc
   1cbf8:	str	r6, [fp, #-56]	; 0xffffffc8
   1cbfc:	str	r6, [fp, #-60]	; 0xffffffc4
   1cc00:	str	r6, [sp, #56]	; 0x38
   1cc04:	beq	1ccc8 <main@@Base+0x6c38>
   1cc08:	sub	r0, fp, #56	; 0x38
   1cc0c:	mov	r1, r7
   1cc10:	mov	r2, r5
   1cc14:	add	r3, sp, #56	; 0x38
   1cc18:	str	r0, [sp]
   1cc1c:	mov	r0, r8
   1cc20:	bl	356c0 <flatcc_json_parser_integer@@Base>
   1cc24:	cmp	r0, r7
   1cc28:	beq	1cd04 <main@@Base+0x6c74>
   1cc2c:	mov	r4, r0
   1cc30:	ldr	r0, [sp, #56]	; 0x38
   1cc34:	cmp	r0, #0
   1cc38:	beq	1cd0c <main@@Base+0x6c7c>
   1cc3c:	mov	r0, r8
   1cc40:	mov	r1, r4
   1cc44:	mov	r2, r5
   1cc48:	mov	r3, #8
   1cc4c:	b	1cd30 <main@@Base+0x6ca0>
   1cc50:	add	r4, r9, #16
   1cc54:	mov	r1, #8
   1cc58:	mov	r2, #-268435456	; 0xf0000000
   1cc5c:	sub	r0, r5, r4
   1cc60:	cmp	r0, #8
   1cc64:	movcc	r1, r0
   1cc68:	add	r1, r2, r1, lsl #28
   1cc6c:	asr	r1, r1, #28
   1cc70:	cmp	r1, #0
   1cc74:	blt	1cec0 <main@@Base+0x6e30>
   1cc78:	ldrb	r1, [r4]
   1cc7c:	cmp	r1, #97	; 0x61
   1cc80:	bne	1cec0 <main@@Base+0x6e30>
   1cc84:	ldr	sl, [sp, #40]	; 0x28
   1cc88:	cmp	r0, #2
   1cc8c:	blt	1ee08 <main@@Base+0x8d78>
   1cc90:	ldr	r2, [sp, #32]
   1cc94:	mov	r1, r9
   1cc98:	ldrb	r0, [r1, #17]!
   1cc9c:	ldr	r2, [r2]
   1cca0:	cmp	r2, #0
   1cca4:	beq	1ccd0 <main@@Base+0x6c40>
   1cca8:	cmp	r0, #33	; 0x21
   1ccac:	bcc	1ccb8 <main@@Base+0x6c28>
   1ccb0:	cmp	r0, #58	; 0x3a
   1ccb4:	bne	1ee08 <main@@Base+0x8d78>
   1ccb8:	ldr	r0, [sp, #32]
   1ccbc:	mov	r2, #0
   1ccc0:	str	r2, [r0]
   1ccc4:	b	1ccdc <main@@Base+0x6c4c>
   1ccc8:	mov	r4, r5
   1cccc:	b	1cd38 <main@@Base+0x6ca8>
   1ccd0:	cmp	r0, #34	; 0x22
   1ccd4:	bne	1ee08 <main@@Base+0x8d78>
   1ccd8:	add	r1, r9, #18
   1ccdc:	sub	r0, r5, r1
   1cce0:	cmp	r0, #2
   1cce4:	blt	1d0b0 <main@@Base+0x7020>
   1cce8:	ldrb	r0, [r1]
   1ccec:	cmp	r0, #32
   1ccf0:	bls	1d094 <main@@Base+0x7004>
   1ccf4:	ldr	r5, [sp, #44]	; 0x2c
   1ccf8:	ldr	r8, [sp, #36]	; 0x24
   1ccfc:	mov	r7, r1
   1cd00:	b	1d0c0 <main@@Base+0x7030>
   1cd04:	mov	r4, r7
   1cd08:	b	1cd38 <main@@Base+0x6ca8>
   1cd0c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1cd10:	cmp	r0, #0
   1cd14:	beq	1d854 <main@@Base+0x77c4>
   1cd18:	ldr	r8, [sp, #36]	; 0x24
   1cd1c:	ldr	r5, [sp, #44]	; 0x2c
   1cd20:	mov	r1, r4
   1cd24:	mov	r3, #7
   1cd28:	mov	r0, r8
   1cd2c:	mov	r2, r5
   1cd30:	bl	337ac <flatcc_json_parser_set_error@@Base>
   1cd34:	mov	r4, r0
   1cd38:	ldr	sl, [sp, #40]	; 0x28
   1cd3c:	cmp	r7, r4
   1cd40:	bne	1cd80 <main@@Base+0x6cf0>
   1cd44:	movw	r3, #45364	; 0xb134
   1cd48:	sub	r0, fp, #60	; 0x3c
   1cd4c:	mov	r1, r7
   1cd50:	mov	r2, r5
   1cd54:	str	r0, [sp]
   1cd58:	mov	r0, r8
   1cd5c:	movt	r3, #5
   1cd60:	bl	250e0 <main@@Base+0xf050>
   1cd64:	mov	r4, r0
   1cd68:	cmp	r0, r7
   1cd6c:	cmpne	r4, r5
   1cd70:	beq	20b0c <main@@Base+0xaa7c>
   1cd74:	ldr	r6, [fp, #-60]	; 0xffffffc4
   1cd78:	ldr	r8, [sp, #36]	; 0x24
   1cd7c:	ldr	sl, [sp, #40]	; 0x28
   1cd80:	cmp	r6, #0
   1cd84:	bne	1cd94 <main@@Base+0x6d04>
   1cd88:	ldrb	r0, [r8, #8]
   1cd8c:	tst	r0, #2
   1cd90:	beq	1ee1c <main@@Base+0x8d8c>
   1cd94:	ldr	r0, [r8]
   1cd98:	mov	r1, #17
   1cd9c:	b	1e338 <main@@Base+0x82a8>
   1cda0:	ldr	r5, [sp, #44]	; 0x2c
   1cda4:	ldr	r8, [sp, #36]	; 0x24
   1cda8:	bne	1cdb8 <main@@Base+0x6d28>
   1cdac:	ldrb	r0, [r7, #2]!
   1cdb0:	cmp	r0, #32
   1cdb4:	bhi	1cdc8 <main@@Base+0x6d38>
   1cdb8:	mov	r0, r8
   1cdbc:	mov	r2, r5
   1cdc0:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1cdc4:	mov	r7, r0
   1cdc8:	cmp	sl, r7
   1cdcc:	beq	1ce48 <main@@Base+0x6db8>
   1cdd0:	mov	r6, #0
   1cdd4:	cmp	r7, r5
   1cdd8:	str	r6, [fp, #-52]	; 0xffffffcc
   1cddc:	str	r6, [fp, #-56]	; 0xffffffc8
   1cde0:	str	r6, [sp, #60]	; 0x3c
   1cde4:	str	r6, [sp, #56]	; 0x38
   1cde8:	str	r6, [fp, #-60]	; 0xffffffc4
   1cdec:	beq	1cecc <main@@Base+0x6e3c>
   1cdf0:	sub	r0, fp, #56	; 0x38
   1cdf4:	mov	r1, r7
   1cdf8:	mov	r2, r5
   1cdfc:	sub	r3, fp, #60	; 0x3c
   1ce00:	str	r0, [sp]
   1ce04:	mov	r0, r8
   1ce08:	bl	356c0 <flatcc_json_parser_integer@@Base>
   1ce0c:	cmp	r0, r7
   1ce10:	beq	1cf0c <main@@Base+0x6e7c>
   1ce14:	mov	r4, r0
   1ce18:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1ce1c:	cmp	r0, #0
   1ce20:	beq	1cf1c <main@@Base+0x6e8c>
   1ce24:	mov	r0, r8
   1ce28:	mov	r1, r4
   1ce2c:	mov	r2, r5
   1ce30:	mov	r3, #8
   1ce34:	bl	337ac <flatcc_json_parser_set_error@@Base>
   1ce38:	mov	r4, r0
   1ce3c:	mov	r6, #0
   1ce40:	mov	r9, #0
   1ce44:	b	1cf2c <main@@Base+0x6e9c>
   1ce48:	add	r4, r9, #16
   1ce4c:	mov	r1, #8
   1ce50:	mov	r2, #-268435456	; 0xf0000000
   1ce54:	sub	r0, r5, r4
   1ce58:	cmp	r0, #8
   1ce5c:	movcc	r1, r0
   1ce60:	add	r1, r2, r1, lsl #28
   1ce64:	asr	r1, r1, #28
   1ce68:	cmp	r1, #0
   1ce6c:	blt	1cec0 <main@@Base+0x6e30>
   1ce70:	ldrb	r1, [r4]
   1ce74:	cmp	r1, #97	; 0x61
   1ce78:	bne	1cec0 <main@@Base+0x6e30>
   1ce7c:	ldr	sl, [sp, #40]	; 0x28
   1ce80:	cmp	r0, #2
   1ce84:	blt	1ee08 <main@@Base+0x8d78>
   1ce88:	ldr	r2, [sp, #32]
   1ce8c:	mov	r1, r9
   1ce90:	ldrb	r0, [r1, #17]!
   1ce94:	ldr	r2, [r2]
   1ce98:	cmp	r2, #0
   1ce9c:	beq	1ced8 <main@@Base+0x6e48>
   1cea0:	cmp	r0, #33	; 0x21
   1cea4:	bcc	1ceb0 <main@@Base+0x6e20>
   1cea8:	cmp	r0, #58	; 0x3a
   1ceac:	bne	1ee08 <main@@Base+0x8d78>
   1ceb0:	ldr	r0, [sp, #32]
   1ceb4:	mov	r2, #0
   1ceb8:	str	r2, [r0]
   1cebc:	b	1cee4 <main@@Base+0x6e54>
   1cec0:	mov	r0, r8
   1cec4:	mov	r1, r4
   1cec8:	b	1a4c4 <main@@Base+0x4434>
   1cecc:	mov	r9, #0
   1ced0:	mov	r4, r5
   1ced4:	b	1cf2c <main@@Base+0x6e9c>
   1ced8:	cmp	r0, #34	; 0x22
   1cedc:	bne	1ee08 <main@@Base+0x8d78>
   1cee0:	add	r1, r9, #18
   1cee4:	sub	r0, r5, r1
   1cee8:	cmp	r0, #2
   1ceec:	blt	1d134 <main@@Base+0x70a4>
   1cef0:	ldrb	r0, [r1]
   1cef4:	cmp	r0, #32
   1cef8:	bls	1d118 <main@@Base+0x7088>
   1cefc:	ldr	r5, [sp, #44]	; 0x2c
   1cf00:	ldr	r8, [sp, #36]	; 0x24
   1cf04:	mov	r7, r1
   1cf08:	b	1d144 <main@@Base+0x70b4>
   1cf0c:	mov	r6, #0
   1cf10:	mov	r9, #0
   1cf14:	mov	r4, r7
   1cf18:	b	1cf2c <main@@Base+0x6e9c>
   1cf1c:	ldr	r6, [fp, #-56]	; 0xffffffc8
   1cf20:	ldr	r9, [fp, #-52]	; 0xffffffcc
   1cf24:	str	r9, [sp, #60]	; 0x3c
   1cf28:	str	r6, [sp, #56]	; 0x38
   1cf2c:	ldr	sl, [sp, #40]	; 0x28
   1cf30:	cmp	r7, r4
   1cf34:	bne	1cf78 <main@@Base+0x6ee8>
   1cf38:	movw	r3, #45388	; 0xb14c
   1cf3c:	add	r0, sp, #56	; 0x38
   1cf40:	mov	r1, r7
   1cf44:	mov	r2, r5
   1cf48:	str	r0, [sp]
   1cf4c:	mov	r0, r8
   1cf50:	movt	r3, #5
   1cf54:	bl	252cc <main@@Base+0xf23c>
   1cf58:	mov	r4, r0
   1cf5c:	cmp	r0, r7
   1cf60:	cmpne	r4, r5
   1cf64:	beq	20b0c <main@@Base+0xaa7c>
   1cf68:	ldr	r6, [sp, #56]	; 0x38
   1cf6c:	ldr	r9, [sp, #60]	; 0x3c
   1cf70:	ldr	r8, [sp, #36]	; 0x24
   1cf74:	ldr	sl, [sp, #40]	; 0x28
   1cf78:	orrs	r0, r6, r9
   1cf7c:	bne	1cf8c <main@@Base+0x6efc>
   1cf80:	ldrb	r0, [r8, #8]
   1cf84:	tst	r0, #2
   1cf88:	beq	1ee1c <main@@Base+0x8d8c>
   1cf8c:	ldr	r0, [r8]
   1cf90:	mov	r1, #19
   1cf94:	mov	r2, #8
   1cf98:	mov	r3, #8
   1cf9c:	bl	30b5c <flatcc_builder_table_add@@Base>
   1cfa0:	cmp	r0, #0
   1cfa4:	beq	20b0c <main@@Base+0xaa7c>
   1cfa8:	stm	r0, {r6, r9}
   1cfac:	b	1ee1c <main@@Base+0x8d8c>
   1cfb0:	ldr	r5, [sp, #44]	; 0x2c
   1cfb4:	ldr	r8, [sp, #36]	; 0x24
   1cfb8:	ldr	sl, [sp, #40]	; 0x28
   1cfbc:	bne	1cfcc <main@@Base+0x6f3c>
   1cfc0:	ldrb	r0, [r4, #2]!
   1cfc4:	cmp	r0, #32
   1cfc8:	bhi	1a4f0 <main@@Base+0x4460>
   1cfcc:	mov	r0, r8
   1cfd0:	mov	r2, r5
   1cfd4:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1cfd8:	b	1a4ec <main@@Base+0x445c>
   1cfdc:	ldr	r5, [sp, #44]	; 0x2c
   1cfe0:	ldr	r8, [sp, #36]	; 0x24
   1cfe4:	ldr	sl, [sp, #40]	; 0x28
   1cfe8:	bne	1cff8 <main@@Base+0x6f68>
   1cfec:	ldrb	r0, [r4, #2]!
   1cff0:	cmp	r0, #32
   1cff4:	bhi	1d008 <main@@Base+0x6f78>
   1cff8:	mov	r0, r8
   1cffc:	mov	r2, r5
   1d000:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1d004:	mov	r4, r0
   1d008:	cmp	r7, r4
   1d00c:	beq	1e268 <main@@Base+0x81d8>
   1d010:	ldr	r0, [r8]
   1d014:	bl	2f54c <flatcc_builder_start_offset_vector@@Base>
   1d018:	cmp	r0, #0
   1d01c:	bne	16fc4 <main@@Base+0xf34>
   1d020:	cmp	r4, r5
   1d024:	beq	1d05c <main@@Base+0x6fcc>
   1d028:	ldrb	r0, [r4]
   1d02c:	cmp	r0, #91	; 0x5b
   1d030:	bne	1d05c <main@@Base+0x6fcc>
   1d034:	add	r1, r4, #1
   1d038:	sub	r0, r5, r1
   1d03c:	cmp	r0, #2
   1d040:	blt	1d880 <main@@Base+0x77f0>
   1d044:	ldrb	r0, [r1]
   1d048:	cmp	r0, #32
   1d04c:	bls	1d868 <main@@Base+0x77d8>
   1d050:	ldr	r5, [sp, #44]	; 0x2c
   1d054:	mov	r4, r1
   1d058:	b	1d890 <main@@Base+0x7800>
   1d05c:	mov	r0, r8
   1d060:	mov	r1, r4
   1d064:	mov	r2, r5
   1d068:	mov	r3, #22
   1d06c:	bl	337ac <flatcc_json_parser_set_error@@Base>
   1d070:	mov	r4, r0
   1d074:	ldr	r0, [r8]
   1d078:	bl	2f618 <flatcc_builder_end_offset_vector@@Base>
   1d07c:	cmp	r0, #0
   1d080:	str	r0, [sp, #52]	; 0x34
   1d084:	beq	16fc4 <main@@Base+0xf34>
   1d088:	ldr	r0, [r8]
   1d08c:	mov	r1, #10
   1d090:	b	19718 <main@@Base+0x3688>
   1d094:	ldr	r5, [sp, #44]	; 0x2c
   1d098:	ldr	r8, [sp, #36]	; 0x24
   1d09c:	bne	1d0b0 <main@@Base+0x7020>
   1d0a0:	mov	r7, r1
   1d0a4:	ldrb	r0, [r7, #1]!
   1d0a8:	cmp	r0, #32
   1d0ac:	bhi	1d0c0 <main@@Base+0x7030>
   1d0b0:	mov	r0, r8
   1d0b4:	mov	r2, r5
   1d0b8:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1d0bc:	mov	r7, r0
   1d0c0:	cmp	r7, r5
   1d0c4:	beq	1d100 <main@@Base+0x7070>
   1d0c8:	ldrb	r0, [r7]
   1d0cc:	cmp	r0, #58	; 0x3a
   1d0d0:	bne	1d100 <main@@Base+0x7070>
   1d0d4:	add	r1, r7, #1
   1d0d8:	sub	r0, r5, r1
   1d0dc:	cmp	r0, #2
   1d0e0:	blt	1ec28 <main@@Base+0x8b98>
   1d0e4:	ldrb	r0, [r1]
   1d0e8:	cmp	r0, #32
   1d0ec:	bls	1ec10 <main@@Base+0x8b80>
   1d0f0:	ldr	r5, [sp, #44]	; 0x2c
   1d0f4:	ldr	r8, [sp, #36]	; 0x24
   1d0f8:	mov	r7, r1
   1d0fc:	b	1ec38 <main@@Base+0x8ba8>
   1d100:	mov	r0, r8
   1d104:	mov	r1, r7
   1d108:	mov	r2, r5
   1d10c:	mov	r3, #4
   1d110:	bl	337ac <flatcc_json_parser_set_error@@Base>
   1d114:	b	1ec34 <main@@Base+0x8ba4>
   1d118:	ldr	r5, [sp, #44]	; 0x2c
   1d11c:	ldr	r8, [sp, #36]	; 0x24
   1d120:	bne	1d134 <main@@Base+0x70a4>
   1d124:	mov	r7, r1
   1d128:	ldrb	r0, [r7, #1]!
   1d12c:	cmp	r0, #32
   1d130:	bhi	1d144 <main@@Base+0x70b4>
   1d134:	mov	r0, r8
   1d138:	mov	r2, r5
   1d13c:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1d140:	mov	r7, r0
   1d144:	cmp	r7, r5
   1d148:	beq	1d184 <main@@Base+0x70f4>
   1d14c:	ldrb	r0, [r7]
   1d150:	cmp	r0, #58	; 0x3a
   1d154:	bne	1d184 <main@@Base+0x70f4>
   1d158:	add	r1, r7, #1
   1d15c:	sub	r0, r5, r1
   1d160:	cmp	r0, #2
   1d164:	blt	1ed74 <main@@Base+0x8ce4>
   1d168:	ldrb	r0, [r1]
   1d16c:	cmp	r0, #32
   1d170:	bls	1ed5c <main@@Base+0x8ccc>
   1d174:	ldr	r5, [sp, #44]	; 0x2c
   1d178:	ldr	r8, [sp, #36]	; 0x24
   1d17c:	mov	r7, r1
   1d180:	b	1ed84 <main@@Base+0x8cf4>
   1d184:	mov	r0, r8
   1d188:	mov	r1, r7
   1d18c:	mov	r2, r5
   1d190:	mov	r3, #4
   1d194:	bl	337ac <flatcc_json_parser_set_error@@Base>
   1d198:	b	1ed80 <main@@Base+0x8cf0>
   1d19c:	ldr	r5, [sp, #44]	; 0x2c
   1d1a0:	ldr	r8, [sp, #36]	; 0x24
   1d1a4:	ldr	sl, [sp, #40]	; 0x28
   1d1a8:	bne	1d1b8 <main@@Base+0x7128>
   1d1ac:	ldrb	r0, [r7, #2]!
   1d1b0:	cmp	r0, #32
   1d1b4:	bhi	1d1c8 <main@@Base+0x7138>
   1d1b8:	mov	r0, r8
   1d1bc:	mov	r2, r5
   1d1c0:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1d1c4:	mov	r7, r0
   1d1c8:	cmp	r4, r7
   1d1cc:	beq	1ee08 <main@@Base+0x8d78>
   1d1d0:	mov	r6, #0
   1d1d4:	cmp	r7, r5
   1d1d8:	str	r6, [fp, #-52]	; 0xffffffcc
   1d1dc:	str	r6, [fp, #-56]	; 0xffffffc8
   1d1e0:	str	r6, [fp, #-60]	; 0xffffffc4
   1d1e4:	str	r6, [sp, #56]	; 0x38
   1d1e8:	beq	1d248 <main@@Base+0x71b8>
   1d1ec:	sub	r0, fp, #56	; 0x38
   1d1f0:	mov	r1, r7
   1d1f4:	mov	r2, r5
   1d1f8:	add	r3, sp, #56	; 0x38
   1d1fc:	str	r0, [sp]
   1d200:	mov	r0, r8
   1d204:	bl	356c0 <flatcc_json_parser_integer@@Base>
   1d208:	cmp	r0, r7
   1d20c:	beq	1d250 <main@@Base+0x71c0>
   1d210:	ldr	r2, [sp, #56]	; 0x38
   1d214:	mov	r4, r0
   1d218:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1d21c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1d220:	cmp	r2, #0
   1d224:	beq	1d258 <main@@Base+0x71c8>
   1d228:	subs	r2, r0, #-2147483647	; 0x80000001
   1d22c:	sbcs	r1, r1, #0
   1d230:	bcc	1d288 <main@@Base+0x71f8>
   1d234:	ldr	r8, [sp, #36]	; 0x24
   1d238:	ldr	r5, [sp, #44]	; 0x2c
   1d23c:	mov	r1, r4
   1d240:	mov	r3, #8
   1d244:	b	1d274 <main@@Base+0x71e4>
   1d248:	mov	r4, r5
   1d24c:	b	1e2d8 <main@@Base+0x8248>
   1d250:	mov	r4, r7
   1d254:	b	1e2d8 <main@@Base+0x8248>
   1d258:	subs	r2, r0, #-2147483648	; 0x80000000
   1d25c:	sbcs	r1, r1, #0
   1d260:	bcc	1e2c4 <main@@Base+0x8234>
   1d264:	ldr	r8, [sp, #36]	; 0x24
   1d268:	ldr	r5, [sp, #44]	; 0x2c
   1d26c:	mov	r1, r4
   1d270:	mov	r3, #7
   1d274:	mov	r0, r8
   1d278:	mov	r2, r5
   1d27c:	bl	337ac <flatcc_json_parser_set_error@@Base>
   1d280:	mov	r4, r0
   1d284:	b	1e2d4 <main@@Base+0x8244>
   1d288:	rsb	r6, r0, #0
   1d28c:	b	1e2c8 <main@@Base+0x8238>
   1d290:	ldr	r5, [sp, #44]	; 0x2c
   1d294:	ldr	r8, [sp, #36]	; 0x24
   1d298:	ldr	sl, [sp, #40]	; 0x28
   1d29c:	bne	1d2b0 <main@@Base+0x7220>
   1d2a0:	ldrb	r0, [r4, #2]!
   1d2a4:	cmp	r0, #32
   1d2a8:	mov	r7, r4
   1d2ac:	bhi	19f44 <main@@Base+0x3eb4>
   1d2b0:	mov	r0, r8
   1d2b4:	mov	r2, r5
   1d2b8:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1d2bc:	b	19f40 <main@@Base+0x3eb0>
   1d2c0:	ldr	r5, [sp, #44]	; 0x2c
   1d2c4:	ldr	r8, [sp, #36]	; 0x24
   1d2c8:	bne	1d2d8 <main@@Base+0x7248>
   1d2cc:	ldrb	r0, [r4, #2]!
   1d2d0:	cmp	r0, #32
   1d2d4:	bhi	1d2e8 <main@@Base+0x7258>
   1d2d8:	mov	r0, r8
   1d2dc:	mov	r2, r5
   1d2e0:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1d2e4:	mov	r4, r0
   1d2e8:	cmp	r4, r5
   1d2ec:	mov	r2, r5
   1d2f0:	beq	1d354 <main@@Base+0x72c4>
   1d2f4:	ldrb	r0, [r4]
   1d2f8:	cmp	r0, #93	; 0x5d
   1d2fc:	bne	1d348 <main@@Base+0x72b8>
   1d300:	ldr	r5, [sp, #44]	; 0x2c
   1d304:	ldr	r8, [sp, #36]	; 0x24
   1d308:	ldr	sl, [sp, #40]	; 0x28
   1d30c:	add	r1, r4, #1
   1d310:	sub	r0, r5, r1
   1d314:	cmp	r0, #2
   1d318:	blt	20754 <main@@Base+0xa6c4>
   1d31c:	ldrb	r0, [r1]
   1d320:	cmp	r0, #32
   1d324:	bhi	1e7e8 <main@@Base+0x8758>
   1d328:	ldr	r5, [sp, #44]	; 0x2c
   1d32c:	ldr	r8, [sp, #36]	; 0x24
   1d330:	ldr	sl, [sp, #40]	; 0x28
   1d334:	bne	20754 <main@@Base+0xa6c4>
   1d338:	ldrb	r0, [r4, #2]!
   1d33c:	cmp	r0, #32
   1d340:	bhi	1c7ec <main@@Base+0x675c>
   1d344:	b	20754 <main@@Base+0xa6c4>
   1d348:	ldr	r5, [sp, #44]	; 0x2c
   1d34c:	ldr	r8, [sp, #36]	; 0x24
   1d350:	mov	r2, r4
   1d354:	mov	r1, r2
   1d358:	mov	r0, r8
   1d35c:	mov	r2, r5
   1d360:	add	r3, sp, #52	; 0x34
   1d364:	bl	16f84 <main@@Base+0xef4>
   1d368:	mov	r4, r0
   1d36c:	ldr	r0, [sp, #52]	; 0x34
   1d370:	cmp	r0, #0
   1d374:	beq	16fc4 <main@@Base+0xf34>
   1d378:	ldr	r0, [r8]
   1d37c:	mov	r1, #1
   1d380:	bl	2ef08 <flatcc_builder_extend_offset_vector@@Base>
   1d384:	cmp	r0, #0
   1d388:	beq	16fc4 <main@@Base+0xf34>
   1d38c:	ldr	r1, [sp, #52]	; 0x34
   1d390:	str	r1, [r0]
   1d394:	sub	r0, r5, r4
   1d398:	cmp	r0, #2
   1d39c:	blt	1d3c8 <main@@Base+0x7338>
   1d3a0:	ldrb	r0, [r4]
   1d3a4:	cmp	r0, #32
   1d3a8:	bls	1d3b4 <main@@Base+0x7324>
   1d3ac:	mov	r2, r4
   1d3b0:	b	1d3dc <main@@Base+0x734c>
   1d3b4:	bne	1d3c8 <main@@Base+0x7338>
   1d3b8:	mov	r2, r4
   1d3bc:	ldrb	r0, [r2, #1]!
   1d3c0:	cmp	r0, #32
   1d3c4:	bhi	1d3dc <main@@Base+0x734c>
   1d3c8:	mov	r0, r8
   1d3cc:	mov	r1, r4
   1d3d0:	mov	r2, r5
   1d3d4:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1d3d8:	mov	r2, r0
   1d3dc:	cmp	r2, r5
   1d3e0:	beq	1e7ac <main@@Base+0x871c>
   1d3e4:	ldrb	r0, [r2]
   1d3e8:	cmp	r0, #44	; 0x2c
   1d3ec:	bne	1e7b8 <main@@Base+0x8728>
   1d3f0:	add	r1, r2, #1
   1d3f4:	sub	r0, r5, r1
   1d3f8:	cmp	r0, #2
   1d3fc:	blt	1d424 <main@@Base+0x7394>
   1d400:	ldrb	r0, [r1]
   1d404:	cmp	r0, #32
   1d408:	bls	1d414 <main@@Base+0x7384>
   1d40c:	mov	r2, r1
   1d410:	b	1d434 <main@@Base+0x73a4>
   1d414:	bne	1d424 <main@@Base+0x7394>
   1d418:	ldrb	r0, [r2, #2]!
   1d41c:	cmp	r0, #32
   1d420:	bhi	1d434 <main@@Base+0x73a4>
   1d424:	mov	r0, r8
   1d428:	mov	r2, r5
   1d42c:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1d430:	mov	r2, r0
   1d434:	cmp	r2, r5
   1d438:	beq	1e7fc <main@@Base+0x876c>
   1d43c:	ldrb	r0, [r2]
   1d440:	cmp	r0, #93	; 0x5d
   1d444:	bne	1d354 <main@@Base+0x72c4>
   1d448:	b	1e7c8 <main@@Base+0x8738>
   1d44c:	ldr	r5, [sp, #44]	; 0x2c
   1d450:	ldr	r8, [sp, #36]	; 0x24
   1d454:	bne	1d464 <main@@Base+0x73d4>
   1d458:	ldrb	r0, [r4, #2]!
   1d45c:	cmp	r0, #32
   1d460:	bhi	1d474 <main@@Base+0x73e4>
   1d464:	mov	r0, r8
   1d468:	mov	r2, r5
   1d46c:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1d470:	mov	r4, r0
   1d474:	cmp	sl, r4
   1d478:	beq	1a4bc <main@@Base+0x442c>
   1d47c:	ldr	r0, [r8]
   1d480:	mov	r1, #8
   1d484:	mov	r2, #8
   1d488:	mvn	r3, #-536870912	; 0xe0000000
   1d48c:	bl	2f4c0 <flatcc_builder_start_vector@@Base>
   1d490:	cmp	r0, #0
   1d494:	bne	16fc4 <main@@Base+0xf34>
   1d498:	cmp	r4, r5
   1d49c:	beq	1d4d4 <main@@Base+0x7444>
   1d4a0:	ldrb	r0, [r4]
   1d4a4:	cmp	r0, #91	; 0x5b
   1d4a8:	bne	1d4d4 <main@@Base+0x7444>
   1d4ac:	add	r1, r4, #1
   1d4b0:	sub	r0, r5, r1
   1d4b4:	cmp	r0, #2
   1d4b8:	blt	1e36c <main@@Base+0x82dc>
   1d4bc:	ldrb	r0, [r1]
   1d4c0:	cmp	r0, #32
   1d4c4:	bls	1e354 <main@@Base+0x82c4>
   1d4c8:	ldr	r5, [sp, #44]	; 0x2c
   1d4cc:	mov	r4, r1
   1d4d0:	b	1e37c <main@@Base+0x82ec>
   1d4d4:	mov	r0, r8
   1d4d8:	mov	r1, r4
   1d4dc:	mov	r2, r5
   1d4e0:	mov	r3, #22
   1d4e4:	bl	337ac <flatcc_json_parser_set_error@@Base>
   1d4e8:	mov	r4, r0
   1d4ec:	b	20920 <main@@Base+0xa890>
   1d4f0:	ldr	r5, [sp, #44]	; 0x2c
   1d4f4:	ldr	r8, [sp, #36]	; 0x24
   1d4f8:	ldr	sl, [sp, #40]	; 0x28
   1d4fc:	bne	1d50c <main@@Base+0x747c>
   1d500:	ldrb	r0, [r4, #2]!
   1d504:	cmp	r0, #32
   1d508:	bhi	1d51c <main@@Base+0x748c>
   1d50c:	mov	r0, r8
   1d510:	mov	r2, r5
   1d514:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1d518:	mov	r4, r0
   1d51c:	cmp	r7, r4
   1d520:	beq	1e268 <main@@Base+0x81d8>
   1d524:	cmp	r4, r5
   1d528:	beq	1d588 <main@@Base+0x74f8>
   1d52c:	ldrb	r0, [r4]
   1d530:	cmp	r0, #91	; 0x5b
   1d534:	bne	1d588 <main@@Base+0x74f8>
   1d538:	ldr	r0, [r8]
   1d53c:	mov	r1, #1
   1d540:	mov	r2, #1
   1d544:	mvn	r3, #0
   1d548:	bl	2f4c0 <flatcc_builder_start_vector@@Base>
   1d54c:	cmp	r0, #0
   1d550:	bne	20b0c <main@@Base+0xaa7c>
   1d554:	ldrb	r0, [r4]
   1d558:	cmp	r0, #91	; 0x5b
   1d55c:	bne	1d5d4 <main@@Base+0x7544>
   1d560:	ldr	r0, [sp, #44]	; 0x2c
   1d564:	add	r1, r4, #1
   1d568:	sub	r0, r0, r1
   1d56c:	cmp	r0, #2
   1d570:	blt	20338 <main@@Base+0xa2a8>
   1d574:	ldrb	r0, [r1]
   1d578:	cmp	r0, #32
   1d57c:	bls	20328 <main@@Base+0xa298>
   1d580:	mov	r4, r1
   1d584:	b	20348 <main@@Base+0xa2b8>
   1d588:	ldr	r0, [r8]
   1d58c:	mov	r1, #0
   1d590:	mov	r2, #0
   1d594:	mov	r3, #0
   1d598:	bl	2e810 <flatcc_builder_start_buffer@@Base>
   1d59c:	cmp	r0, #0
   1d5a0:	bne	16fc4 <main@@Base+0xf34>
   1d5a4:	mov	r0, r8
   1d5a8:	mov	r1, r4
   1d5ac:	mov	r2, r5
   1d5b0:	add	r3, sp, #52	; 0x34
   1d5b4:	bl	16f84 <main@@Base+0xef4>
   1d5b8:	ldr	r1, [sp, #52]	; 0x34
   1d5bc:	mov	r4, r0
   1d5c0:	cmp	r1, #0
   1d5c4:	beq	16fc4 <main@@Base+0xf34>
   1d5c8:	ldr	r0, [r8]
   1d5cc:	bl	2ea00 <flatcc_builder_end_buffer@@Base>
   1d5d0:	b	2086c <main@@Base+0xa7dc>
   1d5d4:	ldr	r0, [sp, #36]	; 0x24
   1d5d8:	ldr	r2, [sp, #44]	; 0x2c
   1d5dc:	mov	r1, r4
   1d5e0:	mov	r3, #22
   1d5e4:	bl	337ac <flatcc_json_parser_set_error@@Base>
   1d5e8:	b	20858 <main@@Base+0xa7c8>
   1d5ec:	ldr	r5, [sp, #44]	; 0x2c
   1d5f0:	ldr	r8, [sp, #36]	; 0x24
   1d5f4:	bne	1d604 <main@@Base+0x7574>
   1d5f8:	ldrb	r0, [r4, #2]!
   1d5fc:	cmp	r0, #32
   1d600:	bhi	1d614 <main@@Base+0x7584>
   1d604:	mov	r0, r8
   1d608:	mov	r2, r5
   1d60c:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1d610:	mov	r4, r0
   1d614:	cmp	r4, r5
   1d618:	beq	1d660 <main@@Base+0x75d0>
   1d61c:	ldrb	r0, [r4]
   1d620:	cmp	r0, #93	; 0x5d
   1d624:	bne	1d658 <main@@Base+0x75c8>
   1d628:	ldr	r5, [sp, #44]	; 0x2c
   1d62c:	ldr	r8, [sp, #36]	; 0x24
   1d630:	ldr	sl, [sp, #40]	; 0x28
   1d634:	add	r1, r4, #1
   1d638:	sub	r0, r5, r1
   1d63c:	cmp	r0, #2
   1d640:	blt	205a0 <main@@Base+0xa510>
   1d644:	ldrb	r0, [r1]
   1d648:	cmp	r0, #32
   1d64c:	bls	20584 <main@@Base+0xa4f4>
   1d650:	mov	r4, r1
   1d654:	b	209a0 <main@@Base+0xa910>
   1d658:	ldr	r8, [sp, #36]	; 0x24
   1d65c:	mov	r5, r4
   1d660:	mov	r0, #0
   1d664:	mov	r1, #1
   1d668:	strb	r0, [fp, #-60]	; 0xffffffc4
   1d66c:	ldr	r0, [r8]
   1d670:	bl	2eca8 <flatcc_builder_extend_vector@@Base>
   1d674:	cmp	r0, #0
   1d678:	beq	20ae0 <main@@Base+0xaa50>
   1d67c:	mov	r4, r5
   1d680:	ldr	r5, [sp, #44]	; 0x2c
   1d684:	ldr	r8, [sp, #36]	; 0x24
   1d688:	mov	r7, r0
   1d68c:	mov	r6, #0
   1d690:	cmp	r4, r5
   1d694:	str	r6, [fp, #-52]	; 0xffffffcc
   1d698:	str	r6, [fp, #-56]	; 0xffffffc8
   1d69c:	strb	r6, [fp, #-60]	; 0xffffffc4
   1d6a0:	str	r6, [sp, #56]	; 0x38
   1d6a4:	beq	1d6ec <main@@Base+0x765c>
   1d6a8:	sub	r0, fp, #56	; 0x38
   1d6ac:	mov	r1, r4
   1d6b0:	mov	r2, r5
   1d6b4:	add	r3, sp, #56	; 0x38
   1d6b8:	str	r0, [sp]
   1d6bc:	mov	r0, r8
   1d6c0:	bl	356c0 <flatcc_json_parser_integer@@Base>
   1d6c4:	cmp	r0, r4
   1d6c8:	beq	1d6f4 <main@@Base+0x7664>
   1d6cc:	mov	r1, r0
   1d6d0:	ldr	r0, [sp, #56]	; 0x38
   1d6d4:	cmp	r0, #0
   1d6d8:	beq	1d6fc <main@@Base+0x766c>
   1d6dc:	mov	r0, r8
   1d6e0:	mov	r2, r5
   1d6e4:	mov	r3, #8
   1d6e8:	b	1d724 <main@@Base+0x7694>
   1d6ec:	mov	r1, r5
   1d6f0:	b	1d72c <main@@Base+0x769c>
   1d6f4:	mov	r1, r4
   1d6f8:	b	1d72c <main@@Base+0x769c>
   1d6fc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1d700:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1d704:	subs	r3, r0, #256	; 0x100
   1d708:	sbcs	r2, r2, #0
   1d70c:	bcc	1d840 <main@@Base+0x77b0>
   1d710:	ldr	r8, [sp, #36]	; 0x24
   1d714:	ldr	r5, [sp, #44]	; 0x2c
   1d718:	mov	r3, #7
   1d71c:	mov	r0, r8
   1d720:	mov	r2, r5
   1d724:	bl	337ac <flatcc_json_parser_set_error@@Base>
   1d728:	mov	r1, r0
   1d72c:	cmp	r4, r1
   1d730:	bne	1d768 <main@@Base+0x76d8>
   1d734:	movw	r3, #45216	; 0xb0a0
   1d738:	sub	r0, fp, #60	; 0x3c
   1d73c:	mov	r1, r4
   1d740:	mov	r2, r5
   1d744:	str	r0, [sp]
   1d748:	mov	r0, r8
   1d74c:	movt	r3, #5
   1d750:	bl	22a6c <main@@Base+0xc9dc>
   1d754:	mov	r1, r0
   1d758:	cmp	r0, r4
   1d75c:	cmpne	r1, r5
   1d760:	beq	20ac8 <main@@Base+0xaa38>
   1d764:	ldrb	r6, [fp, #-60]	; 0xffffffc4
   1d768:	sub	r0, r5, r1
   1d76c:	strb	r6, [r7]
   1d770:	cmp	r0, #2
   1d774:	blt	1d7a0 <main@@Base+0x7710>
   1d778:	ldrb	r0, [r1]
   1d77c:	cmp	r0, #32
   1d780:	bls	1d78c <main@@Base+0x76fc>
   1d784:	mov	r4, r1
   1d788:	b	1d7b0 <main@@Base+0x7720>
   1d78c:	bne	1d7a0 <main@@Base+0x7710>
   1d790:	mov	r4, r1
   1d794:	ldrb	r0, [r4, #1]!
   1d798:	cmp	r0, #32
   1d79c:	bhi	1d7b0 <main@@Base+0x7720>
   1d7a0:	mov	r0, r8
   1d7a4:	mov	r2, r5
   1d7a8:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1d7ac:	mov	r4, r0
   1d7b0:	cmp	r4, r5
   1d7b4:	beq	20650 <main@@Base+0xa5c0>
   1d7b8:	ldrb	r0, [r4]
   1d7bc:	cmp	r0, #44	; 0x2c
   1d7c0:	bne	206d0 <main@@Base+0xa640>
   1d7c4:	add	r1, r4, #1
   1d7c8:	sub	r0, r5, r1
   1d7cc:	cmp	r0, #2
   1d7d0:	blt	1d7f8 <main@@Base+0x7768>
   1d7d4:	ldrb	r0, [r1]
   1d7d8:	cmp	r0, #32
   1d7dc:	bls	1d7e8 <main@@Base+0x7758>
   1d7e0:	mov	r4, r1
   1d7e4:	b	1d808 <main@@Base+0x7778>
   1d7e8:	bne	1d7f8 <main@@Base+0x7768>
   1d7ec:	ldrb	r0, [r4, #2]!
   1d7f0:	cmp	r0, #32
   1d7f4:	bhi	1d808 <main@@Base+0x7778>
   1d7f8:	mov	r0, r8
   1d7fc:	mov	r2, r5
   1d800:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1d804:	mov	r4, r0
   1d808:	cmp	r4, r5
   1d80c:	beq	206e8 <main@@Base+0xa658>
   1d810:	ldrb	r0, [r4]
   1d814:	cmp	r0, #93	; 0x5d
   1d818:	beq	206f8 <main@@Base+0xa668>
   1d81c:	mov	r0, #0
   1d820:	mov	r1, #1
   1d824:	strb	r0, [fp, #-60]	; 0xffffffc4
   1d828:	ldr	r0, [r8]
   1d82c:	bl	2eca8 <flatcc_builder_extend_vector@@Base>
   1d830:	mov	r7, r0
   1d834:	cmp	r0, #0
   1d838:	bne	1d68c <main@@Base+0x75fc>
   1d83c:	b	16fc4 <main@@Base+0xf34>
   1d840:	ldr	r5, [sp, #44]	; 0x2c
   1d844:	ldr	r8, [sp, #36]	; 0x24
   1d848:	mov	r6, r0
   1d84c:	strb	r0, [fp, #-60]	; 0xffffffc4
   1d850:	b	1d72c <main@@Base+0x769c>
   1d854:	ldr	r6, [fp, #-56]	; 0xffffffc8
   1d858:	ldr	r5, [sp, #44]	; 0x2c
   1d85c:	ldr	r8, [sp, #36]	; 0x24
   1d860:	str	r6, [fp, #-60]	; 0xffffffc4
   1d864:	b	1cd38 <main@@Base+0x6ca8>
   1d868:	ldr	r5, [sp, #44]	; 0x2c
   1d86c:	ldr	r8, [sp, #36]	; 0x24
   1d870:	bne	1d880 <main@@Base+0x77f0>
   1d874:	ldrb	r0, [r4, #2]!
   1d878:	cmp	r0, #32
   1d87c:	bhi	1d890 <main@@Base+0x7800>
   1d880:	mov	r0, r8
   1d884:	mov	r2, r5
   1d888:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1d88c:	mov	r4, r0
   1d890:	cmp	r4, r5
   1d894:	mov	r2, r5
   1d898:	beq	1d8f4 <main@@Base+0x7864>
   1d89c:	ldrb	r0, [r4]
   1d8a0:	cmp	r0, #93	; 0x5d
   1d8a4:	bne	1d8f0 <main@@Base+0x7860>
   1d8a8:	ldr	r5, [sp, #44]	; 0x2c
   1d8ac:	ldr	r8, [sp, #36]	; 0x24
   1d8b0:	ldr	sl, [sp, #40]	; 0x28
   1d8b4:	add	r1, r4, #1
   1d8b8:	sub	r0, r5, r1
   1d8bc:	cmp	r0, #2
   1d8c0:	blt	208e8 <main@@Base+0xa858>
   1d8c4:	ldrb	r0, [r1]
   1d8c8:	cmp	r0, #32
   1d8cc:	bhi	1f8e0 <main@@Base+0x9850>
   1d8d0:	ldr	r5, [sp, #44]	; 0x2c
   1d8d4:	ldr	r8, [sp, #36]	; 0x24
   1d8d8:	ldr	sl, [sp, #40]	; 0x28
   1d8dc:	bne	208e8 <main@@Base+0xa858>
   1d8e0:	ldrb	r0, [r4, #2]!
   1d8e4:	cmp	r0, #32
   1d8e8:	bhi	1d074 <main@@Base+0x6fe4>
   1d8ec:	b	208e8 <main@@Base+0xa858>
   1d8f0:	mov	r2, r4
   1d8f4:	ldr	r5, [sp, #44]	; 0x2c
   1d8f8:	ldr	r8, [sp, #36]	; 0x24
   1d8fc:	mov	r1, r2
   1d900:	mov	r0, r8
   1d904:	mov	r2, r5
   1d908:	add	r3, sp, #52	; 0x34
   1d90c:	bl	35be8 <flatcc_json_parser_build_string@@Base>
   1d910:	mov	r4, r0
   1d914:	ldr	r0, [sp, #52]	; 0x34
   1d918:	cmp	r0, #0
   1d91c:	beq	16fc4 <main@@Base+0xf34>
   1d920:	ldr	r0, [r8]
   1d924:	mov	r1, #1
   1d928:	bl	2ef08 <flatcc_builder_extend_offset_vector@@Base>
   1d92c:	cmp	r0, #0
   1d930:	beq	16fc4 <main@@Base+0xf34>
   1d934:	ldr	r1, [sp, #52]	; 0x34
   1d938:	str	r1, [r0]
   1d93c:	sub	r0, r5, r4
   1d940:	cmp	r0, #2
   1d944:	blt	1d970 <main@@Base+0x78e0>
   1d948:	ldrb	r0, [r4]
   1d94c:	cmp	r0, #32
   1d950:	bls	1d95c <main@@Base+0x78cc>
   1d954:	mov	r2, r4
   1d958:	b	1d984 <main@@Base+0x78f4>
   1d95c:	bne	1d970 <main@@Base+0x78e0>
   1d960:	mov	r2, r4
   1d964:	ldrb	r0, [r2, #1]!
   1d968:	cmp	r0, #32
   1d96c:	bhi	1d984 <main@@Base+0x78f4>
   1d970:	mov	r0, r8
   1d974:	mov	r1, r4
   1d978:	mov	r2, r5
   1d97c:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1d980:	mov	r2, r0
   1d984:	cmp	r2, r5
   1d988:	beq	1efb4 <main@@Base+0x8f24>
   1d98c:	ldrb	r0, [r2]
   1d990:	cmp	r0, #44	; 0x2c
   1d994:	bne	1f8b0 <main@@Base+0x9820>
   1d998:	add	r1, r2, #1
   1d99c:	sub	r0, r5, r1
   1d9a0:	cmp	r0, #2
   1d9a4:	blt	1d9cc <main@@Base+0x793c>
   1d9a8:	ldrb	r0, [r1]
   1d9ac:	cmp	r0, #32
   1d9b0:	bls	1d9bc <main@@Base+0x792c>
   1d9b4:	mov	r2, r1
   1d9b8:	b	1d9dc <main@@Base+0x794c>
   1d9bc:	bne	1d9cc <main@@Base+0x793c>
   1d9c0:	ldrb	r0, [r2, #2]!
   1d9c4:	cmp	r0, #32
   1d9c8:	bhi	1d9dc <main@@Base+0x794c>
   1d9cc:	mov	r0, r8
   1d9d0:	mov	r2, r5
   1d9d4:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1d9d8:	mov	r2, r0
   1d9dc:	cmp	r2, r5
   1d9e0:	beq	1f920 <main@@Base+0x9890>
   1d9e4:	ldrb	r0, [r2]
   1d9e8:	cmp	r0, #93	; 0x5d
   1d9ec:	bne	1d8fc <main@@Base+0x786c>
   1d9f0:	b	1f8c0 <main@@Base+0x9830>
   1d9f4:	mov	r4, r5
   1d9f8:	b	1a4f0 <main@@Base+0x4460>
   1d9fc:	cmp	r0, #93	; 0x5d
   1da00:	bne	1ef90 <main@@Base+0x8f00>
   1da04:	ldr	r5, [sp, #44]	; 0x2c
   1da08:	ldr	r8, [sp, #36]	; 0x24
   1da0c:	ldr	sl, [sp, #40]	; 0x28
   1da10:	b	1ba9c <main@@Base+0x5a0c>
   1da14:	ldr	sl, [sp, #40]	; 0x28
   1da18:	mov	r4, r5
   1da1c:	b	1c000 <main@@Base+0x5f70>
   1da20:	mov	r0, r8
   1da24:	mov	r1, r5
   1da28:	mov	r2, r5
   1da2c:	mov	r3, #9
   1da30:	b	1a4e8 <main@@Base+0x4458>
   1da34:	ldr	r5, [sp, #44]	; 0x2c
   1da38:	ldr	r8, [sp, #36]	; 0x24
   1da3c:	ldr	sl, [sp, #40]	; 0x28
   1da40:	bne	1da54 <main@@Base+0x79c4>
   1da44:	ldrb	r0, [r2, #2]!
   1da48:	cmp	r0, #32
   1da4c:	mov	r4, r2
   1da50:	bhi	1ee1c <main@@Base+0x8d8c>
   1da54:	mov	r0, r8
   1da58:	mov	r2, r5
   1da5c:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1da60:	b	1ee18 <main@@Base+0x8d88>
   1da64:	cmp	r0, #93	; 0x5d
   1da68:	bne	1f8f4 <main@@Base+0x9864>
   1da6c:	ldr	r5, [sp, #44]	; 0x2c
   1da70:	ldr	r8, [sp, #36]	; 0x24
   1da74:	add	r1, r2, #1
   1da78:	sub	r0, r5, r1
   1da7c:	cmp	r0, #2
   1da80:	ldr	sl, [sp, #40]	; 0x28
   1da84:	blt	205e0 <main@@Base+0xa550>
   1da88:	ldrb	r0, [r1]
   1da8c:	cmp	r0, #32
   1da90:	bls	205c0 <main@@Base+0xa530>
   1da94:	ldr	r5, [sp, #44]	; 0x2c
   1da98:	ldr	r8, [sp, #36]	; 0x24
   1da9c:	ldr	sl, [sp, #40]	; 0x28
   1daa0:	mov	r4, r1
   1daa4:	b	1c000 <main@@Base+0x5f70>
   1daa8:	mov	r0, r8
   1daac:	mov	r1, r5
   1dab0:	b	1f904 <main@@Base+0x9874>
   1dab4:	ldr	r5, [sp, #44]	; 0x2c
   1dab8:	ldr	r8, [sp, #36]	; 0x24
   1dabc:	bne	1dacc <main@@Base+0x7a3c>
   1dac0:	ldrb	r0, [r4, #2]!
   1dac4:	cmp	r0, #32
   1dac8:	bhi	1dadc <main@@Base+0x7a4c>
   1dacc:	mov	r0, r8
   1dad0:	mov	r2, r5
   1dad4:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1dad8:	mov	r4, r0
   1dadc:	cmp	r4, r5
   1dae0:	mov	r2, r5
   1dae4:	beq	1db40 <main@@Base+0x7ab0>
   1dae8:	ldrb	r0, [r4]
   1daec:	cmp	r0, #125	; 0x7d
   1daf0:	bne	1db3c <main@@Base+0x7aac>
   1daf4:	ldr	r5, [sp, #44]	; 0x2c
   1daf8:	ldr	r8, [sp, #36]	; 0x24
   1dafc:	ldr	sl, [sp, #40]	; 0x28
   1db00:	add	r1, r4, #1
   1db04:	sub	r0, r5, r1
   1db08:	cmp	r0, #2
   1db0c:	blt	208a8 <main@@Base+0xa818>
   1db10:	ldrb	r0, [r1]
   1db14:	cmp	r0, #32
   1db18:	bhi	1ebf0 <main@@Base+0x8b60>
   1db1c:	ldr	r5, [sp, #44]	; 0x2c
   1db20:	ldr	r8, [sp, #36]	; 0x24
   1db24:	ldr	sl, [sp, #40]	; 0x28
   1db28:	bne	208a8 <main@@Base+0xa818>
   1db2c:	ldrb	r0, [r4, #2]!
   1db30:	cmp	r0, #32
   1db34:	bhi	1bea4 <main@@Base+0x5e14>
   1db38:	b	208a8 <main@@Base+0xa818>
   1db3c:	mov	r2, r4
   1db40:	ldr	r5, [sp, #44]	; 0x2c
   1db44:	ldr	r8, [sp, #36]	; 0x24
   1db48:	cmp	r2, r5
   1db4c:	mov	r9, r5
   1db50:	beq	1dba4 <main@@Base+0x7b14>
   1db54:	ldrb	r0, [r2]
   1db58:	cmp	r0, #46	; 0x2e
   1db5c:	beq	1db78 <main@@Base+0x7ae8>
   1db60:	cmp	r0, #34	; 0x22
   1db64:	bne	1db94 <main@@Base+0x7b04>
   1db68:	ldr	r0, [sp, #32]
   1db6c:	mov	r1, #0
   1db70:	add	r9, r2, #1
   1db74:	b	1dba0 <main@@Base+0x7b10>
   1db78:	mov	r1, r2
   1db7c:	mov	r0, r8
   1db80:	mov	r2, r5
   1db84:	mov	r3, #5
   1db88:	bl	337ac <flatcc_json_parser_set_error@@Base>
   1db8c:	mov	r9, r0
   1db90:	b	1dba4 <main@@Base+0x7b14>
   1db94:	ldr	r0, [sp, #32]
   1db98:	mov	r1, #1
   1db9c:	mov	r9, r2
   1dba0:	str	r1, [r0]
   1dba4:	sub	lr, r5, r9
   1dba8:	mov	r0, #8
   1dbac:	cmp	lr, #8
   1dbb0:	movcc	r0, lr
   1dbb4:	and	r0, r0, #15
   1dbb8:	sub	r7, r0, #1
   1dbbc:	cmp	r7, #7
   1dbc0:	bhi	1dd44 <main@@Base+0x7cb4>
   1dbc4:	add	r4, pc, #32
   1dbc8:	mov	r1, #0
   1dbcc:	mov	ip, #0
   1dbd0:	mov	r8, #0
   1dbd4:	mov	r6, #0
   1dbd8:	mov	r3, #0
   1dbdc:	mov	r5, #0
   1dbe0:	mov	r2, #0
   1dbe4:	mov	r0, #0
   1dbe8:	ldr	pc, [r4, r7, lsl #2]
   1dbec:	andeq	sp, r1, r0, asr ip
   1dbf0:	andeq	sp, r1, r8, asr #24
   1dbf4:	andeq	sp, r1, r0, asr #24
   1dbf8:	andeq	sp, r1, r8, lsr ip
   1dbfc:	andeq	sp, r1, ip, lsr #24
   1dc00:	andeq	sp, r1, r0, lsr #24
   1dc04:	andeq	sp, r1, r0, lsl ip
   1dc08:	andeq	sp, r1, ip, lsl #24
   1dc0c:	ldrb	ip, [r9, #7]
   1dc10:	ldrb	r0, [r9, #6]
   1dc14:	mov	r8, r1
   1dc18:	orr	r0, ip, r0, lsl #8
   1dc1c:	mov	r1, r0
   1dc20:	ldrb	r0, [r9, #5]
   1dc24:	mov	r6, r8
   1dc28:	orr	r1, r1, r0, lsl #16
   1dc2c:	ldrb	r0, [r9, #4]
   1dc30:	mov	r3, r6
   1dc34:	orr	r1, r1, r0, lsl #24
   1dc38:	ldrb	r0, [r9, #3]
   1dc3c:	orr	r5, r0, r3
   1dc40:	ldrb	r0, [r9, #2]
   1dc44:	orr	r2, r5, r0, lsl #8
   1dc48:	ldrb	r0, [r9, #1]
   1dc4c:	orr	r0, r2, r0, lsl #16
   1dc50:	ldrb	r2, [r9]
   1dc54:	orr	r2, r0, r2, lsl #24
   1dc58:	movw	r0, #0
   1dc5c:	movt	r0, #25956	; 0x6564
   1dc60:	subs	r0, r1, r0
   1dc64:	movw	r0, #29556	; 0x7374
   1dc68:	movt	r0, #28261	; 0x6e65
   1dc6c:	sbcs	r0, r2, r0
   1dc70:	bcs	1dcd4 <main@@Base+0x7c44>
   1dc74:	ldr	r5, [sp, #44]	; 0x2c
   1dc78:	ldr	r8, [sp, #36]	; 0x24
   1dc7c:	movw	r0, #29793	; 0x7461
   1dc80:	movt	r0, #25697	; 0x6461
   1dc84:	teq	r2, r0
   1dc88:	bne	1dd44 <main@@Base+0x7cb4>
   1dc8c:	cmp	lr, #5
   1dc90:	mov	r1, r9
   1dc94:	blt	1dff0 <main@@Base+0x7f60>
   1dc98:	ldr	r1, [sp, #32]
   1dc9c:	mov	r2, r9
   1dca0:	ldrb	r0, [r2, #4]!
   1dca4:	ldr	r1, [r1]
   1dca8:	cmp	r1, #0
   1dcac:	beq	1ddbc <main@@Base+0x7d2c>
   1dcb0:	cmp	r0, #33	; 0x21
   1dcb4:	bcc	1dcc4 <main@@Base+0x7c34>
   1dcb8:	cmp	r0, #58	; 0x3a
   1dcbc:	mov	r1, r9
   1dcc0:	bne	1dff0 <main@@Base+0x7f60>
   1dcc4:	ldr	r0, [sp, #32]
   1dcc8:	mov	r1, #0
   1dccc:	str	r1, [r0]
   1dcd0:	b	1ddcc <main@@Base+0x7d3c>
   1dcd4:	movw	r0, #29292	; 0x726c
   1dcd8:	lsr	r3, r1, #8
   1dcdc:	movw	r7, #29793	; 0x7461
   1dce0:	movt	r0, #117	; 0x75
   1dce4:	orr	r3, r3, r2, lsl #24
   1dce8:	movt	r7, #25697	; 0x6461
   1dcec:	eor	r0, r0, r2, lsr #8
   1dcf0:	eor	r3, r3, r7
   1dcf4:	orrs	r0, r3, r0
   1dcf8:	bne	1dd50 <main@@Base+0x7cc0>
   1dcfc:	cmp	lr, #8
   1dd00:	mov	r1, r9
   1dd04:	blt	1e050 <main@@Base+0x7fc0>
   1dd08:	ldr	r1, [sp, #32]
   1dd0c:	mov	r2, r9
   1dd10:	ldrb	r0, [r2, #7]!
   1dd14:	ldr	r1, [r1]
   1dd18:	cmp	r1, #0
   1dd1c:	beq	1ddf0 <main@@Base+0x7d60>
   1dd20:	cmp	r0, #33	; 0x21
   1dd24:	bcc	1dd34 <main@@Base+0x7ca4>
   1dd28:	cmp	r0, #58	; 0x3a
   1dd2c:	mov	r1, r9
   1dd30:	bne	1e050 <main@@Base+0x7fc0>
   1dd34:	ldr	r0, [sp, #32]
   1dd38:	mov	r1, #0
   1dd3c:	str	r1, [r0]
   1dd40:	b	1de00 <main@@Base+0x7d70>
   1dd44:	mov	r0, r8
   1dd48:	mov	r1, r9
   1dd4c:	b	1e11c <main@@Base+0x808c>
   1dd50:	movw	r0, #29556	; 0x7374
   1dd54:	bfc	r1, #0, #16
   1dd58:	movt	r0, #28261	; 0x6e65
   1dd5c:	eor	r0, r2, r0
   1dd60:	movw	r2, #0
   1dd64:	movt	r2, #25956	; 0x6564
   1dd68:	eor	r1, r1, r2
   1dd6c:	orrs	r0, r1, r0
   1dd70:	bne	1e10c <main@@Base+0x807c>
   1dd74:	cmp	lr, #7
   1dd78:	mov	r1, r9
   1dd7c:	blt	1e0b0 <main@@Base+0x8020>
   1dd80:	ldr	r1, [sp, #32]
   1dd84:	mov	r2, r9
   1dd88:	ldrb	r0, [r2, #6]!
   1dd8c:	ldr	r1, [r1]
   1dd90:	cmp	r1, #0
   1dd94:	beq	1de24 <main@@Base+0x7d94>
   1dd98:	cmp	r0, #33	; 0x21
   1dd9c:	bcc	1ddac <main@@Base+0x7d1c>
   1dda0:	cmp	r0, #58	; 0x3a
   1dda4:	mov	r1, r9
   1dda8:	bne	1e0b0 <main@@Base+0x8020>
   1ddac:	ldr	r0, [sp, #32]
   1ddb0:	mov	r1, #0
   1ddb4:	str	r1, [r0]
   1ddb8:	b	1de34 <main@@Base+0x7da4>
   1ddbc:	cmp	r0, #34	; 0x22
   1ddc0:	mov	r1, r9
   1ddc4:	bne	1dff0 <main@@Base+0x7f60>
   1ddc8:	add	r2, r9, #5
   1ddcc:	ldr	r0, [sp, #44]	; 0x2c
   1ddd0:	sub	r0, r0, r2
   1ddd4:	cmp	r0, #2
   1ddd8:	blt	1de6c <main@@Base+0x7ddc>
   1dddc:	ldrb	r0, [r2]
   1dde0:	cmp	r0, #32
   1dde4:	bls	1de58 <main@@Base+0x7dc8>
   1dde8:	mov	r1, r2
   1ddec:	b	1de80 <main@@Base+0x7df0>
   1ddf0:	cmp	r0, #34	; 0x22
   1ddf4:	mov	r1, r9
   1ddf8:	bne	1e050 <main@@Base+0x7fc0>
   1ddfc:	add	r2, r9, #8
   1de00:	ldr	r0, [sp, #44]	; 0x2c
   1de04:	sub	r0, r0, r2
   1de08:	cmp	r0, #2
   1de0c:	blt	1dee8 <main@@Base+0x7e58>
   1de10:	ldrb	r0, [r2]
   1de14:	cmp	r0, #32
   1de18:	bls	1ded4 <main@@Base+0x7e44>
   1de1c:	mov	r1, r2
   1de20:	b	1defc <main@@Base+0x7e6c>
   1de24:	cmp	r0, #34	; 0x22
   1de28:	mov	r1, r9
   1de2c:	bne	1e0b0 <main@@Base+0x8020>
   1de30:	add	r2, r9, #7
   1de34:	ldr	r0, [sp, #44]	; 0x2c
   1de38:	sub	r0, r0, r2
   1de3c:	cmp	r0, #2
   1de40:	blt	1df64 <main@@Base+0x7ed4>
   1de44:	ldrb	r0, [r2]
   1de48:	cmp	r0, #32
   1de4c:	bls	1df50 <main@@Base+0x7ec0>
   1de50:	mov	r1, r2
   1de54:	b	1df78 <main@@Base+0x7ee8>
   1de58:	bne	1de6c <main@@Base+0x7ddc>
   1de5c:	mov	r1, r2
   1de60:	ldrb	r0, [r1, #1]!
   1de64:	cmp	r0, #32
   1de68:	bhi	1de80 <main@@Base+0x7df0>
   1de6c:	mov	r1, r2
   1de70:	ldr	r0, [sp, #36]	; 0x24
   1de74:	ldr	r2, [sp, #44]	; 0x2c
   1de78:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1de7c:	mov	r1, r0
   1de80:	ldr	r0, [sp, #44]	; 0x2c
   1de84:	cmp	r1, r0
   1de88:	beq	1dec0 <main@@Base+0x7e30>
   1de8c:	ldrb	r0, [r1]
   1de90:	cmp	r0, #58	; 0x3a
   1de94:	bne	1dec0 <main@@Base+0x7e30>
   1de98:	ldr	r0, [sp, #44]	; 0x2c
   1de9c:	add	r2, r1, #1
   1dea0:	sub	r0, r0, r2
   1dea4:	cmp	r0, #2
   1dea8:	blt	1dfdc <main@@Base+0x7f4c>
   1deac:	ldrb	r0, [r2]
   1deb0:	cmp	r0, #32
   1deb4:	bls	1dfcc <main@@Base+0x7f3c>
   1deb8:	mov	r1, r2
   1debc:	b	1dff0 <main@@Base+0x7f60>
   1dec0:	ldr	r0, [sp, #36]	; 0x24
   1dec4:	ldr	r2, [sp, #44]	; 0x2c
   1dec8:	mov	r3, #4
   1decc:	bl	337ac <flatcc_json_parser_set_error@@Base>
   1ded0:	b	1dfec <main@@Base+0x7f5c>
   1ded4:	bne	1dee8 <main@@Base+0x7e58>
   1ded8:	mov	r1, r2
   1dedc:	ldrb	r0, [r1, #1]!
   1dee0:	cmp	r0, #32
   1dee4:	bhi	1defc <main@@Base+0x7e6c>
   1dee8:	mov	r1, r2
   1deec:	ldr	r0, [sp, #36]	; 0x24
   1def0:	ldr	r2, [sp, #44]	; 0x2c
   1def4:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1def8:	mov	r1, r0
   1defc:	ldr	r0, [sp, #44]	; 0x2c
   1df00:	cmp	r1, r0
   1df04:	beq	1df3c <main@@Base+0x7eac>
   1df08:	ldrb	r0, [r1]
   1df0c:	cmp	r0, #58	; 0x3a
   1df10:	bne	1df3c <main@@Base+0x7eac>
   1df14:	ldr	r0, [sp, #44]	; 0x2c
   1df18:	add	r2, r1, #1
   1df1c:	sub	r0, r0, r2
   1df20:	cmp	r0, #2
   1df24:	blt	1e03c <main@@Base+0x7fac>
   1df28:	ldrb	r0, [r2]
   1df2c:	cmp	r0, #32
   1df30:	bls	1e02c <main@@Base+0x7f9c>
   1df34:	mov	r1, r2
   1df38:	b	1e050 <main@@Base+0x7fc0>
   1df3c:	ldr	r0, [sp, #36]	; 0x24
   1df40:	ldr	r2, [sp, #44]	; 0x2c
   1df44:	mov	r3, #4
   1df48:	bl	337ac <flatcc_json_parser_set_error@@Base>
   1df4c:	b	1e04c <main@@Base+0x7fbc>
   1df50:	bne	1df64 <main@@Base+0x7ed4>
   1df54:	mov	r1, r2
   1df58:	ldrb	r0, [r1, #1]!
   1df5c:	cmp	r0, #32
   1df60:	bhi	1df78 <main@@Base+0x7ee8>
   1df64:	mov	r1, r2
   1df68:	ldr	r0, [sp, #36]	; 0x24
   1df6c:	ldr	r2, [sp, #44]	; 0x2c
   1df70:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1df74:	mov	r1, r0
   1df78:	ldr	r0, [sp, #44]	; 0x2c
   1df7c:	cmp	r1, r0
   1df80:	beq	1dfb8 <main@@Base+0x7f28>
   1df84:	ldrb	r0, [r1]
   1df88:	cmp	r0, #58	; 0x3a
   1df8c:	bne	1dfb8 <main@@Base+0x7f28>
   1df90:	ldr	r0, [sp, #44]	; 0x2c
   1df94:	add	r2, r1, #1
   1df98:	sub	r0, r0, r2
   1df9c:	cmp	r0, #2
   1dfa0:	blt	1e09c <main@@Base+0x800c>
   1dfa4:	ldrb	r0, [r2]
   1dfa8:	cmp	r0, #32
   1dfac:	bls	1e08c <main@@Base+0x7ffc>
   1dfb0:	mov	r1, r2
   1dfb4:	b	1e0b0 <main@@Base+0x8020>
   1dfb8:	ldr	r0, [sp, #36]	; 0x24
   1dfbc:	ldr	r2, [sp, #44]	; 0x2c
   1dfc0:	mov	r3, #4
   1dfc4:	bl	337ac <flatcc_json_parser_set_error@@Base>
   1dfc8:	b	1e0ac <main@@Base+0x801c>
   1dfcc:	bne	1dfdc <main@@Base+0x7f4c>
   1dfd0:	ldrb	r0, [r1, #2]!
   1dfd4:	cmp	r0, #32
   1dfd8:	bhi	1dff0 <main@@Base+0x7f60>
   1dfdc:	mov	r1, r2
   1dfe0:	ldr	r0, [sp, #36]	; 0x24
   1dfe4:	ldr	r2, [sp, #44]	; 0x2c
   1dfe8:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1dfec:	mov	r1, r0
   1dff0:	cmp	r9, r1
   1dff4:	beq	1e10c <main@@Base+0x807c>
   1dff8:	mov	r0, #0
   1dffc:	ldr	r2, [sp, #44]	; 0x2c
   1e000:	sub	r3, fp, #56	; 0x38
   1e004:	str	r0, [sp]
   1e008:	ldr	r0, [sp, #36]	; 0x24
   1e00c:	bl	35810 <flatcc_json_parser_build_uint8_vector_base64@@Base>
   1e010:	mov	r4, r0
   1e014:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1e018:	cmp	r0, #0
   1e01c:	beq	205b0 <main@@Base+0xa520>
   1e020:	ldr	r0, [sp, #36]	; 0x24
   1e024:	mov	r1, #0
   1e028:	b	1e0e8 <main@@Base+0x8058>
   1e02c:	bne	1e03c <main@@Base+0x7fac>
   1e030:	ldrb	r0, [r1, #2]!
   1e034:	cmp	r0, #32
   1e038:	bhi	1e050 <main@@Base+0x7fc0>
   1e03c:	mov	r1, r2
   1e040:	ldr	r0, [sp, #36]	; 0x24
   1e044:	ldr	r2, [sp, #44]	; 0x2c
   1e048:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1e04c:	mov	r1, r0
   1e050:	cmp	r9, r1
   1e054:	beq	1e10c <main@@Base+0x807c>
   1e058:	mov	r0, #1
   1e05c:	ldr	r2, [sp, #44]	; 0x2c
   1e060:	sub	r3, fp, #56	; 0x38
   1e064:	str	r0, [sp]
   1e068:	ldr	r0, [sp, #36]	; 0x24
   1e06c:	bl	35810 <flatcc_json_parser_build_uint8_vector_base64@@Base>
   1e070:	mov	r4, r0
   1e074:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1e078:	cmp	r0, #0
   1e07c:	beq	205b0 <main@@Base+0xa520>
   1e080:	ldr	r0, [sp, #36]	; 0x24
   1e084:	mov	r1, #1
   1e088:	b	1e0e8 <main@@Base+0x8058>
   1e08c:	bne	1e09c <main@@Base+0x800c>
   1e090:	ldrb	r0, [r1, #2]!
   1e094:	cmp	r0, #32
   1e098:	bhi	1e0b0 <main@@Base+0x8020>
   1e09c:	mov	r1, r2
   1e0a0:	ldr	r0, [sp, #36]	; 0x24
   1e0a4:	ldr	r2, [sp, #44]	; 0x2c
   1e0a8:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1e0ac:	mov	r1, r0
   1e0b0:	cmp	r9, r1
   1e0b4:	beq	1e10c <main@@Base+0x807c>
   1e0b8:	mov	r0, #0
   1e0bc:	ldr	r2, [sp, #44]	; 0x2c
   1e0c0:	sub	r3, fp, #56	; 0x38
   1e0c4:	str	r0, [sp]
   1e0c8:	ldr	r0, [sp, #36]	; 0x24
   1e0cc:	bl	35810 <flatcc_json_parser_build_uint8_vector_base64@@Base>
   1e0d0:	mov	r4, r0
   1e0d4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1e0d8:	cmp	r0, #0
   1e0dc:	beq	205b0 <main@@Base+0xa520>
   1e0e0:	ldr	r0, [sp, #36]	; 0x24
   1e0e4:	mov	r1, #2
   1e0e8:	ldr	r0, [r0]
   1e0ec:	bl	30a20 <flatcc_builder_table_add_offset@@Base>
   1e0f0:	cmp	r0, #0
   1e0f4:	beq	205b0 <main@@Base+0xa520>
   1e0f8:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1e0fc:	str	r1, [r0]
   1e100:	ldr	r5, [sp, #44]	; 0x2c
   1e104:	ldr	r8, [sp, #36]	; 0x24
   1e108:	b	1e128 <main@@Base+0x8098>
   1e10c:	ldr	r8, [sp, #36]	; 0x24
   1e110:	ldr	r5, [sp, #44]	; 0x2c
   1e114:	mov	r1, r9
   1e118:	mov	r0, r8
   1e11c:	mov	r2, r5
   1e120:	bl	33ecc <flatcc_json_parser_unmatched_symbol@@Base>
   1e124:	mov	r4, r0
   1e128:	sub	r0, r5, r4
   1e12c:	cmp	r0, #2
   1e130:	blt	1e15c <main@@Base+0x80cc>
   1e134:	ldrb	r0, [r4]
   1e138:	cmp	r0, #32
   1e13c:	bls	1e148 <main@@Base+0x80b8>
   1e140:	mov	r2, r4
   1e144:	b	1e170 <main@@Base+0x80e0>
   1e148:	bne	1e15c <main@@Base+0x80cc>
   1e14c:	mov	r2, r4
   1e150:	ldrb	r0, [r2, #1]!
   1e154:	cmp	r0, #32
   1e158:	bhi	1e170 <main@@Base+0x80e0>
   1e15c:	mov	r0, r8
   1e160:	mov	r1, r4
   1e164:	mov	r2, r5
   1e168:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1e16c:	mov	r2, r0
   1e170:	cmp	r2, r5
   1e174:	beq	1e9b8 <main@@Base+0x8928>
   1e178:	ldrb	r0, [r2]
   1e17c:	cmp	r0, #44	; 0x2c
   1e180:	bne	1ebc0 <main@@Base+0x8b30>
   1e184:	add	r1, r2, #1
   1e188:	sub	r0, r5, r1
   1e18c:	cmp	r0, #2
   1e190:	blt	1e1b8 <main@@Base+0x8128>
   1e194:	ldrb	r0, [r1]
   1e198:	cmp	r0, #32
   1e19c:	bls	1e1a8 <main@@Base+0x8118>
   1e1a0:	mov	r2, r1
   1e1a4:	b	1e1c8 <main@@Base+0x8138>
   1e1a8:	bne	1e1b8 <main@@Base+0x8128>
   1e1ac:	ldrb	r0, [r2, #2]!
   1e1b0:	cmp	r0, #32
   1e1b4:	bhi	1e1c8 <main@@Base+0x8138>
   1e1b8:	mov	r0, r8
   1e1bc:	mov	r2, r5
   1e1c0:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1e1c4:	mov	r2, r0
   1e1c8:	cmp	r2, r5
   1e1cc:	beq	1ec04 <main@@Base+0x8b74>
   1e1d0:	ldrb	r0, [r2]
   1e1d4:	cmp	r0, #125	; 0x7d
   1e1d8:	bne	1db48 <main@@Base+0x7ab8>
   1e1dc:	b	1ebd0 <main@@Base+0x8b40>
   1e1e0:	ldr	r5, [sp, #44]	; 0x2c
   1e1e4:	ldr	r8, [sp, #36]	; 0x24
   1e1e8:	ldr	sl, [sp, #40]	; 0x28
   1e1ec:	bne	1e1fc <main@@Base+0x816c>
   1e1f0:	ldrb	r0, [r4, #2]!
   1e1f4:	cmp	r0, #32
   1e1f8:	bhi	1e20c <main@@Base+0x817c>
   1e1fc:	mov	r0, r8
   1e200:	mov	r2, r5
   1e204:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1e208:	mov	r4, r0
   1e20c:	cmp	r7, r4
   1e210:	beq	1e268 <main@@Base+0x81d8>
   1e214:	ldr	r0, [r8]
   1e218:	mov	r1, #8
   1e21c:	mov	r2, #8
   1e220:	mvn	r3, #-536870912	; 0xe0000000
   1e224:	bl	2f4c0 <flatcc_builder_start_vector@@Base>
   1e228:	cmp	r0, #0
   1e22c:	bne	20b10 <main@@Base+0xaa80>
   1e230:	cmp	r4, r5
   1e234:	beq	1e274 <main@@Base+0x81e4>
   1e238:	ldrb	r0, [r4]
   1e23c:	cmp	r0, #91	; 0x5b
   1e240:	bne	1e274 <main@@Base+0x81e4>
   1e244:	add	r1, r4, #1
   1e248:	sub	r0, r5, r1
   1e24c:	cmp	r0, #2
   1e250:	blt	1e9d4 <main@@Base+0x8944>
   1e254:	ldrb	r0, [r1]
   1e258:	cmp	r0, #32
   1e25c:	bls	1e9c4 <main@@Base+0x8934>
   1e260:	mov	r4, r1
   1e264:	b	1e9e4 <main@@Base+0x8954>
   1e268:	mov	r0, r8
   1e26c:	mov	r1, r7
   1e270:	b	1ee10 <main@@Base+0x8d80>
   1e274:	ldr	r8, [sp, #36]	; 0x24
   1e278:	mov	r1, r4
   1e27c:	mov	r2, r5
   1e280:	mov	r3, #22
   1e284:	mov	r0, r8
   1e288:	bl	337ac <flatcc_json_parser_set_error@@Base>
   1e28c:	mov	r4, r0
   1e290:	ldr	r0, [r8]
   1e294:	bl	3052c <flatcc_builder_end_vector@@Base>
   1e298:	cmp	r0, #0
   1e29c:	str	r0, [sp, #52]	; 0x34
   1e2a0:	beq	20ad8 <main@@Base+0xaa48>
   1e2a4:	ldr	r0, [r8]
   1e2a8:	mov	r1, #33	; 0x21
   1e2ac:	bl	30a20 <flatcc_builder_table_add_offset@@Base>
   1e2b0:	cmp	r0, #0
   1e2b4:	beq	20ad8 <main@@Base+0xaa48>
   1e2b8:	ldr	r1, [sp, #52]	; 0x34
   1e2bc:	str	r1, [r0]
   1e2c0:	b	1ef88 <main@@Base+0x8ef8>
   1e2c4:	mov	r6, r0
   1e2c8:	ldr	r5, [sp, #44]	; 0x2c
   1e2cc:	ldr	r8, [sp, #36]	; 0x24
   1e2d0:	str	r6, [fp, #-60]	; 0xffffffc4
   1e2d4:	ldr	sl, [sp, #40]	; 0x28
   1e2d8:	cmp	r7, r4
   1e2dc:	bne	1e31c <main@@Base+0x828c>
   1e2e0:	movw	r3, #45328	; 0xb110
   1e2e4:	sub	r0, fp, #60	; 0x3c
   1e2e8:	mov	r1, r7
   1e2ec:	mov	r2, r5
   1e2f0:	str	r0, [sp]
   1e2f4:	mov	r0, r8
   1e2f8:	movt	r3, #5
   1e2fc:	bl	24cd4 <main@@Base+0xec44>
   1e300:	mov	r4, r0
   1e304:	cmp	r0, r7
   1e308:	cmpne	r4, r5
   1e30c:	beq	20b0c <main@@Base+0xaa7c>
   1e310:	ldr	r6, [fp, #-60]	; 0xffffffc4
   1e314:	ldr	r8, [sp, #36]	; 0x24
   1e318:	ldr	sl, [sp, #40]	; 0x28
   1e31c:	cmp	r6, #0
   1e320:	bne	1e330 <main@@Base+0x82a0>
   1e324:	ldrb	r0, [r8, #8]
   1e328:	tst	r0, #2
   1e32c:	beq	1ee1c <main@@Base+0x8d8c>
   1e330:	ldr	r0, [r8]
   1e334:	mov	r1, #20
   1e338:	mov	r2, #4
   1e33c:	mov	r3, #4
   1e340:	bl	30b5c <flatcc_builder_table_add@@Base>
   1e344:	cmp	r0, #0
   1e348:	beq	20b0c <main@@Base+0xaa7c>
   1e34c:	str	r6, [r0]
   1e350:	b	1ee1c <main@@Base+0x8d8c>
   1e354:	ldr	r5, [sp, #44]	; 0x2c
   1e358:	ldr	r8, [sp, #36]	; 0x24
   1e35c:	bne	1e36c <main@@Base+0x82dc>
   1e360:	ldrb	r0, [r4, #2]!
   1e364:	cmp	r0, #32
   1e368:	bhi	1e37c <main@@Base+0x82ec>
   1e36c:	mov	r0, r8
   1e370:	mov	r2, r5
   1e374:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1e378:	mov	r4, r0
   1e37c:	cmp	r4, r5
   1e380:	beq	1e3ec <main@@Base+0x835c>
   1e384:	ldrb	r0, [r4]
   1e388:	cmp	r0, #93	; 0x5d
   1e38c:	bne	1e3e8 <main@@Base+0x8358>
   1e390:	ldr	r5, [sp, #44]	; 0x2c
   1e394:	ldr	r8, [sp, #36]	; 0x24
   1e398:	ldr	sl, [sp, #40]	; 0x28
   1e39c:	add	r1, r4, #1
   1e3a0:	sub	r0, r5, r1
   1e3a4:	cmp	r0, #2
   1e3a8:	blt	1e3d4 <main@@Base+0x8344>
   1e3ac:	ldrb	r0, [r1]
   1e3b0:	cmp	r0, #32
   1e3b4:	bhi	20314 <main@@Base+0xa284>
   1e3b8:	ldr	r5, [sp, #44]	; 0x2c
   1e3bc:	ldr	r8, [sp, #36]	; 0x24
   1e3c0:	ldr	sl, [sp, #40]	; 0x28
   1e3c4:	bne	1e3d4 <main@@Base+0x8344>
   1e3c8:	ldrb	r0, [r4, #2]!
   1e3cc:	cmp	r0, #32
   1e3d0:	bhi	20924 <main@@Base+0xa894>
   1e3d4:	mov	r0, r8
   1e3d8:	mov	r2, r5
   1e3dc:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1e3e0:	mov	r4, r0
   1e3e4:	b	20924 <main@@Base+0xa894>
   1e3e8:	mov	r5, r4
   1e3ec:	mov	r0, #0
   1e3f0:	mov	r1, #1
   1e3f4:	str	r0, [sp, #60]	; 0x3c
   1e3f8:	str	r0, [sp, #56]	; 0x38
   1e3fc:	ldr	r0, [sp, #36]	; 0x24
   1e400:	ldr	r0, [r0]
   1e404:	bl	2eca8 <flatcc_builder_extend_vector@@Base>
   1e408:	cmp	r0, #0
   1e40c:	beq	20ae0 <main@@Base+0xaa50>
   1e410:	mov	r4, r5
   1e414:	ldr	r5, [sp, #44]	; 0x2c
   1e418:	ldr	r8, [sp, #36]	; 0x24
   1e41c:	mov	r7, r0
   1e420:	mov	r0, #0
   1e424:	cmp	r4, r5
   1e428:	str	r0, [fp, #-52]	; 0xffffffcc
   1e42c:	str	r0, [fp, #-56]	; 0xffffffc8
   1e430:	str	r0, [sp, #60]	; 0x3c
   1e434:	str	r0, [sp, #56]	; 0x38
   1e438:	str	r0, [fp, #-60]	; 0xffffffc4
   1e43c:	beq	1e49c <main@@Base+0x840c>
   1e440:	sub	r0, fp, #56	; 0x38
   1e444:	mov	r1, r4
   1e448:	mov	r2, r5
   1e44c:	sub	r3, fp, #60	; 0x3c
   1e450:	str	r0, [sp]
   1e454:	mov	r0, r8
   1e458:	bl	356c0 <flatcc_json_parser_integer@@Base>
   1e45c:	cmp	r0, r4
   1e460:	beq	1e4a8 <main@@Base+0x8418>
   1e464:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1e468:	mov	r1, r0
   1e46c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1e470:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1e474:	cmp	r2, #0
   1e478:	beq	1e4b8 <main@@Base+0x8428>
   1e47c:	rsbs	r2, r0, #0
   1e480:	mov	r2, #-2147483648	; 0x80000000
   1e484:	sbcs	r2, r2, r3
   1e488:	bcs	1e4e8 <main@@Base+0x8458>
   1e48c:	ldr	r8, [sp, #36]	; 0x24
   1e490:	ldr	r5, [sp, #44]	; 0x2c
   1e494:	mov	r3, #8
   1e498:	b	1e4cc <main@@Base+0x843c>
   1e49c:	mov	r3, #0
   1e4a0:	mov	r1, r5
   1e4a4:	b	1e500 <main@@Base+0x8470>
   1e4a8:	mov	r0, #0
   1e4ac:	mov	r3, #0
   1e4b0:	mov	r1, r4
   1e4b4:	b	1e500 <main@@Base+0x8470>
   1e4b8:	cmn	r3, #1
   1e4bc:	bgt	1e4f0 <main@@Base+0x8460>
   1e4c0:	ldr	r8, [sp, #36]	; 0x24
   1e4c4:	ldr	r5, [sp, #44]	; 0x2c
   1e4c8:	mov	r3, #7
   1e4cc:	mov	r0, r8
   1e4d0:	mov	r2, r5
   1e4d4:	bl	337ac <flatcc_json_parser_set_error@@Base>
   1e4d8:	mov	r1, r0
   1e4dc:	mov	r0, #0
   1e4e0:	mov	r3, #0
   1e4e4:	b	1e500 <main@@Base+0x8470>
   1e4e8:	rsbs	r0, r0, #0
   1e4ec:	rsc	r3, r3, #0
   1e4f0:	ldr	r5, [sp, #44]	; 0x2c
   1e4f4:	ldr	r8, [sp, #36]	; 0x24
   1e4f8:	str	r0, [sp, #56]	; 0x38
   1e4fc:	str	r3, [sp, #60]	; 0x3c
   1e500:	cmp	r4, r1
   1e504:	bne	1e544 <main@@Base+0x84b4>
   1e508:	movw	r3, #45436	; 0xb17c
   1e50c:	add	r0, sp, #56	; 0x38
   1e510:	mov	r1, r4
   1e514:	mov	r2, r5
   1e518:	str	r0, [sp]
   1e51c:	mov	r0, r8
   1e520:	movt	r3, #5
   1e524:	bl	24ed4 <main@@Base+0xee44>
   1e528:	mov	r1, r0
   1e52c:	cmp	r0, r4
   1e530:	cmpne	r1, r5
   1e534:	beq	20ae8 <main@@Base+0xaa58>
   1e538:	ldr	r0, [sp, #56]	; 0x38
   1e53c:	ldr	r3, [sp, #60]	; 0x3c
   1e540:	ldr	r8, [sp, #36]	; 0x24
   1e544:	stm	r7, {r0, r3}
   1e548:	sub	r0, r5, r1
   1e54c:	cmp	r0, #2
   1e550:	blt	1e57c <main@@Base+0x84ec>
   1e554:	ldrb	r0, [r1]
   1e558:	cmp	r0, #32
   1e55c:	bls	1e568 <main@@Base+0x84d8>
   1e560:	mov	r4, r1
   1e564:	b	1e58c <main@@Base+0x84fc>
   1e568:	bne	1e57c <main@@Base+0x84ec>
   1e56c:	mov	r4, r1
   1e570:	ldrb	r0, [r4, #1]!
   1e574:	cmp	r0, #32
   1e578:	bhi	1e58c <main@@Base+0x84fc>
   1e57c:	mov	r0, r8
   1e580:	mov	r2, r5
   1e584:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1e588:	mov	r4, r0
   1e58c:	cmp	r4, r5
   1e590:	beq	1f918 <main@@Base+0x9888>
   1e594:	ldrb	r0, [r4]
   1e598:	cmp	r0, #44	; 0x2c
   1e59c:	bne	1f92c <main@@Base+0x989c>
   1e5a0:	add	r1, r4, #1
   1e5a4:	sub	r0, r5, r1
   1e5a8:	cmp	r0, #2
   1e5ac:	blt	1e5d4 <main@@Base+0x8544>
   1e5b0:	ldrb	r0, [r1]
   1e5b4:	cmp	r0, #32
   1e5b8:	bls	1e5c4 <main@@Base+0x8534>
   1e5bc:	mov	r4, r1
   1e5c0:	b	1e5e4 <main@@Base+0x8554>
   1e5c4:	bne	1e5d4 <main@@Base+0x8544>
   1e5c8:	ldrb	r0, [r4, #2]!
   1e5cc:	cmp	r0, #32
   1e5d0:	bhi	1e5e4 <main@@Base+0x8554>
   1e5d4:	mov	r0, r8
   1e5d8:	mov	r2, r5
   1e5dc:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1e5e0:	mov	r4, r0
   1e5e4:	cmp	r4, r5
   1e5e8:	beq	1f94c <main@@Base+0x98bc>
   1e5ec:	ldrb	r0, [r4]
   1e5f0:	cmp	r0, #93	; 0x5d
   1e5f4:	beq	202f8 <main@@Base+0xa268>
   1e5f8:	mov	r0, #0
   1e5fc:	mov	r1, #1
   1e600:	str	r0, [sp, #60]	; 0x3c
   1e604:	str	r0, [sp, #56]	; 0x38
   1e608:	ldr	r0, [r8]
   1e60c:	bl	2eca8 <flatcc_builder_extend_vector@@Base>
   1e610:	mov	r7, r0
   1e614:	cmp	r0, #0
   1e618:	bne	1e420 <main@@Base+0x8390>
   1e61c:	b	16fc4 <main@@Base+0xf34>
   1e620:	ldr	r5, [sp, #44]	; 0x2c
   1e624:	ldr	r8, [sp, #36]	; 0x24
   1e628:	ldr	sl, [sp, #40]	; 0x28
   1e62c:	bne	1e63c <main@@Base+0x85ac>
   1e630:	ldrb	r0, [r7, #2]!
   1e634:	cmp	r0, #32
   1e638:	bhi	1e64c <main@@Base+0x85bc>
   1e63c:	mov	r0, r8
   1e640:	mov	r2, r5
   1e644:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1e648:	mov	r7, r0
   1e64c:	cmp	r4, r7
   1e650:	beq	1ee08 <main@@Base+0x8d78>
   1e654:	mov	r6, #0
   1e658:	cmp	r7, r5
   1e65c:	str	r6, [fp, #-52]	; 0xffffffcc
   1e660:	str	r6, [fp, #-56]	; 0xffffffc8
   1e664:	str	r6, [sp, #60]	; 0x3c
   1e668:	str	r6, [sp, #56]	; 0x38
   1e66c:	str	r6, [fp, #-60]	; 0xffffffc4
   1e670:	beq	1e6cc <main@@Base+0x863c>
   1e674:	sub	r0, fp, #56	; 0x38
   1e678:	mov	r1, r7
   1e67c:	mov	r2, r5
   1e680:	sub	r3, fp, #60	; 0x3c
   1e684:	str	r0, [sp]
   1e688:	mov	r0, r8
   1e68c:	bl	356c0 <flatcc_json_parser_integer@@Base>
   1e690:	cmp	r0, r7
   1e694:	beq	1e6d8 <main@@Base+0x8648>
   1e698:	sub	r9, fp, #60	; 0x3c
   1e69c:	mov	r4, r0
   1e6a0:	ldm	r9, {r0, r6, r9}
   1e6a4:	cmp	r0, #0
   1e6a8:	beq	1e6e8 <main@@Base+0x8658>
   1e6ac:	subs	r0, r6, #1
   1e6b0:	sbcs	r0, r9, #-2147483648	; 0x80000000
   1e6b4:	bcc	1e718 <main@@Base+0x8688>
   1e6b8:	ldr	r8, [sp, #36]	; 0x24
   1e6bc:	ldr	r2, [sp, #44]	; 0x2c
   1e6c0:	mov	r1, r4
   1e6c4:	mov	r3, #8
   1e6c8:	b	1e700 <main@@Base+0x8670>
   1e6cc:	mov	r9, #0
   1e6d0:	mov	r4, r5
   1e6d4:	b	1e72c <main@@Base+0x869c>
   1e6d8:	mov	r6, #0
   1e6dc:	mov	r9, #0
   1e6e0:	mov	r4, r7
   1e6e4:	b	1e728 <main@@Base+0x8698>
   1e6e8:	cmn	r9, #1
   1e6ec:	bgt	1e720 <main@@Base+0x8690>
   1e6f0:	ldr	r8, [sp, #36]	; 0x24
   1e6f4:	ldr	r2, [sp, #44]	; 0x2c
   1e6f8:	mov	r1, r4
   1e6fc:	mov	r3, #7
   1e700:	mov	r0, r8
   1e704:	bl	337ac <flatcc_json_parser_set_error@@Base>
   1e708:	mov	r4, r0
   1e70c:	mov	r6, #0
   1e710:	mov	r9, #0
   1e714:	b	1e72c <main@@Base+0x869c>
   1e718:	rsbs	r6, r6, #0
   1e71c:	rsc	r9, r9, #0
   1e720:	str	r6, [sp, #56]	; 0x38
   1e724:	str	r9, [sp, #60]	; 0x3c
   1e728:	ldr	r8, [sp, #36]	; 0x24
   1e72c:	cmp	r7, r4
   1e730:	bne	1e774 <main@@Base+0x86e4>
   1e734:	ldr	r2, [sp, #44]	; 0x2c
   1e738:	movw	r3, #45352	; 0xb128
   1e73c:	add	r0, sp, #56	; 0x38
   1e740:	mov	r1, r7
   1e744:	str	r0, [sp]
   1e748:	mov	r0, r8
   1e74c:	movt	r3, #5
   1e750:	bl	24ed4 <main@@Base+0xee44>
   1e754:	cmp	r0, r7
   1e758:	mov	r4, r0
   1e75c:	ldrne	r0, [sp, #44]	; 0x2c
   1e760:	cmpne	r4, r0
   1e764:	beq	20b0c <main@@Base+0xaa7c>
   1e768:	ldr	r6, [sp, #56]	; 0x38
   1e76c:	ldr	r9, [sp, #60]	; 0x3c
   1e770:	ldr	r8, [sp, #36]	; 0x24
   1e774:	orrs	r0, r6, r9
   1e778:	bne	1e788 <main@@Base+0x86f8>
   1e77c:	ldrb	r0, [r8, #8]
   1e780:	tst	r0, #2
   1e784:	beq	1ef88 <main@@Base+0x8ef8>
   1e788:	ldr	r0, [r8]
   1e78c:	mov	r1, #22
   1e790:	mov	r2, #8
   1e794:	mov	r3, #8
   1e798:	bl	30b5c <flatcc_builder_table_add@@Base>
   1e79c:	cmp	r0, #0
   1e7a0:	beq	20b0c <main@@Base+0xaa7c>
   1e7a4:	stm	r0, {r6, r9}
   1e7a8:	b	1ef88 <main@@Base+0x8ef8>
   1e7ac:	ldr	sl, [sp, #40]	; 0x28
   1e7b0:	mov	r4, r5
   1e7b4:	b	1c7ec <main@@Base+0x675c>
   1e7b8:	cmp	r0, #93	; 0x5d
   1e7bc:	bne	205f0 <main@@Base+0xa560>
   1e7c0:	ldr	r5, [sp, #44]	; 0x2c
   1e7c4:	ldr	r8, [sp, #36]	; 0x24
   1e7c8:	add	r1, r2, #1
   1e7cc:	sub	r0, r5, r1
   1e7d0:	cmp	r0, #2
   1e7d4:	ldr	sl, [sp, #40]	; 0x28
   1e7d8:	blt	20754 <main@@Base+0xa6c4>
   1e7dc:	ldrb	r0, [r1]
   1e7e0:	cmp	r0, #32
   1e7e4:	bls	20734 <main@@Base+0xa6a4>
   1e7e8:	ldr	r5, [sp, #44]	; 0x2c
   1e7ec:	ldr	r8, [sp, #36]	; 0x24
   1e7f0:	ldr	sl, [sp, #40]	; 0x28
   1e7f4:	mov	r4, r1
   1e7f8:	b	1c7ec <main@@Base+0x675c>
   1e7fc:	mov	r0, r8
   1e800:	mov	r1, r5
   1e804:	b	20600 <main@@Base+0xa570>
   1e808:	ldr	r5, [sp, #44]	; 0x2c
   1e80c:	bne	1e81c <main@@Base+0x878c>
   1e810:	ldrb	r0, [r4, #2]!
   1e814:	cmp	r0, #32
   1e818:	bhi	1e82c <main@@Base+0x879c>
   1e81c:	ldr	r0, [sp, #36]	; 0x24
   1e820:	mov	r2, r5
   1e824:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1e828:	mov	r4, r0
   1e82c:	cmp	r4, r5
   1e830:	mov	r3, r5
   1e834:	beq	1e888 <main@@Base+0x87f8>
   1e838:	ldrb	r0, [r4]
   1e83c:	cmp	r0, #125	; 0x7d
   1e840:	bne	1e884 <main@@Base+0x87f4>
   1e844:	ldr	r5, [sp, #44]	; 0x2c
   1e848:	ldr	r8, [sp, #36]	; 0x24
   1e84c:	add	r1, r4, #1
   1e850:	sub	r0, r5, r1
   1e854:	cmp	r0, #2
   1e858:	blt	20960 <main@@Base+0xa8d0>
   1e85c:	ldrb	r0, [r1]
   1e860:	cmp	r0, #32
   1e864:	bhi	202e8 <main@@Base+0xa258>
   1e868:	ldr	r5, [sp, #44]	; 0x2c
   1e86c:	ldr	r8, [sp, #36]	; 0x24
   1e870:	bne	20960 <main@@Base+0xa8d0>
   1e874:	ldrb	r0, [r4, #2]!
   1e878:	cmp	r0, #32
   1e87c:	bhi	1c67c <main@@Base+0x65ec>
   1e880:	b	20960 <main@@Base+0xa8d0>
   1e884:	mov	r3, r4
   1e888:	ldr	r5, [sp, #44]	; 0x2c
   1e88c:	ldr	r8, [sp, #36]	; 0x24
   1e890:	cmp	r3, r5
   1e894:	mov	r1, r5
   1e898:	beq	1e8f0 <main@@Base+0x8860>
   1e89c:	ldrb	r0, [r3]
   1e8a0:	cmp	r0, #46	; 0x2e
   1e8a4:	beq	1e8c4 <main@@Base+0x8834>
   1e8a8:	cmp	r0, #34	; 0x22
   1e8ac:	bne	1e8e0 <main@@Base+0x8850>
   1e8b0:	ldr	r0, [sp, #32]
   1e8b4:	mov	r1, #0
   1e8b8:	str	r1, [r0]
   1e8bc:	add	r1, r3, #1
   1e8c0:	b	1e8f0 <main@@Base+0x8860>
   1e8c4:	mov	r1, r3
   1e8c8:	mov	r0, r8
   1e8cc:	mov	r2, r5
   1e8d0:	mov	r3, #5
   1e8d4:	bl	337ac <flatcc_json_parser_set_error@@Base>
   1e8d8:	mov	r1, r0
   1e8dc:	b	1e8f0 <main@@Base+0x8860>
   1e8e0:	ldr	r0, [sp, #32]
   1e8e4:	mov	r1, #1
   1e8e8:	str	r1, [r0]
   1e8ec:	mov	r1, r3
   1e8f0:	mov	r0, r8
   1e8f4:	mov	r2, r5
   1e8f8:	bl	33ecc <flatcc_json_parser_unmatched_symbol@@Base>
   1e8fc:	mov	r2, r0
   1e900:	sub	r0, r5, r0
   1e904:	cmp	r0, #2
   1e908:	blt	1e934 <main@@Base+0x88a4>
   1e90c:	ldrb	r0, [r2]
   1e910:	cmp	r0, #32
   1e914:	bls	1e920 <main@@Base+0x8890>
   1e918:	mov	r3, r2
   1e91c:	b	1e948 <main@@Base+0x88b8>
   1e920:	bne	1e934 <main@@Base+0x88a4>
   1e924:	mov	r3, r2
   1e928:	ldrb	r0, [r3, #1]!
   1e92c:	cmp	r0, #32
   1e930:	bhi	1e948 <main@@Base+0x88b8>
   1e934:	mov	r1, r2
   1e938:	mov	r0, r8
   1e93c:	mov	r2, r5
   1e940:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1e944:	mov	r3, r0
   1e948:	cmp	r3, r5
   1e94c:	beq	1f944 <main@@Base+0x98b4>
   1e950:	ldrb	r0, [r3]
   1e954:	cmp	r0, #44	; 0x2c
   1e958:	bne	202bc <main@@Base+0xa22c>
   1e95c:	add	r1, r3, #1
   1e960:	sub	r0, r5, r1
   1e964:	cmp	r0, #2
   1e968:	blt	1e990 <main@@Base+0x8900>
   1e96c:	ldrb	r0, [r1]
   1e970:	cmp	r0, #32
   1e974:	bls	1e980 <main@@Base+0x88f0>
   1e978:	mov	r3, r1
   1e97c:	b	1e9a0 <main@@Base+0x8910>
   1e980:	bne	1e990 <main@@Base+0x8900>
   1e984:	ldrb	r0, [r3, #2]!
   1e988:	cmp	r0, #32
   1e98c:	bhi	1e9a0 <main@@Base+0x8910>
   1e990:	mov	r0, r8
   1e994:	mov	r2, r5
   1e998:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1e99c:	mov	r3, r0
   1e9a0:	cmp	r3, r5
   1e9a4:	beq	2031c <main@@Base+0xa28c>
   1e9a8:	ldrb	r0, [r3]
   1e9ac:	cmp	r0, #125	; 0x7d
   1e9b0:	bne	1e890 <main@@Base+0x8800>
   1e9b4:	b	202cc <main@@Base+0xa23c>
   1e9b8:	ldr	sl, [sp, #40]	; 0x28
   1e9bc:	mov	r4, r5
   1e9c0:	b	1bea4 <main@@Base+0x5e14>
   1e9c4:	bne	1e9d4 <main@@Base+0x8944>
   1e9c8:	ldrb	r0, [r4, #2]!
   1e9cc:	cmp	r0, #32
   1e9d0:	bhi	1e9e4 <main@@Base+0x8954>
   1e9d4:	ldr	r0, [sp, #36]	; 0x24
   1e9d8:	ldr	r2, [sp, #44]	; 0x2c
   1e9dc:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1e9e0:	mov	r4, r0
   1e9e4:	ldr	r7, [sp, #44]	; 0x2c
   1e9e8:	cmp	r4, r7
   1e9ec:	beq	1ea48 <main@@Base+0x89b8>
   1e9f0:	ldrb	r0, [r4]
   1e9f4:	cmp	r0, #93	; 0x5d
   1e9f8:	bne	1ea44 <main@@Base+0x89b4>
   1e9fc:	ldr	r0, [sp, #44]	; 0x2c
   1ea00:	ldr	r8, [sp, #36]	; 0x24
   1ea04:	add	r1, r4, #1
   1ea08:	sub	r0, r0, r1
   1ea0c:	cmp	r0, #2
   1ea10:	blt	1ea34 <main@@Base+0x89a4>
   1ea14:	ldrb	r0, [r1]
   1ea18:	cmp	r0, #32
   1ea1c:	bhi	206c8 <main@@Base+0xa638>
   1ea20:	ldr	r8, [sp, #36]	; 0x24
   1ea24:	bne	1ea34 <main@@Base+0x89a4>
   1ea28:	ldrb	r0, [r4, #2]!
   1ea2c:	cmp	r0, #32
   1ea30:	bhi	1e290 <main@@Base+0x8200>
   1ea34:	ldr	r2, [sp, #44]	; 0x2c
   1ea38:	mov	r0, r8
   1ea3c:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1ea40:	b	1e28c <main@@Base+0x81fc>
   1ea44:	mov	r7, r4
   1ea48:	mov	r0, #0
   1ea4c:	mov	r1, #1
   1ea50:	str	r0, [fp, #-52]	; 0xffffffcc
   1ea54:	str	r0, [fp, #-56]	; 0xffffffc8
   1ea58:	ldr	r0, [sp, #36]	; 0x24
   1ea5c:	ldr	r0, [r0]
   1ea60:	bl	2eca8 <flatcc_builder_extend_vector@@Base>
   1ea64:	cmp	r0, #0
   1ea68:	beq	20af0 <main@@Base+0xaa60>
   1ea6c:	ldr	r5, [sp, #44]	; 0x2c
   1ea70:	ldr	r8, [sp, #36]	; 0x24
   1ea74:	mov	r9, r0
   1ea78:	mov	r4, r7
   1ea7c:	mov	r0, r8
   1ea80:	mov	r1, r4
   1ea84:	mov	r2, r5
   1ea88:	sub	r3, fp, #56	; 0x38
   1ea8c:	bl	34c18 <flatcc_json_parser_double@@Base>
   1ea90:	mov	r7, r0
   1ea94:	cmp	r4, r0
   1ea98:	bne	1ead8 <main@@Base+0x8a48>
   1ea9c:	movw	r3, #45424	; 0xb170
   1eaa0:	sub	r0, fp, #56	; 0x38
   1eaa4:	mov	r1, r4
   1eaa8:	mov	r2, r5
   1eaac:	str	r0, [sp]
   1eab0:	mov	r0, r8
   1eab4:	movt	r3, #5
   1eab8:	bl	254ac <main@@Base+0xf41c>
   1eabc:	mov	r7, r0
   1eac0:	cmp	r0, r4
   1eac4:	beq	20af0 <main@@Base+0xaa60>
   1eac8:	ldr	r5, [sp, #44]	; 0x2c
   1eacc:	ldr	r8, [sp, #36]	; 0x24
   1ead0:	cmp	r7, r5
   1ead4:	beq	20af8 <main@@Base+0xaa68>
   1ead8:	vldr	d16, [fp, #-56]	; 0xffffffc8
   1eadc:	sub	r0, r5, r7
   1eae0:	cmp	r0, #2
   1eae4:	vstr	d16, [r9]
   1eae8:	blt	1eb14 <main@@Base+0x8a84>
   1eaec:	ldrb	r0, [r7]
   1eaf0:	cmp	r0, #32
   1eaf4:	bls	1eb00 <main@@Base+0x8a70>
   1eaf8:	mov	r4, r7
   1eafc:	b	1eb28 <main@@Base+0x8a98>
   1eb00:	bne	1eb14 <main@@Base+0x8a84>
   1eb04:	mov	r4, r7
   1eb08:	ldrb	r0, [r4, #1]!
   1eb0c:	cmp	r0, #32
   1eb10:	bhi	1eb28 <main@@Base+0x8a98>
   1eb14:	mov	r0, r8
   1eb18:	mov	r1, r7
   1eb1c:	mov	r2, r5
   1eb20:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1eb24:	mov	r4, r0
   1eb28:	cmp	r4, r5
   1eb2c:	beq	20620 <main@@Base+0xa590>
   1eb30:	ldrb	r0, [r4]
   1eb34:	cmp	r0, #44	; 0x2c
   1eb38:	bne	20628 <main@@Base+0xa598>
   1eb3c:	add	r1, r4, #1
   1eb40:	sub	r0, r5, r1
   1eb44:	cmp	r0, #2
   1eb48:	blt	1eb70 <main@@Base+0x8ae0>
   1eb4c:	ldrb	r0, [r1]
   1eb50:	cmp	r0, #32
   1eb54:	bls	1eb60 <main@@Base+0x8ad0>
   1eb58:	mov	r4, r1
   1eb5c:	b	1eb80 <main@@Base+0x8af0>
   1eb60:	bne	1eb70 <main@@Base+0x8ae0>
   1eb64:	ldrb	r0, [r4, #2]!
   1eb68:	cmp	r0, #32
   1eb6c:	bhi	1eb80 <main@@Base+0x8af0>
   1eb70:	mov	r0, r8
   1eb74:	mov	r2, r5
   1eb78:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1eb7c:	mov	r4, r0
   1eb80:	cmp	r4, r5
   1eb84:	beq	20640 <main@@Base+0xa5b0>
   1eb88:	ldrb	r0, [r4]
   1eb8c:	cmp	r0, #93	; 0x5d
   1eb90:	beq	206ac <main@@Base+0xa61c>
   1eb94:	mov	r0, #0
   1eb98:	mov	r1, #1
   1eb9c:	str	r0, [fp, #-52]	; 0xffffffcc
   1eba0:	str	r0, [fp, #-56]	; 0xffffffc8
   1eba4:	ldr	r0, [r8]
   1eba8:	bl	2eca8 <flatcc_builder_extend_vector@@Base>
   1ebac:	mov	r9, r0
   1ebb0:	cmp	r0, #0
   1ebb4:	mov	r7, r4
   1ebb8:	bne	1ea7c <main@@Base+0x89ec>
   1ebbc:	b	20af8 <main@@Base+0xaa68>
   1ebc0:	cmp	r0, #125	; 0x7d
   1ebc4:	bne	20658 <main@@Base+0xa5c8>
   1ebc8:	ldr	r5, [sp, #44]	; 0x2c
   1ebcc:	ldr	r8, [sp, #36]	; 0x24
   1ebd0:	add	r1, r2, #1
   1ebd4:	sub	r0, r5, r1
   1ebd8:	cmp	r0, #2
   1ebdc:	ldr	sl, [sp, #40]	; 0x28
   1ebe0:	blt	208a8 <main@@Base+0xa818>
   1ebe4:	ldrb	r0, [r1]
   1ebe8:	cmp	r0, #32
   1ebec:	bls	20888 <main@@Base+0xa7f8>
   1ebf0:	ldr	r5, [sp, #44]	; 0x2c
   1ebf4:	ldr	r8, [sp, #36]	; 0x24
   1ebf8:	ldr	sl, [sp, #40]	; 0x28
   1ebfc:	mov	r4, r1
   1ec00:	b	1bea4 <main@@Base+0x5e14>
   1ec04:	mov	r0, r8
   1ec08:	mov	r1, r5
   1ec0c:	b	20668 <main@@Base+0xa5d8>
   1ec10:	ldr	r5, [sp, #44]	; 0x2c
   1ec14:	ldr	r8, [sp, #36]	; 0x24
   1ec18:	bne	1ec28 <main@@Base+0x8b98>
   1ec1c:	ldrb	r0, [r7, #2]!
   1ec20:	cmp	r0, #32
   1ec24:	bhi	1ec38 <main@@Base+0x8ba8>
   1ec28:	mov	r0, r8
   1ec2c:	mov	r2, r5
   1ec30:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1ec34:	mov	r7, r0
   1ec38:	ldr	sl, [sp, #40]	; 0x28
   1ec3c:	cmp	r4, r7
   1ec40:	beq	1ee08 <main@@Base+0x8d78>
   1ec44:	mov	r6, #0
   1ec48:	cmp	r7, r5
   1ec4c:	str	r6, [fp, #-52]	; 0xffffffcc
   1ec50:	str	r6, [fp, #-56]	; 0xffffffc8
   1ec54:	str	r6, [fp, #-60]	; 0xffffffc4
   1ec58:	str	r6, [sp, #56]	; 0x38
   1ec5c:	beq	1eca8 <main@@Base+0x8c18>
   1ec60:	sub	r0, fp, #56	; 0x38
   1ec64:	mov	r1, r7
   1ec68:	mov	r2, r5
   1ec6c:	add	r3, sp, #56	; 0x38
   1ec70:	str	r0, [sp]
   1ec74:	ldr	r0, [sp, #36]	; 0x24
   1ec78:	bl	356c0 <flatcc_json_parser_integer@@Base>
   1ec7c:	cmp	r0, r7
   1ec80:	beq	1ecb0 <main@@Base+0x8c20>
   1ec84:	mov	r4, r0
   1ec88:	ldr	r0, [sp, #56]	; 0x38
   1ec8c:	cmp	r0, #0
   1ec90:	beq	1ecb8 <main@@Base+0x8c28>
   1ec94:	ldr	r0, [sp, #36]	; 0x24
   1ec98:	ldr	r2, [sp, #44]	; 0x2c
   1ec9c:	mov	r1, r4
   1eca0:	mov	r3, #8
   1eca4:	b	1ecd4 <main@@Base+0x8c44>
   1eca8:	mov	r4, r5
   1ecac:	b	1ecdc <main@@Base+0x8c4c>
   1ecb0:	mov	r4, r7
   1ecb4:	b	1ecdc <main@@Base+0x8c4c>
   1ecb8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1ecbc:	cmp	r0, #0
   1ecc0:	beq	20614 <main@@Base+0xa584>
   1ecc4:	ldr	r0, [sp, #36]	; 0x24
   1ecc8:	ldr	r2, [sp, #44]	; 0x2c
   1eccc:	mov	r1, r4
   1ecd0:	mov	r3, #7
   1ecd4:	bl	337ac <flatcc_json_parser_set_error@@Base>
   1ecd8:	mov	r4, r0
   1ecdc:	cmp	r7, r4
   1ece0:	bne	1ed1c <main@@Base+0x8c8c>
   1ece4:	sub	r0, fp, #60	; 0x3c
   1ece8:	ldr	r2, [sp, #44]	; 0x2c
   1ecec:	movw	r3, #45376	; 0xb140
   1ecf0:	mov	r1, r7
   1ecf4:	str	r0, [sp]
   1ecf8:	ldr	r0, [sp, #36]	; 0x24
   1ecfc:	movt	r3, #5
   1ed00:	bl	250e0 <main@@Base+0xf050>
   1ed04:	cmp	r0, r7
   1ed08:	mov	r4, r0
   1ed0c:	ldrne	r0, [sp, #44]	; 0x2c
   1ed10:	cmpne	r4, r0
   1ed14:	beq	20b0c <main@@Base+0xaa7c>
   1ed18:	ldr	r6, [fp, #-60]	; 0xffffffc4
   1ed1c:	ldr	r8, [sp, #36]	; 0x24
   1ed20:	cmp	r6, #0
   1ed24:	bne	1ed34 <main@@Base+0x8ca4>
   1ed28:	ldrb	r0, [r8, #8]
   1ed2c:	tst	r0, #2
   1ed30:	beq	1ef88 <main@@Base+0x8ef8>
   1ed34:	ldr	r0, [r8]
   1ed38:	mov	r1, #21
   1ed3c:	mov	r2, #4
   1ed40:	mov	r3, #4
   1ed44:	bl	30b5c <flatcc_builder_table_add@@Base>
   1ed48:	cmp	r0, #0
   1ed4c:	beq	20b0c <main@@Base+0xaa7c>
   1ed50:	ldr	r8, [sp, #36]	; 0x24
   1ed54:	str	r6, [r0]
   1ed58:	b	1ef88 <main@@Base+0x8ef8>
   1ed5c:	ldr	r5, [sp, #44]	; 0x2c
   1ed60:	ldr	r8, [sp, #36]	; 0x24
   1ed64:	bne	1ed74 <main@@Base+0x8ce4>
   1ed68:	ldrb	r0, [r7, #2]!
   1ed6c:	cmp	r0, #32
   1ed70:	bhi	1ed84 <main@@Base+0x8cf4>
   1ed74:	mov	r0, r8
   1ed78:	mov	r2, r5
   1ed7c:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1ed80:	mov	r7, r0
   1ed84:	ldr	sl, [sp, #40]	; 0x28
   1ed88:	cmp	r4, r7
   1ed8c:	beq	1ee08 <main@@Base+0x8d78>
   1ed90:	mov	r6, #0
   1ed94:	cmp	r7, r5
   1ed98:	str	r6, [fp, #-52]	; 0xffffffcc
   1ed9c:	str	r6, [fp, #-56]	; 0xffffffc8
   1eda0:	str	r6, [sp, #60]	; 0x3c
   1eda4:	str	r6, [sp, #56]	; 0x38
   1eda8:	str	r6, [fp, #-60]	; 0xffffffc4
   1edac:	beq	1eedc <main@@Base+0x8e4c>
   1edb0:	sub	r0, fp, #56	; 0x38
   1edb4:	mov	r1, r7
   1edb8:	mov	r2, r5
   1edbc:	sub	r3, fp, #60	; 0x3c
   1edc0:	str	r0, [sp]
   1edc4:	ldr	r0, [sp, #36]	; 0x24
   1edc8:	bl	356c0 <flatcc_json_parser_integer@@Base>
   1edcc:	cmp	r0, r7
   1edd0:	beq	1eee8 <main@@Base+0x8e58>
   1edd4:	mov	r4, r0
   1edd8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1eddc:	cmp	r0, #0
   1ede0:	beq	1eef8 <main@@Base+0x8e68>
   1ede4:	ldr	r0, [sp, #36]	; 0x24
   1ede8:	ldr	r2, [sp, #44]	; 0x2c
   1edec:	mov	r1, r4
   1edf0:	mov	r3, #8
   1edf4:	bl	337ac <flatcc_json_parser_set_error@@Base>
   1edf8:	mov	r4, r0
   1edfc:	mov	r6, #0
   1ee00:	mov	r9, #0
   1ee04:	b	1ef08 <main@@Base+0x8e78>
   1ee08:	mov	r0, r8
   1ee0c:	mov	r1, r4
   1ee10:	mov	r2, r5
   1ee14:	bl	33ecc <flatcc_json_parser_unmatched_symbol@@Base>
   1ee18:	mov	r4, r0
   1ee1c:	sub	r0, r5, r4
   1ee20:	cmp	r0, #2
   1ee24:	blt	1ee50 <main@@Base+0x8dc0>
   1ee28:	ldrb	r0, [r4]
   1ee2c:	cmp	r0, #32
   1ee30:	bls	1ee3c <main@@Base+0x8dac>
   1ee34:	mov	r2, r4
   1ee38:	b	1ee64 <main@@Base+0x8dd4>
   1ee3c:	bne	1ee50 <main@@Base+0x8dc0>
   1ee40:	mov	r2, r4
   1ee44:	ldrb	r0, [r2, #1]!
   1ee48:	cmp	r0, #32
   1ee4c:	bhi	1ee64 <main@@Base+0x8dd4>
   1ee50:	mov	r0, r8
   1ee54:	mov	r1, r4
   1ee58:	mov	r2, r5
   1ee5c:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1ee60:	mov	r2, r0
   1ee64:	cmp	r2, r5
   1ee68:	beq	20a24 <main@@Base+0xa994>
   1ee6c:	ldrb	r0, [r2]
   1ee70:	cmp	r0, #44	; 0x2c
   1ee74:	bne	20a2c <main@@Base+0xa99c>
   1ee78:	add	r1, r2, #1
   1ee7c:	sub	r0, r5, r1
   1ee80:	cmp	r0, #2
   1ee84:	blt	1eeac <main@@Base+0x8e1c>
   1ee88:	ldrb	r0, [r1]
   1ee8c:	cmp	r0, #32
   1ee90:	bls	1ee9c <main@@Base+0x8e0c>
   1ee94:	mov	r2, r1
   1ee98:	b	1eebc <main@@Base+0x8e2c>
   1ee9c:	bne	1eeac <main@@Base+0x8e1c>
   1eea0:	ldrb	r0, [r2, #2]!
   1eea4:	cmp	r0, #32
   1eea8:	bhi	1eebc <main@@Base+0x8e2c>
   1eeac:	mov	r0, r8
   1eeb0:	mov	r2, r5
   1eeb4:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1eeb8:	mov	r2, r0
   1eebc:	cmp	r2, r5
   1eec0:	beq	20a7c <main@@Base+0xa9ec>
   1eec4:	ldrb	r0, [r2]
   1eec8:	movw	lr, #29556	; 0x7374
   1eecc:	movt	lr, #29797	; 0x7465
   1eed0:	cmp	r0, #125	; 0x7d
   1eed4:	bne	17174 <main@@Base+0x10e4>
   1eed8:	b	20a34 <main@@Base+0xa9a4>
   1eedc:	mov	r9, #0
   1eee0:	mov	r4, r5
   1eee4:	b	1ef08 <main@@Base+0x8e78>
   1eee8:	mov	r6, #0
   1eeec:	mov	r9, #0
   1eef0:	mov	r4, r7
   1eef4:	b	1ef08 <main@@Base+0x8e78>
   1eef8:	ldr	r6, [fp, #-56]	; 0xffffffc8
   1eefc:	ldr	r9, [fp, #-52]	; 0xffffffcc
   1ef00:	str	r9, [sp, #60]	; 0x3c
   1ef04:	str	r6, [sp, #56]	; 0x38
   1ef08:	cmp	r7, r4
   1ef0c:	bne	1ef4c <main@@Base+0x8ebc>
   1ef10:	add	r0, sp, #56	; 0x38
   1ef14:	ldr	r2, [sp, #44]	; 0x2c
   1ef18:	movw	r3, #45400	; 0xb158
   1ef1c:	mov	r1, r7
   1ef20:	str	r0, [sp]
   1ef24:	ldr	r0, [sp, #36]	; 0x24
   1ef28:	movt	r3, #5
   1ef2c:	bl	252cc <main@@Base+0xf23c>
   1ef30:	cmp	r0, r7
   1ef34:	mov	r4, r0
   1ef38:	ldrne	r0, [sp, #44]	; 0x2c
   1ef3c:	cmpne	r4, r0
   1ef40:	beq	20b0c <main@@Base+0xaa7c>
   1ef44:	ldr	r6, [sp, #56]	; 0x38
   1ef48:	ldr	r9, [sp, #60]	; 0x3c
   1ef4c:	ldr	r8, [sp, #36]	; 0x24
   1ef50:	orrs	r0, r6, r9
   1ef54:	bne	1ef64 <main@@Base+0x8ed4>
   1ef58:	ldrb	r0, [r8, #8]
   1ef5c:	tst	r0, #2
   1ef60:	beq	1ef88 <main@@Base+0x8ef8>
   1ef64:	ldr	r0, [r8]
   1ef68:	mov	r1, #23
   1ef6c:	mov	r2, #8
   1ef70:	mov	r3, #8
   1ef74:	bl	30b5c <flatcc_builder_table_add@@Base>
   1ef78:	cmp	r0, #0
   1ef7c:	beq	20b0c <main@@Base+0xaa7c>
   1ef80:	stm	r0, {r6, r9}
   1ef84:	ldr	r8, [sp, #36]	; 0x24
   1ef88:	ldr	r5, [sp, #44]	; 0x2c
   1ef8c:	b	1a4d0 <main@@Base+0x4440>
   1ef90:	ldr	r8, [sp, #36]	; 0x24
   1ef94:	ldr	r5, [sp, #44]	; 0x2c
   1ef98:	mov	r1, r4
   1ef9c:	mov	r3, #9
   1efa0:	mov	r0, r8
   1efa4:	mov	r2, r5
   1efa8:	bl	337ac <flatcc_json_parser_set_error@@Base>
   1efac:	ldr	sl, [sp, #40]	; 0x28
   1efb0:	b	1a4ec <main@@Base+0x445c>
   1efb4:	ldr	sl, [sp, #40]	; 0x28
   1efb8:	mov	r4, r5
   1efbc:	b	1d074 <main@@Base+0x6fe4>
   1efc0:	bne	1efd0 <main@@Base+0x8f40>
   1efc4:	ldrb	r0, [r4, #2]!
   1efc8:	cmp	r0, #32
   1efcc:	bhi	1efe0 <main@@Base+0x8f50>
   1efd0:	ldr	r0, [sp, #36]	; 0x24
   1efd4:	ldr	r2, [sp, #44]	; 0x2c
   1efd8:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1efdc:	mov	r4, r0
   1efe0:	ldr	r2, [sp, #44]	; 0x2c
   1efe4:	cmp	r4, r2
   1efe8:	beq	1f030 <main@@Base+0x8fa0>
   1efec:	ldrb	r0, [r4]
   1eff0:	cmp	r0, #125	; 0x7d
   1eff4:	bne	1f02c <main@@Base+0x8f9c>
   1eff8:	ldr	r0, [sp, #44]	; 0x2c
   1effc:	add	r1, r4, #1
   1f000:	sub	r0, r0, r1
   1f004:	cmp	r0, #2
   1f008:	blt	20a14 <main@@Base+0xa984>
   1f00c:	ldrb	r0, [r1]
   1f010:	cmp	r0, #32
   1f014:	bhi	207d0 <main@@Base+0xa740>
   1f018:	bne	20a14 <main@@Base+0xa984>
   1f01c:	ldrb	r0, [r4, #2]!
   1f020:	cmp	r0, #32
   1f024:	bhi	1ca8c <main@@Base+0x69fc>
   1f028:	b	20a14 <main@@Base+0xa984>
   1f02c:	mov	r2, r4
   1f030:	ldr	r5, [sp, #44]	; 0x2c
   1f034:	ldr	r6, [sp, #36]	; 0x24
   1f038:	cmp	r2, r5
   1f03c:	mov	r9, r5
   1f040:	beq	1f094 <main@@Base+0x9004>
   1f044:	ldrb	r0, [r2]
   1f048:	cmp	r0, #46	; 0x2e
   1f04c:	beq	1f068 <main@@Base+0x8fd8>
   1f050:	cmp	r0, #34	; 0x22
   1f054:	bne	1f084 <main@@Base+0x8ff4>
   1f058:	ldr	r0, [sp, #32]
   1f05c:	mov	r1, #0
   1f060:	add	r9, r2, #1
   1f064:	b	1f090 <main@@Base+0x9000>
   1f068:	mov	r1, r2
   1f06c:	mov	r0, r6
   1f070:	mov	r2, r5
   1f074:	mov	r3, #5
   1f078:	bl	337ac <flatcc_json_parser_set_error@@Base>
   1f07c:	mov	r9, r0
   1f080:	b	1f094 <main@@Base+0x9004>
   1f084:	ldr	r0, [sp, #32]
   1f088:	mov	r1, #1
   1f08c:	mov	r9, r2
   1f090:	str	r1, [r0]
   1f094:	sub	lr, r5, r9
   1f098:	mov	r0, #8
   1f09c:	cmp	lr, #8
   1f0a0:	movcc	r0, lr
   1f0a4:	and	r0, r0, #15
   1f0a8:	sub	r7, r0, #1
   1f0ac:	cmp	r7, #7
   1f0b0:	bhi	1f7d4 <main@@Base+0x9744>
   1f0b4:	add	r4, pc, #32
   1f0b8:	mov	r1, #0
   1f0bc:	mov	ip, #0
   1f0c0:	mov	r8, #0
   1f0c4:	mov	r6, #0
   1f0c8:	mov	r3, #0
   1f0cc:	mov	r5, #0
   1f0d0:	mov	r2, #0
   1f0d4:	mov	r0, #0
   1f0d8:	ldr	pc, [r4, r7, lsl #2]
   1f0dc:	andeq	pc, r1, r0, asr #2
   1f0e0:	andeq	pc, r1, r8, lsr r1	; <UNPREDICTABLE>
   1f0e4:	andeq	pc, r1, r0, lsr r1	; <UNPREDICTABLE>
   1f0e8:	andeq	pc, r1, r8, lsr #2
   1f0ec:	andeq	pc, r1, ip, lsl r1	; <UNPREDICTABLE>
   1f0f0:	andeq	pc, r1, r0, lsl r1	; <UNPREDICTABLE>
   1f0f4:	andeq	pc, r1, r0, lsl #2
   1f0f8:	strdeq	pc, [r1], -ip
   1f0fc:	ldrb	ip, [r9, #7]
   1f100:	ldrb	r0, [r9, #6]
   1f104:	mov	r8, r1
   1f108:	orr	r0, ip, r0, lsl #8
   1f10c:	mov	r1, r0
   1f110:	ldrb	r0, [r9, #5]
   1f114:	mov	r6, r8
   1f118:	orr	r1, r1, r0, lsl #16
   1f11c:	ldrb	r0, [r9, #4]
   1f120:	mov	r3, r6
   1f124:	orr	r1, r1, r0, lsl #24
   1f128:	ldrb	r0, [r9, #3]
   1f12c:	orr	r5, r0, r3
   1f130:	ldrb	r0, [r9, #2]
   1f134:	orr	r2, r5, r0, lsl #8
   1f138:	ldrb	r0, [r9, #1]
   1f13c:	orr	r0, r2, r0, lsl #16
   1f140:	ldrb	r2, [r9]
   1f144:	orr	r2, r0, r2, lsl #24
   1f148:	movw	r0, #65535	; 0xffff
   1f14c:	movt	r0, #26979	; 0x6963
   1f150:	cmp	r2, r0
   1f154:	bhi	1f1bc <main@@Base+0x912c>
   1f158:	movw	r0, #30062	; 0x756e
   1f15c:	and	r1, r1, #-16777216	; 0xff000000
   1f160:	movt	r0, #25455	; 0x636f
   1f164:	eor	r1, r1, #1946157056	; 0x74000000
   1f168:	eor	r0, r2, r0
   1f16c:	orrs	r0, r1, r0
   1f170:	bne	1f7d4 <main@@Base+0x9744>
   1f174:	cmp	lr, #6
   1f178:	mov	r7, r9
   1f17c:	blt	1f4a4 <main@@Base+0x9414>
   1f180:	ldr	r2, [sp, #32]
   1f184:	mov	r1, r9
   1f188:	ldrb	r0, [r1, #5]!
   1f18c:	ldr	r2, [r2]
   1f190:	cmp	r2, #0
   1f194:	beq	1f274 <main@@Base+0x91e4>
   1f198:	cmp	r0, #33	; 0x21
   1f19c:	bcc	1f1ac <main@@Base+0x911c>
   1f1a0:	cmp	r0, #58	; 0x3a
   1f1a4:	mov	r7, r9
   1f1a8:	bne	1f4a4 <main@@Base+0x9414>
   1f1ac:	ldr	r0, [sp, #32]
   1f1b0:	mov	r2, #0
   1f1b4:	str	r2, [r0]
   1f1b8:	b	1f284 <main@@Base+0x91f4>
   1f1bc:	movw	r1, #27648	; 0x6c00
   1f1c0:	bic	r0, r2, #255	; 0xff
   1f1c4:	movt	r1, #30305	; 0x7661
   1f1c8:	teq	r0, r1
   1f1cc:	bne	1f218 <main@@Base+0x9188>
   1f1d0:	cmp	lr, #4
   1f1d4:	mov	r7, r9
   1f1d8:	blt	1f600 <main@@Base+0x9570>
   1f1dc:	ldr	r2, [sp, #32]
   1f1e0:	mov	r1, r9
   1f1e4:	ldrb	r0, [r1, #3]!
   1f1e8:	ldr	r2, [r2]
   1f1ec:	cmp	r2, #0
   1f1f0:	beq	1f2a8 <main@@Base+0x9218>
   1f1f4:	cmp	r0, #33	; 0x21
   1f1f8:	bcc	1f208 <main@@Base+0x9178>
   1f1fc:	cmp	r0, #58	; 0x3a
   1f200:	mov	r7, r9
   1f204:	bne	1f600 <main@@Base+0x9570>
   1f208:	ldr	r0, [sp, #32]
   1f20c:	mov	r2, #0
   1f210:	str	r2, [r0]
   1f214:	b	1f2b8 <main@@Base+0x9228>
   1f218:	movw	r0, #0
   1f21c:	bfc	r2, #0, #16
   1f220:	movt	r0, #26980	; 0x6964
   1f224:	teq	r2, r0
   1f228:	bne	1f7d4 <main@@Base+0x9744>
   1f22c:	cmp	lr, #3
   1f230:	mov	r1, r9
   1f234:	blt	1f780 <main@@Base+0x96f0>
   1f238:	ldr	r1, [sp, #32]
   1f23c:	mov	r2, r9
   1f240:	ldrb	r0, [r2, #2]!
   1f244:	ldr	r1, [r1]
   1f248:	cmp	r1, #0
   1f24c:	beq	1f2dc <main@@Base+0x924c>
   1f250:	cmp	r0, #33	; 0x21
   1f254:	bcc	1f264 <main@@Base+0x91d4>
   1f258:	cmp	r0, #58	; 0x3a
   1f25c:	mov	r1, r9
   1f260:	bne	1f780 <main@@Base+0x96f0>
   1f264:	ldr	r0, [sp, #32]
   1f268:	mov	r1, #0
   1f26c:	str	r1, [r0]
   1f270:	b	1f2ec <main@@Base+0x925c>
   1f274:	cmp	r0, #34	; 0x22
   1f278:	mov	r7, r9
   1f27c:	bne	1f4a4 <main@@Base+0x9414>
   1f280:	add	r1, r9, #6
   1f284:	ldr	r0, [sp, #44]	; 0x2c
   1f288:	sub	r0, r0, r1
   1f28c:	cmp	r0, #2
   1f290:	blt	1f324 <main@@Base+0x9294>
   1f294:	ldrb	r0, [r1]
   1f298:	cmp	r0, #32
   1f29c:	bls	1f310 <main@@Base+0x9280>
   1f2a0:	mov	r7, r1
   1f2a4:	b	1f334 <main@@Base+0x92a4>
   1f2a8:	cmp	r0, #34	; 0x22
   1f2ac:	mov	r7, r9
   1f2b0:	bne	1f600 <main@@Base+0x9570>
   1f2b4:	add	r1, r9, #4
   1f2b8:	ldr	r0, [sp, #44]	; 0x2c
   1f2bc:	sub	r0, r0, r1
   1f2c0:	cmp	r0, #2
   1f2c4:	blt	1f3a0 <main@@Base+0x9310>
   1f2c8:	ldrb	r0, [r1]
   1f2cc:	cmp	r0, #32
   1f2d0:	bls	1f38c <main@@Base+0x92fc>
   1f2d4:	mov	r7, r1
   1f2d8:	b	1f3b0 <main@@Base+0x9320>
   1f2dc:	cmp	r0, #34	; 0x22
   1f2e0:	mov	r1, r9
   1f2e4:	bne	1f780 <main@@Base+0x96f0>
   1f2e8:	add	r2, r9, #3
   1f2ec:	ldr	r0, [sp, #44]	; 0x2c
   1f2f0:	sub	r0, r0, r2
   1f2f4:	cmp	r0, #2
   1f2f8:	blt	1f41c <main@@Base+0x938c>
   1f2fc:	ldrb	r0, [r2]
   1f300:	cmp	r0, #32
   1f304:	bls	1f408 <main@@Base+0x9378>
   1f308:	mov	r1, r2
   1f30c:	b	1f430 <main@@Base+0x93a0>
   1f310:	bne	1f324 <main@@Base+0x9294>
   1f314:	mov	r7, r1
   1f318:	ldrb	r0, [r7, #1]!
   1f31c:	cmp	r0, #32
   1f320:	bhi	1f334 <main@@Base+0x92a4>
   1f324:	ldr	r0, [sp, #36]	; 0x24
   1f328:	ldr	r2, [sp, #44]	; 0x2c
   1f32c:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1f330:	mov	r7, r0
   1f334:	ldr	r0, [sp, #44]	; 0x2c
   1f338:	cmp	r7, r0
   1f33c:	beq	1f374 <main@@Base+0x92e4>
   1f340:	ldrb	r0, [r7]
   1f344:	cmp	r0, #58	; 0x3a
   1f348:	bne	1f374 <main@@Base+0x92e4>
   1f34c:	ldr	r0, [sp, #44]	; 0x2c
   1f350:	add	r1, r7, #1
   1f354:	sub	r0, r0, r1
   1f358:	cmp	r0, #2
   1f35c:	blt	1f494 <main@@Base+0x9404>
   1f360:	ldrb	r0, [r1]
   1f364:	cmp	r0, #32
   1f368:	bls	1f484 <main@@Base+0x93f4>
   1f36c:	mov	r7, r1
   1f370:	b	1f4a4 <main@@Base+0x9414>
   1f374:	ldr	r0, [sp, #36]	; 0x24
   1f378:	ldr	r2, [sp, #44]	; 0x2c
   1f37c:	mov	r1, r7
   1f380:	mov	r3, #4
   1f384:	bl	337ac <flatcc_json_parser_set_error@@Base>
   1f388:	b	1f4a0 <main@@Base+0x9410>
   1f38c:	bne	1f3a0 <main@@Base+0x9310>
   1f390:	mov	r7, r1
   1f394:	ldrb	r0, [r7, #1]!
   1f398:	cmp	r0, #32
   1f39c:	bhi	1f3b0 <main@@Base+0x9320>
   1f3a0:	ldr	r0, [sp, #36]	; 0x24
   1f3a4:	ldr	r2, [sp, #44]	; 0x2c
   1f3a8:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1f3ac:	mov	r7, r0
   1f3b0:	ldr	r0, [sp, #44]	; 0x2c
   1f3b4:	cmp	r7, r0
   1f3b8:	beq	1f3f0 <main@@Base+0x9360>
   1f3bc:	ldrb	r0, [r7]
   1f3c0:	cmp	r0, #58	; 0x3a
   1f3c4:	bne	1f3f0 <main@@Base+0x9360>
   1f3c8:	ldr	r0, [sp, #44]	; 0x2c
   1f3cc:	add	r1, r7, #1
   1f3d0:	sub	r0, r0, r1
   1f3d4:	cmp	r0, #2
   1f3d8:	blt	1f5f0 <main@@Base+0x9560>
   1f3dc:	ldrb	r0, [r1]
   1f3e0:	cmp	r0, #32
   1f3e4:	bls	1f5e0 <main@@Base+0x9550>
   1f3e8:	mov	r7, r1
   1f3ec:	b	1f600 <main@@Base+0x9570>
   1f3f0:	ldr	r0, [sp, #36]	; 0x24
   1f3f4:	ldr	r2, [sp, #44]	; 0x2c
   1f3f8:	mov	r1, r7
   1f3fc:	mov	r3, #4
   1f400:	bl	337ac <flatcc_json_parser_set_error@@Base>
   1f404:	b	1f5fc <main@@Base+0x956c>
   1f408:	bne	1f41c <main@@Base+0x938c>
   1f40c:	mov	r1, r2
   1f410:	ldrb	r0, [r1, #1]!
   1f414:	cmp	r0, #32
   1f418:	bhi	1f430 <main@@Base+0x93a0>
   1f41c:	mov	r1, r2
   1f420:	ldr	r0, [sp, #36]	; 0x24
   1f424:	ldr	r2, [sp, #44]	; 0x2c
   1f428:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1f42c:	mov	r1, r0
   1f430:	ldr	r0, [sp, #44]	; 0x2c
   1f434:	cmp	r1, r0
   1f438:	beq	1f470 <main@@Base+0x93e0>
   1f43c:	ldrb	r0, [r1]
   1f440:	cmp	r0, #58	; 0x3a
   1f444:	bne	1f470 <main@@Base+0x93e0>
   1f448:	ldr	r0, [sp, #44]	; 0x2c
   1f44c:	add	r2, r1, #1
   1f450:	sub	r0, r0, r2
   1f454:	cmp	r0, #2
   1f458:	blt	1f76c <main@@Base+0x96dc>
   1f45c:	ldrb	r0, [r2]
   1f460:	cmp	r0, #32
   1f464:	bls	1f75c <main@@Base+0x96cc>
   1f468:	mov	r1, r2
   1f46c:	b	1f780 <main@@Base+0x96f0>
   1f470:	ldr	r0, [sp, #36]	; 0x24
   1f474:	ldr	r2, [sp, #44]	; 0x2c
   1f478:	mov	r3, #4
   1f47c:	bl	337ac <flatcc_json_parser_set_error@@Base>
   1f480:	b	1f77c <main@@Base+0x96ec>
   1f484:	bne	1f494 <main@@Base+0x9404>
   1f488:	ldrb	r0, [r7, #2]!
   1f48c:	cmp	r0, #32
   1f490:	bhi	1f4a4 <main@@Base+0x9414>
   1f494:	ldr	r0, [sp, #36]	; 0x24
   1f498:	ldr	r2, [sp, #44]	; 0x2c
   1f49c:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1f4a0:	mov	r7, r0
   1f4a4:	cmp	r9, r7
   1f4a8:	beq	1f7d4 <main@@Base+0x9744>
   1f4ac:	ldr	r0, [sp, #44]	; 0x2c
   1f4b0:	mov	r6, #0
   1f4b4:	str	r6, [fp, #-52]	; 0xffffffcc
   1f4b8:	str	r6, [fp, #-56]	; 0xffffffc8
   1f4bc:	strh	r6, [fp, #-60]	; 0xffffffc4
   1f4c0:	str	r6, [sp, #56]	; 0x38
   1f4c4:	cmp	r7, r0
   1f4c8:	beq	1f514 <main@@Base+0x9484>
   1f4cc:	sub	r0, fp, #56	; 0x38
   1f4d0:	ldr	r2, [sp, #44]	; 0x2c
   1f4d4:	mov	r1, r7
   1f4d8:	add	r3, sp, #56	; 0x38
   1f4dc:	str	r0, [sp]
   1f4e0:	ldr	r0, [sp, #36]	; 0x24
   1f4e4:	bl	356c0 <flatcc_json_parser_integer@@Base>
   1f4e8:	cmp	r0, r7
   1f4ec:	beq	1f51c <main@@Base+0x948c>
   1f4f0:	mov	r4, r0
   1f4f4:	ldr	r0, [sp, #56]	; 0x38
   1f4f8:	cmp	r0, #0
   1f4fc:	beq	1f524 <main@@Base+0x9494>
   1f500:	ldr	r0, [sp, #36]	; 0x24
   1f504:	ldr	r2, [sp, #44]	; 0x2c
   1f508:	mov	r1, r4
   1f50c:	mov	r3, #8
   1f510:	b	1f548 <main@@Base+0x94b8>
   1f514:	ldr	r4, [sp, #44]	; 0x2c
   1f518:	b	1f550 <main@@Base+0x94c0>
   1f51c:	mov	r4, r7
   1f520:	b	1f550 <main@@Base+0x94c0>
   1f524:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1f528:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1f52c:	subs	r2, r0, #65536	; 0x10000
   1f530:	sbcs	r1, r1, #0
   1f534:	bcc	1f5d4 <main@@Base+0x9544>
   1f538:	ldr	r0, [sp, #36]	; 0x24
   1f53c:	ldr	r2, [sp, #44]	; 0x2c
   1f540:	mov	r1, r4
   1f544:	mov	r3, #7
   1f548:	bl	337ac <flatcc_json_parser_set_error@@Base>
   1f54c:	mov	r4, r0
   1f550:	cmp	r7, r4
   1f554:	bne	1f590 <main@@Base+0x9500>
   1f558:	sub	r0, fp, #60	; 0x3c
   1f55c:	ldr	r2, [sp, #44]	; 0x2c
   1f560:	movw	r3, #45868	; 0xb32c
   1f564:	mov	r1, r7
   1f568:	str	r0, [sp]
   1f56c:	ldr	r0, [sp, #36]	; 0x24
   1f570:	movt	r3, #5
   1f574:	bl	2ca58 <main@@Base+0x169c8>
   1f578:	cmp	r0, r7
   1f57c:	mov	r4, r0
   1f580:	ldrne	r0, [sp, #44]	; 0x2c
   1f584:	cmpne	r4, r0
   1f588:	beq	1ca9c <main@@Base+0x6a0c>
   1f58c:	ldrh	r6, [fp, #-60]	; 0xffffffc4
   1f590:	movw	r0, #65535	; 0xffff
   1f594:	tst	r6, r0
   1f598:	bne	1f5ac <main@@Base+0x951c>
   1f59c:	ldr	r0, [sp, #36]	; 0x24
   1f5a0:	ldrb	r0, [r0, #8]
   1f5a4:	tst	r0, #2
   1f5a8:	beq	1f7c8 <main@@Base+0x9738>
   1f5ac:	ldr	r0, [sp, #36]	; 0x24
   1f5b0:	mov	r1, #2
   1f5b4:	mov	r2, #2
   1f5b8:	mov	r3, #2
   1f5bc:	ldr	r0, [r0]
   1f5c0:	bl	30b5c <flatcc_builder_table_add@@Base>
   1f5c4:	cmp	r0, #0
   1f5c8:	beq	1ca9c <main@@Base+0x6a0c>
   1f5cc:	strh	r6, [r0]
   1f5d0:	b	1f7c8 <main@@Base+0x9738>
   1f5d4:	mov	r6, r0
   1f5d8:	strh	r0, [fp, #-60]	; 0xffffffc4
   1f5dc:	b	1f550 <main@@Base+0x94c0>
   1f5e0:	bne	1f5f0 <main@@Base+0x9560>
   1f5e4:	ldrb	r0, [r7, #2]!
   1f5e8:	cmp	r0, #32
   1f5ec:	bhi	1f600 <main@@Base+0x9570>
   1f5f0:	ldr	r0, [sp, #36]	; 0x24
   1f5f4:	ldr	r2, [sp, #44]	; 0x2c
   1f5f8:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1f5fc:	mov	r7, r0
   1f600:	cmp	r9, r7
   1f604:	beq	1f7d4 <main@@Base+0x9744>
   1f608:	ldr	r0, [sp, #44]	; 0x2c
   1f60c:	mov	r6, #0
   1f610:	str	r6, [fp, #-52]	; 0xffffffcc
   1f614:	str	r6, [fp, #-56]	; 0xffffffc8
   1f618:	str	r6, [sp, #60]	; 0x3c
   1f61c:	str	r6, [sp, #56]	; 0x38
   1f620:	str	r6, [fp, #-60]	; 0xffffffc4
   1f624:	cmp	r7, r0
   1f628:	beq	1f684 <main@@Base+0x95f4>
   1f62c:	sub	r0, fp, #56	; 0x38
   1f630:	ldr	r2, [sp, #44]	; 0x2c
   1f634:	mov	r1, r7
   1f638:	sub	r3, fp, #60	; 0x3c
   1f63c:	str	r0, [sp]
   1f640:	ldr	r0, [sp, #36]	; 0x24
   1f644:	bl	356c0 <flatcc_json_parser_integer@@Base>
   1f648:	cmp	r0, r7
   1f64c:	beq	1f68c <main@@Base+0x95fc>
   1f650:	sub	r9, fp, #60	; 0x3c
   1f654:	mov	r4, r0
   1f658:	ldm	r9, {r0, r6, r9}
   1f65c:	cmp	r0, #0
   1f660:	beq	1f69c <main@@Base+0x960c>
   1f664:	subs	r0, r6, #1
   1f668:	sbcs	r0, r9, #-2147483648	; 0x80000000
   1f66c:	bcc	1f6c8 <main@@Base+0x9638>
   1f670:	ldr	r0, [sp, #36]	; 0x24
   1f674:	ldr	r2, [sp, #44]	; 0x2c
   1f678:	mov	r1, r4
   1f67c:	mov	r3, #8
   1f680:	b	1f6b4 <main@@Base+0x9624>
   1f684:	ldr	r4, [sp, #44]	; 0x2c
   1f688:	b	1f6c0 <main@@Base+0x9630>
   1f68c:	mov	r6, #0
   1f690:	mov	r9, #0
   1f694:	mov	r4, r7
   1f698:	b	1f6d8 <main@@Base+0x9648>
   1f69c:	cmn	r9, #1
   1f6a0:	bgt	1f6d0 <main@@Base+0x9640>
   1f6a4:	ldr	r0, [sp, #36]	; 0x24
   1f6a8:	ldr	r2, [sp, #44]	; 0x2c
   1f6ac:	mov	r1, r4
   1f6b0:	mov	r3, #7
   1f6b4:	bl	337ac <flatcc_json_parser_set_error@@Base>
   1f6b8:	mov	r4, r0
   1f6bc:	mov	r6, #0
   1f6c0:	mov	r9, #0
   1f6c4:	b	1f6d8 <main@@Base+0x9648>
   1f6c8:	rsbs	r6, r6, #0
   1f6cc:	rsc	r9, r9, #0
   1f6d0:	str	r6, [sp, #56]	; 0x38
   1f6d4:	str	r9, [sp, #60]	; 0x3c
   1f6d8:	cmp	r7, r4
   1f6dc:	bne	1f71c <main@@Base+0x968c>
   1f6e0:	add	r0, sp, #56	; 0x38
   1f6e4:	ldr	r2, [sp, #44]	; 0x2c
   1f6e8:	movw	r3, #45880	; 0xb338
   1f6ec:	mov	r1, r7
   1f6f0:	str	r0, [sp]
   1f6f4:	ldr	r0, [sp, #36]	; 0x24
   1f6f8:	movt	r3, #5
   1f6fc:	bl	24ed4 <main@@Base+0xee44>
   1f700:	cmp	r0, r7
   1f704:	mov	r4, r0
   1f708:	ldrne	r0, [sp, #44]	; 0x2c
   1f70c:	cmpne	r4, r0
   1f710:	beq	1ca9c <main@@Base+0x6a0c>
   1f714:	ldr	r6, [sp, #56]	; 0x38
   1f718:	ldr	r9, [sp, #60]	; 0x3c
   1f71c:	orrs	r0, r6, r9
   1f720:	bne	1f734 <main@@Base+0x96a4>
   1f724:	ldr	r0, [sp, #36]	; 0x24
   1f728:	ldrb	r0, [r0, #8]
   1f72c:	tst	r0, #2
   1f730:	beq	1f7c8 <main@@Base+0x9738>
   1f734:	ldr	r0, [sp, #36]	; 0x24
   1f738:	mov	r1, #1
   1f73c:	mov	r2, #8
   1f740:	mov	r3, #8
   1f744:	ldr	r0, [r0]
   1f748:	bl	30b5c <flatcc_builder_table_add@@Base>
   1f74c:	cmp	r0, #0
   1f750:	beq	1ca9c <main@@Base+0x6a0c>
   1f754:	stm	r0, {r6, r9}
   1f758:	b	1f7c8 <main@@Base+0x9738>
   1f75c:	bne	1f76c <main@@Base+0x96dc>
   1f760:	ldrb	r0, [r1, #2]!
   1f764:	cmp	r0, #32
   1f768:	bhi	1f780 <main@@Base+0x96f0>
   1f76c:	mov	r1, r2
   1f770:	ldr	r0, [sp, #36]	; 0x24
   1f774:	ldr	r2, [sp, #44]	; 0x2c
   1f778:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1f77c:	mov	r1, r0
   1f780:	cmp	r9, r1
   1f784:	beq	1f7d4 <main@@Base+0x9744>
   1f788:	ldr	r0, [sp, #36]	; 0x24
   1f78c:	ldr	r2, [sp, #44]	; 0x2c
   1f790:	add	r3, sp, #64	; 0x40
   1f794:	bl	35be8 <flatcc_json_parser_build_string@@Base>
   1f798:	mov	r4, r0
   1f79c:	ldr	r0, [sp, #64]	; 0x40
   1f7a0:	cmp	r0, #0
   1f7a4:	beq	1ca9c <main@@Base+0x6a0c>
   1f7a8:	ldr	r0, [sp, #36]	; 0x24
   1f7ac:	mov	r1, #0
   1f7b0:	ldr	r0, [r0]
   1f7b4:	bl	30a20 <flatcc_builder_table_add_offset@@Base>
   1f7b8:	cmp	r0, #0
   1f7bc:	beq	1ca9c <main@@Base+0x6a0c>
   1f7c0:	ldr	r1, [sp, #64]	; 0x40
   1f7c4:	str	r1, [r0]
   1f7c8:	ldr	r5, [sp, #44]	; 0x2c
   1f7cc:	ldr	r6, [sp, #36]	; 0x24
   1f7d0:	b	1f7f0 <main@@Base+0x9760>
   1f7d4:	ldr	r6, [sp, #36]	; 0x24
   1f7d8:	ldr	r5, [sp, #44]	; 0x2c
   1f7dc:	mov	r1, r9
   1f7e0:	mov	r0, r6
   1f7e4:	mov	r2, r5
   1f7e8:	bl	33ecc <flatcc_json_parser_unmatched_symbol@@Base>
   1f7ec:	mov	r4, r0
   1f7f0:	sub	r0, r5, r4
   1f7f4:	cmp	r0, #2
   1f7f8:	blt	1f824 <main@@Base+0x9794>
   1f7fc:	ldrb	r0, [r4]
   1f800:	cmp	r0, #32
   1f804:	bls	1f810 <main@@Base+0x9780>
   1f808:	mov	r2, r4
   1f80c:	b	1f838 <main@@Base+0x97a8>
   1f810:	bne	1f824 <main@@Base+0x9794>
   1f814:	mov	r2, r4
   1f818:	ldrb	r0, [r2, #1]!
   1f81c:	cmp	r0, #32
   1f820:	bhi	1f838 <main@@Base+0x97a8>
   1f824:	mov	r0, r6
   1f828:	mov	r1, r4
   1f82c:	mov	r2, r5
   1f830:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1f834:	mov	r2, r0
   1f838:	cmp	r2, r5
   1f83c:	beq	207a0 <main@@Base+0xa710>
   1f840:	ldrb	r0, [r2]
   1f844:	cmp	r0, #44	; 0x2c
   1f848:	bne	207a8 <main@@Base+0xa718>
   1f84c:	add	r1, r2, #1
   1f850:	sub	r0, r5, r1
   1f854:	cmp	r0, #2
   1f858:	blt	1f880 <main@@Base+0x97f0>
   1f85c:	ldrb	r0, [r1]
   1f860:	cmp	r0, #32
   1f864:	bls	1f870 <main@@Base+0x97e0>
   1f868:	mov	r2, r1
   1f86c:	b	1f890 <main@@Base+0x9800>
   1f870:	bne	1f880 <main@@Base+0x97f0>
   1f874:	ldrb	r0, [r2, #2]!
   1f878:	cmp	r0, #32
   1f87c:	bhi	1f890 <main@@Base+0x9800>
   1f880:	mov	r0, r6
   1f884:	mov	r2, r5
   1f888:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1f88c:	mov	r2, r0
   1f890:	cmp	r2, r5
   1f894:	beq	207f4 <main@@Base+0xa764>
   1f898:	ldrb	r0, [r2]
   1f89c:	cmp	r0, #125	; 0x7d
   1f8a0:	bne	1f038 <main@@Base+0x8fa8>
   1f8a4:	add	r1, r2, #1
   1f8a8:	sub	r0, r5, r1
   1f8ac:	b	207bc <main@@Base+0xa72c>
   1f8b0:	cmp	r0, #93	; 0x5d
   1f8b4:	bne	20764 <main@@Base+0xa6d4>
   1f8b8:	ldr	r5, [sp, #44]	; 0x2c
   1f8bc:	ldr	r8, [sp, #36]	; 0x24
   1f8c0:	add	r1, r2, #1
   1f8c4:	sub	r0, r5, r1
   1f8c8:	cmp	r0, #2
   1f8cc:	ldr	sl, [sp, #40]	; 0x28
   1f8d0:	blt	208e8 <main@@Base+0xa858>
   1f8d4:	ldrb	r0, [r1]
   1f8d8:	cmp	r0, #32
   1f8dc:	bls	208c8 <main@@Base+0xa838>
   1f8e0:	ldr	r5, [sp, #44]	; 0x2c
   1f8e4:	ldr	r8, [sp, #36]	; 0x24
   1f8e8:	ldr	sl, [sp, #40]	; 0x28
   1f8ec:	mov	r4, r1
   1f8f0:	b	1d074 <main@@Base+0x6fe4>
   1f8f4:	ldr	r8, [sp, #36]	; 0x24
   1f8f8:	ldr	r5, [sp, #44]	; 0x2c
   1f8fc:	mov	r1, r2
   1f900:	mov	r0, r8
   1f904:	mov	r2, r5
   1f908:	mov	r3, #9
   1f90c:	bl	337ac <flatcc_json_parser_set_error@@Base>
   1f910:	ldr	sl, [sp, #40]	; 0x28
   1f914:	b	1bffc <main@@Base+0x5f6c>
   1f918:	mov	r4, r5
   1f91c:	b	20918 <main@@Base+0xa888>
   1f920:	mov	r0, r8
   1f924:	mov	r1, r5
   1f928:	b	20774 <main@@Base+0xa6e4>
   1f92c:	cmp	r0, #93	; 0x5d
   1f930:	bne	20788 <main@@Base+0xa6f8>
   1f934:	ldr	r0, [sp, #44]	; 0x2c
   1f938:	add	r1, r4, #1
   1f93c:	sub	r0, r0, r1
   1f940:	b	20300 <main@@Base+0xa270>
   1f944:	mov	r4, r5
   1f948:	b	1c67c <main@@Base+0x65ec>
   1f94c:	mov	r0, r8
   1f950:	mov	r1, r5
   1f954:	mov	r2, r5
   1f958:	b	20794 <main@@Base+0xa704>
   1f95c:	ldr	r5, [sp, #44]	; 0x2c
   1f960:	ldr	r8, [sp, #36]	; 0x24
   1f964:	ldr	sl, [sp, #40]	; 0x28
   1f968:	bne	1f97c <main@@Base+0x98ec>
   1f96c:	ldrb	r0, [r2, #2]!
   1f970:	cmp	r0, #32
   1f974:	mov	r4, r2
   1f978:	bhi	2017c <main@@Base+0xa0ec>
   1f97c:	mov	r0, r8
   1f980:	mov	r2, r5
   1f984:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1f988:	b	1f9f0 <main@@Base+0x9960>
   1f98c:	ldr	r0, [r8]
   1f990:	mov	r1, #1
   1f994:	bl	2eca8 <flatcc_builder_extend_vector@@Base>
   1f998:	mov	r9, r0
   1f99c:	cmp	r0, #0
   1f9a0:	beq	16fc4 <main@@Base+0xf34>
   1f9a4:	cmp	r4, r5
   1f9a8:	beq	1f9dc <main@@Base+0x994c>
   1f9ac:	ldrb	r0, [r4]
   1f9b0:	cmp	r0, #123	; 0x7b
   1f9b4:	bne	1f9dc <main@@Base+0x994c>
   1f9b8:	add	r1, r4, #1
   1f9bc:	sub	r0, r5, r1
   1f9c0:	cmp	r0, #2
   1f9c4:	blt	1fa08 <main@@Base+0x9978>
   1f9c8:	ldrb	r0, [r1]
   1f9cc:	cmp	r0, #32
   1f9d0:	bls	1f9f8 <main@@Base+0x9968>
   1f9d4:	mov	r4, r1
   1f9d8:	b	1fa18 <main@@Base+0x9988>
   1f9dc:	mov	r0, r8
   1f9e0:	mov	r1, r4
   1f9e4:	mov	r2, r5
   1f9e8:	mov	r3, #21
   1f9ec:	bl	337ac <flatcc_json_parser_set_error@@Base>
   1f9f0:	mov	r4, r0
   1f9f4:	b	2017c <main@@Base+0xa0ec>
   1f9f8:	bne	1fa08 <main@@Base+0x9978>
   1f9fc:	ldrb	r0, [r4, #2]!
   1fa00:	cmp	r0, #32
   1fa04:	bhi	1fa18 <main@@Base+0x9988>
   1fa08:	mov	r0, r8
   1fa0c:	mov	r2, r5
   1fa10:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1fa14:	mov	r4, r0
   1fa18:	cmp	r4, r5
   1fa1c:	mov	r2, r5
   1fa20:	beq	1fb08 <main@@Base+0x9a78>
   1fa24:	ldrb	r0, [r4]
   1fa28:	cmp	r0, #125	; 0x7d
   1fa2c:	bne	1fa6c <main@@Base+0x99dc>
   1fa30:	add	r1, r4, #1
   1fa34:	sub	r0, r5, r1
   1fa38:	cmp	r0, #2
   1fa3c:	blt	1f97c <main@@Base+0x98ec>
   1fa40:	ldrb	r0, [r1]
   1fa44:	cmp	r0, #32
   1fa48:	bhi	2013c <main@@Base+0xa0ac>
   1fa4c:	ldr	r5, [sp, #44]	; 0x2c
   1fa50:	ldr	r8, [sp, #36]	; 0x24
   1fa54:	ldr	sl, [sp, #40]	; 0x28
   1fa58:	bne	1f97c <main@@Base+0x98ec>
   1fa5c:	ldrb	r0, [r4, #2]!
   1fa60:	cmp	r0, #32
   1fa64:	bls	1f97c <main@@Base+0x98ec>
   1fa68:	b	2017c <main@@Base+0xa0ec>
   1fa6c:	mov	r2, r4
   1fa70:	b	1fb08 <main@@Base+0x9a78>
   1fa74:	mov	r1, r5
   1fa78:	b	1faac <main@@Base+0x9a1c>
   1fa7c:	mov	r1, r7
   1fa80:	b	1faac <main@@Base+0x9a1c>
   1fa84:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1fa88:	cmp	r0, #0
   1fa8c:	beq	1faf4 <main@@Base+0x9a64>
   1fa90:	ldr	r8, [sp, #36]	; 0x24
   1fa94:	ldr	r5, [sp, #44]	; 0x2c
   1fa98:	mov	r3, #7
   1fa9c:	mov	r0, r8
   1faa0:	mov	r2, r5
   1faa4:	bl	337ac <flatcc_json_parser_set_error@@Base>
   1faa8:	mov	r1, r0
   1faac:	cmp	r7, r1
   1fab0:	bne	1faec <main@@Base+0x9a5c>
   1fab4:	movw	r3, #45856	; 0xb320
   1fab8:	sub	r0, fp, #60	; 0x3c
   1fabc:	mov	r1, r7
   1fac0:	mov	r2, r5
   1fac4:	str	r0, [sp]
   1fac8:	mov	r0, r8
   1facc:	movt	r3, #5
   1fad0:	bl	250e0 <main@@Base+0xf050>
   1fad4:	mov	r1, r0
   1fad8:	cmp	r0, r7
   1fadc:	cmpne	r1, r5
   1fae0:	beq	200ec <main@@Base+0xa05c>
   1fae4:	ldr	r4, [fp, #-60]	; 0xffffffc4
   1fae8:	ldr	r8, [sp, #36]	; 0x24
   1faec:	str	r4, [r9, #4]
   1faf0:	b	20038 <main@@Base+0x9fa8>
   1faf4:	ldr	r4, [fp, #-56]	; 0xffffffc8
   1faf8:	ldr	r5, [sp, #44]	; 0x2c
   1fafc:	ldr	r8, [sp, #36]	; 0x24
   1fb00:	str	r4, [fp, #-60]	; 0xffffffc4
   1fb04:	b	1faac <main@@Base+0x9a1c>
   1fb08:	cmp	r2, r5
   1fb0c:	mov	sl, r5
   1fb10:	beq	1fb64 <main@@Base+0x9ad4>
   1fb14:	ldrb	r0, [r2]
   1fb18:	cmp	r0, #46	; 0x2e
   1fb1c:	beq	1fb38 <main@@Base+0x9aa8>
   1fb20:	cmp	r0, #34	; 0x22
   1fb24:	bne	1fb54 <main@@Base+0x9ac4>
   1fb28:	ldr	r0, [sp, #32]
   1fb2c:	mov	r1, #0
   1fb30:	add	sl, r2, #1
   1fb34:	b	1fb60 <main@@Base+0x9ad0>
   1fb38:	mov	r1, r2
   1fb3c:	mov	r0, r8
   1fb40:	mov	r2, r5
   1fb44:	mov	r3, #5
   1fb48:	bl	337ac <flatcc_json_parser_set_error@@Base>
   1fb4c:	mov	sl, r0
   1fb50:	b	1fb64 <main@@Base+0x9ad4>
   1fb54:	ldr	r0, [sp, #32]
   1fb58:	mov	r1, #1
   1fb5c:	mov	sl, r2
   1fb60:	str	r1, [r0]
   1fb64:	sub	lr, r5, sl
   1fb68:	mov	r0, #8
   1fb6c:	cmp	lr, #8
   1fb70:	movcc	r0, lr
   1fb74:	and	r0, r0, #15
   1fb78:	sub	r7, r0, #1
   1fb7c:	cmp	r7, #7
   1fb80:	bhi	20024 <main@@Base+0x9f94>
   1fb84:	add	r4, pc, #32
   1fb88:	mov	r1, #0
   1fb8c:	mov	ip, #0
   1fb90:	mov	r8, #0
   1fb94:	mov	r6, #0
   1fb98:	mov	r3, #0
   1fb9c:	mov	r5, #0
   1fba0:	mov	r2, #0
   1fba4:	mov	r0, #0
   1fba8:	ldr	pc, [r4, r7, lsl #2]
   1fbac:	andeq	pc, r1, r0, lsl ip	; <UNPREDICTABLE>
   1fbb0:	andeq	pc, r1, r8, lsl #24
   1fbb4:	andeq	pc, r1, r0, lsl #24
   1fbb8:	strdeq	pc, [r1], -r8
   1fbbc:	andeq	pc, r1, ip, ror #23
   1fbc0:	andeq	pc, r1, r0, ror #23
   1fbc4:	ldrdeq	pc, [r1], -r0
   1fbc8:	andeq	pc, r1, ip, asr #23
   1fbcc:	ldrb	ip, [sl, #7]
   1fbd0:	ldrb	r0, [sl, #6]
   1fbd4:	mov	r8, r1
   1fbd8:	orr	r0, ip, r0, lsl #8
   1fbdc:	mov	r1, r0
   1fbe0:	ldrb	r0, [sl, #5]
   1fbe4:	mov	r6, r8
   1fbe8:	orr	r1, r1, r0, lsl #16
   1fbec:	ldrb	r0, [sl, #4]
   1fbf0:	mov	r3, r6
   1fbf4:	orr	r1, r1, r0, lsl #24
   1fbf8:	ldrb	r0, [sl, #3]
   1fbfc:	orr	r5, r0, r3
   1fc00:	ldrb	r0, [sl, #2]
   1fc04:	orr	r2, r5, r0, lsl #8
   1fc08:	ldrb	r0, [sl, #1]
   1fc0c:	orr	r0, r2, r0, lsl #16
   1fc10:	ldrb	r2, [sl]
   1fc14:	movw	r3, #0
   1fc18:	movt	r3, #26980	; 0x6964
   1fc1c:	orr	r0, r0, r2, lsl #24
   1fc20:	mov	r2, r0
   1fc24:	bfc	r2, #0, #16
   1fc28:	teq	r2, r3
   1fc2c:	bne	1fc80 <main@@Base+0x9bf0>
   1fc30:	ldr	r5, [sp, #44]	; 0x2c
   1fc34:	ldr	r8, [sp, #36]	; 0x24
   1fc38:	cmp	lr, #3
   1fc3c:	mov	r7, sl
   1fc40:	blt	1fe9c <main@@Base+0x9e0c>
   1fc44:	ldr	r2, [sp, #32]
   1fc48:	mov	r1, sl
   1fc4c:	ldrb	r0, [r1, #2]!
   1fc50:	ldr	r2, [r2]
   1fc54:	cmp	r2, #0
   1fc58:	beq	1fcf0 <main@@Base+0x9c60>
   1fc5c:	cmp	r0, #33	; 0x21
   1fc60:	bcc	1fc70 <main@@Base+0x9be0>
   1fc64:	cmp	r0, #58	; 0x3a
   1fc68:	mov	r7, sl
   1fc6c:	bne	1fe9c <main@@Base+0x9e0c>
   1fc70:	ldr	r0, [sp, #32]
   1fc74:	mov	r2, #0
   1fc78:	str	r2, [r0]
   1fc7c:	b	1fd00 <main@@Base+0x9c70>
   1fc80:	movw	r2, #25445	; 0x6365
   1fc84:	ldr	r5, [sp, #44]	; 0x2c
   1fc88:	ldr	r8, [sp, #36]	; 0x24
   1fc8c:	movt	r2, #24942	; 0x616e
   1fc90:	eor	r1, r1, r2
   1fc94:	movw	r2, #29556	; 0x7374
   1fc98:	movt	r2, #25705	; 0x6469
   1fc9c:	eor	r0, r0, r2
   1fca0:	orrs	r0, r1, r0
   1fca4:	bne	20024 <main@@Base+0x9f94>
   1fca8:	cmp	lr, #9
   1fcac:	mov	r7, sl
   1fcb0:	blt	1ffbc <main@@Base+0x9f2c>
   1fcb4:	ldr	r2, [sp, #32]
   1fcb8:	mov	r1, sl
   1fcbc:	ldrb	r0, [r1, #8]!
   1fcc0:	ldr	r2, [r2]
   1fcc4:	cmp	r2, #0
   1fcc8:	beq	1fd28 <main@@Base+0x9c98>
   1fccc:	cmp	r0, #33	; 0x21
   1fcd0:	bcc	1fce0 <main@@Base+0x9c50>
   1fcd4:	cmp	r0, #58	; 0x3a
   1fcd8:	mov	r7, sl
   1fcdc:	bne	1ffbc <main@@Base+0x9f2c>
   1fce0:	ldr	r0, [sp, #32]
   1fce4:	mov	r2, #0
   1fce8:	str	r2, [r0]
   1fcec:	b	1fd38 <main@@Base+0x9ca8>
   1fcf0:	cmp	r0, #34	; 0x22
   1fcf4:	mov	r7, sl
   1fcf8:	bne	1fe9c <main@@Base+0x9e0c>
   1fcfc:	add	r1, sl, #3
   1fd00:	sub	r0, r5, r1
   1fd04:	cmp	r0, #2
   1fd08:	blt	1fd7c <main@@Base+0x9cec>
   1fd0c:	ldrb	r0, [r1]
   1fd10:	cmp	r0, #32
   1fd14:	bls	1fd60 <main@@Base+0x9cd0>
   1fd18:	ldr	r5, [sp, #44]	; 0x2c
   1fd1c:	ldr	r8, [sp, #36]	; 0x24
   1fd20:	mov	r7, r1
   1fd24:	b	1fd8c <main@@Base+0x9cfc>
   1fd28:	cmp	r0, #34	; 0x22
   1fd2c:	mov	r7, sl
   1fd30:	bne	1ffbc <main@@Base+0x9f2c>
   1fd34:	add	r1, sl, #9
   1fd38:	ldr	r4, [sp, #44]	; 0x2c
   1fd3c:	sub	r0, r4, r1
   1fd40:	cmp	r0, #2
   1fd44:	blt	1fdfc <main@@Base+0x9d6c>
   1fd48:	ldrb	r0, [r1]
   1fd4c:	cmp	r0, #32
   1fd50:	bls	1fde4 <main@@Base+0x9d54>
   1fd54:	ldr	r4, [sp, #44]	; 0x2c
   1fd58:	mov	r7, r1
   1fd5c:	b	1fe0c <main@@Base+0x9d7c>
   1fd60:	ldr	r5, [sp, #44]	; 0x2c
   1fd64:	ldr	r8, [sp, #36]	; 0x24
   1fd68:	bne	1fd7c <main@@Base+0x9cec>
   1fd6c:	mov	r7, r1
   1fd70:	ldrb	r0, [r7, #1]!
   1fd74:	cmp	r0, #32
   1fd78:	bhi	1fd8c <main@@Base+0x9cfc>
   1fd7c:	mov	r0, r8
   1fd80:	mov	r2, r5
   1fd84:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1fd88:	mov	r7, r0
   1fd8c:	cmp	r7, r5
   1fd90:	beq	1fdcc <main@@Base+0x9d3c>
   1fd94:	ldrb	r0, [r7]
   1fd98:	cmp	r0, #58	; 0x3a
   1fd9c:	bne	1fdcc <main@@Base+0x9d3c>
   1fda0:	add	r1, r7, #1
   1fda4:	sub	r0, r5, r1
   1fda8:	cmp	r0, #2
   1fdac:	blt	1fe8c <main@@Base+0x9dfc>
   1fdb0:	ldrb	r0, [r1]
   1fdb4:	cmp	r0, #32
   1fdb8:	bls	1fe74 <main@@Base+0x9de4>
   1fdbc:	ldr	r5, [sp, #44]	; 0x2c
   1fdc0:	ldr	r8, [sp, #36]	; 0x24
   1fdc4:	mov	r7, r1
   1fdc8:	b	1fe9c <main@@Base+0x9e0c>
   1fdcc:	mov	r0, r8
   1fdd0:	mov	r1, r7
   1fdd4:	mov	r2, r5
   1fdd8:	mov	r3, #4
   1fddc:	bl	337ac <flatcc_json_parser_set_error@@Base>
   1fde0:	b	1fe98 <main@@Base+0x9e08>
   1fde4:	ldr	r4, [sp, #44]	; 0x2c
   1fde8:	bne	1fdfc <main@@Base+0x9d6c>
   1fdec:	mov	r7, r1
   1fdf0:	ldrb	r0, [r7, #1]!
   1fdf4:	cmp	r0, #32
   1fdf8:	bhi	1fe0c <main@@Base+0x9d7c>
   1fdfc:	ldr	r0, [sp, #36]	; 0x24
   1fe00:	mov	r2, r4
   1fe04:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1fe08:	mov	r7, r0
   1fe0c:	cmp	r7, r4
   1fe10:	beq	1fe54 <main@@Base+0x9dc4>
   1fe14:	ldrb	r0, [r7]
   1fe18:	cmp	r0, #58	; 0x3a
   1fe1c:	bne	1fe54 <main@@Base+0x9dc4>
   1fe20:	ldr	r5, [sp, #44]	; 0x2c
   1fe24:	ldr	r8, [sp, #36]	; 0x24
   1fe28:	add	r1, r7, #1
   1fe2c:	sub	r0, r5, r1
   1fe30:	cmp	r0, #2
   1fe34:	blt	1ffac <main@@Base+0x9f1c>
   1fe38:	ldrb	r0, [r1]
   1fe3c:	cmp	r0, #32
   1fe40:	bls	1ff94 <main@@Base+0x9f04>
   1fe44:	ldr	r5, [sp, #44]	; 0x2c
   1fe48:	ldr	r8, [sp, #36]	; 0x24
   1fe4c:	mov	r7, r1
   1fe50:	b	1ffbc <main@@Base+0x9f2c>
   1fe54:	ldr	r8, [sp, #36]	; 0x24
   1fe58:	ldr	r5, [sp, #44]	; 0x2c
   1fe5c:	mov	r1, r7
   1fe60:	mov	r3, #4
   1fe64:	mov	r0, r8
   1fe68:	mov	r2, r5
   1fe6c:	bl	337ac <flatcc_json_parser_set_error@@Base>
   1fe70:	b	1ffb8 <main@@Base+0x9f28>
   1fe74:	ldr	r5, [sp, #44]	; 0x2c
   1fe78:	ldr	r8, [sp, #36]	; 0x24
   1fe7c:	bne	1fe8c <main@@Base+0x9dfc>
   1fe80:	ldrb	r0, [r7, #2]!
   1fe84:	cmp	r0, #32
   1fe88:	bhi	1fe9c <main@@Base+0x9e0c>
   1fe8c:	mov	r0, r8
   1fe90:	mov	r2, r5
   1fe94:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1fe98:	mov	r7, r0
   1fe9c:	cmp	sl, r7
   1fea0:	beq	20024 <main@@Base+0x9f94>
   1fea4:	mov	r4, #0
   1fea8:	cmp	r7, r5
   1feac:	str	r4, [fp, #-52]	; 0xffffffcc
   1feb0:	str	r4, [fp, #-56]	; 0xffffffc8
   1feb4:	str	r4, [fp, #-60]	; 0xffffffc4
   1feb8:	str	r4, [sp, #56]	; 0x38
   1febc:	beq	1ff04 <main@@Base+0x9e74>
   1fec0:	sub	r0, fp, #56	; 0x38
   1fec4:	mov	r1, r7
   1fec8:	mov	r2, r5
   1fecc:	add	r3, sp, #56	; 0x38
   1fed0:	str	r0, [sp]
   1fed4:	mov	r0, r8
   1fed8:	bl	356c0 <flatcc_json_parser_integer@@Base>
   1fedc:	cmp	r0, r7
   1fee0:	beq	1ff0c <main@@Base+0x9e7c>
   1fee4:	mov	r1, r0
   1fee8:	ldr	r0, [sp, #56]	; 0x38
   1feec:	cmp	r0, #0
   1fef0:	beq	1ff14 <main@@Base+0x9e84>
   1fef4:	mov	r0, r8
   1fef8:	mov	r2, r5
   1fefc:	mov	r3, #8
   1ff00:	b	1ff34 <main@@Base+0x9ea4>
   1ff04:	mov	r1, r5
   1ff08:	b	1ff3c <main@@Base+0x9eac>
   1ff0c:	mov	r1, r7
   1ff10:	b	1ff3c <main@@Base+0x9eac>
   1ff14:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1ff18:	cmp	r0, #0
   1ff1c:	beq	1ff80 <main@@Base+0x9ef0>
   1ff20:	ldr	r8, [sp, #36]	; 0x24
   1ff24:	ldr	r5, [sp, #44]	; 0x2c
   1ff28:	mov	r3, #7
   1ff2c:	mov	r0, r8
   1ff30:	mov	r2, r5
   1ff34:	bl	337ac <flatcc_json_parser_set_error@@Base>
   1ff38:	mov	r1, r0
   1ff3c:	cmp	r7, r1
   1ff40:	bne	1ff78 <main@@Base+0x9ee8>
   1ff44:	movw	r3, #45844	; 0xb314
   1ff48:	sub	r0, fp, #60	; 0x3c
   1ff4c:	mov	r1, r7
   1ff50:	mov	r2, r5
   1ff54:	str	r0, [sp]
   1ff58:	mov	r0, r8
   1ff5c:	movt	r3, #5
   1ff60:	bl	250e0 <main@@Base+0xf050>
   1ff64:	mov	r1, r0
   1ff68:	cmp	r0, r7
   1ff6c:	cmpne	r1, r5
   1ff70:	beq	200ec <main@@Base+0xa05c>
   1ff74:	ldr	r4, [fp, #-60]	; 0xffffffc4
   1ff78:	str	r4, [r9]
   1ff7c:	b	20038 <main@@Base+0x9fa8>
   1ff80:	ldr	r4, [fp, #-56]	; 0xffffffc8
   1ff84:	ldr	r5, [sp, #44]	; 0x2c
   1ff88:	ldr	r8, [sp, #36]	; 0x24
   1ff8c:	str	r4, [fp, #-60]	; 0xffffffc4
   1ff90:	b	1ff3c <main@@Base+0x9eac>
   1ff94:	ldr	r5, [sp, #44]	; 0x2c
   1ff98:	ldr	r8, [sp, #36]	; 0x24
   1ff9c:	bne	1ffac <main@@Base+0x9f1c>
   1ffa0:	ldrb	r0, [r7, #2]!
   1ffa4:	cmp	r0, #32
   1ffa8:	bhi	1ffbc <main@@Base+0x9f2c>
   1ffac:	mov	r0, r8
   1ffb0:	mov	r2, r5
   1ffb4:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   1ffb8:	mov	r7, r0
   1ffbc:	cmp	sl, r7
   1ffc0:	beq	20024 <main@@Base+0x9f94>
   1ffc4:	mov	r4, #0
   1ffc8:	cmp	r7, r5
   1ffcc:	str	r4, [fp, #-52]	; 0xffffffcc
   1ffd0:	str	r4, [fp, #-56]	; 0xffffffc8
   1ffd4:	str	r4, [fp, #-60]	; 0xffffffc4
   1ffd8:	str	r4, [sp, #56]	; 0x38
   1ffdc:	beq	1fa74 <main@@Base+0x99e4>
   1ffe0:	sub	r0, fp, #56	; 0x38
   1ffe4:	mov	r1, r7
   1ffe8:	mov	r2, r5
   1ffec:	add	r3, sp, #56	; 0x38
   1fff0:	str	r0, [sp]
   1fff4:	mov	r0, r8
   1fff8:	bl	356c0 <flatcc_json_parser_integer@@Base>
   1fffc:	cmp	r0, r7
   20000:	beq	1fa7c <main@@Base+0x99ec>
   20004:	mov	r1, r0
   20008:	ldr	r0, [sp, #56]	; 0x38
   2000c:	cmp	r0, #0
   20010:	beq	1fa84 <main@@Base+0x99f4>
   20014:	ldr	r8, [sp, #36]	; 0x24
   20018:	ldr	r5, [sp, #44]	; 0x2c
   2001c:	mov	r3, #8
   20020:	b	1fa9c <main@@Base+0x9a0c>
   20024:	mov	r0, r8
   20028:	mov	r1, sl
   2002c:	mov	r2, r5
   20030:	bl	33ecc <flatcc_json_parser_unmatched_symbol@@Base>
   20034:	mov	r1, r0
   20038:	sub	r0, r5, r1
   2003c:	cmp	r0, #2
   20040:	blt	2006c <main@@Base+0x9fdc>
   20044:	ldrb	r0, [r1]
   20048:	cmp	r0, #32
   2004c:	bls	20058 <main@@Base+0x9fc8>
   20050:	mov	r2, r1
   20054:	b	2007c <main@@Base+0x9fec>
   20058:	bne	2006c <main@@Base+0x9fdc>
   2005c:	mov	r2, r1
   20060:	ldrb	r0, [r2, #1]!
   20064:	cmp	r0, #32
   20068:	bhi	2007c <main@@Base+0x9fec>
   2006c:	mov	r0, r8
   20070:	mov	r2, r5
   20074:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   20078:	mov	r2, r0
   2007c:	cmp	r2, r5
   20080:	beq	20104 <main@@Base+0xa074>
   20084:	ldrb	r0, [r2]
   20088:	cmp	r0, #44	; 0x2c
   2008c:	bne	2010c <main@@Base+0xa07c>
   20090:	add	r1, r2, #1
   20094:	sub	r0, r5, r1
   20098:	cmp	r0, #2
   2009c:	blt	200c4 <main@@Base+0xa034>
   200a0:	ldrb	r0, [r1]
   200a4:	cmp	r0, #32
   200a8:	bls	200b4 <main@@Base+0xa024>
   200ac:	mov	r2, r1
   200b0:	b	200d4 <main@@Base+0xa044>
   200b4:	bne	200c4 <main@@Base+0xa034>
   200b8:	ldrb	r0, [r2, #2]!
   200bc:	cmp	r0, #32
   200c0:	bhi	200d4 <main@@Base+0xa044>
   200c4:	mov	r0, r8
   200c8:	mov	r2, r5
   200cc:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   200d0:	mov	r2, r0
   200d4:	cmp	r2, r5
   200d8:	beq	2014c <main@@Base+0xa0bc>
   200dc:	ldrb	r0, [r2]
   200e0:	cmp	r0, #125	; 0x7d
   200e4:	bne	1fb08 <main@@Base+0x9a78>
   200e8:	b	2011c <main@@Base+0xa08c>
   200ec:	ldr	r8, [sp, #36]	; 0x24
   200f0:	ldr	r5, [sp, #44]	; 0x2c
   200f4:	mov	r3, #33	; 0x21
   200f8:	mov	r0, r8
   200fc:	mov	r2, r5
   20100:	b	20170 <main@@Base+0xa0e0>
   20104:	mov	r4, r5
   20108:	b	20178 <main@@Base+0xa0e8>
   2010c:	cmp	r0, #125	; 0x7d
   20110:	bne	20158 <main@@Base+0xa0c8>
   20114:	ldr	r5, [sp, #44]	; 0x2c
   20118:	ldr	r8, [sp, #36]	; 0x24
   2011c:	add	r1, r2, #1
   20120:	sub	r0, r5, r1
   20124:	cmp	r0, #2
   20128:	ldr	sl, [sp, #40]	; 0x28
   2012c:	blt	1f97c <main@@Base+0x98ec>
   20130:	ldrb	r0, [r1]
   20134:	cmp	r0, #32
   20138:	bls	1f95c <main@@Base+0x98cc>
   2013c:	ldr	r5, [sp, #44]	; 0x2c
   20140:	ldr	r8, [sp, #36]	; 0x24
   20144:	mov	r4, r1
   20148:	b	20178 <main@@Base+0xa0e8>
   2014c:	mov	r0, r8
   20150:	mov	r1, r5
   20154:	b	20168 <main@@Base+0xa0d8>
   20158:	ldr	r8, [sp, #36]	; 0x24
   2015c:	ldr	r5, [sp, #44]	; 0x2c
   20160:	mov	r1, r2
   20164:	mov	r0, r8
   20168:	mov	r2, r5
   2016c:	mov	r3, #10
   20170:	bl	337ac <flatcc_json_parser_set_error@@Base>
   20174:	mov	r4, r0
   20178:	ldr	sl, [sp, #40]	; 0x28
   2017c:	sub	r0, r5, r4
   20180:	cmp	r0, #2
   20184:	blt	201b0 <main@@Base+0xa120>
   20188:	ldrb	r0, [r4]
   2018c:	cmp	r0, #32
   20190:	bls	2019c <main@@Base+0xa10c>
   20194:	mov	r7, r4
   20198:	b	201c4 <main@@Base+0xa134>
   2019c:	bne	201b0 <main@@Base+0xa120>
   201a0:	mov	r7, r4
   201a4:	ldrb	r0, [r7, #1]!
   201a8:	cmp	r0, #32
   201ac:	bhi	201c4 <main@@Base+0xa134>
   201b0:	mov	r0, r8
   201b4:	mov	r1, r4
   201b8:	mov	r2, r5
   201bc:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   201c0:	mov	r7, r0
   201c4:	cmp	r7, r5
   201c8:	beq	20264 <main@@Base+0xa1d4>
   201cc:	ldrb	r0, [r7]
   201d0:	cmp	r0, #44	; 0x2c
   201d4:	bne	2026c <main@@Base+0xa1dc>
   201d8:	add	r1, r7, #1
   201dc:	sub	r0, r5, r1
   201e0:	cmp	r0, #2
   201e4:	blt	20210 <main@@Base+0xa180>
   201e8:	ldrb	r0, [r1]
   201ec:	cmp	r0, #32
   201f0:	bls	201fc <main@@Base+0xa16c>
   201f4:	mov	r4, r1
   201f8:	b	20220 <main@@Base+0xa190>
   201fc:	bne	20210 <main@@Base+0xa180>
   20200:	ldrb	r0, [r7, #2]!
   20204:	cmp	r0, #32
   20208:	mov	r4, r7
   2020c:	bhi	20220 <main@@Base+0xa190>
   20210:	mov	r0, r8
   20214:	mov	r2, r5
   20218:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   2021c:	mov	r4, r0
   20220:	cmp	r4, r5
   20224:	beq	20284 <main@@Base+0xa1f4>
   20228:	ldrb	r0, [r4]
   2022c:	cmp	r0, #93	; 0x5d
   20230:	bne	1f98c <main@@Base+0x98fc>
   20234:	add	r1, r4, #1
   20238:	sub	r0, r5, r1
   2023c:	cmp	r0, #2
   20240:	blt	2069c <main@@Base+0xa60c>
   20244:	ldrb	r0, [r1]
   20248:	cmp	r0, #32
   2024c:	bls	2067c <main@@Base+0xa5ec>
   20250:	ldr	r5, [sp, #44]	; 0x2c
   20254:	ldr	r8, [sp, #36]	; 0x24
   20258:	ldr	sl, [sp, #40]	; 0x28
   2025c:	mov	r7, r1
   20260:	b	1c0b8 <main@@Base+0x6028>
   20264:	mov	r7, r5
   20268:	b	1c0b8 <main@@Base+0x6028>
   2026c:	cmp	r0, #93	; 0x5d
   20270:	bne	20298 <main@@Base+0xa208>
   20274:	ldr	r5, [sp, #44]	; 0x2c
   20278:	ldr	r8, [sp, #36]	; 0x24
   2027c:	ldr	sl, [sp, #40]	; 0x28
   20280:	b	1c9b4 <main@@Base+0x6924>
   20284:	mov	r0, r8
   20288:	mov	r1, r5
   2028c:	mov	r2, r5
   20290:	mov	r3, #9
   20294:	b	1c0b0 <main@@Base+0x6020>
   20298:	ldr	r8, [sp, #36]	; 0x24
   2029c:	ldr	r5, [sp, #44]	; 0x2c
   202a0:	mov	r1, r7
   202a4:	mov	r3, #9
   202a8:	mov	r0, r8
   202ac:	mov	r2, r5
   202b0:	bl	337ac <flatcc_json_parser_set_error@@Base>
   202b4:	ldr	sl, [sp, #40]	; 0x28
   202b8:	b	1c0b4 <main@@Base+0x6024>
   202bc:	cmp	r0, #125	; 0x7d
   202c0:	bne	207d8 <main@@Base+0xa748>
   202c4:	ldr	r5, [sp, #44]	; 0x2c
   202c8:	ldr	r8, [sp, #36]	; 0x24
   202cc:	add	r1, r3, #1
   202d0:	sub	r0, r5, r1
   202d4:	cmp	r0, #2
   202d8:	blt	20960 <main@@Base+0xa8d0>
   202dc:	ldrb	r0, [r1]
   202e0:	cmp	r0, #32
   202e4:	bls	20944 <main@@Base+0xa8b4>
   202e8:	ldr	r5, [sp, #44]	; 0x2c
   202ec:	ldr	r8, [sp, #36]	; 0x24
   202f0:	mov	r4, r1
   202f4:	b	1c67c <main@@Base+0x65ec>
   202f8:	add	r1, r4, #1
   202fc:	sub	r0, r5, r1
   20300:	cmp	r0, #2
   20304:	blt	20908 <main@@Base+0xa878>
   20308:	ldrb	r0, [r1]
   2030c:	cmp	r0, #32
   20310:	bls	208f8 <main@@Base+0xa868>
   20314:	mov	r4, r1
   20318:	b	20918 <main@@Base+0xa888>
   2031c:	mov	r0, r8
   20320:	mov	r1, r5
   20324:	b	207e8 <main@@Base+0xa758>
   20328:	bne	20338 <main@@Base+0xa2a8>
   2032c:	ldrb	r0, [r4, #2]!
   20330:	cmp	r0, #32
   20334:	bhi	20348 <main@@Base+0xa2b8>
   20338:	ldr	r0, [sp, #36]	; 0x24
   2033c:	ldr	r2, [sp, #44]	; 0x2c
   20340:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   20344:	mov	r4, r0
   20348:	ldr	r6, [sp, #44]	; 0x2c
   2034c:	cmp	r4, r6
   20350:	beq	20364 <main@@Base+0xa2d4>
   20354:	ldrb	r0, [r4]
   20358:	cmp	r0, #93	; 0x5d
   2035c:	beq	20814 <main@@Base+0xa784>
   20360:	mov	r6, r4
   20364:	mov	r0, #0
   20368:	mov	r1, #1
   2036c:	strb	r0, [fp, #-60]	; 0xffffffc4
   20370:	ldr	r0, [sp, #36]	; 0x24
   20374:	ldr	r0, [r0]
   20378:	bl	2eca8 <flatcc_builder_extend_vector@@Base>
   2037c:	cmp	r0, #0
   20380:	beq	20b08 <main@@Base+0xaa78>
   20384:	mov	r8, r0
   20388:	mov	r4, r6
   2038c:	ldr	r5, [sp, #44]	; 0x2c
   20390:	mov	r6, #0
   20394:	str	r6, [fp, #-52]	; 0xffffffcc
   20398:	str	r6, [fp, #-56]	; 0xffffffc8
   2039c:	strb	r6, [fp, #-60]	; 0xffffffc4
   203a0:	str	r6, [sp, #56]	; 0x38
   203a4:	cmp	r4, r5
   203a8:	beq	203f0 <main@@Base+0xa360>
   203ac:	sub	r0, fp, #56	; 0x38
   203b0:	mov	r1, r4
   203b4:	mov	r2, r5
   203b8:	add	r3, sp, #56	; 0x38
   203bc:	str	r0, [sp]
   203c0:	ldr	r0, [sp, #36]	; 0x24
   203c4:	bl	356c0 <flatcc_json_parser_integer@@Base>
   203c8:	cmp	r0, r4
   203cc:	beq	203f8 <main@@Base+0xa368>
   203d0:	mov	r1, r0
   203d4:	ldr	r0, [sp, #56]	; 0x38
   203d8:	cmp	r0, #0
   203dc:	beq	20400 <main@@Base+0xa370>
   203e0:	ldr	r7, [sp, #36]	; 0x24
   203e4:	ldr	r5, [sp, #44]	; 0x2c
   203e8:	mov	r3, #8
   203ec:	b	20420 <main@@Base+0xa390>
   203f0:	mov	r1, r5
   203f4:	b	20440 <main@@Base+0xa3b0>
   203f8:	mov	r1, r4
   203fc:	b	2043c <main@@Base+0xa3ac>
   20400:	ldr	r0, [fp, #-56]	; 0xffffffc8
   20404:	ldr	r2, [fp, #-52]	; 0xffffffcc
   20408:	subs	r3, r0, #256	; 0x100
   2040c:	sbcs	r2, r2, #0
   20410:	bcc	20434 <main@@Base+0xa3a4>
   20414:	ldr	r7, [sp, #36]	; 0x24
   20418:	ldr	r5, [sp, #44]	; 0x2c
   2041c:	mov	r3, #7
   20420:	mov	r0, r7
   20424:	mov	r2, r5
   20428:	bl	337ac <flatcc_json_parser_set_error@@Base>
   2042c:	mov	r1, r0
   20430:	b	20444 <main@@Base+0xa3b4>
   20434:	mov	r6, r0
   20438:	strb	r0, [fp, #-60]	; 0xffffffc4
   2043c:	ldr	r5, [sp, #44]	; 0x2c
   20440:	ldr	r7, [sp, #36]	; 0x24
   20444:	cmp	r4, r1
   20448:	bne	2048c <main@@Base+0xa3fc>
   2044c:	movw	r3, #45412	; 0xb164
   20450:	sub	r0, fp, #60	; 0x3c
   20454:	mov	r1, r4
   20458:	mov	r2, r5
   2045c:	str	r0, [sp]
   20460:	mov	r0, r7
   20464:	movt	r3, #5
   20468:	bl	22a6c <main@@Base+0xc9dc>
   2046c:	cmp	r0, r4
   20470:	mov	r1, r0
   20474:	ldrne	r0, [sp, #44]	; 0x2c
   20478:	cmpne	r1, r0
   2047c:	beq	20b00 <main@@Base+0xaa70>
   20480:	ldrb	r6, [fp, #-60]	; 0xffffffc4
   20484:	ldr	r5, [sp, #44]	; 0x2c
   20488:	ldr	r7, [sp, #36]	; 0x24
   2048c:	sub	r0, r5, r1
   20490:	strb	r6, [r8]
   20494:	cmp	r0, #2
   20498:	blt	204d0 <main@@Base+0xa440>
   2049c:	ldrb	r0, [r1]
   204a0:	cmp	r0, #32
   204a4:	bls	204b4 <main@@Base+0xa424>
   204a8:	ldr	r5, [sp, #44]	; 0x2c
   204ac:	mov	r4, r1
   204b0:	b	204e0 <main@@Base+0xa450>
   204b4:	ldr	r5, [sp, #44]	; 0x2c
   204b8:	ldr	r7, [sp, #36]	; 0x24
   204bc:	bne	204d0 <main@@Base+0xa440>
   204c0:	mov	r4, r1
   204c4:	ldrb	r0, [r4, #1]!
   204c8:	cmp	r0, #32
   204cc:	bhi	204e0 <main@@Base+0xa450>
   204d0:	mov	r0, r7
   204d4:	mov	r2, r5
   204d8:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   204dc:	mov	r4, r0
   204e0:	cmp	r4, r5
   204e4:	beq	20804 <main@@Base+0xa774>
   204e8:	ldrb	r0, [r4]
   204ec:	cmp	r0, #44	; 0x2c
   204f0:	bne	2080c <main@@Base+0xa77c>
   204f4:	ldr	r5, [sp, #44]	; 0x2c
   204f8:	add	r1, r4, #1
   204fc:	sub	r0, r5, r1
   20500:	cmp	r0, #2
   20504:	ldr	r0, [sp, #36]	; 0x24
   20508:	blt	2053c <main@@Base+0xa4ac>
   2050c:	ldrb	r0, [r1]
   20510:	cmp	r0, #32
   20514:	bls	20524 <main@@Base+0xa494>
   20518:	ldr	r5, [sp, #44]	; 0x2c
   2051c:	mov	r4, r1
   20520:	b	20548 <main@@Base+0xa4b8>
   20524:	ldr	r5, [sp, #44]	; 0x2c
   20528:	ldr	r0, [sp, #36]	; 0x24
   2052c:	bne	2053c <main@@Base+0xa4ac>
   20530:	ldrb	r2, [r4, #2]!
   20534:	cmp	r2, #32
   20538:	bhi	20548 <main@@Base+0xa4b8>
   2053c:	mov	r2, r5
   20540:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   20544:	mov	r4, r0
   20548:	cmp	r4, r5
   2054c:	beq	208b8 <main@@Base+0xa828>
   20550:	ldrb	r0, [r4]
   20554:	cmp	r0, #93	; 0x5d
   20558:	beq	20814 <main@@Base+0xa784>
   2055c:	mov	r0, #0
   20560:	mov	r1, #1
   20564:	strb	r0, [fp, #-60]	; 0xffffffc4
   20568:	ldr	r0, [sp, #36]	; 0x24
   2056c:	ldr	r0, [r0]
   20570:	bl	2eca8 <flatcc_builder_extend_vector@@Base>
   20574:	mov	r8, r0
   20578:	cmp	r0, #0
   2057c:	bne	2038c <main@@Base+0xa2fc>
   20580:	b	20b0c <main@@Base+0xaa7c>
   20584:	ldr	r5, [sp, #44]	; 0x2c
   20588:	ldr	r8, [sp, #36]	; 0x24
   2058c:	ldr	sl, [sp, #40]	; 0x28
   20590:	bne	205a0 <main@@Base+0xa510>
   20594:	ldrb	r0, [r4, #2]!
   20598:	cmp	r0, #32
   2059c:	bhi	1cb9c <main@@Base+0x6b0c>
   205a0:	mov	r0, r8
   205a4:	mov	r2, r5
   205a8:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   205ac:	b	1cb98 <main@@Base+0x6b08>
   205b0:	ldr	r5, [sp, #44]	; 0x2c
   205b4:	ldr	r8, [sp, #36]	; 0x24
   205b8:	ldr	sl, [sp, #40]	; 0x28
   205bc:	b	1beb4 <main@@Base+0x5e24>
   205c0:	ldr	r5, [sp, #44]	; 0x2c
   205c4:	ldr	r8, [sp, #36]	; 0x24
   205c8:	ldr	sl, [sp, #40]	; 0x28
   205cc:	bne	205e0 <main@@Base+0xa550>
   205d0:	ldrb	r0, [r2, #2]!
   205d4:	cmp	r0, #32
   205d8:	mov	r4, r2
   205dc:	bhi	1c000 <main@@Base+0x5f70>
   205e0:	mov	r0, r8
   205e4:	mov	r2, r5
   205e8:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   205ec:	b	1bffc <main@@Base+0x5f6c>
   205f0:	ldr	r8, [sp, #36]	; 0x24
   205f4:	ldr	r5, [sp, #44]	; 0x2c
   205f8:	mov	r1, r2
   205fc:	mov	r0, r8
   20600:	mov	r2, r5
   20604:	mov	r3, #9
   20608:	bl	337ac <flatcc_json_parser_set_error@@Base>
   2060c:	ldr	sl, [sp, #40]	; 0x28
   20610:	b	1c7e8 <main@@Base+0x6758>
   20614:	ldr	r6, [fp, #-56]	; 0xffffffc8
   20618:	str	r6, [fp, #-60]	; 0xffffffc4
   2061c:	b	1ecdc <main@@Base+0x8c4c>
   20620:	mov	r4, r5
   20624:	b	209e4 <main@@Base+0xa954>
   20628:	cmp	r0, #93	; 0x5d
   2062c:	bne	20970 <main@@Base+0xa8e0>
   20630:	ldr	r0, [sp, #44]	; 0x2c
   20634:	add	r1, r4, #1
   20638:	sub	r0, r0, r1
   2063c:	b	206b4 <main@@Base+0xa624>
   20640:	mov	r0, r8
   20644:	mov	r1, r5
   20648:	mov	r2, r5
   2064c:	b	2097c <main@@Base+0xa8ec>
   20650:	mov	r4, r5
   20654:	b	209a0 <main@@Base+0xa910>
   20658:	ldr	r8, [sp, #36]	; 0x24
   2065c:	ldr	r5, [sp, #44]	; 0x2c
   20660:	mov	r1, r2
   20664:	mov	r0, r8
   20668:	mov	r2, r5
   2066c:	mov	r3, #10
   20670:	bl	337ac <flatcc_json_parser_set_error@@Base>
   20674:	ldr	sl, [sp, #40]	; 0x28
   20678:	b	1bea0 <main@@Base+0x5e10>
   2067c:	ldr	r5, [sp, #44]	; 0x2c
   20680:	ldr	r8, [sp, #36]	; 0x24
   20684:	ldr	sl, [sp, #40]	; 0x28
   20688:	bne	2069c <main@@Base+0xa60c>
   2068c:	ldrb	r0, [r4, #2]!
   20690:	cmp	r0, #32
   20694:	mov	r7, r4
   20698:	bhi	1c0b8 <main@@Base+0x6028>
   2069c:	mov	r0, r8
   206a0:	mov	r2, r5
   206a4:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   206a8:	b	1c0b4 <main@@Base+0x6024>
   206ac:	add	r1, r4, #1
   206b0:	sub	r0, r5, r1
   206b4:	cmp	r0, #2
   206b8:	blt	209d4 <main@@Base+0xa944>
   206bc:	ldrb	r0, [r1]
   206c0:	cmp	r0, #32
   206c4:	bls	209c4 <main@@Base+0xa934>
   206c8:	mov	r4, r1
   206cc:	b	209e4 <main@@Base+0xa954>
   206d0:	cmp	r0, #93	; 0x5d
   206d4:	bne	20988 <main@@Base+0xa8f8>
   206d8:	ldr	r0, [sp, #44]	; 0x2c
   206dc:	add	r1, r4, #1
   206e0:	sub	r0, r0, r1
   206e4:	b	20700 <main@@Base+0xa670>
   206e8:	mov	r0, r8
   206ec:	mov	r1, r5
   206f0:	mov	r2, r5
   206f4:	b	20994 <main@@Base+0xa904>
   206f8:	add	r1, r4, #1
   206fc:	sub	r0, r5, r1
   20700:	cmp	r0, #2
   20704:	blt	20724 <main@@Base+0xa694>
   20708:	ldrb	r0, [r1]
   2070c:	cmp	r0, #32
   20710:	bhi	1d650 <main@@Base+0x75c0>
   20714:	bne	20724 <main@@Base+0xa694>
   20718:	ldrb	r0, [r4, #2]!
   2071c:	cmp	r0, #32
   20720:	bhi	209a0 <main@@Base+0xa910>
   20724:	ldr	r0, [sp, #36]	; 0x24
   20728:	ldr	r2, [sp, #44]	; 0x2c
   2072c:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   20730:	b	2099c <main@@Base+0xa90c>
   20734:	ldr	r5, [sp, #44]	; 0x2c
   20738:	ldr	r8, [sp, #36]	; 0x24
   2073c:	ldr	sl, [sp, #40]	; 0x28
   20740:	bne	20754 <main@@Base+0xa6c4>
   20744:	ldrb	r0, [r2, #2]!
   20748:	cmp	r0, #32
   2074c:	mov	r4, r2
   20750:	bhi	1c7ec <main@@Base+0x675c>
   20754:	mov	r0, r8
   20758:	mov	r2, r5
   2075c:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   20760:	b	1c7e8 <main@@Base+0x6758>
   20764:	ldr	r8, [sp, #36]	; 0x24
   20768:	ldr	r5, [sp, #44]	; 0x2c
   2076c:	mov	r1, r2
   20770:	mov	r0, r8
   20774:	mov	r2, r5
   20778:	mov	r3, #9
   2077c:	bl	337ac <flatcc_json_parser_set_error@@Base>
   20780:	ldr	sl, [sp, #40]	; 0x28
   20784:	b	1d070 <main@@Base+0x6fe0>
   20788:	ldr	r0, [sp, #36]	; 0x24
   2078c:	ldr	r2, [sp, #44]	; 0x2c
   20790:	mov	r1, r4
   20794:	mov	r3, #9
   20798:	bl	337ac <flatcc_json_parser_set_error@@Base>
   2079c:	b	20914 <main@@Base+0xa884>
   207a0:	mov	r4, r5
   207a4:	b	1ca8c <main@@Base+0x69fc>
   207a8:	cmp	r0, #125	; 0x7d
   207ac:	bne	209b0 <main@@Base+0xa920>
   207b0:	ldr	r0, [sp, #44]	; 0x2c
   207b4:	add	r1, r2, #1
   207b8:	sub	r0, r0, r1
   207bc:	cmp	r0, #2
   207c0:	blt	20a14 <main@@Base+0xa984>
   207c4:	ldrb	r0, [r1]
   207c8:	cmp	r0, #32
   207cc:	bls	20a00 <main@@Base+0xa970>
   207d0:	mov	r4, r1
   207d4:	b	1ca8c <main@@Base+0x69fc>
   207d8:	ldr	r8, [sp, #36]	; 0x24
   207dc:	ldr	r5, [sp, #44]	; 0x2c
   207e0:	mov	r1, r3
   207e4:	mov	r0, r8
   207e8:	mov	r2, r5
   207ec:	mov	r3, #10
   207f0:	b	1c674 <main@@Base+0x65e4>
   207f4:	mov	r0, r6
   207f8:	mov	r1, r5
   207fc:	mov	r2, r5
   20800:	b	209bc <main@@Base+0xa92c>
   20804:	ldr	r4, [sp, #44]	; 0x2c
   20808:	b	2085c <main@@Base+0xa7cc>
   2080c:	cmp	r0, #93	; 0x5d
   20810:	bne	209ec <main@@Base+0xa95c>
   20814:	ldr	r0, [sp, #44]	; 0x2c
   20818:	add	r1, r4, #1
   2081c:	sub	r0, r0, r1
   20820:	cmp	r0, #2
   20824:	blt	2084c <main@@Base+0xa7bc>
   20828:	ldrb	r0, [r1]
   2082c:	cmp	r0, #32
   20830:	bls	2083c <main@@Base+0xa7ac>
   20834:	mov	r4, r1
   20838:	b	2085c <main@@Base+0xa7cc>
   2083c:	bne	2084c <main@@Base+0xa7bc>
   20840:	ldrb	r0, [r4, #2]!
   20844:	cmp	r0, #32
   20848:	bhi	2085c <main@@Base+0xa7cc>
   2084c:	ldr	r0, [sp, #36]	; 0x24
   20850:	ldr	r2, [sp, #44]	; 0x2c
   20854:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   20858:	mov	r4, r0
   2085c:	ldr	r8, [sp, #36]	; 0x24
   20860:	ldr	r0, [r8]
   20864:	bl	3052c <flatcc_builder_end_vector@@Base>
   20868:	ldr	r5, [sp, #44]	; 0x2c
   2086c:	ldr	sl, [sp, #40]	; 0x28
   20870:	cmp	r0, #0
   20874:	str	r0, [sp, #52]	; 0x34
   20878:	beq	16fc4 <main@@Base+0xf34>
   2087c:	ldr	r0, [r8]
   20880:	mov	r1, #13
   20884:	b	19718 <main@@Base+0x3688>
   20888:	ldr	r5, [sp, #44]	; 0x2c
   2088c:	ldr	r8, [sp, #36]	; 0x24
   20890:	ldr	sl, [sp, #40]	; 0x28
   20894:	bne	208a8 <main@@Base+0xa818>
   20898:	ldrb	r0, [r2, #2]!
   2089c:	cmp	r0, #32
   208a0:	mov	r4, r2
   208a4:	bhi	1bea4 <main@@Base+0x5e14>
   208a8:	mov	r0, r8
   208ac:	mov	r2, r5
   208b0:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   208b4:	b	1bea0 <main@@Base+0x5e10>
   208b8:	ldr	r1, [sp, #44]	; 0x2c
   208bc:	ldr	r0, [sp, #36]	; 0x24
   208c0:	mov	r2, r1
   208c4:	b	209f8 <main@@Base+0xa968>
   208c8:	ldr	r5, [sp, #44]	; 0x2c
   208cc:	ldr	r8, [sp, #36]	; 0x24
   208d0:	ldr	sl, [sp, #40]	; 0x28
   208d4:	bne	208e8 <main@@Base+0xa858>
   208d8:	ldrb	r0, [r2, #2]!
   208dc:	cmp	r0, #32
   208e0:	mov	r4, r2
   208e4:	bhi	1d074 <main@@Base+0x6fe4>
   208e8:	mov	r0, r8
   208ec:	mov	r2, r5
   208f0:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   208f4:	b	1d070 <main@@Base+0x6fe0>
   208f8:	bne	20908 <main@@Base+0xa878>
   208fc:	ldrb	r0, [r4, #2]!
   20900:	cmp	r0, #32
   20904:	bhi	20918 <main@@Base+0xa888>
   20908:	ldr	r0, [sp, #36]	; 0x24
   2090c:	ldr	r2, [sp, #44]	; 0x2c
   20910:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   20914:	mov	r4, r0
   20918:	ldr	r5, [sp, #44]	; 0x2c
   2091c:	ldr	r8, [sp, #36]	; 0x24
   20920:	ldr	sl, [sp, #40]	; 0x28
   20924:	ldr	r0, [r8]
   20928:	bl	3052c <flatcc_builder_end_vector@@Base>
   2092c:	cmp	r0, #0
   20930:	str	r0, [sp, #52]	; 0x34
   20934:	beq	16fc4 <main@@Base+0xf34>
   20938:	ldr	r0, [r8]
   2093c:	mov	r1, #32
   20940:	b	19718 <main@@Base+0x3688>
   20944:	ldr	r5, [sp, #44]	; 0x2c
   20948:	ldr	r8, [sp, #36]	; 0x24
   2094c:	bne	20960 <main@@Base+0xa8d0>
   20950:	ldrb	r0, [r3, #2]!
   20954:	cmp	r0, #32
   20958:	mov	r4, r3
   2095c:	bhi	1c67c <main@@Base+0x65ec>
   20960:	mov	r0, r8
   20964:	mov	r2, r5
   20968:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   2096c:	b	1c678 <main@@Base+0x65e8>
   20970:	ldr	r0, [sp, #36]	; 0x24
   20974:	ldr	r2, [sp, #44]	; 0x2c
   20978:	mov	r1, r4
   2097c:	mov	r3, #9
   20980:	bl	337ac <flatcc_json_parser_set_error@@Base>
   20984:	b	209e0 <main@@Base+0xa950>
   20988:	ldr	r0, [sp, #36]	; 0x24
   2098c:	ldr	r2, [sp, #44]	; 0x2c
   20990:	mov	r1, r4
   20994:	mov	r3, #9
   20998:	bl	337ac <flatcc_json_parser_set_error@@Base>
   2099c:	mov	r4, r0
   209a0:	ldr	r5, [sp, #44]	; 0x2c
   209a4:	ldr	r8, [sp, #36]	; 0x24
   209a8:	ldr	sl, [sp, #40]	; 0x28
   209ac:	b	1cb9c <main@@Base+0x6b0c>
   209b0:	mov	r1, r2
   209b4:	ldr	r0, [sp, #36]	; 0x24
   209b8:	ldr	r2, [sp, #44]	; 0x2c
   209bc:	mov	r3, #10
   209c0:	b	1ca84 <main@@Base+0x69f4>
   209c4:	bne	209d4 <main@@Base+0xa944>
   209c8:	ldrb	r0, [r4, #2]!
   209cc:	cmp	r0, #32
   209d0:	bhi	209e4 <main@@Base+0xa954>
   209d4:	ldr	r0, [sp, #36]	; 0x24
   209d8:	ldr	r2, [sp, #44]	; 0x2c
   209dc:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   209e0:	mov	r4, r0
   209e4:	ldr	r8, [sp, #36]	; 0x24
   209e8:	b	1e290 <main@@Base+0x8200>
   209ec:	ldr	r0, [sp, #36]	; 0x24
   209f0:	ldr	r2, [sp, #44]	; 0x2c
   209f4:	mov	r1, r4
   209f8:	mov	r3, #9
   209fc:	b	1d5e4 <main@@Base+0x7554>
   20a00:	bne	20a14 <main@@Base+0xa984>
   20a04:	ldrb	r0, [r2, #2]!
   20a08:	cmp	r0, #32
   20a0c:	mov	r4, r2
   20a10:	bhi	1ca8c <main@@Base+0x69fc>
   20a14:	ldr	r0, [sp, #36]	; 0x24
   20a18:	ldr	r2, [sp, #44]	; 0x2c
   20a1c:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   20a20:	b	1ca88 <main@@Base+0x69f8>
   20a24:	mov	r4, r5
   20a28:	b	20ac0 <main@@Base+0xaa30>
   20a2c:	cmp	r0, #125	; 0x7d
   20a30:	bne	20aa8 <main@@Base+0xaa18>
   20a34:	add	r4, r2, #1
   20a38:	sub	r0, r5, r4
   20a3c:	cmp	r0, #2
   20a40:	blt	20a68 <main@@Base+0xa9d8>
   20a44:	ldrb	r0, [r4]
   20a48:	cmp	r0, #32
   20a4c:	bhi	20ac0 <main@@Base+0xaa30>
   20a50:	bne	20a68 <main@@Base+0xa9d8>
   20a54:	ldrb	r0, [r2, #2]!
   20a58:	cmp	r0, #32
   20a5c:	bls	20a68 <main@@Base+0xa9d8>
   20a60:	mov	r4, r2
   20a64:	b	20ac0 <main@@Base+0xaa30>
   20a68:	mov	r0, r8
   20a6c:	mov	r1, r4
   20a70:	mov	r2, r5
   20a74:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   20a78:	b	20abc <main@@Base+0xaa2c>
   20a7c:	mov	r0, r8
   20a80:	mov	r1, r5
   20a84:	b	20ab0 <main@@Base+0xaa20>
   20a88:	bne	20a98 <main@@Base+0xaa08>
   20a8c:	ldrb	r0, [r4, #2]!
   20a90:	cmp	r0, #32
   20a94:	bhi	17064 <main@@Base+0xfd4>
   20a98:	mov	r0, r8
   20a9c:	mov	r2, r5
   20aa0:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   20aa4:	b	17060 <main@@Base+0xfd0>
   20aa8:	mov	r0, r8
   20aac:	mov	r1, r2
   20ab0:	mov	r2, r5
   20ab4:	mov	r3, #10
   20ab8:	bl	337ac <flatcc_json_parser_set_error@@Base>
   20abc:	mov	r4, r0
   20ac0:	ldr	r0, [sp, #28]
   20ac4:	b	17068 <main@@Base+0xfd8>
   20ac8:	mov	r4, r1
   20acc:	b	16fc4 <main@@Base+0xf34>
   20ad0:	mov	r4, r6
   20ad4:	b	16fc4 <main@@Base+0xf34>
   20ad8:	ldr	r5, [sp, #44]	; 0x2c
   20adc:	b	16fc4 <main@@Base+0xf34>
   20ae0:	mov	r4, r5
   20ae4:	b	20b0c <main@@Base+0xaa7c>
   20ae8:	mov	r4, r1
   20aec:	b	20b10 <main@@Base+0xaa80>
   20af0:	ldr	r5, [sp, #44]	; 0x2c
   20af4:	ldr	r8, [sp, #36]	; 0x24
   20af8:	mov	r4, r7
   20afc:	b	16fc4 <main@@Base+0xf34>
   20b00:	mov	r4, r1
   20b04:	b	20b0c <main@@Base+0xaa7c>
   20b08:	mov	r4, r6
   20b0c:	ldr	r5, [sp, #44]	; 0x2c
   20b10:	ldr	r8, [sp, #36]	; 0x24
   20b14:	b	16fc4 <main@@Base+0xf34>
   20b18:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20b1c:	add	fp, sp, #28
   20b20:	sub	sp, sp, #20
   20b24:	mov	r5, r0
   20b28:	movw	r0, #52296	; 0xcc48
   20b2c:	movw	r3, #27773	; 0x6c7d
   20b30:	mov	r4, r1
   20b34:	mov	r1, #3
   20b38:	mov	r2, #0
   20b3c:	mov	r8, #0
   20b40:	movt	r0, #2
   20b44:	str	r1, [sp]
   20b48:	movt	r3, #4
   20b4c:	mov	r1, r4
   20b50:	str	r0, [sp, #4]
   20b54:	mov	r0, r5
   20b58:	bl	41a20 <flatcc_json_printer_struct_field@@Base>
   20b5c:	movw	r3, #27777	; 0x6c81
   20b60:	mov	r0, #150	; 0x96
   20b64:	mov	r1, #4
   20b68:	mov	r2, #1
   20b6c:	mov	r6, #4
   20b70:	str	r1, [sp]
   20b74:	str	r0, [sp, #4]
   20b78:	movt	r3, #4
   20b7c:	mov	r0, r5
   20b80:	mov	r1, r4
   20b84:	bl	39438 <flatcc_json_printer_int16_field@@Base>
   20b88:	movw	r3, #27782	; 0x6c86
   20b8c:	mov	r0, #100	; 0x64
   20b90:	mov	r1, #2
   20b94:	mov	r2, #2
   20b98:	str	r1, [sp]
   20b9c:	str	r0, [sp, #4]
   20ba0:	movt	r3, #4
   20ba4:	mov	r0, r5
   20ba8:	mov	r1, r4
   20bac:	bl	39438 <flatcc_json_printer_int16_field@@Base>
   20bb0:	movw	r3, #27785	; 0x6c89
   20bb4:	mov	r0, r5
   20bb8:	mov	r1, r4
   20bbc:	mov	r2, #3
   20bc0:	str	r6, [sp]
   20bc4:	movt	r3, #4
   20bc8:	bl	38bc8 <flatcc_json_printer_string_field@@Base>
   20bcc:	movw	r3, #27790	; 0x6c8e
   20bd0:	mov	r0, #9
   20bd4:	mov	r1, r4
   20bd8:	mov	r2, #5
   20bdc:	mov	r7, #5
   20be0:	str	r0, [sp]
   20be4:	movt	r3, #4
   20be8:	mov	r0, r5
   20bec:	bl	3afb4 <flatcc_json_printer_uint8_vector_field@@Base>
   20bf0:	movw	r0, #52548	; 0xcd44
   20bf4:	movw	r3, #27800	; 0x6c98
   20bf8:	mov	r1, #8
   20bfc:	mov	r2, #6
   20c00:	str	r7, [sp]
   20c04:	mov	r7, #5
   20c08:	movt	r0, #2
   20c0c:	str	r1, [sp, #4]
   20c10:	movt	r3, #4
   20c14:	mov	r1, r4
   20c18:	str	r0, [sp, #8]
   20c1c:	mov	r0, r5
   20c20:	bl	39d2c <flatcc_json_printer_int8_enum_field@@Base>
   20c24:	movw	r0, #52860	; 0xce7c
   20c28:	movw	r1, #52744	; 0xce08
   20c2c:	movw	r3, #28176	; 0x6e10
   20c30:	mov	r2, #8
   20c34:	str	r6, [sp]
   20c38:	movt	r0, #2
   20c3c:	movt	r1, #2
   20c40:	movt	r3, #4
   20c44:	str	r1, [sp, #4]
   20c48:	str	r0, [sp, #8]
   20c4c:	mov	r0, r5
   20c50:	mov	r1, r4
   20c54:	bl	41208 <flatcc_json_printer_union_field@@Base>
   20c58:	movw	r0, #52948	; 0xced4
   20c5c:	movw	r3, #27806	; 0x6c9e
   20c60:	mov	r1, r4
   20c64:	mov	r2, #9
   20c68:	str	r7, [sp]
   20c6c:	mov	sl, #5
   20c70:	str	r6, [sp, #4]
   20c74:	movt	r0, #2
   20c78:	movt	r3, #4
   20c7c:	str	r0, [sp, #8]
   20c80:	mov	r0, r5
   20c84:	bl	3feb0 <flatcc_json_printer_struct_vector_field@@Base>
   20c88:	movw	r3, #27812	; 0x6ca4
   20c8c:	mov	r7, #17
   20c90:	mov	r0, r5
   20c94:	mov	r1, r4
   20c98:	mov	r2, #10
   20c9c:	movt	r3, #4
   20ca0:	str	r7, [sp]
   20ca4:	bl	40444 <flatcc_json_printer_string_vector_field@@Base>
   20ca8:	movw	r9, #2840	; 0xb18
   20cac:	movw	r3, #27830	; 0x6cb6
   20cb0:	mov	r0, r5
   20cb4:	mov	r1, r4
   20cb8:	mov	r2, #11
   20cbc:	movt	r9, #2
   20cc0:	movt	r3, #4
   20cc4:	stm	sp, {r7, r9}
   20cc8:	bl	407f4 <flatcc_json_printer_table_vector_field@@Base>
   20ccc:	movw	r3, #27848	; 0x6cc8
   20cd0:	mov	r0, r5
   20cd4:	mov	r1, r4
   20cd8:	mov	r2, #12
   20cdc:	str	sl, [sp]
   20ce0:	mov	sl, #5
   20ce4:	str	r9, [sp, #4]
   20ce8:	movt	r3, #4
   20cec:	bl	4102c <flatcc_json_printer_table_field@@Base>
   20cf0:	movw	r3, #27854	; 0x6cce
   20cf4:	mov	r0, #20
   20cf8:	mov	r1, r4
   20cfc:	mov	r2, #13
   20d00:	stm	sp, {r0, r8, r9}
   20d04:	movt	r3, #4
   20d08:	mov	r0, r5
   20d0c:	bl	42150 <flatcc_json_printer_table_as_nested_root@@Base>
   20d10:	movw	r0, #53044	; 0xcf34
   20d14:	movw	r3, #27875	; 0x6ce3
   20d18:	mov	r1, #9
   20d1c:	mov	r2, #14
   20d20:	movt	r0, #2
   20d24:	str	r1, [sp]
   20d28:	movt	r3, #4
   20d2c:	mov	r1, r4
   20d30:	str	r0, [sp, #4]
   20d34:	mov	r0, r5
   20d38:	bl	4102c <flatcc_json_printer_table_field@@Base>
   20d3c:	movw	r3, #27885	; 0x6ced
   20d40:	mov	r0, #1
   20d44:	mov	r9, #8
   20d48:	mov	r1, r4
   20d4c:	mov	r2, #15
   20d50:	str	r0, [sp, #4]
   20d54:	movt	r3, #4
   20d58:	mov	r0, r5
   20d5c:	str	r9, [sp]
   20d60:	bl	396e8 <flatcc_json_printer_bool_field@@Base>
   20d64:	movw	r3, #27894	; 0x6cf6
   20d68:	mov	r6, #16
   20d6c:	mov	r0, r5
   20d70:	mov	r1, r4
   20d74:	mov	r2, #16
   20d78:	movt	r3, #4
   20d7c:	stm	sp, {r6, r8}
   20d80:	bl	39518 <flatcc_json_printer_int32_field@@Base>
   20d84:	movw	r3, #27911	; 0x6d07
   20d88:	mov	r0, r5
   20d8c:	mov	r1, r4
   20d90:	mov	r2, #17
   20d94:	stm	sp, {r6, r8}
   20d98:	movt	r3, #4
   20d9c:	bl	391bc <flatcc_json_printer_uint32_field@@Base>
   20da0:	movw	r3, #27928	; 0x6d18
   20da4:	mov	r0, r5
   20da8:	mov	r1, r4
   20dac:	mov	r2, #18
   20db0:	str	r8, [sp, #8]
   20db4:	str	r8, [sp, #12]
   20db8:	str	r6, [sp]
   20dbc:	movt	r3, #4
   20dc0:	bl	395f0 <flatcc_json_printer_int64_field@@Base>
   20dc4:	movw	r3, #27945	; 0x6d29
   20dc8:	mov	r0, r5
   20dcc:	mov	r1, r4
   20dd0:	mov	r2, #19
   20dd4:	str	r8, [sp, #8]
   20dd8:	str	r8, [sp, #12]
   20ddc:	str	r6, [sp]
   20de0:	movt	r3, #4
   20de4:	bl	3927c <flatcc_json_printer_uint64_field@@Base>
   20de8:	movw	r3, #27962	; 0x6d3a
   20dec:	mov	r0, r5
   20df0:	mov	r1, r4
   20df4:	mov	r2, #20
   20df8:	stm	sp, {r7, r8}
   20dfc:	movt	r3, #4
   20e00:	bl	39518 <flatcc_json_printer_int32_field@@Base>
   20e04:	movw	r3, #27980	; 0x6d4c
   20e08:	mov	r0, r5
   20e0c:	mov	r1, r4
   20e10:	mov	r2, #21
   20e14:	stm	sp, {r7, r8}
   20e18:	movt	r3, #4
   20e1c:	bl	391bc <flatcc_json_printer_uint32_field@@Base>
   20e20:	movw	r3, #27998	; 0x6d5e
   20e24:	mov	r0, r5
   20e28:	mov	r1, r4
   20e2c:	mov	r2, #22
   20e30:	str	r8, [sp, #8]
   20e34:	str	r8, [sp, #12]
   20e38:	str	r7, [sp]
   20e3c:	movt	r3, #4
   20e40:	bl	395f0 <flatcc_json_printer_int64_field@@Base>
   20e44:	movw	r3, #28016	; 0x6d70
   20e48:	mov	r0, r5
   20e4c:	mov	r1, r4
   20e50:	mov	r2, #23
   20e54:	str	r8, [sp, #8]
   20e58:	str	r8, [sp, #12]
   20e5c:	str	r7, [sp]
   20e60:	mov	r8, #23
   20e64:	movt	r3, #4
   20e68:	bl	3927c <flatcc_json_printer_uint64_field@@Base>
   20e6c:	movw	r3, #28034	; 0x6d82
   20e70:	mov	r0, r5
   20e74:	mov	r1, r4
   20e78:	mov	r2, #24
   20e7c:	str	r6, [sp]
   20e80:	movt	r3, #4
   20e84:	bl	3ce18 <flatcc_json_printer_bool_vector_field@@Base>
   20e88:	vldr	s0, [pc, #396]	; 2101c <main@@Base+0xaf8c>
   20e8c:	movw	r3, #28051	; 0x6d93
   20e90:	mov	r0, r5
   20e94:	mov	r1, r4
   20e98:	mov	r2, #25
   20e9c:	str	sl, [sp]
   20ea0:	movt	r3, #4
   20ea4:	bl	397dc <flatcc_json_printer_float_field@@Base>
   20ea8:	movw	r3, #28057	; 0x6d99
   20eac:	mov	r6, #6
   20eb0:	vmov.f32	s0, #8	; 0x40400000  3.0
   20eb4:	mov	r0, r5
   20eb8:	mov	r1, r4
   20ebc:	mov	r2, #26
   20ec0:	movt	r3, #4
   20ec4:	str	r6, [sp]
   20ec8:	bl	397dc <flatcc_json_printer_float_field@@Base>
   20ecc:	vldr	s0, [pc, #332]	; 21020 <main@@Base+0xaf90>
   20ed0:	movw	r3, #28064	; 0x6da0
   20ed4:	mov	r0, r5
   20ed8:	mov	r1, r4
   20edc:	mov	r2, #27
   20ee0:	str	r6, [sp]
   20ee4:	movt	r3, #4
   20ee8:	bl	397dc <flatcc_json_printer_float_field@@Base>
   20eec:	movw	r3, #28071	; 0x6da7
   20ef0:	mov	r0, #18
   20ef4:	mov	r1, r4
   20ef8:	mov	r2, #28
   20efc:	str	r0, [sp]
   20f00:	movt	r3, #4
   20f04:	mov	r0, r5
   20f08:	bl	40444 <flatcc_json_printer_string_vector_field@@Base>
   20f0c:	movw	r0, #53176	; 0xcfb8
   20f10:	movw	r3, #28090	; 0x6dba
   20f14:	stm	sp, {r8, r9}
   20f18:	mov	r1, r4
   20f1c:	mov	r2, #29
   20f20:	movt	r0, #2
   20f24:	movt	r3, #4
   20f28:	str	r0, [sp, #8]
   20f2c:	mov	r0, r5
   20f30:	bl	3feb0 <flatcc_json_printer_struct_vector_field@@Base>
   20f34:	movw	r3, #28114	; 0x6dd2
   20f38:	mov	r6, #4
   20f3c:	mov	r0, r5
   20f40:	mov	r1, r4
   20f44:	mov	r2, #30
   20f48:	movt	r3, #4
   20f4c:	str	r6, [sp]
   20f50:	bl	3afb4 <flatcc_json_printer_uint8_vector_field@@Base>
   20f54:	movw	r0, #52948	; 0xced4
   20f58:	movw	r3, #28119	; 0x6dd7
   20f5c:	mov	r1, r4
   20f60:	mov	r2, #31
   20f64:	str	sl, [sp]
   20f68:	str	r6, [sp, #4]
   20f6c:	movt	r0, #2
   20f70:	movt	r3, #4
   20f74:	str	r0, [sp, #8]
   20f78:	mov	r0, r5
   20f7c:	bl	3feb0 <flatcc_json_printer_struct_vector_field@@Base>
   20f80:	movw	r3, #28125	; 0x6ddd
   20f84:	mov	r0, #15
   20f88:	mov	r1, r4
   20f8c:	mov	r2, #32
   20f90:	str	r0, [sp]
   20f94:	movt	r3, #4
   20f98:	mov	r0, r5
   20f9c:	bl	3ca28 <flatcc_json_printer_int64_vector_field@@Base>
   20fa0:	movw	r3, #28141	; 0x6ded
   20fa4:	mov	r0, r5
   20fa8:	mov	r1, r4
   20fac:	mov	r2, #33	; 0x21
   20fb0:	str	r7, [sp]
   20fb4:	movt	r3, #4
   20fb8:	bl	3d5f0 <flatcc_json_printer_double_vector_field@@Base>
   20fbc:	movw	r0, #53284	; 0xd024
   20fc0:	movw	r3, #28159	; 0x6dff
   20fc4:	mov	r1, #21
   20fc8:	mov	r2, #34	; 0x22
   20fcc:	movt	r0, #2
   20fd0:	str	r1, [sp]
   20fd4:	movt	r3, #4
   20fd8:	mov	r1, r4
   20fdc:	str	r0, [sp, #4]
   20fe0:	mov	r0, r5
   20fe4:	bl	4102c <flatcc_json_printer_table_field@@Base>
   20fe8:	movw	r0, #53288	; 0xd028
   20fec:	movw	r3, #28181	; 0x6e15
   20ff0:	mov	r1, #10
   20ff4:	mov	r2, #35	; 0x23
   20ff8:	movt	r0, #2
   20ffc:	str	r1, [sp]
   21000:	movt	r3, #4
   21004:	mov	r1, r4
   21008:	str	r0, [sp, #4]
   2100c:	mov	r0, r5
   21010:	bl	4102c <flatcc_json_printer_table_field@@Base>
   21014:	sub	sp, fp, #28
   21018:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2101c:	ldmmi	r9, {r5, r6, r7, r8, sl, sp, lr}
   21020:	andeq	r0, r0, r0
   21024:	push	{r4, r5, r6, r7, fp, lr}
   21028:	add	fp, sp, #16
   2102c:	sub	sp, sp, #8
   21030:	mov	r1, #0
   21034:	mov	r2, #32
   21038:	mov	r3, #16
   2103c:	mov	r4, r0
   21040:	bl	32030 <flatcc_verify_field@@Base>
   21044:	cmp	r0, #0
   21048:	bne	21450 <main@@Base+0xb3c0>
   2104c:	mov	r0, r4
   21050:	mov	r1, #2
   21054:	mov	r2, #2
   21058:	mov	r3, #2
   2105c:	bl	32030 <flatcc_verify_field@@Base>
   21060:	cmp	r0, #0
   21064:	bne	21450 <main@@Base+0xb3c0>
   21068:	mov	r0, r4
   2106c:	mov	r1, #1
   21070:	mov	r2, #2
   21074:	mov	r3, #2
   21078:	bl	32030 <flatcc_verify_field@@Base>
   2107c:	cmp	r0, #0
   21080:	bne	21450 <main@@Base+0xb3c0>
   21084:	mov	r0, r4
   21088:	mov	r1, #3
   2108c:	mov	r2, #1
   21090:	bl	320a8 <flatcc_verify_string_field@@Base>
   21094:	cmp	r0, #0
   21098:	bne	21450 <main@@Base+0xb3c0>
   2109c:	mov	r0, r4
   210a0:	mov	r1, #6
   210a4:	mov	r2, #1
   210a8:	mov	r3, #1
   210ac:	mov	r5, #1
   210b0:	bl	32030 <flatcc_verify_field@@Base>
   210b4:	cmp	r0, #0
   210b8:	bne	21450 <main@@Base+0xb3c0>
   210bc:	mvn	r0, #0
   210c0:	mov	r1, #5
   210c4:	mov	r2, #0
   210c8:	mov	r3, #1
   210cc:	str	r5, [sp]
   210d0:	str	r0, [sp, #4]
   210d4:	mov	r0, r4
   210d8:	bl	321b0 <flatcc_verify_vector_field@@Base>
   210dc:	cmp	r0, #0
   210e0:	bne	21450 <main@@Base+0xb3c0>
   210e4:	movw	r3, #4132	; 0x1024
   210e8:	mov	r0, r4
   210ec:	mov	r1, #11
   210f0:	mov	r2, #0
   210f4:	movt	r3, #2
   210f8:	bl	324a4 <flatcc_verify_table_vector_field@@Base>
   210fc:	cmp	r0, #0
   21100:	bne	21450 <main@@Base+0xb3c0>
   21104:	mov	r0, r4
   21108:	mov	r1, #10
   2110c:	mov	r2, #0
   21110:	bl	32258 <flatcc_verify_string_vector_field@@Base>
   21114:	cmp	r0, #0
   21118:	bne	21450 <main@@Base+0xb3c0>
   2111c:	mov	r0, r4
   21120:	mov	r1, #28
   21124:	mov	r2, #0
   21128:	bl	32258 <flatcc_verify_string_vector_field@@Base>
   2112c:	cmp	r0, #0
   21130:	bne	21450 <main@@Base+0xb3c0>
   21134:	mvn	r0, #0
   21138:	mov	r1, #1
   2113c:	mov	r2, #0
   21140:	mov	r3, #1
   21144:	str	r1, [sp]
   21148:	str	r0, [sp, #4]
   2114c:	mov	r0, r4
   21150:	mov	r1, #24
   21154:	bl	321b0 <flatcc_verify_vector_field@@Base>
   21158:	cmp	r0, #0
   2115c:	bne	21450 <main@@Base+0xb3c0>
   21160:	mvn	r0, #-536870912	; 0xe0000000
   21164:	mov	r1, #4
   21168:	mov	r2, #0
   2116c:	mov	r3, #8
   21170:	str	r1, [sp]
   21174:	str	r0, [sp, #4]
   21178:	mov	r0, r4
   2117c:	mov	r1, #29
   21180:	bl	321b0 <flatcc_verify_vector_field@@Base>
   21184:	cmp	r0, #0
   21188:	bne	21450 <main@@Base+0xb3c0>
   2118c:	movw	r5, #4132	; 0x1024
   21190:	mov	r0, r4
   21194:	mov	r1, #12
   21198:	mov	r2, #0
   2119c:	movt	r5, #2
   211a0:	mov	r3, r5
   211a4:	bl	323a0 <flatcc_verify_table_field@@Base>
   211a8:	cmp	r0, #0
   211ac:	bne	21450 <main@@Base+0xb3c0>
   211b0:	movw	r3, #55128	; 0xd758
   211b4:	mov	r0, r4
   211b8:	mov	r1, #8
   211bc:	mov	r2, #0
   211c0:	movt	r3, #2
   211c4:	bl	32f1c <flatcc_verify_union_field@@Base>
   211c8:	cmp	r0, #0
   211cc:	bne	21450 <main@@Base+0xb3c0>
   211d0:	mvn	r6, #-1073741824	; 0xc0000000
   211d4:	mov	r7, #2
   211d8:	mov	r0, r4
   211dc:	mov	r1, #9
   211e0:	mov	r2, #0
   211e4:	mov	r3, #4
   211e8:	str	r7, [sp]
   211ec:	str	r6, [sp, #4]
   211f0:	bl	321b0 <flatcc_verify_vector_field@@Base>
   211f4:	cmp	r0, #0
   211f8:	bne	21450 <main@@Base+0xb3c0>
   211fc:	mov	r0, r4
   21200:	mov	r1, #31
   21204:	mov	r2, #0
   21208:	mov	r3, #4
   2120c:	str	r7, [sp]
   21210:	str	r6, [sp, #4]
   21214:	bl	321b0 <flatcc_verify_vector_field@@Base>
   21218:	cmp	r0, #0
   2121c:	bne	21450 <main@@Base+0xb3c0>
   21220:	mov	r0, #1
   21224:	mov	r1, #13
   21228:	mov	r2, #0
   2122c:	mov	r3, #0
   21230:	stm	sp, {r0, r5}
   21234:	mov	r0, r4
   21238:	bl	32d6c <flatcc_verify_table_as_nested_root@@Base>
   2123c:	cmp	r0, #0
   21240:	bne	21450 <main@@Base+0xb3c0>
   21244:	movw	r3, #55172	; 0xd784
   21248:	mov	r0, r4
   2124c:	mov	r1, #14
   21250:	mov	r2, #0
   21254:	movt	r3, #2
   21258:	bl	323a0 <flatcc_verify_table_field@@Base>
   2125c:	cmp	r0, #0
   21260:	bne	21450 <main@@Base+0xb3c0>
   21264:	mov	r0, r4
   21268:	mov	r1, #15
   2126c:	mov	r2, #1
   21270:	mov	r3, #1
   21274:	bl	32030 <flatcc_verify_field@@Base>
   21278:	cmp	r0, #0
   2127c:	bne	21450 <main@@Base+0xb3c0>
   21280:	mov	r0, r4
   21284:	mov	r1, #16
   21288:	mov	r2, #4
   2128c:	mov	r3, #4
   21290:	bl	32030 <flatcc_verify_field@@Base>
   21294:	cmp	r0, #0
   21298:	bne	21450 <main@@Base+0xb3c0>
   2129c:	mov	r0, r4
   212a0:	mov	r1, #17
   212a4:	mov	r2, #4
   212a8:	mov	r3, #4
   212ac:	bl	32030 <flatcc_verify_field@@Base>
   212b0:	cmp	r0, #0
   212b4:	bne	21450 <main@@Base+0xb3c0>
   212b8:	mov	r0, r4
   212bc:	mov	r1, #18
   212c0:	mov	r2, #8
   212c4:	mov	r3, #8
   212c8:	bl	32030 <flatcc_verify_field@@Base>
   212cc:	cmp	r0, #0
   212d0:	bne	21450 <main@@Base+0xb3c0>
   212d4:	mov	r0, r4
   212d8:	mov	r1, #19
   212dc:	mov	r2, #8
   212e0:	mov	r3, #8
   212e4:	bl	32030 <flatcc_verify_field@@Base>
   212e8:	cmp	r0, #0
   212ec:	bne	21450 <main@@Base+0xb3c0>
   212f0:	mov	r0, r4
   212f4:	mov	r1, #20
   212f8:	mov	r2, #4
   212fc:	mov	r3, #4
   21300:	bl	32030 <flatcc_verify_field@@Base>
   21304:	cmp	r0, #0
   21308:	bne	21450 <main@@Base+0xb3c0>
   2130c:	mov	r0, r4
   21310:	mov	r1, #21
   21314:	mov	r2, #4
   21318:	mov	r3, #4
   2131c:	bl	32030 <flatcc_verify_field@@Base>
   21320:	cmp	r0, #0
   21324:	bne	21450 <main@@Base+0xb3c0>
   21328:	mov	r0, r4
   2132c:	mov	r1, #22
   21330:	mov	r2, #8
   21334:	mov	r3, #8
   21338:	bl	32030 <flatcc_verify_field@@Base>
   2133c:	cmp	r0, #0
   21340:	bne	21450 <main@@Base+0xb3c0>
   21344:	mov	r0, r4
   21348:	mov	r1, #23
   2134c:	mov	r2, #8
   21350:	mov	r3, #8
   21354:	bl	32030 <flatcc_verify_field@@Base>
   21358:	cmp	r0, #0
   2135c:	bne	21450 <main@@Base+0xb3c0>
   21360:	mov	r0, r4
   21364:	mov	r1, #25
   21368:	mov	r2, #4
   2136c:	mov	r3, #4
   21370:	bl	32030 <flatcc_verify_field@@Base>
   21374:	cmp	r0, #0
   21378:	bne	21450 <main@@Base+0xb3c0>
   2137c:	mov	r0, r4
   21380:	mov	r1, #26
   21384:	mov	r2, #4
   21388:	mov	r3, #4
   2138c:	bl	32030 <flatcc_verify_field@@Base>
   21390:	cmp	r0, #0
   21394:	bne	21450 <main@@Base+0xb3c0>
   21398:	mov	r0, r4
   2139c:	mov	r1, #27
   213a0:	mov	r2, #4
   213a4:	mov	r3, #4
   213a8:	bl	32030 <flatcc_verify_field@@Base>
   213ac:	cmp	r0, #0
   213b0:	bne	21450 <main@@Base+0xb3c0>
   213b4:	mvn	r0, #0
   213b8:	mov	r1, #1
   213bc:	mov	r2, #0
   213c0:	mov	r3, #1
   213c4:	str	r1, [sp]
   213c8:	str	r0, [sp, #4]
   213cc:	mov	r0, r4
   213d0:	mov	r1, #30
   213d4:	bl	321b0 <flatcc_verify_vector_field@@Base>
   213d8:	cmp	r0, #0
   213dc:	bne	21450 <main@@Base+0xb3c0>
   213e0:	mvn	r5, #-536870912	; 0xe0000000
   213e4:	mov	r6, #8
   213e8:	mov	r0, r4
   213ec:	mov	r1, #32
   213f0:	mov	r2, #0
   213f4:	mov	r3, #8
   213f8:	str	r6, [sp]
   213fc:	str	r5, [sp, #4]
   21400:	bl	321b0 <flatcc_verify_vector_field@@Base>
   21404:	cmp	r0, #0
   21408:	bne	21450 <main@@Base+0xb3c0>
   2140c:	mov	r0, r4
   21410:	mov	r1, #33	; 0x21
   21414:	mov	r2, #0
   21418:	mov	r3, #8
   2141c:	str	r6, [sp]
   21420:	str	r5, [sp, #4]
   21424:	bl	321b0 <flatcc_verify_vector_field@@Base>
   21428:	cmp	r0, #0
   2142c:	bne	21450 <main@@Base+0xb3c0>
   21430:	movw	r3, #55260	; 0xd7dc
   21434:	mov	r0, r4
   21438:	mov	r1, #34	; 0x22
   2143c:	mov	r2, #0
   21440:	movt	r3, #2
   21444:	bl	323a0 <flatcc_verify_table_field@@Base>
   21448:	cmp	r0, #0
   2144c:	beq	21458 <main@@Base+0xb3c8>
   21450:	sub	sp, fp, #16
   21454:	pop	{r4, r5, r6, r7, fp, pc}
   21458:	movw	r3, #55268	; 0xd7e4
   2145c:	mov	r0, r4
   21460:	mov	r1, #35	; 0x23
   21464:	mov	r2, #0
   21468:	movt	r3, #2
   2146c:	sub	sp, fp, #16
   21470:	pop	{r4, r5, r6, r7, fp, lr}
   21474:	b	323a0 <flatcc_verify_table_field@@Base>
   21478:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2147c:	add	fp, sp, #28
   21480:	sub	sp, sp, #12
   21484:	mov	r5, r1
   21488:	sub	r1, r2, r1
   2148c:	cmp	r1, #8
   21490:	movcs	r1, #8
   21494:	and	r1, r1, #15
   21498:	sub	r4, r1, #1
   2149c:	cmp	r4, #7
   214a0:	bhi	21610 <main@@Base+0xb580>
   214a4:	str	r3, [sp, #8]
   214a8:	add	r8, pc, #32
   214ac:	mov	r9, #0
   214b0:	mov	ip, #0
   214b4:	mov	lr, #0
   214b8:	mov	sl, #0
   214bc:	mov	r6, #0
   214c0:	mov	r3, #0
   214c4:	mov	r1, #0
   214c8:	mov	r7, #0
   214cc:	ldr	pc, [r8, r4, lsl #2]
   214d0:	andeq	r1, r2, r4, lsr r5
   214d4:	andeq	r1, r2, ip, lsr #10
   214d8:	andeq	r1, r2, r4, lsr #10
   214dc:	andeq	r1, r2, ip, lsl r5
   214e0:	andeq	r1, r2, r0, lsl r5
   214e4:	andeq	r1, r2, r4, lsl #10
   214e8:	strdeq	r1, [r2], -r4
   214ec:	strdeq	r1, [r2], -r0
   214f0:	ldrb	ip, [r5, #7]
   214f4:	ldrb	r1, [r5, #6]
   214f8:	mov	lr, r9
   214fc:	orr	r1, ip, r1, lsl #8
   21500:	mov	r9, r1
   21504:	ldrb	r1, [r5, #5]
   21508:	mov	sl, lr
   2150c:	orr	r9, r9, r1, lsl #16
   21510:	ldrb	r1, [r5, #4]
   21514:	mov	r6, sl
   21518:	orr	r9, r9, r1, lsl #24
   2151c:	ldrb	r1, [r5, #3]
   21520:	orr	r3, r1, r6
   21524:	ldrb	r1, [r5, #2]
   21528:	orr	r1, r3, r1, lsl #8
   2152c:	ldrb	r3, [r5, #1]
   21530:	orr	r7, r1, r3, lsl #16
   21534:	ldrb	r1, [r5]
   21538:	ldr	r3, [fp, #12]
   2153c:	ldr	r8, [fp, #8]
   21540:	movw	r4, #25957	; 0x6565
   21544:	movt	r4, #18290	; 0x4772
   21548:	orr	r7, r7, r1, lsl #24
   2154c:	mvn	r1, #-1845493760	; 0x92000000
   21550:	subs	r1, r1, r9
   21554:	sbcs	r1, r4, r7
   21558:	bcc	21590 <main@@Base+0xb500>
   2155c:	movw	r1, #30053	; 0x7565
   21560:	movt	r1, #17004	; 0x426c
   21564:	teq	r7, r1
   21568:	bne	21610 <main@@Base+0xb580>
   2156c:	str	r3, [sp]
   21570:	mov	r1, r5
   21574:	mov	r3, #4
   21578:	bl	33d04 <flatcc_json_parser_match_constant@@Base>
   2157c:	cmp	r0, r5
   21580:	beq	21610 <main@@Base+0xb580>
   21584:	mov	r1, #0
   21588:	mov	r2, #8
   2158c:	b	215fc <main@@Base+0xb56c>
   21590:	movw	r6, #25600	; 0x6400
   21594:	bic	r1, r7, #255	; 0xff
   21598:	movt	r6, #21093	; 0x5265
   2159c:	teq	r1, r6
   215a0:	bne	215c8 <main@@Base+0xb538>
   215a4:	str	r3, [sp]
   215a8:	mov	r1, r5
   215ac:	mov	r3, #3
   215b0:	bl	33d04 <flatcc_json_parser_match_constant@@Base>
   215b4:	cmp	r0, r5
   215b8:	beq	21610 <main@@Base+0xb580>
   215bc:	mov	r1, #0
   215c0:	mov	r2, #1
   215c4:	b	215fc <main@@Base+0xb56c>
   215c8:	eor	r1, r7, r4
   215cc:	and	r7, r9, #-16777216	; 0xff000000
   215d0:	eor	r7, r7, #1845493760	; 0x6e000000
   215d4:	orrs	r1, r7, r1
   215d8:	bne	21610 <main@@Base+0xb580>
   215dc:	str	r3, [sp]
   215e0:	mov	r1, r5
   215e4:	mov	r3, #5
   215e8:	bl	33d04 <flatcc_json_parser_match_constant@@Base>
   215ec:	cmp	r0, r5
   215f0:	beq	21610 <main@@Base+0xb580>
   215f4:	mov	r1, #0
   215f8:	mov	r2, #2
   215fc:	str	r2, [r8]
   21600:	str	r1, [r8, #4]
   21604:	mov	r5, r0
   21608:	ldr	r2, [sp, #8]
   2160c:	str	r1, [r2]
   21610:	mov	r0, r5
   21614:	sub	sp, fp, #28
   21618:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2161c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21620:	add	fp, sp, #28
   21624:	push	{r0, r3}
   21628:	sub	r0, r2, r1
   2162c:	cmp	r0, #8
   21630:	mov	r3, r0
   21634:	movcs	r3, #8
   21638:	and	r3, r3, #15
   2163c:	sub	r6, r3, #1
   21640:	cmp	r6, #7
   21644:	bhi	219d8 <main@@Base+0xb948>
   21648:	add	r3, pc, #32
   2164c:	mov	lr, #0
   21650:	mov	r8, #0
   21654:	mov	r9, #0
   21658:	mov	sl, #0
   2165c:	mov	r7, #0
   21660:	mov	r4, #0
   21664:	mov	r5, #0
   21668:	mov	ip, #0
   2166c:	ldr	pc, [r3, r6, lsl #2]
   21670:	ldrdeq	r1, [r2], -r4
   21674:	andeq	r1, r2, ip, asr #13
   21678:	andeq	r1, r2, r4, asr #13
   2167c:			; <UNDEFINED> instruction: 0x000216bc
   21680:			; <UNDEFINED> instruction: 0x000216b0
   21684:	andeq	r1, r2, r4, lsr #13
   21688:	muleq	r2, r4, r6
   2168c:	muleq	r2, r0, r6
   21690:	ldrb	r8, [r1, #7]
   21694:	ldrb	r3, [r1, #6]
   21698:	mov	r9, lr
   2169c:	orr	r3, r8, r3, lsl #8
   216a0:	mov	lr, r3
   216a4:	ldrb	r3, [r1, #5]
   216a8:	mov	sl, r9
   216ac:	orr	lr, lr, r3, lsl #16
   216b0:	ldrb	r3, [r1, #4]
   216b4:	mov	r7, sl
   216b8:	orr	lr, lr, r3, lsl #24
   216bc:	ldrb	r3, [r1, #3]
   216c0:	orr	r4, r3, r7
   216c4:	ldrb	r3, [r1, #2]
   216c8:	orr	r5, r4, r3, lsl #8
   216cc:	ldrb	r3, [r1, #1]
   216d0:	orr	ip, r5, r3, lsl #16
   216d4:	ldrb	r3, [r1]
   216d8:	movw	r4, #30061	; 0x756d
   216dc:	movw	r6, #30815	; 0x785f
   216e0:	movt	r4, #25966	; 0x656e
   216e4:	movt	r6, #26725	; 0x6865
   216e8:	orr	r5, ip, r3, lsl #24
   216ec:	subs	r3, lr, r4
   216f0:	sbcs	r3, r5, r6
   216f4:	bcs	2175c <main@@Base+0xb6cc>
   216f8:	movw	r4, #27759	; 0x6c6f
   216fc:	mvn	r3, #-1912602624	; 0x8e000000
   21700:	bic	r6, r5, #255	; 0xff
   21704:	movt	r4, #17263	; 0x436f
   21708:	subs	r3, r3, lr
   2170c:	sbcs	r3, r4, r5
   21710:	bcc	217b8 <main@@Base+0xb728>
   21714:	cmp	r0, #4
   21718:	blt	219d8 <main@@Base+0xb948>
   2171c:	movw	r0, #30976	; 0x7900
   21720:	movt	r0, #16750	; 0x416e
   21724:	teq	r6, r0
   21728:	bne	219d8 <main@@Base+0xb948>
   2172c:	ldrb	r0, [r1, #3]
   21730:	mov	ip, r1
   21734:	cmp	r0, #46	; 0x2e
   21738:	addeq	ip, ip, #4
   2173c:	cmp	ip, r1
   21740:	beq	219d8 <main@@Base+0xb948>
   21744:	ldr	r0, [sp]
   21748:	ldr	r3, [sp, #4]
   2174c:	mov	r1, ip
   21750:	sub	sp, fp, #28
   21754:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21758:	b	2452c <main@@Base+0xe49c>
   2175c:	add	r3, r6, #64512	; 0xfc00
   21760:	add	r7, r3, #17301504	; 0x1080000
   21764:	subs	r3, lr, r4
   21768:	sbcs	r3, r5, r7
   2176c:	bcs	21800 <main@@Base+0xb770>
   21770:	cmp	r0, #9
   21774:	blt	219d8 <main@@Base+0xb948>
   21778:	eor	r0, lr, r4
   2177c:	eor	r3, r5, r6
   21780:	orrs	r0, r0, r3
   21784:	bne	219d8 <main@@Base+0xb948>
   21788:	ldrb	r0, [r1, #8]
   2178c:	mov	ip, r1
   21790:	cmp	r0, #46	; 0x2e
   21794:	addeq	ip, ip, #9
   21798:	cmp	ip, r1
   2179c:	beq	219d8 <main@@Base+0xb948>
   217a0:	ldr	r0, [sp]
   217a4:	ldr	r3, [sp, #4]
   217a8:	mov	r1, ip
   217ac:	sub	sp, fp, #28
   217b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   217b4:	b	258c4 <main@@Base+0xf834>
   217b8:	movw	r3, #28416	; 0x6f00
   217bc:	movt	r3, #18031	; 0x466f
   217c0:	teq	r6, r3
   217c4:	bne	2185c <main@@Base+0xb7cc>
   217c8:	cmp	r0, #4
   217cc:	blt	219d8 <main@@Base+0xb948>
   217d0:	ldrb	r0, [r1, #3]
   217d4:	mov	ip, r1
   217d8:	cmp	r0, #46	; 0x2e
   217dc:	addeq	ip, ip, #4
   217e0:	cmp	ip, r1
   217e4:	beq	219d8 <main@@Base+0xb948>
   217e8:	ldr	r0, [sp]
   217ec:	ldr	r3, [sp, #4]
   217f0:	mov	r1, ip
   217f4:	sub	sp, fp, #28
   217f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   217fc:	b	25654 <main@@Base+0xf5c4>
   21800:	sub	r3, r6, #4352	; 0x1100
   21804:	subs	r6, lr, r4
   21808:	sub	r3, r3, #-100663296	; 0xfa000000
   2180c:	sbcs	r3, r5, r3
   21810:	bcs	218a8 <main@@Base+0xb818>
   21814:	cmp	r0, #9
   21818:	blt	219d8 <main@@Base+0xb948>
   2181c:	eor	r0, lr, r4
   21820:	eor	r3, r5, r7
   21824:	orrs	r0, r0, r3
   21828:	bne	219d8 <main@@Base+0xb948>
   2182c:	ldrb	r0, [r1, #8]
   21830:	mov	ip, r1
   21834:	cmp	r0, #46	; 0x2e
   21838:	addeq	ip, ip, #9
   2183c:	cmp	ip, r1
   21840:	beq	219d8 <main@@Base+0xb948>
   21844:	ldr	r0, [sp]
   21848:	ldr	r3, [sp, #4]
   2184c:	mov	r1, ip
   21850:	sub	sp, fp, #28
   21854:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21858:	b	25a74 <main@@Base+0xf9e4>
   2185c:	cmp	r0, #6
   21860:	blt	219d8 <main@@Base+0xb948>
   21864:	and	r0, lr, #-16777216	; 0xff000000
   21868:	eor	r3, r5, r4
   2186c:	eor	r0, r0, #1912602624	; 0x72000000
   21870:	orrs	r0, r0, r3
   21874:	bne	219d8 <main@@Base+0xb948>
   21878:	ldrb	r0, [r1, #5]
   2187c:	mov	ip, r1
   21880:	cmp	r0, #46	; 0x2e
   21884:	addeq	ip, ip, #6
   21888:	cmp	ip, r1
   2188c:	beq	219d8 <main@@Base+0xb948>
   21890:	ldr	r0, [sp]
   21894:	ldr	r3, [sp, #4]
   21898:	mov	r1, ip
   2189c:	sub	sp, fp, #28
   218a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   218a4:	b	21478 <main@@Base+0xb3e8>
   218a8:	movw	r3, #29817	; 0x7479
   218ac:	movw	r7, #29797	; 0x7465
   218b0:	movt	r3, #28016	; 0x6d70
   218b4:	movt	r7, #28271	; 0x6e6f
   218b8:	eor	r3, lr, r3
   218bc:	eor	r7, r5, r7
   218c0:	orrs	r3, r3, r7
   218c4:	beq	21918 <main@@Base+0xb888>
   218c8:	movw	r7, #26463	; 0x675f
   218cc:	eor	r3, lr, r4
   218d0:	movt	r7, #28261	; 0x6e65
   218d4:	eor	r7, r5, r7
   218d8:	orrs	r3, r3, r7
   218dc:	bne	219d8 <main@@Base+0xb948>
   218e0:	cmp	r0, #9
   218e4:	blt	219d8 <main@@Base+0xb948>
   218e8:	ldrb	r0, [r1, #8]
   218ec:	mov	ip, r1
   218f0:	cmp	r0, #46	; 0x2e
   218f4:	addeq	ip, ip, #9
   218f8:	cmp	ip, r1
   218fc:	beq	219d8 <main@@Base+0xb948>
   21900:	ldr	r0, [sp]
   21904:	ldr	r3, [sp, #4]
   21908:	mov	r1, ip
   2190c:	sub	sp, fp, #28
   21910:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21914:	b	25c68 <main@@Base+0xfbd8>
   21918:	add	lr, r1, #8
   2191c:	sub	r9, r2, lr
   21920:	cmp	r9, #8
   21924:	mov	r0, r9
   21928:	movcs	r0, #8
   2192c:	and	r0, r0, #15
   21930:	sub	r6, r0, #1
   21934:	cmp	r6, #7
   21938:	bhi	219d8 <main@@Base+0xb948>
   2193c:	add	r0, pc, #16
   21940:	mov	ip, #0
   21944:	mov	r8, #0
   21948:	mov	r5, #0
   2194c:	mov	r7, #0
   21950:	ldr	pc, [r0, r6, lsl #2]
   21954:	andeq	r1, r2, ip, lsl #19
   21958:	andeq	r1, r2, r4, lsl #19
   2195c:	andeq	r1, r2, ip, ror r9
   21960:	andeq	r1, r2, r4, ror r9
   21964:	andeq	r1, r2, r4, ror r9
   21968:	andeq	r1, r2, r4, ror r9
   2196c:	andeq	r1, r2, r4, ror r9
   21970:	andeq	r1, r2, r4, ror r9
   21974:	ldrb	r8, [r1, #11]
   21978:	mov	ip, #0
   2197c:	ldrb	r0, [r1, #10]
   21980:	orr	r5, r8, r0, lsl #8
   21984:	ldrb	r0, [r1, #9]
   21988:	orr	r7, r5, r0, lsl #16
   2198c:	cmp	r9, #5
   21990:	blt	219d8 <main@@Base+0xb948>
   21994:	ldrb	r0, [lr]
   21998:	orr	r0, r7, r0, lsl #24
   2199c:	eor	r0, r0, r4
   219a0:	orrs	r0, ip, r0
   219a4:	bne	219d8 <main@@Base+0xb948>
   219a8:	ldrb	r0, [r1, #12]
   219ac:	mov	ip, lr
   219b0:	cmp	r0, #46	; 0x2e
   219b4:	addeq	ip, r1, #13
   219b8:	cmp	ip, lr
   219bc:	beq	219d8 <main@@Base+0xb948>
   219c0:	ldr	r0, [sp]
   219c4:	ldr	r3, [sp, #4]
   219c8:	mov	r1, ip
   219cc:	sub	sp, fp, #28
   219d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   219d4:	b	25db4 <main@@Base+0xfd24>
   219d8:	mov	r0, r1
   219dc:	sub	sp, fp, #28
   219e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   219e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   219e8:	add	fp, sp, #28
   219ec:	sub	sp, sp, #20
   219f0:	mov	r8, r2
   219f4:	sub	r2, r2, r1
   219f8:	cmp	r2, #8
   219fc:	movcs	r2, #8
   21a00:	and	r2, r2, #15
   21a04:	sub	r2, r2, #1
   21a08:	cmp	r2, #7
   21a0c:	bhi	22860 <main@@Base+0xc7d0>
   21a10:	str	r0, [sp, #16]
   21a14:	mov	sl, #0
   21a18:	mov	ip, #0
   21a1c:	mov	lr, #0
   21a20:	mov	r9, #0
   21a24:	mov	r6, #0
   21a28:	mov	r4, #0
   21a2c:	mov	r5, #0
   21a30:	ldr	r0, [fp, #12]
   21a34:	str	r0, [sp, #12]
   21a38:	ldr	r0, [fp, #8]
   21a3c:	str	r0, [sp, #8]
   21a40:	add	r7, pc, #4
   21a44:	mov	r0, #0
   21a48:	ldr	pc, [r7, r2, lsl #2]
   21a4c:			; <UNDEFINED> instruction: 0x00021ab0
   21a50:	andeq	r1, r2, r8, lsr #21
   21a54:	andeq	r1, r2, r0, lsr #21
   21a58:	muleq	r2, r8, sl
   21a5c:	andeq	r1, r2, ip, lsl #21
   21a60:	andeq	r1, r2, r0, lsl #21
   21a64:	andeq	r1, r2, r0, ror sl
   21a68:	andeq	r1, r2, ip, ror #20
   21a6c:	ldrb	ip, [r1, #7]
   21a70:	ldrb	r2, [r1, #6]
   21a74:	mov	lr, sl
   21a78:	orr	r2, ip, r2, lsl #8
   21a7c:	mov	sl, r2
   21a80:	ldrb	r2, [r1, #5]
   21a84:	mov	r9, lr
   21a88:	orr	sl, sl, r2, lsl #16
   21a8c:	ldrb	r2, [r1, #4]
   21a90:	mov	r6, r9
   21a94:	orr	sl, sl, r2, lsl #24
   21a98:	ldrb	r2, [r1, #3]
   21a9c:	orr	r4, r2, r6
   21aa0:	ldrb	r2, [r1, #2]
   21aa4:	orr	r0, r4, r2, lsl #8
   21aa8:	ldrb	r2, [r1, #1]
   21aac:	orr	r5, r0, r2, lsl #16
   21ab0:	ldrb	r2, [r1]
   21ab4:	movw	r7, #11844	; 0x2e44
   21ab8:	movw	r0, #18273	; 0x4761
   21abc:	movt	r7, #28005	; 0x6d65
   21ac0:	movt	r0, #19833	; 0x4d79
   21ac4:	subs	r7, r7, sl
   21ac8:	orr	r2, r5, r2, lsl #24
   21acc:	sbcs	r7, r0, r2
   21ad0:	bcc	21c38 <main@@Base+0xbba8>
   21ad4:	movw	r0, #31022	; 0x792e
   21ad8:	movw	r7, #28276	; 0x6e74
   21adc:	movt	r0, #24947	; 0x6173
   21ae0:	movt	r7, #18017	; 0x4661
   21ae4:	eor	r0, sl, r0
   21ae8:	eor	r2, r2, r7
   21aec:	orrs	r0, r0, r2
   21af0:	bne	22860 <main@@Base+0xc7d0>
   21af4:	add	lr, r1, #8
   21af8:	sub	r0, r8, lr
   21afc:	cmp	r0, #8
   21b00:	movcs	r0, #8
   21b04:	and	r0, r0, #15
   21b08:	sub	r6, r0, #1
   21b0c:	cmp	r6, #7
   21b10:	bhi	22860 <main@@Base+0xc7d0>
   21b14:	str	r3, [sp, #4]
   21b18:	add	r2, pc, #32
   21b1c:	mov	sl, #0
   21b20:	mov	ip, #0
   21b24:	mov	r9, #0
   21b28:	mov	r4, #0
   21b2c:	mov	r7, #0
   21b30:	mov	r5, #0
   21b34:	mov	r0, #0
   21b38:	mov	r3, #0
   21b3c:	ldr	pc, [r2, r6, lsl #2]
   21b40:	andeq	r1, r2, r4, lsr #23
   21b44:	muleq	r2, ip, fp
   21b48:	muleq	r2, r4, fp
   21b4c:	andeq	r1, r2, ip, lsl #23
   21b50:	andeq	r1, r2, r0, lsl #23
   21b54:	andeq	r1, r2, r4, ror fp
   21b58:	andeq	r1, r2, r4, ror #22
   21b5c:	andeq	r1, r2, r0, ror #22
   21b60:	ldrb	ip, [r1, #15]
   21b64:	ldrb	r0, [r1, #14]
   21b68:	mov	r9, sl
   21b6c:	orr	r0, ip, r0, lsl #8
   21b70:	mov	sl, r0
   21b74:	ldrb	r0, [r1, #13]
   21b78:	mov	r4, r9
   21b7c:	orr	sl, sl, r0, lsl #16
   21b80:	ldrb	r0, [r1, #12]
   21b84:	mov	r7, r4
   21b88:	orr	sl, sl, r0, lsl #24
   21b8c:	ldrb	r0, [r1, #11]
   21b90:	orr	r5, r0, r7
   21b94:	ldrb	r0, [r1, #10]
   21b98:	orr	r0, r5, r0, lsl #8
   21b9c:	ldrb	r2, [r1, #9]
   21ba0:	orr	r3, r0, r2, lsl #16
   21ba4:	ldrb	r2, [lr]
   21ba8:	movw	r0, #29797	; 0x7465
   21bac:	movt	r0, #24931	; 0x6163
   21bb0:	eor	r0, sl, r0
   21bb4:	orr	r2, r3, r2, lsl #24
   21bb8:	movw	r3, #24946	; 0x6172
   21bbc:	movt	r3, #17256	; 0x4368
   21bc0:	eor	r2, r2, r3
   21bc4:	orrs	r0, r0, r2
   21bc8:	bne	22860 <main@@Base+0xc7d0>
   21bcc:	add	r0, r1, #16
   21bd0:	mov	r7, #-268435456	; 0xf0000000
   21bd4:	sub	r2, r8, r0
   21bd8:	cmp	r2, #8
   21bdc:	mov	r3, r2
   21be0:	movcs	r3, #8
   21be4:	add	r3, r7, r3, lsl #28
   21be8:	asr	r3, r3, #28
   21bec:	cmp	r3, #0
   21bf0:	cmpge	r2, #2
   21bf4:	blt	22860 <main@@Base+0xc7d0>
   21bf8:	ldrb	r2, [r0]
   21bfc:	cmp	r2, #114	; 0x72
   21c00:	bne	22860 <main@@Base+0xc7d0>
   21c04:	ldrb	r2, [r1, #17]
   21c08:	ldr	r3, [sp, #4]
   21c0c:	cmp	r2, #46	; 0x2e
   21c10:	mov	r2, r0
   21c14:	addeq	r2, r1, #18
   21c18:	cmp	r2, r0
   21c1c:	beq	22860 <main@@Base+0xc7d0>
   21c20:	ldr	r0, [sp, #16]
   21c24:	mov	r1, r2
   21c28:	mov	r2, r8
   21c2c:	sub	sp, fp, #28
   21c30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21c34:	b	25e34 <main@@Base+0xfda4>
   21c38:	movw	r7, #11855	; 0x2e4f
   21c3c:	eor	r2, r2, r0
   21c40:	movt	r7, #28005	; 0x6d65
   21c44:	eor	r7, sl, r7
   21c48:	orrs	r0, r7, r2
   21c4c:	beq	21de4 <main@@Base+0xbd54>
   21c50:	movw	r0, #11845	; 0x2e45
   21c54:	movt	r0, #28005	; 0x6d65
   21c58:	eor	r0, sl, r0
   21c5c:	orrs	r0, r0, r2
   21c60:	bne	22860 <main@@Base+0xc7d0>
   21c64:	add	lr, r1, #8
   21c68:	sub	r0, r8, lr
   21c6c:	cmp	r0, #8
   21c70:	movcs	r0, #8
   21c74:	and	r0, r0, #15
   21c78:	sub	r6, r0, #1
   21c7c:	cmp	r6, #7
   21c80:	bhi	22860 <main@@Base+0xc7d0>
   21c84:	str	r3, [sp, #4]
   21c88:	add	r4, pc, #32
   21c8c:	mov	r0, #0
   21c90:	mov	ip, #0
   21c94:	mov	r9, #0
   21c98:	mov	sl, #0
   21c9c:	mov	r7, #0
   21ca0:	mov	r5, #0
   21ca4:	mov	r2, #0
   21ca8:	mov	r3, #0
   21cac:	ldr	pc, [r4, r6, lsl #2]
   21cb0:	andeq	r1, r2, r4, lsl sp
   21cb4:	andeq	r1, r2, ip, lsl #26
   21cb8:	andeq	r1, r2, r4, lsl #26
   21cbc:	strdeq	r1, [r2], -ip
   21cc0:	strdeq	r1, [r2], -r0
   21cc4:	andeq	r1, r2, r4, ror #25
   21cc8:	ldrdeq	r1, [r2], -r4
   21ccc:	ldrdeq	r1, [r2], -r0
   21cd0:	ldrb	ip, [r1, #15]
   21cd4:	ldrb	r2, [r1, #14]
   21cd8:	mov	r9, r0
   21cdc:	orr	r2, ip, r2, lsl #8
   21ce0:	mov	r0, r2
   21ce4:	ldrb	r2, [r1, #13]
   21ce8:	mov	sl, r9
   21cec:	orr	r0, r0, r2, lsl #16
   21cf0:	ldrb	r2, [r1, #12]
   21cf4:	mov	r7, sl
   21cf8:	orr	r0, r0, r2, lsl #24
   21cfc:	ldrb	r2, [r1, #11]
   21d00:	orr	r5, r2, r7
   21d04:	ldrb	r2, [r1, #10]
   21d08:	orr	r2, r5, r2, lsl #8
   21d0c:	ldrb	r3, [r1, #9]
   21d10:	orr	r3, r2, r3, lsl #16
   21d14:	ldrb	r2, [lr]
   21d18:	movw	r7, #28016	; 0x6d70
   21d1c:	movt	r7, #30817	; 0x7861
   21d20:	orr	r2, r3, r2, lsl #24
   21d24:	movw	r3, #11841	; 0x2e41
   21d28:	movt	r3, #27749	; 0x6c65
   21d2c:	add	r5, r3, #39	; 0x27
   21d30:	subs	r6, r0, r5
   21d34:	sbcs	r6, r2, r7
   21d38:	bcs	221b0 <main@@Base+0xc120>
   21d3c:	ldr	lr, [sp, #4]
   21d40:	add	r6, r3, #2
   21d44:	subs	r6, r0, r6
   21d48:	sbcs	r6, r2, r7
   21d4c:	bcs	222cc <main@@Base+0xc23c>
   21d50:	eor	r0, r0, r3
   21d54:	eor	r2, r2, r7
   21d58:	orrs	r0, r0, r2
   21d5c:	bne	22860 <main@@Base+0xc7d0>
   21d60:	add	r0, r1, #16
   21d64:	sub	r2, r8, r0
   21d68:	cmp	r2, #8
   21d6c:	mov	r3, r2
   21d70:	movcs	r3, #8
   21d74:	and	r7, r3, #15
   21d78:	sub	r3, r7, #2
   21d7c:	cmp	r3, #7
   21d80:	bcs	22750 <main@@Base+0xc6c0>
   21d84:	ldrb	r3, [r1, #17]
   21d88:	lsl	r7, r3, #16
   21d8c:	mov	r3, #0
   21d90:	cmp	r2, #3
   21d94:	blt	22860 <main@@Base+0xc7d0>
   21d98:	ldrb	r2, [r0]
   21d9c:	orr	r2, r7, r2, lsl #24
   21da0:	eor	r2, r2, #7929856	; 0x790000
   21da4:	eor	r2, r2, #1845493760	; 0x6e000000
   21da8:	orrs	r2, r3, r2
   21dac:	bne	22860 <main@@Base+0xc7d0>
   21db0:	ldrb	r2, [r1, #18]
   21db4:	cmp	r2, #46	; 0x2e
   21db8:	mov	r2, r0
   21dbc:	addeq	r2, r1, #19
   21dc0:	cmp	r2, r0
   21dc4:	beq	22860 <main@@Base+0xc7d0>
   21dc8:	ldr	r0, [sp, #16]
   21dcc:	mov	r1, r2
   21dd0:	mov	r2, r8
   21dd4:	mov	r3, lr
   21dd8:	sub	sp, fp, #28
   21ddc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21de0:	b	2452c <main@@Base+0xe49c>
   21de4:	add	lr, r1, #8
   21de8:	sub	r0, r8, lr
   21dec:	cmp	r0, #8
   21df0:	movcs	r0, #8
   21df4:	and	r0, r0, #15
   21df8:	sub	r7, r0, #1
   21dfc:	cmp	r7, #7
   21e00:	bhi	22860 <main@@Base+0xc7d0>
   21e04:	str	r3, [sp, #4]
   21e08:	add	sl, pc, #32
   21e0c:	mov	r2, #0
   21e10:	mov	ip, #0
   21e14:	mov	r3, #0
   21e18:	mov	r4, #0
   21e1c:	mov	r6, #0
   21e20:	mov	r5, #0
   21e24:	mov	r0, #0
   21e28:	mov	r9, #0
   21e2c:	ldr	pc, [sl, r7, lsl #2]
   21e30:	muleq	r2, r4, lr
   21e34:	andeq	r1, r2, ip, lsl #29
   21e38:	andeq	r1, r2, r4, lsl #29
   21e3c:	andeq	r1, r2, ip, ror lr
   21e40:	andeq	r1, r2, r0, ror lr
   21e44:	andeq	r1, r2, r4, ror #28
   21e48:	andeq	r1, r2, r4, asr lr
   21e4c:	andeq	r1, r2, r0, asr lr
   21e50:	ldrb	ip, [r1, #15]
   21e54:	ldrb	r0, [r1, #14]
   21e58:	mov	r3, r2
   21e5c:	orr	r0, ip, r0, lsl #8
   21e60:	mov	r2, r0
   21e64:	ldrb	r0, [r1, #13]
   21e68:	mov	r4, r3
   21e6c:	orr	r2, r2, r0, lsl #16
   21e70:	ldrb	r0, [r1, #12]
   21e74:	mov	r6, r4
   21e78:	orr	r2, r2, r0, lsl #24
   21e7c:	ldrb	r0, [r1, #11]
   21e80:	orr	r5, r0, r6
   21e84:	ldrb	r0, [r1, #10]
   21e88:	orr	r0, r5, r0, lsl #8
   21e8c:	ldrb	r3, [r1, #9]
   21e90:	orr	r9, r0, r3, lsl #16
   21e94:	movw	r0, #28005	; 0x6d65
   21e98:	movw	r3, #25970	; 0x6572
   21e9c:	movt	r0, #20065	; 0x4e61
   21ea0:	movt	r3, #29800	; 0x7468
   21ea4:	eor	r0, r2, r0
   21ea8:	ldrb	r2, [lr]
   21eac:	orr	r2, r9, r2, lsl #24
   21eb0:	eor	r2, r2, r3
   21eb4:	orrs	r0, r0, r2
   21eb8:	bne	22860 <main@@Base+0xc7d0>
   21ebc:	add	lr, r1, #16
   21ec0:	sub	r0, r8, lr
   21ec4:	cmp	r0, #8
   21ec8:	movcs	r0, #8
   21ecc:	and	r0, r0, #15
   21ed0:	sub	r7, r0, #1
   21ed4:	cmp	r7, #7
   21ed8:	bhi	22860 <main@@Base+0xc7d0>
   21edc:	add	r2, pc, #32
   21ee0:	mov	sl, #0
   21ee4:	mov	ip, #0
   21ee8:	mov	r9, #0
   21eec:	mov	r4, #0
   21ef0:	mov	r6, #0
   21ef4:	mov	r5, #0
   21ef8:	mov	r0, #0
   21efc:	mov	r3, #0
   21f00:	ldr	pc, [r2, r7, lsl #2]
   21f04:	andeq	r1, r2, r8, ror #30
   21f08:	andeq	r1, r2, r0, ror #30
   21f0c:	andeq	r1, r2, r8, asr pc
   21f10:	andeq	r1, r2, r0, asr pc
   21f14:	andeq	r1, r2, r4, asr #30
   21f18:	andeq	r1, r2, r8, lsr pc
   21f1c:	andeq	r1, r2, r8, lsr #30
   21f20:	andeq	r1, r2, r4, lsr #30
   21f24:	ldrb	ip, [r1, #23]
   21f28:	ldrb	r0, [r1, #22]
   21f2c:	mov	r9, sl
   21f30:	orr	r0, ip, r0, lsl #8
   21f34:	mov	sl, r0
   21f38:	ldrb	r0, [r1, #21]
   21f3c:	mov	r4, r9
   21f40:	orr	sl, sl, r0, lsl #16
   21f44:	ldrb	r0, [r1, #20]
   21f48:	mov	r6, r4
   21f4c:	orr	sl, sl, r0, lsl #24
   21f50:	ldrb	r0, [r1, #19]
   21f54:	orr	r5, r0, r6
   21f58:	ldrb	r0, [r1, #18]
   21f5c:	orr	r0, r5, r0, lsl #8
   21f60:	ldrb	r2, [r1, #17]
   21f64:	orr	r3, r0, r2, lsl #16
   21f68:	ldrb	r2, [lr]
   21f6c:	movw	r0, #18034	; 0x4672
   21f70:	movt	r0, #25902	; 0x652e
   21f74:	eor	r0, sl, r0
   21f78:	orr	r2, r3, r2, lsl #24
   21f7c:	movw	r3, #24931	; 0x6163
   21f80:	movt	r3, #21360	; 0x5370
   21f84:	eor	r2, r2, r3
   21f88:	orrs	r0, r0, r2
   21f8c:	bne	22860 <main@@Base+0xc7d0>
   21f90:	add	lr, r1, #24
   21f94:	sub	r0, r8, lr
   21f98:	cmp	r0, #8
   21f9c:	movcs	r0, #8
   21fa0:	and	r0, r0, #15
   21fa4:	sub	r7, r0, #1
   21fa8:	cmp	r7, #7
   21fac:	bhi	22860 <main@@Base+0xc7d0>
   21fb0:	add	r2, pc, #32
   21fb4:	mov	sl, #0
   21fb8:	mov	ip, #0
   21fbc:	mov	r9, #0
   21fc0:	mov	r4, #0
   21fc4:	mov	r6, #0
   21fc8:	mov	r5, #0
   21fcc:	mov	r0, #0
   21fd0:	mov	r3, #0
   21fd4:	ldr	pc, [r2, r7, lsl #2]
   21fd8:	andeq	r2, r2, ip, lsr r0
   21fdc:	andeq	r2, r2, r4, lsr r0
   21fe0:	andeq	r2, r2, ip, lsr #32
   21fe4:	andeq	r2, r2, r4, lsr #32
   21fe8:	andeq	r2, r2, r8, lsl r0
   21fec:	andeq	r2, r2, ip
   21ff0:	strdeq	r1, [r2], -ip
   21ff4:	strdeq	r1, [r2], -r8
   21ff8:	ldrb	ip, [r1, #31]
   21ffc:	ldrb	r0, [r1, #30]
   22000:	mov	r9, sl
   22004:	orr	r0, ip, r0, lsl #8
   22008:	mov	sl, r0
   2200c:	ldrb	r0, [r1, #29]
   22010:	mov	r4, r9
   22014:	orr	sl, sl, r0, lsl #16
   22018:	ldrb	r0, [r1, #28]
   2201c:	mov	r6, r4
   22020:	orr	sl, sl, r0, lsl #24
   22024:	ldrb	r0, [r1, #27]
   22028:	orr	r5, r0, r6
   2202c:	ldrb	r0, [r1, #26]
   22030:	orr	r0, r5, r0, lsl #8
   22034:	ldrb	r2, [r1, #25]
   22038:	orr	r3, r0, r2, lsl #16
   2203c:	ldrb	r2, [lr]
   22040:	movw	r0, #30052	; 0x7564
   22044:	movt	r0, #25452	; 0x636c
   22048:	eor	r0, sl, r0
   2204c:	orr	r2, r3, r2, lsl #24
   22050:	movw	r3, #18798	; 0x496e
   22054:	movt	r3, #28525	; 0x6f6d
   22058:	eor	r2, r2, r3
   2205c:	orrs	r0, r0, r2
   22060:	bne	22860 <main@@Base+0xc7d0>
   22064:	add	r0, r1, #32
   22068:	mov	r7, #-268435456	; 0xf0000000
   2206c:	sub	r2, r8, r0
   22070:	cmp	r2, #8
   22074:	mov	r3, r2
   22078:	movcs	r3, #8
   2207c:	add	r3, r7, r3, lsl #28
   22080:	asr	r3, r3, #28
   22084:	cmp	r3, #0
   22088:	cmpge	r2, #2
   2208c:	blt	22860 <main@@Base+0xc7d0>
   22090:	ldrb	r2, [r0]
   22094:	cmp	r2, #101	; 0x65
   22098:	bne	22860 <main@@Base+0xc7d0>
   2209c:	ldrb	r2, [r1, #33]	; 0x21
   220a0:	ldr	r9, [sp, #4]
   220a4:	mov	r7, r0
   220a8:	cmp	r2, #46	; 0x2e
   220ac:	addeq	r7, r1, #34	; 0x22
   220b0:	cmp	r7, r0
   220b4:	beq	22860 <main@@Base+0xc7d0>
   220b8:	sub	r0, r8, r7
   220bc:	cmp	r0, #8
   220c0:	movcs	r0, #8
   220c4:	and	r0, r0, #15
   220c8:	sub	r2, r0, #1
   220cc:	cmp	r2, #7
   220d0:	bhi	2285c <main@@Base+0xc7cc>
   220d4:	add	r5, pc, #32
   220d8:	mov	sl, #0
   220dc:	mov	ip, #0
   220e0:	mov	lr, #0
   220e4:	mov	r1, #0
   220e8:	mov	r3, #0
   220ec:	mov	r6, #0
   220f0:	mov	r4, #0
   220f4:	mov	r0, #0
   220f8:	ldr	pc, [r5, r2, lsl #2]
   220fc:	andeq	r2, r2, r0, ror #2
   22100:	andeq	r2, r2, r8, asr r1
   22104:	andeq	r2, r2, r0, asr r1
   22108:	andeq	r2, r2, r8, asr #2
   2210c:	andeq	r2, r2, ip, lsr r1
   22110:	andeq	r2, r2, r0, lsr r1
   22114:	andeq	r2, r2, r0, lsr #2
   22118:	andeq	r2, r2, ip, lsl r1
   2211c:	ldrb	ip, [r7, #7]
   22120:	ldrb	r0, [r7, #6]
   22124:	mov	lr, sl
   22128:	orr	r0, ip, r0, lsl #8
   2212c:	mov	sl, r0
   22130:	ldrb	r0, [r7, #5]
   22134:	mov	r1, lr
   22138:	orr	sl, sl, r0, lsl #16
   2213c:	ldrb	r0, [r7, #4]
   22140:	mov	r3, r1
   22144:	orr	sl, sl, r0, lsl #24
   22148:	ldrb	r0, [r7, #3]
   2214c:	orr	r6, r0, r3
   22150:	ldrb	r0, [r7, #2]
   22154:	orr	r4, r6, r0, lsl #8
   22158:	ldrb	r0, [r7, #1]
   2215c:	orr	r0, r4, r0, lsl #16
   22160:	ldrb	r1, [r7]
   22164:	orr	r6, r0, r1, lsl #24
   22168:	movw	r1, #28416	; 0x6f00
   2216c:	bic	r0, r6, #255	; 0xff
   22170:	movt	r1, #18031	; 0x466f
   22174:	teq	r0, r1
   22178:	bne	22778 <main@@Base+0xc6e8>
   2217c:	ldr	r0, [sp, #12]
   22180:	mov	r1, r7
   22184:	mov	r2, r8
   22188:	mov	r3, #3
   2218c:	str	r0, [sp]
   22190:	ldr	r0, [sp, #16]
   22194:	bl	33d04 <flatcc_json_parser_match_constant@@Base>
   22198:	cmp	r0, r7
   2219c:	beq	22778 <main@@Base+0xc6e8>
   221a0:	mov	r1, r0
   221a4:	mov	r3, #0
   221a8:	mov	r2, #17
   221ac:	b	22810 <main@@Base+0xc780>
   221b0:	eor	r6, r2, r7
   221b4:	eor	r5, r0, r5
   221b8:	orrs	r5, r5, r6
   221bc:	bne	223c4 <main@@Base+0xc334>
   221c0:	add	ip, r1, #16
   221c4:	sub	r2, r8, ip
   221c8:	cmp	r2, #8
   221cc:	mov	r0, r2
   221d0:	movcs	r0, #8
   221d4:	and	r0, r0, #15
   221d8:	sub	r4, r0, #1
   221dc:	cmp	r4, #7
   221e0:	bhi	22860 <main@@Base+0xc7d0>
   221e4:	add	r6, pc, #28
   221e8:	mov	r9, #0
   221ec:	mov	lr, #0
   221f0:	mov	sl, #0
   221f4:	mov	r3, #0
   221f8:	mov	r5, #0
   221fc:	mov	r0, #0
   22200:	mov	r7, #0
   22204:	ldr	pc, [r6, r4, lsl #2]
   22208:	andeq	r2, r2, r4, ror #4
   2220c:	andeq	r2, r2, ip, asr r2
   22210:	andeq	r2, r2, r4, asr r2
   22214:	andeq	r2, r2, ip, asr #4
   22218:	andeq	r2, r2, r0, asr #4
   2221c:	andeq	r2, r2, r0, lsr r2
   22220:	andeq	r2, r2, r8, lsr #4
   22224:	andeq	r2, r2, r8, lsr #4
   22228:	ldrb	r0, [r1, #22]
   2222c:	lsl	lr, r0, #8
   22230:	ldrb	r0, [r1, #21]
   22234:	mov	sl, r9
   22238:	orr	r0, lr, r0, lsl #16
   2223c:	mov	r9, r0
   22240:	ldrb	r0, [r1, #20]
   22244:	mov	r3, sl
   22248:	orr	r9, r9, r0, lsl #24
   2224c:	ldrb	r0, [r1, #19]
   22250:	orr	r5, r0, r3
   22254:	ldrb	r0, [r1, #18]
   22258:	orr	r0, r5, r0, lsl #8
   2225c:	ldrb	r3, [r1, #17]
   22260:	orr	r7, r0, r3, lsl #16
   22264:	cmp	r2, #8
   22268:	blt	22860 <main@@Base+0xc7d0>
   2226c:	ldrb	r0, [ip]
   22270:	movw	r2, #24421	; 0x5f65
   22274:	movw	r3, #27904	; 0x6d00
   22278:	movt	r2, #25959	; 0x6567
   2227c:	movt	r3, #28277	; 0x6e75
   22280:	add	r2, r2, #1114112	; 0x110000
   22284:	eor	r3, r9, r3
   22288:	orr	r0, r7, r0, lsl #24
   2228c:	eor	r0, r0, r2
   22290:	orrs	r0, r3, r0
   22294:	bne	22860 <main@@Base+0xc7d0>
   22298:	ldrb	r0, [r1, #23]
   2229c:	ldr	r3, [sp, #4]
   222a0:	mov	r2, ip
   222a4:	cmp	r0, #46	; 0x2e
   222a8:	addeq	r2, r1, #24
   222ac:	cmp	r2, ip
   222b0:	beq	22860 <main@@Base+0xc7d0>
   222b4:	ldr	r0, [sp, #16]
   222b8:	mov	r1, r2
   222bc:	mov	r2, r8
   222c0:	sub	sp, fp, #28
   222c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   222c8:	b	258c4 <main@@Base+0xf834>
   222cc:	movw	r3, #11846	; 0x2e46
   222d0:	eor	r2, r2, r7
   222d4:	movt	r3, #27749	; 0x6c65
   222d8:	eor	r3, r0, r3
   222dc:	orrs	r3, r3, r2
   222e0:	beq	22624 <main@@Base+0xc594>
   222e4:	movw	r3, #11843	; 0x2e43
   222e8:	movt	r3, #27749	; 0x6c65
   222ec:	eor	r0, r0, r3
   222f0:	orrs	r0, r0, r2
   222f4:	bne	22860 <main@@Base+0xc7d0>
   222f8:	add	r0, r1, #16
   222fc:	sub	r2, r8, r0
   22300:	cmp	r2, #8
   22304:	mov	r3, r2
   22308:	movcs	r3, #8
   2230c:	and	r3, r3, #15
   22310:	sub	r6, r3, #1
   22314:	cmp	r6, #7
   22318:	bhi	22860 <main@@Base+0xc7d0>
   2231c:	add	r3, pc, #16
   22320:	mov	ip, #0
   22324:	mov	r7, #0
   22328:	mov	r4, #0
   2232c:	mov	r5, #0
   22330:	ldr	pc, [r3, r6, lsl #2]
   22334:	andeq	r2, r2, ip, ror #6
   22338:	andeq	r2, r2, r4, ror #6
   2233c:	andeq	r2, r2, ip, asr r3
   22340:	andeq	r2, r2, r4, asr r3
   22344:	andeq	r2, r2, r4, asr r3
   22348:	andeq	r2, r2, r4, asr r3
   2234c:	andeq	r2, r2, r4, asr r3
   22350:	andeq	r2, r2, r4, asr r3
   22354:	ldrb	r7, [r1, #19]
   22358:	mov	ip, #0
   2235c:	ldrb	r3, [r1, #18]
   22360:	orr	r4, r7, r3, lsl #8
   22364:	ldrb	r3, [r1, #17]
   22368:	orr	r5, r4, r3, lsl #16
   2236c:	cmp	r2, #5
   22370:	blt	22860 <main@@Base+0xc7d0>
   22374:	ldrb	r2, [r0]
   22378:	movw	r3, #28530	; 0x6f72
   2237c:	movt	r3, #28524	; 0x6f6c
   22380:	orr	r2, r5, r2, lsl #24
   22384:	eor	r2, r2, r3
   22388:	orrs	r2, ip, r2
   2238c:	bne	22860 <main@@Base+0xc7d0>
   22390:	ldrb	r2, [r1, #20]
   22394:	cmp	r2, #46	; 0x2e
   22398:	mov	r2, r0
   2239c:	addeq	r2, r1, #21
   223a0:	cmp	r2, r0
   223a4:	beq	22860 <main@@Base+0xc7d0>
   223a8:	ldr	r0, [sp, #16]
   223ac:	mov	r1, r2
   223b0:	mov	r2, r8
   223b4:	mov	r3, lr
   223b8:	sub	sp, fp, #28
   223bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   223c0:	b	21478 <main@@Base+0xb3e8>
   223c4:	add	r5, r3, #45	; 0x2d
   223c8:	subs	r4, r0, r5
   223cc:	sbcs	r2, r2, r7
   223d0:	bcs	224f4 <main@@Base+0xc464>
   223d4:	add	r2, r3, #40	; 0x28
   223d8:	eor	r0, r0, r2
   223dc:	orrs	r0, r0, r6
   223e0:	bne	22860 <main@@Base+0xc7d0>
   223e4:	add	ip, r1, #16
   223e8:	sub	r2, r8, ip
   223ec:	cmp	r2, #8
   223f0:	mov	r0, r2
   223f4:	movcs	r0, #8
   223f8:	and	r0, r0, #15
   223fc:	sub	r4, r0, #1
   22400:	cmp	r4, #7
   22404:	bhi	22860 <main@@Base+0xc7d0>
   22408:	add	r6, pc, #28
   2240c:	mov	r9, #0
   22410:	mov	lr, #0
   22414:	mov	sl, #0
   22418:	mov	r3, #0
   2241c:	mov	r5, #0
   22420:	mov	r7, #0
   22424:	mov	r0, #0
   22428:	ldr	pc, [r6, r4, lsl #2]
   2242c:	andeq	r2, r2, r8, lsl #9
   22430:	andeq	r2, r2, r0, lsl #9
   22434:	andeq	r2, r2, r8, ror r4
   22438:	andeq	r2, r2, r0, ror r4
   2243c:	andeq	r2, r2, r4, ror #8
   22440:	andeq	r2, r2, r4, asr r4
   22444:	andeq	r2, r2, ip, asr #8
   22448:	andeq	r2, r2, ip, asr #8
   2244c:	ldrb	r0, [r1, #22]
   22450:	lsl	lr, r0, #8
   22454:	ldrb	r0, [r1, #21]
   22458:	mov	sl, r9
   2245c:	orr	r0, lr, r0, lsl #16
   22460:	mov	r9, r0
   22464:	ldrb	r0, [r1, #20]
   22468:	mov	r3, sl
   2246c:	orr	r9, r9, r0, lsl #24
   22470:	ldrb	r0, [r1, #19]
   22474:	orr	r5, r0, r3
   22478:	ldrb	r0, [r1, #18]
   2247c:	orr	r7, r5, r0, lsl #8
   22480:	ldrb	r0, [r1, #17]
   22484:	orr	r0, r7, r0, lsl #16
   22488:	cmp	r2, #8
   2248c:	blt	22860 <main@@Base+0xc7d0>
   22490:	ldrb	r3, [ip]
   22494:	movw	r2, #24421	; 0x5f65
   22498:	movt	r2, #25959	; 0x6567
   2249c:	add	r2, r2, #851968	; 0xd0000
   224a0:	add	r2, r2, #150994944	; 0x9000000
   224a4:	orr	r0, r0, r3, lsl #24
   224a8:	movw	r3, #27904	; 0x6d00
   224ac:	movt	r3, #28277	; 0x6e75
   224b0:	eor	r0, r0, r2
   224b4:	eor	r3, r9, r3
   224b8:	orrs	r0, r3, r0
   224bc:	bne	22860 <main@@Base+0xc7d0>
   224c0:	ldrb	r0, [r1, #23]
   224c4:	ldr	r3, [sp, #4]
   224c8:	mov	r2, ip
   224cc:	cmp	r0, #46	; 0x2e
   224d0:	addeq	r2, r1, #24
   224d4:	cmp	r2, ip
   224d8:	beq	22860 <main@@Base+0xc7d0>
   224dc:	ldr	r0, [sp, #16]
   224e0:	mov	r1, r2
   224e4:	mov	r2, r8
   224e8:	sub	sp, fp, #28
   224ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   224f0:	b	25a74 <main@@Base+0xf9e4>
   224f4:	eor	r0, r0, r5
   224f8:	orrs	r0, r0, r6
   224fc:	bne	22860 <main@@Base+0xc7d0>
   22500:	add	lr, r1, #16
   22504:	sub	r2, r8, lr
   22508:	cmp	r2, #8
   2250c:	mov	r0, r2
   22510:	movcs	r0, #8
   22514:	and	r0, r0, #15
   22518:	sub	r4, r0, #1
   2251c:	cmp	r4, #7
   22520:	bhi	22860 <main@@Base+0xc7d0>
   22524:	add	ip, pc, #36	; 0x24
   22528:	mov	r0, #0
   2252c:	mov	sl, #0
   22530:	mov	r9, #0
   22534:	mov	r7, #0
   22538:	mov	r6, #0
   2253c:	mov	r5, #0
   22540:	mov	r3, #0
   22544:	str	r0, [sp, #12]
   22548:	mov	r0, #0
   2254c:	ldr	pc, [ip, r4, lsl #2]
   22550:			; <UNDEFINED> instruction: 0x000225bc
   22554:			; <UNDEFINED> instruction: 0x000225b4
   22558:	andeq	r2, r2, ip, lsr #11
   2255c:	andeq	r2, r2, r4, lsr #11
   22560:	muleq	r2, r8, r5
   22564:	andeq	r2, r2, ip, lsl #11
   22568:	andeq	r2, r2, r8, ror r5
   2256c:	andeq	r2, r2, r0, ror r5
   22570:	ldrb	r0, [r1, #23]
   22574:	str	r0, [sp, #12]
   22578:	ldrb	r0, [r1, #22]
   2257c:	ldr	r3, [sp, #12]
   22580:	mov	r9, sl
   22584:	orr	r0, r3, r0, lsl #8
   22588:	mov	sl, r0
   2258c:	ldrb	r0, [r1, #21]
   22590:	mov	r7, r9
   22594:	orr	sl, sl, r0, lsl #16
   22598:	ldrb	r0, [r1, #20]
   2259c:	mov	r6, r7
   225a0:	orr	sl, sl, r0, lsl #24
   225a4:	ldrb	r0, [r1, #19]
   225a8:	orr	r5, r0, r6
   225ac:	ldrb	r0, [r1, #18]
   225b0:	orr	r0, r5, r0, lsl #8
   225b4:	ldrb	r3, [r1, #17]
   225b8:	orr	r3, r0, r3, lsl #16
   225bc:	ldrb	r0, [lr]
   225c0:	movw	r7, #27904	; 0x6d00
   225c4:	cmp	r2, #8
   225c8:	movt	r7, #28277	; 0x6e75
   225cc:	orr	r4, r3, r0, lsl #24
   225d0:	blt	226a8 <main@@Base+0xc618>
   225d4:	movw	r2, #24421	; 0x5f65
   225d8:	bic	r0, sl, #255	; 0xff
   225dc:	movt	r2, #25959	; 0x6567
   225e0:	eor	r0, r0, r7
   225e4:	eor	r2, r4, r2
   225e8:	orrs	r0, r0, r2
   225ec:	bne	226a8 <main@@Base+0xc618>
   225f0:	ldrb	r0, [r1, #23]
   225f4:	mov	r2, lr
   225f8:	cmp	r0, #46	; 0x2e
   225fc:	addeq	r2, r1, #24
   22600:	cmp	r2, lr
   22604:	beq	226a8 <main@@Base+0xc618>
   22608:	ldr	r0, [sp, #16]
   2260c:	ldr	r3, [sp, #4]
   22610:	mov	r1, r2
   22614:	mov	r2, r8
   22618:	sub	sp, fp, #28
   2261c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22620:	b	25c68 <main@@Base+0xfbd8>
   22624:	add	r0, r1, #16
   22628:	sub	r2, r8, r0
   2262c:	cmp	r2, #8
   22630:	mov	r3, r2
   22634:	movcs	r3, #8
   22638:	and	r7, r3, #15
   2263c:	sub	r3, r7, #2
   22640:	cmp	r3, #7
   22644:	bcs	22764 <main@@Base+0xc6d4>
   22648:	ldrb	r3, [r1, #17]
   2264c:	lsl	r7, r3, #16
   22650:	mov	r3, #0
   22654:	cmp	r2, #3
   22658:	blt	22860 <main@@Base+0xc7d0>
   2265c:	ldrb	r2, [r0]
   22660:	orr	r2, r7, r2, lsl #24
   22664:	eor	r2, r2, #7274496	; 0x6f0000
   22668:	eor	r2, r2, #1862270976	; 0x6f000000
   2266c:	orrs	r2, r3, r2
   22670:	bne	22860 <main@@Base+0xc7d0>
   22674:	ldrb	r2, [r1, #18]
   22678:	cmp	r2, #46	; 0x2e
   2267c:	mov	r2, r0
   22680:	addeq	r2, r1, #19
   22684:	cmp	r2, r0
   22688:	beq	22860 <main@@Base+0xc7d0>
   2268c:	ldr	r0, [sp, #16]
   22690:	mov	r1, r2
   22694:	mov	r2, r8
   22698:	mov	r3, lr
   2269c:	sub	sp, fp, #28
   226a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   226a4:	b	25654 <main@@Base+0xf5c4>
   226a8:	movw	r0, #31077	; 0x7965
   226ac:	movw	r2, #25965	; 0x656d
   226b0:	movt	r0, #28788	; 0x7074
   226b4:	movt	r2, #28532	; 0x6f74
   226b8:	eor	r0, sl, r0
   226bc:	eor	r2, r4, r2
   226c0:	orrs	r0, r0, r2
   226c4:	bne	22860 <main@@Base+0xc7d0>
   226c8:	add	r0, r1, #24
   226cc:	sub	r2, r8, r0
   226d0:	cmp	r2, #8
   226d4:	mov	r3, r2
   226d8:	movcs	r3, #8
   226dc:	and	r6, r3, #15
   226e0:	sub	r3, r6, #3
   226e4:	cmp	r3, #6
   226e8:	bcs	22824 <main@@Base+0xc794>
   226ec:	ldrb	r3, [r1, #26]
   226f0:	mov	r4, #0
   226f4:	lsl	r6, r3, #8
   226f8:	ldr	r3, [sp, #4]
   226fc:	ldrb	r5, [r1, #25]
   22700:	orr	r6, r6, r5, lsl #16
   22704:	cmp	r2, #4
   22708:	blt	22860 <main@@Base+0xc7d0>
   2270c:	ldrb	r2, [r0]
   22710:	orr	r2, r6, r2, lsl #24
   22714:	eor	r2, r2, r7
   22718:	orrs	r2, r4, r2
   2271c:	bne	22860 <main@@Base+0xc7d0>
   22720:	ldrb	r2, [r1, #27]
   22724:	cmp	r2, #46	; 0x2e
   22728:	mov	r2, r0
   2272c:	addeq	r2, r1, #28
   22730:	cmp	r2, r0
   22734:	beq	22860 <main@@Base+0xc7d0>
   22738:	ldr	r0, [sp, #16]
   2273c:	mov	r1, r2
   22740:	mov	r2, r8
   22744:	sub	sp, fp, #28
   22748:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2274c:	b	25db4 <main@@Base+0xfd24>
   22750:	cmp	r7, #1
   22754:	mov	r3, #0
   22758:	mov	r7, #0
   2275c:	beq	21d90 <main@@Base+0xbd00>
   22760:	b	22860 <main@@Base+0xc7d0>
   22764:	cmp	r7, #1
   22768:	mov	r3, #0
   2276c:	mov	r7, #0
   22770:	beq	22654 <main@@Base+0xc5c4>
   22774:	b	22860 <main@@Base+0xc7d0>
   22778:	movw	r0, #25942	; 0x6556
   2277c:	movw	r1, #25452	; 0x636c
   22780:	movt	r0, #30052	; 0x7564
   22784:	movt	r1, #18798	; 0x496e
   22788:	eor	r0, sl, r0
   2278c:	eor	r1, r6, r1
   22790:	orrs	r0, r0, r1
   22794:	bne	2285c <main@@Base+0xc7cc>
   22798:	add	r6, r7, #8
   2279c:	sub	r0, r8, r6
   227a0:	cmp	r0, #8
   227a4:	movcs	r0, #8
   227a8:	and	r1, r0, #15
   227ac:	sub	r0, r1, #2
   227b0:	cmp	r0, #7
   227b4:	bcs	2284c <main@@Base+0xc7bc>
   227b8:	ldrb	r0, [r7, #9]
   227bc:	lsl	r1, r0, #16
   227c0:	mov	r0, #0
   227c4:	ldrb	r2, [r6]
   227c8:	orr	r1, r1, r2, lsl #24
   227cc:	eor	r1, r1, #23855104	; 0x16c0000
   227d0:	eor	r1, r1, #1610612736	; 0x60000000
   227d4:	orrs	r0, r0, r1
   227d8:	bne	2285c <main@@Base+0xc7cc>
   227dc:	ldr	r0, [sp, #12]
   227e0:	mov	r1, r6
   227e4:	mov	r2, r8
   227e8:	mov	r3, #2
   227ec:	str	r0, [sp]
   227f0:	ldr	r0, [sp, #16]
   227f4:	bl	33d04 <flatcc_json_parser_match_constant@@Base>
   227f8:	cmp	r0, r6
   227fc:	mov	r1, r7
   22800:	beq	22860 <main@@Base+0xc7d0>
   22804:	mov	r2, #0
   22808:	mov	r3, #0
   2280c:	mov	r1, r0
   22810:	ldr	r0, [sp, #8]
   22814:	strd	r2, [r0]
   22818:	mov	r0, #0
   2281c:	str	r0, [r9]
   22820:	b	22860 <main@@Base+0xc7d0>
   22824:	ldr	r3, [sp, #4]
   22828:	mov	r4, #0
   2282c:	cmp	r6, #1
   22830:	beq	22844 <main@@Base+0xc7b4>
   22834:	cmp	r6, #2
   22838:	mov	r6, #0
   2283c:	beq	226fc <main@@Base+0xc66c>
   22840:	b	22860 <main@@Base+0xc7d0>
   22844:	mov	r6, #0
   22848:	b	22704 <main@@Base+0xc674>
   2284c:	cmp	r1, #1
   22850:	mov	r0, #0
   22854:	mov	r1, #0
   22858:	beq	227c4 <main@@Base+0xc734>
   2285c:	mov	r1, r7
   22860:	mov	r0, r1
   22864:	sub	sp, fp, #28
   22868:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2286c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22870:	add	fp, sp, #28
   22874:	sub	sp, sp, #44	; 0x2c
   22878:	mov	r6, r2
   2287c:	ldr	r2, [fp, #8]
   22880:	mov	r5, r0
   22884:	mov	r0, #0
   22888:	mov	sl, r3
   2288c:	cmp	r1, r6
   22890:	strb	r0, [r2]
   22894:	beq	228d8 <main@@Base+0xc848>
   22898:	ldrb	r0, [r1]
   2289c:	cmp	r0, #46	; 0x2e
   228a0:	beq	228b8 <main@@Base+0xc828>
   228a4:	cmp	r0, #34	; 0x22
   228a8:	bne	228d0 <main@@Base+0xc840>
   228ac:	mov	r0, #0
   228b0:	add	r1, r1, #1
   228b4:	b	228d4 <main@@Base+0xc844>
   228b8:	mov	r0, r5
   228bc:	mov	r2, r6
   228c0:	mov	r3, #5
   228c4:	bl	337ac <flatcc_json_parser_set_error@@Base>
   228c8:	mov	r1, r0
   228cc:	b	228d8 <main@@Base+0xc848>
   228d0:	mov	r0, #1
   228d4:	str	r0, [r5, #12]
   228d8:	ldr	r0, [r5, #12]
   228dc:	cmp	r0, #0
   228e0:	beq	228ec <main@@Base+0xc85c>
   228e4:	mov	r7, r1
   228e8:	b	22928 <main@@Base+0xc898>
   228ec:	sub	r0, r6, r1
   228f0:	cmp	r0, #2
   228f4:	blt	22918 <main@@Base+0xc888>
   228f8:	ldrb	r0, [r1]
   228fc:	cmp	r0, #32
   22900:	bhi	228e4 <main@@Base+0xc854>
   22904:	bne	22918 <main@@Base+0xc888>
   22908:	mov	r7, r1
   2290c:	ldrb	r0, [r7, #1]!
   22910:	cmp	r0, #32
   22914:	bhi	22928 <main@@Base+0xc898>
   22918:	mov	r0, r5
   2291c:	mov	r2, r6
   22920:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   22924:	mov	r7, r0
   22928:	cmp	r7, r6
   2292c:	beq	22a40 <main@@Base+0xc9b0>
   22930:	add	r0, sl, #4
   22934:	mov	r2, #0
   22938:	add	r8, sp, #32
   2293c:	add	r9, sp, #28
   22940:	str	sl, [sp, #16]
   22944:	str	r0, [sp, #12]
   22948:	ldr	r4, [sl]
   2294c:	mov	sl, r0
   22950:	str	r2, [sp, #20]
   22954:	add	r0, sp, #24
   22958:	mov	r1, r7
   2295c:	mov	r2, r6
   22960:	mov	r3, r9
   22964:	str	r8, [sp]
   22968:	str	r0, [sp, #4]
   2296c:	mov	r0, r5
   22970:	blx	r4
   22974:	cmp	r0, r6
   22978:	beq	22a40 <main@@Base+0xc9b0>
   2297c:	mov	r4, r0
   22980:	cmp	r0, r7
   22984:	bne	22998 <main@@Base+0xc908>
   22988:	ldr	r4, [sl], #4
   2298c:	cmp	r4, #0
   22990:	bne	22954 <main@@Base+0xc8c4>
   22994:	b	22a48 <main@@Base+0xc9b8>
   22998:	ldr	r2, [sp, #28]
   2299c:	ldr	r0, [sp, #32]
   229a0:	ldr	r1, [sp, #36]	; 0x24
   229a4:	cmp	r2, #0
   229a8:	beq	229d0 <main@@Base+0xc940>
   229ac:	ldr	sl, [sp, #16]
   229b0:	subs	r2, r0, #129	; 0x81
   229b4:	sbcs	r1, r1, #0
   229b8:	bcc	229fc <main@@Base+0xc96c>
   229bc:	mov	r0, r5
   229c0:	mov	r1, r4
   229c4:	mov	r2, r6
   229c8:	mov	r3, #8
   229cc:	b	229f0 <main@@Base+0xc960>
   229d0:	ldr	sl, [sp, #16]
   229d4:	subs	r2, r0, #128	; 0x80
   229d8:	sbcs	r1, r1, #0
   229dc:	bcc	22a04 <main@@Base+0xc974>
   229e0:	mov	r0, r5
   229e4:	mov	r1, r4
   229e8:	mov	r2, r6
   229ec:	mov	r3, #7
   229f0:	bl	337ac <flatcc_json_parser_set_error@@Base>
   229f4:	ldr	r2, [sp, #20]
   229f8:	b	22a0c <main@@Base+0xc97c>
   229fc:	rsb	r2, r0, #0
   22a00:	b	22a08 <main@@Base+0xc978>
   22a04:	mov	r2, r0
   22a08:	mov	r0, r4
   22a0c:	cmp	r0, r6
   22a10:	beq	22a40 <main@@Base+0xc9b0>
   22a14:	ldr	r0, [fp, #8]
   22a18:	mov	r7, r4
   22a1c:	mov	r1, r0
   22a20:	ldrb	r0, [r0]
   22a24:	add	r0, r0, r2
   22a28:	strb	r0, [r1]
   22a2c:	ldr	r0, [sp, #24]
   22a30:	cmp	r0, #0
   22a34:	ldr	r0, [sp, #12]
   22a38:	bne	22948 <main@@Base+0xc8b8>
   22a3c:	b	22a60 <main@@Base+0xc9d0>
   22a40:	mov	r4, r6
   22a44:	b	22a60 <main@@Base+0xc9d0>
   22a48:	mov	r0, r5
   22a4c:	mov	r1, r7
   22a50:	mov	r2, r6
   22a54:	mov	r3, #23
   22a58:	bl	337ac <flatcc_json_parser_set_error@@Base>
   22a5c:	mov	r4, r0
   22a60:	mov	r0, r4
   22a64:	sub	sp, fp, #28
   22a68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22a6c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22a70:	add	fp, sp, #28
   22a74:	sub	sp, sp, #44	; 0x2c
   22a78:	mov	r6, r2
   22a7c:	ldr	r2, [fp, #8]
   22a80:	mov	r5, r0
   22a84:	mov	r0, #0
   22a88:	mov	r8, r3
   22a8c:	cmp	r1, r6
   22a90:	strb	r0, [r2]
   22a94:	beq	22ad8 <main@@Base+0xca48>
   22a98:	ldrb	r0, [r1]
   22a9c:	cmp	r0, #46	; 0x2e
   22aa0:	beq	22ab8 <main@@Base+0xca28>
   22aa4:	cmp	r0, #34	; 0x22
   22aa8:	bne	22ad0 <main@@Base+0xca40>
   22aac:	mov	r0, #0
   22ab0:	add	r1, r1, #1
   22ab4:	b	22ad4 <main@@Base+0xca44>
   22ab8:	mov	r0, r5
   22abc:	mov	r2, r6
   22ac0:	mov	r3, #5
   22ac4:	bl	337ac <flatcc_json_parser_set_error@@Base>
   22ac8:	mov	r1, r0
   22acc:	b	22ad8 <main@@Base+0xca48>
   22ad0:	mov	r0, #1
   22ad4:	str	r0, [r5, #12]
   22ad8:	ldr	r0, [r5, #12]
   22adc:	cmp	r0, #0
   22ae0:	beq	22aec <main@@Base+0xca5c>
   22ae4:	mov	r7, r1
   22ae8:	b	22b28 <main@@Base+0xca98>
   22aec:	sub	r0, r6, r1
   22af0:	cmp	r0, #2
   22af4:	blt	22b18 <main@@Base+0xca88>
   22af8:	ldrb	r0, [r1]
   22afc:	cmp	r0, #32
   22b00:	bhi	22ae4 <main@@Base+0xca54>
   22b04:	bne	22b18 <main@@Base+0xca88>
   22b08:	mov	r7, r1
   22b0c:	ldrb	r0, [r7, #1]!
   22b10:	cmp	r0, #32
   22b14:	bhi	22b28 <main@@Base+0xca98>
   22b18:	mov	r0, r5
   22b1c:	mov	r2, r6
   22b20:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   22b24:	mov	r7, r0
   22b28:	cmp	r7, r6
   22b2c:	beq	22c30 <main@@Base+0xcba0>
   22b30:	add	r0, r8, #4
   22b34:	mov	r1, #0
   22b38:	add	sl, sp, #32
   22b3c:	add	r9, sp, #28
   22b40:	str	r8, [sp, #16]
   22b44:	str	r1, [sp, #20]
   22b48:	str	r0, [sp, #12]
   22b4c:	ldr	r4, [r8]
   22b50:	mov	r8, r0
   22b54:	add	r0, sp, #24
   22b58:	mov	r1, r7
   22b5c:	mov	r2, r6
   22b60:	mov	r3, r9
   22b64:	str	sl, [sp]
   22b68:	str	r0, [sp, #4]
   22b6c:	mov	r0, r5
   22b70:	blx	r4
   22b74:	cmp	r0, r6
   22b78:	beq	22c30 <main@@Base+0xcba0>
   22b7c:	mov	r4, r0
   22b80:	cmp	r0, r7
   22b84:	bne	22b98 <main@@Base+0xcb08>
   22b88:	ldr	r4, [r8], #4
   22b8c:	cmp	r4, #0
   22b90:	bne	22b54 <main@@Base+0xcac4>
   22b94:	b	22c38 <main@@Base+0xcba8>
   22b98:	ldr	r0, [sp, #28]
   22b9c:	cmp	r0, #0
   22ba0:	beq	22bc0 <main@@Base+0xcb30>
   22ba4:	mov	r0, r5
   22ba8:	mov	r1, r4
   22bac:	mov	r2, r6
   22bb0:	mov	r3, #8
   22bb4:	bl	337ac <flatcc_json_parser_set_error@@Base>
   22bb8:	ldr	r8, [sp, #16]
   22bbc:	b	22bf8 <main@@Base+0xcb68>
   22bc0:	ldr	r0, [sp, #32]
   22bc4:	ldr	r1, [sp, #36]	; 0x24
   22bc8:	ldr	r8, [sp, #16]
   22bcc:	subs	r2, r0, #256	; 0x100
   22bd0:	sbcs	r1, r1, #0
   22bd4:	bcc	22bf0 <main@@Base+0xcb60>
   22bd8:	mov	r0, r5
   22bdc:	mov	r1, r4
   22be0:	mov	r2, r6
   22be4:	mov	r3, #7
   22be8:	bl	337ac <flatcc_json_parser_set_error@@Base>
   22bec:	b	22bf8 <main@@Base+0xcb68>
   22bf0:	str	r0, [sp, #20]
   22bf4:	mov	r0, r4
   22bf8:	cmp	r0, r6
   22bfc:	beq	22c30 <main@@Base+0xcba0>
   22c00:	ldr	r0, [fp, #8]
   22c04:	ldr	r2, [sp, #20]
   22c08:	mov	r7, r4
   22c0c:	mov	r1, r0
   22c10:	ldrb	r0, [r0]
   22c14:	add	r0, r0, r2
   22c18:	strb	r0, [r1]
   22c1c:	ldr	r0, [sp, #24]
   22c20:	cmp	r0, #0
   22c24:	ldr	r0, [sp, #12]
   22c28:	bne	22b4c <main@@Base+0xcabc>
   22c2c:	b	22c50 <main@@Base+0xcbc0>
   22c30:	mov	r4, r6
   22c34:	b	22c50 <main@@Base+0xcbc0>
   22c38:	mov	r0, r5
   22c3c:	mov	r1, r7
   22c40:	mov	r2, r6
   22c44:	mov	r3, #23
   22c48:	bl	337ac <flatcc_json_parser_set_error@@Base>
   22c4c:	mov	r4, r0
   22c50:	mov	r0, r4
   22c54:	sub	sp, fp, #28
   22c58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22c5c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22c60:	add	fp, sp, #28
   22c64:	sub	sp, sp, #44	; 0x2c
   22c68:	mov	r6, r2
   22c6c:	ldr	r2, [fp, #8]
   22c70:	mov	r5, r0
   22c74:	mov	r0, #0
   22c78:	mov	sl, r3
   22c7c:	cmp	r1, r6
   22c80:	strh	r0, [r2]
   22c84:	beq	22cc8 <main@@Base+0xcc38>
   22c88:	ldrb	r0, [r1]
   22c8c:	cmp	r0, #46	; 0x2e
   22c90:	beq	22ca8 <main@@Base+0xcc18>
   22c94:	cmp	r0, #34	; 0x22
   22c98:	bne	22cc0 <main@@Base+0xcc30>
   22c9c:	mov	r0, #0
   22ca0:	add	r1, r1, #1
   22ca4:	b	22cc4 <main@@Base+0xcc34>
   22ca8:	mov	r0, r5
   22cac:	mov	r2, r6
   22cb0:	mov	r3, #5
   22cb4:	bl	337ac <flatcc_json_parser_set_error@@Base>
   22cb8:	mov	r1, r0
   22cbc:	b	22cc8 <main@@Base+0xcc38>
   22cc0:	mov	r0, #1
   22cc4:	str	r0, [r5, #12]
   22cc8:	ldr	r0, [r5, #12]
   22ccc:	cmp	r0, #0
   22cd0:	beq	22cdc <main@@Base+0xcc4c>
   22cd4:	mov	r7, r1
   22cd8:	b	22d18 <main@@Base+0xcc88>
   22cdc:	sub	r0, r6, r1
   22ce0:	cmp	r0, #2
   22ce4:	blt	22d08 <main@@Base+0xcc78>
   22ce8:	ldrb	r0, [r1]
   22cec:	cmp	r0, #32
   22cf0:	bhi	22cd4 <main@@Base+0xcc44>
   22cf4:	bne	22d08 <main@@Base+0xcc78>
   22cf8:	mov	r7, r1
   22cfc:	ldrb	r0, [r7, #1]!
   22d00:	cmp	r0, #32
   22d04:	bhi	22d18 <main@@Base+0xcc88>
   22d08:	mov	r0, r5
   22d0c:	mov	r2, r6
   22d10:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   22d14:	mov	r7, r0
   22d18:	cmp	r7, r6
   22d1c:	beq	22e34 <main@@Base+0xcda4>
   22d20:	add	r0, sl, #4
   22d24:	mov	r2, #0
   22d28:	add	r8, sp, #32
   22d2c:	add	r9, sp, #28
   22d30:	str	sl, [sp, #16]
   22d34:	str	r0, [sp, #12]
   22d38:	ldr	r4, [sl]
   22d3c:	mov	sl, r0
   22d40:	str	r2, [sp, #20]
   22d44:	add	r0, sp, #24
   22d48:	mov	r1, r7
   22d4c:	mov	r2, r6
   22d50:	mov	r3, r9
   22d54:	str	r8, [sp]
   22d58:	str	r0, [sp, #4]
   22d5c:	mov	r0, r5
   22d60:	blx	r4
   22d64:	cmp	r0, r6
   22d68:	beq	22e34 <main@@Base+0xcda4>
   22d6c:	mov	r4, r0
   22d70:	cmp	r0, r7
   22d74:	bne	22d88 <main@@Base+0xccf8>
   22d78:	ldr	r4, [sl], #4
   22d7c:	cmp	r4, #0
   22d80:	bne	22d44 <main@@Base+0xccb4>
   22d84:	b	22e3c <main@@Base+0xcdac>
   22d88:	ldr	r2, [sp, #28]
   22d8c:	ldr	r0, [sp, #32]
   22d90:	ldr	r1, [sp, #36]	; 0x24
   22d94:	cmp	r2, #0
   22d98:	beq	22dc4 <main@@Base+0xcd34>
   22d9c:	ldr	sl, [sp, #16]
   22da0:	movw	r2, #32769	; 0x8001
   22da4:	subs	r2, r0, r2
   22da8:	sbcs	r1, r1, #0
   22dac:	bcc	22df0 <main@@Base+0xcd60>
   22db0:	mov	r0, r5
   22db4:	mov	r1, r4
   22db8:	mov	r2, r6
   22dbc:	mov	r3, #8
   22dc0:	b	22de4 <main@@Base+0xcd54>
   22dc4:	ldr	sl, [sp, #16]
   22dc8:	subs	r2, r0, #32768	; 0x8000
   22dcc:	sbcs	r1, r1, #0
   22dd0:	bcc	22df8 <main@@Base+0xcd68>
   22dd4:	mov	r0, r5
   22dd8:	mov	r1, r4
   22ddc:	mov	r2, r6
   22de0:	mov	r3, #7
   22de4:	bl	337ac <flatcc_json_parser_set_error@@Base>
   22de8:	ldr	r2, [sp, #20]
   22dec:	b	22e00 <main@@Base+0xcd70>
   22df0:	rsb	r2, r0, #0
   22df4:	b	22dfc <main@@Base+0xcd6c>
   22df8:	mov	r2, r0
   22dfc:	mov	r0, r4
   22e00:	cmp	r0, r6
   22e04:	beq	22e34 <main@@Base+0xcda4>
   22e08:	ldr	r0, [fp, #8]
   22e0c:	mov	r7, r4
   22e10:	mov	r1, r0
   22e14:	ldrh	r0, [r0]
   22e18:	add	r0, r0, r2
   22e1c:	strh	r0, [r1]
   22e20:	ldr	r0, [sp, #24]
   22e24:	cmp	r0, #0
   22e28:	ldr	r0, [sp, #12]
   22e2c:	bne	22d38 <main@@Base+0xcca8>
   22e30:	b	22e54 <main@@Base+0xcdc4>
   22e34:	mov	r4, r6
   22e38:	b	22e54 <main@@Base+0xcdc4>
   22e3c:	mov	r0, r5
   22e40:	mov	r1, r7
   22e44:	mov	r2, r6
   22e48:	mov	r3, #23
   22e4c:	bl	337ac <flatcc_json_parser_set_error@@Base>
   22e50:	mov	r4, r0
   22e54:	mov	r0, r4
   22e58:	sub	sp, fp, #28
   22e5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22e60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22e64:	add	fp, sp, #28
   22e68:	sub	sp, sp, #28
   22e6c:	mov	r7, r2
   22e70:	mov	r5, r0
   22e74:	cmp	r1, r2
   22e78:	beq	22eb0 <main@@Base+0xce20>
   22e7c:	ldrb	r0, [r1]
   22e80:	cmp	r0, #123	; 0x7b
   22e84:	bne	22eb0 <main@@Base+0xce20>
   22e88:	add	r2, r1, #1
   22e8c:	mov	r9, r3
   22e90:	sub	r0, r7, r2
   22e94:	cmp	r0, #2
   22e98:	blt	22ed8 <main@@Base+0xce48>
   22e9c:	ldrb	r0, [r2]
   22ea0:	cmp	r0, #32
   22ea4:	bls	22ec8 <main@@Base+0xce38>
   22ea8:	mov	r1, r2
   22eac:	b	22eec <main@@Base+0xce5c>
   22eb0:	mov	r0, r5
   22eb4:	mov	r2, r7
   22eb8:	mov	r3, #21
   22ebc:	sub	sp, fp, #28
   22ec0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22ec4:	b	337ac <flatcc_json_parser_set_error@@Base>
   22ec8:	bne	22ed8 <main@@Base+0xce48>
   22ecc:	ldrb	r0, [r1, #2]!
   22ed0:	cmp	r0, #32
   22ed4:	bhi	22eec <main@@Base+0xce5c>
   22ed8:	mov	r1, r2
   22edc:	mov	r0, r5
   22ee0:	mov	r2, r7
   22ee4:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   22ee8:	mov	r1, r0
   22eec:	cmp	r1, r7
   22ef0:	mov	r2, r7
   22ef4:	beq	22f2c <main@@Base+0xce9c>
   22ef8:	ldrb	r0, [r1]
   22efc:	cmp	r0, #125	; 0x7d
   22f00:	bne	22f28 <main@@Base+0xce98>
   22f04:	add	r2, r1, #1
   22f08:	sub	r0, r7, r2
   22f0c:	cmp	r0, #2
   22f10:	blt	23518 <main@@Base+0xd488>
   22f14:	ldrb	r0, [r2]
   22f18:	cmp	r0, #32
   22f1c:	bls	23508 <main@@Base+0xd478>
   22f20:	mov	r1, r2
   22f24:	b	23570 <main@@Base+0xd4e0>
   22f28:	mov	r2, r1
   22f2c:	mov	sl, #-268435456	; 0xf0000000
   22f30:	mov	r6, #1627389952	; 0x61000000
   22f34:	cmp	r2, r7
   22f38:	mov	r4, r7
   22f3c:	beq	22f88 <main@@Base+0xcef8>
   22f40:	ldrb	r0, [r2]
   22f44:	cmp	r0, #46	; 0x2e
   22f48:	beq	22f60 <main@@Base+0xced0>
   22f4c:	cmp	r0, #34	; 0x22
   22f50:	bne	22f7c <main@@Base+0xceec>
   22f54:	mov	r0, #0
   22f58:	add	r4, r2, #1
   22f5c:	b	22f84 <main@@Base+0xcef4>
   22f60:	mov	r1, r2
   22f64:	mov	r0, r5
   22f68:	mov	r2, r7
   22f6c:	mov	r3, #5
   22f70:	bl	337ac <flatcc_json_parser_set_error@@Base>
   22f74:	mov	r4, r0
   22f78:	b	22f88 <main@@Base+0xcef8>
   22f7c:	mov	r0, #1
   22f80:	mov	r4, r2
   22f84:	str	r0, [r5, #12]
   22f88:	sub	r0, r7, r4
   22f8c:	mov	r1, #8
   22f90:	cmp	r0, #8
   22f94:	movcc	r1, r0
   22f98:	add	r1, sl, r1, lsl #28
   22f9c:	asr	r1, r1, #28
   22fa0:	cmp	r1, #0
   22fa4:	blt	23224 <main@@Base+0xd194>
   22fa8:	ldrb	r1, [r4]
   22fac:	teq	r6, r1, lsl #24
   22fb0:	beq	23000 <main@@Base+0xcf70>
   22fb4:	lsl	r1, r1, #24
   22fb8:	teq	r1, #1644167168	; 0x62000000
   22fbc:	bne	23224 <main@@Base+0xd194>
   22fc0:	cmp	r0, #2
   22fc4:	mov	r8, r4
   22fc8:	blt	231a8 <main@@Base+0xd118>
   22fcc:	mov	r1, r4
   22fd0:	ldr	r2, [r5, #12]
   22fd4:	ldrb	r0, [r1, #1]!
   22fd8:	cmp	r2, #0
   22fdc:	beq	23040 <main@@Base+0xcfb0>
   22fe0:	cmp	r0, #33	; 0x21
   22fe4:	bcc	22ff4 <main@@Base+0xcf64>
   22fe8:	cmp	r0, #58	; 0x3a
   22fec:	mov	r8, r4
   22ff0:	bne	231a8 <main@@Base+0xd118>
   22ff4:	mov	r0, #0
   22ff8:	str	r0, [r5, #12]
   22ffc:	b	23050 <main@@Base+0xcfc0>
   23000:	cmp	r0, #2
   23004:	mov	r6, r4
   23008:	blt	232e4 <main@@Base+0xd254>
   2300c:	mov	r1, r4
   23010:	ldr	r2, [r5, #12]
   23014:	ldrb	r0, [r1, #1]!
   23018:	cmp	r2, #0
   2301c:	beq	23070 <main@@Base+0xcfe0>
   23020:	cmp	r0, #33	; 0x21
   23024:	bcc	23034 <main@@Base+0xcfa4>
   23028:	cmp	r0, #58	; 0x3a
   2302c:	mov	r6, r4
   23030:	bne	232e4 <main@@Base+0xd254>
   23034:	mov	r0, #0
   23038:	str	r0, [r5, #12]
   2303c:	b	23080 <main@@Base+0xcff0>
   23040:	cmp	r0, #34	; 0x22
   23044:	mov	r8, r4
   23048:	bne	231a8 <main@@Base+0xd118>
   2304c:	add	r1, r4, #2
   23050:	sub	r0, r7, r1
   23054:	cmp	r0, #2
   23058:	blt	230b4 <main@@Base+0xd024>
   2305c:	ldrb	r0, [r1]
   23060:	cmp	r0, #32
   23064:	bls	230a0 <main@@Base+0xd010>
   23068:	mov	r8, r1
   2306c:	b	230c4 <main@@Base+0xd034>
   23070:	cmp	r0, #34	; 0x22
   23074:	mov	r6, r4
   23078:	bne	232e4 <main@@Base+0xd254>
   2307c:	add	r1, r4, #2
   23080:	sub	r0, r7, r1
   23084:	cmp	r0, #2
   23088:	blt	23128 <main@@Base+0xd098>
   2308c:	ldrb	r0, [r1]
   23090:	cmp	r0, #32
   23094:	bls	23114 <main@@Base+0xd084>
   23098:	mov	r6, r1
   2309c:	b	23138 <main@@Base+0xd0a8>
   230a0:	bne	230b4 <main@@Base+0xd024>
   230a4:	mov	r8, r1
   230a8:	ldrb	r0, [r8, #1]!
   230ac:	cmp	r0, #32
   230b0:	bhi	230c4 <main@@Base+0xd034>
   230b4:	mov	r0, r5
   230b8:	mov	r2, r7
   230bc:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   230c0:	mov	r8, r0
   230c4:	cmp	r8, r7
   230c8:	beq	230fc <main@@Base+0xd06c>
   230cc:	ldrb	r0, [r8]
   230d0:	cmp	r0, #58	; 0x3a
   230d4:	bne	230fc <main@@Base+0xd06c>
   230d8:	add	r1, r8, #1
   230dc:	sub	r0, r7, r1
   230e0:	cmp	r0, #2
   230e4:	blt	23198 <main@@Base+0xd108>
   230e8:	ldrb	r0, [r1]
   230ec:	cmp	r0, #32
   230f0:	bls	23188 <main@@Base+0xd0f8>
   230f4:	mov	r8, r1
   230f8:	b	231a8 <main@@Base+0xd118>
   230fc:	mov	r0, r5
   23100:	mov	r1, r8
   23104:	mov	r2, r7
   23108:	mov	r3, #4
   2310c:	bl	337ac <flatcc_json_parser_set_error@@Base>
   23110:	b	231a4 <main@@Base+0xd114>
   23114:	bne	23128 <main@@Base+0xd098>
   23118:	mov	r6, r1
   2311c:	ldrb	r0, [r6, #1]!
   23120:	cmp	r0, #32
   23124:	bhi	23138 <main@@Base+0xd0a8>
   23128:	mov	r0, r5
   2312c:	mov	r2, r7
   23130:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   23134:	mov	r6, r0
   23138:	cmp	r6, r7
   2313c:	beq	23170 <main@@Base+0xd0e0>
   23140:	ldrb	r0, [r6]
   23144:	cmp	r0, #58	; 0x3a
   23148:	bne	23170 <main@@Base+0xd0e0>
   2314c:	add	r1, r6, #1
   23150:	sub	r0, r7, r1
   23154:	cmp	r0, #2
   23158:	blt	232d4 <main@@Base+0xd244>
   2315c:	ldrb	r0, [r1]
   23160:	cmp	r0, #32
   23164:	bls	232c4 <main@@Base+0xd234>
   23168:	mov	r6, r1
   2316c:	b	232e4 <main@@Base+0xd254>
   23170:	mov	r0, r5
   23174:	mov	r1, r6
   23178:	mov	r2, r7
   2317c:	mov	r3, #4
   23180:	bl	337ac <flatcc_json_parser_set_error@@Base>
   23184:	b	232e0 <main@@Base+0xd250>
   23188:	bne	23198 <main@@Base+0xd108>
   2318c:	ldrb	r0, [r8, #2]!
   23190:	cmp	r0, #32
   23194:	bhi	231a8 <main@@Base+0xd118>
   23198:	mov	r0, r5
   2319c:	mov	r2, r7
   231a0:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   231a4:	mov	r8, r0
   231a8:	cmp	r4, r8
   231ac:	beq	23224 <main@@Base+0xd194>
   231b0:	mov	r4, #0
   231b4:	cmp	r8, r7
   231b8:	str	r4, [sp, #20]
   231bc:	str	r4, [sp, #16]
   231c0:	strb	r4, [sp, #10]
   231c4:	str	r4, [sp, #12]
   231c8:	beq	2323c <main@@Base+0xd1ac>
   231cc:	add	r0, sp, #16
   231d0:	mov	r1, r8
   231d4:	mov	r2, r7
   231d8:	add	r3, sp, #12
   231dc:	str	r0, [sp]
   231e0:	mov	r0, r5
   231e4:	bl	356c0 <flatcc_json_parser_integer@@Base>
   231e8:	cmp	r0, r8
   231ec:	beq	23244 <main@@Base+0xd1b4>
   231f0:	ldr	r3, [sp, #12]
   231f4:	mov	r1, r0
   231f8:	ldr	r0, [sp, #16]
   231fc:	ldr	r2, [sp, #20]
   23200:	cmp	r3, #0
   23204:	beq	2324c <main@@Base+0xd1bc>
   23208:	subs	r3, r0, #129	; 0x81
   2320c:	sbcs	r2, r2, #0
   23210:	bcc	23270 <main@@Base+0xd1e0>
   23214:	mov	r0, r5
   23218:	mov	r2, r7
   2321c:	mov	r3, #8
   23220:	b	23264 <main@@Base+0xd1d4>
   23224:	mov	r0, r5
   23228:	mov	r1, r4
   2322c:	mov	r2, r7
   23230:	bl	33ecc <flatcc_json_parser_unmatched_symbol@@Base>
   23234:	mov	r1, r0
   23238:	b	23404 <main@@Base+0xd374>
   2323c:	mov	r1, r7
   23240:	b	23280 <main@@Base+0xd1f0>
   23244:	mov	r1, r8
   23248:	b	23280 <main@@Base+0xd1f0>
   2324c:	subs	r3, r0, #128	; 0x80
   23250:	sbcs	r2, r2, #0
   23254:	bcc	23278 <main@@Base+0xd1e8>
   23258:	mov	r0, r5
   2325c:	mov	r2, r7
   23260:	mov	r3, #7
   23264:	bl	337ac <flatcc_json_parser_set_error@@Base>
   23268:	mov	r1, r0
   2326c:	b	23280 <main@@Base+0xd1f0>
   23270:	rsb	r4, r0, #0
   23274:	b	2327c <main@@Base+0xd1ec>
   23278:	mov	r4, r0
   2327c:	strb	r4, [sp, #10]
   23280:	cmp	r8, r1
   23284:	bne	232bc <main@@Base+0xd22c>
   23288:	movw	r3, #45512	; 0xb1c8
   2328c:	add	r0, sp, #10
   23290:	mov	r1, r8
   23294:	mov	r2, r7
   23298:	str	r0, [sp]
   2329c:	mov	r0, r5
   232a0:	movt	r3, #5
   232a4:	bl	2286c <main@@Base+0xc7dc>
   232a8:	mov	r1, r0
   232ac:	cmp	r0, r8
   232b0:	cmpne	r1, r7
   232b4:	beq	234b8 <main@@Base+0xd428>
   232b8:	ldrb	r4, [sp, #10]
   232bc:	strb	r4, [r9, #2]
   232c0:	b	23404 <main@@Base+0xd374>
   232c4:	bne	232d4 <main@@Base+0xd244>
   232c8:	ldrb	r0, [r6, #2]!
   232cc:	cmp	r0, #32
   232d0:	bhi	232e4 <main@@Base+0xd254>
   232d4:	mov	r0, r5
   232d8:	mov	r2, r7
   232dc:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   232e0:	mov	r6, r0
   232e4:	cmp	r4, r6
   232e8:	beq	23364 <main@@Base+0xd2d4>
   232ec:	mov	r4, #0
   232f0:	cmp	r6, r7
   232f4:	str	r4, [sp, #20]
   232f8:	str	r4, [sp, #16]
   232fc:	strh	r4, [sp, #10]
   23300:	str	r4, [sp, #12]
   23304:	beq	2337c <main@@Base+0xd2ec>
   23308:	add	r0, sp, #16
   2330c:	mov	r1, r6
   23310:	mov	r2, r7
   23314:	add	r3, sp, #12
   23318:	str	r0, [sp]
   2331c:	mov	r0, r5
   23320:	bl	356c0 <flatcc_json_parser_integer@@Base>
   23324:	cmp	r0, r6
   23328:	beq	23384 <main@@Base+0xd2f4>
   2332c:	ldr	r3, [sp, #12]
   23330:	mov	r1, r0
   23334:	ldr	r0, [sp, #16]
   23338:	ldr	r2, [sp, #20]
   2333c:	cmp	r3, #0
   23340:	beq	2338c <main@@Base+0xd2fc>
   23344:	movw	r3, #32769	; 0x8001
   23348:	subs	r3, r0, r3
   2334c:	sbcs	r2, r2, #0
   23350:	bcc	233b0 <main@@Base+0xd320>
   23354:	mov	r0, r5
   23358:	mov	r2, r7
   2335c:	mov	r3, #8
   23360:	b	233a4 <main@@Base+0xd314>
   23364:	mov	r0, r5
   23368:	mov	r1, r4
   2336c:	mov	r2, r7
   23370:	bl	33ecc <flatcc_json_parser_unmatched_symbol@@Base>
   23374:	mov	r1, r0
   23378:	b	23400 <main@@Base+0xd370>
   2337c:	mov	r1, r7
   23380:	b	233c0 <main@@Base+0xd330>
   23384:	mov	r1, r6
   23388:	b	233c0 <main@@Base+0xd330>
   2338c:	subs	r3, r0, #32768	; 0x8000
   23390:	sbcs	r2, r2, #0
   23394:	bcc	233b8 <main@@Base+0xd328>
   23398:	mov	r0, r5
   2339c:	mov	r2, r7
   233a0:	mov	r3, #7
   233a4:	bl	337ac <flatcc_json_parser_set_error@@Base>
   233a8:	mov	r1, r0
   233ac:	b	233c0 <main@@Base+0xd330>
   233b0:	rsb	r4, r0, #0
   233b4:	b	233bc <main@@Base+0xd32c>
   233b8:	mov	r4, r0
   233bc:	strh	r4, [sp, #10]
   233c0:	cmp	r6, r1
   233c4:	bne	233fc <main@@Base+0xd36c>
   233c8:	movw	r3, #45524	; 0xb1d4
   233cc:	add	r0, sp, #10
   233d0:	mov	r1, r6
   233d4:	mov	r2, r7
   233d8:	str	r0, [sp]
   233dc:	mov	r0, r5
   233e0:	movt	r3, #5
   233e4:	bl	22c5c <main@@Base+0xcbcc>
   233e8:	mov	r1, r0
   233ec:	cmp	r0, r6
   233f0:	cmpne	r1, r7
   233f4:	beq	234b8 <main@@Base+0xd428>
   233f8:	ldrh	r4, [sp, #10]
   233fc:	strh	r4, [r9]
   23400:	mov	r6, #1627389952	; 0x61000000
   23404:	sub	r0, r7, r1
   23408:	cmp	r0, #2
   2340c:	blt	23438 <main@@Base+0xd3a8>
   23410:	ldrb	r0, [r1]
   23414:	cmp	r0, #32
   23418:	bls	23424 <main@@Base+0xd394>
   2341c:	mov	r2, r1
   23420:	b	23448 <main@@Base+0xd3b8>
   23424:	bne	23438 <main@@Base+0xd3a8>
   23428:	mov	r2, r1
   2342c:	ldrb	r0, [r2, #1]!
   23430:	cmp	r0, #32
   23434:	bhi	23448 <main@@Base+0xd3b8>
   23438:	mov	r0, r5
   2343c:	mov	r2, r7
   23440:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   23444:	mov	r2, r0
   23448:	cmp	r2, r7
   2344c:	beq	234c8 <main@@Base+0xd438>
   23450:	ldrb	r0, [r2]
   23454:	cmp	r0, #44	; 0x2c
   23458:	bne	234d0 <main@@Base+0xd440>
   2345c:	add	r1, r2, #1
   23460:	sub	r0, r7, r1
   23464:	cmp	r0, #2
   23468:	blt	23490 <main@@Base+0xd400>
   2346c:	ldrb	r0, [r1]
   23470:	cmp	r0, #32
   23474:	bls	23480 <main@@Base+0xd3f0>
   23478:	mov	r2, r1
   2347c:	b	234a0 <main@@Base+0xd410>
   23480:	bne	23490 <main@@Base+0xd400>
   23484:	ldrb	r0, [r2, #2]!
   23488:	cmp	r0, #32
   2348c:	bhi	234a0 <main@@Base+0xd410>
   23490:	mov	r0, r5
   23494:	mov	r2, r7
   23498:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   2349c:	mov	r2, r0
   234a0:	cmp	r2, r7
   234a4:	beq	234fc <main@@Base+0xd46c>
   234a8:	ldrb	r0, [r2]
   234ac:	cmp	r0, #125	; 0x7d
   234b0:	bne	22f34 <main@@Base+0xcea4>
   234b4:	b	234d8 <main@@Base+0xd448>
   234b8:	mov	r0, r5
   234bc:	mov	r2, r7
   234c0:	mov	r3, #33	; 0x21
   234c4:	b	23540 <main@@Base+0xd4b0>
   234c8:	mov	r1, r7
   234cc:	b	23570 <main@@Base+0xd4e0>
   234d0:	cmp	r0, #125	; 0x7d
   234d4:	bne	23530 <main@@Base+0xd4a0>
   234d8:	add	r3, r2, #1
   234dc:	sub	r0, r7, r3
   234e0:	cmp	r0, #2
   234e4:	blt	2355c <main@@Base+0xd4cc>
   234e8:	ldrb	r0, [r3]
   234ec:	cmp	r0, #32
   234f0:	bls	23548 <main@@Base+0xd4b8>
   234f4:	mov	r1, r3
   234f8:	b	23570 <main@@Base+0xd4e0>
   234fc:	mov	r0, r5
   23500:	mov	r1, r7
   23504:	b	23538 <main@@Base+0xd4a8>
   23508:	bne	23518 <main@@Base+0xd488>
   2350c:	ldrb	r0, [r1, #2]!
   23510:	cmp	r0, #32
   23514:	bhi	23570 <main@@Base+0xd4e0>
   23518:	mov	r1, r2
   2351c:	mov	r0, r5
   23520:	mov	r2, r7
   23524:	sub	sp, fp, #28
   23528:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2352c:	b	33854 <flatcc_json_parser_space_ext@@Base>
   23530:	mov	r0, r5
   23534:	mov	r1, r2
   23538:	mov	r2, r7
   2353c:	mov	r3, #10
   23540:	bl	337ac <flatcc_json_parser_set_error@@Base>
   23544:	b	2356c <main@@Base+0xd4dc>
   23548:	bne	2355c <main@@Base+0xd4cc>
   2354c:	ldrb	r0, [r2, #2]!
   23550:	cmp	r0, #32
   23554:	mov	r1, r2
   23558:	bhi	23570 <main@@Base+0xd4e0>
   2355c:	mov	r0, r5
   23560:	mov	r1, r3
   23564:	mov	r2, r7
   23568:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   2356c:	mov	r1, r0
   23570:	mov	r0, r1
   23574:	sub	sp, fp, #28
   23578:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2357c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23580:	add	fp, sp, #28
   23584:	sub	sp, sp, #28
   23588:	ldr	r5, [fp, #8]
   2358c:	mov	r8, r0
   23590:	mov	r0, #0
   23594:	mov	sl, r2
   23598:	mov	r4, r1
   2359c:	cmp	r3, #4
   235a0:	str	r0, [r5]
   235a4:	bhi	235f8 <main@@Base+0xd568>
   235a8:	add	r0, pc, #0
   235ac:	ldr	pc, [r0, r3, lsl #2]
   235b0:	andeq	r3, r2, r4, asr #11
   235b4:	andeq	r3, r2, r0, lsr #12
   235b8:	andeq	r3, r2, r8, lsr r6
   235bc:	andeq	r3, r2, ip, lsl #13
   235c0:	andeq	r3, r2, r0, ror #13
   235c4:	sub	r0, sl, r4
   235c8:	cmp	r0, #4
   235cc:	blt	235e4 <main@@Base+0xd554>
   235d0:	ldr	r0, [r4]
   235d4:	movw	r1, #30062	; 0x756e
   235d8:	movt	r1, #27756	; 0x6c6c
   235dc:	cmp	r0, r1
   235e0:	beq	23798 <main@@Base+0xd708>
   235e4:	mov	r0, r8
   235e8:	mov	r1, r4
   235ec:	mov	r2, sl
   235f0:	mov	r3, #26
   235f4:	b	23614 <main@@Base+0xd584>
   235f8:	ldrb	r0, [r8, #8]
   235fc:	tst	r0, #1
   23600:	bne	23768 <main@@Base+0xd6d8>
   23604:	mov	r0, r8
   23608:	mov	r1, r4
   2360c:	mov	r2, sl
   23610:	mov	r3, #15
   23614:	sub	sp, fp, #28
   23618:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2361c:	b	337ac <flatcc_json_parser_set_error@@Base>
   23620:	mov	r0, r8
   23624:	mov	r1, r4
   23628:	mov	r2, sl
   2362c:	mov	r3, r5
   23630:	bl	16f84 <main@@Base+0xef4>
   23634:	b	23730 <main@@Base+0xd6a0>
   23638:	mov	r0, #0
   2363c:	mov	r1, #4
   23640:	str	r0, [r5]
   23644:	ldr	r0, [r8]
   23648:	bl	2f88c <flatcc_builder_start_table@@Base>
   2364c:	cmp	r0, #0
   23650:	bne	2371c <main@@Base+0xd68c>
   23654:	cmp	r4, sl
   23658:	beq	236f8 <main@@Base+0xd668>
   2365c:	ldrb	r0, [r4]
   23660:	cmp	r0, #123	; 0x7b
   23664:	bne	236f8 <main@@Base+0xd668>
   23668:	add	r1, r4, #1
   2366c:	sub	r0, sl, r1
   23670:	cmp	r0, #2
   23674:	blt	237b8 <main@@Base+0xd728>
   23678:	ldrb	r0, [r1]
   2367c:	cmp	r0, #32
   23680:	bls	237a8 <main@@Base+0xd718>
   23684:	mov	r4, r1
   23688:	b	237c8 <main@@Base+0xd738>
   2368c:	mov	r0, #0
   23690:	mov	r1, #0
   23694:	str	r0, [r5]
   23698:	ldr	r0, [r8]
   2369c:	bl	2f88c <flatcc_builder_start_table@@Base>
   236a0:	cmp	r0, #0
   236a4:	bne	2371c <main@@Base+0xd68c>
   236a8:	cmp	r4, sl
   236ac:	beq	236f8 <main@@Base+0xd668>
   236b0:	ldrb	r0, [r4]
   236b4:	cmp	r0, #123	; 0x7b
   236b8:	bne	236f8 <main@@Base+0xd668>
   236bc:	add	r1, r4, #1
   236c0:	sub	r0, sl, r1
   236c4:	cmp	r0, #2
   236c8:	blt	242f0 <main@@Base+0xe260>
   236cc:	ldrb	r0, [r1]
   236d0:	cmp	r0, #32
   236d4:	bls	242e0 <main@@Base+0xe250>
   236d8:	mov	r4, r1
   236dc:	b	24300 <main@@Base+0xe270>
   236e0:	mov	r0, r8
   236e4:	mov	r1, r4
   236e8:	mov	r2, sl
   236ec:	mov	r3, r5
   236f0:	bl	26124 <main@@Base+0x10094>
   236f4:	b	23730 <main@@Base+0xd6a0>
   236f8:	mov	r0, r8
   236fc:	mov	r1, r4
   23700:	mov	r2, sl
   23704:	mov	r3, #21
   23708:	bl	337ac <flatcc_json_parser_set_error@@Base>
   2370c:	mov	r4, r0
   23710:	ldr	r0, [r8, #24]
   23714:	cmp	r0, #0
   23718:	beq	23780 <main@@Base+0xd6f0>
   2371c:	mov	r0, r8
   23720:	mov	r1, r4
   23724:	mov	r2, sl
   23728:	mov	r3, #33	; 0x21
   2372c:	bl	337ac <flatcc_json_parser_set_error@@Base>
   23730:	mov	r4, r0
   23734:	ldr	r0, [r8, #24]
   23738:	cmp	r0, #0
   2373c:	bne	2379c <main@@Base+0xd70c>
   23740:	ldr	r0, [r5]
   23744:	cmp	r0, #0
   23748:	bne	2379c <main@@Base+0xd70c>
   2374c:	mov	r0, r8
   23750:	mov	r1, r4
   23754:	mov	r2, sl
   23758:	mov	r3, #33	; 0x21
   2375c:	bl	337ac <flatcc_json_parser_set_error@@Base>
   23760:	mov	r4, r0
   23764:	b	2379c <main@@Base+0xd70c>
   23768:	mov	r0, r8
   2376c:	mov	r1, r4
   23770:	mov	r2, sl
   23774:	sub	sp, fp, #28
   23778:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2377c:	b	3411c <flatcc_json_parser_generic_json@@Base>
   23780:	ldr	r0, [r8]
   23784:	bl	3021c <flatcc_builder_end_table@@Base>
   23788:	cmp	r0, #0
   2378c:	str	r0, [r5]
   23790:	bne	23734 <main@@Base+0xd6a4>
   23794:	b	2371c <main@@Base+0xd68c>
   23798:	add	r4, r4, #4
   2379c:	mov	r0, r4
   237a0:	sub	sp, fp, #28
   237a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   237a8:	bne	237b8 <main@@Base+0xd728>
   237ac:	ldrb	r0, [r4, #2]!
   237b0:	cmp	r0, #32
   237b4:	bhi	237c8 <main@@Base+0xd738>
   237b8:	mov	r0, r8
   237bc:	mov	r2, sl
   237c0:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   237c4:	mov	r4, r0
   237c8:	cmp	r4, sl
   237cc:	mov	r2, sl
   237d0:	beq	237e4 <main@@Base+0xd754>
   237d4:	ldrb	r0, [r4]
   237d8:	cmp	r0, #125	; 0x7d
   237dc:	beq	24318 <main@@Base+0xe288>
   237e0:	mov	r2, r4
   237e4:	cmp	r2, sl
   237e8:	mov	r9, sl
   237ec:	beq	23838 <main@@Base+0xd7a8>
   237f0:	ldrb	r0, [r2]
   237f4:	cmp	r0, #46	; 0x2e
   237f8:	beq	23810 <main@@Base+0xd780>
   237fc:	cmp	r0, #34	; 0x22
   23800:	bne	2382c <main@@Base+0xd79c>
   23804:	mov	r0, #0
   23808:	add	r9, r2, #1
   2380c:	b	23834 <main@@Base+0xd7a4>
   23810:	mov	r1, r2
   23814:	mov	r0, r8
   23818:	mov	r2, sl
   2381c:	mov	r3, #5
   23820:	bl	337ac <flatcc_json_parser_set_error@@Base>
   23824:	mov	r9, r0
   23828:	b	23838 <main@@Base+0xd7a8>
   2382c:	mov	r0, #1
   23830:	mov	r9, r2
   23834:	str	r0, [r8, #12]
   23838:	sub	lr, sl, r9
   2383c:	mov	r0, #8
   23840:	cmp	lr, #8
   23844:	movcc	r0, lr
   23848:	and	r0, r0, #15
   2384c:	sub	r2, r0, #1
   23850:	cmp	r2, #7
   23854:	bhi	24158 <main@@Base+0xe0c8>
   23858:	mov	ip, r5
   2385c:	add	r5, pc, #24
   23860:	mov	r0, #0
   23864:	mov	r1, #0
   23868:	mov	r3, #0
   2386c:	mov	r7, #0
   23870:	mov	r6, #0
   23874:	mov	r4, #0
   23878:	ldr	pc, [r5, r2, lsl #2]
   2387c:	andeq	r3, r2, ip, asr #17
   23880:	andeq	r3, r2, r4, asr #17
   23884:			; <UNDEFINED> instruction: 0x000238bc
   23888:			; <UNDEFINED> instruction: 0x000238b4
   2388c:	andeq	r3, r2, r4, lsr #17
   23890:	muleq	r2, ip, r8
   23894:	muleq	r2, ip, r8
   23898:	muleq	r2, ip, r8
   2389c:	ldrb	r1, [r9, #5]
   238a0:	lsl	r1, r1, #16
   238a4:	ldrb	r2, [r9, #4]
   238a8:	mov	r3, r0
   238ac:	orr	r1, r1, r2, lsl #24
   238b0:	mov	r0, r1
   238b4:	ldrb	r1, [r9, #3]
   238b8:	orr	r7, r1, r3
   238bc:	ldrb	r1, [r9, #2]
   238c0:	orr	r6, r7, r1, lsl #8
   238c4:	ldrb	r1, [r9, #1]
   238c8:	orr	r4, r6, r1, lsl #16
   238cc:	ldrb	r1, [r9]
   238d0:	movw	r3, #29234	; 0x7232
   238d4:	lsr	r2, r0, #16
   238d8:	movt	r3, #27759	; 0x6c6f
   238dc:	orr	r7, r4, r1, lsl #24
   238e0:	movw	r1, #25455	; 0x636f
   238e4:	orr	r2, r2, r7, lsl #16
   238e8:	eor	r1, r1, r7, lsr #16
   238ec:	eor	r2, r2, r3
   238f0:	orrs	r1, r2, r1
   238f4:	bne	2393c <main@@Base+0xd8ac>
   238f8:	cmp	lr, #7
   238fc:	mov	r6, r9
   23900:	mov	r5, ip
   23904:	blt	23b24 <main@@Base+0xda94>
   23908:	mov	r1, r9
   2390c:	ldr	r2, [r8, #12]
   23910:	ldrb	r0, [r1, #6]!
   23914:	cmp	r2, #0
   23918:	beq	2399c <main@@Base+0xd90c>
   2391c:	cmp	r0, #33	; 0x21
   23920:	bcc	23930 <main@@Base+0xd8a0>
   23924:	cmp	r0, #58	; 0x3a
   23928:	mov	r6, r9
   2392c:	bne	23b24 <main@@Base+0xda94>
   23930:	mov	r0, #0
   23934:	str	r0, [r8, #12]
   23938:	b	239ac <main@@Base+0xd91c>
   2393c:	movw	r1, #27759	; 0x6c6f
   23940:	and	r0, r0, #-16777216	; 0xff000000
   23944:	mov	r5, ip
   23948:	movt	r1, #25455	; 0x636f
   2394c:	eor	r0, r0, #1912602624	; 0x72000000
   23950:	eor	r1, r7, r1
   23954:	orrs	r0, r0, r1
   23958:	bne	23cf0 <main@@Base+0xdc60>
   2395c:	cmp	lr, #6
   23960:	mov	r6, r9
   23964:	blt	23c70 <main@@Base+0xdbe0>
   23968:	mov	r1, r9
   2396c:	ldr	r2, [r8, #12]
   23970:	ldrb	r0, [r1, #5]!
   23974:	cmp	r2, #0
   23978:	beq	239cc <main@@Base+0xd93c>
   2397c:	cmp	r0, #33	; 0x21
   23980:	bcc	23990 <main@@Base+0xd900>
   23984:	cmp	r0, #58	; 0x3a
   23988:	mov	r6, r9
   2398c:	bne	23c70 <main@@Base+0xdbe0>
   23990:	mov	r0, #0
   23994:	str	r0, [r8, #12]
   23998:	b	239dc <main@@Base+0xd94c>
   2399c:	cmp	r0, #34	; 0x22
   239a0:	mov	r6, r9
   239a4:	bne	23b24 <main@@Base+0xda94>
   239a8:	add	r1, r9, #7
   239ac:	sub	r0, sl, r1
   239b0:	cmp	r0, #2
   239b4:	blt	23a10 <main@@Base+0xd980>
   239b8:	ldrb	r0, [r1]
   239bc:	cmp	r0, #32
   239c0:	bls	239fc <main@@Base+0xd96c>
   239c4:	mov	r6, r1
   239c8:	b	23a28 <main@@Base+0xd998>
   239cc:	cmp	r0, #34	; 0x22
   239d0:	mov	r6, r9
   239d4:	bne	23c70 <main@@Base+0xdbe0>
   239d8:	add	r1, r9, #6
   239dc:	sub	r0, sl, r1
   239e0:	cmp	r0, #2
   239e4:	blt	23a90 <main@@Base+0xda00>
   239e8:	ldrb	r0, [r1]
   239ec:	cmp	r0, #32
   239f0:	bls	23a7c <main@@Base+0xd9ec>
   239f4:	mov	r6, r1
   239f8:	b	23aa8 <main@@Base+0xda18>
   239fc:	bne	23a10 <main@@Base+0xd980>
   23a00:	mov	r6, r1
   23a04:	ldrb	r0, [r6, #1]!
   23a08:	cmp	r0, #32
   23a0c:	bhi	23a28 <main@@Base+0xd998>
   23a10:	mov	r0, r8
   23a14:	mov	r2, sl
   23a18:	mov	r4, lr
   23a1c:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   23a20:	mov	lr, r4
   23a24:	mov	r6, r0
   23a28:	cmp	r6, sl
   23a2c:	beq	23a60 <main@@Base+0xd9d0>
   23a30:	ldrb	r0, [r6]
   23a34:	cmp	r0, #58	; 0x3a
   23a38:	bne	23a60 <main@@Base+0xd9d0>
   23a3c:	add	r1, r6, #1
   23a40:	sub	r0, sl, r1
   23a44:	cmp	r0, #2
   23a48:	blt	23b0c <main@@Base+0xda7c>
   23a4c:	ldrb	r0, [r1]
   23a50:	cmp	r0, #32
   23a54:	bls	23afc <main@@Base+0xda6c>
   23a58:	mov	r6, r1
   23a5c:	b	23b24 <main@@Base+0xda94>
   23a60:	mov	r0, r8
   23a64:	mov	r1, r6
   23a68:	mov	r2, sl
   23a6c:	mov	r3, #4
   23a70:	mov	r4, lr
   23a74:	bl	337ac <flatcc_json_parser_set_error@@Base>
   23a78:	b	23b1c <main@@Base+0xda8c>
   23a7c:	bne	23a90 <main@@Base+0xda00>
   23a80:	mov	r6, r1
   23a84:	ldrb	r0, [r6, #1]!
   23a88:	cmp	r0, #32
   23a8c:	bhi	23aa8 <main@@Base+0xda18>
   23a90:	mov	r0, r8
   23a94:	mov	r2, sl
   23a98:	mov	r4, lr
   23a9c:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   23aa0:	mov	lr, r4
   23aa4:	mov	r6, r0
   23aa8:	cmp	r6, sl
   23aac:	beq	23ae0 <main@@Base+0xda50>
   23ab0:	ldrb	r0, [r6]
   23ab4:	cmp	r0, #58	; 0x3a
   23ab8:	bne	23ae0 <main@@Base+0xda50>
   23abc:	add	r1, r6, #1
   23ac0:	sub	r0, sl, r1
   23ac4:	cmp	r0, #2
   23ac8:	blt	23c58 <main@@Base+0xdbc8>
   23acc:	ldrb	r0, [r1]
   23ad0:	cmp	r0, #32
   23ad4:	bls	23c48 <main@@Base+0xdbb8>
   23ad8:	mov	r6, r1
   23adc:	b	23c70 <main@@Base+0xdbe0>
   23ae0:	mov	r0, r8
   23ae4:	mov	r1, r6
   23ae8:	mov	r2, sl
   23aec:	mov	r3, #4
   23af0:	mov	r4, lr
   23af4:	bl	337ac <flatcc_json_parser_set_error@@Base>
   23af8:	b	23c68 <main@@Base+0xdbd8>
   23afc:	bne	23b0c <main@@Base+0xda7c>
   23b00:	ldrb	r0, [r6, #2]!
   23b04:	cmp	r0, #32
   23b08:	bhi	23b24 <main@@Base+0xda94>
   23b0c:	mov	r0, r8
   23b10:	mov	r2, sl
   23b14:	mov	r4, lr
   23b18:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   23b1c:	mov	lr, r4
   23b20:	mov	r6, r0
   23b24:	cmp	r9, r6
   23b28:	beq	23cf0 <main@@Base+0xdc60>
   23b2c:	mov	r7, #0
   23b30:	cmp	r6, sl
   23b34:	str	r7, [sp, #20]
   23b38:	str	r7, [sp, #16]
   23b3c:	strb	r7, [sp, #11]
   23b40:	str	r7, [sp, #12]
   23b44:	beq	23ba4 <main@@Base+0xdb14>
   23b48:	add	r0, sp, #16
   23b4c:	mov	r1, r6
   23b50:	mov	r2, sl
   23b54:	add	r3, sp, #12
   23b58:	str	r0, [sp]
   23b5c:	mov	r0, r8
   23b60:	bl	356c0 <flatcc_json_parser_integer@@Base>
   23b64:	cmp	r0, r6
   23b68:	beq	23bac <main@@Base+0xdb1c>
   23b6c:	ldr	r2, [sp, #12]
   23b70:	mov	r4, r0
   23b74:	ldr	r0, [sp, #16]
   23b78:	ldr	r1, [sp, #20]
   23b7c:	cmp	r2, #0
   23b80:	beq	23bb4 <main@@Base+0xdb24>
   23b84:	subs	r2, r0, #129	; 0x81
   23b88:	sbcs	r1, r1, #0
   23b8c:	bcc	23bdc <main@@Base+0xdb4c>
   23b90:	mov	r0, r8
   23b94:	mov	r1, r4
   23b98:	mov	r2, sl
   23b9c:	mov	r3, #8
   23ba0:	b	23bd0 <main@@Base+0xdb40>
   23ba4:	mov	r4, sl
   23ba8:	b	23bec <main@@Base+0xdb5c>
   23bac:	mov	r4, r6
   23bb0:	b	23bec <main@@Base+0xdb5c>
   23bb4:	subs	r2, r0, #128	; 0x80
   23bb8:	sbcs	r1, r1, #0
   23bbc:	bcc	23be4 <main@@Base+0xdb54>
   23bc0:	mov	r0, r8
   23bc4:	mov	r1, r4
   23bc8:	mov	r2, sl
   23bcc:	mov	r3, #7
   23bd0:	bl	337ac <flatcc_json_parser_set_error@@Base>
   23bd4:	mov	r4, r0
   23bd8:	b	23bec <main@@Base+0xdb5c>
   23bdc:	rsb	r7, r0, #0
   23be0:	b	23be8 <main@@Base+0xdb58>
   23be4:	mov	r7, r0
   23be8:	strb	r7, [sp, #11]
   23bec:	cmp	r6, r4
   23bf0:	bne	23c28 <main@@Base+0xdb98>
   23bf4:	movw	r3, #45536	; 0xb1e0
   23bf8:	add	r0, sp, #11
   23bfc:	mov	r1, r6
   23c00:	mov	r2, sl
   23c04:	str	r0, [sp]
   23c08:	mov	r0, r8
   23c0c:	movt	r3, #5
   23c10:	bl	2286c <main@@Base+0xc7dc>
   23c14:	mov	r4, r0
   23c18:	cmp	r0, r6
   23c1c:	cmpne	r4, sl
   23c20:	beq	2371c <main@@Base+0xd68c>
   23c24:	ldrb	r7, [sp, #11]
   23c28:	uxtb	r0, r7
   23c2c:	cmp	r0, #2
   23c30:	ldrbeq	r0, [r8, #8]
   23c34:	tsteq	r0, #2
   23c38:	beq	2421c <main@@Base+0xe18c>
   23c3c:	ldr	r0, [r8]
   23c40:	mov	r1, #1
   23c44:	b	23f0c <main@@Base+0xde7c>
   23c48:	bne	23c58 <main@@Base+0xdbc8>
   23c4c:	ldrb	r0, [r6, #2]!
   23c50:	cmp	r0, #32
   23c54:	bhi	23c70 <main@@Base+0xdbe0>
   23c58:	mov	r0, r8
   23c5c:	mov	r2, sl
   23c60:	mov	r4, lr
   23c64:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   23c68:	mov	lr, r4
   23c6c:	mov	r6, r0
   23c70:	cmp	r9, r6
   23c74:	beq	23cf0 <main@@Base+0xdc60>
   23c78:	mov	r7, #0
   23c7c:	cmp	r6, sl
   23c80:	str	r7, [sp, #20]
   23c84:	str	r7, [sp, #16]
   23c88:	strb	r7, [sp, #11]
   23c8c:	str	r7, [sp, #12]
   23c90:	beq	23d98 <main@@Base+0xdd08>
   23c94:	add	r0, sp, #16
   23c98:	mov	r1, r6
   23c9c:	mov	r2, sl
   23ca0:	add	r3, sp, #12
   23ca4:	str	r0, [sp]
   23ca8:	mov	r0, r8
   23cac:	bl	356c0 <flatcc_json_parser_integer@@Base>
   23cb0:	cmp	r0, r6
   23cb4:	beq	23dd0 <main@@Base+0xdd40>
   23cb8:	ldr	r2, [sp, #12]
   23cbc:	mov	r4, r0
   23cc0:	ldr	r0, [sp, #16]
   23cc4:	ldr	r1, [sp, #20]
   23cc8:	cmp	r2, #0
   23ccc:	beq	23e08 <main@@Base+0xdd78>
   23cd0:	subs	r2, r0, #129	; 0x81
   23cd4:	sbcs	r1, r1, #0
   23cd8:	bcc	23e30 <main@@Base+0xdda0>
   23cdc:	mov	r0, r8
   23ce0:	mov	r1, r4
   23ce4:	mov	r2, sl
   23ce8:	mov	r3, #8
   23cec:	b	23e24 <main@@Base+0xdd94>
   23cf0:	movw	r1, #12800	; 0x3200
   23cf4:	bic	r0, r7, #255	; 0xff
   23cf8:	movt	r1, #30051	; 0x7563
   23cfc:	teq	r0, r1
   23d00:	bne	23d44 <main@@Base+0xdcb4>
   23d04:	cmp	lr, #4
   23d08:	mov	r7, r9
   23d0c:	blt	23fbc <main@@Base+0xdf2c>
   23d10:	mov	r1, r9
   23d14:	ldr	r2, [r8, #12]
   23d18:	ldrb	r0, [r1, #3]!
   23d1c:	cmp	r2, #0
   23d20:	beq	23da0 <main@@Base+0xdd10>
   23d24:	cmp	r0, #33	; 0x21
   23d28:	bcc	23d38 <main@@Base+0xdca8>
   23d2c:	cmp	r0, #58	; 0x3a
   23d30:	mov	r7, r9
   23d34:	bne	23fbc <main@@Base+0xdf2c>
   23d38:	mov	r0, #0
   23d3c:	str	r0, [r8, #12]
   23d40:	b	23db0 <main@@Base+0xdd20>
   23d44:	movw	r0, #0
   23d48:	bfc	r7, #0, #16
   23d4c:	movt	r0, #30051	; 0x7563
   23d50:	teq	r7, r0
   23d54:	bne	24158 <main@@Base+0xe0c8>
   23d58:	cmp	lr, #3
   23d5c:	mov	r7, r9
   23d60:	blt	240ec <main@@Base+0xe05c>
   23d64:	mov	r1, r9
   23d68:	ldr	r2, [r8, #12]
   23d6c:	ldrb	r0, [r1, #2]!
   23d70:	cmp	r2, #0
   23d74:	beq	23dd8 <main@@Base+0xdd48>
   23d78:	cmp	r0, #33	; 0x21
   23d7c:	bcc	23d8c <main@@Base+0xdcfc>
   23d80:	cmp	r0, #58	; 0x3a
   23d84:	mov	r7, r9
   23d88:	bne	240ec <main@@Base+0xe05c>
   23d8c:	mov	r0, #0
   23d90:	str	r0, [r8, #12]
   23d94:	b	23de8 <main@@Base+0xdd58>
   23d98:	mov	r4, sl
   23d9c:	b	23eb4 <main@@Base+0xde24>
   23da0:	cmp	r0, #34	; 0x22
   23da4:	mov	r7, r9
   23da8:	bne	23fbc <main@@Base+0xdf2c>
   23dac:	add	r1, r9, #4
   23db0:	sub	r0, sl, r1
   23db4:	cmp	r0, #2
   23db8:	blt	23e4c <main@@Base+0xddbc>
   23dbc:	ldrb	r0, [r1]
   23dc0:	cmp	r0, #32
   23dc4:	bls	23e38 <main@@Base+0xdda8>
   23dc8:	mov	r7, r1
   23dcc:	b	23e5c <main@@Base+0xddcc>
   23dd0:	mov	r4, r6
   23dd4:	b	23eb4 <main@@Base+0xde24>
   23dd8:	cmp	r0, #34	; 0x22
   23ddc:	mov	r7, r9
   23de0:	bne	240ec <main@@Base+0xe05c>
   23de4:	add	r1, r9, #3
   23de8:	sub	r0, sl, r1
   23dec:	cmp	r0, #2
   23df0:	blt	23f3c <main@@Base+0xdeac>
   23df4:	ldrb	r0, [r1]
   23df8:	cmp	r0, #32
   23dfc:	bls	23f28 <main@@Base+0xde98>
   23e00:	mov	r7, r1
   23e04:	b	23f4c <main@@Base+0xdebc>
   23e08:	subs	r2, r0, #128	; 0x80
   23e0c:	sbcs	r1, r1, #0
   23e10:	bcc	23eac <main@@Base+0xde1c>
   23e14:	mov	r0, r8
   23e18:	mov	r1, r4
   23e1c:	mov	r2, sl
   23e20:	mov	r3, #7
   23e24:	bl	337ac <flatcc_json_parser_set_error@@Base>
   23e28:	mov	r4, r0
   23e2c:	b	23eb4 <main@@Base+0xde24>
   23e30:	rsb	r7, r0, #0
   23e34:	b	23eb0 <main@@Base+0xde20>
   23e38:	bne	23e4c <main@@Base+0xddbc>
   23e3c:	mov	r7, r1
   23e40:	ldrb	r0, [r7, #1]!
   23e44:	cmp	r0, #32
   23e48:	bhi	23e5c <main@@Base+0xddcc>
   23e4c:	mov	r0, r8
   23e50:	mov	r2, sl
   23e54:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   23e58:	mov	r7, r0
   23e5c:	cmp	r7, sl
   23e60:	beq	23e94 <main@@Base+0xde04>
   23e64:	ldrb	r0, [r7]
   23e68:	cmp	r0, #58	; 0x3a
   23e6c:	bne	23e94 <main@@Base+0xde04>
   23e70:	add	r1, r7, #1
   23e74:	sub	r0, sl, r1
   23e78:	cmp	r0, #2
   23e7c:	blt	23fac <main@@Base+0xdf1c>
   23e80:	ldrb	r0, [r1]
   23e84:	cmp	r0, #32
   23e88:	bls	23f9c <main@@Base+0xdf0c>
   23e8c:	mov	r7, r1
   23e90:	b	23fbc <main@@Base+0xdf2c>
   23e94:	mov	r0, r8
   23e98:	mov	r1, r7
   23e9c:	mov	r2, sl
   23ea0:	mov	r3, #4
   23ea4:	bl	337ac <flatcc_json_parser_set_error@@Base>
   23ea8:	b	23fb8 <main@@Base+0xdf28>
   23eac:	mov	r7, r0
   23eb0:	strb	r7, [sp, #11]
   23eb4:	cmp	r6, r4
   23eb8:	bne	23ef0 <main@@Base+0xde60>
   23ebc:	movw	r3, #45552	; 0xb1f0
   23ec0:	add	r0, sp, #11
   23ec4:	mov	r1, r6
   23ec8:	mov	r2, sl
   23ecc:	str	r0, [sp]
   23ed0:	mov	r0, r8
   23ed4:	movt	r3, #5
   23ed8:	bl	2286c <main@@Base+0xc7dc>
   23edc:	mov	r4, r0
   23ee0:	cmp	r0, r6
   23ee4:	cmpne	r4, sl
   23ee8:	beq	2371c <main@@Base+0xd68c>
   23eec:	ldrb	r7, [sp, #11]
   23ef0:	uxtb	r0, r7
   23ef4:	cmp	r0, #2
   23ef8:	ldrbeq	r0, [r8, #8]
   23efc:	tsteq	r0, #2
   23f00:	beq	2421c <main@@Base+0xe18c>
   23f04:	ldr	r0, [r8]
   23f08:	mov	r1, #0
   23f0c:	mov	r2, #1
   23f10:	mov	r3, #1
   23f14:	bl	30b5c <flatcc_builder_table_add@@Base>
   23f18:	cmp	r0, #0
   23f1c:	beq	2371c <main@@Base+0xd68c>
   23f20:	strb	r7, [r0]
   23f24:	b	2421c <main@@Base+0xe18c>
   23f28:	bne	23f3c <main@@Base+0xdeac>
   23f2c:	mov	r7, r1
   23f30:	ldrb	r0, [r7, #1]!
   23f34:	cmp	r0, #32
   23f38:	bhi	23f4c <main@@Base+0xdebc>
   23f3c:	mov	r0, r8
   23f40:	mov	r2, sl
   23f44:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   23f48:	mov	r7, r0
   23f4c:	cmp	r7, sl
   23f50:	beq	23f84 <main@@Base+0xdef4>
   23f54:	ldrb	r0, [r7]
   23f58:	cmp	r0, #58	; 0x3a
   23f5c:	bne	23f84 <main@@Base+0xdef4>
   23f60:	add	r1, r7, #1
   23f64:	sub	r0, sl, r1
   23f68:	cmp	r0, #2
   23f6c:	blt	240dc <main@@Base+0xe04c>
   23f70:	ldrb	r0, [r1]
   23f74:	cmp	r0, #32
   23f78:	bls	240cc <main@@Base+0xe03c>
   23f7c:	mov	r7, r1
   23f80:	b	240ec <main@@Base+0xe05c>
   23f84:	mov	r0, r8
   23f88:	mov	r1, r7
   23f8c:	mov	r2, sl
   23f90:	mov	r3, #4
   23f94:	bl	337ac <flatcc_json_parser_set_error@@Base>
   23f98:	b	240e8 <main@@Base+0xe058>
   23f9c:	bne	23fac <main@@Base+0xdf1c>
   23fa0:	ldrb	r0, [r7, #2]!
   23fa4:	cmp	r0, #32
   23fa8:	bhi	23fbc <main@@Base+0xdf2c>
   23fac:	mov	r0, r8
   23fb0:	mov	r2, sl
   23fb4:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   23fb8:	mov	r7, r0
   23fbc:	cmp	r9, r7
   23fc0:	beq	24158 <main@@Base+0xe0c8>
   23fc4:	mov	r6, #0
   23fc8:	cmp	r7, sl
   23fcc:	str	r6, [sp, #20]
   23fd0:	str	r6, [sp, #16]
   23fd4:	strb	r6, [sp, #11]
   23fd8:	str	r6, [sp, #12]
   23fdc:	beq	24028 <main@@Base+0xdf98>
   23fe0:	add	r0, sp, #16
   23fe4:	mov	r1, r7
   23fe8:	mov	r2, sl
   23fec:	add	r3, sp, #12
   23ff0:	str	r0, [sp]
   23ff4:	mov	r0, r8
   23ff8:	bl	356c0 <flatcc_json_parser_integer@@Base>
   23ffc:	cmp	r0, r7
   24000:	beq	24030 <main@@Base+0xdfa0>
   24004:	mov	r4, r0
   24008:	ldr	r0, [sp, #12]
   2400c:	cmp	r0, #0
   24010:	beq	24038 <main@@Base+0xdfa8>
   24014:	mov	r0, r8
   24018:	mov	r1, r4
   2401c:	mov	r2, sl
   24020:	mov	r3, #8
   24024:	b	2405c <main@@Base+0xdfcc>
   24028:	mov	r4, sl
   2402c:	b	24064 <main@@Base+0xdfd4>
   24030:	mov	r4, r7
   24034:	b	24064 <main@@Base+0xdfd4>
   24038:	ldr	r0, [sp, #16]
   2403c:	ldr	r1, [sp, #20]
   24040:	subs	r2, r0, #256	; 0x100
   24044:	sbcs	r1, r1, #0
   24048:	bcc	240c0 <main@@Base+0xe030>
   2404c:	mov	r0, r8
   24050:	mov	r1, r4
   24054:	mov	r2, sl
   24058:	mov	r3, #7
   2405c:	bl	337ac <flatcc_json_parser_set_error@@Base>
   24060:	mov	r4, r0
   24064:	cmp	r7, r4
   24068:	bne	240a0 <main@@Base+0xe010>
   2406c:	movw	r3, #45568	; 0xb200
   24070:	add	r0, sp, #11
   24074:	mov	r1, r7
   24078:	mov	r2, sl
   2407c:	str	r0, [sp]
   24080:	mov	r0, r8
   24084:	movt	r3, #5
   24088:	bl	22a6c <main@@Base+0xc9dc>
   2408c:	mov	r4, r0
   24090:	cmp	r0, r7
   24094:	cmpne	r4, sl
   24098:	beq	2371c <main@@Base+0xd68c>
   2409c:	ldrb	r6, [sp, #11]
   240a0:	uxtb	r0, r6
   240a4:	cmp	r0, #2
   240a8:	ldrbeq	r0, [r8, #8]
   240ac:	tsteq	r0, #2
   240b0:	beq	2421c <main@@Base+0xe18c>
   240b4:	ldr	r0, [r8]
   240b8:	mov	r1, #3
   240bc:	b	24204 <main@@Base+0xe174>
   240c0:	mov	r6, r0
   240c4:	strb	r0, [sp, #11]
   240c8:	b	24064 <main@@Base+0xdfd4>
   240cc:	bne	240dc <main@@Base+0xe04c>
   240d0:	ldrb	r0, [r7, #2]!
   240d4:	cmp	r0, #32
   240d8:	bhi	240ec <main@@Base+0xe05c>
   240dc:	mov	r0, r8
   240e0:	mov	r2, sl
   240e4:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   240e8:	mov	r7, r0
   240ec:	cmp	r9, r7
   240f0:	beq	24158 <main@@Base+0xe0c8>
   240f4:	mov	r6, #0
   240f8:	cmp	r7, sl
   240fc:	str	r6, [sp, #20]
   24100:	str	r6, [sp, #16]
   24104:	strb	r6, [sp, #11]
   24108:	str	r6, [sp, #12]
   2410c:	beq	24170 <main@@Base+0xe0e0>
   24110:	add	r0, sp, #16
   24114:	mov	r1, r7
   24118:	mov	r2, sl
   2411c:	add	r3, sp, #12
   24120:	str	r0, [sp]
   24124:	mov	r0, r8
   24128:	bl	356c0 <flatcc_json_parser_integer@@Base>
   2412c:	cmp	r0, r7
   24130:	beq	24178 <main@@Base+0xe0e8>
   24134:	mov	r4, r0
   24138:	ldr	r0, [sp, #12]
   2413c:	cmp	r0, #0
   24140:	beq	24180 <main@@Base+0xe0f0>
   24144:	mov	r0, r8
   24148:	mov	r1, r4
   2414c:	mov	r2, sl
   24150:	mov	r3, #8
   24154:	b	241a4 <main@@Base+0xe114>
   24158:	mov	r0, r8
   2415c:	mov	r1, r9
   24160:	mov	r2, sl
   24164:	bl	33ecc <flatcc_json_parser_unmatched_symbol@@Base>
   24168:	mov	r4, r0
   2416c:	b	2421c <main@@Base+0xe18c>
   24170:	mov	r4, sl
   24174:	b	241ac <main@@Base+0xe11c>
   24178:	mov	r4, r7
   2417c:	b	241ac <main@@Base+0xe11c>
   24180:	ldr	r0, [sp, #16]
   24184:	ldr	r1, [sp, #20]
   24188:	subs	r2, r0, #256	; 0x100
   2418c:	sbcs	r1, r1, #0
   24190:	bcc	242d4 <main@@Base+0xe244>
   24194:	mov	r0, r8
   24198:	mov	r1, r4
   2419c:	mov	r2, sl
   241a0:	mov	r3, #7
   241a4:	bl	337ac <flatcc_json_parser_set_error@@Base>
   241a8:	mov	r4, r0
   241ac:	cmp	r7, r4
   241b0:	bne	241e8 <main@@Base+0xe158>
   241b4:	movw	r3, #45580	; 0xb20c
   241b8:	add	r0, sp, #11
   241bc:	mov	r1, r7
   241c0:	mov	r2, sl
   241c4:	str	r0, [sp]
   241c8:	mov	r0, r8
   241cc:	movt	r3, #5
   241d0:	bl	22a6c <main@@Base+0xc9dc>
   241d4:	mov	r4, r0
   241d8:	cmp	r0, r7
   241dc:	cmpne	r4, sl
   241e0:	beq	2371c <main@@Base+0xd68c>
   241e4:	ldrb	r6, [sp, #11]
   241e8:	uxtb	r0, r6
   241ec:	cmp	r0, #2
   241f0:	ldrbeq	r0, [r8, #8]
   241f4:	tsteq	r0, #2
   241f8:	beq	2421c <main@@Base+0xe18c>
   241fc:	ldr	r0, [r8]
   24200:	mov	r1, #2
   24204:	mov	r2, #1
   24208:	mov	r3, #1
   2420c:	bl	30b5c <flatcc_builder_table_add@@Base>
   24210:	cmp	r0, #0
   24214:	beq	2371c <main@@Base+0xd68c>
   24218:	strb	r6, [r0]
   2421c:	sub	r0, sl, r4
   24220:	cmp	r0, #2
   24224:	blt	24250 <main@@Base+0xe1c0>
   24228:	ldrb	r0, [r4]
   2422c:	cmp	r0, #32
   24230:	bls	2423c <main@@Base+0xe1ac>
   24234:	mov	r2, r4
   24238:	b	24264 <main@@Base+0xe1d4>
   2423c:	bne	24250 <main@@Base+0xe1c0>
   24240:	mov	r2, r4
   24244:	ldrb	r0, [r2, #1]!
   24248:	cmp	r0, #32
   2424c:	bhi	24264 <main@@Base+0xe1d4>
   24250:	mov	r0, r8
   24254:	mov	r1, r4
   24258:	mov	r2, sl
   2425c:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   24260:	mov	r2, r0
   24264:	cmp	r2, sl
   24268:	beq	2446c <main@@Base+0xe3dc>
   2426c:	ldrb	r0, [r2]
   24270:	cmp	r0, #44	; 0x2c
   24274:	bne	244c8 <main@@Base+0xe438>
   24278:	add	r1, r2, #1
   2427c:	sub	r0, sl, r1
   24280:	cmp	r0, #2
   24284:	blt	242ac <main@@Base+0xe21c>
   24288:	ldrb	r0, [r1]
   2428c:	cmp	r0, #32
   24290:	bls	2429c <main@@Base+0xe20c>
   24294:	mov	r2, r1
   24298:	b	242bc <main@@Base+0xe22c>
   2429c:	bne	242ac <main@@Base+0xe21c>
   242a0:	ldrb	r0, [r2, #2]!
   242a4:	cmp	r0, #32
   242a8:	bhi	242bc <main@@Base+0xe22c>
   242ac:	mov	r0, r8
   242b0:	mov	r2, sl
   242b4:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   242b8:	mov	r2, r0
   242bc:	cmp	r2, sl
   242c0:	beq	24474 <main@@Base+0xe3e4>
   242c4:	ldrb	r0, [r2]
   242c8:	cmp	r0, #125	; 0x7d
   242cc:	bne	237e4 <main@@Base+0xd754>
   242d0:	b	244d0 <main@@Base+0xe440>
   242d4:	mov	r6, r0
   242d8:	strb	r0, [sp, #11]
   242dc:	b	241ac <main@@Base+0xe11c>
   242e0:	bne	242f0 <main@@Base+0xe260>
   242e4:	ldrb	r0, [r4, #2]!
   242e8:	cmp	r0, #32
   242ec:	bhi	24300 <main@@Base+0xe270>
   242f0:	mov	r0, r8
   242f4:	mov	r2, sl
   242f8:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   242fc:	mov	r4, r0
   24300:	cmp	r4, sl
   24304:	mov	r3, sl
   24308:	beq	2434c <main@@Base+0xe2bc>
   2430c:	ldrb	r0, [r4]
   24310:	cmp	r0, #125	; 0x7d
   24314:	bne	24348 <main@@Base+0xe2b8>
   24318:	add	r1, r4, #1
   2431c:	sub	r0, sl, r1
   24320:	cmp	r0, #2
   24324:	blt	2451c <main@@Base+0xe48c>
   24328:	ldrb	r0, [r1]
   2432c:	cmp	r0, #32
   24330:	bhi	244ec <main@@Base+0xe45c>
   24334:	bne	2451c <main@@Base+0xe48c>
   24338:	ldrb	r0, [r4, #2]!
   2433c:	cmp	r0, #32
   24340:	bhi	23710 <main@@Base+0xd680>
   24344:	b	2451c <main@@Base+0xe48c>
   24348:	mov	r3, r4
   2434c:	mov	r4, #0
   24350:	mov	r7, #1
   24354:	cmp	r3, sl
   24358:	mov	r1, sl
   2435c:	beq	243a4 <main@@Base+0xe314>
   24360:	ldrb	r0, [r3]
   24364:	cmp	r0, #46	; 0x2e
   24368:	beq	24380 <main@@Base+0xe2f0>
   2436c:	cmp	r0, #34	; 0x22
   24370:	bne	2439c <main@@Base+0xe30c>
   24374:	str	r4, [r8, #12]
   24378:	add	r1, r3, #1
   2437c:	b	243a4 <main@@Base+0xe314>
   24380:	mov	r1, r3
   24384:	mov	r0, r8
   24388:	mov	r2, sl
   2438c:	mov	r3, #5
   24390:	bl	337ac <flatcc_json_parser_set_error@@Base>
   24394:	mov	r1, r0
   24398:	b	243a4 <main@@Base+0xe314>
   2439c:	mov	r1, r3
   243a0:	str	r7, [r8, #12]
   243a4:	mov	r0, r8
   243a8:	mov	r2, sl
   243ac:	bl	33ecc <flatcc_json_parser_unmatched_symbol@@Base>
   243b0:	mov	r2, r0
   243b4:	sub	r0, sl, r0
   243b8:	cmp	r0, #2
   243bc:	blt	243e8 <main@@Base+0xe358>
   243c0:	ldrb	r0, [r2]
   243c4:	cmp	r0, #32
   243c8:	bls	243d4 <main@@Base+0xe344>
   243cc:	mov	r3, r2
   243d0:	b	243fc <main@@Base+0xe36c>
   243d4:	bne	243e8 <main@@Base+0xe358>
   243d8:	mov	r3, r2
   243dc:	ldrb	r0, [r3, #1]!
   243e0:	cmp	r0, #32
   243e4:	bhi	243fc <main@@Base+0xe36c>
   243e8:	mov	r1, r2
   243ec:	mov	r0, r8
   243f0:	mov	r2, sl
   243f4:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   243f8:	mov	r3, r0
   243fc:	cmp	r3, sl
   24400:	beq	2446c <main@@Base+0xe3dc>
   24404:	ldrb	r0, [r3]
   24408:	cmp	r0, #44	; 0x2c
   2440c:	bne	24480 <main@@Base+0xe3f0>
   24410:	add	r1, r3, #1
   24414:	sub	r0, sl, r1
   24418:	cmp	r0, #2
   2441c:	blt	24444 <main@@Base+0xe3b4>
   24420:	ldrb	r0, [r1]
   24424:	cmp	r0, #32
   24428:	bls	24434 <main@@Base+0xe3a4>
   2442c:	mov	r3, r1
   24430:	b	24454 <main@@Base+0xe3c4>
   24434:	bne	24444 <main@@Base+0xe3b4>
   24438:	ldrb	r0, [r3, #2]!
   2443c:	cmp	r0, #32
   24440:	bhi	24454 <main@@Base+0xe3c4>
   24444:	mov	r0, r8
   24448:	mov	r2, sl
   2444c:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   24450:	mov	r3, r0
   24454:	cmp	r3, sl
   24458:	beq	24474 <main@@Base+0xe3e4>
   2445c:	ldrb	r0, [r3]
   24460:	cmp	r0, #125	; 0x7d
   24464:	bne	24354 <main@@Base+0xe2c4>
   24468:	b	24488 <main@@Base+0xe3f8>
   2446c:	mov	r4, sl
   24470:	b	23710 <main@@Base+0xd680>
   24474:	mov	r0, r8
   24478:	mov	r1, sl
   2447c:	b	244fc <main@@Base+0xe46c>
   24480:	cmp	r0, #125	; 0x7d
   24484:	bne	244bc <main@@Base+0xe42c>
   24488:	add	r1, r3, #1
   2448c:	sub	r0, sl, r1
   24490:	cmp	r0, #2
   24494:	blt	2451c <main@@Base+0xe48c>
   24498:	ldrb	r0, [r1]
   2449c:	cmp	r0, #32
   244a0:	bhi	244ec <main@@Base+0xe45c>
   244a4:	bne	2451c <main@@Base+0xe48c>
   244a8:	ldrb	r0, [r3, #2]!
   244ac:	cmp	r0, #32
   244b0:	mov	r4, r3
   244b4:	bhi	23710 <main@@Base+0xd680>
   244b8:	b	2451c <main@@Base+0xe48c>
   244bc:	mov	r0, r8
   244c0:	mov	r1, r3
   244c4:	b	244fc <main@@Base+0xe46c>
   244c8:	cmp	r0, #125	; 0x7d
   244cc:	bne	244f4 <main@@Base+0xe464>
   244d0:	add	r1, r2, #1
   244d4:	sub	r0, sl, r1
   244d8:	cmp	r0, #2
   244dc:	blt	2451c <main@@Base+0xe48c>
   244e0:	ldrb	r0, [r1]
   244e4:	cmp	r0, #32
   244e8:	bls	24508 <main@@Base+0xe478>
   244ec:	mov	r4, r1
   244f0:	b	23710 <main@@Base+0xd680>
   244f4:	mov	r0, r8
   244f8:	mov	r1, r2
   244fc:	mov	r2, sl
   24500:	mov	r3, #10
   24504:	b	23708 <main@@Base+0xd678>
   24508:	bne	2451c <main@@Base+0xe48c>
   2450c:	ldrb	r0, [r2, #2]!
   24510:	cmp	r0, #32
   24514:	mov	r4, r2
   24518:	bhi	23710 <main@@Base+0xd680>
   2451c:	mov	r0, r8
   24520:	mov	r2, sl
   24524:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   24528:	b	2370c <main@@Base+0xd67c>
   2452c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24530:	add	fp, sp, #28
   24534:	sub	sp, sp, #20
   24538:	mov	sl, r1
   2453c:	sub	r1, r2, r1
   24540:	cmp	r1, #8
   24544:	movcs	r1, #8
   24548:	and	r1, r1, #15
   2454c:	sub	r5, r1, #1
   24550:	cmp	r5, #7
   24554:	bhi	24758 <main@@Base+0xe6c8>
   24558:	str	r2, [sp, #16]
   2455c:	str	r0, [sp, #12]
   24560:	add	r0, pc, #36	; 0x24
   24564:	mov	lr, r3
   24568:	mov	r8, #0
   2456c:	mov	ip, #0
   24570:	mov	r2, #0
   24574:	mov	r1, #0
   24578:	mov	r3, #0
   2457c:	mov	r7, #0
   24580:	mov	r6, #0
   24584:	mov	r4, #0
   24588:	ldr	pc, [r0, r5, lsl #2]
   2458c:	strdeq	r4, [r2], -r0
   24590:	andeq	r4, r2, r8, ror #11
   24594:	andeq	r4, r2, r0, ror #11
   24598:	ldrdeq	r4, [r2], -r8
   2459c:	andeq	r4, r2, ip, asr #11
   245a0:	andeq	r4, r2, r0, asr #11
   245a4:			; <UNDEFINED> instruction: 0x000245b0
   245a8:	andeq	r4, r2, ip, lsr #11
   245ac:	ldrb	ip, [sl, #7]
   245b0:	ldrb	r0, [sl, #6]
   245b4:	mov	r2, r8
   245b8:	orr	r0, ip, r0, lsl #8
   245bc:	mov	r8, r0
   245c0:	ldrb	r0, [sl, #5]
   245c4:	mov	r1, r2
   245c8:	orr	r8, r8, r0, lsl #16
   245cc:	ldrb	r0, [sl, #4]
   245d0:	mov	r3, r1
   245d4:	orr	r8, r8, r0, lsl #24
   245d8:	ldrb	r0, [sl, #3]
   245dc:	orr	r7, r0, r3
   245e0:	ldrb	r0, [sl, #2]
   245e4:	orr	r6, r7, r0, lsl #8
   245e8:	ldrb	r0, [sl, #1]
   245ec:	orr	r4, r6, r0, lsl #16
   245f0:	ldrb	r0, [sl]
   245f4:	ldr	r7, [fp, #12]
   245f8:	ldr	r5, [fp, #8]
   245fc:	movw	r1, #28275	; 0x6e73
   24600:	movt	r1, #19823	; 0x4d6f
   24604:	orr	r9, r4, r0, lsl #24
   24608:	movw	r0, #29184	; 0x7200
   2460c:	movt	r0, #29797	; 0x7465
   24610:	subs	r2, r8, r0
   24614:	sbcs	r2, r9, r1
   24618:	bcs	24660 <main@@Base+0xe5d0>
   2461c:	movw	r1, #29696	; 0x7400
   24620:	bic	r0, r9, #255	; 0xff
   24624:	movt	r1, #16748	; 0x416c
   24628:	teq	r0, r1
   2462c:	bne	24758 <main@@Base+0xe6c8>
   24630:	ldr	r0, [sp, #12]
   24634:	ldr	r2, [sp, #16]
   24638:	mov	r1, sl
   2463c:	mov	r3, #3
   24640:	mov	r4, lr
   24644:	str	r7, [sp]
   24648:	bl	33d04 <flatcc_json_parser_match_constant@@Base>
   2464c:	cmp	r0, sl
   24650:	beq	24758 <main@@Base+0xe6c8>
   24654:	mov	r1, #0
   24658:	mov	r2, #4
   2465c:	b	246a0 <main@@Base+0xe610>
   24660:	add	r2, r0, #50	; 0x32
   24664:	eor	r1, r9, r1
   24668:	eor	r2, r8, r2
   2466c:	orrs	r2, r2, r1
   24670:	bne	246b0 <main@@Base+0xe620>
   24674:	ldr	r0, [sp, #12]
   24678:	ldr	r2, [sp, #16]
   2467c:	mov	r1, sl
   24680:	mov	r3, #8
   24684:	mov	r4, lr
   24688:	str	r7, [sp]
   2468c:	bl	33d04 <flatcc_json_parser_match_constant@@Base>
   24690:	cmp	r0, sl
   24694:	beq	24758 <main@@Base+0xe6c8>
   24698:	mov	r1, #0
   2469c:	mov	r2, #3
   246a0:	str	r2, [r5]
   246a4:	str	r1, [r5, #4]
   246a8:	str	r1, [r4]
   246ac:	b	24754 <main@@Base+0xe6c4>
   246b0:	ldr	r5, [sp, #16]
   246b4:	ldr	r6, [sp, #12]
   246b8:	bic	r2, r8, #255	; 0xff
   246bc:	eor	r0, r2, r0
   246c0:	orrs	r0, r0, r1
   246c4:	bne	24708 <main@@Base+0xe678>
   246c8:	mov	r0, r6
   246cc:	mov	r1, sl
   246d0:	mov	r2, r5
   246d4:	mov	r3, #7
   246d8:	str	r7, [sp]
   246dc:	mov	r4, lr
   246e0:	bl	33d04 <flatcc_json_parser_match_constant@@Base>
   246e4:	mov	lr, r4
   246e8:	cmp	r0, sl
   246ec:	beq	24708 <main@@Base+0xe678>
   246f0:	ldr	r3, [fp, #8]
   246f4:	mov	r1, #0
   246f8:	mov	r2, #1
   246fc:	str	r2, [r3]
   24700:	str	r1, [r3, #4]
   24704:	b	24750 <main@@Base+0xe6c0>
   24708:	movw	r0, #20037	; 0x4e45
   2470c:	movt	r0, #20047	; 0x4e4f
   24710:	teq	r9, r0
   24714:	bne	24764 <main@@Base+0xe6d4>
   24718:	mov	r0, r6
   2471c:	mov	r1, sl
   24720:	mov	r2, r5
   24724:	mov	r3, #4
   24728:	str	r7, [sp]
   2472c:	mov	r4, lr
   24730:	bl	33d04 <flatcc_json_parser_match_constant@@Base>
   24734:	mov	lr, r4
   24738:	cmp	r0, sl
   2473c:	beq	24764 <main@@Base+0xe6d4>
   24740:	ldr	r2, [fp, #8]
   24744:	mov	r1, #0
   24748:	str	r1, [r2]
   2474c:	str	r1, [r2, #4]
   24750:	str	r1, [lr]
   24754:	mov	sl, r0
   24758:	mov	r0, sl
   2475c:	sub	sp, fp, #28
   24760:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24764:	movw	r0, #28016	; 0x6d70
   24768:	movw	r1, #29556	; 0x7374
   2476c:	movt	r0, #21353	; 0x5369
   24770:	movt	r1, #21605	; 0x5465
   24774:	eor	r0, r8, r0
   24778:	eor	r1, r9, r1
   2477c:	orrs	r0, r0, r1
   24780:	bne	24758 <main@@Base+0xe6c8>
   24784:	str	lr, [sp, #8]
   24788:	add	lr, sl, #8
   2478c:	sub	r0, r5, lr
   24790:	cmp	r0, #8
   24794:	movcs	r0, #8
   24798:	and	r0, r0, #15
   2479c:	sub	r5, r0, #1
   247a0:	cmp	r5, #7
   247a4:	bhi	24758 <main@@Base+0xe6c8>
   247a8:	add	r1, pc, #32
   247ac:	mov	r9, #0
   247b0:	mov	ip, #0
   247b4:	mov	r8, #0
   247b8:	mov	r2, #0
   247bc:	mov	r3, #0
   247c0:	mov	r0, #0
   247c4:	mov	r4, #0
   247c8:	mov	r6, #0
   247cc:	ldr	pc, [r1, r5, lsl #2]
   247d0:	andeq	r4, r2, r4, lsr r8
   247d4:	andeq	r4, r2, ip, lsr #16
   247d8:	andeq	r4, r2, r4, lsr #16
   247dc:	andeq	r4, r2, ip, lsl r8
   247e0:	andeq	r4, r2, r0, lsl r8
   247e4:	andeq	r4, r2, r4, lsl #16
   247e8:	strdeq	r4, [r2], -r4	; <UNPREDICTABLE>
   247ec:	strdeq	r4, [r2], -r0
   247f0:	ldrb	ip, [sl, #15]
   247f4:	ldrb	r0, [sl, #14]
   247f8:	mov	r8, r9
   247fc:	orr	r0, ip, r0, lsl #8
   24800:	mov	r9, r0
   24804:	ldrb	r0, [sl, #13]
   24808:	mov	r2, r8
   2480c:	orr	r9, r9, r0, lsl #16
   24810:	ldrb	r0, [sl, #12]
   24814:	mov	r3, r2
   24818:	orr	r9, r9, r0, lsl #24
   2481c:	ldrb	r0, [sl, #11]
   24820:	orr	r0, r0, r3
   24824:	ldrb	r1, [sl, #10]
   24828:	orr	r4, r0, r1, lsl #8
   2482c:	ldrb	r0, [sl, #9]
   24830:	orr	r6, r4, r0, lsl #16
   24834:	ldrb	r1, [lr]
   24838:	movw	r0, #25943	; 0x6557
   2483c:	movw	r2, #21601	; 0x5461
   24840:	movt	r0, #25196	; 0x626c
   24844:	movt	r2, #27749	; 0x6c65
   24848:	eor	r0, r9, r0
   2484c:	orr	r1, r6, r1, lsl #24
   24850:	eor	r1, r1, r2
   24854:	orrs	r0, r0, r1
   24858:	bne	24758 <main@@Base+0xe6c8>
   2485c:	ldr	r0, [sp, #16]
   24860:	add	r9, sl, #16
   24864:	sub	r0, r0, r9
   24868:	cmp	r0, #8
   2486c:	movcs	r0, #8
   24870:	and	r0, r0, #15
   24874:	sub	r3, r0, #1
   24878:	cmp	r3, #7
   2487c:	bhi	24758 <main@@Base+0xe6c8>
   24880:	add	r1, pc, #28
   24884:	mov	r0, #0
   24888:	mov	ip, #0
   2488c:	mov	lr, #0
   24890:	mov	r2, #0
   24894:	mov	r5, #0
   24898:	mov	r6, #0
   2489c:	mov	r4, #0
   248a0:	ldr	pc, [r1, r3, lsl #2]
   248a4:	andeq	r4, r2, r0, lsl #18
   248a8:	strdeq	r4, [r2], -r8
   248ac:	strdeq	r4, [r2], -r0
   248b0:	andeq	r4, r2, r8, ror #17
   248b4:	ldrdeq	r4, [r2], -ip
   248b8:	andeq	r4, r2, ip, asr #17
   248bc:	andeq	r4, r2, r4, asr #17
   248c0:	andeq	r4, r2, r4, asr #17
   248c4:	ldrb	r1, [sl, #22]
   248c8:	lsl	ip, r1, #8
   248cc:	ldrb	r1, [sl, #21]
   248d0:	mov	lr, r0
   248d4:	orr	r1, ip, r1, lsl #16
   248d8:	mov	r0, r1
   248dc:	ldrb	r1, [sl, #20]
   248e0:	mov	r2, lr
   248e4:	orr	r0, r0, r1, lsl #24
   248e8:	ldrb	r1, [sl, #19]
   248ec:	orr	r5, r1, r2
   248f0:	ldrb	r1, [sl, #18]
   248f4:	orr	r6, r5, r1, lsl #8
   248f8:	ldrb	r1, [sl, #17]
   248fc:	orr	r4, r6, r1, lsl #16
   24900:	movw	r1, #27904	; 0x6d00
   24904:	movw	r2, #26693	; 0x6845
   24908:	movt	r1, #28277	; 0x6e75
   2490c:	movt	r2, #26996	; 0x6974
   24910:	eor	r0, r0, r1
   24914:	ldrb	r1, [r9]
   24918:	orr	r1, r4, r1, lsl #24
   2491c:	eor	r1, r1, r2
   24920:	orrs	r0, r0, r1
   24924:	bne	24758 <main@@Base+0xe6c8>
   24928:	ldr	r0, [sp, #12]
   2492c:	ldr	r2, [sp, #16]
   24930:	mov	r1, r9
   24934:	mov	r3, #7
   24938:	str	r7, [sp]
   2493c:	bl	33d04 <flatcc_json_parser_match_constant@@Base>
   24940:	ldr	r3, [fp, #8]
   24944:	cmp	r0, r9
   24948:	beq	24758 <main@@Base+0xe6c8>
   2494c:	mov	r2, #2
   24950:	mov	r1, #0
   24954:	str	r2, [r3]
   24958:	str	r1, [r3, #4]
   2495c:	ldr	r2, [sp, #8]
   24960:	str	r1, [r2]
   24964:	b	24754 <main@@Base+0xe6c4>
   24968:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2496c:	add	fp, sp, #28
   24970:	sub	sp, sp, #44	; 0x2c
   24974:	mov	r7, r2
   24978:	ldr	r2, [fp, #8]
   2497c:	mov	r5, r0
   24980:	mov	r0, #0
   24984:	mov	r8, r3
   24988:	cmp	r1, r7
   2498c:	strb	r0, [r2]
   24990:	beq	249d4 <main@@Base+0xe944>
   24994:	ldrb	r0, [r1]
   24998:	cmp	r0, #46	; 0x2e
   2499c:	beq	249b4 <main@@Base+0xe924>
   249a0:	cmp	r0, #34	; 0x22
   249a4:	bne	249cc <main@@Base+0xe93c>
   249a8:	mov	r0, #0
   249ac:	add	r1, r1, #1
   249b0:	b	249d0 <main@@Base+0xe940>
   249b4:	mov	r0, r5
   249b8:	mov	r2, r7
   249bc:	mov	r3, #5
   249c0:	bl	337ac <flatcc_json_parser_set_error@@Base>
   249c4:	mov	r1, r0
   249c8:	b	249d4 <main@@Base+0xe944>
   249cc:	mov	r0, #1
   249d0:	str	r0, [r5, #12]
   249d4:	ldr	r0, [r5, #12]
   249d8:	cmp	r0, #0
   249dc:	beq	249e8 <main@@Base+0xe958>
   249e0:	mov	r6, r1
   249e4:	b	24a24 <main@@Base+0xe994>
   249e8:	sub	r0, r7, r1
   249ec:	cmp	r0, #2
   249f0:	blt	24a14 <main@@Base+0xe984>
   249f4:	ldrb	r0, [r1]
   249f8:	cmp	r0, #32
   249fc:	bhi	249e0 <main@@Base+0xe950>
   24a00:	bne	24a14 <main@@Base+0xe984>
   24a04:	mov	r6, r1
   24a08:	ldrb	r0, [r6, #1]!
   24a0c:	cmp	r0, #32
   24a10:	bhi	24a24 <main@@Base+0xe994>
   24a14:	mov	r0, r5
   24a18:	mov	r2, r7
   24a1c:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   24a20:	mov	r6, r0
   24a24:	cmp	r6, r7
   24a28:	beq	24b0c <main@@Base+0xea7c>
   24a2c:	add	r0, r8, #4
   24a30:	mov	r1, #0
   24a34:	add	sl, sp, #32
   24a38:	add	r9, sp, #28
   24a3c:	str	r8, [sp, #16]
   24a40:	str	r1, [sp, #20]
   24a44:	str	r0, [sp, #12]
   24a48:	ldr	r4, [r8]
   24a4c:	mov	r8, r0
   24a50:	add	r0, sp, #24
   24a54:	mov	r1, r6
   24a58:	mov	r2, r7
   24a5c:	mov	r3, r9
   24a60:	str	sl, [sp]
   24a64:	str	r0, [sp, #4]
   24a68:	mov	r0, r5
   24a6c:	blx	r4
   24a70:	cmp	r0, r7
   24a74:	beq	24b0c <main@@Base+0xea7c>
   24a78:	mov	r4, r0
   24a7c:	cmp	r0, r6
   24a80:	bne	24a94 <main@@Base+0xea04>
   24a84:	ldr	r4, [r8], #4
   24a88:	cmp	r4, #0
   24a8c:	bne	24a50 <main@@Base+0xe9c0>
   24a90:	b	24b14 <main@@Base+0xea84>
   24a94:	ldr	r0, [sp, #28]
   24a98:	cmp	r0, #0
   24a9c:	beq	24ab8 <main@@Base+0xea28>
   24aa0:	mov	r0, r5
   24aa4:	mov	r1, r4
   24aa8:	mov	r2, r7
   24aac:	mov	r3, #8
   24ab0:	bl	337ac <flatcc_json_parser_set_error@@Base>
   24ab4:	b	24ad0 <main@@Base+0xea40>
   24ab8:	ldr	r0, [sp, #32]
   24abc:	ldr	r1, [sp, #36]	; 0x24
   24ac0:	orrs	r0, r0, r1
   24ac4:	movwne	r0, #1
   24ac8:	str	r0, [sp, #20]
   24acc:	mov	r0, r4
   24ad0:	ldr	r8, [sp, #16]
   24ad4:	cmp	r0, r7
   24ad8:	beq	24b0c <main@@Base+0xea7c>
   24adc:	ldr	r0, [fp, #8]
   24ae0:	ldr	r2, [sp, #20]
   24ae4:	mov	r6, r4
   24ae8:	mov	r1, r0
   24aec:	ldrb	r0, [r0]
   24af0:	add	r0, r0, r2
   24af4:	strb	r0, [r1]
   24af8:	ldr	r0, [sp, #24]
   24afc:	cmp	r0, #0
   24b00:	ldr	r0, [sp, #12]
   24b04:	bne	24a48 <main@@Base+0xe9b8>
   24b08:	b	24b2c <main@@Base+0xea9c>
   24b0c:	mov	r4, r7
   24b10:	b	24b2c <main@@Base+0xea9c>
   24b14:	mov	r0, r5
   24b18:	mov	r1, r6
   24b1c:	mov	r2, r7
   24b20:	mov	r3, #23
   24b24:	bl	337ac <flatcc_json_parser_set_error@@Base>
   24b28:	mov	r4, r0
   24b2c:	mov	r0, r4
   24b30:	sub	sp, fp, #28
   24b34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24b38:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24b3c:	add	fp, sp, #28
   24b40:	sub	sp, sp, #36	; 0x24
   24b44:	mov	r6, r2
   24b48:	ldr	r2, [fp, #8]
   24b4c:	mov	r5, r0
   24b50:	mov	r0, #0
   24b54:	mov	r8, r3
   24b58:	cmp	r1, r6
   24b5c:	str	r0, [r2]
   24b60:	beq	24ba4 <main@@Base+0xeb14>
   24b64:	ldrb	r0, [r1]
   24b68:	cmp	r0, #46	; 0x2e
   24b6c:	beq	24b84 <main@@Base+0xeaf4>
   24b70:	cmp	r0, #34	; 0x22
   24b74:	bne	24b9c <main@@Base+0xeb0c>
   24b78:	mov	r0, #0
   24b7c:	add	r1, r1, #1
   24b80:	b	24ba0 <main@@Base+0xeb10>
   24b84:	mov	r0, r5
   24b88:	mov	r2, r6
   24b8c:	mov	r3, #5
   24b90:	bl	337ac <flatcc_json_parser_set_error@@Base>
   24b94:	mov	r1, r0
   24b98:	b	24ba4 <main@@Base+0xeb14>
   24b9c:	mov	r0, #1
   24ba0:	str	r0, [r5, #12]
   24ba4:	ldr	r0, [r5, #12]
   24ba8:	cmp	r0, #0
   24bac:	beq	24bb8 <main@@Base+0xeb28>
   24bb0:	mov	r7, r1
   24bb4:	b	24bf4 <main@@Base+0xeb64>
   24bb8:	sub	r0, r6, r1
   24bbc:	cmp	r0, #2
   24bc0:	blt	24be4 <main@@Base+0xeb54>
   24bc4:	ldrb	r0, [r1]
   24bc8:	cmp	r0, #32
   24bcc:	bhi	24bb0 <main@@Base+0xeb20>
   24bd0:	bne	24be4 <main@@Base+0xeb54>
   24bd4:	mov	r7, r1
   24bd8:	ldrb	r0, [r7, #1]!
   24bdc:	cmp	r0, #32
   24be0:	bhi	24bf4 <main@@Base+0xeb64>
   24be4:	mov	r0, r5
   24be8:	mov	r2, r6
   24bec:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   24bf0:	mov	r7, r0
   24bf4:	cmp	r7, r6
   24bf8:	beq	24ca8 <main@@Base+0xec18>
   24bfc:	add	r0, r8, #4
   24c00:	add	sl, sp, #24
   24c04:	add	r9, sp, #20
   24c08:	str	r8, [sp, #12]
   24c0c:	str	r0, [sp, #8]
   24c10:	ldr	r4, [r8]
   24c14:	mov	r8, r0
   24c18:	add	r0, sp, #16
   24c1c:	mov	r1, r7
   24c20:	mov	r2, r6
   24c24:	mov	r3, r9
   24c28:	str	sl, [sp]
   24c2c:	str	r0, [sp, #4]
   24c30:	mov	r0, r5
   24c34:	blx	r4
   24c38:	cmp	r0, r6
   24c3c:	beq	24ca8 <main@@Base+0xec18>
   24c40:	mov	r4, r0
   24c44:	cmp	r0, r7
   24c48:	bne	24c5c <main@@Base+0xebcc>
   24c4c:	ldr	r4, [r8], #4
   24c50:	cmp	r4, #0
   24c54:	bne	24c18 <main@@Base+0xeb88>
   24c58:	b	24cb0 <main@@Base+0xec20>
   24c5c:	ldr	r0, [sp, #24]
   24c60:	ldr	r1, [sp, #28]
   24c64:	bl	43200 <flatcc_json_printer_clear@@Base+0xb04>
   24c68:	ldr	r2, [fp, #8]
   24c6c:	ldr	r1, [sp, #20]
   24c70:	vmov	s2, r0
   24c74:	ldr	r8, [sp, #12]
   24c78:	mov	r7, r4
   24c7c:	vneg.f32	s4, s2
   24c80:	vldr	s0, [r2]
   24c84:	cmp	r1, #0
   24c88:	vseleq.f32	s2, s2, s4
   24c8c:	vadd.f32	s0, s0, s2
   24c90:	vstr	s0, [r2]
   24c94:	ldr	r0, [sp, #16]
   24c98:	cmp	r0, #0
   24c9c:	ldr	r0, [sp, #8]
   24ca0:	bne	24c10 <main@@Base+0xeb80>
   24ca4:	b	24cc8 <main@@Base+0xec38>
   24ca8:	mov	r4, r6
   24cac:	b	24cc8 <main@@Base+0xec38>
   24cb0:	mov	r0, r5
   24cb4:	mov	r1, r7
   24cb8:	mov	r2, r6
   24cbc:	mov	r3, #23
   24cc0:	bl	337ac <flatcc_json_parser_set_error@@Base>
   24cc4:	mov	r4, r0
   24cc8:	mov	r0, r4
   24ccc:	sub	sp, fp, #28
   24cd0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24cd4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24cd8:	add	fp, sp, #28
   24cdc:	sub	sp, sp, #44	; 0x2c
   24ce0:	mov	r6, r2
   24ce4:	ldr	r2, [fp, #8]
   24ce8:	mov	r5, r0
   24cec:	mov	r0, #0
   24cf0:	mov	sl, r3
   24cf4:	cmp	r1, r6
   24cf8:	str	r0, [r2]
   24cfc:	beq	24d40 <main@@Base+0xecb0>
   24d00:	ldrb	r0, [r1]
   24d04:	cmp	r0, #46	; 0x2e
   24d08:	beq	24d20 <main@@Base+0xec90>
   24d0c:	cmp	r0, #34	; 0x22
   24d10:	bne	24d38 <main@@Base+0xeca8>
   24d14:	mov	r0, #0
   24d18:	add	r1, r1, #1
   24d1c:	b	24d3c <main@@Base+0xecac>
   24d20:	mov	r0, r5
   24d24:	mov	r2, r6
   24d28:	mov	r3, #5
   24d2c:	bl	337ac <flatcc_json_parser_set_error@@Base>
   24d30:	mov	r1, r0
   24d34:	b	24d40 <main@@Base+0xecb0>
   24d38:	mov	r0, #1
   24d3c:	str	r0, [r5, #12]
   24d40:	ldr	r0, [r5, #12]
   24d44:	cmp	r0, #0
   24d48:	beq	24d54 <main@@Base+0xecc4>
   24d4c:	mov	r7, r1
   24d50:	b	24d90 <main@@Base+0xed00>
   24d54:	sub	r0, r6, r1
   24d58:	cmp	r0, #2
   24d5c:	blt	24d80 <main@@Base+0xecf0>
   24d60:	ldrb	r0, [r1]
   24d64:	cmp	r0, #32
   24d68:	bhi	24d4c <main@@Base+0xecbc>
   24d6c:	bne	24d80 <main@@Base+0xecf0>
   24d70:	mov	r7, r1
   24d74:	ldrb	r0, [r7, #1]!
   24d78:	cmp	r0, #32
   24d7c:	bhi	24d90 <main@@Base+0xed00>
   24d80:	mov	r0, r5
   24d84:	mov	r2, r6
   24d88:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   24d8c:	mov	r7, r0
   24d90:	cmp	r7, r6
   24d94:	beq	24ea8 <main@@Base+0xee18>
   24d98:	add	r0, sl, #4
   24d9c:	mov	r2, #0
   24da0:	add	r8, sp, #32
   24da4:	add	r9, sp, #28
   24da8:	str	sl, [sp, #16]
   24dac:	str	r0, [sp, #12]
   24db0:	ldr	r4, [sl]
   24db4:	mov	sl, r0
   24db8:	str	r2, [sp, #20]
   24dbc:	add	r0, sp, #24
   24dc0:	mov	r1, r7
   24dc4:	mov	r2, r6
   24dc8:	mov	r3, r9
   24dcc:	str	r8, [sp]
   24dd0:	str	r0, [sp, #4]
   24dd4:	mov	r0, r5
   24dd8:	blx	r4
   24ddc:	cmp	r0, r6
   24de0:	beq	24ea8 <main@@Base+0xee18>
   24de4:	mov	r4, r0
   24de8:	cmp	r0, r7
   24dec:	bne	24e00 <main@@Base+0xed70>
   24df0:	ldr	r4, [sl], #4
   24df4:	cmp	r4, #0
   24df8:	bne	24dbc <main@@Base+0xed2c>
   24dfc:	b	24eb0 <main@@Base+0xee20>
   24e00:	ldr	r2, [sp, #28]
   24e04:	ldr	r0, [sp, #32]
   24e08:	ldr	r1, [sp, #36]	; 0x24
   24e0c:	cmp	r2, #0
   24e10:	beq	24e38 <main@@Base+0xeda8>
   24e14:	ldr	sl, [sp, #16]
   24e18:	subs	r2, r0, #-2147483647	; 0x80000001
   24e1c:	sbcs	r1, r1, #0
   24e20:	bcc	24e64 <main@@Base+0xedd4>
   24e24:	mov	r0, r5
   24e28:	mov	r1, r4
   24e2c:	mov	r2, r6
   24e30:	mov	r3, #8
   24e34:	b	24e58 <main@@Base+0xedc8>
   24e38:	ldr	sl, [sp, #16]
   24e3c:	subs	r2, r0, #-2147483648	; 0x80000000
   24e40:	sbcs	r1, r1, #0
   24e44:	bcc	24e6c <main@@Base+0xeddc>
   24e48:	mov	r0, r5
   24e4c:	mov	r1, r4
   24e50:	mov	r2, r6
   24e54:	mov	r3, #7
   24e58:	bl	337ac <flatcc_json_parser_set_error@@Base>
   24e5c:	ldr	r2, [sp, #20]
   24e60:	b	24e74 <main@@Base+0xede4>
   24e64:	rsb	r2, r0, #0
   24e68:	b	24e70 <main@@Base+0xede0>
   24e6c:	mov	r2, r0
   24e70:	mov	r0, r4
   24e74:	cmp	r0, r6
   24e78:	beq	24ea8 <main@@Base+0xee18>
   24e7c:	ldr	r0, [fp, #8]
   24e80:	mov	r7, r4
   24e84:	mov	r1, r0
   24e88:	ldr	r0, [r0]
   24e8c:	add	r0, r0, r2
   24e90:	str	r0, [r1]
   24e94:	ldr	r0, [sp, #24]
   24e98:	cmp	r0, #0
   24e9c:	ldr	r0, [sp, #12]
   24ea0:	bne	24db0 <main@@Base+0xed20>
   24ea4:	b	24ec8 <main@@Base+0xee38>
   24ea8:	mov	r4, r6
   24eac:	b	24ec8 <main@@Base+0xee38>
   24eb0:	mov	r0, r5
   24eb4:	mov	r1, r7
   24eb8:	mov	r2, r6
   24ebc:	mov	r3, #23
   24ec0:	bl	337ac <flatcc_json_parser_set_error@@Base>
   24ec4:	mov	r4, r0
   24ec8:	mov	r0, r4
   24ecc:	sub	sp, fp, #28
   24ed0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24ed4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24ed8:	add	fp, sp, #28
   24edc:	sub	sp, sp, #44	; 0x2c
   24ee0:	mov	r6, r2
   24ee4:	ldr	r2, [fp, #8]
   24ee8:	mov	r5, r0
   24eec:	mov	r0, #0
   24ef0:	mov	sl, r3
   24ef4:	cmp	r1, r6
   24ef8:	str	r0, [r2]
   24efc:	str	r0, [r2, #4]
   24f00:	beq	24f44 <main@@Base+0xeeb4>
   24f04:	ldrb	r0, [r1]
   24f08:	cmp	r0, #46	; 0x2e
   24f0c:	beq	24f24 <main@@Base+0xee94>
   24f10:	cmp	r0, #34	; 0x22
   24f14:	bne	24f3c <main@@Base+0xeeac>
   24f18:	mov	r0, #0
   24f1c:	add	r1, r1, #1
   24f20:	b	24f40 <main@@Base+0xeeb0>
   24f24:	mov	r0, r5
   24f28:	mov	r2, r6
   24f2c:	mov	r3, #5
   24f30:	bl	337ac <flatcc_json_parser_set_error@@Base>
   24f34:	mov	r1, r0
   24f38:	b	24f44 <main@@Base+0xeeb4>
   24f3c:	mov	r0, #1
   24f40:	str	r0, [r5, #12]
   24f44:	ldr	r0, [r5, #12]
   24f48:	cmp	r0, #0
   24f4c:	beq	24f58 <main@@Base+0xeec8>
   24f50:	mov	r7, r1
   24f54:	b	24f94 <main@@Base+0xef04>
   24f58:	sub	r0, r6, r1
   24f5c:	cmp	r0, #2
   24f60:	blt	24f84 <main@@Base+0xeef4>
   24f64:	ldrb	r0, [r1]
   24f68:	cmp	r0, #32
   24f6c:	bhi	24f50 <main@@Base+0xeec0>
   24f70:	bne	24f84 <main@@Base+0xeef4>
   24f74:	mov	r7, r1
   24f78:	ldrb	r0, [r7, #1]!
   24f7c:	cmp	r0, #32
   24f80:	bhi	24f94 <main@@Base+0xef04>
   24f84:	mov	r0, r5
   24f88:	mov	r2, r6
   24f8c:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   24f90:	mov	r7, r0
   24f94:	cmp	r7, r6
   24f98:	beq	250b4 <main@@Base+0xf024>
   24f9c:	add	r0, sl, #4
   24fa0:	mov	r1, #0
   24fa4:	add	r8, sp, #32
   24fa8:	add	r9, sp, #28
   24fac:	mov	r2, #0
   24fb0:	str	sl, [sp, #12]
   24fb4:	str	r0, [sp, #8]
   24fb8:	ldr	r4, [sl]
   24fbc:	mov	sl, r0
   24fc0:	str	r2, [sp, #16]
   24fc4:	str	r1, [sp, #20]
   24fc8:	add	r0, sp, #24
   24fcc:	mov	r1, r7
   24fd0:	mov	r2, r6
   24fd4:	mov	r3, r9
   24fd8:	str	r8, [sp]
   24fdc:	str	r0, [sp, #4]
   24fe0:	mov	r0, r5
   24fe4:	blx	r4
   24fe8:	cmp	r0, r6
   24fec:	beq	250b4 <main@@Base+0xf024>
   24ff0:	mov	r4, r0
   24ff4:	cmp	r0, r7
   24ff8:	bne	2500c <main@@Base+0xef7c>
   24ffc:	ldr	r4, [sl], #4
   25000:	cmp	r4, #0
   25004:	bne	24fc8 <main@@Base+0xef38>
   25008:	b	250bc <main@@Base+0xf02c>
   2500c:	add	r2, sp, #28
   25010:	ldm	r2, {r0, r1, r2}
   25014:	cmp	r0, #0
   25018:	beq	25040 <main@@Base+0xefb0>
   2501c:	ldr	sl, [sp, #12]
   25020:	subs	r0, r1, #1
   25024:	sbcs	r0, r2, #-2147483648	; 0x80000000
   25028:	bcc	25070 <main@@Base+0xefe0>
   2502c:	mov	r0, r5
   25030:	mov	r1, r4
   25034:	mov	r2, r6
   25038:	mov	r3, #8
   2503c:	b	25060 <main@@Base+0xefd0>
   25040:	ldr	sl, [sp, #12]
   25044:	cmn	r2, #1
   25048:	mov	r0, r4
   2504c:	bgt	2507c <main@@Base+0xefec>
   25050:	mov	r0, r5
   25054:	mov	r1, r4
   25058:	mov	r2, r6
   2505c:	mov	r3, #7
   25060:	bl	337ac <flatcc_json_parser_set_error@@Base>
   25064:	ldr	r1, [sp, #20]
   25068:	ldr	r2, [sp, #16]
   2506c:	b	2507c <main@@Base+0xefec>
   25070:	rsbs	r1, r1, #0
   25074:	mov	r0, r4
   25078:	rsc	r2, r2, #0
   2507c:	cmp	r0, r6
   25080:	beq	250b4 <main@@Base+0xf024>
   25084:	ldr	r0, [fp, #8]
   25088:	mov	r7, r0
   2508c:	ldm	r0, {r0, r3}
   25090:	adds	r0, r0, r1
   25094:	adc	r3, r3, r2
   25098:	stm	r7, {r0, r3}
   2509c:	mov	r7, r4
   250a0:	ldr	r0, [sp, #24]
   250a4:	cmp	r0, #0
   250a8:	ldr	r0, [sp, #8]
   250ac:	bne	24fb8 <main@@Base+0xef28>
   250b0:	b	250d4 <main@@Base+0xf044>
   250b4:	mov	r4, r6
   250b8:	b	250d4 <main@@Base+0xf044>
   250bc:	mov	r0, r5
   250c0:	mov	r1, r7
   250c4:	mov	r2, r6
   250c8:	mov	r3, #23
   250cc:	bl	337ac <flatcc_json_parser_set_error@@Base>
   250d0:	mov	r4, r0
   250d4:	mov	r0, r4
   250d8:	sub	sp, fp, #28
   250dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   250e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   250e4:	add	fp, sp, #28
   250e8:	sub	sp, sp, #44	; 0x2c
   250ec:	mov	r6, r2
   250f0:	ldr	r2, [fp, #8]
   250f4:	mov	r5, r0
   250f8:	mov	r0, #0
   250fc:	mov	r8, r3
   25100:	cmp	r1, r6
   25104:	str	r0, [r2]
   25108:	beq	2514c <main@@Base+0xf0bc>
   2510c:	ldrb	r0, [r1]
   25110:	cmp	r0, #46	; 0x2e
   25114:	beq	2512c <main@@Base+0xf09c>
   25118:	cmp	r0, #34	; 0x22
   2511c:	bne	25144 <main@@Base+0xf0b4>
   25120:	mov	r0, #0
   25124:	add	r1, r1, #1
   25128:	b	25148 <main@@Base+0xf0b8>
   2512c:	mov	r0, r5
   25130:	mov	r2, r6
   25134:	mov	r3, #5
   25138:	bl	337ac <flatcc_json_parser_set_error@@Base>
   2513c:	mov	r1, r0
   25140:	b	2514c <main@@Base+0xf0bc>
   25144:	mov	r0, #1
   25148:	str	r0, [r5, #12]
   2514c:	ldr	r0, [r5, #12]
   25150:	cmp	r0, #0
   25154:	beq	25160 <main@@Base+0xf0d0>
   25158:	mov	r7, r1
   2515c:	b	2519c <main@@Base+0xf10c>
   25160:	sub	r0, r6, r1
   25164:	cmp	r0, #2
   25168:	blt	2518c <main@@Base+0xf0fc>
   2516c:	ldrb	r0, [r1]
   25170:	cmp	r0, #32
   25174:	bhi	25158 <main@@Base+0xf0c8>
   25178:	bne	2518c <main@@Base+0xf0fc>
   2517c:	mov	r7, r1
   25180:	ldrb	r0, [r7, #1]!
   25184:	cmp	r0, #32
   25188:	bhi	2519c <main@@Base+0xf10c>
   2518c:	mov	r0, r5
   25190:	mov	r2, r6
   25194:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   25198:	mov	r7, r0
   2519c:	cmp	r7, r6
   251a0:	beq	252a0 <main@@Base+0xf210>
   251a4:	add	r0, r8, #4
   251a8:	mov	r1, #0
   251ac:	add	sl, sp, #32
   251b0:	add	r9, sp, #28
   251b4:	str	r8, [sp, #16]
   251b8:	str	r1, [sp, #20]
   251bc:	str	r0, [sp, #12]
   251c0:	ldr	r4, [r8]
   251c4:	mov	r8, r0
   251c8:	add	r0, sp, #24
   251cc:	mov	r1, r7
   251d0:	mov	r2, r6
   251d4:	mov	r3, r9
   251d8:	str	sl, [sp]
   251dc:	str	r0, [sp, #4]
   251e0:	mov	r0, r5
   251e4:	blx	r4
   251e8:	cmp	r0, r6
   251ec:	beq	252a0 <main@@Base+0xf210>
   251f0:	mov	r4, r0
   251f4:	cmp	r0, r7
   251f8:	bne	2520c <main@@Base+0xf17c>
   251fc:	ldr	r4, [r8], #4
   25200:	cmp	r4, #0
   25204:	bne	251c8 <main@@Base+0xf138>
   25208:	b	252a8 <main@@Base+0xf218>
   2520c:	ldr	r0, [sp, #28]
   25210:	cmp	r0, #0
   25214:	beq	25234 <main@@Base+0xf1a4>
   25218:	mov	r0, r5
   2521c:	mov	r1, r4
   25220:	mov	r2, r6
   25224:	mov	r3, #8
   25228:	bl	337ac <flatcc_json_parser_set_error@@Base>
   2522c:	ldr	r8, [sp, #16]
   25230:	b	25268 <main@@Base+0xf1d8>
   25234:	ldr	r0, [sp, #36]	; 0x24
   25238:	ldr	r8, [sp, #16]
   2523c:	cmp	r0, #0
   25240:	beq	2525c <main@@Base+0xf1cc>
   25244:	mov	r0, r5
   25248:	mov	r1, r4
   2524c:	mov	r2, r6
   25250:	mov	r3, #7
   25254:	bl	337ac <flatcc_json_parser_set_error@@Base>
   25258:	b	25268 <main@@Base+0xf1d8>
   2525c:	ldr	r0, [sp, #32]
   25260:	str	r0, [sp, #20]
   25264:	mov	r0, r4
   25268:	cmp	r0, r6
   2526c:	beq	252a0 <main@@Base+0xf210>
   25270:	ldr	r0, [fp, #8]
   25274:	ldr	r2, [sp, #20]
   25278:	mov	r7, r4
   2527c:	mov	r1, r0
   25280:	ldr	r0, [r0]
   25284:	add	r0, r0, r2
   25288:	str	r0, [r1]
   2528c:	ldr	r0, [sp, #24]
   25290:	cmp	r0, #0
   25294:	ldr	r0, [sp, #12]
   25298:	bne	251c0 <main@@Base+0xf130>
   2529c:	b	252c0 <main@@Base+0xf230>
   252a0:	mov	r4, r6
   252a4:	b	252c0 <main@@Base+0xf230>
   252a8:	mov	r0, r5
   252ac:	mov	r1, r7
   252b0:	mov	r2, r6
   252b4:	mov	r3, #23
   252b8:	bl	337ac <flatcc_json_parser_set_error@@Base>
   252bc:	mov	r4, r0
   252c0:	mov	r0, r4
   252c4:	sub	sp, fp, #28
   252c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   252cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   252d0:	add	fp, sp, #28
   252d4:	sub	sp, sp, #44	; 0x2c
   252d8:	mov	r7, r2
   252dc:	ldr	r2, [fp, #8]
   252e0:	mov	r5, r0
   252e4:	mov	r0, #0
   252e8:	mov	r8, r3
   252ec:	cmp	r1, r7
   252f0:	str	r0, [r2]
   252f4:	str	r0, [r2, #4]
   252f8:	beq	2533c <main@@Base+0xf2ac>
   252fc:	ldrb	r0, [r1]
   25300:	cmp	r0, #46	; 0x2e
   25304:	beq	2531c <main@@Base+0xf28c>
   25308:	cmp	r0, #34	; 0x22
   2530c:	bne	25334 <main@@Base+0xf2a4>
   25310:	mov	r0, #0
   25314:	add	r1, r1, #1
   25318:	b	25338 <main@@Base+0xf2a8>
   2531c:	mov	r0, r5
   25320:	mov	r2, r7
   25324:	mov	r3, #5
   25328:	bl	337ac <flatcc_json_parser_set_error@@Base>
   2532c:	mov	r1, r0
   25330:	b	2533c <main@@Base+0xf2ac>
   25334:	mov	r0, #1
   25338:	str	r0, [r5, #12]
   2533c:	ldr	r0, [r5, #12]
   25340:	cmp	r0, #0
   25344:	beq	25350 <main@@Base+0xf2c0>
   25348:	mov	r6, r1
   2534c:	b	2538c <main@@Base+0xf2fc>
   25350:	sub	r0, r7, r1
   25354:	cmp	r0, #2
   25358:	blt	2537c <main@@Base+0xf2ec>
   2535c:	ldrb	r0, [r1]
   25360:	cmp	r0, #32
   25364:	bhi	25348 <main@@Base+0xf2b8>
   25368:	bne	2537c <main@@Base+0xf2ec>
   2536c:	mov	r6, r1
   25370:	ldrb	r0, [r6, #1]!
   25374:	cmp	r0, #32
   25378:	bhi	2538c <main@@Base+0xf2fc>
   2537c:	mov	r0, r5
   25380:	mov	r2, r7
   25384:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   25388:	mov	r6, r0
   2538c:	cmp	r6, r7
   25390:	beq	25480 <main@@Base+0xf3f0>
   25394:	mov	r1, #0
   25398:	add	r0, r8, #4
   2539c:	add	sl, sp, #32
   253a0:	add	r9, sp, #28
   253a4:	str	r8, [sp, #12]
   253a8:	str	r1, [sp, #20]
   253ac:	mov	r1, #0
   253b0:	str	r0, [sp, #8]
   253b4:	str	r1, [sp, #16]
   253b8:	ldr	r4, [r8]
   253bc:	mov	r8, r0
   253c0:	add	r0, sp, #24
   253c4:	mov	r1, r6
   253c8:	mov	r2, r7
   253cc:	mov	r3, r9
   253d0:	str	sl, [sp]
   253d4:	str	r0, [sp, #4]
   253d8:	mov	r0, r5
   253dc:	blx	r4
   253e0:	cmp	r0, r7
   253e4:	beq	25480 <main@@Base+0xf3f0>
   253e8:	mov	r4, r0
   253ec:	cmp	r0, r6
   253f0:	bne	25404 <main@@Base+0xf374>
   253f4:	ldr	r4, [r8], #4
   253f8:	cmp	r4, #0
   253fc:	bne	253c0 <main@@Base+0xf330>
   25400:	b	25488 <main@@Base+0xf3f8>
   25404:	ldr	r0, [sp, #28]
   25408:	cmp	r0, #0
   2540c:	beq	25428 <main@@Base+0xf398>
   25410:	mov	r0, r5
   25414:	mov	r1, r4
   25418:	mov	r2, r7
   2541c:	mov	r3, #8
   25420:	bl	337ac <flatcc_json_parser_set_error@@Base>
   25424:	b	2543c <main@@Base+0xf3ac>
   25428:	ldr	r0, [sp, #32]
   2542c:	str	r0, [sp, #20]
   25430:	ldr	r0, [sp, #36]	; 0x24
   25434:	str	r0, [sp, #16]
   25438:	mov	r0, r4
   2543c:	ldr	r8, [sp, #12]
   25440:	cmp	r0, r7
   25444:	beq	25480 <main@@Base+0xf3f0>
   25448:	ldr	r0, [fp, #8]
   2544c:	ldr	r3, [sp, #20]
   25450:	mov	r6, r4
   25454:	mov	r2, r0
   25458:	ldrd	r0, [r0]
   2545c:	adds	r0, r0, r3
   25460:	ldr	r3, [sp, #16]
   25464:	adc	r1, r1, r3
   25468:	strd	r0, [r2]
   2546c:	ldr	r0, [sp, #24]
   25470:	cmp	r0, #0
   25474:	ldr	r0, [sp, #8]
   25478:	bne	253b8 <main@@Base+0xf328>
   2547c:	b	254a0 <main@@Base+0xf410>
   25480:	mov	r4, r7
   25484:	b	254a0 <main@@Base+0xf410>
   25488:	mov	r0, r5
   2548c:	mov	r1, r6
   25490:	mov	r2, r7
   25494:	mov	r3, #23
   25498:	bl	337ac <flatcc_json_parser_set_error@@Base>
   2549c:	mov	r4, r0
   254a0:	mov	r0, r4
   254a4:	sub	sp, fp, #28
   254a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   254ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   254b0:	add	fp, sp, #28
   254b4:	sub	sp, sp, #36	; 0x24
   254b8:	mov	r6, r2
   254bc:	ldr	r2, [fp, #8]
   254c0:	mov	r5, r0
   254c4:	mov	r0, #0
   254c8:	mov	r8, r3
   254cc:	cmp	r1, r6
   254d0:	str	r0, [r2]
   254d4:	str	r0, [r2, #4]
   254d8:	beq	2551c <main@@Base+0xf48c>
   254dc:	ldrb	r0, [r1]
   254e0:	cmp	r0, #46	; 0x2e
   254e4:	beq	254fc <main@@Base+0xf46c>
   254e8:	cmp	r0, #34	; 0x22
   254ec:	bne	25514 <main@@Base+0xf484>
   254f0:	mov	r0, #0
   254f4:	add	r1, r1, #1
   254f8:	b	25518 <main@@Base+0xf488>
   254fc:	mov	r0, r5
   25500:	mov	r2, r6
   25504:	mov	r3, #5
   25508:	bl	337ac <flatcc_json_parser_set_error@@Base>
   2550c:	mov	r1, r0
   25510:	b	2551c <main@@Base+0xf48c>
   25514:	mov	r0, #1
   25518:	str	r0, [r5, #12]
   2551c:	ldr	r0, [r5, #12]
   25520:	cmp	r0, #0
   25524:	beq	25530 <main@@Base+0xf4a0>
   25528:	mov	r7, r1
   2552c:	b	2556c <main@@Base+0xf4dc>
   25530:	sub	r0, r6, r1
   25534:	cmp	r0, #2
   25538:	blt	2555c <main@@Base+0xf4cc>
   2553c:	ldrb	r0, [r1]
   25540:	cmp	r0, #32
   25544:	bhi	25528 <main@@Base+0xf498>
   25548:	bne	2555c <main@@Base+0xf4cc>
   2554c:	mov	r7, r1
   25550:	ldrb	r0, [r7, #1]!
   25554:	cmp	r0, #32
   25558:	bhi	2556c <main@@Base+0xf4dc>
   2555c:	mov	r0, r5
   25560:	mov	r2, r6
   25564:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   25568:	mov	r7, r0
   2556c:	cmp	r7, r6
   25570:	beq	25628 <main@@Base+0xf598>
   25574:	add	r0, r8, #4
   25578:	add	sl, sp, #24
   2557c:	add	r9, sp, #20
   25580:	str	r8, [sp, #12]
   25584:	str	r0, [sp, #8]
   25588:	ldr	r4, [r8]
   2558c:	mov	r8, r0
   25590:	add	r0, sp, #16
   25594:	mov	r1, r7
   25598:	mov	r2, r6
   2559c:	mov	r3, r9
   255a0:	str	sl, [sp]
   255a4:	str	r0, [sp, #4]
   255a8:	mov	r0, r5
   255ac:	blx	r4
   255b0:	cmp	r0, r6
   255b4:	beq	25628 <main@@Base+0xf598>
   255b8:	mov	r4, r0
   255bc:	cmp	r0, r7
   255c0:	bne	255d4 <main@@Base+0xf544>
   255c4:	ldr	r4, [r8], #4
   255c8:	cmp	r4, #0
   255cc:	bne	25590 <main@@Base+0xf500>
   255d0:	b	25630 <main@@Base+0xf5a0>
   255d4:	ldr	r0, [sp, #24]
   255d8:	ldr	r1, [sp, #28]
   255dc:	bl	42fc8 <flatcc_json_printer_clear@@Base+0x8cc>
   255e0:	ldr	r2, [fp, #8]
   255e4:	ldr	r3, [sp, #20]
   255e8:	vmov	d17, r0, r1
   255ec:	ldr	r8, [sp, #12]
   255f0:	vldr	d16, [r2]
   255f4:	mov	r7, r2
   255f8:	eor	r2, r1, #-2147483648	; 0x80000000
   255fc:	cmp	r3, #0
   25600:	vmov	d18, r0, r2
   25604:	vseleq.f64	d17, d17, d18
   25608:	vadd.f64	d16, d16, d17
   2560c:	vstr	d16, [r7]
   25610:	mov	r7, r4
   25614:	ldr	r0, [sp, #16]
   25618:	cmp	r0, #0
   2561c:	ldr	r0, [sp, #8]
   25620:	bne	25588 <main@@Base+0xf4f8>
   25624:	b	25648 <main@@Base+0xf5b8>
   25628:	mov	r4, r6
   2562c:	b	25648 <main@@Base+0xf5b8>
   25630:	mov	r0, r5
   25634:	mov	r1, r7
   25638:	mov	r2, r6
   2563c:	mov	r3, #23
   25640:	bl	337ac <flatcc_json_parser_set_error@@Base>
   25644:	mov	r4, r0
   25648:	mov	r0, r4
   2564c:	sub	sp, fp, #28
   25650:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25654:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25658:	add	fp, sp, #28
   2565c:	sub	sp, sp, #12
   25660:	mov	sl, r1
   25664:	sub	r1, r2, r1
   25668:	cmp	r1, #8
   2566c:	movcs	r1, #8
   25670:	and	r1, r1, #15
   25674:	sub	r5, r1, #1
   25678:	cmp	r5, #7
   2567c:	bhi	258b8 <main@@Base+0xf828>
   25680:	str	r3, [sp, #8]
   25684:	add	r7, pc, #32
   25688:	mov	r8, #0
   2568c:	mov	ip, #0
   25690:	mov	lr, #0
   25694:	mov	r9, #0
   25698:	mov	r6, #0
   2569c:	mov	r1, #0
   256a0:	mov	r3, #0
   256a4:	mov	r4, #0
   256a8:	ldr	pc, [r7, r5, lsl #2]
   256ac:	andeq	r5, r2, r0, lsl r7
   256b0:	andeq	r5, r2, r8, lsl #14
   256b4:	andeq	r5, r2, r0, lsl #14
   256b8:	strdeq	r5, [r2], -r8
   256bc:	andeq	r5, r2, ip, ror #13
   256c0:	andeq	r5, r2, r0, ror #13
   256c4:	ldrdeq	r5, [r2], -r0
   256c8:	andeq	r5, r2, ip, asr #13
   256cc:	ldrb	ip, [sl, #7]
   256d0:	ldrb	r1, [sl, #6]
   256d4:	mov	lr, r8
   256d8:	orr	r1, ip, r1, lsl #8
   256dc:	mov	r8, r1
   256e0:	ldrb	r1, [sl, #5]
   256e4:	mov	r9, lr
   256e8:	orr	r8, r8, r1, lsl #16
   256ec:	ldrb	r1, [sl, #4]
   256f0:	mov	r6, r9
   256f4:	orr	r8, r8, r1, lsl #24
   256f8:	ldrb	r1, [sl, #3]
   256fc:	orr	r1, r1, r6
   25700:	ldrb	r3, [sl, #2]
   25704:	orr	r3, r1, r3, lsl #8
   25708:	ldrb	r1, [sl, #1]
   2570c:	orr	r4, r3, r1, lsl #16
   25710:	movw	r1, #28276	; 0x6e74
   25714:	movw	r7, #20577	; 0x5061
   25718:	ldr	r6, [fp, #12]
   2571c:	movt	r1, #29285	; 0x7265
   25720:	movt	r7, #18798	; 0x496e
   25724:	eor	r3, r8, r1
   25728:	ldrb	r1, [sl]
   2572c:	orr	r1, r4, r1, lsl #24
   25730:	eor	r7, r1, r7
   25734:	orrs	r3, r3, r7
   25738:	bne	2586c <main@@Base+0xf7dc>
   2573c:	add	r8, sl, #8
   25740:	sub	r1, r2, r8
   25744:	cmp	r1, #8
   25748:	movcs	r1, #8
   2574c:	and	r1, r1, #15
   25750:	sub	r7, r1, #1
   25754:	cmp	r7, #7
   25758:	bhi	258b8 <main@@Base+0xf828>
   2575c:	str	r0, [sp, #4]
   25760:	add	lr, pc, #32
   25764:	mov	r6, #0
   25768:	mov	r0, #0
   2576c:	mov	r1, #0
   25770:	mov	r5, #0
   25774:	mov	r4, #0
   25778:	mov	r3, #0
   2577c:	mov	ip, #0
   25780:	mov	r9, #0
   25784:	ldr	pc, [lr, r7, lsl #2]
   25788:	andeq	r5, r2, ip, ror #15
   2578c:	andeq	r5, r2, r4, ror #15
   25790:	ldrdeq	r5, [r2], -ip
   25794:	ldrdeq	r5, [r2], -r4
   25798:	andeq	r5, r2, r8, asr #15
   2579c:			; <UNDEFINED> instruction: 0x000257bc
   257a0:	andeq	r5, r2, ip, lsr #15
   257a4:	andeq	r5, r2, r8, lsr #15
   257a8:	ldrb	r0, [sl, #15]
   257ac:	ldrb	r1, [sl, #14]
   257b0:	orr	r0, r0, r1, lsl #8
   257b4:	mov	r1, r6
   257b8:	mov	r6, r0
   257bc:	ldrb	r0, [sl, #13]
   257c0:	mov	r5, r1
   257c4:	orr	r6, r6, r0, lsl #16
   257c8:	ldrb	r0, [sl, #12]
   257cc:	mov	r4, r5
   257d0:	orr	r6, r6, r0, lsl #24
   257d4:	ldrb	r0, [sl, #11]
   257d8:	orr	r3, r0, r4
   257dc:	ldrb	r0, [sl, #10]
   257e0:	orr	ip, r3, r0, lsl #8
   257e4:	ldrb	r0, [sl, #9]
   257e8:	orr	r9, ip, r0, lsl #16
   257ec:	ldrb	r1, [r8]
   257f0:	movw	r0, #24931	; 0x6163
   257f4:	movw	r3, #28005	; 0x6d65
   257f8:	movt	r0, #29552	; 0x7370
   257fc:	movt	r3, #20065	; 0x4e61
   25800:	eor	r0, r6, r0
   25804:	orr	r1, r9, r1, lsl #24
   25808:	eor	r1, r1, r3
   2580c:	orrs	r0, r0, r1
   25810:	bne	258b8 <main@@Base+0xf828>
   25814:	add	r6, sl, #16
   25818:	mov	r1, #-268435456	; 0xf0000000
   2581c:	sub	r0, r2, r6
   25820:	cmp	r0, #8
   25824:	movcs	r0, #8
   25828:	add	r0, r1, r0, lsl #28
   2582c:	asr	r0, r0, #28
   25830:	cmp	r0, #0
   25834:	blt	258b8 <main@@Base+0xf828>
   25838:	ldrb	r0, [r6]
   2583c:	cmp	r0, #101	; 0x65
   25840:	bne	258b8 <main@@Base+0xf828>
   25844:	ldr	r0, [fp, #12]
   25848:	mov	r1, r6
   2584c:	mov	r3, #1
   25850:	mov	r8, #1
   25854:	str	r0, [sp]
   25858:	ldr	r0, [sp, #4]
   2585c:	bl	33d04 <flatcc_json_parser_match_constant@@Base>
   25860:	cmp	r0, r6
   25864:	bne	25898 <main@@Base+0xf808>
   25868:	b	258b8 <main@@Base+0xf828>
   2586c:	movw	r3, #20037	; 0x4e45
   25870:	movt	r3, #20047	; 0x4e4f
   25874:	teq	r1, r3
   25878:	bne	258b8 <main@@Base+0xf828>
   2587c:	mov	r1, sl
   25880:	mov	r3, #4
   25884:	str	r6, [sp]
   25888:	bl	33d04 <flatcc_json_parser_match_constant@@Base>
   2588c:	cmp	r0, sl
   25890:	beq	258b8 <main@@Base+0xf828>
   25894:	mov	r8, #0
   25898:	mov	sl, r0
   2589c:	ldr	r0, [fp, #8]
   258a0:	mov	r1, #0
   258a4:	str	r8, [r0]
   258a8:	str	r1, [r0, #4]
   258ac:	mov	r0, #0
   258b0:	ldr	r1, [sp, #8]
   258b4:	str	r0, [r1]
   258b8:	mov	r0, sl
   258bc:	sub	sp, fp, #28
   258c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   258c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   258c8:	add	fp, sp, #28
   258cc:	sub	sp, sp, #12
   258d0:	mov	r5, r1
   258d4:	sub	r1, r2, r1
   258d8:	cmp	r1, #8
   258dc:	movcs	r1, #8
   258e0:	and	r1, r1, #15
   258e4:	sub	r7, r1, #1
   258e8:	cmp	r7, #7
   258ec:	bhi	25a68 <main@@Base+0xf9d8>
   258f0:	str	r3, [sp, #8]
   258f4:	add	r8, pc, #32
   258f8:	mov	lr, #0
   258fc:	mov	ip, #0
   25900:	mov	r9, #0
   25904:	mov	sl, #0
   25908:	mov	r1, #0
   2590c:	mov	r3, #0
   25910:	mov	r4, #0
   25914:	mov	r6, #0
   25918:	ldr	pc, [r8, r7, lsl #2]
   2591c:	andeq	r5, r2, r0, lsl #19
   25920:	andeq	r5, r2, r8, ror r9
   25924:	andeq	r5, r2, r0, ror r9
   25928:	andeq	r5, r2, r8, ror #18
   2592c:	andeq	r5, r2, ip, asr r9
   25930:	andeq	r5, r2, r0, asr r9
   25934:	andeq	r5, r2, r0, asr #18
   25938:	andeq	r5, r2, ip, lsr r9
   2593c:	ldrb	ip, [r5, #7]
   25940:	ldrb	r1, [r5, #6]
   25944:	mov	r9, lr
   25948:	orr	r1, ip, r1, lsl #8
   2594c:	mov	lr, r1
   25950:	ldrb	r1, [r5, #5]
   25954:	mov	sl, r9
   25958:	orr	lr, lr, r1, lsl #16
   2595c:	ldrb	r1, [r5, #4]
   25960:	orr	lr, lr, r1, lsl #24
   25964:	mov	r1, sl
   25968:	ldrb	r3, [r5, #3]
   2596c:	orr	r3, r3, r1
   25970:	ldrb	r1, [r5, #2]
   25974:	orr	r4, r3, r1, lsl #8
   25978:	ldrb	r1, [r5, #1]
   2597c:	orr	r6, r4, r1, lsl #16
   25980:	ldrb	r1, [r5]
   25984:	ldr	r3, [fp, #12]
   25988:	ldr	r8, [fp, #8]
   2598c:	orr	r1, r6, r1, lsl #24
   25990:	movw	r6, #30769	; 0x7831
   25994:	movt	r6, #26725	; 0x6865
   25998:	cmp	r1, r6
   2599c:	bhi	259cc <main@@Base+0xf93c>
   259a0:	teq	r1, r6
   259a4:	bne	25a68 <main@@Base+0xf9d8>
   259a8:	str	r3, [sp]
   259ac:	mov	r1, r5
   259b0:	mov	r3, #4
   259b4:	bl	33d04 <flatcc_json_parser_match_constant@@Base>
   259b8:	cmp	r0, r5
   259bc:	beq	25a68 <main@@Base+0xf9d8>
   259c0:	mov	r1, #0
   259c4:	mov	r2, #3
   259c8:	b	25a54 <main@@Base+0xf9c4>
   259cc:	lsr	r4, lr, #16
   259d0:	movw	r7, #25959	; 0x6567
   259d4:	movw	r6, #26725	; 0x6865
   259d8:	orr	r4, r4, r1, lsl #16
   259dc:	movt	r7, #30830	; 0x786e
   259e0:	eor	r6, r6, r1, lsr #16
   259e4:	eor	r7, r4, r7
   259e8:	orrs	r7, r7, r6
   259ec:	bne	25a20 <main@@Base+0xf990>
   259f0:	str	r3, [sp]
   259f4:	mov	r1, r5
   259f8:	mov	r3, #6
   259fc:	bl	33d04 <flatcc_json_parser_match_constant@@Base>
   25a00:	cmp	r0, r5
   25a04:	beq	25a68 <main@@Base+0xf9d8>
   25a08:	mvn	r2, #1
   25a0c:	mvn	r1, #0
   25a10:	str	r2, [r8]
   25a14:	str	r1, [r8, #4]
   25a18:	mov	r1, #1
   25a1c:	b	25a5c <main@@Base+0xf9cc>
   25a20:	movw	r7, #30770	; 0x7832
   25a24:	movt	r7, #26725	; 0x6865
   25a28:	teq	r1, r7
   25a2c:	bne	25a68 <main@@Base+0xf9d8>
   25a30:	str	r3, [sp]
   25a34:	mov	r1, r5
   25a38:	mov	r3, #4
   25a3c:	bl	33d04 <flatcc_json_parser_match_constant@@Base>
   25a40:	cmp	r0, r5
   25a44:	beq	25a68 <main@@Base+0xf9d8>
   25a48:	movw	r2, #48815	; 0xbeaf
   25a4c:	mov	r1, #0
   25a50:	movt	r2, #32431	; 0x7eaf
   25a54:	str	r2, [r8]
   25a58:	str	r1, [r8, #4]
   25a5c:	ldr	r2, [sp, #8]
   25a60:	mov	r5, r0
   25a64:	str	r1, [r2]
   25a68:	mov	r0, r5
   25a6c:	sub	sp, fp, #28
   25a70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25a74:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25a78:	add	fp, sp, #28
   25a7c:	sub	sp, sp, #12
   25a80:	mov	sl, r1
   25a84:	sub	r1, r2, r1
   25a88:	cmp	r1, #8
   25a8c:	movcs	r1, #8
   25a90:	and	r1, r1, #15
   25a94:	sub	r4, r1, #1
   25a98:	cmp	r4, #7
   25a9c:	bhi	25c5c <main@@Base+0xfbcc>
   25aa0:	str	r3, [sp, #8]
   25aa4:	add	r8, pc, #32
   25aa8:	mov	r9, #0
   25aac:	mov	ip, #0
   25ab0:	mov	lr, #0
   25ab4:	mov	r7, #0
   25ab8:	mov	r6, #0
   25abc:	mov	r3, #0
   25ac0:	mov	r1, #0
   25ac4:	mov	r5, #0
   25ac8:	ldr	pc, [r8, r4, lsl #2]
   25acc:	andeq	r5, r2, r0, lsr fp
   25ad0:	andeq	r5, r2, r8, lsr #22
   25ad4:	andeq	r5, r2, r0, lsr #22
   25ad8:	andeq	r5, r2, r8, lsl fp
   25adc:	andeq	r5, r2, ip, lsl #22
   25ae0:	andeq	r5, r2, r0, lsl #22
   25ae4:	strdeq	r5, [r2], -r0
   25ae8:	andeq	r5, r2, ip, ror #21
   25aec:	ldrb	ip, [sl, #7]
   25af0:	ldrb	r1, [sl, #6]
   25af4:	mov	lr, r9
   25af8:	orr	r1, ip, r1, lsl #8
   25afc:	mov	r9, r1
   25b00:	ldrb	r1, [sl, #5]
   25b04:	mov	r7, lr
   25b08:	orr	r9, r9, r1, lsl #16
   25b0c:	ldrb	r1, [sl, #4]
   25b10:	mov	r6, r7
   25b14:	orr	r9, r9, r1, lsl #24
   25b18:	ldrb	r1, [sl, #3]
   25b1c:	orr	r3, r1, r6
   25b20:	ldrb	r1, [sl, #2]
   25b24:	orr	r1, r3, r1, lsl #8
   25b28:	ldrb	r3, [sl, #1]
   25b2c:	orr	r5, r1, r3, lsl #16
   25b30:	ldrb	r1, [sl]
   25b34:	ldr	r3, [fp, #12]
   25b38:	ldr	r6, [fp, #8]
   25b3c:	orr	r7, r5, r1, lsl #24
   25b40:	movw	r1, #29745	; 0x7431
   25b44:	movt	r1, #26990	; 0x696e
   25b48:	cmp	r7, r1
   25b4c:	bhi	25b7c <main@@Base+0xfaec>
   25b50:	teq	r7, r1
   25b54:	bne	25c5c <main@@Base+0xfbcc>
   25b58:	str	r3, [sp]
   25b5c:	mov	r1, sl
   25b60:	mov	r3, #4
   25b64:	bl	33d04 <flatcc_json_parser_match_constant@@Base>
   25b68:	cmp	r0, sl
   25b6c:	beq	25c5c <main@@Base+0xfbcc>
   25b70:	mov	r1, #0
   25b74:	mov	r2, #2
   25b78:	b	25bc8 <main@@Base+0xfb38>
   25b7c:	movw	r4, #0
   25b80:	movw	r1, #29806	; 0x746e
   25b84:	movt	r4, #25959	; 0x6567
   25b88:	movt	r1, #26990	; 0x696e
   25b8c:	subs	r5, r9, r4
   25b90:	sbcs	r5, r7, r1
   25b94:	bcs	25bd4 <main@@Base+0xfb44>
   25b98:	movw	r1, #29746	; 0x7432
   25b9c:	movt	r1, #26990	; 0x696e
   25ba0:	teq	r7, r1
   25ba4:	bne	25c5c <main@@Base+0xfbcc>
   25ba8:	str	r3, [sp]
   25bac:	mov	r1, sl
   25bb0:	mov	r3, #4
   25bb4:	bl	33d04 <flatcc_json_parser_match_constant@@Base>
   25bb8:	cmp	r0, sl
   25bbc:	beq	25c5c <main@@Base+0xfbcc>
   25bc0:	mov	r1, #0
   25bc4:	mov	r2, #42	; 0x2a
   25bc8:	str	r2, [r6]
   25bcc:	str	r1, [r6, #4]
   25bd0:	b	25c50 <main@@Base+0xfbc0>
   25bd4:	eor	r1, r7, r1
   25bd8:	add	r7, r4, #12800	; 0x3200
   25bdc:	bic	r5, r9, #255	; 0xff
   25be0:	eor	r7, r5, r7
   25be4:	orrs	r7, r7, r1
   25be8:	bne	25c14 <main@@Base+0xfb84>
   25bec:	str	r3, [sp]
   25bf0:	mov	r1, sl
   25bf4:	mov	r3, #7
   25bf8:	bl	33d04 <flatcc_json_parser_match_constant@@Base>
   25bfc:	cmp	r0, sl
   25c00:	beq	25c5c <main@@Base+0xfbcc>
   25c04:	mvn	r2, #1
   25c08:	mvn	r1, #0
   25c0c:	add	r2, r2, #1
   25c10:	b	25c44 <main@@Base+0xfbb4>
   25c14:	bfc	r9, #0, #16
   25c18:	eor	r7, r9, r4
   25c1c:	orrs	r1, r7, r1
   25c20:	bne	25c5c <main@@Base+0xfbcc>
   25c24:	str	r3, [sp]
   25c28:	mov	r1, sl
   25c2c:	mov	r3, #6
   25c30:	bl	33d04 <flatcc_json_parser_match_constant@@Base>
   25c34:	cmp	r0, sl
   25c38:	beq	25c5c <main@@Base+0xfbcc>
   25c3c:	mvn	r1, #0
   25c40:	mvn	r2, #1
   25c44:	str	r2, [r6]
   25c48:	str	r1, [r6, #4]
   25c4c:	mov	r1, #1
   25c50:	ldr	r2, [sp, #8]
   25c54:	mov	sl, r0
   25c58:	str	r1, [r2]
   25c5c:	mov	r0, sl
   25c60:	sub	sp, fp, #28
   25c64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25c68:	push	{r4, r5, r6, r7, fp, lr}
   25c6c:	add	fp, sp, #16
   25c70:	sub	sp, sp, #8
   25c74:	mov	r5, r1
   25c78:	sub	r1, r2, r1
   25c7c:	mov	r4, r3
   25c80:	cmp	r1, #8
   25c84:	movcs	r1, #8
   25c88:	and	r1, r1, #15
   25c8c:	sub	r3, r1, #1
   25c90:	cmp	r3, #7
   25c94:	bhi	25da8 <main@@Base+0xfd18>
   25c98:	add	r7, pc, #4
   25c9c:	mov	r1, #0
   25ca0:	ldr	pc, [r7, r3, lsl #2]
   25ca4:	ldrdeq	r5, [r2], -ip
   25ca8:	ldrdeq	r5, [r2], -r4
   25cac:	andeq	r5, r2, ip, asr #25
   25cb0:	andeq	r5, r2, r4, asr #25
   25cb4:	andeq	r5, r2, r4, asr #25
   25cb8:	andeq	r5, r2, r4, asr #25
   25cbc:	andeq	r5, r2, r4, asr #25
   25cc0:	andeq	r5, r2, r4, asr #25
   25cc4:	ldrb	r3, [r5, #3]
   25cc8:	orr	r1, r3, r1
   25ccc:	ldrb	r3, [r5, #2]
   25cd0:	orr	r1, r1, r3, lsl #8
   25cd4:	ldrb	r3, [r5, #1]
   25cd8:	orr	r1, r1, r3, lsl #16
   25cdc:	ldrb	r6, [r5]
   25ce0:	ldr	r3, [fp, #12]
   25ce4:	ldr	r7, [fp, #8]
   25ce8:	orr	r1, r1, r6, lsl #24
   25cec:	movw	r6, #26417	; 0x6731
   25cf0:	movt	r6, #28261	; 0x6e65
   25cf4:	cmp	r1, r6
   25cf8:	bhi	25d28 <main@@Base+0xfc98>
   25cfc:	teq	r1, r6
   25d00:	bne	25da8 <main@@Base+0xfd18>
   25d04:	str	r3, [sp]
   25d08:	mov	r1, r5
   25d0c:	mov	r3, #4
   25d10:	bl	33d04 <flatcc_json_parser_match_constant@@Base>
   25d14:	cmp	r0, r5
   25d18:	beq	25da8 <main@@Base+0xfd18>
   25d1c:	mvn	r1, #0
   25d20:	mvn	r2, #11
   25d24:	b	25d94 <main@@Base+0xfd04>
   25d28:	movw	r6, #26418	; 0x6732
   25d2c:	movt	r6, #28261	; 0x6e65
   25d30:	teq	r1, r6
   25d34:	beq	25d70 <main@@Base+0xfce0>
   25d38:	movw	r6, #26419	; 0x6733
   25d3c:	movt	r6, #28261	; 0x6e65
   25d40:	teq	r1, r6
   25d44:	bne	25da8 <main@@Base+0xfd18>
   25d48:	str	r3, [sp]
   25d4c:	mov	r1, r5
   25d50:	mov	r3, #4
   25d54:	bl	33d04 <flatcc_json_parser_match_constant@@Base>
   25d58:	cmp	r0, r5
   25d5c:	beq	25da8 <main@@Base+0xfd18>
   25d60:	mvn	r2, #11
   25d64:	mvn	r1, #0
   25d68:	add	r2, r2, #2
   25d6c:	b	25d94 <main@@Base+0xfd04>
   25d70:	str	r3, [sp]
   25d74:	mov	r1, r5
   25d78:	mov	r3, #4
   25d7c:	bl	33d04 <flatcc_json_parser_match_constant@@Base>
   25d80:	cmp	r0, r5
   25d84:	beq	25da8 <main@@Base+0xfd18>
   25d88:	mvn	r2, #11
   25d8c:	mvn	r1, #0
   25d90:	add	r2, r2, #1
   25d94:	str	r2, [r7]
   25d98:	str	r1, [r7, #4]
   25d9c:	mov	r1, #1
   25da0:	mov	r5, r0
   25da4:	str	r1, [r4]
   25da8:	mov	r0, r5
   25dac:	sub	sp, fp, #16
   25db0:	pop	{r4, r5, r6, r7, fp, pc}
   25db4:	push	{r4, r5, fp, lr}
   25db8:	add	fp, sp, #8
   25dbc:	sub	sp, sp, #8
   25dc0:	mov	r4, r1
   25dc4:	sub	r1, r2, r1
   25dc8:	mov	r5, r3
   25dcc:	mov	r3, #-268435456	; 0xf0000000
   25dd0:	cmp	r1, #8
   25dd4:	movcs	r1, #8
   25dd8:	add	r1, r3, r1, lsl #28
   25ddc:	asr	r1, r1, #28
   25de0:	cmp	r1, #0
   25de4:	blt	25e28 <main@@Base+0xfd98>
   25de8:	ldrb	r1, [r4]
   25dec:	cmp	r1, #120	; 0x78
   25df0:	bne	25e28 <main@@Base+0xfd98>
   25df4:	ldr	r1, [fp, #12]
   25df8:	mov	r3, #1
   25dfc:	str	r1, [sp]
   25e00:	mov	r1, r4
   25e04:	bl	33d04 <flatcc_json_parser_match_constant@@Base>
   25e08:	cmp	r0, r4
   25e0c:	beq	25e28 <main@@Base+0xfd98>
   25e10:	ldr	r1, [fp, #8]
   25e14:	mov	r2, #0
   25e18:	mov	r4, r0
   25e1c:	str	r2, [r1]
   25e20:	str	r2, [r1, #4]
   25e24:	str	r2, [r5]
   25e28:	mov	r0, r4
   25e2c:	sub	sp, fp, #8
   25e30:	pop	{r4, r5, fp, pc}
   25e34:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25e38:	add	fp, sp, #28
   25e3c:	sub	sp, sp, #12
   25e40:	mov	sl, r1
   25e44:	sub	r1, r2, r1
   25e48:	cmp	r1, #8
   25e4c:	movcs	r1, #8
   25e50:	and	r1, r1, #15
   25e54:	sub	r6, r1, #1
   25e58:	cmp	r6, #7
   25e5c:	bhi	260d8 <main@@Base+0x10048>
   25e60:	str	r3, [sp, #8]
   25e64:	add	r9, pc, #32
   25e68:	mov	r1, #0
   25e6c:	mov	ip, #0
   25e70:	mov	lr, #0
   25e74:	mov	r4, #0
   25e78:	mov	r7, #0
   25e7c:	mov	r3, #0
   25e80:	mov	r5, #0
   25e84:	mov	r8, #0
   25e88:	ldr	pc, [r9, r6, lsl #2]
   25e8c:	strdeq	r5, [r2], -r0
   25e90:	andeq	r5, r2, r8, ror #29
   25e94:	andeq	r5, r2, r0, ror #29
   25e98:	ldrdeq	r5, [r2], -r8
   25e9c:	andeq	r5, r2, ip, asr #29
   25ea0:	andeq	r5, r2, r0, asr #29
   25ea4:			; <UNDEFINED> instruction: 0x00025eb0
   25ea8:	andeq	r5, r2, ip, lsr #29
   25eac:	ldrb	ip, [sl, #7]
   25eb0:	ldrb	r3, [sl, #6]
   25eb4:	mov	lr, r1
   25eb8:	orr	r3, ip, r3, lsl #8
   25ebc:	mov	r1, r3
   25ec0:	ldrb	r3, [sl, #5]
   25ec4:	mov	r4, lr
   25ec8:	orr	r1, r1, r3, lsl #16
   25ecc:	ldrb	r3, [sl, #4]
   25ed0:	mov	r7, r4
   25ed4:	orr	r1, r1, r3, lsl #24
   25ed8:	ldrb	r3, [sl, #3]
   25edc:	orr	r3, r3, r7
   25ee0:	ldrb	r7, [sl, #2]
   25ee4:	orr	r5, r3, r7, lsl #8
   25ee8:	ldrb	r3, [sl, #1]
   25eec:	orr	r8, r5, r3, lsl #16
   25ef0:	ldrb	r3, [sl]
   25ef4:	ldr	lr, [fp, #12]
   25ef8:	ldr	r9, [fp, #8]
   25efc:	orr	r6, r8, r3, lsl #24
   25f00:	movw	r3, #20036	; 0x4e44
   25f04:	movt	r3, #20047	; 0x4e4f
   25f08:	cmp	r6, r3
   25f0c:	bhi	25f6c <main@@Base+0xfedc>
   25f10:	movw	r7, #28160	; 0x6e00
   25f14:	movw	r4, #28523	; 0x6f6b
   25f18:	and	r3, r1, #-16777216	; 0xff000000
   25f1c:	movt	r7, #18017	; 0x4661
   25f20:	movt	r4, #17007	; 0x426f
   25f24:	subs	r5, r1, r7
   25f28:	sbcs	r5, r6, r4
   25f2c:	bcs	25fb8 <main@@Base+0xff28>
   25f30:	movw	r1, #27756	; 0x6c6c
   25f34:	eor	r3, r3, #1694498816	; 0x65000000
   25f38:	movt	r1, #16997	; 0x4265
   25f3c:	eor	r1, r6, r1
   25f40:	orrs	r1, r3, r1
   25f44:	bne	260d8 <main@@Base+0x10048>
   25f48:	mov	r1, sl
   25f4c:	mov	r3, #5
   25f50:	str	lr, [sp]
   25f54:	bl	33d04 <flatcc_json_parser_match_constant@@Base>
   25f58:	cmp	r0, sl
   25f5c:	beq	260d8 <main@@Base+0x10048>
   25f60:	mov	r1, #0
   25f64:	mov	r2, #9
   25f68:	b	260c4 <main@@Base+0x10034>
   25f6c:	movw	r7, #26725	; 0x6865
   25f70:	mvn	r3, #-1912602624	; 0x8e000000
   25f74:	movt	r7, #20340	; 0x4f74
   25f78:	subs	r3, r3, r1
   25f7c:	sbcs	r3, r7, r6
   25f80:	bcc	25ff4 <main@@Base+0xff64>
   25f84:	movw	r1, #20037	; 0x4e45
   25f88:	movt	r1, #20047	; 0x4e4f
   25f8c:	teq	r6, r1
   25f90:	bne	260d8 <main@@Base+0x10048>
   25f94:	mov	r1, sl
   25f98:	mov	r3, #4
   25f9c:	str	lr, [sp]
   25fa0:	bl	33d04 <flatcc_json_parser_match_constant@@Base>
   25fa4:	cmp	r0, sl
   25fa8:	beq	260d8 <main@@Base+0x10048>
   25fac:	mov	r1, #0
   25fb0:	str	r1, [r9]
   25fb4:	b	260c8 <main@@Base+0x10038>
   25fb8:	movw	r5, #19553	; 0x4c61
   25fbc:	eor	r3, r3, #1845493760	; 0x6e000000
   25fc0:	movt	r5, #19829	; 0x4d75
   25fc4:	eor	r5, r6, r5
   25fc8:	orrs	r3, r3, r5
   25fcc:	bne	26048 <main@@Base+0xffb8>
   25fd0:	mov	r1, sl
   25fd4:	mov	r3, #5
   25fd8:	str	lr, [sp]
   25fdc:	bl	33d04 <flatcc_json_parser_match_constant@@Base>
   25fe0:	cmp	r0, sl
   25fe4:	beq	260d8 <main@@Base+0x10048>
   25fe8:	mov	r1, #0
   25fec:	mov	r2, #2
   25ff0:	b	260c4 <main@@Base+0x10034>
   25ff4:	movw	r4, #25964	; 0x656c
   25ff8:	movw	ip, #28789	; 0x7075
   25ffc:	movt	r4, #28282	; 0x6e7a
   26000:	movt	ip, #21089	; 0x5261
   26004:	subs	r3, r1, r4
   26008:	sbcs	r3, r6, ip
   2600c:	bcs	26080 <main@@Base+0xfff0>
   26010:	and	r1, r1, #-16777216	; 0xff000000
   26014:	eor	r3, r6, r7
   26018:	eor	r1, r1, #1912602624	; 0x72000000
   2601c:	orrs	r1, r1, r3
   26020:	bne	260d8 <main@@Base+0x10048>
   26024:	mov	r1, sl
   26028:	mov	r3, #5
   2602c:	str	lr, [sp]
   26030:	bl	33d04 <flatcc_json_parser_match_constant@@Base>
   26034:	cmp	r0, sl
   26038:	beq	260d8 <main@@Base+0x10048>
   2603c:	mov	r1, #0
   26040:	mov	r2, #11
   26044:	b	260c4 <main@@Base+0x10034>
   26048:	bic	r1, r1, #255	; 0xff
   2604c:	eor	r3, r6, r4
   26050:	eor	r1, r1, r7
   26054:	orrs	r1, r1, r3
   26058:	bne	260d8 <main@@Base+0x10048>
   2605c:	mov	r1, sl
   26060:	mov	r3, #7
   26064:	str	lr, [sp]
   26068:	bl	33d04 <flatcc_json_parser_match_constant@@Base>
   2606c:	cmp	r0, sl
   26070:	beq	260d8 <main@@Base+0x10048>
   26074:	mov	r1, #0
   26078:	mov	r2, #10
   2607c:	b	260c4 <main@@Base+0x10034>
   26080:	lsr	r5, r1, #16
   26084:	movw	r7, #25956	; 0x6564
   26088:	movw	r3, #21870	; 0x556e
   2608c:	orr	r5, r5, r6, lsl #16
   26090:	movt	r7, #30067	; 0x7573
   26094:	eor	r3, r3, r6, lsr #16
   26098:	eor	r5, r5, r7
   2609c:	orrs	r3, r5, r3
   260a0:	bne	260e4 <main@@Base+0x10054>
   260a4:	mov	r1, sl
   260a8:	mov	r3, #6
   260ac:	str	lr, [sp]
   260b0:	bl	33d04 <flatcc_json_parser_match_constant@@Base>
   260b4:	cmp	r0, sl
   260b8:	beq	260d8 <main@@Base+0x10048>
   260bc:	mov	r1, #0
   260c0:	mov	r2, #255	; 0xff
   260c4:	str	r2, [r9]
   260c8:	str	r1, [r9, #4]
   260cc:	ldr	r2, [sp, #8]
   260d0:	str	r1, [r2]
   260d4:	mov	sl, r0
   260d8:	mov	r0, sl
   260dc:	sub	sp, fp, #28
   260e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   260e4:	eor	r1, r1, r4
   260e8:	eor	r3, r6, ip
   260ec:	orrs	r1, r1, r3
   260f0:	bne	260d8 <main@@Base+0x10048>
   260f4:	mov	r1, sl
   260f8:	mov	r3, #8
   260fc:	str	lr, [sp]
   26100:	mov	r4, #8
   26104:	bl	33d04 <flatcc_json_parser_match_constant@@Base>
   26108:	cmp	r0, sl
   2610c:	beq	260d8 <main@@Base+0x10048>
   26110:	mov	r5, #0
   26114:	strd	r4, [r9]
   26118:	ldr	r1, [sp, #8]
   2611c:	str	r5, [r1]
   26120:	b	260d4 <main@@Base+0x10044>
   26124:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26128:	add	fp, sp, #28
   2612c:	sub	sp, sp, #36	; 0x24
   26130:	mov	r5, r0
   26134:	mov	r0, #0
   26138:	mov	r4, r1
   2613c:	mov	r1, #4
   26140:	mov	r7, r3
   26144:	mov	r8, r2
   26148:	str	r0, [r3]
   2614c:	ldr	r0, [r5]
   26150:	bl	2f88c <flatcc_builder_start_table@@Base>
   26154:	cmp	r0, #0
   26158:	beq	26180 <main@@Base+0x100f0>
   2615c:	mov	r0, r5
   26160:	mov	r1, r4
   26164:	mov	r2, r8
   26168:	mov	r3, #33	; 0x21
   2616c:	bl	337ac <flatcc_json_parser_set_error@@Base>
   26170:	mov	r4, r0
   26174:	mov	r0, r4
   26178:	sub	sp, fp, #28
   2617c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26180:	add	r0, sp, #28
   26184:	mov	r1, r4
   26188:	mov	r2, r8
   2618c:	mov	r3, #1
   26190:	str	r0, [sp]
   26194:	mov	r0, r5
   26198:	bl	35dbc <flatcc_json_parser_prepare_unions@@Base>
   2619c:	cmp	r0, r8
   261a0:	beq	2615c <main@@Base+0x100cc>
   261a4:	cmp	r4, r8
   261a8:	beq	261dc <main@@Base+0x1014c>
   261ac:	ldrb	r0, [r4]
   261b0:	cmp	r0, #123	; 0x7b
   261b4:	bne	261dc <main@@Base+0x1014c>
   261b8:	add	r1, r4, #1
   261bc:	sub	r0, r8, r1
   261c0:	cmp	r0, #2
   261c4:	blt	26240 <main@@Base+0x101b0>
   261c8:	ldrb	r0, [r1]
   261cc:	cmp	r0, #32
   261d0:	bls	26230 <main@@Base+0x101a0>
   261d4:	mov	r4, r1
   261d8:	b	26250 <main@@Base+0x101c0>
   261dc:	mov	r0, r5
   261e0:	mov	r1, r4
   261e4:	mov	r2, r8
   261e8:	mov	r3, #21
   261ec:	bl	337ac <flatcc_json_parser_set_error@@Base>
   261f0:	mov	r4, r0
   261f4:	ldr	r0, [r5, #24]
   261f8:	cmp	r0, #0
   261fc:	bne	2615c <main@@Base+0x100cc>
   26200:	ldr	r3, [sp, #28]
   26204:	mov	r0, r5
   26208:	mov	r1, r4
   2620c:	mov	r2, r8
   26210:	bl	35e40 <flatcc_json_parser_finalize_unions@@Base>
   26214:	mov	r4, r0
   26218:	ldr	r0, [r5]
   2621c:	bl	3021c <flatcc_builder_end_table@@Base>
   26220:	cmp	r0, #0
   26224:	str	r0, [r7]
   26228:	bne	26174 <main@@Base+0x100e4>
   2622c:	b	2615c <main@@Base+0x100cc>
   26230:	bne	26240 <main@@Base+0x101b0>
   26234:	ldrb	r0, [r4, #2]!
   26238:	cmp	r0, #32
   2623c:	bhi	26250 <main@@Base+0x101c0>
   26240:	mov	r0, r5
   26244:	mov	r2, r8
   26248:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   2624c:	mov	r4, r0
   26250:	cmp	r4, r8
   26254:	mov	r2, r8
   26258:	beq	2629c <main@@Base+0x1020c>
   2625c:	ldrb	r0, [r4]
   26260:	cmp	r0, #125	; 0x7d
   26264:	bne	26298 <main@@Base+0x10208>
   26268:	add	r1, r4, #1
   2626c:	sub	r0, r8, r1
   26270:	cmp	r0, #2
   26274:	blt	26b10 <main@@Base+0x10a80>
   26278:	ldrb	r0, [r1]
   2627c:	cmp	r0, #32
   26280:	bhi	26ad4 <main@@Base+0x10a44>
   26284:	bne	26b10 <main@@Base+0x10a80>
   26288:	ldrb	r0, [r4, #2]!
   2628c:	cmp	r0, #32
   26290:	bhi	261f4 <main@@Base+0x10164>
   26294:	b	26b10 <main@@Base+0x10a80>
   26298:	mov	r2, r4
   2629c:	str	r7, [sp, #20]
   262a0:	cmp	r2, r8
   262a4:	mov	r9, r8
   262a8:	beq	262f4 <main@@Base+0x10264>
   262ac:	ldrb	r0, [r2]
   262b0:	cmp	r0, #46	; 0x2e
   262b4:	beq	262cc <main@@Base+0x1023c>
   262b8:	cmp	r0, #34	; 0x22
   262bc:	bne	262e8 <main@@Base+0x10258>
   262c0:	mov	r0, #0
   262c4:	add	r9, r2, #1
   262c8:	b	262f0 <main@@Base+0x10260>
   262cc:	mov	r1, r2
   262d0:	mov	r0, r5
   262d4:	mov	r2, r8
   262d8:	mov	r3, #5
   262dc:	bl	337ac <flatcc_json_parser_set_error@@Base>
   262e0:	mov	r9, r0
   262e4:	b	262f4 <main@@Base+0x10264>
   262e8:	mov	r0, #1
   262ec:	mov	r9, r2
   262f0:	str	r0, [r5, #12]
   262f4:	sub	r1, r8, r9
   262f8:	mov	r0, #8
   262fc:	cmp	r1, #8
   26300:	movcc	r0, r1
   26304:	and	r0, r0, #15
   26308:	sub	r2, r0, #1
   2630c:	cmp	r2, #7
   26310:	bhi	269dc <main@@Base+0x1094c>
   26314:	str	r1, [sp, #24]
   26318:	add	r0, pc, #36	; 0x24
   2631c:	mov	lr, r5
   26320:	mov	sl, #0
   26324:	mov	ip, #0
   26328:	mov	r6, #0
   2632c:	mov	r1, #0
   26330:	mov	r3, #0
   26334:	mov	r5, #0
   26338:	mov	r7, #0
   2633c:	mov	r4, #0
   26340:	ldr	pc, [r0, r2, lsl #2]
   26344:	andeq	r6, r2, r8, lsr #7
   26348:	andeq	r6, r2, r0, lsr #7
   2634c:	muleq	r2, r8, r3
   26350:	muleq	r2, r0, r3
   26354:	andeq	r6, r2, r4, lsl #7
   26358:	andeq	r6, r2, r8, ror r3
   2635c:	andeq	r6, r2, r8, ror #6
   26360:	andeq	r6, r2, r4, ror #6
   26364:	ldrb	ip, [r9, #7]
   26368:	ldrb	r0, [r9, #6]
   2636c:	mov	r6, sl
   26370:	orr	r0, ip, r0, lsl #8
   26374:	mov	sl, r0
   26378:	ldrb	r0, [r9, #5]
   2637c:	mov	r1, r6
   26380:	orr	sl, sl, r0, lsl #16
   26384:	ldrb	r0, [r9, #4]
   26388:	mov	r3, r1
   2638c:	orr	sl, sl, r0, lsl #24
   26390:	ldrb	r0, [r9, #3]
   26394:	orr	r5, r0, r3
   26398:	ldrb	r0, [r9, #2]
   2639c:	orr	r7, r5, r0, lsl #8
   263a0:	ldrb	r0, [r9, #1]
   263a4:	orr	r4, r7, r0, lsl #16
   263a8:	movw	r2, #30976	; 0x7900
   263ac:	movt	r2, #24942	; 0x616e
   263b0:	add	r0, r2, #95	; 0x5f
   263b4:	eor	r1, sl, r0
   263b8:	ldrb	r0, [r9]
   263bc:	orr	r4, r4, r0, lsl #24
   263c0:	movw	r0, #28281	; 0x6e79
   263c4:	movt	r0, #28001	; 0x6d61
   263c8:	eor	r0, r4, r0
   263cc:	orrs	r1, r1, r0
   263d0:	bne	26490 <main@@Base+0x10400>
   263d4:	add	r6, r9, #8
   263d8:	mov	r1, #8
   263dc:	ldr	r7, [sp, #20]
   263e0:	mov	r5, lr
   263e4:	sub	r0, r8, r6
   263e8:	cmp	r0, #8
   263ec:	movcc	r1, r0
   263f0:	and	r1, r1, #15
   263f4:	sub	r2, r1, #1
   263f8:	cmp	r2, #7
   263fc:	bhi	26910 <main@@Base+0x10880>
   26400:	add	r3, pc, #4
   26404:	mov	r1, #0
   26408:	ldr	pc, [r3, r2, lsl #2]
   2640c:	andeq	r6, r2, r0, asr #8
   26410:	andeq	r6, r2, r8, lsr r4
   26414:	andeq	r6, r2, r0, lsr r4
   26418:	andeq	r6, r2, ip, lsr #8
   2641c:	andeq	r6, r2, ip, lsr #8
   26420:	andeq	r6, r2, ip, lsr #8
   26424:	andeq	r6, r2, ip, lsr #8
   26428:	andeq	r6, r2, ip, lsr #8
   2642c:	ldrb	r1, [r9, #11]
   26430:	ldrb	r2, [r9, #10]
   26434:	orr	r1, r1, r2, lsl #8
   26438:	ldrb	r2, [r9, #9]
   2643c:	orr	r1, r1, r2, lsl #16
   26440:	ldrb	r2, [r6]
   26444:	orr	r1, r1, r2, lsl #24
   26448:	movw	r2, #28773	; 0x7065
   2644c:	movt	r2, #29817	; 0x7479
   26450:	teq	r1, r2
   26454:	bne	26910 <main@@Base+0x10880>
   26458:	cmp	r0, #5
   2645c:	blt	26910 <main@@Base+0x10880>
   26460:	mov	r1, r9
   26464:	ldr	r2, [r5, #12]
   26468:	ldrb	r0, [r1, #12]!
   2646c:	cmp	r2, #0
   26470:	beq	26518 <main@@Base+0x10488>
   26474:	cmp	r0, #33	; 0x21
   26478:	bcc	26484 <main@@Base+0x103f4>
   2647c:	cmp	r0, #58	; 0x3a
   26480:	bne	26910 <main@@Base+0x10880>
   26484:	mov	r0, #0
   26488:	str	r0, [r5, #12]
   2648c:	b	26524 <main@@Base+0x10494>
   26490:	ldr	r6, [sp, #24]
   26494:	bic	r1, sl, #255	; 0xff
   26498:	mov	r5, lr
   2649c:	eor	r1, r1, r2
   264a0:	orrs	r0, r1, r0
   264a4:	bne	2668c <main@@Base+0x105fc>
   264a8:	cmp	r6, #8
   264ac:	mov	r1, r9
   264b0:	blt	26650 <main@@Base+0x105c0>
   264b4:	mov	r2, r9
   264b8:	ldr	r1, [r5, #12]
   264bc:	ldrb	r0, [r2, #7]!
   264c0:	cmp	r1, #0
   264c4:	beq	264e8 <main@@Base+0x10458>
   264c8:	cmp	r0, #33	; 0x21
   264cc:	bcc	264dc <main@@Base+0x1044c>
   264d0:	cmp	r0, #58	; 0x3a
   264d4:	mov	r1, r9
   264d8:	bne	26650 <main@@Base+0x105c0>
   264dc:	mov	r0, #0
   264e0:	str	r0, [r5, #12]
   264e4:	b	264f8 <main@@Base+0x10468>
   264e8:	cmp	r0, #34	; 0x22
   264ec:	mov	r1, r9
   264f0:	bne	26650 <main@@Base+0x105c0>
   264f4:	add	r2, r9, #8
   264f8:	sub	r0, r8, r2
   264fc:	cmp	r0, #2
   26500:	blt	26558 <main@@Base+0x104c8>
   26504:	ldrb	r0, [r2]
   26508:	cmp	r0, #32
   2650c:	bls	26544 <main@@Base+0x104b4>
   26510:	mov	r1, r2
   26514:	b	2656c <main@@Base+0x104dc>
   26518:	cmp	r0, #34	; 0x22
   2651c:	bne	26910 <main@@Base+0x10880>
   26520:	add	r1, r9, #13
   26524:	sub	r0, r8, r1
   26528:	cmp	r0, #2
   2652c:	blt	265cc <main@@Base+0x1053c>
   26530:	ldrb	r0, [r1]
   26534:	cmp	r0, #32
   26538:	bls	265b8 <main@@Base+0x10528>
   2653c:	mov	r2, r1
   26540:	b	265dc <main@@Base+0x1054c>
   26544:	bne	26558 <main@@Base+0x104c8>
   26548:	mov	r1, r2
   2654c:	ldrb	r0, [r1, #1]!
   26550:	cmp	r0, #32
   26554:	bhi	2656c <main@@Base+0x104dc>
   26558:	mov	r1, r2
   2655c:	mov	r0, r5
   26560:	mov	r2, r8
   26564:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   26568:	mov	r1, r0
   2656c:	cmp	r1, r8
   26570:	beq	265a4 <main@@Base+0x10514>
   26574:	ldrb	r0, [r1]
   26578:	cmp	r0, #58	; 0x3a
   2657c:	bne	265a4 <main@@Base+0x10514>
   26580:	add	r2, r1, #1
   26584:	sub	r0, r8, r2
   26588:	cmp	r0, #2
   2658c:	blt	2663c <main@@Base+0x105ac>
   26590:	ldrb	r0, [r2]
   26594:	cmp	r0, #32
   26598:	bls	2662c <main@@Base+0x1059c>
   2659c:	mov	r1, r2
   265a0:	b	26650 <main@@Base+0x105c0>
   265a4:	mov	r0, r5
   265a8:	mov	r2, r8
   265ac:	mov	r3, #4
   265b0:	bl	337ac <flatcc_json_parser_set_error@@Base>
   265b4:	b	2664c <main@@Base+0x105bc>
   265b8:	bne	265cc <main@@Base+0x1053c>
   265bc:	mov	r2, r1
   265c0:	ldrb	r0, [r2, #1]!
   265c4:	cmp	r0, #32
   265c8:	bhi	265dc <main@@Base+0x1054c>
   265cc:	mov	r0, r5
   265d0:	mov	r2, r8
   265d4:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   265d8:	mov	r2, r0
   265dc:	cmp	r2, r8
   265e0:	beq	26614 <main@@Base+0x10584>
   265e4:	ldrb	r0, [r2]
   265e8:	cmp	r0, #58	; 0x3a
   265ec:	bne	26614 <main@@Base+0x10584>
   265f0:	add	r1, r2, #1
   265f4:	sub	r0, r8, r1
   265f8:	cmp	r0, #2
   265fc:	blt	268ac <main@@Base+0x1081c>
   26600:	ldrb	r0, [r1]
   26604:	cmp	r0, #32
   26608:	bls	2689c <main@@Base+0x1080c>
   2660c:	mov	r2, r1
   26610:	b	268bc <main@@Base+0x1082c>
   26614:	mov	r1, r2
   26618:	mov	r0, r5
   2661c:	mov	r2, r8
   26620:	mov	r3, #4
   26624:	bl	337ac <flatcc_json_parser_set_error@@Base>
   26628:	b	268b8 <main@@Base+0x10828>
   2662c:	bne	2663c <main@@Base+0x105ac>
   26630:	ldrb	r0, [r1, #2]!
   26634:	cmp	r0, #32
   26638:	bhi	26650 <main@@Base+0x105c0>
   2663c:	mov	r1, r2
   26640:	mov	r0, r5
   26644:	mov	r2, r8
   26648:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   2664c:	mov	r1, r0
   26650:	cmp	r9, r1
   26654:	beq	2668c <main@@Base+0x105fc>
   26658:	ldr	r0, [sp, #28]
   2665c:	mov	r2, #3
   26660:	mov	r3, #0
   26664:	str	r2, [sp]
   26668:	mov	r2, r8
   2666c:	str	r0, [sp, #4]
   26670:	movw	r0, #13692	; 0x357c
   26674:	movt	r0, #2
   26678:	str	r0, [sp, #8]
   2667c:	mov	r0, r5
   26680:	bl	36458 <flatcc_json_parser_union_vector@@Base>
   26684:	ldr	r7, [sp, #20]
   26688:	b	269ec <main@@Base+0x1095c>
   2668c:	lsr	r1, sl, #16
   26690:	movw	r2, #27000	; 0x6978
   26694:	movw	r0, #28786	; 0x7072
   26698:	orr	r1, r1, r4, lsl #16
   2669c:	movt	r2, #25958	; 0x6566
   266a0:	eor	r0, r0, r4, lsr #16
   266a4:	eor	r1, r1, r2
   266a8:	orrs	r0, r1, r0
   266ac:	bne	266f4 <main@@Base+0x10664>
   266b0:	ldr	r7, [sp, #20]
   266b4:	cmp	r6, #7
   266b8:	mov	r1, r9
   266bc:	blt	26940 <main@@Base+0x108b0>
   266c0:	mov	r2, r9
   266c4:	ldr	r1, [r5, #12]
   266c8:	ldrb	r0, [r2, #6]!
   266cc:	cmp	r1, #0
   266d0:	beq	26754 <main@@Base+0x106c4>
   266d4:	cmp	r0, #33	; 0x21
   266d8:	bcc	266e8 <main@@Base+0x10658>
   266dc:	cmp	r0, #58	; 0x3a
   266e0:	mov	r1, r9
   266e4:	bne	26940 <main@@Base+0x108b0>
   266e8:	mov	r0, #0
   266ec:	str	r0, [r5, #12]
   266f0:	b	26764 <main@@Base+0x106d4>
   266f4:	movw	r0, #30313	; 0x7669
   266f8:	ldr	r7, [sp, #20]
   266fc:	and	r1, sl, #-16777216	; 0xff000000
   26700:	movt	r0, #28015	; 0x6d6f
   26704:	eor	r1, r1, #1694498816	; 0x65000000
   26708:	eor	r0, r4, r0
   2670c:	orrs	r0, r1, r0
   26710:	bne	269dc <main@@Base+0x1094c>
   26714:	cmp	r6, #6
   26718:	mov	r1, r9
   2671c:	blt	26998 <main@@Base+0x10908>
   26720:	mov	r2, r9
   26724:	ldr	r1, [r5, #12]
   26728:	ldrb	r0, [r2, #5]!
   2672c:	cmp	r1, #0
   26730:	beq	26784 <main@@Base+0x106f4>
   26734:	cmp	r0, #33	; 0x21
   26738:	bcc	26748 <main@@Base+0x106b8>
   2673c:	cmp	r0, #58	; 0x3a
   26740:	mov	r1, r9
   26744:	bne	26998 <main@@Base+0x10908>
   26748:	mov	r0, #0
   2674c:	str	r0, [r5, #12]
   26750:	b	26794 <main@@Base+0x10704>
   26754:	cmp	r0, #34	; 0x22
   26758:	mov	r1, r9
   2675c:	bne	26940 <main@@Base+0x108b0>
   26760:	add	r2, r9, #7
   26764:	sub	r0, r8, r2
   26768:	cmp	r0, #2
   2676c:	blt	267c8 <main@@Base+0x10738>
   26770:	ldrb	r0, [r2]
   26774:	cmp	r0, #32
   26778:	bls	267b4 <main@@Base+0x10724>
   2677c:	mov	r1, r2
   26780:	b	267dc <main@@Base+0x1074c>
   26784:	cmp	r0, #34	; 0x22
   26788:	mov	r1, r9
   2678c:	bne	26998 <main@@Base+0x10908>
   26790:	add	r2, r9, #6
   26794:	sub	r0, r8, r2
   26798:	cmp	r0, #2
   2679c:	blt	2683c <main@@Base+0x107ac>
   267a0:	ldrb	r0, [r2]
   267a4:	cmp	r0, #32
   267a8:	bls	26828 <main@@Base+0x10798>
   267ac:	mov	r1, r2
   267b0:	b	26850 <main@@Base+0x107c0>
   267b4:	bne	267c8 <main@@Base+0x10738>
   267b8:	mov	r1, r2
   267bc:	ldrb	r0, [r1, #1]!
   267c0:	cmp	r0, #32
   267c4:	bhi	267dc <main@@Base+0x1074c>
   267c8:	mov	r1, r2
   267cc:	mov	r0, r5
   267d0:	mov	r2, r8
   267d4:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   267d8:	mov	r1, r0
   267dc:	cmp	r1, r8
   267e0:	beq	26814 <main@@Base+0x10784>
   267e4:	ldrb	r0, [r1]
   267e8:	cmp	r0, #58	; 0x3a
   267ec:	bne	26814 <main@@Base+0x10784>
   267f0:	add	r2, r1, #1
   267f4:	sub	r0, r8, r2
   267f8:	cmp	r0, #2
   267fc:	blt	2692c <main@@Base+0x1089c>
   26800:	ldrb	r0, [r2]
   26804:	cmp	r0, #32
   26808:	bls	2691c <main@@Base+0x1088c>
   2680c:	mov	r1, r2
   26810:	b	26940 <main@@Base+0x108b0>
   26814:	mov	r0, r5
   26818:	mov	r2, r8
   2681c:	mov	r3, #4
   26820:	bl	337ac <flatcc_json_parser_set_error@@Base>
   26824:	b	2693c <main@@Base+0x108ac>
   26828:	bne	2683c <main@@Base+0x107ac>
   2682c:	mov	r1, r2
   26830:	ldrb	r0, [r1, #1]!
   26834:	cmp	r0, #32
   26838:	bhi	26850 <main@@Base+0x107c0>
   2683c:	mov	r1, r2
   26840:	mov	r0, r5
   26844:	mov	r2, r8
   26848:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   2684c:	mov	r1, r0
   26850:	cmp	r1, r8
   26854:	beq	26888 <main@@Base+0x107f8>
   26858:	ldrb	r0, [r1]
   2685c:	cmp	r0, #58	; 0x3a
   26860:	bne	26888 <main@@Base+0x107f8>
   26864:	add	r2, r1, #1
   26868:	sub	r0, r8, r2
   2686c:	cmp	r0, #2
   26870:	blt	26984 <main@@Base+0x108f4>
   26874:	ldrb	r0, [r2]
   26878:	cmp	r0, #32
   2687c:	bls	26974 <main@@Base+0x108e4>
   26880:	mov	r1, r2
   26884:	b	26998 <main@@Base+0x10908>
   26888:	mov	r0, r5
   2688c:	mov	r2, r8
   26890:	mov	r3, #4
   26894:	bl	337ac <flatcc_json_parser_set_error@@Base>
   26898:	b	26994 <main@@Base+0x10904>
   2689c:	bne	268ac <main@@Base+0x1081c>
   268a0:	ldrb	r0, [r2, #2]!
   268a4:	cmp	r0, #32
   268a8:	bhi	268bc <main@@Base+0x1082c>
   268ac:	mov	r0, r5
   268b0:	mov	r2, r8
   268b4:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   268b8:	mov	r2, r0
   268bc:	cmp	r6, r2
   268c0:	beq	26910 <main@@Base+0x10880>
   268c4:	ldr	r0, [sp, #28]
   268c8:	mov	r1, #3
   268cc:	mov	r3, #0
   268d0:	str	r1, [sp]
   268d4:	mov	r1, r2
   268d8:	mov	r2, r8
   268dc:	str	r0, [sp, #4]
   268e0:	movw	r0, #45592	; 0xb218
   268e4:	movt	r0, #5
   268e8:	str	r0, [sp, #8]
   268ec:	movw	r0, #13692	; 0x357c
   268f0:	movt	r0, #2
   268f4:	str	r0, [sp, #12]
   268f8:	movw	r0, #27424	; 0x6b20
   268fc:	movt	r0, #2
   26900:	str	r0, [sp, #16]
   26904:	mov	r0, r5
   26908:	bl	36918 <flatcc_json_parser_union_type_vector@@Base>
   2690c:	b	269ec <main@@Base+0x1095c>
   26910:	mov	r0, r5
   26914:	mov	r1, r6
   26918:	b	269e4 <main@@Base+0x10954>
   2691c:	bne	2692c <main@@Base+0x1089c>
   26920:	ldrb	r0, [r1, #2]!
   26924:	cmp	r0, #32
   26928:	bhi	26940 <main@@Base+0x108b0>
   2692c:	mov	r1, r2
   26930:	mov	r0, r5
   26934:	mov	r2, r8
   26938:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   2693c:	mov	r1, r0
   26940:	cmp	r9, r1
   26944:	beq	269dc <main@@Base+0x1094c>
   26948:	mov	r0, r5
   2694c:	mov	r2, r8
   26950:	add	r3, sp, #32
   26954:	bl	26b34 <main@@Base+0x10aa4>
   26958:	ldr	r6, [sp, #32]
   2695c:	mov	r4, r0
   26960:	cmp	r6, #0
   26964:	beq	2615c <main@@Base+0x100cc>
   26968:	ldr	r0, [r5]
   2696c:	mov	r1, #0
   26970:	b	269c8 <main@@Base+0x10938>
   26974:	bne	26984 <main@@Base+0x108f4>
   26978:	ldrb	r0, [r1, #2]!
   2697c:	cmp	r0, #32
   26980:	bhi	26998 <main@@Base+0x10908>
   26984:	mov	r1, r2
   26988:	mov	r0, r5
   2698c:	mov	r2, r8
   26990:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   26994:	mov	r1, r0
   26998:	cmp	r9, r1
   2699c:	beq	269dc <main@@Base+0x1094c>
   269a0:	mov	r0, r5
   269a4:	mov	r2, r8
   269a8:	add	r3, sp, #32
   269ac:	bl	29e6c <main@@Base+0x13ddc>
   269b0:	ldr	r6, [sp, #32]
   269b4:	mov	r4, r0
   269b8:	cmp	r6, #0
   269bc:	beq	2615c <main@@Base+0x100cc>
   269c0:	ldr	r0, [r5]
   269c4:	mov	r1, #1
   269c8:	bl	30a20 <flatcc_builder_table_add_offset@@Base>
   269cc:	cmp	r0, #0
   269d0:	beq	2615c <main@@Base+0x100cc>
   269d4:	str	r6, [r0]
   269d8:	b	269f0 <main@@Base+0x10960>
   269dc:	mov	r0, r5
   269e0:	mov	r1, r9
   269e4:	mov	r2, r8
   269e8:	bl	33ecc <flatcc_json_parser_unmatched_symbol@@Base>
   269ec:	mov	r4, r0
   269f0:	sub	r0, r8, r4
   269f4:	cmp	r0, #2
   269f8:	blt	26a24 <main@@Base+0x10994>
   269fc:	ldrb	r0, [r4]
   26a00:	cmp	r0, #32
   26a04:	bls	26a10 <main@@Base+0x10980>
   26a08:	mov	r2, r4
   26a0c:	b	26a38 <main@@Base+0x109a8>
   26a10:	bne	26a24 <main@@Base+0x10994>
   26a14:	mov	r2, r4
   26a18:	ldrb	r0, [r2, #1]!
   26a1c:	cmp	r0, #32
   26a20:	bhi	26a38 <main@@Base+0x109a8>
   26a24:	mov	r0, r5
   26a28:	mov	r1, r4
   26a2c:	mov	r2, r8
   26a30:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   26a34:	mov	r2, r0
   26a38:	cmp	r2, r8
   26a3c:	beq	26aa8 <main@@Base+0x10a18>
   26a40:	ldrb	r0, [r2]
   26a44:	cmp	r0, #44	; 0x2c
   26a48:	bne	26ab0 <main@@Base+0x10a20>
   26a4c:	add	r1, r2, #1
   26a50:	sub	r0, r8, r1
   26a54:	cmp	r0, #2
   26a58:	blt	26a80 <main@@Base+0x109f0>
   26a5c:	ldrb	r0, [r1]
   26a60:	cmp	r0, #32
   26a64:	bls	26a70 <main@@Base+0x109e0>
   26a68:	mov	r2, r1
   26a6c:	b	26a90 <main@@Base+0x10a00>
   26a70:	bne	26a80 <main@@Base+0x109f0>
   26a74:	ldrb	r0, [r2, #2]!
   26a78:	cmp	r0, #32
   26a7c:	bhi	26a90 <main@@Base+0x10a00>
   26a80:	mov	r0, r5
   26a84:	mov	r2, r8
   26a88:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   26a8c:	mov	r2, r0
   26a90:	cmp	r2, r8
   26a94:	beq	26adc <main@@Base+0x10a4c>
   26a98:	ldrb	r0, [r2]
   26a9c:	cmp	r0, #125	; 0x7d
   26aa0:	bne	262a0 <main@@Base+0x10210>
   26aa4:	b	26ab8 <main@@Base+0x10a28>
   26aa8:	mov	r4, r8
   26aac:	b	261f4 <main@@Base+0x10164>
   26ab0:	cmp	r0, #125	; 0x7d
   26ab4:	bne	26ae8 <main@@Base+0x10a58>
   26ab8:	add	r1, r2, #1
   26abc:	sub	r0, r8, r1
   26ac0:	cmp	r0, #2
   26ac4:	blt	26b10 <main@@Base+0x10a80>
   26ac8:	ldrb	r0, [r1]
   26acc:	cmp	r0, #32
   26ad0:	bls	26afc <main@@Base+0x10a6c>
   26ad4:	mov	r4, r1
   26ad8:	b	261f4 <main@@Base+0x10164>
   26adc:	mov	r0, r5
   26ae0:	mov	r1, r8
   26ae4:	b	26af0 <main@@Base+0x10a60>
   26ae8:	mov	r0, r5
   26aec:	mov	r1, r2
   26af0:	mov	r2, r8
   26af4:	mov	r3, #10
   26af8:	b	261ec <main@@Base+0x1015c>
   26afc:	bne	26b10 <main@@Base+0x10a80>
   26b00:	ldrb	r0, [r2, #2]!
   26b04:	cmp	r0, #32
   26b08:	mov	r4, r2
   26b0c:	bhi	261f4 <main@@Base+0x10164>
   26b10:	mov	r0, r5
   26b14:	mov	r2, r8
   26b18:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   26b1c:	b	261f0 <main@@Base+0x10160>
   26b20:	mov	r1, #0
   26b24:	cmp	r0, #5
   26b28:	movwcc	r1, #1
   26b2c:	mov	r0, r1
   26b30:	bx	lr
   26b34:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26b38:	add	fp, sp, #28
   26b3c:	sub	sp, sp, #68	; 0x44
   26b40:	mov	r9, r0
   26b44:	mov	r0, #0
   26b48:	mov	r4, r1
   26b4c:	mov	r1, #3
   26b50:	mov	r6, r3
   26b54:	mov	r8, r2
   26b58:	str	r0, [r3]
   26b5c:	ldr	r0, [r9]
   26b60:	bl	2f88c <flatcc_builder_start_table@@Base>
   26b64:	cmp	r0, #0
   26b68:	bne	29df0 <main@@Base+0x13d60>
   26b6c:	cmp	r4, r8
   26b70:	beq	26ba4 <main@@Base+0x10b14>
   26b74:	ldrb	r0, [r4]
   26b78:	cmp	r0, #123	; 0x7b
   26b7c:	bne	26ba4 <main@@Base+0x10b14>
   26b80:	add	r1, r4, #1
   26b84:	sub	r0, r8, r1
   26b88:	cmp	r0, #2
   26b8c:	blt	26bd4 <main@@Base+0x10b44>
   26b90:	ldrb	r0, [r1]
   26b94:	cmp	r0, #32
   26b98:	bls	26bc4 <main@@Base+0x10b34>
   26b9c:	mov	r4, r1
   26ba0:	b	26be4 <main@@Base+0x10b54>
   26ba4:	mov	r0, r9
   26ba8:	mov	r1, r4
   26bac:	mov	r2, r8
   26bb0:	mov	r3, #21
   26bb4:	bl	337ac <flatcc_json_parser_set_error@@Base>
   26bb8:	mov	r4, r0
   26bbc:	add	r0, r9, #24
   26bc0:	b	29de4 <main@@Base+0x13d54>
   26bc4:	bne	26bd4 <main@@Base+0x10b44>
   26bc8:	ldrb	r0, [r4, #2]!
   26bcc:	cmp	r0, #32
   26bd0:	bhi	26be4 <main@@Base+0x10b54>
   26bd4:	mov	r0, r9
   26bd8:	mov	r2, r8
   26bdc:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   26be0:	mov	r4, r0
   26be4:	cmp	r4, r8
   26be8:	mov	r2, r8
   26bec:	beq	26c24 <main@@Base+0x10b94>
   26bf0:	ldrb	r0, [r4]
   26bf4:	cmp	r0, #125	; 0x7d
   26bf8:	bne	26c20 <main@@Base+0x10b90>
   26bfc:	add	r1, r4, #1
   26c00:	sub	r0, r8, r1
   26c04:	cmp	r0, #2
   26c08:	blt	29e3c <main@@Base+0x13dac>
   26c0c:	ldrb	r0, [r1]
   26c10:	cmp	r0, #32
   26c14:	bls	29e2c <main@@Base+0x13d9c>
   26c18:	mov	r4, r1
   26c1c:	b	26bbc <main@@Base+0x10b2c>
   26c20:	mov	r2, r4
   26c24:	add	r0, r9, #24
   26c28:	movw	r1, #25186	; 0x6262
   26c2c:	str	r9, [sp, #24]
   26c30:	str	r6, [sp, #32]
   26c34:	str	r0, [sp, #20]
   26c38:	add	r0, r9, #12
   26c3c:	movt	r1, #25186	; 0x6262
   26c40:	str	r0, [sp, #28]
   26c44:	movw	r0, #257	; 0x101
   26c48:	movt	r0, #257	; 0x101
   26c4c:	add	r0, r1, r0
   26c50:	str	r0, [sp, #16]
   26c54:	movw	r0, #514	; 0x202
   26c58:	movt	r0, #514	; 0x202
   26c5c:	add	r0, r1, r0
   26c60:	str	r0, [sp, #12]
   26c64:	cmp	r2, r8
   26c68:	mov	sl, r8
   26c6c:	beq	26cc0 <main@@Base+0x10c30>
   26c70:	ldrb	r0, [r2]
   26c74:	cmp	r0, #46	; 0x2e
   26c78:	beq	26c94 <main@@Base+0x10c04>
   26c7c:	cmp	r0, #34	; 0x22
   26c80:	bne	26cb0 <main@@Base+0x10c20>
   26c84:	ldr	r0, [sp, #28]
   26c88:	mov	r1, #0
   26c8c:	add	sl, r2, #1
   26c90:	b	26cbc <main@@Base+0x10c2c>
   26c94:	mov	r1, r2
   26c98:	mov	r0, r9
   26c9c:	mov	r2, r8
   26ca0:	mov	r3, #5
   26ca4:	bl	337ac <flatcc_json_parser_set_error@@Base>
   26ca8:	mov	sl, r0
   26cac:	b	26cc0 <main@@Base+0x10c30>
   26cb0:	ldr	r0, [sp, #28]
   26cb4:	mov	r1, #1
   26cb8:	mov	sl, r2
   26cbc:	str	r1, [r0]
   26cc0:	sub	r0, r8, sl
   26cc4:	mov	r1, #8
   26cc8:	cmp	r0, #8
   26ccc:	movcs	r0, r1
   26cd0:	and	r0, r0, #15
   26cd4:	sub	r3, r0, #1
   26cd8:	cmp	r3, #7
   26cdc:	bhi	26f70 <main@@Base+0x10ee0>
   26ce0:	add	r5, pc, #32
   26ce4:	mov	r0, #0
   26ce8:	mov	ip, #0
   26cec:	mov	lr, #0
   26cf0:	mov	r7, #0
   26cf4:	mov	r2, #0
   26cf8:	mov	r6, #0
   26cfc:	mov	r4, #0
   26d00:	mov	r1, #0
   26d04:	ldr	pc, [r5, r3, lsl #2]
   26d08:	andeq	r6, r2, ip, ror #26
   26d0c:	andeq	r6, r2, r4, ror #26
   26d10:	andeq	r6, r2, ip, asr sp
   26d14:	andeq	r6, r2, r4, asr sp
   26d18:	andeq	r6, r2, r8, asr #26
   26d1c:	andeq	r6, r2, ip, lsr sp
   26d20:	andeq	r6, r2, ip, lsr #26
   26d24:	andeq	r6, r2, r8, lsr #26
   26d28:	ldrb	ip, [sl, #7]
   26d2c:	ldrb	r1, [sl, #6]
   26d30:	mov	lr, r0
   26d34:	orr	r1, ip, r1, lsl #8
   26d38:	mov	r0, r1
   26d3c:	ldrb	r1, [sl, #5]
   26d40:	mov	r7, lr
   26d44:	orr	r0, r0, r1, lsl #16
   26d48:	ldrb	r1, [sl, #4]
   26d4c:	mov	r2, r7
   26d50:	orr	r0, r0, r1, lsl #24
   26d54:	ldrb	r1, [sl, #3]
   26d58:	orr	r6, r1, r2
   26d5c:	ldrb	r1, [sl, #2]
   26d60:	orr	r4, r6, r1, lsl #8
   26d64:	ldrb	r1, [sl, #1]
   26d68:	orr	r1, r4, r1, lsl #16
   26d6c:	movw	r2, #28526	; 0x6f6e
   26d70:	movt	r2, #27251	; 0x6a73
   26d74:	eor	r0, r0, r2
   26d78:	ldrb	r2, [sl]
   26d7c:	orr	r1, r1, r2, lsl #24
   26d80:	movw	r2, #29556	; 0x7374
   26d84:	movt	r2, #29797	; 0x7465
   26d88:	eor	r1, r1, r2
   26d8c:	orrs	r0, r0, r1
   26d90:	bne	26f70 <main@@Base+0x10ee0>
   26d94:	add	r1, sl, #8
   26d98:	mov	r2, #8
   26d9c:	sub	r0, r8, r1
   26da0:	cmp	r0, #8
   26da4:	movcs	r0, r2
   26da8:	and	r0, r0, #15
   26dac:	sub	r7, r0, #1
   26db0:	cmp	r7, #7
   26db4:	bhi	26f7c <main@@Base+0x10eec>
   26db8:	add	r0, pc, #32
   26dbc:	mov	r9, #0
   26dc0:	mov	ip, #0
   26dc4:	mov	lr, #0
   26dc8:	mov	r6, #0
   26dcc:	mov	r3, #0
   26dd0:	mov	r5, #0
   26dd4:	mov	r2, #0
   26dd8:	mov	r4, #0
   26ddc:	ldr	pc, [r0, r7, lsl #2]
   26de0:	andeq	r6, r2, r4, asr #28
   26de4:	andeq	r6, r2, ip, lsr lr
   26de8:	andeq	r6, r2, r4, lsr lr
   26dec:	andeq	r6, r2, ip, lsr #28
   26df0:	andeq	r6, r2, r0, lsr #28
   26df4:	andeq	r6, r2, r4, lsl lr
   26df8:	andeq	r6, r2, r4, lsl #28
   26dfc:	andeq	r6, r2, r0, lsl #28
   26e00:	ldrb	ip, [sl, #15]
   26e04:	ldrb	r0, [sl, #14]
   26e08:	mov	lr, r9
   26e0c:	orr	r0, ip, r0, lsl #8
   26e10:	mov	r9, r0
   26e14:	ldrb	r0, [sl, #13]
   26e18:	mov	r6, lr
   26e1c:	orr	r9, r9, r0, lsl #16
   26e20:	ldrb	r0, [sl, #12]
   26e24:	mov	r3, r6
   26e28:	orr	r9, r9, r0, lsl #24
   26e2c:	ldrb	r0, [sl, #11]
   26e30:	orr	r5, r0, r3
   26e34:	ldrb	r0, [sl, #10]
   26e38:	orr	r2, r5, r0, lsl #8
   26e3c:	ldrb	r0, [sl, #9]
   26e40:	orr	r4, r2, r0, lsl #16
   26e44:	ldrb	r2, [r1]
   26e48:	movw	r0, #28769	; 0x7061
   26e4c:	movw	r3, #25958	; 0x6566
   26e50:	movt	r0, #27000	; 0x6978
   26e54:	movt	r3, #28786	; 0x7072
   26e58:	eor	r0, r9, r0
   26e5c:	orr	r2, r4, r2, lsl #24
   26e60:	eor	r2, r2, r3
   26e64:	orrs	r0, r0, r2
   26e68:	bne	26f7c <main@@Base+0x10eec>
   26e6c:	add	ip, sl, #16
   26e70:	mov	r0, #8
   26e74:	sub	r9, r8, ip
   26e78:	cmp	r9, #8
   26e7c:	movcc	r0, r9
   26e80:	and	r0, r0, #15
   26e84:	sub	r2, r0, #1
   26e88:	cmp	r2, #7
   26e8c:	bhi	272e8 <main@@Base+0x11258>
   26e90:	add	r7, pc, #24
   26e94:	mov	r0, #0
   26e98:	mov	r1, #0
   26e9c:	mov	r3, #0
   26ea0:	mov	r6, #0
   26ea4:	mov	r4, #0
   26ea8:	mov	r5, #0
   26eac:	ldr	pc, [r7, r2, lsl #2]
   26eb0:	andeq	r6, r2, r0, lsl #30
   26eb4:	strdeq	r6, [r2], -r8
   26eb8:	strdeq	r6, [r2], -r0
   26ebc:	andeq	r6, r2, r8, ror #29
   26ec0:	ldrdeq	r6, [r2], -r8
   26ec4:	ldrdeq	r6, [r2], -r0
   26ec8:	ldrdeq	r6, [r2], -r0
   26ecc:	ldrdeq	r6, [r2], -r0
   26ed0:	ldrb	r1, [sl, #21]
   26ed4:	lsl	r1, r1, #16
   26ed8:	ldrb	r2, [sl, #20]
   26edc:	mov	r3, r0
   26ee0:	orr	r1, r1, r2, lsl #24
   26ee4:	mov	r0, r1
   26ee8:	ldrb	r1, [sl, #19]
   26eec:	orr	r6, r1, r3
   26ef0:	ldrb	r1, [sl, #18]
   26ef4:	orr	r4, r6, r1, lsl #8
   26ef8:	ldrb	r1, [sl, #17]
   26efc:	orr	r5, r4, r1, lsl #16
   26f00:	mov	r6, r0
   26f04:	movw	r1, #0
   26f08:	movw	r3, #26990	; 0x696e
   26f0c:	bfc	r6, #0, #16
   26f10:	movt	r1, #26418	; 0x6732
   26f14:	movt	r3, #29299	; 0x7273
   26f18:	eor	r2, r6, r1
   26f1c:	ldrb	r1, [ip]
   26f20:	orr	r1, r5, r1, lsl #24
   26f24:	eor	r5, r1, r3
   26f28:	orrs	r2, r2, r5
   26f2c:	bne	26f88 <main@@Base+0x10ef8>
   26f30:	cmp	r9, #7
   26f34:	blt	272e8 <main@@Base+0x11258>
   26f38:	ldr	r2, [sp, #28]
   26f3c:	mov	r1, sl
   26f40:	ldrb	r0, [r1, #22]!
   26f44:	ldr	r2, [r2]
   26f48:	cmp	r2, #0
   26f4c:	beq	26fe4 <main@@Base+0x10f54>
   26f50:	cmp	r0, #33	; 0x21
   26f54:	bcc	26f60 <main@@Base+0x10ed0>
   26f58:	cmp	r0, #58	; 0x3a
   26f5c:	bne	272e8 <main@@Base+0x11258>
   26f60:	ldr	r0, [sp, #28]
   26f64:	mov	r2, #0
   26f68:	str	r2, [r0]
   26f6c:	b	26ff0 <main@@Base+0x10f60>
   26f70:	mov	r0, r9
   26f74:	mov	r1, sl
   26f78:	b	272f4 <main@@Base+0x11264>
   26f7c:	ldr	r9, [sp, #24]
   26f80:	mov	r0, r9
   26f84:	b	272f4 <main@@Base+0x11264>
   26f88:	cmp	r9, #6
   26f8c:	blt	2728c <main@@Base+0x111fc>
   26f90:	movw	r2, #26990	; 0x696e
   26f94:	and	r0, r0, #-16777216	; 0xff000000
   26f98:	movt	r2, #29299	; 0x7273
   26f9c:	eor	r0, r0, #1728053248	; 0x67000000
   26fa0:	eor	r1, r1, r2
   26fa4:	orrs	r0, r0, r1
   26fa8:	bne	2728c <main@@Base+0x111fc>
   26fac:	ldr	r2, [sp, #28]
   26fb0:	mov	r1, sl
   26fb4:	ldrb	r0, [r1, #21]!
   26fb8:	ldr	r2, [r2]
   26fbc:	cmp	r2, #0
   26fc0:	beq	27014 <main@@Base+0x10f84>
   26fc4:	cmp	r0, #33	; 0x21
   26fc8:	bcc	26fd4 <main@@Base+0x10f44>
   26fcc:	cmp	r0, #58	; 0x3a
   26fd0:	bne	2728c <main@@Base+0x111fc>
   26fd4:	ldr	r0, [sp, #28]
   26fd8:	mov	r2, #0
   26fdc:	str	r2, [r0]
   26fe0:	b	27020 <main@@Base+0x10f90>
   26fe4:	cmp	r0, #34	; 0x22
   26fe8:	bne	272e8 <main@@Base+0x11258>
   26fec:	add	r1, sl, #23
   26ff0:	ldr	r5, [sp, #24]
   26ff4:	sub	r0, r8, r1
   26ff8:	cmp	r0, #2
   26ffc:	blt	27054 <main@@Base+0x10fc4>
   27000:	ldrb	r0, [r1]
   27004:	cmp	r0, #32
   27008:	bls	27040 <main@@Base+0x10fb0>
   2700c:	mov	r4, r1
   27010:	b	2706c <main@@Base+0x10fdc>
   27014:	cmp	r0, #34	; 0x22
   27018:	bne	2728c <main@@Base+0x111fc>
   2701c:	add	r1, sl, #22
   27020:	sub	r0, r8, r1
   27024:	cmp	r0, #2
   27028:	blt	270d4 <main@@Base+0x11044>
   2702c:	ldrb	r0, [r1]
   27030:	cmp	r0, #32
   27034:	bls	270c0 <main@@Base+0x11030>
   27038:	mov	r4, r1
   2703c:	b	270ec <main@@Base+0x1105c>
   27040:	bne	27054 <main@@Base+0x10fc4>
   27044:	mov	r4, r1
   27048:	ldrb	r0, [r4, #1]!
   2704c:	cmp	r0, #32
   27050:	bhi	2706c <main@@Base+0x10fdc>
   27054:	mov	r0, r5
   27058:	mov	r2, r8
   2705c:	mov	r4, ip
   27060:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   27064:	mov	ip, r4
   27068:	mov	r4, r0
   2706c:	mov	r6, ip
   27070:	cmp	r4, r8
   27074:	beq	270a8 <main@@Base+0x11018>
   27078:	ldrb	r0, [r4]
   2707c:	cmp	r0, #58	; 0x3a
   27080:	bne	270a8 <main@@Base+0x11018>
   27084:	add	r1, r4, #1
   27088:	sub	r0, r8, r1
   2708c:	cmp	r0, #2
   27090:	blt	27150 <main@@Base+0x110c0>
   27094:	ldrb	r0, [r1]
   27098:	cmp	r0, #32
   2709c:	bls	27140 <main@@Base+0x110b0>
   270a0:	mov	r4, r1
   270a4:	b	27160 <main@@Base+0x110d0>
   270a8:	mov	r0, r5
   270ac:	mov	r1, r4
   270b0:	mov	r2, r8
   270b4:	mov	r3, #4
   270b8:	bl	337ac <flatcc_json_parser_set_error@@Base>
   270bc:	b	2715c <main@@Base+0x110cc>
   270c0:	bne	270d4 <main@@Base+0x11044>
   270c4:	mov	r4, r1
   270c8:	ldrb	r0, [r4, #1]!
   270cc:	cmp	r0, #32
   270d0:	bhi	270ec <main@@Base+0x1105c>
   270d4:	ldr	r0, [sp, #24]
   270d8:	mov	r2, r8
   270dc:	mov	r4, ip
   270e0:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   270e4:	mov	ip, r4
   270e8:	mov	r4, r0
   270ec:	mov	r7, ip
   270f0:	cmp	r4, r8
   270f4:	beq	27128 <main@@Base+0x11098>
   270f8:	ldrb	r0, [r4]
   270fc:	cmp	r0, #58	; 0x3a
   27100:	bne	27128 <main@@Base+0x11098>
   27104:	add	r1, r4, #1
   27108:	sub	r0, r8, r1
   2710c:	cmp	r0, #2
   27110:	blt	2721c <main@@Base+0x1118c>
   27114:	ldrb	r0, [r1]
   27118:	cmp	r0, #32
   2711c:	bls	2720c <main@@Base+0x1117c>
   27120:	mov	r4, r1
   27124:	b	2722c <main@@Base+0x1119c>
   27128:	ldr	r0, [sp, #24]
   2712c:	mov	r1, r4
   27130:	mov	r2, r8
   27134:	mov	r3, #4
   27138:	bl	337ac <flatcc_json_parser_set_error@@Base>
   2713c:	b	27228 <main@@Base+0x11198>
   27140:	bne	27150 <main@@Base+0x110c0>
   27144:	ldrb	r0, [r4, #2]!
   27148:	cmp	r0, #32
   2714c:	bhi	27160 <main@@Base+0x110d0>
   27150:	mov	r0, r5
   27154:	mov	r2, r8
   27158:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   2715c:	mov	r4, r0
   27160:	mov	ip, r6
   27164:	cmp	r6, r4
   27168:	beq	272e8 <main@@Base+0x11258>
   2716c:	ldr	r9, [sp, #24]
   27170:	mov	r1, #2
   27174:	ldr	r0, [r9]
   27178:	bl	2f88c <flatcc_builder_start_table@@Base>
   2717c:	cmp	r0, #0
   27180:	bne	29e50 <main@@Base+0x13dc0>
   27184:	cmp	r4, r8
   27188:	beq	271c0 <main@@Base+0x11130>
   2718c:	ldrb	r0, [r4]
   27190:	cmp	r0, #123	; 0x7b
   27194:	bne	271c0 <main@@Base+0x11130>
   27198:	ldr	r6, [sp, #32]
   2719c:	add	r1, r4, #1
   271a0:	sub	r0, r8, r1
   271a4:	cmp	r0, #2
   271a8:	blt	274c4 <main@@Base+0x11434>
   271ac:	ldrb	r0, [r1]
   271b0:	cmp	r0, #32
   271b4:	bls	274b4 <main@@Base+0x11424>
   271b8:	mov	r4, r1
   271bc:	b	274d4 <main@@Base+0x11444>
   271c0:	mov	r0, r9
   271c4:	mov	r1, r4
   271c8:	mov	r2, r8
   271cc:	mov	r3, #21
   271d0:	bl	337ac <flatcc_json_parser_set_error@@Base>
   271d4:	ldr	r6, [sp, #32]
   271d8:	mov	r4, r0
   271dc:	ldr	r0, [sp, #20]
   271e0:	ldr	r0, [r0]
   271e4:	cmp	r0, #0
   271e8:	bne	29e50 <main@@Base+0x13dc0>
   271ec:	ldr	r0, [r9]
   271f0:	bl	3021c <flatcc_builder_end_table@@Base>
   271f4:	cmp	r0, #0
   271f8:	beq	29e50 <main@@Base+0x13dc0>
   271fc:	mov	r7, r0
   27200:	ldr	r0, [r9]
   27204:	mov	r1, #1
   27208:	b	27658 <main@@Base+0x115c8>
   2720c:	bne	2721c <main@@Base+0x1118c>
   27210:	ldrb	r0, [r4, #2]!
   27214:	cmp	r0, #32
   27218:	bhi	2722c <main@@Base+0x1119c>
   2721c:	ldr	r0, [sp, #24]
   27220:	mov	r2, r8
   27224:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   27228:	mov	r4, r0
   2722c:	mov	ip, r7
   27230:	cmp	r7, r4
   27234:	beq	2728c <main@@Base+0x111fc>
   27238:	ldr	r9, [sp, #24]
   2723c:	mov	r1, #9
   27240:	ldr	r0, [r9]
   27244:	bl	2f88c <flatcc_builder_start_table@@Base>
   27248:	cmp	r0, #0
   2724c:	bne	29e50 <main@@Base+0x13dc0>
   27250:	cmp	r4, r8
   27254:	beq	273bc <main@@Base+0x1132c>
   27258:	ldrb	r0, [r4]
   2725c:	cmp	r0, #123	; 0x7b
   27260:	bne	273bc <main@@Base+0x1132c>
   27264:	ldr	r6, [sp, #32]
   27268:	add	r1, r4, #1
   2726c:	sub	r0, r8, r1
   27270:	cmp	r0, #2
   27274:	blt	27534 <main@@Base+0x114a4>
   27278:	ldrb	r0, [r1]
   2727c:	cmp	r0, #32
   27280:	bls	27524 <main@@Base+0x11494>
   27284:	mov	r4, r1
   27288:	b	27544 <main@@Base+0x114b4>
   2728c:	movw	r0, #0
   27290:	movt	r0, #26418	; 0x6732
   27294:	add	r0, r0, #65536	; 0x10000
   27298:	eor	r0, r6, r0
   2729c:	orrs	r0, r0, r5
   272a0:	bne	272e8 <main@@Base+0x11258>
   272a4:	cmp	r9, #7
   272a8:	ldr	r9, [sp, #24]
   272ac:	blt	272ec <main@@Base+0x1125c>
   272b0:	ldr	r2, [sp, #28]
   272b4:	mov	r1, sl
   272b8:	ldrb	r0, [r1, #22]!
   272bc:	ldr	r2, [r2]
   272c0:	cmp	r2, #0
   272c4:	beq	27408 <main@@Base+0x11378>
   272c8:	cmp	r0, #33	; 0x21
   272cc:	bcc	272d8 <main@@Base+0x11248>
   272d0:	cmp	r0, #58	; 0x3a
   272d4:	bne	272ec <main@@Base+0x1125c>
   272d8:	ldr	r0, [sp, #28]
   272dc:	mov	r2, #0
   272e0:	str	r2, [r0]
   272e4:	b	27414 <main@@Base+0x11384>
   272e8:	ldr	r9, [sp, #24]
   272ec:	mov	r0, r9
   272f0:	mov	r1, ip
   272f4:	mov	r2, r8
   272f8:	bl	33ecc <flatcc_json_parser_unmatched_symbol@@Base>
   272fc:	ldr	r6, [sp, #32]
   27300:	mov	r4, r0
   27304:	sub	r0, r8, r4
   27308:	cmp	r0, #2
   2730c:	blt	27338 <main@@Base+0x112a8>
   27310:	ldrb	r0, [r4]
   27314:	cmp	r0, #32
   27318:	bls	27324 <main@@Base+0x11294>
   2731c:	mov	r2, r4
   27320:	b	2734c <main@@Base+0x112bc>
   27324:	bne	27338 <main@@Base+0x112a8>
   27328:	mov	r2, r4
   2732c:	ldrb	r0, [r2, #1]!
   27330:	cmp	r0, #32
   27334:	bhi	2734c <main@@Base+0x112bc>
   27338:	mov	r0, r9
   2733c:	mov	r1, r4
   27340:	mov	r2, r8
   27344:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   27348:	mov	r2, r0
   2734c:	cmp	r2, r8
   27350:	beq	29d64 <main@@Base+0x13cd4>
   27354:	ldrb	r0, [r2]
   27358:	cmp	r0, #44	; 0x2c
   2735c:	bne	29d6c <main@@Base+0x13cdc>
   27360:	add	r1, r2, #1
   27364:	sub	r0, r8, r1
   27368:	cmp	r0, #2
   2736c:	blt	27394 <main@@Base+0x11304>
   27370:	ldrb	r0, [r1]
   27374:	cmp	r0, #32
   27378:	bls	27384 <main@@Base+0x112f4>
   2737c:	mov	r2, r1
   27380:	b	273a4 <main@@Base+0x11314>
   27384:	bne	27394 <main@@Base+0x11304>
   27388:	ldrb	r0, [r2, #2]!
   2738c:	cmp	r0, #32
   27390:	bhi	273a4 <main@@Base+0x11314>
   27394:	mov	r0, r9
   27398:	mov	r2, r8
   2739c:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   273a0:	mov	r2, r0
   273a4:	cmp	r2, r8
   273a8:	beq	29dbc <main@@Base+0x13d2c>
   273ac:	ldrb	r0, [r2]
   273b0:	cmp	r0, #125	; 0x7d
   273b4:	bne	26c64 <main@@Base+0x10bd4>
   273b8:	b	29d74 <main@@Base+0x13ce4>
   273bc:	mov	r0, r9
   273c0:	mov	r1, r4
   273c4:	mov	r2, r8
   273c8:	mov	r3, #21
   273cc:	bl	337ac <flatcc_json_parser_set_error@@Base>
   273d0:	ldr	r6, [sp, #32]
   273d4:	mov	r4, r0
   273d8:	ldr	r0, [sp, #20]
   273dc:	ldr	r0, [r0]
   273e0:	cmp	r0, #0
   273e4:	bne	29e50 <main@@Base+0x13dc0>
   273e8:	ldr	r0, [r9]
   273ec:	bl	3021c <flatcc_builder_end_table@@Base>
   273f0:	cmp	r0, #0
   273f4:	beq	29e50 <main@@Base+0x13dc0>
   273f8:	mov	r7, r0
   273fc:	ldr	r0, [r9]
   27400:	mov	r1, #0
   27404:	b	27658 <main@@Base+0x115c8>
   27408:	cmp	r0, #34	; 0x22
   2740c:	bne	272ec <main@@Base+0x1125c>
   27410:	add	r1, sl, #23
   27414:	sub	r0, r8, r1
   27418:	cmp	r0, #2
   2741c:	blt	27448 <main@@Base+0x113b8>
   27420:	ldrb	r0, [r1]
   27424:	cmp	r0, #32
   27428:	bls	27434 <main@@Base+0x113a4>
   2742c:	mov	r4, r1
   27430:	b	27460 <main@@Base+0x113d0>
   27434:	bne	27448 <main@@Base+0x113b8>
   27438:	mov	r4, r1
   2743c:	ldrb	r0, [r4, #1]!
   27440:	cmp	r0, #32
   27444:	bhi	27460 <main@@Base+0x113d0>
   27448:	mov	r0, r9
   2744c:	mov	r2, r8
   27450:	mov	r4, ip
   27454:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   27458:	mov	ip, r4
   2745c:	mov	r4, r0
   27460:	mov	r5, ip
   27464:	cmp	r4, r8
   27468:	beq	2749c <main@@Base+0x1140c>
   2746c:	ldrb	r0, [r4]
   27470:	cmp	r0, #58	; 0x3a
   27474:	bne	2749c <main@@Base+0x1140c>
   27478:	add	r1, r4, #1
   2747c:	sub	r0, r8, r1
   27480:	cmp	r0, #2
   27484:	blt	275a4 <main@@Base+0x11514>
   27488:	ldrb	r0, [r1]
   2748c:	cmp	r0, #32
   27490:	bls	27594 <main@@Base+0x11504>
   27494:	mov	r4, r1
   27498:	b	275b4 <main@@Base+0x11524>
   2749c:	mov	r0, r9
   274a0:	mov	r1, r4
   274a4:	mov	r2, r8
   274a8:	mov	r3, #4
   274ac:	bl	337ac <flatcc_json_parser_set_error@@Base>
   274b0:	b	275b0 <main@@Base+0x11520>
   274b4:	bne	274c4 <main@@Base+0x11434>
   274b8:	ldrb	r0, [r4, #2]!
   274bc:	cmp	r0, #32
   274c0:	bhi	274d4 <main@@Base+0x11444>
   274c4:	mov	r0, r9
   274c8:	mov	r2, r8
   274cc:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   274d0:	mov	r4, r0
   274d4:	cmp	r4, r8
   274d8:	mov	r2, r8
   274dc:	beq	277a4 <main@@Base+0x11714>
   274e0:	ldrb	r0, [r4]
   274e4:	cmp	r0, #125	; 0x7d
   274e8:	bne	2751c <main@@Base+0x1148c>
   274ec:	add	r1, r4, #1
   274f0:	sub	r0, r8, r1
   274f4:	cmp	r0, #2
   274f8:	blt	27f08 <main@@Base+0x11e78>
   274fc:	ldrb	r0, [r1]
   27500:	cmp	r0, #32
   27504:	bhi	27ec8 <main@@Base+0x11e38>
   27508:	bne	27f08 <main@@Base+0x11e78>
   2750c:	ldrb	r0, [r4, #2]!
   27510:	cmp	r0, #32
   27514:	bls	27f08 <main@@Base+0x11e78>
   27518:	b	271dc <main@@Base+0x1114c>
   2751c:	mov	r2, r4
   27520:	b	277a4 <main@@Base+0x11714>
   27524:	bne	27534 <main@@Base+0x114a4>
   27528:	ldrb	r0, [r4, #2]!
   2752c:	cmp	r0, #32
   27530:	bhi	27544 <main@@Base+0x114b4>
   27534:	mov	r0, r9
   27538:	mov	r2, r8
   2753c:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   27540:	mov	r4, r0
   27544:	cmp	r4, r8
   27548:	mov	r2, r8
   2754c:	beq	28900 <main@@Base+0x12870>
   27550:	ldrb	r0, [r4]
   27554:	cmp	r0, #125	; 0x7d
   27558:	bne	2758c <main@@Base+0x114fc>
   2755c:	add	r1, r4, #1
   27560:	sub	r0, r8, r1
   27564:	cmp	r0, #2
   27568:	blt	29d54 <main@@Base+0x13cc4>
   2756c:	ldrb	r0, [r1]
   27570:	cmp	r0, #32
   27574:	bhi	29d14 <main@@Base+0x13c84>
   27578:	bne	29d54 <main@@Base+0x13cc4>
   2757c:	ldrb	r0, [r4, #2]!
   27580:	cmp	r0, #32
   27584:	bhi	273d8 <main@@Base+0x11348>
   27588:	b	29d54 <main@@Base+0x13cc4>
   2758c:	mov	r2, r4
   27590:	b	28900 <main@@Base+0x12870>
   27594:	bne	275a4 <main@@Base+0x11514>
   27598:	ldrb	r0, [r4, #2]!
   2759c:	cmp	r0, #32
   275a0:	bhi	275b4 <main@@Base+0x11524>
   275a4:	mov	r0, r9
   275a8:	mov	r2, r8
   275ac:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   275b0:	mov	r4, r0
   275b4:	mov	ip, r5
   275b8:	cmp	r5, r4
   275bc:	beq	272ec <main@@Base+0x1125c>
   275c0:	ldr	r0, [r9]
   275c4:	mov	r1, #2
   275c8:	bl	2f88c <flatcc_builder_start_table@@Base>
   275cc:	cmp	r0, #0
   275d0:	bne	29e50 <main@@Base+0x13dc0>
   275d4:	cmp	r4, r8
   275d8:	beq	27610 <main@@Base+0x11580>
   275dc:	ldrb	r0, [r4]
   275e0:	cmp	r0, #123	; 0x7b
   275e4:	bne	27610 <main@@Base+0x11580>
   275e8:	ldr	r6, [sp, #32]
   275ec:	add	r1, r4, #1
   275f0:	sub	r0, r8, r1
   275f4:	cmp	r0, #2
   275f8:	blt	2767c <main@@Base+0x115ec>
   275fc:	ldrb	r0, [r1]
   27600:	cmp	r0, #32
   27604:	bls	2766c <main@@Base+0x115dc>
   27608:	mov	r4, r1
   2760c:	b	2768c <main@@Base+0x115fc>
   27610:	mov	r0, r9
   27614:	mov	r1, r4
   27618:	mov	r2, r8
   2761c:	mov	r3, #21
   27620:	bl	337ac <flatcc_json_parser_set_error@@Base>
   27624:	ldr	r6, [sp, #32]
   27628:	mov	r4, r0
   2762c:	ldr	r0, [sp, #20]
   27630:	ldr	r0, [r0]
   27634:	cmp	r0, #0
   27638:	bne	29e50 <main@@Base+0x13dc0>
   2763c:	ldr	r0, [r9]
   27640:	bl	3021c <flatcc_builder_end_table@@Base>
   27644:	cmp	r0, #0
   27648:	beq	29e50 <main@@Base+0x13dc0>
   2764c:	mov	r7, r0
   27650:	ldr	r0, [r9]
   27654:	mov	r1, #2
   27658:	bl	30a20 <flatcc_builder_table_add_offset@@Base>
   2765c:	cmp	r0, #0
   27660:	beq	29df0 <main@@Base+0x13d60>
   27664:	str	r7, [r0]
   27668:	b	27304 <main@@Base+0x11274>
   2766c:	bne	2767c <main@@Base+0x115ec>
   27670:	ldrb	r0, [r4, #2]!
   27674:	cmp	r0, #32
   27678:	bhi	2768c <main@@Base+0x115fc>
   2767c:	mov	r0, r9
   27680:	mov	r2, r8
   27684:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   27688:	mov	r4, r0
   2768c:	cmp	r4, r8
   27690:	mov	r2, r8
   27694:	beq	27fd8 <main@@Base+0x11f48>
   27698:	ldrb	r0, [r4]
   2769c:	cmp	r0, #125	; 0x7d
   276a0:	bne	276d4 <main@@Base+0x11644>
   276a4:	add	r1, r4, #1
   276a8:	sub	r0, r8, r1
   276ac:	cmp	r0, #2
   276b0:	blt	28830 <main@@Base+0x127a0>
   276b4:	ldrb	r0, [r1]
   276b8:	cmp	r0, #32
   276bc:	bhi	287e8 <main@@Base+0x12758>
   276c0:	bne	28830 <main@@Base+0x127a0>
   276c4:	ldrb	r0, [r4, #2]!
   276c8:	cmp	r0, #32
   276cc:	bls	28830 <main@@Base+0x127a0>
   276d0:	b	2762c <main@@Base+0x1159c>
   276d4:	mov	r2, r4
   276d8:	b	27fd8 <main@@Base+0x11f48>
   276dc:	mov	r4, r8
   276e0:	b	27728 <main@@Base+0x11698>
   276e4:	mov	r4, r7
   276e8:	b	27728 <main@@Base+0x11698>
   276ec:	ldr	r0, [fp, #-36]	; 0xffffffdc
   276f0:	cmp	r0, #0
   276f4:	beq	27718 <main@@Base+0x11688>
   276f8:	ldr	r9, [sp, #24]
   276fc:	mov	r1, r4
   27700:	mov	r2, r8
   27704:	mov	r3, #7
   27708:	mov	r0, r9
   2770c:	bl	337ac <flatcc_json_parser_set_error@@Base>
   27710:	mov	r4, r0
   27714:	b	27724 <main@@Base+0x11694>
   27718:	ldr	r5, [fp, #-40]	; 0xffffffd8
   2771c:	ldr	r9, [sp, #24]
   27720:	str	r5, [fp, #-44]	; 0xffffffd4
   27724:	ldr	r6, [sp, #32]
   27728:	cmp	r7, r4
   2772c:	bne	2776c <main@@Base+0x116dc>
   27730:	movw	r3, #45620	; 0xb234
   27734:	sub	r0, fp, #44	; 0x2c
   27738:	mov	r1, r7
   2773c:	mov	r2, r8
   27740:	str	r0, [sp]
   27744:	mov	r0, r9
   27748:	movt	r3, #5
   2774c:	bl	250e0 <main@@Base+0xf050>
   27750:	mov	r4, r0
   27754:	cmp	r0, r7
   27758:	cmpne	r4, r8
   2775c:	beq	29e4c <main@@Base+0x13dbc>
   27760:	ldr	r5, [fp, #-44]	; 0xffffffd4
   27764:	ldr	r9, [sp, #24]
   27768:	ldr	r6, [sp, #32]
   2776c:	cmp	r5, #0
   27770:	bne	27780 <main@@Base+0x116f0>
   27774:	ldrb	r0, [r9, #8]
   27778:	tst	r0, #2
   2777c:	beq	27de4 <main@@Base+0x11d54>
   27780:	ldr	r0, [r9]
   27784:	mov	r1, #1
   27788:	mov	r2, #4
   2778c:	mov	r3, #4
   27790:	bl	30b5c <flatcc_builder_table_add@@Base>
   27794:	cmp	r0, #0
   27798:	beq	29e4c <main@@Base+0x13dbc>
   2779c:	str	r5, [r0]
   277a0:	b	27de4 <main@@Base+0x11d54>
   277a4:	cmp	r2, r8
   277a8:	mov	r1, r8
   277ac:	beq	27804 <main@@Base+0x11774>
   277b0:	ldrb	r0, [r2]
   277b4:	cmp	r0, #46	; 0x2e
   277b8:	beq	277d8 <main@@Base+0x11748>
   277bc:	cmp	r0, #34	; 0x22
   277c0:	bne	277f4 <main@@Base+0x11764>
   277c4:	ldr	r0, [sp, #28]
   277c8:	mov	r1, #0
   277cc:	str	r1, [r0]
   277d0:	add	r1, r2, #1
   277d4:	b	27804 <main@@Base+0x11774>
   277d8:	mov	r1, r2
   277dc:	mov	r0, r9
   277e0:	mov	r2, r8
   277e4:	mov	r3, #5
   277e8:	bl	337ac <flatcc_json_parser_set_error@@Base>
   277ec:	mov	r1, r0
   277f0:	b	27804 <main@@Base+0x11774>
   277f4:	ldr	r0, [sp, #28]
   277f8:	mov	r1, #1
   277fc:	str	r1, [r0]
   27800:	mov	r1, r2
   27804:	sub	r0, r8, r1
   27808:	mov	r2, #8
   2780c:	cmp	r0, #8
   27810:	movcs	r0, r2
   27814:	and	r0, r0, #15
   27818:	sub	r7, r0, #1
   2781c:	cmp	r7, #7
   27820:	bhi	27a08 <main@@Base+0x11978>
   27824:	add	r0, pc, #32
   27828:	mov	r9, #0
   2782c:	mov	ip, #0
   27830:	mov	lr, #0
   27834:	mov	sl, #0
   27838:	mov	r3, #0
   2783c:	mov	r5, #0
   27840:	mov	r2, #0
   27844:	mov	r4, #0
   27848:	ldr	pc, [r0, r7, lsl #2]
   2784c:			; <UNDEFINED> instruction: 0x000278b0
   27850:	andeq	r7, r2, r8, lsr #17
   27854:	andeq	r7, r2, r0, lsr #17
   27858:	muleq	r2, r8, r8
   2785c:	andeq	r7, r2, ip, lsl #17
   27860:	andeq	r7, r2, r0, lsl #17
   27864:	andeq	r7, r2, r0, ror r8
   27868:	andeq	r7, r2, ip, ror #16
   2786c:	ldrb	ip, [r1, #7]
   27870:	ldrb	r0, [r1, #6]
   27874:	mov	lr, r9
   27878:	orr	r0, ip, r0, lsl #8
   2787c:	mov	r9, r0
   27880:	ldrb	r0, [r1, #5]
   27884:	mov	sl, lr
   27888:	orr	r9, r9, r0, lsl #16
   2788c:	ldrb	r0, [r1, #4]
   27890:	mov	r3, sl
   27894:	orr	r9, r9, r0, lsl #24
   27898:	ldrb	r0, [r1, #3]
   2789c:	orr	r5, r0, r3
   278a0:	ldrb	r0, [r1, #2]
   278a4:	orr	r2, r5, r0, lsl #8
   278a8:	ldrb	r0, [r1, #1]
   278ac:	orr	r4, r2, r0, lsl #16
   278b0:	ldrb	r2, [r1]
   278b4:	movw	r0, #25186	; 0x6262
   278b8:	movw	r3, #24929	; 0x6161
   278bc:	movt	r0, #24418	; 0x5f62
   278c0:	movt	r3, #24929	; 0x6161
   278c4:	eor	r0, r9, r0
   278c8:	ldr	r9, [sp, #24]
   278cc:	orr	r2, r4, r2, lsl #24
   278d0:	eor	r2, r2, r3
   278d4:	orrs	r0, r0, r2
   278d8:	bne	27a08 <main@@Base+0x11978>
   278dc:	add	r4, r1, #8
   278e0:	mov	r0, #8
   278e4:	sub	lr, r8, r4
   278e8:	cmp	lr, #8
   278ec:	movcc	r0, lr
   278f0:	and	r0, r0, #15
   278f4:	sub	ip, r0, #1
   278f8:	cmp	ip, #7
   278fc:	bhi	27dd0 <main@@Base+0x11d40>
   27900:	str	r4, [sp, #8]
   27904:	add	r9, pc, #32
   27908:	mov	r2, #0
   2790c:	mov	r6, #0
   27910:	mov	sl, #0
   27914:	mov	r5, #0
   27918:	mov	r7, #0
   2791c:	mov	r4, #0
   27920:	mov	r0, #0
   27924:	mov	r3, #0
   27928:	ldr	pc, [r9, ip, lsl #2]
   2792c:	muleq	r2, r0, r9
   27930:	andeq	r7, r2, r8, lsl #19
   27934:	andeq	r7, r2, r0, lsl #19
   27938:	andeq	r7, r2, r8, ror r9
   2793c:	andeq	r7, r2, ip, ror #18
   27940:	andeq	r7, r2, r0, ror #18
   27944:	andeq	r7, r2, r0, asr r9
   27948:	andeq	r7, r2, ip, asr #18
   2794c:	ldrb	r6, [r1, #15]
   27950:	ldrb	r0, [r1, #14]
   27954:	mov	sl, r2
   27958:	orr	r0, r6, r0, lsl #8
   2795c:	mov	r2, r0
   27960:	ldrb	r0, [r1, #13]
   27964:	mov	r5, sl
   27968:	orr	r2, r2, r0, lsl #16
   2796c:	ldrb	r0, [r1, #12]
   27970:	mov	r7, r5
   27974:	orr	r2, r2, r0, lsl #24
   27978:	ldrb	r0, [r1, #11]
   2797c:	orr	r4, r0, r7
   27980:	ldrb	r0, [r1, #10]
   27984:	orr	r0, r4, r0, lsl #8
   27988:	ldrb	r3, [r1, #9]
   2798c:	orr	r3, r0, r3, lsl #16
   27990:	ldr	r4, [sp, #8]
   27994:	movw	r7, #29440	; 0x7300
   27998:	bic	r0, r2, #255	; 0xff
   2799c:	movt	r7, #25968	; 0x6570
   279a0:	eor	r7, r0, r7
   279a4:	ldrb	r0, [r4]
   279a8:	orr	r0, r3, r0, lsl #24
   279ac:	movw	r3, #29556	; 0x7374
   279b0:	movt	r3, #25183	; 0x625f
   279b4:	eor	r0, r0, r3
   279b8:	orrs	r3, r7, r0
   279bc:	bne	27a10 <main@@Base+0x11980>
   279c0:	ldr	r9, [sp, #24]
   279c4:	ldr	r6, [sp, #32]
   279c8:	cmp	lr, #8
   279cc:	blt	27dd0 <main@@Base+0x11d40>
   279d0:	ldr	r3, [sp, #28]
   279d4:	mov	r2, r1
   279d8:	ldrb	r0, [r2, #15]!
   279dc:	ldr	r3, [r3]
   279e0:	cmp	r3, #0
   279e4:	beq	27a6c <main@@Base+0x119dc>
   279e8:	cmp	r0, #33	; 0x21
   279ec:	bcc	279f8 <main@@Base+0x11968>
   279f0:	cmp	r0, #58	; 0x3a
   279f4:	bne	27dd0 <main@@Base+0x11d40>
   279f8:	ldr	r0, [sp, #28]
   279fc:	mov	r1, #0
   27a00:	str	r1, [r0]
   27a04:	b	27a78 <main@@Base+0x119e8>
   27a08:	mov	r0, r9
   27a0c:	b	27dd8 <main@@Base+0x11d48>
   27a10:	movw	r3, #29791	; 0x745f
   27a14:	ldr	r9, [sp, #24]
   27a18:	ldr	r6, [sp, #32]
   27a1c:	movt	r3, #24946	; 0x6172
   27a20:	eor	r2, r2, r3
   27a24:	orrs	r0, r2, r0
   27a28:	bne	27dd0 <main@@Base+0x11d40>
   27a2c:	cmp	lr, #9
   27a30:	blt	27dd0 <main@@Base+0x11d40>
   27a34:	ldr	r3, [sp, #28]
   27a38:	mov	r2, r1
   27a3c:	ldrb	r0, [r2, #16]!
   27a40:	ldr	r3, [r3]
   27a44:	cmp	r3, #0
   27a48:	beq	27a98 <main@@Base+0x11a08>
   27a4c:	cmp	r0, #33	; 0x21
   27a50:	bcc	27a5c <main@@Base+0x119cc>
   27a54:	cmp	r0, #58	; 0x3a
   27a58:	bne	27dd0 <main@@Base+0x11d40>
   27a5c:	ldr	r0, [sp, #28]
   27a60:	mov	r1, #0
   27a64:	str	r1, [r0]
   27a68:	b	27aa4 <main@@Base+0x11a14>
   27a6c:	cmp	r0, #34	; 0x22
   27a70:	bne	27dd0 <main@@Base+0x11d40>
   27a74:	add	r2, r1, #16
   27a78:	sub	r0, r8, r2
   27a7c:	cmp	r0, #2
   27a80:	blt	27ad8 <main@@Base+0x11a48>
   27a84:	ldrb	r0, [r2]
   27a88:	cmp	r0, #32
   27a8c:	bls	27ac4 <main@@Base+0x11a34>
   27a90:	mov	r7, r2
   27a94:	b	27aec <main@@Base+0x11a5c>
   27a98:	cmp	r0, #34	; 0x22
   27a9c:	bne	27dd0 <main@@Base+0x11d40>
   27aa0:	add	r2, r1, #17
   27aa4:	sub	r0, r8, r2
   27aa8:	cmp	r0, #2
   27aac:	blt	27b50 <main@@Base+0x11ac0>
   27ab0:	ldrb	r0, [r2]
   27ab4:	cmp	r0, #32
   27ab8:	bls	27b3c <main@@Base+0x11aac>
   27abc:	mov	r7, r2
   27ac0:	b	27b64 <main@@Base+0x11ad4>
   27ac4:	bne	27ad8 <main@@Base+0x11a48>
   27ac8:	mov	r7, r2
   27acc:	ldrb	r0, [r7, #1]!
   27ad0:	cmp	r0, #32
   27ad4:	bhi	27aec <main@@Base+0x11a5c>
   27ad8:	mov	r1, r2
   27adc:	mov	r0, r9
   27ae0:	mov	r2, r8
   27ae4:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   27ae8:	mov	r7, r0
   27aec:	cmp	r7, r8
   27af0:	beq	27b24 <main@@Base+0x11a94>
   27af4:	ldrb	r0, [r7]
   27af8:	cmp	r0, #58	; 0x3a
   27afc:	bne	27b24 <main@@Base+0x11a94>
   27b00:	add	r1, r7, #1
   27b04:	sub	r0, r8, r1
   27b08:	cmp	r0, #2
   27b0c:	blt	27bd0 <main@@Base+0x11b40>
   27b10:	ldrb	r0, [r1]
   27b14:	cmp	r0, #32
   27b18:	bls	27bc0 <main@@Base+0x11b30>
   27b1c:	mov	r7, r1
   27b20:	b	27be0 <main@@Base+0x11b50>
   27b24:	mov	r0, r9
   27b28:	mov	r1, r7
   27b2c:	mov	r2, r8
   27b30:	mov	r3, #4
   27b34:	bl	337ac <flatcc_json_parser_set_error@@Base>
   27b38:	b	27bdc <main@@Base+0x11b4c>
   27b3c:	bne	27b50 <main@@Base+0x11ac0>
   27b40:	mov	r7, r2
   27b44:	ldrb	r0, [r7, #1]!
   27b48:	cmp	r0, #32
   27b4c:	bhi	27b64 <main@@Base+0x11ad4>
   27b50:	mov	r1, r2
   27b54:	mov	r0, r9
   27b58:	mov	r2, r8
   27b5c:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   27b60:	mov	r7, r0
   27b64:	cmp	r7, r8
   27b68:	beq	27ba8 <main@@Base+0x11b18>
   27b6c:	ldrb	r0, [r7]
   27b70:	cmp	r0, #58	; 0x3a
   27b74:	bne	27ba8 <main@@Base+0x11b18>
   27b78:	add	r1, r7, #1
   27b7c:	sub	r0, r8, r1
   27b80:	cmp	r0, #2
   27b84:	blt	27d4c <main@@Base+0x11cbc>
   27b88:	ldrb	r0, [r1]
   27b8c:	cmp	r0, #32
   27b90:	bls	27d30 <main@@Base+0x11ca0>
   27b94:	ldr	r9, [sp, #24]
   27b98:	ldr	r6, [sp, #32]
   27b9c:	ldr	r4, [sp, #8]
   27ba0:	mov	r7, r1
   27ba4:	b	27d5c <main@@Base+0x11ccc>
   27ba8:	mov	r0, r9
   27bac:	mov	r1, r7
   27bb0:	mov	r2, r8
   27bb4:	mov	r3, #4
   27bb8:	bl	337ac <flatcc_json_parser_set_error@@Base>
   27bbc:	b	27d58 <main@@Base+0x11cc8>
   27bc0:	bne	27bd0 <main@@Base+0x11b40>
   27bc4:	ldrb	r0, [r7, #2]!
   27bc8:	cmp	r0, #32
   27bcc:	bhi	27be0 <main@@Base+0x11b50>
   27bd0:	mov	r0, r9
   27bd4:	mov	r2, r8
   27bd8:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   27bdc:	mov	r7, r0
   27be0:	cmp	r4, r7
   27be4:	beq	27dd0 <main@@Base+0x11d40>
   27be8:	mov	r5, #0
   27bec:	cmp	r7, r8
   27bf0:	str	r5, [fp, #-36]	; 0xffffffdc
   27bf4:	str	r5, [fp, #-40]	; 0xffffffd8
   27bf8:	str	r5, [sp, #44]	; 0x2c
   27bfc:	str	r5, [sp, #40]	; 0x28
   27c00:	str	r5, [fp, #-44]	; 0xffffffd4
   27c04:	beq	27c60 <main@@Base+0x11bd0>
   27c08:	sub	r0, fp, #40	; 0x28
   27c0c:	mov	r1, r7
   27c10:	mov	r2, r8
   27c14:	sub	r3, fp, #44	; 0x2c
   27c18:	str	r0, [sp]
   27c1c:	mov	r0, r9
   27c20:	bl	356c0 <flatcc_json_parser_integer@@Base>
   27c24:	cmp	r0, r7
   27c28:	beq	27c6c <main@@Base+0x11bdc>
   27c2c:	sub	sl, fp, #44	; 0x2c
   27c30:	mov	r4, r0
   27c34:	ldm	sl, {r0, r5, sl}
   27c38:	cmp	r0, #0
   27c3c:	beq	27c7c <main@@Base+0x11bec>
   27c40:	subs	r0, r5, #1
   27c44:	sbcs	r0, sl, #-2147483648	; 0x80000000
   27c48:	bcc	27ca8 <main@@Base+0x11c18>
   27c4c:	mov	r0, r9
   27c50:	mov	r1, r4
   27c54:	mov	r2, r8
   27c58:	mov	r3, #8
   27c5c:	b	27c94 <main@@Base+0x11c04>
   27c60:	mov	sl, #0
   27c64:	mov	r4, r8
   27c68:	b	27cb8 <main@@Base+0x11c28>
   27c6c:	mov	r5, #0
   27c70:	mov	sl, #0
   27c74:	mov	r4, r7
   27c78:	b	27cb8 <main@@Base+0x11c28>
   27c7c:	cmn	sl, #1
   27c80:	bgt	27cb0 <main@@Base+0x11c20>
   27c84:	mov	r0, r9
   27c88:	mov	r1, r4
   27c8c:	mov	r2, r8
   27c90:	mov	r3, #7
   27c94:	bl	337ac <flatcc_json_parser_set_error@@Base>
   27c98:	mov	r4, r0
   27c9c:	mov	r5, #0
   27ca0:	mov	sl, #0
   27ca4:	b	27cb8 <main@@Base+0x11c28>
   27ca8:	rsbs	r5, r5, #0
   27cac:	rsc	sl, sl, #0
   27cb0:	str	r5, [sp, #40]	; 0x28
   27cb4:	str	sl, [sp, #44]	; 0x2c
   27cb8:	cmp	r7, r4
   27cbc:	bne	27cf8 <main@@Base+0x11c68>
   27cc0:	movw	r3, #45608	; 0xb228
   27cc4:	add	r0, sp, #40	; 0x28
   27cc8:	mov	r1, r7
   27ccc:	mov	r2, r8
   27cd0:	str	r0, [sp]
   27cd4:	mov	r0, r9
   27cd8:	movt	r3, #5
   27cdc:	bl	24ed4 <main@@Base+0xee44>
   27ce0:	mov	r4, r0
   27ce4:	cmp	r0, r7
   27ce8:	cmpne	r4, r8
   27cec:	beq	29e4c <main@@Base+0x13dbc>
   27cf0:	ldr	r5, [sp, #40]	; 0x28
   27cf4:	ldr	sl, [sp, #44]	; 0x2c
   27cf8:	orrs	r0, r5, sl
   27cfc:	bne	27d0c <main@@Base+0x11c7c>
   27d00:	ldrb	r0, [r9, #8]
   27d04:	tst	r0, #2
   27d08:	beq	27de4 <main@@Base+0x11d54>
   27d0c:	ldr	r0, [r9]
   27d10:	mov	r1, #0
   27d14:	mov	r2, #8
   27d18:	mov	r3, #8
   27d1c:	bl	30b5c <flatcc_builder_table_add@@Base>
   27d20:	cmp	r0, #0
   27d24:	beq	29e4c <main@@Base+0x13dbc>
   27d28:	stm	r0, {r5, sl}
   27d2c:	b	27de4 <main@@Base+0x11d54>
   27d30:	ldr	r9, [sp, #24]
   27d34:	ldr	r6, [sp, #32]
   27d38:	ldr	r4, [sp, #8]
   27d3c:	bne	27d4c <main@@Base+0x11cbc>
   27d40:	ldrb	r0, [r7, #2]!
   27d44:	cmp	r0, #32
   27d48:	bhi	27d5c <main@@Base+0x11ccc>
   27d4c:	mov	r0, r9
   27d50:	mov	r2, r8
   27d54:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   27d58:	mov	r7, r0
   27d5c:	cmp	r4, r7
   27d60:	beq	27dd0 <main@@Base+0x11d40>
   27d64:	mov	r5, #0
   27d68:	cmp	r7, r8
   27d6c:	str	r5, [fp, #-36]	; 0xffffffdc
   27d70:	str	r5, [fp, #-40]	; 0xffffffd8
   27d74:	str	r5, [fp, #-44]	; 0xffffffd4
   27d78:	str	r5, [sp, #40]	; 0x28
   27d7c:	beq	276dc <main@@Base+0x1164c>
   27d80:	sub	r0, fp, #40	; 0x28
   27d84:	mov	r1, r7
   27d88:	mov	r2, r8
   27d8c:	add	r3, sp, #40	; 0x28
   27d90:	str	r0, [sp]
   27d94:	mov	r0, r9
   27d98:	bl	356c0 <flatcc_json_parser_integer@@Base>
   27d9c:	cmp	r0, r7
   27da0:	beq	276e4 <main@@Base+0x11654>
   27da4:	mov	r4, r0
   27da8:	ldr	r0, [sp, #40]	; 0x28
   27dac:	cmp	r0, #0
   27db0:	beq	276ec <main@@Base+0x1165c>
   27db4:	mov	r0, r9
   27db8:	mov	r1, r4
   27dbc:	mov	r2, r8
   27dc0:	mov	r3, #8
   27dc4:	bl	337ac <flatcc_json_parser_set_error@@Base>
   27dc8:	mov	r4, r0
   27dcc:	b	27728 <main@@Base+0x11698>
   27dd0:	mov	r0, r9
   27dd4:	mov	r1, r4
   27dd8:	mov	r2, r8
   27ddc:	bl	33ecc <flatcc_json_parser_unmatched_symbol@@Base>
   27de0:	mov	r4, r0
   27de4:	sub	r0, r8, r4
   27de8:	cmp	r0, #2
   27dec:	blt	27e18 <main@@Base+0x11d88>
   27df0:	ldrb	r0, [r4]
   27df4:	cmp	r0, #32
   27df8:	bls	27e04 <main@@Base+0x11d74>
   27dfc:	mov	r2, r4
   27e00:	b	27e2c <main@@Base+0x11d9c>
   27e04:	bne	27e18 <main@@Base+0x11d88>
   27e08:	mov	r2, r4
   27e0c:	ldrb	r0, [r2, #1]!
   27e10:	cmp	r0, #32
   27e14:	bhi	27e2c <main@@Base+0x11d9c>
   27e18:	mov	r0, r9
   27e1c:	mov	r1, r4
   27e20:	mov	r2, r8
   27e24:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   27e28:	mov	r2, r0
   27e2c:	cmp	r2, r8
   27e30:	beq	27e9c <main@@Base+0x11e0c>
   27e34:	ldrb	r0, [r2]
   27e38:	cmp	r0, #44	; 0x2c
   27e3c:	bne	27ea4 <main@@Base+0x11e14>
   27e40:	add	r1, r2, #1
   27e44:	sub	r0, r8, r1
   27e48:	cmp	r0, #2
   27e4c:	blt	27e74 <main@@Base+0x11de4>
   27e50:	ldrb	r0, [r1]
   27e54:	cmp	r0, #32
   27e58:	bls	27e64 <main@@Base+0x11dd4>
   27e5c:	mov	r2, r1
   27e60:	b	27e84 <main@@Base+0x11df4>
   27e64:	bne	27e74 <main@@Base+0x11de4>
   27e68:	ldrb	r0, [r2, #2]!
   27e6c:	cmp	r0, #32
   27e70:	bhi	27e84 <main@@Base+0x11df4>
   27e74:	mov	r0, r9
   27e78:	mov	r2, r8
   27e7c:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   27e80:	mov	r2, r0
   27e84:	cmp	r2, r8
   27e88:	beq	27ed0 <main@@Base+0x11e40>
   27e8c:	ldrb	r0, [r2]
   27e90:	cmp	r0, #125	; 0x7d
   27e94:	bne	277a4 <main@@Base+0x11714>
   27e98:	b	27eac <main@@Base+0x11e1c>
   27e9c:	mov	r4, r8
   27ea0:	b	271dc <main@@Base+0x1114c>
   27ea4:	cmp	r0, #125	; 0x7d
   27ea8:	bne	27edc <main@@Base+0x11e4c>
   27eac:	add	r1, r2, #1
   27eb0:	sub	r0, r8, r1
   27eb4:	cmp	r0, #2
   27eb8:	blt	27f08 <main@@Base+0x11e78>
   27ebc:	ldrb	r0, [r1]
   27ec0:	cmp	r0, #32
   27ec4:	bls	27ef4 <main@@Base+0x11e64>
   27ec8:	mov	r4, r1
   27ecc:	b	271dc <main@@Base+0x1114c>
   27ed0:	mov	r0, r9
   27ed4:	mov	r1, r8
   27ed8:	b	27ee4 <main@@Base+0x11e54>
   27edc:	mov	r0, r9
   27ee0:	mov	r1, r2
   27ee4:	mov	r2, r8
   27ee8:	mov	r3, #10
   27eec:	bl	337ac <flatcc_json_parser_set_error@@Base>
   27ef0:	b	271d8 <main@@Base+0x11148>
   27ef4:	bne	27f08 <main@@Base+0x11e78>
   27ef8:	ldrb	r0, [r2, #2]!
   27efc:	cmp	r0, #32
   27f00:	mov	r4, r2
   27f04:	bhi	271dc <main@@Base+0x1114c>
   27f08:	mov	r0, r9
   27f0c:	mov	r2, r8
   27f10:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   27f14:	b	271d8 <main@@Base+0x11148>
   27f18:	mov	r4, r8
   27f1c:	b	27f4c <main@@Base+0x11ebc>
   27f20:	mov	r4, r7
   27f24:	b	27f4c <main@@Base+0x11ebc>
   27f28:	ldr	r0, [fp, #-36]	; 0xffffffdc
   27f2c:	cmp	r0, #0
   27f30:	beq	27fcc <main@@Base+0x11f3c>
   27f34:	ldr	r0, [sp, #24]
   27f38:	mov	r1, r4
   27f3c:	mov	r2, r8
   27f40:	mov	r3, #7
   27f44:	bl	337ac <flatcc_json_parser_set_error@@Base>
   27f48:	mov	r4, r0
   27f4c:	ldr	r9, [sp, #24]
   27f50:	cmp	r7, r4
   27f54:	bne	27f90 <main@@Base+0x11f00>
   27f58:	movw	r3, #45704	; 0xb288
   27f5c:	sub	r0, fp, #44	; 0x2c
   27f60:	mov	r1, r7
   27f64:	mov	r2, r8
   27f68:	str	r0, [sp]
   27f6c:	mov	r0, r9
   27f70:	movt	r3, #5
   27f74:	bl	250e0 <main@@Base+0xf050>
   27f78:	mov	r4, r0
   27f7c:	cmp	r0, r7
   27f80:	cmpne	r4, r8
   27f84:	beq	29e4c <main@@Base+0x13dbc>
   27f88:	ldr	r5, [fp, #-44]	; 0xffffffd4
   27f8c:	ldr	r9, [sp, #24]
   27f90:	cmp	r5, #0
   27f94:	bne	27fa4 <main@@Base+0x11f14>
   27f98:	ldrb	r0, [r9, #8]
   27f9c:	tst	r0, #2
   27fa0:	beq	27fc4 <main@@Base+0x11f34>
   27fa4:	ldr	r0, [r9]
   27fa8:	mov	r1, #1
   27fac:	mov	r2, #4
   27fb0:	mov	r3, #4
   27fb4:	bl	30b5c <flatcc_builder_table_add@@Base>
   27fb8:	cmp	r0, #0
   27fbc:	beq	29e4c <main@@Base+0x13dbc>
   27fc0:	str	r5, [r0]
   27fc4:	ldr	r6, [sp, #32]
   27fc8:	b	286e0 <main@@Base+0x12650>
   27fcc:	ldr	r5, [fp, #-40]	; 0xffffffd8
   27fd0:	str	r5, [fp, #-44]	; 0xffffffd4
   27fd4:	b	27f4c <main@@Base+0x11ebc>
   27fd8:	cmp	r2, r8
   27fdc:	mov	r1, r8
   27fe0:	beq	28038 <main@@Base+0x11fa8>
   27fe4:	ldrb	r0, [r2]
   27fe8:	cmp	r0, #46	; 0x2e
   27fec:	beq	2800c <main@@Base+0x11f7c>
   27ff0:	cmp	r0, #34	; 0x22
   27ff4:	bne	28028 <main@@Base+0x11f98>
   27ff8:	ldr	r0, [sp, #28]
   27ffc:	mov	r1, #0
   28000:	str	r1, [r0]
   28004:	add	r1, r2, #1
   28008:	b	28038 <main@@Base+0x11fa8>
   2800c:	mov	r1, r2
   28010:	mov	r0, r9
   28014:	mov	r2, r8
   28018:	mov	r3, #5
   2801c:	bl	337ac <flatcc_json_parser_set_error@@Base>
   28020:	mov	r1, r0
   28024:	b	28038 <main@@Base+0x11fa8>
   28028:	ldr	r0, [sp, #28]
   2802c:	mov	r1, #1
   28030:	str	r1, [r0]
   28034:	mov	r1, r2
   28038:	sub	r0, r8, r1
   2803c:	mov	r2, #8
   28040:	cmp	r0, #8
   28044:	movcs	r0, r2
   28048:	and	r0, r0, #15
   2804c:	sub	r7, r0, #1
   28050:	cmp	r7, #7
   28054:	bhi	282dc <main@@Base+0x1224c>
   28058:	add	r0, pc, #32
   2805c:	mov	r9, #0
   28060:	mov	ip, #0
   28064:	mov	lr, #0
   28068:	mov	sl, #0
   2806c:	mov	r3, #0
   28070:	mov	r5, #0
   28074:	mov	r2, #0
   28078:	mov	r4, #0
   2807c:	ldr	pc, [r0, r7, lsl #2]
   28080:	andeq	r8, r2, r4, ror #1
   28084:	ldrdeq	r8, [r2], -ip
   28088:	ldrdeq	r8, [r2], -r4
   2808c:	andeq	r8, r2, ip, asr #1
   28090:	andeq	r8, r2, r0, asr #1
   28094:	strheq	r8, [r2], -r4
   28098:	andeq	r8, r2, r4, lsr #1
   2809c:	andeq	r8, r2, r0, lsr #1
   280a0:	ldrb	ip, [r1, #7]
   280a4:	ldrb	r0, [r1, #6]
   280a8:	mov	lr, r9
   280ac:	orr	r0, ip, r0, lsl #8
   280b0:	mov	r9, r0
   280b4:	ldrb	r0, [r1, #5]
   280b8:	mov	sl, lr
   280bc:	orr	r9, r9, r0, lsl #16
   280c0:	ldrb	r0, [r1, #4]
   280c4:	mov	r3, sl
   280c8:	orr	r9, r9, r0, lsl #24
   280cc:	ldrb	r0, [r1, #3]
   280d0:	orr	r5, r0, r3
   280d4:	ldrb	r0, [r1, #2]
   280d8:	orr	r2, r5, r0, lsl #8
   280dc:	ldrb	r0, [r1, #1]
   280e0:	orr	r4, r2, r0, lsl #16
   280e4:	ldrb	r2, [r1]
   280e8:	movw	r0, #25186	; 0x6262
   280ec:	movw	r3, #24929	; 0x6161
   280f0:	movt	r0, #24418	; 0x5f62
   280f4:	movt	r3, #24929	; 0x6161
   280f8:	eor	r0, r9, r0
   280fc:	ldr	r9, [sp, #24]
   28100:	orr	r2, r4, r2, lsl #24
   28104:	eor	r2, r2, r3
   28108:	orrs	r0, r0, r2
   2810c:	bne	282dc <main@@Base+0x1224c>
   28110:	add	r4, r1, #8
   28114:	mov	r0, #8
   28118:	sub	lr, r8, r4
   2811c:	cmp	lr, #8
   28120:	movcc	r0, lr
   28124:	and	r0, r0, #15
   28128:	sub	ip, r0, #1
   2812c:	cmp	ip, #7
   28130:	bhi	2854c <main@@Base+0x124bc>
   28134:	str	r4, [sp, #8]
   28138:	add	r9, pc, #32
   2813c:	mov	r2, #0
   28140:	mov	r6, #0
   28144:	mov	sl, #0
   28148:	mov	r5, #0
   2814c:	mov	r7, #0
   28150:	mov	r4, #0
   28154:	mov	r0, #0
   28158:	mov	r3, #0
   2815c:	ldr	pc, [r9, ip, lsl #2]
   28160:	andeq	r8, r2, r4, asr #3
   28164:			; <UNDEFINED> instruction: 0x000281bc
   28168:			; <UNDEFINED> instruction: 0x000281b4
   2816c:	andeq	r8, r2, ip, lsr #3
   28170:	andeq	r8, r2, r0, lsr #3
   28174:	muleq	r2, r4, r1
   28178:	andeq	r8, r2, r4, lsl #3
   2817c:	andeq	r8, r2, r0, lsl #3
   28180:	ldrb	r6, [r1, #15]
   28184:	ldrb	r0, [r1, #14]
   28188:	mov	sl, r2
   2818c:	orr	r0, r6, r0, lsl #8
   28190:	mov	r2, r0
   28194:	ldrb	r0, [r1, #13]
   28198:	mov	r5, sl
   2819c:	orr	r2, r2, r0, lsl #16
   281a0:	ldrb	r0, [r1, #12]
   281a4:	mov	r7, r5
   281a8:	orr	r2, r2, r0, lsl #24
   281ac:	ldrb	r0, [r1, #11]
   281b0:	orr	r4, r0, r7
   281b4:	ldrb	r0, [r1, #10]
   281b8:	orr	r0, r4, r0, lsl #8
   281bc:	ldrb	r3, [r1, #9]
   281c0:	orr	r3, r0, r3, lsl #16
   281c4:	ldr	r4, [sp, #8]
   281c8:	movw	r0, #29791	; 0x745f
   281cc:	movt	r0, #24946	; 0x6172
   281d0:	eor	r7, r2, r0
   281d4:	ldrb	r0, [r4]
   281d8:	orr	r0, r3, r0, lsl #24
   281dc:	movw	r3, #29556	; 0x7374
   281e0:	movt	r3, #25183	; 0x625f
   281e4:	eor	r0, r0, r3
   281e8:	orrs	r3, r7, r0
   281ec:	bne	282e4 <main@@Base+0x12254>
   281f0:	add	r9, r1, #16
   281f4:	mov	r2, #8
   281f8:	ldr	r6, [sp, #32]
   281fc:	sub	ip, r8, r9
   28200:	cmp	ip, #8
   28204:	movcc	r2, ip
   28208:	and	r2, r2, #15
   2820c:	sub	r7, r2, #1
   28210:	cmp	r7, #7
   28214:	bhi	286c8 <main@@Base+0x12638>
   28218:	add	r0, pc, #20
   2821c:	mov	lr, #0
   28220:	mov	r3, #0
   28224:	mov	r2, #0
   28228:	mov	r5, #0
   2822c:	mov	r4, #0
   28230:	ldr	pc, [r0, r7, lsl #2]
   28234:	andeq	r8, r2, r8, ror r2
   28238:	andeq	r8, r2, r0, ror r2
   2823c:	andeq	r8, r2, r8, ror #4
   28240:	andeq	r8, r2, ip, asr r2
   28244:	andeq	r8, r2, r4, asr r2
   28248:	andeq	r8, r2, r4, asr r2
   2824c:	andeq	r8, r2, r4, asr r2
   28250:	andeq	r8, r2, r4, asr r2
   28254:	ldrb	r0, [r1, #20]
   28258:	lsl	r3, r0, #24
   2825c:	ldrb	r0, [r1, #19]
   28260:	orr	r2, r0, lr
   28264:	mov	lr, r3
   28268:	ldrb	r0, [r1, #18]
   2826c:	orr	r5, r2, r0, lsl #8
   28270:	ldrb	r0, [r1, #17]
   28274:	orr	r4, r5, r0, lsl #16
   28278:	ldrb	r0, [r9]
   2827c:	movw	r2, #25968	; 0x6570
   28280:	movt	r2, #29556	; 0x7374
   28284:	orr	r0, r4, r0, lsl #24
   28288:	eor	r0, r0, r2
   2828c:	and	r2, lr, #-16777216	; 0xff000000
   28290:	eor	r2, r2, #1929379840	; 0x73000000
   28294:	orrs	r0, r2, r0
   28298:	bne	286c8 <main@@Base+0x12638>
   2829c:	cmp	ip, #6
   282a0:	blt	286c8 <main@@Base+0x12638>
   282a4:	ldr	r3, [sp, #28]
   282a8:	mov	r2, r1
   282ac:	ldrb	r0, [r2, #21]!
   282b0:	ldr	r3, [r3]
   282b4:	cmp	r3, #0
   282b8:	beq	28370 <main@@Base+0x122e0>
   282bc:	cmp	r0, #33	; 0x21
   282c0:	bcc	282cc <main@@Base+0x1223c>
   282c4:	cmp	r0, #58	; 0x3a
   282c8:	bne	286c8 <main@@Base+0x12638>
   282cc:	ldr	r0, [sp, #28]
   282d0:	mov	r1, #0
   282d4:	str	r1, [r0]
   282d8:	b	2837c <main@@Base+0x122ec>
   282dc:	mov	r0, r9
   282e0:	b	286d4 <main@@Base+0x12644>
   282e4:	movw	r3, #29440	; 0x7300
   282e8:	ldr	r9, [sp, #24]
   282ec:	ldr	r6, [sp, #32]
   282f0:	bic	r2, r2, #255	; 0xff
   282f4:	movt	r3, #25968	; 0x6570
   282f8:	eor	r2, r2, r3
   282fc:	orrs	r0, r2, r0
   28300:	bne	2854c <main@@Base+0x124bc>
   28304:	cmp	lr, #8
   28308:	blt	2854c <main@@Base+0x124bc>
   2830c:	ldr	r3, [sp, #28]
   28310:	mov	r2, r1
   28314:	ldrb	r0, [r2, #15]!
   28318:	ldr	r3, [r3]
   2831c:	cmp	r3, #0
   28320:	beq	28344 <main@@Base+0x122b4>
   28324:	cmp	r0, #33	; 0x21
   28328:	bcc	28334 <main@@Base+0x122a4>
   2832c:	cmp	r0, #58	; 0x3a
   28330:	bne	2854c <main@@Base+0x124bc>
   28334:	ldr	r0, [sp, #28]
   28338:	mov	r1, #0
   2833c:	str	r1, [r0]
   28340:	b	28350 <main@@Base+0x122c0>
   28344:	cmp	r0, #34	; 0x22
   28348:	bne	2854c <main@@Base+0x124bc>
   2834c:	add	r2, r1, #16
   28350:	sub	r0, r8, r2
   28354:	cmp	r0, #2
   28358:	blt	283b0 <main@@Base+0x12320>
   2835c:	ldrb	r0, [r2]
   28360:	cmp	r0, #32
   28364:	bls	2839c <main@@Base+0x1230c>
   28368:	mov	r7, r2
   2836c:	b	283c4 <main@@Base+0x12334>
   28370:	cmp	r0, #34	; 0x22
   28374:	bne	286c8 <main@@Base+0x12638>
   28378:	add	r2, r1, #22
   2837c:	sub	r0, r8, r2
   28380:	cmp	r0, #2
   28384:	blt	28434 <main@@Base+0x123a4>
   28388:	ldrb	r0, [r2]
   2838c:	cmp	r0, #32
   28390:	bls	28420 <main@@Base+0x12390>
   28394:	mov	r7, r2
   28398:	b	28448 <main@@Base+0x123b8>
   2839c:	bne	283b0 <main@@Base+0x12320>
   283a0:	mov	r7, r2
   283a4:	ldrb	r0, [r7, #1]!
   283a8:	cmp	r0, #32
   283ac:	bhi	283c4 <main@@Base+0x12334>
   283b0:	mov	r1, r2
   283b4:	mov	r0, r9
   283b8:	mov	r2, r8
   283bc:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   283c0:	mov	r7, r0
   283c4:	cmp	r7, r8
   283c8:	beq	28408 <main@@Base+0x12378>
   283cc:	ldrb	r0, [r7]
   283d0:	cmp	r0, #58	; 0x3a
   283d4:	bne	28408 <main@@Base+0x12378>
   283d8:	add	r1, r7, #1
   283dc:	sub	r0, r8, r1
   283e0:	cmp	r0, #2
   283e4:	blt	284b8 <main@@Base+0x12428>
   283e8:	ldrb	r0, [r1]
   283ec:	cmp	r0, #32
   283f0:	bls	2849c <main@@Base+0x1240c>
   283f4:	ldr	r9, [sp, #24]
   283f8:	ldr	r6, [sp, #32]
   283fc:	ldr	r4, [sp, #8]
   28400:	mov	r7, r1
   28404:	b	284c8 <main@@Base+0x12438>
   28408:	mov	r0, r9
   2840c:	mov	r1, r7
   28410:	mov	r2, r8
   28414:	mov	r3, #4
   28418:	bl	337ac <flatcc_json_parser_set_error@@Base>
   2841c:	b	284c4 <main@@Base+0x12434>
   28420:	bne	28434 <main@@Base+0x123a4>
   28424:	mov	r7, r2
   28428:	ldrb	r0, [r7, #1]!
   2842c:	cmp	r0, #32
   28430:	bhi	28448 <main@@Base+0x123b8>
   28434:	ldr	r0, [sp, #24]
   28438:	mov	r1, r2
   2843c:	mov	r2, r8
   28440:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   28444:	mov	r7, r0
   28448:	cmp	r7, r8
   2844c:	beq	28484 <main@@Base+0x123f4>
   28450:	ldrb	r0, [r7]
   28454:	cmp	r0, #58	; 0x3a
   28458:	bne	28484 <main@@Base+0x123f4>
   2845c:	add	r1, r7, #1
   28460:	sub	r0, r8, r1
   28464:	cmp	r0, #2
   28468:	blt	2864c <main@@Base+0x125bc>
   2846c:	ldrb	r0, [r1]
   28470:	cmp	r0, #32
   28474:	bls	28638 <main@@Base+0x125a8>
   28478:	ldr	r6, [sp, #32]
   2847c:	mov	r7, r1
   28480:	b	2865c <main@@Base+0x125cc>
   28484:	ldr	r0, [sp, #24]
   28488:	mov	r1, r7
   2848c:	mov	r2, r8
   28490:	mov	r3, #4
   28494:	bl	337ac <flatcc_json_parser_set_error@@Base>
   28498:	b	28658 <main@@Base+0x125c8>
   2849c:	ldr	r9, [sp, #24]
   284a0:	ldr	r6, [sp, #32]
   284a4:	ldr	r4, [sp, #8]
   284a8:	bne	284b8 <main@@Base+0x12428>
   284ac:	ldrb	r0, [r7, #2]!
   284b0:	cmp	r0, #32
   284b4:	bhi	284c8 <main@@Base+0x12438>
   284b8:	mov	r0, r9
   284bc:	mov	r2, r8
   284c0:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   284c4:	mov	r7, r0
   284c8:	cmp	r4, r7
   284cc:	beq	2854c <main@@Base+0x124bc>
   284d0:	mov	r6, #0
   284d4:	cmp	r7, r8
   284d8:	str	r6, [fp, #-36]	; 0xffffffdc
   284dc:	str	r6, [fp, #-40]	; 0xffffffd8
   284e0:	str	r6, [sp, #44]	; 0x2c
   284e4:	str	r6, [sp, #40]	; 0x28
   284e8:	str	r6, [fp, #-44]	; 0xffffffd4
   284ec:	beq	28558 <main@@Base+0x124c8>
   284f0:	sub	r0, fp, #40	; 0x28
   284f4:	mov	r1, r7
   284f8:	mov	r2, r8
   284fc:	sub	r3, fp, #44	; 0x2c
   28500:	str	r0, [sp]
   28504:	mov	r0, r9
   28508:	bl	356c0 <flatcc_json_parser_integer@@Base>
   2850c:	cmp	r0, r7
   28510:	beq	28564 <main@@Base+0x124d4>
   28514:	mov	r4, r0
   28518:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2851c:	ldr	r6, [fp, #-40]	; 0xffffffd8
   28520:	ldr	r5, [fp, #-36]	; 0xffffffdc
   28524:	cmp	r0, #0
   28528:	beq	28574 <main@@Base+0x124e4>
   2852c:	subs	r0, r6, #1
   28530:	sbcs	r0, r5, #-2147483648	; 0x80000000
   28534:	bcc	285a4 <main@@Base+0x12514>
   28538:	ldr	r9, [sp, #24]
   2853c:	mov	r1, r4
   28540:	mov	r2, r8
   28544:	mov	r3, #8
   28548:	b	2858c <main@@Base+0x124fc>
   2854c:	mov	r0, r9
   28550:	mov	r1, r4
   28554:	b	286d4 <main@@Base+0x12644>
   28558:	mov	r5, #0
   2855c:	mov	r4, r8
   28560:	b	285b8 <main@@Base+0x12528>
   28564:	mov	r6, #0
   28568:	mov	r5, #0
   2856c:	mov	r4, r7
   28570:	b	285b4 <main@@Base+0x12524>
   28574:	cmn	r5, #1
   28578:	bgt	285ac <main@@Base+0x1251c>
   2857c:	ldr	r9, [sp, #24]
   28580:	mov	r1, r4
   28584:	mov	r2, r8
   28588:	mov	r3, #7
   2858c:	mov	r0, r9
   28590:	bl	337ac <flatcc_json_parser_set_error@@Base>
   28594:	mov	r4, r0
   28598:	mov	r6, #0
   2859c:	mov	r5, #0
   285a0:	b	285b8 <main@@Base+0x12528>
   285a4:	rsbs	r6, r6, #0
   285a8:	rsc	r5, r5, #0
   285ac:	str	r6, [sp, #40]	; 0x28
   285b0:	str	r5, [sp, #44]	; 0x2c
   285b4:	ldr	r9, [sp, #24]
   285b8:	cmp	r7, r4
   285bc:	bne	285fc <main@@Base+0x1256c>
   285c0:	movw	r3, #45716	; 0xb294
   285c4:	add	r0, sp, #40	; 0x28
   285c8:	mov	r1, r7
   285cc:	mov	r2, r8
   285d0:	str	r0, [sp]
   285d4:	mov	r0, r9
   285d8:	movt	r3, #5
   285dc:	bl	24ed4 <main@@Base+0xee44>
   285e0:	mov	r4, r0
   285e4:	cmp	r0, r7
   285e8:	cmpne	r4, r8
   285ec:	beq	29e4c <main@@Base+0x13dbc>
   285f0:	ldr	r6, [sp, #40]	; 0x28
   285f4:	ldr	r5, [sp, #44]	; 0x2c
   285f8:	ldr	r9, [sp, #24]
   285fc:	orrs	r0, r6, r5
   28600:	bne	28610 <main@@Base+0x12580>
   28604:	ldrb	r0, [r9, #8]
   28608:	tst	r0, #2
   2860c:	beq	27fc4 <main@@Base+0x11f34>
   28610:	ldr	r0, [r9]
   28614:	mov	r1, #0
   28618:	mov	r2, #8
   2861c:	mov	r3, #8
   28620:	bl	30b5c <flatcc_builder_table_add@@Base>
   28624:	cmp	r0, #0
   28628:	beq	29e4c <main@@Base+0x13dbc>
   2862c:	str	r6, [r0]
   28630:	str	r5, [r0, #4]
   28634:	b	27fc4 <main@@Base+0x11f34>
   28638:	ldr	r6, [sp, #32]
   2863c:	bne	2864c <main@@Base+0x125bc>
   28640:	ldrb	r0, [r7, #2]!
   28644:	cmp	r0, #32
   28648:	bhi	2865c <main@@Base+0x125cc>
   2864c:	ldr	r0, [sp, #24]
   28650:	mov	r2, r8
   28654:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   28658:	mov	r7, r0
   2865c:	cmp	r9, r7
   28660:	beq	286c8 <main@@Base+0x12638>
   28664:	mov	r5, #0
   28668:	cmp	r7, r8
   2866c:	str	r5, [fp, #-36]	; 0xffffffdc
   28670:	str	r5, [fp, #-40]	; 0xffffffd8
   28674:	str	r5, [fp, #-44]	; 0xffffffd4
   28678:	str	r5, [sp, #40]	; 0x28
   2867c:	beq	27f18 <main@@Base+0x11e88>
   28680:	sub	r0, fp, #40	; 0x28
   28684:	mov	r1, r7
   28688:	mov	r2, r8
   2868c:	add	r3, sp, #40	; 0x28
   28690:	str	r0, [sp]
   28694:	ldr	r0, [sp, #24]
   28698:	bl	356c0 <flatcc_json_parser_integer@@Base>
   2869c:	cmp	r0, r7
   286a0:	beq	27f20 <main@@Base+0x11e90>
   286a4:	mov	r4, r0
   286a8:	ldr	r0, [sp, #40]	; 0x28
   286ac:	cmp	r0, #0
   286b0:	beq	27f28 <main@@Base+0x11e98>
   286b4:	ldr	r0, [sp, #24]
   286b8:	mov	r1, r4
   286bc:	mov	r2, r8
   286c0:	mov	r3, #8
   286c4:	b	27f44 <main@@Base+0x11eb4>
   286c8:	ldr	r0, [sp, #24]
   286cc:	mov	r1, r9
   286d0:	mov	r9, r0
   286d4:	mov	r2, r8
   286d8:	bl	33ecc <flatcc_json_parser_unmatched_symbol@@Base>
   286dc:	mov	r4, r0
   286e0:	sub	r0, r8, r4
   286e4:	cmp	r0, #2
   286e8:	blt	28714 <main@@Base+0x12684>
   286ec:	ldrb	r0, [r4]
   286f0:	cmp	r0, #32
   286f4:	bls	28700 <main@@Base+0x12670>
   286f8:	mov	r2, r4
   286fc:	b	28728 <main@@Base+0x12698>
   28700:	bne	28714 <main@@Base+0x12684>
   28704:	mov	r2, r4
   28708:	ldrb	r0, [r2, #1]!
   2870c:	cmp	r0, #32
   28710:	bhi	28728 <main@@Base+0x12698>
   28714:	mov	r0, r9
   28718:	mov	r1, r4
   2871c:	mov	r2, r8
   28720:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   28724:	mov	r2, r0
   28728:	cmp	r2, r8
   2872c:	beq	287b4 <main@@Base+0x12724>
   28730:	ldrb	r0, [r2]
   28734:	cmp	r0, #44	; 0x2c
   28738:	bne	287bc <main@@Base+0x1272c>
   2873c:	add	r1, r2, #1
   28740:	sub	r0, r8, r1
   28744:	cmp	r0, #2
   28748:	blt	28770 <main@@Base+0x126e0>
   2874c:	ldrb	r0, [r1]
   28750:	cmp	r0, #32
   28754:	bls	28760 <main@@Base+0x126d0>
   28758:	mov	r2, r1
   2875c:	b	28780 <main@@Base+0x126f0>
   28760:	bne	28770 <main@@Base+0x126e0>
   28764:	ldrb	r0, [r2, #2]!
   28768:	cmp	r0, #32
   2876c:	bhi	28780 <main@@Base+0x126f0>
   28770:	mov	r0, r9
   28774:	mov	r2, r8
   28778:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   2877c:	mov	r2, r0
   28780:	cmp	r2, r8
   28784:	beq	287f0 <main@@Base+0x12760>
   28788:	ldrb	r0, [r2]
   2878c:	cmp	r0, #125	; 0x7d
   28790:	bne	27fd8 <main@@Base+0x11f48>
   28794:	add	r1, r2, #1
   28798:	sub	r0, r8, r1
   2879c:	cmp	r0, #2
   287a0:	blt	28830 <main@@Base+0x127a0>
   287a4:	ldrb	r0, [r1]
   287a8:	cmp	r0, #32
   287ac:	bls	2881c <main@@Base+0x1278c>
   287b0:	b	287e8 <main@@Base+0x12758>
   287b4:	mov	r4, r8
   287b8:	b	2762c <main@@Base+0x1159c>
   287bc:	cmp	r0, #125	; 0x7d
   287c0:	bne	287fc <main@@Base+0x1276c>
   287c4:	add	r1, r2, #1
   287c8:	sub	r0, r8, r1
   287cc:	cmp	r0, #2
   287d0:	blt	28830 <main@@Base+0x127a0>
   287d4:	ldrb	r0, [r1]
   287d8:	cmp	r0, #32
   287dc:	bls	28814 <main@@Base+0x12784>
   287e0:	ldr	r9, [sp, #24]
   287e4:	ldr	r6, [sp, #32]
   287e8:	mov	r4, r1
   287ec:	b	2762c <main@@Base+0x1159c>
   287f0:	mov	r0, r9
   287f4:	mov	r1, r8
   287f8:	b	28804 <main@@Base+0x12774>
   287fc:	mov	r0, r9
   28800:	mov	r1, r2
   28804:	mov	r2, r8
   28808:	mov	r3, #10
   2880c:	bl	337ac <flatcc_json_parser_set_error@@Base>
   28810:	b	27628 <main@@Base+0x11598>
   28814:	ldr	r9, [sp, #24]
   28818:	ldr	r6, [sp, #32]
   2881c:	bne	28830 <main@@Base+0x127a0>
   28820:	ldrb	r0, [r2, #2]!
   28824:	cmp	r0, #32
   28828:	mov	r4, r2
   2882c:	bhi	2762c <main@@Base+0x1159c>
   28830:	mov	r0, r9
   28834:	mov	r2, r8
   28838:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   2883c:	b	27628 <main@@Base+0x11598>
   28840:	mov	r4, r8
   28844:	b	28874 <main@@Base+0x127e4>
   28848:	mov	r4, r9
   2884c:	b	28874 <main@@Base+0x127e4>
   28850:	ldr	r0, [fp, #-36]	; 0xffffffdc
   28854:	cmp	r0, #0
   28858:	beq	288f4 <main@@Base+0x12864>
   2885c:	ldr	r0, [sp, #24]
   28860:	mov	r1, r4
   28864:	mov	r2, r8
   28868:	mov	r3, #7
   2886c:	bl	337ac <flatcc_json_parser_set_error@@Base>
   28870:	mov	r4, r0
   28874:	cmp	r9, r4
   28878:	bne	288b0 <main@@Base+0x12820>
   2887c:	sub	r0, fp, #44	; 0x2c
   28880:	movw	r3, #45692	; 0xb27c
   28884:	mov	r1, r9
   28888:	mov	r2, r8
   2888c:	str	r0, [sp]
   28890:	ldr	r0, [sp, #24]
   28894:	movt	r3, #5
   28898:	bl	250e0 <main@@Base+0xf050>
   2889c:	mov	r4, r0
   288a0:	cmp	r0, r9
   288a4:	cmpne	r4, r8
   288a8:	beq	29e4c <main@@Base+0x13dbc>
   288ac:	ldr	r5, [fp, #-44]	; 0xffffffd4
   288b0:	cmp	r5, #0
   288b4:	bne	288c8 <main@@Base+0x12838>
   288b8:	ldr	r0, [sp, #24]
   288bc:	ldrb	r0, [r0, #8]
   288c0:	tst	r0, #2
   288c4:	beq	288ec <main@@Base+0x1285c>
   288c8:	ldr	r0, [sp, #24]
   288cc:	mov	r1, #8
   288d0:	ldr	r0, [r0]
   288d4:	mov	r2, #4
   288d8:	mov	r3, #4
   288dc:	bl	30b5c <flatcc_builder_table_add@@Base>
   288e0:	cmp	r0, #0
   288e4:	beq	29e4c <main@@Base+0x13dbc>
   288e8:	str	r5, [r0]
   288ec:	ldr	r9, [sp, #24]
   288f0:	b	29c2c <main@@Base+0x13b9c>
   288f4:	ldr	r5, [fp, #-40]	; 0xffffffd8
   288f8:	str	r5, [fp, #-44]	; 0xffffffd4
   288fc:	b	28874 <main@@Base+0x127e4>
   28900:	cmp	r2, r8
   28904:	mov	sl, r8
   28908:	beq	2895c <main@@Base+0x128cc>
   2890c:	ldrb	r0, [r2]
   28910:	cmp	r0, #46	; 0x2e
   28914:	beq	28930 <main@@Base+0x128a0>
   28918:	cmp	r0, #34	; 0x22
   2891c:	bne	2894c <main@@Base+0x128bc>
   28920:	ldr	r0, [sp, #28]
   28924:	mov	r1, #0
   28928:	add	sl, r2, #1
   2892c:	b	28958 <main@@Base+0x128c8>
   28930:	mov	r1, r2
   28934:	mov	r0, r9
   28938:	mov	r2, r8
   2893c:	mov	r3, #5
   28940:	bl	337ac <flatcc_json_parser_set_error@@Base>
   28944:	mov	sl, r0
   28948:	b	2895c <main@@Base+0x128cc>
   2894c:	ldr	r0, [sp, #28]
   28950:	mov	r1, #1
   28954:	mov	sl, r2
   28958:	str	r1, [r0]
   2895c:	sub	r9, r8, sl
   28960:	mov	r0, #8
   28964:	cmp	r9, #8
   28968:	movcc	r0, r9
   2896c:	and	r0, r0, #15
   28970:	sub	r3, r0, #1
   28974:	cmp	r3, #7
   28978:	bhi	2937c <main@@Base+0x132ec>
   2897c:	add	r5, pc, #32
   28980:	mov	r0, #0
   28984:	mov	ip, #0
   28988:	mov	lr, #0
   2898c:	mov	r7, #0
   28990:	mov	r2, #0
   28994:	mov	r6, #0
   28998:	mov	r4, #0
   2899c:	mov	r1, #0
   289a0:	ldr	pc, [r5, r3, lsl #2]
   289a4:	andeq	r8, r2, r8, lsl #20
   289a8:	andeq	r8, r2, r0, lsl #20
   289ac:	strdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   289b0:	strdeq	r8, [r2], -r0
   289b4:	andeq	r8, r2, r4, ror #19
   289b8:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   289bc:	andeq	r8, r2, r8, asr #19
   289c0:	andeq	r8, r2, r4, asr #19
   289c4:	ldrb	ip, [sl, #7]
   289c8:	ldrb	r1, [sl, #6]
   289cc:	mov	lr, r0
   289d0:	orr	r1, ip, r1, lsl #8
   289d4:	mov	r0, r1
   289d8:	ldrb	r1, [sl, #5]
   289dc:	mov	r7, lr
   289e0:	orr	r0, r0, r1, lsl #16
   289e4:	ldrb	r1, [sl, #4]
   289e8:	mov	r2, r7
   289ec:	orr	r0, r0, r1, lsl #24
   289f0:	ldrb	r1, [sl, #3]
   289f4:	orr	r6, r1, r2
   289f8:	ldrb	r1, [sl, #2]
   289fc:	orr	r4, r6, r1, lsl #8
   28a00:	ldrb	r1, [sl, #1]
   28a04:	orr	r1, r4, r1, lsl #16
   28a08:	ldrb	r2, [sl]
   28a0c:	orr	r7, r1, r2, lsl #24
   28a10:	movw	r1, #25442	; 0x6362
   28a14:	movt	r1, #25443	; 0x6363
   28a18:	cmp	r7, r1
   28a1c:	bhi	28ab4 <main@@Base+0x12a24>
   28a20:	movw	r1, #13108	; 0x3334
   28a24:	movt	r1, #12594	; 0x3132
   28a28:	eor	r5, r0, r1
   28a2c:	movw	r1, #24929	; 0x6161
   28a30:	movt	r1, #24929	; 0x6161
   28a34:	eor	r0, r7, r1
   28a38:	orrs	r0, r5, r0
   28a3c:	bne	28b1c <main@@Base+0x12a8c>
   28a40:	add	r7, sl, #8
   28a44:	mov	r1, #8
   28a48:	mov	r2, #-268435456	; 0xf0000000
   28a4c:	sub	r0, r8, r7
   28a50:	cmp	r0, #8
   28a54:	movcc	r1, r0
   28a58:	add	r1, r2, r1, lsl #28
   28a5c:	asr	r1, r1, #28
   28a60:	cmp	r1, #0
   28a64:	blt	29c14 <main@@Base+0x13b84>
   28a68:	ldrb	r1, [r7]
   28a6c:	cmp	r1, #53	; 0x35
   28a70:	bne	29c14 <main@@Base+0x13b84>
   28a74:	cmp	r0, #2
   28a78:	blt	29c14 <main@@Base+0x13b84>
   28a7c:	ldr	r2, [sp, #28]
   28a80:	mov	r1, sl
   28a84:	ldrb	r0, [r1, #9]!
   28a88:	ldr	r2, [r2]
   28a8c:	cmp	r2, #0
   28a90:	beq	28cc8 <main@@Base+0x12c38>
   28a94:	cmp	r0, #33	; 0x21
   28a98:	bcc	28aa4 <main@@Base+0x12a14>
   28a9c:	cmp	r0, #58	; 0x3a
   28aa0:	bne	29c14 <main@@Base+0x13b84>
   28aa4:	ldr	r0, [sp, #28]
   28aa8:	mov	r2, #0
   28aac:	str	r2, [r0]
   28ab0:	b	28cd4 <main@@Base+0x12c44>
   28ab4:	movw	r1, #13108	; 0x3334
   28ab8:	movt	r1, #12594	; 0x3132
   28abc:	eor	r5, r0, r1
   28ac0:	ldr	r0, [sp, #16]
   28ac4:	eor	r0, r7, r0
   28ac8:	orrs	r0, r5, r0
   28acc:	bne	28b6c <main@@Base+0x12adc>
   28ad0:	cmp	r9, #9
   28ad4:	ldr	r9, [sp, #24]
   28ad8:	mov	r7, sl
   28adc:	blt	28dfc <main@@Base+0x12d6c>
   28ae0:	ldr	r2, [sp, #28]
   28ae4:	mov	r1, sl
   28ae8:	ldrb	r0, [r1, #8]!
   28aec:	ldr	r2, [r2]
   28af0:	cmp	r2, #0
   28af4:	beq	28bc4 <main@@Base+0x12b34>
   28af8:	cmp	r0, #33	; 0x21
   28afc:	bcc	28b0c <main@@Base+0x12a7c>
   28b00:	cmp	r0, #58	; 0x3a
   28b04:	mov	r7, sl
   28b08:	bne	28dfc <main@@Base+0x12d6c>
   28b0c:	ldr	r0, [sp, #28]
   28b10:	mov	r2, #0
   28b14:	str	r2, [r0]
   28b18:	b	28bd4 <main@@Base+0x12b44>
   28b1c:	teq	r7, r1
   28b20:	bne	290c0 <main@@Base+0x13030>
   28b24:	cmp	r9, #5
   28b28:	mov	r1, sl
   28b2c:	blt	29088 <main@@Base+0x12ff8>
   28b30:	ldr	r1, [sp, #28]
   28b34:	mov	r2, sl
   28b38:	ldrb	r0, [r2, #4]!
   28b3c:	ldr	r1, [r1]
   28b40:	cmp	r1, #0
   28b44:	beq	28bf4 <main@@Base+0x12b64>
   28b48:	cmp	r0, #33	; 0x21
   28b4c:	bcc	28b5c <main@@Base+0x12acc>
   28b50:	cmp	r0, #58	; 0x3a
   28b54:	mov	r1, sl
   28b58:	bne	29088 <main@@Base+0x12ff8>
   28b5c:	ldr	r0, [sp, #28]
   28b60:	mov	r1, #0
   28b64:	str	r1, [r0]
   28b68:	b	28c04 <main@@Base+0x12b74>
   28b6c:	movw	r0, #25443	; 0x6363
   28b70:	movt	r0, #25443	; 0x6363
   28b74:	teq	r7, r0
   28b78:	bne	29320 <main@@Base+0x13290>
   28b7c:	cmp	r9, #5
   28b80:	mov	r1, sl
   28b84:	blt	292e8 <main@@Base+0x13258>
   28b88:	ldr	r1, [sp, #28]
   28b8c:	mov	r2, sl
   28b90:	ldrb	r0, [r2, #4]!
   28b94:	ldr	r1, [r1]
   28b98:	cmp	r1, #0
   28b9c:	beq	28c24 <main@@Base+0x12b94>
   28ba0:	cmp	r0, #33	; 0x21
   28ba4:	bcc	28bb4 <main@@Base+0x12b24>
   28ba8:	cmp	r0, #58	; 0x3a
   28bac:	mov	r1, sl
   28bb0:	bne	292e8 <main@@Base+0x13258>
   28bb4:	ldr	r0, [sp, #28]
   28bb8:	mov	r1, #0
   28bbc:	str	r1, [r0]
   28bc0:	b	28c34 <main@@Base+0x12ba4>
   28bc4:	cmp	r0, #34	; 0x22
   28bc8:	mov	r7, sl
   28bcc:	bne	28dfc <main@@Base+0x12d6c>
   28bd0:	add	r1, sl, #9
   28bd4:	sub	r0, r8, r1
   28bd8:	cmp	r0, #2
   28bdc:	blt	28c68 <main@@Base+0x12bd8>
   28be0:	ldrb	r0, [r1]
   28be4:	cmp	r0, #32
   28be8:	bls	28c54 <main@@Base+0x12bc4>
   28bec:	mov	r7, r1
   28bf0:	b	28c78 <main@@Base+0x12be8>
   28bf4:	cmp	r0, #34	; 0x22
   28bf8:	mov	r1, sl
   28bfc:	bne	29088 <main@@Base+0x12ff8>
   28c00:	add	r2, sl, #5
   28c04:	sub	r0, r8, r2
   28c08:	cmp	r0, #2
   28c0c:	blt	28d08 <main@@Base+0x12c78>
   28c10:	ldrb	r0, [r2]
   28c14:	cmp	r0, #32
   28c18:	bls	28cf4 <main@@Base+0x12c64>
   28c1c:	mov	r1, r2
   28c20:	b	28d1c <main@@Base+0x12c8c>
   28c24:	cmp	r0, #34	; 0x22
   28c28:	mov	r1, sl
   28c2c:	bne	292e8 <main@@Base+0x13258>
   28c30:	add	r2, sl, #5
   28c34:	sub	r0, r8, r2
   28c38:	cmp	r0, #2
   28c3c:	blt	28d7c <main@@Base+0x12cec>
   28c40:	ldrb	r0, [r2]
   28c44:	cmp	r0, #32
   28c48:	bls	28d68 <main@@Base+0x12cd8>
   28c4c:	mov	r1, r2
   28c50:	b	28d90 <main@@Base+0x12d00>
   28c54:	bne	28c68 <main@@Base+0x12bd8>
   28c58:	mov	r7, r1
   28c5c:	ldrb	r0, [r7, #1]!
   28c60:	cmp	r0, #32
   28c64:	bhi	28c78 <main@@Base+0x12be8>
   28c68:	mov	r0, r9
   28c6c:	mov	r2, r8
   28c70:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   28c74:	mov	r7, r0
   28c78:	cmp	r7, r8
   28c7c:	beq	28cb0 <main@@Base+0x12c20>
   28c80:	ldrb	r0, [r7]
   28c84:	cmp	r0, #58	; 0x3a
   28c88:	bne	28cb0 <main@@Base+0x12c20>
   28c8c:	add	r1, r7, #1
   28c90:	sub	r0, r8, r1
   28c94:	cmp	r0, #2
   28c98:	blt	28dec <main@@Base+0x12d5c>
   28c9c:	ldrb	r0, [r1]
   28ca0:	cmp	r0, #32
   28ca4:	bls	28ddc <main@@Base+0x12d4c>
   28ca8:	mov	r7, r1
   28cac:	b	28dfc <main@@Base+0x12d6c>
   28cb0:	mov	r0, r9
   28cb4:	mov	r1, r7
   28cb8:	mov	r2, r8
   28cbc:	mov	r3, #4
   28cc0:	bl	337ac <flatcc_json_parser_set_error@@Base>
   28cc4:	b	28df8 <main@@Base+0x12d68>
   28cc8:	cmp	r0, #34	; 0x22
   28ccc:	bne	29c14 <main@@Base+0x13b84>
   28cd0:	add	r1, sl, #10
   28cd4:	sub	r0, r8, r1
   28cd8:	cmp	r0, #2
   28cdc:	blt	29004 <main@@Base+0x12f74>
   28ce0:	ldrb	r0, [r1]
   28ce4:	cmp	r0, #32
   28ce8:	bls	28ff0 <main@@Base+0x12f60>
   28cec:	mov	r9, r1
   28cf0:	b	29014 <main@@Base+0x12f84>
   28cf4:	bne	28d08 <main@@Base+0x12c78>
   28cf8:	mov	r1, r2
   28cfc:	ldrb	r0, [r1, #1]!
   28d00:	cmp	r0, #32
   28d04:	bhi	28d1c <main@@Base+0x12c8c>
   28d08:	ldr	r0, [sp, #24]
   28d0c:	mov	r1, r2
   28d10:	mov	r2, r8
   28d14:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   28d18:	mov	r1, r0
   28d1c:	cmp	r1, r8
   28d20:	beq	28d54 <main@@Base+0x12cc4>
   28d24:	ldrb	r0, [r1]
   28d28:	cmp	r0, #58	; 0x3a
   28d2c:	bne	28d54 <main@@Base+0x12cc4>
   28d30:	add	r2, r1, #1
   28d34:	sub	r0, r8, r2
   28d38:	cmp	r0, #2
   28d3c:	blt	29074 <main@@Base+0x12fe4>
   28d40:	ldrb	r0, [r2]
   28d44:	cmp	r0, #32
   28d48:	bls	29064 <main@@Base+0x12fd4>
   28d4c:	mov	r1, r2
   28d50:	b	29088 <main@@Base+0x12ff8>
   28d54:	ldr	r0, [sp, #24]
   28d58:	mov	r2, r8
   28d5c:	mov	r3, #4
   28d60:	bl	337ac <flatcc_json_parser_set_error@@Base>
   28d64:	b	29084 <main@@Base+0x12ff4>
   28d68:	bne	28d7c <main@@Base+0x12cec>
   28d6c:	mov	r1, r2
   28d70:	ldrb	r0, [r1, #1]!
   28d74:	cmp	r0, #32
   28d78:	bhi	28d90 <main@@Base+0x12d00>
   28d7c:	ldr	r0, [sp, #24]
   28d80:	mov	r1, r2
   28d84:	mov	r2, r8
   28d88:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   28d8c:	mov	r1, r0
   28d90:	cmp	r1, r8
   28d94:	beq	28dc8 <main@@Base+0x12d38>
   28d98:	ldrb	r0, [r1]
   28d9c:	cmp	r0, #58	; 0x3a
   28da0:	bne	28dc8 <main@@Base+0x12d38>
   28da4:	add	r2, r1, #1
   28da8:	sub	r0, r8, r2
   28dac:	cmp	r0, #2
   28db0:	blt	292d4 <main@@Base+0x13244>
   28db4:	ldrb	r0, [r2]
   28db8:	cmp	r0, #32
   28dbc:	bls	292c4 <main@@Base+0x13234>
   28dc0:	mov	r1, r2
   28dc4:	b	292e8 <main@@Base+0x13258>
   28dc8:	ldr	r0, [sp, #24]
   28dcc:	mov	r2, r8
   28dd0:	mov	r3, #4
   28dd4:	bl	337ac <flatcc_json_parser_set_error@@Base>
   28dd8:	b	292e4 <main@@Base+0x13254>
   28ddc:	bne	28dec <main@@Base+0x12d5c>
   28de0:	ldrb	r0, [r7, #2]!
   28de4:	cmp	r0, #32
   28de8:	bhi	28dfc <main@@Base+0x12d6c>
   28dec:	mov	r0, r9
   28df0:	mov	r2, r8
   28df4:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   28df8:	mov	r7, r0
   28dfc:	cmp	sl, r7
   28e00:	beq	28e80 <main@@Base+0x12df0>
   28e04:	mov	r5, #0
   28e08:	cmp	r7, r8
   28e0c:	str	r5, [fp, #-36]	; 0xffffffdc
   28e10:	str	r5, [fp, #-40]	; 0xffffffd8
   28e14:	str	r5, [sp, #44]	; 0x2c
   28e18:	str	r5, [sp, #40]	; 0x28
   28e1c:	str	r5, [fp, #-44]	; 0xffffffd4
   28e20:	beq	28ef4 <main@@Base+0x12e64>
   28e24:	sub	r0, fp, #40	; 0x28
   28e28:	mov	r1, r7
   28e2c:	mov	r2, r8
   28e30:	sub	r3, fp, #44	; 0x2c
   28e34:	str	r0, [sp]
   28e38:	mov	r0, r9
   28e3c:	bl	356c0 <flatcc_json_parser_integer@@Base>
   28e40:	ldr	r6, [sp, #32]
   28e44:	cmp	r0, r7
   28e48:	beq	28f04 <main@@Base+0x12e74>
   28e4c:	sub	sl, fp, #44	; 0x2c
   28e50:	mov	r4, r0
   28e54:	ldm	sl, {r0, r5, sl}
   28e58:	cmp	r0, #0
   28e5c:	beq	28f14 <main@@Base+0x12e84>
   28e60:	subs	r0, r5, #1
   28e64:	sbcs	r0, sl, #-2147483648	; 0x80000000
   28e68:	bcc	28f40 <main@@Base+0x12eb0>
   28e6c:	mov	r0, r9
   28e70:	mov	r1, r4
   28e74:	mov	r2, r8
   28e78:	mov	r3, #8
   28e7c:	b	28f2c <main@@Base+0x12e9c>
   28e80:	add	r7, sl, #8
   28e84:	mov	r1, #8
   28e88:	mov	r2, #-268435456	; 0xf0000000
   28e8c:	sub	r0, r8, r7
   28e90:	cmp	r0, #8
   28e94:	movcc	r1, r0
   28e98:	add	r1, r2, r1, lsl #28
   28e9c:	asr	r1, r1, #28
   28ea0:	cmp	r1, #0
   28ea4:	blt	29c18 <main@@Base+0x13b88>
   28ea8:	ldrb	r1, [r7]
   28eac:	cmp	r1, #53	; 0x35
   28eb0:	bne	29c18 <main@@Base+0x13b88>
   28eb4:	cmp	r0, #2
   28eb8:	blt	29c14 <main@@Base+0x13b84>
   28ebc:	ldr	r2, [sp, #28]
   28ec0:	mov	r1, sl
   28ec4:	ldrb	r0, [r1, #9]!
   28ec8:	ldr	r2, [r2]
   28ecc:	cmp	r2, #0
   28ed0:	beq	28fc4 <main@@Base+0x12f34>
   28ed4:	cmp	r0, #33	; 0x21
   28ed8:	bcc	28ee4 <main@@Base+0x12e54>
   28edc:	cmp	r0, #58	; 0x3a
   28ee0:	bne	29c14 <main@@Base+0x13b84>
   28ee4:	ldr	r0, [sp, #28]
   28ee8:	mov	r2, #0
   28eec:	str	r2, [r0]
   28ef0:	b	28fd0 <main@@Base+0x12f40>
   28ef4:	ldr	r6, [sp, #32]
   28ef8:	mov	sl, #0
   28efc:	mov	r4, r8
   28f00:	b	28f50 <main@@Base+0x12ec0>
   28f04:	mov	r5, #0
   28f08:	mov	sl, #0
   28f0c:	mov	r4, r7
   28f10:	b	28f50 <main@@Base+0x12ec0>
   28f14:	cmn	sl, #1
   28f18:	bgt	28f48 <main@@Base+0x12eb8>
   28f1c:	mov	r0, r9
   28f20:	mov	r1, r4
   28f24:	mov	r2, r8
   28f28:	mov	r3, #7
   28f2c:	bl	337ac <flatcc_json_parser_set_error@@Base>
   28f30:	mov	r4, r0
   28f34:	mov	r5, #0
   28f38:	mov	sl, #0
   28f3c:	b	28f50 <main@@Base+0x12ec0>
   28f40:	rsbs	r5, r5, #0
   28f44:	rsc	sl, sl, #0
   28f48:	str	r5, [sp, #40]	; 0x28
   28f4c:	str	sl, [sp, #44]	; 0x2c
   28f50:	cmp	r7, r4
   28f54:	bne	28f90 <main@@Base+0x12f00>
   28f58:	movw	r3, #45656	; 0xb258
   28f5c:	add	r0, sp, #40	; 0x28
   28f60:	mov	r1, r7
   28f64:	mov	r2, r8
   28f68:	str	r0, [sp]
   28f6c:	mov	r0, r9
   28f70:	movt	r3, #5
   28f74:	bl	24ed4 <main@@Base+0xee44>
   28f78:	mov	r4, r0
   28f7c:	cmp	r0, r7
   28f80:	cmpne	r4, r8
   28f84:	beq	29e50 <main@@Base+0x13dc0>
   28f88:	ldr	r5, [sp, #40]	; 0x28
   28f8c:	ldr	sl, [sp, #44]	; 0x2c
   28f90:	orrs	r0, r5, sl
   28f94:	bne	28fa4 <main@@Base+0x12f14>
   28f98:	ldrb	r0, [r9, #8]
   28f9c:	tst	r0, #2
   28fa0:	beq	29c30 <main@@Base+0x13ba0>
   28fa4:	ldr	r0, [r9]
   28fa8:	mov	r1, #5
   28fac:	mov	r2, #8
   28fb0:	mov	r3, #8
   28fb4:	bl	30b5c <flatcc_builder_table_add@@Base>
   28fb8:	cmp	r0, #0
   28fbc:	bne	297f4 <main@@Base+0x13764>
   28fc0:	b	29e50 <main@@Base+0x13dc0>
   28fc4:	cmp	r0, #34	; 0x22
   28fc8:	bne	29c14 <main@@Base+0x13b84>
   28fcc:	add	r1, sl, #10
   28fd0:	sub	r0, r8, r1
   28fd4:	cmp	r0, #2
   28fd8:	blt	29448 <main@@Base+0x133b8>
   28fdc:	ldrb	r0, [r1]
   28fe0:	cmp	r0, #32
   28fe4:	bls	29434 <main@@Base+0x133a4>
   28fe8:	mov	r9, r1
   28fec:	b	29458 <main@@Base+0x133c8>
   28ff0:	bne	29004 <main@@Base+0x12f74>
   28ff4:	mov	r9, r1
   28ff8:	ldrb	r0, [r9, #1]!
   28ffc:	cmp	r0, #32
   29000:	bhi	29014 <main@@Base+0x12f84>
   29004:	ldr	r0, [sp, #24]
   29008:	mov	r2, r8
   2900c:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   29010:	mov	r9, r0
   29014:	cmp	r9, r8
   29018:	beq	2904c <main@@Base+0x12fbc>
   2901c:	ldrb	r0, [r9]
   29020:	cmp	r0, #58	; 0x3a
   29024:	bne	2904c <main@@Base+0x12fbc>
   29028:	add	r1, r9, #1
   2902c:	sub	r0, r8, r1
   29030:	cmp	r0, #2
   29034:	blt	29838 <main@@Base+0x137a8>
   29038:	ldrb	r0, [r1]
   2903c:	cmp	r0, #32
   29040:	bls	29828 <main@@Base+0x13798>
   29044:	mov	r9, r1
   29048:	b	29848 <main@@Base+0x137b8>
   2904c:	ldr	r0, [sp, #24]
   29050:	mov	r1, r9
   29054:	mov	r2, r8
   29058:	mov	r3, #4
   2905c:	bl	337ac <flatcc_json_parser_set_error@@Base>
   29060:	b	29844 <main@@Base+0x137b4>
   29064:	bne	29074 <main@@Base+0x12fe4>
   29068:	ldrb	r0, [r1, #2]!
   2906c:	cmp	r0, #32
   29070:	bhi	29088 <main@@Base+0x12ff8>
   29074:	ldr	r0, [sp, #24]
   29078:	mov	r1, r2
   2907c:	mov	r2, r8
   29080:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   29084:	mov	r1, r0
   29088:	cmp	sl, r1
   2908c:	beq	290c0 <main@@Base+0x13030>
   29090:	ldr	r9, [sp, #24]
   29094:	mov	r2, r8
   29098:	add	r3, sp, #36	; 0x24
   2909c:	mov	r0, r9
   290a0:	bl	35be8 <flatcc_json_parser_build_string@@Base>
   290a4:	mov	r4, r0
   290a8:	ldr	r0, [sp, #36]	; 0x24
   290ac:	cmp	r0, #0
   290b0:	beq	29e50 <main@@Base+0x13dc0>
   290b4:	ldr	r0, [r9]
   290b8:	mov	r1, #0
   290bc:	b	299cc <main@@Base+0x1393c>
   290c0:	movw	r1, #25186	; 0x6262
   290c4:	movt	r1, #25186	; 0x6262
   290c8:	eor	r0, r7, r1
   290cc:	orrs	r0, r5, r0
   290d0:	bne	29120 <main@@Base+0x13090>
   290d4:	cmp	r9, #9
   290d8:	ldr	r9, [sp, #24]
   290dc:	mov	r7, sl
   290e0:	blt	294cc <main@@Base+0x1343c>
   290e4:	ldr	r2, [sp, #28]
   290e8:	mov	r1, sl
   290ec:	ldrb	r0, [r1, #8]!
   290f0:	ldr	r2, [r2]
   290f4:	cmp	r2, #0
   290f8:	beq	29174 <main@@Base+0x130e4>
   290fc:	cmp	r0, #33	; 0x21
   29100:	bcc	29110 <main@@Base+0x13080>
   29104:	cmp	r0, #58	; 0x3a
   29108:	mov	r7, sl
   2910c:	bne	294cc <main@@Base+0x1343c>
   29110:	ldr	r0, [sp, #28]
   29114:	mov	r2, #0
   29118:	str	r2, [r0]
   2911c:	b	29184 <main@@Base+0x130f4>
   29120:	teq	r7, r1
   29124:	bne	2937c <main@@Base+0x132ec>
   29128:	cmp	r9, #5
   2912c:	ldr	r9, [sp, #24]
   29130:	mov	r1, sl
   29134:	blt	2999c <main@@Base+0x1390c>
   29138:	ldr	r1, [sp, #28]
   2913c:	mov	r2, sl
   29140:	ldrb	r0, [r2, #4]!
   29144:	ldr	r1, [r1]
   29148:	cmp	r1, #0
   2914c:	beq	291a4 <main@@Base+0x13114>
   29150:	cmp	r0, #33	; 0x21
   29154:	bcc	29164 <main@@Base+0x130d4>
   29158:	cmp	r0, #58	; 0x3a
   2915c:	mov	r1, sl
   29160:	bne	2999c <main@@Base+0x1390c>
   29164:	ldr	r0, [sp, #28]
   29168:	mov	r1, #0
   2916c:	str	r1, [r0]
   29170:	b	291b4 <main@@Base+0x13124>
   29174:	cmp	r0, #34	; 0x22
   29178:	mov	r7, sl
   2917c:	bne	294cc <main@@Base+0x1343c>
   29180:	add	r1, sl, #9
   29184:	sub	r0, r8, r1
   29188:	cmp	r0, #2
   2918c:	blt	291e8 <main@@Base+0x13158>
   29190:	ldrb	r0, [r1]
   29194:	cmp	r0, #32
   29198:	bls	291d4 <main@@Base+0x13144>
   2919c:	mov	r7, r1
   291a0:	b	291f8 <main@@Base+0x13168>
   291a4:	cmp	r0, #34	; 0x22
   291a8:	mov	r1, sl
   291ac:	bne	2999c <main@@Base+0x1390c>
   291b0:	add	r2, sl, #5
   291b4:	sub	r0, r8, r2
   291b8:	cmp	r0, #2
   291bc:	blt	29260 <main@@Base+0x131d0>
   291c0:	ldrb	r0, [r2]
   291c4:	cmp	r0, #32
   291c8:	bls	2924c <main@@Base+0x131bc>
   291cc:	mov	r1, r2
   291d0:	b	29274 <main@@Base+0x131e4>
   291d4:	bne	291e8 <main@@Base+0x13158>
   291d8:	mov	r7, r1
   291dc:	ldrb	r0, [r7, #1]!
   291e0:	cmp	r0, #32
   291e4:	bhi	291f8 <main@@Base+0x13168>
   291e8:	mov	r0, r9
   291ec:	mov	r2, r8
   291f0:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   291f4:	mov	r7, r0
   291f8:	cmp	r7, r8
   291fc:	beq	29234 <main@@Base+0x131a4>
   29200:	ldrb	r0, [r7]
   29204:	cmp	r0, #58	; 0x3a
   29208:	bne	29234 <main@@Base+0x131a4>
   2920c:	add	r1, r7, #1
   29210:	sub	r0, r8, r1
   29214:	cmp	r0, #2
   29218:	blt	294bc <main@@Base+0x1342c>
   2921c:	ldrb	r0, [r1]
   29220:	cmp	r0, #32
   29224:	bls	294a8 <main@@Base+0x13418>
   29228:	ldr	r9, [sp, #24]
   2922c:	mov	r7, r1
   29230:	b	294cc <main@@Base+0x1343c>
   29234:	mov	r0, r9
   29238:	mov	r1, r7
   2923c:	mov	r2, r8
   29240:	mov	r3, #4
   29244:	bl	337ac <flatcc_json_parser_set_error@@Base>
   29248:	b	294c8 <main@@Base+0x13438>
   2924c:	bne	29260 <main@@Base+0x131d0>
   29250:	mov	r1, r2
   29254:	ldrb	r0, [r1, #1]!
   29258:	cmp	r0, #32
   2925c:	bhi	29274 <main@@Base+0x131e4>
   29260:	mov	r1, r2
   29264:	mov	r0, r9
   29268:	mov	r2, r8
   2926c:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   29270:	mov	r1, r0
   29274:	cmp	r1, r8
   29278:	beq	292b0 <main@@Base+0x13220>
   2927c:	ldrb	r0, [r1]
   29280:	cmp	r0, #58	; 0x3a
   29284:	bne	292b0 <main@@Base+0x13220>
   29288:	add	r2, r1, #1
   2928c:	sub	r0, r8, r2
   29290:	cmp	r0, #2
   29294:	blt	29988 <main@@Base+0x138f8>
   29298:	ldrb	r0, [r2]
   2929c:	cmp	r0, #32
   292a0:	bls	29974 <main@@Base+0x138e4>
   292a4:	ldr	r9, [sp, #24]
   292a8:	mov	r1, r2
   292ac:	b	2999c <main@@Base+0x1390c>
   292b0:	mov	r0, r9
   292b4:	mov	r2, r8
   292b8:	mov	r3, #4
   292bc:	bl	337ac <flatcc_json_parser_set_error@@Base>
   292c0:	b	29998 <main@@Base+0x13908>
   292c4:	bne	292d4 <main@@Base+0x13244>
   292c8:	ldrb	r0, [r1, #2]!
   292cc:	cmp	r0, #32
   292d0:	bhi	292e8 <main@@Base+0x13258>
   292d4:	ldr	r0, [sp, #24]
   292d8:	mov	r1, r2
   292dc:	mov	r2, r8
   292e0:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   292e4:	mov	r1, r0
   292e8:	cmp	sl, r1
   292ec:	beq	29320 <main@@Base+0x13290>
   292f0:	ldr	r9, [sp, #24]
   292f4:	mov	r2, r8
   292f8:	add	r3, sp, #36	; 0x24
   292fc:	mov	r0, r9
   29300:	bl	35be8 <flatcc_json_parser_build_string@@Base>
   29304:	mov	r4, r0
   29308:	ldr	r0, [sp, #36]	; 0x24
   2930c:	cmp	r0, #0
   29310:	beq	29e50 <main@@Base+0x13dc0>
   29314:	ldr	r0, [r9]
   29318:	mov	r1, #4
   2931c:	b	299cc <main@@Base+0x1393c>
   29320:	ldr	r0, [sp, #12]
   29324:	eor	r0, r7, r0
   29328:	orrs	r0, r5, r0
   2932c:	bne	2937c <main@@Base+0x132ec>
   29330:	cmp	r9, #9
   29334:	ldr	r9, [sp, #24]
   29338:	mov	r7, sl
   2933c:	blt	29630 <main@@Base+0x135a0>
   29340:	ldr	r2, [sp, #28]
   29344:	mov	r1, sl
   29348:	ldrb	r0, [r1, #8]!
   2934c:	ldr	r2, [r2]
   29350:	cmp	r2, #0
   29354:	beq	2938c <main@@Base+0x132fc>
   29358:	cmp	r0, #33	; 0x21
   2935c:	bcc	2936c <main@@Base+0x132dc>
   29360:	cmp	r0, #58	; 0x3a
   29364:	mov	r7, sl
   29368:	bne	29630 <main@@Base+0x135a0>
   2936c:	ldr	r0, [sp, #28]
   29370:	mov	r2, #0
   29374:	str	r2, [r0]
   29378:	b	2939c <main@@Base+0x1330c>
   2937c:	ldr	r9, [sp, #24]
   29380:	mov	r0, r9
   29384:	mov	r1, sl
   29388:	b	29c20 <main@@Base+0x13b90>
   2938c:	cmp	r0, #34	; 0x22
   29390:	mov	r7, sl
   29394:	bne	29630 <main@@Base+0x135a0>
   29398:	add	r1, sl, #9
   2939c:	sub	r0, r8, r1
   293a0:	cmp	r0, #2
   293a4:	blt	293d0 <main@@Base+0x13340>
   293a8:	ldrb	r0, [r1]
   293ac:	cmp	r0, #32
   293b0:	bls	293bc <main@@Base+0x1332c>
   293b4:	mov	r7, r1
   293b8:	b	293e0 <main@@Base+0x13350>
   293bc:	bne	293d0 <main@@Base+0x13340>
   293c0:	mov	r7, r1
   293c4:	ldrb	r0, [r7, #1]!
   293c8:	cmp	r0, #32
   293cc:	bhi	293e0 <main@@Base+0x13350>
   293d0:	mov	r0, r9
   293d4:	mov	r2, r8
   293d8:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   293dc:	mov	r7, r0
   293e0:	cmp	r7, r8
   293e4:	beq	2941c <main@@Base+0x1338c>
   293e8:	ldrb	r0, [r7]
   293ec:	cmp	r0, #58	; 0x3a
   293f0:	bne	2941c <main@@Base+0x1338c>
   293f4:	add	r1, r7, #1
   293f8:	sub	r0, r8, r1
   293fc:	cmp	r0, #2
   29400:	blt	29620 <main@@Base+0x13590>
   29404:	ldrb	r0, [r1]
   29408:	cmp	r0, #32
   2940c:	bls	2960c <main@@Base+0x1357c>
   29410:	ldr	r9, [sp, #24]
   29414:	mov	r7, r1
   29418:	b	29630 <main@@Base+0x135a0>
   2941c:	mov	r0, r9
   29420:	mov	r1, r7
   29424:	mov	r2, r8
   29428:	mov	r3, #4
   2942c:	bl	337ac <flatcc_json_parser_set_error@@Base>
   29430:	b	2962c <main@@Base+0x1359c>
   29434:	bne	29448 <main@@Base+0x133b8>
   29438:	mov	r9, r1
   2943c:	ldrb	r0, [r9, #1]!
   29440:	cmp	r0, #32
   29444:	bhi	29458 <main@@Base+0x133c8>
   29448:	ldr	r0, [sp, #24]
   2944c:	mov	r2, r8
   29450:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   29454:	mov	r9, r0
   29458:	cmp	r9, r8
   2945c:	beq	29490 <main@@Base+0x13400>
   29460:	ldrb	r0, [r9]
   29464:	cmp	r0, #58	; 0x3a
   29468:	bne	29490 <main@@Base+0x13400>
   2946c:	add	r1, r9, #1
   29470:	sub	r0, r8, r1
   29474:	cmp	r0, #2
   29478:	blt	29a6c <main@@Base+0x139dc>
   2947c:	ldrb	r0, [r1]
   29480:	cmp	r0, #32
   29484:	bls	29a5c <main@@Base+0x139cc>
   29488:	mov	r9, r1
   2948c:	b	29a7c <main@@Base+0x139ec>
   29490:	ldr	r0, [sp, #24]
   29494:	mov	r1, r9
   29498:	mov	r2, r8
   2949c:	mov	r3, #4
   294a0:	bl	337ac <flatcc_json_parser_set_error@@Base>
   294a4:	b	29a78 <main@@Base+0x139e8>
   294a8:	ldr	r9, [sp, #24]
   294ac:	bne	294bc <main@@Base+0x1342c>
   294b0:	ldrb	r0, [r7, #2]!
   294b4:	cmp	r0, #32
   294b8:	bhi	294cc <main@@Base+0x1343c>
   294bc:	mov	r0, r9
   294c0:	mov	r2, r8
   294c4:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   294c8:	mov	r7, r0
   294cc:	cmp	sl, r7
   294d0:	beq	29380 <main@@Base+0x132f0>
   294d4:	mov	r5, #0
   294d8:	cmp	r7, r8
   294dc:	str	r5, [fp, #-36]	; 0xffffffdc
   294e0:	str	r5, [fp, #-40]	; 0xffffffd8
   294e4:	str	r5, [sp, #44]	; 0x2c
   294e8:	str	r5, [sp, #40]	; 0x28
   294ec:	str	r5, [fp, #-44]	; 0xffffffd4
   294f0:	beq	29550 <main@@Base+0x134c0>
   294f4:	sub	r0, fp, #40	; 0x28
   294f8:	mov	r1, r7
   294fc:	mov	r2, r8
   29500:	sub	r3, fp, #44	; 0x2c
   29504:	str	r0, [sp]
   29508:	mov	r0, r9
   2950c:	bl	356c0 <flatcc_json_parser_integer@@Base>
   29510:	ldr	r6, [sp, #32]
   29514:	cmp	r0, r7
   29518:	beq	29560 <main@@Base+0x134d0>
   2951c:	sub	sl, fp, #44	; 0x2c
   29520:	mov	r4, r0
   29524:	ldm	sl, {r0, r5, sl}
   29528:	cmp	r0, #0
   2952c:	beq	29570 <main@@Base+0x134e0>
   29530:	subs	r0, r5, #1
   29534:	sbcs	r0, sl, #-2147483648	; 0x80000000
   29538:	bcc	2959c <main@@Base+0x1350c>
   2953c:	mov	r0, r9
   29540:	mov	r1, r4
   29544:	mov	r2, r8
   29548:	mov	r3, #8
   2954c:	b	29588 <main@@Base+0x134f8>
   29550:	ldr	r6, [sp, #32]
   29554:	mov	sl, #0
   29558:	mov	r4, r8
   2955c:	b	295ac <main@@Base+0x1351c>
   29560:	mov	r5, #0
   29564:	mov	sl, #0
   29568:	mov	r4, r7
   2956c:	b	295ac <main@@Base+0x1351c>
   29570:	cmn	sl, #1
   29574:	bgt	295a4 <main@@Base+0x13514>
   29578:	mov	r0, r9
   2957c:	mov	r1, r4
   29580:	mov	r2, r8
   29584:	mov	r3, #7
   29588:	bl	337ac <flatcc_json_parser_set_error@@Base>
   2958c:	mov	r4, r0
   29590:	mov	r5, #0
   29594:	mov	sl, #0
   29598:	b	295ac <main@@Base+0x1351c>
   2959c:	rsbs	r5, r5, #0
   295a0:	rsc	sl, sl, #0
   295a4:	str	r5, [sp, #40]	; 0x28
   295a8:	str	sl, [sp, #44]	; 0x2c
   295ac:	cmp	r7, r4
   295b0:	bne	295ec <main@@Base+0x1355c>
   295b4:	movw	r3, #45644	; 0xb24c
   295b8:	add	r0, sp, #40	; 0x28
   295bc:	mov	r1, r7
   295c0:	mov	r2, r8
   295c4:	str	r0, [sp]
   295c8:	mov	r0, r9
   295cc:	movt	r3, #5
   295d0:	bl	24ed4 <main@@Base+0xee44>
   295d4:	mov	r4, r0
   295d8:	cmp	r0, r7
   295dc:	cmpne	r4, r8
   295e0:	beq	29e4c <main@@Base+0x13dbc>
   295e4:	ldr	r5, [sp, #40]	; 0x28
   295e8:	ldr	sl, [sp, #44]	; 0x2c
   295ec:	orrs	r0, r5, sl
   295f0:	bne	29600 <main@@Base+0x13570>
   295f4:	ldrb	r0, [r9, #8]
   295f8:	tst	r0, #2
   295fc:	beq	29c30 <main@@Base+0x13ba0>
   29600:	ldr	r0, [r9]
   29604:	mov	r1, #3
   29608:	b	297e0 <main@@Base+0x13750>
   2960c:	ldr	r9, [sp, #24]
   29610:	bne	29620 <main@@Base+0x13590>
   29614:	ldrb	r0, [r7, #2]!
   29618:	cmp	r0, #32
   2961c:	bhi	29630 <main@@Base+0x135a0>
   29620:	mov	r0, r9
   29624:	mov	r2, r8
   29628:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   2962c:	mov	r7, r0
   29630:	cmp	sl, r7
   29634:	beq	296b4 <main@@Base+0x13624>
   29638:	mov	r5, #0
   2963c:	cmp	r7, r8
   29640:	str	r5, [fp, #-36]	; 0xffffffdc
   29644:	str	r5, [fp, #-40]	; 0xffffffd8
   29648:	str	r5, [sp, #44]	; 0x2c
   2964c:	str	r5, [sp, #40]	; 0x28
   29650:	str	r5, [fp, #-44]	; 0xffffffd4
   29654:	beq	29728 <main@@Base+0x13698>
   29658:	sub	r0, fp, #40	; 0x28
   2965c:	mov	r1, r7
   29660:	mov	r2, r8
   29664:	sub	r3, fp, #44	; 0x2c
   29668:	str	r0, [sp]
   2966c:	mov	r0, r9
   29670:	bl	356c0 <flatcc_json_parser_integer@@Base>
   29674:	ldr	r6, [sp, #32]
   29678:	cmp	r0, r7
   2967c:	beq	29738 <main@@Base+0x136a8>
   29680:	sub	sl, fp, #44	; 0x2c
   29684:	mov	r4, r0
   29688:	ldm	sl, {r0, r5, sl}
   2968c:	cmp	r0, #0
   29690:	beq	29748 <main@@Base+0x136b8>
   29694:	subs	r0, r5, #1
   29698:	sbcs	r0, sl, #-2147483648	; 0x80000000
   2969c:	bcc	29774 <main@@Base+0x136e4>
   296a0:	mov	r0, r9
   296a4:	mov	r1, r4
   296a8:	mov	r2, r8
   296ac:	mov	r3, #8
   296b0:	b	29760 <main@@Base+0x136d0>
   296b4:	add	r7, sl, #8
   296b8:	mov	r1, #8
   296bc:	mov	r2, #-268435456	; 0xf0000000
   296c0:	sub	r0, r8, r7
   296c4:	cmp	r0, #8
   296c8:	movcc	r1, r0
   296cc:	add	r1, r2, r1, lsl #28
   296d0:	asr	r1, r1, #28
   296d4:	cmp	r1, #0
   296d8:	blt	29c18 <main@@Base+0x13b88>
   296dc:	ldrb	r1, [r7]
   296e0:	cmp	r1, #53	; 0x35
   296e4:	bne	29c18 <main@@Base+0x13b88>
   296e8:	cmp	r0, #2
   296ec:	blt	29c14 <main@@Base+0x13b84>
   296f0:	ldr	r2, [sp, #28]
   296f4:	mov	r1, sl
   296f8:	ldrb	r0, [r1, #9]!
   296fc:	ldr	r2, [r2]
   29700:	cmp	r2, #0
   29704:	beq	297fc <main@@Base+0x1376c>
   29708:	cmp	r0, #33	; 0x21
   2970c:	bcc	29718 <main@@Base+0x13688>
   29710:	cmp	r0, #58	; 0x3a
   29714:	bne	29c14 <main@@Base+0x13b84>
   29718:	ldr	r0, [sp, #28]
   2971c:	mov	r2, #0
   29720:	str	r2, [r0]
   29724:	b	29808 <main@@Base+0x13778>
   29728:	ldr	r6, [sp, #32]
   2972c:	mov	sl, #0
   29730:	mov	r4, r8
   29734:	b	29784 <main@@Base+0x136f4>
   29738:	mov	r5, #0
   2973c:	mov	sl, #0
   29740:	mov	r4, r7
   29744:	b	29784 <main@@Base+0x136f4>
   29748:	cmn	sl, #1
   2974c:	bgt	2977c <main@@Base+0x136ec>
   29750:	mov	r0, r9
   29754:	mov	r1, r4
   29758:	mov	r2, r8
   2975c:	mov	r3, #7
   29760:	bl	337ac <flatcc_json_parser_set_error@@Base>
   29764:	mov	r4, r0
   29768:	mov	r5, #0
   2976c:	mov	sl, #0
   29770:	b	29784 <main@@Base+0x136f4>
   29774:	rsbs	r5, r5, #0
   29778:	rsc	sl, sl, #0
   2977c:	str	r5, [sp, #40]	; 0x28
   29780:	str	sl, [sp, #44]	; 0x2c
   29784:	cmp	r7, r4
   29788:	bne	297c4 <main@@Base+0x13734>
   2978c:	movw	r3, #45680	; 0xb270
   29790:	add	r0, sp, #40	; 0x28
   29794:	mov	r1, r7
   29798:	mov	r2, r8
   2979c:	str	r0, [sp]
   297a0:	mov	r0, r9
   297a4:	movt	r3, #5
   297a8:	bl	24ed4 <main@@Base+0xee44>
   297ac:	mov	r4, r0
   297b0:	cmp	r0, r7
   297b4:	cmpne	r4, r8
   297b8:	beq	29e4c <main@@Base+0x13dbc>
   297bc:	ldr	r5, [sp, #40]	; 0x28
   297c0:	ldr	sl, [sp, #44]	; 0x2c
   297c4:	orrs	r0, r5, sl
   297c8:	bne	297d8 <main@@Base+0x13748>
   297cc:	ldrb	r0, [r9, #8]
   297d0:	tst	r0, #2
   297d4:	beq	29c30 <main@@Base+0x13ba0>
   297d8:	ldr	r0, [r9]
   297dc:	mov	r1, #7
   297e0:	mov	r2, #8
   297e4:	mov	r3, #8
   297e8:	bl	30b5c <flatcc_builder_table_add@@Base>
   297ec:	cmp	r0, #0
   297f0:	beq	29e4c <main@@Base+0x13dbc>
   297f4:	stm	r0, {r5, sl}
   297f8:	b	29c30 <main@@Base+0x13ba0>
   297fc:	cmp	r0, #34	; 0x22
   29800:	bne	29c14 <main@@Base+0x13b84>
   29804:	add	r1, sl, #10
   29808:	sub	r0, r8, r1
   2980c:	cmp	r0, #2
   29810:	blt	299fc <main@@Base+0x1396c>
   29814:	ldrb	r0, [r1]
   29818:	cmp	r0, #32
   2981c:	bls	299e8 <main@@Base+0x13958>
   29820:	mov	r9, r1
   29824:	b	29a0c <main@@Base+0x1397c>
   29828:	bne	29838 <main@@Base+0x137a8>
   2982c:	ldrb	r0, [r9, #2]!
   29830:	cmp	r0, #32
   29834:	bhi	29848 <main@@Base+0x137b8>
   29838:	ldr	r0, [sp, #24]
   2983c:	mov	r2, r8
   29840:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   29844:	mov	r9, r0
   29848:	cmp	r7, r9
   2984c:	beq	29c14 <main@@Base+0x13b84>
   29850:	mov	r5, #0
   29854:	cmp	r9, r8
   29858:	str	r5, [fp, #-36]	; 0xffffffdc
   2985c:	str	r5, [fp, #-40]	; 0xffffffd8
   29860:	str	r5, [fp, #-44]	; 0xffffffd4
   29864:	str	r5, [sp, #40]	; 0x28
   29868:	beq	298b4 <main@@Base+0x13824>
   2986c:	sub	r0, fp, #40	; 0x28
   29870:	mov	r1, r9
   29874:	mov	r2, r8
   29878:	add	r3, sp, #40	; 0x28
   2987c:	str	r0, [sp]
   29880:	ldr	r0, [sp, #24]
   29884:	bl	356c0 <flatcc_json_parser_integer@@Base>
   29888:	cmp	r0, r9
   2988c:	beq	298bc <main@@Base+0x1382c>
   29890:	mov	r4, r0
   29894:	ldr	r0, [sp, #40]	; 0x28
   29898:	cmp	r0, #0
   2989c:	beq	298c4 <main@@Base+0x13834>
   298a0:	ldr	r0, [sp, #24]
   298a4:	mov	r1, r4
   298a8:	mov	r2, r8
   298ac:	mov	r3, #8
   298b0:	b	298e0 <main@@Base+0x13850>
   298b4:	mov	r4, r8
   298b8:	b	298e8 <main@@Base+0x13858>
   298bc:	mov	r4, r9
   298c0:	b	298e8 <main@@Base+0x13858>
   298c4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   298c8:	cmp	r0, #0
   298cc:	beq	29968 <main@@Base+0x138d8>
   298d0:	ldr	r0, [sp, #24]
   298d4:	mov	r1, r4
   298d8:	mov	r2, r8
   298dc:	mov	r3, #7
   298e0:	bl	337ac <flatcc_json_parser_set_error@@Base>
   298e4:	mov	r4, r0
   298e8:	ldr	r6, [sp, #32]
   298ec:	cmp	r9, r4
   298f0:	bne	2992c <main@@Base+0x1389c>
   298f4:	sub	r0, fp, #44	; 0x2c
   298f8:	movw	r3, #45632	; 0xb240
   298fc:	mov	r1, r9
   29900:	mov	r2, r8
   29904:	str	r0, [sp]
   29908:	ldr	r0, [sp, #24]
   2990c:	movt	r3, #5
   29910:	bl	250e0 <main@@Base+0xf050>
   29914:	mov	r4, r0
   29918:	cmp	r0, r9
   2991c:	cmpne	r4, r8
   29920:	beq	29e4c <main@@Base+0x13dbc>
   29924:	ldr	r5, [fp, #-44]	; 0xffffffd4
   29928:	ldr	r6, [sp, #32]
   2992c:	ldr	r9, [sp, #24]
   29930:	cmp	r5, #0
   29934:	bne	29944 <main@@Base+0x138b4>
   29938:	ldrb	r0, [r9, #8]
   2993c:	tst	r0, #2
   29940:	beq	29c30 <main@@Base+0x13ba0>
   29944:	ldr	r0, [r9]
   29948:	mov	r1, #1
   2994c:	mov	r2, #4
   29950:	mov	r3, #4
   29954:	bl	30b5c <flatcc_builder_table_add@@Base>
   29958:	cmp	r0, #0
   2995c:	beq	29e4c <main@@Base+0x13dbc>
   29960:	str	r5, [r0]
   29964:	b	29c30 <main@@Base+0x13ba0>
   29968:	ldr	r5, [fp, #-40]	; 0xffffffd8
   2996c:	str	r5, [fp, #-44]	; 0xffffffd4
   29970:	b	298e8 <main@@Base+0x13858>
   29974:	ldr	r9, [sp, #24]
   29978:	bne	29988 <main@@Base+0x138f8>
   2997c:	ldrb	r0, [r1, #2]!
   29980:	cmp	r0, #32
   29984:	bhi	2999c <main@@Base+0x1390c>
   29988:	mov	r1, r2
   2998c:	mov	r0, r9
   29990:	mov	r2, r8
   29994:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   29998:	mov	r1, r0
   2999c:	cmp	sl, r1
   299a0:	beq	29380 <main@@Base+0x132f0>
   299a4:	mov	r0, r9
   299a8:	mov	r2, r8
   299ac:	add	r3, sp, #36	; 0x24
   299b0:	bl	35be8 <flatcc_json_parser_build_string@@Base>
   299b4:	mov	r4, r0
   299b8:	ldr	r0, [sp, #36]	; 0x24
   299bc:	cmp	r0, #0
   299c0:	beq	29e50 <main@@Base+0x13dc0>
   299c4:	ldr	r0, [r9]
   299c8:	mov	r1, #2
   299cc:	bl	30a20 <flatcc_builder_table_add_offset@@Base>
   299d0:	ldr	r6, [sp, #32]
   299d4:	cmp	r0, #0
   299d8:	beq	29e50 <main@@Base+0x13dc0>
   299dc:	ldr	r1, [sp, #36]	; 0x24
   299e0:	str	r1, [r0]
   299e4:	b	29c30 <main@@Base+0x13ba0>
   299e8:	bne	299fc <main@@Base+0x1396c>
   299ec:	mov	r9, r1
   299f0:	ldrb	r0, [r9, #1]!
   299f4:	cmp	r0, #32
   299f8:	bhi	29a0c <main@@Base+0x1397c>
   299fc:	ldr	r0, [sp, #24]
   29a00:	mov	r2, r8
   29a04:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   29a08:	mov	r9, r0
   29a0c:	cmp	r9, r8
   29a10:	beq	29a44 <main@@Base+0x139b4>
   29a14:	ldrb	r0, [r9]
   29a18:	cmp	r0, #58	; 0x3a
   29a1c:	bne	29a44 <main@@Base+0x139b4>
   29a20:	add	r1, r9, #1
   29a24:	sub	r0, r8, r1
   29a28:	cmp	r0, #2
   29a2c:	blt	29b98 <main@@Base+0x13b08>
   29a30:	ldrb	r0, [r1]
   29a34:	cmp	r0, #32
   29a38:	bls	29b88 <main@@Base+0x13af8>
   29a3c:	mov	r9, r1
   29a40:	b	29ba8 <main@@Base+0x13b18>
   29a44:	ldr	r0, [sp, #24]
   29a48:	mov	r1, r9
   29a4c:	mov	r2, r8
   29a50:	mov	r3, #4
   29a54:	bl	337ac <flatcc_json_parser_set_error@@Base>
   29a58:	b	29ba4 <main@@Base+0x13b14>
   29a5c:	bne	29a6c <main@@Base+0x139dc>
   29a60:	ldrb	r0, [r9, #2]!
   29a64:	cmp	r0, #32
   29a68:	bhi	29a7c <main@@Base+0x139ec>
   29a6c:	ldr	r0, [sp, #24]
   29a70:	mov	r2, r8
   29a74:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   29a78:	mov	r9, r0
   29a7c:	cmp	r7, r9
   29a80:	beq	29c14 <main@@Base+0x13b84>
   29a84:	mov	r5, #0
   29a88:	cmp	r9, r8
   29a8c:	str	r5, [fp, #-36]	; 0xffffffdc
   29a90:	str	r5, [fp, #-40]	; 0xffffffd8
   29a94:	str	r5, [fp, #-44]	; 0xffffffd4
   29a98:	str	r5, [sp, #40]	; 0x28
   29a9c:	beq	29ae8 <main@@Base+0x13a58>
   29aa0:	sub	r0, fp, #40	; 0x28
   29aa4:	mov	r1, r9
   29aa8:	mov	r2, r8
   29aac:	add	r3, sp, #40	; 0x28
   29ab0:	str	r0, [sp]
   29ab4:	ldr	r0, [sp, #24]
   29ab8:	bl	356c0 <flatcc_json_parser_integer@@Base>
   29abc:	cmp	r0, r9
   29ac0:	beq	29af0 <main@@Base+0x13a60>
   29ac4:	mov	r4, r0
   29ac8:	ldr	r0, [sp, #40]	; 0x28
   29acc:	cmp	r0, #0
   29ad0:	beq	29af8 <main@@Base+0x13a68>
   29ad4:	ldr	r0, [sp, #24]
   29ad8:	mov	r1, r4
   29adc:	mov	r2, r8
   29ae0:	mov	r3, #8
   29ae4:	b	29b14 <main@@Base+0x13a84>
   29ae8:	mov	r4, r8
   29aec:	b	29b1c <main@@Base+0x13a8c>
   29af0:	mov	r4, r9
   29af4:	b	29b1c <main@@Base+0x13a8c>
   29af8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   29afc:	cmp	r0, #0
   29b00:	beq	29b7c <main@@Base+0x13aec>
   29b04:	ldr	r0, [sp, #24]
   29b08:	mov	r1, r4
   29b0c:	mov	r2, r8
   29b10:	mov	r3, #7
   29b14:	bl	337ac <flatcc_json_parser_set_error@@Base>
   29b18:	mov	r4, r0
   29b1c:	cmp	r9, r4
   29b20:	bne	29b58 <main@@Base+0x13ac8>
   29b24:	sub	r0, fp, #44	; 0x2c
   29b28:	movw	r3, #45668	; 0xb264
   29b2c:	mov	r1, r9
   29b30:	mov	r2, r8
   29b34:	str	r0, [sp]
   29b38:	ldr	r0, [sp, #24]
   29b3c:	movt	r3, #5
   29b40:	bl	250e0 <main@@Base+0xf050>
   29b44:	mov	r4, r0
   29b48:	cmp	r0, r9
   29b4c:	cmpne	r4, r8
   29b50:	beq	29e4c <main@@Base+0x13dbc>
   29b54:	ldr	r5, [fp, #-44]	; 0xffffffd4
   29b58:	cmp	r5, #0
   29b5c:	bne	29b70 <main@@Base+0x13ae0>
   29b60:	ldr	r0, [sp, #24]
   29b64:	ldrb	r0, [r0, #8]
   29b68:	tst	r0, #2
   29b6c:	beq	288ec <main@@Base+0x1285c>
   29b70:	ldr	r0, [sp, #24]
   29b74:	mov	r1, #6
   29b78:	b	288d0 <main@@Base+0x12840>
   29b7c:	ldr	r5, [fp, #-40]	; 0xffffffd8
   29b80:	str	r5, [fp, #-44]	; 0xffffffd4
   29b84:	b	29b1c <main@@Base+0x13a8c>
   29b88:	bne	29b98 <main@@Base+0x13b08>
   29b8c:	ldrb	r0, [r9, #2]!
   29b90:	cmp	r0, #32
   29b94:	bhi	29ba8 <main@@Base+0x13b18>
   29b98:	ldr	r0, [sp, #24]
   29b9c:	mov	r2, r8
   29ba0:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   29ba4:	mov	r9, r0
   29ba8:	cmp	r7, r9
   29bac:	beq	29c14 <main@@Base+0x13b84>
   29bb0:	mov	r5, #0
   29bb4:	cmp	r9, r8
   29bb8:	str	r5, [fp, #-36]	; 0xffffffdc
   29bbc:	str	r5, [fp, #-40]	; 0xffffffd8
   29bc0:	str	r5, [fp, #-44]	; 0xffffffd4
   29bc4:	str	r5, [sp, #40]	; 0x28
   29bc8:	beq	28840 <main@@Base+0x127b0>
   29bcc:	sub	r0, fp, #40	; 0x28
   29bd0:	mov	r1, r9
   29bd4:	mov	r2, r8
   29bd8:	add	r3, sp, #40	; 0x28
   29bdc:	str	r0, [sp]
   29be0:	ldr	r0, [sp, #24]
   29be4:	bl	356c0 <flatcc_json_parser_integer@@Base>
   29be8:	cmp	r0, r9
   29bec:	beq	28848 <main@@Base+0x127b8>
   29bf0:	mov	r4, r0
   29bf4:	ldr	r0, [sp, #40]	; 0x28
   29bf8:	cmp	r0, #0
   29bfc:	beq	28850 <main@@Base+0x127c0>
   29c00:	ldr	r0, [sp, #24]
   29c04:	mov	r1, r4
   29c08:	mov	r2, r8
   29c0c:	mov	r3, #8
   29c10:	b	2886c <main@@Base+0x127dc>
   29c14:	ldr	r9, [sp, #24]
   29c18:	mov	r0, r9
   29c1c:	mov	r1, r7
   29c20:	mov	r2, r8
   29c24:	bl	33ecc <flatcc_json_parser_unmatched_symbol@@Base>
   29c28:	mov	r4, r0
   29c2c:	ldr	r6, [sp, #32]
   29c30:	sub	r0, r8, r4
   29c34:	cmp	r0, #2
   29c38:	blt	29c64 <main@@Base+0x13bd4>
   29c3c:	ldrb	r0, [r4]
   29c40:	cmp	r0, #32
   29c44:	bls	29c50 <main@@Base+0x13bc0>
   29c48:	mov	r2, r4
   29c4c:	b	29c78 <main@@Base+0x13be8>
   29c50:	bne	29c64 <main@@Base+0x13bd4>
   29c54:	mov	r2, r4
   29c58:	ldrb	r0, [r2, #1]!
   29c5c:	cmp	r0, #32
   29c60:	bhi	29c78 <main@@Base+0x13be8>
   29c64:	mov	r0, r9
   29c68:	mov	r1, r4
   29c6c:	mov	r2, r8
   29c70:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   29c74:	mov	r2, r0
   29c78:	cmp	r2, r8
   29c7c:	beq	29ce8 <main@@Base+0x13c58>
   29c80:	ldrb	r0, [r2]
   29c84:	cmp	r0, #44	; 0x2c
   29c88:	bne	29cf0 <main@@Base+0x13c60>
   29c8c:	add	r1, r2, #1
   29c90:	sub	r0, r8, r1
   29c94:	cmp	r0, #2
   29c98:	blt	29cc0 <main@@Base+0x13c30>
   29c9c:	ldrb	r0, [r1]
   29ca0:	cmp	r0, #32
   29ca4:	bls	29cb0 <main@@Base+0x13c20>
   29ca8:	mov	r2, r1
   29cac:	b	29cd0 <main@@Base+0x13c40>
   29cb0:	bne	29cc0 <main@@Base+0x13c30>
   29cb4:	ldrb	r0, [r2, #2]!
   29cb8:	cmp	r0, #32
   29cbc:	bhi	29cd0 <main@@Base+0x13c40>
   29cc0:	mov	r0, r9
   29cc4:	mov	r2, r8
   29cc8:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   29ccc:	mov	r2, r0
   29cd0:	cmp	r2, r8
   29cd4:	beq	29d1c <main@@Base+0x13c8c>
   29cd8:	ldrb	r0, [r2]
   29cdc:	cmp	r0, #125	; 0x7d
   29ce0:	bne	28900 <main@@Base+0x12870>
   29ce4:	b	29cf8 <main@@Base+0x13c68>
   29ce8:	mov	r4, r8
   29cec:	b	273d8 <main@@Base+0x11348>
   29cf0:	cmp	r0, #125	; 0x7d
   29cf4:	bne	29d28 <main@@Base+0x13c98>
   29cf8:	add	r1, r2, #1
   29cfc:	sub	r0, r8, r1
   29d00:	cmp	r0, #2
   29d04:	blt	29d54 <main@@Base+0x13cc4>
   29d08:	ldrb	r0, [r1]
   29d0c:	cmp	r0, #32
   29d10:	bls	29d40 <main@@Base+0x13cb0>
   29d14:	mov	r4, r1
   29d18:	b	273d8 <main@@Base+0x11348>
   29d1c:	mov	r0, r9
   29d20:	mov	r1, r8
   29d24:	b	29d30 <main@@Base+0x13ca0>
   29d28:	mov	r0, r9
   29d2c:	mov	r1, r2
   29d30:	mov	r2, r8
   29d34:	mov	r3, #10
   29d38:	bl	337ac <flatcc_json_parser_set_error@@Base>
   29d3c:	b	273d4 <main@@Base+0x11344>
   29d40:	bne	29d54 <main@@Base+0x13cc4>
   29d44:	ldrb	r0, [r2, #2]!
   29d48:	cmp	r0, #32
   29d4c:	mov	r4, r2
   29d50:	bhi	273d8 <main@@Base+0x11348>
   29d54:	mov	r0, r9
   29d58:	mov	r2, r8
   29d5c:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   29d60:	b	273d4 <main@@Base+0x11344>
   29d64:	mov	r4, r8
   29d68:	b	29de0 <main@@Base+0x13d50>
   29d6c:	cmp	r0, #125	; 0x7d
   29d70:	bne	29dc8 <main@@Base+0x13d38>
   29d74:	add	r4, r2, #1
   29d78:	sub	r0, r8, r4
   29d7c:	cmp	r0, #2
   29d80:	blt	29da8 <main@@Base+0x13d18>
   29d84:	ldrb	r0, [r4]
   29d88:	cmp	r0, #32
   29d8c:	bhi	29de0 <main@@Base+0x13d50>
   29d90:	bne	29da8 <main@@Base+0x13d18>
   29d94:	ldrb	r0, [r2, #2]!
   29d98:	cmp	r0, #32
   29d9c:	bls	29da8 <main@@Base+0x13d18>
   29da0:	mov	r4, r2
   29da4:	b	29de0 <main@@Base+0x13d50>
   29da8:	mov	r0, r9
   29dac:	mov	r1, r4
   29db0:	mov	r2, r8
   29db4:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   29db8:	b	29ddc <main@@Base+0x13d4c>
   29dbc:	mov	r0, r9
   29dc0:	mov	r1, r8
   29dc4:	b	29dd0 <main@@Base+0x13d40>
   29dc8:	mov	r0, r9
   29dcc:	mov	r1, r2
   29dd0:	mov	r2, r8
   29dd4:	mov	r3, #10
   29dd8:	bl	337ac <flatcc_json_parser_set_error@@Base>
   29ddc:	mov	r4, r0
   29de0:	ldr	r0, [sp, #20]
   29de4:	ldr	r0, [r0]
   29de8:	cmp	r0, #0
   29dec:	beq	29e14 <main@@Base+0x13d84>
   29df0:	mov	r0, r9
   29df4:	mov	r1, r4
   29df8:	mov	r2, r8
   29dfc:	mov	r3, #33	; 0x21
   29e00:	bl	337ac <flatcc_json_parser_set_error@@Base>
   29e04:	mov	r4, r0
   29e08:	mov	r0, r4
   29e0c:	sub	sp, fp, #28
   29e10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   29e14:	ldr	r0, [r9]
   29e18:	bl	3021c <flatcc_builder_end_table@@Base>
   29e1c:	cmp	r0, #0
   29e20:	str	r0, [r6]
   29e24:	bne	29e08 <main@@Base+0x13d78>
   29e28:	b	29df0 <main@@Base+0x13d60>
   29e2c:	bne	29e3c <main@@Base+0x13dac>
   29e30:	ldrb	r0, [r4, #2]!
   29e34:	cmp	r0, #32
   29e38:	bhi	26bbc <main@@Base+0x10b2c>
   29e3c:	mov	r0, r9
   29e40:	mov	r2, r8
   29e44:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   29e48:	b	26bb8 <main@@Base+0x10b28>
   29e4c:	ldr	r9, [sp, #24]
   29e50:	mov	r0, r9
   29e54:	mov	r1, r4
   29e58:	mov	r2, r8
   29e5c:	mov	r3, #33	; 0x21
   29e60:	bl	337ac <flatcc_json_parser_set_error@@Base>
   29e64:	mov	r4, r0
   29e68:	b	29df0 <main@@Base+0x13d60>
   29e6c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   29e70:	add	fp, sp, #28
   29e74:	sub	sp, sp, #44	; 0x2c
   29e78:	mov	sl, r0
   29e7c:	mov	r0, #0
   29e80:	mov	r7, r1
   29e84:	mov	r1, #10
   29e88:	mov	r4, r3
   29e8c:	mov	r5, r2
   29e90:	str	r0, [r3]
   29e94:	ldr	r0, [sl]
   29e98:	bl	2f88c <flatcc_builder_start_table@@Base>
   29e9c:	cmp	r0, #0
   29ea0:	beq	29ec8 <main@@Base+0x13e38>
   29ea4:	mov	r0, sl
   29ea8:	mov	r1, r7
   29eac:	mov	r2, r5
   29eb0:	mov	r3, #33	; 0x21
   29eb4:	bl	337ac <flatcc_json_parser_set_error@@Base>
   29eb8:	mov	r7, r0
   29ebc:	mov	r0, r7
   29ec0:	sub	sp, fp, #28
   29ec4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   29ec8:	sub	r0, fp, #32
   29ecc:	mov	r1, r7
   29ed0:	mov	r2, r5
   29ed4:	mov	r3, #5
   29ed8:	str	r0, [sp]
   29edc:	mov	r0, sl
   29ee0:	bl	35dbc <flatcc_json_parser_prepare_unions@@Base>
   29ee4:	cmp	r0, r5
   29ee8:	beq	29ea4 <main@@Base+0x13e14>
   29eec:	cmp	r7, r5
   29ef0:	beq	29f24 <main@@Base+0x13e94>
   29ef4:	ldrb	r0, [r7]
   29ef8:	cmp	r0, #123	; 0x7b
   29efc:	bne	29f24 <main@@Base+0x13e94>
   29f00:	add	r1, r7, #1
   29f04:	sub	r0, r5, r1
   29f08:	cmp	r0, #2
   29f0c:	blt	29f88 <main@@Base+0x13ef8>
   29f10:	ldrb	r0, [r1]
   29f14:	cmp	r0, #32
   29f18:	bls	29f78 <main@@Base+0x13ee8>
   29f1c:	mov	r7, r1
   29f20:	b	29f98 <main@@Base+0x13f08>
   29f24:	mov	r0, sl
   29f28:	mov	r1, r7
   29f2c:	mov	r2, r5
   29f30:	mov	r3, #21
   29f34:	bl	337ac <flatcc_json_parser_set_error@@Base>
   29f38:	mov	r7, r0
   29f3c:	ldr	r0, [sl, #24]
   29f40:	cmp	r0, #0
   29f44:	bne	29ea4 <main@@Base+0x13e14>
   29f48:	ldr	r3, [fp, #-32]	; 0xffffffe0
   29f4c:	mov	r0, sl
   29f50:	mov	r1, r7
   29f54:	mov	r2, r5
   29f58:	bl	35e40 <flatcc_json_parser_finalize_unions@@Base>
   29f5c:	mov	r7, r0
   29f60:	ldr	r0, [sl]
   29f64:	bl	3021c <flatcc_builder_end_table@@Base>
   29f68:	cmp	r0, #0
   29f6c:	str	r0, [r4]
   29f70:	bne	29ebc <main@@Base+0x13e2c>
   29f74:	b	29ea4 <main@@Base+0x13e14>
   29f78:	bne	29f88 <main@@Base+0x13ef8>
   29f7c:	ldrb	r0, [r7, #2]!
   29f80:	cmp	r0, #32
   29f84:	bhi	29f98 <main@@Base+0x13f08>
   29f88:	mov	r0, sl
   29f8c:	mov	r2, r5
   29f90:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   29f94:	mov	r7, r0
   29f98:	cmp	r7, r5
   29f9c:	mov	r3, r5
   29fa0:	beq	29fe4 <main@@Base+0x13f54>
   29fa4:	ldrb	r0, [r7]
   29fa8:	cmp	r0, #125	; 0x7d
   29fac:	bne	29fe0 <main@@Base+0x13f50>
   29fb0:	add	r1, r7, #1
   29fb4:	sub	r0, r5, r1
   29fb8:	cmp	r0, #2
   29fbc:	blt	2b41c <main@@Base+0x1538c>
   29fc0:	ldrb	r0, [r1]
   29fc4:	cmp	r0, #32
   29fc8:	bhi	2b3e0 <main@@Base+0x15350>
   29fcc:	bne	2b41c <main@@Base+0x1538c>
   29fd0:	ldrb	r0, [r7, #2]!
   29fd4:	cmp	r0, #32
   29fd8:	bhi	29f3c <main@@Base+0x13eac>
   29fdc:	b	2b41c <main@@Base+0x1538c>
   29fe0:	mov	r3, r7
   29fe4:	add	r0, sl, #12
   29fe8:	str	r5, [sp, #32]
   29fec:	str	r4, [sp, #36]	; 0x24
   29ff0:	str	r0, [sp, #28]
   29ff4:	movw	r0, #24436	; 0x5f74
   29ff8:	movt	r0, #29299	; 0x7273
   29ffc:	add	r0, r0, #65536	; 0x10000
   2a000:	add	r0, r0, #16777216	; 0x1000000
   2a004:	str	r0, [sp, #20]
   2a008:	cmp	r3, r5
   2a00c:	mov	r8, r5
   2a010:	beq	2a064 <main@@Base+0x13fd4>
   2a014:	ldrb	r0, [r3]
   2a018:	cmp	r0, #46	; 0x2e
   2a01c:	beq	2a038 <main@@Base+0x13fa8>
   2a020:	cmp	r0, #34	; 0x22
   2a024:	bne	2a054 <main@@Base+0x13fc4>
   2a028:	ldr	r0, [sp, #28]
   2a02c:	mov	r1, #0
   2a030:	add	r8, r3, #1
   2a034:	b	2a060 <main@@Base+0x13fd0>
   2a038:	mov	r1, r3
   2a03c:	mov	r0, sl
   2a040:	mov	r2, r5
   2a044:	mov	r3, #5
   2a048:	bl	337ac <flatcc_json_parser_set_error@@Base>
   2a04c:	mov	r8, r0
   2a050:	b	2a064 <main@@Base+0x13fd4>
   2a054:	ldr	r0, [sp, #28]
   2a058:	mov	r1, #1
   2a05c:	mov	r8, r3
   2a060:	str	r1, [r0]
   2a064:	sub	ip, r5, r8
   2a068:	mov	r0, #8
   2a06c:	cmp	ip, #8
   2a070:	movcc	r0, ip
   2a074:	and	r0, r0, #15
   2a078:	sub	r6, r0, #1
   2a07c:	cmp	r6, #7
   2a080:	bhi	2ae8c <main@@Base+0x14dfc>
   2a084:	mov	r9, sl
   2a088:	add	sl, pc, #32
   2a08c:	mov	r1, #0
   2a090:	mov	lr, #0
   2a094:	mov	r7, #0
   2a098:	mov	r5, #0
   2a09c:	mov	r3, #0
   2a0a0:	mov	r4, #0
   2a0a4:	mov	r0, #0
   2a0a8:	mov	r2, #0
   2a0ac:	ldr	pc, [sl, r6, lsl #2]
   2a0b0:	andeq	sl, r2, r4, lsl r1
   2a0b4:	andeq	sl, r2, ip, lsl #2
   2a0b8:	andeq	sl, r2, r4, lsl #2
   2a0bc:	strdeq	sl, [r2], -ip
   2a0c0:	strdeq	sl, [r2], -r0
   2a0c4:	andeq	sl, r2, r4, ror #1
   2a0c8:	ldrdeq	sl, [r2], -r4
   2a0cc:	ldrdeq	sl, [r2], -r0
   2a0d0:	ldrb	lr, [r8, #7]
   2a0d4:	ldrb	r0, [r8, #6]
   2a0d8:	mov	r7, r1
   2a0dc:	orr	r0, lr, r0, lsl #8
   2a0e0:	mov	r1, r0
   2a0e4:	ldrb	r0, [r8, #5]
   2a0e8:	mov	r5, r7
   2a0ec:	orr	r1, r1, r0, lsl #16
   2a0f0:	ldrb	r0, [r8, #4]
   2a0f4:	mov	r3, r5
   2a0f8:	orr	r1, r1, r0, lsl #24
   2a0fc:	ldrb	r0, [r8, #3]
   2a100:	orr	r4, r0, r3
   2a104:	ldrb	r0, [r8, #2]
   2a108:	orr	r0, r4, r0, lsl #8
   2a10c:	ldrb	r2, [r8, #1]
   2a110:	orr	r2, r0, r2, lsl #16
   2a114:	ldrb	r0, [r8]
   2a118:	orr	r2, r2, r0, lsl #24
   2a11c:	movw	r0, #29797	; 0x7465
   2a120:	movt	r0, #24931	; 0x6163
   2a124:	subs	r0, r1, r0
   2a128:	movw	r0, #24946	; 0x6172
   2a12c:	movt	r0, #25448	; 0x6368
   2a130:	sbcs	r0, r2, r0
   2a134:	bcs	2a294 <main@@Base+0x14204>
   2a138:	movw	r0, #29817	; 0x7479
   2a13c:	movw	r3, #28005	; 0x6d65
   2a140:	mov	sl, r9
   2a144:	movt	r0, #28511	; 0x6f5f
   2a148:	movt	r3, #25441	; 0x6361
   2a14c:	eor	r0, r1, r0
   2a150:	eor	r3, r2, r3
   2a154:	orrs	r0, r0, r3
   2a158:	beq	2a5c0 <main@@Base+0x14530>
   2a15c:	movw	r0, #28265	; 0x6e69
   2a160:	movw	r7, #29793	; 0x7461
   2a164:	ldr	r5, [sp, #32]
   2a168:	movt	r0, #26479	; 0x676f
   2a16c:	movt	r7, #24942	; 0x616e
   2a170:	eor	r0, r1, r0
   2a174:	eor	r2, r2, r7
   2a178:	orrs	r0, r0, r2
   2a17c:	bne	2a650 <main@@Base+0x145c0>
   2a180:	add	r4, r8, #8
   2a184:	mov	r0, #8
   2a188:	sub	ip, r5, r4
   2a18c:	cmp	ip, #8
   2a190:	movcc	r0, ip
   2a194:	and	r0, r0, #15
   2a198:	sub	r6, r0, #1
   2a19c:	cmp	r6, #7
   2a1a0:	bhi	2b2e4 <main@@Base+0x15254>
   2a1a4:	str	r4, [sp, #24]
   2a1a8:	add	r2, pc, #28
   2a1ac:	mov	r9, #0
   2a1b0:	mov	lr, #0
   2a1b4:	mov	r1, #0
   2a1b8:	mov	r3, #0
   2a1bc:	mov	r7, #0
   2a1c0:	mov	r4, #0
   2a1c4:	mov	r0, #0
   2a1c8:	ldr	pc, [r2, r6, lsl #2]
   2a1cc:	andeq	sl, r2, r8, lsr #4
   2a1d0:	andeq	sl, r2, r0, lsr #4
   2a1d4:	andeq	sl, r2, r8, lsl r2
   2a1d8:	andeq	sl, r2, r0, lsl r2
   2a1dc:	andeq	sl, r2, r4, lsl #4
   2a1e0:	strdeq	sl, [r2], -r4
   2a1e4:	andeq	sl, r2, ip, ror #3
   2a1e8:	andeq	sl, r2, ip, ror #3
   2a1ec:	ldrb	r0, [r8, #14]
   2a1f0:	lsl	lr, r0, #8
   2a1f4:	ldrb	r0, [r8, #13]
   2a1f8:	mov	r1, r9
   2a1fc:	orr	r0, lr, r0, lsl #16
   2a200:	mov	r9, r0
   2a204:	ldrb	r0, [r8, #12]
   2a208:	mov	r3, r1
   2a20c:	orr	r9, r9, r0, lsl #24
   2a210:	ldrb	r0, [r8, #11]
   2a214:	orr	r7, r0, r3
   2a218:	ldrb	r0, [r8, #10]
   2a21c:	orr	r4, r7, r0, lsl #8
   2a220:	ldrb	r0, [r8, #9]
   2a224:	orr	r0, r4, r0, lsl #16
   2a228:	ldr	r4, [sp, #24]
   2a22c:	movw	r3, #25856	; 0x6500
   2a230:	bic	r2, r9, #255	; 0xff
   2a234:	movt	r3, #31088	; 0x7970
   2a238:	eor	r2, r2, r3
   2a23c:	ldrb	r1, [r4]
   2a240:	orr	r1, r0, r1, lsl #24
   2a244:	ldr	r0, [sp, #20]
   2a248:	eor	r0, r1, r0
   2a24c:	orrs	r0, r2, r0
   2a250:	bne	2a7ac <main@@Base+0x1471c>
   2a254:	cmp	ip, #8
   2a258:	blt	2b2e4 <main@@Base+0x15254>
   2a25c:	ldr	r2, [sp, #28]
   2a260:	mov	r1, r8
   2a264:	ldrb	r0, [r1, #15]!
   2a268:	ldr	r2, [r2]
   2a26c:	cmp	r2, #0
   2a270:	beq	2a95c <main@@Base+0x148cc>
   2a274:	cmp	r0, #33	; 0x21
   2a278:	bcc	2a284 <main@@Base+0x141f4>
   2a27c:	cmp	r0, #58	; 0x3a
   2a280:	bne	2b2e4 <main@@Base+0x15254>
   2a284:	ldr	r0, [sp, #28]
   2a288:	mov	r2, #0
   2a28c:	str	r2, [r0]
   2a290:	b	2a968 <main@@Base+0x148d8>
   2a294:	movw	r0, #26720	; 0x6860
   2a298:	mov	sl, r9
   2a29c:	movt	r0, #24419	; 0x5f63
   2a2a0:	subs	r0, r0, r1
   2a2a4:	movw	r0, #26990	; 0x696e
   2a2a8:	movt	r0, #28001	; 0x6d61
   2a2ac:	sbcs	r0, r0, r2
   2a2b0:	bcc	2a3f0 <main@@Base+0x14360>
   2a2b4:	movw	r0, #29797	; 0x7465
   2a2b8:	movt	r0, #24931	; 0x6163
   2a2bc:	eor	r0, r1, r0
   2a2c0:	movw	r1, #24946	; 0x6172
   2a2c4:	movt	r1, #25448	; 0x6368
   2a2c8:	eor	r1, r2, r1
   2a2cc:	orrs	r0, r0, r1
   2a2d0:	bne	2a5b0 <main@@Base+0x14520>
   2a2d4:	ldr	r5, [sp, #32]
   2a2d8:	add	r4, r8, #8
   2a2dc:	mov	r0, #8
   2a2e0:	sub	ip, r5, r4
   2a2e4:	cmp	ip, #8
   2a2e8:	movcc	r0, ip
   2a2ec:	and	r0, r0, #15
   2a2f0:	sub	r6, r0, #1
   2a2f4:	cmp	r6, #7
   2a2f8:	bhi	2b2e4 <main@@Base+0x15254>
   2a2fc:	str	r4, [sp, #24]
   2a300:	add	r2, pc, #28
   2a304:	mov	r1, #0
   2a308:	mov	lr, #0
   2a30c:	mov	r9, #0
   2a310:	mov	r3, #0
   2a314:	mov	r7, #0
   2a318:	mov	r4, #0
   2a31c:	mov	r0, #0
   2a320:	ldr	pc, [r2, r6, lsl #2]
   2a324:	andeq	sl, r2, r0, lsl #7
   2a328:	andeq	sl, r2, r8, ror r3
   2a32c:	andeq	sl, r2, r0, ror r3
   2a330:	andeq	sl, r2, r8, ror #6
   2a334:	andeq	sl, r2, ip, asr r3
   2a338:	andeq	sl, r2, ip, asr #6
   2a33c:	andeq	sl, r2, r4, asr #6
   2a340:	andeq	sl, r2, r4, asr #6
   2a344:	ldrb	r0, [r8, #14]
   2a348:	lsl	lr, r0, #8
   2a34c:	ldrb	r0, [r8, #13]
   2a350:	mov	r9, r1
   2a354:	orr	r0, lr, r0, lsl #16
   2a358:	mov	r1, r0
   2a35c:	ldrb	r0, [r8, #12]
   2a360:	mov	r3, r9
   2a364:	orr	r1, r1, r0, lsl #24
   2a368:	ldrb	r0, [r8, #11]
   2a36c:	orr	r7, r0, r3
   2a370:	ldrb	r0, [r8, #10]
   2a374:	orr	r4, r7, r0, lsl #8
   2a378:	ldrb	r0, [r8, #9]
   2a37c:	orr	r0, r4, r0, lsl #16
   2a380:	ldr	r4, [sp, #24]
   2a384:	movw	r2, #25856	; 0x6500
   2a388:	bic	r1, r1, #255	; 0xff
   2a38c:	movt	r2, #31088	; 0x7970
   2a390:	eor	r1, r1, r2
   2a394:	ldrb	r2, [r4]
   2a398:	orr	r0, r0, r2, lsl #24
   2a39c:	movw	r2, #24436	; 0x5f74
   2a3a0:	movt	r2, #29299	; 0x7273
   2a3a4:	eor	r2, r0, r2
   2a3a8:	orrs	r1, r1, r2
   2a3ac:	bne	2a800 <main@@Base+0x14770>
   2a3b0:	cmp	ip, #8
   2a3b4:	blt	2b2e4 <main@@Base+0x15254>
   2a3b8:	ldr	r2, [sp, #28]
   2a3bc:	mov	r1, r8
   2a3c0:	ldrb	r0, [r1, #15]!
   2a3c4:	ldr	r2, [r2]
   2a3c8:	cmp	r2, #0
   2a3cc:	beq	2a9d0 <main@@Base+0x14940>
   2a3d0:	cmp	r0, #33	; 0x21
   2a3d4:	bcc	2a3e0 <main@@Base+0x14350>
   2a3d8:	cmp	r0, #58	; 0x3a
   2a3dc:	bne	2b2e4 <main@@Base+0x15254>
   2a3e0:	ldr	r0, [sp, #28]
   2a3e4:	mov	r2, #0
   2a3e8:	str	r2, [r0]
   2a3ec:	b	2a9dc <main@@Base+0x1494c>
   2a3f0:	movw	r0, #26979	; 0x6963
   2a3f4:	movw	r3, #25701	; 0x6465
   2a3f8:	movt	r0, #24427	; 0x5f6b
   2a3fc:	movt	r3, #29545	; 0x7369
   2a400:	eor	r0, r1, r0
   2a404:	eor	r3, r2, r3
   2a408:	orrs	r0, r0, r3
   2a40c:	beq	2a6a8 <main@@Base+0x14618>
   2a410:	movw	r0, #26721	; 0x6861
   2a414:	movt	r0, #24419	; 0x5f63
   2a418:	eor	r0, r1, r0
   2a41c:	movw	r1, #26990	; 0x696e
   2a420:	movt	r1, #28001	; 0x6d61
   2a424:	eor	r1, r2, r1
   2a428:	orrs	r0, r0, r1
   2a42c:	bne	2a5b0 <main@@Base+0x14520>
   2a430:	ldr	r0, [sp, #32]
   2a434:	add	r4, r8, #8
   2a438:	sub	lr, r0, r4
   2a43c:	mov	r0, #8
   2a440:	cmp	lr, #8
   2a444:	movcc	r0, lr
   2a448:	and	r0, r0, #15
   2a44c:	sub	r6, r0, #1
   2a450:	cmp	r6, #7
   2a454:	bhi	2a920 <main@@Base+0x14890>
   2a458:	str	r4, [sp, #24]
   2a45c:	add	r7, pc, #32
   2a460:	mov	r1, #0
   2a464:	mov	ip, #0
   2a468:	mov	sl, #0
   2a46c:	mov	r5, #0
   2a470:	mov	r3, #0
   2a474:	mov	r4, #0
   2a478:	mov	r2, #0
   2a47c:	mov	r0, #0
   2a480:	ldr	pc, [r7, r6, lsl #2]
   2a484:	andeq	sl, r2, r8, ror #9
   2a488:	andeq	sl, r2, r0, ror #9
   2a48c:	ldrdeq	sl, [r2], -r8
   2a490:	ldrdeq	sl, [r2], -r0
   2a494:	andeq	sl, r2, r4, asr #9
   2a498:			; <UNDEFINED> instruction: 0x0002a4b8
   2a49c:	andeq	sl, r2, r8, lsr #9
   2a4a0:	andeq	sl, r2, r4, lsr #9
   2a4a4:	ldrb	ip, [r8, #15]
   2a4a8:	ldrb	r0, [r8, #14]
   2a4ac:	mov	sl, r1
   2a4b0:	orr	r0, ip, r0, lsl #8
   2a4b4:	mov	r1, r0
   2a4b8:	ldrb	r0, [r8, #13]
   2a4bc:	mov	r5, sl
   2a4c0:	orr	r1, r1, r0, lsl #16
   2a4c4:	ldrb	r0, [r8, #12]
   2a4c8:	mov	r3, r5
   2a4cc:	orr	r1, r1, r0, lsl #24
   2a4d0:	ldrb	r0, [r8, #11]
   2a4d4:	orr	r4, r0, r3
   2a4d8:	ldrb	r0, [r8, #10]
   2a4dc:	orr	r2, r4, r0, lsl #8
   2a4e0:	ldrb	r0, [r8, #9]
   2a4e4:	orr	r0, r2, r0, lsl #16
   2a4e8:	ldr	r4, [sp, #24]
   2a4ec:	movw	r2, #24436	; 0x5f74
   2a4f0:	movt	r2, #25970	; 0x6572
   2a4f4:	eor	r2, r1, r2
   2a4f8:	ldrb	r3, [r4]
   2a4fc:	orr	r0, r0, r3, lsl #24
   2a500:	movw	r3, #25460	; 0x6374
   2a504:	movt	r3, #29281	; 0x7261
   2a508:	eor	r3, r0, r3
   2a50c:	orrs	r2, r2, r3
   2a510:	bne	2a854 <main@@Base+0x147c4>
   2a514:	ldr	r0, [sp, #32]
   2a518:	add	r4, r8, #16
   2a51c:	mov	r1, #8
   2a520:	mov	sl, r9
   2a524:	sub	r0, r0, r4
   2a528:	cmp	r0, #8
   2a52c:	movcc	r1, r0
   2a530:	and	r2, r1, #15
   2a534:	sub	r1, r2, #3
   2a538:	cmp	r1, #6
   2a53c:	bcs	2a9b4 <main@@Base+0x14924>
   2a540:	ldrb	r1, [r8, #18]
   2a544:	ldr	r5, [sp, #32]
   2a548:	lsl	r1, r1, #8
   2a54c:	ldrb	r2, [r8, #17]
   2a550:	orr	r1, r1, r2, lsl #16
   2a554:	ldrb	r2, [r4]
   2a558:	bic	r1, r1, #255	; 0xff
   2a55c:	orr	r1, r1, r2, lsl #24
   2a560:	movw	r2, #25856	; 0x6500
   2a564:	movt	r2, #31088	; 0x7970
   2a568:	teq	r1, r2
   2a56c:	bne	2b2e4 <main@@Base+0x15254>
   2a570:	cmp	r0, #4
   2a574:	blt	2b2e4 <main@@Base+0x15254>
   2a578:	ldr	r2, [sp, #28]
   2a57c:	mov	r1, r8
   2a580:	ldrb	r0, [r1, #19]!
   2a584:	ldr	r2, [r2]
   2a588:	cmp	r2, #0
   2a58c:	beq	2aca8 <main@@Base+0x14c18>
   2a590:	cmp	r0, #33	; 0x21
   2a594:	bcc	2a5a0 <main@@Base+0x14510>
   2a598:	cmp	r0, #58	; 0x3a
   2a59c:	bne	2b2e4 <main@@Base+0x15254>
   2a5a0:	ldr	r0, [sp, #28]
   2a5a4:	mov	r2, #0
   2a5a8:	str	r2, [r0]
   2a5ac:	b	2acb4 <main@@Base+0x14c24>
   2a5b0:	mov	r0, sl
   2a5b4:	mov	r1, r8
   2a5b8:	ldr	r5, [sp, #32]
   2a5bc:	b	2b2ec <main@@Base+0x1525c>
   2a5c0:	ldr	r5, [sp, #32]
   2a5c4:	add	r6, r8, #8
   2a5c8:	mov	r1, #8
   2a5cc:	sub	r0, r5, r6
   2a5d0:	cmp	r0, #8
   2a5d4:	movcc	r1, r0
   2a5d8:	and	r2, r1, #15
   2a5dc:	sub	r1, r2, #2
   2a5e0:	cmp	r1, #7
   2a5e4:	bcs	2a8c0 <main@@Base+0x14830>
   2a5e8:	ldrb	r1, [r8, #9]
   2a5ec:	lsl	r2, r1, #16
   2a5f0:	mov	r1, #0
   2a5f4:	ldrb	r3, [r6]
   2a5f8:	orr	r2, r2, r3, lsl #24
   2a5fc:	movw	r3, #0
   2a600:	movt	r3, #28773	; 0x7065
   2a604:	eor	r2, r2, r3
   2a608:	orrs	r1, r1, r2
   2a60c:	bne	2af38 <main@@Base+0x14ea8>
   2a610:	cmp	r0, #3
   2a614:	blt	2af38 <main@@Base+0x14ea8>
   2a618:	ldr	r2, [sp, #28]
   2a61c:	mov	r1, r8
   2a620:	ldrb	r0, [r1, #10]!
   2a624:	ldr	r2, [r2]
   2a628:	cmp	r2, #0
   2a62c:	beq	2a988 <main@@Base+0x148f8>
   2a630:	cmp	r0, #33	; 0x21
   2a634:	bcc	2a640 <main@@Base+0x145b0>
   2a638:	cmp	r0, #58	; 0x3a
   2a63c:	bne	2af38 <main@@Base+0x14ea8>
   2a640:	ldr	r0, [sp, #28]
   2a644:	mov	r2, #0
   2a648:	str	r2, [r0]
   2a64c:	b	2a994 <main@@Base+0x14904>
   2a650:	and	r0, r1, #-16777216	; 0xff000000
   2a654:	eor	r0, r0, #1862270976	; 0x6f000000
   2a658:	orrs	r0, r0, r3
   2a65c:	bne	2ae8c <main@@Base+0x14dfc>
   2a660:	cmp	ip, #6
   2a664:	mov	r1, r8
   2a668:	blt	2ae54 <main@@Base+0x14dc4>
   2a66c:	ldr	r1, [sp, #28]
   2a670:	mov	r2, r8
   2a674:	ldrb	r0, [r2, #5]!
   2a678:	ldr	r1, [r1]
   2a67c:	cmp	r1, #0
   2a680:	beq	2a92c <main@@Base+0x1489c>
   2a684:	cmp	r0, #33	; 0x21
   2a688:	bcc	2a698 <main@@Base+0x14608>
   2a68c:	cmp	r0, #58	; 0x3a
   2a690:	mov	r1, r8
   2a694:	bne	2ae54 <main@@Base+0x14dc4>
   2a698:	ldr	r0, [sp, #28]
   2a69c:	mov	r1, #0
   2a6a0:	str	r1, [r0]
   2a6a4:	b	2a93c <main@@Base+0x148ac>
   2a6a8:	ldr	r5, [sp, #32]
   2a6ac:	add	r9, r8, #8
   2a6b0:	mov	r1, #8
   2a6b4:	sub	lr, r5, r9
   2a6b8:	cmp	lr, #8
   2a6bc:	movcc	r1, lr
   2a6c0:	and	r1, r1, #15
   2a6c4:	sub	r3, r1, #1
   2a6c8:	cmp	r3, #7
   2a6cc:	bhi	2b270 <main@@Base+0x151e0>
   2a6d0:	add	r6, pc, #24
   2a6d4:	mov	ip, #0
   2a6d8:	mov	r2, #0
   2a6dc:	mov	r1, #0
   2a6e0:	mov	r0, #0
   2a6e4:	mov	r7, #0
   2a6e8:	mov	r4, #0
   2a6ec:	ldr	pc, [r6, r3, lsl #2]
   2a6f0:	andeq	sl, r2, r0, asr #14
   2a6f4:	andeq	sl, r2, r8, lsr r7
   2a6f8:	andeq	sl, r2, r0, lsr r7
   2a6fc:	andeq	sl, r2, r8, lsr #14
   2a700:	andeq	sl, r2, r8, lsl r7
   2a704:	andeq	sl, r2, r0, lsl r7
   2a708:	andeq	sl, r2, r0, lsl r7
   2a70c:	andeq	sl, r2, r0, lsl r7
   2a710:	ldrb	r1, [r8, #13]
   2a714:	lsl	r2, r1, #16
   2a718:	ldrb	r1, [r8, #12]
   2a71c:	orr	r2, r2, r1, lsl #24
   2a720:	mov	r1, ip
   2a724:	mov	ip, r2
   2a728:	ldrb	r2, [r8, #11]
   2a72c:	orr	r0, r2, r1
   2a730:	ldrb	r1, [r8, #10]
   2a734:	orr	r7, r0, r1, lsl #8
   2a738:	ldrb	r1, [r8, #9]
   2a73c:	orr	r4, r7, r1, lsl #16
   2a740:	ldrb	r1, [r9]
   2a744:	movw	r0, #27487	; 0x6b5f
   2a748:	lsr	r3, ip, #16
   2a74c:	orr	r1, r4, r1, lsl #24
   2a750:	eor	r2, r0, r1, lsr #16
   2a754:	movw	r0, #28773	; 0x7065
   2a758:	orr	r3, r3, r1, lsl #16
   2a75c:	movt	r0, #29817	; 0x7479
   2a760:	eor	r3, r3, r0
   2a764:	orrs	r2, r3, r2
   2a768:	bne	2a8d4 <main@@Base+0x14844>
   2a76c:	cmp	lr, #7
   2a770:	blt	2b270 <main@@Base+0x151e0>
   2a774:	ldr	r2, [sp, #28]
   2a778:	mov	r1, r8
   2a77c:	ldrb	r0, [r1, #14]!
   2a780:	ldr	r2, [r2]
   2a784:	cmp	r2, #0
   2a788:	beq	2a9fc <main@@Base+0x1496c>
   2a78c:	cmp	r0, #33	; 0x21
   2a790:	bcc	2a79c <main@@Base+0x1470c>
   2a794:	cmp	r0, #58	; 0x3a
   2a798:	bne	2b270 <main@@Base+0x151e0>
   2a79c:	ldr	r0, [sp, #28]
   2a7a0:	mov	r2, #0
   2a7a4:	str	r2, [r0]
   2a7a8:	b	2aa08 <main@@Base+0x14978>
   2a7ac:	movw	r0, #0
   2a7b0:	bfc	r1, #0, #16
   2a7b4:	movt	r0, #29556	; 0x7374
   2a7b8:	teq	r1, r0
   2a7bc:	bne	2b2e4 <main@@Base+0x15254>
   2a7c0:	cmp	ip, #3
   2a7c4:	blt	2b2e4 <main@@Base+0x15254>
   2a7c8:	ldr	r2, [sp, #28]
   2a7cc:	mov	r1, r8
   2a7d0:	ldrb	r0, [r1, #10]!
   2a7d4:	ldr	r2, [r2]
   2a7d8:	cmp	r2, #0
   2a7dc:	beq	2aa28 <main@@Base+0x14998>
   2a7e0:	cmp	r0, #33	; 0x21
   2a7e4:	bcc	2a7f0 <main@@Base+0x14760>
   2a7e8:	cmp	r0, #58	; 0x3a
   2a7ec:	bne	2b2e4 <main@@Base+0x15254>
   2a7f0:	ldr	r0, [sp, #28]
   2a7f4:	mov	r2, #0
   2a7f8:	str	r2, [r0]
   2a7fc:	b	2aa34 <main@@Base+0x149a4>
   2a800:	movw	r1, #0
   2a804:	bfc	r0, #0, #16
   2a808:	movt	r1, #29299	; 0x7273
   2a80c:	teq	r0, r1
   2a810:	bne	2b2e4 <main@@Base+0x15254>
   2a814:	cmp	ip, #3
   2a818:	blt	2b2e4 <main@@Base+0x15254>
   2a81c:	ldr	r2, [sp, #28]
   2a820:	mov	r1, r8
   2a824:	ldrb	r0, [r1, #10]!
   2a828:	ldr	r2, [r2]
   2a82c:	cmp	r2, #0
   2a830:	beq	2aa54 <main@@Base+0x149c4>
   2a834:	cmp	r0, #33	; 0x21
   2a838:	bcc	2a844 <main@@Base+0x147b4>
   2a83c:	cmp	r0, #58	; 0x3a
   2a840:	bne	2b2e4 <main@@Base+0x15254>
   2a844:	ldr	r0, [sp, #28]
   2a848:	mov	r2, #0
   2a84c:	str	r2, [r0]
   2a850:	b	2aa60 <main@@Base+0x149d0>
   2a854:	movw	r2, #29281	; 0x7261
   2a858:	lsr	r1, r1, #16
   2a85c:	mov	sl, r9
   2a860:	eor	r2, r2, r0, lsr #16
   2a864:	orr	r0, r1, r0, lsl #16
   2a868:	movw	r1, #25970	; 0x6572
   2a86c:	movt	r1, #25460	; 0x6374
   2a870:	eor	r0, r0, r1
   2a874:	orrs	r0, r0, r2
   2a878:	bne	2a920 <main@@Base+0x14890>
   2a87c:	ldr	r5, [sp, #32]
   2a880:	cmp	lr, #7
   2a884:	blt	2b2e4 <main@@Base+0x15254>
   2a888:	ldr	r2, [sp, #28]
   2a88c:	mov	r1, r8
   2a890:	ldrb	r0, [r1, #14]!
   2a894:	ldr	r2, [r2]
   2a898:	cmp	r2, #0
   2a89c:	beq	2abdc <main@@Base+0x14b4c>
   2a8a0:	cmp	r0, #33	; 0x21
   2a8a4:	bcc	2a8b0 <main@@Base+0x14820>
   2a8a8:	cmp	r0, #58	; 0x3a
   2a8ac:	bne	2b2e4 <main@@Base+0x15254>
   2a8b0:	ldr	r0, [sp, #28]
   2a8b4:	mov	r2, #0
   2a8b8:	str	r2, [r0]
   2a8bc:	b	2abe8 <main@@Base+0x14b58>
   2a8c0:	cmp	r2, #1
   2a8c4:	mov	r1, #0
   2a8c8:	mov	r2, #0
   2a8cc:	beq	2a5f4 <main@@Base+0x14564>
   2a8d0:	b	2af38 <main@@Base+0x14ea8>
   2a8d4:	and	r1, r1, #-16777216	; 0xff000000
   2a8d8:	teq	r1, #1795162112	; 0x6b000000
   2a8dc:	bne	2b270 <main@@Base+0x151e0>
   2a8e0:	cmp	lr, #2
   2a8e4:	blt	2b270 <main@@Base+0x151e0>
   2a8e8:	ldr	r2, [sp, #28]
   2a8ec:	mov	r1, r8
   2a8f0:	ldrb	r0, [r1, #9]!
   2a8f4:	ldr	r2, [r2]
   2a8f8:	cmp	r2, #0
   2a8fc:	beq	2ac08 <main@@Base+0x14b78>
   2a900:	cmp	r0, #33	; 0x21
   2a904:	bcc	2a910 <main@@Base+0x14880>
   2a908:	cmp	r0, #58	; 0x3a
   2a90c:	bne	2b270 <main@@Base+0x151e0>
   2a910:	ldr	r0, [sp, #28]
   2a914:	mov	r2, #0
   2a918:	str	r2, [r0]
   2a91c:	b	2ac14 <main@@Base+0x14b84>
   2a920:	mov	r0, sl
   2a924:	mov	r1, r4
   2a928:	b	2a5b8 <main@@Base+0x14528>
   2a92c:	cmp	r0, #34	; 0x22
   2a930:	mov	r1, r8
   2a934:	bne	2ae54 <main@@Base+0x14dc4>
   2a938:	add	r2, r8, #6
   2a93c:	sub	r0, r5, r2
   2a940:	cmp	r0, #2
   2a944:	blt	2aa94 <main@@Base+0x14a04>
   2a948:	ldrb	r0, [r2]
   2a94c:	cmp	r0, #32
   2a950:	bls	2aa80 <main@@Base+0x149f0>
   2a954:	mov	r1, r2
   2a958:	b	2aaa8 <main@@Base+0x14a18>
   2a95c:	cmp	r0, #34	; 0x22
   2a960:	bne	2b2e4 <main@@Base+0x15254>
   2a964:	add	r1, r8, #16
   2a968:	sub	r0, r5, r1
   2a96c:	cmp	r0, #2
   2a970:	blt	2ab08 <main@@Base+0x14a78>
   2a974:	ldrb	r0, [r1]
   2a978:	cmp	r0, #32
   2a97c:	bls	2aaf4 <main@@Base+0x14a64>
   2a980:	mov	r2, r1
   2a984:	b	2ab18 <main@@Base+0x14a88>
   2a988:	cmp	r0, #34	; 0x22
   2a98c:	bne	2af38 <main@@Base+0x14ea8>
   2a990:	add	r1, r8, #11
   2a994:	sub	r0, r5, r1
   2a998:	cmp	r0, #2
   2a99c:	blt	2ab7c <main@@Base+0x14aec>
   2a9a0:	ldrb	r0, [r1]
   2a9a4:	cmp	r0, #32
   2a9a8:	bls	2ab68 <main@@Base+0x14ad8>
   2a9ac:	mov	r2, r1
   2a9b0:	b	2ab8c <main@@Base+0x14afc>
   2a9b4:	ldr	r5, [sp, #32]
   2a9b8:	mov	r1, #0
   2a9bc:	cmp	r2, #1
   2a9c0:	beq	2a554 <main@@Base+0x144c4>
   2a9c4:	cmp	r2, #2
   2a9c8:	beq	2a54c <main@@Base+0x144bc>
   2a9cc:	b	2b2e4 <main@@Base+0x15254>
   2a9d0:	cmp	r0, #34	; 0x22
   2a9d4:	bne	2b2e4 <main@@Base+0x15254>
   2a9d8:	add	r1, r8, #16
   2a9dc:	sub	r0, r5, r1
   2a9e0:	cmp	r0, #2
   2a9e4:	blt	2ac48 <main@@Base+0x14bb8>
   2a9e8:	ldrb	r0, [r1]
   2a9ec:	cmp	r0, #32
   2a9f0:	bls	2ac34 <main@@Base+0x14ba4>
   2a9f4:	mov	r2, r1
   2a9f8:	b	2ac58 <main@@Base+0x14bc8>
   2a9fc:	cmp	r0, #34	; 0x22
   2aa00:	bne	2b270 <main@@Base+0x151e0>
   2aa04:	add	r1, r8, #15
   2aa08:	sub	r0, r5, r1
   2aa0c:	cmp	r0, #2
   2aa10:	blt	2ace8 <main@@Base+0x14c58>
   2aa14:	ldrb	r0, [r1]
   2aa18:	cmp	r0, #32
   2aa1c:	bls	2acd4 <main@@Base+0x14c44>
   2aa20:	mov	r2, r1
   2aa24:	b	2acf8 <main@@Base+0x14c68>
   2aa28:	cmp	r0, #34	; 0x22
   2aa2c:	bne	2b2e4 <main@@Base+0x15254>
   2aa30:	add	r1, r8, #11
   2aa34:	sub	r0, r5, r1
   2aa38:	cmp	r0, #2
   2aa3c:	blt	2ad5c <main@@Base+0x14ccc>
   2aa40:	ldrb	r0, [r1]
   2aa44:	cmp	r0, #32
   2aa48:	bls	2ad48 <main@@Base+0x14cb8>
   2aa4c:	mov	r2, r1
   2aa50:	b	2ad6c <main@@Base+0x14cdc>
   2aa54:	cmp	r0, #34	; 0x22
   2aa58:	bne	2b2e4 <main@@Base+0x15254>
   2aa5c:	add	r1, r8, #11
   2aa60:	sub	r0, r5, r1
   2aa64:	cmp	r0, #2
   2aa68:	blt	2add0 <main@@Base+0x14d40>
   2aa6c:	ldrb	r0, [r1]
   2aa70:	cmp	r0, #32
   2aa74:	bls	2adbc <main@@Base+0x14d2c>
   2aa78:	mov	r2, r1
   2aa7c:	b	2ade0 <main@@Base+0x14d50>
   2aa80:	bne	2aa94 <main@@Base+0x14a04>
   2aa84:	mov	r1, r2
   2aa88:	ldrb	r0, [r1, #1]!
   2aa8c:	cmp	r0, #32
   2aa90:	bhi	2aaa8 <main@@Base+0x14a18>
   2aa94:	mov	r1, r2
   2aa98:	mov	r0, sl
   2aa9c:	mov	r2, r5
   2aaa0:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   2aaa4:	mov	r1, r0
   2aaa8:	cmp	r1, r5
   2aaac:	beq	2aae0 <main@@Base+0x14a50>
   2aab0:	ldrb	r0, [r1]
   2aab4:	cmp	r0, #58	; 0x3a
   2aab8:	bne	2aae0 <main@@Base+0x14a50>
   2aabc:	add	r2, r1, #1
   2aac0:	sub	r0, r5, r2
   2aac4:	cmp	r0, #2
   2aac8:	blt	2ae40 <main@@Base+0x14db0>
   2aacc:	ldrb	r0, [r2]
   2aad0:	cmp	r0, #32
   2aad4:	bls	2ae30 <main@@Base+0x14da0>
   2aad8:	mov	r1, r2
   2aadc:	b	2ae54 <main@@Base+0x14dc4>
   2aae0:	mov	r0, sl
   2aae4:	mov	r2, r5
   2aae8:	mov	r3, #4
   2aaec:	bl	337ac <flatcc_json_parser_set_error@@Base>
   2aaf0:	b	2ae50 <main@@Base+0x14dc0>
   2aaf4:	bne	2ab08 <main@@Base+0x14a78>
   2aaf8:	mov	r2, r1
   2aafc:	ldrb	r0, [r2, #1]!
   2ab00:	cmp	r0, #32
   2ab04:	bhi	2ab18 <main@@Base+0x14a88>
   2ab08:	mov	r0, sl
   2ab0c:	mov	r2, r5
   2ab10:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   2ab14:	mov	r2, r0
   2ab18:	cmp	r2, r5
   2ab1c:	beq	2ab50 <main@@Base+0x14ac0>
   2ab20:	ldrb	r0, [r2]
   2ab24:	cmp	r0, #58	; 0x3a
   2ab28:	bne	2ab50 <main@@Base+0x14ac0>
   2ab2c:	add	r1, r2, #1
   2ab30:	sub	r0, r5, r1
   2ab34:	cmp	r0, #2
   2ab38:	blt	2aea8 <main@@Base+0x14e18>
   2ab3c:	ldrb	r0, [r1]
   2ab40:	cmp	r0, #32
   2ab44:	bls	2ae98 <main@@Base+0x14e08>
   2ab48:	mov	r2, r1
   2ab4c:	b	2aeb8 <main@@Base+0x14e28>
   2ab50:	mov	r1, r2
   2ab54:	mov	r0, sl
   2ab58:	mov	r2, r5
   2ab5c:	mov	r3, #4
   2ab60:	bl	337ac <flatcc_json_parser_set_error@@Base>
   2ab64:	b	2aeb4 <main@@Base+0x14e24>
   2ab68:	bne	2ab7c <main@@Base+0x14aec>
   2ab6c:	mov	r2, r1
   2ab70:	ldrb	r0, [r2, #1]!
   2ab74:	cmp	r0, #32
   2ab78:	bhi	2ab8c <main@@Base+0x14afc>
   2ab7c:	mov	r0, sl
   2ab80:	mov	r2, r5
   2ab84:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   2ab88:	mov	r2, r0
   2ab8c:	cmp	r2, r5
   2ab90:	beq	2abc4 <main@@Base+0x14b34>
   2ab94:	ldrb	r0, [r2]
   2ab98:	cmp	r0, #58	; 0x3a
   2ab9c:	bne	2abc4 <main@@Base+0x14b34>
   2aba0:	add	r1, r2, #1
   2aba4:	sub	r0, r5, r1
   2aba8:	cmp	r0, #2
   2abac:	blt	2aef8 <main@@Base+0x14e68>
   2abb0:	ldrb	r0, [r1]
   2abb4:	cmp	r0, #32
   2abb8:	bls	2aee8 <main@@Base+0x14e58>
   2abbc:	mov	r2, r1
   2abc0:	b	2af08 <main@@Base+0x14e78>
   2abc4:	mov	r1, r2
   2abc8:	mov	r0, sl
   2abcc:	mov	r2, r5
   2abd0:	mov	r3, #4
   2abd4:	bl	337ac <flatcc_json_parser_set_error@@Base>
   2abd8:	b	2af04 <main@@Base+0x14e74>
   2abdc:	cmp	r0, #34	; 0x22
   2abe0:	bne	2b2e4 <main@@Base+0x15254>
   2abe4:	add	r1, r8, #15
   2abe8:	sub	r0, r5, r1
   2abec:	cmp	r0, #2
   2abf0:	blt	2af58 <main@@Base+0x14ec8>
   2abf4:	ldrb	r0, [r1]
   2abf8:	cmp	r0, #32
   2abfc:	bls	2af44 <main@@Base+0x14eb4>
   2ac00:	mov	r2, r1
   2ac04:	b	2af68 <main@@Base+0x14ed8>
   2ac08:	cmp	r0, #34	; 0x22
   2ac0c:	bne	2b270 <main@@Base+0x151e0>
   2ac10:	add	r1, r8, #10
   2ac14:	sub	r0, r5, r1
   2ac18:	cmp	r0, #2
   2ac1c:	blt	2afcc <main@@Base+0x14f3c>
   2ac20:	ldrb	r0, [r1]
   2ac24:	cmp	r0, #32
   2ac28:	bls	2afb8 <main@@Base+0x14f28>
   2ac2c:	mov	r2, r1
   2ac30:	b	2afdc <main@@Base+0x14f4c>
   2ac34:	bne	2ac48 <main@@Base+0x14bb8>
   2ac38:	mov	r2, r1
   2ac3c:	ldrb	r0, [r2, #1]!
   2ac40:	cmp	r0, #32
   2ac44:	bhi	2ac58 <main@@Base+0x14bc8>
   2ac48:	mov	r0, sl
   2ac4c:	mov	r2, r5
   2ac50:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   2ac54:	mov	r2, r0
   2ac58:	cmp	r2, r5
   2ac5c:	beq	2ac90 <main@@Base+0x14c00>
   2ac60:	ldrb	r0, [r2]
   2ac64:	cmp	r0, #58	; 0x3a
   2ac68:	bne	2ac90 <main@@Base+0x14c00>
   2ac6c:	add	r1, r2, #1
   2ac70:	sub	r0, r5, r1
   2ac74:	cmp	r0, #2
   2ac78:	blt	2b03c <main@@Base+0x14fac>
   2ac7c:	ldrb	r0, [r1]
   2ac80:	cmp	r0, #32
   2ac84:	bls	2b02c <main@@Base+0x14f9c>
   2ac88:	mov	r2, r1
   2ac8c:	b	2b04c <main@@Base+0x14fbc>
   2ac90:	mov	r1, r2
   2ac94:	mov	r0, sl
   2ac98:	mov	r2, r5
   2ac9c:	mov	r3, #4
   2aca0:	bl	337ac <flatcc_json_parser_set_error@@Base>
   2aca4:	b	2b048 <main@@Base+0x14fb8>
   2aca8:	cmp	r0, #34	; 0x22
   2acac:	bne	2b2e4 <main@@Base+0x15254>
   2acb0:	add	r1, r8, #20
   2acb4:	sub	r0, r5, r1
   2acb8:	cmp	r0, #2
   2acbc:	blt	2b0b4 <main@@Base+0x15024>
   2acc0:	ldrb	r0, [r1]
   2acc4:	cmp	r0, #32
   2acc8:	bls	2b0a0 <main@@Base+0x15010>
   2accc:	mov	r2, r1
   2acd0:	b	2b0c4 <main@@Base+0x15034>
   2acd4:	bne	2ace8 <main@@Base+0x14c58>
   2acd8:	mov	r2, r1
   2acdc:	ldrb	r0, [r2, #1]!
   2ace0:	cmp	r0, #32
   2ace4:	bhi	2acf8 <main@@Base+0x14c68>
   2ace8:	mov	r0, sl
   2acec:	mov	r2, r5
   2acf0:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   2acf4:	mov	r2, r0
   2acf8:	cmp	r2, r5
   2acfc:	beq	2ad30 <main@@Base+0x14ca0>
   2ad00:	ldrb	r0, [r2]
   2ad04:	cmp	r0, #58	; 0x3a
   2ad08:	bne	2ad30 <main@@Base+0x14ca0>
   2ad0c:	add	r1, r2, #1
   2ad10:	sub	r0, r5, r1
   2ad14:	cmp	r0, #2
   2ad18:	blt	2b15c <main@@Base+0x150cc>
   2ad1c:	ldrb	r0, [r1]
   2ad20:	cmp	r0, #32
   2ad24:	bls	2b14c <main@@Base+0x150bc>
   2ad28:	mov	r2, r1
   2ad2c:	b	2b16c <main@@Base+0x150dc>
   2ad30:	mov	r1, r2
   2ad34:	mov	r0, sl
   2ad38:	mov	r2, r5
   2ad3c:	mov	r3, #4
   2ad40:	bl	337ac <flatcc_json_parser_set_error@@Base>
   2ad44:	b	2b168 <main@@Base+0x150d8>
   2ad48:	bne	2ad5c <main@@Base+0x14ccc>
   2ad4c:	mov	r2, r1
   2ad50:	ldrb	r0, [r2, #1]!
   2ad54:	cmp	r0, #32
   2ad58:	bhi	2ad6c <main@@Base+0x14cdc>
   2ad5c:	mov	r0, sl
   2ad60:	mov	r2, r5
   2ad64:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   2ad68:	mov	r2, r0
   2ad6c:	cmp	r2, r5
   2ad70:	beq	2ada4 <main@@Base+0x14d14>
   2ad74:	ldrb	r0, [r2]
   2ad78:	cmp	r0, #58	; 0x3a
   2ad7c:	bne	2ada4 <main@@Base+0x14d14>
   2ad80:	add	r1, r2, #1
   2ad84:	sub	r0, r5, r1
   2ad88:	cmp	r0, #2
   2ad8c:	blt	2b124 <main@@Base+0x15094>
   2ad90:	ldrb	r0, [r1]
   2ad94:	cmp	r0, #32
   2ad98:	bls	2b114 <main@@Base+0x15084>
   2ad9c:	mov	r2, r1
   2ada0:	b	2b134 <main@@Base+0x150a4>
   2ada4:	mov	r1, r2
   2ada8:	mov	r0, sl
   2adac:	mov	r2, r5
   2adb0:	mov	r3, #4
   2adb4:	bl	337ac <flatcc_json_parser_set_error@@Base>
   2adb8:	b	2b130 <main@@Base+0x150a0>
   2adbc:	bne	2add0 <main@@Base+0x14d40>
   2adc0:	mov	r2, r1
   2adc4:	ldrb	r0, [r2, #1]!
   2adc8:	cmp	r0, #32
   2adcc:	bhi	2ade0 <main@@Base+0x14d50>
   2add0:	mov	r0, sl
   2add4:	mov	r2, r5
   2add8:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   2addc:	mov	r2, r0
   2ade0:	cmp	r2, r5
   2ade4:	beq	2ae18 <main@@Base+0x14d88>
   2ade8:	ldrb	r0, [r2]
   2adec:	cmp	r0, #58	; 0x3a
   2adf0:	bne	2ae18 <main@@Base+0x14d88>
   2adf4:	add	r1, r2, #1
   2adf8:	sub	r0, r5, r1
   2adfc:	cmp	r0, #2
   2ae00:	blt	2b1ac <main@@Base+0x1511c>
   2ae04:	ldrb	r0, [r1]
   2ae08:	cmp	r0, #32
   2ae0c:	bls	2b19c <main@@Base+0x1510c>
   2ae10:	mov	r2, r1
   2ae14:	b	2b1bc <main@@Base+0x1512c>
   2ae18:	mov	r1, r2
   2ae1c:	mov	r0, sl
   2ae20:	mov	r2, r5
   2ae24:	mov	r3, #4
   2ae28:	bl	337ac <flatcc_json_parser_set_error@@Base>
   2ae2c:	b	2b1b8 <main@@Base+0x15128>
   2ae30:	bne	2ae40 <main@@Base+0x14db0>
   2ae34:	ldrb	r0, [r1, #2]!
   2ae38:	cmp	r0, #32
   2ae3c:	bhi	2ae54 <main@@Base+0x14dc4>
   2ae40:	mov	r1, r2
   2ae44:	mov	r0, sl
   2ae48:	mov	r2, r5
   2ae4c:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   2ae50:	mov	r1, r0
   2ae54:	cmp	r8, r1
   2ae58:	beq	2ae8c <main@@Base+0x14dfc>
   2ae5c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2ae60:	mov	r2, #7
   2ae64:	mov	r3, #3
   2ae68:	str	r2, [sp]
   2ae6c:	mov	r2, r5
   2ae70:	str	r0, [sp, #4]
   2ae74:	movw	r0, #46456	; 0xb578
   2ae78:	movt	r0, #2
   2ae7c:	str	r0, [sp, #8]
   2ae80:	mov	r0, sl
   2ae84:	bl	35eb4 <flatcc_json_parser_union@@Base>
   2ae88:	b	2b2f4 <main@@Base+0x15264>
   2ae8c:	mov	r0, sl
   2ae90:	mov	r1, r8
   2ae94:	b	2b2ec <main@@Base+0x1525c>
   2ae98:	bne	2aea8 <main@@Base+0x14e18>
   2ae9c:	ldrb	r0, [r2, #2]!
   2aea0:	cmp	r0, #32
   2aea4:	bhi	2aeb8 <main@@Base+0x14e28>
   2aea8:	mov	r0, sl
   2aeac:	mov	r2, r5
   2aeb0:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   2aeb4:	mov	r2, r0
   2aeb8:	cmp	r4, r2
   2aebc:	beq	2b2e4 <main@@Base+0x15254>
   2aec0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2aec4:	mov	r1, #3
   2aec8:	mov	r3, #1
   2aecc:	str	r1, [sp]
   2aed0:	mov	r1, r2
   2aed4:	mov	r2, r5
   2aed8:	str	r0, [sp, #4]
   2aedc:	movw	r0, #45728	; 0xb2a0
   2aee0:	movt	r0, #5
   2aee4:	b	2b2c8 <main@@Base+0x15238>
   2aee8:	bne	2aef8 <main@@Base+0x14e68>
   2aeec:	ldrb	r0, [r2, #2]!
   2aef0:	cmp	r0, #32
   2aef4:	bhi	2af08 <main@@Base+0x14e78>
   2aef8:	mov	r0, sl
   2aefc:	mov	r2, r5
   2af00:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   2af04:	mov	r2, r0
   2af08:	cmp	r6, r2
   2af0c:	beq	2af38 <main@@Base+0x14ea8>
   2af10:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2af14:	mov	r1, #7
   2af18:	mov	r3, #3
   2af1c:	str	r1, [sp]
   2af20:	mov	r1, r2
   2af24:	mov	r2, r5
   2af28:	str	r0, [sp, #4]
   2af2c:	movw	r0, #45744	; 0xb2b0
   2af30:	movt	r0, #5
   2af34:	b	2b2c8 <main@@Base+0x15238>
   2af38:	mov	r0, sl
   2af3c:	mov	r1, r6
   2af40:	b	2b2ec <main@@Base+0x1525c>
   2af44:	bne	2af58 <main@@Base+0x14ec8>
   2af48:	mov	r2, r1
   2af4c:	ldrb	r0, [r2, #1]!
   2af50:	cmp	r0, #32
   2af54:	bhi	2af68 <main@@Base+0x14ed8>
   2af58:	mov	r0, sl
   2af5c:	mov	r2, r5
   2af60:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   2af64:	mov	r2, r0
   2af68:	cmp	r2, r5
   2af6c:	beq	2afa0 <main@@Base+0x14f10>
   2af70:	ldrb	r0, [r2]
   2af74:	cmp	r0, #58	; 0x3a
   2af78:	bne	2afa0 <main@@Base+0x14f10>
   2af7c:	add	r1, r2, #1
   2af80:	sub	r0, r5, r1
   2af84:	cmp	r0, #2
   2af88:	blt	2b208 <main@@Base+0x15178>
   2af8c:	ldrb	r0, [r1]
   2af90:	cmp	r0, #32
   2af94:	bls	2b1f8 <main@@Base+0x15168>
   2af98:	mov	r2, r1
   2af9c:	b	2b218 <main@@Base+0x15188>
   2afa0:	mov	r1, r2
   2afa4:	mov	r0, sl
   2afa8:	mov	r2, r5
   2afac:	mov	r3, #4
   2afb0:	bl	337ac <flatcc_json_parser_set_error@@Base>
   2afb4:	b	2b214 <main@@Base+0x15184>
   2afb8:	bne	2afcc <main@@Base+0x14f3c>
   2afbc:	mov	r2, r1
   2afc0:	ldrb	r0, [r2, #1]!
   2afc4:	cmp	r0, #32
   2afc8:	bhi	2afdc <main@@Base+0x14f4c>
   2afcc:	mov	r0, sl
   2afd0:	mov	r2, r5
   2afd4:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   2afd8:	mov	r2, r0
   2afdc:	cmp	r2, r5
   2afe0:	beq	2b014 <main@@Base+0x14f84>
   2afe4:	ldrb	r0, [r2]
   2afe8:	cmp	r0, #58	; 0x3a
   2afec:	bne	2b014 <main@@Base+0x14f84>
   2aff0:	add	r1, r2, #1
   2aff4:	sub	r0, r5, r1
   2aff8:	cmp	r0, #2
   2affc:	blt	2b240 <main@@Base+0x151b0>
   2b000:	ldrb	r0, [r1]
   2b004:	cmp	r0, #32
   2b008:	bls	2b230 <main@@Base+0x151a0>
   2b00c:	mov	r2, r1
   2b010:	b	2b250 <main@@Base+0x151c0>
   2b014:	mov	r1, r2
   2b018:	mov	r0, sl
   2b01c:	mov	r2, r5
   2b020:	mov	r3, #4
   2b024:	bl	337ac <flatcc_json_parser_set_error@@Base>
   2b028:	b	2b24c <main@@Base+0x151bc>
   2b02c:	bne	2b03c <main@@Base+0x14fac>
   2b030:	ldrb	r0, [r2, #2]!
   2b034:	cmp	r0, #32
   2b038:	bhi	2b04c <main@@Base+0x14fbc>
   2b03c:	mov	r0, sl
   2b040:	mov	r2, r5
   2b044:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   2b048:	mov	r2, r0
   2b04c:	cmp	r4, r2
   2b050:	beq	2b2e4 <main@@Base+0x15254>
   2b054:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2b058:	mov	r1, #9
   2b05c:	mov	r3, #4
   2b060:	str	r1, [sp]
   2b064:	mov	r1, r2
   2b068:	mov	r2, r5
   2b06c:	str	r0, [sp, #4]
   2b070:	movw	r0, #45760	; 0xb2c0
   2b074:	movt	r0, #5
   2b078:	str	r0, [sp, #8]
   2b07c:	movw	r0, #46456	; 0xb578
   2b080:	movt	r0, #2
   2b084:	str	r0, [sp, #12]
   2b088:	movw	r0, #50176	; 0xc400
   2b08c:	movt	r0, #2
   2b090:	str	r0, [sp, #16]
   2b094:	mov	r0, sl
   2b098:	bl	36918 <flatcc_json_parser_union_type_vector@@Base>
   2b09c:	b	2b2f4 <main@@Base+0x15264>
   2b0a0:	bne	2b0b4 <main@@Base+0x15024>
   2b0a4:	mov	r2, r1
   2b0a8:	ldrb	r0, [r2, #1]!
   2b0ac:	cmp	r0, #32
   2b0b0:	bhi	2b0c4 <main@@Base+0x15034>
   2b0b4:	mov	r0, sl
   2b0b8:	mov	r2, r5
   2b0bc:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   2b0c0:	mov	r2, r0
   2b0c4:	cmp	r2, r5
   2b0c8:	beq	2b0fc <main@@Base+0x1506c>
   2b0cc:	ldrb	r0, [r2]
   2b0d0:	cmp	r0, #58	; 0x3a
   2b0d4:	bne	2b0fc <main@@Base+0x1506c>
   2b0d8:	add	r1, r2, #1
   2b0dc:	sub	r0, r5, r1
   2b0e0:	cmp	r0, #2
   2b0e4:	blt	2b28c <main@@Base+0x151fc>
   2b0e8:	ldrb	r0, [r1]
   2b0ec:	cmp	r0, #32
   2b0f0:	bls	2b27c <main@@Base+0x151ec>
   2b0f4:	mov	r2, r1
   2b0f8:	b	2b29c <main@@Base+0x1520c>
   2b0fc:	mov	r1, r2
   2b100:	mov	r0, sl
   2b104:	mov	r2, r5
   2b108:	mov	r3, #4
   2b10c:	bl	337ac <flatcc_json_parser_set_error@@Base>
   2b110:	b	2b298 <main@@Base+0x15208>
   2b114:	bne	2b124 <main@@Base+0x15094>
   2b118:	ldrb	r0, [r2, #2]!
   2b11c:	cmp	r0, #32
   2b120:	bhi	2b134 <main@@Base+0x150a4>
   2b124:	mov	r0, sl
   2b128:	mov	r2, r5
   2b12c:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   2b130:	mov	r2, r0
   2b134:	cmp	r4, r2
   2b138:	beq	2b2e4 <main@@Base+0x15254>
   2b13c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2b140:	mov	r1, #3
   2b144:	mov	r3, #1
   2b148:	b	2b264 <main@@Base+0x151d4>
   2b14c:	bne	2b15c <main@@Base+0x150cc>
   2b150:	ldrb	r0, [r2, #2]!
   2b154:	cmp	r0, #32
   2b158:	bhi	2b16c <main@@Base+0x150dc>
   2b15c:	mov	r0, sl
   2b160:	mov	r2, r5
   2b164:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   2b168:	mov	r2, r0
   2b16c:	cmp	r9, r2
   2b170:	beq	2b270 <main@@Base+0x151e0>
   2b174:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2b178:	mov	r1, #5
   2b17c:	mov	r3, #2
   2b180:	str	r1, [sp]
   2b184:	mov	r1, r2
   2b188:	mov	r2, r5
   2b18c:	str	r0, [sp, #4]
   2b190:	movw	r0, #45792	; 0xb2e0
   2b194:	movt	r0, #5
   2b198:	b	2b2c8 <main@@Base+0x15238>
   2b19c:	bne	2b1ac <main@@Base+0x1511c>
   2b1a0:	ldrb	r0, [r2, #2]!
   2b1a4:	cmp	r0, #32
   2b1a8:	bhi	2b1bc <main@@Base+0x1512c>
   2b1ac:	mov	r0, sl
   2b1b0:	mov	r2, r5
   2b1b4:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   2b1b8:	mov	r2, r0
   2b1bc:	cmp	r4, r2
   2b1c0:	beq	2b2e4 <main@@Base+0x15254>
   2b1c4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2b1c8:	mov	r1, #9
   2b1cc:	mov	r3, #4
   2b1d0:	str	r1, [sp]
   2b1d4:	mov	r1, r2
   2b1d8:	mov	r2, r5
   2b1dc:	str	r0, [sp, #4]
   2b1e0:	movw	r0, #46456	; 0xb578
   2b1e4:	movt	r0, #2
   2b1e8:	str	r0, [sp, #8]
   2b1ec:	mov	r0, sl
   2b1f0:	bl	36458 <flatcc_json_parser_union_vector@@Base>
   2b1f4:	b	2b2f4 <main@@Base+0x15264>
   2b1f8:	bne	2b208 <main@@Base+0x15178>
   2b1fc:	ldrb	r0, [r2, #2]!
   2b200:	cmp	r0, #32
   2b204:	bhi	2b218 <main@@Base+0x15188>
   2b208:	mov	r0, sl
   2b20c:	mov	r2, r5
   2b210:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   2b214:	mov	r2, r0
   2b218:	cmp	r4, r2
   2b21c:	beq	2b2e4 <main@@Base+0x15254>
   2b220:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2b224:	mov	r1, #1
   2b228:	mov	r3, #0
   2b22c:	b	2b264 <main@@Base+0x151d4>
   2b230:	bne	2b240 <main@@Base+0x151b0>
   2b234:	ldrb	r0, [r2, #2]!
   2b238:	cmp	r0, #32
   2b23c:	bhi	2b250 <main@@Base+0x151c0>
   2b240:	mov	r0, sl
   2b244:	mov	r2, r5
   2b248:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   2b24c:	mov	r2, r0
   2b250:	cmp	r9, r2
   2b254:	beq	2b270 <main@@Base+0x151e0>
   2b258:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2b25c:	mov	r1, #5
   2b260:	mov	r3, #2
   2b264:	str	r1, [sp]
   2b268:	mov	r1, r2
   2b26c:	b	2ae6c <main@@Base+0x14ddc>
   2b270:	mov	r0, sl
   2b274:	mov	r1, r9
   2b278:	b	2b2ec <main@@Base+0x1525c>
   2b27c:	bne	2b28c <main@@Base+0x151fc>
   2b280:	ldrb	r0, [r2, #2]!
   2b284:	cmp	r0, #32
   2b288:	bhi	2b29c <main@@Base+0x1520c>
   2b28c:	mov	r0, sl
   2b290:	mov	r2, r5
   2b294:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   2b298:	mov	r2, r0
   2b29c:	cmp	r4, r2
   2b2a0:	beq	2b2e4 <main@@Base+0x15254>
   2b2a4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2b2a8:	mov	r1, #1
   2b2ac:	mov	r3, #0
   2b2b0:	str	r1, [sp]
   2b2b4:	mov	r1, r2
   2b2b8:	mov	r2, r5
   2b2bc:	str	r0, [sp, #4]
   2b2c0:	movw	r0, #45776	; 0xb2d0
   2b2c4:	movt	r0, #5
   2b2c8:	str	r0, [sp, #8]
   2b2cc:	movw	r0, #46456	; 0xb578
   2b2d0:	movt	r0, #2
   2b2d4:	str	r0, [sp, #12]
   2b2d8:	mov	r0, sl
   2b2dc:	bl	35ff4 <flatcc_json_parser_union_type@@Base>
   2b2e0:	b	2b2f4 <main@@Base+0x15264>
   2b2e4:	mov	r0, sl
   2b2e8:	mov	r1, r4
   2b2ec:	mov	r2, r5
   2b2f0:	bl	33ecc <flatcc_json_parser_unmatched_symbol@@Base>
   2b2f4:	ldr	r4, [sp, #36]	; 0x24
   2b2f8:	mov	r2, r0
   2b2fc:	sub	r0, r5, r0
   2b300:	cmp	r0, #2
   2b304:	blt	2b330 <main@@Base+0x152a0>
   2b308:	ldrb	r0, [r2]
   2b30c:	cmp	r0, #32
   2b310:	bls	2b31c <main@@Base+0x1528c>
   2b314:	mov	r3, r2
   2b318:	b	2b344 <main@@Base+0x152b4>
   2b31c:	bne	2b330 <main@@Base+0x152a0>
   2b320:	mov	r3, r2
   2b324:	ldrb	r0, [r3, #1]!
   2b328:	cmp	r0, #32
   2b32c:	bhi	2b344 <main@@Base+0x152b4>
   2b330:	mov	r1, r2
   2b334:	mov	r0, sl
   2b338:	mov	r2, r5
   2b33c:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   2b340:	mov	r3, r0
   2b344:	cmp	r3, r5
   2b348:	beq	2b3b4 <main@@Base+0x15324>
   2b34c:	ldrb	r0, [r3]
   2b350:	cmp	r0, #44	; 0x2c
   2b354:	bne	2b3bc <main@@Base+0x1532c>
   2b358:	add	r1, r3, #1
   2b35c:	sub	r0, r5, r1
   2b360:	cmp	r0, #2
   2b364:	blt	2b38c <main@@Base+0x152fc>
   2b368:	ldrb	r0, [r1]
   2b36c:	cmp	r0, #32
   2b370:	bls	2b37c <main@@Base+0x152ec>
   2b374:	mov	r3, r1
   2b378:	b	2b39c <main@@Base+0x1530c>
   2b37c:	bne	2b38c <main@@Base+0x152fc>
   2b380:	ldrb	r0, [r3, #2]!
   2b384:	cmp	r0, #32
   2b388:	bhi	2b39c <main@@Base+0x1530c>
   2b38c:	mov	r0, sl
   2b390:	mov	r2, r5
   2b394:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   2b398:	mov	r3, r0
   2b39c:	cmp	r3, r5
   2b3a0:	beq	2b3e8 <main@@Base+0x15358>
   2b3a4:	ldrb	r0, [r3]
   2b3a8:	cmp	r0, #125	; 0x7d
   2b3ac:	bne	2a008 <main@@Base+0x13f78>
   2b3b0:	b	2b3c4 <main@@Base+0x15334>
   2b3b4:	mov	r7, r5
   2b3b8:	b	29f3c <main@@Base+0x13eac>
   2b3bc:	cmp	r0, #125	; 0x7d
   2b3c0:	bne	2b3f4 <main@@Base+0x15364>
   2b3c4:	add	r1, r3, #1
   2b3c8:	sub	r0, r5, r1
   2b3cc:	cmp	r0, #2
   2b3d0:	blt	2b41c <main@@Base+0x1538c>
   2b3d4:	ldrb	r0, [r1]
   2b3d8:	cmp	r0, #32
   2b3dc:	bls	2b408 <main@@Base+0x15378>
   2b3e0:	mov	r7, r1
   2b3e4:	b	29f3c <main@@Base+0x13eac>
   2b3e8:	mov	r0, sl
   2b3ec:	mov	r1, r5
   2b3f0:	b	2b3fc <main@@Base+0x1536c>
   2b3f4:	mov	r0, sl
   2b3f8:	mov	r1, r3
   2b3fc:	mov	r2, r5
   2b400:	mov	r3, #10
   2b404:	b	29f34 <main@@Base+0x13ea4>
   2b408:	bne	2b41c <main@@Base+0x1538c>
   2b40c:	ldrb	r0, [r3, #2]!
   2b410:	cmp	r0, #32
   2b414:	mov	r7, r3
   2b418:	bhi	29f3c <main@@Base+0x13eac>
   2b41c:	mov	r0, sl
   2b420:	mov	r2, r5
   2b424:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   2b428:	b	29f38 <main@@Base+0x13ea8>
   2b42c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b430:	add	fp, sp, #28
   2b434:	push	{r3}		; (str r3, [sp, #-4]!)
   2b438:	sub	r7, r2, r1
   2b43c:	cmp	r7, #8
   2b440:	movcs	r7, #8
   2b444:	and	r7, r7, #15
   2b448:	sub	r5, r7, #1
   2b44c:	cmp	r5, #7
   2b450:	bhi	2b534 <main@@Base+0x154a4>
   2b454:	add	lr, pc, #32
   2b458:	mov	ip, #0
   2b45c:	mov	r3, #0
   2b460:	mov	r8, #0
   2b464:	mov	r9, #0
   2b468:	mov	sl, #0
   2b46c:	mov	r7, #0
   2b470:	mov	r4, #0
   2b474:	mov	r6, #0
   2b478:	ldr	pc, [lr, r5, lsl #2]
   2b47c:	andeq	fp, r2, r0, ror #9
   2b480:	ldrdeq	fp, [r2], -r8
   2b484:	ldrdeq	fp, [r2], -r0
   2b488:	andeq	fp, r2, r8, asr #9
   2b48c:			; <UNDEFINED> instruction: 0x0002b4bc
   2b490:			; <UNDEFINED> instruction: 0x0002b4b0
   2b494:	andeq	fp, r2, r0, lsr #9
   2b498:	muleq	r2, ip, r4
   2b49c:	ldrb	r3, [r1, #7]
   2b4a0:	ldrb	r7, [r1, #6]
   2b4a4:	mov	r8, ip
   2b4a8:	orr	r3, r3, r7, lsl #8
   2b4ac:	mov	ip, r3
   2b4b0:	ldrb	r3, [r1, #5]
   2b4b4:	mov	r9, r8
   2b4b8:	orr	ip, ip, r3, lsl #16
   2b4bc:	ldrb	r3, [r1, #4]
   2b4c0:	mov	sl, r9
   2b4c4:	orr	ip, ip, r3, lsl #24
   2b4c8:	ldrb	r3, [r1, #3]
   2b4cc:	orr	r7, r3, sl
   2b4d0:	ldrb	r3, [r1, #2]
   2b4d4:	orr	r4, r7, r3, lsl #8
   2b4d8:	ldrb	r3, [r1, #1]
   2b4dc:	orr	r6, r4, r3, lsl #16
   2b4e0:	ldrb	r7, [r1]
   2b4e4:	movw	r3, #29797	; 0x7465
   2b4e8:	movt	r3, #24931	; 0x6163
   2b4ec:	eor	r3, ip, r3
   2b4f0:	orr	r7, r6, r7, lsl #24
   2b4f4:	movw	r6, #24946	; 0x6172
   2b4f8:	movt	r6, #17256	; 0x4368
   2b4fc:	eor	r7, r7, r6
   2b500:	orrs	r3, r3, r7
   2b504:	bne	2b534 <main@@Base+0x154a4>
   2b508:	add	lr, r1, #8
   2b50c:	mov	r6, #-268435456	; 0xf0000000
   2b510:	sub	r7, r2, lr
   2b514:	cmp	r7, #8
   2b518:	mov	r3, r7
   2b51c:	movcs	r3, #8
   2b520:	add	r3, r6, r3, lsl #28
   2b524:	asr	r3, r3, #28
   2b528:	cmp	r3, #0
   2b52c:	cmpge	r7, #2
   2b530:	bge	2b540 <main@@Base+0x154b0>
   2b534:	mov	r0, r1
   2b538:	sub	sp, fp, #28
   2b53c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b540:	ldrb	r3, [lr]
   2b544:	cmp	r3, #114	; 0x72
   2b548:	bne	2b534 <main@@Base+0x154a4>
   2b54c:	ldrb	r3, [r1, #9]
   2b550:	mov	ip, lr
   2b554:	cmp	r3, #46	; 0x2e
   2b558:	addeq	ip, r1, #10
   2b55c:	cmp	ip, lr
   2b560:	beq	2b534 <main@@Base+0x154a4>
   2b564:	ldr	r3, [sp]
   2b568:	mov	r1, ip
   2b56c:	sub	sp, fp, #28
   2b570:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b574:	b	25e34 <main@@Base+0xfda4>
   2b578:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b57c:	add	fp, sp, #28
   2b580:	sub	sp, sp, #36	; 0x24
   2b584:	ldr	r7, [fp, #8]
   2b588:	mov	r9, r0
   2b58c:	mov	r0, #0
   2b590:	mov	r8, r2
   2b594:	mov	r4, r1
   2b598:	cmp	r3, #11
   2b59c:	str	r0, [r7]
   2b5a0:	bhi	2b5f4 <main@@Base+0x15564>
   2b5a4:	add	r0, pc, #0
   2b5a8:	ldr	pc, [r0, r3, lsl #2]
   2b5ac:	andeq	fp, r2, r4, lsr r6
   2b5b0:	andeq	fp, r2, r4, lsl r6
   2b5b4:	andeq	fp, r2, r0, ror r6
   2b5b8:	andeq	fp, r2, r4, lsl r6
   2b5bc:	andeq	fp, r2, r4, lsl r6
   2b5c0:	andeq	fp, r2, r4, lsl r6
   2b5c4:	andeq	fp, r2, r4, lsl r6
   2b5c8:	andeq	fp, r2, r4, lsl r6
   2b5cc:	andeq	fp, r2, r4, asr #13
   2b5d0:	ldrdeq	fp, [r2], -ip
   2b5d4:	ldrdeq	fp, [r2], -ip
   2b5d8:	strdeq	fp, [r2], -ip
   2b5dc:	mov	r0, r9
   2b5e0:	mov	r1, r4
   2b5e4:	mov	r2, r8
   2b5e8:	mov	r3, r7
   2b5ec:	bl	2c428 <main@@Base+0x16398>
   2b5f0:	b	2b7bc <main@@Base+0x1572c>
   2b5f4:	cmp	r3, #255	; 0xff
   2b5f8:	bne	2b614 <main@@Base+0x15584>
   2b5fc:	mov	r0, r9
   2b600:	mov	r1, r4
   2b604:	mov	r2, r8
   2b608:	mov	r3, r7
   2b60c:	bl	35be8 <flatcc_json_parser_build_string@@Base>
   2b610:	b	2b7bc <main@@Base+0x1572c>
   2b614:	ldrb	r0, [r9, #8]
   2b618:	tst	r0, #1
   2b61c:	bne	2b720 <main@@Base+0x15690>
   2b620:	mov	r0, r9
   2b624:	mov	r1, r4
   2b628:	mov	r2, r8
   2b62c:	mov	r3, #15
   2b630:	b	2b664 <main@@Base+0x155d4>
   2b634:	sub	r0, r8, r4
   2b638:	cmp	r0, #4
   2b63c:	blt	2b654 <main@@Base+0x155c4>
   2b640:	ldr	r0, [r4]
   2b644:	movw	r1, #30062	; 0x756e
   2b648:	movt	r1, #27756	; 0x6c6c
   2b64c:	cmp	r0, r1
   2b650:	beq	2b7fc <main@@Base+0x1576c>
   2b654:	mov	r0, r9
   2b658:	mov	r1, r4
   2b65c:	mov	r2, r8
   2b660:	mov	r3, #26
   2b664:	sub	sp, fp, #28
   2b668:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b66c:	b	337ac <flatcc_json_parser_set_error@@Base>
   2b670:	mov	r0, #0
   2b674:	mov	r1, #1
   2b678:	str	r0, [r7]
   2b67c:	ldr	r0, [r9]
   2b680:	bl	2f88c <flatcc_builder_start_table@@Base>
   2b684:	cmp	r0, #0
   2b688:	bne	2b7a8 <main@@Base+0x15718>
   2b68c:	cmp	r4, r8
   2b690:	beq	2b784 <main@@Base+0x156f4>
   2b694:	ldrb	r0, [r4]
   2b698:	cmp	r0, #123	; 0x7b
   2b69c:	bne	2b784 <main@@Base+0x156f4>
   2b6a0:	add	r1, r4, #1
   2b6a4:	sub	r0, r8, r1
   2b6a8:	cmp	r0, #2
   2b6ac:	blt	2bd38 <main@@Base+0x15ca8>
   2b6b0:	ldrb	r0, [r1]
   2b6b4:	cmp	r0, #32
   2b6b8:	bls	2bd28 <main@@Base+0x15c98>
   2b6bc:	mov	r4, r1
   2b6c0:	b	2bd48 <main@@Base+0x15cb8>
   2b6c4:	mov	r0, #0
   2b6c8:	mov	r1, #2
   2b6cc:	mov	r2, #2
   2b6d0:	str	r0, [r7]
   2b6d4:	ldr	r0, [r9]
   2b6d8:	bl	2eb30 <flatcc_builder_start_struct@@Base>
   2b6dc:	cmp	r0, #0
   2b6e0:	beq	2b778 <main@@Base+0x156e8>
   2b6e4:	cmp	r4, r8
   2b6e8:	beq	2b738 <main@@Base+0x156a8>
   2b6ec:	ldrb	r1, [r4]
   2b6f0:	cmp	r1, #123	; 0x7b
   2b6f4:	bne	2b738 <main@@Base+0x156a8>
   2b6f8:	add	r1, r4, #1
   2b6fc:	str	r0, [sp, #4]
   2b700:	sub	r0, r8, r1
   2b704:	cmp	r0, #2
   2b708:	blt	2b82c <main@@Base+0x1579c>
   2b70c:	ldrb	r0, [r1]
   2b710:	cmp	r0, #32
   2b714:	bls	2b81c <main@@Base+0x1578c>
   2b718:	mov	r4, r1
   2b71c:	b	2b83c <main@@Base+0x157ac>
   2b720:	mov	r0, r9
   2b724:	mov	r1, r4
   2b728:	mov	r2, r8
   2b72c:	sub	sp, fp, #28
   2b730:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b734:	b	3411c <flatcc_json_parser_generic_json@@Base>
   2b738:	mov	r0, r9
   2b73c:	mov	r1, r4
   2b740:	mov	r2, r8
   2b744:	mov	r3, #21
   2b748:	bl	337ac <flatcc_json_parser_set_error@@Base>
   2b74c:	mov	r4, r0
   2b750:	cmp	r4, r8
   2b754:	mov	r1, r8
   2b758:	beq	2b77c <main@@Base+0x156ec>
   2b75c:	ldr	r0, [r9]
   2b760:	bl	2ebd0 <flatcc_builder_end_struct@@Base>
   2b764:	cmp	r0, #0
   2b768:	mov	r1, r4
   2b76c:	str	r0, [r7]
   2b770:	bne	2b7c0 <main@@Base+0x15730>
   2b774:	b	2b77c <main@@Base+0x156ec>
   2b778:	mov	r1, r4
   2b77c:	mov	r0, r9
   2b780:	b	2b7b0 <main@@Base+0x15720>
   2b784:	mov	r0, r9
   2b788:	mov	r1, r4
   2b78c:	mov	r2, r8
   2b790:	mov	r3, #21
   2b794:	bl	337ac <flatcc_json_parser_set_error@@Base>
   2b798:	mov	r4, r0
   2b79c:	ldr	r0, [r9, #24]
   2b7a0:	cmp	r0, #0
   2b7a4:	beq	2b804 <main@@Base+0x15774>
   2b7a8:	mov	r0, r9
   2b7ac:	mov	r1, r4
   2b7b0:	mov	r2, r8
   2b7b4:	mov	r3, #33	; 0x21
   2b7b8:	bl	337ac <flatcc_json_parser_set_error@@Base>
   2b7bc:	mov	r4, r0
   2b7c0:	ldr	r0, [r9, #24]
   2b7c4:	cmp	r0, #0
   2b7c8:	bne	2b7f0 <main@@Base+0x15760>
   2b7cc:	ldr	r0, [r7]
   2b7d0:	cmp	r0, #0
   2b7d4:	bne	2b7f0 <main@@Base+0x15760>
   2b7d8:	mov	r0, r9
   2b7dc:	mov	r1, r4
   2b7e0:	mov	r2, r8
   2b7e4:	mov	r3, #33	; 0x21
   2b7e8:	bl	337ac <flatcc_json_parser_set_error@@Base>
   2b7ec:	mov	r4, r0
   2b7f0:	mov	r0, r4
   2b7f4:	sub	sp, fp, #28
   2b7f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b7fc:	add	r4, r4, #4
   2b800:	b	2b7f0 <main@@Base+0x15760>
   2b804:	ldr	r0, [r9]
   2b808:	bl	3021c <flatcc_builder_end_table@@Base>
   2b80c:	cmp	r0, #0
   2b810:	str	r0, [r7]
   2b814:	bne	2b7c0 <main@@Base+0x15730>
   2b818:	b	2b7a8 <main@@Base+0x15718>
   2b81c:	bne	2b82c <main@@Base+0x1579c>
   2b820:	ldrb	r0, [r4, #2]!
   2b824:	cmp	r0, #32
   2b828:	bhi	2b83c <main@@Base+0x157ac>
   2b82c:	mov	r0, r9
   2b830:	mov	r2, r8
   2b834:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   2b838:	mov	r4, r0
   2b83c:	cmp	r4, r8
   2b840:	mov	r2, r8
   2b844:	beq	2b888 <main@@Base+0x157f8>
   2b848:	ldrb	r0, [r4]
   2b84c:	cmp	r0, #125	; 0x7d
   2b850:	bne	2b884 <main@@Base+0x157f4>
   2b854:	add	r1, r4, #1
   2b858:	sub	r0, r8, r1
   2b85c:	cmp	r0, #2
   2b860:	blt	2c3a0 <main@@Base+0x16310>
   2b864:	ldrb	r0, [r1]
   2b868:	cmp	r0, #32
   2b86c:	bhi	2bd14 <main@@Base+0x15c84>
   2b870:	bne	2c3a0 <main@@Base+0x16310>
   2b874:	ldrb	r0, [r4, #2]!
   2b878:	cmp	r0, #32
   2b87c:	bhi	2b750 <main@@Base+0x156c0>
   2b880:	b	2c3a0 <main@@Base+0x16310>
   2b884:	mov	r2, r4
   2b888:	str	r9, [sp, #12]
   2b88c:	cmp	r2, r8
   2b890:	mov	r1, r8
   2b894:	beq	2b8e0 <main@@Base+0x15850>
   2b898:	ldrb	r0, [r2]
   2b89c:	cmp	r0, #46	; 0x2e
   2b8a0:	beq	2b8b8 <main@@Base+0x15828>
   2b8a4:	cmp	r0, #34	; 0x22
   2b8a8:	bne	2b8d4 <main@@Base+0x15844>
   2b8ac:	mov	r0, #0
   2b8b0:	add	r1, r2, #1
   2b8b4:	b	2b8dc <main@@Base+0x1584c>
   2b8b8:	mov	r1, r2
   2b8bc:	mov	r0, r9
   2b8c0:	mov	r2, r8
   2b8c4:	mov	r3, #5
   2b8c8:	bl	337ac <flatcc_json_parser_set_error@@Base>
   2b8cc:	mov	r1, r0
   2b8d0:	b	2b8e0 <main@@Base+0x15850>
   2b8d4:	mov	r0, #1
   2b8d8:	mov	r1, r2
   2b8dc:	str	r0, [r9, #12]
   2b8e0:	sub	r0, r8, r1
   2b8e4:	mov	r2, #8
   2b8e8:	cmp	r0, #8
   2b8ec:	movcs	r0, r2
   2b8f0:	and	r0, r0, #15
   2b8f4:	sub	r4, r0, #1
   2b8f8:	cmp	r4, #7
   2b8fc:	bhi	2ba48 <main@@Base+0x159b8>
   2b900:	add	r0, pc, #36	; 0x24
   2b904:	mov	r9, r7
   2b908:	mov	sl, #0
   2b90c:	mov	ip, #0
   2b910:	mov	lr, #0
   2b914:	mov	r6, #0
   2b918:	mov	r3, #0
   2b91c:	mov	r5, #0
   2b920:	mov	r2, #0
   2b924:	mov	r7, #0
   2b928:	ldr	pc, [r0, r4, lsl #2]
   2b92c:	muleq	r2, r0, r9
   2b930:	andeq	fp, r2, r8, lsl #19
   2b934:	andeq	fp, r2, r0, lsl #19
   2b938:	andeq	fp, r2, r8, ror r9
   2b93c:	andeq	fp, r2, ip, ror #18
   2b940:	andeq	fp, r2, r0, ror #18
   2b944:	andeq	fp, r2, r0, asr r9
   2b948:	andeq	fp, r2, ip, asr #18
   2b94c:	ldrb	ip, [r1, #7]
   2b950:	ldrb	r0, [r1, #6]
   2b954:	mov	lr, sl
   2b958:	orr	r0, ip, r0, lsl #8
   2b95c:	mov	sl, r0
   2b960:	ldrb	r0, [r1, #5]
   2b964:	mov	r6, lr
   2b968:	orr	sl, sl, r0, lsl #16
   2b96c:	ldrb	r0, [r1, #4]
   2b970:	mov	r3, r6
   2b974:	orr	sl, sl, r0, lsl #24
   2b978:	ldrb	r0, [r1, #3]
   2b97c:	orr	r5, r0, r3
   2b980:	ldrb	r0, [r1, #2]
   2b984:	orr	r2, r5, r0, lsl #8
   2b988:	ldrb	r0, [r1, #1]
   2b98c:	orr	r7, r2, r0, lsl #16
   2b990:	ldrb	r2, [r1]
   2b994:	movw	r0, #25966	; 0x656e
   2b998:	movw	r3, #26994	; 0x6972
   2b99c:	movt	r0, #24428	; 0x5f6c
   2b9a0:	movt	r3, #26721	; 0x6861
   2b9a4:	eor	r0, sl, r0
   2b9a8:	orr	r2, r7, r2, lsl #24
   2b9ac:	mov	r7, r9
   2b9b0:	ldr	r9, [sp, #12]
   2b9b4:	eor	r2, r2, r3
   2b9b8:	orrs	r0, r0, r2
   2b9bc:	bne	2ba48 <main@@Base+0x159b8>
   2b9c0:	add	r4, r1, #8
   2b9c4:	mov	r2, #8
   2b9c8:	sub	r0, r8, r4
   2b9cc:	cmp	r0, #8
   2b9d0:	movcc	r2, r0
   2b9d4:	and	r3, r2, #15
   2b9d8:	sub	r2, r3, #3
   2b9dc:	cmp	r2, #6
   2b9e0:	bcs	2ba50 <main@@Base+0x159c0>
   2b9e4:	ldrb	r2, [r1, #10]
   2b9e8:	lsl	r2, r2, #8
   2b9ec:	ldrb	r3, [r1, #9]
   2b9f0:	orr	r2, r2, r3, lsl #16
   2b9f4:	ldrb	r3, [r4]
   2b9f8:	bic	r2, r2, #255	; 0xff
   2b9fc:	orr	r2, r2, r3, lsl #24
   2ba00:	movw	r3, #26624	; 0x6800
   2ba04:	movt	r3, #26484	; 0x6774
   2ba08:	teq	r2, r3
   2ba0c:	bne	2bb94 <main@@Base+0x15b04>
   2ba10:	cmp	r0, #4
   2ba14:	blt	2bb94 <main@@Base+0x15b04>
   2ba18:	mov	r2, r1
   2ba1c:	ldr	r3, [r9, #12]
   2ba20:	ldrb	r0, [r2, #11]!
   2ba24:	cmp	r3, #0
   2ba28:	beq	2ba68 <main@@Base+0x159d8>
   2ba2c:	cmp	r0, #33	; 0x21
   2ba30:	bcc	2ba3c <main@@Base+0x159ac>
   2ba34:	cmp	r0, #58	; 0x3a
   2ba38:	bne	2bb94 <main@@Base+0x15b04>
   2ba3c:	mov	r0, #0
   2ba40:	str	r0, [r9, #12]
   2ba44:	b	2ba74 <main@@Base+0x159e4>
   2ba48:	mov	r0, r9
   2ba4c:	b	2bb9c <main@@Base+0x15b0c>
   2ba50:	mov	r2, #0
   2ba54:	cmp	r3, #1
   2ba58:	beq	2b9f4 <main@@Base+0x15964>
   2ba5c:	cmp	r3, #2
   2ba60:	beq	2b9ec <main@@Base+0x1595c>
   2ba64:	b	2bb94 <main@@Base+0x15b04>
   2ba68:	cmp	r0, #34	; 0x22
   2ba6c:	bne	2bb94 <main@@Base+0x15b04>
   2ba70:	add	r2, r1, #12
   2ba74:	sub	r0, r8, r2
   2ba78:	cmp	r0, #2
   2ba7c:	blt	2baa8 <main@@Base+0x15a18>
   2ba80:	ldrb	r0, [r2]
   2ba84:	cmp	r0, #32
   2ba88:	bls	2ba94 <main@@Base+0x15a04>
   2ba8c:	mov	r5, r2
   2ba90:	b	2babc <main@@Base+0x15a2c>
   2ba94:	bne	2baa8 <main@@Base+0x15a18>
   2ba98:	mov	r5, r2
   2ba9c:	ldrb	r0, [r5, #1]!
   2baa0:	cmp	r0, #32
   2baa4:	bhi	2babc <main@@Base+0x15a2c>
   2baa8:	mov	r1, r2
   2baac:	mov	r0, r9
   2bab0:	mov	r2, r8
   2bab4:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   2bab8:	mov	r5, r0
   2babc:	cmp	r5, r8
   2bac0:	beq	2baf4 <main@@Base+0x15a64>
   2bac4:	ldrb	r0, [r5]
   2bac8:	cmp	r0, #58	; 0x3a
   2bacc:	bne	2baf4 <main@@Base+0x15a64>
   2bad0:	add	r1, r5, #1
   2bad4:	sub	r0, r8, r1
   2bad8:	cmp	r0, #2
   2badc:	blt	2bb1c <main@@Base+0x15a8c>
   2bae0:	ldrb	r0, [r1]
   2bae4:	cmp	r0, #32
   2bae8:	bls	2bb0c <main@@Base+0x15a7c>
   2baec:	mov	r5, r1
   2baf0:	b	2bb2c <main@@Base+0x15a9c>
   2baf4:	mov	r0, r9
   2baf8:	mov	r1, r5
   2bafc:	mov	r2, r8
   2bb00:	mov	r3, #4
   2bb04:	bl	337ac <flatcc_json_parser_set_error@@Base>
   2bb08:	b	2bb28 <main@@Base+0x15a98>
   2bb0c:	bne	2bb1c <main@@Base+0x15a8c>
   2bb10:	ldrb	r0, [r5, #2]!
   2bb14:	cmp	r0, #32
   2bb18:	bhi	2bb2c <main@@Base+0x15a9c>
   2bb1c:	mov	r0, r9
   2bb20:	mov	r2, r8
   2bb24:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   2bb28:	mov	r5, r0
   2bb2c:	cmp	r4, r5
   2bb30:	beq	2bb94 <main@@Base+0x15b04>
   2bb34:	mov	r4, #0
   2bb38:	cmp	r5, r8
   2bb3c:	str	r4, [sp, #28]
   2bb40:	str	r4, [sp, #24]
   2bb44:	strh	r4, [sp, #16]
   2bb48:	str	r4, [sp, #20]
   2bb4c:	beq	2bc5c <main@@Base+0x15bcc>
   2bb50:	add	r0, sp, #24
   2bb54:	mov	r1, r5
   2bb58:	mov	r2, r8
   2bb5c:	add	r3, sp, #20
   2bb60:	str	r0, [sp]
   2bb64:	mov	r0, r9
   2bb68:	bl	356c0 <flatcc_json_parser_integer@@Base>
   2bb6c:	cmp	r0, r5
   2bb70:	beq	2bc64 <main@@Base+0x15bd4>
   2bb74:	mov	r1, r0
   2bb78:	ldr	r0, [sp, #20]
   2bb7c:	cmp	r0, #0
   2bb80:	beq	2bc6c <main@@Base+0x15bdc>
   2bb84:	mov	r0, r9
   2bb88:	mov	r2, r8
   2bb8c:	mov	r3, #8
   2bb90:	b	2bc8c <main@@Base+0x15bfc>
   2bb94:	mov	r0, r9
   2bb98:	mov	r1, r4
   2bb9c:	mov	r2, r8
   2bba0:	bl	33ecc <flatcc_json_parser_unmatched_symbol@@Base>
   2bba4:	mov	r1, r0
   2bba8:	sub	r0, r8, r1
   2bbac:	cmp	r0, #2
   2bbb0:	blt	2bbdc <main@@Base+0x15b4c>
   2bbb4:	ldrb	r0, [r1]
   2bbb8:	cmp	r0, #32
   2bbbc:	bls	2bbc8 <main@@Base+0x15b38>
   2bbc0:	mov	r2, r1
   2bbc4:	b	2bbec <main@@Base+0x15b5c>
   2bbc8:	bne	2bbdc <main@@Base+0x15b4c>
   2bbcc:	mov	r2, r1
   2bbd0:	ldrb	r0, [r2, #1]!
   2bbd4:	cmp	r0, #32
   2bbd8:	bhi	2bbec <main@@Base+0x15b5c>
   2bbdc:	mov	r0, r9
   2bbe0:	mov	r2, r8
   2bbe4:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   2bbe8:	mov	r2, r0
   2bbec:	cmp	r2, r8
   2bbf0:	beq	2bce8 <main@@Base+0x15c58>
   2bbf4:	ldrb	r0, [r2]
   2bbf8:	cmp	r0, #44	; 0x2c
   2bbfc:	bne	2bcf0 <main@@Base+0x15c60>
   2bc00:	add	r1, r2, #1
   2bc04:	sub	r0, r8, r1
   2bc08:	cmp	r0, #2
   2bc0c:	blt	2bc34 <main@@Base+0x15ba4>
   2bc10:	ldrb	r0, [r1]
   2bc14:	cmp	r0, #32
   2bc18:	bls	2bc24 <main@@Base+0x15b94>
   2bc1c:	mov	r2, r1
   2bc20:	b	2bc44 <main@@Base+0x15bb4>
   2bc24:	bne	2bc34 <main@@Base+0x15ba4>
   2bc28:	ldrb	r0, [r2, #2]!
   2bc2c:	cmp	r0, #32
   2bc30:	bhi	2bc44 <main@@Base+0x15bb4>
   2bc34:	mov	r0, r9
   2bc38:	mov	r2, r8
   2bc3c:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   2bc40:	mov	r2, r0
   2bc44:	cmp	r2, r8
   2bc48:	beq	2bd1c <main@@Base+0x15c8c>
   2bc4c:	ldrb	r0, [r2]
   2bc50:	cmp	r0, #125	; 0x7d
   2bc54:	bne	2b88c <main@@Base+0x157fc>
   2bc58:	b	2bcf8 <main@@Base+0x15c68>
   2bc5c:	mov	r1, r8
   2bc60:	b	2bc94 <main@@Base+0x15c04>
   2bc64:	mov	r1, r5
   2bc68:	b	2bc94 <main@@Base+0x15c04>
   2bc6c:	ldr	r0, [sp, #24]
   2bc70:	ldr	r2, [sp, #28]
   2bc74:	subs	r3, r0, #65536	; 0x10000
   2bc78:	sbcs	r2, r2, #0
   2bc7c:	bcc	2bcdc <main@@Base+0x15c4c>
   2bc80:	mov	r0, r9
   2bc84:	mov	r2, r8
   2bc88:	mov	r3, #7
   2bc8c:	bl	337ac <flatcc_json_parser_set_error@@Base>
   2bc90:	mov	r1, r0
   2bc94:	cmp	r5, r1
   2bc98:	bne	2bcd0 <main@@Base+0x15c40>
   2bc9c:	movw	r3, #45820	; 0xb2fc
   2bca0:	add	r0, sp, #16
   2bca4:	mov	r1, r5
   2bca8:	mov	r2, r8
   2bcac:	str	r0, [sp]
   2bcb0:	mov	r0, r9
   2bcb4:	movt	r3, #5
   2bcb8:	bl	2ca58 <main@@Base+0x169c8>
   2bcbc:	mov	r1, r0
   2bcc0:	cmp	r0, r5
   2bcc4:	cmpne	r1, r8
   2bcc8:	beq	2c3e8 <main@@Base+0x16358>
   2bccc:	ldrh	r4, [sp, #16]
   2bcd0:	ldr	r0, [sp, #4]
   2bcd4:	strh	r4, [r0]
   2bcd8:	b	2bba8 <main@@Base+0x15b18>
   2bcdc:	mov	r4, r0
   2bce0:	strh	r0, [sp, #16]
   2bce4:	b	2bc94 <main@@Base+0x15c04>
   2bce8:	mov	r1, r8
   2bcec:	b	2b77c <main@@Base+0x156ec>
   2bcf0:	cmp	r0, #125	; 0x7d
   2bcf4:	bne	2c378 <main@@Base+0x162e8>
   2bcf8:	add	r1, r2, #1
   2bcfc:	sub	r0, r8, r1
   2bd00:	cmp	r0, #2
   2bd04:	blt	2c3a0 <main@@Base+0x16310>
   2bd08:	ldrb	r0, [r1]
   2bd0c:	cmp	r0, #32
   2bd10:	bls	2c38c <main@@Base+0x162fc>
   2bd14:	mov	r4, r1
   2bd18:	b	2b750 <main@@Base+0x156c0>
   2bd1c:	mov	r0, r9
   2bd20:	mov	r1, r8
   2bd24:	b	2c380 <main@@Base+0x162f0>
   2bd28:	bne	2bd38 <main@@Base+0x15ca8>
   2bd2c:	ldrb	r0, [r4, #2]!
   2bd30:	cmp	r0, #32
   2bd34:	bhi	2bd48 <main@@Base+0x15cb8>
   2bd38:	mov	r0, r9
   2bd3c:	mov	r2, r8
   2bd40:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   2bd44:	mov	r4, r0
   2bd48:	cmp	r4, r8
   2bd4c:	mov	r2, r8
   2bd50:	beq	2bd94 <main@@Base+0x15d04>
   2bd54:	ldrb	r0, [r4]
   2bd58:	cmp	r0, #125	; 0x7d
   2bd5c:	bne	2bd90 <main@@Base+0x15d00>
   2bd60:	add	r1, r4, #1
   2bd64:	sub	r0, r8, r1
   2bd68:	cmp	r0, #2
   2bd6c:	blt	2c3d8 <main@@Base+0x16348>
   2bd70:	ldrb	r0, [r1]
   2bd74:	cmp	r0, #32
   2bd78:	bhi	2c364 <main@@Base+0x162d4>
   2bd7c:	bne	2c3d8 <main@@Base+0x16348>
   2bd80:	ldrb	r0, [r4, #2]!
   2bd84:	cmp	r0, #32
   2bd88:	bhi	2b79c <main@@Base+0x1570c>
   2bd8c:	b	2c3d8 <main@@Base+0x16348>
   2bd90:	mov	r2, r4
   2bd94:	str	r7, [sp, #8]
   2bd98:	cmp	r2, r8
   2bd9c:	mov	r1, r8
   2bda0:	beq	2bdec <main@@Base+0x15d5c>
   2bda4:	ldrb	r0, [r2]
   2bda8:	cmp	r0, #46	; 0x2e
   2bdac:	beq	2bdc4 <main@@Base+0x15d34>
   2bdb0:	cmp	r0, #34	; 0x22
   2bdb4:	bne	2bde0 <main@@Base+0x15d50>
   2bdb8:	mov	r0, #0
   2bdbc:	add	r1, r2, #1
   2bdc0:	b	2bde8 <main@@Base+0x15d58>
   2bdc4:	mov	r1, r2
   2bdc8:	mov	r0, r9
   2bdcc:	mov	r2, r8
   2bdd0:	mov	r3, #5
   2bdd4:	bl	337ac <flatcc_json_parser_set_error@@Base>
   2bdd8:	mov	r1, r0
   2bddc:	b	2bdec <main@@Base+0x15d5c>
   2bde0:	mov	r0, #1
   2bde4:	mov	r1, r2
   2bde8:	str	r0, [r9, #12]
   2bdec:	sub	r0, r8, r1
   2bdf0:	mov	r2, #8
   2bdf4:	cmp	r0, #8
   2bdf8:	movcs	r0, r2
   2bdfc:	and	r0, r0, #15
   2be00:	sub	r4, r0, #1
   2be04:	cmp	r4, #7
   2be08:	bhi	2c030 <main@@Base+0x15fa0>
   2be0c:	add	sl, pc, #32
   2be10:	mov	r0, #0
   2be14:	mov	ip, #0
   2be18:	mov	lr, #0
   2be1c:	mov	r6, #0
   2be20:	mov	r3, #0
   2be24:	mov	r2, #0
   2be28:	mov	r7, #0
   2be2c:	mov	r5, #0
   2be30:	ldr	pc, [sl, r4, lsl #2]
   2be34:	muleq	r2, r8, lr
   2be38:	muleq	r2, r0, lr
   2be3c:	andeq	fp, r2, r8, lsl #29
   2be40:	andeq	fp, r2, r0, lsl #29
   2be44:	andeq	fp, r2, r4, ror lr
   2be48:	andeq	fp, r2, r8, ror #28
   2be4c:	andeq	fp, r2, r8, asr lr
   2be50:	andeq	fp, r2, r4, asr lr
   2be54:	ldrb	ip, [r1, #7]
   2be58:	ldrb	r2, [r1, #6]
   2be5c:	mov	lr, r0
   2be60:	orr	r2, ip, r2, lsl #8
   2be64:	mov	r0, r2
   2be68:	ldrb	r2, [r1, #5]
   2be6c:	mov	r6, lr
   2be70:	orr	r0, r0, r2, lsl #16
   2be74:	ldrb	r2, [r1, #4]
   2be78:	mov	r3, r6
   2be7c:	orr	r0, r0, r2, lsl #24
   2be80:	ldrb	r2, [r1, #3]
   2be84:	orr	r2, r2, r3
   2be88:	ldrb	r3, [r1, #2]
   2be8c:	orr	r7, r2, r3, lsl #8
   2be90:	ldrb	r2, [r1, #1]
   2be94:	orr	r5, r7, r2, lsl #16
   2be98:	movw	r2, #24948	; 0x6174
   2be9c:	movw	r3, #28530	; 0x6f72
   2bea0:	movt	r2, #25695	; 0x645f
   2bea4:	movt	r3, #29559	; 0x7377
   2bea8:	eor	r0, r0, r2
   2beac:	ldrb	r2, [r1]
   2beb0:	orr	r2, r5, r2, lsl #24
   2beb4:	eor	r2, r2, r3
   2beb8:	orrs	r0, r0, r2
   2bebc:	bne	2c030 <main@@Base+0x15fa0>
   2bec0:	add	lr, r1, #8
   2bec4:	mov	r2, #8
   2bec8:	sub	r0, r8, lr
   2becc:	cmp	r0, #8
   2bed0:	movcs	r0, r2
   2bed4:	and	r0, r0, #15
   2bed8:	sub	r3, r0, #1
   2bedc:	cmp	r3, #7
   2bee0:	bhi	2c038 <main@@Base+0x15fa8>
   2bee4:	add	r6, pc, #36	; 0x24
   2bee8:	mov	r2, #0
   2beec:	mov	r0, #0
   2bef0:	mov	sl, #0
   2bef4:	mov	r4, #0
   2bef8:	mov	r5, #0
   2befc:	mov	r7, #0
   2bf00:	mov	ip, #0
   2bf04:	str	r2, [sp, #4]
   2bf08:	mov	r2, #0
   2bf0c:	ldr	pc, [r6, r3, lsl #2]
   2bf10:	andeq	fp, r2, ip, ror pc
   2bf14:	andeq	fp, r2, r4, ror pc
   2bf18:	andeq	fp, r2, ip, ror #30
   2bf1c:	andeq	fp, r2, r4, ror #30
   2bf20:	andeq	fp, r2, r8, asr pc
   2bf24:	andeq	fp, r2, ip, asr #30
   2bf28:	andeq	fp, r2, r8, lsr pc
   2bf2c:	andeq	fp, r2, r0, lsr pc
   2bf30:	ldrb	r2, [r1, #15]
   2bf34:	str	r2, [sp, #4]
   2bf38:	ldrb	r2, [r1, #14]
   2bf3c:	ldr	r3, [sp, #4]
   2bf40:	mov	sl, r0
   2bf44:	orr	r2, r3, r2, lsl #8
   2bf48:	mov	r0, r2
   2bf4c:	ldrb	r2, [r1, #13]
   2bf50:	mov	r4, sl
   2bf54:	orr	r0, r0, r2, lsl #16
   2bf58:	ldrb	r2, [r1, #12]
   2bf5c:	mov	r5, r4
   2bf60:	orr	r0, r0, r2, lsl #24
   2bf64:	ldrb	r2, [r1, #11]
   2bf68:	orr	r2, r2, r5
   2bf6c:	ldrb	r3, [r1, #10]
   2bf70:	orr	r7, r2, r3, lsl #8
   2bf74:	ldrb	r2, [r1, #9]
   2bf78:	orr	ip, r7, r2, lsl #16
   2bf7c:	movw	r2, #24941	; 0x616d
   2bf80:	movw	r3, #25451	; 0x636b
   2bf84:	movt	r2, #24420	; 0x5f64
   2bf88:	movt	r3, #29793	; 0x7461
   2bf8c:	eor	r0, r0, r2
   2bf90:	ldrb	r2, [lr]
   2bf94:	orr	r2, ip, r2, lsl #24
   2bf98:	eor	r2, r2, r3
   2bf9c:	orrs	r0, r0, r2
   2bfa0:	bne	2c038 <main@@Base+0x15fa8>
   2bfa4:	add	r4, r1, #16
   2bfa8:	mov	r2, #8
   2bfac:	sub	r0, r8, r4
   2bfb0:	cmp	r0, #8
   2bfb4:	movcc	r2, r0
   2bfb8:	and	r3, r2, #15
   2bfbc:	sub	r2, r3, #3
   2bfc0:	cmp	r2, #6
   2bfc4:	bcs	2c108 <main@@Base+0x16078>
   2bfc8:	ldrb	r2, [r1, #18]
   2bfcc:	ldr	r7, [sp, #8]
   2bfd0:	lsl	r2, r2, #8
   2bfd4:	ldrb	r3, [r1, #17]
   2bfd8:	orr	r2, r2, r3, lsl #16
   2bfdc:	ldrb	r3, [r4]
   2bfe0:	bic	r2, r2, #255	; 0xff
   2bfe4:	orr	r2, r2, r3, lsl #24
   2bfe8:	movw	r3, #25856	; 0x6500
   2bfec:	movt	r3, #24935	; 0x6167
   2bff0:	teq	r2, r3
   2bff4:	bne	2c268 <main@@Base+0x161d8>
   2bff8:	cmp	r0, #4
   2bffc:	blt	2c268 <main@@Base+0x161d8>
   2c000:	mov	r2, r1
   2c004:	ldr	r3, [r9, #12]
   2c008:	ldrb	r0, [r2, #19]!
   2c00c:	cmp	r3, #0
   2c010:	beq	2c124 <main@@Base+0x16094>
   2c014:	cmp	r0, #33	; 0x21
   2c018:	bcc	2c024 <main@@Base+0x15f94>
   2c01c:	cmp	r0, #58	; 0x3a
   2c020:	bne	2c268 <main@@Base+0x161d8>
   2c024:	mov	r0, #0
   2c028:	str	r0, [r9, #12]
   2c02c:	b	2c130 <main@@Base+0x160a0>
   2c030:	mov	r0, r9
   2c034:	b	2c040 <main@@Base+0x15fb0>
   2c038:	mov	r0, r9
   2c03c:	mov	r1, lr
   2c040:	mov	r2, r8
   2c044:	bl	33ecc <flatcc_json_parser_unmatched_symbol@@Base>
   2c048:	ldr	r7, [sp, #8]
   2c04c:	mov	r4, r0
   2c050:	sub	r0, r8, r4
   2c054:	cmp	r0, #2
   2c058:	blt	2c084 <main@@Base+0x15ff4>
   2c05c:	ldrb	r0, [r4]
   2c060:	cmp	r0, #32
   2c064:	bls	2c070 <main@@Base+0x15fe0>
   2c068:	mov	r2, r4
   2c06c:	b	2c098 <main@@Base+0x16008>
   2c070:	bne	2c084 <main@@Base+0x15ff4>
   2c074:	mov	r2, r4
   2c078:	ldrb	r0, [r2, #1]!
   2c07c:	cmp	r0, #32
   2c080:	bhi	2c098 <main@@Base+0x16008>
   2c084:	mov	r0, r9
   2c088:	mov	r1, r4
   2c08c:	mov	r2, r8
   2c090:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   2c094:	mov	r2, r0
   2c098:	cmp	r2, r8
   2c09c:	beq	2c338 <main@@Base+0x162a8>
   2c0a0:	ldrb	r0, [r2]
   2c0a4:	cmp	r0, #44	; 0x2c
   2c0a8:	bne	2c340 <main@@Base+0x162b0>
   2c0ac:	add	r1, r2, #1
   2c0b0:	sub	r0, r8, r1
   2c0b4:	cmp	r0, #2
   2c0b8:	blt	2c0e0 <main@@Base+0x16050>
   2c0bc:	ldrb	r0, [r1]
   2c0c0:	cmp	r0, #32
   2c0c4:	bls	2c0d0 <main@@Base+0x16040>
   2c0c8:	mov	r2, r1
   2c0cc:	b	2c0f0 <main@@Base+0x16060>
   2c0d0:	bne	2c0e0 <main@@Base+0x16050>
   2c0d4:	ldrb	r0, [r2, #2]!
   2c0d8:	cmp	r0, #32
   2c0dc:	bhi	2c0f0 <main@@Base+0x16060>
   2c0e0:	mov	r0, r9
   2c0e4:	mov	r2, r8
   2c0e8:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   2c0ec:	mov	r2, r0
   2c0f0:	cmp	r2, r8
   2c0f4:	beq	2c36c <main@@Base+0x162dc>
   2c0f8:	ldrb	r0, [r2]
   2c0fc:	cmp	r0, #125	; 0x7d
   2c100:	bne	2bd98 <main@@Base+0x15d08>
   2c104:	b	2c348 <main@@Base+0x162b8>
   2c108:	ldr	r7, [sp, #8]
   2c10c:	mov	r2, #0
   2c110:	cmp	r3, #1
   2c114:	beq	2bfdc <main@@Base+0x15f4c>
   2c118:	cmp	r3, #2
   2c11c:	beq	2bfd4 <main@@Base+0x15f44>
   2c120:	b	2c268 <main@@Base+0x161d8>
   2c124:	cmp	r0, #34	; 0x22
   2c128:	bne	2c268 <main@@Base+0x161d8>
   2c12c:	add	r2, r1, #20
   2c130:	sub	r0, r8, r2
   2c134:	cmp	r0, #2
   2c138:	blt	2c164 <main@@Base+0x160d4>
   2c13c:	ldrb	r0, [r2]
   2c140:	cmp	r0, #32
   2c144:	bls	2c150 <main@@Base+0x160c0>
   2c148:	mov	r6, r2
   2c14c:	b	2c178 <main@@Base+0x160e8>
   2c150:	bne	2c164 <main@@Base+0x160d4>
   2c154:	mov	r6, r2
   2c158:	ldrb	r0, [r6, #1]!
   2c15c:	cmp	r0, #32
   2c160:	bhi	2c178 <main@@Base+0x160e8>
   2c164:	mov	r1, r2
   2c168:	mov	r0, r9
   2c16c:	mov	r2, r8
   2c170:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   2c174:	mov	r6, r0
   2c178:	cmp	r6, r8
   2c17c:	beq	2c1b0 <main@@Base+0x16120>
   2c180:	ldrb	r0, [r6]
   2c184:	cmp	r0, #58	; 0x3a
   2c188:	bne	2c1b0 <main@@Base+0x16120>
   2c18c:	add	r1, r6, #1
   2c190:	sub	r0, r8, r1
   2c194:	cmp	r0, #2
   2c198:	blt	2c1d8 <main@@Base+0x16148>
   2c19c:	ldrb	r0, [r1]
   2c1a0:	cmp	r0, #32
   2c1a4:	bls	2c1c8 <main@@Base+0x16138>
   2c1a8:	mov	r6, r1
   2c1ac:	b	2c1e8 <main@@Base+0x16158>
   2c1b0:	mov	r0, r9
   2c1b4:	mov	r1, r6
   2c1b8:	mov	r2, r8
   2c1bc:	mov	r3, #4
   2c1c0:	bl	337ac <flatcc_json_parser_set_error@@Base>
   2c1c4:	b	2c1e4 <main@@Base+0x16154>
   2c1c8:	bne	2c1d8 <main@@Base+0x16148>
   2c1cc:	ldrb	r0, [r6, #2]!
   2c1d0:	cmp	r0, #32
   2c1d4:	bhi	2c1e8 <main@@Base+0x16158>
   2c1d8:	mov	r0, r9
   2c1dc:	mov	r2, r8
   2c1e0:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   2c1e4:	mov	r6, r0
   2c1e8:	cmp	r4, r6
   2c1ec:	beq	2c268 <main@@Base+0x161d8>
   2c1f0:	mov	r5, #0
   2c1f4:	cmp	r6, r8
   2c1f8:	str	r5, [sp, #28]
   2c1fc:	str	r5, [sp, #24]
   2c200:	str	r5, [sp, #16]
   2c204:	str	r5, [sp, #20]
   2c208:	beq	2c27c <main@@Base+0x161ec>
   2c20c:	add	r0, sp, #24
   2c210:	mov	r1, r6
   2c214:	mov	r2, r8
   2c218:	add	r3, sp, #20
   2c21c:	str	r0, [sp]
   2c220:	mov	r0, r9
   2c224:	bl	356c0 <flatcc_json_parser_integer@@Base>
   2c228:	cmp	r0, r6
   2c22c:	beq	2c284 <main@@Base+0x161f4>
   2c230:	ldr	r2, [sp, #20]
   2c234:	mov	r4, r0
   2c238:	ldr	r0, [sp, #24]
   2c23c:	ldr	r1, [sp, #28]
   2c240:	cmp	r2, #0
   2c244:	beq	2c28c <main@@Base+0x161fc>
   2c248:	subs	r2, r0, #-2147483647	; 0x80000001
   2c24c:	sbcs	r1, r1, #0
   2c250:	bcc	2c2b4 <main@@Base+0x16224>
   2c254:	mov	r0, r9
   2c258:	mov	r1, r4
   2c25c:	mov	r2, r8
   2c260:	mov	r3, #8
   2c264:	b	2c2a8 <main@@Base+0x16218>
   2c268:	mov	r0, r9
   2c26c:	mov	r1, r4
   2c270:	mov	r2, r8
   2c274:	bl	33ecc <flatcc_json_parser_unmatched_symbol@@Base>
   2c278:	b	2c04c <main@@Base+0x15fbc>
   2c27c:	mov	r4, r8
   2c280:	b	2c2c4 <main@@Base+0x16234>
   2c284:	mov	r4, r6
   2c288:	b	2c2c4 <main@@Base+0x16234>
   2c28c:	subs	r2, r0, #-2147483648	; 0x80000000
   2c290:	sbcs	r1, r1, #0
   2c294:	bcc	2c2bc <main@@Base+0x1622c>
   2c298:	mov	r0, r9
   2c29c:	mov	r1, r4
   2c2a0:	mov	r2, r8
   2c2a4:	mov	r3, #7
   2c2a8:	bl	337ac <flatcc_json_parser_set_error@@Base>
   2c2ac:	mov	r4, r0
   2c2b0:	b	2c2c4 <main@@Base+0x16234>
   2c2b4:	rsb	r5, r0, #0
   2c2b8:	b	2c2c0 <main@@Base+0x16230>
   2c2bc:	mov	r5, r0
   2c2c0:	str	r5, [sp, #16]
   2c2c4:	cmp	r6, r4
   2c2c8:	bne	2c300 <main@@Base+0x16270>
   2c2cc:	movw	r3, #45808	; 0xb2f0
   2c2d0:	add	r0, sp, #16
   2c2d4:	mov	r1, r6
   2c2d8:	mov	r2, r8
   2c2dc:	str	r0, [sp]
   2c2e0:	mov	r0, r9
   2c2e4:	movt	r3, #5
   2c2e8:	bl	24cd4 <main@@Base+0xec44>
   2c2ec:	mov	r4, r0
   2c2f0:	cmp	r0, r6
   2c2f4:	cmpne	r4, r8
   2c2f8:	beq	2c3f8 <main@@Base+0x16368>
   2c2fc:	ldr	r5, [sp, #16]
   2c300:	cmp	r5, #0
   2c304:	bne	2c314 <main@@Base+0x16284>
   2c308:	ldrb	r0, [r9, #8]
   2c30c:	tst	r0, #2
   2c310:	beq	2c050 <main@@Base+0x15fc0>
   2c314:	ldr	r0, [r9]
   2c318:	mov	r1, #0
   2c31c:	mov	r2, #4
   2c320:	mov	r3, #4
   2c324:	bl	30b5c <flatcc_builder_table_add@@Base>
   2c328:	cmp	r0, #0
   2c32c:	beq	2c3f8 <main@@Base+0x16368>
   2c330:	str	r5, [r0]
   2c334:	b	2c050 <main@@Base+0x15fc0>
   2c338:	mov	r4, r8
   2c33c:	b	2b79c <main@@Base+0x1570c>
   2c340:	cmp	r0, #125	; 0x7d
   2c344:	bne	2c3b0 <main@@Base+0x16320>
   2c348:	add	r1, r2, #1
   2c34c:	sub	r0, r8, r1
   2c350:	cmp	r0, #2
   2c354:	blt	2c3d8 <main@@Base+0x16348>
   2c358:	ldrb	r0, [r1]
   2c35c:	cmp	r0, #32
   2c360:	bls	2c3c4 <main@@Base+0x16334>
   2c364:	mov	r4, r1
   2c368:	b	2b79c <main@@Base+0x1570c>
   2c36c:	mov	r0, r9
   2c370:	mov	r1, r8
   2c374:	b	2c3b8 <main@@Base+0x16328>
   2c378:	mov	r0, r9
   2c37c:	mov	r1, r2
   2c380:	mov	r2, r8
   2c384:	mov	r3, #10
   2c388:	b	2b748 <main@@Base+0x156b8>
   2c38c:	bne	2c3a0 <main@@Base+0x16310>
   2c390:	ldrb	r0, [r2, #2]!
   2c394:	cmp	r0, #32
   2c398:	mov	r4, r2
   2c39c:	bhi	2b750 <main@@Base+0x156c0>
   2c3a0:	mov	r0, r9
   2c3a4:	mov	r2, r8
   2c3a8:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   2c3ac:	b	2b74c <main@@Base+0x156bc>
   2c3b0:	mov	r0, r9
   2c3b4:	mov	r1, r2
   2c3b8:	mov	r2, r8
   2c3bc:	mov	r3, #10
   2c3c0:	b	2b794 <main@@Base+0x15704>
   2c3c4:	bne	2c3d8 <main@@Base+0x16348>
   2c3c8:	ldrb	r0, [r2, #2]!
   2c3cc:	cmp	r0, #32
   2c3d0:	mov	r4, r2
   2c3d4:	bhi	2b79c <main@@Base+0x1570c>
   2c3d8:	mov	r0, r9
   2c3dc:	mov	r2, r8
   2c3e0:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   2c3e4:	b	2b798 <main@@Base+0x15708>
   2c3e8:	mov	r0, r9
   2c3ec:	mov	r2, r8
   2c3f0:	mov	r3, #33	; 0x21
   2c3f4:	b	2b748 <main@@Base+0x156b8>
   2c3f8:	ldr	r7, [sp, #8]
   2c3fc:	b	2b7a8 <main@@Base+0x15718>
   2c400:	add	r0, r0, #1
   2c404:	uxtb	r1, r0
   2c408:	cmp	r1, #12
   2c40c:	movhi	r0, #0
   2c410:	bxhi	lr
   2c414:	movw	r1, #28736	; 0x7040
   2c418:	sxtb	r0, r0
   2c41c:	movt	r1, #4
   2c420:	ldr	r0, [r1, r0, lsl #2]
   2c424:	bx	lr
   2c428:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2c42c:	add	fp, sp, #28
   2c430:	sub	sp, sp, #36	; 0x24
   2c434:	mov	r9, r0
   2c438:	mov	r0, #0
   2c43c:	mov	sl, r2
   2c440:	mov	r6, r1
   2c444:	mov	r1, #4
   2c448:	mov	r2, #4
   2c44c:	str	r3, [sp, #12]
   2c450:	str	r0, [r3]
   2c454:	ldr	r0, [r9]
   2c458:	bl	2eb30 <flatcc_builder_start_struct@@Base>
   2c45c:	cmp	r0, #0
   2c460:	beq	2c4e4 <main@@Base+0x16454>
   2c464:	cmp	r6, sl
   2c468:	beq	2c4a0 <main@@Base+0x16410>
   2c46c:	ldrb	r1, [r6]
   2c470:	cmp	r1, #123	; 0x7b
   2c474:	bne	2c4a0 <main@@Base+0x16410>
   2c478:	add	r1, r6, #1
   2c47c:	str	r0, [sp, #8]
   2c480:	sub	r0, sl, r1
   2c484:	cmp	r0, #2
   2c488:	blt	2c518 <main@@Base+0x16488>
   2c48c:	ldrb	r0, [r1]
   2c490:	cmp	r0, #32
   2c494:	bls	2c508 <main@@Base+0x16478>
   2c498:	mov	r6, r1
   2c49c:	b	2c528 <main@@Base+0x16498>
   2c4a0:	mov	r0, r9
   2c4a4:	mov	r1, r6
   2c4a8:	mov	r2, sl
   2c4ac:	mov	r3, #21
   2c4b0:	bl	337ac <flatcc_json_parser_set_error@@Base>
   2c4b4:	mov	r6, r0
   2c4b8:	cmp	r6, sl
   2c4bc:	mov	r1, sl
   2c4c0:	beq	2c4e8 <main@@Base+0x16458>
   2c4c4:	ldr	r0, [r9]
   2c4c8:	bl	2ebd0 <flatcc_builder_end_struct@@Base>
   2c4cc:	ldr	r1, [sp, #12]
   2c4d0:	cmp	r0, #0
   2c4d4:	str	r0, [r1]
   2c4d8:	mov	r1, r6
   2c4dc:	bne	2c4fc <main@@Base+0x1646c>
   2c4e0:	b	2c4e8 <main@@Base+0x16458>
   2c4e4:	mov	r1, r6
   2c4e8:	mov	r0, r9
   2c4ec:	mov	r2, sl
   2c4f0:	mov	r3, #33	; 0x21
   2c4f4:	bl	337ac <flatcc_json_parser_set_error@@Base>
   2c4f8:	mov	r6, r0
   2c4fc:	mov	r0, r6
   2c500:	sub	sp, fp, #28
   2c504:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c508:	bne	2c518 <main@@Base+0x16488>
   2c50c:	ldrb	r0, [r6, #2]!
   2c510:	cmp	r0, #32
   2c514:	bhi	2c528 <main@@Base+0x16498>
   2c518:	mov	r0, r9
   2c51c:	mov	r2, sl
   2c520:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   2c524:	mov	r6, r0
   2c528:	cmp	r6, sl
   2c52c:	mov	r2, sl
   2c530:	beq	2c574 <main@@Base+0x164e4>
   2c534:	ldrb	r0, [r6]
   2c538:	cmp	r0, #125	; 0x7d
   2c53c:	bne	2c570 <main@@Base+0x164e0>
   2c540:	add	r1, r6, #1
   2c544:	sub	r0, sl, r1
   2c548:	cmp	r0, #2
   2c54c:	blt	2ca38 <main@@Base+0x169a8>
   2c550:	ldrb	r0, [r1]
   2c554:	cmp	r0, #32
   2c558:	bhi	2c9fc <main@@Base+0x1696c>
   2c55c:	bne	2ca38 <main@@Base+0x169a8>
   2c560:	ldrb	r0, [r6, #2]!
   2c564:	cmp	r0, #32
   2c568:	bhi	2c4b8 <main@@Base+0x16428>
   2c56c:	b	2ca38 <main@@Base+0x169a8>
   2c570:	mov	r2, r6
   2c574:	cmp	r2, sl
   2c578:	mov	r1, sl
   2c57c:	beq	2c5c8 <main@@Base+0x16538>
   2c580:	ldrb	r0, [r2]
   2c584:	cmp	r0, #46	; 0x2e
   2c588:	beq	2c5a0 <main@@Base+0x16510>
   2c58c:	cmp	r0, #34	; 0x22
   2c590:	bne	2c5bc <main@@Base+0x1652c>
   2c594:	mov	r0, #0
   2c598:	add	r1, r2, #1
   2c59c:	b	2c5c4 <main@@Base+0x16534>
   2c5a0:	mov	r1, r2
   2c5a4:	mov	r0, r9
   2c5a8:	mov	r2, sl
   2c5ac:	mov	r3, #5
   2c5b0:	bl	337ac <flatcc_json_parser_set_error@@Base>
   2c5b4:	mov	r1, r0
   2c5b8:	b	2c5c8 <main@@Base+0x16538>
   2c5bc:	mov	r0, #1
   2c5c0:	mov	r1, r2
   2c5c4:	str	r0, [r9, #12]
   2c5c8:	sub	r0, sl, r1
   2c5cc:	mov	r2, #8
   2c5d0:	cmp	r0, #8
   2c5d4:	movcs	r0, r2
   2c5d8:	and	r0, r0, #15
   2c5dc:	sub	r6, r0, #1
   2c5e0:	cmp	r6, #7
   2c5e4:	bhi	2c720 <main@@Base+0x16690>
   2c5e8:	add	r0, pc, #32
   2c5ec:	mov	r8, #0
   2c5f0:	mov	ip, #0
   2c5f4:	mov	lr, #0
   2c5f8:	mov	r7, #0
   2c5fc:	mov	r3, #0
   2c600:	mov	r5, #0
   2c604:	mov	r2, #0
   2c608:	mov	r4, #0
   2c60c:	ldr	pc, [r0, r6, lsl #2]
   2c610:	andeq	ip, r2, r4, ror r6
   2c614:	andeq	ip, r2, ip, ror #12
   2c618:	andeq	ip, r2, r4, ror #12
   2c61c:	andeq	ip, r2, ip, asr r6
   2c620:	andeq	ip, r2, r0, asr r6
   2c624:	andeq	ip, r2, r4, asr #12
   2c628:	andeq	ip, r2, r4, lsr r6
   2c62c:	andeq	ip, r2, r0, lsr r6
   2c630:	ldrb	ip, [r1, #7]
   2c634:	ldrb	r0, [r1, #6]
   2c638:	mov	lr, r8
   2c63c:	orr	r0, ip, r0, lsl #8
   2c640:	mov	r8, r0
   2c644:	ldrb	r0, [r1, #5]
   2c648:	mov	r7, lr
   2c64c:	orr	r8, r8, r0, lsl #16
   2c650:	ldrb	r0, [r1, #4]
   2c654:	mov	r3, r7
   2c658:	orr	r8, r8, r0, lsl #24
   2c65c:	ldrb	r0, [r1, #3]
   2c660:	orr	r5, r0, r3
   2c664:	ldrb	r0, [r1, #2]
   2c668:	orr	r2, r5, r0, lsl #8
   2c66c:	ldrb	r0, [r1, #1]
   2c670:	orr	r4, r2, r0, lsl #16
   2c674:	ldrb	r2, [r1]
   2c678:	movw	r0, #29285	; 0x7265
   2c67c:	movw	r3, #28523	; 0x6f6b
   2c680:	movt	r0, #29535	; 0x735f
   2c684:	movt	r3, #25199	; 0x626f
   2c688:	eor	r0, r8, r0
   2c68c:	orr	r2, r4, r2, lsl #24
   2c690:	eor	r2, r2, r3
   2c694:	orrs	r0, r0, r2
   2c698:	bne	2c720 <main@@Base+0x16690>
   2c69c:	add	r8, r1, #8
   2c6a0:	mov	r2, #8
   2c6a4:	sub	r0, sl, r8
   2c6a8:	cmp	r0, #8
   2c6ac:	movcc	r2, r0
   2c6b0:	and	r3, r2, #15
   2c6b4:	sub	r2, r3, #2
   2c6b8:	cmp	r2, #7
   2c6bc:	bcs	2c728 <main@@Base+0x16698>
   2c6c0:	ldrb	r2, [r1, #9]
   2c6c4:	lsl	r3, r2, #16
   2c6c8:	mov	r2, #0
   2c6cc:	ldrb	r7, [r8]
   2c6d0:	orr	r3, r3, r7, lsl #24
   2c6d4:	movw	r7, #0
   2c6d8:	movt	r7, #24932	; 0x6164
   2c6dc:	eor	r3, r3, r7
   2c6e0:	orrs	r2, r2, r3
   2c6e4:	bne	2c87c <main@@Base+0x167ec>
   2c6e8:	cmp	r0, #3
   2c6ec:	blt	2c87c <main@@Base+0x167ec>
   2c6f0:	mov	r2, r1
   2c6f4:	ldr	r3, [r9, #12]
   2c6f8:	ldrb	r0, [r2, #10]!
   2c6fc:	cmp	r3, #0
   2c700:	beq	2c73c <main@@Base+0x166ac>
   2c704:	cmp	r0, #33	; 0x21
   2c708:	bcc	2c714 <main@@Base+0x16684>
   2c70c:	cmp	r0, #58	; 0x3a
   2c710:	bne	2c87c <main@@Base+0x167ec>
   2c714:	mov	r0, #0
   2c718:	str	r0, [r9, #12]
   2c71c:	b	2c748 <main@@Base+0x166b8>
   2c720:	mov	r0, r9
   2c724:	b	2c884 <main@@Base+0x167f4>
   2c728:	cmp	r3, #1
   2c72c:	mov	r2, #0
   2c730:	mov	r3, #0
   2c734:	beq	2c6cc <main@@Base+0x1663c>
   2c738:	b	2c87c <main@@Base+0x167ec>
   2c73c:	cmp	r0, #34	; 0x22
   2c740:	bne	2c87c <main@@Base+0x167ec>
   2c744:	add	r2, r1, #11
   2c748:	sub	r0, sl, r2
   2c74c:	cmp	r0, #2
   2c750:	blt	2c77c <main@@Base+0x166ec>
   2c754:	ldrb	r0, [r2]
   2c758:	cmp	r0, #32
   2c75c:	bls	2c768 <main@@Base+0x166d8>
   2c760:	mov	r7, r2
   2c764:	b	2c790 <main@@Base+0x16700>
   2c768:	bne	2c77c <main@@Base+0x166ec>
   2c76c:	mov	r7, r2
   2c770:	ldrb	r0, [r7, #1]!
   2c774:	cmp	r0, #32
   2c778:	bhi	2c790 <main@@Base+0x16700>
   2c77c:	mov	r1, r2
   2c780:	mov	r0, r9
   2c784:	mov	r2, sl
   2c788:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   2c78c:	mov	r7, r0
   2c790:	cmp	r7, sl
   2c794:	beq	2c7c8 <main@@Base+0x16738>
   2c798:	ldrb	r0, [r7]
   2c79c:	cmp	r0, #58	; 0x3a
   2c7a0:	bne	2c7c8 <main@@Base+0x16738>
   2c7a4:	add	r1, r7, #1
   2c7a8:	sub	r0, sl, r1
   2c7ac:	cmp	r0, #2
   2c7b0:	blt	2c7f0 <main@@Base+0x16760>
   2c7b4:	ldrb	r0, [r1]
   2c7b8:	cmp	r0, #32
   2c7bc:	bls	2c7e0 <main@@Base+0x16750>
   2c7c0:	mov	r7, r1
   2c7c4:	b	2c800 <main@@Base+0x16770>
   2c7c8:	mov	r0, r9
   2c7cc:	mov	r1, r7
   2c7d0:	mov	r2, sl
   2c7d4:	mov	r3, #4
   2c7d8:	bl	337ac <flatcc_json_parser_set_error@@Base>
   2c7dc:	b	2c7fc <main@@Base+0x1676c>
   2c7e0:	bne	2c7f0 <main@@Base+0x16760>
   2c7e4:	ldrb	r0, [r7, #2]!
   2c7e8:	cmp	r0, #32
   2c7ec:	bhi	2c800 <main@@Base+0x16770>
   2c7f0:	mov	r0, r9
   2c7f4:	mov	r2, sl
   2c7f8:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   2c7fc:	mov	r7, r0
   2c800:	cmp	r8, r7
   2c804:	beq	2c87c <main@@Base+0x167ec>
   2c808:	mov	r6, #0
   2c80c:	cmp	r7, sl
   2c810:	str	r6, [sp, #28]
   2c814:	str	r6, [sp, #24]
   2c818:	str	r6, [sp, #16]
   2c81c:	str	r6, [sp, #20]
   2c820:	beq	2c944 <main@@Base+0x168b4>
   2c824:	add	r0, sp, #24
   2c828:	mov	r1, r7
   2c82c:	mov	r2, sl
   2c830:	add	r3, sp, #20
   2c834:	str	r0, [sp]
   2c838:	mov	r0, r9
   2c83c:	bl	356c0 <flatcc_json_parser_integer@@Base>
   2c840:	cmp	r0, r7
   2c844:	beq	2c94c <main@@Base+0x168bc>
   2c848:	ldr	r3, [sp, #20]
   2c84c:	mov	r1, r0
   2c850:	ldr	r0, [sp, #24]
   2c854:	ldr	r2, [sp, #28]
   2c858:	cmp	r3, #0
   2c85c:	beq	2c954 <main@@Base+0x168c4>
   2c860:	subs	r3, r0, #-2147483647	; 0x80000001
   2c864:	sbcs	r2, r2, #0
   2c868:	bcc	2c978 <main@@Base+0x168e8>
   2c86c:	mov	r0, r9
   2c870:	mov	r2, sl
   2c874:	mov	r3, #8
   2c878:	b	2c96c <main@@Base+0x168dc>
   2c87c:	mov	r0, r9
   2c880:	mov	r1, r8
   2c884:	mov	r2, sl
   2c888:	bl	33ecc <flatcc_json_parser_unmatched_symbol@@Base>
   2c88c:	mov	r1, r0
   2c890:	sub	r0, sl, r1
   2c894:	cmp	r0, #2
   2c898:	blt	2c8c4 <main@@Base+0x16834>
   2c89c:	ldrb	r0, [r1]
   2c8a0:	cmp	r0, #32
   2c8a4:	bls	2c8b0 <main@@Base+0x16820>
   2c8a8:	mov	r2, r1
   2c8ac:	b	2c8d4 <main@@Base+0x16844>
   2c8b0:	bne	2c8c4 <main@@Base+0x16834>
   2c8b4:	mov	r2, r1
   2c8b8:	ldrb	r0, [r2, #1]!
   2c8bc:	cmp	r0, #32
   2c8c0:	bhi	2c8d4 <main@@Base+0x16844>
   2c8c4:	mov	r0, r9
   2c8c8:	mov	r2, sl
   2c8cc:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   2c8d0:	mov	r2, r0
   2c8d4:	cmp	r2, sl
   2c8d8:	beq	2c9d0 <main@@Base+0x16940>
   2c8dc:	ldrb	r0, [r2]
   2c8e0:	cmp	r0, #44	; 0x2c
   2c8e4:	bne	2c9d8 <main@@Base+0x16948>
   2c8e8:	add	r1, r2, #1
   2c8ec:	sub	r0, sl, r1
   2c8f0:	cmp	r0, #2
   2c8f4:	blt	2c91c <main@@Base+0x1688c>
   2c8f8:	ldrb	r0, [r1]
   2c8fc:	cmp	r0, #32
   2c900:	bls	2c90c <main@@Base+0x1687c>
   2c904:	mov	r2, r1
   2c908:	b	2c92c <main@@Base+0x1689c>
   2c90c:	bne	2c91c <main@@Base+0x1688c>
   2c910:	ldrb	r0, [r2, #2]!
   2c914:	cmp	r0, #32
   2c918:	bhi	2c92c <main@@Base+0x1689c>
   2c91c:	mov	r0, r9
   2c920:	mov	r2, sl
   2c924:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   2c928:	mov	r2, r0
   2c92c:	cmp	r2, sl
   2c930:	beq	2ca04 <main@@Base+0x16974>
   2c934:	ldrb	r0, [r2]
   2c938:	cmp	r0, #125	; 0x7d
   2c93c:	bne	2c574 <main@@Base+0x164e4>
   2c940:	b	2c9e0 <main@@Base+0x16950>
   2c944:	mov	r1, sl
   2c948:	b	2c988 <main@@Base+0x168f8>
   2c94c:	mov	r1, r7
   2c950:	b	2c988 <main@@Base+0x168f8>
   2c954:	subs	r3, r0, #-2147483648	; 0x80000000
   2c958:	sbcs	r2, r2, #0
   2c95c:	bcc	2c980 <main@@Base+0x168f0>
   2c960:	mov	r0, r9
   2c964:	mov	r2, sl
   2c968:	mov	r3, #7
   2c96c:	bl	337ac <flatcc_json_parser_set_error@@Base>
   2c970:	mov	r1, r0
   2c974:	b	2c988 <main@@Base+0x168f8>
   2c978:	rsb	r6, r0, #0
   2c97c:	b	2c984 <main@@Base+0x168f4>
   2c980:	mov	r6, r0
   2c984:	str	r6, [sp, #16]
   2c988:	cmp	r7, r1
   2c98c:	bne	2c9c4 <main@@Base+0x16934>
   2c990:	movw	r3, #45832	; 0xb308
   2c994:	add	r0, sp, #16
   2c998:	mov	r1, r7
   2c99c:	mov	r2, sl
   2c9a0:	str	r0, [sp]
   2c9a4:	mov	r0, r9
   2c9a8:	movt	r3, #5
   2c9ac:	bl	24cd4 <main@@Base+0xec44>
   2c9b0:	mov	r1, r0
   2c9b4:	cmp	r0, r7
   2c9b8:	cmpne	r1, sl
   2c9bc:	beq	2ca48 <main@@Base+0x169b8>
   2c9c0:	ldr	r6, [sp, #16]
   2c9c4:	ldr	r0, [sp, #8]
   2c9c8:	str	r6, [r0]
   2c9cc:	b	2c890 <main@@Base+0x16800>
   2c9d0:	mov	r1, sl
   2c9d4:	b	2c4e8 <main@@Base+0x16458>
   2c9d8:	cmp	r0, #125	; 0x7d
   2c9dc:	bne	2ca10 <main@@Base+0x16980>
   2c9e0:	add	r1, r2, #1
   2c9e4:	sub	r0, sl, r1
   2c9e8:	cmp	r0, #2
   2c9ec:	blt	2ca38 <main@@Base+0x169a8>
   2c9f0:	ldrb	r0, [r1]
   2c9f4:	cmp	r0, #32
   2c9f8:	bls	2ca24 <main@@Base+0x16994>
   2c9fc:	mov	r6, r1
   2ca00:	b	2c4b8 <main@@Base+0x16428>
   2ca04:	mov	r0, r9
   2ca08:	mov	r1, sl
   2ca0c:	b	2ca18 <main@@Base+0x16988>
   2ca10:	mov	r0, r9
   2ca14:	mov	r1, r2
   2ca18:	mov	r2, sl
   2ca1c:	mov	r3, #10
   2ca20:	b	2c4b0 <main@@Base+0x16420>
   2ca24:	bne	2ca38 <main@@Base+0x169a8>
   2ca28:	ldrb	r0, [r2, #2]!
   2ca2c:	cmp	r0, #32
   2ca30:	mov	r6, r2
   2ca34:	bhi	2c4b8 <main@@Base+0x16428>
   2ca38:	mov	r0, r9
   2ca3c:	mov	r2, sl
   2ca40:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   2ca44:	b	2c4b4 <main@@Base+0x16424>
   2ca48:	mov	r0, r9
   2ca4c:	mov	r2, sl
   2ca50:	mov	r3, #33	; 0x21
   2ca54:	b	2c4b0 <main@@Base+0x16420>
   2ca58:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2ca5c:	add	fp, sp, #28
   2ca60:	sub	sp, sp, #44	; 0x2c
   2ca64:	mov	r6, r2
   2ca68:	ldr	r2, [fp, #8]
   2ca6c:	mov	r5, r0
   2ca70:	mov	r0, #0
   2ca74:	mov	r8, r3
   2ca78:	cmp	r1, r6
   2ca7c:	strh	r0, [r2]
   2ca80:	beq	2cac4 <main@@Base+0x16a34>
   2ca84:	ldrb	r0, [r1]
   2ca88:	cmp	r0, #46	; 0x2e
   2ca8c:	beq	2caa4 <main@@Base+0x16a14>
   2ca90:	cmp	r0, #34	; 0x22
   2ca94:	bne	2cabc <main@@Base+0x16a2c>
   2ca98:	mov	r0, #0
   2ca9c:	add	r1, r1, #1
   2caa0:	b	2cac0 <main@@Base+0x16a30>
   2caa4:	mov	r0, r5
   2caa8:	mov	r2, r6
   2caac:	mov	r3, #5
   2cab0:	bl	337ac <flatcc_json_parser_set_error@@Base>
   2cab4:	mov	r1, r0
   2cab8:	b	2cac4 <main@@Base+0x16a34>
   2cabc:	mov	r0, #1
   2cac0:	str	r0, [r5, #12]
   2cac4:	ldr	r0, [r5, #12]
   2cac8:	cmp	r0, #0
   2cacc:	beq	2cad8 <main@@Base+0x16a48>
   2cad0:	mov	r7, r1
   2cad4:	b	2cb14 <main@@Base+0x16a84>
   2cad8:	sub	r0, r6, r1
   2cadc:	cmp	r0, #2
   2cae0:	blt	2cb04 <main@@Base+0x16a74>
   2cae4:	ldrb	r0, [r1]
   2cae8:	cmp	r0, #32
   2caec:	bhi	2cad0 <main@@Base+0x16a40>
   2caf0:	bne	2cb04 <main@@Base+0x16a74>
   2caf4:	mov	r7, r1
   2caf8:	ldrb	r0, [r7, #1]!
   2cafc:	cmp	r0, #32
   2cb00:	bhi	2cb14 <main@@Base+0x16a84>
   2cb04:	mov	r0, r5
   2cb08:	mov	r2, r6
   2cb0c:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   2cb10:	mov	r7, r0
   2cb14:	cmp	r7, r6
   2cb18:	beq	2cc1c <main@@Base+0x16b8c>
   2cb1c:	add	r0, r8, #4
   2cb20:	mov	r1, #0
   2cb24:	add	sl, sp, #32
   2cb28:	add	r9, sp, #28
   2cb2c:	str	r8, [sp, #16]
   2cb30:	str	r1, [sp, #20]
   2cb34:	str	r0, [sp, #12]
   2cb38:	ldr	r4, [r8]
   2cb3c:	mov	r8, r0
   2cb40:	add	r0, sp, #24
   2cb44:	mov	r1, r7
   2cb48:	mov	r2, r6
   2cb4c:	mov	r3, r9
   2cb50:	str	sl, [sp]
   2cb54:	str	r0, [sp, #4]
   2cb58:	mov	r0, r5
   2cb5c:	blx	r4
   2cb60:	cmp	r0, r6
   2cb64:	beq	2cc1c <main@@Base+0x16b8c>
   2cb68:	mov	r4, r0
   2cb6c:	cmp	r0, r7
   2cb70:	bne	2cb84 <main@@Base+0x16af4>
   2cb74:	ldr	r4, [r8], #4
   2cb78:	cmp	r4, #0
   2cb7c:	bne	2cb40 <main@@Base+0x16ab0>
   2cb80:	b	2cc24 <main@@Base+0x16b94>
   2cb84:	ldr	r0, [sp, #28]
   2cb88:	cmp	r0, #0
   2cb8c:	beq	2cbac <main@@Base+0x16b1c>
   2cb90:	mov	r0, r5
   2cb94:	mov	r1, r4
   2cb98:	mov	r2, r6
   2cb9c:	mov	r3, #8
   2cba0:	bl	337ac <flatcc_json_parser_set_error@@Base>
   2cba4:	ldr	r8, [sp, #16]
   2cba8:	b	2cbe4 <main@@Base+0x16b54>
   2cbac:	ldr	r0, [sp, #32]
   2cbb0:	ldr	r1, [sp, #36]	; 0x24
   2cbb4:	ldr	r8, [sp, #16]
   2cbb8:	subs	r2, r0, #65536	; 0x10000
   2cbbc:	sbcs	r1, r1, #0
   2cbc0:	bcc	2cbdc <main@@Base+0x16b4c>
   2cbc4:	mov	r0, r5
   2cbc8:	mov	r1, r4
   2cbcc:	mov	r2, r6
   2cbd0:	mov	r3, #7
   2cbd4:	bl	337ac <flatcc_json_parser_set_error@@Base>
   2cbd8:	b	2cbe4 <main@@Base+0x16b54>
   2cbdc:	str	r0, [sp, #20]
   2cbe0:	mov	r0, r4
   2cbe4:	cmp	r0, r6
   2cbe8:	beq	2cc1c <main@@Base+0x16b8c>
   2cbec:	ldr	r0, [fp, #8]
   2cbf0:	ldr	r2, [sp, #20]
   2cbf4:	mov	r7, r4
   2cbf8:	mov	r1, r0
   2cbfc:	ldrh	r0, [r0]
   2cc00:	add	r0, r0, r2
   2cc04:	strh	r0, [r1]
   2cc08:	ldr	r0, [sp, #24]
   2cc0c:	cmp	r0, #0
   2cc10:	ldr	r0, [sp, #12]
   2cc14:	bne	2cb38 <main@@Base+0x16aa8>
   2cc18:	b	2cc3c <main@@Base+0x16bac>
   2cc1c:	mov	r4, r6
   2cc20:	b	2cc3c <main@@Base+0x16bac>
   2cc24:	mov	r0, r5
   2cc28:	mov	r1, r7
   2cc2c:	mov	r2, r6
   2cc30:	mov	r3, #23
   2cc34:	bl	337ac <flatcc_json_parser_set_error@@Base>
   2cc38:	mov	r4, r0
   2cc3c:	mov	r0, r4
   2cc40:	sub	sp, fp, #28
   2cc44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2cc48:	push	{r4, r5, r6, sl, fp, lr}
   2cc4c:	add	fp, sp, #16
   2cc50:	sub	sp, sp, #16
   2cc54:	mov	r5, r0
   2cc58:	movw	r0, #27751	; 0x6c67
   2cc5c:	mov	r4, r1
   2cc60:	mov	r6, #1
   2cc64:	mov	r1, #0
   2cc68:	mov	r3, #0
   2cc6c:	movt	r0, #4
   2cc70:	mov	r2, r4
   2cc74:	stm	sp, {r0, r6}
   2cc78:	mov	r0, r5
   2cc7c:	bl	3a648 <flatcc_json_printer_float_struct_field@@Base>
   2cc80:	movw	r0, #37695	; 0x933f
   2cc84:	mov	r1, #1
   2cc88:	mov	r2, r4
   2cc8c:	mov	r3, #4
   2cc90:	movt	r0, #4
   2cc94:	stm	sp, {r0, r6}
   2cc98:	mov	r0, r5
   2cc9c:	bl	3a648 <flatcc_json_printer_float_struct_field@@Base>
   2cca0:	movw	r0, #28192	; 0x6e20
   2cca4:	mov	r1, #2
   2cca8:	mov	r2, r4
   2ccac:	mov	r3, #8
   2ccb0:	movt	r0, #4
   2ccb4:	stm	sp, {r0, r6}
   2ccb8:	mov	r0, r5
   2ccbc:	bl	3a648 <flatcc_json_printer_float_struct_field@@Base>
   2ccc0:	movw	r0, #28194	; 0x6e22
   2ccc4:	mov	r6, #5
   2ccc8:	mov	r1, #3
   2cccc:	mov	r2, r4
   2ccd0:	mov	r3, #16
   2ccd4:	movt	r0, #4
   2ccd8:	stm	sp, {r0, r6}
   2ccdc:	mov	r0, r5
   2cce0:	bl	3a6ac <flatcc_json_printer_double_struct_field@@Base>
   2cce4:	movw	r0, #52548	; 0xcd44
   2cce8:	movw	r1, #28200	; 0x6e28
   2ccec:	mov	r2, r4
   2ccf0:	mov	r3, #24
   2ccf4:	movt	r1, #4
   2ccf8:	movt	r0, #2
   2ccfc:	stm	sp, {r1, r6}
   2cd00:	str	r0, [sp, #8]
   2cd04:	mov	r0, r5
   2cd08:	mov	r1, #4
   2cd0c:	bl	3a900 <flatcc_json_printer_int8_enum_struct_field@@Base>
   2cd10:	movw	r0, #52948	; 0xced4
   2cd14:	movw	r1, #28206	; 0x6e2e
   2cd18:	mov	r2, r4
   2cd1c:	mov	r3, #26
   2cd20:	movt	r1, #4
   2cd24:	movt	r0, #2
   2cd28:	stm	sp, {r1, r6}
   2cd2c:	str	r0, [sp, #8]
   2cd30:	mov	r0, r5
   2cd34:	mov	r1, #5
   2cd38:	bl	418d4 <flatcc_json_printer_embedded_struct_field@@Base>
   2cd3c:	sub	sp, fp, #16
   2cd40:	pop	{r4, r5, r6, sl, fp, pc}
   2cd44:	push	{r4, r5, r6, r7, fp, lr}
   2cd48:	add	fp, sp, #16
   2cd4c:	mov	r4, r0
   2cd50:	mvn	r0, #0
   2cd54:	uxtb	r7, r1
   2cd58:	uxtab	r0, r0, r1
   2cd5c:	ands	r5, r0, r7
   2cd60:	movwne	r5, #1
   2cd64:	cmp	r1, #0
   2cd68:	beq	2cdfc <main@@Base+0x16d6c>
   2cd6c:	ands	r0, r1, #244	; 0xf4
   2cd70:	bne	2cdfc <main@@Base+0x16d6c>
   2cd74:	mov	r0, r4
   2cd78:	mov	r1, r5
   2cd7c:	bl	38ac8 <flatcc_json_printer_delimit_enum_flags@@Base>
   2cd80:	mov	r6, #0
   2cd84:	tst	r7, #1
   2cd88:	beq	2cda8 <main@@Base+0x16d18>
   2cd8c:	movw	r2, #28212	; 0x6e34
   2cd90:	mov	r0, r4
   2cd94:	mov	r1, #0
   2cd98:	mov	r3, #3
   2cd9c:	movt	r2, #4
   2cda0:	bl	38afc <flatcc_json_printer_enum_flag@@Base>
   2cda4:	mov	r6, #1
   2cda8:	tst	r7, #2
   2cdac:	beq	2cdcc <main@@Base+0x16d3c>
   2cdb0:	movw	r2, #28216	; 0x6e38
   2cdb4:	mov	r0, r4
   2cdb8:	mov	r1, r6
   2cdbc:	mov	r3, #5
   2cdc0:	movt	r2, #4
   2cdc4:	bl	38afc <flatcc_json_printer_enum_flag@@Base>
   2cdc8:	add	r6, r6, #1
   2cdcc:	tst	r7, #8
   2cdd0:	beq	2cdec <main@@Base+0x16d5c>
   2cdd4:	movw	r2, #28222	; 0x6e3e
   2cdd8:	mov	r0, r4
   2cddc:	mov	r1, r6
   2cde0:	mov	r3, #4
   2cde4:	movt	r2, #4
   2cde8:	bl	38afc <flatcc_json_printer_enum_flag@@Base>
   2cdec:	mov	r0, r4
   2cdf0:	mov	r1, r5
   2cdf4:	pop	{r4, r5, r6, r7, fp, lr}
   2cdf8:	b	38ac8 <flatcc_json_printer_delimit_enum_flags@@Base>
   2cdfc:	mov	r0, r4
   2ce00:	pop	{r4, r5, r6, r7, fp, lr}
   2ce04:	b	38874 <flatcc_json_printer_int8@@Base>
   2ce08:	sub	r1, r1, #1
   2ce0c:	cmp	r1, #3
   2ce10:	bhi	2ce3c <main@@Base+0x16dac>
   2ce14:	add	r2, pc, #0
   2ce18:	ldr	pc, [r2, r1, lsl #2]
   2ce1c:	andeq	ip, r2, ip, lsr #28
   2ce20:	andeq	ip, r2, ip, asr #28
   2ce24:	andeq	ip, r2, ip, asr lr
   2ce28:	andeq	ip, r2, ip, ror #28
   2ce2c:	movw	r1, #28227	; 0x6e43
   2ce30:	mov	r2, #7
   2ce34:	movt	r1, #4
   2ce38:	b	389dc <flatcc_json_printer_enum@@Base>
   2ce3c:	movw	r1, #34676	; 0x8774
   2ce40:	mov	r2, #4
   2ce44:	movt	r1, #4
   2ce48:	b	389dc <flatcc_json_printer_enum@@Base>
   2ce4c:	movw	r1, #28235	; 0x6e4b
   2ce50:	mov	r2, #23
   2ce54:	movt	r1, #4
   2ce58:	b	389dc <flatcc_json_printer_enum@@Base>
   2ce5c:	movw	r1, #28259	; 0x6e63
   2ce60:	mov	r2, #8
   2ce64:	movt	r1, #4
   2ce68:	b	389dc <flatcc_json_printer_enum@@Base>
   2ce6c:	movw	r1, #28268	; 0x6e6c
   2ce70:	mov	r2, #3
   2ce74:	movt	r1, #4
   2ce78:	b	389dc <flatcc_json_printer_enum@@Base>
   2ce7c:	ldrb	r2, [r1, #8]
   2ce80:	sub	r2, r2, #1
   2ce84:	cmp	r2, #3
   2ce88:	bxhi	lr
   2ce8c:	add	r3, pc, #0
   2ce90:	ldr	pc, [r3, r2, lsl #2]
   2ce94:	andeq	ip, r2, r4, lsr #29
   2ce98:	andeq	ip, r2, r8, asr #29
   2ce9c:			; <UNDEFINED> instruction: 0x0002ceb0
   2cea0:			; <UNDEFINED> instruction: 0x0002cebc
   2cea4:	movw	r2, #2840	; 0xb18
   2cea8:	movt	r2, #2
   2ceac:	b	41630 <flatcc_json_printer_union_table@@Base>
   2ceb0:	movw	r2, #53584	; 0xd150
   2ceb4:	movt	r2, #2
   2ceb8:	b	41630 <flatcc_json_printer_union_table@@Base>
   2cebc:	movw	r2, #53588	; 0xd154
   2cec0:	movt	r2, #2
   2cec4:	b	41630 <flatcc_json_printer_union_table@@Base>
   2cec8:	movw	r2, #53420	; 0xd0ac
   2cecc:	movt	r2, #2
   2ced0:	b	41630 <flatcc_json_printer_union_table@@Base>
   2ced4:	push	{r4, r5, r6, sl, fp, lr}
   2ced8:	add	fp, sp, #16
   2cedc:	sub	sp, sp, #8
   2cee0:	mov	r5, r0
   2cee4:	movw	r0, #27978	; 0x6d4a
   2cee8:	mov	r4, r1
   2ceec:	mov	r6, #1
   2cef0:	mov	r1, #0
   2cef4:	mov	r3, #0
   2cef8:	movt	r0, #4
   2cefc:	mov	r2, r4
   2cf00:	stm	sp, {r0, r6}
   2cf04:	mov	r0, r5
   2cf08:	bl	3a458 <flatcc_json_printer_int16_struct_field@@Base>
   2cf0c:	movw	r0, #28393	; 0x6ee9
   2cf10:	mov	r1, #1
   2cf14:	mov	r2, r4
   2cf18:	mov	r3, #2
   2cf1c:	movt	r0, #4
   2cf20:	stm	sp, {r0, r6}
   2cf24:	mov	r0, r5
   2cf28:	bl	3a3e4 <flatcc_json_printer_int8_struct_field@@Base>
   2cf2c:	sub	sp, fp, #16
   2cf30:	pop	{r4, r5, r6, sl, fp, pc}
   2cf34:	push	{r4, r5, r6, sl, fp, lr}
   2cf38:	add	fp, sp, #16
   2cf3c:	sub	sp, sp, #16
   2cf40:	movw	r3, #28640	; 0x6fe0
   2cf44:	mov	r5, r0
   2cf48:	mov	r0, #2
   2cf4c:	mov	r2, #0
   2cf50:	mov	r4, r1
   2cf54:	mov	r6, #0
   2cf58:	str	r0, [sp]
   2cf5c:	movt	r3, #4
   2cf60:	mov	r0, r5
   2cf64:	bl	38bc8 <flatcc_json_printer_string_field@@Base>
   2cf68:	movw	r3, #28643	; 0x6fe3
   2cf6c:	mov	r0, #3
   2cf70:	mov	r1, r4
   2cf74:	mov	r2, #1
   2cf78:	str	r6, [sp, #8]
   2cf7c:	str	r6, [sp, #12]
   2cf80:	str	r0, [sp]
   2cf84:	movt	r3, #4
   2cf88:	mov	r0, r5
   2cf8c:	bl	395f0 <flatcc_json_printer_int64_field@@Base>
   2cf90:	movw	r3, #30928	; 0x78d0
   2cf94:	mov	r0, #5
   2cf98:	mov	r1, r4
   2cf9c:	mov	r2, #2
   2cfa0:	stm	sp, {r0, r6}
   2cfa4:	movt	r3, #4
   2cfa8:	mov	r0, r5
   2cfac:	bl	390fc <flatcc_json_printer_uint16_field@@Base>
   2cfb0:	sub	sp, fp, #16
   2cfb4:	pop	{r4, r5, r6, sl, fp, pc}
   2cfb8:	push	{r4, r5, fp, lr}
   2cfbc:	add	fp, sp, #8
   2cfc0:	sub	sp, sp, #8
   2cfc4:	mov	r4, r1
   2cfc8:	movw	r1, #28640	; 0x6fe0
   2cfcc:	mov	r5, r0
   2cfd0:	mov	r0, #2
   2cfd4:	mov	r3, #0
   2cfd8:	movt	r1, #4
   2cfdc:	str	r0, [sp, #4]
   2cfe0:	mov	r0, r5
   2cfe4:	mov	r2, r4
   2cfe8:	str	r1, [sp]
   2cfec:	mov	r1, #0
   2cff0:	bl	3a32c <flatcc_json_printer_uint32_struct_field@@Base>
   2cff4:	movw	r1, #28647	; 0x6fe7
   2cff8:	mov	r0, #8
   2cffc:	mov	r2, r4
   2d000:	mov	r3, #4
   2d004:	movt	r1, #4
   2d008:	str	r0, [sp, #4]
   2d00c:	mov	r0, r5
   2d010:	str	r1, [sp]
   2d014:	mov	r1, #1
   2d018:	bl	3a32c <flatcc_json_printer_uint32_struct_field@@Base>
   2d01c:	sub	sp, fp, #8
   2d020:	pop	{r4, r5, fp, pc}
   2d024:	bx	lr
   2d028:	push	{r4, r5, r6, sl, fp, lr}
   2d02c:	add	fp, sp, #16
   2d030:	sub	sp, sp, #8
   2d034:	movw	r3, #28659	; 0x6ff3
   2d038:	mov	r5, r0
   2d03c:	mov	r6, #0
   2d040:	mov	r0, #4
   2d044:	mov	r2, #0
   2d048:	mov	r4, r1
   2d04c:	stm	sp, {r0, r6}
   2d050:	movt	r3, #4
   2d054:	mov	r0, r5
   2d058:	bl	38e58 <flatcc_json_printer_uint8_vector_base64_field@@Base>
   2d05c:	movw	r3, #28656	; 0x6ff0
   2d060:	mov	r0, #1
   2d064:	mov	r1, #7
   2d068:	mov	r2, #1
   2d06c:	str	r1, [sp]
   2d070:	str	r0, [sp, #4]
   2d074:	movt	r3, #4
   2d078:	mov	r0, r5
   2d07c:	mov	r1, r4
   2d080:	bl	38e58 <flatcc_json_printer_uint8_vector_base64_field@@Base>
   2d084:	movw	r3, #28664	; 0x6ff8
   2d088:	mov	r0, #6
   2d08c:	mov	r1, r4
   2d090:	mov	r2, #2
   2d094:	stm	sp, {r0, r6}
   2d098:	movt	r3, #4
   2d09c:	mov	r0, r5
   2d0a0:	bl	38e58 <flatcc_json_printer_uint8_vector_base64_field@@Base>
   2d0a4:	sub	sp, fp, #16
   2d0a8:	pop	{r4, r5, r6, sl, fp, pc}
   2d0ac:	push	{r4, r5, r6, r7, fp, lr}
   2d0b0:	add	fp, sp, #16
   2d0b4:	sub	sp, sp, #16
   2d0b8:	movw	r7, #52548	; 0xcd44
   2d0bc:	movw	r3, #27800	; 0x6c98
   2d0c0:	mov	r5, r0
   2d0c4:	mov	r6, #2
   2d0c8:	mov	r0, #5
   2d0cc:	mov	r2, #0
   2d0d0:	mov	r4, r1
   2d0d4:	movt	r7, #2
   2d0d8:	movt	r3, #4
   2d0dc:	stm	sp, {r0, r6, r7}
   2d0e0:	mov	r0, r5
   2d0e4:	bl	39d2c <flatcc_json_printer_int8_enum_field@@Base>
   2d0e8:	movw	r3, #28272	; 0x6e70
   2d0ec:	mov	r0, #6
   2d0f0:	mov	r1, r4
   2d0f4:	mov	r2, #1
   2d0f8:	stm	sp, {r0, r6, r7}
   2d0fc:	movt	r3, #4
   2d100:	mov	r0, r5
   2d104:	bl	39d2c <flatcc_json_printer_int8_enum_field@@Base>
   2d108:	movw	r3, #28279	; 0x6e77
   2d10c:	mov	r0, r5
   2d110:	mov	r1, r4
   2d114:	mov	r2, #2
   2d118:	str	r6, [sp]
   2d11c:	str	r6, [sp, #4]
   2d120:	movt	r3, #4
   2d124:	bl	3903c <flatcc_json_printer_uint8_field@@Base>
   2d128:	movw	r3, #28282	; 0x6e7a
   2d12c:	mov	r0, #3
   2d130:	mov	r1, r4
   2d134:	mov	r2, #3
   2d138:	stm	sp, {r0, r6}
   2d13c:	movt	r3, #4
   2d140:	mov	r0, r5
   2d144:	bl	3903c <flatcc_json_printer_uint8_field@@Base>
   2d148:	sub	sp, fp, #16
   2d14c:	pop	{r4, r5, r6, r7, fp, pc}
   2d150:	bx	lr
   2d154:	push	{r4, r5, fp, lr}
   2d158:	add	fp, sp, #8
   2d15c:	sub	sp, sp, #16
   2d160:	mov	r5, r0
   2d164:	movw	r0, #53760	; 0xd200
   2d168:	movw	r3, #28286	; 0x6e7e
   2d16c:	mov	r4, r1
   2d170:	mov	r1, #6
   2d174:	mov	r2, #0
   2d178:	movt	r0, #2
   2d17c:	str	r1, [sp]
   2d180:	movt	r3, #4
   2d184:	mov	r1, r4
   2d188:	str	r0, [sp, #4]
   2d18c:	mov	r0, r5
   2d190:	bl	4102c <flatcc_json_printer_table_field@@Base>
   2d194:	movw	r0, #53916	; 0xd29c
   2d198:	movw	r3, #28293	; 0x6e85
   2d19c:	mov	r1, #5
   2d1a0:	mov	r2, #1
   2d1a4:	movt	r0, #2
   2d1a8:	str	r1, [sp]
   2d1ac:	movt	r3, #4
   2d1b0:	mov	r1, r4
   2d1b4:	str	r0, [sp, #4]
   2d1b8:	mov	r0, r5
   2d1bc:	bl	4102c <flatcc_json_printer_table_field@@Base>
   2d1c0:	movw	r0, #52860	; 0xce7c
   2d1c4:	movw	r1, #52744	; 0xce08
   2d1c8:	movw	r3, #28299	; 0x6e8b
   2d1cc:	mov	r2, #7
   2d1d0:	movt	r0, #2
   2d1d4:	movt	r1, #2
   2d1d8:	str	r2, [sp]
   2d1dc:	movt	r3, #4
   2d1e0:	mov	r2, #3
   2d1e4:	str	r1, [sp, #4]
   2d1e8:	str	r0, [sp, #8]
   2d1ec:	mov	r0, r5
   2d1f0:	mov	r1, r4
   2d1f4:	bl	40c74 <flatcc_json_printer_union_vector_field@@Base>
   2d1f8:	sub	sp, fp, #8
   2d1fc:	pop	{r4, r5, fp, pc}
   2d200:	push	{r4, r5, r6, sl, fp, lr}
   2d204:	add	fp, sp, #16
   2d208:	sub	sp, sp, #8
   2d20c:	mov	r5, r0
   2d210:	movw	r0, #54144	; 0xd380
   2d214:	movw	r3, #28307	; 0x6e93
   2d218:	mov	r4, r1
   2d21c:	mov	r1, #21
   2d220:	mov	r2, #0
   2d224:	movt	r0, #2
   2d228:	str	r1, [sp]
   2d22c:	movt	r3, #4
   2d230:	mov	r1, r4
   2d234:	str	r0, [sp, #4]
   2d238:	mov	r0, r5
   2d23c:	bl	4102c <flatcc_json_printer_table_field@@Base>
   2d240:	movw	r0, #54468	; 0xd4c4
   2d244:	movw	r3, #28329	; 0x6ea9
   2d248:	mov	r6, #22
   2d24c:	mov	r1, r4
   2d250:	mov	r2, #1
   2d254:	movt	r0, #2
   2d258:	movt	r3, #4
   2d25c:	str	r6, [sp]
   2d260:	str	r0, [sp, #4]
   2d264:	mov	r0, r5
   2d268:	bl	4102c <flatcc_json_printer_table_field@@Base>
   2d26c:	movw	r0, #54568	; 0xd528
   2d270:	movw	r3, #28352	; 0x6ec0
   2d274:	mov	r1, r4
   2d278:	mov	r2, #2
   2d27c:	str	r6, [sp]
   2d280:	movt	r0, #2
   2d284:	movt	r3, #4
   2d288:	str	r0, [sp, #4]
   2d28c:	mov	r0, r5
   2d290:	bl	4102c <flatcc_json_printer_table_field@@Base>
   2d294:	sub	sp, fp, #16
   2d298:	pop	{r4, r5, r6, sl, fp, pc}
   2d29c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2d2a0:	add	fp, sp, #24
   2d2a4:	sub	sp, sp, #16
   2d2a8:	movw	r7, #54668	; 0xd58c
   2d2ac:	movw	r6, #54848	; 0xd640
   2d2b0:	movw	r3, #28502	; 0x6f56
   2d2b4:	mov	r5, r0
   2d2b8:	mov	r0, #14
   2d2bc:	mov	r2, #1
   2d2c0:	mov	r4, r1
   2d2c4:	movt	r7, #2
   2d2c8:	movt	r6, #2
   2d2cc:	movt	r3, #4
   2d2d0:	stm	sp, {r0, r7}
   2d2d4:	mov	r0, r5
   2d2d8:	str	r6, [sp, #8]
   2d2dc:	bl	41208 <flatcc_json_printer_union_field@@Base>
   2d2e0:	movw	r3, #28517	; 0x6f65
   2d2e4:	mov	r8, #10
   2d2e8:	mov	r0, r5
   2d2ec:	mov	r1, r4
   2d2f0:	mov	r2, #3
   2d2f4:	str	r7, [sp, #4]
   2d2f8:	str	r6, [sp, #8]
   2d2fc:	movt	r3, #4
   2d300:	str	r8, [sp]
   2d304:	bl	41208 <flatcc_json_printer_union_field@@Base>
   2d308:	movw	r3, #28528	; 0x6f70
   2d30c:	mov	r0, #9
   2d310:	mov	r1, r4
   2d314:	mov	r2, #5
   2d318:	mov	r9, #5
   2d31c:	stm	sp, {r0, r7}
   2d320:	movt	r3, #4
   2d324:	mov	r0, r5
   2d328:	str	r6, [sp, #8]
   2d32c:	bl	41208 <flatcc_json_printer_union_field@@Base>
   2d330:	movw	r3, #28538	; 0x6f7a
   2d334:	mov	r0, r5
   2d338:	mov	r1, r4
   2d33c:	mov	r2, #7
   2d340:	str	r9, [sp]
   2d344:	str	r7, [sp, #4]
   2d348:	str	r6, [sp, #8]
   2d34c:	movt	r3, #4
   2d350:	bl	41208 <flatcc_json_printer_union_field@@Base>
   2d354:	movw	r3, #28544	; 0x6f80
   2d358:	mov	r0, r5
   2d35c:	mov	r1, r4
   2d360:	mov	r2, #9
   2d364:	str	r8, [sp]
   2d368:	str	r7, [sp, #4]
   2d36c:	str	r6, [sp, #8]
   2d370:	movt	r3, #4
   2d374:	bl	40c74 <flatcc_json_printer_union_vector_field@@Base>
   2d378:	sub	sp, fp, #24
   2d37c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2d380:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2d384:	add	fp, sp, #24
   2d388:	sub	sp, sp, #16
   2d38c:	movw	r3, #28375	; 0x6ed7
   2d390:	mov	r9, #4
   2d394:	mov	r2, #0
   2d398:	mov	r4, r1
   2d39c:	mov	r5, r0
   2d3a0:	mov	r6, #0
   2d3a4:	movt	r3, #4
   2d3a8:	str	r9, [sp]
   2d3ac:	bl	38bc8 <flatcc_json_printer_string_field@@Base>
   2d3b0:	movw	r3, #28380	; 0x6edc
   2d3b4:	mov	r8, #9
   2d3b8:	mov	r0, r5
   2d3bc:	mov	r1, r4
   2d3c0:	mov	r2, #1
   2d3c4:	str	r6, [sp, #4]
   2d3c8:	movt	r3, #4
   2d3cc:	str	r8, [sp]
   2d3d0:	bl	391bc <flatcc_json_printer_uint32_field@@Base>
   2d3d4:	movw	r3, #28390	; 0x6ee6
   2d3d8:	mov	r0, r5
   2d3dc:	mov	r1, r4
   2d3e0:	mov	r2, #2
   2d3e4:	str	r9, [sp]
   2d3e8:	movt	r3, #4
   2d3ec:	bl	38bc8 <flatcc_json_printer_string_field@@Base>
   2d3f0:	movw	r3, #28395	; 0x6eeb
   2d3f4:	mov	r7, #8
   2d3f8:	mov	r0, r5
   2d3fc:	mov	r1, r4
   2d400:	mov	r2, #3
   2d404:	str	r6, [sp, #8]
   2d408:	str	r6, [sp, #12]
   2d40c:	movt	r3, #4
   2d410:	str	r7, [sp]
   2d414:	bl	395f0 <flatcc_json_printer_int64_field@@Base>
   2d418:	movw	r3, #28404	; 0x6ef4
   2d41c:	mov	r0, r5
   2d420:	mov	r1, r4
   2d424:	mov	r2, #4
   2d428:	str	r9, [sp]
   2d42c:	movt	r3, #4
   2d430:	bl	38bc8 <flatcc_json_printer_string_field@@Base>
   2d434:	movw	r3, #28409	; 0x6ef9
   2d438:	mov	r0, r5
   2d43c:	mov	r1, r4
   2d440:	mov	r2, #5
   2d444:	str	r6, [sp, #8]
   2d448:	str	r6, [sp, #12]
   2d44c:	str	r7, [sp]
   2d450:	movt	r3, #4
   2d454:	bl	395f0 <flatcc_json_printer_int64_field@@Base>
   2d458:	movw	r3, #28418	; 0x6f02
   2d45c:	mov	r0, r5
   2d460:	mov	r1, r4
   2d464:	mov	r2, #6
   2d468:	str	r8, [sp]
   2d46c:	str	r6, [sp, #4]
   2d470:	movt	r3, #4
   2d474:	bl	391bc <flatcc_json_printer_uint32_field@@Base>
   2d478:	movw	r3, #28428	; 0x6f0c
   2d47c:	mov	r0, r5
   2d480:	mov	r1, r4
   2d484:	mov	r2, #7
   2d488:	str	r6, [sp, #8]
   2d48c:	str	r6, [sp, #12]
   2d490:	str	r7, [sp]
   2d494:	movt	r3, #4
   2d498:	bl	395f0 <flatcc_json_printer_int64_field@@Base>
   2d49c:	movw	r3, #28437	; 0x6f15
   2d4a0:	mov	r0, r5
   2d4a4:	mov	r1, r4
   2d4a8:	mov	r2, #8
   2d4ac:	str	r8, [sp]
   2d4b0:	str	r6, [sp, #4]
   2d4b4:	movt	r3, #4
   2d4b8:	bl	391bc <flatcc_json_printer_uint32_field@@Base>
   2d4bc:	sub	sp, fp, #24
   2d4c0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2d4c4:	push	{r4, r5, r6, sl, fp, lr}
   2d4c8:	add	fp, sp, #16
   2d4cc:	sub	sp, sp, #16
   2d4d0:	movw	r3, #28447	; 0x6f1f
   2d4d4:	mov	r5, r0
   2d4d8:	mov	r0, #15
   2d4dc:	mov	r6, #0
   2d4e0:	mov	r2, #0
   2d4e4:	mov	r4, r1
   2d4e8:	str	r0, [sp]
   2d4ec:	movt	r3, #4
   2d4f0:	mov	r0, r5
   2d4f4:	str	r6, [sp, #8]
   2d4f8:	str	r6, [sp, #12]
   2d4fc:	bl	395f0 <flatcc_json_printer_int64_field@@Base>
   2d500:	movw	r3, #28463	; 0x6f2f
   2d504:	mov	r0, #16
   2d508:	mov	r1, r4
   2d50c:	mov	r2, #1
   2d510:	stm	sp, {r0, r6}
   2d514:	movt	r3, #4
   2d518:	mov	r0, r5
   2d51c:	bl	391bc <flatcc_json_printer_uint32_field@@Base>
   2d520:	sub	sp, fp, #16
   2d524:	pop	{r4, r5, r6, sl, fp, pc}
   2d528:	push	{r4, r5, r6, sl, fp, lr}
   2d52c:	add	fp, sp, #16
   2d530:	sub	sp, sp, #16
   2d534:	movw	r3, #28447	; 0x6f1f
   2d538:	mov	r5, r0
   2d53c:	mov	r0, #15
   2d540:	mov	r6, #0
   2d544:	mov	r2, #0
   2d548:	mov	r4, r1
   2d54c:	str	r0, [sp]
   2d550:	movt	r3, #4
   2d554:	mov	r0, r5
   2d558:	str	r6, [sp, #8]
   2d55c:	str	r6, [sp, #12]
   2d560:	bl	395f0 <flatcc_json_printer_int64_field@@Base>
   2d564:	movw	r3, #28480	; 0x6f40
   2d568:	mov	r0, #21
   2d56c:	mov	r1, r4
   2d570:	mov	r2, #1
   2d574:	stm	sp, {r0, r6}
   2d578:	movt	r3, #4
   2d57c:	mov	r0, r5
   2d580:	bl	391bc <flatcc_json_printer_uint32_field@@Base>
   2d584:	sub	sp, fp, #16
   2d588:	pop	{r4, r5, r6, sl, fp, pc}
   2d58c:	sub	r2, r1, #2
   2d590:	cmp	r2, #9
   2d594:	bhi	2d5d8 <main@@Base+0x17548>
   2d598:	add	r1, pc, #0
   2d59c:	ldr	pc, [r1, r2, lsl #2]
   2d5a0:	andeq	sp, r2, r8, asr #11
   2d5a4:	strdeq	sp, [r2], -r0
   2d5a8:	strdeq	sp, [r2], -r0
   2d5ac:	strdeq	sp, [r2], -r0
   2d5b0:	strdeq	sp, [r2], -r0
   2d5b4:	strdeq	sp, [r2], -r0
   2d5b8:	andeq	sp, r2, r0, lsl #12
   2d5bc:	andeq	sp, r2, r0, lsl r6
   2d5c0:	andeq	sp, r2, r0, lsr #12
   2d5c4:	andeq	sp, r2, r0, lsr r6
   2d5c8:	movw	r1, #28555	; 0x6f8b
   2d5cc:	mov	r2, #5
   2d5d0:	movt	r1, #4
   2d5d4:	b	389dc <flatcc_json_printer_enum@@Base>
   2d5d8:	cmp	r1, #255	; 0xff
   2d5dc:	bne	2d5f0 <main@@Base+0x17560>
   2d5e0:	movw	r1, #28590	; 0x6fae
   2d5e4:	mov	r2, #6
   2d5e8:	movt	r1, #4
   2d5ec:	b	389dc <flatcc_json_printer_enum@@Base>
   2d5f0:	movw	r1, #34676	; 0x8774
   2d5f4:	mov	r2, #4
   2d5f8:	movt	r1, #4
   2d5fc:	b	389dc <flatcc_json_printer_enum@@Base>
   2d600:	movw	r1, #28561	; 0x6f91
   2d604:	mov	r2, #8
   2d608:	movt	r1, #4
   2d60c:	b	389dc <flatcc_json_printer_enum@@Base>
   2d610:	movw	r1, #28570	; 0x6f9a
   2d614:	mov	r2, #5
   2d618:	movt	r1, #4
   2d61c:	b	389dc <flatcc_json_printer_enum@@Base>
   2d620:	movw	r1, #28576	; 0x6fa0
   2d624:	mov	r2, #7
   2d628:	movt	r1, #4
   2d62c:	b	389dc <flatcc_json_printer_enum@@Base>
   2d630:	movw	r1, #28584	; 0x6fa8
   2d634:	mov	r2, #5
   2d638:	movt	r1, #4
   2d63c:	b	389dc <flatcc_json_printer_enum@@Base>
   2d640:	ldrb	r3, [r1, #8]
   2d644:	sub	r2, r3, #2
   2d648:	cmp	r2, #9
   2d64c:	bhi	2d68c <main@@Base+0x175fc>
   2d650:	add	r3, pc, #0
   2d654:	ldr	pc, [r3, r2, lsl #2]
   2d658:	muleq	r2, r8, r6
   2d65c:			; <UNDEFINED> instruction: 0x0002d6b0
   2d660:			; <UNDEFINED> instruction: 0x0002d6b0
   2d664:			; <UNDEFINED> instruction: 0x0002d6b0
   2d668:			; <UNDEFINED> instruction: 0x0002d6b0
   2d66c:			; <UNDEFINED> instruction: 0x0002d6b0
   2d670:	andeq	sp, r2, r4, lsr #13
   2d674:	andeq	sp, r2, r0, lsl #13
   2d678:	andeq	sp, r2, r0, lsl #13
   2d67c:	muleq	r2, r4, r6
   2d680:	movw	r2, #55072	; 0xd720
   2d684:	movt	r2, #2
   2d688:	b	417a0 <flatcc_json_printer_union_struct@@Base>
   2d68c:	cmp	r3, #255	; 0xff
   2d690:	bxne	lr
   2d694:	b	418c0 <flatcc_json_printer_union_string@@Base>
   2d698:	movw	r2, #54964	; 0xd6b4
   2d69c:	movt	r2, #2
   2d6a0:	b	41630 <flatcc_json_printer_union_table@@Base>
   2d6a4:	movw	r2, #55016	; 0xd6e8
   2d6a8:	movt	r2, #2
   2d6ac:	b	417a0 <flatcc_json_printer_union_struct@@Base>
   2d6b0:	bx	lr
   2d6b4:	push	{fp, lr}
   2d6b8:	mov	fp, sp
   2d6bc:	sub	sp, sp, #8
   2d6c0:	mov	r3, #19
   2d6c4:	mov	r2, #0
   2d6c8:	str	r3, [sp]
   2d6cc:	movw	r3, #28597	; 0x6fb5
   2d6d0:	str	r2, [sp, #4]
   2d6d4:	mov	r2, #0
   2d6d8:	movt	r3, #4
   2d6dc:	bl	39518 <flatcc_json_printer_int32_field@@Base>
   2d6e0:	mov	sp, fp
   2d6e4:	pop	{fp, pc}
   2d6e8:	push	{fp, lr}
   2d6ec:	mov	fp, sp
   2d6f0:	sub	sp, sp, #8
   2d6f4:	movw	r3, #28617	; 0x6fc9
   2d6f8:	mov	r2, r1
   2d6fc:	mov	r1, #11
   2d700:	movt	r3, #4
   2d704:	str	r1, [sp, #4]
   2d708:	mov	r1, #0
   2d70c:	str	r3, [sp]
   2d710:	mov	r3, #0
   2d714:	bl	3a2d0 <flatcc_json_printer_uint16_struct_field@@Base>
   2d718:	mov	sp, fp
   2d71c:	pop	{fp, pc}
   2d720:	push	{fp, lr}
   2d724:	mov	fp, sp
   2d728:	sub	sp, sp, #8
   2d72c:	movw	r3, #28629	; 0x6fd5
   2d730:	mov	r2, r1
   2d734:	mov	r1, #10
   2d738:	movt	r3, #4
   2d73c:	str	r1, [sp, #4]
   2d740:	mov	r1, #0
   2d744:	str	r3, [sp]
   2d748:	mov	r3, #0
   2d74c:	bl	3a4cc <flatcc_json_printer_int32_struct_field@@Base>
   2d750:	mov	sp, fp
   2d754:	pop	{fp, pc}
   2d758:	ldrb	r1, [r0, #12]
   2d75c:	sub	r1, r1, #1
   2d760:	uxtb	r2, r1
   2d764:	cmp	r2, #3
   2d768:	movhi	r0, #0
   2d76c:	bxhi	lr
   2d770:	movw	r2, #28788	; 0x7074
   2d774:	sxtb	r1, r1
   2d778:	movt	r2, #4
   2d77c:	ldr	r1, [r2, r1, lsl #2]
   2d780:	b	32728 <flatcc_verify_union_table@@Base>
   2d784:	push	{r4, sl, fp, lr}
   2d788:	add	fp, sp, #8
   2d78c:	mov	r1, #0
   2d790:	mov	r2, #0
   2d794:	mov	r4, r0
   2d798:	bl	320a8 <flatcc_verify_string_field@@Base>
   2d79c:	cmp	r0, #0
   2d7a0:	popne	{r4, sl, fp, pc}
   2d7a4:	mov	r0, r4
   2d7a8:	mov	r1, #1
   2d7ac:	mov	r2, #8
   2d7b0:	mov	r3, #8
   2d7b4:	bl	32030 <flatcc_verify_field@@Base>
   2d7b8:	cmp	r0, #0
   2d7bc:	beq	2d7c4 <main@@Base+0x17734>
   2d7c0:	pop	{r4, sl, fp, pc}
   2d7c4:	mov	r0, r4
   2d7c8:	mov	r1, #2
   2d7cc:	mov	r2, #2
   2d7d0:	mov	r3, #2
   2d7d4:	pop	{r4, sl, fp, lr}
   2d7d8:	b	32030 <flatcc_verify_field@@Base>
   2d7dc:	mov	r0, #0
   2d7e0:	bx	lr
   2d7e4:	push	{r4, r5, r6, sl, fp, lr}
   2d7e8:	add	fp, sp, #16
   2d7ec:	sub	sp, sp, #8
   2d7f0:	mvn	r5, #0
   2d7f4:	mov	r6, #1
   2d7f8:	mov	r1, #0
   2d7fc:	mov	r2, #0
   2d800:	mov	r3, #1
   2d804:	mov	r4, r0
   2d808:	str	r6, [sp]
   2d80c:	str	r5, [sp, #4]
   2d810:	bl	321b0 <flatcc_verify_vector_field@@Base>
   2d814:	cmp	r0, #0
   2d818:	bne	2d868 <main@@Base+0x177d8>
   2d81c:	mov	r0, r4
   2d820:	mov	r1, #1
   2d824:	mov	r2, #0
   2d828:	mov	r3, #1
   2d82c:	str	r6, [sp]
   2d830:	str	r5, [sp, #4]
   2d834:	bl	321b0 <flatcc_verify_vector_field@@Base>
   2d838:	cmp	r0, #0
   2d83c:	bne	2d868 <main@@Base+0x177d8>
   2d840:	movw	r0, #4132	; 0x1024
   2d844:	mov	r1, #1
   2d848:	mov	r2, #0
   2d84c:	mov	r3, #0
   2d850:	movt	r0, #2
   2d854:	str	r1, [sp]
   2d858:	mov	r1, #2
   2d85c:	str	r0, [sp, #4]
   2d860:	mov	r0, r4
   2d864:	bl	32d6c <flatcc_verify_table_as_nested_root@@Base>
   2d868:	sub	sp, fp, #16
   2d86c:	pop	{r4, r5, r6, sl, fp, pc}
   2d870:	push	{r4, sl, fp, lr}
   2d874:	add	fp, sp, #8
   2d878:	mov	r1, #0
   2d87c:	mov	r2, #1
   2d880:	mov	r3, #1
   2d884:	mov	r4, r0
   2d888:	bl	32030 <flatcc_verify_field@@Base>
   2d88c:	cmp	r0, #0
   2d890:	bne	2d8cc <main@@Base+0x1783c>
   2d894:	mov	r0, r4
   2d898:	mov	r1, #1
   2d89c:	mov	r2, #1
   2d8a0:	mov	r3, #1
   2d8a4:	bl	32030 <flatcc_verify_field@@Base>
   2d8a8:	cmp	r0, #0
   2d8ac:	popne	{r4, sl, fp, pc}
   2d8b0:	mov	r0, r4
   2d8b4:	mov	r1, #2
   2d8b8:	mov	r2, #1
   2d8bc:	mov	r3, #1
   2d8c0:	bl	32030 <flatcc_verify_field@@Base>
   2d8c4:	cmp	r0, #0
   2d8c8:	beq	2d8d0 <main@@Base+0x17840>
   2d8cc:	pop	{r4, sl, fp, pc}
   2d8d0:	mov	r0, r4
   2d8d4:	mov	r1, #3
   2d8d8:	mov	r2, #1
   2d8dc:	mov	r3, #1
   2d8e0:	pop	{r4, sl, fp, lr}
   2d8e4:	b	32030 <flatcc_verify_field@@Base>
   2d8e8:	mov	r0, #0
   2d8ec:	bx	lr
   2d8f0:	push	{r4, sl, fp, lr}
   2d8f4:	add	fp, sp, #8
   2d8f8:	movw	r3, #55640	; 0xd958
   2d8fc:	mov	r1, #0
   2d900:	mov	r2, #0
   2d904:	mov	r4, r0
   2d908:	movt	r3, #2
   2d90c:	bl	323a0 <flatcc_verify_table_field@@Base>
   2d910:	cmp	r0, #0
   2d914:	popne	{r4, sl, fp, pc}
   2d918:	movw	r3, #55744	; 0xd9c0
   2d91c:	mov	r0, r4
   2d920:	mov	r1, #1
   2d924:	mov	r2, #0
   2d928:	movt	r3, #2
   2d92c:	bl	323a0 <flatcc_verify_table_field@@Base>
   2d930:	cmp	r0, #0
   2d934:	beq	2d93c <main@@Base+0x178ac>
   2d938:	pop	{r4, sl, fp, pc}
   2d93c:	movw	r3, #55128	; 0xd758
   2d940:	mov	r0, r4
   2d944:	mov	r1, #3
   2d948:	mov	r2, #0
   2d94c:	movt	r3, #2
   2d950:	pop	{r4, sl, fp, lr}
   2d954:	b	33044 <flatcc_verify_union_vector_field@@Base>
   2d958:	push	{r4, sl, fp, lr}
   2d95c:	add	fp, sp, #8
   2d960:	movw	r3, #55912	; 0xda68
   2d964:	mov	r1, #0
   2d968:	mov	r2, #0
   2d96c:	mov	r4, r0
   2d970:	movt	r3, #2
   2d974:	bl	323a0 <flatcc_verify_table_field@@Base>
   2d978:	cmp	r0, #0
   2d97c:	popne	{r4, sl, fp, pc}
   2d980:	movw	r3, #56160	; 0xdb60
   2d984:	mov	r0, r4
   2d988:	mov	r1, #1
   2d98c:	mov	r2, #0
   2d990:	movt	r3, #2
   2d994:	bl	323a0 <flatcc_verify_table_field@@Base>
   2d998:	cmp	r0, #0
   2d99c:	beq	2d9a4 <main@@Base+0x17914>
   2d9a0:	pop	{r4, sl, fp, pc}
   2d9a4:	movw	r3, #56220	; 0xdb9c
   2d9a8:	mov	r0, r4
   2d9ac:	mov	r1, #2
   2d9b0:	mov	r2, #0
   2d9b4:	movt	r3, #2
   2d9b8:	pop	{r4, sl, fp, lr}
   2d9bc:	b	323a0 <flatcc_verify_table_field@@Base>
   2d9c0:	push	{r4, sl, fp, lr}
   2d9c4:	add	fp, sp, #8
   2d9c8:	movw	r3, #56280	; 0xdbd8
   2d9cc:	mov	r1, #1
   2d9d0:	mov	r2, #0
   2d9d4:	mov	r4, r0
   2d9d8:	movt	r3, #2
   2d9dc:	bl	32f1c <flatcc_verify_union_field@@Base>
   2d9e0:	cmp	r0, #0
   2d9e4:	bne	2da48 <main@@Base+0x179b8>
   2d9e8:	movw	r3, #56280	; 0xdbd8
   2d9ec:	mov	r0, r4
   2d9f0:	mov	r1, #3
   2d9f4:	mov	r2, #0
   2d9f8:	movt	r3, #2
   2d9fc:	bl	32f1c <flatcc_verify_union_field@@Base>
   2da00:	cmp	r0, #0
   2da04:	bne	2da48 <main@@Base+0x179b8>
   2da08:	movw	r3, #56280	; 0xdbd8
   2da0c:	mov	r0, r4
   2da10:	mov	r1, #5
   2da14:	mov	r2, #0
   2da18:	movt	r3, #2
   2da1c:	bl	32f1c <flatcc_verify_union_field@@Base>
   2da20:	cmp	r0, #0
   2da24:	popne	{r4, sl, fp, pc}
   2da28:	movw	r3, #56280	; 0xdbd8
   2da2c:	mov	r0, r4
   2da30:	mov	r1, #7
   2da34:	mov	r2, #0
   2da38:	movt	r3, #2
   2da3c:	bl	32f1c <flatcc_verify_union_field@@Base>
   2da40:	cmp	r0, #0
   2da44:	beq	2da4c <main@@Base+0x179bc>
   2da48:	pop	{r4, sl, fp, pc}
   2da4c:	movw	r3, #56280	; 0xdbd8
   2da50:	mov	r0, r4
   2da54:	mov	r1, #9
   2da58:	mov	r2, #0
   2da5c:	movt	r3, #2
   2da60:	pop	{r4, sl, fp, lr}
   2da64:	b	33044 <flatcc_verify_union_vector_field@@Base>
   2da68:	push	{r4, sl, fp, lr}
   2da6c:	add	fp, sp, #8
   2da70:	mov	r1, #0
   2da74:	mov	r2, #0
   2da78:	mov	r4, r0
   2da7c:	bl	320a8 <flatcc_verify_string_field@@Base>
   2da80:	cmp	r0, #0
   2da84:	bne	2db44 <main@@Base+0x17ab4>
   2da88:	mov	r0, r4
   2da8c:	mov	r1, #1
   2da90:	mov	r2, #4
   2da94:	mov	r3, #4
   2da98:	bl	32030 <flatcc_verify_field@@Base>
   2da9c:	cmp	r0, #0
   2daa0:	bne	2db44 <main@@Base+0x17ab4>
   2daa4:	mov	r0, r4
   2daa8:	mov	r1, #2
   2daac:	mov	r2, #0
   2dab0:	bl	320a8 <flatcc_verify_string_field@@Base>
   2dab4:	cmp	r0, #0
   2dab8:	bne	2db44 <main@@Base+0x17ab4>
   2dabc:	mov	r0, r4
   2dac0:	mov	r1, #3
   2dac4:	mov	r2, #8
   2dac8:	mov	r3, #8
   2dacc:	bl	32030 <flatcc_verify_field@@Base>
   2dad0:	cmp	r0, #0
   2dad4:	bne	2db44 <main@@Base+0x17ab4>
   2dad8:	mov	r0, r4
   2dadc:	mov	r1, #4
   2dae0:	mov	r2, #0
   2dae4:	bl	320a8 <flatcc_verify_string_field@@Base>
   2dae8:	cmp	r0, #0
   2daec:	bne	2db44 <main@@Base+0x17ab4>
   2daf0:	mov	r0, r4
   2daf4:	mov	r1, #5
   2daf8:	mov	r2, #8
   2dafc:	mov	r3, #8
   2db00:	bl	32030 <flatcc_verify_field@@Base>
   2db04:	cmp	r0, #0
   2db08:	bne	2db44 <main@@Base+0x17ab4>
   2db0c:	mov	r0, r4
   2db10:	mov	r1, #6
   2db14:	mov	r2, #4
   2db18:	mov	r3, #4
   2db1c:	bl	32030 <flatcc_verify_field@@Base>
   2db20:	cmp	r0, #0
   2db24:	popne	{r4, sl, fp, pc}
   2db28:	mov	r0, r4
   2db2c:	mov	r1, #7
   2db30:	mov	r2, #8
   2db34:	mov	r3, #8
   2db38:	bl	32030 <flatcc_verify_field@@Base>
   2db3c:	cmp	r0, #0
   2db40:	beq	2db48 <main@@Base+0x17ab8>
   2db44:	pop	{r4, sl, fp, pc}
   2db48:	mov	r0, r4
   2db4c:	mov	r1, #8
   2db50:	mov	r2, #4
   2db54:	mov	r3, #4
   2db58:	pop	{r4, sl, fp, lr}
   2db5c:	b	32030 <flatcc_verify_field@@Base>
   2db60:	push	{r4, sl, fp, lr}
   2db64:	add	fp, sp, #8
   2db68:	mov	r1, #0
   2db6c:	mov	r2, #8
   2db70:	mov	r3, #8
   2db74:	mov	r4, r0
   2db78:	bl	32030 <flatcc_verify_field@@Base>
   2db7c:	cmp	r0, #0
   2db80:	popne	{r4, sl, fp, pc}
   2db84:	mov	r0, r4
   2db88:	mov	r1, #1
   2db8c:	mov	r2, #4
   2db90:	mov	r3, #4
   2db94:	pop	{r4, sl, fp, lr}
   2db98:	b	32030 <flatcc_verify_field@@Base>
   2db9c:	push	{r4, sl, fp, lr}
   2dba0:	add	fp, sp, #8
   2dba4:	mov	r1, #0
   2dba8:	mov	r2, #8
   2dbac:	mov	r3, #8
   2dbb0:	mov	r4, r0
   2dbb4:	bl	32030 <flatcc_verify_field@@Base>
   2dbb8:	cmp	r0, #0
   2dbbc:	popne	{r4, sl, fp, pc}
   2dbc0:	mov	r0, r4
   2dbc4:	mov	r1, #1
   2dbc8:	mov	r2, #4
   2dbcc:	mov	r3, #4
   2dbd0:	pop	{r4, sl, fp, lr}
   2dbd4:	b	32030 <flatcc_verify_field@@Base>
   2dbd8:	ldrb	r2, [r0, #12]
   2dbdc:	sub	r1, r2, #2
   2dbe0:	cmp	r1, #9
   2dbe4:	bhi	2dc24 <main@@Base+0x17b94>
   2dbe8:	add	r2, pc, #0
   2dbec:	ldr	pc, [r2, r1, lsl #2]
   2dbf0:	andeq	sp, r2, r8, lsr ip
   2dbf4:	andeq	sp, r2, r0, lsr ip
   2dbf8:	andeq	sp, r2, r0, lsr ip
   2dbfc:	andeq	sp, r2, r0, lsr ip
   2dc00:	andeq	sp, r2, r0, lsr ip
   2dc04:	andeq	sp, r2, r0, lsr ip
   2dc08:	andeq	sp, r2, r4, asr #24
   2dc0c:	andeq	sp, r2, r8, lsl ip
   2dc10:	andeq	sp, r2, r8, lsl ip
   2dc14:	andeq	sp, r2, ip, lsr #24
   2dc18:	mov	r1, #4
   2dc1c:	mov	r2, #4
   2dc20:	b	32810 <flatcc_verify_union_struct@@Base>
   2dc24:	cmp	r2, #255	; 0xff
   2dc28:	bne	2dc30 <main@@Base+0x17ba0>
   2dc2c:	b	32868 <flatcc_verify_union_string@@Base>
   2dc30:	mov	r0, #0
   2dc34:	bx	lr
   2dc38:	movw	r1, #56400	; 0xdc50
   2dc3c:	movt	r1, #2
   2dc40:	b	32728 <flatcc_verify_union_table@@Base>
   2dc44:	mov	r1, #2
   2dc48:	mov	r2, #2
   2dc4c:	b	32810 <flatcc_verify_union_struct@@Base>
   2dc50:	mov	r1, #0
   2dc54:	mov	r2, #4
   2dc58:	mov	r3, #4
   2dc5c:	b	32030 <flatcc_verify_field@@Base>

0002dc60 <flatcc_builder_default_alloc@@Base>:
   2dc60:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2dc64:	add	fp, sp, #24
   2dc68:	mov	r4, r1
   2dc6c:	cmp	r2, #0
   2dc70:	beq	2dcb8 <flatcc_builder_default_alloc@@Base+0x58>
   2dc74:	ldr	r0, [fp, #8]
   2dc78:	mov	r8, r3
   2dc7c:	sub	r1, r0, #1
   2dc80:	cmp	r1, #6
   2dc84:	bhi	2dce0 <flatcc_builder_default_alloc@@Base+0x80>
   2dc88:	add	r3, pc, #4
   2dc8c:	mov	r0, #256	; 0x100
   2dc90:	ldr	pc, [r3, r1, lsl #2]
   2dc94:	strdeq	sp, [r2], -r4
   2dc98:	andeq	sp, r2, r0, ror #25
   2dc9c:	andeq	sp, r2, r0, ror #25
   2dca0:			; <UNDEFINED> instruction: 0x0002dcb0
   2dca4:	andeq	sp, r2, r8, ror #25
   2dca8:	andeq	sp, r2, r0, ror #25
   2dcac:	strdeq	sp, [r2], -r0
   2dcb0:	mov	r0, #288	; 0x120
   2dcb4:	b	2dcf4 <flatcc_builder_default_alloc@@Base+0x94>
   2dcb8:	ldr	r0, [r4]
   2dcbc:	cmp	r0, #0
   2dcc0:	beq	2dcd8 <flatcc_builder_default_alloc@@Base+0x78>
   2dcc4:	bl	14e54 <free@plt>
   2dcc8:	mov	r6, #0
   2dccc:	str	r6, [r4]
   2dcd0:	str	r6, [r4, #4]
   2dcd4:	b	2dd50 <flatcc_builder_default_alloc@@Base+0xf0>
   2dcd8:	mov	r6, #0
   2dcdc:	b	2dd50 <flatcc_builder_default_alloc@@Base+0xf0>
   2dce0:	mov	r0, #32
   2dce4:	b	2dcf4 <flatcc_builder_default_alloc@@Base+0x94>
   2dce8:	mov	r0, r2
   2dcec:	b	2dcf4 <flatcc_builder_default_alloc@@Base+0x94>
   2dcf0:	mov	r0, #64	; 0x40
   2dcf4:	mov	r7, r0
   2dcf8:	lsl	r0, r0, #1
   2dcfc:	cmp	r7, r2
   2dd00:	bcc	2dcf4 <flatcc_builder_default_alloc@@Base+0x94>
   2dd04:	ldr	r0, [r4, #4]
   2dd08:	mov	r6, #0
   2dd0c:	cmp	r0, r2
   2dd10:	lsrcs	r0, r0, #1
   2dd14:	cmpcs	r0, r7
   2dd18:	bcs	2dd50 <flatcc_builder_default_alloc@@Base+0xf0>
   2dd1c:	ldr	r0, [r4]
   2dd20:	mov	r1, r7
   2dd24:	bl	14e90 <realloc@plt>
   2dd28:	cmp	r0, #0
   2dd2c:	beq	2dd4c <flatcc_builder_default_alloc@@Base+0xec>
   2dd30:	cmp	r8, #0
   2dd34:	mov	r5, r0
   2dd38:	ldrne	r1, [r4, #4]
   2dd3c:	cmpne	r7, r1
   2dd40:	bhi	2dd58 <flatcc_builder_default_alloc@@Base+0xf8>
   2dd44:	stm	r4, {r5, r7}
   2dd48:	b	2dd50 <flatcc_builder_default_alloc@@Base+0xf0>
   2dd4c:	mvn	r6, #0
   2dd50:	mov	r0, r6
   2dd54:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2dd58:	add	r0, r5, r1
   2dd5c:	sub	r2, r7, r1
   2dd60:	mov	r1, #0
   2dd64:	bl	14ef0 <memset@plt>
   2dd68:	b	2dd44 <flatcc_builder_default_alloc@@Base+0xe4>

0002dd6c <flatcc_builder_flush_vtable_cache@@Base>:
   2dd6c:	push	{r4, r5, fp, lr}
   2dd70:	add	fp, sp, #8
   2dd74:	mov	r4, r0
   2dd78:	ldr	r0, [r0, #116]	; 0x74
   2dd7c:	cmp	r0, #0
   2dd80:	popeq	{r4, r5, fp, pc}
   2dd84:	ldr	r0, [r4, #92]	; 0x5c
   2dd88:	ldr	r2, [r4, #96]	; 0x60
   2dd8c:	mov	r1, #0
   2dd90:	mov	r5, #0
   2dd94:	bl	14ef0 <memset@plt>
   2dd98:	mov	r0, #16
   2dd9c:	str	r5, [r4, #120]	; 0x78
   2dda0:	str	r0, [r4, #124]	; 0x7c
   2dda4:	pop	{r4, r5, fp, pc}

0002dda8 <flatcc_builder_custom_init@@Base>:
   2dda8:	push	{r4, r5, r6, r7, fp, lr}
   2ddac:	add	fp, sp, #16
   2ddb0:	mov	r6, r2
   2ddb4:	mov	r7, r1
   2ddb8:	mov	r1, #0
   2ddbc:	mov	r2, #232	; 0xe8
   2ddc0:	mov	r5, r3
   2ddc4:	mov	r4, r0
   2ddc8:	bl	14ef0 <memset@plt>
   2ddcc:	ldr	r0, [fp, #8]
   2ddd0:	cmp	r7, #0
   2ddd4:	bne	2ddec <flatcc_builder_custom_init@@Base+0x44>
   2ddd8:	movw	r7, #7200	; 0x1c20
   2dddc:	mov	r1, #1
   2dde0:	add	r6, r4, #188	; 0xbc
   2dde4:	movt	r7, #3
   2dde8:	str	r1, [r4, #184]	; 0xb8
   2ddec:	movw	r1, #56416	; 0xdc60
   2ddf0:	cmp	r5, #0
   2ddf4:	str	r6, [r4, #36]	; 0x24
   2ddf8:	str	r0, [r4, #40]	; 0x28
   2ddfc:	mov	r0, #0
   2de00:	str	r7, [r4, #44]	; 0x2c
   2de04:	movt	r1, #2
   2de08:	movne	r1, r5
   2de0c:	str	r1, [r4, #48]	; 0x30
   2de10:	pop	{r4, r5, r6, r7, fp, pc}

0002de14 <flatcc_builder_init@@Base>:
   2de14:	push	{r4, r5, fp, lr}
   2de18:	add	fp, sp, #8
   2de1c:	mov	r1, #0
   2de20:	mov	r2, #232	; 0xe8
   2de24:	mov	r4, r0
   2de28:	mov	r5, #0
   2de2c:	bl	14ef0 <memset@plt>
   2de30:	mov	r0, #1
   2de34:	movw	r2, #7200	; 0x1c20
   2de38:	add	r1, r4, #188	; 0xbc
   2de3c:	str	r0, [r4, #184]	; 0xb8
   2de40:	movw	r0, #56416	; 0xdc60
   2de44:	movt	r2, #3
   2de48:	str	r1, [r4, #36]	; 0x24
   2de4c:	str	r5, [r4, #40]	; 0x28
   2de50:	movt	r0, #2
   2de54:	str	r2, [r4, #44]	; 0x2c
   2de58:	str	r0, [r4, #48]	; 0x30
   2de5c:	mov	r0, #0
   2de60:	pop	{r4, r5, fp, pc}

0002de64 <flatcc_builder_custom_reset@@Base>:
   2de64:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2de68:	add	fp, sp, #24
   2de6c:	sub	sp, sp, #8
   2de70:	mov	r9, r2
   2de74:	mov	r8, r1
   2de78:	mov	r4, r0
   2de7c:	add	r7, r0, #52	; 0x34
   2de80:	mov	r5, #0
   2de84:	ldr	r0, [r7]
   2de88:	cmp	r0, #0
   2de8c:	beq	2ded4 <flatcc_builder_custom_reset@@Base+0x70>
   2de90:	cmp	r9, #0
   2de94:	cmpne	r5, #5
   2de98:	beq	2dec4 <flatcc_builder_custom_reset@@Base+0x60>
   2de9c:	ldr	r0, [r4, #40]	; 0x28
   2dea0:	ldr	r6, [r4, #48]	; 0x30
   2dea4:	mov	r1, r7
   2dea8:	mov	r2, #1
   2deac:	mov	r3, #1
   2deb0:	str	r5, [sp]
   2deb4:	blx	r6
   2deb8:	cmp	r0, #0
   2debc:	bne	2df74 <flatcc_builder_custom_reset@@Base+0x110>
   2dec0:	ldr	r0, [r7]
   2dec4:	ldr	r2, [r7, #4]
   2dec8:	mov	r1, #0
   2decc:	bl	14ef0 <memset@plt>
   2ded0:	b	2dee0 <flatcc_builder_custom_reset@@Base+0x7c>
   2ded4:	ldr	r0, [r7, #4]
   2ded8:	cmp	r0, #0
   2dedc:	bne	2df84 <flatcc_builder_custom_reset@@Base+0x120>
   2dee0:	add	r5, r5, #1
   2dee4:	add	r7, r7, #8
   2dee8:	cmp	r5, #8
   2deec:	bcc	2de84 <flatcc_builder_custom_reset@@Base+0x20>
   2def0:	mov	r0, #0
   2def4:	vmov.i32	q8, #0	; 0x00000000
   2def8:	mov	r5, #0
   2defc:	str	r0, [r4, #120]	; 0x78
   2df00:	ldr	r1, [r4, #124]	; 0x7c
   2df04:	cmp	r1, #0
   2df08:	movne	r1, #16
   2df0c:	strne	r1, [r4, #124]	; 0x7c
   2df10:	add	r1, r4, #148	; 0x94
   2df14:	strh	r0, [r4, #128]	; 0x80
   2df18:	str	r0, [r4, #136]	; 0x88
   2df1c:	str	r0, [r4, #140]	; 0x8c
   2df20:	str	r0, [r4, #32]
   2df24:	cmp	r8, #0
   2df28:	vst1.32	{d16-d17}, [r1]
   2df2c:	ldr	r2, [r4, #60]	; 0x3c
   2df30:	ldr	r1, [r4, #52]	; 0x34
   2df34:	ldr	r3, [r4, #76]	; 0x4c
   2df38:	str	r2, [r4, #16]
   2df3c:	str	r0, [r4, #20]
   2df40:	str	r0, [r4, #24]
   2df44:	movne	r0, #0
   2df48:	str	r3, [r4]
   2df4c:	str	r1, [r4, #4]
   2df50:	strne	r0, [r4, #172]	; 0xac
   2df54:	strne	r0, [r4, #176]	; 0xb0
   2df58:	strne	r0, [r4, #180]	; 0xb4
   2df5c:	ldr	r0, [r4, #184]	; 0xb8
   2df60:	cmp	r0, #0
   2df64:	beq	2df78 <flatcc_builder_custom_reset@@Base+0x114>
   2df68:	add	r0, r4, #188	; 0xbc
   2df6c:	bl	31af0 <flatcc_emitter_reset@@Base>
   2df70:	b	2df78 <flatcc_builder_custom_reset@@Base+0x114>
   2df74:	mvn	r5, #0
   2df78:	mov	r0, r5
   2df7c:	sub	sp, fp, #24
   2df80:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2df84:	movw	r0, #29316	; 0x7284
   2df88:	movw	r1, #29334	; 0x7296
   2df8c:	movw	r3, #29404	; 0x72dc
   2df90:	movw	r2, #434	; 0x1b2
   2df94:	movt	r0, #4
   2df98:	movt	r1, #4
   2df9c:	movt	r3, #4
   2dfa0:	bl	14f44 <__assert_fail@plt>

0002dfa4 <flatcc_builder_reset@@Base>:
   2dfa4:	mov	r1, #0
   2dfa8:	mov	r2, #0
   2dfac:	b	2de64 <flatcc_builder_custom_reset@@Base>

0002dfb0 <flatcc_builder_clear@@Base>:
   2dfb0:	push	{r4, r5, r6, r7, fp, lr}
   2dfb4:	add	fp, sp, #16
   2dfb8:	sub	sp, sp, #8
   2dfbc:	mov	r7, r0
   2dfc0:	add	r5, r0, #52	; 0x34
   2dfc4:	mov	r6, #0
   2dfc8:	ldr	r0, [r7, #40]	; 0x28
   2dfcc:	ldr	r4, [r7, #48]	; 0x30
   2dfd0:	mov	r1, r5
   2dfd4:	mov	r2, #0
   2dfd8:	mov	r3, #0
   2dfdc:	str	r6, [sp]
   2dfe0:	blx	r4
   2dfe4:	add	r6, r6, #1
   2dfe8:	add	r5, r5, #8
   2dfec:	cmp	r6, #8
   2dff0:	bne	2dfc8 <flatcc_builder_clear@@Base+0x18>
   2dff4:	ldr	r0, [r7, #184]	; 0xb8
   2dff8:	cmp	r0, #0
   2dffc:	beq	2e008 <flatcc_builder_clear@@Base+0x58>
   2e000:	add	r0, r7, #188	; 0xbc
   2e004:	bl	31bbc <flatcc_emitter_clear@@Base>
   2e008:	mov	r0, r7
   2e00c:	mov	r1, #0
   2e010:	mov	r2, #232	; 0xe8
   2e014:	sub	sp, fp, #16
   2e018:	pop	{r4, r5, r6, r7, fp, lr}
   2e01c:	b	14ef0 <memset@plt>

0002e020 <flatcc_builder_enter_user_frame_ptr@@Base>:
   2e020:	push	{r4, r5, r6, r7, fp, lr}
   2e024:	add	fp, sp, #16
   2e028:	sub	sp, sp, #8
   2e02c:	mov	r4, r0
   2e030:	ldr	r0, [r0, #112]	; 0x70
   2e034:	add	r1, r1, #7
   2e038:	ldr	r7, [r4, #228]	; 0xe4
   2e03c:	bic	r5, r1, #3
   2e040:	add	r6, r4, #108	; 0x6c
   2e044:	add	r2, r7, r5
   2e048:	cmp	r2, r0
   2e04c:	bls	2e074 <flatcc_builder_enter_user_frame_ptr@@Base+0x54>
   2e050:	ldr	r0, [r4, #40]	; 0x28
   2e054:	ldr	ip, [r4, #48]	; 0x30
   2e058:	mov	r1, #7
   2e05c:	mov	r3, #0
   2e060:	str	r1, [sp]
   2e064:	mov	r1, r6
   2e068:	blx	ip
   2e06c:	cmp	r0, #0
   2e070:	bne	2e0c0 <flatcc_builder_enter_user_frame_ptr@@Base+0xa0>
   2e074:	ldr	r0, [r6]
   2e078:	adds	r6, r0, r7
   2e07c:	beq	2e0b0 <flatcc_builder_enter_user_frame_ptr@@Base+0x90>
   2e080:	mov	r0, r6
   2e084:	mov	r1, #0
   2e088:	mov	r2, r5
   2e08c:	bl	14ef0 <memset@plt>
   2e090:	ldr	r0, [r4, #224]	; 0xe0
   2e094:	str	r0, [r6], #4
   2e098:	ldr	r0, [r4, #228]	; 0xe4
   2e09c:	add	r1, r0, #4
   2e0a0:	add	r0, r0, r5
   2e0a4:	str	r1, [r4, #224]	; 0xe0
   2e0a8:	str	r0, [r4, #228]	; 0xe4
   2e0ac:	b	2e0b4 <flatcc_builder_enter_user_frame_ptr@@Base+0x94>
   2e0b0:	mov	r6, #0
   2e0b4:	mov	r0, r6
   2e0b8:	sub	sp, fp, #16
   2e0bc:	pop	{r4, r5, r6, r7, fp, pc}
   2e0c0:	movw	r0, #33852	; 0x843c
   2e0c4:	movw	r1, #29334	; 0x7296
   2e0c8:	movw	r3, #33398	; 0x8276
   2e0cc:	mov	r2, #308	; 0x134
   2e0d0:	movt	r0, #4
   2e0d4:	movt	r1, #4
   2e0d8:	movt	r3, #4
   2e0dc:	bl	14f44 <__assert_fail@plt>

0002e0e0 <flatcc_builder_enter_user_frame@@Base>:
   2e0e0:	push	{r4, r5, r6, r7, fp, lr}
   2e0e4:	add	fp, sp, #16
   2e0e8:	sub	sp, sp, #8
   2e0ec:	mov	r4, r0
   2e0f0:	ldr	r0, [r0, #112]	; 0x70
   2e0f4:	add	r1, r1, #7
   2e0f8:	ldr	r7, [r4, #228]	; 0xe4
   2e0fc:	bic	r5, r1, #3
   2e100:	add	r6, r4, #108	; 0x6c
   2e104:	add	r2, r7, r5
   2e108:	cmp	r2, r0
   2e10c:	bls	2e134 <flatcc_builder_enter_user_frame@@Base+0x54>
   2e110:	ldr	r0, [r4, #40]	; 0x28
   2e114:	ldr	ip, [r4, #48]	; 0x30
   2e118:	mov	r1, #7
   2e11c:	mov	r3, #0
   2e120:	str	r1, [sp]
   2e124:	mov	r1, r6
   2e128:	blx	ip
   2e12c:	cmp	r0, #0
   2e130:	bne	2e17c <flatcc_builder_enter_user_frame@@Base+0x9c>
   2e134:	ldr	r0, [r6]
   2e138:	adds	r6, r0, r7
   2e13c:	beq	2e170 <flatcc_builder_enter_user_frame@@Base+0x90>
   2e140:	mov	r0, r6
   2e144:	mov	r1, #0
   2e148:	mov	r2, r5
   2e14c:	bl	14ef0 <memset@plt>
   2e150:	ldr	r0, [r4, #224]	; 0xe0
   2e154:	str	r0, [r6]
   2e158:	ldr	r1, [r4, #228]	; 0xe4
   2e15c:	add	r0, r1, #4
   2e160:	add	r1, r1, r5
   2e164:	str	r0, [r4, #224]	; 0xe0
   2e168:	str	r1, [r4, #228]	; 0xe4
   2e16c:	b	2e174 <flatcc_builder_enter_user_frame@@Base+0x94>
   2e170:	mov	r0, #0
   2e174:	sub	sp, fp, #16
   2e178:	pop	{r4, r5, r6, r7, fp, pc}
   2e17c:	movw	r0, #33852	; 0x843c
   2e180:	movw	r1, #29334	; 0x7296
   2e184:	movw	r3, #33398	; 0x8276
   2e188:	mov	r2, #308	; 0x134
   2e18c:	movt	r0, #4
   2e190:	movt	r1, #4
   2e194:	movt	r3, #4
   2e198:	bl	14f44 <__assert_fail@plt>

0002e19c <flatcc_builder_exit_user_frame@@Base>:
   2e19c:	ldr	r1, [r0, #224]	; 0xe0
   2e1a0:	cmp	r1, #0
   2e1a4:	subne	r2, r1, #4
   2e1a8:	strne	r2, [r0, #228]	; 0xe4
   2e1ac:	ldrne	r2, [r0, #108]	; 0x6c
   2e1b0:	addne	r1, r2, r1
   2e1b4:	ldrne	r1, [r1, #-4]
   2e1b8:	strne	r1, [r0, #224]	; 0xe0
   2e1bc:	movne	r0, r1
   2e1c0:	bxne	lr
   2e1c4:	push	{fp, lr}
   2e1c8:	mov	fp, sp
   2e1cc:	movw	r0, #29466	; 0x731a
   2e1d0:	movw	r1, #29334	; 0x7296
   2e1d4:	movw	r3, #29491	; 0x7333
   2e1d8:	movw	r2, #542	; 0x21e
   2e1dc:	movt	r0, #4
   2e1e0:	movt	r1, #4
   2e1e4:	movt	r3, #4
   2e1e8:	bl	14f44 <__assert_fail@plt>

0002e1ec <flatcc_builder_exit_user_frame_at@@Base>:
   2e1ec:	ldr	r2, [r0, #224]	; 0xe0
   2e1f0:	cmp	r2, r1
   2e1f4:	bcc	2e200 <flatcc_builder_exit_user_frame_at@@Base+0x14>
   2e1f8:	str	r1, [r0, #224]	; 0xe0
   2e1fc:	b	2e19c <flatcc_builder_exit_user_frame@@Base>
   2e200:	push	{fp, lr}
   2e204:	mov	fp, sp
   2e208:	movw	r0, #29549	; 0x736d
   2e20c:	movw	r1, #29334	; 0x7296
   2e210:	movw	r3, #29580	; 0x738c
   2e214:	movw	r2, #551	; 0x227
   2e218:	movt	r0, #4
   2e21c:	movt	r1, #4
   2e220:	movt	r3, #4
   2e224:	bl	14f44 <__assert_fail@plt>

0002e228 <flatcc_builder_get_current_user_frame@@Base>:
   2e228:	ldr	r0, [r0, #224]	; 0xe0
   2e22c:	bx	lr

0002e230 <flatcc_builder_get_user_frame_ptr@@Base>:
   2e230:	ldr	r0, [r0, #108]	; 0x6c
   2e234:	add	r0, r0, r1
   2e238:	bx	lr

0002e23c <flatcc_builder_embed_buffer@@Base>:
   2e23c:	push	{r4, r5, r6, r7, fp, lr}
   2e240:	add	fp, sp, #16
   2e244:	sub	sp, sp, #88	; 0x58
   2e248:	mov	r4, r0
   2e24c:	ldr	r0, [fp, #8]
   2e250:	mov	r5, r3
   2e254:	mov	r7, r2
   2e258:	mov	r2, r1
   2e25c:	sub	r1, fp, #18
   2e260:	strh	r0, [fp, #-18]	; 0xffffffee
   2e264:	mov	r0, r4
   2e268:	ldr	r3, [r4, #152]	; 0x98
   2e26c:	cmp	r3, #0
   2e270:	movwne	r3, #1
   2e274:	bl	2e3ac <flatcc_builder_embed_buffer@@Base+0x170>
   2e278:	ldr	r1, [fp, #12]
   2e27c:	ldrh	r3, [fp, #-18]	; 0xffffffee
   2e280:	ldr	r0, [r4, #136]	; 0x88
   2e284:	mov	r2, #0
   2e288:	str	r2, [sp, #8]
   2e28c:	str	r2, [sp, #12]
   2e290:	and	r1, r1, #2
   2e294:	sub	r3, r3, #1
   2e298:	add	r1, r5, r1, lsl #1
   2e29c:	sub	r1, r0, r1
   2e2a0:	and	r3, r1, r3
   2e2a4:	add	r1, r3, r5
   2e2a8:	str	r1, [fp, #-24]	; 0xffffffe8
   2e2ac:	ldr	r1, [r4, #152]	; 0x98
   2e2b0:	cmp	r1, #0
   2e2b4:	mov	r1, #0
   2e2b8:	beq	2e2d8 <flatcc_builder_embed_buffer@@Base+0x9c>
   2e2bc:	sub	r1, fp, #24
   2e2c0:	mov	r2, #1
   2e2c4:	str	r1, [sp, #16]
   2e2c8:	mov	r1, #4
   2e2cc:	str	r1, [sp, #8]
   2e2d0:	str	r1, [sp, #20]
   2e2d4:	str	r2, [sp, #12]
   2e2d8:	cmp	r5, #0
   2e2dc:	beq	2e300 <flatcc_builder_embed_buffer@@Base+0xc4>
   2e2e0:	add	r6, sp, #8
   2e2e4:	add	r1, r1, r5
   2e2e8:	add	r6, r6, r2, lsl #3
   2e2ec:	add	r2, r2, #1
   2e2f0:	str	r1, [sp, #8]
   2e2f4:	str	r7, [r6, #8]
   2e2f8:	str	r5, [r6, #12]
   2e2fc:	str	r2, [sp, #12]
   2e300:	cmp	r3, #0
   2e304:	beq	2e330 <flatcc_builder_embed_buffer@@Base+0xf4>
   2e308:	add	r7, sp, #8
   2e30c:	movw	r6, #28804	; 0x7084
   2e310:	add	r1, r1, r3
   2e314:	add	r7, r7, r2, lsl #3
   2e318:	add	r2, r2, #1
   2e31c:	movt	r6, #4
   2e320:	str	r1, [sp, #8]
   2e324:	str	r6, [r7, #8]
   2e328:	str	r3, [r7, #12]
   2e32c:	str	r2, [sp, #12]
   2e330:	cmp	r1, #0
   2e334:	ble	2e38c <flatcc_builder_embed_buffer@@Base+0x150>
   2e338:	sub	r5, r0, r1
   2e33c:	ldr	r0, [r4, #36]	; 0x24
   2e340:	ldr	r7, [r4, #44]	; 0x2c
   2e344:	str	r1, [sp]
   2e348:	add	r1, sp, #8
   2e34c:	add	r1, r1, #8
   2e350:	mov	r3, r5
   2e354:	blx	r7
   2e358:	cmp	r0, #0
   2e35c:	streq	r5, [r4, #136]	; 0x88
   2e360:	moveq	r0, r5
   2e364:	subeq	sp, fp, #16
   2e368:	popeq	{r4, r5, r6, r7, fp, pc}
   2e36c:	movw	r0, #33852	; 0x843c
   2e370:	movw	r1, #29334	; 0x7296
   2e374:	movw	r3, #33531	; 0x82fb
   2e378:	movw	r2, #651	; 0x28b
   2e37c:	movt	r0, #4
   2e380:	movt	r1, #4
   2e384:	movt	r3, #4
   2e388:	bl	14f44 <__assert_fail@plt>
   2e38c:	movw	r0, #33852	; 0x843c
   2e390:	movw	r1, #29334	; 0x7296
   2e394:	movw	r3, #33531	; 0x82fb
   2e398:	movw	r2, #647	; 0x287
   2e39c:	movt	r0, #4
   2e3a0:	movt	r1, #4
   2e3a4:	movt	r3, #4
   2e3a8:	bl	14f44 <__assert_fail@plt>
   2e3ac:	push	{r4, sl, fp, lr}
   2e3b0:	add	fp, sp, #8
   2e3b4:	sub	sp, sp, #80	; 0x50
   2e3b8:	cmp	r2, #0
   2e3bc:	bne	2e3cc <flatcc_builder_embed_buffer@@Base+0x190>
   2e3c0:	ldrh	r2, [r0, #132]	; 0x84
   2e3c4:	cmp	r2, #0
   2e3c8:	movweq	r2, #1
   2e3cc:	ldrh	r4, [r1]
   2e3d0:	cmp	r4, #4
   2e3d4:	movwcc	r4, #4
   2e3d8:	cmpcs	r4, r2
   2e3dc:	bcs	2e3ec <flatcc_builder_embed_buffer@@Base+0x1b0>
   2e3e0:	cmp	r4, r2
   2e3e4:	movcc	r4, r2
   2e3e8:	strh	r4, [r1]
   2e3ec:	cmp	r3, #0
   2e3f0:	bne	2e464 <flatcc_builder_embed_buffer@@Base+0x228>
   2e3f4:	ldr	r4, [r0, #140]	; 0x8c
   2e3f8:	sub	r1, r2, #1
   2e3fc:	ands	r1, r4, r1
   2e400:	beq	2e464 <flatcc_builder_embed_buffer@@Base+0x228>
   2e404:	movw	r2, #28804	; 0x7084
   2e408:	cmn	r1, #1
   2e40c:	movt	r2, #4
   2e410:	str	r2, [sp, #16]
   2e414:	mov	r2, #1
   2e418:	str	r1, [sp, #8]
   2e41c:	str	r1, [sp, #20]
   2e420:	str	r2, [sp, #12]
   2e424:	add	r2, r1, r4
   2e428:	str	r2, [r0, #140]	; 0x8c
   2e42c:	ble	2e46c <flatcc_builder_embed_buffer@@Base+0x230>
   2e430:	ldr	r2, [r0, #36]	; 0x24
   2e434:	ldr	ip, [r0, #44]	; 0x2c
   2e438:	add	r0, sp, #8
   2e43c:	str	r1, [sp]
   2e440:	mov	r3, r4
   2e444:	add	r1, r0, #8
   2e448:	mov	r0, r2
   2e44c:	mov	r2, #1
   2e450:	blx	ip
   2e454:	cmp	r0, #0
   2e458:	bne	2e48c <flatcc_builder_embed_buffer@@Base+0x250>
   2e45c:	cmn	r4, #1
   2e460:	beq	2e4ac <flatcc_builder_embed_buffer@@Base+0x270>
   2e464:	sub	sp, fp, #8
   2e468:	pop	{r4, sl, fp, pc}
   2e46c:	movw	r0, #33852	; 0x843c
   2e470:	movw	r1, #29334	; 0x7296
   2e474:	movw	r3, #33719	; 0x83b7
   2e478:	movw	r2, #673	; 0x2a1
   2e47c:	movt	r0, #4
   2e480:	movt	r1, #4
   2e484:	movt	r3, #4
   2e488:	bl	14f44 <__assert_fail@plt>
   2e48c:	movw	r0, #33852	; 0x843c
   2e490:	movw	r1, #29334	; 0x7296
   2e494:	movw	r3, #33719	; 0x83b7
   2e498:	movw	r2, #677	; 0x2a5
   2e49c:	movt	r0, #4
   2e4a0:	movt	r1, #4
   2e4a4:	movt	r3, #4
   2e4a8:	bl	14f44 <__assert_fail@plt>
   2e4ac:	movw	r0, #33852	; 0x843c
   2e4b0:	movw	r1, #29334	; 0x7296
   2e4b4:	movw	r3, #33465	; 0x82b9
   2e4b8:	movw	r2, #702	; 0x2be
   2e4bc:	movt	r0, #4
   2e4c0:	movt	r1, #4
   2e4c4:	movt	r3, #4
   2e4c8:	bl	14f44 <__assert_fail@plt>

0002e4cc <flatcc_builder_create_buffer@@Base>:
   2e4cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e4d0:	add	fp, sp, #28
   2e4d4:	sub	sp, sp, #100	; 0x64
   2e4d8:	ldr	r8, [fp, #12]
   2e4dc:	mov	r4, r0
   2e4e0:	ldr	r0, [fp, #8]
   2e4e4:	mov	r7, r1
   2e4e8:	mov	r5, #0
   2e4ec:	mov	r9, r3
   2e4f0:	sub	r1, fp, #30
   2e4f4:	str	r5, [sp, #12]
   2e4f8:	and	r6, r8, #1
   2e4fc:	strh	r0, [fp, #-30]	; 0xffffffe2
   2e500:	mov	r0, r4
   2e504:	mov	r3, r6
   2e508:	bl	2e3ac <flatcc_builder_embed_buffer@@Base+0x170>
   2e50c:	ldrh	r0, [r4, #128]	; 0x80
   2e510:	ldrh	r1, [fp, #-30]	; 0xffffffe2
   2e514:	cmp	r0, r1
   2e518:	strhcc	r1, [r4, #128]	; 0x80
   2e51c:	cmp	r7, #0
   2e520:	stmib	sp, {r6, r9}
   2e524:	beq	2e540 <flatcc_builder_create_buffer@@Base+0x74>
   2e528:	ldr	r5, [r7]
   2e52c:	cmp	r5, #0
   2e530:	str	r5, [sp, #12]
   2e534:	movwne	r5, #1
   2e538:	lsl	r7, r5, #2
   2e53c:	b	2e544 <flatcc_builder_create_buffer@@Base+0x78>
   2e540:	mov	r7, #0
   2e544:	ldr	r9, [r4, #136]	; 0x88
   2e548:	mov	sl, #4
   2e54c:	mvn	r6, #3
   2e550:	mov	r3, #0
   2e554:	ands	ip, r8, #3
   2e558:	and	r2, sl, r8, lsl #1
   2e55c:	str	r3, [sp, #20]
   2e560:	str	r3, [sp, #16]
   2e564:	sub	r2, r6, r2
   2e568:	sub	r6, r1, #1
   2e56c:	mov	r1, #4
   2e570:	add	r2, r2, r9
   2e574:	sub	r2, r2, r7
   2e578:	beq	2e59c <flatcc_builder_create_buffer@@Base+0xd0>
   2e57c:	sub	r1, fp, #40	; 0x28
   2e580:	mov	r3, #1
   2e584:	str	r1, [sp, #24]
   2e588:	mov	r1, #4
   2e58c:	str	r1, [sp, #16]
   2e590:	str	r1, [sp, #28]
   2e594:	mov	r1, #8
   2e598:	str	r3, [sp, #20]
   2e59c:	add	lr, sp, #16
   2e5a0:	and	r6, r2, r6
   2e5a4:	sub	r0, fp, #36	; 0x24
   2e5a8:	str	r1, [sp, #16]
   2e5ac:	cmp	r5, #0
   2e5b0:	add	r2, lr, r3, lsl #3
   2e5b4:	str	r0, [r2, #8]
   2e5b8:	str	sl, [r2, #12]
   2e5bc:	add	r2, r3, #1
   2e5c0:	str	r2, [sp, #20]
   2e5c4:	beq	2e5e8 <flatcc_builder_create_buffer@@Base+0x11c>
   2e5c8:	add	r1, r1, r7
   2e5cc:	add	r0, lr, r2, lsl #3
   2e5d0:	add	r2, sp, #12
   2e5d4:	str	r1, [sp, #16]
   2e5d8:	str	r2, [r0, #8]
   2e5dc:	orr	r2, r3, #2
   2e5e0:	str	r7, [r0, #12]
   2e5e4:	str	r2, [sp, #20]
   2e5e8:	cmp	r6, #0
   2e5ec:	beq	2e614 <flatcc_builder_create_buffer@@Base+0x148>
   2e5f0:	movw	r3, #28804	; 0x7084
   2e5f4:	add	r1, r1, r6
   2e5f8:	add	r0, lr, r2, lsl #3
   2e5fc:	add	r2, r2, #1
   2e600:	movt	r3, #4
   2e604:	str	r1, [sp, #16]
   2e608:	str	r3, [r0, #8]
   2e60c:	str	r6, [r0, #12]
   2e610:	str	r2, [sp, #20]
   2e614:	ldr	r5, [sp, #4]
   2e618:	sub	r7, r9, r1
   2e61c:	cmp	ip, #0
   2e620:	mov	r6, #144	; 0x90
   2e624:	ldr	r3, [sp, #8]
   2e628:	mov	r0, r7
   2e62c:	addne	r0, r0, #4
   2e630:	cmp	r5, #0
   2e634:	sub	r3, r3, r0
   2e638:	movweq	r6, #140	; 0x8c
   2e63c:	cmp	r1, #0
   2e640:	ldr	r6, [r4, r6]
   2e644:	str	r3, [fp, #-36]	; 0xffffffdc
   2e648:	sub	r0, r6, r0
   2e64c:	str	r0, [fp, #-40]	; 0xffffffd8
   2e650:	ble	2e6a8 <flatcc_builder_create_buffer@@Base+0x1dc>
   2e654:	ldr	r0, [r4, #36]	; 0x24
   2e658:	ldr	r6, [r4, #44]	; 0x2c
   2e65c:	str	r1, [sp]
   2e660:	add	r1, lr, #8
   2e664:	mov	r3, r7
   2e668:	blx	r6
   2e66c:	cmp	r0, #0
   2e670:	bne	2e6c8 <flatcc_builder_create_buffer@@Base+0x1fc>
   2e674:	cmp	r7, #0
   2e678:	str	r7, [r4, #136]	; 0x88
   2e67c:	movne	r0, r7
   2e680:	subne	sp, fp, #28
   2e684:	popne	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e688:	movw	r0, #33852	; 0x843c
   2e68c:	movw	r1, #29334	; 0x7296
   2e690:	movw	r3, #29649	; 0x73d1
   2e694:	mov	r2, #772	; 0x304
   2e698:	movt	r0, #4
   2e69c:	movt	r1, #4
   2e6a0:	movt	r3, #4
   2e6a4:	bl	14f44 <__assert_fail@plt>
   2e6a8:	movw	r0, #33852	; 0x843c
   2e6ac:	movw	r1, #29334	; 0x7296
   2e6b0:	movw	r3, #33531	; 0x82fb
   2e6b4:	movw	r2, #647	; 0x287
   2e6b8:	movt	r0, #4
   2e6bc:	movt	r1, #4
   2e6c0:	movt	r3, #4
   2e6c4:	bl	14f44 <__assert_fail@plt>
   2e6c8:	movw	r0, #33852	; 0x843c
   2e6cc:	movw	r1, #29334	; 0x7296
   2e6d0:	movw	r3, #33531	; 0x82fb
   2e6d4:	movw	r2, #651	; 0x28b
   2e6d8:	movt	r0, #4
   2e6dc:	movt	r1, #4
   2e6e0:	movt	r3, #4
   2e6e4:	bl	14f44 <__assert_fail@plt>

0002e6e8 <flatcc_builder_create_struct@@Base>:
   2e6e8:	push	{r4, r5, r6, sl, fp, lr}
   2e6ec:	add	fp, sp, #16
   2e6f0:	sub	sp, sp, #80	; 0x50
   2e6f4:	cmp	r3, #0
   2e6f8:	beq	2e7d0 <flatcc_builder_create_struct@@Base+0xe8>
   2e6fc:	mov	r5, r0
   2e700:	ldrh	r0, [r0, #128]	; 0x80
   2e704:	mov	r4, #0
   2e708:	cmp	r0, r3
   2e70c:	strhcc	r3, [r5, #128]	; 0x80
   2e710:	sub	r3, r3, #1
   2e714:	cmp	r2, #0
   2e718:	ldr	r0, [r5, #136]	; 0x88
   2e71c:	str	r4, [sp, #12]
   2e720:	str	r4, [sp, #8]
   2e724:	movne	r4, #1
   2e728:	strne	r1, [sp, #16]
   2e72c:	strne	r2, [sp, #8]
   2e730:	strne	r2, [sp, #20]
   2e734:	strne	r4, [sp, #12]
   2e738:	sub	r6, r0, r2
   2e73c:	and	r3, r6, r3
   2e740:	cmp	r3, #0
   2e744:	beq	2e770 <flatcc_builder_create_struct@@Base+0x88>
   2e748:	add	r1, sp, #8
   2e74c:	movw	r6, #28804	; 0x7084
   2e750:	add	r2, r3, r2
   2e754:	add	r1, r1, r4, lsl #3
   2e758:	add	r4, r4, #1
   2e75c:	movt	r6, #4
   2e760:	str	r2, [sp, #8]
   2e764:	str	r6, [r1, #8]
   2e768:	str	r3, [r1, #12]
   2e76c:	str	r4, [sp, #12]
   2e770:	cmp	r2, #0
   2e774:	ble	2e7f0 <flatcc_builder_create_struct@@Base+0x108>
   2e778:	sub	r6, r0, r2
   2e77c:	ldr	r0, [r5, #36]	; 0x24
   2e780:	ldr	ip, [r5, #44]	; 0x2c
   2e784:	add	r1, sp, #8
   2e788:	str	r2, [sp]
   2e78c:	mov	r2, r4
   2e790:	add	r1, r1, #8
   2e794:	mov	r3, r6
   2e798:	blx	ip
   2e79c:	cmp	r0, #0
   2e7a0:	streq	r6, [r5, #136]	; 0x88
   2e7a4:	moveq	r0, r6
   2e7a8:	subeq	sp, fp, #16
   2e7ac:	popeq	{r4, r5, r6, sl, fp, pc}
   2e7b0:	movw	r0, #33852	; 0x843c
   2e7b4:	movw	r1, #29334	; 0x7296
   2e7b8:	movw	r3, #33531	; 0x82fb
   2e7bc:	movw	r2, #651	; 0x28b
   2e7c0:	movt	r0, #4
   2e7c4:	movt	r1, #4
   2e7c8:	movt	r3, #4
   2e7cc:	bl	14f44 <__assert_fail@plt>
   2e7d0:	movw	r0, #29780	; 0x7454
   2e7d4:	movw	r1, #29334	; 0x7296
   2e7d8:	movw	r3, #29791	; 0x745f
   2e7dc:	movw	r2, #783	; 0x30f
   2e7e0:	movt	r0, #4
   2e7e4:	movt	r1, #4
   2e7e8:	movt	r3, #4
   2e7ec:	bl	14f44 <__assert_fail@plt>
   2e7f0:	movw	r0, #33852	; 0x843c
   2e7f4:	movw	r1, #29334	; 0x7296
   2e7f8:	movw	r3, #33531	; 0x82fb
   2e7fc:	movw	r2, #647	; 0x287
   2e800:	movt	r0, #4
   2e804:	movt	r1, #4
   2e808:	movt	r3, #4
   2e80c:	bl	14f44 <__assert_fail@plt>

0002e810 <flatcc_builder_start_buffer@@Base>:
   2e810:	push	{r4, r5, r6, r7, fp, lr}
   2e814:	add	fp, sp, #16
   2e818:	mov	r5, r1
   2e81c:	ldrh	r1, [r0, #128]	; 0x80
   2e820:	mov	r6, r3
   2e824:	mov	r7, r2
   2e828:	mov	r4, r0
   2e82c:	bl	2e8cc <flatcc_builder_start_buffer@@Base+0xbc>
   2e830:	mov	r1, r0
   2e834:	mvn	r0, #0
   2e838:	cmp	r1, #0
   2e83c:	popne	{r4, r5, r6, r7, fp, pc}
   2e840:	mov	r0, #1
   2e844:	cmp	r5, #0
   2e848:	strh	r0, [r4, #128]	; 0x80
   2e84c:	ldrh	r1, [r4, #132]	; 0x84
   2e850:	ldr	r2, [r4, #32]
   2e854:	strh	r1, [r2, #34]	; 0x22
   2e858:	strh	r7, [r4, #132]	; 0x84
   2e85c:	ldrh	r1, [r4, #164]	; 0xa4
   2e860:	ldr	r2, [r4, #32]
   2e864:	strh	r1, [r2, #32]
   2e868:	strh	r6, [r4, #164]	; 0xa4
   2e86c:	ldr	r1, [r4, #32]
   2e870:	ldr	r2, [r4, #144]	; 0x90
   2e874:	str	r2, [r1, #20]
   2e878:	ldr	r1, [r4, #32]
   2e87c:	ldr	r2, [r4, #152]	; 0x98
   2e880:	str	r2, [r1, #28]
   2e884:	ldr	r3, [r4, #148]	; 0x94
   2e888:	ldr	r1, [r4, #32]
   2e88c:	ldr	r2, [r4, #136]	; 0x88
   2e890:	ldr	r7, [r4, #168]	; 0xa8
   2e894:	add	r6, r3, #1
   2e898:	str	r2, [r4, #144]	; 0x90
   2e89c:	str	r6, [r4, #148]	; 0x94
   2e8a0:	str	r3, [r4, #152]	; 0x98
   2e8a4:	str	r7, [r1, #16]
   2e8a8:	movw	r1, #28804	; 0x7084
   2e8ac:	movt	r1, #4
   2e8b0:	movne	r1, r5
   2e8b4:	ldr	r1, [r1]
   2e8b8:	str	r1, [r4, #168]	; 0xa8
   2e8bc:	ldr	r1, [r4, #32]
   2e8c0:	strh	r0, [r1, #14]
   2e8c4:	mov	r0, #0
   2e8c8:	pop	{r4, r5, r6, r7, fp, pc}
   2e8cc:	push	{r4, r5, r6, r7, fp, lr}
   2e8d0:	add	fp, sp, #16
   2e8d4:	sub	sp, sp, #8
   2e8d8:	mov	r5, r1
   2e8dc:	ldr	r1, [r0, #156]	; 0x9c
   2e8e0:	ldr	r2, [r0, #160]	; 0xa0
   2e8e4:	mov	r4, r0
   2e8e8:	add	r0, r1, #1
   2e8ec:	cmp	r1, r2
   2e8f0:	str	r0, [r4, #156]	; 0x9c
   2e8f4:	bge	2e908 <flatcc_builder_start_buffer@@Base+0xf8>
   2e8f8:	ldr	r0, [r4, #32]
   2e8fc:	add	r0, r0, #36	; 0x24
   2e900:	str	r0, [r4, #32]
   2e904:	b	2e99c <flatcc_builder_start_buffer@@Base+0x18c>
   2e908:	ldr	r2, [r4, #176]	; 0xb0
   2e90c:	mvn	r6, #0
   2e910:	cmp	r2, #1
   2e914:	cmpge	r1, r2
   2e918:	bge	2e9d4 <flatcc_builder_start_buffer@@Base+0x1c4>
   2e91c:	add	r7, r0, r0, lsl #3
   2e920:	ldr	r0, [r4, #88]	; 0x58
   2e924:	lsl	r2, r7, #2
   2e928:	cmp	r2, r0
   2e92c:	bls	2e954 <flatcc_builder_start_buffer@@Base+0x144>
   2e930:	ldr	r0, [r4, #40]	; 0x28
   2e934:	ldr	ip, [r4, #48]	; 0x30
   2e938:	mov	r3, #4
   2e93c:	add	r1, r4, #84	; 0x54
   2e940:	str	r3, [sp]
   2e944:	mov	r3, #0
   2e948:	blx	ip
   2e94c:	cmp	r0, #0
   2e950:	bne	2e9e0 <flatcc_builder_start_buffer@@Base+0x1d0>
   2e954:	ldr	r1, [r4, #84]	; 0x54
   2e958:	mvn	r0, #35	; 0x23
   2e95c:	add	r0, r0, r7, lsl #2
   2e960:	adds	r0, r0, r1
   2e964:	str	r0, [r4, #32]
   2e968:	beq	2e9d4 <flatcc_builder_start_buffer@@Base+0x1c4>
   2e96c:	ldr	r1, [r4, #88]	; 0x58
   2e970:	movw	r3, #36409	; 0x8e39
   2e974:	ldr	r2, [r4, #176]	; 0xb0
   2e978:	movt	r3, #14563	; 0x38e3
   2e97c:	umull	r1, r3, r1, r3
   2e980:	lsr	r1, r3, #3
   2e984:	cmp	r2, r3, lsr #3
   2e988:	mov	r3, r1
   2e98c:	movlt	r3, r2
   2e990:	cmp	r2, #0
   2e994:	movle	r3, r1
   2e998:	str	r3, [r4, #160]	; 0xa0
   2e99c:	ldr	r1, [r4, #20]
   2e9a0:	mvn	r3, #3
   2e9a4:	mov	r6, #0
   2e9a8:	str	r1, [r0, #8]
   2e9ac:	ldrh	r2, [r4, #130]	; 0x82
   2e9b0:	strh	r2, [r0, #12]
   2e9b4:	strh	r5, [r4, #130]	; 0x82
   2e9b8:	ldr	r2, [r4, #28]
   2e9bc:	stm	r0, {r2, r3}
   2e9c0:	add	r0, r1, r2
   2e9c4:	str	r6, [r4, #20]
   2e9c8:	add	r0, r0, #7
   2e9cc:	bic	r0, r0, #7
   2e9d0:	str	r0, [r4, #28]
   2e9d4:	mov	r0, r6
   2e9d8:	sub	sp, fp, #16
   2e9dc:	pop	{r4, r5, r6, r7, fp, pc}
   2e9e0:	movw	r0, #33852	; 0x843c
   2e9e4:	movw	r1, #29334	; 0x7296
   2e9e8:	movw	r3, #33398	; 0x8276
   2e9ec:	mov	r2, #308	; 0x134
   2e9f0:	movt	r0, #4
   2e9f4:	movt	r1, #4
   2e9f8:	movt	r3, #4
   2e9fc:	bl	14f44 <__assert_fail@plt>

0002ea00 <flatcc_builder_end_buffer@@Base>:
   2ea00:	push	{r4, r5, r6, sl, fp, lr}
   2ea04:	add	fp, sp, #16
   2ea08:	sub	sp, sp, #8
   2ea0c:	mov	r4, r0
   2ea10:	ldr	r0, [r0, #32]
   2ea14:	ldrh	r0, [r0, #14]
   2ea18:	cmp	r0, #1
   2ea1c:	bne	2eb10 <flatcc_builder_end_buffer@@Base+0x110>
   2ea20:	mov	r3, r1
   2ea24:	ldr	r1, [r4, #152]	; 0x98
   2ea28:	ldrh	r0, [r4, #164]	; 0xa4
   2ea2c:	ldrh	r2, [r4, #132]	; 0x84
   2ea30:	cmp	r1, #0
   2ea34:	ldrh	r1, [r4, #128]	; 0x80
   2ea38:	and	r0, r0, #2
   2ea3c:	orrne	r0, r0, #1
   2ea40:	cmp	r1, r2
   2ea44:	movcc	r1, r2
   2ea48:	strhcc	r2, [r4, #128]	; 0x80
   2ea4c:	str	r0, [sp, #4]
   2ea50:	mov	r0, r4
   2ea54:	str	r1, [sp]
   2ea58:	add	r1, r4, #168	; 0xa8
   2ea5c:	bl	2e4cc <flatcc_builder_create_buffer@@Base>
   2ea60:	mov	r6, r0
   2ea64:	cmp	r0, #0
   2ea68:	beq	2eb04 <flatcc_builder_end_buffer@@Base+0x104>
   2ea6c:	ldr	r1, [r4, #32]
   2ea70:	ldr	r0, [r4, #16]
   2ea74:	ldr	r2, [r4, #20]
   2ea78:	ldr	r3, [r1, #20]
   2ea7c:	str	r3, [r4, #144]	; 0x90
   2ea80:	ldr	r3, [r1, #28]
   2ea84:	str	r3, [r4, #152]	; 0x98
   2ea88:	ldr	r3, [r1, #16]
   2ea8c:	str	r3, [r4, #168]	; 0xa8
   2ea90:	ldrh	r1, [r1, #32]
   2ea94:	strh	r1, [r4, #164]	; 0xa4
   2ea98:	mov	r1, #0
   2ea9c:	bl	14ef0 <memset@plt>
   2eaa0:	ldr	r0, [r4, #32]
   2eaa4:	ldr	r1, [r4, #60]	; 0x3c
   2eaa8:	ldr	r2, [r4, #64]	; 0x40
   2eaac:	ldr	r3, [r0, #8]
   2eab0:	str	r3, [r4, #20]
   2eab4:	ldr	r3, [r0]
   2eab8:	str	r3, [r4, #28]
   2eabc:	add	r1, r1, r3
   2eac0:	ldr	r5, [r0, #4]
   2eac4:	str	r1, [r4, #16]
   2eac8:	sub	r1, r2, r3
   2eacc:	cmp	r1, r5
   2ead0:	movhi	r1, r5
   2ead4:	str	r1, [r4, #24]
   2ead8:	ldrh	r1, [r4, #130]	; 0x82
   2eadc:	ldrh	r2, [r4, #128]	; 0x80
   2eae0:	cmp	r2, r1
   2eae4:	strhcc	r1, [r4, #128]	; 0x80
   2eae8:	ldrh	r1, [r0, #12]
   2eaec:	sub	r0, r0, #36	; 0x24
   2eaf0:	str	r0, [r4, #32]
   2eaf4:	strh	r1, [r4, #130]	; 0x82
   2eaf8:	ldr	r0, [r4, #156]	; 0x9c
   2eafc:	sub	r0, r0, #1
   2eb00:	str	r0, [r4, #156]	; 0x9c
   2eb04:	mov	r0, r6
   2eb08:	sub	sp, fp, #16
   2eb0c:	pop	{r4, r5, r6, sl, fp, pc}
   2eb10:	movw	r0, #29893	; 0x74c5
   2eb14:	movw	r1, #29334	; 0x7296
   2eb18:	movw	r3, #29937	; 0x74f1
   2eb1c:	movw	r2, #838	; 0x346
   2eb20:	movt	r0, #4
   2eb24:	movt	r1, #4
   2eb28:	movt	r3, #4
   2eb2c:	bl	14f44 <__assert_fail@plt>

0002eb30 <flatcc_builder_start_struct@@Base>:
   2eb30:	push	{r4, r5, r6, r7, fp, lr}
   2eb34:	add	fp, sp, #16
   2eb38:	mov	r6, r1
   2eb3c:	mov	r1, r2
   2eb40:	mov	r4, r0
   2eb44:	bl	2e8cc <flatcc_builder_start_buffer@@Base+0xbc>
   2eb48:	mov	r5, #0
   2eb4c:	cmp	r0, #0
   2eb50:	bne	2ebc0 <flatcc_builder_start_struct@@Base+0x90>
   2eb54:	ldr	r1, [r4, #32]
   2eb58:	mov	r0, #2
   2eb5c:	strh	r0, [r1, #14]
   2eb60:	ldr	r2, [r4, #28]
   2eb64:	ldr	r0, [r4, #60]	; 0x3c
   2eb68:	ldr	r3, [r4, #64]	; 0x40
   2eb6c:	add	r0, r0, r2
   2eb70:	sub	r2, r3, r2
   2eb74:	mvn	r3, #3
   2eb78:	cmn	r2, #4
   2eb7c:	str	r0, [r4, #16]
   2eb80:	movcs	r2, r3
   2eb84:	str	r2, [r4, #24]
   2eb88:	str	r3, [r1, #4]
   2eb8c:	ldr	r7, [r4, #20]
   2eb90:	add	r1, r7, r6
   2eb94:	cmp	r1, r2
   2eb98:	str	r1, [r4, #20]
   2eb9c:	bcc	2ebbc <flatcc_builder_start_struct@@Base+0x8c>
   2eba0:	add	r1, r1, #1
   2eba4:	mov	r0, r4
   2eba8:	mvn	r2, #3
   2ebac:	bl	31a1c <flatcc_builder_get_emit_context@@Base+0x8>
   2ebb0:	cmp	r0, #0
   2ebb4:	bne	2ebc0 <flatcc_builder_start_struct@@Base+0x90>
   2ebb8:	ldr	r0, [r4, #16]
   2ebbc:	add	r5, r0, r7
   2ebc0:	mov	r0, r5
   2ebc4:	pop	{r4, r5, r6, r7, fp, pc}

0002ebc8 <flatcc_builder_struct_edit@@Base>:
   2ebc8:	ldr	r0, [r0, #16]
   2ebcc:	bx	lr

0002ebd0 <flatcc_builder_end_struct@@Base>:
   2ebd0:	push	{r4, r5, fp, lr}
   2ebd4:	add	fp, sp, #8
   2ebd8:	mov	r4, r0
   2ebdc:	ldr	r0, [r0, #32]
   2ebe0:	ldrh	r0, [r0, #14]
   2ebe4:	cmp	r0, #2
   2ebe8:	bne	2ec88 <flatcc_builder_end_struct@@Base+0xb8>
   2ebec:	ldrh	r3, [r4, #130]	; 0x82
   2ebf0:	ldr	r1, [r4, #16]
   2ebf4:	ldr	r2, [r4, #20]
   2ebf8:	mov	r0, r4
   2ebfc:	bl	2e6e8 <flatcc_builder_create_struct@@Base>
   2ec00:	mov	r5, r0
   2ec04:	cmp	r0, #0
   2ec08:	beq	2ec80 <flatcc_builder_end_struct@@Base+0xb0>
   2ec0c:	ldr	r0, [r4, #16]
   2ec10:	ldr	r2, [r4, #20]
   2ec14:	mov	r1, #0
   2ec18:	bl	14ef0 <memset@plt>
   2ec1c:	ldr	r0, [r4, #32]
   2ec20:	ldr	r1, [r4, #60]	; 0x3c
   2ec24:	ldr	ip, [r4, #64]	; 0x40
   2ec28:	ldr	r3, [r0, #8]
   2ec2c:	str	r3, [r4, #20]
   2ec30:	ldr	r3, [r0]
   2ec34:	str	r3, [r4, #28]
   2ec38:	add	r1, r1, r3
   2ec3c:	ldr	r2, [r0, #4]
   2ec40:	str	r1, [r4, #16]
   2ec44:	sub	r1, ip, r3
   2ec48:	cmp	r1, r2
   2ec4c:	movhi	r1, r2
   2ec50:	str	r1, [r4, #24]
   2ec54:	ldrh	r1, [r4, #130]	; 0x82
   2ec58:	ldrh	r2, [r4, #128]	; 0x80
   2ec5c:	cmp	r2, r1
   2ec60:	strhcc	r1, [r4, #128]	; 0x80
   2ec64:	ldrh	r1, [r0, #12]
   2ec68:	sub	r0, r0, #36	; 0x24
   2ec6c:	str	r0, [r4, #32]
   2ec70:	strh	r1, [r4, #130]	; 0x82
   2ec74:	ldr	r0, [r4, #156]	; 0x9c
   2ec78:	sub	r0, r0, #1
   2ec7c:	str	r0, [r4, #156]	; 0x9c
   2ec80:	mov	r0, r5
   2ec84:	pop	{r4, r5, fp, pc}
   2ec88:	movw	r0, #30026	; 0x754a
   2ec8c:	movw	r1, #29334	; 0x7296
   2ec90:	movw	r3, #30070	; 0x7576
   2ec94:	mov	r2, #872	; 0x368
   2ec98:	movt	r0, #4
   2ec9c:	movt	r1, #4
   2eca0:	movt	r3, #4
   2eca4:	bl	14f44 <__assert_fail@plt>

0002eca8 <flatcc_builder_extend_vector@@Base>:
   2eca8:	push	{r4, r5, fp, lr}
   2ecac:	add	fp, sp, #8
   2ecb0:	mov	r4, r0
   2ecb4:	ldr	r0, [r0, #32]
   2ecb8:	ldr	r2, [r0, #20]
   2ecbc:	adds	r2, r2, r1
   2ecc0:	bcs	2ed20 <flatcc_builder_extend_vector@@Base+0x78>
   2ecc4:	ldr	r3, [r0, #24]
   2ecc8:	cmp	r2, r3
   2eccc:	bhi	2ed20 <flatcc_builder_extend_vector@@Base+0x78>
   2ecd0:	str	r2, [r0, #20]
   2ecd4:	ldr	r0, [r4, #32]
   2ecd8:	ldr	r5, [r4, #20]
   2ecdc:	ldr	r2, [r4, #24]
   2ece0:	ldr	r0, [r0, #16]
   2ece4:	mla	r0, r0, r1, r5
   2ece8:	cmp	r0, r2
   2ecec:	str	r0, [r4, #20]
   2ecf0:	bcc	2ed14 <flatcc_builder_extend_vector@@Base+0x6c>
   2ecf4:	add	r1, r0, #1
   2ecf8:	mov	r0, r4
   2ecfc:	mvn	r2, #3
   2ed00:	bl	31a1c <flatcc_builder_get_emit_context@@Base+0x8>
   2ed04:	mov	r1, r0
   2ed08:	mov	r0, #0
   2ed0c:	cmp	r1, #0
   2ed10:	popne	{r4, r5, fp, pc}
   2ed14:	ldr	r0, [r4, #16]
   2ed18:	add	r0, r0, r5
   2ed1c:	pop	{r4, r5, fp, pc}
   2ed20:	movw	r0, #33605	; 0x8345
   2ed24:	movw	r1, #29334	; 0x7296
   2ed28:	movw	r3, #33632	; 0x8360
   2ed2c:	mov	r2, #892	; 0x37c
   2ed30:	movt	r0, #4
   2ed34:	movt	r1, #4
   2ed38:	movt	r3, #4
   2ed3c:	bl	14f44 <__assert_fail@plt>

0002ed40 <flatcc_builder_vector_push@@Base>:
   2ed40:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2ed44:	add	fp, sp, #24
   2ed48:	mov	r5, r0
   2ed4c:	ldr	r0, [r0, #32]
   2ed50:	mov	r8, r1
   2ed54:	ldrh	r1, [r0, #14]
   2ed58:	cmp	r1, #4
   2ed5c:	bne	2ede0 <flatcc_builder_vector_push@@Base+0xa0>
   2ed60:	ldr	r1, [r0, #20]
   2ed64:	ldr	r2, [r0, #24]
   2ed68:	cmp	r1, r2
   2ed6c:	bhi	2ee00 <flatcc_builder_vector_push@@Base+0xc0>
   2ed70:	add	r1, r1, #1
   2ed74:	str	r1, [r0, #20]
   2ed78:	ldr	r0, [r5, #32]
   2ed7c:	ldr	r4, [r5, #20]
   2ed80:	ldr	r1, [r5, #24]
   2ed84:	ldr	r6, [r0, #16]
   2ed88:	add	r0, r4, r6
   2ed8c:	cmp	r0, r1
   2ed90:	str	r0, [r5, #20]
   2ed94:	bcc	2edb4 <flatcc_builder_vector_push@@Base+0x74>
   2ed98:	add	r1, r0, #1
   2ed9c:	mov	r0, r5
   2eda0:	mvn	r2, #3
   2eda4:	bl	31a1c <flatcc_builder_get_emit_context@@Base+0x8>
   2eda8:	mov	r7, #0
   2edac:	cmp	r0, #0
   2edb0:	bne	2edd8 <flatcc_builder_vector_push@@Base+0x98>
   2edb4:	ldr	r0, [r5, #16]
   2edb8:	adds	r7, r0, r4
   2edbc:	beq	2edd4 <flatcc_builder_vector_push@@Base+0x94>
   2edc0:	mov	r0, r7
   2edc4:	mov	r1, r8
   2edc8:	mov	r2, r6
   2edcc:	bl	14e60 <memcpy@plt>
   2edd0:	b	2edd8 <flatcc_builder_vector_push@@Base+0x98>
   2edd4:	mov	r7, #0
   2edd8:	mov	r0, r7
   2eddc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2ede0:	movw	r0, #30137	; 0x75b9
   2ede4:	movw	r1, #29334	; 0x7296
   2ede8:	movw	r3, #30181	; 0x75e5
   2edec:	movw	r2, #907	; 0x38b
   2edf0:	movt	r0, #4
   2edf4:	movt	r1, #4
   2edf8:	movt	r3, #4
   2edfc:	bl	14f44 <__assert_fail@plt>
   2ee00:	movw	r0, #30248	; 0x7628
   2ee04:	movw	r1, #29334	; 0x7296
   2ee08:	movw	r3, #30181	; 0x75e5
   2ee0c:	mov	r2, #908	; 0x38c
   2ee10:	movt	r0, #4
   2ee14:	movt	r1, #4
   2ee18:	movt	r3, #4
   2ee1c:	bl	14f44 <__assert_fail@plt>

0002ee20 <flatcc_builder_append_vector@@Base>:
   2ee20:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2ee24:	add	fp, sp, #24
   2ee28:	mov	r6, r0
   2ee2c:	ldr	r0, [r0, #32]
   2ee30:	mov	r8, r1
   2ee34:	ldrh	r1, [r0, #14]
   2ee38:	cmp	r1, #4
   2ee3c:	bne	2eee8 <flatcc_builder_append_vector@@Base+0xc8>
   2ee40:	ldr	r1, [r0, #20]
   2ee44:	mov	r9, r2
   2ee48:	adds	r1, r1, r2
   2ee4c:	bcs	2eec8 <flatcc_builder_append_vector@@Base+0xa8>
   2ee50:	ldr	r2, [r0, #24]
   2ee54:	cmp	r1, r2
   2ee58:	bhi	2eec8 <flatcc_builder_append_vector@@Base+0xa8>
   2ee5c:	str	r1, [r0, #20]
   2ee60:	ldr	r0, [r6, #32]
   2ee64:	ldr	r4, [r6, #20]
   2ee68:	ldr	r1, [r6, #24]
   2ee6c:	ldr	r5, [r0, #16]
   2ee70:	mla	r0, r5, r9, r4
   2ee74:	cmp	r0, r1
   2ee78:	str	r0, [r6, #20]
   2ee7c:	bcc	2ee9c <flatcc_builder_append_vector@@Base+0x7c>
   2ee80:	add	r1, r0, #1
   2ee84:	mov	r0, r6
   2ee88:	mvn	r2, #3
   2ee8c:	bl	31a1c <flatcc_builder_get_emit_context@@Base+0x8>
   2ee90:	mov	r7, #0
   2ee94:	cmp	r0, #0
   2ee98:	bne	2eec0 <flatcc_builder_append_vector@@Base+0xa0>
   2ee9c:	ldr	r0, [r6, #16]
   2eea0:	adds	r7, r0, r4
   2eea4:	beq	2eebc <flatcc_builder_append_vector@@Base+0x9c>
   2eea8:	mul	r2, r5, r9
   2eeac:	mov	r0, r7
   2eeb0:	mov	r1, r8
   2eeb4:	bl	14e60 <memcpy@plt>
   2eeb8:	b	2eec0 <flatcc_builder_append_vector@@Base+0xa0>
   2eebc:	mov	r7, #0
   2eec0:	mov	r0, r7
   2eec4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2eec8:	movw	r0, #33605	; 0x8345
   2eecc:	movw	r1, #29334	; 0x7296
   2eed0:	movw	r3, #33632	; 0x8360
   2eed4:	mov	r2, #892	; 0x37c
   2eed8:	movt	r0, #4
   2eedc:	movt	r1, #4
   2eee0:	movt	r3, #4
   2eee4:	bl	14f44 <__assert_fail@plt>
   2eee8:	movw	r0, #30137	; 0x75b9
   2eeec:	movw	r1, #29334	; 0x7296
   2eef0:	movw	r3, #30309	; 0x7665
   2eef4:	movw	r2, #915	; 0x393
   2eef8:	movt	r0, #4
   2eefc:	movt	r1, #4
   2ef00:	movt	r3, #4
   2ef04:	bl	14f44 <__assert_fail@plt>

0002ef08 <flatcc_builder_extend_offset_vector@@Base>:
   2ef08:	push	{r4, r5, fp, lr}
   2ef0c:	add	fp, sp, #8
   2ef10:	mov	r4, r0
   2ef14:	ldr	r0, [r0, #32]
   2ef18:	ldr	r2, [r0, #20]
   2ef1c:	adds	r2, r2, r1
   2ef20:	cmpcc	r2, #1073741824	; 0x40000000
   2ef24:	bcc	2ef48 <flatcc_builder_extend_offset_vector@@Base+0x40>
   2ef28:	movw	r0, #33605	; 0x8345
   2ef2c:	movw	r1, #29334	; 0x7296
   2ef30:	movw	r3, #33632	; 0x8360
   2ef34:	mov	r2, #892	; 0x37c
   2ef38:	movt	r0, #4
   2ef3c:	movt	r1, #4
   2ef40:	movt	r3, #4
   2ef44:	bl	14f44 <__assert_fail@plt>
   2ef48:	str	r2, [r0, #20]
   2ef4c:	ldr	r5, [r4, #20]
   2ef50:	ldr	r2, [r4, #24]
   2ef54:	add	r0, r5, r1, lsl #2
   2ef58:	cmp	r0, r2
   2ef5c:	str	r0, [r4, #20]
   2ef60:	bcc	2ef84 <flatcc_builder_extend_offset_vector@@Base+0x7c>
   2ef64:	add	r1, r0, #1
   2ef68:	mov	r0, r4
   2ef6c:	mvn	r2, #3
   2ef70:	bl	31a1c <flatcc_builder_get_emit_context@@Base+0x8>
   2ef74:	mov	r1, r0
   2ef78:	mov	r0, #0
   2ef7c:	cmp	r1, #0
   2ef80:	popne	{r4, r5, fp, pc}
   2ef84:	ldr	r0, [r4, #16]
   2ef88:	add	r0, r0, r5
   2ef8c:	pop	{r4, r5, fp, pc}

0002ef90 <flatcc_builder_offset_vector_push@@Base>:
   2ef90:	push	{r4, r5, r6, r7, fp, lr}
   2ef94:	add	fp, sp, #16
   2ef98:	mov	r6, r0
   2ef9c:	ldr	r0, [r0, #32]
   2efa0:	mov	r4, r1
   2efa4:	ldrh	r1, [r0, #14]
   2efa8:	cmp	r1, #5
   2efac:	bne	2f010 <flatcc_builder_offset_vector_push@@Base+0x80>
   2efb0:	ldr	r1, [r0, #20]
   2efb4:	mov	r5, #0
   2efb8:	cmn	r1, #-1073741823	; 0xc0000001
   2efbc:	beq	2f008 <flatcc_builder_offset_vector_push@@Base+0x78>
   2efc0:	add	r1, r1, #1
   2efc4:	str	r1, [r0, #20]
   2efc8:	ldr	r7, [r6, #20]
   2efcc:	ldr	r0, [r6, #24]
   2efd0:	add	r1, r7, #4
   2efd4:	cmp	r1, r0
   2efd8:	str	r1, [r6, #20]
   2efdc:	bcc	2eff8 <flatcc_builder_offset_vector_push@@Base+0x68>
   2efe0:	add	r1, r7, #5
   2efe4:	mov	r0, r6
   2efe8:	mvn	r2, #3
   2efec:	bl	31a1c <flatcc_builder_get_emit_context@@Base+0x8>
   2eff0:	cmp	r0, #0
   2eff4:	bne	2f008 <flatcc_builder_offset_vector_push@@Base+0x78>
   2eff8:	ldr	r0, [r6, #16]
   2effc:	adds	r0, r0, r7
   2f000:	movne	r5, r0
   2f004:	strne	r4, [r0]
   2f008:	mov	r0, r5
   2f00c:	pop	{r4, r5, r6, r7, fp, pc}
   2f010:	movw	r0, #30386	; 0x76b2
   2f014:	movw	r1, #29334	; 0x7296
   2f018:	movw	r3, #30437	; 0x76e5
   2f01c:	movw	r2, #934	; 0x3a6
   2f020:	movt	r0, #4
   2f024:	movt	r1, #4
   2f028:	movt	r3, #4
   2f02c:	bl	14f44 <__assert_fail@plt>

0002f030 <flatcc_builder_append_offset_vector@@Base>:
   2f030:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2f034:	add	fp, sp, #24
   2f038:	mov	r6, r0
   2f03c:	ldr	r0, [r0, #32]
   2f040:	mov	r8, r1
   2f044:	ldrh	r1, [r0, #14]
   2f048:	cmp	r1, #5
   2f04c:	bne	2f0e8 <flatcc_builder_append_offset_vector@@Base+0xb8>
   2f050:	ldr	r1, [r0, #20]
   2f054:	mov	r5, r2
   2f058:	adds	r1, r1, r2
   2f05c:	cmpcc	r1, #1073741824	; 0x40000000
   2f060:	bcc	2f084 <flatcc_builder_append_offset_vector@@Base+0x54>
   2f064:	movw	r0, #33605	; 0x8345
   2f068:	movw	r1, #29334	; 0x7296
   2f06c:	movw	r3, #33632	; 0x8360
   2f070:	mov	r2, #892	; 0x37c
   2f074:	movt	r0, #4
   2f078:	movt	r1, #4
   2f07c:	movt	r3, #4
   2f080:	bl	14f44 <__assert_fail@plt>
   2f084:	str	r1, [r0, #20]
   2f088:	ldr	r4, [r6, #20]
   2f08c:	ldr	r1, [r6, #24]
   2f090:	add	r0, r4, r5, lsl #2
   2f094:	cmp	r0, r1
   2f098:	str	r0, [r6, #20]
   2f09c:	bcc	2f0bc <flatcc_builder_append_offset_vector@@Base+0x8c>
   2f0a0:	add	r1, r0, #1
   2f0a4:	mov	r0, r6
   2f0a8:	mvn	r2, #3
   2f0ac:	bl	31a1c <flatcc_builder_get_emit_context@@Base+0x8>
   2f0b0:	mov	r7, #0
   2f0b4:	cmp	r0, #0
   2f0b8:	bne	2f0e0 <flatcc_builder_append_offset_vector@@Base+0xb0>
   2f0bc:	ldr	r0, [r6, #16]
   2f0c0:	adds	r7, r0, r4
   2f0c4:	beq	2f0dc <flatcc_builder_append_offset_vector@@Base+0xac>
   2f0c8:	lsl	r2, r5, #2
   2f0cc:	mov	r0, r7
   2f0d0:	mov	r1, r8
   2f0d4:	bl	14e60 <memcpy@plt>
   2f0d8:	b	2f0e0 <flatcc_builder_append_offset_vector@@Base+0xb0>
   2f0dc:	mov	r7, #0
   2f0e0:	mov	r0, r7
   2f0e4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2f0e8:	movw	r0, #30386	; 0x76b2
   2f0ec:	movw	r1, #29334	; 0x7296
   2f0f0:	movw	r3, #30535	; 0x7747
   2f0f4:	mov	r2, #948	; 0x3b4
   2f0f8:	movt	r0, #4
   2f0fc:	movt	r1, #4
   2f100:	movt	r3, #4
   2f104:	bl	14f44 <__assert_fail@plt>

0002f108 <flatcc_builder_extend_string@@Base>:
   2f108:	push	{r4, r5, fp, lr}
   2f10c:	add	fp, sp, #8
   2f110:	mov	r4, r0
   2f114:	ldr	r0, [r0, #32]
   2f118:	ldrh	r2, [r0, #14]
   2f11c:	cmp	r2, #6
   2f120:	bne	2f178 <flatcc_builder_extend_string@@Base+0x70>
   2f124:	ldr	r2, [r0, #20]
   2f128:	adds	r2, r2, r1
   2f12c:	bcs	2f198 <flatcc_builder_extend_string@@Base+0x90>
   2f130:	str	r2, [r0, #20]
   2f134:	ldr	r5, [r4, #20]
   2f138:	ldr	r2, [r4, #24]
   2f13c:	add	r0, r5, r1
   2f140:	cmp	r0, r2
   2f144:	str	r0, [r4, #20]
   2f148:	bcc	2f16c <flatcc_builder_extend_string@@Base+0x64>
   2f14c:	add	r1, r0, #1
   2f150:	mov	r0, r4
   2f154:	mvn	r2, #3
   2f158:	bl	31a1c <flatcc_builder_get_emit_context@@Base+0x8>
   2f15c:	mov	r1, r0
   2f160:	mov	r0, #0
   2f164:	cmp	r1, #0
   2f168:	popne	{r4, r5, fp, pc}
   2f16c:	ldr	r0, [r4, #16]
   2f170:	add	r0, r0, r5
   2f174:	pop	{r4, r5, fp, pc}
   2f178:	movw	r0, #30651	; 0x77bb
   2f17c:	movw	r1, #29334	; 0x7296
   2f180:	movw	r3, #30695	; 0x77e7
   2f184:	movw	r2, #957	; 0x3bd
   2f188:	movt	r0, #4
   2f18c:	movt	r1, #4
   2f190:	movt	r3, #4
   2f194:	bl	14f44 <__assert_fail@plt>
   2f198:	movw	r0, #33605	; 0x8345
   2f19c:	movw	r1, #29334	; 0x7296
   2f1a0:	movw	r3, #33632	; 0x8360
   2f1a4:	mov	r2, #892	; 0x37c
   2f1a8:	movt	r0, #4
   2f1ac:	movt	r1, #4
   2f1b0:	movt	r3, #4
   2f1b4:	bl	14f44 <__assert_fail@plt>

0002f1b8 <flatcc_builder_append_string@@Base>:
   2f1b8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2f1bc:	add	fp, sp, #24
   2f1c0:	mov	r6, r0
   2f1c4:	ldr	r0, [r0, #32]
   2f1c8:	mov	r8, r1
   2f1cc:	ldrh	r1, [r0, #14]
   2f1d0:	cmp	r1, #6
   2f1d4:	bne	2f24c <flatcc_builder_append_string@@Base+0x94>
   2f1d8:	ldr	r1, [r0, #20]
   2f1dc:	mov	r4, r2
   2f1e0:	adds	r1, r1, r2
   2f1e4:	bcs	2f26c <flatcc_builder_append_string@@Base+0xb4>
   2f1e8:	str	r1, [r0, #20]
   2f1ec:	ldr	r5, [r6, #20]
   2f1f0:	ldr	r1, [r6, #24]
   2f1f4:	add	r0, r5, r4
   2f1f8:	cmp	r0, r1
   2f1fc:	str	r0, [r6, #20]
   2f200:	bcc	2f220 <flatcc_builder_append_string@@Base+0x68>
   2f204:	add	r1, r0, #1
   2f208:	mov	r0, r6
   2f20c:	mvn	r2, #3
   2f210:	bl	31a1c <flatcc_builder_get_emit_context@@Base+0x8>
   2f214:	mov	r7, #0
   2f218:	cmp	r0, #0
   2f21c:	bne	2f244 <flatcc_builder_append_string@@Base+0x8c>
   2f220:	ldr	r0, [r6, #16]
   2f224:	adds	r7, r0, r5
   2f228:	beq	2f240 <flatcc_builder_append_string@@Base+0x88>
   2f22c:	mov	r0, r7
   2f230:	mov	r1, r8
   2f234:	mov	r2, r4
   2f238:	bl	14e60 <memcpy@plt>
   2f23c:	b	2f244 <flatcc_builder_append_string@@Base+0x8c>
   2f240:	mov	r7, #0
   2f244:	mov	r0, r7
   2f248:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2f24c:	movw	r0, #30651	; 0x77bb
   2f250:	movw	r1, #29334	; 0x7296
   2f254:	movw	r3, #30758	; 0x7826
   2f258:	movw	r2, #966	; 0x3c6
   2f25c:	movt	r0, #4
   2f260:	movt	r1, #4
   2f264:	movt	r3, #4
   2f268:	bl	14f44 <__assert_fail@plt>
   2f26c:	movw	r0, #33605	; 0x8345
   2f270:	movw	r1, #29334	; 0x7296
   2f274:	movw	r3, #33632	; 0x8360
   2f278:	mov	r2, #892	; 0x37c
   2f27c:	movt	r0, #4
   2f280:	movt	r1, #4
   2f284:	movt	r3, #4
   2f288:	bl	14f44 <__assert_fail@plt>

0002f28c <flatcc_builder_append_string_str@@Base>:
   2f28c:	push	{r4, r5, fp, lr}
   2f290:	add	fp, sp, #8
   2f294:	mov	r5, r0
   2f298:	mov	r0, r1
   2f29c:	mov	r4, r1
   2f2a0:	bl	14ecc <strlen@plt>
   2f2a4:	mov	r2, r0
   2f2a8:	mov	r0, r5
   2f2ac:	mov	r1, r4
   2f2b0:	pop	{r4, r5, fp, lr}
   2f2b4:	b	2f1b8 <flatcc_builder_append_string@@Base>

0002f2b8 <flatcc_builder_append_string_strn@@Base>:
   2f2b8:	push	{r4, r5, r6, sl, fp, lr}
   2f2bc:	add	fp, sp, #16
   2f2c0:	mov	r6, r0
   2f2c4:	mov	r5, r1
   2f2c8:	mov	r0, r1
   2f2cc:	mov	r1, #0
   2f2d0:	mov	r4, r2
   2f2d4:	bl	14f14 <memchr@plt>
   2f2d8:	cmp	r0, #0
   2f2dc:	mov	r1, r5
   2f2e0:	subne	r4, r0, r5
   2f2e4:	mov	r0, r6
   2f2e8:	mov	r2, r4
   2f2ec:	pop	{r4, r5, r6, sl, fp, lr}
   2f2f0:	b	2f1b8 <flatcc_builder_append_string@@Base>

0002f2f4 <flatcc_builder_truncate_vector@@Base>:
   2f2f4:	push	{fp, lr}
   2f2f8:	mov	fp, sp
   2f2fc:	ldr	r2, [r0, #32]
   2f300:	ldrh	r3, [r2, #14]
   2f304:	cmp	r3, #4
   2f308:	bne	2f350 <flatcc_builder_truncate_vector@@Base+0x5c>
   2f30c:	ldr	r3, [r2, #20]
   2f310:	cmp	r3, r1
   2f314:	bcc	2f370 <flatcc_builder_truncate_vector@@Base+0x7c>
   2f318:	sub	r3, r3, r1
   2f31c:	str	r3, [r2, #20]
   2f320:	ldr	r2, [r0, #32]
   2f324:	ldr	r3, [r0, #20]
   2f328:	ldr	ip, [r0, #16]
   2f32c:	ldr	r2, [r2, #16]
   2f330:	mls	r3, r2, r1, r3
   2f334:	mul	r2, r2, r1
   2f338:	mov	r1, #0
   2f33c:	str	r3, [r0, #20]
   2f340:	add	r0, ip, r3
   2f344:	bl	14ef0 <memset@plt>
   2f348:	mov	r0, #0
   2f34c:	pop	{fp, pc}
   2f350:	movw	r0, #30137	; 0x75b9
   2f354:	movw	r1, #29334	; 0x7296
   2f358:	movw	r3, #30835	; 0x7873
   2f35c:	movw	r2, #985	; 0x3d9
   2f360:	movt	r0, #4
   2f364:	movt	r1, #4
   2f368:	movt	r3, #4
   2f36c:	bl	14f44 <__assert_fail@plt>
   2f370:	movw	r0, #30898	; 0x78b2
   2f374:	movw	r1, #29334	; 0x7296
   2f378:	movw	r3, #30835	; 0x7873
   2f37c:	movw	r2, #986	; 0x3da
   2f380:	movt	r0, #4
   2f384:	movt	r1, #4
   2f388:	movt	r3, #4
   2f38c:	bl	14f44 <__assert_fail@plt>

0002f390 <flatcc_builder_truncate_offset_vector@@Base>:
   2f390:	push	{fp, lr}
   2f394:	mov	fp, sp
   2f398:	ldr	r2, [r0, #32]
   2f39c:	ldrh	r3, [r2, #14]
   2f3a0:	cmp	r3, #5
   2f3a4:	bne	2f3ec <flatcc_builder_truncate_offset_vector@@Base+0x5c>
   2f3a8:	ldr	r3, [r2, #20]
   2f3ac:	cmp	r3, r1
   2f3b0:	bcc	2f40c <flatcc_builder_truncate_offset_vector@@Base+0x7c>
   2f3b4:	sub	r3, r3, r1
   2f3b8:	str	r3, [r2, #20]
   2f3bc:	ldr	r2, [r0, #32]
   2f3c0:	ldr	r3, [r0, #20]
   2f3c4:	ldr	ip, [r0, #16]
   2f3c8:	ldr	r2, [r2, #16]
   2f3cc:	mls	r3, r2, r1, r3
   2f3d0:	mul	r2, r2, r1
   2f3d4:	mov	r1, #0
   2f3d8:	str	r3, [r0, #20]
   2f3dc:	add	r0, ip, r3
   2f3e0:	bl	14ef0 <memset@plt>
   2f3e4:	mov	r0, #0
   2f3e8:	pop	{fp, pc}
   2f3ec:	movw	r0, #30386	; 0x76b2
   2f3f0:	movw	r1, #29334	; 0x7296
   2f3f4:	movw	r3, #30934	; 0x78d6
   2f3f8:	movw	r2, #994	; 0x3e2
   2f3fc:	movt	r0, #4
   2f400:	movt	r1, #4
   2f404:	movt	r3, #4
   2f408:	bl	14f44 <__assert_fail@plt>
   2f40c:	movw	r0, #31004	; 0x791c
   2f410:	movw	r1, #29334	; 0x7296
   2f414:	movw	r3, #30934	; 0x78d6
   2f418:	movw	r2, #995	; 0x3e3
   2f41c:	movt	r0, #4
   2f420:	movt	r1, #4
   2f424:	movt	r3, #4
   2f428:	bl	14f44 <__assert_fail@plt>

0002f42c <flatcc_builder_truncate_string@@Base>:
   2f42c:	push	{fp, lr}
   2f430:	mov	fp, sp
   2f434:	mov	r2, r1
   2f438:	ldr	r1, [r0, #32]
   2f43c:	ldrh	r3, [r1, #14]
   2f440:	cmp	r3, #6
   2f444:	bne	2f480 <flatcc_builder_truncate_string@@Base+0x54>
   2f448:	ldr	r3, [r1, #20]
   2f44c:	cmp	r3, r2
   2f450:	bcc	2f4a0 <flatcc_builder_truncate_string@@Base+0x74>
   2f454:	sub	r3, r3, r2
   2f458:	str	r3, [r1, #20]
   2f45c:	ldr	r3, [r0, #20]
   2f460:	ldr	r1, [r0, #16]
   2f464:	sub	r3, r3, r2
   2f468:	str	r3, [r0, #20]
   2f46c:	add	r0, r1, r3
   2f470:	mov	r1, #0
   2f474:	bl	14ef0 <memset@plt>
   2f478:	mov	r0, #0
   2f47c:	pop	{fp, pc}
   2f480:	movw	r0, #30651	; 0x77bb
   2f484:	movw	r1, #29334	; 0x7296
   2f488:	movw	r3, #31063	; 0x7957
   2f48c:	movw	r2, #1003	; 0x3eb
   2f490:	movt	r0, #4
   2f494:	movt	r1, #4
   2f498:	movt	r3, #4
   2f49c:	bl	14f44 <__assert_fail@plt>
   2f4a0:	movw	r0, #31126	; 0x7996
   2f4a4:	movw	r1, #29334	; 0x7296
   2f4a8:	movw	r3, #31063	; 0x7957
   2f4ac:	mov	r2, #1004	; 0x3ec
   2f4b0:	movt	r0, #4
   2f4b4:	movt	r1, #4
   2f4b8:	movt	r3, #4
   2f4bc:	bl	14f44 <__assert_fail@plt>

0002f4c0 <flatcc_builder_start_vector@@Base>:
   2f4c0:	push	{r4, r5, r6, r7, fp, lr}
   2f4c4:	add	fp, sp, #16
   2f4c8:	mov	r7, #4
   2f4cc:	cmp	r2, #4
   2f4d0:	mov	r6, r1
   2f4d4:	mov	r5, r3
   2f4d8:	mov	r4, r0
   2f4dc:	movls	r2, r7
   2f4e0:	mov	r1, r2
   2f4e4:	bl	2e8cc <flatcc_builder_start_buffer@@Base+0xbc>
   2f4e8:	mov	r1, r0
   2f4ec:	mvn	r0, #0
   2f4f0:	cmp	r1, #0
   2f4f4:	popne	{r4, r5, r6, r7, fp, pc}
   2f4f8:	ldr	r0, [r4, #32]
   2f4fc:	str	r6, [r0, #16]
   2f500:	mov	r0, #0
   2f504:	ldr	r1, [r4, #32]
   2f508:	str	r0, [r1, #20]
   2f50c:	ldr	r1, [r4, #32]
   2f510:	str	r5, [r1, #24]
   2f514:	ldr	r1, [r4, #32]
   2f518:	strh	r7, [r1, #14]
   2f51c:	ldr	r2, [r4, #28]
   2f520:	ldr	r3, [r4, #60]	; 0x3c
   2f524:	ldr	r7, [r4, #64]	; 0x40
   2f528:	add	r3, r3, r2
   2f52c:	sub	r2, r7, r2
   2f530:	str	r3, [r4, #16]
   2f534:	mvn	r3, #3
   2f538:	cmn	r2, #4
   2f53c:	movcs	r2, r3
   2f540:	str	r2, [r4, #24]
   2f544:	str	r3, [r1, #4]
   2f548:	pop	{r4, r5, r6, r7, fp, pc}

0002f54c <flatcc_builder_start_offset_vector@@Base>:
   2f54c:	push	{r4, r5, fp, lr}
   2f550:	add	fp, sp, #8
   2f554:	mov	r1, #4
   2f558:	mov	r4, r0
   2f55c:	mov	r5, #4
   2f560:	bl	2e8cc <flatcc_builder_start_buffer@@Base+0xbc>
   2f564:	mov	r1, r0
   2f568:	mvn	r0, #0
   2f56c:	cmp	r1, #0
   2f570:	popne	{r4, r5, fp, pc}
   2f574:	ldr	r0, [r4, #32]
   2f578:	mov	r2, #5
   2f57c:	str	r5, [r0, #16]
   2f580:	mov	r0, #0
   2f584:	ldr	r1, [r4, #32]
   2f588:	str	r0, [r1, #20]
   2f58c:	ldr	r1, [r4, #32]
   2f590:	strh	r2, [r1, #14]
   2f594:	ldr	r2, [r4, #28]
   2f598:	ldr	r3, [r4, #60]	; 0x3c
   2f59c:	ldr	r5, [r4, #64]	; 0x40
   2f5a0:	add	r3, r3, r2
   2f5a4:	sub	r2, r5, r2
   2f5a8:	str	r3, [r4, #16]
   2f5ac:	mvn	r3, #3
   2f5b0:	cmn	r2, #4
   2f5b4:	movcs	r2, r3
   2f5b8:	str	r2, [r4, #24]
   2f5bc:	str	r3, [r1, #4]
   2f5c0:	pop	{r4, r5, fp, pc}

0002f5c4 <flatcc_builder_create_offset_vector@@Base>:
   2f5c4:	push	{r4, r5, r6, sl, fp, lr}
   2f5c8:	add	fp, sp, #16
   2f5cc:	mov	r6, r2
   2f5d0:	mov	r5, r1
   2f5d4:	mov	r4, r0
   2f5d8:	bl	2f54c <flatcc_builder_start_offset_vector@@Base>
   2f5dc:	cmp	r0, #0
   2f5e0:	beq	2f5ec <flatcc_builder_create_offset_vector@@Base+0x28>
   2f5e4:	mov	r0, #0
   2f5e8:	pop	{r4, r5, r6, sl, fp, pc}
   2f5ec:	mov	r0, r4
   2f5f0:	mov	r1, r6
   2f5f4:	bl	2ef08 <flatcc_builder_extend_offset_vector@@Base>
   2f5f8:	cmp	r0, #0
   2f5fc:	beq	2f5e4 <flatcc_builder_create_offset_vector@@Base+0x20>
   2f600:	lsl	r2, r6, #2
   2f604:	mov	r1, r5
   2f608:	bl	14e60 <memcpy@plt>
   2f60c:	mov	r0, r4
   2f610:	pop	{r4, r5, r6, sl, fp, lr}
   2f614:	b	2f618 <flatcc_builder_end_offset_vector@@Base>

0002f618 <flatcc_builder_end_offset_vector@@Base>:
   2f618:	push	{r4, r5, fp, lr}
   2f61c:	add	fp, sp, #8
   2f620:	mov	r4, r0
   2f624:	ldr	r0, [r0, #32]
   2f628:	ldrh	r1, [r0, #14]
   2f62c:	cmp	r1, #5
   2f630:	bne	2f6d0 <flatcc_builder_end_offset_vector@@Base+0xb8>
   2f634:	ldr	r2, [r0, #20]
   2f638:	ldr	r1, [r4, #16]
   2f63c:	mov	r0, r4
   2f640:	mov	r3, #0
   2f644:	bl	30638 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   2f648:	mov	r5, r0
   2f64c:	cmp	r0, #0
   2f650:	beq	2f6c8 <flatcc_builder_end_offset_vector@@Base+0xb0>
   2f654:	ldr	r0, [r4, #16]
   2f658:	ldr	r2, [r4, #20]
   2f65c:	mov	r1, #0
   2f660:	bl	14ef0 <memset@plt>
   2f664:	ldr	r0, [r4, #32]
   2f668:	ldr	r1, [r4, #60]	; 0x3c
   2f66c:	ldr	ip, [r4, #64]	; 0x40
   2f670:	ldr	r3, [r0, #8]
   2f674:	str	r3, [r4, #20]
   2f678:	ldr	r3, [r0]
   2f67c:	str	r3, [r4, #28]
   2f680:	add	r1, r1, r3
   2f684:	ldr	r2, [r0, #4]
   2f688:	str	r1, [r4, #16]
   2f68c:	sub	r1, ip, r3
   2f690:	cmp	r1, r2
   2f694:	movhi	r1, r2
   2f698:	str	r1, [r4, #24]
   2f69c:	ldrh	r1, [r4, #130]	; 0x82
   2f6a0:	ldrh	r2, [r4, #128]	; 0x80
   2f6a4:	cmp	r2, r1
   2f6a8:	strhcc	r1, [r4, #128]	; 0x80
   2f6ac:	ldrh	r1, [r0, #12]
   2f6b0:	sub	r0, r0, #36	; 0x24
   2f6b4:	str	r0, [r4, #32]
   2f6b8:	strh	r1, [r4, #130]	; 0x82
   2f6bc:	ldr	r0, [r4, #156]	; 0x9c
   2f6c0:	sub	r0, r0, #1
   2f6c4:	str	r0, [r4, #156]	; 0x9c
   2f6c8:	mov	r0, r5
   2f6cc:	pop	{r4, r5, fp, pc}
   2f6d0:	movw	r0, #30386	; 0x76b2
   2f6d4:	movw	r1, #29334	; 0x7296
   2f6d8:	movw	r3, #31969	; 0x7ce1
   2f6dc:	movw	r2, #1480	; 0x5c8
   2f6e0:	movt	r0, #4
   2f6e4:	movt	r1, #4
   2f6e8:	movt	r3, #4
   2f6ec:	bl	14f44 <__assert_fail@plt>

0002f6f0 <flatcc_builder_start_string@@Base>:
   2f6f0:	push	{r4, r5, fp, lr}
   2f6f4:	add	fp, sp, #8
   2f6f8:	mov	r1, #1
   2f6fc:	mov	r4, r0
   2f700:	mov	r5, #1
   2f704:	bl	2e8cc <flatcc_builder_start_buffer@@Base+0xbc>
   2f708:	mov	r1, r0
   2f70c:	mvn	r0, #0
   2f710:	cmp	r1, #0
   2f714:	popne	{r4, r5, fp, pc}
   2f718:	ldr	r0, [r4, #32]
   2f71c:	mov	r2, #6
   2f720:	str	r5, [r0, #16]
   2f724:	mov	r0, #0
   2f728:	ldr	r1, [r4, #32]
   2f72c:	str	r0, [r1, #20]
   2f730:	ldr	r1, [r4, #32]
   2f734:	strh	r2, [r1, #14]
   2f738:	ldr	r2, [r4, #28]
   2f73c:	ldr	r3, [r4, #60]	; 0x3c
   2f740:	ldr	r5, [r4, #64]	; 0x40
   2f744:	add	r3, r3, r2
   2f748:	sub	r2, r5, r2
   2f74c:	str	r3, [r4, #16]
   2f750:	mvn	r3, #3
   2f754:	cmn	r2, #4
   2f758:	movcs	r2, r3
   2f75c:	str	r2, [r4, #24]
   2f760:	str	r3, [r1, #4]
   2f764:	pop	{r4, r5, fp, pc}

0002f768 <flatcc_builder_reserve_table@@Base>:
   2f768:	push	{r4, r5, r6, sl, fp, lr}
   2f76c:	add	fp, sp, #16
   2f770:	sub	sp, sp, #8
   2f774:	cmn	r1, #1
   2f778:	ble	2f84c <flatcc_builder_reserve_table@@Base+0xe4>
   2f77c:	mov	r4, r0
   2f780:	ldr	r0, [r0, #32]
   2f784:	mov	r5, r1
   2f788:	ldr	r1, [r4, #56]	; 0x38
   2f78c:	ldrh	r2, [r0, #28]
   2f790:	ldr	r0, [r0, #16]
   2f794:	add	r6, r0, r2, lsl #1
   2f798:	add	r0, r6, r5, lsl #1
   2f79c:	add	r2, r0, #4
   2f7a0:	cmp	r2, r1
   2f7a4:	bls	2f7cc <flatcc_builder_reserve_table@@Base+0x64>
   2f7a8:	ldr	r0, [r4, #40]	; 0x28
   2f7ac:	ldr	ip, [r4, #48]	; 0x30
   2f7b0:	mov	r3, #0
   2f7b4:	add	r1, r4, #52	; 0x34
   2f7b8:	str	r3, [sp]
   2f7bc:	mov	r3, #1
   2f7c0:	blx	ip
   2f7c4:	cmp	r0, #0
   2f7c8:	bne	2f86c <flatcc_builder_reserve_table@@Base+0x104>
   2f7cc:	ldr	r0, [r4, #52]	; 0x34
   2f7d0:	adds	r0, r0, r6
   2f7d4:	str	r0, [r4, #4]
   2f7d8:	beq	2f840 <flatcc_builder_reserve_table@@Base+0xd8>
   2f7dc:	add	r0, r0, #4
   2f7e0:	lsl	r1, r5, #1
   2f7e4:	str	r0, [r4, #4]
   2f7e8:	ldr	r0, [r4, #32]
   2f7ec:	ldr	r3, [r4, #80]	; 0x50
   2f7f0:	ldr	r5, [r0, #20]
   2f7f4:	orr	r0, r1, #1
   2f7f8:	add	r2, r5, r0
   2f7fc:	cmp	r2, r3
   2f800:	bls	2f828 <flatcc_builder_reserve_table@@Base+0xc0>
   2f804:	ldr	r0, [r4, #40]	; 0x28
   2f808:	ldr	r6, [r4, #48]	; 0x30
   2f80c:	mov	r3, #3
   2f810:	add	r1, r4, #76	; 0x4c
   2f814:	str	r3, [sp]
   2f818:	mov	r3, #0
   2f81c:	blx	r6
   2f820:	cmp	r0, #0
   2f824:	bne	2f86c <flatcc_builder_reserve_table@@Base+0x104>
   2f828:	ldr	r0, [r4, #76]	; 0x4c
   2f82c:	adds	r0, r0, r5
   2f830:	str	r0, [r4]
   2f834:	mov	r0, #0
   2f838:	mvneq	r0, #0
   2f83c:	b	2f844 <flatcc_builder_reserve_table@@Base+0xdc>
   2f840:	mvn	r0, #0
   2f844:	sub	sp, fp, #16
   2f848:	pop	{r4, r5, r6, sl, fp, pc}
   2f84c:	movw	r0, #31225	; 0x79f9
   2f850:	movw	r1, #29334	; 0x7296
   2f854:	movw	r3, #31160	; 0x79b8
   2f858:	movw	r2, #1065	; 0x429
   2f85c:	movt	r0, #4
   2f860:	movt	r1, #4
   2f864:	movt	r3, #4
   2f868:	bl	14f44 <__assert_fail@plt>
   2f86c:	movw	r0, #33852	; 0x843c
   2f870:	movw	r1, #29334	; 0x7296
   2f874:	movw	r3, #33398	; 0x8276
   2f878:	mov	r2, #308	; 0x134
   2f87c:	movt	r0, #4
   2f880:	movt	r1, #4
   2f884:	movt	r3, #4
   2f888:	bl	14f44 <__assert_fail@plt>

0002f88c <flatcc_builder_start_table@@Base>:
   2f88c:	push	{r4, r5, r6, r7, fp, lr}
   2f890:	add	fp, sp, #16
   2f894:	sub	sp, sp, #8
   2f898:	mov	r6, r1
   2f89c:	mov	r1, #4
   2f8a0:	mov	r4, r0
   2f8a4:	bl	2e8cc <flatcc_builder_start_buffer@@Base+0xbc>
   2f8a8:	mvn	r5, #0
   2f8ac:	cmp	r0, #0
   2f8b0:	beq	2f8c0 <flatcc_builder_start_table@@Base+0x34>
   2f8b4:	mov	r0, r5
   2f8b8:	sub	sp, fp, #16
   2f8bc:	pop	{r4, r5, r6, r7, fp, pc}
   2f8c0:	mov	r1, r4
   2f8c4:	ldr	r2, [r4, #4]
   2f8c8:	ldr	r3, [r4, #32]
   2f8cc:	ldr	r0, [r1, #52]!	; 0x34
   2f8d0:	sub	r0, r2, r0
   2f8d4:	str	r0, [r3, #16]
   2f8d8:	ldr	r0, [r4]
   2f8dc:	ldr	r3, [r4, #76]	; 0x4c
   2f8e0:	ldr	r2, [r4, #32]
   2f8e4:	sub	r0, r0, r3
   2f8e8:	mov	r3, #0
   2f8ec:	str	r0, [r2, #20]
   2f8f0:	ldr	r0, [r4, #12]
   2f8f4:	ldr	r2, [r4, #32]
   2f8f8:	str	r0, [r2, #24]
   2f8fc:	ldr	r0, [r4, #32]
   2f900:	ldrh	r2, [r4, #8]
   2f904:	strh	r2, [r0, #28]
   2f908:	movw	r0, #15186	; 0x3b52
   2f90c:	strh	r3, [r4, #8]
   2f910:	mov	r2, #3
   2f914:	movt	r0, #12137	; 0x2f69
   2f918:	str	r0, [r4, #12]
   2f91c:	ldr	r0, [r4, #32]
   2f920:	strh	r2, [r0, #14]
   2f924:	ldrh	r2, [r0, #28]
   2f928:	ldr	r0, [r0, #16]
   2f92c:	add	r7, r0, r2, lsl #1
   2f930:	add	r0, r7, r6, lsl #1
   2f934:	add	r2, r0, #4
   2f938:	ldr	r0, [r4, #56]	; 0x38
   2f93c:	cmp	r2, r0
   2f940:	bls	2f960 <flatcc_builder_start_table@@Base+0xd4>
   2f944:	ldr	r0, [r4, #40]	; 0x28
   2f948:	ldr	ip, [r4, #48]	; 0x30
   2f94c:	str	r3, [sp]
   2f950:	mov	r3, #1
   2f954:	blx	ip
   2f958:	cmp	r0, #0
   2f95c:	bne	2fa04 <flatcc_builder_start_table@@Base+0x178>
   2f960:	ldr	r0, [r4, #52]	; 0x34
   2f964:	adds	r0, r0, r7
   2f968:	str	r0, [r4, #4]
   2f96c:	beq	2f8b4 <flatcc_builder_start_table@@Base+0x28>
   2f970:	add	r0, r0, #4
   2f974:	lsl	r1, r6, #1
   2f978:	str	r0, [r4, #4]
   2f97c:	ldr	r0, [r4, #32]
   2f980:	ldr	r3, [r4, #80]	; 0x50
   2f984:	ldr	r6, [r0, #20]
   2f988:	orr	r0, r1, #1
   2f98c:	add	r2, r6, r0
   2f990:	cmp	r2, r3
   2f994:	bls	2f9bc <flatcc_builder_start_table@@Base+0x130>
   2f998:	ldr	r0, [r4, #40]	; 0x28
   2f99c:	ldr	r7, [r4, #48]	; 0x30
   2f9a0:	mov	r3, #3
   2f9a4:	add	r1, r4, #76	; 0x4c
   2f9a8:	str	r3, [sp]
   2f9ac:	mov	r3, #0
   2f9b0:	blx	r7
   2f9b4:	cmp	r0, #0
   2f9b8:	bne	2fa04 <flatcc_builder_start_table@@Base+0x178>
   2f9bc:	ldr	r0, [r4, #76]	; 0x4c
   2f9c0:	adds	r0, r0, r6
   2f9c4:	str	r0, [r4]
   2f9c8:	beq	2f8b4 <flatcc_builder_start_table@@Base+0x28>
   2f9cc:	ldr	r0, [r4, #28]
   2f9d0:	ldr	r2, [r4, #60]	; 0x3c
   2f9d4:	ldr	r3, [r4, #64]	; 0x40
   2f9d8:	ldr	r1, [r4, #32]
   2f9dc:	mov	r5, #0
   2f9e0:	add	r2, r2, r0
   2f9e4:	sub	r0, r3, r0
   2f9e8:	str	r2, [r4, #16]
   2f9ec:	movw	r2, #65532	; 0xfffc
   2f9f0:	cmp	r0, r2
   2f9f4:	movcs	r0, r2
   2f9f8:	str	r0, [r4, #24]
   2f9fc:	str	r2, [r1, #4]
   2fa00:	b	2f8b4 <flatcc_builder_start_table@@Base+0x28>
   2fa04:	movw	r0, #33852	; 0x843c
   2fa08:	movw	r1, #29334	; 0x7296
   2fa0c:	movw	r3, #33398	; 0x8276
   2fa10:	mov	r2, #308	; 0x134
   2fa14:	movt	r0, #4
   2fa18:	movt	r1, #4
   2fa1c:	movt	r3, #4
   2fa20:	bl	14f44 <__assert_fail@plt>

0002fa24 <flatcc_builder_create_vtable@@Base>:
   2fa24:	push	{r4, r5, fp, lr}
   2fa28:	add	fp, sp, #8
   2fa2c:	sub	sp, sp, #80	; 0x50
   2fa30:	mov	r3, r2
   2fa34:	mov	r2, #0
   2fa38:	mov	r4, r0
   2fa3c:	cmp	r3, #0
   2fa40:	str	r2, [sp, #12]
   2fa44:	str	r2, [sp, #8]
   2fa48:	movne	r2, #1
   2fa4c:	strne	r1, [sp, #16]
   2fa50:	strne	r3, [sp, #8]
   2fa54:	strne	r3, [sp, #20]
   2fa58:	strne	r2, [sp, #12]
   2fa5c:	ldr	r0, [r4, #152]	; 0x98
   2fa60:	cmp	r0, #0
   2fa64:	bne	2fa74 <flatcc_builder_create_vtable@@Base+0x50>
   2fa68:	ldr	r0, [r4, #180]	; 0xb4
   2fa6c:	cmp	r0, #0
   2fa70:	beq	2fac4 <flatcc_builder_create_vtable@@Base+0xa0>
   2fa74:	cmp	r3, #0
   2fa78:	beq	2fb04 <flatcc_builder_create_vtable@@Base+0xe0>
   2fa7c:	ldr	r0, [r4, #136]	; 0x88
   2fa80:	ldr	ip, [r4, #44]	; 0x2c
   2fa84:	add	r1, sp, #8
   2fa88:	add	r1, r1, #8
   2fa8c:	sub	r5, r0, r3
   2fa90:	ldr	r0, [r4, #36]	; 0x24
   2fa94:	str	r3, [sp]
   2fa98:	mov	r3, r5
   2fa9c:	blx	ip
   2faa0:	cmp	r0, #0
   2faa4:	bne	2fb24 <flatcc_builder_create_vtable@@Base+0x100>
   2faa8:	cmp	r5, #0
   2faac:	str	r5, [r4, #136]	; 0x88
   2fab0:	beq	2fabc <flatcc_builder_create_vtable@@Base+0x98>
   2fab4:	add	r0, r5, #1
   2fab8:	b	2fafc <flatcc_builder_create_vtable@@Base+0xd8>
   2fabc:	mov	r0, #0
   2fac0:	b	2fafc <flatcc_builder_create_vtable@@Base+0xd8>
   2fac4:	ldr	r5, [r4, #140]	; 0x8c
   2fac8:	ldr	r0, [r4, #36]	; 0x24
   2facc:	ldr	ip, [r4, #44]	; 0x2c
   2fad0:	add	r1, r5, r3
   2fad4:	str	r1, [r4, #140]	; 0x8c
   2fad8:	add	r1, sp, #8
   2fadc:	str	r3, [sp]
   2fae0:	mov	r3, r5
   2fae4:	add	r1, r1, #8
   2fae8:	blx	ip
   2faec:	cmp	r0, #0
   2faf0:	bne	2fb44 <flatcc_builder_create_vtable@@Base+0x120>
   2faf4:	adds	r0, r5, #1
   2faf8:	moveq	r0, #0
   2fafc:	sub	sp, fp, #8
   2fb00:	pop	{r4, r5, fp, pc}
   2fb04:	movw	r0, #33852	; 0x843c
   2fb08:	movw	r1, #29334	; 0x7296
   2fb0c:	movw	r3, #33531	; 0x82fb
   2fb10:	movw	r2, #647	; 0x287
   2fb14:	movt	r0, #4
   2fb18:	movt	r1, #4
   2fb1c:	movt	r3, #4
   2fb20:	bl	14f44 <__assert_fail@plt>
   2fb24:	movw	r0, #33852	; 0x843c
   2fb28:	movw	r1, #29334	; 0x7296
   2fb2c:	movw	r3, #33531	; 0x82fb
   2fb30:	movw	r2, #651	; 0x28b
   2fb34:	movt	r0, #4
   2fb38:	movt	r1, #4
   2fb3c:	movt	r3, #4
   2fb40:	bl	14f44 <__assert_fail@plt>
   2fb44:	movw	r0, #33852	; 0x843c
   2fb48:	movw	r1, #29334	; 0x7296
   2fb4c:	movw	r3, #33719	; 0x83b7
   2fb50:	movw	r2, #677	; 0x2a5
   2fb54:	movt	r0, #4
   2fb58:	movt	r1, #4
   2fb5c:	movt	r3, #4
   2fb60:	bl	14f44 <__assert_fail@plt>

0002fb64 <flatcc_builder_create_cached_vtable@@Base>:
   2fb64:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2fb68:	add	fp, sp, #28
   2fb6c:	sub	sp, sp, #20
   2fb70:	mov	sl, r0
   2fb74:	ldr	r0, [r0, #116]	; 0x74
   2fb78:	mov	r8, r3
   2fb7c:	mov	r5, r2
   2fb80:	str	r1, [sp, #16]
   2fb84:	cmp	r0, #0
   2fb88:	beq	2fc2c <flatcc_builder_create_cached_vtable@@Base+0xc8>
   2fb8c:	ldr	r1, [sl, #92]	; 0x5c
   2fb90:	rsb	r0, r0, #32
   2fb94:	lsr	r0, r8, r0
   2fb98:	add	r6, r1, r0, lsl #2
   2fb9c:	cmp	r6, #0
   2fba0:	beq	2fcf0 <flatcc_builder_create_cached_vtable@@Base+0x18c>
   2fba4:	ldr	r7, [r6]
   2fba8:	str	r6, [sp, #12]
   2fbac:	cmp	r7, #0
   2fbb0:	beq	2fcf8 <flatcc_builder_create_cached_vtable@@Base+0x194>
   2fbb4:	ldr	r4, [sl, #68]	; 0x44
   2fbb8:	ldr	r8, [sl, #100]	; 0x64
   2fbbc:	mov	r0, #0
   2fbc0:	str	r0, [sp, #8]
   2fbc4:	add	r9, r8, r7
   2fbc8:	mov	r1, r4
   2fbcc:	ldr	r0, [r9, #8]
   2fbd0:	ldrh	r0, [r1, r0]!	; <UNPREDICTABLE>
   2fbd4:	cmp	r0, r5
   2fbd8:	bne	2fbf0 <flatcc_builder_create_cached_vtable@@Base+0x8c>
   2fbdc:	ldr	r0, [sp, #16]
   2fbe0:	mov	r2, r5
   2fbe4:	bl	14e6c <memcmp@plt>
   2fbe8:	cmp	r0, #0
   2fbec:	beq	2fc04 <flatcc_builder_create_cached_vtable@@Base+0xa0>
   2fbf0:	ldr	r7, [r9, #12]!
   2fbf4:	cmp	r7, #0
   2fbf8:	mov	r6, r9
   2fbfc:	bne	2fbc4 <flatcc_builder_create_cached_vtable@@Base+0x60>
   2fc00:	b	2fce8 <flatcc_builder_create_cached_vtable@@Base+0x184>
   2fc04:	ldr	r0, [sl, #152]	; 0x98
   2fc08:	ldr	r1, [r9, #4]
   2fc0c:	cmp	r1, r0
   2fc10:	beq	2fe5c <flatcc_builder_create_cached_vtable@@Base+0x2f8>
   2fc14:	mov	r6, r9
   2fc18:	mov	r0, r9
   2fc1c:	ldr	r7, [r6, #12]!
   2fc20:	cmp	r7, #0
   2fc24:	bne	2fbc0 <flatcc_builder_create_cached_vtable@@Base+0x5c>
   2fc28:	b	2fcfc <flatcc_builder_create_cached_vtable@@Base+0x198>
   2fc2c:	ldr	r0, [sl, #124]	; 0x7c
   2fc30:	cmp	r0, #0
   2fc34:	bne	2fea8 <flatcc_builder_create_cached_vtable@@Base+0x344>
   2fc38:	ldr	r0, [sl, #104]	; 0x68
   2fc3c:	add	r7, sl, #100	; 0x64
   2fc40:	cmp	r0, #15
   2fc44:	bhi	2fc70 <flatcc_builder_create_cached_vtable@@Base+0x10c>
   2fc48:	ldr	r0, [sl, #40]	; 0x28
   2fc4c:	ldr	r6, [sl, #48]	; 0x30
   2fc50:	mov	r1, #6
   2fc54:	mov	r2, #16
   2fc58:	mov	r3, #0
   2fc5c:	str	r1, [sp]
   2fc60:	mov	r1, r7
   2fc64:	blx	r6
   2fc68:	cmp	r0, #0
   2fc6c:	bne	2fe88 <flatcc_builder_create_cached_vtable@@Base+0x324>
   2fc70:	ldr	r0, [r7]
   2fc74:	mov	r7, #0
   2fc78:	cmp	r0, #0
   2fc7c:	beq	2fd9c <flatcc_builder_create_cached_vtable@@Base+0x238>
   2fc80:	mov	r0, #16
   2fc84:	mov	r2, #5
   2fc88:	add	r1, sl, #92	; 0x5c
   2fc8c:	mov	r3, #1
   2fc90:	mov	r4, #256	; 0x100
   2fc94:	str	r0, [sl, #124]	; 0x7c
   2fc98:	ldr	r0, [sl, #40]	; 0x28
   2fc9c:	ldr	r6, [sl, #48]	; 0x30
   2fca0:	str	r2, [sp]
   2fca4:	mov	r2, #256	; 0x100
   2fca8:	blx	r6
   2fcac:	cmp	r0, #0
   2fcb0:	bne	2fd9c <flatcc_builder_create_cached_vtable@@Base+0x238>
   2fcb4:	ldr	r0, [sl, #96]	; 0x60
   2fcb8:	mov	r1, r4
   2fcbc:	lsl	r4, r4, #1
   2fcc0:	cmp	r0, r1, lsl #1
   2fcc4:	bcs	2fcb8 <flatcc_builder_create_cached_vtable@@Base+0x154>
   2fcc8:	lsr	r1, r1, #2
   2fccc:	mvn	r0, #0
   2fcd0:	mov	r2, #1
   2fcd4:	add	r0, r0, #1
   2fcd8:	cmp	r1, r2, lsl r0
   2fcdc:	bhi	2fcd4 <flatcc_builder_create_cached_vtable@@Base+0x170>
   2fce0:	str	r0, [sl, #116]	; 0x74
   2fce4:	b	2fb8c <flatcc_builder_create_cached_vtable@@Base+0x28>
   2fce8:	ldr	r9, [sp, #8]
   2fcec:	b	2fcfc <flatcc_builder_create_cached_vtable@@Base+0x198>
   2fcf0:	mov	r7, #0
   2fcf4:	b	2fd9c <flatcc_builder_create_cached_vtable@@Base+0x238>
   2fcf8:	mov	r9, #0
   2fcfc:	ldr	r4, [sl, #124]	; 0x7c
   2fd00:	ldr	r0, [sl, #104]	; 0x68
   2fd04:	add	r7, sl, #100	; 0x64
   2fd08:	add	r2, r4, #16
   2fd0c:	cmp	r2, r0
   2fd10:	bls	2fd38 <flatcc_builder_create_cached_vtable@@Base+0x1d4>
   2fd14:	ldr	r0, [sl, #40]	; 0x28
   2fd18:	ldr	r6, [sl, #48]	; 0x30
   2fd1c:	mov	r1, #6
   2fd20:	mov	r3, #0
   2fd24:	str	r1, [sp]
   2fd28:	mov	r1, r7
   2fd2c:	blx	r6
   2fd30:	cmp	r0, #0
   2fd34:	bne	2fe88 <flatcc_builder_create_cached_vtable@@Base+0x324>
   2fd38:	ldr	r0, [r7]
   2fd3c:	mov	r7, #0
   2fd40:	adds	r4, r0, r4
   2fd44:	beq	2fd9c <flatcc_builder_create_cached_vtable@@Base+0x238>
   2fd48:	ldr	r0, [sl, #124]	; 0x7c
   2fd4c:	ldr	r1, [sl, #152]	; 0x98
   2fd50:	add	r2, r0, #16
   2fd54:	str	r2, [sl, #124]	; 0x7c
   2fd58:	ldr	r2, [sp, #12]
   2fd5c:	str	r1, [r4, #4]
   2fd60:	ldr	r1, [r2]
   2fd64:	str	r1, [r4, #12]
   2fd68:	ldr	r1, [sp, #16]
   2fd6c:	str	r0, [r2]
   2fd70:	mov	r0, sl
   2fd74:	mov	r2, r5
   2fd78:	bl	2fa24 <flatcc_builder_create_vtable@@Base>
   2fd7c:	cmp	r0, #0
   2fd80:	str	r0, [r4]
   2fd84:	beq	2fd9c <flatcc_builder_create_cached_vtable@@Base+0x238>
   2fd88:	cmp	r9, #0
   2fd8c:	beq	2fda8 <flatcc_builder_create_cached_vtable@@Base+0x244>
   2fd90:	ldr	r0, [r9, #8]
   2fd94:	str	r0, [r4, #8]
   2fd98:	ldr	r7, [r4]
   2fd9c:	mov	r0, r7
   2fda0:	sub	sp, fp, #28
   2fda4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2fda8:	ldr	r6, [sl, #120]	; 0x78
   2fdac:	ldr	r0, [sl, #172]	; 0xac
   2fdb0:	add	r2, r6, r5
   2fdb4:	cmp	r0, #0
   2fdb8:	beq	2fdf4 <flatcc_builder_create_cached_vtable@@Base+0x290>
   2fdbc:	cmp	r0, r2
   2fdc0:	bcs	2fdf4 <flatcc_builder_create_cached_vtable@@Base+0x290>
   2fdc4:	ldr	r0, [sl, #116]	; 0x74
   2fdc8:	cmp	r0, #0
   2fdcc:	beq	2fd98 <flatcc_builder_create_cached_vtable@@Base+0x234>
   2fdd0:	ldr	r0, [sl, #92]	; 0x5c
   2fdd4:	ldr	r2, [sl, #96]	; 0x60
   2fdd8:	mov	r1, #0
   2fddc:	mov	r5, #0
   2fde0:	bl	14ef0 <memset@plt>
   2fde4:	mov	r0, #16
   2fde8:	str	r5, [sl, #120]	; 0x78
   2fdec:	str	r0, [sl, #124]	; 0x7c
   2fdf0:	b	2fd98 <flatcc_builder_create_cached_vtable@@Base+0x234>
   2fdf4:	ldr	r0, [sl, #72]	; 0x48
   2fdf8:	add	r7, sl, #68	; 0x44
   2fdfc:	cmp	r2, r0
   2fe00:	bls	2fe28 <flatcc_builder_create_cached_vtable@@Base+0x2c4>
   2fe04:	ldr	r0, [sl, #40]	; 0x28
   2fe08:	ldr	ip, [sl, #48]	; 0x30
   2fe0c:	mov	r1, #2
   2fe10:	mov	r3, #0
   2fe14:	str	r1, [sp]
   2fe18:	mov	r1, r7
   2fe1c:	blx	ip
   2fe20:	cmp	r0, #0
   2fe24:	bne	2fe88 <flatcc_builder_create_cached_vtable@@Base+0x324>
   2fe28:	ldr	r0, [r7]
   2fe2c:	adds	r0, r0, r6
   2fe30:	beq	2fe54 <flatcc_builder_create_cached_vtable@@Base+0x2f0>
   2fe34:	ldr	r1, [sl, #120]	; 0x78
   2fe38:	mov	r2, r5
   2fe3c:	str	r1, [r4, #8]
   2fe40:	add	r1, r1, r5
   2fe44:	str	r1, [sl, #120]	; 0x78
   2fe48:	ldr	r1, [sp, #16]
   2fe4c:	bl	14e60 <memcpy@plt>
   2fe50:	b	2fd98 <flatcc_builder_create_cached_vtable@@Base+0x234>
   2fe54:	mvn	r7, #0
   2fe58:	b	2fd9c <flatcc_builder_create_cached_vtable@@Base+0x238>
   2fe5c:	ldr	r0, [sp, #12]
   2fe60:	cmp	r6, r0
   2fe64:	beq	2fe80 <flatcc_builder_create_cached_vtable@@Base+0x31c>
   2fe68:	mov	r1, r0
   2fe6c:	ldr	r0, [r9, #12]
   2fe70:	str	r0, [r6]
   2fe74:	ldr	r0, [r1]
   2fe78:	str	r0, [r9, #12]
   2fe7c:	str	r7, [r1]
   2fe80:	ldr	r7, [r9]
   2fe84:	b	2fd9c <flatcc_builder_create_cached_vtable@@Base+0x238>
   2fe88:	movw	r0, #33852	; 0x843c
   2fe8c:	movw	r1, #29334	; 0x7296
   2fe90:	movw	r3, #33398	; 0x8276
   2fe94:	mov	r2, #308	; 0x134
   2fe98:	movt	r0, #4
   2fe9c:	movt	r1, #4
   2fea0:	movt	r3, #4
   2fea4:	bl	14f44 <__assert_fail@plt>
   2fea8:	movw	r0, #33792	; 0x8400
   2feac:	movw	r1, #29334	; 0x7296
   2feb0:	movw	r3, #33807	; 0x840f
   2feb4:	movw	r2, #342	; 0x156
   2feb8:	movt	r0, #4
   2febc:	movt	r1, #4
   2fec0:	movt	r3, #4
   2fec4:	bl	14f44 <__assert_fail@plt>

0002fec8 <flatcc_builder_create_table@@Base>:
   2fec8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2fecc:	add	fp, sp, #24
   2fed0:	sub	sp, sp, #80	; 0x50
   2fed4:	ldr	r5, [fp, #12]
   2fed8:	cmn	r5, #1
   2fedc:	ble	30030 <flatcc_builder_create_table@@Base+0x168>
   2fee0:	ldr	ip, [fp, #16]
   2fee4:	tst	ip, #1
   2fee8:	beq	30050 <flatcc_builder_create_table@@Base+0x188>
   2feec:	mov	r8, r0
   2fef0:	ldrh	r0, [r0, #128]	; 0x80
   2fef4:	cmp	r3, #4
   2fef8:	movls	r3, #4
   2fefc:	cmp	r0, r3
   2ff00:	strhcc	r3, [r8, #128]	; 0x80
   2ff04:	sub	r3, r3, #1
   2ff08:	cmp	r5, #1
   2ff0c:	ldr	r4, [r8, #136]	; 0x88
   2ff10:	sub	r0, r4, r2
   2ff14:	and	r0, r0, r3
   2ff18:	add	r3, ip, r0
   2ff1c:	mvn	ip, #3
   2ff20:	sub	r6, ip, r2
   2ff24:	add	r4, r6, r4
   2ff28:	add	r6, r4, #1
   2ff2c:	sub	r3, r6, r3
   2ff30:	str	r3, [fp, #-28]	; 0xffffffe4
   2ff34:	blt	2ff60 <flatcc_builder_create_table@@Base+0x98>
   2ff38:	ldr	r3, [fp, #8]
   2ff3c:	sub	r6, r4, r0
   2ff40:	sub	r4, ip, r6
   2ff44:	ldrh	r6, [r3], #2
   2ff48:	subs	r5, r5, #1
   2ff4c:	ldr	r7, [r6, r1]
   2ff50:	add	r7, r4, r7
   2ff54:	sub	r7, r7, r6
   2ff58:	str	r7, [r6, r1]
   2ff5c:	bne	2ff44 <flatcc_builder_create_table@@Base+0x7c>
   2ff60:	sub	r3, fp, #28
   2ff64:	mov	r4, #4
   2ff68:	cmp	r2, #0
   2ff6c:	str	r3, [sp, #12]
   2ff70:	mov	r3, #1
   2ff74:	str	r4, [sp, #4]
   2ff78:	str	r4, [sp, #16]
   2ff7c:	str	r3, [sp, #8]
   2ff80:	beq	2ff9c <flatcc_builder_create_table@@Base+0xd4>
   2ff84:	mov	r3, #2
   2ff88:	add	r4, r2, #4
   2ff8c:	str	r1, [sp, #20]
   2ff90:	str	r2, [sp, #24]
   2ff94:	str	r3, [sp, #8]
   2ff98:	str	r4, [sp, #4]
   2ff9c:	cmp	r0, #0
   2ffa0:	beq	2ffcc <flatcc_builder_create_table@@Base+0x104>
   2ffa4:	add	r1, sp, #4
   2ffa8:	movw	r2, #28804	; 0x7084
   2ffac:	add	r4, r4, r0
   2ffb0:	add	r1, r1, r3, lsl #3
   2ffb4:	add	r3, r3, #1
   2ffb8:	movt	r2, #4
   2ffbc:	str	r4, [sp, #4]
   2ffc0:	str	r2, [r1, #8]
   2ffc4:	str	r0, [r1, #12]
   2ffc8:	str	r3, [sp, #8]
   2ffcc:	cmp	r4, #0
   2ffd0:	ble	30070 <flatcc_builder_create_table@@Base+0x1a8>
   2ffd4:	ldr	r0, [r8, #136]	; 0x88
   2ffd8:	ldr	r7, [r8, #44]	; 0x2c
   2ffdc:	add	r1, sp, #4
   2ffe0:	mov	r2, r3
   2ffe4:	add	r1, r1, #8
   2ffe8:	sub	r5, r0, r4
   2ffec:	ldr	r0, [r8, #36]	; 0x24
   2fff0:	str	r4, [sp]
   2fff4:	mov	r3, r5
   2fff8:	blx	r7
   2fffc:	cmp	r0, #0
   30000:	streq	r5, [r8, #136]	; 0x88
   30004:	moveq	r0, r5
   30008:	subeq	sp, fp, #24
   3000c:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   30010:	movw	r0, #33852	; 0x843c
   30014:	movw	r1, #29334	; 0x7296
   30018:	movw	r3, #33531	; 0x82fb
   3001c:	movw	r2, #651	; 0x28b
   30020:	movt	r0, #4
   30024:	movt	r1, #4
   30028:	movt	r3, #4
   3002c:	bl	14f44 <__assert_fail@plt>
   30030:	movw	r0, #31218	; 0x79f2
   30034:	movw	r1, #29334	; 0x7296
   30038:	movw	r3, #31236	; 0x7a04
   3003c:	movw	r2, #1237	; 0x4d5
   30040:	movt	r0, #4
   30044:	movt	r1, #4
   30048:	movt	r3, #4
   3004c:	bl	14f44 <__assert_fail@plt>
   30050:	movw	r0, #31392	; 0x7aa0
   30054:	movw	r1, #29334	; 0x7296
   30058:	movw	r3, #31236	; 0x7a04
   3005c:	movw	r2, #1243	; 0x4db
   30060:	movt	r0, #4
   30064:	movt	r1, #4
   30068:	movt	r3, #4
   3006c:	bl	14f44 <__assert_fail@plt>
   30070:	movw	r0, #33852	; 0x843c
   30074:	movw	r1, #29334	; 0x7296
   30078:	movw	r3, #33531	; 0x82fb
   3007c:	movw	r2, #647	; 0x287
   30080:	movt	r0, #4
   30084:	movt	r1, #4
   30088:	movt	r3, #4
   3008c:	bl	14f44 <__assert_fail@plt>

00030090 <flatcc_builder_check_required_field@@Base>:
   30090:	ldr	r2, [r0, #32]
   30094:	ldrh	r2, [r2, #14]
   30098:	cmp	r2, #3
   3009c:	bne	300cc <flatcc_builder_check_required_field@@Base+0x3c>
   300a0:	ldrh	r3, [r0, #8]
   300a4:	mov	r2, #0
   300a8:	cmp	r3, r1
   300ac:	bls	300c4 <flatcc_builder_check_required_field@@Base+0x34>
   300b0:	ldr	r0, [r0, #4]
   300b4:	add	r0, r0, r1, lsl #1
   300b8:	ldrh	r2, [r0]
   300bc:	cmp	r2, #0
   300c0:	movwne	r2, #1
   300c4:	mov	r0, r2
   300c8:	bx	lr
   300cc:	push	{fp, lr}
   300d0:	mov	fp, sp
   300d4:	movw	r0, #31403	; 0x7aab
   300d8:	movw	r1, #29334	; 0x7296
   300dc:	movw	r3, #31446	; 0x7ad6
   300e0:	movw	r2, #1272	; 0x4f8
   300e4:	movt	r0, #4
   300e8:	movt	r1, #4
   300ec:	movt	r3, #4
   300f0:	bl	14f44 <__assert_fail@plt>

000300f4 <flatcc_builder_check_union_field@@Base>:
   300f4:	mov	r2, r0
   300f8:	ldr	r0, [r0, #32]
   300fc:	ldrh	r0, [r0, #14]
   30100:	cmp	r0, #3
   30104:	bne	30164 <flatcc_builder_check_union_field@@Base+0x70>
   30108:	cmp	r1, #0
   3010c:	mov	r0, #0
   30110:	ldrhne	r3, [r2, #8]
   30114:	cmpne	r3, r1
   30118:	bhi	30120 <flatcc_builder_check_union_field@@Base+0x2c>
   3011c:	bx	lr
   30120:	ldr	r0, [r2, #4]
   30124:	add	r0, r0, r1, lsl #1
   30128:	ldrh	r1, [r0, #-2]
   3012c:	cmp	r1, #0
   30130:	beq	30154 <flatcc_builder_check_union_field@@Base+0x60>
   30134:	ldr	r2, [r2, #16]
   30138:	ldrh	r0, [r0]
   3013c:	ldrb	r1, [r2, r1]
   30140:	cmp	r1, #0
   30144:	beq	30158 <flatcc_builder_check_union_field@@Base+0x64>
   30148:	cmp	r0, #0
   3014c:	movwne	r0, #1
   30150:	bx	lr
   30154:	ldrh	r0, [r0]
   30158:	clz	r0, r0
   3015c:	lsr	r0, r0, #5
   30160:	bx	lr
   30164:	push	{fp, lr}
   30168:	mov	fp, sp
   3016c:	movw	r0, #31403	; 0x7aab
   30170:	movw	r1, #29334	; 0x7296
   30174:	movw	r3, #31529	; 0x7b29
   30178:	movw	r2, #1279	; 0x4ff
   3017c:	movt	r0, #4
   30180:	movt	r1, #4
   30184:	movt	r3, #4
   30188:	bl	14f44 <__assert_fail@plt>

0003018c <flatcc_builder_check_required@@Base>:
   3018c:	push	{fp, lr}
   30190:	mov	fp, sp
   30194:	mov	r3, r0
   30198:	ldr	r0, [r0, #32]
   3019c:	ldrh	r0, [r0, #14]
   301a0:	cmp	r0, #3
   301a4:	bne	301fc <flatcc_builder_check_required@@Base+0x70>
   301a8:	ldrh	ip, [r3, #8]
   301ac:	mov	r0, #0
   301b0:	cmp	ip, r2
   301b4:	movge	r0, #1
   301b8:	cmpge	r2, #1
   301bc:	bge	301c4 <flatcc_builder_check_required@@Base+0x38>
   301c0:	pop	{fp, pc}
   301c4:	ldr	ip, [r3, #4]
   301c8:	mov	lr, #0
   301cc:	b	301e0 <flatcc_builder_check_required@@Base+0x54>
   301d0:	add	lr, lr, #1
   301d4:	add	r1, r1, #2
   301d8:	cmp	lr, r2
   301dc:	popge	{fp, pc}
   301e0:	ldrh	r3, [r1]
   301e4:	add	r3, ip, r3, lsl #1
   301e8:	ldrh	r3, [r3]
   301ec:	cmp	r3, #0
   301f0:	bne	301d0 <flatcc_builder_check_required@@Base+0x44>
   301f4:	mov	r0, #0
   301f8:	pop	{fp, pc}
   301fc:	movw	r0, #31403	; 0x7aab
   30200:	movw	r1, #29334	; 0x7296
   30204:	movw	r3, #31609	; 0x7b79
   30208:	movw	r2, #1297	; 0x511
   3020c:	movt	r0, #4
   30210:	movt	r1, #4
   30214:	movt	r3, #4
   30218:	bl	14f44 <__assert_fail@plt>

0003021c <flatcc_builder_end_table@@Base>:
   3021c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   30220:	add	fp, sp, #24
   30224:	sub	sp, sp, #16
   30228:	mov	r4, r0
   3022c:	ldr	r0, [r0, #32]
   30230:	ldrh	r0, [r0, #14]
   30234:	cmp	r0, #3
   30238:	bne	303b4 <flatcc_builder_end_table@@Base+0x198>
   3023c:	ldrh	r0, [r4, #8]
   30240:	ldr	r5, [r4, #4]
   30244:	mov	r1, #4
   30248:	movw	r2, #31153	; 0x79b1
   3024c:	movt	r2, #40503	; 0x9e37
   30250:	add	r0, r1, r0, lsl #1
   30254:	strh	r0, [r5, #-4]!
   30258:	ldrh	r1, [r4, #20]
   3025c:	uxth	r6, r0
   30260:	add	r1, r1, #4
   30264:	strh	r1, [r5, #2]
   30268:	uxth	r1, r1
   3026c:	ldr	r0, [r4, #12]
   30270:	eor	r0, r0, r6
   30274:	mul	r0, r0, r2
   30278:	eor	r0, r0, r1
   3027c:	mov	r1, r5
   30280:	mul	r3, r0, r2
   30284:	mov	r0, r4
   30288:	mov	r2, r6
   3028c:	str	r3, [r4, #12]
   30290:	bl	2fb64 <flatcc_builder_create_cached_vtable@@Base>
   30294:	cmp	r0, #0
   30298:	beq	303a4 <flatcc_builder_end_table@@Base+0x188>
   3029c:	mov	r7, r0
   302a0:	mov	r0, r5
   302a4:	mov	r1, #0
   302a8:	mov	r2, r6
   302ac:	mov	r8, #0
   302b0:	bl	14ef0 <memset@plt>
   302b4:	ldr	r5, [r4, #32]
   302b8:	ldr	r0, [r4, #76]	; 0x4c
   302bc:	ldr	r6, [r4]
   302c0:	ldrh	r3, [r4, #130]	; 0x82
   302c4:	ldr	r1, [r4, #16]
   302c8:	ldr	r2, [r4, #20]
   302cc:	ldr	r5, [r5, #20]
   302d0:	add	r0, r0, r5
   302d4:	sub	r6, r6, r0
   302d8:	asr	r6, r6, #1
   302dc:	stm	sp, {r0, r6, r7}
   302e0:	mov	r0, r4
   302e4:	bl	2fec8 <flatcc_builder_create_table@@Base>
   302e8:	cmp	r0, #0
   302ec:	beq	303a8 <flatcc_builder_end_table@@Base+0x18c>
   302f0:	ldr	r1, [r4, #32]
   302f4:	mov	r5, r0
   302f8:	ldr	r0, [r4, #16]
   302fc:	ldr	r2, [r4, #20]
   30300:	ldr	r3, [r4, #52]	; 0x34
   30304:	ldr	r7, [r1, #24]
   30308:	str	r7, [r4, #12]
   3030c:	ldrh	r7, [r1, #28]
   30310:	strh	r7, [r4, #8]
   30314:	ldr	r7, [r1, #16]
   30318:	add	r3, r3, r7
   3031c:	str	r3, [r4, #4]
   30320:	ldr	r3, [r4, #76]	; 0x4c
   30324:	ldr	r1, [r1, #20]
   30328:	add	r1, r3, r1
   3032c:	str	r1, [r4]
   30330:	mov	r1, #0
   30334:	bl	14ef0 <memset@plt>
   30338:	ldr	r0, [r4, #32]
   3033c:	ldr	r1, [r4, #60]	; 0x3c
   30340:	ldr	r2, [r4, #64]	; 0x40
   30344:	mov	r8, r5
   30348:	ldr	r3, [r0, #8]
   3034c:	str	r3, [r4, #20]
   30350:	ldr	r3, [r0]
   30354:	str	r3, [r4, #28]
   30358:	add	r1, r1, r3
   3035c:	ldr	r7, [r0, #4]
   30360:	str	r1, [r4, #16]
   30364:	sub	r1, r2, r3
   30368:	cmp	r1, r7
   3036c:	movhi	r1, r7
   30370:	str	r1, [r4, #24]
   30374:	ldrh	r1, [r4, #130]	; 0x82
   30378:	ldrh	r2, [r4, #128]	; 0x80
   3037c:	cmp	r2, r1
   30380:	strhcc	r1, [r4, #128]	; 0x80
   30384:	ldrh	r1, [r0, #12]
   30388:	sub	r0, r0, #36	; 0x24
   3038c:	str	r0, [r4, #32]
   30390:	strh	r1, [r4, #130]	; 0x82
   30394:	ldr	r0, [r4, #156]	; 0x9c
   30398:	sub	r0, r0, #1
   3039c:	str	r0, [r4, #156]	; 0x9c
   303a0:	b	303a8 <flatcc_builder_end_table@@Base+0x18c>
   303a4:	mov	r8, #0
   303a8:	mov	r0, r8
   303ac:	sub	sp, fp, #24
   303b0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   303b4:	movw	r0, #31403	; 0x7aab
   303b8:	movw	r1, #29334	; 0x7296
   303bc:	movw	r3, #31699	; 0x7bd3
   303c0:	movw	r2, #1317	; 0x525
   303c4:	movt	r0, #4
   303c8:	movt	r1, #4
   303cc:	movt	r3, #4
   303d0:	bl	14f44 <__assert_fail@plt>

000303d4 <flatcc_builder_create_vector@@Base>:
   303d4:	push	{r4, r5, r6, r7, fp, lr}
   303d8:	add	fp, sp, #16
   303dc:	sub	sp, sp, #80	; 0x50
   303e0:	mov	r7, r0
   303e4:	ldr	r0, [fp, #12]
   303e8:	cmp	r2, r0
   303ec:	bhi	304ec <flatcc_builder_create_vector@@Base+0x118>
   303f0:	ldr	r0, [fp, #8]
   303f4:	mov	r4, r2
   303f8:	ldrh	r2, [r7, #128]	; 0x80
   303fc:	mov	r5, #4
   30400:	cmp	r0, #4
   30404:	movls	r0, r5
   30408:	cmp	r2, r0
   3040c:	sub	r2, fp, #20
   30410:	strhcc	r0, [r7, #128]	; 0x80
   30414:	str	r4, [fp, #-20]	; 0xffffffec
   30418:	sub	r0, r0, #1
   3041c:	ldr	ip, [r7, #136]	; 0x88
   30420:	str	r2, [sp, #12]
   30424:	mov	r2, #1
   30428:	str	r5, [sp, #4]
   3042c:	str	r5, [sp, #16]
   30430:	str	r2, [sp, #8]
   30434:	mls	r6, r3, r4, ip
   30438:	mul	r3, r3, r4
   3043c:	and	r0, r6, r0
   30440:	cmp	r3, #0
   30444:	beq	30460 <flatcc_builder_create_vector@@Base+0x8c>
   30448:	mov	r2, #2
   3044c:	add	r5, r3, #4
   30450:	str	r1, [sp, #20]
   30454:	str	r3, [sp, #24]
   30458:	str	r2, [sp, #8]
   3045c:	str	r5, [sp, #4]
   30460:	cmp	r0, #0
   30464:	beq	30490 <flatcc_builder_create_vector@@Base+0xbc>
   30468:	add	r1, sp, #4
   3046c:	movw	r3, #28804	; 0x7084
   30470:	add	r5, r5, r0
   30474:	add	r1, r1, r2, lsl #3
   30478:	add	r2, r2, #1
   3047c:	movt	r3, #4
   30480:	str	r5, [sp, #4]
   30484:	str	r3, [r1, #8]
   30488:	str	r0, [r1, #12]
   3048c:	str	r2, [sp, #8]
   30490:	cmp	r5, #0
   30494:	ble	3050c <flatcc_builder_create_vector@@Base+0x138>
   30498:	ldr	r0, [r7, #36]	; 0x24
   3049c:	ldr	r6, [r7, #44]	; 0x2c
   304a0:	add	r1, sp, #4
   304a4:	sub	r4, ip, r5
   304a8:	str	r5, [sp]
   304ac:	add	r1, r1, #8
   304b0:	mov	r3, r4
   304b4:	blx	r6
   304b8:	cmp	r0, #0
   304bc:	streq	r4, [r7, #136]	; 0x88
   304c0:	moveq	r0, r4
   304c4:	subeq	sp, fp, #16
   304c8:	popeq	{r4, r5, r6, r7, fp, pc}
   304cc:	movw	r0, #33852	; 0x843c
   304d0:	movw	r1, #29334	; 0x7296
   304d4:	movw	r3, #33531	; 0x82fb
   304d8:	movw	r2, #651	; 0x28b
   304dc:	movt	r0, #4
   304e0:	movt	r1, #4
   304e4:	movt	r3, #4
   304e8:	bl	14f44 <__assert_fail@plt>
   304ec:	movw	r0, #31765	; 0x7c15
   304f0:	movw	r1, #29334	; 0x7296
   304f4:	movw	r3, #31784	; 0x7c28
   304f8:	movw	r2, #1365	; 0x555
   304fc:	movt	r0, #4
   30500:	movt	r1, #4
   30504:	movt	r3, #4
   30508:	bl	14f44 <__assert_fail@plt>
   3050c:	movw	r0, #33852	; 0x843c
   30510:	movw	r1, #29334	; 0x7296
   30514:	movw	r3, #33531	; 0x82fb
   30518:	movw	r2, #647	; 0x287
   3051c:	movt	r0, #4
   30520:	movt	r1, #4
   30524:	movt	r3, #4
   30528:	bl	14f44 <__assert_fail@plt>

0003052c <flatcc_builder_end_vector@@Base>:
   3052c:	push	{r4, r5, fp, lr}
   30530:	add	fp, sp, #8
   30534:	sub	sp, sp, #8
   30538:	mov	r4, r0
   3053c:	ldr	r0, [r0, #32]
   30540:	ldrh	r1, [r0, #14]
   30544:	cmp	r1, #4
   30548:	bne	305fc <flatcc_builder_end_vector@@Base+0xd0>
   3054c:	ldr	r3, [r0, #16]
   30550:	ldr	r2, [r0, #20]
   30554:	ldr	r0, [r0, #24]
   30558:	ldr	r1, [r4, #16]
   3055c:	ldrh	r5, [r4, #130]	; 0x82
   30560:	str	r0, [sp, #4]
   30564:	mov	r0, r4
   30568:	str	r5, [sp]
   3056c:	bl	303d4 <flatcc_builder_create_vector@@Base>
   30570:	mov	r5, r0
   30574:	cmp	r0, #0
   30578:	beq	305f0 <flatcc_builder_end_vector@@Base+0xc4>
   3057c:	ldr	r0, [r4, #16]
   30580:	ldr	r2, [r4, #20]
   30584:	mov	r1, #0
   30588:	bl	14ef0 <memset@plt>
   3058c:	ldr	r0, [r4, #32]
   30590:	ldr	r1, [r4, #60]	; 0x3c
   30594:	ldr	ip, [r4, #64]	; 0x40
   30598:	ldr	r3, [r0, #8]
   3059c:	str	r3, [r4, #20]
   305a0:	ldr	r3, [r0]
   305a4:	str	r3, [r4, #28]
   305a8:	add	r1, r1, r3
   305ac:	ldr	r2, [r0, #4]
   305b0:	str	r1, [r4, #16]
   305b4:	sub	r1, ip, r3
   305b8:	cmp	r1, r2
   305bc:	movhi	r1, r2
   305c0:	str	r1, [r4, #24]
   305c4:	ldrh	r1, [r4, #130]	; 0x82
   305c8:	ldrh	r2, [r4, #128]	; 0x80
   305cc:	cmp	r2, r1
   305d0:	strhcc	r1, [r4, #128]	; 0x80
   305d4:	ldrh	r1, [r0, #12]
   305d8:	sub	r0, r0, #36	; 0x24
   305dc:	str	r0, [r4, #32]
   305e0:	strh	r1, [r4, #130]	; 0x82
   305e4:	ldr	r0, [r4, #156]	; 0x9c
   305e8:	sub	r0, r0, #1
   305ec:	str	r0, [r4, #156]	; 0x9c
   305f0:	mov	r0, r5
   305f4:	sub	sp, fp, #8
   305f8:	pop	{r4, r5, fp, pc}
   305fc:	movw	r0, #30137	; 0x75b9
   30600:	movw	r1, #29334	; 0x7296
   30604:	movw	r3, #31902	; 0x7c9e
   30608:	movw	r2, #1400	; 0x578
   3060c:	movt	r0, #4
   30610:	movt	r1, #4
   30614:	movt	r3, #4
   30618:	bl	14f44 <__assert_fail@plt>

0003061c <flatcc_builder_vector_count@@Base>:
   3061c:	ldr	r0, [r0, #32]
   30620:	ldr	r0, [r0, #20]
   30624:	bx	lr

00030628 <flatcc_builder_vector_edit@@Base>:
   30628:	ldr	r0, [r0, #16]
   3062c:	bx	lr

00030630 <flatcc_builder_create_offset_vector_direct@@Base>:
   30630:	mov	r3, #0
   30634:	b	30638 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   30638:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   3063c:	add	fp, sp, #24
   30640:	sub	sp, sp, #80	; 0x50
   30644:	mov	r6, #0
   30648:	cmn	r2, #-1073741823	; 0xc0000001
   3064c:	bhi	30788 <flatcc_builder_create_offset_vector_direct@@Base+0x158>
   30650:	mov	r8, r0
   30654:	ldrh	r0, [r0, #128]	; 0x80
   30658:	sub	r7, fp, #28
   3065c:	mov	r5, #4
   30660:	mov	r4, #1
   30664:	cmp	r0, #3
   30668:	movls	r0, #4
   3066c:	strhls	r0, [r8, #128]	; 0x80
   30670:	str	r2, [fp, #-28]	; 0xffffffe4
   30674:	ldr	ip, [r8, #136]	; 0x88
   30678:	str	r7, [sp, #12]
   3067c:	mov	r7, #0
   30680:	str	r5, [sp, #4]
   30684:	str	r5, [sp, #16]
   30688:	str	r4, [sp, #8]
   3068c:	cmp	r7, r2, lsl #2
   30690:	and	r6, ip, #3
   30694:	beq	306b4 <flatcc_builder_create_offset_vector_direct@@Base+0x84>
   30698:	lsl	r7, r2, #2
   3069c:	mov	r4, #2
   306a0:	str	r1, [sp, #20]
   306a4:	add	r5, r7, #4
   306a8:	str	r7, [sp, #24]
   306ac:	str	r4, [sp, #8]
   306b0:	str	r5, [sp, #4]
   306b4:	cmp	r6, #0
   306b8:	beq	306e4 <flatcc_builder_create_offset_vector_direct@@Base+0xb4>
   306bc:	add	r7, sp, #4
   306c0:	movw	r0, #28804	; 0x7084
   306c4:	add	r5, r5, r6
   306c8:	add	r7, r7, r4, lsl #3
   306cc:	add	r4, r4, #1
   306d0:	movt	r0, #4
   306d4:	str	r5, [sp, #4]
   306d8:	str	r0, [r7, #8]
   306dc:	str	r6, [r7, #12]
   306e0:	str	r4, [sp, #8]
   306e4:	cmp	r2, #0
   306e8:	beq	30750 <flatcc_builder_create_offset_vector_direct@@Base+0x120>
   306ec:	mvn	r0, #3
   306f0:	mov	r6, #0
   306f4:	sub	r0, r0, ip
   306f8:	add	r0, r0, r5
   306fc:	ldr	r7, [r1, r6, lsl #2]
   30700:	cmp	r7, #0
   30704:	beq	30728 <flatcc_builder_create_offset_vector_direct@@Base+0xf8>
   30708:	add	r7, r0, r7
   3070c:	cmp	r3, #0
   30710:	str	r7, [r1, r6, lsl #2]
   30714:	beq	3073c <flatcc_builder_create_offset_vector_direct@@Base+0x10c>
   30718:	ldrb	r7, [r3, r6]
   3071c:	cmp	r7, #0
   30720:	bne	3073c <flatcc_builder_create_offset_vector_direct@@Base+0x10c>
   30724:	b	30794 <flatcc_builder_create_offset_vector_direct@@Base+0x164>
   30728:	cmp	r3, #0
   3072c:	beq	307d4 <flatcc_builder_create_offset_vector_direct@@Base+0x1a4>
   30730:	ldrb	r7, [r3, r6]
   30734:	cmp	r7, #0
   30738:	bne	307b4 <flatcc_builder_create_offset_vector_direct@@Base+0x184>
   3073c:	add	r6, r6, #1
   30740:	sub	r0, r0, #4
   30744:	cmp	r6, r2
   30748:	bcc	306fc <flatcc_builder_create_offset_vector_direct@@Base+0xcc>
   3074c:	ldr	ip, [r8, #136]	; 0x88
   30750:	cmp	r5, #0
   30754:	ble	307f4 <flatcc_builder_create_offset_vector_direct@@Base+0x1c4>
   30758:	ldr	r0, [r8, #36]	; 0x24
   3075c:	ldr	r7, [r8, #44]	; 0x2c
   30760:	add	r1, sp, #4
   30764:	sub	r6, ip, r5
   30768:	mov	r2, r4
   3076c:	str	r5, [sp]
   30770:	add	r1, r1, #8
   30774:	mov	r3, r6
   30778:	blx	r7
   3077c:	cmp	r0, #0
   30780:	bne	30814 <flatcc_builder_create_offset_vector_direct@@Base+0x1e4>
   30784:	str	r6, [r8, #136]	; 0x88
   30788:	mov	r0, r6
   3078c:	sub	sp, fp, #24
   30790:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   30794:	movw	r0, #33840	; 0x8430
   30798:	movw	r1, #29334	; 0x7296
   3079c:	movw	r3, #33854	; 0x843e
   307a0:	movw	r2, #1457	; 0x5b1
   307a4:	movt	r0, #4
   307a8:	movt	r1, #4
   307ac:	movt	r3, #4
   307b0:	bl	14f44 <__assert_fail@plt>
   307b4:	movw	r0, #33985	; 0x84c1
   307b8:	movw	r1, #29334	; 0x7296
   307bc:	movw	r3, #33854	; 0x843e
   307c0:	movw	r2, #1461	; 0x5b5
   307c4:	movt	r0, #4
   307c8:	movt	r1, #4
   307cc:	movt	r3, #4
   307d0:	bl	14f44 <__assert_fail@plt>
   307d4:	movw	r0, #33852	; 0x843c
   307d8:	movw	r1, #29334	; 0x7296
   307dc:	movw	r3, #33854	; 0x843e
   307e0:	movw	r2, #1463	; 0x5b7
   307e4:	movt	r0, #4
   307e8:	movt	r1, #4
   307ec:	movt	r3, #4
   307f0:	bl	14f44 <__assert_fail@plt>
   307f4:	movw	r0, #33852	; 0x843c
   307f8:	movw	r1, #29334	; 0x7296
   307fc:	movw	r3, #33531	; 0x82fb
   30800:	movw	r2, #647	; 0x287
   30804:	movt	r0, #4
   30808:	movt	r1, #4
   3080c:	movt	r3, #4
   30810:	bl	14f44 <__assert_fail@plt>
   30814:	movw	r0, #33852	; 0x843c
   30818:	movw	r1, #29334	; 0x7296
   3081c:	movw	r3, #33531	; 0x82fb
   30820:	movw	r2, #651	; 0x28b
   30824:	movt	r0, #4
   30828:	movt	r1, #4
   3082c:	movt	r3, #4
   30830:	bl	14f44 <__assert_fail@plt>

00030834 <flatcc_builder_end_offset_vector_for_unions@@Base>:
   30834:	push	{r4, r5, fp, lr}
   30838:	add	fp, sp, #8
   3083c:	mov	r4, r0
   30840:	ldr	r0, [r0, #32]
   30844:	mov	r3, r1
   30848:	ldrh	r1, [r0, #14]
   3084c:	cmp	r1, #5
   30850:	bne	308ec <flatcc_builder_end_offset_vector_for_unions@@Base+0xb8>
   30854:	ldr	r2, [r0, #20]
   30858:	ldr	r1, [r4, #16]
   3085c:	mov	r0, r4
   30860:	bl	30638 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   30864:	mov	r5, r0
   30868:	cmp	r0, #0
   3086c:	beq	308e4 <flatcc_builder_end_offset_vector_for_unions@@Base+0xb0>
   30870:	ldr	r0, [r4, #16]
   30874:	ldr	r2, [r4, #20]
   30878:	mov	r1, #0
   3087c:	bl	14ef0 <memset@plt>
   30880:	ldr	r0, [r4, #32]
   30884:	ldr	r1, [r4, #60]	; 0x3c
   30888:	ldr	ip, [r4, #64]	; 0x40
   3088c:	ldr	r3, [r0, #8]
   30890:	str	r3, [r4, #20]
   30894:	ldr	r3, [r0]
   30898:	str	r3, [r4, #28]
   3089c:	add	r1, r1, r3
   308a0:	ldr	r2, [r0, #4]
   308a4:	str	r1, [r4, #16]
   308a8:	sub	r1, ip, r3
   308ac:	cmp	r1, r2
   308b0:	movhi	r1, r2
   308b4:	str	r1, [r4, #24]
   308b8:	ldrh	r1, [r4, #130]	; 0x82
   308bc:	ldrh	r2, [r4, #128]	; 0x80
   308c0:	cmp	r2, r1
   308c4:	strhcc	r1, [r4, #128]	; 0x80
   308c8:	ldrh	r1, [r0, #12]
   308cc:	sub	r0, r0, #36	; 0x24
   308d0:	str	r0, [r4, #32]
   308d4:	strh	r1, [r4, #130]	; 0x82
   308d8:	ldr	r0, [r4, #156]	; 0x9c
   308dc:	sub	r0, r0, #1
   308e0:	str	r0, [r4, #156]	; 0x9c
   308e4:	mov	r0, r5
   308e8:	pop	{r4, r5, fp, pc}
   308ec:	movw	r0, #30386	; 0x76b2
   308f0:	movw	r1, #29334	; 0x7296
   308f4:	movw	r3, #32043	; 0x7d2b
   308f8:	movw	r2, #1493	; 0x5d5
   308fc:	movt	r0, #4
   30900:	movt	r1, #4
   30904:	movt	r3, #4
   30908:	bl	14f44 <__assert_fail@plt>

0003090c <flatcc_builder_offset_vector_edit@@Base>:
   3090c:	ldr	r0, [r0, #16]
   30910:	bx	lr

00030914 <flatcc_builder_offset_vector_count@@Base>:
   30914:	ldr	r0, [r0, #32]
   30918:	ldr	r0, [r0, #20]
   3091c:	bx	lr

00030920 <flatcc_builder_table_add_union@@Base>:
   30920:	push	{r4, r5, r6, r7, fp, lr}
   30924:	add	fp, sp, #16
   30928:	mov	r5, r0
   3092c:	ldr	r0, [r0, #32]
   30930:	ldrh	r0, [r0, #14]
   30934:	cmp	r0, #3
   30938:	bne	309c0 <flatcc_builder_table_add_union@@Base+0xa0>
   3093c:	mov	r7, r3
   30940:	mov	r4, r2
   30944:	mov	r6, r1
   30948:	cmp	r3, #0
   3094c:	beq	3095c <flatcc_builder_table_add_union@@Base+0x3c>
   30950:	uxtb	r0, r4
   30954:	cmp	r0, #0
   30958:	beq	309e0 <flatcc_builder_table_add_union@@Base+0xc0>
   3095c:	cmp	r7, #0
   30960:	beq	3097c <flatcc_builder_table_add_union@@Base+0x5c>
   30964:	mov	r0, r5
   30968:	mov	r1, r6
   3096c:	bl	30a20 <flatcc_builder_table_add_offset@@Base>
   30970:	cmp	r0, #0
   30974:	beq	30a00 <flatcc_builder_table_add_union@@Base+0xe0>
   30978:	str	r7, [r0]
   3097c:	sub	r1, r6, #1
   30980:	mov	r0, r5
   30984:	mov	r2, #1
   30988:	mov	r3, #1
   3098c:	bl	30b5c <flatcc_builder_table_add@@Base>
   30990:	cmp	r0, #0
   30994:	strbne	r4, [r0]
   30998:	movne	r0, #0
   3099c:	popne	{r4, r5, r6, r7, fp, pc}
   309a0:	movw	r0, #32289	; 0x7e21
   309a4:	movw	r1, #29334	; 0x7296
   309a8:	movw	r3, #32157	; 0x7d9d
   309ac:	movw	r2, #1526	; 0x5f6
   309b0:	movt	r0, #4
   309b4:	movt	r1, #4
   309b8:	movt	r3, #4
   309bc:	bl	14f44 <__assert_fail@plt>
   309c0:	movw	r0, #31403	; 0x7aab
   309c4:	movw	r1, #29334	; 0x7296
   309c8:	movw	r3, #32157	; 0x7d9d
   309cc:	movw	r2, #1518	; 0x5ee
   309d0:	movt	r0, #4
   309d4:	movt	r1, #4
   309d8:	movt	r3, #4
   309dc:	bl	14f44 <__assert_fail@plt>
   309e0:	movw	r0, #32245	; 0x7df5
   309e4:	movw	r1, #29334	; 0x7296
   309e8:	movw	r3, #32157	; 0x7d9d
   309ec:	movw	r2, #1519	; 0x5ef
   309f0:	movt	r0, #4
   309f4:	movt	r1, #4
   309f8:	movt	r3, #4
   309fc:	bl	14f44 <__assert_fail@plt>
   30a00:	movw	r0, #32279	; 0x7e17
   30a04:	movw	r1, #29334	; 0x7296
   30a08:	movw	r3, #32157	; 0x7d9d
   30a0c:	movw	r2, #1522	; 0x5f2
   30a10:	movt	r0, #4
   30a14:	movt	r1, #4
   30a18:	movt	r3, #4
   30a1c:	bl	14f44 <__assert_fail@plt>

00030a20 <flatcc_builder_table_add_offset@@Base>:
   30a20:	push	{r4, r5, r6, r7, fp, lr}
   30a24:	add	fp, sp, #16
   30a28:	mov	r4, r0
   30a2c:	ldr	r0, [r0, #32]
   30a30:	ldrh	r0, [r0, #14]
   30a34:	cmp	r0, #3
   30a38:	bne	30afc <flatcc_builder_table_add_offset@@Base+0xdc>
   30a3c:	movw	r0, #32765	; 0x7ffd
   30a40:	mov	r5, r1
   30a44:	cmp	r1, r0
   30a48:	bcs	30b1c <flatcc_builder_table_add_offset@@Base+0xfc>
   30a4c:	ldr	r0, [r4, #4]
   30a50:	add	r1, r0, r5, lsl #1
   30a54:	ldrh	r1, [r1]
   30a58:	cmp	r1, #0
   30a5c:	bne	30b3c <flatcc_builder_table_add_offset@@Base+0x11c>
   30a60:	ldr	r2, [r4, #20]
   30a64:	ldr	r1, [r4, #12]
   30a68:	ldr	r3, [r4, #24]
   30a6c:	add	r2, r2, #3
   30a70:	eor	r1, r1, r5
   30a74:	bic	r7, r2, #3
   30a78:	movw	r2, #31153	; 0x79b1
   30a7c:	movt	r2, #40503	; 0x9e37
   30a80:	add	r6, r7, #4
   30a84:	mul	r1, r1, r2
   30a88:	cmp	r6, r3
   30a8c:	str	r6, [r4, #20]
   30a90:	eor	r1, r1, #4
   30a94:	mul	r1, r1, r2
   30a98:	str	r1, [r4, #12]
   30a9c:	bls	30ac4 <flatcc_builder_table_add_offset@@Base+0xa4>
   30aa0:	mov	r0, r4
   30aa4:	mov	r1, r6
   30aa8:	movw	r2, #65532	; 0xfffc
   30aac:	bl	31a1c <flatcc_builder_get_emit_context@@Base+0x8>
   30ab0:	mov	r1, r0
   30ab4:	mov	r0, #0
   30ab8:	cmp	r1, #0
   30abc:	popne	{r4, r5, r6, r7, fp, pc}
   30ac0:	ldr	r0, [r4, #4]
   30ac4:	uxth	r1, r5
   30ac8:	add	r0, r0, r1, lsl #1
   30acc:	strh	r6, [r0]
   30ad0:	ldrh	r0, [r4, #8]
   30ad4:	cmp	r0, r1
   30ad8:	addls	r0, r5, #1
   30adc:	strhls	r0, [r4, #8]
   30ae0:	ldr	r0, [r4]
   30ae4:	add	r1, r0, #2
   30ae8:	str	r1, [r4]
   30aec:	strh	r7, [r0]
   30af0:	ldr	r0, [r4, #16]
   30af4:	add	r0, r0, r7
   30af8:	pop	{r4, r5, r6, r7, fp, pc}
   30afc:	movw	r0, #31403	; 0x7aab
   30b00:	movw	r1, #29334	; 0x7296
   30b04:	movw	r3, #33183	; 0x819f
   30b08:	movw	r2, #1811	; 0x713
   30b0c:	movt	r0, #4
   30b10:	movt	r1, #4
   30b14:	movt	r3, #4
   30b18:	bl	14f44 <__assert_fail@plt>
   30b1c:	movw	r0, #33055	; 0x811f
   30b20:	movw	r1, #29334	; 0x7296
   30b24:	movw	r3, #33183	; 0x819f
   30b28:	movw	r2, #1812	; 0x714
   30b2c:	movt	r0, #4
   30b30:	movt	r1, #4
   30b34:	movt	r3, #4
   30b38:	bl	14f44 <__assert_fail@plt>
   30b3c:	movw	r0, #33852	; 0x843c
   30b40:	movw	r1, #29334	; 0x7296
   30b44:	movw	r3, #33183	; 0x819f
   30b48:	movw	r2, #1819	; 0x71b
   30b4c:	movt	r0, #4
   30b50:	movt	r1, #4
   30b54:	movt	r3, #4
   30b58:	bl	14f44 <__assert_fail@plt>

00030b5c <flatcc_builder_table_add@@Base>:
   30b5c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   30b60:	add	fp, sp, #24
   30b64:	mov	r4, r0
   30b68:	ldr	r0, [r0, #32]
   30b6c:	ldrh	r0, [r0, #14]
   30b70:	cmp	r0, #3
   30b74:	bne	30c40 <flatcc_builder_table_add@@Base+0xe4>
   30b78:	movw	r0, #32765	; 0x7ffd
   30b7c:	mov	r8, r1
   30b80:	cmp	r1, r0
   30b84:	bcs	30c60 <flatcc_builder_table_add@@Base+0x104>
   30b88:	ldrh	r0, [r4, #130]	; 0x82
   30b8c:	cmp	r0, r3
   30b90:	strhcc	r3, [r4, #130]	; 0x82
   30b94:	ldr	r0, [r4, #4]
   30b98:	add	r1, r0, r8, lsl #1
   30b9c:	ldrh	r1, [r1]
   30ba0:	cmp	r1, #0
   30ba4:	bne	30c80 <flatcc_builder_table_add@@Base+0x124>
   30ba8:	ldr	r1, [r4, #12]
   30bac:	movw	r7, #31153	; 0x79b1
   30bb0:	ldr	r6, [r4, #20]
   30bb4:	ldr	r5, [r4, #24]
   30bb8:	movt	r7, #40503	; 0x9e37
   30bbc:	eor	r1, r1, r8
   30bc0:	mul	r1, r1, r7
   30bc4:	eor	r1, r1, r2
   30bc8:	mul	r1, r1, r7
   30bcc:	str	r1, [r4, #12]
   30bd0:	add	r1, r3, r6
   30bd4:	rsb	r3, r3, #0
   30bd8:	sub	r1, r1, #1
   30bdc:	and	r6, r1, r3
   30be0:	add	r1, r6, r2
   30be4:	cmp	r1, r5
   30be8:	str	r1, [r4, #20]
   30bec:	bcc	30c14 <flatcc_builder_table_add@@Base+0xb8>
   30bf0:	add	r1, r1, #1
   30bf4:	mov	r0, r4
   30bf8:	movw	r2, #65532	; 0xfffc
   30bfc:	bl	31a1c <flatcc_builder_get_emit_context@@Base+0x8>
   30c00:	mov	r1, r0
   30c04:	mov	r0, #0
   30c08:	cmp	r1, #0
   30c0c:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   30c10:	ldr	r0, [r4, #4]
   30c14:	uxth	r1, r8
   30c18:	add	r2, r6, #4
   30c1c:	add	r0, r0, r1, lsl #1
   30c20:	strh	r2, [r0]
   30c24:	ldrh	r0, [r4, #8]
   30c28:	cmp	r0, r1
   30c2c:	addls	r0, r8, #1
   30c30:	strhls	r0, [r4, #8]
   30c34:	ldr	r0, [r4, #16]
   30c38:	add	r0, r0, r6
   30c3c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   30c40:	movw	r0, #31403	; 0x7aab
   30c44:	movw	r1, #29334	; 0x7296
   30c48:	movw	r3, #32981	; 0x80d5
   30c4c:	movw	r2, #1773	; 0x6ed
   30c50:	movt	r0, #4
   30c54:	movt	r1, #4
   30c58:	movt	r3, #4
   30c5c:	bl	14f44 <__assert_fail@plt>
   30c60:	movw	r0, #33055	; 0x811f
   30c64:	movw	r1, #29334	; 0x7296
   30c68:	movw	r3, #32981	; 0x80d5
   30c6c:	movw	r2, #1774	; 0x6ee
   30c70:	movt	r0, #4
   30c74:	movt	r1, #4
   30c78:	movt	r3, #4
   30c7c:	bl	14f44 <__assert_fail@plt>
   30c80:	movw	r0, #33852	; 0x843c
   30c84:	movw	r1, #29334	; 0x7296
   30c88:	movw	r3, #32981	; 0x80d5
   30c8c:	movw	r2, #1784	; 0x6f8
   30c90:	movt	r0, #4
   30c94:	movt	r1, #4
   30c98:	movt	r3, #4
   30c9c:	bl	14f44 <__assert_fail@plt>

00030ca0 <flatcc_builder_table_add_union_vector@@Base>:
   30ca0:	push	{r4, r5, r6, r7, fp, lr}
   30ca4:	add	fp, sp, #16
   30ca8:	mov	r6, r0
   30cac:	ldr	r0, [r0, #32]
   30cb0:	ldrh	r0, [r0, #14]
   30cb4:	cmp	r0, #3
   30cb8:	bne	30d20 <flatcc_builder_table_add_union_vector@@Base+0x80>
   30cbc:	clz	r0, r3
   30cc0:	mov	r5, r1
   30cc4:	clz	r1, r2
   30cc8:	mov	r4, r3
   30ccc:	mov	r7, r2
   30cd0:	lsr	r0, r0, #5
   30cd4:	lsr	r1, r1, #5
   30cd8:	cmp	r1, r0
   30cdc:	bne	30d40 <flatcc_builder_table_add_union_vector@@Base+0xa0>
   30ce0:	cmp	r7, #0
   30ce4:	beq	30d18 <flatcc_builder_table_add_union_vector@@Base+0x78>
   30ce8:	sub	r1, r5, #1
   30cec:	mov	r0, r6
   30cf0:	bl	30a20 <flatcc_builder_table_add_offset@@Base>
   30cf4:	cmp	r0, #0
   30cf8:	beq	30d60 <flatcc_builder_table_add_union_vector@@Base+0xc0>
   30cfc:	str	r7, [r0]
   30d00:	mov	r0, r6
   30d04:	mov	r1, r5
   30d08:	bl	30a20 <flatcc_builder_table_add_offset@@Base>
   30d0c:	cmp	r0, #0
   30d10:	beq	30d80 <flatcc_builder_table_add_union_vector@@Base+0xe0>
   30d14:	str	r4, [r0]
   30d18:	mov	r0, #0
   30d1c:	pop	{r4, r5, r6, r7, fp, pc}
   30d20:	movw	r0, #31403	; 0x7aab
   30d24:	movw	r1, #29334	; 0x7296
   30d28:	movw	r3, #32301	; 0x7e2d
   30d2c:	mov	r2, #1536	; 0x600
   30d30:	movt	r0, #4
   30d34:	movt	r1, #4
   30d38:	movt	r3, #4
   30d3c:	bl	14f44 <__assert_fail@plt>
   30d40:	movw	r0, #32400	; 0x7e90
   30d44:	movw	r1, #29334	; 0x7296
   30d48:	movw	r3, #32301	; 0x7e2d
   30d4c:	movw	r2, #1537	; 0x601
   30d50:	movt	r0, #4
   30d54:	movt	r1, #4
   30d58:	movt	r3, #4
   30d5c:	bl	14f44 <__assert_fail@plt>
   30d60:	movw	r0, #32279	; 0x7e17
   30d64:	movw	r1, #29334	; 0x7296
   30d68:	movw	r3, #32301	; 0x7e2d
   30d6c:	movw	r2, #1540	; 0x604
   30d70:	movt	r0, #4
   30d74:	movt	r1, #4
   30d78:	movt	r3, #4
   30d7c:	bl	14f44 <__assert_fail@plt>
   30d80:	movw	r0, #32279	; 0x7e17
   30d84:	movw	r1, #29334	; 0x7296
   30d88:	movw	r3, #32301	; 0x7e2d
   30d8c:	movw	r2, #1544	; 0x608
   30d90:	movt	r0, #4
   30d94:	movt	r1, #4
   30d98:	movt	r3, #4
   30d9c:	bl	14f44 <__assert_fail@plt>

00030da0 <flatcc_builder_create_union_vector@@Base>:
   30da0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   30da4:	add	fp, sp, #28
   30da8:	sub	sp, sp, #20
   30dac:	mov	sl, r0
   30db0:	mov	r0, #0
   30db4:	mov	r9, r3
   30db8:	mov	r7, r2
   30dbc:	mov	r4, r1
   30dc0:	str	r0, [sl]
   30dc4:	str	r0, [sl, #4]
   30dc8:	mov	r0, r1
   30dcc:	bl	2f54c <flatcc_builder_start_offset_vector@@Base>
   30dd0:	cmp	r0, #0
   30dd4:	beq	30de0 <flatcc_builder_create_union_vector@@Base+0x40>
   30dd8:	sub	sp, fp, #28
   30ddc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   30de0:	mov	r0, r4
   30de4:	mov	r1, r9
   30de8:	bl	2ef08 <flatcc_builder_extend_offset_vector@@Base>
   30dec:	cmp	r0, #0
   30df0:	beq	30dd8 <flatcc_builder_create_union_vector@@Base+0x38>
   30df4:	ldr	r8, [r4, #20]
   30df8:	ldr	r1, [r4, #24]
   30dfc:	add	r0, r8, r9
   30e00:	cmp	r0, r1
   30e04:	str	r0, [r4, #20]
   30e08:	bcc	30e24 <flatcc_builder_create_union_vector@@Base+0x84>
   30e0c:	add	r1, r0, #1
   30e10:	mov	r0, r4
   30e14:	mvn	r2, #3
   30e18:	bl	31a1c <flatcc_builder_get_emit_context@@Base+0x8>
   30e1c:	cmp	r0, #0
   30e20:	bne	30dd8 <flatcc_builder_create_union_vector@@Base+0x38>
   30e24:	ldr	r3, [r4, #16]
   30e28:	adds	r2, r3, r8
   30e2c:	beq	30dd8 <flatcc_builder_create_union_vector@@Base+0x38>
   30e30:	cmp	r9, #0
   30e34:	beq	30e64 <flatcc_builder_create_union_vector@@Base+0xc4>
   30e38:	add	r0, r7, #4
   30e3c:	mov	r1, r9
   30e40:	mov	r7, r3
   30e44:	mov	r6, r2
   30e48:	ldrb	r5, [r0, #-4]
   30e4c:	subs	r1, r1, #1
   30e50:	strb	r5, [r6], #1
   30e54:	ldr	r5, [r0]
   30e58:	add	r0, r0, #8
   30e5c:	str	r5, [r7], #4
   30e60:	bne	30e48 <flatcc_builder_create_union_vector@@Base+0xa8>
   30e64:	add	r0, sp, #8
   30e68:	mov	r1, r4
   30e6c:	str	r9, [sp]
   30e70:	bl	30ef8 <flatcc_builder_create_union_vector_direct@@Base>
   30e74:	ldr	r0, [sp, #8]
   30e78:	ldr	r1, [sp, #12]
   30e7c:	stm	sl, {r0, r1}
   30e80:	mov	r1, #0
   30e84:	ldr	r0, [r4, #16]
   30e88:	ldr	r2, [r4, #20]
   30e8c:	bl	14ef0 <memset@plt>
   30e90:	ldr	r0, [r4, #32]
   30e94:	ldr	r1, [r4, #60]	; 0x3c
   30e98:	ldr	r2, [r4, #64]	; 0x40
   30e9c:	ldr	r3, [r0, #8]
   30ea0:	str	r3, [r4, #20]
   30ea4:	ldr	r3, [r0]
   30ea8:	str	r3, [r4, #28]
   30eac:	add	r1, r1, r3
   30eb0:	ldr	r7, [r0, #4]
   30eb4:	str	r1, [r4, #16]
   30eb8:	sub	r1, r2, r3
   30ebc:	cmp	r1, r7
   30ec0:	movhi	r1, r7
   30ec4:	str	r1, [r4, #24]
   30ec8:	ldrh	r1, [r4, #130]	; 0x82
   30ecc:	ldrh	r2, [r4, #128]	; 0x80
   30ed0:	cmp	r2, r1
   30ed4:	strhcc	r1, [r4, #128]	; 0x80
   30ed8:	ldrh	r1, [r0, #12]
   30edc:	sub	r0, r0, #36	; 0x24
   30ee0:	str	r0, [r4, #32]
   30ee4:	strh	r1, [r4, #130]	; 0x82
   30ee8:	ldr	r0, [r4, #156]	; 0x9c
   30eec:	sub	r0, r0, #1
   30ef0:	str	r0, [r4, #156]	; 0x9c
   30ef4:	b	30dd8 <flatcc_builder_create_union_vector@@Base+0x38>

00030ef8 <flatcc_builder_create_union_vector_direct@@Base>:
   30ef8:	push	{r4, r5, r6, r7, fp, lr}
   30efc:	add	fp, sp, #16
   30f00:	sub	sp, sp, #8
   30f04:	ldr	r7, [fp, #8]
   30f08:	mov	r5, r2
   30f0c:	mov	r4, r0
   30f10:	mov	r0, #0
   30f14:	mov	r6, r1
   30f18:	str	r0, [r4]
   30f1c:	str	r0, [r4, #4]
   30f20:	mov	r0, r1
   30f24:	mov	r1, r3
   30f28:	mov	r3, r5
   30f2c:	mov	r2, r7
   30f30:	bl	30638 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   30f34:	cmp	r0, #0
   30f38:	str	r0, [r4, #4]
   30f3c:	beq	30f68 <flatcc_builder_create_union_vector_direct@@Base+0x70>
   30f40:	mvn	r0, #0
   30f44:	mov	r1, #1
   30f48:	mov	r2, r7
   30f4c:	mov	r3, #1
   30f50:	str	r1, [sp]
   30f54:	str	r0, [sp, #4]
   30f58:	mov	r0, r6
   30f5c:	mov	r1, r5
   30f60:	bl	303d4 <flatcc_builder_create_vector@@Base>
   30f64:	str	r0, [r4]
   30f68:	sub	sp, fp, #16
   30f6c:	pop	{r4, r5, r6, r7, fp, pc}

00030f70 <flatcc_builder_start_union_vector@@Base>:
   30f70:	push	{r4, sl, fp, lr}
   30f74:	add	fp, sp, #8
   30f78:	mov	r1, #4
   30f7c:	mov	r4, r0
   30f80:	bl	2e8cc <flatcc_builder_start_buffer@@Base+0xbc>
   30f84:	mov	r1, r0
   30f88:	mvn	r0, #0
   30f8c:	cmp	r1, #0
   30f90:	popne	{r4, sl, fp, pc}
   30f94:	ldr	r0, [r4, #32]
   30f98:	mov	r1, #8
   30f9c:	mov	r2, #7
   30fa0:	str	r1, [r0, #16]
   30fa4:	mov	r0, #0
   30fa8:	ldr	r1, [r4, #32]
   30fac:	str	r0, [r1, #20]
   30fb0:	ldr	r1, [r4, #32]
   30fb4:	strh	r2, [r1, #14]
   30fb8:	ldr	r2, [r4, #28]
   30fbc:	ldr	r3, [r4, #60]	; 0x3c
   30fc0:	ldr	ip, [r4, #64]	; 0x40
   30fc4:	add	r3, r3, r2
   30fc8:	sub	r2, ip, r2
   30fcc:	str	r3, [r4, #16]
   30fd0:	mvn	r3, #3
   30fd4:	cmn	r2, #4
   30fd8:	movcs	r2, r3
   30fdc:	str	r2, [r4, #24]
   30fe0:	str	r3, [r1, #4]
   30fe4:	pop	{r4, sl, fp, pc}

00030fe8 <flatcc_builder_end_union_vector@@Base>:
   30fe8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   30fec:	add	fp, sp, #24
   30ff0:	sub	sp, sp, #16
   30ff4:	mov	r8, r0
   30ff8:	mov	r0, #0
   30ffc:	mov	r4, r1
   31000:	str	r0, [r8]
   31004:	str	r0, [r8, #4]
   31008:	ldr	r0, [r1, #32]
   3100c:	ldrh	r1, [r0, #14]
   31010:	cmp	r1, #7
   31014:	bne	3112c <flatcc_builder_end_union_vector@@Base+0x144>
   31018:	ldr	r9, [r0, #20]
   3101c:	ldr	r7, [r4, #20]
   31020:	ldr	r1, [r4, #24]
   31024:	add	r0, r9, r9, lsl #2
   31028:	add	r0, r7, r0
   3102c:	cmp	r0, r1
   31030:	str	r0, [r4, #20]
   31034:	bcc	31050 <flatcc_builder_end_union_vector@@Base+0x68>
   31038:	add	r1, r0, #1
   3103c:	mov	r0, r4
   31040:	mvn	r2, #3
   31044:	bl	31a1c <flatcc_builder_get_emit_context@@Base+0x8>
   31048:	cmp	r0, #0
   3104c:	bne	31124 <flatcc_builder_end_union_vector@@Base+0x13c>
   31050:	ldr	r0, [r4, #16]
   31054:	adds	r3, r0, r7
   31058:	beq	31124 <flatcc_builder_end_union_vector@@Base+0x13c>
   3105c:	add	r2, r3, r9, lsl #2
   31060:	cmp	r9, #0
   31064:	beq	31094 <flatcc_builder_end_union_vector@@Base+0xac>
   31068:	add	r0, r0, #4
   3106c:	mov	r1, r9
   31070:	mov	r7, r3
   31074:	mov	r5, r2
   31078:	ldrb	r6, [r0, #-4]
   3107c:	subs	r1, r1, #1
   31080:	strb	r6, [r5], #1
   31084:	ldr	r6, [r0]
   31088:	add	r0, r0, #8
   3108c:	str	r6, [r7], #4
   31090:	bne	31078 <flatcc_builder_end_union_vector@@Base+0x90>
   31094:	add	r0, sp, #8
   31098:	mov	r1, r4
   3109c:	str	r9, [sp]
   310a0:	bl	30ef8 <flatcc_builder_create_union_vector_direct@@Base>
   310a4:	ldr	r0, [sp, #8]
   310a8:	ldr	r1, [sp, #12]
   310ac:	stm	r8, {r0, r1}
   310b0:	mov	r1, #0
   310b4:	ldr	r0, [r4, #16]
   310b8:	ldr	r2, [r4, #20]
   310bc:	bl	14ef0 <memset@plt>
   310c0:	ldr	r0, [r4, #32]
   310c4:	ldr	r1, [r4, #60]	; 0x3c
   310c8:	ldr	r2, [r4, #64]	; 0x40
   310cc:	ldr	r3, [r0, #8]
   310d0:	str	r3, [r4, #20]
   310d4:	ldr	r3, [r0]
   310d8:	str	r3, [r4, #28]
   310dc:	add	r1, r1, r3
   310e0:	ldr	r7, [r0, #4]
   310e4:	str	r1, [r4, #16]
   310e8:	sub	r1, r2, r3
   310ec:	cmp	r1, r7
   310f0:	movhi	r1, r7
   310f4:	str	r1, [r4, #24]
   310f8:	ldrh	r1, [r4, #130]	; 0x82
   310fc:	ldrh	r2, [r4, #128]	; 0x80
   31100:	cmp	r2, r1
   31104:	strhcc	r1, [r4, #128]	; 0x80
   31108:	ldrh	r1, [r0, #12]
   3110c:	sub	r0, r0, #36	; 0x24
   31110:	str	r0, [r4, #32]
   31114:	strh	r1, [r4, #130]	; 0x82
   31118:	ldr	r0, [r4, #156]	; 0x9c
   3111c:	sub	r0, r0, #1
   31120:	str	r0, [r4, #156]	; 0x9c
   31124:	sub	sp, fp, #24
   31128:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   3112c:	movw	r0, #32440	; 0x7eb8
   31130:	movw	r1, #29334	; 0x7296
   31134:	movw	r3, #32490	; 0x7eea
   31138:	movw	r2, #1617	; 0x651
   3113c:	movt	r0, #4
   31140:	movt	r1, #4
   31144:	movt	r3, #4
   31148:	bl	14f44 <__assert_fail@plt>

0003114c <flatcc_builder_union_vector_count@@Base>:
   3114c:	ldr	r0, [r0, #32]
   31150:	ldr	r0, [r0, #20]
   31154:	bx	lr

00031158 <flatcc_builder_union_vector_edit@@Base>:
   31158:	ldr	r0, [r0, #16]
   3115c:	bx	lr

00031160 <flatcc_builder_extend_union_vector@@Base>:
   31160:	push	{r4, r5, fp, lr}
   31164:	add	fp, sp, #8
   31168:	mov	r4, r0
   3116c:	ldr	r0, [r0, #32]
   31170:	ldr	r2, [r0, #20]
   31174:	adds	r2, r2, r1
   31178:	cmpcc	r2, #536870912	; 0x20000000
   3117c:	bcc	311a0 <flatcc_builder_extend_union_vector@@Base+0x40>
   31180:	movw	r0, #33605	; 0x8345
   31184:	movw	r1, #29334	; 0x7296
   31188:	movw	r3, #33632	; 0x8360
   3118c:	mov	r2, #892	; 0x37c
   31190:	movt	r0, #4
   31194:	movt	r1, #4
   31198:	movt	r3, #4
   3119c:	bl	14f44 <__assert_fail@plt>
   311a0:	str	r2, [r0, #20]
   311a4:	ldr	r5, [r4, #20]
   311a8:	ldr	r2, [r4, #24]
   311ac:	add	r0, r5, r1, lsl #3
   311b0:	cmp	r0, r2
   311b4:	str	r0, [r4, #20]
   311b8:	bcc	311dc <flatcc_builder_extend_union_vector@@Base+0x7c>
   311bc:	add	r1, r0, #1
   311c0:	mov	r0, r4
   311c4:	mvn	r2, #3
   311c8:	bl	31a1c <flatcc_builder_get_emit_context@@Base+0x8>
   311cc:	mov	r1, r0
   311d0:	mov	r0, #0
   311d4:	cmp	r1, #0
   311d8:	popne	{r4, r5, fp, pc}
   311dc:	ldr	r0, [r4, #16]
   311e0:	add	r0, r0, r5
   311e4:	pop	{r4, r5, fp, pc}

000311e8 <flatcc_builder_truncate_union_vector@@Base>:
   311e8:	push	{fp, lr}
   311ec:	mov	fp, sp
   311f0:	ldr	r2, [r0, #32]
   311f4:	ldrh	r3, [r2, #14]
   311f8:	cmp	r3, #7
   311fc:	bne	31244 <flatcc_builder_truncate_union_vector@@Base+0x5c>
   31200:	ldr	r3, [r2, #20]
   31204:	cmp	r3, r1
   31208:	bcc	31264 <flatcc_builder_truncate_union_vector@@Base+0x7c>
   3120c:	sub	r3, r3, r1
   31210:	str	r3, [r2, #20]
   31214:	ldr	r2, [r0, #32]
   31218:	ldr	r3, [r0, #20]
   3121c:	ldr	ip, [r0, #16]
   31220:	ldr	r2, [r2, #16]
   31224:	mls	r3, r2, r1, r3
   31228:	mul	r2, r2, r1
   3122c:	mov	r1, #0
   31230:	str	r3, [r0, #20]
   31234:	add	r0, ip, r3
   31238:	bl	14ef0 <memset@plt>
   3123c:	mov	r0, #0
   31240:	pop	{fp, pc}
   31244:	movw	r0, #32440	; 0x7eb8
   31248:	movw	r1, #29334	; 0x7296
   3124c:	movw	r3, #32573	; 0x7f3d
   31250:	movw	r2, #1665	; 0x681
   31254:	movt	r0, #4
   31258:	movt	r1, #4
   3125c:	movt	r3, #4
   31260:	bl	14f44 <__assert_fail@plt>
   31264:	movw	r0, #31004	; 0x791c
   31268:	movw	r1, #29334	; 0x7296
   3126c:	movw	r3, #32573	; 0x7f3d
   31270:	movw	r2, #1666	; 0x682
   31274:	movt	r0, #4
   31278:	movt	r1, #4
   3127c:	movt	r3, #4
   31280:	bl	14f44 <__assert_fail@plt>

00031284 <flatcc_builder_union_vector_push@@Base>:
   31284:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   31288:	add	fp, sp, #24
   3128c:	mov	r7, r0
   31290:	ldr	r0, [r0, #32]
   31294:	mov	r5, r1
   31298:	ldrh	r1, [r0, #14]
   3129c:	cmp	r1, #7
   312a0:	bne	31308 <flatcc_builder_union_vector_push@@Base+0x84>
   312a4:	ldr	r1, [r0, #20]
   312a8:	mov	r6, #0
   312ac:	cmn	r1, #-536870911	; 0xe0000001
   312b0:	beq	31300 <flatcc_builder_union_vector_push@@Base+0x7c>
   312b4:	add	r1, r1, #1
   312b8:	mov	r8, r2
   312bc:	str	r1, [r0, #20]
   312c0:	ldr	r4, [r7, #20]
   312c4:	ldr	r0, [r7, #24]
   312c8:	add	r1, r4, #8
   312cc:	cmp	r1, r0
   312d0:	str	r1, [r7, #20]
   312d4:	bcc	312f0 <flatcc_builder_union_vector_push@@Base+0x6c>
   312d8:	add	r1, r4, #9
   312dc:	mov	r0, r7
   312e0:	mvn	r2, #3
   312e4:	bl	31a1c <flatcc_builder_get_emit_context@@Base+0x8>
   312e8:	cmp	r0, #0
   312ec:	bne	31300 <flatcc_builder_union_vector_push@@Base+0x7c>
   312f0:	ldr	r0, [r7, #16]
   312f4:	adds	r0, r0, r4
   312f8:	movne	r6, r0
   312fc:	stmne	r0, {r5, r8}
   31300:	mov	r0, r6
   31304:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   31308:	movw	r0, #32440	; 0x7eb8
   3130c:	movw	r1, #29334	; 0x7296
   31310:	movw	r3, #32642	; 0x7f82
   31314:	movw	r2, #1677	; 0x68d
   31318:	movt	r0, #4
   3131c:	movt	r1, #4
   31320:	movt	r3, #4
   31324:	bl	14f44 <__assert_fail@plt>

00031328 <flatcc_builder_append_union_vector@@Base>:
   31328:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   3132c:	add	fp, sp, #24
   31330:	mov	r6, r0
   31334:	ldr	r0, [r0, #32]
   31338:	mov	r8, r1
   3133c:	ldrh	r1, [r0, #14]
   31340:	cmp	r1, #7
   31344:	bne	313e0 <flatcc_builder_append_union_vector@@Base+0xb8>
   31348:	ldr	r1, [r0, #20]
   3134c:	mov	r5, r2
   31350:	adds	r1, r1, r2
   31354:	cmpcc	r1, #536870912	; 0x20000000
   31358:	bcc	3137c <flatcc_builder_append_union_vector@@Base+0x54>
   3135c:	movw	r0, #33605	; 0x8345
   31360:	movw	r1, #29334	; 0x7296
   31364:	movw	r3, #33632	; 0x8360
   31368:	mov	r2, #892	; 0x37c
   3136c:	movt	r0, #4
   31370:	movt	r1, #4
   31374:	movt	r3, #4
   31378:	bl	14f44 <__assert_fail@plt>
   3137c:	str	r1, [r0, #20]
   31380:	ldr	r4, [r6, #20]
   31384:	ldr	r1, [r6, #24]
   31388:	add	r0, r4, r5, lsl #3
   3138c:	cmp	r0, r1
   31390:	str	r0, [r6, #20]
   31394:	bcc	313b4 <flatcc_builder_append_union_vector@@Base+0x8c>
   31398:	add	r1, r0, #1
   3139c:	mov	r0, r6
   313a0:	mvn	r2, #3
   313a4:	bl	31a1c <flatcc_builder_get_emit_context@@Base+0x8>
   313a8:	mov	r7, #0
   313ac:	cmp	r0, #0
   313b0:	bne	313d8 <flatcc_builder_append_union_vector@@Base+0xb0>
   313b4:	ldr	r0, [r6, #16]
   313b8:	adds	r7, r0, r4
   313bc:	beq	313d4 <flatcc_builder_append_union_vector@@Base+0xac>
   313c0:	lsl	r2, r5, #3
   313c4:	mov	r0, r7
   313c8:	mov	r1, r8
   313cc:	bl	14e60 <memcpy@plt>
   313d0:	b	313d8 <flatcc_builder_append_union_vector@@Base+0xb0>
   313d4:	mov	r7, #0
   313d8:	mov	r0, r7
   313dc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   313e0:	movw	r0, #32440	; 0x7eb8
   313e4:	movw	r1, #29334	; 0x7296
   313e8:	movw	r3, #32751	; 0x7fef
   313ec:	movw	r2, #1692	; 0x69c
   313f0:	movt	r0, #4
   313f4:	movt	r1, #4
   313f8:	movt	r3, #4
   313fc:	bl	14f44 <__assert_fail@plt>

00031400 <flatcc_builder_create_string@@Base>:
   31400:	push	{r4, r5, r6, sl, fp, lr}
   31404:	add	fp, sp, #16
   31408:	sub	sp, sp, #80	; 0x50
   3140c:	str	r2, [fp, #-20]	; 0xffffffec
   31410:	mvn	r5, r2
   31414:	mov	r6, r0
   31418:	mov	r3, #1
   3141c:	cmp	r2, #0
   31420:	ldr	ip, [r0, #136]	; 0x88
   31424:	sub	r0, fp, #20
   31428:	str	r0, [sp, #12]
   3142c:	mov	r0, #4
   31430:	str	r0, [sp, #4]
   31434:	str	r0, [sp, #16]
   31438:	str	r3, [sp, #8]
   3143c:	add	r5, ip, r5
   31440:	and	r5, r5, #3
   31444:	add	r5, r5, #1
   31448:	beq	31464 <flatcc_builder_create_string@@Base+0x64>
   3144c:	mov	r3, #2
   31450:	add	r0, r2, #4
   31454:	str	r1, [sp, #20]
   31458:	str	r2, [sp, #24]
   3145c:	str	r3, [sp, #8]
   31460:	str	r0, [sp, #4]
   31464:	movw	r2, #28804	; 0x7084
   31468:	add	lr, sp, #4
   3146c:	add	r1, r0, r5
   31470:	add	r0, lr, r3, lsl #3
   31474:	movt	r2, #4
   31478:	str	r1, [sp, #4]
   3147c:	cmp	r1, #0
   31480:	str	r2, [r0, #8]
   31484:	add	r2, r3, #1
   31488:	str	r5, [r0, #12]
   3148c:	str	r2, [sp, #8]
   31490:	ble	314e4 <flatcc_builder_create_string@@Base+0xe4>
   31494:	ldr	r0, [r6, #36]	; 0x24
   31498:	ldr	r4, [r6, #44]	; 0x2c
   3149c:	sub	r5, ip, r1
   314a0:	str	r1, [sp]
   314a4:	add	r1, lr, #8
   314a8:	mov	r3, r5
   314ac:	blx	r4
   314b0:	cmp	r0, #0
   314b4:	streq	r5, [r6, #136]	; 0x88
   314b8:	moveq	r0, r5
   314bc:	subeq	sp, fp, #16
   314c0:	popeq	{r4, r5, r6, sl, fp, pc}
   314c4:	movw	r0, #33852	; 0x843c
   314c8:	movw	r1, #29334	; 0x7296
   314cc:	movw	r3, #33531	; 0x82fb
   314d0:	movw	r2, #651	; 0x28b
   314d4:	movt	r0, #4
   314d8:	movt	r1, #4
   314dc:	movt	r3, #4
   314e0:	bl	14f44 <__assert_fail@plt>
   314e4:	movw	r0, #33852	; 0x843c
   314e8:	movw	r1, #29334	; 0x7296
   314ec:	movw	r3, #33531	; 0x82fb
   314f0:	movw	r2, #647	; 0x287
   314f4:	movt	r0, #4
   314f8:	movt	r1, #4
   314fc:	movt	r3, #4
   31500:	bl	14f44 <__assert_fail@plt>

00031504 <flatcc_builder_create_string_str@@Base>:
   31504:	push	{r4, r5, fp, lr}
   31508:	add	fp, sp, #8
   3150c:	mov	r5, r0
   31510:	mov	r0, r1
   31514:	mov	r4, r1
   31518:	bl	14ecc <strlen@plt>
   3151c:	mov	r2, r0
   31520:	mov	r0, r5
   31524:	mov	r1, r4
   31528:	pop	{r4, r5, fp, lr}
   3152c:	b	31400 <flatcc_builder_create_string@@Base>

00031530 <flatcc_builder_create_string_strn@@Base>:
   31530:	push	{r4, r5, r6, sl, fp, lr}
   31534:	add	fp, sp, #16
   31538:	mov	r6, r0
   3153c:	mov	r5, r1
   31540:	mov	r0, r1
   31544:	mov	r1, #0
   31548:	mov	r4, r2
   3154c:	bl	14f14 <memchr@plt>
   31550:	cmp	r0, #0
   31554:	mov	r1, r5
   31558:	subne	r4, r0, r5
   3155c:	mov	r0, r6
   31560:	mov	r2, r4
   31564:	pop	{r4, r5, r6, sl, fp, lr}
   31568:	b	31400 <flatcc_builder_create_string@@Base>

0003156c <flatcc_builder_end_string@@Base>:
   3156c:	push	{r4, r5, fp, lr}
   31570:	add	fp, sp, #8
   31574:	mov	r4, r0
   31578:	ldr	r0, [r0, #32]
   3157c:	ldrh	r1, [r0, #14]
   31580:	cmp	r1, #6
   31584:	bne	3162c <flatcc_builder_end_string@@Base+0xc0>
   31588:	ldr	r2, [r0, #20]
   3158c:	ldr	r0, [r4, #20]
   31590:	cmp	r2, r0
   31594:	bne	3164c <flatcc_builder_end_string@@Base+0xe0>
   31598:	ldr	r1, [r4, #16]
   3159c:	mov	r0, r4
   315a0:	bl	31400 <flatcc_builder_create_string@@Base>
   315a4:	mov	r5, r0
   315a8:	cmp	r0, #0
   315ac:	beq	31624 <flatcc_builder_end_string@@Base+0xb8>
   315b0:	ldr	r0, [r4, #16]
   315b4:	ldr	r2, [r4, #20]
   315b8:	mov	r1, #0
   315bc:	bl	14ef0 <memset@plt>
   315c0:	ldr	r0, [r4, #32]
   315c4:	ldr	r1, [r4, #60]	; 0x3c
   315c8:	ldr	ip, [r4, #64]	; 0x40
   315cc:	ldr	r3, [r0, #8]
   315d0:	str	r3, [r4, #20]
   315d4:	ldr	r3, [r0]
   315d8:	str	r3, [r4, #28]
   315dc:	add	r1, r1, r3
   315e0:	ldr	r2, [r0, #4]
   315e4:	str	r1, [r4, #16]
   315e8:	sub	r1, ip, r3
   315ec:	cmp	r1, r2
   315f0:	movhi	r1, r2
   315f4:	str	r1, [r4, #24]
   315f8:	ldrh	r1, [r4, #130]	; 0x82
   315fc:	ldrh	r2, [r4, #128]	; 0x80
   31600:	cmp	r2, r1
   31604:	strhcc	r1, [r4, #128]	; 0x80
   31608:	ldrh	r1, [r0, #12]
   3160c:	sub	r0, r0, #36	; 0x24
   31610:	str	r0, [r4, #32]
   31614:	strh	r1, [r4, #130]	; 0x82
   31618:	ldr	r0, [r4, #156]	; 0x9c
   3161c:	sub	r0, r0, #1
   31620:	str	r0, [r4, #156]	; 0x9c
   31624:	mov	r0, r5
   31628:	pop	{r4, r5, fp, pc}
   3162c:	movw	r0, #30651	; 0x77bb
   31630:	movw	r1, #29334	; 0x7296
   31634:	movw	r3, #32878	; 0x806e
   31638:	movw	r2, #1732	; 0x6c4
   3163c:	movt	r0, #4
   31640:	movt	r1, #4
   31644:	movt	r3, #4
   31648:	bl	14f44 <__assert_fail@plt>
   3164c:	movw	r0, #32945	; 0x80b1
   31650:	movw	r1, #29334	; 0x7296
   31654:	movw	r3, #32878	; 0x806e
   31658:	movw	r2, #1733	; 0x6c5
   3165c:	movt	r0, #4
   31660:	movt	r1, #4
   31664:	movt	r3, #4
   31668:	bl	14f44 <__assert_fail@plt>

0003166c <flatcc_builder_string_edit@@Base>:
   3166c:	ldr	r0, [r0, #16]
   31670:	bx	lr

00031674 <flatcc_builder_string_len@@Base>:
   31674:	ldr	r0, [r0, #32]
   31678:	ldr	r0, [r0, #20]
   3167c:	bx	lr

00031680 <flatcc_builder_table_edit@@Base>:
   31680:	ldr	r2, [r0, #32]
   31684:	ldrh	r2, [r2, #14]
   31688:	cmp	r2, #3
   3168c:	ldreq	r2, [r0, #16]
   31690:	ldreq	r0, [r0, #20]
   31694:	addeq	r0, r2, r0
   31698:	subeq	r0, r0, r1
   3169c:	bxeq	lr
   316a0:	push	{fp, lr}
   316a4:	mov	fp, sp
   316a8:	movw	r0, #31403	; 0x7aab
   316ac:	movw	r1, #29334	; 0x7296
   316b0:	movw	r3, #33123	; 0x8163
   316b4:	movw	r2, #1794	; 0x702
   316b8:	movt	r0, #4
   316bc:	movt	r1, #4
   316c0:	movt	r3, #4
   316c4:	bl	14f44 <__assert_fail@plt>

000316c8 <flatcc_builder_table_add_copy@@Base>:
   316c8:	push	{r4, r5, r6, sl, fp, lr}
   316cc:	add	fp, sp, #16
   316d0:	mov	r4, r3
   316d4:	ldr	r3, [fp, #8]
   316d8:	mov	r5, r2
   316dc:	mov	r2, r4
   316e0:	bl	30b5c <flatcc_builder_table_add@@Base>
   316e4:	mov	r6, r0
   316e8:	cmp	r0, #0
   316ec:	beq	31700 <flatcc_builder_table_add_copy@@Base+0x38>
   316f0:	mov	r0, r6
   316f4:	mov	r1, r5
   316f8:	mov	r2, r4
   316fc:	bl	14e60 <memcpy@plt>
   31700:	mov	r0, r6
   31704:	pop	{r4, r5, r6, sl, fp, pc}

00031708 <flatcc_builder_push_buffer_alignment@@Base>:
   31708:	ldrh	r1, [r0, #128]	; 0x80
   3170c:	mov	r2, #4
   31710:	strh	r2, [r0, #128]	; 0x80
   31714:	mov	r0, r1
   31718:	bx	lr

0003171c <flatcc_builder_pop_buffer_alignment@@Base>:
   3171c:	ldrh	r2, [r0, #128]	; 0x80
   31720:	cmp	r2, r1
   31724:	strhcc	r1, [r0, #128]	; 0x80
   31728:	bx	lr

0003172c <flatcc_builder_get_buffer_alignment@@Base>:
   3172c:	ldrh	r0, [r0, #128]	; 0x80
   31730:	bx	lr

00031734 <flatcc_builder_set_vtable_clustering@@Base>:
   31734:	clz	r1, r1
   31738:	lsr	r1, r1, #5
   3173c:	str	r1, [r0, #180]	; 0xb4
   31740:	bx	lr

00031744 <flatcc_builder_set_block_align@@Base>:
   31744:	strh	r1, [r0, #132]	; 0x84
   31748:	bx	lr

0003174c <flatcc_builder_get_level@@Base>:
   3174c:	ldr	r0, [r0, #156]	; 0x9c
   31750:	bx	lr

00031754 <flatcc_builder_set_max_level@@Base>:
   31754:	str	r1, [r0, #176]	; 0xb0
   31758:	ldr	r2, [r0, #160]	; 0xa0
   3175c:	cmp	r2, r1
   31760:	strlt	r1, [r0, #160]	; 0xa0
   31764:	bx	lr

00031768 <flatcc_builder_get_buffer_size@@Base>:
   31768:	ldr	r1, [r0, #136]	; 0x88
   3176c:	ldr	r0, [r0, #140]	; 0x8c
   31770:	sub	r0, r0, r1
   31774:	bx	lr

00031778 <flatcc_builder_get_buffer_start@@Base>:
   31778:	ldr	r0, [r0, #136]	; 0x88
   3177c:	bx	lr

00031780 <flatcc_builder_get_buffer_end@@Base>:
   31780:	ldr	r0, [r0, #140]	; 0x8c
   31784:	bx	lr

00031788 <flatcc_builder_set_vtable_cache_limit@@Base>:
   31788:	str	r1, [r0, #172]	; 0xac
   3178c:	bx	lr

00031790 <flatcc_builder_set_identifier@@Base>:
   31790:	movw	r2, #28804	; 0x7084
   31794:	cmp	r1, #0
   31798:	movt	r2, #4
   3179c:	movne	r2, r1
   317a0:	ldr	r1, [r2]
   317a4:	str	r1, [r0, #168]	; 0xa8
   317a8:	bx	lr

000317ac <flatcc_builder_get_type@@Base>:
   317ac:	ldr	r0, [r0, #32]
   317b0:	cmp	r0, #0
   317b4:	ldrhne	r0, [r0, #14]
   317b8:	moveq	r0, #0
   317bc:	bx	lr

000317c0 <flatcc_builder_get_type_at@@Base>:
   317c0:	mov	r2, r0
   317c4:	cmp	r1, #1
   317c8:	mov	r0, #0
   317cc:	ldrge	r3, [r2, #156]	; 0x9c
   317d0:	cmpge	r3, r1
   317d4:	bge	317dc <flatcc_builder_get_type_at@@Base+0x1c>
   317d8:	bx	lr
   317dc:	sub	r0, r1, r3
   317e0:	ldr	r1, [r2, #32]
   317e4:	add	r0, r0, r0, lsl #3
   317e8:	add	r0, r1, r0, lsl #2
   317ec:	ldrh	r0, [r0, #14]
   317f0:	bx	lr

000317f4 <flatcc_builder_get_direct_buffer@@Base>:
   317f4:	ldr	r2, [r0, #184]	; 0xb8
   317f8:	cmp	r2, #0
   317fc:	beq	31810 <flatcc_builder_get_direct_buffer@@Base+0x1c>
   31800:	ldr	r2, [r0, #188]	; 0xbc
   31804:	ldr	r3, [r0, #192]	; 0xc0
   31808:	cmp	r2, r3
   3180c:	beq	31820 <flatcc_builder_get_direct_buffer@@Base+0x2c>
   31810:	mov	r0, #0
   31814:	cmp	r1, #0
   31818:	strne	r0, [r1]
   3181c:	bx	lr
   31820:	cmp	r1, #0
   31824:	ldrne	r2, [r0, #212]	; 0xd4
   31828:	strne	r2, [r1]
   3182c:	ldr	r0, [r0, #196]	; 0xc4
   31830:	bx	lr

00031834 <flatcc_builder_copy_buffer@@Base>:
   31834:	push	{fp, lr}
   31838:	mov	fp, sp
   3183c:	ldr	r3, [r0, #184]	; 0xb8
   31840:	cmp	r3, #0
   31844:	beq	31878 <flatcc_builder_copy_buffer@@Base+0x44>
   31848:	add	r0, r0, #188	; 0xbc
   3184c:	bl	31f54 <flatcc_emitter_copy_buffer@@Base>
   31850:	cmp	r0, #0
   31854:	popne	{fp, pc}
   31858:	movw	r0, #13751	; 0x35b7
   3185c:	movw	r1, #29334	; 0x7296
   31860:	movw	r3, #33262	; 0x81ee
   31864:	movw	r2, #1926	; 0x786
   31868:	movt	r0, #4
   3186c:	movt	r1, #4
   31870:	movt	r3, #4
   31874:	bl	14f44 <__assert_fail@plt>
   31878:	mov	r0, #0
   3187c:	pop	{fp, pc}

00031880 <flatcc_builder_finalize_buffer@@Base>:
   31880:	push	{r4, r5, r6, sl, fp, lr}
   31884:	add	fp, sp, #16
   31888:	mov	r4, r0
   3188c:	ldr	r0, [r0, #136]	; 0x88
   31890:	cmp	r1, #0
   31894:	ldr	r2, [r4, #140]	; 0x8c
   31898:	sub	r5, r2, r0
   3189c:	mov	r0, r5
   318a0:	strne	r5, [r1]
   318a4:	bl	14ea8 <malloc@plt>
   318a8:	cmp	r0, #0
   318ac:	beq	318f0 <flatcc_builder_finalize_buffer@@Base+0x70>
   318b0:	mov	r6, r0
   318b4:	mov	r0, r4
   318b8:	mov	r2, r5
   318bc:	mov	r1, r6
   318c0:	bl	31834 <flatcc_builder_copy_buffer@@Base>
   318c4:	cmp	r0, #0
   318c8:	movne	r0, r6
   318cc:	popne	{r4, r5, r6, sl, fp, pc}
   318d0:	movw	r0, #33852	; 0x843c
   318d4:	movw	r1, #29334	; 0x7296
   318d8:	movw	r3, #33331	; 0x8233
   318dc:	movw	r2, #1948	; 0x79c
   318e0:	movt	r0, #4
   318e4:	movt	r1, #4
   318e8:	movt	r3, #4
   318ec:	bl	14f44 <__assert_fail@plt>
   318f0:	movw	r0, #33852	; 0x843c
   318f4:	movw	r1, #29334	; 0x7296
   318f8:	movw	r3, #33331	; 0x8233
   318fc:	movw	r2, #1944	; 0x798
   31900:	movt	r0, #4
   31904:	movt	r1, #4
   31908:	movt	r3, #4
   3190c:	bl	14f44 <__assert_fail@plt>

00031910 <flatcc_builder_finalize_aligned_buffer@@Base>:
   31910:	push	{r4, r5, r6, r7, fp, lr}
   31914:	add	fp, sp, #16
   31918:	sub	sp, sp, #8
   3191c:	mov	r5, r0
   31920:	mov	r4, r1
   31924:	ldr	r0, [r0, #136]	; 0x88
   31928:	ldr	r1, [r5, #140]	; 0x8c
   3192c:	cmp	r4, #0
   31930:	sub	r0, r1, r0
   31934:	mov	r1, #0
   31938:	strne	r0, [r4]
   3193c:	ldrh	r2, [r5, #128]	; 0x80
   31940:	str	r1, [sp, #4]
   31944:	add	r0, r0, r2
   31948:	cmp	r2, #4
   3194c:	mov	r1, r2
   31950:	rsb	r2, r2, #0
   31954:	sub	r0, r0, #1
   31958:	movls	r1, #4
   3195c:	and	r7, r0, r2
   31960:	add	r0, sp, #4
   31964:	mov	r2, r7
   31968:	bl	14ee4 <posix_memalign@plt>
   3196c:	ldr	r6, [sp, #4]
   31970:	cmp	r0, #0
   31974:	cmpne	r6, #0
   31978:	bne	3199c <flatcc_builder_finalize_aligned_buffer@@Base+0x8c>
   3197c:	cmp	r6, #0
   31980:	beq	319a4 <flatcc_builder_finalize_aligned_buffer@@Base+0x94>
   31984:	mov	r0, r5
   31988:	mov	r1, r6
   3198c:	mov	r2, r7
   31990:	bl	31834 <flatcc_builder_copy_buffer@@Base>
   31994:	cmp	r0, #0
   31998:	bne	319b0 <flatcc_builder_finalize_aligned_buffer@@Base+0xa0>
   3199c:	mov	r0, r6
   319a0:	bl	14e54 <free@plt>
   319a4:	mov	r6, #0
   319a8:	cmp	r4, #0
   319ac:	strne	r6, [r4]
   319b0:	mov	r0, r6
   319b4:	sub	sp, fp, #16
   319b8:	pop	{r4, r5, r6, r7, fp, pc}

000319bc <flatcc_builder_aligned_alloc@@Base>:
   319bc:	push	{fp, lr}
   319c0:	mov	fp, sp
   319c4:	sub	sp, sp, #8
   319c8:	mov	r2, r1
   319cc:	mov	r1, r0
   319d0:	mov	r0, #0
   319d4:	cmp	r1, #4
   319d8:	str	r0, [sp, #4]
   319dc:	add	r0, sp, #4
   319e0:	movls	r1, #4
   319e4:	bl	14ee4 <posix_memalign@plt>
   319e8:	mov	r1, r0
   319ec:	ldr	r0, [sp, #4]
   319f0:	cmp	r1, #0
   319f4:	cmpne	r0, #0
   319f8:	beq	31a08 <flatcc_builder_aligned_alloc@@Base+0x4c>
   319fc:	bl	14e54 <free@plt>
   31a00:	mov	r0, #0
   31a04:	str	r0, [sp, #4]
   31a08:	mov	sp, fp
   31a0c:	pop	{fp, pc}

00031a10 <flatcc_builder_aligned_free@@Base>:
   31a10:	b	14e54 <free@plt>

00031a14 <flatcc_builder_get_emit_context@@Base>:
   31a14:	ldr	r0, [r0, #36]	; 0x24
   31a18:	bx	lr
   31a1c:	push	{r4, r5, r6, sl, fp, lr}
   31a20:	add	fp, sp, #16
   31a24:	sub	sp, sp, #8
   31a28:	mov	r6, r2
   31a2c:	ldr	r2, [r0, #28]
   31a30:	mov	r5, r0
   31a34:	ldr	r0, [r0, #40]	; 0x28
   31a38:	mov	r3, #1
   31a3c:	ldr	r4, [r5, #48]	; 0x30
   31a40:	str	r3, [sp]
   31a44:	mov	r3, #1
   31a48:	add	r2, r2, r1
   31a4c:	add	r1, r5, #60	; 0x3c
   31a50:	blx	r4
   31a54:	mov	r1, r0
   31a58:	mvn	r0, #0
   31a5c:	cmp	r1, #0
   31a60:	bne	31a94 <flatcc_builder_get_emit_context@@Base+0x80>
   31a64:	ldr	r0, [r5, #28]
   31a68:	ldr	r2, [r5, #60]	; 0x3c
   31a6c:	ldr	r3, [r5, #64]	; 0x40
   31a70:	ldr	r1, [r5, #32]
   31a74:	add	r2, r2, r0
   31a78:	sub	r0, r3, r0
   31a7c:	cmp	r0, r6
   31a80:	str	r2, [r5, #16]
   31a84:	movhi	r0, r6
   31a88:	str	r0, [r5, #24]
   31a8c:	mov	r0, #0
   31a90:	str	r6, [r1, #4]
   31a94:	sub	sp, fp, #16
   31a98:	pop	{r4, r5, r6, sl, fp, pc}

00031a9c <flatcc_emitter_recycle_page@@Base>:
   31a9c:	ldr	r3, [r0]
   31aa0:	mov	r2, r0
   31aa4:	mvn	r0, #0
   31aa8:	cmp	r3, r1
   31aac:	ldrne	r2, [r2, #4]
   31ab0:	cmpne	r2, r1
   31ab4:	bne	31abc <flatcc_emitter_recycle_page@@Base+0x20>
   31ab8:	bx	lr
   31abc:	ldr	r0, [r1, #2944]	; 0xb80
   31ac0:	ldr	r2, [r1, #2948]	; 0xb84
   31ac4:	str	r2, [r0, #2948]	; 0xb84
   31ac8:	ldr	r2, [r1, #2948]	; 0xb84
   31acc:	str	r0, [r2, #2944]	; 0xb80
   31ad0:	ldr	r0, [r3, #2948]	; 0xb84
   31ad4:	str	r3, [r1, #2944]	; 0xb80
   31ad8:	str	r0, [r1, #2948]	; 0xb84
   31adc:	str	r1, [r0, #2944]	; 0xb80
   31ae0:	ldr	r0, [r1, #2944]	; 0xb80
   31ae4:	str	r1, [r0, #2948]	; 0xb84
   31ae8:	mov	r0, #0
   31aec:	bx	lr

00031af0 <flatcc_emitter_reset@@Base>:
   31af0:	push	{r4, sl, fp, lr}
   31af4:	add	fp, sp, #8
   31af8:	ldr	r1, [r0]
   31afc:	cmp	r1, #0
   31b00:	beq	31bb8 <flatcc_emitter_reset@@Base+0xc8>
   31b04:	mov	r4, r0
   31b08:	add	r2, r1, #1472	; 0x5c0
   31b0c:	mov	r0, #1472	; 0x5c0
   31b10:	mov	r3, #0
   31b14:	stmib	r4, {r1, r2}
   31b18:	str	r0, [r4, #12]
   31b1c:	str	r2, [r4, #16]
   31b20:	str	r0, [r4, #20]
   31b24:	movw	r0, #64064	; 0xfa40
   31b28:	movt	r0, #65535	; 0xffff
   31b2c:	str	r0, [r1, #2952]	; 0xb88
   31b30:	ldr	r2, [r4, #32]
   31b34:	ldr	r0, [r4, #24]
   31b38:	cmp	r2, #0
   31b3c:	moveq	r2, r0
   31b40:	streq	r0, [r4, #32]
   31b44:	str	r3, [r4, #24]
   31b48:	add	r2, r2, r2, lsl #1
   31b4c:	lsr	r2, r2, #2
   31b50:	add	r0, r2, r0, lsr #2
   31b54:	str	r0, [r4, #32]
   31b58:	ldr	r2, [r4, #28]
   31b5c:	cmp	r2, r0, lsl #1
   31b60:	bls	31bb8 <flatcc_emitter_reset@@Base+0xc8>
   31b64:	mov	r2, r1
   31b68:	ldr	r0, [r2, #2944]!	; 0xb80
   31b6c:	cmp	r0, r1
   31b70:	beq	31bb8 <flatcc_emitter_reset@@Base+0xc8>
   31b74:	ldr	r3, [r0, #2944]	; 0xb80
   31b78:	str	r3, [r2]
   31b7c:	ldr	r2, [r0, #2944]	; 0xb80
   31b80:	str	r1, [r2, #2948]	; 0xb84
   31b84:	bl	14e54 <free@plt>
   31b88:	ldr	r0, [r4, #28]
   31b8c:	ldr	r1, [r4, #32]
   31b90:	sub	r0, r0, #2944	; 0xb80
   31b94:	cmp	r0, r1, lsl #1
   31b98:	str	r0, [r4, #28]
   31b9c:	popls	{r4, sl, fp, pc}
   31ba0:	ldr	r1, [r4, #4]
   31ba4:	ldr	r3, [r4]
   31ba8:	mov	r2, r1
   31bac:	ldr	r0, [r2, #2944]!	; 0xb80
   31bb0:	cmp	r0, r3
   31bb4:	bne	31b74 <flatcc_emitter_reset@@Base+0x84>
   31bb8:	pop	{r4, sl, fp, pc}

00031bbc <flatcc_emitter_clear@@Base>:
   31bbc:	push	{r4, r5, r6, sl, fp, lr}
   31bc0:	add	fp, sp, #16
   31bc4:	ldr	r5, [r0]
   31bc8:	cmp	r5, #0
   31bcc:	popeq	{r4, r5, r6, sl, fp, pc}
   31bd0:	mov	r4, r0
   31bd4:	ldr	r0, [r5, #2948]	; 0xb84
   31bd8:	mov	r6, #0
   31bdc:	str	r6, [r0, #2944]	; 0xb80
   31be0:	b	31bf0 <flatcc_emitter_clear@@Base+0x34>
   31be4:	mov	r5, r0
   31be8:	ldr	r0, [r0, #2948]	; 0xb84
   31bec:	bl	14e54 <free@plt>
   31bf0:	ldr	r0, [r5, #2944]	; 0xb80
   31bf4:	cmp	r0, #0
   31bf8:	bne	31be4 <flatcc_emitter_clear@@Base+0x28>
   31bfc:	mov	r0, r5
   31c00:	bl	14e54 <free@plt>
   31c04:	vmov.i32	q8, #0	; 0x00000000
   31c08:	add	r0, r4, #16
   31c0c:	vst1.32	{d16-d17}, [r0]
   31c10:	mov	r0, #32
   31c14:	vst1.32	{d16-d17}, [r4], r0
   31c18:	str	r6, [r4]
   31c1c:	pop	{r4, r5, r6, sl, fp, pc}

00031c20 <flatcc_emitter@@Base>:
   31c20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   31c24:	add	fp, sp, #28
   31c28:	sub	sp, sp, #4
   31c2c:	mov	r6, r0
   31c30:	mov	r7, r1
   31c34:	ldr	r0, [r0, #24]
   31c38:	ldr	r1, [fp, #8]
   31c3c:	mov	r4, r2
   31c40:	cmn	r3, #1
   31c44:	mov	r9, r6
   31c48:	add	r0, r0, r1
   31c4c:	str	r0, [r6, #24]
   31c50:	ble	31d88 <flatcc_emitter@@Base+0x168>
   31c54:	ldr	r0, [r9, #20]!
   31c58:	cmp	r0, r1
   31c5c:	bcs	31ef0 <flatcc_emitter@@Base+0x2d0>
   31c60:	mov	r8, #0
   31c64:	cmp	r4, #0
   31c68:	beq	31f48 <flatcc_emitter@@Base+0x328>
   31c6c:	movw	sl, #64064	; 0xfa40
   31c70:	movt	sl, #65535	; 0xffff
   31c74:	ldr	r8, [r7, #4]
   31c78:	cmp	r8, #0
   31c7c:	beq	31d78 <flatcc_emitter@@Base+0x158>
   31c80:	ldr	r9, [r7]
   31c84:	cmp	r8, r0
   31c88:	mov	r5, r8
   31c8c:	bls	31d44 <flatcc_emitter@@Base+0x124>
   31c90:	mov	r5, r0
   31c94:	cmp	r5, #0
   31c98:	bne	31d44 <flatcc_emitter@@Base+0x124>
   31c9c:	ldr	r5, [r6, #4]
   31ca0:	cmp	r5, #0
   31ca4:	beq	31cb8 <flatcc_emitter@@Base+0x98>
   31ca8:	ldr	r0, [r5, #2944]	; 0xb80
   31cac:	ldr	r1, [r6]
   31cb0:	cmp	r0, r1
   31cb4:	bne	31cf0 <flatcc_emitter@@Base+0xd0>
   31cb8:	movw	r0, #2956	; 0xb8c
   31cbc:	bl	14ea8 <malloc@plt>
   31cc0:	cmp	r0, #0
   31cc4:	beq	31f00 <flatcc_emitter@@Base+0x2e0>
   31cc8:	ldr	r1, [r6, #28]
   31ccc:	cmp	r5, #0
   31cd0:	add	r1, r1, #2944	; 0xb80
   31cd4:	str	r1, [r6, #28]
   31cd8:	beq	31d14 <flatcc_emitter@@Base+0xf4>
   31cdc:	ldr	r1, [r6]
   31ce0:	str	r1, [r0, #2944]	; 0xb80
   31ce4:	str	r5, [r0, #2948]	; 0xb84
   31ce8:	str	r0, [r1, #2948]	; 0xb84
   31cec:	str	r0, [r5, #2944]	; 0xb80
   31cf0:	mov	r5, #2944	; 0xb80
   31cf4:	str	r0, [r6, #4]
   31cf8:	str	r0, [r6, #16]
   31cfc:	str	r5, [r6, #20]
   31d00:	ldr	r1, [r0, #2948]	; 0xb84
   31d04:	ldr	r1, [r1, #2952]	; 0xb88
   31d08:	add	r1, r1, #2944	; 0xb80
   31d0c:	str	r1, [r0, #2952]	; 0xb88
   31d10:	b	31d38 <flatcc_emitter@@Base+0x118>
   31d14:	mov	r5, #1472	; 0x5c0
   31d18:	add	r1, r0, #1472	; 0x5c0
   31d1c:	str	r0, [r6]
   31d20:	stmib	r6, {r0, r1, r5}
   31d24:	str	r1, [r6, #16]
   31d28:	str	r5, [r6, #20]
   31d2c:	str	r0, [r0, #2944]	; 0xb80
   31d30:	str	r0, [r0, #2948]	; 0xb84
   31d34:	str	sl, [r0, #2952]	; 0xb88
   31d38:	cmp	r8, r5
   31d3c:	bhi	31c94 <flatcc_emitter@@Base+0x74>
   31d40:	mov	r5, r8
   31d44:	ldr	r0, [r6, #16]
   31d48:	mov	r1, r9
   31d4c:	mov	r2, r5
   31d50:	bl	14e60 <memcpy@plt>
   31d54:	ldr	r0, [r6, #16]
   31d58:	ldr	r1, [r6, #20]
   31d5c:	add	r9, r9, r5
   31d60:	subs	r8, r8, r5
   31d64:	add	r2, r0, r5
   31d68:	sub	r0, r1, r5
   31d6c:	str	r2, [r6, #16]
   31d70:	str	r0, [r6, #20]
   31d74:	bne	31c84 <flatcc_emitter@@Base+0x64>
   31d78:	subs	r4, r4, #1
   31d7c:	add	r7, r7, #8
   31d80:	bne	31c74 <flatcc_emitter@@Base+0x54>
   31d84:	b	31ee8 <flatcc_emitter@@Base+0x2c8>
   31d88:	ldr	r0, [r9, #12]!
   31d8c:	cmp	r0, r1
   31d90:	bcs	31f08 <flatcc_emitter@@Base+0x2e8>
   31d94:	mov	r8, #0
   31d98:	cmp	r4, #0
   31d9c:	beq	31f48 <flatcc_emitter@@Base+0x328>
   31da0:	add	r0, r7, r4, lsl #3
   31da4:	movw	sl, #2952	; 0xb88
   31da8:	ldr	r8, [r0, #-4]
   31dac:	sub	r1, r0, #8
   31db0:	str	r1, [sp]
   31db4:	cmp	r8, #0
   31db8:	beq	31edc <flatcc_emitter@@Base+0x2bc>
   31dbc:	ldr	r0, [sp]
   31dc0:	ldr	r0, [r0]
   31dc4:	add	r7, r0, r8
   31dc8:	ldr	r1, [r9]
   31dcc:	b	31e94 <flatcc_emitter@@Base+0x274>
   31dd0:	ldr	r5, [r6]
   31dd4:	cmp	r5, #0
   31dd8:	beq	31e00 <flatcc_emitter@@Base+0x1e0>
   31ddc:	ldr	r0, [r5, #2948]	; 0xb84
   31de0:	ldr	r1, [r6, #4]
   31de4:	cmp	r0, r1
   31de8:	beq	31e00 <flatcc_emitter@@Base+0x1e0>
   31dec:	ldr	r1, [r5, #2952]	; 0xb88
   31df0:	mov	r2, r0
   31df4:	sub	r1, r1, #2944	; 0xb80
   31df8:	str	r1, [r2, #2952]!	; 0xb88
   31dfc:	b	31e3c <flatcc_emitter@@Base+0x21c>
   31e00:	movw	r0, #2956	; 0xb8c
   31e04:	bl	14ea8 <malloc@plt>
   31e08:	cmp	r0, #0
   31e0c:	beq	31f00 <flatcc_emitter@@Base+0x2e0>
   31e10:	ldr	r1, [r6, #28]
   31e14:	cmp	r5, #0
   31e18:	add	r1, r1, #2944	; 0xb80
   31e1c:	str	r1, [r6, #28]
   31e20:	beq	31e64 <flatcc_emitter@@Base+0x244>
   31e24:	ldr	r1, [r6, #4]
   31e28:	add	r2, r0, sl
   31e2c:	str	r5, [r0, #2944]	; 0xb80
   31e30:	str	r1, [r0, #2948]	; 0xb84
   31e34:	str	r0, [r5, #2948]	; 0xb84
   31e38:	str	r0, [r1, #2944]	; 0xb80
   31e3c:	str	r0, [r6]
   31e40:	add	r3, r0, #2944	; 0xb80
   31e44:	mov	r1, #2944	; 0xb80
   31e48:	str	r3, [r6, #8]
   31e4c:	str	r1, [r6, #12]
   31e50:	ldr	r0, [r0, #2944]	; 0xb80
   31e54:	ldr	r0, [r0, #2952]	; 0xb88
   31e58:	sub	r0, r0, #2944	; 0xb80
   31e5c:	str	r0, [r2]
   31e60:	b	31e94 <flatcc_emitter@@Base+0x274>
   31e64:	add	r2, r0, #1472	; 0x5c0
   31e68:	mov	r1, #1472	; 0x5c0
   31e6c:	str	r0, [r6]
   31e70:	stmib	r6, {r0, r2}
   31e74:	str	r1, [r6, #12]
   31e78:	str	r2, [r6, #16]
   31e7c:	movw	r2, #64064	; 0xfa40
   31e80:	str	r1, [r6, #20]
   31e84:	str	r0, [r0, #2944]	; 0xb80
   31e88:	str	r0, [r0, #2948]	; 0xb84
   31e8c:	movt	r2, #65535	; 0xffff
   31e90:	str	r2, [r0, #2952]	; 0xb88
   31e94:	cmp	r8, r1
   31e98:	bls	31eac <flatcc_emitter@@Base+0x28c>
   31e9c:	cmp	r1, #0
   31ea0:	mov	r5, r1
   31ea4:	beq	31dd0 <flatcc_emitter@@Base+0x1b0>
   31ea8:	b	31eb0 <flatcc_emitter@@Base+0x290>
   31eac:	mov	r5, r8
   31eb0:	sub	r0, r1, r5
   31eb4:	sub	r7, r7, r5
   31eb8:	mov	r2, r5
   31ebc:	str	r0, [r6, #12]
   31ec0:	mov	r1, r7
   31ec4:	ldr	r0, [r6, #8]
   31ec8:	sub	r0, r0, r5
   31ecc:	str	r0, [r6, #8]
   31ed0:	bl	14e60 <memcpy@plt>
   31ed4:	subs	r8, r8, r5
   31ed8:	bne	31dc8 <flatcc_emitter@@Base+0x1a8>
   31edc:	ldr	r0, [sp]
   31ee0:	subs	r4, r4, #1
   31ee4:	bne	31da8 <flatcc_emitter@@Base+0x188>
   31ee8:	mov	r8, #0
   31eec:	b	31f48 <flatcc_emitter@@Base+0x328>
   31ef0:	ldr	r5, [r6, #16]
   31ef4:	add	r2, r5, r1
   31ef8:	str	r2, [r6, #16]
   31efc:	b	31f14 <flatcc_emitter@@Base+0x2f4>
   31f00:	mvn	r8, #0
   31f04:	b	31f48 <flatcc_emitter@@Base+0x328>
   31f08:	ldr	r2, [r6, #8]
   31f0c:	sub	r5, r2, r1
   31f10:	str	r5, [r6, #8]
   31f14:	sub	r0, r0, r1
   31f18:	mov	r8, #0
   31f1c:	cmp	r4, #0
   31f20:	str	r0, [r9]
   31f24:	beq	31f48 <flatcc_emitter@@Base+0x328>
   31f28:	ldm	r7, {r1, r2}
   31f2c:	mov	r0, r5
   31f30:	bl	14e60 <memcpy@plt>
   31f34:	ldr	r0, [r7, #4]
   31f38:	add	r7, r7, #8
   31f3c:	subs	r4, r4, #1
   31f40:	add	r5, r5, r0
   31f44:	bne	31f28 <flatcc_emitter@@Base+0x308>
   31f48:	mov	r0, r8
   31f4c:	sub	sp, fp, #28
   31f50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00031f54 <flatcc_emitter_copy_buffer@@Base>:
   31f54:	push	{r4, r5, r6, sl, fp, lr}
   31f58:	add	fp, sp, #16
   31f5c:	mov	r3, r2
   31f60:	ldr	r2, [r0, #24]
   31f64:	mov	r5, #0
   31f68:	cmp	r2, r3
   31f6c:	bhi	32008 <flatcc_emitter_copy_buffer@@Base+0xb4>
   31f70:	mov	r4, r0
   31f74:	ldr	r0, [r0]
   31f78:	cmp	r0, #0
   31f7c:	beq	32008 <flatcc_emitter_copy_buffer@@Base+0xb4>
   31f80:	mov	r6, r1
   31f84:	ldr	r1, [r4, #4]
   31f88:	cmp	r0, r1
   31f8c:	beq	31ff8 <flatcc_emitter_copy_buffer@@Base+0xa4>
   31f90:	ldr	r0, [r4, #12]
   31f94:	ldr	r1, [r4, #8]
   31f98:	rsb	r5, r0, #2944	; 0xb80
   31f9c:	mov	r0, r6
   31fa0:	mov	r2, r5
   31fa4:	bl	14e60 <memcpy@plt>
   31fa8:	ldm	r4, {r0, r1}
   31fac:	add	r5, r6, r5
   31fb0:	ldr	r6, [r0, #2944]	; 0xb80
   31fb4:	cmp	r6, r1
   31fb8:	beq	31fe0 <flatcc_emitter_copy_buffer@@Base+0x8c>
   31fbc:	mov	r0, r5
   31fc0:	mov	r1, r6
   31fc4:	mov	r2, #2944	; 0xb80
   31fc8:	bl	14e60 <memcpy@plt>
   31fcc:	ldr	r6, [r6, #2944]	; 0xb80
   31fd0:	ldr	r0, [r4, #4]
   31fd4:	add	r5, r5, #2944	; 0xb80
   31fd8:	cmp	r6, r0
   31fdc:	bne	31fbc <flatcc_emitter_copy_buffer@@Base+0x68>
   31fe0:	ldr	r0, [r4, #20]
   31fe4:	mov	r1, r6
   31fe8:	rsb	r2, r0, #2944	; 0xb80
   31fec:	mov	r0, r5
   31ff0:	bl	14e60 <memcpy@plt>
   31ff4:	b	32008 <flatcc_emitter_copy_buffer@@Base+0xb4>
   31ff8:	ldr	r1, [r4, #8]
   31ffc:	mov	r0, r6
   32000:	bl	14e60 <memcpy@plt>
   32004:	mov	r5, r6
   32008:	mov	r0, r5
   3200c:	pop	{r4, r5, r6, sl, fp, pc}

00032010 <flatcc_verify_error_string@@Base>:
   32010:	cmp	r0, #36	; 0x24
   32014:	movwhi	r0, #35066	; 0x88fa
   32018:	movthi	r0, #4
   3201c:	bxhi	lr
   32020:	movw	r1, #35088	; 0x8910
   32024:	movt	r1, #4
   32028:	ldr	r0, [r1, r0, lsl #2]
   3202c:	bx	lr

00032030 <flatcc_verify_field@@Base>:
   32030:	b	32034 <flatcc_verify_field@@Base+0x4>
   32034:	push	{r4, sl, fp, lr}
   32038:	add	fp, sp, #8
   3203c:	ldrh	r4, [r0, #22]
   32040:	mov	ip, #4
   32044:	mov	lr, #0
   32048:	add	r1, ip, r1, lsl #1
   3204c:	uxth	ip, r1
   32050:	cmp	ip, r4
   32054:	bcs	32080 <flatcc_verify_field@@Base+0x50>
   32058:	ldr	r4, [r0, #12]
   3205c:	uxtah	r1, r4, r1
   32060:	ldrh	ip, [r1]
   32064:	cmp	ip, #0
   32068:	beq	32080 <flatcc_verify_field@@Base+0x50>
   3206c:	add	r1, ip, r2
   32070:	ldrh	r2, [r0, #20]
   32074:	mov	lr, #13
   32078:	cmp	r1, r2
   3207c:	bls	32088 <flatcc_verify_field@@Base+0x58>
   32080:	mov	r0, lr
   32084:	pop	{r4, sl, fp, pc}
   32088:	ldr	r1, [r0]
   3208c:	ldr	r0, [r0, #16]
   32090:	add	r1, r1, ip
   32094:	add	r0, r1, r0
   32098:	sub	r1, r3, #1
   3209c:	ands	r0, r0, r1
   320a0:	movwne	r0, #12
   320a4:	pop	{r4, sl, fp, pc}

000320a8 <flatcc_verify_string_field@@Base>:
   320a8:	push	{r4, sl, fp, lr}
   320ac:	add	fp, sp, #8
   320b0:	sub	sp, sp, #8
   320b4:	add	r3, sp, #4
   320b8:	mov	r4, r0
   320bc:	bl	32130 <flatcc_verify_string_field@@Base+0x88>
   320c0:	cmp	r0, #0
   320c4:	bne	32128 <flatcc_verify_string_field@@Base+0x80>
   320c8:	ldr	r3, [sp, #4]
   320cc:	cmp	r3, #0
   320d0:	beq	32128 <flatcc_verify_string_field@@Base+0x80>
   320d4:	ldr	r1, [r4]
   320d8:	ldr	r0, [r1, r3]
   320dc:	add	r2, r0, r3
   320e0:	mov	r0, #17
   320e4:	tst	r2, #3
   320e8:	bne	32128 <flatcc_verify_string_field@@Base+0x80>
   320ec:	cmp	r2, r3
   320f0:	bls	32128 <flatcc_verify_string_field@@Base+0x80>
   320f4:	ldr	r4, [r4, #4]
   320f8:	add	r3, r2, #4
   320fc:	cmp	r4, r3
   32100:	ldrcs	r2, [r1, r2]
   32104:	subcs	ip, r4, r3
   32108:	movcs	r0, #8
   3210c:	addcs	r4, r2, #1
   32110:	cmpcs	ip, r4
   32114:	bcc	32128 <flatcc_verify_string_field@@Base+0x80>
   32118:	add	r0, r1, r3
   3211c:	ldrb	r0, [r0, r2]
   32120:	cmp	r0, #0
   32124:	movwne	r0, #7
   32128:	sub	sp, fp, #8
   3212c:	pop	{r4, sl, fp, pc}
   32130:	push	{fp, lr}
   32134:	mov	fp, sp
   32138:	mov	ip, r2
   3213c:	mov	r2, #4
   32140:	add	r1, r2, r1, lsl #1
   32144:	ldrh	r2, [r0, #22]
   32148:	uxth	lr, r1
   3214c:	cmp	lr, r2
   32150:	bcs	32198 <flatcc_verify_string_field@@Base+0xf0>
   32154:	ldr	r2, [r0, #12]
   32158:	uxtah	r1, r2, r1
   3215c:	ldrh	r1, [r1]
   32160:	cmp	r1, #0
   32164:	beq	32198 <flatcc_verify_string_field@@Base+0xf0>
   32168:	ldrh	lr, [r0, #20]
   3216c:	add	r2, r1, #4
   32170:	mov	ip, #13
   32174:	cmp	r2, lr
   32178:	bhi	321a8 <flatcc_verify_string_field@@Base+0x100>
   3217c:	ldr	r0, [r0, #16]
   32180:	mov	ip, #12
   32184:	add	r0, r0, r1
   32188:	tst	r0, #3
   3218c:	moveq	ip, #0
   32190:	streq	r0, [r3]
   32194:	b	321a8 <flatcc_verify_string_field@@Base+0x100>
   32198:	cmp	ip, #0
   3219c:	mov	r0, #0
   321a0:	str	r0, [r3]
   321a4:	movwne	ip, #4
   321a8:	mov	r0, ip
   321ac:	pop	{fp, pc}

000321b0 <flatcc_verify_vector_field@@Base>:
   321b0:	push	{r4, r5, r6, sl, fp, lr}
   321b4:	add	fp, sp, #16
   321b8:	sub	sp, sp, #8
   321bc:	mov	r6, r3
   321c0:	add	r3, sp, #4
   321c4:	mov	r5, r0
   321c8:	bl	32130 <flatcc_verify_string_field@@Base+0x88>
   321cc:	cmp	r0, #0
   321d0:	bne	32250 <flatcc_verify_vector_field@@Base+0xa0>
   321d4:	ldr	r4, [sp, #4]
   321d8:	cmp	r4, #0
   321dc:	beq	32250 <flatcc_verify_vector_field@@Base+0xa0>
   321e0:	ldr	r3, [r5]
   321e4:	ldr	r2, [fp, #8]
   321e8:	ldr	r0, [r3, r4]
   321ec:	cmp	r2, #4
   321f0:	movls	r2, #4
   321f4:	add	r1, r0, r4
   321f8:	mov	r0, #16
   321fc:	cmp	r1, r4
   32200:	bls	32250 <flatcc_verify_vector_field@@Base+0xa0>
   32204:	ldr	r5, [r5, #4]
   32208:	add	r4, r1, #4
   3220c:	cmp	r4, r5
   32210:	bhi	32250 <flatcc_verify_vector_field@@Base+0xa0>
   32214:	sub	r2, r2, #1
   32218:	orr	r2, r2, #3
   3221c:	tst	r4, r2
   32220:	bne	32250 <flatcc_verify_vector_field@@Base+0xa0>
   32224:	ldr	r4, [fp, #12]
   32228:	ldr	r2, [r3, r1]
   3222c:	mov	r0, #25
   32230:	cmp	r2, r4
   32234:	bhi	32250 <flatcc_verify_vector_field@@Base+0xa0>
   32238:	sub	r0, r5, #4
   3223c:	mul	r2, r2, r6
   32240:	sub	r1, r0, r1
   32244:	mov	r0, #0
   32248:	cmp	r1, r2
   3224c:	movwcc	r0, #26
   32250:	sub	sp, fp, #16
   32254:	pop	{r4, r5, r6, sl, fp, pc}

00032258 <flatcc_verify_string_vector_field@@Base>:
   32258:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   3225c:	add	fp, sp, #24
   32260:	sub	sp, sp, #8
   32264:	add	r3, sp, #4
   32268:	mov	r4, r0
   3226c:	bl	32130 <flatcc_verify_string_field@@Base+0x88>
   32270:	cmp	r0, #0
   32274:	bne	32398 <flatcc_verify_string_vector_field@@Base+0x140>
   32278:	ldr	r1, [sp, #4]
   3227c:	cmp	r1, #0
   32280:	beq	32398 <flatcc_verify_string_vector_field@@Base+0x140>
   32284:	ldr	r3, [r4]
   32288:	mov	r0, #16
   3228c:	ldr	r2, [r3, r1]
   32290:	add	r5, r2, r1
   32294:	cmp	r5, r1
   32298:	bls	32398 <flatcc_verify_string_vector_field@@Base+0x140>
   3229c:	ldr	lr, [r4, #4]
   322a0:	add	r7, r5, #4
   322a4:	cmp	r7, lr
   322a8:	bhi	32398 <flatcc_verify_string_vector_field@@Base+0x140>
   322ac:	ands	r7, r7, #3
   322b0:	bne	32398 <flatcc_verify_string_vector_field@@Base+0x140>
   322b4:	ldr	ip, [r3, r5]
   322b8:	mov	r0, #25
   322bc:	cmn	ip, #-1073741823	; 0xc0000001
   322c0:	bhi	32398 <flatcc_verify_string_vector_field@@Base+0x140>
   322c4:	sub	r0, lr, #4
   322c8:	sub	r4, r0, r5
   322cc:	mov	r0, #26
   322d0:	cmp	r4, ip, lsl #2
   322d4:	bcc	32398 <flatcc_verify_string_vector_field@@Base+0x140>
   322d8:	cmp	ip, #0
   322dc:	beq	32384 <flatcc_verify_string_vector_field@@Base+0x12c>
   322e0:	sub	r0, lr, #8
   322e4:	mov	r9, #0
   322e8:	sub	r0, r0, r2
   322ec:	sub	r8, r0, r1
   322f0:	add	r0, r3, r2
   322f4:	rsb	r3, r0, #0
   322f8:	sub	r0, r1, r3
   322fc:	add	r4, r1, r2
   32300:	ldr	r6, [r0, #4]
   32304:	mov	r0, #17
   32308:	add	r7, r4, r6
   3230c:	add	r5, r7, #4
   32310:	tst	r5, #3
   32314:	bne	32398 <flatcc_verify_string_vector_field@@Base+0x140>
   32318:	add	r4, r4, #4
   3231c:	cmp	r5, r4
   32320:	bls	32398 <flatcc_verify_string_vector_field@@Base+0x140>
   32324:	add	r4, r7, #8
   32328:	cmp	lr, r4
   3232c:	bcc	32398 <flatcc_verify_string_vector_field@@Base+0x140>
   32330:	add	r0, r1, r6
   32334:	sub	r4, r8, r6
   32338:	sub	r0, r0, r3
   3233c:	ldr	r0, [r0, #4]
   32340:	add	r5, r0, #1
   32344:	cmp	r4, r5
   32348:	bcc	3238c <flatcc_verify_string_vector_field@@Base+0x134>
   3234c:	add	r0, r6, r0
   32350:	add	r0, r1, r0
   32354:	sub	r0, r0, r3
   32358:	ldrb	r0, [r0, #8]
   3235c:	cmp	r0, #0
   32360:	bne	32394 <flatcc_verify_string_vector_field@@Base+0x13c>
   32364:	add	r9, r9, #1
   32368:	sub	r8, r8, #4
   3236c:	add	r2, r2, #4
   32370:	sub	r3, r3, #4
   32374:	mov	r0, #0
   32378:	cmp	r9, ip
   3237c:	bcc	322f8 <flatcc_verify_string_vector_field@@Base+0xa0>
   32380:	b	32398 <flatcc_verify_string_vector_field@@Base+0x140>
   32384:	mov	r0, #0
   32388:	b	32398 <flatcc_verify_string_vector_field@@Base+0x140>
   3238c:	mov	r0, #8
   32390:	b	32398 <flatcc_verify_string_vector_field@@Base+0x140>
   32394:	mov	r0, #7
   32398:	sub	sp, fp, #24
   3239c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000323a0 <flatcc_verify_table_field@@Base>:
   323a0:	push	{r4, r5, r6, sl, fp, lr}
   323a4:	add	fp, sp, #16
   323a8:	sub	sp, sp, #32
   323ac:	mov	r6, r3
   323b0:	add	r3, sp, #4
   323b4:	mov	r5, r0
   323b8:	bl	32130 <flatcc_verify_string_field@@Base+0x88>
   323bc:	cmp	r0, #0
   323c0:	bne	3249c <flatcc_verify_table_field@@Base+0xfc>
   323c4:	ldr	r4, [sp, #4]
   323c8:	cmp	r4, #0
   323cc:	beq	3249c <flatcc_verify_table_field@@Base+0xfc>
   323d0:	ldr	r2, [r5]
   323d4:	ldmib	r5, {r1, r3}
   323d8:	ldr	r0, [r2, r4]
   323dc:	subs	r3, r3, #1
   323e0:	str	r3, [sp, #16]
   323e4:	beq	32498 <flatcc_verify_table_field@@Base+0xf8>
   323e8:	add	r3, r0, r4
   323ec:	mov	r0, #15
   323f0:	tst	r3, #3
   323f4:	bne	3249c <flatcc_verify_table_field@@Base+0xfc>
   323f8:	cmp	r3, r4
   323fc:	bls	3249c <flatcc_verify_table_field@@Base+0xfc>
   32400:	add	r5, r3, #4
   32404:	cmp	r5, r1
   32408:	bhi	3249c <flatcc_verify_table_field@@Base+0xfc>
   3240c:	str	r3, [sp, #24]
   32410:	ldr	r0, [r2, r3]
   32414:	sub	r5, r3, r0
   32418:	mov	r0, #29
   3241c:	tst	r5, #-2147483647	; 0x80000001
   32420:	bne	3249c <flatcc_verify_table_field@@Base+0xfc>
   32424:	add	lr, r5, #2
   32428:	mov	r0, #27
   3242c:	cmp	lr, r1
   32430:	bhi	3249c <flatcc_verify_table_field@@Base+0xfc>
   32434:	mov	ip, r2
   32438:	mov	r0, #30
   3243c:	ldrh	r4, [ip, r5]!
   32440:	tst	r4, #1
   32444:	strh	r4, [sp, #30]
   32448:	bne	3249c <flatcc_verify_table_field@@Base+0xfc>
   3244c:	add	r5, r5, r4
   32450:	cmp	r5, r1
   32454:	bhi	3249c <flatcc_verify_table_field@@Base+0xfc>
   32458:	mov	r0, #28
   3245c:	cmp	r4, #4
   32460:	bcc	3249c <flatcc_verify_table_field@@Base+0xfc>
   32464:	add	r0, r2, lr
   32468:	sub	r3, r1, r3
   3246c:	ldrh	r5, [r0]
   32470:	mov	r0, #20
   32474:	cmp	r3, r5
   32478:	strh	r5, [sp, #28]
   3247c:	bcc	3249c <flatcc_verify_table_field@@Base+0xfc>
   32480:	add	r0, sp, #8
   32484:	str	r2, [sp, #8]
   32488:	str	ip, [sp, #20]
   3248c:	str	r1, [sp, #12]
   32490:	blx	r6
   32494:	b	3249c <flatcc_verify_table_field@@Base+0xfc>
   32498:	mov	r0, #3
   3249c:	sub	sp, fp, #16
   324a0:	pop	{r4, r5, r6, sl, fp, pc}

000324a4 <flatcc_verify_table_vector_field@@Base>:
   324a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   324a8:	add	fp, sp, #28
   324ac:	sub	sp, sp, #36	; 0x24
   324b0:	mov	r9, r3
   324b4:	add	r3, sp, #8
   324b8:	mov	r5, r0
   324bc:	bl	32130 <flatcc_verify_string_field@@Base+0x88>
   324c0:	cmp	r0, #0
   324c4:	bne	32704 <flatcc_verify_table_vector_field@@Base+0x260>
   324c8:	ldr	r1, [sp, #8]
   324cc:	cmp	r1, #0
   324d0:	beq	32704 <flatcc_verify_table_vector_field@@Base+0x260>
   324d4:	ldr	r2, [r5, #8]
   324d8:	cmp	r2, #1
   324dc:	blt	32700 <flatcc_verify_table_vector_field@@Base+0x25c>
   324e0:	ldr	r6, [r5]
   324e4:	mov	r0, #16
   324e8:	ldr	r3, [r6, r1]
   324ec:	add	r7, r3, r1
   324f0:	cmp	r7, r1
   324f4:	bls	32704 <flatcc_verify_table_vector_field@@Base+0x260>
   324f8:	ldr	lr, [r5, #4]
   324fc:	add	r5, r7, #4
   32500:	cmp	r5, lr
   32504:	bhi	32704 <flatcc_verify_table_vector_field@@Base+0x260>
   32508:	ands	r4, r5, #3
   3250c:	bne	32704 <flatcc_verify_table_vector_field@@Base+0x260>
   32510:	ldr	r4, [r6, r7]
   32514:	mov	r0, #25
   32518:	cmn	r4, #-1073741823	; 0xc0000001
   3251c:	bhi	32704 <flatcc_verify_table_vector_field@@Base+0x260>
   32520:	sub	ip, lr, #4
   32524:	mov	r0, #26
   32528:	sub	r7, ip, r7
   3252c:	cmp	r7, r4, lsl #2
   32530:	bcc	32704 <flatcc_verify_table_vector_field@@Base+0x260>
   32534:	cmp	r4, #0
   32538:	beq	326f0 <flatcc_verify_table_vector_field@@Base+0x24c>
   3253c:	sub	r0, ip, r3
   32540:	mov	sl, #0
   32544:	str	r4, [sp]
   32548:	sub	r8, r0, r1
   3254c:	sub	r0, r2, #2
   32550:	str	r0, [sp, #4]
   32554:	ldr	r1, [sp, #4]
   32558:	ldr	r0, [r6, r5]
   3255c:	cmp	r1, #0
   32560:	str	r1, [sp, #20]
   32564:	beq	326f8 <flatcc_verify_table_vector_field@@Base+0x254>
   32568:	add	r1, r5, r0
   3256c:	add	ip, r1, #4
   32570:	tst	r1, #3
   32574:	bne	32640 <flatcc_verify_table_vector_field@@Base+0x19c>
   32578:	cmp	r1, r5
   3257c:	bls	32640 <flatcc_verify_table_vector_field@@Base+0x19c>
   32580:	cmp	ip, lr
   32584:	bhi	32640 <flatcc_verify_table_vector_field@@Base+0x19c>
   32588:	str	r1, [sp, #28]
   3258c:	add	r2, r6, r0
   32590:	ldr	r2, [r2, r5]
   32594:	sub	r7, r0, r2
   32598:	add	r3, r5, r7
   3259c:	tst	r3, #-2147483647	; 0x80000001
   325a0:	bne	32640 <flatcc_verify_table_vector_field@@Base+0x19c>
   325a4:	add	r4, r3, #2
   325a8:	cmp	r4, lr
   325ac:	bhi	32640 <flatcc_verify_table_vector_field@@Base+0x19c>
   325b0:	add	r7, r6, r7
   325b4:	add	r7, r7, r5
   325b8:	ldrh	r7, [r7]
   325bc:	cmp	r7, #4
   325c0:	strh	r7, [sp, #34]	; 0x22
   325c4:	bcc	32640 <flatcc_verify_table_vector_field@@Base+0x19c>
   325c8:	ands	r4, r7, #1
   325cc:	bne	32640 <flatcc_verify_table_vector_field@@Base+0x19c>
   325d0:	add	r7, r0, r7
   325d4:	sub	r2, r7, r2
   325d8:	add	r2, r5, r2
   325dc:	cmp	r2, lr
   325e0:	bhi	32640 <flatcc_verify_table_vector_field@@Base+0x19c>
   325e4:	add	r2, r6, r3
   325e8:	sub	r0, r8, r0
   325ec:	ldrh	r3, [r2, #2]
   325f0:	cmp	r0, r3
   325f4:	strh	r3, [sp, #32]
   325f8:	bcc	32640 <flatcc_verify_table_vector_field@@Base+0x19c>
   325fc:	add	r0, sp, #12
   32600:	str	r6, [sp, #12]
   32604:	str	r2, [sp, #24]
   32608:	mov	r4, lr
   3260c:	str	lr, [sp, #16]
   32610:	blx	r9
   32614:	cmp	r0, #0
   32618:	bne	3270c <flatcc_verify_table_vector_field@@Base+0x268>
   3261c:	ldr	r1, [sp]
   32620:	add	sl, sl, #1
   32624:	sub	r8, r8, #4
   32628:	add	r5, r5, #4
   3262c:	mov	r0, #0
   32630:	mov	lr, r4
   32634:	cmp	sl, r1
   32638:	bcc	32554 <flatcc_verify_table_vector_field@@Base+0xb0>
   3263c:	b	32704 <flatcc_verify_table_vector_field@@Base+0x260>
   32640:	ldr	r0, [sp, #4]
   32644:	str	r0, [sp, #20]
   32648:	mov	r0, #15
   3264c:	tst	r1, #3
   32650:	bne	32704 <flatcc_verify_table_vector_field@@Base+0x260>
   32654:	cmp	r1, r5
   32658:	bls	32704 <flatcc_verify_table_vector_field@@Base+0x260>
   3265c:	cmp	ip, lr
   32660:	bhi	32704 <flatcc_verify_table_vector_field@@Base+0x260>
   32664:	str	r1, [sp, #28]
   32668:	ldr	r0, [r6, r1]
   3266c:	sub	r7, r1, r0
   32670:	mov	r0, #29
   32674:	tst	r7, #-2147483647	; 0x80000001
   32678:	bne	32704 <flatcc_verify_table_vector_field@@Base+0x260>
   3267c:	add	r3, r7, #2
   32680:	mov	r0, #27
   32684:	cmp	r3, lr
   32688:	bhi	32704 <flatcc_verify_table_vector_field@@Base+0x260>
   3268c:	mov	r2, r6
   32690:	mov	r0, #30
   32694:	ldrh	r5, [r2, r7]!
   32698:	tst	r5, #1
   3269c:	strh	r5, [sp, #34]	; 0x22
   326a0:	bne	32704 <flatcc_verify_table_vector_field@@Base+0x260>
   326a4:	add	r7, r7, r5
   326a8:	cmp	r7, lr
   326ac:	bhi	32704 <flatcc_verify_table_vector_field@@Base+0x260>
   326b0:	mov	r0, #28
   326b4:	cmp	r5, #4
   326b8:	bcc	32704 <flatcc_verify_table_vector_field@@Base+0x260>
   326bc:	add	r0, r6, r3
   326c0:	sub	r1, lr, r1
   326c4:	ldrh	r3, [r0]
   326c8:	mov	r0, #20
   326cc:	cmp	r1, r3
   326d0:	strh	r3, [sp, #32]
   326d4:	bcc	32704 <flatcc_verify_table_vector_field@@Base+0x260>
   326d8:	add	r0, sp, #12
   326dc:	str	r6, [sp, #12]
   326e0:	str	r2, [sp, #24]
   326e4:	str	lr, [sp, #16]
   326e8:	blx	r9
   326ec:	b	32704 <flatcc_verify_table_vector_field@@Base+0x260>
   326f0:	mov	r0, #0
   326f4:	b	32704 <flatcc_verify_table_vector_field@@Base+0x260>
   326f8:	mov	r0, #0
   326fc:	str	r0, [sp, #20]
   32700:	mov	r0, #3
   32704:	sub	sp, fp, #28
   32708:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3270c:	ldr	r0, [r6, r5]
   32710:	ldr	r1, [sp, #4]
   32714:	mov	lr, r4
   32718:	str	r1, [sp, #20]
   3271c:	add	r1, r0, r5
   32720:	add	ip, r1, #4
   32724:	b	32648 <flatcc_verify_table_vector_field@@Base+0x1a4>

00032728 <flatcc_verify_union_table@@Base>:
   32728:	push	{r4, r5, r6, sl, fp, lr}
   3272c:	add	fp, sp, #16
   32730:	sub	sp, sp, #24
   32734:	ldr	r5, [r0, #16]
   32738:	ldr	r3, [r0, #20]
   3273c:	ldr	ip, [r0]
   32740:	ldr	r2, [r0, #4]
   32744:	ldr	r0, [r0, #8]
   32748:	subs	r0, r0, #1
   3274c:	str	r0, [sp, #8]
   32750:	beq	32804 <flatcc_verify_union_table@@Base+0xdc>
   32754:	add	r3, r3, r5
   32758:	mov	r0, #15
   3275c:	tst	r3, #3
   32760:	bne	32808 <flatcc_verify_union_table@@Base+0xe0>
   32764:	cmp	r3, r5
   32768:	bls	32808 <flatcc_verify_union_table@@Base+0xe0>
   3276c:	add	r6, r3, #4
   32770:	cmp	r6, r2
   32774:	bhi	32808 <flatcc_verify_union_table@@Base+0xe0>
   32778:	str	r3, [sp, #16]
   3277c:	ldr	r0, [ip, r3]
   32780:	sub	r5, r3, r0
   32784:	mov	r0, #29
   32788:	tst	r5, #-2147483647	; 0x80000001
   3278c:	bne	32808 <flatcc_verify_union_table@@Base+0xe0>
   32790:	add	r4, r5, #2
   32794:	mov	r0, #27
   32798:	cmp	r4, r2
   3279c:	bhi	32808 <flatcc_verify_union_table@@Base+0xe0>
   327a0:	mov	lr, ip
   327a4:	mov	r0, #30
   327a8:	ldrh	r6, [lr, r5]!
   327ac:	tst	r6, #1
   327b0:	strh	r6, [sp, #22]
   327b4:	bne	32808 <flatcc_verify_union_table@@Base+0xe0>
   327b8:	add	r5, r5, r6
   327bc:	cmp	r5, r2
   327c0:	bhi	32808 <flatcc_verify_union_table@@Base+0xe0>
   327c4:	mov	r0, #28
   327c8:	cmp	r6, #4
   327cc:	bcc	32808 <flatcc_verify_union_table@@Base+0xe0>
   327d0:	add	r0, ip, r4
   327d4:	sub	r3, r2, r3
   327d8:	ldrh	r4, [r0]
   327dc:	mov	r0, #20
   327e0:	cmp	r3, r4
   327e4:	strh	r4, [sp, #20]
   327e8:	bcc	32808 <flatcc_verify_union_table@@Base+0xe0>
   327ec:	mov	r0, sp
   327f0:	str	ip, [sp]
   327f4:	str	lr, [sp, #12]
   327f8:	str	r2, [sp, #4]
   327fc:	blx	r1
   32800:	b	32808 <flatcc_verify_union_table@@Base+0xe0>
   32804:	mov	r0, #3
   32808:	sub	sp, fp, #16
   3280c:	pop	{r4, r5, r6, sl, fp, pc}

00032810 <flatcc_verify_union_struct@@Base>:
   32810:	push	{fp, lr}
   32814:	mov	fp, sp
   32818:	ldr	lr, [r0, #20]
   3281c:	mov	r3, r0
   32820:	mov	r0, #18
   32824:	cmp	lr, #0
   32828:	beq	32864 <flatcc_verify_union_struct@@Base+0x54>
   3282c:	ldr	ip, [r3, #4]
   32830:	ldr	r3, [r3, #16]
   32834:	add	r3, r3, lr
   32838:	cmp	r3, ip
   3283c:	bhi	32864 <flatcc_verify_union_struct@@Base+0x54>
   32840:	adds	r1, r3, r1
   32844:	mov	r0, #10
   32848:	bcs	32864 <flatcc_verify_union_struct@@Base+0x54>
   3284c:	mov	r0, #9
   32850:	cmp	r1, ip
   32854:	pophi	{fp, pc}
   32858:	sub	r0, r2, #1
   3285c:	ands	r0, r3, r0
   32860:	movwne	r0, #11
   32864:	pop	{fp, pc}

00032868 <flatcc_verify_union_string@@Base>:
   32868:	mov	r1, r0
   3286c:	ldr	r3, [r0, #16]
   32870:	ldr	r0, [r0, #20]
   32874:	add	r2, r0, r3
   32878:	mov	r0, #17
   3287c:	tst	r2, #3
   32880:	bne	328d4 <flatcc_verify_union_string@@Base+0x6c>
   32884:	cmp	r2, r3
   32888:	bls	328d4 <flatcc_verify_union_string@@Base+0x6c>
   3288c:	ldr	r3, [r1, #4]
   32890:	add	ip, r2, #4
   32894:	cmp	r3, ip
   32898:	bcc	328d4 <flatcc_verify_union_string@@Base+0x6c>
   3289c:	push	{fp, lr}
   328a0:	mov	fp, sp
   328a4:	ldr	r1, [r1]
   328a8:	sub	lr, r3, ip
   328ac:	mov	r0, #8
   328b0:	ldr	r2, [r1, r2]
   328b4:	add	r3, r2, #1
   328b8:	cmp	lr, r3
   328bc:	pop	{fp, lr}
   328c0:	bxcc	lr
   328c4:	add	r0, r1, ip
   328c8:	ldrb	r0, [r0, r2]
   328cc:	cmp	r0, #0
   328d0:	movwne	r0, #7
   328d4:	bx	lr

000328d8 <flatcc_verify_buffer_header@@Base>:
   328d8:	push	{r4, sl, fp, lr}
   328dc:	add	fp, sp, #8
   328e0:	sub	sp, sp, #8
   328e4:	mov	r4, r0
   328e8:	mov	r0, #5
   328ec:	tst	r4, #3
   328f0:	bne	3294c <flatcc_verify_buffer_header@@Base+0x74>
   328f4:	mov	r0, #6
   328f8:	cmn	r1, #9
   328fc:	bhi	3294c <flatcc_verify_buffer_header@@Base+0x74>
   32900:	mov	r0, #1
   32904:	cmp	r1, #8
   32908:	bcc	3294c <flatcc_verify_buffer_header@@Base+0x74>
   3290c:	cmp	r2, #0
   32910:	beq	32948 <flatcc_verify_buffer_header@@Base+0x70>
   32914:	mov	r0, #0
   32918:	mov	r1, r2
   3291c:	mov	r2, #4
   32920:	str	r0, [sp, #4]
   32924:	add	r0, sp, #4
   32928:	bl	14efc <strncpy@plt>
   3292c:	ldr	r1, [sp, #4]
   32930:	cmp	r1, #0
   32934:	ldrne	r2, [r4, #4]
   32938:	movne	r0, #2
   3293c:	cmpne	r2, r1
   32940:	moveq	r0, #0
   32944:	b	3294c <flatcc_verify_buffer_header@@Base+0x74>
   32948:	mov	r0, #0
   3294c:	sub	sp, fp, #8
   32950:	pop	{r4, sl, fp, pc}

00032954 <flatcc_verify_typed_buffer_header@@Base>:
   32954:	mov	r3, r0
   32958:	mov	r0, #5
   3295c:	tst	r3, #3
   32960:	bne	32994 <flatcc_verify_typed_buffer_header@@Base+0x40>
   32964:	mov	r0, #6
   32968:	cmn	r1, #9
   3296c:	bhi	32994 <flatcc_verify_typed_buffer_header@@Base+0x40>
   32970:	mov	r0, #1
   32974:	cmp	r1, #8
   32978:	bxcc	lr
   3297c:	cmp	r2, #0
   32980:	beq	32998 <flatcc_verify_typed_buffer_header@@Base+0x44>
   32984:	ldr	r1, [r3, #4]
   32988:	mov	r0, #2
   3298c:	cmp	r1, r2
   32990:	moveq	r0, #0
   32994:	bx	lr
   32998:	mov	r0, #0
   3299c:	bx	lr

000329a0 <flatcc_verify_struct_as_root@@Base>:
   329a0:	push	{r4, r5, r6, r7, fp, lr}
   329a4:	add	fp, sp, #16
   329a8:	mov	r5, r3
   329ac:	mov	r6, r2
   329b0:	mov	r4, r1
   329b4:	mov	r7, r0
   329b8:	bl	328d8 <flatcc_verify_buffer_header@@Base>
   329bc:	cmp	r0, #0
   329c0:	beq	329d8 <flatcc_verify_struct_as_root@@Base+0x38>
   329c4:	mov	r0, r7
   329c8:	mov	r1, r4
   329cc:	mov	r2, r6
   329d0:	pop	{r4, r5, r6, r7, fp, lr}
   329d4:	b	328d8 <flatcc_verify_buffer_header@@Base>
   329d8:	ldr	r1, [r7]
   329dc:	mov	r0, #18
   329e0:	sub	r2, r1, #1
   329e4:	cmp	r2, r4
   329e8:	bcs	32a14 <flatcc_verify_struct_as_root@@Base+0x74>
   329ec:	adds	r2, r1, r5
   329f0:	mov	r0, #10
   329f4:	bcs	32a14 <flatcc_verify_struct_as_root@@Base+0x74>
   329f8:	mov	r0, #9
   329fc:	cmp	r2, r4
   32a00:	pophi	{r4, r5, r6, r7, fp, pc}
   32a04:	ldr	r0, [fp, #8]
   32a08:	sub	r0, r0, #1
   32a0c:	ands	r0, r1, r0
   32a10:	movwne	r0, #11
   32a14:	pop	{r4, r5, r6, r7, fp, pc}

00032a18 <flatcc_verify_struct_as_typed_root@@Base>:
   32a18:	push	{fp, lr}
   32a1c:	mov	fp, sp
   32a20:	mov	ip, r0
   32a24:	mov	r0, #5
   32a28:	tst	ip, #3
   32a2c:	bne	32a9c <flatcc_verify_struct_as_typed_root@@Base+0x84>
   32a30:	mov	r0, #6
   32a34:	cmn	r1, #9
   32a38:	bhi	32a9c <flatcc_verify_struct_as_typed_root@@Base+0x84>
   32a3c:	mov	r0, #1
   32a40:	cmp	r1, #8
   32a44:	bcc	32a9c <flatcc_verify_struct_as_typed_root@@Base+0x84>
   32a48:	cmp	r2, #0
   32a4c:	beq	32a60 <flatcc_verify_struct_as_typed_root@@Base+0x48>
   32a50:	ldr	lr, [ip, #4]
   32a54:	mov	r0, #2
   32a58:	cmp	lr, r2
   32a5c:	bne	32a9c <flatcc_verify_struct_as_typed_root@@Base+0x84>
   32a60:	ldr	ip, [ip]
   32a64:	mov	r0, #18
   32a68:	sub	r2, ip, #1
   32a6c:	cmp	r2, r1
   32a70:	bcs	32a9c <flatcc_verify_struct_as_typed_root@@Base+0x84>
   32a74:	adds	r3, ip, r3
   32a78:	mov	r0, #10
   32a7c:	bcs	32a9c <flatcc_verify_struct_as_typed_root@@Base+0x84>
   32a80:	mov	r0, #9
   32a84:	cmp	r3, r1
   32a88:	pophi	{fp, pc}
   32a8c:	ldr	r0, [fp, #8]
   32a90:	sub	r0, r0, #1
   32a94:	ands	r0, ip, r0
   32a98:	movwne	r0, #11
   32a9c:	pop	{fp, pc}

00032aa0 <flatcc_verify_table_as_root@@Base>:
   32aa0:	push	{r4, r5, r6, r7, fp, lr}
   32aa4:	add	fp, sp, #16
   32aa8:	sub	sp, sp, #24
   32aac:	mov	r4, r3
   32ab0:	mov	r7, r2
   32ab4:	mov	r5, r1
   32ab8:	mov	r6, r0
   32abc:	bl	328d8 <flatcc_verify_buffer_header@@Base>
   32ac0:	cmp	r0, #0
   32ac4:	beq	32ae0 <flatcc_verify_table_as_root@@Base+0x40>
   32ac8:	mov	r0, r6
   32acc:	mov	r1, r5
   32ad0:	mov	r2, r7
   32ad4:	sub	sp, fp, #16
   32ad8:	pop	{r4, r5, r6, r7, fp, lr}
   32adc:	b	328d8 <flatcc_verify_buffer_header@@Base>
   32ae0:	ldr	r1, [r6]
   32ae4:	mov	r0, #99	; 0x63
   32ae8:	str	r0, [sp, #8]
   32aec:	mov	r0, #15
   32af0:	tst	r1, #3
   32af4:	bne	32b94 <flatcc_verify_table_as_root@@Base+0xf4>
   32af8:	cmp	r1, #0
   32afc:	beq	32b94 <flatcc_verify_table_as_root@@Base+0xf4>
   32b00:	add	r2, r1, #4
   32b04:	cmp	r2, r5
   32b08:	bhi	32b94 <flatcc_verify_table_as_root@@Base+0xf4>
   32b0c:	str	r1, [sp, #16]
   32b10:	ldr	r0, [r6, r1]
   32b14:	sub	r7, r1, r0
   32b18:	mov	r0, #29
   32b1c:	tst	r7, #-2147483647	; 0x80000001
   32b20:	bne	32b94 <flatcc_verify_table_as_root@@Base+0xf4>
   32b24:	add	r3, r7, #2
   32b28:	mov	r0, #27
   32b2c:	cmp	r3, r5
   32b30:	bhi	32b94 <flatcc_verify_table_as_root@@Base+0xf4>
   32b34:	mov	ip, r6
   32b38:	mov	r0, #30
   32b3c:	ldrh	r2, [ip, r7]!
   32b40:	tst	r2, #1
   32b44:	strh	r2, [sp, #22]
   32b48:	bne	32b94 <flatcc_verify_table_as_root@@Base+0xf4>
   32b4c:	add	r7, r7, r2
   32b50:	cmp	r7, r5
   32b54:	bhi	32b94 <flatcc_verify_table_as_root@@Base+0xf4>
   32b58:	mov	r0, #28
   32b5c:	cmp	r2, #4
   32b60:	bcc	32b94 <flatcc_verify_table_as_root@@Base+0xf4>
   32b64:	add	r0, r6, r3
   32b68:	sub	r1, r5, r1
   32b6c:	ldrh	r2, [r0]
   32b70:	mov	r0, #20
   32b74:	cmp	r1, r2
   32b78:	strh	r2, [sp, #20]
   32b7c:	bcc	32b94 <flatcc_verify_table_as_root@@Base+0xf4>
   32b80:	mov	r0, sp
   32b84:	str	r6, [sp]
   32b88:	str	ip, [sp, #12]
   32b8c:	str	r5, [sp, #4]
   32b90:	blx	r4
   32b94:	sub	sp, fp, #16
   32b98:	pop	{r4, r5, r6, r7, fp, pc}

00032b9c <flatcc_verify_table_as_typed_root@@Base>:
   32b9c:	push	{r4, r5, r6, sl, fp, lr}
   32ba0:	add	fp, sp, #16
   32ba4:	sub	sp, sp, #24
   32ba8:	mov	ip, #5
   32bac:	tst	r0, #3
   32bb0:	bne	32c98 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   32bb4:	mov	ip, #6
   32bb8:	cmn	r1, #9
   32bbc:	bhi	32c98 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   32bc0:	mov	ip, #1
   32bc4:	cmp	r1, #8
   32bc8:	bcc	32c98 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   32bcc:	cmp	r2, #0
   32bd0:	beq	32be4 <flatcc_verify_table_as_typed_root@@Base+0x48>
   32bd4:	ldr	r6, [r0, #4]
   32bd8:	mov	ip, #2
   32bdc:	cmp	r6, r2
   32be0:	bne	32c98 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   32be4:	ldr	r2, [r0]
   32be8:	mov	r6, #99	; 0x63
   32bec:	mov	ip, #15
   32bf0:	str	r6, [sp, #8]
   32bf4:	tst	r2, #3
   32bf8:	bne	32c98 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   32bfc:	cmp	r2, #0
   32c00:	beq	32c98 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   32c04:	add	r6, r2, #4
   32c08:	cmp	r6, r1
   32c0c:	bhi	32c98 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   32c10:	str	r2, [sp, #16]
   32c14:	mov	ip, #29
   32c18:	ldr	r6, [r0, r2]
   32c1c:	sub	r5, r2, r6
   32c20:	tst	r5, #-2147483647	; 0x80000001
   32c24:	bne	32c98 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   32c28:	add	r4, r5, #2
   32c2c:	mov	ip, #27
   32c30:	cmp	r4, r1
   32c34:	bhi	32c98 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   32c38:	mov	lr, r0
   32c3c:	mov	ip, #30
   32c40:	ldrh	r6, [lr, r5]!
   32c44:	tst	r6, #1
   32c48:	strh	r6, [sp, #22]
   32c4c:	bne	32c98 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   32c50:	add	r5, r5, r6
   32c54:	cmp	r5, r1
   32c58:	bhi	32c98 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   32c5c:	mov	ip, #28
   32c60:	cmp	r6, #4
   32c64:	bcc	32c98 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   32c68:	add	r6, r0, r4
   32c6c:	sub	r2, r1, r2
   32c70:	mov	ip, #20
   32c74:	ldrh	r4, [r6]
   32c78:	cmp	r2, r4
   32c7c:	strh	r4, [sp, #20]
   32c80:	bcc	32c98 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   32c84:	str	lr, [sp, #12]
   32c88:	stm	sp, {r0, r1}
   32c8c:	mov	r0, sp
   32c90:	blx	r3
   32c94:	mov	ip, r0
   32c98:	mov	r0, ip
   32c9c:	sub	sp, fp, #16
   32ca0:	pop	{r4, r5, r6, sl, fp, pc}

00032ca4 <flatcc_verify_struct_as_nested_root@@Base>:
   32ca4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32ca8:	add	fp, sp, #28
   32cac:	sub	sp, sp, #12
   32cb0:	ldr	r9, [fp, #12]
   32cb4:	mov	r8, r3
   32cb8:	mvn	sl, #0
   32cbc:	mov	r5, #1
   32cc0:	mov	r4, r2
   32cc4:	mov	r7, r1
   32cc8:	mov	r6, r0
   32ccc:	stm	sp, {r5, sl}
   32cd0:	mov	r3, r9
   32cd4:	bl	321b0 <flatcc_verify_vector_field@@Base>
   32cd8:	cmp	r0, #0
   32cdc:	beq	32d00 <flatcc_verify_struct_as_nested_root@@Base+0x5c>
   32ce0:	mov	r0, r6
   32ce4:	mov	r1, r7
   32ce8:	mov	r2, r4
   32cec:	mov	r3, r9
   32cf0:	stm	sp, {r5, sl}
   32cf4:	bl	321b0 <flatcc_verify_vector_field@@Base>
   32cf8:	sub	sp, fp, #28
   32cfc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32d00:	ldrh	r2, [r6, #22]
   32d04:	mov	r0, #4
   32d08:	add	r0, r0, r7, lsl #1
   32d0c:	uxth	r1, r0
   32d10:	cmp	r1, r2
   32d14:	bcs	32d3c <flatcc_verify_struct_as_nested_root@@Base+0x98>
   32d18:	ldr	r1, [r6, #12]
   32d1c:	uxtah	r0, r1, r0
   32d20:	ldrh	r0, [r0]
   32d24:	cmp	r0, #0
   32d28:	ldrne	r1, [r6]
   32d2c:	ldrne	r2, [r6, #16]
   32d30:	addne	r1, r1, r2
   32d34:	addsne	r0, r1, r0
   32d38:	bne	32d48 <flatcc_verify_struct_as_nested_root@@Base+0xa4>
   32d3c:	mov	r0, #0
   32d40:	sub	sp, fp, #28
   32d44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32d48:	ldr	r2, [r0]
   32d4c:	ldr	r3, [fp, #8]
   32d50:	ldr	r1, [r2, r0]!
   32d54:	str	r9, [sp]
   32d58:	add	r0, r2, #4
   32d5c:	mov	r2, r8
   32d60:	bl	329a0 <flatcc_verify_struct_as_root@@Base>
   32d64:	sub	sp, fp, #28
   32d68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00032d6c <flatcc_verify_table_as_nested_root@@Base>:
   32d6c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32d70:	add	fp, sp, #28
   32d74:	sub	sp, sp, #36	; 0x24
   32d78:	mvn	r9, #0
   32d7c:	mov	sl, #1
   32d80:	mov	r8, r3
   32d84:	mov	r5, r2
   32d88:	mov	r4, r1
   32d8c:	mov	r6, r0
   32d90:	str	sl, [sp]
   32d94:	str	r9, [sp, #4]
   32d98:	ldr	r7, [fp, #8]
   32d9c:	mov	r3, r7
   32da0:	bl	321b0 <flatcc_verify_vector_field@@Base>
   32da4:	cmp	r0, #0
   32da8:	beq	32dcc <flatcc_verify_table_as_nested_root@@Base+0x60>
   32dac:	mov	r0, r6
   32db0:	mov	r1, r4
   32db4:	mov	r2, r5
   32db8:	mov	r3, r7
   32dbc:	str	sl, [sp]
   32dc0:	str	r9, [sp, #4]
   32dc4:	bl	321b0 <flatcc_verify_vector_field@@Base>
   32dc8:	b	32e0c <flatcc_verify_table_as_nested_root@@Base+0xa0>
   32dcc:	ldrh	r3, [r6, #22]
   32dd0:	mov	r0, #4
   32dd4:	add	r1, r0, r4, lsl #1
   32dd8:	mov	r0, #0
   32ddc:	uxth	r2, r1
   32de0:	cmp	r2, r3
   32de4:	bcs	32e0c <flatcc_verify_table_as_nested_root@@Base+0xa0>
   32de8:	ldr	r2, [r6, #12]
   32dec:	uxtah	r1, r2, r1
   32df0:	ldrh	r1, [r1]
   32df4:	cmp	r1, #0
   32df8:	ldrne	r2, [r6]
   32dfc:	ldrne	r3, [r6, #16]
   32e00:	addne	r2, r2, r3
   32e04:	addsne	r1, r2, r1
   32e08:	bne	32e14 <flatcc_verify_table_as_nested_root@@Base+0xa8>
   32e0c:	sub	sp, fp, #28
   32e10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32e14:	ldr	r0, [r1]
   32e18:	ldr	r7, [fp, #12]
   32e1c:	mov	r2, r8
   32e20:	ldr	r4, [r0, r1]!
   32e24:	add	r5, r0, #4
   32e28:	mov	r1, r4
   32e2c:	mov	r0, r5
   32e30:	bl	328d8 <flatcc_verify_buffer_header@@Base>
   32e34:	cmp	r0, #0
   32e38:	beq	32e54 <flatcc_verify_table_as_nested_root@@Base+0xe8>
   32e3c:	mov	r0, r5
   32e40:	mov	r1, r4
   32e44:	mov	r2, r8
   32e48:	sub	sp, fp, #28
   32e4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32e50:	b	328d8 <flatcc_verify_buffer_header@@Base>
   32e54:	ldr	r0, [r6, #8]
   32e58:	ldr	r1, [r5]
   32e5c:	subs	r0, r0, #1
   32e60:	str	r0, [sp, #20]
   32e64:	beq	32f14 <flatcc_verify_table_as_nested_root@@Base+0x1a8>
   32e68:	mov	r0, #15
   32e6c:	tst	r1, #3
   32e70:	bne	32e0c <flatcc_verify_table_as_nested_root@@Base+0xa0>
   32e74:	cmp	r1, #0
   32e78:	beq	32e0c <flatcc_verify_table_as_nested_root@@Base+0xa0>
   32e7c:	add	r2, r1, #4
   32e80:	cmp	r2, r4
   32e84:	bhi	32e0c <flatcc_verify_table_as_nested_root@@Base+0xa0>
   32e88:	str	r1, [sp, #28]
   32e8c:	ldr	r0, [r5, r1]
   32e90:	sub	r6, r1, r0
   32e94:	mov	r0, #29
   32e98:	tst	r6, #-2147483647	; 0x80000001
   32e9c:	bne	32e0c <flatcc_verify_table_as_nested_root@@Base+0xa0>
   32ea0:	add	r3, r6, #2
   32ea4:	mov	r0, #27
   32ea8:	cmp	r3, r4
   32eac:	bhi	32e0c <flatcc_verify_table_as_nested_root@@Base+0xa0>
   32eb0:	mov	ip, r5
   32eb4:	mov	r0, #30
   32eb8:	ldrh	r2, [ip, r6]!
   32ebc:	tst	r2, #1
   32ec0:	strh	r2, [sp, #34]	; 0x22
   32ec4:	bne	32e0c <flatcc_verify_table_as_nested_root@@Base+0xa0>
   32ec8:	add	r6, r6, r2
   32ecc:	cmp	r6, r4
   32ed0:	bhi	32e0c <flatcc_verify_table_as_nested_root@@Base+0xa0>
   32ed4:	mov	r0, #28
   32ed8:	cmp	r2, #4
   32edc:	bcc	32e0c <flatcc_verify_table_as_nested_root@@Base+0xa0>
   32ee0:	add	r0, r5, r3
   32ee4:	sub	r1, r4, r1
   32ee8:	ldrh	r2, [r0]
   32eec:	mov	r0, #20
   32ef0:	cmp	r1, r2
   32ef4:	strh	r2, [sp, #32]
   32ef8:	bcc	32e0c <flatcc_verify_table_as_nested_root@@Base+0xa0>
   32efc:	add	r0, sp, #12
   32f00:	str	r5, [sp, #12]
   32f04:	str	ip, [sp, #24]
   32f08:	str	r4, [sp, #16]
   32f0c:	blx	r7
   32f10:	b	32e0c <flatcc_verify_table_as_nested_root@@Base+0xa0>
   32f14:	mov	r0, #3
   32f18:	b	32e0c <flatcc_verify_table_as_nested_root@@Base+0xa0>

00032f1c <flatcc_verify_union_field@@Base>:
   32f1c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   32f20:	add	fp, sp, #24
   32f24:	sub	sp, sp, #32
   32f28:	mov	r5, r0
   32f2c:	mov	r8, r3
   32f30:	mov	r0, #2
   32f34:	lsl	r4, r1, #1
   32f38:	ldrh	r3, [r5, #22]
   32f3c:	add	r0, r0, r1, lsl #1
   32f40:	uxth	r7, r0
   32f44:	cmp	r7, r3
   32f48:	bcs	33000 <flatcc_verify_union_field@@Base+0xe4>
   32f4c:	ldr	r7, [r5, #12]
   32f50:	uxtah	r0, r7, r0
   32f54:	ldrh	r9, [r0]
   32f58:	cmp	r9, #0
   32f5c:	beq	33000 <flatcc_verify_union_field@@Base+0xe4>
   32f60:	ldrh	r6, [r5, #20]
   32f64:	mov	r0, #13
   32f68:	cmp	r9, r6
   32f6c:	bcs	33034 <flatcc_verify_union_field@@Base+0x118>
   32f70:	add	r4, r4, #4
   32f74:	mov	r0, #1
   32f78:	uxth	r6, r4
   32f7c:	cmp	r6, r3
   32f80:	ldr	r3, [r5]
   32f84:	uxtahcc	r0, r7, r4
   32f88:	ldr	r7, [r5, #16]
   32f8c:	ldrhcc	r0, [r0]
   32f90:	add	r7, r3, r7
   32f94:	ldrb	r3, [r7, r9]
   32f98:	clzcc	r0, r0
   32f9c:	lsrcc	r0, r0, #5
   32fa0:	cmp	r0, #0
   32fa4:	moveq	r0, #24
   32fa8:	cmpeq	r3, #0
   32fac:	beq	33034 <flatcc_verify_union_field@@Base+0x118>
   32fb0:	cmp	r3, #0
   32fb4:	beq	3303c <flatcc_verify_union_field@@Base+0x120>
   32fb8:	add	r3, sp, #28
   32fbc:	mov	r0, r5
   32fc0:	bl	32130 <flatcc_verify_string_field@@Base+0x88>
   32fc4:	cmp	r0, #0
   32fc8:	bne	33034 <flatcc_verify_union_field@@Base+0x118>
   32fcc:	ldr	r1, [sp, #28]
   32fd0:	cmp	r1, #0
   32fd4:	beq	33034 <flatcc_verify_union_field@@Base+0x118>
   32fd8:	ldm	r5, {r0, r2, r3}
   32fdc:	str	r1, [sp, #20]
   32fe0:	stmib	sp, {r0, r2, r3}
   32fe4:	ldr	r0, [r0, r1]
   32fe8:	str	r0, [sp, #24]
   32fec:	ldrb	r0, [r7, r9]
   32ff0:	strb	r0, [sp, #16]
   32ff4:	add	r0, sp, #4
   32ff8:	blx	r8
   32ffc:	b	33034 <flatcc_verify_union_field@@Base+0x118>
   33000:	add	r0, r4, #4
   33004:	uxth	r1, r0
   33008:	cmp	r1, r3
   3300c:	bcs	33028 <flatcc_verify_union_field@@Base+0x10c>
   33010:	ldr	r1, [r5, #12]
   33014:	uxtah	r0, r1, r0
   33018:	ldrh	r1, [r0]
   3301c:	mov	r0, #23
   33020:	cmp	r1, #0
   33024:	bne	33034 <flatcc_verify_union_field@@Base+0x118>
   33028:	cmp	r2, #0
   3302c:	movwne	r2, #21
   33030:	mov	r0, r2
   33034:	sub	sp, fp, #24
   33038:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   3303c:	mov	r0, #0
   33040:	b	33034 <flatcc_verify_union_field@@Base+0x118>

00033044 <flatcc_verify_union_vector_field@@Base>:
   33044:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   33048:	add	fp, sp, #28
   3304c:	sub	sp, sp, #44	; 0x2c
   33050:	mov	r5, r0
   33054:	mov	sl, r2
   33058:	mov	r9, r1
   3305c:	sub	r1, r1, #1
   33060:	mov	r0, #4
   33064:	ldrh	r2, [r5, #22]
   33068:	add	r6, r0, r1, lsl #1
   3306c:	uxth	r7, r6
   33070:	cmp	r7, r2
   33074:	bcs	3308c <flatcc_verify_union_vector_field@@Base+0x48>
   33078:	ldr	r4, [r5, #12]
   3307c:	uxtah	r4, r4, r6
   33080:	ldrh	r4, [r4]
   33084:	cmp	r4, #0
   33088:	bne	330cc <flatcc_verify_union_vector_field@@Base+0x88>
   3308c:	add	r0, r0, r9, lsl #1
   33090:	uxth	r4, r0
   33094:	cmp	r4, r2
   33098:	bcs	330c0 <flatcc_verify_union_vector_field@@Base+0x7c>
   3309c:	cmp	sl, #0
   330a0:	beq	330cc <flatcc_verify_union_vector_field@@Base+0x88>
   330a4:	ldr	r2, [r5, #12]
   330a8:	uxtah	r0, r2, r0
   330ac:	ldrh	r2, [r0]
   330b0:	mov	r0, #22
   330b4:	cmp	r2, #0
   330b8:	beq	3327c <flatcc_verify_union_vector_field@@Base+0x238>
   330bc:	b	330cc <flatcc_verify_union_vector_field@@Base+0x88>
   330c0:	mov	r0, #22
   330c4:	cmp	sl, #0
   330c8:	bne	3327c <flatcc_verify_union_vector_field@@Base+0x238>
   330cc:	uxth	r4, r1
   330d0:	mvn	r0, #0
   330d4:	str	r3, [sp, #12]
   330d8:	mov	r8, #1
   330dc:	mov	r2, sl
   330e0:	mov	r3, #1
   330e4:	str	r0, [sp, #4]
   330e8:	mov	r0, r5
   330ec:	mov	r1, r4
   330f0:	str	r8, [sp]
   330f4:	bl	321b0 <flatcc_verify_vector_field@@Base>
   330f8:	cmp	r0, #0
   330fc:	beq	33124 <flatcc_verify_union_vector_field@@Base+0xe0>
   33100:	mvn	r0, #0
   33104:	mov	r1, r4
   33108:	mov	r2, sl
   3310c:	mov	r3, #1
   33110:	str	r8, [sp]
   33114:	str	r0, [sp, #4]
   33118:	mov	r0, r5
   3311c:	bl	321b0 <flatcc_verify_vector_field@@Base>
   33120:	b	3327c <flatcc_verify_union_vector_field@@Base+0x238>
   33124:	ldrh	r1, [r5, #22]
   33128:	mov	r0, #0
   3312c:	cmp	r7, r1
   33130:	bcs	3327c <flatcc_verify_union_vector_field@@Base+0x238>
   33134:	ldr	r1, [r5, #12]
   33138:	uxtah	r1, r1, r6
   3313c:	ldrh	r1, [r1]
   33140:	cmp	r1, #0
   33144:	beq	3327c <flatcc_verify_union_vector_field@@Base+0x238>
   33148:	ldr	r2, [r5]
   3314c:	ldr	r3, [r5, #16]
   33150:	ldr	r6, [sp, #12]
   33154:	add	r2, r2, r3
   33158:	adds	r1, r2, r1
   3315c:	beq	3327c <flatcc_verify_union_vector_field@@Base+0x238>
   33160:	ldr	r4, [r1]
   33164:	add	r3, sp, #16
   33168:	mov	r0, r5
   3316c:	mov	r2, sl
   33170:	ldr	r8, [r4, r1]!
   33174:	mov	r1, r9
   33178:	bl	32130 <flatcc_verify_string_field@@Base+0x88>
   3317c:	cmp	r0, #0
   33180:	bne	3327c <flatcc_verify_union_vector_field@@Base+0x238>
   33184:	ldr	r2, [sp, #16]
   33188:	cmp	r2, #0
   3318c:	beq	3327c <flatcc_verify_union_vector_field@@Base+0x238>
   33190:	ldr	r1, [r5, #8]
   33194:	cmp	r1, #1
   33198:	blt	33278 <flatcc_verify_union_vector_field@@Base+0x234>
   3319c:	ldr	r9, [r5]
   331a0:	ldr	r0, [r9, r2]
   331a4:	add	r3, r0, r2
   331a8:	mov	r0, #16
   331ac:	cmp	r3, r2
   331b0:	bls	3327c <flatcc_verify_union_vector_field@@Base+0x238>
   331b4:	ldr	r2, [r5, #4]
   331b8:	add	r7, r3, #4
   331bc:	cmp	r7, r2
   331c0:	bhi	3327c <flatcc_verify_union_vector_field@@Base+0x238>
   331c4:	ands	r5, r7, #3
   331c8:	bne	3327c <flatcc_verify_union_vector_field@@Base+0x238>
   331cc:	ldr	r5, [r9, r3]
   331d0:	mov	r0, #25
   331d4:	cmn	r5, #-1073741823	; 0xc0000001
   331d8:	bhi	3327c <flatcc_verify_union_vector_field@@Base+0x238>
   331dc:	sub	r0, r2, #4
   331e0:	sub	r3, r0, r3
   331e4:	mov	r0, #26
   331e8:	cmp	r3, r5, lsl #2
   331ec:	bcc	3327c <flatcc_verify_union_vector_field@@Base+0x238>
   331f0:	mov	r0, #34	; 0x22
   331f4:	cmp	r5, r8
   331f8:	bne	3327c <flatcc_verify_union_vector_field@@Base+0x238>
   331fc:	cmp	r8, #0
   33200:	sub	r0, r1, #1
   33204:	str	r2, [sp, #24]
   33208:	str	r9, [sp, #20]
   3320c:	str	r0, [sp, #28]
   33210:	beq	33284 <flatcc_verify_union_vector_field@@Base+0x240>
   33214:	add	r4, r4, #4
   33218:	mov	r5, #0
   3321c:	add	sl, sp, #20
   33220:	ldr	r1, [r9, r7]
   33224:	ldrb	r0, [r4, r5]
   33228:	cmp	r1, #0
   3322c:	beq	33258 <flatcc_verify_union_vector_field@@Base+0x214>
   33230:	cmp	r0, #0
   33234:	beq	3328c <flatcc_verify_union_vector_field@@Base+0x248>
   33238:	str	r7, [sp, #36]	; 0x24
   3323c:	strb	r0, [sp, #32]
   33240:	mov	r0, sl
   33244:	str	r1, [sp, #40]	; 0x28
   33248:	blx	r6
   3324c:	cmp	r0, #0
   33250:	beq	33260 <flatcc_verify_union_vector_field@@Base+0x21c>
   33254:	b	33294 <flatcc_verify_union_vector_field@@Base+0x250>
   33258:	cmp	r0, #0
   3325c:	bne	332a0 <flatcc_verify_union_vector_field@@Base+0x25c>
   33260:	add	r5, r5, #1
   33264:	add	r7, r7, #4
   33268:	mov	r0, #0
   3326c:	cmp	r5, r8
   33270:	bcc	33220 <flatcc_verify_union_vector_field@@Base+0x1dc>
   33274:	b	3327c <flatcc_verify_union_vector_field@@Base+0x238>
   33278:	mov	r0, #3
   3327c:	sub	sp, fp, #28
   33280:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33284:	mov	r0, #0
   33288:	b	3327c <flatcc_verify_union_vector_field@@Base+0x238>
   3328c:	mov	r0, #33	; 0x21
   33290:	b	3327c <flatcc_verify_union_vector_field@@Base+0x238>
   33294:	add	r0, sp, #20
   33298:	blx	r6
   3329c:	b	3327c <flatcc_verify_union_vector_field@@Base+0x238>
   332a0:	mov	r0, #32
   332a4:	b	3327c <flatcc_verify_union_vector_field@@Base+0x238>

000332a8 <grisu3_diy_fp_encode_double@@Base>:
   332a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   332ac:	add	fp, sp, #28
   332b0:	sub	sp, sp, #44	; 0x2c
   332b4:	mov	r5, r2
   332b8:	mov	r2, r0
   332bc:	mov	r0, #0
   332c0:	mov	r9, r3
   332c4:	mov	r3, r1
   332c8:	str	r0, [sp]
   332cc:	str	r0, [sp, #4]
   332d0:	add	r0, sp, #24
   332d4:	bl	33684 <grisu3_diy_fp_encode_double@@Base+0x3dc>
   332d8:	sub	r0, r5, r9
   332dc:	ldr	r5, [fp, #8]
   332e0:	cmp	r5, #0
   332e4:	movwne	r5, #4
   332e8:	cmn	r0, #348	; 0x15c
   332ec:	blt	335e4 <grisu3_diy_fp_encode_double@@Base+0x33c>
   332f0:	cmp	r0, #348	; 0x15c
   332f4:	bge	33604 <grisu3_diy_fp_encode_double@@Base+0x35c>
   332f8:	add	r1, r0, #348	; 0x15c
   332fc:	movw	r6, #35360	; 0x8a20
   33300:	asr	r2, r1, #31
   33304:	movt	r6, #4
   33308:	add	r1, r1, r2, lsr #29
   3330c:	mvn	r2, #15
   33310:	and	r1, r2, r1, lsl #1
   33314:	ldr	r8, [r6, r1]!
   33318:	ldrsh	r4, [r6, #10]
   3331c:	cmp	r0, r4
   33320:	blt	33624 <grisu3_diy_fp_encode_double@@Base+0x37c>
   33324:	add	r1, r4, #8
   33328:	cmp	r1, r0
   3332c:	ble	33644 <grisu3_diy_fp_encode_double@@Base+0x39c>
   33330:	ldr	r1, [sp, #32]
   33334:	ldr	r2, [sp, #24]
   33338:	ldr	r3, [sp, #28]
   3333c:	ldr	ip, [sp, #36]	; 0x24
   33340:	cmp	r0, r4
   33344:	rsb	r7, r1, #0
   33348:	lsl	r5, r5, r7
   3334c:	beq	333b0 <grisu3_diy_fp_encode_double@@Base+0x108>
   33350:	mvn	r7, r4
   33354:	add	r4, r0, r7
   33358:	cmp	r4, #7
   3335c:	bcs	33664 <grisu3_diy_fp_encode_double@@Base+0x3bc>
   33360:	movw	r0, #35248	; 0x89b0
   33364:	stm	sp, {r1, ip}
   33368:	movt	r0, #4
   3336c:	ldr	r1, [r0, r4, lsl #4]!
   33370:	str	r1, [sp, #8]
   33374:	ldmib	r0, {r1, r7}
   33378:	ldr	r0, [r0, #12]
   3337c:	str	r0, [sp, #20]
   33380:	add	r0, sp, #24
   33384:	str	r7, [sp, #16]
   33388:	str	r1, [sp, #12]
   3338c:	bl	33728 <grisu3_diy_fp_encode_double@@Base+0x480>
   33390:	add	r0, r9, r4
   33394:	ldr	r2, [sp, #24]
   33398:	ldr	r3, [sp, #28]
   3339c:	ldr	r1, [sp, #32]
   333a0:	ldr	ip, [sp, #36]	; 0x24
   333a4:	add	r0, r0, #1
   333a8:	cmp	r0, #19
   333ac:	addgt	r5, r5, #4
   333b0:	ldr	r0, [r6, #4]
   333b4:	ldrsh	r7, [r6, #8]
   333b8:	stm	sp, {r1, ip}
   333bc:	mov	r6, #0
   333c0:	str	r8, [sp, #8]
   333c4:	str	r6, [sp, #20]
   333c8:	str	r0, [sp, #12]
   333cc:	add	r0, sp, #24
   333d0:	str	r7, [sp, #16]
   333d4:	bl	33728 <grisu3_diy_fp_encode_double@@Base+0x480>
   333d8:	add	r4, sp, #24
   333dc:	ldm	r4, {r2, r3, r4}
   333e0:	ldr	r0, [sp, #36]	; 0x24
   333e4:	str	r0, [sp, #4]
   333e8:	add	r0, sp, #24
   333ec:	str	r4, [sp]
   333f0:	bl	33684 <grisu3_diy_fp_encode_double@@Base+0x3dc>
   333f4:	add	r7, sp, #24
   333f8:	mov	r0, #9
   333fc:	cmp	r5, #0
   33400:	movw	lr, #64462	; 0xfbce
   33404:	ldm	r7, {r1, r3, r7}
   33408:	movweq	r0, #8
   3340c:	movt	lr, #65535	; 0xffff
   33410:	add	r0, r0, r5
   33414:	sub	r2, r4, r7
   33418:	lsl	r8, r0, r2
   3341c:	sub	r0, lr, #1
   33420:	cmp	r7, r0
   33424:	bgt	33478 <grisu3_diy_fp_encode_double@@Base+0x1d0>
   33428:	mvn	r0, #1136	; 0x470
   3342c:	mov	r6, #64	; 0x40
   33430:	cmp	r7, r0
   33434:	blt	33444 <grisu3_diy_fp_encode_double@@Base+0x19c>
   33438:	sub	r6, lr, r7
   3343c:	cmp	r6, #61	; 0x3d
   33440:	blt	33478 <grisu3_diy_fp_encode_double@@Base+0x1d0>
   33444:	sub	r0, r6, #62	; 0x3e
   33448:	mov	r2, #9
   3344c:	add	r8, r2, r8, asr r0
   33450:	lsr	r1, r1, r0
   33454:	rsb	r2, r6, #94	; 0x5e
   33458:	add	r7, r0, r7
   3345c:	orr	r1, r1, r3, lsl r2
   33460:	sub	r2, r6, #94	; 0x5e
   33464:	mov	r6, #62	; 0x3e
   33468:	cmp	r2, #0
   3346c:	lsrge	r1, r3, r2
   33470:	lsr	r3, r3, r0
   33474:	movwge	r3, #0
   33478:	lsr	r0, r1, r6
   3347c:	rsb	r2, r6, #32
   33480:	add	r5, r7, r6
   33484:	mov	r7, #1
   33488:	orr	r2, r0, r3, lsl r2
   3348c:	sub	r0, r6, #32
   33490:	cmp	r0, #0
   33494:	lsrge	r2, r3, r0
   33498:	lsr	r0, r3, r6
   3349c:	sub	r3, r6, #1
   334a0:	lsl	r7, r7, r3
   334a4:	sub	r3, r6, #33	; 0x21
   334a8:	movwge	r0, #0
   334ac:	cmp	r3, #0
   334b0:	movwge	r7, #0
   334b4:	add	sl, r8, r7, lsl #3
   334b8:	cmp	r6, sl
   334bc:	blt	334dc <grisu3_diy_fp_encode_double@@Base+0x234>
   334c0:	adds	r2, r2, #1
   334c4:	adc	r0, r0, #0
   334c8:	tst	r0, #2097152	; 0x200000
   334cc:	beq	334dc <grisu3_diy_fp_encode_double@@Base+0x234>
   334d0:	lsrs	r0, r0, #1
   334d4:	add	r5, r5, #1
   334d8:	rrx	r2, r2
   334dc:	and	r4, r7, r1
   334e0:	cmp	r0, #2097152	; 0x200000
   334e4:	bcc	33508 <grisu3_diy_fp_encode_double@@Base+0x260>
   334e8:	mov	r3, #0
   334ec:	lsrs	r1, r0, #1
   334f0:	add	r5, r5, #1
   334f4:	rrx	r2, r2
   334f8:	cmp	r3, r0, lsr #22
   334fc:	mov	r0, r1
   33500:	bne	334ec <grisu3_diy_fp_encode_double@@Base+0x244>
   33504:	b	3350c <grisu3_diy_fp_encode_double@@Base+0x264>
   33508:	mov	r1, r0
   3350c:	ldr	ip, [fp, #12]
   33510:	lsl	r9, r7, #3
   33514:	lsl	r6, r4, #3
   33518:	vmov.i32	d16, #0	; 0x00000000
   3351c:	cmp	r5, lr
   33520:	blt	335b8 <grisu3_diy_fp_encode_double@@Base+0x310>
   33524:	and	r0, r1, #1048576	; 0x100000
   33528:	mov	r3, #1
   3352c:	cmp	r5, lr
   33530:	eor	r7, r3, r0, lsr #20
   33534:	beq	33578 <grisu3_diy_fp_encode_double@@Base+0x2d0>
   33538:	cmp	r0, #0
   3353c:	bne	33578 <grisu3_diy_fp_encode_double@@Base+0x2d0>
   33540:	mov	r3, #1
   33544:	lsl	r0, r1, #1
   33548:	and	r1, r1, #524288	; 0x80000
   3354c:	sub	r4, r5, #1
   33550:	cmn	r5, #1072	; 0x430
   33554:	orr	r0, r0, r2, lsr #31
   33558:	eor	r7, r3, r1, lsr #19
   3355c:	lsl	r2, r2, #1
   33560:	blt	33580 <grisu3_diy_fp_encode_double@@Base+0x2d8>
   33564:	cmp	r1, #0
   33568:	mov	r1, r0
   3356c:	mov	r5, r4
   33570:	beq	33544 <grisu3_diy_fp_encode_double@@Base+0x29c>
   33574:	b	33580 <grisu3_diy_fp_encode_double@@Base+0x2d8>
   33578:	mov	r4, r5
   3357c:	mov	r0, r1
   33580:	cmp	r4, lr
   33584:	bne	33598 <grisu3_diy_fp_encode_double@@Base+0x2f0>
   33588:	mov	r1, #0
   3358c:	cmp	r7, #0
   33590:	mov	r3, #0
   33594:	bne	335a8 <grisu3_diy_fp_encode_double@@Base+0x300>
   33598:	movw	r1, #0
   3359c:	movt	r1, #17200	; 0x4330
   335a0:	add	r3, r1, r4, lsl #20
   335a4:	mov	r1, #0
   335a8:	bfc	r0, #20, #12
   335ac:	orr	r1, r1, r2
   335b0:	orr	r0, r3, r0
   335b4:	vmov	d16, r1, r0
   335b8:	cmp	r6, sl
   335bc:	mov	r1, #0
   335c0:	sub	r2, r9, r8
   335c4:	mov	r0, #0
   335c8:	vstr	d16, [ip]
   335cc:	movwge	r1, #1
   335d0:	cmp	r2, r6
   335d4:	movwge	r0, #1
   335d8:	orr	r0, r1, r0
   335dc:	sub	sp, fp, #28
   335e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   335e4:	movw	r0, #38874	; 0x97da
   335e8:	movw	r1, #37432	; 0x9238
   335ec:	movw	r3, #38905	; 0x97f9
   335f0:	mov	r2, #80	; 0x50
   335f4:	movt	r0, #4
   335f8:	movt	r1, #4
   335fc:	movt	r3, #4
   33600:	bl	14f44 <__assert_fail@plt>
   33604:	movw	r0, #38962	; 0x9832
   33608:	movw	r1, #37432	; 0x9238
   3360c:	movw	r3, #38905	; 0x97f9
   33610:	mov	r2, #81	; 0x51
   33614:	movt	r0, #4
   33618:	movt	r1, #4
   3361c:	movt	r3, #4
   33620:	bl	14f44 <__assert_fail@plt>
   33624:	movw	r0, #39005	; 0x985d
   33628:	movw	r1, #37432	; 0x9238
   3362c:	movw	r3, #38905	; 0x97f9
   33630:	mov	r2, #88	; 0x58
   33634:	movt	r0, #4
   33638:	movt	r1, #4
   3363c:	movt	r3, #4
   33640:	bl	14f44 <__assert_fail@plt>
   33644:	movw	r0, #39020	; 0x986c
   33648:	movw	r1, #37432	; 0x9238
   3364c:	movw	r3, #38905	; 0x97f9
   33650:	mov	r2, #89	; 0x59
   33654:	movt	r0, #4
   33658:	movt	r1, #4
   3365c:	movt	r3, #4
   33660:	bl	14f44 <__assert_fail@plt>
   33664:	movw	r0, #37404	; 0x921c
   33668:	movw	r1, #37432	; 0x9238
   3366c:	movw	r3, #37519	; 0x928f
   33670:	mov	r2, #185	; 0xb9
   33674:	movt	r0, #4
   33678:	movt	r1, #4
   3367c:	movt	r3, #4
   33680:	bl	14f44 <__assert_fail@plt>
   33684:	push	{r4, sl, fp, lr}
   33688:	add	fp, sp, #8
   3368c:	orrs	r1, r2, r3
   33690:	beq	33708 <grisu3_diy_fp_encode_double@@Base+0x460>
   33694:	ldr	ip, [fp, #12]
   33698:	ldr	r1, [fp, #8]
   3369c:	mov	r4, #0
   336a0:	cmp	r4, r3, lsr #22
   336a4:	bne	336c0 <grisu3_diy_fp_encode_double@@Base+0x418>
   336a8:	lsl	r3, r3, #10
   336ac:	sub	r1, r1, #10
   336b0:	orr	r3, r3, r2, lsr #22
   336b4:	lsl	r2, r2, #10
   336b8:	cmp	r3, #4194304	; 0x400000
   336bc:	bcc	336a8 <grisu3_diy_fp_encode_double@@Base+0x400>
   336c0:	cmp	r3, #0
   336c4:	blt	336f0 <grisu3_diy_fp_encode_double@@Base+0x448>
   336c8:	mvn	lr, #0
   336cc:	lsl	r3, r3, #1
   336d0:	lsl	r4, r2, #1
   336d4:	sub	r1, r1, #1
   336d8:	orr	r3, r3, r2, lsr #31
   336dc:	subs	r2, lr, r2, lsl #1
   336e0:	sbcs	r2, lr, r3
   336e4:	mov	r2, r4
   336e8:	blt	336cc <grisu3_diy_fp_encode_double@@Base+0x424>
   336ec:	b	336f4 <grisu3_diy_fp_encode_double@@Base+0x44c>
   336f0:	mov	r4, r2
   336f4:	str	r4, [r0]
   336f8:	str	r3, [r0, #4]
   336fc:	str	r1, [r0, #8]
   33700:	str	ip, [r0, #12]
   33704:	pop	{r4, sl, fp, pc}
   33708:	movw	r0, #38722	; 0x9742
   3370c:	movw	r1, #38731	; 0x974b
   33710:	movw	r3, #38817	; 0x97a1
   33714:	mov	r2, #260	; 0x104
   33718:	movt	r0, #4
   3371c:	movt	r1, #4
   33720:	movt	r3, #4
   33724:	bl	14f44 <__assert_fail@plt>
   33728:	push	{r4, r5, fp, lr}
   3372c:	add	fp, sp, #8
   33730:	ldr	ip, [fp, #24]
   33734:	ldr	r1, [fp, #8]
   33738:	mov	r5, #0
   3373c:	add	r1, r1, ip
   33740:	ldr	ip, [fp, #16]
   33744:	add	r1, r1, #64	; 0x40
   33748:	str	r1, [r0, #8]
   3374c:	umull	r1, lr, ip, r2
   33750:	umull	ip, r1, ip, r3
   33754:	adds	lr, ip, lr
   33758:	ldr	ip, [fp, #20]
   3375c:	adc	r5, r5, #0
   33760:	umull	r2, r4, ip, r2
   33764:	adds	r2, lr, r2
   33768:	umaal	r1, r4, ip, r3
   3376c:	adc	r5, r5, #0
   33770:	adds	r2, r2, #-2147483648	; 0x80000000
   33774:	adc	r2, r5, #0
   33778:	adds	r1, r1, r2
   3377c:	str	r1, [r0]
   33780:	adc	r1, r4, #0
   33784:	str	r1, [r0, #4]
   33788:	pop	{r4, r5, fp, pc}

0003378c <flatcc_json_parser_error_string@@Base>:
   3378c:	cmp	r0, #34	; 0x22
   33790:	movwhi	r0, #35066	; 0x88fa
   33794:	movthi	r0, #4
   33798:	bxhi	lr
   3379c:	movw	r1, #37264	; 0x9190
   337a0:	movt	r1, #4
   337a4:	ldr	r0, [r1, r0, lsl #2]
   337a8:	bx	lr

000337ac <flatcc_json_parser_set_error@@Base>:
   337ac:	mov	ip, r2
   337b0:	ldr	r2, [r0, #24]
   337b4:	cmp	r2, #0
   337b8:	bne	337d4 <flatcc_json_parser_set_error@@Base+0x28>
   337bc:	str	r1, [r0, #36]	; 0x24
   337c0:	add	r1, r1, #1
   337c4:	ldr	r2, [r0, #4]
   337c8:	sub	r1, r1, r2
   337cc:	str	r1, [r0, #20]
   337d0:	str	r3, [r0, #24]
   337d4:	mov	r0, ip
   337d8:	bx	lr

000337dc <flatcc_json_parser_string_part@@Base>:
   337dc:	cmp	r1, r2
   337e0:	beq	3380c <flatcc_json_parser_string_part@@Base+0x30>
   337e4:	ldrb	r3, [r1]
   337e8:	cmp	r3, #32
   337ec:	bcc	33840 <flatcc_json_parser_string_part@@Base+0x64>
   337f0:	cmp	r3, #34	; 0x22
   337f4:	cmpne	r3, #92	; 0x5c
   337f8:	beq	33838 <flatcc_json_parser_string_part@@Base+0x5c>
   337fc:	add	r1, r1, #1
   33800:	cmp	r2, r1
   33804:	bne	337e4 <flatcc_json_parser_string_part@@Base+0x8>
   33808:	mov	r1, r2
   3380c:	ldr	r3, [r0, #24]
   33810:	cmp	r3, #0
   33814:	bne	33834 <flatcc_json_parser_string_part@@Base+0x58>
   33818:	mov	ip, #20
   3381c:	str	r1, [r0, #36]	; 0x24
   33820:	add	r1, r1, #1
   33824:	ldr	r3, [r0, #4]
   33828:	sub	r1, r1, r3
   3382c:	str	r1, [r0, #20]
   33830:	str	ip, [r0, #24]
   33834:	mov	r1, r2
   33838:	mov	r0, r1
   3383c:	bx	lr
   33840:	ldr	r3, [r0, #24]
   33844:	cmp	r3, #0
   33848:	bne	33834 <flatcc_json_parser_string_part@@Base+0x58>
   3384c:	mov	ip, #17
   33850:	b	3381c <flatcc_json_parser_string_part@@Base+0x40>

00033854 <flatcc_json_parser_space_ext@@Base>:
   33854:	mov	ip, r2
   33858:	cmp	r1, r2
   3385c:	beq	33928 <flatcc_json_parser_space_ext@@Base+0xd4>
   33860:	ldrb	r3, [r1]
   33864:	cmp	r3, #32
   33868:	bne	338b8 <flatcc_json_parser_space_ext@@Base+0x64>
   3386c:	add	r1, r1, #1
   33870:	cmp	r1, ip
   33874:	bne	33860 <flatcc_json_parser_space_ext@@Base+0xc>
   33878:	b	33928 <flatcc_json_parser_space_ext@@Base+0xd4>
   3387c:	sub	r2, ip, r1
   33880:	mov	r3, #0
   33884:	cmp	r2, #2
   33888:	ldrbge	r2, [r1, #1]
   3388c:	subge	r2, r2, #10
   33890:	clzge	r2, r2
   33894:	lsrge	r3, r2, #5
   33898:	add	r1, r1, r3
   3389c:	add	r1, r1, #1
   338a0:	str	r1, [r0, #4]
   338a4:	ldr	r2, [r0, #16]
   338a8:	add	r2, r2, #1
   338ac:	str	r2, [r0, #16]
   338b0:	b	338b8 <flatcc_json_parser_space_ext@@Base+0x64>
   338b4:	add	r1, r1, #1
   338b8:	cmp	r1, ip
   338bc:	beq	33928 <flatcc_json_parser_space_ext@@Base+0xd4>
   338c0:	ldrb	r3, [r1]
   338c4:	cmp	r3, #32
   338c8:	bhi	33924 <flatcc_json_parser_space_ext@@Base+0xd0>
   338cc:	cmp	r3, #12
   338d0:	bgt	338e8 <flatcc_json_parser_space_ext@@Base+0x94>
   338d4:	cmp	r3, #9
   338d8:	beq	338b4 <flatcc_json_parser_space_ext@@Base+0x60>
   338dc:	cmp	r3, #10
   338e0:	beq	3389c <flatcc_json_parser_space_ext@@Base+0x48>
   338e4:	b	338f8 <flatcc_json_parser_space_ext@@Base+0xa4>
   338e8:	cmp	r3, #13
   338ec:	beq	3387c <flatcc_json_parser_space_ext@@Base+0x28>
   338f0:	cmp	r3, #32
   338f4:	beq	33870 <flatcc_json_parser_space_ext@@Base+0x1c>
   338f8:	ldr	r2, [r0, #24]
   338fc:	cmp	r2, #0
   33900:	bne	33928 <flatcc_json_parser_space_ext@@Base+0xd4>
   33904:	str	r1, [r0, #36]	; 0x24
   33908:	add	r1, r1, #1
   3390c:	mov	r2, #5
   33910:	ldr	r3, [r0, #4]
   33914:	sub	r1, r1, r3
   33918:	str	r1, [r0, #20]
   3391c:	str	r2, [r0, #24]
   33920:	b	33928 <flatcc_json_parser_space_ext@@Base+0xd4>
   33924:	mov	ip, r1
   33928:	mov	r0, ip
   3392c:	bx	lr

00033930 <flatcc_json_parser_string_escape@@Base>:
   33930:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   33934:	add	fp, sp, #24
   33938:	sub	r7, r2, r1
   3393c:	cmp	r7, #2
   33940:	blt	33a30 <flatcc_json_parser_string_escape@@Base+0x100>
   33944:	ldrb	r6, [r1]
   33948:	cmp	r6, #92	; 0x5c
   3394c:	bne	33a30 <flatcc_json_parser_string_escape@@Base+0x100>
   33950:	ldrb	r6, [r1, #1]
   33954:	cmp	r6, #97	; 0x61
   33958:	bgt	3397c <flatcc_json_parser_string_escape@@Base+0x4c>
   3395c:	cmp	r6, #34	; 0x22
   33960:	beq	339dc <flatcc_json_parser_string_escape@@Base+0xac>
   33964:	cmp	r6, #47	; 0x2f
   33968:	beq	339e4 <flatcc_json_parser_string_escape@@Base+0xb4>
   3396c:	cmp	r6, #92	; 0x5c
   33970:	bne	33a30 <flatcc_json_parser_string_escape@@Base+0x100>
   33974:	movw	r0, #23553	; 0x5c01
   33978:	b	33a68 <flatcc_json_parser_string_escape@@Base+0x138>
   3397c:	sub	r5, r6, #110	; 0x6e
   33980:	cmp	r5, #10
   33984:	bhi	339c4 <flatcc_json_parser_string_escape@@Base+0x94>
   33988:	add	r6, pc, #0
   3398c:	ldr	pc, [r6, r5, lsl #2]
   33990:			; <UNDEFINED> instruction: 0x000339bc
   33994:	andeq	r3, r3, r0, lsr sl
   33998:	andeq	r3, r3, r0, lsr sl
   3399c:	andeq	r3, r3, r0, lsr sl
   339a0:	andeq	r3, r3, ip, ror #19
   339a4:	andeq	r3, r3, r0, lsr sl
   339a8:	strdeq	r3, [r3], -r4
   339ac:	strdeq	r3, [r3], -ip
   339b0:	andeq	r3, r3, r0, lsr sl
   339b4:	andeq	r3, r3, r0, lsr sl
   339b8:	andeq	r3, r3, r0, lsr #20
   339bc:	movw	r0, #2561	; 0xa01
   339c0:	b	33a68 <flatcc_json_parser_string_escape@@Base+0x138>
   339c4:	cmp	r6, #98	; 0x62
   339c8:	beq	33a64 <flatcc_json_parser_string_escape@@Base+0x134>
   339cc:	cmp	r6, #102	; 0x66
   339d0:	bne	33a30 <flatcc_json_parser_string_escape@@Base+0x100>
   339d4:	movw	r0, #3073	; 0xc01
   339d8:	b	33a68 <flatcc_json_parser_string_escape@@Base+0x138>
   339dc:	movw	r0, #8705	; 0x2201
   339e0:	b	33a68 <flatcc_json_parser_string_escape@@Base+0x138>
   339e4:	movw	r0, #12033	; 0x2f01
   339e8:	b	33a68 <flatcc_json_parser_string_escape@@Base+0x138>
   339ec:	movw	r0, #3329	; 0xd01
   339f0:	b	33a68 <flatcc_json_parser_string_escape@@Base+0x138>
   339f4:	movw	r0, #2305	; 0x901
   339f8:	b	33a68 <flatcc_json_parser_string_escape@@Base+0x138>
   339fc:	cmp	r7, #5
   33a00:	ble	33a30 <flatcc_json_parser_string_escape@@Base+0x100>
   33a04:	ldrb	r7, [r1, #2]
   33a08:	sub	r6, r7, #48	; 0x30
   33a0c:	uxtb	r6, r6
   33a10:	cmp	r6, #9
   33a14:	bhi	33a94 <flatcc_json_parser_string_escape@@Base+0x164>
   33a18:	lsl	ip, r7, #12
   33a1c:	b	33ab4 <flatcc_json_parser_string_escape@@Base+0x184>
   33a20:	mov	r6, #1
   33a24:	cmp	r7, #3
   33a28:	strb	r6, [r3]
   33a2c:	bgt	33a78 <flatcc_json_parser_string_escape@@Base+0x148>
   33a30:	mov	r7, #0
   33a34:	strb	r7, [r3]
   33a38:	ldr	r3, [r0, #24]
   33a3c:	cmp	r3, #0
   33a40:	bne	33a70 <flatcc_json_parser_string_escape@@Base+0x140>
   33a44:	str	r1, [r0, #36]	; 0x24
   33a48:	add	r1, r1, #1
   33a4c:	mov	r3, #18
   33a50:	ldr	r7, [r0, #4]
   33a54:	sub	r1, r1, r7
   33a58:	str	r1, [r0, #20]
   33a5c:	str	r3, [r0, #24]
   33a60:	b	33a70 <flatcc_json_parser_string_escape@@Base+0x140>
   33a64:	movw	r0, #2049	; 0x801
   33a68:	strh	r0, [r3]
   33a6c:	add	r2, r1, #2
   33a70:	mov	r0, r2
   33a74:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   33a78:	ldrb	r7, [r1, #2]
   33a7c:	sub	r6, r7, #48	; 0x30
   33a80:	uxtb	r6, r6
   33a84:	cmp	r6, #9
   33a88:	bhi	33ad0 <flatcc_json_parser_string_escape@@Base+0x1a0>
   33a8c:	lsl	r7, r7, #4
   33a90:	b	33aec <flatcc_json_parser_string_escape@@Base+0x1bc>
   33a94:	orr	r6, r7, #32
   33a98:	sub	r6, r6, #97	; 0x61
   33a9c:	uxtb	r6, r6
   33aa0:	cmp	r6, #5
   33aa4:	bhi	33a30 <flatcc_json_parser_string_escape@@Base+0x100>
   33aa8:	movw	r6, #36864	; 0x9000
   33aac:	movt	r6, #65535	; 0xffff
   33ab0:	add	ip, r6, r7, lsl #12
   33ab4:	ldrb	lr, [r1, #3]
   33ab8:	sub	r4, lr, #48	; 0x30
   33abc:	uxtb	r4, r4
   33ac0:	cmp	r4, #10
   33ac4:	bcs	33b28 <flatcc_json_parser_string_escape@@Base+0x1f8>
   33ac8:	mov	r8, #53248	; 0xd000
   33acc:	b	33b40 <flatcc_json_parser_string_escape@@Base+0x210>
   33ad0:	orr	r6, r7, #32
   33ad4:	sub	r6, r6, #97	; 0x61
   33ad8:	uxtb	r6, r6
   33adc:	cmp	r6, #5
   33ae0:	bhi	33a30 <flatcc_json_parser_string_escape@@Base+0x100>
   33ae4:	mvn	r6, #111	; 0x6f
   33ae8:	add	r7, r6, r7, lsl #4
   33aec:	ldrb	r5, [r1, #3]
   33af0:	sub	r6, r5, #48	; 0x30
   33af4:	uxtb	r4, r6
   33af8:	cmp	r4, #10
   33afc:	bcc	33b18 <flatcc_json_parser_string_escape@@Base+0x1e8>
   33b00:	orr	r6, r5, #32
   33b04:	sub	r5, r6, #97	; 0x61
   33b08:	uxtb	r5, r5
   33b0c:	cmp	r5, #5
   33b10:	bhi	33a30 <flatcc_json_parser_string_escape@@Base+0x100>
   33b14:	sub	r6, r6, #87	; 0x57
   33b18:	orr	r0, r6, r7
   33b1c:	add	r2, r1, #4
   33b20:	strb	r0, [r3, #1]
   33b24:	b	33a70 <flatcc_json_parser_string_escape@@Base+0x140>
   33b28:	orr	lr, lr, #32
   33b2c:	mov	r8, #43264	; 0xa900
   33b30:	sub	r4, lr, #97	; 0x61
   33b34:	uxtb	r4, r4
   33b38:	cmp	r4, #6
   33b3c:	bcs	33a30 <flatcc_json_parser_string_escape@@Base+0x100>
   33b40:	ldrb	r5, [r1, #4]
   33b44:	sub	r4, r5, #48	; 0x30
   33b48:	uxtb	r4, r4
   33b4c:	cmp	r4, #10
   33b50:	bcs	33b5c <flatcc_json_parser_string_escape@@Base+0x22c>
   33b54:	mov	r9, #64768	; 0xfd00
   33b58:	b	33b74 <flatcc_json_parser_string_escape@@Base+0x244>
   33b5c:	orr	r5, r5, #32
   33b60:	movw	r9, #64144	; 0xfa90
   33b64:	sub	r4, r5, #97	; 0x61
   33b68:	uxtb	r4, r4
   33b6c:	cmp	r4, #6
   33b70:	bcs	33a30 <flatcc_json_parser_string_escape@@Base+0x100>
   33b74:	ldrb	r7, [r1, #5]
   33b78:	sub	r4, r7, #48	; 0x30
   33b7c:	uxtb	r4, r4
   33b80:	cmp	r4, #10
   33b84:	bcs	33b94 <flatcc_json_parser_string_escape@@Base+0x264>
   33b88:	mvn	r0, #86	; 0x56
   33b8c:	add	r4, r0, #39	; 0x27
   33b90:	b	33bac <flatcc_json_parser_string_escape@@Base+0x27c>
   33b94:	orr	r7, r7, #32
   33b98:	movw	r4, #65449	; 0xffa9
   33b9c:	sub	r6, r7, #97	; 0x61
   33ba0:	uxtb	r6, r6
   33ba4:	cmp	r6, #6
   33ba8:	bcs	33a30 <flatcc_json_parser_string_escape@@Base+0x100>
   33bac:	add	r0, r8, lr, lsl #8
   33bb0:	add	r2, r9, r5, lsl #4
   33bb4:	orr	r0, r0, ip
   33bb8:	orr	r0, r0, r2
   33bbc:	add	r2, r4, r7
   33bc0:	orr	r0, r0, r2
   33bc4:	uxth	r7, r0
   33bc8:	cmp	r7, #127	; 0x7f
   33bcc:	bhi	33bdc <flatcc_json_parser_string_escape@@Base+0x2ac>
   33bd0:	mov	r2, #1
   33bd4:	strb	r2, [r3]
   33bd8:	b	33c30 <flatcc_json_parser_string_escape@@Base+0x300>
   33bdc:	and	r2, r0, #63488	; 0xf800
   33be0:	mov	r6, #0
   33be4:	cmp	r6, r2, lsr #11
   33be8:	bne	33c04 <flatcc_json_parser_string_escape@@Base+0x2d4>
   33bec:	mov	r7, #192	; 0xc0
   33bf0:	mov	r2, #2
   33bf4:	orr	r7, r7, r0, lsr #6
   33bf8:	strb	r2, [r3]
   33bfc:	strb	r7, [r3, #1]
   33c00:	b	33c28 <flatcc_json_parser_string_escape@@Base+0x2f8>
   33c04:	mov	r6, #224	; 0xe0
   33c08:	mov	r2, #3
   33c0c:	orr	r6, r6, r7, lsr #12
   33c10:	strb	r2, [r3]
   33c14:	lsr	r7, r7, #6
   33c18:	strb	r6, [r3, #1]
   33c1c:	mov	r6, #2
   33c20:	bfi	r7, r6, #6, #26
   33c24:	strb	r7, [r3, #2]
   33c28:	mvn	r7, #-67108863	; 0xfc000001
   33c2c:	bfi	r0, r7, #6, #26
   33c30:	strb	r0, [r3, r2]
   33c34:	add	r2, r1, #6
   33c38:	b	33a70 <flatcc_json_parser_string_escape@@Base+0x140>

00033c3c <flatcc_json_parser_skip_constant@@Base>:
   33c3c:	push	{r4, r5, r6, sl, fp, lr}
   33c40:	add	fp, sp, #16
   33c44:	cmp	r1, r2
   33c48:	beq	33cf8 <flatcc_json_parser_skip_constant@@Base+0xbc>
   33c4c:	mov	r4, r2
   33c50:	mov	r5, r0
   33c54:	ldrsb	r0, [r1]
   33c58:	mov	r6, r1
   33c5c:	cmp	r0, #0
   33c60:	blt	33c74 <flatcc_json_parser_skip_constant@@Base+0x38>
   33c64:	uxtb	r0, r0
   33c68:	cmp	r0, #95	; 0x5f
   33c6c:	cmpne	r0, #46	; 0x2e
   33c70:	bne	33c84 <flatcc_json_parser_skip_constant@@Base+0x48>
   33c74:	add	r1, r6, #1
   33c78:	cmp	r1, r4
   33c7c:	bne	33c54 <flatcc_json_parser_skip_constant@@Base+0x18>
   33c80:	b	33cf0 <flatcc_json_parser_skip_constant@@Base+0xb4>
   33c84:	sub	r1, r0, #48	; 0x30
   33c88:	uxtb	r1, r1
   33c8c:	cmp	r1, #9
   33c90:	bls	33c74 <flatcc_json_parser_skip_constant@@Base+0x38>
   33c94:	orr	r1, r0, #32
   33c98:	sub	r1, r1, #97	; 0x61
   33c9c:	uxtb	r1, r1
   33ca0:	cmp	r1, #25
   33ca4:	bls	33c74 <flatcc_json_parser_skip_constant@@Base+0x38>
   33ca8:	sub	r1, r4, r6
   33cac:	cmp	r1, #2
   33cb0:	blt	33cd0 <flatcc_json_parser_skip_constant@@Base+0x94>
   33cb4:	cmp	r0, #32
   33cb8:	bhi	33cfc <flatcc_json_parser_skip_constant@@Base+0xc0>
   33cbc:	bne	33cd0 <flatcc_json_parser_skip_constant@@Base+0x94>
   33cc0:	mov	r1, r6
   33cc4:	ldrb	r0, [r1, #1]!
   33cc8:	cmp	r0, #32
   33ccc:	bhi	33c78 <flatcc_json_parser_skip_constant@@Base+0x3c>
   33cd0:	mov	r0, r5
   33cd4:	mov	r1, r6
   33cd8:	mov	r2, r4
   33cdc:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   33ce0:	mov	r1, r0
   33ce4:	cmp	r0, r6
   33ce8:	bne	33c78 <flatcc_json_parser_skip_constant@@Base+0x3c>
   33cec:	b	33cfc <flatcc_json_parser_skip_constant@@Base+0xc0>
   33cf0:	mov	r6, r4
   33cf4:	b	33cfc <flatcc_json_parser_skip_constant@@Base+0xc0>
   33cf8:	mov	r6, r1
   33cfc:	mov	r0, r6
   33d00:	pop	{r4, r5, r6, sl, fp, pc}

00033d04 <flatcc_json_parser_match_constant@@Base>:
   33d04:	push	{r4, r5, r6, r7, fp, lr}
   33d08:	add	fp, sp, #16
   33d0c:	ldr	r7, [fp, #8]
   33d10:	mov	r4, r1
   33d14:	sub	r1, r2, r1
   33d18:	cmp	r1, r3
   33d1c:	ble	33e1c <flatcc_json_parser_match_constant@@Base+0x118>
   33d20:	ldr	r1, [r0, #12]
   33d24:	mov	r5, r2
   33d28:	add	r6, r4, r3
   33d2c:	cmp	r1, #0
   33d30:	beq	33db4 <flatcc_json_parser_match_constant@@Base+0xb0>
   33d34:	sub	r1, r5, r6
   33d38:	cmp	r1, #2
   33d3c:	blt	33d64 <flatcc_json_parser_match_constant@@Base+0x60>
   33d40:	ldrb	r1, [r6]
   33d44:	mov	r2, r6
   33d48:	cmp	r1, #32
   33d4c:	bhi	33d74 <flatcc_json_parser_match_constant@@Base+0x70>
   33d50:	bne	33d64 <flatcc_json_parser_match_constant@@Base+0x60>
   33d54:	mov	r2, r6
   33d58:	ldrb	r1, [r2, #1]!
   33d5c:	cmp	r1, #32
   33d60:	bhi	33d74 <flatcc_json_parser_match_constant@@Base+0x70>
   33d64:	mov	r1, r6
   33d68:	mov	r2, r5
   33d6c:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   33d70:	mov	r2, r0
   33d74:	cmp	r2, r5
   33d78:	beq	33e2c <flatcc_json_parser_match_constant@@Base+0x128>
   33d7c:	cmp	r2, r6
   33d80:	beq	33e3c <flatcc_json_parser_match_constant@@Base+0x138>
   33d84:	ldrsb	r0, [r2]
   33d88:	cmp	r0, #95	; 0x5f
   33d8c:	beq	33dac <flatcc_json_parser_match_constant@@Base+0xa8>
   33d90:	cmn	r0, #1
   33d94:	ble	33dac <flatcc_json_parser_match_constant@@Base+0xa8>
   33d98:	orr	r0, r0, #32
   33d9c:	sub	r0, r0, #97	; 0x61
   33da0:	uxtb	r0, r0
   33da4:	cmp	r0, #25
   33da8:	bhi	33e3c <flatcc_json_parser_match_constant@@Base+0x138>
   33dac:	mov	r0, #1
   33db0:	b	33e24 <flatcc_json_parser_match_constant@@Base+0x120>
   33db4:	ldrb	r1, [r6]
   33db8:	cmp	r1, #92	; 0x5c
   33dbc:	beq	33e64 <flatcc_json_parser_match_constant@@Base+0x160>
   33dc0:	cmp	r1, #34	; 0x22
   33dc4:	beq	33df8 <flatcc_json_parser_match_constant@@Base+0xf4>
   33dc8:	cmp	r1, #32
   33dcc:	bne	33e1c <flatcc_json_parser_match_constant@@Base+0x118>
   33dd0:	add	r1, r4, r3
   33dd4:	add	r1, r1, #1
   33dd8:	cmp	r5, r1
   33ddc:	beq	33e2c <flatcc_json_parser_match_constant@@Base+0x128>
   33de0:	ldrb	r2, [r1], #1
   33de4:	cmp	r2, #32
   33de8:	beq	33dd8 <flatcc_json_parser_match_constant@@Base+0xd4>
   33dec:	cmp	r2, #34	; 0x22
   33df0:	bne	33ec0 <flatcc_json_parser_match_constant@@Base+0x1bc>
   33df4:	sub	r6, r1, #1
   33df8:	mvn	r2, r6
   33dfc:	add	r1, r6, #1
   33e00:	cmp	r2, #2
   33e04:	blt	33eac <flatcc_json_parser_match_constant@@Base+0x1a8>
   33e08:	ldrb	r2, [r1]
   33e0c:	cmp	r2, #32
   33e10:	bls	33e98 <flatcc_json_parser_match_constant@@Base+0x194>
   33e14:	mov	r2, r1
   33e18:	b	33eb8 <flatcc_json_parser_match_constant@@Base+0x1b4>
   33e1c:	mov	r0, #0
   33e20:	mov	r2, r4
   33e24:	str	r0, [r7]
   33e28:	b	33e5c <flatcc_json_parser_match_constant@@Base+0x158>
   33e2c:	mov	r0, #0
   33e30:	str	r0, [r7]
   33e34:	mov	r2, r5
   33e38:	b	33e5c <flatcc_json_parser_match_constant@@Base+0x158>
   33e3c:	mov	r0, #0
   33e40:	str	r0, [r7]
   33e44:	ldrb	r0, [r2]
   33e48:	cmp	r0, #44	; 0x2c
   33e4c:	cmpne	r0, #93	; 0x5d
   33e50:	beq	33e5c <flatcc_json_parser_match_constant@@Base+0x158>
   33e54:	cmp	r0, #125	; 0x7d
   33e58:	movne	r2, r4
   33e5c:	mov	r0, r2
   33e60:	pop	{r4, r5, r6, r7, fp, pc}
   33e64:	mov	r1, #0
   33e68:	str	r1, [r7]
   33e6c:	ldr	r1, [r0, #24]
   33e70:	cmp	r1, #0
   33e74:	bne	33e34 <flatcc_json_parser_match_constant@@Base+0x130>
   33e78:	str	r6, [r0, #36]	; 0x24
   33e7c:	add	r3, r6, #1
   33e80:	mov	r1, #18
   33e84:	ldr	r2, [r0, #4]
   33e88:	sub	r2, r3, r2
   33e8c:	str	r2, [r0, #20]
   33e90:	str	r1, [r0, #24]
   33e94:	b	33e34 <flatcc_json_parser_match_constant@@Base+0x130>
   33e98:	bne	33eac <flatcc_json_parser_match_constant@@Base+0x1a8>
   33e9c:	ldrb	r2, [r6, #2]!
   33ea0:	cmp	r2, #32
   33ea4:	mov	r2, r6
   33ea8:	bhi	33eb8 <flatcc_json_parser_match_constant@@Base+0x1b4>
   33eac:	mov	r2, #0
   33eb0:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   33eb4:	mov	r2, r0
   33eb8:	mov	r0, #0
   33ebc:	b	33e24 <flatcc_json_parser_match_constant@@Base+0x120>
   33ec0:	mov	r0, #1
   33ec4:	sub	r2, r1, #1
   33ec8:	b	33e24 <flatcc_json_parser_match_constant@@Base+0x120>

00033ecc <flatcc_json_parser_unmatched_symbol@@Base>:
   33ecc:	push	{r4, r5, r6, sl, fp, lr}
   33ed0:	add	fp, sp, #16
   33ed4:	mov	r6, r0
   33ed8:	ldrb	r0, [r0, #8]
   33edc:	mov	r4, r2
   33ee0:	tst	r0, #1
   33ee4:	bne	33f0c <flatcc_json_parser_unmatched_symbol@@Base+0x40>
   33ee8:	ldr	r0, [r6, #24]
   33eec:	cmp	r0, #0
   33ef0:	bne	340e0 <flatcc_json_parser_unmatched_symbol@@Base+0x214>
   33ef4:	str	r1, [r6, #36]	; 0x24
   33ef8:	add	r1, r1, #1
   33efc:	mov	r0, #13
   33f00:	ldr	r2, [r6, #4]
   33f04:	sub	r1, r1, r2
   33f08:	b	340d8 <flatcc_json_parser_unmatched_symbol@@Base+0x20c>
   33f0c:	ldr	r0, [r6, #12]
   33f10:	cmp	r0, #0
   33f14:	beq	33f94 <flatcc_json_parser_unmatched_symbol@@Base+0xc8>
   33f18:	cmp	r1, r4
   33f1c:	beq	34034 <flatcc_json_parser_unmatched_symbol@@Base+0x168>
   33f20:	ldrb	r3, [r1]
   33f24:	cmp	r3, #33	; 0x21
   33f28:	bcc	34034 <flatcc_json_parser_unmatched_symbol@@Base+0x168>
   33f2c:	add	r0, r1, #1
   33f30:	uxtb	r2, r3
   33f34:	cmp	r2, #46	; 0x2e
   33f38:	cmpne	r2, #95	; 0x5f
   33f3c:	bne	33f5c <flatcc_json_parser_unmatched_symbol@@Base+0x90>
   33f40:	cmp	r4, r0
   33f44:	beq	33ff4 <flatcc_json_parser_unmatched_symbol@@Base+0x128>
   33f48:	ldrb	r3, [r0], #1
   33f4c:	add	r1, r1, #1
   33f50:	cmp	r3, #33	; 0x21
   33f54:	bcs	33f30 <flatcc_json_parser_unmatched_symbol@@Base+0x64>
   33f58:	b	33ff8 <flatcc_json_parser_unmatched_symbol@@Base+0x12c>
   33f5c:	sxtb	r5, r3
   33f60:	cmp	r5, #0
   33f64:	blt	33f40 <flatcc_json_parser_unmatched_symbol@@Base+0x74>
   33f68:	sub	r5, r3, #48	; 0x30
   33f6c:	uxtb	r5, r5
   33f70:	cmp	r5, #9
   33f74:	bls	33f40 <flatcc_json_parser_unmatched_symbol@@Base+0x74>
   33f78:	orr	r3, r3, #32
   33f7c:	sub	r3, r3, #97	; 0x61
   33f80:	uxtb	r3, r3
   33f84:	cmp	r3, #26
   33f88:	bcc	33f40 <flatcc_json_parser_unmatched_symbol@@Base+0x74>
   33f8c:	sub	r1, r0, #1
   33f90:	b	33ff8 <flatcc_json_parser_unmatched_symbol@@Base+0x12c>
   33f94:	cmp	r1, r4
   33f98:	beq	33fd4 <flatcc_json_parser_unmatched_symbol@@Base+0x108>
   33f9c:	ldrb	r0, [r1]
   33fa0:	cmp	r0, #92	; 0x5c
   33fa4:	beq	33fb4 <flatcc_json_parser_unmatched_symbol@@Base+0xe8>
   33fa8:	cmp	r0, #34	; 0x22
   33fac:	bne	33fc4 <flatcc_json_parser_unmatched_symbol@@Base+0xf8>
   33fb0:	b	33fec <flatcc_json_parser_unmatched_symbol@@Base+0x120>
   33fb4:	sub	r0, r4, r1
   33fb8:	cmp	r0, #2
   33fbc:	blt	33fd4 <flatcc_json_parser_unmatched_symbol@@Base+0x108>
   33fc0:	add	r1, r1, #1
   33fc4:	add	r1, r1, #1
   33fc8:	cmp	r1, r4
   33fcc:	bne	33f9c <flatcc_json_parser_unmatched_symbol@@Base+0xd0>
   33fd0:	mov	r1, r4
   33fd4:	ldr	r0, [r6, #24]
   33fd8:	mov	r2, r4
   33fdc:	cmp	r0, #0
   33fe0:	bne	34038 <flatcc_json_parser_unmatched_symbol@@Base+0x16c>
   33fe4:	mov	r0, #20
   33fe8:	b	34014 <flatcc_json_parser_unmatched_symbol@@Base+0x148>
   33fec:	add	r2, r1, #1
   33ff0:	b	34038 <flatcc_json_parser_unmatched_symbol@@Base+0x16c>
   33ff4:	mov	r1, r4
   33ff8:	cmp	r2, #46	; 0x2e
   33ffc:	bne	34034 <flatcc_json_parser_unmatched_symbol@@Base+0x168>
   34000:	ldr	r0, [r6, #24]
   34004:	mov	r2, r4
   34008:	cmp	r0, #0
   3400c:	bne	34038 <flatcc_json_parser_unmatched_symbol@@Base+0x16c>
   34010:	mov	r0, #5
   34014:	str	r1, [r6, #36]	; 0x24
   34018:	add	r1, r1, #1
   3401c:	ldr	r2, [r6, #4]
   34020:	sub	r1, r1, r2
   34024:	mov	r2, r4
   34028:	str	r1, [r6, #20]
   3402c:	str	r0, [r6, #24]
   34030:	b	34038 <flatcc_json_parser_unmatched_symbol@@Base+0x16c>
   34034:	mov	r2, r1
   34038:	sub	r0, r4, r2
   3403c:	cmp	r0, #2
   34040:	blt	3406c <flatcc_json_parser_unmatched_symbol@@Base+0x1a0>
   34044:	ldrb	r0, [r2]
   34048:	cmp	r0, #32
   3404c:	bls	34058 <flatcc_json_parser_unmatched_symbol@@Base+0x18c>
   34050:	mov	r3, r2
   34054:	b	34080 <flatcc_json_parser_unmatched_symbol@@Base+0x1b4>
   34058:	bne	3406c <flatcc_json_parser_unmatched_symbol@@Base+0x1a0>
   3405c:	mov	r3, r2
   34060:	ldrb	r0, [r3, #1]!
   34064:	cmp	r0, #32
   34068:	bhi	34080 <flatcc_json_parser_unmatched_symbol@@Base+0x1b4>
   3406c:	mov	r1, r2
   34070:	mov	r0, r6
   34074:	mov	r2, r4
   34078:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   3407c:	mov	r3, r0
   34080:	cmp	r3, r4
   34084:	beq	340b8 <flatcc_json_parser_unmatched_symbol@@Base+0x1ec>
   34088:	ldrb	r0, [r3]
   3408c:	cmp	r0, #58	; 0x3a
   34090:	bne	340b8 <flatcc_json_parser_unmatched_symbol@@Base+0x1ec>
   34094:	add	r1, r3, #1
   34098:	sub	r0, r4, r1
   3409c:	cmp	r0, #2
   340a0:	blt	340f8 <flatcc_json_parser_unmatched_symbol@@Base+0x22c>
   340a4:	ldrb	r0, [r1]
   340a8:	cmp	r0, #32
   340ac:	bls	340e8 <flatcc_json_parser_unmatched_symbol@@Base+0x21c>
   340b0:	mov	r3, r1
   340b4:	b	34108 <flatcc_json_parser_unmatched_symbol@@Base+0x23c>
   340b8:	ldr	r0, [r6, #24]
   340bc:	cmp	r0, #0
   340c0:	bne	340e0 <flatcc_json_parser_unmatched_symbol@@Base+0x214>
   340c4:	str	r3, [r6, #36]	; 0x24
   340c8:	add	r2, r3, #1
   340cc:	mov	r0, #4
   340d0:	ldr	r1, [r6, #4]
   340d4:	sub	r1, r2, r1
   340d8:	str	r1, [r6, #20]
   340dc:	str	r0, [r6, #24]
   340e0:	mov	r0, r4
   340e4:	pop	{r4, r5, r6, sl, fp, pc}
   340e8:	bne	340f8 <flatcc_json_parser_unmatched_symbol@@Base+0x22c>
   340ec:	ldrb	r0, [r3, #2]!
   340f0:	cmp	r0, #32
   340f4:	bhi	34108 <flatcc_json_parser_unmatched_symbol@@Base+0x23c>
   340f8:	mov	r0, r6
   340fc:	mov	r2, r4
   34100:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   34104:	mov	r3, r0
   34108:	mov	r0, r6
   3410c:	mov	r1, r3
   34110:	mov	r2, r4
   34114:	pop	{r4, r5, r6, sl, fp, lr}
   34118:	b	3411c <flatcc_json_parser_generic_json@@Base>

0003411c <flatcc_json_parser_generic_json@@Base>:
   3411c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   34120:	add	fp, sp, #28
   34124:	sub	sp, sp, #532	; 0x214
   34128:	mov	r7, r1
   3412c:	cmp	r1, r2
   34130:	beq	34b34 <flatcc_json_parser_generic_json@@Base+0xa18>
   34134:	mov	r5, r0
   34138:	add	r0, r2, #1
   3413c:	add	r1, sp, #16
   34140:	mov	r4, r2
   34144:	mov	sl, #0
   34148:	str	r0, [sp]
   3414c:	add	r0, r5, #36	; 0x24
   34150:	sub	r9, r1, #1
   34154:	add	r6, r5, #4
   34158:	add	r8, r5, #24
   3415c:	str	r0, [sp, #8]
   34160:	add	r0, r5, #20
   34164:	str	r0, [sp, #4]
   34168:	mov	r0, r1
   3416c:	cmp	sl, #0
   34170:	beq	343e4 <flatcc_json_parser_generic_json@@Base+0x2c8>
   34174:	ldrb	r0, [r0, #-1]
   34178:	cmp	r0, #125	; 0x7d
   3417c:	bne	343e4 <flatcc_json_parser_generic_json@@Base+0x2c8>
   34180:	ldrb	r0, [r7]
   34184:	cmp	r0, #46	; 0x2e
   34188:	beq	341e8 <flatcc_json_parser_generic_json@@Base+0xcc>
   3418c:	cmp	r0, #34	; 0x22
   34190:	bne	34230 <flatcc_json_parser_generic_json@@Base+0x114>
   34194:	mov	r0, #0
   34198:	mov	r2, r4
   3419c:	str	r0, [r5, #12]
   341a0:	add	r0, r7, #1
   341a4:	cmp	r0, r4
   341a8:	beq	34310 <flatcc_json_parser_generic_json@@Base+0x1f4>
   341ac:	ldrb	r1, [r0]
   341b0:	cmp	r1, #92	; 0x5c
   341b4:	beq	341c4 <flatcc_json_parser_generic_json@@Base+0xa8>
   341b8:	cmp	r1, #34	; 0x22
   341bc:	bne	341d4 <flatcc_json_parser_generic_json@@Base+0xb8>
   341c0:	b	342b8 <flatcc_json_parser_generic_json@@Base+0x19c>
   341c4:	sub	r1, r4, r0
   341c8:	cmp	r1, #2
   341cc:	blt	3430c <flatcc_json_parser_generic_json@@Base+0x1f0>
   341d0:	add	r0, r0, #1
   341d4:	add	r0, r0, #1
   341d8:	cmp	r0, r4
   341dc:	bne	341ac <flatcc_json_parser_generic_json@@Base+0x90>
   341e0:	mov	r2, r4
   341e4:	b	34310 <flatcc_json_parser_generic_json@@Base+0x1f4>
   341e8:	ldr	r0, [r8]
   341ec:	cmp	r0, #0
   341f0:	bne	34218 <flatcc_json_parser_generic_json@@Base+0xfc>
   341f4:	mov	r0, #5
   341f8:	add	r1, r7, #1
   341fc:	str	r0, [r8]
   34200:	ldr	r0, [r6]
   34204:	sub	r0, r1, r0
   34208:	ldr	r1, [sp, #4]
   3420c:	str	r0, [r1]
   34210:	ldr	r0, [sp, #8]
   34214:	str	r7, [r0]
   34218:	ldr	r0, [r5, #12]
   3421c:	mov	r2, r4
   34220:	mov	r1, r4
   34224:	cmp	r0, #0
   34228:	bne	34348 <flatcc_json_parser_generic_json@@Base+0x22c>
   3422c:	b	34310 <flatcc_json_parser_generic_json@@Base+0x1f4>
   34230:	mov	r0, #1
   34234:	cmp	r7, r4
   34238:	mov	r1, r4
   3423c:	str	r0, [r5, #12]
   34240:	beq	34348 <flatcc_json_parser_generic_json@@Base+0x22c>
   34244:	ldrb	r2, [r7]
   34248:	cmp	r2, #33	; 0x21
   3424c:	bcc	34304 <flatcc_json_parser_generic_json@@Base+0x1e8>
   34250:	add	r0, r7, #1
   34254:	uxtb	r1, r2
   34258:	cmp	r1, #46	; 0x2e
   3425c:	cmpne	r1, #95	; 0x5f
   34260:	bne	34280 <flatcc_json_parser_generic_json@@Base+0x164>
   34264:	cmp	r4, r0
   34268:	beq	342c0 <flatcc_json_parser_generic_json@@Base+0x1a4>
   3426c:	ldrb	r2, [r0], #1
   34270:	add	r7, r7, #1
   34274:	cmp	r2, #33	; 0x21
   34278:	bcs	34254 <flatcc_json_parser_generic_json@@Base+0x138>
   3427c:	b	342c4 <flatcc_json_parser_generic_json@@Base+0x1a8>
   34280:	sxtb	r3, r2
   34284:	cmp	r3, #0
   34288:	blt	34264 <flatcc_json_parser_generic_json@@Base+0x148>
   3428c:	sub	r3, r2, #48	; 0x30
   34290:	uxtb	r3, r3
   34294:	cmp	r3, #9
   34298:	bls	34264 <flatcc_json_parser_generic_json@@Base+0x148>
   3429c:	orr	r2, r2, #32
   342a0:	sub	r2, r2, #97	; 0x61
   342a4:	uxtb	r2, r2
   342a8:	cmp	r2, #26
   342ac:	bcc	34264 <flatcc_json_parser_generic_json@@Base+0x148>
   342b0:	sub	r7, r0, #1
   342b4:	b	342c4 <flatcc_json_parser_generic_json@@Base+0x1a8>
   342b8:	add	r1, r0, #1
   342bc:	b	34348 <flatcc_json_parser_generic_json@@Base+0x22c>
   342c0:	mov	r7, r4
   342c4:	cmp	r1, #46	; 0x2e
   342c8:	bne	34304 <flatcc_json_parser_generic_json@@Base+0x1e8>
   342cc:	ldr	r0, [r8]
   342d0:	mov	r1, r4
   342d4:	cmp	r0, #0
   342d8:	bne	34348 <flatcc_json_parser_generic_json@@Base+0x22c>
   342dc:	mov	r0, #5
   342e0:	add	r1, r7, #1
   342e4:	str	r0, [r8]
   342e8:	ldr	r0, [r6]
   342ec:	sub	r0, r1, r0
   342f0:	ldr	r1, [sp, #4]
   342f4:	str	r0, [r1]
   342f8:	ldr	r0, [sp, #8]
   342fc:	str	r7, [r0]
   34300:	b	34344 <flatcc_json_parser_generic_json@@Base+0x228>
   34304:	mov	r1, r7
   34308:	b	34348 <flatcc_json_parser_generic_json@@Base+0x22c>
   3430c:	mov	r2, r0
   34310:	ldr	r0, [r8]
   34314:	mov	r1, r4
   34318:	cmp	r0, #0
   3431c:	bne	34348 <flatcc_json_parser_generic_json@@Base+0x22c>
   34320:	mov	r0, #20
   34324:	add	r1, r2, #1
   34328:	str	r0, [r8]
   3432c:	ldr	r0, [r6]
   34330:	sub	r0, r1, r0
   34334:	ldr	r1, [sp, #4]
   34338:	str	r0, [r1]
   3433c:	ldr	r0, [sp, #8]
   34340:	str	r2, [r0]
   34344:	mov	r1, r4
   34348:	sub	r0, r4, r1
   3434c:	cmp	r0, #2
   34350:	blt	3437c <flatcc_json_parser_generic_json@@Base+0x260>
   34354:	ldrb	r0, [r1]
   34358:	cmp	r0, #32
   3435c:	bls	34368 <flatcc_json_parser_generic_json@@Base+0x24c>
   34360:	mov	r7, r1
   34364:	b	3438c <flatcc_json_parser_generic_json@@Base+0x270>
   34368:	bne	3437c <flatcc_json_parser_generic_json@@Base+0x260>
   3436c:	mov	r7, r1
   34370:	ldrb	r0, [r7, #1]!
   34374:	cmp	r0, #32
   34378:	bhi	3438c <flatcc_json_parser_generic_json@@Base+0x270>
   3437c:	mov	r0, r5
   34380:	mov	r2, r4
   34384:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   34388:	mov	r7, r0
   3438c:	cmp	r7, r4
   34390:	beq	34ba4 <flatcc_json_parser_generic_json@@Base+0xa88>
   34394:	ldrb	r0, [r7]
   34398:	cmp	r0, #58	; 0x3a
   3439c:	bne	34bbc <flatcc_json_parser_generic_json@@Base+0xaa0>
   343a0:	add	r1, r7, #1
   343a4:	sub	r0, r4, r1
   343a8:	cmp	r0, #2
   343ac:	blt	343d4 <flatcc_json_parser_generic_json@@Base+0x2b8>
   343b0:	ldrb	r0, [r1]
   343b4:	cmp	r0, #32
   343b8:	bls	343c4 <flatcc_json_parser_generic_json@@Base+0x2a8>
   343bc:	mov	r7, r1
   343c0:	b	343e8 <flatcc_json_parser_generic_json@@Base+0x2cc>
   343c4:	bne	343d4 <flatcc_json_parser_generic_json@@Base+0x2b8>
   343c8:	ldrb	r0, [r7, #2]!
   343cc:	cmp	r0, #32
   343d0:	bhi	343e8 <flatcc_json_parser_generic_json@@Base+0x2cc>
   343d4:	mov	r0, r5
   343d8:	mov	r2, r4
   343dc:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   343e0:	mov	r7, r0
   343e4:	ldrb	r0, [r7]
   343e8:	sub	r1, r0, #48	; 0x30
   343ec:	cmp	r1, #10
   343f0:	bcs	34464 <flatcc_json_parser_generic_json@@Base+0x348>
   343f4:	cmp	r7, r4
   343f8:	beq	34828 <flatcc_json_parser_generic_json@@Base+0x70c>
   343fc:	cmp	r0, #45	; 0x2d
   34400:	bne	34414 <flatcc_json_parser_generic_json@@Base+0x2f8>
   34404:	add	r7, r7, #1
   34408:	cmp	r7, r4
   3440c:	beq	346e0 <flatcc_json_parser_generic_json@@Base+0x5c4>
   34410:	ldrb	r0, [r7]
   34414:	cmp	r0, #48	; 0x30
   34418:	bne	34480 <flatcc_json_parser_generic_json@@Base+0x364>
   3441c:	add	r1, r7, #1
   34420:	cmp	r1, r4
   34424:	mov	r2, r4
   34428:	beq	346f8 <flatcc_json_parser_generic_json@@Base+0x5dc>
   3442c:	ldrb	r0, [r1]
   34430:	cmp	r0, #46	; 0x2e
   34434:	bne	34630 <flatcc_json_parser_generic_json@@Base+0x514>
   34438:	mov	r0, r1
   3443c:	ldrb	r2, [r0, #1]!
   34440:	sub	r2, r2, #48	; 0x30
   34444:	uxtb	r2, r2
   34448:	cmp	r2, #10
   3444c:	bcc	345fc <flatcc_json_parser_generic_json@@Base+0x4e0>
   34450:	ldr	r1, [r8]
   34454:	cmp	r1, #0
   34458:	bne	34828 <flatcc_json_parser_generic_json@@Base+0x70c>
   3445c:	mov	r1, #6
   34460:	b	34808 <flatcc_json_parser_generic_json@@Base+0x6ec>
   34464:	cmp	r0, #90	; 0x5a
   34468:	bgt	344c4 <flatcc_json_parser_generic_json@@Base+0x3a8>
   3446c:	cmp	r0, #34	; 0x22
   34470:	beq	34534 <flatcc_json_parser_generic_json@@Base+0x418>
   34474:	cmp	r0, #45	; 0x2d
   34478:	beq	343f4 <flatcc_json_parser_generic_json@@Base+0x2d8>
   3447c:	b	345dc <flatcc_json_parser_generic_json@@Base+0x4c0>
   34480:	sub	r0, r0, #49	; 0x31
   34484:	uxtb	r0, r0
   34488:	cmp	r0, #8
   3448c:	bls	3450c <flatcc_json_parser_generic_json@@Base+0x3f0>
   34490:	ldr	r0, [r8]
   34494:	cmp	r0, #0
   34498:	bne	34828 <flatcc_json_parser_generic_json@@Base+0x70c>
   3449c:	mov	r0, #6
   344a0:	add	r1, r7, #1
   344a4:	str	r0, [r8]
   344a8:	ldr	r0, [r6]
   344ac:	sub	r0, r1, r0
   344b0:	ldr	r1, [sp, #4]
   344b4:	str	r0, [r1]
   344b8:	ldr	r0, [sp, #8]
   344bc:	str	r7, [r0]
   344c0:	b	34828 <flatcc_json_parser_generic_json@@Base+0x70c>
   344c4:	cmp	r0, #91	; 0x5b
   344c8:	beq	345a4 <flatcc_json_parser_generic_json@@Base+0x488>
   344cc:	cmp	r0, #123	; 0x7b
   344d0:	bne	345dc <flatcc_json_parser_generic_json@@Base+0x4c0>
   344d4:	cmp	sl, #512	; 0x200
   344d8:	beq	34bd0 <flatcc_json_parser_generic_json@@Base+0xab4>
   344dc:	add	r0, sp, #16
   344e0:	mov	r1, #125	; 0x7d
   344e4:	strb	r1, [r0, sl]
   344e8:	add	r1, r7, #1
   344ec:	sub	r0, r4, r1
   344f0:	cmp	r0, #2
   344f4:	blt	3478c <flatcc_json_parser_generic_json@@Base+0x670>
   344f8:	ldrb	r0, [r1]
   344fc:	cmp	r0, #32
   34500:	bls	3477c <flatcc_json_parser_generic_json@@Base+0x660>
   34504:	mov	r7, r1
   34508:	b	3479c <flatcc_json_parser_generic_json@@Base+0x680>
   3450c:	add	r0, r7, #1
   34510:	cmp	r4, r0
   34514:	beq	346f4 <flatcc_json_parser_generic_json@@Base+0x5d8>
   34518:	ldrb	r1, [r0], #1
   3451c:	sub	r1, r1, #48	; 0x30
   34520:	uxtb	r1, r1
   34524:	cmp	r1, #10
   34528:	bcc	34510 <flatcc_json_parser_generic_json@@Base+0x3f4>
   3452c:	sub	r1, r0, #1
   34530:	b	34420 <flatcc_json_parser_generic_json@@Base+0x304>
   34534:	cmp	r7, r4
   34538:	beq	3472c <flatcc_json_parser_generic_json@@Base+0x610>
   3453c:	add	r1, r7, #1
   34540:	mov	r0, r4
   34544:	add	r7, sp, #12
   34548:	cmp	r1, r4
   3454c:	beq	347f8 <flatcc_json_parser_generic_json@@Base+0x6dc>
   34550:	ldrb	r0, [r1]
   34554:	cmp	r0, #34	; 0x22
   34558:	beq	34760 <flatcc_json_parser_generic_json@@Base+0x644>
   3455c:	mov	r0, r5
   34560:	mov	r2, r4
   34564:	bl	337dc <flatcc_json_parser_string_part@@Base>
   34568:	mov	r1, r0
   3456c:	cmp	r0, r4
   34570:	beq	34580 <flatcc_json_parser_generic_json@@Base+0x464>
   34574:	ldrb	r0, [r1]
   34578:	cmp	r0, #34	; 0x22
   3457c:	beq	34760 <flatcc_json_parser_generic_json@@Base+0x644>
   34580:	mov	r0, r5
   34584:	mov	r2, r4
   34588:	mov	r3, r7
   3458c:	bl	33930 <flatcc_json_parser_string_escape@@Base>
   34590:	mov	r1, r0
   34594:	cmp	r0, r4
   34598:	bne	34550 <flatcc_json_parser_generic_json@@Base+0x434>
   3459c:	mov	r0, r4
   345a0:	b	347f8 <flatcc_json_parser_generic_json@@Base+0x6dc>
   345a4:	cmp	sl, #512	; 0x200
   345a8:	beq	34bd0 <flatcc_json_parser_generic_json@@Base+0xab4>
   345ac:	add	r0, sp, #16
   345b0:	mov	r1, #93	; 0x5d
   345b4:	strb	r1, [r0, sl]
   345b8:	add	r1, r7, #1
   345bc:	sub	r0, r4, r1
   345c0:	cmp	r0, #2
   345c4:	blt	347c4 <flatcc_json_parser_generic_json@@Base+0x6a8>
   345c8:	ldrb	r0, [r1]
   345cc:	cmp	r0, #32
   345d0:	bls	347b4 <flatcc_json_parser_generic_json@@Base+0x698>
   345d4:	mov	r7, r1
   345d8:	b	347d4 <flatcc_json_parser_generic_json@@Base+0x6b8>
   345dc:	mov	r0, r5
   345e0:	mov	r1, r7
   345e4:	mov	r2, r4
   345e8:	bl	33c3c <flatcc_json_parser_skip_constant@@Base>
   345ec:	mov	r1, r0
   345f0:	cmp	r7, r0
   345f4:	bne	3482c <flatcc_json_parser_generic_json@@Base+0x710>
   345f8:	b	34be4 <flatcc_json_parser_generic_json@@Base+0xac8>
   345fc:	add	r1, r1, #2
   34600:	mov	r2, r4
   34604:	cmp	r1, r4
   34608:	beq	346f8 <flatcc_json_parser_generic_json@@Base+0x5dc>
   3460c:	ldrb	r0, [r1]
   34610:	sub	r2, r0, #48	; 0x30
   34614:	uxtb	r2, r2
   34618:	cmp	r2, #9
   3461c:	bhi	34630 <flatcc_json_parser_generic_json@@Base+0x514>
   34620:	add	r1, r1, #1
   34624:	cmp	r4, r1
   34628:	bne	3460c <flatcc_json_parser_generic_json@@Base+0x4f0>
   3462c:	b	346f4 <flatcc_json_parser_generic_json@@Base+0x5d8>
   34630:	cmp	r1, r4
   34634:	mov	r2, r4
   34638:	beq	346f8 <flatcc_json_parser_generic_json@@Base+0x5dc>
   3463c:	orr	r2, r0, #32
   34640:	cmp	r2, #101	; 0x65
   34644:	bne	346a4 <flatcc_json_parser_generic_json@@Base+0x588>
   34648:	add	r0, r1, #1
   3464c:	cmp	r0, r4
   34650:	beq	346e0 <flatcc_json_parser_generic_json@@Base+0x5c4>
   34654:	ldrb	r2, [r0]
   34658:	cmp	r2, #45	; 0x2d
   3465c:	cmpne	r2, #43	; 0x2b
   34660:	addeq	r0, r1, #2
   34664:	cmp	r0, r4
   34668:	beq	34450 <flatcc_json_parser_generic_json@@Base+0x334>
   3466c:	ldrb	r1, [r0]
   34670:	sub	r1, r1, #48	; 0x30
   34674:	uxtb	r1, r1
   34678:	cmp	r1, #9
   3467c:	bhi	34450 <flatcc_json_parser_generic_json@@Base+0x334>
   34680:	add	r1, r0, #1
   34684:	cmp	r4, r1
   34688:	beq	346f4 <flatcc_json_parser_generic_json@@Base+0x5d8>
   3468c:	ldrb	r0, [r1], #1
   34690:	sub	r2, r0, #48	; 0x30
   34694:	uxtb	r2, r2
   34698:	cmp	r2, #10
   3469c:	bcc	34684 <flatcc_json_parser_generic_json@@Base+0x568>
   346a0:	sub	r1, r1, #1
   346a4:	cmp	r1, r4
   346a8:	mov	r2, r4
   346ac:	beq	346f8 <flatcc_json_parser_generic_json@@Base+0x5dc>
   346b0:	cmp	r0, #43	; 0x2b
   346b4:	bgt	34afc <flatcc_json_parser_generic_json@@Base+0x9e0>
   346b8:	sub	r0, r0, #9
   346bc:	cmp	r0, #23
   346c0:	bhi	34b2c <flatcc_json_parser_generic_json@@Base+0xa10>
   346c4:	movw	r3, #23
   346c8:	mov	r2, #1
   346cc:	movt	r3, #128	; 0x80
   346d0:	tst	r3, r2, lsl r0
   346d4:	mov	r2, r1
   346d8:	bne	3482c <flatcc_json_parser_generic_json@@Base+0x710>
   346dc:	b	346f8 <flatcc_json_parser_generic_json@@Base+0x5dc>
   346e0:	ldr	r0, [r8]
   346e4:	cmp	r0, #0
   346e8:	bne	34828 <flatcc_json_parser_generic_json@@Base+0x70c>
   346ec:	mov	r0, #6
   346f0:	b	3473c <flatcc_json_parser_generic_json@@Base+0x620>
   346f4:	mov	r2, r4
   346f8:	ldr	r0, [r8]
   346fc:	cmp	r0, #0
   34700:	bne	34828 <flatcc_json_parser_generic_json@@Base+0x70c>
   34704:	mov	r0, #6
   34708:	add	r1, r2, #1
   3470c:	str	r0, [r8]
   34710:	ldr	r0, [r6]
   34714:	sub	r0, r1, r0
   34718:	ldr	r1, [sp, #4]
   3471c:	str	r0, [r1]
   34720:	ldr	r0, [sp, #8]
   34724:	str	r2, [r0]
   34728:	b	34828 <flatcc_json_parser_generic_json@@Base+0x70c>
   3472c:	ldr	r0, [r8]
   34730:	cmp	r0, #0
   34734:	bne	34828 <flatcc_json_parser_generic_json@@Base+0x70c>
   34738:	mov	r0, #16
   3473c:	str	r0, [r8]
   34740:	ldr	r1, [sp]
   34744:	ldr	r0, [r6]
   34748:	sub	r0, r1, r0
   3474c:	ldr	r1, [sp, #4]
   34750:	str	r0, [r1]
   34754:	ldr	r0, [sp, #8]
   34758:	str	r4, [r0]
   3475c:	b	34828 <flatcc_json_parser_generic_json@@Base+0x70c>
   34760:	cmp	r1, r4
   34764:	beq	347f4 <flatcc_json_parser_generic_json@@Base+0x6d8>
   34768:	ldrb	r0, [r1]
   3476c:	cmp	r0, #34	; 0x22
   34770:	bne	347f4 <flatcc_json_parser_generic_json@@Base+0x6d8>
   34774:	add	r1, r1, #1
   34778:	b	3482c <flatcc_json_parser_generic_json@@Base+0x710>
   3477c:	bne	3478c <flatcc_json_parser_generic_json@@Base+0x670>
   34780:	ldrb	r0, [r7, #2]!
   34784:	cmp	r0, #32
   34788:	bhi	3479c <flatcc_json_parser_generic_json@@Base+0x680>
   3478c:	mov	r0, r5
   34790:	mov	r2, r4
   34794:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   34798:	mov	r7, r0
   3479c:	cmp	r7, r4
   347a0:	beq	34b94 <flatcc_json_parser_generic_json@@Base+0xa78>
   347a4:	ldrb	r0, [r7]
   347a8:	add	sl, sl, #1
   347ac:	cmp	r0, #125	; 0x7d
   347b0:	b	347e8 <flatcc_json_parser_generic_json@@Base+0x6cc>
   347b4:	bne	347c4 <flatcc_json_parser_generic_json@@Base+0x6a8>
   347b8:	ldrb	r0, [r7, #2]!
   347bc:	cmp	r0, #32
   347c0:	bhi	347d4 <flatcc_json_parser_generic_json@@Base+0x6b8>
   347c4:	mov	r0, r5
   347c8:	mov	r2, r4
   347cc:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   347d0:	mov	r7, r0
   347d4:	cmp	r7, r4
   347d8:	beq	34b94 <flatcc_json_parser_generic_json@@Base+0xa78>
   347dc:	ldrb	r0, [r7]
   347e0:	add	sl, sl, #1
   347e4:	cmp	r0, #93	; 0x5d
   347e8:	mov	r1, r7
   347ec:	beq	3482c <flatcc_json_parser_generic_json@@Base+0x710>
   347f0:	b	34ae8 <flatcc_json_parser_generic_json@@Base+0x9cc>
   347f4:	mov	r0, r1
   347f8:	ldr	r1, [r8]
   347fc:	cmp	r1, #0
   34800:	bne	34828 <flatcc_json_parser_generic_json@@Base+0x70c>
   34804:	mov	r1, #20
   34808:	str	r1, [r8]
   3480c:	add	r2, r0, #1
   34810:	ldr	r1, [r6]
   34814:	sub	r1, r2, r1
   34818:	ldr	r2, [sp, #4]
   3481c:	str	r1, [r2]
   34820:	ldr	r1, [sp, #8]
   34824:	str	r0, [r1]
   34828:	mov	r1, r4
   3482c:	subs	r2, r1, r4
   34830:	mov	r3, sl
   34834:	movwne	r2, #1
   34838:	cmp	sl, #0
   3483c:	movwne	r3, #1
   34840:	cmpne	r1, r4
   34844:	beq	34b3c <flatcc_json_parser_generic_json@@Base+0xa20>
   34848:	ldrb	r2, [r9, sl]
   3484c:	sub	r0, r4, r1
   34850:	cmp	r2, #93	; 0x5d
   34854:	bne	34874 <flatcc_json_parser_generic_json@@Base+0x758>
   34858:	cmp	r0, #2
   3485c:	blt	348a4 <flatcc_json_parser_generic_json@@Base+0x788>
   34860:	ldrb	r0, [r1]
   34864:	cmp	r0, #32
   34868:	bls	34890 <flatcc_json_parser_generic_json@@Base+0x774>
   3486c:	mov	r7, r1
   34870:	b	348b4 <flatcc_json_parser_generic_json@@Base+0x798>
   34874:	cmp	r0, #2
   34878:	blt	34900 <flatcc_json_parser_generic_json@@Base+0x7e4>
   3487c:	ldrb	r0, [r1]
   34880:	cmp	r0, #32
   34884:	bls	348ec <flatcc_json_parser_generic_json@@Base+0x7d0>
   34888:	mov	r7, r1
   3488c:	b	34910 <flatcc_json_parser_generic_json@@Base+0x7f4>
   34890:	bne	348a4 <flatcc_json_parser_generic_json@@Base+0x788>
   34894:	mov	r7, r1
   34898:	ldrb	r0, [r7, #1]!
   3489c:	cmp	r0, #32
   348a0:	bhi	348b4 <flatcc_json_parser_generic_json@@Base+0x798>
   348a4:	mov	r0, r5
   348a8:	mov	r2, r4
   348ac:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   348b0:	mov	r7, r0
   348b4:	cmp	r7, r4
   348b8:	mov	r1, r4
   348bc:	beq	34a84 <flatcc_json_parser_generic_json@@Base+0x968>
   348c0:	ldrb	r0, [r7]
   348c4:	cmp	r0, #44	; 0x2c
   348c8:	beq	3496c <flatcc_json_parser_generic_json@@Base+0x850>
   348cc:	cmp	r0, #93	; 0x5d
   348d0:	beq	34a38 <flatcc_json_parser_generic_json@@Base+0x91c>
   348d4:	ldr	r0, [r8]
   348d8:	mov	r1, r4
   348dc:	cmp	r0, #0
   348e0:	bne	34a84 <flatcc_json_parser_generic_json@@Base+0x968>
   348e4:	mov	r0, #9
   348e8:	b	34944 <flatcc_json_parser_generic_json@@Base+0x828>
   348ec:	bne	34900 <flatcc_json_parser_generic_json@@Base+0x7e4>
   348f0:	mov	r7, r1
   348f4:	ldrb	r0, [r7, #1]!
   348f8:	cmp	r0, #32
   348fc:	bhi	34910 <flatcc_json_parser_generic_json@@Base+0x7f4>
   34900:	mov	r0, r5
   34904:	mov	r2, r4
   34908:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   3490c:	mov	r7, r0
   34910:	cmp	r7, r4
   34914:	mov	r1, r4
   34918:	beq	34a84 <flatcc_json_parser_generic_json@@Base+0x968>
   3491c:	ldrb	r0, [r7]
   34920:	cmp	r0, #44	; 0x2c
   34924:	beq	34990 <flatcc_json_parser_generic_json@@Base+0x874>
   34928:	cmp	r0, #125	; 0x7d
   3492c:	beq	34a38 <flatcc_json_parser_generic_json@@Base+0x91c>
   34930:	ldr	r0, [r8]
   34934:	mov	r1, r4
   34938:	cmp	r0, #0
   3493c:	bne	34a84 <flatcc_json_parser_generic_json@@Base+0x968>
   34940:	mov	r0, #10
   34944:	str	r0, [r8]
   34948:	add	r1, r7, #1
   3494c:	ldr	r0, [r6]
   34950:	sub	r0, r1, r0
   34954:	ldr	r1, [sp, #4]
   34958:	str	r0, [r1]
   3495c:	ldr	r0, [sp, #8]
   34960:	mov	r1, r4
   34964:	str	r7, [r0]
   34968:	b	34a84 <flatcc_json_parser_generic_json@@Base+0x968>
   3496c:	add	r1, r7, #1
   34970:	sub	r0, r4, r1
   34974:	cmp	r0, #2
   34978:	blt	349c4 <flatcc_json_parser_generic_json@@Base+0x8a8>
   3497c:	ldrb	r0, [r1]
   34980:	cmp	r0, #32
   34984:	bls	349b4 <flatcc_json_parser_generic_json@@Base+0x898>
   34988:	mov	r7, r1
   3498c:	b	349d4 <flatcc_json_parser_generic_json@@Base+0x8b8>
   34990:	add	r1, r7, #1
   34994:	sub	r0, r4, r1
   34998:	cmp	r0, #2
   3499c:	blt	34a14 <flatcc_json_parser_generic_json@@Base+0x8f8>
   349a0:	ldrb	r0, [r1]
   349a4:	cmp	r0, #32
   349a8:	bls	34a04 <flatcc_json_parser_generic_json@@Base+0x8e8>
   349ac:	mov	r7, r1
   349b0:	b	34a24 <flatcc_json_parser_generic_json@@Base+0x908>
   349b4:	bne	349c4 <flatcc_json_parser_generic_json@@Base+0x8a8>
   349b8:	ldrb	r0, [r7, #2]!
   349bc:	cmp	r0, #32
   349c0:	bhi	349d4 <flatcc_json_parser_generic_json@@Base+0x8b8>
   349c4:	mov	r0, r5
   349c8:	mov	r2, r4
   349cc:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   349d0:	mov	r7, r0
   349d4:	cmp	r7, r4
   349d8:	beq	349ec <flatcc_json_parser_generic_json@@Base+0x8d0>
   349dc:	ldrb	r0, [r7]
   349e0:	cmp	r0, #93	; 0x5d
   349e4:	beq	34a38 <flatcc_json_parser_generic_json@@Base+0x91c>
   349e8:	b	34ae8 <flatcc_json_parser_generic_json@@Base+0x9cc>
   349ec:	ldr	r0, [r8]
   349f0:	mov	r1, r4
   349f4:	cmp	r0, #0
   349f8:	bne	34a84 <flatcc_json_parser_generic_json@@Base+0x968>
   349fc:	mov	r0, #9
   34a00:	b	34ac0 <flatcc_json_parser_generic_json@@Base+0x9a4>
   34a04:	bne	34a14 <flatcc_json_parser_generic_json@@Base+0x8f8>
   34a08:	ldrb	r0, [r7, #2]!
   34a0c:	cmp	r0, #32
   34a10:	bhi	34a24 <flatcc_json_parser_generic_json@@Base+0x908>
   34a14:	mov	r0, r5
   34a18:	mov	r2, r4
   34a1c:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   34a20:	mov	r7, r0
   34a24:	cmp	r7, r4
   34a28:	beq	34aac <flatcc_json_parser_generic_json@@Base+0x990>
   34a2c:	ldrb	r0, [r7]
   34a30:	cmp	r0, #125	; 0x7d
   34a34:	bne	34ae8 <flatcc_json_parser_generic_json@@Base+0x9cc>
   34a38:	add	r2, r7, #1
   34a3c:	sub	r0, r4, r2
   34a40:	cmp	r0, #2
   34a44:	blt	34a70 <flatcc_json_parser_generic_json@@Base+0x954>
   34a48:	ldrb	r0, [r2]
   34a4c:	cmp	r0, #32
   34a50:	bls	34a5c <flatcc_json_parser_generic_json@@Base+0x940>
   34a54:	mov	r1, r2
   34a58:	b	34a84 <flatcc_json_parser_generic_json@@Base+0x968>
   34a5c:	bne	34a70 <flatcc_json_parser_generic_json@@Base+0x954>
   34a60:	ldrb	r0, [r7, #2]!
   34a64:	cmp	r0, #32
   34a68:	mov	r1, r7
   34a6c:	bhi	34a84 <flatcc_json_parser_generic_json@@Base+0x968>
   34a70:	mov	r1, r2
   34a74:	mov	r0, r5
   34a78:	mov	r2, r4
   34a7c:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   34a80:	mov	r1, r0
   34a84:	subs	r2, r1, r4
   34a88:	sub	r0, sl, #1
   34a8c:	movwne	r2, #1
   34a90:	subs	r3, sl, #1
   34a94:	movwne	r3, #1
   34a98:	beq	34b40 <flatcc_json_parser_generic_json@@Base+0xa24>
   34a9c:	cmp	r1, r4
   34aa0:	mov	sl, r0
   34aa4:	bne	34848 <flatcc_json_parser_generic_json@@Base+0x72c>
   34aa8:	b	34b40 <flatcc_json_parser_generic_json@@Base+0xa24>
   34aac:	ldr	r0, [r8]
   34ab0:	mov	r1, r4
   34ab4:	cmp	r0, #0
   34ab8:	bne	34a84 <flatcc_json_parser_generic_json@@Base+0x968>
   34abc:	mov	r0, #10
   34ac0:	str	r0, [r8]
   34ac4:	ldr	r1, [sp]
   34ac8:	ldr	r0, [r6]
   34acc:	sub	r0, r1, r0
   34ad0:	ldr	r1, [sp, #4]
   34ad4:	str	r0, [r1]
   34ad8:	ldr	r0, [sp, #8]
   34adc:	mov	r1, r4
   34ae0:	str	r4, [r0]
   34ae4:	b	34a84 <flatcc_json_parser_generic_json@@Base+0x968>
   34ae8:	add	r0, sp, #16
   34aec:	cmp	r7, r4
   34af0:	add	r0, r0, sl
   34af4:	bne	3416c <flatcc_json_parser_generic_json@@Base+0x50>
   34af8:	b	34b94 <flatcc_json_parser_generic_json@@Base+0xa78>
   34afc:	cmp	r0, #92	; 0x5c
   34b00:	bgt	34b14 <flatcc_json_parser_generic_json@@Base+0x9f8>
   34b04:	cmp	r0, #44	; 0x2c
   34b08:	beq	3482c <flatcc_json_parser_generic_json@@Base+0x710>
   34b0c:	cmp	r0, #58	; 0x3a
   34b10:	b	34b20 <flatcc_json_parser_generic_json@@Base+0xa04>
   34b14:	cmp	r0, #93	; 0x5d
   34b18:	beq	3482c <flatcc_json_parser_generic_json@@Base+0x710>
   34b1c:	cmp	r0, #125	; 0x7d
   34b20:	mov	r2, r1
   34b24:	beq	3482c <flatcc_json_parser_generic_json@@Base+0x710>
   34b28:	b	346f8 <flatcc_json_parser_generic_json@@Base+0x5dc>
   34b2c:	mov	r2, r1
   34b30:	b	346f8 <flatcc_json_parser_generic_json@@Base+0x5dc>
   34b34:	mov	r1, r7
   34b38:	b	34b98 <flatcc_json_parser_generic_json@@Base+0xa7c>
   34b3c:	mov	r0, sl
   34b40:	cmp	r2, #0
   34b44:	bne	34b98 <flatcc_json_parser_generic_json@@Base+0xa7c>
   34b48:	cmp	r3, #0
   34b4c:	beq	34b98 <flatcc_json_parser_generic_json@@Base+0xa7c>
   34b50:	ldr	r1, [r8]
   34b54:	cmp	r1, #0
   34b58:	bne	34b94 <flatcc_json_parser_generic_json@@Base+0xa78>
   34b5c:	add	r1, sp, #16
   34b60:	add	r0, r1, r0
   34b64:	mov	r1, #10
   34b68:	ldrb	r0, [r0, #-1]
   34b6c:	cmp	r0, #93	; 0x5d
   34b70:	movweq	r1, #9
   34b74:	str	r1, [r8]
   34b78:	ldr	r0, [r6]
   34b7c:	ldr	r1, [sp]
   34b80:	sub	r0, r1, r0
   34b84:	ldr	r1, [sp, #4]
   34b88:	str	r0, [r1]
   34b8c:	ldr	r0, [sp, #8]
   34b90:	str	r4, [r0]
   34b94:	mov	r1, r4
   34b98:	mov	r0, r1
   34b9c:	sub	sp, fp, #28
   34ba0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   34ba4:	ldr	r0, [r8]
   34ba8:	cmp	r0, #0
   34bac:	bne	34b94 <flatcc_json_parser_generic_json@@Base+0xa78>
   34bb0:	mov	r0, #10
   34bb4:	str	r0, [r8]
   34bb8:	b	34b78 <flatcc_json_parser_generic_json@@Base+0xa5c>
   34bbc:	ldr	r0, [r8]
   34bc0:	cmp	r0, #0
   34bc4:	bne	34b94 <flatcc_json_parser_generic_json@@Base+0xa78>
   34bc8:	mov	r0, #4
   34bcc:	b	34bf4 <flatcc_json_parser_generic_json@@Base+0xad8>
   34bd0:	ldr	r0, [r8]
   34bd4:	cmp	r0, #0
   34bd8:	bne	34b94 <flatcc_json_parser_generic_json@@Base+0xa78>
   34bdc:	mov	r0, #2
   34be0:	b	34bf4 <flatcc_json_parser_generic_json@@Base+0xad8>
   34be4:	ldr	r0, [r8]
   34be8:	cmp	r0, #0
   34bec:	bne	34b94 <flatcc_json_parser_generic_json@@Base+0xa78>
   34bf0:	mov	r0, #5
   34bf4:	str	r0, [r8]
   34bf8:	add	r1, r7, #1
   34bfc:	ldr	r0, [r6]
   34c00:	sub	r0, r1, r0
   34c04:	ldr	r1, [sp, #4]
   34c08:	str	r0, [r1]
   34c0c:	ldr	r0, [sp, #8]
   34c10:	str	r7, [r0]
   34c14:	b	34b94 <flatcc_json_parser_generic_json@@Base+0xa78>

00034c18 <flatcc_json_parser_double@@Base>:
   34c18:	push	{r4, r5, r6, r7, fp, lr}
   34c1c:	add	fp, sp, #16
   34c20:	mov	r5, r0
   34c24:	mov	r0, #0
   34c28:	mov	r6, r1
   34c2c:	cmp	r1, r2
   34c30:	str	r0, [r3]
   34c34:	str	r0, [r3, #4]
   34c38:	moveq	r0, r6
   34c3c:	popeq	{r4, r5, r6, r7, fp, pc}
   34c40:	mov	r0, r6
   34c44:	mov	r4, r2
   34c48:	mov	r7, r3
   34c4c:	ldrb	r1, [r0], #1
   34c50:	cmp	r1, #45	; 0x2d
   34c54:	movne	r0, r6
   34c58:	sub	r2, r2, r0
   34c5c:	cmp	r2, #2
   34c60:	blt	34c8c <flatcc_json_parser_double@@Base+0x74>
   34c64:	sub	r1, r1, #45	; 0x2d
   34c68:	clz	r1, r1
   34c6c:	lsr	r1, r1, #5
   34c70:	ldrb	r1, [r6, r1]
   34c74:	cmp	r1, #46	; 0x2e
   34c78:	beq	34cd8 <flatcc_json_parser_double@@Base+0xc0>
   34c7c:	cmp	r1, #48	; 0x30
   34c80:	ldrbeq	r0, [r0, #1]
   34c84:	cmpeq	r0, #48	; 0x30
   34c88:	beq	34cd8 <flatcc_json_parser_double@@Base+0xc0>
   34c8c:	sub	r1, r4, r6
   34c90:	mov	r0, r6
   34c94:	mov	r2, r7
   34c98:	bl	34d08 <flatcc_json_parser_double@@Base+0xf0>
   34c9c:	cmp	r0, #0
   34ca0:	cmpne	r0, r6
   34ca4:	popne	{r4, r5, r6, r7, fp, pc}
   34ca8:	vldr	d0, [r7]
   34cac:	bl	14e84 <__isinf@plt>
   34cb0:	ldr	r1, [r5, #24]
   34cb4:	cmp	r0, #0
   34cb8:	beq	34ccc <flatcc_json_parser_double@@Base+0xb4>
   34cbc:	cmp	r1, #0
   34cc0:	bne	34d00 <flatcc_json_parser_double@@Base+0xe8>
   34cc4:	mov	r0, #7
   34cc8:	b	34ce8 <flatcc_json_parser_double@@Base+0xd0>
   34ccc:	cmp	r1, #0
   34cd0:	bne	34d00 <flatcc_json_parser_double@@Base+0xe8>
   34cd4:	b	34ce4 <flatcc_json_parser_double@@Base+0xcc>
   34cd8:	ldr	r0, [r5, #24]
   34cdc:	cmp	r0, #0
   34ce0:	bne	34d00 <flatcc_json_parser_double@@Base+0xe8>
   34ce4:	mov	r0, #6
   34ce8:	str	r6, [r5, #36]	; 0x24
   34cec:	add	r2, r6, #1
   34cf0:	ldr	r1, [r5, #4]
   34cf4:	sub	r1, r2, r1
   34cf8:	str	r1, [r5, #20]
   34cfc:	str	r0, [r5, #24]
   34d00:	mov	r0, r4
   34d04:	pop	{r4, r5, r6, r7, fp, pc}
   34d08:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   34d0c:	add	fp, sp, #28
   34d10:	sub	sp, sp, #36	; 0x24
   34d14:	cmp	r1, #1000	; 0x3e8
   34d18:	mov	r3, r1
   34d1c:	mov	r6, #0
   34d20:	mov	r9, r0
   34d24:	movge	r1, #1000	; 0x3e8
   34d28:	str	r6, [r2]
   34d2c:	str	r6, [r2, #4]
   34d30:	add	lr, r0, r1
   34d34:	add	r4, lr, #1
   34d38:	cmp	r4, r0
   34d3c:	beq	34db0 <flatcc_json_parser_double@@Base+0x198>
   34d40:	ldrb	r0, [r9]
   34d44:	mov	r5, r9
   34d48:	cmp	r0, #45	; 0x2d
   34d4c:	bne	34d64 <flatcc_json_parser_double@@Base+0x14c>
   34d50:	cmp	r1, #0
   34d54:	beq	35104 <flatcc_json_parser_double@@Base+0x4ec>
   34d58:	add	r5, r9, #1
   34d5c:	mov	r6, #1
   34d60:	ldrb	r0, [r5]
   34d64:	cmp	r0, #48	; 0x30
   34d68:	bne	34d98 <flatcc_json_parser_double@@Base+0x180>
   34d6c:	add	ip, r5, #1
   34d70:	cmp	r5, lr
   34d74:	beq	34df8 <flatcc_json_parser_double@@Base+0x1e0>
   34d78:	ldrb	r1, [ip]
   34d7c:	orr	r0, r1, #32
   34d80:	cmp	r0, #120	; 0x78
   34d84:	bne	34dc8 <flatcc_json_parser_double@@Base+0x1b0>
   34d88:	mov	r0, #0
   34d8c:	str	r0, [r2]
   34d90:	str	r0, [r2, #4]
   34d94:	b	34db0 <flatcc_json_parser_double@@Base+0x198>
   34d98:	sub	r1, r0, #49	; 0x31
   34d9c:	uxtb	r1, r1
   34da0:	cmp	r1, #9
   34da4:	bcc	34db8 <flatcc_json_parser_double@@Base+0x1a0>
   34da8:	cmp	r6, #0
   34dac:	movne	r9, #0
   34db0:	mov	r2, r9
   34db4:	b	35108 <flatcc_json_parser_double@@Base+0x4f0>
   34db8:	sub	r0, r0, #48	; 0x30
   34dbc:	add	ip, r5, #1
   34dc0:	asr	r1, r0, #31
   34dc4:	b	34e00 <flatcc_json_parser_double@@Base+0x1e8>
   34dc8:	cmp	r1, #48	; 0x30
   34dcc:	mov	r0, #0
   34dd0:	mov	r1, #0
   34dd4:	bne	34e00 <flatcc_json_parser_double@@Base+0x1e8>
   34dd8:	add	r0, r5, #2
   34ddc:	mov	ip, r0
   34de0:	cmp	r4, r0
   34de4:	beq	34df8 <flatcc_json_parser_double@@Base+0x1e0>
   34de8:	mov	r0, ip
   34dec:	ldrb	r1, [r0], #1
   34df0:	cmp	r1, #48	; 0x30
   34df4:	beq	34ddc <flatcc_json_parser_double@@Base+0x1c4>
   34df8:	mov	r0, #0
   34dfc:	mov	r1, #0
   34e00:	cmp	ip, r4
   34e04:	beq	35104 <flatcc_json_parser_double@@Base+0x4ec>
   34e08:	movw	r5, #39321	; 0x9999
   34e0c:	mov	sl, #10
   34e10:	mov	r7, ip
   34e14:	str	r6, [sp, #20]
   34e18:	str	r2, [sp, #24]
   34e1c:	movt	r5, #6553	; 0x1999
   34e20:	ldrb	r8, [r7]
   34e24:	sub	r2, r8, #48	; 0x30
   34e28:	uxtb	r6, r2
   34e2c:	mov	r2, #0
   34e30:	cmp	r6, #9
   34e34:	bhi	34e6c <flatcc_json_parser_double@@Base+0x254>
   34e38:	movw	r6, #39320	; 0x9998
   34e3c:	movt	r6, #39321	; 0x9999
   34e40:	subs	r6, r6, r0
   34e44:	sbcs	r6, r5, r1
   34e48:	bcc	34e7c <flatcc_json_parser_double@@Base+0x264>
   34e4c:	add	r1, r1, r1, lsl #2
   34e50:	add	r7, r7, #1
   34e54:	lsl	r1, r1, #1
   34e58:	umlal	r8, r1, r0, sl
   34e5c:	subs	r0, r8, #48	; 0x30
   34e60:	sbc	r1, r1, #0
   34e64:	cmp	r4, r7
   34e68:	bne	34e20 <flatcc_json_parser_double@@Base+0x208>
   34e6c:	mov	r5, r1
   34e70:	mov	sl, #0
   34e74:	str	r0, [sp, #28]
   34e78:	b	34e98 <flatcc_json_parser_double@@Base+0x280>
   34e7c:	adds	r6, r0, #1
   34e80:	mov	sl, #1
   34e84:	adc	r5, r1, #0
   34e88:	cmp	r8, #52	; 0x34
   34e8c:	movls	r6, r0
   34e90:	movls	r5, r1
   34e94:	str	r6, [sp, #28]
   34e98:	cmp	r7, r4
   34e9c:	beq	35108 <flatcc_json_parser_double@@Base+0x4f0>
   34ea0:	sub	r8, r7, ip
   34ea4:	mvn	ip, r3
   34ea8:	mov	r3, #0
   34eac:	cmn	ip, #1000	; 0x3e8
   34eb0:	mov	r0, ip
   34eb4:	mvnlt	r0, #1000	; 0x3e8
   34eb8:	mvn	r0, r0
   34ebc:	sub	r0, r0, r7
   34ec0:	add	r0, r9, r0
   34ec4:	ldrb	r1, [r7]
   34ec8:	cmp	r1, #48	; 0x30
   34ecc:	bne	34ef0 <flatcc_json_parser_double@@Base+0x2d8>
   34ed0:	add	r1, r7, #1
   34ed4:	cmp	r7, lr
   34ed8:	sub	r0, r0, #1
   34edc:	add	r3, r3, #1
   34ee0:	mov	r7, r1
   34ee4:	bne	34ec4 <flatcc_json_parser_double@@Base+0x2ac>
   34ee8:	mov	r7, r1
   34eec:	b	34f38 <flatcc_json_parser_double@@Base+0x320>
   34ef0:	sub	r1, r1, #49	; 0x31
   34ef4:	uxtb	r1, r1
   34ef8:	cmp	r1, #8
   34efc:	bhi	34f38 <flatcc_json_parser_double@@Base+0x320>
   34f00:	mvn	r2, #0
   34f04:	mov	r1, r2
   34f08:	cmp	r0, #0
   34f0c:	beq	34f2c <flatcc_json_parser_double@@Base+0x314>
   34f10:	ldrb	r2, [r7, -r1]
   34f14:	sub	r0, r0, #1
   34f18:	sub	r2, r2, #48	; 0x30
   34f1c:	uxtb	r6, r2
   34f20:	sub	r2, r1, #1
   34f24:	cmp	r6, #10
   34f28:	bcc	34f04 <flatcc_json_parser_double@@Base+0x2ec>
   34f2c:	sub	r3, r3, r1
   34f30:	sub	r7, r7, r1
   34f34:	mov	sl, #1
   34f38:	mov	r2, #0
   34f3c:	cmp	r7, r4
   34f40:	beq	35108 <flatcc_json_parser_double@@Base+0x4f0>
   34f44:	ldrb	r0, [r7]
   34f48:	cmp	r0, #46	; 0x2e
   34f4c:	bne	350dc <flatcc_json_parser_double@@Base+0x4c4>
   34f50:	mov	r6, r7
   34f54:	ldrb	r0, [r6, #1]!
   34f58:	sub	r1, r0, #48	; 0x30
   34f5c:	uxtb	r1, r1
   34f60:	cmp	r1, #9
   34f64:	bhi	35108 <flatcc_json_parser_double@@Base+0x4f0>
   34f68:	cmp	r7, lr
   34f6c:	beq	35024 <flatcc_json_parser_double@@Base+0x40c>
   34f70:	cmn	ip, #1000	; 0x3e8
   34f74:	mvn	r1, #1
   34f78:	str	sl, [sp, #12]
   34f7c:	str	r6, [sp, #8]
   34f80:	str	r8, [sp, #16]
   34f84:	mvnlt	ip, #1000	; 0x3e8
   34f88:	sub	r1, r1, ip
   34f8c:	sub	r1, r1, r7
   34f90:	add	sl, r9, r1
   34f94:	mov	r1, #0
   34f98:	mov	ip, r1
   34f9c:	ldr	r1, [sp, #28]
   34fa0:	movw	r6, #39320	; 0x9998
   34fa4:	movt	r6, #39321	; 0x9999
   34fa8:	subs	r1, r6, r1
   34fac:	movw	r1, #39321	; 0x9999
   34fb0:	movt	r1, #6553	; 0x1999
   34fb4:	sbcs	r1, r1, r5
   34fb8:	bcc	3502c <flatcc_json_parser_double@@Base+0x414>
   34fbc:	add	r1, r5, r5, lsl #2
   34fc0:	ldr	r5, [sp, #28]
   34fc4:	uxtb	r0, r0
   34fc8:	mov	r6, #10
   34fcc:	lsl	r1, r1, #1
   34fd0:	umlal	r0, r1, r5, r6
   34fd4:	add	r6, r7, ip
   34fd8:	subs	r0, r0, #48	; 0x30
   34fdc:	sbc	r5, r1, #0
   34fe0:	cmp	sl, ip
   34fe4:	str	r0, [sp, #28]
   34fe8:	beq	3500c <flatcc_json_parser_double@@Base+0x3f4>
   34fec:	ldrb	r0, [r6, #2]
   34ff0:	mov	r8, r5
   34ff4:	add	r1, ip, #1
   34ff8:	sub	r5, r0, #48	; 0x30
   34ffc:	uxtb	r5, r5
   35000:	cmp	r5, #10
   35004:	mov	r5, r8
   35008:	bcc	34f98 <flatcc_json_parser_double@@Base+0x380>
   3500c:	ldr	r8, [sp, #16]
   35010:	ldr	sl, [sp, #12]
   35014:	sub	r0, r3, #1
   35018:	add	r7, r6, #2
   3501c:	sub	r3, r0, ip
   35020:	b	3506c <flatcc_json_parser_double@@Base+0x454>
   35024:	mov	r7, r6
   35028:	b	35070 <flatcc_json_parser_double@@Base+0x458>
   3502c:	ldr	sl, [sp, #12]
   35030:	ldr	r8, [sp, #16]
   35034:	add	r1, r7, ip
   35038:	sub	r3, r3, ip
   3503c:	add	r7, r1, #1
   35040:	cmp	sl, #0
   35044:	bne	3506c <flatcc_json_parser_double@@Base+0x454>
   35048:	ldr	r6, [sp, #28]
   3504c:	uxtb	r0, r0
   35050:	mov	sl, #1
   35054:	adds	r1, r6, #1
   35058:	adc	ip, r5, #0
   3505c:	cmp	r0, #52	; 0x34
   35060:	movhi	r6, r1
   35064:	movhi	r5, ip
   35068:	str	r6, [sp, #28]
   3506c:	ldr	r6, [sp, #8]
   35070:	cmp	r7, r4
   35074:	beq	35108 <flatcc_json_parser_double@@Base+0x4f0>
   35078:	sub	r0, r7, r6
   3507c:	add	r8, r0, r8
   35080:	ldrb	r0, [r7]
   35084:	cmp	r0, #48	; 0x30
   35088:	bne	350a0 <flatcc_json_parser_double@@Base+0x488>
   3508c:	add	r7, r7, #1
   35090:	add	r3, r3, #1
   35094:	cmp	r4, r7
   35098:	bne	35080 <flatcc_json_parser_double@@Base+0x468>
   3509c:	b	350dc <flatcc_json_parser_double@@Base+0x4c4>
   350a0:	sub	r0, r0, #49	; 0x31
   350a4:	uxtb	r0, r0
   350a8:	cmp	r0, #8
   350ac:	bhi	350dc <flatcc_json_parser_double@@Base+0x4c4>
   350b0:	add	r0, r7, #1
   350b4:	mov	sl, #1
   350b8:	mov	r7, r0
   350bc:	cmp	r4, r0
   350c0:	beq	350dc <flatcc_json_parser_double@@Base+0x4c4>
   350c4:	mov	r0, r7
   350c8:	ldrb	r1, [r0], #1
   350cc:	sub	r1, r1, #48	; 0x30
   350d0:	uxtb	r1, r1
   350d4:	cmp	r1, #10
   350d8:	bcc	350b8 <flatcc_json_parser_double@@Base+0x4a0>
   350dc:	cmp	r7, r4
   350e0:	beq	35108 <flatcc_json_parser_double@@Base+0x4f0>
   350e4:	ldrb	r0, [r7]
   350e8:	mov	ip, #0
   350ec:	orr	r0, r0, #32
   350f0:	cmp	r0, #101	; 0x65
   350f4:	bne	35114 <flatcc_json_parser_double@@Base+0x4fc>
   350f8:	sub	r0, r4, r7
   350fc:	cmp	r0, #2
   35100:	bge	35184 <flatcc_json_parser_double@@Base+0x56c>
   35104:	mov	r2, #0
   35108:	mov	r0, r2
   3510c:	sub	sp, fp, #28
   35110:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   35114:	mov	r0, #0
   35118:	cmp	r7, r4
   3511c:	mov	r2, #0
   35120:	beq	35108 <flatcc_json_parser_double@@Base+0x4f0>
   35124:	ldr	r1, [sp, #28]
   35128:	cmp	ip, #0
   3512c:	vmov.i32	d16, #0	; 0x00000000
   35130:	rsbne	r0, r0, #0
   35134:	orrs	r1, r1, r5
   35138:	beq	3515c <flatcc_json_parser_double@@Base+0x544>
   3513c:	add	r1, r8, r3
   35140:	add	r4, r1, r0
   35144:	cmn	r4, #324	; 0x144
   35148:	blt	3515c <flatcc_json_parser_double@@Base+0x544>
   3514c:	movw	r0, #310	; 0x136
   35150:	cmp	r4, r0
   35154:	ble	351b8 <flatcc_json_parser_double@@Base+0x5a0>
   35158:	vldr	d16, [pc, #880]	; 354d0 <flatcc_json_parser_double@@Base+0x8b8>
   3515c:	ldr	r0, [sp, #24]
   35160:	vstr	d16, [r0]
   35164:	ldr	r0, [sp, #20]
   35168:	cmp	r0, #0
   3516c:	ldrne	r0, [sp, #24]
   35170:	vldrne	d16, [r0]
   35174:	vnegne.f64	d16, d16
   35178:	vstrne	d16, [r0]
   3517c:	mov	r2, r7
   35180:	b	35108 <flatcc_json_parser_double@@Base+0x4f0>
   35184:	mov	r1, r7
   35188:	ldrb	r0, [r1, #1]!
   3518c:	cmp	r0, #45	; 0x2d
   35190:	beq	352b0 <flatcc_json_parser_double@@Base+0x698>
   35194:	mov	ip, #0
   35198:	cmp	r0, #43	; 0x2b
   3519c:	bne	352c0 <flatcc_json_parser_double@@Base+0x6a8>
   351a0:	add	r1, r7, #2
   351a4:	mov	r2, #0
   351a8:	cmp	r1, r4
   351ac:	beq	35108 <flatcc_json_parser_double@@Base+0x4f0>
   351b0:	mov	ip, #0
   351b4:	b	352c0 <flatcc_json_parser_double@@Base+0x6a8>
   351b8:	mov	r0, #0
   351bc:	cmp	r0, r5, lsr #21
   351c0:	bne	35320 <flatcc_json_parser_double@@Base+0x708>
   351c4:	cmp	r4, #22
   351c8:	bhi	35320 <flatcc_json_parser_double@@Base+0x708>
   351cc:	ldr	r0, [sp, #28]
   351d0:	mov	r1, r5
   351d4:	bl	42fc8 <flatcc_json_printer_clear@@Base+0x8cc>
   351d8:	sub	r2, r4, r8
   351dc:	vmov	d16, r0, r1
   351e0:	add	r0, r2, #22
   351e4:	cmp	r0, #44	; 0x2c
   351e8:	bhi	3515c <flatcc_json_parser_double@@Base+0x544>
   351ec:	add	r1, pc, #0
   351f0:	ldr	pc, [r1, r0, lsl #2]
   351f4:	andeq	r5, r3, r8, lsr #5
   351f8:	andeq	r5, r3, ip, ror #6
   351fc:	andeq	r5, r3, r4, ror r3
   35200:	andeq	r5, r3, ip, ror r3
   35204:	andeq	r5, r3, r4, lsl #7
   35208:	andeq	r5, r3, ip, lsl #7
   3520c:	muleq	r3, r4, r3
   35210:	muleq	r3, ip, r3
   35214:	andeq	r5, r3, r4, lsr #7
   35218:	andeq	r5, r3, ip, lsr #7
   3521c:			; <UNDEFINED> instruction: 0x000353b4
   35220:			; <UNDEFINED> instruction: 0x000353bc
   35224:	andeq	r5, r3, r4, asr #7
   35228:	andeq	r5, r3, ip, asr #7
   3522c:	ldrdeq	r5, [r3], -r4
   35230:	ldrdeq	r5, [r3], -ip
   35234:	andeq	r5, r3, r4, ror #7
   35238:	andeq	r5, r3, ip, ror #7
   3523c:	strdeq	r5, [r3], -r4
   35240:	strdeq	r5, [r3], -ip
   35244:	andeq	r5, r3, r4, lsl #8
   35248:	andeq	r5, r3, ip, lsl #8
   3524c:	andeq	r5, r3, ip, asr r1
   35250:	andeq	r5, r3, r8, lsl r4
   35254:	andeq	r5, r3, r0, lsr #8
   35258:	andeq	r5, r3, r8, lsr #8
   3525c:	andeq	r5, r3, r0, lsr r4
   35260:	andeq	r5, r3, r8, lsr r4
   35264:	andeq	r5, r3, r0, asr #8
   35268:	andeq	r5, r3, r8, asr #8
   3526c:	andeq	r5, r3, r0, asr r4
   35270:	andeq	r5, r3, r8, asr r4
   35274:	andeq	r5, r3, r0, ror #8
   35278:	andeq	r5, r3, r8, ror #8
   3527c:	andeq	r5, r3, r0, ror r4
   35280:	andeq	r5, r3, r8, ror r4
   35284:	andeq	r5, r3, r0, lsl #9
   35288:	andeq	r5, r3, r8, lsl #9
   3528c:	muleq	r3, r0, r4
   35290:	muleq	r3, r8, r4
   35294:	andeq	r5, r3, r0, lsr #9
   35298:	andeq	r5, r3, r8, lsr #9
   3529c:			; <UNDEFINED> instruction: 0x000354b0
   352a0:			; <UNDEFINED> instruction: 0x000354b8
   352a4:	andeq	r5, r3, r0, asr #9
   352a8:	vldr	d17, [pc, #712]	; 35578 <flatcc_json_parser_double@@Base+0x960>
   352ac:	b	35410 <flatcc_json_parser_double@@Base+0x7f8>
   352b0:	add	r1, r7, #2
   352b4:	mov	ip, #1
   352b8:	cmp	r1, r4
   352bc:	beq	35104 <flatcc_json_parser_double@@Base+0x4ec>
   352c0:	ldrb	r0, [r1]
   352c4:	mov	r7, r5
   352c8:	mov	r2, #0
   352cc:	sub	r0, r0, #48	; 0x30
   352d0:	uxtb	r5, r0
   352d4:	cmp	r5, #9
   352d8:	bhi	35108 <flatcc_json_parser_double@@Base+0x4f0>
   352dc:	mov	r5, r7
   352e0:	add	r7, r1, #1
   352e4:	cmp	r1, lr
   352e8:	beq	35118 <flatcc_json_parser_double@@Base+0x500>
   352ec:	ldrb	r1, [r7]
   352f0:	sub	r2, r1, #48	; 0x30
   352f4:	uxtb	r2, r2
   352f8:	cmp	r2, #9
   352fc:	bhi	35118 <flatcc_json_parser_double@@Base+0x500>
   35300:	cmp	r0, #32768	; 0x8000
   35304:	add	r7, r7, #1
   35308:	addlt	r0, r0, r0, lsl #2
   3530c:	addlt	r0, r1, r0, lsl #1
   35310:	sublt	r0, r0, #48	; 0x30
   35314:	cmp	r4, r7
   35318:	bne	352ec <flatcc_json_parser_double@@Base+0x6d4>
   3531c:	b	35118 <flatcc_json_parser_double@@Base+0x500>
   35320:	ldr	r0, [sp, #24]
   35324:	mov	r1, r5
   35328:	mov	r2, r4
   3532c:	mov	r3, r8
   35330:	str	sl, [sp]
   35334:	str	r0, [sp, #4]
   35338:	ldr	r0, [sp, #28]
   3533c:	bl	332a8 <grisu3_diy_fp_encode_double@@Base>
   35340:	cmp	r0, #0
   35344:	bne	35164 <flatcc_json_parser_double@@Base+0x54c>
   35348:	add	r1, sp, #32
   3534c:	mov	r0, r9
   35350:	bl	14f08 <strtod@plt>
   35354:	ldr	r0, [sp, #24]
   35358:	vstr	d0, [r0]
   3535c:	ldr	r0, [sp, #32]
   35360:	cmp	r0, r7
   35364:	movcc	r7, r0
   35368:	b	3517c <flatcc_json_parser_double@@Base+0x564>
   3536c:	vldr	d17, [pc, #356]	; 354d8 <flatcc_json_parser_double@@Base+0x8c0>
   35370:	b	35410 <flatcc_json_parser_double@@Base+0x7f8>
   35374:	vldr	d17, [pc, #356]	; 354e0 <flatcc_json_parser_double@@Base+0x8c8>
   35378:	b	35410 <flatcc_json_parser_double@@Base+0x7f8>
   3537c:	vldr	d17, [pc, #356]	; 354e8 <flatcc_json_parser_double@@Base+0x8d0>
   35380:	b	35410 <flatcc_json_parser_double@@Base+0x7f8>
   35384:	vldr	d17, [pc, #356]	; 354f0 <flatcc_json_parser_double@@Base+0x8d8>
   35388:	b	35410 <flatcc_json_parser_double@@Base+0x7f8>
   3538c:	vldr	d17, [pc, #356]	; 354f8 <flatcc_json_parser_double@@Base+0x8e0>
   35390:	b	35410 <flatcc_json_parser_double@@Base+0x7f8>
   35394:	vldr	d17, [pc, #356]	; 35500 <flatcc_json_parser_double@@Base+0x8e8>
   35398:	b	35410 <flatcc_json_parser_double@@Base+0x7f8>
   3539c:	vldr	d17, [pc, #356]	; 35508 <flatcc_json_parser_double@@Base+0x8f0>
   353a0:	b	35410 <flatcc_json_parser_double@@Base+0x7f8>
   353a4:	vldr	d17, [pc, #356]	; 35510 <flatcc_json_parser_double@@Base+0x8f8>
   353a8:	b	35410 <flatcc_json_parser_double@@Base+0x7f8>
   353ac:	vldr	d17, [pc, #356]	; 35518 <flatcc_json_parser_double@@Base+0x900>
   353b0:	b	35410 <flatcc_json_parser_double@@Base+0x7f8>
   353b4:	vldr	d17, [pc, #356]	; 35520 <flatcc_json_parser_double@@Base+0x908>
   353b8:	b	35410 <flatcc_json_parser_double@@Base+0x7f8>
   353bc:	vldr	d17, [pc, #356]	; 35528 <flatcc_json_parser_double@@Base+0x910>
   353c0:	b	35410 <flatcc_json_parser_double@@Base+0x7f8>
   353c4:	vldr	d17, [pc, #356]	; 35530 <flatcc_json_parser_double@@Base+0x918>
   353c8:	b	35410 <flatcc_json_parser_double@@Base+0x7f8>
   353cc:	vldr	d17, [pc, #356]	; 35538 <flatcc_json_parser_double@@Base+0x920>
   353d0:	b	35410 <flatcc_json_parser_double@@Base+0x7f8>
   353d4:	vldr	d17, [pc, #356]	; 35540 <flatcc_json_parser_double@@Base+0x928>
   353d8:	b	35410 <flatcc_json_parser_double@@Base+0x7f8>
   353dc:	vldr	d17, [pc, #356]	; 35548 <flatcc_json_parser_double@@Base+0x930>
   353e0:	b	35410 <flatcc_json_parser_double@@Base+0x7f8>
   353e4:	vldr	d17, [pc, #356]	; 35550 <flatcc_json_parser_double@@Base+0x938>
   353e8:	b	35410 <flatcc_json_parser_double@@Base+0x7f8>
   353ec:	vldr	d17, [pc, #356]	; 35558 <flatcc_json_parser_double@@Base+0x940>
   353f0:	b	35410 <flatcc_json_parser_double@@Base+0x7f8>
   353f4:	vldr	d17, [pc, #356]	; 35560 <flatcc_json_parser_double@@Base+0x948>
   353f8:	b	35410 <flatcc_json_parser_double@@Base+0x7f8>
   353fc:	vldr	d17, [pc, #356]	; 35568 <flatcc_json_parser_double@@Base+0x950>
   35400:	b	35410 <flatcc_json_parser_double@@Base+0x7f8>
   35404:	vldr	d17, [pc, #356]	; 35570 <flatcc_json_parser_double@@Base+0x958>
   35408:	b	35410 <flatcc_json_parser_double@@Base+0x7f8>
   3540c:	vmov.f64	d17, #36	; 0x41200000  10.0
   35410:	vdiv.f64	d16, d16, d17
   35414:	b	3515c <flatcc_json_parser_double@@Base+0x544>
   35418:	vmov.f64	d17, #36	; 0x41200000  10.0
   3541c:	b	354c4 <flatcc_json_parser_double@@Base+0x8ac>
   35420:	vldr	d17, [pc, #328]	; 35570 <flatcc_json_parser_double@@Base+0x958>
   35424:	b	354c4 <flatcc_json_parser_double@@Base+0x8ac>
   35428:	vldr	d17, [pc, #312]	; 35568 <flatcc_json_parser_double@@Base+0x950>
   3542c:	b	354c4 <flatcc_json_parser_double@@Base+0x8ac>
   35430:	vldr	d17, [pc, #296]	; 35560 <flatcc_json_parser_double@@Base+0x948>
   35434:	b	354c4 <flatcc_json_parser_double@@Base+0x8ac>
   35438:	vldr	d17, [pc, #280]	; 35558 <flatcc_json_parser_double@@Base+0x940>
   3543c:	b	354c4 <flatcc_json_parser_double@@Base+0x8ac>
   35440:	vldr	d17, [pc, #264]	; 35550 <flatcc_json_parser_double@@Base+0x938>
   35444:	b	354c4 <flatcc_json_parser_double@@Base+0x8ac>
   35448:	vldr	d17, [pc, #248]	; 35548 <flatcc_json_parser_double@@Base+0x930>
   3544c:	b	354c4 <flatcc_json_parser_double@@Base+0x8ac>
   35450:	vldr	d17, [pc, #232]	; 35540 <flatcc_json_parser_double@@Base+0x928>
   35454:	b	354c4 <flatcc_json_parser_double@@Base+0x8ac>
   35458:	vldr	d17, [pc, #216]	; 35538 <flatcc_json_parser_double@@Base+0x920>
   3545c:	b	354c4 <flatcc_json_parser_double@@Base+0x8ac>
   35460:	vldr	d17, [pc, #200]	; 35530 <flatcc_json_parser_double@@Base+0x918>
   35464:	b	354c4 <flatcc_json_parser_double@@Base+0x8ac>
   35468:	vldr	d17, [pc, #184]	; 35528 <flatcc_json_parser_double@@Base+0x910>
   3546c:	b	354c4 <flatcc_json_parser_double@@Base+0x8ac>
   35470:	vldr	d17, [pc, #168]	; 35520 <flatcc_json_parser_double@@Base+0x908>
   35474:	b	354c4 <flatcc_json_parser_double@@Base+0x8ac>
   35478:	vldr	d17, [pc, #152]	; 35518 <flatcc_json_parser_double@@Base+0x900>
   3547c:	b	354c4 <flatcc_json_parser_double@@Base+0x8ac>
   35480:	vldr	d17, [pc, #136]	; 35510 <flatcc_json_parser_double@@Base+0x8f8>
   35484:	b	354c4 <flatcc_json_parser_double@@Base+0x8ac>
   35488:	vldr	d17, [pc, #120]	; 35508 <flatcc_json_parser_double@@Base+0x8f0>
   3548c:	b	354c4 <flatcc_json_parser_double@@Base+0x8ac>
   35490:	vldr	d17, [pc, #104]	; 35500 <flatcc_json_parser_double@@Base+0x8e8>
   35494:	b	354c4 <flatcc_json_parser_double@@Base+0x8ac>
   35498:	vldr	d17, [pc, #88]	; 354f8 <flatcc_json_parser_double@@Base+0x8e0>
   3549c:	b	354c4 <flatcc_json_parser_double@@Base+0x8ac>
   354a0:	vldr	d17, [pc, #72]	; 354f0 <flatcc_json_parser_double@@Base+0x8d8>
   354a4:	b	354c4 <flatcc_json_parser_double@@Base+0x8ac>
   354a8:	vldr	d17, [pc, #56]	; 354e8 <flatcc_json_parser_double@@Base+0x8d0>
   354ac:	b	354c4 <flatcc_json_parser_double@@Base+0x8ac>
   354b0:	vldr	d17, [pc, #40]	; 354e0 <flatcc_json_parser_double@@Base+0x8c8>
   354b4:	b	354c4 <flatcc_json_parser_double@@Base+0x8ac>
   354b8:	vldr	d17, [pc, #24]	; 354d8 <flatcc_json_parser_double@@Base+0x8c0>
   354bc:	b	354c4 <flatcc_json_parser_double@@Base+0x8ac>
   354c0:	vldr	d17, [pc, #176]	; 35578 <flatcc_json_parser_double@@Base+0x960>
   354c4:	vmul.f64	d16, d16, d17
   354c8:	b	3515c <flatcc_json_parser_double@@Base+0x544>
   354cc:	nop	{0}
   354d0:	andeq	r0, r0, r0
   354d4:	svcvc	0x00f00000	; IMB
   354d8:	usatle	lr, #2, r0, asr #30
   354dc:	strbmi	r1, [fp], #-2788	; 0xfffff51c
   354e0:	ldmvc	r5!, {r6, sl, fp, pc}
   354e4:	ldrmi	sl, [r5], #-3869	; 0xfffff0e3
   354e8:	addsvs	r3, r1, r0, lsl #26
   354ec:	mvnmi	r5, #228, 16	; 0xe40000
   354f0:	strbvs	ip, [lr, -r0, lsl #16]
   354f4:			; <UNDEFINED> instruction: 0x43abc16d
   354f8:	ldrbhi	sl, [r8]
   354fc:	cmnmi	r6, #1459617792	; 0x57000000
   35500:	strbcc	r8, [r0, r0]!
   35504:	movtmi	ip, #4985	; 0x1379
   35508:	ldrtcs	r0, [r4], -r0
   3550c:	movwmi	r6, #52213	; 0xcbf5
   35510:	cdpne	0, 9, cr0, cr0, cr0, {0}
   35514:	sbcsmi	fp, r6, #196, 24	; 0xc400
   35518:	strb	r0, [r0, #-0]
   3551c:	adcmi	r3, r2, #156	; 0x9c
   35520:	andge	r0, r0, #0
   35524:	rsbmi	r1, sp, #148, 20	; 0x94000
   35528:	stmda	r0, {}	; <UNPREDICTABLE>
   3552c:	eorsmi	r4, r7, #7733248	; 0x760000
   35530:	andcs	r0, r0, r0
   35534:	andmi	sl, r2, #95	; 0x5f
   35538:	andeq	r0, r0, r0
   3553c:	bicmi	ip, sp, r5, ror #26
   35540:	andeq	r0, r0, r0
   35544:	orrsmi	sp, r7, r4, lsl #15
   35548:	andeq	r0, r0, r0
   3554c:	ldrdmi	r1, [r3, #-32]!	; 0xffffffe0
   35550:	andeq	r0, r0, r0
   35554:	smlawbmi	lr, r0, r4, r8
   35558:	andeq	r0, r0, r0
   3555c:	rscsmi	r6, r8, r0, lsl #20
   35560:	andeq	r0, r0, r0
   35564:	sbcmi	r8, r3, r0, lsl #16
   35568:	andeq	r0, r0, r0
   3556c:	addmi	r4, pc, r0
   35570:	andeq	r0, r0, r0
   35574:	subsmi	r0, r9, r0
   35578:			; <UNDEFINED> instruction: 0x064dd592
   3557c:	strmi	pc, [r0], #207	; 0xcf

00035580 <flatcc_json_parser_float@@Base>:
   35580:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   35584:	add	fp, sp, #24
   35588:	vpush	{d8-d9}
   3558c:	sub	sp, sp, #8
   35590:	mov	r8, r0
   35594:	mov	r0, #0
   35598:	mov	r6, r1
   3559c:	cmp	r1, r2
   355a0:	str	r0, [r3]
   355a4:	beq	35668 <flatcc_json_parser_float@@Base+0xe8>
   355a8:	mov	r0, r6
   355ac:	mov	r5, r2
   355b0:	mov	r7, r3
   355b4:	ldrb	r1, [r0], #1
   355b8:	cmp	r1, #45	; 0x2d
   355bc:	movne	r0, r6
   355c0:	sub	r2, r2, r0
   355c4:	cmp	r2, #2
   355c8:	blt	355f4 <flatcc_json_parser_float@@Base+0x74>
   355cc:	sub	r1, r1, #45	; 0x2d
   355d0:	clz	r1, r1
   355d4:	lsr	r1, r1, #5
   355d8:	ldrb	r1, [r6, r1]
   355dc:	cmp	r1, #46	; 0x2e
   355e0:	beq	35670 <flatcc_json_parser_float@@Base+0xf0>
   355e4:	cmp	r1, #48	; 0x30
   355e8:	ldrbeq	r0, [r0, #1]
   355ec:	cmpeq	r0, #48	; 0x30
   355f0:	beq	35670 <flatcc_json_parser_float@@Base+0xf0>
   355f4:	sub	r1, r5, r6
   355f8:	mov	r2, sp
   355fc:	mov	r0, r6
   35600:	bl	34d08 <flatcc_json_parser_double@@Base+0xf0>
   35604:	vldr	d16, [sp]
   35608:	mov	r4, r0
   3560c:	add	r0, pc, #164	; 0xa4
   35610:	vcmpe.f64	d16, #0.0
   35614:	vcvt.f32.f64	s16, d16
   35618:	vmrs	APSR_nzcv, fpscr
   3561c:	vmov.f32	s0, s16
   35620:	addmi	r0, r0, #4
   35624:	vldr	s18, [r0]
   35628:	bl	14e78 <__isinff@plt>
   3562c:	cmp	r0, #0
   35630:	movne	r4, r6
   35634:	vseleq.f32	s0, s16, s18
   35638:	cmp	r4, #0
   3563c:	vstr	s0, [r7]
   35640:	cmpne	r4, r6
   35644:	bne	356a8 <flatcc_json_parser_float@@Base+0x128>
   35648:	bl	14e78 <__isinff@plt>
   3564c:	ldr	r1, [r8, #24]
   35650:	cmp	r0, #0
   35654:	beq	35680 <flatcc_json_parser_float@@Base+0x100>
   35658:	cmp	r1, #0
   3565c:	bne	356a4 <flatcc_json_parser_float@@Base+0x124>
   35660:	mov	r0, #7
   35664:	b	3568c <flatcc_json_parser_float@@Base+0x10c>
   35668:	mov	r4, r6
   3566c:	b	356a8 <flatcc_json_parser_float@@Base+0x128>
   35670:	ldr	r0, [r8, #24]
   35674:	cmp	r0, #0
   35678:	bne	356a4 <flatcc_json_parser_float@@Base+0x124>
   3567c:	b	35688 <flatcc_json_parser_float@@Base+0x108>
   35680:	cmp	r1, #0
   35684:	bne	356a4 <flatcc_json_parser_float@@Base+0x124>
   35688:	mov	r0, #6
   3568c:	str	r6, [r8, #36]	; 0x24
   35690:	add	r2, r6, #1
   35694:	ldr	r1, [r8, #4]
   35698:	sub	r1, r2, r1
   3569c:	str	r1, [r8, #20]
   356a0:	str	r0, [r8, #24]
   356a4:	mov	r4, r5
   356a8:	mov	r0, r4
   356ac:	sub	sp, fp, #40	; 0x28
   356b0:	vpop	{d8-d9}
   356b4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   356b8:	svcvc	0x00800000
   356bc:			; <UNDEFINED> instruction: 0xff800000

000356c0 <flatcc_json_parser_integer@@Base>:
   356c0:	push	{r4, r5, r6, r7, fp, lr}
   356c4:	add	fp, sp, #16
   356c8:	mov	ip, r1
   356cc:	cmp	r1, r2
   356d0:	beq	35808 <flatcc_json_parser_integer@@Base+0x148>
   356d4:	ldrb	r1, [ip]
   356d8:	mov	r4, #0
   356dc:	sub	r1, r1, #45	; 0x2d
   356e0:	clz	r1, r1
   356e4:	lsr	r1, r1, #5
   356e8:	str	r1, [r3]
   356ec:	add	r1, ip, r1
   356f0:	cmp	r1, r2
   356f4:	beq	3575c <flatcc_json_parser_integer@@Base+0x9c>
   356f8:	mov	lr, #10
   356fc:	mov	r5, #0
   35700:	ldrb	r6, [r1]
   35704:	sub	r7, r6, #48	; 0x30
   35708:	uxtb	r7, r7
   3570c:	cmp	r7, #9
   35710:	bhi	3576c <flatcc_json_parser_integer@@Base+0xac>
   35714:	add	r7, r5, r5, lsl #2
   35718:	lsl	r7, r7, #1
   3571c:	umlal	r6, r7, r4, lr
   35720:	subs	r6, r6, #48	; 0x30
   35724:	sbc	r7, r7, #0
   35728:	subs	r4, r6, r4
   3572c:	sbcs	r4, r7, r5
   35730:	bcc	357bc <flatcc_json_parser_integer@@Base+0xfc>
   35734:	add	r1, r1, #1
   35738:	mov	r4, r6
   3573c:	mov	r5, r7
   35740:	cmp	r2, r1
   35744:	bne	35700 <flatcc_json_parser_integer@@Base+0x40>
   35748:	mov	r3, #0
   3574c:	mov	r1, r2
   35750:	mov	r4, r6
   35754:	mov	r5, r7
   35758:	b	35770 <flatcc_json_parser_integer@@Base+0xb0>
   3575c:	mov	r1, r2
   35760:	mov	r5, #0
   35764:	mov	r3, #0
   35768:	b	35770 <flatcc_json_parser_integer@@Base+0xb0>
   3576c:	mov	r3, #1
   35770:	cmp	r1, ip
   35774:	beq	35808 <flatcc_json_parser_integer@@Base+0x148>
   35778:	cmp	r3, #0
   3577c:	beq	357fc <flatcc_json_parser_integer@@Base+0x13c>
   35780:	ldrb	r3, [r1]
   35784:	cmp	r3, #46	; 0x2e
   35788:	cmpne	r3, #101	; 0x65
   3578c:	bne	357f4 <flatcc_json_parser_integer@@Base+0x134>
   35790:	ldr	r3, [r0, #24]
   35794:	cmp	r3, #0
   35798:	bne	357ec <flatcc_json_parser_integer@@Base+0x12c>
   3579c:	str	r1, [r0, #36]	; 0x24
   357a0:	add	r1, r1, #1
   357a4:	mov	r3, #12
   357a8:	ldr	r7, [r0, #4]
   357ac:	sub	r1, r1, r7
   357b0:	str	r1, [r0, #20]
   357b4:	str	r3, [r0, #24]
   357b8:	b	357ec <flatcc_json_parser_integer@@Base+0x12c>
   357bc:	ldr	r7, [r0, #24]
   357c0:	cmp	r7, #0
   357c4:	bne	357ec <flatcc_json_parser_integer@@Base+0x12c>
   357c8:	str	r1, [r0, #36]	; 0x24
   357cc:	cmp	r3, #0
   357d0:	mov	r7, #8
   357d4:	add	r1, r1, #1
   357d8:	ldr	r3, [r0, #4]
   357dc:	movweq	r7, #7
   357e0:	sub	r1, r1, r3
   357e4:	str	r1, [r0, #20]
   357e8:	str	r7, [r0, #24]
   357ec:	mov	ip, r2
   357f0:	b	35808 <flatcc_json_parser_integer@@Base+0x148>
   357f4:	cmp	r3, #69	; 0x45
   357f8:	beq	35790 <flatcc_json_parser_integer@@Base+0xd0>
   357fc:	ldr	r0, [fp, #8]
   35800:	mov	ip, r1
   35804:	strd	r4, [r0]
   35808:	mov	r0, ip
   3580c:	pop	{r4, r5, r6, r7, fp, pc}

00035810 <flatcc_json_parser_build_uint8_vector_base64@@Base>:
   35810:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   35814:	add	fp, sp, #28
   35818:	sub	sp, sp, #36	; 0x24
   3581c:	mov	r7, r3
   35820:	mov	r4, r2
   35824:	mov	r5, r0
   35828:	cmp	r1, r2
   3582c:	beq	35844 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x34>
   35830:	ldrb	r0, [r1]
   35834:	cmp	r0, #34	; 0x22
   35838:	bne	35844 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x34>
   3583c:	add	r9, r1, #1
   35840:	b	35874 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x64>
   35844:	ldr	r0, [r5, #24]
   35848:	mov	r9, r4
   3584c:	cmp	r0, #0
   35850:	bne	35874 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x64>
   35854:	str	r1, [r5, #36]	; 0x24
   35858:	add	r1, r1, #1
   3585c:	mov	r0, #16
   35860:	mov	r9, r4
   35864:	ldr	r2, [r5, #4]
   35868:	sub	r1, r1, r2
   3586c:	str	r1, [r5, #20]
   35870:	str	r0, [r5, #24]
   35874:	ldr	r6, [fp, #8]
   35878:	mov	r0, r5
   3587c:	mov	r1, r9
   35880:	mov	r2, r4
   35884:	bl	337dc <flatcc_json_parser_string_part@@Base>
   35888:	mov	sl, r0
   3588c:	cmp	r0, r4
   35890:	mov	r0, r4
   35894:	beq	358d0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xc0>
   35898:	ldrb	r0, [sl]
   3589c:	cmp	r0, #34	; 0x22
   358a0:	bne	358cc <flatcc_json_parser_build_uint8_vector_base64@@Base+0xbc>
   358a4:	sub	r1, sl, r9
   358a8:	and	r0, r1, #3
   358ac:	str	r1, [sp, #28]
   358b0:	lsr	r1, r1, #2
   358b4:	add	r8, r1, r1, lsl #1
   358b8:	cmp	r0, #2
   358bc:	beq	3590c <flatcc_json_parser_build_uint8_vector_base64@@Base+0xfc>
   358c0:	cmp	r0, #3
   358c4:	addeq	r8, r8, #2
   358c8:	b	35910 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x100>
   358cc:	mov	r0, sl
   358d0:	mov	r1, #0
   358d4:	str	r1, [r7]
   358d8:	ldr	r1, [r5, #24]
   358dc:	cmp	r1, #0
   358e0:	bne	3595c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x14c>
   358e4:	str	r0, [r5, #36]	; 0x24
   358e8:	mov	r1, #31
   358ec:	cmp	r6, #0
   358f0:	add	r0, r0, #1
   358f4:	ldr	r2, [r5, #4]
   358f8:	movwne	r1, #32
   358fc:	sub	r0, r0, r2
   35900:	str	r0, [r5, #20]
   35904:	str	r1, [r5, #24]
   35908:	b	3595c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x14c>
   3590c:	add	r8, r8, #1
   35910:	ldr	r0, [r5]
   35914:	mov	r1, #1
   35918:	mov	r2, #1
   3591c:	mvn	r3, #0
   35920:	bl	2f4c0 <flatcc_builder_start_vector@@Base>
   35924:	cmp	r0, #0
   35928:	beq	35968 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x158>
   3592c:	mov	r0, #0
   35930:	str	r0, [r7]
   35934:	ldr	r0, [r5, #24]
   35938:	cmp	r0, #0
   3593c:	bne	3595c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x14c>
   35940:	mov	r0, #33	; 0x21
   35944:	str	sl, [r5, #36]	; 0x24
   35948:	add	r2, sl, #1
   3594c:	ldr	r1, [r5, #4]
   35950:	sub	r1, r2, r1
   35954:	str	r1, [r5, #20]
   35958:	str	r0, [r5, #24]
   3595c:	mov	r0, r4
   35960:	sub	sp, fp, #28
   35964:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   35968:	ldr	r0, [r5]
   3596c:	mov	r1, r8
   35970:	bl	2eca8 <flatcc_builder_extend_vector@@Base>
   35974:	cmp	r0, #0
   35978:	beq	3592c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x11c>
   3597c:	movw	r1, #37008	; 0x9090
   35980:	movw	r2, #36752	; 0x8f90
   35984:	ldr	ip, [sp, #28]
   35988:	cmp	r6, #0
   3598c:	str	r7, [sp, #8]
   35990:	add	r7, sp, #32
   35994:	mov	r6, r9
   35998:	str	r0, [sp, #4]
   3599c:	str	r0, [sp, #16]
   359a0:	str	r8, [sp, #24]
   359a4:	movt	r1, #4
   359a8:	movt	r2, #4
   359ac:	movne	r2, r1
   359b0:	cmp	r8, #0
   359b4:	mov	r1, r8
   359b8:	mvneq	r1, #0
   359bc:	str	r1, [sp, #20]
   359c0:	mov	r1, #0
   359c4:	str	ip, [sp, #12]
   359c8:	cmp	ip, r1
   359cc:	beq	35a74 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x264>
   359d0:	ldrb	r3, [r6, r1]
   359d4:	ldrb	lr, [r2, r3]
   359d8:	cmp	lr, #64	; 0x40
   359dc:	strb	lr, [r7, r1]
   359e0:	bcc	359f8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1e8>
   359e4:	cmp	lr, #65	; 0x41
   359e8:	bne	35ab0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2a0>
   359ec:	sub	r1, r1, #1
   359f0:	sub	ip, ip, #1
   359f4:	add	r6, r6, #1
   359f8:	add	r1, r1, #1
   359fc:	cmp	r1, #4
   35a00:	bcc	359c8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1b8>
   35a04:	ldr	r0, [sp, #20]
   35a08:	cmp	r0, #3
   35a0c:	bcc	35aa0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x290>
   35a10:	ldrb	r3, [sp, #33]	; 0x21
   35a14:	ldrb	r1, [sp, #32]
   35a18:	mov	r0, r7
   35a1c:	ldr	r8, [sp, #24]
   35a20:	sub	ip, ip, #4
   35a24:	add	r6, r6, #4
   35a28:	lsr	r7, r3, #4
   35a2c:	orr	r1, r7, r1, lsl #2
   35a30:	mov	r7, r0
   35a34:	ldr	r0, [sp, #16]
   35a38:	strb	r1, [r0]
   35a3c:	ldrb	r1, [sp, #34]	; 0x22
   35a40:	lsr	r1, r1, #2
   35a44:	orr	r1, r1, r3, lsl #4
   35a48:	strb	r1, [r0, #1]
   35a4c:	ldrb	r1, [sp, #34]	; 0x22
   35a50:	ldrb	r3, [sp, #35]	; 0x23
   35a54:	orr	r1, r3, r1, lsl #6
   35a58:	strb	r1, [r0, #2]
   35a5c:	ldr	r1, [sp, #20]
   35a60:	add	r0, r0, #3
   35a64:	str	r0, [sp, #16]
   35a68:	subs	r1, r1, #3
   35a6c:	bne	359bc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1ac>
   35a70:	b	35b60 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x350>
   35a74:	mov	r1, ip
   35a78:	mov	r0, ip
   35a7c:	sub	ip, ip, r0
   35a80:	cmp	r1, #0
   35a84:	beq	35b60 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x350>
   35a88:	cmp	r1, #3
   35a8c:	beq	35af4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2e4>
   35a90:	cmp	r1, #2
   35a94:	ldrbeq	r1, [sp, #33]	; 0x21
   35a98:	tsteq	r1, #15
   35a9c:	beq	35b48 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x338>
   35aa0:	ldr	r0, [sp, #28]
   35aa4:	ldr	r1, [sp, #12]
   35aa8:	sub	r0, r0, r1
   35aac:	b	35b70 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x360>
   35ab0:	cmp	lr, #66	; 0x42
   35ab4:	bne	35b40 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x330>
   35ab8:	add	r3, r1, #1
   35abc:	mov	r0, r3
   35ac0:	cmp	r3, ip
   35ac4:	bcs	35a7c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x26c>
   35ac8:	cmp	r0, #7
   35acc:	bhi	35a7c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x26c>
   35ad0:	ldrb	r3, [r6, r0]
   35ad4:	ldr	r8, [sp, #24]
   35ad8:	ldrb	r3, [r2, r3]
   35adc:	sub	r3, r3, #65	; 0x41
   35ae0:	uxtb	r7, r3
   35ae4:	add	r3, r0, #1
   35ae8:	cmp	r7, #2
   35aec:	bcc	35abc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2ac>
   35af0:	b	35a7c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x26c>
   35af4:	ldr	r1, [sp, #20]
   35af8:	cmp	r1, #2
   35afc:	bcc	35aa0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x290>
   35b00:	ldrb	r1, [sp, #34]	; 0x22
   35b04:	ands	r2, r1, #3
   35b08:	bne	35aa0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x290>
   35b0c:	ldrb	r3, [sp, #33]	; 0x21
   35b10:	ldrb	r2, [sp, #32]
   35b14:	ldr	r8, [sp, #24]
   35b18:	lsl	r7, r3, #4
   35b1c:	orr	r1, r7, r1, lsr #2
   35b20:	ldr	r7, [sp, #16]
   35b24:	strb	r1, [r7, #1]
   35b28:	lsr	r1, r3, #4
   35b2c:	orr	r1, r1, r2, lsl #2
   35b30:	strb	r1, [r7]
   35b34:	add	r7, r7, #2
   35b38:	str	r7, [sp, #16]
   35b3c:	b	35b60 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x350>
   35b40:	mov	r0, r1
   35b44:	b	35a7c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x26c>
   35b48:	ldrb	r2, [sp, #32]
   35b4c:	lsl	r2, r2, #2
   35b50:	orr	r1, r2, r1, lsr #4
   35b54:	ldr	r2, [sp, #16]
   35b58:	strb	r1, [r2], #1
   35b5c:	str	r2, [sp, #16]
   35b60:	cmp	ip, #0
   35b64:	beq	35b80 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x370>
   35b68:	ldr	r0, [sp, #28]
   35b6c:	sub	r0, r0, ip
   35b70:	ldr	r6, [fp, #8]
   35b74:	ldr	r7, [sp, #8]
   35b78:	add	r0, r9, r0
   35b7c:	b	358d0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xc0>
   35b80:	ldr	r0, [sp, #4]
   35b84:	ldr	r1, [sp, #16]
   35b88:	ldr	r7, [sp, #8]
   35b8c:	sub	r0, r1, r0
   35b90:	cmp	r8, r0
   35b94:	bls	35bac <flatcc_json_parser_build_uint8_vector_base64@@Base+0x39c>
   35b98:	sub	r1, r8, r0
   35b9c:	ldr	r0, [r5]
   35ba0:	bl	2f2f4 <flatcc_builder_truncate_vector@@Base>
   35ba4:	cmp	r0, #0
   35ba8:	bne	3592c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x11c>
   35bac:	ldr	r0, [r5]
   35bb0:	bl	3052c <flatcc_builder_end_vector@@Base>
   35bb4:	cmp	r0, #0
   35bb8:	str	r0, [r7]
   35bbc:	beq	3592c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x11c>
   35bc0:	ldrb	r0, [sl]
   35bc4:	cmp	r0, #34	; 0x22
   35bc8:	bne	35bd4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3c4>
   35bcc:	add	r4, sl, #1
   35bd0:	b	3595c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x14c>
   35bd4:	ldr	r0, [r5, #24]
   35bd8:	cmp	r0, #0
   35bdc:	bne	3595c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x14c>
   35be0:	mov	r0, #20
   35be4:	b	35944 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x134>

00035be8 <flatcc_json_parser_build_string@@Base>:
   35be8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   35bec:	add	fp, sp, #28
   35bf0:	sub	sp, sp, #4
   35bf4:	mov	r9, r3
   35bf8:	mov	sl, r2
   35bfc:	mov	r5, r0
   35c00:	cmp	r1, r2
   35c04:	beq	35c1c <flatcc_json_parser_build_string@@Base+0x34>
   35c08:	ldrb	r0, [r1]
   35c0c:	cmp	r0, #34	; 0x22
   35c10:	bne	35c1c <flatcc_json_parser_build_string@@Base+0x34>
   35c14:	add	r6, r1, #1
   35c18:	b	35c4c <flatcc_json_parser_build_string@@Base+0x64>
   35c1c:	ldr	r0, [r5, #24]
   35c20:	mov	r6, sl
   35c24:	cmp	r0, #0
   35c28:	bne	35c4c <flatcc_json_parser_build_string@@Base+0x64>
   35c2c:	str	r1, [r5, #36]	; 0x24
   35c30:	add	r1, r1, #1
   35c34:	mov	r0, #16
   35c38:	mov	r6, sl
   35c3c:	ldr	r2, [r5, #4]
   35c40:	sub	r1, r1, r2
   35c44:	str	r1, [r5, #20]
   35c48:	str	r0, [r5, #24]
   35c4c:	mov	r0, r5
   35c50:	mov	r1, r6
   35c54:	mov	r2, sl
   35c58:	bl	337dc <flatcc_json_parser_string_part@@Base>
   35c5c:	mov	r4, r0
   35c60:	cmp	r0, sl
   35c64:	beq	35c8c <flatcc_json_parser_build_string@@Base+0xa4>
   35c68:	ldrb	r0, [r4]
   35c6c:	cmp	r0, #34	; 0x22
   35c70:	bne	35c8c <flatcc_json_parser_build_string@@Base+0xa4>
   35c74:	ldr	r0, [r5]
   35c78:	sub	r2, r4, r6
   35c7c:	mov	r1, r6
   35c80:	bl	31400 <flatcc_builder_create_string@@Base>
   35c84:	mov	r6, r4
   35c88:	b	35d64 <flatcc_json_parser_build_string@@Base+0x17c>
   35c8c:	ldr	r0, [r5]
   35c90:	bl	2f6f0 <flatcc_builder_start_string@@Base>
   35c94:	cmp	r0, #0
   35c98:	beq	35ca8 <flatcc_json_parser_build_string@@Base+0xc0>
   35c9c:	mov	r0, #0
   35ca0:	str	r0, [r9]
   35ca4:	b	35db0 <flatcc_json_parser_build_string@@Base+0x1c8>
   35ca8:	ldr	r0, [r5]
   35cac:	sub	r2, r4, r6
   35cb0:	mov	r1, r6
   35cb4:	bl	2f1b8 <flatcc_builder_append_string@@Base>
   35cb8:	cmp	r0, #0
   35cbc:	beq	35c9c <flatcc_json_parser_build_string@@Base+0xb4>
   35cc0:	cmp	r4, sl
   35cc4:	mov	r6, sl
   35cc8:	beq	35d5c <flatcc_json_parser_build_string@@Base+0x174>
   35ccc:	mov	r8, sp
   35cd0:	add	r6, r8, #1
   35cd4:	ldrb	r0, [r4]
   35cd8:	cmp	r0, #34	; 0x22
   35cdc:	beq	35d48 <flatcc_json_parser_build_string@@Base+0x160>
   35ce0:	mov	r0, r5
   35ce4:	mov	r1, r4
   35ce8:	mov	r2, sl
   35cec:	mov	r3, r8
   35cf0:	bl	33930 <flatcc_json_parser_string_escape@@Base>
   35cf4:	mov	r7, r0
   35cf8:	ldr	r0, [r5]
   35cfc:	ldrb	r2, [sp]
   35d00:	mov	r1, r6
   35d04:	bl	2f1b8 <flatcc_builder_append_string@@Base>
   35d08:	cmp	r0, #0
   35d0c:	beq	35d50 <flatcc_json_parser_build_string@@Base+0x168>
   35d10:	mov	r0, r5
   35d14:	mov	r1, r7
   35d18:	mov	r2, sl
   35d1c:	bl	337dc <flatcc_json_parser_string_part@@Base>
   35d20:	cmp	r0, sl
   35d24:	beq	35d58 <flatcc_json_parser_build_string@@Base+0x170>
   35d28:	mov	r4, r0
   35d2c:	sub	r2, r0, r7
   35d30:	ldr	r0, [r5]
   35d34:	mov	r1, r7
   35d38:	bl	2f1b8 <flatcc_builder_append_string@@Base>
   35d3c:	cmp	r0, #0
   35d40:	bne	35cd4 <flatcc_json_parser_build_string@@Base+0xec>
   35d44:	b	35c9c <flatcc_json_parser_build_string@@Base+0xb4>
   35d48:	mov	r6, r4
   35d4c:	b	35d5c <flatcc_json_parser_build_string@@Base+0x174>
   35d50:	mov	r4, r7
   35d54:	b	35c9c <flatcc_json_parser_build_string@@Base+0xb4>
   35d58:	mov	r6, sl
   35d5c:	ldr	r0, [r5]
   35d60:	bl	3156c <flatcc_builder_end_string@@Base>
   35d64:	cmp	r6, sl
   35d68:	str	r0, [r9]
   35d6c:	beq	35d84 <flatcc_json_parser_build_string@@Base+0x19c>
   35d70:	ldrb	r0, [r6]
   35d74:	cmp	r0, #34	; 0x22
   35d78:	bne	35d84 <flatcc_json_parser_build_string@@Base+0x19c>
   35d7c:	add	r4, r6, #1
   35d80:	b	35db0 <flatcc_json_parser_build_string@@Base+0x1c8>
   35d84:	ldr	r0, [r5, #24]
   35d88:	cmp	r0, #0
   35d8c:	bne	35dac <flatcc_json_parser_build_string@@Base+0x1c4>
   35d90:	str	r6, [r5, #36]	; 0x24
   35d94:	add	r2, r6, #1
   35d98:	mov	r0, #20
   35d9c:	ldr	r1, [r5, #4]
   35da0:	sub	r1, r2, r1
   35da4:	str	r1, [r5, #20]
   35da8:	str	r0, [r5, #24]
   35dac:	mov	r4, sl
   35db0:	mov	r0, r4
   35db4:	sub	sp, fp, #28
   35db8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00035dbc <flatcc_json_parser_prepare_unions@@Base>:
   35dbc:	push	{r4, r5, r6, r7, fp, lr}
   35dc0:	add	fp, sp, #16
   35dc4:	mov	r5, r1
   35dc8:	mov	r6, r0
   35dcc:	add	r0, r3, r3, lsl #1
   35dd0:	mov	r1, #8
   35dd4:	mov	r7, r3
   35dd8:	mov	r4, r2
   35ddc:	add	r1, r1, r0, lsl #3
   35de0:	ldr	r0, [r6]
   35de4:	bl	2e0e0 <flatcc_builder_enter_user_frame@@Base>
   35de8:	mov	r1, r0
   35dec:	ldr	r0, [fp, #8]
   35df0:	cmp	r1, #0
   35df4:	str	r1, [r0]
   35df8:	beq	35e10 <flatcc_json_parser_prepare_unions@@Base+0x54>
   35dfc:	ldr	r0, [r6]
   35e00:	bl	2e230 <flatcc_builder_get_user_frame_ptr@@Base>
   35e04:	mov	r4, r5
   35e08:	str	r7, [r0]
   35e0c:	b	35e38 <flatcc_json_parser_prepare_unions@@Base+0x7c>
   35e10:	ldr	r0, [r6, #24]
   35e14:	cmp	r0, #0
   35e18:	bne	35e38 <flatcc_json_parser_prepare_unions@@Base+0x7c>
   35e1c:	str	r5, [r6, #36]	; 0x24
   35e20:	add	r2, r5, #1
   35e24:	mov	r0, #33	; 0x21
   35e28:	ldr	r1, [r6, #4]
   35e2c:	sub	r1, r2, r1
   35e30:	str	r1, [r6, #20]
   35e34:	str	r0, [r6, #24]
   35e38:	mov	r0, r4
   35e3c:	pop	{r4, r5, r6, r7, fp, pc}

00035e40 <flatcc_json_parser_finalize_unions@@Base>:
   35e40:	push	{r4, r5, r6, r7, fp, lr}
   35e44:	add	fp, sp, #16
   35e48:	mov	r6, r0
   35e4c:	ldr	r0, [r0]
   35e50:	mov	r7, r1
   35e54:	mov	r1, r3
   35e58:	mov	r5, r3
   35e5c:	mov	r4, r2
   35e60:	bl	2e230 <flatcc_builder_get_user_frame_ptr@@Base>
   35e64:	ldr	r0, [r0, #4]
   35e68:	cmp	r0, #0
   35e6c:	beq	35e9c <flatcc_json_parser_finalize_unions@@Base+0x5c>
   35e70:	ldr	r0, [r6, #24]
   35e74:	cmp	r0, #0
   35e78:	bne	35ea0 <flatcc_json_parser_finalize_unions@@Base+0x60>
   35e7c:	str	r7, [r6, #36]	; 0x24
   35e80:	add	r2, r7, #1
   35e84:	mov	r0, #27
   35e88:	ldr	r1, [r6, #4]
   35e8c:	sub	r1, r2, r1
   35e90:	str	r1, [r6, #20]
   35e94:	str	r0, [r6, #24]
   35e98:	b	35ea0 <flatcc_json_parser_finalize_unions@@Base+0x60>
   35e9c:	mov	r4, r7
   35ea0:	ldr	r0, [r6]
   35ea4:	mov	r1, r5
   35ea8:	bl	2e1ec <flatcc_builder_exit_user_frame_at@@Base>
   35eac:	mov	r0, r4
   35eb0:	pop	{r4, r5, r6, r7, fp, pc}

00035eb4 <flatcc_json_parser_union@@Base>:
   35eb4:	push	{r4, r5, r6, r7, fp, lr}
   35eb8:	add	fp, sp, #16
   35ebc:	sub	sp, sp, #16
   35ec0:	mov	r6, r1
   35ec4:	mov	r5, r0
   35ec8:	ldr	r0, [r0]
   35ecc:	ldr	r1, [fp, #12]
   35ed0:	mov	r7, r3
   35ed4:	mov	r4, r2
   35ed8:	bl	2e230 <flatcc_builder_get_user_frame_ptr@@Base>
   35edc:	add	r2, r0, #8
   35ee0:	add	r3, r7, r7, lsl #1
   35ee4:	mov	r1, r2
   35ee8:	ldr	r7, [r1, r3, lsl #3]!
   35eec:	cmp	r7, #0
   35ef0:	beq	35f20 <flatcc_json_parser_union@@Base+0x6c>
   35ef4:	ldr	r0, [r5, #24]
   35ef8:	cmp	r0, #0
   35efc:	bne	35fe0 <flatcc_json_parser_union@@Base+0x12c>
   35f00:	mov	r0, #28
   35f04:	str	r6, [r5, #36]	; 0x24
   35f08:	add	r2, r6, #1
   35f0c:	ldr	r1, [r5, #4]
   35f10:	sub	r1, r2, r1
   35f14:	str	r1, [r5, #20]
   35f18:	str	r0, [r5, #24]
   35f1c:	b	35fe0 <flatcc_json_parser_union@@Base+0x12c>
   35f20:	add	r2, r2, r3, lsl #3
   35f24:	ldrb	r3, [r2, #12]
   35f28:	cmp	r3, #0
   35f2c:	beq	35f9c <flatcc_json_parser_union@@Base+0xe8>
   35f30:	ldrb	r3, [r2, #13]
   35f34:	cmp	r3, #0
   35f38:	strb	r3, [sp, #8]
   35f3c:	beq	35fd4 <flatcc_json_parser_union@@Base+0x120>
   35f40:	ldr	r1, [r0, #4]
   35f44:	ldr	r7, [fp, #16]
   35f48:	mov	r2, r4
   35f4c:	sub	r1, r1, #1
   35f50:	str	r1, [r0, #4]
   35f54:	add	r0, sp, #8
   35f58:	mov	r1, r6
   35f5c:	add	r0, r0, #4
   35f60:	str	r0, [sp]
   35f64:	mov	r0, r5
   35f68:	blx	r7
   35f6c:	cmp	r0, r4
   35f70:	beq	35fe0 <flatcc_json_parser_union@@Base+0x12c>
   35f74:	mov	r6, r0
   35f78:	ldr	r1, [fp, #8]
   35f7c:	ldr	r0, [r5]
   35f80:	ldr	r2, [sp, #8]
   35f84:	ldr	r3, [sp, #12]
   35f88:	bl	30920 <flatcc_builder_table_add_union@@Base>
   35f8c:	cmp	r0, #0
   35f90:	bne	35ef4 <flatcc_json_parser_union@@Base+0x40>
   35f94:	mov	r4, r6
   35f98:	b	35fe0 <flatcc_json_parser_union@@Base+0x12c>
   35f9c:	ldr	r3, [r0, #4]
   35fa0:	add	r3, r3, #1
   35fa4:	str	r3, [r0, #4]
   35fa8:	ldr	r0, [r5, #16]
   35fac:	str	r0, [r2, #8]
   35fb0:	ldr	r0, [r5, #4]
   35fb4:	str	r0, [r2, #4]
   35fb8:	str	r6, [r1]
   35fbc:	mov	r0, r5
   35fc0:	mov	r1, r6
   35fc4:	mov	r2, r4
   35fc8:	bl	3411c <flatcc_json_parser_generic_json@@Base>
   35fcc:	mov	r4, r0
   35fd0:	b	35fe0 <flatcc_json_parser_union@@Base+0x12c>
   35fd4:	ldr	r0, [r5, #24]
   35fd8:	cmp	r0, #0
   35fdc:	beq	35fec <flatcc_json_parser_union@@Base+0x138>
   35fe0:	mov	r0, r4
   35fe4:	sub	sp, fp, #16
   35fe8:	pop	{r4, r5, r6, r7, fp, pc}
   35fec:	mov	r0, #25
   35ff0:	b	35f04 <flatcc_json_parser_union@@Base+0x50>

00035ff4 <flatcc_json_parser_union_type@@Base>:
   35ff4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   35ff8:	add	fp, sp, #28
   35ffc:	sub	sp, sp, #28
   36000:	mov	r7, r1
   36004:	mov	r5, r0
   36008:	ldr	r0, [r0]
   3600c:	ldr	r1, [fp, #12]
   36010:	mov	r4, r3
   36014:	mov	r8, r2
   36018:	bl	2e230 <flatcc_builder_get_user_frame_ptr@@Base>
   3601c:	add	r2, r0, #8
   36020:	add	sl, r4, r4, lsl #1
   36024:	mov	r6, r0
   36028:	str	r8, [sp, #8]
   3602c:	add	r9, r2, sl, lsl #3
   36030:	mov	r0, r9
   36034:	ldrb	r1, [r0, #12]!
   36038:	cmp	r1, #0
   3603c:	beq	36078 <flatcc_json_parser_union_type@@Base+0x84>
   36040:	ldr	r0, [r5, #24]
   36044:	cmp	r0, #0
   36048:	bne	36068 <flatcc_json_parser_union_type@@Base+0x74>
   3604c:	str	r7, [r5, #36]	; 0x24
   36050:	mov	r0, #28
   36054:	add	r2, r7, #1
   36058:	ldr	r1, [r5, #4]
   3605c:	sub	r1, r2, r1
   36060:	str	r1, [r5, #20]
   36064:	str	r0, [r5, #24]
   36068:	ldr	r3, [sp, #8]
   3606c:	mov	r0, r3
   36070:	sub	sp, fp, #28
   36074:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   36078:	mov	r1, #1
   3607c:	mov	r4, r9
   36080:	str	r2, [sp, #4]
   36084:	cmp	r7, r8
   36088:	mov	r2, r8
   3608c:	strb	r1, [r0]
   36090:	mov	r0, #0
   36094:	str	r0, [sp, #20]
   36098:	str	r0, [sp, #16]
   3609c:	str	r0, [sp, #12]
   360a0:	strb	r0, [r4, #13]!
   360a4:	beq	36148 <flatcc_json_parser_union_type@@Base+0x154>
   360a8:	add	r0, sp, #16
   360ac:	add	r3, sp, #12
   360b0:	mov	r1, r7
   360b4:	str	r0, [sp]
   360b8:	mov	r0, r5
   360bc:	bl	356c0 <flatcc_json_parser_integer@@Base>
   360c0:	ldr	r2, [sp, #8]
   360c4:	cmp	r0, r7
   360c8:	beq	36148 <flatcc_json_parser_union_type@@Base+0x154>
   360cc:	ldr	r1, [sp, #12]
   360d0:	cmp	r1, #0
   360d4:	beq	360f0 <flatcc_json_parser_union_type@@Base+0xfc>
   360d8:	ldr	r1, [r5, #24]
   360dc:	mov	r3, r2
   360e0:	cmp	r1, #0
   360e4:	bne	36140 <flatcc_json_parser_union_type@@Base+0x14c>
   360e8:	mov	r1, #8
   360ec:	b	36118 <flatcc_json_parser_union_type@@Base+0x124>
   360f0:	ldr	r1, [sp, #16]
   360f4:	ldr	ip, [sp, #20]
   360f8:	subs	r3, r1, #256	; 0x100
   360fc:	sbcs	r3, ip, #0
   36100:	bcc	36138 <flatcc_json_parser_union_type@@Base+0x144>
   36104:	ldr	r1, [r5, #24]
   36108:	mov	r3, r2
   3610c:	cmp	r1, #0
   36110:	bne	36140 <flatcc_json_parser_union_type@@Base+0x14c>
   36114:	mov	r1, #7
   36118:	str	r0, [r5, #36]	; 0x24
   3611c:	add	r0, r0, #1
   36120:	ldr	r3, [r5, #4]
   36124:	sub	r0, r0, r3
   36128:	mov	r3, r2
   3612c:	str	r0, [r5, #20]
   36130:	str	r1, [r5, #24]
   36134:	b	36140 <flatcc_json_parser_union_type@@Base+0x14c>
   36138:	mov	r3, r0
   3613c:	strb	r1, [r4]
   36140:	cmp	r3, r7
   36144:	bne	36164 <flatcc_json_parser_union_type@@Base+0x170>
   36148:	ldr	r3, [fp, #16]
   3614c:	mov	r0, r5
   36150:	mov	r1, r7
   36154:	str	r4, [sp]
   36158:	bl	36250 <flatcc_json_parser_union_type@@Base+0x25c>
   3615c:	ldr	r2, [sp, #8]
   36160:	mov	r3, r0
   36164:	ldr	r0, [sp, #4]
   36168:	ldr	r1, [r0, sl, lsl #3]
   3616c:	cmp	r1, #0
   36170:	beq	36208 <flatcc_json_parser_union_type@@Base+0x214>
   36174:	ldr	r0, [r6, #4]
   36178:	cmp	r0, #0
   3617c:	beq	36230 <flatcc_json_parser_union_type@@Base+0x23c>
   36180:	sub	r0, r0, #1
   36184:	mov	sl, r3
   36188:	ldr	r7, [fp, #20]
   3618c:	str	r0, [r6, #4]
   36190:	ldr	r0, [r9, #8]
   36194:	ldr	r8, [r5, #4]
   36198:	ldr	r6, [r5, #16]
   3619c:	str	r0, [r5, #16]
   361a0:	ldr	r0, [r9, #4]
   361a4:	str	r0, [r5, #4]
   361a8:	add	r0, sp, #16
   361ac:	ldrb	r3, [r4]
   361b0:	add	r0, r0, #4
   361b4:	str	r0, [sp]
   361b8:	mov	r0, r5
   361bc:	strb	r3, [sp, #16]
   361c0:	blx	r7
   361c4:	ldr	r3, [sp, #8]
   361c8:	cmp	r0, r3
   361cc:	beq	3606c <flatcc_json_parser_union_type@@Base+0x78>
   361d0:	ldr	r1, [fp, #8]
   361d4:	ldr	r0, [r5]
   361d8:	ldr	r2, [sp, #16]
   361dc:	ldr	r3, [sp, #20]
   361e0:	bl	30920 <flatcc_builder_table_add_union@@Base>
   361e4:	cmp	r0, #0
   361e8:	beq	36220 <flatcc_json_parser_union_type@@Base+0x22c>
   361ec:	ldr	r0, [r5, #24]
   361f0:	cmp	r0, #0
   361f4:	bne	36068 <flatcc_json_parser_union_type@@Base+0x74>
   361f8:	str	sl, [r5, #36]	; 0x24
   361fc:	mov	r0, #28
   36200:	add	r2, sl, #1
   36204:	b	36058 <flatcc_json_parser_union_type@@Base+0x64>
   36208:	ldrb	r0, [r4]
   3620c:	ldr	r1, [r6, #4]
   36210:	cmp	r0, #0
   36214:	addne	r1, r1, #1
   36218:	str	r1, [r6, #4]
   3621c:	b	3606c <flatcc_json_parser_union_type@@Base+0x78>
   36220:	mov	r3, sl
   36224:	str	r8, [r5, #4]
   36228:	str	r6, [r5, #16]
   3622c:	b	3606c <flatcc_json_parser_union_type@@Base+0x78>
   36230:	movw	r0, #38180	; 0x9524
   36234:	movw	r1, #38195	; 0x9533
   36238:	movw	r3, #38269	; 0x957d
   3623c:	movw	r2, #965	; 0x3c5
   36240:	movt	r0, #4
   36244:	movt	r1, #4
   36248:	movt	r3, #4
   3624c:	bl	14f44 <__assert_fail@plt>
   36250:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   36254:	add	fp, sp, #28
   36258:	sub	sp, sp, #36	; 0x24
   3625c:	mov	r4, r2
   36260:	mov	r2, r1
   36264:	ldr	r1, [fp, #8]
   36268:	mov	r5, r0
   3626c:	mov	r0, #0
   36270:	mov	r6, r3
   36274:	cmp	r2, r4
   36278:	strb	r0, [r1]
   3627c:	beq	362e0 <flatcc_json_parser_union_type@@Base+0x2ec>
   36280:	ldrb	r0, [r2]
   36284:	cmp	r0, #46	; 0x2e
   36288:	beq	362a4 <flatcc_json_parser_union_type@@Base+0x2b0>
   3628c:	cmp	r0, #34	; 0x22
   36290:	bne	362d8 <flatcc_json_parser_union_type@@Base+0x2e4>
   36294:	mov	r0, #0
   36298:	add	r1, r2, #1
   3629c:	str	r0, [r5, #12]
   362a0:	b	362e4 <flatcc_json_parser_union_type@@Base+0x2f0>
   362a4:	ldr	r0, [r5, #24]
   362a8:	mov	r1, r4
   362ac:	cmp	r0, #0
   362b0:	bne	362e4 <flatcc_json_parser_union_type@@Base+0x2f0>
   362b4:	str	r2, [r5, #36]	; 0x24
   362b8:	add	r2, r2, #1
   362bc:	mov	r0, #5
   362c0:	ldr	r1, [r5, #4]
   362c4:	sub	r1, r2, r1
   362c8:	str	r1, [r5, #20]
   362cc:	str	r0, [r5, #24]
   362d0:	mov	r1, r4
   362d4:	b	362e4 <flatcc_json_parser_union_type@@Base+0x2f0>
   362d8:	mov	r0, #1
   362dc:	str	r0, [r5, #12]
   362e0:	mov	r1, r2
   362e4:	ldr	r0, [r5, #12]
   362e8:	cmp	r0, #0
   362ec:	beq	362f8 <flatcc_json_parser_union_type@@Base+0x304>
   362f0:	mov	r7, r1
   362f4:	b	36334 <flatcc_json_parser_union_type@@Base+0x340>
   362f8:	sub	r0, r4, r1
   362fc:	cmp	r0, #2
   36300:	blt	36324 <flatcc_json_parser_union_type@@Base+0x330>
   36304:	ldrb	r0, [r1]
   36308:	cmp	r0, #32
   3630c:	bhi	362f0 <flatcc_json_parser_union_type@@Base+0x2fc>
   36310:	bne	36324 <flatcc_json_parser_union_type@@Base+0x330>
   36314:	mov	r7, r1
   36318:	ldrb	r0, [r7, #1]!
   3631c:	cmp	r0, #32
   36320:	bhi	36334 <flatcc_json_parser_union_type@@Base+0x340>
   36324:	mov	r0, r5
   36328:	mov	r2, r4
   3632c:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   36330:	mov	r7, r0
   36334:	cmp	r7, r4
   36338:	beq	3640c <flatcc_json_parser_union_type@@Base+0x418>
   3633c:	add	sl, r6, #4
   36340:	add	r8, sp, #24
   36344:	add	r9, sp, #20
   36348:	str	r6, [sp, #12]
   3634c:	str	sl, [sp, #8]
   36350:	ldr	r6, [r6]
   36354:	add	r0, sp, #16
   36358:	mov	r1, r7
   3635c:	mov	r2, r4
   36360:	mov	r3, r9
   36364:	str	r8, [sp]
   36368:	str	r0, [sp, #4]
   3636c:	mov	r0, r5
   36370:	blx	r6
   36374:	cmp	r0, r4
   36378:	beq	3640c <flatcc_json_parser_union_type@@Base+0x418>
   3637c:	cmp	r0, r7
   36380:	bne	36394 <flatcc_json_parser_union_type@@Base+0x3a0>
   36384:	ldr	r6, [sl], #4
   36388:	cmp	r6, #0
   3638c:	bne	36354 <flatcc_json_parser_union_type@@Base+0x360>
   36390:	b	363e4 <flatcc_json_parser_union_type@@Base+0x3f0>
   36394:	ldr	r1, [sp, #20]
   36398:	cmp	r1, #0
   3639c:	bne	36418 <flatcc_json_parser_union_type@@Base+0x424>
   363a0:	ldr	r1, [sp, #24]
   363a4:	ldr	r2, [sp, #28]
   363a8:	subs	r3, r1, #256	; 0x100
   363ac:	sbcs	r2, r2, #0
   363b0:	bcs	3642c <flatcc_json_parser_union_type@@Base+0x438>
   363b4:	ldr	r2, [fp, #8]
   363b8:	ldr	r6, [sp, #12]
   363bc:	ldr	sl, [sp, #8]
   363c0:	mov	r7, r0
   363c4:	mov	r3, r2
   363c8:	ldrb	r2, [r2]
   363cc:	add	r1, r2, r1
   363d0:	strb	r1, [r3]
   363d4:	ldr	r1, [sp, #16]
   363d8:	cmp	r1, #0
   363dc:	bne	36350 <flatcc_json_parser_union_type@@Base+0x35c>
   363e0:	b	36410 <flatcc_json_parser_union_type@@Base+0x41c>
   363e4:	ldr	r0, [r5, #24]
   363e8:	cmp	r0, #0
   363ec:	bne	3640c <flatcc_json_parser_union_type@@Base+0x418>
   363f0:	str	r7, [r5, #36]	; 0x24
   363f4:	add	r2, r7, #1
   363f8:	mov	r0, #23
   363fc:	ldr	r1, [r5, #4]
   36400:	sub	r1, r2, r1
   36404:	str	r1, [r5, #20]
   36408:	str	r0, [r5, #24]
   3640c:	mov	r0, r4
   36410:	sub	sp, fp, #28
   36414:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   36418:	ldr	r1, [r5, #24]
   3641c:	cmp	r1, #0
   36420:	bne	3640c <flatcc_json_parser_union_type@@Base+0x418>
   36424:	mov	r1, #8
   36428:	b	3643c <flatcc_json_parser_union_type@@Base+0x448>
   3642c:	ldr	r1, [r5, #24]
   36430:	cmp	r1, #0
   36434:	bne	3640c <flatcc_json_parser_union_type@@Base+0x418>
   36438:	mov	r1, #7
   3643c:	str	r0, [r5, #36]	; 0x24
   36440:	add	r0, r0, #1
   36444:	ldr	r2, [r5, #4]
   36448:	sub	r0, r0, r2
   3644c:	str	r0, [r5, #20]
   36450:	str	r1, [r5, #24]
   36454:	b	3640c <flatcc_json_parser_union_type@@Base+0x418>

00036458 <flatcc_json_parser_union_vector@@Base>:
   36458:	push	{r4, r5, r6, r7, fp, lr}
   3645c:	add	fp, sp, #16
   36460:	sub	sp, sp, #16
   36464:	mov	r6, r1
   36468:	mov	r5, r0
   3646c:	ldr	r0, [r0]
   36470:	ldr	r1, [fp, #12]
   36474:	mov	r7, r3
   36478:	mov	r4, r2
   3647c:	bl	2e230 <flatcc_builder_get_user_frame_ptr@@Base>
   36480:	add	r2, r0, #8
   36484:	add	r3, r7, r7, lsl #1
   36488:	mov	r1, r2
   3648c:	ldr	r7, [r1, r3, lsl #3]!
   36490:	cmp	r7, #0
   36494:	beq	364cc <flatcc_json_parser_union_vector@@Base+0x74>
   36498:	ldr	r0, [r5, #24]
   3649c:	cmp	r0, #0
   364a0:	bne	364c0 <flatcc_json_parser_union_vector@@Base+0x68>
   364a4:	str	r6, [r5, #36]	; 0x24
   364a8:	add	r2, r6, #1
   364ac:	mov	r0, #28
   364b0:	ldr	r1, [r5, #4]
   364b4:	sub	r1, r2, r1
   364b8:	str	r1, [r5, #20]
   364bc:	str	r0, [r5, #24]
   364c0:	mov	r0, r4
   364c4:	sub	sp, fp, #16
   364c8:	pop	{r4, r5, r6, r7, fp, pc}
   364cc:	add	r2, r2, r3, lsl #3
   364d0:	ldr	r3, [r0, #4]
   364d4:	ldrb	r7, [r2, #12]
   364d8:	cmp	r7, #0
   364dc:	beq	36518 <flatcc_json_parser_union_vector@@Base+0xc0>
   364e0:	sub	r3, r3, #1
   364e4:	ldr	r1, [fp, #16]
   364e8:	ldr	r7, [fp, #8]
   364ec:	str	r3, [r0, #4]
   364f0:	ldr	r0, [r2, #16]
   364f4:	ldr	r3, [r2, #20]
   364f8:	mov	r2, r4
   364fc:	stm	sp, {r0, r7}
   36500:	str	r1, [sp, #8]
   36504:	mov	r0, r5
   36508:	mov	r1, r6
   3650c:	bl	3654c <flatcc_json_parser_union_vector@@Base+0xf4>
   36510:	sub	sp, fp, #16
   36514:	pop	{r4, r5, r6, r7, fp, pc}
   36518:	add	r3, r3, #1
   3651c:	str	r3, [r0, #4]
   36520:	ldr	r0, [r5, #16]
   36524:	str	r0, [r2, #8]
   36528:	ldr	r0, [r5, #4]
   3652c:	str	r0, [r2, #4]
   36530:	str	r6, [r1]
   36534:	mov	r0, r5
   36538:	mov	r1, r6
   3653c:	mov	r2, r4
   36540:	sub	sp, fp, #16
   36544:	pop	{r4, r5, r6, r7, fp, lr}
   36548:	b	3411c <flatcc_json_parser_generic_json@@Base>
   3654c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   36550:	add	fp, sp, #28
   36554:	sub	sp, sp, #12
   36558:	mov	r5, r0
   3655c:	mov	r0, #0
   36560:	mov	r8, r3
   36564:	mov	r6, r2
   36568:	mov	r7, r1
   3656c:	str	r0, [sp, #8]
   36570:	ldr	r0, [r5]
   36574:	bl	2f54c <flatcc_builder_start_offset_vector@@Base>
   36578:	cmp	r0, #0
   3657c:	beq	3659c <flatcc_json_parser_union_vector@@Base+0x144>
   36580:	ldr	r0, [r5, #24]
   36584:	cmp	r0, #0
   36588:	bne	36808 <flatcc_json_parser_union_vector@@Base+0x3b0>
   3658c:	str	r7, [r5, #36]	; 0x24
   36590:	mov	r0, #33	; 0x21
   36594:	add	r2, r7, #1
   36598:	b	367f8 <flatcc_json_parser_union_vector@@Base+0x3a0>
   3659c:	ldr	sl, [fp, #8]
   365a0:	cmp	r7, r6
   365a4:	beq	365d8 <flatcc_json_parser_union_vector@@Base+0x180>
   365a8:	ldrb	r0, [r7]
   365ac:	cmp	r0, #91	; 0x5b
   365b0:	bne	365d8 <flatcc_json_parser_union_vector@@Base+0x180>
   365b4:	add	r1, r7, #1
   365b8:	sub	r0, r6, r1
   365bc:	cmp	r0, #2
   365c0:	blt	3661c <flatcc_json_parser_union_vector@@Base+0x1c4>
   365c4:	ldrb	r0, [r1]
   365c8:	cmp	r0, #32
   365cc:	bls	3660c <flatcc_json_parser_union_vector@@Base+0x1b4>
   365d0:	mov	r7, r1
   365d4:	b	3662c <flatcc_json_parser_union_vector@@Base+0x1d4>
   365d8:	ldr	r0, [r5, #24]
   365dc:	mov	r9, r6
   365e0:	cmp	r0, #0
   365e4:	bne	367d8 <flatcc_json_parser_union_vector@@Base+0x380>
   365e8:	str	r7, [r5, #36]	; 0x24
   365ec:	add	r2, r7, #1
   365f0:	mov	r0, #22
   365f4:	mov	r9, r6
   365f8:	ldr	r1, [r5, #4]
   365fc:	sub	r1, r2, r1
   36600:	str	r1, [r5, #20]
   36604:	str	r0, [r5, #24]
   36608:	b	367d8 <flatcc_json_parser_union_vector@@Base+0x380>
   3660c:	bne	3661c <flatcc_json_parser_union_vector@@Base+0x1c4>
   36610:	ldrb	r0, [r7, #2]!
   36614:	cmp	r0, #32
   36618:	bhi	3662c <flatcc_json_parser_union_vector@@Base+0x1d4>
   3661c:	mov	r0, r5
   36620:	mov	r2, r6
   36624:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   36628:	mov	r7, r0
   3662c:	cmp	r7, r6
   36630:	mov	r4, r6
   36634:	beq	3666c <flatcc_json_parser_union_vector@@Base+0x214>
   36638:	ldrb	r0, [r7]
   3663c:	cmp	r0, #93	; 0x5d
   36640:	bne	36668 <flatcc_json_parser_union_vector@@Base+0x210>
   36644:	add	r1, r7, #1
   36648:	sub	r0, r6, r1
   3664c:	cmp	r0, #2
   36650:	blt	367c8 <flatcc_json_parser_union_vector@@Base+0x370>
   36654:	ldrb	r0, [r1]
   36658:	cmp	r0, #32
   3665c:	bls	367b4 <flatcc_json_parser_union_vector@@Base+0x35c>
   36660:	mov	r9, r1
   36664:	b	367d8 <flatcc_json_parser_union_vector@@Base+0x380>
   36668:	mov	r4, r7
   3666c:	cmp	sl, #0
   36670:	beq	36798 <flatcc_json_parser_union_vector@@Base+0x340>
   36674:	add	r0, r6, #1
   36678:	mov	sl, #0
   3667c:	add	r9, sp, #8
   36680:	str	r0, [sp, #4]
   36684:	ldr	r0, [r5]
   36688:	mov	r1, r8
   3668c:	bl	2e230 <flatcc_builder_get_user_frame_ptr@@Base>
   36690:	ldrb	r3, [r0, -sl]
   36694:	ldr	r7, [fp, #16]
   36698:	mov	r0, r5
   3669c:	mov	r1, r4
   366a0:	mov	r2, r6
   366a4:	str	r9, [sp]
   366a8:	blx	r7
   366ac:	cmp	r0, r6
   366b0:	beq	36808 <flatcc_json_parser_union_vector@@Base+0x3b0>
   366b4:	mov	r7, r0
   366b8:	ldr	r0, [r5]
   366bc:	mov	r1, #1
   366c0:	bl	2ef08 <flatcc_builder_extend_offset_vector@@Base>
   366c4:	cmp	r0, #0
   366c8:	beq	36580 <flatcc_json_parser_union_vector@@Base+0x128>
   366cc:	ldr	r1, [sp, #8]
   366d0:	str	r1, [r0]
   366d4:	sub	r0, r6, r7
   366d8:	cmp	r0, #2
   366dc:	blt	36708 <flatcc_json_parser_union_vector@@Base+0x2b0>
   366e0:	ldrb	r0, [r7]
   366e4:	cmp	r0, #32
   366e8:	bls	366f4 <flatcc_json_parser_union_vector@@Base+0x29c>
   366ec:	mov	r4, r7
   366f0:	b	3671c <flatcc_json_parser_union_vector@@Base+0x2c4>
   366f4:	bne	36708 <flatcc_json_parser_union_vector@@Base+0x2b0>
   366f8:	mov	r4, r7
   366fc:	ldrb	r0, [r4, #1]!
   36700:	cmp	r0, #32
   36704:	bhi	3671c <flatcc_json_parser_union_vector@@Base+0x2c4>
   36708:	mov	r0, r5
   3670c:	mov	r1, r7
   36710:	mov	r2, r6
   36714:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   36718:	mov	r4, r0
   3671c:	cmp	r4, r6
   36720:	beq	3688c <flatcc_json_parser_union_vector@@Base+0x434>
   36724:	ldrb	r0, [r4]
   36728:	cmp	r0, #44	; 0x2c
   3672c:	bne	36814 <flatcc_json_parser_union_vector@@Base+0x3bc>
   36730:	add	r1, r4, #1
   36734:	sub	r0, r6, r1
   36738:	cmp	r0, #2
   3673c:	blt	36764 <flatcc_json_parser_union_vector@@Base+0x30c>
   36740:	ldrb	r0, [r1]
   36744:	cmp	r0, #32
   36748:	bls	36754 <flatcc_json_parser_union_vector@@Base+0x2fc>
   3674c:	mov	r4, r1
   36750:	b	36774 <flatcc_json_parser_union_vector@@Base+0x31c>
   36754:	bne	36764 <flatcc_json_parser_union_vector@@Base+0x30c>
   36758:	ldrb	r0, [r4, #2]!
   3675c:	cmp	r0, #32
   36760:	bhi	36774 <flatcc_json_parser_union_vector@@Base+0x31c>
   36764:	mov	r0, r5
   36768:	mov	r2, r6
   3676c:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   36770:	mov	r4, r0
   36774:	cmp	r4, r6
   36778:	beq	36840 <flatcc_json_parser_union_vector@@Base+0x3e8>
   3677c:	ldrb	r0, [r4]
   36780:	cmp	r0, #93	; 0x5d
   36784:	beq	3681c <flatcc_json_parser_union_vector@@Base+0x3c4>
   36788:	ldr	r0, [fp, #8]
   3678c:	sub	sl, sl, #1
   36790:	adds	r0, r0, sl
   36794:	bne	36684 <flatcc_json_parser_union_vector@@Base+0x22c>
   36798:	ldr	r0, [r5, #24]
   3679c:	cmp	r0, #0
   367a0:	bne	36808 <flatcc_json_parser_union_vector@@Base+0x3b0>
   367a4:	str	r4, [r5, #36]	; 0x24
   367a8:	mov	r0, #30
   367ac:	add	r2, r4, #1
   367b0:	b	367f8 <flatcc_json_parser_union_vector@@Base+0x3a0>
   367b4:	bne	367c8 <flatcc_json_parser_union_vector@@Base+0x370>
   367b8:	ldrb	r0, [r7, #2]!
   367bc:	cmp	r0, #32
   367c0:	mov	r9, r7
   367c4:	bhi	367d8 <flatcc_json_parser_union_vector@@Base+0x380>
   367c8:	mov	r0, r5
   367cc:	mov	r2, r6
   367d0:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   367d4:	mov	r9, r0
   367d8:	cmp	sl, #0
   367dc:	beq	368c8 <flatcc_json_parser_union_vector@@Base+0x470>
   367e0:	ldr	r0, [r5, #24]
   367e4:	cmp	r0, #0
   367e8:	bne	36808 <flatcc_json_parser_union_vector@@Base+0x3b0>
   367ec:	str	r9, [r5, #36]	; 0x24
   367f0:	mov	r0, #30
   367f4:	add	r2, r9, #1
   367f8:	ldr	r1, [r5, #4]
   367fc:	sub	r1, r2, r1
   36800:	str	r1, [r5, #20]
   36804:	str	r0, [r5, #24]
   36808:	mov	r0, r6
   3680c:	sub	sp, fp, #28
   36810:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   36814:	cmp	r0, #93	; 0x5d
   36818:	bne	36860 <flatcc_json_parser_union_vector@@Base+0x408>
   3681c:	add	r1, r4, #1
   36820:	sub	r0, r6, r1
   36824:	cmp	r0, #2
   36828:	blt	368a8 <flatcc_json_parser_union_vector@@Base+0x450>
   3682c:	ldrb	r0, [r1]
   36830:	cmp	r0, #32
   36834:	bls	36894 <flatcc_json_parser_union_vector@@Base+0x43c>
   36838:	mov	r9, r1
   3683c:	b	368b8 <flatcc_json_parser_union_vector@@Base+0x460>
   36840:	ldr	r0, [r5, #24]
   36844:	mov	r9, r6
   36848:	cmp	r0, #0
   3684c:	bne	368b8 <flatcc_json_parser_union_vector@@Base+0x460>
   36850:	str	r6, [r5, #36]	; 0x24
   36854:	ldr	r2, [sp, #4]
   36858:	mov	r0, #9
   3685c:	b	3687c <flatcc_json_parser_union_vector@@Base+0x424>
   36860:	ldr	r0, [r5, #24]
   36864:	mov	r9, r6
   36868:	cmp	r0, #0
   3686c:	bne	368b8 <flatcc_json_parser_union_vector@@Base+0x460>
   36870:	str	r4, [r5, #36]	; 0x24
   36874:	mov	r0, #9
   36878:	add	r2, r4, #1
   3687c:	ldr	r1, [r5, #4]
   36880:	sub	r1, r2, r1
   36884:	str	r1, [r5, #20]
   36888:	str	r0, [r5, #24]
   3688c:	mov	r9, r6
   36890:	b	368b8 <flatcc_json_parser_union_vector@@Base+0x460>
   36894:	bne	368a8 <flatcc_json_parser_union_vector@@Base+0x450>
   36898:	ldrb	r0, [r4, #2]!
   3689c:	cmp	r0, #32
   368a0:	mov	r9, r4
   368a4:	bhi	368b8 <flatcc_json_parser_union_vector@@Base+0x460>
   368a8:	mov	r0, r5
   368ac:	mov	r2, r6
   368b0:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   368b4:	mov	r9, r0
   368b8:	ldr	r0, [fp, #8]
   368bc:	add	r0, r0, sl
   368c0:	cmp	r0, #1
   368c4:	bne	367e0 <flatcc_json_parser_union_vector@@Base+0x388>
   368c8:	ldr	r0, [r5]
   368cc:	mov	r1, r8
   368d0:	bl	2e230 <flatcc_builder_get_user_frame_ptr@@Base>
   368d4:	mov	r1, r0
   368d8:	ldr	r0, [r5]
   368dc:	bl	30834 <flatcc_builder_end_offset_vector_for_unions@@Base>
   368e0:	cmp	r0, #0
   368e4:	str	r0, [sp, #8]
   368e8:	beq	36910 <flatcc_json_parser_union_vector@@Base+0x4b8>
   368ec:	ldr	r1, [fp, #12]
   368f0:	ldr	r0, [r5]
   368f4:	bl	30a20 <flatcc_builder_table_add_offset@@Base>
   368f8:	cmp	r0, #0
   368fc:	beq	36910 <flatcc_json_parser_union_vector@@Base+0x4b8>
   36900:	ldr	r1, [sp, #8]
   36904:	mov	r6, r9
   36908:	str	r1, [r0]
   3690c:	b	36808 <flatcc_json_parser_union_vector@@Base+0x3b0>
   36910:	mov	r7, r9
   36914:	b	36580 <flatcc_json_parser_union_vector@@Base+0x128>

00036918 <flatcc_json_parser_union_type_vector@@Base>:
   36918:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3691c:	add	fp, sp, #28
   36920:	sub	sp, sp, #44	; 0x2c
   36924:	mov	r7, r1
   36928:	mov	r5, r0
   3692c:	ldr	r0, [r0]
   36930:	ldr	r1, [fp, #12]
   36934:	mov	r4, r3
   36938:	mov	r6, r2
   3693c:	bl	2e230 <flatcc_builder_get_user_frame_ptr@@Base>
   36940:	add	r0, r0, #8
   36944:	add	sl, r4, r4, lsl #1
   36948:	add	r9, r0, sl, lsl #3
   3694c:	mov	r0, r9
   36950:	ldrb	r1, [r0, #12]!
   36954:	cmp	r1, #0
   36958:	beq	36978 <flatcc_json_parser_union_type_vector@@Base+0x60>
   3695c:	ldr	r0, [r5, #24]
   36960:	cmp	r0, #0
   36964:	bne	36e24 <flatcc_json_parser_union_type_vector@@Base+0x50c>
   36968:	mov	r0, #28
   3696c:	str	r7, [r5, #36]	; 0x24
   36970:	add	r2, r7, #1
   36974:	b	36e14 <flatcc_json_parser_union_type_vector@@Base+0x4fc>
   36978:	mov	r1, #1
   3697c:	mov	r2, #1
   36980:	mvn	r3, #0
   36984:	strb	r1, [r0]
   36988:	mov	r1, #1
   3698c:	ldr	r0, [r5]
   36990:	bl	2f4c0 <flatcc_builder_start_vector@@Base>
   36994:	cmp	r0, #0
   36998:	beq	369a4 <flatcc_json_parser_union_type_vector@@Base+0x8c>
   3699c:	mov	r4, r7
   369a0:	b	36dfc <flatcc_json_parser_union_type_vector@@Base+0x4e4>
   369a4:	cmp	r7, r6
   369a8:	beq	369dc <flatcc_json_parser_union_type_vector@@Base+0xc4>
   369ac:	ldrb	r0, [r7]
   369b0:	cmp	r0, #91	; 0x5b
   369b4:	bne	369dc <flatcc_json_parser_union_type_vector@@Base+0xc4>
   369b8:	add	r1, r7, #1
   369bc:	sub	r0, r6, r1
   369c0:	cmp	r0, #2
   369c4:	blt	36a20 <flatcc_json_parser_union_type_vector@@Base+0x108>
   369c8:	ldrb	r0, [r1]
   369cc:	cmp	r0, #32
   369d0:	bls	36a10 <flatcc_json_parser_union_type_vector@@Base+0xf8>
   369d4:	mov	r7, r1
   369d8:	b	36a30 <flatcc_json_parser_union_type_vector@@Base+0x118>
   369dc:	ldr	r0, [r5, #24]
   369e0:	mov	r8, r6
   369e4:	cmp	r0, #0
   369e8:	bne	36cf8 <flatcc_json_parser_union_type_vector@@Base+0x3e0>
   369ec:	str	r7, [r5, #36]	; 0x24
   369f0:	mov	r0, #22
   369f4:	add	r2, r7, #1
   369f8:	ldr	r1, [r5, #4]
   369fc:	sub	r1, r2, r1
   36a00:	str	r1, [r5, #20]
   36a04:	str	r0, [r5, #24]
   36a08:	mov	r8, r6
   36a0c:	b	36cf8 <flatcc_json_parser_union_type_vector@@Base+0x3e0>
   36a10:	bne	36a20 <flatcc_json_parser_union_type_vector@@Base+0x108>
   36a14:	ldrb	r0, [r7, #2]!
   36a18:	cmp	r0, #32
   36a1c:	bhi	36a30 <flatcc_json_parser_union_type_vector@@Base+0x118>
   36a20:	mov	r0, r5
   36a24:	mov	r2, r6
   36a28:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   36a2c:	mov	r7, r0
   36a30:	cmp	r7, r6
   36a34:	mov	r4, r6
   36a38:	beq	36a70 <flatcc_json_parser_union_type_vector@@Base+0x158>
   36a3c:	ldrb	r0, [r7]
   36a40:	cmp	r0, #93	; 0x5d
   36a44:	bne	36a6c <flatcc_json_parser_union_type_vector@@Base+0x154>
   36a48:	add	r1, r7, #1
   36a4c:	sub	r0, r6, r1
   36a50:	cmp	r0, #2
   36a54:	blt	36ce8 <flatcc_json_parser_union_type_vector@@Base+0x3d0>
   36a58:	ldrb	r0, [r1]
   36a5c:	cmp	r0, #32
   36a60:	bls	36c98 <flatcc_json_parser_union_type_vector@@Base+0x380>
   36a64:	mov	r8, r1
   36a68:	b	36cf8 <flatcc_json_parser_union_type_vector@@Base+0x3e0>
   36a6c:	mov	r4, r7
   36a70:	ldr	r0, [r5]
   36a74:	mov	r1, #1
   36a78:	bl	2eca8 <flatcc_builder_extend_vector@@Base>
   36a7c:	cmp	r0, #0
   36a80:	beq	36dfc <flatcc_json_parser_union_type_vector@@Base+0x4e4>
   36a84:	mov	r1, r0
   36a88:	add	r0, r6, #1
   36a8c:	str	r0, [sp, #16]
   36a90:	mov	r8, #0
   36a94:	cmp	r4, r6
   36a98:	str	r1, [sp, #20]
   36a9c:	str	r8, [sp, #36]	; 0x24
   36aa0:	str	r8, [sp, #32]
   36aa4:	strb	r8, [sp, #27]
   36aa8:	str	r8, [sp, #28]
   36aac:	beq	36b50 <flatcc_json_parser_union_type_vector@@Base+0x238>
   36ab0:	add	r0, sp, #32
   36ab4:	mov	r1, r4
   36ab8:	mov	r2, r6
   36abc:	add	r3, sp, #28
   36ac0:	str	r0, [sp]
   36ac4:	mov	r0, r5
   36ac8:	bl	356c0 <flatcc_json_parser_integer@@Base>
   36acc:	cmp	r0, r4
   36ad0:	beq	36b0c <flatcc_json_parser_union_type_vector@@Base+0x1f4>
   36ad4:	mov	r7, r0
   36ad8:	ldr	r0, [sp, #28]
   36adc:	cmp	r0, #0
   36ae0:	beq	36b14 <flatcc_json_parser_union_type_vector@@Base+0x1fc>
   36ae4:	ldr	r0, [r5, #24]
   36ae8:	cmp	r0, #0
   36aec:	bne	36b50 <flatcc_json_parser_union_type_vector@@Base+0x238>
   36af0:	str	r7, [r5, #36]	; 0x24
   36af4:	add	r1, r7, #1
   36af8:	ldr	r0, [r5, #4]
   36afc:	sub	r0, r1, r0
   36b00:	str	r0, [r5, #20]
   36b04:	mov	r0, #8
   36b08:	b	36b4c <flatcc_json_parser_union_type_vector@@Base+0x234>
   36b0c:	mov	r7, r4
   36b10:	b	36b54 <flatcc_json_parser_union_type_vector@@Base+0x23c>
   36b14:	ldr	r0, [sp, #32]
   36b18:	ldr	r1, [sp, #36]	; 0x24
   36b1c:	subs	r2, r0, #256	; 0x100
   36b20:	sbcs	r1, r1, #0
   36b24:	bcc	36c8c <flatcc_json_parser_union_type_vector@@Base+0x374>
   36b28:	ldr	r0, [r5, #24]
   36b2c:	cmp	r0, #0
   36b30:	bne	36b50 <flatcc_json_parser_union_type_vector@@Base+0x238>
   36b34:	str	r7, [r5, #36]	; 0x24
   36b38:	add	r1, r7, #1
   36b3c:	ldr	r0, [r5, #4]
   36b40:	sub	r0, r1, r0
   36b44:	str	r0, [r5, #20]
   36b48:	mov	r0, #7
   36b4c:	str	r0, [r5, #24]
   36b50:	mov	r7, r6
   36b54:	cmp	r4, r7
   36b58:	bne	36b8c <flatcc_json_parser_union_type_vector@@Base+0x274>
   36b5c:	ldr	r3, [fp, #16]
   36b60:	add	r0, sp, #27
   36b64:	mov	r1, r4
   36b68:	mov	r2, r6
   36b6c:	str	r0, [sp]
   36b70:	mov	r0, r5
   36b74:	bl	36250 <flatcc_json_parser_union_type@@Base+0x25c>
   36b78:	mov	r7, r0
   36b7c:	cmp	r0, r4
   36b80:	cmpne	r7, r6
   36b84:	beq	3699c <flatcc_json_parser_union_type_vector@@Base+0x84>
   36b88:	ldrb	r8, [sp, #27]
   36b8c:	ldr	r1, [fp, #24]
   36b90:	uxtb	r0, r8
   36b94:	blx	r1
   36b98:	cmp	r0, #0
   36b9c:	bne	36bb4 <flatcc_json_parser_union_type_vector@@Base+0x29c>
   36ba0:	ldrb	r0, [r5, #8]
   36ba4:	tst	r0, #1
   36ba8:	beq	36e80 <flatcc_json_parser_union_type_vector@@Base+0x568>
   36bac:	mov	r8, #0
   36bb0:	strb	r8, [sp, #27]
   36bb4:	ldr	r0, [sp, #20]
   36bb8:	strb	r8, [r0]
   36bbc:	sub	r0, r6, r7
   36bc0:	cmp	r0, #2
   36bc4:	blt	36bf0 <flatcc_json_parser_union_type_vector@@Base+0x2d8>
   36bc8:	ldrb	r0, [r7]
   36bcc:	cmp	r0, #32
   36bd0:	bls	36bdc <flatcc_json_parser_union_type_vector@@Base+0x2c4>
   36bd4:	mov	r4, r7
   36bd8:	b	36c04 <flatcc_json_parser_union_type_vector@@Base+0x2ec>
   36bdc:	bne	36bf0 <flatcc_json_parser_union_type_vector@@Base+0x2d8>
   36be0:	mov	r4, r7
   36be4:	ldrb	r0, [r4, #1]!
   36be8:	cmp	r0, #32
   36bec:	bhi	36c04 <flatcc_json_parser_union_type_vector@@Base+0x2ec>
   36bf0:	mov	r0, r5
   36bf4:	mov	r1, r7
   36bf8:	mov	r2, r6
   36bfc:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   36c00:	mov	r4, r0
   36c04:	cmp	r4, r6
   36c08:	beq	36a08 <flatcc_json_parser_union_type_vector@@Base+0xf0>
   36c0c:	ldrb	r0, [r4]
   36c10:	cmp	r0, #44	; 0x2c
   36c14:	bne	36cb0 <flatcc_json_parser_union_type_vector@@Base+0x398>
   36c18:	add	r1, r4, #1
   36c1c:	sub	r0, r6, r1
   36c20:	cmp	r0, #2
   36c24:	blt	36c4c <flatcc_json_parser_union_type_vector@@Base+0x334>
   36c28:	ldrb	r0, [r1]
   36c2c:	cmp	r0, #32
   36c30:	bls	36c3c <flatcc_json_parser_union_type_vector@@Base+0x324>
   36c34:	mov	r4, r1
   36c38:	b	36c5c <flatcc_json_parser_union_type_vector@@Base+0x344>
   36c3c:	bne	36c4c <flatcc_json_parser_union_type_vector@@Base+0x334>
   36c40:	ldrb	r0, [r4, #2]!
   36c44:	cmp	r0, #32
   36c48:	bhi	36c5c <flatcc_json_parser_union_type_vector@@Base+0x344>
   36c4c:	mov	r0, r5
   36c50:	mov	r2, r6
   36c54:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   36c58:	mov	r4, r0
   36c5c:	cmp	r4, r6
   36c60:	beq	36e40 <flatcc_json_parser_union_type_vector@@Base+0x528>
   36c64:	ldrb	r0, [r4]
   36c68:	cmp	r0, #93	; 0x5d
   36c6c:	beq	36cb8 <flatcc_json_parser_union_type_vector@@Base+0x3a0>
   36c70:	ldr	r0, [r5]
   36c74:	mov	r1, #1
   36c78:	bl	2eca8 <flatcc_builder_extend_vector@@Base>
   36c7c:	mov	r1, r0
   36c80:	cmp	r0, #0
   36c84:	bne	36a90 <flatcc_json_parser_union_type_vector@@Base+0x178>
   36c88:	b	36dfc <flatcc_json_parser_union_type_vector@@Base+0x4e4>
   36c8c:	mov	r8, r0
   36c90:	strb	r0, [sp, #27]
   36c94:	b	36b54 <flatcc_json_parser_union_type_vector@@Base+0x23c>
   36c98:	bne	36ce8 <flatcc_json_parser_union_type_vector@@Base+0x3d0>
   36c9c:	ldrb	r0, [r7, #2]!
   36ca0:	cmp	r0, #32
   36ca4:	mov	r8, r7
   36ca8:	bls	36ce8 <flatcc_json_parser_union_type_vector@@Base+0x3d0>
   36cac:	b	36cf8 <flatcc_json_parser_union_type_vector@@Base+0x3e0>
   36cb0:	cmp	r0, #93	; 0x5d
   36cb4:	bne	36e60 <flatcc_json_parser_union_type_vector@@Base+0x548>
   36cb8:	add	r1, r4, #1
   36cbc:	sub	r0, r6, r1
   36cc0:	cmp	r0, #2
   36cc4:	blt	36ce8 <flatcc_json_parser_union_type_vector@@Base+0x3d0>
   36cc8:	ldrb	r0, [r1]
   36ccc:	cmp	r0, #32
   36cd0:	bhi	36a64 <flatcc_json_parser_union_type_vector@@Base+0x14c>
   36cd4:	bne	36ce8 <flatcc_json_parser_union_type_vector@@Base+0x3d0>
   36cd8:	ldrb	r0, [r4, #2]!
   36cdc:	cmp	r0, #32
   36ce0:	mov	r8, r4
   36ce4:	bhi	36cf8 <flatcc_json_parser_union_type_vector@@Base+0x3e0>
   36ce8:	mov	r0, r5
   36cec:	mov	r2, r6
   36cf0:	bl	33854 <flatcc_json_parser_space_ext@@Base>
   36cf4:	mov	r8, r0
   36cf8:	ldr	r0, [r5]
   36cfc:	bl	3061c <flatcc_builder_vector_count@@Base>
   36d00:	str	r0, [r9, #16]
   36d04:	mov	r4, r0
   36d08:	ldr	r0, [r5]
   36d0c:	mov	r1, r4
   36d10:	bl	2e0e0 <flatcc_builder_enter_user_frame@@Base>
   36d14:	mov	r9, r0
   36d18:	ldr	r0, [r5]
   36d1c:	mov	r1, r9
   36d20:	bl	2e230 <flatcc_builder_get_user_frame_ptr@@Base>
   36d24:	mov	r7, r0
   36d28:	ldr	r0, [r5]
   36d2c:	bl	30628 <flatcc_builder_vector_edit@@Base>
   36d30:	mov	r1, r0
   36d34:	mov	r0, r7
   36d38:	mov	r2, r4
   36d3c:	bl	14e60 <memcpy@plt>
   36d40:	ldr	r0, [r5]
   36d44:	bl	3052c <flatcc_builder_end_vector@@Base>
   36d48:	cmp	r0, #0
   36d4c:	beq	36df8 <flatcc_json_parser_union_type_vector@@Base+0x4e0>
   36d50:	ldr	r1, [fp, #8]
   36d54:	mov	r7, r0
   36d58:	ldr	r0, [r5]
   36d5c:	sub	r1, r1, #1
   36d60:	bl	30a20 <flatcc_builder_table_add_offset@@Base>
   36d64:	cmp	r0, #0
   36d68:	beq	36df8 <flatcc_json_parser_union_type_vector@@Base+0x4e0>
   36d6c:	str	r7, [r0]
   36d70:	ldr	r1, [fp, #12]
   36d74:	ldr	r0, [r5]
   36d78:	bl	2e230 <flatcc_builder_get_user_frame_ptr@@Base>
   36d7c:	add	r2, r0, #8
   36d80:	mov	r3, r2
   36d84:	ldr	r1, [r3, sl, lsl #3]!
   36d88:	str	r9, [r3, #20]
   36d8c:	cmp	r1, #0
   36d90:	ldr	r3, [r0, #4]
   36d94:	beq	36e30 <flatcc_json_parser_union_type_vector@@Base+0x518>
   36d98:	cmp	r3, #0
   36d9c:	beq	36e94 <flatcc_json_parser_union_type_vector@@Base+0x57c>
   36da0:	sub	r3, r3, #1
   36da4:	ldr	ip, [fp, #20]
   36da8:	str	r3, [r0, #4]
   36dac:	add	r0, r2, sl, lsl #3
   36db0:	mov	r3, r9
   36db4:	ldr	r2, [r0, #8]
   36db8:	ldr	sl, [r5, #4]
   36dbc:	ldr	r7, [r5, #16]
   36dc0:	str	r2, [r5, #16]
   36dc4:	mov	r2, r6
   36dc8:	ldr	r0, [r0, #4]
   36dcc:	str	r0, [r5, #4]
   36dd0:	ldr	r0, [fp, #8]
   36dd4:	str	r4, [sp]
   36dd8:	stmib	sp, {r0, ip}
   36ddc:	mov	r0, r5
   36de0:	bl	3654c <flatcc_json_parser_union_vector@@Base+0xf4>
   36de4:	cmp	r0, r6
   36de8:	beq	36e24 <flatcc_json_parser_union_type_vector@@Base+0x50c>
   36dec:	str	sl, [r5, #4]
   36df0:	str	r7, [r5, #16]
   36df4:	b	36e38 <flatcc_json_parser_union_type_vector@@Base+0x520>
   36df8:	mov	r4, r8
   36dfc:	ldr	r0, [r5, #24]
   36e00:	cmp	r0, #0
   36e04:	bne	36e24 <flatcc_json_parser_union_type_vector@@Base+0x50c>
   36e08:	str	r4, [r5, #36]	; 0x24
   36e0c:	mov	r0, #33	; 0x21
   36e10:	add	r2, r4, #1
   36e14:	ldr	r1, [r5, #4]
   36e18:	sub	r1, r2, r1
   36e1c:	str	r1, [r5, #20]
   36e20:	str	r0, [r5, #24]
   36e24:	mov	r0, r6
   36e28:	sub	sp, fp, #28
   36e2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   36e30:	add	r1, r3, #1
   36e34:	str	r1, [r0, #4]
   36e38:	mov	r6, r8
   36e3c:	b	36e24 <flatcc_json_parser_union_type_vector@@Base+0x50c>
   36e40:	ldr	r0, [r5, #24]
   36e44:	mov	r8, r6
   36e48:	cmp	r0, #0
   36e4c:	bne	36cf8 <flatcc_json_parser_union_type_vector@@Base+0x3e0>
   36e50:	str	r6, [r5, #36]	; 0x24
   36e54:	ldr	r2, [sp, #16]
   36e58:	mov	r0, #9
   36e5c:	b	369f8 <flatcc_json_parser_union_type_vector@@Base+0xe0>
   36e60:	ldr	r0, [r5, #24]
   36e64:	mov	r8, r6
   36e68:	cmp	r0, #0
   36e6c:	bne	36cf8 <flatcc_json_parser_union_type_vector@@Base+0x3e0>
   36e70:	str	r4, [r5, #36]	; 0x24
   36e74:	mov	r0, #9
   36e78:	add	r2, r4, #1
   36e7c:	b	369f8 <flatcc_json_parser_union_type_vector@@Base+0xe0>
   36e80:	ldr	r0, [r5, #24]
   36e84:	cmp	r0, #0
   36e88:	bne	36e24 <flatcc_json_parser_union_type_vector@@Base+0x50c>
   36e8c:	mov	r0, #15
   36e90:	b	3696c <flatcc_json_parser_union_type_vector@@Base+0x54>
   36e94:	movw	r0, #38180	; 0x9524
   36e98:	movw	r1, #38195	; 0x9533
   36e9c:	movw	r3, #38473	; 0x9649
   36ea0:	movw	r2, #1122	; 0x462
   36ea4:	movt	r0, #4
   36ea8:	movt	r1, #4
   36eac:	movt	r3, #4
   36eb0:	bl	14f44 <__assert_fail@plt>

00036eb4 <flatcc_json_parser_table_as_root@@Base>:
   36eb4:	push	{r4, r5, r6, r7, fp, lr}
   36eb8:	add	fp, sp, #16
   36ebc:	sub	sp, sp, #48	; 0x30
   36ec0:	add	r5, sp, #4
   36ec4:	cmp	r1, #0
   36ec8:	mov	r6, r0
   36ecc:	vmov.i32	q8, #0	; 0x00000000
   36ed0:	add	r7, r2, r3
   36ed4:	mov	r4, r2
   36ed8:	movne	r5, r1
   36edc:	mov	r1, #1
   36ee0:	add	r0, r5, #12
   36ee4:	vst1.32	{d16-d17}, [r0]
   36ee8:	add	r0, r5, #28
   36eec:	vst1.32	{d16-d17}, [r0]
   36ef0:	ldr	r0, [fp, #8]
   36ef4:	str	r6, [r5]
   36ef8:	str	r2, [r5, #4]
   36efc:	str	r0, [r5, #8]
   36f00:	str	r1, [r5, #16]
   36f04:	mov	r1, #2
   36f08:	str	r2, [r5, #28]
   36f0c:	str	r7, [r5, #32]
   36f10:	str	r2, [r5, #36]	; 0x24
   36f14:	mov	r2, #0
   36f18:	and	r3, r1, r0, lsr #1
   36f1c:	ldr	r1, [fp, #12]
   36f20:	mov	r0, r6
   36f24:	bl	2e810 <flatcc_builder_start_buffer@@Base>
   36f28:	mov	r1, r0
   36f2c:	mvn	r0, #0
   36f30:	cmp	r1, #0
   36f34:	bne	36f78 <flatcc_json_parser_table_as_root@@Base+0xc4>
   36f38:	ldr	ip, [fp, #16]
   36f3c:	mov	r3, sp
   36f40:	mov	r0, r5
   36f44:	mov	r1, r4
   36f48:	mov	r2, r7
   36f4c:	blx	ip
   36f50:	ldr	r0, [r5, #24]
   36f54:	cmp	r0, #0
   36f58:	bne	36f78 <flatcc_json_parser_table_as_root@@Base+0xc4>
   36f5c:	ldr	r1, [sp]
   36f60:	mov	r0, r6
   36f64:	bl	2ea00 <flatcc_builder_end_buffer@@Base>
   36f68:	cmp	r0, #0
   36f6c:	mvn	r0, #0
   36f70:	movne	r0, #0
   36f74:	strne	r4, [r5, #40]	; 0x28
   36f78:	sub	sp, fp, #16
   36f7c:	pop	{r4, r5, r6, r7, fp, pc}

00036f80 <flatcc_json_parser_struct_as_root@@Base>:
   36f80:	push	{r4, r5, r6, r7, fp, lr}
   36f84:	add	fp, sp, #16
   36f88:	sub	sp, sp, #48	; 0x30
   36f8c:	add	r5, sp, #4
   36f90:	cmp	r1, #0
   36f94:	mov	r6, r0
   36f98:	vmov.i32	q8, #0	; 0x00000000
   36f9c:	add	r7, r2, r3
   36fa0:	mov	r4, r2
   36fa4:	movne	r5, r1
   36fa8:	mov	r1, #1
   36fac:	add	r0, r5, #12
   36fb0:	vst1.32	{d16-d17}, [r0]
   36fb4:	add	r0, r5, #28
   36fb8:	vst1.32	{d16-d17}, [r0]
   36fbc:	ldr	r0, [fp, #8]
   36fc0:	str	r6, [r5]
   36fc4:	str	r2, [r5, #4]
   36fc8:	str	r0, [r5, #8]
   36fcc:	str	r1, [r5, #16]
   36fd0:	mov	r1, #2
   36fd4:	str	r2, [r5, #28]
   36fd8:	str	r7, [r5, #32]
   36fdc:	str	r2, [r5, #36]	; 0x24
   36fe0:	mov	r2, #0
   36fe4:	and	r3, r1, r0, lsr #1
   36fe8:	ldr	r1, [fp, #12]
   36fec:	mov	r0, r6
   36ff0:	bl	2e810 <flatcc_builder_start_buffer@@Base>
   36ff4:	mov	r1, r0
   36ff8:	mvn	r0, #0
   36ffc:	cmp	r1, #0
   37000:	bne	37044 <flatcc_json_parser_struct_as_root@@Base+0xc4>
   37004:	ldr	ip, [fp, #16]
   37008:	mov	r3, sp
   3700c:	mov	r0, r5
   37010:	mov	r1, r4
   37014:	mov	r2, r7
   37018:	blx	ip
   3701c:	ldr	r0, [r5, #24]
   37020:	cmp	r0, #0
   37024:	bne	37044 <flatcc_json_parser_struct_as_root@@Base+0xc4>
   37028:	ldr	r1, [sp]
   3702c:	mov	r0, r6
   37030:	bl	2ea00 <flatcc_builder_end_buffer@@Base>
   37034:	cmp	r0, #0
   37038:	mvn	r0, #0
   3703c:	movne	r0, #0
   37040:	strne	r4, [r5, #40]	; 0x28
   37044:	sub	sp, fp, #16
   37048:	pop	{r4, r5, r6, r7, fp, pc}
   3704c:	andeq	r0, r0, r0

00037050 <flatcc_json_printer_error_string@@Base>:
   37050:	cmp	r0, #3
   37054:	movwhi	r0, #35066	; 0x88fa
   37058:	movthi	r0, #4
   3705c:	bxhi	lr
   37060:	movw	r1, #41836	; 0xa36c
   37064:	movt	r1, #4
   37068:	ldr	r0, [r1, r0, lsl #2]
   3706c:	bx	lr

00037070 <flatcc_json_printer_fmt_float@@Base>:
   37070:	vcvt.f64.f32	d0, s0
   37074:	b	37078 <flatcc_json_printer_fmt_float@@Base+0x8>
   37078:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3707c:	add	fp, sp, #28
   37080:	sub	sp, sp, #4
   37084:	vpush	{d8}
   37088:	sub	sp, sp, #168	; 0xa8
   3708c:	cmp	r0, #0
   37090:	beq	378a0 <flatcc_json_printer_fmt_float@@Base+0x830>
   37094:	vmov	r3, r2, d0
   37098:	mov	r5, #-2147483648	; 0x80000000
   3709c:	mov	r6, #0
   370a0:	vorr	d8, d0, d0
   370a4:	add	r1, r5, #266338304	; 0xfe00000
   370a8:	lsl	r7, r2, #1
   370ac:	subs	r6, r6, r3, lsl #1
   370b0:	add	r1, r1, #1879048192	; 0x70000000
   370b4:	orr	r7, r7, r3, lsr #31
   370b8:	sbcs	r1, r1, r7
   370bc:	bcs	370dc <flatcc_json_printer_fmt_float@@Base+0x6c>
   370c0:	movw	r1, #39631	; 0x9acf
   370c4:	movt	r1, #4
   370c8:	sub	sp, fp, #40	; 0x28
   370cc:	vpop	{d8}
   370d0:	add	sp, sp, #4
   370d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   370d8:	b	14f2c <sprintf@plt>
   370dc:	cmn	r2, #1
   370e0:	ble	370ec <flatcc_json_printer_fmt_float@@Base+0x7c>
   370e4:	mov	r4, r0
   370e8:	b	37100 <flatcc_json_printer_fmt_float@@Base+0x90>
   370ec:	mov	r1, #45	; 0x2d
   370f0:	mov	r4, r0
   370f4:	vneg.f64	d8, d8
   370f8:	eor	r2, r2, r5
   370fc:	strb	r1, [r4], #1
   37100:	movw	r5, #0
   37104:	movt	r5, #32752	; 0x7ff0
   37108:	eor	r1, r2, r5
   3710c:	orrs	r1, r3, r1
   37110:	beq	37128 <flatcc_json_printer_fmt_float@@Base+0xb8>
   37114:	orrs	r1, r3, r2
   37118:	bne	3713c <flatcc_json_printer_fmt_float@@Base+0xcc>
   3711c:	mov	r1, #48	; 0x30
   37120:	strh	r1, [r4], #1
   37124:	b	37134 <flatcc_json_printer_fmt_float@@Base+0xc4>
   37128:	movw	r1, #28265	; 0x6e69
   3712c:	movt	r1, #102	; 0x66
   37130:	str	r1, [r4], #3
   37134:	sub	r0, r4, r0
   37138:	b	37888 <flatcc_json_printer_fmt_float@@Base+0x818>
   3713c:	vmov	r6, r7, d8
   37140:	str	r0, [sp, #76]	; 0x4c
   37144:	str	r4, [sp, #100]	; 0x64
   37148:	ands	sl, r7, r5
   3714c:	bfc	r7, #20, #12
   37150:	beq	37168 <flatcc_json_printer_fmt_float@@Base+0xf8>
   37154:	movw	r0, #64461	; 0xfbcd
   37158:	orr	r8, r7, #1048576	; 0x100000
   3715c:	movt	r0, #65535	; 0xffff
   37160:	add	r5, r0, sl, lsr #20
   37164:	b	37174 <flatcc_json_printer_fmt_float@@Base+0x104>
   37168:	movw	r5, #64462	; 0xfbce
   3716c:	mov	r8, r7
   37170:	movt	r5, #65535	; 0xffff
   37174:	mov	r4, #0
   37178:	sub	r0, fp, #88	; 0x58
   3717c:	mov	r2, r6
   37180:	mov	r3, r8
   37184:	str	r5, [sp]
   37188:	str	r4, [sp, #4]
   3718c:	bl	427dc <flatcc_json_printer_clear@@Base+0xe0>
   37190:	mov	r0, #1
   37194:	str	r4, [sp, #4]
   37198:	sub	r9, r5, #1
   3719c:	orr	r2, r0, r6, lsl #1
   371a0:	lsl	r0, r8, #1
   371a4:	str	r9, [sp]
   371a8:	orr	r4, r0, r6, lsr #31
   371ac:	add	r0, sp, #104	; 0x68
   371b0:	mov	r3, r4
   371b4:	bl	427dc <flatcc_json_printer_clear@@Base+0xe0>
   371b8:	vcmpe.f64	d8, #0.0
   371bc:	vmrs	APSR_nzcv, fpscr
   371c0:	ble	378c0 <flatcc_json_printer_fmt_float@@Base+0x850>
   371c4:	vldr	d16, [pc, #940]	; 37578 <flatcc_json_printer_fmt_float@@Base+0x508>
   371c8:	vcmpe.f64	d8, d16
   371cc:	vmrs	APSR_nzcv, fpscr
   371d0:	bhi	378c0 <flatcc_json_printer_fmt_float@@Base+0x850>
   371d4:	orrs	r1, r6, r7
   371d8:	clz	r2, sl
   371dc:	mvn	r3, #60	; 0x3c
   371e0:	lsl	r0, r8, #2
   371e4:	vldr	d16, [pc, #916]	; 37580 <flatcc_json_printer_fmt_float@@Base+0x510>
   371e8:	movwne	r1, #1
   371ec:	lsr	r2, r2, #5
   371f0:	orrs	r1, r1, r2
   371f4:	ldr	r2, [fp, #-80]	; 0xffffffb0
   371f8:	orreq	r4, r0, r6, lsr #30
   371fc:	lsl	r0, r6, #2
   37200:	lslne	r0, r6, #1
   37204:	subs	r0, r0, #1
   37208:	sub	r2, r3, r2
   3720c:	vmov	s0, r2
   37210:	sbc	r2, r4, #0
   37214:	cmp	r1, #0
   37218:	vcvt.f64.s32	d17, s0
   3721c:	ldr	sl, [sp, #112]	; 0x70
   37220:	subeq	r9, r5, #2
   37224:	vmul.f64	d16, d17, d16
   37228:	vcvt.s32.f64	s0, d16
   3722c:	vcmpe.f64	d16, #0.0
   37230:	sub	r1, r9, sl
   37234:	rsb	r3, r1, #32
   37238:	lsl	r7, r0, r1
   3723c:	lsr	r3, r0, r3
   37240:	orr	r6, r3, r2, lsl r1
   37244:	sub	r2, r1, #32
   37248:	sub	r1, fp, #88	; 0x58
   3724c:	cmp	r2, #0
   37250:	lslge	r6, r0, r2
   37254:	add	r2, r1, #8
   37258:	add	r1, sp, #104	; 0x68
   3725c:	movwge	r7, #0
   37260:	vmov	r0, s0
   37264:	vmrs	APSR_nzcv, fpscr
   37268:	add	r1, r1, #8
   3726c:	str	r1, [sp, #96]	; 0x60
   37270:	bmi	37288 <flatcc_json_printer_fmt_float@@Base+0x218>
   37274:	vcvt.f64.s32	d17, s0
   37278:	vsub.f64	d16, d16, d17
   3727c:	vcmp.f64	d16, #0.0
   37280:	vmrs	APSR_nzcv, fpscr
   37284:	addne	r0, r0, #1
   37288:	mov	r1, #0
   3728c:	ldrd	r4, [r2]
   37290:	str	r2, [sp, #92]	; 0x5c
   37294:	ldr	r2, [fp, #-88]	; 0xffffffa8
   37298:	ldr	r3, [fp, #-84]	; 0xffffffac
   3729c:	str	r1, [sp, #20]
   372a0:	movw	r1, #347	; 0x15b
   372a4:	add	r0, r0, r1
   372a8:	asr	r1, r0, #31
   372ac:	add	r0, r0, r1, lsr #29
   372b0:	mvn	r1, #15
   372b4:	stm	sp, {r4, r5}
   372b8:	and	r0, r1, r0, lsl #1
   372bc:	movw	r1, #40384	; 0x9dc0
   372c0:	movt	r1, #4
   372c4:	add	r0, r1, r0
   372c8:	ldrsh	r8, [r0, #24]
   372cc:	ldrd	r4, [r0, #16]
   372d0:	str	r8, [sp, #16]
   372d4:	str	r0, [sp, #36]	; 0x24
   372d8:	sub	r0, fp, #88	; 0x58
   372dc:	str	r5, [sp, #12]
   372e0:	str	r4, [sp, #8]
   372e4:	bl	42880 <flatcc_json_printer_clear@@Base+0x184>
   372e8:	mov	r0, #0
   372ec:	str	sl, [sp]
   372f0:	mov	r2, r7
   372f4:	mov	r3, r6
   372f8:	stmib	sp, {r0, r4, r5, r8}
   372fc:	str	r0, [sp, #20]
   37300:	sub	r0, fp, #56	; 0x38
   37304:	bl	42880 <flatcc_json_printer_clear@@Base+0x184>
   37308:	sub	sl, fp, #56	; 0x38
   3730c:	ldm	sl, {r6, r7, sl}
   37310:	ldr	r9, [sp, #96]	; 0x60
   37314:	ldr	r2, [sp, #104]	; 0x68
   37318:	ldr	r3, [sp, #108]	; 0x6c
   3731c:	ldrd	r0, [r9]
   37320:	stm	sp, {r0, r1, r4, r5, r8}
   37324:	mov	r0, #0
   37328:	mov	r8, #0
   3732c:	str	r0, [sp, #20]
   37330:	add	r0, sp, #104	; 0x68
   37334:	bl	42880 <flatcc_json_printer_clear@@Base+0x184>
   37338:	ldr	r0, [sp, #92]	; 0x5c
   3733c:	subs	r2, r6, #1
   37340:	add	ip, sp, #8
   37344:	sbc	r3, r7, #0
   37348:	ldr	r4, [r0]
   3734c:	ldr	r0, [r0, #4]
   37350:	ldr	r5, [r9]
   37354:	ldr	r1, [sp, #108]	; 0x6c
   37358:	str	r0, [sp, #72]	; 0x48
   3735c:	ldr	r0, [fp, #-88]	; 0xffffffa8
   37360:	str	r0, [sp, #60]	; 0x3c
   37364:	ldr	r0, [fp, #-84]	; 0xffffffac
   37368:	str	r0, [sp, #64]	; 0x40
   3736c:	ldr	r0, [sp, #104]	; 0x68
   37370:	str	r5, [sp, #48]	; 0x30
   37374:	stm	sp, {r5, r8}
   37378:	stm	ip, {r2, r3, sl}
   3737c:	mov	r2, #0
   37380:	str	r2, [sp, #20]
   37384:	adds	r8, r0, #1
   37388:	sub	r0, fp, #56	; 0x38
   3738c:	adc	sl, r1, #0
   37390:	mov	r2, r8
   37394:	mov	r3, sl
   37398:	bl	428e4 <flatcc_json_printer_clear@@Base+0x1e8>
   3739c:	rsb	r1, r4, #0
   373a0:	add	ip, r4, #32
   373a4:	movw	r7, #1233	; 0x4d1
   373a8:	mov	r5, #1
   373ac:	str	r4, [sp, #68]	; 0x44
   373b0:	str	r8, [sp, #52]	; 0x34
   373b4:	lsr	r0, r8, r1
   373b8:	orr	r2, r0, sl, lsl ip
   373bc:	mvn	r0, #31
   373c0:	sub	r3, r0, r4
   373c4:	movw	r0, #14609	; 0x3911
   373c8:	movt	r0, #1
   373cc:	cmp	r3, #0
   373d0:	mla	r7, r4, r7, r0
   373d4:	movw	r0, #41776	; 0xa330
   373d8:	lsrge	r2, sl, r3
   373dc:	lsl	r4, r5, r1
   373e0:	add	lr, r5, r7, asr #12
   373e4:	movt	r0, #4
   373e8:	ldr	r6, [r0, lr, lsl #2]
   373ec:	cmp	r6, r2
   373f0:	lsr	r6, r5, ip
   373f4:	asrhi	lr, r7, #12
   373f8:	cmp	r3, #0
   373fc:	ldr	r7, [fp, #-56]	; 0xffffffc8
   37400:	movwge	r4, #0
   37404:	lslge	r6, r5, r3
   37408:	subs	ip, r4, #1
   3740c:	sbc	r3, r6, #0
   37410:	and	r9, ip, r8
   37414:	cmp	lr, #0
   37418:	str	r3, [sp, #92]	; 0x5c
   3741c:	and	r8, r3, sl
   37420:	ldr	r3, [fp, #-52]	; 0xffffffcc
   37424:	str	sl, [sp, #56]	; 0x38
   37428:	str	r6, [sp, #44]	; 0x2c
   3742c:	str	r4, [sp, #40]	; 0x28
   37430:	str	ip, [sp, #96]	; 0x60
   37434:	ble	37570 <flatcc_json_printer_fmt_float@@Base+0x500>
   37438:	str	r3, [sp, #80]	; 0x50
   3743c:	ldr	r0, [r0, lr, lsl #2]
   37440:	sub	lr, lr, #1
   37444:	mov	r4, #0
   37448:	ldr	ip, [sp, #100]	; 0x64
   3744c:	b	3747c <flatcc_json_printer_fmt_float@@Base+0x40c>
   37450:	add	r3, lr, #1
   37454:	cmp	r3, #2
   37458:	blt	37588 <flatcc_json_printer_fmt_float@@Base+0x518>
   3745c:	ldr	r0, [sp, #84]	; 0x54
   37460:	ldr	r4, [sp, #88]	; 0x58
   37464:	movw	r3, #52429	; 0xcccd
   37468:	sub	lr, lr, #1
   3746c:	movt	r3, #52428	; 0xcccc
   37470:	umull	r3, r6, r0, r3
   37474:	add	r4, r4, #1
   37478:	lsr	r0, r6, #3
   3747c:	udiv	r3, r2, r0
   37480:	str	r4, [sp, #88]	; 0x58
   37484:	str	r0, [sp, #84]	; 0x54
   37488:	add	r6, r3, #48	; 0x30
   3748c:	mls	r2, r3, r0, r2
   37490:	rsb	r0, r1, #32
   37494:	strb	r6, [ip, r4]
   37498:	sub	r6, r1, #32
   3749c:	lsl	r4, r2, r1
   374a0:	lsr	r3, r2, r0
   374a4:	cmp	r6, #0
   374a8:	movwge	r4, #0
   374ac:	lslge	r3, r2, r6
   374b0:	adds	r4, r4, r9
   374b4:	adc	sl, r3, r8
   374b8:	subs	r3, r4, r7
   374bc:	ldr	r3, [sp, #80]	; 0x50
   374c0:	sbcs	r3, sl, r3
   374c4:	bcs	37450 <flatcc_json_printer_fmt_float@@Base+0x3e0>
   374c8:	str	lr, [sp, #96]	; 0x60
   374cc:	mov	r8, r0
   374d0:	mov	r2, #0
   374d4:	mov	r9, ip
   374d8:	mov	r5, r1
   374dc:	ldr	r0, [sp, #48]	; 0x30
   374e0:	stm	sp, {r0, r2}
   374e4:	ldr	r0, [sp, #60]	; 0x3c
   374e8:	str	r0, [sp, #8]
   374ec:	ldr	r0, [sp, #64]	; 0x40
   374f0:	str	r0, [sp, #12]
   374f4:	ldr	r0, [sp, #68]	; 0x44
   374f8:	str	r0, [sp, #16]
   374fc:	ldr	r0, [sp, #72]	; 0x48
   37500:	str	r0, [sp, #20]
   37504:	sub	r0, fp, #72	; 0x48
   37508:	ldr	r2, [sp, #52]	; 0x34
   3750c:	ldr	r3, [sp, #56]	; 0x38
   37510:	bl	428e4 <flatcc_json_printer_clear@@Base+0x1e8>
   37514:	ldr	r0, [sp, #84]	; 0x54
   37518:	ldr	r2, [fp, #-72]	; 0xffffffb8
   3751c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   37520:	str	r7, [sp]
   37524:	cmp	r6, #0
   37528:	mov	ip, #1
   3752c:	ldr	r7, [sp, #80]	; 0x50
   37530:	str	r4, [sp, #8]
   37534:	str	sl, [sp, #12]
   37538:	str	ip, [sp, #24]
   3753c:	lsr	r1, r0, r8
   37540:	lslge	r1, r0, r6
   37544:	lsl	r6, r0, r5
   37548:	mov	r0, #0
   3754c:	str	r7, [sp, #4]
   37550:	movwge	r6, #0
   37554:	str	r1, [sp, #20]
   37558:	str	r0, [sp, #28]
   3755c:	str	r6, [sp, #16]
   37560:	ldr	r0, [sp, #88]	; 0x58
   37564:	add	r6, r0, #1
   37568:	mov	r0, r9
   3756c:	b	376ac <flatcc_json_printer_fmt_float@@Base+0x63c>
   37570:	mov	r6, #0
   37574:	b	37594 <flatcc_json_printer_fmt_float@@Base+0x524>
   37578:			; <UNDEFINED> instruction: 0xffffffff
   3757c:	svcvc	0x00efffff
   37580:			; <UNDEFINED> instruction: 0x509f79fe
   37584:	svccc	0x00d34413
   37588:	ldr	r0, [sp, #88]	; 0x58
   3758c:	ldr	r3, [sp, #80]	; 0x50
   37590:	add	r6, r0, #1
   37594:	rsb	r0, r1, #32
   37598:	mov	sl, #0
   3759c:	mov	ip, #10
   375a0:	str	r0, [sp, #84]	; 0x54
   375a4:	sub	r0, r1, #32
   375a8:	str	r1, [sp, #88]	; 0x58
   375ac:	str	r0, [sp, #80]	; 0x50
   375b0:	ldr	r2, [sp, #88]	; 0x58
   375b4:	umull	r4, r1, r9, ip
   375b8:	mov	r0, r3
   375bc:	sub	lr, lr, #1
   375c0:	lsr	r3, r4, r2
   375c4:	add	r2, r8, r8, lsl #2
   375c8:	add	r1, r1, r2, lsl #1
   375cc:	ldr	r2, [sp, #84]	; 0x54
   375d0:	orr	r2, r3, r1, lsl r2
   375d4:	ldr	r3, [sp, #80]	; 0x50
   375d8:	cmp	r3, #0
   375dc:	lsrge	r2, r1, r3
   375e0:	ldr	r3, [sp, #100]	; 0x64
   375e4:	add	r2, r2, #48	; 0x30
   375e8:	strb	r2, [r3, r6]
   375ec:	umull	r5, r2, r5, ip
   375f0:	add	r3, sl, sl, lsl #2
   375f4:	add	r6, r6, #1
   375f8:	add	sl, r2, r3, lsl #1
   375fc:	add	r3, r0, r0, lsl #2
   37600:	ldr	r0, [sp, #92]	; 0x5c
   37604:	umull	r7, r2, r7, ip
   37608:	add	r3, r2, r3, lsl #1
   3760c:	and	r8, r1, r0
   37610:	ldr	r0, [sp, #96]	; 0x60
   37614:	and	r9, r4, r0
   37618:	subs	r1, r9, r7
   3761c:	sbcs	r1, r8, r3
   37620:	bcs	375b0 <flatcc_json_printer_fmt_float@@Base+0x540>
   37624:	str	lr, [sp, #96]	; 0x60
   37628:	mov	r0, #0
   3762c:	str	r7, [fp, #-56]	; 0xffffffc8
   37630:	str	r3, [fp, #-52]	; 0xffffffcc
   37634:	mov	r4, r3
   37638:	ldr	r1, [sp, #48]	; 0x30
   3763c:	str	r0, [sp, #4]
   37640:	str	r1, [sp]
   37644:	ldr	r0, [sp, #60]	; 0x3c
   37648:	str	r0, [sp, #8]
   3764c:	ldr	r0, [sp, #64]	; 0x40
   37650:	str	r0, [sp, #12]
   37654:	ldr	r0, [sp, #68]	; 0x44
   37658:	str	r0, [sp, #16]
   3765c:	ldr	r0, [sp, #72]	; 0x48
   37660:	str	r0, [sp, #20]
   37664:	sub	r0, fp, #72	; 0x48
   37668:	ldr	r2, [sp, #52]	; 0x34
   3766c:	ldr	r3, [sp, #56]	; 0x38
   37670:	bl	428e4 <flatcc_json_printer_clear@@Base+0x1e8>
   37674:	ldr	r0, [fp, #-72]	; 0xffffffb8
   37678:	ldr	r1, [fp, #-68]	; 0xffffffbc
   3767c:	str	r7, [sp]
   37680:	stmib	sp, {r4, r9}
   37684:	str	r8, [sp, #12]
   37688:	add	r3, sp, #20
   3768c:	ldr	r2, [sp, #40]	; 0x28
   37690:	str	r2, [sp, #16]
   37694:	ldr	r2, [sp, #44]	; 0x2c
   37698:	stm	r3, {r2, r5, sl}
   3769c:	umull	r2, r3, r0, r5
   376a0:	mla	r0, r0, sl, r3
   376a4:	mla	r3, r1, r5, r0
   376a8:	ldr	r0, [sp, #100]	; 0x64
   376ac:	mov	r1, r6
   376b0:	bl	4293c <flatcc_json_printer_clear@@Base+0x240>
   376b4:	ldr	r4, [sp, #96]	; 0x60
   376b8:	cmp	r0, #0
   376bc:	beq	3774c <flatcc_json_printer_fmt_float@@Base+0x6dc>
   376c0:	ldr	r0, [sp, #36]	; 0x24
   376c4:	cmp	r6, #3
   376c8:	ldr	r1, [sp, #100]	; 0x64
   376cc:	ldrsh	r5, [r0, #26]
   376d0:	sub	r0, r6, #1
   376d4:	movwlt	r0, #1
   376d8:	sub	r7, r4, r5
   376dc:	rsb	r3, r7, #0
   376e0:	cmp	r0, r3
   376e4:	movge	r0, r3
   376e8:	cmn	r7, #1
   376ec:	ble	37774 <flatcc_json_printer_fmt_float@@Base+0x704>
   376f0:	cmp	r7, #3
   376f4:	bcs	37858 <flatcc_json_printer_fmt_float@@Base+0x7e8>
   376f8:	cmp	r7, #0
   376fc:	beq	37878 <flatcc_json_printer_fmt_float@@Base+0x808>
   37700:	add	r0, r1, r6
   37704:	mvn	r1, r4
   37708:	add	r1, r1, r5
   3770c:	cmn	r1, #2
   37710:	mvnle	r1, #1
   37714:	add	r1, r4, r1
   37718:	add	r1, r1, #2
   3771c:	sub	r2, r1, r5
   37720:	mov	r1, #48	; 0x30
   37724:	bl	14ef0 <memset@plt>
   37728:	add	r0, r4, #1
   3772c:	ldr	r1, [sp, #100]	; 0x64
   37730:	sub	r0, r0, r5
   37734:	ldr	r5, [sp, #76]	; 0x4c
   37738:	sub	r0, r0, #1
   3773c:	add	r6, r6, #1
   37740:	cmp	r0, #1
   37744:	bgt	37738 <flatcc_json_printer_fmt_float@@Base+0x6c8>
   37748:	b	3787c <flatcc_json_printer_fmt_float@@Base+0x80c>
   3774c:	ldr	r4, [sp, #100]	; 0x64
   37750:	movw	r1, #39645	; 0x9add
   37754:	vmov	r2, r3, d8
   37758:	movt	r1, #4
   3775c:	mov	r0, r4
   37760:	bl	14f2c <sprintf@plt>
   37764:	ldr	r1, [sp, #76]	; 0x4c
   37768:	sub	r1, r4, r1
   3776c:	add	r0, r1, r0
   37770:	b	37888 <flatcc_json_printer_fmt_float@@Base+0x818>
   37774:	cmp	r6, r3
   37778:	bgt	377e8 <flatcc_json_printer_fmt_float@@Base+0x778>
   3777c:	add	r2, r7, r6
   37780:	cmn	r2, #2
   37784:	blt	377e8 <flatcc_json_printer_fmt_float@@Base+0x778>
   37788:	add	r8, r1, #2
   3778c:	rsb	r0, r6, #0
   37790:	add	r2, r8, r3
   37794:	add	r0, r2, r0
   37798:	mov	r2, r6
   3779c:	bl	14e48 <memmove@plt>
   377a0:	ldr	r1, [sp, #100]	; 0x64
   377a4:	movw	r0, #11824	; 0x2e30
   377a8:	strh	r0, [r1]
   377ac:	rsb	r0, r6, #2
   377b0:	sub	r4, r0, r7
   377b4:	mov	r0, #2
   377b8:	cmp	r4, #3
   377bc:	blt	377e0 <flatcc_json_printer_fmt_float@@Base+0x770>
   377c0:	ldr	r0, [sp, #96]	; 0x60
   377c4:	mov	r1, #48	; 0x30
   377c8:	sub	r0, r5, r0
   377cc:	sub	r2, r0, r6
   377d0:	mov	r0, r8
   377d4:	bl	14ef0 <memset@plt>
   377d8:	ldr	r1, [sp, #100]	; 0x64
   377dc:	mov	r0, r4
   377e0:	add	r6, r0, r6
   377e4:	b	37878 <flatcc_json_printer_fmt_float@@Base+0x808>
   377e8:	cmp	r6, #2
   377ec:	blt	37858 <flatcc_json_printer_fmt_float@@Base+0x7e8>
   377f0:	cmp	r0, #1
   377f4:	blt	3781c <flatcc_json_printer_fmt_float@@Base+0x7ac>
   377f8:	add	r2, r1, r6
   377fc:	mov	r4, #0
   37800:	mov	r3, r2
   37804:	ldrb	r5, [r3, #-1]!
   37808:	add	r4, r4, #1
   3780c:	cmp	r4, r0
   37810:	strb	r5, [r2]
   37814:	mov	r2, r3
   37818:	blt	37804 <flatcc_json_printer_fmt_float@@Base+0x794>
   3781c:	ldr	r5, [sp, #76]	; 0x4c
   37820:	sub	r3, r6, r0
   37824:	mov	r2, #46	; 0x2e
   37828:	adds	r0, r0, r7
   3782c:	strb	r2, [r1, r3]
   37830:	add	r3, r6, #1
   37834:	beq	37898 <flatcc_json_printer_fmt_float@@Base+0x828>
   37838:	mov	r2, #101	; 0x65
   3783c:	add	r4, r6, #2
   37840:	strb	r2, [r1, r3]
   37844:	add	r1, r1, r4
   37848:	bl	4273c <flatcc_json_printer_clear@@Base+0x40>
   3784c:	ldr	r1, [sp, #100]	; 0x64
   37850:	add	r6, r0, r4
   37854:	b	3787c <flatcc_json_printer_fmt_float@@Base+0x80c>
   37858:	mov	r0, #101	; 0x65
   3785c:	add	r4, r6, #1
   37860:	strb	r0, [r1, r6]
   37864:	add	r1, r1, r4
   37868:	mov	r0, r7
   3786c:	bl	4273c <flatcc_json_printer_clear@@Base+0x40>
   37870:	ldr	r1, [sp, #100]	; 0x64
   37874:	add	r6, r0, r4
   37878:	ldr	r5, [sp, #76]	; 0x4c
   3787c:	mov	r0, #0
   37880:	strb	r0, [r1, r6]!
   37884:	sub	r0, r1, r5
   37888:	sub	sp, fp, #40	; 0x28
   3788c:	vpop	{d8}
   37890:	add	sp, sp, #4
   37894:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   37898:	mov	r6, r3
   3789c:	b	3787c <flatcc_json_printer_fmt_float@@Base+0x80c>
   378a0:	movw	r0, #39500	; 0x9a4c
   378a4:	movw	r1, #39504	; 0x9a50
   378a8:	movw	r3, #39591	; 0x9aa7
   378ac:	mov	r2, #189	; 0xbd
   378b0:	movt	r0, #4
   378b4:	movt	r1, #4
   378b8:	movt	r3, #4
   378bc:	bl	14f44 <__assert_fail@plt>
   378c0:	movw	r0, #39651	; 0x9ae3
   378c4:	movw	r1, #39504	; 0x9a50
   378c8:	movw	r3, #39688	; 0x9b08
   378cc:	mov	r2, #138	; 0x8a
   378d0:	movt	r0, #4
   378d4:	movt	r1, #4
   378d8:	movt	r3, #4
   378dc:	bl	14f44 <__assert_fail@plt>

000378e0 <flatcc_json_printer_fmt_double@@Base>:
   378e0:	b	37078 <flatcc_json_printer_fmt_float@@Base+0x8>

000378e4 <flatcc_json_printer_fmt_bool@@Base>:
   378e4:	cmp	r1, #0
   378e8:	movwne	r1, #29300	; 0x7274
   378ec:	movtne	r1, #25973	; 0x6575
   378f0:	strne	r1, [r0]
   378f4:	movne	r0, #4
   378f8:	bxne	lr
   378fc:	mov	r1, #101	; 0x65
   37900:	strb	r1, [r0, #4]
   37904:	movw	r1, #24934	; 0x6166
   37908:	movt	r1, #29548	; 0x736c
   3790c:	str	r1, [r0]
   37910:	mov	r0, #5
   37914:	bx	lr

00037918 <flatcc_json_printer_string@@Base>:
   37918:	b	3791c <flatcc_json_printer_string@@Base+0x4>
   3791c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   37920:	add	fp, sp, #28
   37924:	sub	sp, sp, #12
   37928:	mov	r5, r0
   3792c:	mov	r4, r0
   37930:	mov	r6, r1
   37934:	mov	r3, r2
   37938:	ldr	r0, [r5, #20]!
   3793c:	add	r1, r0, #1
   37940:	str	r5, [sp, #4]
   37944:	str	r1, [r5]
   37948:	mov	r1, #34	; 0x22
   3794c:	strb	r1, [r0]
   37950:	b	37ab0 <flatcc_json_printer_string@@Base+0x198>
   37954:	mov	r2, #92	; 0x5c
   37958:	strb	r2, [r1]
   3795c:	mvn	r1, #7
   37960:	uxtab	r2, r1, sl
   37964:	uxtb	r1, sl
   37968:	cmp	r2, #5
   3796c:	bhi	379a4 <flatcc_json_printer_string@@Base+0x8c>
   37970:	add	r3, pc, #0
   37974:	ldr	pc, [r3, r2, lsl #2]
   37978:	muleq	r3, r0, r9
   3797c:	andeq	r7, r3, r4, asr #20
   37980:	andeq	r7, r3, r8, asr sl
   37984:	andeq	r7, r3, r8, asr #19
   37988:	andeq	r7, r3, ip, ror #20
   3798c:	andeq	r7, r3, r0, lsl #21
   37990:	ldr	r1, [r5]
   37994:	add	r2, r1, #1
   37998:	str	r2, [r5]
   3799c:	mov	r2, #98	; 0x62
   379a0:	b	37aa4 <flatcc_json_printer_string@@Base+0x18c>
   379a4:	cmp	r1, #92	; 0x5c
   379a8:	beq	37a94 <flatcc_json_printer_string@@Base+0x17c>
   379ac:	cmp	r1, #34	; 0x22
   379b0:	bne	379c8 <flatcc_json_printer_string@@Base+0xb0>
   379b4:	ldr	r1, [r5]
   379b8:	add	r2, r1, #1
   379bc:	str	r2, [r5]
   379c0:	mov	r2, #34	; 0x22
   379c4:	b	37aa4 <flatcc_json_printer_string@@Base+0x18c>
   379c8:	ldr	r2, [r5]
   379cc:	mov	r7, #48	; 0x30
   379d0:	cmp	r1, #160	; 0xa0
   379d4:	add	r3, r2, #1
   379d8:	str	r3, [r5]
   379dc:	mov	r3, #117	; 0x75
   379e0:	strb	r3, [r2]
   379e4:	ldr	r2, [r5]
   379e8:	add	r3, r2, #1
   379ec:	str	r3, [r5]
   379f0:	strb	r7, [r2]
   379f4:	ldr	r2, [r5]
   379f8:	add	r3, r2, #1
   379fc:	str	r3, [r5]
   37a00:	strb	r7, [r2]
   37a04:	ldr	r2, [r5]
   37a08:	add	r3, r2, #1
   37a0c:	str	r3, [r5]
   37a10:	mov	r3, #87	; 0x57
   37a14:	movwcc	r3, #48	; 0x30
   37a18:	add	r1, r3, r1, lsr #4
   37a1c:	mov	r3, #87	; 0x57
   37a20:	strb	r1, [r2]
   37a24:	ldr	r1, [r5]
   37a28:	add	r2, r1, #1
   37a2c:	str	r2, [r5]
   37a30:	and	r2, sl, #15
   37a34:	cmp	r2, #10
   37a38:	movwcc	r3, #48	; 0x30
   37a3c:	add	r2, r3, r2
   37a40:	b	37aa4 <flatcc_json_printer_string@@Base+0x18c>
   37a44:	ldr	r1, [r5]
   37a48:	add	r2, r1, #1
   37a4c:	str	r2, [r5]
   37a50:	mov	r2, #116	; 0x74
   37a54:	b	37aa4 <flatcc_json_printer_string@@Base+0x18c>
   37a58:	ldr	r1, [r5]
   37a5c:	add	r2, r1, #1
   37a60:	str	r2, [r5]
   37a64:	mov	r2, #110	; 0x6e
   37a68:	b	37aa4 <flatcc_json_printer_string@@Base+0x18c>
   37a6c:	ldr	r1, [r5]
   37a70:	add	r2, r1, #1
   37a74:	str	r2, [r5]
   37a78:	mov	r2, #102	; 0x66
   37a7c:	b	37aa4 <flatcc_json_printer_string@@Base+0x18c>
   37a80:	ldr	r1, [r5]
   37a84:	add	r2, r1, #1
   37a88:	str	r2, [r5]
   37a8c:	mov	r2, #114	; 0x72
   37a90:	b	37aa4 <flatcc_json_printer_string@@Base+0x18c>
   37a94:	ldr	r1, [r5]
   37a98:	add	r2, r1, #1
   37a9c:	str	r2, [r5]
   37aa0:	mov	r2, #92	; 0x5c
   37aa4:	strb	r2, [r1]
   37aa8:	sub	r3, r0, #1
   37aac:	add	r6, r8, #1
   37ab0:	ldrb	sl, [r6]
   37ab4:	mov	r8, r6
   37ab8:	cmp	sl, #32
   37abc:	bcc	37adc <flatcc_json_printer_string@@Base+0x1c4>
   37ac0:	uxtb	r0, sl
   37ac4:	cmp	r0, #34	; 0x22
   37ac8:	cmpne	r0, #92	; 0x5c
   37acc:	beq	37adc <flatcc_json_printer_string@@Base+0x1c4>
   37ad0:	ldrb	sl, [r8, #1]!
   37ad4:	cmp	sl, #31
   37ad8:	bhi	37ac0 <flatcc_json_printer_string@@Base+0x1a8>
   37adc:	ldr	r0, [r4, #20]
   37ae0:	ldr	r1, [r4, #16]
   37ae4:	sub	r9, r8, r6
   37ae8:	add	r2, r0, r9
   37aec:	cmp	r2, r1
   37af0:	bcs	37b10 <flatcc_json_printer_string@@Base+0x1f8>
   37af4:	mov	r1, r6
   37af8:	mov	r2, r9
   37afc:	mov	r6, r3
   37b00:	bl	14e60 <memcpy@plt>
   37b04:	mov	r2, r6
   37b08:	mov	r7, r9
   37b0c:	b	37b9c <flatcc_json_printer_string@@Base+0x284>
   37b10:	cmp	r0, r1
   37b14:	str	r3, [sp, #8]
   37b18:	bcc	37b34 <flatcc_json_printer_string@@Base+0x21c>
   37b1c:	ldr	r2, [r4, #44]	; 0x2c
   37b20:	mov	r0, r4
   37b24:	mov	r1, #0
   37b28:	blx	r2
   37b2c:	ldr	r1, [r4, #16]
   37b30:	ldr	r0, [r4, #20]
   37b34:	sub	r5, r1, r0
   37b38:	mov	r7, r9
   37b3c:	cmp	r5, r9
   37b40:	bcs	37b88 <flatcc_json_printer_string@@Base+0x270>
   37b44:	mov	r1, r6
   37b48:	mov	r2, r5
   37b4c:	bl	14e60 <memcpy@plt>
   37b50:	ldr	r0, [r4, #20]
   37b54:	ldr	r2, [r4, #44]	; 0x2c
   37b58:	mov	r1, #0
   37b5c:	add	r0, r0, r5
   37b60:	str	r0, [r4, #20]
   37b64:	mov	r0, r4
   37b68:	blx	r2
   37b6c:	ldr	r1, [r4, #16]
   37b70:	ldr	r0, [r4, #20]
   37b74:	sub	r7, r7, r5
   37b78:	add	r6, r6, r5
   37b7c:	sub	r5, r1, r0
   37b80:	cmp	r7, r5
   37b84:	bhi	37b44 <flatcc_json_printer_string@@Base+0x22c>
   37b88:	ldr	r5, [sp, #4]
   37b8c:	mov	r1, r6
   37b90:	mov	r2, r7
   37b94:	bl	14e60 <memcpy@plt>
   37b98:	ldr	r2, [sp, #8]
   37b9c:	ldr	r0, [r5]
   37ba0:	add	r1, r0, r7
   37ba4:	add	r0, r1, #1
   37ba8:	str	r0, [r5]
   37bac:	subs	r0, r2, r9
   37bb0:	bne	37954 <flatcc_json_printer_string@@Base+0x3c>
   37bb4:	mov	r0, #34	; 0x22
   37bb8:	strb	r0, [r1]
   37bbc:	sub	sp, fp, #28
   37bc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00037bc4 <flatcc_json_printer_write@@Base>:
   37bc4:	push	{r4, r5, r6, r7, fp, lr}
   37bc8:	add	fp, sp, #16
   37bcc:	mov	r6, r1
   37bd0:	mov	r5, r0
   37bd4:	ldr	r1, [r0, #16]
   37bd8:	ldr	r0, [r0, #20]
   37bdc:	mov	r4, r2
   37be0:	add	r2, r0, r2
   37be4:	cmp	r2, r1
   37be8:	bcc	37c5c <flatcc_json_printer_write@@Base+0x98>
   37bec:	cmp	r0, r1
   37bf0:	bcc	37c0c <flatcc_json_printer_write@@Base+0x48>
   37bf4:	ldr	r2, [r5, #44]	; 0x2c
   37bf8:	mov	r0, r5
   37bfc:	mov	r1, #0
   37c00:	blx	r2
   37c04:	ldr	r1, [r5, #16]
   37c08:	ldr	r0, [r5, #20]
   37c0c:	sub	r7, r1, r0
   37c10:	cmp	r7, r4
   37c14:	bcs	37c5c <flatcc_json_printer_write@@Base+0x98>
   37c18:	mov	r1, r6
   37c1c:	mov	r2, r7
   37c20:	bl	14e60 <memcpy@plt>
   37c24:	ldr	r0, [r5, #20]
   37c28:	ldr	r2, [r5, #44]	; 0x2c
   37c2c:	mov	r1, #0
   37c30:	add	r0, r0, r7
   37c34:	str	r0, [r5, #20]
   37c38:	mov	r0, r5
   37c3c:	blx	r2
   37c40:	ldr	r1, [r5, #16]
   37c44:	ldr	r0, [r5, #20]
   37c48:	sub	r4, r4, r7
   37c4c:	add	r6, r6, r7
   37c50:	sub	r7, r1, r0
   37c54:	cmp	r4, r7
   37c58:	bhi	37c18 <flatcc_json_printer_write@@Base+0x54>
   37c5c:	mov	r1, r6
   37c60:	mov	r2, r4
   37c64:	bl	14e60 <memcpy@plt>
   37c68:	ldr	r0, [r5, #20]
   37c6c:	add	r0, r0, r4
   37c70:	str	r0, [r5, #20]
   37c74:	pop	{r4, r5, r6, r7, fp, pc}

00037c78 <flatcc_json_printer_nl@@Base>:
   37c78:	ldr	r1, [r0, #20]
   37c7c:	add	r2, r1, #1
   37c80:	str	r2, [r0, #20]
   37c84:	mov	r2, #10
   37c88:	strb	r2, [r1]
   37c8c:	ldr	r1, [r0, #16]
   37c90:	ldr	r2, [r0, #20]
   37c94:	cmp	r2, r1
   37c98:	bxcc	lr
   37c9c:	ldr	r2, [r0, #44]	; 0x2c
   37ca0:	mov	r1, #0
   37ca4:	bx	r2

00037ca8 <flatcc_json_printer_char@@Base>:
   37ca8:	ldr	r2, [r0, #20]
   37cac:	add	r3, r2, #1
   37cb0:	str	r3, [r0, #20]
   37cb4:	strb	r1, [r2]
   37cb8:	bx	lr

00037cbc <flatcc_json_printer_indent@@Base>:
   37cbc:	push	{r4, r5, r6, sl, fp, lr}
   37cc0:	add	fp, sp, #16
   37cc4:	mov	r4, r0
   37cc8:	ldr	r1, [r0, #16]
   37ccc:	ldr	r0, [r0, #20]
   37cd0:	ldrb	r2, [r4, #25]
   37cd4:	ldr	r3, [r4, #32]
   37cd8:	mla	r6, r3, r2, r0
   37cdc:	mul	r5, r3, r2
   37ce0:	cmp	r6, r1
   37ce4:	bls	37d54 <flatcc_json_printer_indent@@Base+0x98>
   37ce8:	cmp	r0, r1
   37cec:	bcc	37d08 <flatcc_json_printer_indent@@Base+0x4c>
   37cf0:	ldr	r2, [r4, #44]	; 0x2c
   37cf4:	mov	r0, r4
   37cf8:	mov	r1, #0
   37cfc:	blx	r2
   37d00:	ldr	r1, [r4, #16]
   37d04:	ldr	r0, [r4, #20]
   37d08:	sub	r6, r1, r0
   37d0c:	cmp	r6, r5
   37d10:	bcs	37d54 <flatcc_json_printer_indent@@Base+0x98>
   37d14:	mov	r1, #32
   37d18:	mov	r2, r6
   37d1c:	bl	14ef0 <memset@plt>
   37d20:	ldr	r0, [r4, #20]
   37d24:	ldr	r2, [r4, #44]	; 0x2c
   37d28:	mov	r1, #0
   37d2c:	add	r0, r0, r6
   37d30:	str	r0, [r4, #20]
   37d34:	mov	r0, r4
   37d38:	blx	r2
   37d3c:	ldr	r1, [r4, #16]
   37d40:	ldr	r0, [r4, #20]
   37d44:	sub	r5, r5, r6
   37d48:	sub	r6, r1, r0
   37d4c:	cmp	r5, r6
   37d50:	bhi	37d14 <flatcc_json_printer_indent@@Base+0x58>
   37d54:	mov	r1, #32
   37d58:	mov	r2, r5
   37d5c:	bl	14ef0 <memset@plt>
   37d60:	ldr	r0, [r4, #20]
   37d64:	add	r0, r0, r5
   37d68:	str	r0, [r4, #20]
   37d6c:	pop	{r4, r5, r6, sl, fp, pc}

00037d70 <flatcc_json_printer_add_level@@Base>:
   37d70:	ldr	r2, [r0, #32]
   37d74:	add	r1, r2, r1
   37d78:	str	r1, [r0, #32]
   37d7c:	bx	lr

00037d80 <flatcc_json_printer_get_level@@Base>:
   37d80:	ldr	r0, [r0, #32]
   37d84:	bx	lr

00037d88 <flatcc_json_printer_uint8@@Base>:
   37d88:	push	{r4, sl, fp, lr}
   37d8c:	add	fp, sp, #8
   37d90:	mov	r2, r1
   37d94:	ldr	r1, [r0, #20]
   37d98:	mov	r4, r0
   37d9c:	mov	r0, r2
   37da0:	bl	37db4 <flatcc_json_printer_uint8@@Base+0x2c>
   37da4:	ldr	r1, [r4, #20]
   37da8:	add	r0, r1, r0
   37dac:	str	r0, [r4, #20]
   37db0:	pop	{r4, sl, fp, pc}
   37db4:	mov	r2, #0
   37db8:	cmp	r0, #100	; 0x64
   37dbc:	bcc	37e04 <flatcc_json_printer_uint8@@Base+0x7c>
   37dc0:	strb	r2, [r1, #3]
   37dc4:	movw	r2, #34079	; 0x851f
   37dc8:	movt	r2, #20971	; 0x51eb
   37dcc:	umull	r2, r3, r0, r2
   37dd0:	mov	r2, #48	; 0x30
   37dd4:	orr	r2, r2, r3, lsr #5
   37dd8:	strb	r2, [r1]
   37ddc:	lsr	r2, r3, #5
   37de0:	mov	r3, #100	; 0x64
   37de4:	mls	r0, r2, r3, r0
   37de8:	movw	r2, #39824	; 0x9b90
   37dec:	movt	r2, #4
   37df0:	add	r0, r2, r0, lsl #1
   37df4:	ldrh	r0, [r0]
   37df8:	strh	r0, [r1, #1]
   37dfc:	mov	r0, #3
   37e00:	bx	lr
   37e04:	cmp	r0, #10
   37e08:	bcc	37e44 <flatcc_json_printer_uint8@@Base+0xbc>
   37e0c:	strb	r2, [r1, #2]
   37e10:	movw	r2, #34079	; 0x851f
   37e14:	movt	r2, #20971	; 0x51eb
   37e18:	umull	r2, r3, r0, r2
   37e1c:	lsr	r2, r3, #5
   37e20:	mov	r3, #100	; 0x64
   37e24:	mls	r0, r2, r3, r0
   37e28:	movw	r2, #39824	; 0x9b90
   37e2c:	movt	r2, #4
   37e30:	add	r0, r2, r0, lsl #1
   37e34:	ldrh	r0, [r0]
   37e38:	strh	r0, [r1]
   37e3c:	mov	r0, #2
   37e40:	bx	lr
   37e44:	add	r0, r0, #48	; 0x30
   37e48:	strb	r2, [r1, #1]
   37e4c:	strb	r0, [r1]
   37e50:	mov	r0, #1
   37e54:	bx	lr

00037e58 <flatcc_json_printer_uint16@@Base>:
   37e58:	push	{r4, sl, fp, lr}
   37e5c:	add	fp, sp, #8
   37e60:	mov	r2, r1
   37e64:	ldr	r1, [r0, #20]
   37e68:	mov	r4, r0
   37e6c:	mov	r0, r2
   37e70:	bl	37e84 <flatcc_json_printer_uint16@@Base+0x2c>
   37e74:	ldr	r1, [r4, #20]
   37e78:	add	r0, r1, r0
   37e7c:	str	r0, [r4, #20]
   37e80:	pop	{r4, sl, fp, pc}
   37e84:	mov	ip, r0
   37e88:	cmp	r0, #1000	; 0x3e8
   37e8c:	bcc	37ea4 <flatcc_json_printer_uint16@@Base+0x4c>
   37e90:	movw	r3, #9999	; 0x270f
   37e94:	mov	r0, #4
   37e98:	cmp	ip, r3
   37e9c:	movwhi	r0, #5
   37ea0:	b	37ec8 <flatcc_json_printer_uint16@@Base+0x70>
   37ea4:	cmp	ip, #100	; 0x64
   37ea8:	bcc	37ebc <flatcc_json_printer_uint16@@Base+0x64>
   37eac:	mov	r0, #0
   37eb0:	strb	r0, [r1, #3]!
   37eb4:	mov	r0, #3
   37eb8:	b	37f64 <flatcc_json_printer_uint16@@Base+0x10c>
   37ebc:	mov	r0, #1
   37ec0:	cmp	ip, #9
   37ec4:	movwhi	r0, #2
   37ec8:	mov	r3, #0
   37ecc:	tst	r0, #1
   37ed0:	strb	r3, [r1, r0]!
   37ed4:	bne	37f1c <flatcc_json_printer_uint16@@Base+0xc4>
   37ed8:	cmp	r0, #2
   37edc:	beq	37fa4 <flatcc_json_printer_uint16@@Base+0x14c>
   37ee0:	cmp	r0, #4
   37ee4:	bxne	lr
   37ee8:	movw	r2, #34079	; 0x851f
   37eec:	movt	r2, #20971	; 0x51eb
   37ef0:	umull	r2, r3, ip, r2
   37ef4:	lsr	r3, r3, #5
   37ef8:	mov	r2, #100	; 0x64
   37efc:	mls	r2, r3, r2, ip
   37f00:	uxth	ip, r2
   37f04:	movw	r2, #39824	; 0x9b90
   37f08:	movt	r2, #4
   37f0c:	add	r2, r2, ip, lsl #1
   37f10:	ldrh	r2, [r2]
   37f14:	strh	r2, [r1, #-2]!
   37f18:	b	37fa8 <flatcc_json_printer_uint16@@Base+0x150>
   37f1c:	cmp	r0, #1
   37f20:	beq	37fdc <flatcc_json_printer_uint16@@Base+0x184>
   37f24:	cmp	r0, #3
   37f28:	beq	37f64 <flatcc_json_printer_uint16@@Base+0x10c>
   37f2c:	cmp	r0, #5
   37f30:	bne	37fd8 <flatcc_json_printer_uint16@@Base+0x180>
   37f34:	movw	r3, #34079	; 0x851f
   37f38:	movt	r3, #20971	; 0x51eb
   37f3c:	umull	r3, r2, ip, r3
   37f40:	lsr	r2, r2, #5
   37f44:	mov	r3, #100	; 0x64
   37f48:	mls	ip, r2, r3, ip
   37f4c:	movw	r3, #39824	; 0x9b90
   37f50:	movt	r3, #4
   37f54:	add	r3, r3, ip, lsl #1
   37f58:	mov	ip, r2
   37f5c:	ldrh	r3, [r3]
   37f60:	strh	r3, [r1, #-2]!
   37f64:	movw	r3, #34079	; 0x851f
   37f68:	uxth	r2, ip
   37f6c:	movt	r3, #20971	; 0x51eb
   37f70:	umull	r2, r3, r2, r3
   37f74:	lsr	r3, r3, #5
   37f78:	mov	r2, #100	; 0x64
   37f7c:	mls	r2, r3, r2, ip
   37f80:	uxth	ip, r2
   37f84:	movw	r2, #39824	; 0x9b90
   37f88:	movt	r2, #4
   37f8c:	add	r2, r2, ip, lsl #1
   37f90:	ldrh	r2, [r2]
   37f94:	strh	r2, [r1, #-2]!
   37f98:	add	r2, r3, #48	; 0x30
   37f9c:	strb	r2, [r1, #-1]
   37fa0:	bx	lr
   37fa4:	mov	r3, ip
   37fa8:	uxth	ip, r3
   37fac:	movw	r3, #34079	; 0x851f
   37fb0:	movt	r3, #20971	; 0x51eb
   37fb4:	umull	r3, r2, ip, r3
   37fb8:	lsr	r2, r2, #5
   37fbc:	mov	r3, #100	; 0x64
   37fc0:	mls	r2, r2, r3, ip
   37fc4:	movw	r3, #39824	; 0x9b90
   37fc8:	movt	r3, #4
   37fcc:	add	r2, r3, r2, lsl #1
   37fd0:	ldrh	r2, [r2]
   37fd4:	strh	r2, [r1, #-2]
   37fd8:	bx	lr
   37fdc:	mov	r3, ip
   37fe0:	b	37f98 <flatcc_json_printer_uint16@@Base+0x140>

00037fe4 <flatcc_json_printer_uint32@@Base>:
   37fe4:	push	{r4, sl, fp, lr}
   37fe8:	add	fp, sp, #8
   37fec:	mov	r2, r1
   37ff0:	ldr	r1, [r0, #20]
   37ff4:	mov	r4, r0
   37ff8:	mov	r0, r2
   37ffc:	bl	38010 <flatcc_json_printer_uint32@@Base+0x2c>
   38000:	ldr	r1, [r4, #20]
   38004:	add	r0, r1, r0
   38008:	str	r0, [r4, #20]
   3800c:	pop	{r4, sl, fp, pc}
   38010:	mov	ip, r0
   38014:	movw	r0, #10000	; 0x2710
   38018:	cmp	ip, r0
   3801c:	bcc	38050 <flatcc_json_printer_uint32@@Base+0x6c>
   38020:	movw	r0, #38528	; 0x9680
   38024:	movt	r0, #152	; 0x98
   38028:	cmp	ip, r0
   3802c:	bcc	3806c <flatcc_json_printer_uint32@@Base+0x88>
   38030:	movw	r0, #51712	; 0xca00
   38034:	movt	r0, #15258	; 0x3b9a
   38038:	cmp	ip, r0
   3803c:	bcc	3809c <flatcc_json_printer_uint32@@Base+0xb8>
   38040:	mov	r0, #0
   38044:	strb	r0, [r1, #10]!
   38048:	mov	r0, #10
   3804c:	b	380d8 <flatcc_json_printer_uint32@@Base+0xf4>
   38050:	cmp	ip, #100	; 0x64
   38054:	bcc	3808c <flatcc_json_printer_uint32@@Base+0xa8>
   38058:	lsr	r3, ip, #3
   3805c:	mov	r0, #3
   38060:	cmp	r3, #124	; 0x7c
   38064:	movwhi	r0, #4
   38068:	b	380c8 <flatcc_json_printer_uint32@@Base+0xe4>
   3806c:	movw	r0, #16960	; 0x4240
   38070:	movt	r0, #15
   38074:	cmp	ip, r0
   38078:	bcc	380b4 <flatcc_json_printer_uint32@@Base+0xd0>
   3807c:	mov	r0, #0
   38080:	strb	r0, [r1, #7]!
   38084:	mov	r0, #7
   38088:	b	3820c <flatcc_json_printer_uint32@@Base+0x228>
   3808c:	mov	r0, #1
   38090:	cmp	ip, #9
   38094:	movwhi	r0, #2
   38098:	b	380c8 <flatcc_json_printer_uint32@@Base+0xe4>
   3809c:	movw	r3, #57599	; 0xe0ff
   380a0:	mov	r0, #8
   380a4:	movt	r3, #1525	; 0x5f5
   380a8:	cmp	ip, r3
   380ac:	movwhi	r0, #9
   380b0:	b	380c8 <flatcc_json_printer_uint32@@Base+0xe4>
   380b4:	movw	r3, #34463	; 0x869f
   380b8:	mov	r0, #5
   380bc:	movt	r3, #1
   380c0:	cmp	ip, r3
   380c4:	movwhi	r0, #6
   380c8:	mov	r3, #0
   380cc:	tst	r0, #1
   380d0:	strb	r3, [r1, r0]!
   380d4:	bne	3820c <flatcc_json_printer_uint32@@Base+0x228>
   380d8:	lsr	r2, r0, #1
   380dc:	orr	r2, r2, r0, lsl #3
   380e0:	eor	r3, r2, #4
   380e4:	sbfx	r2, r3, #0, #4
   380e8:	cmp	r2, #0
   380ec:	blt	38208 <flatcc_json_printer_uint32@@Base+0x224>
   380f0:	and	r2, r3, #15
   380f4:	add	r3, pc, #0
   380f8:	ldr	pc, [r3, r2, lsl #2]
   380fc:	andeq	r8, r3, ip, asr #2
   38100:	andeq	r8, r3, ip, lsl r1
   38104:	andeq	r8, r3, r8, lsl #4
   38108:	andeq	r8, r3, r8, lsl #4
   3810c:	andeq	r8, r3, r8, lsl #4
   38110:	ldrdeq	r8, [r3], -ip
   38114:	andeq	r8, r3, ip, lsr #3
   38118:	andeq	r8, r3, ip, ror r1
   3811c:	movw	r2, #34079	; 0x851f
   38120:	movt	r2, #20971	; 0x51eb
   38124:	umull	r2, r3, ip, r2
   38128:	lsr	r2, r3, #5
   3812c:	mov	r3, #100	; 0x64
   38130:	mls	ip, r2, r3, ip
   38134:	movw	r3, #39824	; 0x9b90
   38138:	movt	r3, #4
   3813c:	add	r3, r3, ip, lsl #1
   38140:	mov	ip, r2
   38144:	ldrh	r3, [r3]
   38148:	strh	r3, [r1, #-2]!
   3814c:	movw	r2, #34079	; 0x851f
   38150:	movt	r2, #20971	; 0x51eb
   38154:	umull	r2, r3, ip, r2
   38158:	lsr	r2, r3, #5
   3815c:	mov	r3, #100	; 0x64
   38160:	mls	ip, r2, r3, ip
   38164:	movw	r3, #39824	; 0x9b90
   38168:	movt	r3, #4
   3816c:	add	r3, r3, ip, lsl #1
   38170:	mov	ip, r2
   38174:	ldrh	r3, [r3]
   38178:	strh	r3, [r1, #-2]!
   3817c:	movw	r2, #34079	; 0x851f
   38180:	movt	r2, #20971	; 0x51eb
   38184:	umull	r2, r3, ip, r2
   38188:	lsr	r2, r3, #5
   3818c:	mov	r3, #100	; 0x64
   38190:	mls	ip, r2, r3, ip
   38194:	movw	r3, #39824	; 0x9b90
   38198:	movt	r3, #4
   3819c:	add	r3, r3, ip, lsl #1
   381a0:	mov	ip, r2
   381a4:	ldrh	r3, [r3]
   381a8:	strh	r3, [r1, #-2]!
   381ac:	movw	r2, #34079	; 0x851f
   381b0:	movt	r2, #20971	; 0x51eb
   381b4:	umull	r2, r3, ip, r2
   381b8:	lsr	r2, r3, #5
   381bc:	mov	r3, #100	; 0x64
   381c0:	mls	ip, r2, r3, ip
   381c4:	movw	r3, #39824	; 0x9b90
   381c8:	movt	r3, #4
   381cc:	add	r3, r3, ip, lsl #1
   381d0:	mov	ip, r2
   381d4:	ldrh	r3, [r3]
   381d8:	strh	r3, [r1, #-2]!
   381dc:	movw	r2, #34079	; 0x851f
   381e0:	movt	r2, #20971	; 0x51eb
   381e4:	umull	r2, r3, ip, r2
   381e8:	lsr	r2, r3, #5
   381ec:	mov	r3, #100	; 0x64
   381f0:	mls	r2, r2, r3, ip
   381f4:	movw	r3, #39824	; 0x9b90
   381f8:	movt	r3, #4
   381fc:	add	r2, r3, r2, lsl #1
   38200:	ldrh	r2, [r2]
   38204:	strh	r2, [r1, #-2]
   38208:	bx	lr
   3820c:	add	r3, r0, #7
   38210:	ubfx	r2, r3, #1, #3
   38214:	orr	r3, r2, r3, lsl #3
   38218:	sbfx	r2, r3, #0, #4
   3821c:	cmp	r2, #0
   38220:	bxlt	lr
   38224:	and	r2, r3, #15
   38228:	add	r3, pc, #0
   3822c:	ldr	pc, [r3, r2, lsl #2]
   38230:	andeq	r8, r3, r0, asr r2
   38234:	andeq	r8, r3, r8, lsl #4
   38238:	andeq	r8, r3, r8, lsl #4
   3823c:	andeq	r8, r3, r8, lsl #4
   38240:	andeq	r8, r3, r0, lsl r3
   38244:	andeq	r8, r3, r0, ror #5
   38248:			; <UNDEFINED> instruction: 0x000382b0
   3824c:	andeq	r8, r3, r0, lsl #5
   38250:	movw	r2, #34079	; 0x851f
   38254:	movt	r2, #20971	; 0x51eb
   38258:	umull	r2, r3, ip, r2
   3825c:	lsr	r2, r3, #5
   38260:	mov	r3, #100	; 0x64
   38264:	mls	ip, r2, r3, ip
   38268:	movw	r3, #39824	; 0x9b90
   3826c:	movt	r3, #4
   38270:	add	r3, r3, ip, lsl #1
   38274:	mov	ip, r2
   38278:	ldrh	r3, [r3]
   3827c:	strh	r3, [r1, #-2]!
   38280:	movw	r2, #34079	; 0x851f
   38284:	movt	r2, #20971	; 0x51eb
   38288:	umull	r2, r3, ip, r2
   3828c:	lsr	r2, r3, #5
   38290:	mov	r3, #100	; 0x64
   38294:	mls	ip, r2, r3, ip
   38298:	movw	r3, #39824	; 0x9b90
   3829c:	movt	r3, #4
   382a0:	add	r3, r3, ip, lsl #1
   382a4:	mov	ip, r2
   382a8:	ldrh	r3, [r3]
   382ac:	strh	r3, [r1, #-2]!
   382b0:	movw	r2, #34079	; 0x851f
   382b4:	movt	r2, #20971	; 0x51eb
   382b8:	umull	r2, r3, ip, r2
   382bc:	lsr	r2, r3, #5
   382c0:	mov	r3, #100	; 0x64
   382c4:	mls	ip, r2, r3, ip
   382c8:	movw	r3, #39824	; 0x9b90
   382cc:	movt	r3, #4
   382d0:	add	r3, r3, ip, lsl #1
   382d4:	mov	ip, r2
   382d8:	ldrh	r3, [r3]
   382dc:	strh	r3, [r1, #-2]!
   382e0:	movw	r2, #34079	; 0x851f
   382e4:	movt	r2, #20971	; 0x51eb
   382e8:	umull	r2, r3, ip, r2
   382ec:	lsr	r2, r3, #5
   382f0:	mov	r3, #100	; 0x64
   382f4:	mls	ip, r2, r3, ip
   382f8:	movw	r3, #39824	; 0x9b90
   382fc:	movt	r3, #4
   38300:	add	r3, r3, ip, lsl #1
   38304:	mov	ip, r2
   38308:	ldrh	r3, [r3]
   3830c:	strh	r3, [r1, #-2]!
   38310:	add	r2, ip, #48	; 0x30
   38314:	strb	r2, [r1, #-1]
   38318:	bx	lr

0003831c <flatcc_json_printer_uint64@@Base>:
   3831c:	push	{r4, sl, fp, lr}
   38320:	add	fp, sp, #8
   38324:	mov	r1, r3
   38328:	mov	r3, r2
   3832c:	ldr	r2, [r0, #20]
   38330:	mov	r4, r0
   38334:	mov	r0, r3
   38338:	bl	3834c <flatcc_json_printer_uint64@@Base+0x30>
   3833c:	ldr	r1, [r4, #20]
   38340:	add	r0, r1, r0
   38344:	str	r0, [r4, #20]
   38348:	pop	{r4, sl, fp, pc}
   3834c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   38350:	add	fp, sp, #24
   38354:	mov	r7, r0
   38358:	movw	r0, #51711	; 0xc9ff
   3835c:	mov	r4, r2
   38360:	movt	r0, #15258	; 0x3b9a
   38364:	subs	r0, r0, r7
   38368:	rscs	r0, r1, #0
   3836c:	bcc	38380 <flatcc_json_printer_uint64@@Base+0x64>
   38370:	mov	r0, r7
   38374:	mov	r1, r4
   38378:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   3837c:	b	38010 <flatcc_json_printer_uint32@@Base+0x2c>
   38380:	mov	r6, r1
   38384:	movw	r1, #40960	; 0xa000
   38388:	movw	r0, #2328	; 0x918
   3838c:	movt	r1, #20082	; 0x4e72
   38390:	subs	r1, r7, r1
   38394:	sbcs	r0, r6, r0
   38398:	bcc	383f8 <flatcc_json_printer_uint64@@Base+0xdc>
   3839c:	movw	r1, #0
   383a0:	movw	r0, #34546	; 0x86f2
   383a4:	movt	r1, #28609	; 0x6fc1
   383a8:	movt	r0, #35	; 0x23
   383ac:	subs	r1, r7, r1
   383b0:	sbcs	r0, r6, r0
   383b4:	bcc	38428 <flatcc_json_printer_uint64@@Base+0x10c>
   383b8:	movw	r1, #0
   383bc:	movw	r0, #46771	; 0xb6b3
   383c0:	movt	r1, #42852	; 0xa764
   383c4:	movt	r0, #3552	; 0xde0
   383c8:	subs	r1, r7, r1
   383cc:	sbcs	r0, r6, r0
   383d0:	bcc	38470 <flatcc_json_printer_uint64@@Base+0x154>
   383d4:	movw	r1, #65535	; 0xffff
   383d8:	movw	r0, #8964	; 0x2304
   383dc:	mov	r8, #19
   383e0:	movt	r1, #35303	; 0x89e7
   383e4:	movt	r0, #35527	; 0x8ac7
   383e8:	subs	r1, r1, r7
   383ec:	sbcs	r0, r0, r6
   383f0:	movwcc	r8, #20
   383f4:	b	384b0 <flatcc_json_printer_uint64@@Base+0x194>
   383f8:	movw	r0, #59392	; 0xe800
   383fc:	movt	r0, #18550	; 0x4876
   38400:	subs	r0, r7, r0
   38404:	sbcs	r0, r6, #23
   38408:	bcc	38454 <flatcc_json_printer_uint64@@Base+0x138>
   3840c:	movw	r0, #4095	; 0xfff
   38410:	mov	r8, #12
   38414:	movt	r0, #54437	; 0xd4a5
   38418:	subs	r0, r0, r7
   3841c:	rscs	r0, r6, #232	; 0xe8
   38420:	movwcc	r8, #13
   38424:	b	384b0 <flatcc_json_printer_uint64@@Base+0x194>
   38428:	movw	r1, #32768	; 0x8000
   3842c:	movw	r0, #36222	; 0x8d7e
   38430:	movt	r1, #42182	; 0xa4c6
   38434:	movt	r0, #3
   38438:	subs	r1, r7, r1
   3843c:	sbcs	r0, r6, r0
   38440:	bcc	38494 <flatcc_json_printer_uint64@@Base+0x178>
   38444:	mov	r0, #0
   38448:	mov	r8, #16
   3844c:	strb	r0, [r4, #16]!
   38450:	b	38570 <flatcc_json_printer_uint64@@Base+0x254>
   38454:	movw	r0, #58367	; 0xe3ff
   38458:	mov	r8, #10
   3845c:	movt	r0, #21515	; 0x540b
   38460:	subs	r0, r0, r7
   38464:	rscs	r0, r6, #2
   38468:	movwcc	r8, #11
   3846c:	b	384b0 <flatcc_json_printer_uint64@@Base+0x194>
   38470:	movw	r1, #65535	; 0xffff
   38474:	movw	r0, #17784	; 0x4578
   38478:	mov	r8, #17
   3847c:	movt	r1, #23945	; 0x5d89
   38480:	movt	r0, #355	; 0x163
   38484:	subs	r1, r1, r7
   38488:	sbcs	r0, r0, r6
   3848c:	movwcc	r8, #18
   38490:	b	384b0 <flatcc_json_printer_uint64@@Base+0x194>
   38494:	movw	r1, #16383	; 0x3fff
   38498:	movw	r0, #23283	; 0x5af3
   3849c:	mov	r8, #14
   384a0:	movt	r1, #4218	; 0x107a
   384a4:	subs	r1, r1, r7
   384a8:	sbcs	r0, r0, r6
   384ac:	movwcc	r8, #15
   384b0:	mov	r0, #0
   384b4:	tst	r8, #1
   384b8:	strb	r0, [r4, r8]!
   384bc:	bne	38654 <flatcc_json_printer_uint64@@Base+0x338>
   384c0:	sub	r0, r8, #10
   384c4:	cmp	r0, #10
   384c8:	bhi	387c8 <flatcc_json_printer_uint64@@Base+0x4ac>
   384cc:	add	r1, pc, #0
   384d0:	ldr	pc, [r1, r0, lsl #2]
   384d4:	andeq	r8, r3, r8, lsl r6
   384d8:	andeq	r8, r3, r8, asr #15
   384dc:	andeq	r8, r3, r0, ror #11
   384e0:	andeq	r8, r3, r8, asr #15
   384e4:	andeq	r8, r3, r8, lsr #11
   384e8:	andeq	r8, r3, r8, asr #15
   384ec:	andeq	r8, r3, r0, ror r5
   384f0:	andeq	r8, r3, r8, asr #15
   384f4:	andeq	r8, r3, r8, lsr r5
   384f8:	andeq	r8, r3, r8, asr #15
   384fc:	andeq	r8, r3, r0, lsl #10
   38500:	mov	r0, r7
   38504:	mov	r1, r6
   38508:	mov	r2, #100	; 0x64
   3850c:	mov	r3, #0
   38510:	mov	r5, #100	; 0x64
   38514:	bl	4328c <flatcc_json_printer_clear@@Base+0xb90>
   38518:	movw	r2, #39824	; 0x9b90
   3851c:	mov	r6, r1
   38520:	mls	r1, r0, r5, r7
   38524:	mov	r7, r0
   38528:	movt	r2, #4
   3852c:	add	r1, r2, r1, lsl #1
   38530:	ldrh	r1, [r1]
   38534:	strh	r1, [r4, #-2]!
   38538:	mov	r0, r7
   3853c:	mov	r1, r6
   38540:	mov	r2, #100	; 0x64
   38544:	mov	r3, #0
   38548:	mov	r5, #100	; 0x64
   3854c:	bl	4328c <flatcc_json_printer_clear@@Base+0xb90>
   38550:	movw	r2, #39824	; 0x9b90
   38554:	mov	r6, r1
   38558:	mls	r1, r0, r5, r7
   3855c:	mov	r7, r0
   38560:	movt	r2, #4
   38564:	add	r1, r2, r1, lsl #1
   38568:	ldrh	r1, [r1]
   3856c:	strh	r1, [r4, #-2]!
   38570:	mov	r0, r7
   38574:	mov	r1, r6
   38578:	mov	r2, #100	; 0x64
   3857c:	mov	r3, #0
   38580:	mov	r5, #100	; 0x64
   38584:	bl	4328c <flatcc_json_printer_clear@@Base+0xb90>
   38588:	movw	r2, #39824	; 0x9b90
   3858c:	mov	r6, r1
   38590:	mls	r1, r0, r5, r7
   38594:	mov	r7, r0
   38598:	movt	r2, #4
   3859c:	add	r1, r2, r1, lsl #1
   385a0:	ldrh	r1, [r1]
   385a4:	strh	r1, [r4, #-2]!
   385a8:	mov	r0, r7
   385ac:	mov	r1, r6
   385b0:	mov	r2, #100	; 0x64
   385b4:	mov	r3, #0
   385b8:	mov	r5, #100	; 0x64
   385bc:	bl	4328c <flatcc_json_printer_clear@@Base+0xb90>
   385c0:	movw	r2, #39824	; 0x9b90
   385c4:	mov	r6, r1
   385c8:	mls	r1, r0, r5, r7
   385cc:	mov	r7, r0
   385d0:	movt	r2, #4
   385d4:	add	r1, r2, r1, lsl #1
   385d8:	ldrh	r1, [r1]
   385dc:	strh	r1, [r4, #-2]!
   385e0:	mov	r0, r7
   385e4:	mov	r1, r6
   385e8:	mov	r2, #100	; 0x64
   385ec:	mov	r3, #0
   385f0:	mov	r5, #100	; 0x64
   385f4:	bl	4328c <flatcc_json_printer_clear@@Base+0xb90>
   385f8:	movw	r2, #39824	; 0x9b90
   385fc:	mov	r6, r1
   38600:	mls	r1, r0, r5, r7
   38604:	mov	r7, r0
   38608:	movt	r2, #4
   3860c:	add	r1, r2, r1, lsl #1
   38610:	ldrh	r1, [r1]
   38614:	strh	r1, [r4, #-2]!
   38618:	mov	r0, r7
   3861c:	mov	r1, r6
   38620:	mov	r2, #100	; 0x64
   38624:	mov	r3, #0
   38628:	mov	r5, #100	; 0x64
   3862c:	bl	4328c <flatcc_json_printer_clear@@Base+0xb90>
   38630:	movw	r2, #39824	; 0x9b90
   38634:	mov	r6, r1
   38638:	mls	r1, r0, r5, r7
   3863c:	mov	r7, r0
   38640:	movt	r2, #4
   38644:	add	r1, r2, r1, lsl #1
   38648:	ldrh	r1, [r1]
   3864c:	strh	r1, [r4, #-2]!
   38650:	b	387c8 <flatcc_json_printer_uint64@@Base+0x4ac>
   38654:	sub	r0, r8, #11
   38658:	cmp	r0, #8
   3865c:	bhi	387c8 <flatcc_json_printer_uint64@@Base+0x4ac>
   38660:	add	r1, pc, #0
   38664:	ldr	pc, [r1, r0, lsl #2]
   38668:	andeq	r8, r3, r4, ror #14
   3866c:	andeq	r8, r3, r8, asr #15
   38670:	andeq	r8, r3, ip, lsr #14
   38674:	andeq	r8, r3, r8, asr #15
   38678:	strdeq	r8, [r3], -r4
   3867c:	andeq	r8, r3, r8, asr #15
   38680:			; <UNDEFINED> instruction: 0x000386bc
   38684:	andeq	r8, r3, r8, asr #15
   38688:	andeq	r8, r3, ip, lsl #13
   3868c:	mov	r0, r7
   38690:	mov	r1, r6
   38694:	mov	r2, #100	; 0x64
   38698:	mov	r3, #0
   3869c:	bl	4328c <flatcc_json_printer_clear@@Base+0xb90>
   386a0:	mov	r7, r0
   386a4:	movw	r0, #39824	; 0x9b90
   386a8:	mov	r6, r1
   386ac:	movt	r0, #4
   386b0:	add	r0, r0, r2, lsl #1
   386b4:	ldrh	r0, [r0]
   386b8:	strh	r0, [r4, #-2]!
   386bc:	mov	r0, r7
   386c0:	mov	r1, r6
   386c4:	mov	r2, #100	; 0x64
   386c8:	mov	r3, #0
   386cc:	mov	r5, #100	; 0x64
   386d0:	bl	4328c <flatcc_json_printer_clear@@Base+0xb90>
   386d4:	movw	r2, #39824	; 0x9b90
   386d8:	mov	r6, r1
   386dc:	mls	r1, r0, r5, r7
   386e0:	mov	r7, r0
   386e4:	movt	r2, #4
   386e8:	add	r1, r2, r1, lsl #1
   386ec:	ldrh	r1, [r1]
   386f0:	strh	r1, [r4, #-2]!
   386f4:	mov	r0, r7
   386f8:	mov	r1, r6
   386fc:	mov	r2, #100	; 0x64
   38700:	mov	r3, #0
   38704:	mov	r5, #100	; 0x64
   38708:	bl	4328c <flatcc_json_printer_clear@@Base+0xb90>
   3870c:	movw	r2, #39824	; 0x9b90
   38710:	mov	r6, r1
   38714:	mls	r1, r0, r5, r7
   38718:	mov	r7, r0
   3871c:	movt	r2, #4
   38720:	add	r1, r2, r1, lsl #1
   38724:	ldrh	r1, [r1]
   38728:	strh	r1, [r4, #-2]!
   3872c:	mov	r0, r7
   38730:	mov	r1, r6
   38734:	mov	r2, #100	; 0x64
   38738:	mov	r3, #0
   3873c:	mov	r5, #100	; 0x64
   38740:	bl	4328c <flatcc_json_printer_clear@@Base+0xb90>
   38744:	movw	r2, #39824	; 0x9b90
   38748:	mov	r6, r1
   3874c:	mls	r1, r0, r5, r7
   38750:	mov	r7, r0
   38754:	movt	r2, #4
   38758:	add	r1, r2, r1, lsl #1
   3875c:	ldrh	r1, [r1]
   38760:	strh	r1, [r4, #-2]!
   38764:	mov	r0, r7
   38768:	mov	r1, r6
   3876c:	mov	r2, #100	; 0x64
   38770:	mov	r3, #0
   38774:	mov	r9, #100	; 0x64
   38778:	bl	4328c <flatcc_json_printer_clear@@Base+0xb90>
   3877c:	mov	r2, #10
   38780:	mov	r3, #0
   38784:	mov	r5, r0
   38788:	bl	4328c <flatcc_json_printer_clear@@Base+0xb90>
   3878c:	orr	r0, r2, #48	; 0x30
   38790:	movw	r1, #39824	; 0x9b90
   38794:	mov	r2, #1000	; 0x3e8
   38798:	mov	r3, #0
   3879c:	strb	r0, [r4, #-3]!
   387a0:	mls	r0, r5, r9, r7
   387a4:	movt	r1, #4
   387a8:	add	r0, r1, r0, lsl #1
   387ac:	mov	r1, r6
   387b0:	ldrh	r0, [r0]
   387b4:	strh	r0, [r4, #1]
   387b8:	mov	r0, r7
   387bc:	bl	4328c <flatcc_json_printer_clear@@Base+0xb90>
   387c0:	mov	r7, r0
   387c4:	mov	r6, r1
   387c8:	mov	r0, r7
   387cc:	mov	r1, r6
   387d0:	mov	r2, #100	; 0x64
   387d4:	mov	r3, #0
   387d8:	mov	r5, #100	; 0x64
   387dc:	bl	4328c <flatcc_json_printer_clear@@Base+0xb90>
   387e0:	mls	r2, r0, r5, r7
   387e4:	movw	r5, #39824	; 0x9b90
   387e8:	mov	r3, #0
   387ec:	movt	r5, #4
   387f0:	add	r2, r5, r2, lsl #1
   387f4:	ldrh	r2, [r2]
   387f8:	strh	r2, [r4, #-2]
   387fc:	mov	r2, #100	; 0x64
   38800:	bl	4328c <flatcc_json_printer_clear@@Base+0xb90>
   38804:	add	r0, r5, r2, lsl #1
   38808:	mov	r1, r6
   3880c:	movw	r2, #10000	; 0x2710
   38810:	mov	r3, #0
   38814:	ldrh	r0, [r0]
   38818:	strh	r0, [r4, #-4]
   3881c:	mov	r0, r7
   38820:	bl	4328c <flatcc_json_printer_clear@@Base+0xb90>
   38824:	mov	r2, #100	; 0x64
   38828:	mov	r3, #0
   3882c:	bl	4328c <flatcc_json_printer_clear@@Base+0xb90>
   38830:	add	r0, r5, r2, lsl #1
   38834:	movw	r2, #16960	; 0x4240
   38838:	mov	r1, r6
   3883c:	mov	r3, #0
   38840:	ldrh	r0, [r0]
   38844:	movt	r2, #15
   38848:	strh	r0, [r4, #-6]
   3884c:	mov	r0, r7
   38850:	bl	4328c <flatcc_json_printer_clear@@Base+0xb90>
   38854:	mov	r2, #100	; 0x64
   38858:	mov	r3, #0
   3885c:	bl	4328c <flatcc_json_printer_clear@@Base+0xb90>
   38860:	add	r0, r5, r2, lsl #1
   38864:	ldrh	r0, [r0]
   38868:	strh	r0, [r4, #-8]
   3886c:	mov	r0, r8
   38870:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00038874 <flatcc_json_printer_int8@@Base>:
   38874:	push	{r4, r5, fp, lr}
   38878:	add	fp, sp, #8
   3887c:	ubfx	r5, r1, #7, #1
   38880:	ldr	r2, [r0, #20]
   38884:	cmn	r1, #1
   38888:	mov	r4, r0
   3888c:	movle	r0, #45	; 0x2d
   38890:	rsble	r1, r1, #0
   38894:	strble	r0, [r2], #1
   38898:	uxtb	r0, r1
   3889c:	mov	r1, r2
   388a0:	bl	37db4 <flatcc_json_printer_uint8@@Base+0x2c>
   388a4:	ldr	r1, [r4, #20]
   388a8:	add	r0, r0, r5
   388ac:	add	r0, r1, r0
   388b0:	str	r0, [r4, #20]
   388b4:	pop	{r4, r5, fp, pc}

000388b8 <flatcc_json_printer_int16@@Base>:
   388b8:	push	{r4, r5, fp, lr}
   388bc:	add	fp, sp, #8
   388c0:	ubfx	r5, r1, #15, #1
   388c4:	ldr	r2, [r0, #20]
   388c8:	cmn	r1, #1
   388cc:	mov	r4, r0
   388d0:	movle	r0, #45	; 0x2d
   388d4:	rsble	r1, r1, #0
   388d8:	strble	r0, [r2], #1
   388dc:	uxth	r0, r1
   388e0:	mov	r1, r2
   388e4:	bl	37e84 <flatcc_json_printer_uint16@@Base+0x2c>
   388e8:	ldr	r1, [r4, #20]
   388ec:	add	r0, r0, r5
   388f0:	add	r0, r1, r0
   388f4:	str	r0, [r4, #20]
   388f8:	pop	{r4, r5, fp, pc}

000388fc <flatcc_json_printer_int32@@Base>:
   388fc:	push	{r4, r5, fp, lr}
   38900:	add	fp, sp, #8
   38904:	mov	r2, r1
   38908:	lsr	r5, r1, #31
   3890c:	ldr	r1, [r0, #20]
   38910:	mov	r4, r0
   38914:	cmn	r2, #1
   38918:	movle	r0, #45	; 0x2d
   3891c:	rsble	r2, r2, #0
   38920:	strble	r0, [r1], #1
   38924:	mov	r0, r2
   38928:	bl	38010 <flatcc_json_printer_uint32@@Base+0x2c>
   3892c:	ldr	r1, [r4, #20]
   38930:	add	r0, r0, r5
   38934:	add	r0, r1, r0
   38938:	str	r0, [r4, #20]
   3893c:	pop	{r4, r5, fp, pc}

00038940 <flatcc_json_printer_int64@@Base>:
   38940:	push	{r4, r5, fp, lr}
   38944:	add	fp, sp, #8
   38948:	mov	r1, r3
   3894c:	mov	r3, r2
   38950:	ldr	r2, [r0, #20]
   38954:	mov	r4, r0
   38958:	lsr	r5, r1, #31
   3895c:	cmn	r1, #1
   38960:	bgt	38974 <flatcc_json_printer_int64@@Base+0x34>
   38964:	mov	r0, #45	; 0x2d
   38968:	rsbs	r3, r3, #0
   3896c:	strb	r0, [r2], #1
   38970:	rsc	r1, r1, #0
   38974:	mov	r0, r3
   38978:	bl	3834c <flatcc_json_printer_uint64@@Base+0x30>
   3897c:	ldr	r1, [r4, #20]
   38980:	add	r0, r0, r5
   38984:	add	r0, r1, r0
   38988:	str	r0, [r4, #20]
   3898c:	pop	{r4, r5, fp, pc}

00038990 <flatcc_json_printer_float@@Base>:
   38990:	push	{r4, sl, fp, lr}
   38994:	add	fp, sp, #8
   38998:	mov	r4, r0
   3899c:	ldr	r0, [r0, #20]
   389a0:	vcvt.f64.f32	d0, s0
   389a4:	bl	37078 <flatcc_json_printer_fmt_float@@Base+0x8>
   389a8:	ldr	r1, [r4, #20]
   389ac:	add	r0, r1, r0
   389b0:	str	r0, [r4, #20]
   389b4:	pop	{r4, sl, fp, pc}

000389b8 <flatcc_json_printer_double@@Base>:
   389b8:	push	{r4, sl, fp, lr}
   389bc:	add	fp, sp, #8
   389c0:	mov	r4, r0
   389c4:	ldr	r0, [r0, #20]
   389c8:	bl	37078 <flatcc_json_printer_fmt_float@@Base+0x8>
   389cc:	ldr	r1, [r4, #20]
   389d0:	add	r0, r1, r0
   389d4:	str	r0, [r4, #20]
   389d8:	pop	{r4, sl, fp, pc}

000389dc <flatcc_json_printer_enum@@Base>:
   389dc:	push	{r4, r5, r6, r7, fp, lr}
   389e0:	add	fp, sp, #16
   389e4:	mov	r4, r0
   389e8:	ldr	r0, [r0, #20]
   389ec:	mov	r6, r1
   389f0:	mov	r1, #34	; 0x22
   389f4:	mov	r5, r2
   389f8:	strb	r1, [r0]
   389fc:	ldrb	r2, [r4, #26]
   38a00:	ldr	r0, [r4, #20]
   38a04:	ldr	r1, [r4, #16]
   38a08:	cmp	r2, #0
   38a0c:	addeq	r0, r0, #1
   38a10:	add	r2, r0, r5
   38a14:	str	r0, [r4, #20]
   38a18:	cmp	r2, r1
   38a1c:	bcc	38a90 <flatcc_json_printer_enum@@Base+0xb4>
   38a20:	cmp	r0, r1
   38a24:	bcc	38a40 <flatcc_json_printer_enum@@Base+0x64>
   38a28:	ldr	r2, [r4, #44]	; 0x2c
   38a2c:	mov	r0, r4
   38a30:	mov	r1, #0
   38a34:	blx	r2
   38a38:	ldr	r1, [r4, #16]
   38a3c:	ldr	r0, [r4, #20]
   38a40:	sub	r7, r1, r0
   38a44:	cmp	r7, r5
   38a48:	bcs	38a90 <flatcc_json_printer_enum@@Base+0xb4>
   38a4c:	mov	r1, r6
   38a50:	mov	r2, r7
   38a54:	bl	14e60 <memcpy@plt>
   38a58:	ldr	r0, [r4, #20]
   38a5c:	ldr	r2, [r4, #44]	; 0x2c
   38a60:	mov	r1, #0
   38a64:	add	r0, r0, r7
   38a68:	str	r0, [r4, #20]
   38a6c:	mov	r0, r4
   38a70:	blx	r2
   38a74:	ldr	r1, [r4, #16]
   38a78:	ldr	r0, [r4, #20]
   38a7c:	sub	r5, r5, r7
   38a80:	add	r6, r6, r7
   38a84:	sub	r7, r1, r0
   38a88:	cmp	r5, r7
   38a8c:	bhi	38a4c <flatcc_json_printer_enum@@Base+0x70>
   38a90:	mov	r1, r6
   38a94:	mov	r2, r5
   38a98:	bl	14e60 <memcpy@plt>
   38a9c:	ldr	r0, [r4, #20]
   38aa0:	add	r1, r0, r5
   38aa4:	str	r1, [r4, #20]
   38aa8:	mov	r1, #34	; 0x22
   38aac:	strb	r1, [r0, r5]
   38ab0:	ldrb	r0, [r4, #26]
   38ab4:	ldr	r1, [r4, #20]
   38ab8:	cmp	r0, #0
   38abc:	addeq	r1, r1, #1
   38ac0:	str	r1, [r4, #20]
   38ac4:	pop	{r4, r5, r6, r7, fp, pc}

00038ac8 <flatcc_json_printer_delimit_enum_flags@@Base>:
   38ac8:	ldrb	ip, [r0, #26]
   38acc:	ldr	r3, [r0, #20]
   38ad0:	mov	r2, #34	; 0x22
   38ad4:	cmp	r1, #0
   38ad8:	movwne	r1, #1
   38adc:	strb	r2, [r3]
   38ae0:	clz	r2, ip
   38ae4:	lsr	r2, r2, #5
   38ae8:	orr	r1, r1, r2
   38aec:	ldr	r2, [r0, #20]
   38af0:	add	r1, r2, r1
   38af4:	str	r1, [r0, #20]
   38af8:	bx	lr

00038afc <flatcc_json_printer_enum_flag@@Base>:
   38afc:	push	{r4, r5, r6, r7, fp, lr}
   38b00:	add	fp, sp, #16
   38b04:	mov	r5, r0
   38b08:	ldr	r0, [r0, #20]
   38b0c:	mov	r6, r2
   38b10:	mov	r2, #32
   38b14:	cmp	r1, #0
   38b18:	mov	r4, r3
   38b1c:	strb	r2, [r0]
   38b20:	ldr	r0, [r5, #20]
   38b24:	ldr	r2, [r5, #16]
   38b28:	addgt	r0, r0, #1
   38b2c:	add	r1, r0, r3
   38b30:	str	r0, [r5, #20]
   38b34:	cmp	r1, r2
   38b38:	bcc	38bac <flatcc_json_printer_enum_flag@@Base+0xb0>
   38b3c:	cmp	r0, r2
   38b40:	bcc	38b5c <flatcc_json_printer_enum_flag@@Base+0x60>
   38b44:	ldr	r2, [r5, #44]	; 0x2c
   38b48:	mov	r0, r5
   38b4c:	mov	r1, #0
   38b50:	blx	r2
   38b54:	ldr	r2, [r5, #16]
   38b58:	ldr	r0, [r5, #20]
   38b5c:	sub	r7, r2, r0
   38b60:	cmp	r7, r4
   38b64:	bcs	38bac <flatcc_json_printer_enum_flag@@Base+0xb0>
   38b68:	mov	r1, r6
   38b6c:	mov	r2, r7
   38b70:	bl	14e60 <memcpy@plt>
   38b74:	ldr	r0, [r5, #20]
   38b78:	ldr	r2, [r5, #44]	; 0x2c
   38b7c:	mov	r1, #0
   38b80:	add	r0, r0, r7
   38b84:	str	r0, [r5, #20]
   38b88:	mov	r0, r5
   38b8c:	blx	r2
   38b90:	ldr	r1, [r5, #16]
   38b94:	ldr	r0, [r5, #20]
   38b98:	sub	r4, r4, r7
   38b9c:	add	r6, r6, r7
   38ba0:	sub	r7, r1, r0
   38ba4:	cmp	r4, r7
   38ba8:	bhi	38b68 <flatcc_json_printer_enum_flag@@Base+0x6c>
   38bac:	mov	r1, r6
   38bb0:	mov	r2, r4
   38bb4:	bl	14e60 <memcpy@plt>
   38bb8:	ldr	r0, [r5, #20]
   38bbc:	add	r0, r0, r4
   38bc0:	str	r0, [r5, #20]
   38bc4:	pop	{r4, r5, r6, r7, fp, pc}

00038bc8 <flatcc_json_printer_string_field@@Base>:
   38bc8:	push	{r4, r5, fp, lr}
   38bcc:	add	fp, sp, #8
   38bd0:	mov	r4, r0
   38bd4:	mov	r0, #4
   38bd8:	add	r0, r0, r2, lsl #1
   38bdc:	ldr	r2, [r1, #8]
   38be0:	cmp	r0, r2
   38be4:	popge	{r4, r5, fp, pc}
   38be8:	ldr	r2, [r1, #4]
   38bec:	add	r0, r2, r0
   38bf0:	ldrh	r0, [r0]
   38bf4:	cmp	r0, #0
   38bf8:	ldrne	r2, [r1]
   38bfc:	addsne	r5, r2, r0
   38c00:	bne	38c08 <flatcc_json_printer_string_field@@Base+0x40>
   38c04:	pop	{r4, r5, fp, pc}
   38c08:	ldr	ip, [r1, #16]
   38c0c:	ldr	r2, [fp, #8]
   38c10:	add	r0, ip, #1
   38c14:	cmp	ip, #0
   38c18:	str	r0, [r1, #16]
   38c1c:	ldrne	r0, [r4, #20]
   38c20:	addne	r1, r0, #1
   38c24:	strne	r1, [r4, #20]
   38c28:	movne	r1, #44	; 0x2c
   38c2c:	strbne	r1, [r0]
   38c30:	mov	r0, r4
   38c34:	mov	r1, r3
   38c38:	bl	38c54 <flatcc_json_printer_string_field@@Base+0x8c>
   38c3c:	ldr	r0, [r5]
   38c40:	ldr	r2, [r5, r0]!
   38c44:	mov	r0, r4
   38c48:	add	r1, r5, #4
   38c4c:	pop	{r4, r5, fp, lr}
   38c50:	b	3791c <flatcc_json_printer_string@@Base+0x4>
   38c54:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   38c58:	add	fp, sp, #24
   38c5c:	mov	r4, r0
   38c60:	mov	r6, r1
   38c64:	ldr	r0, [r0, #20]
   38c68:	mov	r8, r2
   38c6c:	ldrb	r1, [r4, #25]
   38c70:	cmp	r1, #0
   38c74:	beq	38d34 <flatcc_json_printer_string_field@@Base+0x16c>
   38c78:	add	r1, r0, #1
   38c7c:	mov	r9, r4
   38c80:	str	r1, [r4, #20]
   38c84:	mov	r1, #10
   38c88:	strb	r1, [r0]
   38c8c:	ldr	r1, [r9, #16]!
   38c90:	ldr	r0, [r4, #20]
   38c94:	ldrb	r2, [r9, #9]
   38c98:	ldr	r3, [r9, #16]
   38c9c:	mla	r5, r3, r2, r0
   38ca0:	mul	r7, r3, r2
   38ca4:	cmp	r5, r1
   38ca8:	bls	38d18 <flatcc_json_printer_string_field@@Base+0x150>
   38cac:	cmp	r0, r1
   38cb0:	bcc	38ccc <flatcc_json_printer_string_field@@Base+0x104>
   38cb4:	ldr	r2, [r4, #44]	; 0x2c
   38cb8:	mov	r0, r4
   38cbc:	mov	r1, #0
   38cc0:	blx	r2
   38cc4:	ldr	r1, [r4, #16]
   38cc8:	ldr	r0, [r4, #20]
   38ccc:	sub	r5, r1, r0
   38cd0:	cmp	r5, r7
   38cd4:	bcs	38d18 <flatcc_json_printer_string_field@@Base+0x150>
   38cd8:	mov	r1, #32
   38cdc:	mov	r2, r5
   38ce0:	bl	14ef0 <memset@plt>
   38ce4:	ldr	r0, [r4, #20]
   38ce8:	ldr	r2, [r4, #44]	; 0x2c
   38cec:	mov	r1, #0
   38cf0:	add	r0, r0, r5
   38cf4:	str	r0, [r4, #20]
   38cf8:	mov	r0, r4
   38cfc:	blx	r2
   38d00:	ldr	r1, [r4, #16]
   38d04:	ldr	r0, [r4, #20]
   38d08:	sub	r7, r7, r5
   38d0c:	sub	r5, r1, r0
   38d10:	cmp	r7, r5
   38d14:	bhi	38cd8 <flatcc_json_printer_string_field@@Base+0x110>
   38d18:	mov	r1, #32
   38d1c:	mov	r2, r7
   38d20:	bl	14ef0 <memset@plt>
   38d24:	ldr	r0, [r4, #20]
   38d28:	add	r0, r0, r7
   38d2c:	str	r0, [r4, #20]
   38d30:	b	38d58 <flatcc_json_printer_string_field@@Base+0x190>
   38d34:	mov	r9, r4
   38d38:	ldr	r1, [r9, #16]!
   38d3c:	cmp	r0, r1
   38d40:	bcc	38d58 <flatcc_json_printer_string_field@@Base+0x190>
   38d44:	ldr	r2, [r4, #44]	; 0x2c
   38d48:	mov	r0, r4
   38d4c:	mov	r1, #0
   38d50:	blx	r2
   38d54:	ldr	r0, [r4, #20]
   38d58:	mov	r1, #34	; 0x22
   38d5c:	strb	r1, [r0]
   38d60:	ldrb	r2, [r4, #26]
   38d64:	ldr	r0, [r4, #20]
   38d68:	ldr	r1, [r4, #16]
   38d6c:	cmp	r2, #0
   38d70:	addeq	r0, r0, #1
   38d74:	add	r2, r0, r8
   38d78:	str	r0, [r4, #20]
   38d7c:	cmp	r2, r1
   38d80:	bcc	38df4 <flatcc_json_printer_string_field@@Base+0x22c>
   38d84:	cmp	r0, r1
   38d88:	bcc	38da4 <flatcc_json_printer_string_field@@Base+0x1dc>
   38d8c:	ldr	r2, [r4, #44]	; 0x2c
   38d90:	mov	r0, r4
   38d94:	mov	r1, #0
   38d98:	blx	r2
   38d9c:	ldr	r0, [r4, #20]
   38da0:	ldr	r1, [r9]
   38da4:	sub	r7, r1, r0
   38da8:	cmp	r7, r8
   38dac:	bcs	38df4 <flatcc_json_printer_string_field@@Base+0x22c>
   38db0:	mov	r1, r6
   38db4:	mov	r2, r7
   38db8:	bl	14e60 <memcpy@plt>
   38dbc:	ldr	r0, [r4, #20]
   38dc0:	ldr	r2, [r4, #44]	; 0x2c
   38dc4:	mov	r1, #0
   38dc8:	add	r0, r0, r7
   38dcc:	str	r0, [r4, #20]
   38dd0:	mov	r0, r4
   38dd4:	blx	r2
   38dd8:	ldr	r0, [r4, #20]
   38ddc:	ldr	r1, [r9]
   38de0:	sub	r8, r8, r7
   38de4:	add	r6, r6, r7
   38de8:	sub	r7, r1, r0
   38dec:	cmp	r8, r7
   38df0:	bhi	38db0 <flatcc_json_printer_string_field@@Base+0x1e8>
   38df4:	mov	r1, r6
   38df8:	mov	r2, r8
   38dfc:	bl	14e60 <memcpy@plt>
   38e00:	ldr	r0, [r4, #20]
   38e04:	add	r1, r0, r8
   38e08:	str	r1, [r4, #20]
   38e0c:	mov	r1, #34	; 0x22
   38e10:	strb	r1, [r0, r8]
   38e14:	ldrb	r0, [r4, #26]
   38e18:	ldr	r1, [r4, #20]
   38e1c:	cmp	r0, #0
   38e20:	addeq	r1, r1, #1
   38e24:	add	r0, r1, #1
   38e28:	str	r0, [r4, #20]
   38e2c:	mov	r0, #58	; 0x3a
   38e30:	strb	r0, [r1]
   38e34:	mov	r1, #32
   38e38:	ldr	r0, [r4, #20]
   38e3c:	strb	r1, [r0]
   38e40:	ldrb	r0, [r4, #25]
   38e44:	ldr	r1, [r4, #20]
   38e48:	cmp	r0, #0
   38e4c:	addne	r1, r1, #1
   38e50:	str	r1, [r4, #20]
   38e54:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00038e58 <flatcc_json_printer_uint8_vector_base64_field@@Base>:
   38e58:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   38e5c:	add	fp, sp, #28
   38e60:	sub	sp, sp, #12
   38e64:	mov	r4, r0
   38e68:	mov	r0, #4
   38e6c:	add	r0, r0, r2, lsl #1
   38e70:	ldr	r2, [r1, #8]
   38e74:	cmp	r0, r2
   38e78:	bge	39014 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1bc>
   38e7c:	ldr	r2, [r1, #4]
   38e80:	add	r0, r2, r0
   38e84:	ldrh	r0, [r0]
   38e88:	cmp	r0, #0
   38e8c:	beq	39014 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1bc>
   38e90:	ldr	r5, [fp, #12]
   38e94:	ldr	r2, [r1]
   38e98:	cmp	r5, #0
   38e9c:	add	r6, r2, r0
   38ea0:	movwne	r5, #1
   38ea4:	cmp	r6, #0
   38ea8:	beq	39014 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1bc>
   38eac:	ldr	r0, [r1, #16]
   38eb0:	ldr	r2, [fp, #8]
   38eb4:	add	r7, r0, #1
   38eb8:	cmp	r0, #0
   38ebc:	str	r7, [r1, #16]
   38ec0:	ldrne	r0, [r4, #20]
   38ec4:	addne	r1, r0, #1
   38ec8:	strne	r1, [r4, #20]
   38ecc:	movne	r1, #44	; 0x2c
   38ed0:	strbne	r1, [r0]
   38ed4:	mov	r0, r4
   38ed8:	mov	r1, r3
   38edc:	bl	38c54 <flatcc_json_printer_string_field@@Base+0x8c>
   38ee0:	ldr	r0, [r6]
   38ee4:	ldr	r0, [r6, r0]!
   38ee8:	str	r0, [sp, #8]
   38eec:	ldr	r0, [r4, #20]
   38ef0:	add	r1, r0, #1
   38ef4:	str	r1, [r4, #20]
   38ef8:	mov	r1, #34	; 0x22
   38efc:	strb	r1, [r0]
   38f00:	movw	r1, #43691	; 0xaaab
   38f04:	ldr	r0, [sp, #8]
   38f08:	movt	r1, #43690	; 0xaaaa
   38f0c:	lsl	r0, r0, #2
   38f10:	umull	r0, r1, r0, r1
   38f14:	mov	r0, #3
   38f18:	add	r0, r0, r1, lsr #1
   38f1c:	ldr	r1, [r4, #16]
   38f20:	bic	r7, r0, #3
   38f24:	ldr	r0, [r4, #20]
   38f28:	add	r2, r0, r7
   38f2c:	cmp	r2, r1
   38f30:	bcc	38f50 <flatcc_json_printer_uint8_vector_base64_field@@Base+0xf8>
   38f34:	ldr	r2, [r4, #44]	; 0x2c
   38f38:	mov	r0, r4
   38f3c:	mov	r1, #0
   38f40:	blx	r2
   38f44:	ldr	r0, [r4, #20]
   38f48:	ldr	r1, [r4, #16]
   38f4c:	add	r2, r0, r7
   38f50:	add	r6, r6, #4
   38f54:	cmp	r2, r1
   38f58:	bls	38fec <flatcc_json_printer_uint8_vector_base64_field@@Base+0x194>
   38f5c:	add	r9, sp, #4
   38f60:	mov	sl, #3
   38f64:	sub	r1, r1, r0
   38f68:	bic	r7, r1, #3
   38f6c:	add	r1, r7, r7, lsl #1
   38f70:	cmp	r1, #0
   38f74:	beq	3901c <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1c4>
   38f78:	lsr	r8, r1, #2
   38f7c:	mov	r1, r6
   38f80:	mov	r2, r9
   38f84:	mov	r3, r5
   38f88:	str	r8, [sp, #4]
   38f8c:	bl	42b38 <flatcc_json_printer_clear@@Base+0x43c>
   38f90:	ldr	r0, [r4, #20]
   38f94:	mov	r1, #0
   38f98:	add	r0, r0, r7
   38f9c:	str	r0, [r4, #20]
   38fa0:	ldr	r0, [sp, #8]
   38fa4:	sub	r0, r0, r8
   38fa8:	str	r0, [sp, #8]
   38fac:	mov	r0, r4
   38fb0:	ldr	r2, [r4, #44]	; 0x2c
   38fb4:	blx	r2
   38fb8:	ldr	r0, [sp, #8]
   38fbc:	movw	r1, #43691	; 0xaaab
   38fc0:	add	r6, r6, r8
   38fc4:	movt	r1, #43690	; 0xaaaa
   38fc8:	lsl	r0, r0, #2
   38fcc:	umull	r0, r1, r0, r1
   38fd0:	add	r0, sl, r1, lsr #1
   38fd4:	ldr	r1, [r4, #16]
   38fd8:	bic	r7, r0, #3
   38fdc:	ldr	r0, [r4, #20]
   38fe0:	add	r2, r0, r7
   38fe4:	cmp	r2, r1
   38fe8:	bhi	38f64 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x10c>
   38fec:	orr	r3, r5, #128	; 0x80
   38ff0:	add	r2, sp, #8
   38ff4:	mov	r1, r6
   38ff8:	bl	42b38 <flatcc_json_printer_clear@@Base+0x43c>
   38ffc:	ldr	r0, [r4, #20]
   39000:	add	r1, r0, r7
   39004:	add	r1, r1, #1
   39008:	str	r1, [r4, #20]
   3900c:	mov	r1, #34	; 0x22
   39010:	strb	r1, [r0, r7]
   39014:	sub	sp, fp, #28
   39018:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3901c:	movw	r0, #40025	; 0x9c59
   39020:	movw	r1, #39099	; 0x98bb
   39024:	movw	r3, #40031	; 0x9c5f
   39028:	movw	r2, #277	; 0x115
   3902c:	movt	r0, #4
   39030:	movt	r1, #4
   39034:	movt	r3, #4
   39038:	bl	14f44 <__assert_fail@plt>

0003903c <flatcc_json_printer_uint8_field@@Base>:
   3903c:	push	{r4, r5, r6, sl, fp, lr}
   39040:	add	fp, sp, #16
   39044:	mov	r4, r0
   39048:	mov	r0, #4
   3904c:	ldr	r5, [r1, #8]
   39050:	add	r2, r0, r2, lsl #1
   39054:	ldr	r0, [fp, #12]
   39058:	cmp	r2, r5
   3905c:	bge	3907c <flatcc_json_printer_uint8_field@@Base+0x40>
   39060:	ldr	r5, [r1, #4]
   39064:	add	r2, r5, r2
   39068:	ldrh	r2, [r2]
   3906c:	cmp	r2, #0
   39070:	ldrne	r5, [r1]
   39074:	addsne	r2, r5, r2
   39078:	bne	390dc <flatcc_json_printer_uint8_field@@Base+0xa0>
   3907c:	ldrb	r2, [r4, #29]
   39080:	mov	r6, r0
   39084:	cmp	r2, #0
   39088:	popeq	{r4, r5, r6, sl, fp, pc}
   3908c:	ldr	r0, [r1, #16]
   39090:	ldr	r2, [fp, #8]
   39094:	add	r5, r0, #1
   39098:	cmp	r0, #0
   3909c:	str	r5, [r1, #16]
   390a0:	ldrne	r0, [r4, #20]
   390a4:	addne	r1, r0, #1
   390a8:	strne	r1, [r4, #20]
   390ac:	movne	r1, #44	; 0x2c
   390b0:	strbne	r1, [r0]
   390b4:	mov	r0, r4
   390b8:	mov	r1, r3
   390bc:	bl	38c54 <flatcc_json_printer_string_field@@Base+0x8c>
   390c0:	ldr	r1, [r4, #20]
   390c4:	mov	r0, r6
   390c8:	bl	37db4 <flatcc_json_printer_uint8@@Base+0x2c>
   390cc:	ldr	r1, [r4, #20]
   390d0:	add	r0, r1, r0
   390d4:	str	r0, [r4, #20]
   390d8:	pop	{r4, r5, r6, sl, fp, pc}
   390dc:	ldrb	r6, [r2]
   390e0:	cmp	r6, r0
   390e4:	bne	3908c <flatcc_json_printer_uint8_field@@Base+0x50>
   390e8:	ldrb	r2, [r4, #28]
   390ec:	mov	r6, r0
   390f0:	cmp	r2, #0
   390f4:	bne	390d8 <flatcc_json_printer_uint8_field@@Base+0x9c>
   390f8:	b	3908c <flatcc_json_printer_uint8_field@@Base+0x50>

000390fc <flatcc_json_printer_uint16_field@@Base>:
   390fc:	push	{r4, r5, r6, sl, fp, lr}
   39100:	add	fp, sp, #16
   39104:	mov	r4, r0
   39108:	mov	r0, #4
   3910c:	ldr	r5, [r1, #8]
   39110:	add	r2, r0, r2, lsl #1
   39114:	ldr	r0, [fp, #12]
   39118:	cmp	r2, r5
   3911c:	bge	3913c <flatcc_json_printer_uint16_field@@Base+0x40>
   39120:	ldr	r5, [r1, #4]
   39124:	add	r2, r5, r2
   39128:	ldrh	r2, [r2]
   3912c:	cmp	r2, #0
   39130:	ldrne	r5, [r1]
   39134:	addsne	r2, r5, r2
   39138:	bne	3919c <flatcc_json_printer_uint16_field@@Base+0xa0>
   3913c:	ldrb	r2, [r4, #29]
   39140:	mov	r6, r0
   39144:	cmp	r2, #0
   39148:	popeq	{r4, r5, r6, sl, fp, pc}
   3914c:	ldr	r0, [r1, #16]
   39150:	ldr	r2, [fp, #8]
   39154:	add	r5, r0, #1
   39158:	cmp	r0, #0
   3915c:	str	r5, [r1, #16]
   39160:	ldrne	r0, [r4, #20]
   39164:	addne	r1, r0, #1
   39168:	strne	r1, [r4, #20]
   3916c:	movne	r1, #44	; 0x2c
   39170:	strbne	r1, [r0]
   39174:	mov	r0, r4
   39178:	mov	r1, r3
   3917c:	bl	38c54 <flatcc_json_printer_string_field@@Base+0x8c>
   39180:	ldr	r1, [r4, #20]
   39184:	mov	r0, r6
   39188:	bl	37e84 <flatcc_json_printer_uint16@@Base+0x2c>
   3918c:	ldr	r1, [r4, #20]
   39190:	add	r0, r1, r0
   39194:	str	r0, [r4, #20]
   39198:	pop	{r4, r5, r6, sl, fp, pc}
   3919c:	ldrh	r6, [r2]
   391a0:	cmp	r6, r0
   391a4:	bne	3914c <flatcc_json_printer_uint16_field@@Base+0x50>
   391a8:	ldrb	r2, [r4, #28]
   391ac:	mov	r6, r0
   391b0:	cmp	r2, #0
   391b4:	bne	39198 <flatcc_json_printer_uint16_field@@Base+0x9c>
   391b8:	b	3914c <flatcc_json_printer_uint16_field@@Base+0x50>

000391bc <flatcc_json_printer_uint32_field@@Base>:
   391bc:	push	{r4, r5, r6, sl, fp, lr}
   391c0:	add	fp, sp, #16
   391c4:	mov	r4, r0
   391c8:	mov	r0, #4
   391cc:	ldr	r5, [r1, #8]
   391d0:	add	r2, r0, r2, lsl #1
   391d4:	ldr	r0, [fp, #12]
   391d8:	cmp	r2, r5
   391dc:	bge	391fc <flatcc_json_printer_uint32_field@@Base+0x40>
   391e0:	ldr	r5, [r1, #4]
   391e4:	add	r2, r5, r2
   391e8:	ldrh	r2, [r2]
   391ec:	cmp	r2, #0
   391f0:	ldrne	r5, [r1]
   391f4:	addsne	r2, r5, r2
   391f8:	bne	3925c <flatcc_json_printer_uint32_field@@Base+0xa0>
   391fc:	ldrb	r2, [r4, #29]
   39200:	mov	r6, r0
   39204:	cmp	r2, #0
   39208:	popeq	{r4, r5, r6, sl, fp, pc}
   3920c:	ldr	r0, [r1, #16]
   39210:	ldr	r2, [fp, #8]
   39214:	add	r5, r0, #1
   39218:	cmp	r0, #0
   3921c:	str	r5, [r1, #16]
   39220:	ldrne	r0, [r4, #20]
   39224:	addne	r1, r0, #1
   39228:	strne	r1, [r4, #20]
   3922c:	movne	r1, #44	; 0x2c
   39230:	strbne	r1, [r0]
   39234:	mov	r0, r4
   39238:	mov	r1, r3
   3923c:	bl	38c54 <flatcc_json_printer_string_field@@Base+0x8c>
   39240:	ldr	r1, [r4, #20]
   39244:	mov	r0, r6
   39248:	bl	38010 <flatcc_json_printer_uint32@@Base+0x2c>
   3924c:	ldr	r1, [r4, #20]
   39250:	add	r0, r1, r0
   39254:	str	r0, [r4, #20]
   39258:	pop	{r4, r5, r6, sl, fp, pc}
   3925c:	ldr	r6, [r2]
   39260:	cmp	r6, r0
   39264:	bne	3920c <flatcc_json_printer_uint32_field@@Base+0x50>
   39268:	ldrb	r2, [r4, #28]
   3926c:	mov	r6, r0
   39270:	cmp	r2, #0
   39274:	bne	39258 <flatcc_json_printer_uint32_field@@Base+0x9c>
   39278:	b	3920c <flatcc_json_printer_uint32_field@@Base+0x50>

0003927c <flatcc_json_printer_uint64_field@@Base>:
   3927c:	push	{r4, r6, r7, r8, fp, lr}
   39280:	add	fp, sp, #16
   39284:	mov	r4, r0
   39288:	mov	r0, #4
   3928c:	ldr	r6, [r1, #8]
   39290:	ldr	lr, [fp, #20]
   39294:	add	r7, r0, r2, lsl #1
   39298:	ldr	r2, [fp, #16]
   3929c:	cmp	r7, r6
   392a0:	bge	392c0 <flatcc_json_printer_uint64_field@@Base+0x44>
   392a4:	ldr	r6, [r1, #4]
   392a8:	add	r7, r6, r7
   392ac:	ldrh	r7, [r7]
   392b0:	cmp	r7, #0
   392b4:	ldrne	r6, [r1]
   392b8:	addsne	r7, r6, r7
   392bc:	bne	39328 <flatcc_json_printer_uint64_field@@Base+0xac>
   392c0:	ldrb	r0, [r4, #29]
   392c4:	mov	r8, r2
   392c8:	mov	r7, lr
   392cc:	cmp	r0, #0
   392d0:	popeq	{r4, r6, r7, r8, fp, pc}
   392d4:	ldr	r0, [r1, #16]
   392d8:	ldr	r2, [fp, #8]
   392dc:	add	r6, r0, #1
   392e0:	cmp	r0, #0
   392e4:	str	r6, [r1, #16]
   392e8:	ldrne	r0, [r4, #20]
   392ec:	addne	r1, r0, #1
   392f0:	strne	r1, [r4, #20]
   392f4:	movne	r1, #44	; 0x2c
   392f8:	strbne	r1, [r0]
   392fc:	mov	r0, r4
   39300:	mov	r1, r3
   39304:	bl	38c54 <flatcc_json_printer_string_field@@Base+0x8c>
   39308:	ldr	r2, [r4, #20]
   3930c:	mov	r0, r8
   39310:	mov	r1, r7
   39314:	bl	3834c <flatcc_json_printer_uint64@@Base+0x30>
   39318:	ldr	r1, [r4, #20]
   3931c:	add	r0, r1, r0
   39320:	str	r0, [r4, #20]
   39324:	pop	{r4, r6, r7, r8, fp, pc}
   39328:	ldr	r8, [r7]
   3932c:	ldr	r7, [r7, #4]
   39330:	eor	ip, r7, lr
   39334:	eor	r0, r8, r2
   39338:	orrs	r0, r0, ip
   3933c:	bne	392d4 <flatcc_json_printer_uint64_field@@Base+0x58>
   39340:	ldrb	r0, [r4, #28]
   39344:	mov	r8, r2
   39348:	mov	r7, lr
   3934c:	cmp	r0, #0
   39350:	bne	39324 <flatcc_json_printer_uint64_field@@Base+0xa8>
   39354:	b	392d4 <flatcc_json_printer_uint64_field@@Base+0x58>

00039358 <flatcc_json_printer_int8_field@@Base>:
   39358:	push	{r4, r5, r6, sl, fp, lr}
   3935c:	add	fp, sp, #16
   39360:	mov	r4, r0
   39364:	mov	r0, #4
   39368:	ldr	r6, [r1, #8]
   3936c:	add	r2, r0, r2, lsl #1
   39370:	ldr	r0, [fp, #12]
   39374:	cmp	r2, r6
   39378:	bge	39398 <flatcc_json_printer_int8_field@@Base+0x40>
   3937c:	ldr	r6, [r1, #4]
   39380:	add	r2, r6, r2
   39384:	ldrh	r2, [r2]
   39388:	cmp	r2, #0
   3938c:	ldrne	r6, [r1]
   39390:	addsne	r2, r6, r2
   39394:	bne	39414 <flatcc_json_printer_int8_field@@Base+0xbc>
   39398:	ldrb	r2, [r4, #29]
   3939c:	mov	r5, r0
   393a0:	cmp	r2, #0
   393a4:	popeq	{r4, r5, r6, sl, fp, pc}
   393a8:	ldr	r0, [r1, #16]
   393ac:	ldr	r2, [fp, #8]
   393b0:	add	r6, r0, #1
   393b4:	cmp	r0, #0
   393b8:	str	r6, [r1, #16]
   393bc:	ldrne	r0, [r4, #20]
   393c0:	addne	r1, r0, #1
   393c4:	strne	r1, [r4, #20]
   393c8:	movne	r1, #44	; 0x2c
   393cc:	strbne	r1, [r0]
   393d0:	mov	r0, r4
   393d4:	mov	r1, r3
   393d8:	bl	38c54 <flatcc_json_printer_string_field@@Base+0x8c>
   393dc:	ubfx	r6, r5, #7, #1
   393e0:	ldr	r1, [r4, #20]
   393e4:	sxtb	r0, r5
   393e8:	cmn	r0, #1
   393ec:	movle	r0, #45	; 0x2d
   393f0:	rsble	r5, r5, #0
   393f4:	strble	r0, [r1], #1
   393f8:	uxtb	r0, r5
   393fc:	bl	37db4 <flatcc_json_printer_uint8@@Base+0x2c>
   39400:	ldr	r1, [r4, #20]
   39404:	add	r0, r0, r6
   39408:	add	r0, r1, r0
   3940c:	str	r0, [r4, #20]
   39410:	pop	{r4, r5, r6, sl, fp, pc}
   39414:	ldrb	r5, [r2]
   39418:	uxtb	r2, r0
   3941c:	cmp	r5, r2
   39420:	bne	393a8 <flatcc_json_printer_int8_field@@Base+0x50>
   39424:	ldrb	r2, [r4, #28]
   39428:	mov	r5, r0
   3942c:	cmp	r2, #0
   39430:	bne	39410 <flatcc_json_printer_int8_field@@Base+0xb8>
   39434:	b	393a8 <flatcc_json_printer_int8_field@@Base+0x50>

00039438 <flatcc_json_printer_int16_field@@Base>:
   39438:	push	{r4, r5, r6, sl, fp, lr}
   3943c:	add	fp, sp, #16
   39440:	mov	r4, r0
   39444:	mov	r0, #4
   39448:	ldr	r6, [r1, #8]
   3944c:	add	r2, r0, r2, lsl #1
   39450:	ldr	r0, [fp, #12]
   39454:	cmp	r2, r6
   39458:	bge	39478 <flatcc_json_printer_int16_field@@Base+0x40>
   3945c:	ldr	r6, [r1, #4]
   39460:	add	r2, r6, r2
   39464:	ldrh	r2, [r2]
   39468:	cmp	r2, #0
   3946c:	ldrne	r6, [r1]
   39470:	addsne	r2, r6, r2
   39474:	bne	394f4 <flatcc_json_printer_int16_field@@Base+0xbc>
   39478:	ldrb	r2, [r4, #29]
   3947c:	mov	r5, r0
   39480:	cmp	r2, #0
   39484:	popeq	{r4, r5, r6, sl, fp, pc}
   39488:	ldr	r0, [r1, #16]
   3948c:	ldr	r2, [fp, #8]
   39490:	add	r6, r0, #1
   39494:	cmp	r0, #0
   39498:	str	r6, [r1, #16]
   3949c:	ldrne	r0, [r4, #20]
   394a0:	addne	r1, r0, #1
   394a4:	strne	r1, [r4, #20]
   394a8:	movne	r1, #44	; 0x2c
   394ac:	strbne	r1, [r0]
   394b0:	mov	r0, r4
   394b4:	mov	r1, r3
   394b8:	bl	38c54 <flatcc_json_printer_string_field@@Base+0x8c>
   394bc:	ubfx	r6, r5, #15, #1
   394c0:	ldr	r1, [r4, #20]
   394c4:	sxth	r0, r5
   394c8:	cmn	r0, #1
   394cc:	movle	r0, #45	; 0x2d
   394d0:	rsble	r5, r5, #0
   394d4:	strble	r0, [r1], #1
   394d8:	uxth	r0, r5
   394dc:	bl	37e84 <flatcc_json_printer_uint16@@Base+0x2c>
   394e0:	ldr	r1, [r4, #20]
   394e4:	add	r0, r0, r6
   394e8:	add	r0, r1, r0
   394ec:	str	r0, [r4, #20]
   394f0:	pop	{r4, r5, r6, sl, fp, pc}
   394f4:	ldrh	r5, [r2]
   394f8:	uxth	r2, r0
   394fc:	cmp	r5, r2
   39500:	bne	39488 <flatcc_json_printer_int16_field@@Base+0x50>
   39504:	ldrb	r2, [r4, #28]
   39508:	mov	r5, r0
   3950c:	cmp	r2, #0
   39510:	bne	394f0 <flatcc_json_printer_int16_field@@Base+0xb8>
   39514:	b	39488 <flatcc_json_printer_int16_field@@Base+0x50>

00039518 <flatcc_json_printer_int32_field@@Base>:
   39518:	push	{r4, r5, r6, sl, fp, lr}
   3951c:	add	fp, sp, #16
   39520:	mov	r4, r0
   39524:	mov	r0, #4
   39528:	ldr	r6, [r1, #8]
   3952c:	add	r2, r0, r2, lsl #1
   39530:	ldr	r0, [fp, #12]
   39534:	cmp	r2, r6
   39538:	bge	39558 <flatcc_json_printer_int32_field@@Base+0x40>
   3953c:	ldr	r6, [r1, #4]
   39540:	add	r2, r6, r2
   39544:	ldrh	r2, [r2]
   39548:	cmp	r2, #0
   3954c:	ldrne	r6, [r1]
   39550:	addsne	r2, r6, r2
   39554:	bne	395d0 <flatcc_json_printer_int32_field@@Base+0xb8>
   39558:	ldrb	r2, [r4, #29]
   3955c:	mov	r5, r0
   39560:	cmp	r2, #0
   39564:	popeq	{r4, r5, r6, sl, fp, pc}
   39568:	ldr	r0, [r1, #16]
   3956c:	ldr	r2, [fp, #8]
   39570:	add	r6, r0, #1
   39574:	cmp	r0, #0
   39578:	str	r6, [r1, #16]
   3957c:	ldrne	r0, [r4, #20]
   39580:	addne	r1, r0, #1
   39584:	strne	r1, [r4, #20]
   39588:	movne	r1, #44	; 0x2c
   3958c:	strbne	r1, [r0]
   39590:	mov	r0, r4
   39594:	mov	r1, r3
   39598:	bl	38c54 <flatcc_json_printer_string_field@@Base+0x8c>
   3959c:	ldr	r1, [r4, #20]
   395a0:	cmn	r5, #1
   395a4:	lsr	r6, r5, #31
   395a8:	movle	r0, #45	; 0x2d
   395ac:	rsble	r5, r5, #0
   395b0:	strble	r0, [r1], #1
   395b4:	mov	r0, r5
   395b8:	bl	38010 <flatcc_json_printer_uint32@@Base+0x2c>
   395bc:	ldr	r1, [r4, #20]
   395c0:	add	r0, r0, r6
   395c4:	add	r0, r1, r0
   395c8:	str	r0, [r4, #20]
   395cc:	pop	{r4, r5, r6, sl, fp, pc}
   395d0:	ldr	r5, [r2]
   395d4:	cmp	r5, r0
   395d8:	bne	39568 <flatcc_json_printer_int32_field@@Base+0x50>
   395dc:	ldrb	r2, [r4, #28]
   395e0:	mov	r5, r0
   395e4:	cmp	r2, #0
   395e8:	bne	395cc <flatcc_json_printer_int32_field@@Base+0xb4>
   395ec:	b	39568 <flatcc_json_printer_int32_field@@Base+0x50>

000395f0 <flatcc_json_printer_int64_field@@Base>:
   395f0:	push	{r4, r5, r6, r7, fp, lr}
   395f4:	add	fp, sp, #16
   395f8:	mov	r4, r0
   395fc:	mov	r0, #4
   39600:	ldr	r6, [r1, #8]
   39604:	add	r7, r0, r2, lsl #1
   39608:	ldr	r0, [fp, #20]
   3960c:	ldr	r2, [fp, #16]
   39610:	cmp	r7, r6
   39614:	bge	39634 <flatcc_json_printer_int64_field@@Base+0x44>
   39618:	ldr	r6, [r1, #4]
   3961c:	add	r7, r6, r7
   39620:	ldrh	r7, [r7]
   39624:	cmp	r7, #0
   39628:	ldrne	r6, [r1]
   3962c:	addsne	r7, r6, r7
   39630:	bne	396bc <flatcc_json_printer_int64_field@@Base+0xcc>
   39634:	ldrb	r7, [r4, #29]
   39638:	mov	r6, r2
   3963c:	cmp	r7, #0
   39640:	mov	r7, r0
   39644:	popeq	{r4, r5, r6, r7, fp, pc}
   39648:	ldr	r0, [r1, #16]
   3964c:	ldr	r2, [fp, #8]
   39650:	add	r5, r0, #1
   39654:	cmp	r0, #0
   39658:	str	r5, [r1, #16]
   3965c:	ldrne	r0, [r4, #20]
   39660:	addne	r1, r0, #1
   39664:	strne	r1, [r4, #20]
   39668:	movne	r1, #44	; 0x2c
   3966c:	strbne	r1, [r0]
   39670:	mov	r0, r4
   39674:	mov	r1, r3
   39678:	bl	38c54 <flatcc_json_printer_string_field@@Base+0x8c>
   3967c:	ldr	r2, [r4, #20]
   39680:	lsr	r5, r7, #31
   39684:	cmn	r7, #1
   39688:	bgt	3969c <flatcc_json_printer_int64_field@@Base+0xac>
   3968c:	mov	r0, #45	; 0x2d
   39690:	rsbs	r6, r6, #0
   39694:	strb	r0, [r2], #1
   39698:	rsc	r7, r7, #0
   3969c:	mov	r0, r6
   396a0:	mov	r1, r7
   396a4:	bl	3834c <flatcc_json_printer_uint64@@Base+0x30>
   396a8:	ldr	r1, [r4, #20]
   396ac:	add	r0, r0, r5
   396b0:	add	r0, r1, r0
   396b4:	str	r0, [r4, #20]
   396b8:	pop	{r4, r5, r6, r7, fp, pc}
   396bc:	ldrd	r6, [r7]
   396c0:	eor	ip, r7, r0
   396c4:	eor	r5, r6, r2
   396c8:	orrs	r5, r5, ip
   396cc:	bne	39648 <flatcc_json_printer_int64_field@@Base+0x58>
   396d0:	ldrb	r7, [r4, #28]
   396d4:	mov	r6, r2
   396d8:	cmp	r7, #0
   396dc:	mov	r7, r0
   396e0:	bne	396b8 <flatcc_json_printer_int64_field@@Base+0xc8>
   396e4:	b	39648 <flatcc_json_printer_int64_field@@Base+0x58>

000396e8 <flatcc_json_printer_bool_field@@Base>:
   396e8:	push	{r4, r5, r6, sl, fp, lr}
   396ec:	add	fp, sp, #16
   396f0:	mov	r4, r0
   396f4:	mov	r0, #4
   396f8:	ldr	r5, [r1, #8]
   396fc:	add	r2, r0, r2, lsl #1
   39700:	ldr	r0, [fp, #12]
   39704:	cmp	r2, r5
   39708:	bge	39728 <flatcc_json_printer_bool_field@@Base+0x40>
   3970c:	ldr	r5, [r1, #4]
   39710:	add	r2, r5, r2
   39714:	ldrh	r2, [r2]
   39718:	cmp	r2, #0
   3971c:	ldrne	r5, [r1]
   39720:	addsne	r2, r5, r2
   39724:	bne	397bc <flatcc_json_printer_bool_field@@Base+0xd4>
   39728:	ldrb	r2, [r4, #29]
   3972c:	mov	r6, r0
   39730:	cmp	r2, #0
   39734:	popeq	{r4, r5, r6, sl, fp, pc}
   39738:	ldr	r0, [r1, #16]
   3973c:	ldr	r2, [fp, #8]
   39740:	add	r5, r0, #1
   39744:	cmp	r0, #0
   39748:	str	r5, [r1, #16]
   3974c:	ldrne	r0, [r4, #20]
   39750:	addne	r1, r0, #1
   39754:	strne	r1, [r4, #20]
   39758:	movne	r1, #44	; 0x2c
   3975c:	strbne	r1, [r0]
   39760:	mov	r0, r4
   39764:	mov	r1, r3
   39768:	bl	38c54 <flatcc_json_printer_string_field@@Base+0x8c>
   3976c:	ldr	r0, [r4, #20]
   39770:	cmp	r6, #0
   39774:	beq	39794 <flatcc_json_printer_bool_field@@Base+0xac>
   39778:	mov	r1, #0
   3977c:	strb	r1, [r0, #4]
   39780:	movw	r1, #29300	; 0x7274
   39784:	movt	r1, #25973	; 0x6575
   39788:	str	r1, [r0]
   3978c:	mov	r0, #4
   39790:	b	397ac <flatcc_json_printer_bool_field@@Base+0xc4>
   39794:	mov	r1, #101	; 0x65
   39798:	strh	r1, [r0, #4]
   3979c:	movw	r1, #24934	; 0x6166
   397a0:	movt	r1, #29548	; 0x736c
   397a4:	str	r1, [r0]
   397a8:	mov	r0, #5
   397ac:	ldr	r1, [r4, #20]
   397b0:	add	r0, r1, r0
   397b4:	str	r0, [r4, #20]
   397b8:	pop	{r4, r5, r6, sl, fp, pc}
   397bc:	ldrb	r6, [r2]
   397c0:	cmp	r6, r0
   397c4:	bne	39738 <flatcc_json_printer_bool_field@@Base+0x50>
   397c8:	ldrb	r2, [r4, #28]
   397cc:	mov	r6, r0
   397d0:	cmp	r2, #0
   397d4:	bne	397b8 <flatcc_json_printer_bool_field@@Base+0xd0>
   397d8:	b	39738 <flatcc_json_printer_bool_field@@Base+0x50>

000397dc <flatcc_json_printer_float_field@@Base>:
   397dc:	push	{r4, r5, fp, lr}
   397e0:	add	fp, sp, #8
   397e4:	vpush	{d8}
   397e8:	mov	r5, r0
   397ec:	mov	r0, #4
   397f0:	vmov.f32	s16, s0
   397f4:	add	r0, r0, r2, lsl #1
   397f8:	ldr	r2, [r1, #8]
   397fc:	cmp	r0, r2
   39800:	bge	39820 <flatcc_json_printer_float_field@@Base+0x44>
   39804:	ldr	r2, [r1, #4]
   39808:	add	r0, r2, r0
   3980c:	ldrh	r0, [r0]
   39810:	cmp	r0, #0
   39814:	ldrne	r2, [r1]
   39818:	addsne	r0, r2, r0
   3981c:	bne	39880 <flatcc_json_printer_float_field@@Base+0xa4>
   39820:	ldrb	r0, [r5, #29]
   39824:	cmp	r0, #0
   39828:	beq	39878 <flatcc_json_printer_float_field@@Base+0x9c>
   3982c:	ldr	r0, [r1, #16]
   39830:	ldr	r2, [fp, #8]
   39834:	add	r4, r0, #1
   39838:	cmp	r0, #0
   3983c:	str	r4, [r1, #16]
   39840:	ldrne	r0, [r5, #20]
   39844:	addne	r1, r0, #1
   39848:	strne	r1, [r5, #20]
   3984c:	movne	r1, #44	; 0x2c
   39850:	strbne	r1, [r0]
   39854:	mov	r0, r5
   39858:	mov	r1, r3
   3985c:	bl	38c54 <flatcc_json_printer_string_field@@Base+0x8c>
   39860:	ldr	r0, [r5, #20]
   39864:	vcvt.f64.f32	d0, s16
   39868:	bl	37078 <flatcc_json_printer_fmt_float@@Base+0x8>
   3986c:	ldr	r1, [r5, #20]
   39870:	add	r0, r1, r0
   39874:	str	r0, [r5, #20]
   39878:	vpop	{d8}
   3987c:	pop	{r4, r5, fp, pc}
   39880:	vldr	s0, [r0]
   39884:	vcmp.f32	s0, s16
   39888:	vmrs	APSR_nzcv, fpscr
   3988c:	bne	398a4 <flatcc_json_printer_float_field@@Base+0xc8>
   39890:	ldrb	r0, [r5, #28]
   39894:	vmov.f32	s16, s0
   39898:	cmp	r0, #0
   3989c:	bne	39878 <flatcc_json_printer_float_field@@Base+0x9c>
   398a0:	b	3982c <flatcc_json_printer_float_field@@Base+0x50>
   398a4:	vmov.f32	s16, s0
   398a8:	b	3982c <flatcc_json_printer_float_field@@Base+0x50>

000398ac <flatcc_json_printer_double_field@@Base>:
   398ac:	push	{r4, r5, fp, lr}
   398b0:	add	fp, sp, #8
   398b4:	vpush	{d8}
   398b8:	mov	r5, r0
   398bc:	mov	r0, #4
   398c0:	vmov.f64	d8, d0
   398c4:	add	r0, r0, r2, lsl #1
   398c8:	ldr	r2, [r1, #8]
   398cc:	cmp	r0, r2
   398d0:	bge	398f0 <flatcc_json_printer_double_field@@Base+0x44>
   398d4:	ldr	r2, [r1, #4]
   398d8:	add	r0, r2, r0
   398dc:	ldrh	r0, [r0]
   398e0:	cmp	r0, #0
   398e4:	ldrne	r2, [r1]
   398e8:	addsne	r0, r2, r0
   398ec:	bne	39950 <flatcc_json_printer_double_field@@Base+0xa4>
   398f0:	ldrb	r0, [r5, #29]
   398f4:	cmp	r0, #0
   398f8:	beq	39948 <flatcc_json_printer_double_field@@Base+0x9c>
   398fc:	ldr	r0, [r1, #16]
   39900:	ldr	r2, [fp, #8]
   39904:	add	r4, r0, #1
   39908:	cmp	r0, #0
   3990c:	str	r4, [r1, #16]
   39910:	ldrne	r0, [r5, #20]
   39914:	addne	r1, r0, #1
   39918:	strne	r1, [r5, #20]
   3991c:	movne	r1, #44	; 0x2c
   39920:	strbne	r1, [r0]
   39924:	mov	r0, r5
   39928:	mov	r1, r3
   3992c:	bl	38c54 <flatcc_json_printer_string_field@@Base+0x8c>
   39930:	ldr	r0, [r5, #20]
   39934:	vmov.f64	d0, d8
   39938:	bl	37078 <flatcc_json_printer_fmt_float@@Base+0x8>
   3993c:	ldr	r1, [r5, #20]
   39940:	add	r0, r1, r0
   39944:	str	r0, [r5, #20]
   39948:	vpop	{d8}
   3994c:	pop	{r4, r5, fp, pc}
   39950:	vldr	d16, [r0]
   39954:	vcmp.f64	d16, d8
   39958:	vmrs	APSR_nzcv, fpscr
   3995c:	bne	39974 <flatcc_json_printer_double_field@@Base+0xc8>
   39960:	ldrb	r0, [r5, #28]
   39964:	vmov.f64	d8, d16
   39968:	cmp	r0, #0
   3996c:	bne	39948 <flatcc_json_printer_double_field@@Base+0x9c>
   39970:	b	398fc <flatcc_json_printer_double_field@@Base+0x50>
   39974:	vmov.f64	d8, d16
   39978:	b	398fc <flatcc_json_printer_double_field@@Base+0x50>

0003997c <flatcc_json_printer_uint8_enum_field@@Base>:
   3997c:	push	{r4, r5, r6, r7, fp, lr}
   39980:	add	fp, sp, #16
   39984:	mov	r4, r0
   39988:	mov	r0, #4
   3998c:	ldr	r7, [fp, #16]
   39990:	ldr	ip, [fp, #12]
   39994:	add	r5, r0, r2, lsl #1
   39998:	ldr	r0, [r1, #8]
   3999c:	ldr	r2, [fp, #8]
   399a0:	cmp	r5, r0
   399a4:	bge	399c4 <flatcc_json_printer_uint8_enum_field@@Base+0x48>
   399a8:	ldr	r0, [r1, #4]
   399ac:	add	r0, r0, r5
   399b0:	ldrh	r5, [r0]
   399b4:	cmp	r5, #0
   399b8:	ldrne	r0, [r1]
   399bc:	addsne	r5, r0, r5
   399c0:	bne	39a40 <flatcc_json_printer_uint8_enum_field@@Base+0xc4>
   399c4:	ldrb	r0, [r4, #29]
   399c8:	mov	r6, ip
   399cc:	cmp	r0, #0
   399d0:	popeq	{r4, r5, r6, r7, fp, pc}
   399d4:	ldr	r0, [r1, #16]
   399d8:	add	r5, r0, #1
   399dc:	cmp	r0, #0
   399e0:	str	r5, [r1, #16]
   399e4:	ldrne	r0, [r4, #20]
   399e8:	addne	r1, r0, #1
   399ec:	strne	r1, [r4, #20]
   399f0:	movne	r1, #44	; 0x2c
   399f4:	strbne	r1, [r0]
   399f8:	mov	r0, r4
   399fc:	mov	r1, r3
   39a00:	bl	38c54 <flatcc_json_printer_string_field@@Base+0x8c>
   39a04:	ldrb	r0, [r4, #27]
   39a08:	cmp	r0, #0
   39a0c:	beq	39a2c <flatcc_json_printer_uint8_enum_field@@Base+0xb0>
   39a10:	ldr	r1, [r4, #20]
   39a14:	mov	r0, r6
   39a18:	bl	37db4 <flatcc_json_printer_uint8@@Base+0x2c>
   39a1c:	ldr	r1, [r4, #20]
   39a20:	add	r0, r1, r0
   39a24:	str	r0, [r4, #20]
   39a28:	pop	{r4, r5, r6, r7, fp, pc}
   39a2c:	mov	r0, r4
   39a30:	mov	r1, r6
   39a34:	mov	r2, r7
   39a38:	pop	{r4, r5, r6, r7, fp, lr}
   39a3c:	bx	r2
   39a40:	ldrb	r6, [r5]
   39a44:	cmp	r6, ip
   39a48:	bne	399d4 <flatcc_json_printer_uint8_enum_field@@Base+0x58>
   39a4c:	ldrb	r0, [r4, #28]
   39a50:	mov	r6, ip
   39a54:	cmp	r0, #0
   39a58:	bne	39a28 <flatcc_json_printer_uint8_enum_field@@Base+0xac>
   39a5c:	b	399d4 <flatcc_json_printer_uint8_enum_field@@Base+0x58>

00039a60 <flatcc_json_printer_uint16_enum_field@@Base>:
   39a60:	push	{r4, r5, r6, r7, fp, lr}
   39a64:	add	fp, sp, #16
   39a68:	mov	r4, r0
   39a6c:	mov	r0, #4
   39a70:	ldr	r7, [fp, #16]
   39a74:	ldr	ip, [fp, #12]
   39a78:	add	r5, r0, r2, lsl #1
   39a7c:	ldr	r0, [r1, #8]
   39a80:	ldr	r2, [fp, #8]
   39a84:	cmp	r5, r0
   39a88:	bge	39aa8 <flatcc_json_printer_uint16_enum_field@@Base+0x48>
   39a8c:	ldr	r0, [r1, #4]
   39a90:	add	r0, r0, r5
   39a94:	ldrh	r5, [r0]
   39a98:	cmp	r5, #0
   39a9c:	ldrne	r0, [r1]
   39aa0:	addsne	r5, r0, r5
   39aa4:	bne	39b24 <flatcc_json_printer_uint16_enum_field@@Base+0xc4>
   39aa8:	ldrb	r0, [r4, #29]
   39aac:	mov	r6, ip
   39ab0:	cmp	r0, #0
   39ab4:	popeq	{r4, r5, r6, r7, fp, pc}
   39ab8:	ldr	r0, [r1, #16]
   39abc:	add	r5, r0, #1
   39ac0:	cmp	r0, #0
   39ac4:	str	r5, [r1, #16]
   39ac8:	ldrne	r0, [r4, #20]
   39acc:	addne	r1, r0, #1
   39ad0:	strne	r1, [r4, #20]
   39ad4:	movne	r1, #44	; 0x2c
   39ad8:	strbne	r1, [r0]
   39adc:	mov	r0, r4
   39ae0:	mov	r1, r3
   39ae4:	bl	38c54 <flatcc_json_printer_string_field@@Base+0x8c>
   39ae8:	ldrb	r0, [r4, #27]
   39aec:	cmp	r0, #0
   39af0:	beq	39b10 <flatcc_json_printer_uint16_enum_field@@Base+0xb0>
   39af4:	ldr	r1, [r4, #20]
   39af8:	mov	r0, r6
   39afc:	bl	37e84 <flatcc_json_printer_uint16@@Base+0x2c>
   39b00:	ldr	r1, [r4, #20]
   39b04:	add	r0, r1, r0
   39b08:	str	r0, [r4, #20]
   39b0c:	pop	{r4, r5, r6, r7, fp, pc}
   39b10:	mov	r0, r4
   39b14:	mov	r1, r6
   39b18:	mov	r2, r7
   39b1c:	pop	{r4, r5, r6, r7, fp, lr}
   39b20:	bx	r2
   39b24:	ldrh	r6, [r5]
   39b28:	cmp	r6, ip
   39b2c:	bne	39ab8 <flatcc_json_printer_uint16_enum_field@@Base+0x58>
   39b30:	ldrb	r0, [r4, #28]
   39b34:	mov	r6, ip
   39b38:	cmp	r0, #0
   39b3c:	bne	39b0c <flatcc_json_printer_uint16_enum_field@@Base+0xac>
   39b40:	b	39ab8 <flatcc_json_printer_uint16_enum_field@@Base+0x58>

00039b44 <flatcc_json_printer_uint32_enum_field@@Base>:
   39b44:	push	{r4, r5, r6, r7, fp, lr}
   39b48:	add	fp, sp, #16
   39b4c:	mov	r4, r0
   39b50:	mov	r0, #4
   39b54:	ldr	r7, [fp, #16]
   39b58:	ldr	ip, [fp, #12]
   39b5c:	add	r5, r0, r2, lsl #1
   39b60:	ldr	r0, [r1, #8]
   39b64:	ldr	r2, [fp, #8]
   39b68:	cmp	r5, r0
   39b6c:	bge	39b8c <flatcc_json_printer_uint32_enum_field@@Base+0x48>
   39b70:	ldr	r0, [r1, #4]
   39b74:	add	r0, r0, r5
   39b78:	ldrh	r5, [r0]
   39b7c:	cmp	r5, #0
   39b80:	ldrne	r0, [r1]
   39b84:	addsne	r5, r0, r5
   39b88:	bne	39c08 <flatcc_json_printer_uint32_enum_field@@Base+0xc4>
   39b8c:	ldrb	r0, [r4, #29]
   39b90:	mov	r6, ip
   39b94:	cmp	r0, #0
   39b98:	popeq	{r4, r5, r6, r7, fp, pc}
   39b9c:	ldr	r0, [r1, #16]
   39ba0:	add	r5, r0, #1
   39ba4:	cmp	r0, #0
   39ba8:	str	r5, [r1, #16]
   39bac:	ldrne	r0, [r4, #20]
   39bb0:	addne	r1, r0, #1
   39bb4:	strne	r1, [r4, #20]
   39bb8:	movne	r1, #44	; 0x2c
   39bbc:	strbne	r1, [r0]
   39bc0:	mov	r0, r4
   39bc4:	mov	r1, r3
   39bc8:	bl	38c54 <flatcc_json_printer_string_field@@Base+0x8c>
   39bcc:	ldrb	r0, [r4, #27]
   39bd0:	cmp	r0, #0
   39bd4:	beq	39bf4 <flatcc_json_printer_uint32_enum_field@@Base+0xb0>
   39bd8:	ldr	r1, [r4, #20]
   39bdc:	mov	r0, r6
   39be0:	bl	38010 <flatcc_json_printer_uint32@@Base+0x2c>
   39be4:	ldr	r1, [r4, #20]
   39be8:	add	r0, r1, r0
   39bec:	str	r0, [r4, #20]
   39bf0:	pop	{r4, r5, r6, r7, fp, pc}
   39bf4:	mov	r0, r4
   39bf8:	mov	r1, r6
   39bfc:	mov	r2, r7
   39c00:	pop	{r4, r5, r6, r7, fp, lr}
   39c04:	bx	r2
   39c08:	ldr	r6, [r5]
   39c0c:	cmp	r6, ip
   39c10:	bne	39b9c <flatcc_json_printer_uint32_enum_field@@Base+0x58>
   39c14:	ldrb	r0, [r4, #28]
   39c18:	mov	r6, ip
   39c1c:	cmp	r0, #0
   39c20:	bne	39bf0 <flatcc_json_printer_uint32_enum_field@@Base+0xac>
   39c24:	b	39b9c <flatcc_json_printer_uint32_enum_field@@Base+0x58>

00039c28 <flatcc_json_printer_uint64_enum_field@@Base>:
   39c28:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   39c2c:	add	fp, sp, #24
   39c30:	mov	r4, r0
   39c34:	mov	r0, #4
   39c38:	ldr	ip, [fp, #20]
   39c3c:	ldr	r6, [fp, #16]
   39c40:	ldr	r5, [fp, #24]
   39c44:	add	r7, r0, r2, lsl #1
   39c48:	ldr	r0, [r1, #8]
   39c4c:	ldr	r2, [fp, #8]
   39c50:	cmp	r7, r0
   39c54:	bge	39c74 <flatcc_json_printer_uint64_enum_field@@Base+0x4c>
   39c58:	ldr	r0, [r1, #4]
   39c5c:	add	r0, r0, r7
   39c60:	ldrh	r7, [r0]
   39c64:	cmp	r7, #0
   39c68:	ldrne	r0, [r1]
   39c6c:	addsne	r7, r0, r7
   39c70:	bne	39cfc <flatcc_json_printer_uint64_enum_field@@Base+0xd4>
   39c74:	ldrb	r0, [r4, #29]
   39c78:	mov	r8, r6
   39c7c:	mov	r7, ip
   39c80:	cmp	r0, #0
   39c84:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   39c88:	ldr	r0, [r1, #16]
   39c8c:	add	r6, r0, #1
   39c90:	cmp	r0, #0
   39c94:	str	r6, [r1, #16]
   39c98:	ldrne	r0, [r4, #20]
   39c9c:	addne	r1, r0, #1
   39ca0:	strne	r1, [r4, #20]
   39ca4:	movne	r1, #44	; 0x2c
   39ca8:	strbne	r1, [r0]
   39cac:	mov	r0, r4
   39cb0:	mov	r1, r3
   39cb4:	bl	38c54 <flatcc_json_printer_string_field@@Base+0x8c>
   39cb8:	ldrb	r0, [r4, #27]
   39cbc:	cmp	r0, #0
   39cc0:	beq	39ce4 <flatcc_json_printer_uint64_enum_field@@Base+0xbc>
   39cc4:	ldr	r2, [r4, #20]
   39cc8:	mov	r0, r8
   39ccc:	mov	r1, r7
   39cd0:	bl	3834c <flatcc_json_printer_uint64@@Base+0x30>
   39cd4:	ldr	r1, [r4, #20]
   39cd8:	add	r0, r1, r0
   39cdc:	str	r0, [r4, #20]
   39ce0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   39ce4:	mov	r0, r4
   39ce8:	mov	r2, r8
   39cec:	mov	r3, r7
   39cf0:	mov	r1, r5
   39cf4:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   39cf8:	bx	r1
   39cfc:	ldr	r8, [r7]
   39d00:	ldr	r7, [r7, #4]
   39d04:	eor	lr, r7, ip
   39d08:	eor	r0, r8, r6
   39d0c:	orrs	r0, r0, lr
   39d10:	bne	39c88 <flatcc_json_printer_uint64_enum_field@@Base+0x60>
   39d14:	ldrb	r0, [r4, #28]
   39d18:	mov	r8, r6
   39d1c:	mov	r7, ip
   39d20:	cmp	r0, #0
   39d24:	bne	39ce0 <flatcc_json_printer_uint64_enum_field@@Base+0xb8>
   39d28:	b	39c88 <flatcc_json_printer_uint64_enum_field@@Base+0x60>

00039d2c <flatcc_json_printer_int8_enum_field@@Base>:
   39d2c:	push	{r4, r5, r6, r7, fp, lr}
   39d30:	add	fp, sp, #16
   39d34:	mov	r4, r0
   39d38:	mov	r0, #4
   39d3c:	ldr	r5, [r1, #8]
   39d40:	ldr	ip, [fp, #16]
   39d44:	add	r6, r0, r2, lsl #1
   39d48:	ldr	r0, [fp, #12]
   39d4c:	ldr	r2, [fp, #8]
   39d50:	cmp	r6, r5
   39d54:	bge	39d74 <flatcc_json_printer_int8_enum_field@@Base+0x48>
   39d58:	ldr	r5, [r1, #4]
   39d5c:	add	r6, r5, r6
   39d60:	ldrh	r6, [r6]
   39d64:	cmp	r6, #0
   39d68:	ldrne	r5, [r1]
   39d6c:	addsne	r6, r5, r6
   39d70:	bne	39e10 <flatcc_json_printer_int8_enum_field@@Base+0xe4>
   39d74:	ldrb	r6, [r4, #29]
   39d78:	mov	r5, r0
   39d7c:	cmp	r6, #0
   39d80:	popeq	{r4, r5, r6, r7, fp, pc}
   39d84:	ldr	r0, [r1, #16]
   39d88:	mov	r7, ip
   39d8c:	add	r6, r0, #1
   39d90:	cmp	r0, #0
   39d94:	str	r6, [r1, #16]
   39d98:	ldrne	r0, [r4, #20]
   39d9c:	addne	r1, r0, #1
   39da0:	strne	r1, [r4, #20]
   39da4:	movne	r1, #44	; 0x2c
   39da8:	strbne	r1, [r0]
   39dac:	mov	r0, r4
   39db0:	mov	r1, r3
   39db4:	bl	38c54 <flatcc_json_printer_string_field@@Base+0x8c>
   39db8:	ldrb	r0, [r4, #27]
   39dbc:	cmp	r0, #0
   39dc0:	beq	39dfc <flatcc_json_printer_int8_enum_field@@Base+0xd0>
   39dc4:	ubfx	r6, r5, #7, #1
   39dc8:	ldr	r1, [r4, #20]
   39dcc:	sxtb	r0, r5
   39dd0:	cmn	r0, #1
   39dd4:	movle	r0, #45	; 0x2d
   39dd8:	rsble	r5, r5, #0
   39ddc:	strble	r0, [r1], #1
   39de0:	uxtb	r0, r5
   39de4:	bl	37db4 <flatcc_json_printer_uint8@@Base+0x2c>
   39de8:	ldr	r1, [r4, #20]
   39dec:	add	r0, r0, r6
   39df0:	add	r0, r1, r0
   39df4:	str	r0, [r4, #20]
   39df8:	pop	{r4, r5, r6, r7, fp, pc}
   39dfc:	sxtb	r1, r5
   39e00:	mov	r0, r4
   39e04:	mov	r2, r7
   39e08:	pop	{r4, r5, r6, r7, fp, lr}
   39e0c:	bx	r2
   39e10:	ldrb	r5, [r6]
   39e14:	uxtb	r6, r0
   39e18:	cmp	r5, r6
   39e1c:	bne	39d84 <flatcc_json_printer_int8_enum_field@@Base+0x58>
   39e20:	ldrb	r6, [r4, #28]
   39e24:	mov	r5, r0
   39e28:	cmp	r6, #0
   39e2c:	bne	39df8 <flatcc_json_printer_int8_enum_field@@Base+0xcc>
   39e30:	b	39d84 <flatcc_json_printer_int8_enum_field@@Base+0x58>

00039e34 <flatcc_json_printer_int16_enum_field@@Base>:
   39e34:	push	{r4, r5, r6, r7, fp, lr}
   39e38:	add	fp, sp, #16
   39e3c:	mov	r4, r0
   39e40:	mov	r0, #4
   39e44:	ldr	r5, [r1, #8]
   39e48:	ldr	ip, [fp, #16]
   39e4c:	add	r6, r0, r2, lsl #1
   39e50:	ldr	r0, [fp, #12]
   39e54:	ldr	r2, [fp, #8]
   39e58:	cmp	r6, r5
   39e5c:	bge	39e7c <flatcc_json_printer_int16_enum_field@@Base+0x48>
   39e60:	ldr	r5, [r1, #4]
   39e64:	add	r6, r5, r6
   39e68:	ldrh	r6, [r6]
   39e6c:	cmp	r6, #0
   39e70:	ldrne	r5, [r1]
   39e74:	addsne	r6, r5, r6
   39e78:	bne	39f18 <flatcc_json_printer_int16_enum_field@@Base+0xe4>
   39e7c:	ldrb	r6, [r4, #29]
   39e80:	mov	r5, r0
   39e84:	cmp	r6, #0
   39e88:	popeq	{r4, r5, r6, r7, fp, pc}
   39e8c:	ldr	r0, [r1, #16]
   39e90:	mov	r7, ip
   39e94:	add	r6, r0, #1
   39e98:	cmp	r0, #0
   39e9c:	str	r6, [r1, #16]
   39ea0:	ldrne	r0, [r4, #20]
   39ea4:	addne	r1, r0, #1
   39ea8:	strne	r1, [r4, #20]
   39eac:	movne	r1, #44	; 0x2c
   39eb0:	strbne	r1, [r0]
   39eb4:	mov	r0, r4
   39eb8:	mov	r1, r3
   39ebc:	bl	38c54 <flatcc_json_printer_string_field@@Base+0x8c>
   39ec0:	ldrb	r0, [r4, #27]
   39ec4:	cmp	r0, #0
   39ec8:	beq	39f04 <flatcc_json_printer_int16_enum_field@@Base+0xd0>
   39ecc:	ubfx	r6, r5, #15, #1
   39ed0:	ldr	r1, [r4, #20]
   39ed4:	sxth	r0, r5
   39ed8:	cmn	r0, #1
   39edc:	movle	r0, #45	; 0x2d
   39ee0:	rsble	r5, r5, #0
   39ee4:	strble	r0, [r1], #1
   39ee8:	uxth	r0, r5
   39eec:	bl	37e84 <flatcc_json_printer_uint16@@Base+0x2c>
   39ef0:	ldr	r1, [r4, #20]
   39ef4:	add	r0, r0, r6
   39ef8:	add	r0, r1, r0
   39efc:	str	r0, [r4, #20]
   39f00:	pop	{r4, r5, r6, r7, fp, pc}
   39f04:	sxth	r1, r5
   39f08:	mov	r0, r4
   39f0c:	mov	r2, r7
   39f10:	pop	{r4, r5, r6, r7, fp, lr}
   39f14:	bx	r2
   39f18:	ldrh	r5, [r6]
   39f1c:	uxth	r6, r0
   39f20:	cmp	r5, r6
   39f24:	bne	39e8c <flatcc_json_printer_int16_enum_field@@Base+0x58>
   39f28:	ldrb	r6, [r4, #28]
   39f2c:	mov	r5, r0
   39f30:	cmp	r6, #0
   39f34:	bne	39f00 <flatcc_json_printer_int16_enum_field@@Base+0xcc>
   39f38:	b	39e8c <flatcc_json_printer_int16_enum_field@@Base+0x58>

00039f3c <flatcc_json_printer_int32_enum_field@@Base>:
   39f3c:	push	{r4, r5, r6, r7, fp, lr}
   39f40:	add	fp, sp, #16
   39f44:	mov	r4, r0
   39f48:	mov	r0, #4
   39f4c:	ldr	r5, [r1, #8]
   39f50:	ldr	ip, [fp, #16]
   39f54:	add	r6, r0, r2, lsl #1
   39f58:	ldr	r0, [fp, #12]
   39f5c:	ldr	r2, [fp, #8]
   39f60:	cmp	r6, r5
   39f64:	bge	39f84 <flatcc_json_printer_int32_enum_field@@Base+0x48>
   39f68:	ldr	r5, [r1, #4]
   39f6c:	add	r6, r5, r6
   39f70:	ldrh	r6, [r6]
   39f74:	cmp	r6, #0
   39f78:	ldrne	r5, [r1]
   39f7c:	addsne	r6, r5, r6
   39f80:	bne	3a01c <flatcc_json_printer_int32_enum_field@@Base+0xe0>
   39f84:	ldrb	r6, [r4, #29]
   39f88:	mov	r5, r0
   39f8c:	cmp	r6, #0
   39f90:	popeq	{r4, r5, r6, r7, fp, pc}
   39f94:	ldr	r0, [r1, #16]
   39f98:	mov	r7, ip
   39f9c:	add	r6, r0, #1
   39fa0:	cmp	r0, #0
   39fa4:	str	r6, [r1, #16]
   39fa8:	ldrne	r0, [r4, #20]
   39fac:	addne	r1, r0, #1
   39fb0:	strne	r1, [r4, #20]
   39fb4:	movne	r1, #44	; 0x2c
   39fb8:	strbne	r1, [r0]
   39fbc:	mov	r0, r4
   39fc0:	mov	r1, r3
   39fc4:	bl	38c54 <flatcc_json_printer_string_field@@Base+0x8c>
   39fc8:	ldrb	r0, [r4, #27]
   39fcc:	cmp	r0, #0
   39fd0:	beq	3a008 <flatcc_json_printer_int32_enum_field@@Base+0xcc>
   39fd4:	ldr	r1, [r4, #20]
   39fd8:	cmn	r5, #1
   39fdc:	lsr	r6, r5, #31
   39fe0:	movle	r0, #45	; 0x2d
   39fe4:	rsble	r5, r5, #0
   39fe8:	strble	r0, [r1], #1
   39fec:	mov	r0, r5
   39ff0:	bl	38010 <flatcc_json_printer_uint32@@Base+0x2c>
   39ff4:	ldr	r1, [r4, #20]
   39ff8:	add	r0, r0, r6
   39ffc:	add	r0, r1, r0
   3a000:	str	r0, [r4, #20]
   3a004:	pop	{r4, r5, r6, r7, fp, pc}
   3a008:	mov	r0, r4
   3a00c:	mov	r1, r5
   3a010:	mov	r2, r7
   3a014:	pop	{r4, r5, r6, r7, fp, lr}
   3a018:	bx	r2
   3a01c:	ldr	r5, [r6]
   3a020:	cmp	r5, r0
   3a024:	bne	39f94 <flatcc_json_printer_int32_enum_field@@Base+0x58>
   3a028:	ldrb	r6, [r4, #28]
   3a02c:	mov	r5, r0
   3a030:	cmp	r6, #0
   3a034:	bne	3a004 <flatcc_json_printer_int32_enum_field@@Base+0xc8>
   3a038:	b	39f94 <flatcc_json_printer_int32_enum_field@@Base+0x58>

0003a03c <flatcc_json_printer_int64_enum_field@@Base>:
   3a03c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   3a040:	add	fp, sp, #24
   3a044:	mov	r4, r0
   3a048:	mov	r0, #4
   3a04c:	ldr	r5, [r1, #8]
   3a050:	ldr	r6, [fp, #16]
   3a054:	ldr	r9, [fp, #24]
   3a058:	add	r7, r0, r2, lsl #1
   3a05c:	ldr	r0, [fp, #20]
   3a060:	ldr	r2, [fp, #8]
   3a064:	cmp	r7, r5
   3a068:	bge	3a088 <flatcc_json_printer_int64_enum_field@@Base+0x4c>
   3a06c:	ldr	r5, [r1, #4]
   3a070:	add	r7, r5, r7
   3a074:	ldrh	r7, [r7]
   3a078:	cmp	r7, #0
   3a07c:	ldrne	r5, [r1]
   3a080:	addsne	r7, r5, r7
   3a084:	bne	3a130 <flatcc_json_printer_int64_enum_field@@Base+0xf4>
   3a088:	ldrb	r7, [r4, #29]
   3a08c:	mov	r8, r6
   3a090:	cmp	r7, #0
   3a094:	mov	r7, r0
   3a098:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   3a09c:	ldr	r0, [r1, #16]
   3a0a0:	add	r6, r0, #1
   3a0a4:	cmp	r0, #0
   3a0a8:	str	r6, [r1, #16]
   3a0ac:	ldrne	r0, [r4, #20]
   3a0b0:	addne	r1, r0, #1
   3a0b4:	strne	r1, [r4, #20]
   3a0b8:	movne	r1, #44	; 0x2c
   3a0bc:	strbne	r1, [r0]
   3a0c0:	mov	r0, r4
   3a0c4:	mov	r1, r3
   3a0c8:	bl	38c54 <flatcc_json_printer_string_field@@Base+0x8c>
   3a0cc:	ldrb	r0, [r4, #27]
   3a0d0:	cmp	r0, #0
   3a0d4:	beq	3a118 <flatcc_json_printer_int64_enum_field@@Base+0xdc>
   3a0d8:	ldr	r2, [r4, #20]
   3a0dc:	lsr	r5, r7, #31
   3a0e0:	cmn	r7, #1
   3a0e4:	bgt	3a0f8 <flatcc_json_printer_int64_enum_field@@Base+0xbc>
   3a0e8:	mov	r0, #45	; 0x2d
   3a0ec:	rsbs	r8, r8, #0
   3a0f0:	strb	r0, [r2], #1
   3a0f4:	rsc	r7, r7, #0
   3a0f8:	mov	r0, r8
   3a0fc:	mov	r1, r7
   3a100:	bl	3834c <flatcc_json_printer_uint64@@Base+0x30>
   3a104:	ldr	r1, [r4, #20]
   3a108:	add	r0, r0, r5
   3a10c:	add	r0, r1, r0
   3a110:	str	r0, [r4, #20]
   3a114:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   3a118:	mov	r0, r4
   3a11c:	mov	r2, r8
   3a120:	mov	r3, r7
   3a124:	mov	r1, r9
   3a128:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   3a12c:	bx	r1
   3a130:	ldr	r8, [r7]
   3a134:	ldr	r7, [r7, #4]
   3a138:	eor	ip, r7, r0
   3a13c:	eor	r5, r8, r6
   3a140:	orrs	r5, r5, ip
   3a144:	bne	3a09c <flatcc_json_printer_int64_enum_field@@Base+0x60>
   3a148:	ldrb	r7, [r4, #28]
   3a14c:	mov	r8, r6
   3a150:	cmp	r7, #0
   3a154:	mov	r7, r0
   3a158:	bne	3a114 <flatcc_json_printer_int64_enum_field@@Base+0xd8>
   3a15c:	b	3a09c <flatcc_json_printer_int64_enum_field@@Base+0x60>

0003a160 <flatcc_json_printer_bool_enum_field@@Base>:
   3a160:	push	{r4, r5, r6, r7, fp, lr}
   3a164:	add	fp, sp, #16
   3a168:	mov	r4, r0
   3a16c:	mov	r0, #4
   3a170:	ldr	r7, [fp, #16]
   3a174:	ldr	ip, [fp, #12]
   3a178:	add	r5, r0, r2, lsl #1
   3a17c:	ldr	r0, [r1, #8]
   3a180:	ldr	r2, [fp, #8]
   3a184:	cmp	r5, r0
   3a188:	bge	3a1a8 <flatcc_json_printer_bool_enum_field@@Base+0x48>
   3a18c:	ldr	r0, [r1, #4]
   3a190:	add	r0, r0, r5
   3a194:	ldrh	r5, [r0]
   3a198:	cmp	r5, #0
   3a19c:	ldrne	r0, [r1]
   3a1a0:	addsne	r5, r0, r5
   3a1a4:	bne	3a258 <flatcc_json_printer_bool_enum_field@@Base+0xf8>
   3a1a8:	ldrb	r0, [r4, #29]
   3a1ac:	mov	r6, ip
   3a1b0:	cmp	r0, #0
   3a1b4:	popeq	{r4, r5, r6, r7, fp, pc}
   3a1b8:	ldr	r0, [r1, #16]
   3a1bc:	add	r5, r0, #1
   3a1c0:	cmp	r0, #0
   3a1c4:	str	r5, [r1, #16]
   3a1c8:	ldrne	r0, [r4, #20]
   3a1cc:	addne	r1, r0, #1
   3a1d0:	strne	r1, [r4, #20]
   3a1d4:	movne	r1, #44	; 0x2c
   3a1d8:	strbne	r1, [r0]
   3a1dc:	mov	r0, r4
   3a1e0:	mov	r1, r3
   3a1e4:	bl	38c54 <flatcc_json_printer_string_field@@Base+0x8c>
   3a1e8:	ldrb	r0, [r4, #27]
   3a1ec:	cmp	r0, #0
   3a1f0:	beq	3a21c <flatcc_json_printer_bool_enum_field@@Base+0xbc>
   3a1f4:	ldr	r0, [r4, #20]
   3a1f8:	cmp	r6, #0
   3a1fc:	beq	3a230 <flatcc_json_printer_bool_enum_field@@Base+0xd0>
   3a200:	mov	r1, #0
   3a204:	strb	r1, [r0, #4]
   3a208:	movw	r1, #29300	; 0x7274
   3a20c:	movt	r1, #25973	; 0x6575
   3a210:	str	r1, [r0]
   3a214:	mov	r0, #4
   3a218:	b	3a248 <flatcc_json_printer_bool_enum_field@@Base+0xe8>
   3a21c:	mov	r0, r4
   3a220:	mov	r1, r6
   3a224:	mov	r2, r7
   3a228:	pop	{r4, r5, r6, r7, fp, lr}
   3a22c:	bx	r2
   3a230:	mov	r1, #101	; 0x65
   3a234:	strh	r1, [r0, #4]
   3a238:	movw	r1, #24934	; 0x6166
   3a23c:	movt	r1, #29548	; 0x736c
   3a240:	str	r1, [r0]
   3a244:	mov	r0, #5
   3a248:	ldr	r1, [r4, #20]
   3a24c:	add	r0, r1, r0
   3a250:	str	r0, [r4, #20]
   3a254:	pop	{r4, r5, r6, r7, fp, pc}
   3a258:	ldrb	r6, [r5]
   3a25c:	cmp	r6, ip
   3a260:	bne	3a1b8 <flatcc_json_printer_bool_enum_field@@Base+0x58>
   3a264:	ldrb	r0, [r4, #28]
   3a268:	mov	r6, ip
   3a26c:	cmp	r0, #0
   3a270:	bne	3a254 <flatcc_json_printer_bool_enum_field@@Base+0xf4>
   3a274:	b	3a1b8 <flatcc_json_printer_bool_enum_field@@Base+0x58>

0003a278 <flatcc_json_printer_uint8_struct_field@@Base>:
   3a278:	push	{r4, r5, r6, sl, fp, lr}
   3a27c:	add	fp, sp, #16
   3a280:	mov	r5, r1
   3a284:	mov	r4, r0
   3a288:	ldrb	r6, [r2, r3]
   3a28c:	ldr	r2, [fp, #12]
   3a290:	ldr	r1, [fp, #8]
   3a294:	cmp	r5, #0
   3a298:	ldrne	r0, [r4, #20]
   3a29c:	addne	r3, r0, #1
   3a2a0:	strne	r3, [r4, #20]
   3a2a4:	movne	r3, #44	; 0x2c
   3a2a8:	strbne	r3, [r0]
   3a2ac:	mov	r0, r4
   3a2b0:	bl	38c54 <flatcc_json_printer_string_field@@Base+0x8c>
   3a2b4:	ldr	r1, [r4, #20]
   3a2b8:	mov	r0, r6
   3a2bc:	bl	37db4 <flatcc_json_printer_uint8@@Base+0x2c>
   3a2c0:	ldr	r1, [r4, #20]
   3a2c4:	add	r0, r1, r0
   3a2c8:	str	r0, [r4, #20]
   3a2cc:	pop	{r4, r5, r6, sl, fp, pc}

0003a2d0 <flatcc_json_printer_uint16_struct_field@@Base>:
   3a2d0:	push	{r4, r5, r6, sl, fp, lr}
   3a2d4:	add	fp, sp, #16
   3a2d8:	mov	r5, r1
   3a2dc:	mov	r4, r0
   3a2e0:	add	r0, r2, r3
   3a2e4:	ldr	r2, [fp, #12]
   3a2e8:	ldr	r1, [fp, #8]
   3a2ec:	cmp	r5, #0
   3a2f0:	ldrh	r6, [r0]
   3a2f4:	ldrne	r0, [r4, #20]
   3a2f8:	addne	r3, r0, #1
   3a2fc:	strne	r3, [r4, #20]
   3a300:	movne	r3, #44	; 0x2c
   3a304:	strbne	r3, [r0]
   3a308:	mov	r0, r4
   3a30c:	bl	38c54 <flatcc_json_printer_string_field@@Base+0x8c>
   3a310:	ldr	r1, [r4, #20]
   3a314:	mov	r0, r6
   3a318:	bl	37e84 <flatcc_json_printer_uint16@@Base+0x2c>
   3a31c:	ldr	r1, [r4, #20]
   3a320:	add	r0, r1, r0
   3a324:	str	r0, [r4, #20]
   3a328:	pop	{r4, r5, r6, sl, fp, pc}

0003a32c <flatcc_json_printer_uint32_struct_field@@Base>:
   3a32c:	push	{r4, r5, r6, sl, fp, lr}
   3a330:	add	fp, sp, #16
   3a334:	mov	r5, r1
   3a338:	mov	r4, r0
   3a33c:	ldr	r6, [r2, r3]
   3a340:	ldr	r2, [fp, #12]
   3a344:	ldr	r1, [fp, #8]
   3a348:	cmp	r5, #0
   3a34c:	ldrne	r0, [r4, #20]
   3a350:	addne	r3, r0, #1
   3a354:	strne	r3, [r4, #20]
   3a358:	movne	r3, #44	; 0x2c
   3a35c:	strbne	r3, [r0]
   3a360:	mov	r0, r4
   3a364:	bl	38c54 <flatcc_json_printer_string_field@@Base+0x8c>
   3a368:	ldr	r1, [r4, #20]
   3a36c:	mov	r0, r6
   3a370:	bl	38010 <flatcc_json_printer_uint32@@Base+0x2c>
   3a374:	ldr	r1, [r4, #20]
   3a378:	add	r0, r1, r0
   3a37c:	str	r0, [r4, #20]
   3a380:	pop	{r4, r5, r6, sl, fp, pc}

0003a384 <flatcc_json_printer_uint64_struct_field@@Base>:
   3a384:	push	{r4, r5, r6, r7, fp, lr}
   3a388:	add	fp, sp, #16
   3a38c:	mov	r5, r1
   3a390:	ldr	r7, [r2, r3]!
   3a394:	mov	r4, r0
   3a398:	ldr	r1, [fp, #8]
   3a39c:	cmp	r5, #0
   3a3a0:	ldrne	r0, [r4, #20]
   3a3a4:	ldr	r6, [r2, #4]
   3a3a8:	ldr	r2, [fp, #12]
   3a3ac:	addne	r3, r0, #1
   3a3b0:	strne	r3, [r4, #20]
   3a3b4:	movne	r3, #44	; 0x2c
   3a3b8:	strbne	r3, [r0]
   3a3bc:	mov	r0, r4
   3a3c0:	bl	38c54 <flatcc_json_printer_string_field@@Base+0x8c>
   3a3c4:	ldr	r2, [r4, #20]
   3a3c8:	mov	r0, r7
   3a3cc:	mov	r1, r6
   3a3d0:	bl	3834c <flatcc_json_printer_uint64@@Base+0x30>
   3a3d4:	ldr	r1, [r4, #20]
   3a3d8:	add	r0, r1, r0
   3a3dc:	str	r0, [r4, #20]
   3a3e0:	pop	{r4, r5, r6, r7, fp, pc}

0003a3e4 <flatcc_json_printer_int8_struct_field@@Base>:
   3a3e4:	push	{r4, r5, r6, sl, fp, lr}
   3a3e8:	add	fp, sp, #16
   3a3ec:	mov	ip, r1
   3a3f0:	mov	r4, r0
   3a3f4:	add	r0, r2, r3
   3a3f8:	ldr	r2, [fp, #12]
   3a3fc:	ldr	r1, [fp, #8]
   3a400:	cmp	ip, #0
   3a404:	ldrsb	r5, [r0]
   3a408:	ldrne	r0, [r4, #20]
   3a40c:	addne	r3, r0, #1
   3a410:	strne	r3, [r4, #20]
   3a414:	movne	r3, #44	; 0x2c
   3a418:	strbne	r3, [r0]
   3a41c:	mov	r0, r4
   3a420:	bl	38c54 <flatcc_json_printer_string_field@@Base+0x8c>
   3a424:	ubfx	r6, r5, #7, #1
   3a428:	ldr	r1, [r4, #20]
   3a42c:	cmn	r5, #1
   3a430:	movle	r0, #45	; 0x2d
   3a434:	rsble	r5, r5, #0
   3a438:	strble	r0, [r1], #1
   3a43c:	uxtb	r0, r5
   3a440:	bl	37db4 <flatcc_json_printer_uint8@@Base+0x2c>
   3a444:	ldr	r1, [r4, #20]
   3a448:	add	r0, r0, r6
   3a44c:	add	r0, r1, r0
   3a450:	str	r0, [r4, #20]
   3a454:	pop	{r4, r5, r6, sl, fp, pc}

0003a458 <flatcc_json_printer_int16_struct_field@@Base>:
   3a458:	push	{r4, r5, r6, sl, fp, lr}
   3a45c:	add	fp, sp, #16
   3a460:	mov	ip, r1
   3a464:	mov	r4, r0
   3a468:	add	r0, r2, r3
   3a46c:	ldr	r2, [fp, #12]
   3a470:	ldr	r1, [fp, #8]
   3a474:	cmp	ip, #0
   3a478:	ldrsh	r5, [r0]
   3a47c:	ldrne	r0, [r4, #20]
   3a480:	addne	r3, r0, #1
   3a484:	strne	r3, [r4, #20]
   3a488:	movne	r3, #44	; 0x2c
   3a48c:	strbne	r3, [r0]
   3a490:	mov	r0, r4
   3a494:	bl	38c54 <flatcc_json_printer_string_field@@Base+0x8c>
   3a498:	ubfx	r6, r5, #15, #1
   3a49c:	ldr	r1, [r4, #20]
   3a4a0:	cmn	r5, #1
   3a4a4:	movle	r0, #45	; 0x2d
   3a4a8:	rsble	r5, r5, #0
   3a4ac:	strble	r0, [r1], #1
   3a4b0:	uxth	r0, r5
   3a4b4:	bl	37e84 <flatcc_json_printer_uint16@@Base+0x2c>
   3a4b8:	ldr	r1, [r4, #20]
   3a4bc:	add	r0, r0, r6
   3a4c0:	add	r0, r1, r0
   3a4c4:	str	r0, [r4, #20]
   3a4c8:	pop	{r4, r5, r6, sl, fp, pc}

0003a4cc <flatcc_json_printer_int32_struct_field@@Base>:
   3a4cc:	push	{r4, r5, r6, sl, fp, lr}
   3a4d0:	add	fp, sp, #16
   3a4d4:	mov	ip, r1
   3a4d8:	mov	r4, r0
   3a4dc:	ldr	r5, [r2, r3]
   3a4e0:	ldr	r2, [fp, #12]
   3a4e4:	ldr	r1, [fp, #8]
   3a4e8:	cmp	ip, #0
   3a4ec:	ldrne	r0, [r4, #20]
   3a4f0:	addne	r3, r0, #1
   3a4f4:	strne	r3, [r4, #20]
   3a4f8:	movne	r3, #44	; 0x2c
   3a4fc:	strbne	r3, [r0]
   3a500:	mov	r0, r4
   3a504:	bl	38c54 <flatcc_json_printer_string_field@@Base+0x8c>
   3a508:	ldr	r1, [r4, #20]
   3a50c:	cmn	r5, #1
   3a510:	lsr	r6, r5, #31
   3a514:	movle	r0, #45	; 0x2d
   3a518:	rsble	r5, r5, #0
   3a51c:	strble	r0, [r1], #1
   3a520:	mov	r0, r5
   3a524:	bl	38010 <flatcc_json_printer_uint32@@Base+0x2c>
   3a528:	ldr	r1, [r4, #20]
   3a52c:	add	r0, r0, r6
   3a530:	add	r0, r1, r0
   3a534:	str	r0, [r4, #20]
   3a538:	pop	{r4, r5, r6, sl, fp, pc}

0003a53c <flatcc_json_printer_int64_struct_field@@Base>:
   3a53c:	push	{r4, r5, r6, r7, fp, lr}
   3a540:	add	fp, sp, #16
   3a544:	mov	r5, r1
   3a548:	ldr	r7, [r2, r3]!
   3a54c:	mov	r4, r0
   3a550:	ldr	r1, [fp, #8]
   3a554:	cmp	r5, #0
   3a558:	ldrne	r0, [r4, #20]
   3a55c:	ldr	r6, [r2, #4]
   3a560:	ldr	r2, [fp, #12]
   3a564:	addne	r3, r0, #1
   3a568:	strne	r3, [r4, #20]
   3a56c:	movne	r3, #44	; 0x2c
   3a570:	strbne	r3, [r0]
   3a574:	mov	r0, r4
   3a578:	bl	38c54 <flatcc_json_printer_string_field@@Base+0x8c>
   3a57c:	ldr	r2, [r4, #20]
   3a580:	lsr	r5, r6, #31
   3a584:	cmn	r6, #1
   3a588:	bgt	3a59c <flatcc_json_printer_int64_struct_field@@Base+0x60>
   3a58c:	mov	r0, #45	; 0x2d
   3a590:	rsbs	r7, r7, #0
   3a594:	strb	r0, [r2], #1
   3a598:	rsc	r6, r6, #0
   3a59c:	mov	r0, r7
   3a5a0:	mov	r1, r6
   3a5a4:	bl	3834c <flatcc_json_printer_uint64@@Base+0x30>
   3a5a8:	ldr	r1, [r4, #20]
   3a5ac:	add	r0, r0, r5
   3a5b0:	add	r0, r1, r0
   3a5b4:	str	r0, [r4, #20]
   3a5b8:	pop	{r4, r5, r6, r7, fp, pc}

0003a5bc <flatcc_json_printer_bool_struct_field@@Base>:
   3a5bc:	push	{r4, r5, fp, lr}
   3a5c0:	add	fp, sp, #8
   3a5c4:	mov	ip, r1
   3a5c8:	mov	r4, r0
   3a5cc:	ldrb	r5, [r2, r3]
   3a5d0:	ldr	r2, [fp, #12]
   3a5d4:	ldr	r1, [fp, #8]
   3a5d8:	cmp	ip, #0
   3a5dc:	ldrne	r0, [r4, #20]
   3a5e0:	addne	r3, r0, #1
   3a5e4:	strne	r3, [r4, #20]
   3a5e8:	movne	r3, #44	; 0x2c
   3a5ec:	strbne	r3, [r0]
   3a5f0:	mov	r0, r4
   3a5f4:	bl	38c54 <flatcc_json_printer_string_field@@Base+0x8c>
   3a5f8:	ldr	r0, [r4, #20]
   3a5fc:	cmp	r5, #0
   3a600:	beq	3a620 <flatcc_json_printer_bool_struct_field@@Base+0x64>
   3a604:	mov	r1, #0
   3a608:	strb	r1, [r0, #4]
   3a60c:	movw	r1, #29300	; 0x7274
   3a610:	movt	r1, #25973	; 0x6575
   3a614:	str	r1, [r0]
   3a618:	mov	r0, #4
   3a61c:	b	3a638 <flatcc_json_printer_bool_struct_field@@Base+0x7c>
   3a620:	mov	r1, #101	; 0x65
   3a624:	strh	r1, [r0, #4]
   3a628:	movw	r1, #24934	; 0x6166
   3a62c:	movt	r1, #29548	; 0x736c
   3a630:	str	r1, [r0]
   3a634:	mov	r0, #5
   3a638:	ldr	r1, [r4, #20]
   3a63c:	add	r0, r1, r0
   3a640:	str	r0, [r4, #20]
   3a644:	pop	{r4, r5, fp, pc}

0003a648 <flatcc_json_printer_float_struct_field@@Base>:
   3a648:	push	{r4, sl, fp, lr}
   3a64c:	add	fp, sp, #8
   3a650:	vpush	{d8}
   3a654:	mov	ip, r1
   3a658:	mov	r4, r0
   3a65c:	add	r0, r2, r3
   3a660:	ldr	r2, [fp, #12]
   3a664:	ldr	r1, [fp, #8]
   3a668:	cmp	ip, #0
   3a66c:	vldr	s16, [r0]
   3a670:	ldrne	r0, [r4, #20]
   3a674:	addne	r3, r0, #1
   3a678:	strne	r3, [r4, #20]
   3a67c:	movne	r3, #44	; 0x2c
   3a680:	strbne	r3, [r0]
   3a684:	mov	r0, r4
   3a688:	bl	38c54 <flatcc_json_printer_string_field@@Base+0x8c>
   3a68c:	ldr	r0, [r4, #20]
   3a690:	vcvt.f64.f32	d0, s16
   3a694:	bl	37078 <flatcc_json_printer_fmt_float@@Base+0x8>
   3a698:	ldr	r1, [r4, #20]
   3a69c:	add	r0, r1, r0
   3a6a0:	str	r0, [r4, #20]
   3a6a4:	vpop	{d8}
   3a6a8:	pop	{r4, sl, fp, pc}

0003a6ac <flatcc_json_printer_double_struct_field@@Base>:
   3a6ac:	push	{r4, sl, fp, lr}
   3a6b0:	add	fp, sp, #8
   3a6b4:	vpush	{d8}
   3a6b8:	mov	ip, r1
   3a6bc:	mov	r4, r0
   3a6c0:	add	r0, r2, r3
   3a6c4:	ldr	r2, [fp, #12]
   3a6c8:	ldr	r1, [fp, #8]
   3a6cc:	cmp	ip, #0
   3a6d0:	vldr	d8, [r0]
   3a6d4:	ldrne	r0, [r4, #20]
   3a6d8:	addne	r3, r0, #1
   3a6dc:	strne	r3, [r4, #20]
   3a6e0:	movne	r3, #44	; 0x2c
   3a6e4:	strbne	r3, [r0]
   3a6e8:	mov	r0, r4
   3a6ec:	bl	38c54 <flatcc_json_printer_string_field@@Base+0x8c>
   3a6f0:	ldr	r0, [r4, #20]
   3a6f4:	vorr	d0, d8, d8
   3a6f8:	bl	37078 <flatcc_json_printer_fmt_float@@Base+0x8>
   3a6fc:	ldr	r1, [r4, #20]
   3a700:	add	r0, r1, r0
   3a704:	str	r0, [r4, #20]
   3a708:	vpop	{d8}
   3a70c:	pop	{r4, sl, fp, pc}

0003a710 <flatcc_json_printer_uint8_enum_struct_field@@Base>:
   3a710:	push	{r4, r5, r6, r7, fp, lr}
   3a714:	add	fp, sp, #16
   3a718:	mov	r5, r1
   3a71c:	mov	r4, r0
   3a720:	add	r7, fp, #8
   3a724:	ldrb	r6, [r2, r3]
   3a728:	cmp	r5, #0
   3a72c:	ldm	r7, {r1, r2, r7}
   3a730:	ldrne	r0, [r4, #20]
   3a734:	addne	r3, r0, #1
   3a738:	strne	r3, [r4, #20]
   3a73c:	movne	r3, #44	; 0x2c
   3a740:	strbne	r3, [r0]
   3a744:	mov	r0, r4
   3a748:	bl	38c54 <flatcc_json_printer_string_field@@Base+0x8c>
   3a74c:	ldrb	r0, [r4, #27]
   3a750:	cmp	r0, #0
   3a754:	beq	3a774 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x64>
   3a758:	ldr	r1, [r4, #20]
   3a75c:	mov	r0, r6
   3a760:	bl	37db4 <flatcc_json_printer_uint8@@Base+0x2c>
   3a764:	ldr	r1, [r4, #20]
   3a768:	add	r0, r1, r0
   3a76c:	str	r0, [r4, #20]
   3a770:	pop	{r4, r5, r6, r7, fp, pc}
   3a774:	mov	r0, r4
   3a778:	mov	r1, r6
   3a77c:	mov	r2, r7
   3a780:	pop	{r4, r5, r6, r7, fp, lr}
   3a784:	bx	r2

0003a788 <flatcc_json_printer_uint16_enum_struct_field@@Base>:
   3a788:	push	{r4, r5, r6, r7, fp, lr}
   3a78c:	add	fp, sp, #16
   3a790:	mov	r5, r1
   3a794:	mov	r4, r0
   3a798:	add	r0, r2, r3
   3a79c:	add	r7, fp, #8
   3a7a0:	cmp	r5, #0
   3a7a4:	ldrh	r6, [r0]
   3a7a8:	ldm	r7, {r1, r2, r7}
   3a7ac:	ldrne	r0, [r4, #20]
   3a7b0:	addne	r3, r0, #1
   3a7b4:	strne	r3, [r4, #20]
   3a7b8:	movne	r3, #44	; 0x2c
   3a7bc:	strbne	r3, [r0]
   3a7c0:	mov	r0, r4
   3a7c4:	bl	38c54 <flatcc_json_printer_string_field@@Base+0x8c>
   3a7c8:	ldrb	r0, [r4, #27]
   3a7cc:	cmp	r0, #0
   3a7d0:	beq	3a7f0 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x68>
   3a7d4:	ldr	r1, [r4, #20]
   3a7d8:	mov	r0, r6
   3a7dc:	bl	37e84 <flatcc_json_printer_uint16@@Base+0x2c>
   3a7e0:	ldr	r1, [r4, #20]
   3a7e4:	add	r0, r1, r0
   3a7e8:	str	r0, [r4, #20]
   3a7ec:	pop	{r4, r5, r6, r7, fp, pc}
   3a7f0:	mov	r0, r4
   3a7f4:	mov	r1, r6
   3a7f8:	mov	r2, r7
   3a7fc:	pop	{r4, r5, r6, r7, fp, lr}
   3a800:	bx	r2

0003a804 <flatcc_json_printer_uint32_enum_struct_field@@Base>:
   3a804:	push	{r4, r5, r6, r7, fp, lr}
   3a808:	add	fp, sp, #16
   3a80c:	mov	r5, r1
   3a810:	mov	r4, r0
   3a814:	add	r7, fp, #8
   3a818:	ldr	r6, [r2, r3]
   3a81c:	cmp	r5, #0
   3a820:	ldm	r7, {r1, r2, r7}
   3a824:	ldrne	r0, [r4, #20]
   3a828:	addne	r3, r0, #1
   3a82c:	strne	r3, [r4, #20]
   3a830:	movne	r3, #44	; 0x2c
   3a834:	strbne	r3, [r0]
   3a838:	mov	r0, r4
   3a83c:	bl	38c54 <flatcc_json_printer_string_field@@Base+0x8c>
   3a840:	ldrb	r0, [r4, #27]
   3a844:	cmp	r0, #0
   3a848:	beq	3a868 <flatcc_json_printer_uint32_enum_struct_field@@Base+0x64>
   3a84c:	ldr	r1, [r4, #20]
   3a850:	mov	r0, r6
   3a854:	bl	38010 <flatcc_json_printer_uint32@@Base+0x2c>
   3a858:	ldr	r1, [r4, #20]
   3a85c:	add	r0, r1, r0
   3a860:	str	r0, [r4, #20]
   3a864:	pop	{r4, r5, r6, r7, fp, pc}
   3a868:	mov	r0, r4
   3a86c:	mov	r1, r6
   3a870:	mov	r2, r7
   3a874:	pop	{r4, r5, r6, r7, fp, lr}
   3a878:	bx	r2

0003a87c <flatcc_json_printer_uint64_enum_struct_field@@Base>:
   3a87c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   3a880:	add	fp, sp, #24
   3a884:	ldr	r6, [r2, r3]!
   3a888:	mov	r5, r1
   3a88c:	mov	r4, r0
   3a890:	add	r8, fp, #8
   3a894:	cmp	r5, #0
   3a898:	ldr	r7, [r2, #4]
   3a89c:	ldm	r8, {r1, r2, r8}
   3a8a0:	ldrne	r0, [r4, #20]
   3a8a4:	addne	r3, r0, #1
   3a8a8:	strne	r3, [r4, #20]
   3a8ac:	movne	r3, #44	; 0x2c
   3a8b0:	strbne	r3, [r0]
   3a8b4:	mov	r0, r4
   3a8b8:	bl	38c54 <flatcc_json_printer_string_field@@Base+0x8c>
   3a8bc:	ldrb	r0, [r4, #27]
   3a8c0:	cmp	r0, #0
   3a8c4:	beq	3a8e8 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x6c>
   3a8c8:	ldr	r2, [r4, #20]
   3a8cc:	mov	r0, r6
   3a8d0:	mov	r1, r7
   3a8d4:	bl	3834c <flatcc_json_printer_uint64@@Base+0x30>
   3a8d8:	ldr	r1, [r4, #20]
   3a8dc:	add	r0, r1, r0
   3a8e0:	str	r0, [r4, #20]
   3a8e4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   3a8e8:	mov	r0, r4
   3a8ec:	mov	r2, r6
   3a8f0:	mov	r3, r7
   3a8f4:	mov	r1, r8
   3a8f8:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   3a8fc:	bx	r1

0003a900 <flatcc_json_printer_int8_enum_struct_field@@Base>:
   3a900:	push	{r4, r5, r6, r7, fp, lr}
   3a904:	add	fp, sp, #16
   3a908:	mov	r5, r1
   3a90c:	mov	r4, r0
   3a910:	add	r0, r2, r3
   3a914:	add	r7, fp, #8
   3a918:	cmp	r5, #0
   3a91c:	ldrsb	r6, [r0]
   3a920:	ldm	r7, {r1, r2, r7}
   3a924:	ldrne	r0, [r4, #20]
   3a928:	addne	r3, r0, #1
   3a92c:	strne	r3, [r4, #20]
   3a930:	movne	r3, #44	; 0x2c
   3a934:	strbne	r3, [r0]
   3a938:	mov	r0, r4
   3a93c:	bl	38c54 <flatcc_json_printer_string_field@@Base+0x8c>
   3a940:	ldrb	r0, [r4, #27]
   3a944:	cmp	r0, #0
   3a948:	beq	3a980 <flatcc_json_printer_int8_enum_struct_field@@Base+0x80>
   3a94c:	ubfx	r5, r6, #7, #1
   3a950:	ldr	r1, [r4, #20]
   3a954:	cmn	r6, #1
   3a958:	movle	r0, #45	; 0x2d
   3a95c:	rsble	r6, r6, #0
   3a960:	strble	r0, [r1], #1
   3a964:	uxtb	r0, r6
   3a968:	bl	37db4 <flatcc_json_printer_uint8@@Base+0x2c>
   3a96c:	ldr	r1, [r4, #20]
   3a970:	add	r0, r0, r5
   3a974:	add	r0, r1, r0
   3a978:	str	r0, [r4, #20]
   3a97c:	pop	{r4, r5, r6, r7, fp, pc}
   3a980:	mov	r0, r4
   3a984:	mov	r1, r6
   3a988:	mov	r2, r7
   3a98c:	pop	{r4, r5, r6, r7, fp, lr}
   3a990:	bx	r2

0003a994 <flatcc_json_printer_int16_enum_struct_field@@Base>:
   3a994:	push	{r4, r5, r6, r7, fp, lr}
   3a998:	add	fp, sp, #16
   3a99c:	mov	r5, r1
   3a9a0:	mov	r4, r0
   3a9a4:	add	r0, r2, r3
   3a9a8:	add	r7, fp, #8
   3a9ac:	cmp	r5, #0
   3a9b0:	ldrsh	r6, [r0]
   3a9b4:	ldm	r7, {r1, r2, r7}
   3a9b8:	ldrne	r0, [r4, #20]
   3a9bc:	addne	r3, r0, #1
   3a9c0:	strne	r3, [r4, #20]
   3a9c4:	movne	r3, #44	; 0x2c
   3a9c8:	strbne	r3, [r0]
   3a9cc:	mov	r0, r4
   3a9d0:	bl	38c54 <flatcc_json_printer_string_field@@Base+0x8c>
   3a9d4:	ldrb	r0, [r4, #27]
   3a9d8:	cmp	r0, #0
   3a9dc:	beq	3aa14 <flatcc_json_printer_int16_enum_struct_field@@Base+0x80>
   3a9e0:	ubfx	r5, r6, #15, #1
   3a9e4:	ldr	r1, [r4, #20]
   3a9e8:	cmn	r6, #1
   3a9ec:	movle	r0, #45	; 0x2d
   3a9f0:	rsble	r6, r6, #0
   3a9f4:	strble	r0, [r1], #1
   3a9f8:	uxth	r0, r6
   3a9fc:	bl	37e84 <flatcc_json_printer_uint16@@Base+0x2c>
   3aa00:	ldr	r1, [r4, #20]
   3aa04:	add	r0, r0, r5
   3aa08:	add	r0, r1, r0
   3aa0c:	str	r0, [r4, #20]
   3aa10:	pop	{r4, r5, r6, r7, fp, pc}
   3aa14:	mov	r0, r4
   3aa18:	mov	r1, r6
   3aa1c:	mov	r2, r7
   3aa20:	pop	{r4, r5, r6, r7, fp, lr}
   3aa24:	bx	r2

0003aa28 <flatcc_json_printer_int32_enum_struct_field@@Base>:
   3aa28:	push	{r4, r5, r6, r7, fp, lr}
   3aa2c:	add	fp, sp, #16
   3aa30:	mov	r5, r1
   3aa34:	mov	r4, r0
   3aa38:	add	r7, fp, #8
   3aa3c:	ldr	r6, [r2, r3]
   3aa40:	cmp	r5, #0
   3aa44:	ldm	r7, {r1, r2, r7}
   3aa48:	ldrne	r0, [r4, #20]
   3aa4c:	addne	r3, r0, #1
   3aa50:	strne	r3, [r4, #20]
   3aa54:	movne	r3, #44	; 0x2c
   3aa58:	strbne	r3, [r0]
   3aa5c:	mov	r0, r4
   3aa60:	bl	38c54 <flatcc_json_printer_string_field@@Base+0x8c>
   3aa64:	ldrb	r0, [r4, #27]
   3aa68:	cmp	r0, #0
   3aa6c:	beq	3aaa4 <flatcc_json_printer_int32_enum_struct_field@@Base+0x7c>
   3aa70:	ldr	r1, [r4, #20]
   3aa74:	cmn	r6, #1
   3aa78:	lsr	r5, r6, #31
   3aa7c:	movle	r0, #45	; 0x2d
   3aa80:	rsble	r6, r6, #0
   3aa84:	strble	r0, [r1], #1
   3aa88:	mov	r0, r6
   3aa8c:	bl	38010 <flatcc_json_printer_uint32@@Base+0x2c>
   3aa90:	ldr	r1, [r4, #20]
   3aa94:	add	r0, r0, r5
   3aa98:	add	r0, r1, r0
   3aa9c:	str	r0, [r4, #20]
   3aaa0:	pop	{r4, r5, r6, r7, fp, pc}
   3aaa4:	mov	r0, r4
   3aaa8:	mov	r1, r6
   3aaac:	mov	r2, r7
   3aab0:	pop	{r4, r5, r6, r7, fp, lr}
   3aab4:	bx	r2

0003aab8 <flatcc_json_printer_int64_enum_struct_field@@Base>:
   3aab8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   3aabc:	add	fp, sp, #24
   3aac0:	ldr	r7, [r2, r3]!
   3aac4:	mov	r6, r1
   3aac8:	mov	r4, r0
   3aacc:	add	r8, fp, #8
   3aad0:	cmp	r6, #0
   3aad4:	ldr	r5, [r2, #4]
   3aad8:	ldm	r8, {r1, r2, r8}
   3aadc:	ldrne	r0, [r4, #20]
   3aae0:	addne	r3, r0, #1
   3aae4:	strne	r3, [r4, #20]
   3aae8:	movne	r3, #44	; 0x2c
   3aaec:	strbne	r3, [r0]
   3aaf0:	mov	r0, r4
   3aaf4:	bl	38c54 <flatcc_json_printer_string_field@@Base+0x8c>
   3aaf8:	ldrb	r0, [r4, #27]
   3aafc:	cmp	r0, #0
   3ab00:	beq	3ab44 <flatcc_json_printer_int64_enum_struct_field@@Base+0x8c>
   3ab04:	ldr	r2, [r4, #20]
   3ab08:	lsr	r6, r5, #31
   3ab0c:	cmn	r5, #1
   3ab10:	bgt	3ab24 <flatcc_json_printer_int64_enum_struct_field@@Base+0x6c>
   3ab14:	mov	r0, #45	; 0x2d
   3ab18:	rsbs	r7, r7, #0
   3ab1c:	strb	r0, [r2], #1
   3ab20:	rsc	r5, r5, #0
   3ab24:	mov	r0, r7
   3ab28:	mov	r1, r5
   3ab2c:	bl	3834c <flatcc_json_printer_uint64@@Base+0x30>
   3ab30:	ldr	r1, [r4, #20]
   3ab34:	add	r0, r0, r6
   3ab38:	add	r0, r1, r0
   3ab3c:	str	r0, [r4, #20]
   3ab40:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   3ab44:	mov	r0, r4
   3ab48:	mov	r2, r7
   3ab4c:	mov	r3, r5
   3ab50:	mov	r1, r8
   3ab54:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   3ab58:	bx	r1

0003ab5c <flatcc_json_printer_bool_enum_struct_field@@Base>:
   3ab5c:	push	{r4, r5, r6, r7, fp, lr}
   3ab60:	add	fp, sp, #16
   3ab64:	mov	r5, r1
   3ab68:	mov	r4, r0
   3ab6c:	add	r7, fp, #8
   3ab70:	ldrb	r6, [r2, r3]
   3ab74:	cmp	r5, #0
   3ab78:	ldm	r7, {r1, r2, r7}
   3ab7c:	ldrne	r0, [r4, #20]
   3ab80:	addne	r3, r0, #1
   3ab84:	strne	r3, [r4, #20]
   3ab88:	movne	r3, #44	; 0x2c
   3ab8c:	strbne	r3, [r0]
   3ab90:	mov	r0, r4
   3ab94:	bl	38c54 <flatcc_json_printer_string_field@@Base+0x8c>
   3ab98:	ldrb	r0, [r4, #27]
   3ab9c:	cmp	r0, #0
   3aba0:	beq	3abcc <flatcc_json_printer_bool_enum_struct_field@@Base+0x70>
   3aba4:	ldr	r0, [r4, #20]
   3aba8:	cmp	r6, #0
   3abac:	beq	3abe0 <flatcc_json_printer_bool_enum_struct_field@@Base+0x84>
   3abb0:	mov	r1, #0
   3abb4:	strb	r1, [r0, #4]
   3abb8:	movw	r1, #29300	; 0x7274
   3abbc:	movt	r1, #25973	; 0x6575
   3abc0:	str	r1, [r0]
   3abc4:	mov	r0, #4
   3abc8:	b	3abf8 <flatcc_json_printer_bool_enum_struct_field@@Base+0x9c>
   3abcc:	mov	r0, r4
   3abd0:	mov	r1, r6
   3abd4:	mov	r2, r7
   3abd8:	pop	{r4, r5, r6, r7, fp, lr}
   3abdc:	bx	r2
   3abe0:	mov	r1, #101	; 0x65
   3abe4:	strh	r1, [r0, #4]
   3abe8:	movw	r1, #24934	; 0x6166
   3abec:	movt	r1, #29548	; 0x736c
   3abf0:	str	r1, [r0]
   3abf4:	mov	r0, #5
   3abf8:	ldr	r1, [r4, #20]
   3abfc:	add	r0, r1, r0
   3ac00:	str	r0, [r4, #20]
   3ac04:	pop	{r4, r5, r6, r7, fp, pc}

0003ac08 <flatcc_json_printer_utype_vector_field@@Base>:
   3ac08:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3ac0c:	add	fp, sp, #28
   3ac10:	sub	sp, sp, #4
   3ac14:	mov	r4, r0
   3ac18:	mov	r0, #4
   3ac1c:	add	r0, r0, r2, lsl #1
   3ac20:	ldr	r2, [r1, #8]
   3ac24:	cmp	r0, r2
   3ac28:	bge	3afac <flatcc_json_printer_utype_vector_field@@Base+0x3a4>
   3ac2c:	ldr	r2, [r1, #4]
   3ac30:	add	r0, r2, r0
   3ac34:	ldrh	r0, [r0]
   3ac38:	cmp	r0, #0
   3ac3c:	ldrne	r2, [r1]
   3ac40:	addsne	r8, r2, r0
   3ac44:	beq	3afac <flatcc_json_printer_utype_vector_field@@Base+0x3a4>
   3ac48:	ldr	r0, [r1, #16]
   3ac4c:	ldr	r2, [fp, #8]
   3ac50:	add	r7, r0, #1
   3ac54:	cmp	r0, #0
   3ac58:	str	r7, [r1, #16]
   3ac5c:	ldrne	r0, [r4, #20]
   3ac60:	addne	r1, r0, #1
   3ac64:	strne	r1, [r4, #20]
   3ac68:	movne	r1, #44	; 0x2c
   3ac6c:	strbne	r1, [r0]
   3ac70:	mov	r1, r3
   3ac74:	ldr	r0, [r8]
   3ac78:	ldr	r7, [r8, r0]!
   3ac7c:	mov	r0, r4
   3ac80:	bl	38c54 <flatcc_json_printer_string_field@@Base+0x8c>
   3ac84:	ldr	r1, [r4, #32]
   3ac88:	ldr	r0, [r4, #20]
   3ac8c:	cmp	r7, #0
   3ac90:	add	r1, r1, #1
   3ac94:	str	r1, [r4, #32]
   3ac98:	add	r1, r0, #1
   3ac9c:	str	r1, [r4, #20]
   3aca0:	mov	r1, #91	; 0x5b
   3aca4:	strb	r1, [r0]
   3aca8:	beq	3aed0 <flatcc_json_printer_utype_vector_field@@Base+0x2c8>
   3acac:	ldrb	r0, [r4, #25]
   3acb0:	ldr	r1, [r4, #20]
   3acb4:	cmp	r0, #0
   3acb8:	beq	3ad74 <flatcc_json_printer_utype_vector_field@@Base+0x16c>
   3acbc:	add	r0, r1, #1
   3acc0:	str	r0, [r4, #20]
   3acc4:	mov	r0, #10
   3acc8:	strb	r0, [r1]
   3accc:	ldr	r0, [r4, #20]
   3acd0:	ldrb	r2, [r4, #25]
   3acd4:	ldr	r3, [r4, #32]
   3acd8:	ldr	r1, [r4, #16]
   3acdc:	mla	r6, r3, r2, r0
   3ace0:	mul	r5, r3, r2
   3ace4:	cmp	r6, r1
   3ace8:	bls	3ad58 <flatcc_json_printer_utype_vector_field@@Base+0x150>
   3acec:	cmp	r0, r1
   3acf0:	bcc	3ad0c <flatcc_json_printer_utype_vector_field@@Base+0x104>
   3acf4:	ldr	r2, [r4, #44]	; 0x2c
   3acf8:	mov	r0, r4
   3acfc:	mov	r1, #0
   3ad00:	blx	r2
   3ad04:	ldr	r1, [r4, #16]
   3ad08:	ldr	r0, [r4, #20]
   3ad0c:	sub	r6, r1, r0
   3ad10:	cmp	r6, r5
   3ad14:	bcs	3ad58 <flatcc_json_printer_utype_vector_field@@Base+0x150>
   3ad18:	mov	r1, #32
   3ad1c:	mov	r2, r6
   3ad20:	bl	14ef0 <memset@plt>
   3ad24:	ldr	r0, [r4, #20]
   3ad28:	ldr	r2, [r4, #44]	; 0x2c
   3ad2c:	mov	r1, #0
   3ad30:	add	r0, r0, r6
   3ad34:	str	r0, [r4, #20]
   3ad38:	mov	r0, r4
   3ad3c:	blx	r2
   3ad40:	ldr	r1, [r4, #16]
   3ad44:	ldr	r0, [r4, #20]
   3ad48:	sub	r5, r5, r6
   3ad4c:	sub	r6, r1, r0
   3ad50:	cmp	r5, r6
   3ad54:	bhi	3ad18 <flatcc_json_printer_utype_vector_field@@Base+0x110>
   3ad58:	mov	r1, #32
   3ad5c:	mov	r2, r5
   3ad60:	bl	14ef0 <memset@plt>
   3ad64:	ldr	r0, [r4, #20]
   3ad68:	add	r1, r0, r5
   3ad6c:	str	r1, [r4, #20]
   3ad70:	b	3ad94 <flatcc_json_printer_utype_vector_field@@Base+0x18c>
   3ad74:	ldr	r0, [r4, #16]
   3ad78:	cmp	r1, r0
   3ad7c:	bcc	3ad94 <flatcc_json_printer_utype_vector_field@@Base+0x18c>
   3ad80:	ldr	r2, [r4, #44]	; 0x2c
   3ad84:	mov	r0, r4
   3ad88:	mov	r1, #0
   3ad8c:	blx	r2
   3ad90:	ldr	r1, [r4, #20]
   3ad94:	ldrb	r0, [r8, #4]
   3ad98:	bl	37db4 <flatcc_json_printer_uint8@@Base+0x2c>
   3ad9c:	ldr	r1, [r4, #20]
   3ada0:	subs	r9, r7, #1
   3ada4:	add	r0, r1, r0
   3ada8:	str	r0, [r4, #20]
   3adac:	beq	3aed0 <flatcc_json_printer_utype_vector_field@@Base+0x2c8>
   3adb0:	ldr	r0, [r4, #20]
   3adb4:	add	r7, r8, #5
   3adb8:	mov	r8, #44	; 0x2c
   3adbc:	mov	sl, #10
   3adc0:	add	r1, r0, #1
   3adc4:	sub	r9, r9, #1
   3adc8:	str	r1, [r4, #20]
   3adcc:	strb	r8, [r0]
   3add0:	ldrb	r0, [r4, #25]
   3add4:	ldr	r1, [r4, #20]
   3add8:	cmp	r0, #0
   3addc:	beq	3ae94 <flatcc_json_printer_utype_vector_field@@Base+0x28c>
   3ade0:	add	r0, r1, #1
   3ade4:	str	r0, [r4, #20]
   3ade8:	strb	sl, [r1]
   3adec:	ldr	r0, [r4, #20]
   3adf0:	ldrb	r2, [r4, #25]
   3adf4:	ldr	r3, [r4, #32]
   3adf8:	ldr	r1, [r4, #16]
   3adfc:	mla	r6, r3, r2, r0
   3ae00:	mul	r5, r3, r2
   3ae04:	cmp	r6, r1
   3ae08:	bls	3ae78 <flatcc_json_printer_utype_vector_field@@Base+0x270>
   3ae0c:	cmp	r0, r1
   3ae10:	bcc	3ae2c <flatcc_json_printer_utype_vector_field@@Base+0x224>
   3ae14:	ldr	r2, [r4, #44]	; 0x2c
   3ae18:	mov	r0, r4
   3ae1c:	mov	r1, #0
   3ae20:	blx	r2
   3ae24:	ldr	r1, [r4, #16]
   3ae28:	ldr	r0, [r4, #20]
   3ae2c:	sub	r6, r1, r0
   3ae30:	cmp	r6, r5
   3ae34:	bcs	3ae78 <flatcc_json_printer_utype_vector_field@@Base+0x270>
   3ae38:	mov	r1, #32
   3ae3c:	mov	r2, r6
   3ae40:	bl	14ef0 <memset@plt>
   3ae44:	ldr	r0, [r4, #20]
   3ae48:	ldr	r2, [r4, #44]	; 0x2c
   3ae4c:	mov	r1, #0
   3ae50:	add	r0, r0, r6
   3ae54:	str	r0, [r4, #20]
   3ae58:	mov	r0, r4
   3ae5c:	blx	r2
   3ae60:	ldr	r1, [r4, #16]
   3ae64:	ldr	r0, [r4, #20]
   3ae68:	sub	r5, r5, r6
   3ae6c:	sub	r6, r1, r0
   3ae70:	cmp	r5, r6
   3ae74:	bhi	3ae38 <flatcc_json_printer_utype_vector_field@@Base+0x230>
   3ae78:	mov	r1, #32
   3ae7c:	mov	r2, r5
   3ae80:	bl	14ef0 <memset@plt>
   3ae84:	ldr	r0, [r4, #20]
   3ae88:	add	r1, r0, r5
   3ae8c:	str	r1, [r4, #20]
   3ae90:	b	3aeb4 <flatcc_json_printer_utype_vector_field@@Base+0x2ac>
   3ae94:	ldr	r0, [r4, #16]
   3ae98:	cmp	r1, r0
   3ae9c:	bcc	3aeb4 <flatcc_json_printer_utype_vector_field@@Base+0x2ac>
   3aea0:	ldr	r2, [r4, #44]	; 0x2c
   3aea4:	mov	r0, r4
   3aea8:	mov	r1, #0
   3aeac:	blx	r2
   3aeb0:	ldr	r1, [r4, #20]
   3aeb4:	ldrb	r0, [r7], #1
   3aeb8:	bl	37db4 <flatcc_json_printer_uint8@@Base+0x2c>
   3aebc:	ldr	r1, [r4, #20]
   3aec0:	cmp	r9, #0
   3aec4:	add	r0, r1, r0
   3aec8:	str	r0, [r4, #20]
   3aecc:	bne	3adc0 <flatcc_json_printer_utype_vector_field@@Base+0x1b8>
   3aed0:	ldrb	r1, [r4, #25]
   3aed4:	ldr	r0, [r4, #20]
   3aed8:	cmp	r1, #0
   3aedc:	beq	3af9c <flatcc_json_printer_utype_vector_field@@Base+0x394>
   3aee0:	add	r1, r0, #1
   3aee4:	str	r1, [r4, #20]
   3aee8:	mov	r1, #10
   3aeec:	strb	r1, [r0]
   3aef0:	ldr	r0, [r4, #32]
   3aef4:	sub	r2, r0, #1
   3aef8:	str	r2, [r4, #32]
   3aefc:	ldrb	r3, [r4, #25]
   3af00:	ldr	r0, [r4, #20]
   3af04:	ldr	r1, [r4, #16]
   3af08:	mla	r7, r2, r3, r0
   3af0c:	mul	r5, r2, r3
   3af10:	cmp	r7, r1
   3af14:	bls	3af84 <flatcc_json_printer_utype_vector_field@@Base+0x37c>
   3af18:	cmp	r0, r1
   3af1c:	bcc	3af38 <flatcc_json_printer_utype_vector_field@@Base+0x330>
   3af20:	ldr	r2, [r4, #44]	; 0x2c
   3af24:	mov	r0, r4
   3af28:	mov	r1, #0
   3af2c:	blx	r2
   3af30:	ldr	r1, [r4, #16]
   3af34:	ldr	r0, [r4, #20]
   3af38:	sub	r6, r1, r0
   3af3c:	cmp	r6, r5
   3af40:	bcs	3af84 <flatcc_json_printer_utype_vector_field@@Base+0x37c>
   3af44:	mov	r1, #32
   3af48:	mov	r2, r6
   3af4c:	bl	14ef0 <memset@plt>
   3af50:	ldr	r0, [r4, #20]
   3af54:	ldr	r2, [r4, #44]	; 0x2c
   3af58:	mov	r1, #0
   3af5c:	add	r0, r0, r6
   3af60:	str	r0, [r4, #20]
   3af64:	mov	r0, r4
   3af68:	blx	r2
   3af6c:	ldr	r1, [r4, #16]
   3af70:	ldr	r0, [r4, #20]
   3af74:	sub	r5, r5, r6
   3af78:	sub	r6, r1, r0
   3af7c:	cmp	r5, r6
   3af80:	bhi	3af44 <flatcc_json_printer_utype_vector_field@@Base+0x33c>
   3af84:	mov	r1, #32
   3af88:	mov	r2, r5
   3af8c:	bl	14ef0 <memset@plt>
   3af90:	ldr	r0, [r4, #20]
   3af94:	add	r0, r0, r5
   3af98:	str	r0, [r4, #20]
   3af9c:	add	r1, r0, #1
   3afa0:	str	r1, [r4, #20]
   3afa4:	mov	r1, #93	; 0x5d
   3afa8:	strb	r1, [r0]
   3afac:	sub	sp, fp, #28
   3afb0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003afb4 <flatcc_json_printer_uint8_vector_field@@Base>:
   3afb4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3afb8:	add	fp, sp, #28
   3afbc:	sub	sp, sp, #4
   3afc0:	mov	r4, r0
   3afc4:	mov	r0, #4
   3afc8:	add	r0, r0, r2, lsl #1
   3afcc:	ldr	r2, [r1, #8]
   3afd0:	cmp	r0, r2
   3afd4:	bge	3b358 <flatcc_json_printer_uint8_vector_field@@Base+0x3a4>
   3afd8:	ldr	r2, [r1, #4]
   3afdc:	add	r0, r2, r0
   3afe0:	ldrh	r0, [r0]
   3afe4:	cmp	r0, #0
   3afe8:	ldrne	r2, [r1]
   3afec:	addsne	r8, r2, r0
   3aff0:	beq	3b358 <flatcc_json_printer_uint8_vector_field@@Base+0x3a4>
   3aff4:	ldr	r0, [r1, #16]
   3aff8:	ldr	r2, [fp, #8]
   3affc:	add	r7, r0, #1
   3b000:	cmp	r0, #0
   3b004:	str	r7, [r1, #16]
   3b008:	ldrne	r0, [r4, #20]
   3b00c:	addne	r1, r0, #1
   3b010:	strne	r1, [r4, #20]
   3b014:	movne	r1, #44	; 0x2c
   3b018:	strbne	r1, [r0]
   3b01c:	mov	r1, r3
   3b020:	ldr	r0, [r8]
   3b024:	ldr	r7, [r8, r0]!
   3b028:	mov	r0, r4
   3b02c:	bl	38c54 <flatcc_json_printer_string_field@@Base+0x8c>
   3b030:	ldr	r1, [r4, #32]
   3b034:	ldr	r0, [r4, #20]
   3b038:	cmp	r7, #0
   3b03c:	add	r1, r1, #1
   3b040:	str	r1, [r4, #32]
   3b044:	add	r1, r0, #1
   3b048:	str	r1, [r4, #20]
   3b04c:	mov	r1, #91	; 0x5b
   3b050:	strb	r1, [r0]
   3b054:	beq	3b27c <flatcc_json_printer_uint8_vector_field@@Base+0x2c8>
   3b058:	ldrb	r0, [r4, #25]
   3b05c:	ldr	r1, [r4, #20]
   3b060:	cmp	r0, #0
   3b064:	beq	3b120 <flatcc_json_printer_uint8_vector_field@@Base+0x16c>
   3b068:	add	r0, r1, #1
   3b06c:	str	r0, [r4, #20]
   3b070:	mov	r0, #10
   3b074:	strb	r0, [r1]
   3b078:	ldr	r0, [r4, #20]
   3b07c:	ldrb	r2, [r4, #25]
   3b080:	ldr	r3, [r4, #32]
   3b084:	ldr	r1, [r4, #16]
   3b088:	mla	r6, r3, r2, r0
   3b08c:	mul	r5, r3, r2
   3b090:	cmp	r6, r1
   3b094:	bls	3b104 <flatcc_json_printer_uint8_vector_field@@Base+0x150>
   3b098:	cmp	r0, r1
   3b09c:	bcc	3b0b8 <flatcc_json_printer_uint8_vector_field@@Base+0x104>
   3b0a0:	ldr	r2, [r4, #44]	; 0x2c
   3b0a4:	mov	r0, r4
   3b0a8:	mov	r1, #0
   3b0ac:	blx	r2
   3b0b0:	ldr	r1, [r4, #16]
   3b0b4:	ldr	r0, [r4, #20]
   3b0b8:	sub	r6, r1, r0
   3b0bc:	cmp	r6, r5
   3b0c0:	bcs	3b104 <flatcc_json_printer_uint8_vector_field@@Base+0x150>
   3b0c4:	mov	r1, #32
   3b0c8:	mov	r2, r6
   3b0cc:	bl	14ef0 <memset@plt>
   3b0d0:	ldr	r0, [r4, #20]
   3b0d4:	ldr	r2, [r4, #44]	; 0x2c
   3b0d8:	mov	r1, #0
   3b0dc:	add	r0, r0, r6
   3b0e0:	str	r0, [r4, #20]
   3b0e4:	mov	r0, r4
   3b0e8:	blx	r2
   3b0ec:	ldr	r1, [r4, #16]
   3b0f0:	ldr	r0, [r4, #20]
   3b0f4:	sub	r5, r5, r6
   3b0f8:	sub	r6, r1, r0
   3b0fc:	cmp	r5, r6
   3b100:	bhi	3b0c4 <flatcc_json_printer_uint8_vector_field@@Base+0x110>
   3b104:	mov	r1, #32
   3b108:	mov	r2, r5
   3b10c:	bl	14ef0 <memset@plt>
   3b110:	ldr	r0, [r4, #20]
   3b114:	add	r1, r0, r5
   3b118:	str	r1, [r4, #20]
   3b11c:	b	3b140 <flatcc_json_printer_uint8_vector_field@@Base+0x18c>
   3b120:	ldr	r0, [r4, #16]
   3b124:	cmp	r1, r0
   3b128:	bcc	3b140 <flatcc_json_printer_uint8_vector_field@@Base+0x18c>
   3b12c:	ldr	r2, [r4, #44]	; 0x2c
   3b130:	mov	r0, r4
   3b134:	mov	r1, #0
   3b138:	blx	r2
   3b13c:	ldr	r1, [r4, #20]
   3b140:	ldrb	r0, [r8, #4]
   3b144:	bl	37db4 <flatcc_json_printer_uint8@@Base+0x2c>
   3b148:	ldr	r1, [r4, #20]
   3b14c:	subs	r9, r7, #1
   3b150:	add	r0, r1, r0
   3b154:	str	r0, [r4, #20]
   3b158:	beq	3b27c <flatcc_json_printer_uint8_vector_field@@Base+0x2c8>
   3b15c:	ldr	r0, [r4, #20]
   3b160:	add	r7, r8, #5
   3b164:	mov	r8, #44	; 0x2c
   3b168:	mov	sl, #10
   3b16c:	add	r1, r0, #1
   3b170:	sub	r9, r9, #1
   3b174:	str	r1, [r4, #20]
   3b178:	strb	r8, [r0]
   3b17c:	ldrb	r0, [r4, #25]
   3b180:	ldr	r1, [r4, #20]
   3b184:	cmp	r0, #0
   3b188:	beq	3b240 <flatcc_json_printer_uint8_vector_field@@Base+0x28c>
   3b18c:	add	r0, r1, #1
   3b190:	str	r0, [r4, #20]
   3b194:	strb	sl, [r1]
   3b198:	ldr	r0, [r4, #20]
   3b19c:	ldrb	r2, [r4, #25]
   3b1a0:	ldr	r3, [r4, #32]
   3b1a4:	ldr	r1, [r4, #16]
   3b1a8:	mla	r6, r3, r2, r0
   3b1ac:	mul	r5, r3, r2
   3b1b0:	cmp	r6, r1
   3b1b4:	bls	3b224 <flatcc_json_printer_uint8_vector_field@@Base+0x270>
   3b1b8:	cmp	r0, r1
   3b1bc:	bcc	3b1d8 <flatcc_json_printer_uint8_vector_field@@Base+0x224>
   3b1c0:	ldr	r2, [r4, #44]	; 0x2c
   3b1c4:	mov	r0, r4
   3b1c8:	mov	r1, #0
   3b1cc:	blx	r2
   3b1d0:	ldr	r1, [r4, #16]
   3b1d4:	ldr	r0, [r4, #20]
   3b1d8:	sub	r6, r1, r0
   3b1dc:	cmp	r6, r5
   3b1e0:	bcs	3b224 <flatcc_json_printer_uint8_vector_field@@Base+0x270>
   3b1e4:	mov	r1, #32
   3b1e8:	mov	r2, r6
   3b1ec:	bl	14ef0 <memset@plt>
   3b1f0:	ldr	r0, [r4, #20]
   3b1f4:	ldr	r2, [r4, #44]	; 0x2c
   3b1f8:	mov	r1, #0
   3b1fc:	add	r0, r0, r6
   3b200:	str	r0, [r4, #20]
   3b204:	mov	r0, r4
   3b208:	blx	r2
   3b20c:	ldr	r1, [r4, #16]
   3b210:	ldr	r0, [r4, #20]
   3b214:	sub	r5, r5, r6
   3b218:	sub	r6, r1, r0
   3b21c:	cmp	r5, r6
   3b220:	bhi	3b1e4 <flatcc_json_printer_uint8_vector_field@@Base+0x230>
   3b224:	mov	r1, #32
   3b228:	mov	r2, r5
   3b22c:	bl	14ef0 <memset@plt>
   3b230:	ldr	r0, [r4, #20]
   3b234:	add	r1, r0, r5
   3b238:	str	r1, [r4, #20]
   3b23c:	b	3b260 <flatcc_json_printer_uint8_vector_field@@Base+0x2ac>
   3b240:	ldr	r0, [r4, #16]
   3b244:	cmp	r1, r0
   3b248:	bcc	3b260 <flatcc_json_printer_uint8_vector_field@@Base+0x2ac>
   3b24c:	ldr	r2, [r4, #44]	; 0x2c
   3b250:	mov	r0, r4
   3b254:	mov	r1, #0
   3b258:	blx	r2
   3b25c:	ldr	r1, [r4, #20]
   3b260:	ldrb	r0, [r7], #1
   3b264:	bl	37db4 <flatcc_json_printer_uint8@@Base+0x2c>
   3b268:	ldr	r1, [r4, #20]
   3b26c:	cmp	r9, #0
   3b270:	add	r0, r1, r0
   3b274:	str	r0, [r4, #20]
   3b278:	bne	3b16c <flatcc_json_printer_uint8_vector_field@@Base+0x1b8>
   3b27c:	ldrb	r1, [r4, #25]
   3b280:	ldr	r0, [r4, #20]
   3b284:	cmp	r1, #0
   3b288:	beq	3b348 <flatcc_json_printer_uint8_vector_field@@Base+0x394>
   3b28c:	add	r1, r0, #1
   3b290:	str	r1, [r4, #20]
   3b294:	mov	r1, #10
   3b298:	strb	r1, [r0]
   3b29c:	ldr	r0, [r4, #32]
   3b2a0:	sub	r2, r0, #1
   3b2a4:	str	r2, [r4, #32]
   3b2a8:	ldrb	r3, [r4, #25]
   3b2ac:	ldr	r0, [r4, #20]
   3b2b0:	ldr	r1, [r4, #16]
   3b2b4:	mla	r7, r2, r3, r0
   3b2b8:	mul	r5, r2, r3
   3b2bc:	cmp	r7, r1
   3b2c0:	bls	3b330 <flatcc_json_printer_uint8_vector_field@@Base+0x37c>
   3b2c4:	cmp	r0, r1
   3b2c8:	bcc	3b2e4 <flatcc_json_printer_uint8_vector_field@@Base+0x330>
   3b2cc:	ldr	r2, [r4, #44]	; 0x2c
   3b2d0:	mov	r0, r4
   3b2d4:	mov	r1, #0
   3b2d8:	blx	r2
   3b2dc:	ldr	r1, [r4, #16]
   3b2e0:	ldr	r0, [r4, #20]
   3b2e4:	sub	r6, r1, r0
   3b2e8:	cmp	r6, r5
   3b2ec:	bcs	3b330 <flatcc_json_printer_uint8_vector_field@@Base+0x37c>
   3b2f0:	mov	r1, #32
   3b2f4:	mov	r2, r6
   3b2f8:	bl	14ef0 <memset@plt>
   3b2fc:	ldr	r0, [r4, #20]
   3b300:	ldr	r2, [r4, #44]	; 0x2c
   3b304:	mov	r1, #0
   3b308:	add	r0, r0, r6
   3b30c:	str	r0, [r4, #20]
   3b310:	mov	r0, r4
   3b314:	blx	r2
   3b318:	ldr	r1, [r4, #16]
   3b31c:	ldr	r0, [r4, #20]
   3b320:	sub	r5, r5, r6
   3b324:	sub	r6, r1, r0
   3b328:	cmp	r5, r6
   3b32c:	bhi	3b2f0 <flatcc_json_printer_uint8_vector_field@@Base+0x33c>
   3b330:	mov	r1, #32
   3b334:	mov	r2, r5
   3b338:	bl	14ef0 <memset@plt>
   3b33c:	ldr	r0, [r4, #20]
   3b340:	add	r0, r0, r5
   3b344:	str	r0, [r4, #20]
   3b348:	add	r1, r0, #1
   3b34c:	str	r1, [r4, #20]
   3b350:	mov	r1, #93	; 0x5d
   3b354:	strb	r1, [r0]
   3b358:	sub	sp, fp, #28
   3b35c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003b360 <flatcc_json_printer_uint16_vector_field@@Base>:
   3b360:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3b364:	add	fp, sp, #28
   3b368:	sub	sp, sp, #4
   3b36c:	mov	r4, r0
   3b370:	mov	r0, #4
   3b374:	add	r0, r0, r2, lsl #1
   3b378:	ldr	r2, [r1, #8]
   3b37c:	cmp	r0, r2
   3b380:	bge	3b704 <flatcc_json_printer_uint16_vector_field@@Base+0x3a4>
   3b384:	ldr	r2, [r1, #4]
   3b388:	add	r0, r2, r0
   3b38c:	ldrh	r0, [r0]
   3b390:	cmp	r0, #0
   3b394:	ldrne	r2, [r1]
   3b398:	addsne	r8, r2, r0
   3b39c:	beq	3b704 <flatcc_json_printer_uint16_vector_field@@Base+0x3a4>
   3b3a0:	ldr	r0, [r1, #16]
   3b3a4:	ldr	r2, [fp, #8]
   3b3a8:	add	r7, r0, #1
   3b3ac:	cmp	r0, #0
   3b3b0:	str	r7, [r1, #16]
   3b3b4:	ldrne	r0, [r4, #20]
   3b3b8:	addne	r1, r0, #1
   3b3bc:	strne	r1, [r4, #20]
   3b3c0:	movne	r1, #44	; 0x2c
   3b3c4:	strbne	r1, [r0]
   3b3c8:	mov	r1, r3
   3b3cc:	ldr	r0, [r8]
   3b3d0:	ldr	r7, [r8, r0]!
   3b3d4:	mov	r0, r4
   3b3d8:	bl	38c54 <flatcc_json_printer_string_field@@Base+0x8c>
   3b3dc:	ldr	r1, [r4, #32]
   3b3e0:	ldr	r0, [r4, #20]
   3b3e4:	cmp	r7, #0
   3b3e8:	add	r1, r1, #1
   3b3ec:	str	r1, [r4, #32]
   3b3f0:	add	r1, r0, #1
   3b3f4:	str	r1, [r4, #20]
   3b3f8:	mov	r1, #91	; 0x5b
   3b3fc:	strb	r1, [r0]
   3b400:	beq	3b628 <flatcc_json_printer_uint16_vector_field@@Base+0x2c8>
   3b404:	ldrb	r0, [r4, #25]
   3b408:	ldr	r1, [r4, #20]
   3b40c:	cmp	r0, #0
   3b410:	beq	3b4cc <flatcc_json_printer_uint16_vector_field@@Base+0x16c>
   3b414:	add	r0, r1, #1
   3b418:	str	r0, [r4, #20]
   3b41c:	mov	r0, #10
   3b420:	strb	r0, [r1]
   3b424:	ldr	r0, [r4, #20]
   3b428:	ldrb	r2, [r4, #25]
   3b42c:	ldr	r3, [r4, #32]
   3b430:	ldr	r1, [r4, #16]
   3b434:	mla	r6, r3, r2, r0
   3b438:	mul	r5, r3, r2
   3b43c:	cmp	r6, r1
   3b440:	bls	3b4b0 <flatcc_json_printer_uint16_vector_field@@Base+0x150>
   3b444:	cmp	r0, r1
   3b448:	bcc	3b464 <flatcc_json_printer_uint16_vector_field@@Base+0x104>
   3b44c:	ldr	r2, [r4, #44]	; 0x2c
   3b450:	mov	r0, r4
   3b454:	mov	r1, #0
   3b458:	blx	r2
   3b45c:	ldr	r1, [r4, #16]
   3b460:	ldr	r0, [r4, #20]
   3b464:	sub	r6, r1, r0
   3b468:	cmp	r6, r5
   3b46c:	bcs	3b4b0 <flatcc_json_printer_uint16_vector_field@@Base+0x150>
   3b470:	mov	r1, #32
   3b474:	mov	r2, r6
   3b478:	bl	14ef0 <memset@plt>
   3b47c:	ldr	r0, [r4, #20]
   3b480:	ldr	r2, [r4, #44]	; 0x2c
   3b484:	mov	r1, #0
   3b488:	add	r0, r0, r6
   3b48c:	str	r0, [r4, #20]
   3b490:	mov	r0, r4
   3b494:	blx	r2
   3b498:	ldr	r1, [r4, #16]
   3b49c:	ldr	r0, [r4, #20]
   3b4a0:	sub	r5, r5, r6
   3b4a4:	sub	r6, r1, r0
   3b4a8:	cmp	r5, r6
   3b4ac:	bhi	3b470 <flatcc_json_printer_uint16_vector_field@@Base+0x110>
   3b4b0:	mov	r1, #32
   3b4b4:	mov	r2, r5
   3b4b8:	bl	14ef0 <memset@plt>
   3b4bc:	ldr	r0, [r4, #20]
   3b4c0:	add	r1, r0, r5
   3b4c4:	str	r1, [r4, #20]
   3b4c8:	b	3b4ec <flatcc_json_printer_uint16_vector_field@@Base+0x18c>
   3b4cc:	ldr	r0, [r4, #16]
   3b4d0:	cmp	r1, r0
   3b4d4:	bcc	3b4ec <flatcc_json_printer_uint16_vector_field@@Base+0x18c>
   3b4d8:	ldr	r2, [r4, #44]	; 0x2c
   3b4dc:	mov	r0, r4
   3b4e0:	mov	r1, #0
   3b4e4:	blx	r2
   3b4e8:	ldr	r1, [r4, #20]
   3b4ec:	ldrh	r0, [r8, #4]
   3b4f0:	bl	37e84 <flatcc_json_printer_uint16@@Base+0x2c>
   3b4f4:	ldr	r1, [r4, #20]
   3b4f8:	subs	r9, r7, #1
   3b4fc:	add	r0, r1, r0
   3b500:	str	r0, [r4, #20]
   3b504:	beq	3b628 <flatcc_json_printer_uint16_vector_field@@Base+0x2c8>
   3b508:	ldr	r0, [r4, #20]
   3b50c:	add	r7, r8, #6
   3b510:	mov	r8, #44	; 0x2c
   3b514:	mov	sl, #10
   3b518:	add	r1, r0, #1
   3b51c:	sub	r9, r9, #1
   3b520:	str	r1, [r4, #20]
   3b524:	strb	r8, [r0]
   3b528:	ldrb	r0, [r4, #25]
   3b52c:	ldr	r1, [r4, #20]
   3b530:	cmp	r0, #0
   3b534:	beq	3b5ec <flatcc_json_printer_uint16_vector_field@@Base+0x28c>
   3b538:	add	r0, r1, #1
   3b53c:	str	r0, [r4, #20]
   3b540:	strb	sl, [r1]
   3b544:	ldr	r0, [r4, #20]
   3b548:	ldrb	r2, [r4, #25]
   3b54c:	ldr	r3, [r4, #32]
   3b550:	ldr	r1, [r4, #16]
   3b554:	mla	r6, r3, r2, r0
   3b558:	mul	r5, r3, r2
   3b55c:	cmp	r6, r1
   3b560:	bls	3b5d0 <flatcc_json_printer_uint16_vector_field@@Base+0x270>
   3b564:	cmp	r0, r1
   3b568:	bcc	3b584 <flatcc_json_printer_uint16_vector_field@@Base+0x224>
   3b56c:	ldr	r2, [r4, #44]	; 0x2c
   3b570:	mov	r0, r4
   3b574:	mov	r1, #0
   3b578:	blx	r2
   3b57c:	ldr	r1, [r4, #16]
   3b580:	ldr	r0, [r4, #20]
   3b584:	sub	r6, r1, r0
   3b588:	cmp	r6, r5
   3b58c:	bcs	3b5d0 <flatcc_json_printer_uint16_vector_field@@Base+0x270>
   3b590:	mov	r1, #32
   3b594:	mov	r2, r6
   3b598:	bl	14ef0 <memset@plt>
   3b59c:	ldr	r0, [r4, #20]
   3b5a0:	ldr	r2, [r4, #44]	; 0x2c
   3b5a4:	mov	r1, #0
   3b5a8:	add	r0, r0, r6
   3b5ac:	str	r0, [r4, #20]
   3b5b0:	mov	r0, r4
   3b5b4:	blx	r2
   3b5b8:	ldr	r1, [r4, #16]
   3b5bc:	ldr	r0, [r4, #20]
   3b5c0:	sub	r5, r5, r6
   3b5c4:	sub	r6, r1, r0
   3b5c8:	cmp	r5, r6
   3b5cc:	bhi	3b590 <flatcc_json_printer_uint16_vector_field@@Base+0x230>
   3b5d0:	mov	r1, #32
   3b5d4:	mov	r2, r5
   3b5d8:	bl	14ef0 <memset@plt>
   3b5dc:	ldr	r0, [r4, #20]
   3b5e0:	add	r1, r0, r5
   3b5e4:	str	r1, [r4, #20]
   3b5e8:	b	3b60c <flatcc_json_printer_uint16_vector_field@@Base+0x2ac>
   3b5ec:	ldr	r0, [r4, #16]
   3b5f0:	cmp	r1, r0
   3b5f4:	bcc	3b60c <flatcc_json_printer_uint16_vector_field@@Base+0x2ac>
   3b5f8:	ldr	r2, [r4, #44]	; 0x2c
   3b5fc:	mov	r0, r4
   3b600:	mov	r1, #0
   3b604:	blx	r2
   3b608:	ldr	r1, [r4, #20]
   3b60c:	ldrh	r0, [r7], #2
   3b610:	bl	37e84 <flatcc_json_printer_uint16@@Base+0x2c>
   3b614:	ldr	r1, [r4, #20]
   3b618:	cmp	r9, #0
   3b61c:	add	r0, r1, r0
   3b620:	str	r0, [r4, #20]
   3b624:	bne	3b518 <flatcc_json_printer_uint16_vector_field@@Base+0x1b8>
   3b628:	ldrb	r1, [r4, #25]
   3b62c:	ldr	r0, [r4, #20]
   3b630:	cmp	r1, #0
   3b634:	beq	3b6f4 <flatcc_json_printer_uint16_vector_field@@Base+0x394>
   3b638:	add	r1, r0, #1
   3b63c:	str	r1, [r4, #20]
   3b640:	mov	r1, #10
   3b644:	strb	r1, [r0]
   3b648:	ldr	r0, [r4, #32]
   3b64c:	sub	r2, r0, #1
   3b650:	str	r2, [r4, #32]
   3b654:	ldrb	r3, [r4, #25]
   3b658:	ldr	r0, [r4, #20]
   3b65c:	ldr	r1, [r4, #16]
   3b660:	mla	r7, r2, r3, r0
   3b664:	mul	r5, r2, r3
   3b668:	cmp	r7, r1
   3b66c:	bls	3b6dc <flatcc_json_printer_uint16_vector_field@@Base+0x37c>
   3b670:	cmp	r0, r1
   3b674:	bcc	3b690 <flatcc_json_printer_uint16_vector_field@@Base+0x330>
   3b678:	ldr	r2, [r4, #44]	; 0x2c
   3b67c:	mov	r0, r4
   3b680:	mov	r1, #0
   3b684:	blx	r2
   3b688:	ldr	r1, [r4, #16]
   3b68c:	ldr	r0, [r4, #20]
   3b690:	sub	r6, r1, r0
   3b694:	cmp	r6, r5
   3b698:	bcs	3b6dc <flatcc_json_printer_uint16_vector_field@@Base+0x37c>
   3b69c:	mov	r1, #32
   3b6a0:	mov	r2, r6
   3b6a4:	bl	14ef0 <memset@plt>
   3b6a8:	ldr	r0, [r4, #20]
   3b6ac:	ldr	r2, [r4, #44]	; 0x2c
   3b6b0:	mov	r1, #0
   3b6b4:	add	r0, r0, r6
   3b6b8:	str	r0, [r4, #20]
   3b6bc:	mov	r0, r4
   3b6c0:	blx	r2
   3b6c4:	ldr	r1, [r4, #16]
   3b6c8:	ldr	r0, [r4, #20]
   3b6cc:	sub	r5, r5, r6
   3b6d0:	sub	r6, r1, r0
   3b6d4:	cmp	r5, r6
   3b6d8:	bhi	3b69c <flatcc_json_printer_uint16_vector_field@@Base+0x33c>
   3b6dc:	mov	r1, #32
   3b6e0:	mov	r2, r5
   3b6e4:	bl	14ef0 <memset@plt>
   3b6e8:	ldr	r0, [r4, #20]
   3b6ec:	add	r0, r0, r5
   3b6f0:	str	r0, [r4, #20]
   3b6f4:	add	r1, r0, #1
   3b6f8:	str	r1, [r4, #20]
   3b6fc:	mov	r1, #93	; 0x5d
   3b700:	strb	r1, [r0]
   3b704:	sub	sp, fp, #28
   3b708:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003b70c <flatcc_json_printer_uint32_vector_field@@Base>:
   3b70c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3b710:	add	fp, sp, #28
   3b714:	sub	sp, sp, #4
   3b718:	mov	r4, r0
   3b71c:	mov	r0, #4
   3b720:	add	r0, r0, r2, lsl #1
   3b724:	ldr	r2, [r1, #8]
   3b728:	cmp	r0, r2
   3b72c:	bge	3bab0 <flatcc_json_printer_uint32_vector_field@@Base+0x3a4>
   3b730:	ldr	r2, [r1, #4]
   3b734:	add	r0, r2, r0
   3b738:	ldrh	r0, [r0]
   3b73c:	cmp	r0, #0
   3b740:	ldrne	r2, [r1]
   3b744:	addsne	r8, r2, r0
   3b748:	beq	3bab0 <flatcc_json_printer_uint32_vector_field@@Base+0x3a4>
   3b74c:	ldr	r0, [r1, #16]
   3b750:	ldr	r2, [fp, #8]
   3b754:	add	r7, r0, #1
   3b758:	cmp	r0, #0
   3b75c:	str	r7, [r1, #16]
   3b760:	ldrne	r0, [r4, #20]
   3b764:	addne	r1, r0, #1
   3b768:	strne	r1, [r4, #20]
   3b76c:	movne	r1, #44	; 0x2c
   3b770:	strbne	r1, [r0]
   3b774:	mov	r1, r3
   3b778:	ldr	r0, [r8]
   3b77c:	ldr	r7, [r8, r0]!
   3b780:	mov	r0, r4
   3b784:	bl	38c54 <flatcc_json_printer_string_field@@Base+0x8c>
   3b788:	ldr	r1, [r4, #32]
   3b78c:	ldr	r0, [r4, #20]
   3b790:	cmp	r7, #0
   3b794:	add	r1, r1, #1
   3b798:	str	r1, [r4, #32]
   3b79c:	add	r1, r0, #1
   3b7a0:	str	r1, [r4, #20]
   3b7a4:	mov	r1, #91	; 0x5b
   3b7a8:	strb	r1, [r0]
   3b7ac:	beq	3b9d4 <flatcc_json_printer_uint32_vector_field@@Base+0x2c8>
   3b7b0:	ldrb	r0, [r4, #25]
   3b7b4:	ldr	r1, [r4, #20]
   3b7b8:	cmp	r0, #0
   3b7bc:	beq	3b878 <flatcc_json_printer_uint32_vector_field@@Base+0x16c>
   3b7c0:	add	r0, r1, #1
   3b7c4:	str	r0, [r4, #20]
   3b7c8:	mov	r0, #10
   3b7cc:	strb	r0, [r1]
   3b7d0:	ldr	r0, [r4, #20]
   3b7d4:	ldrb	r2, [r4, #25]
   3b7d8:	ldr	r3, [r4, #32]
   3b7dc:	ldr	r1, [r4, #16]
   3b7e0:	mla	r6, r3, r2, r0
   3b7e4:	mul	r5, r3, r2
   3b7e8:	cmp	r6, r1
   3b7ec:	bls	3b85c <flatcc_json_printer_uint32_vector_field@@Base+0x150>
   3b7f0:	cmp	r0, r1
   3b7f4:	bcc	3b810 <flatcc_json_printer_uint32_vector_field@@Base+0x104>
   3b7f8:	ldr	r2, [r4, #44]	; 0x2c
   3b7fc:	mov	r0, r4
   3b800:	mov	r1, #0
   3b804:	blx	r2
   3b808:	ldr	r1, [r4, #16]
   3b80c:	ldr	r0, [r4, #20]
   3b810:	sub	r6, r1, r0
   3b814:	cmp	r6, r5
   3b818:	bcs	3b85c <flatcc_json_printer_uint32_vector_field@@Base+0x150>
   3b81c:	mov	r1, #32
   3b820:	mov	r2, r6
   3b824:	bl	14ef0 <memset@plt>
   3b828:	ldr	r0, [r4, #20]
   3b82c:	ldr	r2, [r4, #44]	; 0x2c
   3b830:	mov	r1, #0
   3b834:	add	r0, r0, r6
   3b838:	str	r0, [r4, #20]
   3b83c:	mov	r0, r4
   3b840:	blx	r2
   3b844:	ldr	r1, [r4, #16]
   3b848:	ldr	r0, [r4, #20]
   3b84c:	sub	r5, r5, r6
   3b850:	sub	r6, r1, r0
   3b854:	cmp	r5, r6
   3b858:	bhi	3b81c <flatcc_json_printer_uint32_vector_field@@Base+0x110>
   3b85c:	mov	r1, #32
   3b860:	mov	r2, r5
   3b864:	bl	14ef0 <memset@plt>
   3b868:	ldr	r0, [r4, #20]
   3b86c:	add	r1, r0, r5
   3b870:	str	r1, [r4, #20]
   3b874:	b	3b898 <flatcc_json_printer_uint32_vector_field@@Base+0x18c>
   3b878:	ldr	r0, [r4, #16]
   3b87c:	cmp	r1, r0
   3b880:	bcc	3b898 <flatcc_json_printer_uint32_vector_field@@Base+0x18c>
   3b884:	ldr	r2, [r4, #44]	; 0x2c
   3b888:	mov	r0, r4
   3b88c:	mov	r1, #0
   3b890:	blx	r2
   3b894:	ldr	r1, [r4, #20]
   3b898:	ldr	r0, [r8, #4]
   3b89c:	bl	38010 <flatcc_json_printer_uint32@@Base+0x2c>
   3b8a0:	ldr	r1, [r4, #20]
   3b8a4:	subs	r9, r7, #1
   3b8a8:	add	r0, r1, r0
   3b8ac:	str	r0, [r4, #20]
   3b8b0:	beq	3b9d4 <flatcc_json_printer_uint32_vector_field@@Base+0x2c8>
   3b8b4:	ldr	r0, [r4, #20]
   3b8b8:	add	r7, r8, #8
   3b8bc:	mov	r8, #44	; 0x2c
   3b8c0:	mov	sl, #10
   3b8c4:	add	r1, r0, #1
   3b8c8:	sub	r9, r9, #1
   3b8cc:	str	r1, [r4, #20]
   3b8d0:	strb	r8, [r0]
   3b8d4:	ldrb	r0, [r4, #25]
   3b8d8:	ldr	r1, [r4, #20]
   3b8dc:	cmp	r0, #0
   3b8e0:	beq	3b998 <flatcc_json_printer_uint32_vector_field@@Base+0x28c>
   3b8e4:	add	r0, r1, #1
   3b8e8:	str	r0, [r4, #20]
   3b8ec:	strb	sl, [r1]
   3b8f0:	ldr	r0, [r4, #20]
   3b8f4:	ldrb	r2, [r4, #25]
   3b8f8:	ldr	r3, [r4, #32]
   3b8fc:	ldr	r1, [r4, #16]
   3b900:	mla	r6, r3, r2, r0
   3b904:	mul	r5, r3, r2
   3b908:	cmp	r6, r1
   3b90c:	bls	3b97c <flatcc_json_printer_uint32_vector_field@@Base+0x270>
   3b910:	cmp	r0, r1
   3b914:	bcc	3b930 <flatcc_json_printer_uint32_vector_field@@Base+0x224>
   3b918:	ldr	r2, [r4, #44]	; 0x2c
   3b91c:	mov	r0, r4
   3b920:	mov	r1, #0
   3b924:	blx	r2
   3b928:	ldr	r1, [r4, #16]
   3b92c:	ldr	r0, [r4, #20]
   3b930:	sub	r6, r1, r0
   3b934:	cmp	r6, r5
   3b938:	bcs	3b97c <flatcc_json_printer_uint32_vector_field@@Base+0x270>
   3b93c:	mov	r1, #32
   3b940:	mov	r2, r6
   3b944:	bl	14ef0 <memset@plt>
   3b948:	ldr	r0, [r4, #20]
   3b94c:	ldr	r2, [r4, #44]	; 0x2c
   3b950:	mov	r1, #0
   3b954:	add	r0, r0, r6
   3b958:	str	r0, [r4, #20]
   3b95c:	mov	r0, r4
   3b960:	blx	r2
   3b964:	ldr	r1, [r4, #16]
   3b968:	ldr	r0, [r4, #20]
   3b96c:	sub	r5, r5, r6
   3b970:	sub	r6, r1, r0
   3b974:	cmp	r5, r6
   3b978:	bhi	3b93c <flatcc_json_printer_uint32_vector_field@@Base+0x230>
   3b97c:	mov	r1, #32
   3b980:	mov	r2, r5
   3b984:	bl	14ef0 <memset@plt>
   3b988:	ldr	r0, [r4, #20]
   3b98c:	add	r1, r0, r5
   3b990:	str	r1, [r4, #20]
   3b994:	b	3b9b8 <flatcc_json_printer_uint32_vector_field@@Base+0x2ac>
   3b998:	ldr	r0, [r4, #16]
   3b99c:	cmp	r1, r0
   3b9a0:	bcc	3b9b8 <flatcc_json_printer_uint32_vector_field@@Base+0x2ac>
   3b9a4:	ldr	r2, [r4, #44]	; 0x2c
   3b9a8:	mov	r0, r4
   3b9ac:	mov	r1, #0
   3b9b0:	blx	r2
   3b9b4:	ldr	r1, [r4, #20]
   3b9b8:	ldr	r0, [r7], #4
   3b9bc:	bl	38010 <flatcc_json_printer_uint32@@Base+0x2c>
   3b9c0:	ldr	r1, [r4, #20]
   3b9c4:	cmp	r9, #0
   3b9c8:	add	r0, r1, r0
   3b9cc:	str	r0, [r4, #20]
   3b9d0:	bne	3b8c4 <flatcc_json_printer_uint32_vector_field@@Base+0x1b8>
   3b9d4:	ldrb	r1, [r4, #25]
   3b9d8:	ldr	r0, [r4, #20]
   3b9dc:	cmp	r1, #0
   3b9e0:	beq	3baa0 <flatcc_json_printer_uint32_vector_field@@Base+0x394>
   3b9e4:	add	r1, r0, #1
   3b9e8:	str	r1, [r4, #20]
   3b9ec:	mov	r1, #10
   3b9f0:	strb	r1, [r0]
   3b9f4:	ldr	r0, [r4, #32]
   3b9f8:	sub	r2, r0, #1
   3b9fc:	str	r2, [r4, #32]
   3ba00:	ldrb	r3, [r4, #25]
   3ba04:	ldr	r0, [r4, #20]
   3ba08:	ldr	r1, [r4, #16]
   3ba0c:	mla	r7, r2, r3, r0
   3ba10:	mul	r5, r2, r3
   3ba14:	cmp	r7, r1
   3ba18:	bls	3ba88 <flatcc_json_printer_uint32_vector_field@@Base+0x37c>
   3ba1c:	cmp	r0, r1
   3ba20:	bcc	3ba3c <flatcc_json_printer_uint32_vector_field@@Base+0x330>
   3ba24:	ldr	r2, [r4, #44]	; 0x2c
   3ba28:	mov	r0, r4
   3ba2c:	mov	r1, #0
   3ba30:	blx	r2
   3ba34:	ldr	r1, [r4, #16]
   3ba38:	ldr	r0, [r4, #20]
   3ba3c:	sub	r6, r1, r0
   3ba40:	cmp	r6, r5
   3ba44:	bcs	3ba88 <flatcc_json_printer_uint32_vector_field@@Base+0x37c>
   3ba48:	mov	r1, #32
   3ba4c:	mov	r2, r6
   3ba50:	bl	14ef0 <memset@plt>
   3ba54:	ldr	r0, [r4, #20]
   3ba58:	ldr	r2, [r4, #44]	; 0x2c
   3ba5c:	mov	r1, #0
   3ba60:	add	r0, r0, r6
   3ba64:	str	r0, [r4, #20]
   3ba68:	mov	r0, r4
   3ba6c:	blx	r2
   3ba70:	ldr	r1, [r4, #16]
   3ba74:	ldr	r0, [r4, #20]
   3ba78:	sub	r5, r5, r6
   3ba7c:	sub	r6, r1, r0
   3ba80:	cmp	r5, r6
   3ba84:	bhi	3ba48 <flatcc_json_printer_uint32_vector_field@@Base+0x33c>
   3ba88:	mov	r1, #32
   3ba8c:	mov	r2, r5
   3ba90:	bl	14ef0 <memset@plt>
   3ba94:	ldr	r0, [r4, #20]
   3ba98:	add	r0, r0, r5
   3ba9c:	str	r0, [r4, #20]
   3baa0:	add	r1, r0, #1
   3baa4:	str	r1, [r4, #20]
   3baa8:	mov	r1, #93	; 0x5d
   3baac:	strb	r1, [r0]
   3bab0:	sub	sp, fp, #28
   3bab4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003bab8 <flatcc_json_printer_uint64_vector_field@@Base>:
   3bab8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3babc:	add	fp, sp, #28
   3bac0:	sub	sp, sp, #4
   3bac4:	mov	r4, r0
   3bac8:	mov	r0, #4
   3bacc:	add	r0, r0, r2, lsl #1
   3bad0:	ldr	r2, [r1, #8]
   3bad4:	cmp	r0, r2
   3bad8:	bge	3be60 <flatcc_json_printer_uint64_vector_field@@Base+0x3a8>
   3badc:	ldr	r2, [r1, #4]
   3bae0:	add	r0, r2, r0
   3bae4:	ldrh	r0, [r0]
   3bae8:	cmp	r0, #0
   3baec:	ldrne	r2, [r1]
   3baf0:	addsne	r8, r2, r0
   3baf4:	beq	3be60 <flatcc_json_printer_uint64_vector_field@@Base+0x3a8>
   3baf8:	ldr	r0, [r1, #16]
   3bafc:	ldr	r2, [fp, #8]
   3bb00:	add	r7, r0, #1
   3bb04:	cmp	r0, #0
   3bb08:	str	r7, [r1, #16]
   3bb0c:	ldrne	r0, [r4, #20]
   3bb10:	addne	r1, r0, #1
   3bb14:	strne	r1, [r4, #20]
   3bb18:	movne	r1, #44	; 0x2c
   3bb1c:	strbne	r1, [r0]
   3bb20:	mov	r1, r3
   3bb24:	ldr	r0, [r8]
   3bb28:	ldr	r7, [r8, r0]!
   3bb2c:	mov	r0, r4
   3bb30:	bl	38c54 <flatcc_json_printer_string_field@@Base+0x8c>
   3bb34:	ldr	r1, [r4, #32]
   3bb38:	ldr	r0, [r4, #20]
   3bb3c:	cmp	r7, #0
   3bb40:	add	r1, r1, #1
   3bb44:	str	r1, [r4, #32]
   3bb48:	add	r1, r0, #1
   3bb4c:	str	r1, [r4, #20]
   3bb50:	mov	r1, #91	; 0x5b
   3bb54:	strb	r1, [r0]
   3bb58:	beq	3bd84 <flatcc_json_printer_uint64_vector_field@@Base+0x2cc>
   3bb5c:	ldrb	r0, [r4, #25]
   3bb60:	ldr	r2, [r4, #20]
   3bb64:	cmp	r0, #0
   3bb68:	beq	3bc24 <flatcc_json_printer_uint64_vector_field@@Base+0x16c>
   3bb6c:	add	r0, r2, #1
   3bb70:	str	r0, [r4, #20]
   3bb74:	mov	r0, #10
   3bb78:	strb	r0, [r2]
   3bb7c:	ldr	r0, [r4, #20]
   3bb80:	ldrb	r2, [r4, #25]
   3bb84:	ldr	r3, [r4, #32]
   3bb88:	ldr	r1, [r4, #16]
   3bb8c:	mla	r6, r3, r2, r0
   3bb90:	mul	r5, r3, r2
   3bb94:	cmp	r6, r1
   3bb98:	bls	3bc08 <flatcc_json_printer_uint64_vector_field@@Base+0x150>
   3bb9c:	cmp	r0, r1
   3bba0:	bcc	3bbbc <flatcc_json_printer_uint64_vector_field@@Base+0x104>
   3bba4:	ldr	r2, [r4, #44]	; 0x2c
   3bba8:	mov	r0, r4
   3bbac:	mov	r1, #0
   3bbb0:	blx	r2
   3bbb4:	ldr	r1, [r4, #16]
   3bbb8:	ldr	r0, [r4, #20]
   3bbbc:	sub	r6, r1, r0
   3bbc0:	cmp	r6, r5
   3bbc4:	bcs	3bc08 <flatcc_json_printer_uint64_vector_field@@Base+0x150>
   3bbc8:	mov	r1, #32
   3bbcc:	mov	r2, r6
   3bbd0:	bl	14ef0 <memset@plt>
   3bbd4:	ldr	r0, [r4, #20]
   3bbd8:	ldr	r2, [r4, #44]	; 0x2c
   3bbdc:	mov	r1, #0
   3bbe0:	add	r0, r0, r6
   3bbe4:	str	r0, [r4, #20]
   3bbe8:	mov	r0, r4
   3bbec:	blx	r2
   3bbf0:	ldr	r1, [r4, #16]
   3bbf4:	ldr	r0, [r4, #20]
   3bbf8:	sub	r5, r5, r6
   3bbfc:	sub	r6, r1, r0
   3bc00:	cmp	r5, r6
   3bc04:	bhi	3bbc8 <flatcc_json_printer_uint64_vector_field@@Base+0x110>
   3bc08:	mov	r1, #32
   3bc0c:	mov	r2, r5
   3bc10:	bl	14ef0 <memset@plt>
   3bc14:	ldr	r0, [r4, #20]
   3bc18:	add	r2, r0, r5
   3bc1c:	str	r2, [r4, #20]
   3bc20:	b	3bc44 <flatcc_json_printer_uint64_vector_field@@Base+0x18c>
   3bc24:	ldr	r0, [r4, #16]
   3bc28:	cmp	r2, r0
   3bc2c:	bcc	3bc44 <flatcc_json_printer_uint64_vector_field@@Base+0x18c>
   3bc30:	ldr	r2, [r4, #44]	; 0x2c
   3bc34:	mov	r0, r4
   3bc38:	mov	r1, #0
   3bc3c:	blx	r2
   3bc40:	ldr	r2, [r4, #20]
   3bc44:	ldrd	r0, [r8, #4]
   3bc48:	bl	3834c <flatcc_json_printer_uint64@@Base+0x30>
   3bc4c:	ldr	r1, [r4, #20]
   3bc50:	subs	r9, r7, #1
   3bc54:	add	r0, r1, r0
   3bc58:	str	r0, [r4, #20]
   3bc5c:	beq	3bd84 <flatcc_json_printer_uint64_vector_field@@Base+0x2cc>
   3bc60:	ldr	r0, [r4, #20]
   3bc64:	add	r7, r8, #12
   3bc68:	mov	r8, #44	; 0x2c
   3bc6c:	mov	sl, #10
   3bc70:	add	r1, r0, #1
   3bc74:	sub	r9, r9, #1
   3bc78:	str	r1, [r4, #20]
   3bc7c:	strb	r8, [r0]
   3bc80:	ldrb	r0, [r4, #25]
   3bc84:	ldr	r2, [r4, #20]
   3bc88:	cmp	r0, #0
   3bc8c:	beq	3bd44 <flatcc_json_printer_uint64_vector_field@@Base+0x28c>
   3bc90:	add	r0, r2, #1
   3bc94:	str	r0, [r4, #20]
   3bc98:	strb	sl, [r2]
   3bc9c:	ldr	r0, [r4, #20]
   3bca0:	ldrb	r2, [r4, #25]
   3bca4:	ldr	r3, [r4, #32]
   3bca8:	ldr	r1, [r4, #16]
   3bcac:	mla	r6, r3, r2, r0
   3bcb0:	mul	r5, r3, r2
   3bcb4:	cmp	r6, r1
   3bcb8:	bls	3bd28 <flatcc_json_printer_uint64_vector_field@@Base+0x270>
   3bcbc:	cmp	r0, r1
   3bcc0:	bcc	3bcdc <flatcc_json_printer_uint64_vector_field@@Base+0x224>
   3bcc4:	ldr	r2, [r4, #44]	; 0x2c
   3bcc8:	mov	r0, r4
   3bccc:	mov	r1, #0
   3bcd0:	blx	r2
   3bcd4:	ldr	r1, [r4, #16]
   3bcd8:	ldr	r0, [r4, #20]
   3bcdc:	sub	r6, r1, r0
   3bce0:	cmp	r6, r5
   3bce4:	bcs	3bd28 <flatcc_json_printer_uint64_vector_field@@Base+0x270>
   3bce8:	mov	r1, #32
   3bcec:	mov	r2, r6
   3bcf0:	bl	14ef0 <memset@plt>
   3bcf4:	ldr	r0, [r4, #20]
   3bcf8:	ldr	r2, [r4, #44]	; 0x2c
   3bcfc:	mov	r1, #0
   3bd00:	add	r0, r0, r6
   3bd04:	str	r0, [r4, #20]
   3bd08:	mov	r0, r4
   3bd0c:	blx	r2
   3bd10:	ldr	r1, [r4, #16]
   3bd14:	ldr	r0, [r4, #20]
   3bd18:	sub	r5, r5, r6
   3bd1c:	sub	r6, r1, r0
   3bd20:	cmp	r5, r6
   3bd24:	bhi	3bce8 <flatcc_json_printer_uint64_vector_field@@Base+0x230>
   3bd28:	mov	r1, #32
   3bd2c:	mov	r2, r5
   3bd30:	bl	14ef0 <memset@plt>
   3bd34:	ldr	r0, [r4, #20]
   3bd38:	add	r2, r0, r5
   3bd3c:	str	r2, [r4, #20]
   3bd40:	b	3bd64 <flatcc_json_printer_uint64_vector_field@@Base+0x2ac>
   3bd44:	ldr	r0, [r4, #16]
   3bd48:	cmp	r2, r0
   3bd4c:	bcc	3bd64 <flatcc_json_printer_uint64_vector_field@@Base+0x2ac>
   3bd50:	ldr	r2, [r4, #44]	; 0x2c
   3bd54:	mov	r0, r4
   3bd58:	mov	r1, #0
   3bd5c:	blx	r2
   3bd60:	ldr	r2, [r4, #20]
   3bd64:	ldrd	r0, [r7]
   3bd68:	bl	3834c <flatcc_json_printer_uint64@@Base+0x30>
   3bd6c:	ldr	r1, [r4, #20]
   3bd70:	add	r7, r7, #8
   3bd74:	cmp	r9, #0
   3bd78:	add	r0, r1, r0
   3bd7c:	str	r0, [r4, #20]
   3bd80:	bne	3bc70 <flatcc_json_printer_uint64_vector_field@@Base+0x1b8>
   3bd84:	ldrb	r1, [r4, #25]
   3bd88:	ldr	r0, [r4, #20]
   3bd8c:	cmp	r1, #0
   3bd90:	beq	3be50 <flatcc_json_printer_uint64_vector_field@@Base+0x398>
   3bd94:	add	r1, r0, #1
   3bd98:	str	r1, [r4, #20]
   3bd9c:	mov	r1, #10
   3bda0:	strb	r1, [r0]
   3bda4:	ldr	r0, [r4, #32]
   3bda8:	sub	r2, r0, #1
   3bdac:	str	r2, [r4, #32]
   3bdb0:	ldrb	r3, [r4, #25]
   3bdb4:	ldr	r0, [r4, #20]
   3bdb8:	ldr	r1, [r4, #16]
   3bdbc:	mla	r7, r2, r3, r0
   3bdc0:	mul	r5, r2, r3
   3bdc4:	cmp	r7, r1
   3bdc8:	bls	3be38 <flatcc_json_printer_uint64_vector_field@@Base+0x380>
   3bdcc:	cmp	r0, r1
   3bdd0:	bcc	3bdec <flatcc_json_printer_uint64_vector_field@@Base+0x334>
   3bdd4:	ldr	r2, [r4, #44]	; 0x2c
   3bdd8:	mov	r0, r4
   3bddc:	mov	r1, #0
   3bde0:	blx	r2
   3bde4:	ldr	r1, [r4, #16]
   3bde8:	ldr	r0, [r4, #20]
   3bdec:	sub	r6, r1, r0
   3bdf0:	cmp	r6, r5
   3bdf4:	bcs	3be38 <flatcc_json_printer_uint64_vector_field@@Base+0x380>
   3bdf8:	mov	r1, #32
   3bdfc:	mov	r2, r6
   3be00:	bl	14ef0 <memset@plt>
   3be04:	ldr	r0, [r4, #20]
   3be08:	ldr	r2, [r4, #44]	; 0x2c
   3be0c:	mov	r1, #0
   3be10:	add	r0, r0, r6
   3be14:	str	r0, [r4, #20]
   3be18:	mov	r0, r4
   3be1c:	blx	r2
   3be20:	ldr	r1, [r4, #16]
   3be24:	ldr	r0, [r4, #20]
   3be28:	sub	r5, r5, r6
   3be2c:	sub	r6, r1, r0
   3be30:	cmp	r5, r6
   3be34:	bhi	3bdf8 <flatcc_json_printer_uint64_vector_field@@Base+0x340>
   3be38:	mov	r1, #32
   3be3c:	mov	r2, r5
   3be40:	bl	14ef0 <memset@plt>
   3be44:	ldr	r0, [r4, #20]
   3be48:	add	r0, r0, r5
   3be4c:	str	r0, [r4, #20]
   3be50:	add	r1, r0, #1
   3be54:	str	r1, [r4, #20]
   3be58:	mov	r1, #93	; 0x5d
   3be5c:	strb	r1, [r0]
   3be60:	sub	sp, fp, #28
   3be64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003be68 <flatcc_json_printer_int8_vector_field@@Base>:
   3be68:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3be6c:	add	fp, sp, #28
   3be70:	sub	sp, sp, #4
   3be74:	mov	r4, r0
   3be78:	mov	r0, #4
   3be7c:	add	r0, r0, r2, lsl #1
   3be80:	ldr	r2, [r1, #8]
   3be84:	cmp	r0, r2
   3be88:	bge	3c250 <flatcc_json_printer_int8_vector_field@@Base+0x3e8>
   3be8c:	ldr	r2, [r1, #4]
   3be90:	add	r0, r2, r0
   3be94:	ldrh	r0, [r0]
   3be98:	cmp	r0, #0
   3be9c:	ldrne	r2, [r1]
   3bea0:	addsne	r8, r2, r0
   3bea4:	beq	3c250 <flatcc_json_printer_int8_vector_field@@Base+0x3e8>
   3bea8:	ldr	r0, [r1, #16]
   3beac:	ldr	r2, [fp, #8]
   3beb0:	add	r7, r0, #1
   3beb4:	cmp	r0, #0
   3beb8:	str	r7, [r1, #16]
   3bebc:	ldrne	r0, [r4, #20]
   3bec0:	addne	r1, r0, #1
   3bec4:	strne	r1, [r4, #20]
   3bec8:	movne	r1, #44	; 0x2c
   3becc:	strbne	r1, [r0]
   3bed0:	mov	r1, r3
   3bed4:	ldr	r0, [r8]
   3bed8:	ldr	r7, [r8, r0]!
   3bedc:	mov	r0, r4
   3bee0:	bl	38c54 <flatcc_json_printer_string_field@@Base+0x8c>
   3bee4:	ldr	r1, [r4, #32]
   3bee8:	ldr	r0, [r4, #20]
   3beec:	cmp	r7, #0
   3bef0:	add	r1, r1, #1
   3bef4:	str	r1, [r4, #32]
   3bef8:	add	r1, r0, #1
   3befc:	str	r1, [r4, #20]
   3bf00:	mov	r1, #91	; 0x5b
   3bf04:	strb	r1, [r0]
   3bf08:	beq	3c174 <flatcc_json_printer_int8_vector_field@@Base+0x30c>
   3bf0c:	ldrb	r0, [r4, #25]
   3bf10:	ldr	r1, [r4, #20]
   3bf14:	cmp	r0, #0
   3bf18:	beq	3bfd4 <flatcc_json_printer_int8_vector_field@@Base+0x16c>
   3bf1c:	add	r0, r1, #1
   3bf20:	str	r0, [r4, #20]
   3bf24:	mov	r0, #10
   3bf28:	strb	r0, [r1]
   3bf2c:	ldr	r0, [r4, #20]
   3bf30:	ldrb	r2, [r4, #25]
   3bf34:	ldr	r3, [r4, #32]
   3bf38:	ldr	r1, [r4, #16]
   3bf3c:	mla	r6, r3, r2, r0
   3bf40:	mul	r5, r3, r2
   3bf44:	cmp	r6, r1
   3bf48:	bls	3bfb8 <flatcc_json_printer_int8_vector_field@@Base+0x150>
   3bf4c:	cmp	r0, r1
   3bf50:	bcc	3bf6c <flatcc_json_printer_int8_vector_field@@Base+0x104>
   3bf54:	ldr	r2, [r4, #44]	; 0x2c
   3bf58:	mov	r0, r4
   3bf5c:	mov	r1, #0
   3bf60:	blx	r2
   3bf64:	ldr	r1, [r4, #16]
   3bf68:	ldr	r0, [r4, #20]
   3bf6c:	sub	r6, r1, r0
   3bf70:	cmp	r6, r5
   3bf74:	bcs	3bfb8 <flatcc_json_printer_int8_vector_field@@Base+0x150>
   3bf78:	mov	r1, #32
   3bf7c:	mov	r2, r6
   3bf80:	bl	14ef0 <memset@plt>
   3bf84:	ldr	r0, [r4, #20]
   3bf88:	ldr	r2, [r4, #44]	; 0x2c
   3bf8c:	mov	r1, #0
   3bf90:	add	r0, r0, r6
   3bf94:	str	r0, [r4, #20]
   3bf98:	mov	r0, r4
   3bf9c:	blx	r2
   3bfa0:	ldr	r1, [r4, #16]
   3bfa4:	ldr	r0, [r4, #20]
   3bfa8:	sub	r5, r5, r6
   3bfac:	sub	r6, r1, r0
   3bfb0:	cmp	r5, r6
   3bfb4:	bhi	3bf78 <flatcc_json_printer_int8_vector_field@@Base+0x110>
   3bfb8:	mov	r1, #32
   3bfbc:	mov	r2, r5
   3bfc0:	bl	14ef0 <memset@plt>
   3bfc4:	ldr	r0, [r4, #20]
   3bfc8:	add	r1, r0, r5
   3bfcc:	str	r1, [r4, #20]
   3bfd0:	b	3bff4 <flatcc_json_printer_int8_vector_field@@Base+0x18c>
   3bfd4:	ldr	r0, [r4, #16]
   3bfd8:	cmp	r1, r0
   3bfdc:	bcc	3bff4 <flatcc_json_printer_int8_vector_field@@Base+0x18c>
   3bfe0:	ldr	r2, [r4, #44]	; 0x2c
   3bfe4:	mov	r0, r4
   3bfe8:	mov	r1, #0
   3bfec:	blx	r2
   3bff0:	ldr	r1, [r4, #20]
   3bff4:	ldrb	r0, [r8, #4]
   3bff8:	lsr	r5, r0, #7
   3bffc:	sxtb	r0, r0
   3c000:	cmn	r0, #1
   3c004:	rsble	r0, r0, #0
   3c008:	movle	r2, #45	; 0x2d
   3c00c:	strble	r2, [r1], #1
   3c010:	uxtb	r0, r0
   3c014:	bl	37db4 <flatcc_json_printer_uint8@@Base+0x2c>
   3c018:	ldr	r1, [r4, #20]
   3c01c:	add	r0, r0, r5
   3c020:	subs	r9, r7, #1
   3c024:	add	r0, r1, r0
   3c028:	str	r0, [r4, #20]
   3c02c:	beq	3c174 <flatcc_json_printer_int8_vector_field@@Base+0x30c>
   3c030:	ldr	r0, [r4, #20]
   3c034:	add	r7, r8, #5
   3c038:	mov	r8, #44	; 0x2c
   3c03c:	mov	sl, #10
   3c040:	add	r1, r0, #1
   3c044:	str	r1, [r4, #20]
   3c048:	strb	r8, [r0]
   3c04c:	ldrb	r0, [r4, #25]
   3c050:	ldr	r1, [r4, #20]
   3c054:	cmp	r0, #0
   3c058:	beq	3c110 <flatcc_json_printer_int8_vector_field@@Base+0x2a8>
   3c05c:	add	r0, r1, #1
   3c060:	str	r0, [r4, #20]
   3c064:	strb	sl, [r1]
   3c068:	ldr	r0, [r4, #20]
   3c06c:	ldrb	r2, [r4, #25]
   3c070:	ldr	r3, [r4, #32]
   3c074:	ldr	r1, [r4, #16]
   3c078:	mla	r6, r3, r2, r0
   3c07c:	mul	r5, r3, r2
   3c080:	cmp	r6, r1
   3c084:	bls	3c0f4 <flatcc_json_printer_int8_vector_field@@Base+0x28c>
   3c088:	cmp	r0, r1
   3c08c:	bcc	3c0a8 <flatcc_json_printer_int8_vector_field@@Base+0x240>
   3c090:	ldr	r2, [r4, #44]	; 0x2c
   3c094:	mov	r0, r4
   3c098:	mov	r1, #0
   3c09c:	blx	r2
   3c0a0:	ldr	r1, [r4, #16]
   3c0a4:	ldr	r0, [r4, #20]
   3c0a8:	sub	r6, r1, r0
   3c0ac:	cmp	r6, r5
   3c0b0:	bcs	3c0f4 <flatcc_json_printer_int8_vector_field@@Base+0x28c>
   3c0b4:	mov	r1, #32
   3c0b8:	mov	r2, r6
   3c0bc:	bl	14ef0 <memset@plt>
   3c0c0:	ldr	r0, [r4, #20]
   3c0c4:	ldr	r2, [r4, #44]	; 0x2c
   3c0c8:	mov	r1, #0
   3c0cc:	add	r0, r0, r6
   3c0d0:	str	r0, [r4, #20]
   3c0d4:	mov	r0, r4
   3c0d8:	blx	r2
   3c0dc:	ldr	r1, [r4, #16]
   3c0e0:	ldr	r0, [r4, #20]
   3c0e4:	sub	r5, r5, r6
   3c0e8:	sub	r6, r1, r0
   3c0ec:	cmp	r5, r6
   3c0f0:	bhi	3c0b4 <flatcc_json_printer_int8_vector_field@@Base+0x24c>
   3c0f4:	mov	r1, #32
   3c0f8:	mov	r2, r5
   3c0fc:	bl	14ef0 <memset@plt>
   3c100:	ldr	r0, [r4, #20]
   3c104:	add	r1, r0, r5
   3c108:	str	r1, [r4, #20]
   3c10c:	b	3c130 <flatcc_json_printer_int8_vector_field@@Base+0x2c8>
   3c110:	ldr	r0, [r4, #16]
   3c114:	cmp	r1, r0
   3c118:	bcc	3c130 <flatcc_json_printer_int8_vector_field@@Base+0x2c8>
   3c11c:	ldr	r2, [r4, #44]	; 0x2c
   3c120:	mov	r0, r4
   3c124:	mov	r1, #0
   3c128:	blx	r2
   3c12c:	ldr	r1, [r4, #20]
   3c130:	ldrb	r0, [r7]
   3c134:	sub	r9, r9, #1
   3c138:	lsr	r5, r0, #7
   3c13c:	sxtb	r0, r0
   3c140:	cmn	r0, #1
   3c144:	rsble	r0, r0, #0
   3c148:	movle	r2, #45	; 0x2d
   3c14c:	strble	r2, [r1], #1
   3c150:	uxtb	r0, r0
   3c154:	bl	37db4 <flatcc_json_printer_uint8@@Base+0x2c>
   3c158:	ldr	r1, [r4, #20]
   3c15c:	add	r0, r0, r5
   3c160:	add	r7, r7, #1
   3c164:	cmp	r9, #0
   3c168:	add	r0, r1, r0
   3c16c:	str	r0, [r4, #20]
   3c170:	bne	3c040 <flatcc_json_printer_int8_vector_field@@Base+0x1d8>
   3c174:	ldrb	r1, [r4, #25]
   3c178:	ldr	r0, [r4, #20]
   3c17c:	cmp	r1, #0
   3c180:	beq	3c240 <flatcc_json_printer_int8_vector_field@@Base+0x3d8>
   3c184:	add	r1, r0, #1
   3c188:	str	r1, [r4, #20]
   3c18c:	mov	r1, #10
   3c190:	strb	r1, [r0]
   3c194:	ldr	r0, [r4, #32]
   3c198:	sub	r2, r0, #1
   3c19c:	str	r2, [r4, #32]
   3c1a0:	ldrb	r3, [r4, #25]
   3c1a4:	ldr	r0, [r4, #20]
   3c1a8:	ldr	r1, [r4, #16]
   3c1ac:	mla	r7, r2, r3, r0
   3c1b0:	mul	r5, r2, r3
   3c1b4:	cmp	r7, r1
   3c1b8:	bls	3c228 <flatcc_json_printer_int8_vector_field@@Base+0x3c0>
   3c1bc:	cmp	r0, r1
   3c1c0:	bcc	3c1dc <flatcc_json_printer_int8_vector_field@@Base+0x374>
   3c1c4:	ldr	r2, [r4, #44]	; 0x2c
   3c1c8:	mov	r0, r4
   3c1cc:	mov	r1, #0
   3c1d0:	blx	r2
   3c1d4:	ldr	r1, [r4, #16]
   3c1d8:	ldr	r0, [r4, #20]
   3c1dc:	sub	r6, r1, r0
   3c1e0:	cmp	r6, r5
   3c1e4:	bcs	3c228 <flatcc_json_printer_int8_vector_field@@Base+0x3c0>
   3c1e8:	mov	r1, #32
   3c1ec:	mov	r2, r6
   3c1f0:	bl	14ef0 <memset@plt>
   3c1f4:	ldr	r0, [r4, #20]
   3c1f8:	ldr	r2, [r4, #44]	; 0x2c
   3c1fc:	mov	r1, #0
   3c200:	add	r0, r0, r6
   3c204:	str	r0, [r4, #20]
   3c208:	mov	r0, r4
   3c20c:	blx	r2
   3c210:	ldr	r1, [r4, #16]
   3c214:	ldr	r0, [r4, #20]
   3c218:	sub	r5, r5, r6
   3c21c:	sub	r6, r1, r0
   3c220:	cmp	r5, r6
   3c224:	bhi	3c1e8 <flatcc_json_printer_int8_vector_field@@Base+0x380>
   3c228:	mov	r1, #32
   3c22c:	mov	r2, r5
   3c230:	bl	14ef0 <memset@plt>
   3c234:	ldr	r0, [r4, #20]
   3c238:	add	r0, r0, r5
   3c23c:	str	r0, [r4, #20]
   3c240:	add	r1, r0, #1
   3c244:	str	r1, [r4, #20]
   3c248:	mov	r1, #93	; 0x5d
   3c24c:	strb	r1, [r0]
   3c250:	sub	sp, fp, #28
   3c254:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003c258 <flatcc_json_printer_int16_vector_field@@Base>:
   3c258:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3c25c:	add	fp, sp, #28
   3c260:	sub	sp, sp, #4
   3c264:	mov	r4, r0
   3c268:	mov	r0, #4
   3c26c:	add	r0, r0, r2, lsl #1
   3c270:	ldr	r2, [r1, #8]
   3c274:	cmp	r0, r2
   3c278:	bge	3c640 <flatcc_json_printer_int16_vector_field@@Base+0x3e8>
   3c27c:	ldr	r2, [r1, #4]
   3c280:	add	r0, r2, r0
   3c284:	ldrh	r0, [r0]
   3c288:	cmp	r0, #0
   3c28c:	ldrne	r2, [r1]
   3c290:	addsne	r8, r2, r0
   3c294:	beq	3c640 <flatcc_json_printer_int16_vector_field@@Base+0x3e8>
   3c298:	ldr	r0, [r1, #16]
   3c29c:	ldr	r2, [fp, #8]
   3c2a0:	add	r7, r0, #1
   3c2a4:	cmp	r0, #0
   3c2a8:	str	r7, [r1, #16]
   3c2ac:	ldrne	r0, [r4, #20]
   3c2b0:	addne	r1, r0, #1
   3c2b4:	strne	r1, [r4, #20]
   3c2b8:	movne	r1, #44	; 0x2c
   3c2bc:	strbne	r1, [r0]
   3c2c0:	mov	r1, r3
   3c2c4:	ldr	r0, [r8]
   3c2c8:	ldr	r7, [r8, r0]!
   3c2cc:	mov	r0, r4
   3c2d0:	bl	38c54 <flatcc_json_printer_string_field@@Base+0x8c>
   3c2d4:	ldr	r1, [r4, #32]
   3c2d8:	ldr	r0, [r4, #20]
   3c2dc:	cmp	r7, #0
   3c2e0:	add	r1, r1, #1
   3c2e4:	str	r1, [r4, #32]
   3c2e8:	add	r1, r0, #1
   3c2ec:	str	r1, [r4, #20]
   3c2f0:	mov	r1, #91	; 0x5b
   3c2f4:	strb	r1, [r0]
   3c2f8:	beq	3c564 <flatcc_json_printer_int16_vector_field@@Base+0x30c>
   3c2fc:	ldrb	r0, [r4, #25]
   3c300:	ldr	r1, [r4, #20]
   3c304:	cmp	r0, #0
   3c308:	beq	3c3c4 <flatcc_json_printer_int16_vector_field@@Base+0x16c>
   3c30c:	add	r0, r1, #1
   3c310:	str	r0, [r4, #20]
   3c314:	mov	r0, #10
   3c318:	strb	r0, [r1]
   3c31c:	ldr	r0, [r4, #20]
   3c320:	ldrb	r2, [r4, #25]
   3c324:	ldr	r3, [r4, #32]
   3c328:	ldr	r1, [r4, #16]
   3c32c:	mla	r6, r3, r2, r0
   3c330:	mul	r5, r3, r2
   3c334:	cmp	r6, r1
   3c338:	bls	3c3a8 <flatcc_json_printer_int16_vector_field@@Base+0x150>
   3c33c:	cmp	r0, r1
   3c340:	bcc	3c35c <flatcc_json_printer_int16_vector_field@@Base+0x104>
   3c344:	ldr	r2, [r4, #44]	; 0x2c
   3c348:	mov	r0, r4
   3c34c:	mov	r1, #0
   3c350:	blx	r2
   3c354:	ldr	r1, [r4, #16]
   3c358:	ldr	r0, [r4, #20]
   3c35c:	sub	r6, r1, r0
   3c360:	cmp	r6, r5
   3c364:	bcs	3c3a8 <flatcc_json_printer_int16_vector_field@@Base+0x150>
   3c368:	mov	r1, #32
   3c36c:	mov	r2, r6
   3c370:	bl	14ef0 <memset@plt>
   3c374:	ldr	r0, [r4, #20]
   3c378:	ldr	r2, [r4, #44]	; 0x2c
   3c37c:	mov	r1, #0
   3c380:	add	r0, r0, r6
   3c384:	str	r0, [r4, #20]
   3c388:	mov	r0, r4
   3c38c:	blx	r2
   3c390:	ldr	r1, [r4, #16]
   3c394:	ldr	r0, [r4, #20]
   3c398:	sub	r5, r5, r6
   3c39c:	sub	r6, r1, r0
   3c3a0:	cmp	r5, r6
   3c3a4:	bhi	3c368 <flatcc_json_printer_int16_vector_field@@Base+0x110>
   3c3a8:	mov	r1, #32
   3c3ac:	mov	r2, r5
   3c3b0:	bl	14ef0 <memset@plt>
   3c3b4:	ldr	r0, [r4, #20]
   3c3b8:	add	r1, r0, r5
   3c3bc:	str	r1, [r4, #20]
   3c3c0:	b	3c3e4 <flatcc_json_printer_int16_vector_field@@Base+0x18c>
   3c3c4:	ldr	r0, [r4, #16]
   3c3c8:	cmp	r1, r0
   3c3cc:	bcc	3c3e4 <flatcc_json_printer_int16_vector_field@@Base+0x18c>
   3c3d0:	ldr	r2, [r4, #44]	; 0x2c
   3c3d4:	mov	r0, r4
   3c3d8:	mov	r1, #0
   3c3dc:	blx	r2
   3c3e0:	ldr	r1, [r4, #20]
   3c3e4:	ldrh	r0, [r8, #4]
   3c3e8:	lsr	r5, r0, #15
   3c3ec:	sxth	r0, r0
   3c3f0:	cmn	r0, #1
   3c3f4:	rsble	r0, r0, #0
   3c3f8:	movle	r2, #45	; 0x2d
   3c3fc:	strble	r2, [r1], #1
   3c400:	uxth	r0, r0
   3c404:	bl	37e84 <flatcc_json_printer_uint16@@Base+0x2c>
   3c408:	ldr	r1, [r4, #20]
   3c40c:	add	r0, r0, r5
   3c410:	subs	r9, r7, #1
   3c414:	add	r0, r1, r0
   3c418:	str	r0, [r4, #20]
   3c41c:	beq	3c564 <flatcc_json_printer_int16_vector_field@@Base+0x30c>
   3c420:	ldr	r0, [r4, #20]
   3c424:	add	r7, r8, #6
   3c428:	mov	r8, #44	; 0x2c
   3c42c:	mov	sl, #10
   3c430:	add	r1, r0, #1
   3c434:	str	r1, [r4, #20]
   3c438:	strb	r8, [r0]
   3c43c:	ldrb	r0, [r4, #25]
   3c440:	ldr	r1, [r4, #20]
   3c444:	cmp	r0, #0
   3c448:	beq	3c500 <flatcc_json_printer_int16_vector_field@@Base+0x2a8>
   3c44c:	add	r0, r1, #1
   3c450:	str	r0, [r4, #20]
   3c454:	strb	sl, [r1]
   3c458:	ldr	r0, [r4, #20]
   3c45c:	ldrb	r2, [r4, #25]
   3c460:	ldr	r3, [r4, #32]
   3c464:	ldr	r1, [r4, #16]
   3c468:	mla	r6, r3, r2, r0
   3c46c:	mul	r5, r3, r2
   3c470:	cmp	r6, r1
   3c474:	bls	3c4e4 <flatcc_json_printer_int16_vector_field@@Base+0x28c>
   3c478:	cmp	r0, r1
   3c47c:	bcc	3c498 <flatcc_json_printer_int16_vector_field@@Base+0x240>
   3c480:	ldr	r2, [r4, #44]	; 0x2c
   3c484:	mov	r0, r4
   3c488:	mov	r1, #0
   3c48c:	blx	r2
   3c490:	ldr	r1, [r4, #16]
   3c494:	ldr	r0, [r4, #20]
   3c498:	sub	r6, r1, r0
   3c49c:	cmp	r6, r5
   3c4a0:	bcs	3c4e4 <flatcc_json_printer_int16_vector_field@@Base+0x28c>
   3c4a4:	mov	r1, #32
   3c4a8:	mov	r2, r6
   3c4ac:	bl	14ef0 <memset@plt>
   3c4b0:	ldr	r0, [r4, #20]
   3c4b4:	ldr	r2, [r4, #44]	; 0x2c
   3c4b8:	mov	r1, #0
   3c4bc:	add	r0, r0, r6
   3c4c0:	str	r0, [r4, #20]
   3c4c4:	mov	r0, r4
   3c4c8:	blx	r2
   3c4cc:	ldr	r1, [r4, #16]
   3c4d0:	ldr	r0, [r4, #20]
   3c4d4:	sub	r5, r5, r6
   3c4d8:	sub	r6, r1, r0
   3c4dc:	cmp	r5, r6
   3c4e0:	bhi	3c4a4 <flatcc_json_printer_int16_vector_field@@Base+0x24c>
   3c4e4:	mov	r1, #32
   3c4e8:	mov	r2, r5
   3c4ec:	bl	14ef0 <memset@plt>
   3c4f0:	ldr	r0, [r4, #20]
   3c4f4:	add	r1, r0, r5
   3c4f8:	str	r1, [r4, #20]
   3c4fc:	b	3c520 <flatcc_json_printer_int16_vector_field@@Base+0x2c8>
   3c500:	ldr	r0, [r4, #16]
   3c504:	cmp	r1, r0
   3c508:	bcc	3c520 <flatcc_json_printer_int16_vector_field@@Base+0x2c8>
   3c50c:	ldr	r2, [r4, #44]	; 0x2c
   3c510:	mov	r0, r4
   3c514:	mov	r1, #0
   3c518:	blx	r2
   3c51c:	ldr	r1, [r4, #20]
   3c520:	ldrh	r0, [r7]
   3c524:	sub	r9, r9, #1
   3c528:	lsr	r5, r0, #15
   3c52c:	sxth	r0, r0
   3c530:	cmn	r0, #1
   3c534:	rsble	r0, r0, #0
   3c538:	movle	r2, #45	; 0x2d
   3c53c:	strble	r2, [r1], #1
   3c540:	uxth	r0, r0
   3c544:	bl	37e84 <flatcc_json_printer_uint16@@Base+0x2c>
   3c548:	ldr	r1, [r4, #20]
   3c54c:	add	r0, r0, r5
   3c550:	add	r7, r7, #2
   3c554:	cmp	r9, #0
   3c558:	add	r0, r1, r0
   3c55c:	str	r0, [r4, #20]
   3c560:	bne	3c430 <flatcc_json_printer_int16_vector_field@@Base+0x1d8>
   3c564:	ldrb	r1, [r4, #25]
   3c568:	ldr	r0, [r4, #20]
   3c56c:	cmp	r1, #0
   3c570:	beq	3c630 <flatcc_json_printer_int16_vector_field@@Base+0x3d8>
   3c574:	add	r1, r0, #1
   3c578:	str	r1, [r4, #20]
   3c57c:	mov	r1, #10
   3c580:	strb	r1, [r0]
   3c584:	ldr	r0, [r4, #32]
   3c588:	sub	r2, r0, #1
   3c58c:	str	r2, [r4, #32]
   3c590:	ldrb	r3, [r4, #25]
   3c594:	ldr	r0, [r4, #20]
   3c598:	ldr	r1, [r4, #16]
   3c59c:	mla	r7, r2, r3, r0
   3c5a0:	mul	r5, r2, r3
   3c5a4:	cmp	r7, r1
   3c5a8:	bls	3c618 <flatcc_json_printer_int16_vector_field@@Base+0x3c0>
   3c5ac:	cmp	r0, r1
   3c5b0:	bcc	3c5cc <flatcc_json_printer_int16_vector_field@@Base+0x374>
   3c5b4:	ldr	r2, [r4, #44]	; 0x2c
   3c5b8:	mov	r0, r4
   3c5bc:	mov	r1, #0
   3c5c0:	blx	r2
   3c5c4:	ldr	r1, [r4, #16]
   3c5c8:	ldr	r0, [r4, #20]
   3c5cc:	sub	r6, r1, r0
   3c5d0:	cmp	r6, r5
   3c5d4:	bcs	3c618 <flatcc_json_printer_int16_vector_field@@Base+0x3c0>
   3c5d8:	mov	r1, #32
   3c5dc:	mov	r2, r6
   3c5e0:	bl	14ef0 <memset@plt>
   3c5e4:	ldr	r0, [r4, #20]
   3c5e8:	ldr	r2, [r4, #44]	; 0x2c
   3c5ec:	mov	r1, #0
   3c5f0:	add	r0, r0, r6
   3c5f4:	str	r0, [r4, #20]
   3c5f8:	mov	r0, r4
   3c5fc:	blx	r2
   3c600:	ldr	r1, [r4, #16]
   3c604:	ldr	r0, [r4, #20]
   3c608:	sub	r5, r5, r6
   3c60c:	sub	r6, r1, r0
   3c610:	cmp	r5, r6
   3c614:	bhi	3c5d8 <flatcc_json_printer_int16_vector_field@@Base+0x380>
   3c618:	mov	r1, #32
   3c61c:	mov	r2, r5
   3c620:	bl	14ef0 <memset@plt>
   3c624:	ldr	r0, [r4, #20]
   3c628:	add	r0, r0, r5
   3c62c:	str	r0, [r4, #20]
   3c630:	add	r1, r0, #1
   3c634:	str	r1, [r4, #20]
   3c638:	mov	r1, #93	; 0x5d
   3c63c:	strb	r1, [r0]
   3c640:	sub	sp, fp, #28
   3c644:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003c648 <flatcc_json_printer_int32_vector_field@@Base>:
   3c648:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3c64c:	add	fp, sp, #28
   3c650:	sub	sp, sp, #4
   3c654:	mov	r4, r0
   3c658:	mov	r0, #4
   3c65c:	add	r0, r0, r2, lsl #1
   3c660:	ldr	r2, [r1, #8]
   3c664:	cmp	r0, r2
   3c668:	bge	3ca20 <flatcc_json_printer_int32_vector_field@@Base+0x3d8>
   3c66c:	ldr	r2, [r1, #4]
   3c670:	add	r0, r2, r0
   3c674:	ldrh	r0, [r0]
   3c678:	cmp	r0, #0
   3c67c:	ldrne	r2, [r1]
   3c680:	addsne	r8, r2, r0
   3c684:	beq	3ca20 <flatcc_json_printer_int32_vector_field@@Base+0x3d8>
   3c688:	ldr	r0, [r1, #16]
   3c68c:	ldr	r2, [fp, #8]
   3c690:	add	r7, r0, #1
   3c694:	cmp	r0, #0
   3c698:	str	r7, [r1, #16]
   3c69c:	ldrne	r0, [r4, #20]
   3c6a0:	addne	r1, r0, #1
   3c6a4:	strne	r1, [r4, #20]
   3c6a8:	movne	r1, #44	; 0x2c
   3c6ac:	strbne	r1, [r0]
   3c6b0:	mov	r1, r3
   3c6b4:	ldr	r0, [r8]
   3c6b8:	ldr	r7, [r8, r0]!
   3c6bc:	mov	r0, r4
   3c6c0:	bl	38c54 <flatcc_json_printer_string_field@@Base+0x8c>
   3c6c4:	ldr	r1, [r4, #32]
   3c6c8:	ldr	r0, [r4, #20]
   3c6cc:	cmp	r7, #0
   3c6d0:	add	r1, r1, #1
   3c6d4:	str	r1, [r4, #32]
   3c6d8:	add	r1, r0, #1
   3c6dc:	str	r1, [r4, #20]
   3c6e0:	mov	r1, #91	; 0x5b
   3c6e4:	strb	r1, [r0]
   3c6e8:	beq	3c944 <flatcc_json_printer_int32_vector_field@@Base+0x2fc>
   3c6ec:	ldrb	r0, [r4, #25]
   3c6f0:	ldr	r1, [r4, #20]
   3c6f4:	cmp	r0, #0
   3c6f8:	beq	3c7b4 <flatcc_json_printer_int32_vector_field@@Base+0x16c>
   3c6fc:	add	r0, r1, #1
   3c700:	str	r0, [r4, #20]
   3c704:	mov	r0, #10
   3c708:	strb	r0, [r1]
   3c70c:	ldr	r0, [r4, #20]
   3c710:	ldrb	r2, [r4, #25]
   3c714:	ldr	r3, [r4, #32]
   3c718:	ldr	r1, [r4, #16]
   3c71c:	mla	r6, r3, r2, r0
   3c720:	mul	r5, r3, r2
   3c724:	cmp	r6, r1
   3c728:	bls	3c798 <flatcc_json_printer_int32_vector_field@@Base+0x150>
   3c72c:	cmp	r0, r1
   3c730:	bcc	3c74c <flatcc_json_printer_int32_vector_field@@Base+0x104>
   3c734:	ldr	r2, [r4, #44]	; 0x2c
   3c738:	mov	r0, r4
   3c73c:	mov	r1, #0
   3c740:	blx	r2
   3c744:	ldr	r1, [r4, #16]
   3c748:	ldr	r0, [r4, #20]
   3c74c:	sub	r6, r1, r0
   3c750:	cmp	r6, r5
   3c754:	bcs	3c798 <flatcc_json_printer_int32_vector_field@@Base+0x150>
   3c758:	mov	r1, #32
   3c75c:	mov	r2, r6
   3c760:	bl	14ef0 <memset@plt>
   3c764:	ldr	r0, [r4, #20]
   3c768:	ldr	r2, [r4, #44]	; 0x2c
   3c76c:	mov	r1, #0
   3c770:	add	r0, r0, r6
   3c774:	str	r0, [r4, #20]
   3c778:	mov	r0, r4
   3c77c:	blx	r2
   3c780:	ldr	r1, [r4, #16]
   3c784:	ldr	r0, [r4, #20]
   3c788:	sub	r5, r5, r6
   3c78c:	sub	r6, r1, r0
   3c790:	cmp	r5, r6
   3c794:	bhi	3c758 <flatcc_json_printer_int32_vector_field@@Base+0x110>
   3c798:	mov	r1, #32
   3c79c:	mov	r2, r5
   3c7a0:	bl	14ef0 <memset@plt>
   3c7a4:	ldr	r0, [r4, #20]
   3c7a8:	add	r1, r0, r5
   3c7ac:	str	r1, [r4, #20]
   3c7b0:	b	3c7d4 <flatcc_json_printer_int32_vector_field@@Base+0x18c>
   3c7b4:	ldr	r0, [r4, #16]
   3c7b8:	cmp	r1, r0
   3c7bc:	bcc	3c7d4 <flatcc_json_printer_int32_vector_field@@Base+0x18c>
   3c7c0:	ldr	r2, [r4, #44]	; 0x2c
   3c7c4:	mov	r0, r4
   3c7c8:	mov	r1, #0
   3c7cc:	blx	r2
   3c7d0:	ldr	r1, [r4, #20]
   3c7d4:	ldr	r0, [r8, #4]
   3c7d8:	cmn	r0, #1
   3c7dc:	lsr	r5, r0, #31
   3c7e0:	movle	r2, #45	; 0x2d
   3c7e4:	rsble	r0, r0, #0
   3c7e8:	strble	r2, [r1], #1
   3c7ec:	bl	38010 <flatcc_json_printer_uint32@@Base+0x2c>
   3c7f0:	ldr	r1, [r4, #20]
   3c7f4:	add	r0, r0, r5
   3c7f8:	subs	r9, r7, #1
   3c7fc:	add	r0, r1, r0
   3c800:	str	r0, [r4, #20]
   3c804:	beq	3c944 <flatcc_json_printer_int32_vector_field@@Base+0x2fc>
   3c808:	ldr	r0, [r4, #20]
   3c80c:	add	r7, r8, #8
   3c810:	mov	r8, #44	; 0x2c
   3c814:	mov	sl, #10
   3c818:	add	r1, r0, #1
   3c81c:	str	r1, [r4, #20]
   3c820:	strb	r8, [r0]
   3c824:	ldrb	r0, [r4, #25]
   3c828:	ldr	r1, [r4, #20]
   3c82c:	cmp	r0, #0
   3c830:	beq	3c8e8 <flatcc_json_printer_int32_vector_field@@Base+0x2a0>
   3c834:	add	r0, r1, #1
   3c838:	str	r0, [r4, #20]
   3c83c:	strb	sl, [r1]
   3c840:	ldr	r0, [r4, #20]
   3c844:	ldrb	r2, [r4, #25]
   3c848:	ldr	r3, [r4, #32]
   3c84c:	ldr	r1, [r4, #16]
   3c850:	mla	r6, r3, r2, r0
   3c854:	mul	r5, r3, r2
   3c858:	cmp	r6, r1
   3c85c:	bls	3c8cc <flatcc_json_printer_int32_vector_field@@Base+0x284>
   3c860:	cmp	r0, r1
   3c864:	bcc	3c880 <flatcc_json_printer_int32_vector_field@@Base+0x238>
   3c868:	ldr	r2, [r4, #44]	; 0x2c
   3c86c:	mov	r0, r4
   3c870:	mov	r1, #0
   3c874:	blx	r2
   3c878:	ldr	r1, [r4, #16]
   3c87c:	ldr	r0, [r4, #20]
   3c880:	sub	r6, r1, r0
   3c884:	cmp	r6, r5
   3c888:	bcs	3c8cc <flatcc_json_printer_int32_vector_field@@Base+0x284>
   3c88c:	mov	r1, #32
   3c890:	mov	r2, r6
   3c894:	bl	14ef0 <memset@plt>
   3c898:	ldr	r0, [r4, #20]
   3c89c:	ldr	r2, [r4, #44]	; 0x2c
   3c8a0:	mov	r1, #0
   3c8a4:	add	r0, r0, r6
   3c8a8:	str	r0, [r4, #20]
   3c8ac:	mov	r0, r4
   3c8b0:	blx	r2
   3c8b4:	ldr	r1, [r4, #16]
   3c8b8:	ldr	r0, [r4, #20]
   3c8bc:	sub	r5, r5, r6
   3c8c0:	sub	r6, r1, r0
   3c8c4:	cmp	r5, r6
   3c8c8:	bhi	3c88c <flatcc_json_printer_int32_vector_field@@Base+0x244>
   3c8cc:	mov	r1, #32
   3c8d0:	mov	r2, r5
   3c8d4:	bl	14ef0 <memset@plt>
   3c8d8:	ldr	r0, [r4, #20]
   3c8dc:	add	r1, r0, r5
   3c8e0:	str	r1, [r4, #20]
   3c8e4:	b	3c908 <flatcc_json_printer_int32_vector_field@@Base+0x2c0>
   3c8e8:	ldr	r0, [r4, #16]
   3c8ec:	cmp	r1, r0
   3c8f0:	bcc	3c908 <flatcc_json_printer_int32_vector_field@@Base+0x2c0>
   3c8f4:	ldr	r2, [r4, #44]	; 0x2c
   3c8f8:	mov	r0, r4
   3c8fc:	mov	r1, #0
   3c900:	blx	r2
   3c904:	ldr	r1, [r4, #20]
   3c908:	ldr	r0, [r7]
   3c90c:	sub	r9, r9, #1
   3c910:	cmn	r0, #1
   3c914:	lsr	r5, r0, #31
   3c918:	movle	r2, #45	; 0x2d
   3c91c:	rsble	r0, r0, #0
   3c920:	strble	r2, [r1], #1
   3c924:	bl	38010 <flatcc_json_printer_uint32@@Base+0x2c>
   3c928:	ldr	r1, [r4, #20]
   3c92c:	add	r0, r0, r5
   3c930:	add	r7, r7, #4
   3c934:	cmp	r9, #0
   3c938:	add	r0, r1, r0
   3c93c:	str	r0, [r4, #20]
   3c940:	bne	3c818 <flatcc_json_printer_int32_vector_field@@Base+0x1d0>
   3c944:	ldrb	r1, [r4, #25]
   3c948:	ldr	r0, [r4, #20]
   3c94c:	cmp	r1, #0
   3c950:	beq	3ca10 <flatcc_json_printer_int32_vector_field@@Base+0x3c8>
   3c954:	add	r1, r0, #1
   3c958:	str	r1, [r4, #20]
   3c95c:	mov	r1, #10
   3c960:	strb	r1, [r0]
   3c964:	ldr	r0, [r4, #32]
   3c968:	sub	r2, r0, #1
   3c96c:	str	r2, [r4, #32]
   3c970:	ldrb	r3, [r4, #25]
   3c974:	ldr	r0, [r4, #20]
   3c978:	ldr	r1, [r4, #16]
   3c97c:	mla	r7, r2, r3, r0
   3c980:	mul	r5, r2, r3
   3c984:	cmp	r7, r1
   3c988:	bls	3c9f8 <flatcc_json_printer_int32_vector_field@@Base+0x3b0>
   3c98c:	cmp	r0, r1
   3c990:	bcc	3c9ac <flatcc_json_printer_int32_vector_field@@Base+0x364>
   3c994:	ldr	r2, [r4, #44]	; 0x2c
   3c998:	mov	r0, r4
   3c99c:	mov	r1, #0
   3c9a0:	blx	r2
   3c9a4:	ldr	r1, [r4, #16]
   3c9a8:	ldr	r0, [r4, #20]
   3c9ac:	sub	r6, r1, r0
   3c9b0:	cmp	r6, r5
   3c9b4:	bcs	3c9f8 <flatcc_json_printer_int32_vector_field@@Base+0x3b0>
   3c9b8:	mov	r1, #32
   3c9bc:	mov	r2, r6
   3c9c0:	bl	14ef0 <memset@plt>
   3c9c4:	ldr	r0, [r4, #20]
   3c9c8:	ldr	r2, [r4, #44]	; 0x2c
   3c9cc:	mov	r1, #0
   3c9d0:	add	r0, r0, r6
   3c9d4:	str	r0, [r4, #20]
   3c9d8:	mov	r0, r4
   3c9dc:	blx	r2
   3c9e0:	ldr	r1, [r4, #16]
   3c9e4:	ldr	r0, [r4, #20]
   3c9e8:	sub	r5, r5, r6
   3c9ec:	sub	r6, r1, r0
   3c9f0:	cmp	r5, r6
   3c9f4:	bhi	3c9b8 <flatcc_json_printer_int32_vector_field@@Base+0x370>
   3c9f8:	mov	r1, #32
   3c9fc:	mov	r2, r5
   3ca00:	bl	14ef0 <memset@plt>
   3ca04:	ldr	r0, [r4, #20]
   3ca08:	add	r0, r0, r5
   3ca0c:	str	r0, [r4, #20]
   3ca10:	add	r1, r0, #1
   3ca14:	str	r1, [r4, #20]
   3ca18:	mov	r1, #93	; 0x5d
   3ca1c:	strb	r1, [r0]
   3ca20:	sub	sp, fp, #28
   3ca24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003ca28 <flatcc_json_printer_int64_vector_field@@Base>:
   3ca28:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3ca2c:	add	fp, sp, #28
   3ca30:	sub	sp, sp, #4
   3ca34:	mov	r4, r0
   3ca38:	mov	r0, #4
   3ca3c:	add	r0, r0, r2, lsl #1
   3ca40:	ldr	r2, [r1, #8]
   3ca44:	cmp	r0, r2
   3ca48:	bge	3ce10 <flatcc_json_printer_int64_vector_field@@Base+0x3e8>
   3ca4c:	ldr	r2, [r1, #4]
   3ca50:	add	r0, r2, r0
   3ca54:	ldrh	r0, [r0]
   3ca58:	cmp	r0, #0
   3ca5c:	ldrne	r2, [r1]
   3ca60:	addsne	r8, r2, r0
   3ca64:	beq	3ce10 <flatcc_json_printer_int64_vector_field@@Base+0x3e8>
   3ca68:	ldr	r0, [r1, #16]
   3ca6c:	ldr	r2, [fp, #8]
   3ca70:	add	r7, r0, #1
   3ca74:	cmp	r0, #0
   3ca78:	str	r7, [r1, #16]
   3ca7c:	ldrne	r0, [r4, #20]
   3ca80:	addne	r1, r0, #1
   3ca84:	strne	r1, [r4, #20]
   3ca88:	movne	r1, #44	; 0x2c
   3ca8c:	strbne	r1, [r0]
   3ca90:	mov	r1, r3
   3ca94:	ldr	r0, [r8]
   3ca98:	ldr	r7, [r8, r0]!
   3ca9c:	mov	r0, r4
   3caa0:	bl	38c54 <flatcc_json_printer_string_field@@Base+0x8c>
   3caa4:	ldr	r1, [r4, #32]
   3caa8:	ldr	r0, [r4, #20]
   3caac:	cmp	r7, #0
   3cab0:	add	r1, r1, #1
   3cab4:	str	r1, [r4, #32]
   3cab8:	add	r1, r0, #1
   3cabc:	str	r1, [r4, #20]
   3cac0:	mov	r1, #91	; 0x5b
   3cac4:	strb	r1, [r0]
   3cac8:	beq	3cd34 <flatcc_json_printer_int64_vector_field@@Base+0x30c>
   3cacc:	ldrb	r0, [r4, #25]
   3cad0:	ldr	r2, [r4, #20]
   3cad4:	cmp	r0, #0
   3cad8:	beq	3cb94 <flatcc_json_printer_int64_vector_field@@Base+0x16c>
   3cadc:	add	r0, r2, #1
   3cae0:	str	r0, [r4, #20]
   3cae4:	mov	r0, #10
   3cae8:	strb	r0, [r2]
   3caec:	ldr	r0, [r4, #20]
   3caf0:	ldrb	r2, [r4, #25]
   3caf4:	ldr	r3, [r4, #32]
   3caf8:	ldr	r1, [r4, #16]
   3cafc:	mla	r6, r3, r2, r0
   3cb00:	mul	r5, r3, r2
   3cb04:	cmp	r6, r1
   3cb08:	bls	3cb78 <flatcc_json_printer_int64_vector_field@@Base+0x150>
   3cb0c:	cmp	r0, r1
   3cb10:	bcc	3cb2c <flatcc_json_printer_int64_vector_field@@Base+0x104>
   3cb14:	ldr	r2, [r4, #44]	; 0x2c
   3cb18:	mov	r0, r4
   3cb1c:	mov	r1, #0
   3cb20:	blx	r2
   3cb24:	ldr	r1, [r4, #16]
   3cb28:	ldr	r0, [r4, #20]
   3cb2c:	sub	r6, r1, r0
   3cb30:	cmp	r6, r5
   3cb34:	bcs	3cb78 <flatcc_json_printer_int64_vector_field@@Base+0x150>
   3cb38:	mov	r1, #32
   3cb3c:	mov	r2, r6
   3cb40:	bl	14ef0 <memset@plt>
   3cb44:	ldr	r0, [r4, #20]
   3cb48:	ldr	r2, [r4, #44]	; 0x2c
   3cb4c:	mov	r1, #0
   3cb50:	add	r0, r0, r6
   3cb54:	str	r0, [r4, #20]
   3cb58:	mov	r0, r4
   3cb5c:	blx	r2
   3cb60:	ldr	r1, [r4, #16]
   3cb64:	ldr	r0, [r4, #20]
   3cb68:	sub	r5, r5, r6
   3cb6c:	sub	r6, r1, r0
   3cb70:	cmp	r5, r6
   3cb74:	bhi	3cb38 <flatcc_json_printer_int64_vector_field@@Base+0x110>
   3cb78:	mov	r1, #32
   3cb7c:	mov	r2, r5
   3cb80:	bl	14ef0 <memset@plt>
   3cb84:	ldr	r0, [r4, #20]
   3cb88:	add	r2, r0, r5
   3cb8c:	str	r2, [r4, #20]
   3cb90:	b	3cbb4 <flatcc_json_printer_int64_vector_field@@Base+0x18c>
   3cb94:	ldr	r0, [r4, #16]
   3cb98:	cmp	r2, r0
   3cb9c:	bcc	3cbb4 <flatcc_json_printer_int64_vector_field@@Base+0x18c>
   3cba0:	ldr	r2, [r4, #44]	; 0x2c
   3cba4:	mov	r0, r4
   3cba8:	mov	r1, #0
   3cbac:	blx	r2
   3cbb0:	ldr	r2, [r4, #20]
   3cbb4:	ldrd	r0, [r8, #4]
   3cbb8:	lsr	r5, r1, #31
   3cbbc:	cmn	r1, #1
   3cbc0:	bgt	3cbd4 <flatcc_json_printer_int64_vector_field@@Base+0x1ac>
   3cbc4:	mov	r3, #45	; 0x2d
   3cbc8:	rsbs	r0, r0, #0
   3cbcc:	strb	r3, [r2], #1
   3cbd0:	rsc	r1, r1, #0
   3cbd4:	bl	3834c <flatcc_json_printer_uint64@@Base+0x30>
   3cbd8:	ldr	r1, [r4, #20]
   3cbdc:	add	r0, r0, r5
   3cbe0:	subs	r9, r7, #1
   3cbe4:	add	r0, r1, r0
   3cbe8:	str	r0, [r4, #20]
   3cbec:	beq	3cd34 <flatcc_json_printer_int64_vector_field@@Base+0x30c>
   3cbf0:	ldr	r0, [r4, #20]
   3cbf4:	add	r7, r8, #12
   3cbf8:	mov	r8, #44	; 0x2c
   3cbfc:	mov	sl, #10
   3cc00:	add	r1, r0, #1
   3cc04:	str	r1, [r4, #20]
   3cc08:	strb	r8, [r0]
   3cc0c:	ldrb	r0, [r4, #25]
   3cc10:	ldr	r2, [r4, #20]
   3cc14:	cmp	r0, #0
   3cc18:	beq	3ccd0 <flatcc_json_printer_int64_vector_field@@Base+0x2a8>
   3cc1c:	add	r0, r2, #1
   3cc20:	str	r0, [r4, #20]
   3cc24:	strb	sl, [r2]
   3cc28:	ldr	r0, [r4, #20]
   3cc2c:	ldrb	r2, [r4, #25]
   3cc30:	ldr	r3, [r4, #32]
   3cc34:	ldr	r1, [r4, #16]
   3cc38:	mla	r6, r3, r2, r0
   3cc3c:	mul	r5, r3, r2
   3cc40:	cmp	r6, r1
   3cc44:	bls	3ccb4 <flatcc_json_printer_int64_vector_field@@Base+0x28c>
   3cc48:	cmp	r0, r1
   3cc4c:	bcc	3cc68 <flatcc_json_printer_int64_vector_field@@Base+0x240>
   3cc50:	ldr	r2, [r4, #44]	; 0x2c
   3cc54:	mov	r0, r4
   3cc58:	mov	r1, #0
   3cc5c:	blx	r2
   3cc60:	ldr	r1, [r4, #16]
   3cc64:	ldr	r0, [r4, #20]
   3cc68:	sub	r6, r1, r0
   3cc6c:	cmp	r6, r5
   3cc70:	bcs	3ccb4 <flatcc_json_printer_int64_vector_field@@Base+0x28c>
   3cc74:	mov	r1, #32
   3cc78:	mov	r2, r6
   3cc7c:	bl	14ef0 <memset@plt>
   3cc80:	ldr	r0, [r4, #20]
   3cc84:	ldr	r2, [r4, #44]	; 0x2c
   3cc88:	mov	r1, #0
   3cc8c:	add	r0, r0, r6
   3cc90:	str	r0, [r4, #20]
   3cc94:	mov	r0, r4
   3cc98:	blx	r2
   3cc9c:	ldr	r1, [r4, #16]
   3cca0:	ldr	r0, [r4, #20]
   3cca4:	sub	r5, r5, r6
   3cca8:	sub	r6, r1, r0
   3ccac:	cmp	r5, r6
   3ccb0:	bhi	3cc74 <flatcc_json_printer_int64_vector_field@@Base+0x24c>
   3ccb4:	mov	r1, #32
   3ccb8:	mov	r2, r5
   3ccbc:	bl	14ef0 <memset@plt>
   3ccc0:	ldr	r0, [r4, #20]
   3ccc4:	add	r2, r0, r5
   3ccc8:	str	r2, [r4, #20]
   3cccc:	b	3ccf0 <flatcc_json_printer_int64_vector_field@@Base+0x2c8>
   3ccd0:	ldr	r0, [r4, #16]
   3ccd4:	cmp	r2, r0
   3ccd8:	bcc	3ccf0 <flatcc_json_printer_int64_vector_field@@Base+0x2c8>
   3ccdc:	ldr	r2, [r4, #44]	; 0x2c
   3cce0:	mov	r0, r4
   3cce4:	mov	r1, #0
   3cce8:	blx	r2
   3ccec:	ldr	r2, [r4, #20]
   3ccf0:	ldrd	r0, [r7]
   3ccf4:	sub	r9, r9, #1
   3ccf8:	lsr	r5, r1, #31
   3ccfc:	cmn	r1, #1
   3cd00:	bgt	3cd14 <flatcc_json_printer_int64_vector_field@@Base+0x2ec>
   3cd04:	mov	r3, #45	; 0x2d
   3cd08:	rsbs	r0, r0, #0
   3cd0c:	strb	r3, [r2], #1
   3cd10:	rsc	r1, r1, #0
   3cd14:	bl	3834c <flatcc_json_printer_uint64@@Base+0x30>
   3cd18:	ldr	r1, [r4, #20]
   3cd1c:	add	r0, r0, r5
   3cd20:	add	r7, r7, #8
   3cd24:	cmp	r9, #0
   3cd28:	add	r0, r1, r0
   3cd2c:	str	r0, [r4, #20]
   3cd30:	bne	3cc00 <flatcc_json_printer_int64_vector_field@@Base+0x1d8>
   3cd34:	ldrb	r1, [r4, #25]
   3cd38:	ldr	r0, [r4, #20]
   3cd3c:	cmp	r1, #0
   3cd40:	beq	3ce00 <flatcc_json_printer_int64_vector_field@@Base+0x3d8>
   3cd44:	add	r1, r0, #1
   3cd48:	str	r1, [r4, #20]
   3cd4c:	mov	r1, #10
   3cd50:	strb	r1, [r0]
   3cd54:	ldr	r0, [r4, #32]
   3cd58:	sub	r2, r0, #1
   3cd5c:	str	r2, [r4, #32]
   3cd60:	ldrb	r3, [r4, #25]
   3cd64:	ldr	r0, [r4, #20]
   3cd68:	ldr	r1, [r4, #16]
   3cd6c:	mla	r7, r2, r3, r0
   3cd70:	mul	r5, r2, r3
   3cd74:	cmp	r7, r1
   3cd78:	bls	3cde8 <flatcc_json_printer_int64_vector_field@@Base+0x3c0>
   3cd7c:	cmp	r0, r1
   3cd80:	bcc	3cd9c <flatcc_json_printer_int64_vector_field@@Base+0x374>
   3cd84:	ldr	r2, [r4, #44]	; 0x2c
   3cd88:	mov	r0, r4
   3cd8c:	mov	r1, #0
   3cd90:	blx	r2
   3cd94:	ldr	r1, [r4, #16]
   3cd98:	ldr	r0, [r4, #20]
   3cd9c:	sub	r6, r1, r0
   3cda0:	cmp	r6, r5
   3cda4:	bcs	3cde8 <flatcc_json_printer_int64_vector_field@@Base+0x3c0>
   3cda8:	mov	r1, #32
   3cdac:	mov	r2, r6
   3cdb0:	bl	14ef0 <memset@plt>
   3cdb4:	ldr	r0, [r4, #20]
   3cdb8:	ldr	r2, [r4, #44]	; 0x2c
   3cdbc:	mov	r1, #0
   3cdc0:	add	r0, r0, r6
   3cdc4:	str	r0, [r4, #20]
   3cdc8:	mov	r0, r4
   3cdcc:	blx	r2
   3cdd0:	ldr	r1, [r4, #16]
   3cdd4:	ldr	r0, [r4, #20]
   3cdd8:	sub	r5, r5, r6
   3cddc:	sub	r6, r1, r0
   3cde0:	cmp	r5, r6
   3cde4:	bhi	3cda8 <flatcc_json_printer_int64_vector_field@@Base+0x380>
   3cde8:	mov	r1, #32
   3cdec:	mov	r2, r5
   3cdf0:	bl	14ef0 <memset@plt>
   3cdf4:	ldr	r0, [r4, #20]
   3cdf8:	add	r0, r0, r5
   3cdfc:	str	r0, [r4, #20]
   3ce00:	add	r1, r0, #1
   3ce04:	str	r1, [r4, #20]
   3ce08:	mov	r1, #93	; 0x5d
   3ce0c:	strb	r1, [r0]
   3ce10:	sub	sp, fp, #28
   3ce14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003ce18 <flatcc_json_printer_bool_vector_field@@Base>:
   3ce18:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3ce1c:	add	fp, sp, #28
   3ce20:	sub	sp, sp, #4
   3ce24:	mov	r4, r0
   3ce28:	mov	r0, #4
   3ce2c:	add	r0, r0, r2, lsl #1
   3ce30:	ldr	r2, [r1, #8]
   3ce34:	cmp	r0, r2
   3ce38:	bge	3d230 <flatcc_json_printer_bool_vector_field@@Base+0x418>
   3ce3c:	ldr	r2, [r1, #4]
   3ce40:	add	r0, r2, r0
   3ce44:	ldrh	r0, [r0]
   3ce48:	cmp	r0, #0
   3ce4c:	ldrne	r2, [r1]
   3ce50:	addsne	r8, r2, r0
   3ce54:	beq	3d230 <flatcc_json_printer_bool_vector_field@@Base+0x418>
   3ce58:	ldr	r0, [r1, #16]
   3ce5c:	ldr	r2, [fp, #8]
   3ce60:	add	r7, r0, #1
   3ce64:	cmp	r0, #0
   3ce68:	str	r7, [r1, #16]
   3ce6c:	ldrne	r0, [r4, #20]
   3ce70:	addne	r1, r0, #1
   3ce74:	strne	r1, [r4, #20]
   3ce78:	movne	r1, #44	; 0x2c
   3ce7c:	strbne	r1, [r0]
   3ce80:	mov	r1, r3
   3ce84:	ldr	r0, [r8]
   3ce88:	ldr	r7, [r8, r0]!
   3ce8c:	mov	r0, r4
   3ce90:	bl	38c54 <flatcc_json_printer_string_field@@Base+0x8c>
   3ce94:	ldr	r1, [r4, #32]
   3ce98:	ldr	r0, [r4, #20]
   3ce9c:	cmp	r7, #0
   3cea0:	add	r1, r1, #1
   3cea4:	str	r1, [r4, #32]
   3cea8:	add	r1, r0, #1
   3ceac:	str	r1, [r4, #20]
   3ceb0:	mov	r1, #91	; 0x5b
   3ceb4:	strb	r1, [r0]
   3ceb8:	beq	3d154 <flatcc_json_printer_bool_vector_field@@Base+0x33c>
   3cebc:	ldrb	r1, [r4, #25]
   3cec0:	ldr	r0, [r4, #20]
   3cec4:	cmp	r1, #0
   3cec8:	beq	3cf84 <flatcc_json_printer_bool_vector_field@@Base+0x16c>
   3cecc:	add	r1, r0, #1
   3ced0:	str	r1, [r4, #20]
   3ced4:	mov	r1, #10
   3ced8:	strb	r1, [r0]
   3cedc:	ldr	r0, [r4, #20]
   3cee0:	ldrb	r2, [r4, #25]
   3cee4:	ldr	r3, [r4, #32]
   3cee8:	ldr	r1, [r4, #16]
   3ceec:	mla	r6, r3, r2, r0
   3cef0:	mul	r5, r3, r2
   3cef4:	cmp	r6, r1
   3cef8:	bls	3cf68 <flatcc_json_printer_bool_vector_field@@Base+0x150>
   3cefc:	cmp	r0, r1
   3cf00:	bcc	3cf1c <flatcc_json_printer_bool_vector_field@@Base+0x104>
   3cf04:	ldr	r2, [r4, #44]	; 0x2c
   3cf08:	mov	r0, r4
   3cf0c:	mov	r1, #0
   3cf10:	blx	r2
   3cf14:	ldr	r1, [r4, #16]
   3cf18:	ldr	r0, [r4, #20]
   3cf1c:	sub	r6, r1, r0
   3cf20:	cmp	r6, r5
   3cf24:	bcs	3cf68 <flatcc_json_printer_bool_vector_field@@Base+0x150>
   3cf28:	mov	r1, #32
   3cf2c:	mov	r2, r6
   3cf30:	bl	14ef0 <memset@plt>
   3cf34:	ldr	r0, [r4, #20]
   3cf38:	ldr	r2, [r4, #44]	; 0x2c
   3cf3c:	mov	r1, #0
   3cf40:	add	r0, r0, r6
   3cf44:	str	r0, [r4, #20]
   3cf48:	mov	r0, r4
   3cf4c:	blx	r2
   3cf50:	ldr	r1, [r4, #16]
   3cf54:	ldr	r0, [r4, #20]
   3cf58:	sub	r5, r5, r6
   3cf5c:	sub	r6, r1, r0
   3cf60:	cmp	r5, r6
   3cf64:	bhi	3cf28 <flatcc_json_printer_bool_vector_field@@Base+0x110>
   3cf68:	mov	r1, #32
   3cf6c:	mov	r2, r5
   3cf70:	bl	14ef0 <memset@plt>
   3cf74:	ldr	r0, [r4, #20]
   3cf78:	add	r0, r0, r5
   3cf7c:	str	r0, [r4, #20]
   3cf80:	b	3cfa4 <flatcc_json_printer_bool_vector_field@@Base+0x18c>
   3cf84:	ldr	r1, [r4, #16]
   3cf88:	cmp	r0, r1
   3cf8c:	bcc	3cfa4 <flatcc_json_printer_bool_vector_field@@Base+0x18c>
   3cf90:	ldr	r2, [r4, #44]	; 0x2c
   3cf94:	mov	r0, r4
   3cf98:	mov	r1, #0
   3cf9c:	blx	r2
   3cfa0:	ldr	r0, [r4, #20]
   3cfa4:	ldrb	r1, [r8, #4]
   3cfa8:	cmp	r1, #0
   3cfac:	beq	3cfcc <flatcc_json_printer_bool_vector_field@@Base+0x1b4>
   3cfb0:	mov	r1, #0
   3cfb4:	strb	r1, [r0, #4]
   3cfb8:	movw	r1, #29300	; 0x7274
   3cfbc:	movt	r1, #25973	; 0x6575
   3cfc0:	str	r1, [r0]
   3cfc4:	mov	r0, #4
   3cfc8:	b	3cfe4 <flatcc_json_printer_bool_vector_field@@Base+0x1cc>
   3cfcc:	mov	r1, #101	; 0x65
   3cfd0:	strh	r1, [r0, #4]
   3cfd4:	movw	r1, #24934	; 0x6166
   3cfd8:	movt	r1, #29548	; 0x736c
   3cfdc:	str	r1, [r0]
   3cfe0:	mov	r0, #5
   3cfe4:	ldr	r1, [r4, #20]
   3cfe8:	subs	r9, r7, #1
   3cfec:	add	r0, r1, r0
   3cff0:	str	r0, [r4, #20]
   3cff4:	beq	3d154 <flatcc_json_printer_bool_vector_field@@Base+0x33c>
   3cff8:	ldr	r0, [r4, #20]
   3cffc:	add	r7, r8, #5
   3d000:	mov	r8, #44	; 0x2c
   3d004:	mov	sl, #10
   3d008:	add	r1, r0, #1
   3d00c:	str	r1, [r4, #20]
   3d010:	strb	r8, [r0]
   3d014:	ldrb	r1, [r4, #25]
   3d018:	ldr	r0, [r4, #20]
   3d01c:	cmp	r1, #0
   3d020:	beq	3d0d8 <flatcc_json_printer_bool_vector_field@@Base+0x2c0>
   3d024:	add	r1, r0, #1
   3d028:	str	r1, [r4, #20]
   3d02c:	strb	sl, [r0]
   3d030:	ldr	r0, [r4, #20]
   3d034:	ldrb	r2, [r4, #25]
   3d038:	ldr	r3, [r4, #32]
   3d03c:	ldr	r1, [r4, #16]
   3d040:	mla	r6, r3, r2, r0
   3d044:	mul	r5, r3, r2
   3d048:	cmp	r6, r1
   3d04c:	bls	3d0bc <flatcc_json_printer_bool_vector_field@@Base+0x2a4>
   3d050:	cmp	r0, r1
   3d054:	bcc	3d070 <flatcc_json_printer_bool_vector_field@@Base+0x258>
   3d058:	ldr	r2, [r4, #44]	; 0x2c
   3d05c:	mov	r0, r4
   3d060:	mov	r1, #0
   3d064:	blx	r2
   3d068:	ldr	r1, [r4, #16]
   3d06c:	ldr	r0, [r4, #20]
   3d070:	sub	r6, r1, r0
   3d074:	cmp	r6, r5
   3d078:	bcs	3d0bc <flatcc_json_printer_bool_vector_field@@Base+0x2a4>
   3d07c:	mov	r1, #32
   3d080:	mov	r2, r6
   3d084:	bl	14ef0 <memset@plt>
   3d088:	ldr	r0, [r4, #20]
   3d08c:	ldr	r2, [r4, #44]	; 0x2c
   3d090:	mov	r1, #0
   3d094:	add	r0, r0, r6
   3d098:	str	r0, [r4, #20]
   3d09c:	mov	r0, r4
   3d0a0:	blx	r2
   3d0a4:	ldr	r1, [r4, #16]
   3d0a8:	ldr	r0, [r4, #20]
   3d0ac:	sub	r5, r5, r6
   3d0b0:	sub	r6, r1, r0
   3d0b4:	cmp	r5, r6
   3d0b8:	bhi	3d07c <flatcc_json_printer_bool_vector_field@@Base+0x264>
   3d0bc:	mov	r1, #32
   3d0c0:	mov	r2, r5
   3d0c4:	bl	14ef0 <memset@plt>
   3d0c8:	ldr	r0, [r4, #20]
   3d0cc:	add	r0, r0, r5
   3d0d0:	str	r0, [r4, #20]
   3d0d4:	b	3d0f8 <flatcc_json_printer_bool_vector_field@@Base+0x2e0>
   3d0d8:	ldr	r1, [r4, #16]
   3d0dc:	cmp	r0, r1
   3d0e0:	bcc	3d0f8 <flatcc_json_printer_bool_vector_field@@Base+0x2e0>
   3d0e4:	ldr	r2, [r4, #44]	; 0x2c
   3d0e8:	mov	r0, r4
   3d0ec:	mov	r1, #0
   3d0f0:	blx	r2
   3d0f4:	ldr	r0, [r4, #20]
   3d0f8:	ldrb	r1, [r7]
   3d0fc:	sub	r9, r9, #1
   3d100:	cmp	r1, #0
   3d104:	beq	3d124 <flatcc_json_printer_bool_vector_field@@Base+0x30c>
   3d108:	mov	r1, #0
   3d10c:	strb	r1, [r0, #4]
   3d110:	movw	r1, #29300	; 0x7274
   3d114:	movt	r1, #25973	; 0x6575
   3d118:	str	r1, [r0]
   3d11c:	mov	r0, #4
   3d120:	b	3d13c <flatcc_json_printer_bool_vector_field@@Base+0x324>
   3d124:	mov	r1, #101	; 0x65
   3d128:	strh	r1, [r0, #4]
   3d12c:	movw	r1, #24934	; 0x6166
   3d130:	movt	r1, #29548	; 0x736c
   3d134:	str	r1, [r0]
   3d138:	mov	r0, #5
   3d13c:	ldr	r1, [r4, #20]
   3d140:	add	r7, r7, #1
   3d144:	cmp	r9, #0
   3d148:	add	r0, r1, r0
   3d14c:	str	r0, [r4, #20]
   3d150:	bne	3d008 <flatcc_json_printer_bool_vector_field@@Base+0x1f0>
   3d154:	ldrb	r1, [r4, #25]
   3d158:	ldr	r0, [r4, #20]
   3d15c:	cmp	r1, #0
   3d160:	beq	3d220 <flatcc_json_printer_bool_vector_field@@Base+0x408>
   3d164:	add	r1, r0, #1
   3d168:	str	r1, [r4, #20]
   3d16c:	mov	r1, #10
   3d170:	strb	r1, [r0]
   3d174:	ldr	r0, [r4, #32]
   3d178:	sub	r2, r0, #1
   3d17c:	str	r2, [r4, #32]
   3d180:	ldrb	r3, [r4, #25]
   3d184:	ldr	r0, [r4, #20]
   3d188:	ldr	r1, [r4, #16]
   3d18c:	mla	r7, r2, r3, r0
   3d190:	mul	r5, r2, r3
   3d194:	cmp	r7, r1
   3d198:	bls	3d208 <flatcc_json_printer_bool_vector_field@@Base+0x3f0>
   3d19c:	cmp	r0, r1
   3d1a0:	bcc	3d1bc <flatcc_json_printer_bool_vector_field@@Base+0x3a4>
   3d1a4:	ldr	r2, [r4, #44]	; 0x2c
   3d1a8:	mov	r0, r4
   3d1ac:	mov	r1, #0
   3d1b0:	blx	r2
   3d1b4:	ldr	r1, [r4, #16]
   3d1b8:	ldr	r0, [r4, #20]
   3d1bc:	sub	r6, r1, r0
   3d1c0:	cmp	r6, r5
   3d1c4:	bcs	3d208 <flatcc_json_printer_bool_vector_field@@Base+0x3f0>
   3d1c8:	mov	r1, #32
   3d1cc:	mov	r2, r6
   3d1d0:	bl	14ef0 <memset@plt>
   3d1d4:	ldr	r0, [r4, #20]
   3d1d8:	ldr	r2, [r4, #44]	; 0x2c
   3d1dc:	mov	r1, #0
   3d1e0:	add	r0, r0, r6
   3d1e4:	str	r0, [r4, #20]
   3d1e8:	mov	r0, r4
   3d1ec:	blx	r2
   3d1f0:	ldr	r1, [r4, #16]
   3d1f4:	ldr	r0, [r4, #20]
   3d1f8:	sub	r5, r5, r6
   3d1fc:	sub	r6, r1, r0
   3d200:	cmp	r5, r6
   3d204:	bhi	3d1c8 <flatcc_json_printer_bool_vector_field@@Base+0x3b0>
   3d208:	mov	r1, #32
   3d20c:	mov	r2, r5
   3d210:	bl	14ef0 <memset@plt>
   3d214:	ldr	r0, [r4, #20]
   3d218:	add	r0, r0, r5
   3d21c:	str	r0, [r4, #20]
   3d220:	add	r1, r0, #1
   3d224:	str	r1, [r4, #20]
   3d228:	mov	r1, #93	; 0x5d
   3d22c:	strb	r1, [r0]
   3d230:	sub	sp, fp, #28
   3d234:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003d238 <flatcc_json_printer_float_vector_field@@Base>:
   3d238:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3d23c:	add	fp, sp, #28
   3d240:	sub	sp, sp, #4
   3d244:	mov	r4, r0
   3d248:	mov	r0, #4
   3d24c:	add	r0, r0, r2, lsl #1
   3d250:	ldr	r2, [r1, #8]
   3d254:	cmp	r0, r2
   3d258:	bge	3d5e8 <flatcc_json_printer_float_vector_field@@Base+0x3b0>
   3d25c:	ldr	r2, [r1, #4]
   3d260:	add	r0, r2, r0
   3d264:	ldrh	r0, [r0]
   3d268:	cmp	r0, #0
   3d26c:	ldrne	r2, [r1]
   3d270:	addsne	r8, r2, r0
   3d274:	beq	3d5e8 <flatcc_json_printer_float_vector_field@@Base+0x3b0>
   3d278:	ldr	r0, [r1, #16]
   3d27c:	ldr	r2, [fp, #8]
   3d280:	add	r7, r0, #1
   3d284:	cmp	r0, #0
   3d288:	str	r7, [r1, #16]
   3d28c:	ldrne	r0, [r4, #20]
   3d290:	addne	r1, r0, #1
   3d294:	strne	r1, [r4, #20]
   3d298:	movne	r1, #44	; 0x2c
   3d29c:	strbne	r1, [r0]
   3d2a0:	mov	r1, r3
   3d2a4:	ldr	r0, [r8]
   3d2a8:	ldr	r7, [r8, r0]!
   3d2ac:	mov	r0, r4
   3d2b0:	bl	38c54 <flatcc_json_printer_string_field@@Base+0x8c>
   3d2b4:	ldr	r1, [r4, #32]
   3d2b8:	ldr	r0, [r4, #20]
   3d2bc:	cmp	r7, #0
   3d2c0:	add	r1, r1, #1
   3d2c4:	str	r1, [r4, #32]
   3d2c8:	add	r1, r0, #1
   3d2cc:	str	r1, [r4, #20]
   3d2d0:	mov	r1, #91	; 0x5b
   3d2d4:	strb	r1, [r0]
   3d2d8:	beq	3d50c <flatcc_json_printer_float_vector_field@@Base+0x2d4>
   3d2dc:	ldrb	r1, [r4, #25]
   3d2e0:	ldr	r0, [r4, #20]
   3d2e4:	cmp	r1, #0
   3d2e8:	beq	3d3a4 <flatcc_json_printer_float_vector_field@@Base+0x16c>
   3d2ec:	add	r1, r0, #1
   3d2f0:	str	r1, [r4, #20]
   3d2f4:	mov	r1, #10
   3d2f8:	strb	r1, [r0]
   3d2fc:	ldr	r0, [r4, #20]
   3d300:	ldrb	r2, [r4, #25]
   3d304:	ldr	r3, [r4, #32]
   3d308:	ldr	r1, [r4, #16]
   3d30c:	mla	r6, r3, r2, r0
   3d310:	mul	r5, r3, r2
   3d314:	cmp	r6, r1
   3d318:	bls	3d388 <flatcc_json_printer_float_vector_field@@Base+0x150>
   3d31c:	cmp	r0, r1
   3d320:	bcc	3d33c <flatcc_json_printer_float_vector_field@@Base+0x104>
   3d324:	ldr	r2, [r4, #44]	; 0x2c
   3d328:	mov	r0, r4
   3d32c:	mov	r1, #0
   3d330:	blx	r2
   3d334:	ldr	r1, [r4, #16]
   3d338:	ldr	r0, [r4, #20]
   3d33c:	sub	r6, r1, r0
   3d340:	cmp	r6, r5
   3d344:	bcs	3d388 <flatcc_json_printer_float_vector_field@@Base+0x150>
   3d348:	mov	r1, #32
   3d34c:	mov	r2, r6
   3d350:	bl	14ef0 <memset@plt>
   3d354:	ldr	r0, [r4, #20]
   3d358:	ldr	r2, [r4, #44]	; 0x2c
   3d35c:	mov	r1, #0
   3d360:	add	r0, r0, r6
   3d364:	str	r0, [r4, #20]
   3d368:	mov	r0, r4
   3d36c:	blx	r2
   3d370:	ldr	r1, [r4, #16]
   3d374:	ldr	r0, [r4, #20]
   3d378:	sub	r5, r5, r6
   3d37c:	sub	r6, r1, r0
   3d380:	cmp	r5, r6
   3d384:	bhi	3d348 <flatcc_json_printer_float_vector_field@@Base+0x110>
   3d388:	mov	r1, #32
   3d38c:	mov	r2, r5
   3d390:	bl	14ef0 <memset@plt>
   3d394:	ldr	r0, [r4, #20]
   3d398:	add	r0, r0, r5
   3d39c:	str	r0, [r4, #20]
   3d3a0:	b	3d3c4 <flatcc_json_printer_float_vector_field@@Base+0x18c>
   3d3a4:	ldr	r1, [r4, #16]
   3d3a8:	cmp	r0, r1
   3d3ac:	bcc	3d3c4 <flatcc_json_printer_float_vector_field@@Base+0x18c>
   3d3b0:	ldr	r2, [r4, #44]	; 0x2c
   3d3b4:	mov	r0, r4
   3d3b8:	mov	r1, #0
   3d3bc:	blx	r2
   3d3c0:	ldr	r0, [r4, #20]
   3d3c4:	vldr	s0, [r8, #4]
   3d3c8:	vcvt.f64.f32	d0, s0
   3d3cc:	bl	37078 <flatcc_json_printer_fmt_float@@Base+0x8>
   3d3d0:	ldr	r1, [r4, #20]
   3d3d4:	subs	r9, r7, #1
   3d3d8:	add	r0, r1, r0
   3d3dc:	str	r0, [r4, #20]
   3d3e0:	beq	3d50c <flatcc_json_printer_float_vector_field@@Base+0x2d4>
   3d3e4:	ldr	r0, [r4, #20]
   3d3e8:	add	r7, r8, #8
   3d3ec:	mov	r8, #44	; 0x2c
   3d3f0:	mov	sl, #10
   3d3f4:	add	r1, r0, #1
   3d3f8:	sub	r9, r9, #1
   3d3fc:	str	r1, [r4, #20]
   3d400:	strb	r8, [r0]
   3d404:	ldrb	r1, [r4, #25]
   3d408:	ldr	r0, [r4, #20]
   3d40c:	cmp	r1, #0
   3d410:	beq	3d4c8 <flatcc_json_printer_float_vector_field@@Base+0x290>
   3d414:	add	r1, r0, #1
   3d418:	str	r1, [r4, #20]
   3d41c:	strb	sl, [r0]
   3d420:	ldr	r0, [r4, #20]
   3d424:	ldrb	r2, [r4, #25]
   3d428:	ldr	r3, [r4, #32]
   3d42c:	ldr	r1, [r4, #16]
   3d430:	mla	r6, r3, r2, r0
   3d434:	mul	r5, r3, r2
   3d438:	cmp	r6, r1
   3d43c:	bls	3d4ac <flatcc_json_printer_float_vector_field@@Base+0x274>
   3d440:	cmp	r0, r1
   3d444:	bcc	3d460 <flatcc_json_printer_float_vector_field@@Base+0x228>
   3d448:	ldr	r2, [r4, #44]	; 0x2c
   3d44c:	mov	r0, r4
   3d450:	mov	r1, #0
   3d454:	blx	r2
   3d458:	ldr	r1, [r4, #16]
   3d45c:	ldr	r0, [r4, #20]
   3d460:	sub	r6, r1, r0
   3d464:	cmp	r6, r5
   3d468:	bcs	3d4ac <flatcc_json_printer_float_vector_field@@Base+0x274>
   3d46c:	mov	r1, #32
   3d470:	mov	r2, r6
   3d474:	bl	14ef0 <memset@plt>
   3d478:	ldr	r0, [r4, #20]
   3d47c:	ldr	r2, [r4, #44]	; 0x2c
   3d480:	mov	r1, #0
   3d484:	add	r0, r0, r6
   3d488:	str	r0, [r4, #20]
   3d48c:	mov	r0, r4
   3d490:	blx	r2
   3d494:	ldr	r1, [r4, #16]
   3d498:	ldr	r0, [r4, #20]
   3d49c:	sub	r5, r5, r6
   3d4a0:	sub	r6, r1, r0
   3d4a4:	cmp	r5, r6
   3d4a8:	bhi	3d46c <flatcc_json_printer_float_vector_field@@Base+0x234>
   3d4ac:	mov	r1, #32
   3d4b0:	mov	r2, r5
   3d4b4:	bl	14ef0 <memset@plt>
   3d4b8:	ldr	r0, [r4, #20]
   3d4bc:	add	r0, r0, r5
   3d4c0:	str	r0, [r4, #20]
   3d4c4:	b	3d4e8 <flatcc_json_printer_float_vector_field@@Base+0x2b0>
   3d4c8:	ldr	r1, [r4, #16]
   3d4cc:	cmp	r0, r1
   3d4d0:	bcc	3d4e8 <flatcc_json_printer_float_vector_field@@Base+0x2b0>
   3d4d4:	ldr	r2, [r4, #44]	; 0x2c
   3d4d8:	mov	r0, r4
   3d4dc:	mov	r1, #0
   3d4e0:	blx	r2
   3d4e4:	ldr	r0, [r4, #20]
   3d4e8:	vldr	s0, [r7]
   3d4ec:	vcvt.f64.f32	d0, s0
   3d4f0:	bl	37078 <flatcc_json_printer_fmt_float@@Base+0x8>
   3d4f4:	ldr	r1, [r4, #20]
   3d4f8:	add	r7, r7, #4
   3d4fc:	cmp	r9, #0
   3d500:	add	r0, r1, r0
   3d504:	str	r0, [r4, #20]
   3d508:	bne	3d3f4 <flatcc_json_printer_float_vector_field@@Base+0x1bc>
   3d50c:	ldrb	r1, [r4, #25]
   3d510:	ldr	r0, [r4, #20]
   3d514:	cmp	r1, #0
   3d518:	beq	3d5d8 <flatcc_json_printer_float_vector_field@@Base+0x3a0>
   3d51c:	add	r1, r0, #1
   3d520:	str	r1, [r4, #20]
   3d524:	mov	r1, #10
   3d528:	strb	r1, [r0]
   3d52c:	ldr	r0, [r4, #32]
   3d530:	sub	r2, r0, #1
   3d534:	str	r2, [r4, #32]
   3d538:	ldrb	r3, [r4, #25]
   3d53c:	ldr	r0, [r4, #20]
   3d540:	ldr	r1, [r4, #16]
   3d544:	mla	r7, r2, r3, r0
   3d548:	mul	r5, r2, r3
   3d54c:	cmp	r7, r1
   3d550:	bls	3d5c0 <flatcc_json_printer_float_vector_field@@Base+0x388>
   3d554:	cmp	r0, r1
   3d558:	bcc	3d574 <flatcc_json_printer_float_vector_field@@Base+0x33c>
   3d55c:	ldr	r2, [r4, #44]	; 0x2c
   3d560:	mov	r0, r4
   3d564:	mov	r1, #0
   3d568:	blx	r2
   3d56c:	ldr	r1, [r4, #16]
   3d570:	ldr	r0, [r4, #20]
   3d574:	sub	r6, r1, r0
   3d578:	cmp	r6, r5
   3d57c:	bcs	3d5c0 <flatcc_json_printer_float_vector_field@@Base+0x388>
   3d580:	mov	r1, #32
   3d584:	mov	r2, r6
   3d588:	bl	14ef0 <memset@plt>
   3d58c:	ldr	r0, [r4, #20]
   3d590:	ldr	r2, [r4, #44]	; 0x2c
   3d594:	mov	r1, #0
   3d598:	add	r0, r0, r6
   3d59c:	str	r0, [r4, #20]
   3d5a0:	mov	r0, r4
   3d5a4:	blx	r2
   3d5a8:	ldr	r1, [r4, #16]
   3d5ac:	ldr	r0, [r4, #20]
   3d5b0:	sub	r5, r5, r6
   3d5b4:	sub	r6, r1, r0
   3d5b8:	cmp	r5, r6
   3d5bc:	bhi	3d580 <flatcc_json_printer_float_vector_field@@Base+0x348>
   3d5c0:	mov	r1, #32
   3d5c4:	mov	r2, r5
   3d5c8:	bl	14ef0 <memset@plt>
   3d5cc:	ldr	r0, [r4, #20]
   3d5d0:	add	r0, r0, r5
   3d5d4:	str	r0, [r4, #20]
   3d5d8:	add	r1, r0, #1
   3d5dc:	str	r1, [r4, #20]
   3d5e0:	mov	r1, #93	; 0x5d
   3d5e4:	strb	r1, [r0]
   3d5e8:	sub	sp, fp, #28
   3d5ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003d5f0 <flatcc_json_printer_double_vector_field@@Base>:
   3d5f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3d5f4:	add	fp, sp, #28
   3d5f8:	sub	sp, sp, #4
   3d5fc:	mov	r4, r0
   3d600:	mov	r0, #4
   3d604:	add	r0, r0, r2, lsl #1
   3d608:	ldr	r2, [r1, #8]
   3d60c:	cmp	r0, r2
   3d610:	bge	3d998 <flatcc_json_printer_double_vector_field@@Base+0x3a8>
   3d614:	ldr	r2, [r1, #4]
   3d618:	add	r0, r2, r0
   3d61c:	ldrh	r0, [r0]
   3d620:	cmp	r0, #0
   3d624:	ldrne	r2, [r1]
   3d628:	addsne	r8, r2, r0
   3d62c:	beq	3d998 <flatcc_json_printer_double_vector_field@@Base+0x3a8>
   3d630:	ldr	r0, [r1, #16]
   3d634:	ldr	r2, [fp, #8]
   3d638:	add	r7, r0, #1
   3d63c:	cmp	r0, #0
   3d640:	str	r7, [r1, #16]
   3d644:	ldrne	r0, [r4, #20]
   3d648:	addne	r1, r0, #1
   3d64c:	strne	r1, [r4, #20]
   3d650:	movne	r1, #44	; 0x2c
   3d654:	strbne	r1, [r0]
   3d658:	mov	r1, r3
   3d65c:	ldr	r0, [r8]
   3d660:	ldr	r7, [r8, r0]!
   3d664:	mov	r0, r4
   3d668:	bl	38c54 <flatcc_json_printer_string_field@@Base+0x8c>
   3d66c:	ldr	r1, [r4, #32]
   3d670:	ldr	r0, [r4, #20]
   3d674:	cmp	r7, #0
   3d678:	add	r1, r1, #1
   3d67c:	str	r1, [r4, #32]
   3d680:	add	r1, r0, #1
   3d684:	str	r1, [r4, #20]
   3d688:	mov	r1, #91	; 0x5b
   3d68c:	strb	r1, [r0]
   3d690:	beq	3d8bc <flatcc_json_printer_double_vector_field@@Base+0x2cc>
   3d694:	ldrb	r1, [r4, #25]
   3d698:	ldr	r0, [r4, #20]
   3d69c:	cmp	r1, #0
   3d6a0:	beq	3d75c <flatcc_json_printer_double_vector_field@@Base+0x16c>
   3d6a4:	add	r1, r0, #1
   3d6a8:	str	r1, [r4, #20]
   3d6ac:	mov	r1, #10
   3d6b0:	strb	r1, [r0]
   3d6b4:	ldr	r0, [r4, #20]
   3d6b8:	ldrb	r2, [r4, #25]
   3d6bc:	ldr	r3, [r4, #32]
   3d6c0:	ldr	r1, [r4, #16]
   3d6c4:	mla	r6, r3, r2, r0
   3d6c8:	mul	r5, r3, r2
   3d6cc:	cmp	r6, r1
   3d6d0:	bls	3d740 <flatcc_json_printer_double_vector_field@@Base+0x150>
   3d6d4:	cmp	r0, r1
   3d6d8:	bcc	3d6f4 <flatcc_json_printer_double_vector_field@@Base+0x104>
   3d6dc:	ldr	r2, [r4, #44]	; 0x2c
   3d6e0:	mov	r0, r4
   3d6e4:	mov	r1, #0
   3d6e8:	blx	r2
   3d6ec:	ldr	r1, [r4, #16]
   3d6f0:	ldr	r0, [r4, #20]
   3d6f4:	sub	r6, r1, r0
   3d6f8:	cmp	r6, r5
   3d6fc:	bcs	3d740 <flatcc_json_printer_double_vector_field@@Base+0x150>
   3d700:	mov	r1, #32
   3d704:	mov	r2, r6
   3d708:	bl	14ef0 <memset@plt>
   3d70c:	ldr	r0, [r4, #20]
   3d710:	ldr	r2, [r4, #44]	; 0x2c
   3d714:	mov	r1, #0
   3d718:	add	r0, r0, r6
   3d71c:	str	r0, [r4, #20]
   3d720:	mov	r0, r4
   3d724:	blx	r2
   3d728:	ldr	r1, [r4, #16]
   3d72c:	ldr	r0, [r4, #20]
   3d730:	sub	r5, r5, r6
   3d734:	sub	r6, r1, r0
   3d738:	cmp	r5, r6
   3d73c:	bhi	3d700 <flatcc_json_printer_double_vector_field@@Base+0x110>
   3d740:	mov	r1, #32
   3d744:	mov	r2, r5
   3d748:	bl	14ef0 <memset@plt>
   3d74c:	ldr	r0, [r4, #20]
   3d750:	add	r0, r0, r5
   3d754:	str	r0, [r4, #20]
   3d758:	b	3d77c <flatcc_json_printer_double_vector_field@@Base+0x18c>
   3d75c:	ldr	r1, [r4, #16]
   3d760:	cmp	r0, r1
   3d764:	bcc	3d77c <flatcc_json_printer_double_vector_field@@Base+0x18c>
   3d768:	ldr	r2, [r4, #44]	; 0x2c
   3d76c:	mov	r0, r4
   3d770:	mov	r1, #0
   3d774:	blx	r2
   3d778:	ldr	r0, [r4, #20]
   3d77c:	vldr	d0, [r8, #4]
   3d780:	bl	37078 <flatcc_json_printer_fmt_float@@Base+0x8>
   3d784:	ldr	r1, [r4, #20]
   3d788:	subs	r9, r7, #1
   3d78c:	add	r0, r1, r0
   3d790:	str	r0, [r4, #20]
   3d794:	beq	3d8bc <flatcc_json_printer_double_vector_field@@Base+0x2cc>
   3d798:	ldr	r0, [r4, #20]
   3d79c:	add	r7, r8, #12
   3d7a0:	mov	r8, #44	; 0x2c
   3d7a4:	mov	sl, #10
   3d7a8:	add	r1, r0, #1
   3d7ac:	sub	r9, r9, #1
   3d7b0:	str	r1, [r4, #20]
   3d7b4:	strb	r8, [r0]
   3d7b8:	ldrb	r1, [r4, #25]
   3d7bc:	ldr	r0, [r4, #20]
   3d7c0:	cmp	r1, #0
   3d7c4:	beq	3d87c <flatcc_json_printer_double_vector_field@@Base+0x28c>
   3d7c8:	add	r1, r0, #1
   3d7cc:	str	r1, [r4, #20]
   3d7d0:	strb	sl, [r0]
   3d7d4:	ldr	r0, [r4, #20]
   3d7d8:	ldrb	r2, [r4, #25]
   3d7dc:	ldr	r3, [r4, #32]
   3d7e0:	ldr	r1, [r4, #16]
   3d7e4:	mla	r6, r3, r2, r0
   3d7e8:	mul	r5, r3, r2
   3d7ec:	cmp	r6, r1
   3d7f0:	bls	3d860 <flatcc_json_printer_double_vector_field@@Base+0x270>
   3d7f4:	cmp	r0, r1
   3d7f8:	bcc	3d814 <flatcc_json_printer_double_vector_field@@Base+0x224>
   3d7fc:	ldr	r2, [r4, #44]	; 0x2c
   3d800:	mov	r0, r4
   3d804:	mov	r1, #0
   3d808:	blx	r2
   3d80c:	ldr	r1, [r4, #16]
   3d810:	ldr	r0, [r4, #20]
   3d814:	sub	r6, r1, r0
   3d818:	cmp	r6, r5
   3d81c:	bcs	3d860 <flatcc_json_printer_double_vector_field@@Base+0x270>
   3d820:	mov	r1, #32
   3d824:	mov	r2, r6
   3d828:	bl	14ef0 <memset@plt>
   3d82c:	ldr	r0, [r4, #20]
   3d830:	ldr	r2, [r4, #44]	; 0x2c
   3d834:	mov	r1, #0
   3d838:	add	r0, r0, r6
   3d83c:	str	r0, [r4, #20]
   3d840:	mov	r0, r4
   3d844:	blx	r2
   3d848:	ldr	r1, [r4, #16]
   3d84c:	ldr	r0, [r4, #20]
   3d850:	sub	r5, r5, r6
   3d854:	sub	r6, r1, r0
   3d858:	cmp	r5, r6
   3d85c:	bhi	3d820 <flatcc_json_printer_double_vector_field@@Base+0x230>
   3d860:	mov	r1, #32
   3d864:	mov	r2, r5
   3d868:	bl	14ef0 <memset@plt>
   3d86c:	ldr	r0, [r4, #20]
   3d870:	add	r0, r0, r5
   3d874:	str	r0, [r4, #20]
   3d878:	b	3d89c <flatcc_json_printer_double_vector_field@@Base+0x2ac>
   3d87c:	ldr	r1, [r4, #16]
   3d880:	cmp	r0, r1
   3d884:	bcc	3d89c <flatcc_json_printer_double_vector_field@@Base+0x2ac>
   3d888:	ldr	r2, [r4, #44]	; 0x2c
   3d88c:	mov	r0, r4
   3d890:	mov	r1, #0
   3d894:	blx	r2
   3d898:	ldr	r0, [r4, #20]
   3d89c:	vldr	d0, [r7]
   3d8a0:	bl	37078 <flatcc_json_printer_fmt_float@@Base+0x8>
   3d8a4:	ldr	r1, [r4, #20]
   3d8a8:	add	r7, r7, #8
   3d8ac:	cmp	r9, #0
   3d8b0:	add	r0, r1, r0
   3d8b4:	str	r0, [r4, #20]
   3d8b8:	bne	3d7a8 <flatcc_json_printer_double_vector_field@@Base+0x1b8>
   3d8bc:	ldrb	r1, [r4, #25]
   3d8c0:	ldr	r0, [r4, #20]
   3d8c4:	cmp	r1, #0
   3d8c8:	beq	3d988 <flatcc_json_printer_double_vector_field@@Base+0x398>
   3d8cc:	add	r1, r0, #1
   3d8d0:	str	r1, [r4, #20]
   3d8d4:	mov	r1, #10
   3d8d8:	strb	r1, [r0]
   3d8dc:	ldr	r0, [r4, #32]
   3d8e0:	sub	r2, r0, #1
   3d8e4:	str	r2, [r4, #32]
   3d8e8:	ldrb	r3, [r4, #25]
   3d8ec:	ldr	r0, [r4, #20]
   3d8f0:	ldr	r1, [r4, #16]
   3d8f4:	mla	r7, r2, r3, r0
   3d8f8:	mul	r5, r2, r3
   3d8fc:	cmp	r7, r1
   3d900:	bls	3d970 <flatcc_json_printer_double_vector_field@@Base+0x380>
   3d904:	cmp	r0, r1
   3d908:	bcc	3d924 <flatcc_json_printer_double_vector_field@@Base+0x334>
   3d90c:	ldr	r2, [r4, #44]	; 0x2c
   3d910:	mov	r0, r4
   3d914:	mov	r1, #0
   3d918:	blx	r2
   3d91c:	ldr	r1, [r4, #16]
   3d920:	ldr	r0, [r4, #20]
   3d924:	sub	r6, r1, r0
   3d928:	cmp	r6, r5
   3d92c:	bcs	3d970 <flatcc_json_printer_double_vector_field@@Base+0x380>
   3d930:	mov	r1, #32
   3d934:	mov	r2, r6
   3d938:	bl	14ef0 <memset@plt>
   3d93c:	ldr	r0, [r4, #20]
   3d940:	ldr	r2, [r4, #44]	; 0x2c
   3d944:	mov	r1, #0
   3d948:	add	r0, r0, r6
   3d94c:	str	r0, [r4, #20]
   3d950:	mov	r0, r4
   3d954:	blx	r2
   3d958:	ldr	r1, [r4, #16]
   3d95c:	ldr	r0, [r4, #20]
   3d960:	sub	r5, r5, r6
   3d964:	sub	r6, r1, r0
   3d968:	cmp	r5, r6
   3d96c:	bhi	3d930 <flatcc_json_printer_double_vector_field@@Base+0x340>
   3d970:	mov	r1, #32
   3d974:	mov	r2, r5
   3d978:	bl	14ef0 <memset@plt>
   3d97c:	ldr	r0, [r4, #20]
   3d980:	add	r0, r0, r5
   3d984:	str	r0, [r4, #20]
   3d988:	add	r1, r0, #1
   3d98c:	str	r1, [r4, #20]
   3d990:	mov	r1, #93	; 0x5d
   3d994:	strb	r1, [r0]
   3d998:	sub	sp, fp, #28
   3d99c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003d9a0 <flatcc_json_printer_utype_enum_vector_field@@Base>:
   3d9a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3d9a4:	add	fp, sp, #28
   3d9a8:	sub	sp, sp, #4
   3d9ac:	mov	r4, r0
   3d9b0:	ldrb	r0, [r0, #27]
   3d9b4:	cmp	r0, #0
   3d9b8:	beq	3d9cc <flatcc_json_printer_utype_enum_vector_field@@Base+0x2c>
   3d9bc:	mov	r0, r4
   3d9c0:	sub	sp, fp, #28
   3d9c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3d9c8:	b	3ac08 <flatcc_json_printer_utype_vector_field@@Base>
   3d9cc:	mov	r0, #4
   3d9d0:	add	r0, r0, r2, lsl #1
   3d9d4:	ldr	r2, [r1, #8]
   3d9d8:	cmp	r0, r2
   3d9dc:	bge	3dd4c <flatcc_json_printer_utype_enum_vector_field@@Base+0x3ac>
   3d9e0:	ldr	r2, [r1, #4]
   3d9e4:	add	r0, r2, r0
   3d9e8:	ldrh	r0, [r0]
   3d9ec:	cmp	r0, #0
   3d9f0:	ldrne	r2, [r1]
   3d9f4:	addsne	r8, r2, r0
   3d9f8:	beq	3dd4c <flatcc_json_printer_utype_enum_vector_field@@Base+0x3ac>
   3d9fc:	ldr	r0, [r1, #16]
   3da00:	ldr	sl, [fp, #12]
   3da04:	ldr	r2, [fp, #8]
   3da08:	add	r7, r0, #1
   3da0c:	cmp	r0, #0
   3da10:	str	r7, [r1, #16]
   3da14:	ldrne	r0, [r4, #20]
   3da18:	addne	r1, r0, #1
   3da1c:	strne	r1, [r4, #20]
   3da20:	movne	r1, #44	; 0x2c
   3da24:	strbne	r1, [r0]
   3da28:	mov	r1, r3
   3da2c:	ldr	r0, [r8]
   3da30:	ldr	r9, [r8, r0]!
   3da34:	mov	r0, r4
   3da38:	bl	38c54 <flatcc_json_printer_string_field@@Base+0x8c>
   3da3c:	ldr	r1, [r4, #32]
   3da40:	ldr	r0, [r4, #20]
   3da44:	cmp	r9, #0
   3da48:	add	r1, r1, #1
   3da4c:	str	r1, [r4, #32]
   3da50:	add	r1, r0, #1
   3da54:	str	r1, [r4, #20]
   3da58:	mov	r1, #91	; 0x5b
   3da5c:	strb	r1, [r0]
   3da60:	beq	3dc70 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2d0>
   3da64:	ldrb	r1, [r4, #25]
   3da68:	ldr	r0, [r4, #20]
   3da6c:	cmp	r1, #0
   3da70:	beq	3db2c <flatcc_json_printer_utype_enum_vector_field@@Base+0x18c>
   3da74:	add	r1, r0, #1
   3da78:	str	r1, [r4, #20]
   3da7c:	mov	r1, #10
   3da80:	strb	r1, [r0]
   3da84:	ldr	r0, [r4, #20]
   3da88:	ldrb	r2, [r4, #25]
   3da8c:	ldr	r3, [r4, #32]
   3da90:	ldr	r1, [r4, #16]
   3da94:	mla	r7, r3, r2, r0
   3da98:	mul	r5, r3, r2
   3da9c:	cmp	r7, r1
   3daa0:	bls	3db10 <flatcc_json_printer_utype_enum_vector_field@@Base+0x170>
   3daa4:	cmp	r0, r1
   3daa8:	bcc	3dac4 <flatcc_json_printer_utype_enum_vector_field@@Base+0x124>
   3daac:	ldr	r2, [r4, #44]	; 0x2c
   3dab0:	mov	r0, r4
   3dab4:	mov	r1, #0
   3dab8:	blx	r2
   3dabc:	ldr	r1, [r4, #16]
   3dac0:	ldr	r0, [r4, #20]
   3dac4:	sub	r6, r1, r0
   3dac8:	cmp	r6, r5
   3dacc:	bcs	3db10 <flatcc_json_printer_utype_enum_vector_field@@Base+0x170>
   3dad0:	mov	r1, #32
   3dad4:	mov	r2, r6
   3dad8:	bl	14ef0 <memset@plt>
   3dadc:	ldr	r0, [r4, #20]
   3dae0:	ldr	r2, [r4, #44]	; 0x2c
   3dae4:	mov	r1, #0
   3dae8:	add	r0, r0, r6
   3daec:	str	r0, [r4, #20]
   3daf0:	mov	r0, r4
   3daf4:	blx	r2
   3daf8:	ldr	r1, [r4, #16]
   3dafc:	ldr	r0, [r4, #20]
   3db00:	sub	r5, r5, r6
   3db04:	sub	r6, r1, r0
   3db08:	cmp	r5, r6
   3db0c:	bhi	3dad0 <flatcc_json_printer_utype_enum_vector_field@@Base+0x130>
   3db10:	mov	r1, #32
   3db14:	mov	r2, r5
   3db18:	bl	14ef0 <memset@plt>
   3db1c:	ldr	r0, [r4, #20]
   3db20:	add	r0, r0, r5
   3db24:	str	r0, [r4, #20]
   3db28:	b	3db48 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1a8>
   3db2c:	ldr	r1, [r4, #16]
   3db30:	cmp	r0, r1
   3db34:	bcc	3db48 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1a8>
   3db38:	ldr	r2, [r4, #44]	; 0x2c
   3db3c:	mov	r0, r4
   3db40:	mov	r1, #0
   3db44:	blx	r2
   3db48:	ldrb	r1, [r8, #4]
   3db4c:	mov	r0, r4
   3db50:	blx	sl
   3db54:	subs	r9, r9, #1
   3db58:	beq	3dc70 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2d0>
   3db5c:	add	r7, r8, #5
   3db60:	mov	r8, #44	; 0x2c
   3db64:	ldr	r0, [r4, #20]
   3db68:	sub	r9, r9, #1
   3db6c:	add	r1, r0, #1
   3db70:	str	r1, [r4, #20]
   3db74:	strb	r8, [r0]
   3db78:	ldrb	r1, [r4, #25]
   3db7c:	ldr	r0, [r4, #20]
   3db80:	cmp	r1, #0
   3db84:	beq	3dc40 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2a0>
   3db88:	add	r1, r0, #1
   3db8c:	str	r1, [r4, #20]
   3db90:	mov	r1, #10
   3db94:	strb	r1, [r0]
   3db98:	ldr	r0, [r4, #20]
   3db9c:	ldrb	r2, [r4, #25]
   3dba0:	ldr	r3, [r4, #32]
   3dba4:	ldr	r1, [r4, #16]
   3dba8:	mla	r6, r3, r2, r0
   3dbac:	mul	r5, r3, r2
   3dbb0:	cmp	r6, r1
   3dbb4:	bls	3dc24 <flatcc_json_printer_utype_enum_vector_field@@Base+0x284>
   3dbb8:	cmp	r0, r1
   3dbbc:	bcc	3dbd8 <flatcc_json_printer_utype_enum_vector_field@@Base+0x238>
   3dbc0:	ldr	r2, [r4, #44]	; 0x2c
   3dbc4:	mov	r0, r4
   3dbc8:	mov	r1, #0
   3dbcc:	blx	r2
   3dbd0:	ldr	r1, [r4, #16]
   3dbd4:	ldr	r0, [r4, #20]
   3dbd8:	sub	r6, r1, r0
   3dbdc:	cmp	r6, r5
   3dbe0:	bcs	3dc24 <flatcc_json_printer_utype_enum_vector_field@@Base+0x284>
   3dbe4:	mov	r1, #32
   3dbe8:	mov	r2, r6
   3dbec:	bl	14ef0 <memset@plt>
   3dbf0:	ldr	r0, [r4, #20]
   3dbf4:	ldr	r2, [r4, #44]	; 0x2c
   3dbf8:	mov	r1, #0
   3dbfc:	add	r0, r0, r6
   3dc00:	str	r0, [r4, #20]
   3dc04:	mov	r0, r4
   3dc08:	blx	r2
   3dc0c:	ldr	r1, [r4, #16]
   3dc10:	ldr	r0, [r4, #20]
   3dc14:	sub	r5, r5, r6
   3dc18:	sub	r6, r1, r0
   3dc1c:	cmp	r5, r6
   3dc20:	bhi	3dbe4 <flatcc_json_printer_utype_enum_vector_field@@Base+0x244>
   3dc24:	mov	r1, #32
   3dc28:	mov	r2, r5
   3dc2c:	bl	14ef0 <memset@plt>
   3dc30:	ldr	r0, [r4, #20]
   3dc34:	add	r0, r0, r5
   3dc38:	str	r0, [r4, #20]
   3dc3c:	b	3dc5c <flatcc_json_printer_utype_enum_vector_field@@Base+0x2bc>
   3dc40:	ldr	r1, [r4, #16]
   3dc44:	cmp	r0, r1
   3dc48:	bcc	3dc5c <flatcc_json_printer_utype_enum_vector_field@@Base+0x2bc>
   3dc4c:	ldr	r2, [r4, #44]	; 0x2c
   3dc50:	mov	r0, r4
   3dc54:	mov	r1, #0
   3dc58:	blx	r2
   3dc5c:	ldrb	r1, [r7], #1
   3dc60:	mov	r0, r4
   3dc64:	blx	sl
   3dc68:	cmp	r9, #0
   3dc6c:	bne	3db64 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1c4>
   3dc70:	ldrb	r1, [r4, #25]
   3dc74:	ldr	r0, [r4, #20]
   3dc78:	cmp	r1, #0
   3dc7c:	beq	3dd3c <flatcc_json_printer_utype_enum_vector_field@@Base+0x39c>
   3dc80:	add	r1, r0, #1
   3dc84:	str	r1, [r4, #20]
   3dc88:	mov	r1, #10
   3dc8c:	strb	r1, [r0]
   3dc90:	ldr	r0, [r4, #32]
   3dc94:	sub	r2, r0, #1
   3dc98:	str	r2, [r4, #32]
   3dc9c:	ldrb	r3, [r4, #25]
   3dca0:	ldr	r0, [r4, #20]
   3dca4:	ldr	r1, [r4, #16]
   3dca8:	mla	r7, r2, r3, r0
   3dcac:	mul	r5, r2, r3
   3dcb0:	cmp	r7, r1
   3dcb4:	bls	3dd24 <flatcc_json_printer_utype_enum_vector_field@@Base+0x384>
   3dcb8:	cmp	r0, r1
   3dcbc:	bcc	3dcd8 <flatcc_json_printer_utype_enum_vector_field@@Base+0x338>
   3dcc0:	ldr	r2, [r4, #44]	; 0x2c
   3dcc4:	mov	r0, r4
   3dcc8:	mov	r1, #0
   3dccc:	blx	r2
   3dcd0:	ldr	r1, [r4, #16]
   3dcd4:	ldr	r0, [r4, #20]
   3dcd8:	sub	r6, r1, r0
   3dcdc:	cmp	r6, r5
   3dce0:	bcs	3dd24 <flatcc_json_printer_utype_enum_vector_field@@Base+0x384>
   3dce4:	mov	r1, #32
   3dce8:	mov	r2, r6
   3dcec:	bl	14ef0 <memset@plt>
   3dcf0:	ldr	r0, [r4, #20]
   3dcf4:	ldr	r2, [r4, #44]	; 0x2c
   3dcf8:	mov	r1, #0
   3dcfc:	add	r0, r0, r6
   3dd00:	str	r0, [r4, #20]
   3dd04:	mov	r0, r4
   3dd08:	blx	r2
   3dd0c:	ldr	r1, [r4, #16]
   3dd10:	ldr	r0, [r4, #20]
   3dd14:	sub	r5, r5, r6
   3dd18:	sub	r6, r1, r0
   3dd1c:	cmp	r5, r6
   3dd20:	bhi	3dce4 <flatcc_json_printer_utype_enum_vector_field@@Base+0x344>
   3dd24:	mov	r1, #32
   3dd28:	mov	r2, r5
   3dd2c:	bl	14ef0 <memset@plt>
   3dd30:	ldr	r0, [r4, #20]
   3dd34:	add	r0, r0, r5
   3dd38:	str	r0, [r4, #20]
   3dd3c:	add	r1, r0, #1
   3dd40:	str	r1, [r4, #20]
   3dd44:	mov	r1, #93	; 0x5d
   3dd48:	strb	r1, [r0]
   3dd4c:	sub	sp, fp, #28
   3dd50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003dd54 <flatcc_json_printer_uint8_enum_vector_field@@Base>:
   3dd54:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3dd58:	add	fp, sp, #28
   3dd5c:	sub	sp, sp, #4
   3dd60:	mov	r4, r0
   3dd64:	ldrb	r0, [r0, #27]
   3dd68:	cmp	r0, #0
   3dd6c:	beq	3dd80 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2c>
   3dd70:	mov	r0, r4
   3dd74:	sub	sp, fp, #28
   3dd78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3dd7c:	b	3afb4 <flatcc_json_printer_uint8_vector_field@@Base>
   3dd80:	mov	r0, #4
   3dd84:	add	r0, r0, r2, lsl #1
   3dd88:	ldr	r2, [r1, #8]
   3dd8c:	cmp	r0, r2
   3dd90:	bge	3e100 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x3ac>
   3dd94:	ldr	r2, [r1, #4]
   3dd98:	add	r0, r2, r0
   3dd9c:	ldrh	r0, [r0]
   3dda0:	cmp	r0, #0
   3dda4:	ldrne	r2, [r1]
   3dda8:	addsne	r8, r2, r0
   3ddac:	beq	3e100 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x3ac>
   3ddb0:	ldr	r0, [r1, #16]
   3ddb4:	ldr	sl, [fp, #12]
   3ddb8:	ldr	r2, [fp, #8]
   3ddbc:	add	r7, r0, #1
   3ddc0:	cmp	r0, #0
   3ddc4:	str	r7, [r1, #16]
   3ddc8:	ldrne	r0, [r4, #20]
   3ddcc:	addne	r1, r0, #1
   3ddd0:	strne	r1, [r4, #20]
   3ddd4:	movne	r1, #44	; 0x2c
   3ddd8:	strbne	r1, [r0]
   3dddc:	mov	r1, r3
   3dde0:	ldr	r0, [r8]
   3dde4:	ldr	r9, [r8, r0]!
   3dde8:	mov	r0, r4
   3ddec:	bl	38c54 <flatcc_json_printer_string_field@@Base+0x8c>
   3ddf0:	ldr	r1, [r4, #32]
   3ddf4:	ldr	r0, [r4, #20]
   3ddf8:	cmp	r9, #0
   3ddfc:	add	r1, r1, #1
   3de00:	str	r1, [r4, #32]
   3de04:	add	r1, r0, #1
   3de08:	str	r1, [r4, #20]
   3de0c:	mov	r1, #91	; 0x5b
   3de10:	strb	r1, [r0]
   3de14:	beq	3e024 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2d0>
   3de18:	ldrb	r1, [r4, #25]
   3de1c:	ldr	r0, [r4, #20]
   3de20:	cmp	r1, #0
   3de24:	beq	3dee0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x18c>
   3de28:	add	r1, r0, #1
   3de2c:	str	r1, [r4, #20]
   3de30:	mov	r1, #10
   3de34:	strb	r1, [r0]
   3de38:	ldr	r0, [r4, #20]
   3de3c:	ldrb	r2, [r4, #25]
   3de40:	ldr	r3, [r4, #32]
   3de44:	ldr	r1, [r4, #16]
   3de48:	mla	r7, r3, r2, r0
   3de4c:	mul	r5, r3, r2
   3de50:	cmp	r7, r1
   3de54:	bls	3dec4 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x170>
   3de58:	cmp	r0, r1
   3de5c:	bcc	3de78 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x124>
   3de60:	ldr	r2, [r4, #44]	; 0x2c
   3de64:	mov	r0, r4
   3de68:	mov	r1, #0
   3de6c:	blx	r2
   3de70:	ldr	r1, [r4, #16]
   3de74:	ldr	r0, [r4, #20]
   3de78:	sub	r6, r1, r0
   3de7c:	cmp	r6, r5
   3de80:	bcs	3dec4 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x170>
   3de84:	mov	r1, #32
   3de88:	mov	r2, r6
   3de8c:	bl	14ef0 <memset@plt>
   3de90:	ldr	r0, [r4, #20]
   3de94:	ldr	r2, [r4, #44]	; 0x2c
   3de98:	mov	r1, #0
   3de9c:	add	r0, r0, r6
   3dea0:	str	r0, [r4, #20]
   3dea4:	mov	r0, r4
   3dea8:	blx	r2
   3deac:	ldr	r1, [r4, #16]
   3deb0:	ldr	r0, [r4, #20]
   3deb4:	sub	r5, r5, r6
   3deb8:	sub	r6, r1, r0
   3debc:	cmp	r5, r6
   3dec0:	bhi	3de84 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x130>
   3dec4:	mov	r1, #32
   3dec8:	mov	r2, r5
   3decc:	bl	14ef0 <memset@plt>
   3ded0:	ldr	r0, [r4, #20]
   3ded4:	add	r0, r0, r5
   3ded8:	str	r0, [r4, #20]
   3dedc:	b	3defc <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1a8>
   3dee0:	ldr	r1, [r4, #16]
   3dee4:	cmp	r0, r1
   3dee8:	bcc	3defc <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1a8>
   3deec:	ldr	r2, [r4, #44]	; 0x2c
   3def0:	mov	r0, r4
   3def4:	mov	r1, #0
   3def8:	blx	r2
   3defc:	ldrb	r1, [r8, #4]
   3df00:	mov	r0, r4
   3df04:	blx	sl
   3df08:	subs	r9, r9, #1
   3df0c:	beq	3e024 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2d0>
   3df10:	add	r7, r8, #5
   3df14:	mov	r8, #44	; 0x2c
   3df18:	ldr	r0, [r4, #20]
   3df1c:	sub	r9, r9, #1
   3df20:	add	r1, r0, #1
   3df24:	str	r1, [r4, #20]
   3df28:	strb	r8, [r0]
   3df2c:	ldrb	r1, [r4, #25]
   3df30:	ldr	r0, [r4, #20]
   3df34:	cmp	r1, #0
   3df38:	beq	3dff4 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2a0>
   3df3c:	add	r1, r0, #1
   3df40:	str	r1, [r4, #20]
   3df44:	mov	r1, #10
   3df48:	strb	r1, [r0]
   3df4c:	ldr	r0, [r4, #20]
   3df50:	ldrb	r2, [r4, #25]
   3df54:	ldr	r3, [r4, #32]
   3df58:	ldr	r1, [r4, #16]
   3df5c:	mla	r6, r3, r2, r0
   3df60:	mul	r5, r3, r2
   3df64:	cmp	r6, r1
   3df68:	bls	3dfd8 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x284>
   3df6c:	cmp	r0, r1
   3df70:	bcc	3df8c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x238>
   3df74:	ldr	r2, [r4, #44]	; 0x2c
   3df78:	mov	r0, r4
   3df7c:	mov	r1, #0
   3df80:	blx	r2
   3df84:	ldr	r1, [r4, #16]
   3df88:	ldr	r0, [r4, #20]
   3df8c:	sub	r6, r1, r0
   3df90:	cmp	r6, r5
   3df94:	bcs	3dfd8 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x284>
   3df98:	mov	r1, #32
   3df9c:	mov	r2, r6
   3dfa0:	bl	14ef0 <memset@plt>
   3dfa4:	ldr	r0, [r4, #20]
   3dfa8:	ldr	r2, [r4, #44]	; 0x2c
   3dfac:	mov	r1, #0
   3dfb0:	add	r0, r0, r6
   3dfb4:	str	r0, [r4, #20]
   3dfb8:	mov	r0, r4
   3dfbc:	blx	r2
   3dfc0:	ldr	r1, [r4, #16]
   3dfc4:	ldr	r0, [r4, #20]
   3dfc8:	sub	r5, r5, r6
   3dfcc:	sub	r6, r1, r0
   3dfd0:	cmp	r5, r6
   3dfd4:	bhi	3df98 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x244>
   3dfd8:	mov	r1, #32
   3dfdc:	mov	r2, r5
   3dfe0:	bl	14ef0 <memset@plt>
   3dfe4:	ldr	r0, [r4, #20]
   3dfe8:	add	r0, r0, r5
   3dfec:	str	r0, [r4, #20]
   3dff0:	b	3e010 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2bc>
   3dff4:	ldr	r1, [r4, #16]
   3dff8:	cmp	r0, r1
   3dffc:	bcc	3e010 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2bc>
   3e000:	ldr	r2, [r4, #44]	; 0x2c
   3e004:	mov	r0, r4
   3e008:	mov	r1, #0
   3e00c:	blx	r2
   3e010:	ldrb	r1, [r7], #1
   3e014:	mov	r0, r4
   3e018:	blx	sl
   3e01c:	cmp	r9, #0
   3e020:	bne	3df18 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1c4>
   3e024:	ldrb	r1, [r4, #25]
   3e028:	ldr	r0, [r4, #20]
   3e02c:	cmp	r1, #0
   3e030:	beq	3e0f0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x39c>
   3e034:	add	r1, r0, #1
   3e038:	str	r1, [r4, #20]
   3e03c:	mov	r1, #10
   3e040:	strb	r1, [r0]
   3e044:	ldr	r0, [r4, #32]
   3e048:	sub	r2, r0, #1
   3e04c:	str	r2, [r4, #32]
   3e050:	ldrb	r3, [r4, #25]
   3e054:	ldr	r0, [r4, #20]
   3e058:	ldr	r1, [r4, #16]
   3e05c:	mla	r7, r2, r3, r0
   3e060:	mul	r5, r2, r3
   3e064:	cmp	r7, r1
   3e068:	bls	3e0d8 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x384>
   3e06c:	cmp	r0, r1
   3e070:	bcc	3e08c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x338>
   3e074:	ldr	r2, [r4, #44]	; 0x2c
   3e078:	mov	r0, r4
   3e07c:	mov	r1, #0
   3e080:	blx	r2
   3e084:	ldr	r1, [r4, #16]
   3e088:	ldr	r0, [r4, #20]
   3e08c:	sub	r6, r1, r0
   3e090:	cmp	r6, r5
   3e094:	bcs	3e0d8 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x384>
   3e098:	mov	r1, #32
   3e09c:	mov	r2, r6
   3e0a0:	bl	14ef0 <memset@plt>
   3e0a4:	ldr	r0, [r4, #20]
   3e0a8:	ldr	r2, [r4, #44]	; 0x2c
   3e0ac:	mov	r1, #0
   3e0b0:	add	r0, r0, r6
   3e0b4:	str	r0, [r4, #20]
   3e0b8:	mov	r0, r4
   3e0bc:	blx	r2
   3e0c0:	ldr	r1, [r4, #16]
   3e0c4:	ldr	r0, [r4, #20]
   3e0c8:	sub	r5, r5, r6
   3e0cc:	sub	r6, r1, r0
   3e0d0:	cmp	r5, r6
   3e0d4:	bhi	3e098 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x344>
   3e0d8:	mov	r1, #32
   3e0dc:	mov	r2, r5
   3e0e0:	bl	14ef0 <memset@plt>
   3e0e4:	ldr	r0, [r4, #20]
   3e0e8:	add	r0, r0, r5
   3e0ec:	str	r0, [r4, #20]
   3e0f0:	add	r1, r0, #1
   3e0f4:	str	r1, [r4, #20]
   3e0f8:	mov	r1, #93	; 0x5d
   3e0fc:	strb	r1, [r0]
   3e100:	sub	sp, fp, #28
   3e104:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003e108 <flatcc_json_printer_uint16_enum_vector_field@@Base>:
   3e108:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3e10c:	add	fp, sp, #28
   3e110:	sub	sp, sp, #4
   3e114:	mov	r4, r0
   3e118:	ldrb	r0, [r0, #27]
   3e11c:	cmp	r0, #0
   3e120:	beq	3e134 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2c>
   3e124:	mov	r0, r4
   3e128:	sub	sp, fp, #28
   3e12c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3e130:	b	3b360 <flatcc_json_printer_uint16_vector_field@@Base>
   3e134:	mov	r0, #4
   3e138:	add	r0, r0, r2, lsl #1
   3e13c:	ldr	r2, [r1, #8]
   3e140:	cmp	r0, r2
   3e144:	bge	3e4b4 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x3ac>
   3e148:	ldr	r2, [r1, #4]
   3e14c:	add	r0, r2, r0
   3e150:	ldrh	r0, [r0]
   3e154:	cmp	r0, #0
   3e158:	ldrne	r2, [r1]
   3e15c:	addsne	r8, r2, r0
   3e160:	beq	3e4b4 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x3ac>
   3e164:	ldr	r0, [r1, #16]
   3e168:	ldr	sl, [fp, #12]
   3e16c:	ldr	r2, [fp, #8]
   3e170:	add	r7, r0, #1
   3e174:	cmp	r0, #0
   3e178:	str	r7, [r1, #16]
   3e17c:	ldrne	r0, [r4, #20]
   3e180:	addne	r1, r0, #1
   3e184:	strne	r1, [r4, #20]
   3e188:	movne	r1, #44	; 0x2c
   3e18c:	strbne	r1, [r0]
   3e190:	mov	r1, r3
   3e194:	ldr	r0, [r8]
   3e198:	ldr	r9, [r8, r0]!
   3e19c:	mov	r0, r4
   3e1a0:	bl	38c54 <flatcc_json_printer_string_field@@Base+0x8c>
   3e1a4:	ldr	r1, [r4, #32]
   3e1a8:	ldr	r0, [r4, #20]
   3e1ac:	cmp	r9, #0
   3e1b0:	add	r1, r1, #1
   3e1b4:	str	r1, [r4, #32]
   3e1b8:	add	r1, r0, #1
   3e1bc:	str	r1, [r4, #20]
   3e1c0:	mov	r1, #91	; 0x5b
   3e1c4:	strb	r1, [r0]
   3e1c8:	beq	3e3d8 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2d0>
   3e1cc:	ldrb	r1, [r4, #25]
   3e1d0:	ldr	r0, [r4, #20]
   3e1d4:	cmp	r1, #0
   3e1d8:	beq	3e294 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x18c>
   3e1dc:	add	r1, r0, #1
   3e1e0:	str	r1, [r4, #20]
   3e1e4:	mov	r1, #10
   3e1e8:	strb	r1, [r0]
   3e1ec:	ldr	r0, [r4, #20]
   3e1f0:	ldrb	r2, [r4, #25]
   3e1f4:	ldr	r3, [r4, #32]
   3e1f8:	ldr	r1, [r4, #16]
   3e1fc:	mla	r7, r3, r2, r0
   3e200:	mul	r5, r3, r2
   3e204:	cmp	r7, r1
   3e208:	bls	3e278 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x170>
   3e20c:	cmp	r0, r1
   3e210:	bcc	3e22c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x124>
   3e214:	ldr	r2, [r4, #44]	; 0x2c
   3e218:	mov	r0, r4
   3e21c:	mov	r1, #0
   3e220:	blx	r2
   3e224:	ldr	r1, [r4, #16]
   3e228:	ldr	r0, [r4, #20]
   3e22c:	sub	r6, r1, r0
   3e230:	cmp	r6, r5
   3e234:	bcs	3e278 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x170>
   3e238:	mov	r1, #32
   3e23c:	mov	r2, r6
   3e240:	bl	14ef0 <memset@plt>
   3e244:	ldr	r0, [r4, #20]
   3e248:	ldr	r2, [r4, #44]	; 0x2c
   3e24c:	mov	r1, #0
   3e250:	add	r0, r0, r6
   3e254:	str	r0, [r4, #20]
   3e258:	mov	r0, r4
   3e25c:	blx	r2
   3e260:	ldr	r1, [r4, #16]
   3e264:	ldr	r0, [r4, #20]
   3e268:	sub	r5, r5, r6
   3e26c:	sub	r6, r1, r0
   3e270:	cmp	r5, r6
   3e274:	bhi	3e238 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x130>
   3e278:	mov	r1, #32
   3e27c:	mov	r2, r5
   3e280:	bl	14ef0 <memset@plt>
   3e284:	ldr	r0, [r4, #20]
   3e288:	add	r0, r0, r5
   3e28c:	str	r0, [r4, #20]
   3e290:	b	3e2b0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1a8>
   3e294:	ldr	r1, [r4, #16]
   3e298:	cmp	r0, r1
   3e29c:	bcc	3e2b0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1a8>
   3e2a0:	ldr	r2, [r4, #44]	; 0x2c
   3e2a4:	mov	r0, r4
   3e2a8:	mov	r1, #0
   3e2ac:	blx	r2
   3e2b0:	ldrh	r1, [r8, #4]
   3e2b4:	mov	r0, r4
   3e2b8:	blx	sl
   3e2bc:	subs	r9, r9, #1
   3e2c0:	beq	3e3d8 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2d0>
   3e2c4:	add	r7, r8, #6
   3e2c8:	mov	r8, #44	; 0x2c
   3e2cc:	ldr	r0, [r4, #20]
   3e2d0:	sub	r9, r9, #1
   3e2d4:	add	r1, r0, #1
   3e2d8:	str	r1, [r4, #20]
   3e2dc:	strb	r8, [r0]
   3e2e0:	ldrb	r1, [r4, #25]
   3e2e4:	ldr	r0, [r4, #20]
   3e2e8:	cmp	r1, #0
   3e2ec:	beq	3e3a8 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2a0>
   3e2f0:	add	r1, r0, #1
   3e2f4:	str	r1, [r4, #20]
   3e2f8:	mov	r1, #10
   3e2fc:	strb	r1, [r0]
   3e300:	ldr	r0, [r4, #20]
   3e304:	ldrb	r2, [r4, #25]
   3e308:	ldr	r3, [r4, #32]
   3e30c:	ldr	r1, [r4, #16]
   3e310:	mla	r6, r3, r2, r0
   3e314:	mul	r5, r3, r2
   3e318:	cmp	r6, r1
   3e31c:	bls	3e38c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x284>
   3e320:	cmp	r0, r1
   3e324:	bcc	3e340 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x238>
   3e328:	ldr	r2, [r4, #44]	; 0x2c
   3e32c:	mov	r0, r4
   3e330:	mov	r1, #0
   3e334:	blx	r2
   3e338:	ldr	r1, [r4, #16]
   3e33c:	ldr	r0, [r4, #20]
   3e340:	sub	r6, r1, r0
   3e344:	cmp	r6, r5
   3e348:	bcs	3e38c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x284>
   3e34c:	mov	r1, #32
   3e350:	mov	r2, r6
   3e354:	bl	14ef0 <memset@plt>
   3e358:	ldr	r0, [r4, #20]
   3e35c:	ldr	r2, [r4, #44]	; 0x2c
   3e360:	mov	r1, #0
   3e364:	add	r0, r0, r6
   3e368:	str	r0, [r4, #20]
   3e36c:	mov	r0, r4
   3e370:	blx	r2
   3e374:	ldr	r1, [r4, #16]
   3e378:	ldr	r0, [r4, #20]
   3e37c:	sub	r5, r5, r6
   3e380:	sub	r6, r1, r0
   3e384:	cmp	r5, r6
   3e388:	bhi	3e34c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x244>
   3e38c:	mov	r1, #32
   3e390:	mov	r2, r5
   3e394:	bl	14ef0 <memset@plt>
   3e398:	ldr	r0, [r4, #20]
   3e39c:	add	r0, r0, r5
   3e3a0:	str	r0, [r4, #20]
   3e3a4:	b	3e3c4 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2bc>
   3e3a8:	ldr	r1, [r4, #16]
   3e3ac:	cmp	r0, r1
   3e3b0:	bcc	3e3c4 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2bc>
   3e3b4:	ldr	r2, [r4, #44]	; 0x2c
   3e3b8:	mov	r0, r4
   3e3bc:	mov	r1, #0
   3e3c0:	blx	r2
   3e3c4:	ldrh	r1, [r7], #2
   3e3c8:	mov	r0, r4
   3e3cc:	blx	sl
   3e3d0:	cmp	r9, #0
   3e3d4:	bne	3e2cc <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1c4>
   3e3d8:	ldrb	r1, [r4, #25]
   3e3dc:	ldr	r0, [r4, #20]
   3e3e0:	cmp	r1, #0
   3e3e4:	beq	3e4a4 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x39c>
   3e3e8:	add	r1, r0, #1
   3e3ec:	str	r1, [r4, #20]
   3e3f0:	mov	r1, #10
   3e3f4:	strb	r1, [r0]
   3e3f8:	ldr	r0, [r4, #32]
   3e3fc:	sub	r2, r0, #1
   3e400:	str	r2, [r4, #32]
   3e404:	ldrb	r3, [r4, #25]
   3e408:	ldr	r0, [r4, #20]
   3e40c:	ldr	r1, [r4, #16]
   3e410:	mla	r7, r2, r3, r0
   3e414:	mul	r5, r2, r3
   3e418:	cmp	r7, r1
   3e41c:	bls	3e48c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x384>
   3e420:	cmp	r0, r1
   3e424:	bcc	3e440 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x338>
   3e428:	ldr	r2, [r4, #44]	; 0x2c
   3e42c:	mov	r0, r4
   3e430:	mov	r1, #0
   3e434:	blx	r2
   3e438:	ldr	r1, [r4, #16]
   3e43c:	ldr	r0, [r4, #20]
   3e440:	sub	r6, r1, r0
   3e444:	cmp	r6, r5
   3e448:	bcs	3e48c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x384>
   3e44c:	mov	r1, #32
   3e450:	mov	r2, r6
   3e454:	bl	14ef0 <memset@plt>
   3e458:	ldr	r0, [r4, #20]
   3e45c:	ldr	r2, [r4, #44]	; 0x2c
   3e460:	mov	r1, #0
   3e464:	add	r0, r0, r6
   3e468:	str	r0, [r4, #20]
   3e46c:	mov	r0, r4
   3e470:	blx	r2
   3e474:	ldr	r1, [r4, #16]
   3e478:	ldr	r0, [r4, #20]
   3e47c:	sub	r5, r5, r6
   3e480:	sub	r6, r1, r0
   3e484:	cmp	r5, r6
   3e488:	bhi	3e44c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x344>
   3e48c:	mov	r1, #32
   3e490:	mov	r2, r5
   3e494:	bl	14ef0 <memset@plt>
   3e498:	ldr	r0, [r4, #20]
   3e49c:	add	r0, r0, r5
   3e4a0:	str	r0, [r4, #20]
   3e4a4:	add	r1, r0, #1
   3e4a8:	str	r1, [r4, #20]
   3e4ac:	mov	r1, #93	; 0x5d
   3e4b0:	strb	r1, [r0]
   3e4b4:	sub	sp, fp, #28
   3e4b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003e4bc <flatcc_json_printer_uint32_enum_vector_field@@Base>:
   3e4bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3e4c0:	add	fp, sp, #28
   3e4c4:	sub	sp, sp, #4
   3e4c8:	mov	r4, r0
   3e4cc:	ldrb	r0, [r0, #27]
   3e4d0:	cmp	r0, #0
   3e4d4:	beq	3e4e8 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2c>
   3e4d8:	mov	r0, r4
   3e4dc:	sub	sp, fp, #28
   3e4e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3e4e4:	b	3b70c <flatcc_json_printer_uint32_vector_field@@Base>
   3e4e8:	mov	r0, #4
   3e4ec:	add	r0, r0, r2, lsl #1
   3e4f0:	ldr	r2, [r1, #8]
   3e4f4:	cmp	r0, r2
   3e4f8:	bge	3e868 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x3ac>
   3e4fc:	ldr	r2, [r1, #4]
   3e500:	add	r0, r2, r0
   3e504:	ldrh	r0, [r0]
   3e508:	cmp	r0, #0
   3e50c:	ldrne	r2, [r1]
   3e510:	addsne	r8, r2, r0
   3e514:	beq	3e868 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x3ac>
   3e518:	ldr	r0, [r1, #16]
   3e51c:	ldr	sl, [fp, #12]
   3e520:	ldr	r2, [fp, #8]
   3e524:	add	r7, r0, #1
   3e528:	cmp	r0, #0
   3e52c:	str	r7, [r1, #16]
   3e530:	ldrne	r0, [r4, #20]
   3e534:	addne	r1, r0, #1
   3e538:	strne	r1, [r4, #20]
   3e53c:	movne	r1, #44	; 0x2c
   3e540:	strbne	r1, [r0]
   3e544:	mov	r1, r3
   3e548:	ldr	r0, [r8]
   3e54c:	ldr	r9, [r8, r0]!
   3e550:	mov	r0, r4
   3e554:	bl	38c54 <flatcc_json_printer_string_field@@Base+0x8c>
   3e558:	ldr	r1, [r4, #32]
   3e55c:	ldr	r0, [r4, #20]
   3e560:	cmp	r9, #0
   3e564:	add	r1, r1, #1
   3e568:	str	r1, [r4, #32]
   3e56c:	add	r1, r0, #1
   3e570:	str	r1, [r4, #20]
   3e574:	mov	r1, #91	; 0x5b
   3e578:	strb	r1, [r0]
   3e57c:	beq	3e78c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2d0>
   3e580:	ldrb	r1, [r4, #25]
   3e584:	ldr	r0, [r4, #20]
   3e588:	cmp	r1, #0
   3e58c:	beq	3e648 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x18c>
   3e590:	add	r1, r0, #1
   3e594:	str	r1, [r4, #20]
   3e598:	mov	r1, #10
   3e59c:	strb	r1, [r0]
   3e5a0:	ldr	r0, [r4, #20]
   3e5a4:	ldrb	r2, [r4, #25]
   3e5a8:	ldr	r3, [r4, #32]
   3e5ac:	ldr	r1, [r4, #16]
   3e5b0:	mla	r7, r3, r2, r0
   3e5b4:	mul	r5, r3, r2
   3e5b8:	cmp	r7, r1
   3e5bc:	bls	3e62c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x170>
   3e5c0:	cmp	r0, r1
   3e5c4:	bcc	3e5e0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x124>
   3e5c8:	ldr	r2, [r4, #44]	; 0x2c
   3e5cc:	mov	r0, r4
   3e5d0:	mov	r1, #0
   3e5d4:	blx	r2
   3e5d8:	ldr	r1, [r4, #16]
   3e5dc:	ldr	r0, [r4, #20]
   3e5e0:	sub	r6, r1, r0
   3e5e4:	cmp	r6, r5
   3e5e8:	bcs	3e62c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x170>
   3e5ec:	mov	r1, #32
   3e5f0:	mov	r2, r6
   3e5f4:	bl	14ef0 <memset@plt>
   3e5f8:	ldr	r0, [r4, #20]
   3e5fc:	ldr	r2, [r4, #44]	; 0x2c
   3e600:	mov	r1, #0
   3e604:	add	r0, r0, r6
   3e608:	str	r0, [r4, #20]
   3e60c:	mov	r0, r4
   3e610:	blx	r2
   3e614:	ldr	r1, [r4, #16]
   3e618:	ldr	r0, [r4, #20]
   3e61c:	sub	r5, r5, r6
   3e620:	sub	r6, r1, r0
   3e624:	cmp	r5, r6
   3e628:	bhi	3e5ec <flatcc_json_printer_uint32_enum_vector_field@@Base+0x130>
   3e62c:	mov	r1, #32
   3e630:	mov	r2, r5
   3e634:	bl	14ef0 <memset@plt>
   3e638:	ldr	r0, [r4, #20]
   3e63c:	add	r0, r0, r5
   3e640:	str	r0, [r4, #20]
   3e644:	b	3e664 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1a8>
   3e648:	ldr	r1, [r4, #16]
   3e64c:	cmp	r0, r1
   3e650:	bcc	3e664 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1a8>
   3e654:	ldr	r2, [r4, #44]	; 0x2c
   3e658:	mov	r0, r4
   3e65c:	mov	r1, #0
   3e660:	blx	r2
   3e664:	ldr	r1, [r8, #4]
   3e668:	mov	r0, r4
   3e66c:	blx	sl
   3e670:	subs	r9, r9, #1
   3e674:	beq	3e78c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2d0>
   3e678:	add	r7, r8, #8
   3e67c:	mov	r8, #44	; 0x2c
   3e680:	ldr	r0, [r4, #20]
   3e684:	sub	r9, r9, #1
   3e688:	add	r1, r0, #1
   3e68c:	str	r1, [r4, #20]
   3e690:	strb	r8, [r0]
   3e694:	ldrb	r1, [r4, #25]
   3e698:	ldr	r0, [r4, #20]
   3e69c:	cmp	r1, #0
   3e6a0:	beq	3e75c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2a0>
   3e6a4:	add	r1, r0, #1
   3e6a8:	str	r1, [r4, #20]
   3e6ac:	mov	r1, #10
   3e6b0:	strb	r1, [r0]
   3e6b4:	ldr	r0, [r4, #20]
   3e6b8:	ldrb	r2, [r4, #25]
   3e6bc:	ldr	r3, [r4, #32]
   3e6c0:	ldr	r1, [r4, #16]
   3e6c4:	mla	r6, r3, r2, r0
   3e6c8:	mul	r5, r3, r2
   3e6cc:	cmp	r6, r1
   3e6d0:	bls	3e740 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x284>
   3e6d4:	cmp	r0, r1
   3e6d8:	bcc	3e6f4 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x238>
   3e6dc:	ldr	r2, [r4, #44]	; 0x2c
   3e6e0:	mov	r0, r4
   3e6e4:	mov	r1, #0
   3e6e8:	blx	r2
   3e6ec:	ldr	r1, [r4, #16]
   3e6f0:	ldr	r0, [r4, #20]
   3e6f4:	sub	r6, r1, r0
   3e6f8:	cmp	r6, r5
   3e6fc:	bcs	3e740 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x284>
   3e700:	mov	r1, #32
   3e704:	mov	r2, r6
   3e708:	bl	14ef0 <memset@plt>
   3e70c:	ldr	r0, [r4, #20]
   3e710:	ldr	r2, [r4, #44]	; 0x2c
   3e714:	mov	r1, #0
   3e718:	add	r0, r0, r6
   3e71c:	str	r0, [r4, #20]
   3e720:	mov	r0, r4
   3e724:	blx	r2
   3e728:	ldr	r1, [r4, #16]
   3e72c:	ldr	r0, [r4, #20]
   3e730:	sub	r5, r5, r6
   3e734:	sub	r6, r1, r0
   3e738:	cmp	r5, r6
   3e73c:	bhi	3e700 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x244>
   3e740:	mov	r1, #32
   3e744:	mov	r2, r5
   3e748:	bl	14ef0 <memset@plt>
   3e74c:	ldr	r0, [r4, #20]
   3e750:	add	r0, r0, r5
   3e754:	str	r0, [r4, #20]
   3e758:	b	3e778 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2bc>
   3e75c:	ldr	r1, [r4, #16]
   3e760:	cmp	r0, r1
   3e764:	bcc	3e778 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2bc>
   3e768:	ldr	r2, [r4, #44]	; 0x2c
   3e76c:	mov	r0, r4
   3e770:	mov	r1, #0
   3e774:	blx	r2
   3e778:	ldr	r1, [r7], #4
   3e77c:	mov	r0, r4
   3e780:	blx	sl
   3e784:	cmp	r9, #0
   3e788:	bne	3e680 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1c4>
   3e78c:	ldrb	r1, [r4, #25]
   3e790:	ldr	r0, [r4, #20]
   3e794:	cmp	r1, #0
   3e798:	beq	3e858 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x39c>
   3e79c:	add	r1, r0, #1
   3e7a0:	str	r1, [r4, #20]
   3e7a4:	mov	r1, #10
   3e7a8:	strb	r1, [r0]
   3e7ac:	ldr	r0, [r4, #32]
   3e7b0:	sub	r2, r0, #1
   3e7b4:	str	r2, [r4, #32]
   3e7b8:	ldrb	r3, [r4, #25]
   3e7bc:	ldr	r0, [r4, #20]
   3e7c0:	ldr	r1, [r4, #16]
   3e7c4:	mla	r7, r2, r3, r0
   3e7c8:	mul	r5, r2, r3
   3e7cc:	cmp	r7, r1
   3e7d0:	bls	3e840 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x384>
   3e7d4:	cmp	r0, r1
   3e7d8:	bcc	3e7f4 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x338>
   3e7dc:	ldr	r2, [r4, #44]	; 0x2c
   3e7e0:	mov	r0, r4
   3e7e4:	mov	r1, #0
   3e7e8:	blx	r2
   3e7ec:	ldr	r1, [r4, #16]
   3e7f0:	ldr	r0, [r4, #20]
   3e7f4:	sub	r6, r1, r0
   3e7f8:	cmp	r6, r5
   3e7fc:	bcs	3e840 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x384>
   3e800:	mov	r1, #32
   3e804:	mov	r2, r6
   3e808:	bl	14ef0 <memset@plt>
   3e80c:	ldr	r0, [r4, #20]
   3e810:	ldr	r2, [r4, #44]	; 0x2c
   3e814:	mov	r1, #0
   3e818:	add	r0, r0, r6
   3e81c:	str	r0, [r4, #20]
   3e820:	mov	r0, r4
   3e824:	blx	r2
   3e828:	ldr	r1, [r4, #16]
   3e82c:	ldr	r0, [r4, #20]
   3e830:	sub	r5, r5, r6
   3e834:	sub	r6, r1, r0
   3e838:	cmp	r5, r6
   3e83c:	bhi	3e800 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x344>
   3e840:	mov	r1, #32
   3e844:	mov	r2, r5
   3e848:	bl	14ef0 <memset@plt>
   3e84c:	ldr	r0, [r4, #20]
   3e850:	add	r0, r0, r5
   3e854:	str	r0, [r4, #20]
   3e858:	add	r1, r0, #1
   3e85c:	str	r1, [r4, #20]
   3e860:	mov	r1, #93	; 0x5d
   3e864:	strb	r1, [r0]
   3e868:	sub	sp, fp, #28
   3e86c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003e870 <flatcc_json_printer_uint64_enum_vector_field@@Base>:
   3e870:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3e874:	add	fp, sp, #28
   3e878:	sub	sp, sp, #4
   3e87c:	mov	r4, r0
   3e880:	ldrb	r0, [r0, #27]
   3e884:	cmp	r0, #0
   3e888:	beq	3e89c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2c>
   3e88c:	mov	r0, r4
   3e890:	sub	sp, fp, #28
   3e894:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3e898:	b	3bab8 <flatcc_json_printer_uint64_vector_field@@Base>
   3e89c:	mov	r0, #4
   3e8a0:	add	r0, r0, r2, lsl #1
   3e8a4:	ldr	r2, [r1, #8]
   3e8a8:	cmp	r0, r2
   3e8ac:	bge	3ec20 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x3b0>
   3e8b0:	ldr	r2, [r1, #4]
   3e8b4:	add	r0, r2, r0
   3e8b8:	ldrh	r0, [r0]
   3e8bc:	cmp	r0, #0
   3e8c0:	ldrne	r2, [r1]
   3e8c4:	addsne	r8, r2, r0
   3e8c8:	beq	3ec20 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x3b0>
   3e8cc:	ldr	r0, [r1, #16]
   3e8d0:	ldr	sl, [fp, #12]
   3e8d4:	ldr	r2, [fp, #8]
   3e8d8:	add	r7, r0, #1
   3e8dc:	cmp	r0, #0
   3e8e0:	str	r7, [r1, #16]
   3e8e4:	ldrne	r0, [r4, #20]
   3e8e8:	addne	r1, r0, #1
   3e8ec:	strne	r1, [r4, #20]
   3e8f0:	movne	r1, #44	; 0x2c
   3e8f4:	strbne	r1, [r0]
   3e8f8:	mov	r1, r3
   3e8fc:	ldr	r0, [r8]
   3e900:	ldr	r9, [r8, r0]!
   3e904:	mov	r0, r4
   3e908:	bl	38c54 <flatcc_json_printer_string_field@@Base+0x8c>
   3e90c:	ldr	r1, [r4, #32]
   3e910:	ldr	r0, [r4, #20]
   3e914:	cmp	r9, #0
   3e918:	add	r1, r1, #1
   3e91c:	str	r1, [r4, #32]
   3e920:	add	r1, r0, #1
   3e924:	str	r1, [r4, #20]
   3e928:	mov	r1, #91	; 0x5b
   3e92c:	strb	r1, [r0]
   3e930:	beq	3eb44 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2d4>
   3e934:	ldrb	r1, [r4, #25]
   3e938:	ldr	r0, [r4, #20]
   3e93c:	cmp	r1, #0
   3e940:	beq	3e9fc <flatcc_json_printer_uint64_enum_vector_field@@Base+0x18c>
   3e944:	add	r1, r0, #1
   3e948:	str	r1, [r4, #20]
   3e94c:	mov	r1, #10
   3e950:	strb	r1, [r0]
   3e954:	ldr	r0, [r4, #20]
   3e958:	ldrb	r2, [r4, #25]
   3e95c:	ldr	r3, [r4, #32]
   3e960:	ldr	r1, [r4, #16]
   3e964:	mla	r7, r3, r2, r0
   3e968:	mul	r5, r3, r2
   3e96c:	cmp	r7, r1
   3e970:	bls	3e9e0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x170>
   3e974:	cmp	r0, r1
   3e978:	bcc	3e994 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x124>
   3e97c:	ldr	r2, [r4, #44]	; 0x2c
   3e980:	mov	r0, r4
   3e984:	mov	r1, #0
   3e988:	blx	r2
   3e98c:	ldr	r1, [r4, #16]
   3e990:	ldr	r0, [r4, #20]
   3e994:	sub	r6, r1, r0
   3e998:	cmp	r6, r5
   3e99c:	bcs	3e9e0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x170>
   3e9a0:	mov	r1, #32
   3e9a4:	mov	r2, r6
   3e9a8:	bl	14ef0 <memset@plt>
   3e9ac:	ldr	r0, [r4, #20]
   3e9b0:	ldr	r2, [r4, #44]	; 0x2c
   3e9b4:	mov	r1, #0
   3e9b8:	add	r0, r0, r6
   3e9bc:	str	r0, [r4, #20]
   3e9c0:	mov	r0, r4
   3e9c4:	blx	r2
   3e9c8:	ldr	r1, [r4, #16]
   3e9cc:	ldr	r0, [r4, #20]
   3e9d0:	sub	r5, r5, r6
   3e9d4:	sub	r6, r1, r0
   3e9d8:	cmp	r5, r6
   3e9dc:	bhi	3e9a0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x130>
   3e9e0:	mov	r1, #32
   3e9e4:	mov	r2, r5
   3e9e8:	bl	14ef0 <memset@plt>
   3e9ec:	ldr	r0, [r4, #20]
   3e9f0:	add	r0, r0, r5
   3e9f4:	str	r0, [r4, #20]
   3e9f8:	b	3ea18 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1a8>
   3e9fc:	ldr	r1, [r4, #16]
   3ea00:	cmp	r0, r1
   3ea04:	bcc	3ea18 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1a8>
   3ea08:	ldr	r2, [r4, #44]	; 0x2c
   3ea0c:	mov	r0, r4
   3ea10:	mov	r1, #0
   3ea14:	blx	r2
   3ea18:	ldrd	r2, [r8, #4]
   3ea1c:	mov	r0, r4
   3ea20:	blx	sl
   3ea24:	subs	r9, r9, #1
   3ea28:	beq	3eb44 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2d4>
   3ea2c:	add	r7, r8, #12
   3ea30:	mov	r8, #44	; 0x2c
   3ea34:	ldr	r0, [r4, #20]
   3ea38:	sub	r9, r9, #1
   3ea3c:	add	r1, r0, #1
   3ea40:	str	r1, [r4, #20]
   3ea44:	strb	r8, [r0]
   3ea48:	ldrb	r1, [r4, #25]
   3ea4c:	ldr	r0, [r4, #20]
   3ea50:	cmp	r1, #0
   3ea54:	beq	3eb10 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2a0>
   3ea58:	add	r1, r0, #1
   3ea5c:	str	r1, [r4, #20]
   3ea60:	mov	r1, #10
   3ea64:	strb	r1, [r0]
   3ea68:	ldr	r0, [r4, #20]
   3ea6c:	ldrb	r2, [r4, #25]
   3ea70:	ldr	r3, [r4, #32]
   3ea74:	ldr	r1, [r4, #16]
   3ea78:	mla	r6, r3, r2, r0
   3ea7c:	mul	r5, r3, r2
   3ea80:	cmp	r6, r1
   3ea84:	bls	3eaf4 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x284>
   3ea88:	cmp	r0, r1
   3ea8c:	bcc	3eaa8 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x238>
   3ea90:	ldr	r2, [r4, #44]	; 0x2c
   3ea94:	mov	r0, r4
   3ea98:	mov	r1, #0
   3ea9c:	blx	r2
   3eaa0:	ldr	r1, [r4, #16]
   3eaa4:	ldr	r0, [r4, #20]
   3eaa8:	sub	r6, r1, r0
   3eaac:	cmp	r6, r5
   3eab0:	bcs	3eaf4 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x284>
   3eab4:	mov	r1, #32
   3eab8:	mov	r2, r6
   3eabc:	bl	14ef0 <memset@plt>
   3eac0:	ldr	r0, [r4, #20]
   3eac4:	ldr	r2, [r4, #44]	; 0x2c
   3eac8:	mov	r1, #0
   3eacc:	add	r0, r0, r6
   3ead0:	str	r0, [r4, #20]
   3ead4:	mov	r0, r4
   3ead8:	blx	r2
   3eadc:	ldr	r1, [r4, #16]
   3eae0:	ldr	r0, [r4, #20]
   3eae4:	sub	r5, r5, r6
   3eae8:	sub	r6, r1, r0
   3eaec:	cmp	r5, r6
   3eaf0:	bhi	3eab4 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x244>
   3eaf4:	mov	r1, #32
   3eaf8:	mov	r2, r5
   3eafc:	bl	14ef0 <memset@plt>
   3eb00:	ldr	r0, [r4, #20]
   3eb04:	add	r0, r0, r5
   3eb08:	str	r0, [r4, #20]
   3eb0c:	b	3eb2c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2bc>
   3eb10:	ldr	r1, [r4, #16]
   3eb14:	cmp	r0, r1
   3eb18:	bcc	3eb2c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2bc>
   3eb1c:	ldr	r2, [r4, #44]	; 0x2c
   3eb20:	mov	r0, r4
   3eb24:	mov	r1, #0
   3eb28:	blx	r2
   3eb2c:	ldrd	r2, [r7]
   3eb30:	mov	r0, r4
   3eb34:	blx	sl
   3eb38:	add	r7, r7, #8
   3eb3c:	cmp	r9, #0
   3eb40:	bne	3ea34 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1c4>
   3eb44:	ldrb	r1, [r4, #25]
   3eb48:	ldr	r0, [r4, #20]
   3eb4c:	cmp	r1, #0
   3eb50:	beq	3ec10 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x3a0>
   3eb54:	add	r1, r0, #1
   3eb58:	str	r1, [r4, #20]
   3eb5c:	mov	r1, #10
   3eb60:	strb	r1, [r0]
   3eb64:	ldr	r0, [r4, #32]
   3eb68:	sub	r2, r0, #1
   3eb6c:	str	r2, [r4, #32]
   3eb70:	ldrb	r3, [r4, #25]
   3eb74:	ldr	r0, [r4, #20]
   3eb78:	ldr	r1, [r4, #16]
   3eb7c:	mla	r7, r2, r3, r0
   3eb80:	mul	r5, r2, r3
   3eb84:	cmp	r7, r1
   3eb88:	bls	3ebf8 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x388>
   3eb8c:	cmp	r0, r1
   3eb90:	bcc	3ebac <flatcc_json_printer_uint64_enum_vector_field@@Base+0x33c>
   3eb94:	ldr	r2, [r4, #44]	; 0x2c
   3eb98:	mov	r0, r4
   3eb9c:	mov	r1, #0
   3eba0:	blx	r2
   3eba4:	ldr	r1, [r4, #16]
   3eba8:	ldr	r0, [r4, #20]
   3ebac:	sub	r6, r1, r0
   3ebb0:	cmp	r6, r5
   3ebb4:	bcs	3ebf8 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x388>
   3ebb8:	mov	r1, #32
   3ebbc:	mov	r2, r6
   3ebc0:	bl	14ef0 <memset@plt>
   3ebc4:	ldr	r0, [r4, #20]
   3ebc8:	ldr	r2, [r4, #44]	; 0x2c
   3ebcc:	mov	r1, #0
   3ebd0:	add	r0, r0, r6
   3ebd4:	str	r0, [r4, #20]
   3ebd8:	mov	r0, r4
   3ebdc:	blx	r2
   3ebe0:	ldr	r1, [r4, #16]
   3ebe4:	ldr	r0, [r4, #20]
   3ebe8:	sub	r5, r5, r6
   3ebec:	sub	r6, r1, r0
   3ebf0:	cmp	r5, r6
   3ebf4:	bhi	3ebb8 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x348>
   3ebf8:	mov	r1, #32
   3ebfc:	mov	r2, r5
   3ec00:	bl	14ef0 <memset@plt>
   3ec04:	ldr	r0, [r4, #20]
   3ec08:	add	r0, r0, r5
   3ec0c:	str	r0, [r4, #20]
   3ec10:	add	r1, r0, #1
   3ec14:	str	r1, [r4, #20]
   3ec18:	mov	r1, #93	; 0x5d
   3ec1c:	strb	r1, [r0]
   3ec20:	sub	sp, fp, #28
   3ec24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003ec28 <flatcc_json_printer_int8_enum_vector_field@@Base>:
   3ec28:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3ec2c:	add	fp, sp, #28
   3ec30:	sub	sp, sp, #4
   3ec34:	mov	r4, r0
   3ec38:	ldrb	r0, [r0, #27]
   3ec3c:	cmp	r0, #0
   3ec40:	beq	3ec54 <flatcc_json_printer_int8_enum_vector_field@@Base+0x2c>
   3ec44:	mov	r0, r4
   3ec48:	sub	sp, fp, #28
   3ec4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3ec50:	b	3be68 <flatcc_json_printer_int8_vector_field@@Base>
   3ec54:	mov	r0, #4
   3ec58:	add	r0, r0, r2, lsl #1
   3ec5c:	ldr	r2, [r1, #8]
   3ec60:	cmp	r0, r2
   3ec64:	bge	3efd4 <flatcc_json_printer_int8_enum_vector_field@@Base+0x3ac>
   3ec68:	ldr	r2, [r1, #4]
   3ec6c:	add	r0, r2, r0
   3ec70:	ldrh	r0, [r0]
   3ec74:	cmp	r0, #0
   3ec78:	ldrne	r2, [r1]
   3ec7c:	addsne	r8, r2, r0
   3ec80:	beq	3efd4 <flatcc_json_printer_int8_enum_vector_field@@Base+0x3ac>
   3ec84:	ldr	r0, [r1, #16]
   3ec88:	ldr	sl, [fp, #12]
   3ec8c:	ldr	r2, [fp, #8]
   3ec90:	add	r7, r0, #1
   3ec94:	cmp	r0, #0
   3ec98:	str	r7, [r1, #16]
   3ec9c:	ldrne	r0, [r4, #20]
   3eca0:	addne	r1, r0, #1
   3eca4:	strne	r1, [r4, #20]
   3eca8:	movne	r1, #44	; 0x2c
   3ecac:	strbne	r1, [r0]
   3ecb0:	mov	r1, r3
   3ecb4:	ldr	r0, [r8]
   3ecb8:	ldr	r9, [r8, r0]!
   3ecbc:	mov	r0, r4
   3ecc0:	bl	38c54 <flatcc_json_printer_string_field@@Base+0x8c>
   3ecc4:	ldr	r1, [r4, #32]
   3ecc8:	ldr	r0, [r4, #20]
   3eccc:	cmp	r9, #0
   3ecd0:	add	r1, r1, #1
   3ecd4:	str	r1, [r4, #32]
   3ecd8:	add	r1, r0, #1
   3ecdc:	str	r1, [r4, #20]
   3ece0:	mov	r1, #91	; 0x5b
   3ece4:	strb	r1, [r0]
   3ece8:	beq	3eef8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x2d0>
   3ecec:	ldrb	r1, [r4, #25]
   3ecf0:	ldr	r0, [r4, #20]
   3ecf4:	cmp	r1, #0
   3ecf8:	beq	3edb4 <flatcc_json_printer_int8_enum_vector_field@@Base+0x18c>
   3ecfc:	add	r1, r0, #1
   3ed00:	str	r1, [r4, #20]
   3ed04:	mov	r1, #10
   3ed08:	strb	r1, [r0]
   3ed0c:	ldr	r0, [r4, #20]
   3ed10:	ldrb	r2, [r4, #25]
   3ed14:	ldr	r3, [r4, #32]
   3ed18:	ldr	r1, [r4, #16]
   3ed1c:	mla	r7, r3, r2, r0
   3ed20:	mul	r5, r3, r2
   3ed24:	cmp	r7, r1
   3ed28:	bls	3ed98 <flatcc_json_printer_int8_enum_vector_field@@Base+0x170>
   3ed2c:	cmp	r0, r1
   3ed30:	bcc	3ed4c <flatcc_json_printer_int8_enum_vector_field@@Base+0x124>
   3ed34:	ldr	r2, [r4, #44]	; 0x2c
   3ed38:	mov	r0, r4
   3ed3c:	mov	r1, #0
   3ed40:	blx	r2
   3ed44:	ldr	r1, [r4, #16]
   3ed48:	ldr	r0, [r4, #20]
   3ed4c:	sub	r6, r1, r0
   3ed50:	cmp	r6, r5
   3ed54:	bcs	3ed98 <flatcc_json_printer_int8_enum_vector_field@@Base+0x170>
   3ed58:	mov	r1, #32
   3ed5c:	mov	r2, r6
   3ed60:	bl	14ef0 <memset@plt>
   3ed64:	ldr	r0, [r4, #20]
   3ed68:	ldr	r2, [r4, #44]	; 0x2c
   3ed6c:	mov	r1, #0
   3ed70:	add	r0, r0, r6
   3ed74:	str	r0, [r4, #20]
   3ed78:	mov	r0, r4
   3ed7c:	blx	r2
   3ed80:	ldr	r1, [r4, #16]
   3ed84:	ldr	r0, [r4, #20]
   3ed88:	sub	r5, r5, r6
   3ed8c:	sub	r6, r1, r0
   3ed90:	cmp	r5, r6
   3ed94:	bhi	3ed58 <flatcc_json_printer_int8_enum_vector_field@@Base+0x130>
   3ed98:	mov	r1, #32
   3ed9c:	mov	r2, r5
   3eda0:	bl	14ef0 <memset@plt>
   3eda4:	ldr	r0, [r4, #20]
   3eda8:	add	r0, r0, r5
   3edac:	str	r0, [r4, #20]
   3edb0:	b	3edd0 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1a8>
   3edb4:	ldr	r1, [r4, #16]
   3edb8:	cmp	r0, r1
   3edbc:	bcc	3edd0 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1a8>
   3edc0:	ldr	r2, [r4, #44]	; 0x2c
   3edc4:	mov	r0, r4
   3edc8:	mov	r1, #0
   3edcc:	blx	r2
   3edd0:	ldrsb	r1, [r8, #4]
   3edd4:	mov	r0, r4
   3edd8:	blx	sl
   3eddc:	subs	r9, r9, #1
   3ede0:	beq	3eef8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x2d0>
   3ede4:	add	r7, r8, #5
   3ede8:	mov	r8, #44	; 0x2c
   3edec:	ldr	r0, [r4, #20]
   3edf0:	sub	r9, r9, #1
   3edf4:	add	r1, r0, #1
   3edf8:	str	r1, [r4, #20]
   3edfc:	strb	r8, [r0]
   3ee00:	ldrb	r1, [r4, #25]
   3ee04:	ldr	r0, [r4, #20]
   3ee08:	cmp	r1, #0
   3ee0c:	beq	3eec8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x2a0>
   3ee10:	add	r1, r0, #1
   3ee14:	str	r1, [r4, #20]
   3ee18:	mov	r1, #10
   3ee1c:	strb	r1, [r0]
   3ee20:	ldr	r0, [r4, #20]
   3ee24:	ldrb	r2, [r4, #25]
   3ee28:	ldr	r3, [r4, #32]
   3ee2c:	ldr	r1, [r4, #16]
   3ee30:	mla	r6, r3, r2, r0
   3ee34:	mul	r5, r3, r2
   3ee38:	cmp	r6, r1
   3ee3c:	bls	3eeac <flatcc_json_printer_int8_enum_vector_field@@Base+0x284>
   3ee40:	cmp	r0, r1
   3ee44:	bcc	3ee60 <flatcc_json_printer_int8_enum_vector_field@@Base+0x238>
   3ee48:	ldr	r2, [r4, #44]	; 0x2c
   3ee4c:	mov	r0, r4
   3ee50:	mov	r1, #0
   3ee54:	blx	r2
   3ee58:	ldr	r1, [r4, #16]
   3ee5c:	ldr	r0, [r4, #20]
   3ee60:	sub	r6, r1, r0
   3ee64:	cmp	r6, r5
   3ee68:	bcs	3eeac <flatcc_json_printer_int8_enum_vector_field@@Base+0x284>
   3ee6c:	mov	r1, #32
   3ee70:	mov	r2, r6
   3ee74:	bl	14ef0 <memset@plt>
   3ee78:	ldr	r0, [r4, #20]
   3ee7c:	ldr	r2, [r4, #44]	; 0x2c
   3ee80:	mov	r1, #0
   3ee84:	add	r0, r0, r6
   3ee88:	str	r0, [r4, #20]
   3ee8c:	mov	r0, r4
   3ee90:	blx	r2
   3ee94:	ldr	r1, [r4, #16]
   3ee98:	ldr	r0, [r4, #20]
   3ee9c:	sub	r5, r5, r6
   3eea0:	sub	r6, r1, r0
   3eea4:	cmp	r5, r6
   3eea8:	bhi	3ee6c <flatcc_json_printer_int8_enum_vector_field@@Base+0x244>
   3eeac:	mov	r1, #32
   3eeb0:	mov	r2, r5
   3eeb4:	bl	14ef0 <memset@plt>
   3eeb8:	ldr	r0, [r4, #20]
   3eebc:	add	r0, r0, r5
   3eec0:	str	r0, [r4, #20]
   3eec4:	b	3eee4 <flatcc_json_printer_int8_enum_vector_field@@Base+0x2bc>
   3eec8:	ldr	r1, [r4, #16]
   3eecc:	cmp	r0, r1
   3eed0:	bcc	3eee4 <flatcc_json_printer_int8_enum_vector_field@@Base+0x2bc>
   3eed4:	ldr	r2, [r4, #44]	; 0x2c
   3eed8:	mov	r0, r4
   3eedc:	mov	r1, #0
   3eee0:	blx	r2
   3eee4:	ldrsb	r1, [r7], #1
   3eee8:	mov	r0, r4
   3eeec:	blx	sl
   3eef0:	cmp	r9, #0
   3eef4:	bne	3edec <flatcc_json_printer_int8_enum_vector_field@@Base+0x1c4>
   3eef8:	ldrb	r1, [r4, #25]
   3eefc:	ldr	r0, [r4, #20]
   3ef00:	cmp	r1, #0
   3ef04:	beq	3efc4 <flatcc_json_printer_int8_enum_vector_field@@Base+0x39c>
   3ef08:	add	r1, r0, #1
   3ef0c:	str	r1, [r4, #20]
   3ef10:	mov	r1, #10
   3ef14:	strb	r1, [r0]
   3ef18:	ldr	r0, [r4, #32]
   3ef1c:	sub	r2, r0, #1
   3ef20:	str	r2, [r4, #32]
   3ef24:	ldrb	r3, [r4, #25]
   3ef28:	ldr	r0, [r4, #20]
   3ef2c:	ldr	r1, [r4, #16]
   3ef30:	mla	r7, r2, r3, r0
   3ef34:	mul	r5, r2, r3
   3ef38:	cmp	r7, r1
   3ef3c:	bls	3efac <flatcc_json_printer_int8_enum_vector_field@@Base+0x384>
   3ef40:	cmp	r0, r1
   3ef44:	bcc	3ef60 <flatcc_json_printer_int8_enum_vector_field@@Base+0x338>
   3ef48:	ldr	r2, [r4, #44]	; 0x2c
   3ef4c:	mov	r0, r4
   3ef50:	mov	r1, #0
   3ef54:	blx	r2
   3ef58:	ldr	r1, [r4, #16]
   3ef5c:	ldr	r0, [r4, #20]
   3ef60:	sub	r6, r1, r0
   3ef64:	cmp	r6, r5
   3ef68:	bcs	3efac <flatcc_json_printer_int8_enum_vector_field@@Base+0x384>
   3ef6c:	mov	r1, #32
   3ef70:	mov	r2, r6
   3ef74:	bl	14ef0 <memset@plt>
   3ef78:	ldr	r0, [r4, #20]
   3ef7c:	ldr	r2, [r4, #44]	; 0x2c
   3ef80:	mov	r1, #0
   3ef84:	add	r0, r0, r6
   3ef88:	str	r0, [r4, #20]
   3ef8c:	mov	r0, r4
   3ef90:	blx	r2
   3ef94:	ldr	r1, [r4, #16]
   3ef98:	ldr	r0, [r4, #20]
   3ef9c:	sub	r5, r5, r6
   3efa0:	sub	r6, r1, r0
   3efa4:	cmp	r5, r6
   3efa8:	bhi	3ef6c <flatcc_json_printer_int8_enum_vector_field@@Base+0x344>
   3efac:	mov	r1, #32
   3efb0:	mov	r2, r5
   3efb4:	bl	14ef0 <memset@plt>
   3efb8:	ldr	r0, [r4, #20]
   3efbc:	add	r0, r0, r5
   3efc0:	str	r0, [r4, #20]
   3efc4:	add	r1, r0, #1
   3efc8:	str	r1, [r4, #20]
   3efcc:	mov	r1, #93	; 0x5d
   3efd0:	strb	r1, [r0]
   3efd4:	sub	sp, fp, #28
   3efd8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003efdc <flatcc_json_printer_int16_enum_vector_field@@Base>:
   3efdc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3efe0:	add	fp, sp, #28
   3efe4:	sub	sp, sp, #4
   3efe8:	mov	r4, r0
   3efec:	ldrb	r0, [r0, #27]
   3eff0:	cmp	r0, #0
   3eff4:	beq	3f008 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2c>
   3eff8:	mov	r0, r4
   3effc:	sub	sp, fp, #28
   3f000:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3f004:	b	3c258 <flatcc_json_printer_int16_vector_field@@Base>
   3f008:	mov	r0, #4
   3f00c:	add	r0, r0, r2, lsl #1
   3f010:	ldr	r2, [r1, #8]
   3f014:	cmp	r0, r2
   3f018:	bge	3f388 <flatcc_json_printer_int16_enum_vector_field@@Base+0x3ac>
   3f01c:	ldr	r2, [r1, #4]
   3f020:	add	r0, r2, r0
   3f024:	ldrh	r0, [r0]
   3f028:	cmp	r0, #0
   3f02c:	ldrne	r2, [r1]
   3f030:	addsne	r8, r2, r0
   3f034:	beq	3f388 <flatcc_json_printer_int16_enum_vector_field@@Base+0x3ac>
   3f038:	ldr	r0, [r1, #16]
   3f03c:	ldr	sl, [fp, #12]
   3f040:	ldr	r2, [fp, #8]
   3f044:	add	r7, r0, #1
   3f048:	cmp	r0, #0
   3f04c:	str	r7, [r1, #16]
   3f050:	ldrne	r0, [r4, #20]
   3f054:	addne	r1, r0, #1
   3f058:	strne	r1, [r4, #20]
   3f05c:	movne	r1, #44	; 0x2c
   3f060:	strbne	r1, [r0]
   3f064:	mov	r1, r3
   3f068:	ldr	r0, [r8]
   3f06c:	ldr	r9, [r8, r0]!
   3f070:	mov	r0, r4
   3f074:	bl	38c54 <flatcc_json_printer_string_field@@Base+0x8c>
   3f078:	ldr	r1, [r4, #32]
   3f07c:	ldr	r0, [r4, #20]
   3f080:	cmp	r9, #0
   3f084:	add	r1, r1, #1
   3f088:	str	r1, [r4, #32]
   3f08c:	add	r1, r0, #1
   3f090:	str	r1, [r4, #20]
   3f094:	mov	r1, #91	; 0x5b
   3f098:	strb	r1, [r0]
   3f09c:	beq	3f2ac <flatcc_json_printer_int16_enum_vector_field@@Base+0x2d0>
   3f0a0:	ldrb	r1, [r4, #25]
   3f0a4:	ldr	r0, [r4, #20]
   3f0a8:	cmp	r1, #0
   3f0ac:	beq	3f168 <flatcc_json_printer_int16_enum_vector_field@@Base+0x18c>
   3f0b0:	add	r1, r0, #1
   3f0b4:	str	r1, [r4, #20]
   3f0b8:	mov	r1, #10
   3f0bc:	strb	r1, [r0]
   3f0c0:	ldr	r0, [r4, #20]
   3f0c4:	ldrb	r2, [r4, #25]
   3f0c8:	ldr	r3, [r4, #32]
   3f0cc:	ldr	r1, [r4, #16]
   3f0d0:	mla	r7, r3, r2, r0
   3f0d4:	mul	r5, r3, r2
   3f0d8:	cmp	r7, r1
   3f0dc:	bls	3f14c <flatcc_json_printer_int16_enum_vector_field@@Base+0x170>
   3f0e0:	cmp	r0, r1
   3f0e4:	bcc	3f100 <flatcc_json_printer_int16_enum_vector_field@@Base+0x124>
   3f0e8:	ldr	r2, [r4, #44]	; 0x2c
   3f0ec:	mov	r0, r4
   3f0f0:	mov	r1, #0
   3f0f4:	blx	r2
   3f0f8:	ldr	r1, [r4, #16]
   3f0fc:	ldr	r0, [r4, #20]
   3f100:	sub	r6, r1, r0
   3f104:	cmp	r6, r5
   3f108:	bcs	3f14c <flatcc_json_printer_int16_enum_vector_field@@Base+0x170>
   3f10c:	mov	r1, #32
   3f110:	mov	r2, r6
   3f114:	bl	14ef0 <memset@plt>
   3f118:	ldr	r0, [r4, #20]
   3f11c:	ldr	r2, [r4, #44]	; 0x2c
   3f120:	mov	r1, #0
   3f124:	add	r0, r0, r6
   3f128:	str	r0, [r4, #20]
   3f12c:	mov	r0, r4
   3f130:	blx	r2
   3f134:	ldr	r1, [r4, #16]
   3f138:	ldr	r0, [r4, #20]
   3f13c:	sub	r5, r5, r6
   3f140:	sub	r6, r1, r0
   3f144:	cmp	r5, r6
   3f148:	bhi	3f10c <flatcc_json_printer_int16_enum_vector_field@@Base+0x130>
   3f14c:	mov	r1, #32
   3f150:	mov	r2, r5
   3f154:	bl	14ef0 <memset@plt>
   3f158:	ldr	r0, [r4, #20]
   3f15c:	add	r0, r0, r5
   3f160:	str	r0, [r4, #20]
   3f164:	b	3f184 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1a8>
   3f168:	ldr	r1, [r4, #16]
   3f16c:	cmp	r0, r1
   3f170:	bcc	3f184 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1a8>
   3f174:	ldr	r2, [r4, #44]	; 0x2c
   3f178:	mov	r0, r4
   3f17c:	mov	r1, #0
   3f180:	blx	r2
   3f184:	ldrsh	r1, [r8, #4]
   3f188:	mov	r0, r4
   3f18c:	blx	sl
   3f190:	subs	r9, r9, #1
   3f194:	beq	3f2ac <flatcc_json_printer_int16_enum_vector_field@@Base+0x2d0>
   3f198:	add	r7, r8, #6
   3f19c:	mov	r8, #44	; 0x2c
   3f1a0:	ldr	r0, [r4, #20]
   3f1a4:	sub	r9, r9, #1
   3f1a8:	add	r1, r0, #1
   3f1ac:	str	r1, [r4, #20]
   3f1b0:	strb	r8, [r0]
   3f1b4:	ldrb	r1, [r4, #25]
   3f1b8:	ldr	r0, [r4, #20]
   3f1bc:	cmp	r1, #0
   3f1c0:	beq	3f27c <flatcc_json_printer_int16_enum_vector_field@@Base+0x2a0>
   3f1c4:	add	r1, r0, #1
   3f1c8:	str	r1, [r4, #20]
   3f1cc:	mov	r1, #10
   3f1d0:	strb	r1, [r0]
   3f1d4:	ldr	r0, [r4, #20]
   3f1d8:	ldrb	r2, [r4, #25]
   3f1dc:	ldr	r3, [r4, #32]
   3f1e0:	ldr	r1, [r4, #16]
   3f1e4:	mla	r6, r3, r2, r0
   3f1e8:	mul	r5, r3, r2
   3f1ec:	cmp	r6, r1
   3f1f0:	bls	3f260 <flatcc_json_printer_int16_enum_vector_field@@Base+0x284>
   3f1f4:	cmp	r0, r1
   3f1f8:	bcc	3f214 <flatcc_json_printer_int16_enum_vector_field@@Base+0x238>
   3f1fc:	ldr	r2, [r4, #44]	; 0x2c
   3f200:	mov	r0, r4
   3f204:	mov	r1, #0
   3f208:	blx	r2
   3f20c:	ldr	r1, [r4, #16]
   3f210:	ldr	r0, [r4, #20]
   3f214:	sub	r6, r1, r0
   3f218:	cmp	r6, r5
   3f21c:	bcs	3f260 <flatcc_json_printer_int16_enum_vector_field@@Base+0x284>
   3f220:	mov	r1, #32
   3f224:	mov	r2, r6
   3f228:	bl	14ef0 <memset@plt>
   3f22c:	ldr	r0, [r4, #20]
   3f230:	ldr	r2, [r4, #44]	; 0x2c
   3f234:	mov	r1, #0
   3f238:	add	r0, r0, r6
   3f23c:	str	r0, [r4, #20]
   3f240:	mov	r0, r4
   3f244:	blx	r2
   3f248:	ldr	r1, [r4, #16]
   3f24c:	ldr	r0, [r4, #20]
   3f250:	sub	r5, r5, r6
   3f254:	sub	r6, r1, r0
   3f258:	cmp	r5, r6
   3f25c:	bhi	3f220 <flatcc_json_printer_int16_enum_vector_field@@Base+0x244>
   3f260:	mov	r1, #32
   3f264:	mov	r2, r5
   3f268:	bl	14ef0 <memset@plt>
   3f26c:	ldr	r0, [r4, #20]
   3f270:	add	r0, r0, r5
   3f274:	str	r0, [r4, #20]
   3f278:	b	3f298 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2bc>
   3f27c:	ldr	r1, [r4, #16]
   3f280:	cmp	r0, r1
   3f284:	bcc	3f298 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2bc>
   3f288:	ldr	r2, [r4, #44]	; 0x2c
   3f28c:	mov	r0, r4
   3f290:	mov	r1, #0
   3f294:	blx	r2
   3f298:	ldrsh	r1, [r7], #2
   3f29c:	mov	r0, r4
   3f2a0:	blx	sl
   3f2a4:	cmp	r9, #0
   3f2a8:	bne	3f1a0 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1c4>
   3f2ac:	ldrb	r1, [r4, #25]
   3f2b0:	ldr	r0, [r4, #20]
   3f2b4:	cmp	r1, #0
   3f2b8:	beq	3f378 <flatcc_json_printer_int16_enum_vector_field@@Base+0x39c>
   3f2bc:	add	r1, r0, #1
   3f2c0:	str	r1, [r4, #20]
   3f2c4:	mov	r1, #10
   3f2c8:	strb	r1, [r0]
   3f2cc:	ldr	r0, [r4, #32]
   3f2d0:	sub	r2, r0, #1
   3f2d4:	str	r2, [r4, #32]
   3f2d8:	ldrb	r3, [r4, #25]
   3f2dc:	ldr	r0, [r4, #20]
   3f2e0:	ldr	r1, [r4, #16]
   3f2e4:	mla	r7, r2, r3, r0
   3f2e8:	mul	r5, r2, r3
   3f2ec:	cmp	r7, r1
   3f2f0:	bls	3f360 <flatcc_json_printer_int16_enum_vector_field@@Base+0x384>
   3f2f4:	cmp	r0, r1
   3f2f8:	bcc	3f314 <flatcc_json_printer_int16_enum_vector_field@@Base+0x338>
   3f2fc:	ldr	r2, [r4, #44]	; 0x2c
   3f300:	mov	r0, r4
   3f304:	mov	r1, #0
   3f308:	blx	r2
   3f30c:	ldr	r1, [r4, #16]
   3f310:	ldr	r0, [r4, #20]
   3f314:	sub	r6, r1, r0
   3f318:	cmp	r6, r5
   3f31c:	bcs	3f360 <flatcc_json_printer_int16_enum_vector_field@@Base+0x384>
   3f320:	mov	r1, #32
   3f324:	mov	r2, r6
   3f328:	bl	14ef0 <memset@plt>
   3f32c:	ldr	r0, [r4, #20]
   3f330:	ldr	r2, [r4, #44]	; 0x2c
   3f334:	mov	r1, #0
   3f338:	add	r0, r0, r6
   3f33c:	str	r0, [r4, #20]
   3f340:	mov	r0, r4
   3f344:	blx	r2
   3f348:	ldr	r1, [r4, #16]
   3f34c:	ldr	r0, [r4, #20]
   3f350:	sub	r5, r5, r6
   3f354:	sub	r6, r1, r0
   3f358:	cmp	r5, r6
   3f35c:	bhi	3f320 <flatcc_json_printer_int16_enum_vector_field@@Base+0x344>
   3f360:	mov	r1, #32
   3f364:	mov	r2, r5
   3f368:	bl	14ef0 <memset@plt>
   3f36c:	ldr	r0, [r4, #20]
   3f370:	add	r0, r0, r5
   3f374:	str	r0, [r4, #20]
   3f378:	add	r1, r0, #1
   3f37c:	str	r1, [r4, #20]
   3f380:	mov	r1, #93	; 0x5d
   3f384:	strb	r1, [r0]
   3f388:	sub	sp, fp, #28
   3f38c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003f390 <flatcc_json_printer_int32_enum_vector_field@@Base>:
   3f390:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3f394:	add	fp, sp, #28
   3f398:	sub	sp, sp, #4
   3f39c:	mov	r4, r0
   3f3a0:	ldrb	r0, [r0, #27]
   3f3a4:	cmp	r0, #0
   3f3a8:	beq	3f3bc <flatcc_json_printer_int32_enum_vector_field@@Base+0x2c>
   3f3ac:	mov	r0, r4
   3f3b0:	sub	sp, fp, #28
   3f3b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3f3b8:	b	3c648 <flatcc_json_printer_int32_vector_field@@Base>
   3f3bc:	mov	r0, #4
   3f3c0:	add	r0, r0, r2, lsl #1
   3f3c4:	ldr	r2, [r1, #8]
   3f3c8:	cmp	r0, r2
   3f3cc:	bge	3f73c <flatcc_json_printer_int32_enum_vector_field@@Base+0x3ac>
   3f3d0:	ldr	r2, [r1, #4]
   3f3d4:	add	r0, r2, r0
   3f3d8:	ldrh	r0, [r0]
   3f3dc:	cmp	r0, #0
   3f3e0:	ldrne	r2, [r1]
   3f3e4:	addsne	r8, r2, r0
   3f3e8:	beq	3f73c <flatcc_json_printer_int32_enum_vector_field@@Base+0x3ac>
   3f3ec:	ldr	r0, [r1, #16]
   3f3f0:	ldr	sl, [fp, #12]
   3f3f4:	ldr	r2, [fp, #8]
   3f3f8:	add	r7, r0, #1
   3f3fc:	cmp	r0, #0
   3f400:	str	r7, [r1, #16]
   3f404:	ldrne	r0, [r4, #20]
   3f408:	addne	r1, r0, #1
   3f40c:	strne	r1, [r4, #20]
   3f410:	movne	r1, #44	; 0x2c
   3f414:	strbne	r1, [r0]
   3f418:	mov	r1, r3
   3f41c:	ldr	r0, [r8]
   3f420:	ldr	r9, [r8, r0]!
   3f424:	mov	r0, r4
   3f428:	bl	38c54 <flatcc_json_printer_string_field@@Base+0x8c>
   3f42c:	ldr	r1, [r4, #32]
   3f430:	ldr	r0, [r4, #20]
   3f434:	cmp	r9, #0
   3f438:	add	r1, r1, #1
   3f43c:	str	r1, [r4, #32]
   3f440:	add	r1, r0, #1
   3f444:	str	r1, [r4, #20]
   3f448:	mov	r1, #91	; 0x5b
   3f44c:	strb	r1, [r0]
   3f450:	beq	3f660 <flatcc_json_printer_int32_enum_vector_field@@Base+0x2d0>
   3f454:	ldrb	r1, [r4, #25]
   3f458:	ldr	r0, [r4, #20]
   3f45c:	cmp	r1, #0
   3f460:	beq	3f51c <flatcc_json_printer_int32_enum_vector_field@@Base+0x18c>
   3f464:	add	r1, r0, #1
   3f468:	str	r1, [r4, #20]
   3f46c:	mov	r1, #10
   3f470:	strb	r1, [r0]
   3f474:	ldr	r0, [r4, #20]
   3f478:	ldrb	r2, [r4, #25]
   3f47c:	ldr	r3, [r4, #32]
   3f480:	ldr	r1, [r4, #16]
   3f484:	mla	r7, r3, r2, r0
   3f488:	mul	r5, r3, r2
   3f48c:	cmp	r7, r1
   3f490:	bls	3f500 <flatcc_json_printer_int32_enum_vector_field@@Base+0x170>
   3f494:	cmp	r0, r1
   3f498:	bcc	3f4b4 <flatcc_json_printer_int32_enum_vector_field@@Base+0x124>
   3f49c:	ldr	r2, [r4, #44]	; 0x2c
   3f4a0:	mov	r0, r4
   3f4a4:	mov	r1, #0
   3f4a8:	blx	r2
   3f4ac:	ldr	r1, [r4, #16]
   3f4b0:	ldr	r0, [r4, #20]
   3f4b4:	sub	r6, r1, r0
   3f4b8:	cmp	r6, r5
   3f4bc:	bcs	3f500 <flatcc_json_printer_int32_enum_vector_field@@Base+0x170>
   3f4c0:	mov	r1, #32
   3f4c4:	mov	r2, r6
   3f4c8:	bl	14ef0 <memset@plt>
   3f4cc:	ldr	r0, [r4, #20]
   3f4d0:	ldr	r2, [r4, #44]	; 0x2c
   3f4d4:	mov	r1, #0
   3f4d8:	add	r0, r0, r6
   3f4dc:	str	r0, [r4, #20]
   3f4e0:	mov	r0, r4
   3f4e4:	blx	r2
   3f4e8:	ldr	r1, [r4, #16]
   3f4ec:	ldr	r0, [r4, #20]
   3f4f0:	sub	r5, r5, r6
   3f4f4:	sub	r6, r1, r0
   3f4f8:	cmp	r5, r6
   3f4fc:	bhi	3f4c0 <flatcc_json_printer_int32_enum_vector_field@@Base+0x130>
   3f500:	mov	r1, #32
   3f504:	mov	r2, r5
   3f508:	bl	14ef0 <memset@plt>
   3f50c:	ldr	r0, [r4, #20]
   3f510:	add	r0, r0, r5
   3f514:	str	r0, [r4, #20]
   3f518:	b	3f538 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1a8>
   3f51c:	ldr	r1, [r4, #16]
   3f520:	cmp	r0, r1
   3f524:	bcc	3f538 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1a8>
   3f528:	ldr	r2, [r4, #44]	; 0x2c
   3f52c:	mov	r0, r4
   3f530:	mov	r1, #0
   3f534:	blx	r2
   3f538:	ldr	r1, [r8, #4]
   3f53c:	mov	r0, r4
   3f540:	blx	sl
   3f544:	subs	r9, r9, #1
   3f548:	beq	3f660 <flatcc_json_printer_int32_enum_vector_field@@Base+0x2d0>
   3f54c:	add	r7, r8, #8
   3f550:	mov	r8, #44	; 0x2c
   3f554:	ldr	r0, [r4, #20]
   3f558:	sub	r9, r9, #1
   3f55c:	add	r1, r0, #1
   3f560:	str	r1, [r4, #20]
   3f564:	strb	r8, [r0]
   3f568:	ldrb	r1, [r4, #25]
   3f56c:	ldr	r0, [r4, #20]
   3f570:	cmp	r1, #0
   3f574:	beq	3f630 <flatcc_json_printer_int32_enum_vector_field@@Base+0x2a0>
   3f578:	add	r1, r0, #1
   3f57c:	str	r1, [r4, #20]
   3f580:	mov	r1, #10
   3f584:	strb	r1, [r0]
   3f588:	ldr	r0, [r4, #20]
   3f58c:	ldrb	r2, [r4, #25]
   3f590:	ldr	r3, [r4, #32]
   3f594:	ldr	r1, [r4, #16]
   3f598:	mla	r6, r3, r2, r0
   3f59c:	mul	r5, r3, r2
   3f5a0:	cmp	r6, r1
   3f5a4:	bls	3f614 <flatcc_json_printer_int32_enum_vector_field@@Base+0x284>
   3f5a8:	cmp	r0, r1
   3f5ac:	bcc	3f5c8 <flatcc_json_printer_int32_enum_vector_field@@Base+0x238>
   3f5b0:	ldr	r2, [r4, #44]	; 0x2c
   3f5b4:	mov	r0, r4
   3f5b8:	mov	r1, #0
   3f5bc:	blx	r2
   3f5c0:	ldr	r1, [r4, #16]
   3f5c4:	ldr	r0, [r4, #20]
   3f5c8:	sub	r6, r1, r0
   3f5cc:	cmp	r6, r5
   3f5d0:	bcs	3f614 <flatcc_json_printer_int32_enum_vector_field@@Base+0x284>
   3f5d4:	mov	r1, #32
   3f5d8:	mov	r2, r6
   3f5dc:	bl	14ef0 <memset@plt>
   3f5e0:	ldr	r0, [r4, #20]
   3f5e4:	ldr	r2, [r4, #44]	; 0x2c
   3f5e8:	mov	r1, #0
   3f5ec:	add	r0, r0, r6
   3f5f0:	str	r0, [r4, #20]
   3f5f4:	mov	r0, r4
   3f5f8:	blx	r2
   3f5fc:	ldr	r1, [r4, #16]
   3f600:	ldr	r0, [r4, #20]
   3f604:	sub	r5, r5, r6
   3f608:	sub	r6, r1, r0
   3f60c:	cmp	r5, r6
   3f610:	bhi	3f5d4 <flatcc_json_printer_int32_enum_vector_field@@Base+0x244>
   3f614:	mov	r1, #32
   3f618:	mov	r2, r5
   3f61c:	bl	14ef0 <memset@plt>
   3f620:	ldr	r0, [r4, #20]
   3f624:	add	r0, r0, r5
   3f628:	str	r0, [r4, #20]
   3f62c:	b	3f64c <flatcc_json_printer_int32_enum_vector_field@@Base+0x2bc>
   3f630:	ldr	r1, [r4, #16]
   3f634:	cmp	r0, r1
   3f638:	bcc	3f64c <flatcc_json_printer_int32_enum_vector_field@@Base+0x2bc>
   3f63c:	ldr	r2, [r4, #44]	; 0x2c
   3f640:	mov	r0, r4
   3f644:	mov	r1, #0
   3f648:	blx	r2
   3f64c:	ldr	r1, [r7], #4
   3f650:	mov	r0, r4
   3f654:	blx	sl
   3f658:	cmp	r9, #0
   3f65c:	bne	3f554 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1c4>
   3f660:	ldrb	r1, [r4, #25]
   3f664:	ldr	r0, [r4, #20]
   3f668:	cmp	r1, #0
   3f66c:	beq	3f72c <flatcc_json_printer_int32_enum_vector_field@@Base+0x39c>
   3f670:	add	r1, r0, #1
   3f674:	str	r1, [r4, #20]
   3f678:	mov	r1, #10
   3f67c:	strb	r1, [r0]
   3f680:	ldr	r0, [r4, #32]
   3f684:	sub	r2, r0, #1
   3f688:	str	r2, [r4, #32]
   3f68c:	ldrb	r3, [r4, #25]
   3f690:	ldr	r0, [r4, #20]
   3f694:	ldr	r1, [r4, #16]
   3f698:	mla	r7, r2, r3, r0
   3f69c:	mul	r5, r2, r3
   3f6a0:	cmp	r7, r1
   3f6a4:	bls	3f714 <flatcc_json_printer_int32_enum_vector_field@@Base+0x384>
   3f6a8:	cmp	r0, r1
   3f6ac:	bcc	3f6c8 <flatcc_json_printer_int32_enum_vector_field@@Base+0x338>
   3f6b0:	ldr	r2, [r4, #44]	; 0x2c
   3f6b4:	mov	r0, r4
   3f6b8:	mov	r1, #0
   3f6bc:	blx	r2
   3f6c0:	ldr	r1, [r4, #16]
   3f6c4:	ldr	r0, [r4, #20]
   3f6c8:	sub	r6, r1, r0
   3f6cc:	cmp	r6, r5
   3f6d0:	bcs	3f714 <flatcc_json_printer_int32_enum_vector_field@@Base+0x384>
   3f6d4:	mov	r1, #32
   3f6d8:	mov	r2, r6
   3f6dc:	bl	14ef0 <memset@plt>
   3f6e0:	ldr	r0, [r4, #20]
   3f6e4:	ldr	r2, [r4, #44]	; 0x2c
   3f6e8:	mov	r1, #0
   3f6ec:	add	r0, r0, r6
   3f6f0:	str	r0, [r4, #20]
   3f6f4:	mov	r0, r4
   3f6f8:	blx	r2
   3f6fc:	ldr	r1, [r4, #16]
   3f700:	ldr	r0, [r4, #20]
   3f704:	sub	r5, r5, r6
   3f708:	sub	r6, r1, r0
   3f70c:	cmp	r5, r6
   3f710:	bhi	3f6d4 <flatcc_json_printer_int32_enum_vector_field@@Base+0x344>
   3f714:	mov	r1, #32
   3f718:	mov	r2, r5
   3f71c:	bl	14ef0 <memset@plt>
   3f720:	ldr	r0, [r4, #20]
   3f724:	add	r0, r0, r5
   3f728:	str	r0, [r4, #20]
   3f72c:	add	r1, r0, #1
   3f730:	str	r1, [r4, #20]
   3f734:	mov	r1, #93	; 0x5d
   3f738:	strb	r1, [r0]
   3f73c:	sub	sp, fp, #28
   3f740:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003f744 <flatcc_json_printer_int64_enum_vector_field@@Base>:
   3f744:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3f748:	add	fp, sp, #28
   3f74c:	sub	sp, sp, #4
   3f750:	mov	r4, r0
   3f754:	ldrb	r0, [r0, #27]
   3f758:	cmp	r0, #0
   3f75c:	beq	3f770 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2c>
   3f760:	mov	r0, r4
   3f764:	sub	sp, fp, #28
   3f768:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3f76c:	b	3ca28 <flatcc_json_printer_int64_vector_field@@Base>
   3f770:	mov	r0, #4
   3f774:	add	r0, r0, r2, lsl #1
   3f778:	ldr	r2, [r1, #8]
   3f77c:	cmp	r0, r2
   3f780:	bge	3faf4 <flatcc_json_printer_int64_enum_vector_field@@Base+0x3b0>
   3f784:	ldr	r2, [r1, #4]
   3f788:	add	r0, r2, r0
   3f78c:	ldrh	r0, [r0]
   3f790:	cmp	r0, #0
   3f794:	ldrne	r2, [r1]
   3f798:	addsne	r8, r2, r0
   3f79c:	beq	3faf4 <flatcc_json_printer_int64_enum_vector_field@@Base+0x3b0>
   3f7a0:	ldr	r0, [r1, #16]
   3f7a4:	ldr	sl, [fp, #12]
   3f7a8:	ldr	r2, [fp, #8]
   3f7ac:	add	r7, r0, #1
   3f7b0:	cmp	r0, #0
   3f7b4:	str	r7, [r1, #16]
   3f7b8:	ldrne	r0, [r4, #20]
   3f7bc:	addne	r1, r0, #1
   3f7c0:	strne	r1, [r4, #20]
   3f7c4:	movne	r1, #44	; 0x2c
   3f7c8:	strbne	r1, [r0]
   3f7cc:	mov	r1, r3
   3f7d0:	ldr	r0, [r8]
   3f7d4:	ldr	r9, [r8, r0]!
   3f7d8:	mov	r0, r4
   3f7dc:	bl	38c54 <flatcc_json_printer_string_field@@Base+0x8c>
   3f7e0:	ldr	r1, [r4, #32]
   3f7e4:	ldr	r0, [r4, #20]
   3f7e8:	cmp	r9, #0
   3f7ec:	add	r1, r1, #1
   3f7f0:	str	r1, [r4, #32]
   3f7f4:	add	r1, r0, #1
   3f7f8:	str	r1, [r4, #20]
   3f7fc:	mov	r1, #91	; 0x5b
   3f800:	strb	r1, [r0]
   3f804:	beq	3fa18 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2d4>
   3f808:	ldrb	r1, [r4, #25]
   3f80c:	ldr	r0, [r4, #20]
   3f810:	cmp	r1, #0
   3f814:	beq	3f8d0 <flatcc_json_printer_int64_enum_vector_field@@Base+0x18c>
   3f818:	add	r1, r0, #1
   3f81c:	str	r1, [r4, #20]
   3f820:	mov	r1, #10
   3f824:	strb	r1, [r0]
   3f828:	ldr	r0, [r4, #20]
   3f82c:	ldrb	r2, [r4, #25]
   3f830:	ldr	r3, [r4, #32]
   3f834:	ldr	r1, [r4, #16]
   3f838:	mla	r7, r3, r2, r0
   3f83c:	mul	r5, r3, r2
   3f840:	cmp	r7, r1
   3f844:	bls	3f8b4 <flatcc_json_printer_int64_enum_vector_field@@Base+0x170>
   3f848:	cmp	r0, r1
   3f84c:	bcc	3f868 <flatcc_json_printer_int64_enum_vector_field@@Base+0x124>
   3f850:	ldr	r2, [r4, #44]	; 0x2c
   3f854:	mov	r0, r4
   3f858:	mov	r1, #0
   3f85c:	blx	r2
   3f860:	ldr	r1, [r4, #16]
   3f864:	ldr	r0, [r4, #20]
   3f868:	sub	r6, r1, r0
   3f86c:	cmp	r6, r5
   3f870:	bcs	3f8b4 <flatcc_json_printer_int64_enum_vector_field@@Base+0x170>
   3f874:	mov	r1, #32
   3f878:	mov	r2, r6
   3f87c:	bl	14ef0 <memset@plt>
   3f880:	ldr	r0, [r4, #20]
   3f884:	ldr	r2, [r4, #44]	; 0x2c
   3f888:	mov	r1, #0
   3f88c:	add	r0, r0, r6
   3f890:	str	r0, [r4, #20]
   3f894:	mov	r0, r4
   3f898:	blx	r2
   3f89c:	ldr	r1, [r4, #16]
   3f8a0:	ldr	r0, [r4, #20]
   3f8a4:	sub	r5, r5, r6
   3f8a8:	sub	r6, r1, r0
   3f8ac:	cmp	r5, r6
   3f8b0:	bhi	3f874 <flatcc_json_printer_int64_enum_vector_field@@Base+0x130>
   3f8b4:	mov	r1, #32
   3f8b8:	mov	r2, r5
   3f8bc:	bl	14ef0 <memset@plt>
   3f8c0:	ldr	r0, [r4, #20]
   3f8c4:	add	r0, r0, r5
   3f8c8:	str	r0, [r4, #20]
   3f8cc:	b	3f8ec <flatcc_json_printer_int64_enum_vector_field@@Base+0x1a8>
   3f8d0:	ldr	r1, [r4, #16]
   3f8d4:	cmp	r0, r1
   3f8d8:	bcc	3f8ec <flatcc_json_printer_int64_enum_vector_field@@Base+0x1a8>
   3f8dc:	ldr	r2, [r4, #44]	; 0x2c
   3f8e0:	mov	r0, r4
   3f8e4:	mov	r1, #0
   3f8e8:	blx	r2
   3f8ec:	ldrd	r2, [r8, #4]
   3f8f0:	mov	r0, r4
   3f8f4:	blx	sl
   3f8f8:	subs	r9, r9, #1
   3f8fc:	beq	3fa18 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2d4>
   3f900:	add	r7, r8, #12
   3f904:	mov	r8, #44	; 0x2c
   3f908:	ldr	r0, [r4, #20]
   3f90c:	sub	r9, r9, #1
   3f910:	add	r1, r0, #1
   3f914:	str	r1, [r4, #20]
   3f918:	strb	r8, [r0]
   3f91c:	ldrb	r1, [r4, #25]
   3f920:	ldr	r0, [r4, #20]
   3f924:	cmp	r1, #0
   3f928:	beq	3f9e4 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2a0>
   3f92c:	add	r1, r0, #1
   3f930:	str	r1, [r4, #20]
   3f934:	mov	r1, #10
   3f938:	strb	r1, [r0]
   3f93c:	ldr	r0, [r4, #20]
   3f940:	ldrb	r2, [r4, #25]
   3f944:	ldr	r3, [r4, #32]
   3f948:	ldr	r1, [r4, #16]
   3f94c:	mla	r6, r3, r2, r0
   3f950:	mul	r5, r3, r2
   3f954:	cmp	r6, r1
   3f958:	bls	3f9c8 <flatcc_json_printer_int64_enum_vector_field@@Base+0x284>
   3f95c:	cmp	r0, r1
   3f960:	bcc	3f97c <flatcc_json_printer_int64_enum_vector_field@@Base+0x238>
   3f964:	ldr	r2, [r4, #44]	; 0x2c
   3f968:	mov	r0, r4
   3f96c:	mov	r1, #0
   3f970:	blx	r2
   3f974:	ldr	r1, [r4, #16]
   3f978:	ldr	r0, [r4, #20]
   3f97c:	sub	r6, r1, r0
   3f980:	cmp	r6, r5
   3f984:	bcs	3f9c8 <flatcc_json_printer_int64_enum_vector_field@@Base+0x284>
   3f988:	mov	r1, #32
   3f98c:	mov	r2, r6
   3f990:	bl	14ef0 <memset@plt>
   3f994:	ldr	r0, [r4, #20]
   3f998:	ldr	r2, [r4, #44]	; 0x2c
   3f99c:	mov	r1, #0
   3f9a0:	add	r0, r0, r6
   3f9a4:	str	r0, [r4, #20]
   3f9a8:	mov	r0, r4
   3f9ac:	blx	r2
   3f9b0:	ldr	r1, [r4, #16]
   3f9b4:	ldr	r0, [r4, #20]
   3f9b8:	sub	r5, r5, r6
   3f9bc:	sub	r6, r1, r0
   3f9c0:	cmp	r5, r6
   3f9c4:	bhi	3f988 <flatcc_json_printer_int64_enum_vector_field@@Base+0x244>
   3f9c8:	mov	r1, #32
   3f9cc:	mov	r2, r5
   3f9d0:	bl	14ef0 <memset@plt>
   3f9d4:	ldr	r0, [r4, #20]
   3f9d8:	add	r0, r0, r5
   3f9dc:	str	r0, [r4, #20]
   3f9e0:	b	3fa00 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2bc>
   3f9e4:	ldr	r1, [r4, #16]
   3f9e8:	cmp	r0, r1
   3f9ec:	bcc	3fa00 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2bc>
   3f9f0:	ldr	r2, [r4, #44]	; 0x2c
   3f9f4:	mov	r0, r4
   3f9f8:	mov	r1, #0
   3f9fc:	blx	r2
   3fa00:	ldrd	r2, [r7]
   3fa04:	mov	r0, r4
   3fa08:	blx	sl
   3fa0c:	add	r7, r7, #8
   3fa10:	cmp	r9, #0
   3fa14:	bne	3f908 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1c4>
   3fa18:	ldrb	r1, [r4, #25]
   3fa1c:	ldr	r0, [r4, #20]
   3fa20:	cmp	r1, #0
   3fa24:	beq	3fae4 <flatcc_json_printer_int64_enum_vector_field@@Base+0x3a0>
   3fa28:	add	r1, r0, #1
   3fa2c:	str	r1, [r4, #20]
   3fa30:	mov	r1, #10
   3fa34:	strb	r1, [r0]
   3fa38:	ldr	r0, [r4, #32]
   3fa3c:	sub	r2, r0, #1
   3fa40:	str	r2, [r4, #32]
   3fa44:	ldrb	r3, [r4, #25]
   3fa48:	ldr	r0, [r4, #20]
   3fa4c:	ldr	r1, [r4, #16]
   3fa50:	mla	r7, r2, r3, r0
   3fa54:	mul	r5, r2, r3
   3fa58:	cmp	r7, r1
   3fa5c:	bls	3facc <flatcc_json_printer_int64_enum_vector_field@@Base+0x388>
   3fa60:	cmp	r0, r1
   3fa64:	bcc	3fa80 <flatcc_json_printer_int64_enum_vector_field@@Base+0x33c>
   3fa68:	ldr	r2, [r4, #44]	; 0x2c
   3fa6c:	mov	r0, r4
   3fa70:	mov	r1, #0
   3fa74:	blx	r2
   3fa78:	ldr	r1, [r4, #16]
   3fa7c:	ldr	r0, [r4, #20]
   3fa80:	sub	r6, r1, r0
   3fa84:	cmp	r6, r5
   3fa88:	bcs	3facc <flatcc_json_printer_int64_enum_vector_field@@Base+0x388>
   3fa8c:	mov	r1, #32
   3fa90:	mov	r2, r6
   3fa94:	bl	14ef0 <memset@plt>
   3fa98:	ldr	r0, [r4, #20]
   3fa9c:	ldr	r2, [r4, #44]	; 0x2c
   3faa0:	mov	r1, #0
   3faa4:	add	r0, r0, r6
   3faa8:	str	r0, [r4, #20]
   3faac:	mov	r0, r4
   3fab0:	blx	r2
   3fab4:	ldr	r1, [r4, #16]
   3fab8:	ldr	r0, [r4, #20]
   3fabc:	sub	r5, r5, r6
   3fac0:	sub	r6, r1, r0
   3fac4:	cmp	r5, r6
   3fac8:	bhi	3fa8c <flatcc_json_printer_int64_enum_vector_field@@Base+0x348>
   3facc:	mov	r1, #32
   3fad0:	mov	r2, r5
   3fad4:	bl	14ef0 <memset@plt>
   3fad8:	ldr	r0, [r4, #20]
   3fadc:	add	r0, r0, r5
   3fae0:	str	r0, [r4, #20]
   3fae4:	add	r1, r0, #1
   3fae8:	str	r1, [r4, #20]
   3faec:	mov	r1, #93	; 0x5d
   3faf0:	strb	r1, [r0]
   3faf4:	sub	sp, fp, #28
   3faf8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003fafc <flatcc_json_printer_bool_enum_vector_field@@Base>:
   3fafc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3fb00:	add	fp, sp, #28
   3fb04:	sub	sp, sp, #4
   3fb08:	mov	r4, r0
   3fb0c:	ldrb	r0, [r0, #27]
   3fb10:	cmp	r0, #0
   3fb14:	beq	3fb28 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2c>
   3fb18:	mov	r0, r4
   3fb1c:	sub	sp, fp, #28
   3fb20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3fb24:	b	3ce18 <flatcc_json_printer_bool_vector_field@@Base>
   3fb28:	mov	r0, #4
   3fb2c:	add	r0, r0, r2, lsl #1
   3fb30:	ldr	r2, [r1, #8]
   3fb34:	cmp	r0, r2
   3fb38:	bge	3fea8 <flatcc_json_printer_bool_enum_vector_field@@Base+0x3ac>
   3fb3c:	ldr	r2, [r1, #4]
   3fb40:	add	r0, r2, r0
   3fb44:	ldrh	r0, [r0]
   3fb48:	cmp	r0, #0
   3fb4c:	ldrne	r2, [r1]
   3fb50:	addsne	r8, r2, r0
   3fb54:	beq	3fea8 <flatcc_json_printer_bool_enum_vector_field@@Base+0x3ac>
   3fb58:	ldr	r0, [r1, #16]
   3fb5c:	ldr	sl, [fp, #12]
   3fb60:	ldr	r2, [fp, #8]
   3fb64:	add	r7, r0, #1
   3fb68:	cmp	r0, #0
   3fb6c:	str	r7, [r1, #16]
   3fb70:	ldrne	r0, [r4, #20]
   3fb74:	addne	r1, r0, #1
   3fb78:	strne	r1, [r4, #20]
   3fb7c:	movne	r1, #44	; 0x2c
   3fb80:	strbne	r1, [r0]
   3fb84:	mov	r1, r3
   3fb88:	ldr	r0, [r8]
   3fb8c:	ldr	r9, [r8, r0]!
   3fb90:	mov	r0, r4
   3fb94:	bl	38c54 <flatcc_json_printer_string_field@@Base+0x8c>
   3fb98:	ldr	r1, [r4, #32]
   3fb9c:	ldr	r0, [r4, #20]
   3fba0:	cmp	r9, #0
   3fba4:	add	r1, r1, #1
   3fba8:	str	r1, [r4, #32]
   3fbac:	add	r1, r0, #1
   3fbb0:	str	r1, [r4, #20]
   3fbb4:	mov	r1, #91	; 0x5b
   3fbb8:	strb	r1, [r0]
   3fbbc:	beq	3fdcc <flatcc_json_printer_bool_enum_vector_field@@Base+0x2d0>
   3fbc0:	ldrb	r1, [r4, #25]
   3fbc4:	ldr	r0, [r4, #20]
   3fbc8:	cmp	r1, #0
   3fbcc:	beq	3fc88 <flatcc_json_printer_bool_enum_vector_field@@Base+0x18c>
   3fbd0:	add	r1, r0, #1
   3fbd4:	str	r1, [r4, #20]
   3fbd8:	mov	r1, #10
   3fbdc:	strb	r1, [r0]
   3fbe0:	ldr	r0, [r4, #20]
   3fbe4:	ldrb	r2, [r4, #25]
   3fbe8:	ldr	r3, [r4, #32]
   3fbec:	ldr	r1, [r4, #16]
   3fbf0:	mla	r7, r3, r2, r0
   3fbf4:	mul	r5, r3, r2
   3fbf8:	cmp	r7, r1
   3fbfc:	bls	3fc6c <flatcc_json_printer_bool_enum_vector_field@@Base+0x170>
   3fc00:	cmp	r0, r1
   3fc04:	bcc	3fc20 <flatcc_json_printer_bool_enum_vector_field@@Base+0x124>
   3fc08:	ldr	r2, [r4, #44]	; 0x2c
   3fc0c:	mov	r0, r4
   3fc10:	mov	r1, #0
   3fc14:	blx	r2
   3fc18:	ldr	r1, [r4, #16]
   3fc1c:	ldr	r0, [r4, #20]
   3fc20:	sub	r6, r1, r0
   3fc24:	cmp	r6, r5
   3fc28:	bcs	3fc6c <flatcc_json_printer_bool_enum_vector_field@@Base+0x170>
   3fc2c:	mov	r1, #32
   3fc30:	mov	r2, r6
   3fc34:	bl	14ef0 <memset@plt>
   3fc38:	ldr	r0, [r4, #20]
   3fc3c:	ldr	r2, [r4, #44]	; 0x2c
   3fc40:	mov	r1, #0
   3fc44:	add	r0, r0, r6
   3fc48:	str	r0, [r4, #20]
   3fc4c:	mov	r0, r4
   3fc50:	blx	r2
   3fc54:	ldr	r1, [r4, #16]
   3fc58:	ldr	r0, [r4, #20]
   3fc5c:	sub	r5, r5, r6
   3fc60:	sub	r6, r1, r0
   3fc64:	cmp	r5, r6
   3fc68:	bhi	3fc2c <flatcc_json_printer_bool_enum_vector_field@@Base+0x130>
   3fc6c:	mov	r1, #32
   3fc70:	mov	r2, r5
   3fc74:	bl	14ef0 <memset@plt>
   3fc78:	ldr	r0, [r4, #20]
   3fc7c:	add	r0, r0, r5
   3fc80:	str	r0, [r4, #20]
   3fc84:	b	3fca4 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1a8>
   3fc88:	ldr	r1, [r4, #16]
   3fc8c:	cmp	r0, r1
   3fc90:	bcc	3fca4 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1a8>
   3fc94:	ldr	r2, [r4, #44]	; 0x2c
   3fc98:	mov	r0, r4
   3fc9c:	mov	r1, #0
   3fca0:	blx	r2
   3fca4:	ldrb	r1, [r8, #4]
   3fca8:	mov	r0, r4
   3fcac:	blx	sl
   3fcb0:	subs	r9, r9, #1
   3fcb4:	beq	3fdcc <flatcc_json_printer_bool_enum_vector_field@@Base+0x2d0>
   3fcb8:	add	r7, r8, #5
   3fcbc:	mov	r8, #44	; 0x2c
   3fcc0:	ldr	r0, [r4, #20]
   3fcc4:	sub	r9, r9, #1
   3fcc8:	add	r1, r0, #1
   3fccc:	str	r1, [r4, #20]
   3fcd0:	strb	r8, [r0]
   3fcd4:	ldrb	r1, [r4, #25]
   3fcd8:	ldr	r0, [r4, #20]
   3fcdc:	cmp	r1, #0
   3fce0:	beq	3fd9c <flatcc_json_printer_bool_enum_vector_field@@Base+0x2a0>
   3fce4:	add	r1, r0, #1
   3fce8:	str	r1, [r4, #20]
   3fcec:	mov	r1, #10
   3fcf0:	strb	r1, [r0]
   3fcf4:	ldr	r0, [r4, #20]
   3fcf8:	ldrb	r2, [r4, #25]
   3fcfc:	ldr	r3, [r4, #32]
   3fd00:	ldr	r1, [r4, #16]
   3fd04:	mla	r6, r3, r2, r0
   3fd08:	mul	r5, r3, r2
   3fd0c:	cmp	r6, r1
   3fd10:	bls	3fd80 <flatcc_json_printer_bool_enum_vector_field@@Base+0x284>
   3fd14:	cmp	r0, r1
   3fd18:	bcc	3fd34 <flatcc_json_printer_bool_enum_vector_field@@Base+0x238>
   3fd1c:	ldr	r2, [r4, #44]	; 0x2c
   3fd20:	mov	r0, r4
   3fd24:	mov	r1, #0
   3fd28:	blx	r2
   3fd2c:	ldr	r1, [r4, #16]
   3fd30:	ldr	r0, [r4, #20]
   3fd34:	sub	r6, r1, r0
   3fd38:	cmp	r6, r5
   3fd3c:	bcs	3fd80 <flatcc_json_printer_bool_enum_vector_field@@Base+0x284>
   3fd40:	mov	r1, #32
   3fd44:	mov	r2, r6
   3fd48:	bl	14ef0 <memset@plt>
   3fd4c:	ldr	r0, [r4, #20]
   3fd50:	ldr	r2, [r4, #44]	; 0x2c
   3fd54:	mov	r1, #0
   3fd58:	add	r0, r0, r6
   3fd5c:	str	r0, [r4, #20]
   3fd60:	mov	r0, r4
   3fd64:	blx	r2
   3fd68:	ldr	r1, [r4, #16]
   3fd6c:	ldr	r0, [r4, #20]
   3fd70:	sub	r5, r5, r6
   3fd74:	sub	r6, r1, r0
   3fd78:	cmp	r5, r6
   3fd7c:	bhi	3fd40 <flatcc_json_printer_bool_enum_vector_field@@Base+0x244>
   3fd80:	mov	r1, #32
   3fd84:	mov	r2, r5
   3fd88:	bl	14ef0 <memset@plt>
   3fd8c:	ldr	r0, [r4, #20]
   3fd90:	add	r0, r0, r5
   3fd94:	str	r0, [r4, #20]
   3fd98:	b	3fdb8 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2bc>
   3fd9c:	ldr	r1, [r4, #16]
   3fda0:	cmp	r0, r1
   3fda4:	bcc	3fdb8 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2bc>
   3fda8:	ldr	r2, [r4, #44]	; 0x2c
   3fdac:	mov	r0, r4
   3fdb0:	mov	r1, #0
   3fdb4:	blx	r2
   3fdb8:	ldrb	r1, [r7], #1
   3fdbc:	mov	r0, r4
   3fdc0:	blx	sl
   3fdc4:	cmp	r9, #0
   3fdc8:	bne	3fcc0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1c4>
   3fdcc:	ldrb	r1, [r4, #25]
   3fdd0:	ldr	r0, [r4, #20]
   3fdd4:	cmp	r1, #0
   3fdd8:	beq	3fe98 <flatcc_json_printer_bool_enum_vector_field@@Base+0x39c>
   3fddc:	add	r1, r0, #1
   3fde0:	str	r1, [r4, #20]
   3fde4:	mov	r1, #10
   3fde8:	strb	r1, [r0]
   3fdec:	ldr	r0, [r4, #32]
   3fdf0:	sub	r2, r0, #1
   3fdf4:	str	r2, [r4, #32]
   3fdf8:	ldrb	r3, [r4, #25]
   3fdfc:	ldr	r0, [r4, #20]
   3fe00:	ldr	r1, [r4, #16]
   3fe04:	mla	r7, r2, r3, r0
   3fe08:	mul	r5, r2, r3
   3fe0c:	cmp	r7, r1
   3fe10:	bls	3fe80 <flatcc_json_printer_bool_enum_vector_field@@Base+0x384>
   3fe14:	cmp	r0, r1
   3fe18:	bcc	3fe34 <flatcc_json_printer_bool_enum_vector_field@@Base+0x338>
   3fe1c:	ldr	r2, [r4, #44]	; 0x2c
   3fe20:	mov	r0, r4
   3fe24:	mov	r1, #0
   3fe28:	blx	r2
   3fe2c:	ldr	r1, [r4, #16]
   3fe30:	ldr	r0, [r4, #20]
   3fe34:	sub	r6, r1, r0
   3fe38:	cmp	r6, r5
   3fe3c:	bcs	3fe80 <flatcc_json_printer_bool_enum_vector_field@@Base+0x384>
   3fe40:	mov	r1, #32
   3fe44:	mov	r2, r6
   3fe48:	bl	14ef0 <memset@plt>
   3fe4c:	ldr	r0, [r4, #20]
   3fe50:	ldr	r2, [r4, #44]	; 0x2c
   3fe54:	mov	r1, #0
   3fe58:	add	r0, r0, r6
   3fe5c:	str	r0, [r4, #20]
   3fe60:	mov	r0, r4
   3fe64:	blx	r2
   3fe68:	ldr	r1, [r4, #16]
   3fe6c:	ldr	r0, [r4, #20]
   3fe70:	sub	r5, r5, r6
   3fe74:	sub	r6, r1, r0
   3fe78:	cmp	r5, r6
   3fe7c:	bhi	3fe40 <flatcc_json_printer_bool_enum_vector_field@@Base+0x344>
   3fe80:	mov	r1, #32
   3fe84:	mov	r2, r5
   3fe88:	bl	14ef0 <memset@plt>
   3fe8c:	ldr	r0, [r4, #20]
   3fe90:	add	r0, r0, r5
   3fe94:	str	r0, [r4, #20]
   3fe98:	add	r1, r0, #1
   3fe9c:	str	r1, [r4, #20]
   3fea0:	mov	r1, #93	; 0x5d
   3fea4:	strb	r1, [r0]
   3fea8:	sub	sp, fp, #28
   3feac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003feb0 <flatcc_json_printer_struct_vector_field@@Base>:
   3feb0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3feb4:	add	fp, sp, #28
   3feb8:	sub	sp, sp, #4
   3febc:	mov	r4, r0
   3fec0:	mov	r0, #4
   3fec4:	add	r0, r0, r2, lsl #1
   3fec8:	ldr	r2, [r1, #8]
   3fecc:	cmp	r0, r2
   3fed0:	bge	4043c <flatcc_json_printer_struct_vector_field@@Base+0x58c>
   3fed4:	ldr	r2, [r1, #4]
   3fed8:	add	r0, r2, r0
   3fedc:	ldrh	r0, [r0]
   3fee0:	cmp	r0, #0
   3fee4:	ldrne	r2, [r1]
   3fee8:	addsne	r6, r2, r0
   3feec:	beq	4043c <flatcc_json_printer_struct_vector_field@@Base+0x58c>
   3fef0:	ldr	r0, [r1, #16]
   3fef4:	ldr	r2, [fp, #8]
   3fef8:	add	r7, r0, #1
   3fefc:	cmp	r0, #0
   3ff00:	str	r7, [r1, #16]
   3ff04:	ldrne	r0, [r4, #20]
   3ff08:	addne	r1, r0, #1
   3ff0c:	strne	r1, [r4, #20]
   3ff10:	movne	r1, #44	; 0x2c
   3ff14:	strbne	r1, [r0]
   3ff18:	mov	r1, r3
   3ff1c:	ldr	r0, [r6]
   3ff20:	ldr	r5, [r6, r0]!
   3ff24:	mov	r0, r4
   3ff28:	bl	38c54 <flatcc_json_printer_string_field@@Base+0x8c>
   3ff2c:	ldr	r1, [r4, #32]
   3ff30:	ldr	r0, [r4, #20]
   3ff34:	cmp	r5, #0
   3ff38:	add	r1, r1, #1
   3ff3c:	str	r1, [r4, #32]
   3ff40:	add	r1, r0, #1
   3ff44:	str	r1, [r4, #20]
   3ff48:	mov	r1, #91	; 0x5b
   3ff4c:	strb	r1, [r0]
   3ff50:	beq	40360 <flatcc_json_printer_struct_vector_field@@Base+0x4b0>
   3ff54:	ldrb	r1, [r4, #25]
   3ff58:	ldr	r0, [r4, #20]
   3ff5c:	add	r9, r6, #4
   3ff60:	cmp	r1, #0
   3ff64:	beq	40020 <flatcc_json_printer_struct_vector_field@@Base+0x170>
   3ff68:	add	r1, r0, #1
   3ff6c:	str	r1, [r4, #20]
   3ff70:	mov	r1, #10
   3ff74:	strb	r1, [r0]
   3ff78:	ldr	r0, [r4, #20]
   3ff7c:	ldrb	r2, [r4, #25]
   3ff80:	ldr	r3, [r4, #32]
   3ff84:	ldr	r1, [r4, #16]
   3ff88:	mla	r7, r3, r2, r0
   3ff8c:	mul	r6, r3, r2
   3ff90:	cmp	r7, r1
   3ff94:	bls	40004 <flatcc_json_printer_struct_vector_field@@Base+0x154>
   3ff98:	cmp	r0, r1
   3ff9c:	bcc	3ffb8 <flatcc_json_printer_struct_vector_field@@Base+0x108>
   3ffa0:	ldr	r2, [r4, #44]	; 0x2c
   3ffa4:	mov	r0, r4
   3ffa8:	mov	r1, #0
   3ffac:	blx	r2
   3ffb0:	ldr	r1, [r4, #16]
   3ffb4:	ldr	r0, [r4, #20]
   3ffb8:	sub	r7, r1, r0
   3ffbc:	cmp	r7, r6
   3ffc0:	bcs	40004 <flatcc_json_printer_struct_vector_field@@Base+0x154>
   3ffc4:	mov	r1, #32
   3ffc8:	mov	r2, r7
   3ffcc:	bl	14ef0 <memset@plt>
   3ffd0:	ldr	r0, [r4, #20]
   3ffd4:	ldr	r2, [r4, #44]	; 0x2c
   3ffd8:	mov	r1, #0
   3ffdc:	add	r0, r0, r7
   3ffe0:	str	r0, [r4, #20]
   3ffe4:	mov	r0, r4
   3ffe8:	blx	r2
   3ffec:	ldr	r1, [r4, #16]
   3fff0:	ldr	r0, [r4, #20]
   3fff4:	sub	r6, r6, r7
   3fff8:	sub	r7, r1, r0
   3fffc:	cmp	r6, r7
   40000:	bhi	3ffc4 <flatcc_json_printer_struct_vector_field@@Base+0x114>
   40004:	mov	r1, #32
   40008:	mov	r2, r6
   4000c:	bl	14ef0 <memset@plt>
   40010:	ldr	r0, [r4, #20]
   40014:	add	r0, r0, r6
   40018:	str	r0, [r4, #20]
   4001c:	b	40040 <flatcc_json_printer_struct_vector_field@@Base+0x190>
   40020:	ldr	r1, [r4, #16]
   40024:	cmp	r0, r1
   40028:	bcc	40040 <flatcc_json_printer_struct_vector_field@@Base+0x190>
   4002c:	ldr	r2, [r4, #44]	; 0x2c
   40030:	mov	r0, r4
   40034:	mov	r1, #0
   40038:	blx	r2
   4003c:	ldr	r0, [r4, #20]
   40040:	add	r1, r0, #1
   40044:	ldr	r2, [fp, #16]
   40048:	str	r1, [r4, #20]
   4004c:	ldr	r1, [r4, #32]
   40050:	add	r1, r1, #1
   40054:	str	r1, [r4, #32]
   40058:	mov	r1, #123	; 0x7b
   4005c:	strb	r1, [r0]
   40060:	mov	r0, r4
   40064:	mov	r1, r9
   40068:	blx	r2
   4006c:	ldrb	r1, [r4, #25]
   40070:	ldr	r0, [r4, #20]
   40074:	cmp	r1, #0
   40078:	beq	40138 <flatcc_json_printer_struct_vector_field@@Base+0x288>
   4007c:	add	r1, r0, #1
   40080:	str	r1, [r4, #20]
   40084:	mov	r1, #10
   40088:	strb	r1, [r0]
   4008c:	ldr	r0, [r4, #32]
   40090:	sub	r2, r0, #1
   40094:	str	r2, [r4, #32]
   40098:	ldrb	r3, [r4, #25]
   4009c:	ldr	r0, [r4, #20]
   400a0:	ldr	r1, [r4, #16]
   400a4:	mla	r7, r2, r3, r0
   400a8:	mul	r6, r2, r3
   400ac:	cmp	r7, r1
   400b0:	bls	40120 <flatcc_json_printer_struct_vector_field@@Base+0x270>
   400b4:	cmp	r0, r1
   400b8:	bcc	400d4 <flatcc_json_printer_struct_vector_field@@Base+0x224>
   400bc:	ldr	r2, [r4, #44]	; 0x2c
   400c0:	mov	r0, r4
   400c4:	mov	r1, #0
   400c8:	blx	r2
   400cc:	ldr	r1, [r4, #16]
   400d0:	ldr	r0, [r4, #20]
   400d4:	sub	r7, r1, r0
   400d8:	cmp	r7, r6
   400dc:	bcs	40120 <flatcc_json_printer_struct_vector_field@@Base+0x270>
   400e0:	mov	r1, #32
   400e4:	mov	r2, r7
   400e8:	bl	14ef0 <memset@plt>
   400ec:	ldr	r0, [r4, #20]
   400f0:	ldr	r2, [r4, #44]	; 0x2c
   400f4:	mov	r1, #0
   400f8:	add	r0, r0, r7
   400fc:	str	r0, [r4, #20]
   40100:	mov	r0, r4
   40104:	blx	r2
   40108:	ldr	r1, [r4, #16]
   4010c:	ldr	r0, [r4, #20]
   40110:	sub	r6, r6, r7
   40114:	sub	r7, r1, r0
   40118:	cmp	r6, r7
   4011c:	bhi	400e0 <flatcc_json_printer_struct_vector_field@@Base+0x230>
   40120:	mov	r1, #32
   40124:	mov	r2, r6
   40128:	bl	14ef0 <memset@plt>
   4012c:	ldr	r0, [r4, #20]
   40130:	add	r0, r0, r6
   40134:	str	r0, [r4, #20]
   40138:	add	r1, r0, #1
   4013c:	mov	sl, #125	; 0x7d
   40140:	subs	r5, r5, #1
   40144:	str	r1, [r4, #20]
   40148:	strb	sl, [r0]
   4014c:	beq	40360 <flatcc_json_printer_struct_vector_field@@Base+0x4b0>
   40150:	mov	r8, #10
   40154:	ldr	r0, [r4, #20]
   40158:	add	r1, r0, #1
   4015c:	str	r1, [r4, #20]
   40160:	mov	r1, #44	; 0x2c
   40164:	strb	r1, [r0]
   40168:	ldr	r0, [fp, #12]
   4016c:	ldrb	r1, [r4, #25]
   40170:	add	r9, r9, r0
   40174:	ldr	r0, [r4, #20]
   40178:	cmp	r1, #0
   4017c:	beq	40234 <flatcc_json_printer_struct_vector_field@@Base+0x384>
   40180:	add	r1, r0, #1
   40184:	str	r1, [r4, #20]
   40188:	strb	r8, [r0]
   4018c:	ldr	r0, [r4, #20]
   40190:	ldrb	r2, [r4, #25]
   40194:	ldr	r3, [r4, #32]
   40198:	ldr	r1, [r4, #16]
   4019c:	mla	r7, r3, r2, r0
   401a0:	mul	r6, r3, r2
   401a4:	cmp	r7, r1
   401a8:	bls	40218 <flatcc_json_printer_struct_vector_field@@Base+0x368>
   401ac:	cmp	r0, r1
   401b0:	bcc	401cc <flatcc_json_printer_struct_vector_field@@Base+0x31c>
   401b4:	ldr	r2, [r4, #44]	; 0x2c
   401b8:	mov	r0, r4
   401bc:	mov	r1, #0
   401c0:	blx	r2
   401c4:	ldr	r1, [r4, #16]
   401c8:	ldr	r0, [r4, #20]
   401cc:	sub	r7, r1, r0
   401d0:	cmp	r7, r6
   401d4:	bcs	40218 <flatcc_json_printer_struct_vector_field@@Base+0x368>
   401d8:	mov	r1, #32
   401dc:	mov	r2, r7
   401e0:	bl	14ef0 <memset@plt>
   401e4:	ldr	r0, [r4, #20]
   401e8:	ldr	r2, [r4, #44]	; 0x2c
   401ec:	mov	r1, #0
   401f0:	add	r0, r0, r7
   401f4:	str	r0, [r4, #20]
   401f8:	mov	r0, r4
   401fc:	blx	r2
   40200:	ldr	r1, [r4, #16]
   40204:	ldr	r0, [r4, #20]
   40208:	sub	r6, r6, r7
   4020c:	sub	r7, r1, r0
   40210:	cmp	r6, r7
   40214:	bhi	401d8 <flatcc_json_printer_struct_vector_field@@Base+0x328>
   40218:	mov	r1, #32
   4021c:	mov	r2, r6
   40220:	bl	14ef0 <memset@plt>
   40224:	ldr	r0, [r4, #20]
   40228:	add	r0, r0, r6
   4022c:	str	r0, [r4, #20]
   40230:	b	40254 <flatcc_json_printer_struct_vector_field@@Base+0x3a4>
   40234:	ldr	r1, [r4, #16]
   40238:	cmp	r0, r1
   4023c:	bcc	40254 <flatcc_json_printer_struct_vector_field@@Base+0x3a4>
   40240:	ldr	r2, [r4, #44]	; 0x2c
   40244:	mov	r0, r4
   40248:	mov	r1, #0
   4024c:	blx	r2
   40250:	ldr	r0, [r4, #20]
   40254:	add	r1, r0, #1
   40258:	ldr	r2, [fp, #16]
   4025c:	sub	r5, r5, #1
   40260:	str	r1, [r4, #20]
   40264:	ldr	r1, [r4, #32]
   40268:	add	r1, r1, #1
   4026c:	str	r1, [r4, #32]
   40270:	mov	r1, #123	; 0x7b
   40274:	strb	r1, [r0]
   40278:	mov	r0, r4
   4027c:	mov	r1, r9
   40280:	blx	r2
   40284:	ldrb	r1, [r4, #25]
   40288:	ldr	r0, [r4, #20]
   4028c:	cmp	r1, #0
   40290:	beq	4034c <flatcc_json_printer_struct_vector_field@@Base+0x49c>
   40294:	add	r1, r0, #1
   40298:	str	r1, [r4, #20]
   4029c:	strb	r8, [r0]
   402a0:	ldr	r0, [r4, #32]
   402a4:	sub	r2, r0, #1
   402a8:	str	r2, [r4, #32]
   402ac:	ldrb	r3, [r4, #25]
   402b0:	ldr	r0, [r4, #20]
   402b4:	ldr	r1, [r4, #16]
   402b8:	mla	r7, r2, r3, r0
   402bc:	mul	r6, r2, r3
   402c0:	cmp	r7, r1
   402c4:	bls	40334 <flatcc_json_printer_struct_vector_field@@Base+0x484>
   402c8:	cmp	r0, r1
   402cc:	bcc	402e8 <flatcc_json_printer_struct_vector_field@@Base+0x438>
   402d0:	ldr	r2, [r4, #44]	; 0x2c
   402d4:	mov	r0, r4
   402d8:	mov	r1, #0
   402dc:	blx	r2
   402e0:	ldr	r1, [r4, #16]
   402e4:	ldr	r0, [r4, #20]
   402e8:	sub	r7, r1, r0
   402ec:	cmp	r7, r6
   402f0:	bcs	40334 <flatcc_json_printer_struct_vector_field@@Base+0x484>
   402f4:	mov	r1, #32
   402f8:	mov	r2, r7
   402fc:	bl	14ef0 <memset@plt>
   40300:	ldr	r0, [r4, #20]
   40304:	ldr	r2, [r4, #44]	; 0x2c
   40308:	mov	r1, #0
   4030c:	add	r0, r0, r7
   40310:	str	r0, [r4, #20]
   40314:	mov	r0, r4
   40318:	blx	r2
   4031c:	ldr	r1, [r4, #16]
   40320:	ldr	r0, [r4, #20]
   40324:	sub	r6, r6, r7
   40328:	sub	r7, r1, r0
   4032c:	cmp	r6, r7
   40330:	bhi	402f4 <flatcc_json_printer_struct_vector_field@@Base+0x444>
   40334:	mov	r1, #32
   40338:	mov	r2, r6
   4033c:	bl	14ef0 <memset@plt>
   40340:	ldr	r0, [r4, #20]
   40344:	add	r0, r0, r6
   40348:	str	r0, [r4, #20]
   4034c:	add	r1, r0, #1
   40350:	cmp	r5, #0
   40354:	str	r1, [r4, #20]
   40358:	strb	sl, [r0]
   4035c:	bne	40154 <flatcc_json_printer_struct_vector_field@@Base+0x2a4>
   40360:	ldrb	r1, [r4, #25]
   40364:	ldr	r0, [r4, #20]
   40368:	cmp	r1, #0
   4036c:	beq	4042c <flatcc_json_printer_struct_vector_field@@Base+0x57c>
   40370:	add	r1, r0, #1
   40374:	str	r1, [r4, #20]
   40378:	mov	r1, #10
   4037c:	strb	r1, [r0]
   40380:	ldr	r0, [r4, #32]
   40384:	sub	r2, r0, #1
   40388:	str	r2, [r4, #32]
   4038c:	ldrb	r3, [r4, #25]
   40390:	ldr	r0, [r4, #20]
   40394:	ldr	r1, [r4, #16]
   40398:	mla	r7, r2, r3, r0
   4039c:	mul	r5, r2, r3
   403a0:	cmp	r7, r1
   403a4:	bls	40414 <flatcc_json_printer_struct_vector_field@@Base+0x564>
   403a8:	cmp	r0, r1
   403ac:	bcc	403c8 <flatcc_json_printer_struct_vector_field@@Base+0x518>
   403b0:	ldr	r2, [r4, #44]	; 0x2c
   403b4:	mov	r0, r4
   403b8:	mov	r1, #0
   403bc:	blx	r2
   403c0:	ldr	r1, [r4, #16]
   403c4:	ldr	r0, [r4, #20]
   403c8:	sub	r6, r1, r0
   403cc:	cmp	r6, r5
   403d0:	bcs	40414 <flatcc_json_printer_struct_vector_field@@Base+0x564>
   403d4:	mov	r1, #32
   403d8:	mov	r2, r6
   403dc:	bl	14ef0 <memset@plt>
   403e0:	ldr	r0, [r4, #20]
   403e4:	ldr	r2, [r4, #44]	; 0x2c
   403e8:	mov	r1, #0
   403ec:	add	r0, r0, r6
   403f0:	str	r0, [r4, #20]
   403f4:	mov	r0, r4
   403f8:	blx	r2
   403fc:	ldr	r1, [r4, #16]
   40400:	ldr	r0, [r4, #20]
   40404:	sub	r5, r5, r6
   40408:	sub	r6, r1, r0
   4040c:	cmp	r5, r6
   40410:	bhi	403d4 <flatcc_json_printer_struct_vector_field@@Base+0x524>
   40414:	mov	r1, #32
   40418:	mov	r2, r5
   4041c:	bl	14ef0 <memset@plt>
   40420:	ldr	r0, [r4, #20]
   40424:	add	r0, r0, r5
   40428:	str	r0, [r4, #20]
   4042c:	add	r1, r0, #1
   40430:	str	r1, [r4, #20]
   40434:	mov	r1, #93	; 0x5d
   40438:	strb	r1, [r0]
   4043c:	sub	sp, fp, #28
   40440:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00040444 <flatcc_json_printer_string_vector_field@@Base>:
   40444:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   40448:	add	fp, sp, #28
   4044c:	sub	sp, sp, #4
   40450:	mov	r4, r0
   40454:	mov	r0, #4
   40458:	add	r0, r0, r2, lsl #1
   4045c:	ldr	r2, [r1, #8]
   40460:	cmp	r0, r2
   40464:	bge	407ec <flatcc_json_printer_string_vector_field@@Base+0x3a8>
   40468:	ldr	r2, [r1, #4]
   4046c:	add	r0, r2, r0
   40470:	ldrh	r0, [r0]
   40474:	cmp	r0, #0
   40478:	ldrne	r2, [r1]
   4047c:	addsne	r5, r2, r0
   40480:	beq	407ec <flatcc_json_printer_string_vector_field@@Base+0x3a8>
   40484:	ldr	r0, [r1, #16]
   40488:	ldr	r2, [fp, #8]
   4048c:	add	r7, r0, #1
   40490:	cmp	r0, #0
   40494:	str	r7, [r1, #16]
   40498:	ldrne	r0, [r4, #20]
   4049c:	addne	r1, r0, #1
   404a0:	strne	r1, [r4, #20]
   404a4:	movne	r1, #44	; 0x2c
   404a8:	strbne	r1, [r0]
   404ac:	mov	r1, r3
   404b0:	ldr	r0, [r5]
   404b4:	ldr	r8, [r5, r0]!
   404b8:	mov	r0, r4
   404bc:	bl	38c54 <flatcc_json_printer_string_field@@Base+0x8c>
   404c0:	ldr	r1, [r4, #32]
   404c4:	ldr	r0, [r4, #20]
   404c8:	cmp	r8, #0
   404cc:	add	r1, r1, #1
   404d0:	str	r1, [r4, #32]
   404d4:	add	r1, r0, #1
   404d8:	str	r1, [r4, #20]
   404dc:	mov	r1, #91	; 0x5b
   404e0:	strb	r1, [r0]
   404e4:	beq	40710 <flatcc_json_printer_string_vector_field@@Base+0x2cc>
   404e8:	ldrb	r1, [r4, #25]
   404ec:	ldr	r0, [r4, #20]
   404f0:	add	r9, r5, #4
   404f4:	cmp	r1, #0
   404f8:	beq	405b4 <flatcc_json_printer_string_vector_field@@Base+0x170>
   404fc:	add	r1, r0, #1
   40500:	str	r1, [r4, #20]
   40504:	mov	r1, #10
   40508:	strb	r1, [r0]
   4050c:	ldr	r0, [r4, #20]
   40510:	ldrb	r2, [r4, #25]
   40514:	ldr	r3, [r4, #32]
   40518:	ldr	r1, [r4, #16]
   4051c:	mla	r7, r3, r2, r0
   40520:	mul	r5, r3, r2
   40524:	cmp	r7, r1
   40528:	bls	40598 <flatcc_json_printer_string_vector_field@@Base+0x154>
   4052c:	cmp	r0, r1
   40530:	bcc	4054c <flatcc_json_printer_string_vector_field@@Base+0x108>
   40534:	ldr	r2, [r4, #44]	; 0x2c
   40538:	mov	r0, r4
   4053c:	mov	r1, #0
   40540:	blx	r2
   40544:	ldr	r1, [r4, #16]
   40548:	ldr	r0, [r4, #20]
   4054c:	sub	r6, r1, r0
   40550:	cmp	r6, r5
   40554:	bcs	40598 <flatcc_json_printer_string_vector_field@@Base+0x154>
   40558:	mov	r1, #32
   4055c:	mov	r2, r6
   40560:	bl	14ef0 <memset@plt>
   40564:	ldr	r0, [r4, #20]
   40568:	ldr	r2, [r4, #44]	; 0x2c
   4056c:	mov	r1, #0
   40570:	add	r0, r0, r6
   40574:	str	r0, [r4, #20]
   40578:	mov	r0, r4
   4057c:	blx	r2
   40580:	ldr	r1, [r4, #16]
   40584:	ldr	r0, [r4, #20]
   40588:	sub	r5, r5, r6
   4058c:	sub	r6, r1, r0
   40590:	cmp	r5, r6
   40594:	bhi	40558 <flatcc_json_printer_string_vector_field@@Base+0x114>
   40598:	mov	r1, #32
   4059c:	mov	r2, r5
   405a0:	bl	14ef0 <memset@plt>
   405a4:	ldr	r0, [r4, #20]
   405a8:	add	r0, r0, r5
   405ac:	str	r0, [r4, #20]
   405b0:	b	405d0 <flatcc_json_printer_string_vector_field@@Base+0x18c>
   405b4:	ldr	r1, [r4, #16]
   405b8:	cmp	r0, r1
   405bc:	bcc	405d0 <flatcc_json_printer_string_vector_field@@Base+0x18c>
   405c0:	ldr	r2, [r4, #44]	; 0x2c
   405c4:	mov	r0, r4
   405c8:	mov	r1, #0
   405cc:	blx	r2
   405d0:	ldr	r0, [r9]
   405d4:	mov	r1, r9
   405d8:	ldr	r2, [r1, r0]!
   405dc:	mov	r0, r4
   405e0:	add	r1, r1, #4
   405e4:	bl	3791c <flatcc_json_printer_string@@Base+0x4>
   405e8:	subs	r7, r8, #1
   405ec:	beq	40710 <flatcc_json_printer_string_vector_field@@Base+0x2cc>
   405f0:	mov	r8, #44	; 0x2c
   405f4:	mov	sl, #10
   405f8:	ldr	r0, [r4, #20]
   405fc:	add	r9, r9, #4
   40600:	sub	r7, r7, #1
   40604:	add	r1, r0, #1
   40608:	str	r1, [r4, #20]
   4060c:	strb	r8, [r0]
   40610:	ldrb	r1, [r4, #25]
   40614:	ldr	r0, [r4, #20]
   40618:	cmp	r1, #0
   4061c:	beq	406d4 <flatcc_json_printer_string_vector_field@@Base+0x290>
   40620:	add	r1, r0, #1
   40624:	str	r1, [r4, #20]
   40628:	strb	sl, [r0]
   4062c:	ldr	r0, [r4, #20]
   40630:	ldrb	r2, [r4, #25]
   40634:	ldr	r3, [r4, #32]
   40638:	ldr	r1, [r4, #16]
   4063c:	mla	r6, r3, r2, r0
   40640:	mul	r5, r3, r2
   40644:	cmp	r6, r1
   40648:	bls	406b8 <flatcc_json_printer_string_vector_field@@Base+0x274>
   4064c:	cmp	r0, r1
   40650:	bcc	4066c <flatcc_json_printer_string_vector_field@@Base+0x228>
   40654:	ldr	r2, [r4, #44]	; 0x2c
   40658:	mov	r0, r4
   4065c:	mov	r1, #0
   40660:	blx	r2
   40664:	ldr	r1, [r4, #16]
   40668:	ldr	r0, [r4, #20]
   4066c:	sub	r6, r1, r0
   40670:	cmp	r6, r5
   40674:	bcs	406b8 <flatcc_json_printer_string_vector_field@@Base+0x274>
   40678:	mov	r1, #32
   4067c:	mov	r2, r6
   40680:	bl	14ef0 <memset@plt>
   40684:	ldr	r0, [r4, #20]
   40688:	ldr	r2, [r4, #44]	; 0x2c
   4068c:	mov	r1, #0
   40690:	add	r0, r0, r6
   40694:	str	r0, [r4, #20]
   40698:	mov	r0, r4
   4069c:	blx	r2
   406a0:	ldr	r1, [r4, #16]
   406a4:	ldr	r0, [r4, #20]
   406a8:	sub	r5, r5, r6
   406ac:	sub	r6, r1, r0
   406b0:	cmp	r5, r6
   406b4:	bhi	40678 <flatcc_json_printer_string_vector_field@@Base+0x234>
   406b8:	mov	r1, #32
   406bc:	mov	r2, r5
   406c0:	bl	14ef0 <memset@plt>
   406c4:	ldr	r0, [r4, #20]
   406c8:	add	r0, r0, r5
   406cc:	str	r0, [r4, #20]
   406d0:	b	406f0 <flatcc_json_printer_string_vector_field@@Base+0x2ac>
   406d4:	ldr	r1, [r4, #16]
   406d8:	cmp	r0, r1
   406dc:	bcc	406f0 <flatcc_json_printer_string_vector_field@@Base+0x2ac>
   406e0:	ldr	r2, [r4, #44]	; 0x2c
   406e4:	mov	r0, r4
   406e8:	mov	r1, #0
   406ec:	blx	r2
   406f0:	ldr	r0, [r9]
   406f4:	mov	r1, r9
   406f8:	ldr	r2, [r1, r0]!
   406fc:	mov	r0, r4
   40700:	add	r1, r1, #4
   40704:	bl	3791c <flatcc_json_printer_string@@Base+0x4>
   40708:	cmp	r7, #0
   4070c:	bne	405f8 <flatcc_json_printer_string_vector_field@@Base+0x1b4>
   40710:	ldrb	r1, [r4, #25]
   40714:	ldr	r0, [r4, #20]
   40718:	cmp	r1, #0
   4071c:	beq	407dc <flatcc_json_printer_string_vector_field@@Base+0x398>
   40720:	add	r1, r0, #1
   40724:	str	r1, [r4, #20]
   40728:	mov	r1, #10
   4072c:	strb	r1, [r0]
   40730:	ldr	r0, [r4, #32]
   40734:	sub	r2, r0, #1
   40738:	str	r2, [r4, #32]
   4073c:	ldrb	r3, [r4, #25]
   40740:	ldr	r0, [r4, #20]
   40744:	ldr	r1, [r4, #16]
   40748:	mla	r7, r2, r3, r0
   4074c:	mul	r5, r2, r3
   40750:	cmp	r7, r1
   40754:	bls	407c4 <flatcc_json_printer_string_vector_field@@Base+0x380>
   40758:	cmp	r0, r1
   4075c:	bcc	40778 <flatcc_json_printer_string_vector_field@@Base+0x334>
   40760:	ldr	r2, [r4, #44]	; 0x2c
   40764:	mov	r0, r4
   40768:	mov	r1, #0
   4076c:	blx	r2
   40770:	ldr	r1, [r4, #16]
   40774:	ldr	r0, [r4, #20]
   40778:	sub	r6, r1, r0
   4077c:	cmp	r6, r5
   40780:	bcs	407c4 <flatcc_json_printer_string_vector_field@@Base+0x380>
   40784:	mov	r1, #32
   40788:	mov	r2, r6
   4078c:	bl	14ef0 <memset@plt>
   40790:	ldr	r0, [r4, #20]
   40794:	ldr	r2, [r4, #44]	; 0x2c
   40798:	mov	r1, #0
   4079c:	add	r0, r0, r6
   407a0:	str	r0, [r4, #20]
   407a4:	mov	r0, r4
   407a8:	blx	r2
   407ac:	ldr	r1, [r4, #16]
   407b0:	ldr	r0, [r4, #20]
   407b4:	sub	r5, r5, r6
   407b8:	sub	r6, r1, r0
   407bc:	cmp	r5, r6
   407c0:	bhi	40784 <flatcc_json_printer_string_vector_field@@Base+0x340>
   407c4:	mov	r1, #32
   407c8:	mov	r2, r5
   407cc:	bl	14ef0 <memset@plt>
   407d0:	ldr	r0, [r4, #20]
   407d4:	add	r0, r0, r5
   407d8:	str	r0, [r4, #20]
   407dc:	add	r1, r0, #1
   407e0:	str	r1, [r4, #20]
   407e4:	mov	r1, #93	; 0x5d
   407e8:	strb	r1, [r0]
   407ec:	sub	sp, fp, #28
   407f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000407f4 <flatcc_json_printer_table_vector_field@@Base>:
   407f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   407f8:	add	fp, sp, #28
   407fc:	sub	sp, sp, #20
   40800:	mov	sl, r1
   40804:	ldr	r1, [r1, #8]
   40808:	mov	r4, r0
   4080c:	mov	r0, #4
   40810:	add	r0, r0, r2, lsl #1
   40814:	cmp	r0, r1
   40818:	bge	40c6c <flatcc_json_printer_table_vector_field@@Base+0x478>
   4081c:	ldr	r1, [sl, #4]
   40820:	add	r0, r1, r0
   40824:	ldrh	r0, [r0]
   40828:	cmp	r0, #0
   4082c:	ldrne	r1, [sl]
   40830:	addsne	r5, r1, r0
   40834:	beq	40c6c <flatcc_json_printer_table_vector_field@@Base+0x478>
   40838:	ldr	r0, [sl, #16]
   4083c:	ldr	r2, [fp, #8]
   40840:	add	r1, r0, #1
   40844:	cmp	r0, #0
   40848:	str	r1, [sl, #16]
   4084c:	ldrne	r0, [r4, #20]
   40850:	addne	r1, r0, #1
   40854:	strne	r1, [r4, #20]
   40858:	movne	r1, #44	; 0x2c
   4085c:	strbne	r1, [r0]
   40860:	mov	r1, r3
   40864:	ldr	r0, [r5]
   40868:	ldr	r8, [r5, r0]!
   4086c:	mov	r0, r4
   40870:	bl	38c54 <flatcc_json_printer_string_field@@Base+0x8c>
   40874:	ldr	r1, [r4, #32]
   40878:	ldr	r0, [r4, #20]
   4087c:	cmp	r8, #0
   40880:	add	r1, r1, #1
   40884:	str	r1, [r4, #32]
   40888:	add	r1, r0, #1
   4088c:	str	r1, [r4, #20]
   40890:	mov	r1, #91	; 0x5b
   40894:	strb	r1, [r0]
   40898:	beq	40b90 <flatcc_json_printer_table_vector_field@@Base+0x39c>
   4089c:	ldr	r0, [sl, #12]
   408a0:	ldr	r6, [fp, #12]
   408a4:	add	r5, r5, #4
   408a8:	subs	r0, r0, #1
   408ac:	beq	409ec <flatcc_json_printer_table_vector_field@@Base+0x1f8>
   408b0:	ldr	r3, [r4, #32]
   408b4:	ldr	r2, [r4, #20]
   408b8:	ldr	r1, [r5]
   408bc:	add	r3, r3, #1
   408c0:	add	r1, r5, r1
   408c4:	str	r3, [r4, #32]
   408c8:	add	r3, r2, #1
   408cc:	str	r3, [r4, #20]
   408d0:	mov	r3, #123	; 0x7b
   408d4:	strb	r3, [r2]
   408d8:	str	r0, [sp, #12]
   408dc:	mov	r0, #0
   408e0:	str	r0, [sp, #16]
   408e4:	str	r1, [sp]
   408e8:	ldr	r0, [r1]
   408ec:	sub	r2, r1, r0
   408f0:	str	r2, [sp, #4]
   408f4:	ldrh	r0, [r1, -r0]
   408f8:	mov	r1, sp
   408fc:	str	r0, [sp, #8]
   40900:	mov	r0, r4
   40904:	blx	r6
   40908:	ldrb	r1, [r4, #25]
   4090c:	ldr	r0, [r4, #20]
   40910:	cmp	r1, #0
   40914:	beq	409d8 <flatcc_json_printer_table_vector_field@@Base+0x1e4>
   40918:	add	r1, r0, #1
   4091c:	str	r1, [r4, #20]
   40920:	mov	r1, #10
   40924:	strb	r1, [r0]
   40928:	ldr	r0, [r4, #32]
   4092c:	sub	r2, r0, #1
   40930:	str	r2, [r4, #32]
   40934:	ldrb	r3, [r4, #25]
   40938:	ldr	r0, [r4, #20]
   4093c:	ldr	r1, [r4, #16]
   40940:	mla	r7, r2, r3, r0
   40944:	mul	r6, r2, r3
   40948:	cmp	r7, r1
   4094c:	bls	409bc <flatcc_json_printer_table_vector_field@@Base+0x1c8>
   40950:	cmp	r0, r1
   40954:	bcc	40970 <flatcc_json_printer_table_vector_field@@Base+0x17c>
   40958:	ldr	r2, [r4, #44]	; 0x2c
   4095c:	mov	r0, r4
   40960:	mov	r1, #0
   40964:	blx	r2
   40968:	ldr	r1, [r4, #16]
   4096c:	ldr	r0, [r4, #20]
   40970:	sub	r7, r1, r0
   40974:	cmp	r7, r6
   40978:	bcs	409bc <flatcc_json_printer_table_vector_field@@Base+0x1c8>
   4097c:	mov	r1, #32
   40980:	mov	r2, r7
   40984:	bl	14ef0 <memset@plt>
   40988:	ldr	r0, [r4, #20]
   4098c:	ldr	r2, [r4, #44]	; 0x2c
   40990:	mov	r1, #0
   40994:	add	r0, r0, r7
   40998:	str	r0, [r4, #20]
   4099c:	mov	r0, r4
   409a0:	blx	r2
   409a4:	ldr	r1, [r4, #16]
   409a8:	ldr	r0, [r4, #20]
   409ac:	sub	r6, r6, r7
   409b0:	sub	r7, r1, r0
   409b4:	cmp	r6, r7
   409b8:	bhi	4097c <flatcc_json_printer_table_vector_field@@Base+0x188>
   409bc:	mov	r1, #32
   409c0:	mov	r2, r6
   409c4:	bl	14ef0 <memset@plt>
   409c8:	ldr	r0, [r4, #20]
   409cc:	add	r0, r0, r6
   409d0:	ldr	r6, [fp, #12]
   409d4:	str	r0, [r4, #20]
   409d8:	add	r1, r0, #1
   409dc:	str	r1, [r4, #20]
   409e0:	mov	r1, #125	; 0x7d
   409e4:	strb	r1, [r0]
   409e8:	b	409fc <flatcc_json_printer_table_vector_field@@Base+0x208>
   409ec:	ldr	r0, [r4, #36]	; 0x24
   409f0:	cmp	r0, #0
   409f4:	moveq	r0, #2
   409f8:	streq	r0, [r4, #36]	; 0x24
   409fc:	subs	r9, r8, #1
   40a00:	beq	40b90 <flatcc_json_printer_table_vector_field@@Base+0x39c>
   40a04:	mov	r8, #44	; 0x2c
   40a08:	ldr	r0, [r4, #20]
   40a0c:	sub	r9, r9, #1
   40a10:	add	r1, r0, #1
   40a14:	str	r1, [r4, #20]
   40a18:	strb	r8, [r0]
   40a1c:	ldr	r0, [sl, #12]
   40a20:	ldr	r1, [r5, #4]!
   40a24:	subs	r0, r0, #1
   40a28:	beq	40b48 <flatcc_json_printer_table_vector_field@@Base+0x354>
   40a2c:	ldr	r3, [r4, #32]
   40a30:	ldr	r2, [r4, #20]
   40a34:	add	r1, r5, r1
   40a38:	add	r3, r3, #1
   40a3c:	str	r3, [r4, #32]
   40a40:	add	r3, r2, #1
   40a44:	str	r3, [r4, #20]
   40a48:	mov	r3, #123	; 0x7b
   40a4c:	strb	r3, [r2]
   40a50:	str	r0, [sp, #12]
   40a54:	mov	r0, #0
   40a58:	str	r0, [sp, #16]
   40a5c:	str	r1, [sp]
   40a60:	ldr	r0, [r1]
   40a64:	sub	r2, r1, r0
   40a68:	str	r2, [sp, #4]
   40a6c:	ldrh	r0, [r1, -r0]
   40a70:	mov	r1, sp
   40a74:	str	r0, [sp, #8]
   40a78:	mov	r0, r4
   40a7c:	blx	r6
   40a80:	ldrb	r1, [r4, #25]
   40a84:	ldr	r0, [r4, #20]
   40a88:	cmp	r1, #0
   40a8c:	beq	40b78 <flatcc_json_printer_table_vector_field@@Base+0x384>
   40a90:	add	r1, r0, #1
   40a94:	str	r1, [r4, #20]
   40a98:	mov	r1, #10
   40a9c:	strb	r1, [r0]
   40aa0:	ldr	r0, [r4, #32]
   40aa4:	sub	r2, r0, #1
   40aa8:	str	r2, [r4, #32]
   40aac:	ldrb	r3, [r4, #25]
   40ab0:	ldr	r0, [r4, #20]
   40ab4:	ldr	r1, [r4, #16]
   40ab8:	mla	r6, r2, r3, r0
   40abc:	mul	r7, r2, r3
   40ac0:	cmp	r6, r1
   40ac4:	bls	40b5c <flatcc_json_printer_table_vector_field@@Base+0x368>
   40ac8:	cmp	r0, r1
   40acc:	bcc	40ae8 <flatcc_json_printer_table_vector_field@@Base+0x2f4>
   40ad0:	ldr	r2, [r4, #44]	; 0x2c
   40ad4:	mov	r0, r4
   40ad8:	mov	r1, #0
   40adc:	blx	r2
   40ae0:	ldr	r1, [r4, #16]
   40ae4:	ldr	r0, [r4, #20]
   40ae8:	sub	r6, r1, r0
   40aec:	cmp	r6, r7
   40af0:	bcs	40b34 <flatcc_json_printer_table_vector_field@@Base+0x340>
   40af4:	mov	r1, #32
   40af8:	mov	r2, r6
   40afc:	bl	14ef0 <memset@plt>
   40b00:	ldr	r0, [r4, #20]
   40b04:	ldr	r2, [r4, #44]	; 0x2c
   40b08:	mov	r1, #0
   40b0c:	add	r0, r0, r6
   40b10:	str	r0, [r4, #20]
   40b14:	mov	r0, r4
   40b18:	blx	r2
   40b1c:	ldr	r1, [r4, #16]
   40b20:	ldr	r0, [r4, #20]
   40b24:	sub	r7, r7, r6
   40b28:	sub	r6, r1, r0
   40b2c:	cmp	r7, r6
   40b30:	bhi	40af4 <flatcc_json_printer_table_vector_field@@Base+0x300>
   40b34:	ldr	r6, [fp, #12]
   40b38:	mov	r1, #32
   40b3c:	mov	r2, r7
   40b40:	bl	14ef0 <memset@plt>
   40b44:	b	40b6c <flatcc_json_printer_table_vector_field@@Base+0x378>
   40b48:	ldr	r0, [r4, #36]	; 0x24
   40b4c:	cmp	r0, #0
   40b50:	moveq	r0, #2
   40b54:	streq	r0, [r4, #36]	; 0x24
   40b58:	b	40b88 <flatcc_json_printer_table_vector_field@@Base+0x394>
   40b5c:	mov	r1, #32
   40b60:	mov	r2, r7
   40b64:	bl	14ef0 <memset@plt>
   40b68:	ldr	r6, [fp, #12]
   40b6c:	ldr	r0, [r4, #20]
   40b70:	add	r0, r0, r7
   40b74:	str	r0, [r4, #20]
   40b78:	add	r1, r0, #1
   40b7c:	str	r1, [r4, #20]
   40b80:	mov	r1, #125	; 0x7d
   40b84:	strb	r1, [r0]
   40b88:	cmp	r9, #0
   40b8c:	bne	40a08 <flatcc_json_printer_table_vector_field@@Base+0x214>
   40b90:	ldrb	r1, [r4, #25]
   40b94:	ldr	r0, [r4, #20]
   40b98:	cmp	r1, #0
   40b9c:	beq	40c5c <flatcc_json_printer_table_vector_field@@Base+0x468>
   40ba0:	add	r1, r0, #1
   40ba4:	str	r1, [r4, #20]
   40ba8:	mov	r1, #10
   40bac:	strb	r1, [r0]
   40bb0:	ldr	r0, [r4, #32]
   40bb4:	sub	r2, r0, #1
   40bb8:	str	r2, [r4, #32]
   40bbc:	ldrb	r3, [r4, #25]
   40bc0:	ldr	r0, [r4, #20]
   40bc4:	ldr	r1, [r4, #16]
   40bc8:	mla	r7, r2, r3, r0
   40bcc:	mul	r5, r2, r3
   40bd0:	cmp	r7, r1
   40bd4:	bls	40c44 <flatcc_json_printer_table_vector_field@@Base+0x450>
   40bd8:	cmp	r0, r1
   40bdc:	bcc	40bf8 <flatcc_json_printer_table_vector_field@@Base+0x404>
   40be0:	ldr	r2, [r4, #44]	; 0x2c
   40be4:	mov	r0, r4
   40be8:	mov	r1, #0
   40bec:	blx	r2
   40bf0:	ldr	r1, [r4, #16]
   40bf4:	ldr	r0, [r4, #20]
   40bf8:	sub	r6, r1, r0
   40bfc:	cmp	r6, r5
   40c00:	bcs	40c44 <flatcc_json_printer_table_vector_field@@Base+0x450>
   40c04:	mov	r1, #32
   40c08:	mov	r2, r6
   40c0c:	bl	14ef0 <memset@plt>
   40c10:	ldr	r0, [r4, #20]
   40c14:	ldr	r2, [r4, #44]	; 0x2c
   40c18:	mov	r1, #0
   40c1c:	add	r0, r0, r6
   40c20:	str	r0, [r4, #20]
   40c24:	mov	r0, r4
   40c28:	blx	r2
   40c2c:	ldr	r1, [r4, #16]
   40c30:	ldr	r0, [r4, #20]
   40c34:	sub	r5, r5, r6
   40c38:	sub	r6, r1, r0
   40c3c:	cmp	r5, r6
   40c40:	bhi	40c04 <flatcc_json_printer_table_vector_field@@Base+0x410>
   40c44:	mov	r1, #32
   40c48:	mov	r2, r5
   40c4c:	bl	14ef0 <memset@plt>
   40c50:	ldr	r0, [r4, #20]
   40c54:	add	r0, r0, r5
   40c58:	str	r0, [r4, #20]
   40c5c:	add	r1, r0, #1
   40c60:	str	r1, [r4, #20]
   40c64:	mov	r1, #93	; 0x5d
   40c68:	strb	r1, [r0]
   40c6c:	sub	sp, fp, #28
   40c70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00040c74 <flatcc_json_printer_union_vector_field@@Base>:
   40c74:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   40c78:	add	fp, sp, #28
   40c7c:	sub	sp, sp, #140	; 0x8c
   40c80:	mov	r6, r1
   40c84:	mov	r9, r0
   40c88:	sub	r1, r2, #1
   40c8c:	mov	r0, #4
   40c90:	mov	r4, r3
   40c94:	mov	r5, #0
   40c98:	mov	r8, #0
   40c9c:	str	r1, [sp, #8]
   40ca0:	add	r3, r0, r1, lsl #1
   40ca4:	ldr	r1, [r6, #8]
   40ca8:	cmp	r3, r1
   40cac:	bge	40ccc <flatcc_json_printer_union_vector_field@@Base+0x58>
   40cb0:	ldr	r7, [r6, #4]
   40cb4:	mov	r8, #0
   40cb8:	add	r3, r7, r3
   40cbc:	ldrh	r3, [r3]
   40cc0:	cmp	r3, #0
   40cc4:	ldrne	r7, [r6]
   40cc8:	addne	r8, r7, r3
   40ccc:	ldr	sl, [fp, #8]
   40cd0:	add	r0, r0, r2, lsl #1
   40cd4:	cmp	r0, r1
   40cd8:	bge	40cf4 <flatcc_json_printer_union_vector_field@@Base+0x80>
   40cdc:	ldr	r1, [r6, #4]
   40ce0:	add	r0, r1, r0
   40ce4:	ldrh	r0, [r0]
   40ce8:	cmp	r0, #0
   40cec:	ldrne	r1, [r6]
   40cf0:	addne	r5, r1, r0
   40cf4:	ldr	r0, [r6, #12]
   40cf8:	cmp	sl, #101	; 0x65
   40cfc:	str	r5, [sp, #16]
   40d00:	str	r0, [sp, #24]
   40d04:	bge	40ffc <flatcc_json_printer_union_vector_field@@Base+0x388>
   40d08:	add	r5, sp, #32
   40d0c:	mov	r1, r4
   40d10:	mov	r2, sl
   40d14:	str	r4, [sp, #12]
   40d18:	mov	r0, r5
   40d1c:	bl	14e60 <memcpy@plt>
   40d20:	movw	r0, #29791	; 0x745f
   40d24:	cmp	r8, #0
   40d28:	mov	r1, #101	; 0x65
   40d2c:	movt	r0, #28793	; 0x7079
   40d30:	str	r0, [r5, sl]
   40d34:	add	r0, r5, sl
   40d38:	ldr	r5, [sp, #16]
   40d3c:	strb	r1, [r0, #4]
   40d40:	cmpne	r5, #0
   40d44:	beq	40ff4 <flatcc_json_printer_union_vector_field@@Base+0x380>
   40d48:	ldr	r0, [fp, #12]
   40d4c:	ldr	r2, [sp, #8]
   40d50:	add	r1, sl, #5
   40d54:	add	r3, sp, #32
   40d58:	str	r1, [sp]
   40d5c:	mov	r1, r6
   40d60:	str	r0, [sp, #4]
   40d64:	mov	r0, r9
   40d68:	bl	3d9a0 <flatcc_json_printer_utype_enum_vector_field@@Base>
   40d6c:	ldr	r0, [r6, #16]
   40d70:	add	r7, r9, #20
   40d74:	mov	r2, sl
   40d78:	add	r1, r0, #1
   40d7c:	cmp	r0, #0
   40d80:	str	r1, [r6, #16]
   40d84:	mov	r6, r5
   40d88:	ldrne	r0, [r7]
   40d8c:	addne	r1, r0, #1
   40d90:	strne	r1, [r7]
   40d94:	movne	r1, #44	; 0x2c
   40d98:	strbne	r1, [r0]
   40d9c:	ldr	r1, [sp, #12]
   40da0:	ldr	r0, [r5]
   40da4:	ldr	r5, [r8]
   40da8:	ldr	r4, [r6, r0]!
   40dac:	str	r0, [sp, #8]
   40db0:	mov	r0, r9
   40db4:	bl	38c54 <flatcc_json_printer_string_field@@Base+0x8c>
   40db8:	ldr	r1, [r9, #32]
   40dbc:	ldr	r0, [r9, #20]
   40dc0:	cmp	r4, #0
   40dc4:	add	r1, r1, #1
   40dc8:	str	r1, [r9, #32]
   40dcc:	add	r1, r0, #1
   40dd0:	str	r1, [r9, #20]
   40dd4:	mov	r1, #91	; 0x5b
   40dd8:	strb	r1, [r0]
   40ddc:	beq	40f18 <flatcc_json_printer_union_vector_field@@Base+0x2a4>
   40de0:	add	r5, r8, r5
   40de4:	ldr	r2, [fp, #16]
   40de8:	ldrb	r0, [r5, #4]
   40dec:	cmp	r0, #0
   40df0:	beq	40e14 <flatcc_json_printer_union_vector_field@@Base+0x1a0>
   40df4:	add	r1, r6, #4
   40df8:	mov	r8, r2
   40dfc:	str	r1, [sp, #20]
   40e00:	strb	r0, [sp, #28]
   40e04:	add	r1, sp, #20
   40e08:	mov	r0, r9
   40e0c:	blx	r2
   40e10:	b	40e64 <flatcc_json_printer_union_vector_field@@Base+0x1f0>
   40e14:	ldr	r0, [r7]
   40e18:	mov	r8, r2
   40e1c:	add	r1, r0, #1
   40e20:	str	r1, [r7]
   40e24:	mov	r1, #110	; 0x6e
   40e28:	strb	r1, [r0]
   40e2c:	ldr	r0, [r7]
   40e30:	add	r1, r0, #1
   40e34:	str	r1, [r7]
   40e38:	mov	r1, #117	; 0x75
   40e3c:	strb	r1, [r0]
   40e40:	ldr	r0, [r7]
   40e44:	add	r1, r0, #1
   40e48:	str	r1, [r7]
   40e4c:	mov	r1, #108	; 0x6c
   40e50:	strb	r1, [r0]
   40e54:	ldr	r0, [r7]
   40e58:	add	r2, r0, #1
   40e5c:	str	r2, [r7]
   40e60:	strb	r1, [r0]
   40e64:	cmp	r4, #1
   40e68:	beq	40f18 <flatcc_json_printer_union_vector_field@@Base+0x2a4>
   40e6c:	ldr	r0, [sp, #16]
   40e70:	ldr	r1, [sp, #8]
   40e74:	add	r5, r5, #5
   40e78:	rsb	r4, r4, #1
   40e7c:	mov	sl, #44	; 0x2c
   40e80:	add	r0, r0, r1
   40e84:	add	r6, r0, #8
   40e88:	ldrb	r0, [r5]
   40e8c:	ldr	r1, [r7]
   40e90:	add	r2, r1, #1
   40e94:	cmp	r0, #0
   40e98:	str	r2, [r7]
   40e9c:	strb	sl, [r1]
   40ea0:	beq	40ebc <flatcc_json_printer_union_vector_field@@Base+0x248>
   40ea4:	str	r6, [sp, #20]
   40ea8:	strb	r0, [sp, #28]
   40eac:	mov	r0, r9
   40eb0:	add	r1, sp, #20
   40eb4:	blx	r8
   40eb8:	b	40f08 <flatcc_json_printer_union_vector_field@@Base+0x294>
   40ebc:	ldr	r0, [r7]
   40ec0:	mov	r2, #108	; 0x6c
   40ec4:	add	r1, r0, #1
   40ec8:	str	r1, [r7]
   40ecc:	mov	r1, #110	; 0x6e
   40ed0:	strb	r1, [r0]
   40ed4:	ldr	r0, [r7]
   40ed8:	add	r1, r0, #1
   40edc:	str	r1, [r7]
   40ee0:	mov	r1, #117	; 0x75
   40ee4:	strb	r1, [r0]
   40ee8:	ldr	r0, [r7]
   40eec:	add	r1, r0, #1
   40ef0:	str	r1, [r7]
   40ef4:	strb	r2, [r0]
   40ef8:	ldr	r0, [r7]
   40efc:	add	r1, r0, #1
   40f00:	str	r1, [r7]
   40f04:	strb	r2, [r0]
   40f08:	add	r6, r6, #4
   40f0c:	add	r5, r5, #1
   40f10:	adds	r4, r4, #1
   40f14:	bne	40e88 <flatcc_json_printer_union_vector_field@@Base+0x214>
   40f18:	ldrb	r1, [r9, #25]
   40f1c:	ldr	r0, [r9, #20]
   40f20:	cmp	r1, #0
   40f24:	beq	40fe4 <flatcc_json_printer_union_vector_field@@Base+0x370>
   40f28:	add	r1, r0, #1
   40f2c:	str	r1, [r9, #20]
   40f30:	mov	r1, #10
   40f34:	strb	r1, [r0]
   40f38:	ldr	r0, [r9, #32]
   40f3c:	sub	r2, r0, #1
   40f40:	str	r2, [r9, #32]
   40f44:	ldrb	r3, [r9, #25]
   40f48:	ldr	r0, [r9, #20]
   40f4c:	ldr	r1, [r9, #16]
   40f50:	mla	r6, r2, r3, r0
   40f54:	mul	r5, r2, r3
   40f58:	cmp	r6, r1
   40f5c:	bls	40fcc <flatcc_json_printer_union_vector_field@@Base+0x358>
   40f60:	cmp	r0, r1
   40f64:	bcc	40f80 <flatcc_json_printer_union_vector_field@@Base+0x30c>
   40f68:	ldr	r2, [r9, #44]	; 0x2c
   40f6c:	mov	r0, r9
   40f70:	mov	r1, #0
   40f74:	blx	r2
   40f78:	ldr	r1, [r9, #16]
   40f7c:	ldr	r0, [r9, #20]
   40f80:	sub	r6, r1, r0
   40f84:	cmp	r6, r5
   40f88:	bcs	40fcc <flatcc_json_printer_union_vector_field@@Base+0x358>
   40f8c:	mov	r1, #32
   40f90:	mov	r2, r6
   40f94:	bl	14ef0 <memset@plt>
   40f98:	ldr	r0, [r9, #20]
   40f9c:	ldr	r2, [r9, #44]	; 0x2c
   40fa0:	mov	r1, #0
   40fa4:	add	r0, r0, r6
   40fa8:	str	r0, [r9, #20]
   40fac:	mov	r0, r9
   40fb0:	blx	r2
   40fb4:	ldr	r1, [r9, #16]
   40fb8:	ldr	r0, [r9, #20]
   40fbc:	sub	r5, r5, r6
   40fc0:	sub	r6, r1, r0
   40fc4:	cmp	r5, r6
   40fc8:	bhi	40f8c <flatcc_json_printer_union_vector_field@@Base+0x318>
   40fcc:	mov	r1, #32
   40fd0:	mov	r2, r5
   40fd4:	bl	14ef0 <memset@plt>
   40fd8:	ldr	r0, [r7]
   40fdc:	add	r0, r0, r5
   40fe0:	str	r0, [r7]
   40fe4:	add	r1, r0, #1
   40fe8:	str	r1, [r7]
   40fec:	mov	r1, #93	; 0x5d
   40ff0:	strb	r1, [r0]
   40ff4:	sub	sp, fp, #28
   40ff8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   40ffc:	ldr	r0, [r9, #36]	; 0x24
   41000:	movw	r1, #39099	; 0x98bb
   41004:	movw	r3, #39174	; 0x9906
   41008:	movw	r2, #843	; 0x34b
   4100c:	movt	r1, #4
   41010:	movt	r3, #4
   41014:	cmp	r0, #0
   41018:	moveq	r0, #1
   4101c:	streq	r0, [r9, #36]	; 0x24
   41020:	movw	r0, #39072	; 0x98a0
   41024:	movt	r0, #4
   41028:	bl	14f44 <__assert_fail@plt>

0004102c <flatcc_json_printer_table_field@@Base>:
   4102c:	push	{r4, r5, r6, sl, fp, lr}
   41030:	add	fp, sp, #16
   41034:	sub	sp, sp, #24
   41038:	mov	r5, r1
   4103c:	ldr	r1, [r1, #8]
   41040:	mov	r4, r0
   41044:	mov	r0, #4
   41048:	add	r0, r0, r2, lsl #1
   4104c:	cmp	r0, r1
   41050:	bge	41070 <flatcc_json_printer_table_field@@Base+0x44>
   41054:	ldr	r1, [r5, #4]
   41058:	add	r0, r1, r0
   4105c:	ldrh	r0, [r0]
   41060:	cmp	r0, #0
   41064:	ldrne	r1, [r5]
   41068:	addsne	r6, r1, r0
   4106c:	bne	41078 <flatcc_json_printer_table_field@@Base+0x4c>
   41070:	sub	sp, fp, #16
   41074:	pop	{r4, r5, r6, sl, fp, pc}
   41078:	ldr	r0, [r5, #16]
   4107c:	ldr	r2, [fp, #8]
   41080:	add	r1, r0, #1
   41084:	cmp	r0, #0
   41088:	str	r1, [r5, #16]
   4108c:	ldrne	r0, [r4, #20]
   41090:	addne	r1, r0, #1
   41094:	strne	r1, [r4, #20]
   41098:	movne	r1, #44	; 0x2c
   4109c:	strbne	r1, [r0]
   410a0:	mov	r0, r4
   410a4:	mov	r1, r3
   410a8:	bl	38c54 <flatcc_json_printer_string_field@@Base+0x8c>
   410ac:	ldr	r0, [r5, #12]
   410b0:	subs	r0, r0, #1
   410b4:	beq	411f4 <flatcc_json_printer_table_field@@Base+0x1c8>
   410b8:	ldr	r1, [r6]
   410bc:	ldr	r3, [r4, #20]
   410c0:	ldr	r2, [fp, #12]
   410c4:	add	r1, r6, r1
   410c8:	ldr	r6, [r4, #32]
   410cc:	add	r6, r6, #1
   410d0:	str	r6, [r4, #32]
   410d4:	add	r6, r3, #1
   410d8:	str	r6, [r4, #20]
   410dc:	mov	r6, #123	; 0x7b
   410e0:	strb	r6, [r3]
   410e4:	str	r0, [sp, #16]
   410e8:	mov	r0, #0
   410ec:	str	r0, [sp, #20]
   410f0:	str	r1, [sp, #4]
   410f4:	ldr	r0, [r1]
   410f8:	sub	r3, r1, r0
   410fc:	str	r3, [sp, #8]
   41100:	ldrh	r0, [r1, -r0]
   41104:	add	r1, sp, #4
   41108:	str	r0, [sp, #12]
   4110c:	mov	r0, r4
   41110:	blx	r2
   41114:	ldrb	r1, [r4, #25]
   41118:	ldr	r0, [r4, #20]
   4111c:	cmp	r1, #0
   41120:	beq	411e0 <flatcc_json_printer_table_field@@Base+0x1b4>
   41124:	add	r1, r0, #1
   41128:	str	r1, [r4, #20]
   4112c:	mov	r1, #10
   41130:	strb	r1, [r0]
   41134:	ldr	r0, [r4, #32]
   41138:	sub	r2, r0, #1
   4113c:	str	r2, [r4, #32]
   41140:	ldrb	r3, [r4, #25]
   41144:	ldr	r0, [r4, #20]
   41148:	ldr	r1, [r4, #16]
   4114c:	mla	r6, r2, r3, r0
   41150:	mul	r5, r2, r3
   41154:	cmp	r6, r1
   41158:	bls	411c8 <flatcc_json_printer_table_field@@Base+0x19c>
   4115c:	cmp	r0, r1
   41160:	bcc	4117c <flatcc_json_printer_table_field@@Base+0x150>
   41164:	ldr	r2, [r4, #44]	; 0x2c
   41168:	mov	r0, r4
   4116c:	mov	r1, #0
   41170:	blx	r2
   41174:	ldr	r1, [r4, #16]
   41178:	ldr	r0, [r4, #20]
   4117c:	sub	r6, r1, r0
   41180:	cmp	r6, r5
   41184:	bcs	411c8 <flatcc_json_printer_table_field@@Base+0x19c>
   41188:	mov	r1, #32
   4118c:	mov	r2, r6
   41190:	bl	14ef0 <memset@plt>
   41194:	ldr	r0, [r4, #20]
   41198:	ldr	r2, [r4, #44]	; 0x2c
   4119c:	mov	r1, #0
   411a0:	add	r0, r0, r6
   411a4:	str	r0, [r4, #20]
   411a8:	mov	r0, r4
   411ac:	blx	r2
   411b0:	ldr	r1, [r4, #16]
   411b4:	ldr	r0, [r4, #20]
   411b8:	sub	r5, r5, r6
   411bc:	sub	r6, r1, r0
   411c0:	cmp	r5, r6
   411c4:	bhi	41188 <flatcc_json_printer_table_field@@Base+0x15c>
   411c8:	mov	r1, #32
   411cc:	mov	r2, r5
   411d0:	bl	14ef0 <memset@plt>
   411d4:	ldr	r0, [r4, #20]
   411d8:	add	r0, r0, r5
   411dc:	str	r0, [r4, #20]
   411e0:	add	r1, r0, #1
   411e4:	str	r1, [r4, #20]
   411e8:	mov	r1, #125	; 0x7d
   411ec:	strb	r1, [r0]
   411f0:	b	41070 <flatcc_json_printer_table_field@@Base+0x44>
   411f4:	ldr	r0, [r4, #36]	; 0x24
   411f8:	cmp	r0, #0
   411fc:	moveq	r0, #2
   41200:	streq	r0, [r4, #36]	; 0x24
   41204:	b	41070 <flatcc_json_printer_table_field@@Base+0x44>

00041208 <flatcc_json_printer_union_field@@Base>:
   41208:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4120c:	add	fp, sp, #28
   41210:	sub	sp, sp, #20
   41214:	mov	r9, r1
   41218:	mov	r4, r0
   4121c:	mov	r0, #2
   41220:	mov	r8, r3
   41224:	lsl	r1, r2, #1
   41228:	add	r3, r0, r2, lsl #1
   4122c:	ldr	r2, [r9, #8]
   41230:	mov	r0, #0
   41234:	cmp	r3, r2
   41238:	bge	41254 <flatcc_json_printer_union_field@@Base+0x4c>
   4123c:	ldr	r7, [r9, #4]
   41240:	add	r3, r7, r3
   41244:	ldrh	r3, [r3]
   41248:	cmp	r3, #0
   4124c:	ldrne	r0, [r9]
   41250:	addne	r0, r0, r3
   41254:	add	r1, r1, #4
   41258:	cmp	r1, r2
   4125c:	bge	41284 <flatcc_json_printer_union_field@@Base+0x7c>
   41260:	ldr	r2, [r9, #4]
   41264:	add	r1, r2, r1
   41268:	ldrh	r1, [r1]
   4126c:	cmp	r1, #0
   41270:	beq	41284 <flatcc_json_printer_union_field@@Base+0x7c>
   41274:	cmp	r0, #0
   41278:	ldrne	r2, [r9]
   4127c:	addsne	r2, r2, r1
   41280:	bne	4128c <flatcc_json_printer_union_field@@Base+0x84>
   41284:	sub	sp, fp, #28
   41288:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4128c:	ldrb	r3, [r0]
   41290:	ldr	r0, [r9, #16]
   41294:	ldr	r7, [fp, #8]
   41298:	str	r2, [sp, #4]
   4129c:	add	r1, r0, #1
   412a0:	cmp	r0, #0
   412a4:	str	r3, [sp]
   412a8:	str	r1, [r9, #16]
   412ac:	ldrne	r0, [r4, #20]
   412b0:	addne	r1, r0, #1
   412b4:	strne	r1, [r4, #20]
   412b8:	movne	r1, #44	; 0x2c
   412bc:	strbne	r1, [r0]
   412c0:	ldrb	r1, [r4, #25]
   412c4:	ldr	r0, [r4, #20]
   412c8:	cmp	r1, #0
   412cc:	beq	41390 <flatcc_json_printer_union_field@@Base+0x188>
   412d0:	add	r1, r0, #1
   412d4:	mov	sl, r4
   412d8:	str	r1, [r4, #20]
   412dc:	mov	r1, #10
   412e0:	strb	r1, [r0]
   412e4:	ldr	r1, [sl, #16]!
   412e8:	ldr	r0, [r4, #20]
   412ec:	ldrb	r2, [sl, #9]
   412f0:	ldr	r3, [sl, #16]
   412f4:	mla	r6, r3, r2, r0
   412f8:	mul	r7, r3, r2
   412fc:	cmp	r6, r1
   41300:	bls	41370 <flatcc_json_printer_union_field@@Base+0x168>
   41304:	cmp	r0, r1
   41308:	bcc	41324 <flatcc_json_printer_union_field@@Base+0x11c>
   4130c:	ldr	r2, [r4, #44]	; 0x2c
   41310:	mov	r0, r4
   41314:	mov	r1, #0
   41318:	blx	r2
   4131c:	ldr	r1, [r4, #16]
   41320:	ldr	r0, [r4, #20]
   41324:	sub	r5, r1, r0
   41328:	cmp	r5, r7
   4132c:	bcs	41370 <flatcc_json_printer_union_field@@Base+0x168>
   41330:	mov	r1, #32
   41334:	mov	r2, r5
   41338:	bl	14ef0 <memset@plt>
   4133c:	ldr	r0, [r4, #20]
   41340:	ldr	r2, [r4, #44]	; 0x2c
   41344:	mov	r1, #0
   41348:	add	r0, r0, r5
   4134c:	str	r0, [r4, #20]
   41350:	mov	r0, r4
   41354:	blx	r2
   41358:	ldr	r1, [r4, #16]
   4135c:	ldr	r0, [r4, #20]
   41360:	sub	r7, r7, r5
   41364:	sub	r5, r1, r0
   41368:	cmp	r7, r5
   4136c:	bhi	41330 <flatcc_json_printer_union_field@@Base+0x128>
   41370:	mov	r1, #32
   41374:	mov	r2, r7
   41378:	bl	14ef0 <memset@plt>
   4137c:	ldr	r0, [r4, #20]
   41380:	add	r0, r0, r7
   41384:	ldr	r7, [fp, #8]
   41388:	str	r0, [r4, #20]
   4138c:	b	413b4 <flatcc_json_printer_union_field@@Base+0x1ac>
   41390:	mov	sl, r4
   41394:	ldr	r1, [sl, #16]!
   41398:	cmp	r0, r1
   4139c:	bcc	413b4 <flatcc_json_printer_union_field@@Base+0x1ac>
   413a0:	ldr	r2, [r4, #44]	; 0x2c
   413a4:	mov	r0, r4
   413a8:	mov	r1, #0
   413ac:	blx	r2
   413b0:	ldr	r0, [r4, #20]
   413b4:	mov	r1, #34	; 0x22
   413b8:	strb	r1, [r0]
   413bc:	ldrb	r2, [r4, #26]
   413c0:	ldr	r0, [r4, #20]
   413c4:	ldr	r1, [r4, #16]
   413c8:	cmp	r2, #0
   413cc:	addeq	r0, r0, #1
   413d0:	add	r2, r0, r7
   413d4:	str	r0, [r4, #20]
   413d8:	cmp	r2, r1
   413dc:	bcs	413f0 <flatcc_json_printer_union_field@@Base+0x1e8>
   413e0:	mov	r1, r8
   413e4:	mov	r2, r7
   413e8:	bl	14e60 <memcpy@plt>
   413ec:	b	41480 <flatcc_json_printer_union_field@@Base+0x278>
   413f0:	mov	r5, r8
   413f4:	cmp	r0, r1
   413f8:	bcc	41414 <flatcc_json_printer_union_field@@Base+0x20c>
   413fc:	ldr	r2, [r4, #44]	; 0x2c
   41400:	mov	r0, r4
   41404:	mov	r1, #0
   41408:	blx	r2
   4140c:	ldr	r0, [r4, #20]
   41410:	ldr	r1, [sl]
   41414:	sub	r8, r1, r0
   41418:	mov	r6, r5
   4141c:	cmp	r8, r7
   41420:	bcs	41470 <flatcc_json_printer_union_field@@Base+0x268>
   41424:	ldr	r7, [fp, #8]
   41428:	mov	r6, r5
   4142c:	mov	r1, r6
   41430:	mov	r2, r8
   41434:	bl	14e60 <memcpy@plt>
   41438:	ldr	r0, [r4, #20]
   4143c:	ldr	r2, [r4, #44]	; 0x2c
   41440:	mov	r1, #0
   41444:	add	r0, r0, r8
   41448:	str	r0, [r4, #20]
   4144c:	mov	r0, r4
   41450:	blx	r2
   41454:	ldr	r0, [r4, #20]
   41458:	ldr	r1, [sl]
   4145c:	sub	r7, r7, r8
   41460:	add	r6, r6, r8
   41464:	sub	r8, r1, r0
   41468:	cmp	r7, r8
   4146c:	bhi	4142c <flatcc_json_printer_union_field@@Base+0x224>
   41470:	mov	r1, r6
   41474:	mov	r2, r7
   41478:	bl	14e60 <memcpy@plt>
   4147c:	mov	r8, r5
   41480:	ldr	r0, [r4, #20]
   41484:	ldr	r1, [r4, #16]
   41488:	add	r0, r0, r7
   4148c:	add	r2, r0, #5
   41490:	str	r0, [r4, #20]
   41494:	cmp	r2, r1
   41498:	bcs	414bc <flatcc_json_printer_union_field@@Base+0x2b4>
   4149c:	mov	r1, #101	; 0x65
   414a0:	mov	r7, #5
   414a4:	strb	r1, [r0, #4]
   414a8:	movw	r1, #29791	; 0x745f
   414ac:	movt	r1, #28793	; 0x7079
   414b0:	str	r1, [r0]
   414b4:	ldm	sp, {r5, sl}
   414b8:	b	41558 <flatcc_json_printer_union_field@@Base+0x350>
   414bc:	cmp	r0, r1
   414c0:	bcc	414dc <flatcc_json_printer_union_field@@Base+0x2d4>
   414c4:	ldr	r2, [r4, #44]	; 0x2c
   414c8:	mov	r0, r4
   414cc:	mov	r1, #0
   414d0:	blx	r2
   414d4:	ldr	r0, [r4, #20]
   414d8:	ldr	r1, [sl]
   414dc:	sub	r5, r1, r0
   414e0:	cmp	r5, #4
   414e4:	bhi	4153c <flatcc_json_printer_union_field@@Base+0x334>
   414e8:	movw	r6, #39376	; 0x99d0
   414ec:	mov	r7, #5
   414f0:	movt	r6, #4
   414f4:	mov	r1, r6
   414f8:	mov	r2, r5
   414fc:	bl	14e60 <memcpy@plt>
   41500:	ldr	r0, [r4, #20]
   41504:	ldr	r2, [r4, #44]	; 0x2c
   41508:	mov	r1, #0
   4150c:	add	r0, r0, r5
   41510:	str	r0, [r4, #20]
   41514:	mov	r0, r4
   41518:	blx	r2
   4151c:	ldr	r0, [r4, #20]
   41520:	ldr	r1, [sl]
   41524:	sub	r7, r7, r5
   41528:	add	r6, r6, r5
   4152c:	sub	r5, r1, r0
   41530:	cmp	r7, r5
   41534:	bhi	414f4 <flatcc_json_printer_union_field@@Base+0x2ec>
   41538:	b	41548 <flatcc_json_printer_union_field@@Base+0x340>
   4153c:	movw	r6, #39376	; 0x99d0
   41540:	mov	r7, #5
   41544:	movt	r6, #4
   41548:	ldm	sp, {r5, sl}
   4154c:	mov	r1, r6
   41550:	mov	r2, r7
   41554:	bl	14e60 <memcpy@plt>
   41558:	ldr	r0, [r4, #20]
   4155c:	add	r1, r0, r7
   41560:	str	r1, [r4, #20]
   41564:	mov	r1, #34	; 0x22
   41568:	strb	r1, [r0, r7]
   4156c:	ldrb	r0, [r4, #26]
   41570:	ldr	r1, [r4, #20]
   41574:	cmp	r0, #0
   41578:	addeq	r1, r1, #1
   4157c:	add	r0, r1, #1
   41580:	str	r0, [r4, #20]
   41584:	mov	r0, #58	; 0x3a
   41588:	strb	r0, [r1]
   4158c:	mov	r1, #32
   41590:	ldr	r0, [r4, #20]
   41594:	strb	r1, [r0]
   41598:	ldrb	r0, [r4, #25]
   4159c:	ldr	r1, [r4, #20]
   415a0:	cmp	r0, #0
   415a4:	addne	r1, r1, #1
   415a8:	str	r1, [r4, #20]
   415ac:	ldrb	r0, [r4, #27]
   415b0:	cmp	r0, #0
   415b4:	beq	415d0 <flatcc_json_printer_union_field@@Base+0x3c8>
   415b8:	mov	r0, r5
   415bc:	bl	37db4 <flatcc_json_printer_uint8@@Base+0x2c>
   415c0:	ldr	r1, [r4, #20]
   415c4:	add	r0, r1, r0
   415c8:	str	r0, [r4, #20]
   415cc:	b	415e0 <flatcc_json_printer_union_field@@Base+0x3d8>
   415d0:	ldr	r2, [fp, #12]
   415d4:	mov	r0, r4
   415d8:	mov	r1, r5
   415dc:	blx	r2
   415e0:	ldr	r2, [fp, #8]
   415e4:	cmp	r5, #0
   415e8:	beq	41284 <flatcc_json_printer_union_field@@Base+0x7c>
   415ec:	ldr	r0, [r4, #20]
   415f0:	ldr	r6, [fp, #16]
   415f4:	add	r1, r0, #1
   415f8:	str	r1, [r4, #20]
   415fc:	mov	r1, #44	; 0x2c
   41600:	strb	r1, [r0]
   41604:	mov	r0, r4
   41608:	mov	r1, r8
   4160c:	bl	38c54 <flatcc_json_printer_string_field@@Base+0x8c>
   41610:	ldr	r0, [r9, #12]
   41614:	strb	r5, [sp, #16]
   41618:	str	sl, [sp, #8]
   4161c:	add	r1, sp, #8
   41620:	str	r0, [sp, #12]
   41624:	mov	r0, r4
   41628:	blx	r6
   4162c:	b	41284 <flatcc_json_printer_union_field@@Base+0x7c>

00041630 <flatcc_json_printer_union_table@@Base>:
   41630:	push	{r4, r5, r6, sl, fp, lr}
   41634:	add	fp, sp, #16
   41638:	sub	sp, sp, #24
   4163c:	mov	r4, r0
   41640:	ldr	r0, [r1, #4]
   41644:	subs	r0, r0, #1
   41648:	beq	41788 <flatcc_json_printer_union_table@@Base+0x158>
   4164c:	ldr	r1, [r1]
   41650:	ldr	r6, [r4, #32]
   41654:	ldr	r3, [r1]
   41658:	add	r6, r6, #1
   4165c:	add	r1, r1, r3
   41660:	ldr	r3, [r4, #20]
   41664:	str	r6, [r4, #32]
   41668:	add	r6, r3, #1
   4166c:	str	r6, [r4, #20]
   41670:	mov	r6, #123	; 0x7b
   41674:	strb	r6, [r3]
   41678:	str	r0, [sp, #16]
   4167c:	mov	r0, #0
   41680:	str	r0, [sp, #20]
   41684:	str	r1, [sp, #4]
   41688:	ldr	r0, [r1]
   4168c:	sub	r3, r1, r0
   41690:	str	r3, [sp, #8]
   41694:	ldrh	r0, [r1, -r0]
   41698:	add	r1, sp, #4
   4169c:	str	r0, [sp, #12]
   416a0:	mov	r0, r4
   416a4:	blx	r2
   416a8:	ldrb	r1, [r4, #25]
   416ac:	ldr	r0, [r4, #20]
   416b0:	cmp	r1, #0
   416b4:	beq	41774 <flatcc_json_printer_union_table@@Base+0x144>
   416b8:	add	r1, r0, #1
   416bc:	str	r1, [r4, #20]
   416c0:	mov	r1, #10
   416c4:	strb	r1, [r0]
   416c8:	ldr	r0, [r4, #32]
   416cc:	sub	r2, r0, #1
   416d0:	str	r2, [r4, #32]
   416d4:	ldrb	r3, [r4, #25]
   416d8:	ldr	r0, [r4, #20]
   416dc:	ldr	r1, [r4, #16]
   416e0:	mla	r6, r2, r3, r0
   416e4:	mul	r5, r2, r3
   416e8:	cmp	r6, r1
   416ec:	bls	4175c <flatcc_json_printer_union_table@@Base+0x12c>
   416f0:	cmp	r0, r1
   416f4:	bcc	41710 <flatcc_json_printer_union_table@@Base+0xe0>
   416f8:	ldr	r2, [r4, #44]	; 0x2c
   416fc:	mov	r0, r4
   41700:	mov	r1, #0
   41704:	blx	r2
   41708:	ldr	r1, [r4, #16]
   4170c:	ldr	r0, [r4, #20]
   41710:	sub	r6, r1, r0
   41714:	cmp	r6, r5
   41718:	bcs	4175c <flatcc_json_printer_union_table@@Base+0x12c>
   4171c:	mov	r1, #32
   41720:	mov	r2, r6
   41724:	bl	14ef0 <memset@plt>
   41728:	ldr	r0, [r4, #20]
   4172c:	ldr	r2, [r4, #44]	; 0x2c
   41730:	mov	r1, #0
   41734:	add	r0, r0, r6
   41738:	str	r0, [r4, #20]
   4173c:	mov	r0, r4
   41740:	blx	r2
   41744:	ldr	r1, [r4, #16]
   41748:	ldr	r0, [r4, #20]
   4174c:	sub	r5, r5, r6
   41750:	sub	r6, r1, r0
   41754:	cmp	r5, r6
   41758:	bhi	4171c <flatcc_json_printer_union_table@@Base+0xec>
   4175c:	mov	r1, #32
   41760:	mov	r2, r5
   41764:	bl	14ef0 <memset@plt>
   41768:	ldr	r0, [r4, #20]
   4176c:	add	r0, r0, r5
   41770:	str	r0, [r4, #20]
   41774:	add	r1, r0, #1
   41778:	str	r1, [r4, #20]
   4177c:	mov	r1, #125	; 0x7d
   41780:	strb	r1, [r0]
   41784:	b	41798 <flatcc_json_printer_union_table@@Base+0x168>
   41788:	ldr	r0, [r4, #36]	; 0x24
   4178c:	cmp	r0, #0
   41790:	moveq	r0, #2
   41794:	streq	r0, [r4, #36]	; 0x24
   41798:	sub	sp, fp, #16
   4179c:	pop	{r4, r5, r6, sl, fp, pc}

000417a0 <flatcc_json_printer_union_struct@@Base>:
   417a0:	push	{r4, r5, r6, sl, fp, lr}
   417a4:	add	fp, sp, #16
   417a8:	mov	r4, r0
   417ac:	ldr	r0, [r0, #20]
   417b0:	ldr	r3, [r4, #32]
   417b4:	add	r3, r3, #1
   417b8:	str	r3, [r4, #32]
   417bc:	add	r3, r0, #1
   417c0:	str	r3, [r4, #20]
   417c4:	mov	r3, #123	; 0x7b
   417c8:	strb	r3, [r0]
   417cc:	ldr	r0, [r1]
   417d0:	ldr	r1, [r0]
   417d4:	add	r1, r0, r1
   417d8:	mov	r0, r4
   417dc:	blx	r2
   417e0:	ldrb	r1, [r4, #25]
   417e4:	ldr	r0, [r4, #20]
   417e8:	cmp	r1, #0
   417ec:	beq	418ac <flatcc_json_printer_union_struct@@Base+0x10c>
   417f0:	add	r1, r0, #1
   417f4:	str	r1, [r4, #20]
   417f8:	mov	r1, #10
   417fc:	strb	r1, [r0]
   41800:	ldr	r0, [r4, #32]
   41804:	sub	r2, r0, #1
   41808:	str	r2, [r4, #32]
   4180c:	ldrb	r3, [r4, #25]
   41810:	ldr	r0, [r4, #20]
   41814:	ldr	r1, [r4, #16]
   41818:	mla	r6, r2, r3, r0
   4181c:	mul	r5, r2, r3
   41820:	cmp	r6, r1
   41824:	bls	41894 <flatcc_json_printer_union_struct@@Base+0xf4>
   41828:	cmp	r0, r1
   4182c:	bcc	41848 <flatcc_json_printer_union_struct@@Base+0xa8>
   41830:	ldr	r2, [r4, #44]	; 0x2c
   41834:	mov	r0, r4
   41838:	mov	r1, #0
   4183c:	blx	r2
   41840:	ldr	r1, [r4, #16]
   41844:	ldr	r0, [r4, #20]
   41848:	sub	r6, r1, r0
   4184c:	cmp	r6, r5
   41850:	bcs	41894 <flatcc_json_printer_union_struct@@Base+0xf4>
   41854:	mov	r1, #32
   41858:	mov	r2, r6
   4185c:	bl	14ef0 <memset@plt>
   41860:	ldr	r0, [r4, #20]
   41864:	ldr	r2, [r4, #44]	; 0x2c
   41868:	mov	r1, #0
   4186c:	add	r0, r0, r6
   41870:	str	r0, [r4, #20]
   41874:	mov	r0, r4
   41878:	blx	r2
   4187c:	ldr	r1, [r4, #16]
   41880:	ldr	r0, [r4, #20]
   41884:	sub	r5, r5, r6
   41888:	sub	r6, r1, r0
   4188c:	cmp	r5, r6
   41890:	bhi	41854 <flatcc_json_printer_union_struct@@Base+0xb4>
   41894:	mov	r1, #32
   41898:	mov	r2, r5
   4189c:	bl	14ef0 <memset@plt>
   418a0:	ldr	r0, [r4, #20]
   418a4:	add	r0, r0, r5
   418a8:	str	r0, [r4, #20]
   418ac:	add	r1, r0, #1
   418b0:	str	r1, [r4, #20]
   418b4:	mov	r1, #125	; 0x7d
   418b8:	strb	r1, [r0]
   418bc:	pop	{r4, r5, r6, sl, fp, pc}

000418c0 <flatcc_json_printer_union_string@@Base>:
   418c0:	ldr	r1, [r1]
   418c4:	ldr	r2, [r1]
   418c8:	ldr	r2, [r1, r2]!
   418cc:	add	r1, r1, #4
   418d0:	b	3791c <flatcc_json_printer_string@@Base+0x4>

000418d4 <flatcc_json_printer_embedded_struct_field@@Base>:
   418d4:	push	{r4, r5, r6, r7, fp, lr}
   418d8:	add	fp, sp, #16
   418dc:	mov	r5, r3
   418e0:	mov	r3, r1
   418e4:	mov	r4, r0
   418e8:	add	r7, fp, #8
   418ec:	mov	r6, r2
   418f0:	cmp	r3, #0
   418f4:	ldm	r7, {r1, r2, r7}
   418f8:	ldrne	r0, [r4, #20]
   418fc:	addne	r3, r0, #1
   41900:	strne	r3, [r4, #20]
   41904:	movne	r3, #44	; 0x2c
   41908:	strbne	r3, [r0]
   4190c:	mov	r0, r4
   41910:	bl	38c54 <flatcc_json_printer_string_field@@Base+0x8c>
   41914:	ldr	r1, [r4, #32]
   41918:	ldr	r0, [r4, #20]
   4191c:	add	r1, r1, #1
   41920:	str	r1, [r4, #32]
   41924:	add	r1, r0, #1
   41928:	str	r1, [r4, #20]
   4192c:	mov	r1, #123	; 0x7b
   41930:	strb	r1, [r0]
   41934:	add	r1, r6, r5
   41938:	mov	r0, r4
   4193c:	blx	r7
   41940:	ldrb	r1, [r4, #25]
   41944:	ldr	r0, [r4, #20]
   41948:	cmp	r1, #0
   4194c:	beq	41a0c <flatcc_json_printer_embedded_struct_field@@Base+0x138>
   41950:	add	r1, r0, #1
   41954:	str	r1, [r4, #20]
   41958:	mov	r1, #10
   4195c:	strb	r1, [r0]
   41960:	ldr	r0, [r4, #32]
   41964:	sub	r2, r0, #1
   41968:	str	r2, [r4, #32]
   4196c:	ldrb	r3, [r4, #25]
   41970:	ldr	r0, [r4, #20]
   41974:	ldr	r1, [r4, #16]
   41978:	mla	r7, r2, r3, r0
   4197c:	mul	r5, r2, r3
   41980:	cmp	r7, r1
   41984:	bls	419f4 <flatcc_json_printer_embedded_struct_field@@Base+0x120>
   41988:	cmp	r0, r1
   4198c:	bcc	419a8 <flatcc_json_printer_embedded_struct_field@@Base+0xd4>
   41990:	ldr	r2, [r4, #44]	; 0x2c
   41994:	mov	r0, r4
   41998:	mov	r1, #0
   4199c:	blx	r2
   419a0:	ldr	r1, [r4, #16]
   419a4:	ldr	r0, [r4, #20]
   419a8:	sub	r6, r1, r0
   419ac:	cmp	r6, r5
   419b0:	bcs	419f4 <flatcc_json_printer_embedded_struct_field@@Base+0x120>
   419b4:	mov	r1, #32
   419b8:	mov	r2, r6
   419bc:	bl	14ef0 <memset@plt>
   419c0:	ldr	r0, [r4, #20]
   419c4:	ldr	r2, [r4, #44]	; 0x2c
   419c8:	mov	r1, #0
   419cc:	add	r0, r0, r6
   419d0:	str	r0, [r4, #20]
   419d4:	mov	r0, r4
   419d8:	blx	r2
   419dc:	ldr	r1, [r4, #16]
   419e0:	ldr	r0, [r4, #20]
   419e4:	sub	r5, r5, r6
   419e8:	sub	r6, r1, r0
   419ec:	cmp	r5, r6
   419f0:	bhi	419b4 <flatcc_json_printer_embedded_struct_field@@Base+0xe0>
   419f4:	mov	r1, #32
   419f8:	mov	r2, r5
   419fc:	bl	14ef0 <memset@plt>
   41a00:	ldr	r0, [r4, #20]
   41a04:	add	r0, r0, r5
   41a08:	str	r0, [r4, #20]
   41a0c:	add	r1, r0, #1
   41a10:	str	r1, [r4, #20]
   41a14:	mov	r1, #125	; 0x7d
   41a18:	strb	r1, [r0]
   41a1c:	pop	{r4, r5, r6, r7, fp, pc}

00041a20 <flatcc_json_printer_struct_field@@Base>:
   41a20:	push	{r4, r5, r6, r7, fp, lr}
   41a24:	add	fp, sp, #16
   41a28:	mov	r4, r0
   41a2c:	mov	r0, #4
   41a30:	add	r0, r0, r2, lsl #1
   41a34:	ldr	r2, [r1, #8]
   41a38:	cmp	r0, r2
   41a3c:	popge	{r4, r5, r6, r7, fp, pc}
   41a40:	ldr	r2, [r1, #4]
   41a44:	add	r0, r2, r0
   41a48:	ldrh	r0, [r0]
   41a4c:	cmp	r0, #0
   41a50:	ldrne	r2, [r1]
   41a54:	addsne	r5, r2, r0
   41a58:	bne	41a60 <flatcc_json_printer_struct_field@@Base+0x40>
   41a5c:	pop	{r4, r5, r6, r7, fp, pc}
   41a60:	ldr	r0, [r1, #16]
   41a64:	ldr	r2, [fp, #8]
   41a68:	ldr	r7, [fp, #12]
   41a6c:	add	r6, r0, #1
   41a70:	cmp	r0, #0
   41a74:	str	r6, [r1, #16]
   41a78:	ldrne	r0, [r4, #20]
   41a7c:	addne	r1, r0, #1
   41a80:	strne	r1, [r4, #20]
   41a84:	movne	r1, #44	; 0x2c
   41a88:	strbne	r1, [r0]
   41a8c:	mov	r0, r4
   41a90:	mov	r1, r3
   41a94:	bl	38c54 <flatcc_json_printer_string_field@@Base+0x8c>
   41a98:	ldr	r1, [r4, #32]
   41a9c:	ldr	r0, [r4, #20]
   41aa0:	add	r1, r1, #1
   41aa4:	str	r1, [r4, #32]
   41aa8:	add	r1, r0, #1
   41aac:	str	r1, [r4, #20]
   41ab0:	mov	r1, #123	; 0x7b
   41ab4:	strb	r1, [r0]
   41ab8:	mov	r0, r4
   41abc:	mov	r1, r5
   41ac0:	blx	r7
   41ac4:	ldrb	r1, [r4, #25]
   41ac8:	ldr	r0, [r4, #20]
   41acc:	cmp	r1, #0
   41ad0:	beq	41b90 <flatcc_json_printer_struct_field@@Base+0x170>
   41ad4:	add	r1, r0, #1
   41ad8:	str	r1, [r4, #20]
   41adc:	mov	r1, #10
   41ae0:	strb	r1, [r0]
   41ae4:	ldr	r0, [r4, #32]
   41ae8:	sub	r2, r0, #1
   41aec:	str	r2, [r4, #32]
   41af0:	ldrb	r3, [r4, #25]
   41af4:	ldr	r0, [r4, #20]
   41af8:	ldr	r1, [r4, #16]
   41afc:	mla	r7, r2, r3, r0
   41b00:	mul	r5, r2, r3
   41b04:	cmp	r7, r1
   41b08:	bls	41b78 <flatcc_json_printer_struct_field@@Base+0x158>
   41b0c:	cmp	r0, r1
   41b10:	bcc	41b2c <flatcc_json_printer_struct_field@@Base+0x10c>
   41b14:	ldr	r2, [r4, #44]	; 0x2c
   41b18:	mov	r0, r4
   41b1c:	mov	r1, #0
   41b20:	blx	r2
   41b24:	ldr	r1, [r4, #16]
   41b28:	ldr	r0, [r4, #20]
   41b2c:	sub	r6, r1, r0
   41b30:	cmp	r6, r5
   41b34:	bcs	41b78 <flatcc_json_printer_struct_field@@Base+0x158>
   41b38:	mov	r1, #32
   41b3c:	mov	r2, r6
   41b40:	bl	14ef0 <memset@plt>
   41b44:	ldr	r0, [r4, #20]
   41b48:	ldr	r2, [r4, #44]	; 0x2c
   41b4c:	mov	r1, #0
   41b50:	add	r0, r0, r6
   41b54:	str	r0, [r4, #20]
   41b58:	mov	r0, r4
   41b5c:	blx	r2
   41b60:	ldr	r1, [r4, #16]
   41b64:	ldr	r0, [r4, #20]
   41b68:	sub	r5, r5, r6
   41b6c:	sub	r6, r1, r0
   41b70:	cmp	r5, r6
   41b74:	bhi	41b38 <flatcc_json_printer_struct_field@@Base+0x118>
   41b78:	mov	r1, #32
   41b7c:	mov	r2, r5
   41b80:	bl	14ef0 <memset@plt>
   41b84:	ldr	r0, [r4, #20]
   41b88:	add	r0, r0, r5
   41b8c:	str	r0, [r4, #20]
   41b90:	add	r1, r0, #1
   41b94:	str	r1, [r4, #20]
   41b98:	mov	r1, #125	; 0x7d
   41b9c:	strb	r1, [r0]
   41ba0:	pop	{r4, r5, r6, r7, fp, pc}

00041ba4 <flatcc_json_printer_struct_as_root@@Base>:
   41ba4:	push	{r4, r5, r6, sl, fp, lr}
   41ba8:	add	fp, sp, #16
   41bac:	mov	r5, r1
   41bb0:	mov	r4, r0
   41bb4:	bl	41d2c <flatcc_json_printer_struct_as_root@@Base+0x188>
   41bb8:	ldr	r1, [r4, #32]
   41bbc:	ldr	r0, [r4, #20]
   41bc0:	ldr	r2, [fp, #8]
   41bc4:	add	r1, r1, #1
   41bc8:	str	r1, [r4, #32]
   41bcc:	add	r1, r0, #1
   41bd0:	str	r1, [r4, #20]
   41bd4:	mov	r1, #123	; 0x7b
   41bd8:	strb	r1, [r0]
   41bdc:	ldr	r0, [r5]
   41be0:	add	r1, r5, r0
   41be4:	mov	r0, r4
   41be8:	blx	r2
   41bec:	ldrb	r1, [r4, #25]
   41bf0:	ldr	r0, [r4, #20]
   41bf4:	cmp	r1, #0
   41bf8:	beq	41cb8 <flatcc_json_printer_struct_as_root@@Base+0x114>
   41bfc:	add	r1, r0, #1
   41c00:	str	r1, [r4, #20]
   41c04:	mov	r1, #10
   41c08:	strb	r1, [r0]
   41c0c:	ldr	r0, [r4, #32]
   41c10:	sub	r2, r0, #1
   41c14:	str	r2, [r4, #32]
   41c18:	ldrb	r3, [r4, #25]
   41c1c:	ldr	r0, [r4, #20]
   41c20:	ldr	r1, [r4, #16]
   41c24:	mla	r6, r2, r3, r0
   41c28:	mul	r5, r2, r3
   41c2c:	cmp	r6, r1
   41c30:	bls	41ca0 <flatcc_json_printer_struct_as_root@@Base+0xfc>
   41c34:	cmp	r0, r1
   41c38:	bcc	41c54 <flatcc_json_printer_struct_as_root@@Base+0xb0>
   41c3c:	ldr	r2, [r4, #44]	; 0x2c
   41c40:	mov	r0, r4
   41c44:	mov	r1, #0
   41c48:	blx	r2
   41c4c:	ldr	r1, [r4, #16]
   41c50:	ldr	r0, [r4, #20]
   41c54:	sub	r6, r1, r0
   41c58:	cmp	r6, r5
   41c5c:	bcs	41ca0 <flatcc_json_printer_struct_as_root@@Base+0xfc>
   41c60:	mov	r1, #32
   41c64:	mov	r2, r6
   41c68:	bl	14ef0 <memset@plt>
   41c6c:	ldr	r0, [r4, #20]
   41c70:	ldr	r2, [r4, #44]	; 0x2c
   41c74:	mov	r1, #0
   41c78:	add	r0, r0, r6
   41c7c:	str	r0, [r4, #20]
   41c80:	mov	r0, r4
   41c84:	blx	r2
   41c88:	ldr	r1, [r4, #16]
   41c8c:	ldr	r0, [r4, #20]
   41c90:	sub	r5, r5, r6
   41c94:	sub	r6, r1, r0
   41c98:	cmp	r5, r6
   41c9c:	bhi	41c60 <flatcc_json_printer_struct_as_root@@Base+0xbc>
   41ca0:	mov	r1, #32
   41ca4:	mov	r2, r5
   41ca8:	bl	14ef0 <memset@plt>
   41cac:	ldr	r0, [r4, #20]
   41cb0:	add	r0, r0, r5
   41cb4:	str	r0, [r4, #20]
   41cb8:	add	r1, r0, #1
   41cbc:	str	r1, [r4, #20]
   41cc0:	mov	r1, #125	; 0x7d
   41cc4:	strb	r1, [r0]
   41cc8:	ldrb	r0, [r4, #25]
   41ccc:	cmp	r0, #0
   41cd0:	beq	41cf4 <flatcc_json_printer_struct_as_root@@Base+0x150>
   41cd4:	ldr	r0, [r4, #32]
   41cd8:	cmp	r0, #0
   41cdc:	bne	41cf4 <flatcc_json_printer_struct_as_root@@Base+0x150>
   41ce0:	ldr	r0, [r4, #20]
   41ce4:	add	r1, r0, #1
   41ce8:	str	r1, [r4, #20]
   41cec:	mov	r1, #10
   41cf0:	strb	r1, [r0]
   41cf4:	ldr	r2, [r4, #44]	; 0x2c
   41cf8:	mov	r0, r4
   41cfc:	mov	r1, #1
   41d00:	blx	r2
   41d04:	ldr	r1, [r4, #36]	; 0x24
   41d08:	mvn	r0, #0
   41d0c:	cmp	r1, #0
   41d10:	popne	{r4, r5, r6, sl, fp, pc}
   41d14:	ldr	r1, [r4, #12]
   41d18:	ldr	r2, [r4, #20]
   41d1c:	ldr	r0, [r4]
   41d20:	add	r1, r2, r1
   41d24:	sub	r0, r1, r0
   41d28:	pop	{r4, r5, r6, sl, fp, pc}
   41d2c:	push	{r4, r5, fp, lr}
   41d30:	add	fp, sp, #8
   41d34:	sub	sp, sp, #8
   41d38:	cmp	r1, #0
   41d3c:	mov	r4, r0
   41d40:	mov	r0, #0
   41d44:	cmpne	r2, #7
   41d48:	str	r0, [sp, #4]
   41d4c:	bls	41d88 <flatcc_json_printer_struct_as_root@@Base+0x1e4>
   41d50:	cmp	r3, #0
   41d54:	beq	41d80 <flatcc_json_printer_struct_as_root@@Base+0x1dc>
   41d58:	mov	r5, r1
   41d5c:	add	r0, sp, #4
   41d60:	mov	r1, r3
   41d64:	mov	r2, #4
   41d68:	bl	14efc <strncpy@plt>
   41d6c:	ldr	r0, [sp, #4]
   41d70:	cmp	r0, #0
   41d74:	ldrne	r1, [r5, #4]
   41d78:	cmpne	r1, r0
   41d7c:	bne	41db8 <flatcc_json_printer_struct_as_root@@Base+0x214>
   41d80:	sub	sp, fp, #8
   41d84:	pop	{r4, r5, fp, pc}
   41d88:	ldr	r0, [r4, #36]	; 0x24
   41d8c:	movw	r1, #39099	; 0x98bb
   41d90:	movw	r3, #40274	; 0x9d52
   41d94:	movw	r2, #1019	; 0x3fb
   41d98:	movt	r1, #4
   41d9c:	movt	r3, #4
   41da0:	cmp	r0, #0
   41da4:	moveq	r0, #1
   41da8:	streq	r0, [r4, #36]	; 0x24
   41dac:	movw	r0, #40243	; 0x9d33
   41db0:	movt	r0, #4
   41db4:	bl	14f44 <__assert_fail@plt>
   41db8:	ldr	r0, [r4, #36]	; 0x24
   41dbc:	movw	r1, #39099	; 0x98bb
   41dc0:	movw	r3, #40274	; 0x9d52
   41dc4:	movw	r2, #1028	; 0x404
   41dc8:	movt	r1, #4
   41dcc:	movt	r3, #4
   41dd0:	cmp	r0, #0
   41dd4:	moveq	r0, #1
   41dd8:	streq	r0, [r4, #36]	; 0x24
   41ddc:	movw	r0, #40353	; 0x9da1
   41de0:	movt	r0, #4
   41de4:	bl	14f44 <__assert_fail@plt>

00041de8 <flatcc_json_printer_table_as_root@@Base>:
   41de8:	push	{r4, r5, r6, sl, fp, lr}
   41dec:	add	fp, sp, #16
   41df0:	sub	sp, sp, #24
   41df4:	mov	r5, r1
   41df8:	mov	r4, r0
   41dfc:	bl	41d2c <flatcc_json_printer_struct_as_root@@Base+0x188>
   41e00:	ldr	r2, [r4, #32]
   41e04:	ldr	r1, [r4, #20]
   41e08:	ldr	r0, [r5]
   41e0c:	add	r2, r2, #1
   41e10:	str	r2, [r4, #32]
   41e14:	add	r2, r1, #1
   41e18:	str	r2, [r4, #20]
   41e1c:	mov	r2, #123	; 0x7b
   41e20:	strb	r2, [r1]
   41e24:	mov	r1, #99	; 0x63
   41e28:	str	r1, [sp, #16]
   41e2c:	mov	r1, #0
   41e30:	str	r1, [sp, #20]
   41e34:	add	r1, r5, r0
   41e38:	str	r1, [sp, #4]
   41e3c:	ldr	r0, [r5, r0]
   41e40:	sub	r2, r1, r0
   41e44:	str	r2, [sp, #8]
   41e48:	ldr	r2, [fp, #8]
   41e4c:	ldrh	r0, [r1, -r0]
   41e50:	add	r1, sp, #4
   41e54:	str	r0, [sp, #12]
   41e58:	mov	r0, r4
   41e5c:	blx	r2
   41e60:	ldrb	r1, [r4, #25]
   41e64:	ldr	r0, [r4, #20]
   41e68:	cmp	r1, #0
   41e6c:	beq	41f2c <flatcc_json_printer_table_as_root@@Base+0x144>
   41e70:	add	r1, r0, #1
   41e74:	str	r1, [r4, #20]
   41e78:	mov	r1, #10
   41e7c:	strb	r1, [r0]
   41e80:	ldr	r0, [r4, #32]
   41e84:	sub	r2, r0, #1
   41e88:	str	r2, [r4, #32]
   41e8c:	ldrb	r3, [r4, #25]
   41e90:	ldr	r0, [r4, #20]
   41e94:	ldr	r1, [r4, #16]
   41e98:	mla	r6, r2, r3, r0
   41e9c:	mul	r5, r2, r3
   41ea0:	cmp	r6, r1
   41ea4:	bls	41f14 <flatcc_json_printer_table_as_root@@Base+0x12c>
   41ea8:	cmp	r0, r1
   41eac:	bcc	41ec8 <flatcc_json_printer_table_as_root@@Base+0xe0>
   41eb0:	ldr	r2, [r4, #44]	; 0x2c
   41eb4:	mov	r0, r4
   41eb8:	mov	r1, #0
   41ebc:	blx	r2
   41ec0:	ldr	r1, [r4, #16]
   41ec4:	ldr	r0, [r4, #20]
   41ec8:	sub	r6, r1, r0
   41ecc:	cmp	r6, r5
   41ed0:	bcs	41f14 <flatcc_json_printer_table_as_root@@Base+0x12c>
   41ed4:	mov	r1, #32
   41ed8:	mov	r2, r6
   41edc:	bl	14ef0 <memset@plt>
   41ee0:	ldr	r0, [r4, #20]
   41ee4:	ldr	r2, [r4, #44]	; 0x2c
   41ee8:	mov	r1, #0
   41eec:	add	r0, r0, r6
   41ef0:	str	r0, [r4, #20]
   41ef4:	mov	r0, r4
   41ef8:	blx	r2
   41efc:	ldr	r1, [r4, #16]
   41f00:	ldr	r0, [r4, #20]
   41f04:	sub	r5, r5, r6
   41f08:	sub	r6, r1, r0
   41f0c:	cmp	r5, r6
   41f10:	bhi	41ed4 <flatcc_json_printer_table_as_root@@Base+0xec>
   41f14:	mov	r1, #32
   41f18:	mov	r2, r5
   41f1c:	bl	14ef0 <memset@plt>
   41f20:	ldr	r0, [r4, #20]
   41f24:	add	r0, r0, r5
   41f28:	str	r0, [r4, #20]
   41f2c:	add	r1, r0, #1
   41f30:	str	r1, [r4, #20]
   41f34:	mov	r1, #125	; 0x7d
   41f38:	strb	r1, [r0]
   41f3c:	ldrb	r0, [r4, #25]
   41f40:	cmp	r0, #0
   41f44:	beq	41f68 <flatcc_json_printer_table_as_root@@Base+0x180>
   41f48:	ldr	r0, [r4, #32]
   41f4c:	cmp	r0, #0
   41f50:	bne	41f68 <flatcc_json_printer_table_as_root@@Base+0x180>
   41f54:	ldr	r0, [r4, #20]
   41f58:	add	r1, r0, #1
   41f5c:	str	r1, [r4, #20]
   41f60:	mov	r1, #10
   41f64:	strb	r1, [r0]
   41f68:	ldr	r2, [r4, #44]	; 0x2c
   41f6c:	mov	r0, r4
   41f70:	mov	r1, #1
   41f74:	blx	r2
   41f78:	ldr	r1, [r4, #36]	; 0x24
   41f7c:	mvn	r0, #0
   41f80:	cmp	r1, #0
   41f84:	bne	41f9c <flatcc_json_printer_table_as_root@@Base+0x1b4>
   41f88:	ldr	r1, [r4, #12]
   41f8c:	ldr	r2, [r4, #20]
   41f90:	ldr	r0, [r4]
   41f94:	add	r1, r2, r1
   41f98:	sub	r0, r1, r0
   41f9c:	sub	sp, fp, #16
   41fa0:	pop	{r4, r5, r6, sl, fp, pc}

00041fa4 <flatcc_json_printer_struct_as_nested_root@@Base>:
   41fa4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   41fa8:	add	fp, sp, #24
   41fac:	mov	r7, r1
   41fb0:	ldr	r1, [r1, #8]
   41fb4:	mov	r4, r0
   41fb8:	mov	r0, #4
   41fbc:	add	r0, r0, r2, lsl #1
   41fc0:	cmp	r0, r1
   41fc4:	popge	{r4, r5, r6, r7, r8, r9, fp, pc}
   41fc8:	ldr	r1, [r7, #4]
   41fcc:	add	r0, r1, r0
   41fd0:	ldrh	r0, [r0]
   41fd4:	cmp	r0, #0
   41fd8:	ldrne	r1, [r7]
   41fdc:	addsne	r0, r1, r0
   41fe0:	bne	41fe8 <flatcc_json_printer_struct_as_nested_root@@Base+0x44>
   41fe4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   41fe8:	ldr	r6, [r0]
   41fec:	mov	r5, r3
   41ff0:	ldr	r3, [fp, #12]
   41ff4:	ldr	r9, [fp, #16]
   41ff8:	ldr	r8, [fp, #8]
   41ffc:	ldr	r2, [r6, r0]!
   42000:	mov	r0, r4
   42004:	mov	r1, r6
   42008:	bl	41d2c <flatcc_json_printer_struct_as_root@@Base+0x188>
   4200c:	ldr	r0, [r7, #16]
   42010:	mov	r2, r8
   42014:	add	r1, r0, #1
   42018:	cmp	r0, #0
   4201c:	str	r1, [r7, #16]
   42020:	ldrne	r0, [r4, #20]
   42024:	addne	r1, r0, #1
   42028:	strne	r1, [r4, #20]
   4202c:	movne	r1, #44	; 0x2c
   42030:	strbne	r1, [r0]
   42034:	mov	r0, r4
   42038:	mov	r1, r5
   4203c:	bl	38c54 <flatcc_json_printer_string_field@@Base+0x8c>
   42040:	ldr	r1, [r4, #32]
   42044:	ldr	r0, [r4, #20]
   42048:	add	r1, r1, #1
   4204c:	str	r1, [r4, #32]
   42050:	add	r1, r0, #1
   42054:	str	r1, [r4, #20]
   42058:	mov	r1, #123	; 0x7b
   4205c:	strb	r1, [r0]
   42060:	ldr	r0, [r6]
   42064:	add	r1, r6, r0
   42068:	mov	r0, r4
   4206c:	blx	r9
   42070:	ldrb	r1, [r4, #25]
   42074:	ldr	r0, [r4, #20]
   42078:	cmp	r1, #0
   4207c:	beq	4213c <flatcc_json_printer_struct_as_nested_root@@Base+0x198>
   42080:	add	r1, r0, #1
   42084:	str	r1, [r4, #20]
   42088:	mov	r1, #10
   4208c:	strb	r1, [r0]
   42090:	ldr	r0, [r4, #32]
   42094:	sub	r2, r0, #1
   42098:	str	r2, [r4, #32]
   4209c:	ldrb	r3, [r4, #25]
   420a0:	ldr	r0, [r4, #20]
   420a4:	ldr	r1, [r4, #16]
   420a8:	mla	r7, r2, r3, r0
   420ac:	mul	r5, r2, r3
   420b0:	cmp	r7, r1
   420b4:	bls	42124 <flatcc_json_printer_struct_as_nested_root@@Base+0x180>
   420b8:	cmp	r0, r1
   420bc:	bcc	420d8 <flatcc_json_printer_struct_as_nested_root@@Base+0x134>
   420c0:	ldr	r2, [r4, #44]	; 0x2c
   420c4:	mov	r0, r4
   420c8:	mov	r1, #0
   420cc:	blx	r2
   420d0:	ldr	r1, [r4, #16]
   420d4:	ldr	r0, [r4, #20]
   420d8:	sub	r6, r1, r0
   420dc:	cmp	r6, r5
   420e0:	bcs	42124 <flatcc_json_printer_struct_as_nested_root@@Base+0x180>
   420e4:	mov	r1, #32
   420e8:	mov	r2, r6
   420ec:	bl	14ef0 <memset@plt>
   420f0:	ldr	r0, [r4, #20]
   420f4:	ldr	r2, [r4, #44]	; 0x2c
   420f8:	mov	r1, #0
   420fc:	add	r0, r0, r6
   42100:	str	r0, [r4, #20]
   42104:	mov	r0, r4
   42108:	blx	r2
   4210c:	ldr	r1, [r4, #16]
   42110:	ldr	r0, [r4, #20]
   42114:	sub	r5, r5, r6
   42118:	sub	r6, r1, r0
   4211c:	cmp	r5, r6
   42120:	bhi	420e4 <flatcc_json_printer_struct_as_nested_root@@Base+0x140>
   42124:	mov	r1, #32
   42128:	mov	r2, r5
   4212c:	bl	14ef0 <memset@plt>
   42130:	ldr	r0, [r4, #20]
   42134:	add	r0, r0, r5
   42138:	str	r0, [r4, #20]
   4213c:	add	r1, r0, #1
   42140:	str	r1, [r4, #20]
   42144:	mov	r1, #125	; 0x7d
   42148:	strb	r1, [r0]
   4214c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00042150 <flatcc_json_printer_table_as_nested_root@@Base>:
   42150:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   42154:	add	fp, sp, #24
   42158:	sub	sp, sp, #24
   4215c:	mov	r5, r1
   42160:	ldr	r1, [r1, #8]
   42164:	mov	r4, r0
   42168:	mov	r0, #4
   4216c:	add	r0, r0, r2, lsl #1
   42170:	cmp	r0, r1
   42174:	bge	42194 <flatcc_json_printer_table_as_nested_root@@Base+0x44>
   42178:	ldr	r1, [r5, #4]
   4217c:	add	r0, r1, r0
   42180:	ldrh	r0, [r0]
   42184:	cmp	r0, #0
   42188:	ldrne	r1, [r5]
   4218c:	addsne	r0, r1, r0
   42190:	bne	4219c <flatcc_json_printer_table_as_nested_root@@Base+0x4c>
   42194:	sub	sp, fp, #24
   42198:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   4219c:	ldr	r1, [r0]
   421a0:	mov	r6, r3
   421a4:	ldr	r3, [fp, #12]
   421a8:	ldr	r8, [fp, #8]
   421ac:	ldr	r2, [r1, r0]!
   421b0:	mov	r0, r4
   421b4:	add	r7, r1, #4
   421b8:	mov	r1, r7
   421bc:	bl	41d2c <flatcc_json_printer_struct_as_root@@Base+0x188>
   421c0:	ldr	r0, [r5, #16]
   421c4:	mov	r2, r8
   421c8:	add	r1, r0, #1
   421cc:	cmp	r0, #0
   421d0:	str	r1, [r5, #16]
   421d4:	ldrne	r0, [r4, #20]
   421d8:	addne	r1, r0, #1
   421dc:	strne	r1, [r4, #20]
   421e0:	movne	r1, #44	; 0x2c
   421e4:	strbne	r1, [r0]
   421e8:	mov	r0, r4
   421ec:	mov	r1, r6
   421f0:	bl	38c54 <flatcc_json_printer_string_field@@Base+0x8c>
   421f4:	ldr	r0, [r5, #12]
   421f8:	subs	r0, r0, #1
   421fc:	beq	4233c <flatcc_json_printer_table_as_nested_root@@Base+0x1ec>
   42200:	ldr	r1, [r7]
   42204:	ldr	r3, [r4, #20]
   42208:	ldr	r2, [fp, #16]
   4220c:	add	r1, r7, r1
   42210:	ldr	r7, [r4, #32]
   42214:	add	r7, r7, #1
   42218:	str	r7, [r4, #32]
   4221c:	add	r7, r3, #1
   42220:	str	r7, [r4, #20]
   42224:	mov	r7, #123	; 0x7b
   42228:	strb	r7, [r3]
   4222c:	str	r0, [sp, #16]
   42230:	mov	r0, #0
   42234:	str	r0, [sp, #20]
   42238:	str	r1, [sp, #4]
   4223c:	ldr	r0, [r1]
   42240:	sub	r3, r1, r0
   42244:	str	r3, [sp, #8]
   42248:	ldrh	r0, [r1, -r0]
   4224c:	add	r1, sp, #4
   42250:	str	r0, [sp, #12]
   42254:	mov	r0, r4
   42258:	blx	r2
   4225c:	ldrb	r1, [r4, #25]
   42260:	ldr	r0, [r4, #20]
   42264:	cmp	r1, #0
   42268:	beq	42328 <flatcc_json_printer_table_as_nested_root@@Base+0x1d8>
   4226c:	add	r1, r0, #1
   42270:	str	r1, [r4, #20]
   42274:	mov	r1, #10
   42278:	strb	r1, [r0]
   4227c:	ldr	r0, [r4, #32]
   42280:	sub	r2, r0, #1
   42284:	str	r2, [r4, #32]
   42288:	ldrb	r3, [r4, #25]
   4228c:	ldr	r0, [r4, #20]
   42290:	ldr	r1, [r4, #16]
   42294:	mla	r7, r2, r3, r0
   42298:	mul	r5, r2, r3
   4229c:	cmp	r7, r1
   422a0:	bls	42310 <flatcc_json_printer_table_as_nested_root@@Base+0x1c0>
   422a4:	cmp	r0, r1
   422a8:	bcc	422c4 <flatcc_json_printer_table_as_nested_root@@Base+0x174>
   422ac:	ldr	r2, [r4, #44]	; 0x2c
   422b0:	mov	r0, r4
   422b4:	mov	r1, #0
   422b8:	blx	r2
   422bc:	ldr	r1, [r4, #16]
   422c0:	ldr	r0, [r4, #20]
   422c4:	sub	r6, r1, r0
   422c8:	cmp	r6, r5
   422cc:	bcs	42310 <flatcc_json_printer_table_as_nested_root@@Base+0x1c0>
   422d0:	mov	r1, #32
   422d4:	mov	r2, r6
   422d8:	bl	14ef0 <memset@plt>
   422dc:	ldr	r0, [r4, #20]
   422e0:	ldr	r2, [r4, #44]	; 0x2c
   422e4:	mov	r1, #0
   422e8:	add	r0, r0, r6
   422ec:	str	r0, [r4, #20]
   422f0:	mov	r0, r4
   422f4:	blx	r2
   422f8:	ldr	r1, [r4, #16]
   422fc:	ldr	r0, [r4, #20]
   42300:	sub	r5, r5, r6
   42304:	sub	r6, r1, r0
   42308:	cmp	r5, r6
   4230c:	bhi	422d0 <flatcc_json_printer_table_as_nested_root@@Base+0x180>
   42310:	mov	r1, #32
   42314:	mov	r2, r5
   42318:	bl	14ef0 <memset@plt>
   4231c:	ldr	r0, [r4, #20]
   42320:	add	r0, r0, r5
   42324:	str	r0, [r4, #20]
   42328:	add	r1, r0, #1
   4232c:	str	r1, [r4, #20]
   42330:	mov	r1, #125	; 0x7d
   42334:	strb	r1, [r0]
   42338:	b	42194 <flatcc_json_printer_table_as_nested_root@@Base+0x44>
   4233c:	ldr	r0, [r4, #36]	; 0x24
   42340:	cmp	r0, #0
   42344:	moveq	r0, #2
   42348:	streq	r0, [r4, #36]	; 0x24
   4234c:	b	42194 <flatcc_json_printer_table_as_nested_root@@Base+0x44>

00042350 <flatcc_json_printer_init@@Base>:
   42350:	push	{r4, r5, r6, sl, fp, lr}
   42354:	add	fp, sp, #16
   42358:	mov	r5, r0
   4235c:	mov	r4, #0
   42360:	vmov.i32	q8, #0	; 0x00000000
   42364:	cmp	r1, #0
   42368:	movw	r6, #16448	; 0x4040
   4236c:	str	r4, [r0, #32]
   42370:	mov	r0, #36	; 0x24
   42374:	mov	r2, r5
   42378:	vst1.32	{d16-d17}, [r2], r0
   4237c:	add	r0, r5, #16
   42380:	vst1.32	{d16-d17}, [r0]
   42384:	movw	r0, #45900	; 0xb34c
   42388:	str	r4, [r2]
   4238c:	movw	r2, #9196	; 0x23ec
   42390:	movt	r0, #5
   42394:	movt	r2, #4
   42398:	ldr	r0, [r0]
   4239c:	movne	r0, r1
   423a0:	str	r0, [r5, #40]	; 0x28
   423a4:	movw	r0, #16448	; 0x4040
   423a8:	str	r2, [r5, #44]	; 0x2c
   423ac:	bl	14ea8 <malloc@plt>
   423b0:	cmp	r0, #0
   423b4:	str	r0, [r5]
   423b8:	beq	423e0 <flatcc_json_printer_init@@Base+0x90>
   423bc:	mov	r1, #1
   423c0:	strb	r1, [r5, #24]
   423c4:	mov	r1, #16384	; 0x4000
   423c8:	str	r6, [r5, #4]
   423cc:	str	r1, [r5, #8]
   423d0:	add	r1, r0, #16384	; 0x4000
   423d4:	str	r1, [r5, #16]
   423d8:	str	r0, [r5, #20]
   423dc:	b	423e4 <flatcc_json_printer_init@@Base+0x94>
   423e0:	mvn	r4, #0
   423e4:	mov	r0, r4
   423e8:	pop	{r4, r5, r6, sl, fp, pc}
   423ec:	push	{r4, r5, r6, sl, fp, lr}
   423f0:	add	fp, sp, #16
   423f4:	mov	r4, r0
   423f8:	cmp	r1, #0
   423fc:	beq	42408 <flatcc_json_printer_init@@Base+0xb8>
   42400:	ldr	r5, [r4, #20]
   42404:	b	42418 <flatcc_json_printer_init@@Base+0xc8>
   42408:	ldr	r6, [r4, #16]
   4240c:	ldr	r5, [r4, #20]
   42410:	cmp	r5, r6
   42414:	bcs	42444 <flatcc_json_printer_init@@Base+0xf4>
   42418:	ldr	r0, [r4]
   4241c:	ldr	r3, [r4, #40]	; 0x28
   42420:	mov	r2, #1
   42424:	sub	r5, r5, r0
   42428:	mov	r1, r5
   4242c:	bl	14e9c <fwrite@plt>
   42430:	ldr	r1, [r4, #12]
   42434:	ldr	r0, [r4]
   42438:	str	r0, [r4, #20]
   4243c:	add	r1, r1, r5
   42440:	b	42488 <flatcc_json_printer_init@@Base+0x138>
   42444:	ldr	r0, [r4]
   42448:	ldr	r1, [r4, #8]
   4244c:	ldr	r3, [r4, #40]	; 0x28
   42450:	mov	r2, #1
   42454:	bl	14e9c <fwrite@plt>
   42458:	ldr	r0, [r4]
   4245c:	ldr	r1, [r4, #8]
   42460:	sub	r5, r5, r6
   42464:	mov	r2, r5
   42468:	add	r1, r0, r1
   4246c:	bl	14e60 <memcpy@plt>
   42470:	ldr	r0, [r4]
   42474:	ldr	r1, [r4, #8]
   42478:	ldr	r2, [r4, #12]
   4247c:	add	r0, r0, r5
   42480:	add	r1, r2, r1
   42484:	str	r0, [r4, #20]
   42488:	str	r1, [r4, #12]
   4248c:	mov	r1, #0
   42490:	strb	r1, [r0]
   42494:	pop	{r4, r5, r6, sl, fp, pc}

00042498 <flatcc_json_printer_init_buffer@@Base>:
   42498:	cmp	r2, #63	; 0x3f
   4249c:	bls	424dc <flatcc_json_printer_init_buffer@@Base+0x44>
   424a0:	vmov.i32	q8, #0	; 0x00000000
   424a4:	add	r3, r0, #12
   424a8:	vst1.32	{d16-d17}, [r3]
   424ac:	movw	r3, #9476	; 0x2504
   424b0:	movt	r3, #4
   424b4:	str	r3, [r0, #44]	; 0x2c
   424b8:	add	r3, r0, #28
   424bc:	vst1.32	{d16-d17}, [r3]
   424c0:	sub	r3, r2, #64	; 0x40
   424c4:	stm	r0, {r1, r2, r3}
   424c8:	add	r2, r1, r3
   424cc:	str	r2, [r0, #16]
   424d0:	str	r1, [r0, #20]
   424d4:	mov	r0, #0
   424d8:	bx	lr
   424dc:	push	{fp, lr}
   424e0:	mov	fp, sp
   424e4:	movw	r0, #39382	; 0x99d6
   424e8:	movw	r1, #39099	; 0x98bb
   424ec:	movw	r3, #39423	; 0x99ff
   424f0:	movw	r2, #1165	; 0x48d
   424f4:	movt	r0, #4
   424f8:	movt	r1, #4
   424fc:	movt	r3, #4
   42500:	bl	14f44 <__assert_fail@plt>
   42504:	ldr	r2, [r0, #16]
   42508:	ldr	r1, [r0, #20]
   4250c:	cmp	r1, r2
   42510:	bcs	4251c <flatcc_json_printer_init_buffer@@Base+0x84>
   42514:	mov	r2, r1
   42518:	b	42544 <flatcc_json_printer_init_buffer@@Base+0xac>
   4251c:	ldr	r2, [r0, #36]	; 0x24
   42520:	cmp	r2, #0
   42524:	moveq	r2, #3
   42528:	streq	r2, [r0, #36]	; 0x24
   4252c:	ldr	r2, [r0]
   42530:	ldr	r3, [r0, #12]
   42534:	sub	r1, r1, r2
   42538:	str	r2, [r0, #20]
   4253c:	add	r1, r1, r3
   42540:	str	r1, [r0, #12]
   42544:	mov	r0, #0
   42548:	strb	r0, [r2]
   4254c:	bx	lr

00042550 <flatcc_json_printer_init_dynamic_buffer@@Base>:
   42550:	push	{r4, r5, fp, lr}
   42554:	add	fp, sp, #8
   42558:	mov	r5, r1
   4255c:	cmp	r1, #0
   42560:	mov	r4, r0
   42564:	vmov.i32	q8, #0	; 0x00000000
   42568:	add	r0, r0, #28
   4256c:	movweq	r5, #4096	; 0x1000
   42570:	vst1.32	{d16-d17}, [r0]
   42574:	add	r0, r4, #12
   42578:	cmp	r5, #64	; 0x40
   4257c:	vst1.32	{d16-d17}, [r0]
   42580:	movls	r5, #64	; 0x40
   42584:	mov	r0, r5
   42588:	bl	14ea8 <malloc@plt>
   4258c:	mov	r1, r0
   42590:	mov	r0, #1
   42594:	movw	r2, #9684	; 0x25d4
   42598:	strb	r0, [r4, #24]
   4259c:	sub	r0, r5, #64	; 0x40
   425a0:	stm	r4, {r1, r5}
   425a4:	movt	r2, #4
   425a8:	cmp	r1, #0
   425ac:	str	r0, [r4, #8]
   425b0:	add	r0, r1, r0
   425b4:	str	r2, [r4, #44]	; 0x2c
   425b8:	str	r0, [r4, #16]
   425bc:	mov	r0, #0
   425c0:	str	r1, [r4, #20]
   425c4:	moveq	r0, #3
   425c8:	streq	r0, [r4, #36]	; 0x24
   425cc:	mvneq	r0, #0
   425d0:	pop	{r4, r5, fp, pc}
   425d4:	push	{r4, r5, fp, lr}
   425d8:	add	fp, sp, #8
   425dc:	mov	r4, r0
   425e0:	ldr	r0, [r0]
   425e4:	mov	r1, #0
   425e8:	ldr	r5, [r4, #20]
   425ec:	strb	r1, [r5], -r0
   425f0:	ldr	r0, [r4, #16]
   425f4:	ldr	r1, [r4, #20]
   425f8:	cmp	r1, r0
   425fc:	popcc	{r4, r5, fp, pc}
   42600:	ldm	r4, {r0, r1}
   42604:	lsl	r1, r1, #1
   42608:	bl	14e90 <realloc@plt>
   4260c:	cmp	r0, #0
   42610:	beq	42644 <flatcc_json_printer_init_dynamic_buffer@@Base+0xf4>
   42614:	str	r0, [r4]
   42618:	mvn	r3, #63	; 0x3f
   4261c:	add	r1, r0, r5
   42620:	ldr	r2, [r4, #4]
   42624:	add	r3, r3, r2, lsl #1
   42628:	lsl	r2, r2, #1
   4262c:	add	r0, r0, r3
   42630:	str	r3, [r4, #8]
   42634:	str	r2, [r4, #4]
   42638:	str	r0, [r4, #16]
   4263c:	str	r1, [r4, #20]
   42640:	b	42668 <flatcc_json_printer_init_dynamic_buffer@@Base+0x118>
   42644:	ldr	r0, [r4, #36]	; 0x24
   42648:	cmp	r0, #0
   4264c:	moveq	r0, #3
   42650:	streq	r0, [r4, #36]	; 0x24
   42654:	ldr	r0, [r4, #12]
   42658:	ldr	r1, [r4]
   4265c:	add	r0, r0, r5
   42660:	str	r1, [r4, #20]
   42664:	str	r0, [r4, #12]
   42668:	mov	r0, #0
   4266c:	strb	r0, [r1]
   42670:	pop	{r4, r5, fp, pc}

00042674 <flatcc_json_printer_get_buffer@@Base>:
   42674:	push	{r4, r5, fp, lr}
   42678:	add	fp, sp, #8
   4267c:	ldr	r2, [r0, #44]	; 0x2c
   42680:	mov	r4, r1
   42684:	mov	r1, #0
   42688:	mov	r5, r0
   4268c:	blx	r2
   42690:	cmp	r4, #0
   42694:	ldrne	r0, [r5]
   42698:	ldrne	r1, [r5, #20]
   4269c:	subne	r1, r1, r0
   426a0:	strne	r1, [r4]
   426a4:	popne	{r4, r5, fp, pc}
   426a8:	ldr	r0, [r5]
   426ac:	pop	{r4, r5, fp, pc}

000426b0 <flatcc_json_printer_finalize_dynamic_buffer@@Base>:
   426b0:	push	{r4, r5, fp, lr}
   426b4:	add	fp, sp, #8
   426b8:	ldr	r2, [r0, #44]	; 0x2c
   426bc:	mov	r5, r1
   426c0:	mov	r1, #0
   426c4:	mov	r4, r0
   426c8:	blx	r2
   426cc:	cmp	r5, #0
   426d0:	ldr	r0, [r4]
   426d4:	vmov.i32	q8, #0	; 0x00000000
   426d8:	add	r2, r4, #16
   426dc:	ldrne	r1, [r4, #20]
   426e0:	subne	r1, r1, r0
   426e4:	strne	r1, [r5]
   426e8:	mov	r1, #32
   426ec:	vst1.32	{d16-d17}, [r2]
   426f0:	vst1.32	{d16-d17}, [r4], r1
   426f4:	vst1.32	{d16-d17}, [r4]
   426f8:	pop	{r4, r5, fp, pc}

000426fc <flatcc_json_printer_clear@@Base>:
   426fc:	push	{r4, sl, fp, lr}
   42700:	add	fp, sp, #8
   42704:	mov	r4, r0
   42708:	ldrb	r0, [r0, #24]
   4270c:	cmp	r0, #0
   42710:	ldrne	r0, [r4]
   42714:	cmpne	r0, #0
   42718:	beq	42720 <flatcc_json_printer_clear@@Base+0x24>
   4271c:	bl	14e54 <free@plt>
   42720:	vmov.i32	q8, #0	; 0x00000000
   42724:	mov	r0, #32
   42728:	add	r1, r4, #16
   4272c:	vst1.32	{d16-d17}, [r4], r0
   42730:	vst1.32	{d16-d17}, [r1]
   42734:	vst1.32	{d16-d17}, [r4]
   42738:	pop	{r4, sl, fp, pc}
   4273c:	push	{r4, sl, fp, lr}
   42740:	add	fp, sp, #8
   42744:	cmn	r0, #1
   42748:	ble	42754 <flatcc_json_printer_clear@@Base+0x58>
   4274c:	mov	lr, r1
   42750:	b	42764 <flatcc_json_printer_clear@@Base+0x68>
   42754:	mov	r2, #45	; 0x2d
   42758:	mov	lr, r1
   4275c:	rsb	r0, r0, #0
   42760:	strb	r2, [lr], #1
   42764:	movw	ip, #26215	; 0x6667
   42768:	mov	r3, lr
   4276c:	movt	ip, #26214	; 0x6666
   42770:	smmul	r2, r0, ip
   42774:	asr	r4, r2, #2
   42778:	add	r2, r4, r2, lsr #31
   4277c:	add	r4, r2, r2, lsl #2
   42780:	sub	r4, r0, r4, lsl #1
   42784:	add	r0, r0, #9
   42788:	add	r4, r4, #48	; 0x30
   4278c:	cmp	r0, #18
   42790:	mov	r0, r2
   42794:	strb	r4, [r3], #1
   42798:	bhi	42770 <flatcc_json_printer_clear@@Base+0x74>
   4279c:	mov	r2, #0
   427a0:	mov	r0, r3
   427a4:	strb	r2, [r0], -lr
   427a8:	cmp	r0, #2
   427ac:	blt	427d4 <flatcc_json_printer_clear@@Base+0xd8>
   427b0:	add	r0, r0, r0, lsr #31
   427b4:	sub	r2, r3, #1
   427b8:	asr	r0, r0, #1
   427bc:	ldrb	ip, [lr]
   427c0:	ldrb	r4, [r2]
   427c4:	subs	r0, r0, #1
   427c8:	strb	r4, [lr], #1
   427cc:	strb	ip, [r2], #-1
   427d0:	bne	427bc <flatcc_json_printer_clear@@Base+0xc0>
   427d4:	sub	r0, r3, r1
   427d8:	pop	{r4, sl, fp, pc}
   427dc:	push	{r4, sl, fp, lr}
   427e0:	add	fp, sp, #8
   427e4:	orrs	r1, r2, r3
   427e8:	beq	42860 <flatcc_json_printer_clear@@Base+0x164>
   427ec:	ldr	ip, [fp, #12]
   427f0:	ldr	r1, [fp, #8]
   427f4:	mov	r4, #0
   427f8:	cmp	r4, r3, lsr #22
   427fc:	bne	42818 <flatcc_json_printer_clear@@Base+0x11c>
   42800:	lsl	r3, r3, #10
   42804:	sub	r1, r1, #10
   42808:	orr	r3, r3, r2, lsr #22
   4280c:	lsl	r2, r2, #10
   42810:	cmp	r3, #4194304	; 0x400000
   42814:	bcc	42800 <flatcc_json_printer_clear@@Base+0x104>
   42818:	cmp	r3, #0
   4281c:	blt	42848 <flatcc_json_printer_clear@@Base+0x14c>
   42820:	mvn	lr, #0
   42824:	lsl	r3, r3, #1
   42828:	lsl	r4, r2, #1
   4282c:	sub	r1, r1, #1
   42830:	orr	r3, r3, r2, lsr #31
   42834:	subs	r2, lr, r2, lsl #1
   42838:	sbcs	r2, lr, r3
   4283c:	mov	r2, r4
   42840:	blt	42824 <flatcc_json_printer_clear@@Base+0x128>
   42844:	b	4284c <flatcc_json_printer_clear@@Base+0x150>
   42848:	mov	r4, r2
   4284c:	str	r4, [r0]
   42850:	str	r3, [r0, #4]
   42854:	str	r1, [r0, #8]
   42858:	str	ip, [r0, #12]
   4285c:	pop	{r4, sl, fp, pc}
   42860:	movw	r0, #38722	; 0x9742
   42864:	movw	r1, #38731	; 0x974b
   42868:	movw	r3, #38817	; 0x97a1
   4286c:	mov	r2, #260	; 0x104
   42870:	movt	r0, #4
   42874:	movt	r1, #4
   42878:	movt	r3, #4
   4287c:	bl	14f44 <__assert_fail@plt>
   42880:	push	{r4, r5, fp, lr}
   42884:	add	fp, sp, #8
   42888:	ldr	ip, [fp, #24]
   4288c:	ldr	r1, [fp, #8]
   42890:	mov	r5, #0
   42894:	add	r1, r1, ip
   42898:	ldr	ip, [fp, #16]
   4289c:	add	r1, r1, #64	; 0x40
   428a0:	str	r1, [r0, #8]
   428a4:	umull	r1, lr, ip, r2
   428a8:	umull	ip, r1, ip, r3
   428ac:	adds	lr, ip, lr
   428b0:	ldr	ip, [fp, #20]
   428b4:	adc	r5, r5, #0
   428b8:	umull	r2, r4, ip, r2
   428bc:	adds	r2, lr, r2
   428c0:	umaal	r1, r4, ip, r3
   428c4:	adc	r5, r5, #0
   428c8:	adds	r2, r2, #-2147483648	; 0x80000000
   428cc:	adc	r2, r5, #0
   428d0:	adds	r1, r1, r2
   428d4:	str	r1, [r0]
   428d8:	adc	r1, r4, #0
   428dc:	str	r1, [r0, #4]
   428e0:	pop	{r4, r5, fp, pc}
   428e4:	push	{fp, lr}
   428e8:	mov	fp, sp
   428ec:	ldr	r1, [fp, #16]
   428f0:	ldr	ip, [fp, #8]
   428f4:	subs	r1, r2, r1
   428f8:	str	ip, [r0, #8]
   428fc:	str	r1, [r0]
   42900:	ldr	r1, [fp, #20]
   42904:	sbcs	r1, r3, r1
   42908:	str	r1, [r0, #4]
   4290c:	bcc	4291c <flatcc_json_printer_clear@@Base+0x220>
   42910:	ldr	r0, [fp, #24]
   42914:	cmp	ip, r0
   42918:	popeq	{fp, pc}
   4291c:	movw	r0, #39729	; 0x9b31
   42920:	movw	r1, #38731	; 0x974b
   42924:	movw	r3, #39754	; 0x9b4a
   42928:	mov	r2, #239	; 0xef
   4292c:	movt	r0, #4
   42930:	movt	r1, #4
   42934:	movt	r3, #4
   42938:	bl	14f44 <__assert_fail@plt>
   4293c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   42940:	add	fp, sp, #28
   42944:	sub	sp, sp, #20
   42948:	str	r1, [sp, #12]
   4294c:	ldr	r1, [fp, #16]
   42950:	ldr	r9, [fp, #8]
   42954:	mov	r8, r2
   42958:	ldr	r2, [fp, #20]
   4295c:	ldr	lr, [fp, #12]
   42960:	ldr	r4, [fp, #24]
   42964:	str	r0, [sp, #16]
   42968:	ldr	r0, [fp, #28]
   4296c:	mov	r6, #0
   42970:	subs	r7, r9, r1
   42974:	sbc	ip, lr, r2
   42978:	subs	r4, r7, r4
   4297c:	sbcs	r4, ip, r0
   42980:	ldr	r0, [fp, #32]
   42984:	ldr	r4, [fp, #36]	; 0x24
   42988:	movwcc	r6, #1
   4298c:	adds	r5, r0, r8
   42990:	str	r5, [sp, #8]
   42994:	adc	r5, r4, r3
   42998:	subs	sl, r8, r0
   4299c:	sbc	r8, r3, r4
   429a0:	subs	r3, r1, sl
   429a4:	str	r5, [sp, #4]
   429a8:	sbcs	r3, r2, r8
   429ac:	bcs	42a68 <flatcc_json_printer_clear@@Base+0x36c>
   429b0:	ldr	r0, [fp, #24]
   429b4:	ldr	r4, [fp, #28]
   429b8:	subs	r3, r7, r0
   429bc:	mov	r7, r0
   429c0:	sbcs	r3, ip, r4
   429c4:	bcc	42a78 <flatcc_json_printer_clear@@Base+0x37c>
   429c8:	ldr	r0, [sp, #12]
   429cc:	sub	r0, r0, #1
   429d0:	str	r0, [sp, #12]
   429d4:	adds	ip, r1, r7
   429d8:	adc	r3, r2, r4
   429dc:	subs	r6, ip, sl
   429e0:	sbcs	r6, r3, r8
   429e4:	bcc	42a1c <flatcc_json_printer_clear@@Base+0x320>
   429e8:	subs	r6, ip, sl
   429ec:	mov	r5, lr
   429f0:	mov	r0, r9
   429f4:	sbc	r4, r3, r8
   429f8:	subs	lr, sl, r1
   429fc:	sbc	r9, r8, r2
   42a00:	subs	r6, lr, r6
   42a04:	mov	lr, r5
   42a08:	sbcs	r6, r9, r4
   42a0c:	mov	r9, r0
   42a10:	ldr	r4, [fp, #28]
   42a14:	ldr	r0, [sp, #12]
   42a18:	bcc	42a74 <flatcc_json_printer_clear@@Base+0x378>
   42a1c:	ldr	r2, [sp, #16]
   42a20:	ldrb	r1, [r2, r0]
   42a24:	sub	r1, r1, #1
   42a28:	strb	r1, [r2, r0]
   42a2c:	subs	r1, r9, ip
   42a30:	sbc	r2, lr, r3
   42a34:	subs	r6, r1, r7
   42a38:	sbcs	r6, r2, r4
   42a3c:	mov	r6, #0
   42a40:	movwcc	r6, #1
   42a44:	subs	r5, ip, sl
   42a48:	sbcs	r5, r3, r8
   42a4c:	bcs	42a80 <flatcc_json_printer_clear@@Base+0x384>
   42a50:	subs	r1, r1, r7
   42a54:	sbcs	r1, r2, r4
   42a58:	mov	r2, r3
   42a5c:	mov	r1, ip
   42a60:	bcs	429d4 <flatcc_json_printer_clear@@Base+0x2d8>
   42a64:	b	42a80 <flatcc_json_printer_clear@@Base+0x384>
   42a68:	ldr	r4, [fp, #28]
   42a6c:	ldr	r7, [fp, #24]
   42a70:	b	42a78 <flatcc_json_printer_clear@@Base+0x37c>
   42a74:	mov	r6, #0
   42a78:	mov	ip, r1
   42a7c:	mov	r3, r2
   42a80:	ldr	r1, [sp, #8]
   42a84:	ldr	r5, [sp, #4]
   42a88:	subs	r0, ip, r1
   42a8c:	sbcs	r0, r3, r5
   42a90:	bcs	42af0 <flatcc_json_printer_clear@@Base+0x3f4>
   42a94:	cmp	r6, #0
   42a98:	bne	42af0 <flatcc_json_printer_clear@@Base+0x3f4>
   42a9c:	adds	r7, ip, r7
   42aa0:	mov	r0, #0
   42aa4:	adc	r2, r3, r4
   42aa8:	subs	r6, r7, r1
   42aac:	sbcs	r6, r2, r5
   42ab0:	bcc	42b30 <flatcc_json_printer_clear@@Base+0x434>
   42ab4:	subs	r7, r7, r1
   42ab8:	ldr	r6, [fp, #36]	; 0x24
   42abc:	sbc	r8, r2, r5
   42ac0:	subs	sl, r1, ip
   42ac4:	sbc	r2, r5, r3
   42ac8:	ldr	r5, [fp, #32]
   42acc:	lsl	r4, r6, #1
   42ad0:	orr	r4, r4, r5, lsr #31
   42ad4:	subs	r1, ip, r5, lsl #1
   42ad8:	sbcs	r1, r3, r4
   42adc:	bcc	42b30 <flatcc_json_printer_clear@@Base+0x434>
   42ae0:	subs	r1, r7, sl
   42ae4:	sbcs	r1, r8, r2
   42ae8:	bcs	42b10 <flatcc_json_printer_clear@@Base+0x414>
   42aec:	b	42b30 <flatcc_json_printer_clear@@Base+0x434>
   42af0:	ldr	r6, [fp, #36]	; 0x24
   42af4:	ldr	r5, [fp, #32]
   42af8:	lsl	r0, r6, #1
   42afc:	subs	r2, ip, r5, lsl #1
   42b00:	orr	r1, r0, r5, lsr #31
   42b04:	mov	r0, #0
   42b08:	sbcs	r1, r3, r1
   42b0c:	bcc	42b30 <flatcc_json_printer_clear@@Base+0x434>
   42b10:	lsl	r0, r6, #2
   42b14:	subs	r1, r9, r5, lsl #2
   42b18:	orr	r0, r0, r5, lsr #30
   42b1c:	sbc	r2, lr, r0
   42b20:	subs	r1, r1, ip
   42b24:	mov	r0, #0
   42b28:	sbcs	r1, r2, r3
   42b2c:	movwcs	r0, #1
   42b30:	sub	sp, fp, #28
   42b34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   42b38:	cmp	r2, #0
   42b3c:	bxeq	lr
   42b40:	push	{r4, r5, fp, lr}
   42b44:	add	fp, sp, #8
   42b48:	ldr	lr, [r2]
   42b4c:	bic	ip, r3, #224	; 0xe0
   42b50:	cmp	ip, #0
   42b54:	beq	42b6c <flatcc_json_printer_clear@@Base+0x470>
   42b58:	cmp	ip, #1
   42b5c:	bne	42c34 <flatcc_json_printer_clear@@Base+0x538>
   42b60:	movw	ip, #40178	; 0x9cf2
   42b64:	movt	ip, #4
   42b68:	b	42b74 <flatcc_json_printer_clear@@Base+0x478>
   42b6c:	movw	ip, #40113	; 0x9cb1
   42b70:	movt	ip, #4
   42b74:	cmp	lr, #3
   42b78:	bcc	42bdc <flatcc_json_printer_clear@@Base+0x4e0>
   42b7c:	ldrb	r4, [r1]
   42b80:	sub	lr, lr, #3
   42b84:	cmp	lr, #2
   42b88:	ldrb	r4, [ip, r4, lsr #2]
   42b8c:	strb	r4, [r0]
   42b90:	ldrb	r5, [r1, #1]
   42b94:	ldrb	r4, [r1]
   42b98:	lsr	r5, r5, #4
   42b9c:	bfi	r5, r4, #4, #2
   42ba0:	ldrb	r4, [ip, r5]
   42ba4:	strb	r4, [r0, #1]
   42ba8:	ldrb	r5, [r1, #2]
   42bac:	ldrb	r4, [r1, #1]
   42bb0:	lsr	r5, r5, #6
   42bb4:	bfi	r5, r4, #2, #4
   42bb8:	ldrb	r4, [ip, r5]
   42bbc:	strb	r4, [r0, #2]
   42bc0:	ldrb	r4, [r1, #2]
   42bc4:	add	r1, r1, #3
   42bc8:	and	r4, r4, #63	; 0x3f
   42bcc:	ldrb	r4, [ip, r4]
   42bd0:	strb	r4, [r0, #3]
   42bd4:	add	r0, r0, #4
   42bd8:	bhi	42b7c <flatcc_json_printer_clear@@Base+0x480>
   42bdc:	and	r3, r3, #128	; 0x80
   42be0:	cmp	lr, #1
   42be4:	beq	42c3c <flatcc_json_printer_clear@@Base+0x540>
   42be8:	cmp	lr, #2
   42bec:	bne	42c64 <flatcc_json_printer_clear@@Base+0x568>
   42bf0:	ldrb	r5, [r1]
   42bf4:	cmp	r3, #0
   42bf8:	ldrb	r5, [ip, r5, lsr #2]
   42bfc:	strb	r5, [r0]
   42c00:	ldrb	r4, [r1, #1]
   42c04:	ldrb	r5, [r1]
   42c08:	lsr	r4, r4, #4
   42c0c:	bfi	r4, r5, #4, #2
   42c10:	ldrb	r5, [ip, r4]
   42c14:	strb	r5, [r0, #1]
   42c18:	ldrb	r1, [r1, #1]
   42c1c:	and	r1, r1, #15
   42c20:	ldrb	r1, [ip, r1, lsl #2]
   42c24:	strb	r1, [r0, #2]
   42c28:	movne	r1, #61	; 0x3d
   42c2c:	strbne	r1, [r0, #3]
   42c30:	b	42c64 <flatcc_json_printer_clear@@Base+0x568>
   42c34:	mov	r0, lr
   42c38:	b	42c6c <flatcc_json_printer_clear@@Base+0x570>
   42c3c:	ldrb	r5, [r1]
   42c40:	cmp	r3, #0
   42c44:	ldrb	r5, [ip, r5, lsr #2]
   42c48:	strb	r5, [r0]
   42c4c:	ldrb	r1, [r1]
   42c50:	and	r1, r1, #3
   42c54:	ldrb	r1, [ip, r1, lsl #4]
   42c58:	strb	r1, [r0, #1]
   42c5c:	movwne	r1, #15677	; 0x3d3d
   42c60:	strhne	r1, [r0, #2]
   42c64:	ldr	lr, [r2]
   42c68:	mov	r0, #0
   42c6c:	sub	r0, lr, r0
   42c70:	str	r0, [r2]
   42c74:	pop	{r4, r5, fp, lr}
   42c78:	bx	lr
   42c7c:	eor	r1, r1, #-2147483648	; 0x80000000
   42c80:	b	42c88 <flatcc_json_printer_clear@@Base+0x58c>
   42c84:	eor	r3, r3, #-2147483648	; 0x80000000
   42c88:	push	{r4, r5, lr}
   42c8c:	lsl	r4, r1, #1
   42c90:	lsl	r5, r3, #1
   42c94:	teq	r4, r5
   42c98:	teqeq	r0, r2
   42c9c:	orrsne	ip, r4, r0
   42ca0:	orrsne	ip, r5, r2
   42ca4:	mvnsne	ip, r4, asr #21
   42ca8:	mvnsne	ip, r5, asr #21
   42cac:	beq	42e98 <flatcc_json_printer_clear@@Base+0x79c>
   42cb0:	lsr	r4, r4, #21
   42cb4:	rsbs	r5, r4, r5, lsr #21
   42cb8:	rsblt	r5, r5, #0
   42cbc:	ble	42cdc <flatcc_json_printer_clear@@Base+0x5e0>
   42cc0:	add	r4, r4, r5
   42cc4:	eor	r2, r0, r2
   42cc8:	eor	r3, r1, r3
   42ccc:	eor	r0, r2, r0
   42cd0:	eor	r1, r3, r1
   42cd4:	eor	r2, r0, r2
   42cd8:	eor	r3, r1, r3
   42cdc:	cmp	r5, #54	; 0x36
   42ce0:	pophi	{r4, r5, pc}
   42ce4:	tst	r1, #-2147483648	; 0x80000000
   42ce8:	lsl	r1, r1, #12
   42cec:	mov	ip, #1048576	; 0x100000
   42cf0:	orr	r1, ip, r1, lsr #12
   42cf4:	beq	42d00 <flatcc_json_printer_clear@@Base+0x604>
   42cf8:	rsbs	r0, r0, #0
   42cfc:	rsc	r1, r1, #0
   42d00:	tst	r3, #-2147483648	; 0x80000000
   42d04:	lsl	r3, r3, #12
   42d08:	orr	r3, ip, r3, lsr #12
   42d0c:	beq	42d18 <flatcc_json_printer_clear@@Base+0x61c>
   42d10:	rsbs	r2, r2, #0
   42d14:	rsc	r3, r3, #0
   42d18:	teq	r4, r5
   42d1c:	beq	42e80 <flatcc_json_printer_clear@@Base+0x784>
   42d20:	sub	r4, r4, #1
   42d24:	rsbs	lr, r5, #32
   42d28:	blt	42d44 <flatcc_json_printer_clear@@Base+0x648>
   42d2c:	lsl	ip, r2, lr
   42d30:	adds	r0, r0, r2, lsr r5
   42d34:	adc	r1, r1, #0
   42d38:	adds	r0, r0, r3, lsl lr
   42d3c:	adcs	r1, r1, r3, asr r5
   42d40:	b	42d60 <flatcc_json_printer_clear@@Base+0x664>
   42d44:	sub	r5, r5, #32
   42d48:	add	lr, lr, #32
   42d4c:	cmp	r2, #1
   42d50:	lsl	ip, r3, lr
   42d54:	orrcs	ip, ip, #2
   42d58:	adds	r0, r0, r3, asr r5
   42d5c:	adcs	r1, r1, r3, asr #31
   42d60:	and	r5, r1, #-2147483648	; 0x80000000
   42d64:	bpl	42d74 <flatcc_json_printer_clear@@Base+0x678>
   42d68:	rsbs	ip, ip, #0
   42d6c:	rscs	r0, r0, #0
   42d70:	rsc	r1, r1, #0
   42d74:	cmp	r1, #1048576	; 0x100000
   42d78:	bcc	42db8 <flatcc_json_printer_clear@@Base+0x6bc>
   42d7c:	cmp	r1, #2097152	; 0x200000
   42d80:	bcc	42da0 <flatcc_json_printer_clear@@Base+0x6a4>
   42d84:	lsrs	r1, r1, #1
   42d88:	rrxs	r0, r0
   42d8c:	rrx	ip, ip
   42d90:	add	r4, r4, #1
   42d94:	lsl	r2, r4, #21
   42d98:	cmn	r2, #4194304	; 0x400000
   42d9c:	bcs	42ef8 <flatcc_json_printer_clear@@Base+0x7fc>
   42da0:	cmp	ip, #-2147483648	; 0x80000000
   42da4:	lsrseq	ip, r0, #1
   42da8:	adcs	r0, r0, #0
   42dac:	adc	r1, r1, r4, lsl #20
   42db0:	orr	r1, r1, r5
   42db4:	pop	{r4, r5, pc}
   42db8:	lsls	ip, ip, #1
   42dbc:	adcs	r0, r0, r0
   42dc0:	adc	r1, r1, r1
   42dc4:	tst	r1, #1048576	; 0x100000
   42dc8:	sub	r4, r4, #1
   42dcc:	bne	42da0 <flatcc_json_printer_clear@@Base+0x6a4>
   42dd0:	teq	r1, #0
   42dd4:	moveq	r1, r0
   42dd8:	moveq	r0, #0
   42ddc:	clz	r3, r1
   42de0:	addeq	r3, r3, #32
   42de4:	sub	r3, r3, #11
   42de8:	subs	r2, r3, #32
   42dec:	bge	42e10 <flatcc_json_printer_clear@@Base+0x714>
   42df0:	adds	r2, r2, #12
   42df4:	ble	42e0c <flatcc_json_printer_clear@@Base+0x710>
   42df8:	add	ip, r2, #20
   42dfc:	rsb	r2, r2, #12
   42e00:	lsl	r0, r1, ip
   42e04:	lsr	r1, r1, r2
   42e08:	b	42e20 <flatcc_json_printer_clear@@Base+0x724>
   42e0c:	add	r2, r2, #20
   42e10:	rsble	ip, r2, #32
   42e14:	lsl	r1, r1, r2
   42e18:	orrle	r1, r1, r0, lsr ip
   42e1c:	lslle	r0, r0, r2
   42e20:	subs	r4, r4, r3
   42e24:	addge	r1, r1, r4, lsl #20
   42e28:	orrge	r1, r1, r5
   42e2c:	popge	{r4, r5, pc}
   42e30:	mvn	r4, r4
   42e34:	subs	r4, r4, #31
   42e38:	bge	42e74 <flatcc_json_printer_clear@@Base+0x778>
   42e3c:	adds	r4, r4, #12
   42e40:	bgt	42e5c <flatcc_json_printer_clear@@Base+0x760>
   42e44:	add	r4, r4, #20
   42e48:	rsb	r2, r4, #32
   42e4c:	lsr	r0, r0, r4
   42e50:	orr	r0, r0, r1, lsl r2
   42e54:	orr	r1, r5, r1, lsr r4
   42e58:	pop	{r4, r5, pc}
   42e5c:	rsb	r4, r4, #12
   42e60:	rsb	r2, r4, #32
   42e64:	lsr	r0, r0, r2
   42e68:	orr	r0, r0, r1, lsl r4
   42e6c:	mov	r1, r5
   42e70:	pop	{r4, r5, pc}
   42e74:	lsr	r0, r1, r4
   42e78:	mov	r1, r5
   42e7c:	pop	{r4, r5, pc}
   42e80:	teq	r4, #0
   42e84:	eor	r3, r3, #1048576	; 0x100000
   42e88:	eoreq	r1, r1, #1048576	; 0x100000
   42e8c:	addeq	r4, r4, #1
   42e90:	subne	r5, r5, #1
   42e94:	b	42d20 <flatcc_json_printer_clear@@Base+0x624>
   42e98:	mvns	ip, r4, asr #21
   42e9c:	mvnsne	ip, r5, asr #21
   42ea0:	beq	42f08 <flatcc_json_printer_clear@@Base+0x80c>
   42ea4:	teq	r4, r5
   42ea8:	teqeq	r0, r2
   42eac:	beq	42ec0 <flatcc_json_printer_clear@@Base+0x7c4>
   42eb0:	orrs	ip, r4, r0
   42eb4:	moveq	r1, r3
   42eb8:	moveq	r0, r2
   42ebc:	pop	{r4, r5, pc}
   42ec0:	teq	r1, r3
   42ec4:	movne	r1, #0
   42ec8:	movne	r0, #0
   42ecc:	popne	{r4, r5, pc}
   42ed0:	lsrs	ip, r4, #21
   42ed4:	bne	42ee8 <flatcc_json_printer_clear@@Base+0x7ec>
   42ed8:	lsls	r0, r0, #1
   42edc:	adcs	r1, r1, r1
   42ee0:	orrcs	r1, r1, #-2147483648	; 0x80000000
   42ee4:	pop	{r4, r5, pc}
   42ee8:	adds	r4, r4, #4194304	; 0x400000
   42eec:	addcc	r1, r1, #1048576	; 0x100000
   42ef0:	popcc	{r4, r5, pc}
   42ef4:	and	r5, r1, #-2147483648	; 0x80000000
   42ef8:	orr	r1, r5, #2130706432	; 0x7f000000
   42efc:	orr	r1, r1, #15728640	; 0xf00000
   42f00:	mov	r0, #0
   42f04:	pop	{r4, r5, pc}
   42f08:	mvns	ip, r4, asr #21
   42f0c:	movne	r1, r3
   42f10:	movne	r0, r2
   42f14:	mvnseq	ip, r5, asr #21
   42f18:	movne	r3, r1
   42f1c:	movne	r2, r0
   42f20:	orrs	r4, r0, r1, lsl #12
   42f24:	orrseq	r5, r2, r3, lsl #12
   42f28:	teqeq	r1, r3
   42f2c:	orrne	r1, r1, #524288	; 0x80000
   42f30:	pop	{r4, r5, pc}
   42f34:	teq	r0, #0
   42f38:	moveq	r1, #0
   42f3c:	bxeq	lr
   42f40:	push	{r4, r5, lr}
   42f44:	mov	r4, #1024	; 0x400
   42f48:	add	r4, r4, #50	; 0x32
   42f4c:	mov	r5, #0
   42f50:	mov	r1, #0
   42f54:	b	42dd0 <flatcc_json_printer_clear@@Base+0x6d4>
   42f58:	teq	r0, #0
   42f5c:	moveq	r1, #0
   42f60:	bxeq	lr
   42f64:	push	{r4, r5, lr}
   42f68:	mov	r4, #1024	; 0x400
   42f6c:	add	r4, r4, #50	; 0x32
   42f70:	ands	r5, r0, #-2147483648	; 0x80000000
   42f74:	rsbmi	r0, r0, #0
   42f78:	mov	r1, #0
   42f7c:	b	42dd0 <flatcc_json_printer_clear@@Base+0x6d4>
   42f80:	lsls	r2, r0, #1
   42f84:	asr	r1, r2, #3
   42f88:	rrx	r1, r1
   42f8c:	lsl	r0, r2, #28
   42f90:	andsne	r3, r2, #-16777216	; 0xff000000
   42f94:	teqne	r3, #-16777216	; 0xff000000
   42f98:	eorne	r1, r1, #939524096	; 0x38000000
   42f9c:	bxne	lr
   42fa0:	bics	r2, r2, #-16777216	; 0xff000000
   42fa4:	bxeq	lr
   42fa8:	teq	r3, #-16777216	; 0xff000000
   42fac:	orreq	r1, r1, #524288	; 0x80000
   42fb0:	bxeq	lr
   42fb4:	push	{r4, r5, lr}
   42fb8:	mov	r4, #896	; 0x380
   42fbc:	and	r5, r1, #-2147483648	; 0x80000000
   42fc0:	bic	r1, r1, #-2147483648	; 0x80000000
   42fc4:	b	42dd0 <flatcc_json_printer_clear@@Base+0x6d4>
   42fc8:	orrs	r2, r0, r1
   42fcc:	bxeq	lr
   42fd0:	push	{r4, r5, lr}
   42fd4:	mov	r5, #0
   42fd8:	b	42ff8 <flatcc_json_printer_clear@@Base+0x8fc>
   42fdc:	orrs	r2, r0, r1
   42fe0:	bxeq	lr
   42fe4:	push	{r4, r5, lr}
   42fe8:	ands	r5, r1, #-2147483648	; 0x80000000
   42fec:	bpl	42ff8 <flatcc_json_printer_clear@@Base+0x8fc>
   42ff0:	rsbs	r0, r0, #0
   42ff4:	rsc	r1, r1, #0
   42ff8:	mov	r4, #1024	; 0x400
   42ffc:	add	r4, r4, #50	; 0x32
   43000:	lsrs	ip, r1, #22
   43004:	beq	42d74 <flatcc_json_printer_clear@@Base+0x678>
   43008:	mov	r2, #3
   4300c:	lsrs	ip, ip, #3
   43010:	addne	r2, r2, #3
   43014:	lsrs	ip, ip, #3
   43018:	addne	r2, r2, #3
   4301c:	add	r2, r2, ip, lsr #3
   43020:	rsb	r3, r2, #32
   43024:	lsl	ip, r0, r3
   43028:	lsr	r0, r0, r2
   4302c:	orr	r0, r0, r1, lsl r3
   43030:	lsr	r1, r1, r2
   43034:	add	r4, r4, r2
   43038:	b	42d74 <flatcc_json_printer_clear@@Base+0x678>
   4303c:	eor	r0, r0, #-2147483648	; 0x80000000
   43040:	b	43048 <flatcc_json_printer_clear@@Base+0x94c>
   43044:	eor	r1, r1, #-2147483648	; 0x80000000
   43048:	lsls	r2, r0, #1
   4304c:	lslsne	r3, r1, #1
   43050:	teqne	r2, r3
   43054:	mvnsne	ip, r2, asr #24
   43058:	mvnsne	ip, r3, asr #24
   4305c:	beq	43154 <flatcc_json_printer_clear@@Base+0xa58>
   43060:	lsr	r2, r2, #24
   43064:	rsbs	r3, r2, r3, lsr #24
   43068:	addgt	r2, r2, r3
   4306c:	eorgt	r1, r0, r1
   43070:	eorgt	r0, r1, r0
   43074:	eorgt	r1, r0, r1
   43078:	rsblt	r3, r3, #0
   4307c:	cmp	r3, #25
   43080:	bxhi	lr
   43084:	tst	r0, #-2147483648	; 0x80000000
   43088:	orr	r0, r0, #8388608	; 0x800000
   4308c:	bic	r0, r0, #-16777216	; 0xff000000
   43090:	rsbne	r0, r0, #0
   43094:	tst	r1, #-2147483648	; 0x80000000
   43098:	orr	r1, r1, #8388608	; 0x800000
   4309c:	bic	r1, r1, #-16777216	; 0xff000000
   430a0:	rsbne	r1, r1, #0
   430a4:	teq	r2, r3
   430a8:	beq	4313c <flatcc_json_printer_clear@@Base+0xa40>
   430ac:	sub	r2, r2, #1
   430b0:	adds	r0, r0, r1, asr r3
   430b4:	rsb	r3, r3, #32
   430b8:	lsl	r1, r1, r3
   430bc:	and	r3, r0, #-2147483648	; 0x80000000
   430c0:	bpl	430cc <flatcc_json_printer_clear@@Base+0x9d0>
   430c4:	rsbs	r1, r1, #0
   430c8:	rsc	r0, r0, #0
   430cc:	cmp	r0, #8388608	; 0x800000
   430d0:	bcc	43104 <flatcc_json_printer_clear@@Base+0xa08>
   430d4:	cmp	r0, #16777216	; 0x1000000
   430d8:	bcc	430f0 <flatcc_json_printer_clear@@Base+0x9f4>
   430dc:	lsrs	r0, r0, #1
   430e0:	rrx	r1, r1
   430e4:	add	r2, r2, #1
   430e8:	cmp	r2, #254	; 0xfe
   430ec:	bcs	431a8 <flatcc_json_printer_clear@@Base+0xaac>
   430f0:	cmp	r1, #-2147483648	; 0x80000000
   430f4:	adc	r0, r0, r2, lsl #23
   430f8:	biceq	r0, r0, #1
   430fc:	orr	r0, r0, r3
   43100:	bx	lr
   43104:	lsls	r1, r1, #1
   43108:	adc	r0, r0, r0
   4310c:	tst	r0, #8388608	; 0x800000
   43110:	sub	r2, r2, #1
   43114:	bne	430f0 <flatcc_json_printer_clear@@Base+0x9f4>
   43118:	clz	ip, r0
   4311c:	sub	ip, ip, #8
   43120:	subs	r2, r2, ip
   43124:	lsl	r0, r0, ip
   43128:	addge	r0, r0, r2, lsl #23
   4312c:	rsblt	r2, r2, #0
   43130:	orrge	r0, r0, r3
   43134:	orrlt	r0, r3, r0, lsr r2
   43138:	bx	lr
   4313c:	teq	r2, #0
   43140:	eor	r1, r1, #8388608	; 0x800000
   43144:	eoreq	r0, r0, #8388608	; 0x800000
   43148:	addeq	r2, r2, #1
   4314c:	subne	r3, r3, #1
   43150:	b	430ac <flatcc_json_printer_clear@@Base+0x9b0>
   43154:	lsl	r3, r1, #1
   43158:	mvns	ip, r2, asr #24
   4315c:	mvnsne	ip, r3, asr #24
   43160:	beq	431b4 <flatcc_json_printer_clear@@Base+0xab8>
   43164:	teq	r2, r3
   43168:	beq	43178 <flatcc_json_printer_clear@@Base+0xa7c>
   4316c:	teq	r2, #0
   43170:	moveq	r0, r1
   43174:	bx	lr
   43178:	teq	r0, r1
   4317c:	movne	r0, #0
   43180:	bxne	lr
   43184:	tst	r2, #-16777216	; 0xff000000
   43188:	bne	43198 <flatcc_json_printer_clear@@Base+0xa9c>
   4318c:	lsls	r0, r0, #1
   43190:	orrcs	r0, r0, #-2147483648	; 0x80000000
   43194:	bx	lr
   43198:	adds	r2, r2, #33554432	; 0x2000000
   4319c:	addcc	r0, r0, #8388608	; 0x800000
   431a0:	bxcc	lr
   431a4:	and	r3, r0, #-2147483648	; 0x80000000
   431a8:	orr	r0, r3, #2130706432	; 0x7f000000
   431ac:	orr	r0, r0, #8388608	; 0x800000
   431b0:	bx	lr
   431b4:	mvns	r2, r2, asr #24
   431b8:	movne	r0, r1
   431bc:	mvnseq	r3, r3, asr #24
   431c0:	movne	r1, r0
   431c4:	lsls	r2, r0, #9
   431c8:	lslseq	r3, r1, #9
   431cc:	teqeq	r0, r1
   431d0:	orrne	r0, r0, #4194304	; 0x400000
   431d4:	bx	lr
   431d8:	mov	r3, #0
   431dc:	b	431e8 <flatcc_json_printer_clear@@Base+0xaec>
   431e0:	ands	r3, r0, #-2147483648	; 0x80000000
   431e4:	rsbmi	r0, r0, #0
   431e8:	movs	ip, r0
   431ec:	bxeq	lr
   431f0:	orr	r3, r3, #1258291200	; 0x4b000000
   431f4:	mov	r1, r0
   431f8:	mov	r0, #0
   431fc:	b	43240 <flatcc_json_printer_clear@@Base+0xb44>
   43200:	orrs	r2, r0, r1
   43204:	bxeq	lr
   43208:	mov	r3, #0
   4320c:	b	43228 <flatcc_json_printer_clear@@Base+0xb2c>
   43210:	orrs	r2, r0, r1
   43214:	bxeq	lr
   43218:	ands	r3, r1, #-2147483648	; 0x80000000
   4321c:	bpl	43228 <flatcc_json_printer_clear@@Base+0xb2c>
   43220:	rsbs	r0, r0, #0
   43224:	rsc	r1, r1, #0
   43228:	movs	ip, r1
   4322c:	moveq	ip, r0
   43230:	moveq	r1, r0
   43234:	moveq	r0, #0
   43238:	orr	r3, r3, #1526726656	; 0x5b000000
   4323c:	subeq	r3, r3, #268435456	; 0x10000000
   43240:	sub	r3, r3, #8388608	; 0x800000
   43244:	clz	r2, ip
   43248:	subs	r2, r2, #8
   4324c:	sub	r3, r3, r2, lsl #23
   43250:	blt	43270 <flatcc_json_printer_clear@@Base+0xb74>
   43254:	add	r3, r3, r1, lsl r2
   43258:	lsl	ip, r0, r2
   4325c:	rsb	r2, r2, #32
   43260:	cmp	ip, #-2147483648	; 0x80000000
   43264:	adc	r0, r3, r0, lsr r2
   43268:	biceq	r0, r0, #1
   4326c:	bx	lr
   43270:	add	r2, r2, #32
   43274:	lsl	ip, r1, r2
   43278:	rsb	r2, r2, #32
   4327c:	orrs	r0, r0, ip, lsl #1
   43280:	adc	r0, r3, r1, lsr r2
   43284:	biceq	r0, r0, ip, lsr #31
   43288:	bx	lr
   4328c:	cmp	r3, #0
   43290:	cmpeq	r2, #0
   43294:	bne	432ac <flatcc_json_printer_clear@@Base+0xbb0>
   43298:	cmp	r1, #0
   4329c:	cmpeq	r0, #0
   432a0:	mvnne	r1, #0
   432a4:	mvnne	r0, #0
   432a8:	b	432c8 <flatcc_json_printer_clear@@Base+0xbcc>
   432ac:	sub	sp, sp, #8
   432b0:	push	{sp, lr}
   432b4:	bl	432d8 <flatcc_json_printer_clear@@Base+0xbdc>
   432b8:	ldr	lr, [sp, #4]
   432bc:	add	sp, sp, #8
   432c0:	pop	{r2, r3}
   432c4:	bx	lr
   432c8:	push	{r1, lr}
   432cc:	mov	r0, #8
   432d0:	bl	14e30 <raise@plt>
   432d4:	pop	{r1, pc}
   432d8:	cmp	r1, r3
   432dc:	cmpeq	r0, r2
   432e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   432e4:	mov	r4, r0
   432e8:	movcc	r0, #0
   432ec:	mov	r5, r1
   432f0:	ldr	lr, [sp, #36]	; 0x24
   432f4:	movcc	r1, r0
   432f8:	bcc	433f4 <flatcc_json_printer_clear@@Base+0xcf8>
   432fc:	cmp	r3, #0
   43300:	clzeq	ip, r2
   43304:	clzne	ip, r3
   43308:	addeq	ip, ip, #32
   4330c:	cmp	r5, #0
   43310:	clzeq	r1, r4
   43314:	addeq	r1, r1, #32
   43318:	clzne	r1, r5
   4331c:	sub	ip, ip, r1
   43320:	sub	sl, ip, #32
   43324:	lsl	r9, r3, ip
   43328:	rsb	fp, ip, #32
   4332c:	orr	r9, r9, r2, lsl sl
   43330:	orr	r9, r9, r2, lsr fp
   43334:	lsl	r8, r2, ip
   43338:	cmp	r5, r9
   4333c:	cmpeq	r4, r8
   43340:	movcc	r0, #0
   43344:	movcc	r1, r0
   43348:	bcc	43364 <flatcc_json_printer_clear@@Base+0xc68>
   4334c:	mov	r0, #1
   43350:	subs	r4, r4, r8
   43354:	lsl	r1, r0, sl
   43358:	orr	r1, r1, r0, lsr fp
   4335c:	lsl	r0, r0, ip
   43360:	sbc	r5, r5, r9
   43364:	cmp	ip, #0
   43368:	beq	433f4 <flatcc_json_printer_clear@@Base+0xcf8>
   4336c:	lsr	r6, r8, #1
   43370:	orr	r6, r6, r9, lsl #31
   43374:	lsr	r7, r9, #1
   43378:	mov	r2, ip
   4337c:	b	433a0 <flatcc_json_printer_clear@@Base+0xca4>
   43380:	subs	r3, r4, r6
   43384:	sbc	r8, r5, r7
   43388:	adds	r3, r3, r3
   4338c:	adc	r8, r8, r8
   43390:	adds	r4, r3, #1
   43394:	adc	r5, r8, #0
   43398:	subs	r2, r2, #1
   4339c:	beq	433bc <flatcc_json_printer_clear@@Base+0xcc0>
   433a0:	cmp	r5, r7
   433a4:	cmpeq	r4, r6
   433a8:	bcs	43380 <flatcc_json_printer_clear@@Base+0xc84>
   433ac:	adds	r4, r4, r4
   433b0:	adc	r5, r5, r5
   433b4:	subs	r2, r2, #1
   433b8:	bne	433a0 <flatcc_json_printer_clear@@Base+0xca4>
   433bc:	lsr	r3, r4, ip
   433c0:	orr	r3, r3, r5, lsl fp
   433c4:	lsr	r2, r5, ip
   433c8:	orr	r3, r3, r5, lsr sl
   433cc:	adds	r0, r0, r4
   433d0:	mov	r4, r3
   433d4:	lsl	r3, r2, ip
   433d8:	orr	r3, r3, r4, lsl sl
   433dc:	lsl	ip, r4, ip
   433e0:	orr	r3, r3, r4, lsr fp
   433e4:	adc	r1, r1, r5
   433e8:	subs	r0, r0, ip
   433ec:	mov	r5, r2
   433f0:	sbc	r1, r1, r3
   433f4:	cmp	lr, #0
   433f8:	strdne	r4, [lr]
   433fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00043400 <__libc_csu_init@@Base>:
   43400:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   43404:	mov	r7, r0
   43408:	ldr	r6, [pc, #72]	; 43458 <__libc_csu_init@@Base+0x58>
   4340c:	ldr	r5, [pc, #72]	; 4345c <__libc_csu_init@@Base+0x5c>
   43410:	add	r6, pc, r6
   43414:	add	r5, pc, r5
   43418:	sub	r6, r6, r5
   4341c:	mov	r8, r1
   43420:	mov	r9, r2
   43424:	bl	14e10 <raise@plt-0x20>
   43428:	asrs	r6, r6, #2
   4342c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   43430:	mov	r4, #0
   43434:	add	r4, r4, #1
   43438:	ldr	r3, [r5], #4
   4343c:	mov	r2, r9
   43440:	mov	r1, r8
   43444:	mov	r0, r7
   43448:	blx	r3
   4344c:	cmp	r6, r4
   43450:	bne	43434 <__libc_csu_init@@Base+0x34>
   43454:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   43458:	strdeq	r7, [r1], -r4
   4345c:	andeq	r7, r1, ip, ror #21

00043460 <__libc_csu_fini@@Base>:
   43460:	bx	lr

Disassembly of section .fini:

00043464 <.fini>:
   43464:	push	{r3, lr}
   43468:	pop	{r3, pc}
