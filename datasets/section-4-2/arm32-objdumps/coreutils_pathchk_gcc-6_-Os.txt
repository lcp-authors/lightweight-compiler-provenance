
../repos/coreutils/src/pathchk:     file format elf32-littlearm


Disassembly of section .init:

00010b78 <.init>:
   10b78:	push	{r3, lr}
   10b7c:	bl	11464 <strspn@plt+0x698>
   10b80:	pop	{r3, pc}

Disassembly of section .plt:

00010b84 <calloc@plt-0x14>:
   10b84:	push	{lr}		; (str lr, [sp, #-4]!)
   10b88:	ldr	lr, [pc, #4]	; 10b94 <calloc@plt-0x4>
   10b8c:	add	lr, pc, lr
   10b90:	ldr	pc, [lr, #8]!
   10b94:	andeq	r4, r1, ip, ror #8

00010b98 <calloc@plt>:
   10b98:	add	ip, pc, #0, 12
   10b9c:	add	ip, ip, #20, 20	; 0x14000
   10ba0:	ldr	pc, [ip, #1132]!	; 0x46c

00010ba4 <fputs_unlocked@plt>:
   10ba4:	add	ip, pc, #0, 12
   10ba8:	add	ip, ip, #20, 20	; 0x14000
   10bac:	ldr	pc, [ip, #1124]!	; 0x464

00010bb0 <raise@plt>:
   10bb0:	add	ip, pc, #0, 12
   10bb4:	add	ip, ip, #20, 20	; 0x14000
   10bb8:	ldr	pc, [ip, #1116]!	; 0x45c

00010bbc <strcmp@plt>:
   10bbc:	add	ip, pc, #0, 12
   10bc0:	add	ip, ip, #20, 20	; 0x14000
   10bc4:	ldr	pc, [ip, #1108]!	; 0x454

00010bc8 <pathconf@plt>:
   10bc8:	add	ip, pc, #0, 12
   10bcc:	add	ip, ip, #20, 20	; 0x14000
   10bd0:	ldr	pc, [ip, #1100]!	; 0x44c

00010bd4 <fflush@plt>:
   10bd4:	add	ip, pc, #0, 12
   10bd8:	add	ip, ip, #20, 20	; 0x14000
   10bdc:	ldr	pc, [ip, #1092]!	; 0x444

00010be0 <free@plt>:
   10be0:	add	ip, pc, #0, 12
   10be4:	add	ip, ip, #20, 20	; 0x14000
   10be8:	ldr	pc, [ip, #1084]!	; 0x43c

00010bec <_exit@plt>:
   10bec:	add	ip, pc, #0, 12
   10bf0:	add	ip, ip, #20, 20	; 0x14000
   10bf4:	ldr	pc, [ip, #1076]!	; 0x434

00010bf8 <memcpy@plt>:
   10bf8:	add	ip, pc, #0, 12
   10bfc:	add	ip, ip, #20, 20	; 0x14000
   10c00:	ldr	pc, [ip, #1068]!	; 0x42c

00010c04 <mbsinit@plt>:
   10c04:	add	ip, pc, #0, 12
   10c08:	add	ip, ip, #20, 20	; 0x14000
   10c0c:	ldr	pc, [ip, #1060]!	; 0x424

00010c10 <memcmp@plt>:
   10c10:	add	ip, pc, #0, 12
   10c14:	add	ip, ip, #20, 20	; 0x14000
   10c18:	ldr	pc, [ip, #1052]!	; 0x41c

00010c1c <fputc_unlocked@plt>:
   10c1c:	add	ip, pc, #0, 12
   10c20:	add	ip, ip, #20, 20	; 0x14000
   10c24:	ldr	pc, [ip, #1044]!	; 0x414

00010c28 <dcgettext@plt>:
   10c28:	add	ip, pc, #0, 12
   10c2c:	add	ip, ip, #20, 20	; 0x14000
   10c30:	ldr	pc, [ip, #1036]!	; 0x40c

00010c34 <realloc@plt>:
   10c34:	add	ip, pc, #0, 12
   10c38:	add	ip, ip, #20, 20	; 0x14000
   10c3c:	ldr	pc, [ip, #1028]!	; 0x404

00010c40 <textdomain@plt>:
   10c40:	add	ip, pc, #0, 12
   10c44:	add	ip, ip, #20, 20	; 0x14000
   10c48:	ldr	pc, [ip, #1020]!	; 0x3fc

00010c4c <iswprint@plt>:
   10c4c:	add	ip, pc, #0, 12
   10c50:	add	ip, ip, #20, 20	; 0x14000
   10c54:	ldr	pc, [ip, #1012]!	; 0x3f4

00010c58 <lseek64@plt>:
   10c58:	add	ip, pc, #0, 12
   10c5c:	add	ip, ip, #20, 20	; 0x14000
   10c60:	ldr	pc, [ip, #1004]!	; 0x3ec

00010c64 <__ctype_get_mb_cur_max@plt>:
   10c64:	add	ip, pc, #0, 12
   10c68:	add	ip, ip, #20, 20	; 0x14000
   10c6c:	ldr	pc, [ip, #996]!	; 0x3e4

00010c70 <__fpending@plt>:
   10c70:	add	ip, pc, #0, 12
   10c74:	add	ip, ip, #20, 20	; 0x14000
   10c78:	ldr	pc, [ip, #988]!	; 0x3dc

00010c7c <ferror_unlocked@plt>:
   10c7c:	add	ip, pc, #0, 12
   10c80:	add	ip, ip, #20, 20	; 0x14000
   10c84:	ldr	pc, [ip, #980]!	; 0x3d4

00010c88 <mbrtowc@plt>:
   10c88:	add	ip, pc, #0, 12
   10c8c:	add	ip, ip, #20, 20	; 0x14000
   10c90:	ldr	pc, [ip, #972]!	; 0x3cc

00010c94 <error@plt>:
   10c94:	add	ip, pc, #0, 12
   10c98:	add	ip, ip, #20, 20	; 0x14000
   10c9c:	ldr	pc, [ip, #964]!	; 0x3c4

00010ca0 <malloc@plt>:
   10ca0:	add	ip, pc, #0, 12
   10ca4:	add	ip, ip, #20, 20	; 0x14000
   10ca8:	ldr	pc, [ip, #956]!	; 0x3bc

00010cac <__libc_start_main@plt>:
   10cac:	add	ip, pc, #0, 12
   10cb0:	add	ip, ip, #20, 20	; 0x14000
   10cb4:	ldr	pc, [ip, #948]!	; 0x3b4

00010cb8 <__freading@plt>:
   10cb8:	add	ip, pc, #0, 12
   10cbc:	add	ip, ip, #20, 20	; 0x14000
   10cc0:	ldr	pc, [ip, #940]!	; 0x3ac

00010cc4 <__gmon_start__@plt>:
   10cc4:	add	ip, pc, #0, 12
   10cc8:	add	ip, ip, #20, 20	; 0x14000
   10ccc:	ldr	pc, [ip, #932]!	; 0x3a4

00010cd0 <getopt_long@plt>:
   10cd0:	add	ip, pc, #0, 12
   10cd4:	add	ip, ip, #20, 20	; 0x14000
   10cd8:	ldr	pc, [ip, #924]!	; 0x39c

00010cdc <__ctype_b_loc@plt>:
   10cdc:	add	ip, pc, #0, 12
   10ce0:	add	ip, ip, #20, 20	; 0x14000
   10ce4:	ldr	pc, [ip, #916]!	; 0x394

00010ce8 <exit@plt>:
   10ce8:	add	ip, pc, #0, 12
   10cec:	add	ip, ip, #20, 20	; 0x14000
   10cf0:	ldr	pc, [ip, #908]!	; 0x38c

00010cf4 <strlen@plt>:
   10cf4:	add	ip, pc, #0, 12
   10cf8:	add	ip, ip, #20, 20	; 0x14000
   10cfc:	ldr	pc, [ip, #900]!	; 0x384

00010d00 <strchr@plt>:
   10d00:	add	ip, pc, #0, 12
   10d04:	add	ip, ip, #20, 20	; 0x14000
   10d08:	ldr	pc, [ip, #892]!	; 0x37c

00010d0c <__errno_location@plt>:
   10d0c:	add	ip, pc, #0, 12
   10d10:	add	ip, ip, #20, 20	; 0x14000
   10d14:	ldr	pc, [ip, #884]!	; 0x374

00010d18 <__cxa_atexit@plt>:
   10d18:	add	ip, pc, #0, 12
   10d1c:	add	ip, ip, #20, 20	; 0x14000
   10d20:	ldr	pc, [ip, #876]!	; 0x36c

00010d24 <memset@plt>:
   10d24:	add	ip, pc, #0, 12
   10d28:	add	ip, ip, #20, 20	; 0x14000
   10d2c:	ldr	pc, [ip, #868]!	; 0x364

00010d30 <__printf_chk@plt>:
   10d30:	add	ip, pc, #0, 12
   10d34:	add	ip, ip, #20, 20	; 0x14000
   10d38:	ldr	pc, [ip, #860]!	; 0x35c

00010d3c <fileno@plt>:
   10d3c:	add	ip, pc, #0, 12
   10d40:	add	ip, ip, #20, 20	; 0x14000
   10d44:	ldr	pc, [ip, #852]!	; 0x354

00010d48 <__fprintf_chk@plt>:
   10d48:	add	ip, pc, #0, 12
   10d4c:	add	ip, ip, #20, 20	; 0x14000
   10d50:	ldr	pc, [ip, #844]!	; 0x34c

00010d54 <fclose@plt>:
   10d54:	add	ip, pc, #0, 12
   10d58:	add	ip, ip, #20, 20	; 0x14000
   10d5c:	ldr	pc, [ip, #836]!	; 0x344

00010d60 <fseeko64@plt>:
   10d60:	add	ip, pc, #0, 12
   10d64:	add	ip, ip, #20, 20	; 0x14000
   10d68:	ldr	pc, [ip, #828]!	; 0x33c

00010d6c <setlocale@plt>:
   10d6c:	add	ip, pc, #0, 12
   10d70:	add	ip, ip, #20, 20	; 0x14000
   10d74:	ldr	pc, [ip, #820]!	; 0x334

00010d78 <strrchr@plt>:
   10d78:	add	ip, pc, #0, 12
   10d7c:	add	ip, ip, #20, 20	; 0x14000
   10d80:	ldr	pc, [ip, #812]!	; 0x32c

00010d84 <nl_langinfo@plt>:
   10d84:	add	ip, pc, #0, 12
   10d88:	add	ip, ip, #20, 20	; 0x14000
   10d8c:	ldr	pc, [ip, #804]!	; 0x324

00010d90 <bindtextdomain@plt>:
   10d90:	add	ip, pc, #0, 12
   10d94:	add	ip, ip, #20, 20	; 0x14000
   10d98:	ldr	pc, [ip, #796]!	; 0x31c

00010d9c <fputs@plt>:
   10d9c:	add	ip, pc, #0, 12
   10da0:	add	ip, ip, #20, 20	; 0x14000
   10da4:	ldr	pc, [ip, #788]!	; 0x314

00010da8 <strncmp@plt>:
   10da8:	add	ip, pc, #0, 12
   10dac:	add	ip, ip, #20, 20	; 0x14000
   10db0:	ldr	pc, [ip, #780]!	; 0x30c

00010db4 <abort@plt>:
   10db4:	add	ip, pc, #0, 12
   10db8:	add	ip, ip, #20, 20	; 0x14000
   10dbc:	ldr	pc, [ip, #772]!	; 0x304

00010dc0 <__lxstat64@plt>:
   10dc0:	add	ip, pc, #0, 12
   10dc4:	add	ip, ip, #20, 20	; 0x14000
   10dc8:	ldr	pc, [ip, #764]!	; 0x2fc

00010dcc <strspn@plt>:
   10dcc:	add	ip, pc, #0, 12
   10dd0:	add	ip, ip, #20, 20	; 0x14000
   10dd4:	ldr	pc, [ip, #756]!	; 0x2f4

Disassembly of section .text:

00010dd8 <.text>:
   10dd8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10ddc:	sub	sp, sp, #156	; 0x9c
   10de0:	mov	r8, #0
   10de4:	str	r0, [sp, #28]
   10de8:	ldr	r0, [r1]
   10dec:	str	r1, [sp, #32]
   10df0:	bl	118e8 <strspn@plt+0xb1c>
   10df4:	ldr	r1, [pc, #1480]	; 113c4 <strspn@plt+0x5f8>
   10df8:	mov	r0, #6
   10dfc:	bl	10d6c <setlocale@plt>
   10e00:	ldr	r1, [pc, #1472]	; 113c8 <strspn@plt+0x5fc>
   10e04:	ldr	r0, [pc, #1472]	; 113cc <strspn@plt+0x600>
   10e08:	bl	10d90 <bindtextdomain@plt>
   10e0c:	mov	r5, r8
   10e10:	ldr	r0, [pc, #1460]	; 113cc <strspn@plt+0x600>
   10e14:	mov	r4, #1
   10e18:	bl	10c40 <textdomain@plt>
   10e1c:	ldr	r0, [pc, #1452]	; 113d0 <strspn@plt+0x604>
   10e20:	bl	14258 <strspn@plt+0x348c>
   10e24:	str	r8, [sp, #20]
   10e28:	str	r5, [sp]
   10e2c:	ldr	r3, [pc, #1440]	; 113d4 <strspn@plt+0x608>
   10e30:	ldr	r2, [pc, #1440]	; 113d8 <strspn@plt+0x60c>
   10e34:	ldr	r1, [sp, #32]
   10e38:	ldr	r0, [sp, #28]
   10e3c:	bl	10cd0 <getopt_long@plt>
   10e40:	cmn	r0, #1
   10e44:	bne	10e98 <strspn@plt+0xcc>
   10e48:	ldr	r3, [pc, #1420]	; 113dc <strspn@plt+0x610>
   10e4c:	ldr	r1, [sp, #28]
   10e50:	ldr	r2, [r3]
   10e54:	cmp	r1, r2
   10e58:	beq	10f24 <strspn@plt+0x158>
   10e5c:	str	r3, [sp, #36]	; 0x24
   10e60:	ldr	r3, [sp, #20]
   10e64:	mov	r2, #1
   10e68:	orr	r3, r3, r8
   10e6c:	str	r2, [sp, #24]
   10e70:	str	r3, [sp, #40]	; 0x28
   10e74:	ldr	r3, [sp, #36]	; 0x24
   10e78:	ldr	r2, [sp, #28]
   10e7c:	ldr	r3, [r3]
   10e80:	cmp	r2, r3
   10e84:	bgt	10f48 <strspn@plt+0x17c>
   10e88:	ldr	r3, [sp, #24]
   10e8c:	eor	r0, r3, #1
   10e90:	add	sp, sp, #156	; 0x9c
   10e94:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10e98:	cmp	r0, #80	; 0x50
   10e9c:	beq	10f1c <strspn@plt+0x150>
   10ea0:	bgt	10ec0 <strspn@plt+0xf4>
   10ea4:	cmn	r0, #3
   10ea8:	beq	10edc <strspn@plt+0x110>
   10eac:	cmn	r0, #2
   10eb0:	moveq	r0, #0
   10eb4:	beq	10ebc <strspn@plt+0xf0>
   10eb8:	mov	r0, #1
   10ebc:	bl	11550 <strspn@plt+0x784>
   10ec0:	cmp	r0, #112	; 0x70
   10ec4:	beq	10ed4 <strspn@plt+0x108>
   10ec8:	cmp	r0, #256	; 0x100
   10ecc:	bne	10eb8 <strspn@plt+0xec>
   10ed0:	mov	r8, r4
   10ed4:	str	r4, [sp, #20]
   10ed8:	b	10e28 <strspn@plt+0x5c>
   10edc:	ldr	r3, [pc, #1276]	; 113e0 <strspn@plt+0x614>
   10ee0:	ldr	r0, [pc, #1276]	; 113e4 <strspn@plt+0x618>
   10ee4:	str	r3, [sp, #8]
   10ee8:	ldr	r3, [pc, #1272]	; 113e8 <strspn@plt+0x61c>
   10eec:	str	r5, [sp, #12]
   10ef0:	str	r3, [sp, #4]
   10ef4:	ldr	r3, [pc, #1264]	; 113ec <strspn@plt+0x620>
   10ef8:	ldr	r2, [pc, #1264]	; 113f0 <strspn@plt+0x624>
   10efc:	str	r3, [sp]
   10f00:	ldr	r3, [pc, #1260]	; 113f4 <strspn@plt+0x628>
   10f04:	ldr	r0, [r0]
   10f08:	ldr	r1, [pc, #1256]	; 113f8 <strspn@plt+0x62c>
   10f0c:	ldr	r3, [r3]
   10f10:	bl	13368 <strspn@plt+0x259c>
   10f14:	mov	r0, #0
   10f18:	bl	10ce8 <exit@plt>
   10f1c:	mov	r8, r4
   10f20:	b	10e28 <strspn@plt+0x5c>
   10f24:	mov	r2, #5
   10f28:	ldr	r1, [pc, #1228]	; 113fc <strspn@plt+0x630>
   10f2c:	mov	r0, #0
   10f30:	bl	10c28 <dcgettext@plt>
   10f34:	mov	r1, #0
   10f38:	mov	r2, r0
   10f3c:	mov	r0, r1
   10f40:	bl	10c94 <error@plt>
   10f44:	b	10eb8 <strspn@plt+0xec>
   10f48:	ldr	r2, [sp, #32]
   10f4c:	ldr	r5, [r2, r3, lsl #2]
   10f50:	mov	r0, r5
   10f54:	bl	10cf4 <strlen@plt>
   10f58:	cmp	r8, #0
   10f5c:	movne	r6, #45	; 0x2d
   10f60:	mov	r4, r0
   10f64:	movne	r0, r5
   10f68:	bne	10fc8 <strspn@plt+0x1fc>
   10f6c:	ldr	r3, [sp, #40]	; 0x28
   10f70:	cmp	r3, #0
   10f74:	beq	110d0 <strspn@plt+0x304>
   10f78:	cmp	r4, #0
   10f7c:	bne	11024 <strspn@plt+0x258>
   10f80:	mov	r2, #5
   10f84:	ldr	r1, [pc, #1140]	; 11400 <strspn@plt+0x634>
   10f88:	mov	r0, r4
   10f8c:	bl	10c28 <dcgettext@plt>
   10f90:	mov	r1, r4
   10f94:	mov	r2, r0
   10f98:	mov	r0, r4
   10f9c:	bl	10c94 <error@plt>
   10fa0:	ldr	r3, [sp, #24]
   10fa4:	ldr	r2, [sp, #36]	; 0x24
   10fa8:	and	r3, r3, r4
   10fac:	str	r3, [sp, #24]
   10fb0:	ldr	r3, [sp, #36]	; 0x24
   10fb4:	ldr	r3, [r3]
   10fb8:	add	r3, r3, #1
   10fbc:	str	r3, [r2]
   10fc0:	b	10e74 <strspn@plt+0xa8>
   10fc4:	add	r0, r0, #1
   10fc8:	mov	r1, r6
   10fcc:	bl	10d00 <strchr@plt>
   10fd0:	cmp	r0, #0
   10fd4:	beq	10f6c <strspn@plt+0x1a0>
   10fd8:	cmp	r5, r0
   10fdc:	beq	10fec <strspn@plt+0x220>
   10fe0:	ldrb	r3, [r0, #-1]
   10fe4:	cmp	r3, #47	; 0x2f
   10fe8:	bne	10fc4 <strspn@plt+0x1f8>
   10fec:	mov	r2, #5
   10ff0:	ldr	r1, [pc, #1036]	; 11404 <strspn@plt+0x638>
   10ff4:	mov	r0, #0
   10ff8:	bl	10c28 <dcgettext@plt>
   10ffc:	mov	r1, r5
   11000:	mov	r4, r0
   11004:	mov	r0, #4
   11008:	bl	12d34 <strspn@plt+0x1f68>
   1100c:	mov	r2, r4
   11010:	mov	r1, #0
   11014:	mov	r3, r0
   11018:	mov	r0, #0
   1101c:	bl	10c94 <error@plt>
   11020:	b	110c8 <strspn@plt+0x2fc>
   11024:	ldr	r3, [sp, #20]
   11028:	cmp	r3, #0
   1102c:	beq	110d0 <strspn@plt+0x304>
   11030:	ldr	r1, [pc, #976]	; 11408 <strspn@plt+0x63c>
   11034:	mov	r0, r5
   11038:	bl	10dcc <strspn@plt>
   1103c:	ldrb	r3, [r5, r0]
   11040:	add	r7, r5, r0
   11044:	cmp	r3, #0
   11048:	beq	113b4 <strspn@plt+0x5e8>
   1104c:	mov	r6, #0
   11050:	sub	r1, r4, r0
   11054:	add	r2, sp, #48	; 0x30
   11058:	mov	r0, r7
   1105c:	str	r6, [sp, #48]	; 0x30
   11060:	str	r6, [sp, #52]	; 0x34
   11064:	bl	11878 <strspn@plt+0xaac>
   11068:	mov	r2, #5
   1106c:	ldr	r1, [pc, #920]	; 1140c <strspn@plt+0x640>
   11070:	mov	r9, r0
   11074:	mov	r0, r6
   11078:	bl	10c28 <dcgettext@plt>
   1107c:	cmp	r9, #16
   11080:	movls	r3, r9
   11084:	movhi	r3, #1
   11088:	mov	r2, r7
   1108c:	mov	r1, #8
   11090:	mov	r4, r0
   11094:	mov	r0, #1
   11098:	bl	12cfc <strspn@plt+0x1f30>
   1109c:	mov	r2, r5
   110a0:	mov	r1, #4
   110a4:	mov	r7, r0
   110a8:	mov	r0, r6
   110ac:	bl	12cc8 <strspn@plt+0x1efc>
   110b0:	mov	r3, r7
   110b4:	mov	r2, r4
   110b8:	mov	r1, r6
   110bc:	str	r0, [sp]
   110c0:	mov	r0, r6
   110c4:	bl	10c94 <error@plt>
   110c8:	mov	r4, #0
   110cc:	b	10fa0 <strspn@plt+0x1d4>
   110d0:	add	r1, sp, #48	; 0x30
   110d4:	mov	r0, r5
   110d8:	bl	14270 <strspn@plt+0x34a4>
   110dc:	cmp	r0, #0
   110e0:	beq	11124 <strspn@plt+0x358>
   110e4:	bl	10d0c <__errno_location@plt>
   110e8:	ldr	r6, [r0]
   110ec:	subs	r3, r6, #2
   110f0:	movne	r3, #1
   110f4:	cmp	r4, #0
   110f8:	orreq	r3, r3, #1
   110fc:	cmp	r3, #0
   11100:	beq	11128 <strspn@plt+0x35c>
   11104:	mov	r2, r5
   11108:	mov	r1, #3
   1110c:	mov	r0, #0
   11110:	bl	12dd8 <strspn@plt+0x200c>
   11114:	ldr	r2, [pc, #756]	; 11410 <strspn@plt+0x644>
   11118:	mov	r1, r6
   1111c:	mov	r3, r0
   11120:	b	11018 <strspn@plt+0x24c>
   11124:	mov	r3, #1
   11128:	eor	r2, r3, #1
   1112c:	cmp	r4, #255	; 0xff
   11130:	movls	r2, #0
   11134:	andhi	r2, r2, #1
   11138:	cmp	r2, #0
   1113c:	beq	111f4 <strspn@plt+0x428>
   11140:	ldrb	r2, [r5]
   11144:	ldr	r3, [pc, #712]	; 11414 <strspn@plt+0x648>
   11148:	ldr	r7, [pc, #712]	; 11418 <strspn@plt+0x64c>
   1114c:	cmp	r2, #47	; 0x2f
   11150:	movne	r7, r3
   11154:	bl	10d0c <__errno_location@plt>
   11158:	mov	r6, #0
   1115c:	mov	r1, #4
   11160:	str	r6, [r0]
   11164:	mov	r9, r0
   11168:	mov	r0, r7
   1116c:	bl	10bc8 <pathconf@plt>
   11170:	cmp	r0, #0
   11174:	bge	111a4 <strspn@plt+0x3d8>
   11178:	ldr	r9, [r9]
   1117c:	cmp	r9, r6
   11180:	beq	111a4 <strspn@plt+0x3d8>
   11184:	mov	r2, #5
   11188:	ldr	r1, [pc, #652]	; 1141c <strspn@plt+0x650>
   1118c:	mov	r0, r6
   11190:	bl	10c28 <dcgettext@plt>
   11194:	mov	r3, r7
   11198:	mov	r1, r9
   1119c:	mov	r2, r0
   111a0:	b	11018 <strspn@plt+0x24c>
   111a4:	cmp	r4, r0
   111a8:	mov	r6, r0
   111ac:	movcc	r3, #0
   111b0:	bcc	111f4 <strspn@plt+0x428>
   111b4:	mov	r2, #5
   111b8:	ldr	r1, [pc, #608]	; 11420 <strspn@plt+0x654>
   111bc:	mov	r0, #0
   111c0:	bl	10c28 <dcgettext@plt>
   111c4:	mov	r1, r5
   111c8:	mov	r7, r0
   111cc:	mov	r0, #4
   111d0:	bl	12d34 <strspn@plt+0x1f68>
   111d4:	mov	r1, #0
   111d8:	str	r4, [sp]
   111dc:	sub	r3, r6, #1
   111e0:	mov	r2, r7
   111e4:	str	r0, [sp, #4]
   111e8:	mov	r0, r1
   111ec:	bl	10c94 <error@plt>
   111f0:	b	110c8 <strspn@plt+0x2fc>
   111f4:	ldr	r2, [sp, #20]
   111f8:	orrs	r3, r2, r3
   111fc:	moveq	r3, r5
   11200:	beq	11348 <strspn@plt+0x57c>
   11204:	ldr	r3, [sp, #20]
   11208:	cmp	r3, #0
   1120c:	beq	11360 <strspn@plt+0x594>
   11210:	mov	r6, #14
   11214:	mov	r1, r5
   11218:	mov	r9, #14
   1121c:	mov	r2, #0
   11220:	mov	r7, r1
   11224:	mov	r3, r7
   11228:	ldrb	r4, [r3], #1
   1122c:	cmp	r4, #47	; 0x2f
   11230:	beq	113ac <strspn@plt+0x5e0>
   11234:	cmp	r4, #0
   11238:	beq	11360 <strspn@plt+0x594>
   1123c:	cmp	r6, #0
   11240:	bne	1139c <strspn@plt+0x5d0>
   11244:	cmp	r5, r7
   11248:	str	r2, [sp, #44]	; 0x2c
   1124c:	ldr	sl, [pc, #448]	; 11414 <strspn@plt+0x648>
   11250:	movne	sl, r5
   11254:	bl	10d0c <__errno_location@plt>
   11258:	ldr	r2, [sp, #44]	; 0x2c
   1125c:	mov	r1, #3
   11260:	str	r2, [r0]
   11264:	mov	fp, r0
   11268:	strb	r2, [r7]
   1126c:	mov	r0, sl
   11270:	bl	10bc8 <pathconf@plt>
   11274:	strb	r4, [r7]
   11278:	ldr	r2, [sp, #44]	; 0x2c
   1127c:	cmp	r0, #0
   11280:	movge	r9, r0
   11284:	bge	112a0 <strspn@plt+0x4d4>
   11288:	ldr	r3, [fp]
   1128c:	cmp	r3, #0
   11290:	beq	113a4 <strspn@plt+0x5d8>
   11294:	cmp	r3, #2
   11298:	bne	11368 <strspn@plt+0x59c>
   1129c:	mov	r6, r9
   112a0:	add	r1, r7, #1
   112a4:	sub	r3, r1, r7
   112a8:	mov	fp, r1
   112ac:	ldrb	sl, [r1], #1
   112b0:	cmp	sl, #47	; 0x2f
   112b4:	cmpne	sl, #0
   112b8:	movne	r4, #1
   112bc:	moveq	r4, #0
   112c0:	bne	112a4 <strspn@plt+0x4d8>
   112c4:	cmp	r3, r9
   112c8:	mov	r1, fp
   112cc:	bls	11220 <strspn@plt+0x454>
   112d0:	mov	r2, #5
   112d4:	ldr	r1, [pc, #328]	; 11424 <strspn@plt+0x658>
   112d8:	strb	r4, [fp]
   112dc:	mov	r0, r4
   112e0:	str	r3, [sp, #44]	; 0x2c
   112e4:	bl	10c28 <dcgettext@plt>
   112e8:	mov	r5, r0
   112ec:	mov	r0, r7
   112f0:	bl	12f18 <strspn@plt+0x214c>
   112f4:	ldr	r3, [sp, #44]	; 0x2c
   112f8:	mov	r2, r5
   112fc:	str	r3, [sp]
   11300:	mov	r1, r4
   11304:	mov	r3, r9
   11308:	str	r0, [sp, #4]
   1130c:	mov	r0, r4
   11310:	bl	10c94 <error@plt>
   11314:	strb	sl, [fp]
   11318:	b	10fa0 <strspn@plt+0x1d4>
   1131c:	sub	r1, r3, r2
   11320:	mov	r0, r3
   11324:	ldrb	r6, [r3], #1
   11328:	cmp	r6, #47	; 0x2f
   1132c:	cmpne	r6, #0
   11330:	movne	r6, #1
   11334:	moveq	r6, #0
   11338:	bne	1131c <strspn@plt+0x550>
   1133c:	cmp	r1, #14
   11340:	mov	r3, r0
   11344:	bhi	11214 <strspn@plt+0x448>
   11348:	mov	r2, r3
   1134c:	ldrb	r1, [r3], #1
   11350:	cmp	r1, #47	; 0x2f
   11354:	beq	11348 <strspn@plt+0x57c>
   11358:	cmp	r1, #0
   1135c:	bne	1131c <strspn@plt+0x550>
   11360:	mov	r4, #1
   11364:	b	10fa0 <strspn@plt+0x1d4>
   11368:	strb	r2, [r7]
   1136c:	mov	r1, #3
   11370:	mov	r2, sl
   11374:	mov	r0, r6
   11378:	ldr	r5, [fp]
   1137c:	bl	12dd8 <strspn@plt+0x200c>
   11380:	ldr	r2, [pc, #136]	; 11410 <strspn@plt+0x644>
   11384:	mov	r1, r5
   11388:	mov	r3, r0
   1138c:	mov	r0, r6
   11390:	bl	10c94 <error@plt>
   11394:	strb	r4, [r7]
   11398:	b	110c8 <strspn@plt+0x2fc>
   1139c:	mov	r9, r6
   113a0:	b	112a0 <strspn@plt+0x4d4>
   113a4:	mvn	r9, #0
   113a8:	b	112a0 <strspn@plt+0x4d4>
   113ac:	mov	r7, r3
   113b0:	b	11224 <strspn@plt+0x458>
   113b4:	cmp	r4, #255	; 0xff
   113b8:	bls	11210 <strspn@plt+0x444>
   113bc:	mov	r6, #256	; 0x100
   113c0:	b	111b4 <strspn@plt+0x3e8>
   113c4:	andeq	r4, r1, lr, ror r5
   113c8:	andeq	r4, r1, r1, lsl #11
   113cc:	ldrdeq	r4, [r1], -ip
   113d0:	muleq	r1, r4, r7
   113d4:	andeq	r4, r1, r4, asr #5
   113d8:	andeq	r4, r1, r2, asr #11
   113dc:	andeq	r5, r2, r8, lsr #2
   113e0:	muleq	r1, r9, r5
   113e4:	andeq	r5, r2, r4, lsr r1
   113e8:	andeq	r4, r1, r6, lsr #11
   113ec:			; <UNDEFINED> instruction: 0x000145b6
   113f0:	ldrdeq	r4, [r1], -r8
   113f4:	ldrdeq	r5, [r2], -r8
   113f8:	andeq	r4, r1, r4, lsl #6
   113fc:	andeq	r4, r1, r6, asr #11
   11400:	andeq	r4, r1, r1, lsl #12
   11404:	ldrdeq	r4, [r1], -r6
   11408:	andeq	r4, r1, r1, lsl r6
   1140c:	andeq	r4, r1, r4, asr r6
   11410:			; <UNDEFINED> instruction: 0x000147b1
   11414:	andeq	r4, r1, pc, ror r5
   11418:	andeq	r4, r1, lr, lsl #23
   1141c:	andeq	r4, r1, sp, ror r6
   11420:	andeq	r4, r1, lr, lsr #13
   11424:	ldrdeq	r4, [r1], -pc	; <UNPREDICTABLE>
   11428:	mov	fp, #0
   1142c:	mov	lr, #0
   11430:	pop	{r1}		; (ldr r1, [sp], #4)
   11434:	mov	r2, sp
   11438:	push	{r2}		; (str r2, [sp, #-4]!)
   1143c:	push	{r0}		; (str r0, [sp, #-4]!)
   11440:	ldr	ip, [pc, #16]	; 11458 <strspn@plt+0x68c>
   11444:	push	{ip}		; (str ip, [sp, #-4]!)
   11448:	ldr	r0, [pc, #12]	; 1145c <strspn@plt+0x690>
   1144c:	ldr	r3, [pc, #12]	; 11460 <strspn@plt+0x694>
   11450:	bl	10cac <__libc_start_main@plt>
   11454:	bl	10db4 <abort@plt>
   11458:	andeq	r4, r1, r4, asr r2
   1145c:	ldrdeq	r0, [r1], -r8
   11460:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   11464:	ldr	r3, [pc, #20]	; 11480 <strspn@plt+0x6b4>
   11468:	ldr	r2, [pc, #20]	; 11484 <strspn@plt+0x6b8>
   1146c:	add	r3, pc, r3
   11470:	ldr	r2, [r3, r2]
   11474:	cmp	r2, #0
   11478:	bxeq	lr
   1147c:	b	10cc4 <__gmon_start__@plt>
   11480:	andeq	r3, r1, ip, lsl #23
   11484:	andeq	r0, r0, ip, asr #1
   11488:	ldr	r3, [pc, #28]	; 114ac <strspn@plt+0x6e0>
   1148c:	ldr	r0, [pc, #28]	; 114b0 <strspn@plt+0x6e4>
   11490:	sub	r3, r3, r0
   11494:	cmp	r3, #6
   11498:	bxls	lr
   1149c:	ldr	r3, [pc, #16]	; 114b4 <strspn@plt+0x6e8>
   114a0:	cmp	r3, #0
   114a4:	bxeq	lr
   114a8:	bx	r3
   114ac:	andeq	r5, r2, r3, lsr #2
   114b0:	andeq	r5, r2, r0, lsr #2
   114b4:	andeq	r0, r0, r0
   114b8:	ldr	r1, [pc, #36]	; 114e4 <strspn@plt+0x718>
   114bc:	ldr	r0, [pc, #36]	; 114e8 <strspn@plt+0x71c>
   114c0:	sub	r1, r1, r0
   114c4:	asr	r1, r1, #2
   114c8:	add	r1, r1, r1, lsr #31
   114cc:	asrs	r1, r1, #1
   114d0:	bxeq	lr
   114d4:	ldr	r3, [pc, #16]	; 114ec <strspn@plt+0x720>
   114d8:	cmp	r3, #0
   114dc:	bxeq	lr
   114e0:	bx	r3
   114e4:	andeq	r5, r2, r0, lsr #2
   114e8:	andeq	r5, r2, r0, lsr #2
   114ec:	andeq	r0, r0, r0
   114f0:	push	{r4, lr}
   114f4:	ldr	r4, [pc, #24]	; 11514 <strspn@plt+0x748>
   114f8:	ldrb	r3, [r4]
   114fc:	cmp	r3, #0
   11500:	popne	{r4, pc}
   11504:	bl	11488 <strspn@plt+0x6bc>
   11508:	mov	r3, #1
   1150c:	strb	r3, [r4]
   11510:	pop	{r4, pc}
   11514:	andeq	r5, r2, r8, lsr r1
   11518:	ldr	r0, [pc, #40]	; 11548 <strspn@plt+0x77c>
   1151c:	ldr	r3, [r0]
   11520:	cmp	r3, #0
   11524:	bne	1152c <strspn@plt+0x760>
   11528:	b	114b8 <strspn@plt+0x6ec>
   1152c:	ldr	r3, [pc, #24]	; 1154c <strspn@plt+0x780>
   11530:	cmp	r3, #0
   11534:	beq	11528 <strspn@plt+0x75c>
   11538:	push	{r4, lr}
   1153c:	blx	r3
   11540:	pop	{r4, lr}
   11544:	b	114b8 <strspn@plt+0x6ec>
   11548:	andeq	r4, r2, r4, lsl pc
   1154c:	andeq	r0, r0, r0
   11550:	subs	r5, r0, #0
   11554:	push	{r7, lr}
   11558:	sub	sp, sp, #56	; 0x38
   1155c:	ldr	r4, [pc, #452]	; 11728 <strspn@plt+0x95c>
   11560:	beq	11598 <strspn@plt+0x7cc>
   11564:	ldr	r3, [pc, #448]	; 1172c <strspn@plt+0x960>
   11568:	mov	r2, #5
   1156c:	ldr	r1, [pc, #444]	; 11730 <strspn@plt+0x964>
   11570:	mov	r0, #0
   11574:	ldr	r6, [r3]
   11578:	bl	10c28 <dcgettext@plt>
   1157c:	ldr	r3, [r4]
   11580:	mov	r1, #1
   11584:	mov	r2, r0
   11588:	mov	r0, r6
   1158c:	bl	10d48 <__fprintf_chk@plt>
   11590:	mov	r0, r5
   11594:	bl	10ce8 <exit@plt>
   11598:	mov	r2, #5
   1159c:	ldr	r1, [pc, #400]	; 11734 <strspn@plt+0x968>
   115a0:	bl	10c28 <dcgettext@plt>
   115a4:	ldr	r2, [r4]
   115a8:	ldr	r4, [pc, #392]	; 11738 <strspn@plt+0x96c>
   115ac:	ldr	r8, [pc, #392]	; 1173c <strspn@plt+0x970>
   115b0:	mov	r6, r5
   115b4:	mov	r1, r0
   115b8:	mov	r0, #1
   115bc:	bl	10d30 <__printf_chk@plt>
   115c0:	mov	r2, #5
   115c4:	ldr	r1, [pc, #372]	; 11740 <strspn@plt+0x974>
   115c8:	mov	r0, r5
   115cc:	bl	10c28 <dcgettext@plt>
   115d0:	ldr	r1, [r4]
   115d4:	bl	10ba4 <fputs_unlocked@plt>
   115d8:	mov	r2, #5
   115dc:	ldr	r1, [pc, #352]	; 11744 <strspn@plt+0x978>
   115e0:	mov	r0, r5
   115e4:	bl	10c28 <dcgettext@plt>
   115e8:	ldr	r1, [r4]
   115ec:	bl	10ba4 <fputs_unlocked@plt>
   115f0:	mov	r2, #5
   115f4:	ldr	r1, [pc, #332]	; 11748 <strspn@plt+0x97c>
   115f8:	mov	r0, r5
   115fc:	bl	10c28 <dcgettext@plt>
   11600:	ldr	r1, [r4]
   11604:	bl	10ba4 <fputs_unlocked@plt>
   11608:	ldr	lr, [pc, #316]	; 1174c <strspn@plt+0x980>
   1160c:	mov	ip, sp
   11610:	ldm	lr!, {r0, r1, r2, r3}
   11614:	stmia	ip!, {r0, r1, r2, r3}
   11618:	ldm	lr!, {r0, r1, r2, r3}
   1161c:	stmia	ip!, {r0, r1, r2, r3}
   11620:	ldm	lr!, {r0, r1, r2, r3}
   11624:	stmia	ip!, {r0, r1, r2, r3}
   11628:	ldm	lr, {r0, r1}
   1162c:	stm	ip, {r0, r1}
   11630:	ldr	r1, [sp, r6]
   11634:	add	r7, sp, r6
   11638:	cmp	r1, #0
   1163c:	bne	116e0 <strspn@plt+0x914>
   11640:	ldr	r6, [r7, #4]
   11644:	ldr	r7, [pc, #240]	; 1173c <strspn@plt+0x970>
   11648:	cmp	r6, #0
   1164c:	mov	r2, #5
   11650:	ldr	r1, [pc, #248]	; 11750 <strspn@plt+0x984>
   11654:	mov	r0, #0
   11658:	moveq	r6, r7
   1165c:	bl	10c28 <dcgettext@plt>
   11660:	ldr	r3, [pc, #236]	; 11754 <strspn@plt+0x988>
   11664:	ldr	r2, [pc, #236]	; 11758 <strspn@plt+0x98c>
   11668:	mov	r1, r0
   1166c:	mov	r0, #1
   11670:	bl	10d30 <__printf_chk@plt>
   11674:	mov	r1, #0
   11678:	mov	r0, #5
   1167c:	bl	10d6c <setlocale@plt>
   11680:	cmp	r0, #0
   11684:	bne	116f8 <strspn@plt+0x92c>
   11688:	mov	r2, #5
   1168c:	ldr	r1, [pc, #200]	; 1175c <strspn@plt+0x990>
   11690:	mov	r0, #0
   11694:	bl	10c28 <dcgettext@plt>
   11698:	ldr	r3, [pc, #156]	; 1173c <strspn@plt+0x970>
   1169c:	ldr	r2, [pc, #176]	; 11754 <strspn@plt+0x988>
   116a0:	mov	r1, r0
   116a4:	mov	r0, #1
   116a8:	bl	10d30 <__printf_chk@plt>
   116ac:	mov	r2, #5
   116b0:	ldr	r1, [pc, #168]	; 11760 <strspn@plt+0x994>
   116b4:	mov	r0, #0
   116b8:	bl	10c28 <dcgettext@plt>
   116bc:	ldr	r2, [pc, #160]	; 11764 <strspn@plt+0x998>
   116c0:	cmp	r6, r7
   116c4:	ldr	r3, [pc, #156]	; 11768 <strspn@plt+0x99c>
   116c8:	moveq	r3, r2
   116cc:	mov	r2, r6
   116d0:	mov	r1, r0
   116d4:	mov	r0, #1
   116d8:	bl	10d30 <__printf_chk@plt>
   116dc:	b	11590 <strspn@plt+0x7c4>
   116e0:	mov	r0, r8
   116e4:	bl	10bbc <strcmp@plt>
   116e8:	add	r6, r6, #8
   116ec:	cmp	r0, #0
   116f0:	bne	11630 <strspn@plt+0x864>
   116f4:	b	11640 <strspn@plt+0x874>
   116f8:	mov	r2, #3
   116fc:	ldr	r1, [pc, #104]	; 1176c <strspn@plt+0x9a0>
   11700:	bl	10da8 <strncmp@plt>
   11704:	cmp	r0, #0
   11708:	beq	11688 <strspn@plt+0x8bc>
   1170c:	mov	r2, #5
   11710:	ldr	r1, [pc, #88]	; 11770 <strspn@plt+0x9a4>
   11714:	mov	r0, #0
   11718:	bl	10c28 <dcgettext@plt>
   1171c:	ldr	r1, [r4]
   11720:	bl	10ba4 <fputs_unlocked@plt>
   11724:	b	11688 <strspn@plt+0x8bc>
   11728:	andeq	r5, r2, ip, asr #2
   1172c:	andeq	r5, r2, r0, lsr r1
   11730:	andeq	r4, r1, ip, lsl #6
   11734:	andeq	r4, r1, r3, lsr r3
   11738:	andeq	r5, r2, r4, lsr r1
   1173c:	andeq	r4, r1, r4, lsl #6
   11740:	andeq	r4, r1, r2, asr r3
   11744:	andeq	r4, r1, r6, lsr r4
   11748:	andeq	r4, r1, r3, ror #8
   1174c:	andeq	r4, r1, ip, lsl #5
   11750:	muleq	r1, r9, r4
   11754:			; <UNDEFINED> instruction: 0x000144b0
   11758:	ldrdeq	r4, [r1], -r8
   1175c:	andeq	r4, r1, r1, lsr r5
   11760:	andeq	r4, r1, ip, asr #10
   11764:	andeq	r4, r1, r6, lsr r7
   11768:	andeq	r4, r1, lr, ror r5
   1176c:	andeq	r4, r1, r6, ror #9
   11770:	andeq	r4, r1, sl, ror #9
   11774:	ldr	r3, [pc, #4]	; 11780 <strspn@plt+0x9b4>
   11778:	str	r0, [r3]
   1177c:	bx	lr
   11780:	andeq	r5, r2, ip, lsr r1
   11784:	ldr	r3, [pc, #4]	; 11790 <strspn@plt+0x9c4>
   11788:	strb	r0, [r3, #4]
   1178c:	bx	lr
   11790:	andeq	r5, r2, ip, lsr r1
   11794:	ldr	r3, [pc, #192]	; 1185c <strspn@plt+0xa90>
   11798:	push	{r0, r1, r4, r5, r6, lr}
   1179c:	ldr	r0, [r3]
   117a0:	bl	139e8 <strspn@plt+0x2c1c>
   117a4:	cmp	r0, #0
   117a8:	beq	11840 <strspn@plt+0xa74>
   117ac:	ldr	r3, [pc, #172]	; 11860 <strspn@plt+0xa94>
   117b0:	mov	r4, r3
   117b4:	ldrb	r2, [r3, #4]
   117b8:	cmp	r2, #0
   117bc:	beq	117d0 <strspn@plt+0xa04>
   117c0:	bl	10d0c <__errno_location@plt>
   117c4:	ldr	r3, [r0]
   117c8:	cmp	r3, #32
   117cc:	beq	11840 <strspn@plt+0xa74>
   117d0:	mov	r2, #5
   117d4:	ldr	r1, [pc, #136]	; 11864 <strspn@plt+0xa98>
   117d8:	mov	r0, #0
   117dc:	bl	10c28 <dcgettext@plt>
   117e0:	ldr	r4, [r4]
   117e4:	cmp	r4, #0
   117e8:	mov	r5, r0
   117ec:	beq	11824 <strspn@plt+0xa58>
   117f0:	bl	10d0c <__errno_location@plt>
   117f4:	ldr	r6, [r0]
   117f8:	mov	r0, r4
   117fc:	bl	12dc8 <strspn@plt+0x1ffc>
   11800:	str	r5, [sp]
   11804:	ldr	r2, [pc, #92]	; 11868 <strspn@plt+0xa9c>
   11808:	mov	r1, r6
   1180c:	mov	r3, r0
   11810:	mov	r0, #0
   11814:	bl	10c94 <error@plt>
   11818:	ldr	r3, [pc, #76]	; 1186c <strspn@plt+0xaa0>
   1181c:	ldr	r0, [r3]
   11820:	bl	10bec <_exit@plt>
   11824:	bl	10d0c <__errno_location@plt>
   11828:	mov	r3, r5
   1182c:	ldr	r2, [pc, #60]	; 11870 <strspn@plt+0xaa4>
   11830:	ldr	r1, [r0]
   11834:	mov	r0, r4
   11838:	bl	10c94 <error@plt>
   1183c:	b	11818 <strspn@plt+0xa4c>
   11840:	ldr	r3, [pc, #44]	; 11874 <strspn@plt+0xaa8>
   11844:	ldr	r0, [r3]
   11848:	bl	139e8 <strspn@plt+0x2c1c>
   1184c:	cmp	r0, #0
   11850:	bne	11818 <strspn@plt+0xa4c>
   11854:	add	sp, sp, #8
   11858:	pop	{r4, r5, r6, pc}
   1185c:	andeq	r5, r2, r4, lsr r1
   11860:	andeq	r5, r2, ip, lsr r1
   11864:	andeq	r4, r1, r1, lsr #15
   11868:	andeq	r4, r1, sp, lsr #15
   1186c:	ldrdeq	r5, [r2], -ip
   11870:			; <UNDEFINED> instruction: 0x000147b1
   11874:	andeq	r5, r2, r0, lsr r1
   11878:	cmp	r2, #0
   1187c:	ldr	r3, [pc, #16]	; 11894 <strspn@plt+0xac8>
   11880:	movne	r3, r2
   11884:	mov	r2, r1
   11888:	mov	r1, r0
   1188c:	mov	r0, #0
   11890:	b	11898 <strspn@plt+0xacc>
   11894:	andeq	r5, r2, r4, asr #2
   11898:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   1189c:	subs	r5, r0, #0
   118a0:	addeq	r5, sp, #4
   118a4:	mov	r0, r5
   118a8:	mov	r7, r2
   118ac:	mov	r6, r1
   118b0:	bl	10c88 <mbrtowc@plt>
   118b4:	cmp	r7, #0
   118b8:	cmnne	r0, #3
   118bc:	mov	r4, r0
   118c0:	bls	118dc <strspn@plt+0xb10>
   118c4:	mov	r0, #0
   118c8:	bl	13c38 <strspn@plt+0x2e6c>
   118cc:	cmp	r0, #0
   118d0:	moveq	r4, #1
   118d4:	ldrbeq	r3, [r6]
   118d8:	streq	r3, [r5]
   118dc:	mov	r0, r4
   118e0:	add	sp, sp, #12
   118e4:	pop	{r4, r5, r6, r7, pc}
   118e8:	push	{r4, r5, r6, lr}
   118ec:	subs	r5, r0, #0
   118f0:	bne	11908 <strspn@plt+0xb3c>
   118f4:	ldr	r3, [pc, #124]	; 11978 <strspn@plt+0xbac>
   118f8:	ldr	r0, [pc, #124]	; 1197c <strspn@plt+0xbb0>
   118fc:	ldr	r1, [r3]
   11900:	bl	10d9c <fputs@plt>
   11904:	bl	10db4 <abort@plt>
   11908:	mov	r1, #47	; 0x2f
   1190c:	bl	10d78 <strrchr@plt>
   11910:	cmp	r0, #0
   11914:	addne	r4, r0, #1
   11918:	moveq	r4, r5
   1191c:	sub	r3, r4, r5
   11920:	cmp	r3, #6
   11924:	ble	11964 <strspn@plt+0xb98>
   11928:	mov	r2, #7
   1192c:	ldr	r1, [pc, #76]	; 11980 <strspn@plt+0xbb4>
   11930:	sub	r0, r4, #7
   11934:	bl	10da8 <strncmp@plt>
   11938:	cmp	r0, #0
   1193c:	bne	11964 <strspn@plt+0xb98>
   11940:	mov	r2, #3
   11944:	ldr	r1, [pc, #56]	; 11984 <strspn@plt+0xbb8>
   11948:	mov	r0, r4
   1194c:	bl	10da8 <strncmp@plt>
   11950:	cmp	r0, #0
   11954:	movne	r5, r4
   11958:	ldreq	r3, [pc, #40]	; 11988 <strspn@plt+0xbbc>
   1195c:	addeq	r5, r4, #3
   11960:	streq	r5, [r3]
   11964:	ldr	r3, [pc, #32]	; 1198c <strspn@plt+0xbc0>
   11968:	str	r5, [r3]
   1196c:	ldr	r3, [pc, #28]	; 11990 <strspn@plt+0xbc4>
   11970:	str	r5, [r3]
   11974:	pop	{r4, r5, r6, pc}
   11978:	andeq	r5, r2, r0, lsr r1
   1197c:			; <UNDEFINED> instruction: 0x000147b4
   11980:	andeq	r4, r1, ip, ror #15
   11984:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   11988:	andeq	r5, r2, r0, lsr #2
   1198c:	andeq	r5, r2, ip, asr #2
   11990:	andeq	r5, r2, r4, lsr #2
   11994:	push	{r4, r5, r6, lr}
   11998:	mov	r2, #48	; 0x30
   1199c:	mov	r5, r1
   119a0:	mov	r1, #0
   119a4:	mov	r4, r0
   119a8:	bl	10d24 <memset@plt>
   119ac:	cmp	r5, #10
   119b0:	bne	119b8 <strspn@plt+0xbec>
   119b4:	bl	10db4 <abort@plt>
   119b8:	str	r5, [r4]
   119bc:	mov	r0, r4
   119c0:	pop	{r4, r5, r6, pc}
   119c4:	push	{r4, r5, r6, lr}
   119c8:	mov	r4, r0
   119cc:	mov	r5, r1
   119d0:	bl	13c94 <strspn@plt+0x2ec8>
   119d4:	ldrb	r3, [r0]
   119d8:	bic	r3, r3, #32
   119dc:	cmp	r3, #85	; 0x55
   119e0:	bne	11a50 <strspn@plt+0xc84>
   119e4:	ldrb	r3, [r0, #1]
   119e8:	bic	r3, r3, #32
   119ec:	cmp	r3, #84	; 0x54
   119f0:	bne	11a28 <strspn@plt+0xc5c>
   119f4:	ldrb	r3, [r0, #2]
   119f8:	bic	r3, r3, #32
   119fc:	cmp	r3, #70	; 0x46
   11a00:	bne	11a28 <strspn@plt+0xc5c>
   11a04:	ldrb	r3, [r0, #3]
   11a08:	cmp	r3, #45	; 0x2d
   11a0c:	bne	11a28 <strspn@plt+0xc5c>
   11a10:	ldrb	r3, [r0, #4]
   11a14:	cmp	r3, #56	; 0x38
   11a18:	bne	11a28 <strspn@plt+0xc5c>
   11a1c:	ldrb	r3, [r0, #5]
   11a20:	cmp	r3, #0
   11a24:	beq	11a3c <strspn@plt+0xc70>
   11a28:	ldr	r1, [pc, #144]	; 11ac0 <strspn@plt+0xcf4>
   11a2c:	ldr	r0, [pc, #144]	; 11ac4 <strspn@plt+0xcf8>
   11a30:	cmp	r5, #9
   11a34:	movne	r0, r1
   11a38:	pop	{r4, r5, r6, pc}
   11a3c:	ldrb	r3, [r4]
   11a40:	ldr	r1, [pc, #128]	; 11ac8 <strspn@plt+0xcfc>
   11a44:	ldr	r0, [pc, #128]	; 11acc <strspn@plt+0xd00>
   11a48:	cmp	r3, #96	; 0x60
   11a4c:	b	11a34 <strspn@plt+0xc68>
   11a50:	cmp	r3, #71	; 0x47
   11a54:	bne	11a28 <strspn@plt+0xc5c>
   11a58:	ldrb	r3, [r0, #1]
   11a5c:	bic	r3, r3, #32
   11a60:	cmp	r3, #66	; 0x42
   11a64:	bne	11a28 <strspn@plt+0xc5c>
   11a68:	ldrb	r3, [r0, #2]
   11a6c:	cmp	r3, #49	; 0x31
   11a70:	bne	11a28 <strspn@plt+0xc5c>
   11a74:	ldrb	r3, [r0, #3]
   11a78:	cmp	r3, #56	; 0x38
   11a7c:	bne	11a28 <strspn@plt+0xc5c>
   11a80:	ldrb	r3, [r0, #4]
   11a84:	cmp	r3, #48	; 0x30
   11a88:	bne	11a28 <strspn@plt+0xc5c>
   11a8c:	ldrb	r3, [r0, #5]
   11a90:	cmp	r3, #51	; 0x33
   11a94:	bne	11a28 <strspn@plt+0xc5c>
   11a98:	ldrb	r3, [r0, #6]
   11a9c:	cmp	r3, #48	; 0x30
   11aa0:	bne	11a28 <strspn@plt+0xc5c>
   11aa4:	ldrb	r3, [r0, #7]
   11aa8:	cmp	r3, #0
   11aac:	bne	11a28 <strspn@plt+0xc5c>
   11ab0:	ldrb	r3, [r4]
   11ab4:	ldr	r1, [pc, #20]	; 11ad0 <strspn@plt+0xd04>
   11ab8:	ldr	r0, [pc, #20]	; 11ad4 <strspn@plt+0xd08>
   11abc:	b	11a48 <strspn@plt+0xc7c>
   11ac0:	andeq	r4, r1, sp, asr r8
   11ac4:	andeq	r4, r1, fp, asr r8
   11ac8:	andeq	r4, r1, r0, asr r8
   11acc:	andeq	r4, r1, ip, asr #16
   11ad0:	andeq	r4, r1, r8, asr r8
   11ad4:	andeq	r4, r1, r4, asr r8
   11ad8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11adc:	sub	sp, sp, #108	; 0x6c
   11ae0:	mov	r8, r0
   11ae4:	str	r3, [sp, #36]	; 0x24
   11ae8:	mov	r5, r1
   11aec:	str	r2, [sp, #44]	; 0x2c
   11af0:	ldr	sl, [sp, #144]	; 0x90
   11af4:	bl	10c64 <__ctype_get_mb_cur_max@plt>
   11af8:	ldr	r3, [sp, #148]	; 0x94
   11afc:	mov	r7, #0
   11b00:	str	r7, [sp, #48]	; 0x30
   11b04:	lsr	r6, r3, #1
   11b08:	and	r6, r6, #1
   11b0c:	mov	r3, #1
   11b10:	str	r3, [sp, #72]	; 0x48
   11b14:	str	r7, [sp, #24]
   11b18:	str	r7, [sp, #32]
   11b1c:	str	r7, [sp, #40]	; 0x28
   11b20:	str	r7, [sp, #60]	; 0x3c
   11b24:	str	r0, [sp, #76]	; 0x4c
   11b28:	cmp	sl, #10
   11b2c:	ldrls	pc, [pc, sl, lsl #2]
   11b30:	b	11d6c <strspn@plt+0xfa0>
   11b34:	andeq	r1, r1, r0, ror #22
   11b38:	strdeq	r2, [r1], -r4
   11b3c:	andeq	r1, r1, r8, lsr sp
   11b40:	andeq	r1, r1, r4, lsl #27
   11b44:	andeq	r1, r1, r4, lsl sp
   11b48:	andeq	r1, r1, ip, ror #22
   11b4c:	ldrdeq	r2, [r1], -r4
   11b50:	andeq	r1, r1, r0, ror sp
   11b54:	andeq	r1, r1, r4, ror #24
   11b58:	andeq	r1, r1, r4, ror #24
   11b5c:	andeq	r1, r1, r4, ror #24
   11b60:	mov	r6, #0
   11b64:	mov	r4, #0
   11b68:	b	11b98 <strspn@plt+0xdcc>
   11b6c:	cmp	r6, #0
   11b70:	bne	11d94 <strspn@plt+0xfc8>
   11b74:	cmp	r5, #0
   11b78:	movne	r3, #34	; 0x22
   11b7c:	strbne	r3, [r8]
   11b80:	mov	r3, #1
   11b84:	str	r3, [sp, #24]
   11b88:	str	r3, [sp, #32]
   11b8c:	mov	r4, #1
   11b90:	ldr	r3, [pc, #3172]	; 127fc <strspn@plt+0x1a30>
   11b94:	str	r3, [sp, #40]	; 0x28
   11b98:	mov	r9, r5
   11b9c:	mov	r3, #0
   11ba0:	str	r7, [sp, #68]	; 0x44
   11ba4:	str	r3, [sp, #28]
   11ba8:	ldr	r3, [sp, #36]	; 0x24
   11bac:	cmn	r3, #1
   11bb0:	bne	12740 <strspn@plt+0x1974>
   11bb4:	ldr	r3, [sp, #44]	; 0x2c
   11bb8:	ldr	r2, [sp, #28]
   11bbc:	ldrb	r3, [r3, r2]
   11bc0:	adds	r3, r3, #0
   11bc4:	movne	r3, #1
   11bc8:	str	r3, [sp, #52]	; 0x34
   11bcc:	ldr	r3, [sp, #52]	; 0x34
   11bd0:	cmp	r3, #0
   11bd4:	bne	11dbc <strspn@plt+0xff0>
   11bd8:	sub	r2, sl, #2
   11bdc:	clz	r2, r2
   11be0:	lsr	r2, r2, #5
   11be4:	and	r3, r6, r2
   11be8:	cmp	r4, #0
   11bec:	movne	r3, #0
   11bf0:	andeq	r3, r3, #1
   11bf4:	cmp	r3, #0
   11bf8:	bne	11f84 <strspn@plt+0x11b8>
   11bfc:	eor	r3, r6, #1
   11c00:	ands	r2, r2, r3
   11c04:	beq	12778 <strspn@plt+0x19ac>
   11c08:	ldr	r3, [sp, #68]	; 0x44
   11c0c:	cmp	r3, #0
   11c10:	beq	127b0 <strspn@plt+0x19e4>
   11c14:	ldr	r3, [sp, #72]	; 0x48
   11c18:	cmp	r3, #0
   11c1c:	beq	12754 <strspn@plt+0x1988>
   11c20:	ldr	r3, [sp, #160]	; 0xa0
   11c24:	ldr	r2, [sp, #44]	; 0x2c
   11c28:	str	r3, [sp, #16]
   11c2c:	ldr	r3, [sp, #156]	; 0x9c
   11c30:	ldr	r1, [sp, #60]	; 0x3c
   11c34:	str	r3, [sp, #12]
   11c38:	ldr	r3, [sp, #152]	; 0x98
   11c3c:	str	r3, [sp, #8]
   11c40:	ldr	r3, [sp, #148]	; 0x94
   11c44:	str	r3, [sp, #4]
   11c48:	mov	r3, #5
   11c4c:	str	r3, [sp]
   11c50:	ldr	r3, [sp, #36]	; 0x24
   11c54:	mov	r0, r8
   11c58:	bl	11ad8 <strspn@plt+0xd0c>
   11c5c:	mov	r4, r0
   11c60:	b	127a4 <strspn@plt+0x19d8>
   11c64:	cmp	sl, #10
   11c68:	beq	11cc4 <strspn@plt+0xef8>
   11c6c:	ldr	r4, [pc, #2956]	; 12800 <strspn@plt+0x1a34>
   11c70:	mov	r2, #5
   11c74:	mov	r1, r4
   11c78:	mov	r0, #0
   11c7c:	bl	10c28 <dcgettext@plt>
   11c80:	cmp	r0, r4
   11c84:	str	r0, [sp, #156]	; 0x9c
   11c88:	bne	11c98 <strspn@plt+0xecc>
   11c8c:	mov	r1, sl
   11c90:	bl	119c4 <strspn@plt+0xbf8>
   11c94:	str	r0, [sp, #156]	; 0x9c
   11c98:	ldr	r4, [pc, #2916]	; 12804 <strspn@plt+0x1a38>
   11c9c:	mov	r2, #5
   11ca0:	mov	r1, r4
   11ca4:	mov	r0, #0
   11ca8:	bl	10c28 <dcgettext@plt>
   11cac:	cmp	r0, r4
   11cb0:	str	r0, [sp, #160]	; 0xa0
   11cb4:	bne	11cc4 <strspn@plt+0xef8>
   11cb8:	mov	r1, sl
   11cbc:	bl	119c4 <strspn@plt+0xbf8>
   11cc0:	str	r0, [sp, #160]	; 0xa0
   11cc4:	cmp	r6, #0
   11cc8:	moveq	r4, r6
   11ccc:	beq	11ce4 <strspn@plt+0xf18>
   11cd0:	mov	r4, #0
   11cd4:	b	11cf4 <strspn@plt+0xf28>
   11cd8:	cmp	r5, r4
   11cdc:	strbhi	r3, [r8, r4]
   11ce0:	add	r4, r4, #1
   11ce4:	ldr	r3, [sp, #156]	; 0x9c
   11ce8:	ldrb	r3, [r3, r4]
   11cec:	cmp	r3, #0
   11cf0:	bne	11cd8 <strspn@plt+0xf0c>
   11cf4:	ldr	r0, [sp, #160]	; 0xa0
   11cf8:	bl	10cf4 <strlen@plt>
   11cfc:	ldr	r3, [sp, #160]	; 0xa0
   11d00:	str	r3, [sp, #40]	; 0x28
   11d04:	mov	r3, #1
   11d08:	str	r3, [sp, #24]
   11d0c:	str	r0, [sp, #32]
   11d10:	b	11b98 <strspn@plt+0xdcc>
   11d14:	mov	r3, #1
   11d18:	cmp	r6, #0
   11d1c:	streq	r3, [sp, #24]
   11d20:	beq	11d40 <strspn@plt+0xf74>
   11d24:	str	r3, [sp, #32]
   11d28:	ldr	r3, [pc, #2772]	; 12804 <strspn@plt+0x1a38>
   11d2c:	mov	r4, #0
   11d30:	str	r3, [sp, #40]	; 0x28
   11d34:	b	11d64 <strspn@plt+0xf98>
   11d38:	cmp	r6, #0
   11d3c:	bne	11dac <strspn@plt+0xfe0>
   11d40:	cmp	r5, #0
   11d44:	movne	r3, #39	; 0x27
   11d48:	strbne	r3, [r8]
   11d4c:	mov	r3, #1
   11d50:	str	r3, [sp, #32]
   11d54:	mov	r6, #0
   11d58:	ldr	r3, [pc, #2724]	; 12804 <strspn@plt+0x1a38>
   11d5c:	mov	r4, #1
   11d60:	str	r3, [sp, #40]	; 0x28
   11d64:	mov	sl, #2
   11d68:	b	11b98 <strspn@plt+0xdcc>
   11d6c:	bl	10db4 <abort@plt>
   11d70:	mov	r6, #0
   11d74:	mov	r3, #1
   11d78:	str	r3, [sp, #24]
   11d7c:	mov	r4, r6
   11d80:	b	11b98 <strspn@plt+0xdcc>
   11d84:	mov	r6, #1
   11d88:	str	r6, [sp, #24]
   11d8c:	str	r6, [sp, #32]
   11d90:	b	11d28 <strspn@plt+0xf5c>
   11d94:	mov	r3, #1
   11d98:	str	r3, [sp, #32]
   11d9c:	ldr	r3, [pc, #2648]	; 127fc <strspn@plt+0x1a30>
   11da0:	str	r6, [sp, #24]
   11da4:	str	r3, [sp, #40]	; 0x28
   11da8:	b	11b64 <strspn@plt+0xd98>
   11dac:	mov	r3, #1
   11db0:	str	r3, [sp, #32]
   11db4:	ldr	r3, [pc, #2632]	; 12804 <strspn@plt+0x1a38>
   11db8:	b	11da4 <strspn@plt+0xfd8>
   11dbc:	ldr	r3, [sp, #32]
   11dc0:	ldr	fp, [sp, #24]
   11dc4:	cmp	sl, #2
   11dc8:	moveq	fp, #0
   11dcc:	andne	fp, fp, #1
   11dd0:	adds	r5, r3, #0
   11dd4:	movne	r5, #1
   11dd8:	ands	r3, r5, fp
   11ddc:	str	r3, [sp, #64]	; 0x40
   11de0:	beq	11eb0 <strspn@plt+0x10e4>
   11de4:	ldr	r2, [sp, #32]
   11de8:	ldr	r3, [sp, #28]
   11dec:	add	r7, r3, r2
   11df0:	mov	r3, r2
   11df4:	ldr	r2, [sp, #36]	; 0x24
   11df8:	cmp	r3, #1
   11dfc:	movls	r3, #0
   11e00:	movhi	r3, #1
   11e04:	cmn	r2, #1
   11e08:	movne	r3, #0
   11e0c:	cmp	r3, #0
   11e10:	beq	11e20 <strspn@plt+0x1054>
   11e14:	ldr	r0, [sp, #44]	; 0x2c
   11e18:	bl	10cf4 <strlen@plt>
   11e1c:	str	r0, [sp, #36]	; 0x24
   11e20:	ldr	r3, [sp, #36]	; 0x24
   11e24:	cmp	r3, r7
   11e28:	bcc	11ea8 <strspn@plt+0x10dc>
   11e2c:	ldr	r3, [sp, #44]	; 0x2c
   11e30:	ldr	r0, [sp, #28]
   11e34:	ldr	r2, [sp, #32]
   11e38:	ldr	r1, [sp, #40]	; 0x28
   11e3c:	add	r0, r3, r0
   11e40:	bl	10c10 <memcmp@plt>
   11e44:	cmp	r0, #0
   11e48:	bne	11ea8 <strspn@plt+0x10dc>
   11e4c:	cmp	r6, #0
   11e50:	beq	11eb0 <strspn@plt+0x10e4>
   11e54:	str	r6, [sp, #24]
   11e58:	ldr	r3, [sp, #24]
   11e5c:	ldr	r2, [sp, #44]	; 0x2c
   11e60:	cmp	sl, #2
   11e64:	movne	r3, #0
   11e68:	andeq	r3, r3, #1
   11e6c:	cmp	r3, #0
   11e70:	ldr	r3, [sp, #160]	; 0xa0
   11e74:	movne	sl, #4
   11e78:	str	r3, [sp, #16]
   11e7c:	ldr	r3, [sp, #156]	; 0x9c
   11e80:	str	sl, [sp]
   11e84:	str	r3, [sp, #12]
   11e88:	mov	r3, #0
   11e8c:	str	r3, [sp, #8]
   11e90:	ldr	r3, [sp, #148]	; 0x94
   11e94:	mov	r1, r9
   11e98:	bic	r3, r3, #2
   11e9c:	str	r3, [sp, #4]
   11ea0:	ldr	r3, [sp, #36]	; 0x24
   11ea4:	b	11c54 <strspn@plt+0xe88>
   11ea8:	mov	r3, #0
   11eac:	str	r3, [sp, #64]	; 0x40
   11eb0:	ldr	r2, [sp, #28]
   11eb4:	ldr	r3, [sp, #44]	; 0x2c
   11eb8:	add	r3, r3, r2
   11ebc:	str	r3, [sp, #80]	; 0x50
   11ec0:	ldr	r3, [sp, #44]	; 0x2c
   11ec4:	ldrb	r7, [r3, r2]
   11ec8:	cmp	r7, #58	; 0x3a
   11ecc:	bhi	12034 <strspn@plt+0x1268>
   11ed0:	cmp	r7, #43	; 0x2b
   11ed4:	bcs	12088 <strspn@plt+0x12bc>
   11ed8:	cmp	r7, #32
   11edc:	beq	120e0 <strspn@plt+0x1314>
   11ee0:	bhi	11f8c <strspn@plt+0x11c0>
   11ee4:	cmp	r7, #9
   11ee8:	beq	12394 <strspn@plt+0x15c8>
   11eec:	bhi	11f50 <strspn@plt+0x1184>
   11ef0:	cmp	r7, #7
   11ef4:	beq	12440 <strspn@plt+0x1674>
   11ef8:	bhi	120fc <strspn@plt+0x1330>
   11efc:	cmp	r7, #0
   11f00:	beq	12118 <strspn@plt+0x134c>
   11f04:	ldr	r3, [sp, #76]	; 0x4c
   11f08:	cmp	r3, #1
   11f0c:	bne	12484 <strspn@plt+0x16b8>
   11f10:	bl	10cdc <__ctype_b_loc@plt>
   11f14:	sxth	r3, r7
   11f18:	lsl	r3, r3, #1
   11f1c:	ldr	r2, [r0]
   11f20:	ldrh	r5, [r2, r3]
   11f24:	ldr	r3, [sp, #76]	; 0x4c
   11f28:	str	r3, [sp, #56]	; 0x38
   11f2c:	lsr	r5, r5, #14
   11f30:	and	r5, r5, #1
   11f34:	ldr	r3, [sp, #24]
   11f38:	eor	fp, r5, #1
   11f3c:	and	fp, fp, r3
   11f40:	ands	fp, fp, #255	; 0xff
   11f44:	beq	122cc <strspn@plt+0x1500>
   11f48:	mov	r5, #0
   11f4c:	b	12530 <strspn@plt+0x1764>
   11f50:	cmp	r7, #11
   11f54:	beq	1239c <strspn@plt+0x15d0>
   11f58:	bcc	12438 <strspn@plt+0x166c>
   11f5c:	cmp	r7, #12
   11f60:	beq	12448 <strspn@plt+0x167c>
   11f64:	cmp	r7, #13
   11f68:	moveq	r3, #114	; 0x72
   11f6c:	bne	11f04 <strspn@plt+0x1138>
   11f70:	cmp	sl, #2
   11f74:	movne	r2, #0
   11f78:	andeq	r2, r6, #1
   11f7c:	cmp	r2, #0
   11f80:	beq	12100 <strspn@plt+0x1334>
   11f84:	mov	sl, #2
   11f88:	b	11e58 <strspn@plt+0x108c>
   11f8c:	cmp	r7, #37	; 0x25
   11f90:	beq	12088 <strspn@plt+0x12bc>
   11f94:	bhi	11fa8 <strspn@plt+0x11dc>
   11f98:	cmp	r7, #35	; 0x23
   11f9c:	beq	120d4 <strspn@plt+0x1308>
   11fa0:	mov	r5, #0
   11fa4:	b	120e4 <strspn@plt+0x1318>
   11fa8:	cmp	r7, #39	; 0x27
   11fac:	bne	11fa0 <strspn@plt+0x11d4>
   11fb0:	cmp	sl, #2
   11fb4:	ldrne	r5, [sp, #52]	; 0x34
   11fb8:	movne	r3, r5
   11fbc:	strne	r3, [sp, #68]	; 0x44
   11fc0:	bne	1208c <strspn@plt+0x12c0>
   11fc4:	cmp	r6, #0
   11fc8:	bne	11e58 <strspn@plt+0x108c>
   11fcc:	ldr	r2, [sp, #60]	; 0x3c
   11fd0:	adds	r3, r9, #0
   11fd4:	movne	r3, #1
   11fd8:	cmp	r2, #0
   11fdc:	movne	r3, #0
   11fe0:	cmp	r3, #0
   11fe4:	strne	r9, [sp, #60]	; 0x3c
   11fe8:	movne	r9, #0
   11fec:	bne	11ffc <strspn@plt+0x1230>
   11ff0:	cmp	r9, r4
   11ff4:	movhi	r3, #39	; 0x27
   11ff8:	strbhi	r3, [r8, r4]
   11ffc:	add	r3, r4, #1
   12000:	cmp	r3, r9
   12004:	movcc	r2, #92	; 0x5c
   12008:	strbcc	r2, [r8, r3]
   1200c:	add	r3, r4, #2
   12010:	cmp	r3, r9
   12014:	ldr	r5, [sp, #52]	; 0x34
   12018:	movcc	r2, #39	; 0x27
   1201c:	strbcc	r2, [r8, r3]
   12020:	add	r4, r4, #3
   12024:	mov	fp, r6
   12028:	str	r5, [sp, #68]	; 0x44
   1202c:	str	r6, [sp, #48]	; 0x30
   12030:	b	122cc <strspn@plt+0x1500>
   12034:	cmp	r7, #94	; 0x5e
   12038:	beq	11fa0 <strspn@plt+0x11d4>
   1203c:	bhi	12094 <strspn@plt+0x12c8>
   12040:	cmp	r7, #90	; 0x5a
   12044:	bhi	1207c <strspn@plt+0x12b0>
   12048:	cmp	r7, #65	; 0x41
   1204c:	bcs	12088 <strspn@plt+0x12bc>
   12050:	cmp	r7, #62	; 0x3e
   12054:	bls	11fa0 <strspn@plt+0x11d4>
   12058:	cmp	r7, #63	; 0x3f
   1205c:	bne	11f04 <strspn@plt+0x1138>
   12060:	cmp	sl, #2
   12064:	beq	12208 <strspn@plt+0x143c>
   12068:	cmp	sl, #5
   1206c:	beq	12218 <strspn@plt+0x144c>
   12070:	mov	fp, #0
   12074:	mov	r5, fp
   12078:	b	122cc <strspn@plt+0x1500>
   1207c:	cmp	r7, #92	; 0x5c
   12080:	beq	123a4 <strspn@plt+0x15d8>
   12084:	bls	11fa0 <strspn@plt+0x11d4>
   12088:	ldr	r5, [sp, #52]	; 0x34
   1208c:	mov	fp, #0
   12090:	b	122cc <strspn@plt+0x1500>
   12094:	cmp	r7, #122	; 0x7a
   12098:	bhi	120b8 <strspn@plt+0x12ec>
   1209c:	cmp	r7, #97	; 0x61
   120a0:	bcs	12088 <strspn@plt+0x12bc>
   120a4:	cmp	r7, #95	; 0x5f
   120a8:	beq	12088 <strspn@plt+0x12bc>
   120ac:	cmp	r7, #96	; 0x60
   120b0:	bne	11f04 <strspn@plt+0x1138>
   120b4:	b	11fa0 <strspn@plt+0x11d4>
   120b8:	cmp	r7, #124	; 0x7c
   120bc:	beq	11fa0 <strspn@plt+0x11d4>
   120c0:	bcc	12450 <strspn@plt+0x1684>
   120c4:	cmp	r7, #125	; 0x7d
   120c8:	beq	12450 <strspn@plt+0x1684>
   120cc:	cmp	r7, #126	; 0x7e
   120d0:	bne	11f04 <strspn@plt+0x1138>
   120d4:	ldr	r3, [sp, #28]
   120d8:	cmp	r3, #0
   120dc:	bne	12210 <strspn@plt+0x1444>
   120e0:	ldr	r5, [sp, #52]	; 0x34
   120e4:	cmp	sl, #2
   120e8:	movne	fp, #0
   120ec:	andeq	fp, r6, #1
   120f0:	cmp	fp, #0
   120f4:	beq	122cc <strspn@plt+0x1500>
   120f8:	b	11f84 <strspn@plt+0x11b8>
   120fc:	mov	r3, #98	; 0x62
   12100:	ldr	r2, [sp, #24]
   12104:	cmp	r2, #0
   12108:	beq	12210 <strspn@plt+0x1444>
   1210c:	mov	r7, r3
   12110:	mov	r5, #0
   12114:	b	12324 <strspn@plt+0x1558>
   12118:	ldr	r3, [sp, #24]
   1211c:	cmp	r3, #0
   12120:	beq	121ec <strspn@plt+0x1420>
   12124:	cmp	r6, #0
   12128:	bne	11e54 <strspn@plt+0x1088>
   1212c:	ldr	r3, [sp, #48]	; 0x30
   12130:	eor	r2, r3, #1
   12134:	cmp	sl, #2
   12138:	movne	r2, #0
   1213c:	andeq	r2, r2, #1
   12140:	cmp	r2, #0
   12144:	moveq	r3, r4
   12148:	beq	12180 <strspn@plt+0x13b4>
   1214c:	cmp	r9, r4
   12150:	movhi	r3, #39	; 0x27
   12154:	strbhi	r3, [r8, r4]
   12158:	add	r3, r4, #1
   1215c:	cmp	r9, r3
   12160:	movhi	r1, #36	; 0x24
   12164:	strbhi	r1, [r8, r3]
   12168:	add	r3, r4, #2
   1216c:	cmp	r9, r3
   12170:	movhi	r1, #39	; 0x27
   12174:	strbhi	r1, [r8, r3]
   12178:	add	r3, r4, #3
   1217c:	str	r2, [sp, #48]	; 0x30
   12180:	cmp	r9, r3
   12184:	movhi	r2, #92	; 0x5c
   12188:	strbhi	r2, [r8, r3]
   1218c:	cmp	fp, #0
   12190:	add	r4, r3, #1
   12194:	beq	12724 <strspn@plt+0x1958>
   12198:	ldr	r2, [sp, #28]
   1219c:	ldr	r1, [sp, #36]	; 0x24
   121a0:	add	r2, r2, #1
   121a4:	cmp	r1, r2
   121a8:	bls	121e4 <strspn@plt+0x1418>
   121ac:	ldr	r1, [sp, #44]	; 0x2c
   121b0:	mov	r7, #48	; 0x30
   121b4:	ldrb	r2, [r1, r2]
   121b8:	sub	r2, r2, #48	; 0x30
   121bc:	cmp	r2, #9
   121c0:	movhi	r5, r6
   121c4:	bhi	122cc <strspn@plt+0x1500>
   121c8:	cmp	r9, r4
   121cc:	add	r2, r3, #2
   121d0:	strbhi	r7, [r8, r4]
   121d4:	cmp	r9, r2
   121d8:	add	r4, r3, #3
   121dc:	movhi	r1, #48	; 0x30
   121e0:	strbhi	r1, [r8, r2]
   121e4:	mov	r5, r6
   121e8:	b	1272c <strspn@plt+0x1960>
   121ec:	ldr	r3, [sp, #148]	; 0x94
   121f0:	tst	r3, #1
   121f4:	ldreq	r5, [sp, #24]
   121f8:	beq	12738 <strspn@plt+0x196c>
   121fc:	ldr	r3, [sp, #28]
   12200:	add	r3, r3, #1
   12204:	b	11ba4 <strspn@plt+0xdd8>
   12208:	cmp	r6, #0
   1220c:	bne	11e58 <strspn@plt+0x108c>
   12210:	mov	r5, #0
   12214:	b	1208c <strspn@plt+0x12c0>
   12218:	ldr	r3, [sp, #148]	; 0x94
   1221c:	tst	r3, #4
   12220:	beq	12210 <strspn@plt+0x1444>
   12224:	ldr	r3, [sp, #28]
   12228:	add	r2, r3, #2
   1222c:	ldr	r3, [sp, #36]	; 0x24
   12230:	cmp	r3, r2
   12234:	bls	12210 <strspn@plt+0x1444>
   12238:	ldr	r3, [sp, #44]	; 0x2c
   1223c:	ldr	r1, [sp, #28]
   12240:	add	r3, r3, r1
   12244:	ldrb	r0, [r3, #1]
   12248:	cmp	r0, #63	; 0x3f
   1224c:	bne	12210 <strspn@plt+0x1444>
   12250:	ldr	r3, [sp, #44]	; 0x2c
   12254:	ldrb	r1, [r3, r2]
   12258:	sub	r3, r1, #33	; 0x21
   1225c:	uxtb	r3, r3
   12260:	cmp	r3, #29
   12264:	bhi	12734 <strspn@plt+0x1968>
   12268:	mov	ip, #1
   1226c:	ldr	r5, [pc, #1428]	; 12808 <strspn@plt+0x1a3c>
   12270:	ands	r5, r5, ip, lsl r3
   12274:	beq	1208c <strspn@plt+0x12c0>
   12278:	cmp	r6, #0
   1227c:	bne	11e58 <strspn@plt+0x108c>
   12280:	add	r3, r4, #1
   12284:	cmp	r9, r4
   12288:	strbhi	r0, [r8, r4]
   1228c:	cmp	r9, r3
   12290:	movhi	r0, #34	; 0x22
   12294:	strbhi	r0, [r8, r3]
   12298:	add	r3, r4, #2
   1229c:	cmp	r9, r3
   122a0:	movhi	r0, #34	; 0x22
   122a4:	strbhi	r0, [r8, r3]
   122a8:	add	r3, r4, #3
   122ac:	cmp	r9, r3
   122b0:	add	r4, r4, #4
   122b4:	mov	r5, r6
   122b8:	mov	fp, r6
   122bc:	mov	r7, r1
   122c0:	movhi	r0, #63	; 0x3f
   122c4:	strbhi	r0, [r8, r3]
   122c8:	str	r2, [sp, #28]
   122cc:	ldr	r3, [sp, #24]
   122d0:	eor	r3, r3, #1
   122d4:	cmp	sl, #2
   122d8:	orreq	r3, r3, #1
   122dc:	eor	r3, r3, #1
   122e0:	orr	r3, r6, r3
   122e4:	tst	r3, #255	; 0xff
   122e8:	beq	12318 <strspn@plt+0x154c>
   122ec:	ldr	r3, [sp, #152]	; 0x98
   122f0:	cmp	r3, #0
   122f4:	beq	12318 <strspn@plt+0x154c>
   122f8:	lsr	r2, r7, #5
   122fc:	ldr	r1, [sp, #152]	; 0x98
   12300:	uxtb	r2, r2
   12304:	and	r3, r7, #31
   12308:	ldr	r2, [r1, r2, lsl #2]
   1230c:	lsr	r3, r2, r3
   12310:	tst	r3, #1
   12314:	bne	12324 <strspn@plt+0x1558>
   12318:	ldr	r3, [sp, #64]	; 0x40
   1231c:	cmp	r3, #0
   12320:	beq	123bc <strspn@plt+0x15f0>
   12324:	cmp	r6, #0
   12328:	bne	11e58 <strspn@plt+0x108c>
   1232c:	ldr	r3, [sp, #48]	; 0x30
   12330:	eor	r3, r3, #1
   12334:	cmp	sl, #2
   12338:	movne	r3, #0
   1233c:	andeq	r3, r3, #1
   12340:	cmp	r3, #0
   12344:	beq	1237c <strspn@plt+0x15b0>
   12348:	cmp	r9, r4
   1234c:	movhi	r2, #39	; 0x27
   12350:	strbhi	r2, [r8, r4]
   12354:	add	r2, r4, #1
   12358:	cmp	r9, r2
   1235c:	movhi	r1, #36	; 0x24
   12360:	strbhi	r1, [r8, r2]
   12364:	add	r2, r4, #2
   12368:	cmp	r9, r2
   1236c:	add	r4, r4, #3
   12370:	movhi	r1, #39	; 0x27
   12374:	strbhi	r1, [r8, r2]
   12378:	str	r3, [sp, #48]	; 0x30
   1237c:	cmp	r9, r4
   12380:	movhi	r3, #92	; 0x5c
   12384:	strbhi	r3, [r8, r4]
   12388:	ldr	fp, [sp, #52]	; 0x34
   1238c:	add	r4, r4, #1
   12390:	b	123bc <strspn@plt+0x15f0>
   12394:	mov	r3, #116	; 0x74
   12398:	b	11f70 <strspn@plt+0x11a4>
   1239c:	mov	r3, #118	; 0x76
   123a0:	b	12100 <strspn@plt+0x1334>
   123a4:	cmp	sl, #2
   123a8:	bne	12418 <strspn@plt+0x164c>
   123ac:	cmp	r6, #0
   123b0:	bne	11e58 <strspn@plt+0x108c>
   123b4:	mov	r5, r6
   123b8:	mov	fp, r6
   123bc:	ldr	r3, [sp, #48]	; 0x30
   123c0:	eor	fp, fp, #1
   123c4:	and	fp, fp, r3
   123c8:	tst	fp, #255	; 0xff
   123cc:	beq	123f8 <strspn@plt+0x162c>
   123d0:	cmp	r9, r4
   123d4:	movhi	r3, #39	; 0x27
   123d8:	strbhi	r3, [r8, r4]
   123dc:	add	r3, r4, #1
   123e0:	cmp	r9, r3
   123e4:	movhi	r2, #39	; 0x27
   123e8:	add	r4, r4, #2
   123ec:	strbhi	r2, [r8, r3]
   123f0:	mov	r3, #0
   123f4:	str	r3, [sp, #48]	; 0x30
   123f8:	cmp	r9, r4
   123fc:	strbhi	r7, [r8, r4]
   12400:	ldr	r3, [sp, #72]	; 0x48
   12404:	cmp	r5, #0
   12408:	moveq	r3, #0
   1240c:	add	r4, r4, #1
   12410:	str	r3, [sp, #72]	; 0x48
   12414:	b	121fc <strspn@plt+0x1430>
   12418:	ldr	r3, [sp, #24]
   1241c:	and	r3, r3, r6
   12420:	tst	r5, r3
   12424:	moveq	r3, r7
   12428:	beq	11f70 <strspn@plt+0x11a4>
   1242c:	mov	fp, #0
   12430:	mov	r5, fp
   12434:	b	123bc <strspn@plt+0x15f0>
   12438:	mov	r3, #110	; 0x6e
   1243c:	b	11f70 <strspn@plt+0x11a4>
   12440:	mov	r3, #97	; 0x61
   12444:	b	12100 <strspn@plt+0x1334>
   12448:	mov	r3, #102	; 0x66
   1244c:	b	12100 <strspn@plt+0x1334>
   12450:	ldr	r3, [sp, #36]	; 0x24
   12454:	cmn	r3, #1
   12458:	bne	12478 <strspn@plt+0x16ac>
   1245c:	ldr	r3, [sp, #44]	; 0x2c
   12460:	ldrb	r3, [r3, #1]
   12464:	adds	r3, r3, #0
   12468:	movne	r3, #1
   1246c:	cmp	r3, #0
   12470:	bne	12210 <strspn@plt+0x1444>
   12474:	b	120d4 <strspn@plt+0x1308>
   12478:	ldr	r3, [sp, #36]	; 0x24
   1247c:	subs	r3, r3, #1
   12480:	b	12468 <strspn@plt+0x169c>
   12484:	mov	r3, #0
   12488:	str	r3, [sp, #96]	; 0x60
   1248c:	str	r3, [sp, #100]	; 0x64
   12490:	ldr	r3, [sp, #36]	; 0x24
   12494:	cmn	r3, #1
   12498:	bne	124a8 <strspn@plt+0x16dc>
   1249c:	ldr	r0, [sp, #44]	; 0x2c
   124a0:	bl	10cf4 <strlen@plt>
   124a4:	str	r0, [sp, #36]	; 0x24
   124a8:	ldr	r5, [sp, #52]	; 0x34
   124ac:	mov	r3, #0
   124b0:	str	r3, [sp, #56]	; 0x38
   124b4:	ldr	r3, [sp, #28]
   124b8:	ldr	r2, [sp, #56]	; 0x38
   124bc:	ldr	r1, [sp, #36]	; 0x24
   124c0:	add	r2, r3, r2
   124c4:	ldr	r3, [sp, #44]	; 0x2c
   124c8:	add	r0, sp, #92	; 0x5c
   124cc:	add	fp, r3, r2
   124d0:	sub	r2, r1, r2
   124d4:	add	r3, sp, #96	; 0x60
   124d8:	mov	r1, fp
   124dc:	bl	11898 <strspn@plt+0xacc>
   124e0:	subs	r2, r0, #0
   124e4:	beq	12524 <strspn@plt+0x1758>
   124e8:	cmn	r2, #1
   124ec:	beq	126fc <strspn@plt+0x1930>
   124f0:	cmn	r2, #2
   124f4:	bne	1266c <strspn@plt+0x18a0>
   124f8:	ldr	r2, [sp, #56]	; 0x38
   124fc:	ldr	r3, [sp, #28]
   12500:	add	r3, r3, r2
   12504:	ldr	r2, [sp, #36]	; 0x24
   12508:	cmp	r2, r3
   1250c:	bls	126fc <strspn@plt+0x1930>
   12510:	ldr	r3, [sp, #80]	; 0x50
   12514:	ldr	r2, [sp, #56]	; 0x38
   12518:	ldrb	r5, [r3, r2]
   1251c:	cmp	r5, #0
   12520:	bne	1265c <strspn@plt+0x1890>
   12524:	ldr	r3, [sp, #56]	; 0x38
   12528:	cmp	r3, #1
   1252c:	bls	11f34 <strspn@plt+0x1168>
   12530:	ldr	r2, [sp, #56]	; 0x38
   12534:	ldr	r3, [sp, #28]
   12538:	mov	fp, #0
   1253c:	add	r3, r3, r2
   12540:	ldr	r2, [sp, #24]
   12544:	str	r3, [sp, #52]	; 0x34
   12548:	eor	r3, r5, #1
   1254c:	and	r3, r3, r2
   12550:	mov	ip, #92	; 0x5c
   12554:	uxtb	r3, r3
   12558:	mov	r2, #39	; 0x27
   1255c:	cmp	r3, #0
   12560:	beq	12704 <strspn@plt+0x1938>
   12564:	cmp	r6, #0
   12568:	bne	11e54 <strspn@plt+0x1088>
   1256c:	ldr	r1, [sp, #48]	; 0x30
   12570:	eor	r1, r1, #1
   12574:	cmp	sl, #2
   12578:	movne	r1, #0
   1257c:	andeq	r1, r1, #1
   12580:	cmp	r1, #0
   12584:	beq	125b4 <strspn@plt+0x17e8>
   12588:	add	r0, r4, #1
   1258c:	cmp	r9, r4
   12590:	strbhi	r2, [r8, r4]
   12594:	cmp	r9, r0
   12598:	movhi	lr, #36	; 0x24
   1259c:	strbhi	lr, [r8, r0]
   125a0:	add	r0, r4, #2
   125a4:	add	r4, r4, #3
   125a8:	cmp	r9, r0
   125ac:	strbhi	r2, [r8, r0]
   125b0:	str	r1, [sp, #48]	; 0x30
   125b4:	add	r0, r4, #1
   125b8:	cmp	r9, r4
   125bc:	strbhi	ip, [r8, r4]
   125c0:	cmp	r9, r0
   125c4:	lsrhi	r1, r7, #6
   125c8:	addhi	r1, r1, #48	; 0x30
   125cc:	strbhi	r1, [r8, r0]
   125d0:	add	r0, r4, #2
   125d4:	cmp	r9, r0
   125d8:	lsrhi	r1, r7, #3
   125dc:	and	r7, r7, #7
   125e0:	andhi	r1, r1, #7
   125e4:	add	r4, r4, #3
   125e8:	add	r7, r7, #48	; 0x30
   125ec:	mov	fp, r3
   125f0:	addhi	r1, r1, #48	; 0x30
   125f4:	strbhi	r1, [r8, r0]
   125f8:	ldr	r1, [sp, #28]
   125fc:	ldr	r0, [sp, #52]	; 0x34
   12600:	add	r1, r1, #1
   12604:	cmp	r0, r1
   12608:	bls	123bc <strspn@plt+0x15f0>
   1260c:	ldr	lr, [sp, #48]	; 0x30
   12610:	eor	r0, fp, #1
   12614:	and	r0, r0, lr
   12618:	tst	r0, #255	; 0xff
   1261c:	beq	12640 <strspn@plt+0x1874>
   12620:	add	r0, r4, #1
   12624:	cmp	r9, r4
   12628:	strbhi	r2, [r8, r4]
   1262c:	cmp	r9, r0
   12630:	add	r4, r4, #2
   12634:	strbhi	r2, [r8, r0]
   12638:	mov	r0, #0
   1263c:	str	r0, [sp, #48]	; 0x30
   12640:	ldr	r0, [sp, #44]	; 0x2c
   12644:	cmp	r9, r4
   12648:	strbhi	r7, [r8, r4]
   1264c:	str	r1, [sp, #28]
   12650:	add	r4, r4, #1
   12654:	ldrb	r7, [r0, r1]
   12658:	b	1255c <strspn@plt+0x1790>
   1265c:	ldr	r3, [sp, #56]	; 0x38
   12660:	add	r3, r3, #1
   12664:	str	r3, [sp, #56]	; 0x38
   12668:	b	124f8 <strspn@plt+0x172c>
   1266c:	cmp	sl, #2
   12670:	movne	r3, #0
   12674:	andeq	r3, r6, #1
   12678:	cmp	r3, #0
   1267c:	movne	r1, #1
   12680:	bne	126dc <strspn@plt+0x1910>
   12684:	ldr	r0, [sp, #92]	; 0x5c
   12688:	str	r2, [sp, #84]	; 0x54
   1268c:	bl	10c4c <iswprint@plt>
   12690:	ldr	r3, [sp, #56]	; 0x38
   12694:	ldr	r2, [sp, #84]	; 0x54
   12698:	add	r3, r3, r2
   1269c:	str	r3, [sp, #56]	; 0x38
   126a0:	cmp	r0, #0
   126a4:	add	r0, sp, #96	; 0x60
   126a8:	moveq	r5, #0
   126ac:	bl	10c04 <mbsinit@plt>
   126b0:	cmp	r0, #0
   126b4:	beq	124b4 <strspn@plt+0x16e8>
   126b8:	b	12524 <strspn@plt+0x1758>
   126bc:	ldrb	r3, [fp, r1]
   126c0:	cmp	r3, #94	; 0x5e
   126c4:	beq	11f84 <strspn@plt+0x11b8>
   126c8:	bhi	126e8 <strspn@plt+0x191c>
   126cc:	sub	r3, r3, #91	; 0x5b
   126d0:	cmp	r3, #1
   126d4:	bls	11f84 <strspn@plt+0x11b8>
   126d8:	add	r1, r1, #1
   126dc:	cmp	r1, r2
   126e0:	bne	126bc <strspn@plt+0x18f0>
   126e4:	b	12684 <strspn@plt+0x18b8>
   126e8:	cmp	r3, #96	; 0x60
   126ec:	beq	11f84 <strspn@plt+0x11b8>
   126f0:	cmp	r3, #124	; 0x7c
   126f4:	bne	126d8 <strspn@plt+0x190c>
   126f8:	b	11f84 <strspn@plt+0x11b8>
   126fc:	mov	r5, #0
   12700:	b	12524 <strspn@plt+0x1758>
   12704:	ldr	r1, [sp, #64]	; 0x40
   12708:	cmp	r1, #0
   1270c:	beq	125f8 <strspn@plt+0x182c>
   12710:	cmp	r9, r4
   12714:	strbhi	ip, [r8, r4]
   12718:	str	r3, [sp, #64]	; 0x40
   1271c:	add	r4, r4, #1
   12720:	b	125f8 <strspn@plt+0x182c>
   12724:	mov	r5, fp
   12728:	ldr	fp, [sp, #24]
   1272c:	mov	r7, #48	; 0x30
   12730:	b	122cc <strspn@plt+0x1500>
   12734:	mov	r5, #0
   12738:	mov	fp, r5
   1273c:	b	122cc <strspn@plt+0x1500>
   12740:	ldr	r3, [sp, #36]	; 0x24
   12744:	ldr	r2, [sp, #28]
   12748:	subs	r3, r3, r2
   1274c:	movne	r3, #1
   12750:	b	11bc8 <strspn@plt+0xdfc>
   12754:	ldr	r3, [sp, #60]	; 0x3c
   12758:	clz	r7, r9
   1275c:	cmp	r3, #0
   12760:	lsr	r7, r7, #5
   12764:	moveq	r7, #0
   12768:	cmp	r7, #0
   1276c:	mov	r5, r3
   12770:	bne	11b28 <strspn@plt+0xd5c>
   12774:	ldr	r3, [sp, #68]	; 0x44
   12778:	ldr	r2, [sp, #40]	; 0x28
   1277c:	cmp	r2, #0
   12780:	moveq	r3, #0
   12784:	andne	r3, r3, #1
   12788:	cmp	r3, #0
   1278c:	movne	r3, r2
   12790:	subne	r2, r3, #1
   12794:	bne	127c4 <strspn@plt+0x19f8>
   12798:	cmp	r9, r4
   1279c:	movhi	r3, #0
   127a0:	strbhi	r3, [r8, r4]
   127a4:	mov	r0, r4
   127a8:	add	sp, sp, #108	; 0x6c
   127ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   127b0:	mov	r3, r2
   127b4:	b	12778 <strspn@plt+0x19ac>
   127b8:	cmp	r9, r4
   127bc:	strbhi	r3, [r8, r4]
   127c0:	add	r4, r4, #1
   127c4:	ldrb	r3, [r2, #1]!
   127c8:	cmp	r3, #0
   127cc:	bne	127b8 <strspn@plt+0x19ec>
   127d0:	b	12798 <strspn@plt+0x19cc>
   127d4:	ldr	r3, [pc, #32]	; 127fc <strspn@plt+0x1a30>
   127d8:	mov	r6, #1
   127dc:	str	r6, [sp, #24]
   127e0:	str	r6, [sp, #32]
   127e4:	str	r3, [sp, #40]	; 0x28
   127e8:	mov	r4, #0
   127ec:	mov	sl, #5
   127f0:	b	11b98 <strspn@plt+0xdcc>
   127f4:	mov	r6, #1
   127f8:	b	11d8c <strspn@plt+0xfc0>
   127fc:	andeq	r4, r1, fp, asr r8
   12800:	andeq	r4, r1, pc, asr r8
   12804:	andeq	r4, r1, sp, asr r8
   12808:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   1280c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12810:	sub	sp, sp, #52	; 0x34
   12814:	mov	r6, r0
   12818:	mov	r5, r3
   1281c:	mov	r8, r1
   12820:	mov	r9, r2
   12824:	bl	10d0c <__errno_location@plt>
   12828:	ldr	r7, [pc, #380]	; 129ac <strspn@plt+0x1be0>
   1282c:	cmn	r6, #-2147483647	; 0x80000001
   12830:	ldr	r4, [r7]
   12834:	ldr	r3, [r0]
   12838:	str	r0, [sp, #24]
   1283c:	str	r3, [sp, #32]
   12840:	movne	r3, #0
   12844:	moveq	r3, #1
   12848:	orrs	r3, r3, r6, lsr #31
   1284c:	beq	12854 <strspn@plt+0x1a88>
   12850:	bl	10db4 <abort@plt>
   12854:	ldr	r2, [r7, #4]
   12858:	cmp	r6, r2
   1285c:	blt	128cc <strspn@plt+0x1b00>
   12860:	add	r1, sp, #48	; 0x30
   12864:	add	sl, r7, #8
   12868:	str	r2, [r1, #-4]!
   1286c:	cmp	r4, sl
   12870:	mov	r3, #8
   12874:	sub	r2, r6, r2
   12878:	movne	r0, r4
   1287c:	str	r3, [sp]
   12880:	add	r2, r2, #1
   12884:	mvn	r3, #-2147483648	; 0x80000000
   12888:	moveq	r0, #0
   1288c:	bl	135a0 <strspn@plt+0x27d4>
   12890:	cmp	r4, sl
   12894:	ldr	r2, [sp, #44]	; 0x2c
   12898:	mov	fp, r0
   1289c:	str	r0, [r7]
   128a0:	ldmeq	r4, {r0, r1}
   128a4:	mov	r4, fp
   128a8:	stmeq	fp, {r0, r1}
   128ac:	ldr	r0, [r7, #4]
   128b0:	mov	r1, #0
   128b4:	sub	r2, r2, r0
   128b8:	add	r0, fp, r0, lsl #3
   128bc:	lsl	r2, r2, #3
   128c0:	bl	10d24 <memset@plt>
   128c4:	ldr	r3, [sp, #44]	; 0x2c
   128c8:	str	r3, [r7, #4]
   128cc:	ldr	r3, [r5, #4]
   128d0:	add	sl, r4, r6, lsl #3
   128d4:	orr	r3, r3, #1
   128d8:	str	r3, [sp, #28]
   128dc:	add	r3, r5, #8
   128e0:	str	r3, [sp, #36]	; 0x24
   128e4:	ldr	r3, [r5, #44]	; 0x2c
   128e8:	ldr	fp, [r4, r6, lsl #3]
   128ec:	ldr	r7, [sl, #4]
   128f0:	str	r3, [sp, #16]
   128f4:	ldr	r3, [r5, #40]	; 0x28
   128f8:	mov	r2, r8
   128fc:	str	r3, [sp, #12]
   12900:	add	r3, r5, #8
   12904:	str	r3, [sp, #8]
   12908:	ldr	r3, [sp, #28]
   1290c:	mov	r1, fp
   12910:	str	r3, [sp, #4]
   12914:	ldr	r3, [r5]
   12918:	mov	r0, r7
   1291c:	str	r3, [sp]
   12920:	mov	r3, r9
   12924:	bl	11ad8 <strspn@plt+0xd0c>
   12928:	cmp	fp, r0
   1292c:	bhi	12994 <strspn@plt+0x1bc8>
   12930:	ldr	r3, [pc, #120]	; 129b0 <strspn@plt+0x1be4>
   12934:	add	fp, r0, #1
   12938:	cmp	r7, r3
   1293c:	str	fp, [r4, r6, lsl #3]
   12940:	beq	1294c <strspn@plt+0x1b80>
   12944:	mov	r0, r7
   12948:	bl	13b50 <strspn@plt+0x2d84>
   1294c:	mov	r0, fp
   12950:	bl	13458 <strspn@plt+0x268c>
   12954:	ldr	r3, [r5, #44]	; 0x2c
   12958:	mov	r2, r8
   1295c:	mov	r1, fp
   12960:	str	r0, [sl, #4]
   12964:	str	r3, [sp, #16]
   12968:	ldr	r3, [r5, #40]	; 0x28
   1296c:	mov	r7, r0
   12970:	str	r3, [sp, #12]
   12974:	add	r3, r5, #8
   12978:	str	r3, [sp, #8]
   1297c:	ldr	r3, [sp, #28]
   12980:	str	r3, [sp, #4]
   12984:	ldr	r3, [r5]
   12988:	str	r3, [sp]
   1298c:	mov	r3, r9
   12990:	bl	11ad8 <strspn@plt+0xd0c>
   12994:	ldr	r3, [sp, #24]
   12998:	ldr	r2, [sp, #32]
   1299c:	mov	r0, r7
   129a0:	str	r2, [r3]
   129a4:	add	sp, sp, #52	; 0x34
   129a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   129ac:	andeq	r5, r2, r0, ror #1
   129b0:	andeq	r5, r2, r0, asr r1
   129b4:	push	{r4, r5, r6, lr}
   129b8:	mov	r5, r0
   129bc:	bl	10d0c <__errno_location@plt>
   129c0:	cmp	r5, #0
   129c4:	mov	r1, #48	; 0x30
   129c8:	ldr	r6, [r0]
   129cc:	mov	r4, r0
   129d0:	ldr	r0, [pc, #12]	; 129e4 <strspn@plt+0x1c18>
   129d4:	movne	r0, r5
   129d8:	bl	13834 <strspn@plt+0x2a68>
   129dc:	str	r6, [r4]
   129e0:	pop	{r4, r5, r6, pc}
   129e4:	andeq	r5, r2, r0, asr r2
   129e8:	ldr	r3, [pc, #12]	; 129fc <strspn@plt+0x1c30>
   129ec:	cmp	r0, #0
   129f0:	moveq	r0, r3
   129f4:	ldr	r0, [r0]
   129f8:	bx	lr
   129fc:	andeq	r5, r2, r0, asr r2
   12a00:	ldr	r3, [pc, #12]	; 12a14 <strspn@plt+0x1c48>
   12a04:	cmp	r0, #0
   12a08:	moveq	r0, r3
   12a0c:	str	r1, [r0]
   12a10:	bx	lr
   12a14:	andeq	r5, r2, r0, asr r2
   12a18:	ldr	r3, [pc, #52]	; 12a54 <strspn@plt+0x1c88>
   12a1c:	cmp	r0, #0
   12a20:	moveq	r0, r3
   12a24:	add	r3, r0, #8
   12a28:	push	{lr}		; (str lr, [sp, #-4]!)
   12a2c:	lsr	lr, r1, #5
   12a30:	and	r1, r1, #31
   12a34:	ldr	ip, [r3, lr, lsl #2]
   12a38:	lsr	r0, ip, r1
   12a3c:	eor	r2, r2, r0
   12a40:	and	r2, r2, #1
   12a44:	and	r0, r0, #1
   12a48:	eor	r1, ip, r2, lsl r1
   12a4c:	str	r1, [r3, lr, lsl #2]
   12a50:	pop	{pc}		; (ldr pc, [sp], #4)
   12a54:	andeq	r5, r2, r0, asr r2
   12a58:	ldr	r3, [pc, #16]	; 12a70 <strspn@plt+0x1ca4>
   12a5c:	cmp	r0, #0
   12a60:	movne	r3, r0
   12a64:	ldr	r0, [r3, #4]
   12a68:	str	r1, [r3, #4]
   12a6c:	bx	lr
   12a70:	andeq	r5, r2, r0, asr r2
   12a74:	ldr	r3, [pc, #44]	; 12aa8 <strspn@plt+0x1cdc>
   12a78:	cmp	r0, #0
   12a7c:	moveq	r0, r3
   12a80:	mov	r3, #10
   12a84:	cmp	r2, #0
   12a88:	cmpne	r1, #0
   12a8c:	str	r3, [r0]
   12a90:	bne	12a9c <strspn@plt+0x1cd0>
   12a94:	push	{r4, lr}
   12a98:	bl	10db4 <abort@plt>
   12a9c:	str	r1, [r0, #40]	; 0x28
   12aa0:	str	r2, [r0, #44]	; 0x2c
   12aa4:	bx	lr
   12aa8:	andeq	r5, r2, r0, asr r2
   12aac:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12ab0:	sub	sp, sp, #24
   12ab4:	mov	sl, r3
   12ab8:	ldr	r4, [sp, #56]	; 0x38
   12abc:	ldr	r3, [pc, #100]	; 12b28 <strspn@plt+0x1d5c>
   12ac0:	cmp	r4, #0
   12ac4:	moveq	r4, r3
   12ac8:	mov	r7, r0
   12acc:	mov	r8, r1
   12ad0:	mov	r9, r2
   12ad4:	bl	10d0c <__errno_location@plt>
   12ad8:	ldr	r3, [r4, #44]	; 0x2c
   12adc:	mov	r2, r9
   12ae0:	mov	r1, r8
   12ae4:	ldr	r6, [r0]
   12ae8:	str	r3, [sp, #16]
   12aec:	ldr	r3, [r4, #40]	; 0x28
   12af0:	mov	r5, r0
   12af4:	str	r3, [sp, #12]
   12af8:	add	r3, r4, #8
   12afc:	str	r3, [sp, #8]
   12b00:	ldr	r3, [r4, #4]
   12b04:	mov	r0, r7
   12b08:	str	r3, [sp, #4]
   12b0c:	ldr	r3, [r4]
   12b10:	str	r3, [sp]
   12b14:	mov	r3, sl
   12b18:	bl	11ad8 <strspn@plt+0xd0c>
   12b1c:	str	r6, [r5]
   12b20:	add	sp, sp, #24
   12b24:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12b28:	andeq	r5, r2, r0, asr r2
   12b2c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12b30:	cmp	r3, #0
   12b34:	sub	sp, sp, #44	; 0x2c
   12b38:	ldr	r4, [pc, #188]	; 12bfc <strspn@plt+0x1e30>
   12b3c:	mov	r6, r2
   12b40:	movne	r4, r3
   12b44:	mov	sl, r1
   12b48:	mov	r9, r0
   12b4c:	bl	10d0c <__errno_location@plt>
   12b50:	ldr	r5, [r4, #4]
   12b54:	add	fp, r4, #8
   12b58:	cmp	r6, #0
   12b5c:	orreq	r5, r5, #1
   12b60:	mov	r1, #0
   12b64:	mov	r2, r9
   12b68:	ldr	r3, [r0]
   12b6c:	mov	r8, r0
   12b70:	str	r3, [sp, #28]
   12b74:	ldr	r3, [r4, #44]	; 0x2c
   12b78:	mov	r0, r1
   12b7c:	str	r3, [sp, #16]
   12b80:	ldr	r3, [r4, #40]	; 0x28
   12b84:	stmib	sp, {r5, fp}
   12b88:	str	r3, [sp, #12]
   12b8c:	ldr	r3, [r4]
   12b90:	str	r3, [sp]
   12b94:	mov	r3, sl
   12b98:	bl	11ad8 <strspn@plt+0xd0c>
   12b9c:	add	r1, r0, #1
   12ba0:	mov	r7, r0
   12ba4:	mov	r0, r1
   12ba8:	str	r1, [sp, #36]	; 0x24
   12bac:	bl	13458 <strspn@plt+0x268c>
   12bb0:	ldr	r3, [r4, #44]	; 0x2c
   12bb4:	mov	r2, r9
   12bb8:	str	r3, [sp, #16]
   12bbc:	ldr	r3, [r4, #40]	; 0x28
   12bc0:	stmib	sp, {r5, fp}
   12bc4:	str	r3, [sp, #12]
   12bc8:	ldr	r3, [r4]
   12bcc:	ldr	r1, [sp, #36]	; 0x24
   12bd0:	str	r3, [sp]
   12bd4:	mov	r3, sl
   12bd8:	str	r0, [sp, #32]
   12bdc:	bl	11ad8 <strspn@plt+0xd0c>
   12be0:	ldr	r3, [sp, #28]
   12be4:	cmp	r6, #0
   12be8:	str	r3, [r8]
   12bec:	ldr	r0, [sp, #32]
   12bf0:	strne	r7, [r6]
   12bf4:	add	sp, sp, #44	; 0x2c
   12bf8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12bfc:	andeq	r5, r2, r0, asr r2
   12c00:	mov	r3, r2
   12c04:	mov	r2, #0
   12c08:	b	12b2c <strspn@plt+0x1d60>
   12c0c:	push	{r4, r5, r6, r7, r8, lr}
   12c10:	mov	r6, #1
   12c14:	ldr	r4, [pc, #104]	; 12c84 <strspn@plt+0x1eb8>
   12c18:	ldr	r5, [r4]
   12c1c:	add	r7, r5, #12
   12c20:	ldr	r3, [r4, #4]
   12c24:	add	r7, r7, #8
   12c28:	cmp	r6, r3
   12c2c:	blt	12c74 <strspn@plt+0x1ea8>
   12c30:	ldr	r0, [r5, #4]
   12c34:	ldr	r6, [pc, #76]	; 12c88 <strspn@plt+0x1ebc>
   12c38:	cmp	r0, r6
   12c3c:	beq	12c50 <strspn@plt+0x1e84>
   12c40:	bl	13b50 <strspn@plt+0x2d84>
   12c44:	mov	r3, #256	; 0x100
   12c48:	str	r3, [r4, #8]
   12c4c:	str	r6, [r4, #12]
   12c50:	ldr	r6, [pc, #52]	; 12c8c <strspn@plt+0x1ec0>
   12c54:	cmp	r5, r6
   12c58:	beq	12c68 <strspn@plt+0x1e9c>
   12c5c:	mov	r0, r5
   12c60:	bl	13b50 <strspn@plt+0x2d84>
   12c64:	str	r6, [r4]
   12c68:	mov	r3, #1
   12c6c:	str	r3, [r4, #4]
   12c70:	pop	{r4, r5, r6, r7, r8, pc}
   12c74:	ldr	r0, [r7, #-8]
   12c78:	bl	13b50 <strspn@plt+0x2d84>
   12c7c:	add	r6, r6, #1
   12c80:	b	12c20 <strspn@plt+0x1e54>
   12c84:	andeq	r5, r2, r0, ror #1
   12c88:	andeq	r5, r2, r0, asr r1
   12c8c:	andeq	r5, r2, r8, ror #1
   12c90:	ldr	r3, [pc, #4]	; 12c9c <strspn@plt+0x1ed0>
   12c94:	mvn	r2, #0
   12c98:	b	1280c <strspn@plt+0x1a40>
   12c9c:	andeq	r5, r2, r0, asr r2
   12ca0:	ldr	r3, [pc]	; 12ca8 <strspn@plt+0x1edc>
   12ca4:	b	1280c <strspn@plt+0x1a40>
   12ca8:	andeq	r5, r2, r0, asr r2
   12cac:	mov	r1, r0
   12cb0:	mov	r0, #0
   12cb4:	b	12c90 <strspn@plt+0x1ec4>
   12cb8:	mov	r2, r1
   12cbc:	mov	r1, r0
   12cc0:	mov	r0, #0
   12cc4:	b	12ca0 <strspn@plt+0x1ed4>
   12cc8:	push	{r4, r5, lr}
   12ccc:	sub	sp, sp, #52	; 0x34
   12cd0:	mov	r5, r2
   12cd4:	mov	r4, r0
   12cd8:	mov	r0, sp
   12cdc:	bl	11994 <strspn@plt+0xbc8>
   12ce0:	mov	r3, sp
   12ce4:	mvn	r2, #0
   12ce8:	mov	r1, r5
   12cec:	mov	r0, r4
   12cf0:	bl	1280c <strspn@plt+0x1a40>
   12cf4:	add	sp, sp, #52	; 0x34
   12cf8:	pop	{r4, r5, pc}
   12cfc:	push	{r4, r5, r6, lr}
   12d00:	sub	sp, sp, #48	; 0x30
   12d04:	mov	r5, r2
   12d08:	mov	r6, r3
   12d0c:	mov	r4, r0
   12d10:	mov	r0, sp
   12d14:	bl	11994 <strspn@plt+0xbc8>
   12d18:	mov	r3, sp
   12d1c:	mov	r2, r6
   12d20:	mov	r1, r5
   12d24:	mov	r0, r4
   12d28:	bl	1280c <strspn@plt+0x1a40>
   12d2c:	add	sp, sp, #48	; 0x30
   12d30:	pop	{r4, r5, r6, pc}
   12d34:	mov	r2, r1
   12d38:	mov	r1, r0
   12d3c:	mov	r0, #0
   12d40:	b	12cc8 <strspn@plt+0x1efc>
   12d44:	mov	r3, r2
   12d48:	mov	r2, r1
   12d4c:	mov	r1, r0
   12d50:	mov	r0, #0
   12d54:	b	12cfc <strspn@plt+0x1f30>
   12d58:	push	{r4, r5, r6, lr}
   12d5c:	mov	r4, r0
   12d60:	ldr	lr, [pc, #80]	; 12db8 <strspn@plt+0x1fec>
   12d64:	mov	r5, r1
   12d68:	mov	r6, r2
   12d6c:	ldm	lr!, {r0, r1, r2, r3}
   12d70:	sub	sp, sp, #48	; 0x30
   12d74:	mov	ip, sp
   12d78:	stmia	ip!, {r0, r1, r2, r3}
   12d7c:	ldm	lr!, {r0, r1, r2, r3}
   12d80:	stmia	ip!, {r0, r1, r2, r3}
   12d84:	ldm	lr, {r0, r1, r2, r3}
   12d88:	stm	ip, {r0, r1, r2, r3}
   12d8c:	mov	r1, r6
   12d90:	mov	r2, #1
   12d94:	mov	r0, sp
   12d98:	bl	12a18 <strspn@plt+0x1c4c>
   12d9c:	mov	r3, sp
   12da0:	mov	r2, r5
   12da4:	mov	r1, r4
   12da8:	mov	r0, #0
   12dac:	bl	1280c <strspn@plt+0x1a40>
   12db0:	add	sp, sp, #48	; 0x30
   12db4:	pop	{r4, r5, r6, pc}
   12db8:	andeq	r5, r2, r0, asr r2
   12dbc:	mov	r2, r1
   12dc0:	mvn	r1, #0
   12dc4:	b	12d58 <strspn@plt+0x1f8c>
   12dc8:	mov	r1, #58	; 0x3a
   12dcc:	b	12dbc <strspn@plt+0x1ff0>
   12dd0:	mov	r2, #58	; 0x3a
   12dd4:	b	12d58 <strspn@plt+0x1f8c>
   12dd8:	push	{r4, r5, lr}
   12ddc:	sub	sp, sp, #100	; 0x64
   12de0:	mov	r4, r0
   12de4:	mov	r0, sp
   12de8:	mov	r5, r2
   12dec:	bl	11994 <strspn@plt+0xbc8>
   12df0:	mov	ip, sp
   12df4:	add	lr, sp, #48	; 0x30
   12df8:	ldm	ip!, {r0, r1, r2, r3}
   12dfc:	stmia	lr!, {r0, r1, r2, r3}
   12e00:	ldm	ip!, {r0, r1, r2, r3}
   12e04:	stmia	lr!, {r0, r1, r2, r3}
   12e08:	ldm	ip, {r0, r1, r2, r3}
   12e0c:	stm	lr, {r0, r1, r2, r3}
   12e10:	mov	r2, #1
   12e14:	mov	r1, #58	; 0x3a
   12e18:	add	r0, sp, #48	; 0x30
   12e1c:	bl	12a18 <strspn@plt+0x1c4c>
   12e20:	add	r3, sp, #48	; 0x30
   12e24:	mvn	r2, #0
   12e28:	mov	r1, r5
   12e2c:	mov	r0, r4
   12e30:	bl	1280c <strspn@plt+0x1a40>
   12e34:	add	sp, sp, #100	; 0x64
   12e38:	pop	{r4, r5, pc}
   12e3c:	push	{r4, r5, r6, r7, lr}
   12e40:	mov	r4, r0
   12e44:	ldr	lr, [pc, #84]	; 12ea0 <strspn@plt+0x20d4>
   12e48:	mov	r6, r1
   12e4c:	mov	r7, r2
   12e50:	mov	r5, r3
   12e54:	ldm	lr!, {r0, r1, r2, r3}
   12e58:	sub	sp, sp, #52	; 0x34
   12e5c:	mov	ip, sp
   12e60:	stmia	ip!, {r0, r1, r2, r3}
   12e64:	ldm	lr!, {r0, r1, r2, r3}
   12e68:	stmia	ip!, {r0, r1, r2, r3}
   12e6c:	ldm	lr, {r0, r1, r2, r3}
   12e70:	stm	ip, {r0, r1, r2, r3}
   12e74:	mov	r2, r7
   12e78:	mov	r1, r6
   12e7c:	mov	r0, sp
   12e80:	bl	12a74 <strspn@plt+0x1ca8>
   12e84:	mov	r3, sp
   12e88:	ldr	r2, [sp, #72]	; 0x48
   12e8c:	mov	r1, r5
   12e90:	mov	r0, r4
   12e94:	bl	1280c <strspn@plt+0x1a40>
   12e98:	add	sp, sp, #52	; 0x34
   12e9c:	pop	{r4, r5, r6, r7, pc}
   12ea0:	andeq	r5, r2, r0, asr r2
   12ea4:	mvn	ip, #0
   12ea8:	push	{r0, r1, r2, lr}
   12eac:	str	ip, [sp]
   12eb0:	bl	12e3c <strspn@plt+0x2070>
   12eb4:	add	sp, sp, #12
   12eb8:	pop	{pc}		; (ldr pc, [sp], #4)
   12ebc:	mov	r3, r2
   12ec0:	mov	r2, r1
   12ec4:	mov	r1, r0
   12ec8:	mov	r0, #0
   12ecc:	b	12ea4 <strspn@plt+0x20d8>
   12ed0:	push	{r0, r1, r2, lr}
   12ed4:	str	r3, [sp]
   12ed8:	mov	r3, r2
   12edc:	mov	r2, r1
   12ee0:	mov	r1, r0
   12ee4:	mov	r0, #0
   12ee8:	bl	12e3c <strspn@plt+0x2070>
   12eec:	add	sp, sp, #12
   12ef0:	pop	{pc}		; (ldr pc, [sp], #4)
   12ef4:	ldr	r3, [pc]	; 12efc <strspn@plt+0x2130>
   12ef8:	b	1280c <strspn@plt+0x1a40>
   12efc:	strdeq	r5, [r2], -r0
   12f00:	mov	r2, r1
   12f04:	mov	r1, r0
   12f08:	mov	r0, #0
   12f0c:	b	12ef4 <strspn@plt+0x2128>
   12f10:	mvn	r2, #0
   12f14:	b	12ef4 <strspn@plt+0x2128>
   12f18:	mov	r1, r0
   12f1c:	mov	r0, #0
   12f20:	b	12f10 <strspn@plt+0x2144>
   12f24:	push	{r4, r5, r6, lr}
   12f28:	sub	sp, sp, #32
   12f2c:	cmp	r1, #0
   12f30:	mov	r5, r0
   12f34:	ldr	r4, [sp, #48]	; 0x30
   12f38:	ldr	r6, [sp, #52]	; 0x34
   12f3c:	beq	12ff0 <strspn@plt+0x2224>
   12f40:	stm	sp, {r2, r3}
   12f44:	mov	r3, r1
   12f48:	ldr	r2, [pc, #860]	; 132ac <strspn@plt+0x24e0>
   12f4c:	mov	r1, #1
   12f50:	bl	10d48 <__fprintf_chk@plt>
   12f54:	mov	r2, #5
   12f58:	ldr	r1, [pc, #848]	; 132b0 <strspn@plt+0x24e4>
   12f5c:	mov	r0, #0
   12f60:	bl	10c28 <dcgettext@plt>
   12f64:	ldr	r3, [pc, #840]	; 132b4 <strspn@plt+0x24e8>
   12f68:	ldr	r2, [pc, #840]	; 132b8 <strspn@plt+0x24ec>
   12f6c:	str	r3, [sp]
   12f70:	mov	r1, #1
   12f74:	mov	r3, r0
   12f78:	mov	r0, r5
   12f7c:	bl	10d48 <__fprintf_chk@plt>
   12f80:	mov	r1, r5
   12f84:	mov	r0, #10
   12f88:	bl	10c1c <fputc_unlocked@plt>
   12f8c:	mov	r2, #5
   12f90:	ldr	r1, [pc, #804]	; 132bc <strspn@plt+0x24f0>
   12f94:	mov	r0, #0
   12f98:	bl	10c28 <dcgettext@plt>
   12f9c:	mov	r1, #1
   12fa0:	ldr	r3, [pc, #792]	; 132c0 <strspn@plt+0x24f4>
   12fa4:	mov	r2, r0
   12fa8:	mov	r0, r5
   12fac:	bl	10d48 <__fprintf_chk@plt>
   12fb0:	mov	r1, r5
   12fb4:	mov	r0, #10
   12fb8:	bl	10c1c <fputc_unlocked@plt>
   12fbc:	cmp	r6, #9
   12fc0:	ldrls	pc, [pc, r6, lsl #2]
   12fc4:	b	132a0 <strspn@plt+0x24d4>
   12fc8:	andeq	r3, r1, r0, ror #1
   12fcc:	andeq	r3, r1, r8
   12fd0:	andeq	r3, r1, r4, lsr r0
   12fd4:	andeq	r3, r1, r8, rrx
   12fd8:	andeq	r3, r1, r4, lsr #1
   12fdc:	andeq	r3, r1, r8, ror #1
   12fe0:	andeq	r3, r1, r0, lsr r1
   12fe4:	andeq	r3, r1, r0, lsl #3
   12fe8:	ldrdeq	r3, [r1], -r8
   12fec:	andeq	r3, r1, r8, lsr r2
   12ff0:	str	r3, [sp]
   12ff4:	mov	r1, #1
   12ff8:	mov	r3, r2
   12ffc:	ldr	r2, [pc, #704]	; 132c4 <strspn@plt+0x24f8>
   13000:	bl	10d48 <__fprintf_chk@plt>
   13004:	b	12f54 <strspn@plt+0x2188>
   13008:	mov	r2, #5
   1300c:	ldr	r1, [pc, #692]	; 132c8 <strspn@plt+0x24fc>
   13010:	mov	r0, #0
   13014:	bl	10c28 <dcgettext@plt>
   13018:	ldr	r3, [r4]
   1301c:	mov	r1, #1
   13020:	mov	r2, r0
   13024:	mov	r0, r5
   13028:	add	sp, sp, #32
   1302c:	pop	{r4, r5, r6, lr}
   13030:	b	10d48 <__fprintf_chk@plt>
   13034:	mov	r2, #5
   13038:	ldr	r1, [pc, #652]	; 132cc <strspn@plt+0x2500>
   1303c:	mov	r0, #0
   13040:	bl	10c28 <dcgettext@plt>
   13044:	ldr	r3, [r4, #4]
   13048:	mov	r1, #1
   1304c:	str	r3, [sp, #48]	; 0x30
   13050:	ldr	r3, [r4]
   13054:	mov	r2, r0
   13058:	mov	r0, r5
   1305c:	add	sp, sp, #32
   13060:	pop	{r4, r5, r6, lr}
   13064:	b	10d48 <__fprintf_chk@plt>
   13068:	mov	r2, #5
   1306c:	ldr	r1, [pc, #604]	; 132d0 <strspn@plt+0x2504>
   13070:	mov	r0, #0
   13074:	bl	10c28 <dcgettext@plt>
   13078:	ldr	r3, [r4, #8]
   1307c:	mov	r1, #1
   13080:	str	r3, [sp, #52]	; 0x34
   13084:	ldr	r3, [r4, #4]
   13088:	str	r3, [sp, #48]	; 0x30
   1308c:	ldr	r3, [r4]
   13090:	mov	r2, r0
   13094:	mov	r0, r5
   13098:	add	sp, sp, #32
   1309c:	pop	{r4, r5, r6, lr}
   130a0:	b	10d48 <__fprintf_chk@plt>
   130a4:	mov	r2, #5
   130a8:	ldr	r1, [pc, #548]	; 132d4 <strspn@plt+0x2508>
   130ac:	mov	r0, #0
   130b0:	bl	10c28 <dcgettext@plt>
   130b4:	ldr	r3, [r4, #12]
   130b8:	mov	r1, #1
   130bc:	str	r3, [sp, #8]
   130c0:	ldr	r3, [r4, #8]
   130c4:	str	r3, [sp, #4]
   130c8:	ldr	r3, [r4, #4]
   130cc:	str	r3, [sp]
   130d0:	ldr	r3, [r4]
   130d4:	mov	r2, r0
   130d8:	mov	r0, r5
   130dc:	bl	10d48 <__fprintf_chk@plt>
   130e0:	add	sp, sp, #32
   130e4:	pop	{r4, r5, r6, pc}
   130e8:	mov	r2, #5
   130ec:	ldr	r1, [pc, #484]	; 132d8 <strspn@plt+0x250c>
   130f0:	mov	r0, #0
   130f4:	bl	10c28 <dcgettext@plt>
   130f8:	ldr	r3, [r4, #16]
   130fc:	mov	r1, #1
   13100:	str	r3, [sp, #12]
   13104:	ldr	r3, [r4, #12]
   13108:	str	r3, [sp, #8]
   1310c:	ldr	r3, [r4, #8]
   13110:	str	r3, [sp, #4]
   13114:	ldr	r3, [r4, #4]
   13118:	str	r3, [sp]
   1311c:	ldr	r3, [r4]
   13120:	mov	r2, r0
   13124:	mov	r0, r5
   13128:	bl	10d48 <__fprintf_chk@plt>
   1312c:	b	130e0 <strspn@plt+0x2314>
   13130:	mov	r2, #5
   13134:	ldr	r1, [pc, #416]	; 132dc <strspn@plt+0x2510>
   13138:	mov	r0, #0
   1313c:	bl	10c28 <dcgettext@plt>
   13140:	ldr	r3, [r4, #20]
   13144:	mov	r1, #1
   13148:	str	r3, [sp, #16]
   1314c:	ldr	r3, [r4, #16]
   13150:	str	r3, [sp, #12]
   13154:	ldr	r3, [r4, #12]
   13158:	str	r3, [sp, #8]
   1315c:	ldr	r3, [r4, #8]
   13160:	str	r3, [sp, #4]
   13164:	ldr	r3, [r4, #4]
   13168:	str	r3, [sp]
   1316c:	ldr	r3, [r4]
   13170:	mov	r2, r0
   13174:	mov	r0, r5
   13178:	bl	10d48 <__fprintf_chk@plt>
   1317c:	b	130e0 <strspn@plt+0x2314>
   13180:	mov	r2, #5
   13184:	ldr	r1, [pc, #340]	; 132e0 <strspn@plt+0x2514>
   13188:	mov	r0, #0
   1318c:	bl	10c28 <dcgettext@plt>
   13190:	ldr	r3, [r4, #24]
   13194:	mov	r1, #1
   13198:	str	r3, [sp, #20]
   1319c:	ldr	r3, [r4, #20]
   131a0:	str	r3, [sp, #16]
   131a4:	ldr	r3, [r4, #16]
   131a8:	str	r3, [sp, #12]
   131ac:	ldr	r3, [r4, #12]
   131b0:	str	r3, [sp, #8]
   131b4:	ldr	r3, [r4, #8]
   131b8:	str	r3, [sp, #4]
   131bc:	ldr	r3, [r4, #4]
   131c0:	str	r3, [sp]
   131c4:	ldr	r3, [r4]
   131c8:	mov	r2, r0
   131cc:	mov	r0, r5
   131d0:	bl	10d48 <__fprintf_chk@plt>
   131d4:	b	130e0 <strspn@plt+0x2314>
   131d8:	mov	r2, #5
   131dc:	ldr	r1, [pc, #256]	; 132e4 <strspn@plt+0x2518>
   131e0:	mov	r0, #0
   131e4:	bl	10c28 <dcgettext@plt>
   131e8:	ldr	r3, [r4, #28]
   131ec:	mov	r1, #1
   131f0:	str	r3, [sp, #24]
   131f4:	ldr	r3, [r4, #24]
   131f8:	str	r3, [sp, #20]
   131fc:	ldr	r3, [r4, #20]
   13200:	str	r3, [sp, #16]
   13204:	ldr	r3, [r4, #16]
   13208:	str	r3, [sp, #12]
   1320c:	ldr	r3, [r4, #12]
   13210:	str	r3, [sp, #8]
   13214:	ldr	r3, [r4, #8]
   13218:	str	r3, [sp, #4]
   1321c:	ldr	r3, [r4, #4]
   13220:	str	r3, [sp]
   13224:	ldr	r3, [r4]
   13228:	mov	r2, r0
   1322c:	mov	r0, r5
   13230:	bl	10d48 <__fprintf_chk@plt>
   13234:	b	130e0 <strspn@plt+0x2314>
   13238:	ldr	r1, [pc, #168]	; 132e8 <strspn@plt+0x251c>
   1323c:	mov	r2, #5
   13240:	mov	r0, #0
   13244:	bl	10c28 <dcgettext@plt>
   13248:	ldr	r3, [r4, #32]
   1324c:	mov	r1, #1
   13250:	str	r3, [sp, #28]
   13254:	ldr	r3, [r4, #28]
   13258:	str	r3, [sp, #24]
   1325c:	ldr	r3, [r4, #24]
   13260:	str	r3, [sp, #20]
   13264:	ldr	r3, [r4, #20]
   13268:	str	r3, [sp, #16]
   1326c:	ldr	r3, [r4, #16]
   13270:	str	r3, [sp, #12]
   13274:	ldr	r3, [r4, #12]
   13278:	str	r3, [sp, #8]
   1327c:	ldr	r3, [r4, #8]
   13280:	str	r3, [sp, #4]
   13284:	ldr	r3, [r4, #4]
   13288:	str	r3, [sp]
   1328c:	ldr	r3, [r4]
   13290:	mov	r2, r0
   13294:	mov	r0, r5
   13298:	bl	10d48 <__fprintf_chk@plt>
   1329c:	b	130e0 <strspn@plt+0x2314>
   132a0:	mov	r2, #5
   132a4:	ldr	r1, [pc, #64]	; 132ec <strspn@plt+0x2520>
   132a8:	b	13240 <strspn@plt+0x2474>
   132ac:	andeq	r4, r1, pc, lsr #17
   132b0:	andeq	r4, r1, r2, asr #17
   132b4:	andeq	r0, r0, r6, ror #15
   132b8:	muleq	r1, r0, fp
   132bc:	andeq	r4, r1, r6, asr #17
   132c0:	andeq	r4, r1, r1, ror r9
   132c4:			; <UNDEFINED> instruction: 0x000148bb
   132c8:	muleq	r1, r3, r9
   132cc:	andeq	r4, r1, r3, lsr #19
   132d0:			; <UNDEFINED> instruction: 0x000149ba
   132d4:	ldrdeq	r4, [r1], -r6
   132d8:	strdeq	r4, [r1], -r6
   132dc:	andeq	r4, r1, sl, lsl sl
   132e0:	andeq	r4, r1, r2, asr #20
   132e4:	andeq	r4, r1, lr, ror #20
   132e8:	muleq	r1, lr, sl
   132ec:	ldrdeq	r4, [r1], -r2
   132f0:	push	{r0, r1, r4, lr}
   132f4:	mov	ip, #0
   132f8:	ldr	lr, [sp, #16]
   132fc:	ldr	r4, [lr, ip, lsl #2]
   13300:	cmp	r4, #0
   13304:	bne	1331c <strspn@plt+0x2550>
   13308:	str	ip, [sp, #4]
   1330c:	str	lr, [sp]
   13310:	bl	12f24 <strspn@plt+0x2158>
   13314:	add	sp, sp, #8
   13318:	pop	{r4, pc}
   1331c:	add	ip, ip, #1
   13320:	b	132fc <strspn@plt+0x2530>
   13324:	push	{r4, r5, lr}
   13328:	sub	sp, sp, #52	; 0x34
   1332c:	mov	ip, #0
   13330:	ldr	r5, [sp, #64]	; 0x40
   13334:	add	lr, sp, #8
   13338:	ldr	r4, [r5, ip, lsl #2]
   1333c:	cmp	r4, #0
   13340:	str	r4, [lr, ip, lsl #2]
   13344:	beq	13354 <strspn@plt+0x2588>
   13348:	add	ip, ip, #1
   1334c:	cmp	ip, #10
   13350:	bne	13338 <strspn@plt+0x256c>
   13354:	str	ip, [sp, #4]
   13358:	str	lr, [sp]
   1335c:	bl	12f24 <strspn@plt+0x2158>
   13360:	add	sp, sp, #52	; 0x34
   13364:	pop	{r4, r5, pc}
   13368:	push	{r3}		; (str r3, [sp, #-4]!)
   1336c:	push	{r0, r1, r2, r3, lr}
   13370:	add	r3, sp, #24
   13374:	str	r3, [sp, #12]
   13378:	str	r3, [sp]
   1337c:	ldr	r3, [sp, #20]
   13380:	bl	13324 <strspn@plt+0x2558>
   13384:	add	sp, sp, #16
   13388:	pop	{lr}		; (ldr lr, [sp], #4)
   1338c:	add	sp, sp, #4
   13390:	bx	lr
   13394:	ldr	r3, [pc, #116]	; 13410 <strspn@plt+0x2644>
   13398:	push	{r4, lr}
   1339c:	mov	r0, #10
   133a0:	ldr	r1, [r3]
   133a4:	bl	10c1c <fputc_unlocked@plt>
   133a8:	mov	r2, #5
   133ac:	ldr	r1, [pc, #96]	; 13414 <strspn@plt+0x2648>
   133b0:	mov	r0, #0
   133b4:	bl	10c28 <dcgettext@plt>
   133b8:	ldr	r2, [pc, #88]	; 13418 <strspn@plt+0x264c>
   133bc:	mov	r1, r0
   133c0:	mov	r0, #1
   133c4:	bl	10d30 <__printf_chk@plt>
   133c8:	mov	r2, #5
   133cc:	ldr	r1, [pc, #72]	; 1341c <strspn@plt+0x2650>
   133d0:	mov	r0, #0
   133d4:	bl	10c28 <dcgettext@plt>
   133d8:	ldr	r3, [pc, #64]	; 13420 <strspn@plt+0x2654>
   133dc:	ldr	r2, [pc, #64]	; 13424 <strspn@plt+0x2658>
   133e0:	mov	r1, r0
   133e4:	mov	r0, #1
   133e8:	bl	10d30 <__printf_chk@plt>
   133ec:	mov	r2, #5
   133f0:	ldr	r1, [pc, #48]	; 13428 <strspn@plt+0x265c>
   133f4:	mov	r0, #0
   133f8:	bl	10c28 <dcgettext@plt>
   133fc:	ldr	r2, [pc, #40]	; 1342c <strspn@plt+0x2660>
   13400:	pop	{r4, lr}
   13404:	mov	r1, r0
   13408:	mov	r0, #1
   1340c:	b	10d30 <__printf_chk@plt>
   13410:	andeq	r5, r2, r4, lsr r1
   13414:	andeq	r4, r1, lr, lsl #22
   13418:	andeq	r4, r1, r2, lsr #22
   1341c:	andeq	r4, r1, r8, lsr fp
   13420:			; <UNDEFINED> instruction: 0x000144b0
   13424:	ldrdeq	r4, [r1], -r8
   13428:	andeq	r4, r1, ip, asr #22
   1342c:	andeq	r4, r1, r3, ror fp
   13430:	push	{r4, lr}
   13434:	bl	1394c <strspn@plt+0x2b80>
   13438:	cmp	r0, #0
   1343c:	popne	{r4, pc}
   13440:	bl	138c4 <strspn@plt+0x2af8>
   13444:	push	{r4, lr}
   13448:	bl	1394c <strspn@plt+0x2b80>
   1344c:	cmp	r0, #0
   13450:	popne	{r4, pc}
   13454:	bl	138c4 <strspn@plt+0x2af8>
   13458:	b	13430 <strspn@plt+0x2664>
   1345c:	push	{r4, r5, r6, lr}
   13460:	mov	r5, r0
   13464:	mov	r4, r1
   13468:	bl	1398c <strspn@plt+0x2bc0>
   1346c:	cmp	r0, #0
   13470:	popne	{r4, r5, r6, pc}
   13474:	adds	r4, r4, #0
   13478:	movne	r4, #1
   1347c:	cmp	r5, #0
   13480:	orreq	r4, r4, #1
   13484:	cmp	r4, #0
   13488:	popeq	{r4, r5, r6, pc}
   1348c:	bl	138c4 <strspn@plt+0x2af8>
   13490:	push	{r4, lr}
   13494:	cmp	r1, #0
   13498:	orreq	r1, r1, #1
   1349c:	bl	1398c <strspn@plt+0x2bc0>
   134a0:	cmp	r0, #0
   134a4:	popne	{r4, pc}
   134a8:	bl	138c4 <strspn@plt+0x2af8>
   134ac:	push	{r4, r5, r6, lr}
   134b0:	mov	r6, r0
   134b4:	mov	r5, r1
   134b8:	mov	r4, r2
   134bc:	bl	13cc8 <strspn@plt+0x2efc>
   134c0:	cmp	r0, #0
   134c4:	popne	{r4, r5, r6, pc}
   134c8:	cmp	r6, #0
   134cc:	beq	134dc <strspn@plt+0x2710>
   134d0:	cmp	r5, #0
   134d4:	cmpne	r4, #0
   134d8:	popeq	{r4, r5, r6, pc}
   134dc:	bl	138c4 <strspn@plt+0x2af8>
   134e0:	b	134ac <strspn@plt+0x26e0>
   134e4:	cmp	r2, #0
   134e8:	cmpne	r1, #0
   134ec:	moveq	r2, #1
   134f0:	moveq	r1, r2
   134f4:	push	{r4, lr}
   134f8:	bl	13cc8 <strspn@plt+0x2efc>
   134fc:	cmp	r0, #0
   13500:	popne	{r4, pc}
   13504:	bl	138c4 <strspn@plt+0x2af8>
   13508:	mov	r2, r1
   1350c:	mov	r1, r0
   13510:	mov	r0, #0
   13514:	b	134ac <strspn@plt+0x26e0>
   13518:	mov	r2, r1
   1351c:	mov	r1, r0
   13520:	mov	r0, #0
   13524:	b	134e4 <strspn@plt+0x2718>
   13528:	push	{r4, r5, r6, r7, r8, lr}
   1352c:	subs	r7, r0, #0
   13530:	mov	r5, r1
   13534:	mov	r6, r2
   13538:	ldr	r4, [r1]
   1353c:	bne	13578 <strspn@plt+0x27ac>
   13540:	cmp	r4, #0
   13544:	bne	13560 <strspn@plt+0x2794>
   13548:	mov	r1, r2
   1354c:	mov	r0, #64	; 0x40
   13550:	bl	13d98 <strspn@plt+0x2fcc>
   13554:	cmp	r0, #0
   13558:	movne	r4, r0
   1355c:	addeq	r4, r0, #1
   13560:	mov	r2, r6
   13564:	mov	r1, r4
   13568:	mov	r0, r7
   1356c:	bl	134ac <strspn@plt+0x26e0>
   13570:	str	r4, [r5]
   13574:	pop	{r4, r5, r6, r7, r8, pc}
   13578:	lsr	r2, r4, #1
   1357c:	add	r3, r2, #1
   13580:	mvn	r3, r3
   13584:	cmp	r4, r3
   13588:	addls	r4, r4, #1
   1358c:	addls	r4, r4, r2
   13590:	bls	13560 <strspn@plt+0x2794>
   13594:	bl	138c4 <strspn@plt+0x2af8>
   13598:	mov	r2, #1
   1359c:	b	13528 <strspn@plt+0x275c>
   135a0:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   135a4:	mov	sl, r0
   135a8:	ldr	r8, [r1]
   135ac:	mov	fp, r1
   135b0:	mov	r5, r2
   135b4:	asrs	r4, r8, #1
   135b8:	mov	r9, r3
   135bc:	ldr	r7, [sp, #48]	; 0x30
   135c0:	bpl	1365c <strspn@plt+0x2890>
   135c4:	rsb	r2, r4, #-2147483648	; 0x80000000
   135c8:	cmp	r8, r2
   135cc:	movge	r2, #0
   135d0:	movlt	r2, #1
   135d4:	mvn	r3, r9
   135d8:	cmp	r2, #0
   135dc:	lsr	r3, r3, #31
   135e0:	addeq	r4, r4, r8
   135e4:	mvnne	r4, #-2147483648	; 0x80000000
   135e8:	mov	r0, r3
   135ec:	cmp	r9, r4
   135f0:	movge	r0, #0
   135f4:	andlt	r0, r0, #1
   135f8:	cmp	r0, #0
   135fc:	str	r3, [sp, #4]
   13600:	bne	137d0 <strspn@plt+0x2a04>
   13604:	cmp	r7, #0
   13608:	bge	1371c <strspn@plt+0x2950>
   1360c:	cmp	r4, #0
   13610:	bge	13674 <strspn@plt+0x28a8>
   13614:	mov	r1, r7
   13618:	mvn	r0, #-2147483648	; 0x80000000
   1361c:	bl	13fa4 <strspn@plt+0x31d8>
   13620:	cmp	r0, r4
   13624:	movle	r0, #0
   13628:	movgt	r0, #1
   1362c:	cmp	r0, #0
   13630:	mvnne	r6, #-2147483648	; 0x80000000
   13634:	beq	13684 <strspn@plt+0x28b8>
   13638:	mov	r1, r7
   1363c:	mov	r0, r6
   13640:	bl	13fa4 <strspn@plt+0x31d8>
   13644:	mov	r1, r7
   13648:	mov	r4, r0
   1364c:	mov	r0, r6
   13650:	bl	141c4 <strspn@plt+0x33f8>
   13654:	sub	r1, r6, r1
   13658:	b	13694 <strspn@plt+0x28c8>
   1365c:	mvn	r2, #-2147483648	; 0x80000000
   13660:	sub	r2, r2, r4
   13664:	cmp	r8, r2
   13668:	movle	r2, #0
   1366c:	movgt	r2, #1
   13670:	b	135d4 <strspn@plt+0x2808>
   13674:	cmn	r7, #1
   13678:	movne	r1, r7
   1367c:	movne	r0, #-2147483648	; 0x80000000
   13680:	bne	137e8 <strspn@plt+0x2a1c>
   13684:	mul	r1, r7, r4
   13688:	cmp	r1, #63	; 0x3f
   1368c:	movle	r6, #64	; 0x40
   13690:	ble	13638 <strspn@plt+0x286c>
   13694:	cmp	sl, #0
   13698:	sub	r2, r4, r8
   1369c:	streq	sl, [fp]
   136a0:	cmp	r2, r5
   136a4:	bge	13778 <strspn@plt+0x29ac>
   136a8:	cmp	r5, #0
   136ac:	bge	13744 <strspn@plt+0x2978>
   136b0:	rsb	r2, r5, #-2147483648	; 0x80000000
   136b4:	cmp	r8, r2
   136b8:	movge	r2, #0
   136bc:	movlt	r2, #1
   136c0:	cmp	r2, #0
   136c4:	bne	13718 <strspn@plt+0x294c>
   136c8:	ldr	r0, [sp, #4]
   136cc:	add	r5, r8, r5
   136d0:	cmp	r9, r5
   136d4:	movge	r0, #0
   136d8:	andlt	r0, r0, #1
   136dc:	cmp	r0, #0
   136e0:	mov	r4, r5
   136e4:	bne	13718 <strspn@plt+0x294c>
   136e8:	cmp	r7, #0
   136ec:	bge	1378c <strspn@plt+0x29c0>
   136f0:	cmp	r5, #0
   136f4:	bge	13764 <strspn@plt+0x2998>
   136f8:	mov	r1, r7
   136fc:	mvn	r0, #-2147483648	; 0x80000000
   13700:	bl	13fa4 <strspn@plt+0x31d8>
   13704:	cmp	r5, r0
   13708:	movge	r0, #0
   1370c:	movlt	r0, #1
   13710:	cmp	r0, #0
   13714:	beq	13774 <strspn@plt+0x29a8>
   13718:	bl	138c4 <strspn@plt+0x2af8>
   1371c:	beq	13684 <strspn@plt+0x28b8>
   13720:	cmp	r4, #0
   13724:	bge	137e0 <strspn@plt+0x2a14>
   13728:	cmn	r4, #1
   1372c:	beq	13684 <strspn@plt+0x28b8>
   13730:	mov	r1, r4
   13734:	mov	r0, #-2147483648	; 0x80000000
   13738:	bl	13fa4 <strspn@plt+0x31d8>
   1373c:	cmp	r7, r0
   13740:	b	13624 <strspn@plt+0x2858>
   13744:	cmp	r8, #0
   13748:	blt	136c8 <strspn@plt+0x28fc>
   1374c:	mvn	r2, #-2147483648	; 0x80000000
   13750:	sub	r2, r2, r5
   13754:	cmp	r8, r2
   13758:	movle	r2, #0
   1375c:	movgt	r2, #1
   13760:	b	136c0 <strspn@plt+0x28f4>
   13764:	cmn	r7, #1
   13768:	movne	r1, r7
   1376c:	movne	r0, #-2147483648	; 0x80000000
   13770:	bne	137c4 <strspn@plt+0x29f8>
   13774:	mul	r1, r5, r7
   13778:	mov	r0, sl
   1377c:	bl	1345c <strspn@plt+0x2690>
   13780:	str	r4, [fp]
   13784:	add	sp, sp, #12
   13788:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1378c:	beq	13774 <strspn@plt+0x29a8>
   13790:	cmp	r5, #0
   13794:	movge	r1, r7
   13798:	mvnge	r0, #-2147483648	; 0x80000000
   1379c:	bge	137c4 <strspn@plt+0x29f8>
   137a0:	cmn	r5, #1
   137a4:	beq	13774 <strspn@plt+0x29a8>
   137a8:	mov	r1, r5
   137ac:	mov	r0, #-2147483648	; 0x80000000
   137b0:	bl	13fa4 <strspn@plt+0x31d8>
   137b4:	cmp	r7, r0
   137b8:	movle	r0, #0
   137bc:	movgt	r0, #1
   137c0:	b	13710 <strspn@plt+0x2944>
   137c4:	bl	13fa4 <strspn@plt+0x31d8>
   137c8:	cmp	r5, r0
   137cc:	b	137b8 <strspn@plt+0x29ec>
   137d0:	cmp	r7, #0
   137d4:	mov	r4, r9
   137d8:	blt	13674 <strspn@plt+0x28a8>
   137dc:	beq	13684 <strspn@plt+0x28b8>
   137e0:	mov	r1, r7
   137e4:	mvn	r0, #-2147483648	; 0x80000000
   137e8:	bl	13fa4 <strspn@plt+0x31d8>
   137ec:	cmp	r0, r4
   137f0:	movge	r0, #0
   137f4:	movlt	r0, #1
   137f8:	b	1362c <strspn@plt+0x2860>
   137fc:	push	{r4, lr}
   13800:	bl	13904 <strspn@plt+0x2b38>
   13804:	cmp	r0, #0
   13808:	popne	{r4, pc}
   1380c:	bl	138c4 <strspn@plt+0x2af8>
   13810:	mov	r1, #1
   13814:	b	137fc <strspn@plt+0x2a30>
   13818:	push	{r4, lr}
   1381c:	bl	13904 <strspn@plt+0x2b38>
   13820:	cmp	r0, #0
   13824:	popne	{r4, pc}
   13828:	bl	138c4 <strspn@plt+0x2af8>
   1382c:	mov	r1, #1
   13830:	b	13818 <strspn@plt+0x2a4c>
   13834:	push	{r4, r5, r6, lr}
   13838:	mov	r4, r1
   1383c:	mov	r5, r0
   13840:	mov	r0, r1
   13844:	bl	13430 <strspn@plt+0x2664>
   13848:	mov	r2, r4
   1384c:	mov	r1, r5
   13850:	pop	{r4, r5, r6, lr}
   13854:	b	10bf8 <memcpy@plt>
   13858:	push	{r4, r5, r6, lr}
   1385c:	mov	r4, r1
   13860:	mov	r5, r0
   13864:	mov	r0, r1
   13868:	bl	13444 <strspn@plt+0x2678>
   1386c:	mov	r2, r4
   13870:	mov	r1, r5
   13874:	pop	{r4, r5, r6, lr}
   13878:	b	10bf8 <memcpy@plt>
   1387c:	push	{r4, r5, r6, lr}
   13880:	mov	r5, r0
   13884:	add	r0, r1, #1
   13888:	mov	r4, r1
   1388c:	bl	13444 <strspn@plt+0x2678>
   13890:	mov	r2, #0
   13894:	mov	r1, r5
   13898:	strb	r2, [r0, r4]
   1389c:	mov	r2, r4
   138a0:	pop	{r4, r5, r6, lr}
   138a4:	b	10bf8 <memcpy@plt>
   138a8:	push	{r4, lr}
   138ac:	mov	r4, r0
   138b0:	bl	10cf4 <strlen@plt>
   138b4:	add	r1, r0, #1
   138b8:	mov	r0, r4
   138bc:	pop	{r4, lr}
   138c0:	b	13834 <strspn@plt+0x2a68>
   138c4:	ldr	r3, [pc, #44]	; 138f8 <strspn@plt+0x2b2c>
   138c8:	push	{r4, lr}
   138cc:	mov	r2, #5
   138d0:	ldr	r1, [pc, #36]	; 138fc <strspn@plt+0x2b30>
   138d4:	mov	r0, #0
   138d8:	ldr	r4, [r3]
   138dc:	bl	10c28 <dcgettext@plt>
   138e0:	ldr	r2, [pc, #24]	; 13900 <strspn@plt+0x2b34>
   138e4:	mov	r1, #0
   138e8:	mov	r3, r0
   138ec:	mov	r0, r4
   138f0:	bl	10c94 <error@plt>
   138f4:	bl	10db4 <abort@plt>
   138f8:	ldrdeq	r5, [r2], -ip
   138fc:			; <UNDEFINED> instruction: 0x00014bbf
   13900:			; <UNDEFINED> instruction: 0x000147b1
   13904:	cmp	r1, #0
   13908:	cmpne	r0, #0
   1390c:	moveq	r1, #1
   13910:	moveq	r0, r1
   13914:	umull	r2, r3, r0, r1
   13918:	adds	r3, r3, #0
   1391c:	movne	r3, #1
   13920:	cmp	r2, #0
   13924:	blt	13934 <strspn@plt+0x2b68>
   13928:	cmp	r3, #0
   1392c:	bne	13934 <strspn@plt+0x2b68>
   13930:	b	10b98 <calloc@plt>
   13934:	push	{r4, lr}
   13938:	bl	10d0c <__errno_location@plt>
   1393c:	mov	r3, #12
   13940:	str	r3, [r0]
   13944:	mov	r0, #0
   13948:	pop	{r4, pc}
   1394c:	cmp	r0, #0
   13950:	mov	r3, #0
   13954:	moveq	r0, #1
   13958:	adds	r3, r3, #0
   1395c:	movne	r3, #1
   13960:	cmp	r0, #0
   13964:	blt	13974 <strspn@plt+0x2ba8>
   13968:	cmp	r3, #0
   1396c:	bne	13974 <strspn@plt+0x2ba8>
   13970:	b	10ca0 <malloc@plt>
   13974:	push	{r4, lr}
   13978:	bl	10d0c <__errno_location@plt>
   1397c:	mov	r3, #12
   13980:	str	r3, [r0]
   13984:	mov	r0, #0
   13988:	pop	{r4, pc}
   1398c:	cmp	r0, #0
   13990:	push	{r4, lr}
   13994:	mov	r4, r1
   13998:	bne	139a8 <strspn@plt+0x2bdc>
   1399c:	mov	r0, r1
   139a0:	pop	{r4, lr}
   139a4:	b	1394c <strspn@plt+0x2b80>
   139a8:	cmp	r1, #0
   139ac:	bne	139bc <strspn@plt+0x2bf0>
   139b0:	bl	13b50 <strspn@plt+0x2d84>
   139b4:	mov	r0, #0
   139b8:	pop	{r4, pc}
   139bc:	cmp	r1, #0
   139c0:	blt	139d0 <strspn@plt+0x2c04>
   139c4:	mov	r3, #0
   139c8:	cmp	r3, r3
   139cc:	beq	139e0 <strspn@plt+0x2c14>
   139d0:	bl	10d0c <__errno_location@plt>
   139d4:	mov	r3, #12
   139d8:	str	r3, [r0]
   139dc:	b	139b4 <strspn@plt+0x2be8>
   139e0:	pop	{r4, lr}
   139e4:	b	10c34 <realloc@plt>
   139e8:	push	{r4, r5, r6, lr}
   139ec:	mov	r4, r0
   139f0:	bl	10c70 <__fpending@plt>
   139f4:	mov	r5, r0
   139f8:	mov	r0, r4
   139fc:	bl	10c7c <ferror_unlocked@plt>
   13a00:	mov	r6, r0
   13a04:	mov	r0, r4
   13a08:	bl	13a58 <strspn@plt+0x2c8c>
   13a0c:	cmp	r6, #0
   13a10:	mov	r4, r0
   13a14:	bne	13a40 <strspn@plt+0x2c74>
   13a18:	cmp	r0, #0
   13a1c:	beq	13a38 <strspn@plt+0x2c6c>
   13a20:	cmp	r5, #0
   13a24:	bne	13a50 <strspn@plt+0x2c84>
   13a28:	bl	10d0c <__errno_location@plt>
   13a2c:	ldr	r4, [r0]
   13a30:	subs	r4, r4, #9
   13a34:	mvnne	r4, #0
   13a38:	mov	r0, r4
   13a3c:	pop	{r4, r5, r6, pc}
   13a40:	cmp	r0, #0
   13a44:	bne	13a50 <strspn@plt+0x2c84>
   13a48:	bl	10d0c <__errno_location@plt>
   13a4c:	str	r4, [r0]
   13a50:	mvn	r4, #0
   13a54:	b	13a38 <strspn@plt+0x2c6c>
   13a58:	push	{r0, r1, r2, r4, r5, lr}
   13a5c:	mov	r4, r0
   13a60:	bl	10d3c <fileno@plt>
   13a64:	cmp	r0, #0
   13a68:	mov	r0, r4
   13a6c:	bge	13a7c <strspn@plt+0x2cb0>
   13a70:	add	sp, sp, #12
   13a74:	pop	{r4, r5, lr}
   13a78:	b	10d54 <fclose@plt>
   13a7c:	bl	10cb8 <__freading@plt>
   13a80:	cmp	r0, #0
   13a84:	bne	13ac0 <strspn@plt+0x2cf4>
   13a88:	mov	r0, r4
   13a8c:	bl	13b00 <strspn@plt+0x2d34>
   13a90:	cmp	r0, #0
   13a94:	bne	13af4 <strspn@plt+0x2d28>
   13a98:	mov	r5, #0
   13a9c:	mov	r0, r4
   13aa0:	bl	10d54 <fclose@plt>
   13aa4:	cmp	r5, #0
   13aa8:	beq	13ab8 <strspn@plt+0x2cec>
   13aac:	bl	10d0c <__errno_location@plt>
   13ab0:	str	r5, [r0]
   13ab4:	mvn	r0, #0
   13ab8:	add	sp, sp, #12
   13abc:	pop	{r4, r5, pc}
   13ac0:	mov	r0, r4
   13ac4:	bl	10d3c <fileno@plt>
   13ac8:	mov	r3, #1
   13acc:	str	r3, [sp]
   13ad0:	mov	r2, #0
   13ad4:	mov	r3, #0
   13ad8:	bl	10c58 <lseek64@plt>
   13adc:	mvn	r3, #0
   13ae0:	mvn	r2, #0
   13ae4:	cmp	r1, r3
   13ae8:	cmpeq	r0, r2
   13aec:	bne	13a88 <strspn@plt+0x2cbc>
   13af0:	b	13a98 <strspn@plt+0x2ccc>
   13af4:	bl	10d0c <__errno_location@plt>
   13af8:	ldr	r5, [r0]
   13afc:	b	13a9c <strspn@plt+0x2cd0>
   13b00:	push	{r0, r1, r4, lr}
   13b04:	subs	r4, r0, #0
   13b08:	bne	13b1c <strspn@plt+0x2d50>
   13b0c:	mov	r0, r4
   13b10:	add	sp, sp, #8
   13b14:	pop	{r4, lr}
   13b18:	b	10bd4 <fflush@plt>
   13b1c:	bl	10cb8 <__freading@plt>
   13b20:	cmp	r0, #0
   13b24:	beq	13b0c <strspn@plt+0x2d40>
   13b28:	ldr	r3, [r4]
   13b2c:	tst	r3, #256	; 0x100
   13b30:	beq	13b0c <strspn@plt+0x2d40>
   13b34:	mov	r3, #1
   13b38:	str	r3, [sp]
   13b3c:	mov	r2, #0
   13b40:	mov	r3, #0
   13b44:	mov	r0, r4
   13b48:	bl	13ba4 <strspn@plt+0x2dd8>
   13b4c:	b	13b0c <strspn@plt+0x2d40>
   13b50:	push	{r0, r1, r2, r4, r5, lr}
   13b54:	mov	r5, r0
   13b58:	bl	10d0c <__errno_location@plt>
   13b5c:	ldr	r3, [r0]
   13b60:	mov	r4, r0
   13b64:	str	r3, [sp]
   13b68:	str	r3, [sp, #4]
   13b6c:	mov	r3, #0
   13b70:	str	r3, [r0]
   13b74:	mov	r0, r5
   13b78:	bl	10be0 <free@plt>
   13b7c:	ldr	r3, [r4]
   13b80:	add	r2, sp, #8
   13b84:	cmp	r3, #0
   13b88:	moveq	r3, #4
   13b8c:	movne	r3, #0
   13b90:	add	r3, r2, r3
   13b94:	ldr	r3, [r3, #-8]
   13b98:	str	r3, [r4]
   13b9c:	add	sp, sp, #12
   13ba0:	pop	{r4, r5, pc}
   13ba4:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   13ba8:	mov	r4, r0
   13bac:	ldmib	r0, {ip, lr}
   13bb0:	ldr	r8, [sp, #32]
   13bb4:	cmp	lr, ip
   13bb8:	bne	13c24 <strspn@plt+0x2e58>
   13bbc:	ldr	lr, [r0, #20]
   13bc0:	ldr	ip, [r0, #16]
   13bc4:	cmp	lr, ip
   13bc8:	bne	13c24 <strspn@plt+0x2e58>
   13bcc:	ldr	r5, [r0, #36]	; 0x24
   13bd0:	cmp	r5, #0
   13bd4:	bne	13c24 <strspn@plt+0x2e58>
   13bd8:	mov	r6, r2
   13bdc:	mov	r7, r3
   13be0:	bl	10d3c <fileno@plt>
   13be4:	mov	r2, r6
   13be8:	mov	r3, r7
   13bec:	str	r8, [sp]
   13bf0:	bl	10c58 <lseek64@plt>
   13bf4:	mvn	r3, #0
   13bf8:	mvn	r2, #0
   13bfc:	cmp	r1, r3
   13c00:	cmpeq	r0, r2
   13c04:	mvneq	r0, #0
   13c08:	ldrne	r3, [r4]
   13c0c:	strdne	r0, [r4, #80]	; 0x50
   13c10:	movne	r0, r5
   13c14:	bicne	r3, r3, #16
   13c18:	strne	r3, [r4]
   13c1c:	add	sp, sp, #8
   13c20:	pop	{r4, r5, r6, r7, r8, pc}
   13c24:	str	r8, [sp, #32]
   13c28:	mov	r0, r4
   13c2c:	add	sp, sp, #8
   13c30:	pop	{r4, r5, r6, r7, r8, lr}
   13c34:	b	10d60 <fseeko64@plt>
   13c38:	push	{lr}		; (str lr, [sp, #-4]!)
   13c3c:	sub	sp, sp, #268	; 0x10c
   13c40:	ldr	r2, [pc, #64]	; 13c88 <strspn@plt+0x2ebc>
   13c44:	add	r1, sp, #4
   13c48:	bl	13d14 <strspn@plt+0x2f48>
   13c4c:	cmp	r0, #0
   13c50:	movne	r0, #0
   13c54:	bne	13c80 <strspn@plt+0x2eb4>
   13c58:	ldr	r1, [pc, #44]	; 13c8c <strspn@plt+0x2ec0>
   13c5c:	add	r0, sp, #4
   13c60:	bl	10bbc <strcmp@plt>
   13c64:	cmp	r0, #0
   13c68:	beq	13c80 <strspn@plt+0x2eb4>
   13c6c:	ldr	r1, [pc, #28]	; 13c90 <strspn@plt+0x2ec4>
   13c70:	add	r0, sp, #4
   13c74:	bl	10bbc <strcmp@plt>
   13c78:	adds	r0, r0, #0
   13c7c:	movne	r0, #1
   13c80:	add	sp, sp, #268	; 0x10c
   13c84:	pop	{pc}		; (ldr pc, [sp], #4)
   13c88:	andeq	r0, r0, r1, lsl #2
   13c8c:	ldrdeq	r4, [r1], -r0
   13c90:	ldrdeq	r4, [r1], -r2
   13c94:	push	{r4, lr}
   13c98:	mov	r0, #14
   13c9c:	bl	10d84 <nl_langinfo@plt>
   13ca0:	ldr	r3, [pc, #24]	; 13cc0 <strspn@plt+0x2ef4>
   13ca4:	cmp	r0, #0
   13ca8:	moveq	r0, r3
   13cac:	ldr	r3, [pc, #16]	; 13cc4 <strspn@plt+0x2ef8>
   13cb0:	ldrb	r2, [r0]
   13cb4:	cmp	r2, #0
   13cb8:	moveq	r0, r3
   13cbc:	pop	{r4, pc}
   13cc0:	andeq	r4, r1, lr, ror r5
   13cc4:	ldrdeq	r4, [r1], -r8
   13cc8:	push	{r4, r5, r6, lr}
   13ccc:	subs	r4, r2, #0
   13cd0:	mov	r6, r0
   13cd4:	mov	r5, r1
   13cd8:	beq	13cf0 <strspn@plt+0x2f24>
   13cdc:	mov	r1, r4
   13ce0:	mvn	r0, #0
   13ce4:	bl	13d98 <strspn@plt+0x2fcc>
   13ce8:	cmp	r0, r5
   13cec:	bcc	13d00 <strspn@plt+0x2f34>
   13cf0:	mul	r1, r5, r4
   13cf4:	mov	r0, r6
   13cf8:	pop	{r4, r5, r6, lr}
   13cfc:	b	1398c <strspn@plt+0x2bc0>
   13d00:	bl	10d0c <__errno_location@plt>
   13d04:	mov	r3, #12
   13d08:	str	r3, [r0]
   13d0c:	mov	r0, #0
   13d10:	pop	{r4, r5, r6, pc}
   13d14:	push	{r4, r5, r6, lr}
   13d18:	mov	r5, r1
   13d1c:	mov	r1, #0
   13d20:	mov	r4, r2
   13d24:	bl	10d6c <setlocale@plt>
   13d28:	subs	r6, r0, #0
   13d2c:	bne	13d40 <strspn@plt+0x2f74>
   13d30:	cmp	r4, #0
   13d34:	strbne	r6, [r5]
   13d38:	mov	r0, #22
   13d3c:	pop	{r4, r5, r6, pc}
   13d40:	bl	10cf4 <strlen@plt>
   13d44:	cmp	r4, r0
   13d48:	bls	13d64 <strspn@plt+0x2f98>
   13d4c:	add	r2, r0, #1
   13d50:	mov	r1, r6
   13d54:	mov	r0, r5
   13d58:	bl	10bf8 <memcpy@plt>
   13d5c:	mov	r0, #0
   13d60:	pop	{r4, r5, r6, pc}
   13d64:	cmp	r4, #0
   13d68:	beq	13d88 <strspn@plt+0x2fbc>
   13d6c:	sub	r4, r4, #1
   13d70:	mov	r2, r4
   13d74:	mov	r1, r6
   13d78:	mov	r0, r5
   13d7c:	bl	10bf8 <memcpy@plt>
   13d80:	mov	r3, #0
   13d84:	strb	r3, [r5, r4]
   13d88:	mov	r0, #34	; 0x22
   13d8c:	pop	{r4, r5, r6, pc}
   13d90:	mov	r1, #0
   13d94:	b	10d6c <setlocale@plt>
   13d98:	subs	r2, r1, #1
   13d9c:	bxeq	lr
   13da0:	bcc	13f78 <strspn@plt+0x31ac>
   13da4:	cmp	r0, r1
   13da8:	bls	13f5c <strspn@plt+0x3190>
   13dac:	tst	r1, r2
   13db0:	beq	13f68 <strspn@plt+0x319c>
   13db4:	clz	r3, r0
   13db8:	clz	r2, r1
   13dbc:	sub	r3, r2, r3
   13dc0:	rsbs	r3, r3, #31
   13dc4:	addne	r3, r3, r3, lsl #1
   13dc8:	mov	r2, #0
   13dcc:	addne	pc, pc, r3, lsl #2
   13dd0:	nop			; (mov r0, r0)
   13dd4:	cmp	r0, r1, lsl #31
   13dd8:	adc	r2, r2, r2
   13ddc:	subcs	r0, r0, r1, lsl #31
   13de0:	cmp	r0, r1, lsl #30
   13de4:	adc	r2, r2, r2
   13de8:	subcs	r0, r0, r1, lsl #30
   13dec:	cmp	r0, r1, lsl #29
   13df0:	adc	r2, r2, r2
   13df4:	subcs	r0, r0, r1, lsl #29
   13df8:	cmp	r0, r1, lsl #28
   13dfc:	adc	r2, r2, r2
   13e00:	subcs	r0, r0, r1, lsl #28
   13e04:	cmp	r0, r1, lsl #27
   13e08:	adc	r2, r2, r2
   13e0c:	subcs	r0, r0, r1, lsl #27
   13e10:	cmp	r0, r1, lsl #26
   13e14:	adc	r2, r2, r2
   13e18:	subcs	r0, r0, r1, lsl #26
   13e1c:	cmp	r0, r1, lsl #25
   13e20:	adc	r2, r2, r2
   13e24:	subcs	r0, r0, r1, lsl #25
   13e28:	cmp	r0, r1, lsl #24
   13e2c:	adc	r2, r2, r2
   13e30:	subcs	r0, r0, r1, lsl #24
   13e34:	cmp	r0, r1, lsl #23
   13e38:	adc	r2, r2, r2
   13e3c:	subcs	r0, r0, r1, lsl #23
   13e40:	cmp	r0, r1, lsl #22
   13e44:	adc	r2, r2, r2
   13e48:	subcs	r0, r0, r1, lsl #22
   13e4c:	cmp	r0, r1, lsl #21
   13e50:	adc	r2, r2, r2
   13e54:	subcs	r0, r0, r1, lsl #21
   13e58:	cmp	r0, r1, lsl #20
   13e5c:	adc	r2, r2, r2
   13e60:	subcs	r0, r0, r1, lsl #20
   13e64:	cmp	r0, r1, lsl #19
   13e68:	adc	r2, r2, r2
   13e6c:	subcs	r0, r0, r1, lsl #19
   13e70:	cmp	r0, r1, lsl #18
   13e74:	adc	r2, r2, r2
   13e78:	subcs	r0, r0, r1, lsl #18
   13e7c:	cmp	r0, r1, lsl #17
   13e80:	adc	r2, r2, r2
   13e84:	subcs	r0, r0, r1, lsl #17
   13e88:	cmp	r0, r1, lsl #16
   13e8c:	adc	r2, r2, r2
   13e90:	subcs	r0, r0, r1, lsl #16
   13e94:	cmp	r0, r1, lsl #15
   13e98:	adc	r2, r2, r2
   13e9c:	subcs	r0, r0, r1, lsl #15
   13ea0:	cmp	r0, r1, lsl #14
   13ea4:	adc	r2, r2, r2
   13ea8:	subcs	r0, r0, r1, lsl #14
   13eac:	cmp	r0, r1, lsl #13
   13eb0:	adc	r2, r2, r2
   13eb4:	subcs	r0, r0, r1, lsl #13
   13eb8:	cmp	r0, r1, lsl #12
   13ebc:	adc	r2, r2, r2
   13ec0:	subcs	r0, r0, r1, lsl #12
   13ec4:	cmp	r0, r1, lsl #11
   13ec8:	adc	r2, r2, r2
   13ecc:	subcs	r0, r0, r1, lsl #11
   13ed0:	cmp	r0, r1, lsl #10
   13ed4:	adc	r2, r2, r2
   13ed8:	subcs	r0, r0, r1, lsl #10
   13edc:	cmp	r0, r1, lsl #9
   13ee0:	adc	r2, r2, r2
   13ee4:	subcs	r0, r0, r1, lsl #9
   13ee8:	cmp	r0, r1, lsl #8
   13eec:	adc	r2, r2, r2
   13ef0:	subcs	r0, r0, r1, lsl #8
   13ef4:	cmp	r0, r1, lsl #7
   13ef8:	adc	r2, r2, r2
   13efc:	subcs	r0, r0, r1, lsl #7
   13f00:	cmp	r0, r1, lsl #6
   13f04:	adc	r2, r2, r2
   13f08:	subcs	r0, r0, r1, lsl #6
   13f0c:	cmp	r0, r1, lsl #5
   13f10:	adc	r2, r2, r2
   13f14:	subcs	r0, r0, r1, lsl #5
   13f18:	cmp	r0, r1, lsl #4
   13f1c:	adc	r2, r2, r2
   13f20:	subcs	r0, r0, r1, lsl #4
   13f24:	cmp	r0, r1, lsl #3
   13f28:	adc	r2, r2, r2
   13f2c:	subcs	r0, r0, r1, lsl #3
   13f30:	cmp	r0, r1, lsl #2
   13f34:	adc	r2, r2, r2
   13f38:	subcs	r0, r0, r1, lsl #2
   13f3c:	cmp	r0, r1, lsl #1
   13f40:	adc	r2, r2, r2
   13f44:	subcs	r0, r0, r1, lsl #1
   13f48:	cmp	r0, r1
   13f4c:	adc	r2, r2, r2
   13f50:	subcs	r0, r0, r1
   13f54:	mov	r0, r2
   13f58:	bx	lr
   13f5c:	moveq	r0, #1
   13f60:	movne	r0, #0
   13f64:	bx	lr
   13f68:	clz	r2, r1
   13f6c:	rsb	r2, r2, #31
   13f70:	lsr	r0, r0, r2
   13f74:	bx	lr
   13f78:	cmp	r0, #0
   13f7c:	mvnne	r0, #0
   13f80:	b	141e4 <strspn@plt+0x3418>
   13f84:	cmp	r1, #0
   13f88:	beq	13f78 <strspn@plt+0x31ac>
   13f8c:	push	{r0, r1, lr}
   13f90:	bl	13d98 <strspn@plt+0x2fcc>
   13f94:	pop	{r1, r2, lr}
   13f98:	mul	r3, r2, r0
   13f9c:	sub	r1, r1, r3
   13fa0:	bx	lr
   13fa4:	cmp	r1, #0
   13fa8:	beq	141b4 <strspn@plt+0x33e8>
   13fac:	eor	ip, r0, r1
   13fb0:	rsbmi	r1, r1, #0
   13fb4:	subs	r2, r1, #1
   13fb8:	beq	14180 <strspn@plt+0x33b4>
   13fbc:	movs	r3, r0
   13fc0:	rsbmi	r3, r0, #0
   13fc4:	cmp	r3, r1
   13fc8:	bls	1418c <strspn@plt+0x33c0>
   13fcc:	tst	r1, r2
   13fd0:	beq	1419c <strspn@plt+0x33d0>
   13fd4:	clz	r2, r3
   13fd8:	clz	r0, r1
   13fdc:	sub	r2, r0, r2
   13fe0:	rsbs	r2, r2, #31
   13fe4:	addne	r2, r2, r2, lsl #1
   13fe8:	mov	r0, #0
   13fec:	addne	pc, pc, r2, lsl #2
   13ff0:	nop			; (mov r0, r0)
   13ff4:	cmp	r3, r1, lsl #31
   13ff8:	adc	r0, r0, r0
   13ffc:	subcs	r3, r3, r1, lsl #31
   14000:	cmp	r3, r1, lsl #30
   14004:	adc	r0, r0, r0
   14008:	subcs	r3, r3, r1, lsl #30
   1400c:	cmp	r3, r1, lsl #29
   14010:	adc	r0, r0, r0
   14014:	subcs	r3, r3, r1, lsl #29
   14018:	cmp	r3, r1, lsl #28
   1401c:	adc	r0, r0, r0
   14020:	subcs	r3, r3, r1, lsl #28
   14024:	cmp	r3, r1, lsl #27
   14028:	adc	r0, r0, r0
   1402c:	subcs	r3, r3, r1, lsl #27
   14030:	cmp	r3, r1, lsl #26
   14034:	adc	r0, r0, r0
   14038:	subcs	r3, r3, r1, lsl #26
   1403c:	cmp	r3, r1, lsl #25
   14040:	adc	r0, r0, r0
   14044:	subcs	r3, r3, r1, lsl #25
   14048:	cmp	r3, r1, lsl #24
   1404c:	adc	r0, r0, r0
   14050:	subcs	r3, r3, r1, lsl #24
   14054:	cmp	r3, r1, lsl #23
   14058:	adc	r0, r0, r0
   1405c:	subcs	r3, r3, r1, lsl #23
   14060:	cmp	r3, r1, lsl #22
   14064:	adc	r0, r0, r0
   14068:	subcs	r3, r3, r1, lsl #22
   1406c:	cmp	r3, r1, lsl #21
   14070:	adc	r0, r0, r0
   14074:	subcs	r3, r3, r1, lsl #21
   14078:	cmp	r3, r1, lsl #20
   1407c:	adc	r0, r0, r0
   14080:	subcs	r3, r3, r1, lsl #20
   14084:	cmp	r3, r1, lsl #19
   14088:	adc	r0, r0, r0
   1408c:	subcs	r3, r3, r1, lsl #19
   14090:	cmp	r3, r1, lsl #18
   14094:	adc	r0, r0, r0
   14098:	subcs	r3, r3, r1, lsl #18
   1409c:	cmp	r3, r1, lsl #17
   140a0:	adc	r0, r0, r0
   140a4:	subcs	r3, r3, r1, lsl #17
   140a8:	cmp	r3, r1, lsl #16
   140ac:	adc	r0, r0, r0
   140b0:	subcs	r3, r3, r1, lsl #16
   140b4:	cmp	r3, r1, lsl #15
   140b8:	adc	r0, r0, r0
   140bc:	subcs	r3, r3, r1, lsl #15
   140c0:	cmp	r3, r1, lsl #14
   140c4:	adc	r0, r0, r0
   140c8:	subcs	r3, r3, r1, lsl #14
   140cc:	cmp	r3, r1, lsl #13
   140d0:	adc	r0, r0, r0
   140d4:	subcs	r3, r3, r1, lsl #13
   140d8:	cmp	r3, r1, lsl #12
   140dc:	adc	r0, r0, r0
   140e0:	subcs	r3, r3, r1, lsl #12
   140e4:	cmp	r3, r1, lsl #11
   140e8:	adc	r0, r0, r0
   140ec:	subcs	r3, r3, r1, lsl #11
   140f0:	cmp	r3, r1, lsl #10
   140f4:	adc	r0, r0, r0
   140f8:	subcs	r3, r3, r1, lsl #10
   140fc:	cmp	r3, r1, lsl #9
   14100:	adc	r0, r0, r0
   14104:	subcs	r3, r3, r1, lsl #9
   14108:	cmp	r3, r1, lsl #8
   1410c:	adc	r0, r0, r0
   14110:	subcs	r3, r3, r1, lsl #8
   14114:	cmp	r3, r1, lsl #7
   14118:	adc	r0, r0, r0
   1411c:	subcs	r3, r3, r1, lsl #7
   14120:	cmp	r3, r1, lsl #6
   14124:	adc	r0, r0, r0
   14128:	subcs	r3, r3, r1, lsl #6
   1412c:	cmp	r3, r1, lsl #5
   14130:	adc	r0, r0, r0
   14134:	subcs	r3, r3, r1, lsl #5
   14138:	cmp	r3, r1, lsl #4
   1413c:	adc	r0, r0, r0
   14140:	subcs	r3, r3, r1, lsl #4
   14144:	cmp	r3, r1, lsl #3
   14148:	adc	r0, r0, r0
   1414c:	subcs	r3, r3, r1, lsl #3
   14150:	cmp	r3, r1, lsl #2
   14154:	adc	r0, r0, r0
   14158:	subcs	r3, r3, r1, lsl #2
   1415c:	cmp	r3, r1, lsl #1
   14160:	adc	r0, r0, r0
   14164:	subcs	r3, r3, r1, lsl #1
   14168:	cmp	r3, r1
   1416c:	adc	r0, r0, r0
   14170:	subcs	r3, r3, r1
   14174:	cmp	ip, #0
   14178:	rsbmi	r0, r0, #0
   1417c:	bx	lr
   14180:	teq	ip, r0
   14184:	rsbmi	r0, r0, #0
   14188:	bx	lr
   1418c:	movcc	r0, #0
   14190:	asreq	r0, ip, #31
   14194:	orreq	r0, r0, #1
   14198:	bx	lr
   1419c:	clz	r2, r1
   141a0:	rsb	r2, r2, #31
   141a4:	cmp	ip, #0
   141a8:	lsr	r0, r3, r2
   141ac:	rsbmi	r0, r0, #0
   141b0:	bx	lr
   141b4:	cmp	r0, #0
   141b8:	mvngt	r0, #-2147483648	; 0x80000000
   141bc:	movlt	r0, #-2147483648	; 0x80000000
   141c0:	b	141e4 <strspn@plt+0x3418>
   141c4:	cmp	r1, #0
   141c8:	beq	141b4 <strspn@plt+0x33e8>
   141cc:	push	{r0, r1, lr}
   141d0:	bl	13fac <strspn@plt+0x31e0>
   141d4:	pop	{r1, r2, lr}
   141d8:	mul	r3, r2, r0
   141dc:	sub	r1, r1, r3
   141e0:	bx	lr
   141e4:	push	{r1, lr}
   141e8:	mov	r0, #8
   141ec:	bl	10bb0 <raise@plt>
   141f0:	pop	{r1, pc}
   141f4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   141f8:	mov	r7, r0
   141fc:	ldr	r6, [pc, #72]	; 1424c <strspn@plt+0x3480>
   14200:	ldr	r5, [pc, #72]	; 14250 <strspn@plt+0x3484>
   14204:	add	r6, pc, r6
   14208:	add	r5, pc, r5
   1420c:	sub	r6, r6, r5
   14210:	mov	r8, r1
   14214:	mov	r9, r2
   14218:	bl	10b78 <calloc@plt-0x20>
   1421c:	asrs	r6, r6, #2
   14220:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14224:	mov	r4, #0
   14228:	add	r4, r4, #1
   1422c:	ldr	r3, [r5], #4
   14230:	mov	r2, r9
   14234:	mov	r1, r8
   14238:	mov	r0, r7
   1423c:	blx	r3
   14240:	cmp	r6, r4
   14244:	bne	14228 <strspn@plt+0x345c>
   14248:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1424c:	andeq	r0, r1, r4, lsl #26
   14250:	strdeq	r0, [r1], -ip
   14254:	bx	lr
   14258:	ldr	r3, [pc, #12]	; 1426c <strspn@plt+0x34a0>
   1425c:	mov	r1, #0
   14260:	add	r3, pc, r3
   14264:	ldr	r2, [r3]
   14268:	b	10d18 <__cxa_atexit@plt>
   1426c:	andeq	r0, r1, ip, ror #28
   14270:	mov	r2, r1
   14274:	mov	r1, r0
   14278:	mov	r0, #3
   1427c:	b	10dc0 <__lxstat64@plt>

Disassembly of section .fini:

00014280 <.fini>:
   14280:	push	{r3, lr}
   14284:	pop	{r3, pc}
