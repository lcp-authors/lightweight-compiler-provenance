
../repos/coreutils/src/printf:     file format elf32-littlearm


Disassembly of section .init:

00010dac <.init>:
   10dac:	push	{r3, lr}
   10db0:	bl	11084 <__mempcpy_chk@plt+0x48>
   10db4:	pop	{r3, pc}

Disassembly of section .plt:

00010db8 <calloc@plt-0x14>:
   10db8:	push	{lr}		; (str lr, [sp, #-4]!)
   10dbc:	ldr	lr, [pc, #4]	; 10dc8 <calloc@plt-0x4>
   10dc0:	add	lr, pc, lr
   10dc4:	ldr	pc, [lr, #8]!
   10dc8:	andeq	r7, r1, r8, lsr r2

00010dcc <calloc@plt>:
   10dcc:	add	ip, pc, #0, 12
   10dd0:	add	ip, ip, #94208	; 0x17000
   10dd4:	ldr	pc, [ip, #568]!	; 0x238

00010dd8 <fputs_unlocked@plt>:
   10dd8:	add	ip, pc, #0, 12
   10ddc:	add	ip, ip, #94208	; 0x17000
   10de0:	ldr	pc, [ip, #560]!	; 0x230

00010de4 <uselocale@plt>:
   10de4:	add	ip, pc, #0, 12
   10de8:	add	ip, ip, #94208	; 0x17000
   10dec:	ldr	pc, [ip, #552]!	; 0x228

00010df0 <iconv@plt>:
   10df0:	add	ip, pc, #0, 12
   10df4:	add	ip, ip, #94208	; 0x17000
   10df8:	ldr	pc, [ip, #544]!	; 0x220

00010dfc <strcmp@plt>:
   10dfc:	add	ip, pc, #0, 12
   10e00:	add	ip, ip, #94208	; 0x17000
   10e04:	ldr	pc, [ip, #536]!	; 0x218

00010e08 <fflush@plt>:
   10e08:	add	ip, pc, #0, 12
   10e0c:	add	ip, ip, #94208	; 0x17000
   10e10:	ldr	pc, [ip, #528]!	; 0x210

00010e14 <free@plt>:
   10e14:	add	ip, pc, #0, 12
   10e18:	add	ip, ip, #94208	; 0x17000
   10e1c:	ldr	pc, [ip, #520]!	; 0x208

00010e20 <ferror@plt>:
   10e20:	add	ip, pc, #0, 12
   10e24:	add	ip, ip, #94208	; 0x17000
   10e28:	ldr	pc, [ip, #512]!	; 0x200

00010e2c <_exit@plt>:
   10e2c:	add	ip, pc, #0, 12
   10e30:	add	ip, ip, #94208	; 0x17000
   10e34:	ldr	pc, [ip, #504]!	; 0x1f8

00010e38 <memcpy@plt>:
   10e38:	add	ip, pc, #0, 12
   10e3c:	add	ip, ip, #94208	; 0x17000
   10e40:	ldr	pc, [ip, #496]!	; 0x1f0

00010e44 <__strtoull_internal@plt>:
   10e44:	add	ip, pc, #0, 12
   10e48:	add	ip, ip, #94208	; 0x17000
   10e4c:	ldr	pc, [ip, #488]!	; 0x1e8

00010e50 <mbsinit@plt>:
   10e50:	add	ip, pc, #0, 12
   10e54:	add	ip, ip, #94208	; 0x17000
   10e58:	ldr	pc, [ip, #480]!	; 0x1e0

00010e5c <strtold@plt>:
   10e5c:	add	ip, pc, #0, 12
   10e60:	add	ip, ip, #94208	; 0x17000
   10e64:	ldr	pc, [ip, #472]!	; 0x1d8

00010e68 <dcgettext@plt>:
   10e68:	add	ip, pc, #0, 12
   10e6c:	add	ip, ip, #94208	; 0x17000
   10e70:	ldr	pc, [ip, #464]!	; 0x1d0

00010e74 <realloc@plt>:
   10e74:	add	ip, pc, #0, 12
   10e78:	add	ip, ip, #94208	; 0x17000
   10e7c:	ldr	pc, [ip, #456]!	; 0x1c8

00010e80 <textdomain@plt>:
   10e80:	add	ip, pc, #0, 12
   10e84:	add	ip, ip, #94208	; 0x17000
   10e88:	ldr	pc, [ip, #448]!	; 0x1c0

00010e8c <iswprint@plt>:
   10e8c:	add	ip, pc, #0, 12
   10e90:	add	ip, ip, #94208	; 0x17000
   10e94:	ldr	pc, [ip, #440]!	; 0x1b8

00010e98 <fwrite@plt>:
   10e98:	add	ip, pc, #0, 12
   10e9c:	add	ip, ip, #94208	; 0x17000
   10ea0:	ldr	pc, [ip, #432]!	; 0x1b0

00010ea4 <lseek64@plt>:
   10ea4:	add	ip, pc, #0, 12
   10ea8:	add	ip, ip, #94208	; 0x17000
   10eac:	ldr	pc, [ip, #424]!	; 0x1a8

00010eb0 <__ctype_get_mb_cur_max@plt>:
   10eb0:	add	ip, pc, #0, 12
   10eb4:	add	ip, ip, #94208	; 0x17000
   10eb8:	ldr	pc, [ip, #416]!	; 0x1a0

00010ebc <__fpending@plt>:
   10ebc:	add	ip, pc, #0, 12
   10ec0:	add	ip, ip, #94208	; 0x17000
   10ec4:	ldr	pc, [ip, #408]!	; 0x198

00010ec8 <mbrtowc@plt>:
   10ec8:	add	ip, pc, #0, 12
   10ecc:	add	ip, ip, #94208	; 0x17000
   10ed0:	ldr	pc, [ip, #400]!	; 0x190

00010ed4 <error@plt>:
   10ed4:	add	ip, pc, #0, 12
   10ed8:	add	ip, ip, #94208	; 0x17000
   10edc:	ldr	pc, [ip, #392]!	; 0x188

00010ee0 <getenv@plt>:
   10ee0:	add	ip, pc, #0, 12
   10ee4:	add	ip, ip, #94208	; 0x17000
   10ee8:	ldr	pc, [ip, #384]!	; 0x180

00010eec <malloc@plt>:
   10eec:	add	ip, pc, #0, 12
   10ef0:	add	ip, ip, #94208	; 0x17000
   10ef4:	ldr	pc, [ip, #376]!	; 0x178

00010ef8 <iconv_open@plt>:
   10ef8:	add	ip, pc, #0, 12
   10efc:	add	ip, ip, #94208	; 0x17000
   10f00:	ldr	pc, [ip, #368]!	; 0x170

00010f04 <__libc_start_main@plt>:
   10f04:	add	ip, pc, #0, 12
   10f08:	add	ip, ip, #94208	; 0x17000
   10f0c:	ldr	pc, [ip, #360]!	; 0x168

00010f10 <__vfprintf_chk@plt>:
   10f10:	add	ip, pc, #0, 12
   10f14:	add	ip, ip, #94208	; 0x17000
   10f18:	ldr	pc, [ip, #352]!	; 0x160

00010f1c <__freading@plt>:
   10f1c:	add	ip, pc, #0, 12
   10f20:	add	ip, ip, #94208	; 0x17000
   10f24:	ldr	pc, [ip, #344]!	; 0x158

00010f28 <__gmon_start__@plt>:
   10f28:	add	ip, pc, #0, 12
   10f2c:	add	ip, ip, #94208	; 0x17000
   10f30:	ldr	pc, [ip, #336]!	; 0x150

00010f34 <__ctype_b_loc@plt>:
   10f34:	add	ip, pc, #0, 12
   10f38:	add	ip, ip, #94208	; 0x17000
   10f3c:	ldr	pc, [ip, #328]!	; 0x148

00010f40 <exit@plt>:
   10f40:	add	ip, pc, #0, 12
   10f44:	add	ip, ip, #94208	; 0x17000
   10f48:	ldr	pc, [ip, #320]!	; 0x140

00010f4c <bcmp@plt>:
   10f4c:	add	ip, pc, #0, 12
   10f50:	add	ip, ip, #94208	; 0x17000
   10f54:	ldr	pc, [ip, #312]!	; 0x138

00010f58 <strlen@plt>:
   10f58:	add	ip, pc, #0, 12
   10f5c:	add	ip, ip, #94208	; 0x17000
   10f60:	ldr	pc, [ip, #304]!	; 0x130

00010f64 <__errno_location@plt>:
   10f64:	add	ip, pc, #0, 12
   10f68:	add	ip, ip, #94208	; 0x17000
   10f6c:	ldr	pc, [ip, #296]!	; 0x128

00010f70 <__cxa_atexit@plt>:
   10f70:	add	ip, pc, #0, 12
   10f74:	add	ip, ip, #94208	; 0x17000
   10f78:	ldr	pc, [ip, #288]!	; 0x120

00010f7c <memset@plt>:
   10f7c:	add	ip, pc, #0, 12
   10f80:	add	ip, ip, #94208	; 0x17000
   10f84:	ldr	pc, [ip, #280]!	; 0x118

00010f88 <__printf_chk@plt>:
   10f88:	add	ip, pc, #0, 12
   10f8c:	add	ip, ip, #94208	; 0x17000
   10f90:	ldr	pc, [ip, #272]!	; 0x110

00010f94 <fileno@plt>:
   10f94:	add	ip, pc, #0, 12
   10f98:	add	ip, ip, #94208	; 0x17000
   10f9c:	ldr	pc, [ip, #264]!	; 0x108

00010fa0 <__fprintf_chk@plt>:
   10fa0:	add	ip, pc, #0, 12
   10fa4:	add	ip, ip, #94208	; 0x17000
   10fa8:	ldr	pc, [ip, #256]!	; 0x100

00010fac <memchr@plt>:
   10fac:	add	ip, pc, #0, 12
   10fb0:	add	ip, ip, #94208	; 0x17000
   10fb4:	ldr	pc, [ip, #248]!	; 0xf8

00010fb8 <fclose@plt>:
   10fb8:	add	ip, pc, #0, 12
   10fbc:	add	ip, ip, #94208	; 0x17000
   10fc0:	ldr	pc, [ip, #240]!	; 0xf0

00010fc4 <fseeko64@plt>:
   10fc4:	add	ip, pc, #0, 12
   10fc8:	add	ip, ip, #94208	; 0x17000
   10fcc:	ldr	pc, [ip, #232]!	; 0xe8

00010fd0 <__overflow@plt>:
   10fd0:	add	ip, pc, #0, 12
   10fd4:	add	ip, ip, #94208	; 0x17000
   10fd8:	ldr	pc, [ip, #224]!	; 0xe0

00010fdc <setlocale@plt>:
   10fdc:	add	ip, pc, #0, 12
   10fe0:	add	ip, ip, #94208	; 0x17000
   10fe4:	ldr	pc, [ip, #216]!	; 0xd8

00010fe8 <strrchr@plt>:
   10fe8:	add	ip, pc, #0, 12
   10fec:	add	ip, ip, #94208	; 0x17000
   10ff0:	ldr	pc, [ip, #208]!	; 0xd0

00010ff4 <nl_langinfo@plt>:
   10ff4:	add	ip, pc, #0, 12
   10ff8:	add	ip, ip, #94208	; 0x17000
   10ffc:	ldr	pc, [ip, #200]!	; 0xc8

00011000 <newlocale@plt>:
   11000:	add	ip, pc, #0, 12
   11004:	add	ip, ip, #94208	; 0x17000
   11008:	ldr	pc, [ip, #192]!	; 0xc0

0001100c <__strtoll_internal@plt>:
   1100c:	add	ip, pc, #0, 12
   11010:	add	ip, ip, #94208	; 0x17000
   11014:	ldr	pc, [ip, #184]!	; 0xb8

00011018 <bindtextdomain@plt>:
   11018:	add	ip, pc, #0, 12
   1101c:	add	ip, ip, #94208	; 0x17000
   11020:	ldr	pc, [ip, #176]!	; 0xb0

00011024 <strncmp@plt>:
   11024:	add	ip, pc, #0, 12
   11028:	add	ip, ip, #94208	; 0x17000
   1102c:	ldr	pc, [ip, #168]!	; 0xa8

00011030 <abort@plt>:
   11030:	add	ip, pc, #0, 12
   11034:	add	ip, ip, #94208	; 0x17000
   11038:	ldr	pc, [ip, #160]!	; 0xa0

0001103c <__mempcpy_chk@plt>:
   1103c:	add	ip, pc, #0, 12
   11040:	add	ip, ip, #94208	; 0x17000
   11044:	ldr	pc, [ip, #152]!	; 0x98

Disassembly of section .text:

00011048 <.text>:
   11048:	mov	fp, #0
   1104c:	mov	lr, #0
   11050:	pop	{r1}		; (ldr r1, [sp], #4)
   11054:	mov	r2, sp
   11058:	push	{r2}		; (str r2, [sp, #-4]!)
   1105c:	push	{r0}		; (str r0, [sp, #-4]!)
   11060:	ldr	ip, [pc, #16]	; 11078 <__mempcpy_chk@plt+0x3c>
   11064:	push	{ip}		; (str ip, [sp, #-4]!)
   11068:	ldr	r0, [pc, #12]	; 1107c <__mempcpy_chk@plt+0x40>
   1106c:	ldr	r3, [pc, #12]	; 11080 <__mempcpy_chk@plt+0x44>
   11070:	bl	10f04 <__libc_start_main@plt>
   11074:	bl	11030 <abort@plt>
   11078:	muleq	r1, ip, r3
   1107c:	andeq	r1, r1, r4, lsl r4
   11080:	andeq	r6, r1, ip, lsr r3
   11084:	ldr	r3, [pc, #20]	; 110a0 <__mempcpy_chk@plt+0x64>
   11088:	ldr	r2, [pc, #20]	; 110a4 <__mempcpy_chk@plt+0x68>
   1108c:	add	r3, pc, r3
   11090:	ldr	r2, [r3, r2]
   11094:	cmp	r2, #0
   11098:	bxeq	lr
   1109c:	b	10f28 <__gmon_start__@plt>
   110a0:	andeq	r6, r1, ip, ror #30
   110a4:	andeq	r0, r0, r0, ror #1
   110a8:	ldr	r0, [pc, #24]	; 110c8 <__mempcpy_chk@plt+0x8c>
   110ac:	ldr	r3, [pc, #24]	; 110cc <__mempcpy_chk@plt+0x90>
   110b0:	cmp	r3, r0
   110b4:	bxeq	lr
   110b8:	ldr	r3, [pc, #16]	; 110d0 <__mempcpy_chk@plt+0x94>
   110bc:	cmp	r3, #0
   110c0:	bxeq	lr
   110c4:	bx	r3
   110c8:	andeq	r8, r2, r8, lsr r1
   110cc:	andeq	r8, r2, r8, lsr r1
   110d0:	andeq	r0, r0, r0
   110d4:	ldr	r0, [pc, #36]	; 11100 <__mempcpy_chk@plt+0xc4>
   110d8:	ldr	r1, [pc, #36]	; 11104 <__mempcpy_chk@plt+0xc8>
   110dc:	sub	r1, r1, r0
   110e0:	asr	r1, r1, #2
   110e4:	add	r1, r1, r1, lsr #31
   110e8:	asrs	r1, r1, #1
   110ec:	bxeq	lr
   110f0:	ldr	r3, [pc, #16]	; 11108 <__mempcpy_chk@plt+0xcc>
   110f4:	cmp	r3, #0
   110f8:	bxeq	lr
   110fc:	bx	r3
   11100:	andeq	r8, r2, r8, lsr r1
   11104:	andeq	r8, r2, r8, lsr r1
   11108:	andeq	r0, r0, r0
   1110c:	push	{r4, lr}
   11110:	ldr	r4, [pc, #24]	; 11130 <__mempcpy_chk@plt+0xf4>
   11114:	ldrb	r3, [r4]
   11118:	cmp	r3, #0
   1111c:	popne	{r4, pc}
   11120:	bl	110a8 <__mempcpy_chk@plt+0x6c>
   11124:	mov	r3, #1
   11128:	strb	r3, [r4]
   1112c:	pop	{r4, pc}
   11130:	andeq	r8, r2, r8, asr #2
   11134:	b	110d4 <__mempcpy_chk@plt+0x98>
   11138:	push	{fp, lr}
   1113c:	mov	fp, sp
   11140:	sub	sp, sp, #56	; 0x38
   11144:	mov	r4, r0
   11148:	cmp	r0, #0
   1114c:	bne	113d0 <__mempcpy_chk@plt+0x394>
   11150:	movw	r1, #25579	; 0x63eb
   11154:	mov	r0, #0
   11158:	mov	r2, #5
   1115c:	movt	r1, #1
   11160:	bl	10e68 <dcgettext@plt>
   11164:	mov	r1, r0
   11168:	movw	r0, #33112	; 0x8158
   1116c:	movt	r0, #2
   11170:	ldr	r2, [r0]
   11174:	mov	r0, #1
   11178:	mov	r3, r2
   1117c:	bl	10f88 <__printf_chk@plt>
   11180:	movw	r1, #25628	; 0x641c
   11184:	mov	r0, #0
   11188:	mov	r2, #5
   1118c:	movt	r1, #1
   11190:	bl	10e68 <dcgettext@plt>
   11194:	movw	r7, #33092	; 0x8144
   11198:	movt	r7, #2
   1119c:	ldr	r1, [r7]
   111a0:	bl	10dd8 <fputs_unlocked@plt>
   111a4:	movw	r1, #25701	; 0x6465
   111a8:	mov	r0, #0
   111ac:	mov	r2, #5
   111b0:	movt	r1, #1
   111b4:	bl	10e68 <dcgettext@plt>
   111b8:	ldr	r1, [r7]
   111bc:	bl	10dd8 <fputs_unlocked@plt>
   111c0:	movw	r1, #25746	; 0x6492
   111c4:	mov	r0, #0
   111c8:	mov	r2, #5
   111cc:	movt	r1, #1
   111d0:	bl	10e68 <dcgettext@plt>
   111d4:	ldr	r1, [r7]
   111d8:	bl	10dd8 <fputs_unlocked@plt>
   111dc:	movw	r1, #25800	; 0x64c8
   111e0:	mov	r0, #0
   111e4:	mov	r2, #5
   111e8:	movt	r1, #1
   111ec:	bl	10e68 <dcgettext@plt>
   111f0:	ldr	r1, [r7]
   111f4:	bl	10dd8 <fputs_unlocked@plt>
   111f8:	movw	r1, #25897	; 0x6529
   111fc:	mov	r0, #0
   11200:	mov	r2, #5
   11204:	movt	r1, #1
   11208:	bl	10e68 <dcgettext@plt>
   1120c:	ldr	r1, [r7]
   11210:	bl	10dd8 <fputs_unlocked@plt>
   11214:	movw	r1, #26126	; 0x660e
   11218:	mov	r0, #0
   1121c:	mov	r2, #5
   11220:	movt	r1, #1
   11224:	bl	10e68 <dcgettext@plt>
   11228:	ldr	r1, [r7]
   1122c:	bl	10dd8 <fputs_unlocked@plt>
   11230:	movw	r1, #26378	; 0x670a
   11234:	mov	r0, #0
   11238:	mov	r2, #5
   1123c:	movt	r1, #1
   11240:	bl	10e68 <dcgettext@plt>
   11244:	ldr	r1, [r7]
   11248:	bl	10dd8 <fputs_unlocked@plt>
   1124c:	movw	r1, #26826	; 0x68ca
   11250:	mov	r0, #0
   11254:	mov	r2, #5
   11258:	movt	r1, #1
   1125c:	bl	10e68 <dcgettext@plt>
   11260:	movw	r5, #27017	; 0x6989
   11264:	mov	r1, r0
   11268:	mov	r0, #1
   1126c:	movt	r5, #1
   11270:	mov	r2, r5
   11274:	bl	10f88 <__printf_chk@plt>
   11278:	movw	r0, #27816	; 0x6ca8
   1127c:	mov	r2, #48	; 0x30
   11280:	mov	r6, sp
   11284:	movt	r0, #1
   11288:	add	r1, r0, #32
   1128c:	add	r3, r0, #16
   11290:	vld1.64	{d18-d19}, [r0], r2
   11294:	vld1.64	{d16-d17}, [r1]
   11298:	vld1.64	{d20-d21}, [r3]
   1129c:	vldr	d22, [r0]
   112a0:	add	r1, r6, #32
   112a4:	add	r0, r6, #16
   112a8:	vst1.64	{d16-d17}, [r1]
   112ac:	movw	r1, #27183	; 0x6a2f
   112b0:	vst1.64	{d20-d21}, [r0]
   112b4:	mov	r0, r6
   112b8:	movt	r1, #1
   112bc:	vst1.64	{d18-d19}, [r0], r2
   112c0:	vstr	d22, [r0]
   112c4:	mov	r0, r5
   112c8:	bl	10dfc <strcmp@plt>
   112cc:	cmp	r0, #0
   112d0:	ldrne	r1, [r6, #8]!
   112d4:	cmpne	r1, #0
   112d8:	bne	112c4 <__mempcpy_chk@plt+0x288>
   112dc:	movw	r1, #27278	; 0x6a8e
   112e0:	ldr	r6, [r6, #4]
   112e4:	mov	r0, #0
   112e8:	mov	r2, #5
   112ec:	movt	r1, #1
   112f0:	bl	10e68 <dcgettext@plt>
   112f4:	movw	r2, #27081	; 0x69c9
   112f8:	movw	r3, #27301	; 0x6aa5
   112fc:	mov	r1, r0
   11300:	mov	r0, #1
   11304:	movt	r2, #1
   11308:	movt	r3, #1
   1130c:	bl	10f88 <__printf_chk@plt>
   11310:	cmp	r6, #0
   11314:	mov	r0, #5
   11318:	mov	r1, #0
   1131c:	moveq	r6, r5
   11320:	bl	10fdc <setlocale@plt>
   11324:	cmp	r0, #0
   11328:	beq	11360 <__mempcpy_chk@plt+0x324>
   1132c:	movw	r1, #27341	; 0x6acd
   11330:	mov	r2, #3
   11334:	movt	r1, #1
   11338:	bl	11024 <strncmp@plt>
   1133c:	cmp	r0, #0
   11340:	beq	11360 <__mempcpy_chk@plt+0x324>
   11344:	movw	r1, #27345	; 0x6ad1
   11348:	mov	r0, #0
   1134c:	mov	r2, #5
   11350:	movt	r1, #1
   11354:	bl	10e68 <dcgettext@plt>
   11358:	ldr	r1, [r7]
   1135c:	bl	10dd8 <fputs_unlocked@plt>
   11360:	movw	r1, #27416	; 0x6b18
   11364:	mov	r0, #0
   11368:	mov	r2, #5
   1136c:	movt	r1, #1
   11370:	bl	10e68 <dcgettext@plt>
   11374:	movw	r2, #27301	; 0x6aa5
   11378:	mov	r1, r0
   1137c:	mov	r0, #1
   11380:	mov	r3, r5
   11384:	movt	r2, #1
   11388:	bl	10f88 <__printf_chk@plt>
   1138c:	movw	r1, #27443	; 0x6b33
   11390:	mov	r0, #0
   11394:	mov	r2, #5
   11398:	movt	r1, #1
   1139c:	bl	10e68 <dcgettext@plt>
   113a0:	mov	r1, r0
   113a4:	movw	r0, #27211	; 0x6a4b
   113a8:	movw	r3, #25700	; 0x6464
   113ac:	cmp	r6, r5
   113b0:	mov	r2, r6
   113b4:	movt	r0, #1
   113b8:	movt	r3, #1
   113bc:	moveq	r3, r0
   113c0:	mov	r0, #1
   113c4:	bl	10f88 <__printf_chk@plt>
   113c8:	mov	r0, r4
   113cc:	bl	10f40 <exit@plt>
   113d0:	movw	r0, #33088	; 0x8140
   113d4:	movw	r1, #25540	; 0x63c4
   113d8:	mov	r2, #5
   113dc:	movt	r0, #2
   113e0:	movt	r1, #1
   113e4:	ldr	r5, [r0]
   113e8:	mov	r0, #0
   113ec:	bl	10e68 <dcgettext@plt>
   113f0:	mov	r2, r0
   113f4:	movw	r0, #33112	; 0x8158
   113f8:	mov	r1, #1
   113fc:	movt	r0, #2
   11400:	ldr	r3, [r0]
   11404:	mov	r0, r5
   11408:	bl	10fa0 <__fprintf_chk@plt>
   1140c:	mov	r0, r4
   11410:	bl	10f40 <exit@plt>
   11414:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11418:	add	fp, sp, #28
   1141c:	sub	sp, sp, #4
   11420:	vpush	{d8}
   11424:	sub	sp, sp, #320	; 0x140
   11428:	mov	r7, r0
   1142c:	ldr	r0, [r1]
   11430:	mov	r5, r1
   11434:	bl	12b4c <__mempcpy_chk@plt+0x1b10>
   11438:	movw	r1, #25700	; 0x6464
   1143c:	mov	r0, #6
   11440:	movt	r1, #1
   11444:	bl	10fdc <setlocale@plt>
   11448:	movw	r6, #27085	; 0x69cd
   1144c:	movw	r1, #27024	; 0x6990
   11450:	movt	r6, #1
   11454:	movt	r1, #1
   11458:	mov	r0, r6
   1145c:	bl	11018 <bindtextdomain@plt>
   11460:	mov	r0, r6
   11464:	bl	10e80 <textdomain@plt>
   11468:	movw	r0, #10808	; 0x2a38
   1146c:	movt	r0, #1
   11470:	bl	163a0 <__mempcpy_chk@plt+0x5364>
   11474:	movw	r4, #33100	; 0x814c
   11478:	mov	r0, #0
   1147c:	movt	r4, #2
   11480:	strb	r0, [r4]
   11484:	movw	r0, #27048	; 0x69a8
   11488:	movt	r0, #1
   1148c:	bl	10ee0 <getenv@plt>
   11490:	cmp	r0, #0
   11494:	movwne	r0, #1
   11498:	cmp	r7, #2
   1149c:	strb	r0, [r4, #1]
   114a0:	bne	11518 <__mempcpy_chk@plt+0x4dc>
   114a4:	ldr	r4, [r5, #4]
   114a8:	movw	r1, #27064	; 0x69b8
   114ac:	movt	r1, #1
   114b0:	mov	r0, r4
   114b4:	bl	10dfc <strcmp@plt>
   114b8:	cmp	r0, #0
   114bc:	beq	12258 <__mempcpy_chk@plt+0x121c>
   114c0:	movw	r1, #27071	; 0x69bf
   114c4:	mov	r0, r4
   114c8:	movt	r1, #1
   114cc:	bl	10dfc <strcmp@plt>
   114d0:	cmp	r0, #0
   114d4:	bne	11520 <__mempcpy_chk@plt+0x4e4>
   114d8:	movw	r0, #33008	; 0x80f0
   114dc:	movw	r1, #27095	; 0x69d7
   114e0:	movw	r2, #27081	; 0x69c9
   114e4:	mov	r4, #0
   114e8:	movt	r0, #2
   114ec:	movt	r1, #1
   114f0:	movt	r2, #1
   114f4:	ldr	r3, [r0]
   114f8:	movw	r0, #33092	; 0x8144
   114fc:	stm	sp, {r1, r4}
   11500:	movw	r1, #27017	; 0x6989
   11504:	movt	r0, #2
   11508:	movt	r1, #1
   1150c:	ldr	r0, [r0]
   11510:	bl	153a0 <__mempcpy_chk@plt+0x4364>
   11514:	b	121a8 <__mempcpy_chk@plt+0x116c>
   11518:	blt	1222c <__mempcpy_chk@plt+0x11f0>
   1151c:	ldr	r4, [r5, #4]
   11520:	movw	r1, #27111	; 0x69e7
   11524:	mov	r0, r4
   11528:	movt	r1, #1
   1152c:	bl	10dfc <strcmp@plt>
   11530:	cmp	r0, #0
   11534:	beq	11544 <__mempcpy_chk@plt+0x508>
   11538:	str	r4, [sp, #8]
   1153c:	mov	r0, r5
   11540:	b	1155c <__mempcpy_chk@plt+0x520>
   11544:	cmp	r7, #3
   11548:	blt	1222c <__mempcpy_chk@plt+0x11f0>
   1154c:	ldr	r1, [r5, #8]
   11550:	add	r0, r5, #4
   11554:	sub	r7, r7, #1
   11558:	str	r1, [sp, #8]
   1155c:	add	r1, sp, #56	; 0x38
   11560:	movw	r6, #33092	; 0x8144
   11564:	mov	r4, #0
   11568:	add	r1, r1, #99	; 0x63
   1156c:	movt	r6, #2
   11570:	str	r1, [sp, #20]
   11574:	add	r1, r0, #8
   11578:	sub	r0, r7, #2
   1157c:	mov	r8, r0
   11580:	ldr	r5, [sp, #8]
   11584:	str	r0, [sp, #12]
   11588:	mov	r0, #0
   1158c:	mov	r7, r1
   11590:	str	r1, [sp, #16]
   11594:	str	r0, [sp, #28]
   11598:	mov	r0, #0
   1159c:	str	r0, [sp, #24]
   115a0:	ldrb	r1, [r5]
   115a4:	cmp	r1, #37	; 0x25
   115a8:	bne	115d0 <__mempcpy_chk@plt+0x594>
   115ac:	b	11614 <__mempcpy_chk@plt+0x5d8>
   115b0:	mov	r0, r5
   115b4:	mov	r1, #0
   115b8:	bl	12330 <__mempcpy_chk@plt+0x12f4>
   115bc:	add	r9, r5, r0
   115c0:	add	r5, r9, #1
   115c4:	ldrb	r1, [r5]
   115c8:	cmp	r1, #37	; 0x25
   115cc:	beq	11614 <__mempcpy_chk@plt+0x5d8>
   115d0:	cmp	r1, #92	; 0x5c
   115d4:	beq	115b0 <__mempcpy_chk@plt+0x574>
   115d8:	cmp	r1, #0
   115dc:	beq	12138 <__mempcpy_chk@plt+0x10fc>
   115e0:	ldr	r0, [r6]
   115e4:	ldr	r2, [r0, #20]
   115e8:	ldr	r3, [r0, #24]
   115ec:	cmp	r2, r3
   115f0:	bcs	12114 <__mempcpy_chk@plt+0x10d8>
   115f4:	add	r3, r2, #1
   115f8:	str	r3, [r0, #20]
   115fc:	strb	r1, [r2]
   11600:	mov	r9, r5
   11604:	add	r5, r9, #1
   11608:	ldrb	r1, [r5]
   1160c:	cmp	r1, #37	; 0x25
   11610:	bne	115d0 <__mempcpy_chk@plt+0x594>
   11614:	mov	r9, r5
   11618:	ldrb	r0, [r9, #1]!
   1161c:	cmp	r0, #113	; 0x71
   11620:	beq	11714 <__mempcpy_chk@plt+0x6d8>
   11624:	cmp	r0, #98	; 0x62
   11628:	beq	1166c <__mempcpy_chk@plt+0x630>
   1162c:	cmp	r0, #37	; 0x25
   11630:	bne	11748 <__mempcpy_chk@plt+0x70c>
   11634:	ldr	r0, [r6]
   11638:	ldr	r1, [r0, #20]
   1163c:	ldr	r2, [r0, #24]
   11640:	cmp	r1, r2
   11644:	bcs	1211c <__mempcpy_chk@plt+0x10e0>
   11648:	add	r2, r1, #1
   1164c:	add	r5, r9, #1
   11650:	str	r2, [r0, #20]
   11654:	mov	r0, #37	; 0x25
   11658:	strb	r0, [r1]
   1165c:	ldrb	r1, [r5]
   11660:	cmp	r1, #37	; 0x25
   11664:	bne	115d0 <__mempcpy_chk@plt+0x594>
   11668:	b	11614 <__mempcpy_chk@plt+0x5d8>
   1166c:	cmp	r8, #1
   11670:	blt	11604 <__mempcpy_chk@plt+0x5c8>
   11674:	ldr	r5, [r7]
   11678:	ldrb	r1, [r5]
   1167c:	cmp	r1, #92	; 0x5c
   11680:	bne	116f0 <__mempcpy_chk@plt+0x6b4>
   11684:	b	116b8 <__mempcpy_chk@plt+0x67c>
   11688:	ldr	r0, [r6]
   1168c:	ldr	r2, [r0, #20]
   11690:	ldr	r3, [r0, #24]
   11694:	cmp	r2, r3
   11698:	bcs	116dc <__mempcpy_chk@plt+0x6a0>
   1169c:	add	r3, r2, #1
   116a0:	add	r5, r5, #1
   116a4:	str	r3, [r0, #20]
   116a8:	strb	r1, [r2]
   116ac:	ldrb	r1, [r5]
   116b0:	cmp	r1, #92	; 0x5c
   116b4:	bne	116f0 <__mempcpy_chk@plt+0x6b4>
   116b8:	mov	r0, r5
   116bc:	mov	r1, #1
   116c0:	bl	12330 <__mempcpy_chk@plt+0x12f4>
   116c4:	add	r0, r5, r0
   116c8:	add	r5, r0, #1
   116cc:	ldrb	r1, [r5]
   116d0:	cmp	r1, #92	; 0x5c
   116d4:	bne	116f0 <__mempcpy_chk@plt+0x6b4>
   116d8:	b	116b8 <__mempcpy_chk@plt+0x67c>
   116dc:	bl	10fd0 <__overflow@plt>
   116e0:	add	r5, r5, #1
   116e4:	ldrb	r1, [r5]
   116e8:	cmp	r1, #92	; 0x5c
   116ec:	beq	116b8 <__mempcpy_chk@plt+0x67c>
   116f0:	cmp	r1, #0
   116f4:	bne	11688 <__mempcpy_chk@plt+0x64c>
   116f8:	sub	r8, r8, #1
   116fc:	add	r7, r7, #4
   11700:	add	r5, r9, #1
   11704:	ldrb	r1, [r5]
   11708:	cmp	r1, #37	; 0x25
   1170c:	bne	115d0 <__mempcpy_chk@plt+0x594>
   11710:	b	11614 <__mempcpy_chk@plt+0x5d8>
   11714:	cmp	r8, #1
   11718:	blt	11604 <__mempcpy_chk@plt+0x5c8>
   1171c:	ldr	r1, [r7], #4
   11720:	mov	r0, #3
   11724:	bl	145e8 <__mempcpy_chk@plt+0x35ac>
   11728:	ldr	r1, [r6]
   1172c:	bl	10dd8 <fputs_unlocked@plt>
   11730:	sub	r8, r8, #1
   11734:	add	r5, r9, #1
   11738:	ldrb	r1, [r5]
   1173c:	cmp	r1, #37	; 0x25
   11740:	bne	115d0 <__mempcpy_chk@plt+0x594>
   11744:	b	11614 <__mempcpy_chk@plt+0x5d8>
   11748:	add	r0, sp, #56	; 0x38
   1174c:	mov	r1, #0
   11750:	mov	r2, #256	; 0x100
   11754:	mov	r6, #0
   11758:	bl	10f7c <memset@plt>
   1175c:	mov	sl, #1
   11760:	movw	r0, #257	; 0x101
   11764:	movw	r1, #257	; 0x101
   11768:	strb	sl, [sp, #176]	; 0xb0
   1176c:	strb	sl, [sp, #144]	; 0x90
   11770:	strb	sl, [sp, #173]	; 0xad
   11774:	strb	sl, [sp, #171]	; 0xab
   11778:	strb	sl, [sp, #167]	; 0xa7
   1177c:	strb	sl, [sp, #161]	; 0xa1
   11780:	strb	sl, [sp, #127]	; 0x7f
   11784:	strh	r0, [sp, #125]	; 0x7d
   11788:	ldr	r0, [sp, #20]
   1178c:	movt	r1, #257	; 0x101
   11790:	strb	sl, [sp, #153]	; 0x99
   11794:	strb	sl, [sp, #121]	; 0x79
   11798:	str	r1, [r0]
   1179c:	strb	sl, [r0, #4]
   117a0:	ldrb	r0, [r5, sl]
   117a4:	sub	r1, r0, #32
   117a8:	cmp	r1, #41	; 0x29
   117ac:	bls	117dc <__mempcpy_chk@plt+0x7a0>
   117b0:	b	118c0 <__mempcpy_chk@plt+0x884>
   117b4:	strb	r4, [sp, #171]	; 0xab
   117b8:	strb	r4, [sp, #173]	; 0xad
   117bc:	strb	r4, [sp, #161]	; 0xa1
   117c0:	strh	r4, [sp, #155]	; 0x9b
   117c4:	add	r6, r6, #1
   117c8:	add	sl, sl, #1
   117cc:	ldrb	r0, [r5, sl]
   117d0:	sub	r1, r0, #32
   117d4:	cmp	r1, #41	; 0x29
   117d8:	bhi	118c0 <__mempcpy_chk@plt+0x884>
   117dc:	add	r2, pc, #0
   117e0:	ldr	pc, [r2, r1, lsl #2]
   117e4:	andeq	r1, r1, r4, asr #15
   117e8:	andeq	r1, r1, r0, asr #17
   117ec:	andeq	r1, r1, r0, asr #17
   117f0:			; <UNDEFINED> instruction: 0x000117b4
   117f4:	andeq	r1, r1, r0, asr #17
   117f8:	andeq	r1, r1, r0, asr #17
   117fc:	andeq	r1, r1, r0, asr #17
   11800:	andeq	r1, r1, ip, lsl #17
   11804:	andeq	r1, r1, r0, asr #17
   11808:	andeq	r1, r1, r0, asr #17
   1180c:	andeq	r1, r1, r8, lsl #18
   11810:	andeq	r1, r1, r4, asr #15
   11814:	andeq	r1, r1, r0, asr #17
   11818:	andeq	r1, r1, r4, asr #15
   1181c:	andeq	r1, r1, r0, asr #17
   11820:	andeq	r1, r1, r0, asr #17
   11824:			; <UNDEFINED> instruction: 0x000118b4
   11828:	andeq	r1, r1, r0, asr #17
   1182c:	andeq	r1, r1, r0, asr #17
   11830:	andeq	r1, r1, r0, asr #17
   11834:	andeq	r1, r1, r0, asr #17
   11838:	andeq	r1, r1, r0, asr #17
   1183c:	andeq	r1, r1, r0, asr #17
   11840:	andeq	r1, r1, r0, asr #17
   11844:	andeq	r1, r1, r0, asr #17
   11848:	andeq	r1, r1, r0, asr #17
   1184c:	andeq	r1, r1, r0, asr #17
   11850:	andeq	r1, r1, r0, asr #17
   11854:	andeq	r1, r1, r0, asr #17
   11858:	andeq	r1, r1, r0, asr #17
   1185c:	andeq	r1, r1, r0, asr #17
   11860:	andeq	r1, r1, r0, asr #17
   11864:	andeq	r1, r1, r0, asr #17
   11868:	andeq	r1, r1, r0, asr #17
   1186c:	andeq	r1, r1, r0, asr #17
   11870:	andeq	r1, r1, r0, asr #17
   11874:	andeq	r1, r1, r0, asr #17
   11878:	andeq	r1, r1, r0, asr #17
   1187c:	andeq	r1, r1, r0, asr #17
   11880:	andeq	r1, r1, r0, asr #17
   11884:	andeq	r1, r1, r0, asr #17
   11888:	andeq	r1, r1, ip, lsl #17
   1188c:	strb	r4, [sp, #176]	; 0xb0
   11890:	strb	r4, [sp, #144]	; 0x90
   11894:	strb	r4, [sp, #171]	; 0xab
   11898:	strb	r4, [sp, #167]	; 0xa7
   1189c:	strb	r4, [sp, #157]	; 0x9d
   118a0:	strb	r4, [sp, #125]	; 0x7d
   118a4:	strb	r4, [sp, #155]	; 0x9b
   118a8:	strb	r4, [sp, #153]	; 0x99
   118ac:	strb	r4, [sp, #121]	; 0x79
   118b0:	b	117c4 <__mempcpy_chk@plt+0x788>
   118b4:	strb	r4, [sp, #155]	; 0x9b
   118b8:	strb	r4, [sp, #171]	; 0xab
   118bc:	b	117c4 <__mempcpy_chk@plt+0x788>
   118c0:	sub	r1, r0, #48	; 0x30
   118c4:	mov	r2, #0
   118c8:	cmp	r1, #9
   118cc:	str	r2, [sp, #36]	; 0x24
   118d0:	bhi	11934 <__mempcpy_chk@plt+0x8f8>
   118d4:	add	r0, r5, r6
   118d8:	add	r6, r6, #1
   118dc:	ldrb	r0, [r0, #2]
   118e0:	sub	r1, r0, #48	; 0x30
   118e4:	cmp	r1, #10
   118e8:	bcc	118d4 <__mempcpy_chk@plt+0x898>
   118ec:	add	r1, r5, r6
   118f0:	add	sl, r6, #1
   118f4:	add	r9, r1, #1
   118f8:	mov	r6, #0
   118fc:	cmp	r0, #46	; 0x2e
   11900:	bne	11a4c <__mempcpy_chk@plt+0xa10>
   11904:	b	11974 <__mempcpy_chk@plt+0x938>
   11908:	cmp	r8, #1
   1190c:	blt	11948 <__mempcpy_chk@plt+0x90c>
   11910:	ldr	r0, [r7]
   11914:	bl	12260 <__mempcpy_chk@plt+0x1224>
   11918:	str	r0, [sp, #28]
   1191c:	adds	r0, r0, #-2147483648	; 0x80000000
   11920:	adcs	r0, r1, #0
   11924:	bne	121bc <__mempcpy_chk@plt+0x1180>
   11928:	sub	r8, r8, #1
   1192c:	add	r7, r7, #4
   11930:	b	11950 <__mempcpy_chk@plt+0x914>
   11934:	add	r9, r5, sl
   11938:	mov	r6, #0
   1193c:	cmp	r0, #46	; 0x2e
   11940:	beq	11974 <__mempcpy_chk@plt+0x938>
   11944:	b	11a4c <__mempcpy_chk@plt+0xa10>
   11948:	mov	r0, #0
   1194c:	str	r0, [sp, #28]
   11950:	add	r0, r5, sl
   11954:	mov	r1, #1
   11958:	add	sl, sl, #1
   1195c:	add	r9, r0, #1
   11960:	ldrb	r0, [r0, #1]
   11964:	str	r1, [sp, #36]	; 0x24
   11968:	mov	r6, #0
   1196c:	cmp	r0, #46	; 0x2e
   11970:	bne	11a4c <__mempcpy_chk@plt+0xa10>
   11974:	strb	r4, [sp, #155]	; 0x9b
   11978:	mov	r0, r9
   1197c:	ldrb	r1, [r0, #1]!
   11980:	cmp	r1, #42	; 0x2a
   11984:	bne	119c0 <__mempcpy_chk@plt+0x984>
   11988:	add	sl, sl, #2
   1198c:	add	r9, r9, #2
   11990:	mov	r6, #1
   11994:	cmp	r8, #1
   11998:	blt	11a1c <__mempcpy_chk@plt+0x9e0>
   1199c:	ldr	r0, [r7]
   119a0:	bl	12260 <__mempcpy_chk@plt+0x1224>
   119a4:	cmp	r1, #0
   119a8:	bmi	11a3c <__mempcpy_chk@plt+0xa00>
   119ac:	str	r0, [sp, #24]
   119b0:	subs	r0, r0, #-2147483648	; 0x80000000
   119b4:	sbcs	r0, r1, #0
   119b8:	blt	11a44 <__mempcpy_chk@plt+0xa08>
   119bc:	b	121c8 <__mempcpy_chk@plt+0x118c>
   119c0:	sub	r1, r1, #48	; 0x30
   119c4:	add	sl, sl, #1
   119c8:	str	r8, [sp, #52]	; 0x34
   119cc:	cmp	r1, #9
   119d0:	bhi	11a04 <__mempcpy_chk@plt+0x9c8>
   119d4:	add	r0, r9, #2
   119d8:	ldrb	r1, [r0], #1
   119dc:	add	sl, sl, #1
   119e0:	sub	r1, r1, #48	; 0x30
   119e4:	cmp	r1, #10
   119e8:	bcc	119d8 <__mempcpy_chk@plt+0x99c>
   119ec:	sub	r9, r0, #1
   119f0:	ldrb	r8, [r9]
   119f4:	sub	r0, r8, #76	; 0x4c
   119f8:	cmp	r0, #46	; 0x2e
   119fc:	bls	11a60 <__mempcpy_chk@plt+0xa24>
   11a00:	b	11b38 <__mempcpy_chk@plt+0xafc>
   11a04:	mov	r9, r0
   11a08:	ldrb	r8, [r9]
   11a0c:	sub	r0, r8, #76	; 0x4c
   11a10:	cmp	r0, #46	; 0x2e
   11a14:	bls	11a60 <__mempcpy_chk@plt+0xa24>
   11a18:	b	11b38 <__mempcpy_chk@plt+0xafc>
   11a1c:	mov	r0, #0
   11a20:	str	r8, [sp, #52]	; 0x34
   11a24:	str	r0, [sp, #24]
   11a28:	ldrb	r8, [r9]
   11a2c:	sub	r0, r8, #76	; 0x4c
   11a30:	cmp	r0, #46	; 0x2e
   11a34:	bls	11a60 <__mempcpy_chk@plt+0xa24>
   11a38:	b	11b38 <__mempcpy_chk@plt+0xafc>
   11a3c:	mvn	r0, #0
   11a40:	str	r0, [sp, #24]
   11a44:	sub	r8, r8, #1
   11a48:	add	r7, r7, #4
   11a4c:	str	r8, [sp, #52]	; 0x34
   11a50:	ldrb	r8, [r9]
   11a54:	sub	r0, r8, #76	; 0x4c
   11a58:	cmp	r0, #46	; 0x2e
   11a5c:	bhi	11b38 <__mempcpy_chk@plt+0xafc>
   11a60:	add	r1, pc, #0
   11a64:	ldr	pc, [r1, r0, lsl #2]
   11a68:	andeq	r1, r1, r4, lsr #22
   11a6c:	andeq	r1, r1, r8, lsr fp
   11a70:	andeq	r1, r1, r8, lsr fp
   11a74:	andeq	r1, r1, r8, lsr fp
   11a78:	andeq	r1, r1, r8, lsr fp
   11a7c:	andeq	r1, r1, r8, lsr fp
   11a80:	andeq	r1, r1, r8, lsr fp
   11a84:	andeq	r1, r1, r8, lsr fp
   11a88:	andeq	r1, r1, r8, lsr fp
   11a8c:	andeq	r1, r1, r8, lsr fp
   11a90:	andeq	r1, r1, r8, lsr fp
   11a94:	andeq	r1, r1, r8, lsr fp
   11a98:	andeq	r1, r1, r8, lsr fp
   11a9c:	andeq	r1, r1, r8, lsr fp
   11aa0:	andeq	r1, r1, r8, lsr fp
   11aa4:	andeq	r1, r1, r8, lsr fp
   11aa8:	andeq	r1, r1, r8, lsr fp
   11aac:	andeq	r1, r1, r8, lsr fp
   11ab0:	andeq	r1, r1, r8, lsr fp
   11ab4:	andeq	r1, r1, r8, lsr fp
   11ab8:	andeq	r1, r1, r8, lsr fp
   11abc:	andeq	r1, r1, r8, lsr fp
   11ac0:	andeq	r1, r1, r8, lsr fp
   11ac4:	andeq	r1, r1, r8, lsr fp
   11ac8:	andeq	r1, r1, r8, lsr fp
   11acc:	andeq	r1, r1, r8, lsr fp
   11ad0:	andeq	r1, r1, r8, lsr fp
   11ad4:	andeq	r1, r1, r8, lsr fp
   11ad8:	andeq	r1, r1, r4, lsr #22
   11adc:	andeq	r1, r1, r8, lsr fp
   11ae0:	andeq	r1, r1, r4, lsr #22
   11ae4:	andeq	r1, r1, r8, lsr fp
   11ae8:	andeq	r1, r1, r4, lsr #22
   11aec:	andeq	r1, r1, r8, lsr fp
   11af0:	andeq	r1, r1, r8, lsr fp
   11af4:	andeq	r1, r1, r8, lsr fp
   11af8:	andeq	r1, r1, r8, lsr fp
   11afc:	andeq	r1, r1, r8, lsr fp
   11b00:	andeq	r1, r1, r8, lsr fp
   11b04:	andeq	r1, r1, r8, lsr fp
   11b08:	andeq	r1, r1, r4, lsr #22
   11b0c:	andeq	r1, r1, r8, lsr fp
   11b10:	andeq	r1, r1, r8, lsr fp
   11b14:	andeq	r1, r1, r8, lsr fp
   11b18:	andeq	r1, r1, r8, lsr fp
   11b1c:	andeq	r1, r1, r8, lsr fp
   11b20:	andeq	r1, r1, r4, lsr #22
   11b24:	add	r9, r9, #1
   11b28:	ldrb	r8, [r9]
   11b2c:	sub	r0, r8, #76	; 0x4c
   11b30:	cmp	r0, #46	; 0x2e
   11b34:	bls	11a60 <__mempcpy_chk@plt+0xa24>
   11b38:	add	r0, sp, #56	; 0x38
   11b3c:	ldrb	r0, [r0, r8]
   11b40:	cmp	r0, #0
   11b44:	beq	121fc <__mempcpy_chk@plt+0x11c0>
   11b48:	ldr	r0, [sp, #52]	; 0x34
   11b4c:	str	r6, [sp, #32]
   11b50:	cmp	r0, #1
   11b54:	blt	11b7c <__mempcpy_chk@plt+0xb40>
   11b58:	sub	r0, r0, #1
   11b5c:	str	r0, [sp, #52]	; 0x34
   11b60:	ldr	r0, [r7], #4
   11b64:	str	r7, [sp, #44]	; 0x2c
   11b68:	str	r0, [sp, #48]	; 0x30
   11b6c:	sub	r7, r8, #65	; 0x41
   11b70:	cmp	r7, #55	; 0x37
   11b74:	bls	11b98 <__mempcpy_chk@plt+0xb5c>
   11b78:	b	11ff4 <__mempcpy_chk@plt+0xfb8>
   11b7c:	movw	r0, #25700	; 0x6464
   11b80:	str	r7, [sp, #44]	; 0x2c
   11b84:	movt	r0, #1
   11b88:	str	r0, [sp, #48]	; 0x30
   11b8c:	sub	r7, r8, #65	; 0x41
   11b90:	cmp	r7, #55	; 0x37
   11b94:	bhi	11ff4 <__mempcpy_chk@plt+0xfb8>
   11b98:	movw	r1, #27716	; 0x6c44
   11b9c:	add	r0, pc, #8
   11ba0:	mov	r6, #2
   11ba4:	movt	r1, #1
   11ba8:	ldr	pc, [r0, r7, lsl #2]
   11bac:	andeq	r1, r1, ip, lsl #25
   11bb0:	strdeq	r1, [r1], -r4
   11bb4:	strdeq	r1, [r1], -r4
   11bb8:	strdeq	r1, [r1], -r4
   11bbc:	andeq	r1, r1, ip, lsl #25
   11bc0:	andeq	r1, r1, ip, lsl #25
   11bc4:	andeq	r1, r1, ip, lsl #25
   11bc8:	strdeq	r1, [r1], -r4
   11bcc:	strdeq	r1, [r1], -r4
   11bd0:	strdeq	r1, [r1], -r4
   11bd4:	strdeq	r1, [r1], -r4
   11bd8:	strdeq	r1, [r1], -r4
   11bdc:	strdeq	r1, [r1], -r4
   11be0:	strdeq	r1, [r1], -r4
   11be4:	strdeq	r1, [r1], -r4
   11be8:	strdeq	r1, [r1], -r4
   11bec:	strdeq	r1, [r1], -r4
   11bf0:	strdeq	r1, [r1], -r4
   11bf4:	strdeq	r1, [r1], -r4
   11bf8:	strdeq	r1, [r1], -r4
   11bfc:	strdeq	r1, [r1], -r4
   11c00:	strdeq	r1, [r1], -r4
   11c04:	strdeq	r1, [r1], -r4
   11c08:	muleq	r1, ip, ip
   11c0c:	strdeq	r1, [r1], -r4
   11c10:	strdeq	r1, [r1], -r4
   11c14:	strdeq	r1, [r1], -r4
   11c18:	strdeq	r1, [r1], -r4
   11c1c:	strdeq	r1, [r1], -r4
   11c20:	strdeq	r1, [r1], -r4
   11c24:	strdeq	r1, [r1], -r4
   11c28:	strdeq	r1, [r1], -r4
   11c2c:	andeq	r1, r1, ip, lsl #25
   11c30:	strdeq	r1, [r1], -r4
   11c34:	strdeq	r1, [r1], -r4
   11c38:	muleq	r1, ip, ip
   11c3c:	andeq	r1, r1, ip, lsl #25
   11c40:	andeq	r1, r1, ip, lsl #25
   11c44:	andeq	r1, r1, ip, lsl #25
   11c48:	strdeq	r1, [r1], -r4
   11c4c:	muleq	r1, ip, ip
   11c50:	strdeq	r1, [r1], -r4
   11c54:	strdeq	r1, [r1], -r4
   11c58:	strdeq	r1, [r1], -r4
   11c5c:	strdeq	r1, [r1], -r4
   11c60:	strdeq	r1, [r1], -r4
   11c64:	muleq	r1, ip, ip
   11c68:	strdeq	r1, [r1], -r4
   11c6c:	strdeq	r1, [r1], -r4
   11c70:	strdeq	r1, [r1], -r4
   11c74:	strdeq	r1, [r1], -r4
   11c78:	strdeq	r1, [r1], -r4
   11c7c:	muleq	r1, ip, ip
   11c80:	strdeq	r1, [r1], -r4
   11c84:	strdeq	r1, [r1], -r4
   11c88:	muleq	r1, ip, ip
   11c8c:	movw	r0, #27720	; 0x6c48
   11c90:	mov	r6, #1
   11c94:	movt	r0, #1
   11c98:	mov	r1, r0
   11c9c:	add	r0, sl, r6
   11ca0:	str	r1, [sp, #40]	; 0x28
   11ca4:	add	r0, r0, #2
   11ca8:	bl	155d4 <__mempcpy_chk@plt+0x4598>
   11cac:	mov	r2, sl
   11cb0:	mov	r1, r5
   11cb4:	mvn	r3, #0
   11cb8:	mov	sl, r0
   11cbc:	bl	1103c <__mempcpy_chk@plt>
   11cc0:	ldr	r1, [sp, #40]	; 0x28
   11cc4:	mov	r2, r6
   11cc8:	mvn	r3, #0
   11ccc:	bl	1103c <__mempcpy_chk@plt>
   11cd0:	strb	r4, [r0, #1]
   11cd4:	strb	r8, [r0]
   11cd8:	ldr	r8, [sp, #52]	; 0x34
   11cdc:	cmp	r7, #55	; 0x37
   11ce0:	bhi	12088 <__mempcpy_chk@plt+0x104c>
   11ce4:	add	r0, pc, #0
   11ce8:	ldr	pc, [r0, r7, lsl #2]
   11cec:	andeq	r1, r1, ip, asr #27
   11cf0:	andeq	r2, r1, r8, lsl #1
   11cf4:	andeq	r2, r1, r8, lsl #1
   11cf8:	andeq	r2, r1, r8, lsl #1
   11cfc:	andeq	r1, r1, ip, asr #27
   11d00:	andeq	r1, r1, ip, asr #27
   11d04:	andeq	r1, r1, ip, asr #27
   11d08:	andeq	r2, r1, r8, lsl #1
   11d0c:	andeq	r2, r1, r8, lsl #1
   11d10:	andeq	r2, r1, r8, lsl #1
   11d14:	andeq	r2, r1, r8, lsl #1
   11d18:	andeq	r2, r1, r8, lsl #1
   11d1c:	andeq	r2, r1, r8, lsl #1
   11d20:	andeq	r2, r1, r8, lsl #1
   11d24:	andeq	r2, r1, r8, lsl #1
   11d28:	andeq	r2, r1, r8, lsl #1
   11d2c:	andeq	r2, r1, r8, lsl #1
   11d30:	andeq	r2, r1, r8, lsl #1
   11d34:	andeq	r2, r1, r8, lsl #1
   11d38:	andeq	r2, r1, r8, lsl #1
   11d3c:	andeq	r2, r1, r8, lsl #1
   11d40:	andeq	r2, r1, r8, lsl #1
   11d44:	andeq	r2, r1, r8, lsl #1
   11d48:	andeq	r1, r1, r0, asr #29
   11d4c:	andeq	r2, r1, r8, lsl #1
   11d50:	andeq	r2, r1, r8, lsl #1
   11d54:	andeq	r2, r1, r8, lsl #1
   11d58:	andeq	r2, r1, r8, lsl #1
   11d5c:	andeq	r2, r1, r8, lsl #1
   11d60:	andeq	r2, r1, r8, lsl #1
   11d64:	andeq	r2, r1, r8, lsl #1
   11d68:	andeq	r2, r1, r8, lsl #1
   11d6c:	andeq	r1, r1, ip, asr #27
   11d70:	andeq	r2, r1, r8, lsl #1
   11d74:	andeq	r2, r1, r0
   11d78:			; <UNDEFINED> instruction: 0x00011fb4
   11d7c:	andeq	r1, r1, ip, asr #27
   11d80:	andeq	r1, r1, ip, asr #27
   11d84:	andeq	r1, r1, ip, asr #27
   11d88:	andeq	r2, r1, r8, lsl #1
   11d8c:			; <UNDEFINED> instruction: 0x00011fb4
   11d90:	andeq	r2, r1, r8, lsl #1
   11d94:	andeq	r2, r1, r8, lsl #1
   11d98:	andeq	r2, r1, r8, lsl #1
   11d9c:	andeq	r2, r1, r8, lsl #1
   11da0:	andeq	r2, r1, r8, lsl #1
   11da4:	andeq	r1, r1, r0, asr #29
   11da8:	andeq	r2, r1, r8, lsl #1
   11dac:	andeq	r2, r1, r8, lsl #1
   11db0:	andeq	r2, r1, r8, lsl #1
   11db4:	andeq	r2, r1, r4, lsr #32
   11db8:	andeq	r2, r1, r8, lsl #1
   11dbc:	andeq	r1, r1, r0, asr #29
   11dc0:	andeq	r2, r1, r8, lsl #1
   11dc4:	andeq	r2, r1, r8, lsl #1
   11dc8:	andeq	r1, r1, r0, asr #29
   11dcc:	ldr	r7, [sp, #48]	; 0x30
   11dd0:	ldrb	r0, [r7]
   11dd4:	cmp	r0, #39	; 0x27
   11dd8:	cmpne	r0, #34	; 0x22
   11ddc:	bne	11e68 <__mempcpy_chk@plt+0xe2c>
   11de0:	ldrb	r0, [r7, #1]
   11de4:	cmp	r0, #0
   11de8:	beq	11e68 <__mempcpy_chk@plt+0xe2c>
   11dec:	vmov	s0, r0
   11df0:	vcvt.f64.u32	d8, s0
   11df4:	ldrb	r0, [r7, #2]!
   11df8:	cmp	r0, #0
   11dfc:	beq	11e8c <__mempcpy_chk@plt+0xe50>
   11e00:	movw	r0, #33100	; 0x814c
   11e04:	ldr	r5, [sp, #36]	; 0x24
   11e08:	ldr	r6, [sp, #32]
   11e0c:	movt	r0, #2
   11e10:	ldrb	r0, [r0, #1]
   11e14:	cmp	r0, #0
   11e18:	bne	120c4 <__mempcpy_chk@plt+0x1088>
   11e1c:	movw	r1, #27579	; 0x6bbb
   11e20:	mov	r0, #0
   11e24:	mov	r2, #5
   11e28:	movt	r1, #1
   11e2c:	bl	10e68 <dcgettext@plt>
   11e30:	mov	r2, r0
   11e34:	mov	r0, #0
   11e38:	mov	r1, #0
   11e3c:	mov	r3, r7
   11e40:	bl	10ed4 <error@plt>
   11e44:	ldr	r7, [sp, #24]
   11e48:	cmp	r5, #0
   11e4c:	bne	11ea0 <__mempcpy_chk@plt+0xe64>
   11e50:	vmov	r2, r3, d8
   11e54:	cmp	r6, #0
   11e58:	beq	12068 <__mempcpy_chk@plt+0x102c>
   11e5c:	mov	r0, sl
   11e60:	mov	r1, r7
   11e64:	b	12084 <__mempcpy_chk@plt+0x1048>
   11e68:	bl	10f64 <__errno_location@plt>
   11e6c:	str	r4, [r0]
   11e70:	mov	r0, r7
   11e74:	sub	r1, fp, #48	; 0x30
   11e78:	bl	12994 <__mempcpy_chk@plt+0x1958>
   11e7c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   11e80:	mov	r0, r7
   11e84:	vmov.f64	d8, d0
   11e88:	bl	128f0 <__mempcpy_chk@plt+0x18b4>
   11e8c:	ldr	r7, [sp, #24]
   11e90:	ldr	r5, [sp, #36]	; 0x24
   11e94:	ldr	r6, [sp, #32]
   11e98:	cmp	r5, #0
   11e9c:	beq	11e50 <__mempcpy_chk@plt+0xe14>
   11ea0:	cmp	r6, #0
   11ea4:	beq	11fa4 <__mempcpy_chk@plt+0xf68>
   11ea8:	ldr	r1, [sp, #28]
   11eac:	mov	r0, sl
   11eb0:	mov	r2, r7
   11eb4:	vstr	d8, [sp]
   11eb8:	bl	15b54 <__mempcpy_chk@plt+0x4b18>
   11ebc:	b	12088 <__mempcpy_chk@plt+0x104c>
   11ec0:	ldr	r7, [sp, #48]	; 0x30
   11ec4:	ldrb	r0, [r7]
   11ec8:	cmp	r0, #39	; 0x27
   11ecc:	cmpne	r0, #34	; 0x22
   11ed0:	bne	11f54 <__mempcpy_chk@plt+0xf18>
   11ed4:	ldrb	r5, [r7, #1]
   11ed8:	cmp	r5, #0
   11edc:	beq	11f54 <__mempcpy_chk@plt+0xf18>
   11ee0:	ldrb	r0, [r7, #2]!
   11ee4:	mov	r6, #0
   11ee8:	cmp	r0, #0
   11eec:	beq	11f84 <__mempcpy_chk@plt+0xf48>
   11ef0:	movw	r0, #33100	; 0x814c
   11ef4:	str	r7, [sp, #48]	; 0x30
   11ef8:	ldr	r7, [sp, #36]	; 0x24
   11efc:	movt	r0, #2
   11f00:	ldrb	r0, [r0, #1]
   11f04:	cmp	r0, #0
   11f08:	bne	11f38 <__mempcpy_chk@plt+0xefc>
   11f0c:	movw	r1, #27579	; 0x6bbb
   11f10:	mov	r0, #0
   11f14:	mov	r2, #5
   11f18:	mov	r6, #0
   11f1c:	movt	r1, #1
   11f20:	bl	10e68 <dcgettext@plt>
   11f24:	ldr	r3, [sp, #48]	; 0x30
   11f28:	mov	r2, r0
   11f2c:	mov	r0, #0
   11f30:	mov	r1, #0
   11f34:	bl	10ed4 <error@plt>
   11f38:	cmp	r7, #0
   11f3c:	beq	11f90 <__mempcpy_chk@plt+0xf54>
   11f40:	ldr	r0, [sp, #32]
   11f44:	cmp	r0, #0
   11f48:	beq	12074 <__mempcpy_chk@plt+0x1038>
   11f4c:	stm	sp, {r5, r6}
   11f50:	b	11fe0 <__mempcpy_chk@plt+0xfa4>
   11f54:	bl	10f64 <__errno_location@plt>
   11f58:	str	r4, [r0]
   11f5c:	mov	r0, r7
   11f60:	sub	r1, fp, #48	; 0x30
   11f64:	mov	r2, #0
   11f68:	mov	r3, #0
   11f6c:	bl	10e44 <__strtoull_internal@plt>
   11f70:	mov	r6, r1
   11f74:	ldr	r1, [fp, #-48]	; 0xffffffd0
   11f78:	mov	r5, r0
   11f7c:	mov	r0, r7
   11f80:	bl	128f0 <__mempcpy_chk@plt+0x18b4>
   11f84:	ldr	r7, [sp, #36]	; 0x24
   11f88:	cmp	r7, #0
   11f8c:	bne	11f40 <__mempcpy_chk@plt+0xf04>
   11f90:	ldr	r0, [sp, #32]
   11f94:	cmp	r0, #0
   11f98:	beq	120b0 <__mempcpy_chk@plt+0x1074>
   11f9c:	ldr	r1, [sp, #24]
   11fa0:	b	12078 <__mempcpy_chk@plt+0x103c>
   11fa4:	vmov	r2, r3, d8
   11fa8:	ldr	r1, [sp, #28]
   11fac:	mov	r0, sl
   11fb0:	b	12084 <__mempcpy_chk@plt+0x1048>
   11fb4:	ldr	r0, [sp, #48]	; 0x30
   11fb8:	bl	12260 <__mempcpy_chk@plt+0x1224>
   11fbc:	mov	r2, r0
   11fc0:	ldr	r0, [sp, #36]	; 0x24
   11fc4:	mov	r3, r1
   11fc8:	cmp	r0, #0
   11fcc:	beq	12050 <__mempcpy_chk@plt+0x1014>
   11fd0:	ldr	r0, [sp, #32]
   11fd4:	cmp	r0, #0
   11fd8:	beq	11fa8 <__mempcpy_chk@plt+0xf6c>
   11fdc:	stm	sp, {r2, r3}
   11fe0:	ldr	r1, [sp, #28]
   11fe4:	ldr	r2, [sp, #24]
   11fe8:	mov	r0, sl
   11fec:	bl	15b54 <__mempcpy_chk@plt+0x4b18>
   11ff0:	b	12088 <__mempcpy_chk@plt+0x104c>
   11ff4:	mov	r6, #0
   11ff8:	mov	r1, r5
   11ffc:	b	11c9c <__mempcpy_chk@plt+0xc60>
   12000:	ldr	r0, [sp, #48]	; 0x30
   12004:	ldrb	r2, [r0]
   12008:	ldr	r0, [sp, #36]	; 0x24
   1200c:	cmp	r0, #0
   12010:	beq	120f4 <__mempcpy_chk@plt+0x10b8>
   12014:	ldr	r1, [sp, #28]
   12018:	mov	r0, sl
   1201c:	bl	15b54 <__mempcpy_chk@plt+0x4b18>
   12020:	b	12088 <__mempcpy_chk@plt+0x104c>
   12024:	ldr	r0, [sp, #36]	; 0x24
   12028:	cmp	r0, #0
   1202c:	beq	120d4 <__mempcpy_chk@plt+0x1098>
   12030:	ldr	r0, [sp, #32]
   12034:	ldr	r3, [sp, #48]	; 0x30
   12038:	cmp	r0, #0
   1203c:	mov	r0, sl
   12040:	beq	12104 <__mempcpy_chk@plt+0x10c8>
   12044:	ldr	r1, [sp, #28]
   12048:	ldr	r2, [sp, #24]
   1204c:	b	12084 <__mempcpy_chk@plt+0x1048>
   12050:	ldr	r0, [sp, #32]
   12054:	cmp	r0, #0
   12058:	beq	12068 <__mempcpy_chk@plt+0x102c>
   1205c:	ldr	r1, [sp, #24]
   12060:	mov	r0, sl
   12064:	b	12084 <__mempcpy_chk@plt+0x1048>
   12068:	mov	r0, sl
   1206c:	bl	15b54 <__mempcpy_chk@plt+0x4b18>
   12070:	b	12088 <__mempcpy_chk@plt+0x104c>
   12074:	ldr	r1, [sp, #28]
   12078:	mov	r0, sl
   1207c:	mov	r2, r5
   12080:	mov	r3, r6
   12084:	bl	15b54 <__mempcpy_chk@plt+0x4b18>
   12088:	mov	r0, sl
   1208c:	bl	12b24 <__mempcpy_chk@plt+0x1ae8>
   12090:	ldr	r7, [sp, #44]	; 0x2c
   12094:	movw	r6, #33092	; 0x8144
   12098:	add	r5, r9, #1
   1209c:	movt	r6, #2
   120a0:	ldrb	r1, [r5]
   120a4:	cmp	r1, #37	; 0x25
   120a8:	bne	115d0 <__mempcpy_chk@plt+0x594>
   120ac:	b	11614 <__mempcpy_chk@plt+0x5d8>
   120b0:	mov	r0, sl
   120b4:	mov	r2, r5
   120b8:	mov	r3, r6
   120bc:	bl	15b54 <__mempcpy_chk@plt+0x4b18>
   120c0:	b	12088 <__mempcpy_chk@plt+0x104c>
   120c4:	ldr	r7, [sp, #24]
   120c8:	cmp	r5, #0
   120cc:	beq	11e50 <__mempcpy_chk@plt+0xe14>
   120d0:	b	11ea0 <__mempcpy_chk@plt+0xe64>
   120d4:	ldr	r0, [sp, #32]
   120d8:	ldr	r2, [sp, #48]	; 0x30
   120dc:	cmp	r0, #0
   120e0:	beq	120f4 <__mempcpy_chk@plt+0x10b8>
   120e4:	ldr	r1, [sp, #24]
   120e8:	mov	r0, sl
   120ec:	bl	15b54 <__mempcpy_chk@plt+0x4b18>
   120f0:	b	12088 <__mempcpy_chk@plt+0x104c>
   120f4:	mov	r0, sl
   120f8:	mov	r1, r2
   120fc:	bl	15b54 <__mempcpy_chk@plt+0x4b18>
   12100:	b	12088 <__mempcpy_chk@plt+0x104c>
   12104:	ldr	r1, [sp, #28]
   12108:	mov	r2, r3
   1210c:	bl	15b54 <__mempcpy_chk@plt+0x4b18>
   12110:	b	12088 <__mempcpy_chk@plt+0x104c>
   12114:	bl	10fd0 <__overflow@plt>
   12118:	b	11600 <__mempcpy_chk@plt+0x5c4>
   1211c:	mov	r1, #37	; 0x25
   12120:	bl	10fd0 <__overflow@plt>
   12124:	add	r5, r9, #1
   12128:	ldrb	r1, [r5]
   1212c:	cmp	r1, #37	; 0x25
   12130:	bne	115d0 <__mempcpy_chk@plt+0x594>
   12134:	b	11614 <__mempcpy_chk@plt+0x5d8>
   12138:	ldr	r0, [sp, #12]
   1213c:	ldr	r1, [sp, #16]
   12140:	cmp	r8, #1
   12144:	sub	r0, r0, r8
   12148:	add	r1, r1, r0, lsl #2
   1214c:	blt	1215c <__mempcpy_chk@plt+0x1120>
   12150:	cmp	r0, #0
   12154:	mov	r0, r8
   12158:	bgt	11580 <__mempcpy_chk@plt+0x544>
   1215c:	cmp	r8, #1
   12160:	blt	1219c <__mempcpy_chk@plt+0x1160>
   12164:	mov	r4, r1
   12168:	movw	r1, #27130	; 0x69fa
   1216c:	mov	r0, #0
   12170:	mov	r2, #5
   12174:	movt	r1, #1
   12178:	bl	10e68 <dcgettext@plt>
   1217c:	mov	r5, r0
   12180:	ldr	r0, [r4]
   12184:	bl	14b10 <__mempcpy_chk@plt+0x3ad4>
   12188:	mov	r3, r0
   1218c:	mov	r0, #0
   12190:	mov	r1, #0
   12194:	mov	r2, r5
   12198:	bl	10ed4 <error@plt>
   1219c:	movw	r0, #33100	; 0x814c
   121a0:	movt	r0, #2
   121a4:	ldrb	r4, [r0]
   121a8:	mov	r0, r4
   121ac:	sub	sp, fp, #40	; 0x28
   121b0:	vpop	{d8}
   121b4:	add	sp, sp, #4
   121b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   121bc:	movw	r1, #27494	; 0x6b66
   121c0:	movt	r1, #1
   121c4:	b	121d0 <__mempcpy_chk@plt+0x1194>
   121c8:	movw	r1, #27518	; 0x6b7e
   121cc:	movt	r1, #1
   121d0:	mov	r0, #0
   121d4:	mov	r2, #5
   121d8:	bl	10e68 <dcgettext@plt>
   121dc:	mov	r4, r0
   121e0:	ldr	r0, [r7]
   121e4:	bl	14b10 <__mempcpy_chk@plt+0x3ad4>
   121e8:	mov	r3, r0
   121ec:	mov	r0, #1
   121f0:	mov	r1, #0
   121f4:	mov	r2, r4
   121f8:	bl	10ed4 <error@plt>
   121fc:	movw	r1, #27540	; 0x6b94
   12200:	mov	r0, #0
   12204:	mov	r2, #5
   12208:	movt	r1, #1
   1220c:	bl	10e68 <dcgettext@plt>
   12210:	mov	r2, r0
   12214:	sub	r0, r9, r5
   12218:	mov	r1, #0
   1221c:	str	r5, [sp]
   12220:	add	r3, r0, #1
   12224:	mov	r0, #1
   12228:	bl	10ed4 <error@plt>
   1222c:	movw	r1, #27114	; 0x69ea
   12230:	mov	r0, #0
   12234:	mov	r2, #5
   12238:	movt	r1, #1
   1223c:	bl	10e68 <dcgettext@plt>
   12240:	mov	r2, r0
   12244:	mov	r0, #0
   12248:	mov	r1, #0
   1224c:	bl	10ed4 <error@plt>
   12250:	mov	r0, #1
   12254:	bl	11138 <__mempcpy_chk@plt+0xfc>
   12258:	mov	r0, #0
   1225c:	bl	11138 <__mempcpy_chk@plt+0xfc>
   12260:	push	{r4, r5, r6, sl, fp, lr}
   12264:	add	fp, sp, #16
   12268:	sub	sp, sp, #8
   1226c:	mov	r4, r0
   12270:	ldrb	r0, [r0]
   12274:	cmp	r0, #39	; 0x27
   12278:	cmpne	r0, #34	; 0x22
   1227c:	bne	122ec <__mempcpy_chk@plt+0x12b0>
   12280:	ldrb	r5, [r4, #1]
   12284:	cmp	r5, #0
   12288:	beq	122ec <__mempcpy_chk@plt+0x12b0>
   1228c:	ldrb	r0, [r4, #2]!
   12290:	mov	r6, #0
   12294:	cmp	r0, #0
   12298:	beq	122dc <__mempcpy_chk@plt+0x12a0>
   1229c:	movw	r0, #33100	; 0x814c
   122a0:	movt	r0, #2
   122a4:	ldrb	r0, [r0, #1]
   122a8:	cmp	r0, #0
   122ac:	bne	122dc <__mempcpy_chk@plt+0x12a0>
   122b0:	movw	r1, #27579	; 0x6bbb
   122b4:	mov	r0, #0
   122b8:	mov	r2, #5
   122bc:	mov	r6, #0
   122c0:	movt	r1, #1
   122c4:	bl	10e68 <dcgettext@plt>
   122c8:	mov	r2, r0
   122cc:	mov	r0, #0
   122d0:	mov	r1, #0
   122d4:	mov	r3, r4
   122d8:	bl	10ed4 <error@plt>
   122dc:	mov	r0, r5
   122e0:	mov	r1, r6
   122e4:	sub	sp, fp, #16
   122e8:	pop	{r4, r5, r6, sl, fp, pc}
   122ec:	bl	10f64 <__errno_location@plt>
   122f0:	mov	r1, #0
   122f4:	mov	r2, #0
   122f8:	mov	r3, #0
   122fc:	str	r1, [r0]
   12300:	add	r1, sp, #4
   12304:	mov	r0, r4
   12308:	bl	1100c <__strtoll_internal@plt>
   1230c:	mov	r6, r1
   12310:	ldr	r1, [sp, #4]
   12314:	mov	r5, r0
   12318:	mov	r0, r4
   1231c:	bl	128f0 <__mempcpy_chk@plt+0x18b4>
   12320:	mov	r0, r5
   12324:	mov	r1, r6
   12328:	sub	sp, fp, #16
   1232c:	pop	{r4, r5, r6, sl, fp, pc}
   12330:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12334:	add	fp, sp, #24
   12338:	sub	sp, sp, #8
   1233c:	mov	r7, r0
   12340:	mov	r8, r0
   12344:	ldrb	r5, [r7, #1]!
   12348:	cmp	r5, #120	; 0x78
   1234c:	bne	123ec <__mempcpy_chk@plt+0x13b0>
   12350:	bl	10f34 <__ctype_b_loc@plt>
   12354:	ldrb	r1, [r8, #2]
   12358:	ldr	r0, [r0]
   1235c:	add	r2, r0, r1, lsl #1
   12360:	ldrb	r2, [r2, #1]
   12364:	tst	r2, #16
   12368:	beq	128c4 <__mempcpy_chk@plt+0x1888>
   1236c:	sub	r2, r1, #97	; 0x61
   12370:	uxtb	r3, r2
   12374:	mvn	r2, #86	; 0x56
   12378:	cmp	r3, #6
   1237c:	bcc	12394 <__mempcpy_chk@plt+0x1358>
   12380:	sub	r2, r1, #65	; 0x41
   12384:	uxtb	r3, r2
   12388:	mvn	r2, #47	; 0x2f
   1238c:	cmp	r3, #6
   12390:	mvncc	r2, #54	; 0x36
   12394:	mov	r7, r8
   12398:	add	r1, r2, r1
   1239c:	ldrb	r2, [r7, #3]!
   123a0:	add	r0, r0, r2, lsl #1
   123a4:	ldrb	r0, [r0, #1]
   123a8:	tst	r0, #16
   123ac:	beq	12450 <__mempcpy_chk@plt+0x1414>
   123b0:	lsl	r0, r1, #4
   123b4:	sub	r1, r2, #97	; 0x61
   123b8:	uxtb	r3, r1
   123bc:	mvn	r1, #86	; 0x56
   123c0:	cmp	r3, #6
   123c4:	bcc	123dc <__mempcpy_chk@plt+0x13a0>
   123c8:	sub	r1, r2, #65	; 0x41
   123cc:	uxtb	r3, r1
   123d0:	mvn	r1, #47	; 0x2f
   123d4:	cmp	r3, #6
   123d8:	mvncc	r1, #54	; 0x36
   123dc:	add	r1, r1, r2
   123e0:	add	r7, r8, #4
   123e4:	add	r1, r1, r0
   123e8:	b	12450 <__mempcpy_chk@plt+0x1414>
   123ec:	and	r0, r5, #248	; 0xf8
   123f0:	cmp	r0, #48	; 0x30
   123f4:	bne	12488 <__mempcpy_chk@plt+0x144c>
   123f8:	sub	r0, r5, #48	; 0x30
   123fc:	clz	r0, r0
   12400:	lsr	r0, r0, #5
   12404:	and	r0, r0, r1
   12408:	mov	r1, #0
   1240c:	ldrb	r0, [r7, r0]!
   12410:	and	r2, r0, #248	; 0xf8
   12414:	cmp	r2, #48	; 0x30
   12418:	bne	12450 <__mempcpy_chk@plt+0x1414>
   1241c:	sub	r1, r0, #48	; 0x30
   12420:	ldrb	r0, [r7, #1]!
   12424:	and	r2, r0, #248	; 0xf8
   12428:	cmp	r2, #48	; 0x30
   1242c:	bne	12450 <__mempcpy_chk@plt+0x1414>
   12430:	add	r0, r0, r1, lsl #3
   12434:	sub	r1, r0, #48	; 0x30
   12438:	ldrb	r0, [r7, #1]!
   1243c:	and	r2, r0, #248	; 0xf8
   12440:	cmp	r2, #48	; 0x30
   12444:	addeq	r0, r0, r1, lsl #3
   12448:	addeq	r7, r7, #1
   1244c:	subeq	r1, r0, #48	; 0x30
   12450:	movw	r0, #33092	; 0x8144
   12454:	movt	r0, #2
   12458:	ldr	r0, [r0]
   1245c:	ldr	r2, [r0, #20]
   12460:	ldr	r3, [r0, #24]
   12464:	cmp	r2, r3
   12468:	bcs	12844 <__mempcpy_chk@plt+0x1808>
   1246c:	add	r3, r2, #1
   12470:	str	r3, [r0, #20]
   12474:	strb	r1, [r2]
   12478:	mvn	r0, r8
   1247c:	add	r0, r7, r0
   12480:	sub	sp, fp, #24
   12484:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12488:	cmp	r5, #0
   1248c:	beq	125d4 <__mempcpy_chk@plt+0x1598>
   12490:	movw	r0, #27759	; 0x6c6f
   12494:	mov	r1, r5
   12498:	mov	r2, #12
   1249c:	movt	r0, #1
   124a0:	bl	10fac <memchr@plt>
   124a4:	cmp	r0, #0
   124a8:	beq	12548 <__mempcpy_chk@plt+0x150c>
   124ac:	sub	r0, r5, #97	; 0x61
   124b0:	add	r7, r8, #2
   124b4:	cmp	r0, #21
   124b8:	bhi	127d4 <__mempcpy_chk@plt+0x1798>
   124bc:	add	r1, pc, #0
   124c0:	ldr	pc, [r1, r0, lsl #2]
   124c4:	andeq	r2, r1, ip, lsl r5
   124c8:			; <UNDEFINED> instruction: 0x000126bc
   124cc:	andeq	r2, r1, r8, ror #17
   124d0:	ldrdeq	r2, [r1], -r4
   124d4:	andeq	r2, r1, r0, asr #14
   124d8:	andeq	r2, r1, ip, ror #14
   124dc:	ldrdeq	r2, [r1], -r4
   124e0:	ldrdeq	r2, [r1], -r4
   124e4:	ldrdeq	r2, [r1], -r4
   124e8:	ldrdeq	r2, [r1], -r4
   124ec:	ldrdeq	r2, [r1], -r4
   124f0:	ldrdeq	r2, [r1], -r4
   124f4:	ldrdeq	r2, [r1], -r4
   124f8:	muleq	r1, r8, r7
   124fc:	ldrdeq	r2, [r1], -r4
   12500:	ldrdeq	r2, [r1], -r4
   12504:	ldrdeq	r2, [r1], -r4
   12508:	muleq	r1, r0, r6
   1250c:	ldrdeq	r2, [r1], -r4
   12510:	andeq	r2, r1, r8, ror #13
   12514:	ldrdeq	r2, [r1], -r4
   12518:	andeq	r2, r1, r4, lsl r7
   1251c:	movw	r0, #33092	; 0x8144
   12520:	movt	r0, #2
   12524:	ldr	r0, [r0]
   12528:	ldr	r1, [r0, #20]
   1252c:	ldr	r2, [r0, #24]
   12530:	cmp	r1, r2
   12534:	bcs	1287c <__mempcpy_chk@plt+0x1840>
   12538:	add	r2, r1, #1
   1253c:	str	r2, [r0, #20]
   12540:	mov	r0, #7
   12544:	b	127c0 <__mempcpy_chk@plt+0x1784>
   12548:	orr	r0, r5, #32
   1254c:	cmp	r0, #117	; 0x75
   12550:	bne	125d4 <__mempcpy_chk@plt+0x1598>
   12554:	cmp	r5, #117	; 0x75
   12558:	mov	r9, #8
   1255c:	add	r4, r8, #2
   12560:	movweq	r9, #4
   12564:	bl	10f34 <__ctype_b_loc@plt>
   12568:	ldr	r1, [r0]
   1256c:	mov	r0, #0
   12570:	mov	r6, #0
   12574:	b	12590 <__mempcpy_chk@plt+0x1554>
   12578:	add	r2, r6, r2
   1257c:	sub	r0, r0, #1
   12580:	add	r6, r2, r3
   12584:	add	r2, r9, r0
   12588:	cmp	r2, #0
   1258c:	ble	12640 <__mempcpy_chk@plt+0x1604>
   12590:	ldrb	r2, [r4, -r0]
   12594:	add	r3, r1, r2, lsl #1
   12598:	ldrb	r3, [r3, #1]
   1259c:	tst	r3, #16
   125a0:	beq	128c4 <__mempcpy_chk@plt+0x1888>
   125a4:	lsl	r3, r6, #4
   125a8:	sub	r6, r2, #97	; 0x61
   125ac:	uxtb	r7, r6
   125b0:	mvn	r6, #86	; 0x56
   125b4:	cmp	r7, #6
   125b8:	bcc	12578 <__mempcpy_chk@plt+0x153c>
   125bc:	sub	r7, r2, #65	; 0x41
   125c0:	mvn	r6, #47	; 0x2f
   125c4:	uxtb	r7, r7
   125c8:	cmp	r7, #6
   125cc:	mvncc	r6, #54	; 0x36
   125d0:	b	12578 <__mempcpy_chk@plt+0x153c>
   125d4:	movw	r4, #33092	; 0x8144
   125d8:	movt	r4, #2
   125dc:	ldr	r0, [r4]
   125e0:	ldr	r1, [r0, #20]
   125e4:	ldr	r2, [r0, #24]
   125e8:	cmp	r1, r2
   125ec:	bcs	1285c <__mempcpy_chk@plt+0x1820>
   125f0:	add	r2, r1, #1
   125f4:	str	r2, [r0, #20]
   125f8:	mov	r0, #92	; 0x5c
   125fc:	strb	r0, [r1]
   12600:	ldrb	r1, [r7]
   12604:	cmp	r1, #0
   12608:	beq	12478 <__mempcpy_chk@plt+0x143c>
   1260c:	ldr	r0, [r4]
   12610:	ldr	r2, [r0, #20]
   12614:	ldr	r3, [r0, #24]
   12618:	cmp	r2, r3
   1261c:	bcs	12874 <__mempcpy_chk@plt+0x1838>
   12620:	add	r3, r2, #1
   12624:	str	r3, [r0, #20]
   12628:	strb	r1, [r2]
   1262c:	add	r7, r8, #2
   12630:	mvn	r0, r8
   12634:	add	r0, r7, r0
   12638:	sub	sp, fp, #24
   1263c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12640:	cmp	r6, #159	; 0x9f
   12644:	bhi	12654 <__mempcpy_chk@plt+0x1618>
   12648:	cmp	r6, #36	; 0x24
   1264c:	cmpne	r6, #96	; 0x60
   12650:	bne	1280c <__mempcpy_chk@plt+0x17d0>
   12654:	mov	r1, r6
   12658:	bfc	r1, #0, #11
   1265c:	cmp	r1, #55296	; 0xd800
   12660:	beq	12814 <__mempcpy_chk@plt+0x17d8>
   12664:	sub	r7, r4, r0
   12668:	movw	r0, #33092	; 0x8144
   1266c:	mov	r1, r6
   12670:	mov	r2, #0
   12674:	movt	r0, #2
   12678:	ldr	r0, [r0]
   1267c:	bl	14d2c <__mempcpy_chk@plt+0x3cf0>
   12680:	mvn	r0, r8
   12684:	add	r0, r7, r0
   12688:	sub	sp, fp, #24
   1268c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12690:	movw	r0, #33092	; 0x8144
   12694:	movt	r0, #2
   12698:	ldr	r0, [r0]
   1269c:	ldr	r1, [r0, #20]
   126a0:	ldr	r2, [r0, #24]
   126a4:	cmp	r1, r2
   126a8:	bcs	12884 <__mempcpy_chk@plt+0x1848>
   126ac:	add	r2, r1, #1
   126b0:	str	r2, [r0, #20]
   126b4:	mov	r0, #13
   126b8:	b	127c0 <__mempcpy_chk@plt+0x1784>
   126bc:	movw	r0, #33092	; 0x8144
   126c0:	movt	r0, #2
   126c4:	ldr	r0, [r0]
   126c8:	ldr	r1, [r0, #20]
   126cc:	ldr	r2, [r0, #24]
   126d0:	cmp	r1, r2
   126d4:	bcs	1288c <__mempcpy_chk@plt+0x1850>
   126d8:	add	r2, r1, #1
   126dc:	str	r2, [r0, #20]
   126e0:	mov	r0, #8
   126e4:	b	127c0 <__mempcpy_chk@plt+0x1784>
   126e8:	movw	r0, #33092	; 0x8144
   126ec:	movt	r0, #2
   126f0:	ldr	r0, [r0]
   126f4:	ldr	r1, [r0, #20]
   126f8:	ldr	r2, [r0, #24]
   126fc:	cmp	r1, r2
   12700:	bcs	12894 <__mempcpy_chk@plt+0x1858>
   12704:	add	r2, r1, #1
   12708:	str	r2, [r0, #20]
   1270c:	mov	r0, #9
   12710:	b	127c0 <__mempcpy_chk@plt+0x1784>
   12714:	movw	r0, #33092	; 0x8144
   12718:	movt	r0, #2
   1271c:	ldr	r0, [r0]
   12720:	ldr	r1, [r0, #20]
   12724:	ldr	r2, [r0, #24]
   12728:	cmp	r1, r2
   1272c:	bcs	1289c <__mempcpy_chk@plt+0x1860>
   12730:	add	r2, r1, #1
   12734:	str	r2, [r0, #20]
   12738:	mov	r0, #11
   1273c:	b	127c0 <__mempcpy_chk@plt+0x1784>
   12740:	movw	r0, #33092	; 0x8144
   12744:	movt	r0, #2
   12748:	ldr	r0, [r0]
   1274c:	ldr	r1, [r0, #20]
   12750:	ldr	r2, [r0, #24]
   12754:	cmp	r1, r2
   12758:	bcs	128a4 <__mempcpy_chk@plt+0x1868>
   1275c:	add	r2, r1, #1
   12760:	str	r2, [r0, #20]
   12764:	mov	r0, #27
   12768:	b	127c0 <__mempcpy_chk@plt+0x1784>
   1276c:	movw	r0, #33092	; 0x8144
   12770:	movt	r0, #2
   12774:	ldr	r0, [r0]
   12778:	ldr	r1, [r0, #20]
   1277c:	ldr	r2, [r0, #24]
   12780:	cmp	r1, r2
   12784:	bcs	128ac <__mempcpy_chk@plt+0x1870>
   12788:	add	r2, r1, #1
   1278c:	str	r2, [r0, #20]
   12790:	mov	r0, #12
   12794:	b	127c0 <__mempcpy_chk@plt+0x1784>
   12798:	movw	r0, #33092	; 0x8144
   1279c:	movt	r0, #2
   127a0:	ldr	r0, [r0]
   127a4:	ldr	r1, [r0, #20]
   127a8:	ldr	r2, [r0, #24]
   127ac:	cmp	r1, r2
   127b0:	bcs	128b4 <__mempcpy_chk@plt+0x1878>
   127b4:	add	r2, r1, #1
   127b8:	str	r2, [r0, #20]
   127bc:	mov	r0, #10
   127c0:	strb	r0, [r1]
   127c4:	mvn	r0, r8
   127c8:	add	r0, r7, r0
   127cc:	sub	sp, fp, #24
   127d0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   127d4:	movw	r0, #33092	; 0x8144
   127d8:	movt	r0, #2
   127dc:	ldr	r0, [r0]
   127e0:	ldr	r1, [r0, #20]
   127e4:	ldr	r2, [r0, #24]
   127e8:	cmp	r1, r2
   127ec:	bcs	128bc <__mempcpy_chk@plt+0x1880>
   127f0:	add	r2, r1, #1
   127f4:	str	r2, [r0, #20]
   127f8:	strb	r5, [r1]
   127fc:	mvn	r0, r8
   12800:	add	r0, r7, r0
   12804:	sub	sp, fp, #24
   12808:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1280c:	cmp	r6, #64	; 0x40
   12810:	beq	12654 <__mempcpy_chk@plt+0x1618>
   12814:	movw	r1, #27771	; 0x6c7b
   12818:	mov	r0, #0
   1281c:	mov	r2, #5
   12820:	movt	r1, #1
   12824:	bl	10e68 <dcgettext@plt>
   12828:	mov	r2, r0
   1282c:	mov	r0, #1
   12830:	mov	r1, #0
   12834:	mov	r3, r5
   12838:	str	r9, [sp]
   1283c:	str	r6, [sp, #4]
   12840:	bl	10ed4 <error@plt>
   12844:	uxtb	r1, r1
   12848:	bl	10fd0 <__overflow@plt>
   1284c:	mvn	r0, r8
   12850:	add	r0, r7, r0
   12854:	sub	sp, fp, #24
   12858:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1285c:	mov	r1, #92	; 0x5c
   12860:	bl	10fd0 <__overflow@plt>
   12864:	ldrb	r1, [r7]
   12868:	cmp	r1, #0
   1286c:	bne	1260c <__mempcpy_chk@plt+0x15d0>
   12870:	b	12478 <__mempcpy_chk@plt+0x143c>
   12874:	bl	10fd0 <__overflow@plt>
   12878:	b	1262c <__mempcpy_chk@plt+0x15f0>
   1287c:	mov	r1, #7
   12880:	b	12848 <__mempcpy_chk@plt+0x180c>
   12884:	mov	r1, #13
   12888:	b	12848 <__mempcpy_chk@plt+0x180c>
   1288c:	mov	r1, #8
   12890:	b	12848 <__mempcpy_chk@plt+0x180c>
   12894:	mov	r1, #9
   12898:	b	12848 <__mempcpy_chk@plt+0x180c>
   1289c:	mov	r1, #11
   128a0:	b	12848 <__mempcpy_chk@plt+0x180c>
   128a4:	mov	r1, #27
   128a8:	b	12848 <__mempcpy_chk@plt+0x180c>
   128ac:	mov	r1, #12
   128b0:	b	12848 <__mempcpy_chk@plt+0x180c>
   128b4:	mov	r1, #10
   128b8:	b	12848 <__mempcpy_chk@plt+0x180c>
   128bc:	mov	r1, r5
   128c0:	b	12848 <__mempcpy_chk@plt+0x180c>
   128c4:	movw	r1, #27722	; 0x6c4a
   128c8:	mov	r0, #0
   128cc:	mov	r2, #5
   128d0:	movt	r1, #1
   128d4:	bl	10e68 <dcgettext@plt>
   128d8:	mov	r2, r0
   128dc:	mov	r0, #1
   128e0:	mov	r1, #0
   128e4:	bl	10ed4 <error@plt>
   128e8:	mov	r0, #0
   128ec:	bl	10f40 <exit@plt>
   128f0:	push	{r4, r5, r6, sl, fp, lr}
   128f4:	add	fp, sp, #16
   128f8:	mov	r5, r1
   128fc:	mov	r4, r0
   12900:	bl	10f64 <__errno_location@plt>
   12904:	ldr	r6, [r0]
   12908:	cmp	r6, #0
   1290c:	beq	12930 <__mempcpy_chk@plt+0x18f4>
   12910:	mov	r0, r4
   12914:	bl	14b10 <__mempcpy_chk@plt+0x3ad4>
   12918:	movw	r2, #27515	; 0x6b7b
   1291c:	mov	r3, r0
   12920:	mov	r0, #0
   12924:	mov	r1, r6
   12928:	movt	r2, #1
   1292c:	b	1297c <__mempcpy_chk@plt+0x1940>
   12930:	ldrb	r0, [r5]
   12934:	cmp	r0, #0
   12938:	beq	12990 <__mempcpy_chk@plt+0x1954>
   1293c:	movw	r0, #27652	; 0x6c04
   12940:	movw	r1, #27681	; 0x6c21
   12944:	cmp	r4, r5
   12948:	mov	r2, #5
   1294c:	movt	r0, #1
   12950:	movt	r1, #1
   12954:	moveq	r1, r0
   12958:	mov	r0, #0
   1295c:	bl	10e68 <dcgettext@plt>
   12960:	mov	r5, r0
   12964:	mov	r0, r4
   12968:	bl	14b10 <__mempcpy_chk@plt+0x3ad4>
   1296c:	mov	r3, r0
   12970:	mov	r0, #0
   12974:	mov	r1, #0
   12978:	mov	r2, r5
   1297c:	bl	10ed4 <error@plt>
   12980:	movw	r0, #33100	; 0x814c
   12984:	mov	r1, #1
   12988:	movt	r0, #2
   1298c:	strb	r1, [r0]
   12990:	pop	{r4, r5, r6, sl, fp, pc}
   12994:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12998:	add	fp, sp, #24
   1299c:	vpush	{d8}
   129a0:	sub	sp, sp, #8
   129a4:	mov	r4, r1
   129a8:	add	r1, sp, #4
   129ac:	mov	r5, r0
   129b0:	bl	10e5c <strtold@plt>
   129b4:	ldr	r7, [sp, #4]
   129b8:	vmov.f64	d8, d0
   129bc:	ldrb	r0, [r7]
   129c0:	cmp	r0, #0
   129c4:	beq	12a00 <__mempcpy_chk@plt+0x19c4>
   129c8:	bl	10f64 <__errno_location@plt>
   129cc:	ldr	r8, [r0]
   129d0:	mov	r6, r0
   129d4:	mov	r1, sp
   129d8:	mov	r0, r5
   129dc:	bl	15e74 <__mempcpy_chk@plt+0x4e38>
   129e0:	ldr	r0, [sp]
   129e4:	cmp	r7, r0
   129e8:	bcs	129fc <__mempcpy_chk@plt+0x19c0>
   129ec:	str	r0, [sp, #4]
   129f0:	mov	r7, r0
   129f4:	vmov.f64	d8, d0
   129f8:	b	12a00 <__mempcpy_chk@plt+0x19c4>
   129fc:	str	r8, [r6]
   12a00:	cmp	r4, #0
   12a04:	vmov.f64	d0, d8
   12a08:	strne	r7, [r4]
   12a0c:	sub	sp, fp, #32
   12a10:	vpop	{d8}
   12a14:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12a18:	movw	r1, #33104	; 0x8150
   12a1c:	movt	r1, #2
   12a20:	str	r0, [r1, #4]
   12a24:	bx	lr
   12a28:	movw	r1, #33104	; 0x8150
   12a2c:	movt	r1, #2
   12a30:	strb	r0, [r1]
   12a34:	bx	lr
   12a38:	push	{r4, r5, r6, sl, fp, lr}
   12a3c:	add	fp, sp, #16
   12a40:	sub	sp, sp, #8
   12a44:	movw	r0, #33092	; 0x8144
   12a48:	movt	r0, #2
   12a4c:	ldr	r0, [r0]
   12a50:	bl	15f34 <__mempcpy_chk@plt+0x4ef8>
   12a54:	cmp	r0, #0
   12a58:	beq	12a80 <__mempcpy_chk@plt+0x1a44>
   12a5c:	movw	r5, #33104	; 0x8150
   12a60:	movt	r5, #2
   12a64:	ldrb	r0, [r5]
   12a68:	cmp	r0, #0
   12a6c:	beq	12aac <__mempcpy_chk@plt+0x1a70>
   12a70:	bl	10f64 <__errno_location@plt>
   12a74:	ldr	r0, [r0]
   12a78:	cmp	r0, #32
   12a7c:	bne	12aac <__mempcpy_chk@plt+0x1a70>
   12a80:	movw	r0, #33088	; 0x8140
   12a84:	movt	r0, #2
   12a88:	ldr	r0, [r0]
   12a8c:	bl	15f34 <__mempcpy_chk@plt+0x4ef8>
   12a90:	cmp	r0, #0
   12a94:	subeq	sp, fp, #16
   12a98:	popeq	{r4, r5, r6, sl, fp, pc}
   12a9c:	movw	r0, #33012	; 0x80f4
   12aa0:	movt	r0, #2
   12aa4:	ldr	r0, [r0]
   12aa8:	bl	10e2c <_exit@plt>
   12aac:	movw	r1, #27887	; 0x6cef
   12ab0:	mov	r0, #0
   12ab4:	mov	r2, #5
   12ab8:	movt	r1, #1
   12abc:	bl	10e68 <dcgettext@plt>
   12ac0:	ldr	r6, [r5, #4]
   12ac4:	mov	r4, r0
   12ac8:	bl	10f64 <__errno_location@plt>
   12acc:	ldr	r5, [r0]
   12ad0:	cmp	r6, #0
   12ad4:	bne	12af0 <__mempcpy_chk@plt+0x1ab4>
   12ad8:	movw	r2, #27515	; 0x6b7b
   12adc:	mov	r0, #0
   12ae0:	mov	r1, r5
   12ae4:	mov	r3, r4
   12ae8:	movt	r2, #1
   12aec:	b	12b10 <__mempcpy_chk@plt+0x1ad4>
   12af0:	mov	r0, r6
   12af4:	bl	14788 <__mempcpy_chk@plt+0x374c>
   12af8:	movw	r2, #27899	; 0x6cfb
   12afc:	mov	r3, r0
   12b00:	str	r4, [sp]
   12b04:	mov	r0, #0
   12b08:	mov	r1, r5
   12b0c:	movt	r2, #1
   12b10:	bl	10ed4 <error@plt>
   12b14:	movw	r0, #33012	; 0x80f4
   12b18:	movt	r0, #2
   12b1c:	ldr	r0, [r0]
   12b20:	bl	10e2c <_exit@plt>
   12b24:	push	{r4, r5, r6, sl, fp, lr}
   12b28:	add	fp, sp, #16
   12b2c:	mov	r4, r0
   12b30:	bl	10f64 <__errno_location@plt>
   12b34:	ldr	r6, [r0]
   12b38:	mov	r5, r0
   12b3c:	mov	r0, r4
   12b40:	bl	10e14 <free@plt>
   12b44:	str	r6, [r5]
   12b48:	pop	{r4, r5, r6, sl, fp, pc}
   12b4c:	push	{r4, r5, fp, lr}
   12b50:	add	fp, sp, #8
   12b54:	cmp	r0, #0
   12b58:	beq	12bec <__mempcpy_chk@plt+0x1bb0>
   12b5c:	mov	r1, #47	; 0x2f
   12b60:	mov	r4, r0
   12b64:	bl	10fe8 <strrchr@plt>
   12b68:	cmp	r0, #0
   12b6c:	mov	r5, r4
   12b70:	addne	r5, r0, #1
   12b74:	sub	r0, r5, r4
   12b78:	cmp	r0, #7
   12b7c:	blt	12bd0 <__mempcpy_chk@plt+0x1b94>
   12b80:	movw	r1, #27962	; 0x6d3a
   12b84:	sub	r0, r5, #7
   12b88:	mov	r2, #7
   12b8c:	movt	r1, #1
   12b90:	bl	11024 <strncmp@plt>
   12b94:	cmp	r0, #0
   12b98:	bne	12bd0 <__mempcpy_chk@plt+0x1b94>
   12b9c:	movw	r1, #27970	; 0x6d42
   12ba0:	mov	r0, r5
   12ba4:	mov	r2, #3
   12ba8:	movt	r1, #1
   12bac:	bl	11024 <strncmp@plt>
   12bb0:	cmp	r0, #0
   12bb4:	beq	12bc0 <__mempcpy_chk@plt+0x1b84>
   12bb8:	mov	r4, r5
   12bbc:	b	12bd0 <__mempcpy_chk@plt+0x1b94>
   12bc0:	movw	r0, #33080	; 0x8138
   12bc4:	add	r4, r5, #3
   12bc8:	movt	r0, #2
   12bcc:	str	r4, [r0]
   12bd0:	movw	r0, #33084	; 0x813c
   12bd4:	movt	r0, #2
   12bd8:	str	r4, [r0]
   12bdc:	movw	r0, #33112	; 0x8158
   12be0:	movt	r0, #2
   12be4:	str	r4, [r0]
   12be8:	pop	{r4, r5, fp, pc}
   12bec:	movw	r0, #33088	; 0x8140
   12bf0:	mov	r1, #55	; 0x37
   12bf4:	mov	r2, #1
   12bf8:	movt	r0, #2
   12bfc:	ldr	r3, [r0]
   12c00:	movw	r0, #27906	; 0x6d02
   12c04:	movt	r0, #1
   12c08:	bl	10e98 <fwrite@plt>
   12c0c:	bl	11030 <abort@plt>
   12c10:	push	{r4, r5, r6, sl, fp, lr}
   12c14:	add	fp, sp, #16
   12c18:	mov	r4, r0
   12c1c:	movw	r0, #33120	; 0x8160
   12c20:	movt	r0, #2
   12c24:	cmp	r4, #0
   12c28:	moveq	r4, r0
   12c2c:	bl	10f64 <__errno_location@plt>
   12c30:	ldr	r6, [r0]
   12c34:	mov	r5, r0
   12c38:	mov	r0, r4
   12c3c:	mov	r1, #48	; 0x30
   12c40:	bl	15a34 <__mempcpy_chk@plt+0x49f8>
   12c44:	str	r6, [r5]
   12c48:	pop	{r4, r5, r6, sl, fp, pc}
   12c4c:	movw	r1, #33120	; 0x8160
   12c50:	cmp	r0, #0
   12c54:	movt	r1, #2
   12c58:	movne	r1, r0
   12c5c:	ldr	r0, [r1]
   12c60:	bx	lr
   12c64:	movw	r2, #33120	; 0x8160
   12c68:	cmp	r0, #0
   12c6c:	movt	r2, #2
   12c70:	movne	r2, r0
   12c74:	str	r1, [r2]
   12c78:	bx	lr
   12c7c:	movw	r3, #33120	; 0x8160
   12c80:	cmp	r0, #0
   12c84:	and	r2, r2, #1
   12c88:	movt	r3, #2
   12c8c:	movne	r3, r0
   12c90:	ubfx	r0, r1, #5, #3
   12c94:	and	r1, r1, #31
   12c98:	add	ip, r3, r0, lsl #2
   12c9c:	mov	r0, #1
   12ca0:	ldr	r3, [ip, #8]
   12ca4:	and	r0, r0, r3, lsr r1
   12ca8:	eor	r2, r0, r2
   12cac:	eor	r1, r3, r2, lsl r1
   12cb0:	str	r1, [ip, #8]
   12cb4:	bx	lr
   12cb8:	movw	r2, #33120	; 0x8160
   12cbc:	cmp	r0, #0
   12cc0:	movt	r2, #2
   12cc4:	movne	r2, r0
   12cc8:	ldr	r0, [r2, #4]
   12ccc:	str	r1, [r2, #4]
   12cd0:	bx	lr
   12cd4:	push	{fp, lr}
   12cd8:	mov	fp, sp
   12cdc:	movw	r3, #33120	; 0x8160
   12ce0:	cmp	r0, #0
   12ce4:	movt	r3, #2
   12ce8:	movne	r3, r0
   12cec:	cmp	r1, #0
   12cf0:	mov	r0, #10
   12cf4:	cmpne	r2, #0
   12cf8:	str	r0, [r3]
   12cfc:	bne	12d04 <__mempcpy_chk@plt+0x1cc8>
   12d00:	bl	11030 <abort@plt>
   12d04:	str	r1, [r3, #40]	; 0x28
   12d08:	str	r2, [r3, #44]	; 0x2c
   12d0c:	pop	{fp, pc}
   12d10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12d14:	add	fp, sp, #28
   12d18:	sub	sp, sp, #20
   12d1c:	mov	r7, r0
   12d20:	ldr	r0, [fp, #8]
   12d24:	movw	r5, #33120	; 0x8160
   12d28:	mov	r8, r3
   12d2c:	mov	r9, r2
   12d30:	mov	sl, r1
   12d34:	movt	r5, #2
   12d38:	cmp	r0, #0
   12d3c:	movne	r5, r0
   12d40:	bl	10f64 <__errno_location@plt>
   12d44:	ldr	r2, [r5, #40]	; 0x28
   12d48:	ldr	r3, [r5, #44]	; 0x2c
   12d4c:	mov	r4, r0
   12d50:	ldm	r5, {r0, r1}
   12d54:	add	r5, r5, #8
   12d58:	ldr	r6, [r4]
   12d5c:	stm	sp, {r0, r1, r5}
   12d60:	mov	r0, r7
   12d64:	mov	r1, sl
   12d68:	str	r2, [sp, #12]
   12d6c:	str	r3, [sp, #16]
   12d70:	mov	r2, r9
   12d74:	mov	r3, r8
   12d78:	bl	12d88 <__mempcpy_chk@plt+0x1d4c>
   12d7c:	str	r6, [r4]
   12d80:	sub	sp, fp, #28
   12d84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12d88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12d8c:	add	fp, sp, #28
   12d90:	sub	sp, sp, #156	; 0x9c
   12d94:	str	r0, [fp, #-84]	; 0xffffffac
   12d98:	add	r0, r2, #1
   12d9c:	mov	r6, r1
   12da0:	mov	r7, r3
   12da4:	str	r2, [fp, #-80]	; 0xffffffb0
   12da8:	str	r0, [sp, #80]	; 0x50
   12dac:	ldr	r0, [fp, #12]
   12db0:	and	r1, r0, #1
   12db4:	str	r1, [sp, #36]	; 0x24
   12db8:	and	r1, r0, #4
   12dbc:	str	r1, [sp, #32]
   12dc0:	ubfx	r8, r0, #1, #1
   12dc4:	bl	10eb0 <__ctype_get_mb_cur_max@plt>
   12dc8:	str	r0, [sp, #40]	; 0x28
   12dcc:	ldr	r0, [fp, #24]
   12dd0:	ldr	r4, [fp, #8]
   12dd4:	mov	r1, #0
   12dd8:	str	r1, [fp, #-52]	; 0xffffffcc
   12ddc:	mov	r1, #0
   12de0:	str	r1, [sp, #60]	; 0x3c
   12de4:	mov	r1, #1
   12de8:	str	r1, [sp, #84]	; 0x54
   12dec:	str	r0, [sp, #76]	; 0x4c
   12df0:	ldr	r0, [fp, #20]
   12df4:	str	r0, [sp, #72]	; 0x48
   12df8:	mov	r0, #0
   12dfc:	str	r0, [sp, #56]	; 0x38
   12e00:	mov	r0, #0
   12e04:	str	r0, [fp, #-88]	; 0xffffffa8
   12e08:	mov	r0, #0
   12e0c:	str	r0, [fp, #-72]	; 0xffffffb8
   12e10:	mov	r0, #0
   12e14:	cmp	r4, #10
   12e18:	bhi	14134 <__mempcpy_chk@plt+0x30f8>
   12e1c:	add	r1, pc, #24
   12e20:	ldr	ip, [fp, #-84]	; 0xffffffac
   12e24:	ldr	lr, [fp, #-80]	; 0xffffffb0
   12e28:	mov	r5, r6
   12e2c:	mov	r9, #0
   12e30:	mov	r2, #1
   12e34:	mov	r3, #0
   12e38:	ldr	pc, [r1, r4, lsl #2]
   12e3c:	andeq	r2, r1, r4, lsl #30
   12e40:	andeq	r2, r1, r0, asr #30
   12e44:	andeq	r2, r1, r4, lsl pc
   12e48:	strdeq	r2, [r1], -ip
   12e4c:	andeq	r2, r1, r4, lsr pc
   12e50:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   12e54:	andeq	r2, r1, r4, lsr #30
   12e58:	andeq	r3, r1, r0, lsl r2
   12e5c:	andeq	r2, r1, r8, ror #28
   12e60:	andeq	r2, r1, r8, ror #28
   12e64:	andeq	r3, r1, r0, lsr #1
   12e68:	movw	r6, #28054	; 0x6d96
   12e6c:	mov	r0, #0
   12e70:	mov	r2, #5
   12e74:	movt	r6, #1
   12e78:	mov	r1, r6
   12e7c:	bl	10e68 <dcgettext@plt>
   12e80:	cmp	r0, r6
   12e84:	str	r0, [sp, #72]	; 0x48
   12e88:	bne	13078 <__mempcpy_chk@plt+0x203c>
   12e8c:	bl	16158 <__mempcpy_chk@plt+0x511c>
   12e90:	ldrb	r1, [r0]
   12e94:	and	r1, r1, #223	; 0xdf
   12e98:	cmp	r1, #71	; 0x47
   12e9c:	beq	12ff8 <__mempcpy_chk@plt+0x1fbc>
   12ea0:	cmp	r1, #85	; 0x55
   12ea4:	bne	1305c <__mempcpy_chk@plt+0x2020>
   12ea8:	ldrb	r1, [r0, #1]
   12eac:	and	r1, r1, #223	; 0xdf
   12eb0:	cmp	r1, #84	; 0x54
   12eb4:	bne	1305c <__mempcpy_chk@plt+0x2020>
   12eb8:	ldrb	r1, [r0, #2]
   12ebc:	and	r1, r1, #223	; 0xdf
   12ec0:	cmp	r1, #70	; 0x46
   12ec4:	bne	1305c <__mempcpy_chk@plt+0x2020>
   12ec8:	ldrb	r1, [r0, #3]
   12ecc:	cmp	r1, #45	; 0x2d
   12ed0:	bne	1305c <__mempcpy_chk@plt+0x2020>
   12ed4:	ldrb	r1, [r0, #4]
   12ed8:	cmp	r1, #56	; 0x38
   12edc:	bne	1305c <__mempcpy_chk@plt+0x2020>
   12ee0:	ldrb	r0, [r0, #5]
   12ee4:	cmp	r0, #0
   12ee8:	movw	r0, #28058	; 0x6d9a
   12eec:	movt	r0, #1
   12ef0:	str	r0, [sp, #72]	; 0x48
   12ef4:	bne	1305c <__mempcpy_chk@plt+0x2020>
   12ef8:	b	13078 <__mempcpy_chk@plt+0x203c>
   12efc:	mov	r0, #1
   12f00:	b	12f40 <__mempcpy_chk@plt+0x1f04>
   12f04:	mov	r4, #0
   12f08:	mov	r9, #0
   12f0c:	mov	r2, r0
   12f10:	b	12f90 <__mempcpy_chk@plt+0x1f54>
   12f14:	tst	r8, #1
   12f18:	bne	12f40 <__mempcpy_chk@plt+0x1f04>
   12f1c:	mov	r2, r0
   12f20:	b	12f68 <__mempcpy_chk@plt+0x1f2c>
   12f24:	mov	r0, #1
   12f28:	mov	r9, #0
   12f2c:	mov	r4, #5
   12f30:	b	12fac <__mempcpy_chk@plt+0x1f70>
   12f34:	mov	r2, #1
   12f38:	tst	r8, #1
   12f3c:	beq	12f68 <__mempcpy_chk@plt+0x1f2c>
   12f40:	mov	r1, #1
   12f44:	mov	r9, #0
   12f48:	mov	r4, #2
   12f4c:	mov	r2, r0
   12f50:	mov	r3, #1
   12f54:	str	r1, [fp, #-72]	; 0xffffffb8
   12f58:	movw	r1, #28056	; 0x6d98
   12f5c:	movt	r1, #1
   12f60:	str	r1, [fp, #-88]	; 0xffffffa8
   12f64:	b	13210 <__mempcpy_chk@plt+0x21d4>
   12f68:	cmp	r5, #0
   12f6c:	mov	r9, #1
   12f70:	mov	r4, #2
   12f74:	movne	r0, #39	; 0x27
   12f78:	strbne	r0, [ip]
   12f7c:	movw	r0, #28056	; 0x6d98
   12f80:	movt	r0, #1
   12f84:	str	r0, [fp, #-88]	; 0xffffffa8
   12f88:	mov	r0, #1
   12f8c:	str	r0, [fp, #-72]	; 0xffffffb8
   12f90:	mov	r3, #0
   12f94:	b	13210 <__mempcpy_chk@plt+0x21d4>
   12f98:	mov	r4, #5
   12f9c:	tst	r8, #1
   12fa0:	beq	12fc8 <__mempcpy_chk@plt+0x1f8c>
   12fa4:	mov	r0, #1
   12fa8:	mov	r9, #0
   12fac:	str	r0, [fp, #-72]	; 0xffffffb8
   12fb0:	movw	r0, #28052	; 0x6d94
   12fb4:	mov	r2, #1
   12fb8:	mov	r3, #1
   12fbc:	movt	r0, #1
   12fc0:	str	r0, [fp, #-88]	; 0xffffffa8
   12fc4:	b	13210 <__mempcpy_chk@plt+0x21d4>
   12fc8:	cmp	r5, #0
   12fcc:	mov	r3, #0
   12fd0:	mov	r9, #1
   12fd4:	mov	r2, #1
   12fd8:	movne	r0, #34	; 0x22
   12fdc:	strbne	r0, [ip]
   12fe0:	movw	r0, #28052	; 0x6d94
   12fe4:	movt	r0, #1
   12fe8:	str	r0, [fp, #-88]	; 0xffffffa8
   12fec:	mov	r0, #1
   12ff0:	str	r0, [fp, #-72]	; 0xffffffb8
   12ff4:	b	13210 <__mempcpy_chk@plt+0x21d4>
   12ff8:	ldrb	r1, [r0, #1]
   12ffc:	and	r1, r1, #223	; 0xdf
   13000:	cmp	r1, #66	; 0x42
   13004:	bne	1305c <__mempcpy_chk@plt+0x2020>
   13008:	ldrb	r1, [r0, #2]
   1300c:	cmp	r1, #49	; 0x31
   13010:	bne	1305c <__mempcpy_chk@plt+0x2020>
   13014:	ldrb	r1, [r0, #3]
   13018:	cmp	r1, #56	; 0x38
   1301c:	bne	1305c <__mempcpy_chk@plt+0x2020>
   13020:	ldrb	r1, [r0, #4]
   13024:	cmp	r1, #48	; 0x30
   13028:	bne	1305c <__mempcpy_chk@plt+0x2020>
   1302c:	ldrb	r1, [r0, #5]
   13030:	cmp	r1, #51	; 0x33
   13034:	bne	1305c <__mempcpy_chk@plt+0x2020>
   13038:	ldrb	r1, [r0, #6]
   1303c:	cmp	r1, #48	; 0x30
   13040:	bne	1305c <__mempcpy_chk@plt+0x2020>
   13044:	ldrb	r0, [r0, #7]
   13048:	cmp	r0, #0
   1304c:	movw	r0, #28066	; 0x6da2
   13050:	movt	r0, #1
   13054:	str	r0, [sp, #72]	; 0x48
   13058:	beq	13078 <__mempcpy_chk@plt+0x203c>
   1305c:	movw	r1, #28052	; 0x6d94
   13060:	movw	r0, #28056	; 0x6d98
   13064:	cmp	r4, #9
   13068:	movt	r1, #1
   1306c:	movt	r0, #1
   13070:	moveq	r0, r1
   13074:	str	r0, [sp, #72]	; 0x48
   13078:	movw	r6, #28056	; 0x6d98
   1307c:	mov	r0, #0
   13080:	mov	r2, #5
   13084:	movt	r6, #1
   13088:	mov	r1, r6
   1308c:	bl	10e68 <dcgettext@plt>
   13090:	cmp	r0, r6
   13094:	str	r0, [sp, #76]	; 0x4c
   13098:	beq	130e4 <__mempcpy_chk@plt+0x20a8>
   1309c:	ldr	ip, [fp, #-84]	; 0xffffffac
   130a0:	mov	r9, #0
   130a4:	tst	r8, #1
   130a8:	bne	131ec <__mempcpy_chk@plt+0x21b0>
   130ac:	ldr	r0, [sp, #72]	; 0x48
   130b0:	ldrb	r0, [r0]
   130b4:	cmp	r0, #0
   130b8:	beq	131ec <__mempcpy_chk@plt+0x21b0>
   130bc:	ldr	r1, [sp, #72]	; 0x48
   130c0:	mov	r9, #0
   130c4:	add	r1, r1, #1
   130c8:	cmp	r9, r5
   130cc:	strbcc	r0, [ip, r9]
   130d0:	ldrb	r0, [r1, r9]
   130d4:	add	r9, r9, #1
   130d8:	cmp	r0, #0
   130dc:	bne	130c8 <__mempcpy_chk@plt+0x208c>
   130e0:	b	131ec <__mempcpy_chk@plt+0x21b0>
   130e4:	bl	16158 <__mempcpy_chk@plt+0x511c>
   130e8:	ldrb	r1, [r0]
   130ec:	and	r1, r1, #223	; 0xdf
   130f0:	cmp	r1, #71	; 0x47
   130f4:	beq	13164 <__mempcpy_chk@plt+0x2128>
   130f8:	ldr	ip, [fp, #-84]	; 0xffffffac
   130fc:	cmp	r1, #85	; 0x55
   13100:	bne	131c0 <__mempcpy_chk@plt+0x2184>
   13104:	ldrb	r1, [r0, #1]
   13108:	and	r1, r1, #223	; 0xdf
   1310c:	cmp	r1, #84	; 0x54
   13110:	bne	131c0 <__mempcpy_chk@plt+0x2184>
   13114:	ldrb	r1, [r0, #2]
   13118:	and	r1, r1, #223	; 0xdf
   1311c:	cmp	r1, #70	; 0x46
   13120:	bne	131c0 <__mempcpy_chk@plt+0x2184>
   13124:	ldrb	r1, [r0, #3]
   13128:	cmp	r1, #45	; 0x2d
   1312c:	bne	131c0 <__mempcpy_chk@plt+0x2184>
   13130:	ldrb	r1, [r0, #4]
   13134:	cmp	r1, #56	; 0x38
   13138:	bne	131c0 <__mempcpy_chk@plt+0x2184>
   1313c:	ldrb	r0, [r0, #5]
   13140:	cmp	r0, #0
   13144:	bne	131c0 <__mempcpy_chk@plt+0x2184>
   13148:	movw	r0, #28062	; 0x6d9e
   1314c:	movt	r0, #1
   13150:	str	r0, [sp, #76]	; 0x4c
   13154:	mov	r9, #0
   13158:	tst	r8, #1
   1315c:	beq	130ac <__mempcpy_chk@plt+0x2070>
   13160:	b	131ec <__mempcpy_chk@plt+0x21b0>
   13164:	ldrb	r1, [r0, #1]
   13168:	ldr	ip, [fp, #-84]	; 0xffffffac
   1316c:	and	r1, r1, #223	; 0xdf
   13170:	cmp	r1, #66	; 0x42
   13174:	bne	131c0 <__mempcpy_chk@plt+0x2184>
   13178:	ldrb	r1, [r0, #2]
   1317c:	cmp	r1, #49	; 0x31
   13180:	bne	131c0 <__mempcpy_chk@plt+0x2184>
   13184:	ldrb	r1, [r0, #3]
   13188:	cmp	r1, #56	; 0x38
   1318c:	bne	131c0 <__mempcpy_chk@plt+0x2184>
   13190:	ldrb	r1, [r0, #4]
   13194:	cmp	r1, #48	; 0x30
   13198:	bne	131c0 <__mempcpy_chk@plt+0x2184>
   1319c:	ldrb	r1, [r0, #5]
   131a0:	cmp	r1, #51	; 0x33
   131a4:	bne	131c0 <__mempcpy_chk@plt+0x2184>
   131a8:	ldrb	r1, [r0, #6]
   131ac:	cmp	r1, #48	; 0x30
   131b0:	bne	131c0 <__mempcpy_chk@plt+0x2184>
   131b4:	ldrb	r0, [r0, #7]
   131b8:	cmp	r0, #0
   131bc:	beq	13fd4 <__mempcpy_chk@plt+0x2f98>
   131c0:	movw	r0, #28056	; 0x6d98
   131c4:	cmp	r4, #9
   131c8:	movt	r0, #1
   131cc:	mov	r1, r0
   131d0:	movw	r0, #28052	; 0x6d94
   131d4:	movt	r0, #1
   131d8:	moveq	r1, r0
   131dc:	str	r1, [sp, #76]	; 0x4c
   131e0:	mov	r9, #0
   131e4:	tst	r8, #1
   131e8:	beq	130ac <__mempcpy_chk@plt+0x2070>
   131ec:	ldr	r6, [sp, #76]	; 0x4c
   131f0:	mov	r0, r6
   131f4:	bl	10f58 <strlen@plt>
   131f8:	ldr	ip, [fp, #-84]	; 0xffffffac
   131fc:	ldr	lr, [fp, #-80]	; 0xffffffb0
   13200:	str	r0, [fp, #-72]	; 0xffffffb8
   13204:	str	r6, [fp, #-88]	; 0xffffffa8
   13208:	mov	r2, #1
   1320c:	mov	r3, r8
   13210:	ldr	r0, [fp, #-72]	; 0xffffffb8
   13214:	str	r4, [fp, #-64]	; 0xffffffc0
   13218:	mov	sl, #0
   1321c:	str	r3, [fp, #-76]	; 0xffffffb4
   13220:	str	r2, [sp, #88]	; 0x58
   13224:	cmp	r0, #0
   13228:	movwne	r0, #1
   1322c:	and	r1, r0, r3
   13230:	and	r1, r2, r1
   13234:	str	r1, [sp, #48]	; 0x30
   13238:	sub	r1, r4, #2
   1323c:	clz	r1, r1
   13240:	lsr	r1, r1, #5
   13244:	and	r1, r1, r3
   13248:	str	r1, [sp, #44]	; 0x2c
   1324c:	subs	r1, r4, #2
   13250:	eor	r4, r3, #1
   13254:	movwne	r1, #1
   13258:	str	r4, [sp, #92]	; 0x5c
   1325c:	orr	r4, r1, r4
   13260:	and	r1, r1, r2
   13264:	and	r0, r0, r1
   13268:	str	r4, [sp, #64]	; 0x40
   1326c:	ldr	r4, [sp, #84]	; 0x54
   13270:	str	r0, [fp, #-60]	; 0xffffffc4
   13274:	orr	r0, r1, r3
   13278:	ldr	r1, [fp, #16]
   1327c:	eor	r0, r0, #1
   13280:	clz	r1, r1
   13284:	lsr	r1, r1, #5
   13288:	orr	r0, r1, r0
   1328c:	str	r0, [fp, #-68]	; 0xffffffbc
   13290:	eor	r0, r2, #1
   13294:	str	r0, [sp, #52]	; 0x34
   13298:	cmn	r7, #1
   1329c:	beq	132ac <__mempcpy_chk@plt+0x2270>
   132a0:	cmp	sl, r7
   132a4:	bne	132b8 <__mempcpy_chk@plt+0x227c>
   132a8:	b	13f4c <__mempcpy_chk@plt+0x2f10>
   132ac:	ldrb	r0, [lr, sl]
   132b0:	cmp	r0, #0
   132b4:	beq	13f54 <__mempcpy_chk@plt+0x2f18>
   132b8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   132bc:	cmp	r0, #0
   132c0:	beq	13320 <__mempcpy_chk@plt+0x22e4>
   132c4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   132c8:	mov	r6, r5
   132cc:	add	r5, sl, r0
   132d0:	cmp	r0, #2
   132d4:	bcc	13340 <__mempcpy_chk@plt+0x2304>
   132d8:	mov	r0, #0
   132dc:	cmn	r7, #1
   132e0:	str	r0, [fp, #-56]	; 0xffffffc8
   132e4:	bne	132fc <__mempcpy_chk@plt+0x22c0>
   132e8:	mov	r0, lr
   132ec:	bl	10f58 <strlen@plt>
   132f0:	ldr	lr, [fp, #-80]	; 0xffffffb0
   132f4:	ldr	ip, [fp, #-84]	; 0xffffffac
   132f8:	mov	r7, r0
   132fc:	cmp	r5, r7
   13300:	bls	13350 <__mempcpy_chk@plt+0x2314>
   13304:	mov	r0, #0
   13308:	mov	r5, r6
   1330c:	str	r0, [fp, #-48]	; 0xffffffd0
   13310:	ldrb	r6, [lr, sl]
   13314:	cmp	r6, #126	; 0x7e
   13318:	bls	133a0 <__mempcpy_chk@plt+0x2364>
   1331c:	b	138fc <__mempcpy_chk@plt+0x28c0>
   13320:	mov	r0, #0
   13324:	str	r0, [fp, #-56]	; 0xffffffc8
   13328:	mov	r0, #0
   1332c:	str	r0, [fp, #-48]	; 0xffffffd0
   13330:	ldrb	r6, [lr, sl]
   13334:	cmp	r6, #126	; 0x7e
   13338:	bls	133a0 <__mempcpy_chk@plt+0x2364>
   1333c:	b	138fc <__mempcpy_chk@plt+0x28c0>
   13340:	mov	r0, #0
   13344:	str	r0, [fp, #-56]	; 0xffffffc8
   13348:	cmp	r5, r7
   1334c:	bhi	13304 <__mempcpy_chk@plt+0x22c8>
   13350:	ldr	r1, [fp, #-88]	; 0xffffffa8
   13354:	ldr	r2, [fp, #-72]	; 0xffffffb8
   13358:	add	r0, lr, sl
   1335c:	bl	10f4c <bcmp@plt>
   13360:	ldr	r2, [sp, #92]	; 0x5c
   13364:	cmp	r0, #0
   13368:	mov	r1, r0
   1336c:	mov	r5, r6
   13370:	movwne	r1, #1
   13374:	orr	r1, r1, r2
   13378:	tst	r1, #1
   1337c:	beq	14014 <__mempcpy_chk@plt+0x2fd8>
   13380:	ldr	ip, [fp, #-84]	; 0xffffffac
   13384:	ldr	lr, [fp, #-80]	; 0xffffffb0
   13388:	clz	r0, r0
   1338c:	lsr	r0, r0, #5
   13390:	str	r0, [fp, #-48]	; 0xffffffd0
   13394:	ldrb	r6, [lr, sl]
   13398:	cmp	r6, #126	; 0x7e
   1339c:	bhi	138fc <__mempcpy_chk@plt+0x28c0>
   133a0:	add	r3, pc, #16
   133a4:	mov	r8, #1
   133a8:	mov	r2, #110	; 0x6e
   133ac:	mov	r0, #97	; 0x61
   133b0:	mov	r1, #0
   133b4:	ldr	pc, [r3, r6, lsl #2]
   133b8:			; <UNDEFINED> instruction: 0x000136b4
   133bc:	strdeq	r3, [r1], -ip
   133c0:	strdeq	r3, [r1], -ip
   133c4:	strdeq	r3, [r1], -ip
   133c8:	strdeq	r3, [r1], -ip
   133cc:	strdeq	r3, [r1], -ip
   133d0:	strdeq	r3, [r1], -ip
   133d4:			; <UNDEFINED> instruction: 0x000139b0
   133d8:	muleq	r1, r4, r6
   133dc:	andeq	r3, r1, ip, lsl #13
   133e0:	andeq	r3, r1, r0, lsr #13
   133e4:	ldrdeq	r3, [r1], -r0
   133e8:	andeq	r3, r1, r4, lsl #13
   133ec:	muleq	r1, ip, r6
   133f0:	strdeq	r3, [r1], -ip
   133f4:	strdeq	r3, [r1], -ip
   133f8:	strdeq	r3, [r1], -ip
   133fc:	strdeq	r3, [r1], -ip
   13400:	strdeq	r3, [r1], -ip
   13404:	strdeq	r3, [r1], -ip
   13408:	strdeq	r3, [r1], -ip
   1340c:	strdeq	r3, [r1], -ip
   13410:	strdeq	r3, [r1], -ip
   13414:	strdeq	r3, [r1], -ip
   13418:	strdeq	r3, [r1], -ip
   1341c:	strdeq	r3, [r1], -ip
   13420:	strdeq	r3, [r1], -ip
   13424:	strdeq	r3, [r1], -ip
   13428:	strdeq	r3, [r1], -ip
   1342c:	strdeq	r3, [r1], -ip
   13430:	strdeq	r3, [r1], -ip
   13434:	strdeq	r3, [r1], -ip
   13438:	andeq	r3, r1, r8, lsr #12
   1343c:	andeq	r3, r1, ip, lsr #12
   13440:	andeq	r3, r1, ip, lsr #12
   13444:	andeq	r3, r1, ip, lsl r6
   13448:	andeq	r3, r1, ip, lsr #12
   1344c:			; <UNDEFINED> instruction: 0x000135b4
   13450:	andeq	r3, r1, ip, lsr #12
   13454:	ldrdeq	r3, [r1], -r8
   13458:	andeq	r3, r1, ip, lsr #12
   1345c:	andeq	r3, r1, ip, lsr #12
   13460:	andeq	r3, r1, ip, lsr #12
   13464:			; <UNDEFINED> instruction: 0x000135b4
   13468:			; <UNDEFINED> instruction: 0x000135b4
   1346c:			; <UNDEFINED> instruction: 0x000135b4
   13470:			; <UNDEFINED> instruction: 0x000135b4
   13474:			; <UNDEFINED> instruction: 0x000135b4
   13478:			; <UNDEFINED> instruction: 0x000135b4
   1347c:			; <UNDEFINED> instruction: 0x000135b4
   13480:			; <UNDEFINED> instruction: 0x000135b4
   13484:			; <UNDEFINED> instruction: 0x000135b4
   13488:			; <UNDEFINED> instruction: 0x000135b4
   1348c:			; <UNDEFINED> instruction: 0x000135b4
   13490:			; <UNDEFINED> instruction: 0x000135b4
   13494:			; <UNDEFINED> instruction: 0x000135b4
   13498:			; <UNDEFINED> instruction: 0x000135b4
   1349c:			; <UNDEFINED> instruction: 0x000135b4
   134a0:			; <UNDEFINED> instruction: 0x000135b4
   134a4:	andeq	r3, r1, ip, lsr #12
   134a8:	andeq	r3, r1, ip, lsr #12
   134ac:	andeq	r3, r1, ip, lsr #12
   134b0:	andeq	r3, r1, ip, lsr #12
   134b4:	muleq	r1, ip, r7
   134b8:	strdeq	r3, [r1], -ip
   134bc:			; <UNDEFINED> instruction: 0x000135b4
   134c0:			; <UNDEFINED> instruction: 0x000135b4
   134c4:			; <UNDEFINED> instruction: 0x000135b4
   134c8:			; <UNDEFINED> instruction: 0x000135b4
   134cc:			; <UNDEFINED> instruction: 0x000135b4
   134d0:			; <UNDEFINED> instruction: 0x000135b4
   134d4:			; <UNDEFINED> instruction: 0x000135b4
   134d8:			; <UNDEFINED> instruction: 0x000135b4
   134dc:			; <UNDEFINED> instruction: 0x000135b4
   134e0:			; <UNDEFINED> instruction: 0x000135b4
   134e4:			; <UNDEFINED> instruction: 0x000135b4
   134e8:			; <UNDEFINED> instruction: 0x000135b4
   134ec:			; <UNDEFINED> instruction: 0x000135b4
   134f0:			; <UNDEFINED> instruction: 0x000135b4
   134f4:			; <UNDEFINED> instruction: 0x000135b4
   134f8:			; <UNDEFINED> instruction: 0x000135b4
   134fc:			; <UNDEFINED> instruction: 0x000135b4
   13500:			; <UNDEFINED> instruction: 0x000135b4
   13504:			; <UNDEFINED> instruction: 0x000135b4
   13508:			; <UNDEFINED> instruction: 0x000135b4
   1350c:			; <UNDEFINED> instruction: 0x000135b4
   13510:			; <UNDEFINED> instruction: 0x000135b4
   13514:			; <UNDEFINED> instruction: 0x000135b4
   13518:			; <UNDEFINED> instruction: 0x000135b4
   1351c:			; <UNDEFINED> instruction: 0x000135b4
   13520:			; <UNDEFINED> instruction: 0x000135b4
   13524:	andeq	r3, r1, ip, lsr #12
   13528:	andeq	r3, r1, r0, ror #12
   1352c:			; <UNDEFINED> instruction: 0x000135b4
   13530:	andeq	r3, r1, ip, lsr #12
   13534:			; <UNDEFINED> instruction: 0x000135b4
   13538:	andeq	r3, r1, ip, lsr #12
   1353c:			; <UNDEFINED> instruction: 0x000135b4
   13540:			; <UNDEFINED> instruction: 0x000135b4
   13544:			; <UNDEFINED> instruction: 0x000135b4
   13548:			; <UNDEFINED> instruction: 0x000135b4
   1354c:			; <UNDEFINED> instruction: 0x000135b4
   13550:			; <UNDEFINED> instruction: 0x000135b4
   13554:			; <UNDEFINED> instruction: 0x000135b4
   13558:			; <UNDEFINED> instruction: 0x000135b4
   1355c:			; <UNDEFINED> instruction: 0x000135b4
   13560:			; <UNDEFINED> instruction: 0x000135b4
   13564:			; <UNDEFINED> instruction: 0x000135b4
   13568:			; <UNDEFINED> instruction: 0x000135b4
   1356c:			; <UNDEFINED> instruction: 0x000135b4
   13570:			; <UNDEFINED> instruction: 0x000135b4
   13574:			; <UNDEFINED> instruction: 0x000135b4
   13578:			; <UNDEFINED> instruction: 0x000135b4
   1357c:			; <UNDEFINED> instruction: 0x000135b4
   13580:			; <UNDEFINED> instruction: 0x000135b4
   13584:			; <UNDEFINED> instruction: 0x000135b4
   13588:			; <UNDEFINED> instruction: 0x000135b4
   1358c:			; <UNDEFINED> instruction: 0x000135b4
   13590:			; <UNDEFINED> instruction: 0x000135b4
   13594:			; <UNDEFINED> instruction: 0x000135b4
   13598:			; <UNDEFINED> instruction: 0x000135b4
   1359c:			; <UNDEFINED> instruction: 0x000135b4
   135a0:			; <UNDEFINED> instruction: 0x000135b4
   135a4:	strdeq	r3, [r1], -r4
   135a8:	andeq	r3, r1, ip, lsr #12
   135ac:	strdeq	r3, [r1], -r4
   135b0:	andeq	r3, r1, ip, lsl r6
   135b4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   135b8:	tst	r0, #1
   135bc:	bne	13874 <__mempcpy_chk@plt+0x2838>
   135c0:	ldr	r1, [fp, #16]
   135c4:	ubfx	r0, r6, #5, #3
   135c8:	mov	r2, #1
   135cc:	ldr	r0, [r1, r0, lsl #2]
   135d0:	and	r1, r6, #31
   135d4:	tst	r0, r2, lsl r1
   135d8:	beq	13874 <__mempcpy_chk@plt+0x2838>
   135dc:	mov	r0, r6
   135e0:	mov	r1, r8
   135e4:	ldr	r2, [fp, #-76]	; 0xffffffb4
   135e8:	tst	r2, #1
   135ec:	beq	13894 <__mempcpy_chk@plt+0x2858>
   135f0:	b	13ff0 <__mempcpy_chk@plt+0x2fb4>
   135f4:	cmp	r7, #1
   135f8:	beq	1361c <__mempcpy_chk@plt+0x25e0>
   135fc:	mov	r8, #0
   13600:	cmn	r7, #1
   13604:	bne	13860 <__mempcpy_chk@plt+0x2824>
   13608:	ldrb	r0, [lr, #1]
   1360c:	cmp	r0, #0
   13610:	beq	1361c <__mempcpy_chk@plt+0x25e0>
   13614:	mvn	r7, #0
   13618:	b	13860 <__mempcpy_chk@plt+0x2824>
   1361c:	mov	r8, #0
   13620:	cmp	sl, #0
   13624:	bne	13860 <__mempcpy_chk@plt+0x2824>
   13628:	mov	r1, #1
   1362c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   13630:	cmp	r0, #2
   13634:	bne	1364c <__mempcpy_chk@plt+0x2610>
   13638:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1363c:	mov	r8, r1
   13640:	tst	r0, #1
   13644:	beq	135b4 <__mempcpy_chk@plt+0x2578>
   13648:	b	13ff0 <__mempcpy_chk@plt+0x2fb4>
   1364c:	mov	r8, r1
   13650:	ldr	r0, [fp, #-68]	; 0xffffffbc
   13654:	tst	r0, #1
   13658:	beq	135c0 <__mempcpy_chk@plt+0x2584>
   1365c:	b	13874 <__mempcpy_chk@plt+0x2838>
   13660:	ldr	r0, [fp, #-64]	; 0xffffffc0
   13664:	cmp	r0, #2
   13668:	bne	13928 <__mempcpy_chk@plt+0x28ec>
   1366c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   13670:	tst	r0, #1
   13674:	bne	13ff0 <__mempcpy_chk@plt+0x2fb4>
   13678:	mov	r0, #0
   1367c:	str	r0, [fp, #-56]	; 0xffffffc8
   13680:	b	13940 <__mempcpy_chk@plt+0x2904>
   13684:	mov	r0, #102	; 0x66
   13688:	b	139b0 <__mempcpy_chk@plt+0x2974>
   1368c:	mov	r2, #116	; 0x74
   13690:	b	136a0 <__mempcpy_chk@plt+0x2664>
   13694:	mov	r0, #98	; 0x62
   13698:	b	139b0 <__mempcpy_chk@plt+0x2974>
   1369c:	mov	r2, #114	; 0x72
   136a0:	ldr	r0, [sp, #64]	; 0x40
   136a4:	tst	r0, #1
   136a8:	mov	r0, r2
   136ac:	bne	139b0 <__mempcpy_chk@plt+0x2974>
   136b0:	b	13ff0 <__mempcpy_chk@plt+0x2fb4>
   136b4:	ldr	r0, [sp, #88]	; 0x58
   136b8:	tst	r0, #1
   136bc:	beq	139d0 <__mempcpy_chk@plt+0x2994>
   136c0:	ldr	r0, [fp, #-76]	; 0xffffffb4
   136c4:	tst	r0, #1
   136c8:	bne	1412c <__mempcpy_chk@plt+0x30f0>
   136cc:	ldr	r0, [fp, #-64]	; 0xffffffc0
   136d0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   136d4:	subs	r0, r0, #2
   136d8:	movwne	r0, #1
   136dc:	orr	r0, r0, r1
   136e0:	tst	r0, #1
   136e4:	bne	13720 <__mempcpy_chk@plt+0x26e4>
   136e8:	cmp	r9, r5
   136ec:	movcc	r0, #39	; 0x27
   136f0:	strbcc	r0, [ip, r9]
   136f4:	add	r0, r9, #1
   136f8:	cmp	r0, r5
   136fc:	movcc	r1, #36	; 0x24
   13700:	strbcc	r1, [ip, r0]
   13704:	add	r0, r9, #2
   13708:	add	r9, r9, #3
   1370c:	cmp	r0, r5
   13710:	movcc	r1, #39	; 0x27
   13714:	strbcc	r1, [ip, r0]
   13718:	mov	r0, #1
   1371c:	str	r0, [fp, #-52]	; 0xffffffcc
   13720:	mov	r1, #1
   13724:	cmp	r9, r5
   13728:	mov	r8, #0
   1372c:	mov	r6, #48	; 0x30
   13730:	str	r1, [fp, #-56]	; 0xffffffc8
   13734:	ldr	r1, [fp, #-64]	; 0xffffffc0
   13738:	movcc	r0, #92	; 0x5c
   1373c:	strbcc	r0, [ip, r9]
   13740:	add	r0, r9, #1
   13744:	cmp	r1, #2
   13748:	beq	13b9c <__mempcpy_chk@plt+0x2b60>
   1374c:	add	r1, sl, #1
   13750:	cmp	r1, r7
   13754:	bcs	13b9c <__mempcpy_chk@plt+0x2b60>
   13758:	ldrb	r1, [lr, r1]
   1375c:	sub	r1, r1, #48	; 0x30
   13760:	uxtb	r1, r1
   13764:	cmp	r1, #9
   13768:	bhi	13b9c <__mempcpy_chk@plt+0x2b60>
   1376c:	cmp	r0, r5
   13770:	movcc	r1, #48	; 0x30
   13774:	strbcc	r1, [ip, r0]
   13778:	add	r0, r9, #2
   1377c:	add	r9, r9, #3
   13780:	cmp	r0, r5
   13784:	movcc	r1, #48	; 0x30
   13788:	strbcc	r1, [ip, r0]
   1378c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   13790:	tst	r0, #1
   13794:	beq	135c0 <__mempcpy_chk@plt+0x2584>
   13798:	b	13874 <__mempcpy_chk@plt+0x2838>
   1379c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   137a0:	mov	r6, #63	; 0x3f
   137a4:	cmp	r0, #5
   137a8:	beq	13bb0 <__mempcpy_chk@plt+0x2b74>
   137ac:	mov	r1, #0
   137b0:	cmp	r0, #2
   137b4:	str	r1, [fp, #-56]	; 0xffffffc8
   137b8:	bne	13c78 <__mempcpy_chk@plt+0x2c3c>
   137bc:	ldr	r0, [fp, #-76]	; 0xffffffb4
   137c0:	mov	r8, #0
   137c4:	tst	r0, #1
   137c8:	beq	135b4 <__mempcpy_chk@plt+0x2578>
   137cc:	b	13ff0 <__mempcpy_chk@plt+0x2fb4>
   137d0:	mov	r0, #118	; 0x76
   137d4:	b	139b0 <__mempcpy_chk@plt+0x2974>
   137d8:	mov	r0, #1
   137dc:	mov	r6, #39	; 0x27
   137e0:	str	r0, [sp, #60]	; 0x3c
   137e4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   137e8:	cmp	r0, #2
   137ec:	bne	139f0 <__mempcpy_chk@plt+0x29b4>
   137f0:	ldr	r0, [fp, #-76]	; 0xffffffb4
   137f4:	tst	r0, #1
   137f8:	bne	13ff0 <__mempcpy_chk@plt+0x2fb4>
   137fc:	ldr	r2, [sp, #56]	; 0x38
   13800:	clz	r1, r5
   13804:	mov	r8, #1
   13808:	lsr	r1, r1, #5
   1380c:	cmp	r2, #0
   13810:	mov	r0, r2
   13814:	movwne	r0, #1
   13818:	orrs	r0, r0, r1
   1381c:	moveq	r2, r5
   13820:	moveq	r5, r0
   13824:	cmp	r9, r5
   13828:	str	r2, [sp, #56]	; 0x38
   1382c:	movcc	r0, #39	; 0x27
   13830:	strbcc	r0, [ip, r9]
   13834:	add	r0, r9, #1
   13838:	cmp	r0, r5
   1383c:	movcc	r1, #92	; 0x5c
   13840:	strbcc	r1, [ip, r0]
   13844:	add	r0, r9, #2
   13848:	add	r9, r9, #3
   1384c:	cmp	r0, r5
   13850:	movcc	r1, #39	; 0x27
   13854:	strbcc	r1, [ip, r0]
   13858:	mov	r0, #0
   1385c:	str	r0, [fp, #-52]	; 0xffffffcc
   13860:	mov	r0, #0
   13864:	str	r0, [fp, #-56]	; 0xffffffc8
   13868:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1386c:	tst	r0, #1
   13870:	beq	135c0 <__mempcpy_chk@plt+0x2584>
   13874:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13878:	mov	r1, r8
   1387c:	cmp	r0, #0
   13880:	mov	r0, r6
   13884:	beq	13948 <__mempcpy_chk@plt+0x290c>
   13888:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1388c:	tst	r2, #1
   13890:	bne	13ff0 <__mempcpy_chk@plt+0x2fb4>
   13894:	ldr	r2, [fp, #-64]	; 0xffffffc0
   13898:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1389c:	subs	r2, r2, #2
   138a0:	movwne	r2, #1
   138a4:	orr	r2, r2, r3
   138a8:	tst	r2, #1
   138ac:	bne	138e8 <__mempcpy_chk@plt+0x28ac>
   138b0:	cmp	r9, r5
   138b4:	movcc	r2, #39	; 0x27
   138b8:	strbcc	r2, [ip, r9]
   138bc:	add	r2, r9, #1
   138c0:	cmp	r2, r5
   138c4:	movcc	r3, #36	; 0x24
   138c8:	strbcc	r3, [ip, r2]
   138cc:	add	r2, r9, #2
   138d0:	add	r9, r9, #3
   138d4:	cmp	r2, r5
   138d8:	movcc	r3, #39	; 0x27
   138dc:	strbcc	r3, [ip, r2]
   138e0:	mov	r2, #1
   138e4:	str	r2, [fp, #-52]	; 0xffffffcc
   138e8:	cmp	r9, r5
   138ec:	movcc	r2, #92	; 0x5c
   138f0:	strbcc	r2, [ip, r9]
   138f4:	add	r9, r9, #1
   138f8:	b	13990 <__mempcpy_chk@plt+0x2954>
   138fc:	ldr	r0, [sp, #40]	; 0x28
   13900:	cmp	r0, #1
   13904:	bne	13a04 <__mempcpy_chk@plt+0x29c8>
   13908:	bl	10f34 <__ctype_b_loc@plt>
   1390c:	ldr	r0, [r0]
   13910:	ldr	lr, [fp, #-80]	; 0xffffffb0
   13914:	mov	r1, #1
   13918:	add	r0, r0, r6, lsl #1
   1391c:	ldrb	r0, [r0, #1]
   13920:	ubfx	r8, r0, #6, #1
   13924:	b	13d5c <__mempcpy_chk@plt+0x2d20>
   13928:	ldr	r1, [sp, #48]	; 0x30
   1392c:	mov	r0, #0
   13930:	str	r0, [fp, #-56]	; 0xffffffc8
   13934:	mov	r0, #92	; 0x5c
   13938:	cmp	r1, #0
   1393c:	beq	139b0 <__mempcpy_chk@plt+0x2974>
   13940:	mov	r6, #92	; 0x5c
   13944:	mov	r8, #0
   13948:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1394c:	cmp	r0, #0
   13950:	bne	13988 <__mempcpy_chk@plt+0x294c>
   13954:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13958:	tst	r0, #1
   1395c:	beq	13988 <__mempcpy_chk@plt+0x294c>
   13960:	cmp	r9, r5
   13964:	movcc	r0, #39	; 0x27
   13968:	strbcc	r0, [ip, r9]
   1396c:	add	r0, r9, #1
   13970:	add	r9, r9, #2
   13974:	cmp	r0, r5
   13978:	movcc	r1, #39	; 0x27
   1397c:	strbcc	r1, [ip, r0]
   13980:	mov	r0, #0
   13984:	str	r0, [fp, #-52]	; 0xffffffcc
   13988:	mov	r1, r8
   1398c:	mov	r0, r6
   13990:	cmp	r9, r5
   13994:	and	r4, r4, r1
   13998:	strbcc	r0, [ip, r9]
   1399c:	add	r9, r9, #1
   139a0:	add	sl, sl, #1
   139a4:	cmn	r7, #1
   139a8:	bne	132a0 <__mempcpy_chk@plt+0x2264>
   139ac:	b	132ac <__mempcpy_chk@plt+0x2270>
   139b0:	mov	r1, #0
   139b4:	mov	r8, #0
   139b8:	str	r1, [fp, #-56]	; 0xffffffc8
   139bc:	ldr	r1, [sp, #88]	; 0x58
   139c0:	tst	r1, #1
   139c4:	mov	r1, #0
   139c8:	beq	135b4 <__mempcpy_chk@plt+0x2578>
   139cc:	b	13888 <__mempcpy_chk@plt+0x284c>
   139d0:	ldr	r0, [sp, #36]	; 0x24
   139d4:	mov	r6, #0
   139d8:	mov	r8, #0
   139dc:	cmp	r0, #0
   139e0:	mov	r0, #0
   139e4:	str	r0, [fp, #-56]	; 0xffffffc8
   139e8:	bne	139a0 <__mempcpy_chk@plt+0x2964>
   139ec:	b	135b4 <__mempcpy_chk@plt+0x2578>
   139f0:	mov	r8, #1
   139f4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   139f8:	tst	r0, #1
   139fc:	beq	135c0 <__mempcpy_chk@plt+0x2584>
   13a00:	b	13874 <__mempcpy_chk@plt+0x2838>
   13a04:	mov	r0, #0
   13a08:	cmn	r7, #1
   13a0c:	str	r0, [fp, #-36]	; 0xffffffdc
   13a10:	str	r0, [fp, #-40]	; 0xffffffd8
   13a14:	bne	13a28 <__mempcpy_chk@plt+0x29ec>
   13a18:	mov	r0, lr
   13a1c:	bl	10f58 <strlen@plt>
   13a20:	ldr	lr, [fp, #-80]	; 0xffffffb0
   13a24:	mov	r7, r0
   13a28:	ldr	r0, [sp, #44]	; 0x2c
   13a2c:	str	r4, [sp, #84]	; 0x54
   13a30:	str	r5, [sp, #28]
   13a34:	cmp	r0, #0
   13a38:	beq	13c8c <__mempcpy_chk@plt+0x2c50>
   13a3c:	ldr	r0, [sp, #80]	; 0x50
   13a40:	mov	r8, #1
   13a44:	mov	r5, #0
   13a48:	add	r0, r0, sl
   13a4c:	str	r0, [sp, #24]
   13a50:	sub	r0, fp, #40	; 0x28
   13a54:	mov	r3, r0
   13a58:	b	13a94 <__mempcpy_chk@plt+0x2a58>
   13a5c:	ldr	r5, [sp, #68]	; 0x44
   13a60:	add	r5, r0, r5
   13a64:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13a68:	bl	10e8c <iswprint@plt>
   13a6c:	cmp	r0, #0
   13a70:	sub	r4, fp, #40	; 0x28
   13a74:	movwne	r0, #1
   13a78:	and	r8, r8, r0
   13a7c:	mov	r0, r4
   13a80:	bl	10e50 <mbsinit@plt>
   13a84:	ldr	lr, [fp, #-80]	; 0xffffffb0
   13a88:	mov	r3, r4
   13a8c:	cmp	r0, #0
   13a90:	bne	13d50 <__mempcpy_chk@plt+0x2d14>
   13a94:	str	r5, [sp, #68]	; 0x44
   13a98:	add	r5, r5, sl
   13a9c:	sub	r0, fp, #44	; 0x2c
   13aa0:	add	r1, lr, r5
   13aa4:	sub	r2, r7, r5
   13aa8:	bl	16190 <__mempcpy_chk@plt+0x5154>
   13aac:	cmn	r0, #2
   13ab0:	beq	13d10 <__mempcpy_chk@plt+0x2cd4>
   13ab4:	ldr	ip, [fp, #-84]	; 0xffffffac
   13ab8:	cmn	r0, #1
   13abc:	beq	13d04 <__mempcpy_chk@plt+0x2cc8>
   13ac0:	cmp	r0, #0
   13ac4:	beq	13d08 <__mempcpy_chk@plt+0x2ccc>
   13ac8:	cmp	r0, #2
   13acc:	bcc	13a5c <__mempcpy_chk@plt+0x2a20>
   13ad0:	ldr	r1, [sp, #68]	; 0x44
   13ad4:	ldr	r2, [sp, #24]
   13ad8:	add	r1, r2, r1
   13adc:	sub	r2, r0, #1
   13ae0:	ldrb	r3, [r1]
   13ae4:	sub	r3, r3, #91	; 0x5b
   13ae8:	cmp	r3, #33	; 0x21
   13aec:	bls	13b0c <__mempcpy_chk@plt+0x2ad0>
   13af0:	add	r1, r1, #1
   13af4:	subs	r2, r2, #1
   13af8:	beq	13a5c <__mempcpy_chk@plt+0x2a20>
   13afc:	ldrb	r3, [r1]
   13b00:	sub	r3, r3, #91	; 0x5b
   13b04:	cmp	r3, #33	; 0x21
   13b08:	bhi	13af0 <__mempcpy_chk@plt+0x2ab4>
   13b0c:	add	r5, pc, #0
   13b10:	ldr	pc, [r5, r3, lsl #2]
   13b14:	andeq	r4, r1, r8, lsr #32
   13b18:	andeq	r4, r1, r8, lsr #32
   13b1c:	strdeq	r3, [r1], -r0
   13b20:	andeq	r4, r1, r8, lsr #32
   13b24:	strdeq	r3, [r1], -r0
   13b28:	andeq	r4, r1, r8, lsr #32
   13b2c:	strdeq	r3, [r1], -r0
   13b30:	strdeq	r3, [r1], -r0
   13b34:	strdeq	r3, [r1], -r0
   13b38:	strdeq	r3, [r1], -r0
   13b3c:	strdeq	r3, [r1], -r0
   13b40:	strdeq	r3, [r1], -r0
   13b44:	strdeq	r3, [r1], -r0
   13b48:	strdeq	r3, [r1], -r0
   13b4c:	strdeq	r3, [r1], -r0
   13b50:	strdeq	r3, [r1], -r0
   13b54:	strdeq	r3, [r1], -r0
   13b58:	strdeq	r3, [r1], -r0
   13b5c:	strdeq	r3, [r1], -r0
   13b60:	strdeq	r3, [r1], -r0
   13b64:	strdeq	r3, [r1], -r0
   13b68:	strdeq	r3, [r1], -r0
   13b6c:	strdeq	r3, [r1], -r0
   13b70:	strdeq	r3, [r1], -r0
   13b74:	strdeq	r3, [r1], -r0
   13b78:	strdeq	r3, [r1], -r0
   13b7c:	strdeq	r3, [r1], -r0
   13b80:	strdeq	r3, [r1], -r0
   13b84:	strdeq	r3, [r1], -r0
   13b88:	strdeq	r3, [r1], -r0
   13b8c:	strdeq	r3, [r1], -r0
   13b90:	strdeq	r3, [r1], -r0
   13b94:	strdeq	r3, [r1], -r0
   13b98:	andeq	r4, r1, r8, lsr #32
   13b9c:	mov	r9, r0
   13ba0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   13ba4:	tst	r0, #1
   13ba8:	beq	135c0 <__mempcpy_chk@plt+0x2584>
   13bac:	b	13874 <__mempcpy_chk@plt+0x2838>
   13bb0:	mov	r0, #0
   13bb4:	str	r0, [fp, #-56]	; 0xffffffc8
   13bb8:	ldr	r0, [sp, #32]
   13bbc:	cmp	r0, #0
   13bc0:	beq	13c78 <__mempcpy_chk@plt+0x2c3c>
   13bc4:	add	r0, sl, #2
   13bc8:	mov	r1, r7
   13bcc:	cmp	r0, r7
   13bd0:	bcs	13c78 <__mempcpy_chk@plt+0x2c3c>
   13bd4:	add	r1, sl, lr
   13bd8:	ldrb	r1, [r1, #1]
   13bdc:	cmp	r1, #63	; 0x3f
   13be0:	bne	13c78 <__mempcpy_chk@plt+0x2c3c>
   13be4:	ldrb	r8, [lr, r0]
   13be8:	sub	r2, r8, #33	; 0x21
   13bec:	cmp	r2, #29
   13bf0:	bhi	13c78 <__mempcpy_chk@plt+0x2c3c>
   13bf4:	mov	r1, r4
   13bf8:	movw	r4, #20929	; 0x51c1
   13bfc:	mov	r3, #1
   13c00:	movt	r4, #14336	; 0x3800
   13c04:	tst	r4, r3, lsl r2
   13c08:	beq	13f34 <__mempcpy_chk@plt+0x2ef8>
   13c0c:	ldr	r2, [fp, #-76]	; 0xffffffb4
   13c10:	tst	r2, #1
   13c14:	bne	13ff0 <__mempcpy_chk@plt+0x2fb4>
   13c18:	cmp	r9, r5
   13c1c:	mov	r6, r8
   13c20:	mov	r4, r1
   13c24:	mov	sl, r0
   13c28:	mov	r8, #0
   13c2c:	movcc	r2, #63	; 0x3f
   13c30:	strbcc	r2, [ip, r9]
   13c34:	add	r2, r9, #1
   13c38:	cmp	r2, r5
   13c3c:	movcc	r3, #34	; 0x22
   13c40:	strbcc	r3, [ip, r2]
   13c44:	add	r2, r9, #2
   13c48:	cmp	r2, r5
   13c4c:	movcc	r3, #34	; 0x22
   13c50:	strbcc	r3, [ip, r2]
   13c54:	add	r2, r9, #3
   13c58:	add	r9, r9, #4
   13c5c:	cmp	r2, r5
   13c60:	movcc	r3, #63	; 0x3f
   13c64:	strbcc	r3, [ip, r2]
   13c68:	ldr	r0, [fp, #-68]	; 0xffffffbc
   13c6c:	tst	r0, #1
   13c70:	beq	135c0 <__mempcpy_chk@plt+0x2584>
   13c74:	b	13874 <__mempcpy_chk@plt+0x2838>
   13c78:	mov	r8, #0
   13c7c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   13c80:	tst	r0, #1
   13c84:	beq	135c0 <__mempcpy_chk@plt+0x2584>
   13c88:	b	13874 <__mempcpy_chk@plt+0x2838>
   13c8c:	mov	r8, #1
   13c90:	mov	r5, #0
   13c94:	sub	r4, fp, #40	; 0x28
   13c98:	str	r5, [sp, #68]	; 0x44
   13c9c:	add	r5, r5, sl
   13ca0:	sub	r0, fp, #44	; 0x2c
   13ca4:	mov	r3, r4
   13ca8:	add	r1, lr, r5
   13cac:	sub	r2, r7, r5
   13cb0:	bl	16190 <__mempcpy_chk@plt+0x5154>
   13cb4:	cmn	r0, #2
   13cb8:	beq	13d10 <__mempcpy_chk@plt+0x2cd4>
   13cbc:	cmn	r0, #1
   13cc0:	beq	13d04 <__mempcpy_chk@plt+0x2cc8>
   13cc4:	ldr	r5, [sp, #68]	; 0x44
   13cc8:	cmp	r0, #0
   13ccc:	beq	13d4c <__mempcpy_chk@plt+0x2d10>
   13cd0:	add	r5, r0, r5
   13cd4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13cd8:	bl	10e8c <iswprint@plt>
   13cdc:	cmp	r0, #0
   13ce0:	sub	r4, fp, #40	; 0x28
   13ce4:	movwne	r0, #1
   13ce8:	and	r8, r8, r0
   13cec:	mov	r0, r4
   13cf0:	bl	10e50 <mbsinit@plt>
   13cf4:	ldr	lr, [fp, #-80]	; 0xffffffb0
   13cf8:	cmp	r0, #0
   13cfc:	beq	13c98 <__mempcpy_chk@plt+0x2c5c>
   13d00:	b	13d50 <__mempcpy_chk@plt+0x2d14>
   13d04:	mov	r8, #0
   13d08:	ldr	lr, [fp, #-80]	; 0xffffffb0
   13d0c:	b	13d44 <__mempcpy_chk@plt+0x2d08>
   13d10:	ldr	lr, [fp, #-80]	; 0xffffffb0
   13d14:	mov	r8, #0
   13d18:	cmp	r5, r7
   13d1c:	bcs	13d44 <__mempcpy_chk@plt+0x2d08>
   13d20:	ldrb	r0, [lr, r5]
   13d24:	cmp	r0, #0
   13d28:	beq	13d44 <__mempcpy_chk@plt+0x2d08>
   13d2c:	ldr	r0, [sp, #68]	; 0x44
   13d30:	add	r0, r0, #1
   13d34:	add	r5, r0, sl
   13d38:	str	r0, [sp, #68]	; 0x44
   13d3c:	cmp	r5, r7
   13d40:	bcc	13d20 <__mempcpy_chk@plt+0x2ce4>
   13d44:	ldr	r5, [sp, #68]	; 0x44
   13d48:	b	13d50 <__mempcpy_chk@plt+0x2d14>
   13d4c:	ldr	lr, [fp, #-80]	; 0xffffffb0
   13d50:	mov	r1, r5
   13d54:	ldr	r5, [sp, #28]
   13d58:	ldr	r4, [sp, #84]	; 0x54
   13d5c:	ldr	r0, [sp, #52]	; 0x34
   13d60:	ldr	ip, [fp, #-84]	; 0xffffffac
   13d64:	cmp	r1, #1
   13d68:	orr	r2, r8, r0
   13d6c:	mov	r0, r1
   13d70:	bhi	13d7c <__mempcpy_chk@plt+0x2d40>
   13d74:	tst	r2, #1
   13d78:	bne	135b4 <__mempcpy_chk@plt+0x2578>
   13d7c:	add	r0, r0, sl
   13d80:	str	r2, [sp, #84]	; 0x54
   13d84:	str	r0, [fp, #-56]	; 0xffffffc8
   13d88:	mov	r0, #0
   13d8c:	tst	r2, #1
   13d90:	bne	13e70 <__mempcpy_chk@plt+0x2e34>
   13d94:	ldr	r1, [fp, #-76]	; 0xffffffb4
   13d98:	tst	r1, #1
   13d9c:	bne	13ff0 <__mempcpy_chk@plt+0x2fb4>
   13da0:	ldr	r1, [fp, #-64]	; 0xffffffc0
   13da4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13da8:	subs	r2, r1, #2
   13dac:	movwne	r2, #1
   13db0:	orr	r2, r2, r0
   13db4:	tst	r2, #1
   13db8:	bne	13df4 <__mempcpy_chk@plt+0x2db8>
   13dbc:	cmp	r9, r5
   13dc0:	add	r2, r9, #1
   13dc4:	mov	r0, #1
   13dc8:	movcc	r1, #39	; 0x27
   13dcc:	str	r0, [fp, #-52]	; 0xffffffcc
   13dd0:	strbcc	r1, [ip, r9]
   13dd4:	cmp	r2, r5
   13dd8:	movcc	r1, #36	; 0x24
   13ddc:	strbcc	r1, [ip, r2]
   13de0:	add	r2, r9, #2
   13de4:	add	r9, r9, #3
   13de8:	cmp	r2, r5
   13dec:	movcc	r1, #39	; 0x27
   13df0:	strbcc	r1, [ip, r2]
   13df4:	cmp	r9, r5
   13df8:	add	r2, r9, #1
   13dfc:	movcc	r1, #92	; 0x5c
   13e00:	strbcc	r1, [ip, r9]
   13e04:	cmp	r2, r5
   13e08:	bcs	13e1c <__mempcpy_chk@plt+0x2de0>
   13e0c:	uxtb	r3, r6
   13e10:	mov	r1, #48	; 0x30
   13e14:	orr	r3, r1, r3, lsr #6
   13e18:	strb	r3, [ip, r2]
   13e1c:	add	r2, r9, #2
   13e20:	add	r9, r9, #3
   13e24:	cmp	r2, r5
   13e28:	lsrcc	r3, r6, #3
   13e2c:	movcc	r1, #6
   13e30:	bficc	r3, r1, #3, #29
   13e34:	mov	r1, #6
   13e38:	bfi	r6, r1, #3, #29
   13e3c:	strbcc	r3, [ip, r2]
   13e40:	mov	r2, #1
   13e44:	b	13ea4 <__mempcpy_chk@plt+0x2e68>
   13e48:	ldr	r1, [sp, #80]	; 0x50
   13e4c:	cmp	r9, r2
   13e50:	mov	r5, r2
   13e54:	ldr	r2, [sp, #84]	; 0x54
   13e58:	strbcc	r6, [ip, r9]
   13e5c:	add	r9, r9, #1
   13e60:	ldrb	r6, [r1, sl]
   13e64:	mov	sl, r3
   13e68:	tst	r2, #1
   13e6c:	beq	13d94 <__mempcpy_chk@plt+0x2d58>
   13e70:	ldr	r1, [fp, #-48]	; 0xffffffd0
   13e74:	tst	r1, #1
   13e78:	beq	13e98 <__mempcpy_chk@plt+0x2e5c>
   13e7c:	cmp	r9, r5
   13e80:	mov	r2, r0
   13e84:	movcc	r1, #92	; 0x5c
   13e88:	strbcc	r1, [ip, r9]
   13e8c:	add	r9, r9, #1
   13e90:	mov	r1, #0
   13e94:	b	13ea0 <__mempcpy_chk@plt+0x2e64>
   13e98:	mov	r1, #0
   13e9c:	mov	r2, r0
   13ea0:	str	r1, [fp, #-48]	; 0xffffffd0
   13ea4:	mov	r0, r2
   13ea8:	and	r1, r2, #1
   13eac:	ldr	r2, [fp, #-56]	; 0xffffffc8
   13eb0:	add	r3, sl, #1
   13eb4:	cmp	r2, r3
   13eb8:	bls	13f18 <__mempcpy_chk@plt+0x2edc>
   13ebc:	mov	r2, r5
   13ec0:	ldr	r5, [fp, #-52]	; 0xffffffcc
   13ec4:	cmp	r1, #0
   13ec8:	movwne	r1, #1
   13ecc:	mvn	r5, r5
   13ed0:	orr	r5, r5, r1
   13ed4:	tst	r5, #1
   13ed8:	bne	13e48 <__mempcpy_chk@plt+0x2e0c>
   13edc:	cmp	r9, r2
   13ee0:	movcc	r5, r4
   13ee4:	movcc	r4, #39	; 0x27
   13ee8:	strbcc	r4, [ip, r9]
   13eec:	movcc	r4, r5
   13ef0:	add	r5, r9, #1
   13ef4:	add	r9, r9, #2
   13ef8:	cmp	r5, r2
   13efc:	movcc	r1, r4
   13f00:	movcc	r4, #39	; 0x27
   13f04:	strbcc	r4, [ip, r5]
   13f08:	movcc	r4, r1
   13f0c:	mov	r1, #0
   13f10:	str	r1, [fp, #-52]	; 0xffffffcc
   13f14:	b	13e48 <__mempcpy_chk@plt+0x2e0c>
   13f18:	cmp	r1, #0
   13f1c:	movwne	r1, #1
   13f20:	str	r1, [fp, #-56]	; 0xffffffc8
   13f24:	ldr	r0, [fp, #-56]	; 0xffffffc8
   13f28:	cmp	r0, #0
   13f2c:	beq	13954 <__mempcpy_chk@plt+0x2918>
   13f30:	b	13988 <__mempcpy_chk@plt+0x294c>
   13f34:	mov	r8, #0
   13f38:	mov	r4, r1
   13f3c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   13f40:	tst	r0, #1
   13f44:	beq	135c0 <__mempcpy_chk@plt+0x2584>
   13f48:	b	13874 <__mempcpy_chk@plt+0x2838>
   13f4c:	mov	r7, sl
   13f50:	b	13f58 <__mempcpy_chk@plt+0x2f1c>
   13f54:	mvn	r7, #0
   13f58:	ldr	r1, [fp, #-64]	; 0xffffffc0
   13f5c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   13f60:	ldr	r2, [sp, #88]	; 0x58
   13f64:	eor	r0, r1, #2
   13f68:	orr	r0, r0, r9
   13f6c:	clz	r0, r0
   13f70:	lsr	r0, r0, #5
   13f74:	tst	r3, r0
   13f78:	bne	13ff0 <__mempcpy_chk@plt+0x2fb4>
   13f7c:	subs	r0, r1, #2
   13f80:	movwne	r0, #1
   13f84:	orr	r0, r3, r0
   13f88:	tst	r0, #1
   13f8c:	ldreq	r0, [sp, #60]	; 0x3c
   13f90:	eoreq	r0, r0, #1
   13f94:	tsteq	r0, #1
   13f98:	bne	140cc <__mempcpy_chk@plt+0x3090>
   13f9c:	tst	r4, #1
   13fa0:	bne	14090 <__mempcpy_chk@plt+0x3054>
   13fa4:	ldr	r6, [sp, #56]	; 0x38
   13fa8:	mov	r8, #0
   13fac:	cmp	r6, #0
   13fb0:	beq	140c8 <__mempcpy_chk@plt+0x308c>
   13fb4:	mov	r1, #0
   13fb8:	mov	r4, #2
   13fbc:	cmp	r5, #0
   13fc0:	mov	r0, r2
   13fc4:	mov	r3, #0
   13fc8:	str	r1, [sp, #84]	; 0x54
   13fcc:	beq	12e14 <__mempcpy_chk@plt+0x1dd8>
   13fd0:	b	140cc <__mempcpy_chk@plt+0x3090>
   13fd4:	movw	r0, #28070	; 0x6da6
   13fd8:	movt	r0, #1
   13fdc:	str	r0, [sp, #76]	; 0x4c
   13fe0:	mov	r9, #0
   13fe4:	tst	r8, #1
   13fe8:	beq	130ac <__mempcpy_chk@plt+0x2070>
   13fec:	b	131ec <__mempcpy_chk@plt+0x21b0>
   13ff0:	ldr	r1, [sp, #88]	; 0x58
   13ff4:	mov	r0, #2
   13ff8:	tst	r1, #1
   13ffc:	movwne	r0, #4
   14000:	ldr	r2, [fp, #-64]	; 0xffffffc0
   14004:	ldr	r1, [fp, #12]
   14008:	cmp	r2, #2
   1400c:	moveq	r2, r0
   14010:	b	14048 <__mempcpy_chk@plt+0x300c>
   14014:	ldr	ip, [fp, #-84]	; 0xffffffac
   14018:	ldr	lr, [fp, #-80]	; 0xffffffb0
   1401c:	ldr	r1, [fp, #12]
   14020:	ldr	r2, [fp, #-64]	; 0xffffffc0
   14024:	b	14048 <__mempcpy_chk@plt+0x300c>
   14028:	ldr	r1, [sp, #88]	; 0x58
   1402c:	ldr	lr, [fp, #-80]	; 0xffffffb0
   14030:	ldr	r5, [sp, #28]
   14034:	mov	r0, #2
   14038:	tst	r1, #1
   1403c:	ldr	r1, [fp, #12]
   14040:	movwne	r0, #4
   14044:	mov	r2, r0
   14048:	mov	r0, #0
   1404c:	bic	r1, r1, #2
   14050:	str	r2, [sp]
   14054:	mov	r2, lr
   14058:	str	r0, [sp, #8]
   1405c:	ldr	r0, [sp, #72]	; 0x48
   14060:	str	r1, [sp, #4]
   14064:	mov	r1, r5
   14068:	str	r0, [sp, #12]
   1406c:	ldr	r0, [sp, #76]	; 0x4c
   14070:	str	r0, [sp, #16]
   14074:	mov	r0, ip
   14078:	mov	r3, r7
   1407c:	bl	12d88 <__mempcpy_chk@plt+0x1d4c>
   14080:	mov	r9, r0
   14084:	mov	r0, r9
   14088:	sub	sp, fp, #28
   1408c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14090:	mov	r0, #5
   14094:	ldr	r1, [sp, #56]	; 0x38
   14098:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1409c:	str	r0, [sp]
   140a0:	ldr	r0, [fp, #12]
   140a4:	str	r0, [sp, #4]
   140a8:	ldr	r0, [fp, #16]
   140ac:	str	r0, [sp, #8]
   140b0:	ldr	r0, [sp, #72]	; 0x48
   140b4:	str	r0, [sp, #12]
   140b8:	ldr	r0, [sp, #76]	; 0x4c
   140bc:	str	r0, [sp, #16]
   140c0:	ldr	r0, [fp, #-84]	; 0xffffffac
   140c4:	b	14078 <__mempcpy_chk@plt+0x303c>
   140c8:	mov	r3, #0
   140cc:	ldr	r1, [fp, #-88]	; 0xffffffa8
   140d0:	cmp	r1, #0
   140d4:	beq	14110 <__mempcpy_chk@plt+0x30d4>
   140d8:	ldr	r2, [fp, #-84]	; 0xffffffac
   140dc:	tst	r3, #1
   140e0:	bne	14114 <__mempcpy_chk@plt+0x30d8>
   140e4:	ldrb	r0, [r1]
   140e8:	cmp	r0, #0
   140ec:	beq	14114 <__mempcpy_chk@plt+0x30d8>
   140f0:	add	r1, r1, #1
   140f4:	cmp	r9, r5
   140f8:	strbcc	r0, [r2, r9]
   140fc:	add	r9, r9, #1
   14100:	ldrb	r0, [r1], #1
   14104:	cmp	r0, #0
   14108:	bne	140f4 <__mempcpy_chk@plt+0x30b8>
   1410c:	b	14114 <__mempcpy_chk@plt+0x30d8>
   14110:	ldr	r2, [fp, #-84]	; 0xffffffac
   14114:	cmp	r9, r5
   14118:	movcc	r0, #0
   1411c:	strbcc	r0, [r2, r9]
   14120:	mov	r0, r9
   14124:	sub	sp, fp, #28
   14128:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1412c:	mov	r0, #4
   14130:	b	14000 <__mempcpy_chk@plt+0x2fc4>
   14134:	bl	11030 <abort@plt>
   14138:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1413c:	add	fp, sp, #28
   14140:	sub	sp, sp, #28
   14144:	movw	r5, #33120	; 0x8160
   14148:	cmp	r2, #0
   1414c:	mov	r4, r1
   14150:	mov	r7, r0
   14154:	str	r0, [sp, #20]
   14158:	movt	r5, #2
   1415c:	movne	r5, r2
   14160:	bl	10f64 <__errno_location@plt>
   14164:	mov	sl, r0
   14168:	ldr	r2, [r5, #40]	; 0x28
   1416c:	ldr	r3, [r5, #44]	; 0x2c
   14170:	ldm	r5, {r0, r1}
   14174:	orr	r8, r1, #1
   14178:	add	r9, r5, #8
   1417c:	mov	r1, #0
   14180:	ldr	r6, [sl]
   14184:	stm	sp, {r0, r8, r9}
   14188:	mov	r0, #0
   1418c:	str	r2, [sp, #12]
   14190:	str	r3, [sp, #16]
   14194:	mov	r2, r7
   14198:	mov	r3, r4
   1419c:	str	r6, [sp, #24]
   141a0:	mov	r6, r4
   141a4:	bl	12d88 <__mempcpy_chk@plt+0x1d4c>
   141a8:	add	r7, r0, #1
   141ac:	mov	r0, r7
   141b0:	bl	15604 <__mempcpy_chk@plt+0x45c8>
   141b4:	mov	r4, r0
   141b8:	ldr	r0, [r5]
   141bc:	ldr	r2, [r5, #44]	; 0x2c
   141c0:	ldr	r1, [r5, #40]	; 0x28
   141c4:	mov	r3, r6
   141c8:	stm	sp, {r0, r8, r9}
   141cc:	str	r2, [sp, #16]
   141d0:	ldr	r2, [sp, #20]
   141d4:	str	r1, [sp, #12]
   141d8:	mov	r0, r4
   141dc:	mov	r1, r7
   141e0:	bl	12d88 <__mempcpy_chk@plt+0x1d4c>
   141e4:	ldr	r0, [sp, #24]
   141e8:	str	r0, [sl]
   141ec:	mov	r0, r4
   141f0:	sub	sp, fp, #28
   141f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   141f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   141fc:	add	fp, sp, #28
   14200:	sub	sp, sp, #36	; 0x24
   14204:	movw	r8, #33120	; 0x8160
   14208:	cmp	r3, #0
   1420c:	mov	r4, r2
   14210:	str	r2, [sp, #24]
   14214:	mov	r5, r1
   14218:	mov	r6, r0
   1421c:	str	r0, [sp, #20]
   14220:	movt	r8, #2
   14224:	movne	r8, r3
   14228:	bl	10f64 <__errno_location@plt>
   1422c:	str	r0, [sp, #28]
   14230:	ldr	r1, [r8, #40]	; 0x28
   14234:	ldr	r2, [r8, #44]	; 0x2c
   14238:	ldr	r7, [r0]
   1423c:	cmp	r4, #0
   14240:	add	sl, r8, #8
   14244:	mov	r0, #0
   14248:	ldm	r8, {r3, r9}
   1424c:	orreq	r9, r9, #1
   14250:	stm	sp, {r3, r9, sl}
   14254:	str	r1, [sp, #12]
   14258:	str	r2, [sp, #16]
   1425c:	mov	r1, #0
   14260:	mov	r2, r6
   14264:	mov	r3, r5
   14268:	str	r7, [sp, #32]
   1426c:	mov	r7, r5
   14270:	bl	12d88 <__mempcpy_chk@plt+0x1d4c>
   14274:	add	r4, r0, #1
   14278:	mov	r5, r0
   1427c:	mov	r0, r4
   14280:	bl	15604 <__mempcpy_chk@plt+0x45c8>
   14284:	mov	r6, r0
   14288:	ldr	r0, [r8]
   1428c:	ldr	r2, [r8, #44]	; 0x2c
   14290:	ldr	r1, [r8, #40]	; 0x28
   14294:	mov	r3, r7
   14298:	stm	sp, {r0, r9, sl}
   1429c:	str	r2, [sp, #16]
   142a0:	ldr	r2, [sp, #20]
   142a4:	str	r1, [sp, #12]
   142a8:	mov	r0, r6
   142ac:	mov	r1, r4
   142b0:	bl	12d88 <__mempcpy_chk@plt+0x1d4c>
   142b4:	ldr	r0, [sp, #24]
   142b8:	ldr	r1, [sp, #32]
   142bc:	ldr	r2, [sp, #28]
   142c0:	cmp	r0, #0
   142c4:	str	r1, [r2]
   142c8:	strne	r5, [r0]
   142cc:	mov	r0, r6
   142d0:	sub	sp, fp, #28
   142d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   142d8:	push	{r4, r5, r6, r7, fp, lr}
   142dc:	add	fp, sp, #16
   142e0:	movw	r4, #33064	; 0x8128
   142e4:	movt	r4, #2
   142e8:	ldrd	r6, [r4]
   142ec:	cmp	r7, #2
   142f0:	blt	1431c <__mempcpy_chk@plt+0x32e0>
   142f4:	add	r5, r6, #12
   142f8:	mov	r7, #0
   142fc:	ldr	r0, [r5, r7, lsl #3]
   14300:	bl	12b24 <__mempcpy_chk@plt+0x1ae8>
   14304:	ldr	r1, [r4, #4]
   14308:	add	r2, r7, #2
   1430c:	add	r0, r7, #1
   14310:	mov	r7, r0
   14314:	cmp	r2, r1
   14318:	blt	142fc <__mempcpy_chk@plt+0x32c0>
   1431c:	ldr	r0, [r6, #4]
   14320:	movw	r5, #33168	; 0x8190
   14324:	movt	r5, #2
   14328:	cmp	r0, r5
   1432c:	beq	14340 <__mempcpy_chk@plt+0x3304>
   14330:	bl	12b24 <__mempcpy_chk@plt+0x1ae8>
   14334:	mov	r0, #256	; 0x100
   14338:	str	r0, [r4, #8]
   1433c:	str	r5, [r4, #12]
   14340:	add	r5, r4, #8
   14344:	cmp	r6, r5
   14348:	beq	14358 <__mempcpy_chk@plt+0x331c>
   1434c:	mov	r0, r6
   14350:	bl	12b24 <__mempcpy_chk@plt+0x1ae8>
   14354:	str	r5, [r4]
   14358:	mov	r0, #1
   1435c:	str	r0, [r4, #4]
   14360:	pop	{r4, r5, r6, r7, fp, pc}
   14364:	movw	r3, #33120	; 0x8160
   14368:	mvn	r2, #0
   1436c:	movt	r3, #2
   14370:	b	14374 <__mempcpy_chk@plt+0x3338>
   14374:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14378:	add	fp, sp, #28
   1437c:	sub	sp, sp, #44	; 0x2c
   14380:	mov	r7, r3
   14384:	str	r2, [sp, #36]	; 0x24
   14388:	str	r1, [sp, #32]
   1438c:	mov	r5, r0
   14390:	bl	10f64 <__errno_location@plt>
   14394:	cmp	r5, #0
   14398:	bmi	14500 <__mempcpy_chk@plt+0x34c4>
   1439c:	cmn	r5, #-2147483647	; 0x80000001
   143a0:	beq	14500 <__mempcpy_chk@plt+0x34c4>
   143a4:	movw	r8, #33064	; 0x8128
   143a8:	mov	r4, r0
   143ac:	ldr	r0, [r0]
   143b0:	movt	r8, #2
   143b4:	str	r4, [sp, #28]
   143b8:	ldr	r1, [r8, #4]
   143bc:	ldr	r6, [r8]
   143c0:	str	r0, [sp, #24]
   143c4:	cmp	r1, r5
   143c8:	ble	143d4 <__mempcpy_chk@plt+0x3398>
   143cc:	mov	sl, r6
   143d0:	b	1443c <__mempcpy_chk@plt+0x3400>
   143d4:	mov	r0, #8
   143d8:	add	r9, r8, #8
   143dc:	str	r1, [fp, #-32]	; 0xffffffe0
   143e0:	sub	r1, r5, r1
   143e4:	mvn	r3, #-2147483648	; 0x80000000
   143e8:	str	r0, [sp]
   143ec:	subs	r0, r6, r9
   143f0:	add	r2, r1, #1
   143f4:	sub	r1, fp, #32
   143f8:	movne	r0, r6
   143fc:	bl	15804 <__mempcpy_chk@plt+0x47c8>
   14400:	mov	sl, r0
   14404:	cmp	r6, r9
   14408:	str	r0, [r8]
   1440c:	bne	14418 <__mempcpy_chk@plt+0x33dc>
   14410:	ldrd	r0, [r8, #8]
   14414:	stm	sl, {r0, r1}
   14418:	ldr	r1, [r8, #4]
   1441c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14420:	add	r0, sl, r1, lsl #3
   14424:	sub	r1, r2, r1
   14428:	lsl	r2, r1, #3
   1442c:	mov	r1, #0
   14430:	bl	10f7c <memset@plt>
   14434:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14438:	str	r0, [r8, #4]
   1443c:	mov	r9, sl
   14440:	ldm	r7, {r0, r1}
   14444:	orr	r8, r1, #1
   14448:	add	r1, r7, #8
   1444c:	ldr	r2, [r7, #40]	; 0x28
   14450:	ldr	r3, [r7, #44]	; 0x2c
   14454:	ldr	r6, [r9, r5, lsl #3]!
   14458:	str	r1, [sp, #20]
   1445c:	ldr	r4, [r9, #4]!
   14460:	stm	sp, {r0, r8}
   14464:	add	r0, sp, #8
   14468:	stm	r0, {r1, r2, r3}
   1446c:	ldr	r2, [sp, #32]
   14470:	ldr	r3, [sp, #36]	; 0x24
   14474:	mov	r1, r6
   14478:	mov	r0, r4
   1447c:	bl	12d88 <__mempcpy_chk@plt+0x1d4c>
   14480:	cmp	r6, r0
   14484:	bhi	144e8 <__mempcpy_chk@plt+0x34ac>
   14488:	add	r6, r0, #1
   1448c:	movw	r0, #33168	; 0x8190
   14490:	movt	r0, #2
   14494:	str	r6, [sl, r5, lsl #3]
   14498:	cmp	r4, r0
   1449c:	beq	144a8 <__mempcpy_chk@plt+0x346c>
   144a0:	mov	r0, r4
   144a4:	bl	12b24 <__mempcpy_chk@plt+0x1ae8>
   144a8:	mov	r0, r6
   144ac:	bl	15604 <__mempcpy_chk@plt+0x45c8>
   144b0:	str	r0, [r9]
   144b4:	mov	r4, r0
   144b8:	add	r3, sp, #8
   144bc:	ldr	r0, [r7]
   144c0:	ldr	r1, [r7, #40]	; 0x28
   144c4:	ldr	r2, [r7, #44]	; 0x2c
   144c8:	stm	sp, {r0, r8}
   144cc:	ldr	r0, [sp, #20]
   144d0:	stm	r3, {r0, r1, r2}
   144d4:	ldr	r2, [sp, #32]
   144d8:	ldr	r3, [sp, #36]	; 0x24
   144dc:	mov	r0, r4
   144e0:	mov	r1, r6
   144e4:	bl	12d88 <__mempcpy_chk@plt+0x1d4c>
   144e8:	ldr	r1, [sp, #24]
   144ec:	ldr	r0, [sp, #28]
   144f0:	str	r1, [r0]
   144f4:	mov	r0, r4
   144f8:	sub	sp, fp, #28
   144fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14500:	bl	11030 <abort@plt>
   14504:	movw	r3, #33120	; 0x8160
   14508:	movt	r3, #2
   1450c:	b	14374 <__mempcpy_chk@plt+0x3338>
   14510:	movw	r3, #33120	; 0x8160
   14514:	mov	r1, r0
   14518:	mov	r0, #0
   1451c:	mvn	r2, #0
   14520:	movt	r3, #2
   14524:	b	14374 <__mempcpy_chk@plt+0x3338>
   14528:	movw	r3, #33120	; 0x8160
   1452c:	mov	r2, r1
   14530:	mov	r1, r0
   14534:	mov	r0, #0
   14538:	movt	r3, #2
   1453c:	b	14374 <__mempcpy_chk@plt+0x3338>
   14540:	push	{fp, lr}
   14544:	mov	fp, sp
   14548:	sub	sp, sp, #48	; 0x30
   1454c:	vmov.i32	q8, #0	; 0x00000000
   14550:	mov	ip, #32
   14554:	mov	r3, sp
   14558:	mov	lr, r2
   1455c:	cmp	r1, #10
   14560:	add	r2, r3, #16
   14564:	vst1.64	{d16-d17}, [r3], ip
   14568:	vst1.64	{d16-d17}, [r2]
   1456c:	vst1.64	{d16-d17}, [r3]
   14570:	beq	14590 <__mempcpy_chk@plt+0x3554>
   14574:	str	r1, [sp]
   14578:	mov	r3, sp
   1457c:	mov	r1, lr
   14580:	mvn	r2, #0
   14584:	bl	14374 <__mempcpy_chk@plt+0x3338>
   14588:	mov	sp, fp
   1458c:	pop	{fp, pc}
   14590:	bl	11030 <abort@plt>
   14594:	push	{r4, sl, fp, lr}
   14598:	add	fp, sp, #8
   1459c:	sub	sp, sp, #48	; 0x30
   145a0:	vmov.i32	q8, #0	; 0x00000000
   145a4:	mov	ip, r3
   145a8:	mov	r3, sp
   145ac:	mov	lr, #32
   145b0:	cmp	r1, #10
   145b4:	add	r4, r3, #16
   145b8:	vst1.64	{d16-d17}, [r3], lr
   145bc:	vst1.64	{d16-d17}, [r4]
   145c0:	vst1.64	{d16-d17}, [r3]
   145c4:	beq	145e4 <__mempcpy_chk@plt+0x35a8>
   145c8:	str	r1, [sp]
   145cc:	mov	r1, r2
   145d0:	mov	r3, sp
   145d4:	mov	r2, ip
   145d8:	bl	14374 <__mempcpy_chk@plt+0x3338>
   145dc:	sub	sp, fp, #8
   145e0:	pop	{r4, sl, fp, pc}
   145e4:	bl	11030 <abort@plt>
   145e8:	push	{fp, lr}
   145ec:	mov	fp, sp
   145f0:	sub	sp, sp, #48	; 0x30
   145f4:	vmov.i32	q8, #0	; 0x00000000
   145f8:	mov	r3, sp
   145fc:	mov	ip, #32
   14600:	cmp	r0, #10
   14604:	add	r2, r3, #16
   14608:	vst1.64	{d16-d17}, [r3], ip
   1460c:	vst1.64	{d16-d17}, [r2]
   14610:	vst1.64	{d16-d17}, [r3]
   14614:	beq	14634 <__mempcpy_chk@plt+0x35f8>
   14618:	str	r0, [sp]
   1461c:	mov	r3, sp
   14620:	mov	r0, #0
   14624:	mvn	r2, #0
   14628:	bl	14374 <__mempcpy_chk@plt+0x3338>
   1462c:	mov	sp, fp
   14630:	pop	{fp, pc}
   14634:	bl	11030 <abort@plt>
   14638:	push	{fp, lr}
   1463c:	mov	fp, sp
   14640:	sub	sp, sp, #48	; 0x30
   14644:	vmov.i32	q8, #0	; 0x00000000
   14648:	mov	r3, sp
   1464c:	mov	ip, #32
   14650:	cmp	r0, #10
   14654:	add	lr, r3, #16
   14658:	vst1.64	{d16-d17}, [r3], ip
   1465c:	vst1.64	{d16-d17}, [lr]
   14660:	vst1.64	{d16-d17}, [r3]
   14664:	beq	14680 <__mempcpy_chk@plt+0x3644>
   14668:	str	r0, [sp]
   1466c:	mov	r3, sp
   14670:	mov	r0, #0
   14674:	bl	14374 <__mempcpy_chk@plt+0x3338>
   14678:	mov	sp, fp
   1467c:	pop	{fp, pc}
   14680:	bl	11030 <abort@plt>
   14684:	push	{r4, sl, fp, lr}
   14688:	add	fp, sp, #8
   1468c:	sub	sp, sp, #48	; 0x30
   14690:	mov	lr, r0
   14694:	movw	r0, #33120	; 0x8160
   14698:	mov	ip, r1
   1469c:	mov	r1, #32
   146a0:	mov	r4, #1
   146a4:	movt	r0, #2
   146a8:	add	r3, r0, #16
   146ac:	vld1.64	{d16-d17}, [r0], r1
   146b0:	vld1.64	{d20-d21}, [r0]
   146b4:	vld1.64	{d18-d19}, [r3]
   146b8:	mov	r3, sp
   146bc:	add	r0, r3, #32
   146c0:	add	r1, r3, #16
   146c4:	vst1.64	{d20-d21}, [r0]
   146c8:	mov	r0, #28
   146cc:	vst1.64	{d18-d19}, [r1]
   146d0:	mov	r1, r3
   146d4:	and	r0, r0, r2, lsr #3
   146d8:	and	r2, r2, #31
   146dc:	vst1.64	{d16-d17}, [r1], r0
   146e0:	ldr	r0, [r1, #8]
   146e4:	bic	r4, r4, r0, lsr r2
   146e8:	eor	r0, r0, r4, lsl r2
   146ec:	mov	r2, ip
   146f0:	str	r0, [r1, #8]
   146f4:	mov	r0, #0
   146f8:	mov	r1, lr
   146fc:	bl	14374 <__mempcpy_chk@plt+0x3338>
   14700:	sub	sp, fp, #8
   14704:	pop	{r4, sl, fp, pc}
   14708:	push	{fp, lr}
   1470c:	mov	fp, sp
   14710:	sub	sp, sp, #48	; 0x30
   14714:	mov	ip, r0
   14718:	movw	r0, #33120	; 0x8160
   1471c:	mov	r2, #32
   14720:	movt	r0, #2
   14724:	add	r3, r0, #16
   14728:	vld1.64	{d16-d17}, [r0], r2
   1472c:	vld1.64	{d20-d21}, [r0]
   14730:	vld1.64	{d18-d19}, [r3]
   14734:	mov	r3, sp
   14738:	add	r0, r3, #32
   1473c:	add	r2, r3, #16
   14740:	vst1.64	{d20-d21}, [r0]
   14744:	mov	r0, #28
   14748:	vst1.64	{d18-d19}, [r2]
   1474c:	mov	r2, r3
   14750:	and	r0, r0, r1, lsr #3
   14754:	and	r1, r1, #31
   14758:	vst1.64	{d16-d17}, [r2], r0
   1475c:	mov	r0, #1
   14760:	ldr	lr, [r2, #8]
   14764:	bic	r0, r0, lr, lsr r1
   14768:	eor	r0, lr, r0, lsl r1
   1476c:	mov	r1, ip
   14770:	str	r0, [r2, #8]
   14774:	mov	r0, #0
   14778:	mvn	r2, #0
   1477c:	bl	14374 <__mempcpy_chk@plt+0x3338>
   14780:	mov	sp, fp
   14784:	pop	{fp, pc}
   14788:	push	{fp, lr}
   1478c:	mov	fp, sp
   14790:	sub	sp, sp, #48	; 0x30
   14794:	mov	r1, r0
   14798:	movw	r0, #33120	; 0x8160
   1479c:	mov	r3, #32
   147a0:	movt	r0, #2
   147a4:	add	r2, r0, #16
   147a8:	vld1.64	{d16-d17}, [r0], r3
   147ac:	mov	r3, sp
   147b0:	vld1.64	{d18-d19}, [r2]
   147b4:	vld1.64	{d20-d21}, [r0]
   147b8:	add	r2, r3, #16
   147bc:	add	r0, r3, #32
   147c0:	vst1.64	{d18-d19}, [r2]
   147c4:	vst1.64	{d20-d21}, [r0]
   147c8:	mov	r0, #12
   147cc:	mov	r2, r3
   147d0:	vst1.64	{d16-d17}, [r2], r0
   147d4:	ldr	r0, [r2]
   147d8:	orr	r0, r0, #67108864	; 0x4000000
   147dc:	str	r0, [r2]
   147e0:	mov	r0, #0
   147e4:	mvn	r2, #0
   147e8:	bl	14374 <__mempcpy_chk@plt+0x3338>
   147ec:	mov	sp, fp
   147f0:	pop	{fp, pc}
   147f4:	push	{fp, lr}
   147f8:	mov	fp, sp
   147fc:	sub	sp, sp, #48	; 0x30
   14800:	mov	ip, r1
   14804:	mov	r1, r0
   14808:	movw	r0, #33120	; 0x8160
   1480c:	mov	r2, #32
   14810:	movt	r0, #2
   14814:	add	r3, r0, #16
   14818:	vld1.64	{d16-d17}, [r0], r2
   1481c:	vld1.64	{d18-d19}, [r3]
   14820:	vld1.64	{d20-d21}, [r0]
   14824:	mov	r3, sp
   14828:	add	r2, r3, #16
   1482c:	add	r0, r3, #32
   14830:	vst1.64	{d18-d19}, [r2]
   14834:	vst1.64	{d20-d21}, [r0]
   14838:	mov	r0, #12
   1483c:	mov	r2, r3
   14840:	vst1.64	{d16-d17}, [r2], r0
   14844:	ldr	r0, [r2]
   14848:	orr	r0, r0, #67108864	; 0x4000000
   1484c:	str	r0, [r2]
   14850:	mov	r0, #0
   14854:	mov	r2, ip
   14858:	bl	14374 <__mempcpy_chk@plt+0x3338>
   1485c:	mov	sp, fp
   14860:	pop	{fp, pc}
   14864:	push	{r4, sl, fp, lr}
   14868:	add	fp, sp, #8
   1486c:	sub	sp, sp, #96	; 0x60
   14870:	vmov.i32	q8, #0	; 0x00000000
   14874:	mov	ip, r2
   14878:	mov	r2, sp
   1487c:	mov	r4, #28
   14880:	cmp	r1, #10
   14884:	mov	r3, r2
   14888:	add	lr, r2, #16
   1488c:	vst1.64	{d16-d17}, [r3], r4
   14890:	vst1.64	{d16-d17}, [lr]
   14894:	vst1.32	{d16-d17}, [r3]
   14898:	beq	148e8 <__mempcpy_chk@plt+0x38ac>
   1489c:	vld1.64	{d16-d17}, [r2], r4
   148a0:	vld1.64	{d18-d19}, [lr]
   148a4:	add	r3, sp, #48	; 0x30
   148a8:	vld1.32	{d20-d21}, [r2]
   148ac:	add	r2, r3, #20
   148b0:	add	r4, r3, #4
   148b4:	vst1.32	{d18-d19}, [r2]
   148b8:	add	r2, r3, #32
   148bc:	vst1.32	{d16-d17}, [r4]
   148c0:	vst1.32	{d20-d21}, [r2]
   148c4:	str	r1, [sp, #48]	; 0x30
   148c8:	mvn	r2, #0
   148cc:	ldr	r1, [sp, #60]	; 0x3c
   148d0:	orr	r1, r1, #67108864	; 0x4000000
   148d4:	str	r1, [sp, #60]	; 0x3c
   148d8:	mov	r1, ip
   148dc:	bl	14374 <__mempcpy_chk@plt+0x3338>
   148e0:	sub	sp, fp, #8
   148e4:	pop	{r4, sl, fp, pc}
   148e8:	bl	11030 <abort@plt>
   148ec:	push	{r4, r5, r6, sl, fp, lr}
   148f0:	add	fp, sp, #16
   148f4:	sub	sp, sp, #48	; 0x30
   148f8:	mov	ip, r3
   148fc:	movw	r3, #33120	; 0x8160
   14900:	mov	r6, #32
   14904:	cmp	r1, #0
   14908:	mov	r4, sp
   1490c:	movt	r3, #2
   14910:	cmpne	r2, #0
   14914:	add	r5, r4, #16
   14918:	add	lr, r3, #16
   1491c:	vld1.64	{d16-d17}, [r3], r6
   14920:	vld1.64	{d18-d19}, [lr]
   14924:	vld1.64	{d20-d21}, [r3]
   14928:	mov	r3, #10
   1492c:	vst1.64	{d16-d17}, [r4], r6
   14930:	vst1.64	{d18-d19}, [r5]
   14934:	vst1.64	{d20-d21}, [r4]
   14938:	str	r3, [sp]
   1493c:	bne	14944 <__mempcpy_chk@plt+0x3908>
   14940:	bl	11030 <abort@plt>
   14944:	str	r2, [sp, #44]	; 0x2c
   14948:	str	r1, [sp, #40]	; 0x28
   1494c:	mov	r3, sp
   14950:	mov	r1, ip
   14954:	mvn	r2, #0
   14958:	bl	14374 <__mempcpy_chk@plt+0x3338>
   1495c:	sub	sp, fp, #16
   14960:	pop	{r4, r5, r6, sl, fp, pc}
   14964:	push	{r4, r5, r6, sl, fp, lr}
   14968:	add	fp, sp, #16
   1496c:	sub	sp, sp, #48	; 0x30
   14970:	mov	lr, r3
   14974:	movw	r3, #33120	; 0x8160
   14978:	mov	r6, #32
   1497c:	cmp	r1, #0
   14980:	mov	r4, sp
   14984:	movt	r3, #2
   14988:	cmpne	r2, #0
   1498c:	add	r5, r4, #16
   14990:	add	ip, r3, #16
   14994:	vld1.64	{d16-d17}, [r3], r6
   14998:	vld1.64	{d18-d19}, [ip]
   1499c:	vld1.64	{d20-d21}, [r3]
   149a0:	mov	r3, #10
   149a4:	vst1.64	{d16-d17}, [r4], r6
   149a8:	vst1.64	{d18-d19}, [r5]
   149ac:	vst1.64	{d20-d21}, [r4]
   149b0:	str	r3, [sp]
   149b4:	bne	149bc <__mempcpy_chk@plt+0x3980>
   149b8:	bl	11030 <abort@plt>
   149bc:	ldr	ip, [fp, #8]
   149c0:	str	r2, [sp, #44]	; 0x2c
   149c4:	str	r1, [sp, #40]	; 0x28
   149c8:	mov	r3, sp
   149cc:	mov	r1, lr
   149d0:	mov	r2, ip
   149d4:	bl	14374 <__mempcpy_chk@plt+0x3338>
   149d8:	sub	sp, fp, #16
   149dc:	pop	{r4, r5, r6, sl, fp, pc}
   149e0:	push	{r4, sl, fp, lr}
   149e4:	add	fp, sp, #8
   149e8:	sub	sp, sp, #48	; 0x30
   149ec:	movw	r3, #33120	; 0x8160
   149f0:	mov	lr, #32
   149f4:	mov	ip, r2
   149f8:	cmp	r0, #0
   149fc:	movt	r3, #2
   14a00:	cmpne	r1, #0
   14a04:	add	r2, r3, #16
   14a08:	vld1.64	{d16-d17}, [r3], lr
   14a0c:	vld1.64	{d20-d21}, [r3]
   14a10:	vld1.64	{d18-d19}, [r2]
   14a14:	mov	r2, sp
   14a18:	add	r4, r2, #16
   14a1c:	vst1.64	{d16-d17}, [r2], lr
   14a20:	vst1.64	{d20-d21}, [r2]
   14a24:	mov	r2, #10
   14a28:	vst1.64	{d18-d19}, [r4]
   14a2c:	str	r2, [sp]
   14a30:	bne	14a38 <__mempcpy_chk@plt+0x39fc>
   14a34:	bl	11030 <abort@plt>
   14a38:	str	r1, [sp, #44]	; 0x2c
   14a3c:	str	r0, [sp, #40]	; 0x28
   14a40:	mov	r3, sp
   14a44:	mov	r0, #0
   14a48:	mov	r1, ip
   14a4c:	mvn	r2, #0
   14a50:	bl	14374 <__mempcpy_chk@plt+0x3338>
   14a54:	sub	sp, fp, #8
   14a58:	pop	{r4, sl, fp, pc}
   14a5c:	push	{r4, r5, fp, lr}
   14a60:	add	fp, sp, #8
   14a64:	sub	sp, sp, #48	; 0x30
   14a68:	mov	ip, r3
   14a6c:	movw	r3, #33120	; 0x8160
   14a70:	mov	r4, #32
   14a74:	mov	lr, r2
   14a78:	cmp	r0, #0
   14a7c:	movt	r3, #2
   14a80:	cmpne	r1, #0
   14a84:	add	r2, r3, #16
   14a88:	vld1.64	{d16-d17}, [r3], r4
   14a8c:	vld1.64	{d20-d21}, [r3]
   14a90:	vld1.64	{d18-d19}, [r2]
   14a94:	mov	r2, sp
   14a98:	add	r5, r2, #16
   14a9c:	vst1.64	{d16-d17}, [r2], r4
   14aa0:	vst1.64	{d20-d21}, [r2]
   14aa4:	mov	r2, #10
   14aa8:	vst1.64	{d18-d19}, [r5]
   14aac:	str	r2, [sp]
   14ab0:	bne	14ab8 <__mempcpy_chk@plt+0x3a7c>
   14ab4:	bl	11030 <abort@plt>
   14ab8:	str	r1, [sp, #44]	; 0x2c
   14abc:	str	r0, [sp, #40]	; 0x28
   14ac0:	mov	r3, sp
   14ac4:	mov	r0, #0
   14ac8:	mov	r1, lr
   14acc:	mov	r2, ip
   14ad0:	bl	14374 <__mempcpy_chk@plt+0x3338>
   14ad4:	sub	sp, fp, #8
   14ad8:	pop	{r4, r5, fp, pc}
   14adc:	movw	r3, #33016	; 0x80f8
   14ae0:	movt	r3, #2
   14ae4:	b	14374 <__mempcpy_chk@plt+0x3338>
   14ae8:	movw	r3, #33016	; 0x80f8
   14aec:	mov	r2, r1
   14af0:	mov	r1, r0
   14af4:	mov	r0, #0
   14af8:	movt	r3, #2
   14afc:	b	14374 <__mempcpy_chk@plt+0x3338>
   14b00:	movw	r3, #33016	; 0x80f8
   14b04:	mvn	r2, #0
   14b08:	movt	r3, #2
   14b0c:	b	14374 <__mempcpy_chk@plt+0x3338>
   14b10:	movw	r3, #33016	; 0x80f8
   14b14:	mov	r1, r0
   14b18:	mov	r0, #0
   14b1c:	mvn	r2, #0
   14b20:	movt	r3, #2
   14b24:	b	14374 <__mempcpy_chk@plt+0x3338>
   14b28:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14b2c:	add	fp, sp, #28
   14b30:	sub	sp, sp, #52	; 0x34
   14b34:	movw	r5, #33424	; 0x8290
   14b38:	mov	r7, r0
   14b3c:	mov	r4, r3
   14b40:	mov	sl, r2
   14b44:	mov	r9, r1
   14b48:	movt	r5, #2
   14b4c:	ldrb	r0, [r5]
   14b50:	cmp	r0, #0
   14b54:	bne	14bbc <__mempcpy_chk@plt+0x3b80>
   14b58:	bl	16158 <__mempcpy_chk@plt+0x511c>
   14b5c:	movw	r1, #28160	; 0x6e00
   14b60:	mov	r6, r0
   14b64:	movt	r1, #1
   14b68:	bl	10dfc <strcmp@plt>
   14b6c:	clz	r1, r0
   14b70:	cmp	r0, #0
   14b74:	lsr	r1, r1, #5
   14b78:	str	r1, [r5, #4]
   14b7c:	beq	14bb4 <__mempcpy_chk@plt+0x3b78>
   14b80:	movw	r1, #28160	; 0x6e00
   14b84:	mov	r0, r6
   14b88:	movt	r1, #1
   14b8c:	bl	10ef8 <iconv_open@plt>
   14b90:	cmn	r0, #1
   14b94:	str	r0, [r5, #8]
   14b98:	bne	14bb4 <__mempcpy_chk@plt+0x3b78>
   14b9c:	movw	r0, #28166	; 0x6e06
   14ba0:	movw	r1, #28160	; 0x6e00
   14ba4:	movt	r0, #1
   14ba8:	movt	r1, #1
   14bac:	bl	10ef8 <iconv_open@plt>
   14bb0:	str	r0, [r5, #8]
   14bb4:	mov	r0, #1
   14bb8:	strb	r0, [r5]
   14bbc:	ldr	r0, [r5, #4]
   14bc0:	cmp	r0, #0
   14bc4:	ldreq	r1, [r5, #8]
   14bc8:	cmneq	r1, #1
   14bcc:	beq	14bfc <__mempcpy_chk@plt+0x3bc0>
   14bd0:	cmp	r7, #127	; 0x7f
   14bd4:	bhi	14c08 <__mempcpy_chk@plt+0x3bcc>
   14bd8:	strb	r7, [fp, #-34]	; 0xffffffde
   14bdc:	mov	r1, #1
   14be0:	cmp	r0, #0
   14be4:	beq	14c30 <__mempcpy_chk@plt+0x3bf4>
   14be8:	sub	r0, fp, #34	; 0x22
   14bec:	mov	r2, r4
   14bf0:	blx	r9
   14bf4:	sub	sp, fp, #28
   14bf8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14bfc:	movw	r1, #28172	; 0x6e0c
   14c00:	movt	r1, #1
   14c04:	b	14cf8 <__mempcpy_chk@plt+0x3cbc>
   14c08:	sub	r0, fp, #34	; 0x22
   14c0c:	mov	r1, r7
   14c10:	mov	r2, #6
   14c14:	bl	14e38 <__mempcpy_chk@plt+0x3dfc>
   14c18:	cmp	r0, #0
   14c1c:	bmi	14cf0 <__mempcpy_chk@plt+0x3cb4>
   14c20:	mov	r1, r0
   14c24:	ldr	r0, [r5, #4]
   14c28:	cmp	r0, #0
   14c2c:	bne	14be8 <__mempcpy_chk@plt+0x3bac>
   14c30:	sub	r0, fp, #34	; 0x22
   14c34:	str	r1, [sp, #12]
   14c38:	add	r8, sp, #21
   14c3c:	add	r6, sp, #4
   14c40:	add	r1, sp, #16
   14c44:	add	r2, sp, #12
   14c48:	add	r3, sp, #8
   14c4c:	str	r0, [sp, #16]
   14c50:	mov	r0, #25
   14c54:	str	r8, [sp, #8]
   14c58:	str	r6, [sp]
   14c5c:	str	r0, [sp, #4]
   14c60:	ldr	r0, [r5, #8]
   14c64:	bl	10df0 <iconv@plt>
   14c68:	cmn	r0, #1
   14c6c:	beq	14cd8 <__mempcpy_chk@plt+0x3c9c>
   14c70:	ldr	r1, [sp, #12]
   14c74:	cmp	r1, #0
   14c78:	bne	14cd8 <__mempcpy_chk@plt+0x3c9c>
   14c7c:	cmp	r0, #0
   14c80:	beq	14c9c <__mempcpy_chk@plt+0x3c60>
   14c84:	ldr	r0, [sp, #8]
   14c88:	sub	r0, r0, r8
   14c8c:	cmp	r0, #1
   14c90:	ldrbeq	r0, [sp, #21]
   14c94:	cmpeq	r0, #63	; 0x3f
   14c98:	beq	14cd8 <__mempcpy_chk@plt+0x3c9c>
   14c9c:	ldr	r0, [r5, #8]
   14ca0:	add	r3, sp, #8
   14ca4:	mov	r1, #0
   14ca8:	mov	r2, #0
   14cac:	str	r6, [sp]
   14cb0:	bl	10df0 <iconv@plt>
   14cb4:	cmn	r0, #1
   14cb8:	beq	14cd8 <__mempcpy_chk@plt+0x3c9c>
   14cbc:	ldr	r0, [sp, #8]
   14cc0:	sub	r1, r0, r8
   14cc4:	mov	r0, r8
   14cc8:	mov	r2, r4
   14ccc:	blx	r9
   14cd0:	sub	sp, fp, #28
   14cd4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14cd8:	mov	r0, r7
   14cdc:	mov	r1, #0
   14ce0:	mov	r2, r4
   14ce4:	blx	sl
   14ce8:	sub	sp, fp, #28
   14cec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14cf0:	movw	r1, #28198	; 0x6e26
   14cf4:	movt	r1, #1
   14cf8:	mov	r0, r7
   14cfc:	mov	r2, r4
   14d00:	blx	sl
   14d04:	sub	sp, fp, #28
   14d08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14d0c:	push	{fp, lr}
   14d10:	mov	fp, sp
   14d14:	mov	r3, r2
   14d18:	mov	r2, r1
   14d1c:	mov	r1, #1
   14d20:	bl	10e98 <fwrite@plt>
   14d24:	mov	r0, #0
   14d28:	pop	{fp, pc}
   14d2c:	push	{fp, lr}
   14d30:	mov	fp, sp
   14d34:	mov	ip, r0
   14d38:	movw	r0, #19964	; 0x4dfc
   14d3c:	movw	r3, #19824	; 0x4d70
   14d40:	cmp	r2, #0
   14d44:	mov	lr, r1
   14d48:	movw	r1, #19724	; 0x4d0c
   14d4c:	movt	r0, #1
   14d50:	movt	r3, #1
   14d54:	movt	r1, #1
   14d58:	moveq	r3, r0
   14d5c:	mov	r0, lr
   14d60:	mov	r2, r3
   14d64:	mov	r3, ip
   14d68:	pop	{fp, lr}
   14d6c:	b	14b28 <__mempcpy_chk@plt+0x3aec>
   14d70:	push	{r4, r5, r6, sl, fp, lr}
   14d74:	add	fp, sp, #16
   14d78:	sub	sp, sp, #8
   14d7c:	mov	r4, r0
   14d80:	cmp	r1, #0
   14d84:	beq	14dc8 <__mempcpy_chk@plt+0x3d8c>
   14d88:	mov	r5, r1
   14d8c:	movw	r1, #28266	; 0x6e6a
   14d90:	mov	r0, #0
   14d94:	mov	r2, #5
   14d98:	movt	r1, #1
   14d9c:	bl	10e68 <dcgettext@plt>
   14da0:	mov	r6, r0
   14da4:	mov	r0, #0
   14da8:	mov	r1, r5
   14dac:	mov	r2, #5
   14db0:	bl	10e68 <dcgettext@plt>
   14db4:	str	r0, [sp]
   14db8:	mov	r0, #1
   14dbc:	mov	r1, #0
   14dc0:	mov	r2, r6
   14dc4:	b	14de8 <__mempcpy_chk@plt+0x3dac>
   14dc8:	movw	r1, #28221	; 0x6e3d
   14dcc:	mov	r0, #0
   14dd0:	mov	r2, #5
   14dd4:	movt	r1, #1
   14dd8:	bl	10e68 <dcgettext@plt>
   14ddc:	mov	r2, r0
   14de0:	mov	r0, #1
   14de4:	mov	r1, #0
   14de8:	mov	r3, r4
   14dec:	bl	10ed4 <error@plt>
   14df0:	mvn	r0, #0
   14df4:	sub	sp, fp, #16
   14df8:	pop	{r4, r5, r6, sl, fp, pc}
   14dfc:	push	{fp, lr}
   14e00:	mov	fp, sp
   14e04:	mov	r3, r0
   14e08:	movw	r0, #28315	; 0x6e9b
   14e0c:	mov	r1, r2
   14e10:	movw	r2, #28322	; 0x6ea2
   14e14:	movt	r0, #1
   14e18:	cmp	r3, #65536	; 0x10000
   14e1c:	movt	r2, #1
   14e20:	movcc	r2, r0
   14e24:	mov	r0, r1
   14e28:	mov	r1, #1
   14e2c:	bl	10fa0 <__fprintf_chk@plt>
   14e30:	mvn	r0, #0
   14e34:	pop	{fp, pc}
   14e38:	push	{fp, lr}
   14e3c:	mov	fp, sp
   14e40:	mvn	r3, #1
   14e44:	cmp	r1, #128	; 0x80
   14e48:	bcc	14ef4 <__mempcpy_chk@plt+0x3eb8>
   14e4c:	mov	ip, #2
   14e50:	cmp	r1, #2048	; 0x800
   14e54:	bcs	14ed0 <__mempcpy_chk@plt+0x3e94>
   14e58:	cmp	ip, r2
   14e5c:	mvn	r3, #1
   14e60:	bgt	14ef4 <__mempcpy_chk@plt+0x3eb8>
   14e64:	cmp	ip, #2
   14e68:	beq	14eac <__mempcpy_chk@plt+0x3e70>
   14e6c:	cmp	ip, #3
   14e70:	beq	14e94 <__mempcpy_chk@plt+0x3e58>
   14e74:	cmp	ip, #4
   14e78:	bne	14ec4 <__mempcpy_chk@plt+0x3e88>
   14e7c:	mov	r2, #2
   14e80:	mov	r3, r1
   14e84:	bfi	r3, r2, #6, #26
   14e88:	mov	r2, #65536	; 0x10000
   14e8c:	orr	r1, r2, r1, lsr #6
   14e90:	strb	r3, [r0, #3]
   14e94:	mov	r2, #2
   14e98:	mov	r3, r1
   14e9c:	bfi	r3, r2, #6, #26
   14ea0:	mov	r2, #2048	; 0x800
   14ea4:	orr	r1, r2, r1, lsr #6
   14ea8:	strb	r3, [r0, #2]
   14eac:	mov	r2, #192	; 0xc0
   14eb0:	orr	r2, r2, r1, lsr #6
   14eb4:	strb	r2, [r0]
   14eb8:	mov	r2, #2
   14ebc:	bfi	r1, r2, #6, #26
   14ec0:	strb	r1, [r0, #1]
   14ec4:	mov	r3, ip
   14ec8:	mov	r0, r3
   14ecc:	pop	{fp, pc}
   14ed0:	mov	r3, #0
   14ed4:	cmp	r3, r1, lsr #16
   14ed8:	bne	14efc <__mempcpy_chk@plt+0x3ec0>
   14edc:	mov	lr, r1
   14ee0:	mov	ip, #3
   14ee4:	mvn	r3, #0
   14ee8:	bfc	lr, #0, #11
   14eec:	cmp	lr, #55296	; 0xd800
   14ef0:	bne	14e58 <__mempcpy_chk@plt+0x3e1c>
   14ef4:	mov	r0, r3
   14ef8:	pop	{fp, pc}
   14efc:	lsr	lr, r1, #16
   14f00:	mvn	r3, #0
   14f04:	mov	ip, #4
   14f08:	cmp	lr, #16
   14f0c:	bls	14e58 <__mempcpy_chk@plt+0x3e1c>
   14f10:	b	14ef4 <__mempcpy_chk@plt+0x3eb8>
   14f14:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14f18:	add	fp, sp, #24
   14f1c:	sub	sp, sp, #32
   14f20:	ldr	r6, [fp, #12]
   14f24:	ldr	r7, [fp, #8]
   14f28:	mov	r4, r2
   14f2c:	mov	r8, r0
   14f30:	cmp	r1, #0
   14f34:	beq	14f5c <__mempcpy_chk@plt+0x3f20>
   14f38:	movw	r2, #28329	; 0x6ea9
   14f3c:	mov	r5, r1
   14f40:	str	r3, [sp, #4]
   14f44:	str	r4, [sp]
   14f48:	mov	r0, r8
   14f4c:	mov	r1, #1
   14f50:	movt	r2, #1
   14f54:	mov	r3, r5
   14f58:	b	14f74 <__mempcpy_chk@plt+0x3f38>
   14f5c:	movw	r2, #28341	; 0x6eb5
   14f60:	str	r3, [sp]
   14f64:	mov	r0, r8
   14f68:	mov	r1, #1
   14f6c:	mov	r3, r4
   14f70:	movt	r2, #1
   14f74:	bl	10fa0 <__fprintf_chk@plt>
   14f78:	movw	r1, #28348	; 0x6ebc
   14f7c:	mov	r0, #0
   14f80:	mov	r2, #5
   14f84:	movt	r1, #1
   14f88:	bl	10e68 <dcgettext@plt>
   14f8c:	movw	r2, #29066	; 0x718a
   14f90:	mov	r3, r0
   14f94:	movw	r0, #2022	; 0x7e6
   14f98:	mov	r1, #1
   14f9c:	movt	r2, #1
   14fa0:	str	r0, [sp]
   14fa4:	mov	r0, r8
   14fa8:	bl	10fa0 <__fprintf_chk@plt>
   14fac:	movw	r4, #25699	; 0x6463
   14fb0:	mov	r1, r8
   14fb4:	movt	r4, #1
   14fb8:	mov	r0, r4
   14fbc:	bl	10dd8 <fputs_unlocked@plt>
   14fc0:	movw	r1, #28352	; 0x6ec0
   14fc4:	mov	r0, #0
   14fc8:	mov	r2, #5
   14fcc:	movt	r1, #1
   14fd0:	bl	10e68 <dcgettext@plt>
   14fd4:	movw	r3, #28523	; 0x6f6b
   14fd8:	mov	r2, r0
   14fdc:	mov	r0, r8
   14fe0:	mov	r1, #1
   14fe4:	movt	r3, #1
   14fe8:	bl	10fa0 <__fprintf_chk@plt>
   14fec:	mov	r0, r4
   14ff0:	mov	r1, r8
   14ff4:	bl	10dd8 <fputs_unlocked@plt>
   14ff8:	cmp	r6, #9
   14ffc:	bhi	15038 <__mempcpy_chk@plt+0x3ffc>
   15000:	add	r0, pc, #0
   15004:	ldr	pc, [r0, r6, lsl #2]
   15008:	andeq	r5, r1, r0, lsr r0
   1500c:	andeq	r5, r1, r4, asr #32
   15010:	andeq	r5, r1, r4, ror r0
   15014:	muleq	r1, ip, r0
   15018:	andeq	r5, r1, r4, asr #1
   1501c:	andeq	r5, r1, ip, ror #1
   15020:	andeq	r5, r1, r4, lsl r1
   15024:	andeq	r5, r1, ip, asr #2
   15028:	strdeq	r5, [r1], -r4
   1502c:	muleq	r1, ip, r1
   15030:	sub	sp, fp, #24
   15034:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15038:	movw	r1, #28876	; 0x70cc
   1503c:	movt	r1, #1
   15040:	b	151a4 <__mempcpy_chk@plt+0x4168>
   15044:	movw	r1, #28557	; 0x6f8d
   15048:	mov	r0, #0
   1504c:	mov	r2, #5
   15050:	movt	r1, #1
   15054:	bl	10e68 <dcgettext@plt>
   15058:	ldr	r3, [r7]
   1505c:	mov	r2, r0
   15060:	mov	r0, r8
   15064:	mov	r1, #1
   15068:	sub	sp, fp, #24
   1506c:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   15070:	b	10fa0 <__fprintf_chk@plt>
   15074:	movw	r1, #28573	; 0x6f9d
   15078:	mov	r0, #0
   1507c:	mov	r2, #5
   15080:	movt	r1, #1
   15084:	bl	10e68 <dcgettext@plt>
   15088:	mov	r2, r0
   1508c:	ldr	r3, [r7]
   15090:	ldr	r0, [r7, #4]
   15094:	str	r0, [sp]
   15098:	b	15188 <__mempcpy_chk@plt+0x414c>
   1509c:	movw	r1, #28596	; 0x6fb4
   150a0:	mov	r0, #0
   150a4:	mov	r2, #5
   150a8:	movt	r1, #1
   150ac:	bl	10e68 <dcgettext@plt>
   150b0:	mov	r2, r0
   150b4:	ldr	r3, [r7]
   150b8:	ldmib	r7, {r0, r1}
   150bc:	stm	sp, {r0, r1}
   150c0:	b	15188 <__mempcpy_chk@plt+0x414c>
   150c4:	movw	r1, #28624	; 0x6fd0
   150c8:	mov	r0, #0
   150cc:	mov	r2, #5
   150d0:	movt	r1, #1
   150d4:	bl	10e68 <dcgettext@plt>
   150d8:	ldr	r3, [r7]
   150dc:	mov	r2, r0
   150e0:	ldmib	r7, {r0, r1, r7}
   150e4:	stm	sp, {r0, r1, r7}
   150e8:	b	15188 <__mempcpy_chk@plt+0x414c>
   150ec:	movw	r1, #28656	; 0x6ff0
   150f0:	mov	r0, #0
   150f4:	mov	r2, #5
   150f8:	movt	r1, #1
   150fc:	bl	10e68 <dcgettext@plt>
   15100:	ldr	r3, [r7]
   15104:	mov	r2, r0
   15108:	ldmib	r7, {r0, r1, r6, r7}
   1510c:	stm	sp, {r0, r1, r6, r7}
   15110:	b	15188 <__mempcpy_chk@plt+0x414c>
   15114:	movw	r1, #28692	; 0x7014
   15118:	mov	r0, #0
   1511c:	mov	r2, #5
   15120:	movt	r1, #1
   15124:	bl	10e68 <dcgettext@plt>
   15128:	mov	r2, r0
   1512c:	ldr	r3, [r7]
   15130:	ldmib	r7, {r0, r1, r6}
   15134:	ldr	r5, [r7, #16]
   15138:	ldr	r7, [r7, #20]
   1513c:	stm	sp, {r0, r1, r6}
   15140:	str	r5, [sp, #12]
   15144:	str	r7, [sp, #16]
   15148:	b	15188 <__mempcpy_chk@plt+0x414c>
   1514c:	movw	r1, #28732	; 0x703c
   15150:	mov	r0, #0
   15154:	mov	r2, #5
   15158:	movt	r1, #1
   1515c:	bl	10e68 <dcgettext@plt>
   15160:	mov	r2, r0
   15164:	ldr	r3, [r7]
   15168:	ldmib	r7, {r0, r1, r6}
   1516c:	ldr	r5, [r7, #16]
   15170:	ldr	r4, [r7, #20]
   15174:	ldr	r7, [r7, #24]
   15178:	stm	sp, {r0, r1, r6}
   1517c:	str	r5, [sp, #12]
   15180:	str	r4, [sp, #16]
   15184:	str	r7, [sp, #20]
   15188:	mov	r0, r8
   1518c:	mov	r1, #1
   15190:	bl	10fa0 <__fprintf_chk@plt>
   15194:	sub	sp, fp, #24
   15198:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1519c:	movw	r1, #28824	; 0x7098
   151a0:	movt	r1, #1
   151a4:	mov	r0, #0
   151a8:	mov	r2, #5
   151ac:	bl	10e68 <dcgettext@plt>
   151b0:	mov	ip, r0
   151b4:	ldr	r3, [r7]
   151b8:	ldr	r0, [r7, #4]
   151bc:	ldr	r1, [r7, #8]
   151c0:	ldr	r6, [r7, #12]
   151c4:	ldr	r5, [r7, #16]
   151c8:	ldr	r4, [r7, #20]
   151cc:	ldr	r2, [r7, #24]
   151d0:	ldr	lr, [r7, #28]
   151d4:	ldr	r7, [r7, #32]
   151d8:	stm	sp, {r0, r1, r6}
   151dc:	str	r5, [sp, #12]
   151e0:	str	r4, [sp, #16]
   151e4:	str	r2, [sp, #20]
   151e8:	str	lr, [sp, #24]
   151ec:	str	r7, [sp, #28]
   151f0:	b	15238 <__mempcpy_chk@plt+0x41fc>
   151f4:	movw	r1, #28776	; 0x7068
   151f8:	mov	r0, #0
   151fc:	mov	r2, #5
   15200:	movt	r1, #1
   15204:	bl	10e68 <dcgettext@plt>
   15208:	mov	ip, r0
   1520c:	ldr	r3, [r7]
   15210:	ldmib	r7, {r0, r1, r6}
   15214:	ldr	r5, [r7, #16]
   15218:	ldr	r4, [r7, #20]
   1521c:	ldr	r2, [r7, #24]
   15220:	ldr	r7, [r7, #28]
   15224:	stm	sp, {r0, r1, r6}
   15228:	str	r5, [sp, #12]
   1522c:	str	r4, [sp, #16]
   15230:	str	r2, [sp, #20]
   15234:	str	r7, [sp, #24]
   15238:	mov	r0, r8
   1523c:	mov	r1, #1
   15240:	mov	r2, ip
   15244:	bl	10fa0 <__fprintf_chk@plt>
   15248:	sub	sp, fp, #24
   1524c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15250:	push	{r4, sl, fp, lr}
   15254:	add	fp, sp, #8
   15258:	sub	sp, sp, #8
   1525c:	ldr	ip, [fp, #8]
   15260:	mov	lr, #0
   15264:	ldr	r4, [ip, lr, lsl #2]
   15268:	add	lr, lr, #1
   1526c:	cmp	r4, #0
   15270:	bne	15264 <__mempcpy_chk@plt+0x4228>
   15274:	sub	r4, lr, #1
   15278:	str	ip, [sp]
   1527c:	str	r4, [sp, #4]
   15280:	bl	14f14 <__mempcpy_chk@plt+0x3ed8>
   15284:	sub	sp, fp, #8
   15288:	pop	{r4, sl, fp, pc}
   1528c:	push	{fp, lr}
   15290:	mov	fp, sp
   15294:	sub	sp, sp, #48	; 0x30
   15298:	ldr	ip, [fp, #8]
   1529c:	ldr	lr, [ip]
   152a0:	cmp	lr, #0
   152a4:	str	lr, [sp, #8]
   152a8:	beq	15344 <__mempcpy_chk@plt+0x4308>
   152ac:	ldr	lr, [ip, #4]
   152b0:	cmp	lr, #0
   152b4:	str	lr, [sp, #12]
   152b8:	beq	1534c <__mempcpy_chk@plt+0x4310>
   152bc:	ldr	lr, [ip, #8]
   152c0:	cmp	lr, #0
   152c4:	str	lr, [sp, #16]
   152c8:	beq	15354 <__mempcpy_chk@plt+0x4318>
   152cc:	ldr	lr, [ip, #12]
   152d0:	cmp	lr, #0
   152d4:	str	lr, [sp, #20]
   152d8:	beq	1535c <__mempcpy_chk@plt+0x4320>
   152dc:	ldr	lr, [ip, #16]
   152e0:	cmp	lr, #0
   152e4:	str	lr, [sp, #24]
   152e8:	beq	15364 <__mempcpy_chk@plt+0x4328>
   152ec:	ldr	lr, [ip, #20]
   152f0:	cmp	lr, #0
   152f4:	str	lr, [sp, #28]
   152f8:	beq	1536c <__mempcpy_chk@plt+0x4330>
   152fc:	ldr	lr, [ip, #24]
   15300:	cmp	lr, #0
   15304:	str	lr, [sp, #32]
   15308:	beq	15374 <__mempcpy_chk@plt+0x4338>
   1530c:	ldr	lr, [ip, #28]
   15310:	cmp	lr, #0
   15314:	str	lr, [sp, #36]	; 0x24
   15318:	beq	1537c <__mempcpy_chk@plt+0x4340>
   1531c:	ldr	lr, [ip, #32]
   15320:	cmp	lr, #0
   15324:	str	lr, [sp, #40]	; 0x28
   15328:	beq	15384 <__mempcpy_chk@plt+0x4348>
   1532c:	ldr	lr, [ip, #36]	; 0x24
   15330:	mov	ip, #10
   15334:	cmp	lr, #0
   15338:	str	lr, [sp, #44]	; 0x2c
   1533c:	movweq	ip, #9
   15340:	b	15388 <__mempcpy_chk@plt+0x434c>
   15344:	mov	ip, #0
   15348:	b	15388 <__mempcpy_chk@plt+0x434c>
   1534c:	mov	ip, #1
   15350:	b	15388 <__mempcpy_chk@plt+0x434c>
   15354:	mov	ip, #2
   15358:	b	15388 <__mempcpy_chk@plt+0x434c>
   1535c:	mov	ip, #3
   15360:	b	15388 <__mempcpy_chk@plt+0x434c>
   15364:	mov	ip, #4
   15368:	b	15388 <__mempcpy_chk@plt+0x434c>
   1536c:	mov	ip, #5
   15370:	b	15388 <__mempcpy_chk@plt+0x434c>
   15374:	mov	ip, #6
   15378:	b	15388 <__mempcpy_chk@plt+0x434c>
   1537c:	mov	ip, #7
   15380:	b	15388 <__mempcpy_chk@plt+0x434c>
   15384:	mov	ip, #8
   15388:	add	lr, sp, #8
   1538c:	str	ip, [sp, #4]
   15390:	str	lr, [sp]
   15394:	bl	14f14 <__mempcpy_chk@plt+0x3ed8>
   15398:	mov	sp, fp
   1539c:	pop	{fp, pc}
   153a0:	push	{fp, lr}
   153a4:	mov	fp, sp
   153a8:	sub	sp, sp, #56	; 0x38
   153ac:	add	ip, fp, #8
   153b0:	str	ip, [sp, #12]
   153b4:	ldr	lr, [fp, #8]
   153b8:	cmp	lr, #0
   153bc:	str	lr, [sp, #16]
   153c0:	beq	1545c <__mempcpy_chk@plt+0x4420>
   153c4:	ldr	lr, [ip, #4]
   153c8:	cmp	lr, #0
   153cc:	str	lr, [sp, #20]
   153d0:	beq	15464 <__mempcpy_chk@plt+0x4428>
   153d4:	ldr	lr, [ip, #8]
   153d8:	cmp	lr, #0
   153dc:	str	lr, [sp, #24]
   153e0:	beq	1546c <__mempcpy_chk@plt+0x4430>
   153e4:	ldr	lr, [ip, #12]
   153e8:	cmp	lr, #0
   153ec:	str	lr, [sp, #28]
   153f0:	beq	15474 <__mempcpy_chk@plt+0x4438>
   153f4:	ldr	lr, [ip, #16]
   153f8:	cmp	lr, #0
   153fc:	str	lr, [sp, #32]
   15400:	beq	1547c <__mempcpy_chk@plt+0x4440>
   15404:	ldr	lr, [ip, #20]
   15408:	cmp	lr, #0
   1540c:	str	lr, [sp, #36]	; 0x24
   15410:	beq	15484 <__mempcpy_chk@plt+0x4448>
   15414:	ldr	lr, [ip, #24]
   15418:	cmp	lr, #0
   1541c:	str	lr, [sp, #40]	; 0x28
   15420:	beq	1548c <__mempcpy_chk@plt+0x4450>
   15424:	ldr	lr, [ip, #28]
   15428:	cmp	lr, #0
   1542c:	str	lr, [sp, #44]	; 0x2c
   15430:	beq	15494 <__mempcpy_chk@plt+0x4458>
   15434:	ldr	lr, [ip, #32]
   15438:	cmp	lr, #0
   1543c:	str	lr, [sp, #48]	; 0x30
   15440:	beq	1549c <__mempcpy_chk@plt+0x4460>
   15444:	ldr	lr, [ip, #36]	; 0x24
   15448:	mov	ip, #10
   1544c:	cmp	lr, #0
   15450:	str	lr, [sp, #52]	; 0x34
   15454:	movweq	ip, #9
   15458:	b	154a0 <__mempcpy_chk@plt+0x4464>
   1545c:	mov	ip, #0
   15460:	b	154a0 <__mempcpy_chk@plt+0x4464>
   15464:	mov	ip, #1
   15468:	b	154a0 <__mempcpy_chk@plt+0x4464>
   1546c:	mov	ip, #2
   15470:	b	154a0 <__mempcpy_chk@plt+0x4464>
   15474:	mov	ip, #3
   15478:	b	154a0 <__mempcpy_chk@plt+0x4464>
   1547c:	mov	ip, #4
   15480:	b	154a0 <__mempcpy_chk@plt+0x4464>
   15484:	mov	ip, #5
   15488:	b	154a0 <__mempcpy_chk@plt+0x4464>
   1548c:	mov	ip, #6
   15490:	b	154a0 <__mempcpy_chk@plt+0x4464>
   15494:	mov	ip, #7
   15498:	b	154a0 <__mempcpy_chk@plt+0x4464>
   1549c:	mov	ip, #8
   154a0:	add	lr, sp, #16
   154a4:	str	ip, [sp, #4]
   154a8:	str	lr, [sp]
   154ac:	bl	14f14 <__mempcpy_chk@plt+0x3ed8>
   154b0:	mov	sp, fp
   154b4:	pop	{fp, pc}
   154b8:	push	{fp, lr}
   154bc:	mov	fp, sp
   154c0:	movw	r0, #33092	; 0x8144
   154c4:	movt	r0, #2
   154c8:	ldr	r1, [r0]
   154cc:	movw	r0, #25699	; 0x6463
   154d0:	movt	r0, #1
   154d4:	bl	10dd8 <fputs_unlocked@plt>
   154d8:	movw	r1, #28936	; 0x7108
   154dc:	mov	r0, #0
   154e0:	mov	r2, #5
   154e4:	movt	r1, #1
   154e8:	bl	10e68 <dcgettext@plt>
   154ec:	movw	r2, #28956	; 0x711c
   154f0:	mov	r1, r0
   154f4:	mov	r0, #1
   154f8:	movt	r2, #1
   154fc:	bl	10f88 <__printf_chk@plt>
   15500:	movw	r1, #28978	; 0x7132
   15504:	mov	r0, #0
   15508:	mov	r2, #5
   1550c:	movt	r1, #1
   15510:	bl	10e68 <dcgettext@plt>
   15514:	movw	r2, #27081	; 0x69c9
   15518:	movw	r3, #27301	; 0x6aa5
   1551c:	mov	r1, r0
   15520:	mov	r0, #1
   15524:	movt	r2, #1
   15528:	movt	r3, #1
   1552c:	bl	10f88 <__printf_chk@plt>
   15530:	movw	r1, #28998	; 0x7146
   15534:	mov	r0, #0
   15538:	mov	r2, #5
   1553c:	movt	r1, #1
   15540:	bl	10e68 <dcgettext@plt>
   15544:	movw	r2, #29037	; 0x716d
   15548:	mov	r1, r0
   1554c:	mov	r0, #1
   15550:	movt	r2, #1
   15554:	pop	{fp, lr}
   15558:	b	10f88 <__printf_chk@plt>
   1555c:	push	{r4, r5, r6, sl, fp, lr}
   15560:	add	fp, sp, #16
   15564:	mov	r4, r2
   15568:	mov	r5, r1
   1556c:	mov	r6, r0
   15570:	bl	161f4 <__mempcpy_chk@plt+0x51b8>
   15574:	cmp	r0, #0
   15578:	popne	{r4, r5, r6, sl, fp, pc}
   1557c:	cmp	r6, #0
   15580:	beq	15594 <__mempcpy_chk@plt+0x4558>
   15584:	cmp	r5, #0
   15588:	cmpne	r4, #0
   1558c:	bne	15594 <__mempcpy_chk@plt+0x4558>
   15590:	pop	{r4, r5, r6, sl, fp, pc}
   15594:	bl	15b10 <__mempcpy_chk@plt+0x4ad4>
   15598:	push	{r4, r5, r6, sl, fp, lr}
   1559c:	add	fp, sp, #16
   155a0:	mov	r4, r2
   155a4:	mov	r5, r1
   155a8:	mov	r6, r0
   155ac:	bl	161f4 <__mempcpy_chk@plt+0x51b8>
   155b0:	cmp	r0, #0
   155b4:	popne	{r4, r5, r6, sl, fp, pc}
   155b8:	cmp	r6, #0
   155bc:	beq	155d0 <__mempcpy_chk@plt+0x4594>
   155c0:	cmp	r5, #0
   155c4:	cmpne	r4, #0
   155c8:	bne	155d0 <__mempcpy_chk@plt+0x4594>
   155cc:	pop	{r4, r5, r6, sl, fp, pc}
   155d0:	bl	15b10 <__mempcpy_chk@plt+0x4ad4>
   155d4:	push	{fp, lr}
   155d8:	mov	fp, sp
   155dc:	bl	15df0 <__mempcpy_chk@plt+0x4db4>
   155e0:	cmp	r0, #0
   155e4:	popne	{fp, pc}
   155e8:	bl	15b10 <__mempcpy_chk@plt+0x4ad4>
   155ec:	push	{fp, lr}
   155f0:	mov	fp, sp
   155f4:	bl	15df0 <__mempcpy_chk@plt+0x4db4>
   155f8:	cmp	r0, #0
   155fc:	popne	{fp, pc}
   15600:	bl	15b10 <__mempcpy_chk@plt+0x4ad4>
   15604:	push	{fp, lr}
   15608:	mov	fp, sp
   1560c:	bl	15df0 <__mempcpy_chk@plt+0x4db4>
   15610:	cmp	r0, #0
   15614:	popne	{fp, pc}
   15618:	bl	15b10 <__mempcpy_chk@plt+0x4ad4>
   1561c:	push	{r4, r5, fp, lr}
   15620:	add	fp, sp, #8
   15624:	mov	r4, r1
   15628:	mov	r5, r0
   1562c:	bl	15e20 <__mempcpy_chk@plt+0x4de4>
   15630:	cmp	r0, #0
   15634:	popne	{r4, r5, fp, pc}
   15638:	cmp	r5, #0
   1563c:	beq	1564c <__mempcpy_chk@plt+0x4610>
   15640:	cmp	r4, #0
   15644:	bne	1564c <__mempcpy_chk@plt+0x4610>
   15648:	pop	{r4, r5, fp, pc}
   1564c:	bl	15b10 <__mempcpy_chk@plt+0x4ad4>
   15650:	push	{fp, lr}
   15654:	mov	fp, sp
   15658:	cmp	r1, #0
   1565c:	orreq	r1, r1, #1
   15660:	bl	15e20 <__mempcpy_chk@plt+0x4de4>
   15664:	cmp	r0, #0
   15668:	popne	{fp, pc}
   1566c:	bl	15b10 <__mempcpy_chk@plt+0x4ad4>
   15670:	push	{fp, lr}
   15674:	mov	fp, sp
   15678:	clz	r3, r2
   1567c:	lsr	ip, r3, #5
   15680:	clz	r3, r1
   15684:	lsr	r3, r3, #5
   15688:	orrs	r3, r3, ip
   1568c:	movwne	r1, #1
   15690:	movwne	r2, #1
   15694:	bl	161f4 <__mempcpy_chk@plt+0x51b8>
   15698:	cmp	r0, #0
   1569c:	popne	{fp, pc}
   156a0:	bl	15b10 <__mempcpy_chk@plt+0x4ad4>
   156a4:	push	{fp, lr}
   156a8:	mov	fp, sp
   156ac:	mov	r2, r1
   156b0:	mov	r1, r0
   156b4:	mov	r0, #0
   156b8:	bl	161f4 <__mempcpy_chk@plt+0x51b8>
   156bc:	cmp	r0, #0
   156c0:	popne	{fp, pc}
   156c4:	bl	15b10 <__mempcpy_chk@plt+0x4ad4>
   156c8:	push	{fp, lr}
   156cc:	mov	fp, sp
   156d0:	mov	r2, r1
   156d4:	mov	r1, r0
   156d8:	clz	r0, r2
   156dc:	clz	r3, r1
   156e0:	lsr	r0, r0, #5
   156e4:	lsr	r3, r3, #5
   156e8:	orrs	r0, r3, r0
   156ec:	mov	r0, #0
   156f0:	movwne	r1, #1
   156f4:	movwne	r2, #1
   156f8:	bl	161f4 <__mempcpy_chk@plt+0x51b8>
   156fc:	cmp	r0, #0
   15700:	popne	{fp, pc}
   15704:	bl	15b10 <__mempcpy_chk@plt+0x4ad4>
   15708:	push	{r4, r5, r6, sl, fp, lr}
   1570c:	add	fp, sp, #16
   15710:	ldr	r5, [r1]
   15714:	mov	r4, r1
   15718:	mov	r6, r0
   1571c:	cmp	r0, #0
   15720:	beq	15738 <__mempcpy_chk@plt+0x46fc>
   15724:	mov	r0, #1
   15728:	add	r0, r0, r5, lsr #1
   1572c:	adds	r5, r5, r0
   15730:	bcc	15740 <__mempcpy_chk@plt+0x4704>
   15734:	b	1577c <__mempcpy_chk@plt+0x4740>
   15738:	cmp	r5, #0
   1573c:	movweq	r5, #64	; 0x40
   15740:	mov	r0, r6
   15744:	mov	r1, r5
   15748:	mov	r2, #1
   1574c:	bl	161f4 <__mempcpy_chk@plt+0x51b8>
   15750:	cmp	r5, #0
   15754:	mov	r1, r5
   15758:	movwne	r1, #1
   1575c:	cmp	r0, #0
   15760:	bne	15774 <__mempcpy_chk@plt+0x4738>
   15764:	clz	r2, r6
   15768:	lsr	r2, r2, #5
   1576c:	orrs	r1, r2, r1
   15770:	bne	1577c <__mempcpy_chk@plt+0x4740>
   15774:	str	r5, [r4]
   15778:	pop	{r4, r5, r6, sl, fp, pc}
   1577c:	bl	15b10 <__mempcpy_chk@plt+0x4ad4>
   15780:	push	{r4, r5, r6, r7, fp, lr}
   15784:	add	fp, sp, #16
   15788:	ldr	r5, [r1]
   1578c:	mov	r6, r2
   15790:	mov	r4, r1
   15794:	mov	r7, r0
   15798:	cmp	r0, #0
   1579c:	beq	157b4 <__mempcpy_chk@plt+0x4778>
   157a0:	mov	r0, #1
   157a4:	add	r0, r0, r5, lsr #1
   157a8:	adds	r5, r5, r0
   157ac:	bcc	157cc <__mempcpy_chk@plt+0x4790>
   157b0:	b	15800 <__mempcpy_chk@plt+0x47c4>
   157b4:	cmp	r5, #0
   157b8:	bne	157cc <__mempcpy_chk@plt+0x4790>
   157bc:	mov	r0, #64	; 0x40
   157c0:	cmp	r6, #64	; 0x40
   157c4:	udiv	r5, r0, r6
   157c8:	addhi	r5, r5, #1
   157cc:	mov	r0, r7
   157d0:	mov	r1, r5
   157d4:	mov	r2, r6
   157d8:	bl	161f4 <__mempcpy_chk@plt+0x51b8>
   157dc:	cmp	r0, #0
   157e0:	bne	157f8 <__mempcpy_chk@plt+0x47bc>
   157e4:	cmp	r7, #0
   157e8:	beq	15800 <__mempcpy_chk@plt+0x47c4>
   157ec:	cmp	r6, #0
   157f0:	cmpne	r5, #0
   157f4:	bne	15800 <__mempcpy_chk@plt+0x47c4>
   157f8:	str	r5, [r4]
   157fc:	pop	{r4, r5, r6, r7, fp, pc}
   15800:	bl	15b10 <__mempcpy_chk@plt+0x4ad4>
   15804:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15808:	add	fp, sp, #24
   1580c:	mov	r8, r1
   15810:	ldr	r1, [r1]
   15814:	mov	r5, r0
   15818:	add	r0, r1, r1, asr #1
   1581c:	cmp	r0, r1
   15820:	mvnvs	r0, #-2147483648	; 0x80000000
   15824:	cmp	r0, r3
   15828:	mov	r7, r0
   1582c:	movgt	r7, r3
   15830:	cmn	r3, #1
   15834:	movle	r7, r0
   15838:	ldr	r0, [fp, #8]
   1583c:	cmn	r0, #1
   15840:	ble	15868 <__mempcpy_chk@plt+0x482c>
   15844:	cmp	r0, #0
   15848:	beq	158bc <__mempcpy_chk@plt+0x4880>
   1584c:	cmn	r7, #1
   15850:	ble	15890 <__mempcpy_chk@plt+0x4854>
   15854:	mvn	r4, #-2147483648	; 0x80000000
   15858:	udiv	r6, r4, r0
   1585c:	cmp	r6, r7
   15860:	bge	158bc <__mempcpy_chk@plt+0x4880>
   15864:	b	158cc <__mempcpy_chk@plt+0x4890>
   15868:	cmn	r7, #1
   1586c:	ble	158ac <__mempcpy_chk@plt+0x4870>
   15870:	cmn	r0, #1
   15874:	beq	158bc <__mempcpy_chk@plt+0x4880>
   15878:	mov	r6, #-2147483648	; 0x80000000
   1587c:	mvn	r4, #-2147483648	; 0x80000000
   15880:	sdiv	r6, r6, r0
   15884:	cmp	r6, r7
   15888:	bge	158bc <__mempcpy_chk@plt+0x4880>
   1588c:	b	158cc <__mempcpy_chk@plt+0x4890>
   15890:	beq	158bc <__mempcpy_chk@plt+0x4880>
   15894:	mov	r6, #-2147483648	; 0x80000000
   15898:	mvn	r4, #-2147483648	; 0x80000000
   1589c:	sdiv	r6, r6, r7
   158a0:	cmp	r6, r0
   158a4:	bge	158bc <__mempcpy_chk@plt+0x4880>
   158a8:	b	158cc <__mempcpy_chk@plt+0x4890>
   158ac:	mvn	r4, #-2147483648	; 0x80000000
   158b0:	sdiv	r6, r4, r0
   158b4:	cmp	r7, r6
   158b8:	blt	158cc <__mempcpy_chk@plt+0x4890>
   158bc:	mul	r6, r7, r0
   158c0:	mov	r4, #64	; 0x40
   158c4:	cmp	r6, #63	; 0x3f
   158c8:	bgt	158d4 <__mempcpy_chk@plt+0x4898>
   158cc:	sdiv	r7, r4, r0
   158d0:	mul	r6, r7, r0
   158d4:	cmp	r5, #0
   158d8:	moveq	r4, #0
   158dc:	streq	r4, [r8]
   158e0:	sub	r4, r7, r1
   158e4:	cmp	r4, r2
   158e8:	bge	15994 <__mempcpy_chk@plt+0x4958>
   158ec:	add	r7, r1, r2
   158f0:	mov	r6, #0
   158f4:	mov	r2, #0
   158f8:	cmp	r7, r3
   158fc:	movwgt	r6, #1
   15900:	cmn	r3, #1
   15904:	movwgt	r2, #1
   15908:	cmp	r7, r1
   1590c:	bvs	159c8 <__mempcpy_chk@plt+0x498c>
   15910:	ands	r1, r2, r6
   15914:	bne	159c8 <__mempcpy_chk@plt+0x498c>
   15918:	cmn	r0, #1
   1591c:	ble	15944 <__mempcpy_chk@plt+0x4908>
   15920:	cmp	r0, #0
   15924:	beq	15990 <__mempcpy_chk@plt+0x4954>
   15928:	cmn	r7, #1
   1592c:	ble	15968 <__mempcpy_chk@plt+0x492c>
   15930:	mvn	r1, #-2147483648	; 0x80000000
   15934:	udiv	r1, r1, r0
   15938:	cmp	r1, r7
   1593c:	bge	15990 <__mempcpy_chk@plt+0x4954>
   15940:	b	159c8 <__mempcpy_chk@plt+0x498c>
   15944:	cmn	r7, #1
   15948:	ble	15980 <__mempcpy_chk@plt+0x4944>
   1594c:	cmn	r0, #1
   15950:	beq	15990 <__mempcpy_chk@plt+0x4954>
   15954:	mov	r1, #-2147483648	; 0x80000000
   15958:	sdiv	r1, r1, r0
   1595c:	cmp	r1, r7
   15960:	bge	15990 <__mempcpy_chk@plt+0x4954>
   15964:	b	159c8 <__mempcpy_chk@plt+0x498c>
   15968:	beq	15990 <__mempcpy_chk@plt+0x4954>
   1596c:	mov	r1, #-2147483648	; 0x80000000
   15970:	sdiv	r1, r1, r7
   15974:	cmp	r1, r0
   15978:	bge	15990 <__mempcpy_chk@plt+0x4954>
   1597c:	b	159c8 <__mempcpy_chk@plt+0x498c>
   15980:	mvn	r1, #-2147483648	; 0x80000000
   15984:	sdiv	r1, r1, r0
   15988:	cmp	r7, r1
   1598c:	blt	159c8 <__mempcpy_chk@plt+0x498c>
   15990:	mul	r6, r7, r0
   15994:	mov	r0, r5
   15998:	mov	r1, r6
   1599c:	bl	15e20 <__mempcpy_chk@plt+0x4de4>
   159a0:	cmp	r6, #0
   159a4:	movwne	r6, #1
   159a8:	cmp	r0, #0
   159ac:	bne	159c0 <__mempcpy_chk@plt+0x4984>
   159b0:	clz	r1, r5
   159b4:	lsr	r1, r1, #5
   159b8:	orrs	r1, r1, r6
   159bc:	bne	159c8 <__mempcpy_chk@plt+0x498c>
   159c0:	str	r7, [r8]
   159c4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   159c8:	bl	15b10 <__mempcpy_chk@plt+0x4ad4>
   159cc:	push	{fp, lr}
   159d0:	mov	fp, sp
   159d4:	mov	r1, #1
   159d8:	bl	15d9c <__mempcpy_chk@plt+0x4d60>
   159dc:	cmp	r0, #0
   159e0:	popne	{fp, pc}
   159e4:	bl	15b10 <__mempcpy_chk@plt+0x4ad4>
   159e8:	push	{fp, lr}
   159ec:	mov	fp, sp
   159f0:	bl	15d9c <__mempcpy_chk@plt+0x4d60>
   159f4:	cmp	r0, #0
   159f8:	popne	{fp, pc}
   159fc:	bl	15b10 <__mempcpy_chk@plt+0x4ad4>
   15a00:	push	{fp, lr}
   15a04:	mov	fp, sp
   15a08:	mov	r1, #1
   15a0c:	bl	15d9c <__mempcpy_chk@plt+0x4d60>
   15a10:	cmp	r0, #0
   15a14:	popne	{fp, pc}
   15a18:	bl	15b10 <__mempcpy_chk@plt+0x4ad4>
   15a1c:	push	{fp, lr}
   15a20:	mov	fp, sp
   15a24:	bl	15d9c <__mempcpy_chk@plt+0x4d60>
   15a28:	cmp	r0, #0
   15a2c:	popne	{fp, pc}
   15a30:	bl	15b10 <__mempcpy_chk@plt+0x4ad4>
   15a34:	push	{r4, r5, fp, lr}
   15a38:	add	fp, sp, #8
   15a3c:	mov	r5, r0
   15a40:	mov	r0, r1
   15a44:	mov	r4, r1
   15a48:	bl	15df0 <__mempcpy_chk@plt+0x4db4>
   15a4c:	cmp	r0, #0
   15a50:	beq	15a64 <__mempcpy_chk@plt+0x4a28>
   15a54:	mov	r1, r5
   15a58:	mov	r2, r4
   15a5c:	pop	{r4, r5, fp, lr}
   15a60:	b	10e38 <memcpy@plt>
   15a64:	bl	15b10 <__mempcpy_chk@plt+0x4ad4>
   15a68:	push	{r4, r5, fp, lr}
   15a6c:	add	fp, sp, #8
   15a70:	mov	r5, r0
   15a74:	mov	r0, r1
   15a78:	mov	r4, r1
   15a7c:	bl	15df0 <__mempcpy_chk@plt+0x4db4>
   15a80:	cmp	r0, #0
   15a84:	beq	15a98 <__mempcpy_chk@plt+0x4a5c>
   15a88:	mov	r1, r5
   15a8c:	mov	r2, r4
   15a90:	pop	{r4, r5, fp, lr}
   15a94:	b	10e38 <memcpy@plt>
   15a98:	bl	15b10 <__mempcpy_chk@plt+0x4ad4>
   15a9c:	push	{r4, r5, fp, lr}
   15aa0:	add	fp, sp, #8
   15aa4:	mov	r5, r0
   15aa8:	add	r0, r1, #1
   15aac:	mov	r4, r1
   15ab0:	bl	15df0 <__mempcpy_chk@plt+0x4db4>
   15ab4:	cmp	r0, #0
   15ab8:	beq	15ad4 <__mempcpy_chk@plt+0x4a98>
   15abc:	mov	r1, #0
   15ac0:	mov	r2, r4
   15ac4:	strb	r1, [r0, r4]
   15ac8:	mov	r1, r5
   15acc:	pop	{r4, r5, fp, lr}
   15ad0:	b	10e38 <memcpy@plt>
   15ad4:	bl	15b10 <__mempcpy_chk@plt+0x4ad4>
   15ad8:	push	{r4, r5, fp, lr}
   15adc:	add	fp, sp, #8
   15ae0:	mov	r4, r0
   15ae4:	bl	10f58 <strlen@plt>
   15ae8:	add	r5, r0, #1
   15aec:	mov	r0, r5
   15af0:	bl	15df0 <__mempcpy_chk@plt+0x4db4>
   15af4:	cmp	r0, #0
   15af8:	beq	15b0c <__mempcpy_chk@plt+0x4ad0>
   15afc:	mov	r1, r4
   15b00:	mov	r2, r5
   15b04:	pop	{r4, r5, fp, lr}
   15b08:	b	10e38 <memcpy@plt>
   15b0c:	bl	15b10 <__mempcpy_chk@plt+0x4ad4>
   15b10:	push	{fp, lr}
   15b14:	mov	fp, sp
   15b18:	movw	r0, #33012	; 0x80f4
   15b1c:	movw	r1, #29113	; 0x71b9
   15b20:	mov	r2, #5
   15b24:	movt	r0, #2
   15b28:	movt	r1, #1
   15b2c:	ldr	r4, [r0]
   15b30:	mov	r0, #0
   15b34:	bl	10e68 <dcgettext@plt>
   15b38:	movw	r2, #27515	; 0x6b7b
   15b3c:	mov	r3, r0
   15b40:	mov	r0, r4
   15b44:	mov	r1, #0
   15b48:	movt	r2, #1
   15b4c:	bl	10ed4 <error@plt>
   15b50:	bl	11030 <abort@plt>
   15b54:	sub	sp, sp, #12
   15b58:	push	{r4, r5, r6, sl, fp, lr}
   15b5c:	add	fp, sp, #16
   15b60:	sub	sp, sp, #4
   15b64:	movw	r5, #33092	; 0x8144
   15b68:	mov	r4, r0
   15b6c:	add	r0, fp, #8
   15b70:	movt	r5, #2
   15b74:	stm	r0, {r1, r2, r3}
   15b78:	add	r3, fp, #8
   15b7c:	mov	r1, #1
   15b80:	mov	r2, r4
   15b84:	str	r3, [sp]
   15b88:	ldr	r0, [r5]
   15b8c:	bl	10f10 <__vfprintf_chk@plt>
   15b90:	mov	r4, r0
   15b94:	cmn	r0, #1
   15b98:	bgt	15be4 <__mempcpy_chk@plt+0x4ba8>
   15b9c:	ldr	r0, [r5]
   15ba0:	bl	10e20 <ferror@plt>
   15ba4:	cmp	r0, #0
   15ba8:	bne	15be4 <__mempcpy_chk@plt+0x4ba8>
   15bac:	movw	r0, #33012	; 0x80f4
   15bb0:	movt	r0, #2
   15bb4:	ldr	r5, [r0]
   15bb8:	bl	10f64 <__errno_location@plt>
   15bbc:	movw	r1, #29130	; 0x71ca
   15bc0:	ldr	r6, [r0]
   15bc4:	mov	r0, #0
   15bc8:	mov	r2, #5
   15bcc:	movt	r1, #1
   15bd0:	bl	10e68 <dcgettext@plt>
   15bd4:	mov	r2, r0
   15bd8:	mov	r0, r5
   15bdc:	mov	r1, r6
   15be0:	bl	10ed4 <error@plt>
   15be4:	mov	r0, r4
   15be8:	sub	sp, fp, #16
   15bec:	pop	{r4, r5, r6, sl, fp, lr}
   15bf0:	add	sp, sp, #12
   15bf4:	bx	lr
   15bf8:	push	{r4, r5, r6, sl, fp, lr}
   15bfc:	add	fp, sp, #16
   15c00:	movw	r5, #33092	; 0x8144
   15c04:	mov	r2, r0
   15c08:	mov	r3, r1
   15c0c:	mov	r1, #1
   15c10:	movt	r5, #2
   15c14:	ldr	r0, [r5]
   15c18:	bl	10f10 <__vfprintf_chk@plt>
   15c1c:	mov	r4, r0
   15c20:	cmn	r0, #1
   15c24:	bgt	15c38 <__mempcpy_chk@plt+0x4bfc>
   15c28:	ldr	r0, [r5]
   15c2c:	bl	10e20 <ferror@plt>
   15c30:	cmp	r0, #0
   15c34:	beq	15c40 <__mempcpy_chk@plt+0x4c04>
   15c38:	mov	r0, r4
   15c3c:	pop	{r4, r5, r6, sl, fp, pc}
   15c40:	movw	r0, #33012	; 0x80f4
   15c44:	movt	r0, #2
   15c48:	ldr	r5, [r0]
   15c4c:	bl	10f64 <__errno_location@plt>
   15c50:	movw	r1, #29130	; 0x71ca
   15c54:	ldr	r6, [r0]
   15c58:	mov	r0, #0
   15c5c:	mov	r2, #5
   15c60:	movt	r1, #1
   15c64:	bl	10e68 <dcgettext@plt>
   15c68:	mov	r2, r0
   15c6c:	mov	r0, r5
   15c70:	mov	r1, r6
   15c74:	bl	10ed4 <error@plt>
   15c78:	mov	r0, r4
   15c7c:	pop	{r4, r5, r6, sl, fp, pc}
   15c80:	sub	sp, sp, #8
   15c84:	push	{r4, r5, r6, sl, fp, lr}
   15c88:	add	fp, sp, #16
   15c8c:	sub	sp, sp, #8
   15c90:	mov	r4, r1
   15c94:	str	r2, [fp, #8]
   15c98:	str	r3, [fp, #12]
   15c9c:	add	r3, fp, #8
   15ca0:	mov	r1, #1
   15ca4:	mov	r5, r0
   15ca8:	mov	r2, r4
   15cac:	str	r3, [sp, #4]
   15cb0:	bl	10f10 <__vfprintf_chk@plt>
   15cb4:	mov	r4, r0
   15cb8:	cmn	r0, #1
   15cbc:	bgt	15d08 <__mempcpy_chk@plt+0x4ccc>
   15cc0:	mov	r0, r5
   15cc4:	bl	10e20 <ferror@plt>
   15cc8:	cmp	r0, #0
   15ccc:	bne	15d08 <__mempcpy_chk@plt+0x4ccc>
   15cd0:	movw	r0, #33012	; 0x80f4
   15cd4:	movt	r0, #2
   15cd8:	ldr	r5, [r0]
   15cdc:	bl	10f64 <__errno_location@plt>
   15ce0:	movw	r1, #29130	; 0x71ca
   15ce4:	ldr	r6, [r0]
   15ce8:	mov	r0, #0
   15cec:	mov	r2, #5
   15cf0:	movt	r1, #1
   15cf4:	bl	10e68 <dcgettext@plt>
   15cf8:	mov	r2, r0
   15cfc:	mov	r0, r5
   15d00:	mov	r1, r6
   15d04:	bl	10ed4 <error@plt>
   15d08:	mov	r0, r4
   15d0c:	sub	sp, fp, #16
   15d10:	pop	{r4, r5, r6, sl, fp, lr}
   15d14:	add	sp, sp, #8
   15d18:	bx	lr
   15d1c:	push	{r4, r5, r6, sl, fp, lr}
   15d20:	add	fp, sp, #16
   15d24:	mov	r3, r2
   15d28:	mov	r2, r1
   15d2c:	mov	r1, #1
   15d30:	mov	r5, r0
   15d34:	bl	10f10 <__vfprintf_chk@plt>
   15d38:	mov	r4, r0
   15d3c:	cmn	r0, #1
   15d40:	bgt	15d54 <__mempcpy_chk@plt+0x4d18>
   15d44:	mov	r0, r5
   15d48:	bl	10e20 <ferror@plt>
   15d4c:	cmp	r0, #0
   15d50:	beq	15d5c <__mempcpy_chk@plt+0x4d20>
   15d54:	mov	r0, r4
   15d58:	pop	{r4, r5, r6, sl, fp, pc}
   15d5c:	movw	r0, #33012	; 0x80f4
   15d60:	movt	r0, #2
   15d64:	ldr	r5, [r0]
   15d68:	bl	10f64 <__errno_location@plt>
   15d6c:	movw	r1, #29130	; 0x71ca
   15d70:	ldr	r6, [r0]
   15d74:	mov	r0, #0
   15d78:	mov	r2, #5
   15d7c:	movt	r1, #1
   15d80:	bl	10e68 <dcgettext@plt>
   15d84:	mov	r2, r0
   15d88:	mov	r0, r5
   15d8c:	mov	r1, r6
   15d90:	bl	10ed4 <error@plt>
   15d94:	mov	r0, r4
   15d98:	pop	{r4, r5, r6, sl, fp, pc}
   15d9c:	clz	r2, r1
   15da0:	clz	r3, r0
   15da4:	lsr	r2, r2, #5
   15da8:	lsr	r3, r3, #5
   15dac:	orrs	r2, r3, r2
   15db0:	movwne	r1, #1
   15db4:	movwne	r0, #1
   15db8:	cmp	r1, #0
   15dbc:	beq	15dec <__mempcpy_chk@plt+0x4db0>
   15dc0:	mvn	r2, #-2147483648	; 0x80000000
   15dc4:	udiv	r2, r2, r1
   15dc8:	cmp	r2, r0
   15dcc:	bcs	15dec <__mempcpy_chk@plt+0x4db0>
   15dd0:	push	{fp, lr}
   15dd4:	mov	fp, sp
   15dd8:	bl	10f64 <__errno_location@plt>
   15ddc:	mov	r1, #12
   15de0:	str	r1, [r0]
   15de4:	mov	r0, #0
   15de8:	pop	{fp, pc}
   15dec:	b	10dcc <calloc@plt>
   15df0:	cmp	r0, #0
   15df4:	movweq	r0, #1
   15df8:	cmn	r0, #1
   15dfc:	ble	15e04 <__mempcpy_chk@plt+0x4dc8>
   15e00:	b	10eec <malloc@plt>
   15e04:	push	{fp, lr}
   15e08:	mov	fp, sp
   15e0c:	bl	10f64 <__errno_location@plt>
   15e10:	mov	r1, #12
   15e14:	str	r1, [r0]
   15e18:	mov	r0, #0
   15e1c:	pop	{fp, pc}
   15e20:	push	{fp, lr}
   15e24:	mov	fp, sp
   15e28:	cmp	r0, #0
   15e2c:	beq	15e48 <__mempcpy_chk@plt+0x4e0c>
   15e30:	cmp	r1, #0
   15e34:	beq	15e54 <__mempcpy_chk@plt+0x4e18>
   15e38:	cmn	r1, #1
   15e3c:	ble	15e60 <__mempcpy_chk@plt+0x4e24>
   15e40:	pop	{fp, lr}
   15e44:	b	10e74 <realloc@plt>
   15e48:	mov	r0, r1
   15e4c:	pop	{fp, lr}
   15e50:	b	15df0 <__mempcpy_chk@plt+0x4db4>
   15e54:	bl	12b24 <__mempcpy_chk@plt+0x1ae8>
   15e58:	mov	r0, #0
   15e5c:	pop	{fp, pc}
   15e60:	bl	10f64 <__errno_location@plt>
   15e64:	mov	r1, #12
   15e68:	str	r1, [r0]
   15e6c:	mov	r0, #0
   15e70:	pop	{fp, pc}
   15e74:	push	{r4, r5, r6, sl, fp, lr}
   15e78:	add	fp, sp, #16
   15e7c:	vpush	{d8}
   15e80:	movw	r6, #33436	; 0x829c
   15e84:	mov	r5, r0
   15e88:	mov	r4, r1
   15e8c:	movt	r6, #2
   15e90:	ldr	r0, [r6]
   15e94:	cmp	r0, #0
   15e98:	beq	15ef4 <__mempcpy_chk@plt+0x4eb8>
   15e9c:	ldr	r0, [r6]
   15ea0:	cmp	r0, #0
   15ea4:	beq	15f18 <__mempcpy_chk@plt+0x4edc>
   15ea8:	bl	10de4 <uselocale@plt>
   15eac:	cmp	r0, #0
   15eb0:	beq	15f18 <__mempcpy_chk@plt+0x4edc>
   15eb4:	mov	r6, r0
   15eb8:	mov	r0, r5
   15ebc:	mov	r1, r4
   15ec0:	bl	10e5c <strtold@plt>
   15ec4:	vorr	d8, d0, d0
   15ec8:	bl	10f64 <__errno_location@plt>
   15ecc:	ldr	r5, [r0]
   15ed0:	mov	r4, r0
   15ed4:	mov	r0, r6
   15ed8:	bl	10de4 <uselocale@plt>
   15edc:	cmp	r0, #0
   15ee0:	beq	15f30 <__mempcpy_chk@plt+0x4ef4>
   15ee4:	str	r5, [r4]
   15ee8:	vorr	d0, d8, d8
   15eec:	vpop	{d8}
   15ef0:	pop	{r4, r5, r6, sl, fp, pc}
   15ef4:	movw	r1, #29162	; 0x71ea
   15ef8:	movw	r0, #8127	; 0x1fbf
   15efc:	mov	r2, #0
   15f00:	movt	r1, #1
   15f04:	bl	11000 <newlocale@plt>
   15f08:	str	r0, [r6]
   15f0c:	ldr	r0, [r6]
   15f10:	cmp	r0, #0
   15f14:	bne	15ea8 <__mempcpy_chk@plt+0x4e6c>
   15f18:	cmp	r4, #0
   15f1c:	vmov.i32	d8, #0	; 0x00000000
   15f20:	strne	r5, [r4]
   15f24:	vorr	d0, d8, d8
   15f28:	vpop	{d8}
   15f2c:	pop	{r4, r5, r6, sl, fp, pc}
   15f30:	bl	11030 <abort@plt>
   15f34:	push	{r4, r5, r6, sl, fp, lr}
   15f38:	add	fp, sp, #16
   15f3c:	mov	r4, r0
   15f40:	bl	10ebc <__fpending@plt>
   15f44:	ldr	r6, [r4]
   15f48:	mov	r5, r0
   15f4c:	mov	r0, r4
   15f50:	bl	15fb8 <__mempcpy_chk@plt+0x4f7c>
   15f54:	tst	r6, #32
   15f58:	bne	15f90 <__mempcpy_chk@plt+0x4f54>
   15f5c:	cmp	r0, #0
   15f60:	mov	r4, r0
   15f64:	mvnne	r4, #0
   15f68:	cmp	r5, #0
   15f6c:	bne	15f9c <__mempcpy_chk@plt+0x4f60>
   15f70:	cmp	r0, #0
   15f74:	beq	15f9c <__mempcpy_chk@plt+0x4f60>
   15f78:	bl	10f64 <__errno_location@plt>
   15f7c:	ldr	r0, [r0]
   15f80:	subs	r4, r0, #9
   15f84:	mvnne	r4, #0
   15f88:	mov	r0, r4
   15f8c:	pop	{r4, r5, r6, sl, fp, pc}
   15f90:	mvn	r4, #0
   15f94:	cmp	r0, #0
   15f98:	beq	15fa4 <__mempcpy_chk@plt+0x4f68>
   15f9c:	mov	r0, r4
   15fa0:	pop	{r4, r5, r6, sl, fp, pc}
   15fa4:	bl	10f64 <__errno_location@plt>
   15fa8:	mov	r1, #0
   15fac:	str	r1, [r0]
   15fb0:	mov	r0, r4
   15fb4:	pop	{r4, r5, r6, sl, fp, pc}
   15fb8:	push	{r4, r5, r6, sl, fp, lr}
   15fbc:	add	fp, sp, #16
   15fc0:	sub	sp, sp, #8
   15fc4:	mov	r4, r0
   15fc8:	bl	10f94 <fileno@plt>
   15fcc:	cmn	r0, #1
   15fd0:	ble	16044 <__mempcpy_chk@plt+0x5008>
   15fd4:	mov	r0, r4
   15fd8:	bl	10f1c <__freading@plt>
   15fdc:	cmp	r0, #0
   15fe0:	beq	1600c <__mempcpy_chk@plt+0x4fd0>
   15fe4:	mov	r0, r4
   15fe8:	bl	10f94 <fileno@plt>
   15fec:	mov	r1, #1
   15ff0:	mov	r2, #0
   15ff4:	mov	r3, #0
   15ff8:	str	r1, [sp]
   15ffc:	bl	10ea4 <lseek64@plt>
   16000:	and	r0, r0, r1
   16004:	cmn	r0, #1
   16008:	beq	16044 <__mempcpy_chk@plt+0x5008>
   1600c:	mov	r0, r4
   16010:	bl	16054 <__mempcpy_chk@plt+0x5018>
   16014:	cmp	r0, #0
   16018:	beq	16044 <__mempcpy_chk@plt+0x5008>
   1601c:	bl	10f64 <__errno_location@plt>
   16020:	ldr	r6, [r0]
   16024:	mov	r5, r0
   16028:	mov	r0, r4
   1602c:	bl	10fb8 <fclose@plt>
   16030:	cmp	r6, #0
   16034:	strne	r6, [r5]
   16038:	mvnne	r0, #0
   1603c:	sub	sp, fp, #16
   16040:	pop	{r4, r5, r6, sl, fp, pc}
   16044:	mov	r0, r4
   16048:	sub	sp, fp, #16
   1604c:	pop	{r4, r5, r6, sl, fp, lr}
   16050:	b	10fb8 <fclose@plt>
   16054:	push	{r4, sl, fp, lr}
   16058:	add	fp, sp, #8
   1605c:	sub	sp, sp, #8
   16060:	mov	r4, r0
   16064:	cmp	r0, #0
   16068:	beq	160a0 <__mempcpy_chk@plt+0x5064>
   1606c:	mov	r0, r4
   16070:	bl	10f1c <__freading@plt>
   16074:	cmp	r0, #0
   16078:	beq	160a0 <__mempcpy_chk@plt+0x5064>
   1607c:	ldrb	r0, [r4, #1]
   16080:	tst	r0, #1
   16084:	beq	160a0 <__mempcpy_chk@plt+0x5064>
   16088:	mov	r0, #1
   1608c:	mov	r2, #0
   16090:	mov	r3, #0
   16094:	str	r0, [sp]
   16098:	mov	r0, r4
   1609c:	bl	160b0 <__mempcpy_chk@plt+0x5074>
   160a0:	mov	r0, r4
   160a4:	sub	sp, fp, #8
   160a8:	pop	{r4, sl, fp, lr}
   160ac:	b	10e08 <fflush@plt>
   160b0:	push	{r4, r5, r6, r7, fp, lr}
   160b4:	add	fp, sp, #16
   160b8:	sub	sp, sp, #8
   160bc:	mov	r4, r0
   160c0:	ldr	r0, [r0, #4]
   160c4:	mov	r5, r3
   160c8:	mov	r6, r2
   160cc:	ldr	r1, [r4, #8]
   160d0:	cmp	r1, r0
   160d4:	bne	160f0 <__mempcpy_chk@plt+0x50b4>
   160d8:	ldrd	r0, [r4, #16]
   160dc:	cmp	r1, r0
   160e0:	bne	160f0 <__mempcpy_chk@plt+0x50b4>
   160e4:	ldr	r0, [r4, #36]	; 0x24
   160e8:	cmp	r0, #0
   160ec:	beq	16108 <__mempcpy_chk@plt+0x50cc>
   160f0:	mov	r0, r4
   160f4:	mov	r2, r6
   160f8:	mov	r3, r5
   160fc:	sub	sp, fp, #16
   16100:	pop	{r4, r5, r6, r7, fp, lr}
   16104:	b	10fc4 <fseeko64@plt>
   16108:	ldr	r7, [fp, #8]
   1610c:	mov	r0, r4
   16110:	bl	10f94 <fileno@plt>
   16114:	mov	r2, r6
   16118:	mov	r3, r5
   1611c:	str	r7, [sp]
   16120:	bl	10ea4 <lseek64@plt>
   16124:	and	r2, r0, r1
   16128:	cmn	r2, #1
   1612c:	beq	1614c <__mempcpy_chk@plt+0x5110>
   16130:	strd	r0, [r4, #80]	; 0x50
   16134:	ldr	r0, [r4]
   16138:	bic	r0, r0, #16
   1613c:	str	r0, [r4]
   16140:	mov	r0, #0
   16144:	sub	sp, fp, #16
   16148:	pop	{r4, r5, r6, r7, fp, pc}
   1614c:	mvn	r0, #0
   16150:	sub	sp, fp, #16
   16154:	pop	{r4, r5, r6, r7, fp, pc}
   16158:	push	{fp, lr}
   1615c:	mov	fp, sp
   16160:	mov	r0, #14
   16164:	bl	10ff4 <nl_langinfo@plt>
   16168:	movw	r1, #25700	; 0x6464
   1616c:	cmp	r0, #0
   16170:	movt	r1, #1
   16174:	movne	r1, r0
   16178:	movw	r0, #28166	; 0x6e06
   1617c:	ldrb	r2, [r1]
   16180:	movt	r0, #1
   16184:	cmp	r2, #0
   16188:	movne	r0, r1
   1618c:	pop	{fp, pc}
   16190:	push	{r4, r5, r6, r7, fp, lr}
   16194:	add	fp, sp, #16
   16198:	sub	sp, sp, #8
   1619c:	cmp	r0, #0
   161a0:	add	r5, sp, #4
   161a4:	mov	r7, r2
   161a8:	mov	r4, r1
   161ac:	movne	r5, r0
   161b0:	mov	r0, r5
   161b4:	bl	10ec8 <mbrtowc@plt>
   161b8:	mov	r6, r0
   161bc:	cmp	r7, #0
   161c0:	beq	161e8 <__mempcpy_chk@plt+0x51ac>
   161c4:	cmn	r6, #2
   161c8:	bcc	161e8 <__mempcpy_chk@plt+0x51ac>
   161cc:	mov	r0, #0
   161d0:	bl	16230 <__mempcpy_chk@plt+0x51f4>
   161d4:	cmp	r0, #0
   161d8:	bne	161e8 <__mempcpy_chk@plt+0x51ac>
   161dc:	ldrb	r0, [r4]
   161e0:	mov	r6, #1
   161e4:	str	r0, [r5]
   161e8:	mov	r0, r6
   161ec:	sub	sp, fp, #16
   161f0:	pop	{r4, r5, r6, r7, fp, pc}
   161f4:	cmp	r2, #0
   161f8:	beq	16228 <__mempcpy_chk@plt+0x51ec>
   161fc:	mvn	r3, #0
   16200:	udiv	r3, r3, r2
   16204:	cmp	r3, r1
   16208:	bcs	16228 <__mempcpy_chk@plt+0x51ec>
   1620c:	push	{fp, lr}
   16210:	mov	fp, sp
   16214:	bl	10f64 <__errno_location@plt>
   16218:	mov	r1, #12
   1621c:	str	r1, [r0]
   16220:	mov	r0, #0
   16224:	pop	{fp, pc}
   16228:	mul	r1, r2, r1
   1622c:	b	15e20 <__mempcpy_chk@plt+0x4de4>
   16230:	push	{r4, sl, fp, lr}
   16234:	add	fp, sp, #8
   16238:	sub	sp, sp, #264	; 0x108
   1623c:	add	r1, sp, #7
   16240:	movw	r2, #257	; 0x101
   16244:	bl	1629c <__mempcpy_chk@plt+0x5260>
   16248:	mov	r4, #0
   1624c:	cmp	r0, #0
   16250:	bne	16290 <__mempcpy_chk@plt+0x5254>
   16254:	movw	r1, #29162	; 0x71ea
   16258:	add	r0, sp, #7
   1625c:	mov	r2, #2
   16260:	movt	r1, #1
   16264:	bl	10f4c <bcmp@plt>
   16268:	cmp	r0, #0
   1626c:	beq	16290 <__mempcpy_chk@plt+0x5254>
   16270:	movw	r1, #29164	; 0x71ec
   16274:	add	r0, sp, #7
   16278:	mov	r2, #6
   1627c:	movt	r1, #1
   16280:	bl	10f4c <bcmp@plt>
   16284:	cmp	r0, #0
   16288:	mov	r4, r0
   1628c:	movwne	r4, #1
   16290:	mov	r0, r4
   16294:	sub	sp, fp, #8
   16298:	pop	{r4, sl, fp, pc}
   1629c:	push	{r4, r5, r6, r7, fp, lr}
   162a0:	add	fp, sp, #16
   162a4:	mov	r4, r1
   162a8:	mov	r1, #0
   162ac:	mov	r6, r2
   162b0:	bl	10fdc <setlocale@plt>
   162b4:	cmp	r0, #0
   162b8:	beq	162e8 <__mempcpy_chk@plt+0x52ac>
   162bc:	mov	r7, r0
   162c0:	bl	10f58 <strlen@plt>
   162c4:	cmp	r0, r6
   162c8:	bcs	16304 <__mempcpy_chk@plt+0x52c8>
   162cc:	add	r2, r0, #1
   162d0:	mov	r0, r4
   162d4:	mov	r1, r7
   162d8:	bl	10e38 <memcpy@plt>
   162dc:	mov	r5, #0
   162e0:	mov	r0, r5
   162e4:	pop	{r4, r5, r6, r7, fp, pc}
   162e8:	mov	r5, #22
   162ec:	cmp	r6, #0
   162f0:	beq	1632c <__mempcpy_chk@plt+0x52f0>
   162f4:	mov	r0, #0
   162f8:	strb	r0, [r4]
   162fc:	mov	r0, r5
   16300:	pop	{r4, r5, r6, r7, fp, pc}
   16304:	mov	r5, #34	; 0x22
   16308:	cmp	r6, #0
   1630c:	beq	1632c <__mempcpy_chk@plt+0x52f0>
   16310:	sub	r6, r6, #1
   16314:	mov	r0, r4
   16318:	mov	r1, r7
   1631c:	mov	r2, r6
   16320:	bl	10e38 <memcpy@plt>
   16324:	mov	r0, #0
   16328:	strb	r0, [r4, r6]
   1632c:	mov	r0, r5
   16330:	pop	{r4, r5, r6, r7, fp, pc}
   16334:	mov	r1, #0
   16338:	b	10fdc <setlocale@plt>
   1633c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16340:	mov	r7, r0
   16344:	ldr	r6, [pc, #72]	; 16394 <__mempcpy_chk@plt+0x5358>
   16348:	ldr	r5, [pc, #72]	; 16398 <__mempcpy_chk@plt+0x535c>
   1634c:	add	r6, pc, r6
   16350:	add	r5, pc, r5
   16354:	sub	r6, r6, r5
   16358:	mov	r8, r1
   1635c:	mov	r9, r2
   16360:	bl	10dac <calloc@plt-0x20>
   16364:	asrs	r6, r6, #2
   16368:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1636c:	mov	r4, #0
   16370:	add	r4, r4, #1
   16374:	ldr	r3, [r5], #4
   16378:	mov	r2, r9
   1637c:	mov	r1, r8
   16380:	mov	r0, r7
   16384:	blx	r3
   16388:	cmp	r6, r4
   1638c:	bne	16370 <__mempcpy_chk@plt+0x5334>
   16390:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16394:			; <UNDEFINED> instruction: 0x00011bb8
   16398:			; <UNDEFINED> instruction: 0x00011bb0
   1639c:	bx	lr
   163a0:	ldr	r3, [pc, #12]	; 163b4 <__mempcpy_chk@plt+0x5378>
   163a4:	mov	r1, #0
   163a8:	add	r3, pc, r3
   163ac:	ldr	r2, [r3]
   163b0:	b	10f70 <__cxa_atexit@plt>
   163b4:	andeq	r1, r1, ip, lsr sp

Disassembly of section .fini:

000163b8 <.fini>:
   163b8:	push	{r3, lr}
   163bc:	pop	{r3, pc}
