
../repos/vis/vis-digraph:     file format elf32-littlearm


Disassembly of section .init:

000105c4 <.init>:
   105c4:	push	{r3, lr}
   105c8:	bl	10998 <tcgetattr@plt+0x2e8>
   105cc:	pop	{r3, pc}

Disassembly of section .plt:

000105d0 <calloc@plt-0x14>:
   105d0:	push	{lr}		; (str lr, [sp, #-4]!)
   105d4:	ldr	lr, [pc, #4]	; 105e0 <calloc@plt-0x4>
   105d8:	add	lr, pc, lr
   105dc:	ldr	pc, [lr, #8]!
   105e0:	andeq	r4, r2, r4, asr #19

000105e4 <calloc@plt>:
   105e4:	add	ip, pc, #0, 12
   105e8:	add	ip, ip, #36, 20	; 0x24000
   105ec:	ldr	pc, [ip, #2500]!	; 0x9c4

000105f0 <strcmp@plt>:
   105f0:	add	ip, pc, #0, 12
   105f4:	add	ip, ip, #36, 20	; 0x24000
   105f8:	ldr	pc, [ip, #2492]!	; 0x9bc

000105fc <read@plt>:
   105fc:	add	ip, pc, #0, 12
   10600:	add	ip, ip, #36, 20	; 0x24000
   10604:	ldr	pc, [ip, #2484]!	; 0x9b4

00010608 <__stack_chk_fail@plt>:
   10608:	add	ip, pc, #0, 12
   1060c:	add	ip, ip, #36, 20	; 0x24000
   10610:	ldr	pc, [ip, #2476]!	; 0x9ac

00010614 <perror@plt>:
   10614:	add	ip, pc, #0, 12
   10618:	add	ip, ip, #36, 20	; 0x24000
   1061c:	ldr	pc, [ip, #2468]!	; 0x9a4

00010620 <putwchar@plt>:
   10620:	add	ip, pc, #0, 12
   10624:	add	ip, ip, #36, 20	; 0x24000
   10628:	ldr	pc, [ip, #2460]!	; 0x99c

0001062c <tcsetattr@plt>:
   1062c:	add	ip, pc, #0, 12
   10630:	add	ip, ip, #36, 20	; 0x24000
   10634:	ldr	pc, [ip, #2452]!	; 0x994

00010638 <__libc_start_main@plt>:
   10638:	add	ip, pc, #0, 12
   1063c:	add	ip, ip, #36, 20	; 0x24000
   10640:	ldr	pc, [ip, #2444]!	; 0x98c

00010644 <__gmon_start__@plt>:
   10644:	add	ip, pc, #0, 12
   10648:	add	ip, ip, #36, 20	; 0x24000
   1064c:	ldr	pc, [ip, #2436]!	; 0x984

00010650 <strlen@plt>:
   10650:	add	ip, pc, #0, 12
   10654:	add	ip, ip, #36, 20	; 0x24000
   10658:	ldr	pc, [ip, #2428]!	; 0x97c

0001065c <__errno_location@plt>:
   1065c:	add	ip, pc, #0, 12
   10660:	add	ip, ip, #36, 20	; 0x24000
   10664:	ldr	pc, [ip, #2420]!	; 0x974

00010668 <__fprintf_chk@plt>:
   10668:	add	ip, pc, #0, 12
   1066c:	add	ip, ip, #36, 20	; 0x24000
   10670:	ldr	pc, [ip, #2412]!	; 0x96c

00010674 <setlocale@plt>:
   10674:	add	ip, pc, #0, 12
   10678:	add	ip, ip, #36, 20	; 0x24000
   1067c:	ldr	pc, [ip, #2404]!	; 0x964

00010680 <__wprintf_chk@plt>:
   10680:	add	ip, pc, #0, 12
   10684:	add	ip, ip, #36, 20	; 0x24000
   10688:	ldr	pc, [ip, #2396]!	; 0x95c

0001068c <fputs@plt>:
   1068c:	add	ip, pc, #0, 12
   10690:	add	ip, ip, #36, 20	; 0x24000
   10694:	ldr	pc, [ip, #2388]!	; 0x954

00010698 <strncmp@plt>:
   10698:	add	ip, pc, #0, 12
   1069c:	add	ip, ip, #36, 20	; 0x24000
   106a0:	ldr	pc, [ip, #2380]!	; 0x94c

000106a4 <abort@plt>:
   106a4:	add	ip, pc, #0, 12
   106a8:	add	ip, ip, #36, 20	; 0x24000
   106ac:	ldr	pc, [ip, #2372]!	; 0x944

000106b0 <tcgetattr@plt>:
   106b0:	add	ip, pc, #0, 12
   106b4:	add	ip, ip, #36, 20	; 0x24000
   106b8:	ldr	pc, [ip, #2364]!	; 0x93c

Disassembly of section .text:

000106bc <.text>:
   106bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   106c0:	sub	sp, sp, #28
   106c4:	ldr	r7, [pc, #616]	; 10934 <tcgetattr@plt+0x284>
   106c8:	mov	r5, r0
   106cc:	mov	r6, r1
   106d0:	ldr	r3, [r7]
   106d4:	ldr	r1, [pc, #604]	; 10938 <tcgetattr@plt+0x288>
   106d8:	mov	r0, #6
   106dc:	str	r3, [sp, #20]
   106e0:	bl	10674 <setlocale@plt>
   106e4:	cmp	r5, #1
   106e8:	bne	10740 <tcgetattr@plt+0x90>
   106ec:	ldr	r4, [pc, #584]	; 1093c <tcgetattr@plt+0x28c>
   106f0:	ldr	r6, [pc, #584]	; 10940 <tcgetattr@plt+0x290>
   106f4:	ldrb	r3, [r4]
   106f8:	cmp	r3, #0
   106fc:	bne	1071c <tcgetattr@plt+0x6c>
   10700:	mov	r4, #0
   10704:	ldr	r2, [sp, #20]
   10708:	ldr	r3, [r7]
   1070c:	mov	r0, r4
   10710:	cmp	r2, r3
   10714:	beq	1092c <tcgetattr@plt+0x27c>
   10718:	bl	10608 <__stack_chk_fail@plt>
   1071c:	ldr	r3, [r4, #12]
   10720:	mov	r2, r4
   10724:	str	r3, [sp]
   10728:	mov	r1, r6
   1072c:	ldr	r3, [r4, #8]
   10730:	mov	r0, r5
   10734:	bl	10680 <__wprintf_chk@plt>
   10738:	add	r4, r4, #16
   1073c:	b	106f4 <tcgetattr@plt+0x44>
   10740:	ldr	r1, [pc, #508]	; 10944 <tcgetattr@plt+0x294>
   10744:	ldr	r0, [r6, #4]
   10748:	bl	105f0 <strcmp@plt>
   1074c:	subs	r4, r0, #0
   10750:	bne	10864 <tcgetattr@plt+0x1b4>
   10754:	ldr	r1, [pc, #492]	; 10948 <tcgetattr@plt+0x298>
   10758:	bl	106b0 <tcgetattr@plt>
   1075c:	ldr	lr, [pc, #484]	; 10948 <tcgetattr@plt+0x298>
   10760:	ldr	r5, [pc, #484]	; 1094c <tcgetattr@plt+0x29c>
   10764:	ldm	lr!, {r0, r1, r2, r3}
   10768:	mov	ip, r5
   1076c:	stmia	ip!, {r0, r1, r2, r3}
   10770:	ldm	lr!, {r0, r1, r2, r3}
   10774:	stmia	ip!, {r0, r1, r2, r3}
   10778:	ldm	lr!, {r0, r1, r2, r3}
   1077c:	stmia	ip!, {r0, r1, r2, r3}
   10780:	ldm	lr, {r0, r1, r2}
   10784:	ldr	r3, [r5]
   10788:	bic	r3, r3, #1504	; 0x5e0
   1078c:	bic	r3, r3, #10
   10790:	stm	ip, {r0, r1, r2}
   10794:	mov	r2, r5
   10798:	str	r3, [r5]
   1079c:	ldr	r3, [r5, #12]
   107a0:	mov	r1, r4
   107a4:	bic	r3, r3, #32768	; 0x8000
   107a8:	bic	r3, r3, #75	; 0x4b
   107ac:	str	r3, [r5, #12]
   107b0:	ldr	r3, [r5, #8]
   107b4:	mov	r0, r4
   107b8:	bic	r3, r3, #304	; 0x130
   107bc:	orr	r3, r3, #48	; 0x30
   107c0:	str	r3, [r5, #8]
   107c4:	mov	r3, #1
   107c8:	strb	r3, [r5, #23]
   107cc:	mov	r5, r4
   107d0:	bl	1062c <tcsetattr@plt>
   107d4:	str	r4, [sp, #12]
   107d8:	str	r4, [sp, #16]
   107dc:	add	r3, sp, #12
   107e0:	add	r8, r3, r5
   107e4:	mov	r9, #1
   107e8:	mov	sl, #0
   107ec:	mov	r2, r9
   107f0:	mov	r1, r8
   107f4:	mov	r0, sl
   107f8:	bl	105fc <read@plt>
   107fc:	cmn	r0, #1
   10800:	mov	r6, r0
   10804:	bne	108ec <tcgetattr@plt+0x23c>
   10808:	bl	1065c <__errno_location@plt>
   1080c:	ldr	r3, [r0]
   10810:	cmp	r3, #4
   10814:	beq	107ec <tcgetattr@plt+0x13c>
   10818:	bl	10a84 <tcgetattr@plt+0x3d4>
   1081c:	ldr	r3, [pc, #300]	; 10950 <tcgetattr@plt+0x2a0>
   10820:	ldr	r0, [pc, #300]	; 10954 <tcgetattr@plt+0x2a4>
   10824:	mov	r4, #3
   10828:	ldr	r1, [r3]
   1082c:	bl	1068c <fputs@plt>
   10830:	b	10704 <tcgetattr@plt+0x54>
   10834:	cmp	r0, #1
   10838:	bne	1084c <tcgetattr@plt+0x19c>
   1083c:	bl	10a84 <tcgetattr@plt+0x3d4>
   10840:	ldr	r0, [sp, #8]
   10844:	bl	10620 <putwchar@plt>
   10848:	b	10704 <tcgetattr@plt+0x54>
   1084c:	add	r5, r5, #1
   10850:	cmp	r5, #7
   10854:	bne	107dc <tcgetattr@plt+0x12c>
   10858:	bl	10a84 <tcgetattr@plt+0x3d4>
   1085c:	mov	r4, #1
   10860:	b	10704 <tcgetattr@plt+0x54>
   10864:	sub	r8, r5, #1
   10868:	mov	r1, #4
   1086c:	mov	r0, r8
   10870:	bl	105e4 <calloc@plt>
   10874:	subs	r9, r0, #0
   10878:	addne	r4, r6, #4
   1087c:	movne	sl, r9
   10880:	movne	r6, #1
   10884:	bne	108c0 <tcgetattr@plt+0x210>
   10888:	bl	10614 <perror@plt>
   1088c:	b	1085c <tcgetattr@plt+0x1ac>
   10890:	mov	fp, r4
   10894:	mov	r1, sl
   10898:	ldr	r0, [fp]
   1089c:	bl	10ac8 <tcgetattr@plt+0x418>
   108a0:	add	r4, r4, #4
   108a4:	cmp	r0, #0
   108a8:	ldreq	r3, [fp]
   108ac:	beq	10914 <tcgetattr@plt+0x264>
   108b0:	cmn	r0, #1
   108b4:	add	sl, sl, #4
   108b8:	beq	108e4 <tcgetattr@plt+0x234>
   108bc:	add	r6, r6, #1
   108c0:	cmp	r6, r5
   108c4:	blt	10890 <tcgetattr@plt+0x1e0>
   108c8:	mov	r4, #0
   108cc:	cmp	r4, r8
   108d0:	bge	10700 <tcgetattr@plt+0x50>
   108d4:	ldr	r0, [r9, r4, lsl #2]
   108d8:	bl	10620 <putwchar@plt>
   108dc:	add	r4, r4, #1
   108e0:	b	108cc <tcgetattr@plt+0x21c>
   108e4:	mov	r4, #2
   108e8:	b	10704 <tcgetattr@plt+0x54>
   108ec:	add	r1, sp, #8
   108f0:	add	r0, sp, #12
   108f4:	bl	10ac8 <tcgetattr@plt+0x418>
   108f8:	cmp	r0, #0
   108fc:	beq	1090c <tcgetattr@plt+0x25c>
   10900:	cmp	r6, #0
   10904:	cmneq	r0, #1
   10908:	bne	10834 <tcgetattr@plt+0x184>
   1090c:	bl	10a84 <tcgetattr@plt+0x3d4>
   10910:	add	r3, sp, #12
   10914:	ldr	r0, [pc, #52]	; 10950 <tcgetattr@plt+0x2a0>
   10918:	ldr	r2, [pc, #56]	; 10958 <tcgetattr@plt+0x2a8>
   1091c:	mov	r1, #1
   10920:	ldr	r0, [r0]
   10924:	bl	10668 <__fprintf_chk@plt>
   10928:	b	1085c <tcgetattr@plt+0x1ac>
   1092c:	add	sp, sp, #28
   10930:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10934:	andeq	r4, r3, r0, lsr #29
   10938:	andeq	r8, r1, r8, asr #4
   1093c:	andeq	r0, r1, r0, asr #23
   10940:	andeq	r8, r1, r4, asr r2
   10944:	andeq	r8, r1, r0, lsr r2
   10948:	andeq	r5, r3, r4, asr #32
   1094c:	andeq	r5, r3, r8
   10950:	andeq	r5, r3, r0
   10954:	andeq	r8, r1, r9, asr #4
   10958:	andeq	r8, r1, r2, lsr r2
   1095c:	mov	fp, #0
   10960:	mov	lr, #0
   10964:	pop	{r1}		; (ldr r1, [sp], #4)
   10968:	mov	r2, sp
   1096c:	push	{r2}		; (str r2, [sp, #-4]!)
   10970:	push	{r0}		; (str r0, [sp, #-4]!)
   10974:	ldr	ip, [pc, #16]	; 1098c <tcgetattr@plt+0x2dc>
   10978:	push	{ip}		; (str ip, [sp, #-4]!)
   1097c:	ldr	r0, [pc, #12]	; 10990 <tcgetattr@plt+0x2e0>
   10980:	ldr	r3, [pc, #12]	; 10994 <tcgetattr@plt+0x2e4>
   10984:	bl	10638 <__libc_start_main@plt>
   10988:	bl	106a4 <abort@plt>
   1098c:			; <UNDEFINED> instruction: 0x00010bb4
   10990:			; <UNDEFINED> instruction: 0x000106bc
   10994:	andeq	r0, r1, r4, asr fp
   10998:	ldr	r3, [pc, #20]	; 109b4 <tcgetattr@plt+0x304>
   1099c:	ldr	r2, [pc, #20]	; 109b8 <tcgetattr@plt+0x308>
   109a0:	add	r3, pc, r3
   109a4:	ldr	r2, [r3, r2]
   109a8:	cmp	r2, #0
   109ac:	bxeq	lr
   109b0:	b	10644 <__gmon_start__@plt>
   109b4:	strdeq	r4, [r2], -ip
   109b8:	andeq	r0, r0, r4, asr r0
   109bc:	ldr	r3, [pc, #28]	; 109e0 <tcgetattr@plt+0x330>
   109c0:	ldr	r0, [pc, #28]	; 109e4 <tcgetattr@plt+0x334>
   109c4:	sub	r3, r3, r0
   109c8:	cmp	r3, #6
   109cc:	bxls	lr
   109d0:	ldr	r3, [pc, #16]	; 109e8 <tcgetattr@plt+0x338>
   109d4:	cmp	r3, #0
   109d8:	bxeq	lr
   109dc:	bx	r3
   109e0:	andeq	r5, r3, r3
   109e4:	andeq	r5, r3, r0
   109e8:	andeq	r0, r0, r0
   109ec:	ldr	r1, [pc, #36]	; 10a18 <tcgetattr@plt+0x368>
   109f0:	ldr	r0, [pc, #36]	; 10a1c <tcgetattr@plt+0x36c>
   109f4:	sub	r1, r1, r0
   109f8:	asr	r1, r1, #2
   109fc:	add	r1, r1, r1, lsr #31
   10a00:	asrs	r1, r1, #1
   10a04:	bxeq	lr
   10a08:	ldr	r3, [pc, #16]	; 10a20 <tcgetattr@plt+0x370>
   10a0c:	cmp	r3, #0
   10a10:	bxeq	lr
   10a14:	bx	r3
   10a18:	andeq	r5, r3, r0
   10a1c:	andeq	r5, r3, r0
   10a20:	andeq	r0, r0, r0
   10a24:	push	{r4, lr}
   10a28:	ldr	r4, [pc, #24]	; 10a48 <tcgetattr@plt+0x398>
   10a2c:	ldrb	r3, [r4]
   10a30:	cmp	r3, #0
   10a34:	popne	{r4, pc}
   10a38:	bl	109bc <tcgetattr@plt+0x30c>
   10a3c:	mov	r3, #1
   10a40:	strb	r3, [r4]
   10a44:	pop	{r4, pc}
   10a48:	andeq	r5, r3, r4
   10a4c:	ldr	r0, [pc, #40]	; 10a7c <tcgetattr@plt+0x3cc>
   10a50:	ldr	r3, [r0]
   10a54:	cmp	r3, #0
   10a58:	bne	10a60 <tcgetattr@plt+0x3b0>
   10a5c:	b	109ec <tcgetattr@plt+0x33c>
   10a60:	ldr	r3, [pc, #24]	; 10a80 <tcgetattr@plt+0x3d0>
   10a64:	cmp	r3, #0
   10a68:	beq	10a5c <tcgetattr@plt+0x3ac>
   10a6c:	push	{r4, lr}
   10a70:	blx	r3
   10a74:	pop	{r4, lr}
   10a78:	b	109ec <tcgetattr@plt+0x33c>
   10a7c:	muleq	r3, ip, lr
   10a80:	andeq	r0, r0, r0
   10a84:	ldr	r3, [pc, #52]	; 10ac0 <tcgetattr@plt+0x410>
   10a88:	push	{r0, r1, r2, lr}
   10a8c:	ldr	r2, [r3]
   10a90:	str	r2, [sp, #4]
   10a94:	ldr	r2, [sp, #4]
   10a98:	ldr	r3, [r3]
   10a9c:	cmp	r2, r3
   10aa0:	beq	10aa8 <tcgetattr@plt+0x3f8>
   10aa4:	bl	10608 <__stack_chk_fail@plt>
   10aa8:	mov	r1, #0
   10aac:	ldr	r2, [pc, #16]	; 10ac4 <tcgetattr@plt+0x414>
   10ab0:	mov	r0, r1
   10ab4:	add	sp, sp, #12
   10ab8:	pop	{lr}		; (ldr lr, [sp], #4)
   10abc:	b	1062c <tcsetattr@plt>
   10ac0:	andeq	r4, r3, r0, lsr #29
   10ac4:	andeq	r5, r3, r4, asr #32
   10ac8:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   10acc:	mov	r7, r0
   10ad0:	ldr	r6, [pc, #116]	; 10b4c <tcgetattr@plt+0x49c>
   10ad4:	mov	r8, r1
   10ad8:	ldr	r4, [pc, #112]	; 10b50 <tcgetattr@plt+0x4a0>
   10adc:	ldr	r3, [r6]
   10ae0:	str	r3, [sp, #4]
   10ae4:	bl	10650 <strlen@plt>
   10ae8:	mov	r5, r0
   10aec:	ldrb	r0, [r4]
   10af0:	cmp	r0, #0
   10af4:	beq	10b28 <tcgetattr@plt+0x478>
   10af8:	mov	r2, r5
   10afc:	mov	r1, r4
   10b00:	mov	r0, r7
   10b04:	bl	10698 <strncmp@plt>
   10b08:	cmp	r0, #0
   10b0c:	bne	10b3c <tcgetattr@plt+0x48c>
   10b10:	ldr	r3, [r4, #8]
   10b14:	str	r3, [r8]
   10b18:	ldrb	r3, [r4, r5]
   10b1c:	cmp	r3, #0
   10b20:	moveq	r0, #1
   10b24:	mvnne	r0, #0
   10b28:	ldr	r2, [sp, #4]
   10b2c:	ldr	r3, [r6]
   10b30:	cmp	r2, r3
   10b34:	beq	10b44 <tcgetattr@plt+0x494>
   10b38:	bl	10608 <__stack_chk_fail@plt>
   10b3c:	add	r4, r4, #16
   10b40:	b	10aec <tcgetattr@plt+0x43c>
   10b44:	add	sp, sp, #8
   10b48:	pop	{r4, r5, r6, r7, r8, pc}
   10b4c:	andeq	r4, r3, r0, lsr #29
   10b50:	andeq	r0, r1, r0, asr #23
   10b54:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10b58:	mov	r7, r0
   10b5c:	ldr	r6, [pc, #72]	; 10bac <tcgetattr@plt+0x4fc>
   10b60:	ldr	r5, [pc, #72]	; 10bb0 <tcgetattr@plt+0x500>
   10b64:	add	r6, pc, r6
   10b68:	add	r5, pc, r5
   10b6c:	sub	r6, r6, r5
   10b70:	mov	r8, r1
   10b74:	mov	r9, r2
   10b78:	bl	105c4 <calloc@plt-0x20>
   10b7c:	asrs	r6, r6, #2
   10b80:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10b84:	mov	r4, #0
   10b88:	add	r4, r4, #1
   10b8c:	ldr	r3, [r5], #4
   10b90:	mov	r2, r9
   10b94:	mov	r1, r8
   10b98:	mov	r0, r7
   10b9c:	blx	r3
   10ba0:	cmp	r6, r4
   10ba4:	bne	10b88 <tcgetattr@plt+0x4d8>
   10ba8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10bac:	andeq	r4, r2, ip, lsr #6
   10bb0:	andeq	r4, r2, r4, lsr #6
   10bb4:	bx	lr

Disassembly of section .fini:

00010bb8 <.fini>:
   10bb8:	push	{r3, lr}
   10bbc:	pop	{r3, pc}
