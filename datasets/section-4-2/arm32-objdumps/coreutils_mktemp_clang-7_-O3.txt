
../repos/coreutils/src/mktemp:     file format elf32-littlearm


Disassembly of section .init:

00010e14 <.init>:
   10e14:	push	{r3, lr}
   10e18:	bl	110ec <__mempcpy_chk@plt+0x48>
   10e1c:	pop	{r3, pc}

Disassembly of section .plt:

00010e20 <calloc@plt-0x14>:
   10e20:	push	{lr}		; (str lr, [sp, #-4]!)
   10e24:	ldr	lr, [pc, #4]	; 10e30 <calloc@plt-0x4>
   10e28:	add	lr, pc, lr
   10e2c:	ldr	pc, [lr, #8]!
   10e30:	ldrdeq	r6, [r1], -r0

00010e34 <calloc@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #90112	; 0x16000
   10e3c:	ldr	pc, [ip, #464]!	; 0x1d0

00010e40 <fputs_unlocked@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #90112	; 0x16000
   10e48:	ldr	pc, [ip, #456]!	; 0x1c8

00010e4c <raise@plt>:
   10e4c:	add	ip, pc, #0, 12
   10e50:	add	ip, ip, #90112	; 0x16000
   10e54:	ldr	pc, [ip, #448]!	; 0x1c0

00010e58 <strcmp@plt>:
   10e58:	add	ip, pc, #0, 12
   10e5c:	add	ip, ip, #90112	; 0x16000
   10e60:	ldr	pc, [ip, #440]!	; 0x1b8

00010e64 <fflush@plt>:
   10e64:	add	ip, pc, #0, 12
   10e68:	add	ip, ip, #90112	; 0x16000
   10e6c:	ldr	pc, [ip, #432]!	; 0x1b0

00010e70 <free@plt>:
   10e70:	add	ip, pc, #0, 12
   10e74:	add	ip, ip, #90112	; 0x16000
   10e78:	ldr	pc, [ip, #424]!	; 0x1a8

00010e7c <clock_gettime@plt>:
   10e7c:	add	ip, pc, #0, 12
   10e80:	add	ip, ip, #90112	; 0x16000
   10e84:	ldr	pc, [ip, #416]!	; 0x1a0

00010e88 <_exit@plt>:
   10e88:	add	ip, pc, #0, 12
   10e8c:	add	ip, ip, #90112	; 0x16000
   10e90:	ldr	pc, [ip, #408]!	; 0x198

00010e94 <memcpy@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #90112	; 0x16000
   10e9c:	ldr	pc, [ip, #400]!	; 0x190

00010ea0 <mbsinit@plt>:
   10ea0:	add	ip, pc, #0, 12
   10ea4:	add	ip, ip, #90112	; 0x16000
   10ea8:	ldr	pc, [ip, #392]!	; 0x188

00010eac <memcmp@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #90112	; 0x16000
   10eb4:	ldr	pc, [ip, #384]!	; 0x180

00010eb8 <dcgettext@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #90112	; 0x16000
   10ec0:	ldr	pc, [ip, #376]!	; 0x178

00010ec4 <realloc@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #90112	; 0x16000
   10ecc:	ldr	pc, [ip, #368]!	; 0x170

00010ed0 <textdomain@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #90112	; 0x16000
   10ed8:	ldr	pc, [ip, #360]!	; 0x168

00010edc <iswprint@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #90112	; 0x16000
   10ee4:	ldr	pc, [ip, #352]!	; 0x160

00010ee8 <fwrite@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #90112	; 0x16000
   10ef0:	ldr	pc, [ip, #344]!	; 0x158

00010ef4 <lseek64@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #90112	; 0x16000
   10efc:	ldr	pc, [ip, #336]!	; 0x150

00010f00 <__ctype_get_mb_cur_max@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #90112	; 0x16000
   10f08:	ldr	pc, [ip, #328]!	; 0x148

00010f0c <__fpending@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #90112	; 0x16000
   10f14:	ldr	pc, [ip, #320]!	; 0x140

00010f18 <mbrtowc@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #90112	; 0x16000
   10f20:	ldr	pc, [ip, #312]!	; 0x138

00010f24 <error@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #90112	; 0x16000
   10f2c:	ldr	pc, [ip, #304]!	; 0x130

00010f30 <open64@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #90112	; 0x16000
   10f38:	ldr	pc, [ip, #296]!	; 0x128

00010f3c <getenv@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #90112	; 0x16000
   10f44:	ldr	pc, [ip, #288]!	; 0x120

00010f48 <puts@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #90112	; 0x16000
   10f50:	ldr	pc, [ip, #280]!	; 0x118

00010f54 <malloc@plt>:
   10f54:	add	ip, pc, #0, 12
   10f58:	add	ip, ip, #90112	; 0x16000
   10f5c:	ldr	pc, [ip, #272]!	; 0x110

00010f60 <__libc_start_main@plt>:
   10f60:	add	ip, pc, #0, 12
   10f64:	add	ip, ip, #90112	; 0x16000
   10f68:	ldr	pc, [ip, #264]!	; 0x108

00010f6c <__freading@plt>:
   10f6c:	add	ip, pc, #0, 12
   10f70:	add	ip, ip, #90112	; 0x16000
   10f74:	ldr	pc, [ip, #256]!	; 0x100

00010f78 <__gmon_start__@plt>:
   10f78:	add	ip, pc, #0, 12
   10f7c:	add	ip, ip, #90112	; 0x16000
   10f80:	ldr	pc, [ip, #248]!	; 0xf8

00010f84 <getopt_long@plt>:
   10f84:	add	ip, pc, #0, 12
   10f88:	add	ip, ip, #90112	; 0x16000
   10f8c:	ldr	pc, [ip, #240]!	; 0xf0

00010f90 <__ctype_b_loc@plt>:
   10f90:	add	ip, pc, #0, 12
   10f94:	add	ip, ip, #90112	; 0x16000
   10f98:	ldr	pc, [ip, #232]!	; 0xe8

00010f9c <exit@plt>:
   10f9c:	add	ip, pc, #0, 12
   10fa0:	add	ip, ip, #90112	; 0x16000
   10fa4:	ldr	pc, [ip, #224]!	; 0xe0

00010fa8 <strlen@plt>:
   10fa8:	add	ip, pc, #0, 12
   10fac:	add	ip, ip, #90112	; 0x16000
   10fb0:	ldr	pc, [ip, #216]!	; 0xd8

00010fb4 <__errno_location@plt>:
   10fb4:	add	ip, pc, #0, 12
   10fb8:	add	ip, ip, #90112	; 0x16000
   10fbc:	ldr	pc, [ip, #208]!	; 0xd0

00010fc0 <__cxa_atexit@plt>:
   10fc0:	add	ip, pc, #0, 12
   10fc4:	add	ip, ip, #90112	; 0x16000
   10fc8:	ldr	pc, [ip, #200]!	; 0xc8

00010fcc <mkdir@plt>:
   10fcc:	add	ip, pc, #0, 12
   10fd0:	add	ip, ip, #90112	; 0x16000
   10fd4:	ldr	pc, [ip, #192]!	; 0xc0

00010fd8 <memset@plt>:
   10fd8:	add	ip, pc, #0, 12
   10fdc:	add	ip, ip, #90112	; 0x16000
   10fe0:	ldr	pc, [ip, #184]!	; 0xb8

00010fe4 <__printf_chk@plt>:
   10fe4:	add	ip, pc, #0, 12
   10fe8:	add	ip, ip, #90112	; 0x16000
   10fec:	ldr	pc, [ip, #176]!	; 0xb0

00010ff0 <fileno@plt>:
   10ff0:	add	ip, pc, #0, 12
   10ff4:	add	ip, ip, #90112	; 0x16000
   10ff8:	ldr	pc, [ip, #168]!	; 0xa8

00010ffc <__fprintf_chk@plt>:
   10ffc:	add	ip, pc, #0, 12
   11000:	add	ip, ip, #90112	; 0x16000
   11004:	ldr	pc, [ip, #160]!	; 0xa0

00011008 <fclose@plt>:
   11008:	add	ip, pc, #0, 12
   1100c:	add	ip, ip, #90112	; 0x16000
   11010:	ldr	pc, [ip, #152]!	; 0x98

00011014 <fseeko64@plt>:
   11014:	add	ip, pc, #0, 12
   11018:	add	ip, ip, #90112	; 0x16000
   1101c:	ldr	pc, [ip, #144]!	; 0x90

00011020 <setlocale@plt>:
   11020:	add	ip, pc, #0, 12
   11024:	add	ip, ip, #90112	; 0x16000
   11028:	ldr	pc, [ip, #136]!	; 0x88

0001102c <strrchr@plt>:
   1102c:	add	ip, pc, #0, 12
   11030:	add	ip, ip, #90112	; 0x16000
   11034:	ldr	pc, [ip, #128]!	; 0x80

00011038 <nl_langinfo@plt>:
   11038:	add	ip, pc, #0, 12
   1103c:	add	ip, ip, #90112	; 0x16000
   11040:	ldr	pc, [ip, #120]!	; 0x78

00011044 <remove@plt>:
   11044:	add	ip, pc, #0, 12
   11048:	add	ip, ip, #90112	; 0x16000
   1104c:	ldr	pc, [ip, #112]!	; 0x70

00011050 <bindtextdomain@plt>:
   11050:	add	ip, pc, #0, 12
   11054:	add	ip, ip, #90112	; 0x16000
   11058:	ldr	pc, [ip, #104]!	; 0x68

0001105c <getrandom@plt>:
   1105c:	add	ip, pc, #0, 12
   11060:	add	ip, ip, #90112	; 0x16000
   11064:	ldr	pc, [ip, #96]!	; 0x60

00011068 <strncmp@plt>:
   11068:	add	ip, pc, #0, 12
   1106c:	add	ip, ip, #90112	; 0x16000
   11070:	ldr	pc, [ip, #88]!	; 0x58

00011074 <abort@plt>:
   11074:	add	ip, pc, #0, 12
   11078:	add	ip, ip, #90112	; 0x16000
   1107c:	ldr	pc, [ip, #80]!	; 0x50

00011080 <close@plt>:
   11080:	add	ip, pc, #0, 12
   11084:	add	ip, ip, #90112	; 0x16000
   11088:	ldr	pc, [ip, #72]!	; 0x48

0001108c <__lxstat64@plt>:
   1108c:	add	ip, pc, #0, 12
   11090:	add	ip, ip, #90112	; 0x16000
   11094:	ldr	pc, [ip, #64]!	; 0x40

00011098 <strspn@plt>:
   11098:	add	ip, pc, #0, 12
   1109c:	add	ip, ip, #90112	; 0x16000
   110a0:	ldr	pc, [ip, #56]!	; 0x38

000110a4 <__mempcpy_chk@plt>:
   110a4:	add	ip, pc, #0, 12
   110a8:	add	ip, ip, #90112	; 0x16000
   110ac:	ldr	pc, [ip, #48]!	; 0x30

Disassembly of section .text:

000110b0 <.text>:
   110b0:	mov	fp, #0
   110b4:	mov	lr, #0
   110b8:	pop	{r1}		; (ldr r1, [sp], #4)
   110bc:	mov	r2, sp
   110c0:	push	{r2}		; (str r2, [sp, #-4]!)
   110c4:	push	{r0}		; (str r0, [sp, #-4]!)
   110c8:	ldr	ip, [pc, #16]	; 110e0 <__mempcpy_chk@plt+0x3c>
   110cc:	push	{ip}		; (str ip, [sp, #-4]!)
   110d0:	ldr	r0, [pc, #12]	; 110e4 <__mempcpy_chk@plt+0x40>
   110d4:	ldr	r3, [pc, #12]	; 110e8 <__mempcpy_chk@plt+0x44>
   110d8:	bl	10f60 <__libc_start_main@plt>
   110dc:	bl	11074 <abort@plt>
   110e0:	andeq	r5, r1, ip, asr r5
   110e4:	andeq	r1, r1, r0, lsl #9
   110e8:	strdeq	r5, [r1], -ip
   110ec:	ldr	r3, [pc, #20]	; 11108 <__mempcpy_chk@plt+0x64>
   110f0:	ldr	r2, [pc, #20]	; 1110c <__mempcpy_chk@plt+0x68>
   110f4:	add	r3, pc, r3
   110f8:	ldr	r2, [r3, r2]
   110fc:	cmp	r2, #0
   11100:	bxeq	lr
   11104:	b	10f78 <__gmon_start__@plt>
   11108:	andeq	r5, r1, r4, lsl #30
   1110c:	andeq	r0, r0, r0, ror #1
   11110:	ldr	r0, [pc, #24]	; 11130 <__mempcpy_chk@plt+0x8c>
   11114:	ldr	r3, [pc, #24]	; 11134 <__mempcpy_chk@plt+0x90>
   11118:	cmp	r3, r0
   1111c:	bxeq	lr
   11120:	ldr	r3, [pc, #16]	; 11138 <__mempcpy_chk@plt+0x94>
   11124:	cmp	r3, #0
   11128:	bxeq	lr
   1112c:	bx	r3
   11130:	andeq	r7, r2, r8, lsr r1
   11134:	andeq	r7, r2, r8, lsr r1
   11138:	andeq	r0, r0, r0
   1113c:	ldr	r0, [pc, #36]	; 11168 <__mempcpy_chk@plt+0xc4>
   11140:	ldr	r1, [pc, #36]	; 1116c <__mempcpy_chk@plt+0xc8>
   11144:	sub	r1, r1, r0
   11148:	asr	r1, r1, #2
   1114c:	add	r1, r1, r1, lsr #31
   11150:	asrs	r1, r1, #1
   11154:	bxeq	lr
   11158:	ldr	r3, [pc, #16]	; 11170 <__mempcpy_chk@plt+0xcc>
   1115c:	cmp	r3, #0
   11160:	bxeq	lr
   11164:	bx	r3
   11168:	andeq	r7, r2, r8, lsr r1
   1116c:	andeq	r7, r2, r8, lsr r1
   11170:	andeq	r0, r0, r0
   11174:	push	{r4, lr}
   11178:	ldr	r4, [pc, #24]	; 11198 <__mempcpy_chk@plt+0xf4>
   1117c:	ldrb	r3, [r4]
   11180:	cmp	r3, #0
   11184:	popne	{r4, pc}
   11188:	bl	11110 <__mempcpy_chk@plt+0x6c>
   1118c:	mov	r3, #1
   11190:	strb	r3, [r4]
   11194:	pop	{r4, pc}
   11198:	andeq	r7, r2, r4, asr r1
   1119c:	b	1113c <__mempcpy_chk@plt+0x98>
   111a0:	push	{fp, lr}
   111a4:	mov	fp, sp
   111a8:	sub	sp, sp, #56	; 0x38
   111ac:	mov	r4, r0
   111b0:	cmp	r0, #0
   111b4:	bne	1143c <__mempcpy_chk@plt+0x398>
   111b8:	movw	r1, #21931	; 0x55ab
   111bc:	mov	r0, #0
   111c0:	mov	r2, #5
   111c4:	movt	r1, #1
   111c8:	bl	10eb8 <dcgettext@plt>
   111cc:	mov	r1, r0
   111d0:	movw	r0, #29024	; 0x7160
   111d4:	movt	r0, #2
   111d8:	ldr	r2, [r0]
   111dc:	mov	r0, #1
   111e0:	bl	10fe4 <__printf_chk@plt>
   111e4:	movw	r1, #21965	; 0x55cd
   111e8:	mov	r0, #0
   111ec:	mov	r2, #5
   111f0:	movt	r1, #1
   111f4:	bl	10eb8 <dcgettext@plt>
   111f8:	movw	r7, #29004	; 0x714c
   111fc:	movt	r7, #2
   11200:	ldr	r1, [r7]
   11204:	bl	10e40 <fputs_unlocked@plt>
   11208:	movw	r1, #22176	; 0x56a0
   1120c:	mov	r0, #0
   11210:	mov	r2, #5
   11214:	movt	r1, #1
   11218:	bl	10eb8 <dcgettext@plt>
   1121c:	ldr	r1, [r7]
   11220:	bl	10e40 <fputs_unlocked@plt>
   11224:	ldr	r1, [r7]
   11228:	movw	r0, #24034	; 0x5de2
   1122c:	movt	r0, #1
   11230:	bl	10e40 <fputs_unlocked@plt>
   11234:	movw	r1, #22250	; 0x56ea
   11238:	mov	r0, #0
   1123c:	mov	r2, #5
   11240:	movt	r1, #1
   11244:	bl	10eb8 <dcgettext@plt>
   11248:	ldr	r1, [r7]
   1124c:	bl	10e40 <fputs_unlocked@plt>
   11250:	movw	r1, #22454	; 0x57b6
   11254:	mov	r0, #0
   11258:	mov	r2, #5
   1125c:	movt	r1, #1
   11260:	bl	10eb8 <dcgettext@plt>
   11264:	ldr	r1, [r7]
   11268:	bl	10e40 <fputs_unlocked@plt>
   1126c:	movw	r1, #22610	; 0x5852
   11270:	mov	r0, #0
   11274:	mov	r2, #5
   11278:	movt	r1, #1
   1127c:	bl	10eb8 <dcgettext@plt>
   11280:	ldr	r1, [r7]
   11284:	bl	10e40 <fputs_unlocked@plt>
   11288:	movw	r1, #22973	; 0x59bd
   1128c:	mov	r0, #0
   11290:	mov	r2, #5
   11294:	movt	r1, #1
   11298:	bl	10eb8 <dcgettext@plt>
   1129c:	ldr	r1, [r7]
   112a0:	bl	10e40 <fputs_unlocked@plt>
   112a4:	movw	r1, #23198	; 0x5a9e
   112a8:	mov	r0, #0
   112ac:	mov	r2, #5
   112b0:	movt	r1, #1
   112b4:	bl	10eb8 <dcgettext@plt>
   112b8:	ldr	r1, [r7]
   112bc:	bl	10e40 <fputs_unlocked@plt>
   112c0:	movw	r1, #23243	; 0x5acb
   112c4:	mov	r0, #0
   112c8:	mov	r2, #5
   112cc:	movt	r1, #1
   112d0:	bl	10eb8 <dcgettext@plt>
   112d4:	ldr	r1, [r7]
   112d8:	bl	10e40 <fputs_unlocked@plt>
   112dc:	movw	r0, #24232	; 0x5ea8
   112e0:	mov	r2, #48	; 0x30
   112e4:	mov	r6, sp
   112e8:	movw	r5, #23297	; 0x5b01
   112ec:	movt	r0, #1
   112f0:	movt	r5, #1
   112f4:	add	r1, r0, #32
   112f8:	add	r3, r0, #16
   112fc:	vld1.64	{d18-d19}, [r0], r2
   11300:	vld1.64	{d16-d17}, [r1]
   11304:	vld1.64	{d20-d21}, [r3]
   11308:	add	r1, r6, #32
   1130c:	vldr	d22, [r0]
   11310:	add	r0, r6, #16
   11314:	vst1.64	{d16-d17}, [r1]
   11318:	movw	r1, #23725	; 0x5cad
   1131c:	vst1.64	{d20-d21}, [r0]
   11320:	mov	r0, r6
   11324:	vst1.64	{d18-d19}, [r0], r2
   11328:	movt	r1, #1
   1132c:	vstr	d22, [r0]
   11330:	mov	r0, r5
   11334:	bl	10e58 <strcmp@plt>
   11338:	cmp	r0, #0
   1133c:	ldrne	r1, [r6, #8]!
   11340:	cmpne	r1, #0
   11344:	bne	11330 <__mempcpy_chk@plt+0x28c>
   11348:	ldr	r6, [r6, #4]
   1134c:	movw	r1, #23820	; 0x5d0c
   11350:	mov	r0, #0
   11354:	mov	r2, #5
   11358:	movt	r1, #1
   1135c:	bl	10eb8 <dcgettext@plt>
   11360:	movw	r2, #23336	; 0x5b28
   11364:	movw	r3, #23843	; 0x5d23
   11368:	mov	r1, r0
   1136c:	mov	r0, #1
   11370:	movt	r2, #1
   11374:	movt	r3, #1
   11378:	bl	10fe4 <__printf_chk@plt>
   1137c:	cmp	r6, #0
   11380:	mov	r0, #5
   11384:	mov	r1, #0
   11388:	moveq	r6, r5
   1138c:	bl	11020 <setlocale@plt>
   11390:	cmp	r0, #0
   11394:	beq	113cc <__mempcpy_chk@plt+0x328>
   11398:	movw	r1, #23883	; 0x5d4b
   1139c:	mov	r2, #3
   113a0:	movt	r1, #1
   113a4:	bl	11068 <strncmp@plt>
   113a8:	cmp	r0, #0
   113ac:	beq	113cc <__mempcpy_chk@plt+0x328>
   113b0:	movw	r1, #23887	; 0x5d4f
   113b4:	mov	r0, #0
   113b8:	mov	r2, #5
   113bc:	movt	r1, #1
   113c0:	bl	10eb8 <dcgettext@plt>
   113c4:	ldr	r1, [r7]
   113c8:	bl	10e40 <fputs_unlocked@plt>
   113cc:	movw	r1, #23958	; 0x5d96
   113d0:	mov	r0, #0
   113d4:	mov	r2, #5
   113d8:	movt	r1, #1
   113dc:	bl	10eb8 <dcgettext@plt>
   113e0:	movw	r2, #23843	; 0x5d23
   113e4:	mov	r1, r0
   113e8:	mov	r0, #1
   113ec:	mov	r3, r5
   113f0:	movt	r2, #1
   113f4:	bl	10fe4 <__printf_chk@plt>
   113f8:	movw	r1, #23985	; 0x5db1
   113fc:	mov	r0, #0
   11400:	mov	r2, #5
   11404:	movt	r1, #1
   11408:	bl	10eb8 <dcgettext@plt>
   1140c:	movw	r3, #24035	; 0x5de3
   11410:	mov	r1, r0
   11414:	movw	r0, #23753	; 0x5cc9
   11418:	cmp	r6, r5
   1141c:	mov	r2, r6
   11420:	movt	r0, #1
   11424:	movt	r3, #1
   11428:	moveq	r3, r0
   1142c:	mov	r0, #1
   11430:	bl	10fe4 <__printf_chk@plt>
   11434:	mov	r0, r4
   11438:	bl	10f9c <exit@plt>
   1143c:	movw	r0, #29000	; 0x7148
   11440:	movw	r1, #21892	; 0x5584
   11444:	mov	r2, #5
   11448:	movt	r0, #2
   1144c:	movt	r1, #1
   11450:	ldr	r5, [r0]
   11454:	mov	r0, #0
   11458:	bl	10eb8 <dcgettext@plt>
   1145c:	mov	r2, r0
   11460:	movw	r0, #29024	; 0x7160
   11464:	mov	r1, #1
   11468:	movt	r0, #2
   1146c:	ldr	r3, [r0]
   11470:	mov	r0, r5
   11474:	bl	10ffc <__fprintf_chk@plt>
   11478:	mov	r0, r4
   1147c:	bl	10f9c <exit@plt>
   11480:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11484:	add	fp, sp, #28
   11488:	sub	sp, sp, #36	; 0x24
   1148c:	mov	r5, r0
   11490:	ldr	r0, [r1]
   11494:	mov	r4, r1
   11498:	bl	120a8 <__mempcpy_chk@plt+0x1004>
   1149c:	movw	r1, #24035	; 0x5de3
   114a0:	mov	r0, #6
   114a4:	movt	r1, #1
   114a8:	bl	11020 <setlocale@plt>
   114ac:	movw	r6, #23340	; 0x5b2c
   114b0:	movw	r1, #23304	; 0x5b08
   114b4:	movt	r6, #1
   114b8:	movt	r1, #1
   114bc:	mov	r0, r6
   114c0:	bl	11050 <bindtextdomain@plt>
   114c4:	mov	r0, r6
   114c8:	bl	10ed0 <textdomain@plt>
   114cc:	movw	r0, #7028	; 0x1b74
   114d0:	movt	r0, #1
   114d4:	bl	15560 <__mempcpy_chk@plt+0x44bc>
   114d8:	mov	r0, #0
   114dc:	movw	r7, #23328	; 0x5b20
   114e0:	movw	r6, #24104	; 0x5e28
   114e4:	mov	r1, #0
   114e8:	mov	r9, #0
   114ec:	mov	r8, #0
   114f0:	str	r0, [sp, #24]
   114f4:	mov	r0, #0
   114f8:	movt	r7, #1
   114fc:	movt	r6, #1
   11500:	str	r1, [sp, #20]
   11504:	str	r0, [sp, #16]
   11508:	mov	r0, #0
   1150c:	str	r0, [sp, #28]
   11510:	mov	r0, #0
   11514:	str	r0, [sp, #32]
   11518:	mov	r0, #0
   1151c:	b	11524 <__mempcpy_chk@plt+0x480>
   11520:	mov	r0, sl
   11524:	mov	sl, r0
   11528:	mov	r0, r5
   1152c:	mov	r1, r4
   11530:	mov	r2, r7
   11534:	mov	r3, r6
   11538:	str	r9, [sp]
   1153c:	bl	10f84 <getopt_long@plt>
   11540:	cmp	r0, #85	; 0x55
   11544:	ble	11638 <__mempcpy_chk@plt+0x594>
   11548:	sub	r1, r0, #86	; 0x56
   1154c:	cmp	r1, #31
   11550:	bhi	11614 <__mempcpy_chk@plt+0x570>
   11554:	add	r2, pc, #4
   11558:	mov	r0, #1
   1155c:	ldr	pc, [r2, r1, lsl #2]
   11560:	andeq	r1, r1, r8, ror #20
   11564:	andeq	r1, r1, ip, asr #21
   11568:	andeq	r1, r1, ip, asr #21
   1156c:	andeq	r1, r1, ip, asr #21
   11570:	andeq	r1, r1, ip, asr #21
   11574:	andeq	r1, r1, ip, asr #21
   11578:	andeq	r1, r1, ip, asr #21
   1157c:	andeq	r1, r1, ip, asr #21
   11580:	andeq	r1, r1, ip, asr #21
   11584:	andeq	r1, r1, ip, asr #21
   11588:	andeq	r1, r1, ip, asr #21
   1158c:	andeq	r1, r1, ip, asr #21
   11590:	andeq	r1, r1, ip, asr #21
   11594:	andeq	r1, r1, ip, asr #21
   11598:	andeq	r1, r1, r0, ror #11
   1159c:	andeq	r1, r1, ip, asr #21
   115a0:	andeq	r1, r1, ip, asr #21
   115a4:	andeq	r1, r1, ip, asr #21
   115a8:	andeq	r1, r1, ip, asr #21
   115ac:	andeq	r1, r1, ip, asr #21
   115b0:	andeq	r1, r1, ip, asr #21
   115b4:	andeq	r1, r1, ip, asr #21
   115b8:	andeq	r1, r1, ip, asr #21
   115bc:	andeq	r1, r1, ip, asr #21
   115c0:	andeq	r1, r1, ip, asr #21
   115c4:	andeq	r1, r1, ip, asr #21
   115c8:	strdeq	r1, [r1], -r8
   115cc:	andeq	r1, r1, r4, lsr #10
   115d0:	andeq	r1, r1, ip, asr #21
   115d4:	andeq	r1, r1, ip, asr #21
   115d8:	andeq	r1, r1, ip, ror #11
   115dc:	andeq	r1, r1, ip, lsr #12
   115e0:	mov	r0, #1
   115e4:	str	r0, [sp, #24]
   115e8:	b	11520 <__mempcpy_chk@plt+0x47c>
   115ec:	mov	r0, #1
   115f0:	str	r0, [sp, #16]
   115f4:	b	11608 <__mempcpy_chk@plt+0x564>
   115f8:	movw	r0, #29008	; 0x7150
   115fc:	movt	r0, #2
   11600:	ldr	r0, [r0]
   11604:	str	r0, [sp, #20]
   11608:	mov	r0, #1
   1160c:	str	r0, [sp, #32]
   11610:	b	11520 <__mempcpy_chk@plt+0x47c>
   11614:	cmp	r0, #256	; 0x100
   11618:	bne	11acc <__mempcpy_chk@plt+0xa28>
   1161c:	movw	r0, #29008	; 0x7150
   11620:	movt	r0, #2
   11624:	ldr	r8, [r0]
   11628:	b	11520 <__mempcpy_chk@plt+0x47c>
   1162c:	mov	r0, #1
   11630:	str	r0, [sp, #28]
   11634:	b	11520 <__mempcpy_chk@plt+0x47c>
   11638:	cmn	r0, #1
   1163c:	bne	11a60 <__mempcpy_chk@plt+0x9bc>
   11640:	movw	r0, #28992	; 0x7140
   11644:	movt	r0, #2
   11648:	ldr	r0, [r0]
   1164c:	sub	r1, r5, r0
   11650:	cmp	r1, #2
   11654:	bcs	11b14 <__mempcpy_chk@plt+0xa70>
   11658:	cmp	r1, #0
   1165c:	beq	1179c <__mempcpy_chk@plt+0x6f8>
   11660:	ldr	r6, [r4, r0, lsl #2]
   11664:	cmp	r8, #0
   11668:	beq	117b4 <__mempcpy_chk@plt+0x710>
   1166c:	mov	r0, r6
   11670:	bl	10fa8 <strlen@plt>
   11674:	cmp	r0, #0
   11678:	beq	11b08 <__mempcpy_chk@plt+0xa64>
   1167c:	mov	r7, r0
   11680:	add	r0, r6, r0
   11684:	ldrb	r0, [r0, #-1]
   11688:	cmp	r0, #88	; 0x58
   1168c:	bne	11b08 <__mempcpy_chk@plt+0xa64>
   11690:	mov	r0, r8
   11694:	bl	10fa8 <strlen@plt>
   11698:	add	r5, r0, #1
   1169c:	mov	r9, r0
   116a0:	add	r0, r5, r7
   116a4:	bl	14b60 <__mempcpy_chk@plt+0x3abc>
   116a8:	mov	r1, r6
   116ac:	mov	r2, r7
   116b0:	mov	r4, r0
   116b4:	bl	10e94 <memcpy@plt>
   116b8:	add	r6, r4, r7
   116bc:	mov	r1, r8
   116c0:	mov	r2, r5
   116c4:	mov	r0, r6
   116c8:	bl	10e94 <memcpy@plt>
   116cc:	cmp	r9, #0
   116d0:	beq	116e4 <__mempcpy_chk@plt+0x640>
   116d4:	mov	r0, r6
   116d8:	bl	11bb8 <__mempcpy_chk@plt+0xb14>
   116dc:	cmp	r0, r6
   116e0:	bne	11b40 <__mempcpy_chk@plt+0xa9c>
   116e4:	subs	r0, r6, r4
   116e8:	beq	11ad4 <__mempcpy_chk@plt+0xa30>
   116ec:	sub	r0, r4, r6
   116f0:	sub	r1, r6, #1
   116f4:	mov	r5, #0
   116f8:	ldrb	r2, [r1, -r5]
   116fc:	cmp	r2, #88	; 0x58
   11700:	bne	11710 <__mempcpy_chk@plt+0x66c>
   11704:	add	r5, r5, #1
   11708:	adds	r2, r0, r5
   1170c:	bne	116f8 <__mempcpy_chk@plt+0x654>
   11710:	cmp	r5, #2
   11714:	bls	11ad4 <__mempcpy_chk@plt+0xa30>
   11718:	ldr	r0, [sp, #32]
   1171c:	tst	r0, #1
   11720:	beq	11794 <__mempcpy_chk@plt+0x6f0>
   11724:	ldr	r0, [sp, #16]
   11728:	tst	r0, #1
   1172c:	beq	117d8 <__mempcpy_chk@plt+0x734>
   11730:	movw	r0, #23509	; 0x5bd5
   11734:	movt	r0, #1
   11738:	bl	10f3c <getenv@plt>
   1173c:	ldr	r1, [sp, #20]
   11740:	cmp	r0, #0
   11744:	beq	11758 <__mempcpy_chk@plt+0x6b4>
   11748:	mov	r6, r0
   1174c:	ldrb	r0, [r0]
   11750:	cmp	r0, #0
   11754:	bne	11778 <__mempcpy_chk@plt+0x6d4>
   11758:	cmp	r1, #0
   1175c:	beq	11770 <__mempcpy_chk@plt+0x6cc>
   11760:	ldrb	r0, [r1]
   11764:	mov	r6, r1
   11768:	cmp	r0, #0
   1176c:	bne	11778 <__mempcpy_chk@plt+0x6d4>
   11770:	movw	r6, #23516	; 0x5bdc
   11774:	movt	r6, #1
   11778:	mov	r0, r4
   1177c:	bl	11bb8 <__mempcpy_chk@plt+0xb14>
   11780:	cmp	r0, r4
   11784:	beq	11820 <__mempcpy_chk@plt+0x77c>
   11788:	movw	r1, #23521	; 0x5be1
   1178c:	movt	r1, #1
   11790:	b	11adc <__mempcpy_chk@plt+0xa38>
   11794:	mov	r6, r4
   11798:	b	1183c <__mempcpy_chk@plt+0x798>
   1179c:	movw	r6, #24087	; 0x5e17
   117a0:	mov	r0, #1
   117a4:	movt	r6, #1
   117a8:	str	r0, [sp, #32]
   117ac:	cmp	r8, #0
   117b0:	bne	1166c <__mempcpy_chk@plt+0x5c8>
   117b4:	mov	r0, r6
   117b8:	bl	15050 <__mempcpy_chk@plt+0x3fac>
   117bc:	mov	r1, #88	; 0x58
   117c0:	mov	r4, r0
   117c4:	bl	1102c <strrchr@plt>
   117c8:	cmp	r0, #0
   117cc:	beq	11a1c <__mempcpy_chk@plt+0x978>
   117d0:	add	r6, r0, #1
   117d4:	b	11a28 <__mempcpy_chk@plt+0x984>
   117d8:	ldr	r6, [sp, #20]
   117dc:	cmp	r6, #0
   117e0:	ldrbne	r0, [r6]
   117e4:	cmpne	r0, #0
   117e8:	bne	11814 <__mempcpy_chk@plt+0x770>
   117ec:	movw	r0, #23509	; 0x5bd5
   117f0:	movt	r0, #1
   117f4:	bl	10f3c <getenv@plt>
   117f8:	cmp	r0, #0
   117fc:	beq	11a40 <__mempcpy_chk@plt+0x99c>
   11800:	ldrb	r1, [r0]
   11804:	movw	r6, #23516	; 0x5bdc
   11808:	movt	r6, #1
   1180c:	cmp	r1, #0
   11810:	movne	r6, r0
   11814:	ldrb	r0, [r4]
   11818:	cmp	r0, #47	; 0x2f
   1181c:	beq	11a54 <__mempcpy_chk@plt+0x9b0>
   11820:	mov	r0, r6
   11824:	mov	r1, r4
   11828:	mov	r2, #0
   1182c:	bl	11ee4 <__mempcpy_chk@plt+0xe40>
   11830:	mov	r6, r0
   11834:	mov	r0, r4
   11838:	bl	11fdc <__mempcpy_chk@plt+0xf38>
   1183c:	mov	r0, r6
   11840:	bl	15050 <__mempcpy_chk@plt+0x3fac>
   11844:	mov	r4, r0
   11848:	ldr	r0, [sp, #24]
   1184c:	tst	r0, #1
   11850:	beq	118d8 <__mempcpy_chk@plt+0x834>
   11854:	str	r5, [sp]
   11858:	ldr	r5, [sp, #28]
   1185c:	mov	r3, #1
   11860:	mov	r0, r4
   11864:	mov	r1, r9
   11868:	mov	r2, #0
   1186c:	mov	r7, #1
   11870:	tst	r5, #1
   11874:	movwne	r3, #2
   11878:	bl	1403c <__mempcpy_chk@plt+0x2f98>
   1187c:	clz	r0, r0
   11880:	lsr	r0, r0, #5
   11884:	orr	r1, sl, r0
   11888:	tst	r1, #1
   1188c:	bne	11948 <__mempcpy_chk@plt+0x8a4>
   11890:	bl	10fb4 <__errno_location@plt>
   11894:	ldr	r4, [r0]
   11898:	movw	r1, #23632	; 0x5c50
   1189c:	mov	r0, #0
   118a0:	mov	r2, #5
   118a4:	movt	r1, #1
   118a8:	bl	10eb8 <dcgettext@plt>
   118ac:	mov	r5, r0
   118b0:	mov	r0, r6
   118b4:	bl	14024 <__mempcpy_chk@plt+0x2f80>
   118b8:	mov	r3, r0
   118bc:	mov	r0, #0
   118c0:	mov	r1, r4
   118c4:	mov	r2, r5
   118c8:	bl	10f24 <error@plt>
   118cc:	mov	r0, r7
   118d0:	sub	sp, fp, #28
   118d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   118d8:	str	r5, [sp]
   118dc:	ldr	r5, [sp, #28]
   118e0:	mov	r0, r4
   118e4:	mov	r1, r9
   118e8:	mov	r2, #0
   118ec:	ands	r3, r5, #1
   118f0:	movwne	r3, #2
   118f4:	bl	1403c <__mempcpy_chk@plt+0x2f98>
   118f8:	cmp	r0, #0
   118fc:	blt	11920 <__mempcpy_chk@plt+0x87c>
   11900:	tst	r5, #1
   11904:	beq	11930 <__mempcpy_chk@plt+0x88c>
   11908:	mov	r0, r4
   1190c:	bl	10f48 <puts@plt>
   11910:	mov	r7, #0
   11914:	mov	r0, r7
   11918:	sub	sp, fp, #28
   1191c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11920:	mov	r7, #1
   11924:	tst	sl, #1
   11928:	beq	119d0 <__mempcpy_chk@plt+0x92c>
   1192c:	b	11a10 <__mempcpy_chk@plt+0x96c>
   11930:	bl	11080 <close@plt>
   11934:	clz	r0, r0
   11938:	lsr	r0, r0, #5
   1193c:	orr	r1, sl, r0
   11940:	tst	r1, #1
   11944:	beq	119d0 <__mempcpy_chk@plt+0x92c>
   11948:	mov	r7, #1
   1194c:	cmp	r0, #0
   11950:	beq	11a10 <__mempcpy_chk@plt+0x96c>
   11954:	mov	r0, r4
   11958:	bl	10f48 <puts@plt>
   1195c:	mov	r7, #0
   11960:	tst	r5, #1
   11964:	bne	11a10 <__mempcpy_chk@plt+0x96c>
   11968:	movw	r0, #29013	; 0x7155
   1196c:	mov	r1, #1
   11970:	movt	r0, #2
   11974:	strb	r1, [r0]
   11978:	movw	r0, #29004	; 0x714c
   1197c:	movt	r0, #2
   11980:	ldr	r0, [r0]
   11984:	bl	11c50 <__mempcpy_chk@plt+0xbac>
   11988:	cmp	r0, #0
   1198c:	beq	11a10 <__mempcpy_chk@plt+0x96c>
   11990:	bl	10fb4 <__errno_location@plt>
   11994:	ldr	r5, [r0]
   11998:	mov	r0, r4
   1199c:	bl	11044 <remove@plt>
   119a0:	tst	sl, #1
   119a4:	bne	11a0c <__mempcpy_chk@plt+0x968>
   119a8:	movw	r1, #23713	; 0x5ca1
   119ac:	mov	r0, #0
   119b0:	mov	r2, #5
   119b4:	movt	r1, #1
   119b8:	bl	10eb8 <dcgettext@plt>
   119bc:	mov	r2, r0
   119c0:	mov	r0, #0
   119c4:	mov	r1, r5
   119c8:	bl	10f24 <error@plt>
   119cc:	b	11a0c <__mempcpy_chk@plt+0x968>
   119d0:	bl	10fb4 <__errno_location@plt>
   119d4:	ldr	r4, [r0]
   119d8:	movw	r1, #23675	; 0x5c7b
   119dc:	mov	r0, #0
   119e0:	mov	r2, #5
   119e4:	movt	r1, #1
   119e8:	bl	10eb8 <dcgettext@plt>
   119ec:	mov	r5, r0
   119f0:	mov	r0, r6
   119f4:	bl	14024 <__mempcpy_chk@plt+0x2f80>
   119f8:	mov	r3, r0
   119fc:	mov	r0, #0
   11a00:	mov	r1, r4
   11a04:	mov	r2, r5
   11a08:	bl	10f24 <error@plt>
   11a0c:	mov	r7, #1
   11a10:	mov	r0, r7
   11a14:	sub	sp, fp, #28
   11a18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11a1c:	mov	r0, r4
   11a20:	bl	10fa8 <strlen@plt>
   11a24:	add	r6, r4, r0
   11a28:	mov	r0, r6
   11a2c:	bl	10fa8 <strlen@plt>
   11a30:	mov	r9, r0
   11a34:	cmp	r9, #0
   11a38:	bne	116d4 <__mempcpy_chk@plt+0x630>
   11a3c:	b	116e4 <__mempcpy_chk@plt+0x640>
   11a40:	movw	r6, #23516	; 0x5bdc
   11a44:	movt	r6, #1
   11a48:	ldrb	r0, [r4]
   11a4c:	cmp	r0, #47	; 0x2f
   11a50:	bne	11820 <__mempcpy_chk@plt+0x77c>
   11a54:	movw	r1, #23572	; 0x5c14
   11a58:	movt	r1, #1
   11a5c:	b	11adc <__mempcpy_chk@plt+0xa38>
   11a60:	cmn	r0, #3
   11a64:	bne	11abc <__mempcpy_chk@plt+0xa18>
   11a68:	movw	r0, #28912	; 0x70f0
   11a6c:	movw	r2, #23363	; 0x5b43
   11a70:	mov	r1, #0
   11a74:	movw	r7, #23350	; 0x5b36
   11a78:	movt	r0, #2
   11a7c:	movt	r2, #1
   11a80:	str	r1, [sp, #8]
   11a84:	movw	r1, #23297	; 0x5b01
   11a88:	movt	r7, #1
   11a8c:	ldr	r3, [r0]
   11a90:	movw	r0, #29004	; 0x714c
   11a94:	str	r2, [sp, #4]
   11a98:	movw	r2, #23336	; 0x5b28
   11a9c:	movt	r1, #1
   11aa0:	str	r7, [sp]
   11aa4:	movt	r0, #2
   11aa8:	movt	r2, #1
   11aac:	ldr	r0, [r0]
   11ab0:	bl	148fc <__mempcpy_chk@plt+0x3858>
   11ab4:	mov	r0, #0
   11ab8:	bl	10f9c <exit@plt>
   11abc:	cmn	r0, #2
   11ac0:	bne	11acc <__mempcpy_chk@plt+0xa28>
   11ac4:	mov	r0, #0
   11ac8:	bl	111a0 <__mempcpy_chk@plt+0xfc>
   11acc:	mov	r0, #1
   11ad0:	bl	111a0 <__mempcpy_chk@plt+0xfc>
   11ad4:	movw	r1, #23482	; 0x5bba
   11ad8:	movt	r1, #1
   11adc:	mov	r0, #0
   11ae0:	mov	r2, #5
   11ae4:	bl	10eb8 <dcgettext@plt>
   11ae8:	mov	r5, r0
   11aec:	mov	r0, r4
   11af0:	bl	14024 <__mempcpy_chk@plt+0x2f80>
   11af4:	mov	r3, r0
   11af8:	mov	r0, #1
   11afc:	mov	r1, #0
   11b00:	mov	r2, r5
   11b04:	bl	10f24 <error@plt>
   11b08:	movw	r1, #23393	; 0x5b61
   11b0c:	movt	r1, #1
   11b10:	b	11b48 <__mempcpy_chk@plt+0xaa4>
   11b14:	movw	r1, #23374	; 0x5b4e
   11b18:	mov	r0, #0
   11b1c:	mov	r2, #5
   11b20:	movt	r1, #1
   11b24:	bl	10eb8 <dcgettext@plt>
   11b28:	mov	r2, r0
   11b2c:	mov	r0, #0
   11b30:	mov	r1, #0
   11b34:	bl	10f24 <error@plt>
   11b38:	mov	r0, #1
   11b3c:	bl	111a0 <__mempcpy_chk@plt+0xfc>
   11b40:	movw	r1, #23434	; 0x5b8a
   11b44:	movt	r1, #1
   11b48:	mov	r0, #0
   11b4c:	mov	r2, #5
   11b50:	bl	10eb8 <dcgettext@plt>
   11b54:	mov	r4, r0
   11b58:	mov	r0, r6
   11b5c:	bl	14024 <__mempcpy_chk@plt+0x2f80>
   11b60:	mov	r3, r0
   11b64:	mov	r0, #1
   11b68:	mov	r1, #0
   11b6c:	mov	r2, r4
   11b70:	bl	10f24 <error@plt>
   11b74:	push	{fp, lr}
   11b78:	mov	fp, sp
   11b7c:	movw	r0, #29013	; 0x7155
   11b80:	movt	r0, #2
   11b84:	ldrb	r0, [r0]
   11b88:	cmp	r0, #0
   11b8c:	beq	11bb0 <__mempcpy_chk@plt+0xb0c>
   11b90:	movw	r0, #29000	; 0x7148
   11b94:	movt	r0, #2
   11b98:	ldr	r0, [r0]
   11b9c:	bl	11c50 <__mempcpy_chk@plt+0xbac>
   11ba0:	cmp	r0, #0
   11ba4:	popeq	{fp, pc}
   11ba8:	mov	r0, #1
   11bac:	bl	10e88 <_exit@plt>
   11bb0:	pop	{fp, lr}
   11bb4:	b	11cf4 <__mempcpy_chk@plt+0xc50>
   11bb8:	sub	r0, r0, #1
   11bbc:	ldrb	r3, [r0, #1]!
   11bc0:	cmp	r3, #47	; 0x2f
   11bc4:	beq	11bbc <__mempcpy_chk@plt+0xb18>
   11bc8:	mov	r2, #0
   11bcc:	mov	r1, r0
   11bd0:	uxtb	r3, r3
   11bd4:	cmp	r3, #47	; 0x2f
   11bd8:	beq	11c00 <__mempcpy_chk@plt+0xb5c>
   11bdc:	cmp	r3, #0
   11be0:	bxeq	lr
   11be4:	tst	r2, #1
   11be8:	mov	r2, #0
   11bec:	movne	r0, r1
   11bf0:	ldrb	r3, [r1, #1]!
   11bf4:	uxtb	r3, r3
   11bf8:	cmp	r3, #47	; 0x2f
   11bfc:	bne	11bdc <__mempcpy_chk@plt+0xb38>
   11c00:	ldrb	r3, [r1, #1]!
   11c04:	mov	r2, #1
   11c08:	uxtb	r3, r3
   11c0c:	cmp	r3, #47	; 0x2f
   11c10:	bne	11bdc <__mempcpy_chk@plt+0xb38>
   11c14:	b	11c00 <__mempcpy_chk@plt+0xb5c>
   11c18:	push	{r4, sl, fp, lr}
   11c1c:	add	fp, sp, #8
   11c20:	mov	r4, r0
   11c24:	bl	10fa8 <strlen@plt>
   11c28:	mov	r1, r0
   11c2c:	sub	r2, r4, #1
   11c30:	mov	r0, r1
   11c34:	cmp	r1, #2
   11c38:	popcc	{r4, sl, fp, pc}
   11c3c:	ldrb	r3, [r2, r0]
   11c40:	sub	r1, r0, #1
   11c44:	cmp	r3, #47	; 0x2f
   11c48:	beq	11c30 <__mempcpy_chk@plt+0xb8c>
   11c4c:	pop	{r4, sl, fp, pc}
   11c50:	push	{r4, r5, r6, sl, fp, lr}
   11c54:	add	fp, sp, #16
   11c58:	mov	r4, r0
   11c5c:	bl	10f0c <__fpending@plt>
   11c60:	ldr	r6, [r4]
   11c64:	mov	r5, r0
   11c68:	mov	r0, r4
   11c6c:	bl	11de0 <__mempcpy_chk@plt+0xd3c>
   11c70:	tst	r6, #32
   11c74:	bne	11cac <__mempcpy_chk@plt+0xc08>
   11c78:	cmp	r0, #0
   11c7c:	mov	r4, r0
   11c80:	mvnne	r4, #0
   11c84:	cmp	r5, #0
   11c88:	bne	11cb8 <__mempcpy_chk@plt+0xc14>
   11c8c:	cmp	r0, #0
   11c90:	beq	11cb8 <__mempcpy_chk@plt+0xc14>
   11c94:	bl	10fb4 <__errno_location@plt>
   11c98:	ldr	r0, [r0]
   11c9c:	subs	r4, r0, #9
   11ca0:	mvnne	r4, #0
   11ca4:	mov	r0, r4
   11ca8:	pop	{r4, r5, r6, sl, fp, pc}
   11cac:	mvn	r4, #0
   11cb0:	cmp	r0, #0
   11cb4:	beq	11cc0 <__mempcpy_chk@plt+0xc1c>
   11cb8:	mov	r0, r4
   11cbc:	pop	{r4, r5, r6, sl, fp, pc}
   11cc0:	bl	10fb4 <__errno_location@plt>
   11cc4:	mov	r1, #0
   11cc8:	str	r1, [r0]
   11ccc:	mov	r0, r4
   11cd0:	pop	{r4, r5, r6, sl, fp, pc}
   11cd4:	movw	r1, #29016	; 0x7158
   11cd8:	movt	r1, #2
   11cdc:	str	r0, [r1, #4]
   11ce0:	bx	lr
   11ce4:	movw	r1, #29016	; 0x7158
   11ce8:	movt	r1, #2
   11cec:	strb	r0, [r1]
   11cf0:	bx	lr
   11cf4:	push	{r4, r5, r6, sl, fp, lr}
   11cf8:	add	fp, sp, #16
   11cfc:	sub	sp, sp, #8
   11d00:	movw	r0, #29004	; 0x714c
   11d04:	movt	r0, #2
   11d08:	ldr	r0, [r0]
   11d0c:	bl	11c50 <__mempcpy_chk@plt+0xbac>
   11d10:	cmp	r0, #0
   11d14:	beq	11d3c <__mempcpy_chk@plt+0xc98>
   11d18:	movw	r5, #29016	; 0x7158
   11d1c:	movt	r5, #2
   11d20:	ldrb	r0, [r5]
   11d24:	cmp	r0, #0
   11d28:	beq	11d68 <__mempcpy_chk@plt+0xcc4>
   11d2c:	bl	10fb4 <__errno_location@plt>
   11d30:	ldr	r0, [r0]
   11d34:	cmp	r0, #32
   11d38:	bne	11d68 <__mempcpy_chk@plt+0xcc4>
   11d3c:	movw	r0, #29000	; 0x7148
   11d40:	movt	r0, #2
   11d44:	ldr	r0, [r0]
   11d48:	bl	11c50 <__mempcpy_chk@plt+0xbac>
   11d4c:	cmp	r0, #0
   11d50:	subeq	sp, fp, #16
   11d54:	popeq	{r4, r5, r6, sl, fp, pc}
   11d58:	movw	r0, #28916	; 0x70f4
   11d5c:	movt	r0, #2
   11d60:	ldr	r0, [r0]
   11d64:	bl	10e88 <_exit@plt>
   11d68:	movw	r1, #23713	; 0x5ca1
   11d6c:	mov	r0, #0
   11d70:	mov	r2, #5
   11d74:	movt	r1, #1
   11d78:	bl	10eb8 <dcgettext@plt>
   11d7c:	ldr	r6, [r5, #4]
   11d80:	mov	r4, r0
   11d84:	bl	10fb4 <__errno_location@plt>
   11d88:	ldr	r5, [r0]
   11d8c:	cmp	r6, #0
   11d90:	bne	11dac <__mempcpy_chk@plt+0xd08>
   11d94:	movw	r2, #24307	; 0x5ef3
   11d98:	mov	r0, #0
   11d9c:	mov	r1, r5
   11da0:	mov	r3, r4
   11da4:	movt	r2, #1
   11da8:	b	11dcc <__mempcpy_chk@plt+0xd28>
   11dac:	mov	r0, r6
   11db0:	bl	13c9c <__mempcpy_chk@plt+0x2bf8>
   11db4:	movw	r2, #24303	; 0x5eef
   11db8:	mov	r3, r0
   11dbc:	str	r4, [sp]
   11dc0:	mov	r0, #0
   11dc4:	mov	r1, r5
   11dc8:	movt	r2, #1
   11dcc:	bl	10f24 <error@plt>
   11dd0:	movw	r0, #28916	; 0x70f4
   11dd4:	movt	r0, #2
   11dd8:	ldr	r0, [r0]
   11ddc:	bl	10e88 <_exit@plt>
   11de0:	push	{r4, r5, r6, sl, fp, lr}
   11de4:	add	fp, sp, #16
   11de8:	sub	sp, sp, #8
   11dec:	mov	r4, r0
   11df0:	bl	10ff0 <fileno@plt>
   11df4:	cmn	r0, #1
   11df8:	ble	11e6c <__mempcpy_chk@plt+0xdc8>
   11dfc:	mov	r0, r4
   11e00:	bl	10f6c <__freading@plt>
   11e04:	cmp	r0, #0
   11e08:	beq	11e34 <__mempcpy_chk@plt+0xd90>
   11e0c:	mov	r0, r4
   11e10:	bl	10ff0 <fileno@plt>
   11e14:	mov	r1, #1
   11e18:	mov	r2, #0
   11e1c:	mov	r3, #0
   11e20:	str	r1, [sp]
   11e24:	bl	10ef4 <lseek64@plt>
   11e28:	and	r0, r0, r1
   11e2c:	cmn	r0, #1
   11e30:	beq	11e6c <__mempcpy_chk@plt+0xdc8>
   11e34:	mov	r0, r4
   11e38:	bl	11e7c <__mempcpy_chk@plt+0xdd8>
   11e3c:	cmp	r0, #0
   11e40:	beq	11e6c <__mempcpy_chk@plt+0xdc8>
   11e44:	bl	10fb4 <__errno_location@plt>
   11e48:	ldr	r6, [r0]
   11e4c:	mov	r5, r0
   11e50:	mov	r0, r4
   11e54:	bl	11008 <fclose@plt>
   11e58:	cmp	r6, #0
   11e5c:	strne	r6, [r5]
   11e60:	mvnne	r0, #0
   11e64:	sub	sp, fp, #16
   11e68:	pop	{r4, r5, r6, sl, fp, pc}
   11e6c:	mov	r0, r4
   11e70:	sub	sp, fp, #16
   11e74:	pop	{r4, r5, r6, sl, fp, lr}
   11e78:	b	11008 <fclose@plt>
   11e7c:	push	{r4, sl, fp, lr}
   11e80:	add	fp, sp, #8
   11e84:	sub	sp, sp, #8
   11e88:	mov	r4, r0
   11e8c:	cmp	r0, #0
   11e90:	beq	11eac <__mempcpy_chk@plt+0xe08>
   11e94:	mov	r0, r4
   11e98:	bl	10f6c <__freading@plt>
   11e9c:	cmp	r0, #0
   11ea0:	ldrbne	r0, [r4, #1]
   11ea4:	tstne	r0, #1
   11ea8:	bne	11ebc <__mempcpy_chk@plt+0xe18>
   11eac:	mov	r0, r4
   11eb0:	sub	sp, fp, #8
   11eb4:	pop	{r4, sl, fp, lr}
   11eb8:	b	10e64 <fflush@plt>
   11ebc:	mov	r0, #1
   11ec0:	mov	r2, #0
   11ec4:	mov	r3, #0
   11ec8:	str	r0, [sp]
   11ecc:	mov	r0, r4
   11ed0:	bl	12004 <__mempcpy_chk@plt+0xf60>
   11ed4:	mov	r0, r4
   11ed8:	sub	sp, fp, #8
   11edc:	pop	{r4, sl, fp, lr}
   11ee0:	b	10e64 <fflush@plt>
   11ee4:	push	{fp, lr}
   11ee8:	mov	fp, sp
   11eec:	bl	11efc <__mempcpy_chk@plt+0xe58>
   11ef0:	cmp	r0, #0
   11ef4:	popne	{fp, pc}
   11ef8:	bl	15090 <__mempcpy_chk@plt+0x3fec>
   11efc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11f00:	add	fp, sp, #28
   11f04:	push	{r2}		; (str r2, [sp, #-4]!)
   11f08:	mov	sl, r1
   11f0c:	mov	r7, r0
   11f10:	bl	11bb8 <__mempcpy_chk@plt+0xb14>
   11f14:	sub	r4, r0, r7
   11f18:	bl	11c18 <__mempcpy_chk@plt+0xb74>
   11f1c:	mov	r6, r0
   11f20:	add	r5, r4, r0
   11f24:	mov	r0, sl
   11f28:	bl	10fa8 <strlen@plt>
   11f2c:	mov	r9, r0
   11f30:	cmp	r6, #0
   11f34:	beq	11f5c <__mempcpy_chk@plt+0xeb8>
   11f38:	add	r0, r7, r5
   11f3c:	mov	r4, #0
   11f40:	ldrb	r0, [r0, #-1]
   11f44:	cmp	r0, #47	; 0x2f
   11f48:	beq	11f6c <__mempcpy_chk@plt+0xec8>
   11f4c:	ldrb	r0, [sl]
   11f50:	subs	r4, r0, #47	; 0x2f
   11f54:	movwne	r4, #47	; 0x2f
   11f58:	b	11f6c <__mempcpy_chk@plt+0xec8>
   11f5c:	ldrb	r0, [sl]
   11f60:	mov	r4, #0
   11f64:	cmp	r0, #47	; 0x2f
   11f68:	movweq	r4, #46	; 0x2e
   11f6c:	uxtb	r8, r4
   11f70:	add	r0, r9, r5
   11f74:	cmp	r8, #0
   11f78:	movwne	r8, #1
   11f7c:	add	r0, r0, r8
   11f80:	add	r0, r0, #1
   11f84:	bl	15128 <__mempcpy_chk@plt+0x4084>
   11f88:	mov	r6, r0
   11f8c:	cmp	r0, #0
   11f90:	beq	11fd0 <__mempcpy_chk@plt+0xf2c>
   11f94:	mov	r0, r6
   11f98:	mov	r1, r7
   11f9c:	mov	r2, r5
   11fa0:	mvn	r3, #0
   11fa4:	bl	110a4 <__mempcpy_chk@plt>
   11fa8:	ldr	r1, [sp]
   11fac:	strb	r4, [r0], r8
   11fb0:	mov	r2, r9
   11fb4:	mvn	r3, #0
   11fb8:	cmp	r1, #0
   11fbc:	strne	r0, [r1]
   11fc0:	mov	r1, sl
   11fc4:	bl	110a4 <__mempcpy_chk@plt>
   11fc8:	mov	r1, #0
   11fcc:	strb	r1, [r0]
   11fd0:	mov	r0, r6
   11fd4:	sub	sp, fp, #28
   11fd8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11fdc:	push	{r4, r5, r6, sl, fp, lr}
   11fe0:	add	fp, sp, #16
   11fe4:	mov	r4, r0
   11fe8:	bl	10fb4 <__errno_location@plt>
   11fec:	ldr	r6, [r0]
   11ff0:	mov	r5, r0
   11ff4:	mov	r0, r4
   11ff8:	bl	10e70 <free@plt>
   11ffc:	str	r6, [r5]
   12000:	pop	{r4, r5, r6, sl, fp, pc}
   12004:	push	{r4, r5, r6, r7, fp, lr}
   12008:	add	fp, sp, #16
   1200c:	sub	sp, sp, #8
   12010:	mov	r4, r0
   12014:	ldr	r0, [r0, #4]
   12018:	mov	r5, r3
   1201c:	mov	r6, r2
   12020:	ldr	r1, [r4, #8]
   12024:	cmp	r1, r0
   12028:	bne	12044 <__mempcpy_chk@plt+0xfa0>
   1202c:	ldrd	r0, [r4, #16]
   12030:	cmp	r1, r0
   12034:	bne	12044 <__mempcpy_chk@plt+0xfa0>
   12038:	ldr	r0, [r4, #36]	; 0x24
   1203c:	cmp	r0, #0
   12040:	beq	1205c <__mempcpy_chk@plt+0xfb8>
   12044:	mov	r0, r4
   12048:	mov	r2, r6
   1204c:	mov	r3, r5
   12050:	sub	sp, fp, #16
   12054:	pop	{r4, r5, r6, r7, fp, lr}
   12058:	b	11014 <fseeko64@plt>
   1205c:	ldr	r7, [fp, #8]
   12060:	mov	r0, r4
   12064:	bl	10ff0 <fileno@plt>
   12068:	mov	r2, r6
   1206c:	mov	r3, r5
   12070:	str	r7, [sp]
   12074:	bl	10ef4 <lseek64@plt>
   12078:	and	r2, r0, r1
   1207c:	cmn	r2, #1
   12080:	mvneq	r0, #0
   12084:	subeq	sp, fp, #16
   12088:	popeq	{r4, r5, r6, r7, fp, pc}
   1208c:	strd	r0, [r4, #80]	; 0x50
   12090:	ldr	r0, [r4]
   12094:	bic	r0, r0, #16
   12098:	str	r0, [r4]
   1209c:	mov	r0, #0
   120a0:	sub	sp, fp, #16
   120a4:	pop	{r4, r5, r6, r7, fp, pc}
   120a8:	push	{r4, r5, fp, lr}
   120ac:	add	fp, sp, #8
   120b0:	cmp	r0, #0
   120b4:	beq	12148 <__mempcpy_chk@plt+0x10a4>
   120b8:	mov	r1, #47	; 0x2f
   120bc:	mov	r4, r0
   120c0:	bl	1102c <strrchr@plt>
   120c4:	cmp	r0, #0
   120c8:	mov	r5, r4
   120cc:	addne	r5, r0, #1
   120d0:	sub	r0, r5, r4
   120d4:	cmp	r0, #7
   120d8:	blt	1212c <__mempcpy_chk@plt+0x1088>
   120dc:	movw	r1, #24366	; 0x5f2e
   120e0:	sub	r0, r5, #7
   120e4:	mov	r2, #7
   120e8:	movt	r1, #1
   120ec:	bl	11068 <strncmp@plt>
   120f0:	cmp	r0, #0
   120f4:	bne	1212c <__mempcpy_chk@plt+0x1088>
   120f8:	movw	r1, #24374	; 0x5f36
   120fc:	mov	r0, r5
   12100:	mov	r2, #3
   12104:	movt	r1, #1
   12108:	bl	11068 <strncmp@plt>
   1210c:	cmp	r0, #0
   12110:	beq	1211c <__mempcpy_chk@plt+0x1078>
   12114:	mov	r4, r5
   12118:	b	1212c <__mempcpy_chk@plt+0x1088>
   1211c:	movw	r0, #28984	; 0x7138
   12120:	add	r4, r5, #3
   12124:	movt	r0, #2
   12128:	str	r4, [r0]
   1212c:	movw	r0, #28988	; 0x713c
   12130:	movt	r0, #2
   12134:	str	r4, [r0]
   12138:	movw	r0, #29024	; 0x7160
   1213c:	movt	r0, #2
   12140:	str	r4, [r0]
   12144:	pop	{r4, r5, fp, pc}
   12148:	movw	r0, #29000	; 0x7148
   1214c:	mov	r1, #55	; 0x37
   12150:	mov	r2, #1
   12154:	movt	r0, #2
   12158:	ldr	r3, [r0]
   1215c:	movw	r0, #24310	; 0x5ef6
   12160:	movt	r0, #1
   12164:	bl	10ee8 <fwrite@plt>
   12168:	bl	11074 <abort@plt>
   1216c:	push	{r4, r5, r6, sl, fp, lr}
   12170:	add	fp, sp, #16
   12174:	mov	r4, r0
   12178:	movw	r0, #29032	; 0x7168
   1217c:	movt	r0, #2
   12180:	cmp	r4, #0
   12184:	moveq	r4, r0
   12188:	bl	10fb4 <__errno_location@plt>
   1218c:	ldr	r6, [r0]
   12190:	mov	r5, r0
   12194:	mov	r0, r4
   12198:	mov	r1, #48	; 0x30
   1219c:	bl	14f90 <__mempcpy_chk@plt+0x3eec>
   121a0:	str	r6, [r5]
   121a4:	pop	{r4, r5, r6, sl, fp, pc}
   121a8:	movw	r1, #29032	; 0x7168
   121ac:	cmp	r0, #0
   121b0:	movt	r1, #2
   121b4:	movne	r1, r0
   121b8:	ldr	r0, [r1]
   121bc:	bx	lr
   121c0:	movw	r2, #29032	; 0x7168
   121c4:	cmp	r0, #0
   121c8:	movt	r2, #2
   121cc:	movne	r2, r0
   121d0:	str	r1, [r2]
   121d4:	bx	lr
   121d8:	movw	r3, #29032	; 0x7168
   121dc:	cmp	r0, #0
   121e0:	movt	r3, #2
   121e4:	movne	r3, r0
   121e8:	ubfx	r0, r1, #5, #3
   121ec:	and	r1, r1, #31
   121f0:	add	r0, r3, r0, lsl #2
   121f4:	ldr	r3, [r0, #8]
   121f8:	eor	r2, r2, r3, lsr r1
   121fc:	and	r2, r2, #1
   12200:	eor	r2, r3, r2, lsl r1
   12204:	str	r2, [r0, #8]
   12208:	mov	r0, #1
   1220c:	and	r0, r0, r3, lsr r1
   12210:	bx	lr
   12214:	movw	r2, #29032	; 0x7168
   12218:	cmp	r0, #0
   1221c:	movt	r2, #2
   12220:	movne	r2, r0
   12224:	ldr	r0, [r2, #4]
   12228:	str	r1, [r2, #4]
   1222c:	bx	lr
   12230:	movw	r3, #29032	; 0x7168
   12234:	cmp	r0, #0
   12238:	movt	r3, #2
   1223c:	movne	r3, r0
   12240:	cmp	r1, #0
   12244:	mov	r0, #10
   12248:	cmpne	r2, #0
   1224c:	str	r0, [r3]
   12250:	bne	12260 <__mempcpy_chk@plt+0x11bc>
   12254:	push	{fp, lr}
   12258:	mov	fp, sp
   1225c:	bl	11074 <abort@plt>
   12260:	str	r1, [r3, #40]	; 0x28
   12264:	str	r2, [r3, #44]	; 0x2c
   12268:	bx	lr
   1226c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12270:	add	fp, sp, #28
   12274:	sub	sp, sp, #20
   12278:	mov	r7, r0
   1227c:	ldr	r0, [fp, #8]
   12280:	movw	r5, #29032	; 0x7168
   12284:	mov	r8, r3
   12288:	mov	r9, r2
   1228c:	mov	sl, r1
   12290:	movt	r5, #2
   12294:	cmp	r0, #0
   12298:	movne	r5, r0
   1229c:	bl	10fb4 <__errno_location@plt>
   122a0:	mov	r4, r0
   122a4:	ldm	r5, {r0, r1}
   122a8:	ldr	r2, [r5, #40]	; 0x28
   122ac:	ldr	r3, [r5, #44]	; 0x2c
   122b0:	add	r5, r5, #8
   122b4:	ldr	r6, [r4]
   122b8:	stm	sp, {r0, r1, r5}
   122bc:	str	r2, [sp, #12]
   122c0:	str	r3, [sp, #16]
   122c4:	mov	r0, r7
   122c8:	mov	r1, sl
   122cc:	mov	r2, r9
   122d0:	mov	r3, r8
   122d4:	bl	122e4 <__mempcpy_chk@plt+0x1240>
   122d8:	str	r6, [r4]
   122dc:	sub	sp, fp, #28
   122e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   122e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   122e8:	add	fp, sp, #28
   122ec:	sub	sp, sp, #156	; 0x9c
   122f0:	str	r0, [sp, #76]	; 0x4c
   122f4:	ldr	r0, [fp, #12]
   122f8:	mov	r6, r1
   122fc:	str	r3, [sp, #84]	; 0x54
   12300:	str	r2, [fp, #-84]	; 0xffffffac
   12304:	and	r1, r0, #4
   12308:	str	r1, [sp, #24]
   1230c:	and	r1, r0, #1
   12310:	str	r1, [sp, #28]
   12314:	ubfx	r8, r0, #1, #1
   12318:	bl	10f00 <__ctype_get_mb_cur_max@plt>
   1231c:	str	r0, [sp, #32]
   12320:	ldr	r0, [fp, #24]
   12324:	ldr	r7, [fp, #8]
   12328:	mov	r1, #0
   1232c:	mov	r2, #0
   12330:	mov	r4, #1
   12334:	str	r1, [sp, #52]	; 0x34
   12338:	str	r0, [sp, #72]	; 0x48
   1233c:	ldr	r0, [fp, #20]
   12340:	str	r0, [sp, #68]	; 0x44
   12344:	mov	r0, #0
   12348:	str	r0, [sp, #48]	; 0x30
   1234c:	mov	r0, #0
   12350:	str	r0, [sp, #92]	; 0x5c
   12354:	mov	r0, #0
   12358:	str	r0, [fp, #-76]	; 0xffffffb4
   1235c:	mov	r0, #0
   12360:	cmp	r7, #10
   12364:	bhi	1364c <__mempcpy_chk@plt+0x25a8>
   12368:	add	r1, pc, #28
   1236c:	mov	sl, r6
   12370:	ldr	r6, [sp, #76]	; 0x4c
   12374:	ldr	ip, [fp, #-84]	; 0xffffffac
   12378:	ldr	lr, [sp, #84]	; 0x54
   1237c:	mov	r9, #0
   12380:	mov	r3, #1
   12384:	mov	r5, #0
   12388:	ldr	pc, [r1, r7, lsl #2]
   1238c:	andeq	r2, r1, ip, asr r4
   12390:	muleq	r1, r8, r4
   12394:	andeq	r2, r1, ip, ror #8
   12398:	andeq	r2, r1, r4, asr r4
   1239c:	andeq	r2, r1, ip, lsl #9
   123a0:	andeq	r2, r1, r0, asr #9
   123a4:	andeq	r2, r1, ip, ror r4
   123a8:	andeq	r2, r1, ip, asr #13
   123ac:			; <UNDEFINED> instruction: 0x000123b8
   123b0:			; <UNDEFINED> instruction: 0x000123b8
   123b4:	andeq	r2, r1, r0, ror #12
   123b8:	mov	r9, r4
   123bc:	movw	r4, #24458	; 0x5f8a
   123c0:	mov	r5, r8
   123c4:	mov	r8, r2
   123c8:	mov	r0, #0
   123cc:	mov	r2, #5
   123d0:	movt	r4, #1
   123d4:	mov	r1, r4
   123d8:	bl	10eb8 <dcgettext@plt>
   123dc:	cmp	r0, r4
   123e0:	str	r0, [sp, #68]	; 0x44
   123e4:	bne	12574 <__mempcpy_chk@plt+0x14d0>
   123e8:	bl	151ac <__mempcpy_chk@plt+0x4108>
   123ec:	ldrb	r1, [r0]
   123f0:	and	r1, r1, #223	; 0xdf
   123f4:	cmp	r1, #71	; 0x47
   123f8:	beq	12540 <__mempcpy_chk@plt+0x149c>
   123fc:	cmp	r1, #85	; 0x55
   12400:	bne	12558 <__mempcpy_chk@plt+0x14b4>
   12404:	ldrb	r1, [r0, #1]
   12408:	and	r1, r1, #223	; 0xdf
   1240c:	cmp	r1, #84	; 0x54
   12410:	bne	12558 <__mempcpy_chk@plt+0x14b4>
   12414:	ldrb	r1, [r0, #2]
   12418:	and	r1, r1, #223	; 0xdf
   1241c:	cmp	r1, #70	; 0x46
   12420:	bne	12558 <__mempcpy_chk@plt+0x14b4>
   12424:	ldrb	r1, [r0, #3]
   12428:	cmp	r1, #45	; 0x2d
   1242c:	ldrbeq	r1, [r0, #4]
   12430:	cmpeq	r1, #56	; 0x38
   12434:	bne	12558 <__mempcpy_chk@plt+0x14b4>
   12438:	ldrb	r0, [r0, #5]
   1243c:	cmp	r0, #0
   12440:	movw	r0, #24462	; 0x5f8e
   12444:	movt	r0, #1
   12448:	str	r0, [sp, #68]	; 0x44
   1244c:	bne	12558 <__mempcpy_chk@plt+0x14b4>
   12450:	b	12574 <__mempcpy_chk@plt+0x14d0>
   12454:	mov	r0, #1
   12458:	b	12498 <__mempcpy_chk@plt+0x13f4>
   1245c:	mov	r7, #0
   12460:	mov	r9, #0
   12464:	mov	r3, r0
   12468:	b	12538 <__mempcpy_chk@plt+0x1494>
   1246c:	tst	r8, #1
   12470:	bne	12498 <__mempcpy_chk@plt+0x13f4>
   12474:	mov	r3, r0
   12478:	b	124f0 <__mempcpy_chk@plt+0x144c>
   1247c:	mov	r0, #1
   12480:	mov	r9, #0
   12484:	mov	r7, #5
   12488:	b	124d4 <__mempcpy_chk@plt+0x1430>
   1248c:	mov	r3, #1
   12490:	tst	r8, #1
   12494:	beq	124f0 <__mempcpy_chk@plt+0x144c>
   12498:	mov	r1, #1
   1249c:	mov	r9, #0
   124a0:	mov	r7, #2
   124a4:	mov	r3, r0
   124a8:	mov	r5, #1
   124ac:	str	r1, [fp, #-76]	; 0xffffffb4
   124b0:	movw	r1, #24460	; 0x5f8c
   124b4:	movt	r1, #1
   124b8:	str	r1, [sp, #92]	; 0x5c
   124bc:	b	126cc <__mempcpy_chk@plt+0x1628>
   124c0:	mov	r7, #5
   124c4:	tst	r8, #1
   124c8:	beq	12510 <__mempcpy_chk@plt+0x146c>
   124cc:	mov	r0, #1
   124d0:	mov	r9, #0
   124d4:	str	r0, [fp, #-76]	; 0xffffffb4
   124d8:	movw	r0, #24456	; 0x5f88
   124dc:	mov	r3, #1
   124e0:	mov	r5, #1
   124e4:	movt	r0, #1
   124e8:	str	r0, [sp, #92]	; 0x5c
   124ec:	b	126cc <__mempcpy_chk@plt+0x1628>
   124f0:	cmp	sl, #0
   124f4:	mov	r9, #1
   124f8:	mov	r7, #2
   124fc:	movne	r0, #39	; 0x27
   12500:	strbne	r0, [r6]
   12504:	movw	r0, #24460	; 0x5f8c
   12508:	movt	r0, #1
   1250c:	b	1252c <__mempcpy_chk@plt+0x1488>
   12510:	cmp	sl, #0
   12514:	mov	r9, #1
   12518:	mov	r3, #1
   1251c:	movne	r0, #34	; 0x22
   12520:	strbne	r0, [r6]
   12524:	movw	r0, #24456	; 0x5f88
   12528:	movt	r0, #1
   1252c:	str	r0, [sp, #92]	; 0x5c
   12530:	mov	r0, #1
   12534:	str	r0, [fp, #-76]	; 0xffffffb4
   12538:	mov	r5, #0
   1253c:	b	126cc <__mempcpy_chk@plt+0x1628>
   12540:	ldrb	r1, [r0, #1]
   12544:	and	r1, r1, #223	; 0xdf
   12548:	cmp	r1, #66	; 0x42
   1254c:	ldrbeq	r1, [r0, #2]
   12550:	cmpeq	r1, #49	; 0x31
   12554:	beq	13474 <__mempcpy_chk@plt+0x23d0>
   12558:	movw	r0, #24460	; 0x5f8c
   1255c:	movw	r1, #24456	; 0x5f88
   12560:	cmp	r7, #9
   12564:	movt	r0, #1
   12568:	movt	r1, #1
   1256c:	moveq	r0, r1
   12570:	str	r0, [sp, #68]	; 0x44
   12574:	movw	r4, #24460	; 0x5f8c
   12578:	mov	r0, #0
   1257c:	mov	r2, #5
   12580:	movt	r4, #1
   12584:	mov	r1, r4
   12588:	bl	10eb8 <dcgettext@plt>
   1258c:	cmp	r0, r4
   12590:	str	r0, [sp, #72]	; 0x48
   12594:	beq	125a4 <__mempcpy_chk@plt+0x1500>
   12598:	mov	r4, r9
   1259c:	mov	r2, r8
   125a0:	b	1265c <__mempcpy_chk@plt+0x15b8>
   125a4:	bl	151ac <__mempcpy_chk@plt+0x4108>
   125a8:	ldrb	r1, [r0]
   125ac:	mov	r4, r9
   125b0:	and	r1, r1, #223	; 0xdf
   125b4:	cmp	r1, #71	; 0x47
   125b8:	beq	12614 <__mempcpy_chk@plt+0x1570>
   125bc:	cmp	r1, #85	; 0x55
   125c0:	mov	r2, r8
   125c4:	bne	1263c <__mempcpy_chk@plt+0x1598>
   125c8:	ldrb	r1, [r0, #1]
   125cc:	and	r1, r1, #223	; 0xdf
   125d0:	cmp	r1, #84	; 0x54
   125d4:	bne	1263c <__mempcpy_chk@plt+0x1598>
   125d8:	ldrb	r1, [r0, #2]
   125dc:	and	r1, r1, #223	; 0xdf
   125e0:	cmp	r1, #70	; 0x46
   125e4:	ldrbeq	r1, [r0, #3]
   125e8:	cmpeq	r1, #45	; 0x2d
   125ec:	bne	1263c <__mempcpy_chk@plt+0x1598>
   125f0:	ldrb	r1, [r0, #4]
   125f4:	cmp	r1, #56	; 0x38
   125f8:	ldrbeq	r0, [r0, #5]
   125fc:	cmpeq	r0, #0
   12600:	bne	1263c <__mempcpy_chk@plt+0x1598>
   12604:	movw	r0, #24466	; 0x5f92
   12608:	movt	r0, #1
   1260c:	str	r0, [sp, #72]	; 0x48
   12610:	b	1265c <__mempcpy_chk@plt+0x15b8>
   12614:	ldrb	r1, [r0, #1]
   12618:	mov	r2, r8
   1261c:	and	r1, r1, #223	; 0xdf
   12620:	cmp	r1, #66	; 0x42
   12624:	bne	1263c <__mempcpy_chk@plt+0x1598>
   12628:	ldrb	r1, [r0, #2]
   1262c:	cmp	r1, #49	; 0x31
   12630:	ldrbeq	r1, [r0, #3]
   12634:	cmpeq	r1, #56	; 0x38
   12638:	beq	134b8 <__mempcpy_chk@plt+0x2414>
   1263c:	movw	r0, #24460	; 0x5f8c
   12640:	cmp	r7, #9
   12644:	movt	r0, #1
   12648:	mov	r1, r0
   1264c:	movw	r0, #24456	; 0x5f88
   12650:	movt	r0, #1
   12654:	moveq	r1, r0
   12658:	str	r1, [sp, #72]	; 0x48
   1265c:	mov	r8, r5
   12660:	mov	r9, #0
   12664:	tst	r8, #1
   12668:	mov	r5, r8
   1266c:	str	r2, [fp, #-48]	; 0xffffffd0
   12670:	bne	126a8 <__mempcpy_chk@plt+0x1604>
   12674:	ldr	r0, [sp, #68]	; 0x44
   12678:	ldrb	r0, [r0]
   1267c:	cmp	r0, #0
   12680:	beq	126a8 <__mempcpy_chk@plt+0x1604>
   12684:	ldr	r1, [sp, #68]	; 0x44
   12688:	mov	r9, #0
   1268c:	add	r1, r1, #1
   12690:	cmp	r9, sl
   12694:	strbcc	r0, [r6, r9]
   12698:	ldrb	r0, [r1, r9]
   1269c:	add	r9, r9, #1
   126a0:	cmp	r0, #0
   126a4:	bne	12690 <__mempcpy_chk@plt+0x15ec>
   126a8:	ldr	r8, [sp, #72]	; 0x48
   126ac:	mov	r0, r8
   126b0:	bl	10fa8 <strlen@plt>
   126b4:	ldr	ip, [fp, #-84]	; 0xffffffac
   126b8:	ldr	lr, [sp, #84]	; 0x54
   126bc:	ldr	r2, [fp, #-48]	; 0xffffffd0
   126c0:	str	r0, [fp, #-76]	; 0xffffffb4
   126c4:	str	r8, [sp, #92]	; 0x5c
   126c8:	mov	r3, #1
   126cc:	ldr	r0, [fp, #16]
   126d0:	str	r7, [fp, #-64]	; 0xffffffc0
   126d4:	str	r5, [fp, #-72]	; 0xffffffb8
   126d8:	str	r3, [sp, #80]	; 0x50
   126dc:	cmp	r0, #0
   126e0:	movwne	r0, #1
   126e4:	and	r0, r0, r5
   126e8:	str	r0, [fp, #-88]	; 0xffffffa8
   126ec:	ldr	r0, [fp, #-76]	; 0xffffffb4
   126f0:	cmp	r0, #0
   126f4:	movwne	r0, #1
   126f8:	subs	r7, r7, #2
   126fc:	and	r1, r0, r5
   12700:	str	r7, [fp, #-80]	; 0xffffffb0
   12704:	and	r1, r3, r1
   12708:	str	r1, [sp, #40]	; 0x28
   1270c:	clz	r1, r7
   12710:	lsr	r1, r1, #5
   12714:	and	r1, r1, r5
   12718:	eor	r5, r5, #1
   1271c:	str	r1, [sp, #36]	; 0x24
   12720:	mov	r1, r7
   12724:	str	r5, [sp, #88]	; 0x58
   12728:	mov	r7, #0
   1272c:	movwne	r1, #1
   12730:	orr	r5, r1, r5
   12734:	and	r1, r1, r3
   12738:	and	r0, r0, r1
   1273c:	str	r5, [sp, #60]	; 0x3c
   12740:	str	r1, [fp, #-68]	; 0xffffffbc
   12744:	str	r0, [fp, #-60]	; 0xffffffc4
   12748:	eor	r0, r3, #1
   1274c:	str	r0, [sp, #44]	; 0x2c
   12750:	cmn	lr, #1
   12754:	beq	12764 <__mempcpy_chk@plt+0x16c0>
   12758:	cmp	r7, lr
   1275c:	bne	12770 <__mempcpy_chk@plt+0x16cc>
   12760:	b	133e8 <__mempcpy_chk@plt+0x2344>
   12764:	ldrb	r0, [ip, r7]
   12768:	cmp	r0, #0
   1276c:	beq	133f0 <__mempcpy_chk@plt+0x234c>
   12770:	ldr	r0, [fp, #-60]	; 0xffffffc4
   12774:	mov	r8, #0
   12778:	str	r4, [fp, #-52]	; 0xffffffcc
   1277c:	str	r2, [fp, #-48]	; 0xffffffd0
   12780:	cmp	r0, #0
   12784:	beq	127b8 <__mempcpy_chk@plt+0x1714>
   12788:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1278c:	add	r4, r7, r0
   12790:	cmp	r0, #2
   12794:	bcc	127b0 <__mempcpy_chk@plt+0x170c>
   12798:	cmn	lr, #1
   1279c:	bne	127b0 <__mempcpy_chk@plt+0x170c>
   127a0:	mov	r0, ip
   127a4:	bl	10fa8 <strlen@plt>
   127a8:	ldr	ip, [fp, #-84]	; 0xffffffac
   127ac:	mov	lr, r0
   127b0:	cmp	r4, lr
   127b4:	bls	127d0 <__mempcpy_chk@plt+0x172c>
   127b8:	mov	r0, #0
   127bc:	str	r0, [fp, #-56]	; 0xffffffc8
   127c0:	ldrb	r5, [ip, r7]
   127c4:	cmp	r5, #126	; 0x7e
   127c8:	bls	12820 <__mempcpy_chk@plt+0x177c>
   127cc:	b	12c28 <__mempcpy_chk@plt+0x1b84>
   127d0:	ldr	r1, [sp, #92]	; 0x5c
   127d4:	ldr	r2, [fp, #-76]	; 0xffffffb4
   127d8:	add	r0, ip, r7
   127dc:	mov	r4, lr
   127e0:	bl	10eac <memcmp@plt>
   127e4:	ldr	r2, [sp, #88]	; 0x58
   127e8:	cmp	r0, #0
   127ec:	mov	r1, r0
   127f0:	movwne	r1, #1
   127f4:	orr	r1, r1, r2
   127f8:	tst	r1, #1
   127fc:	beq	134fc <__mempcpy_chk@plt+0x2458>
   12800:	ldr	ip, [fp, #-84]	; 0xffffffac
   12804:	clz	r0, r0
   12808:	mov	lr, r4
   1280c:	lsr	r0, r0, #5
   12810:	str	r0, [fp, #-56]	; 0xffffffc8
   12814:	ldrb	r5, [ip, r7]
   12818:	cmp	r5, #126	; 0x7e
   1281c:	bhi	12c28 <__mempcpy_chk@plt+0x1b84>
   12820:	add	r3, pc, #16
   12824:	mov	r4, #1
   12828:	mov	r2, #110	; 0x6e
   1282c:	mov	r0, #97	; 0x61
   12830:	mov	r1, #0
   12834:	ldr	pc, [r3, r5, lsl #2]
   12838:	andeq	r2, r1, r8, lsl #22
   1283c:	andeq	r2, r1, r8, lsr #24
   12840:	andeq	r2, r1, r8, lsr #24
   12844:	andeq	r2, r1, r8, lsr #24
   12848:	andeq	r2, r1, r8, lsr #24
   1284c:	andeq	r2, r1, r8, lsr #24
   12850:	andeq	r2, r1, r8, lsr #24
   12854:	andeq	r2, r1, r4, lsl #26
   12858:	andeq	r2, r1, r8, ror #21
   1285c:	ldrdeq	r2, [r1], -r0
   12860:	strdeq	r2, [r1], -r4
   12864:	andeq	r2, r1, r4, lsl #23
   12868:	andeq	r2, r1, r8, asr #21
   1286c:	strdeq	r2, [r1], -r0
   12870:	andeq	r2, r1, r8, lsr #24
   12874:	andeq	r2, r1, r8, lsr #24
   12878:	andeq	r2, r1, r8, lsr #24
   1287c:	andeq	r2, r1, r8, lsr #24
   12880:	andeq	r2, r1, r8, lsr #24
   12884:	andeq	r2, r1, r8, lsr #24
   12888:	andeq	r2, r1, r8, lsr #24
   1288c:	andeq	r2, r1, r8, lsr #24
   12890:	andeq	r2, r1, r8, lsr #24
   12894:	andeq	r2, r1, r8, lsr #24
   12898:	andeq	r2, r1, r8, lsr #24
   1289c:	andeq	r2, r1, r8, lsr #24
   128a0:	andeq	r2, r1, r8, lsr #24
   128a4:	andeq	r2, r1, r8, lsr #24
   128a8:	andeq	r2, r1, r8, lsr #24
   128ac:	andeq	r2, r1, r8, lsr #24
   128b0:	andeq	r2, r1, r8, lsr #24
   128b4:	andeq	r2, r1, r8, lsr #24
   128b8:	andeq	r2, r1, r0, lsl #25
   128bc:	andeq	r2, r1, r4, lsl #25
   128c0:	andeq	r2, r1, r4, lsl #25
   128c4:	andeq	r2, r1, r4, asr sl
   128c8:	andeq	r2, r1, r4, lsl #25
   128cc:	andeq	r2, r1, r4, lsr sl
   128d0:	andeq	r2, r1, r4, lsl #25
   128d4:	andeq	r2, r1, ip, lsl #23
   128d8:	andeq	r2, r1, r4, lsl #25
   128dc:	andeq	r2, r1, r4, lsl #25
   128e0:	andeq	r2, r1, r4, lsl #25
   128e4:	andeq	r2, r1, r4, lsr sl
   128e8:	andeq	r2, r1, r4, lsr sl
   128ec:	andeq	r2, r1, r4, lsr sl
   128f0:	andeq	r2, r1, r4, lsr sl
   128f4:	andeq	r2, r1, r4, lsr sl
   128f8:	andeq	r2, r1, r4, lsr sl
   128fc:	andeq	r2, r1, r4, lsr sl
   12900:	andeq	r2, r1, r4, lsr sl
   12904:	andeq	r2, r1, r4, lsr sl
   12908:	andeq	r2, r1, r4, lsr sl
   1290c:	andeq	r2, r1, r4, lsr sl
   12910:	andeq	r2, r1, r4, lsr sl
   12914:	andeq	r2, r1, r4, lsr sl
   12918:	andeq	r2, r1, r4, lsr sl
   1291c:	andeq	r2, r1, r4, lsr sl
   12920:	andeq	r2, r1, r4, lsr sl
   12924:	andeq	r2, r1, r4, lsl #25
   12928:	andeq	r2, r1, r4, lsl #25
   1292c:	andeq	r2, r1, r4, lsl #25
   12930:	andeq	r2, r1, r4, lsl #25
   12934:	andeq	r2, r1, r8, asr #22
   12938:	andeq	r2, r1, r8, lsr #24
   1293c:	andeq	r2, r1, r4, lsr sl
   12940:	andeq	r2, r1, r4, lsr sl
   12944:	andeq	r2, r1, r4, lsr sl
   12948:	andeq	r2, r1, r4, lsr sl
   1294c:	andeq	r2, r1, r4, lsr sl
   12950:	andeq	r2, r1, r4, lsr sl
   12954:	andeq	r2, r1, r4, lsr sl
   12958:	andeq	r2, r1, r4, lsr sl
   1295c:	andeq	r2, r1, r4, lsr sl
   12960:	andeq	r2, r1, r4, lsr sl
   12964:	andeq	r2, r1, r4, lsr sl
   12968:	andeq	r2, r1, r4, lsr sl
   1296c:	andeq	r2, r1, r4, lsr sl
   12970:	andeq	r2, r1, r4, lsr sl
   12974:	andeq	r2, r1, r4, lsr sl
   12978:	andeq	r2, r1, r4, lsr sl
   1297c:	andeq	r2, r1, r4, lsr sl
   12980:	andeq	r2, r1, r4, lsr sl
   12984:	andeq	r2, r1, r4, lsr sl
   12988:	andeq	r2, r1, r4, lsr sl
   1298c:	andeq	r2, r1, r4, lsr sl
   12990:	andeq	r2, r1, r4, lsr sl
   12994:	andeq	r2, r1, r4, lsr sl
   12998:	andeq	r2, r1, r4, lsr sl
   1299c:	andeq	r2, r1, r4, lsr sl
   129a0:	andeq	r2, r1, r4, lsr sl
   129a4:	andeq	r2, r1, r4, lsl #25
   129a8:	muleq	r1, r4, sl
   129ac:	andeq	r2, r1, r4, lsr sl
   129b0:	andeq	r2, r1, r4, lsl #25
   129b4:	andeq	r2, r1, r4, lsr sl
   129b8:	andeq	r2, r1, r4, lsl #25
   129bc:	andeq	r2, r1, r4, lsr sl
   129c0:	andeq	r2, r1, r4, lsr sl
   129c4:	andeq	r2, r1, r4, lsr sl
   129c8:	andeq	r2, r1, r4, lsr sl
   129cc:	andeq	r2, r1, r4, lsr sl
   129d0:	andeq	r2, r1, r4, lsr sl
   129d4:	andeq	r2, r1, r4, lsr sl
   129d8:	andeq	r2, r1, r4, lsr sl
   129dc:	andeq	r2, r1, r4, lsr sl
   129e0:	andeq	r2, r1, r4, lsr sl
   129e4:	andeq	r2, r1, r4, lsr sl
   129e8:	andeq	r2, r1, r4, lsr sl
   129ec:	andeq	r2, r1, r4, lsr sl
   129f0:	andeq	r2, r1, r4, lsr sl
   129f4:	andeq	r2, r1, r4, lsr sl
   129f8:	andeq	r2, r1, r4, lsr sl
   129fc:	andeq	r2, r1, r4, lsr sl
   12a00:	andeq	r2, r1, r4, lsr sl
   12a04:	andeq	r2, r1, r4, lsr sl
   12a08:	andeq	r2, r1, r4, lsr sl
   12a0c:	andeq	r2, r1, r4, lsr sl
   12a10:	andeq	r2, r1, r4, lsr sl
   12a14:	andeq	r2, r1, r4, lsr sl
   12a18:	andeq	r2, r1, r4, lsr sl
   12a1c:	andeq	r2, r1, r4, lsr sl
   12a20:	andeq	r2, r1, r4, lsr sl
   12a24:	andeq	r2, r1, r4, ror sl
   12a28:	andeq	r2, r1, r4, lsl #25
   12a2c:	andeq	r2, r1, r4, ror sl
   12a30:	andeq	r2, r1, r4, asr sl
   12a34:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12a38:	cmp	r0, #0
   12a3c:	beq	12d18 <__mempcpy_chk@plt+0x1c74>
   12a40:	ldr	r0, [fp, #16]
   12a44:	cmp	r0, #0
   12a48:	mov	r0, r5
   12a4c:	bne	12d28 <__mempcpy_chk@plt+0x1c84>
   12a50:	b	12d48 <__mempcpy_chk@plt+0x1ca4>
   12a54:	mov	r4, #0
   12a58:	cmp	r7, #0
   12a5c:	beq	12c80 <__mempcpy_chk@plt+0x1bdc>
   12a60:	mov	r8, #0
   12a64:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12a68:	cmp	r0, #0
   12a6c:	bne	12a40 <__mempcpy_chk@plt+0x199c>
   12a70:	b	12d18 <__mempcpy_chk@plt+0x1c74>
   12a74:	mov	r4, #0
   12a78:	cmn	lr, #1
   12a7c:	beq	12c58 <__mempcpy_chk@plt+0x1bb4>
   12a80:	cmp	r7, #0
   12a84:	bne	12a60 <__mempcpy_chk@plt+0x19bc>
   12a88:	cmp	lr, #1
   12a8c:	beq	12c80 <__mempcpy_chk@plt+0x1bdc>
   12a90:	b	12a60 <__mempcpy_chk@plt+0x19bc>
   12a94:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12a98:	cmp	r0, #2
   12a9c:	bne	12cb0 <__mempcpy_chk@plt+0x1c0c>
   12aa0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12aa4:	tst	r0, #1
   12aa8:	bne	13510 <__mempcpy_chk@plt+0x246c>
   12aac:	mov	r8, #0
   12ab0:	mov	r0, #92	; 0x5c
   12ab4:	mov	r4, #0
   12ab8:	cmp	r8, #0
   12abc:	beq	12cd0 <__mempcpy_chk@plt+0x1c2c>
   12ac0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   12ac4:	b	12dc4 <__mempcpy_chk@plt+0x1d20>
   12ac8:	mov	r0, #102	; 0x66
   12acc:	b	12d04 <__mempcpy_chk@plt+0x1c60>
   12ad0:	mov	r2, #116	; 0x74
   12ad4:	ldr	r0, [sp, #60]	; 0x3c
   12ad8:	tst	r0, #1
   12adc:	mov	r0, r2
   12ae0:	bne	12d04 <__mempcpy_chk@plt+0x1c60>
   12ae4:	b	13510 <__mempcpy_chk@plt+0x246c>
   12ae8:	mov	r0, #98	; 0x62
   12aec:	b	12d04 <__mempcpy_chk@plt+0x1c60>
   12af0:	mov	r2, #114	; 0x72
   12af4:	ldr	r0, [sp, #60]	; 0x3c
   12af8:	tst	r0, #1
   12afc:	mov	r0, r2
   12b00:	bne	12d04 <__mempcpy_chk@plt+0x1c60>
   12b04:	b	13510 <__mempcpy_chk@plt+0x246c>
   12b08:	ldr	r0, [sp, #80]	; 0x50
   12b0c:	tst	r0, #1
   12b10:	beq	12dec <__mempcpy_chk@plt+0x1d48>
   12b14:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12b18:	tst	r0, #1
   12b1c:	bne	13638 <__mempcpy_chk@plt+0x2594>
   12b20:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12b24:	ldr	r2, [fp, #-48]	; 0xffffffd0
   12b28:	cmp	r0, #2
   12b2c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   12b30:	movwne	r0, #1
   12b34:	orr	r0, r0, r2
   12b38:	tst	r0, #1
   12b3c:	beq	130e4 <__mempcpy_chk@plt+0x2040>
   12b40:	mov	r0, r9
   12b44:	b	13118 <__mempcpy_chk@plt+0x2074>
   12b48:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12b4c:	mov	r8, #0
   12b50:	mov	r5, #63	; 0x3f
   12b54:	cmp	r0, #5
   12b58:	beq	12fa0 <__mempcpy_chk@plt+0x1efc>
   12b5c:	cmp	r0, #2
   12b60:	bne	13050 <__mempcpy_chk@plt+0x1fac>
   12b64:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12b68:	tst	r0, #1
   12b6c:	bne	13510 <__mempcpy_chk@plt+0x246c>
   12b70:	mov	r4, #0
   12b74:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12b78:	cmp	r0, #0
   12b7c:	bne	12a40 <__mempcpy_chk@plt+0x199c>
   12b80:	b	12d18 <__mempcpy_chk@plt+0x1c74>
   12b84:	mov	r0, #118	; 0x76
   12b88:	b	12d04 <__mempcpy_chk@plt+0x1c60>
   12b8c:	mov	r0, #1
   12b90:	mov	r5, #39	; 0x27
   12b94:	str	r0, [sp, #52]	; 0x34
   12b98:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12b9c:	cmp	r0, #2
   12ba0:	bne	12c14 <__mempcpy_chk@plt+0x1b70>
   12ba4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12ba8:	tst	r0, #1
   12bac:	bne	13510 <__mempcpy_chk@plt+0x246c>
   12bb0:	ldr	r2, [sp, #48]	; 0x30
   12bb4:	clz	r1, sl
   12bb8:	mov	r8, #0
   12bbc:	lsr	r1, r1, #5
   12bc0:	cmp	r2, #0
   12bc4:	mov	r0, r2
   12bc8:	movwne	r0, #1
   12bcc:	orrs	r0, r0, r1
   12bd0:	moveq	r2, sl
   12bd4:	moveq	sl, r0
   12bd8:	cmp	r9, sl
   12bdc:	str	r2, [sp, #48]	; 0x30
   12be0:	movcc	r0, #39	; 0x27
   12be4:	strbcc	r0, [r6, r9]
   12be8:	add	r0, r9, #1
   12bec:	cmp	r0, sl
   12bf0:	movcc	r1, #92	; 0x5c
   12bf4:	strbcc	r1, [r6, r0]
   12bf8:	add	r0, r9, #2
   12bfc:	add	r9, r9, #3
   12c00:	cmp	r0, sl
   12c04:	movcc	r1, #39	; 0x27
   12c08:	strbcc	r1, [r6, r0]
   12c0c:	mov	r0, #0
   12c10:	str	r0, [fp, #-48]	; 0xffffffd0
   12c14:	mov	r4, #1
   12c18:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12c1c:	cmp	r0, #0
   12c20:	bne	12a40 <__mempcpy_chk@plt+0x199c>
   12c24:	b	12d18 <__mempcpy_chk@plt+0x1c74>
   12c28:	ldr	r0, [sp, #32]
   12c2c:	cmp	r0, #1
   12c30:	bne	12e1c <__mempcpy_chk@plt+0x1d78>
   12c34:	str	lr, [sp, #84]	; 0x54
   12c38:	bl	10f90 <__ctype_b_loc@plt>
   12c3c:	ldr	r0, [r0]
   12c40:	ldr	ip, [fp, #-84]	; 0xffffffac
   12c44:	mov	r1, #1
   12c48:	add	r0, r0, r5, lsl #1
   12c4c:	ldrb	r0, [r0, #1]
   12c50:	ubfx	r4, r0, #6, #1
   12c54:	b	13214 <__mempcpy_chk@plt+0x2170>
   12c58:	cmp	r7, #0
   12c5c:	ldrbeq	r0, [ip, #1]
   12c60:	cmpeq	r0, #0
   12c64:	beq	12c80 <__mempcpy_chk@plt+0x1bdc>
   12c68:	mvn	lr, #0
   12c6c:	mov	r8, #0
   12c70:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12c74:	cmp	r0, #0
   12c78:	bne	12a40 <__mempcpy_chk@plt+0x199c>
   12c7c:	b	12d18 <__mempcpy_chk@plt+0x1c74>
   12c80:	mov	r1, #1
   12c84:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12c88:	cmp	r0, #2
   12c8c:	bne	12c9c <__mempcpy_chk@plt+0x1bf8>
   12c90:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12c94:	tst	r0, #1
   12c98:	bne	13510 <__mempcpy_chk@plt+0x246c>
   12c9c:	mov	r4, r1
   12ca0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12ca4:	cmp	r0, #0
   12ca8:	bne	12a40 <__mempcpy_chk@plt+0x199c>
   12cac:	b	12d18 <__mempcpy_chk@plt+0x1c74>
   12cb0:	ldr	r1, [sp, #40]	; 0x28
   12cb4:	mov	r8, #0
   12cb8:	mov	r0, #92	; 0x5c
   12cbc:	cmp	r1, #0
   12cc0:	beq	12d04 <__mempcpy_chk@plt+0x1c60>
   12cc4:	mov	r4, #0
   12cc8:	cmp	r8, #0
   12ccc:	bne	12ac0 <__mempcpy_chk@plt+0x1a1c>
   12cd0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   12cd4:	tst	r2, #1
   12cd8:	beq	12dc4 <__mempcpy_chk@plt+0x1d20>
   12cdc:	cmp	r9, sl
   12ce0:	movcc	r1, #39	; 0x27
   12ce4:	strbcc	r1, [r6, r9]
   12ce8:	add	r1, r9, #1
   12cec:	add	r9, r9, #2
   12cf0:	cmp	r1, sl
   12cf4:	movcc	r2, #39	; 0x27
   12cf8:	strbcc	r2, [r6, r1]
   12cfc:	mov	r2, #0
   12d00:	b	12dc4 <__mempcpy_chk@plt+0x1d20>
   12d04:	ldr	r1, [sp, #80]	; 0x50
   12d08:	mov	r4, #0
   12d0c:	mov	r8, #0
   12d10:	tst	r1, #1
   12d14:	bne	12d54 <__mempcpy_chk@plt+0x1cb0>
   12d18:	ldr	r0, [fp, #-88]	; 0xffffffa8
   12d1c:	cmp	r0, #0
   12d20:	mov	r0, r5
   12d24:	beq	12d48 <__mempcpy_chk@plt+0x1ca4>
   12d28:	ldr	r1, [fp, #16]
   12d2c:	ubfx	r0, r5, #5, #3
   12d30:	mov	r2, #1
   12d34:	ldr	r0, [r1, r0, lsl #2]
   12d38:	and	r1, r5, #31
   12d3c:	tst	r0, r2, lsl r1
   12d40:	mov	r0, r5
   12d44:	bne	12d54 <__mempcpy_chk@plt+0x1cb0>
   12d48:	ldr	r1, [fp, #-56]	; 0xffffffc8
   12d4c:	cmp	r1, #0
   12d50:	beq	131ac <__mempcpy_chk@plt+0x2108>
   12d54:	ldr	r1, [fp, #-72]	; 0xffffffb8
   12d58:	tst	r1, #1
   12d5c:	bne	134f0 <__mempcpy_chk@plt+0x244c>
   12d60:	ldr	r1, [fp, #-64]	; 0xffffffc0
   12d64:	ldr	r2, [fp, #-48]	; 0xffffffd0
   12d68:	cmp	r1, #2
   12d6c:	ldr	r1, [fp, #-80]	; 0xffffffb0
   12d70:	movwne	r1, #1
   12d74:	orr	r1, r1, r2
   12d78:	tst	r1, #1
   12d7c:	bne	12db4 <__mempcpy_chk@plt+0x1d10>
   12d80:	cmp	r9, sl
   12d84:	movcc	r1, #39	; 0x27
   12d88:	strbcc	r1, [r6, r9]
   12d8c:	add	r1, r9, #1
   12d90:	cmp	r1, sl
   12d94:	movcc	r2, #36	; 0x24
   12d98:	strbcc	r2, [r6, r1]
   12d9c:	add	r1, r9, #2
   12da0:	add	r9, r9, #3
   12da4:	cmp	r1, sl
   12da8:	movcc	r2, #39	; 0x27
   12dac:	strbcc	r2, [r6, r1]
   12db0:	mov	r2, #1
   12db4:	cmp	r9, sl
   12db8:	movcc	r1, #92	; 0x5c
   12dbc:	strbcc	r1, [r6, r9]
   12dc0:	add	r9, r9, #1
   12dc4:	cmp	r9, sl
   12dc8:	add	r7, r7, #1
   12dcc:	strbcc	r0, [r6, r9]
   12dd0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12dd4:	add	r9, r9, #1
   12dd8:	and	r0, r0, r4
   12ddc:	mov	r4, r0
   12de0:	cmn	lr, #1
   12de4:	bne	12758 <__mempcpy_chk@plt+0x16b4>
   12de8:	b	12764 <__mempcpy_chk@plt+0x16c0>
   12dec:	ldr	r0, [sp, #28]
   12df0:	mov	r4, #0
   12df4:	mov	r8, #0
   12df8:	mov	r5, #0
   12dfc:	cmp	r0, #0
   12e00:	beq	12d18 <__mempcpy_chk@plt+0x1c74>
   12e04:	ldr	r4, [fp, #-52]	; 0xffffffcc
   12e08:	ldr	r2, [fp, #-48]	; 0xffffffd0
   12e0c:	add	r7, r7, #1
   12e10:	cmn	lr, #1
   12e14:	bne	12758 <__mempcpy_chk@plt+0x16b4>
   12e18:	b	12764 <__mempcpy_chk@plt+0x16c0>
   12e1c:	mov	r0, #0
   12e20:	cmn	lr, #1
   12e24:	str	r0, [fp, #-36]	; 0xffffffdc
   12e28:	str	r0, [fp, #-40]	; 0xffffffd8
   12e2c:	bne	12e40 <__mempcpy_chk@plt+0x1d9c>
   12e30:	mov	r0, ip
   12e34:	bl	10fa8 <strlen@plt>
   12e38:	ldr	ip, [fp, #-84]	; 0xffffffac
   12e3c:	mov	lr, r0
   12e40:	ldr	r0, [sp, #36]	; 0x24
   12e44:	str	sl, [sp, #56]	; 0x38
   12e48:	str	lr, [sp, #84]	; 0x54
   12e4c:	cmp	r0, #0
   12e50:	beq	13068 <__mempcpy_chk@plt+0x1fc4>
   12e54:	add	r0, ip, r7
   12e58:	mov	r4, #1
   12e5c:	mov	r6, #0
   12e60:	sub	sl, fp, #40	; 0x28
   12e64:	str	r0, [sp, #20]
   12e68:	str	r6, [sp, #64]	; 0x40
   12e6c:	add	r6, r6, r7
   12e70:	sub	r0, fp, #44	; 0x2c
   12e74:	mov	r3, sl
   12e78:	add	r1, ip, r6
   12e7c:	sub	r2, lr, r6
   12e80:	bl	151e4 <__mempcpy_chk@plt+0x4140>
   12e84:	cmn	r0, #2
   12e88:	beq	131c4 <__mempcpy_chk@plt+0x2120>
   12e8c:	ldr	sl, [sp, #56]	; 0x38
   12e90:	cmn	r0, #1
   12e94:	beq	131b8 <__mempcpy_chk@plt+0x2114>
   12e98:	cmp	r0, #0
   12e9c:	beq	131bc <__mempcpy_chk@plt+0x2118>
   12ea0:	cmp	r0, #2
   12ea4:	bcc	12f64 <__mempcpy_chk@plt+0x1ec0>
   12ea8:	ldr	r1, [sp, #64]	; 0x40
   12eac:	ldr	r2, [sp, #20]
   12eb0:	add	r1, r2, r1
   12eb4:	mov	r2, #1
   12eb8:	ldrb	r3, [r1, r2]
   12ebc:	sub	r3, r3, #91	; 0x5b
   12ec0:	cmp	r3, #33	; 0x21
   12ec4:	bhi	12f58 <__mempcpy_chk@plt+0x1eb4>
   12ec8:	add	r6, pc, #0
   12ecc:	ldr	pc, [r6, r3, lsl #2]
   12ed0:	andeq	r3, r1, ip, lsl r5
   12ed4:	andeq	r3, r1, ip, lsl r5
   12ed8:	andeq	r2, r1, r8, asr pc
   12edc:	andeq	r3, r1, ip, lsl r5
   12ee0:	andeq	r2, r1, r8, asr pc
   12ee4:	andeq	r3, r1, ip, lsl r5
   12ee8:	andeq	r2, r1, r8, asr pc
   12eec:	andeq	r2, r1, r8, asr pc
   12ef0:	andeq	r2, r1, r8, asr pc
   12ef4:	andeq	r2, r1, r8, asr pc
   12ef8:	andeq	r2, r1, r8, asr pc
   12efc:	andeq	r2, r1, r8, asr pc
   12f00:	andeq	r2, r1, r8, asr pc
   12f04:	andeq	r2, r1, r8, asr pc
   12f08:	andeq	r2, r1, r8, asr pc
   12f0c:	andeq	r2, r1, r8, asr pc
   12f10:	andeq	r2, r1, r8, asr pc
   12f14:	andeq	r2, r1, r8, asr pc
   12f18:	andeq	r2, r1, r8, asr pc
   12f1c:	andeq	r2, r1, r8, asr pc
   12f20:	andeq	r2, r1, r8, asr pc
   12f24:	andeq	r2, r1, r8, asr pc
   12f28:	andeq	r2, r1, r8, asr pc
   12f2c:	andeq	r2, r1, r8, asr pc
   12f30:	andeq	r2, r1, r8, asr pc
   12f34:	andeq	r2, r1, r8, asr pc
   12f38:	andeq	r2, r1, r8, asr pc
   12f3c:	andeq	r2, r1, r8, asr pc
   12f40:	andeq	r2, r1, r8, asr pc
   12f44:	andeq	r2, r1, r8, asr pc
   12f48:	andeq	r2, r1, r8, asr pc
   12f4c:	andeq	r2, r1, r8, asr pc
   12f50:	andeq	r2, r1, r8, asr pc
   12f54:	andeq	r3, r1, ip, lsl r5
   12f58:	add	r2, r2, #1
   12f5c:	cmp	r2, r0
   12f60:	bcc	12eb8 <__mempcpy_chk@plt+0x1e14>
   12f64:	ldr	r6, [sp, #64]	; 0x40
   12f68:	add	r6, r0, r6
   12f6c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12f70:	bl	10edc <iswprint@plt>
   12f74:	cmp	r0, #0
   12f78:	sub	sl, fp, #40	; 0x28
   12f7c:	movwne	r0, #1
   12f80:	and	r4, r4, r0
   12f84:	mov	r0, sl
   12f88:	bl	10ea0 <mbsinit@plt>
   12f8c:	ldr	ip, [fp, #-84]	; 0xffffffac
   12f90:	ldr	lr, [sp, #84]	; 0x54
   12f94:	cmp	r0, #0
   12f98:	beq	12e68 <__mempcpy_chk@plt+0x1dc4>
   12f9c:	b	13208 <__mempcpy_chk@plt+0x2164>
   12fa0:	ldr	r0, [sp, #24]
   12fa4:	cmp	r0, #0
   12fa8:	beq	13050 <__mempcpy_chk@plt+0x1fac>
   12fac:	add	r0, r7, #2
   12fb0:	cmp	r0, lr
   12fb4:	bcs	13050 <__mempcpy_chk@plt+0x1fac>
   12fb8:	add	r1, ip, r7
   12fbc:	ldrb	r1, [r1, #1]
   12fc0:	cmp	r1, #63	; 0x3f
   12fc4:	bne	13050 <__mempcpy_chk@plt+0x1fac>
   12fc8:	ldrb	r5, [ip, r0]
   12fcc:	sub	r1, r5, #33	; 0x21
   12fd0:	cmp	r1, #29
   12fd4:	bhi	13050 <__mempcpy_chk@plt+0x1fac>
   12fd8:	movw	r3, #20929	; 0x51c1
   12fdc:	mov	r2, #1
   12fe0:	movt	r3, #14336	; 0x3800
   12fe4:	tst	r3, r2, lsl r1
   12fe8:	beq	13050 <__mempcpy_chk@plt+0x1fac>
   12fec:	ldr	r1, [fp, #-72]	; 0xffffffb8
   12ff0:	tst	r1, #1
   12ff4:	bne	13640 <__mempcpy_chk@plt+0x259c>
   12ff8:	cmp	r9, sl
   12ffc:	mov	r7, r0
   13000:	mov	r4, #0
   13004:	movcc	r1, #63	; 0x3f
   13008:	strbcc	r1, [r6, r9]
   1300c:	add	r1, r9, #1
   13010:	cmp	r1, sl
   13014:	movcc	r2, #34	; 0x22
   13018:	strbcc	r2, [r6, r1]
   1301c:	add	r1, r9, #2
   13020:	cmp	r1, sl
   13024:	movcc	r2, #34	; 0x22
   13028:	strbcc	r2, [r6, r1]
   1302c:	add	r1, r9, #3
   13030:	add	r9, r9, #4
   13034:	cmp	r1, sl
   13038:	movcc	r2, #63	; 0x3f
   1303c:	strbcc	r2, [r6, r1]
   13040:	ldr	r0, [fp, #-68]	; 0xffffffbc
   13044:	cmp	r0, #0
   13048:	bne	12a40 <__mempcpy_chk@plt+0x199c>
   1304c:	b	12d18 <__mempcpy_chk@plt+0x1c74>
   13050:	mov	r5, #63	; 0x3f
   13054:	mov	r4, #0
   13058:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1305c:	cmp	r0, #0
   13060:	bne	12a40 <__mempcpy_chk@plt+0x199c>
   13064:	b	12d18 <__mempcpy_chk@plt+0x1c74>
   13068:	mov	r4, #1
   1306c:	mov	r6, #0
   13070:	sub	sl, fp, #40	; 0x28
   13074:	str	r6, [sp, #64]	; 0x40
   13078:	add	r6, r6, r7
   1307c:	sub	r0, fp, #44	; 0x2c
   13080:	mov	r3, sl
   13084:	add	r1, ip, r6
   13088:	sub	r2, lr, r6
   1308c:	bl	151e4 <__mempcpy_chk@plt+0x4140>
   13090:	cmn	r0, #2
   13094:	beq	131c4 <__mempcpy_chk@plt+0x2120>
   13098:	cmn	r0, #1
   1309c:	beq	131b8 <__mempcpy_chk@plt+0x2114>
   130a0:	ldr	r6, [sp, #64]	; 0x40
   130a4:	cmp	r0, #0
   130a8:	beq	13204 <__mempcpy_chk@plt+0x2160>
   130ac:	add	r6, r0, r6
   130b0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   130b4:	bl	10edc <iswprint@plt>
   130b8:	cmp	r0, #0
   130bc:	sub	sl, fp, #40	; 0x28
   130c0:	movwne	r0, #1
   130c4:	and	r4, r4, r0
   130c8:	mov	r0, sl
   130cc:	bl	10ea0 <mbsinit@plt>
   130d0:	ldr	ip, [fp, #-84]	; 0xffffffac
   130d4:	ldr	lr, [sp, #84]	; 0x54
   130d8:	cmp	r0, #0
   130dc:	beq	13074 <__mempcpy_chk@plt+0x1fd0>
   130e0:	b	13208 <__mempcpy_chk@plt+0x2164>
   130e4:	cmp	r9, sl
   130e8:	mov	r2, #1
   130ec:	movcc	r0, #39	; 0x27
   130f0:	strbcc	r0, [r6, r9]
   130f4:	add	r0, r9, #1
   130f8:	cmp	r0, sl
   130fc:	movcc	r1, #36	; 0x24
   13100:	strbcc	r1, [r6, r0]
   13104:	add	r0, r9, #2
   13108:	cmp	r0, sl
   1310c:	movcc	r1, #39	; 0x27
   13110:	strbcc	r1, [r6, r0]
   13114:	add	r0, r9, #3
   13118:	cmp	r0, sl
   1311c:	add	r9, r0, #1
   13120:	str	r2, [fp, #-48]	; 0xffffffd0
   13124:	movcc	r1, #92	; 0x5c
   13128:	strbcc	r1, [r6, r0]
   1312c:	ldr	r1, [fp, #-64]	; 0xffffffc0
   13130:	cmp	r1, #2
   13134:	beq	13194 <__mempcpy_chk@plt+0x20f0>
   13138:	add	r1, r7, #1
   1313c:	mov	r4, #0
   13140:	mov	r8, #1
   13144:	mov	r5, #48	; 0x30
   13148:	cmp	r1, lr
   1314c:	bcs	12a34 <__mempcpy_chk@plt+0x1990>
   13150:	ldrb	r1, [ip, r1]
   13154:	sub	r1, r1, #48	; 0x30
   13158:	uxtb	r1, r1
   1315c:	cmp	r1, #9
   13160:	bhi	12a34 <__mempcpy_chk@plt+0x1990>
   13164:	cmp	r9, sl
   13168:	movcc	r1, #48	; 0x30
   1316c:	strbcc	r1, [r6, r9]
   13170:	add	r1, r0, #2
   13174:	add	r9, r0, #3
   13178:	cmp	r1, sl
   1317c:	movcc	r2, #48	; 0x30
   13180:	strbcc	r2, [r6, r1]
   13184:	ldr	r0, [fp, #-68]	; 0xffffffbc
   13188:	cmp	r0, #0
   1318c:	bne	12a40 <__mempcpy_chk@plt+0x199c>
   13190:	b	12d18 <__mempcpy_chk@plt+0x1c74>
   13194:	mov	r0, #48	; 0x30
   13198:	mov	r8, #1
   1319c:	mov	r4, #0
   131a0:	ldr	r1, [fp, #-56]	; 0xffffffc8
   131a4:	cmp	r1, #0
   131a8:	bne	12d54 <__mempcpy_chk@plt+0x1cb0>
   131ac:	cmp	r8, #0
   131b0:	beq	12cd0 <__mempcpy_chk@plt+0x1c2c>
   131b4:	b	12ac0 <__mempcpy_chk@plt+0x1a1c>
   131b8:	mov	r4, #0
   131bc:	ldr	ip, [fp, #-84]	; 0xffffffac
   131c0:	b	131fc <__mempcpy_chk@plt+0x2158>
   131c4:	ldr	r1, [sp, #84]	; 0x54
   131c8:	ldr	ip, [fp, #-84]	; 0xffffffac
   131cc:	mov	r4, #0
   131d0:	cmp	r6, r1
   131d4:	bcs	131fc <__mempcpy_chk@plt+0x2158>
   131d8:	ldrb	r0, [ip, r6]
   131dc:	cmp	r0, #0
   131e0:	beq	131fc <__mempcpy_chk@plt+0x2158>
   131e4:	ldr	r0, [sp, #64]	; 0x40
   131e8:	add	r0, r0, #1
   131ec:	add	r6, r0, r7
   131f0:	str	r0, [sp, #64]	; 0x40
   131f4:	cmp	r6, r1
   131f8:	bcc	131d8 <__mempcpy_chk@plt+0x2134>
   131fc:	ldr	r6, [sp, #64]	; 0x40
   13200:	b	13208 <__mempcpy_chk@plt+0x2164>
   13204:	ldr	ip, [fp, #-84]	; 0xffffffac
   13208:	mov	r1, r6
   1320c:	ldr	r6, [sp, #76]	; 0x4c
   13210:	ldr	sl, [sp, #56]	; 0x38
   13214:	ldr	r0, [sp, #44]	; 0x2c
   13218:	cmp	r1, #1
   1321c:	orr	r2, r4, r0
   13220:	mov	r0, r1
   13224:	bhi	13244 <__mempcpy_chk@plt+0x21a0>
   13228:	tst	r2, #1
   1322c:	beq	13244 <__mempcpy_chk@plt+0x21a0>
   13230:	ldr	lr, [sp, #84]	; 0x54
   13234:	ldr	r0, [fp, #-68]	; 0xffffffbc
   13238:	cmp	r0, #0
   1323c:	bne	12a40 <__mempcpy_chk@plt+0x199c>
   13240:	b	12d18 <__mempcpy_chk@plt+0x1c74>
   13244:	str	r2, [sp, #64]	; 0x40
   13248:	add	r0, r0, r7
   1324c:	add	r1, r7, #1
   13250:	ldr	lr, [sp, #84]	; 0x54
   13254:	ldr	r7, [fp, #-64]	; 0xffffffc0
   13258:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1325c:	mov	r3, #0
   13260:	str	r0, [sp, #56]	; 0x38
   13264:	ldr	r0, [sp, #64]	; 0x40
   13268:	tst	r0, #1
   1326c:	bne	13354 <__mempcpy_chk@plt+0x22b0>
   13270:	ldr	r0, [fp, #-72]	; 0xffffffb8
   13274:	tst	r0, #1
   13278:	bne	134f4 <__mempcpy_chk@plt+0x2450>
   1327c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   13280:	cmp	r7, #2
   13284:	movwne	r3, #1
   13288:	orr	r3, r3, r2
   1328c:	tst	r3, #1
   13290:	bne	132c8 <__mempcpy_chk@plt+0x2224>
   13294:	cmp	r9, sl
   13298:	add	r3, r9, #1
   1329c:	movcc	r2, #39	; 0x27
   132a0:	strbcc	r2, [r6, r9]
   132a4:	cmp	r3, sl
   132a8:	movcc	r2, #36	; 0x24
   132ac:	strbcc	r2, [r6, r3]
   132b0:	add	r3, r9, #2
   132b4:	add	r9, r9, #3
   132b8:	cmp	r3, sl
   132bc:	movcc	r2, #39	; 0x27
   132c0:	strbcc	r2, [r6, r3]
   132c4:	mov	r2, #1
   132c8:	cmp	r9, sl
   132cc:	mov	r0, r2
   132d0:	movcc	r3, #92	; 0x5c
   132d4:	strbcc	r3, [r6, r9]
   132d8:	add	r3, r9, #1
   132dc:	cmp	r3, sl
   132e0:	andcc	r7, r5, #192	; 0xc0
   132e4:	movcc	r2, #48	; 0x30
   132e8:	orrcc	r7, r2, r7, lsr #6
   132ec:	strbcc	r7, [r6, r3]
   132f0:	add	r3, r9, #2
   132f4:	add	r9, r9, #3
   132f8:	cmp	r3, sl
   132fc:	lsrcc	r7, r5, #3
   13300:	movcc	r2, #6
   13304:	bficc	r7, r2, #3, #29
   13308:	mov	r2, #6
   1330c:	strbcc	r7, [r6, r3]
   13310:	bfi	r5, r2, #3, #29
   13314:	mov	r3, #1
   13318:	mov	r2, r0
   1331c:	ldr	r0, [sp, #56]	; 0x38
   13320:	and	r8, r3, #1
   13324:	cmp	r0, r1
   13328:	bhi	13388 <__mempcpy_chk@plt+0x22e4>
   1332c:	b	133c8 <__mempcpy_chk@plt+0x2324>
   13330:	cmp	r9, sl
   13334:	ldr	r7, [fp, #-64]	; 0xffffffc0
   13338:	strbcc	r5, [r6, r9]
   1333c:	add	r9, r9, #1
   13340:	ldrb	r5, [ip, r1]
   13344:	add	r1, r1, #1
   13348:	ldr	r0, [sp, #64]	; 0x40
   1334c:	tst	r0, #1
   13350:	beq	13270 <__mempcpy_chk@plt+0x21cc>
   13354:	ldr	r7, [fp, #-56]	; 0xffffffc8
   13358:	tst	r7, #1
   1335c:	beq	13370 <__mempcpy_chk@plt+0x22cc>
   13360:	cmp	r9, sl
   13364:	movcc	r7, #92	; 0x5c
   13368:	strbcc	r7, [r6, r9]
   1336c:	add	r9, r9, #1
   13370:	mov	r7, #0
   13374:	str	r7, [fp, #-56]	; 0xffffffc8
   13378:	ldr	r0, [sp, #56]	; 0x38
   1337c:	and	r8, r3, #1
   13380:	cmp	r0, r1
   13384:	bls	133c8 <__mempcpy_chk@plt+0x2324>
   13388:	cmp	r8, #0
   1338c:	mvn	r7, r2
   13390:	movwne	r8, #1
   13394:	orr	r7, r7, r8
   13398:	tst	r7, #1
   1339c:	bne	13330 <__mempcpy_chk@plt+0x228c>
   133a0:	cmp	r9, sl
   133a4:	movcc	r7, #39	; 0x27
   133a8:	strbcc	r7, [r6, r9]
   133ac:	add	r7, r9, #1
   133b0:	add	r9, r9, #2
   133b4:	cmp	r7, sl
   133b8:	movcc	r2, #39	; 0x27
   133bc:	strbcc	r2, [r6, r7]
   133c0:	mov	r2, #0
   133c4:	b	13330 <__mempcpy_chk@plt+0x228c>
   133c8:	cmp	r8, #0
   133cc:	sub	r7, r1, #1
   133d0:	mov	r0, r5
   133d4:	str	r2, [fp, #-48]	; 0xffffffd0
   133d8:	movwne	r8, #1
   133dc:	cmp	r8, #0
   133e0:	beq	12cd0 <__mempcpy_chk@plt+0x1c2c>
   133e4:	b	12ac0 <__mempcpy_chk@plt+0x1a1c>
   133e8:	mov	lr, r7
   133ec:	b	133f4 <__mempcpy_chk@plt+0x2350>
   133f0:	mvn	lr, #0
   133f4:	ldr	r7, [fp, #-64]	; 0xffffffc0
   133f8:	ldr	r1, [fp, #-72]	; 0xffffffb8
   133fc:	eor	r0, r7, #2
   13400:	orr	r0, r0, r9
   13404:	clz	r0, r0
   13408:	lsr	r0, r0, #5
   1340c:	tst	r1, r0
   13410:	bne	13510 <__mempcpy_chk@plt+0x246c>
   13414:	mov	r0, r1
   13418:	ldr	r1, [fp, #-80]	; 0xffffffb0
   1341c:	cmp	r7, #2
   13420:	movwne	r1, #1
   13424:	orr	r0, r0, r1
   13428:	tst	r0, #1
   1342c:	ldreq	r0, [sp, #52]	; 0x34
   13430:	streq	lr, [sp, #84]	; 0x54
   13434:	eoreq	r0, r0, #1
   13438:	tsteq	r0, #1
   1343c:	bne	135d4 <__mempcpy_chk@plt+0x2530>
   13440:	tst	r4, #1
   13444:	bne	13590 <__mempcpy_chk@plt+0x24ec>
   13448:	ldr	r6, [sp, #48]	; 0x30
   1344c:	mov	r8, #0
   13450:	cmp	r6, #0
   13454:	beq	135cc <__mempcpy_chk@plt+0x2528>
   13458:	ldr	r0, [sp, #80]	; 0x50
   1345c:	mov	r1, #0
   13460:	cmp	sl, #0
   13464:	mov	r4, #0
   13468:	str	r1, [fp, #-72]	; 0xffffffb8
   1346c:	beq	12360 <__mempcpy_chk@plt+0x12bc>
   13470:	b	135d4 <__mempcpy_chk@plt+0x2530>
   13474:	ldrb	r1, [r0, #3]
   13478:	cmp	r1, #56	; 0x38
   1347c:	ldrbeq	r1, [r0, #4]
   13480:	cmpeq	r1, #48	; 0x30
   13484:	bne	12558 <__mempcpy_chk@plt+0x14b4>
   13488:	ldrb	r1, [r0, #5]
   1348c:	cmp	r1, #51	; 0x33
   13490:	ldrbeq	r1, [r0, #6]
   13494:	cmpeq	r1, #48	; 0x30
   13498:	bne	12558 <__mempcpy_chk@plt+0x14b4>
   1349c:	ldrb	r0, [r0, #7]
   134a0:	cmp	r0, #0
   134a4:	movw	r0, #24470	; 0x5f96
   134a8:	movt	r0, #1
   134ac:	str	r0, [sp, #68]	; 0x44
   134b0:	bne	12558 <__mempcpy_chk@plt+0x14b4>
   134b4:	b	12574 <__mempcpy_chk@plt+0x14d0>
   134b8:	ldrb	r1, [r0, #4]
   134bc:	cmp	r1, #48	; 0x30
   134c0:	ldrbeq	r1, [r0, #5]
   134c4:	cmpeq	r1, #51	; 0x33
   134c8:	bne	1263c <__mempcpy_chk@plt+0x1598>
   134cc:	ldrb	r1, [r0, #6]
   134d0:	cmp	r1, #48	; 0x30
   134d4:	ldrbeq	r0, [r0, #7]
   134d8:	cmpeq	r0, #0
   134dc:	bne	1263c <__mempcpy_chk@plt+0x1598>
   134e0:	movw	r0, #24474	; 0x5f9a
   134e4:	movt	r0, #1
   134e8:	str	r0, [sp, #72]	; 0x48
   134ec:	b	1265c <__mempcpy_chk@plt+0x15b8>
   134f0:	ldr	r7, [fp, #-64]	; 0xffffffc0
   134f4:	ldr	r2, [sp, #80]	; 0x50
   134f8:	b	13530 <__mempcpy_chk@plt+0x248c>
   134fc:	ldr	ip, [fp, #-84]	; 0xffffffac
   13500:	mov	r2, #1
   13504:	mov	lr, r4
   13508:	ldr	r7, [fp, #-64]	; 0xffffffc0
   1350c:	b	13530 <__mempcpy_chk@plt+0x248c>
   13510:	ldr	r2, [sp, #80]	; 0x50
   13514:	mov	r7, #2
   13518:	b	13530 <__mempcpy_chk@plt+0x248c>
   1351c:	ldr	r6, [sp, #76]	; 0x4c
   13520:	ldr	ip, [fp, #-84]	; 0xffffffac
   13524:	ldr	lr, [sp, #84]	; 0x54
   13528:	ldr	r2, [sp, #80]	; 0x50
   1352c:	mov	r7, #2
   13530:	mov	r0, #0
   13534:	ldr	r1, [fp, #12]
   13538:	tst	r2, #1
   1353c:	mov	r2, r7
   13540:	mov	r3, lr
   13544:	str	r0, [sp, #8]
   13548:	ldr	r0, [sp, #68]	; 0x44
   1354c:	movwne	r2, #4
   13550:	cmp	r7, #2
   13554:	movne	r2, r7
   13558:	str	r2, [sp]
   1355c:	mov	r2, ip
   13560:	bic	r1, r1, #2
   13564:	str	r0, [sp, #12]
   13568:	ldr	r0, [sp, #72]	; 0x48
   1356c:	str	r1, [sp, #4]
   13570:	mov	r1, sl
   13574:	str	r0, [sp, #16]
   13578:	mov	r0, r6
   1357c:	bl	122e4 <__mempcpy_chk@plt+0x1240>
   13580:	mov	r9, r0
   13584:	mov	r0, r9
   13588:	sub	sp, fp, #28
   1358c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13590:	mov	r0, #5
   13594:	ldr	r1, [sp, #48]	; 0x30
   13598:	ldr	r2, [fp, #-84]	; 0xffffffac
   1359c:	ldr	r3, [sp, #84]	; 0x54
   135a0:	str	r0, [sp]
   135a4:	ldr	r0, [fp, #12]
   135a8:	str	r0, [sp, #4]
   135ac:	ldr	r0, [fp, #16]
   135b0:	str	r0, [sp, #8]
   135b4:	ldr	r0, [sp, #68]	; 0x44
   135b8:	str	r0, [sp, #12]
   135bc:	ldr	r0, [sp, #72]	; 0x48
   135c0:	str	r0, [sp, #16]
   135c4:	ldr	r0, [sp, #76]	; 0x4c
   135c8:	b	1357c <__mempcpy_chk@plt+0x24d8>
   135cc:	mov	r0, #0
   135d0:	str	r0, [fp, #-72]	; 0xffffffb8
   135d4:	ldr	r1, [sp, #92]	; 0x5c
   135d8:	cmp	r1, #0
   135dc:	beq	1361c <__mempcpy_chk@plt+0x2578>
   135e0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   135e4:	ldr	r2, [sp, #76]	; 0x4c
   135e8:	tst	r0, #1
   135ec:	bne	13620 <__mempcpy_chk@plt+0x257c>
   135f0:	ldrb	r0, [r1]
   135f4:	cmp	r0, #0
   135f8:	beq	13620 <__mempcpy_chk@plt+0x257c>
   135fc:	add	r1, r1, #1
   13600:	cmp	r9, sl
   13604:	strbcc	r0, [r2, r9]
   13608:	add	r9, r9, #1
   1360c:	ldrb	r0, [r1], #1
   13610:	cmp	r0, #0
   13614:	bne	13600 <__mempcpy_chk@plt+0x255c>
   13618:	b	13620 <__mempcpy_chk@plt+0x257c>
   1361c:	ldr	r2, [sp, #76]	; 0x4c
   13620:	cmp	r9, sl
   13624:	movcc	r0, #0
   13628:	strbcc	r0, [r2, r9]
   1362c:	mov	r0, r9
   13630:	sub	sp, fp, #28
   13634:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13638:	mov	r2, #1
   1363c:	b	13508 <__mempcpy_chk@plt+0x2464>
   13640:	ldr	r2, [sp, #80]	; 0x50
   13644:	mov	r7, #5
   13648:	b	13530 <__mempcpy_chk@plt+0x248c>
   1364c:	bl	11074 <abort@plt>
   13650:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13654:	add	fp, sp, #28
   13658:	sub	sp, sp, #28
   1365c:	movw	r5, #29032	; 0x7168
   13660:	cmp	r2, #0
   13664:	mov	r4, r1
   13668:	mov	r7, r0
   1366c:	str	r0, [sp, #20]
   13670:	movt	r5, #2
   13674:	movne	r5, r2
   13678:	bl	10fb4 <__errno_location@plt>
   1367c:	mov	sl, r0
   13680:	ldm	r5, {r0, r1}
   13684:	ldr	r2, [r5, #40]	; 0x28
   13688:	ldr	r3, [r5, #44]	; 0x2c
   1368c:	add	r9, r5, #8
   13690:	ldr	r6, [sl]
   13694:	orr	r8, r1, #1
   13698:	mov	r1, #0
   1369c:	str	r6, [sp, #24]
   136a0:	stm	sp, {r0, r8, r9}
   136a4:	str	r2, [sp, #12]
   136a8:	str	r3, [sp, #16]
   136ac:	mov	r0, #0
   136b0:	mov	r2, r7
   136b4:	mov	r3, r4
   136b8:	mov	r6, r4
   136bc:	bl	122e4 <__mempcpy_chk@plt+0x1240>
   136c0:	add	r7, r0, #1
   136c4:	mov	r0, r7
   136c8:	bl	14b60 <__mempcpy_chk@plt+0x3abc>
   136cc:	mov	r4, r0
   136d0:	ldr	r0, [r5]
   136d4:	ldr	r2, [r5, #44]	; 0x2c
   136d8:	ldr	r1, [r5, #40]	; 0x28
   136dc:	mov	r3, r6
   136e0:	stm	sp, {r0, r8, r9}
   136e4:	str	r2, [sp, #16]
   136e8:	str	r1, [sp, #12]
   136ec:	mov	r0, r4
   136f0:	mov	r1, r7
   136f4:	ldr	r2, [sp, #20]
   136f8:	bl	122e4 <__mempcpy_chk@plt+0x1240>
   136fc:	ldr	r0, [sp, #24]
   13700:	str	r0, [sl]
   13704:	mov	r0, r4
   13708:	sub	sp, fp, #28
   1370c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13710:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13714:	add	fp, sp, #28
   13718:	sub	sp, sp, #36	; 0x24
   1371c:	movw	r8, #29032	; 0x7168
   13720:	cmp	r3, #0
   13724:	mov	r4, r2
   13728:	str	r2, [sp, #24]
   1372c:	mov	r5, r1
   13730:	mov	r6, r0
   13734:	str	r0, [sp, #20]
   13738:	movt	r8, #2
   1373c:	movne	r8, r3
   13740:	bl	10fb4 <__errno_location@plt>
   13744:	str	r0, [sp, #28]
   13748:	cmp	r4, #0
   1374c:	add	sl, r8, #8
   13750:	ldm	r8, {r3, r9}
   13754:	ldr	r7, [r0]
   13758:	ldr	r1, [r8, #40]	; 0x28
   1375c:	ldr	r2, [r8, #44]	; 0x2c
   13760:	mov	r0, #0
   13764:	orreq	r9, r9, #1
   13768:	str	r7, [sp, #32]
   1376c:	mov	r7, r5
   13770:	stm	sp, {r3, r9, sl}
   13774:	str	r1, [sp, #12]
   13778:	str	r2, [sp, #16]
   1377c:	mov	r1, #0
   13780:	mov	r2, r6
   13784:	mov	r3, r5
   13788:	bl	122e4 <__mempcpy_chk@plt+0x1240>
   1378c:	add	r4, r0, #1
   13790:	mov	r5, r0
   13794:	mov	r0, r4
   13798:	bl	14b60 <__mempcpy_chk@plt+0x3abc>
   1379c:	mov	r6, r0
   137a0:	ldr	r0, [r8]
   137a4:	ldr	r2, [r8, #44]	; 0x2c
   137a8:	ldr	r1, [r8, #40]	; 0x28
   137ac:	mov	r3, r7
   137b0:	stm	sp, {r0, r9, sl}
   137b4:	str	r2, [sp, #16]
   137b8:	str	r1, [sp, #12]
   137bc:	mov	r0, r6
   137c0:	mov	r1, r4
   137c4:	ldr	r2, [sp, #20]
   137c8:	bl	122e4 <__mempcpy_chk@plt+0x1240>
   137cc:	ldr	r0, [sp, #24]
   137d0:	ldr	r1, [sp, #32]
   137d4:	ldr	r2, [sp, #28]
   137d8:	cmp	r0, #0
   137dc:	str	r1, [r2]
   137e0:	strne	r5, [r0]
   137e4:	mov	r0, r6
   137e8:	sub	sp, fp, #28
   137ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   137f0:	push	{r4, r5, r6, r7, fp, lr}
   137f4:	add	fp, sp, #16
   137f8:	movw	r4, #28968	; 0x7128
   137fc:	movt	r4, #2
   13800:	ldrd	r6, [r4]
   13804:	cmp	r7, #2
   13808:	blt	13834 <__mempcpy_chk@plt+0x2790>
   1380c:	add	r5, r6, #12
   13810:	mov	r7, #0
   13814:	ldr	r0, [r5, r7, lsl #3]
   13818:	bl	11fdc <__mempcpy_chk@plt+0xf38>
   1381c:	ldr	r1, [r4, #4]
   13820:	add	r2, r7, #2
   13824:	add	r0, r7, #1
   13828:	mov	r7, r0
   1382c:	cmp	r2, r1
   13830:	blt	13814 <__mempcpy_chk@plt+0x2770>
   13834:	ldr	r0, [r6, #4]
   13838:	movw	r5, #29080	; 0x7198
   1383c:	movt	r5, #2
   13840:	cmp	r0, r5
   13844:	beq	13858 <__mempcpy_chk@plt+0x27b4>
   13848:	bl	11fdc <__mempcpy_chk@plt+0xf38>
   1384c:	mov	r0, #256	; 0x100
   13850:	str	r0, [r4, #8]
   13854:	str	r5, [r4, #12]
   13858:	add	r5, r4, #8
   1385c:	cmp	r6, r5
   13860:	beq	13870 <__mempcpy_chk@plt+0x27cc>
   13864:	mov	r0, r6
   13868:	bl	11fdc <__mempcpy_chk@plt+0xf38>
   1386c:	str	r5, [r4]
   13870:	mov	r0, #1
   13874:	str	r0, [r4, #4]
   13878:	pop	{r4, r5, r6, r7, fp, pc}
   1387c:	movw	r3, #29032	; 0x7168
   13880:	mvn	r2, #0
   13884:	movt	r3, #2
   13888:	b	1388c <__mempcpy_chk@plt+0x27e8>
   1388c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13890:	add	fp, sp, #28
   13894:	sub	sp, sp, #44	; 0x2c
   13898:	mov	r7, r3
   1389c:	str	r2, [sp, #36]	; 0x24
   138a0:	str	r1, [sp, #32]
   138a4:	mov	r5, r0
   138a8:	bl	10fb4 <__errno_location@plt>
   138ac:	cmp	r5, #0
   138b0:	blt	13a14 <__mempcpy_chk@plt+0x2970>
   138b4:	cmn	r5, #-2147483647	; 0x80000001
   138b8:	beq	13a14 <__mempcpy_chk@plt+0x2970>
   138bc:	movw	r8, #28968	; 0x7128
   138c0:	mov	r4, r0
   138c4:	movt	r8, #2
   138c8:	ldr	r6, [r8]
   138cc:	ldr	r1, [r8, #4]
   138d0:	ldr	r0, [r0]
   138d4:	str	r4, [sp, #28]
   138d8:	cmp	r1, r5
   138dc:	str	r0, [sp, #24]
   138e0:	ble	138ec <__mempcpy_chk@plt+0x2848>
   138e4:	mov	sl, r6
   138e8:	b	13950 <__mempcpy_chk@plt+0x28ac>
   138ec:	mov	r0, #8
   138f0:	add	r9, r8, #8
   138f4:	add	r2, r5, #1
   138f8:	str	r1, [fp, #-32]	; 0xffffffe0
   138fc:	mvn	r3, #-2147483648	; 0x80000000
   13900:	str	r0, [sp]
   13904:	subs	r0, r6, r9
   13908:	sub	r2, r2, r1
   1390c:	sub	r1, fp, #32
   13910:	movne	r0, r6
   13914:	bl	14d60 <__mempcpy_chk@plt+0x3cbc>
   13918:	str	r0, [r8]
   1391c:	cmp	r6, r9
   13920:	mov	sl, r0
   13924:	ldrdeq	r0, [r8, #8]
   13928:	stmeq	sl, {r0, r1}
   1392c:	ldr	r1, [r8, #4]
   13930:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13934:	add	r0, sl, r1, lsl #3
   13938:	sub	r1, r2, r1
   1393c:	lsl	r2, r1, #3
   13940:	mov	r1, #0
   13944:	bl	10fd8 <memset@plt>
   13948:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1394c:	str	r0, [r8, #4]
   13950:	mov	r9, sl
   13954:	ldr	r6, [r9, r5, lsl #3]!
   13958:	ldr	r4, [r9, #4]!
   1395c:	ldm	r7, {r0, r1}
   13960:	ldr	r2, [r7, #40]	; 0x28
   13964:	ldr	r3, [r7, #44]	; 0x2c
   13968:	orr	r8, r1, #1
   1396c:	add	r1, r7, #8
   13970:	stm	sp, {r0, r8}
   13974:	add	r0, sp, #8
   13978:	str	r1, [sp, #20]
   1397c:	stm	r0, {r1, r2, r3}
   13980:	mov	r0, r4
   13984:	mov	r1, r6
   13988:	ldr	r2, [sp, #32]
   1398c:	ldr	r3, [sp, #36]	; 0x24
   13990:	bl	122e4 <__mempcpy_chk@plt+0x1240>
   13994:	cmp	r6, r0
   13998:	bhi	139fc <__mempcpy_chk@plt+0x2958>
   1399c:	add	r6, r0, #1
   139a0:	movw	r0, #29080	; 0x7198
   139a4:	movt	r0, #2
   139a8:	str	r6, [sl, r5, lsl #3]
   139ac:	cmp	r4, r0
   139b0:	beq	139bc <__mempcpy_chk@plt+0x2918>
   139b4:	mov	r0, r4
   139b8:	bl	11fdc <__mempcpy_chk@plt+0xf38>
   139bc:	mov	r0, r6
   139c0:	bl	14b60 <__mempcpy_chk@plt+0x3abc>
   139c4:	str	r0, [r9]
   139c8:	mov	r4, r0
   139cc:	add	r3, sp, #8
   139d0:	ldr	r0, [r7]
   139d4:	ldr	r1, [r7, #40]	; 0x28
   139d8:	ldr	r2, [r7, #44]	; 0x2c
   139dc:	stm	sp, {r0, r8}
   139e0:	ldr	r0, [sp, #20]
   139e4:	stm	r3, {r0, r1, r2}
   139e8:	mov	r0, r4
   139ec:	mov	r1, r6
   139f0:	ldr	r2, [sp, #32]
   139f4:	ldr	r3, [sp, #36]	; 0x24
   139f8:	bl	122e4 <__mempcpy_chk@plt+0x1240>
   139fc:	ldr	r1, [sp, #24]
   13a00:	ldr	r0, [sp, #28]
   13a04:	str	r1, [r0]
   13a08:	mov	r0, r4
   13a0c:	sub	sp, fp, #28
   13a10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13a14:	bl	11074 <abort@plt>
   13a18:	movw	r3, #29032	; 0x7168
   13a1c:	movt	r3, #2
   13a20:	b	1388c <__mempcpy_chk@plt+0x27e8>
   13a24:	movw	r3, #29032	; 0x7168
   13a28:	mov	r1, r0
   13a2c:	mov	r0, #0
   13a30:	mvn	r2, #0
   13a34:	movt	r3, #2
   13a38:	b	1388c <__mempcpy_chk@plt+0x27e8>
   13a3c:	movw	r3, #29032	; 0x7168
   13a40:	mov	r2, r1
   13a44:	mov	r1, r0
   13a48:	mov	r0, #0
   13a4c:	movt	r3, #2
   13a50:	b	1388c <__mempcpy_chk@plt+0x27e8>
   13a54:	push	{fp, lr}
   13a58:	mov	fp, sp
   13a5c:	sub	sp, sp, #48	; 0x30
   13a60:	vmov.i32	q8, #0	; 0x00000000
   13a64:	mov	ip, #32
   13a68:	mov	r3, sp
   13a6c:	mov	lr, r2
   13a70:	cmp	r1, #10
   13a74:	add	r2, r3, #16
   13a78:	vst1.64	{d16-d17}, [r3], ip
   13a7c:	vst1.64	{d16-d17}, [r3]
   13a80:	vst1.64	{d16-d17}, [r2]
   13a84:	beq	13aa4 <__mempcpy_chk@plt+0x2a00>
   13a88:	str	r1, [sp]
   13a8c:	mov	r3, sp
   13a90:	mov	r1, lr
   13a94:	mvn	r2, #0
   13a98:	bl	1388c <__mempcpy_chk@plt+0x27e8>
   13a9c:	mov	sp, fp
   13aa0:	pop	{fp, pc}
   13aa4:	bl	11074 <abort@plt>
   13aa8:	push	{r4, sl, fp, lr}
   13aac:	add	fp, sp, #8
   13ab0:	sub	sp, sp, #48	; 0x30
   13ab4:	mov	ip, r3
   13ab8:	mov	r3, sp
   13abc:	vmov.i32	q8, #0	; 0x00000000
   13ac0:	mov	lr, #32
   13ac4:	cmp	r1, #10
   13ac8:	add	r4, r3, #16
   13acc:	vst1.64	{d16-d17}, [r3], lr
   13ad0:	vst1.64	{d16-d17}, [r3]
   13ad4:	vst1.64	{d16-d17}, [r4]
   13ad8:	beq	13af8 <__mempcpy_chk@plt+0x2a54>
   13adc:	str	r1, [sp]
   13ae0:	mov	r1, r2
   13ae4:	mov	r3, sp
   13ae8:	mov	r2, ip
   13aec:	bl	1388c <__mempcpy_chk@plt+0x27e8>
   13af0:	sub	sp, fp, #8
   13af4:	pop	{r4, sl, fp, pc}
   13af8:	bl	11074 <abort@plt>
   13afc:	push	{fp, lr}
   13b00:	mov	fp, sp
   13b04:	sub	sp, sp, #48	; 0x30
   13b08:	mov	r3, sp
   13b0c:	vmov.i32	q8, #0	; 0x00000000
   13b10:	mov	ip, #32
   13b14:	cmp	r0, #10
   13b18:	add	r2, r3, #16
   13b1c:	vst1.64	{d16-d17}, [r3], ip
   13b20:	vst1.64	{d16-d17}, [r3]
   13b24:	vst1.64	{d16-d17}, [r2]
   13b28:	beq	13b48 <__mempcpy_chk@plt+0x2aa4>
   13b2c:	str	r0, [sp]
   13b30:	mov	r3, sp
   13b34:	mov	r0, #0
   13b38:	mvn	r2, #0
   13b3c:	bl	1388c <__mempcpy_chk@plt+0x27e8>
   13b40:	mov	sp, fp
   13b44:	pop	{fp, pc}
   13b48:	bl	11074 <abort@plt>
   13b4c:	push	{fp, lr}
   13b50:	mov	fp, sp
   13b54:	sub	sp, sp, #48	; 0x30
   13b58:	mov	r3, sp
   13b5c:	vmov.i32	q8, #0	; 0x00000000
   13b60:	mov	ip, #32
   13b64:	cmp	r0, #10
   13b68:	add	lr, r3, #16
   13b6c:	vst1.64	{d16-d17}, [r3], ip
   13b70:	vst1.64	{d16-d17}, [r3]
   13b74:	vst1.64	{d16-d17}, [lr]
   13b78:	beq	13b94 <__mempcpy_chk@plt+0x2af0>
   13b7c:	str	r0, [sp]
   13b80:	mov	r3, sp
   13b84:	mov	r0, #0
   13b88:	bl	1388c <__mempcpy_chk@plt+0x27e8>
   13b8c:	mov	sp, fp
   13b90:	pop	{fp, pc}
   13b94:	bl	11074 <abort@plt>
   13b98:	push	{r4, sl, fp, lr}
   13b9c:	add	fp, sp, #8
   13ba0:	sub	sp, sp, #48	; 0x30
   13ba4:	mov	lr, r0
   13ba8:	movw	r0, #29032	; 0x7168
   13bac:	mov	r3, #32
   13bb0:	mov	ip, r1
   13bb4:	mov	r4, #1
   13bb8:	movt	r0, #2
   13bbc:	add	r1, r0, #16
   13bc0:	vld1.64	{d16-d17}, [r0], r3
   13bc4:	mov	r3, sp
   13bc8:	vld1.64	{d18-d19}, [r1]
   13bcc:	add	r1, r3, #16
   13bd0:	vld1.64	{d20-d21}, [r0]
   13bd4:	add	r0, r3, #32
   13bd8:	vst1.64	{d18-d19}, [r1]
   13bdc:	mov	r1, r3
   13be0:	vst1.64	{d20-d21}, [r0]
   13be4:	mov	r0, #28
   13be8:	and	r0, r0, r2, lsr #3
   13bec:	and	r2, r2, #31
   13bf0:	vst1.64	{d16-d17}, [r1], r0
   13bf4:	ldr	r0, [r1, #8]
   13bf8:	bic	r4, r4, r0, lsr r2
   13bfc:	eor	r0, r0, r4, lsl r2
   13c00:	mov	r2, ip
   13c04:	str	r0, [r1, #8]
   13c08:	mov	r0, #0
   13c0c:	mov	r1, lr
   13c10:	bl	1388c <__mempcpy_chk@plt+0x27e8>
   13c14:	sub	sp, fp, #8
   13c18:	pop	{r4, sl, fp, pc}
   13c1c:	push	{fp, lr}
   13c20:	mov	fp, sp
   13c24:	sub	sp, sp, #48	; 0x30
   13c28:	mov	ip, r0
   13c2c:	movw	r0, #29032	; 0x7168
   13c30:	mov	r3, #32
   13c34:	movt	r0, #2
   13c38:	add	r2, r0, #16
   13c3c:	vld1.64	{d16-d17}, [r0], r3
   13c40:	mov	r3, sp
   13c44:	vld1.64	{d18-d19}, [r2]
   13c48:	add	r2, r3, #16
   13c4c:	vld1.64	{d20-d21}, [r0]
   13c50:	add	r0, r3, #32
   13c54:	vst1.64	{d18-d19}, [r2]
   13c58:	mov	r2, r3
   13c5c:	vst1.64	{d20-d21}, [r0]
   13c60:	mov	r0, #28
   13c64:	and	r0, r0, r1, lsr #3
   13c68:	and	r1, r1, #31
   13c6c:	vst1.64	{d16-d17}, [r2], r0
   13c70:	mov	r0, #1
   13c74:	ldr	lr, [r2, #8]
   13c78:	bic	r0, r0, lr, lsr r1
   13c7c:	eor	r0, lr, r0, lsl r1
   13c80:	mov	r1, ip
   13c84:	str	r0, [r2, #8]
   13c88:	mov	r0, #0
   13c8c:	mvn	r2, #0
   13c90:	bl	1388c <__mempcpy_chk@plt+0x27e8>
   13c94:	mov	sp, fp
   13c98:	pop	{fp, pc}
   13c9c:	push	{fp, lr}
   13ca0:	mov	fp, sp
   13ca4:	sub	sp, sp, #48	; 0x30
   13ca8:	movw	r2, #29032	; 0x7168
   13cac:	mov	r3, #32
   13cb0:	mov	r1, r0
   13cb4:	movt	r2, #2
   13cb8:	add	r0, r2, #16
   13cbc:	vld1.64	{d16-d17}, [r2], r3
   13cc0:	mov	r3, sp
   13cc4:	vld1.64	{d18-d19}, [r0]
   13cc8:	add	r0, r3, #16
   13ccc:	vld1.64	{d20-d21}, [r2]
   13cd0:	mov	r2, r3
   13cd4:	vst1.64	{d18-d19}, [r0]
   13cd8:	add	r0, r3, #32
   13cdc:	vst1.64	{d20-d21}, [r0]
   13ce0:	mov	r0, #12
   13ce4:	vst1.64	{d16-d17}, [r2], r0
   13ce8:	ldr	r0, [r2]
   13cec:	orr	r0, r0, #67108864	; 0x4000000
   13cf0:	str	r0, [r2]
   13cf4:	mov	r0, #0
   13cf8:	mvn	r2, #0
   13cfc:	bl	1388c <__mempcpy_chk@plt+0x27e8>
   13d00:	mov	sp, fp
   13d04:	pop	{fp, pc}
   13d08:	push	{fp, lr}
   13d0c:	mov	fp, sp
   13d10:	sub	sp, sp, #48	; 0x30
   13d14:	mov	ip, r1
   13d18:	mov	r1, r0
   13d1c:	movw	r0, #29032	; 0x7168
   13d20:	mov	r3, #32
   13d24:	movt	r0, #2
   13d28:	add	r2, r0, #16
   13d2c:	vld1.64	{d16-d17}, [r0], r3
   13d30:	mov	r3, sp
   13d34:	vld1.64	{d18-d19}, [r2]
   13d38:	add	r2, r3, #16
   13d3c:	vld1.64	{d20-d21}, [r0]
   13d40:	add	r0, r3, #32
   13d44:	vst1.64	{d18-d19}, [r2]
   13d48:	mov	r2, r3
   13d4c:	vst1.64	{d20-d21}, [r0]
   13d50:	mov	r0, #12
   13d54:	vst1.64	{d16-d17}, [r2], r0
   13d58:	ldr	r0, [r2]
   13d5c:	orr	r0, r0, #67108864	; 0x4000000
   13d60:	str	r0, [r2]
   13d64:	mov	r0, #0
   13d68:	mov	r2, ip
   13d6c:	bl	1388c <__mempcpy_chk@plt+0x27e8>
   13d70:	mov	sp, fp
   13d74:	pop	{fp, pc}
   13d78:	push	{r4, sl, fp, lr}
   13d7c:	add	fp, sp, #8
   13d80:	sub	sp, sp, #96	; 0x60
   13d84:	mov	ip, r2
   13d88:	mov	r2, sp
   13d8c:	vmov.i32	q8, #0	; 0x00000000
   13d90:	mov	r4, #28
   13d94:	cmp	r1, #10
   13d98:	mov	r3, r2
   13d9c:	add	lr, r2, #16
   13da0:	vst1.64	{d16-d17}, [r3], r4
   13da4:	vst1.64	{d16-d17}, [lr]
   13da8:	vst1.32	{d16-d17}, [r3]
   13dac:	beq	13dfc <__mempcpy_chk@plt+0x2d58>
   13db0:	vld1.64	{d16-d17}, [r2], r4
   13db4:	vld1.64	{d18-d19}, [lr]
   13db8:	add	r3, sp, #48	; 0x30
   13dbc:	add	r4, r3, #4
   13dc0:	vld1.32	{d20-d21}, [r2]
   13dc4:	add	r2, r3, #20
   13dc8:	vst1.32	{d16-d17}, [r4]
   13dcc:	vst1.32	{d18-d19}, [r2]
   13dd0:	add	r2, r3, #32
   13dd4:	vst1.32	{d20-d21}, [r2]
   13dd8:	str	r1, [sp, #48]	; 0x30
   13ddc:	mvn	r2, #0
   13de0:	ldr	r1, [sp, #60]	; 0x3c
   13de4:	orr	r1, r1, #67108864	; 0x4000000
   13de8:	str	r1, [sp, #60]	; 0x3c
   13dec:	mov	r1, ip
   13df0:	bl	1388c <__mempcpy_chk@plt+0x27e8>
   13df4:	sub	sp, fp, #8
   13df8:	pop	{r4, sl, fp, pc}
   13dfc:	bl	11074 <abort@plt>
   13e00:	push	{r4, r5, fp, lr}
   13e04:	add	fp, sp, #8
   13e08:	sub	sp, sp, #48	; 0x30
   13e0c:	mov	ip, r3
   13e10:	movw	r3, #29032	; 0x7168
   13e14:	mov	lr, #32
   13e18:	cmp	r1, #0
   13e1c:	mov	r5, sp
   13e20:	movt	r3, #2
   13e24:	cmpne	r2, #0
   13e28:	add	r4, r3, #16
   13e2c:	vld1.64	{d16-d17}, [r3], lr
   13e30:	vld1.64	{d18-d19}, [r4]
   13e34:	add	r4, r5, #16
   13e38:	vld1.64	{d20-d21}, [r3]
   13e3c:	vst1.64	{d16-d17}, [r5], lr
   13e40:	mov	r3, #10
   13e44:	vst1.64	{d18-d19}, [r4]
   13e48:	vst1.64	{d20-d21}, [r5]
   13e4c:	str	r3, [sp]
   13e50:	bne	13e58 <__mempcpy_chk@plt+0x2db4>
   13e54:	bl	11074 <abort@plt>
   13e58:	str	r2, [sp, #44]	; 0x2c
   13e5c:	str	r1, [sp, #40]	; 0x28
   13e60:	mov	r3, sp
   13e64:	mov	r1, ip
   13e68:	mvn	r2, #0
   13e6c:	bl	1388c <__mempcpy_chk@plt+0x27e8>
   13e70:	sub	sp, fp, #8
   13e74:	pop	{r4, r5, fp, pc}
   13e78:	push	{r4, r5, fp, lr}
   13e7c:	add	fp, sp, #8
   13e80:	sub	sp, sp, #48	; 0x30
   13e84:	mov	lr, r3
   13e88:	movw	r3, #29032	; 0x7168
   13e8c:	mov	ip, #32
   13e90:	cmp	r1, #0
   13e94:	mov	r5, sp
   13e98:	movt	r3, #2
   13e9c:	cmpne	r2, #0
   13ea0:	add	r4, r3, #16
   13ea4:	vld1.64	{d16-d17}, [r3], ip
   13ea8:	vld1.64	{d18-d19}, [r4]
   13eac:	add	r4, r5, #16
   13eb0:	vld1.64	{d20-d21}, [r3]
   13eb4:	vst1.64	{d16-d17}, [r5], ip
   13eb8:	mov	r3, #10
   13ebc:	vst1.64	{d18-d19}, [r4]
   13ec0:	vst1.64	{d20-d21}, [r5]
   13ec4:	str	r3, [sp]
   13ec8:	bne	13ed0 <__mempcpy_chk@plt+0x2e2c>
   13ecc:	bl	11074 <abort@plt>
   13ed0:	ldr	ip, [fp, #8]
   13ed4:	str	r2, [sp, #44]	; 0x2c
   13ed8:	str	r1, [sp, #40]	; 0x28
   13edc:	mov	r3, sp
   13ee0:	mov	r1, lr
   13ee4:	mov	r2, ip
   13ee8:	bl	1388c <__mempcpy_chk@plt+0x27e8>
   13eec:	sub	sp, fp, #8
   13ef0:	pop	{r4, r5, fp, pc}
   13ef4:	push	{r4, sl, fp, lr}
   13ef8:	add	fp, sp, #8
   13efc:	sub	sp, sp, #48	; 0x30
   13f00:	mov	ip, r2
   13f04:	movw	r2, #29032	; 0x7168
   13f08:	mov	lr, #32
   13f0c:	cmp	r0, #0
   13f10:	mov	r4, sp
   13f14:	movt	r2, #2
   13f18:	cmpne	r1, #0
   13f1c:	add	r3, r2, #16
   13f20:	vld1.64	{d16-d17}, [r2], lr
   13f24:	vld1.64	{d18-d19}, [r3]
   13f28:	add	r3, r4, #16
   13f2c:	vld1.64	{d20-d21}, [r2]
   13f30:	vst1.64	{d16-d17}, [r4], lr
   13f34:	mov	r2, #10
   13f38:	vst1.64	{d18-d19}, [r3]
   13f3c:	vst1.64	{d20-d21}, [r4]
   13f40:	str	r2, [sp]
   13f44:	bne	13f4c <__mempcpy_chk@plt+0x2ea8>
   13f48:	bl	11074 <abort@plt>
   13f4c:	str	r1, [sp, #44]	; 0x2c
   13f50:	str	r0, [sp, #40]	; 0x28
   13f54:	mov	r3, sp
   13f58:	mov	r0, #0
   13f5c:	mov	r1, ip
   13f60:	mvn	r2, #0
   13f64:	bl	1388c <__mempcpy_chk@plt+0x27e8>
   13f68:	sub	sp, fp, #8
   13f6c:	pop	{r4, sl, fp, pc}
   13f70:	push	{r4, r5, fp, lr}
   13f74:	add	fp, sp, #8
   13f78:	sub	sp, sp, #48	; 0x30
   13f7c:	mov	lr, r2
   13f80:	movw	r2, #29032	; 0x7168
   13f84:	mov	ip, r3
   13f88:	mov	r3, #32
   13f8c:	cmp	r0, #0
   13f90:	mov	r5, sp
   13f94:	movt	r2, #2
   13f98:	cmpne	r1, #0
   13f9c:	add	r4, r2, #16
   13fa0:	vld1.64	{d16-d17}, [r2], r3
   13fa4:	vld1.64	{d18-d19}, [r4]
   13fa8:	add	r4, r5, #16
   13fac:	vld1.64	{d20-d21}, [r2]
   13fb0:	vst1.64	{d16-d17}, [r5], r3
   13fb4:	mov	r2, #10
   13fb8:	vst1.64	{d18-d19}, [r4]
   13fbc:	vst1.64	{d20-d21}, [r5]
   13fc0:	str	r2, [sp]
   13fc4:	bne	13fcc <__mempcpy_chk@plt+0x2f28>
   13fc8:	bl	11074 <abort@plt>
   13fcc:	str	r1, [sp, #44]	; 0x2c
   13fd0:	str	r0, [sp, #40]	; 0x28
   13fd4:	mov	r3, sp
   13fd8:	mov	r0, #0
   13fdc:	mov	r1, lr
   13fe0:	mov	r2, ip
   13fe4:	bl	1388c <__mempcpy_chk@plt+0x27e8>
   13fe8:	sub	sp, fp, #8
   13fec:	pop	{r4, r5, fp, pc}
   13ff0:	movw	r3, #28920	; 0x70f8
   13ff4:	movt	r3, #2
   13ff8:	b	1388c <__mempcpy_chk@plt+0x27e8>
   13ffc:	movw	r3, #28920	; 0x70f8
   14000:	mov	r2, r1
   14004:	mov	r1, r0
   14008:	mov	r0, #0
   1400c:	movt	r3, #2
   14010:	b	1388c <__mempcpy_chk@plt+0x27e8>
   14014:	movw	r3, #28920	; 0x70f8
   14018:	mvn	r2, #0
   1401c:	movt	r3, #2
   14020:	b	1388c <__mempcpy_chk@plt+0x27e8>
   14024:	movw	r3, #28920	; 0x70f8
   14028:	mov	r1, r0
   1402c:	mov	r0, #0
   14030:	mvn	r2, #0
   14034:	movt	r3, #2
   14038:	b	1388c <__mempcpy_chk@plt+0x27e8>
   1403c:	push	{fp, lr}
   14040:	mov	fp, sp
   14044:	sub	sp, sp, #8
   14048:	str	r2, [sp, #4]
   1404c:	ldr	r2, [fp, #8]
   14050:	str	r2, [sp]
   14054:	movw	r2, #24564	; 0x5ff4
   14058:	movt	r2, #1
   1405c:	ldr	r3, [r2, r3, lsl #2]
   14060:	add	r2, sp, #4
   14064:	bl	140dc <__mempcpy_chk@plt+0x3038>
   14068:	mov	sp, fp
   1406c:	pop	{fp, pc}
   14070:	ldr	r1, [r1]
   14074:	mov	r2, #384	; 0x180
   14078:	bic	r1, r1, #195	; 0xc3
   1407c:	orr	r1, r1, #194	; 0xc2
   14080:	b	10f30 <open64@plt>
   14084:	mov	r1, #448	; 0x1c0
   14088:	b	10fcc <mkdir@plt>
   1408c:	push	{r4, sl, fp, lr}
   14090:	add	fp, sp, #8
   14094:	sub	sp, sp, #104	; 0x68
   14098:	mov	r1, r0
   1409c:	mov	r2, sp
   140a0:	mov	r0, #3
   140a4:	bl	1108c <__lxstat64@plt>
   140a8:	mov	r4, r0
   140ac:	bl	10fb4 <__errno_location@plt>
   140b0:	cmp	r4, #0
   140b4:	ldrne	r1, [r0]
   140b8:	cmpne	r1, #75	; 0x4b
   140bc:	bne	140c8 <__mempcpy_chk@plt+0x3024>
   140c0:	mov	r1, #17
   140c4:	str	r1, [r0]
   140c8:	ldr	r0, [r0]
   140cc:	subs	r0, r0, #2
   140d0:	mvnne	r0, #0
   140d4:	sub	sp, fp, #8
   140d8:	pop	{r4, sl, fp, pc}
   140dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   140e0:	add	fp, sp, #28
   140e4:	sub	sp, sp, #68	; 0x44
   140e8:	mov	r8, r3
   140ec:	mov	r9, r2
   140f0:	mov	r5, r1
   140f4:	mov	r6, r0
   140f8:	bl	10fb4 <__errno_location@plt>
   140fc:	mov	r7, r0
   14100:	ldr	sl, [r0]
   14104:	mov	r0, #0
   14108:	str	r0, [sp, #44]	; 0x2c
   1410c:	add	r0, sp, #40	; 0x28
   14110:	lsr	r0, r0, #3
   14114:	str	r0, [sp, #40]	; 0x28
   14118:	ldr	r0, [fp, #8]
   1411c:	add	r4, r0, r5
   14120:	mov	r5, r0
   14124:	mov	r0, r6
   14128:	bl	10fa8 <strlen@plt>
   1412c:	cmp	r0, r4
   14130:	bcc	14154 <__mempcpy_chk@plt+0x30b0>
   14134:	sub	r0, r0, r4
   14138:	movw	r1, #23432	; 0x5b88
   1413c:	add	r0, r6, r0
   14140:	movt	r1, #1
   14144:	str	r0, [sp, #32]
   14148:	bl	11098 <strspn@plt>
   1414c:	cmp	r0, r5
   14150:	bcs	14168 <__mempcpy_chk@plt+0x30c4>
   14154:	mov	r0, #22
   14158:	str	r0, [r7]
   1415c:	mvn	r0, #0
   14160:	sub	sp, fp, #28
   14164:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14168:	cmp	r5, #0
   1416c:	str	r6, [sp, #20]
   14170:	str	sl, [sp, #4]
   14174:	beq	143bc <__mempcpy_chk@plt+0x3318>
   14178:	movw	r0, #16524	; 0x408c
   1417c:	movw	r4, #39131	; 0x98db
   14180:	movw	r6, #21503	; 0x53ff
   14184:	mov	r2, #0
   14188:	mov	r1, #0
   1418c:	str	r7, [sp, #8]
   14190:	str	r8, [sp, #16]
   14194:	str	r9, [sp, #12]
   14198:	movt	r0, #1
   1419c:	movt	r4, #62617	; 0xf499
   141a0:	movt	r6, #2727	; 0xaa7
   141a4:	sub	r0, r8, r0
   141a8:	clz	r0, r0
   141ac:	lsr	r0, r0, #5
   141b0:	str	r0, [sp, #28]
   141b4:	mov	sl, #0
   141b8:	sub	r7, fp, #40	; 0x28
   141bc:	str	r1, [sp, #24]
   141c0:	ldr	r8, [sp, #40]	; 0x28
   141c4:	ldr	r9, [sp, #44]	; 0x2c
   141c8:	cmp	r2, #0
   141cc:	beq	141d8 <__mempcpy_chk@plt+0x3134>
   141d0:	str	r2, [sp, #36]	; 0x24
   141d4:	b	1431c <__mempcpy_chk@plt+0x3278>
   141d8:	ldr	r0, [sp, #28]
   141dc:	tst	r0, #1
   141e0:	beq	14208 <__mempcpy_chk@plt+0x3164>
   141e4:	mov	r0, r7
   141e8:	mov	r1, #8
   141ec:	mov	r2, #1
   141f0:	bl	1105c <getrandom@plt>
   141f4:	cmp	r0, #8
   141f8:	bne	14208 <__mempcpy_chk@plt+0x3164>
   141fc:	ldr	r8, [fp, #-40]	; 0xffffffd8
   14200:	ldr	r9, [fp, #-36]	; 0xffffffdc
   14204:	b	14250 <__mempcpy_chk@plt+0x31ac>
   14208:	mov	r0, #1
   1420c:	add	r1, sp, #48	; 0x30
   14210:	bl	10e7c <clock_gettime@plt>
   14214:	ldr	r0, [sp, #52]	; 0x34
   14218:	movw	r2, #45309	; 0xb0fd
   1421c:	movw	r5, #12006	; 0x2ee6
   14220:	movt	r2, #34736	; 0x87b0
   14224:	movt	r5, #10171	; 0x27bb
   14228:	mov	ip, r2
   1422c:	eor	r1, r8, r0
   14230:	eor	r0, r9, r0, asr #31
   14234:	umull	r2, r3, r1, r2
   14238:	mul	r0, r0, ip
   1423c:	mla	r1, r1, r5, r3
   14240:	movw	r3, #62253	; 0xf32d
   14244:	movt	r3, #46340	; 0xb504
   14248:	adds	r8, r2, r3
   1424c:	adc	r9, r1, r0
   14250:	subs	r0, r6, r8
   14254:	str	r8, [sp, #40]	; 0x28
   14258:	str	r9, [sp, #44]	; 0x2c
   1425c:	sbcs	r0, r4, r9
   14260:	bcs	1430c <__mempcpy_chk@plt+0x3268>
   14264:	mov	r0, #10
   14268:	str	r0, [sp, #36]	; 0x24
   1426c:	mov	r0, #1
   14270:	str	r0, [sp, #28]
   14274:	mov	r0, r7
   14278:	mov	r1, #8
   1427c:	mov	r2, #1
   14280:	bl	1105c <getrandom@plt>
   14284:	cmp	r0, #8
   14288:	bne	14298 <__mempcpy_chk@plt+0x31f4>
   1428c:	ldr	r8, [fp, #-40]	; 0xffffffd8
   14290:	ldr	r9, [fp, #-36]	; 0xffffffdc
   14294:	b	142f4 <__mempcpy_chk@plt+0x3250>
   14298:	mov	r0, #1
   1429c:	add	r1, sp, #48	; 0x30
   142a0:	bl	10e7c <clock_gettime@plt>
   142a4:	ldr	r0, [sp, #52]	; 0x34
   142a8:	movw	r2, #45309	; 0xb0fd
   142ac:	mov	r5, r6
   142b0:	mov	r6, r4
   142b4:	movw	r4, #12006	; 0x2ee6
   142b8:	movt	r2, #34736	; 0x87b0
   142bc:	movt	r4, #10171	; 0x27bb
   142c0:	mov	r7, r2
   142c4:	eor	r1, r8, r0
   142c8:	eor	r0, r9, r0, asr #31
   142cc:	umull	r2, r3, r1, r2
   142d0:	mul	r0, r0, r7
   142d4:	sub	r7, fp, #40	; 0x28
   142d8:	mla	r1, r1, r4, r3
   142dc:	movw	r3, #62253	; 0xf32d
   142e0:	mov	r4, r6
   142e4:	mov	r6, r5
   142e8:	movt	r3, #46340	; 0xb504
   142ec:	adds	r8, r2, r3
   142f0:	adc	r9, r1, r0
   142f4:	subs	r0, r6, r8
   142f8:	str	r8, [sp, #40]	; 0x28
   142fc:	str	r9, [sp, #44]	; 0x2c
   14300:	sbcs	r0, r4, r9
   14304:	bcc	14274 <__mempcpy_chk@plt+0x31d0>
   14308:	b	1431c <__mempcpy_chk@plt+0x3278>
   1430c:	mov	r0, #10
   14310:	str	r0, [sp, #36]	; 0x24
   14314:	mov	r0, #1
   14318:	str	r0, [sp, #28]
   1431c:	mov	r0, r8
   14320:	mov	r1, r9
   14324:	mov	r2, #62	; 0x3e
   14328:	mov	r3, #0
   1432c:	bl	15388 <__mempcpy_chk@plt+0x42e4>
   14330:	rsb	r2, r0, r0, lsl #5
   14334:	movw	r3, #24576	; 0x6000
   14338:	sub	r2, r8, r2, lsl #1
   1433c:	movt	r3, #1
   14340:	ldrb	r2, [r3, r2]
   14344:	ldr	r3, [sp, #32]
   14348:	strb	r2, [r3, sl]
   1434c:	ldr	r2, [sp, #36]	; 0x24
   14350:	str	r0, [sp, #40]	; 0x28
   14354:	ldr	r0, [fp, #8]
   14358:	add	sl, sl, #1
   1435c:	str	r1, [sp, #44]	; 0x2c
   14360:	sub	r2, r2, #1
   14364:	cmp	sl, r0
   14368:	bne	141c0 <__mempcpy_chk@plt+0x311c>
   1436c:	ldr	r9, [sp, #12]
   14370:	ldr	r0, [sp, #20]
   14374:	ldr	r8, [sp, #16]
   14378:	mov	r5, r2
   1437c:	mov	r1, r9
   14380:	blx	r8
   14384:	cmn	r0, #1
   14388:	bgt	14408 <__mempcpy_chk@plt+0x3364>
   1438c:	ldr	r7, [sp, #8]
   14390:	ldr	r0, [r7]
   14394:	cmp	r0, #17
   14398:	bne	1415c <__mempcpy_chk@plt+0x30b8>
   1439c:	ldr	r1, [sp, #24]
   143a0:	movw	r0, #41720	; 0xa2f8
   143a4:	mov	r2, r5
   143a8:	movt	r0, #3
   143ac:	add	r1, r1, #1
   143b0:	cmp	r1, r0
   143b4:	bcc	141b4 <__mempcpy_chk@plt+0x3110>
   143b8:	b	143f4 <__mempcpy_chk@plt+0x3350>
   143bc:	movw	r5, #41720	; 0xa2f8
   143c0:	mov	r4, #0
   143c4:	movt	r5, #3
   143c8:	ldr	r0, [sp, #20]
   143cc:	mov	r1, r9
   143d0:	blx	r8
   143d4:	cmp	r0, #0
   143d8:	bge	1440c <__mempcpy_chk@plt+0x3368>
   143dc:	ldr	r0, [r7]
   143e0:	cmp	r0, #17
   143e4:	bne	1415c <__mempcpy_chk@plt+0x30b8>
   143e8:	add	r4, r4, #1
   143ec:	cmp	r4, r5
   143f0:	bcc	143c8 <__mempcpy_chk@plt+0x3324>
   143f4:	mov	r0, #17
   143f8:	str	r0, [r7]
   143fc:	mvn	r0, #0
   14400:	sub	sp, fp, #28
   14404:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14408:	ldr	r7, [sp, #8]
   1440c:	ldr	r1, [sp, #4]
   14410:	str	r1, [r7]
   14414:	sub	sp, fp, #28
   14418:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1441c:	push	{fp, lr}
   14420:	mov	fp, sp
   14424:	sub	sp, sp, #8
   14428:	str	r2, [sp, #4]
   1442c:	mov	r2, #6
   14430:	str	r2, [sp]
   14434:	movw	r2, #24564	; 0x5ff4
   14438:	movt	r2, #1
   1443c:	ldr	r3, [r2, r3, lsl #2]
   14440:	add	r2, sp, #4
   14444:	bl	140dc <__mempcpy_chk@plt+0x3038>
   14448:	mov	sp, fp
   1444c:	pop	{fp, pc}
   14450:	push	{fp, lr}
   14454:	mov	fp, sp
   14458:	sub	sp, sp, #8
   1445c:	mov	ip, #6
   14460:	str	ip, [sp]
   14464:	bl	140dc <__mempcpy_chk@plt+0x3038>
   14468:	mov	sp, fp
   1446c:	pop	{fp, pc}
   14470:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14474:	add	fp, sp, #24
   14478:	sub	sp, sp, #32
   1447c:	ldr	r6, [fp, #12]
   14480:	ldr	r7, [fp, #8]
   14484:	mov	r4, r2
   14488:	mov	r8, r0
   1448c:	cmp	r1, #0
   14490:	beq	144b8 <__mempcpy_chk@plt+0x3414>
   14494:	movw	r2, #24639	; 0x603f
   14498:	mov	r5, r1
   1449c:	str	r3, [sp, #4]
   144a0:	str	r4, [sp]
   144a4:	mov	r0, r8
   144a8:	mov	r1, #1
   144ac:	movt	r2, #1
   144b0:	mov	r3, r5
   144b4:	b	144d0 <__mempcpy_chk@plt+0x342c>
   144b8:	movw	r2, #24651	; 0x604b
   144bc:	str	r3, [sp]
   144c0:	mov	r0, r8
   144c4:	mov	r1, #1
   144c8:	mov	r3, r4
   144cc:	movt	r2, #1
   144d0:	bl	10ffc <__fprintf_chk@plt>
   144d4:	movw	r1, #24658	; 0x6052
   144d8:	mov	r0, #0
   144dc:	mov	r2, #5
   144e0:	movt	r1, #1
   144e4:	bl	10eb8 <dcgettext@plt>
   144e8:	movw	r2, #25376	; 0x6320
   144ec:	mov	r3, r0
   144f0:	movw	r0, #2022	; 0x7e6
   144f4:	mov	r1, #1
   144f8:	str	r0, [sp]
   144fc:	movt	r2, #1
   14500:	mov	r0, r8
   14504:	bl	10ffc <__fprintf_chk@plt>
   14508:	movw	r4, #24034	; 0x5de2
   1450c:	mov	r1, r8
   14510:	movt	r4, #1
   14514:	mov	r0, r4
   14518:	bl	10e40 <fputs_unlocked@plt>
   1451c:	movw	r1, #24662	; 0x6056
   14520:	mov	r0, #0
   14524:	mov	r2, #5
   14528:	movt	r1, #1
   1452c:	bl	10eb8 <dcgettext@plt>
   14530:	movw	r3, #24833	; 0x6101
   14534:	mov	r2, r0
   14538:	mov	r0, r8
   1453c:	mov	r1, #1
   14540:	movt	r3, #1
   14544:	bl	10ffc <__fprintf_chk@plt>
   14548:	mov	r0, r4
   1454c:	mov	r1, r8
   14550:	bl	10e40 <fputs_unlocked@plt>
   14554:	cmp	r6, #9
   14558:	bhi	14594 <__mempcpy_chk@plt+0x34f0>
   1455c:	add	r0, pc, #0
   14560:	ldr	pc, [r0, r6, lsl #2]
   14564:	andeq	r4, r1, ip, lsl #11
   14568:	andeq	r4, r1, r0, lsr #11
   1456c:	ldrdeq	r4, [r1], -r0
   14570:	strdeq	r4, [r1], -r8
   14574:	andeq	r4, r1, r0, lsr #12
   14578:	andeq	r4, r1, r8, asr #12
   1457c:	andeq	r4, r1, r0, ror r6
   14580:	andeq	r4, r1, r8, lsr #13
   14584:	andeq	r4, r1, r0, asr r7
   14588:	strdeq	r4, [r1], -r8
   1458c:	sub	sp, fp, #24
   14590:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14594:	movw	r1, #25186	; 0x6262
   14598:	movt	r1, #1
   1459c:	b	14700 <__mempcpy_chk@plt+0x365c>
   145a0:	movw	r1, #24867	; 0x6123
   145a4:	mov	r0, #0
   145a8:	mov	r2, #5
   145ac:	movt	r1, #1
   145b0:	bl	10eb8 <dcgettext@plt>
   145b4:	ldr	r3, [r7]
   145b8:	mov	r2, r0
   145bc:	mov	r0, r8
   145c0:	mov	r1, #1
   145c4:	sub	sp, fp, #24
   145c8:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   145cc:	b	10ffc <__fprintf_chk@plt>
   145d0:	movw	r1, #24883	; 0x6133
   145d4:	mov	r0, #0
   145d8:	mov	r2, #5
   145dc:	movt	r1, #1
   145e0:	bl	10eb8 <dcgettext@plt>
   145e4:	mov	r2, r0
   145e8:	ldr	r3, [r7]
   145ec:	ldr	r0, [r7, #4]
   145f0:	str	r0, [sp]
   145f4:	b	146e4 <__mempcpy_chk@plt+0x3640>
   145f8:	movw	r1, #24906	; 0x614a
   145fc:	mov	r0, #0
   14600:	mov	r2, #5
   14604:	movt	r1, #1
   14608:	bl	10eb8 <dcgettext@plt>
   1460c:	ldr	r3, [r7]
   14610:	mov	r2, r0
   14614:	ldmib	r7, {r0, r1}
   14618:	stm	sp, {r0, r1}
   1461c:	b	146e4 <__mempcpy_chk@plt+0x3640>
   14620:	movw	r1, #24934	; 0x6166
   14624:	mov	r0, #0
   14628:	mov	r2, #5
   1462c:	movt	r1, #1
   14630:	bl	10eb8 <dcgettext@plt>
   14634:	ldr	r3, [r7]
   14638:	mov	r2, r0
   1463c:	ldmib	r7, {r0, r1, r7}
   14640:	stm	sp, {r0, r1, r7}
   14644:	b	146e4 <__mempcpy_chk@plt+0x3640>
   14648:	movw	r1, #24966	; 0x6186
   1464c:	mov	r0, #0
   14650:	mov	r2, #5
   14654:	movt	r1, #1
   14658:	bl	10eb8 <dcgettext@plt>
   1465c:	ldr	r3, [r7]
   14660:	mov	r2, r0
   14664:	ldmib	r7, {r0, r1, r6, r7}
   14668:	stm	sp, {r0, r1, r6, r7}
   1466c:	b	146e4 <__mempcpy_chk@plt+0x3640>
   14670:	movw	r1, #25002	; 0x61aa
   14674:	mov	r0, #0
   14678:	mov	r2, #5
   1467c:	movt	r1, #1
   14680:	bl	10eb8 <dcgettext@plt>
   14684:	ldr	r3, [r7]
   14688:	mov	r2, r0
   1468c:	ldmib	r7, {r0, r1, r6}
   14690:	ldr	r5, [r7, #16]
   14694:	ldr	r7, [r7, #20]
   14698:	stm	sp, {r0, r1, r6}
   1469c:	str	r5, [sp, #12]
   146a0:	str	r7, [sp, #16]
   146a4:	b	146e4 <__mempcpy_chk@plt+0x3640>
   146a8:	movw	r1, #25042	; 0x61d2
   146ac:	mov	r0, #0
   146b0:	mov	r2, #5
   146b4:	movt	r1, #1
   146b8:	bl	10eb8 <dcgettext@plt>
   146bc:	ldr	r3, [r7]
   146c0:	mov	r2, r0
   146c4:	ldmib	r7, {r0, r1, r6}
   146c8:	ldr	r5, [r7, #16]
   146cc:	ldr	r4, [r7, #20]
   146d0:	ldr	r7, [r7, #24]
   146d4:	stm	sp, {r0, r1, r6}
   146d8:	str	r5, [sp, #12]
   146dc:	str	r4, [sp, #16]
   146e0:	str	r7, [sp, #20]
   146e4:	mov	r0, r8
   146e8:	mov	r1, #1
   146ec:	bl	10ffc <__fprintf_chk@plt>
   146f0:	sub	sp, fp, #24
   146f4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   146f8:	movw	r1, #25134	; 0x622e
   146fc:	movt	r1, #1
   14700:	mov	r0, #0
   14704:	mov	r2, #5
   14708:	bl	10eb8 <dcgettext@plt>
   1470c:	mov	ip, r0
   14710:	ldr	r3, [r7]
   14714:	ldr	r0, [r7, #4]
   14718:	ldr	r1, [r7, #8]
   1471c:	ldr	r6, [r7, #12]
   14720:	ldr	r5, [r7, #16]
   14724:	ldr	r4, [r7, #20]
   14728:	ldr	r2, [r7, #24]
   1472c:	ldr	lr, [r7, #28]
   14730:	ldr	r7, [r7, #32]
   14734:	stm	sp, {r0, r1, r6}
   14738:	str	r5, [sp, #12]
   1473c:	str	r4, [sp, #16]
   14740:	str	r2, [sp, #20]
   14744:	str	lr, [sp, #24]
   14748:	str	r7, [sp, #28]
   1474c:	b	14794 <__mempcpy_chk@plt+0x36f0>
   14750:	movw	r1, #25086	; 0x61fe
   14754:	mov	r0, #0
   14758:	mov	r2, #5
   1475c:	movt	r1, #1
   14760:	bl	10eb8 <dcgettext@plt>
   14764:	mov	ip, r0
   14768:	ldr	r3, [r7]
   1476c:	ldmib	r7, {r0, r1, r6}
   14770:	ldr	r5, [r7, #16]
   14774:	ldr	r4, [r7, #20]
   14778:	ldr	r2, [r7, #24]
   1477c:	ldr	r7, [r7, #28]
   14780:	stm	sp, {r0, r1, r6}
   14784:	str	r5, [sp, #12]
   14788:	str	r4, [sp, #16]
   1478c:	str	r2, [sp, #20]
   14790:	str	r7, [sp, #24]
   14794:	mov	r0, r8
   14798:	mov	r1, #1
   1479c:	mov	r2, ip
   147a0:	bl	10ffc <__fprintf_chk@plt>
   147a4:	sub	sp, fp, #24
   147a8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   147ac:	push	{r4, sl, fp, lr}
   147b0:	add	fp, sp, #8
   147b4:	sub	sp, sp, #8
   147b8:	ldr	ip, [fp, #8]
   147bc:	mov	lr, #0
   147c0:	ldr	r4, [ip, lr, lsl #2]
   147c4:	add	lr, lr, #1
   147c8:	cmp	r4, #0
   147cc:	bne	147c0 <__mempcpy_chk@plt+0x371c>
   147d0:	sub	r4, lr, #1
   147d4:	str	ip, [sp]
   147d8:	str	r4, [sp, #4]
   147dc:	bl	14470 <__mempcpy_chk@plt+0x33cc>
   147e0:	sub	sp, fp, #8
   147e4:	pop	{r4, sl, fp, pc}
   147e8:	push	{fp, lr}
   147ec:	mov	fp, sp
   147f0:	sub	sp, sp, #48	; 0x30
   147f4:	ldr	ip, [fp, #8]
   147f8:	ldr	lr, [ip]
   147fc:	cmp	lr, #0
   14800:	str	lr, [sp, #8]
   14804:	beq	148a0 <__mempcpy_chk@plt+0x37fc>
   14808:	ldr	lr, [ip, #4]
   1480c:	cmp	lr, #0
   14810:	str	lr, [sp, #12]
   14814:	beq	148a8 <__mempcpy_chk@plt+0x3804>
   14818:	ldr	lr, [ip, #8]
   1481c:	cmp	lr, #0
   14820:	str	lr, [sp, #16]
   14824:	beq	148b0 <__mempcpy_chk@plt+0x380c>
   14828:	ldr	lr, [ip, #12]
   1482c:	cmp	lr, #0
   14830:	str	lr, [sp, #20]
   14834:	beq	148b8 <__mempcpy_chk@plt+0x3814>
   14838:	ldr	lr, [ip, #16]
   1483c:	cmp	lr, #0
   14840:	str	lr, [sp, #24]
   14844:	beq	148c0 <__mempcpy_chk@plt+0x381c>
   14848:	ldr	lr, [ip, #20]
   1484c:	cmp	lr, #0
   14850:	str	lr, [sp, #28]
   14854:	beq	148c8 <__mempcpy_chk@plt+0x3824>
   14858:	ldr	lr, [ip, #24]
   1485c:	cmp	lr, #0
   14860:	str	lr, [sp, #32]
   14864:	beq	148d0 <__mempcpy_chk@plt+0x382c>
   14868:	ldr	lr, [ip, #28]
   1486c:	cmp	lr, #0
   14870:	str	lr, [sp, #36]	; 0x24
   14874:	beq	148d8 <__mempcpy_chk@plt+0x3834>
   14878:	ldr	lr, [ip, #32]
   1487c:	cmp	lr, #0
   14880:	str	lr, [sp, #40]	; 0x28
   14884:	beq	148e0 <__mempcpy_chk@plt+0x383c>
   14888:	ldr	lr, [ip, #36]	; 0x24
   1488c:	mov	ip, #10
   14890:	cmp	lr, #0
   14894:	str	lr, [sp, #44]	; 0x2c
   14898:	movweq	ip, #9
   1489c:	b	148e4 <__mempcpy_chk@plt+0x3840>
   148a0:	mov	ip, #0
   148a4:	b	148e4 <__mempcpy_chk@plt+0x3840>
   148a8:	mov	ip, #1
   148ac:	b	148e4 <__mempcpy_chk@plt+0x3840>
   148b0:	mov	ip, #2
   148b4:	b	148e4 <__mempcpy_chk@plt+0x3840>
   148b8:	mov	ip, #3
   148bc:	b	148e4 <__mempcpy_chk@plt+0x3840>
   148c0:	mov	ip, #4
   148c4:	b	148e4 <__mempcpy_chk@plt+0x3840>
   148c8:	mov	ip, #5
   148cc:	b	148e4 <__mempcpy_chk@plt+0x3840>
   148d0:	mov	ip, #6
   148d4:	b	148e4 <__mempcpy_chk@plt+0x3840>
   148d8:	mov	ip, #7
   148dc:	b	148e4 <__mempcpy_chk@plt+0x3840>
   148e0:	mov	ip, #8
   148e4:	add	lr, sp, #8
   148e8:	str	ip, [sp, #4]
   148ec:	str	lr, [sp]
   148f0:	bl	14470 <__mempcpy_chk@plt+0x33cc>
   148f4:	mov	sp, fp
   148f8:	pop	{fp, pc}
   148fc:	push	{fp, lr}
   14900:	mov	fp, sp
   14904:	sub	sp, sp, #56	; 0x38
   14908:	add	ip, fp, #8
   1490c:	str	ip, [sp, #12]
   14910:	ldr	lr, [fp, #8]
   14914:	cmp	lr, #0
   14918:	str	lr, [sp, #16]
   1491c:	beq	149b8 <__mempcpy_chk@plt+0x3914>
   14920:	ldr	lr, [ip, #4]
   14924:	cmp	lr, #0
   14928:	str	lr, [sp, #20]
   1492c:	beq	149c0 <__mempcpy_chk@plt+0x391c>
   14930:	ldr	lr, [ip, #8]
   14934:	cmp	lr, #0
   14938:	str	lr, [sp, #24]
   1493c:	beq	149c8 <__mempcpy_chk@plt+0x3924>
   14940:	ldr	lr, [ip, #12]
   14944:	cmp	lr, #0
   14948:	str	lr, [sp, #28]
   1494c:	beq	149d0 <__mempcpy_chk@plt+0x392c>
   14950:	ldr	lr, [ip, #16]
   14954:	cmp	lr, #0
   14958:	str	lr, [sp, #32]
   1495c:	beq	149d8 <__mempcpy_chk@plt+0x3934>
   14960:	ldr	lr, [ip, #20]
   14964:	cmp	lr, #0
   14968:	str	lr, [sp, #36]	; 0x24
   1496c:	beq	149e0 <__mempcpy_chk@plt+0x393c>
   14970:	ldr	lr, [ip, #24]
   14974:	cmp	lr, #0
   14978:	str	lr, [sp, #40]	; 0x28
   1497c:	beq	149e8 <__mempcpy_chk@plt+0x3944>
   14980:	ldr	lr, [ip, #28]
   14984:	cmp	lr, #0
   14988:	str	lr, [sp, #44]	; 0x2c
   1498c:	beq	149f0 <__mempcpy_chk@plt+0x394c>
   14990:	ldr	lr, [ip, #32]
   14994:	cmp	lr, #0
   14998:	str	lr, [sp, #48]	; 0x30
   1499c:	beq	149f8 <__mempcpy_chk@plt+0x3954>
   149a0:	ldr	lr, [ip, #36]	; 0x24
   149a4:	mov	ip, #10
   149a8:	cmp	lr, #0
   149ac:	str	lr, [sp, #52]	; 0x34
   149b0:	movweq	ip, #9
   149b4:	b	149fc <__mempcpy_chk@plt+0x3958>
   149b8:	mov	ip, #0
   149bc:	b	149fc <__mempcpy_chk@plt+0x3958>
   149c0:	mov	ip, #1
   149c4:	b	149fc <__mempcpy_chk@plt+0x3958>
   149c8:	mov	ip, #2
   149cc:	b	149fc <__mempcpy_chk@plt+0x3958>
   149d0:	mov	ip, #3
   149d4:	b	149fc <__mempcpy_chk@plt+0x3958>
   149d8:	mov	ip, #4
   149dc:	b	149fc <__mempcpy_chk@plt+0x3958>
   149e0:	mov	ip, #5
   149e4:	b	149fc <__mempcpy_chk@plt+0x3958>
   149e8:	mov	ip, #6
   149ec:	b	149fc <__mempcpy_chk@plt+0x3958>
   149f0:	mov	ip, #7
   149f4:	b	149fc <__mempcpy_chk@plt+0x3958>
   149f8:	mov	ip, #8
   149fc:	add	lr, sp, #16
   14a00:	str	ip, [sp, #4]
   14a04:	str	lr, [sp]
   14a08:	bl	14470 <__mempcpy_chk@plt+0x33cc>
   14a0c:	mov	sp, fp
   14a10:	pop	{fp, pc}
   14a14:	push	{fp, lr}
   14a18:	mov	fp, sp
   14a1c:	movw	r0, #29004	; 0x714c
   14a20:	movt	r0, #2
   14a24:	ldr	r1, [r0]
   14a28:	movw	r0, #24034	; 0x5de2
   14a2c:	movt	r0, #1
   14a30:	bl	10e40 <fputs_unlocked@plt>
   14a34:	movw	r1, #25246	; 0x629e
   14a38:	mov	r0, #0
   14a3c:	mov	r2, #5
   14a40:	movt	r1, #1
   14a44:	bl	10eb8 <dcgettext@plt>
   14a48:	movw	r2, #25266	; 0x62b2
   14a4c:	mov	r1, r0
   14a50:	mov	r0, #1
   14a54:	movt	r2, #1
   14a58:	bl	10fe4 <__printf_chk@plt>
   14a5c:	movw	r1, #25288	; 0x62c8
   14a60:	mov	r0, #0
   14a64:	mov	r2, #5
   14a68:	movt	r1, #1
   14a6c:	bl	10eb8 <dcgettext@plt>
   14a70:	movw	r2, #23336	; 0x5b28
   14a74:	movw	r3, #23843	; 0x5d23
   14a78:	mov	r1, r0
   14a7c:	mov	r0, #1
   14a80:	movt	r2, #1
   14a84:	movt	r3, #1
   14a88:	bl	10fe4 <__printf_chk@plt>
   14a8c:	movw	r1, #25308	; 0x62dc
   14a90:	mov	r0, #0
   14a94:	mov	r2, #5
   14a98:	movt	r1, #1
   14a9c:	bl	10eb8 <dcgettext@plt>
   14aa0:	movw	r2, #25347	; 0x6303
   14aa4:	mov	r1, r0
   14aa8:	mov	r0, #1
   14aac:	movt	r2, #1
   14ab0:	pop	{fp, lr}
   14ab4:	b	10fe4 <__printf_chk@plt>
   14ab8:	push	{r4, r5, r6, sl, fp, lr}
   14abc:	add	fp, sp, #16
   14ac0:	mov	r4, r2
   14ac4:	mov	r5, r1
   14ac8:	mov	r6, r0
   14acc:	bl	15244 <__mempcpy_chk@plt+0x41a0>
   14ad0:	cmp	r0, #0
   14ad4:	popne	{r4, r5, r6, sl, fp, pc}
   14ad8:	cmp	r6, #0
   14adc:	beq	14af0 <__mempcpy_chk@plt+0x3a4c>
   14ae0:	cmp	r5, #0
   14ae4:	cmpne	r4, #0
   14ae8:	bne	14af0 <__mempcpy_chk@plt+0x3a4c>
   14aec:	pop	{r4, r5, r6, sl, fp, pc}
   14af0:	bl	15090 <__mempcpy_chk@plt+0x3fec>
   14af4:	push	{r4, r5, r6, sl, fp, lr}
   14af8:	add	fp, sp, #16
   14afc:	mov	r4, r2
   14b00:	mov	r5, r1
   14b04:	mov	r6, r0
   14b08:	bl	15244 <__mempcpy_chk@plt+0x41a0>
   14b0c:	cmp	r0, #0
   14b10:	popne	{r4, r5, r6, sl, fp, pc}
   14b14:	cmp	r6, #0
   14b18:	beq	14b2c <__mempcpy_chk@plt+0x3a88>
   14b1c:	cmp	r5, #0
   14b20:	cmpne	r4, #0
   14b24:	bne	14b2c <__mempcpy_chk@plt+0x3a88>
   14b28:	pop	{r4, r5, r6, sl, fp, pc}
   14b2c:	bl	15090 <__mempcpy_chk@plt+0x3fec>
   14b30:	push	{fp, lr}
   14b34:	mov	fp, sp
   14b38:	bl	15128 <__mempcpy_chk@plt+0x4084>
   14b3c:	cmp	r0, #0
   14b40:	popne	{fp, pc}
   14b44:	bl	15090 <__mempcpy_chk@plt+0x3fec>
   14b48:	push	{fp, lr}
   14b4c:	mov	fp, sp
   14b50:	bl	15128 <__mempcpy_chk@plt+0x4084>
   14b54:	cmp	r0, #0
   14b58:	popne	{fp, pc}
   14b5c:	bl	15090 <__mempcpy_chk@plt+0x3fec>
   14b60:	push	{fp, lr}
   14b64:	mov	fp, sp
   14b68:	bl	15128 <__mempcpy_chk@plt+0x4084>
   14b6c:	cmp	r0, #0
   14b70:	popne	{fp, pc}
   14b74:	bl	15090 <__mempcpy_chk@plt+0x3fec>
   14b78:	push	{r4, r5, fp, lr}
   14b7c:	add	fp, sp, #8
   14b80:	mov	r4, r1
   14b84:	mov	r5, r0
   14b88:	bl	15158 <__mempcpy_chk@plt+0x40b4>
   14b8c:	cmp	r0, #0
   14b90:	popne	{r4, r5, fp, pc}
   14b94:	cmp	r5, #0
   14b98:	beq	14ba8 <__mempcpy_chk@plt+0x3b04>
   14b9c:	cmp	r4, #0
   14ba0:	bne	14ba8 <__mempcpy_chk@plt+0x3b04>
   14ba4:	pop	{r4, r5, fp, pc}
   14ba8:	bl	15090 <__mempcpy_chk@plt+0x3fec>
   14bac:	push	{fp, lr}
   14bb0:	mov	fp, sp
   14bb4:	cmp	r1, #0
   14bb8:	orreq	r1, r1, #1
   14bbc:	bl	15158 <__mempcpy_chk@plt+0x40b4>
   14bc0:	cmp	r0, #0
   14bc4:	popne	{fp, pc}
   14bc8:	bl	15090 <__mempcpy_chk@plt+0x3fec>
   14bcc:	push	{fp, lr}
   14bd0:	mov	fp, sp
   14bd4:	clz	r3, r2
   14bd8:	lsr	ip, r3, #5
   14bdc:	clz	r3, r1
   14be0:	lsr	r3, r3, #5
   14be4:	orrs	r3, r3, ip
   14be8:	movwne	r1, #1
   14bec:	movwne	r2, #1
   14bf0:	bl	15244 <__mempcpy_chk@plt+0x41a0>
   14bf4:	cmp	r0, #0
   14bf8:	popne	{fp, pc}
   14bfc:	bl	15090 <__mempcpy_chk@plt+0x3fec>
   14c00:	push	{fp, lr}
   14c04:	mov	fp, sp
   14c08:	mov	r2, r1
   14c0c:	mov	r1, r0
   14c10:	mov	r0, #0
   14c14:	bl	15244 <__mempcpy_chk@plt+0x41a0>
   14c18:	cmp	r0, #0
   14c1c:	popne	{fp, pc}
   14c20:	bl	15090 <__mempcpy_chk@plt+0x3fec>
   14c24:	push	{fp, lr}
   14c28:	mov	fp, sp
   14c2c:	mov	r2, r1
   14c30:	mov	r1, r0
   14c34:	clz	r0, r2
   14c38:	clz	r3, r1
   14c3c:	lsr	r0, r0, #5
   14c40:	lsr	r3, r3, #5
   14c44:	orrs	r0, r3, r0
   14c48:	movwne	r1, #1
   14c4c:	movwne	r2, #1
   14c50:	mov	r0, #0
   14c54:	bl	15244 <__mempcpy_chk@plt+0x41a0>
   14c58:	cmp	r0, #0
   14c5c:	popne	{fp, pc}
   14c60:	bl	15090 <__mempcpy_chk@plt+0x3fec>
   14c64:	push	{r4, r5, r6, sl, fp, lr}
   14c68:	add	fp, sp, #16
   14c6c:	ldr	r5, [r1]
   14c70:	mov	r4, r1
   14c74:	mov	r6, r0
   14c78:	cmp	r0, #0
   14c7c:	beq	14c94 <__mempcpy_chk@plt+0x3bf0>
   14c80:	mov	r0, #1
   14c84:	add	r0, r0, r5, lsr #1
   14c88:	adds	r5, r5, r0
   14c8c:	bcc	14c9c <__mempcpy_chk@plt+0x3bf8>
   14c90:	b	14cd8 <__mempcpy_chk@plt+0x3c34>
   14c94:	cmp	r5, #0
   14c98:	movweq	r5, #64	; 0x40
   14c9c:	mov	r0, r6
   14ca0:	mov	r1, r5
   14ca4:	mov	r2, #1
   14ca8:	bl	15244 <__mempcpy_chk@plt+0x41a0>
   14cac:	cmp	r5, #0
   14cb0:	mov	r1, r5
   14cb4:	movwne	r1, #1
   14cb8:	cmp	r0, #0
   14cbc:	bne	14cd0 <__mempcpy_chk@plt+0x3c2c>
   14cc0:	clz	r2, r6
   14cc4:	lsr	r2, r2, #5
   14cc8:	orrs	r1, r2, r1
   14ccc:	bne	14cd8 <__mempcpy_chk@plt+0x3c34>
   14cd0:	str	r5, [r4]
   14cd4:	pop	{r4, r5, r6, sl, fp, pc}
   14cd8:	bl	15090 <__mempcpy_chk@plt+0x3fec>
   14cdc:	push	{r4, r5, r6, r7, fp, lr}
   14ce0:	add	fp, sp, #16
   14ce4:	ldr	r5, [r1]
   14ce8:	mov	r6, r2
   14cec:	mov	r4, r1
   14cf0:	mov	r7, r0
   14cf4:	cmp	r0, #0
   14cf8:	beq	14d10 <__mempcpy_chk@plt+0x3c6c>
   14cfc:	mov	r0, #1
   14d00:	add	r0, r0, r5, lsr #1
   14d04:	adds	r5, r5, r0
   14d08:	bcc	14d28 <__mempcpy_chk@plt+0x3c84>
   14d0c:	b	14d5c <__mempcpy_chk@plt+0x3cb8>
   14d10:	cmp	r5, #0
   14d14:	bne	14d28 <__mempcpy_chk@plt+0x3c84>
   14d18:	mov	r0, #64	; 0x40
   14d1c:	cmp	r6, #64	; 0x40
   14d20:	udiv	r5, r0, r6
   14d24:	addhi	r5, r5, #1
   14d28:	mov	r0, r7
   14d2c:	mov	r1, r5
   14d30:	mov	r2, r6
   14d34:	bl	15244 <__mempcpy_chk@plt+0x41a0>
   14d38:	cmp	r0, #0
   14d3c:	bne	14d54 <__mempcpy_chk@plt+0x3cb0>
   14d40:	cmp	r7, #0
   14d44:	beq	14d5c <__mempcpy_chk@plt+0x3cb8>
   14d48:	cmp	r6, #0
   14d4c:	cmpne	r5, #0
   14d50:	bne	14d5c <__mempcpy_chk@plt+0x3cb8>
   14d54:	str	r5, [r4]
   14d58:	pop	{r4, r5, r6, r7, fp, pc}
   14d5c:	bl	15090 <__mempcpy_chk@plt+0x3fec>
   14d60:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14d64:	add	fp, sp, #24
   14d68:	mov	r8, r1
   14d6c:	ldr	r1, [r1]
   14d70:	mov	r5, r0
   14d74:	add	r0, r1, r1, asr #1
   14d78:	cmp	r0, r1
   14d7c:	mvnvs	r0, #-2147483648	; 0x80000000
   14d80:	cmp	r0, r3
   14d84:	mov	r7, r0
   14d88:	movgt	r7, r3
   14d8c:	cmn	r3, #1
   14d90:	movle	r7, r0
   14d94:	ldr	r0, [fp, #8]
   14d98:	cmn	r0, #1
   14d9c:	ble	14dc4 <__mempcpy_chk@plt+0x3d20>
   14da0:	cmp	r0, #0
   14da4:	beq	14e18 <__mempcpy_chk@plt+0x3d74>
   14da8:	cmn	r7, #1
   14dac:	ble	14dec <__mempcpy_chk@plt+0x3d48>
   14db0:	mvn	r4, #-2147483648	; 0x80000000
   14db4:	udiv	r6, r4, r0
   14db8:	cmp	r6, r7
   14dbc:	bge	14e18 <__mempcpy_chk@plt+0x3d74>
   14dc0:	b	14e28 <__mempcpy_chk@plt+0x3d84>
   14dc4:	cmn	r7, #1
   14dc8:	ble	14e08 <__mempcpy_chk@plt+0x3d64>
   14dcc:	cmn	r0, #1
   14dd0:	beq	14e18 <__mempcpy_chk@plt+0x3d74>
   14dd4:	mov	r6, #-2147483648	; 0x80000000
   14dd8:	mvn	r4, #-2147483648	; 0x80000000
   14ddc:	sdiv	r6, r6, r0
   14de0:	cmp	r6, r7
   14de4:	bge	14e18 <__mempcpy_chk@plt+0x3d74>
   14de8:	b	14e28 <__mempcpy_chk@plt+0x3d84>
   14dec:	beq	14e18 <__mempcpy_chk@plt+0x3d74>
   14df0:	mov	r6, #-2147483648	; 0x80000000
   14df4:	mvn	r4, #-2147483648	; 0x80000000
   14df8:	sdiv	r6, r6, r7
   14dfc:	cmp	r6, r0
   14e00:	bge	14e18 <__mempcpy_chk@plt+0x3d74>
   14e04:	b	14e28 <__mempcpy_chk@plt+0x3d84>
   14e08:	mvn	r4, #-2147483648	; 0x80000000
   14e0c:	sdiv	r6, r4, r0
   14e10:	cmp	r7, r6
   14e14:	blt	14e28 <__mempcpy_chk@plt+0x3d84>
   14e18:	mul	r6, r7, r0
   14e1c:	mov	r4, #64	; 0x40
   14e20:	cmp	r6, #63	; 0x3f
   14e24:	bgt	14e30 <__mempcpy_chk@plt+0x3d8c>
   14e28:	sdiv	r7, r4, r0
   14e2c:	mul	r6, r7, r0
   14e30:	cmp	r5, #0
   14e34:	moveq	r4, #0
   14e38:	streq	r4, [r8]
   14e3c:	sub	r4, r7, r1
   14e40:	cmp	r4, r2
   14e44:	bge	14ef0 <__mempcpy_chk@plt+0x3e4c>
   14e48:	add	r7, r1, r2
   14e4c:	mov	r6, #0
   14e50:	mov	r2, #0
   14e54:	cmp	r7, r3
   14e58:	movwgt	r6, #1
   14e5c:	cmn	r3, #1
   14e60:	movwgt	r2, #1
   14e64:	cmp	r7, r1
   14e68:	bvs	14f24 <__mempcpy_chk@plt+0x3e80>
   14e6c:	ands	r1, r2, r6
   14e70:	bne	14f24 <__mempcpy_chk@plt+0x3e80>
   14e74:	cmn	r0, #1
   14e78:	ble	14ea0 <__mempcpy_chk@plt+0x3dfc>
   14e7c:	cmp	r0, #0
   14e80:	beq	14eec <__mempcpy_chk@plt+0x3e48>
   14e84:	cmn	r7, #1
   14e88:	ble	14ec4 <__mempcpy_chk@plt+0x3e20>
   14e8c:	mvn	r1, #-2147483648	; 0x80000000
   14e90:	udiv	r1, r1, r0
   14e94:	cmp	r1, r7
   14e98:	bge	14eec <__mempcpy_chk@plt+0x3e48>
   14e9c:	b	14f24 <__mempcpy_chk@plt+0x3e80>
   14ea0:	cmn	r7, #1
   14ea4:	ble	14edc <__mempcpy_chk@plt+0x3e38>
   14ea8:	cmn	r0, #1
   14eac:	beq	14eec <__mempcpy_chk@plt+0x3e48>
   14eb0:	mov	r1, #-2147483648	; 0x80000000
   14eb4:	sdiv	r1, r1, r0
   14eb8:	cmp	r1, r7
   14ebc:	bge	14eec <__mempcpy_chk@plt+0x3e48>
   14ec0:	b	14f24 <__mempcpy_chk@plt+0x3e80>
   14ec4:	beq	14eec <__mempcpy_chk@plt+0x3e48>
   14ec8:	mov	r1, #-2147483648	; 0x80000000
   14ecc:	sdiv	r1, r1, r7
   14ed0:	cmp	r1, r0
   14ed4:	bge	14eec <__mempcpy_chk@plt+0x3e48>
   14ed8:	b	14f24 <__mempcpy_chk@plt+0x3e80>
   14edc:	mvn	r1, #-2147483648	; 0x80000000
   14ee0:	sdiv	r1, r1, r0
   14ee4:	cmp	r7, r1
   14ee8:	blt	14f24 <__mempcpy_chk@plt+0x3e80>
   14eec:	mul	r6, r7, r0
   14ef0:	mov	r0, r5
   14ef4:	mov	r1, r6
   14ef8:	bl	15158 <__mempcpy_chk@plt+0x40b4>
   14efc:	cmp	r6, #0
   14f00:	movwne	r6, #1
   14f04:	cmp	r0, #0
   14f08:	bne	14f1c <__mempcpy_chk@plt+0x3e78>
   14f0c:	clz	r1, r5
   14f10:	lsr	r1, r1, #5
   14f14:	orrs	r1, r1, r6
   14f18:	bne	14f24 <__mempcpy_chk@plt+0x3e80>
   14f1c:	str	r7, [r8]
   14f20:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14f24:	bl	15090 <__mempcpy_chk@plt+0x3fec>
   14f28:	push	{fp, lr}
   14f2c:	mov	fp, sp
   14f30:	mov	r1, #1
   14f34:	bl	150d4 <__mempcpy_chk@plt+0x4030>
   14f38:	cmp	r0, #0
   14f3c:	popne	{fp, pc}
   14f40:	bl	15090 <__mempcpy_chk@plt+0x3fec>
   14f44:	push	{fp, lr}
   14f48:	mov	fp, sp
   14f4c:	bl	150d4 <__mempcpy_chk@plt+0x4030>
   14f50:	cmp	r0, #0
   14f54:	popne	{fp, pc}
   14f58:	bl	15090 <__mempcpy_chk@plt+0x3fec>
   14f5c:	push	{fp, lr}
   14f60:	mov	fp, sp
   14f64:	mov	r1, #1
   14f68:	bl	150d4 <__mempcpy_chk@plt+0x4030>
   14f6c:	cmp	r0, #0
   14f70:	popne	{fp, pc}
   14f74:	bl	15090 <__mempcpy_chk@plt+0x3fec>
   14f78:	push	{fp, lr}
   14f7c:	mov	fp, sp
   14f80:	bl	150d4 <__mempcpy_chk@plt+0x4030>
   14f84:	cmp	r0, #0
   14f88:	popne	{fp, pc}
   14f8c:	bl	15090 <__mempcpy_chk@plt+0x3fec>
   14f90:	push	{r4, r5, r6, sl, fp, lr}
   14f94:	add	fp, sp, #16
   14f98:	mov	r5, r0
   14f9c:	mov	r0, r1
   14fa0:	mov	r4, r1
   14fa4:	bl	15128 <__mempcpy_chk@plt+0x4084>
   14fa8:	cmp	r0, #0
   14fac:	beq	14fc8 <__mempcpy_chk@plt+0x3f24>
   14fb0:	mov	r1, r5
   14fb4:	mov	r2, r4
   14fb8:	mov	r6, r0
   14fbc:	bl	10e94 <memcpy@plt>
   14fc0:	mov	r0, r6
   14fc4:	pop	{r4, r5, r6, sl, fp, pc}
   14fc8:	bl	15090 <__mempcpy_chk@plt+0x3fec>
   14fcc:	push	{r4, r5, r6, sl, fp, lr}
   14fd0:	add	fp, sp, #16
   14fd4:	mov	r5, r0
   14fd8:	mov	r0, r1
   14fdc:	mov	r4, r1
   14fe0:	bl	15128 <__mempcpy_chk@plt+0x4084>
   14fe4:	cmp	r0, #0
   14fe8:	beq	15004 <__mempcpy_chk@plt+0x3f60>
   14fec:	mov	r1, r5
   14ff0:	mov	r2, r4
   14ff4:	mov	r6, r0
   14ff8:	bl	10e94 <memcpy@plt>
   14ffc:	mov	r0, r6
   15000:	pop	{r4, r5, r6, sl, fp, pc}
   15004:	bl	15090 <__mempcpy_chk@plt+0x3fec>
   15008:	push	{r4, r5, r6, sl, fp, lr}
   1500c:	add	fp, sp, #16
   15010:	mov	r5, r0
   15014:	add	r0, r1, #1
   15018:	mov	r4, r1
   1501c:	bl	15128 <__mempcpy_chk@plt+0x4084>
   15020:	cmp	r0, #0
   15024:	beq	1504c <__mempcpy_chk@plt+0x3fa8>
   15028:	mov	r6, r0
   1502c:	mov	r0, #0
   15030:	mov	r1, r5
   15034:	mov	r2, r4
   15038:	strb	r0, [r6, r4]
   1503c:	mov	r0, r6
   15040:	bl	10e94 <memcpy@plt>
   15044:	mov	r0, r6
   15048:	pop	{r4, r5, r6, sl, fp, pc}
   1504c:	bl	15090 <__mempcpy_chk@plt+0x3fec>
   15050:	push	{r4, r5, r6, sl, fp, lr}
   15054:	add	fp, sp, #16
   15058:	mov	r4, r0
   1505c:	bl	10fa8 <strlen@plt>
   15060:	add	r5, r0, #1
   15064:	mov	r0, r5
   15068:	bl	15128 <__mempcpy_chk@plt+0x4084>
   1506c:	cmp	r0, #0
   15070:	beq	1508c <__mempcpy_chk@plt+0x3fe8>
   15074:	mov	r1, r4
   15078:	mov	r2, r5
   1507c:	mov	r6, r0
   15080:	bl	10e94 <memcpy@plt>
   15084:	mov	r0, r6
   15088:	pop	{r4, r5, r6, sl, fp, pc}
   1508c:	bl	15090 <__mempcpy_chk@plt+0x3fec>
   15090:	push	{fp, lr}
   15094:	mov	fp, sp
   15098:	movw	r0, #28916	; 0x70f4
   1509c:	movw	r1, #25423	; 0x634f
   150a0:	mov	r2, #5
   150a4:	movt	r0, #2
   150a8:	movt	r1, #1
   150ac:	ldr	r4, [r0]
   150b0:	mov	r0, #0
   150b4:	bl	10eb8 <dcgettext@plt>
   150b8:	movw	r2, #24307	; 0x5ef3
   150bc:	mov	r3, r0
   150c0:	mov	r0, r4
   150c4:	mov	r1, #0
   150c8:	movt	r2, #1
   150cc:	bl	10f24 <error@plt>
   150d0:	bl	11074 <abort@plt>
   150d4:	clz	r2, r1
   150d8:	clz	r3, r0
   150dc:	lsr	r2, r2, #5
   150e0:	lsr	r3, r3, #5
   150e4:	orrs	r2, r3, r2
   150e8:	movwne	r1, #1
   150ec:	movwne	r0, #1
   150f0:	cmp	r1, #0
   150f4:	beq	15124 <__mempcpy_chk@plt+0x4080>
   150f8:	mvn	r2, #-2147483648	; 0x80000000
   150fc:	udiv	r2, r2, r1
   15100:	cmp	r2, r0
   15104:	bcs	15124 <__mempcpy_chk@plt+0x4080>
   15108:	push	{fp, lr}
   1510c:	mov	fp, sp
   15110:	bl	10fb4 <__errno_location@plt>
   15114:	mov	r1, #12
   15118:	str	r1, [r0]
   1511c:	mov	r0, #0
   15120:	pop	{fp, pc}
   15124:	b	10e34 <calloc@plt>
   15128:	cmp	r0, #0
   1512c:	movweq	r0, #1
   15130:	cmn	r0, #1
   15134:	ble	1513c <__mempcpy_chk@plt+0x4098>
   15138:	b	10f54 <malloc@plt>
   1513c:	push	{fp, lr}
   15140:	mov	fp, sp
   15144:	bl	10fb4 <__errno_location@plt>
   15148:	mov	r1, #12
   1514c:	str	r1, [r0]
   15150:	mov	r0, #0
   15154:	pop	{fp, pc}
   15158:	push	{fp, lr}
   1515c:	mov	fp, sp
   15160:	cmp	r0, #0
   15164:	beq	15180 <__mempcpy_chk@plt+0x40dc>
   15168:	cmp	r1, #0
   1516c:	beq	1518c <__mempcpy_chk@plt+0x40e8>
   15170:	cmn	r1, #1
   15174:	ble	15198 <__mempcpy_chk@plt+0x40f4>
   15178:	pop	{fp, lr}
   1517c:	b	10ec4 <realloc@plt>
   15180:	mov	r0, r1
   15184:	pop	{fp, lr}
   15188:	b	15128 <__mempcpy_chk@plt+0x4084>
   1518c:	bl	11fdc <__mempcpy_chk@plt+0xf38>
   15190:	mov	r0, #0
   15194:	pop	{fp, pc}
   15198:	bl	10fb4 <__errno_location@plt>
   1519c:	mov	r1, #12
   151a0:	str	r1, [r0]
   151a4:	mov	r0, #0
   151a8:	pop	{fp, pc}
   151ac:	push	{fp, lr}
   151b0:	mov	fp, sp
   151b4:	mov	r0, #14
   151b8:	bl	11038 <nl_langinfo@plt>
   151bc:	movw	r1, #24035	; 0x5de3
   151c0:	cmp	r0, #0
   151c4:	movt	r1, #1
   151c8:	movne	r1, r0
   151cc:	movw	r0, #25440	; 0x6360
   151d0:	ldrb	r2, [r1]
   151d4:	movt	r0, #1
   151d8:	cmp	r2, #0
   151dc:	movne	r0, r1
   151e0:	pop	{fp, pc}
   151e4:	push	{r4, r5, r6, r7, fp, lr}
   151e8:	add	fp, sp, #16
   151ec:	sub	sp, sp, #8
   151f0:	add	r5, sp, #4
   151f4:	cmp	r0, #0
   151f8:	mov	r7, r2
   151fc:	mov	r4, r1
   15200:	movne	r5, r0
   15204:	mov	r0, r5
   15208:	bl	10f18 <mbrtowc@plt>
   1520c:	mov	r6, r0
   15210:	cmp	r7, #0
   15214:	beq	15238 <__mempcpy_chk@plt+0x4194>
   15218:	cmn	r6, #2
   1521c:	bcc	15238 <__mempcpy_chk@plt+0x4194>
   15220:	mov	r0, #0
   15224:	bl	15280 <__mempcpy_chk@plt+0x41dc>
   15228:	cmp	r0, #0
   1522c:	ldrbeq	r0, [r4]
   15230:	moveq	r6, #1
   15234:	streq	r0, [r5]
   15238:	mov	r0, r6
   1523c:	sub	sp, fp, #16
   15240:	pop	{r4, r5, r6, r7, fp, pc}
   15244:	cmp	r2, #0
   15248:	beq	15278 <__mempcpy_chk@plt+0x41d4>
   1524c:	mvn	r3, #0
   15250:	udiv	r3, r3, r2
   15254:	cmp	r3, r1
   15258:	bcs	15278 <__mempcpy_chk@plt+0x41d4>
   1525c:	push	{fp, lr}
   15260:	mov	fp, sp
   15264:	bl	10fb4 <__errno_location@plt>
   15268:	mov	r1, #12
   1526c:	str	r1, [r0]
   15270:	mov	r0, #0
   15274:	pop	{fp, pc}
   15278:	mul	r1, r2, r1
   1527c:	b	15158 <__mempcpy_chk@plt+0x40b4>
   15280:	push	{r4, sl, fp, lr}
   15284:	add	fp, sp, #8
   15288:	sub	sp, sp, #264	; 0x108
   1528c:	add	r1, sp, #7
   15290:	movw	r2, #257	; 0x101
   15294:	bl	152e4 <__mempcpy_chk@plt+0x4240>
   15298:	mov	r4, #0
   1529c:	cmp	r0, #0
   152a0:	bne	152d8 <__mempcpy_chk@plt+0x4234>
   152a4:	movw	r1, #25446	; 0x6366
   152a8:	add	r0, sp, #7
   152ac:	movt	r1, #1
   152b0:	bl	10e58 <strcmp@plt>
   152b4:	cmp	r0, #0
   152b8:	beq	152d8 <__mempcpy_chk@plt+0x4234>
   152bc:	movw	r1, #25448	; 0x6368
   152c0:	add	r0, sp, #7
   152c4:	movt	r1, #1
   152c8:	bl	10e58 <strcmp@plt>
   152cc:	mov	r4, r0
   152d0:	cmp	r0, #0
   152d4:	movwne	r4, #1
   152d8:	mov	r0, r4
   152dc:	sub	sp, fp, #8
   152e0:	pop	{r4, sl, fp, pc}
   152e4:	push	{r4, r5, r6, r7, fp, lr}
   152e8:	add	fp, sp, #16
   152ec:	mov	r4, r1
   152f0:	mov	r1, #0
   152f4:	mov	r6, r2
   152f8:	bl	11020 <setlocale@plt>
   152fc:	cmp	r0, #0
   15300:	beq	15330 <__mempcpy_chk@plt+0x428c>
   15304:	mov	r7, r0
   15308:	bl	10fa8 <strlen@plt>
   1530c:	cmp	r0, r6
   15310:	bcs	15350 <__mempcpy_chk@plt+0x42ac>
   15314:	add	r2, r0, #1
   15318:	mov	r0, r4
   1531c:	mov	r1, r7
   15320:	bl	10e94 <memcpy@plt>
   15324:	mov	r5, #0
   15328:	mov	r0, r5
   1532c:	pop	{r4, r5, r6, r7, fp, pc}
   15330:	cmp	r6, #0
   15334:	mov	r5, #22
   15338:	movne	r0, #0
   1533c:	strbne	r0, [r4]
   15340:	movne	r0, r5
   15344:	popne	{r4, r5, r6, r7, fp, pc}
   15348:	mov	r0, r5
   1534c:	pop	{r4, r5, r6, r7, fp, pc}
   15350:	mov	r5, #34	; 0x22
   15354:	cmp	r6, #0
   15358:	beq	15378 <__mempcpy_chk@plt+0x42d4>
   1535c:	sub	r6, r6, #1
   15360:	mov	r0, r4
   15364:	mov	r1, r7
   15368:	mov	r2, r6
   1536c:	bl	10e94 <memcpy@plt>
   15370:	mov	r0, #0
   15374:	strb	r0, [r4, r6]
   15378:	mov	r0, r5
   1537c:	pop	{r4, r5, r6, r7, fp, pc}
   15380:	mov	r1, #0
   15384:	b	11020 <setlocale@plt>
   15388:	cmp	r3, #0
   1538c:	cmpeq	r2, #0
   15390:	bne	153a8 <__mempcpy_chk@plt+0x4304>
   15394:	cmp	r1, #0
   15398:	cmpeq	r0, #0
   1539c:	mvnne	r1, #0
   153a0:	mvnne	r0, #0
   153a4:	b	153c4 <__mempcpy_chk@plt+0x4320>
   153a8:	sub	sp, sp, #8
   153ac:	push	{sp, lr}
   153b0:	bl	153d4 <__mempcpy_chk@plt+0x4330>
   153b4:	ldr	lr, [sp, #4]
   153b8:	add	sp, sp, #8
   153bc:	pop	{r2, r3}
   153c0:	bx	lr
   153c4:	push	{r1, lr}
   153c8:	mov	r0, #8
   153cc:	bl	10e4c <raise@plt>
   153d0:	pop	{r1, pc}
   153d4:	cmp	r1, r3
   153d8:	cmpeq	r0, r2
   153dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   153e0:	mov	r4, r0
   153e4:	movcc	r0, #0
   153e8:	mov	r5, r1
   153ec:	ldr	lr, [sp, #36]	; 0x24
   153f0:	movcc	r1, r0
   153f4:	bcc	154f0 <__mempcpy_chk@plt+0x444c>
   153f8:	cmp	r3, #0
   153fc:	clzeq	ip, r2
   15400:	clzne	ip, r3
   15404:	addeq	ip, ip, #32
   15408:	cmp	r5, #0
   1540c:	clzeq	r1, r4
   15410:	addeq	r1, r1, #32
   15414:	clzne	r1, r5
   15418:	sub	ip, ip, r1
   1541c:	sub	sl, ip, #32
   15420:	lsl	r9, r3, ip
   15424:	rsb	fp, ip, #32
   15428:	orr	r9, r9, r2, lsl sl
   1542c:	orr	r9, r9, r2, lsr fp
   15430:	lsl	r8, r2, ip
   15434:	cmp	r5, r9
   15438:	cmpeq	r4, r8
   1543c:	movcc	r0, #0
   15440:	movcc	r1, r0
   15444:	bcc	15460 <__mempcpy_chk@plt+0x43bc>
   15448:	mov	r0, #1
   1544c:	subs	r4, r4, r8
   15450:	lsl	r1, r0, sl
   15454:	orr	r1, r1, r0, lsr fp
   15458:	lsl	r0, r0, ip
   1545c:	sbc	r5, r5, r9
   15460:	cmp	ip, #0
   15464:	beq	154f0 <__mempcpy_chk@plt+0x444c>
   15468:	lsr	r6, r8, #1
   1546c:	orr	r6, r6, r9, lsl #31
   15470:	lsr	r7, r9, #1
   15474:	mov	r2, ip
   15478:	b	1549c <__mempcpy_chk@plt+0x43f8>
   1547c:	subs	r3, r4, r6
   15480:	sbc	r8, r5, r7
   15484:	adds	r3, r3, r3
   15488:	adc	r8, r8, r8
   1548c:	adds	r4, r3, #1
   15490:	adc	r5, r8, #0
   15494:	subs	r2, r2, #1
   15498:	beq	154b8 <__mempcpy_chk@plt+0x4414>
   1549c:	cmp	r5, r7
   154a0:	cmpeq	r4, r6
   154a4:	bcs	1547c <__mempcpy_chk@plt+0x43d8>
   154a8:	adds	r4, r4, r4
   154ac:	adc	r5, r5, r5
   154b0:	subs	r2, r2, #1
   154b4:	bne	1549c <__mempcpy_chk@plt+0x43f8>
   154b8:	lsr	r3, r4, ip
   154bc:	orr	r3, r3, r5, lsl fp
   154c0:	lsr	r2, r5, ip
   154c4:	orr	r3, r3, r5, lsr sl
   154c8:	adds	r0, r0, r4
   154cc:	mov	r4, r3
   154d0:	lsl	r3, r2, ip
   154d4:	orr	r3, r3, r4, lsl sl
   154d8:	lsl	ip, r4, ip
   154dc:	orr	r3, r3, r4, lsr fp
   154e0:	adc	r1, r1, r5
   154e4:	subs	r0, r0, ip
   154e8:	mov	r5, r2
   154ec:	sbc	r1, r1, r3
   154f0:	cmp	lr, #0
   154f4:	strdne	r4, [lr]
   154f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   154fc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15500:	mov	r7, r0
   15504:	ldr	r6, [pc, #72]	; 15554 <__mempcpy_chk@plt+0x44b0>
   15508:	ldr	r5, [pc, #72]	; 15558 <__mempcpy_chk@plt+0x44b4>
   1550c:	add	r6, pc, r6
   15510:	add	r5, pc, r5
   15514:	sub	r6, r6, r5
   15518:	mov	r8, r1
   1551c:	mov	r9, r2
   15520:	bl	10e14 <calloc@plt-0x20>
   15524:	asrs	r6, r6, #2
   15528:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1552c:	mov	r4, #0
   15530:	add	r4, r4, #1
   15534:	ldr	r3, [r5], #4
   15538:	mov	r2, r9
   1553c:	mov	r1, r8
   15540:	mov	r0, r7
   15544:	blx	r3
   15548:	cmp	r6, r4
   1554c:	bne	15530 <__mempcpy_chk@plt+0x448c>
   15550:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15554:	strdeq	r1, [r1], -r8
   15558:	strdeq	r1, [r1], -r0
   1555c:	bx	lr
   15560:	ldr	r3, [pc, #12]	; 15574 <__mempcpy_chk@plt+0x44d0>
   15564:	mov	r1, #0
   15568:	add	r3, pc, r3
   1556c:	ldr	r2, [r3]
   15570:	b	10fc0 <__cxa_atexit@plt>
   15574:	andeq	r1, r1, ip, ror fp

Disassembly of section .fini:

00015578 <.fini>:
   15578:	push	{r3, lr}
   1557c:	pop	{r3, pc}
